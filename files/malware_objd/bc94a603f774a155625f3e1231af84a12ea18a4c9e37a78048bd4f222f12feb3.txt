
bc94a603f774a155625f3e1231af84a12ea18a4c9e37a78048bd4f222f12feb3.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xe4
  401009:	or     DWORD PTR ds:0x42c010,0x42b004
  401013:	push   edi
  401014:	adc    DWORD PTR ds:0x42c000,0x42b014
  40101e:	push   0x42e423
  401023:	dec    DWORD PTR ds:0x42a018
  401029:	xor    edi,edi
  40102b:	not    DWORD PTR ds:0x42901c
  401031:	inc    edi
  401032:	push   edi
  401033:	push   edi
  401034:	call   DWORD PTR ds:0x42e9c3
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42b01c,0x7587
  401046:	je     0x401075
  40104c:	lea    eax,[ebp-0x64]
  40104f:	not    DWORD PTR ds:0x42b004
  401055:	push   eax
  401056:	adc    DWORD PTR ds:0x42d00c,0x42d014
  401060:	call   DWORD PTR ds:0x42e98b
  401066:	mov    DWORD PTR ds:0x42a00c,0x7907
  401070:	jmp    0x4026aa
  401075:	sub    DWORD PTR ds:0x42a010,0x42a01c
  40107f:	push   esi
  401080:	mov    esi,DWORD PTR ds:0x42e9cf
  401086:	push   0x8
  401088:	sub    DWORD PTR ds:0x429004,0x42c000
  401092:	push   0x42e433
  401097:	sub    DWORD PTR ds:0x429000,0x1be5
  4010a1:	call   esi
  4010a3:	sbb    DWORD PTR ds:0x42b000,0x42d010
  4010ad:	test   eax,eax
  4010af:	mov    DWORD PTR ds:0x42b000,0x51df
  4010b9:	je     0x4010de
  4010bf:	lea    eax,[ebp-0x64]
  4010c2:	and    DWORD PTR ds:0x42d014,0x42a004
  4010cc:	push   eax
  4010cd:	inc    DWORD PTR ds:0x42d008
  4010d3:	call   DWORD PTR ds:0x42e98b
  4010d9:	jmp    0x4026a9
  4010de:	xor    DWORD PTR ds:0x42a008,0x429000
  4010e8:	push   ebx
  4010e9:	mov    ebx,DWORD PTR ds:0x42e99b
  4010ef:	add    DWORD PTR ds:0x429004,0x5c52
  4010f9:	push   0x42e443
  4010fe:	adc    DWORD PTR ds:0x42c014,0x42b014
  401108:	push   edi
  401109:	push   edi
  40110a:	and    DWORD PTR ds:0x429020,0x61d3
  401114:	call   ebx
  401116:	test   eax,eax
  401118:	mov    DWORD PTR ds:0x42b018,0x2d2c
  401122:	je     0x40115f
  401128:	sbb    DWORD PTR ds:0x42a010,0x429004
  401132:	lea    eax,[ebp-0x64]
  401135:	xor    DWORD PTR ds:0x42c000,0x429008
  40113f:	push   eax
  401140:	or     DWORD PTR ds:0x429000,0x4b22
  40114a:	call   DWORD PTR ds:0x42e98b
  401150:	mov    DWORD PTR ds:0x429004,0x6e7d
  40115a:	jmp    0x4026a8
  40115f:	push   0xc
  401161:	sbb    DWORD PTR ds:0x42d014,0x5298
  40116b:	push   0x42e467
  401170:	sbb    DWORD PTR ds:0x42c010,0x42c008
  40117a:	call   esi
  40117c:	dec    DWORD PTR ds:0x42d000
  401182:	test   eax,eax
  401184:	jne    0x401768
  40118a:	push   0x7
  40118c:	push   0x42e47b
  401191:	call   esi
  401193:	adc    DWORD PTR ds:0x429014,0x42900c
  40119d:	test   eax,eax
  40119f:	mov    DWORD PTR ds:0x42c000,0x2037
  4011a9:	jne    0x401768
  4011af:	push   0x8
  4011b1:	xor    DWORD PTR ds:0x42d010,0x429014
  4011bb:	push   0x42e48b
  4011c0:	and    DWORD PTR ds:0x42d010,0x7e73
  4011ca:	call   esi
  4011cc:	test   eax,eax
  4011ce:	mov    DWORD PTR ds:0x429014,0x43a5
  4011d8:	jne    0x401768
  4011de:	push   0x42e49b
  4011e3:	adc    DWORD PTR ds:0x429014,0x42b00c
  4011ed:	push   edi
  4011ee:	push   edi
  4011ef:	call   DWORD PTR ds:0x42e9c3
  4011f5:	xor    DWORD PTR ds:0x429008,0xc25
  4011ff:	test   eax,eax
  401201:	mov    DWORD PTR ds:0x42b004,0x1e9f
  40120b:	jne    0x401768
  401211:	sbb    DWORD PTR ds:0x42b008,0x42a01c
  40121b:	push   0x42e4ab
  401220:	push   edi
  401221:	sbb    DWORD PTR ds:0x42b000,0x42b018
  40122b:	push   edi
  40122c:	sbb    DWORD PTR ds:0x42a008,0x42c00c
  401236:	call   ebx
  401238:	adc    DWORD PTR ds:0x42a01c,0xefe
  401242:	test   eax,eax
  401244:	mov    DWORD PTR ds:0x42d014,0x5190
  40124e:	jne    0x401768
  401254:	sub    DWORD PTR ds:0x42b000,0x721d
  40125e:	push   0xc
  401260:	add    DWORD PTR ds:0x42d018,0x42c000
  40126a:	push   0x42e4cf
  40126f:	call   esi
  401271:	test   eax,eax
  401273:	mov    DWORD PTR ds:0x42a014,0x465b
  40127d:	jne    0x401768
  401283:	or     DWORD PTR ds:0x42d014,0x42900c
  40128d:	push   0x7
  40128f:	push   0x42e4e3
  401294:	xor    DWORD PTR ds:0x42c014,0x14b0
  40129e:	call   esi
  4012a0:	test   eax,eax
  4012a2:	mov    DWORD PTR ds:0x42a01c,0x4b6
  4012ac:	jne    0x401768
  4012b2:	push   0x8
  4012b4:	or     DWORD PTR ds:0x429028,0x429010
  4012be:	push   0x42e4f3
  4012c3:	sbb    DWORD PTR ds:0x42a010,0x429008
  4012cd:	call   esi
  4012cf:	test   eax,eax
  4012d1:	mov    DWORD PTR ds:0x42a00c,0x7915
  4012db:	jne    0x401768
  4012e1:	or     DWORD PTR ds:0x42b000,0xa15
  4012eb:	push   0x42e503
  4012f0:	push   edi
  4012f1:	sub    DWORD PTR ds:0x42901c,0x42c008
  4012fb:	push   edi
  4012fc:	xor    DWORD PTR ds:0x42a01c,0x42d010
  401306:	call   DWORD PTR ds:0x42e9c3
  40130c:	test   eax,eax
  40130e:	jne    0x401768
  401314:	sub    DWORD PTR ds:0x42d014,0x42a000
  40131e:	push   0x42e513
  401323:	adc    DWORD PTR ds:0x42b018,0x14c4
  40132d:	push   edi
  40132e:	xor    DWORD PTR ds:0x42c008,0x6706
  401338:	push   edi
  401339:	or     DWORD PTR ds:0x42a01c,0x6055
  401343:	call   ebx
  401345:	sub    DWORD PTR ds:0x429014,0x42b00c
  40134f:	test   eax,eax
  401351:	mov    DWORD PTR ds:0x42d00c,0x550a
  40135b:	jne    0x401768
  401361:	push   0xc
  401363:	push   0x42e537
  401368:	adc    DWORD PTR ds:0x42c00c,0x429018
  401372:	call   esi
  401374:	test   eax,eax
  401376:	mov    DWORD PTR ds:0x429024,0x758e
  401380:	jne    0x401768
  401386:	push   0x7
  401388:	adc    DWORD PTR ds:0x429010,0x1615
  401392:	push   0x42e54b
  401397:	sub    DWORD PTR ds:0x429008,0x42b01c
  4013a1:	call   esi
  4013a3:	adc    DWORD PTR ds:0x42c01c,0x7f54
  4013ad:	test   eax,eax
  4013af:	jne    0x401768
  4013b5:	or     DWORD PTR ds:0x429000,0x429008
  4013bf:	push   0x8
  4013c1:	sub    DWORD PTR ds:0x42a000,0x50c8
  4013cb:	push   0x42e55b
  4013d0:	call   esi
  4013d2:	xor    DWORD PTR ds:0x42a018,0x58f3
  4013dc:	test   eax,eax
  4013de:	mov    DWORD PTR ds:0x42a010,0x4d09
  4013e8:	jne    0x401768
  4013ee:	push   0x42e56b
  4013f3:	push   edi
  4013f4:	sbb    DWORD PTR ds:0x42c00c,0x429018
  4013fe:	push   edi
  4013ff:	call   DWORD PTR ds:0x42e9c3
  401405:	sbb    DWORD PTR ds:0x42d008,0x42d004
  40140f:	test   eax,eax
  401411:	mov    DWORD PTR ds:0x42a010,0xbaa
  40141b:	jne    0x401768
  401421:	push   0x42e57b
  401426:	push   edi
  401427:	push   edi
  401428:	call   ebx
  40142a:	sbb    DWORD PTR ds:0x42b000,0x429014
  401434:	test   eax,eax
  401436:	mov    DWORD PTR ds:0x42d008,0x1c53
  401440:	jne    0x401768
  401446:	adc    DWORD PTR ds:0x42a00c,0x429024
  401450:	push   0xc
  401452:	push   0x42e59f
  401457:	sbb    DWORD PTR ds:0x429028,0x2f15
  401461:	call   esi
  401463:	test   eax,eax
  401465:	mov    DWORD PTR ds:0x42d004,0x2bd4
  40146f:	jne    0x401768
  401475:	mov    DWORD PTR ds:0x42d014,0xc7e
  40147f:	push   0x7
  401481:	or     DWORD PTR ds:0x42b01c,0x629c
  40148b:	push   0x42e5b3
  401490:	call   esi
  401492:	xor    DWORD PTR ds:0x429020,0x42c014
  40149c:	test   eax,eax
  40149e:	mov    DWORD PTR ds:0x42b008,0x386
  4014a8:	jne    0x401768
  4014ae:	push   0x8
  4014b0:	push   0x42e5c3
  4014b5:	sub    DWORD PTR ds:0x429024,0x42a008
  4014bf:	call   esi
  4014c1:	sub    DWORD PTR ds:0x42b004,0x42c018
  4014cb:	test   eax,eax
  4014cd:	mov    DWORD PTR ds:0x42900c,0x6fc8
  4014d7:	jne    0x401768
  4014dd:	xor    DWORD PTR ds:0x42d010,0x42901c
  4014e7:	push   0x42e5d3
  4014ec:	and    DWORD PTR ds:0x42d014,0x50c
  4014f6:	push   edi
  4014f7:	push   edi
  4014f8:	sbb    DWORD PTR ds:0x42b000,0x3361
  401502:	call   DWORD PTR ds:0x42e9c3
  401508:	test   eax,eax
  40150a:	mov    DWORD PTR ds:0x42b008,0x5d56
  401514:	jne    0x401768
  40151a:	xor    DWORD PTR ds:0x42a000,0x4d69
  401524:	push   0x42e5e3
  401529:	and    DWORD PTR ds:0x429024,0x42a014
  401533:	push   edi
  401534:	or     DWORD PTR ds:0x42c004,0x3817
  40153e:	push   edi
  40153f:	add    DWORD PTR ds:0x429024,0x2571
  401549:	call   ebx
  40154b:	xor    DWORD PTR ds:0x429028,0x42b00c
  401555:	test   eax,eax
  401557:	mov    DWORD PTR ds:0x42b00c,0x17fe
  401561:	jne    0x401768
  401567:	mov    DWORD PTR ds:0x42c014,0x28c7
  401571:	push   0xc
  401573:	and    DWORD PTR ds:0x429024,0x5a57
  40157d:	push   0x42e607
  401582:	call   esi
  401584:	test   eax,eax
  401586:	mov    DWORD PTR ds:0x42b00c,0xc7e
  401590:	jne    0x401768
  401596:	sbb    DWORD PTR ds:0x42a000,0x42d01c
  4015a0:	push   0x7
  4015a2:	adc    DWORD PTR ds:0x42b00c,0x429010
  4015ac:	push   0x42e61b
  4015b1:	mov    DWORD PTR ds:0x42c004,0x76c3
  4015bb:	call   esi
  4015bd:	xor    DWORD PTR ds:0x42c00c,0x55d5
  4015c7:	test   eax,eax
  4015c9:	jne    0x401768
  4015cf:	or     DWORD PTR ds:0x429008,0x62a0
  4015d9:	push   0x8
  4015db:	or     DWORD PTR ds:0x429020,0x42d018
  4015e5:	push   0x42e62b
  4015ea:	call   esi
  4015ec:	test   eax,eax
  4015ee:	mov    DWORD PTR ds:0x429010,0x43d8
  4015f8:	jne    0x401768
  4015fe:	push   0x42e63b
  401603:	sub    DWORD PTR ds:0x42a008,0x5452
  40160d:	push   edi
  40160e:	adc    DWORD PTR ds:0x42b004,0x3794
  401618:	push   edi
  401619:	add    DWORD PTR ds:0x42b018,0x429000
  401623:	call   DWORD PTR ds:0x42e9c3
  401629:	add    DWORD PTR ds:0x42b014,0x42c014
  401633:	test   eax,eax
  401635:	mov    DWORD PTR ds:0x42c010,0x9db
  40163f:	jne    0x401768
  401645:	add    DWORD PTR ds:0x42b01c,0x42c010
  40164f:	push   0x42e64b
  401654:	push   edi
  401655:	push   edi
  401656:	call   ebx
  401658:	test   eax,eax
  40165a:	jne    0x401768
  401660:	sub    DWORD PTR ds:0x42a010,0x42b00c
  40166a:	push   0xc
  40166c:	xor    DWORD PTR ds:0x42a000,0x46f8
  401676:	push   0x42e66f
  40167b:	sub    DWORD PTR ds:0x429028,0x1e37
  401685:	call   esi
  401687:	not    DWORD PTR ds:0x42b000
  40168d:	test   eax,eax
  40168f:	mov    DWORD PTR ds:0x42a010,0x1824
  401699:	jne    0x401768
  40169f:	push   0x7
  4016a1:	neg    DWORD PTR ds:0x42d004
  4016a7:	push   0x42e683
  4016ac:	call   esi
  4016ae:	xor    DWORD PTR ds:0x429020,0x5303
  4016b8:	test   eax,eax
  4016ba:	jne    0x401768
  4016c0:	sub    DWORD PTR ds:0x429014,0x42c01c
  4016ca:	push   0x8
  4016cc:	not    DWORD PTR ds:0x429000
  4016d2:	push   0x42e693
  4016d7:	or     DWORD PTR ds:0x42c01c,0x7461
  4016e1:	call   esi
  4016e3:	test   eax,eax
  4016e5:	jne    0x401768
  4016eb:	or     DWORD PTR ds:0x42b010,0x6614
  4016f5:	push   0x42e6a3
  4016fa:	push   edi
  4016fb:	and    DWORD PTR ds:0x42b01c,0x42a008
  401705:	push   edi
  401706:	call   DWORD PTR ds:0x42e9c3
  40170c:	sub    DWORD PTR ds:0x429010,0x42a018
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42b004,0x423f
  401722:	jne    0x401768
  401728:	push   0x42e6b3
  40172d:	and    DWORD PTR ds:0x42d014,0x5d3e
  401737:	push   edi
  401738:	push   edi
  401739:	call   ebx
  40173b:	sub    DWORD PTR ds:0x42a004,0x8003
  401745:	test   eax,eax
  401747:	jne    0x401768
  40174d:	push   0xc
  40174f:	push   0x42e6d7
  401754:	call   esi
  401756:	or     DWORD PTR ds:0x42a014,0x792e
  401760:	test   eax,eax
  401762:	je     0x401783
  401768:	add    DWORD PTR ds:0x42d004,0x429000
  401772:	xor    eax,eax
  401774:	mov    DWORD PTR ds:0x42c00c,0x1740
  40177e:	jmp    0x4026a8
  401783:	sub    DWORD PTR ds:0x42c01c,0x74ec
  40178d:	mov    DWORD PTR [ebp-0x10],0x0
  401794:	sub    edx,ecx
  401796:	mov    eax,DWORD PTR [ebp-0x34]
  401799:	adc    edx,DWORD PTR ds:0x42b004
  40179f:	mov    DWORD PTR [ebp-0x34],eax
  4017a2:	sub    edx,DWORD PTR ds:0x429024
  4017a8:	mov    ecx,0xf89c85b9
  4017ad:	xor    esi,esi
  4017af:	or     esi,DWORD PTR ds:0x42b018
  4017b5:	adc    DWORD PTR ds:0x429020,esi
  4017bb:	mov    DWORD PTR [ebp-0x8],ecx
  4017be:	mov    edx,DWORD PTR ds:0x42d004
  4017c4:	sbb    edx,DWORD PTR ds:0x42901c
  4017ca:	mov    DWORD PTR ds:0x42d004,edx
  4017d0:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  4017d7:	add    esi,edx
  4017d9:	lea    eax,[ebp-0x3c]
  4017dc:	xor    edx,edx
  4017de:	mov    DWORD PTR [ebp-0x30],eax
  4017e1:	lea    eax,[ebp-0x44]
  4017e4:	mov    DWORD PTR ds:0x42b00c,0x18
  4017ee:	cmp    DWORD PTR ds:0x42b00c,0x0
  4017f5:	je     0x40184f
  4017fb:	cmp    DWORD PTR ds:0x42b00c,0x7
  401802:	jne    0x40181d
  401808:	push   0x42b010
  40180d:	push   0x42c014
  401812:	push   0x42d004
  401817:	call   DWORD PTR ds:0x42e993
  40181d:	cmp    DWORD PTR ds:0x42b00c,0x8
  401824:	jne    0x401837
  40182a:	mov    esi,DWORD PTR ds:0x42b00c
  401830:	dec    esi
  401831:	mov    DWORD PTR ds:0x42b00c,esi
  401837:	mov    esi,DWORD PTR ds:0x42b00c
  40183d:	dec    esi
  40183e:	mov    DWORD PTR ds:0x42b00c,esi
  401844:	jmp    0x4017ee
  401849:	adc    DWORD PTR ds:0x429000,ebx
  40184f:	mov    DWORD PTR [ebp-0x18],eax
  401852:	mov    eax,ds:0x42e313
  401857:	and    DWORD PTR ds:0x429004,0x0
  401861:	jmp    0x401873
  401866:	mov    edi,DWORD PTR ds:0x429004
  40186c:	inc    edi
  40186d:	mov    DWORD PTR ds:0x429004,edi
  401873:	cmp    DWORD PTR ds:0x429004,0x1c
  40187a:	jae    0x4018a6
  401880:	cmp    DWORD PTR ds:0x429004,0x22
  401887:	jne    0x40189b
  40188d:	push   0x0
  40188f:	push   DWORD PTR [ebp-0x20]
  401892:	push   DWORD PTR [ebp-0x10]
  401895:	call   DWORD PTR ds:0x42e997
  40189b:	jmp    0x401866
  4018a0:	adc    DWORD PTR ds:0x42c018,ebx
  4018a6:	mov    eax,DWORD PTR [eax+0x1c8]
  4018ac:	mov    DWORD PTR ds:0x42a010,0x15
  4018b6:	cmp    DWORD PTR ds:0x42a010,0x0
  4018bd:	je     0x401923
  4018c3:	cmp    DWORD PTR ds:0x42a010,0xa
  4018ca:	jne    0x4018f1
  4018d0:	push   DWORD PTR [ebp-0x10]
  4018d3:	push   0x85d6
  4018d8:	push   0x42c01c
  4018dd:	push   DWORD PTR [ebp-0x24]
  4018e0:	push   DWORD PTR [ebp-0x18]
  4018e3:	push   0x61a0
  4018e8:	push   DWORD PTR [ebp-0x18]
  4018eb:	call   DWORD PTR ds:0x42e99f
  4018f1:	cmp    DWORD PTR ds:0x42a010,0xb
  4018f8:	jne    0x40190b
  4018fe:	mov    esi,DWORD PTR ds:0x42a010
  401904:	dec    esi
  401905:	mov    DWORD PTR ds:0x42a010,esi
  40190b:	mov    esi,DWORD PTR ds:0x42a010
  401911:	dec    esi
  401912:	mov    DWORD PTR ds:0x42a010,esi
  401918:	jmp    0x4018b6
  40191d:	and    DWORD PTR ds:0x42b000,edx
  401923:	mov    eax,DWORD PTR [eax]
  401925:	xor    DWORD PTR ds:0x42c01c,0x42d014
  40192f:	mov    edx,DWORD PTR [ebp-0x18]
  401932:	or     esi,DWORD PTR ds:0x42d014
  401938:	mov    esi,0x7510899
  40193d:	xor    eax,esi
  40193f:	mov    edi,0x3272e0
  401944:	add    eax,edi
  401946:	mov    DWORD PTR [edx],eax
  401948:	mov    DWORD PTR ds:0x42900c,0x4148
  401952:	mov    eax,ds:0x42e7c3
  401957:	cmp    eax,0x312bc9f6
  40195c:	mov    DWORD PTR ds:0x429010,0x7018
  401966:	jne    0x401abf
  40196c:	adc    DWORD PTR ds:0x42a018,0x1f6
  401976:	mov    eax,DWORD PTR [ebp-0x8]
  401979:	and    DWORD PTR ds:0x42d010,0x0
  401983:	jmp    0x401995
  401988:	mov    ebx,DWORD PTR ds:0x42d010
  40198e:	inc    ebx
  40198f:	mov    DWORD PTR ds:0x42d010,ebx
  401995:	cmp    DWORD PTR ds:0x42d010,0x1a
  40199c:	jae    0x4019d3
  4019a2:	cmp    DWORD PTR ds:0x42d010,0x1f
  4019a9:	jne    0x4019c8
  4019af:	push   0x42b018
  4019b4:	push   DWORD PTR [ebp-0x18]
  4019b7:	push   0x42e127
  4019bc:	push   DWORD PTR [ebp-0x24]
  4019bf:	push   DWORD PTR [ebp-0x14]
  4019c2:	call   DWORD PTR ds:0x42e9a3
  4019c8:	jmp    0x401988
  4019cd:	and    ebx,DWORD PTR ds:0x429020
  4019d3:	mov    edx,DWORD PTR ds:0x42e313
  4019d9:	sbb    DWORD PTR ds:0x42b000,edi
  4019df:	mov    edx,DWORD PTR [edx+0x198]
  4019e5:	inc    ebx
  4019e6:	xor    eax,esi
  4019e8:	movzx  ebx,WORD PTR ds:0x42b01c
  4019ef:	or     DWORD PTR ds:0x429014,ebx
  4019f5:	add    eax,edi
  4019f7:	sub    DWORD PTR ds:0x42b008,edx
  4019fd:	mov    DWORD PTR [edx],eax
  4019ff:	add    ebx,0x6ca
  401a05:	mov    eax,DWORD PTR [ebp-0x8]
  401a08:	mov    DWORD PTR ds:0x429008,0x1c
  401a12:	cmp    DWORD PTR ds:0x429008,0x0
  401a19:	je     0x401a65
  401a1f:	cmp    DWORD PTR ds:0x429008,0x9
  401a26:	jne    0x401a37
  401a2c:	push   0x42d004
  401a31:	call   DWORD PTR ds:0x42e9ab
  401a37:	cmp    DWORD PTR ds:0x429008,0xa
  401a3e:	jne    0x401a51
  401a44:	mov    ebx,DWORD PTR ds:0x429008
  401a4a:	dec    ebx
  401a4b:	mov    DWORD PTR ds:0x429008,ebx
  401a51:	xor    ebx,ebx
  401a53:	add    ebx,DWORD PTR ds:0x429008
  401a59:	dec    ebx
  401a5a:	mov    DWORD PTR ds:0x429008,ebx
  401a60:	jmp    0x401a12
  401a65:	xor    eax,esi
  401a67:	mov    DWORD PTR ds:0x42a010,0x13
  401a71:	cmp    DWORD PTR ds:0x42a010,0x0
  401a78:	je     0x401ab2
  401a7e:	cmp    DWORD PTR ds:0x42a010,0x23
  401a85:	jne    0x401a9e
  401a8b:	push   DWORD PTR [ebp-0xc]
  401a8e:	push   0x0
  401a90:	push   0x429028
  401a95:	push   DWORD PTR [ebp-0x1c]
  401a98:	call   DWORD PTR ds:0x42e9af
  401a9e:	mov    ebx,DWORD PTR ds:0x42a010
  401aa4:	dec    ebx
  401aa5:	mov    DWORD PTR ds:0x42a010,ebx
  401aab:	jmp    0x401a71
  401ab0:	not    ebx
  401ab2:	add    eax,edi
  401ab4:	xor    DWORD PTR ds:0x42900c,ecx
  401aba:	mov    ds:0x42e7c3,eax
  401abf:	xor    DWORD PTR ds:0x42c010,0x7580
  401ac9:	mov    eax,ds:0x42e313
  401ace:	and    DWORD PTR ds:0x42d018,0x0
  401ad8:	mov    ebx,DWORD PTR ds:0x42d018
  401ade:	inc    ebx
  401adf:	mov    DWORD PTR ds:0x42d018,ebx
  401ae5:	cmp    DWORD PTR ds:0x42d018,0x4
  401aec:	jne    0x401af8
  401af2:	call   DWORD PTR ds:0x42e9b3
  401af8:	cmp    DWORD PTR ds:0x42d018,0x3
  401aff:	jne    0x401b12
  401b05:	mov    ebx,DWORD PTR ds:0x42d018
  401b0b:	inc    ebx
  401b0c:	mov    DWORD PTR ds:0x42d018,ebx
  401b12:	cmp    DWORD PTR ds:0x42d018,0x1f
  401b19:	jb     0x401ad8
  401b1f:	add    DWORD PTR ds:0x42a000,0x4980
  401b29:	mov    eax,DWORD PTR [eax+0x18c]
  401b2f:	mov    eax,DWORD PTR [eax]
  401b31:	mov    DWORD PTR [ebp-0x7c],eax
  401b34:	or     DWORD PTR ds:0x42c014,ebx
  401b3a:	mov    ebx,0xf89c85bd
  401b3f:	mov    DWORD PTR [ebp-0x10],ebx
  401b42:	mov    DWORD PTR [ebp-0x10],ebx
  401b45:	add    eax,0x7960
  401b4a:	mov    DWORD PTR [ebp-0x10],ebx
  401b4d:	or     eax,DWORD PTR ds:0x42c000
  401b53:	mov    DWORD PTR [ebp-0x18],ecx
  401b56:	mov    DWORD PTR ds:0x429000,0x1d
  401b60:	cmp    DWORD PTR ds:0x429000,0x0
  401b67:	je     0x401c18
  401b6d:	cmp    DWORD PTR ds:0x429000,0xf
  401b74:	jne    0x401b9a
  401b7a:	push   DWORD PTR [ebp-0x18]
  401b7d:	push   0x429020
  401b82:	push   0x22ca
  401b87:	push   0x6383
  401b8c:	push   DWORD PTR [ebp-0x18]
  401b8f:	push   0x7f4f
  401b94:	call   DWORD PTR ds:0x42e9b7
  401b9a:	cmp    DWORD PTR ds:0x429000,0x10
  401ba1:	jne    0x401bb2
  401ba7:	mov    eax,ds:0x429000
  401bac:	dec    eax
  401bad:	mov    ds:0x429000,eax
  401bb2:	mov    eax,ds:0x429000
  401bb7:	dec    eax
  401bb8:	mov    ds:0x429000,eax
  401bbd:	jmp    0x401b60
  401bc2:	and    DWORD PTR ds:0x42a000,0x0
  401bcc:	xor    eax,eax
  401bce:	add    eax,DWORD PTR ds:0x42a000
  401bd4:	inc    eax
  401bd5:	mov    ds:0x42a000,eax
  401bda:	cmp    DWORD PTR ds:0x42a000,0xd
  401be1:	jne    0x401bed
  401be7:	call   DWORD PTR ds:0x42e9bb
  401bed:	cmp    DWORD PTR ds:0x42a000,0xc
  401bf4:	jne    0x401c05
  401bfa:	mov    eax,ds:0x42a000
  401bff:	inc    eax
  401c00:	mov    ds:0x42a000,eax
  401c05:	cmp    DWORD PTR ds:0x42a000,0x18
  401c0c:	jb     0x401bcc
  401c12:	or     DWORD PTR ds:0x42c008,ebx
  401c18:	mov    DWORD PTR [ebp-0x10],ebx
  401c1b:	xor    DWORD PTR ds:0x42c000,edx
  401c21:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  401c28:	mov    eax,DWORD PTR [ebp-0x8]
  401c2b:	xor    eax,esi
  401c2d:	or     DWORD PTR ds:0x42d000,0x4414
  401c37:	add    eax,edi
  401c39:	mov    DWORD PTR ds:0x429018,0x61ad
  401c43:	jmp    0x401d03
  401c48:	and    DWORD PTR ds:0x42b018,0x0
  401c52:	xor    ecx,ecx
  401c54:	add    ecx,DWORD PTR ds:0x42b018
  401c5a:	inc    ecx
  401c5b:	mov    DWORD PTR ds:0x42b018,ecx
  401c61:	cmp    DWORD PTR ds:0x42b018,0x29
  401c68:	jne    0x401c81
  401c6e:	push   DWORD PTR [ebp-0x24]
  401c71:	push   0x42c018
  401c76:	push   0x8c2e
  401c7b:	call   DWORD PTR ds:0x42e9bf
  401c81:	cmp    DWORD PTR ds:0x42b018,0x19
  401c88:	jb     0x401c52
  401c8e:	mov    eax,DWORD PTR [ebp-0xc]
  401c91:	adc    ecx,DWORD PTR ds:0x42b000
  401c97:	mov    ecx,DWORD PTR [ebp-0x1c]
  401c9a:	xor    eax,esi
  401c9c:	lea    eax,[eax+ecx*1+0x3272e0]
  401ca3:	push   eax
  401ca4:	mov    eax,DWORD PTR [ebp-0x18]
  401ca7:	or     DWORD PTR ds:0x42c01c,0x6aa9
  401cb1:	xor    eax,esi
  401cb3:	add    DWORD PTR ds:0x42d014,0x21f
  401cbd:	lea    eax,[ebp+eax*1+0x3272e8]
  401cc4:	or     DWORD PTR ds:0x42d004,0x505e
  401cce:	push   eax
  401ccf:	adc    DWORD PTR ds:0x42c01c,ecx
  401cd5:	mov    eax,ds:0x42e313
  401cda:	push   DWORD PTR [eax+0x1bc]
  401ce0:	sbb    DWORD PTR ds:0x42d004,0x7640
  401cea:	call   0x4026bd
  401cef:	xor    eax,0x743a
  401cf4:	mov    eax,DWORD PTR [ebp-0xc]
  401cf7:	mov    ecx,DWORD PTR [ebp-0x1c]
  401cfa:	xor    eax,esi
  401cfc:	lea    eax,[ecx+eax*1+0x3272e0]
  401d03:	mov    ecx,DWORD PTR [ebp-0xc]
  401d06:	not    edx
  401d08:	mov    edx,DWORD PTR [ebp-0xc]
  401d0b:	sbb    DWORD PTR ds:0x42c008,0x6696
  401d15:	xor    edx,esi
  401d17:	xor    ecx,esi
  401d19:	sub    DWORD PTR ds:0x42c014,0x5039
  401d23:	add    ecx,edx
  401d25:	mov    edx,DWORD PTR [ebp-0xc]
  401d28:	xor    edx,esi
  401d2a:	mov    DWORD PTR ds:0x42d004,0x46d7
  401d34:	lea    ecx,[ecx+edx*1+0x9758a0]
  401d3b:	mov    DWORD PTR [ebp-0x1c],eax
  401d3e:	cmp    eax,ecx
  401d40:	mov    DWORD PTR ds:0x42c01c,0x3624
  401d4a:	jbe    0x401c48
  401d50:	mov    DWORD PTR ds:0x42a018,0x1f
  401d5a:	cmp    DWORD PTR ds:0x42a018,0x0
  401d61:	je     0x401db7
  401d67:	cmp    DWORD PTR ds:0x42a018,0xc
  401d6e:	jne    0x401d89
  401d74:	push   0x42e127
  401d79:	push   0x42e139
  401d7e:	push   0x400000
  401d83:	call   DWORD PTR ds:0x42e9c7
  401d89:	cmp    DWORD PTR ds:0x42a018,0xd
  401d90:	jne    0x401da1
  401d96:	mov    eax,ds:0x42a018
  401d9b:	dec    eax
  401d9c:	mov    ds:0x42a018,eax
  401da1:	mov    eax,ds:0x42a018
  401da6:	dec    eax
  401da7:	mov    ds:0x42a018,eax
  401dac:	jmp    0x401d5a
  401db1:	sbb    ecx,0x5e3
  401db7:	mov    eax,DWORD PTR [ebp+0xc]
  401dba:	dec    ecx
  401dbb:	mov    ds:0x42e197,eax
  401dc0:	mov    DWORD PTR ds:0x42c010,0x5070
  401dca:	mov    eax,DWORD PTR [ebp+0x10]
  401dcd:	and    DWORD PTR ds:0x42b000,0x0
  401dd7:	mov    ecx,DWORD PTR ds:0x42b000
  401ddd:	inc    ecx
  401dde:	mov    DWORD PTR ds:0x42b000,ecx
  401de4:	cmp    DWORD PTR ds:0x42b000,0x22
  401deb:	jne    0x401dfc
  401df1:	push   0x42e000
  401df6:	call   DWORD PTR ds:0x42e9cb
  401dfc:	cmp    DWORD PTR ds:0x42b000,0x18
  401e03:	jb     0x401dd7
  401e09:	mov    ds:0x42e3eb,eax
  401e0e:	mov    eax,ds:0x42e197
  401e13:	add    DWORD PTR ds:0x42a010,ebx
  401e19:	mov    ecx,DWORD PTR [ebp-0x30]
  401e1c:	and    DWORD PTR ds:0x42900c,0x4f3f
  401e26:	sub    eax,edi
  401e28:	xor    DWORD PTR ds:0x42a018,0x42a01c
  401e32:	xor    eax,esi
  401e34:	mov    DWORD PTR [ecx],eax
  401e36:	movzx  eax,BYTE PTR ds:0x42900c
  401e3d:	mov    eax,DWORD PTR [ebp-0x34]
  401e40:	cmp    eax,0xf89c85b9
  401e45:	mov    DWORD PTR ds:0x42901c,0x22d7
  401e4f:	jne    0x402106
  401e55:	lea    eax,[ebp-0x40]
  401e58:	mov    DWORD PTR [ebp-0x9c],eax
  401e5e:	or     DWORD PTR ds:0x429028,0x42a008
  401e68:	lea    eax,[ebp+0x4]
  401e6b:	add    DWORD PTR ds:0x42a014,0x42c008
  401e75:	mov    DWORD PTR [ebp-0x40],eax
  401e78:	mov    eax,DWORD PTR [ebp-0x40]
  401e7b:	test   eax,eax
  401e7d:	mov    DWORD PTR ds:0x42b000,0x1a3e
  401e87:	je     0x40268d
  401e8d:	xor    ecx,0x3b66
  401e93:	mov    eax,DWORD PTR [ebp-0x24]
  401e96:	and    DWORD PTR ds:0x429028,0x0
  401ea0:	jmp    0x401eb2
  401ea5:	mov    ecx,DWORD PTR ds:0x429028
  401eab:	inc    ecx
  401eac:	mov    DWORD PTR ds:0x429028,ecx
  401eb2:	cmp    DWORD PTR ds:0x429028,0x14
  401eb9:	jae    0x401ef8
  401ebf:	cmp    DWORD PTR ds:0x429028,0x7
  401ec6:	jne    0x401ed7
  401ecc:	push   0x42a018
  401ed1:	call   DWORD PTR ds:0x42e9d3
  401ed7:	cmp    DWORD PTR ds:0x429028,0x6
  401ede:	jne    0x401ef3
  401ee4:	xor    ecx,ecx
  401ee6:	add    ecx,DWORD PTR ds:0x429028
  401eec:	inc    ecx
  401eed:	mov    DWORD PTR ds:0x429028,ecx
  401ef3:	jmp    0x401ea5
  401ef8:	mov    eax,DWORD PTR [ebp-0xc]
  401efb:	mov    DWORD PTR ds:0x42c018,0x16
  401f05:	cmp    DWORD PTR ds:0x42c018,0x0
  401f0c:	je     0x401f44
  401f12:	cmp    DWORD PTR ds:0x42c018,0x20
  401f19:	jne    0x401f34
  401f1f:	push   0x42a010
  401f24:	push   0x42b014
  401f29:	push   0x42d004
  401f2e:	call   DWORD PTR ds:0x42e993
  401f34:	mov    eax,ds:0x42c018
  401f39:	dec    eax
  401f3a:	mov    ds:0x42c018,eax
  401f3f:	jmp    0x401f05
  401f44:	mov    eax,DWORD PTR [ebp-0x8]
  401f47:	add    DWORD PTR ds:0x42d014,0x2c68
  401f51:	mov    DWORD PTR [ebp+0xc],eax
  401f54:	mov    eax,eax
  401f56:	mov    eax,ds:0x42e313
  401f5b:	movzx  ecx,BYTE PTR ds:0x42900c
  401f62:	and    DWORD PTR ds:0x42d014,ecx
  401f68:	mov    eax,DWORD PTR [eax+0x1c8]
  401f6e:	not    DWORD PTR ds:0x429024
  401f74:	mov    eax,DWORD PTR [eax]
  401f76:	cdq    
  401f77:	and    DWORD PTR ds:0x42a00c,0x0
  401f81:	jmp    0x401f95
  401f86:	xor    ebx,ebx
  401f88:	xor    ebx,DWORD PTR ds:0x42a00c
  401f8e:	inc    ebx
  401f8f:	mov    DWORD PTR ds:0x42a00c,ebx
  401f95:	cmp    DWORD PTR ds:0x42a00c,0x10
  401f9c:	jae    0x401fe4
  401fa2:	cmp    DWORD PTR ds:0x42a00c,0x8
  401fa9:	jne    0x401fbf
  401faf:	push   0x0
  401fb1:	push   DWORD PTR [ebp-0x18]
  401fb4:	push   0x4e1d
  401fb9:	call   DWORD PTR ds:0x42e997
  401fbf:	cmp    DWORD PTR ds:0x42a00c,0x7
  401fc6:	jne    0x401fd9
  401fcc:	mov    ebx,DWORD PTR ds:0x42a00c
  401fd2:	inc    ebx
  401fd3:	mov    DWORD PTR ds:0x42a00c,ebx
  401fd9:	jmp    0x401f86
  401fde:	and    ecx,0x6703
  401fe4:	mov    ebx,eax
  401fe6:	add    eax,DWORD PTR ds:0x429000
  401fec:	mov    eax,0xfabdbee9
  401ff1:	sbb    ecx,DWORD PTR ds:0x42c000
  401ff7:	add    ebx,eax
  401ff9:	adc    edx,0xffffffff
  401ffc:	mov    ecx,DWORD PTR ds:0x42d004
  402002:	adc    DWORD PTR ds:0x42a008,ecx
  402008:	and    DWORD PTR [ebp-0x10],0x0
  40200c:	add    ecx,0x4d2b
  402012:	xor    edx,0x0
  402015:	mov    DWORD PTR [ebp-0x6c],edx
  402018:	mov    edx,DWORD PTR [ebp+0xc]
  40201b:	mov    DWORD PTR ds:0x42c004,0x11
  402025:	cmp    DWORD PTR ds:0x42c004,0x0
  40202c:	je     0x40207c
  402032:	cmp    DWORD PTR ds:0x42c004,0x1d
  402039:	jne    0x40205c
  40203f:	push   DWORD PTR [ebp-0x10]
  402042:	push   DWORD PTR [ebp-0x24]
  402045:	push   0x429014
  40204a:	push   DWORD PTR [ebp-0x24]
  40204d:	push   DWORD PTR [ebp-0x28]
  402050:	push   DWORD PTR [ebp-0x24]
  402053:	push   DWORD PTR [ebp-0x1c]
  402056:	call   DWORD PTR ds:0x42e99f
  40205c:	mov    ecx,DWORD PTR ds:0x42c004
  402062:	dec    ecx
  402063:	mov    DWORD PTR ds:0x42c004,ecx
  402069:	jmp    0x402025
  40206e:	xor    ecx,ecx
  402070:	add    ecx,DWORD PTR ds:0x42c014
  402076:	and    DWORD PTR ds:0x42b004,ecx
  40207c:	mov    DWORD PTR [ebp-0x14],edx
  40207f:	mov    ecx,0x8a29a12b
  402084:	xor    ebx,ecx
  402086:	add    DWORD PTR [ebp-0x14],eax
  402089:	mov    edx,DWORD PTR [ebp-0x14]
  40208c:	adc    DWORD PTR [ebp-0x10],0xffffffff
  402090:	xor    edx,ecx
  402092:	mov    DWORD PTR [ebp-0x58],edx
  402095:	mov    edx,DWORD PTR [ebp-0x10]
  402098:	xor    edx,0x0
  40209b:	mov    DWORD PTR [ebp-0x54],edx
  40209e:	cmp    DWORD PTR [ebp-0x58],ebx
  4020a1:	jne    0x4020b3
  4020a7:	mov    edx,DWORD PTR [ebp-0x6c]
  4020aa:	cmp    DWORD PTR [ebp-0x54],edx
  4020ad:	je     0x4020e2
  4020b3:	mov    edx,DWORD PTR ds:0x42e313
  4020b9:	mov    edx,DWORD PTR [edx+0x1c0]
  4020bf:	mov    edx,DWORD PTR [edx]
  4020c1:	xor    ebx,ebx
  4020c3:	add    edx,eax
  4020c5:	adc    ebx,0xffffffff
  4020c8:	xor    edx,ecx
  4020ca:	xor    ebx,0x0
  4020cd:	cmp    edx,0x70941fc1
  4020d3:	jne    0x40268d
  4020d9:	cmp    ebx,0xffffffff
  4020dc:	jne    0x40268d
  4020e2:	mov    edx,DWORD PTR ds:0x42e38f
  4020e8:	mov    ebx,DWORD PTR ds:0x42e397
  4020ee:	xor    edx,ebx
  4020f0:	mov    DWORD PTR ds:0x42e38f,edx
  4020f6:	mov    ebx,DWORD PTR ds:0x42e38f
  4020fc:	mov    edx,DWORD PTR [ebp-0x40]
  4020ff:	add    DWORD PTR [edx],ebx
  402101:	jmp    0x40264e
  402106:	mov    eax,DWORD PTR [ebp-0x3c]
  402109:	cmp    eax,0xf89c85b8
  40210e:	je     0x40216b
  402114:	mov    eax,DWORD PTR [ebp-0x8]
  402117:	mov    ecx,DWORD PTR [ebp-0x44]
  40211a:	xor    eax,esi
  40211c:	add    eax,edi
  40211e:	cmp    eax,ecx
  402120:	je     0x40216b
  402126:	mov    eax,ds:0x42e313
  40212b:	mov    eax,DWORD PTR [eax+0x194]
  402131:	mov    ecx,DWORD PTR [eax]
  402133:	mov    eax,DWORD PTR [ecx+0x3c]
  402136:	push   DWORD PTR ds:0x42e3eb
  40213c:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  402140:	push   DWORD PTR ds:0x42e197
  402146:	add    eax,ecx
  402148:	mov    ecx,DWORD PTR ds:0x42e313
  40214e:	mov    ecx,DWORD PTR [ecx+0x194]
  402154:	push   DWORD PTR [ecx]
  402156:	call   eax
  402158:	mov    ecx,DWORD PTR ds:0x42e313
  40215e:	mov    ecx,DWORD PTR [ecx+0x1cc]
  402164:	mov    DWORD PTR [ecx],eax
  402166:	jmp    0x40268d
  40216b:	mov    eax,DWORD PTR [ebp-0x8]
  40216e:	mov    ecx,DWORD PTR [ebp-0x7c]
  402171:	xor    eax,esi
  402173:	add    eax,edi
  402175:	cmp    eax,ecx
  402177:	jne    0x402548
  40217d:	mov    eax,DWORD PTR [ebp-0x8]
  402180:	mov    ecx,DWORD PTR ds:0x42e313
  402186:	mov    ecx,DWORD PTR [ecx+0x198]
  40218c:	xor    eax,esi
  40218e:	add    eax,edi
  402190:	cmp    eax,DWORD PTR [ecx]
  402192:	jne    0x4021b1
  402198:	mov    eax,DWORD PTR [ebp-0x8]
  40219b:	push   0xf89c85b9
  4021a0:	xor    eax,esi
  4021a2:	add    eax,edi
  4021a4:	push   eax
  4021a5:	push   ebx
  4021a6:	push   DWORD PTR [ebp-0xc]
  4021a9:	push   DWORD PTR [ebp-0x8]
  4021ac:	call   0x409ed5
  4021b1:	mov    eax,DWORD PTR [ebp-0xc]
  4021b4:	mov    DWORD PTR [ebp-0x48],eax
  4021b7:	mov    eax,DWORD PTR [ebp-0x8]
  4021ba:	mov    DWORD PTR [ebp-0x1c],eax
  4021bd:	mov    eax,DWORD PTR [ebp-0x1c]
  4021c0:	xor    eax,esi
  4021c2:	add    eax,edi
  4021c4:	mov    DWORD PTR [ebp+0x10],eax
  4021c7:	mov    eax,ds:0x42e193
  4021cc:	mov    eax,DWORD PTR [eax]
  4021ce:	mov    DWORD PTR [ebp+0x10],eax
  4021d1:	mov    eax,ds:0x42e39b
  4021d6:	mov    eax,DWORD PTR [eax]
  4021d8:	mov    DWORD PTR [ebp-0x18],eax
  4021db:	mov    DWORD PTR [ebp+0xc],0xf89c87b9
  4021e2:	mov    eax,DWORD PTR [ebp+0xc]
  4021e5:	xor    eax,esi
  4021e7:	add    eax,edi
  4021e9:	mov    DWORD PTR [ebp+0xc],eax
  4021ec:	mov    eax,ds:0x42e313
  4021f1:	mov    DWORD PTR [ebp+0xc],eax
  4021f4:	mov    eax,DWORD PTR [ebp+0x10]
  4021f7:	mov    DWORD PTR [ebp+0xc],eax
  4021fa:	mov    eax,DWORD PTR [ebp+0xc]
  4021fd:	push   0x4
  4021ff:	pop    ecx
  402200:	sub    ecx,eax
  402202:	add    ecx,DWORD PTR [ebp-0x18]
  402205:	mov    DWORD PTR [ebp-0x30],0xf89c85f9
  40220c:	mov    DWORD PTR [ebp+0x10],ecx
  40220f:	mov    DWORD PTR [ebp-0xe4],ebx
  402215:	mov    eax,DWORD PTR [ebp+0xc]
  402218:	mov    DWORD PTR [ebp-0xe0],eax
  40221e:	mov    eax,DWORD PTR [ebp+0x10]
  402221:	mov    DWORD PTR [ebp-0xdc],eax
  402227:	mov    eax,DWORD PTR [ebp-0x30]
  40222a:	xor    eax,esi
  40222c:	add    eax,edi
  40222e:	mov    DWORD PTR [ebp-0xd8],eax
  402234:	lea    eax,[ebp-0x88]
  40223a:	mov    DWORD PTR [ebp-0xd4],eax
  402240:	mov    eax,DWORD PTR [ebp-0xe4]
  402246:	xor    eax,esi
  402248:	add    eax,edi
  40224a:	mov    DWORD PTR [ebp-0xe4],eax
  402250:	lea    eax,[ebp-0xe4]
  402256:	push   eax
  402257:	mov    eax,DWORD PTR [ebp-0x48]
  40225a:	xor    eax,esi
  40225c:	add    eax,edi
  40225e:	push   eax
  40225f:	mov    eax,ds:0x42e333
  402264:	push   0x42e289
  402269:	push   DWORD PTR [eax]
  40226b:	call   0x402992
  402270:	mov    eax,DWORD PTR [ebp+0xc]
  402273:	mov    ecx,DWORD PTR [ebp+0x10]
  402276:	mov    DWORD PTR [ebp-0x84],ecx
  40227c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40227f:	xor    ecx,esi
  402281:	mov    DWORD PTR [ebp-0x18],eax
  402284:	add    ecx,edi
  402286:	jmp    0x4024e9
  40228b:	lea    edx,[ecx+eax*1]
  40228e:	mov    DWORD PTR [ebp+0x10],edx
  402291:	mov    edx,DWORD PTR [ebp-0x84]
  402297:	sub    edx,ecx
  402299:	mov    DWORD PTR [ebp+0xc],edx
  40229c:	mov    edx,DWORD PTR [ebp+0xc]
  40229f:	mov    DWORD PTR [ebp-0x4c],edx
  4022a2:	mov    edx,DWORD PTR [ebp+0x10]
  4022a5:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  4022ac:	mov    DWORD PTR [ebp-0x6c],edx
  4022af:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  4022b6:	mov    edx,DWORD PTR [ebp-0x50]
  4022b9:	xor    edx,esi
  4022bb:	add    edx,edi
  4022bd:	mov    DWORD PTR [ebp+0x10],edx
  4022c0:	mov    edx,DWORD PTR [ebp-0x50]
  4022c3:	xor    edx,esi
  4022c5:	add    edx,edi
  4022c7:	mov    DWORD PTR [ebp+0xc],edx
  4022ca:	mov    DWORD PTR [ebp-0x68],0xf89c85d9
  4022d1:	mov    DWORD PTR [ebp-0x74],0xf89c85be
  4022d8:	mov    edx,DWORD PTR [ebp-0x50]
  4022db:	mov    ebx,DWORD PTR [ebp-0x4c]
  4022de:	xor    edx,esi
  4022e0:	add    edx,edi
  4022e2:	cmp    ebx,edx
  4022e4:	je     0x4024dd
  4022ea:	mov    eax,DWORD PTR [ebp-0x20]
  4022ed:	xor    eax,esi
  4022ef:	mov    edx,0xffcd8d20
  4022f4:	sub    edx,eax
  4022f6:	add    edx,DWORD PTR [ebp-0x4c]
  4022f9:	mov    eax,DWORD PTR [ebp-0x20]
  4022fc:	mov    ebx,DWORD PTR [ebp+0x10]
  4022ff:	xor    eax,esi
  402301:	add    eax,edi
  402303:	imul   eax,ebx
  402306:	cmp    eax,edx
  402308:	ja     0x4024da
  40230e:	mov    edx,DWORD PTR [ebp+0x10]
  402311:	mov    eax,DWORD PTR [ebp-0x4c]
  402314:	mov    ebx,DWORD PTR [ebp-0x68]
  402317:	sub    eax,edx
  402319:	xor    ebx,esi
  40231b:	xor    edx,edx
  40231d:	add    ebx,edi
  40231f:	div    ebx
  402321:	mov    DWORD PTR [ebp+0xc],eax
  402324:	mov    eax,DWORD PTR [ebp-0x74]
  402327:	mov    edx,DWORD PTR [ebp+0xc]
  40232a:	xor    eax,esi
  40232c:	add    eax,edi
  40232e:	cmp    edx,eax
  402330:	jbe    0x402340
  402336:	mov    eax,DWORD PTR [ebp-0x74]
  402339:	xor    eax,esi
  40233b:	add    eax,edi
  40233d:	mov    DWORD PTR [ebp+0xc],eax
  402340:	mov    eax,DWORD PTR [ebp-0x68]
  402343:	mov    edx,DWORD PTR [ebp+0xc]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	imul   eax,edx
  40234d:	mov    DWORD PTR [ebp+0xc],eax
  402350:	mov    eax,DWORD PTR [ebp-0x50]
  402353:	mov    edx,DWORD PTR [ebp+0xc]
  402356:	xor    eax,esi
  402358:	add    eax,edi
  40235a:	cmp    edx,eax
  40235c:	je     0x4024c3
  402362:	mov    eax,DWORD PTR [ebp+0xc]
  402365:	mov    DWORD PTR [ebp-0x34],eax
  402368:	mov    eax,DWORD PTR [ebp+0x10]
  40236b:	add    eax,DWORD PTR [ebp-0x6c]
  40236e:	mov    DWORD PTR [ebp-0x30],0xf89c85b9
  402375:	mov    DWORD PTR [ebp-0x28],eax
  402378:	mov    eax,0xf89c85b8
  40237d:	mov    DWORD PTR [ebp-0x5c],eax
  402380:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  402387:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  40238e:	mov    DWORD PTR [ebp-0x38],eax
  402391:	mov    eax,DWORD PTR [ebp-0x30]
  402394:	xor    eax,esi
  402396:	add    eax,edi
  402398:	jmp    0x40247f
  40239d:	mov    DWORD PTR [ebp-0x78],0xf89c85b3
  4023a4:	mov    DWORD PTR [ebp-0x80],0xf89c85ad
  4023ab:	mov    eax,DWORD PTR [ebp-0x38]
  4023ae:	mov    edx,DWORD PTR [ebp+0xc]
  4023b1:	xor    eax,esi
  4023b3:	add    eax,edi
  4023b5:	imul   eax,edx
  4023b8:	mov    edx,DWORD PTR [ebp-0x28]
  4023bb:	mov    al,BYTE PTR [eax+edx*1]
  4023be:	mov    BYTE PTR [ebp-0x1],al
  4023c1:	mov    eax,DWORD PTR [ebp-0x38]
  4023c4:	mov    edx,DWORD PTR [ebp+0xc]
  4023c7:	xor    eax,esi
  4023c9:	add    eax,edi
  4023cb:	imul   eax,edx
  4023ce:	mov    edx,DWORD PTR [ebp-0x54]
  4023d1:	xor    edx,esi
  4023d3:	add    eax,edx
  4023d5:	mov    edx,DWORD PTR [ebp-0x28]
  4023d8:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  4023e0:	mov    edx,DWORD PTR [ebp-0x78]
  4023e3:	xor    edx,esi
  4023e5:	lea    eax,[edx+eax*1+0x3272e0]
  4023ec:	movzx  edx,BYTE PTR [ebp-0x1]
  4023f0:	xor    edx,eax
  4023f2:	mov    BYTE PTR [ebp-0x1],dl
  4023f5:	mov    al,BYTE PTR [ebp-0x1]
  4023f8:	mov    edx,DWORD PTR [ebp-0x38]
  4023fb:	mov    ebx,DWORD PTR [ebp+0xc]
  4023fe:	xor    edx,esi
  402400:	add    edx,edi
  402402:	imul   edx,ebx
  402405:	mov    ebx,DWORD PTR [ebp-0x28]
  402408:	mov    BYTE PTR [edx+ebx*1],al
  40240b:	mov    eax,DWORD PTR [ebp-0x38]
  40240e:	mov    edx,DWORD PTR [ebp+0xc]
  402411:	xor    eax,esi
  402413:	add    eax,edi
  402415:	imul   eax,edx
  402418:	mov    edx,DWORD PTR [ebp-0x28]
  40241b:	mov    al,BYTE PTR [eax+edx*1]
  40241e:	mov    BYTE PTR [ebp-0x1],al
  402421:	mov    eax,DWORD PTR [ebp-0x38]
  402424:	mov    edx,DWORD PTR [ebp+0xc]
  402427:	xor    eax,esi
  402429:	add    eax,edi
  40242b:	imul   eax,edx
  40242e:	mov    edx,DWORD PTR [ebp-0x5c]
  402431:	xor    edx,esi
  402433:	add    eax,edx
  402435:	mov    edx,DWORD PTR [ebp-0x28]
  402438:	movzx  eax,BYTE PTR [eax+edx*1+0x3272e0]
  402440:	mov    edx,DWORD PTR [ebp-0x80]
  402443:	xor    edx,esi
  402445:	lea    eax,[edx+eax*1+0x3272e0]
  40244c:	movzx  edx,BYTE PTR [ebp-0x1]
  402450:	xor    edx,eax
  402452:	mov    BYTE PTR [ebp-0x1],dl
  402455:	mov    al,BYTE PTR [ebp-0x1]
  402458:	mov    edx,DWORD PTR [ebp-0x38]
  40245b:	mov    ebx,DWORD PTR [ebp+0xc]
  40245e:	xor    edx,esi
  402460:	add    edx,edi
  402462:	imul   edx,ebx
  402465:	mov    ebx,DWORD PTR [ebp-0x28]
  402468:	mov    BYTE PTR [edx+ebx*1],al
  40246b:	mov    eax,DWORD PTR [ebp-0x10]
  40246e:	mov    edx,DWORD PTR [ebp-0x5c]
  402471:	xor    eax,esi
  402473:	xor    edx,esi
  402475:	add    eax,edi
  402477:	add    edx,edi
  402479:	imul   eax,edx
  40247c:	add    eax,DWORD PTR [ebp+0xc]
  40247f:	mov    DWORD PTR [ebp+0xc],eax
  402482:	mov    eax,DWORD PTR [ebp+0xc]
  402485:	mov    edx,DWORD PTR [ebp-0x34]
  402488:	cmp    edx,eax
  40248a:	jb     0x40239d
  402490:	mov    eax,DWORD PTR [ebp-0x5c]
  402493:	mov    edx,DWORD PTR [ebp-0x34]
  402496:	xor    eax,esi
  402498:	add    eax,edi
  40249a:	imul   eax,edx
  40249d:	mov    edx,DWORD PTR [ebp-0x30]
  4024a0:	xor    edx,esi
  4024a2:	add    edx,edi
  4024a4:	or     eax,edx
  4024a6:	mov    edx,DWORD PTR [ebp-0x20]
  4024a9:	xor    edx,esi
  4024ab:	add    eax,edx
  4024ad:	mov    edx,DWORD PTR [ebp-0x20]
  4024b0:	xor    edx,esi
  4024b2:	add    eax,edx
  4024b4:	mov    edx,DWORD PTR [ebp+0x10]
  4024b7:	lea    eax,[eax+edx*1+0x64e5c0]
  4024be:	jmp    0x4024d2
  4024c3:	mov    eax,DWORD PTR [ebp-0x20]
  4024c6:	mov    edx,DWORD PTR [ebp+0x10]
  4024c9:	xor    eax,esi
  4024cb:	lea    eax,[eax+edx*1+0x3272e0]
  4024d2:	mov    DWORD PTR [ebp+0x10],eax
  4024d5:	jmp    0x4022ea
  4024da:	mov    eax,DWORD PTR [ebp-0x18]
  4024dd:	mov    edx,DWORD PTR [ebp-0x48]
  4024e0:	xor    edx,esi
  4024e2:	lea    ecx,[ecx+edx*1+0x3272e0]
  4024e9:	lea    edx,[ecx-0x3272e0]
  4024ef:	xor    edx,esi
  4024f1:	cmp    edx,0xf89c95b9
  4024f7:	jne    0x40228b
  4024fd:	mov    ecx,DWORD PTR [ebp-0x1c]
  402500:	mov    edx,DWORD PTR [ebp-0x48]
  402503:	mov    ebx,DWORD PTR [ebp-0x1c]
  402506:	xor    edx,esi
  402508:	mov    dl,BYTE PTR [edx+eax*1+0x3272e0]
  40250f:	xor    ecx,esi
  402511:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  402518:	xor    ebx,esi
  40251a:	mov    BYTE PTR [ebx+eax*1+0x3272e0],dl
  402521:	mov    edx,DWORD PTR [ebp-0x48]
  402524:	xor    edx,esi
  402526:	mov    BYTE PTR [edx+eax*1+0x3272e0],cl
  40252d:	mov    eax,DWORD PTR [ebp-0x48]
  402530:	mov    eax,DWORD PTR [ebp-0x8]
  402533:	xor    eax,esi
  402535:	add    eax,edi
  402537:	mov    ds:0x42e397,eax
  40253c:	mov    eax,DWORD PTR [ebp-0x8]
  40253f:	xor    eax,esi
  402541:	add    eax,edi
  402543:	mov    ds:0x42e38f,eax
  402548:	lea    eax,[ebp-0x2c]
  40254b:	mov    DWORD PTR [ebp-0x90],eax
  402551:	lea    eax,[ebp+0x4]
  402554:	mov    DWORD PTR [ebp-0x2c],eax
  402557:	mov    eax,DWORD PTR [ebp-0x2c]
  40255a:	test   eax,eax
  40255c:	je     0x40268d
  402562:	mov    DWORD PTR [ebp-0xa0],0xf152c30
  40256c:	mov    DWORD PTR [ebp-0x98],0x712ed0f
  402576:	mov    DWORD PTR [ebp-0x8c],0x373fc21
  402580:	mov    DWORD PTR [ebp-0x94],0x72670a11
  40258a:	call   0x4053bb
  40258f:	mov    eax,DWORD PTR [ebp-0x24]
  402592:	mov    eax,DWORD PTR [ebp-0xc]
  402595:	mov    eax,DWORD PTR [ebp-0x8]
  402598:	mov    DWORD PTR [ebp+0xc],eax
  40259b:	mov    eax,eax
  40259d:	mov    eax,ds:0x42e313
  4025a2:	mov    eax,DWORD PTR [eax+0x1c8]
  4025a8:	mov    eax,DWORD PTR [eax]
  4025aa:	cdq    
  4025ab:	mov    ebx,eax
  4025ad:	mov    eax,0xfabdbee9
  4025b2:	add    ebx,eax
  4025b4:	adc    edx,0xffffffff
  4025b7:	and    DWORD PTR [ebp-0x10],0x0
  4025bb:	xor    edx,0x0
  4025be:	mov    DWORD PTR [ebp-0x6c],edx
  4025c1:	mov    edx,DWORD PTR [ebp+0xc]
  4025c4:	mov    DWORD PTR [ebp-0x14],edx
  4025c7:	mov    ecx,0x8a29a12b
  4025cc:	xor    ebx,ecx
  4025ce:	add    DWORD PTR [ebp-0x14],eax
  4025d1:	mov    edx,DWORD PTR [ebp-0x14]
  4025d4:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025d8:	xor    edx,ecx
  4025da:	mov    DWORD PTR [ebp-0x58],edx
  4025dd:	mov    edx,DWORD PTR [ebp-0x10]
  4025e0:	xor    edx,0x0
  4025e3:	mov    DWORD PTR [ebp-0x54],edx
  4025e6:	cmp    DWORD PTR [ebp-0x58],ebx
  4025e9:	jne    0x4025fb
  4025ef:	mov    edx,DWORD PTR [ebp-0x6c]
  4025f2:	cmp    DWORD PTR [ebp-0x54],edx
  4025f5:	je     0x40262a
  4025fb:	mov    edx,DWORD PTR ds:0x42e313
  402601:	mov    edx,DWORD PTR [edx+0x1c0]
  402607:	mov    edx,DWORD PTR [edx]
  402609:	xor    ebx,ebx
  40260b:	add    edx,eax
  40260d:	adc    ebx,0xffffffff
  402610:	xor    edx,ecx
  402612:	xor    ebx,0x0
  402615:	cmp    edx,0x70941fc1
  40261b:	jne    0x40268d
  402621:	cmp    ebx,0xffffffff
  402624:	jne    0x40268d
  40262a:	mov    edx,DWORD PTR ds:0x42e38f
  402630:	mov    ebx,DWORD PTR ds:0x42e397
  402636:	xor    edx,ebx
  402638:	mov    DWORD PTR ds:0x42e38f,edx
  40263e:	mov    edx,DWORD PTR [ebp-0x2c]
  402641:	mov    ebx,DWORD PTR ds:0x42e38f
  402647:	add    ebx,DWORD PTR [edx]
  402649:	mov    edx,DWORD PTR [ebp-0x2c]
  40264c:	mov    DWORD PTR [edx],ebx
  40264e:	mov    edx,DWORD PTR [ebp+0xc]
  402651:	xor    esi,edx
  402653:	mov    edx,DWORD PTR ds:0x42e38f
  402659:	add    esi,edi
  40265b:	xor    ebx,ebx
  40265d:	add    esi,eax
  40265f:	adc    ebx,0xffffffff
  402662:	xor    edi,edi
  402664:	xor    esi,ecx
  402666:	xor    ebx,0x0
  402669:	add    edx,eax
  40266b:	adc    edi,0xffffffff
  40266e:	xor    edx,ecx
  402670:	xor    edi,0x0
  402673:	cmp    edx,esi
  402675:	jne    0x40268d
  40267b:	cmp    edi,ebx
  40267d:	jne    0x40268d
  402683:	mov    eax,ds:0x42e38f
  402688:	mov    ds:0x42e397,eax
  40268d:	mov    eax,ds:0x42e313
  402692:	push   0x4
  402694:	add    eax,0x1cc
  402699:	push   eax
  40269a:	lea    eax,[ebp-0x24]
  40269d:	push   eax
  40269e:	call   0x4026bd
  4026a3:	mov    eax,DWORD PTR [ebp-0x24]
  4026a6:	mov    eax,DWORD PTR [eax]
  4026a8:	pop    ebx
  4026a9:	pop    esi
  4026aa:	pop    edi
  4026ab:	leave  
  4026ac:	ret    0xc
  4026af:	xor    eax,eax
  4026b1:	sub    DWORD PTR ds:0x429010,0x42b004
  4026bb:	inc    eax
  4026bc:	ret    
  4026bd:	push   ebp
  4026be:	mov    ebp,esp
  4026c0:	sub    esp,0x10
  4026c3:	mov    eax,0xf89c85b9
  4026c8:	and    DWORD PTR ds:0x42b01c,0x0
  4026d2:	jmp    0x4026e4
  4026d7:	mov    edx,DWORD PTR ds:0x42b01c
  4026dd:	inc    edx
  4026de:	mov    DWORD PTR ds:0x42b01c,edx
  4026e4:	cmp    DWORD PTR ds:0x42b01c,0x17
  4026eb:	jae    0x402746
  4026f1:	cmp    DWORD PTR ds:0x42b01c,0x9
  4026f8:	jne    0x40271b
  4026fe:	push   0x42a010
  402703:	push   DWORD PTR [ebp-0x20]
  402706:	push   0x42e111
  40270b:	push   0x54f4
  402710:	push   0x3b26
  402715:	call   DWORD PTR ds:0x42e9a3
  40271b:	cmp    DWORD PTR ds:0x42b01c,0x8
  402722:	jne    0x402735
  402728:	mov    edx,DWORD PTR ds:0x42b01c
  40272e:	inc    edx
  40272f:	mov    DWORD PTR ds:0x42b01c,edx
  402735:	jmp    0x4026d7
  40273a:	mov    edx,DWORD PTR ds:0x42c000
  402740:	or     DWORD PTR ds:0x429018,edx
  402746:	mov    DWORD PTR [ebp-0x4],eax
  402749:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  402750:	mov    ecx,DWORD PTR [ebp-0x4]
  402753:	xor    edx,0x6f97
  402759:	push   esi
  40275a:	adc    esi,esi
  40275c:	mov    edx,0x7510899
  402761:	sbb    DWORD PTR ds:0x429008,0x3023
  40276b:	xor    ecx,edx
  40276d:	and    DWORD PTR ds:0x42900c,ebx
  402773:	mov    esi,0x3272e0
  402778:	push   edi
  402779:	mov    DWORD PTR ds:0x42d01c,0xa60
  402783:	mov    edi,DWORD PTR [ebp+0x10]
  402786:	sub    DWORD PTR ds:0x42c00c,0x3e85
  402790:	add    ecx,esi
  402792:	cmp    ecx,edi
  402794:	mov    DWORD PTR ds:0x42b010,0x6d5c
  40279e:	je     0x4028b7
  4027a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4027a7:	mov    edi,DWORD PTR ds:0x42b000
  4027ad:	sbb    DWORD PTR ds:0x429000,edi
  4027b3:	mov    edi,DWORD PTR [ebp+0x10]
  4027b6:	xor    eax,eax
  4027b8:	xor    ecx,edx
  4027ba:	xor    DWORD PTR ds:0x42900c,0x42a014
  4027c4:	add    ecx,esi
  4027c6:	xor    DWORD PTR ds:0x42d004,0x5916
  4027d0:	add    edi,0xfabdbee9
  4027d6:	adc    eax,0xffffffff
  4027d9:	not    DWORD PTR ds:0x42c004
  4027df:	xor    eax,0x0
  4027e2:	add    DWORD PTR ds:0x42c010,0x42c014
  4027ec:	mov    DWORD PTR [ebp-0xc],eax
  4027ef:	inc    eax
  4027f0:	push   ebx
  4027f1:	add    eax,0x103f
  4027f6:	xor    ebx,ebx
  4027f8:	xor    edi,0x8a29a12b
  4027fe:	mov    eax,ecx
  402800:	add    eax,0xfabdbee9
  402805:	adc    ebx,0xffffffff
  402808:	mov    DWORD PTR ds:0x42c00c,0x588f
  402812:	xor    eax,0x8a29a12b
  402817:	xor    ebx,0x0
  40281a:	mov    DWORD PTR ds:0x42d01c,0x82d
  402824:	cmp    eax,edi
  402826:	mov    DWORD PTR ds:0x42c01c,0x36f6
  402830:	jne    0x402849
  402836:	cmp    ebx,DWORD PTR [ebp-0xc]
  402839:	je     0x4028b1
  40283f:	jmp    0x402849
  402844:	mov    esi,0x3272e0
  402849:	mov    eax,DWORD PTR [ebp-0x4]
  40284c:	mov    edi,DWORD PTR [ebp-0x8]
  40284f:	xor    edi,edx
  402851:	add    edi,esi
  402853:	mov    esi,DWORD PTR [ebp+0x8]
  402856:	imul   edi,ecx
  402859:	mov    ebx,DWORD PTR [ebp+0xc]
  40285c:	xor    eax,edx
  40285e:	add    eax,ecx
  402860:	mov    al,BYTE PTR [ebx+eax*1+0x3272e0]
  402867:	mov    BYTE PTR [edi+esi*1],al
  40286a:	mov    eax,DWORD PTR [ebp-0x8]
  40286d:	mov    esi,DWORD PTR [ebp+0x10]
  402870:	xor    eax,edx
  402872:	xor    ebx,ebx
  402874:	add    esi,0xfabdbee9
  40287a:	adc    ebx,0xffffffff
  40287d:	lea    ecx,[ecx+eax*1+0x3272e0]
  402884:	xor    edi,edi
  402886:	xor    esi,0x8a29a12b
  40288c:	xor    ebx,0x0
  40288f:	mov    eax,ecx
  402891:	add    eax,0xfabdbee9
  402896:	adc    edi,0xffffffff
  402899:	xor    eax,0x8a29a12b
  40289e:	xor    edi,0x0
  4028a1:	cmp    eax,esi
  4028a3:	jne    0x402844
  4028a9:	cmp    edi,ebx
  4028ab:	jne    0x402844
  4028b1:	mov    eax,0xf89c85b8
  4028b6:	pop    ebx
  4028b7:	pop    edi
  4028b8:	pop    esi
  4028b9:	leave  
  4028ba:	ret    0xc
  4028bd:	push   ebp
  4028be:	mov    ebp,esp
  4028c0:	push   ecx
  4028c1:	and    DWORD PTR ds:0x42d010,0x0
  4028cb:	jmp    0x4028de
  4028d0:	xor    eax,eax
  4028d2:	add    eax,DWORD PTR ds:0x42d010
  4028d8:	inc    eax
  4028d9:	mov    ds:0x42d010,eax
  4028de:	cmp    DWORD PTR ds:0x42d010,0x1c
  4028e5:	jae    0x402908
  4028eb:	cmp    DWORD PTR ds:0x42d010,0x24
  4028f2:	jne    0x402903
  4028f8:	push   0x42c010
  4028fd:	call   DWORD PTR ds:0x42e9ab
  402903:	jmp    0x4028d0
  402908:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40290f:	add    edx,0x297b
  402915:	mov    eax,DWORD PTR [ebp+0x8]
  402918:	movsx  eax,BYTE PTR [eax]
  40291b:	add    edx,edx
  40291d:	mov    edx,0x3272e0
  402922:	sbb    DWORD PTR ds:0x429014,0x3776
  40292c:	sub    eax,edx
  40292e:	mov    ecx,0x7510899
  402933:	xor    DWORD PTR ds:0x429014,0x42b000
  40293d:	xor    eax,ecx
  40293f:	mov    DWORD PTR ds:0x429008,0x73b1
  402949:	cmp    eax,0xf89c85f4
  40294e:	mov    DWORD PTR ds:0x42c014,0x53e4
  402958:	jne    0x402987
  40295e:	mov    eax,DWORD PTR [ebp+0x8]
  402961:	push   esi
  402962:	mov    esi,DWORD PTR [ebp+0x8]
  402965:	add    esi,DWORD PTR [eax+0x3c]
  402968:	mov    DWORD PTR [ebp+0x8],esi
  40296b:	mov    eax,DWORD PTR [ebp-0x4]
  40296e:	mov    esi,DWORD PTR [ebp+0x8]
  402971:	xor    eax,ecx
  402973:	add    eax,edx
  402975:	cmp    DWORD PTR [esi+0x54],eax
  402978:	pop    esi
  402979:	je     0x402987
  40297f:	mov    eax,DWORD PTR [ebp+0x8]
  402982:	jmp    0x40298e
  402987:	mov    eax,DWORD PTR [ebp-0x4]
  40298a:	xor    eax,ecx
  40298c:	add    eax,edx
  40298e:	leave  
  40298f:	ret    0x4
  402992:	push   ebp
  402993:	mov    ebp,esp
  402995:	sub    esp,0x40
  402998:	push   ebx
  402999:	adc    DWORD PTR ds:0x42d000,0x42b014
  4029a3:	push   esi
  4029a4:	push   edi
  4029a5:	lea    eax,[ebp-0x24]
  4029a8:	push   eax
  4029a9:	add    DWORD PTR ds:0x429028,0x429004
  4029b3:	lea    eax,[ebp-0x20]
  4029b6:	push   eax
  4029b7:	xor    DWORD PTR ds:0x42c00c,0x5e29
  4029c1:	call   DWORD PTR ds:0x42e9a7
  4029c7:	sub    DWORD PTR ds:0x42a018,0x7df1
  4029d1:	push   0x21
  4029d3:	push   0x434
  4029d8:	sbb    DWORD PTR ds:0x429000,0x54d2
  4029e2:	push   0x98678765
  4029e7:	sub    DWORD PTR ds:0x42d014,0x42c00c
  4029f1:	call   DWORD PTR ds:0x42e983
  4029f7:	xor    DWORD PTR ds:0x429000,edx
  4029fd:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  402a04:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  402a0b:	mov    eax,DWORD PTR [ebp-0x4]
  402a0e:	mov    esi,0x7510899
  402a13:	xor    eax,esi
  402a15:	mov    edi,DWORD PTR ds:0x42b01c
  402a1b:	adc    DWORD PTR ds:0x429010,edi
  402a21:	mov    edi,0x3272e0
  402a26:	add    eax,edi
  402a28:	dec    DWORD PTR ds:0x429000
  402a2e:	mov    DWORD PTR [ebp-0x1c],eax
  402a31:	mov    eax,DWORD PTR [ebp+0x14]
  402a34:	adc    DWORD PTR ds:0x42c000,0x42b014
  402a3e:	test   eax,eax
  402a40:	je     0x402a4e
  402a46:	mov    eax,DWORD PTR [ebp+0x14]
  402a49:	mov    eax,DWORD PTR [eax]
  402a4b:	mov    DWORD PTR [ebp-0x1c],eax
  402a4e:	xor    eax,eax
  402a50:	xor    eax,DWORD PTR ds:0x42901c
  402a56:	and    eax,DWORD PTR ds:0x42b000
  402a5c:	mov    ds:0x42901c,eax
  402a61:	mov    eax,DWORD PTR [ebp-0x4]
  402a64:	xor    eax,esi
  402a66:	adc    ebx,DWORD PTR ds:0x429024
  402a6c:	add    eax,edi
  402a6e:	mov    DWORD PTR [ebp-0x8],eax
  402a71:	sbb    ebx,DWORD PTR ds:0x42c008
  402a77:	mov    eax,DWORD PTR [ebp-0xc]
  402a7a:	mov    DWORD PTR ds:0x42b014,0x1d
  402a84:	cmp    DWORD PTR ds:0x42b014,0x0
  402a8b:	je     0x402aca
  402a91:	cmp    DWORD PTR ds:0x42b014,0x20
  402a98:	jne    0x402ab6
  402a9e:	push   0x3b9b
  402aa3:	push   DWORD PTR [ebp-0x24]
  402aa6:	push   0x42d018
  402aab:	push   0x5e20
  402ab0:	call   DWORD PTR ds:0x42e9af
  402ab6:	xor    ebx,ebx
  402ab8:	or     ebx,DWORD PTR ds:0x42b014
  402abe:	dec    ebx
  402abf:	mov    DWORD PTR ds:0x42b014,ebx
  402ac5:	jmp    0x402a84
  402aca:	xor    eax,esi
  402acc:	and    DWORD PTR ds:0x42a01c,0x0
  402ad6:	mov    ebx,DWORD PTR ds:0x42a01c
  402adc:	inc    ebx
  402add:	mov    DWORD PTR ds:0x42a01c,ebx
  402ae3:	cmp    DWORD PTR ds:0x42a01c,0xd
  402aea:	jne    0x402af6
  402af0:	call   DWORD PTR ds:0x42e9b3
  402af6:	cmp    DWORD PTR ds:0x42a01c,0xc
  402afd:	jne    0x402b10
  402b03:	mov    ebx,DWORD PTR ds:0x42a01c
  402b09:	inc    ebx
  402b0a:	mov    DWORD PTR ds:0x42a01c,ebx
  402b10:	cmp    DWORD PTR ds:0x42a01c,0x15
  402b17:	jb     0x402ad6
  402b1d:	or     DWORD PTR ds:0x42c004,edx
  402b23:	add    eax,edi
  402b25:	sub    DWORD PTR ds:0x42b008,ebx
  402b2b:	mov    DWORD PTR [ebp-0x2c],eax
  402b2e:	mov    eax,DWORD PTR [ebp-0x4]
  402b31:	xor    eax,esi
  402b33:	add    eax,edi
  402b35:	dec    ebx
  402b36:	mov    DWORD PTR [ebp-0x38],eax
  402b39:	mov    DWORD PTR ds:0x42a00c,0x11
  402b43:	cmp    DWORD PTR ds:0x42a00c,0x0
  402b4a:	je     0x402bcf
  402b50:	cmp    DWORD PTR ds:0x42a00c,0x1b
  402b57:	jne    0x402b7d
  402b5d:	push   DWORD PTR [ebp-0x28]
  402b60:	push   0x42a000
  402b65:	push   DWORD PTR [ebp-0x24]
  402b68:	push   0x6762
  402b6d:	push   0x632b
  402b72:	push   0x871c
  402b77:	call   DWORD PTR ds:0x42e9b7
  402b7d:	xor    ebx,ebx
  402b7f:	xor    ebx,DWORD PTR ds:0x42a00c
  402b85:	dec    ebx
  402b86:	mov    DWORD PTR ds:0x42a00c,ebx
  402b8c:	jmp    0x402b43
  402b91:	and    DWORD PTR ds:0x42d018,0x0
  402b9b:	xor    eax,eax
  402b9d:	xor    eax,DWORD PTR ds:0x42d018
  402ba3:	inc    eax
  402ba4:	mov    ds:0x42d018,eax
  402ba9:	cmp    DWORD PTR ds:0x42d018,0x2a
  402bb0:	jne    0x402bbc
  402bb6:	call   DWORD PTR ds:0x42e9bb
  402bbc:	cmp    DWORD PTR ds:0x42d018,0x1c
  402bc3:	jb     0x402b9b
  402bc9:	and    ebx,0x7bf
  402bcf:	mov    ebx,DWORD PTR [ebp-0x4]
  402bd2:	xor    ebx,esi
  402bd4:	adc    DWORD PTR ds:0x42d01c,0x429024
  402bde:	add    ebx,edi
  402be0:	xor    DWORD PTR ds:0x42d008,0x22f2
  402bea:	mov    eax,DWORD PTR [ebp-0x2c]
  402bed:	xor    DWORD PTR ds:0x42a008,0x42d00c
  402bf7:	sub    eax,edi
  402bf9:	lea    ecx,[ebx-0x3272e0]
  402bff:	adc    DWORD PTR ds:0x42c01c,0x429010
  402c09:	xor    eax,esi
  402c0b:	xor    ecx,esi
  402c0d:	cmp    ecx,eax
  402c0f:	mov    DWORD PTR ds:0x42a014,0x880
  402c19:	je     0x405220
  402c1f:	and    DWORD PTR ds:0x42d018,0x0
  402c29:	jmp    0x402c3c
  402c2e:	xor    eax,eax
  402c30:	or     eax,DWORD PTR ds:0x42d018
  402c36:	inc    eax
  402c37:	mov    ds:0x42d018,eax
  402c3c:	cmp    DWORD PTR ds:0x42d018,0x1f
  402c43:	jae    0x402c7e
  402c49:	cmp    DWORD PTR ds:0x42d018,0x26
  402c50:	jne    0x402c69
  402c56:	push   0x847e
  402c5b:	push   0x42901c
  402c60:	push   DWORD PTR [ebp-0x20]
  402c63:	call   DWORD PTR ds:0x42e9bf
  402c69:	jmp    0x402c2e
  402c6e:	mov    eax,ds:0x42b010
  402c73:	and    eax,DWORD PTR ds:0x429010
  402c79:	mov    ds:0x42b010,eax
  402c7e:	mov    eax,DWORD PTR [ebp-0x4]
  402c81:	xor    eax,esi
  402c83:	mov    DWORD PTR ds:0x42c008,0x7a4b
  402c8d:	add    eax,edi
  402c8f:	cmp    ebx,eax
  402c91:	mov    DWORD PTR ds:0x42b000,0x3723
  402c9b:	jne    0x405184
  402ca1:	push   DWORD PTR [ebp+0x8]
  402ca4:	neg    DWORD PTR ds:0x42d018
  402caa:	call   0x4028bd
  402caf:	movzx  ecx,BYTE PTR ds:0x42c000
  402cb6:	xor    DWORD PTR ds:0x429000,ecx
  402cbc:	mov    DWORD PTR [ebp-0x14],eax
  402cbf:	sbb    eax,0x7bdb
  402cc4:	mov    eax,DWORD PTR [ebp-0x4]
  402cc7:	mov    ecx,DWORD PTR [ebp-0x14]
  402cca:	sbb    DWORD PTR ds:0x42b00c,0x398d
  402cd4:	xor    eax,esi
  402cd6:	add    eax,edi
  402cd8:	mov    DWORD PTR ds:0x42a018,0x3718
  402ce2:	jmp    0x405039
  402ce7:	dec    ecx
  402ce8:	je     0x402ca4
  402cea:	dec    ebp
  402ceb:	stos   DWORD PTR es:[edi],eax
  402cec:	cmp    ecx,DWORD PTR [ebp+0x6a681074]
  402cf2:	adc    eax,0x76aa03a9
  402cf7:	jp     0x402d73
  402cf9:	jp     0x402d75
  402cfb:	xor    BYTE PTR [edi+0x7a],bl
  402cfe:	jp     0x402d11
  402d00:	sub    BYTE PTR [edi],dl
  402d02:	cmp    eax,0x2f1b2115
  402d07:	popa   
  402d08:	xor    al,0x65
  402d0a:	data16 aas 
  402d0c:	bound  ebp,QWORD PTR [edx+0x6a]
  402d0f:	imul   esi,DWORD PTR [edx],0x6cfdd8c1
  402d15:	inc    esp
  402d16:	imul   edi,DWORD PTR [ebp+0x5b],0xffffffac
  402d1a:	jl     0x402d85
  402d1c:	push   ebp
  402d1d:	iret   
  402d1e:	pop    ecx
  402d1f:	dec    edx
  402d20:	cmp    al,0x88
  402d22:	cli    
  402d23:	xchg   DWORD PTR [esi+0x57],esi
  402d26:	dec    ecx
  402d27:	jg     0x402d60
  402d29:	mov    WORD PTR [esi+0x3ba2bc7f],fs
  402d2f:	sub    bh,bh
  402d31:	data16 fdivr st,st(2)
  402d34:	push   ebx
  402d35:	jg     0x402d55
  402d37:	jmp    0xe9faf671
  402d3c:	xchg   DWORD PTR [ebx],edx
  402d3e:	fimul  WORD PTR [ebx-0x54aaf0db]
  402d44:	mov    al,al
  402d46:	imul   DWORD PTR [ecx-0x27]
  402d49:	add    al,dl
  402d4b:	push   cs
  402d4c:	cli    
  402d4d:	es adc al,0x44
  402d50:	or     BYTE PTR [esi],ah
  402d52:	imul   esp,DWORD PTR [ebp+esi*4-0x51],0x13
  402d57:	pop    ebp
  402d58:	add    DWORD PTR [esi+0x2b45e5ff],esp
  402d5e:	jo     0x402d92
  402d60:	les    ebx,FWORD PTR [ebx-0xb]
  402d63:	sbb    bh,dl
  402d65:	je     0x402d24
  402d67:	arpl   cx,bx
  402d69:	xchg   esp,eax
  402d6a:	pop    edi
  402d6b:	mov    edi,DWORD PTR [ebp+0x4d821007]
  402d71:	repz sahf 
  402d73:	cmp    BYTE PTR [edx+0x73],dh
  402d76:	or     ebx,edx
  402d78:	sub    DWORD PTR [edx-0x77],edx
  402d7b:	xor    BYTE PTR [ebx],dh
  402d7d:	push   eax
  402d7e:	jecxz  0x402d4f
  402d80:	mov    ah,BYTE PTR ds:0xc8b7cc85
  402d86:	test   BYTE PTR [ebp-0x20],ch
  402d89:	inc    ecx
  402d8a:	push   edx
  402d8b:	dec    eax
  402d8c:	or     BYTE PTR [esi],bh
  402d8e:	repz add ebp,DWORD PTR ss:[ecx+0x4ca7ca4b]
  402d96:	fadd   QWORD PTR [eax]
  402d98:	push   esi
  402d99:	stc    
  402d9a:	push   edx
  402d9b:	push   esi
  402d9c:	mov    eax,ds:0xf4bf64f5
  402da1:	inc    edx
  402da2:	push   ds
  402da3:	rcl    BYTE PTR ds:0xda2529a2,cl
  402da9:	jbe    0x402d7e
  402dab:	mov    ebx,0xba52e426
  402db0:	add    DWORD PTR [edi-0x4d573ca3],0xffffffc7
  402db7:	jbe    0x402e10
  402db9:	cmp    eax,0x23dba5cf
  402dbe:	faddp  st(2),st
  402dc0:	mov    WORD PTR [esi+esi*1+0x23411ea3],?
  402dc7:	and    dl,BYTE PTR [esi-0x1d90d50]
  402dcd:	shr    BYTE PTR [esi],cl
  402dcf:	mov    BYTE PTR [edi+esi*8-0xf46b9d8],ah
  402dd6:	mov    dl,0x1c
  402dd8:	arpl   WORD PTR [eax],bx
  402dda:	adc    al,al
  402ddc:	and    BYTE PTR [ecx+0x5ad7cf35],0xfb
  402de3:	push   ss
  402de4:	adc    BYTE PTR gs:[ebx+0x32],bl
  402de8:	push   esp
  402de9:	bound  ecx,QWORD PTR [eax+0x60]
  402dec:	fs dec dl
  402def:	add    eax,0x701b2aee
  402df4:	mov    ecx,0x2471d785
  402df9:	std    
  402dfa:	or     BYTE PTR [esi],ch
  402dfc:	mov    ds:0x64a95891,al
  402e01:	sbb    esi,DWORD PTR [edi]
  402e03:	test   DWORD PTR [ebx+0x65],0x87b07bdf
  402e0a:	in     eax,0x94
  402e0c:	mov    al,ah
  402e0e:	mov    ebx,0x111d09f2
  402e13:	outs   dx,DWORD PTR ds:[esi]
  402e14:	pop    esp
  402e15:	inc    esp
  402e16:	stos   BYTE PTR es:[edi],al
  402e17:	inc    eax
  402e18:	xchg   ecx,esi
  402e1a:	aas    
  402e1b:	pop    ebp
  402e1c:	mov    bh,BYTE PTR [esi+ecx*8-0xefcdf3f]
  402e23:	xor    BYTE PTR [ecx+0x2be68ea7],ah
  402e29:	xchg   esp,eax
  402e2a:	add    DWORD PTR [ebp+edx*2-0x72ce37c4],0x4b
  402e32:	(bad)  [eax+ecx*1+0x182b3720]
  402e39:	fild   WORD PTR [ebp+0x59]
  402e3c:	leave  
  402e3d:	jmp    0xb118:0x267040a1
  402e44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e45:	pop    esi
  402e46:	jl     0x402e74
  402e48:	push   eax
  402e49:	ds cmp eax,0xe79ff356
  402e4f:	fwait
  402e50:	add    DWORD PTR [edi],esi
  402e52:	push   DWORD PTR [esi+esi*8+0x18ed63fc]
  402e59:	pop    edx
  402e5a:	ret    0x68ff
  402e5d:	test   DWORD PTR [ebx+0x19],esp
  402e60:	jmp    0xdc6e:0xf5b4ad6f
  402e67:	ja     0x402e52
  402e69:	mov    ds:0xd9bf13f6,al
  402e6e:	call   0x3ef139db
  402e73:	mov    BYTE PTR [edi+esi*8],ch
  402e76:	sbb    DWORD PTR [edi+0x79],edx
  402e79:	dec    esp
  402e7a:	mov    ch,0x89
  402e7c:	and    BYTE PTR [eax-0x7cc67f30],0xc6
  402e83:	paddq  mm4,QWORD PTR [edx-0x45]
  402e87:	mov    bh,0xff
  402e89:	pop    ds
  402e8a:	adc    ebp,DWORD PTR ds:0xd5504b27
  402e90:	sahf   
  402e91:	inc    esp
  402e92:	retf   0x5484
  402e95:	push   esp
  402e96:	jne    0x402e3c
  402e98:	and    eax,0x45d86f1b
  402e9d:	ss cs dec edx
  402ea0:	(bad)  
  402ea2:	outs   dx,DWORD PTR ds:[esi]
  402ea3:	popf   
  402ea4:	(bad)  
  402ea5:	shl    ebp,cl
  402ea7:	sahf   
  402ea8:	aas    
  402ea9:	into   
  402eaa:	into   
  402eab:	sbb    al,0xc4
  402ead:	pop    ebx
  402eae:	xor    bh,bh
  402eb0:	and    BYTE PTR [ecx-0x59],al
  402eb3:	loope  0x402ef8
  402eb5:	pop    esi
  402eb6:	dec    ecx
  402eb7:	xchg   edx,eax
  402eb8:	push   ebp
  402eb9:	shl    bl,1
  402ebb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ebc:	scas   al,BYTE PTR es:[edi]
  402ebd:	fs adc ecx,edi
  402ec0:	outs   dx,BYTE PTR ds:[esi]
  402ec1:	xlat   BYTE PTR ds:[ebx]
  402ec2:	lahf   
  402ec3:	xchg   DWORD PTR ds:0xf7aa46a5,esi
  402ec9:	xor    DWORD PTR [eiz*1-0x2ac086f9],ebp
  402ed0:	add    cl,bh
  402ed2:	sbb    eax,0x57927a5e
  402ed7:	adc    eax,0x577f7aa0
  402edc:	cdq    
  402edd:	jmp    0x15469961
  402ee2:	loope  0x402eec
  402ee4:	fstp   TBYTE PTR [ebx+0x36]
  402ee7:	into   
  402ee8:	mov    ecx,0x78ae5519
  402eed:	out    dx,eax
  402eee:	inc    ebp
  402eef:	enter  0x8282,0x42
  402ef3:	xchg   edx,eax
  402ef4:	xor    al,bl
  402ef6:	and    BYTE PTR [esi],0xbe
  402ef9:	mov    al,0xd3
  402efb:	push   eax
  402efc:	arpl   WORD PTR ss:[ecx-0x47],bx
  402f00:	sub    DWORD PTR [edi+eax*2+0x7d2df559],ecx
  402f07:	cmc    
  402f08:	jge    0x402ee0
  402f0a:	or     dh,dl
  402f0c:	ror    DWORD PTR [ebx+esi*1+0x676840b4],1
  402f13:	xlat   BYTE PTR ds:[ebx]
  402f14:	push   0x6a
  402f16:	ror    BYTE PTR [ebp-0x42],cl
  402f19:	cmovle edx,DWORD PTR ds:0xb03eeb7
  402f20:	cmp    cl,dh
  402f22:	xlat   BYTE PTR ds:[ebx]
  402f23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f24:	out    dx,al
  402f25:	add    DWORD PTR [ebp+0x35],ecx
  402f28:	mov    edi,0x6d068b4a
  402f2d:	pop    ecx
  402f2e:	mov    edi,0x2dc46d64
  402f33:	in     al,0xae
  402f35:	pop    esp
  402f36:	pop    eax
  402f37:	loop   0x402ee6
  402f39:	(bad)  
  402f3a:	into   
  402f3b:	jp     0x402ee9
  402f3d:	cdq    
  402f3e:	and    al,0xbc
  402f40:	and    dl,BYTE PTR [ecx+0x55]
  402f43:	loop   0x402fab
  402f45:	ss pop ecx
  402f47:	loopne 0x402f78
  402f49:	xchg   cl,al
  402f4b:	popf   
  402f4c:	ret    
  402f4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f4e:	xchg   edx,eax
  402f4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f50:	cmp    al,0x96
  402f52:	mov    BYTE PTR [eax+0x5],ah
  402f55:	outs   dx,BYTE PTR ds:[esi]
  402f56:	xchg   ebx,eax
  402f57:	clc    
  402f58:	fild   DWORD PTR [edi]
  402f5a:	icebp  
  402f5b:	call   0xaf11870c
  402f60:	enter  0x688,0x92
  402f64:	jg     0x402f71
  402f66:	mov    eax,0x20177743
  402f6b:	lods   al,BYTE PTR ds:[esi]
  402f6c:	jmp    0x3d45f778
  402f71:	sar    BYTE PTR [ebx-0x6a5789cb],0x17
  402f78:	adc    eax,0x4c127e82
  402f7d:	scas   al,BYTE PTR es:[edi]
  402f7e:	pop    es
  402f7f:	mov    eax,ds:0x2d950203
  402f84:	scas   al,BYTE PTR es:[edi]
  402f85:	or     DWORD PTR [eax+0x16b7a5de],0xcff2ffc3
  402f8f:	rcr    BYTE PTR [esi],cl
  402f91:	dec    edi
  402f92:	mov    ch,BYTE PTR [edx+ebx*4-0x6403a37d]
  402f99:	aas    
  402f9a:	repz retf 
  402f9c:	iret   
  402f9d:	fidivr DWORD PTR [ecx-0x7ae02cea]
  402fa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fa4:	inc    esi
  402fa5:	push   esi
  402fa6:	mov    al,0x9b
  402fa8:	and    eax,0x334d8e89
  402fad:	cmp    dl,ah
  402faf:	push   ebx
  402fb0:	cwde   
  402fb1:	push   0x93d65e59
  402fb6:	mov    ds:0x6c6f933c,al
  402fbb:	cmp    al,0x79
  402fbd:	pop    eax
  402fbe:	leave  
  402fbf:	mov    ecx,0x4cb03109
  402fc4:	mov    esi,DWORD PTR [ebx+0x73]
  402fc7:	jns    0x402fd2
  402fc9:	and    BYTE PTR [ebx],dl
  402fcb:	imul   ebx,edx,0x403c1ba9
  402fd1:	jg     0x402f78
  402fd3:	int    0x64
  402fd5:	pop    esp
  402fd6:	out    dx,eax
  402fd7:	add    cl,0xbd
  402fda:	outs   dx,DWORD PTR gs:[esi]
  402fdc:	out    dx,al
  402fdd:	adc    BYTE PTR [ebp+0xc0b7b5a],cl
  402fe3:	mov    al,0x67
  402fe5:	mov    eax,0x2a3e7e41
  402fea:	inc    esp
  402feb:	test   al,0xe3
  402fed:	loopne 0x402ff4
  402fef:	adc    BYTE PTR [esp+eiz*2-0x12e4a0aa],bl
  402ff6:	or     al,0xcb
  402ff8:	xchg   ebp,eax
  402ff9:	jmp    0x4683:0x807c550a
  403000:	xchg   edi,eax
  403001:	pop    ebx
  403002:	inc    ebp
  403003:	jle    0x402ff7
  403005:	xchg   DWORD PTR ds:0x8e74ba07,ecx
  40300b:	or     bh,cl
  40300d:	lock scas al,BYTE PTR es:[edi]
  40300f:	dec    ecx
  403010:	inc    edi
  403011:	xchg   ebx,eax
  403012:	rcr    DWORD PTR [eax],1
  403014:	(bad)  
  403015:	leave  
  403016:	add    al,0x10
  403018:	(bad)  
  40301a:	push   0x3d9fb7f5
  40301f:	mov    al,0xd8
  403021:	int3   
  403022:	or     esi,ebp
  403024:	push   0x46
  403026:	push   ebx
  403027:	arpl   WORD PTR [esi+0x711ab339],si
  40302d:	pop    ss
  40302e:	in     al,dx
  40302f:	mov    esp,eax
  403031:	pop    ebp
  403032:	dec    ebp
  403033:	aaa    
  403034:	mov    ch,0x78
  403036:	push   0x6d
  403038:	sbb    al,cl
  40303a:	loop   0x402fd8
  40303c:	jmp    0x403001
  40303e:	ds sub al,0xc1
  403041:	mov    DWORD PTR [esi+0x7a],eax
  403044:	scas   al,BYTE PTR es:[edi]
  403045:	add    al,0x37
  403047:	mov    ds:0x34e67490,al
  40304c:	shl    DWORD PTR [edx],1
  40304e:	int    0x19
  403050:	lock mov eax,ds:0x9d7d5a64
  403056:	leave  
  403057:	mov    bl,0x38
  403059:	xlat   BYTE PTR ds:[ebx]
  40305a:	out    dx,eax
  40305b:	clc    
  40305c:	mov    cl,0x5b
  40305e:	nop
  40305f:	out    0x52,al
  403061:	sbb    esi,DWORD PTR [edi+esi*2-0x2d]
  403065:	das    
  403066:	jl     0x403085
  403068:	popa   
  403069:	adc    DWORD PTR [edx-0x6c07550b],edi
  40306f:	rcr    eax,1
  403071:	sbb    dh,BYTE PTR [edi]
  403073:	adc    ecx,edi
  403075:	emms   
  403077:	imul   ebp,DWORD PTR [edi+eiz*2],0xfffffff0
  40307b:	and    cl,al
  40307d:	mov    BYTE PTR [ebx-0x9],bl
  403080:	add    DWORD PTR ds:0x1f8252f0,0x35
  403087:	data16 stos BYTE PTR es:[edi],al
  403089:	mov    bl,0xaf
  40308b:	cmp    eax,0x21b95b3e
  403090:	jbe    0x403036
  403092:	aas    
  403093:	repz into 
  403095:	adc    bh,BYTE PTR [eax-0x6a]
  403098:	mov    ch,0x97
  40309a:	ret    0x13f9
  40309d:	push   ebp
  40309e:	loop   0x403083
  4030a0:	mov    al,dh
  4030a2:	rol    eax,0xfa
  4030a5:	daa    
  4030a6:	mov    ecx,DWORD PTR [eax]
  4030a8:	add    DWORD PTR [ebx],0x69
  4030ab:	jmp    0xf493:0xf738d165
  4030b2:	fwait
  4030b3:	or     eax,0xc558f28c
  4030b8:	lahf   
  4030b9:	into   
  4030ba:	data16 into 
  4030bc:	cmp    edx,DWORD PTR [edi+0x1dcff1ab]
  4030c2:	sbb    eax,0xff6e2559
  4030c7:	fldenv [esp+edx*8]
  4030ca:	fxam   
  4030cc:	enter  0xdf56,0xd4
  4030d0:	stos   DWORD PTR es:[edi],eax
  4030d1:	clc    
  4030d2:	dec    ebp
  4030d3:	ret    
  4030d4:	inc    ecx
  4030d5:	add    eax,DWORD PTR [edi+0x23]
  4030d8:	test   eax,0xb90d9920
  4030dd:	jle    0x4030a3
  4030df:	lods   al,BYTE PTR ds:[esi]
  4030e0:	cdq    
  4030e1:	das    
  4030e2:	dec    eax
  4030e3:	sub    DWORD PTR [edi-0x4d],0x7b
  4030e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030e8:	out    0xc9,eax
  4030ea:	into   
  4030eb:	mov    al,ds:0x46888bee
  4030f0:	pop    ebx
  4030f1:	aam    0xb8
  4030f3:	sbb    eax,0xce57f8cd
  4030f8:	push   ds
  4030f9:	aas    
  4030fa:	ins    DWORD PTR es:[edi],dx
  4030fb:	jo     0x40311f
  4030fd:	loop   0x4030d0
  4030ff:	dec    ebp
  403100:	adc    edi,DWORD PTR [eax-0x27]
  403103:	xchg   DWORD PTR [eax-0x347d883],edi
  403109:	loope  0x4030b0
  40310b:	cmp    al,0xde
  40310d:	ins    BYTE PTR es:[edi],dx
  40310e:	pop    edx
  40310f:	sbb    DWORD PTR [ecx-0x1d761a27],ebx
  403115:	dec    eax
  403116:	lea    ebx,[esi]
  403118:	imul   ebx,eax,0x6f
  40311b:	mov    WORD PTR [ecx],?
  40311d:	mov    edi,0x5905cf4b
  403122:	stc    
  403123:	adc    dh,BYTE PTR [ebx-0x45d8b644]
  403129:	and    BYTE PTR [esp+ecx*8+0x77],bl
  40312d:	mov    DWORD PTR [ebx],ebx
  40312f:	pushf  
  403130:	xchg   esi,eax
  403131:	test   BYTE PTR [esi],dh
  403133:	add    DWORD PTR [edx-0x7d035cb5],ebp
  403139:	les    ecx,FWORD PTR [ebx+ecx*2]
  40313c:	add    dh,bh
  40313e:	add    BYTE PTR [ecx-0x605e188e],al
  403144:	das    
  403145:	nop
  403146:	pop    ebp
  403147:	neg    BYTE PTR [ebp+edx*2-0x791e558c]
  40314e:	jns    0x4030ef
  403150:	adc    cl,dl
  403152:	fiadd  DWORD PTR [ecx]
  403154:	inc    edi
  403155:	and    eax,0xc53108a0
  40315a:	push   ss
  40315b:	mov    ebx,0xf91c9c38
  403160:	add    esp,DWORD PTR [esi-0x63fcf3da]
  403166:	daa    
  403167:	sub    BYTE PTR [eax+edi*1-0x65],al
  40316b:	mov    al,0x3a
  40316d:	repnz daa 
  40316f:	mov    eax,0xc1321b5c
  403174:	(bad)  
  403175:	xlat   BYTE PTR ds:[ebx]
  403176:	inc    ecx
  403177:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403178:	and    al,0x7a
  40317a:	imul   esi,ebx,0x21f396b5
  403180:	shr    BYTE PTR [ecx],0x27
  403183:	mov    WORD PTR [ecx+ebp*8+0x1a],fs
  403187:	ficomp DWORD PTR [ecx-0x41]
  40318a:	pop    ebx
  40318b:	fs cmc 
  40318d:	popf   
  40318e:	lds    edx,FWORD PTR [ebp-0x14]
  403191:	adc    dl,bh
  403193:	loope  0x4031c5
  403195:	ror    BYTE PTR ds:[esi*2-0x50f20b7e],cl
  40319d:	mov    edi,DWORD PTR [edx]
  40319f:	mov    ebp,0x4830e9c7
  4031a4:	dec    edi
  4031a5:	arpl   WORD PTR [edx+0x3dade563],bx
  4031ab:	retf   0x7559
  4031ae:	push   esp
  4031af:	mov    dl,0x60
  4031b1:	test   BYTE PTR [ebx],ah
  4031b3:	push   esp
  4031b4:	cmp    BYTE PTR [esp+eax*8],ch
  4031b7:	dec    esp
  4031b8:	adc    BYTE PTR [edi],bh
  4031ba:	mov    ds:0xfe1c4481,al
  4031bf:	sub    DWORD PTR [edx+0x1f64c811],esi
  4031c5:	syscall 
  4031c7:	arpl   WORD PTR [edi-0xe],bx
  4031ca:	xor    DWORD PTR [edi-0x1c],esi
  4031cd:	sub    eax,edi
  4031cf:	mov    ah,BYTE PTR [ebp-0x27]
  4031d2:	retf   
  4031d3:	mov    cs,ecx
  4031d5:	adc    eax,0xab0af33c
  4031da:	mov    eax,ds:0x9b082474
  4031df:	rcl    BYTE PTR [ecx+ebp*8],cl
  4031e2:	scas   al,BYTE PTR es:[edi]
  4031e3:	or     DWORD PTR [eax-0xc05b971],0x33
  4031ea:	scas   al,BYTE PTR es:[edi]
  4031eb:	ret    
  4031ec:	cmp    BYTE PTR [eax-0x4520e0f3],al
  4031f2:	int    0x2f
  4031f4:	test   cl,0x9a
  4031f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031f8:	out    dx,eax
  4031f9:	sahf   
  4031fa:	mov    BYTE PTR [eax],al
  4031fc:	(bad)  
  4031fd:	xchg   edi,eax
  4031fe:	mov    ah,0x4d
  403200:	out    dx,al
  403201:	in     al,dx
  403202:	stos   BYTE PTR es:[edi],al
  403203:	ror    BYTE PTR [edi+0x5f],0x7d
  403207:	cmp    al,0xee
  403209:	mov    eax,0x71cc92c7
  40320e:	cmp    eax,0x495d1bb1
  403213:	imul   ebx,DWORD PTR [ecx-0x2a],0x81f619c
  40321a:	std    
  40321b:	adc    cl,BYTE PTR [eax-0x19]
  40321e:	lock nop
  403220:	in     al,dx
  403221:	(bad)  
  403222:	push   ecx
  403223:	push   ecx
  403224:	sahf   
  403225:	mov    edx,0xfb0e8fbe
  40322a:	pushf  
  40322b:	push   ebx
  40322c:	inc    esi
  40322d:	cld    
  40322e:	push   ecx
  40322f:	push   es
  403230:	mov    edi,0xc41a15e1
  403235:	pop    edx
  403236:	inc    ebp
  403237:	arpl   WORD PTR [edx],bp
  403239:	push   es
  40323a:	xchg   ebx,eax
  40323b:	lods   al,BYTE PTR ds:[esi]
  40323c:	inc    edi
  40323d:	imul   esi,edx,0xffffffad
  403240:	xor    DWORD PTR [edi+0x5c25ed4c],ecx
  403246:	mov    esp,0x4809297c
  40324b:	push   ss
  40324c:	inc    esi
  40324d:	xchg   edi,eax
  40324e:	les    ecx,FWORD PTR [edi+0x5d]
  403251:	mov    ecx,0x7e0743fb
  403256:	jae    0x4032c5
  403258:	outs   dx,DWORD PTR ds:[esi]
  403259:	popf   
  40325a:	push   ecx
  40325b:	in     al,dx
  40325c:	adc    DWORD PTR [ebp+0x3d],0xffffffe3
  403260:	jae    0x403270
  403262:	or     ecx,edx
  403264:	(bad)  
  403266:	cmp    BYTE PTR [eax],ah
  403268:	ficomp DWORD PTR [edi+0x66]
  40326b:	and    BYTE PTR [edi+0x4b],ch
  40326e:	mov    ds:0x2ff2dc9c,eax
  403273:	add    eax,0x4584cea1
  403278:	fs aaa 
  40327a:	dec    ecx
  40327b:	dec    ebx
  40327c:	xchg   esi,eax
  40327d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40327e:	ss out dx,al
  403280:	cmp    DWORD PTR [esi+0x25a48636],edx
  403286:	popa   
  403287:	mov    ebp,0x2406d255
  40328c:	push   cs
  40328d:	jge    0x4032a3
  40328f:	adc    BYTE PTR [edi],al
  403291:	mov    al,ds:0x322b083d
  403296:	xchg   ecx,eax
  403297:	xchg   BYTE PTR ds:0xe7ec1d16,dl
  40329d:	lahf   
  40329e:	int    0x89
  4032a0:	xchg   edx,ebp
  4032a2:	sbb    al,0xfa
  4032a4:	inc    ebx
  4032a5:	push   0x4d
  4032a7:	pop    ecx
  4032a8:	test   DWORD PTR [ebp-0x7a578442],0xb0b5e93c
  4032b2:	hlt    
  4032b3:	mov    DWORD PTR [ebx-0x5085e2db],eax
  4032b9:	push   ss
  4032ba:	pop    ebx
  4032bb:	fwait
  4032bc:	cld    
  4032bd:	mov    ds:0x47f4f6d8,eax
  4032c2:	aas    
  4032c3:	pop    esi
  4032c4:	mov    dh,0x76
  4032c6:	jl     0x40332f
  4032c8:	dec    eax
  4032c9:	ror    DWORD PTR [eax+edi*1+0x3d8a3e62],cl
  4032d0:	lock push eax
  4032d2:	mov    ecx,0xabaea662
  4032d7:	arpl   si,si
  4032d9:	xchg   ebp,eax
  4032da:	test   BYTE PTR [ecx],cl
  4032dc:	add    ebx,ebp
  4032de:	call   0x4ed4:0xf658e788
  4032e5:	mov    bh,0x32
  4032e7:	fild   WORD PTR [ecx+0x53]
  4032ea:	fidivr DWORD PTR [esi]
  4032ec:	iret   
  4032ed:	mov    edx,0x98f3b54a
  4032f2:	aaa    
  4032f3:	fsub   DWORD PTR [eax-0x70349721]
  4032f9:	adc    al,0xd4
  4032fb:	ins    BYTE PTR es:[edi],dx
  4032fc:	(bad)  
  4032fd:	aam    0xd
  4032ff:	mov    al,ds:0x7ed07d2c
  403304:	push   edi
  403305:	push   ss
  403306:	scas   al,BYTE PTR es:[edi]
  403307:	mov    esp,0x2b389c44
  40330c:	sar    DWORD PTR [edi],cl
  40330e:	mov    ebp,DWORD PTR [eiz*8+0x18f4ff04]
  403315:	inc    ebx
  403316:	mov    ebx,0x6d2ccce7
  40331b:	arpl   WORD PTR [ecx+edx*8+0x53],bx
  40331f:	scas   eax,DWORD PTR es:[edi]
  403320:	and    DWORD PTR [ebp+0x36ac036f],0x31
  403327:	aam    0x1d
  403329:	outs   dx,DWORD PTR ds:[esi]
  40332a:	sbb    al,0xcd
  40332c:	fisub  WORD PTR [edi-0x42]
  40332f:	stc    
  403330:	mov    bh,0xfe
  403332:	(bad)  
  403333:	fadd   QWORD PTR ds:0x2336f5c1
  403339:	adc    al,0x57
  40333b:	bound  edx,QWORD PTR [ebp-0x1705d3c5]
  403341:	shl    DWORD PTR [eax-0x56],cl
  403344:	lds    eax,FWORD PTR [ebx]
  403346:	lods   al,BYTE PTR ds:[esi]
  403347:	adc    ebp,DWORD PTR [edi]
  403349:	loopne 0x403370
  40334b:	mov    esp,DWORD PTR [ebp-0x4e]
  40334e:	dec    esp
  40334f:	mov    dl,0x25
  403351:	(bad)  
  403352:	push   edi
  403353:	inc    ebp
  403354:	dec    ebx
  403355:	dec    edi
  403356:	sbb    al,0xa6
  403358:	mov    edx,0x7512024c
  40335d:	jge    0x4033c5
  40335f:	fisubr WORD PTR [edi+0x66]
  403362:	fwait
  403363:	test   ecx,ebp
  403365:	repnz cs sti 
  403368:	mov    ch,0xf6
  40336a:	xor    edx,eax
  40336c:	fsubrp st(2),st
  40336e:	and    edx,edi
  403370:	call   0x8ff6:0x635dc75f
  403377:	add    dl,0xaa
  40337a:	mov    ebp,0x9b455b32
  40337f:	and    DWORD PTR ds:0x8f7be782,edx
  403385:	lods   eax,DWORD PTR ds:[esi]
  403386:	sub    esi,DWORD PTR [bp+si-0x4493]
  40338b:	push   es
  40338c:	sbb    al,BYTE PTR [edi+eiz*2+0x226249cb]
  403393:	outs   dx,BYTE PTR ds:[esi]
  403394:	jecxz  0x403325
  403396:	mov    al,ds:0xe7529c43
  40339b:	sbb    dl,bh
  40339d:	in     eax,dx
  40339e:	sub    dl,dl
  4033a0:	repz aas 
  4033a2:	or     bl,BYTE PTR [edi-0x5]
  4033a5:	repz mov esi,DWORD PTR [eax]
  4033a8:	adc    bh,dl
  4033aa:	jns    0x40335d
  4033ac:	cwde   
  4033ad:	popa   
  4033ae:	add    eax,0x74355d79
  4033b3:	ds out dx,eax
  4033b5:	dec    ecx
  4033b6:	cwd    
  4033b8:	popf   
  4033b9:	sub    eax,0x7bb574a3
  4033be:	add    BYTE PTR fs:[eax+0x273323e2],0x5
  4033c6:	mov    ecx,0x3dd9f2fe
  4033cb:	push   cs
  4033cc:	in     eax,dx
  4033cd:	dec    esp
  4033ce:	dec    ebp
  4033cf:	cmp    eax,0xbe149390
  4033d4:	sti    
  4033d5:	mov    cl,0x9c
  4033d7:	or     al,0x15
  4033d9:	outs   dx,DWORD PTR ds:[esi]
  4033da:	jecxz  0x403364
  4033dc:	mov    eax,0x368e16a7
  4033e1:	mov    ebx,0x4ee73ad9
  4033e6:	or     ch,BYTE PTR [ebx-0x7e1e000]
  4033ec:	dec    edi
  4033ed:	pushf  
  4033ee:	adc    DWORD PTR [edi-0x27],0xffffffff
  4033f2:	pop    eax
  4033f3:	sub    bh,BYTE PTR ds:0x9081cd8a
  4033f9:	cmp    dl,BYTE PTR [edx+0x5483c42]
  4033ff:	inc    edi
  403400:	xchg   ebp,eax
  403401:	xor    BYTE PTR ds:0x266bb1c3,bl
  403407:	dec    edi
  403408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403409:	cmp    edi,ebx
  40340b:	gs repz lahf 
  40340e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40340f:	mov    eax,ds:0x6a18eb1b
  403414:	pop    edx
  403415:	xchg   edx,esp
  403417:	add    esp,esi
  403419:	jb     0x4033a1
  40341b:	(bad)  
  40341c:	cwde   
  40341d:	push   edi
  40341e:	mov    ah,cl
  403420:	repnz sbb DWORD PTR [esi],0x1daa92
  403427:	xor    eax,DWORD PTR [eax]
  403429:	adc    eax,0x23f4c206
  40342e:	push   ds
  40342f:	jo     0x403416
  403431:	inc    esp
  403432:	pop    ds
  403433:	and    DWORD PTR [eax+edi*8-0x33],ebx
  403437:	inc    eax
  403438:	cmp    cl,cl
  40343a:	dec    ecx
  40343b:	jl     0x4034a9
  40343d:	sahf   
  40343e:	xor    esi,DWORD PTR [ebx]
  403440:	or     bl,al
  403442:	sub    DWORD PTR [edi-0x626e2f3],0x908e4cec
  40344c:	pop    edi
  40344d:	push   edx
  40344e:	xchg   BYTE PTR [ecx],al
  403450:	jecxz  0x403497
  403452:	add    edi,ecx
  403454:	jge    0x403420
  403456:	fstp   TBYTE PTR [ecx-0x5d]
  403459:	test   BYTE PTR [ecx+0x7ddcc996],dh
  40345f:	dec    esi
  403460:	jmp    0x2e5b:0x514671a9
  403467:	add    BYTE PTR [esi],bl
  403469:	rol    BYTE PTR [ebx-0x61],cl
  40346c:	pusha  
  40346d:	loopne 0x4034d4
  40346f:	dec    ebp
  403470:	cli    
  403471:	and    DWORD PTR [edx+0xb],edx
  403474:	pop    eax
  403475:	xor    DWORD PTR [edi+0xcf71501],eax
  40347b:	sub    ch,BYTE PTR [ecx-0x66afb4c2]
  403481:	push   ebx
  403482:	add    DWORD PTR [eax+edx*1+0x58e5f614],ebp
  403489:	jmp    0x40348d
  40348b:	retf   0x423b
  40348e:	aad    0x96
  403490:	cli    
  403491:	lock sbb BYTE PTR [edx+0x4a3a58a5],dh
  403498:	xor    ecx,DWORD PTR [edi+0x7617f90f]
  40349e:	jmp    0xe7cb2b7f
  4034a3:	int3   
  4034a4:	push   esp
  4034a5:	jl     0x4034eb
  4034a7:	and    al,0x45
  4034a9:	pop    ss
  4034aa:	dec    edi
  4034ab:	or     dl,ch
  4034ad:	dec    esi
  4034ae:	xchg   ecx,eax
  4034af:	push   DWORD PTR [ecx+0x14]
  4034b2:	sub    BYTE PTR [ebx+esi*1+0x28],cl
  4034b6:	repnz test BYTE PTR [ebx-0x66290e2b],dl
  4034bd:	pop    ds
  4034be:	dec    esp
  4034bf:	sub    bl,ch
  4034c1:	mov    bh,0x67
  4034c3:	dec    eax
  4034c4:	pop    edx
  4034c5:	out    dx,al
  4034c6:	pop    eax
  4034c7:	mov    DWORD PTR [ecx],edx
  4034c9:	adc    DWORD PTR [ebx],esp
  4034cb:	adc    esp,DWORD PTR [ebp+0x7fcdcc62]
  4034d1:	inc    ebp
  4034d2:	mov    bh,0xa0
  4034d4:	scas   al,BYTE PTR es:[edi]
  4034d5:	mov    ch,0xc3
  4034d7:	push   ebx
  4034d8:	push   ebp
  4034d9:	fs aas 
  4034db:	aas    
  4034dc:	out    0x45,eax
  4034de:	mov    eax,0xbd03996b
  4034e3:	xor    edx,DWORD PTR [ecx]
  4034e5:	mov    al,ds:0xd574e0a7
  4034ea:	sub    al,0xe
  4034ec:	out    dx,eax
  4034ed:	lock jmp 0xc8b26433
  4034f3:	push   edx
  4034f4:	(bad)  
  4034f5:	pop    edx
  4034f6:	ret    0xa237
  4034f9:	hlt    
  4034fa:	int    0x63
  4034fc:	adc    al,0x68
  4034fe:	and    ebp,eax
  403500:	inc    BYTE PTR [eax-0x34]
  403503:	cmc    
  403504:	arpl   WORD PTR [edi*2-0x2e525a8d],sp
  40350b:	adc    cl,BYTE PTR [eax]
  40350d:	mov    dh,0xbc
  40350f:	cld    
  403510:	xchg   DWORD PTR [edi+edx*2-0x66],ebp
  403514:	jae    0x4034df
  403516:	out    dx,al
  403517:	cdq    
  403518:	(bad)  
  403519:	xacquire xchg BYTE PTR [ebx-0x3d],dh
  40351d:	sti    
  40351e:	mov    cx,0xdc7d
  403522:	test   eax,0xbce545be
  403527:	daa    
  403528:	addr16 mov ah,0x78
  40352b:	adc    edi,ebp
  40352d:	cmc    
  40352e:	(bad)  [ebx+eax*2-0x6abbc723]
  403535:	xchg   DWORD PTR [edi],ebx
  403537:	int3   
  403538:	dec    BYTE PTR [ebp+0x50821fea]
  40353e:	jp     0x40355e
  403540:	sub    al,0x47
  403542:	mov    dh,0xbe
  403545:	xchg   edi,eax
  403546:	xchg   esp,eax
  403547:	lods   al,BYTE PTR ds:[esi]
  403548:	cmc    
  403549:	jge    0x403521
  40354b:	cmp    al,0x4e
  40354d:	cmp    ah,ch
  40354f:	fisttp WORD PTR [esi]
  403551:	ja     0x4034f2
  403553:	or     BYTE PTR [edx],al
  403555:	pop    edi
  403556:	sahf   
  403557:	and    DWORD PTR [ebx],edi
  403559:	push   ecx
  40355a:	dec    edx
  40355b:	stos   BYTE PTR es:[edi],al
  40355c:	les    edx,FWORD PTR [ebx]
  40355e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40355f:	jecxz  0x40352d
  403561:	jne    0x40355c
  403563:	pop    esp
  403564:	sbb    eax,0xdd4eb7d3
  403569:	xor    al,0x80
  40356b:	cs mov ebx,esi
  40356e:	xchg   edi,eax
  40356f:	dec    ecx
  403570:	in     eax,dx
  403571:	stc    
  403572:	js     0x403535
  403574:	adc    dl,dl
  403576:	adc    al,0x31
  403578:	ja     0x4035c4
  40357a:	or     BYTE PTR [ebx-0x58],ch
  40357d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40357e:	(bad)  
  40357f:	pop    eax
  403580:	dec    eax
  403581:	retf   
  403582:	dec    ecx
  403583:	enter  0x34ba,0xf2
  403587:	loope  0x4035e8
  403589:	das    
  40358a:	cs cmp eax,0x3c319e3c
  403590:	push   ds
  403591:	jae    0x403539
  403593:	cld    
  403594:	(bad)  
  403595:	and    al,0x16
  403597:	sbb    al,al
  403599:	ffreep st(2)
  40359b:	dec    eax
  40359c:	ret    
  40359d:	add    al,0x79
  40359f:	jbe    0x403548
  4035a1:	mov    edx,0xf8a5bc4
  4035a6:	arpl   WORD PTR [ebp+eiz*2+0x5b585341],di
  4035ad:	aam    0x3c
  4035af:	mov    ebx,0xd505e773
  4035b4:	test   eax,0xb9ca8b91
  4035b9:	jb     0x4035dc
  4035bb:	xchg   edx,eax
  4035bc:	xor    BYTE PTR [esi+0xda0f5ae],0x9
  4035c3:	mov    ?,esi
  4035c5:	(bad)  
  4035c7:	xchg   ebx,eax
  4035c8:	inc    esi
  4035c9:	pop    ebp
  4035ca:	mov    bl,0xc0
  4035cc:	mov    ebp,DWORD PTR [edi+0x19]
  4035cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035d0:	jl     0x4035c7
  4035d2:	and    BYTE PTR [edi+edx*8-0x27],ah
  4035d6:	ret    
  4035d7:	adc    DWORD PTR [edi],edi
  4035d9:	pop    eax
  4035da:	xor    al,0xf7
  4035dc:	push   ds
  4035dd:	push   0x1c
  4035df:	popf   
  4035e0:	pop    ds
  4035e1:	push   ds
  4035e2:	mov    dh,0xce
  4035e4:	and    edi,esp
  4035e6:	sub    eax,0x5ad316f5
  4035eb:	pop    es
  4035ec:	jns    0x40357f
  4035ee:	jbe    0x4035ae
  4035f0:	dec    ecx
  4035f1:	lds    edx,FWORD PTR [ebx+eax*8-0x5640f17c]
  4035f8:	fbld   TBYTE PTR [ebx+edx*1+0x2e]
  4035fc:	in     al,0x3d
  4035fe:	bound  ebx,QWORD PTR [ebx+0x2f60ef52]
  403604:	cdq    
  403605:	jbe    0x403609
  403607:	std    
  403608:	cmp    eax,0xf7f18bcc
  40360d:	and    BYTE PTR [esi],0xa8
  403610:	add    al,bl
  403612:	mov    al,0xfd
  403614:	sub    eax,0xbb3f6a15
  403619:	add    esi,DWORD PTR [ebx]
  40361b:	pop    ss
  40361c:	cwde   
  40361d:	test   eax,0x74f271ce
  403622:	aaa    
  403623:	nop
  403624:	repnz or al,0xd3
  403627:	icebp  
  403628:	outs   dx,DWORD PTR ds:[esi]
  403629:	stc    
  40362a:	(bad)  
  40362b:	int    0x49
  40362d:	pop    esp
  40362e:	xor    BYTE PTR ds:0x35c029b,ch
  403634:	imul   edx,DWORD PTR [edi-0x33aa0a76],0x59
  40363b:	jg     0x403614
  40363d:	pop    ds
  40363e:	or     edi,DWORD PTR [ebx+0x4ae9ec2a]
  403644:	cmp    bh,BYTE PTR [ecx]
  403646:	gs stos BYTE PTR es:[edi],al
  403648:	xchg   ebp,eax
  403649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40364a:	les    ebx,FWORD PTR [edx]
  40364c:	or     al,0xb
  40364e:	fnsave [esi+0x71]
  403651:	in     al,0xec
  403653:	sub    BYTE PTR [edx],bh
  403655:	or     ah,BYTE PTR [ecx-0x9be499]
  40365b:	jecxz  0x4036a9
  40365d:	jl     0x403615
  40365f:	pop    edi
  403660:	(bad)  
  403661:	push   ds
  403662:	ret    0xa2dd
  403665:	bound  edi,QWORD PTR [esi]
  403667:	daa    
  403668:	shl    BYTE PTR [ebx-0x80],1
  40366b:	pop    esi
  40366c:	out    dx,eax
  40366d:	stos   DWORD PTR es:[edi],eax
  40366e:	mov    ah,0xbd
  403670:	xchg   ebp,eax
  403671:	cld    
  403672:	sbb    al,0xa0
  403674:	scas   al,BYTE PTR es:[edi]
  403675:	ins    BYTE PTR es:[edi],dx
  403676:	mov    bl,BYTE PTR [edx+0x622f1cf4]
  40367c:	data16 shl bh,1
  40367f:	mov    ch,0x13
  403681:	retf   
  403682:	mov    dl,0xc6
  403684:	jns    0x403636
  403686:	push   es
  403687:	add    DWORD PTR [esi],ebp
  403689:	aaa    
  40368a:	test   BYTE PTR [ebx-0x5067a56b],al
  403690:	rol    DWORD PTR [ecx-0x34ff8735],0xd4
  403697:	daa    
  403698:	add    al,0x64
  40369a:	push   ss
  40369b:	mov    al,ds:0x52d73d31
  4036a0:	jne    0x403639
  4036a2:	out    0x79,al
  4036a4:	aaa    
  4036a5:	add    DWORD PTR [eax+0x7f],edi
  4036a8:	xor    al,dl
  4036aa:	add    DWORD PTR [eax-0x5e],edi
  4036ad:	es ja  0x403729
  4036b0:	dec    ecx
  4036b1:	es jmp 0x1297:0x9b510a99
  4036b9:	test   ebx,esp
  4036bb:	les    ebx,FWORD PTR [ebp-0x469752b1]
  4036c1:	cmp    edx,DWORD PTR ds:0xd4adbc9e
  4036c7:	das    
  4036c8:	dec    ebx
  4036c9:	add    eax,0x4d034218
  4036ce:	sub    BYTE PTR [ecx+0x314e78fe],cl
  4036d4:	ficom  DWORD PTR [ecx-0x1a]
  4036d7:	pop    eax
  4036d8:	pushf  
  4036d9:	sahf   
  4036da:	ror    BYTE PTR [edx+0x23],cl
  4036dd:	xor    dh,dl
  4036df:	push   ebx
  4036e0:	sbb    BYTE PTR [ecx+0x7d],dl
  4036e3:	mov    eax,ds:0x9b918199
  4036e8:	mov    esi,0x854babab
  4036ed:	mov    ds:0xdedc9fc3,eax
  4036f2:	sti    
  4036f3:	xchg   edi,eax
  4036f4:	jns    0x40367e
  4036f6:	imul   edx,DWORD PTR [edx+0x7f],0xffffffd1
  4036fa:	out    0xad,al
  4036fc:	sbb    esp,DWORD PTR [eax+0x3e]
  4036ff:	retf   
  403700:	and    DWORD PTR [edx+0x66],edx
  403703:	jmp    0x4036f6
  403705:	lock and eax,0x2d44071
  40370b:	xor    DWORD PTR [ecx],ebx
  40370d:	jp     0x4036d7
  40370f:	frstor [ebp+0x73]
  403712:	cmp    DWORD PTR [edi+0x54],0x61
  403716:	xchg   ebx,eax
  403717:	lea    ecx,[edx-0x10850768]
  40371d:	in     al,0x22
  40371f:	jae    0x403759
  403721:	popa   
  403722:	mov    dl,0xca
  403724:	je     0x403795
  403726:	mov    BYTE PTR [esp+ebx*4],dh
  403729:	mov    ch,0xef
  40372b:	ficom  DWORD PTR [ebx]
  40372d:	arpl   bp,si
  40372f:	mov    al,0xbb
  403731:	(bad)  
  403732:	cld    
  403733:	add    eax,0x6be67afb
  403738:	mov    WORD PTR ds:[edx-0x4b],ds
  40373c:	mov    edi,0x2945d8f8
  403741:	test   al,bl
  403743:	push   ds
  403744:	or     BYTE PTR ds:0x7505fc89,dl
  40374a:	retf   
  40374b:	cmp    DWORD PTR [ecx-0x17],0x8ed67c3e
  403752:	cwde   
  403753:	cli    
  403754:	(bad)  
  403755:	pop    ecx
  403756:	fnstcw WORD PTR [esi]
  403758:	inc    ebp
  403759:	sbb    al,0x47
  40375b:	jno    0x403758
  40375d:	and    DWORD PTR [esi-0x7],edi
  403760:	aam    0x90
  403762:	ja     0x403779
  403764:	sbb    bl,BYTE PTR [esi-0x74]
  403767:	add    ebp,esi
  403769:	(bad)  
  40376b:	and    DWORD PTR [edi],ebp
  40376d:	hlt    
  40376e:	stos   BYTE PTR es:[edi],al
  40376f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403770:	clc    
  403771:	or     BYTE PTR [edx],al
  403773:	icebp  
  403774:	pop    esp
  403775:	mov    eax,ds:0x21d7b601
  40377a:	in     al,0xe
  40377c:	cmp    BYTE PTR [edx+0x9],bl
  40377f:	pop    ds
  403780:	sbb    DWORD PTR [edi-0x35],eax
  403783:	jae    0x40370f
  403785:	pop    esi
  403786:	pop    esi
  403787:	rcl    BYTE PTR ds:0xd1bd5e51,0xf3
  40378e:	mov    esi,0x62fcea37
  403793:	cs je  0x40378f
  403796:	in     eax,dx
  403797:	stos   BYTE PTR es:[edi],al
  403798:	and    cl,BYTE PTR [eax-0x3b2362bf]
  40379e:	loop   0x403760
  4037a0:	jne    0x403807
  4037a2:	imul   ebx,DWORD PTR ds:0xdf374ecb,0xfe75c125
  4037ac:	mov    ebx,0xdb32631f
  4037b1:	in     al,dx
  4037b2:	(bad)  
  4037b3:	mov    WORD PTR [esi+0x14ece568],ds
  4037b9:	xor    dh,dl
  4037bb:	ds int3 
  4037bd:	pusha  
  4037be:	hlt    
  4037bf:	sbb    eax,0xcc7284f4
  4037c4:	aaa    
  4037c5:	out    0xa0,eax
  4037c7:	mov    dl,0x3e
  4037c9:	arpl   si,si
  4037cb:	rcr    DWORD PTR ds:0x5bbcdb98,cl
  4037d1:	fbld   TBYTE PTR [edx+0x1e]
  4037d4:	mov    ah,0x2d
  4037d6:	xchg   BYTE PTR [edi+0x25],dh
  4037d9:	xor    eax,0xb8e91ffd
  4037de:	mov    al,ds:0x2d5c181a
  4037e3:	mov    ds:0xfa7ec22b,eax
  4037e8:	jns    0x4037ab
  4037ea:	mov    cl,0xc6
  4037ec:	aam    0x2b
  4037ee:	sub    cl,dl
  4037f0:	inc    edi
  4037f1:	shl    esi,0xea
  4037f4:	ror    BYTE PTR [esi+edi*4+0x39],cl
  4037f8:	xchg   ebx,eax
  4037f9:	xor    ah,BYTE PTR [ecx]
  4037fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037fc:	call   0x5730:0x805e61b6
  403803:	mov    ebp,0x8539fd66
  403808:	cmp    DWORD PTR [ebx-0x174004fe],ebp
  40380e:	sub    BYTE PTR [esi+0x72],0xe3
  403812:	jg     0x403892
  403814:	in     eax,dx
  403815:	adc    esp,esp
  403817:	dec    edx
  403818:	sbb    dl,BYTE PTR [esi+eax*8+0x3468a38c]
  40381f:	in     eax,0xad
  403821:	mov    dl,0xfb
  403823:	(bad)  
  403824:	cs aam 0x5e
  403827:	nop
  403828:	cld    
  403829:	(bad)  
  40382c:	aas    
  40382d:	ja     0x403810
  40382f:	je     0x4037e3
  403831:	xchg   BYTE PTR [eax-0x5f],bh
  403834:	(bad)  
  403835:	jl     0x403837
  403837:	pop    esi
  403838:	mov    esi,0x70e7468b
  40383d:	mov    edx,0x9960d8f7
  403842:	fld    QWORD PTR [ecx]
  403844:	stos   BYTE PTR es:[edi],al
  403845:	and    ch,bh
  403847:	sbb    dh,BYTE PTR [esi+edi*2]
  40384a:	scas   eax,DWORD PTR es:[edi]
  40384b:	js     0x4037d3
  40384d:	lods   eax,DWORD PTR ds:[esi]
  40384e:	mov    eax,0x22d7074a
  403853:	xchg   ebx,eax
  403854:	(bad)  [ebp-0x45a705f6]
  40385a:	jge    0x403822
  40385c:	pop    ebp
  40385d:	xor    eax,0xe1df6e3a
  403862:	jmp    0x8682:0x8862772d
  403869:	scas   eax,DWORD PTR es:[edi]
  40386a:	or     BYTE PTR [ebx+ebx*2-0x63c3ec30],dl
  403871:	out    0xfb,eax
  403873:	clc    
  403874:	fst    st(3)
  403876:	adc    eax,0xe8e79a48
  40387b:	out    0xa9,al
  40387d:	sar    BYTE PTR [ebp+0x10],cl
  403880:	test   DWORD PTR [ebx-0x48],ecx
  403883:	pop    ds
  403884:	ja     0x403867
  403886:	icebp  
  403887:	mov    bl,0x6d
  403889:	jbe    0x4038fa
  40388b:	ret    0x27a
  40388e:	sub    al,0xf6
  403890:	fidivr WORD PTR gs:[esi]
  403893:	stos   DWORD PTR es:[edi],eax
  403894:	mov    al,ds:0x800a28a9
  403899:	and    bl,BYTE PTR [edx-0x7a86e01d]
  40389f:	and    eax,0x41a79792
  4038a4:	adc    eax,0xe26fb7a
  4038a9:	leave  
  4038aa:	sub    al,0xab
  4038ac:	data16 sbb al,0x25
  4038af:	inc    ebp
  4038b0:	aas    
  4038b1:	(bad)  
  4038b2:	ins    BYTE PTR es:[edi],dx
  4038b3:	or     al,0x44
  4038b5:	cmp    bl,al
  4038b7:	mov    DWORD PTR [edx],esp
  4038b9:	scas   al,BYTE PTR es:[edi]
  4038ba:	shr    BYTE PTR [edi],0x43
  4038bd:	mov    ch,0xf8
  4038bf:	stos   BYTE PTR es:[edi],al
  4038c0:	push   eax
  4038c1:	fcomp  QWORD PTR [ecx+ecx*4]
  4038c4:	xchg   ecx,eax
  4038c5:	push   esi
  4038c6:	jmp    0x4089:0xd1e3186c
  4038cd:	or     ebp,DWORD PTR [ecx]
  4038cf:	push   edi
  4038d0:	iret   
  4038d1:	call   0x3172:0x1fcabb88
  4038d8:	cmp    BYTE PTR [edx-0x4d67def8],0x67
  4038df:	das    
  4038e0:	retf   0x6653
  4038e3:	inc    esp
  4038e4:	jae    0x403882
  4038e6:	lds    esp,FWORD PTR [edx]
  4038e8:	lods   eax,DWORD PTR ds:[esi]
  4038e9:	repnz hlt 
  4038eb:	mov    eax,0xb890817d
  4038f0:	neg    BYTE PTR [esi+0x22d7bd03]
  4038f6:	dec    edx
  4038f7:	in     eax,0x84
  4038f9:	mov    gs,eax
  4038fb:	loop   0x4038c8
  4038fd:	push   ebp
  4038fe:	mov    ebp,0xb3bee1b8
  403903:	xor    DWORD PTR [ebp+0x6c],0x18ebc786
  40390a:	fnstcw WORD PTR [ecx+0x5f63b7c7]
  403910:	jle    0x40391f
  403912:	jl     0x40394f
  403914:	jnp    0x403914
  403916:	adc    esi,DWORD PTR [ebp-0x30]
  403919:	je     0x4038e7
  40391b:	push   edx
  40391c:	aad    0x94
  40391e:	imul   DWORD PTR [ebx-0x4fe40354]
  403924:	and    ah,BYTE PTR [ebp+eax*8-0x23]
  403928:	inc    edi
  403929:	jno    0x40399f
  40392b:	je     0x4038e4
  40392d:	ret    0x3c9d
  403930:	or     BYTE PTR [esi+0x5bd01e89],cl
  403936:	test   BYTE PTR [esi-0x1a],ah
  403939:	mov    ds:0xa6cb2a,al
  40393e:	inc    ebp
  40393f:	jmp    0x9636:0x9ff9dc74
  403946:	ss leave 
  403948:	lahf   
  403949:	or     eax,0xc861e5d8
  40394e:	pop    ebp
  40394f:	fs jne 0x4038fe
  403952:	daa    
  403953:	xor    dh,BYTE PTR [edx-0x2da48a54]
  403959:	sub    al,0x49
  40395b:	in     eax,0x9b
  40395d:	ret    
  40395e:	fisttp WORD PTR [edi]
  403960:	stos   BYTE PTR es:[edi],al
  403961:	xchg   esi,eax
  403962:	pop    ecx
  403963:	les    esi,FWORD PTR [edx]
  403965:	jmp    0x40397a
  403967:	repz aad 0x3
  40396a:	or     al,0x13
  40396c:	cli    
  40396d:	mov    edi,0xe99e0891
  403972:	xchg   ecx,eax
  403973:	loope  0x40397b
  403975:	pop    esp
  403976:	jmp    0x4039c6
  403978:	jl     0x40395a
  40397a:	jmp    0x4d759f63
  40397f:	xchg   esp,eax
  403980:	inc    edx
  403981:	sub    al,0xbd
  403983:	xchg   edi,eax
  403984:	pop    edi
  403985:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403986:	lahf   
  403987:	icebp  
  403988:	mov    bh,BYTE PTR [ebx-0x10]
  40398b:	(bad)  
  40398c:	sar    DWORD PTR [edx],cl
  40398e:	jg     0x403a01
  403990:	mov    ch,0x50
  403992:	fstp   st(4)
  403994:	in     eax,0xe7
  403996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403997:	or     al,0x80
  403999:	mov    bh,0x49
  40399b:	ds xor al,0x43
  40399e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40399f:	mov    eax,0x43e3133a
  4039a4:	pop    esi
  4039a5:	xchg   esp,eax
  4039a7:	cld    
  4039a8:	enter  0xbf66,0x1f
  4039ac:	add    al,0x4e
  4039ae:	add    BYTE PTR [edi+0x1d4b91ee],bl
  4039b4:	push   0x55
  4039b6:	pop    ecx
  4039b7:	fistp  QWORD PTR [esi]
  4039b9:	add    al,0xe3
  4039bb:	stos   BYTE PTR es:[edi],al
  4039bc:	(bad)  
  4039be:	pusha  
  4039bf:	std    
  4039c0:	pusha  
  4039c1:	js     0x4039bd
  4039c3:	xchg   ebp,ebp
  4039c5:	aam    0xdc
  4039c7:	repz out 0x15,eax
  4039ca:	inc    edx
  4039cb:	mov    al,0x85
  4039cd:	mov    eax,ds:0x3a72b20e
  4039d2:	out    dx,al
  4039d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039d4:	sub    ch,bh
  4039d6:	xabort 0x37
  4039d9:	and    bl,BYTE PTR [ebx+0x77]
  4039dc:	jmp    0xde08:0xd0675c0f
  4039e3:	scas   eax,DWORD PTR es:[edi]
  4039e4:	mov    bl,0xd7
  4039e6:	cmp    DWORD PTR [ebx],edx
  4039e8:	jge    0x403a3f
  4039ea:	pop    es
  4039eb:	xchg   edx,eax
  4039ec:	cmp    BYTE PTR [ebx-0x27],cl
  4039ef:	fs inc edi
  4039f1:	sbb    eax,0x9d775c94
  4039f6:	and    eax,0x42c1290f
  4039fb:	call   0xac25:0xd570ce79
  403a02:	scas   eax,DWORD PTR es:[edi]
  403a03:	stos   DWORD PTR es:[edi],eax
  403a04:	lahf   
  403a05:	(bad)  
  403a06:	ret    0x2782
  403a09:	cmp    esp,0xf521f1b3
  403a0f:	stc    
  403a10:	aam    0xf0
  403a12:	jmp    0xf2104988
  403a17:	adc    DWORD PTR [edx],ecx
  403a19:	and    edx,DWORD PTR [eax+edx*1+0x59]
  403a1d:	into   
  403a1e:	mov    dh,0x43
  403a20:	add    ebx,edi
  403a22:	pop    ebx
  403a23:	mov    al,0x4e
  403a25:	jno    0x4039fe
  403a27:	int3   
  403a28:	xchg   BYTE PTR [ecx+0x40],bh
  403a2b:	sbb    edi,DWORD PTR [eax+esi*1+0x34675b00]
  403a32:	xor    cl,BYTE PTR [edi-0x3f15d397]
  403a38:	dec    ebx
  403a39:	scas   eax,DWORD PTR es:[edi]
  403a3a:	(bad)  
  403a3b:	loop   0x4039d8
  403a3d:	pop    es
  403a3e:	mov    eax,ds:0x7c73b203
  403a43:	hlt    
  403a44:	jle    0x403a19
  403a46:	jp     0x403a18
  403a48:	in     eax,dx
  403a49:	or     BYTE PTR [ecx+0x33be7d25],ah
  403a4f:	test   eax,0x7411a3f1
  403a54:	add    esp,DWORD PTR [eax+ecx*1-0x45]
  403a58:	mov    ebp,0x95b1feb5
  403a5d:	adc    ecx,esi
  403a5f:	sbb    ah,BYTE PTR [edi]
  403a61:	(bad)  
  403a62:	fdivr  DWORD PTR [edx+0x1fc1e86f]
  403a68:	sub    BYTE PTR [eax+0x34],dl
  403a6b:	popf   
  403a6c:	and    al,0x1a
  403a6e:	(bad)  
  403a6f:	pop    ebx
  403a70:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  403a72:	mov    bl,0x27
  403a74:	mov    bl,ch
  403a76:	pop    ecx
  403a77:	xor    al,0x52
  403a79:	hlt    
  403a7a:	mov    ebx,0x469b073d
  403a7f:	adc    al,0xbb
  403a81:	ja     0x403a7e
  403a83:	lods   al,BYTE PTR ds:[esi]
  403a84:	outs   dx,DWORD PTR ds:[esi]
  403a85:	clc    
  403a86:	in     al,dx
  403a87:	sub    DWORD PTR [eax-0x15a1ebab],0xffffffe2
  403a8e:	jle    0x403a69
  403a90:	arpl   dx,dx
  403a92:	mov    eax,ds:0x16fdaa1c
  403a97:	mov    ds:0xb5ae2e0a,al
  403a9c:	mov    esp,0xeb80af67
  403aa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403aa2:	fsubr  DWORD PTR [bp+di]
  403aa5:	add    DWORD PTR [ebx+ecx*2],0xffffffc5
  403aa9:	jbe    0x403a46
  403aab:	jne    0x403a42
  403aad:	push   esp
  403aae:	aas    
  403aaf:	sbb    al,0xda
  403ab1:	aad    0x64
  403ab3:	test   eax,0xee931b35
  403ab8:	add    bh,BYTE PTR [ecx+0x3c]
  403abb:	mov    dx,0x6be3
  403abf:	int3   
  403ac0:	inc    eax
  403ac1:	cs mov esp,ss
  403ac4:	lods   eax,DWORD PTR ds:[esi]
  403ac5:	in     al,dx
  403ac6:	int    0xf0
  403ac8:	mul    DWORD PTR [edi-0x8db4c63]
  403ace:	jecxz  0x403a9e
  403ad0:	sbb    dh,BYTE PTR [ebp-0x623c4abd]
  403ad6:	mov    ds:0x1cd5aeb3,al
  403adb:	mov    ecx,DWORD PTR [ecx+edx*4-0x7f]
  403adf:	shl    dl,1
  403ae1:	adc    eax,0x43a38920
  403ae6:	fsub   DWORD PTR [edx-0x75]
  403ae9:	dec    ebp
  403aea:	fld    TBYTE PTR [edi+0x2d]
  403aed:	mov    ebp,0x7e0dbdb3
  403af2:	aaa    
  403af3:	sti    
  403af4:	xchg   ebx,eax
  403af5:	rcl    ebx,0x26
  403af8:	jl     0x403a84
  403afa:	push   esi
  403afb:	cwde   
  403afc:	retf   
  403afd:	popw   es
  403aff:	pop    ebx
  403b00:	leave  
  403b01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b02:	sbb    DWORD PTR [ebx],edi
  403b04:	sub    eax,0xf4904f1e
  403b09:	lock in al,dx
  403b0b:	outs   dx,DWORD PTR ds:[esi]
  403b0c:	test   al,0x87
  403b0e:	pop    ecx
  403b0f:	jbe    0x403afd
  403b11:	js     0x403b01
  403b13:	xchg   cx,ax
  403b15:	mov    ch,0x74
  403b17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b18:	inc    edi
  403b19:	cwde   
  403b1a:	test   BYTE PTR [edi-0x43feb01e],bh
  403b20:	push   edi
  403b21:	push   esp
  403b22:	popf   
  403b23:	adc    BYTE PTR [ebp+ecx*2+0x6e],bh
  403b27:	inc    esp
  403b28:	(bad)  
  403b29:	imul   edx,DWORD PTR [di],0x10f7aa8
  403b30:	adc    eax,0x38503dc9
  403b35:	lock pop ds
  403b37:	pop    edx
  403b38:	cmp    eax,0x489c0ddf
  403b3d:	jge    0x403b3d
  403b3f:	cmp    ch,ch
  403b41:	pop    DWORD PTR ds:[ebx-0x6828d950]
  403b48:	hlt    
  403b49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b4a:	repz push esp
  403b4c:	inc    edx
  403b4d:	cwde   
  403b4e:	sbb    BYTE PTR [ebp+0x50],cl
  403b51:	mov    dl,BYTE PTR [eax+0x4c6460b3]
  403b57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b58:	dec    ebx
  403b59:	jno    0x403b40
  403b5b:	jne    0xa054400
  403b61:	cmp    ecx,0xffffff93
  403b64:	fcomp  DWORD PTR [edi+eax*8+0x630b1a71]
  403b6b:	lods   eax,DWORD PTR ds:[esi]
  403b6c:	dec    ebx
  403b6d:	in     al,0xb1
  403b6f:	arpl   cx,si
  403b71:	fisub  WORD PTR [edx+0x55]
  403b74:	pop    ds
  403b75:	retf   
  403b76:	pop    eax
  403b77:	jbe    0x403af9
  403b79:	or     eax,0xa851ff9d
  403b7e:	nop
  403b7f:	adc    dl,BYTE PTR [ecx+0x2c]
  403b82:	push   edx
  403b83:	or     BYTE PTR [ebx],cl
  403b85:	lock rcl BYTE PTR [esp+ebx*2+0x1d],cl
  403b8a:	mov    ds:0x1d040624,al
  403b8f:	test   BYTE PTR [ebx-0x341c7b47],al
  403b95:	jmp    0x403b69
  403b97:	repnz cmp eax,0xc292528d
  403b9d:	rcr    DWORD PTR [edi-0x352f90d],0xf6
  403ba4:	sub    ch,cl
  403ba6:	loop   0x403b6c
  403ba8:	loope  0x403c29
  403baa:	bnd jae 0x403bb0
  403bad:	pop    eax
  403bae:	mov    al,0xb4
  403bb0:	sub    edx,edi
  403bb2:	dec    esi
  403bb3:	enter  0x4f2a,0x3b
  403bb7:	out    dx,al
  403bb8:	ss xor edx,ecx
  403bbb:	and    esi,ebx
  403bbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bbe:	das    
  403bbf:	add    bl,dl
  403bc1:	jo     0x403b7a
  403bc3:	popa   
  403bc4:	push   ebx
  403bc5:	dec    esi
  403bc6:	int    0xd0
  403bc8:	icebp  
  403bc9:	xor    bl,dh
  403bcb:	adc    BYTE PTR [edx+ebp*2],al
  403bce:	mov    al,0x1f
  403bd0:	clc    
  403bd1:	sub    BYTE PTR [eax],cl
  403bd3:	gs cld 
  403bd5:	mov    ah,0x9a
  403bd7:	imul   edi,ebp,0x68fa11fd
  403bdd:	std    
  403bde:	sub    eax,0x126ba5fb
  403be3:	xchg   edx,eax
  403be4:	sahf   
  403be5:	out    dx,al
  403be6:	cdq    
  403be7:	sar    BYTE PTR [eax-0x3],0x7a
  403beb:	ja     0x403c69
  403bed:	call   0xd199:0xd308359a
  403bf4:	ss int 0x34
  403bf7:	xchg   BYTE PTR [eax*8+0xbc6e6b9],cl
  403bfe:	cmp    bh,dh
  403c00:	stos   BYTE PTR es:[edi],al
  403c01:	aam    0x88
  403c03:	jne    0x403b94
  403c05:	out    0xb5,eax
  403c07:	or     bh,BYTE PTR [edi]
  403c09:	call   0x5684:0x7e24bf4f
  403c10:	(bad)  
  403c11:	sbb    al,0x9e
  403c13:	jno    0x403c5c
  403c15:	pop    ebx
  403c16:	mov    eax,0x9d363279
  403c1b:	and    eax,0x8dcc323
  403c20:	stos   BYTE PTR es:[edi],al
  403c21:	imul   esp,DWORD PTR [esi-0x653a7131],0xffffff8a
  403c28:	enter  0x539e,0xb3
  403c2c:	mov    bl,0xed
  403c2e:	push   ss
  403c2f:	ret    
  403c30:	xor    BYTE PTR [edx],dl
  403c32:	call   0x922ec4e4
  403c37:	push   ebx
  403c38:	mov    ebx,0x9f65fcc8
  403c3d:	lds    ebp,FWORD PTR [eax+eiz*8+0x26afe1ca]
  403c44:	inc    edi
  403c45:	popf   
  403c46:	lock sub al,0x60
  403c49:	pop    ebx
  403c4a:	push   ebp
  403c4b:	mov    al,0x16
  403c4d:	mov    bl,0xd1
  403c4f:	shr    ebx,1
  403c51:	push   ecx
  403c52:	jo     0x403c9a
  403c54:	sub    dh,bl
  403c56:	imul   ecx,eax,0xfffffff5
  403c59:	mov    dl,0x48
  403c5b:	fs inc ecx
  403c5d:	inc    esp
  403c5e:	jecxz  0x403c2f
  403c60:	mov    esi,0x84427da7
  403c65:	scas   eax,DWORD PTR es:[edi]
  403c66:	mul    DWORD PTR [eax-0x18e28a4b]
  403c6c:	and    edi,DWORD PTR [edi-0x331fce2b]
  403c72:	jne    0x403c28
  403c74:	inc    ebx
  403c75:	push   edx
  403c76:	xor    ebx,DWORD PTR [ecx]
  403c78:	adc    eax,0x54c8e95a
  403c7d:	aad    0x8b
  403c7f:	stos   BYTE PTR es:[edi],al
  403c80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c81:	leave  
  403c82:	dec    ebp
  403c83:	and    al,0xe9
  403c85:	shl    BYTE PTR [edi],cl
  403c87:	push   ebx
  403c88:	add    al,0x41
  403c8a:	fldenv ds:0xa564fcd8
  403c90:	outs   dx,DWORD PTR ds:[esi]
  403c91:	sbb    esi,ebx
  403c93:	pop    esp
  403c94:	out    dx,eax
  403c95:	sbb    BYTE PTR [ebx+0x45],0x6a
  403c99:	stos   BYTE PTR es:[edi],al
  403c9a:	ret    
  403c9b:	add    DWORD PTR [ebx],eax
  403c9d:	sub    ecx,DWORD PTR [ebx+0x4a]
  403ca0:	out    0x5c,al
  403ca2:	dec    edx
  403ca3:	or     BYTE PTR [ebx+eax*8-0x39],al
  403ca7:	pop    edx
  403ca8:	out    0x98,al
  403caa:	and    al,0xa
  403cac:	sti    
  403cad:	not    DWORD PTR [edx]
  403caf:	add    esp,DWORD PTR [edi+0x3c]
  403cb2:	es pop edx
  403cb4:	out    dx,eax
  403cb5:	xchg   ebx,eax
  403cb6:	xchg   esi,eax
  403cb7:	fist   WORD PTR [esi-0x56ec0a16]
  403cbd:	shl    DWORD PTR [ebx+0x29],cl
  403cc0:	sub    al,0x70
  403cc2:	jne    0x403c57
  403cc4:	test   al,0x74
  403cc6:	push   edx
  403cc7:	pop    ss
  403cc8:	(bad)  
  403cc9:	mov    ds,WORD PTR ds:0xadbf4c42
  403ccf:	aad    0xd9
  403cd1:	inc    esp
  403cd2:	lahf   
  403cd3:	clc    
  403cd4:	data16 (bad) 
  403cd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cd7:	push   0x9f4d272
  403cdc:	in     eax,dx
  403cdd:	mov    esp,0xb8cfe541
  403ce2:	and    BYTE PTR [esi],al
  403ce4:	clc    
  403ce5:	scas   al,BYTE PTR es:[edi]
  403ce6:	pop    ebx
  403ce7:	adc    bh,dl
  403ce9:	loop   0x403cac
  403ceb:	mov    esp,0x676af29d
  403cf0:	scas   eax,DWORD PTR es:[edi]
  403cf1:	sub    bh,bl
  403cf3:	jp     0x403d4d
  403cf5:	or     DWORD PTR [ebp-0x465c244c],eax
  403cfb:	push   edx
  403cfc:	mov    BYTE PTR [ebx],dl
  403cfe:	call   0x371b:0xa4a1d8d6
  403d05:	not    DWORD PTR [eax-0x522cd36e]
  403d0b:	aad    0xdd
  403d0d:	scas   al,BYTE PTR es:[edi]
  403d0e:	fld    TBYTE PTR [ecx-0x22]
  403d11:	mov    ebx,0x49e920b8
  403d16:	add    bh,bh
  403d18:	pop    esp
  403d19:	inc    esp
  403d1a:	xchg   esp,eax
  403d1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d1c:	add    DWORD PTR [ecx-0x17],0xffffffd1
  403d20:	lods   al,BYTE PTR ds:[esi]
  403d21:	adc    BYTE PTR [ebp-0x7f],dh
  403d24:	(bad)
  403d28:	ja     0x403cff
  403d2a:	sub    al,0x88
  403d2c:	cwde   
  403d2d:	and    ecx,eax
  403d2f:	mov    ds:0xec9e2fa3,eax
  403d34:	and    DWORD PTR [edx+edx*1-0x80],ecx
  403d38:	fisttp DWORD PTR [esi]
  403d3a:	nop
  403d3b:	jb     0x403cfd
  403d3d:	mov    ch,0x57
  403d3f:	call   0xb07b:0x164d1df6
  403d46:	pop    ecx
  403d47:	gs jbe 0x403cd5
  403d4a:	pop    ss
  403d4b:	mov    bl,0x2b
  403d4d:	(bad)  
  403d4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d50:	push   ecx
  403d51:	xchg   ebx,eax
  403d52:	fisubr WORD PTR [ecx+0x1c76e407]
  403d58:	shr    DWORD PTR [edx],cl
  403d5a:	cmc    
  403d5b:	shr    DWORD PTR [edi+0x4fb5db51],cl
  403d61:	xchg   DWORD PTR [ebx-0x63056efd],ebx
  403d67:	dec    BYTE PTR [ebp+0x4e]
  403d6a:	lahf   
  403d6b:	sti    
  403d6c:	xchg   BYTE PTR [ebx],dh
  403d6e:	lahf   
  403d6f:	dec    ebx
  403d70:	jbe    0x403d42
  403d72:	test   al,0x33
  403d74:	sahf   
  403d75:	or     DWORD PTR [ecx-0x4a],edi
  403d78:	sub    BYTE PTR [ebp-0x3b],cl
  403d7b:	mov    ebp,0xe79fc9be
  403d80:	jnp    0x403d6f
  403d82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d83:	adc    eax,0x47009232
  403d88:	ins    DWORD PTR es:[edi],dx
  403d89:	mov    dh,0x5d
  403d8b:	iret   
  403d8c:	pop    edi
  403d8d:	or     DWORD PTR [esi],0x126e940
  403d93:	dec    edi
  403d94:	mov    esp,0x52c97463
  403d99:	cmp    DWORD PTR [edi],0x74
  403d9c:	mov    ds,WORD PTR [eax]
  403d9e:	ins    BYTE PTR es:[edi],dx
  403d9f:	xchg   ebp,eax
  403da0:	xor    edi,DWORD PTR [ebp+eax*4-0x14]
  403da4:	pushf  
  403da5:	jmp    0x25ec:0x2750260c
  403dac:	scas   al,BYTE PTR es:[edi]
  403dad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403dae:	pop    ebp
  403daf:	xchg   DWORD PTR [ebx-0x34],esi
  403db2:	neg    DWORD PTR [esi+eiz*8]
  403db5:	cmp    bl,BYTE PTR [edi-0x1a]
  403db8:	dec    ebx
  403db9:	dec    edi
  403dba:	sahf   
  403dbb:	pusha  
  403dbc:	ss stos BYTE PTR es:[edi],al
  403dbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dbf:	sahf   
  403dc0:	aam    0x70
  403dc2:	out    0x5a,al
  403dc4:	xchg   edx,eax
  403dc5:	push   esp
  403dc6:	mov    bh,0x9d
  403dc8:	push   eax
  403dc9:	sub    al,0x64
  403dcb:	xchg   edx,eax
  403dcc:	sub    cl,BYTE PTR [ecx]
  403dce:	lds    ebp,FWORD PTR [ebp-0x59]
  403dd1:	mov    eax,0x6d979311
  403dd6:	xlat   BYTE PTR ds:[ebx]
  403dd7:	stos   DWORD PTR es:[edi],eax
  403dd8:	dec    edx
  403dd9:	(bad)  
  403dda:	push   ss
  403ddb:	cmp    al,0xcc
  403ddd:	adc    al,dl
  403ddf:	call   0x6595d514
  403de4:	js     0x403e4c
  403de6:	or     edx,edi
  403de8:	dec    ebp
  403de9:	push   cs
  403dea:	shl    DWORD PTR [eax],cl
  403dec:	and    ebx,esp
  403dee:	xchg   edx,eax
  403def:	pop    eax
  403df0:	call   0xebd5:0x90dec9be
  403df7:	scas   al,BYTE PTR es:[edi]
  403df8:	jno    0x403e1b
  403dfa:	add    ecx,eax
  403dfc:	stc    
  403dfd:	lea    edi,[edi]
  403dff:	push   ss
  403e00:	mov    dl,0x2e
  403e02:	icebp  
  403e03:	xchg   esi,eax
  403e04:	iret   
  403e05:	mov    ah,0x7
  403e07:	test   al,0xef
  403e09:	test   eax,0x30687198
  403e0e:	fwait
  403e0f:	xchg   esi,eax
  403e10:	inc    eax
  403e11:	lds    eax,FWORD PTR [eax]
  403e13:	(bad)  
  403e14:	clc    
  403e15:	inc    ecx
  403e16:	fmul   DWORD PTR [edi+0x4379fd4a]
  403e1c:	(bad)  
  403e1d:	(bad)  
  403e1e:	outs   dx,BYTE PTR ds:[esi]
  403e1f:	je     0x403de4
  403e21:	test   al,0xa
  403e23:	arpl   di,bx
  403e25:	mov    cl,0x5d
  403e27:	push   ecx
  403e28:	adc    esp,DWORD PTR [esi+0x3b531c87]
  403e2e:	cmp    eax,0x111434d4
  403e33:	xor    ecx,0xe1e52393
  403e39:	mov    eax,0x8517cf1f
  403e3e:	rol    DWORD PTR [edi+0x348601f3],0xaa
  403e45:	jae    0x403e48
  403e47:	in     eax,0x2e
  403e49:	cmp    eax,0xddf8f94
  403e4e:	mov    eax,0xfd3410bf
  403e53:	push   0x28
  403e55:	mov    eax,ds:0x1ba71e57
  403e5a:	add    BYTE PTR [edx+0x6f],0x58
  403e5e:	std    
  403e5f:	cmp    DWORD PTR [edi+0x20],ecx
  403e62:	mov    esi,DWORD PTR [ebp-0x6881b0fd]
  403e68:	jg     0x403e10
  403e6a:	jp     0x403e20
  403e6c:	dec    edi
  403e6d:	in     al,0xd9
  403e6f:	retf   0x90f5
  403e72:	mov    edi,0x1a2892b
  403e77:	pop    ebx
  403e78:	or     al,0x59
  403e7a:	cmp    al,bl
  403e7c:	mov    al,ds:0x96f7ffa9
  403e81:	mov    esp,0xbeebbbbf
  403e86:	neg    BYTE PTR [ecx+edx*2-0x1d]
  403e8a:	jmp    0xe789f33e
  403e8f:	push   ss
  403e90:	pop    ecx
  403e91:	sbb    eax,DWORD PTR [edx-0x18]
  403e94:	mov    bh,0xb2
  403e96:	dec    esi
  403e97:	scas   eax,DWORD PTR es:[edi]
  403e98:	xchg   ebx,eax
  403e99:	push   edx
  403e9a:	imul   edi,DWORD PTR [ebx+ebp*4+0x30],0x7a
  403e9f:	cdq    
  403ea0:	lock (bad) 
  403ea2:	(bad)  
  403ea3:	gs jb  0x403f11
  403ea6:	jns    0x403e53
  403ea8:	and    cl,BYTE PTR [edi-0x487a6648]
  403eae:	leave  
  403eaf:	sub    al,0x17
  403eb1:	inc    ebx
  403eb2:	push   ds
  403eb3:	adc    esp,DWORD PTR [edi+0x2b]
  403eb6:	pushf  
  403eb7:	mov    al,0xdd
  403eb9:	mov    edx,0xee4dd6df
  403ebe:	adc    al,BYTE PTR [eax+ecx*8-0x62105513]
  403ec5:	call   DWORD PTR [edi]
  403ec7:	ins    DWORD PTR es:[edi],dx
  403ec8:	in     eax,0x1d
  403eca:	mov    dl,0xf3
  403ecc:	and    esi,DWORD PTR [ebp+0x3ececfb]
  403ed2:	retf   0xff88
  403ed5:	mov    cl,0x4f
  403ed7:	(bad)  [ebx+0x3a]
  403eda:	loop   0x403e7a
  403edc:	std    
  403edd:	ja     0x403f12
  403edf:	jo     0x403eb7
  403ee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ee2:	mov    dl,0x94
  403ee4:	faddp  st(6),st
  403ee6:	lahf   
  403ee7:	pusha  
  403ee8:	fcmovb st,st(7)
  403eea:	loope  0x403ed0
  403eec:	and    ch,bh
  403eee:	(bad)  
  403eef:	dec    edx
  403ef0:	mov    BYTE PTR [esi-0x2f],dh
  403ef3:	loope  0x403f06
  403ef5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ef6:	fst    DWORD PTR [edi+0x8]
  403ef9:	daa    
  403efa:	jmp    0x403ecd
  403efc:	dec    esp
  403efd:	mov    cs,edi
  403eff:	cmp    eax,0x12e94615
  403f04:	std    
  403f05:	or     DWORD PTR [esi-0x17],edx
  403f08:	cdq    
  403f09:	sti    
  403f0a:	popf   
  403f0b:	add    BYTE PTR [edx+0x7b],al
  403f0e:	adc    eax,0xee1cc6f
  403f13:	jnp    0x403eda
  403f15:	mov    bl,0xdf
  403f17:	(bad)  
  403f19:	cmp    eax,ecx
  403f1b:	or     cl,BYTE PTR [ebx-0x31]
  403f1e:	dec    ebx
  403f1f:	xor    dh,ch
  403f21:	jo     0x403ef0
  403f23:	cmp    dl,BYTE PTR [ecx+ebx*2+0x65]
  403f27:	ficom  WORD PTR [edi]
  403f29:	repnz (bad) 
  403f2b:	ins    BYTE PTR es:[edi],dx
  403f2c:	sbb    ebx,DWORD PTR [ebx+eiz*4+0x6d]
  403f30:	ins    DWORD PTR es:[edi],dx
  403f31:	or     BYTE PTR [edx+edx*2],bh
  403f34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f35:	inc    ecx
  403f36:	(bad)  
  403f37:	call   0xc053d243
  403f3c:	push   cs
  403f3d:	aam    0x4e
  403f3f:	call   0x1229:0xaaf3f89f
  403f46:	cmp    bh,0xa9
  403f49:	fs cs aad 0x6e
  403f4d:	(bad)
  403f50:	and    al,dl
  403f52:	fldenv [ebx-0x55]
  403f55:	stc    
  403f56:	jge    0x403f64
  403f58:	adc    al,0x6
  403f5a:	jmp    0x2cdc2637
  403f5f:	jne    0x403f64
  403f61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f62:	push   esp
  403f63:	test   DWORD PTR [eax+0x484f5602],ebx
  403f69:	mov    edx,0x641fca
  403f6e:	cwde   
  403f6f:	ds push es
  403f71:	test   al,0x9c
  403f73:	and    eax,0xb6a3e7f7
  403f78:	adc    al,bl
  403f7a:	mov    edx,0xaefe7506
  403f7f:	push   edx
  403f80:	jnp    0x403f80
  403f82:	je     0x403fbd
  403f84:	xlat   BYTE PTR ds:[ebx]
  403f85:	scas   eax,DWORD PTR es:[edi]
  403f86:	sbb    al,0x2f
  403f88:	ror    edi,cl
  403f8a:	adc    eax,0x767c2437
  403f8f:	sahf   
  403f90:	cs push bx
  403f93:	adc    dl,BYTE PTR [esi]
  403f95:	and    DWORD PTR [edi],0xffffffb6
  403f98:	mov    ebp,0x1ee567
  403f9d:	add    bl,BYTE PTR [eax+0x6b1bf2c1]
  403fa3:	jno    0x403ff6
  403fa5:	inc    edx
  403fa6:	and    ebp,0x1b
  403fa9:	cmc    
  403faa:	push   ds
  403fab:	jecxz  0x403f55
  403fad:	sub    ebp,esp
  403faf:	fbld   TBYTE PTR [ebp-0x3acffe06]
  403fb5:	jo     0x404011
  403fb7:	call   0x302d5ba3
  403fbc:	data16 lods al,BYTE PTR ds:[esi]
  403fbe:	sbb    cl,BYTE PTR [edi]
  403fc0:	loopne 0x403ff5
  403fc2:	mov    edx,0x38146de5
  403fc7:	loopne 0x403fb1
  403fc9:	mov    edi,0x3432f352
  403fce:	dec    ebx
  403fcf:	jae    0x403f95
  403fd1:	jp     0x403fc8
  403fd3:	push   esi
  403fd4:	mov    al,ds:0x2f9419db
  403fd9:	clc    
  403fda:	aad    0x6d
  403fdc:	jl     0x404053
  403fde:	ror    edi,1
  403fe0:	shl    BYTE PTR [ecx-0x3d31760c],1
  403fe6:	pop    ecx
  403fe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fe8:	fcmovb st,st(0)
  403fea:	das    
  403feb:	call   0x10f0:0x7896384b
  403ff2:	mov    esi,0xb7d17a70
  403ff7:	retf   
  403ff8:	sbb    DWORD PTR [esi+0x16a288a9],ebp
  403ffe:	mov    al,ds:0xb989d244
  404003:	out    dx,eax
  404004:	push   es
  404005:	mov    BYTE PTR [edx+0x43],bh
  404008:	shr    edx,0x99
  40400b:	pop    esp
  40400c:	jle    0x403ff2
  40400e:	pop    ss
  40400f:	cli    
  404010:	mov    DWORD PTR [edx-0x7d8db746],edx
  404016:	cmp    ch,BYTE PTR [esi]
  404018:	enter  0x169f,0x7
  40401c:	stc    
  40401d:	and    eax,0xca44a1ac
  404022:	xchg   ecx,eax
  404023:	bound  esi,QWORD PTR [edi]
  404025:	sar    BYTE PTR [ebp+0x1e2975b9],0x41
  40402c:	fstp   DWORD PTR [edx+0x34]
  40402f:	clc    
  404030:	pusha  
  404031:	lahf   
  404032:	int    0x1c
  404034:	pusha  
  404035:	pop    ds
  404036:	push   esp
  404037:	jge    0x403fcf
  404039:	scas   eax,DWORD PTR es:[edi]
  40403a:	cli    
  40403b:	push   ss
  40403c:	pusha  
  40403d:	mov    bh,0xaa
  40403f:	fiadd  WORD PTR [edi+0x2d]
  404042:	out    dx,al
  404043:	rol    BYTE PTR [eax+0x72fb5e01],1
  404049:	std    
  40404a:	xchg   edi,eax
  40404b:	push   eax
  40404c:	sahf   
  40404d:	fild   QWORD PTR [ebx]
  40404f:	(bad)  
  404050:	fwait
  404051:	push   edi
  404052:	neg    BYTE PTR [ebx-0x78]
  404055:	add    DWORD PTR [ecx],ebp
  404057:	jg     0x404079
  404059:	int    0xb0
  40405b:	pop    edi
  40405c:	test   BYTE PTR [edx+ecx*1-0x6f],dh
  404060:	gs pop ds
  404062:	cmp    DWORD PTR [ebx-0x145aecba],ecx
  404068:	data16 aaa 
  40406a:	test   eax,0xb91b5117
  404070:	test   eax,esi
  404072:	pusha  
  404073:	fwait
  404074:	(bad)  
  404075:	xchg   esp,eax
  404076:	retf   0xe75
  404079:	mov    ch,0x7
  40407b:	adc    ah,al
  40407d:	push   cs
  40407e:	fistp  DWORD PTR [ebp+0x7da72428]
  404084:	mov    dl,0x22
  404086:	pop    eax
  404088:	or     al,0xf1
  40408a:	and    ch,al
  40408c:	daa    
  40408d:	mov    eax,ds:0x9475ad36
  404092:	dec    ebx
  404093:	cmp    eax,0x3f013da4
  404098:	clc    
  404099:	outs   dx,DWORD PTR ds:[esi]
  40409a:	inc    ebx
  40409b:	mov    BYTE PTR ds:0xb9909885,dl
  4040a1:	inc    edi
  4040a2:	rol    DWORD PTR [esi],1
  4040a4:	jne    0x404064
  4040a6:	and    eax,0x87e05370
  4040ab:	xor    eax,0xfaa07852
  4040b0:	lock jo 0x40404f
  4040b3:	aaa    
  4040b4:	shl    dl,0x27
  4040b7:	call   0x8d2cb973
  4040bc:	cmp    al,0xdf
  4040be:	xor    bl,al
  4040c0:	jmp    DWORD PTR [esi-0x3929924a]
  4040c6:	push   edx
  4040c7:	fdiv   st(6),st
  4040c9:	les    ebx,FWORD PTR [eax]
  4040cb:	daa    
  4040cc:	mov    eax,ds:0xef493a38
  4040d1:	add    esp,DWORD PTR [ebx-0x6d62a5aa]
  4040d7:	(bad)  [edi+0x6]
  4040da:	test   BYTE PTR [eax+0x48],0x38
  4040de:	mov    esi,0x7977654f
  4040e3:	mov    bh,0x69
  4040e5:	adc    eax,0x18d32fc5
  4040ea:	xchg   ebp,eax
  4040eb:	out    0xb8,eax
  4040ed:	(bad)  [ecx-0x18c547d9]
  4040f3:	(bad)  
  4040f4:	cmp    bl,BYTE PTR [eax-0x41]
  4040f7:	out    0x24,al
  4040f9:	popf   
  4040fa:	ja     0x4040be
  4040fc:	aaa    
  4040fd:	xchg   ecx,eax
  4040fe:	xchg   esp,eax
  4040ff:	scas   al,BYTE PTR es:[edi]
  404100:	xchg   BYTE PTR [edx-0x70bb5df4],ah
  404106:	mov    ch,0xf3
  404108:	sbb    dl,0x1b
  40410b:	inc    ebp
  40410c:	shl    DWORD PTR [edi+ebp*4+0xc395144],0xaa
  404114:	ret    
  404115:	push   esp
  404116:	adc    eax,0x285ab940
  40411b:	ror    BYTE PTR [esi],1
  40411d:	ret    0x44d3
  404120:	lods   al,BYTE PTR ds:[esi]
  404121:	mov    BYTE PTR [edi+0x48f7beb9],al
  404127:	xchg   edx,eax
  404128:	fucom  st(1)
  40412a:	xor    DWORD PTR [ebx],esp
  40412c:	dec    esi
  40412d:	adc    al,0xba
  40412f:	lods   eax,DWORD PTR ds:[esi]
  404130:	sbb    BYTE PTR [ebx+0x5a],ah
  404133:	push   edx
  404134:	adc    DWORD PTR [eax],ecx
  404136:	sub    ecx,DWORD PTR [edx]
  404138:	ins    BYTE PTR es:[edi],dx
  404139:	push   edx
  40413a:	ffree  st(7)
  40413c:	outs   dx,DWORD PTR ds:[esi]
  40413d:	inc    edi
  40413e:	or     BYTE PTR [edi],cl
  404140:	retf   
  404141:	dec    ebp
  404142:	xchg   DWORD PTR [eax],ebp
  404144:	mov    ecx,DWORD PTR [edi+0x10]
  404147:	sbb    DWORD PTR [ecx+0x70],ebx
  40414a:	fsubr  QWORD PTR [edx-0x3e]
  40414d:	xor    eax,0x3048efad
  404152:	jmp    0x40414d
  404154:	mov    ds:0xb988370f,al
  404159:	push   edx
  40415a:	push   ecx
  40415b:	jbe    0x40414b
  40415d:	inc    bh
  40415f:	mov    ch,0xd7
  404161:	mov    esp,0xe15985fd
  404166:	jns    0x404134
  404168:	call   0x8c205354
  40416d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40416e:	push   0x56
  404170:	and    BYTE PTR [ebx-0x7c],bl
  404173:	adc    esp,0xf
  404176:	stos   DWORD PTR es:[edi],eax
  404177:	xor    edi,DWORD PTR [edi+0xc]
  40417a:	sub    edx,DWORD PTR [esi+0x19407219]
  404180:	sub    BYTE PTR [esi],ah
  404182:	leave  
  404183:	jb     0x4041be
  404185:	mov    edi,0x35323234
  40418a:	stc    
  40418b:	pop    esp
  40418c:	jnp    0x4041c0
  40418e:	ud0    eax,DWORD PTR [eax-0x333a4af0]
  404195:	inc    ebp
  404196:	sbb    BYTE PTR [ebp+0x535a89c],ch
  40419c:	mov    ecx,0xb138447e
  4041a1:	cmp    eax,0xffffffdc
  4041a4:	and    BYTE PTR ds:0x1f3fb6d4,cl
  4041aa:	adc    eax,0xa6c9dde3
  4041af:	cmp    cl,BYTE PTR [edx+0xd]
  4041b2:	xchg   edx,eax
  4041b3:	sub    ah,dl
  4041b5:	sbb    al,0x48
  4041b7:	imul   eax,edi,0x10
  4041ba:	xor    eax,0x3cbbac6d
  4041bf:	xchg   edx,eax
  4041c0:	imul   ecx,eax,0x42e78a0
  4041c6:	(bad)  
  4041c7:	xchg   edx,eax
  4041c8:	lods   eax,DWORD PTR ds:[esi]
  4041c9:	lock lods eax,DWORD PTR ds:[esi]
  4041cb:	xor    ebp,DWORD PTR ds:0xa7cf9e1
  4041d1:	mov    bh,0xfa
  4041d3:	ret    0xab19
  4041d6:	lods   al,BYTE PTR ds:[esi]
  4041d7:	dec    ebp
  4041d8:	sti    
  4041d9:	push   es
  4041da:	inc    esi
  4041db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041dc:	std    
  4041dd:	pushf  
  4041de:	ret    0x849
  4041e1:	xchg   ebx,eax
  4041e2:	mov    BYTE PTR [esi],dl
  4041e4:	jbe    0x404220
  4041e6:	xor    edi,DWORD PTR [eax-0x1b65697a]
  4041ec:	pop    ebp
  4041ed:	je     0x4041ef
  4041ef:	jnp    0x404195
  4041f1:	sub    DWORD PTR [esi],esi
  4041f3:	sub    BYTE PTR [edx],bl
  4041f5:	mov    cl,0xd
  4041f7:	push   ds
  4041f8:	pop    ss
  4041f9:	punpckhwd mm5,mm4
  4041fc:	vpcmpeqb xmm6,xmm3,xmm0
  404200:	mov    BYTE PTR ds:0xf92dc246,ah
  404206:	aas    
  404207:	xor    BYTE PTR [edi-0x32],dh
  40420a:	mov    cl,0x11
  40420c:	dec    ebp
  40420d:	mov    ch,0xd
  40420f:	clc    
  404210:	and    BYTE PTR [esi+0x391136f2],ah
  404216:	dec    eax
  404217:	inc    esp
  404218:	ja     0x4041c6
  40421a:	fwait
  40421b:	imul   esi,DWORD PTR [eax],0x6b
  40421e:	xchg   ecx,eax
  40421f:	inc    ebx
  404220:	mov    edx,0xaf88b3bf
  404225:	pop    ebx
  404226:	in     eax,dx
  404227:	retf   0x6003
  40422a:	add    edi,edi
  40422c:	mov    ecx,0xa379805
  404231:	sar    ebx,0x15
  404234:	ficomp DWORD PTR [edx+0x16]
  404237:	mov    ah,0x3c
  404239:	cmp    BYTE PTR [eax],ch
  40423b:	jns    0x404200
  40423d:	xor    ebx,DWORD PTR [edx-0x31e2585]
  404243:	push   edi
  404244:	ins    BYTE PTR es:[edi],dx
  404245:	sbb    DWORD PTR [edi+0x25],eax
  404248:	sub    edx,DWORD PTR [edx-0x2f]
  40424b:	jnp    0x4042c5
  40424d:	fdiv   DWORD PTR [edi-0x52]
  404250:	cwde   
  404251:	xchg   ecx,eax
  404252:	ror    bh,0x33
  404255:	ret    
  404256:	add    al,0xf8
  404258:	jmp    0x93ee4f84
  40425d:	push   ebp
  40425e:	shl    DWORD PTR [edi+0x41],0x4b
  404262:	int3   
  404263:	mov    ch,0xa
  404265:	push   DWORD PTR [ebx+0x1e9305e8]
  40426b:	ret    
  40426c:	sar    DWORD PTR [eax+0xa],1
  40426f:	push   edi
  404270:	cld    
  404271:	(bad)  [edx+0x6]
  404274:	ret    0xa3d4
  404277:	ror    DWORD PTR [ecx],1
  404279:	imul   BYTE PTR [ebx+0x2d]
  40427c:	xor    cl,0x74
  40427f:	push   es
  404280:	pop    es
  404281:	sub    al,BYTE PTR [edx-0x5e]
  404284:	cwde   
  404285:	(bad)  
  404286:	in     eax,0xb3
  404288:	retf   
  404289:	gs mov ch,0xc
  40428c:	xor    ecx,esi
  40428e:	jbe    0x4042ce
  404290:	xchg   ebp,eax
  404291:	clc    
  404292:	fdiv   QWORD PTR [esi+0x73]
  404295:	mov    bh,0xa4
  404297:	mov    esi,ebp
  404299:	cmpxchg BYTE PTR [ebp-0x68],bl
  40429d:	fmul   DWORD PTR [esi-0x19]
  4042a0:	fnstsw WORD PTR [eax+0x8c07e40]
  4042a6:	fxch   st(1)
  4042a8:	int3   
  4042a9:	jbe    0x4042b5
  4042ab:	enter  0xe65f,0xed
  4042af:	rcl    bh,0x49
  4042b2:	or     DWORD PTR [edi-0x6dd61bbc],ebp
  4042b8:	pop    eax
  4042b9:	sar    DWORD PTR [edi-0x68],1
  4042bc:	test   DWORD PTR [edi],esi
  4042be:	push   esp
  4042bf:	shl    DWORD PTR [edx],0xbf
  4042c2:	mov    ebx,0x8a73099b
  4042c7:	cmc    
  4042c8:	or     eax,0xaace01d
  4042cd:	(bad)  
  4042ce:	int    0xda
  4042d0:	add    BYTE PTR [ecx+0x51b6ba9a],bh
  4042d6:	js     0x404357
  4042d8:	add    dl,BYTE PTR [ebx+ebx*8]
  4042db:	sbb    DWORD PTR [ebp+eax*4+0x4e],edi
  4042df:	jno    0x404344
  4042e1:	add    eax,0x144322fc
  4042e6:	push   ecx
  4042e7:	jge    0x4042c6
  4042e9:	loopne 0x40430c
  4042eb:	inc    edi
  4042ec:	std    
  4042ed:	mov    bl,0x62
  4042ef:	fistp  DWORD PTR [ebp+0x55dc23a0]
  4042f5:	fbld   TBYTE PTR [esp+eax*1-0x14]
  4042f9:	pop    edx
  4042fa:	push   cs
  4042fb:	enter  0x8949,0xa7
  4042ff:	mov    WORD PTR [ebx+0xead2d96],ss
  404305:	aas    
  404306:	int3   
  404307:	and    ebx,DWORD PTR [esi-0x3ac5af82]
  40430d:	hlt    
  40430e:	neg    DWORD PTR [ebx]
  404310:	push   0x33
  404312:	shl    BYTE PTR [eax+ebp*4],1
  404315:	inc    esp
  404316:	popa   
  404317:	clc    
  404318:	shr    edi,0xf9
  40431b:	push   esi
  40431c:	mov    ah,0x99
  40431e:	lods   eax,DWORD PTR ds:[esi]
  40431f:	push   ebx
  404320:	popa   
  404321:	mov    ah,0xa5
  404323:	jbe    0x4043a1
  404325:	xchg   ecx,eax
  404326:	xor    al,0xca
  404328:	jnp    0x404339
  40432a:	popf   
  40432b:	jge    0x404323
  40432d:	dec    edx
  40432e:	xor    esi,DWORD PTR [edx]
  404330:	fidiv  WORD PTR [ebp+eax*4+0x33f64ea2]
  404337:	mov    ecx,0xb6db1a41
  40433c:	mov    ebx,DWORD PTR [eax-0x11592639]
  404342:	sbb    DWORD PTR [ebx],0x33817fc2
  404348:	mov    BYTE PTR [edi-0x28],dl
  40434b:	pop    es
  40434c:	mov    edi,0x4fd3b1dd
  404351:	and    BYTE PTR [ebx+ebp*4],0xc8
  404355:	cmp    eax,0xb2c26862
  40435a:	add    BYTE PTR [edx+0x7d2f2507],ch
  404360:	push   edx
  404361:	mov    esi,0xe4a155e4
  404366:	ins    DWORD PTR es:[edi],dx
  404367:	push   es
  404368:	cwde   
  404369:	stc    
  40436a:	mov    esp,ebp
  40436c:	pop    eax
  40436d:	cmp    esp,DWORD PTR [edx-0x57f6edb9]
  404373:	pusha  
  404374:	sbb    eax,0xf4a01db3
  404379:	adc    ah,al
  40437b:	mov    ch,0x1d
  40437d:	push   ss
  40437e:	jno    0x404397
  404380:	sub    ebx,DWORD PTR [esi+eax*1]
  404383:	sub    dh,bh
  404385:	call   FWORD PTR [eax]
  404387:	cli    
  404388:	(bad)  
  404389:	sbb    edi,esp
  40438b:	aaa    
  40438c:	cld    
  40438d:	(bad)  
  40438e:	test   eax,0x4b4b855e
  404393:	sbb    DWORD PTR [ecx+0x35],0x5e
  404397:	pop    eax
  404398:	inc    edx
  404399:	imul   edi,eax,0x18eb1fb9
  40439f:	les    ecx,FWORD PTR [edi]
  4043a1:	jmp    0x404388
  4043a3:	mov    dh,bl
  4043a5:	les    esi,FWORD PTR [ebx+0x4d9ce901]
  4043ab:	mov    BYTE PTR ds:0xf7527935,ch
  4043b1:	add    DWORD PTR [ecx+0x2],edi
  4043b4:	loope  0x40433b
  4043b6:	xor    DWORD PTR ds:0xa58e3e62,edi
  4043bc:	stos   DWORD PTR es:[edi],eax
  4043bd:	push   esp
  4043be:	stc    
  4043bf:	sub    BYTE PTR [edi-0xa],cl
  4043c2:	lods   al,BYTE PTR ds:[esi]
  4043c3:	mov    ecx,0xbda9fd90
  4043c8:	and    bh,BYTE PTR [eax]
  4043ca:	out    dx,al
  4043cb:	cmp    eax,0x1cb25669
  4043d0:	mov    BYTE PTR ss:[ebx+0x3],ah
  4043d4:	ds push 0xffffffd0
  4043d7:	jle    0x4043b2
  4043d9:	jb     0x404455
  4043db:	sub    dl,dh
  4043dd:	enter  0x617f,0x64
  4043e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043e2:	in     eax,dx
  4043e3:	leave  
  4043e4:	jecxz  0x4043a4
  4043e6:	ret    0x7e17
  4043e9:	leave  
  4043ea:	or     eax,0xd35c58a7
  4043ef:	sbb    DWORD PTR [ecx+0x2e],eax
  4043f2:	fnstsw WORD PTR [esi+0x5a]
  4043f5:	jns    0x4043c9
  4043f7:	adc    al,0xc2
  4043f9:	ret    
  4043fa:	fst    QWORD PTR [ebp+0x5d]
  4043fd:	jge    0x4043cb
  4043ff:	out    0xa6,al
  404401:	sbb    ebp,0x9d2eab40
  404407:	cld    
  404408:	popa   
  404409:	stos   BYTE PTR es:[edi],al
  40440a:	cmp    DWORD PTR [esi],ecx
  40440c:	inc    edi
  40440d:	fnstenv ds:[edi]
  404410:	(bad)  
  404411:	loop   0x404397
  404413:	sti    
  404414:	xchg   DWORD PTR [ecx-0x35],esp
  404417:	in     al,dx
  404418:	jne    0x4043cf
  40441a:	jnp    0x404471
  40441c:	add    BYTE PTR [edx],0x33
  40441f:	lods   eax,DWORD PTR ds:[esi]
  404420:	repnz icebp 
  404422:	push   DWORD PTR [edx+0x283a90b1]
  404428:	es lock pop ds
  40442b:	push   edx
  40442c:	inc    edi
  40442d:	loope  0x40441e
  40442f:	inc    ebp
  404430:	ret    0xdc7f
  404433:	shl    ecx,1
  404435:	dec    ecx
  404436:	loope  0x404419
  404438:	sub    al,BYTE PTR [eax+esi*4]
  40443b:	rcl    BYTE PTR [ecx],1
  40443d:	mov    cl,0x6b
  40443f:	dec    esi
  404440:	dec    esi
  404441:	mov    ah,0xd
  404443:	pushw  cs
  404445:	jmp    0x404430
  404447:	push   ebx
  404448:	popf   
  404449:	mov    eax,0x50fe8f0b
  40444e:	jmp    0x1f75:0xb3a891a4
  404455:	imul   ebp,esp,0xadef9b26
  40445b:	mov    dl,0xb8
  40445d:	pop    edi
  40445e:	cmovbe edx,DWORD PTR [ebp+edx*1-0x51c01181]
  404466:	bound  ebx,QWORD PTR [ebx-0x4bf0308a]
  40446c:	inc    eax
  40446d:	pushf  
  40446e:	mov    dl,0xfe
  404470:	inc    edx
  404471:	inc    eax
  404472:	and    edi,DWORD PTR [esi+0x18]
  404475:	adc    esi,eax
  404477:	mov    ebx,DWORD PTR [ebp+0x25]
  40447a:	ret    
  40447b:	mov    ds:0x3588b7fd,eax
  404480:	stos   BYTE PTR es:[edi],al
  404481:	sbb    DWORD PTR [edx-0x3d29e5c4],esi
  404487:	imul   esp,eax,0x7
  40448a:	jg     0x4044f8
  40448c:	cmp    al,0xb4
  40448e:	pop    ds
  40448f:	ja     0x4044e3
  404491:	fbstp  TBYTE PTR [ecx+0x6a]
  404494:	movsx  edi,WORD PTR [esi-0x26fc4d0b]
  40449b:	or     eax,0xa3bf7693
  4044a0:	ja     0x404423
  4044a2:	test   DWORD PTR [edx],edx
  4044a4:	xor    DWORD PTR [ebp+0x19],ebx
  4044a7:	sub    dl,bh
  4044a9:	ss retf 0x949c
  4044ad:	sub    al,0x4
  4044af:	cld    
  4044b0:	fdivr  QWORD PTR [esi]
  4044b2:	rol    BYTE PTR [edi+0x52],1
  4044b5:	test   al,0xff
  4044b7:	or     al,0x14
  4044b9:	shl    dl,1
  4044bb:	(bad)  
  4044bc:	ds test al,0xc9
  4044bf:	inc    ebx
  4044c0:	cld    
  4044c1:	inc    ecx
  4044c2:	mov    bh,bl
  4044c4:	add    al,0xd2
  4044c6:	xchg   ecx,eax
  4044c7:	pusha  
  4044c8:	cs ss jns 0x4044bc
  4044cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044cd:	mov    ds:0x2e9f81bf,eax
  4044d2:	je     0x404488
  4044d4:	xchg   edi,eax
  4044d5:	dec    esi
  4044d6:	(bad)  
  4044d7:	test   BYTE PTR [eax-0x6],0x8c
  4044db:	sub    eax,0x5bec0f75
  4044e0:	jecxz  0x404508
  4044e2:	cld    
  4044e3:	jmp    0xce97:0x3dfddfe9
  4044ea:	push   ss
  4044eb:	xchg   ebp,eax
  4044ec:	xchg   esi,eax
  4044ed:	xor    ebp,0xffffff80
  4044f0:	call   FWORD PTR [esi+esi*1+0xc]
  4044f4:	and    al,0x25
  4044f6:	lahf   
  4044f7:	or     al,0x4e
  4044f9:	cmp    al,0xaa
  4044fb:	push   es
  4044fc:	sub    ebx,esi
  4044fe:	xor    BYTE PTR [edx+0x63],cl
  404501:	lea    ecx,[esp+ebx*8-0x5bb67a0d]
  404508:	mov    bl,0x1d
  40450a:	add    DWORD PTR [edx+esi*2-0x64f7b4d4],esp
  404511:	or     al,0xe1
  404513:	faddp  st(4),st
  404515:	sbb    edx,DWORD PTR [esi-0x69936da5]
  40451b:	xor    edi,DWORD PTR [eax-0x72797ac8]
  404521:	inc    esp
  404522:	dec    esi
  404523:	add    eax,DWORD PTR [esp+edx*8-0x52]
  404527:	xlat   BYTE PTR ds:[ebx]
  404528:	in     al,0x4f
  40452a:	and    al,0xd4
  40452c:	xor    BYTE PTR [edx-0x786cc57d],ch
  404532:	xchg   ecx,ecx
  404534:	adc    esp,ebx
  404536:	pop    ecx
  404537:	out    dx,al
  404538:	add    DWORD PTR [eax+0x17502f2d],0x10
  40453f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404540:	cli    
  404541:	xchg   edx,eax
  404542:	mov    cl,0x58
  404544:	mov    esi,0x9b8528fe
  404549:	mov    ds:0x3245d6b,al
  40454e:	pusha  
  40454f:	cmp    bl,BYTE PTR [esi-0x7a9262d1]
  404555:	or     bh,0xd6
  404558:	aaa    
  404559:	loop   0x40457c
  40455b:	mov    esi,0x7f62f099
  404560:	jecxz  0x404591
  404562:	sbb    cl,bl
  404564:	sub    al,0xe4
  404566:	dec    eax
  404567:	in     al,0x49
  404569:	pushf  
  40456a:	test   BYTE PTR [ecx],0x6f
  40456d:	mov    esp,0x2161274
  404572:	dec    esp
  404573:	repnz mov eax,0xf70f92b
  404579:	les    ecx,FWORD PTR [eax-0x76f55166]
  40457f:	adc    BYTE PTR [eax-0x598601f8],bl
  404585:	jnp    0x40457f
  404587:	fsub   st(1),st
  404589:	pop    ss
  40458a:	mov    ecx,DWORD PTR [edx+0x43122bbd]
  404590:	jge    0x4045d7
  404592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404593:	or     bl,BYTE PTR [edx+0x19]
  404596:	mov    bh,0xa7
  404598:	ins    DWORD PTR es:[edi],dx
  404599:	dec    esi
  40459a:	xor    bl,ah
  40459c:	and    al,0x1f
  40459e:	mov    edx,DWORD PTR [ebp+0x3e1409eb]
  4045a4:	js     0x40458a
  4045a6:	(bad)  
  4045a7:	repz in al,dx
  4045a9:	mov    esi,0x3f089f9d
  4045ae:	xchg   edi,eax
  4045af:	xchg   BYTE PTR [ebx+0x15212b3c],al
  4045b5:	push   ecx
  4045b6:	mov    edx,0xeac00e35
  4045bb:	sbb    DWORD PTR [ebx+0x68],edx
  4045be:	mov    eax,0x44ecba06
  4045c3:	cmp    ah,BYTE PTR [ebx-0x55]
  4045c6:	pop    ecx
  4045c7:	scas   al,BYTE PTR es:[edi]
  4045c8:	int3   
  4045c9:	jp     0x4045e2
  4045cb:	jbe    0x404585
  4045cd:	push   ecx
  4045ce:	icebp  
  4045cf:	mov    gs:0x4adf3491,eax
  4045d5:	loopne 0x40462f
  4045d7:	call   0x808fed90
  4045dc:	shl    esp,cl
  4045de:	gs mov al,0x31
  4045e1:	jbe    0x40462c
  4045e3:	fs jge 0x404603
  4045e6:	jnp    0x4045a9
  4045e8:	fwait
  4045e9:	mov    ebx,DWORD PTR [edx-0x73ab833f]
  4045ef:	pop    edx
  4045f0:	dec    eax
  4045f1:	pushf  
  4045f2:	inc    ecx
  4045f3:	mov    eax,ds:0xd1be3b3a
  4045f8:	adc    BYTE PTR [edx],0xc3
  4045fb:	ins    BYTE PTR es:[edi],dx
  4045fc:	(bad)  
  4045fd:	fidivr WORD PTR [edx]
  4045ff:	cmp    al,0xfc
  404601:	dec    ebp
  404602:	jmp    0x4045e9
  404604:	jo     0x40465b
  404606:	call   0xd56d:0x6ff1137
  40460d:	push   eax
  40460e:	ds pop ebp
  404610:	and    eax,0x7db78c9a
  404615:	rcl    BYTE PTR [ebp-0x26dc4ad3],cl
  40461b:	jmp    DWORD PTR [eax+ebp*2+0x51]
  40461f:	mov    al,ds:0xfb906116
  404624:	adc    DWORD PTR [ebx-0x73],ecx
  404627:	sbb    al,0x19
  404629:	jecxz  0x4045c3
  40462b:	push   esi
  40462c:	pop    esp
  40462d:	ret    
  40462e:	adc    bl,BYTE PTR [ecx-0x2a916cd8]
  404634:	(bad)  
  404635:	pop    ss
  404636:	int3   
  404637:	xsaves [eax]
  40463a:	cli    
  40463b:	imul   BYTE PTR es:[eax+esi*8-0x17f53809]
  404643:	push   es
  404644:	(bad)  
  404645:	push   cs
  404646:	push   edi
  404647:	push   esi
  404648:	add    eax,0xc0c76247
  40464d:	jp     0x40461d
  40464f:	mov    cl,0x47
  404651:	mov    ds,WORD PTR [edx-0x7b54f701]
  404657:	fs mov edx,0xeecd451
  40465d:	dec    edi
  40465e:	cdq    
  40465f:	or     al,0x60
  404661:	arpl   WORD PTR [edx-0x3c],dx
  404664:	iret   
  404665:	jl     0x404675
  404667:	jmp    0x36514f26
  40466c:	out    dx,al
  40466d:	xchg   edx,eax
  40466e:	neg    DWORD PTR [edi]
  404670:	inc    ecx
  404671:	test   esi,0x23b9bb3
  404677:	sub    BYTE PTR [eax+0x399434a6],ch
  40467d:	aaa    
  40467e:	iret   
  40467f:	aaa    
  404680:	xchg   esi,eax
  404681:	pop    ebp
  404682:	leave  
  404683:	aam    0xf5
  404685:	or     ecx,ebp
  404687:	cdq    
  404688:	ss pop ebx
  40468a:	xchg   edx,eax
  40468b:	add    bl,BYTE PTR [ebp-0x68]
  40468e:	push   cs
  40468f:	or     bh,BYTE PTR [eax+0x8a4e4cd]
  404695:	inc    ecx
  404696:	(bad)  [esi+ebx*1]
  404699:	mov    esp,0x652b6413
  40469e:	ret    
  40469f:	fild   QWORD PTR [ebx-0x33f0587b]
  4046a5:	popf   
  4046a6:	fsubr  QWORD PTR [esi]
  4046a8:	or     BYTE PTR [edi],dl
  4046aa:	inc    esp
  4046ac:	xor    eax,0xb88dd158
  4046b1:	push   eax
  4046b2:	mov    ?,WORD PTR [ecx-0x60]
  4046b5:	jbe    0x40466c
  4046b7:	mov    edx,0xa21db389
  4046bc:	xchg   ebx,eax
  4046bd:	xchg   esp,eax
  4046be:	jbe    0x4046d5
  4046c0:	mov    ebp,DWORD PTR [edi+0x4e]
  4046c3:	xor    eax,0x78edf077
  4046c8:	ja     0x4046e7
  4046ca:	and    edi,esi
  4046cc:	into   
  4046cd:	jl     0x404661
  4046cf:	push   esi
  4046d0:	sub    ebp,DWORD PTR [eax+0x168f8392]
  4046d6:	arpl   WORD PTR [ebp+0x5a],bx
  4046d9:	sub    ch,ch
  4046db:	jbe    0x404727
  4046dd:	outs   dx,DWORD PTR ds:[esi]
  4046de:	pushf  
  4046df:	xor    eax,0xb4ee47f
  4046e4:	mov    bl,0xf1
  4046e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046e7:	into   
  4046e8:	mov    dh,0xb6
  4046ea:	add    eax,0x810b12d4
  4046ef:	jg     0x4046c2
  4046f1:	mov    dh,0x32
  4046f3:	sahf   
  4046f4:	xor    ah,BYTE PTR [edx+0x2e]
  4046f7:	push   esp
  4046f8:	xchg   edx,eax
  4046f9:	sbb    eax,0xb075bd41
  4046fe:	cld    
  4046ff:	and    dl,BYTE PTR [ebx+0x1c]
  404702:	xor    esp,DWORD PTR [eax-0x6a]
  404705:	or     al,0xed
  404707:	pop    ecx
  404708:	push   esi
  404709:	inc    ebx
  40470a:	pop    edi
  40470b:	shl    DWORD PTR [ecx+0x14973ddd],1
  404711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404712:	mov    bl,0xed
  404714:	into   
  404715:	loop   0x4046af
  404717:	mov    bh,0x3
  404719:	push   esp
  40471a:	repz loope 0x4046fe
  40471d:	jns    0x4046db
  40471f:	pop    esi
  404720:	pop    ebp
  404721:	inc    esp
  404722:	stos   DWORD PTR es:[edi],eax
  404723:	mov    cl,0xe
  404725:	add    edi,DWORD PTR [edx-0x1d9b7db7]
  40472b:	dec    edi
  40472c:	iret   
  40472d:	inc    ebx
  40472e:	inc    edx
  40472f:	mov    ch,0x6a
  404731:	sub    cl,dh
  404733:	ss icebp 
  404735:	and    esi,DWORD PTR [ebx-0x20152b47]
  40473b:	xchg   ecx,eax
  40473c:	pop    edx
  40473d:	in     eax,dx
  40473e:	hlt    
  40473f:	pop    eax
  404740:	sar    DWORD PTR [eax-0x2f],cl
  404743:	rcr    dl,0x9a
  404746:	mov    dl,BYTE PTR [esi]
  404748:	idiv   bh
  40474a:	sbb    BYTE PTR [ebx+eiz*2+0x64],0x63
  40474f:	mov    dh,0x99
  404751:	jbe    0x404707
  404753:	je     0x4046e4
  404755:	in     eax,dx
  404756:	lods   eax,DWORD PTR ds:[esi]
  404757:	xchg   DWORD PTR cs:[esi],edi
  40475a:	xchg   ebx,eax
  40475b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40475c:	jmp    0x4047bc
  40475e:	xchg   ebx,eax
  40475f:	jmp    0x4047aa
  404761:	push   es
  404762:	pop    esp
  404763:	stos   BYTE PTR es:[edi],al
  404764:	sub    esi,DWORD PTR [ebp-0x34]
  404767:	std    
  404768:	ja     0x40478d
  40476a:	hlt    
  40476b:	mov    edx,0x4ac66669
  404770:	jp     0x4047c8
  404772:	mov    eax,ds:0xd799e88e
  404777:	mov    ecx,0xfcfbbf18
  40477c:	or     DWORD PTR [ecx-0x4e],eax
  40477f:	push   es
  404780:	mov    ds:0xab19fb99,eax
  404785:	xchg   esi,eax
  404786:	add    eax,0x197b81b7
  40478b:	or     esi,edi
  40478d:	sbb    ch,ah
  40478f:	mov    cs,WORD PTR [eax]
  404791:	push   cs
  404792:	out    dx,al
  404793:	les    ecx,FWORD PTR [edi+0x2188330a]
  404799:	das    
  40479a:	mov    ss,WORD PTR [eax]
  40479c:	push   es
  40479d:	jno    0x40477c
  40479f:	lock das 
  4047a1:	mov    ds:0x9615c13,eax
  4047a6:	or     BYTE PTR [ecx+0x5d2ccec],dl
  4047ac:	jae    0x4047de
  4047ae:	mov    dl,0x98
  4047b0:	test   DWORD PTR [edi-0x7d298dfc],0xaa74f72d
  4047ba:	adc    DWORD PTR [edx],edx
  4047bc:	clc    
  4047bd:	mov    ?,WORD PTR [ebp+ebx*8+0x29]
  4047c1:	mov    ebp,0x4242cd58
  4047c6:	cmp    eax,DWORD PTR [ecx+eax*2+0x59d41a4a]
  4047cd:	stos   BYTE PTR es:[edi],al
  4047ce:	pop    ss
  4047cf:	mov    ebx,0xbe2a1570
  4047d4:	outs   dx,BYTE PTR ds:[esi]
  4047d5:	pop    edx
  4047d6:	push   esi
  4047d7:	hlt    
  4047d8:	xor    bl,BYTE PTR [esi]
  4047da:	and    BYTE PTR [ebp+0x6b],ah
  4047dd:	mov    al,ds:0x2f3a1a75
  4047e2:	stos   DWORD PTR es:[edi],eax
  4047e3:	or     ebx,DWORD PTR [eax+0x62]
  4047e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047e7:	mov    ah,al
  4047e9:	push   ds
  4047ea:	xor    edx,DWORD PTR [edx+0x19]
  4047ed:	rol    esi,cl
  4047ef:	adc    edx,DWORD PTR [esi+0x52]
  4047f2:	test   ah,al
  4047f4:	sbb    edi,DWORD PTR [edi+eax*8+0x55]
  4047f8:	adc    eax,DWORD PTR [edx]
  4047fa:	int    0xe2
  4047fc:	call   0x8b42:0x6d5ffe08
  404803:	and    eax,0x39282886
  404808:	push   cs
  404809:	bound  edi,QWORD PTR [ebx-0x19]
  40480c:	das    
  40480d:	sbb    al,0x14
  40480f:	inc    edi
  404810:	invd   
  404812:	jl     0x404831
  404814:	aaa    
  404815:	mov    ds:0xef13f662,eax
  40481a:	adc    eax,0xe52531be
  40481f:	mov    eax,ds:0xa4e43520
  404824:	mov    eax,DWORD PTR [ecx]
  404826:	aaa    
  404827:	add    BYTE PTR [ecx],ch
  404829:	aaa    
  40482a:	imul   ebp,edx,0x202fb7a6
  404830:	xchg   esi,eax
  404831:	pushf  
  404832:	pop    eax
  404833:	xchg   esi,eax
  404834:	cli    
  404835:	push   edx
  404836:	adc    al,bl
  404838:	test   al,0x36
  40483a:	scas   al,BYTE PTR es:[edi]
  40483b:	jmp    0xbee3:0x4918383e
  404842:	mov    ecx,0x2c60faad
  404847:	cwde   
  404848:	mov    dl,0x1c
  40484a:	out    dx,eax
  40484b:	jae    0x40488b
  40484d:	mov    eax,ds:0x82848620
  404852:	mov    DWORD PTR [edx+eax*8],ecx
  404855:	ret    0x983c
  404858:	call   0x70c270c0
  40485d:	fs popf 
  40485f:	mov    ds:0xe19cf713,al
  404864:	int3   
  404865:	neg    BYTE PTR [esi+0x221f88f8]
  40486b:	and    ah,BYTE PTR [ebx+0xf9fa469]
  404871:	fstp   TBYTE PTR [esi-0x4d]
  404874:	pop    ds
  404875:	add    dl,BYTE PTR ds:0x5d28f6e6
  40487b:	stc    
  40487c:	xor    cl,BYTE PTR [esi]
  40487e:	and    ah,BYTE PTR [edx]
  404880:	outs   dx,DWORD PTR ds:[esi]
  404881:	test   cl,al
  404883:	mov    bh,0xb
  404885:	push   ds
  404886:	les    ecx,FWORD PTR [eax]
  404888:	mov    ds:0x3c494473,eax
  40488d:	sbb    cl,0x94
  404890:	and    al,BYTE PTR [esi]
  404892:	pop    edx
  404893:	cwde   
  404894:	dec    esi
  404895:	mov    BYTE PTR [esi+eax*2-0x27da56d0],dh
  40489c:	test   DWORD PTR [eax+0x4b],eax
  40489f:	stos   DWORD PTR es:[edi],eax
  4048a0:	cmp    BYTE PTR [esi],0x80
  4048a3:	(bad)
  4048a6:	sti    
  4048a7:	adc    cl,BYTE PTR [ecx]
  4048a9:	cmp    al,0xbc
  4048ab:	jo     0x404875
  4048ad:	mov    ebx,0xb573094f
  4048b2:	sub    bh,ah
  4048b4:	push   ebp
  4048b5:	mov    edx,DWORD PTR [edx+0x66]
  4048b8:	pusha  
  4048b9:	retf   0x3fee
  4048bc:	sbb    esp,edx
  4048be:	push   0x30f69ef5
  4048c3:	cmp    eax,esp
  4048c5:	sbb    DWORD PTR [ecx+0x66],ebp
  4048c8:	pop    ds
  4048c9:	inc    ebp
  4048ca:	repz fdiv st,st(3)
  4048cd:	(bad)  
  4048ce:	push   edi
  4048cf:	mov    DWORD PTR [ecx-0x6c514ecd],edx
  4048d5:	sub    DWORD PTR [edx],esp
  4048d7:	bound  edi,QWORD PTR [ebx+ebp*8]
  4048da:	xlat   BYTE PTR ds:[ebx]
  4048db:	fist   DWORD PTR [ebx+edx*2+0x22]
  4048df:	push   edx
  4048e0:	ins    DWORD PTR es:[edi],dx
  4048e1:	pusha  
  4048e2:	mov    DWORD PTR [eax-0x527ec4ee],0x807fde6f
  4048ec:	dec    edx
  4048ed:	aaa    
  4048ee:	sahf   
  4048ef:	dec    ecx
  4048f0:	inc    DWORD PTR [edi]
  4048f2:	leave  
  4048f3:	inc    ecx
  4048f4:	pop    ebx
  4048f5:	neg    BYTE PTR [eax]
  4048f7:	fwait
  4048f8:	mov    ds:0x8b2ec1df,al
  4048fd:	into   
  4048fe:	fadd   QWORD PTR [eax+0x22]
  404901:	div    DWORD PTR [ecx+0x53afc27e]
  404907:	cmp    bl,ah
  404909:	mov    al,ds:0xfc3252be
  40490e:	inc    esp
  40490f:	bound  esi,QWORD PTR [ecx-0x33]
  404912:	in     eax,0x40
  404914:	or     al,0x72
  404916:	hlt    
  404917:	cmp    bl,BYTE PTR [eax+ecx*4]
  40491a:	frstor [edi-0x7fe019bb]
  404920:	cld    
  404921:	xor    edi,DWORD PTR [edx+0x349e421d]
  404927:	jnp    0x4048d1
  404929:	xor    dh,bl
  40492b:	retf   
  40492c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40492d:	mov    ebp,0x6fe4026f
  404932:	popf   
  404933:	cmp    ecx,edi
  404935:	jmp    0x49b:0xaafc3e47
  40493c:	or     DWORD PTR [esi+0x4d],ecx
  40493f:	out    dx,eax
  404940:	inc    ecx
  404941:	mov    al,ds:0x1a24ad07
  404946:	std    
  404947:	mov    bh,al
  404949:	ficom  WORD PTR [esi-0x1c5ecdc]
  40494f:	imul   BYTE PTR [ecx+0x73]
  404952:	pop    esp
  404953:	mov    ebp,0xc2f9184f
  404958:	popa   
  404959:	ins    BYTE PTR es:[edi],dx
  40495a:	pop    ebx
  40495b:	or     al,0x8a
  40495d:	in     al,0xf0
  40495f:	lods   eax,DWORD PTR ds:[esi]
  404960:	mov    dl,0x61
  404962:	fs adc eax,0x70ce137
  404968:	push   ecx
  404969:	shl    al,0x6b
  40496c:	imul   esp,DWORD PTR ds:0xe3c11b17,0x45
  404973:	mov    BYTE PTR [ebx-0x2d],bl
  404976:	fs (bad) 
  404978:	lds    ecx,FWORD PTR [edx+0x2adca951]
  40497e:	dec    ebx
  40497f:	cs icebp 
  404981:	std    
  404982:	adc    esi,DWORD PTR [esi-0x37]
  404985:	push   ebx
  404986:	adc    ch,BYTE PTR [ecx]
  404988:	fisttp DWORD PTR [bp-0x65]
  40498c:	arpl   WORD PTR [ecx],bp
  40498e:	jle    0x404a04
  404990:	scas   eax,DWORD PTR es:[edi]
  404991:	mov    ch,0xa0
  404993:	xor    eax,0x18885433
  404998:	sub    dh,ah
  40499a:	repnz fwait
  40499c:	(bad)  
  40499d:	xchg   esp,eax
  40499e:	xchg   BYTE PTR [eax+0x12],ch
  4049a1:	into   
  4049a2:	cwde   
  4049a3:	das    
  4049a4:	clc    
  4049a5:	mov    eax,0xef4ee7db
  4049aa:	rcl    DWORD PTR [esp+ebx*4+0x44],cl
  4049ae:	rol    DWORD PTR [ebx-0x71],0xb
  4049b2:	xchg   esp,eax
  4049b3:	push   eax
  4049b4:	jae    0x4049af
  4049b6:	xlat   BYTE PTR ds:[ebx]
  4049b7:	in     al,0xfe
  4049b9:	loope  0x4049d1
  4049bb:	in     al,0x3e
  4049bd:	mov    ah,0xbe
  4049bf:	mov    edi,0xd2617bc6
  4049c4:	test   BYTE PTR [esi],bh
  4049c6:	(bad)  
  4049c7:	hlt    
  4049c8:	xor    BYTE PTR [esi+0x5b4e7131],0x3d
  4049cf:	or     DWORD PTR [esp+ebx*1+0x26],esp
  4049d3:	xchg   DWORD PTR [edx+0x1b09a1d5],esi
  4049d9:	sbb    dh,0x18
  4049dc:	lods   al,BYTE PTR ds:[esi]
  4049dd:	call   0xf5fb8b92
  4049e2:	sbb    BYTE PTR [esi-0x24616ffa],bh
  4049e8:	and    eax,0xdc16e776
  4049ed:	clc    
  4049ee:	jecxz  0x404a53
  4049f0:	push   0x5e033d8d
  4049f5:	jge    0x404a02
  4049f7:	mov    ds:0x640a40c4,al
  4049fc:	clc    
  4049fd:	es in  al,0xca
  404a00:	jne    0x4049ee
  404a02:	xchg   ebp,eax
  404a03:	mov    ?,ebx
  404a05:	dec    ecx
  404a06:	jl     0x4049b0
  404a08:	and    edx,esi
  404a0a:	sti    
  404a0b:	pop    ds
  404a0c:	jl     0x4049b2
  404a0e:	add    BYTE PTR [esi-0x1c166875],dh
  404a14:	les    eax,FWORD PTR [eax]
  404a16:	xor    ebp,DWORD PTR [ecx+0x100ba2f4]
  404a1c:	sbb    esi,DWORD PTR [esp+ebp*2]
  404a1f:	fidiv  WORD PTR [edx+0x34]
  404a22:	lock mov al,ds:0x38644e5d
  404a28:	outs   dx,BYTE PTR ds:[esi]
  404a29:	sbb    cl,cl
  404a2b:	mov    ebp,0x1db1560a
  404a30:	mov    edx,0xecf9f940
  404a35:	pop    edi
  404a36:	adc    eax,0x75a2dd70
  404a3b:	sub    al,0x62
  404a3d:	pop    eax
  404a3e:	loop   0x404a8e
  404a40:	ins    DWORD PTR es:[edi],dx
  404a41:	push   esp
  404a42:	mov    al,ds:0xc4969970
  404a47:	ret    0x9f10
  404a4a:	retf   0x8177
  404a4d:	pop    ebp
  404a4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a4f:	xchg   edi,eax
  404a50:	add    dl,ch
  404a52:	mov    eax,ds:0xf5d98561
  404a57:	iret   
  404a58:	pop    esp
  404a59:	jmp    0x98edea59
  404a5e:	lock mov edx,edx
  404a61:	sahf   
  404a62:	push   ss
  404a63:	inc    esi
  404a64:	xor    bh,bh
  404a66:	push   edx
  404a67:	dec    edi
  404a68:	sub    al,0x7b
  404a6a:	call   0x76df2746
  404a6f:	not    BYTE PTR [edx-0xba0a01f]
  404a75:	das    
  404a76:	outs   dx,BYTE PTR ds:[esi]
  404a77:	xchg   ecx,eax
  404a78:	test   al,0xfd
  404a7a:	cs int 0xf2
  404a7d:	(bad)  
  404a7e:	pop    eax
  404a7f:	and    eax,0xe4e870e4
  404a84:	cmp    BYTE PTR [ebp+0x8d99813],0x97
  404a8b:	inc    ebp
  404a8c:	das    
  404a8d:	push   edi
  404a8e:	pushf  
  404a8f:	inc    eax
  404a90:	fild   QWORD PTR [ebp+edi*4+0x3e528f20]
  404a97:	mov    ebp,0x223b7a64
  404a9c:	arpl   WORD PTR [edi],dx
  404a9e:	cmp    ecx,edi
  404aa0:	pop    edx
  404aa1:	add    bl,BYTE PTR [esp+edx*1]
  404aa4:	jne    0x404a27
  404aa6:	sbb    eax,0xadfe903c
  404aab:	mov    dh,BYTE PTR [ebp+0x15]
  404aae:	outs   dx,DWORD PTR ds:[esi]
  404aaf:	or     eax,0x419147c9
  404ab4:	mov    edi,0xb79f9199
  404ab9:	jge    0x404b08
  404abb:	stos   DWORD PTR es:[edi],eax
  404abc:	lds    edi,FWORD PTR [ecx-0x58648a00]
  404ac2:	ja     0x404ad9
  404ac4:	or     ebx,DWORD PTR [edx+0x28]
  404ac7:	push   cs
  404ac8:	and    esp,DWORD PTR [esi+0x33b73b22]
  404ace:	mov    esp,0x32b8c6a6
  404ad3:	and    cl,BYTE PTR [ecx+0x5e6fb6c6]
  404ad9:	push   edi
  404ada:	inc    edx
  404adb:	xor    al,0x52
  404add:	lahf   
  404ade:	mov    cl,0xbb
  404ae0:	test   DWORD PTR [eax+0x46576322],esi
  404ae6:	pop    es
  404ae7:	push   0xe2962c1d
  404aec:	popf   
  404aed:	stc    
  404aee:	xchg   ebx,eax
  404aef:	xchg   ebx,eax
  404af0:	stc    
  404af1:	out    0x7,al
  404af3:	call   0x799c65b4
  404af8:	cld    
  404af9:	push   ecx
  404afa:	test   al,0xd
  404afc:	rol    BYTE PTR [esi],1
  404afe:	sub    DWORD PTR [ebx+0x4aef5cc2],ecx
  404b04:	jbe    0x404b77
  404b06:	mov    ch,BYTE PTR [eax-0x56]
  404b09:	sbb    al,0xcb
  404b0b:	loop   0x404b3e
  404b0d:	arpl   WORD PTR [ebp+0x6a],di
  404b10:	icebp  
  404b11:	pop    edx
  404b12:	mov    al,0xdc
  404b14:	es pusha 
  404b16:	scas   al,BYTE PTR es:[edi]
  404b17:	outs   dx,DWORD PTR ds:[esi]
  404b18:	sub    eax,0x41f1e317
  404b1d:	xchg   BYTE PTR [ecx-0x5c550a8b],ah
  404b23:	stc    
  404b24:	(bad)  
  404b25:	mov    ebx,0x75245392
  404b2a:	push   0x3c296134
  404b2f:	(bad)
  404b32:	dec    edi
  404b33:	push   ebp
  404b34:	cmp    eax,0x49ffce76
  404b39:	cmp    DWORD PTR [ebx],esp
  404b3b:	stos   BYTE PTR es:[edi],al
  404b3c:	jle    0x404ae2
  404b3e:	pop    ebx
  404b3f:	fild   DWORD PTR [edx*1-0x60c145ae]
  404b46:	div    BYTE PTR [ebp+0x74fa6fa5]
  404b4c:	leave  
  404b4d:	add    ebx,0x2b
  404b50:	aas    
  404b51:	(bad)  [ebx]
  404b53:	lods   eax,DWORD PTR ds:[esi]
  404b54:	(bad)  
  404b55:	sbb    ah,al
  404b57:	(bad)  
  404b58:	push   esp
  404b59:	pop    eax
  404b5a:	mov    al,ds:0x8569ae75
  404b5f:	and    edx,ecx
  404b61:	mov    edx,0xabf4f33c
  404b66:	jbe    0x404b8b
  404b68:	mov    dh,BYTE PTR [ecx]
  404b6a:	rcr    BYTE PTR [esi-0x2b7651e2],1
  404b70:	mov    ?,ecx
  404b72:	loope  0x404b75
  404b74:	es out dx,al
  404b76:	dec    ebx
  404b77:	sti    
  404b78:	cmp    DWORD PTR [ebx+edx*1-0x5],edi
  404b7c:	sub    edi,esi
  404b7e:	rcl    al,0xb5
  404b81:	add    dl,bl
  404b83:	mov    DWORD PTR [esi+edx*2+0x39910354],edx
  404b8a:	loopne 0x404b82
  404b8c:	sub    BYTE PTR [ebx],0x1e
  404b8f:	popa   
  404b90:	in     al,dx
  404b91:	inc    esp
  404b92:	add    bh,BYTE PTR [edi]
  404b94:	shl    DWORD PTR [esi],cl
  404b96:	retf   
  404b97:	(bad)  
  404b98:	add    DWORD PTR fs:[edi-0x64],esp
  404b9c:	mov    al,0xf3
  404b9e:	out    dx,al
  404b9f:	xor    DWORD PTR [ebp-0x7],esi
  404ba2:	out    0x11,eax
  404ba4:	mov    dl,0x95
  404ba6:	enter  0x8f43,0x69
  404baa:	imul   DWORD PTR [ebp-0x73]
  404bad:	jne    0x404bcc
  404baf:	xchg   ebp,eax
  404bb0:	push   0xffffffd3
  404bb2:	mov    ecx,0xdd606719
  404bb7:	push   0xf95545d6
  404bbc:	inc    ecx
  404bbd:	or     ah,BYTE PTR [ecx]
  404bbf:	mov    esi,0xe8c99d4f
  404bc4:	push   eax
  404bc5:	data16 mov dl,0xec
  404bc8:	push   es
  404bc9:	aaa    
  404bca:	dec    eax
  404bcb:	test   eax,0x515d29a3
  404bd0:	data16 jbe 0x404c2a
  404bd3:	out    dx,eax
  404bd4:	cmp    ah,BYTE PTR [eax+0x35]
  404bd7:	mov    ds:0x7383eb77,al
  404bdc:	stc    
  404bdd:	dec    ebp
  404bde:	cmp    eax,DWORD PTR [eax]
  404be0:	mov    DWORD PTR [eax],ecx
  404be2:	ins    DWORD PTR es:[edi],dx
  404be3:	jns    0x404c26
  404be5:	inc    esp
  404be6:	sub    ah,BYTE PTR [eax+0x1a]
  404be9:	out    dx,eax
  404bea:	(bad)  
  404beb:	fwait
  404bec:	jmp    0x404c1f
  404bee:	mov    bl,0x60
  404bf0:	add    edx,DWORD PTR [edx]
  404bf2:	inc    esp
  404bf3:	jo     0x404bc6
  404bf5:	xchg   edi,eax
  404bf6:	retf   0xea5c
  404bf9:	cmp    eax,0xf470a124
  404bfe:	mov    bl,0xf7
  404c00:	rol    DWORD PTR [esi],0xf4
  404c03:	ja     0x404bf9
  404c05:	xor    ebx,DWORD PTR ds:0xd842703d
  404c0b:	cs xchg ebp,eax
  404c0d:	in     eax,0xa2
  404c0f:	ror    DWORD PTR [ecx+0x1f],1
  404c12:	push   ds
  404c13:	pop    ss
  404c14:	out    dx,eax
  404c15:	dec    edi
  404c16:	adc    ebp,eax
  404c18:	xchg   esi,eax
  404c19:	enter  0x603d,0x7b
  404c1d:	into   
  404c1e:	fmul   st(2),st
  404c20:	mov    dl,0x1f
  404c22:	adc    eax,0x15966258
  404c27:	mov    edx,0xf6c29a84
  404c2c:	into   
  404c2d:	pushf  
  404c2e:	das    
  404c2f:	js     0x404be1
  404c31:	xchg   DWORD PTR [edi+0x7],ebp
  404c34:	loopne 0x404c97
  404c36:	sbb    al,cl
  404c38:	loope  0x404bf1
  404c3a:	push   eax
  404c3b:	sub    ebx,edi
  404c3d:	jmp    0x1f464859
  404c42:	ins    BYTE PTR es:[edi],dx
  404c43:	ficom  WORD PTR [ebx-0x38]
  404c46:	dec    ebp
  404c47:	test   bl,0x63
  404c4a:	imul   eax,eax,0x55
  404c4d:	scas   eax,DWORD PTR es:[edi]
  404c4e:	lds    ebx,FWORD PTR [edx]
  404c50:	adc    eax,DWORD PTR [eax+eax*4]
  404c53:	or     edi,DWORD PTR [ebp-0x11d2fd81]
  404c59:	mov    edi,0x754c164b
  404c5e:	out    0x30,eax
  404c60:	test   BYTE PTR [ecx],cl
  404c62:	gs push ecx
  404c64:	mov    esi,0xa6e5fe87
  404c69:	inc    eax
  404c6a:	lea    edx,[edx]
  404c6c:	leave  
  404c6d:	int    0x90
  404c6f:	push   ds
  404c70:	add    dh,BYTE PTR [edi]
  404c72:	and    DWORD PTR [eax-0x31],edi
  404c75:	lods   al,BYTE PTR ds:[esi]
  404c76:	xor    al,0x54
  404c78:	in     al,dx
  404c79:	int3   
  404c7a:	cwde   
  404c7b:	leave  
  404c7c:	lods   eax,DWORD PTR ds:[esi]
  404c7d:	test   dh,dh
  404c7f:	(bad)  
  404c80:	mov    ds:0x94829f86,eax
  404c85:	repnz data16 mov ds:0x9eacb9e,al
  404c8c:	push   ss
  404c8d:	sar    BYTE PTR [ebp+eiz*1+0x1064e1f1],1
  404c94:	int3   
  404c95:	pusha  
  404c96:	dec    ecx
  404c97:	rcr    ch,cl
  404c99:	scas   eax,DWORD PTR es:[edi]
  404c9a:	nop
  404c9b:	or     esi,ecx
  404c9d:	(bad)  
  404c9e:	mov    al,ah
  404ca0:	in     al,0x83
  404ca2:	xor    DWORD PTR [edi+eiz*8],eax
  404ca5:	and    al,0xfd
  404ca7:	xor    DWORD PTR [edx+0x73],edi
  404caa:	daa    
  404cab:	and    eax,0xd63f4b84
  404cb0:	push   0x6032467f
  404cb5:	jb     0x404c7d
  404cb7:	(bad)  [ecx+0x5fa99f8f]
  404cbd:	jae    0x404d38
  404cbf:	mov    ecx,0x17040ba3
  404cc4:	out    0x7d,eax
  404cc6:	sbb    BYTE PTR [edi-0x730c976d],bl
  404ccc:	mov    eax,ds:0xd252d70d
  404cd1:	xchg   edx,eax
  404cd2:	call   0xb0a7:0xfc6e0754
  404cd9:	je     0x404d2f
  404cdb:	mov    edx,0x83fa3092
  404ce0:	ins    BYTE PTR es:[edi],dx
  404ce1:	jge    0x404cf9
  404ce3:	sbb    eax,0x9af35fd2
  404ce8:	dec    eax
  404ce9:	(bad)  
  404cea:	scas   al,BYTE PTR es:[edi]
  404ceb:	push   ds
  404cec:	loopne 0x404cb3
  404cee:	rcr    DWORD PTR [eax+0xca57ce0],1
  404cf4:	pushf  
  404cf5:	imul   esi,DWORD PTR [ecx-0x42],0xf0e5638c
  404cfc:	jl     0x404cdb
  404cfe:	rcr    DWORD PTR [eax-0x6],0x9a
  404d02:	and    edx,DWORD PTR [edi-0x38]
  404d05:	xchg   DWORD PTR [edi-0x24],edi
  404d08:	inc    ebx
  404d09:	push   0x39
  404d0b:	adc    DWORD PTR [eax+0x6a58d93a],ecx
  404d11:	mov    ch,0x58
  404d13:	push   esp
  404d14:	test   eax,0x4b7a53a1
  404d19:	jl     0x404d11
  404d1b:	(bad)
  404d1e:	fs pop ebx
  404d20:	and    ah,BYTE PTR [ebx+eiz*8]
  404d23:	sub    dh,BYTE PTR [edi-0x33bc891a]
  404d29:	mov    dl,0x3d
  404d2b:	rcr    dh,1
  404d2d:	in     eax,0x63
  404d2f:	bswap  edi
  404d31:	fldcw  WORD PTR [esi-0x749c6421]
  404d37:	fwait
  404d38:	loopne 0x404d70
  404d3a:	pop    es
  404d3b:	stos   BYTE PTR es:[edi],al
  404d3c:	(bad)  
  404d3d:	and    bl,BYTE PTR [edi+0x45]
  404d40:	mov    eax,0x7b00173b
  404d45:	add    eax,0x5e357937
  404d4a:	neg    BYTE PTR [edi-0x2f89317e]
  404d50:	sti    
  404d51:	scas   al,BYTE PTR es:[edi]
  404d52:	in     al,0x9d
  404d54:	sub    cl,BYTE PTR [edx+edi*2+0x4b]
  404d58:	ror    DWORD PTR [ecx-0x6],1
  404d5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d5c:	sbb    esi,0x7a98d7d9
  404d62:	mov    ds:0x3af59237,al
  404d67:	and    BYTE PTR [edx-0x6],0x63
  404d6b:	stc    
  404d6c:	push   ebx
  404d6d:	pop    ss
  404d6e:	jmp    0x404d85
  404d70:	jmp    FWORD PTR [esi]
  404d72:	cmp    ecx,0x21c030c2
  404d78:	shl    BYTE PTR [edx+0x14],0x99
  404d7c:	or     eax,0xbf210325
  404d81:	ja     0x404d20
  404d83:	sbb    esp,esp
  404d85:	jl     0x404d3d
  404d87:	in     eax,dx
  404d88:	aas    
  404d89:	pop    esp
  404d8a:	adc    ebp,DWORD PTR [edi-0x2e]
  404d8d:	(bad)  
  404d8e:	jmp    0x3db5eded
  404d93:	and    ebx,DWORD PTR [esi-0x4c]
  404d96:	dec    ecx
  404d97:	add    al,0x25
  404d99:	xchg   BYTE PTR [esi-0x2cac3fc6],ah
  404d9f:	aam    0xef
  404da1:	inc    esp
  404da2:	xchg   edi,eax
  404da3:	push   0x828cd92e
  404da8:	arpl   WORD PTR [esi+edx*8+0x39],ax
  404dac:	jle    0x404e21
  404dae:	cld    
  404daf:	std    
  404db0:	push   es
  404db1:	ret    0x572
  404db4:	fldl2e 
  404db6:	sbb    bl,BYTE PTR [eax+eiz*2]
  404db9:	int    0x4c
  404dbb:	lods   al,BYTE PTR ds:[esi]
  404dbc:	add    BYTE PTR [edi+esi*8+0x66],dl
  404dc0:	or     eax,0x5f9a7d22
  404dc5:	and    ebx,DWORD PTR gs:[ecx+ebp*4+0x11]
  404dca:	mov    ds:0x24730f7a,eax
  404dcf:	jl     0x404dc7
  404dd1:	dec    esp
  404dd2:	stc    
  404dd3:	xchg   ebp,eax
  404dd4:	mov    dh,cl
  404dd6:	inc    ecx
  404dd7:	mov    ebp,0xca5dd9a
  404ddc:	push   esp
  404ddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dde:	stc    
  404ddf:	cmp    eax,0x8e4634f7
  404de4:	jo     0x404daf
  404de6:	cdq    
  404de7:	mov    bl,0xbe
  404de9:	xor    ah,BYTE PTR [eax+ebp*8]
  404dec:	fldenv [esi+eiz*1+0x29]
  404df0:	pop    ss
  404df1:	push   es
  404df2:	xchg   esp,eax
  404df3:	(bad)  
  404df4:	push   0xffffffed
  404df6:	outs   dx,DWORD PTR ds:[esi]
  404df7:	cli    
  404df8:	fprem  
  404dfa:	jne    0x404d81
  404dfc:	add    BYTE PTR [edi+0xc],cl
  404dff:	mov    dl,0xce
  404e01:	inc    esi
  404e02:	out    0x34,eax
  404e04:	pop    ss
  404e05:	(bad)  
  404e06:	nop
  404e07:	push   esi
  404e08:	mov    ecx,0x9b77e87a
  404e0d:	jecxz  0x404e58
  404e0f:	lods   eax,DWORD PTR ds:[esi]
  404e10:	add    DWORD PTR [ebx],0x5d
  404e13:	cmp    edx,ecx
  404e15:	sar    DWORD PTR [edx],cl
  404e17:	pushaw 
  404e19:	stos   BYTE PTR es:[edi],al
  404e1a:	arpl   WORD PTR [edi-0x60],cx
  404e1d:	mov    al,ds:0xf9bda01c
  404e22:	push   0xffffffd9
  404e24:	sbb    edx,DWORD PTR ds:0x303a6d3a
  404e2a:	repnz inc ebp
  404e2c:	push   edx
  404e2d:	push   ds
  404e2e:	shl    DWORD PTR [eax],cl
  404e30:	cld    
  404e31:	push   edx
  404e32:	fwait
  404e33:	pop    ebx
  404e34:	mov    dh,0x1
  404e36:	pop    ebx
  404e37:	and    al,0x51
  404e39:	push   es
  404e3a:	jnp    0x404df4
  404e3c:	aam    0x17
  404e3e:	(bad)  [edx]
  404e40:	mov    ebp,0x568c26d
  404e45:	jg     0x404ddc
  404e47:	or     eax,DWORD PTR [eax+0x13957ef2]
  404e4d:	popa   
  404e4e:	sub    al,0x10
  404e50:	retf   0x3159
  404e53:	cmp    bl,BYTE PTR [esi-0x30]
  404e56:	pop    ss
  404e57:	cmp    DWORD PTR [edi+0x7c],edi
  404e5a:	inc    edi
  404e5b:	xor    bh,BYTE PTR [eax]
  404e5d:	mov    DWORD PTR [ecx-0x20804418],edx
  404e63:	sbb    bl,cl
  404e65:	push   edx
  404e66:	sub    eax,esp
  404e68:	in     al,0xd6
  404e6a:	lock cs jae 0x404e7b
  404e6e:	pop    edi
  404e6f:	pop    eax
  404e70:	(bad)  
  404e71:	mov    ecx,0x41ec4922
  404e76:	loope  0x404e07
  404e78:	pop    edx
  404e79:	push   0xfffffff3
  404e7b:	lea    edx,[esp+ecx*2+0x1ee62af]
  404e82:	repnz jecxz 0x404ea5
  404e85:	mov    es,WORD PTR [ebx+0x76]
  404e88:	or     al,0xf7
  404e8a:	fsubr  DWORD PTR [edi-0x43]
  404e8d:	cs fwait
  404e8f:	popa   
  404e90:	rol    DWORD PTR [ecx-0x18760af9],0x77
  404e97:	ds jns 0x404f00
  404e9a:	adc    al,BYTE PTR [ecx+ebx*8+0x2fae34b9]
  404ea1:	push   edi
  404ea2:	ss push es
  404ea4:	lea    edi,[ebx+edx*8]
  404ea7:	jmp    0xbdb6:0x3532ee23
  404eae:	es fs or bh,al
  404eb2:	nop
  404eb3:	loop   0x404f32
  404eb5:	cmc    
  404eb6:	and    edx,DWORD PTR [edi+0x32]
  404eb9:	add    bh,dh
  404ebb:	js     0x404ee2
  404ebd:	mov    es,WORD PTR [ebx-0x13]
  404ec0:	inc    ecx
  404ec1:	out    0xad,al
  404ec3:	pusha  
  404ec4:	inc    edx
  404ec5:	push   0x11
  404ec7:	shl    DWORD PTR [ebx-0x21],0x55
  404ecb:	mov    dh,0x2a
  404ecd:	lods   eax,DWORD PTR ds:[esi]
  404ece:	(bad)  
  404ecf:	jno    0x404e60
  404ed1:	fidivr DWORD PTR [ebx-0x64]
  404ed4:	(bad)
  404ed8:	push   ds
  404ed9:	stos   DWORD PTR es:[edi],eax
  404eda:	loope  0x404ecd
  404edc:	jecxz  0x404ed5
  404ede:	jo     0x404e69
  404ee0:	loop   0x404ea9
  404ee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ee3:	adc    ch,ah
  404ee5:	dec    ebp
  404ee6:	int    0xda
  404ee8:	inc    ebp
  404ee9:	clc    
  404eea:	add    DWORD PTR [ecx+0x61c5c8d6],ecx
  404ef0:	loope  0x404f1f
  404ef2:	stc    
  404ef3:	jns    0x404ea4
  404ef5:	cmp    eax,0xeb91ea04
  404efa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404efb:	or     esi,DWORD PTR [edi-0x24]
  404efe:	stos   DWORD PTR es:[edi],eax
  404eff:	lock and al,0x52
  404f02:	jo     0x404eb0
  404f04:	ins    BYTE PTR es:[edi],dx
  404f05:	jmp    ebx
  404f07:	xor    eax,DWORD PTR [edi+0x242bfaa6]
  404f0d:	cmp    BYTE PTR [esi+0x15],ah
  404f10:	xchg   BYTE PTR [ecx+0x2],dl
  404f13:	mov    edx,0xfaf8821f
  404f18:	das    
  404f19:	or     dl,BYTE PTR [esi+0x29]
  404f1c:	stos   BYTE PTR es:[edi],al
  404f1d:	jnp    0x404f94
  404f1f:	pop    ecx
  404f20:	cmc    
  404f21:	or     BYTE PTR [edx-0x327f767e],0x69
  404f28:	sti    
  404f29:	repz imul ecx,DWORD PTR [esi],0xffffffa6
  404f2d:	add    al,0x89
  404f2f:	loop   0x404f58
  404f31:	cld    
  404f32:	fwait
  404f33:	mov    ds:0x71eaaf1c,al
  404f38:	out    dx,al
  404f39:	sbb    BYTE PTR [edx-0x362b197c],cl
  404f3f:	adc    dl,bh
  404f41:	dec    eax
  404f42:	out    0x58,al
  404f44:	cmp    ebp,DWORD PTR [ebx-0x1c]
  404f47:	stc    
  404f48:	adc    DWORD PTR [ebp-0x2b8b7d35],ebp
  404f4e:	test   DWORD PTR [eax],esp
  404f50:	out    0xe2,al
  404f52:	pop    edi
  404f53:	clc    
  404f54:	sub    eax,0x302e8fa9
  404f59:	inc    edi
  404f5b:	mov    al,0x89
  404f5d:	ds mov eax,0xbe314c9e
  404f63:	bswap  ecx
  404f65:	add    dh,bh
  404f67:	into   
  404f68:	mov    ebp,0x57f1f742
  404f6d:	cmp    DWORD PTR [eax],0x16
  404f70:	fs ins BYTE PTR es:[edi],dx
  404f72:	jmp    0xd446:0x36fd08c5
  404f79:	add    eax,0x56595d35
  404f7f:	xchg   esi,eax
  404f80:	push   ecx
  404f81:	xchg   BYTE PTR [eax+eiz*8],bh
  404f84:	test   BYTE PTR [ebx+0x22],0xc8
  404f88:	inc    edx
  404f89:	mov    ebp,0x66ed3ba8
  404f8e:	adc    esi,esi
  404f90:	sub    eax,DWORD PTR [esi]
  404f92:	(bad)  
  404f93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f94:	loope  0x404f19
  404f96:	or     edi,DWORD PTR [edi+0x6d]
  404f99:	mov    esi,0x9eaa95b3
  404f9e:	jmp    0x404fd0
  404fa0:	pop    esi
  404fa1:	sbb    eax,0x74e1066c
  404fa6:	cmp    DWORD PTR [ecx],ecx
  404fa8:	push   ds
  404fa9:	mov    ds,WORD PTR [esi]
  404fab:	cmp    al,bh
  404fad:	or     ch,ch
  404faf:	dec    eax
  404fb0:	imul   edx,DWORD PTR [eax+0x54],0x16573d72
  404fb7:	lahf   
  404fb8:	jle    0x404f4a
  404fba:	cdq    
  404fbb:	ds cmp al,0xa8
  404fbe:	(bad)  
  404fbf:	dec    ecx
  404fc0:	ror    ch,cl
  404fc2:	leave  
  404fc3:	test   ah,bl
  404fc5:	je     0x40500f
  404fc7:	mov    dl,0xf7
  404fc9:	xchg   ecx,ebp
  404fcb:	call   0xfcf235e9
  404fd0:	cli    
  404fd1:	pop    ebx
  404fd2:	ret    0x4db6
  404fd5:	pop    ebp
  404fd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fd7:	xchg   edx,eax
  404fd8:	cs dec esi
  404fda:	mul    DWORD PTR [ecx+0xcd2cf16]
  404fe0:	jnp    0x40505a
  404fe2:	ins    DWORD PTR es:[edi],dx
  404fe3:	mov    cl,0x7a
  404fe5:	push   es
  404fe6:	cmp    DWORD PTR [edi-0x366f0f7c],0xfffffff3
  404fed:	cld    
  404fee:	cmp    ebx,0xbad87bfb
  404ff4:	fbld   TBYTE PTR [edx-0x392654a2]
  404ffa:	(bad)  
  404ffb:	test   al,0x3
  404ffd:	shr    DWORD PTR [ebx-0x47],0x2a
  405001:	xchg   esi,eax
  405002:	cwde   
  405003:	call   0x90f1bb5a
  405008:	mov    edx,0xa6d8c6a3
  40500d:	aad    0x36
  40500f:	imul   ebp,DWORD PTR [ebx-0x2b22c8f6],0xffffff89
  405016:	fwait
  405017:	add    DWORD PTR [ebx+0x38],esi
  40501a:	dec    esi
  40501b:	rol    BYTE PTR [di+0x27],1
  405020:	out    0xb1,eax
  405022:	mov    bl,0x1f
  405024:	fnstenv [ebp+0x53b7da3a]
  40502a:	test   DWORD PTR [ecx+0x72],ecx
  40502d:	imul   esp,DWORD PTR [eax+0x4c],0xb83158b0
  405034:	jg     0x40503c
  405036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405037:	cmp    ch,0x3b
  40503a:	enter  0x840f,0x4a
  40503e:	add    al,BYTE PTR [eax]
  405040:	add    BYTE PTR [ecx+0x42b01805],al
  405046:	add    BYTE PTR [eax],cl
  405048:	rol    BYTE PTR [edx+0x0],0xff
  40504c:	jne    0x40503a
  40504e:	xor    DWORD PTR ds:0x42b00c,0x3dbe
  405058:	push   DWORD PTR [ebp+0x8]
  40505b:	call   0x40c78f
  405060:	sbb    ecx,0x6495
  405066:	mov    DWORD PTR [ebp-0x14],eax
  405069:	or     DWORD PTR ds:0x42901c,ebx
  40506f:	mov    eax,DWORD PTR [ebp-0x4]
  405072:	mov    ecx,DWORD PTR [ebp-0x14]
  405075:	adc    DWORD PTR ds:0x42d00c,0x15e5
  40507f:	xor    eax,esi
  405081:	add    eax,edi
  405083:	mov    DWORD PTR ds:0x42b004,0x7edf
  40508d:	cmp    ecx,eax
  40508f:	mov    DWORD PTR ds:0x42d014,0x1e10
  405099:	je     0x40528b
  40509f:	mov    eax,DWORD PTR [ebp-0x14]
  4050a2:	mov    ecx,DWORD PTR ds:0x429010
  4050a8:	sbb    DWORD PTR ds:0x42c00c,ecx
  4050ae:	mov    eax,DWORD PTR [eax+0x18]
  4050b1:	mov    DWORD PTR [ebp-0x2c],eax
  4050b4:	add    ecx,ecx
  4050b6:	mov    eax,DWORD PTR [ebp-0x14]
  4050b9:	sbb    DWORD PTR ds:0x42c01c,0x4c1
  4050c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4050c6:	xor    DWORD PTR ds:0x42b000,0x3fa3
  4050d0:	add    ecx,DWORD PTR [eax+0x20]
  4050d3:	xor    eax,0x40df
  4050d8:	mov    DWORD PTR [ebp-0x34],ecx
  4050db:	or     ecx,eax
  4050dd:	mov    eax,DWORD PTR [ebp-0x14]
  4050e0:	xor    DWORD PTR ds:0x429008,ecx
  4050e6:	mov    ecx,DWORD PTR [ebp+0x8]
  4050e9:	and    DWORD PTR ds:0x42a008,0x42d014
  4050f3:	add    ecx,DWORD PTR [eax+0x24]
  4050f6:	mov    DWORD PTR [ebp-0x3c],ecx
  4050f9:	movzx  eax,BYTE PTR ds:0x42c000
  405100:	sbb    DWORD PTR ds:0x429010,eax
  405106:	mov    eax,DWORD PTR [ebp-0x14]
  405109:	mov    DWORD PTR ds:0x42d004,0x14
  405113:	cmp    DWORD PTR ds:0x42d004,0x0
  40511a:	je     0x405176
  405120:	cmp    DWORD PTR ds:0x42d004,0x9
  405127:	jne    0x405142
  40512d:	push   0x42e0f9
  405132:	push   0x42e0c7
  405137:	push   0x400000
  40513c:	call   DWORD PTR ds:0x42e9c7
  405142:	cmp    DWORD PTR ds:0x42d004,0xa
  405149:	jne    0x40515c
  40514f:	mov    ecx,DWORD PTR ds:0x42d004
  405155:	dec    ecx
  405156:	mov    DWORD PTR ds:0x42d004,ecx
  40515c:	xor    ecx,ecx
  40515e:	or     ecx,DWORD PTR ds:0x42d004
  405164:	dec    ecx
  405165:	mov    DWORD PTR ds:0x42d004,ecx
  40516b:	jmp    0x405113
  405170:	inc    DWORD PTR ds:0x42b00c
  405176:	mov    ecx,DWORD PTR [ebp+0x8]
  405179:	add    ecx,DWORD PTR [eax+0x1c]
  40517c:	mov    DWORD PTR [ebp-0x14],ecx
  40517f:	jmp    0x405253
  405184:	sub    DWORD PTR ds:0x42c018,ebx
  40518a:	mov    eax,DWORD PTR [ebp-0x34]
  40518d:	mov    ecx,DWORD PTR [ebp+0x8]
  405190:	sbb    DWORD PTR ds:0x42a014,0x429000
  40519a:	add    ecx,DWORD PTR [eax+ebx*4]
  40519d:	and    DWORD PTR ds:0x42d00c,0x0
  4051a7:	jmp    0x4051b7
  4051ac:	mov    eax,ds:0x42d00c
  4051b1:	inc    eax
  4051b2:	mov    ds:0x42d00c,eax
  4051b7:	cmp    DWORD PTR ds:0x42d00c,0x1b
  4051be:	jae    0x405206
  4051c4:	cmp    DWORD PTR ds:0x42d00c,0xd
  4051cb:	jne    0x4051dc
  4051d1:	push   0x42e0b3
  4051d6:	call   DWORD PTR ds:0x42e9cb
  4051dc:	cmp    DWORD PTR ds:0x42d00c,0xc
  4051e3:	jne    0x4051f7
  4051e9:	xor    eax,eax
  4051eb:	xor    eax,DWORD PTR ds:0x42d00c
  4051f1:	inc    eax
  4051f2:	mov    ds:0x42d00c,eax
  4051f7:	jmp    0x4051ac
  4051fc:	xor    DWORD PTR ds:0x42b010,0x429024
  405206:	mov    DWORD PTR [ebp-0x30],ecx
  405209:	mov    eax,DWORD PTR [ebp-0x4]
  40520c:	mov    ecx,DWORD PTR [ebp-0x30]
  40520f:	xor    eax,esi
  405211:	add    eax,edi
  405213:	cmp    ecx,eax
  405215:	je     0x405253
  40521b:	jmp    0x405244
  405220:	mov    eax,DWORD PTR [ebp-0x4]
  405223:	mov    ecx,DWORD PTR [ebp-0x8]
  405226:	xor    eax,esi
  405228:	add    eax,edi
  40522a:	cmp    ecx,eax
  40522c:	mov    eax,DWORD PTR [ebp-0x4]
  40522f:	je     0x40528e
  405235:	mov    ecx,DWORD PTR [ebp-0x38]
  405238:	xor    eax,esi
  40523a:	add    eax,edi
  40523c:	cmp    ecx,eax
  40523e:	je     0x405297
  405244:	lea    eax,[ebp-0x8]
  405247:	push   eax
  405248:	push   DWORD PTR [ebp-0x30]
  40524b:	push   DWORD PTR [ebp+0xc]
  40524e:	call   0x40ca0a
  405253:	mov    eax,DWORD PTR [ebp-0x4]
  405256:	mov    ecx,DWORD PTR [ebp-0x8]
  405259:	xor    eax,esi
  40525b:	add    eax,edi
  40525d:	cmp    ecx,eax
  40525f:	je     0x40527a
  405265:	mov    eax,DWORD PTR [ebp-0x3c]
  405268:	movzx  eax,WORD PTR [eax+ebx*2]
  40526c:	mov    ecx,DWORD PTR [ebp-0x14]
  40526f:	mov    eax,DWORD PTR [ecx+eax*4]
  405272:	mov    DWORD PTR [ebp-0x40],eax
  405275:	jmp    0x405220
  40527a:	mov    eax,DWORD PTR [ebp-0xc]
  40527d:	xor    eax,esi
  40527f:	lea    ebx,[ebx+eax*1+0x3272e0]
  405286:	jmp    0x402be0
  40528b:	mov    eax,DWORD PTR [ebp-0x4]
  40528e:	xor    eax,esi
  405290:	add    eax,edi
  405292:	jmp    0x4053b4
  405297:	mov    eax,DWORD PTR [ebp-0x40]
  40529a:	add    eax,DWORD PTR [ebp+0x8]
  40529d:	mov    DWORD PTR [ebp-0x18],eax
  4052a0:	mov    eax,DWORD PTR [ebp-0x1c]
  4052a3:	test   eax,eax
  4052a5:	je     0x40533f
  4052ab:	mov    DWORD PTR [ebp-0x28],0x0
  4052b2:	push   0x3
  4052b4:	xor    edx,edx
  4052b6:	pop    edx
  4052b7:	add    edx,0x8
  4052ba:	push   edx
  4052bb:	pop    ecx
  4052bc:	push   0x6
  4052be:	dec    ecx
  4052bf:	pop    ebx
  4052c0:	dec    ebx
  4052c1:	xchg   ebx,ecx
  4052c3:	sub    ebx,ecx
  4052c5:	xchg   ebx,ecx
  4052c7:	dec    ecx
  4052c8:	mov    eax,DWORD PTR [ebp-0x1c]
  4052cb:	imul   eax,ecx
  4052ce:	sub    esp,eax
  4052d0:	mov    DWORD PTR [ebp-0x28],esp
  4052d3:	mov    eax,DWORD PTR [ebp-0x4]
  4052d6:	xor    eax,esi
  4052d8:	add    eax,edi
  4052da:	jmp    0x405318
  4052df:	mov    ecx,DWORD PTR [ebp-0xc]
  4052e2:	mov    eax,DWORD PTR [ebp+0x8]
  4052e5:	mov    edx,DWORD PTR [ebp+0x14]
  4052e8:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052ec:	xor    ecx,esi
  4052ee:	add    ecx,edi
  4052f0:	xor    edx,edx
  4052f2:	div    ecx
  4052f4:	mov    ecx,DWORD PTR [ebp-0x4]
  4052f7:	xor    ecx,esi
  4052f9:	lea    eax,[ecx+eax*1+0x3272e0]
  405300:	mov    ecx,DWORD PTR [ebp+0x8]
  405303:	mov    edx,DWORD PTR [ebp-0x28]
  405306:	mov    DWORD PTR [edx+ecx*4],eax
  405309:	mov    eax,DWORD PTR [ebp-0xc]
  40530c:	mov    ecx,DWORD PTR [ebp+0x8]
  40530f:	xor    eax,esi
  405311:	lea    eax,[eax+ecx*1+0x3272e0]
  405318:	mov    DWORD PTR [ebp+0x8],eax
  40531b:	mov    eax,DWORD PTR [ebp-0xc]
  40531e:	mov    ecx,DWORD PTR [ebp+0x14]
  405321:	xor    eax,esi
  405323:	add    eax,edi
  405325:	imul   eax,DWORD PTR [ecx]
  405328:	mov    ecx,DWORD PTR [ebp-0x4]
  40532b:	mov    edx,DWORD PTR [ebp+0x8]
  40532e:	xor    ecx,esi
  405330:	lea    ecx,[ecx+edx*1+0x3272e0]
  405337:	cmp    ecx,eax
  405339:	jne    0x4052df
  40533f:	mov    eax,DWORD PTR [ebp-0x4]
  405342:	xor    eax,esi
  405344:	add    eax,edi
  405346:	mov    DWORD PTR [ebp-0x10],eax
  405349:	mov    ebx,0x65655
  40534e:	add    ebx,0x3234
  405354:	xchg   ebx,esi
  405356:	xor    ebx,ebx
  405358:	push   esi
  405359:	mov    esi,ebx
  40535b:	pop    ebx
  40535c:	mov    edx,esi
  40535e:	add    ebx,0x1002
  405364:	lea    eax,[ebp-0x18]
  405367:	add    edx,eax
  405369:	add    edx,0x5
  40536c:	push   edx
  40536d:	inc    esi
  40536e:	pop    ecx
  40536f:	dec    ecx
  405370:	xchg   ecx,eax
  405371:	dec    eax
  405372:	xchg   ecx,eax
  405373:	dec    ecx
  405374:	xchg   ecx,edx
  405376:	dec    edx
  405377:	push   edx
  405378:	mov    edx,ebx
  40537a:	pop    ebx
  40537b:	dec    ebx
  40537c:	call   DWORD PTR [ebx]
  40537e:	cmp    DWORD PTR [ebp+0x10],esi
  405381:	je     0x4053a0
  405387:	xchg   edx,eax
  405388:	push   0xb
  40538a:	pop    ecx
  40538b:	push   0x4
  40538d:	pop    ebx
  40538e:	inc    ebx
  40538f:	xchg   ebx,ecx
  405391:	sub    ebx,ecx
  405393:	xchg   ebx,ecx
  405395:	dec    ecx
  405396:	dec    ecx
  405397:	mov    eax,DWORD PTR [ebp-0x1c]
  40539a:	imul   eax,ecx
  40539d:	add    esp,eax
  40539f:	xchg   edx,eax
  4053a0:	push   eax
  4053a1:	xor    ebx,ebx
  4053a3:	mov    edx,esp
  4053a5:	dec    edx
  4053a6:	inc    ebx
  4053a7:	add    ebx,DWORD PTR [edx+ebx*1]
  4053aa:	dec    ebx
  4053ab:	xor    edx,edx
  4053ad:	add    DWORD PTR [ebp-0x10],ebx
  4053b0:	pop    ebx
  4053b1:	mov    eax,DWORD PTR [ebp-0x10]
  4053b4:	pop    edi
  4053b5:	pop    esi
  4053b6:	pop    ebx
  4053b7:	leave  
  4053b8:	ret    0x10
  4053bb:	push   ebp
  4053bc:	mov    ebp,esp
  4053be:	sub    esp,0x7c
  4053c1:	mov    eax,ds:0x42a000
  4053c6:	xor    eax,DWORD PTR ds:0x42c014
  4053cc:	mov    ds:0x42a000,eax
  4053d1:	push   esi
  4053d2:	and    DWORD PTR ds:0x42a004,0x0
  4053dc:	jmp    0x4053f0
  4053e1:	xor    esi,esi
  4053e3:	or     esi,DWORD PTR ds:0x42a004
  4053e9:	inc    esi
  4053ea:	mov    DWORD PTR ds:0x42a004,esi
  4053f0:	cmp    DWORD PTR ds:0x42a004,0x18
  4053f7:	jae    0x4054e8
  4053fd:	cmp    DWORD PTR ds:0x42a004,0x6
  405404:	jne    0x405415
  40540a:	push   0x429028
  40540f:	call   DWORD PTR ds:0x42e9d3
  405415:	cmp    DWORD PTR ds:0x42a004,0x5
  40541c:	jne    0x405431
  405422:	xor    esi,esi
  405424:	or     esi,DWORD PTR ds:0x42a004
  40542a:	inc    esi
  40542b:	mov    DWORD PTR ds:0x42a004,esi
  405431:	jmp    0x4053e1
  405436:	and    DWORD PTR ds:0x42a014,0x0
  405440:	jmp    0x405454
  405445:	xor    esi,esi
  405447:	or     esi,DWORD PTR ds:0x42a014
  40544d:	inc    esi
  40544e:	mov    DWORD PTR ds:0x42a014,esi
  405454:	cmp    DWORD PTR ds:0x42a014,0x19
  40545b:	jae    0x4054e8
  405461:	cmp    DWORD PTR ds:0x42a014,0xf
  405468:	jne    0x405483
  40546e:	push   0x42d01c
  405473:	push   0x42a00c
  405478:	push   0x42d010
  40547d:	call   DWORD PTR ds:0x42e993
  405483:	cmp    DWORD PTR ds:0x42a014,0xe
  40548a:	jne    0x40549d
  405490:	mov    esi,DWORD PTR ds:0x42a014
  405496:	inc    esi
  405497:	mov    DWORD PTR ds:0x42a014,esi
  40549d:	jmp    0x405445
  4054a2:	mov    DWORD PTR ds:0x42c010,0x19
  4054ac:	cmp    DWORD PTR ds:0x42c010,0x0
  4054b3:	je     0x4054e8
  4054b9:	cmp    DWORD PTR ds:0x42c010,0x1e
  4054c0:	jne    0x4054d6
  4054c6:	push   0x0
  4054c8:	push   0x13e0
  4054cd:	push   DWORD PTR [ebp-0x14]
  4054d0:	call   DWORD PTR ds:0x42e997
  4054d6:	mov    esi,DWORD PTR ds:0x42c010
  4054dc:	dec    esi
  4054dd:	mov    DWORD PTR ds:0x42c010,esi
  4054e3:	jmp    0x4054ac
  4054e8:	push   edi
  4054e9:	adc    DWORD PTR ds:0x42901c,edx
  4054ef:	mov    eax,ds:0x42e313
  4054f4:	mov    esi,DWORD PTR ds:0x42c01c
  4054fa:	and    DWORD PTR ds:0x42a00c,esi
  405500:	mov    DWORD PTR [ebp-0x24],eax
  405503:	mov    eax,ds:0x42e41f
  405508:	mov    DWORD PTR [ebp-0x34],eax
  40550b:	mov    DWORD PTR ds:0x42b008,0x1b
  405515:	cmp    DWORD PTR ds:0x42b008,0x0
  40551c:	je     0x405564
  405522:	cmp    DWORD PTR ds:0x42b008,0x26
  405529:	jne    0x405554
  40552f:	push   0x5039
  405534:	push   DWORD PTR [ebp-0x20]
  405537:	push   0x42d010
  40553c:	push   0x88e6
  405541:	push   DWORD PTR [ebp-0x10]
  405544:	push   0x8f04
  405549:	push   0x8b34
  40554e:	call   DWORD PTR ds:0x42e99f
  405554:	mov    eax,ds:0x42b008
  405559:	dec    eax
  40555a:	mov    ds:0x42b008,eax
  40555f:	jmp    0x405515
  405564:	and    DWORD PTR [ebp-0x30],0x0
  405568:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  40556f:	add    eax,eax
  405571:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  405578:	add    DWORD PTR ds:0x42c014,edi
  40557e:	mov    eax,DWORD PTR [ebp-0x10]
  405581:	and    DWORD PTR ds:0x42d014,0x0
  40558b:	mov    esi,DWORD PTR ds:0x42d014
  405591:	inc    esi
  405592:	mov    DWORD PTR ds:0x42d014,esi
  405598:	cmp    DWORD PTR ds:0x42d014,0x5
  40559f:	jne    0x4055c0
  4055a5:	push   0x42c004
  4055aa:	push   DWORD PTR [ebp-0x20]
  4055ad:	push   0x42e0c7
  4055b2:	push   DWORD PTR [ebp-0x24]
  4055b5:	push   0x31c8
  4055ba:	call   DWORD PTR ds:0x42e9a3
  4055c0:	cmp    DWORD PTR ds:0x42d014,0x4
  4055c7:	jne    0x4055dc
  4055cd:	xor    esi,esi
  4055cf:	xor    esi,DWORD PTR ds:0x42d014
  4055d5:	inc    esi
  4055d6:	mov    DWORD PTR ds:0x42d014,esi
  4055dc:	cmp    DWORD PTR ds:0x42d014,0x1c
  4055e3:	jb     0x40558b
  4055e9:	and    DWORD PTR ds:0x42c004,0x0
  4055f3:	xor    ecx,ecx
  4055f5:	xor    ecx,DWORD PTR ds:0x42c004
  4055fb:	inc    ecx
  4055fc:	mov    DWORD PTR ds:0x42c004,ecx
  405602:	cmp    DWORD PTR ds:0x42c004,0x28
  405609:	jne    0x40561a
  40560f:	push   0x42d010
  405614:	call   DWORD PTR ds:0x42e9ab
  40561a:	cmp    DWORD PTR ds:0x42c004,0x18
  405621:	jb     0x4055f3
  405627:	and    DWORD PTR ds:0x42c018,edx
  40562d:	mov    ecx,DWORD PTR [ebp-0x10]
  405630:	sub    eax,ecx
  405632:	mov    DWORD PTR [ebp-0x10],eax
  405635:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  40563c:	mov    eax,DWORD PTR [ebp-0x18]
  40563f:	mov    ecx,DWORD PTR [ebp-0x18]
  405642:	sub    eax,ecx
  405644:	mov    DWORD PTR [ebp-0x18],eax
  405647:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  40564e:	jmp    0x4079f8
  405653:	neg    DWORD PTR [edi+0x51]
  405656:	pop    ds
  405657:	adc    edi,esi
  405659:	div    DWORD PTR [edi]
  40565b:	jge    0x40560a
  40565d:	aam    0xe9
  40565f:	and    bl,dl
  405661:	out    dx,eax
  405662:	fidiv  WORD PTR [eax]
  405664:	pop    edi
  405665:	jp     0x4056e1
  405667:	in     eax,0x5f
  405669:	jp     0x4056e5
  40566b:	sbb    edx,DWORD PTR [edi+ebp*2+0x602a9519]
  405672:	xchg   ebx,eax
  405673:	xchg   ebp,eax
  405674:	ret    0x6c5b
  405677:	add    BYTE PTR [esi+eiz*8+0x6306a45b],0xf6
  40567f:	or     edi,DWORD PTR [ecx]
  405681:	jmp    0x5ad6:0xba204290
  405688:	mov    eax,DWORD PTR [eax-0x65]
  40568b:	lods   al,BYTE PTR ds:[esi]
  40568c:	inc    esi
  40568d:	add    ah,dh
  40568f:	in     al,dx
  405690:	sub    ebx,DWORD PTR [ebp+edx*1+0x1aca51e1]
  405697:	add    cl,BYTE PTR ds:[eax]
  40569a:	add    ah,BYTE PTR [eax+0x8a02ef2]
  4056a0:	mov    DWORD PTR [ecx+0x2a],ebp
  4056a3:	mov    edx,DWORD PTR [edi+eax*1-0x4a6d85ce]
  4056aa:	push   ecx
  4056ab:	mov    ebp,0x80ba9921
  4056b0:	add    DWORD PTR [edx-0x1d],ebx
  4056b3:	inc    ebp
  4056b4:	pop    edx
  4056b5:	xchg   esi,eax
  4056b6:	or     DWORD PTR [ecx],edi
  4056b8:	push   es
  4056b9:	loopne 0x405709
  4056bb:	dec    edi
  4056bc:	pop    esp
  4056bd:	fnstenv [esi+ecx*4-0xb]
  4056c1:	fidivr DWORD PTR [esi-0x6b]
  4056c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056c5:	es push 0x40f6e134
  4056cb:	cmc    
  4056cc:	mov    ch,0x48
  4056ce:	js     0x405691
  4056d0:	xor    al,0x2c
  4056d2:	cmp    DWORD PTR [ebp-0x4c],0x95808ad6
  4056d9:	dec    ebp
  4056da:	aad    0xe6
  4056dc:	(bad)  
  4056dd:	ficomp WORD PTR [edi+0x99f9f60]
  4056e3:	sbb    BYTE PTR [edi+eiz*2],0xd9
  4056e7:	mov    eax,ds:0xfdb8392b
  4056ec:	out    dx,al
  4056ed:	sbb    eax,0xfe5e8919
  4056f2:	gs mov ah,0xc2
  4056f5:	xor    DWORD PTR [eax],edi
  4056f7:	xlat   BYTE PTR ds:[ebx]
  4056f8:	mov    ecx,0x5128e497
  4056fd:	pop    esi
  4056fe:	sub    eax,0xeb819d43
  405703:	jns    0x40573d
  405705:	sub    BYTE PTR [ebx+0x5b],ch
  405708:	stos   BYTE PTR es:[edi],al
  405709:	and    cl,al
  40570b:	imul   esp,esi,0xa69690a1
  405711:	(bad)  
  405712:	jbe    0x405699
  405714:	push   es
  405715:	pop    ebx
  405716:	jmp    0x7dc65848
  40571b:	(bad)  [ebp-0x658ac7be]
  405721:	or     DWORD PTR [ebx],esi
  405723:	into   
  405724:	dec    dh
  405726:	mov    bh,0x28
  405728:	xor    eax,0x39c33c26
  40572d:	retf   
  40572e:	and    ch,BYTE PTR [eax+0x5d]
  405731:	popf   
  405732:	pop    edx
  405733:	xchg   edx,eax
  405734:	sbb    BYTE PTR [ecx+0x111920be],0xd9
  40573b:	mov    ah,0xc5
  40573d:	adc    ebx,DWORD PTR [edi]
  40573f:	cdq    
  405740:	(bad)  
  405741:	jecxz  0x405791
  405743:	cdq    
  405744:	dec    edi
  405745:	xchg   edx,eax
  405746:	outs   dx,BYTE PTR ds:[esi]
  405747:	jecxz  0x405750
  405749:	js     0x4056ce
  40574b:	pop    edx
  40574c:	jmp    0x8a86:0xaf1744f1
  405753:	cwde   
  405754:	test   DWORD PTR [esi-0x3dc039fa],esp
  40575a:	sahf   
  40575b:	icebp  
  40575c:	ins    BYTE PTR es:[edi],dx
  40575d:	test   BYTE PTR es:[edx-0x7866aeed],bl
  405764:	mov    ah,0xaf
  405766:	jnp    0x4056ef
  405768:	popf   
  405769:	push   edi
  40576a:	inc    ecx
  40576b:	mov    edx,0xd3fd5860
  405770:	inc    ebx
  405771:	xchg   DWORD PTR [eax],esp
  405773:	inc    ebp
  405774:	xchg   esp,eax
  405775:	and    eax,0xd492e2f0
  40577a:	and    ah,BYTE PTR [eax+0x54827057]
  405780:	in     eax,dx
  405781:	dec    ebp
  405782:	loopne 0x40573b
  405784:	pop    ebp
  405785:	cmp    DWORD PTR [ebp+0x18],esi
  405788:	sti    
  405789:	sub    eax,ebx
  40578b:	add    eax,0x1cf1dcd8
  405790:	inc    esi
  405791:	pop    edi
  405792:	jne    0x405721
  405794:	xor    al,0xb2
  405796:	imul   edi,DWORD PTR [esi],0x9d2b6077
  40579c:	nop
  40579d:	jecxz  0x40577b
  40579f:	(bad)  
  4057a0:	mov    al,0x1e
  4057a2:	dec    eax
  4057a3:	pusha  
  4057a4:	cmp    ah,bl
  4057a6:	cdq    
  4057a7:	adc    al,0xb2
  4057a9:	and    eax,0x72e89a9d
  4057ae:	test   al,0xfe
  4057b0:	mov    dl,BYTE PTR [ecx-0x6e]
  4057b3:	inc    ebp
  4057b4:	mov    ecx,0xc91d5a23
  4057b9:	xor    eax,0xffffffdc
  4057bc:	jp     0x405797
  4057be:	xor    DWORD PTR [eax-0x5e24f877],0x3e5b608b
  4057c8:	adc    al,0xcc
  4057ca:	mov    eax,DWORD PTR [esi]
  4057cc:	pop    es
  4057cd:	xchg   bh,ch
  4057cf:	ret    0x94c6
  4057d2:	adc    DWORD PTR [ebp+esi*4+0x4c],ebp
  4057d6:	or     BYTE PTR [ecx+0x5c],0x6
  4057da:	and    al,0x79
  4057dc:	mov    ds:0xb634d874,al
  4057e1:	xchg   edi,eax
  4057e2:	and    dl,BYTE PTR [eax+0x4827856c]
  4057e8:	jns    0x40576e
  4057ea:	add    eax,0x17fac8c4
  4057ef:	push   edx
  4057f0:	add    al,0x14
  4057f2:	es pop eax
  4057f4:	mov    edx,0x14448c99
  4057f9:	imul   edi,DWORD PTR [edi+0x21],0x6
  4057fd:	rol    BYTE PTR [ebx+0x7206f40f],cl
  405803:	ins    DWORD PTR es:[edi],dx
  405804:	cmp    eax,0x81ae08b2
  405809:	ds cs push eax
  40580c:	mov    bh,ah
  40580e:	outs   dx,BYTE PTR ds:[esi]
  40580f:	jmp    0x2a2013fc
  405814:	lods   al,BYTE PTR ds:[esi]
  405815:	and    eax,0x8ca4126
  40581a:	or     DWORD PTR [ecx],esp
  40581c:	add    esp,eax
  40581e:	mov    ds:0xba18a12,eax
  405823:	mov    dh,0xff
  405825:	loop   0x40581c
  405827:	jo     0x405819
  405829:	jmp    0x8285:0x6b32aa58
  405830:	push   es
  405831:	scas   al,BYTE PTR es:[edi]
  405832:	dec    ecx
  405833:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405834:	mov    cl,0x4
  405836:	xor    eax,0xca39457a
  40583b:	fild   DWORD PTR [esi-0x49559919]
  405841:	loope  0x4057f6
  405843:	outs   dx,BYTE PTR ds:[esi]
  405844:	xor    eax,0x7634a94b
  405849:	pop    edx
  40584a:	pushf  
  40584b:	les    edi,FWORD PTR [ebx-0x290fa546]
  405851:	ins    DWORD PTR es:[edi],dx
  405852:	outs   dx,BYTE PTR ds:[esi]
  405853:	jecxz  0x405896
  405855:	xor    DWORD PTR [ecx+0x73deac9e],edi
  40585b:	pop    esp
  40585c:	lock inc eax
  40585e:	in     eax,0xe2
  405860:	(bad)  
  405861:	cli    
  405862:	cmp    eax,DWORD PTR [eax]
  405864:	popf   
  405865:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405866:	push   edi
  405867:	fnstcw WORD PTR [edi+0x284a2a50]
  40586d:	idiv   dh
  40586f:	and    ebp,esp
  405871:	jae    0x405842
  405873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405874:	jp     0x405806
  405876:	jo     0x405867
  405878:	add    eax,0x96680724
  40587d:	or     DWORD PTR [eax+0x1a124aab],ecx
  405883:	out    dx,eax
  405884:	add    BYTE PTR [ebp-0x2],ch
  405887:	shr    DWORD PTR [ebx-0x12],0xc4
  40588b:	fiadd  DWORD PTR [eax+0x56]
  40588e:	lea    esp,[eax-0x18b3ce9c]
  405894:	xchg   ebx,eax
  405895:	jecxz  0x4058b4
  405897:	pop    ss
  405898:	or     esi,esi
  40589a:	call   0x9741b6b1
  40589f:	(bad)  
  4058a1:	sub    esi,esi
  4058a3:	pushf  
  4058a4:	lahf   
  4058a5:	aas    
  4058a6:	and    eax,0xa1b47775
  4058ab:	in     eax,0xba
  4058ad:	test   BYTE PTR [ebx+0x328c415c],ah
  4058b3:	(bad)  
  4058b4:	shr    esi,cl
  4058b6:	sti    
  4058b7:	ret    
  4058b8:	out    0xab,al
  4058ba:	xchg   edi,eax
  4058bb:	adc    DWORD PTR [ecx+edx*1],esi
  4058be:	cmp    eax,0x70212346
  4058c3:	into   
  4058c4:	in     al,0x30
  4058c6:	dec    ebx
  4058c7:	pop    edi
  4058c8:	cmp    bl,ch
  4058ca:	rcr    DWORD PTR [ecx+0x21632497],1
  4058d0:	ja     0x405948
  4058d2:	mov    dh,0x0
  4058d4:	xchg   esp,eax
  4058d5:	and    eax,0x444b3184
  4058da:	(bad)  
  4058db:	lock aas 
  4058dd:	mov    bl,0x5a
  4058df:	and    ebp,DWORD PTR [ebp+eax*2+0x53]
  4058e3:	xchg   edi,eax
  4058e4:	push   ecx
  4058e5:	bound  ebx,QWORD PTR [esi+edi*2]
  4058e8:	(bad)  
  4058eb:	jbe    0x405881
  4058ed:	ss sbb al,0xfa
  4058f0:	js     0x40594a
  4058f2:	imul   edi,edx,0xffffffa1
  4058f5:	add    cl,dh
  4058f7:	(bad)  
  4058f8:	inc    edi
  4058f9:	iret   
  4058fa:	jl     0x405893
  4058fc:	sub    al,0x27
  4058fe:	shr    BYTE PTR [ebx+0x6],0x5f
  405902:	fcom   DWORD PTR [edx-0x22747d03]
  405908:	xor    al,0xa2
  40590a:	pop    ds
  40590b:	push   ecx
  40590c:	pop    edi
  40590d:	jecxz  0x4058bb
  40590f:	or     eax,0x4514ee2d
  405914:	cmp    eax,DWORD PTR [edx-0x2a]
  405917:	lds    eax,FWORD PTR [ecx]
  405919:	adc    al,0xdf
  40591b:	inc    edi
  40591c:	icebp  
  40591d:	dec    esp
  40591e:	inc    ebx
  40591f:	adc    eax,0xf24e115d
  405924:	mov    esp,0x1877975d
  405929:	xchg   edx,esp
  40592b:	xor    al,0x8
  40592d:	scas   eax,DWORD PTR es:[di]
  40592f:	sbb    al,0xcb
  405931:	outs   dx,BYTE PTR ds:[esi]
  405932:	lahf   
  405933:	pop    cx
  405935:	not    BYTE PTR [ebx]
  405937:	cmp    eax,0x67804474
  40593c:	rol    BYTE PTR [edx+ebx*2],cl
  40593f:	inc    edx
  405940:	and    cl,BYTE PTR [ecx+edi*4]
  405943:	loope  0x405920
  405945:	(bad)  
  405946:	ds retf 0x6dcd
  40594a:	(bad)  
  40594c:	inc    esp
  40594d:	jnp    0x4059a5
  40594f:	popf   
  405950:	jmp    0xe027:0x8f192d7f
  405957:	sub    DWORD PTR [edx-0x648f6852],ebp
  40595d:	xor    edx,DWORD PTR [edi+0x44]
  405960:	xor    BYTE PTR ds:0x150a9bd,bh
  405966:	lock push ss
  405968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405969:	dec    eax
  40596a:	mov    BYTE PTR [eax-0x28],dl
  40596d:	sti    
  40596e:	call   0xe7c0:0xe03d6485
  405975:	repz add esi,DWORD PTR es:[edi-0x1d03ef80]
  40597d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40597e:	ficomp WORD PTR [eax]
  405980:	push   edi
  405981:	scas   eax,DWORD PTR es:[edi]
  405982:	jl     0x405911
  405984:	ficomp DWORD PTR [ecx-0x3a9c42da]
  40598a:	dec    esp
  40598b:	jg     0x405a01
  40598d:	fidivr WORD PTR [ebx+0x2bc4cdaa]
  405993:	push   esi
  405994:	push   ebx
  405995:	das    
  405996:	cli    
  405997:	inc    ebp
  405998:	clc    
  405999:	add    BYTE PTR [ebx],dh
  40599b:	rol    BYTE PTR [ecx+ecx*8],1
  40599e:	neg    DWORD PTR [ebx]
  4059a0:	jnp    0x4059da
  4059a2:	mov    bh,BYTE PTR [ecx-0x2f44ee8c]
  4059a8:	div    BYTE PTR [ecx+ecx*1-0x58]
  4059ac:	in     al,dx
  4059ad:	add    ecx,DWORD PTR [edi+0x1df4a225]
  4059b3:	xchg   esp,eax
  4059b4:	or     al,0x69
  4059b6:	int    0x7e
  4059b8:	push   ebp
  4059b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059ba:	mov    edi,0x9336ef8e
  4059bf:	cmp    eax,0x6ab72b7c
  4059c4:	imul   eax,DWORD PTR [ecx+0x2694bf38],0xa2449ac4
  4059ce:	inc    edi
  4059cf:	sbb    ah,dh
  4059d1:	sar    DWORD PTR [esi],1
  4059d3:	out    0x2d,al
  4059d5:	inc    edx
  4059d6:	lahf   
  4059d7:	adc    al,0x8
  4059d9:	or     BYTE PTR [esi+eax*1-0x4d584057],bl
  4059e0:	mov    ch,ch
  4059e2:	mov    ds:0x7555e183,al
  4059e7:	mov    ecx,0x9549405f
  4059ec:	rol    DWORD PTR [eax-0x5e],0x61
  4059f0:	sbb    eax,ebp
  4059f2:	mov    edx,0x66011249
  4059f7:	pop    es
  4059f8:	xchg   edi,eax
  4059f9:	cmc    
  4059fa:	test   eax,0x2b7f98ec
  4059ff:	push   esp
  405a00:	enter  0xfba7,0x9
  405a04:	inc    esp
  405a05:	cli    
  405a06:	jns    0x4059db
  405a08:	data16 xor BYTE PTR [ebx-0x3d],0x97
  405a0d:	mov    cl,0xfb
  405a0f:	jmp    0x68d8c302
  405a14:	push   edi
  405a15:	and    dh,dl
  405a17:	cmp    DWORD PTR [eax-0xfe41bfb],edi
  405a1d:	stos   BYTE PTR es:[edi],al
  405a1e:	pop    ebx
  405a1f:	into   
  405a20:	(bad)  
  405a21:	mov    dl,bl
  405a23:	int    0xf7
  405a25:	cwde   
  405a26:	sbb    al,0x5
  405a28:	xchg   esp,eax
  405a29:	add    BYTE PTR [ebx-0x6f],bh
  405a2c:	into   
  405a2d:	enter  0x8667,0x22
  405a31:	inc    esp
  405a32:	and    eax,0x604a5615
  405a37:	mov    fs,WORD PTR [ebp-0x74]
  405a3a:	fiadd  DWORD PTR [ebx]
  405a3c:	outs   dx,BYTE PTR ds:[esi]
  405a3d:	inc    eax
  405a3e:	je     0x405a8d
  405a40:	sub    bh,bh
  405a42:	xchg   DWORD PTR [edx-0x600f0a32],edx
  405a48:	rcr    ebp,1
  405a4a:	jmp    0x4059d4
  405a4c:	fxtract 
  405a4e:	mov    WORD PTR [eax],cs
  405a50:	lahf   
  405a51:	call   0x4b3e:0x78b0fc18
  405a58:	test   eax,0xb6cb6eab
  405a5d:	jne    0x405a68
  405a5f:	sub    BYTE PTR [esi],0xf
  405a62:	pop    es
  405a63:	test   DWORD PTR [edx],eax
  405a65:	in     eax,0x3d
  405a67:	and    esi,DWORD PTR ds:0xfc50bf4c
  405a6d:	push   0x9de90648
  405a72:	repnz adc eax,0x9a2fa7e5
  405a78:	stos   DWORD PTR es:[edi],eax
  405a79:	mov    ah,0x69
  405a7b:	ret    0xa74d
  405a7e:	stc    
  405a7f:	es std 
  405a81:	inc    esi
  405a82:	int3   
  405a83:	add    al,0x5f
  405a85:	test   BYTE PTR [ecx+0x226bd6f1],bl
  405a8b:	cs ss or ah,al
  405a8f:	out    dx,eax
  405a90:	sbb    ah,BYTE PTR [ebx+0xed12b4c]
  405a96:	cmp    BYTE PTR [eax+0x36],dh
  405a99:	push   0x77
  405a9b:	popa   
  405a9c:	pop    esp
  405a9d:	retf   0xa928
  405aa0:	out    0xe4,al
  405aa2:	leave  
  405aa3:	repnz dec edi
  405aa5:	adc    ecx,esp
  405aa7:	xchg   ebp,eax
  405aa8:	push   eax
  405aa9:	push   0xffffffa9
  405aab:	pop    ds
  405aac:	std    
  405aad:	pop    ebp
  405aae:	jl     0x405b29
  405ab0:	sbb    ebx,ecx
  405ab2:	lods   eax,DWORD PTR ds:[esi]
  405ab3:	icebp  
  405ab4:	or     DWORD PTR [ecx+ecx*8+0x38954b58],ecx
  405abb:	cmp    eax,0xa0883be5
  405ac0:	cmp    ah,BYTE PTR [edx]
  405ac2:	sahf   
  405ac3:	mov    esp,0x2917a520
  405ac8:	sbb    bl,al
  405aca:	or     esi,eax
  405acc:	dec    edx
  405acd:	icebp  
  405ace:	leave  
  405acf:	vandnpd xmm0,xmm0,XMMWORD PTR [ebx+0x5c9f9046]
  405ad7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ad8:	js     0x405b44
  405ada:	mov    BYTE PTR [esi+edx*2-0x5a],cl
  405ade:	into   
  405adf:	aas    
  405ae0:	call   0x1696:0xd42b9fcf
  405ae7:	retf   
  405ae8:	into   
  405ae9:	mov    ds:0x33ef725f,al
  405aee:	retf   
  405aef:	aaa    
  405af0:	push   edi
  405af1:	adc    DWORD PTR [eax],esi
  405af3:	ret    
  405af4:	adc    dh,ah
  405af6:	stc    
  405af7:	push   cs
  405af8:	outs   dx,BYTE PTR ds:[esi]
  405af9:	data16 mov ah,0x84
  405afc:	adc    bh,BYTE PTR [esi-0x24]
  405aff:	cmp    al,0x9c
  405b01:	mov    fs,esi
  405b03:	pop    esp
  405b04:	or     eax,0x1e48440
  405b09:	les    esp,FWORD PTR [eax+0x4f]
  405b0c:	test   eax,0x1eeab180
  405b11:	pop    esp
  405b12:	jae    0x405b5c
  405b14:	scas   eax,DWORD PTR es:[edi]
  405b15:	sub    edi,edx
  405b17:	lds    edi,FWORD PTR [ebx]
  405b19:	sbb    edx,esi
  405b1b:	xor    dl,BYTE PTR [esi-0x19]
  405b1e:	outs   dx,BYTE PTR ds:[esi]
  405b1f:	fs xchg esp,ebx
  405b22:	lahf   
  405b23:	loopne 0x405ad7
  405b25:	inc    esp
  405b26:	and    DWORD PTR [eax-0x458dec2f],edx
  405b2c:	in     al,0xf1
  405b2e:	not    DWORD PTR [esi+0x66bbe473]
  405b34:	sub    BYTE PTR [eax+0x2e],0xde
  405b38:	aam    0xa3
  405b3a:	jmp    0x4cdec589
  405b3f:	sbb    esp,edi
  405b41:	test   BYTE PTR [esi+eiz*8-0x31],cl
  405b45:	test   ebp,edx
  405b47:	repnz xchg ebx,eax
  405b49:	pop    esi
  405b4a:	es daa 
  405b4c:	loop   0x405b3f
  405b4e:	fnstenvw ds:[esi+ecx*4]
  405b53:	sub    eax,esi
  405b55:	aad    0xe5
  405b57:	lods   al,BYTE PTR ds:[esi]
  405b58:	mov    esi,0x23e04a85
  405b5d:	push   ecx
  405b5e:	and    al,0x55
  405b60:	or     edx,eax
  405b62:	cdq    
  405b63:	fld    DWORD PTR [edi]
  405b65:	pop    eax
  405b66:	inc    edx
  405b67:	add    dl,BYTE PTR [ecx]
  405b69:	scas   eax,DWORD PTR es:[edi]
  405b6a:	stc    
  405b6b:	mov    ah,0x9f
  405b6d:	cdq    
  405b6e:	out    dx,al
  405b6f:	xchg   edi,eax
  405b70:	fadd   DWORD PTR [eax+0x60]
  405b73:	ja     0x405ba1
  405b75:	std    
  405b76:	popa   
  405b77:	jl     0x405b36
  405b79:	jno    0x405b18
  405b7b:	add    eax,DWORD PTR [edx+0x8]
  405b7e:	and    al,0x20
  405b80:	shl    BYTE PTR [eax],1
  405b82:	(bad)  
  405b83:	mov    al,ds:0x699d498e
  405b88:	or     edi,DWORD PTR [eax+0x3262e34f]
  405b8e:	(bad)  
  405b8f:	mov    eax,0xe5bcf33f
  405b94:	int    0x49
  405b96:	test   ebx,esi
  405b98:	jge    0x405b8e
  405b9a:	mov    bh,BYTE PTR [edx-0x762dbec1]
  405ba0:	call   0x70d8cf9b
  405ba5:	das    
  405ba6:	mov    bl,0x98
  405ba8:	neg    bh
  405baa:	adc    ebp,DWORD PTR ds:[edi-0x19]
  405bae:	or     dh,BYTE PTR [ecx-0x14]
  405bb1:	test   DWORD PTR [eax],esp
  405bb3:	hlt    
  405bb4:	ret    0x37a6
  405bb7:	cli    
  405bb8:	jno    0x405bfb
  405bba:	jne    0x405c0c
  405bbc:	mov    cl,cl
  405bbe:	or     eax,0xe854e48d
  405bc3:	inc    eax
  405bc4:	inc    esi
  405bc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bc6:	(bad)  
  405bc7:	mov    ecx,0xc89e2968
  405bcc:	nop    esp
  405bcf:	xchg   ecx,eax
  405bd0:	(bad)  
  405bd2:	sub    esi,DWORD PTR [ecx-0x397a0da4]
  405bd8:	adc    ecx,DWORD PTR [esi-0x9]
  405bdb:	mov    BYTE PTR [ecx+ebp*4],ch
  405bde:	pop    eax
  405bdf:	jg     0x405c3b
  405be1:	inc    esi
  405be2:	pop    eax
  405be3:	loope  0x405c62
  405be5:	stos   BYTE PTR es:[edi],al
  405be6:	inc    ecx
  405be7:	test   DWORD PTR [edx+ebp*8],0x166633ab
  405bee:	xchg   ebx,eax
  405bef:	loop   0x405c15
  405bf1:	loope  0x405c4b
  405bf3:	push   ax
  405bf5:	ja     0x405c12
  405bf7:	sahf   
  405bf8:	add    BYTE PTR [edi+0x9],al
  405bfb:	sub    eax,0xcb3ea41
  405c00:	and    eax,0x6048448d
  405c05:	push   0xffffffaf
  405c07:	mov    al,0xf6
  405c09:	mov    cl,0xc5
  405c0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c0c:	cdq    
  405c0d:	fst    QWORD PTR [ecx+0x38148b72]
  405c13:	sub    BYTE PTR [esi],dh
  405c15:	jns    0x405be5
  405c17:	jbe    0x405c53
  405c19:	mov    fs,WORD PTR [ecx+0x69ca6d40]
  405c1f:	adc    ecx,DWORD PTR [edx-0x4e]
  405c22:	mov    ds:0x36c7a760,eax
  405c27:	in     al,dx
  405c28:	cmp    edx,DWORD PTR [edi]
  405c2a:	dec    ecx
  405c2b:	imul   edx,ebp,0x214726f3
  405c31:	sub    BYTE PTR [esi+0x2928793d],0xfc
  405c38:	lds    esp,FWORD PTR [edx]
  405c3a:	xlat   BYTE PTR ds:[ebx]
  405c3b:	aas    
  405c3c:	mov    DWORD PTR [esi+0x31d2b94b],esi
  405c42:	cmp    BYTE PTR [esi+0x6b5cc0e0],bl
  405c48:	sbb    al,0x6b
  405c4a:	cli    
  405c4b:	(bad)  [edi-0x36f89a43]
  405c51:	es mov esp,0xbbdb6d09
  405c57:	jns    0x405c66
  405c59:	out    0x69,al
  405c5b:	out    0xaf,eax
  405c5d:	sbb    eax,0x48bfd604
  405c62:	or     DWORD PTR [eax+0x3e],ecx
  405c65:	mov    ebp,0xa2631a8b
  405c6a:	cmp    eax,0xcd3b2d57
  405c6f:	lock imul esp,DWORD PTR [edi+0x6695b2e6],0xd38bc1f4
  405c7a:	add    al,0xb0
  405c7c:	add    BYTE PTR [edx],dl
  405c7e:	xchg   ecx,eax
  405c7f:	xchg   esp,eax
  405c80:	push   edi
  405c81:	mov    ebx,0x18f32026
  405c86:	cmp    BYTE PTR [ebp+0x79],bh
  405c89:	pop    eax
  405c8a:	push   eax
  405c8b:	leave  
  405c8c:	cmp    edi,DWORD PTR [ecx+eax*2]
  405c8f:	inc    edx
  405c90:	cmp    ch,BYTE PTR [ecx+0x1e00ddf4]
  405c96:	cdq    
  405c97:	in     al,dx
  405c98:	(bad)  
  405c99:	in     al,dx
  405c9a:	inc    eax
  405c9b:	pop    es
  405c9c:	cmp    DWORD PTR [edi-0x14],ebx
  405c9f:	dec    eax
  405ca0:	jno    0x405ce9
  405ca2:	pop    ss
  405ca3:	jmp    0x405c93
  405ca5:	aam    0x1
  405ca7:	ds lock jmp 0x405c3a
  405cab:	jne    0x405cf0
  405cad:	add    DWORD PTR [esi],edx
  405caf:	clc    
  405cb0:	fdivr  DWORD PTR [ecx+0x6eeb0a20]
  405cb6:	pop    ebx
  405cb7:	pop    edi
  405cb8:	leave  
  405cb9:	fstp   TBYTE PTR [edx+0x32dc9f0b]
  405cbf:	xchg   ebp,eax
  405cc0:	leave  
  405cc1:	mov    edi,0xd43d313d
  405cc6:	cmp    eax,0x548f48e2
  405ccb:	lock add DWORD PTR ds:0xf2ac481e,esp
  405cd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cd3:	jg     0x405d0f
  405cd5:	xchg   edi,eax
  405cd6:	mov    bh,0x49
  405cd8:	mov    ebx,0xf279669e
  405cdd:	inc    ebp
  405cde:	jno    0x405d4a
  405ce0:	mov    edi,0xb357f968
  405ce5:	and    al,0x44
  405ce7:	inc    ebx
  405ce8:	ret    0x7fde
  405ceb:	mov    ebp,0x75961b7b
  405cf0:	xchg   edi,eax
  405cf1:	outs   dx,BYTE PTR ds:[esi]
  405cf2:	inc    edi
  405cf3:	mov    al,BYTE PTR [edi-0x10]
  405cf6:	sub    eax,0x6cdd82ff
  405cfb:	mov    al,0xfc
  405cfd:	daa    
  405cfe:	lea    esi,[eax+0x4127371e]
  405d04:	adc    eax,0xaf095f0b
  405d09:	adc    eax,0xd5589fc5
  405d0e:	cli    
  405d0f:	imul   edx,DWORD PTR [ebx],0xe84eed2d
  405d15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d16:	jle    0x405d17
  405d18:	out    0xc7,al
  405d1a:	sbb    eax,edx
  405d1c:	out    0x16,eax
  405d1e:	adc    ecx,edi
  405d20:	and    DWORD PTR [edi-0x6a],0xffffffdc
  405d24:	inc    edx
  405d25:	ds rcl ebx,cl
  405d28:	push   edx
  405d29:	push   es
  405d2a:	sub    esp,esp
  405d2c:	mov    ecx,0x9c85786b
  405d31:	outs   dx,BYTE PTR ds:[esi]
  405d32:	test   DWORD PTR [ecx+0x13968d8],0xaa086b88
  405d3c:	or     bh,BYTE PTR [edi+edx*2]
  405d3f:	or     bl,0x6a
  405d42:	adc    edi,ecx
  405d44:	mov    al,ds:0xe4d2328d
  405d49:	mov    ds:0x184edcba,eax
  405d4e:	inc    ecx
  405d4f:	pop    esp
  405d50:	dec    edi
  405d51:	out    dx,eax
  405d52:	fwait
  405d53:	pop    ebx
  405d54:	lahf   
  405d55:	in     eax,0x88
  405d57:	jne    0x405d53
  405d59:	mov    ecx,0xbc6fa632
  405d5e:	imul   eax,DWORD PTR [esi+0x5c],0x40600d2b
  405d65:	xor    BYTE PTR [ecx+0xd],bh
  405d68:	mov    ecx,0xcf6c833f
  405d6d:	jge    0x405d73
  405d6f:	sub    eax,DWORD PTR [eax+0x1]
  405d72:	shl    WORD PTR [ecx+edx*4-0x5c],cl
  405d77:	stos   DWORD PTR es:[edi],eax
  405d78:	sbb    eax,0x696350c7
  405d7d:	pop    ss
  405d7e:	sub    al,0xe6
  405d80:	sub    ebx,ecx
  405d82:	std    
  405d83:	pop    edi
  405d84:	xchg   esp,eax
  405d85:	rcr    DWORD PTR [ebx],cl
  405d87:	lock adc esi,ebp
  405d8a:	test   ebp,0x22e4d84f
  405d90:	add    eax,0x26de3942
  405d95:	push   ebp
  405d96:	cmp    al,BYTE PTR [ebp+0x12d3315b]
  405d9c:	(bad)  
  405d9d:	out    dx,eax
  405d9e:	jle    0x405d6c
  405da0:	mov    dh,BYTE PTR [ebp+0x6f40f51]
  405da6:	and    BYTE PTR [ebx-0x1b],bh
  405da9:	or     eax,0xc563f1ed
  405dae:	mov    ebx,DWORD PTR [ecx]
  405db0:	dec    esp
  405db1:	pop    es
  405db2:	dec    esi
  405db3:	mov    bl,0xcc
  405db5:	push   0x42
  405db7:	sbb    BYTE PTR [edx+edx*8+0x3bcc287e],ah
  405dbe:	jge    0x405e1f
  405dc0:	repnz ror BYTE PTR [eax],cl
  405dc3:	jae    0x405d6a
  405dc5:	mov    WORD PTR [eax],fs
  405dc7:	out    0x43,al
  405dc9:	adc    dh,BYTE PTR [ecx+0x2e]
  405dcc:	aam    0xf
  405dce:	mov    esp,DWORD PTR [esi+0x29adf297]
  405dd4:	mov    ch,0x71
  405dd6:	out    dx,al
  405dd7:	in     al,0x1a
  405dd9:	je     0x405d95
  405ddb:	mov    bh,0x38
  405ddd:	ret    0x7c13
  405de0:	icebp  
  405de1:	loopne 0x405d95
  405de3:	xor    al,0xcc
  405de5:	jp     0x405df5
  405de7:	(bad)  
  405de8:	mov    ah,0x6c
  405dea:	mov    ch,bh
  405dec:	mov    edi,0xedaa2f3e
  405df1:	pushf  
  405df2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405df3:	mov    al,ds:0xc491a929
  405df8:	fist   WORD PTR [esp+eiz*4]
  405dfb:	out    dx,eax
  405dfc:	or     BYTE PTR [esi+ebx*2-0x15f63b24],cl
  405e03:	cmp    ebp,DWORD PTR [ecx+0x7e]
  405e06:	push   ecx
  405e07:	ins    BYTE PTR es:[edi],dx
  405e08:	cli    
  405e09:	jg     0x405e0d
  405e0b:	lods   eax,DWORD PTR ds:[esi]
  405e0c:	jecxz  0x405de0
  405e0e:	xlat   BYTE PTR ds:[ebx]
  405e0f:	repnz outs dx,DWORD PTR ds:[esi]
  405e11:	xchg   esp,eax
  405e12:	popf   
  405e13:	es jns 0x405e8a
  405e16:	jle    0xf9cd2980
  405e1c:	clc    
  405e1d:	test   BYTE PTR [edx+edi*8+0x3f],0xd5
  405e22:	hlt    
  405e23:	jne    0x405e70
  405e25:	repnz das 
  405e27:	and    eax,0xe10107da
  405e2c:	shl    BYTE PTR [ebx-0x1bd6a619],cl
  405e32:	fdiv   QWORD PTR [ebp+ecx*1-0x70eba57a]
  405e39:	sahf   
  405e3a:	popa   
  405e3b:	jmp    0x405e81
  405e3d:	push   es
  405e3e:	das    
  405e3f:	aas    
  405e40:	jl     0x405dc5
  405e42:	fisttp WORD PTR [ebp+0x10]
  405e45:	jg     0x405e43
  405e47:	lock in al,0xc7
  405e4a:	rcl    DWORD PTR [esp+eiz*4-0x78],1
  405e4e:	lods   al,BYTE PTR ds:[esi]
  405e4f:	jecxz  0x405e19
  405e51:	fdiv   QWORD PTR [edx+edx*2]
  405e54:	loop   0x405e02
  405e56:	and    edx,DWORD PTR [edi]
  405e58:	push   ds
  405e59:	mov    al,0x1a
  405e5b:	stc    
  405e5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e5d:	iret   
  405e5e:	xor    BYTE PTR [edx+0x165b9147],ch
  405e64:	popa   
  405e65:	jecxz  0x405eda
  405e67:	idiv   BYTE PTR [ecx+0x43017d3f]
  405e6d:	imul   esp,DWORD PTR [ecx+eax*2+0x74],0x8d00516a
  405e75:	mov    WORD PTR [esi-0x29],?
  405e78:	test   DWORD PTR [esi-0x5c],ebp
  405e7b:	loopne 0x405ead
  405e7d:	xchg   esi,eax
  405e7e:	sub    dl,0x84
  405e81:	(bad)  
  405e82:	retf   
  405e83:	xchg   edx,eax
  405e84:	or     al,0x74
  405e86:	push   0x2e
  405e88:	mov    dl,0x5e
  405e8a:	lods   al,BYTE PTR ds:[esi]
  405e8b:	popf   
  405e8c:	mov    dl,0x1b
  405e8e:	repz in eax,dx
  405e90:	xor    al,0x35
  405e92:	jae    0x405e90
  405e94:	sub    bh,ch
  405e96:	stos   DWORD PTR es:[edi],eax
  405e97:	ffreep st(3)
  405e99:	out    0xfe,eax
  405e9b:	or     BYTE PTR [ecx],dl
  405e9d:	pop    esi
  405e9e:	cdq    
  405e9f:	scas   al,BYTE PTR es:[edi]
  405ea0:	rcl    DWORD PTR [ebp+ebp*4+0x6d],1
  405ea4:	jg     0x405e26
  405ea6:	cmp    bh,BYTE PTR [ebx]
  405ea8:	xchg   BYTE PTR [esi],al
  405eaa:	gs pop edi
  405eac:	sub    DWORD PTR [esi-0x24],edi
  405eaf:	mov    al,ds:0x1bba82e1
  405eb4:	fidiv  WORD PTR [edi]
  405eb6:	jmp    0x405ea3
  405eb8:	stc    
  405eb9:	loope  0x405e5e
  405ebb:	inc    edx
  405ebc:	jg     0x405f1e
  405ebe:	dec    eax
  405ebf:	add    DWORD PTR [edx+eax*1+0x10f7f581],esp
  405ec6:	call   0xc8ccb9e9
  405ecb:	or     dl,dh
  405ecd:	dec    edx
  405ece:	aam    0x3b
  405ed0:	jb     0x405e59
  405ed2:	adc    edx,ebx
  405ed4:	sub    ebx,DWORD PTR [ecx-0x61]
  405ed7:	rcr    BYTE PTR [eax+0x6d4b9af9],cl
  405edd:	ja     0x405f43
  405edf:	js     0x405f31
  405ee1:	fst    DWORD PTR [ebx]
  405ee3:	cmp    al,0xaa
  405ee5:	stos   BYTE PTR es:[edi],al
  405ee6:	imul   eax,DWORD PTR ds:0x682cb15b,0xb7bc0326
  405ef0:	jnp    0x405f40
  405ef2:	nop
  405ef3:	dec    edx
  405ef4:	gs repz ret 
  405ef7:	out    0x4c,eax
  405ef9:	ds inc edi
  405efb:	mov    ebp,0xf7ab10a9
  405f00:	outs   dx,BYTE PTR ds:[esi]
  405f01:	push   0x87e238ef
  405f06:	and    BYTE PTR [edi-0x3b],dl
  405f09:	xchg   edi,eax
  405f0a:	mul    DWORD PTR [ebp+0x1a1b2ef1]
  405f10:	fwait
  405f11:	push   edi
  405f12:	jle    0x405f73
  405f14:	bound  eax,QWORD PTR [esi+0x59dbbfe9]
  405f1a:	(bad)  
  405f1b:	scas   eax,DWORD PTR es:[edi]
  405f1c:	cmp    eax,0x948d998b
  405f21:	or     BYTE PTR [edx+esi*4-0x2b1059aa],cl
  405f28:	dec    ebx
  405f29:	scas   al,BYTE PTR es:[edi]
  405f2a:	mov    ah,0x19
  405f2c:	imul   esi,eax,0x16127cbe
  405f32:	cmp    BYTE PTR [ecx+0x629a0315],bh
  405f38:	inc    ecx
  405f39:	mov    BYTE PTR [ebx-0x75],0xca
  405f3d:	jecxz  0x405f14
  405f3f:	mov    bl,0xcf
  405f41:	push   eax
  405f42:	dec    edx
  405f43:	rcr    DWORD PTR [esi+eax*2-0x44],1
  405f47:	mov    bh,0x62
  405f49:	test   BYTE PTR [eax-0x7c],al
  405f4c:	test   al,0x23
  405f4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f4f:	fisttp WORD PTR [esi+ebx*4]
  405f52:	and    al,0xf3
  405f54:	push   esi
  405f55:	pushf  
  405f56:	addr16 sahf 
  405f58:	inc    ecx
  405f59:	sbb    DWORD PTR [ebp+0x70e0efe],ecx
  405f5f:	and    eax,0xd439ccf4
  405f64:	rcl    DWORD PTR [esi-0x25],cl
  405f67:	add    eax,0xd328336b
  405f6c:	call   FWORD PTR [edx+0x20ad4b2c]
  405f72:	jl     0x405f88
  405f74:	imul   esi,DWORD PTR [ebp-0x6b52e7b7],0xacaa9406
  405f7e:	shr    DWORD PTR cs:[ecx-0x7f],1
  405f82:	mov    al,ds:0xaa93ebf
  405f87:	push   ebp
  405f88:	inc    ebp
  405f89:	in     al,0x7a
  405f8b:	dec    esp
  405f8c:	push   esi
  405f8d:	ret    
  405f8e:	xchg   esp,eax
  405f8f:	xchg   edx,eax
  405f90:	mov    al,ds:0x8ff70253
  405f95:	mov    ebx,0x9fc26e25
  405f9a:	mov    ?,ebx
  405f9c:	push   ecx
  405f9d:	mov    BYTE PTR [esi*1+0x4ce4121d],ch
  405fa4:	dec    ebx
  405fa5:	cmp    DWORD PTR [ecx+0x6a],eax
  405fa8:	sbb    dl,BYTE PTR [ecx-0x20]
  405fab:	ss inc ecx
  405fad:	ror    DWORD PTR [edi-0x37],1
  405fb0:	mov    eax,ds:0xe250d7f0
  405fb5:	sub    cl,0x5e
  405fb8:	push   ss
  405fb9:	mov    ebx,0x6f69f552
  405fbe:	ficomp DWORD PTR [edi+0x46b78081]
  405fc4:	sysret 
  405fc6:	aad    0xc0
  405fc8:	inc    esi
  405fc9:	mov    ecx,0xa0a9196a
  405fce:	aam    0xc6
  405fd0:	fld    DWORD PTR [ecx-0x46ce4e97]
  405fd6:	cdq    
  405fd7:	xor    al,dh
  405fd9:	cdq    
  405fda:	js     0x405fea
  405fdc:	call   0x39e49cc6
  405fe1:	mov    dl,0x4d
  405fe3:	pop    edx
  405fe4:	pop    edi
  405fe5:	xor    ch,bl
  405fe7:	mov    ds:0xa42ae466,al
  405fec:	and    al,0x23
  405fee:	sub    BYTE PTR ds:0xa8b7026a,bl
  405ff4:	cmp    DWORD PTR [edx+0x5a],esp
  405ff7:	or     edx,ecx
  405ff9:	ins    DWORD PTR es:[edi],dx
  405ffa:	xchg   esi,eax
  405ffb:	push   ebp
  405ffc:	xor    DWORD PTR [esi-0x19],eax
  405fff:	xchg   edx,eax
  406000:	mov    BYTE PTR [esi+0x78a2347a],bh
  406006:	pop    ss
  406007:	lock jecxz 0x405fd2
  40600a:	(bad)  
  40600c:	mov    ebp,0x8fd4fef2
  406011:	cmc    
  406012:	xchg   edi,eax
  406013:	in     eax,0xe1
  406015:	call   0x6df2:0xf3d4cc01
  40601c:	std    
  40601d:	ja     0x40607a
  40601f:	xor    al,0x24
  406021:	pushf  
  406022:	pop    edi
  406023:	mov    cs,WORD PTR [eax+0x16]
  406026:	mov    ch,0x71
  406028:	cmc    
  406029:	dec    ebp
  40602a:	xchg   DWORD PTR [esi+0x3e85091b],edx
  406030:	ror    ch,0xf
  406033:	es stos BYTE PTR es:[edi],al
  406035:	sbb    ch,BYTE PTR [edx+0x4fc94a61]
  40603b:	mov    edx,0xe9756adb
  406040:	call   0x19c6:0xc33448ea
  406047:	enter  0xb9f4,0x3
  40604b:	pop    edx
  40604c:	leave  
  40604d:	pop    ecx
  40604e:	idiv   esp
  406050:	mov    edx,0x22c5df9d
  406055:	mov    ah,0xe2
  406057:	sub    ah,BYTE PTR [esi-0xc]
  40605a:	ret    0x7dcc
  40605d:	mov    cs,WORD PTR [esi]
  40605f:	and    dl,BYTE PTR [edi+0x50eef498]
  406065:	sbb    DWORD PTR [ebp-0x1cb2acce],0x6646c6bd
  40606f:	dec    edi
  406070:	pop    esi
  406071:	ja     0x406004
  406073:	(bad)
  406077:	(bad)
  40607b:	inc    esp
  40607c:	mov    dl,0xa2
  40607e:	ja     0x406057
  406080:	jo     0x40608d
  406082:	(bad)  
  406083:	pop    ds
  406084:	sbb    DWORD PTR [esp+eax*4+0x2de6f42b],ecx
  40608b:	pushf  
  40608c:	inc    esi
  40608d:	sub    eax,0x107c8e
  406092:	iret   
  406093:	ss push edi
  406095:	in     eax,dx
  406096:	sub    esp,edi
  406098:	in     eax,dx
  406099:	push   ebx
  40609a:	dec    esi
  40609b:	pop    edx
  40609c:	xor    DWORD PTR [edx+0xe],edx
  40609f:	xchg   DWORD PTR [esi],edx
  4060a1:	jbe    0x4060b9
  4060a3:	add    eax,0xb11f8512
  4060a8:	mov    cs,WORD PTR [ebx*2-0x350b964d]
  4060af:	fwait
  4060b0:	outs   dx,DWORD PTR ds:[esi]
  4060b1:	add    eax,ebp
  4060b3:	stc    
  4060b4:	(bad)  
  4060b5:	mov    ebp,0x9269d918
  4060ba:	lahf   
  4060bb:	pop    edx
  4060bc:	fmul   DWORD PTR [ecx+eax*8+0x69e9b0cd]
  4060c3:	inc    ebp
  4060c4:	mov    ds:0x17cc5c6d,al
  4060c9:	xor    eax,0xe0804fc3
  4060ce:	outs   dx,BYTE PTR ds:[esi]
  4060cf:	jp     0x406070
  4060d1:	jbe    0x40611d
  4060d3:	lahf   
  4060d4:	gs jmp 0xbb497fc
  4060da:	push   ss
  4060db:	(bad)  
  4060dd:	into   
  4060de:	cs repz imul edi,esi,0x8
  4060e3:	mov    ds:0xa8e88f3d,al
  4060e8:	pop    ss
  4060e9:	cmp    al,0x4d
  4060eb:	cwde   
  4060ec:	push   ecx
  4060ed:	outs   dx,BYTE PTR ds:[esi]
  4060ee:	gs dec ecx
  4060f0:	or     DWORD PTR [ebx-0x26d0f027],ebx
  4060f6:	iret   
  4060f7:	mov    ebp,0x718eaad1
  4060fc:	(bad)  
  4060fe:	inc    edx
  4060ff:	and    al,0x54
  406101:	jmp    FWORD PTR [ebx-0x6a]
  406104:	aaa    
  406105:	mov    esp,0x8d58166d
  40610a:	je     0x406188
  40610c:	fistp  QWORD PTR [esi]
  40610e:	lods   al,BYTE PTR ds:[esi]
  40610f:	pushf  
  406110:	fisub  DWORD PTR [esp+edi*1+0x62]
  406114:	test   eax,0xe66b5843
  406119:	pop    di
  40611b:	cmp    DWORD PTR [edi+0x791841f8],edx
  406121:	cmp    BYTE PTR [esi],0xd3
  406124:	push   esp
  406125:	lea    edx,[edi-0x68]
  406128:	pop    esi
  406129:	mov    esi,DWORD PTR [edx]
  40612b:	stc    
  40612c:	push   es
  40612d:	test   eax,0xd32a9260
  406132:	fsub   QWORD PTR [edx]
  406134:	mov    gs,WORD PTR [edi]
  406136:	xchg   esp,eax
  406137:	out    0xfd,eax
  406139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40613a:	mov    dh,0x58
  40613c:	imul   ebp,DWORD PTR [eax],0xffffffab
  40613f:	mov    esp,0xe000c7c9
  406144:	xchg   esi,eax
  406145:	mov    esi,0x9b5e6037
  40614a:	nop
  40614b:	sbb    al,BYTE PTR [edi+0x7f]
  40614e:	inc    esp
  40614f:	aam    0x9e
  406151:	pop    esp
  406152:	je     0x40612a
  406154:	(bad)  
  406155:	lods   al,BYTE PTR ds:[esi]
  406156:	retf   0x9946
  406159:	(bad)  
  40615a:	sub    dh,BYTE PTR [ebx]
  40615c:	inc    edx
  40615d:	xor    eax,0x669b9948
  406162:	or     edx,esi
  406164:	sub    bl,al
  406166:	mov    ecx,0xdc5ebf23
  40616b:	cli    
  40616c:	(bad)  
  40616d:	aas    
  40616e:	mov    ecx,0x234226b1
  406173:	repz scas eax,DWORD PTR es:[edi]
  406175:	inc    BYTE PTR [esi+0x59]
  406178:	mov    ch,0xda
  40617a:	iret   
  40617b:	pop    esp
  40617c:	retf   
  40617d:	sbb    BYTE PTR [ebx],dl
  40617f:	xor    ebp,eax
  406181:	xchg   edi,eax
  406182:	(bad)  
  406183:	jge    0x4061a9
  406185:	pop    edx
  406186:	mov    edi,DWORD PTR [eax-0x54af272e]
  40618c:	and    DWORD PTR [ebx*8+0x50493314],eax
  406193:	jl     0x4061ab
  406195:	inc    ecx
  406196:	pop    edi
  406197:	div    DWORD PTR [esp+ecx*1-0x3a]
  40619b:	jo     0x406182
  40619d:	inc    ecx
  40619e:	push   es
  40619f:	dec    ebx
  4061a0:	jmp    0xb8bb956f
  4061a5:	hlt    
  4061a6:	stos   BYTE PTR es:[edi],al
  4061a7:	cdq    
  4061a8:	jae    0x406213
  4061aa:	ins    DWORD PTR es:[edi],dx
  4061ab:	dec    edx
  4061ac:	inc    edx
  4061ae:	xchg   esi,eax
  4061af:	pop    ebx
  4061b0:	push   es
  4061b1:	daa    
  4061b2:	and    DWORD PTR [eax],ebx
  4061b4:	stos   BYTE PTR es:[edi],al
  4061b5:	ret    
  4061b6:	add    eax,0xbbdf50fe
  4061bb:	cdq    
  4061bc:	lea    eax,[eax]
  4061be:	push   0xffffff9b
  4061c0:	lock lods al,BYTE PTR ds:[esi]
  4061c2:	cmp    ch,BYTE PTR [edx-0x558d745c]
  4061c8:	pusha  
  4061c9:	int    0x74
  4061cb:	lods   al,BYTE PTR ds:[esi]
  4061cc:	xor    dh,BYTE PTR [esi+0x36]
  4061cf:	call   FWORD PTR [edx]
  4061d1:	add    eax,0x7027b9c6
  4061d6:	jmp    0xfb6614e3
  4061db:	jno    0x4061cd
  4061dd:	add    DWORD PTR [eax],0x141716dc
  4061e3:	rcr    BYTE PTR [eax],1
  4061e5:	mov    esi,ds
  4061e7:	std    
  4061e8:	addr16 push ebp
  4061ea:	shr    dh,1
  4061ec:	adc    edi,ebx
  4061ee:	rcl    DWORD PTR [eax],1
  4061f0:	shl    DWORD PTR [ebx+0x5c270633],1
  4061f6:	dec    ecx
  4061f7:	mov    DWORD PTR [esi],ebp
  4061f9:	cmp    BYTE PTR [edi],dh
  4061fb:	in     al,0x98
  4061fd:	inc    esp
  4061fe:	cmp    DWORD PTR [ecx],ebp
  406200:	(bad)  
  406201:	out    dx,al
  406202:	jl     0x406228
  406204:	aaa    
  406205:	fsub   QWORD PTR [edi]
  406207:	shl    DWORD PTR [edi],1
  406209:	inc    ebp
  40620a:	mov    eax,0x1673ae40
  40620f:	gs daa 
  406211:	ret    
  406212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406213:	add    edx,eax
  406215:	ins    DWORD PTR es:[edi],dx
  406216:	fwait
  406217:	je     0x4061fb
  406219:	ret    0xe738
  40621c:	or     bl,BYTE PTR [ecx-0x61]
  40621f:	aaa    
  406220:	jb     0x406293
  406222:	stos   BYTE PTR es:[edi],al
  406223:	mov    ebx,0x31936e78
  406228:	(bad)  
  406229:	mov    dl,BYTE PTR [ecx]
  40622b:	rcl    eax,cl
  40622d:	call   0x9cb222e0
  406232:	retf   0xf373
  406235:	retf   0x25c7
  406238:	xor    DWORD PTR [edx],0x5
  40623b:	pop    ds
  40623c:	jle    0x4061f2
  40623e:	push   edi
  40623f:	inc    ecx
  406240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406241:	sbb    esi,DWORD PTR [ebx-0x50]
  406244:	scas   eax,DWORD PTR es:[edi]
  406245:	jns    0x4061f8
  406247:	and    BYTE PTR es:[esi],0x26
  40624b:	fild   QWORD PTR [edx]
  40624d:	pop    edi
  40624e:	sbb    eax,0x3381f3e0
  406253:	cmp    BYTE PTR [edx],0xb8
  406256:	cld    
  406257:	add    al,0x4b
  406259:	jp     0x406204
  40625b:	xchg   BYTE PTR [ebp-0x4d],ah
  40625e:	xchg   esp,eax
  40625f:	dec    edi
  406260:	pmaxsw mm4,QWORD PTR [eax+0x29432687]
  406267:	mov    eax,ds:0xe1acab00
  40626c:	call   0x72f2:0xe14bce0b
  406273:	jnp    0x4062e0
  406275:	mov    ds:0x86a55daa,eax
  40627a:	cld    
  40627b:	xchg   ebx,eax
  40627c:	mov    cl,0xb2
  40627e:	add    DWORD PTR [ebp+0x2ae3ae3d],eax
  406284:	jb     0x406261
  406286:	add    bh,BYTE PTR [edi]
  406288:	and    ebx,DWORD PTR [eax+0x97000e2]
  40628e:	cmp    esp,DWORD PTR [edx+0x18]
  406291:	popf   
  406292:	and    dh,BYTE PTR [edx]
  406294:	cs or  al,0xec
  406297:	and    bh,bl
  406299:	sub    eax,0x7dd06465
  40629e:	mov    ah,0x1f
  4062a0:	loopne 0x406314
  4062a2:	pop    edi
  4062a3:	scas   eax,DWORD PTR es:[edi]
  4062a4:	test   DWORD PTR [ebp+0x59],ebp
  4062a7:	jl     0x406229
  4062a9:	xlat   BYTE PTR ds:[ebx]
  4062aa:	out    dx,al
  4062ab:	inc    edi
  4062ac:	call   0x77cae70c
  4062b1:	rcl    DWORD PTR [edx-0x37],cl
  4062b4:	idiv   BYTE PTR [eax]
  4062b6:	mov    esp,0xf589cd21
  4062bb:	push   0x72
  4062bd:	out    0x64,al
  4062bf:	clc    
  4062c0:	cs mov gs,ebx
  4062c3:	pop    ebx
  4062c4:	shr    eax,cl
  4062c6:	aad    0x90
  4062c8:	inc    ecx
  4062c9:	in     eax,dx
  4062ca:	jg     0x4062ff
  4062cc:	pop    edx
  4062cd:	xchg   esi,eax
  4062ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062cf:	xor    dl,BYTE PTR [esi+0x43]
  4062d2:	mov    WORD PTR [eax-0x35],ds
  4062d5:	sbb    cl,bl
  4062d7:	ficom  DWORD PTR [edx+0x4d83f7d8]
  4062dd:	cmp    ebp,ecx
  4062df:	enter  0x4717,0x19
  4062e3:	mov    dl,dl
  4062e5:	push   ds
  4062e6:	retf   0x60c5
  4062e9:	jns    0x4062ed
  4062eb:	hlt    
  4062ec:	cmp    esi,DWORD PTR [ebp+0x709a1871]
  4062f2:	leave  
  4062f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062f4:	mov    ebx,0xd5d7e7d1
  4062f9:	nop
  4062fa:	(bad)  
  4062fb:	sub    edx,DWORD PTR [ebp-0x78]
  4062fe:	adc    edi,DWORD PTR [ebp-0x3fa1ffbe]
  406304:	mov    bl,0x78
  406306:	fidivr WORD PTR fs:[esp+esi*2]
  40630a:	lock add eax,0x9de6cd41
  406310:	xchg   esi,eax
  406311:	add    DWORD PTR [edi+0x4e],ecx
  406314:	std    
  406315:	jnp    0x40638c
  406317:	shr    DWORD PTR [ebp+0x3],0xee
  40631b:	sbb    al,0xf2
  40631d:	mov    dh,0x83
  40631f:	push   ecx
  406320:	cmp    dl,0x71
  406323:	mov    esp,DWORD PTR [ecx-0x55be17c6]
  406329:	rcr    BYTE PTR [ebx],0xf
  40632c:	adc    eax,0xbc690432
  406331:	and    eax,0xf0dd948f
  406336:	jno    0x406364
  406338:	and    BYTE PTR [ebx+0x7ffc3e2e],dl
  40633e:	mov    edx,0x9beaface
  406343:	pop    ss
  406344:	adc    DWORD PTR [esi],0xffffff8f
  406347:	les    edi,FWORD PTR [esi-0x12]
  40634a:	sub    al,0x22
  40634c:	ins    BYTE PTR es:[edi],dx
  40634d:	jge    0x4062d6
  40634f:	int3   
  406350:	xor    BYTE PTR [edi+0x14],bh
  406353:	fs leave 
  406355:	mov    edi,0x9683001e
  40635a:	push   ss
  40635b:	xchg   edi,eax
  40635c:	fwait
  40635d:	mov    ds:0x43d0567b,eax
  406362:	push   ebx
  406363:	cs aas 
  406365:	jle    0x4062ea
  406367:	add    al,0xf2
  406369:	std    
  40636a:	scas   eax,DWORD PTR es:[edi]
  40636b:	cs (bad) 
  40636d:	arpl   WORD PTR [ebx+0x65],sp
  406370:	int3   
  406371:	dec    edi
  406372:	mov    ch,0x36
  406374:	data16 jo 0x406344
  406377:	ret    0x3e6e
  40637a:	aaa    
  40637b:	cmp    DWORD PTR [ebp+0x1d82d61],ebp
  406381:	add    cl,BYTE PTR [edx-0x15a60644]
  406387:	rcl    BYTE PTR [edx+eiz*1],0xff
  40638b:	push   es
  40638c:	test   al,ah
  40638e:	or     DWORD PTR [eax-0x3f1ae043],edx
  406394:	mov    edi,0x7b574489
  406399:	out    dx,eax
  40639a:	inc    esp
  40639b:	dec    edx
  40639c:	pop    esi
  40639d:	gs popa 
  40639f:	adc    DWORD PTR [edx+edx*4+0x98a846d],esp
  4063a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063a7:	adc    eax,0x3edce884
  4063ac:	adc    ecx,eax
  4063ae:	sbb    edx,DWORD PTR [eax+eax*1]
  4063b1:	mov    ecx,0x73471d27
  4063b6:	out    dx,al
  4063b7:	and    esi,ecx
  4063b9:	adc    esp,eax
  4063bb:	std    
  4063bc:	dec    edi
  4063bd:	jg     0x40634f
  4063bf:	inc    edi
  4063c0:	adc    edi,DWORD PTR [eax]
  4063c2:	dec    sp
  4063c4:	sbb    DWORD PTR [ecx+0x6d943b65],0xffffff91
  4063cb:	int3   
  4063cc:	inc    ebx
  4063cd:	ja     0x4063b2
  4063cf:	mov    al,ds:0x2e155142
  4063d4:	iret   
  4063d5:	pop    ebx
  4063d6:	adc    bl,0xd3
  4063d9:	in     eax,0x19
  4063db:	adc    DWORD PTR gs:[ecx],ebx
  4063de:	and    DWORD PTR [edx],esi
  4063e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063e1:	mov    dl,0xd6
  4063e3:	repz sub ch,ch
  4063e6:	adc    edi,eax
  4063e8:	jno    0x406467
  4063ea:	xchg   esi,eax
  4063eb:	pop    ecx
  4063ec:	sub    ebp,DWORD PTR [esi]
  4063ee:	retf   
  4063ef:	sbb    DWORD PTR [edi-0x69],ecx
  4063f2:	test   eax,0x84ed5869
  4063f7:	or     DWORD PTR [esp+ecx*2],esi
  4063fa:	icebp  
  4063fb:	sbb    eax,0x9078b6b2
  406400:	push   es
  406401:	inc    esi
  406402:	nop
  406403:	mul    edx
  406405:	ins    BYTE PTR es:[edi],dx
  406406:	out    0xc3,eax
  406408:	sbb    eax,0xbe350ae3
  40640d:	mov    ebp,0x720fd822
  406412:	pop    esp
  406413:	adc    ecx,DWORD PTR [ebx+0x3c]
  406416:	inc    ebp
  406417:	sub    dh,BYTE PTR [ebp-0x64]
  40641a:	mov    edi,0xef4f7cc9
  40641f:	push   0x79
  406421:	jnp    0x4063d8
  406423:	cmp    BYTE PTR [edi-0x25],ch
  406426:	push   0xf07561ba
  40642b:	icebp  
  40642c:	popf   
  40642d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40642e:	fidivr WORD PTR ds:0x2daf3b57
  406434:	rcl    edx,1
  406436:	sar    BYTE PTR [ebx-0x58a997a0],1
  40643c:	pop    DWORD PTR [edx+edx*2+0x64675647]
  406443:	stos   DWORD PTR es:[edi],eax
  406444:	cmc    
  406445:	mov    ds:0x5b45d396,eax
  40644a:	mov    dh,ch
  40644c:	add    ebp,DWORD PTR [ebx+ebx*4-0x33868e48]
  406453:	in     al,dx
  406454:	shl    DWORD PTR [ebp-0x5b2bf829],0x9e
  40645b:	fsubr  DWORD PTR [esi]
  40645d:	xchg   edi,eax
  40645e:	jle    0x40640b
  406460:	xchg   edi,eax
  406461:	nop
  406462:	sub    al,0x11
  406464:	in     al,0x64
  406466:	xor    ebx,0x629bf134
  40646c:	inc    eax
  40646d:	mov    eax,ds:0xb095c8fc
  406472:	dec    esi
  406473:	fdivr  st,st(6)
  406475:	lods   eax,DWORD PTR ds:[esi]
  406476:	dec    edx
  406477:	mov    ebp,0x247ac391
  40647c:	mov    ds:0x70e615e6,eax
  406481:	and    al,0x95
  406483:	in     eax,0xa6
  406485:	outs   dx,DWORD PTR ds:[esi]
  406486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406487:	or     eax,0x8beecfcb
  40648c:	pop    edx
  40648d:	nop
  40648e:	xchg   edx,eax
  40648f:	mov    ds:0x66af3612,al
  406494:	sub    ah,0x7e
  406497:	(bad)  
  406498:	outs   dx,DWORD PTR ds:[esi]
  406499:	hlt    
  40649a:	adc    DWORD PTR [edi+edi*8+0x706836f2],edx
  4064a1:	sub    DWORD PTR [esp+ebx*2],esi
  4064a4:	fstp   QWORD PTR [eax+esi*2+0x406450f6]
  4064ab:	inc    ebx
  4064ac:	dec    si
  4064ae:	pop    esi
  4064af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064b0:	cmp    DWORD PTR [esi],0xfffffff9
  4064b3:	ja     0x4064d7
  4064b5:	inc    edx
  4064b6:	jns    0x406458
  4064b8:	retf   
  4064b9:	fs jmp 0x37035afe
  4064bf:	inc    eax
  4064c0:	push   edi
  4064c1:	pop    ebp
  4064c2:	fs in  eax,dx
  4064c4:	pushf  
  4064c5:	je     0x406448
  4064c7:	push   esi
  4064c8:	xor    ah,cl
  4064ca:	cld    
  4064cb:	push   eax
  4064cc:	jno    0x4064c0
  4064ce:	es cmp al,0xab
  4064d1:	push   ecx
  4064d2:	pop    esi
  4064d3:	mov    ss,edi
  4064d5:	cmp    eax,0xec740546
  4064da:	loopne 0x4064bb
  4064dc:	(bad)  
  4064dd:	loop   0x40646e
  4064df:	cmp    ch,BYTE PTR ds:0x4ae2891b
  4064e5:	or     eax,0xb45a221
  4064ea:	or     DWORD PTR [edi-0x73],esi
  4064ed:	adc    al,0xb2
  4064ef:	test   DWORD PTR [edx],edx
  4064f1:	cmp    BYTE PTR [ebx+0x20],bl
  4064f4:	lahf   
  4064f5:	cmp    dl,bl
  4064f7:	mov    cl,0x2
  4064f9:	lods   al,BYTE PTR ds:[esi]
  4064fa:	inc    ecx
  4064fb:	pop    es
  4064fc:	mov    eax,ds:0x400a8834
  406501:	repz retf 0xfd4a
  406505:	daa    
  406506:	dec    esi
  406507:	jle    0x40657c
  406509:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40650a:	xor    edi,DWORD PTR ds:0x8651fe22
  406510:	rcr    BYTE PTR [ebx],0x5a
  406513:	jp     0x4064eb
  406515:	icebp  
  406516:	xchg   edi,eax
  406517:	div    DWORD PTR [esi+0x36042fff]
  40651d:	pop    edi
  40651e:	out    0xef,eax
  406520:	or     dh,ch
  406522:	xor    DWORD PTR [esi],edx
  406524:	dec    esp
  406525:	imul   ecx,DWORD PTR [ecx],0xfffffffe
  406528:	retf   
  406529:	push   cs
  40652a:	adc    eax,0x6aee19e5
  40652f:	fcomp  DWORD PTR [esi+0x18]
  406532:	push   ss
  406533:	rcl    BYTE PTR [eax],0xb
  406536:	push   edx
  406537:	cmp    DWORD PTR [eax+0x71ea3cae],0x51
  40653e:	mov    dh,0x5c
  406540:	jb     0x406561
  406542:	or     ebp,0xff63aa35
  406548:	pop    eax
  406549:	popf   
  40654a:	sbb    eax,0x6d7f7eeb
  40654f:	jne    0x406508
  406551:	pop    ebp
  406552:	xchg   edx,eax
  406553:	pop    ss
  406554:	test   DWORD PTR [edi-0x38e22024],ebp
  40655a:	sbb    ebp,DWORD PTR [eax]
  40655c:	scas   eax,DWORD PTR es:[edi]
  40655d:	jmp    0xce24:0xf1dece90
  406564:	dec    esp
  406565:	sbb    dl,BYTE PTR [edx+0x1c]
  406568:	dec    eax
  406569:	imul   edx,edx,0xfffffff9
  40656c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40656d:	mov    esi,0x50679077
  406572:	jle    0x4064f8
  406574:	fidiv  DWORD PTR [esi-0x16]
  406577:	xor    al,0x52
  406579:	sub    BYTE PTR cs:[edi-0x48],al
  40657d:	and    esi,DWORD PTR ds:0xb2062057
  406583:	add    al,dh
  406585:	cmc    
  406586:	ffreep st(5)
  406588:	call   0x437ef41
  40658d:	pop    edx
  40658e:	repnz int 0xf7
  406591:	cmp    eax,0x8f5e1ef2
  406596:	inc    ecx
  406597:	enter  0x6216,0xe
  40659b:	retf   0x11e4
  40659e:	mov    BYTE PTR [eax+0x561b1269],dh
  4065a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065a5:	ins    BYTE PTR es:[edi],dx
  4065a6:	js     0x406602
  4065a8:	les    edi,FWORD PTR [esi-0x61a5b352]
  4065ae:	mov    ds:0x6f8d5d9,al
  4065b3:	add    al,BYTE PTR [eax+eax*8]
  4065b6:	jne    0x4065bb
  4065b8:	enter  0x9ef3,0xb8
  4065bc:	inc    esi
  4065bd:	rcr    BYTE PTR [ebx-0x6818a56e],cl
  4065c3:	dec    edi
  4065c4:	mov    edi,0xbaeb1130
  4065c9:	jae    0x4065ac
  4065cb:	sub    BYTE PTR [eax+0x33],0xe1
  4065cf:	fcmovnbe st,st(7)
  4065d1:	dec    ebx
  4065d2:	xlat   BYTE PTR ds:[ebx]
  4065d3:	jmp    0x5560:0xa3969e26
  4065da:	pop    esi
  4065db:	xchg   esp,eax
  4065dc:	xchg   esp,eax
  4065dd:	shr    BYTE PTR [edi],1
  4065df:	and    esi,DWORD PTR [edi]
  4065e1:	adc    al,0x2f
  4065e3:	jp     0x4065bf
  4065e5:	xor    al,0x1c
  4065e7:	std    
  4065e8:	inc    ebp
  4065e9:	cs mov ch,0x6b
  4065ec:	and    eax,0xf6108ab3
  4065f1:	rcl    BYTE PTR [esi+0x4f],cl
  4065f4:	sub    al,0x19
  4065f6:	fimul  WORD PTR [eax]
  4065f8:	lds    edx,FWORD PTR [edi-0x17]
  4065fb:	(bad)  
  4065fc:	push   esi
  4065fd:	out    0x9d,al
  4065ff:	or     al,0xf2
  406601:	das    
  406602:	jmp    0xceaa4373
  406607:	and    ch,BYTE PTR [ecx]
  406609:	mov    eax,0x9953cd00
  40660e:	sahf   
  40660f:	addr16 (bad) 
  406611:	and    al,0x7a
  406613:	(bad)  
  406614:	fucomi st,st(3)
  406616:	call   0x98df:0x667fc99f
  40661d:	xchg   esp,eax
  40661e:	fild   QWORD PTR [ebp+0x7c70410a]
  406624:	fmul   DWORD PTR [eax-0x4]
  406627:	xchg   BYTE PTR [ebp-0x53],cl
  40662a:	mov    dl,0x56
  40662c:	dec    esp
  40662d:	xchg   edi,eax
  40662e:	xor    BYTE PTR cs:[ebp+edi*4+0x52d221b1],0xa3
  406637:	inc    edx
  406638:	add    dh,BYTE PTR [edx+0x6d]
  40663b:	mov    al,ds:0x515f6f88
  406640:	in     al,0x5c
  406642:	mov    bl,0xaf
  406644:	adc    BYTE PTR [ebx-0x46],al
  406647:	jb     0x4065e9
  406649:	and    ch,ah
  40664b:	jmp    0x406665
  40664d:	and    DWORD PTR [edx],edi
  40664f:	mov    eax,0x8cb77ec5
  406654:	mov    esi,0xb2c8410f
  406659:	xchg   ebp,eax
  40665a:	pop    edx
  40665b:	loopne 0x40664c
  40665d:	dec    ebp
  40665e:	pop    es
  40665f:	cmp    bl,0xfb
  406662:	cmp    DWORD PTR cs:[edi],0xe3072ee6
  406669:	retf   
  40666a:	aaa    
  40666b:	jb     0x4066ae
  40666d:	out    0x12,al
  40666f:	dec    esi
  406670:	and    ecx,DWORD PTR [esi+0x1e27b344]
  406676:	out    0x1f,al
  406678:	pop    es
  406679:	out    dx,eax
  40667a:	in     al,dx
  40667b:	imul   DWORD PTR [edx-0x4b2275a2]
  406681:	ffreep st(4)
  406683:	rdmsr  
  406685:	pop    ss
  406686:	xlat   BYTE PTR ds:[ebx]
  406687:	jecxz  0x406627
  406689:	adc    bl,0x7c
  40668c:	sub    DWORD PTR es:[ecx+0x4c0c2f6b],esp
  406693:	cmp    al,0x20
  406695:	cdq    
  406696:	xchg   edi,eax
  406697:	test   BYTE PTR [esi],0x27
  40669a:	sub    DWORD PTR [eax],esp
  40669c:	lea    esp,[edi+0x5bade129]
  4066a2:	pop    ss
  4066a3:	hlt    
  4066a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066a5:	into   
  4066a6:	fidivr WORD PTR [esi+0x25]
  4066a9:	(bad)  
  4066aa:	jae    0x4066ac
  4066ac:	pop    ss
  4066ad:	popf   
  4066ae:	mov    edx,0x160d3c92
  4066b3:	cli    
  4066b4:	xor    eax,edx
  4066b6:	sub    al,al
  4066b8:	xchg   edi,eax
  4066b9:	xchg   ecx,eax
  4066ba:	push   0xffffffa0
  4066bc:	call   0x31376da9
  4066c1:	daa    
  4066c2:	adc    BYTE PTR [edi-0xacd5095],dh
  4066c8:	mov    edi,0xa37c76a9
  4066cd:	(bad)  
  4066ce:	jns    0x40672c
  4066d0:	aam    0x89
  4066d2:	xchg   esi,eax
  4066d3:	fwait
  4066d4:	add    BYTE PTR [ebx+0x42b096c],ah
  4066da:	call   0xf5c:0x3a6e4452
  4066e1:	and    al,0xff
  4066e3:	sar    BYTE PTR [ebp-0x292f8148],1
  4066e9:	sti    
  4066ea:	scas   eax,DWORD PTR es:[edi]
  4066eb:	jae    0x40673e
  4066ed:	jp     0x4066d1
  4066ef:	pop    edx
  4066f0:	enter  0xde11,0x3f
  4066f4:	push   ss
  4066f5:	pop    ds
  4066f6:	inc    ebp
  4066f7:	loope  0x40670d
  4066f9:	mov    edi,0x6660b141
  4066fe:	mov    eax,ds:0xdd2e8f49
  406703:	mov    dl,0x81
  406705:	sub    BYTE PTR [ecx+0x63],ah
  406708:	jae    0x406724
  40670a:	mov    al,BYTE PTR [esi+eax*8]
  40670d:	dec    edi
  40670e:	or     al,0x6b
  406710:	push   ds
  406711:	int    0x15
  406713:	rcl    BYTE PTR [eax],0x79
  406716:	ret    
  406717:	jae    0x406700
  406719:	push   es
  40671a:	xchg   DWORD PTR [edx+0x57fe1c4],ebx
  406720:	inc    ecx
  406721:	es inc edi
  406723:	mov    ds:0x13743fcd,al
  406728:	std    
  406729:	(bad)  
  40672a:	cmp    al,0x3c
  40672c:	sbb    ch,dl
  40672e:	test   al,0x82
  406730:	adc    al,BYTE PTR [ebx-0x13]
  406733:	push   edi
  406734:	mov    eax,ds:0xe86aa786
  406739:	xlat   BYTE PTR ds:[ebx]
  40673a:	loop   0x406771
  40673c:	outs   dx,BYTE PTR ds:[esi]
  40673d:	mov    al,0xbe
  40673f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406740:	jmp    0x7d81:0xcd592eab
  406747:	dec    esi
  406748:	sbb    al,0xc8
  40674a:	in     eax,0xa2
  40674c:	loop   0x40677a
  40674e:	jbe    0x406759
  406750:	jb     0x40674e
  406752:	bound  ebx,QWORD PTR [ebx+0x70]
  406755:	xchg   esi,eax
  406756:	int3   
  406757:	aad    0x51
  406759:	push   ecx
  40675a:	mov    eax,0x98f08b3b
  40675f:	inc    ecx
  406760:	retf   
  406761:	jge    0x40675e
  406763:	outs   dx,DWORD PTR ds:[esi]
  406764:	adc    al,0xef
  406766:	dec    ebx
  406767:	les    ebp,FWORD PTR [edx]
  406769:	pop    es
  40676a:	jp     0x406734
  40676c:	mov    ds:0x140fd7d3,al
  406771:	enter  0x6075,0x12
  406775:	retf   0xd9de
  406778:	(bad)  
  406779:	cmp    eax,0x879f12a6
  40677e:	push   0x72
  406780:	aas    
  406781:	add    bl,BYTE PTR [esi]
  406783:	and    bl,dl
  406785:	pop    ebp
  406786:	mov    ds:0x4814c0b3,eax
  40678b:	js     0x40679b
  40678d:	pop    ecx
  40678e:	out    0xc6,al
  406790:	dec    edi
  406791:	mov    dl,0xf6
  406793:	sub    al,0xd9
  406795:	add    DWORD PTR [eax],eax
  406797:	pop    ecx
  406798:	test   DWORD PTR [ecx],edi
  40679a:	mov    WORD PTR [edi],ss
  40679c:	nop
  40679d:	dec    esp
  40679e:	add    cl,BYTE PTR [edi+0x29]
  4067a1:	inc    edi
  4067a2:	int    0x54
  4067a4:	popa   
  4067a5:	add    cl,BYTE PTR [edi-0x26]
  4067a8:	or     ch,bh
  4067aa:	dec    eax
  4067ab:	imul   edx
  4067ad:	sbb    esp,DWORD PTR [ebx]
  4067af:	loop   0x4067a2
  4067b1:	add    eax,0x64fde45c
  4067b6:	in     eax,0x86
  4067b8:	and    al,0x8b
  4067ba:	dec    edi
  4067bb:	jns    0x406746
  4067bd:	fld    TBYTE PTR [eax]
  4067bf:	xchg   ecx,eax
  4067c0:	ins    DWORD PTR es:[edi],dx
  4067c1:	dec    edx
  4067c2:	inc    ecx
  4067c3:	cmc    
  4067c4:	into   
  4067c5:	push   ebp
  4067c6:	push   ecx
  4067c7:	push   edx
  4067c8:	xor    DWORD PTR [ebx],ecx
  4067ca:	lock aad 0xac
  4067cd:	adc    al,0x27
  4067cf:	add    al,0x80
  4067d1:	pushf  
  4067d2:	call   FWORD PTR [ecx+0x4394bcd7]
  4067d8:	jno    0x406760
  4067da:	int    0xd3
  4067dc:	dec    eax
  4067dd:	fucomip st,st(2)
  4067df:	and    BYTE PTR [ebx+0x6a],bl
  4067e2:	pop    eax
  4067e3:	jno    0x4067e1
  4067e5:	or     esp,DWORD PTR [eax]
  4067e7:	sar    ah,cl
  4067e9:	mov    al,ds:0x1599f11f
  4067ee:	add    eax,0x351f619d
  4067f3:	outs   dx,DWORD PTR ds:[esi]
  4067f4:	mov    edi,0x745c4b0b
  4067f9:	fmul   st(0),st
  4067fb:	je     0x406830
  4067fd:	mov    ebp,0xc4ff4c14
  406802:	retf   
  406803:	cmc    
  406804:	aaa    
  406805:	inc    ebp
  406806:	nop
  406807:	cmp    BYTE PTR [ecx-0x69],al
  40680a:	retf   0xa410
  40680d:	bound  edi,QWORD PTR gs:[ebp+0x474bdc2f]
  406814:	inc    DWORD PTR [edi-0xfafd96c]
  40681a:	fnsave [ebx+0x4ffe1f3c]
  406820:	mov    dh,0x42
  406822:	icebp  
  406823:	gs scas al,BYTE PTR es:[edi]
  406825:	call   0xf5aa62fa
  40682a:	add    BYTE PTR [edx+0x1a674e22],ah
  406830:	sti    
  406831:	dec    edx
  406832:	in     eax,dx
  406833:	pop    es
  406834:	fcom   DWORD PTR [ecx-0x764b2b7b]
  40683a:	sbb    DWORD PTR [edx+0x16],ecx
  40683d:	dec    eax
  40683e:	iret   
  40683f:	xlat   BYTE PTR ds:[ebx]
  406840:	cwde   
  406841:	repz mov esp,0x37b4266d
  406847:	dec    ebp
  406848:	fldenv [edx]
  40684a:	or     DWORD PTR [ebx+0x6d23542f],ecx
  406850:	cmp    al,0x87
  406852:	sar    DWORD PTR [ecx],cl
  406854:	retf   0x55a7
  406857:	cld    
  406858:	int3   
  406859:	iret   
  40685a:	fst    QWORD PTR [eax]
  40685c:	inc    eax
  40685d:	fsubr  QWORD PTR [edi+0x1]
  406860:	xor    ah,dh
  406862:	sbb    eax,0xa3c3c944
  406867:	aaa    
  406868:	sub    dl,0x28
  40686b:	mov    esp,0xa53eb0b1
  406870:	push   ss
  406871:	test   ebx,esi
  406873:	mov    cl,0x2
  406875:	in     al,dx
  406876:	push   0xffffff93
  406878:	outs   dx,BYTE PTR ds:[esi]
  406879:	mov    eax,0x23b0adde
  40687e:	repnz and eax,0x11c4c222
  406884:	ficomp WORD PTR [ebp+0x7ae510d2]
  40688a:	sahf   
  40688b:	fxch   st(5)
  40688d:	(bad)
  406890:	xchg   DWORD PTR [ecx+0x1a8d2ff4],edx
  406896:	sbb    BYTE PTR [edx+0x56],dl
  406899:	sub    edx,0xffffff86
  40689c:	out    dx,eax
  40689d:	xor    esp,DWORD PTR [ecx-0x5da77cd2]
  4068a3:	adc    BYTE PTR [edx-0x6f],dh
  4068a6:	das    
  4068a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068a8:	push   ds
  4068a9:	repnz inc ebx
  4068ab:	pushf  
  4068ac:	test   BYTE PTR ds:0x547e580e,al
  4068b2:	adc    BYTE PTR [esi-0x49911141],ch
  4068b8:	mov    ch,0xc7
  4068ba:	add    ch,bl
  4068bc:	inc    eax
  4068bd:	iret   
  4068be:	push   cs
  4068bf:	push   ecx
  4068c0:	mov    ch,BYTE PTR [ebx-0x6e]
  4068c3:	cmp    esp,DWORD PTR [ebp+0x61]
  4068c6:	les    ebx,FWORD PTR [ecx+0x2d0209b9]
  4068cc:	jle    0x406883
  4068ce:	adc    DWORD PTR [eax],ebp
  4068d0:	dec    ecx
  4068d1:	inc    edi
  4068d2:	clc    
  4068d3:	mov    bh,0xd9
  4068d5:	mov    dh,0x3c
  4068d7:	pop    ebx
  4068d8:	push   ebx
  4068d9:	pop    edx
  4068da:	inc    esp
  4068db:	loope  0x406888
  4068dd:	push   ss
  4068de:	xchg   DWORD PTR [esi+0x7b],esi
  4068e1:	aaa    
  4068e2:	sub    eax,0x81c34924
  4068e7:	iret   
  4068e8:	dec    eax
  4068e9:	in     al,dx
  4068ea:	mov    dl,0x31
  4068ec:	leave  
  4068ed:	xlat   BYTE PTR ds:[ebx]
  4068ee:	test   ecx,esi
  4068f0:	add    dl,cl
  4068f2:	push   eax
  4068f3:	addr16 jae 0x406902
  4068f6:	sbb    BYTE PTR [edx+0x4b6c3b],0x13
  4068fd:	add    cl,cl
  4068ff:	(bad)  
  406900:	jge    0x406930
  406902:	sbb    DWORD PTR [ebx+0x6e],0xffffffb0
  406906:	retf   
  406907:	pop    edx
  406908:	stos   BYTE PTR es:[edi],al
  406909:	cs xchg edx,eax
  40690b:	add    DWORD PTR [edi+0x7f7e24],ecx
  406911:	or     eax,0xe2c7336
  406916:	mov    dl,0x89
  406918:	jmp    0x406902
  40691a:	pop    ebx
  40691b:	stos   BYTE PTR es:[edi],al
  40691c:	sahf   
  40691d:	je     0x406998
  40691f:	in     al,0x1
  406921:	mov    bh,BYTE PTR [edx]
  406923:	imul   edx,DWORD PTR [edx],0x86d74246
  406929:	call   0x7da019a4
  40692e:	popf   
  40692f:	fidiv  DWORD PTR gs:[ebp-0x37a0d628]
  406936:	scas   eax,DWORD PTR es:[edi]
  406937:	mov    ebx,0x35b1c542
  40693c:	pop    esi
  40693d:	es nop
  40693f:	cs jecxz 0x4069a5
  406942:	imul   DWORD PTR [esp+edx*4-0x7262e8af]
  406949:	cdq    
  40694a:	sub    ch,dh
  40694c:	je     0x406962
  40694e:	jbe    0x406937
  406950:	repnz mov ebp,DWORD PTR [ebp+0x55]
  406954:	popa   
  406955:	gs pop esp
  406957:	inc    esp
  406958:	inc    eax
  406959:	sbb    ah,ch
  40695b:	out    0x73,al
  40695d:	pop    ebp
  40695e:	pop    ebp
  40695f:	push   ebp
  406960:	lods   al,BYTE PTR ds:[esi]
  406961:	mov    eax,ds:0x66d3ce51
  406966:	(bad)  
  406967:	cmp    cl,BYTE PTR [ecx-0x38]
  40696a:	es (bad) 
  40696c:	hlt    
  40696d:	lea    ecx,[ebx-0x7b5e02bf]
  406973:	arpl   bp,di
  406975:	push   ss
  406976:	cwde   
  406977:	push   ebp
  406978:	or     DWORD PTR [eax+0x5ccd8ed0],ecx
  40697e:	jle    0x4069bf
  406980:	lds    esp,FWORD PTR [edx-0x23]
  406983:	lds    eax,FWORD PTR [edi+0x6c]
  406986:	cmp    DWORD PTR [eax],edx
  406988:	push   edx
  406989:	call   0x3a34:0x7f46f6fd
  406990:	jmpw   0xac88
  406994:	(bad)  
  406995:	jae    0x4069eb
  406997:	lods   eax,DWORD PTR ds:[esi]
  406998:	push   esi
  406999:	xor    al,0x6
  40699b:	push   0x975c738
  4069a0:	ds test eax,0x3f9d67c1
  4069a6:	dec    eax
  4069a7:	out    dx,al
  4069a8:	rcr    DWORD PTR [esi],0x1d
  4069ab:	cmp    al,0x84
  4069ad:	and    eax,0x77270fe3
  4069b2:	loope  0x4069f0
  4069b4:	nop
  4069b5:	out    0x43,eax
  4069b7:	stos   BYTE PTR es:[edi],al
  4069b8:	push   edx
  4069b9:	pop    esi
  4069ba:	jnp    0x406a14
  4069bc:	jg     0x4069c7
  4069be:	adc    cl,BYTE PTR [ecx]
  4069c0:	add    BYTE PTR [esp+ecx*4-0x14],0x5f
  4069c5:	pop    ds
  4069c6:	(bad)  [eax]
  4069c8:	pop    esi
  4069c9:	cwde   
  4069ca:	mov    esp,0xb5c92868
  4069cf:	xchg   ebx,eax
  4069d0:	ffree  st(1)
  4069d2:	nop
  4069d3:	sub    BYTE PTR ds:0x4c869ece,bh
  4069d9:	popa   
  4069da:	sbb    BYTE PTR [esi+ebx*8+0x37],bl
  4069de:	cmc    
  4069df:	ret    
  4069e0:	add    bl,dh
  4069e2:	mov    esi,0x8a3580f8
  4069e7:	mov    edx,0xadc75e85
  4069ec:	push   edx
  4069ed:	sbb    esi,esi
  4069ef:	or     al,0xa6
  4069f1:	rcl    BYTE PTR [ebx+0x35181634],cl
  4069f7:	pop    edi
  4069f8:	or     ecx,ebx
  4069fa:	mov    cl,0xe6
  4069fc:	pop    ss
  4069fd:	clc    
  4069fe:	gs jno 0x4069c6
  406a01:	and    DWORD PTR [eax-0x42],0xee96e05b
  406a08:	loop   0x4069e8
  406a0a:	jne    0x406a64
  406a0c:	stc    
  406a0d:	jge    0x4069e4
  406a0f:	ret    0x9bfc
  406a12:	mulps  xmm0,XMMWORD PTR [edx+esi*8]
  406a16:	xlat   BYTE PTR ds:[ebx]
  406a17:	mov    DWORD PTR [ebp+0x4f69fda9],eax
  406a1d:	push   ebx
  406a1e:	xor    edx,DWORD PTR [eax-0x7c11351c]
  406a24:	lahf   
  406a25:	daa    
  406a26:	je     0x406a3c
  406a28:	adc    eax,0xa9da8b1b
  406a2d:	xor    cl,ah
  406a2f:	out    dx,eax
  406a30:	jl     0x406a81
  406a32:	loop   0x4069db
  406a34:	cmp    DWORD PTR [edi+0xf60e3f],esp
  406a3a:	std    
  406a3b:	push   edi
  406a3c:	test   BYTE PTR [edi],dl
  406a3e:	gs jmp 0x33c2:0x2d6d1b54
  406a46:	call   0x5bd:0x90335ff3
  406a4d:	jo     0x406a33
  406a4f:	sub    eax,0x9a1bff68
  406a54:	bswap  eax
  406a56:	(bad)  [edx-0x2e]
  406a59:	in     eax,dx
  406a5a:	addr16 data16 in al,dx
  406a5d:	mov    ch,0x69
  406a5f:	test   BYTE PTR [ebp-0x7b9991e6],dl
  406a65:	jl     0x406a94
  406a67:	outs   dx,DWORD PTR ds:[esi]
  406a68:	pushf  
  406a69:	cli    
  406a6a:	pusha  
  406a6b:	loop   0x406a19
  406a6d:	jge    0x406ae9
  406a6f:	dec    esi
  406a70:	jmp    0x589b5f61
  406a75:	not    edx
  406a77:	stos   BYTE PTR es:[edi],al
  406a78:	push   edi
  406a79:	cmp    esp,DWORD PTR [ebp+0x641a1609]
  406a7f:	mov    dl,0xc7
  406a81:	popa   
  406a82:	add    edx,DWORD PTR [esi]
  406a84:	xor    DWORD PTR [ecx-0x1b],eax
  406a87:	pop    edx
  406a88:	inc    ebx
  406a89:	add    eax,0xdbd49545
  406a8e:	push   esp
  406a8f:	fmul   QWORD PTR [esi]
  406a91:	mov    WORD PTR [ebp-0x4b3b0015],ds
  406a97:	in     al,dx
  406a98:	mov    esp,0x8ad2b558
  406a9d:	inc    ebx
  406a9e:	jno    0x406abd
  406aa0:	mov    DWORD PTR [eax],ebp
  406aa2:	jmp    0x3a23:0xd35f01f6
  406aa9:	cwde   
  406aaa:	mov    bh,0x5a
  406aac:	adc    dh,BYTE PTR [esp+eiz*4+0x35d387cd]
  406ab3:	in     eax,dx
  406ab4:	mov    eax,0xb2fc3547
  406ab9:	repz sti 
  406abb:	push   ebx
  406abc:	mov    BYTE PTR [ecx-0x2],0x56
  406ac0:	xor    DWORD PTR [edx],0x2c
  406ac3:	push   0xac979ca0
  406ac8:	cs push ds
  406aca:	loop   0x406a8a
  406acc:	ins    BYTE PTR es:[edi],dx
  406acd:	in     eax,0x42
  406acf:	sbb    dh,BYTE PTR [edx]
  406ad1:	jbe    0x406b20
  406ad3:	add    eax,esp
  406ad5:	cmp    edi,esi
  406ad7:	xchg   edi,eax
  406ad8:	mov    DWORD PTR [ecx-0x3e68fa85],esi
  406ade:	xchg   ebx,eax
  406adf:	in     eax,dx
  406ae0:	mov    ebp,0xa0d46ca0
  406ae5:	jp     0x406a94
  406ae7:	jl     0x406aaf
  406ae9:	lds    edi,FWORD PTR [edx]
  406aeb:	ss es xchg ebp,eax
  406aee:	test   BYTE PTR [edx-0x5a],bh
  406af1:	call   0xfc9b31c7
  406af6:	call   0x26d9:0xe716dc2
  406afd:	cmp    BYTE PTR [ecx+0x430614e0],bh
  406b03:	and    al,0x1f
  406b05:	scas   eax,DWORD PTR es:[edi]
  406b06:	call   0xdf83:0x991ec831
  406b0d:	jmp    0xca00:0xfa2fd1a4
  406b14:	push   edx
  406b15:	sbb    BYTE PTR ds:0xe713af77,al
  406b1b:	popa   
  406b1c:	and    cl,0xcb
  406b1f:	pop    edx
  406b20:	and    BYTE PTR [esi*1+0x56cc1632],0x4d
  406b28:	in     al,dx
  406b29:	xor    BYTE PTR [esi],bl
  406b2b:	shr    DWORD PTR [ecx],0x27
  406b2e:	xchg   bl,dl
  406b30:	shl    DWORD PTR [eax+0x69],0x94
  406b34:	sahf   
  406b35:	mov    ah,dh
  406b37:	jmp    0x406b1a
  406b39:	cli    
  406b3a:	dec    edi
  406b3b:	mov    bh,0xae
  406b3d:	mov    BYTE PTR [ebx-0x73],ah
  406b40:	pop    es
  406b41:	test   eax,0x667563eb
  406b46:	xchg   ecx,eax
  406b47:	push   ebx
  406b48:	pop    edx
  406b49:	stc    
  406b4a:	mov    dh,0xf4
  406b4c:	xchg   ebp,eax
  406b4d:	popa   
  406b4e:	les    edi,FWORD PTR [ebx+0x6a]
  406b51:	inc    esp
  406b52:	(bad)  
  406b53:	retf   
  406b54:	mov    cs,WORD PTR [edx]
  406b56:	jge    0x406b2d
  406b58:	push   esp
  406b59:	js     0x406b3e
  406b5b:	fisttp QWORD PTR [ebp+0x6e]
  406b5e:	cmp    dl,ch
  406b60:	je     0x406b05
  406b62:	cwde   
  406b63:	arpl   WORD PTR [ecx+0x349852d],ax
  406b69:	cmp    DWORD PTR [ecx],ebx
  406b6b:	loope  0x406b8d
  406b6d:	jecxz  0x406bc0
  406b6f:	mov    al,ds:0x73d1c43c
  406b74:	loop   0x406b54
  406b76:	sub    eax,0x5792b79b
  406b7b:	stc    
  406b7c:	shr    BYTE PTR [ebx+0x1920a133],cl
  406b82:	mov    ah,0xb5
  406b84:	push   esi
  406b85:	shl    bh,cl
  406b87:	fnstsw WORD PTR [esi+0xdf60660]
  406b8d:	ins    BYTE PTR es:[edi],dx
  406b8e:	xchg   edi,eax
  406b8f:	cmp    edx,0x1d
  406b92:	imul   eax,DWORD PTR [edi],0xa72781ab
  406b98:	cs xchg edi,eax
  406b9a:	out    0x98,al
  406b9c:	(bad)  
  406b9d:	scas   al,BYTE PTR es:[edi]
  406b9e:	push   0x3600fce6
  406ba3:	sub    esp,edi
  406ba5:	mov    ah,0x93
  406ba7:	adc    BYTE PTR [eax-0x72],bl
  406baa:	xchg   DWORD PTR [edi],ebx
  406bac:	bound  eax,QWORD PTR [esi+0x172093d8]
  406bb2:	(bad)
  406bb5:	mov    eax,ds:0xc6567aae
  406bba:	ret    
  406bbb:	mov    ah,0xdc
  406bbd:	mov    ds:0x832642e5,al
  406bc2:	mov    esp,0x9534415d
  406bc7:	jo     0x406bb1
  406bc9:	fwait
  406bca:	xor    eax,0x9783ebf6
  406bcf:	ss pop ebp
  406bd1:	and    ecx,DWORD PTR [edx]
  406bd3:	repz cmp eax,0x6fee8680
  406bd9:	inc    ebp
  406bda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bdb:	jp     0x406c54
  406bdd:	adc    dl,BYTE PTR [ebx+ebp*2]
  406be0:	imul   ecx,DWORD PTR [esp+edi*2-0xd],0x77730433
  406be8:	pop    eax
  406be9:	and    DWORD PTR [ebp+0x32],ebx
  406bec:	ss add eax,0x8362018d
  406bf2:	out    0xb8,al
  406bf4:	pushf  
  406bf5:	add    DWORD PTR [esi+ecx*1],edx
  406bf8:	not    BYTE PTR [ebp+0x6ff99ec6]
  406bfe:	xor    DWORD PTR [eax+0x18],ecx
  406c01:	mov    al,ds:0x8d982e14
  406c06:	jle    0x406c78
  406c08:	mov    ah,dl
  406c0a:	cwde   
  406c0b:	cmc    
  406c0c:	les    esi,FWORD PTR [edi]
  406c0e:	iret   
  406c0f:	cmp    ah,dl
  406c11:	in     eax,0xff
  406c13:	pop    edi
  406c14:	stos   DWORD PTR es:[edi],eax
  406c15:	jbe    0x406bac
  406c17:	ins    DWORD PTR es:[edi],dx
  406c18:	in     eax,0x24
  406c1a:	push   cs
  406c1b:	jge    0x406c21
  406c1d:	mov    edi,0xbb844731
  406c22:	jnp    0x406c5a
  406c24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c25:	scas   al,BYTE PTR es:[edi]
  406c26:	xor    esi,DWORD PTR [edi+0x50]
  406c29:	jmp    0x20cf2b11
  406c2e:	ficomp DWORD PTR [ecx]
  406c30:	xlat   BYTE PTR ds:[ebx]
  406c31:	mul    BYTE PTR [ebp+ebp*1-0x5a]
  406c35:	inc    ecx
  406c36:	call   FWORD PTR [ebp+0x43268833]
  406c3c:	adc    DWORD PTR [eax+0x15eba18],edi
  406c42:	mov    cl,0x9b
  406c44:	sub    eax,0xdfe44bfe
  406c49:	mov    ecx,0x258a7344
  406c4e:	xor    BYTE PTR [esi-0x33],cl
  406c51:	pop    edx
  406c52:	je     0x406c39
  406c54:	push   0x62
  406c56:	push   ebp
  406c57:	adc    BYTE PTR [esi+0x22],0xc3
  406c5b:	sbb    DWORD PTR [edx],ecx
  406c5d:	mov    ds:0x40b383f8,eax
  406c62:	lock dec esi
  406c64:	sub    DWORD PTR [eax+eiz*2-0x1f27fa7a],edx
  406c6b:	pop    ds
  406c6c:	inc    edx
  406c6d:	inc    edi
  406c6e:	pop    esi
  406c6f:	jmp    0x406ca4
  406c71:	call   DWORD PTR [edx+0x15c5e2dd]
  406c77:	mov    bl,0x82
  406c79:	fdiv   DWORD PTR [edx+0x1d1a4edd]
  406c7f:	mov    eax,0xe567447
  406c84:	or     al,0x1b
  406c86:	xchg   esp,esi
  406c88:	and    DWORD PTR [edx+ecx*8],ebp
  406c8b:	add    DWORD PTR [esi-0x63],esi
  406c8e:	pop    esi
  406c8f:	dec    edi
  406c90:	xchg   ebp,eax
  406c91:	leave  
  406c92:	or     ch,bl
  406c94:	xchg   edi,eax
  406c95:	int    0xa7
  406c97:	or     DWORD PTR [ebx],ecx
  406c99:	ss fwait
  406c9b:	vpmulhw ymm0,ymm2,ymm6
  406c9f:	inc    esp
  406ca0:	inc    ebp
  406ca1:	das    
  406ca2:	and    BYTE PTR ds:0x7087e45a,cl
  406ca8:	stos   DWORD PTR es:[edi],eax
  406ca9:	cmp    al,0xb0
  406cab:	and    esp,0x66
  406cae:	inc    BYTE PTR [esi+esi*4]
  406cb1:	in     eax,0x9a
  406cb3:	lock jl 0x406c67
  406cb6:	and    eax,0xa73f961b
  406cbb:	inc    eax
  406cbc:	es dec ebp
  406cbe:	inc    ah
  406cc0:	imul   ebx,DWORD PTR [ebp+0x76],0x18d7aece
  406cc7:	mov    ecx,0x79a1d0d5
  406ccc:	clc    
  406ccd:	xchg   esi,eax
  406cce:	daa    
  406ccf:	outs   dx,DWORD PTR ds:[esi]
  406cd0:	div    BYTE PTR [ebp+0x10584c71]
  406cd6:	inc    eax
  406cd7:	or     eax,0xf501a270
  406cdc:	aam    0x98
  406cde:	push   ebx
  406cdf:	popf   
  406ce0:	mov    bh,0x6f
  406ce2:	mov    ch,0x8b
  406ce4:	shl    DWORD PTR [edi-0x8],1
  406ce7:	jge    0x406d56
  406ce9:	inc    eax
  406cea:	jge    0x406d66
  406cec:	cmc    
  406ced:	push   esi
  406cee:	in     al,dx
  406cef:	in     eax,0x8
  406cf1:	popa   
  406cf2:	out    dx,al
  406cf3:	sbb    ch,BYTE PTR [ecx]
  406cf5:	arpl   WORD PTR [edi-0xe],di
  406cf8:	mov    ebx,esi
  406cfa:	(bad)  
  406cfb:	cmp    al,0xef
  406cfd:	mov    eax,0x78ecbdb0
  406d02:	adc    ecx,edx
  406d04:	xor    bl,BYTE PTR [edx]
  406d06:	sub    BYTE PTR [ecx],al
  406d08:	imul   esp,DWORD PTR [eax],0xffffff8e
  406d0b:	dec    esp
  406d0c:	dec    ecx
  406d0d:	jmp    0xb9592dc8
  406d12:	adc    eax,DWORD PTR [esi]
  406d14:	clc    
  406d15:	cmova  ecx,DWORD PTR [eax-0x166ab388]
  406d1c:	fbld   TBYTE PTR [edx+0x4a510645]
  406d22:	mov    al,0xb9
  406d24:	mov    bl,0xa1
  406d26:	mov    DWORD PTR [edi+0x265c3a8f],esi
  406d2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d2d:	push   esp
  406d2e:	sbb    bh,BYTE PTR gs:0x15f10cd4
  406d35:	jl     0x406cbd
  406d37:	jmp    0x406d2d
  406d39:	test   BYTE PTR [edx+0x4],0xb0
  406d3d:	(bad)  
  406d3e:	(bad)  
  406d3f:	xchg   ebx,eax
  406d40:	gs push bp
  406d43:	jbe    0x406d1b
  406d45:	sub    eax,0x77f2bab7
  406d4a:	sbb    BYTE PTR [ebx-0x77],bh
  406d4d:	jle    0x406d54
  406d4f:	jo     0x406d89
  406d51:	ds dec edi
  406d53:	inc    ebp
  406d54:	daa    
  406d55:	pop    ebx
  406d56:	pop    es
  406d57:	imul   edx,DWORD PTR [edx-0x79c6d98b],0x95525b67
  406d61:	lods   al,BYTE PTR ds:[esi]
  406d62:	or     al,0x1
  406d64:	add    bh,BYTE PTR [eax-0x57]
  406d67:	hlt    
  406d68:	aas    
  406d69:	or     esp,eax
  406d6b:	or     al,0x48
  406d6d:	das    
  406d6e:	push   edx
  406d6f:	push   0xc
  406d71:	cmp    ah,dh
  406d73:	dec    ecx
  406d74:	aam    0xba
  406d76:	inc    edi
  406d77:	sahf   
  406d78:	rcl    DWORD PTR [edi+esi*4-0x79],1
  406d7c:	sub    ch,al
  406d7e:	fwait
  406d7f:	push   ebx
  406d80:	pop    es
  406d81:	mov    edi,0xfc835216
  406d86:	pop    ss
  406d87:	dec    esi
  406d88:	inc    eax
  406d89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d8a:	push   esi
  406d8b:	inc    esp
  406d8c:	jae    0x406db6
  406d8e:	es adc al,0x44
  406d91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d92:	jg     0x406d3a
  406d94:	in     eax,0xc4
  406d96:	mov    al,0x3f
  406d98:	ins    DWORD PTR es:[edi],dx
  406d99:	jne    0x406d7d
  406d9b:	(bad)  
  406d9c:	cmp    DWORD PTR [ebp-0x30],ecx
  406d9f:	pop    ecx
  406da0:	and    al,0x5b
  406da2:	test   eax,0xdf40246c
  406da7:	mov    cl,BYTE PTR cs:[ebx]
  406daa:	cli    
  406dab:	push   0xffffffc7
  406dad:	cld    
  406dae:	push   esp
  406daf:	or     ebp,DWORD PTR [edx-0x31]
  406db2:	inc    esp
  406db3:	or     BYTE PTR [ebx+edi*4+0x16ef6684],0x1
  406dbb:	test   al,0x7a
  406dbd:	cmp    al,ah
  406dbf:	push   0xffffffbb
  406dc1:	js     0x406d57
  406dc3:	(bad)  
  406dc4:	ret    
  406dc5:	cmp    DWORD PTR [ecx+0x2184309b],0xb0ced47f
  406dcf:	aad    0x6f
  406dd1:	mov    cl,0x73
  406dd3:	data16 jmp 0x406dfa
  406dd6:	mov    ch,0x7
  406dd8:	jb     0x406def
  406dda:	sbb    ebp,esi
  406ddc:	mov    bl,0x6e
  406dde:	cli    
  406ddf:	(bad)  
  406de0:	sub    bh,BYTE PTR [ecx]
  406de2:	add    dl,ch
  406de4:	mov    al,ds:0x988c9672
  406de9:	sbb    ecx,DWORD PTR [eax-0x2f4c81ba]
  406def:	mov    al,0x1e
  406df1:	std    
  406df2:	ror    cl,0x89
  406df5:	push   edx
  406df6:	(bad)  
  406df7:	mov    dl,0x91
  406df9:	push   eax
  406dfa:	retf   0x40ad
  406dfd:	lods   al,BYTE PTR ds:[esi]
  406dfe:	(bad)  
  406dff:	and    ebp,DWORD PTR [esi+0x58]
  406e02:	xor    ebp,DWORD PTR [ebp-0x65]
  406e05:	sub    BYTE PTR [edx],dh
  406e07:	pop    ss
  406e08:	dec    eax
  406e09:	xchg   DWORD PTR [eax],esi
  406e0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e0c:	push   edx
  406e0d:	fisttp DWORD PTR [ebp+0x23]
  406e10:	jge    0x406d93
  406e12:	out    dx,eax
  406e13:	subps  xmm5,XMMWORD PTR [ebp+0x2d]
  406e17:	gs inc ebx
  406e19:	sti    
  406e1a:	data16 xlat BYTE PTR ds:[ebx]
  406e1c:	push   ss
  406e1d:	pusha  
  406e1e:	call   0xf39a7688
  406e23:	cli    
  406e24:	jmp    edi
  406e26:	ins    BYTE PTR es:[edi],dx
  406e27:	dec    esi
  406e28:	psubq  mm3,QWORD PTR [ebp+ecx*1+0x49]
  406e2d:	inc    ecx
  406e2e:	dec    edx
  406e2f:	adc    edx,ebx
  406e31:	stc    
  406e32:	sub    BYTE PTR [edx+eiz*2],0x9
  406e36:	or     eax,DWORD PTR [edx-0x57]
  406e39:	push   edi
  406e3a:	jl     0x406e72
  406e3c:	fwait
  406e3d:	aaa    
  406e3e:	mov    bl,0xd0
  406e40:	mov    cl,0x6e
  406e42:	sbb    bh,BYTE PTR [eax+0x4b57e382]
  406e48:	js     0x406e42
  406e4a:	je     0x406e50
  406e4c:	add    DWORD PTR [esi+0x41527d40],ebp
  406e52:	je     0x406e14
  406e54:	shl    BYTE PTR [ebx+ebx*8+0x6efa6e96],cl
  406e5b:	mov    bl,BYTE PTR [edx+0x135fddc7]
  406e61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e62:	popa   
  406e63:	(bad)  
  406e64:	imul   ebp,DWORD PTR es:[ebp-0x20e54b4b],0xffffffa6
  406e6c:	sub    cl,BYTE PTR [esi-0x5fc67522]
  406e72:	mov    cl,0x5d
  406e74:	mov    edx,0x6c2f3ba
  406e79:	adc    ebp,DWORD PTR [edi]
  406e7b:	xor    al,0xdf
  406e7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e7e:	outs   dx,DWORD PTR ds:[esi]
  406e7f:	mov    esi,0x330aecf1
  406e84:	rcr    BYTE PTR [esi+0xc],0xdd
  406e88:	and    al,0x25
  406e8a:	adc    ebp,DWORD PTR [ecx+0x52]
  406e8d:	push   ds
  406e8e:	mov    cl,0x43
  406e90:	call   0x67061643
  406e95:	ins    BYTE PTR es:[edi],dx
  406e96:	lds    esp,FWORD PTR [ecx+0x57]
  406e99:	retw   
  406e9b:	sar    dl,cl
  406e9d:	xor    bl,BYTE PTR [ebp-0x30]
  406ea0:	mov    ecx,0x69ed2e8
  406ea5:	ds mov ebx,0x24a5a264
  406eab:	fnstenv [esp+eiz*2-0x27]
  406eaf:	adc    bh,dl
  406eb1:	call   0x8220:0x4ee60f61
  406eb8:	pop    eax
  406eb9:	loopne 0x406e3e
  406ebb:	inc    esp
  406ebc:	sub    eax,0xf12ffd54
  406ec1:	cmp    ebx,DWORD PTR [eax]
  406ec3:	rcr    BYTE PTR [esi-0xc],1
  406ec6:	cmp    al,0x36
  406ec8:	mov    edx,0xcd35e495
  406ecd:	push   es
  406ece:	dec    ecx
  406ecf:	xor    esi,0x3b729ca9
  406ed5:	mov    ds:0xcd19e40a,eax
  406eda:	xlat   BYTE PTR ds:[ebx]
  406edb:	neg    DWORD PTR [edx-0x494f5923]
  406ee1:	test   DWORD PTR [edx+eiz*2+0x6e],edi
  406ee5:	mov    DWORD PTR [ecx-0x3d],0xffa98fc5
  406eec:	or     eax,0x4c39e9ee
  406ef1:	mov    ds:0xed714e04,al
  406ef6:	ss sbb edx,0xe187d4ce
  406efd:	jb     0x406ef1
  406eff:	das    
  406f00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f01:	iret   
  406f02:	xor    DWORD PTR [edi],ebx
  406f04:	sahf   
  406f05:	leave  
  406f06:	mov    ebx,0x3f9099cc
  406f0b:	imul   ebp,DWORD PTR [edi+0x59],0xffffffd0
  406f0f:	call   0x9cfc5b40
  406f14:	ja     0x406ecd
  406f16:	ret    
  406f17:	mov    ds:0x982f423a,al
  406f1c:	add    ecx,eax
  406f1e:	in     eax,0x2f
  406f20:	jno    0x406eae
  406f22:	push   ecx
  406f23:	dec    esi
  406f24:	ffree  st(6)
  406f26:	push   ds
  406f27:	add    eax,0xaf6c1f61
  406f2c:	sbb    al,0x2c
  406f2e:	imul   ebx,DWORD PTR [edx+0x439436b0],0x3a
  406f35:	or     eax,0xdb71218d
  406f3a:	inc    ecx
  406f3b:	xchg   ebp,eax
  406f3c:	out    0xae,eax
  406f3e:	mov    dl,0x89
  406f40:	or     bh,cl
  406f42:	imul   esi,DWORD PTR [eax-0x59],0xffffffbb
  406f46:	sar    BYTE PTR [ebp-0x77],cl
  406f49:	dec    esp
  406f4a:	or     ecx,DWORD PTR [ebx-0x537003df]
  406f50:	add    edx,esi
  406f52:	add    al,0x6d
  406f54:	sub    DWORD PTR [edi+0x78],ecx
  406f57:	push   esi
  406f58:	cmp    al,0x1
  406f5a:	test   edx,0x680e6ba3
  406f60:	lds    edx,FWORD PTR [edi+eax*2-0x4a]
  406f64:	loope  0x406f92
  406f66:	jae    0x406f64
  406f68:	xor    BYTE PTR [ecx-0x6c],0xed
  406f6c:	in     al,dx
  406f6d:	out    0xf5,al
  406f6f:	out    dx,al
  406f70:	xchg   ebx,eax
  406f71:	and    DWORD PTR [edi],edx
  406f73:	lds    edi,FWORD PTR ds:0x68a29e7c
  406f79:	stos   DWORD PTR es:[edi],eax
  406f7a:	inc    edx
  406f7b:	adc    ebp,eax
  406f7d:	ss mov dl,0x61
  406f80:	in     al,dx
  406f81:	fild   WORD PTR [ebx+0x61b5625c]
  406f87:	retf   0xa2ec
  406f8a:	sub    eax,DWORD PTR [ecx-0x7d5df67d]
  406f90:	lods   al,BYTE PTR ds:[esi]
  406f91:	ret    0x3134
  406f94:	das    
  406f95:	(bad)  
  406f96:	pop    es
  406f97:	hlt    
  406f98:	outs   dx,BYTE PTR ds:[esi]
  406f99:	js     0x406f6a
  406f9b:	mov    dh,0x60
  406f9d:	jo     0x406fa8
  406f9f:	shr    BYTE PTR [ebx-0xd],0x0
  406fa3:	mov    dl,0x5a
  406fa5:	in     eax,dx
  406fa6:	mov    al,bh
  406fa8:	aam    0xf5
  406faa:	aaa    
  406fab:	jl     0x406f41
  406fad:	scas   eax,DWORD PTR es:[edi]
  406fae:	into   
  406faf:	test   DWORD PTR [ecx+0x5ddfd984],0x55604d4d
  406fb9:	mov    dh,0x7d
  406fbb:	mov    ebp,0x2af9860b
  406fc0:	ror    esp,cl
  406fc2:	pop    eax
  406fc3:	ds xchg ecx,eax
  406fc5:	stos   DWORD PTR es:[edi],eax
  406fc6:	add    eax,DWORD PTR [edi+0x6cb0f41e]
  406fcc:	xor    ebx,DWORD PTR [edi+0x5ddba729]
  406fd2:	inc    edx
  406fd3:	jl     0x406f90
  406fd5:	inc    eax
  406fd6:	(bad)  
  406fd7:	loope  0x407040
  406fd9:	mov    WORD PTR [eax],es
  406fdb:	push   ds
  406fdc:	loope  0x40702e
  406fde:	mov    bh,BYTE PTR [ebx+0x63]
  406fe1:	loop   0x40705e
  406fe3:	inc    ebx
  406fe4:	dec    ebx
  406fe5:	gs mov edx,0x7dd9b14a
  406feb:	pop    eax
  406fec:	nop
  406fed:	xchg   esp,eax
  406fee:	xor    esp,DWORD PTR [ebp+0x3089e2cd]
  406ff4:	loope  0x407022
  406ff6:	pop    ebp
  406ff7:	xchg   ecx,eax
  406ff8:	push   0xb2c68121
  406ffd:	out    dx,al
  406ffe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fff:	lock pop es
  407001:	outs   dx,DWORD PTR fs:[esi]
  407003:	or     dl,BYTE PTR [ebx-0x33]
  407006:	sub    al,0x10
  407008:	lahf   
  407009:	push   ds
  40700a:	jbe    0x406ffc
  40700c:	xchg   edi,eax
  40700d:	cwde   
  40700e:	jl     0x406fec
  407010:	and    eax,0x8628e2b5
  407015:	lds    ebp,FWORD PTR [esi]
  407017:	add    al,0xf6
  407019:	mov    eax,ds:0x1ae0918
  40701e:	mov    ch,bh
  407020:	jmp    0x460f:0x76497a16
  407027:	scas   eax,DWORD PTR es:[edi]
  407028:	sbb    esp,esp
  40702a:	mov    eax,ds:0x5212e5cd
  40702f:	clc    
  407030:	inc    ecx
  407031:	or     edi,DWORD PTR [ebx-0xdcade7a]
  407037:	scas   al,BYTE PTR es:[edi]
  407038:	(bad)  
  407039:	dec    ebx
  40703a:	add    ecx,DWORD PTR [eax]
  40703c:	inc    eax
  40703d:	fistp  WORD PTR [ecx-0x23]
  407040:	pop    ebp
  407041:	fidiv  WORD PTR [ecx+0x21ebe887]
  407047:	(bad)  
  407048:	imul   ecx,DWORD PTR [ecx-0x53],0x67
  40704c:	ror    BYTE PTR [ecx],0x91
  40704f:	fstp   QWORD PTR [edi-0x4ae30c5b]
  407055:	and    eax,0x6abc1ce0
  40705a:	xor    al,0xc2
  40705c:	les    eax,FWORD PTR [ebx+ecx*2+0x35b23035]
  407063:	mov    dl,0x48
  407065:	add    al,BYTE PTR [edx]
  407067:	mov    esp,0x81ba93d2
  40706c:	add    DWORD PTR [edi],ebx
  40706e:	outs   dx,BYTE PTR ds:[esi]
  40706f:	and    ecx,eax
  407071:	xchg   DWORD PTR [esi+0x74],ecx
  407074:	jge    0x40704a
  407076:	mov    esp,0x5017418d
  40707b:	push   ds
  40707c:	stc    
  40707d:	add    eax,0xef4f306c
  407082:	aam    0x37
  407084:	dec    ebp
  407085:	mov    ebp,0xed5387c0
  40708a:	mov    ch,0x95
  40708c:	loop   0x40704e
  40708e:	cmc    
  40708f:	dec    edi
  407090:	push   cs
  407091:	xchg   BYTE PTR [edi],al
  407093:	retf   
  407094:	jnp    0x4070c1
  407096:	shl    ah,1
  407098:	xchg   edx,eax
  407099:	fld    QWORD PTR [esp+eax*1]
  40709c:	shl    BYTE PTR [ebx+edx*1+0x5a88e427],cl
  4070a3:	cmc    
  4070a4:	(bad)  
  4070a5:	cmp    DWORD PTR [edx+0x6b],esp
  4070a8:	inc    esp
  4070a9:	fs call 0xc8c0:0xa3871a33
  4070b1:	fst    QWORD PTR [edi+eax*8-0x100f6a50]
  4070b8:	shr    DWORD PTR [ebp-0x18742047],0xa2
  4070bf:	jb     0x4070c9
  4070c1:	js     0x4070fe
  4070c3:	push   ebp
  4070c4:	das    
  4070c5:	cmp    esi,esp
  4070c7:	jle    0x4070d0
  4070c9:	xchg   esi,eax
  4070ca:	mov    ecx,0x6e4fd187
  4070cf:	sub    DWORD PTR [edx-0x638ef0b7],ecx
  4070d5:	and    ch,BYTE PTR [ebx+0x404aea1b]
  4070db:	(bad)  
  4070dc:	xchg   ebx,eax
  4070dd:	and    eax,0x16c841c6
  4070e2:	pop    eax
  4070e3:	push   esp
  4070e4:	pop    eax
  4070e5:	or     BYTE PTR [edx+0x7f],cl
  4070e8:	xor    ch,BYTE PTR [edx+0xb54d111]
  4070ee:	jmp    DWORD PTR [ecx+0x3b6a53e3]
  4070f4:	es adc eax,ebx
  4070f7:	dec    edi
  4070f8:	inc    esi
  4070f9:	es or  al,ch
  4070fc:	mov    BYTE PTR [ecx-0x433d8a07],bl
  407102:	add    ah,ah
  407104:	pop    esp
  407105:	out    0xbc,al
  407107:	push   esi
  407108:	cld    
  407109:	pop    esp
  40710a:	imul   esi,DWORD PTR [edi+0x70],0xffffffd7
  40710e:	outs   dx,DWORD PTR ds:[esi]
  40710f:	adc    eax,0xa6563f72
  407114:	sbb    dl,bh
  407116:	adc    ah,dl
  407118:	push   edx
  407119:	mov    ebp,0xe4d2c9c7
  40711e:	nop
  40711f:	into   
  407120:	mov    edx,0xc3c006b7
  407125:	loop   0x4070e0
  407127:	std    
  407128:	inc    eax
  407129:	mov    ah,BYTE PTR ds:0x106437e2
  40712f:	pop    esi
  407130:	sar    dh,0x4b
  407133:	jnp    0x407143
  407135:	fldcw  WORD PTR [edi]
  407137:	mov    bl,0xf5
  407139:	(bad)  
  40713a:	test   eax,0x90313f15
  40713f:	ror    BYTE PTR [ebp+0x65],cl
  407142:	je     0x4071c2
  407144:	mov    al,BYTE PTR [edi-0x62]
  407147:	adc    BYTE PTR [ebx-0x104919a],ch
  40714d:	jle    0x4070fa
  40714f:	cmp    eax,0xb11406d9
  407154:	test   esp,esi
  407156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407157:	mov    dl,0x8b
  407159:	addr16 mov bl,0x81
  40715c:	xchg   esi,eax
  40715d:	scas   eax,DWORD PTR es:[edi]
  40715e:	lods   al,BYTE PTR ds:[esi]
  40715f:	cmp    BYTE PTR [eax+0x7c99a8a5],cl
  407165:	int3   
  407166:	mov    ch,ah
  407168:	pop    eax
  40716a:	and    BYTE PTR [ebx-0x69691ef2],ch
  407170:	jno    0x40711d
  407172:	sbb    al,0x62
  407174:	(bad)  
  407175:	sahf   
  407176:	in     eax,0xd0
  407178:	adc    DWORD PTR [esi+0x1b],0x62
  40717c:	clc    
  40717d:	xor    ebx,ebx
  40717f:	mov    al,0x7
  407181:	cld    
  407182:	jle    0x4071f2
  407184:	fcmovnbe st,st(0)
  407186:	icebp  
  407187:	push   esi
  407188:	dec    esi
  407189:	test   BYTE PTR [ebx+0x1914719f],cl
  40718f:	push   cs
  407190:	int3   
  407191:	sub    DWORD PTR [eax+0x39f30f64],esi
  407197:	sbb    ebx,edi
  407199:	les    ebx,FWORD PTR [eax-0x59212e7b]
  40719f:	push   ss
  4071a0:	push   ds
  4071a1:	adc    DWORD PTR [ecx],esp
  4071a3:	adc    BYTE PTR [ebp+0x34315c2c],ch
  4071a9:	ins    DWORD PTR es:[edi],dx
  4071aa:	in     al,0x18
  4071ac:	icebp  
  4071ad:	(bad)  
  4071ae:	adc    eax,0x4dc7038b
  4071b3:	lds    edx,FWORD PTR [edi-0x6f]
  4071b6:	dec    ebp
  4071b7:	jmp    0x3187d031
  4071bc:	push   ecx
  4071bd:	fs pop esp
  4071bf:	jbe    0x4071ec
  4071c1:	inc    ecx
  4071c2:	cmp    ch,BYTE PTR [eax+0x37114ca2]
  4071c8:	jne    0x4071c7
  4071ca:	test   DWORD PTR [edx],0xf302e4c
  4071d0:	hlt    
  4071d1:	scas   eax,DWORD PTR es:[edi]
  4071d2:	nop
  4071d3:	push   eax
  4071d4:	push   es
  4071d5:	adc    al,0x26
  4071d7:	in     al,dx
  4071d8:	out    dx,al
  4071d9:	cmp    BYTE PTR [ebx+ebp*4+0x4c],dl
  4071dd:	dec    esi
  4071de:	fstp   TBYTE PTR [edi]
  4071e0:	leave  
  4071e1:	dec    esi
  4071e2:	mov    DWORD PTR [eax],ebx
  4071e4:	push   0xda6db6cf
  4071e9:	ins    DWORD PTR es:[edi],dx
  4071ea:	cmpps  xmm1,XMMWORD PTR [ecx-0x78],0x27
  4071ef:	pop    es
  4071f0:	mov    esp,0x5b5239e7
  4071f5:	int    0x21
  4071f7:	jmp    0x4071f9
  4071f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071fa:	mov    ds:0x33f204bd,eax
  4071ff:	push   0xffffffa8
  407201:	popa   
  407202:	sbb    eax,0xbfdfa1a6
  407207:	mov    ds:0x6a30986,al
  40720c:	stc    
  40720d:	repz add ah,BYTE PTR [ecx+edi*8-0x7a9451ea]
  407215:	test   DWORD PTR [ebp+0x3b],ebx
  407218:	je     0x407262
  40721a:	frstor [eax-0x4d]
  40721d:	stc    
  40721e:	test   al,0x87
  407220:	into   
  407221:	sbb    esp,DWORD PTR [eax]
  407223:	or     eax,0xcf073dbc
  407228:	(bad)  [edx+0x4e248acb]
  40722e:	cmp    BYTE PTR [esi+ecx*4],0xce
  407232:	and    BYTE PTR [eax],0xb3
  407235:	out    0xab,eax
  407237:	pop    edi
  407238:	or     eax,0x66b81e7e
  40723d:	xchg   ecx,eax
  40723e:	and    BYTE PTR [edi],bh
  407240:	mov    DWORD PTR [ebx+0x76],esp
  407243:	sub    eax,0xa11be7d7
  407248:	mov    ebp,DWORD PTR [esp+eax*4+0xcffbae1]
  40724f:	adc    eax,0x32e52815
  407254:	mov    al,ds:0x544edb64
  407259:	push   edi
  40725a:	scas   eax,DWORD PTR es:[edi]
  40725b:	in     al,0x46
  40725d:	cdq    
  40725e:	sar    BYTE PTR [ebx],0xdb
  407261:	cmc    
  407262:	cmp    ecx,edi
  407264:	leave  
  407265:	(bad)  
  407266:	xor    DWORD PTR [esi],ebx
  407268:	mov    esi,0x72901340
  40726d:	xor    ebp,edx
  40726f:	aam    0x92
  407271:	out    0xec,eax
  407273:	ror    DWORD PTR [edx],0xff
  407276:	rcr    BYTE PTR [eax+0x43],1
  407279:	test   edi,0x5537afe7
  40727f:	dec    esi
  407280:	shl    dl,0xeb
  407283:	pop    ds
  407284:	aad    0xe0
  407286:	and    al,0xfd
  407288:	push   0xa1fc6480
  40728d:	jns    0x40729f
  40728f:	das    
  407290:	mov    esp,0x21143c45
  407295:	jg     0x407268
  407297:	push   edi
  407298:	pop    ebp
  407299:	in     eax,0x3a
  40729b:	retf   
  40729c:	xor    esp,edx
  40729e:	repz mov ebp,0xe0fb509
  4072a4:	lahf   
  4072a5:	dec    edx
  4072a6:	pushf  
  4072a7:	xchg   ebx,eax
  4072a8:	pop    ebx
  4072a9:	sbb    BYTE PTR [eax-0xc],bh
  4072ac:	xchg   BYTE PTR [ecx+0x17],ch
  4072af:	xchg   ebx,eax
  4072b0:	mov    bh,0x80
  4072b2:	js     0x4072ff
  4072b4:	pop    ecx
  4072b5:	xor    BYTE PTR ds:0xbbf01c50,bl
  4072bb:	fadd   DWORD PTR [ebp+ebx*4-0x6c8613ae]
  4072c2:	pop    edi
  4072c3:	stos   DWORD PTR es:[edi],eax
  4072c4:	xchg   esi,eax
  4072c5:	jbe    0x4072b9
  4072c7:	and    ch,BYTE PTR [edi]
  4072c9:	les    ebx,FWORD PTR [ebx+ecx*2+0x60]
  4072cd:	cmp    edi,DWORD PTR [edx-0x67]
  4072d0:	mov    ecx,esp
  4072d2:	xchg   ebp,eax
  4072d3:	cdq    
  4072d4:	jle    0x407256
  4072d6:	cmp    BYTE PTR [ebx+0x6f6b5681],dl
  4072dc:	jg     0x40731c
  4072de:	sbb    BYTE PTR [edx+edx*4-0x5feeb66f],bh
  4072e5:	enter  0x1857,0x98
  4072e9:	fnstenv [edi+0x332bdafb]
  4072ef:	out    0x7e,eax
  4072f1:	sub    DWORD PTR [esi+0x1f],esp
  4072f4:	cmp    dh,BYTE PTR [ebx]
  4072f6:	dec    esp
  4072f7:	add    BYTE PTR [esi+edx*4],0xa2
  4072fb:	xor    dh,BYTE PTR [ebx]
  4072fd:	pop    esp
  4072fe:	add    ebp,esp
  407300:	jmp    0x4fbdb
  407305:	cmc    
  407306:	jno    0x4072bd
  407308:	int3   
  407309:	fucomi st,st(7)
  40730b:	inc    edx
  40730c:	jp     0x40738d
  40730e:	xor    ebx,esi
  407310:	inc    ebp
  407311:	int3   
  407312:	cmp    ecx,0x9
  407315:	adc    al,0xa8
  407317:	mov    eax,DWORD PTR [ecx+0x5f]
  40731a:	jp     0x4072f4
  40731c:	dec    ebx
  40731d:	jecxz  0x407314
  40731f:	retf   0x6ad2
  407322:	mov    ds:0xf3a301a4,al
  407327:	mov    eax,ds:0xfeb7480c
  40732c:	shl    edx,0x15
  40732f:	mov    esp,0x7d577706
  407334:	mov    al,ds:0x188dd690
  407339:	(bad)  [ebx-0x41c80b73]
  40733f:	or     eax,0x10240e4a
  407344:	push   ebp
  407345:	cmp    DWORD PTR [ecx+0x10],eax
  407348:	dec    ebp
  407349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40734a:	or     al,0xf7
  40734c:	ret    
  40734d:	and    al,0xb7
  40734f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407350:	push   es
  407351:	(bad)  
  407353:	into   
  407354:	inc    eax
  407355:	call   0xe8058ff2
  40735a:	mov    ch,0xdb
  40735c:	rol    DWORD PTR [ebp+0x576fb48a],cl
  407362:	and    al,0xc8
  407364:	iret   
  407365:	push   eax
  407366:	and    edi,DWORD PTR [eax]
  407368:	mov    BYTE PTR [edx],bh
  40736a:	inc    eax
  40736b:	push   ebp
  40736c:	or     DWORD PTR [esi-0x7f3b335b],0x31fbb3b0
  407376:	icebp  
  407377:	jne    0x4073a6
  407379:	cmp    BYTE PTR ds:0xce2ce11a,bl
  40737f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407380:	lea    edi,ds:0x394b7c56
  407386:	push   edi
  407387:	jne    0x4073e7
  407389:	push   esp
  40738a:	inc    esp
  40738b:	imul   esp
  40738d:	fnstcw WORD PTR [esi+ebx*4]
  407390:	or     al,0x9c
  407392:	xor    esp,edi
  407394:	loope  0x407376
  407396:	jl     0x40736e
  407398:	xchg   esp,eax
  407399:	mov    ds:0xd38e5784,al
  40739e:	xor    dl,ah
  4073a0:	inc    eax
  4073a1:	call   0xecdce5f9
  4073a6:	(bad)  
  4073a7:	gs aad 0xf7
  4073aa:	jle    0x4073ba
  4073ac:	pusha  
  4073ad:	loopne 0x407425
  4073af:	fidiv  WORD PTR [ebx-0x3e]
  4073b2:	test   al,0xf3
  4073b4:	push   ds
  4073b5:	or     eax,0xb8e2659b
  4073ba:	out    0xcb,al
  4073bc:	(bad)  
  4073bd:	outs   dx,BYTE PTR ds:[esi]
  4073be:	(bad)  
  4073bf:	mov    eax,ds:0x64fa23e1
  4073c4:	xlat   BYTE PTR ds:[ebx]
  4073c5:	dec    edx
  4073c6:	xor    DWORD PTR [ebp+0x6819d77c],esp
  4073cc:	inc    edx
  4073cd:	es ds (bad) 
  4073d1:	mov    esi,DWORD PTR [edi-0x2f66ec30]
  4073d7:	jnp    0x4073b5
  4073d9:	neg    BYTE PTR [esi-0x22]
  4073dc:	outs   dx,BYTE PTR ds:[esi]
  4073dd:	aam    0x78
  4073df:	jge    0x4073e2
  4073e1:	retf   0xafd7
  4073e4:	cmp    eax,0xf7813110
  4073e9:	(bad)
  4073ec:	stc    
  4073ed:	pop    ebx
  4073ee:	mov    ebp,0x7d4768b2
  4073f3:	mov    BYTE PTR [eax-0x24],ch
  4073f6:	push   edx
  4073f7:	adc    DWORD PTR ss:[ebp+0x45],ecx
  4073fb:	mov    esp,DWORD PTR [esi+0x402d19ed]
  407401:	aam    0x40
  407403:	cmp    esp,DWORD PTR [ebp+0x67a478b0]
  407409:	dec    ebx
  40740a:	hlt    
  40740b:	pop    ebx
  40740c:	loope  0x4073f3
  40740e:	cmp    eax,0x950e8660
  407413:	mov    ecx,0x1e020d4
  407418:	dec    ebx
  407419:	icebp  
  40741a:	push   ebx
  40741b:	call   0xd477562e
  407420:	cmp    edi,DWORD PTR [esi+ebx*1+0x67]
  407424:	sahf   
  407425:	cdq    
  407426:	sbb    eax,0x65f6479e
  40742b:	and    eax,0x6b2ab48b
  407430:	rcl    cl,1
  407432:	je     0x407449
  407434:	jb     0x40744b
  407436:	aad    0xcd
  407438:	jmp    0x4074a6
  40743a:	add    al,0xbf
  40743c:	hlt    
  40743d:	cmp    al,BYTE PTR [edi+ecx*2-0x62043684]
  407444:	push   cs
  407445:	push   ebp
  407446:	ds ja  0x40743d
  407449:	dec    esi
  40744a:	std    
  40744b:	sbb    DWORD PTR [esi+0x2],edi
  40744e:	adc    ebp,DWORD PTR [edx]
  407450:	pop    ss
  407451:	lods   al,BYTE PTR ds:[esi]
  407452:	icebp  
  407453:	shr    DWORD PTR [edx+0x76],cl
  407456:	loope  0x40747c
  407458:	pop    edi
  407459:	fild   WORD PTR [ebp+esi*8+0x7435c69f]
  407460:	outs   dx,BYTE PTR ds:[esi]
  407461:	xchg   edi,eax
  407462:	retf   
  407463:	ins    BYTE PTR es:[edi],dx
  407464:	push   ss
  407465:	daa    
  407466:	out    dx,al
  407467:	sahf   
  407468:	data16 jbe 0x4074d1
  40746b:	mov    ah,0x6f
  40746d:	adc    al,0x35
  40746f:	or     esi,esp
  407471:	pusha  
  407472:	dec    ecx
  407473:	arpl   cx,bp
  407475:	(bad)  
  407476:	lods   eax,DWORD PTR ds:[esi]
  407477:	jecxz  0x407487
  407479:	xchg   edi,eax
  40747a:	imul   esp,eax,0x2a
  40747d:	jns    0x40741d
  40747f:	js     0x407402
  407481:	pop    es
  407482:	mov    edi,0x1c78c534
  407487:	ja     0x407475
  407489:	sub    DWORD PTR [ebp+0x6d2004ee],esp
  40748f:	bound  esp,QWORD PTR [ebp+0x63bb72db]
  407495:	xchg   edi,eax
  407496:	mov    bh,0xea
  407498:	sti    
  407499:	(bad)  
  40749a:	pop    eax
  40749b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40749c:	mov    bl,0x5
  40749e:	addr16 out dx,al
  4074a0:	ss pop es
  4074a2:	push   es
  4074a3:	jo     0x4074c9
  4074a5:	mov    ebp,0xd5b8fc5c
  4074aa:	sbb    al,0xba
  4074ac:	rol    BYTE PTR [esi],1
  4074ae:	cmp    eax,0x96a241d8
  4074b3:	cli    
  4074b4:	sub    DWORD PTR [eax-0x66],eax
  4074b7:	pop    edx
  4074b8:	retf   0x331
  4074bb:	jo     0x4074ed
  4074bd:	gs test eax,0x7b70fb19
  4074c3:	adc    cl,BYTE PTR [esi-0x13a236]
  4074c9:	jmp    DWORD PTR [edx-0x72]
  4074cc:	inc    ebx
  4074cd:	imul   ecx,DWORD PTR [esi+edi*4],0x29ea7778
  4074d4:	jb     0x407488
  4074d6:	retf   
  4074d7:	lock call 0x5646ddd5
  4074dd:	dec    esp
  4074de:	and    edx,DWORD PTR [ebx+0x3206ee50]
  4074e4:	adc    al,0xd4
  4074e6:	dec    esi
  4074e7:	lods   eax,DWORD PTR ds:[esi]
  4074e8:	add    edi,DWORD PTR [ebx-0x39acd87f]
  4074ee:	pop    esi
  4074ef:	ja     0x40750a
  4074f1:	inc    ebp
  4074f2:	movhps xmm6,QWORD PTR [ecx]
  4074f5:	push   ecx
  4074f6:	mov    ch,0x4c
  4074f8:	xchg   esi,eax
  4074f9:	mov    ebp,0x77055a66
  4074fe:	mov    es,WORD PTR [ebx-0x4e421c62]
  407504:	test   BYTE PTR [edx-0x70686b05],dl
  40750a:	nop    eax
  40750d:	inc    edx
  40750e:	lds    edi,FWORD PTR [esp+ecx*1-0x80]
  407512:	and    ecx,ecx
  407514:	or     DWORD PTR [ebx],ecx
  407516:	pop    ss
  407517:	pop    cx
  407519:	aaa    
  40751a:	dec    edi
  40751b:	out    dx,al
  40751c:	stos   DWORD PTR es:[edi],eax
  40751d:	push   esi
  40751e:	into   
  40751f:	ss daa 
  407521:	lods   al,BYTE PTR ds:[esi]
  407522:	mov    bl,0xff
  407524:	inc    ecx
  407525:	popf   
  407526:	into   
  407527:	dec    ebx
  407528:	daa    
  407529:	add    al,0x6d
  40752c:	bound  eax,QWORD PTR [esi+0x746a1e34]
  407532:	(bad)  
  407533:	cmp    DWORD PTR ds:0x16e2ea00,edi
  407539:	jo     0x40756f
  40753b:	adc    al,0xb2
  40753d:	sub    eax,0x3159427
  407542:	mov    ebp,0x49c24ce3
  407547:	rcr    BYTE PTR [ebx+0x22bdc435],0x8e
  40754e:	lds    ebx,FWORD PTR [ebp-0x6c775b30]
  407554:	mov    dh,0xac
  407556:	aas    
  407557:	mov    edx,0x21bb3ca6
  40755c:	(bad)  
  40755d:	icebp  
  40755e:	jl     0x407558
  407560:	aas    
  407561:	ds push eax
  407563:	pop    ds
  407564:	xchg   ecx,eax
  407565:	xlat   BYTE PTR ds:[ebx]
  407566:	(bad)  [eax]
  407568:	dec    edi
  40756a:	jmp    0xc7978baa
  40756f:	push   gs
  407571:	and    al,0x7d
  407573:	outs   dx,DWORD PTR ds:[esi]
  407574:	arpl   WORD PTR [ecx+0x5b],dx
  407577:	push   esp
  407578:	push   es
  407579:	xchg   edx,eax
  40757a:	adc    al,0x9e
  40757c:	xor    eax,0x31280e2a
  407581:	mov    ecx,edx
  407583:	jmp    0x407570
  407585:	jle    0x4075bb
  407587:	(bad)
  40758c:	enter  0xcf80,0xc8
  407590:	jg     0x407588
  407592:	aaa    
  407593:	xor    al,0x73
  407595:	mov    edx,0x850f1b32
  40759a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40759b:	popf   
  40759c:	jmp    0x4075fb
  40759e:	sub    eax,0x2d43b5e1
  4075a3:	out    dx,al
  4075a4:	cmovle ecx,DWORD PTR [ebx-0x38]
  4075a8:	out    dx,al
  4075a9:	repnz dec edx
  4075ab:	xor    BYTE PTR [ebx],ch
  4075ad:	data16 not BYTE PTR [edx+0x59]
  4075b1:	jne    0x407549
  4075b3:	lods   al,BYTE PTR ds:[esi]
  4075b4:	xor    dh,dl
  4075b6:	pop    edi
  4075b7:	stc    
  4075b8:	jge    0x407592
  4075ba:	(bad)  
  4075bb:	lods   eax,DWORD PTR ds:[esi]
  4075bc:	shl    BYTE PTR [ebx-0x6e],1
  4075bf:	xchg   BYTE PTR [ebx-0x624afcaa],bh
  4075c5:	aas    
  4075c6:	jmp    0xa7f3:0xc6519b
  4075cd:	mov    ecx,0x618e0ac8
  4075d2:	mov    eax,DWORD PTR [ebp+0x29]
  4075d5:	in     eax,0x56
  4075d7:	add    dh,ch
  4075d9:	inc    ecx
  4075da:	(bad)  
  4075db:	pop    edi
  4075dc:	fsub   QWORD PTR [esi]
  4075de:	ss (bad) 
  4075e0:	mov    esi,?
  4075e2:	icebp  
  4075e3:	pop    edi
  4075e4:	jb     0x407607
  4075e6:	xor    ebp,DWORD PTR [esi+0x2b]
  4075e9:	or     esp,DWORD PTR [edx]
  4075eb:	cdq    
  4075ec:	and    eax,0xc4779086
  4075f1:	sub    BYTE PTR [edx-0x2c],dh
  4075f4:	mov    esi,0xa58678e4
  4075f9:	sbb    DWORD PTR [esp+eax*1-0x4a26f6c9],edi
  407600:	cwde   
  407601:	loop   0x40760c
  407603:	adc    eax,0xed4270a9
  407608:	data16 cmc 
  40760a:	or     BYTE PTR [esi],0x4e
  40760d:	xchg   esp,eax
  40760e:	in     eax,0x65
  407610:	sub    ecx,ebx
  407612:	add    eax,0xab756e1
  407617:	lods   eax,DWORD PTR ds:[esi]
  407618:	sbb    esp,ebx
  40761a:	add    al,bl
  40761c:	push   edx
  40761d:	js     0x4075f5
  40761f:	dec    edx
  407620:	sub    al,0x33
  407622:	cs xchg ebp,eax
  407624:	pop    edx
  407625:	retf   0xda59
  407628:	and    al,BYTE PTR [esi-0x56d1d45]
  40762e:	stos   DWORD PTR es:[edi],eax
  40762f:	jg     0x4075be
  407631:	inc    eax
  407632:	js     0x4075f6
  407634:	popf   
  407635:	push   es
  407636:	jae    0x40760e
  407638:	jae    0x40765f
  40763a:	sub    edx,edi
  40763c:	(bad)  
  40763d:	hlt    
  40763e:	dec    eax
  40763f:	cmp    DWORD PTR [ebx],ebx
  407641:	jne    0x4075e8
  407643:	out    dx,eax
  407644:	mov    cl,dh
  407646:	imul   ecx,DWORD PTR [edi+0x570858f0],0x655ba624
  407650:	addr16 push esi
  407652:	mov    al,ds:0x8948095
  407657:	int    0xe0
  407659:	sbb    eax,0xd1993403
  40765e:	jge    0x40766e
  407660:	mov    ah,0xeb
  407662:	xor    BYTE PTR [eax-0x2496df21],cl
  407668:	neg    BYTE PTR [edx-0x2e]
  40766b:	xchg   esi,eax
  40766c:	adc    eax,0xeb2818a3
  407671:	and    DWORD PTR [eax+0x16],eax
  407674:	lds    eax,FWORD PTR [ebx+ecx*8+0xd3a8b2a]
  40767b:	xchg   esi,eax
  40767c:	fadd   QWORD PTR [edi+ecx*4+0x22]
  407680:	outs   dx,BYTE PTR ds:[esi]
  407681:	xchg   edi,eax
  407682:	int3   
  407683:	xor    DWORD PTR [esi-0x18],edi
  407686:	sub    eax,0xc1328768
  40768b:	or     eax,0x7f88545b
  407690:	fadd   DWORD PTR [ecx+ebx*2]
  407693:	mov    eax,ds:0xd3b60506
  407698:	ret    
  407699:	inc    esi
  40769a:	xchg   edi,eax
  40769b:	add    BYTE PTR [ecx],dh
  40769d:	lahf   
  40769e:	fimul  WORD PTR [edi]
  4076a0:	pop    edi
  4076a1:	jg     0x4076c6
  4076a3:	xchg   ecx,eax
  4076a4:	add    eax,0x18b2fe9c
  4076a9:	pusha  
  4076aa:	fdiv   QWORD PTR [ebx-0x2840ef29]
  4076b0:	xchg   esi,eax
  4076b1:	push   edi
  4076b2:	int    0x6f
  4076b4:	loop   0x4076e5
  4076b6:	cdq    
  4076b7:	dec    esp
  4076b8:	outs   dx,DWORD PTR ds:[esi]
  4076b9:	inc    edi
  4076ba:	test   BYTE PTR [edx],0x68
  4076bd:	jb     0x407710
  4076bf:	fwait
  4076c0:	out    dx,al
  4076c1:	fdivr  st(0),st
  4076c3:	inc    ecx
  4076c4:	lock pop esp
  4076c6:	fstp   DWORD PTR [eax-0x7]
  4076c9:	shl    DWORD PTR [esi+0x73],cl
  4076cc:	adc    ebx,DWORD PTR [edi]
  4076ce:	xlat   BYTE PTR ds:[ebx]
  4076cf:	cmp    eax,0xe9354868
  4076d4:	fcmovnu st,st(6)
  4076d6:	jmp    0x9fa0:0x136e97d9
  4076dd:	mov    esi,0xaba0f9f8
  4076e2:	xchg   esi,eax
  4076e3:	pop    eax
  4076e4:	jae    0x407707
  4076e6:	out    0xb2,eax
  4076e8:	jmp    0xaa01:0x2c0aedf9
  4076ef:	cld    
  4076f0:	test   esp,ecx
  4076f2:	mov    dh,0xe1
  4076f4:	aaa    
  4076f5:	fs adc bh,bh
  4076f8:	pushf  
  4076f9:	dec    ebx
  4076fa:	(bad)
  4076fd:	mov    cl,0x8c
  4076ff:	xor    bh,0x54
  407702:	cmp    al,BYTE PTR [ebp-0x4e68129c]
  407708:	rcl    BYTE PTR [ebx-0x397496b9],1
  40770e:	push   ss
  40770f:	mov    ah,0x29
  407711:	aad    0x55
  407713:	fnstsw WORD PTR [eax-0x28dc4d65]
  407719:	leave  
  40771a:	clc    
  40771b:	out    dx,eax
  40771c:	stos   DWORD PTR es:[edi],eax
  40771d:	mov    cl,0x8c
  40771f:	jl     0x407793
  407721:	iret   
  407722:	push   eax
  407723:	pop    es
  407724:	imul   ebp,esp,0xffffffbe
  407727:	daa    
  407728:	aam    0xd8
  40772a:	in     eax,0x14
  40772c:	xchg   esp,eax
  40772d:	rdtsc  
  40772f:	jns    0x407795
  407731:	mov    esp,0x70e749b0
  407736:	dec    edx
  407737:	mov    BYTE PTR [ebx],dh
  407739:	pushf  
  40773a:	mov    ah,0x79
  40773c:	inc    edi
  40773d:	jbe    0x407702
  40773f:	fild   DWORD PTR [edx+0x7d]
  407742:	pop    ecx
  407743:	ss cs inc esi
  407746:	jg     0x407715
  407748:	sub    BYTE PTR ds:0xdea0a850,ah
  40774e:	or     BYTE PTR [esi+0x4c93ea5e],bl
  407754:	popa   
  407755:	xor    DWORD PTR [ecx+0xb],eax
  407758:	pop    ss
  407759:	xor    ecx,DWORD PTR [edi]
  40775b:	push   edx
  40775c:	pop    ss
  40775d:	add    BYTE PTR [edx],ch
  40775f:	js     0x407722
  407761:	(bad)  
  407762:	mov    ah,0x36
  407764:	adc    BYTE PTR [ebx-0x5f84b0cd],bl
  40776a:	sub    al,0x68
  40776c:	loopne 0x40778f
  40776e:	out    dx,al
  40776f:	mov    edx,0x4ceb982
  407774:	add    al,0xce
  407776:	in     al,0x23
  407778:	rcr    edi,1
  40777a:	mov    cl,0x10
  40777c:	sbb    ah,dl
  40777e:	dec    edi
  40777f:	std    
  407780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407781:	call   0x4b7c3998
  407786:	mov    al,ds:0xe99ef75a
  40778b:	out    0xae,eax
  40778d:	add    eax,0xc800988d
  407792:	pop    edx
  407793:	cmp    al,0xe6
  407795:	sbb    DWORD PTR [eax],edi
  407797:	mov    ah,0xa
  407799:	ficomp DWORD PTR [ebp+0x2e53fd9]
  40779f:	sub    esi,eax
  4077a1:	jecxz  0x4077b4
  4077a3:	mov    cl,0x8e
  4077a5:	ja     0x4077c3
  4077a7:	(bad)  
  4077a8:	push   ss
  4077a9:	(bad)  
  4077aa:	xchg   ebx,eax
  4077ab:	sbb    ch,bl
  4077ad:	clc    
  4077ae:	bound  ebp,QWORD PTR [ecx-0x34]
  4077b1:	icebp  
  4077b2:	dec    ecx
  4077b3:	inc    esi
  4077b4:	ss cmc 
  4077b6:	push   edi
  4077b7:	inc    edx
  4077b8:	cld    
  4077b9:	loop   0x4077ef
  4077bb:	fisttp WORD PTR [edx]
  4077bd:	fwait
  4077be:	ss sbb al,0x63
  4077c1:	lahf   
  4077c2:	(bad)
  4077c5:	jb     0x4077f5
  4077c7:	ds dec ecx
  4077c9:	mov    bh,0x59
  4077cb:	test   edi,0x1fe33b73
  4077d1:	adc    eax,esp
  4077d3:	aam    0xc4
  4077d5:	mov    al,0xbf
  4077d7:	int3   
  4077d8:	test   BYTE PTR ds:0xced81903,bh
  4077de:	pushf  
  4077df:	add    DWORD PTR [eax+0x42dcde0c],edi
  4077e5:	shl    BYTE PTR [esi+0x7b],cl
  4077e8:	pop    ebx
  4077e9:	loope  0x40785d
  4077eb:	pop    ebp
  4077ec:	mov    esi,0x923a1569
  4077f1:	iret   
  4077f2:	mov    ds:0x191a3ce0,eax
  4077f7:	mov    ecx,0x6132dfae
  4077fc:	dec    esp
  4077fd:	sahf   
  4077fe:	outs   dx,BYTE PTR ds:[esi]
  4077ff:	gs xchg ecx,eax
  407801:	mov    dl,0xd5
  407803:	mov    ah,0xfb
  407805:	pop    ss
  407806:	pop    ecx
  407807:	cs popf 
  407809:	cmp    ah,BYTE PTR [ecx]
  40780b:	adc    DWORD PTR [esi+0x2e],eax
  40780e:	ss aam 0x8e
  407811:	fstp   st(6)
  407813:	lds    ebx,FWORD PTR [ebp+0x4c849eea]
  407819:	pushf  
  40781a:	out    dx,al
  40781b:	or     DWORD PTR gs:[edx+0x7e],edx
  40781f:	fnstsw WORD PTR [edx-0x64]
  407822:	ja     0x4077c7
  407824:	push   esp
  407825:	dec    edi
  407826:	(bad)  
  407828:	mov    edi,0x7bd59d3a
  40782d:	stos   DWORD PTR es:[edi],eax
  40782e:	mov    esi,0x81f180b7
  407833:	gs push edi
  407835:	fdiv   DWORD PTR [ebx]
  407837:	out    dx,al
  407838:	retf   0x5df9
  40783b:	adc    dl,BYTE PTR [ebx+0x2220da24]
  407841:	inc    esp
  407842:	test   DWORD PTR [ecx],ecx
  407844:	sub    DWORD PTR [esi+0x21c555b6],esi
  40784a:	mov    edx,0xac7dc5a5
  40784f:	in     al,dx
  407850:	pop    ds
  407851:	bound  edi,QWORD PTR [ebx-0x44fa9591]
  407857:	or     DWORD PTR [edi-0x7d],ecx
  40785a:	cs pop esp
  40785c:	mov    cl,BYTE PTR [edx+0x29b7b86e]
  407862:	adc    al,0x51
  407864:	sar    edx,cl
  407866:	xor    dl,bl
  407868:	clc    
  407869:	pop    esp
  40786a:	out    0xe3,al
  40786c:	pop    esp
  40786d:	jbe    0x4078d1
  40786f:	lea    eax,[eax+0x17]
  407872:	add    ah,BYTE PTR [edi+ebx*4+0x5132acbc]
  407879:	dec    eax
  40787a:	jge    0x4078ed
  40787c:	or     ebx,DWORD PTR [ebx]
  40787e:	test   BYTE PTR [ecx],bl
  407880:	les    edi,FWORD PTR [esi-0x4f06ef28]
  407886:	adc    esi,edi
  407888:	xchg   ebx,eax
  407889:	jno    0x40782c
  40788b:	sbb    edx,esp
  40788d:	idiv   dl
  40788f:	dec    ebx
  407890:	daa    
  407891:	xor    DWORD PTR [edx-0x64],edi
  407894:	add    al,BYTE PTR [ecx-0x22]
  407897:	data16 xchg BYTE PTR [esi+0x809e4a2],bh
  40789e:	pop    esp
  40789f:	dec    edi
  4078a0:	loop   0x4078ac
  4078a2:	and    dl,ch
  4078a4:	xchg   ecx,eax
  4078a5:	or     al,0xa3
  4078a7:	and    eax,0xa5d0d732
  4078ac:	cmp    al,0x71
  4078ae:	push   esi
  4078af:	fistp  DWORD PTR [eax]
  4078b1:	xlat   BYTE PTR ds:[ebx]
  4078b2:	sub    eax,0x3170c8b6
  4078b7:	mov    ds:0x669c2f3f,al
  4078bc:	nop
  4078bd:	push   esi
  4078be:	cli    
  4078bf:	xchg   DWORD PTR [ebp+0x38fabf17],eax
  4078c5:	pop    esi
  4078c6:	xchg   esi,eax
  4078c7:	and    DWORD PTR [ecx-0x136fc03e],ebx
  4078cd:	retf   0x1c7e
  4078d0:	out    dx,al
  4078d1:	mov    dh,0xd9
  4078d3:	cs sbb eax,0x4f9c4445
  4078d9:	daa    
  4078da:	lods   al,BYTE PTR ds:[esi]
  4078db:	adc    DWORD PTR [ecx-0x2a],ebx
  4078de:	or     eax,0x2bb232dc
  4078e3:	in     eax,dx
  4078e4:	push   cs
  4078e5:	mov    ebx,0x1f39a8fe
  4078ea:	jmp    0x83b5:0x7cddc6e1
  4078f1:	mov    al,0xbe
  4078f3:	add    dh,ch
  4078f5:	sahf   
  4078f6:	arpl   WORD PTR [esi+0x43],si
  4078f9:	stos   BYTE PTR es:[edi],al
  4078fa:	xchg   ebp,eax
  4078fb:	xchg   ebp,eax
  4078fc:	int    0xa8
  4078fe:	xchg   esi,eax
  4078ff:	sub    al,0x41
  407901:	enter  0x777d,0x25
  407905:	cmp    al,0x10
  407907:	fld    st(5)
  407909:	mov    ebp,0xb3c4ec2c
  40790e:	adc    BYTE PTR [eax],dl
  407910:	sbb    BYTE PTR [ebp-0x4],dh
  407913:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407914:	sbb    al,0x6c
  407916:	fist   WORD PTR [esi+0xc580ebc]
  40791c:	call   0xe6c2:0xbe1c6556
  407923:	cli    
  407924:	mov    BYTE PTR [ecx-0x5e],dh
  407927:	or     edi,DWORD PTR ds:0xc83cc50e
  40792d:	sub    al,0x1b
  40792f:	mov    edi,0x63cc7733
  407934:	pop    ebx
  407935:	cmp    ebp,DWORD PTR [edx+0x27e83ce5]
  40793b:	fchs   
  40793d:	sbb    al,al
  40793f:	fcomp  QWORD PTR [eax+0x21fe2482]
  407945:	push   esi
  407946:	in     eax,0x4d
  407948:	test   DWORD PTR [ebp-0x6aceb22],esp
  40794e:	ret    0xb262
  407951:	rcl    ah,cl
  407953:	xchg   edi,eax
  407954:	sti    
  407955:	daa    
  407956:	call   0xbbac:0xaf7be92a
  40795d:	mov    dh,0x33
  40795f:	pushf  
  407960:	cli    
  407961:	mov    eax,0x5491c078
  407966:	adc    BYTE PTR [eax+0x2e],bl
  407969:	pop    ds
  40796a:	mov    DWORD PTR [ebp+0x3daa568c],esp
  407970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407971:	cmp    al,0x13
  407973:	mov    ebp,0x7571c8c1
  407978:	push   0xffffffc4
  40797a:	and    ebx,edx
  40797c:	stos   DWORD PTR es:[edi],eax
  40797d:	dec    ebx
  40797e:	outs   dx,DWORD PTR ds:[esi]
  40797f:	ins    BYTE PTR es:[edi],dx
  407980:	jo     0x407976
  407982:	mov    bl,0x72
  407984:	push   ebx
  407985:	enter  0x2acf,0xad
  407989:	and    DWORD PTR [edi],edx
  40798b:	adc    DWORD PTR [esi+0x407995cd],0x51
  407992:	push   0xd063ab33
  407997:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407998:	sbb    BYTE PTR [ecx+edx*2+0x7facc180],0xb1
  4079a0:	push   ss
  4079a1:	imul   eax,DWORD PTR [ebp+ebx*1+0x1],0xeb0aed2f
  4079a9:	inc    ebp
  4079aa:	neg    BYTE PTR [ebx]
  4079ac:	and    eax,esp
  4079ae:	mov    edi,0x966b56ca
  4079b3:	add    al,0x83
  4079b5:	jno    0x4079dd
  4079b7:	dec    ebx
  4079b8:	sbb    DWORD PTR ds:[ecx+0x57f53d7a],ebp
  4079bf:	mov    eax,0xcc15f694
  4079c4:	sahf   
  4079c5:	or     al,0x53
  4079c7:	ja     0x407a13
  4079c9:	in     al,0x7b
  4079cb:	push   es
  4079cc:	jl     0x4079dd
  4079ce:	data16 mov bh,0x5d
  4079d1:	loop   0x407964
  4079d3:	lods   al,BYTE PTR ds:[esi]
  4079d4:	pusha  
  4079d5:	mov    ebp,0xd7e2d94
  4079da:	jge    0x40796d
  4079dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079dd:	xor    eax,0xc2ee364f
  4079e2:	mov    ebp,DWORD PTR [esi-0x67]
  4079e5:	stc    
  4079e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079e7:	retf   0x5fd
  4079ea:	dec    esp
  4079eb:	mov    cl,0x34
  4079ed:	cwde   
  4079ee:	sbb    dl,BYTE PTR [eax-0xa]
  4079f1:	jp     0x407a52
  4079f3:	ds imul ebp,edi,0x1d
  4079f7:	sbb    DWORD PTR [ebx+0x4d8bf445],ecx
  4079fd:	hlt    
  4079fe:	sub    eax,ecx
  407a00:	mov    DWORD PTR [ebp-0xc],eax
  407a03:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  407a0a:	mov    eax,DWORD PTR [ebp-0x1c]
  407a0d:	mov    ecx,DWORD PTR [ebp-0x1c]
  407a10:	sub    eax,ecx
  407a12:	mov    DWORD PTR [ebp-0x1c],eax
  407a15:	or     DWORD PTR [ebp-0x1c],0xf89c85d9
  407a1c:	mov    eax,DWORD PTR [ebp-0x20]
  407a1f:	mov    ecx,DWORD PTR [ebp-0x20]
  407a22:	sub    eax,ecx
  407a24:	mov    DWORD PTR [ebp-0x20],eax
  407a27:	mov    eax,DWORD PTR [ebp-0x2c]
  407a2a:	mov    ecx,DWORD PTR [ebp-0x20]
  407a2d:	mov    esi,0x7510899
  407a32:	xor    eax,esi
  407a34:	mov    edi,0x3272e0
  407a39:	add    eax,edi
  407a3b:	or     eax,ecx
  407a3d:	mov    DWORD PTR [ebp-0x20],eax
  407a40:	mov    eax,DWORD PTR [ebp-0x4]
  407a43:	mov    ecx,DWORD PTR [ebp-0x4]
  407a46:	jmp    0x409df0
  407a4b:	clc    
  407a4c:	mov    dh,0xeb
  407a4e:	cmp    DWORD PTR [ebx+0x707b9c77],0x2a37e350
  407a58:	ja     0x4079fd
  407a5a:	fsub   DWORD PTR [ebx-0x1a8585c4]
  407a60:	pop    edi
  407a61:	jp     0x407add
  407a63:	icebp  
  407a64:	xchg   ecx,eax
  407a65:	mov    ebx,0x28f4da1f
  407a6a:	idiv   esi
  407a6c:	mov    cl,0x24
  407a6f:	into   
  407a70:	arpl   WORD PTR [ecx],cx
  407a72:	pop    ds
  407a73:	jmp    FWORD PTR [eax]
  407a75:	pop    esp
  407a76:	xor    edi,DWORD PTR [eax]
  407a78:	or     ebp,ecx
  407a7a:	pushf  
  407a7b:	cmp    BYTE PTR [edx-0x52d067c2],ch
  407a81:	test   al,0xf8
  407a83:	pop    esi
  407a84:	xchg   ecx,eax
  407a85:	sbb    al,0x8
  407a87:	sbb    eax,0x63b7b70a
  407a8c:	lods   eax,DWORD PTR ds:[esi]
  407a8d:	inc    eax
  407a8e:	loop   0x407b03
  407a90:	mov    eax,0x618a1d48
  407a95:	daa    
  407a96:	mov    esp,0xc9fd71b9
  407a9b:	rcr    BYTE PTR [ebx-0x4bdd1f7],1
  407aa1:	inc    ecx
  407aa2:	or     al,0xa2
  407aa4:	pop    edi
  407aa5:	pop    edi
  407aa6:	ss xchg ecx,eax
  407aa8:	push   edi
  407aa9:	push   esp
  407aaa:	add    ebp,DWORD PTR [edx-0x64eb06e3]
  407ab0:	mov    bl,0xdf
  407ab2:	push   0x4dfbb017
  407ab7:	bound  esi,QWORD PTR [edi+0x21]
  407aba:	loopne 0x407af6
  407abc:	xchg   ebx,eax
  407abd:	jmp    esp
  407abf:	test   DWORD PTR [ebp+edi*8+0x382884d6],ebp
  407ac6:	lds    edx,FWORD PTR [ebp+0x17db456a]
  407acc:	and    esi,DWORD PTR [eax]
  407ace:	xor    eax,0x9e5bb65a
  407ad3:	push   ss
  407ad4:	int3   
  407ad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ad6:	shl    DWORD PTR [ecx+edx*8-0x3f],0xe4
  407adb:	push   0xffffffb2
  407add:	mov    al,ds:0xa2413e6f
  407ae2:	mov    ebx,0xb8640793
  407ae7:	mov    ch,BYTE PTR [ecx-0x35b64827]
  407aed:	jne    0x407aa5
  407aef:	adc    bh,dl
  407af1:	fistp  QWORD PTR [ebx+0x71]
  407af4:	mov    ds:0x5f817063,eax
  407af9:	ins    DWORD PTR es:[edi],dx
  407afa:	in     al,0x29
  407afc:	or     BYTE PTR [ecx+0x5281183c],0xd5
  407b03:	mov    dl,0xba
  407b05:	jle    0x407b30
  407b07:	out    0x1b,al
  407b09:	inc    esi
  407b0a:	popw   ds
  407b0c:	sbb    al,0xc3
  407b0e:	mov    BYTE PTR [edi-0x2d52bc58],dh
  407b14:	push   ds
  407b15:	fsubr  QWORD PTR [ebx+0x4679d018]
  407b1b:	add    BYTE PTR [ecx],bl
  407b1d:	shl    BYTE PTR [ecx-0x7633ae5d],cl
  407b23:	mov    esp,0xb0b34a45
  407b28:	stos   DWORD PTR es:[edi],eax
  407b29:	lahf   
  407b2a:	xchg   BYTE PTR [edx+0x2cd692b8],bl
  407b30:	cs in  eax,dx
  407b32:	int3   
  407b33:	push   ss
  407b34:	dec    ecx
  407b35:	push   ebx
  407b36:	sti    
  407b37:	xchg   ebx,eax
  407b38:	mov    WORD PTR ds:[edx-0x3b939d99],ds
  407b3f:	stos   DWORD PTR es:[edi],eax
  407b40:	inc    ebp
  407b41:	add    BYTE PTR [esi-0x3b],dl
  407b44:	mov    esi,0xcb64fa1c
  407b49:	in     al,0x4d
  407b4b:	xchg   esi,eax
  407b4c:	retf   
  407b4d:	es aam 0x71
  407b50:	stc    
  407b51:	sbb    dl,BYTE PTR [esi-0xc]
  407b54:	out    dx,eax
  407b55:	scas   al,BYTE PTR es:[edi]
  407b56:	stos   DWORD PTR es:[edi],eax
  407b57:	mov    ds:0x362ca21e,eax
  407b5c:	dec    esi
  407b5d:	inc    ecx
  407b5e:	mov    BYTE PTR [ebx],ah
  407b60:	xchg   edi,eax
  407b61:	fistp  QWORD PTR [esi+0x782d345f]
  407b67:	je     0x407bbe
  407b69:	mov    edx,0x3f24c74b
  407b6e:	(bad)  
  407b6f:	adc    eax,0xfff7aed7
  407b74:	sbb    ah,bh
  407b76:	inc    edx
  407b78:	mov    bh,0xfc
  407b7a:	xor    al,0x15
  407b7c:	jmp    0x370d:0x313e99cc
  407b83:	adc    BYTE PTR [eax-0x187f408b],0xf2
  407b8a:	inc    DWORD PTR [edx-0x76]
  407b8d:	jno    0x407b3a
  407b8f:	inc    edx
  407b90:	sbb    BYTE PTR [esi+0x372d92f4],bh
  407b96:	xor    bl,BYTE PTR [eax]
  407b98:	pusha  
  407b99:	or     cl,BYTE PTR [eax+ebx*8+0x25830c1f]
  407ba0:	xor    DWORD PTR [ebp-0x5f],ebx
  407ba3:	lods   eax,DWORD PTR ds:[esi]
  407ba4:	pop    ds
  407ba5:	enter  0x7978,0x86
  407ba9:	je     0x407bb5
  407bab:	(bad)
  407bae:	jmp    0x407b7e
  407bb0:	pop    eax
  407bb1:	push   edx
  407bb2:	pop    ecx
  407bb3:	push   esi
  407bb4:	jmp    0x504d:0x7a382e51
  407bbb:	add    edx,DWORD PTR [ebp+ebp*2-0x1d]
  407bbf:	push   0x40
  407bc1:	stos   BYTE PTR es:[edi],al
  407bc2:	cmp    eax,0xe6a2dae5
  407bc7:	fidivr WORD PTR [ebx]
  407bc9:	dec    esp
  407bca:	push   eax
  407bcb:	push   esi
  407bcc:	add    al,0xc
  407bce:	jmp    0x407b8a
  407bd0:	outs   dx,BYTE PTR ds:[esi]
  407bd1:	ds call 0x4bd9:0x950d1f68
  407bd9:	popf   
  407bda:	cld    
  407bdb:	lock mov ecx,DWORD PTR [edi-0x5f15a5f7]
  407be2:	inc    esi
  407be3:	(bad)
  407be7:	and    DWORD PTR [ebx+0x1ea5830f],ebp
  407bed:	xchg   ecx,eax
  407bee:	dec    ebx
  407bef:	or     al,0xb0
  407bf1:	jmp    0x407bdf
  407bf3:	dec    ecx
  407bf4:	outs   dx,BYTE PTR ds:[esi]
  407bf5:	push   ecx
  407bf6:	xchg   edi,eax
  407bf7:	(bad)  
  407bf8:	jg     0x407c43
  407bfa:	mov    ecx,0x2cda5b87
  407bff:	out    dx,eax
  407c00:	pop    ebx
  407c01:	loop   0x407c57
  407c03:	test   eax,0xc11dde35
  407c08:	mov    esp,0x5bf0a550
  407c0d:	ss cmp eax,0x7564a8d1
  407c13:	gs in  al,0x53
  407c16:	ins    DWORD PTR es:[edi],dx
  407c17:	sbb    DWORD PTR [edx-0x4d0d0384],ebx
  407c1d:	xchg   esi,eax
  407c1e:	mov    cl,0x14
  407c20:	mov    al,ds:0x265112ef
  407c25:	mov    esi,0x50b663dd
  407c2a:	inc    edx
  407c2b:	jo     0x407c26
  407c2d:	cs cwde 
  407c2f:	pop    es
  407c30:	aaa    
  407c31:	jbe    0x407c39
  407c33:	or     dl,BYTE PTR [ebp+ebx*4+0x33]
  407c37:	nop
  407c38:	sbb    eax,0x789808c6
  407c3d:	aad    0x56
  407c3f:	cmp    DWORD PTR [ebp-0x53],esi
  407c42:	fwait
  407c43:	adc    BYTE PTR [esi],bh
  407c45:	mul    al
  407c47:	addr16 adc ebx,ebp
  407c4a:	jo     0x407cad
  407c4c:	jl     0x407c05
  407c4e:	jae    0x407cbf
  407c50:	ficom  DWORD PTR [ebp+0x1d45ea32]
  407c56:	pop    ecx
  407c57:	push   ebx
  407c58:	in     al,0x26
  407c5a:	ror    DWORD PTR [ebx+0x10f53831],0xd3
  407c61:	or     esi,DWORD PTR [esp+0x65]
  407c65:	ss inc ebp
  407c67:	and    esi,DWORD PTR ds:0xc1258137
  407c6d:	push   edi
  407c6e:	pop    edi
  407c6f:	push   ebx
  407c70:	jge    0x407c4f
  407c72:	aad    0xac
  407c74:	lods   eax,DWORD PTR ds:[esi]
  407c75:	and    edx,0xffffffb6
  407c78:	pop    esi
  407c79:	xor    ebx,DWORD PTR [ecx+0x71]
  407c7c:	fistp  WORD PTR [eax+0x40bfd811]
  407c82:	or     BYTE PTR [esi+0x47],ch
  407c85:	xor    eax,0x6d805836
  407c8a:	ret    
  407c8b:	add    al,0xe6
  407c8d:	xor    DWORD PTR [esi+0x62ce5328],0x94ca9d23
  407c97:	dec    ebp
  407c98:	vmread ecx,ebx
  407c9b:	jge    0x407c98
  407c9d:	test   eax,0xc2f20f56
  407ca2:	int3   
  407ca3:	mov    edx,0xe675e833
  407ca8:	leave  
  407ca9:	(bad)  
  407cab:	lahf   
  407cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cad:	fwait
  407cae:	movhps xmm6,QWORD PTR [eax]
  407cb1:	je     0x407d13
  407cb3:	xor    al,0x9f
  407cb5:	jnp    0x407cb4
  407cb7:	in     eax,dx
  407cb8:	xor    eax,0x51623095
  407cbd:	aad    0x93
  407cbf:	shr    BYTE PTR [ecx+esi*2-0x7fecb5c7],cl
  407cc6:	enter  0x8f3e,0xf9
  407cca:	adc    dl,BYTE PTR [ecx+eax*1+0x7054b74a]
  407cd1:	in     eax,0x67
  407cd3:	out    0x87,al
  407cd5:	daa    
  407cd6:	das    
  407cd7:	cmp    BYTE PTR [edi-0x6d1ccbde],dh
  407cdd:	cwde   
  407cde:	push   esp
  407cdf:	fcmovb st,st(2)
  407ce1:	ror    DWORD PTR [edx-0x7f],1
  407ce4:	add    BYTE PTR [eax+0x5c439858],ah
  407cea:	and    eax,0x84954dd0
  407cef:	in     eax,0x19
  407cf1:	jno    0x407d07
  407cf3:	pop    eax
  407cf4:	(bad)  
  407cf5:	sahf   
  407cf6:	cmp    dh,dl
  407cf8:	adc    ah,BYTE PTR [ebx-0x36513421]
  407cfe:	jb     0x407ced
  407d00:	push   es
  407d01:	test   BYTE PTR [edx+0x3c],dh
  407d04:	push   es
  407d05:	fisub  WORD PTR [esi]
  407d07:	mov    BYTE PTR [ebx],dl
  407d09:	and    BYTE PTR [ebx+0x7e2274e6],al
  407d0f:	test   BYTE PTR [ebx+0x6f50b34f],ch
  407d15:	pusha  
  407d16:	loope  0x407caa
  407d18:	ss pop ecx
  407d1a:	sbb    al,bl
  407d1c:	out    0xfa,eax
  407d1e:	or     al,BYTE PTR [ecx*8-0x46ea7af4]
  407d25:	pop    ebp
  407d26:	arpl   bp,bx
  407d28:	mov    al,ds:0x8af98a64
  407d2d:	lock nop
  407d2f:	loop   0x407d5f
  407d31:	mov    ds:0xa6e62546,al
  407d36:	xlat   BYTE PTR ds:[ebx]
  407d37:	cmp    cl,BYTE PTR [eax]
  407d39:	cmp    ebx,0x6b
  407d3c:	dec    esi
  407d3d:	mov    bh,0xea
  407d3f:	push   esi
  407d40:	pop    ds
  407d41:	mov    ds,WORD PTR [esi+0x4e5e2afd]
  407d47:	jl     0x407cce
  407d49:	enter  0xe1a5,0xfa
  407d4d:	in     eax,dx
  407d4e:	inc    edx
  407d4f:	push   ss
  407d50:	int3   
  407d51:	jnp    0x407d23
  407d53:	fcmovu st,st(4)
  407d55:	hlt    
  407d56:	sub    eax,0x622cf8e5
  407d5b:	mov    ah,0x53
  407d5d:	sub    bl,BYTE PTR [esi]
  407d5f:	mov    al,ds:0x498d957d
  407d64:	iret   
  407d65:	stos   BYTE PTR es:[edi],al
  407d66:	dec    edx
  407d67:	ins    DWORD PTR es:[edi],dx
  407d68:	stos   DWORD PTR es:[edi],eax
  407d69:	cmp    eax,0x2137a0ef
  407d6e:	std    
  407d6f:	clc    
  407d70:	aas    
  407d71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d72:	fadd   QWORD PTR [esi-0x70]
  407d75:	pushf  
  407d76:	mov    cl,0x59
  407d78:	cmp    DWORD PTR [edx],0xffffffa3
  407d7b:	pushf  
  407d7c:	fdiv   QWORD PTR [edx-0x2a1337da]
  407d82:	inc    edx
  407d83:	add    edx,DWORD PTR [edi+0x7d]
  407d86:	jne    0x407deb
  407d88:	leave  
  407d89:	stos   BYTE PTR es:[edi],al
  407d8a:	lock xor ebp,DWORD PTR [ebx+ebp*4+0xb5ce8fb]
  407d92:	popa   
  407d93:	sub    dl,0x28
  407d96:	fist   WORD PTR [ecx+ebp*1-0x46192f8e]
  407d9d:	mov    dl,0x8b
  407d9f:	cli    
  407da0:	adc    DWORD PTR [edx],ecx
  407da2:	pop    eax
  407da3:	out    dx,al
  407da4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407da5:	inc    ebx
  407da6:	lods   eax,DWORD PTR ds:[esi]
  407da7:	mov    BYTE PTR [ecx],ch
  407da9:	sbb    ecx,DWORD PTR [edx-0x1d]
  407dac:	pusha  
  407dad:	sub    al,0x56
  407daf:	dec    ecx
  407db0:	mov    WORD PTR [esi],cs
  407db2:	push   eax
  407db3:	retf   0xf6e2
  407db6:	pop    ds
  407db7:	jno    0x407dc9
  407db9:	shr    BYTE PTR [edi+0xa],0xb4
  407dbd:	mov    dl,0xf4
  407dbf:	retf   
  407dc0:	rcl    DWORD PTR [ebx-0x33],0x62
  407dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dc5:	mov    eax,0xac19a8cf
  407dca:	or     DWORD PTR [esi+0x3c],esi
  407dcd:	mov    dl,BYTE PTR [ecx+ebx*2+0x7a]
  407dd1:	ret    
  407dd2:	dec    edi
  407dd3:	cmc    
  407dd4:	jb     0x407d82
  407dd6:	mov    al,ds:0xe202c30f
  407ddb:	daa    
  407ddc:	adc    DWORD PTR [ebp+0x7c],edx
  407ddf:	xor    edx,DWORD PTR [ecx]
  407de1:	dec    esp
  407de2:	push   0x62
  407de4:	faddp  st(3),st
  407de6:	inc    esp
  407de7:	cdq    
  407de8:	fcom   QWORD PTR [ebp+esi*1-0x3b]
  407dec:	add    esi,0x42
  407def:	sbb    dh,ah
  407df1:	jo     0x407e2f
  407df3:	out    dx,eax
  407df4:	mov    ds:0x844a0deb,al
  407df9:	mov    dl,0x36
  407dfb:	loop   0x407dff
  407dfd:	xchg   esi,eax
  407dfe:	and    BYTE PTR [ebp+0x45],bl
  407e01:	loop   0x407e20
  407e03:	fisub  WORD PTR [edx+0x7a]
  407e06:	add    DWORD PTR [eax],ebx
  407e08:	mov    BYTE PTR [edi-0x7c1f849a],dl
  407e0e:	addr16 pop es
  407e10:	push   ecx
  407e11:	adc    BYTE PTR ds:0xa2d86ee,bh
  407e17:	test   DWORD PTR [edx+ebp*1-0x5888bb4b],edx
  407e1e:	mov    al,0xcd
  407e20:	test   eax,0x19667cd0
  407e25:	cmp    cl,al
  407e27:	pushf  
  407e28:	aam    0x12
  407e2a:	aaa    
  407e2b:	add    cl,BYTE PTR [edi]
  407e2d:	sub    al,bl
  407e2f:	jp     0x407dc9
  407e31:	cld    
  407e32:	mov    dh,0x7c
  407e34:	jg     0x407dc3
  407e36:	loopne 0x407ea4
  407e38:	and    DWORD PTR [ebx+eax*2],0x65
  407e3c:	cmp    BYTE PTR [edi],dl
  407e3e:	std    
  407e3f:	(bad)  
  407e41:	add    al,0x92
  407e43:	pop    ebp
  407e44:	cwde   
  407e45:	sbb    ebp,DWORD PTR [edi-0x15]
  407e48:	repz xchg esp,eax
  407e4a:	mov    ebp,0xeed3368c
  407e4f:	pop    ecx
  407e50:	out    0xfa,eax
  407e52:	fist   DWORD PTR [si+0x3102]
  407e57:	pop    esp
  407e58:	repz mul BYTE PTR [ebp+0x32]
  407e5c:	loop   0x407e32
  407e5e:	lods   al,BYTE PTR ds:[esi]
  407e5f:	jg     0x407dfc
  407e61:	mov    dl,0xa0
  407e63:	in     al,dx
  407e64:	push   esi
  407e65:	or     esi,DWORD PTR [ebp-0x54d90301]
  407e6b:	out    dx,al
  407e6c:	loopne 0x407ee5
  407e6e:	push   0xa310868b
  407e73:	retf   
  407e74:	xor    BYTE PTR [ebx+0x3c],cl
  407e77:	imul   esp,DWORD PTR [ebx],0xb4cc9d48
  407e7d:	inc    ebx
  407e7e:	call   0xe51e398f
  407e83:	out    dx,al
  407e84:	dec    ebx
  407e85:	xor    bl,BYTE PTR [ebx]
  407e87:	push   edx
  407e88:	cmp    DWORD PTR [edi-0x6b14e67a],eax
  407e8e:	sbb    edi,DWORD PTR [ecx]
  407e90:	jbe    0x407ef9
  407e92:	retf   
  407e93:	pop    esi
  407e94:	out    dx,al
  407e95:	push   cs
  407e96:	xlat   BYTE PTR ds:[ebx]
  407e97:	push   0xc0526659
  407e9c:	ror    bh,cl
  407e9e:	xchg   esi,esi
  407ea0:	out    dx,al
  407ea1:	xchg   esi,eax
  407ea2:	mov    eax,0xfabc8f53
  407ea7:	(bad)  
  407ea8:	xor    al,0xd6
  407eaa:	enter  0x9a94,0xb6
  407eae:	inc    ecx
  407eaf:	jb     0x407eed
  407eb1:	test   ch,ch
  407eb3:	inc    ebp
  407eb4:	add    al,bh
  407eb6:	pusha  
  407eb7:	fwait
  407eb8:	lock sti 
  407eba:	pop    edx
  407ebb:	sbb    al,bl
  407ebd:	sbb    dl,BYTE PTR [eax-0x2b]
  407ec0:	ins    DWORD PTR es:[edi],dx
  407ec1:	jp     0x407ebc
  407ec3:	push   ecx
  407ec4:	out    0xd3,al
  407ec6:	cmp    al,0x68
  407ec8:	cmp    edx,DWORD PTR [edx]
  407eca:	xor    ebx,ebx
  407ecc:	xor    DWORD PTR [eax-0x69ea122e],0x79229b16
  407ed6:	mov    ah,0x33
  407ed8:	int    0x4f
  407eda:	shr    DWORD PTR [eax],1
  407edc:	sahf   
  407edd:	dec    eax
  407ede:	inc    edi
  407edf:	cmp    BYTE PTR [eax+0x7a],0xa
  407ee3:	cmp    BYTE PTR [edx+0x3],ah
  407ee6:	lods   eax,DWORD PTR ds:[esi]
  407ee7:	ret    0x1d06
  407eea:	mov    esi,0x95b5ab3b
  407eef:	sbb    al,0x78
  407ef1:	in     al,dx
  407ef2:	mov    DWORD PTR [edi-0x4f8ec05d],eax
  407ef8:	add    ecx,DWORD PTR [ebx+0x3dc76744]
  407efe:	ins    DWORD PTR es:[edi],dx
  407eff:	lock scas al,BYTE PTR es:[edi]
  407f01:	ins    BYTE PTR es:[edi],dx
  407f02:	jmp    0x6ff8:0xaa0dfec6
  407f09:	imul   ecx,DWORD PTR [ebp+eax*4+0x7d],0x55
  407f0e:	cmp    al,0xfb
  407f10:	in     al,0x1f
  407f12:	inc    esp
  407f13:	jmp    0x407f06
  407f15:	push   ds
  407f16:	pop    es
  407f17:	or     eax,0x80b8fc0a
  407f1c:	add    bl,BYTE PTR [ebx-0x20fd2a25]
  407f22:	call   0x5ab422e2
  407f27:	cmp    eax,0x6926b45f
  407f2d:	mov    dl,0x48
  407f2f:	mov    DWORD PTR ds:0x911d,ecx
  407f34:	int    0xed
  407f36:	inc    ecx
  407f37:	or     BYTE PTR [edi],ah
  407f39:	aaa    
  407f3a:	xchg   esp,eax
  407f3c:	fistp  QWORD PTR [ebx]
  407f3e:	dec    edx
  407f3f:	dec    esp
  407f40:	or     BYTE PTR [ecx+ebx*8],ah
  407f43:	cli    
  407f44:	mov    eax,0x4ad5c1e0
  407f49:	daa    
  407f4a:	mov    bl,0xb8
  407f4d:	hlt    
  407f4e:	pop    ds
  407f4f:	jae    0x407f11
  407f51:	fidiv  DWORD PTR [ecx-0x48]
  407f54:	frstor [edi-0x22425c09]
  407f5a:	lods   eax,DWORD PTR ds:[esi]
  407f5b:	fs jb  0x407f43
  407f5e:	pop    ss
  407f5f:	fstp   TBYTE PTR [ebx-0x54e3a637]
  407f65:	fbstp  TBYTE PTR [edi-0x37eedf22]
  407f6b:	jo     0x407f89
  407f6d:	repnz pop ss
  407f6f:	mov    bl,bl
  407f71:	xchg   edi,eax
  407f72:	ja     0x407fd0
  407f74:	nop
  407f75:	rcr    DWORD PTR [esi],cl
  407f77:	(bad)  
  407f78:	into   
  407f79:	xor    edx,edi
  407f7b:	mov    edx,0x451bf93f
  407f80:	pop    ss
  407f81:	push   cs
  407f82:	xchg   esi,eax
  407f83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f84:	rcr    DWORD PTR [eax],1
  407f86:	and    esi,eax
  407f88:	cs push ebp
  407f8a:	fdivr  QWORD PTR [ecx]
  407f8c:	push   0xffffffd3
  407f8e:	icebp  
  407f8f:	or     dl,dh
  407f91:	adc    DWORD PTR [eax+0x7b29d8a4],esi
  407f97:	aad    0x33
  407f99:	das    
  407f9a:	adc    al,0x81
  407f9c:	adc    bl,BYTE PTR [ebp+0x5f06d1f9]
  407fa2:	imul   esp,DWORD PTR [ebx+0x20bb177c],0xffffffcf
  407fa9:	and    BYTE PTR [ecx-0x43254159],dh
  407faf:	and    eax,0xdb856bc8
  407fb4:	retf   0x3356
  407fb7:	fsubr  st,st(2)
  407fb9:	out    0x7c,eax
  407fbb:	das    
  407fbc:	xchg   edi,eax
  407fbd:	(bad)  [ebp+0x4e15ff43]
  407fc3:	sub    al,0x20
  407fc5:	mov    ebp,ss
  407fc7:	mov    bl,0x7c
  407fc9:	(bad)  
  407fca:	fisttp DWORD PTR [eax]
  407fcc:	outs   dx,BYTE PTR ds:[esi]
  407fcd:	ror    edx,cl
  407fcf:	sbb    al,0x54
  407fd1:	(bad)  
  407fd3:	or     eax,0x426ffa23
  407fd8:	mov    edi,0x680acbd7
  407fdd:	fstp   QWORD PTR [edx-0x7bfe2678]
  407fe3:	loopne 0x408011
  407fe5:	push   eax
  407fe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fe7:	dec    edx
  407fe8:	mov    al,0x6
  407fea:	outs   dx,DWORD PTR ds:[esi]
  407feb:	dec    eax
  407fec:	fisttp WORD PTR [edx]
  407fee:	sbb    al,0x10
  407ff0:	daa    
  407ff1:	inc    ebp
  407ff2:	mov    al,ds:0x44410fb9
  407ff7:	test   DWORD PTR [ebp-0x66],eax
  407ffa:	neg    BYTE PTR [edi]
  407ffc:	mov    DWORD PTR [ecx],esi
  407ffe:	or     dl,ch
  408000:	jle    0x407ffe
  408002:	mov    bl,0x38
  408004:	icebp  
  408005:	test   BYTE PTR [edi],0x2
  408008:	inc    edx
  408009:	fild   WORD PTR [ecx+0x2f]
  40800c:	or     eax,0x87ea3961
  408011:	inc    esi
  408012:	push   ecx
  408013:	jae    0x407fc9
  408015:	enter  0x21aa,0x92
  408019:	push   0xd9e9373a
  40801e:	jecxz  0x40809c
  408020:	(bad)  
  408021:	test   BYTE PTR [eax],0x29
  408024:	adc    edx,DWORD PTR [eax+0x19]
  408027:	mov    eax,ds:0x8b56ba1
  40802c:	xor    ebx,DWORD PTR [edx+eiz*8]
  40802f:	call   0x9e8e:0x347021d9
  408036:	push   edx
  408037:	aas    
  408038:	in     al,dx
  408039:	fsub   DWORD PTR [edx+0x3c]
  40803c:	aas    
  40803d:	cmp    eax,0xab4a6fa3
  408042:	hlt    
  408043:	fldcw  WORD PTR [ecx-0x28]
  408046:	dec    edx
  408047:	frstor [ecx+0x57b2054b]
  40804d:	ins    DWORD PTR es:[edi],dx
  40804e:	cmp    eax,0x5330e6c3
  408053:	shl    ch,cl
  408055:	adc    al,0xd5
  408057:	xor    DWORD PTR [ebp+0x598fe755],ebx
  40805d:	add    bl,BYTE PTR [edx-0xf4fef33]
  408063:	stos   BYTE PTR es:[edi],al
  408064:	adc    esi,DWORD PTR [esi]
  408066:	retf   0x5c8f
  408069:	cmp    edi,DWORD PTR [edi]
  40806b:	enter  0x803,0x8f
  40806f:	shl    BYTE PTR [eax],cl
  408071:	fild   QWORD PTR [edi+0x5a71f668]
  408077:	sub    dh,dh
  408079:	adc    al,0x37
  40807b:	fsubr  DWORD PTR [ebx]
  40807d:	and    DWORD PTR [ebx-0x57a6d8a0],esi
  408083:	ret    
  408084:	sub    al,0x1e
  408086:	sub    BYTE PTR [ebx+ecx*4+0x1baf5252],bl
  40808d:	mov    bh,0xe1
  40808f:	pop    ecx
  408090:	int3   
  408091:	pop    es
  408092:	cmc    
  408093:	pop    esi
  408094:	out    0x43,al
  408096:	loope  0x4080f8
  408098:	dec    ecx
  408099:	xacquire xchg DWORD PTR [ebx-0x373e9a4a],edx
  4080a0:	xchg   esi,eax
  4080a1:	sahf   
  4080a2:	(bad)  
  4080a4:	popf   
  4080a5:	aas    
  4080a6:	(bad)  
  4080a7:	fst    QWORD PTR [edi-0x57]
  4080aa:	mov    esp,0xf57f4144
  4080af:	xchg   edi,eax
  4080b0:	test   al,0x6a
  4080b2:	ret    
  4080b3:	leave  
  4080b4:	aad    0xed
  4080b6:	cmp    BYTE PTR [ecx+0x267a55d8],0x3c
  4080bd:	pusha  
  4080be:	call   0x8c52ed88
  4080c3:	pop    ss
  4080c4:	js     0x4080bd
  4080c6:	push   cs
  4080c7:	jmp    0x4080f8
  4080c9:	ja     0x4080ec
  4080cb:	mov    cl,0x59
  4080cd:	push   es
  4080ce:	mov    BYTE PTR ds:0xdabc5c21,dl
  4080d4:	push   ecx
  4080d5:	adc    ecx,esp
  4080d7:	fsubr  DWORD PTR [edx-0x2]
  4080da:	cmp    dh,BYTE PTR [esi+esi*2-0x7b]
  4080de:	or     edx,ecx
  4080e0:	xor    eax,0x7dc32696
  4080e5:	fistp  DWORD PTR [esi-0x61488794]
  4080eb:	sbb    eax,0x504dc35e
  4080f0:	push   0xffffffc4
  4080f2:	mov    ah,0x23
  4080f4:	push   ds
  4080f5:	(bad)  [edi]
  4080f7:	dec    edi
  4080f8:	cmp    eax,0x84820f8b
  4080fd:	idiv   BYTE PTR [eax+esi*2]
  408100:	retf   
  408101:	imul   esp,DWORD PTR [esi],0x5
  408104:	pop    ecx
  408105:	leave  
  408106:	scas   al,BYTE PTR es:[edi]
  408107:	sbb    DWORD PTR [esi],esi
  408109:	popa   
  40810a:	mov    ch,0xc2
  40810c:	mov    ds:0x36b989cc,al
  408111:	(bad)  
  408112:	pop    ecx
  408113:	inc    esp
  408114:	adc    DWORD PTR ds:0x2a210418,ecx
  40811a:	in     al,dx
  40811b:	lods   al,BYTE PTR ds:[esi]
  40811c:	inc    ebx
  40811d:	add    ah,BYTE PTR [edx+0x40]
  408120:	pop    edx
  408121:	out    dx,al
  408122:	dec    esi
  408123:	push   ebx
  408124:	cld    
  408125:	bound  esi,QWORD PTR [ebp+0x3d]
  408128:	shl    BYTE PTR [ebx],cl
  40812a:	out    dx,al
  40812b:	mov    ah,0x66
  40812d:	push   0xaed45610
  408132:	mov    ebp,0xb70a0991
  408137:	pop    ecx
  408138:	sbb    ebp,DWORD PTR [edi-0x3d1cd18e]
  40813e:	sbb    dh,ah
  408140:	and    ch,BYTE PTR [eax-0x36]
  408143:	gs inc eax
  408145:	inc    edi
  408146:	jl     0x4080da
  408148:	pop    es
  408149:	mov    ebx,0x35470322
  40814e:	test   al,0xbb
  408150:	pop    ebx
  408151:	mov    ecx,0xb04a9069
  408156:	gs push esp
  408158:	lods   eax,DWORD PTR ds:[esi]
  408159:	test   DWORD PTR [ecx+0xc],ebx
  40815c:	and    al,0xd7
  40815e:	adc    edx,DWORD PTR [edx+0x11]
  408161:	push   eax
  408162:	ret    
  408163:	jae    0x408182
  408165:	gs out 0x94,eax
  408168:	cwde   
  408169:	add    al,0x22
  40816b:	retf   
  40816c:	ins    BYTE PTR es:[edi],dx
  40816d:	int3   
  40816e:	jne    0x4080fd
  408170:	hlt    
  408171:	adc    DWORD PTR [eax+0x24b59b55],ebx
  408177:	jne    0x40815b
  408179:	retf   
  40817a:	mov    dl,0x9
  40817c:	test   eax,0xaa76db90
  408181:	stc    
  408182:	dec    ebp
  408183:	rcl    DWORD PTR [eax-0x2e7f12d],cl
  408189:	hlt    
  40818a:	mov    ebx,ecx
  40818c:	sub    eax,0x326a8016
  408191:	ins    BYTE PTR es:[edi],dx
  408192:	inc    eax
  408193:	(bad)  
  408194:	pop    ecx
  408195:	push   ds
  408196:	xor    al,0x73
  408198:	fdiv   QWORD PTR [esi+0x54]
  40819b:	daa    
  40819c:	push   ss
  40819d:	pusha  
  40819e:	out    0x8e,al
  4081a0:	int    0x84
  4081a2:	pop    esi
  4081a3:	cmc    
  4081a4:	cmp    dl,dh
  4081a6:	mov    DWORD PTR [edx],ebp
  4081a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081a9:	xchg   edi,eax
  4081aa:	mov    ebx,DWORD PTR [esp+esi*1-0xce9d3c7]
  4081b1:	lock push DWORD PTR [ecx]
  4081b4:	push   ds
  4081b5:	stos   BYTE PTR es:[edi],al
  4081b6:	ror    BYTE PTR [esi+0x3b028a93],1
  4081bc:	mov    cl,0x1a
  4081be:	sbb    dl,dh
  4081c0:	loopne 0x40817e
  4081c2:	inc    edi
  4081c3:	fnstenv [eax+0x2d6ee5ca]
  4081c9:	fimul  WORD PTR [eax]
  4081cb:	jp     0x408168
  4081cd:	mov    ebp,ebx
  4081cf:	popa   
  4081d0:	cmp    ch,al
  4081d2:	sbb    al,0x44
  4081d4:	jnp    0x408236
  4081d6:	sbb    ecx,DWORD PTR [esi]
  4081d8:	in     al,0x82
  4081da:	and    al,0xb6
  4081dc:	xchg   al,bl
  4081de:	sbb    al,0x57
  4081e0:	xchg   esp,eax
  4081e1:	pop    ds
  4081e2:	pop    edx
  4081e3:	popw   ss
  4081e5:	mov    eax,ds:0xe6d5e0cd
  4081ea:	or     bl,dh
  4081ec:	(bad)  
  4081ed:	xlat   BYTE PTR ds:[ebx]
  4081ee:	das    
  4081ef:	stos   DWORD PTR es:[edi],eax
  4081f0:	fwait
  4081f1:	shr    BYTE PTR [ecx+0xb0b3f51],0xea
  4081f8:	add    eax,0x7435aabe
  4081fd:	addr16 and al,0xab
  408200:	rcl    BYTE PTR [ebp+0x73e5a6d2],1
  408206:	test   al,cl
  408208:	mov    edx,0x8f107022
  40820d:	aam    0xdc
  40820f:	xchg   esp,eax
  408210:	addr16 push ecx
  408212:	or     BYTE PTR [esi+0x36],ah
  408215:	pop    ds
  408216:	mov    eax,0x3b9e635
  40821b:	jmp    0x4081ca
  40821d:	and    DWORD PTR [edi-0x4f],0xffffffcf
  408221:	das    
  408222:	jbe    0x4081ad
  408224:	sti    
  408225:	inc    eax
  408226:	fs push 0x362d7d8b
  40822c:	cmp    bh,0x59
  40822f:	xchg   edi,eax
  408230:	jno    0x408217
  408232:	jno    0x4081c0
  408234:	stos   BYTE PTR es:[edi],al
  408235:	pop    esp
  408236:	jne    0x4081bb
  408238:	push   esp
  408239:	inc    ecx
  40823a:	int    0x2c
  40823c:	(bad)  
  40823d:	enter  0x5c85,0xae
  408241:	jecxz  0x4082ba
  408243:	add    DWORD PTR [esi],0xffffffcd
  408246:	pop    ebp
  408247:	js     0x408283
  408249:	mov    ?,WORD PTR [ebp-0x43]
  40824c:	rcr    BYTE PTR [eax+edx*8],0x3c
  408250:	les    edx,FWORD PTR [ecx]
  408252:	and    ecx,eax
  408254:	in     al,dx
  408255:	retf   0xa7ee
  408258:	not    DWORD PTR [eax]
  40825a:	adc    al,0xfd
  40825c:	mov    esi,DWORD PTR [ebx]
  40825e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40825f:	bound  esi,QWORD PTR ss:[ebp-0x6b6e6300]
  408266:	and    eax,0x416d5040
  40826b:	popf   
  40826c:	mov    cl,0x71
  40826e:	xor    ebp,DWORD PTR cs:[ecx+edi*8+0x68]
  408273:	(bad)  
  408274:	sahf   
  408275:	js     0x408296
  408277:	mov    bl,ah
  408279:	call   0xa7a93ed
  40827e:	ficom  DWORD PTR [esi+0x2ed31da9]
  408284:	or     DWORD PTR [ebx+0x16],edx
  408287:	call   0xe041:0x759a37e
  40828e:	mov    WORD PTR [esi+0x6de21b5],?
  408294:	fmul   DWORD PTR [ecx]
  408296:	xchg   esp,eax
  408297:	call   0x2555:0x99103cff
  40829e:	xchg   edx,eax
  40829f:	daa    
  4082a0:	inc    edi
  4082a1:	or     ecx,esi
  4082a3:	or     eax,0x7015b0c0
  4082a8:	xor    al,0x4d
  4082aa:	aad    0x27
  4082ac:	sub    DWORD PTR [ebp-0x7ce6c15d],edi
  4082b2:	stos   BYTE PTR es:[edi],al
  4082b3:	inc    eax
  4082b4:	xchg   DWORD PTR [esi-0x5],ebp
  4082b7:	pop    ss
  4082b8:	jo     0x408248
  4082ba:	xlat   BYTE PTR ds:[ebx]
  4082bb:	inc    esi
  4082bc:	jno    0x4082f6
  4082be:	adc    eax,0x8d545ae3
  4082c3:	pop    ecx
  4082c4:	cmp    dl,BYTE PTR [ebp+0x5e]
  4082c7:	les    edi,FWORD PTR [ebx]
  4082c9:	pop    ebx
  4082ca:	mov    al,0x82
  4082cc:	or     al,BYTE PTR [ebx]
  4082ce:	fcmovnb st,st(1)
  4082d0:	nop
  4082d1:	(bad)  
  4082d2:	cwde   
  4082d3:	mov    al,ds:0x6f522128
  4082d8:	mov    ah,0xc4
  4082da:	lock out dx,eax
  4082dc:	cmp    DWORD PTR [edx],0x94d56699
  4082e2:	fcomi  st,st(4)
  4082e4:	push   ds
  4082e5:	add    bl,BYTE PTR [ecx-0x3d261592]
  4082eb:	and    eax,0x2ea093d2
  4082f0:	popa   
  4082f1:	int    0xb7
  4082f3:	iret   
  4082f4:	and    al,BYTE PTR [ecx-0x41]
  4082f7:	sbb    al,0x39
  4082f9:	push   es
  4082fa:	pop    edi
  4082fb:	scas   al,BYTE PTR es:[edi]
  4082fc:	ja     0x408305
  4082fe:	pop    edx
  4082ff:	daa    
  408300:	sbb    bh,BYTE PTR [eax-0x15453467]
  408306:	dec    edx
  408307:	or     esp,0x29359791
  40830d:	pop    edi
  40830e:	je     0x40837e
  408310:	ror    DWORD PTR [esi-0x428d0512],1
  408316:	pop    edx
  408317:	cmp    eax,edi
  408319:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40831a:	sbb    BYTE PTR [eax-0x1c],0x13
  40831e:	push   ebx
  40831f:	(bad)  
  408320:	into   
  408321:	std    
  408322:	mov    edi,ebx
  408324:	lds    esi,FWORD PTR [esi]
  408326:	pop    eax
  408327:	rol    BYTE PTR [esi+0x562e7d6e],cl
  40832d:	fisubr DWORD PTR [edi]
  40832f:	mov    edi,ebp
  408331:	adc    esi,DWORD PTR [ebp-0x7eac64a]
  408337:	sbb    eax,0xa45bbc1d
  40833c:	push   ecx
  40833d:	jns    0x4083af
  40833f:	aad    0x4
  408341:	cmp    al,BYTE PTR [ebx]
  408343:	mov    esi,0xd408ebaf
  408348:	mov    eax,0xb850c8b3
  40834d:	xchg   esp,eax
  40834e:	pop    edx
  40834f:	aad    0x52
  408351:	enter  0xa3dd,0x66
  408355:	add    eax,0xc380113b
  40835a:	cmp    al,0x43
  40835c:	sub    bh,BYTE PTR [edx]
  40835e:	dec    esi
  40835f:	lahf   
  408360:	push   ss
  408361:	inc    edi
  408362:	dec    ebx
  408363:	fnstsw WORD PTR [edx+0x6e9d1e50]
  408369:	lods   al,BYTE PTR ds:[esi]
  40836a:	js     0x408387
  40836c:	cdq    
  40836d:	js     0x408369
  40836f:	push   ss
  408370:	aaa    
  408371:	add    esi,0x5
  408374:	jp     0x40838d
  408376:	jp     0x40838d
  408378:	fwait
  408379:	leave  
  40837a:	mov    ds,WORD PTR [ebx-0x7f34747e]
  408380:	outs   dx,BYTE PTR ds:[esi]
  408381:	imul   esi,DWORD PTR [edx],0xffffff99
  408384:	fnsave [ebp+0x75]
  408387:	test   al,0x59
  408389:	push   es
  40838a:	cmp    al,0x8f
  40838c:	clc    
  40838d:	fdiv   st(7),st
  40838f:	add    BYTE PTR [esi+0x64],cl
  408392:	je     0x40835b
  408394:	and    ch,BYTE PTR [esi]
  408396:	xor    eax,DWORD PTR [ebx]
  408398:	or     eax,0x9e32ab01
  40839d:	push   ds
  40839e:	in     eax,0xd4
  4083a0:	enter  0xfab,0x62
  4083a4:	mov    dh,0xc5
  4083a6:	fdivr  QWORD PTR [ebx+0x25160174]
  4083ac:	or     al,BYTE PTR [eax+ebp*2]
  4083af:	icebp  
  4083b0:	and    edx,DWORD PTR [ecx+0xced4494]
  4083b6:	rol    DWORD PTR [edi],cl
  4083b8:	mov    dl,0x92
  4083ba:	fistp  DWORD PTR [ebx+ebx*2-0x325a0af7]
  4083c1:	scas   al,BYTE PTR es:[edi]
  4083c2:	add    eax,DWORD PTR [ebx+0xb]
  4083c5:	outs   dx,BYTE PTR ds:[esi]
  4083c6:	mov    al,ds:0x1ba0fd34
  4083cb:	mov    ebx,0xa98137f4
  4083d0:	add    al,0xb6
  4083d2:	(bad)  
  4083d3:	cmc    
  4083d4:	dec    ecx
  4083d5:	das    
  4083d6:	push   ecx
  4083d7:	fwait
  4083d8:	push   0xd546fd73
  4083dd:	pusha  
  4083de:	mov    esi,0x3cf8d11c
  4083e3:	jmp    DWORD PTR [edx-0x60a7be3d]
  4083e9:	dec    esp
  4083ea:	std    
  4083eb:	jbe    0x408385
  4083ed:	pop    esp
  4083ee:	out    dx,al
  4083ef:	xchg   edi,eax
  4083f0:	or     ebp,DWORD PTR [ecx+0x1c]
  4083f3:	rcl    eax,0xc4
  4083f6:	xchg   ecx,eax
  4083f7:	ret    
  4083f8:	mov    ds:0x3d5d5a3c,eax
  4083fd:	jnp    0x408464
  4083ff:	push   edi
  408400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408401:	repnz leave 
  408403:	xchg   edi,eax
  408404:	push   eax
  408405:	pop    esi
  408406:	in     eax,0x46
  408408:	fdiv   st,st(3)
  40840a:	mov    edi,0x261d0df8
  40840f:	mov    DWORD PTR [ebp-0x696e1994],ebx
  408415:	push   ebx
  408416:	push   ds
  408417:	outs   dx,DWORD PTR ds:[esi]
  408418:	jp     0x40846c
  40841a:	stos   BYTE PTR es:[edi],al
  40841b:	and    al,0x77
  40841e:	cld    
  40841f:	aad    0x2b
  408421:	adc    ax,0x105d
  408425:	sahf   
  408426:	js     0x4083e1
  408428:	movzx  esi,al
  40842b:	stos   DWORD PTR es:[edi],eax
  40842c:	fisubr WORD PTR [esi]
  40842e:	jg     0x40845d
  408430:	test   DWORD PTR [ebx],ebp
  408432:	add    al,0x30
  408434:	fsub   DWORD PTR [esi+eiz*8+0x7f9fbf0b]
  40843b:	adc    eax,0x1b3f6e13
  408440:	or     DWORD PTR [esi+0x91a8aef],ecx
  408446:	xchg   esp,eax
  408447:	popa   
  408448:	(bad)  
  408449:	fstp   QWORD PTR [edi+esi*8-0x62]
  40844d:	cmp    DWORD PTR [ecx-0x54dc4b6f],ebp
  408453:	pop    eax
  408454:	aam    0xde
  408456:	mov    ch,ah
  408458:	test   eax,0x4ecb5639
  40845d:	imul   edx,ecx,0x67
  408460:	ins    DWORD PTR es:[edi],dx
  408461:	push   es
  408462:	call   0xacd1:0xdabeddd2
  408469:	push   es
  40846a:	or     al,0xfe
  40846c:	dec    eax
  40846d:	fsub   QWORD PTR [ebx+eiz*1-0x36]
  408471:	and    eax,0xae0985b5
  408476:	jmp    0x408498
  408478:	or     bl,BYTE PTR [ebx]
  40847a:	shl    BYTE PTR [esi-0x1e1e4d3],1
  408480:	mov    ds:0xfe1b0500,eax
  408485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408486:	add    al,0x67
  408488:	cld    
  408489:	add    al,0xb0
  40848b:	cdq    
  40848c:	mov    esi,ss
  40848e:	dec    eax
  40848f:	xlat   BYTE PTR ds:[ebx]
  408490:	jp     0x408485
  408492:	ror    WORD PTR [esi],1
  408495:	mov    WORD PTR [edi-0x523f742c],es
  40849b:	cmp    eax,DWORD PTR [esi+0x6d]
  40849e:	pop    eax
  40849f:	out    0x9d,eax
  4084a1:	sbb    ecx,esp
  4084a3:	xor    eax,0xd9f678bf
  4084a8:	test   BYTE PTR [eax],bh
  4084aa:	pop    ebx
  4084ab:	lahf   
  4084ac:	add    ecx,ebp
  4084ae:	sub    al,0xe3
  4084b0:	icebp  
  4084b1:	sub    al,0x35
  4084b3:	mov    BYTE PTR [ecx-0x7c5587bf],dh
  4084b9:	ss push 0xffffff89
  4084bc:	(bad)  [edi+0x497d5fb1]
  4084c2:	shr    DWORD PTR [edx-0x49a19f09],1
  4084c8:	adc    eax,0xf27a824f
  4084cd:	sbb    ebx,esi
  4084cf:	(bad)  
  4084d1:	inc    ebp
  4084d2:	jb     0x40850b
  4084d4:	inc    eax
  4084d5:	xor    al,0x38
  4084d7:	mov    cl,0x12
  4084d9:	shl    DWORD PTR [ebx-0x13a00107],0x9f
  4084e0:	iret   
  4084e1:	adc    al,0xfb
  4084e3:	add    edi,0x298a7820
  4084e9:	push   edx
  4084ea:	dec    ebp
  4084eb:	mov    ebp,0x36935073
  4084f0:	adc    dl,bl
  4084f2:	repnz test BYTE PTR ds:0xaec5e047,bh
  4084f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084fa:	fistp  WORD PTR [edi]
  4084fc:	int    0xea
  4084fe:	call   DWORD PTR [ebx-0x71]
  408501:	ret    
  408502:	loope  0x40854e
  408504:	cdq    
  408505:	add    eax,0xa252b5c9
  40850a:	jle    0x408503
  40850c:	(bad)  
  40850d:	(bad)  [edi-0x56]
  408510:	test   eax,0x2e128139
  408515:	mov    bh,0xe7
  408517:	ret    0x7f6c
  40851a:	mov    ch,0x12
  40851c:	jb     0x40852c
  40851e:	or     dh,BYTE PTR [esi+0x1bd38fcb]
  408524:	(bad)  
  408525:	test   eax,0x6573fe68
  40852a:	mov    esi,0xea8aba6a
  40852f:	mov    dl,0x39
  408531:	loope  0x408545
  408533:	pop    esi
  408534:	stos   BYTE PTR es:[edi],al
  408535:	jl     0x408586
  408537:	gs dec ebp
  408539:	sub    DWORD PTR [eax-0x3b8fa8d2],edx
  40853f:	inc    esi
  408540:	imul   edi,DWORD PTR [eax],0xa2d0d2f5
  408546:	jp     0x4084e0
  408548:	pop    esp
  408549:	pop    ecx
  40854a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40854b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40854c:	pop    ss
  40854d:	in     al,0xf9
  40854f:	xchg   esp,eax
  408550:	std    
  408551:	sub    eax,0x9f63768b
  408556:	xchg   edi,eax
  408557:	es cmp al,0x79
  40855a:	lahf   
  40855b:	add    al,0x96
  40855d:	jg     0x4085d4
  40855f:	retf   
  408560:	clc    
  408561:	mov    dl,0x76
  408563:	and    al,0x3a
  408565:	or     cl,cl
  408567:	ins    BYTE PTR es:[edi],dx
  408568:	call   0x6755:0x81921523
  40856f:	mov    bh,0x23
  408571:	jle    0x408511
  408573:	jle    0x40852b
  408575:	lods   eax,DWORD PTR ds:[esi]
  408576:	xor    eax,0x7b6f3971
  40857b:	aad    0xd6
  40857d:	popf   
  40857e:	sub    dh,ah
  408580:	mov    ebx,0x7172f215
  408585:	jmp    0x40854f
  408587:	mov    eax,0x98e7454a
  40858c:	out    dx,al
  40858d:	add    bh,cl
  40858f:	mov    DWORD PTR [ebp+0x7e],edi
  408592:	int    0x2d
  408594:	(bad)  
  408595:	pop    ecx
  408596:	push   ss
  408597:	jg     0x408617
  408599:	adc    ah,bh
  40859b:	push   esi
  40859c:	xchg   esp,eax
  40859d:	sub    esi,edx
  40859f:	int    0x7b
  4085a1:	or     al,0x63
  4085a3:	push   eax
  4085a4:	add    bl,cl
  4085a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085a7:	mov    esi,0xba539ae2
  4085ac:	lds    esp,FWORD PTR [ecx]
  4085ae:	adc    DWORD PTR [ebp+0x3483429f],esp
  4085b4:	or     BYTE PTR [esi],0x93
  4085b7:	xlat   BYTE PTR ds:[ebx]
  4085b8:	out    0x28,eax
  4085ba:	cmp    DWORD PTR [edi],ebp
  4085bc:	jl     0x408629
  4085be:	mov    edx,0x6a828b97
  4085c3:	sbb    al,0x2a
  4085c5:	cli    
  4085c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085c7:	iret   
  4085c8:	mov    bh,0x47
  4085ca:	mov    bh,0xeb
  4085cc:	push   edi
  4085cd:	in     al,dx
  4085ce:	(bad)  
  4085cf:	mov    dh,0xcd
  4085d1:	shr    BYTE PTR [eax],cl
  4085d3:	jl     0x4085cf
  4085d5:	pop    ebp
  4085d6:	or     esi,DWORD PTR [esi-0x69748ba0]
  4085dc:	inc    edx
  4085dd:	dec    edi
  4085de:	sar    eax,cl
  4085e0:	push   ds
  4085e1:	mov    DWORD PTR [eax],0x87612614
  4085e7:	cmp    DWORD PTR [eax],ecx
  4085e9:	or     eax,DWORD PTR [esi]
  4085eb:	lock add al,0x9d
  4085ee:	loope  0x40857f
  4085f0:	shr    BYTE PTR [esi],0x1a
  4085f3:	sub    bl,cl
  4085f5:	cmp    BYTE PTR [ecx],ch
  4085f7:	shl    bl,cl
  4085f9:	fdivr  DWORD PTR [si-0x3b14]
  4085fe:	(bad)  
  408600:	jp     0x408680
  408602:	jnp    0x4085db
  408604:	ins    BYTE PTR es:[edi],dx
  408605:	xchg   esi,eax
  408606:	inc    esp
  408607:	pop    ebx
  408608:	or     eax,0x57f946cb
  40860d:	sbb    BYTE PTR [ecx+eax*2+0x4723f104],al
  408614:	data16 int3 
  408616:	ror    ch,0x63
  408619:	ja     0x408652
  40861b:	xchg   BYTE PTR [ebp-0x256ca90],al
  408621:	stos   DWORD PTR es:[edi],eax
  408622:	(bad)  
  408623:	mov    BYTE PTR [ecx+0x727176ce],ch
  408629:	ja     0x4085f9
  40862b:	call   FWORD PTR [ebp-0x50]
  40862e:	xlat   BYTE PTR ds:[ebx]
  40862f:	jp     0x408659
  408631:	cld    
  408632:	push   eax
  408633:	enter  0x4e2,0x5d
  408637:	(bad)  
  408638:	pop    edi
  408639:	por    mm2,QWORD PTR [ebx-0x3d463430]
  408640:	cld    
  408641:	scas   al,BYTE PTR es:[edi]
  408642:	sub    ebp,DWORD PTR [eax-0x3679c3fd]
  408648:	call   0xcc95:0x4afb8e1c
  40864f:	dec    esi
  408650:	fld    TBYTE PTR [ebx]
  408652:	push   esp
  408653:	pop    esp
  408654:	scas   al,BYTE PTR es:[edi]
  408655:	mov    bl,0x1d
  408657:	adc    eax,0xd3a8537a
  40865c:	ret    0xbb8c
  40865f:	rcr    BYTE PTR [ebp-0x1c],0x5f
  408663:	ror    BYTE PTR [ebp+ebx*2-0x3c],0xcc
  408668:	std    
  408669:	jb     0x4086e8
  40866b:	cwde   
  40866c:	jb     0x408673
  40866e:	out    dx,eax
  40866f:	test   DWORD PTR [edx],0xae702b2b
  408675:	adc    al,0x69
  408677:	push   ebx
  408678:	dec    edi
  408679:	icebp  
  40867a:	adc    eax,0xd583f53e
  40867f:	and    DWORD PTR [ebx-0x4a],edx
  408682:	add    esp,esp
  408684:	lods   al,BYTE PTR ds:[esi]
  408685:	xchg   esi,eax
  408686:	sbb    ebx,DWORD PTR [edx-0x26]
  408689:	pop    ecx
  40868a:	mov    bl,0x3d
  40868c:	mov    eax,ds:0xc0cf6fca
  408691:	mov    DWORD PTR [ebx-0x69],esi
  408694:	xor    al,bh
  408696:	cmp    ecx,DWORD PTR [esi-0x53c58f63]
  40869c:	pop    ds
  40869d:	xor    eax,0xe963b812
  4086a2:	adc    DWORD PTR [esi+0x1e],ebp
  4086a5:	ss jmp 0x4086fe
  4086a8:	mov    ebp,0x5802f0c5
  4086ad:	mov    eax,0x9d70176c
  4086b2:	in     eax,0x4e
  4086b4:	div    DWORD PTR [esi+0x273550c3]
  4086ba:	mov    ch,0xc8
  4086bc:	mov    al,0x53
  4086be:	push   ds
  4086bf:	lods   al,BYTE PTR ds:[esi]
  4086c0:	xchg   edi,eax
  4086c1:	fdiv   DWORD PTR [ebx+edx*8+0x10ed7f5f]
  4086c8:	test   eax,0xc7da597d
  4086cd:	nop
  4086ce:	xor    edx,edi
  4086d0:	inc    eax
  4086d1:	mov    cl,0x67
  4086d3:	test   al,0x56
  4086d5:	icebp  
  4086d6:	cmp    bh,dl
  4086d8:	xchg   ebp,eax
  4086d9:	inc    esi
  4086da:	in     al,dx
  4086db:	sub    esi,DWORD PTR [ebx-0x49]
  4086de:	fsub   DWORD PTR [eax]
  4086e0:	xchg   ecx,eax
  4086e1:	je     0x4086d0
  4086e3:	in     eax,0xa6
  4086e5:	sbb    dh,dl
  4086e7:	mov    ah,BYTE PTR [esi+0x33]
  4086ea:	ror    BYTE PTR [eax+0x56],0x2a
  4086ee:	mov    ebx,0xac9a84c2
  4086f3:	clc    
  4086f4:	mov    al,ds:0x1964a624
  4086f9:	jle    0x408769
  4086fb:	repnz xor DWORD PTR [eax],ebx
  4086fe:	and    al,0x8e
  408700:	mov    ebx,0xf4135b66
  408705:	mov    bl,0x1d
  408707:	pop    eax
  408708:	dec    esi
  408709:	lods   al,BYTE PTR ds:[esi]
  40870a:	xor    BYTE PTR [eax+0x1c785734],dh
  408710:	int    0xe3
  408712:	jno    0x408736
  408714:	scas   al,BYTE PTR es:[edi]
  408715:	push   ebp
  408716:	fmul   QWORD PTR [ebx-0x2c]
  408719:	aas    
  40871a:	cld    
  40871b:	push   0xffffffa3
  40871d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40871e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40871f:	dec    edi
  408720:	xchg   ebx,eax
  408721:	jmp    0x89cd:0x5154ed87
  408728:	addr16 push ecx
  40872a:	shl    BYTE PTR [ebp-0x79],1
  40872d:	ja     0x40879f
  40872f:	hlt    
  408730:	stos   BYTE PTR es:[edi],al
  408731:	add    al,0x45
  408733:	fiadd  WORD PTR [esi+0x60]
  408736:	jle    0x408799
  408738:	out    0xab,al
  40873a:	push   0xffffff8a
  40873c:	xchg   ebx,eax
  40873d:	sub    BYTE PTR [edi-0x4e],0x37
  408741:	cmp    esp,DWORD PTR [edi+0x17]
  408744:	add    DWORD PTR ds:0xc123bd4a,ebx
  40874a:	sar    ecx,1
  40874c:	xchg   esi,eax
  40874d:	adc    BYTE PTR [ebx-0x93755b],dh
  408753:	retf   
  408754:	cs inc ebp
  408756:	xor    eax,0x81486e5
  40875b:	pop    ebp
  40875c:	nop
  40875d:	ja     0x40878f
  40875f:	jne    0x408722
  408761:	and    bh,BYTE PTR [ebx+0x2a2a6c8e]
  408767:	jmp    FWORD PTR [ecx+0x17f78398]
  40876d:	push   ebx
  40876e:	xchg   esi,eax
  40876f:	mov    ds:0x230b1cc2,eax
  408774:	jle    0x408773
  408776:	jp     0x4087cc
  408778:	xchg   ebx,eax
  408779:	(bad)  
  40877a:	lock ss enter 0x23ec,0xc4
  408780:	add    esp,DWORD PTR es:[eax]
  408783:	dec    eax
  408784:	fadd   QWORD PTR [eax-0x4b]
  408787:	cmp    edi,DWORD PTR [esi+ebx*2]
  40878a:	push   ebp
  40878b:	(bad)  
  40878c:	into   
  40878d:	aam    0x4f
  40878f:	mov    dl,0x60
  408791:	mov    ds:0xd574e82c,al
  408796:	fst    QWORD PTR [esi]
  408798:	push   ebx
  408799:	inc    eax
  40879a:	xor    DWORD PTR [eax],ebp
  40879c:	mov    bl,0x57
  40879e:	mov    ebp,0x3ab6c418
  4087a3:	xor    al,BYTE PTR [eax]
  4087a5:	pop    edx
  4087a6:	mov    esp,0xdeace0f8
  4087ab:	enter  0x791d,0xdf
  4087af:	pop    ds
  4087b0:	xchg   edx,eax
  4087b1:	out    dx,al
  4087b2:	jp     0x4087e8
  4087b4:	push   ds
  4087b5:	cmp    eax,0xb5c8fd88
  4087ba:	or     bl,al
  4087bc:	fdivr  st(1),st
  4087be:	jg     0x40874a
  4087c0:	or     BYTE PTR [ecx],bl
  4087c2:	mov    cl,0xd1
  4087c4:	nop
  4087c5:	jno    0x408790
  4087c7:	push   0xffffffac
  4087c9:	and    DWORD PTR [eax-0x23],ebx
  4087cc:	call   0x544b7bd6
  4087d1:	and    al,0x79
  4087d3:	mov    al,0x1f
  4087d5:	mov    edi,0x74abdd04
  4087da:	dec    edi
  4087db:	div    bl
  4087dd:	xchg   ecx,eax
  4087de:	xlat   BYTE PTR ds:[ebx]
  4087df:	pop    edx
  4087e0:	inc    ebx
  4087e1:	ins    BYTE PTR es:[edi],dx
  4087e2:	sub    BYTE PTR [ecx],dl
  4087e4:	jmp    0x8624:0x50dae40b
  4087eb:	inc    eax
  4087ec:	int    0x96
  4087ee:	or     edx,DWORD PTR [esi]
  4087f0:	sub    eax,0x4101574f
  4087f5:	(bad)  
  4087f6:	mov    eax,ds:0x86ec2b77
  4087fb:	xor    ch,BYTE PTR [ecx]
  4087fd:	dec    ecx
  4087fe:	scas   al,BYTE PTR es:[edi]
  4087ff:	adc    eax,0x1a1081eb
  408804:	mov    ah,0xc4
  408806:	cmp    DWORD PTR fs:[edi+0x57f26000],0x9b92012
  408811:	push   ds
  408812:	push   edi
  408813:	sbb    DWORD PTR [esi+0x76],ecx
  408816:	clc    
  408817:	cmp    al,0xd
  408819:	adc    BYTE PTR [edi+0x51],ch
  40881c:	sub    dh,BYTE PTR [ecx+ecx*1]
  40881f:	adc    ch,BYTE PTR [eax+0x5e8187ef]
  408825:	xchg   esp,eax
  408826:	icebp  
  408827:	push   ds
  408828:	and    ebx,DWORD PTR [ecx-0x57]
  40882b:	sar    BYTE PTR [eax],1
  40882d:	pusha  
  40882e:	or     ch,BYTE PTR [edx]
  408830:	jp     0x4088ac
  408832:	pop    esi
  408833:	pop    edx
  408834:	dec    edi
  408835:	mov    al,0xbc
  408837:	jbe    0x40887a
  408839:	out    dx,eax
  40883a:	jge    0x4088a3
  40883c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40883d:	mov    ds:0x7bc1a8c0,al
  408842:	outs   dx,BYTE PTR ds:[esi]
  408843:	add    ecx,ebx
  408845:	add    ebp,esi
  408847:	push   DWORD PTR [edi]
  408849:	dec    BYTE PTR [esi-0xf]
  40884c:	mov    ebp,0xc5a040ea
  408851:	xchg   esp,eax
  408852:	cmp    edx,DWORD PTR [esp+esi*4]
  408855:	inc    eax
  408856:	jmp    0xdcc7b13
  40885b:	paddsw mm1,QWORD PTR [esi-0x77]
  40885f:	aas    
  408860:	adc    bl,BYTE PTR [edx+0x6687fdeb]
  408866:	mov    eax,edx
  408868:	add    al,bl
  40886a:	jbe    0x4088b8
  40886c:	call   0x12a5da7f
  408871:	div    BYTE PTR [esi]
  408873:	js     0x40882c
  408875:	outs   dx,BYTE PTR ds:[esi]
  408876:	lahf   
  408877:	add    eax,0xf6425000
  40887c:	rcl    BYTE PTR [edx-0x68cf6d16],1
  408882:	sbb    cl,cl
  408884:	in     al,dx
  408885:	xchg   edx,eax
  408886:	jmp    0x408898
  408888:	sub    BYTE PTR [ebp+eax*1+0x7896bfd7],al
  40888f:	sub    al,0xc5
  408891:	jae    0x408886
  408893:	push   ss
  408894:	jnp    0x4088b1
  408896:	push   edx
  408897:	adc    BYTE PTR [ebx-0x7b3a2325],0xf
  40889e:	std    
  40889f:	push   edx
  4088a0:	jmp    0x4486c816
  4088a5:	sub    ah,BYTE PTR [ebx]
  4088a7:	neg    BYTE PTR gs:[ebp-0x75]
  4088ab:	jbe    0x4088fc
  4088ad:	jecxz  0x408875
  4088af:	mov    edx,0x6327b37f
  4088b4:	hlt    
  4088b5:	sti    
  4088b6:	sub    al,0xa8
  4088b8:	stos   BYTE PTR es:[edi],al
  4088b9:	in     al,0x23
  4088bb:	cwde   
  4088bc:	call   0xe9f5:0x8567c483
  4088c3:	mov    esp,0xbb9593dc
  4088c8:	xchg   edi,eax
  4088c9:	retf   
  4088ca:	mov    eax,0x1540f74c
  4088cf:	frstor [edi]
  4088d1:	cmp    BYTE PTR [edi+0x14447ee8],ah
  4088d7:	sbb    eax,0xa09bb767
  4088dc:	mov    ebp,0x4aaffac8
  4088e1:	sub    BYTE PTR [edi-0x34],bl
  4088e4:	jo     0x4088a9
  4088e6:	jg     0x40893f
  4088e8:	mov    BYTE PTR [edx+0x47],dl
  4088eb:	sbb    eax,0x87163e81
  4088f0:	jo     0x4088fa
  4088f2:	sbb    eax,0x1dfd3ef6
  4088f7:	sbb    DWORD PTR [edx-0x7a762d83],esp
  4088fd:	clc    
  4088fe:	loop   0x40892e
  408900:	sbb    bh,dl
  408902:	hlt    
  408903:	sub    al,0xea
  408905:	jmp    0x96737738
  40890a:	cwde   
  40890b:	inc    esi
  40890c:	scas   eax,DWORD PTR es:[edi]
  40890d:	fdiv   st(1),st
  40890f:	in     al,0xb0
  408911:	xor    cl,BYTE PTR [edi+edi*8-0x4f]
  408915:	push   ecx
  408916:	in     eax,0x55
  408918:	test   BYTE PTR [ebx-0x10],cl
  40891b:	pop    ebx
  40891c:	pushf  
  40891d:	je     0x40894d
  40891f:	fidiv  DWORD PTR [ebx+0x33cc44b8]
  408925:	pop    es
  408926:	add    DWORD PTR ss:[edx+0xb],esp
  40892a:	dec    eax
  40892b:	test   al,0x68
  40892d:	or     eax,0x99b23523
  408932:	lods   eax,DWORD PTR ds:[esi]
  408933:	push   0xfffffffe
  408935:	sub    eax,0xe4f8a84f
  40893a:	out    dx,eax
  40893b:	scas   eax,DWORD PTR es:[edi]
  40893c:	in     eax,dx
  40893d:	add    al,0xdc
  40893f:	pop    ebx
  408940:	mov    edi,0x6e8e24ad
  408945:	sub    ah,BYTE PTR [eax+0x13]
  408948:	jo     0x40895d
  40894a:	pop    eax
  40894b:	(bad)  
  40894c:	repnz xchg ebp,eax
  40894e:	adc    ch,BYTE PTR [ebx-0xb]
  408951:	jae    0x40890b
  408953:	rcr    BYTE PTR [ecx-0x6702ffd4],0x46
  40895a:	(bad)  
  40895b:	fistp  QWORD PTR [edi-0x457f28e2]
  408961:	outs   dx,BYTE PTR ds:[esi]
  408962:	sahf   
  408963:	pushf  
  408964:	sbb    eax,0x2b9b84e8
  408969:	sub    al,0xa3
  40896b:	das    
  40896c:	mov    eax,0x33e58919
  408971:	pop    edx
  408972:	mov    edi,0x45b3228a
  408977:	leave  
  408978:	imul   esp,esp,0xa3281d06
  40897e:	sub    BYTE PTR [esi-0x217706fb],dl
  408984:	pushf  
  408985:	into   
  408986:	repnz mov edx,0xb45bc1b1
  40898c:	mov    ebx,0x724bf943
  408991:	or     eax,0x72297157
  408996:	xor    al,BYTE PTR [eax+0x5e]
  408999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40899a:	bound  eax,QWORD PTR [edi-0x11]
  40899d:	xor    bl,dh
  40899f:	xor    ecx,DWORD PTR [edi-0x71]
  4089a2:	inc    eax
  4089a3:	jp     0x40898b
  4089a5:	shr    BYTE PTR [ebx-0x35013e36],0x2a
  4089ac:	popa   
  4089ad:	xor    bh,BYTE PTR [edi]
  4089af:	add    BYTE PTR ds:0xca17402b,0x51
  4089b6:	adc    DWORD PTR [ebp+0x4bef15c4],edx
  4089bc:	fsubr  QWORD PTR [ebp-0x7c100e8c]
  4089c2:	or     edx,esi
  4089c4:	mov    esi,0x8df5fcd1
  4089c9:	leave  
  4089ca:	push   ecx
  4089cb:	xor    bl,ah
  4089cd:	or     eax,0x98f58776
  4089d2:	pop    es
  4089d3:	aaa    
  4089d4:	cmp    cl,BYTE PTR [ecx]
  4089d6:	out    0x8,al
  4089d8:	enter  0x5bf8,0x1a
  4089dc:	(bad)  [ebx+0x67]
  4089df:	idiv   DWORD PTR [ebx-0x33]
  4089e2:	sub    esi,ebx
  4089e4:	mov    bh,dl
  4089e6:	add    al,0xf0
  4089e8:	xor    eax,0x14bc8277
  4089ed:	mov    ebx,0xc4d50a95
  4089f2:	and    dh,BYTE PTR [edi-0x56aad9c9]
  4089f8:	retf   
  4089f9:	ret    0xbc56
  4089fc:	sbb    eax,0x7fec80f9
  408a01:	sbb    DWORD PTR [eax-0x9fabe68],ebx
  408a07:	stos   BYTE PTR es:[edi],al
  408a08:	fwait
  408a09:	mov    ebx,0x8036767f
  408a0e:	mov    bh,0x72
  408a10:	lea    ecx,ds:0x50eb6f0d
  408a16:	inc    ebp
  408a17:	and    al,BYTE PTR [ecx-0x65]
  408a1a:	inc    eax
  408a1b:	repz ds mov eax,0x5aa9e562
  408a22:	daa    
  408a23:	(bad)  
  408a24:	std    
  408a25:	push   ecx
  408a26:	sti    
  408a27:	jg     0x408a8c
  408a29:	sub    cl,BYTE PTR [ebx]
  408a2b:	pop    esi
  408a2c:	inc    ebp
  408a2d:	lea    eax,[esi-0x4ef8144b]
  408a33:	arpl   bp,si
  408a35:	sahf   
  408a36:	scas   eax,DWORD PTR es:[edi]
  408a37:	pop    eax
  408a38:	jmp    0xde3b1d07
  408a3d:	out    0x1a,al
  408a3f:	call   0x65a7:0xc9c0a17
  408a46:	inc    ebp
  408a47:	test   edx,esp
  408a49:	dec    eax
  408a4a:	mov    ch,0x5f
  408a4c:	out    0xf,eax
  408a4e:	imul   eax,DWORD PTR [esi-0x18276a1d],0x8d1affbb
  408a58:	out    0xe0,al
  408a5a:	leave  
  408a5b:	scas   eax,DWORD PTR es:[edi]
  408a5c:	repnz xchg esp,eax
  408a5e:	jge    0x408a6e
  408a60:	pop    edi
  408a61:	mov    al,0x72
  408a63:	sbb    eax,0xe4e08b9e
  408a68:	xchg   ecx,ecx
  408a6a:	push   ss
  408a6b:	sub    cl,ch
  408a6d:	mov    bl,0x54
  408a6f:	xchg   esp,eax
  408a70:	jbe    0x408a5a
  408a72:	and    dh,BYTE PTR [ebx]
  408a74:	lds    ebp,FWORD PTR [ecx-0x26]
  408a77:	out    0x42,al
  408a79:	sbb    ebx,eax
  408a7b:	pop    es
  408a7c:	ror    eax,cl
  408a7e:	cwde   
  408a7f:	or     ebx,DWORD PTR [ecx+edi*4-0x6c58d94c]
  408a86:	mov    bl,0x21
  408a88:	sar    DWORD PTR ds:0x2c5cd86b,0xc5
  408a8f:	loopne 0x408a5e
  408a91:	sbb    eax,0xa005ca1e
  408a96:	and    ah,BYTE PTR [edi+0x13]
  408a99:	push   0x4591db60
  408a9e:	xchg   DWORD PTR [eax-0x48fbee5c],ebx
  408aa4:	test   BYTE PTR [ebp-0x53407884],cl
  408aaa:	ins    DWORD PTR es:[edi],dx
  408aab:	inc    edx
  408aac:	mov    ?,WORD PTR [ebp-0x24]
  408aaf:	cmc    
  408ab0:	rcl    BYTE PTR [edx-0x78],0x89
  408ab4:	mov    al,0x16
  408ab6:	and    al,0x11
  408ab8:	outs   dx,DWORD PTR ds:[esi]
  408ab9:	popa   
  408aba:	cwde   
  408abb:	mov    edi,0x5095fd78
  408ac0:	scas   al,BYTE PTR es:[edi]
  408ac1:	dec    eax
  408ac2:	js     0x408b24
  408ac4:	inc    edx
  408ac5:	inc    ebp
  408ac6:	push   0x94fae666
  408acb:	add    ebx,esp
  408acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ace:	iret   
  408acf:	pop    edi
  408ad0:	inc    esi
  408ad1:	(bad)  
  408ad2:	mov    dl,0x5e
  408ad4:	mov    dl,al
  408ad6:	int3   
  408ad7:	sbb    esp,DWORD PTR [ecx]
  408ad9:	int    0x6
  408adb:	ret    
  408adc:	test   DWORD PTR [ecx],0xec0f51d
  408ae2:	push   edx
  408ae3:	or     al,0xfa
  408ae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ae6:	icebp  
  408ae7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ae8:	adc    dh,BYTE PTR [ebp+0x5c30ec13]
  408aee:	retf   
  408aef:	fdiv   DWORD PTR [edi-0x623921ba]
  408af5:	(bad)  
  408af6:	jb     0x408aa2
  408af8:	pop    ebp
  408af9:	adc    BYTE PTR [edi-0x4d01e07e],bl
  408aff:	jo     0x408b22
  408b01:	jbe    0x408af5
  408b03:	xor    DWORD PTR [ebx],ecx
  408b05:	and    dl,BYTE PTR [ebx+eax*2-0x7a2467fd]
  408b0c:	cmc    
  408b0d:	inc    esp
  408b0e:	sub    bl,dh
  408b10:	sub    DWORD PTR [esi+0x3e],edx
  408b13:	neg    DWORD PTR [ebp+0x5a]
  408b16:	mov    bl,0x40
  408b18:	test   al,0x7f
  408b1a:	stc    
  408b1b:	xor    al,0x60
  408b1d:	mov    bh,BYTE PTR [ebp+0x7a]
  408b20:	in     eax,0x8a
  408b22:	push   0x6904b4cc
  408b27:	mov    WORD PTR [esi],?
  408b29:	fadd   st,st(1)
  408b2b:	or     ebx,DWORD PTR [ebx]
  408b2d:	mov    al,ds:0x2a0ac592
  408b32:	xor    BYTE PTR [ecx-0x1e5a09],al
  408b38:	shr    DWORD PTR [esp-0x6f58b8ba],0xde
  408b40:	ficom  DWORD PTR [ecx]
  408b42:	and    bh,BYTE PTR [esp+edi*2]
  408b45:	adc    eax,0x344bb2bb
  408b4a:	adc    eax,0x332e67ab
  408b4f:	mov    bl,BYTE PTR [edx+0x4e19f137]
  408b55:	out    0x97,al
  408b57:	sbb    eax,0x501e38b7
  408b5c:	cmp    eax,0xb7ef142d
  408b61:	cld    
  408b62:	test   DWORD PTR [esi+eiz*4+0xa732d43],ebp
  408b69:	or     bl,BYTE PTR [edx-0x41]
  408b6c:	hlt    
  408b6d:	fld    QWORD PTR [edx]
  408b6f:	jecxz  0x408bdb
  408b71:	dec    DWORD PTR [ebp-0x3f367b87]
  408b77:	cwde   
  408b78:	adc    al,0xe7
  408b7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b7b:	jg     0x408b3b
  408b7d:	icebp  
  408b7e:	mov    dl,BYTE PTR ds:0xebde9320
  408b84:	and    eax,0x36930a5
  408b89:	cwde   
  408b8a:	cmc    
  408b8b:	out    0xe2,eax
  408b8d:	adc    edi,ebx
  408b8f:	xchg   edx,eax
  408b90:	enter  0xecbb,0xba
  408b94:	sti    
  408b95:	test   BYTE PTR [edi+edx*4],dh
  408b98:	addr16 mov esi,0x59881cc5
  408b9e:	out    0x9b,eax
  408ba0:	scas   eax,DWORD PTR es:[edi]
  408ba1:	add    cl,BYTE PTR cs:[edx+0x14]
  408ba5:	pop    ds
  408ba6:	push   edi
  408ba7:	enter  0xecd4,0xf1
  408bab:	outs   dx,DWORD PTR ds:[esi]
  408bac:	or     DWORD PTR ds:0xce758dc9,eax
  408bb2:	daa    
  408bb3:	cli    
  408bb4:	mov    ecx,0xb8ccc487
  408bb9:	repnz pop ecx
  408bbb:	mov    edx,0xe38169bb
  408bc0:	push   edx
  408bc1:	sub    al,0xb4
  408bc3:	xchg   esi,eax
  408bc4:	ret    0x51d5
  408bc7:	in     eax,0xec
  408bc9:	push   ebx
  408bca:	mov    DWORD PTR [esp+edx*1-0x3c],edi
  408bce:	xor    eax,0xb0c7f92a
  408bd3:	repz xlat BYTE PTR ds:[ebx]
  408bd5:	nop
  408bd6:	(bad)  
  408bd8:	mov    ds:0x463d89c2,eax
  408bdd:	fsub   DWORD PTR [ecx+edx*4-0x3ee684fb]
  408be4:	push   ds
  408be5:	ret    0x807a
  408be8:	mov    ds:0x61d9c8ad,eax
  408bed:	mov    ds:0xc9422224,eax
  408bf2:	jne    0x408c5a
  408bf4:	sub    al,0xd9
  408bf6:	iret   
  408bf7:	lahf   
  408bf8:	mov    dh,0x83
  408bfa:	(bad)  
  408bfb:	xlat   BYTE PTR ds:[ebx]
  408bfc:	mul    DWORD PTR [esi-0x4d]
  408bff:	mov    eax,ds:0x7d881c5d
  408c04:	adc    DWORD PTR [bp+di+0x5a],ebx
  408c08:	es (bad) 
  408c0b:	push   0x53
  408c0d:	shl    BYTE PTR [ebx+0x18],0x2b
  408c11:	adc    al,0x7e
  408c13:	mov    al,ds:0xb86b7fc7
  408c18:	mov    dh,0x2b
  408c1a:	(bad)  
  408c1b:	push   ebx
  408c1c:	adc    DWORD PTR ds:[eax+eax*2+0x76],ecx
  408c21:	xchg   dl,dl
  408c23:	xchg   edi,eax
  408c24:	pusha  
  408c25:	jmp    0xe25c:0xa010c89e
  408c2c:	cmp    ch,cl
  408c2e:	pop    edi
  408c2f:	jl     0x408c4e
  408c31:	fxch   st(6)
  408c33:	cdq    
  408c34:	cli    
  408c35:	mov    ds:0x29beda6e,eax
  408c3a:	sub    eax,0x8285fafe
  408c3f:	mov    dh,0x83
  408c41:	bound  esp,QWORD PTR [eax+0x54]
  408c44:	jg     0x408c58
  408c46:	xchg   ebp,eax
  408c47:	push   eax
  408c48:	(bad)  
  408c49:	out    0x8a,eax
  408c4b:	or     esp,edi
  408c4d:	in     al,dx
  408c4e:	aam    0xf7
  408c50:	sbb    ecx,eax
  408c52:	sahf   
  408c53:	sbb    DWORD PTR ds:0xc483937,eax
  408c59:	jbe    0x408bdb
  408c5b:	xor    DWORD PTR [edx],esp
  408c5d:	retf   0x53ee
  408c60:	aaa    
  408c61:	sti    
  408c62:	popa   
  408c63:	pop    edx
  408c64:	les    edi,FWORD PTR [edx]
  408c66:	inc    esp
  408c67:	fs jmp 0x408c2e
  408c6a:	outs   dx,BYTE PTR ds:[esi]
  408c6b:	jo     0x408c34
  408c6d:	pusha  
  408c6e:	sbb    BYTE PTR [ebx+ebx*4+0x6aabbfd7],bl
  408c75:	(bad)  
  408c76:	in     al,dx
  408c77:	adc    eax,0x921692fa
  408c7c:	pop    ds
  408c7d:	jp     0x408c01
  408c7f:	cmp    esp,esi
  408c81:	cwde   
  408c82:	add    eax,eax
  408c84:	sbb    bl,dh
  408c86:	push   cs
  408c87:	int3   
  408c88:	outs   dx,DWORD PTR ds:[esi]
  408c89:	and    DWORD PTR [edx],esi
  408c8b:	lds    edx,FWORD PTR [edi-0x25]
  408c8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c8f:	push   0xffffffdd
  408c91:	push   0x6c49e6b4
  408c96:	lahf   
  408c97:	push   ebx
  408c98:	jb     0x408cde
  408c9a:	sub    ah,BYTE PTR ds:0x2aa8ba6c
  408ca0:	inc    ebp
  408ca1:	mov    BYTE PTR [edi+0x40],dh
  408ca4:	aas    
  408ca5:	adc    eax,DWORD PTR [ecx]
  408ca7:	pop    ds
  408ca8:	out    dx,eax
  408ca9:	out    0xfd,eax
  408cab:	or     DWORD PTR [edx+0x58],edi
  408cae:	adc    DWORD PTR [ecx+0x2b231d69],0x65a6f54b
  408cb8:	dec    ebx
  408cb9:	or     DWORD PTR [edx+edx*4],ebp
  408cbc:	and    eax,0x841151bc
  408cc1:	push   ss
  408cc2:	in     eax,0x66
  408cc4:	mov    edi,DWORD PTR [edx]
  408cc6:	jl     0x408cd6
  408cc8:	jp     0x408c5c
  408cca:	je     0x408d44
  408ccc:	pop    eax
  408ccd:	pop    ebp
  408cce:	mov    edx,0x83f36694
  408cd3:	mov    eax,DWORD PTR [eax+0x3faf2ffd]
  408cd9:	sub    eax,0x15faae6
  408cde:	sub    eax,0x25a329ba
  408ce3:	sbb    edx,DWORD PTR [edi]
  408ce5:	pop    esp
  408ce6:	mov    al,ds:0x495344d1
  408ceb:	cs mov cl,dl
  408cee:	pop    edx
  408cef:	fcmovu st,st(5)
  408cf1:	aam    0x1e
  408cf3:	jne    0x408d4a
  408cf5:	loop   0x408d2c
  408cf7:	push   edx
  408cf8:	jbe    0x408d26
  408cfa:	mov    ah,0x69
  408cfc:	push   esi
  408cfd:	test   al,0x61
  408cff:	lods   eax,DWORD PTR ds:[esi]
  408d00:	out    dx,al
  408d01:	or     edx,0xfd595150
  408d07:	adc    eax,0xc3a39bb7
  408d0c:	mov    cl,0x6d
  408d0e:	and    BYTE PTR [ebx+0x2f],al
  408d11:	fidiv  WORD PTR [edi-0x4d5d8ce6]
  408d17:	pop    ds
  408d18:	push   ebx
  408d19:	ss xchg edi,eax
  408d1b:	lods   al,BYTE PTR ds:[esi]
  408d1c:	cmp    esp,DWORD PTR [edx+0x8]
  408d1f:	cmp    DWORD PTR [esi+0x734bc3af],ebp
  408d25:	xor    DWORD PTR [ebx],edx
  408d27:	gs sbb al,0xf9
  408d2a:	cmc    
  408d2b:	scas   eax,DWORD PTR es:[edi]
  408d2c:	pop    ecx
  408d2d:	test   BYTE PTR [ecx+eax*4-0x8],dh
  408d31:	push   esp
  408d32:	mov    dh,0x41
  408d34:	loopne 0x408cfa
  408d36:	test   al,0x34
  408d38:	ja     0x408ce3
  408d3a:	adc    DWORD PTR [edi+0x2814133d],edx
  408d40:	pop    edi
  408d41:	inc    esi
  408d42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d43:	xor    edx,DWORD PTR [edi]
  408d45:	cld    
  408d46:	xchg   ebx,eax
  408d47:	xchg   ebp,eax
  408d48:	xchg   dl,dl
  408d4a:	pop    edx
  408d4b:	sahf   
  408d4c:	neg    edx
  408d4e:	pop    ecx
  408d4f:	stos   DWORD PTR es:[edi],eax
  408d50:	enter  0xdea0,0x8d
  408d54:	or     al,0x9
  408d56:	or     dl,BYTE PTR [ebx+0x5bdc3ce1]
  408d5c:	iret   
  408d5d:	call   0x8226b767
  408d62:	test   eax,0x9fd7bebc
  408d67:	sub    esp,DWORD PTR [esi]
  408d69:	popf   
  408d6a:	sub    al,0xbf
  408d6c:	jns    0x408d0e
  408d6e:	xchg   esi,eax
  408d6f:	std    
  408d70:	call   0x56db:0x893a5b
  408d77:	(bad)  
  408d78:	retf   
  408d79:	xchg   edi,eax
  408d7a:	dec    ebp
  408d7b:	push   es
  408d7c:	jns    0x408df0
  408d7e:	fistp  DWORD PTR [ecx-0x37]
  408d81:	shl    BYTE PTR [ebx-0x71],0xd5
  408d85:	out    dx,al
  408d86:	sbb    ebx,DWORD PTR [esi+0x6e834df5]
  408d8c:	pop    eax
  408d8d:	jb     0x408dd1
  408d8f:	sub    BYTE PTR [edi],0x57
  408d92:	outs   dx,BYTE PTR ds:[esi]
  408d93:	mov    ecx,0xb0dda925
  408d98:	cld    
  408d99:	inc    edx
  408d9a:	stos   BYTE PTR es:[edi],al
  408d9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d9c:	adc    bl,bh
  408d9e:	iret   
  408d9f:	cmp    dh,BYTE PTR [edx]
  408da1:	popf   
  408da2:	xor    al,0x43
  408da4:	mov    ah,0xa7
  408da6:	cmp    BYTE PTR [edx+0x69d6f19],al
  408dac:	jmp    0x408e06
  408dae:	jecxz  0x408d3f
  408db0:	push   ss
  408db1:	loop   0x408d61
  408db3:	sbb    BYTE PTR [ebx],0x6b
  408db6:	sbb    dl,BYTE PTR [esi-0x1fb82149]
  408dbc:	leave  
  408dbd:	sbb    dh,BYTE PTR [ecx]
  408dbf:	mov    ch,0xc9
  408dc1:	imul   ebx,esi,0x6420911f
  408dc7:	stc    
  408dc8:	and    ebx,DWORD PTR [eax+edx*2+0x1ab75dc7]
  408dcf:	jecxz  0x408dc2
  408dd1:	cmp    dh,BYTE PTR [ecx]
  408dd3:	leave  
  408dd4:	pop    es
  408dd5:	repz pushf 
  408dd7:	push   eax
  408dd8:	xchg   esi,eax
  408dd9:	or     ebp,ebp
  408ddb:	inc    edi
  408ddc:	repz sbb ebp,edx
  408ddf:	fbstp  TBYTE PTR [eax]
  408de1:	add    BYTE PTR [ebx-0x54495d7],ch
  408de7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408de8:	mov    al,0x6b
  408dea:	in     al,0x72
  408dec:	scas   eax,DWORD PTR es:[edi]
  408ded:	add    BYTE PTR [esi-0x78],dh
  408df0:	mov    ds:0x817186dd,eax
  408df5:	cmp    DWORD PTR [esi+0x11db19b4],0x67
  408dfc:	sbb    al,0x54
  408dfe:	dec    edi
  408dff:	push   ss
  408e00:	mov    al,ds:0xb1a3e220
  408e05:	add    al,0xe9
  408e07:	inc    ebx
  408e08:	in     eax,dx
  408e09:	adc    eax,0xd35d0363
  408e0e:	lods   al,BYTE PTR ds:[esi]
  408e0f:	xchg   ebx,eax
  408e10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e11:	sbb    al,0x8a
  408e13:	sahf   
  408e14:	test   DWORD PTR [eax-0x19ab40e3],ebx
  408e1a:	addr16 jp 0x408e4e
  408e1d:	js     0x408e0a
  408e1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e20:	mov    ecx,0x7a0ec5fc
  408e25:	cs and ch,al
  408e28:	arpl   WORD PTR [eax+edi*8-0x79],bp
  408e2c:	sbb    DWORD PTR [edx-0x76],edx
  408e2f:	xchg   esi,eax
  408e30:	and    al,0x49
  408e32:	adc    bl,dh
  408e34:	push   cs
  408e35:	xchg   edi,eax
  408e36:	xchg   ecx,eax
  408e37:	mov    ch,dh
  408e39:	js     0x408e44
  408e3b:	or     dh,BYTE PTR [ecx+0x53]
  408e3e:	mov    ecx,0x1bf18961
  408e43:	div    DWORD PTR [ecx]
  408e45:	out    0x13,eax
  408e47:	mov    esi,DWORD PTR [edi]
  408e49:	pop    ds
  408e4a:	hlt    
  408e4b:	sbb    eax,0xb110af86
  408e50:	lods   al,BYTE PTR ds:[esi]
  408e51:	pushf  
  408e52:	xlat   BYTE PTR ds:[ebx]
  408e53:	loop   0x408e5c
  408e55:	call   0x9e71:0x59a621bc
  408e5c:	push   ds
  408e5d:	jnp    0x408dec
  408e5f:	cvtpi2ps xmm0,QWORD PTR [ecx-0x1f95bcdc]
  408e66:	pop    edx
  408e67:	dec    edx
  408e68:	pop    esi
  408e69:	adc    eax,ebp
  408e6b:	pushf  
  408e6c:	les    edi,FWORD PTR [eax+0x14]
  408e6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e70:	sub    DWORD PTR [ebp-0x29],ebx
  408e73:	sub    edi,DWORD PTR [edx+esi*1+0x2e]
  408e77:	mov    dl,0xe6
  408e79:	stos   BYTE PTR es:[edi],al
  408e7a:	sub    eax,0x2f2123cc
  408e7f:	pop    ecx
  408e80:	gs xchg esp,eax
  408e82:	enter  0xb05,0x60
  408e86:	lods   al,BYTE PTR ds:[esi]
  408e87:	and    al,0x1a
  408e89:	retf   0xa78
  408e8c:	ja     0x408e9b
  408e8e:	dec    edx
  408e8f:	dec    ecx
  408e90:	jne    0x408e6c
  408e92:	loope  0x408e4c
  408e94:	gs push 0x18171b97
  408e9a:	mov    ah,0xa5
  408e9c:	les    eax,FWORD PTR [ebp+0x4a]
  408e9f:	push   cs
  408ea0:	add    BYTE PTR [esi],al
  408ea2:	sar    BYTE PTR [eax+eax*1],0xa6
  408ea6:	push   ecx
  408ea7:	cmp    edx,DWORD PTR [edi+0x38]
  408eaa:	sbb    eax,0xac557c
  408eaf:	fs mov di,0xa8d6
  408eb4:	sbb    eax,0x9c179e07
  408eb9:	jmp    0xde28:0xb400f536
  408ec0:	scas   eax,DWORD PTR es:[edi]
  408ec1:	cs sahf 
  408ec3:	jno    0x408f44
  408ec5:	dec    edx
  408ec6:	addr16 jge 0x408e6a
  408ec9:	fwait
  408eca:	push   esi
  408ecb:	and    esi,DWORD PTR [eax+ebp*4]
  408ece:	out    dx,al
  408ecf:	jmp    0xe602:0x6ba98193
  408ed6:	shl    DWORD PTR [eax+0x10],cl
  408ed9:	clc    
  408eda:	jmp    0x20f413ec
  408edf:	adc    ebp,0x40364baa
  408ee5:	out    dx,al
  408ee6:	sbb    edi,DWORD PTR [ebx+0x5f62d98a]
  408eec:	push   ebp
  408eed:	lock ret 
  408eef:	cs mov ch,0x99
  408ef2:	mov    ds:0xec59d1d1,eax
  408ef7:	sti    
  408ef8:	xor    eax,DWORD PTR [eax-0x2ae4ff0d]
  408efe:	aas    
  408eff:	add    al,bh
  408f01:	sub    BYTE PTR [ebx+0x7b],bl
  408f04:	das    
  408f05:	xor    eax,0x46645835
  408f0a:	pop    edx
  408f0b:	xor    ecx,DWORD PTR [edx]
  408f0d:	fwait
  408f0e:	pop    ebx
  408f0f:	hlt    
  408f10:	xchg   ebp,eax
  408f11:	shr    ch,cl
  408f13:	sahf   
  408f14:	push   esi
  408f15:	sti    
  408f16:	and    eax,0xcda82e61
  408f1b:	je     0x408f46
  408f1d:	dec    esp
  408f1e:	and    al,0x6
  408f20:	xor    ebx,ebx
  408f22:	popf   
  408f23:	pop    eax
  408f24:	push   ss
  408f25:	mov    edi,0x561bb1f7
  408f2a:	add    eax,0x616dbce7
  408f2f:	mov    cl,0x3a
  408f31:	mov    ch,0x8b
  408f33:	mov    edi,0x75c7c5c8
  408f38:	ds cwde 
  408f3a:	int    0xf6
  408f3c:	aas    
  408f3d:	or     DWORD PTR [edi],ebx
  408f3f:	out    dx,eax
  408f40:	pop    edi
  408f41:	repz aaa 
  408f43:	cmp    DWORD PTR [esi+0x182d3dd0],0x10
  408f4a:	sbb    esi,DWORD PTR [ebx]
  408f4c:	jno    0x408f00
  408f4e:	mov    bh,0x20
  408f50:	push   0x166aedd2
  408f55:	add    BYTE PTR [ebp+0x32],ah
  408f58:	jae    0x408f39
  408f5a:	mov    ecx,0x9b70bff6
  408f5f:	daa    
  408f60:	ins    BYTE PTR es:[edi],dx
  408f61:	mov    dh,BYTE PTR [edi]
  408f63:	ins    BYTE PTR es:[edi],dx
  408f64:	or     eax,0xadccb125
  408f69:	mov    bh,0xab
  408f6b:	cmp    ecx,ecx
  408f6d:	jge    0x408eef
  408f6f:	iret   
  408f70:	dec    esi
  408f71:	adc    al,0x6d
  408f73:	pop    DWORD PTR [edx-0x13]
  408f76:	outs   dx,DWORD PTR ds:[esi]
  408f77:	push   esi
  408f78:	inc    ecx
  408f79:	clc    
  408f7a:	fst    DWORD PTR [edi]
  408f7c:	adc    ah,BYTE PTR [edi]
  408f7e:	arpl   bp,ax
  408f80:	jns    0x408fa8
  408f82:	stos   DWORD PTR es:[edi],eax
  408f83:	inc    ecx
  408f84:	jle    0x408f46
  408f86:	adc    eax,0x4a79e917
  408f8b:	(bad)  
  408f8c:	scas   al,BYTE PTR es:[edi]
  408f8d:	and    al,0x87
  408f8f:	rcr    BYTE PTR [edx-0x3b],0x3a
  408f93:	ds nop
  408f95:	mov    ds:0x8505d6ba,eax
  408f9a:	or     DWORD PTR [esi+esi*2-0x421837a0],eax
  408fa1:	mov    ecx,0xb8e7b29d
  408fa6:	push   0x895d5973
  408fab:	loope  0x408f36
  408fad:	cwde   
  408fae:	push   ebx
  408faf:	fwait
  408fb0:	lea    eax,[ebx]
  408fb2:	lods   eax,DWORD PTR ds:[esi]
  408fb3:	repz pop ebp
  408fb5:	aaa    
  408fb6:	arpl   WORD PTR [edx-0xa],dx
  408fb9:	cmp    eax,0x7349c75
  408fbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fbf:	and    BYTE PTR [edi-0x3a32c34],bh
  408fc5:	push   es
  408fc6:	add    dh,BYTE PTR [edi-0x50df11cb]
  408fcc:	pop    eax
  408fcd:	test   eax,0x6fdf4731
  408fd2:	pop    esi
  408fd3:	lods   al,BYTE PTR ds:[esi]
  408fd4:	loopne 0x408f97
  408fd6:	int3   
  408fd7:	inc    eax
  408fd8:	xlat   BYTE PTR ds:[ebx]
  408fd9:	call   0xe813:0x355fce7f
  408fe0:	mov    esi,0xe825d5e7
  408fe5:	lea    edx,[ecx+0x2a]
  408fe8:	fwait
  408fe9:	jle    0x409040
  408feb:	mov    ebp,0x69caddf
  408ff0:	fcmovne st,st(2)
  408ff2:	vunpcklps ymm3,ymm0,YMMWORD PTR [edx]
  408ff6:	lods   al,BYTE PTR ds:[esi]
  408ff7:	mov    ebx,DWORD PTR [ecx]
  408ff9:	xor    dl,dl
  408ffb:	pop    ebx
  408ffc:	push   edi
  408ffd:	leave  
  408ffe:	add    al,0xa1
  409000:	icebp  
  409001:	or     BYTE PTR [ecx+ebx*1+0x771a46f2],0x65
  409009:	in     eax,0x61
  40900b:	xchg   WORD PTR [ebp+0x31c3bdf5],si
  409012:	repnz cmp edi,0xffffffa8
  409016:	test   eax,0xf56c5b41
  40901b:	scas   eax,DWORD PTR es:[edi]
  40901c:	dec    ecx
  40901d:	ret    0x6d9d
  409020:	push   cs
  409021:	jl     0x409039
  409023:	xlat   BYTE PTR ds:[ebx]
  409024:	push   eax
  409025:	fdivr  st(3),st
  409027:	jmp    0xe1da:0xf9ae1df7
  40902e:	daa    
  40902f:	stos   DWORD PTR es:[edi],eax
  409030:	(bad)  
  409032:	int    0x96
  409034:	jb     0x40901b
  409036:	dec    esi
  409037:	int    0x35
  409039:	jl     0x40905f
  40903b:	rcl    cl,cl
  40903d:	or     BYTE PTR [edx-0x11],0x96
  409041:	xchg   edx,eax
  409042:	lock sbb DWORD PTR [eax+0x5d],ebx
  409046:	scas   eax,DWORD PTR es:[edi]
  409047:	mov    ds:0x1d51cba3,al
  40904c:	icebp  
  40904d:	rcr    BYTE PTR [edx-0x58],cl
  409050:	adc    edi,esp
  409052:	cmp    edx,0xfffffffc
  409055:	mov    ebx,0x98653c25
  40905a:	mov    ch,0x6f
  40905c:	frstor [esi-0x6]
  40905f:	leave  
  409060:	enter  0x3d55,0xd3
  409064:	imul   ebp,DWORD PTR [esi],0xffffffa8
  409067:	in     eax,dx
  409068:	mov    ds:0xc0ddd12a,al
  40906d:	test   eax,0x4d51f08e
  409072:	or     eax,0x1b1a5a3d
  409077:	sub    al,0xbf
  409079:	xor    dl,ah
  40907b:	push   esi
  40907c:	inc    edi
  40907d:	adc    eax,0xf49a6560
  409082:	or     bl,dl
  409084:	clc    
  409085:	adc    al,0x30
  409087:	fsub   st(2),st
  409089:	popa   
  40908a:	xchg   ebx,eax
  40908b:	adc    DWORD PTR [ebx+0x29677936],eax
  409091:	in     al,dx
  409092:	or     eax,0xa33f634e
  409097:	cmp    dl,BYTE PTR [eax]
  409099:	and    DWORD PTR [ebp+0x5cb3e6db],ecx
  40909f:	(bad)  
  4090a1:	xchg   ebp,eax
  4090a2:	push   esi
  4090a3:	push   0x24
  4090a5:	adc    ah,BYTE PTR [esi+ebx*4+0x239f2d35]
  4090ac:	add    DWORD PTR [ebp-0x2290b9f7],ecx
  4090b2:	pop    esp
  4090b3:	pop    edx
  4090b4:	jmp    0xe3c29eb0
  4090b9:	popa   
  4090ba:	sbb    al,0xfa
  4090bc:	jecxz  0x4090be
  4090be:	add    cl,dh
  4090c0:	push   ss
  4090c1:	push   eax
  4090c2:	sbb    eax,0xf2d5c31e
  4090c7:	push   es
  4090c8:	jnp    0x409067
  4090ca:	fwait
  4090cb:	data16 xlat BYTE PTR ds:[ebx]
  4090cd:	sub    ah,BYTE PTR [ecx]
  4090cf:	jmp    0x35da7c19
  4090d4:	sub    esp,DWORD PTR [esi+0x5777f51d]
  4090da:	adc    BYTE PTR [edx],bl
  4090dc:	push   ebp
  4090dd:	adc    eax,0x98dbf31e
  4090e2:	dec    esi
  4090e3:	retf   0x5d09
  4090e6:	inc    eax
  4090e7:	neg    DWORD PTR [edx+ecx*4+0x51]
  4090eb:	dec    esi
  4090ec:	ror    ebx,0x1
  4090ef:	dec    esp
  4090f0:	xor    edi,DWORD PTR [edx+ebp*1-0x4e5d791e]
  4090f7:	push   ebx
  4090f8:	or     bh,dh
  4090fa:	out    0x2b,al
  4090fc:	ret    0xd46e
  4090ff:	arpl   WORD PTR [edi+0x368e2554],sp
  409105:	daa    
  409106:	enter  0x8a71,0xc4
  40910a:	ins    BYTE PTR es:[edi],dx
  40910b:	loopne 0x409130
  40910d:	xor    al,0xab
  40910f:	out    dx,al
  409110:	das    
  409111:	push   edi
  409112:	xor    bh,BYTE PTR [eax+0x18]
  409115:	inc    edx
  409116:	(bad)  
  409117:	(bad)
  40911a:	mov    bl,0xd6
  40911c:	int3   
  40911d:	test   al,0xa7
  40911f:	in     al,dx
  409120:	hlt    
  409121:	sub    al,0x57
  409123:	push   ebx
  409124:	mov    esp,0x197c3218
  409129:	aad    0xf9
  40912b:	dec    esi
  40912c:	or     edx,0xffffffdd
  40912f:	aaa    
  409130:	dec    ebp
  409131:	pop    ss
  409132:	dec    ebx
  409133:	sub    al,0x6c
  409135:	and    al,0x2
  409137:	inc    edx
  409138:	sar    esi,cl
  40913a:	pop    edi
  40913b:	xchg   BYTE PTR [ebp+ebx*4-0x1],dh
  40913f:	push   ds
  409140:	cmc    
  409141:	sbb    dh,BYTE PTR [esi-0x34041fd7]
  409147:	mov    ebp,0x204769b9
  40914c:	aam    0xb9
  40914e:	dec    esi
  40914f:	mov    edi,0x886f277
  409154:	jmp    0x8d99782e
  409159:	je     0x40919c
  40915b:	and    al,0x2e
  40915d:	xor    eax,0x3638a10f
  409162:	loopne 0x409108
  409164:	fidivr WORD PTR [ebx-0xc]
  409167:	push   ecx
  409168:	mov    ch,0xbb
  40916a:	dec    esi
  40916b:	(bad)  
  40916c:	mov    bh,0x8a
  40916e:	daa    
  40916f:	pop    esp
  409170:	or     eax,0xfa1271e1
  409175:	push   edx
  409176:	adc    dl,BYTE PTR [edi-0x7c]
  409179:	or     ebx,DWORD PTR [esi+edi*2]
  40917c:	loope  0x4091e8
  40917e:	aaa    
  40917f:	jecxz  0x40915d
  409181:	inc    esp
  409182:	iret   
  409183:	sbb    esi,DWORD PTR [eax]
  409185:	cli    
  409186:	es dec ecx
  409188:	mov    ebp,ebp
  40918a:	or     eax,0xe85ee31c
  40918f:	mov    DWORD PTR [edx],ebx
  409191:	jbe    0x40916c
  409193:	sub    al,0x1e
  409195:	fisub  WORD PTR [eax]
  409197:	sub    eax,0xd4f2169
  40919c:	mov    BYTE PTR [ecx+0x34],ch
  40919f:	push   es
  4091a0:	and    BYTE PTR [edi+0x6a],ah
  4091a3:	fimul  WORD PTR [ecx-0x65a4963a]
  4091a9:	ret    0x522f
  4091ac:	cli    
  4091ad:	inc    edi
  4091ae:	add    DWORD PTR [eax-0x4b],esp
  4091b1:	push   ss
  4091b2:	jge    0x40919e
  4091b4:	imul   ebx,DWORD PTR [esi+0x56],0xfffffffb
  4091b8:	jp     0x4091f6
  4091ba:	mov    edi,0xc2204799
  4091bf:	fucomip st,st(4)
  4091c1:	fidivr WORD PTR [ebp-0x44]
  4091c4:	jmp    0x5787:0xe7d62e91
  4091cb:	out    dx,eax
  4091cc:	add    al,0x24
  4091ce:	gs jbe 0x4091f0
  4091d1:	sbb    edx,DWORD PTR ds:0x1f0e3f8e
  4091d7:	inc    eax
  4091d8:	iret   
  4091d9:	loope  0x40918c
  4091db:	clc    
  4091dc:	test   BYTE PTR [ecx],al
  4091de:	fmulp  st(5),st
  4091e0:	pop    esi
  4091e1:	stos   BYTE PTR es:[edi],al
  4091e2:	mov    WORD PTR [edx],gs
  4091e4:	mov    ds:0x686bb69c,eax
  4091e9:	lahf   
  4091ea:	(bad)  
  4091eb:	mov    al,BYTE PTR [esi+0x69]
  4091ee:	dec    esp
  4091ef:	fmul   QWORD PTR [edi+0x1b653053]
  4091f5:	bnd jg 0x4091ce
  4091f8:	lods   al,BYTE PTR ds:[esi]
  4091f9:	daa    
  4091fa:	popf   
  4091fb:	inc    esp
  4091fc:	hlt    
  4091fd:	mov    bl,0x5e
  4091ff:	xor    al,0xa5
  409201:	dec    ecx
  409202:	nop
  409203:	mov    al,0x74
  409205:	call   DWORD PTR [eax+0x2229e2b2]
  40920b:	(bad)  
  40920c:	mov    edi,0x1216b363
  409211:	(bad)  
  409213:	or     eax,0xa03ba32c
  409218:	shl    bh,0x72
  40921b:	stc    
  40921c:	scas   eax,DWORD PTR es:[edi]
  40921d:	lods   al,BYTE PTR ds:[esi]
  40921e:	add    esp,eax
  409220:	inc    eax
  409221:	xchg   ecx,eax
  409222:	scas   al,BYTE PTR es:[edi]
  409223:	retf   
  409224:	in     eax,dx
  409225:	pop    es
  409226:	aaa    
  409227:	lahf   
  409228:	dec    eax
  409229:	mov    esp,0x1567b25
  40922f:	jmp    ebx
  409231:	push   eax
  409232:	add    DWORD PTR ds:0x1437da21,esi
  409238:	ss aas 
  40923a:	mov    BYTE PTR [eax+0x1c4199d8],dh
  409240:	icebp  
  409241:	fldcw  WORD PTR [ebp-0x10]
  409244:	in     al,0x8d
  409246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409247:	aam    0x9d
  409249:	ror    ebp,cl
  40924b:	jnp    0x409259
  40924d:	in     al,0x85
  40924f:	sub    esi,edx
  409251:	ret    
  409252:	pop    ss
  409253:	arpl   WORD PTR [ebx-0x20853213],cx
  409259:	mov    ds:0x1431ae10,al
  40925e:	and    edi,ebp
  409260:	js     0x409259
  409262:	lods   eax,DWORD PTR ds:[esi]
  409263:	xchg   esp,eax
  409264:	lock mov ebx,0x584ab42f
  40926a:	xchg   ebx,eax
  40926b:	rcr    DWORD PTR [eax-0x45],0xc5
  40926f:	imul   ecx,DWORD PTR [eax],0xffffff84
  409272:	imul   ebx,DWORD PTR [edx-0x8],0xd1322c7f
  409279:	mov    edx,DWORD PTR [esi+0x7d]
  40927c:	sbb    al,0x4a
  40927e:	mov    ch,0xc1
  409280:	push   ds
  409281:	ret    
  409282:	loop   0x4092aa
  409284:	adc    BYTE PTR [edx],cl
  409286:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409287:	lock push ebx
  409289:	ror    cl,1
  40928b:	jo     0x40926e
  40928d:	in     al,dx
  40928e:	adc    DWORD PTR [edx+0x75],esi
  409291:	jno    0x4092d6
  409293:	jbe    0x4092fb
  409295:	inc    esp
  409296:	test   eax,0x6f2bdcc2
  40929b:	ja     0x4092b9
  40929d:	fsub   QWORD PTR [edx]
  40929f:	ret    
  4092a0:	stc    
  4092a1:	test   DWORD PTR [ebx],eax
  4092a3:	mov    eax,ds:0x41d55d60
  4092a8:	jb     0x409280
  4092aa:	mov    DWORD PTR [edi-0x6f],0x957f5dc1
  4092b1:	jmp    0x40925a
  4092b3:	ss xor eax,0xb37e3388
  4092b9:	push   0x2d165616
  4092be:	xor    ebx,eax
  4092c0:	xchg   esi,eax
  4092c1:	ja     0x4092d6
  4092c3:	fsubr  st,st(2)
  4092c5:	dec    ecx
  4092c6:	aas    
  4092c7:	ds (bad) 
  4092c9:	cmc    
  4092ca:	jecxz  0x40929b
  4092cc:	call   0xdf40:0xf9f62579
  4092d3:	mov    ah,bh
  4092d5:	das    
  4092d6:	pop    es
  4092d7:	clc    
  4092d8:	push   0xffffffa7
  4092da:	xchg   esp,eax
  4092db:	rcl    DWORD PTR ds:0xb11fd5dd,0xbf
  4092e2:	arpl   WORD PTR [edx+edx*4],sp
  4092e5:	std    
  4092e6:	xlat   BYTE PTR ds:[ebx]
  4092e7:	xlat   BYTE PTR ds:[ebx]
  4092e8:	sbb    ebp,DWORD PTR [ebx-0x27bcedda]
  4092ee:	sti    
  4092ef:	or     edx,0xdf2bda61
  4092f5:	enter  0x64e6,0xc1
  4092f9:	test   al,0x3f
  4092fb:	pop    ds
  4092fc:	mov    edi,0x6c66f82c
  409301:	fnsave [esi-0x11]
  409304:	xchg   esp,eax
  409305:	mov    al,0xf4
  409307:	cmp    DWORD PTR [ebx+0x2303792d],eax
  40930d:	jecxz  0x409320
  40930f:	jmp    0x2ccb:0xecf6f381
  409316:	adc    ebx,DWORD PTR [eax-0x53f9f460]
  40931c:	dec    edx
  40931d:	fwait
  40931e:	jo     0x409310
  409320:	inc    esp
  409321:	les    esi,FWORD PTR [edx-0x2d215722]
  409327:	mov    ds:0x53cecec8,eax
  40932c:	pop    es
  40932d:	(bad)  
  40932f:	(bad)  
  409330:	hlt    
  409331:	mov    cl,0xc0
  409333:	adc    al,0xf
  409335:	adc    ebp,ecx
  409337:	push   es
  409338:	ds inc edx
  40933a:	(bad)  
  40933b:	mov    ebp,0x54879c57
  409340:	mov    WORD PTR [edx-0x7cfa03e2],?
  409346:	pop    esi
  409347:	cdq    
  409348:	mov    ch,0x27
  40934a:	and    al,BYTE PTR [ebp-0x15]
  40934d:	dec    esp
  40934e:	push   ss
  40934f:	jl     0x409323
  409351:	rep ins DWORD PTR es:[edi],dx
  409353:	add    DWORD PTR [esi],edx
  409355:	inc    ebx
  409356:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409357:	dec    edi
  409358:	and    eax,0xc9017816
  40935d:	enter  0x42e4,0xd0
  409361:	fisttp QWORD PTR [ebx-0x587a5740]
  409367:	sbb    bl,ah
  409369:	sub    DWORD PTR [ebp-0x5f3f84ca],eax
  40936f:	cwde   
  409370:	sub    al,0x88
  409372:	shr    eax,1
  409374:	dec    edi
  409375:	xor    edx,DWORD PTR [esi]
  409377:	sbb    edi,esi
  409379:	push   ss
  40937a:	jno    0x409356
  40937c:	retf   0x9287
  40937f:	jno    0x4093ff
  409381:	fimul  DWORD PTR [eax+0x22]
  409384:	dec    esi
  409385:	mov    ebp,DWORD PTR [esp+eax*8+0x2c]
  409389:	(bad)  
  40938a:	jmp    0x5fd2:0x9015655c
  409391:	jmp    0x409355
  409393:	push   ebp
  409394:	in     al,dx
  409395:	clc    
  409396:	aad    0xce
  409398:	fistp  QWORD PTR ds:0x3c431dce
  40939e:	aaa    
  40939f:	sub    ch,ch
  4093a1:	xor    ah,BYTE PTR [edx+0x57c73aea]
  4093a7:	and    dh,ch
  4093a9:	lds    edx,FWORD PTR [ecx]
  4093ab:	lods   al,BYTE PTR ds:[esi]
  4093ac:	sub    eax,0x8502412
  4093b1:	xchg   DWORD PTR [ebp-0x6e],esi
  4093b4:	jg     0x409389
  4093b6:	adc    bh,ch
  4093b8:	lds    esi,FWORD PTR [eax-0x3622f037]
  4093be:	pause  
  4093c0:	stos   BYTE PTR es:[edi],al
  4093c1:	cmp    DWORD PTR [esi+0xb],0xffffffa5
  4093c5:	xor    al,0x8d
  4093c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093c8:	inc    esp
  4093c9:	rol    DWORD PTR [edi],1
  4093cb:	ss jmp 0x7df5:0x2fe3adea
  4093d3:	out    0x6f,al
  4093d5:	mov    ebp,0x6d9e09e9
  4093da:	les    esi,FWORD PTR [ecx+0x97e7ce]
  4093e0:	outs   dx,BYTE PTR ds:[esi]
  4093e1:	ins    BYTE PTR es:[edi],dx
  4093e2:	push   ss
  4093e3:	mov    esi,0x9db8fc6a
  4093e8:	data16 jl 0x4093dc
  4093eb:	sub    al,0xe
  4093ed:	xor    DWORD PTR [ebx+0x1be35b2c],0x12
  4093f4:	ds mov ecx,0x710c75a5
  4093fa:	gs jle 0x1e3020d
  409401:	ins    DWORD PTR es:[edi],dx
  409402:	mov    eax,ds:0x644cbbe1
  409407:	gs jns 0x4093c2
  40940a:	sub    bl,BYTE PTR [eax-0x75b8456a]
  409410:	lock jno 0x4093b7
  409413:	out    dx,eax
  409414:	jmp    0x994e:0x9d268794
  40941b:	pop    edx
  40941c:	imul   edi,DWORD PTR [ebx+0x11],0x963ee67b
  409423:	push   ebx
  409424:	(bad)  
  409425:	mov    cl,0xd9
  409427:	ret    0x71de
  40942a:	lea    ecx,[ebx+0x4549d52e]
  409430:	hlt    
  409431:	or     eax,0xc063151a
  409436:	scas   al,BYTE PTR es:[edi]
  409437:	push   esp
  409438:	data16 adc BYTE PTR [ebp+0x541bd6bd],al
  40943f:	xchg   DWORD PTR [edx+0x15],esp
  409442:	(bad)  
  409443:	outs   dx,DWORD PTR ds:[esi]
  409444:	dec    ebx
  409445:	xor    ecx,esi
  409447:	push   0xffffffd5
  409449:	cmp    ebp,esi
  40944b:	mov    dl,al
  40944d:	scas   al,BYTE PTR es:[edi]
  40944e:	fisttp WORD PTR [ecx-0x78]
  409451:	ins    DWORD PTR es:[edi],dx
  409452:	and    DWORD PTR [ebx-0x7f7f75fa],ebx
  409458:	aam    0xc6
  40945a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40945b:	and    eax,0x88610d95
  409460:	xor    BYTE PTR [ecx+0x1f],ch
  409463:	(bad)  
  409464:	repz jle 0x409436
  409467:	in     eax,dx
  409468:	jg     0x40942c
  40946a:	out    0x24,al
  40946c:	sbb    al,0x9b
  40946e:	xchg   esp,eax
  40946f:	js     0x4094b0
  409471:	adc    bh,BYTE PTR [ebp+0x70]
  409474:	cmp    ch,dl
  409476:	push   edx
  409477:	mov    esi,0x61b6bef1
  40947c:	pop    ecx
  40947d:	adc    eax,0x92c0b201
  409482:	(bad)  
  409483:	fisubr WORD PTR [ebx+eiz*1-0x2c]
  409487:	retf   0x411f
  40948a:	mov    bl,0xdd
  40948c:	aaa    
  40948d:	pop    ebp
  40948e:	pop    eax
  40948f:	es hlt 
  409491:	test   al,0xce
  409493:	aad    0xf3
  409495:	cld    
  409496:	mov    esp,0x468f81aa
  40949b:	and    DWORD PTR [ecx+esi*8],edx
  40949e:	std    
  40949f:	mov    WORD PTR [edi-0x46190880],fs
  4094a5:	ins    DWORD PTR es:[edi],dx
  4094a6:	fimul  DWORD PTR [eax]
  4094a8:	push   0x15
  4094aa:	inc    esp
  4094ab:	sbb    DWORD PTR [eax+edx*8],edi
  4094ae:	ja     0x40946a
  4094b0:	mov    cl,0xff
  4094b2:	sub    dh,BYTE PTR [edi-0x74f64a9]
  4094b8:	scas   al,BYTE PTR es:[edi]
  4094b9:	mov    BYTE PTR [edx+0x52689c57],bh
  4094bf:	adc    DWORD PTR [ebx-0x32cad56c],0x32
  4094c6:	(bad)  
  4094c7:	push   eax
  4094c8:	stos   BYTE PTR es:[edi],al
  4094c9:	in     eax,0x37
  4094cb:	aam    0xc
  4094cd:	mov    eax,0x577e78fd
  4094d2:	mov    ecx,0xe52581a2
  4094d7:	dec    edx
  4094d8:	int3   
  4094d9:	imul   edx,edi,0xc31f42da
  4094df:	mov    eax,ds:0xebd49b6
  4094e4:	cmp    esi,edi
  4094e6:	sub    eax,0xeccccaf3
  4094eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094ec:	and    dh,bh
  4094ee:	push   0x76b86401
  4094f3:	xchg   ebp,eax
  4094f4:	xchg   cl,dl
  4094f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094f7:	inc    ebp
  4094f8:	pop    ebx
  4094f9:	adc    edx,DWORD PTR [edx]
  4094fb:	cmc    
  4094fc:	and    ch,0x6c
  4094ff:	popa   
  409500:	es sub al,0x13
  409503:	jge    0x409487
  409505:	(bad)  
  409506:	mov    cl,0xa9
  409508:	dec    ebx
  409509:	sub    dh,BYTE PTR [edi]
  40950b:	aad    0xea
  40950d:	mov    edx,0x727c7073
  409512:	neg    DWORD PTR [ebp-0x68]
  409515:	dec    ebx
  409516:	jb     0x409565
  409518:	pop    eax
  409519:	lods   eax,DWORD PTR ds:[esi]
  40951a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40951b:	add    BYTE PTR [edi],dh
  40951d:	inc    esp
  40951e:	dec    ecx
  40951f:	stos   DWORD PTR es:[edi],eax
  409520:	cwde   
  409521:	popa   
  409522:	daa    
  409523:	(bad)  
  409524:	out    0x46,al
  409526:	int    0x14
  409528:	add    ah,dh
  40952a:	push   esi
  40952b:	mov    ecx,0xc4f83d3d
  409530:	jmp    0x9575cbca
  409535:	jge    0x409589
  409537:	ret    
  409538:	jae    0x835978e7
  40953e:	jecxz  0x4095ae
  409540:	ds jmp 0xd96b:0xd06da097
  409548:	sbb    al,0xc0
  40954a:	std    
  40954b:	push   0xffffffe2
  40954d:	pop    es
  40954e:	les    eax,FWORD PTR [edi+0x6]
  409551:	popf   
  409552:	(bad)  
  409553:	mov    esi,0x89ddde3f
  409558:	xchg   esi,eax
  409559:	pop    es
  40955a:	out    0x7a,eax
  40955c:	retf   0xc91c
  40955f:	mov    al,bl
  409561:	aaa    
  409562:	sbb    ah,BYTE PTR [esi+0x58]
  409565:	mov    DWORD PTR [ebx+edx*4+0x39],ebx
  409569:	inc    ebp
  40956a:	test   eax,edx
  40956c:	clc    
  40956d:	ins    DWORD PTR es:[edi],dx
  40956e:	(bad)  
  40956f:	sbb    eax,0x4b957319
  409574:	and    DWORD PTR [esi+ebx*1-0x66],edx
  409578:	scas   eax,DWORD PTR es:[edi]
  409579:	xor    eax,0xfc6673fb
  40957e:	outs   dx,DWORD PTR ds:[esi]
  40957f:	mov    ch,0x3c
  409581:	(bad)  
  409582:	push   esi
  409583:	clc    
  409584:	mov    WORD PTR [ecx+0x9],ds
  409587:	sbb    DWORD PTR [edx],esp
  409589:	imul   esp,DWORD PTR [edx-0x10],0x5b7c88ad
  409590:	popf   
  409591:	add    ebx,DWORD PTR [ebx-0x55]
  409594:	sub    ecx,DWORD PTR [esi+0x1c]
  409597:	mov    ebp,0x842ff32a
  40959c:	stos   BYTE PTR es:[edi],al
  40959d:	(bad)  [ebx]
  40959f:	inc    esi
  4095a0:	xor    BYTE PTR [esi+0x69efbedb],dh
  4095a6:	test   eax,0xc2e815b0
  4095ab:	aam    0xaf
  4095ad:	cmp    al,0x50
  4095af:	add    DWORD PTR [eax],esp
  4095b1:	sbb    ax,0x522f
  4095b5:	push   ebp
  4095b6:	shl    ecx,cl
  4095b8:	mov    eax,ds:0x53b3deca
  4095bd:	xor    ecx,DWORD PTR [ebp-0xf]
  4095c0:	and    DWORD PTR [eax],edx
  4095c2:	js     0x4095c1
  4095c4:	int    0xa9
  4095c6:	icebp  
  4095c7:	xchg   ebp,eax
  4095c8:	bound  ecx,QWORD PTR [esi]
  4095ca:	ins    BYTE PTR es:[edi],dx
  4095cb:	and    eax,0xab9088bf
  4095d0:	js     0x409589
  4095d2:	pop    ecx
  4095d3:	in     eax,0x65
  4095d5:	adc    BYTE PTR [ecx],cl
  4095d7:	mov    ebp,0x784a17c5
  4095dc:	or     DWORD PTR [ecx],edx
  4095de:	es push edx
  4095e0:	xchg   DWORD PTR [ebx],ebx
  4095e2:	mov    dh,BYTE PTR [eax+edx*8-0x8df0f8c]
  4095e9:	dec    edi
  4095ea:	xor    dh,BYTE PTR [edi]
  4095ec:	std    
  4095ed:	loope  0x40966a
  4095ef:	pop    ss
  4095f0:	pop    esi
  4095f1:	fcmovnbe st,st(6)
  4095f3:	je     0x40963e
  4095f5:	inc    eax
  4095f7:	mov    ebx,eax
  4095f9:	pop    ecx
  4095fa:	imul   edx,DWORD PTR [edi+0x434b643f],0xb72a0629
  409604:	aaa    
  409605:	call   0x5f89:0xd6ee9b77
  40960c:	retf   
  40960d:	rol    DWORD PTR [ecx],cl
  40960f:	pop    es
  409610:	jmp    0x279169a5
  409615:	and    ebp,DWORD PTR [edx-0x6a]
  409618:	mov    ch,0x37
  40961a:	push   0xffffff96
  40961c:	jmp    0x3e3f3a85
  409621:	cmp    ebx,esi
  409623:	(bad)  
  409624:	fstp   DWORD PTR [eax+edi*4+0x3828abae]
  40962b:	test   ch,al
  40962d:	dec    ebp
  40962e:	dec    edx
  40962f:	mov    bl,0xc7
  409631:	xor    eax,0x7dd9f75f
  409636:	or     eax,0x3640cdf2
  40963b:	loop   0x409653
  40963d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40963e:	push   edx
  40963f:	das    
  409640:	sub    eax,0x9481ca53
  409645:	inc    eax
  409646:	pop    ss
  409647:	or     cl,BYTE PTR [ebx-0x6fd92c05]
  40964d:	dec    edi
  40964e:	sub    ecx,ecx
  409650:	mov    edi,0x2ae4e821
  409655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409656:	pop    ss
  409657:	int3   
  409658:	js     0x4095f5
  40965a:	cli    
  40965b:	gs dec esi
  40965d:	xchg   ah,bl
  40965f:	gs xchg esp,eax
  409661:	mov    dl,0xea
  409663:	xchg   DWORD PTR [ebp+0x4d278a92],ebp
  409669:	add    eax,0xa6246d41
  40966e:	outs   dx,BYTE PTR ds:[esi]
  40966f:	pop    eax
  409670:	std    
  409671:	retf   0xd00c
  409674:	rcr    BYTE PTR [edx],cl
  409676:	int    0x98
  409678:	pop    ds
  409679:	out    dx,al
  40967a:	test   al,0x3e
  40967c:	mov    bl,0x6a
  40967e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40967f:	pop    eax
  409680:	cmp    eax,ecx
  409682:	push   ecx
  409683:	pop    ss
  409684:	out    dx,al
  409685:	loopne 0x409608
  409687:	cmp    ebp,esi
  409689:	sub    edi,ebx
  40968b:	push   edi
  40968c:	stc    
  40968d:	stos   DWORD PTR es:[edi],eax
  40968e:	sub    BYTE PTR [ebx+0x57],bl
  409691:	push   0xc38990a2
  409696:	cmp    eax,0xe7ff63f0
  40969b:	ss dec ebp
  40969d:	cmp    eax,0xf5973835
  4096a2:	xchg   ebx,eax
  4096a3:	jl     0x4096bb
  4096a5:	xchg   ebp,eax
  4096a6:	cs int3 
  4096a8:	and    bh,BYTE PTR [ebp+ecx*1-0x51d3930a]
  4096af:	jnp    0x4096cf
  4096b1:	neg    DWORD PTR [eax-0x75]
  4096b4:	xchg   edi,eax
  4096b5:	nop
  4096b6:	mov    al,0x34
  4096b8:	dec    ebx
  4096b9:	into   
  4096ba:	clc    
  4096bb:	push   es
  4096bc:	jp     0x40964d
  4096be:	ins    DWORD PTR es:[edi],dx
  4096bf:	push   ss
  4096c0:	or     bh,BYTE PTR [edi+0x1d]
  4096c3:	dec    ecx
  4096c4:	scas   eax,DWORD PTR es:[edi]
  4096c5:	mov    ds:0xb8aad537,eax
  4096ca:	and    al,0xfe
  4096cc:	mov    al,ds:0xd58832a1
  4096d1:	jge    0x4096d9
  4096d3:	sbb    al,0x67
  4096d5:	aad    0x5a
  4096d7:	dec    esp
  4096d8:	out    0x12,al
  4096da:	test   al,0x95
  4096dc:	(bad)  
  4096dd:	mov    ecx,0x4eb6f803
  4096e2:	mov    eax,0xc648204a
  4096e7:	imul   edx,edi,0xe
  4096ea:	(bad)  
  4096eb:	dec    ebp
  4096ec:	test   DWORD PTR [ebx],esi
  4096ee:	jmp    0x54897c16
  4096f3:	(bad)  
  4096f4:	cmc    
  4096f5:	es in  al,0xd9
  4096f8:	shl    DWORD PTR [ebp+0x46],cl
  4096fb:	outs   dx,BYTE PTR ds:[esi]
  4096fc:	push   eax
  4096fd:	sub    esi,DWORD PTR [ecx]
  4096ff:	mov    ds:0x1f85e553,eax
  409704:	ds pop esi
  409706:	inc    ebp
  409707:	add    ch,dh
  409709:	test   al,0xf3
  40970b:	xor    BYTE PTR [edi+0xd],0xe8
  40970f:	inc    ecx
  409710:	jmp    0xb711597a
  409715:	xchg   esi,eax
  409716:	test   BYTE PTR [edi+esi*4],bl
  409719:	or     al,cl
  40971b:	cmp    eax,0xea278af8
  409720:	mov    eax,ds:0x7293c4bc
  409725:	inc    esi
  409726:	xchg   edx,eax
  409727:	push   ds
  409728:	and    dl,BYTE PTR [ecx-0x9]
  40972b:	inc    edx
  40972c:	out    dx,al
  40972d:	(bad)  
  40972e:	repnz int3 
  409730:	xchg   edx,eax
  409731:	and    bl,dl
  409733:	ret    0xc58b
  409736:	stos   BYTE PTR es:[edi],al
  409737:	xchg   ebx,eax
  409738:	daa    
  409739:	add    dl,BYTE PTR [edx+0x4d882321]
  40973f:	push   esp
  409740:	mov    cl,0xfd
  409742:	sub    eax,ebx
  409744:	add    eax,0x1712273f
  409749:	daa    
  40974a:	mov    al,ss:0x3598b75e
  409750:	test   eax,0x71db2922
  409755:	jnp    0x4097af
  409757:	cmp    eax,0x22bafcb8
  40975c:	push   ecx
  40975d:	dec    ebp
  40975e:	gs std 
  409760:	fsubr  DWORD PTR [edx]
  409762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409763:	jno    0x4096fb
  409765:	adc    BYTE PTR [edx-0x3c],0xf3
  409769:	out    dx,eax
  40976a:	aam    0x32
  40976c:	(bad)  
  40976d:	and    eax,0x7619de35
  409772:	xor    eax,0xebc9f0c9
  409777:	into   
  409778:	add    eax,0x79fa2525
  40977d:	mov    edi,DWORD PTR [ebp-0x9]
  409780:	rcr    DWORD PTR [edi+0x26d704ef],cl
  409786:	cmc    
  409787:	pop    esp
  409788:	int    0x6b
  40978a:	pop    ds
  40978b:	(bad)  
  40978c:	jmp    0x201fa21d
  409791:	jp     0x409811
  409793:	or     BYTE PTR [ebx+0x38ceb3bf],al
  409799:	jge    0x40974b
  40979b:	pop    edx
  40979c:	sbb    al,0x3c
  40979e:	fs mov esi,?
  4097a1:	sti    
  4097a2:	and    ebp,DWORD PTR ds:0x1a506e83
  4097a8:	and    BYTE PTR [edx-0x66],ch
  4097ab:	jmp    0x7774:0xd30a27a6
  4097b2:	leave  
  4097b3:	outs   dx,DWORD PTR ds:[esi]
  4097b4:	mov    ?,WORD PTR [ebp+0x3361902c]
  4097ba:	fld    DWORD PTR [eax+0x16a87483]
  4097c0:	int3   
  4097c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097c2:	push   edi
  4097c3:	aaa    
  4097c4:	lods   eax,DWORD PTR ds:[esi]
  4097c5:	pop    es
  4097c6:	pop    es
  4097c7:	stos   BYTE PTR es:[edi],al
  4097c8:	ficom  WORD PTR [eax]
  4097ca:	xor    eax,esp
  4097cc:	aaa    
  4097cd:	xchg   sp,ax
  4097cf:	test   eax,0xc0720182
  4097d4:	push   0x3539773d
  4097d9:	jg     0x409830
  4097db:	mov    bh,0x71
  4097dd:	mov    ecx,0x34d7eba9
  4097e2:	dec    ebx
  4097e3:	cmp    ebp,DWORD PTR [eax]
  4097e5:	fild   DWORD PTR [ebx+0x2b92fd50]
  4097eb:	hlt    
  4097ec:	jge    0x40984b
  4097ee:	shl    BYTE PTR [esi+0x78],cl
  4097f1:	leave  
  4097f2:	retf   
  4097f3:	or     edx,DWORD PTR [edi]
  4097f5:	mov    cl,0x22
  4097f7:	cmp    ebx,ecx
  4097f9:	jge    0x409850
  4097fb:	cmp    dh,cl
  4097fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097fe:	shr    BYTE PTR [ecx+0x52a2bc73],cl
  409804:	mov    edx,0x407e9de1
  409809:	pop    es
  40980a:	jmp    0x409835
  40980c:	out    dx,eax
  40980d:	addr16 push 0xffffffce
  409810:	fadd   DWORD PTR [ecx+0x23]
  409813:	popf   
  409814:	cmp    ebp,DWORD PTR ds:0x5b72101f
  40981a:	mov    edx,0x8366764b
  40981f:	cdq    
  409820:	das    
  409821:	jns    0x409881
  409823:	push   0xb34f1744
  409828:	mov    al,ds:0x16e4b68c
  40982d:	or     eax,0xd6813d64
  409832:	ror    DWORD PTR [ebx],cl
  409834:	es (bad) 
  409836:	int3   
  409837:	iret   
  409838:	inc    ecx
  409839:	lock jle 0x4098a7
  40983c:	lods   eax,DWORD PTR ds:[esi]
  40983d:	pop    ds
  40983e:	shl    ah,0xd8
  409841:	xor    eax,0x9254c15d
  409846:	pop    eax
  409847:	mov    cl,0x56
  409849:	or     BYTE PTR [ecx],cl
  40984b:	and    ebx,DWORD PTR [edi+0x347c6ef7]
  409851:	popf   
  409852:	in     al,0x9f
  409854:	lahf   
  409855:	in     al,dx
  409856:	aaa    
  409857:	fst    QWORD PTR [esi-0x1f]
  40985a:	hlt    
  40985b:	jbe    0x4098ac
  40985d:	icebp  
  40985e:	jmp    0xf996b439
  409863:	cwde   
  409864:	xor    DWORD PTR [edx],ecx
  409866:	je     0x409833
  409868:	mov    ds:0x94ee73ea,eax
  40986d:	or     BYTE PTR [esi],al
  40986f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409870:	sbb    cl,al
  409872:	arpl   WORD PTR [edi+0x53],bx
  409875:	xor    BYTE PTR [eax+0x53],dl
  409878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409879:	jbe    0x4098e6
  40987b:	(bad)  
  40987c:	fcom   DWORD PTR [eax+0x7ed56d30]
  409882:	das    
  409883:	jne    0x409892
  409885:	aaa    
  409886:	cld    
  409887:	imul   bl
  409889:	mov    ds:0xb1f3ddb4,eax
  40988e:	push   0xffffffcd
  409890:	imul   ebp,edx,0xffffffd3
  409893:	dec    edx
  409894:	(bad)  
  409896:	inc    DWORD PTR [ebp+edi*4-0x1379f660]
  40989d:	adc    BYTE PTR [edi],al
  40989f:	jmp    0x23a3ab31
  4098a4:	scas   eax,DWORD PTR es:[edi]
  4098a5:	mov    dh,BYTE PTR [esi+0x6c]
  4098a8:	push   cs
  4098a9:	out    0xb7,eax
  4098ab:	adc    BYTE PTR [edi+esi*4],cl
  4098ae:	pop    edi
  4098af:	dec    eax
  4098b0:	ds mov esp,0x6bcfc516
  4098b7:	mov    al,ds:0x8d909cdb
  4098bc:	add    DWORD PTR [ebx-0x78d0bc5c],ebp
  4098c2:	mov    bh,BYTE PTR [eax+0x18a741e3]
  4098c8:	rol    BYTE PTR [ecx],0x41
  4098cb:	sbb    bh,BYTE PTR [ecx-0x42b2d62c]
  4098d1:	pop    esi
  4098d2:	cmp    eax,0xbd58f1b1
  4098d7:	div    DWORD PTR [edi+edx*4+0xbb0bc02]
  4098de:	cmp    ah,BYTE PTR [ebx+edx*2]
  4098e1:	cmp    edx,DWORD PTR [ebp-0x7c0e372]
  4098e7:	jmp    0x409875
  4098e9:	mov    eax,0xb3069a9b
  4098ee:	pop    ss
  4098ef:	and    BYTE PTR [ebp-0x6a],cl
  4098f2:	iret   
  4098f3:	mov    ds,esi
  4098f5:	loopne 0x4098e7
  4098f7:	mov    dh,0x0
  4098f9:	shl    DWORD PTR [ebx-0x36],0x72
  4098fd:	add    al,0xd7
  4098ff:	sbb    ecx,esp
  409901:	xor    DWORD PTR [edi+0x11296f19],0xffffff98
  409908:	inc    ecx
  409909:	inc    ebx
  40990a:	cmp    al,0x27
  40990c:	aam    0xb9
  40990e:	xchg   BYTE PTR [ecx],ah
  409910:	and    ecx,DWORD PTR [edi+0xf]
  409913:	mul    BYTE PTR [edi]
  409915:	hlt    
  409916:	dec    edi
  409917:	stc    
  409918:	hlt    
  409919:	ss (bad) 
  40991b:	imul   ebp,DWORD PTR [ebx+0x3a803592],0xffffff89
  409922:	pop    eax
  409923:	cli    
  409924:	push   0xac78ed26
  409929:	loopne 0x40993b
  40992b:	pop    eax
  40992c:	jns    0x4098fd
  40992e:	push   ebx
  40992f:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409931:	push   esi
  409932:	pop    DWORD PTR [esi]
  409934:	sub    al,0xc0
  409936:	lahf   
  409937:	aaa    
  409938:	mov    edx,0x659cc7ab
  40993d:	jnp    0x409911
  40993f:	cwde   
  409940:	call   0x74d68086
  409945:	or     BYTE PTR [ebx+0x11],ah
  409948:	in     al,dx
  409949:	jno    0x4098e6
  40994b:	mov    edi,0x79946307
  409950:	les    ebx,FWORD PTR [eax+esi*1+0xe49a2e1]
  409957:	dec    ebp
  409958:	mov    edi,?
  40995a:	dec    edi
  40995b:	retf   0x3714
  40995e:	cld    
  40995f:	mov    DWORD PTR [ecx+0x236cce0e],eax
  409965:	jb     0x409963
  409967:	xchg   esi,eax
  409968:	repz xor eax,0xd905c35b
  40996e:	imul   ebx,DWORD PTR [edi-0xf],0x70
  409972:	(bad)  
  409973:	xchg   edx,eax
  409974:	and    edi,ecx
  409976:	dec    eax
  409977:	std    
  409978:	pop    es
  409979:	pop    ecx
  40997a:	inc    ebp
  40997b:	ss xor eax,0xb1bf5458
  409981:	ror    ch,0x93
  409984:	cmp    bl,bh
  409986:	and    edi,DWORD PTR [esi-0x32aa22e0]
  40998c:	popa   
  40998d:	lahf   
  40998e:	jmp    0x4099d3
  409990:	adc    eax,0xa68b5ecd
  409995:	mov    al,0xec
  409997:	arpl   WORD PTR [ecx-0x64c2112b],cx
  40999d:	xchg   ecx,eax
  40999e:	mov    eax,0xcb16a0ad
  4099a3:	mov    ds:0x5afdf7be,al
  4099a8:	aas    
  4099a9:	(bad)  
  4099aa:	pusha  
  4099ab:	xor    eax,DWORD PTR [edi-0x59]
  4099ae:	xor    eax,0x6d781904
  4099b3:	pop    ebp
  4099b5:	xchg   DWORD PTR [eax-0x70],ebp
  4099b8:	fmulp  st(7),st
  4099ba:	sub    BYTE PTR [edi+0x61],dl
  4099bd:	ror    ah,cl
  4099bf:	mov    dh,0x65
  4099c1:	rcl    ah,1
  4099c3:	(bad)  
  4099c4:	xchg   esp,eax
  4099c5:	imul   edx,DWORD PTR [ecx+0x65],0xffffff8a
  4099c9:	push   edx
  4099ca:	into   
  4099cb:	or     al,0x99
  4099cd:	jmp    0x409a13
  4099cf:	mov    edi,0xeb621b79
  4099d4:	rol    DWORD PTR [edi+0x4ca83e44],0xa2
  4099db:	out    dx,eax
  4099dc:	mov    al,ds:0x51676cf
  4099e1:	sub    dh,bh
  4099e3:	je     0x409a1d
  4099e5:	ror    BYTE PTR [edx+0x375ffdba],0xfd
  4099ec:	xchg   esp,eax
  4099ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099ee:	adc    BYTE PTR [ecx-0x5a1333b0],bh
  4099f4:	stos   BYTE PTR es:[edi],al
  4099f5:	xchg   esi,eax
  4099f6:	jecxz  0x409a56
  4099f8:	in     al,0x2b
  4099fa:	sar    BYTE PTR [eax-0x5dc3ea70],cl
  409a00:	fidiv  DWORD PTR [ebx+0x648a0dc8]
  409a06:	and    esp,DWORD PTR [ecx]
  409a08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a09:	mov    ebp,0x7bbdcc5d
  409a0e:	stos   BYTE PTR es:[edi],al
  409a0f:	xchg   edx,eax
  409a10:	add    edx,edi
  409a12:	or     eax,0xa8274668
  409a17:	mov    ds:0xaa0a7da0,eax
  409a1c:	jno    0x409a44
  409a1e:	shr    DWORD PTR [eax],cl
  409a20:	push   ebp
  409a21:	(bad)  
  409a22:	addr16 mov al,ds:0x6404
  409a26:	call   0x850:0x3cb73e26
  409a2d:	jo     0x4099b3
  409a2f:	pop    esp
  409a30:	mov    esp,0x65d58ecc
  409a35:	xor    eax,0x16af8b1c
  409a3a:	aam    0x78
  409a3c:	add    BYTE PTR [edi-0x52],0x1b
  409a40:	mov    ch,BYTE PTR [ebp-0x3ec8a037]
  409a46:	inc    ebp
  409a47:	xchg   BYTE PTR ds:0x3c7abbf4,dh
  409a4d:	ficom  WORD PTR [ebp+ebp*4-0x10]
  409a51:	sbb    BYTE PTR [ebx+0x2f999d8d],al
  409a57:	pop    edi
  409a58:	cmp    dh,bh
  409a5a:	(bad)  
  409a5b:	jnp    0x409a89
  409a5d:	(bad)  
  409a5e:	bnd jl 0x409ada
  409a61:	dec    ebx
  409a62:	shl    DWORD PTR [eax],1
  409a64:	les    eax,FWORD PTR ds:0xa373e9ea
  409a6a:	and    cl,dl
  409a6c:	fisttp WORD PTR [edx]
  409a6e:	into   
  409a6f:	mov    cl,0xf2
  409a71:	and    al,0x99
  409a73:	push   edx
  409a74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a75:	mov    ecx,0xd7b6241e
  409a7a:	pushf  
  409a7b:	cli    
  409a7c:	mov    esp,0xcb01092b
  409a81:	dec    esp
  409a82:	inc    esp
  409a83:	imul   edi,edi,0x27
  409a86:	or     ch,BYTE PTR [edx+0x2e]
  409a89:	xor    eax,0x67a71498
  409a8e:	push   esi
  409a8f:	imul   esp,DWORD PTR [eax-0x48419e37],0xde121633
  409a99:	pop    esp
  409a9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a9b:	std    
  409a9c:	mov    al,0x53
  409a9e:	pop    ds
  409a9f:	data16 shl bl,1
  409aa2:	(bad)  
  409aa3:	rcr    cl,1
  409aa5:	out    0xf2,al
  409aa7:	sbb    al,0x77
  409aa9:	jg     0x409ab5
  409aab:	mov    bh,0x37
  409aad:	add    eax,DWORD PTR [esi-0x26d83385]
  409ab3:	xlat   BYTE PTR ds:[ebx]
  409ab4:	fnstcw WORD PTR [ecx-0x3e8d5d22]
  409aba:	daa    
  409abb:	fisttp DWORD PTR [ecx+0x6333670f]
  409ac1:	popf   
  409ac2:	mov    bh,0x86
  409ac4:	into   
  409ac5:	shl    esi,0x79
  409ac8:	dec    ebx
  409ac9:	mov    ds:0xe9c5f838,eax
  409ace:	and    bl,BYTE PTR [esi]
  409ad0:	cld    
  409ad1:	popf   
  409ad2:	enter  0x823c,0xfa
  409ad6:	cld    
  409ad7:	mov    edi,0x3e51132d
  409adc:	jae    0x409abb
  409ade:	cld    
  409adf:	je     0x409b60
  409ae1:	mov    eax,ds:0x1210f132
  409ae6:	or     al,0xa4
  409ae8:	push   esp
  409ae9:	rcl    DWORD PTR [eax],0x5a
  409aec:	std    
  409aed:	cmp    eax,0xc142a9db
  409af2:	mov    edi,0xeadf9ee6
  409af8:	or     DWORD PTR [eax*4-0x791cb5de],esi
  409aff:	mov    eax,ds:0x37e029ce
  409b04:	loope  0x409ad7
  409b06:	loop   0x409ac5
  409b08:	dec    edx
  409b09:	aaa    
  409b0a:	loope  0x409ad9
  409b0c:	imul   edx,DWORD PTR [esi+ebp*4+0x69],0x4c
  409b11:	lock out dx,eax
  409b13:	xchg   ebx,eax
  409b14:	rol    ah,cl
  409b16:	loopne 0x409b09
  409b18:	nop
  409b19:	add    al,0x2c
  409b1b:	stc    
  409b1c:	(bad)  
  409b1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b1e:	adc    ebp,DWORD PTR [esi-0x1]
  409b21:	mov    bh,0xb3
  409b23:	cwde   
  409b24:	ret    0x204f
  409b27:	dec    esi
  409b28:	fmul   st(4),st
  409b2a:	lock or eax,esp
  409b2d:	xchg   ebx,eax
  409b2e:	mov    ds:0xfa6562fb,al
  409b33:	js     0x409bac
  409b35:	jns    0x409b4a
  409b37:	xchg   DWORD PTR [edi-0x3466adb6],eax
  409b3d:	out    0x82,eax
  409b3f:	lahf   
  409b40:	cdq    
  409b41:	jmp    0x409bb3
  409b43:	sub    dh,dh
  409b45:	sar    eax,0x5e
  409b48:	fadd   st(6),st
  409b4a:	out    dx,al
  409b4b:	push   ds
  409b4c:	(bad)  
  409b4d:	xor    BYTE PTR [eax],ch
  409b4f:	xchg   ebx,eax
  409b50:	xor    eax,DWORD PTR [ecx-0x14]
  409b53:	mov    ah,0x9f
  409b55:	retf   
  409b56:	inc    ecx
  409b57:	fdiv   QWORD PTR [esi]
  409b59:	mov    ds:0xd46e3633,al
  409b5e:	test   BYTE PTR [ebx+0x45b70193],bl
  409b64:	ss test al,0x59
  409b67:	jecxz  0x409b28
  409b69:	mov    dl,0x88
  409b6b:	lock jb 0x409b5f
  409b6e:	jp     0x409b2a
  409b70:	iret   
  409b71:	shr    DWORD PTR [edi+0x21],0x6
  409b75:	dec    esi
  409b76:	hlt    
  409b77:	in     eax,dx
  409b78:	out    0x78,al
  409b7a:	imul   ecx,DWORD PTR [ecx-0x53],0xd8701f9d
  409b81:	popa   
  409b82:	and    ah,BYTE PTR [edi]
  409b84:	pop    ds
  409b85:	add    cl,ah
  409b87:	stc    
  409b88:	dec    ecx
  409b89:	mov    esi,0x7cecf726
  409b8e:	pop    eax
  409b8f:	les    ebx,FWORD PTR [ebp+0x48]
  409b92:	cli    
  409b93:	sar    BYTE PTR [eax+eiz*4],1
  409b96:	ror    BYTE PTR [ecx-0x23],0xad
  409b9a:	js     0x409bad
  409b9c:	sbb    al,0x3d
  409b9e:	or     al,0x81
  409ba0:	cmc    
  409ba1:	arpl   WORD PTR [edx+edi*4+0x58],di
  409ba5:	and    ebp,DWORD PTR [edi+0x2e]
  409ba8:	cmp    ebp,DWORD PTR [ecx-0x13]
  409bab:	or     BYTE PTR [edx],0xc4
  409bae:	call   0x84193af5
  409bb3:	test   BYTE PTR [esi],cl
  409bb5:	xchg   ecx,eax
  409bb6:	sbb    BYTE PTR [eax+esi*2+0x1],ah
  409bba:	xor    eax,0xb739d486
  409bbf:	imul   edi,DWORD PTR ds:0xa675896c,0x22
  409bc6:	dec    esp
  409bc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bc8:	data16 mov dh,0x25
  409bcb:	stc    
  409bcc:	imul   ebx,DWORD PTR [eax+esi*2+0x6307debc],0x3671776
  409bd7:	add    esp,eax
  409bd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bda:	sub    ebx,0xa541212d
  409be0:	push   ebx
  409be1:	mov    eax,ds:0x4f0bf337
  409be6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409be7:	adc    BYTE PTR [eax],cl
  409be9:	mov    dl,BYTE PTR [ecx]
  409beb:	add    BYTE PTR [ebp+0x7e],ah
  409bee:	ret    0xb807
  409bf1:	fs dec esp
  409bf3:	jne    0x409b90
  409bf5:	stos   BYTE PTR es:[edi],al
  409bf6:	lods   eax,DWORD PTR ds:[esi]
  409bf7:	xchg   ebp,eax
  409bf8:	jg     0x409c66
  409bfa:	mov    ebp,0xe4f95633
  409bff:	sbb    dh,ch
  409c01:	aaa    
  409c02:	fwait
  409c03:	jbe    0x409b8a
  409c05:	ficom  WORD PTR [eax-0x6a960a85]
  409c0b:	or     BYTE PTR [ecx+0x20147d06],dl
  409c11:	pop    ss
  409c12:	out    0xd5,al
  409c14:	inc    esp
  409c15:	retf   
  409c16:	js     0x409c01
  409c18:	fist   WORD PTR [eax-0x5a]
  409c1b:	sbb    edi,DWORD PTR [eax]
  409c1d:	jbe    0x409c09
  409c1f:	pushw  es
  409c21:	add    ecx,DWORD PTR [ecx+0x67]
  409c24:	retf   
  409c25:	cmp    al,0xa2
  409c27:	mov    al,ds:0x71e97aed
  409c2c:	fucomip st,st(3)
  409c2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c2f:	inc    edi
  409c30:	xlat   BYTE PTR ds:[ebx]
  409c31:	pop    ebx
  409c32:	std    
  409c33:	push   edi
  409c34:	fcomp  QWORD PTR [ecx-0x2607633d]
  409c3a:	mov    ebx,0xc74ecf13
  409c3f:	ins    DWORD PTR es:[edi],dx
  409c40:	jns    0x409c28
  409c42:	push   cs
  409c43:	nop
  409c44:	jge    0x409c9c
  409c46:	dec    eax
  409c47:	das    
  409c48:	inc    esp
  409c49:	iret   
  409c4a:	xchg   esi,eax
  409c4b:	xlat   BYTE PTR ds:[ebx]
  409c4c:	inc    ebp
  409c4d:	push   esp
  409c4e:	(bad)  
  409c50:	imul   esi
  409c52:	stos   BYTE PTR es:[edi],al
  409c53:	stos   BYTE PTR es:[edi],al
  409c54:	add    eax,0xc0bdcd71
  409c59:	(bad)
  409c5c:	cdq    
  409c5d:	or     DWORD PTR [ebx-0x78772350],esp
  409c63:	adc    BYTE PTR [ebp-0x1f],0x14
  409c67:	imul   esi,DWORD PTR [ebx],0x5511aaee
  409c6d:	push   edi
  409c6e:	fwait
  409c6f:	iret   
  409c70:	mov    esp,0x97a50394
  409c75:	push   ebp
  409c76:	fstp   DWORD PTR ds:0x8727cde3
  409c7c:	sub    BYTE PTR [ecx+0x79],bl
  409c7f:	(bad)  
  409c80:	pop    ss
  409c81:	jno    0x409c3c
  409c83:	xchg   ebx,eax
  409c84:	arpl   WORD PTR [esi-0x17],bx
  409c87:	xchg   edi,eax
  409c88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c89:	(bad)  
  409c8a:	xchg   esp,eax
  409c8b:	(bad)  
  409c8d:	loop   0x409cdd
  409c8f:	mov    ah,0x8c
  409c91:	xchg   ebp,eax
  409c92:	adc    eax,0xa75e46d5
  409c97:	repz scas eax,DWORD PTR es:[edi]
  409c99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c9a:	out    0x3d,eax
  409c9c:	into   
  409c9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c9f:	cmp    DWORD PTR [edx],ebx
  409ca1:	xchg   BYTE PTR ds:0x86a12e24,bl
  409ca7:	nop
  409ca8:	sbb    eax,0x2390ac81
  409cad:	sbb    ebx,DWORD PTR [ecx]
  409caf:	jbe    0x409c69
  409cb1:	and    al,BYTE PTR [esi-0x24]
  409cb4:	jecxz  0x409cf5
  409cb6:	push   ds
  409cb7:	cmp    ah,BYTE PTR ss:[esi]
  409cba:	pusha  
  409cbb:	aas    
  409cbc:	push   0xffffff89
  409cbe:	pop    esp
  409cbf:	(bad)  
  409cc0:	cmp    al,0xf1
  409cc2:	pushf  
  409cc3:	mov    eax,0x30fac77
  409cc8:	out    0x1b,eax
  409cca:	cwde   
  409ccb:	or     eax,0xed102e4d
  409cd0:	push   ds
  409cd1:	mov    bh,0x1f
  409cd3:	nop
  409cd4:	aam    0x4
  409cd6:	out    dx,eax
  409cd7:	adc    al,0xce
  409cd9:	or     BYTE PTR [ebx],bh
  409cdb:	es pushf 
  409cdd:	sub    al,0xd
  409cdf:	enter  0xce37,0x93
  409ce3:	jge    0x409d3d
  409ce5:	adc    ah,BYTE PTR [ecx]
  409ce7:	das    
  409ce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ce9:	and    bh,BYTE PTR [esi+0x617b4acc]
  409cef:	aam    0x82
  409cf1:	sbb    al,0xa9
  409cf3:	and    bh,BYTE PTR [ecx-0x58a60c18]
  409cf9:	cmc    
  409cfa:	rcl    BYTE PTR ds:[esi],1
  409cfd:	je     0x409cc2
  409cff:	scas   al,BYTE PTR es:[edi]
  409d00:	pop    ecx
  409d01:	push   0x6be79d33
  409d06:	call   DWORD PTR [edi-0x7a9d991f]
  409d0c:	sbb    edx,esp
  409d0e:	mov    eax,0xcd05dd30
  409d13:	repz xchg ebx,eax
  409d15:	rol    DWORD PTR [ecx-0x57],cl
  409d18:	cmp    DWORD PTR [edi],ecx
  409d1a:	js     0x409d78
  409d1c:	dec    esi
  409d1d:	push   ds
  409d1e:	jecxz  0x409d6f
  409d20:	les    eax,FWORD PTR [ebx+0x67fab462]
  409d26:	mov    bl,0x45
  409d28:	add    cl,BYTE PTR [edi-0x46]
  409d2b:	mov    DWORD PTR [edi+ebp*1-0xaaea161],ebp
  409d32:	sbb    DWORD PTR [esi+0x60cc389],edi
  409d38:	mov    WORD PTR ds:0xf422c07e,?
  409d3e:	hlt    
  409d3f:	fdiv   DWORD PTR [esi-0x4b961cb0]
  409d45:	add    eax,DWORD PTR [edx-0x48]
  409d48:	add    eax,0x1119eb5
  409d4d:	fs in  al,dx
  409d4f:	dec    ecx
  409d50:	mov    edi,0x4814d1f5
  409d55:	pop    esi
  409d56:	test   DWORD PTR [esi],esp
  409d58:	gs je  0x409d09
  409d5b:	pop    esi
  409d5c:	dec    BYTE PTR [ebp+0x48]
  409d5f:	cwde   
  409d60:	cld    
  409d61:	push   esi
  409d62:	test   ch,ch
  409d64:	add    al,0xab
  409d66:	add    edi,DWORD PTR [esi]
  409d68:	inc    edx
  409d69:	pop    eax
  409d6a:	xchg   esi,eax
  409d6b:	hlt    
  409d6c:	mov    dh,0xec
  409d6e:	mov    ecx,0xea1ae493
  409d73:	out    dx,al
  409d74:	call   0xb83d991e
  409d79:	inc    ecx
  409d7a:	cmp    bh,BYTE PTR [ebx+0x46]
  409d7d:	test   BYTE PTR [esi+0x49c46ce9],al
  409d83:	mov    edx,0x55fe30bb
  409d88:	push   ss
  409d89:	jo     0x409d8f
  409d8b:	popa   
  409d8c:	xor    DWORD PTR [eax+0x48e23cb7],eax
  409d92:	jnp    0x409d9a
  409d94:	dec    ecx
  409d95:	cwde   
  409d96:	dec    esp
  409d97:	xor    eax,0x247f9d63
  409d9c:	xadd   BYTE PTR [eax],bh
  409d9f:	lods   al,BYTE PTR ds:[esi]
  409da0:	push   esp
  409da1:	inc    esp
  409da2:	mov    WORD PTR [eax+0x10],cs
  409da5:	jle    0x409d91
  409da7:	jge    0x409d99
  409da9:	xchg   BYTE PTR cs:[eax-0x27],al
  409dad:	dec    edi
  409dae:	push   ss
  409daf:	cdq    
  409db0:	xor    ch,BYTE PTR [ebx-0x5fce2dd4]
  409db6:	fnsave [ebx]
  409db8:	fld    DWORD PTR [esp+ecx*4+0x1daa4553]
  409dbf:	fcomip st,st(2)
  409dc1:	jbe    0x409dc6
  409dc3:	fisub  WORD PTR [ecx+0x21]
  409dc6:	std    
  409dc7:	jb     0x409e33
  409dc9:	mov    al,0x31
  409dcb:	jno    0x409d6e
  409dcd:	xchg   DWORD PTR [esi-0x5d],edx
  409dd0:	aas    
  409dd1:	inc    edx
  409dd2:	and    dh,BYTE PTR [edx+0x3cc86013]
  409dd8:	jl     0x409d60
  409dda:	xchg   ebp,esi
  409ddc:	mov    ds:0x226a60b1,eax
  409de1:	dec    esi
  409de2:	pop    esi
  409de3:	daa    
  409de4:	adc    al,0x24
  409de6:	out    dx,eax
  409de7:	fiadd  DWORD PTR [edx]
  409de9:	int    0x62
  409deb:	addr16 push cs
  409ded:	out    0x8,al
  409def:	popf   
  409df0:	sub    eax,ecx
  409df2:	mov    DWORD PTR [ebp-0x4],eax
  409df5:	or     DWORD PTR [ebp-0x4],0xf89c85bc
  409dfc:	mov    eax,DWORD PTR [ebp-0xc]
  409dff:	xor    eax,esi
  409e01:	add    eax,edi
  409e03:	push   eax
  409e04:	mov    eax,DWORD PTR [ebp-0x10]
  409e07:	xor    eax,esi
  409e09:	add    eax,edi
  409e0b:	push   eax
  409e0c:	mov    eax,DWORD PTR [ebp-0x4]
  409e0f:	xor    eax,esi
  409e11:	add    eax,edi
  409e13:	push   eax
  409e14:	lea    eax,[ebp-0x7c]
  409e17:	push   eax
  409e18:	push   DWORD PTR [ebp-0x2c]
  409e1b:	push   DWORD PTR [ebp-0x28]
  409e1e:	call   0x40c8dd
  409e23:	test   eax,eax
  409e25:	je     0x409e53
  409e2b:	lea    eax,[ebp-0x7c]
  409e2e:	push   eax
  409e2f:	mov    eax,DWORD PTR [ebp-0x28]
  409e32:	xor    eax,esi
  409e34:	add    eax,edi
  409e36:	push   eax
  409e37:	mov    eax,DWORD PTR [ebp-0x24]
  409e3a:	add    eax,0xaa
  409e3f:	push   eax
  409e40:	mov    eax,DWORD PTR [ebp-0x24]
  409e43:	mov    eax,DWORD PTR [eax+0x198]
  409e49:	push   DWORD PTR [eax]
  409e4b:	call   0x402992
  409e50:	mov    DWORD PTR [ebp-0x14],eax
  409e53:	lea    eax,[ebp+0x4]
  409e56:	mov    DWORD PTR [ebp-0x30],eax
  409e59:	mov    eax,DWORD PTR [ebp-0x14]
  409e5c:	test   eax,eax
  409e5e:	je     0x409ec6
  409e64:	lea    eax,[ebp-0x8]
  409e67:	mov    DWORD PTR [ebp-0x38],eax
  409e6a:	mov    eax,DWORD PTR [ebp-0x34]
  409e6d:	mov    DWORD PTR [ebp-0x8],eax
  409e70:	mov    eax,DWORD PTR [ebp-0x8]
  409e73:	mov    ecx,DWORD PTR [ebp-0x14]
  409e76:	sub    eax,ecx
  409e78:	mov    DWORD PTR [ebp-0x8],eax
  409e7b:	mov    ecx,DWORD PTR [ebp-0x4]
  409e7e:	xor    ecx,esi
  409e80:	mov    eax,0xffcd8d20
  409e85:	sub    eax,ecx
  409e87:	add    DWORD PTR [ebp-0x8],eax
  409e8a:	mov    eax,DWORD PTR [ebp-0x8]
  409e8d:	mov    ecx,DWORD PTR [ebp-0x14]
  409e90:	mov    DWORD PTR [ecx+0x1],eax
  409e93:	mov    eax,DWORD PTR [ebp-0x14]
  409e96:	push   DWORD PTR [ebp-0x24]
  409e99:	mov    BYTE PTR [eax],0xe9
  409e9c:	mov    eax,ds:0x42e18f
  409ea1:	push   DWORD PTR [eax]
  409ea3:	push   DWORD PTR ds:0x42e3eb
  409ea9:	push   DWORD PTR ds:0x42e197
  409eaf:	push   DWORD PTR ds:0x42e3cb
  409eb5:	push   DWORD PTR ds:0x42e6f3
  409ebb:	push   DWORD PTR [ebp-0x28]
  409ebe:	push   DWORD PTR [ebp-0x2c]
  409ec1:	mov    eax,DWORD PTR [ebp-0x14]
  409ec4:	call   eax
  409ec6:	mov    eax,DWORD PTR [ebp-0x30]
  409ec9:	mov    ecx,DWORD PTR ds:0x42e38f
  409ecf:	add    DWORD PTR [eax],ecx
  409ed1:	pop    edi
  409ed2:	pop    esi
  409ed3:	leave  
  409ed4:	ret    
  409ed5:	push   ebp
  409ed6:	mov    ebp,esp
  409ed8:	sub    esp,0x18
  409edb:	add    edx,DWORD PTR ds:0x42c004
  409ee1:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  409ee8:	xor    DWORD PTR ds:0x42d018,0x529f
  409ef2:	lea    eax,[ebp+0x14]
  409ef5:	sbb    ecx,edx
  409ef7:	mov    DWORD PTR [ebp-0x4],eax
  409efa:	add    DWORD PTR ds:0x429010,edx
  409f00:	push   esi
  409f01:	mov    DWORD PTR ds:0x429000,0x1b
  409f0b:	cmp    DWORD PTR ds:0x429000,0x0
  409f12:	je     0x409f77
  409f18:	cmp    DWORD PTR ds:0x429000,0xb
  409f1f:	jne    0x409f38
  409f25:	push   DWORD PTR [ebp-0x28]
  409f28:	push   0x0
  409f2a:	push   0x42d010
  409f2f:	push   DWORD PTR [ebp-0x1c]
  409f32:	call   DWORD PTR ds:0x42e9af
  409f38:	cmp    DWORD PTR ds:0x429000,0xc
  409f3f:	jne    0x409f54
  409f45:	xor    esi,esi
  409f47:	or     esi,DWORD PTR ds:0x429000
  409f4d:	dec    esi
  409f4e:	mov    DWORD PTR ds:0x429000,esi
  409f54:	mov    esi,DWORD PTR ds:0x429000
  409f5a:	dec    esi
  409f5b:	mov    DWORD PTR ds:0x429000,esi
  409f61:	jmp    0x409f0b
  409f66:	mov    ecx,DWORD PTR ds:0x41ac60
  409f6c:	mov    edx,DWORD PTR ds:0x41ac64
  409f72:	sub    ecx,edx
  409f74:	xor    ecx,DWORD PTR [ecx+edx*1]
  409f77:	mov    esi,0xf89c85b9
  409f7c:	xor    DWORD PTR ds:0x429028,edx
  409f82:	mov    DWORD PTR [ebp-0xc],esi
  409f85:	sub    DWORD PTR ds:0x42a014,edi
  409f8b:	lea    eax,[ebp-0xc]
  409f8e:	movzx  edx,BYTE PTR ds:0x42c014
  409f95:	adc    edx,DWORD PTR ds:0x42a004
  409f9b:	mov    DWORD PTR ds:0x42c014,edx
  409fa1:	mov    DWORD PTR [ebp-0x14],eax
  409fa4:	or     DWORD PTR ds:0x42d010,0xdad
  409fae:	mov    eax,DWORD PTR [ebp-0xc]
  409fb1:	and    DWORD PTR ds:0x429008,0x0
  409fbb:	jmp    0x409fcd
  409fc0:	mov    ecx,DWORD PTR ds:0x429008
  409fc6:	inc    ecx
  409fc7:	mov    DWORD PTR ds:0x429008,ecx
  409fcd:	cmp    DWORD PTR ds:0x429008,0x15
  409fd4:	jae    0x40a012
  409fda:	cmp    DWORD PTR ds:0x429008,0x9
  409fe1:	jne    0x409fed
  409fe7:	call   DWORD PTR ds:0x42e9b3
  409fed:	cmp    DWORD PTR ds:0x429008,0x8
  409ff4:	jne    0x40a007
  409ffa:	mov    ecx,DWORD PTR ds:0x429008
  40a000:	inc    ecx
  40a001:	mov    DWORD PTR ds:0x429008,ecx
  40a007:	jmp    0x409fc0
  40a00c:	sub    DWORD PTR ds:0x42901c,edx
  40a012:	mov    edx,DWORD PTR [ebp-0x14]
  40a015:	and    DWORD PTR ds:0x42b010,0x0
  40a01f:	jmp    0x40a031
  40a024:	mov    ecx,DWORD PTR ds:0x42b010
  40a02a:	inc    ecx
  40a02b:	mov    DWORD PTR ds:0x42b010,ecx
  40a031:	cmp    DWORD PTR ds:0x42b010,0x17
  40a038:	jae    0x40a06e
  40a03e:	cmp    DWORD PTR ds:0x42b010,0x19
  40a045:	jne    0x40a069
  40a04b:	push   DWORD PTR [ebp-0x10]
  40a04e:	push   0x429008
  40a053:	push   0x87b9
  40a058:	push   DWORD PTR [ebp-0x1c]
  40a05b:	push   DWORD PTR [ebp-0x24]
  40a05e:	push   0x8ec6
  40a063:	call   DWORD PTR ds:0x42e9b7
  40a069:	jmp    0x40a024
  40a06e:	mov    ecx,0x7510899
  40a073:	xor    eax,ecx
  40a075:	add    eax,0x3272e0
  40a07a:	mov    DWORD PTR [edx],eax
  40a07c:	mov    eax,ds:0x42e18b
  40a081:	add    DWORD PTR ds:0x429020,ebx
  40a087:	mov    edx,DWORD PTR [ebp-0x4]
  40a08a:	mov    eax,DWORD PTR [eax]
  40a08c:	add    DWORD PTR ds:0x42d010,0x42b008
  40a096:	add    eax,DWORD PTR [edx]
  40a098:	sbb    edx,DWORD PTR ds:0x42c00c
  40a09e:	push   edi
  40a09f:	mov    DWORD PTR [ebp-0x8],eax
  40a0a2:	and    DWORD PTR ds:0x42c014,0x0
  40a0ac:	jmp    0x40a0bf
  40a0b1:	xor    eax,eax
  40a0b3:	add    eax,DWORD PTR ds:0x42c014
  40a0b9:	inc    eax
  40a0ba:	mov    ds:0x42c014,eax
  40a0bf:	cmp    DWORD PTR ds:0x42c014,0x1d
  40a0c6:	jae    0x40a159
  40a0cc:	cmp    DWORD PTR ds:0x42c014,0x8
  40a0d3:	jne    0x40a0df
  40a0d9:	call   DWORD PTR ds:0x42e9bb
  40a0df:	cmp    DWORD PTR ds:0x42c014,0x7
  40a0e6:	jne    0x40a0fa
  40a0ec:	xor    eax,eax
  40a0ee:	xor    eax,DWORD PTR ds:0x42c014
  40a0f4:	inc    eax
  40a0f5:	mov    ds:0x42c014,eax
  40a0fa:	jmp    0x40a0b1
  40a0ff:	and    DWORD PTR ds:0x42d004,0x0
  40a109:	jmp    0x40a11c
  40a10e:	xor    eax,eax
  40a110:	or     eax,DWORD PTR ds:0x42d004
  40a116:	inc    eax
  40a117:	mov    ds:0x42d004,eax
  40a11c:	cmp    DWORD PTR ds:0x42d004,0x1c
  40a123:	jae    0x40a159
  40a129:	cmp    DWORD PTR ds:0x42d004,0x2b
  40a130:	jne    0x40a147
  40a136:	push   DWORD PTR [ebp-0x20]
  40a139:	push   0x429018
  40a13e:	push   DWORD PTR [ebp-0x1c]
  40a141:	call   DWORD PTR ds:0x42e9bf
  40a147:	jmp    0x40a10e
  40a14c:	movzx  edi,BYTE PTR ds:0x42c014
  40a153:	sbb    DWORD PTR ds:0x42a004,edi
  40a159:	mov    edi,DWORD PTR [ebp+0x8]
  40a15c:	adc    edx,edx
  40a15e:	mov    eax,ds:0x42e313
  40a163:	mov    eax,DWORD PTR [eax+0x198]
  40a169:	xor    edi,ecx
  40a16b:	mov    DWORD PTR ds:0x42a008,0x1f
  40a175:	cmp    DWORD PTR ds:0x42a008,0x0
  40a17c:	je     0x40a1b8
  40a182:	cmp    DWORD PTR ds:0x42a008,0x2d
  40a189:	jne    0x40a1a4
  40a18f:	push   0x42e000
  40a194:	push   0x42e139
  40a199:	push   0x400000
  40a19e:	call   DWORD PTR ds:0x42e9c7
  40a1a4:	xor    edx,edx
  40a1a6:	add    edx,DWORD PTR ds:0x42a008
  40a1ac:	dec    edx
  40a1ad:	mov    DWORD PTR ds:0x42a008,edx
  40a1b3:	jmp    0x40a175
  40a1b8:	mov    edx,0x3272e0
  40a1bd:	xor    DWORD PTR ds:0x429010,0x6770
  40a1c7:	add    edi,edx
  40a1c9:	cmp    DWORD PTR [eax],edi
  40a1cb:	mov    DWORD PTR ds:0x42900c,0x1dd7
  40a1d5:	je     0x40a1f6
  40a1db:	mov    DWORD PTR ds:0x429014,0x4354
  40a1e5:	mov    eax,DWORD PTR [eax]
  40a1e7:	mov    DWORD PTR ds:0x42900c,0x7b1e
  40a1f1:	jmp    0x40c789
  40a1f6:	mov    eax,ds:0x42a008
  40a1fb:	mov    eax,DWORD PTR [ebp+0x18]
  40a1fe:	cmp    eax,esi
  40a200:	jne    0x40a224
  40a206:	mov    DWORD PTR ds:0x429010,0x2813
  40a210:	push   0xf89c85b8
  40a215:	mov    DWORD PTR ds:0x429020,0x131a
  40a21f:	jmp    0x40c778
  40a224:	mov    esi,0x74b
  40a229:	mov    esi,DWORD PTR [ebp+0x18]
  40a22c:	mov    eax,0xf89c85bb
  40a231:	cmp    esi,eax
  40a233:	mov    DWORD PTR ds:0x42c010,0x1f83
  40a23d:	jne    0x40c768
  40a243:	add    esi,eax
  40a245:	mov    eax,DWORD PTR [ebp+0x10]
  40a248:	add    esi,0x4b50
  40a24e:	xor    eax,ecx
  40a250:	or     DWORD PTR ds:0x42c01c,edx
  40a256:	add    eax,edx
  40a258:	mov    DWORD PTR [ebp-0x18],eax
  40a25b:	sbb    DWORD PTR ds:0x42d01c,edx
  40a261:	mov    eax,DWORD PTR [ebp+0xc]
  40a264:	add    esi,0x5e8f
  40a26a:	mov    esi,DWORD PTR [ebp-0x8]
  40a26d:	xor    eax,ecx
  40a26f:	mov    DWORD PTR ds:0x42d004,0x61c0
  40a279:	add    eax,edx
  40a27b:	add    DWORD PTR ds:0x42a004,0x42d004
  40a285:	imul   eax,DWORD PTR [esi]
  40a288:	add    DWORD PTR ds:0x42d004,0x19e2
  40a292:	mov    esi,DWORD PTR [ebp+0x8]
  40a295:	xor    esi,ecx
  40a297:	add    esi,edx
  40a299:	cmp    esi,eax
  40a29b:	mov    eax,DWORD PTR [ebp-0x4]
  40a29e:	push   ebx
  40a29f:	je     0x40a2be
  40a2a5:	mov    esi,DWORD PTR [ebp-0x18]
  40a2a8:	add    DWORD PTR [eax],esi
  40a2aa:	mov    eax,DWORD PTR [ebp-0x4]
  40a2ad:	mov    esi,DWORD PTR [ebp+0xc]
  40a2b0:	xor    esi,ecx
  40a2b2:	add    esi,edx
  40a2b4:	imul   esi,DWORD PTR [eax]
  40a2b7:	mov    DWORD PTR [eax],esi
  40a2b9:	jmp    0x40a2c3
  40a2be:	mov    esi,DWORD PTR [ebp+0x14]
  40a2c1:	xor    DWORD PTR [eax],esi
  40a2c3:	mov    eax,DWORD PTR [ebp-0x4]
  40a2c6:	mov    edi,DWORD PTR [ebp+0x10]
  40a2c9:	xor    edi,ecx
  40a2cb:	mov    esi,0xffcd8d20
  40a2d0:	mov    ebx,esi
  40a2d2:	sub    ebx,edi
  40a2d4:	add    DWORD PTR [eax],ebx
  40a2d6:	mov    eax,DWORD PTR [ebp-0x4]
  40a2d9:	mov    edi,DWORD PTR [ebp-0x8]
  40a2dc:	add    edi,DWORD PTR [eax]
  40a2de:	mov    DWORD PTR [ebp-0x8],edi
  40a2e1:	mov    eax,DWORD PTR [ebp+0xc]
  40a2e4:	mov    edi,DWORD PTR [ebp+0xc]
  40a2e7:	xor    edi,ecx
  40a2e9:	jmp    0x40c634
  40a2ee:	neg    ch
  40a2f0:	jns    0x40a2c7
  40a2f2:	xchg   ecx,eax
  40a2f3:	mov    ch,0x76
  40a2f5:	popf   
  40a2f6:	outs   dx,BYTE PTR ds:[esi]
  40a2f7:	mov    ah,0x10
  40a2f9:	inc    esi
  40a2fa:	adc    al,0xa7
  40a2fc:	pushf  
  40a2fd:	push   ecx
  40a2fe:	add    BYTE PTR cs:[edx+0x7a],bh
  40a302:	inc    esp
  40a303:	pop    edi
  40a304:	jp     0x40a380
  40a306:	ins    BYTE PTR es:[edi],dx
  40a307:	sahf   
  40a308:	clc    
  40a309:	shl    DWORD PTR [ecx],1
  40a30b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a30c:	push   esp
  40a30d:	leave  
  40a30e:	dec    ebp
  40a30f:	push   ebx
  40a310:	dec    eax
  40a311:	outs   dx,DWORD PTR ds:[esi]
  40a312:	and    BYTE PTR [ebx+edi*1+0x6dff235a],dh
  40a319:	fwait
  40a31a:	xor    BYTE PTR [ecx+0x2f2b04c1],0x81
  40a321:	mov    al,ds:0x861b302f
  40a326:	retf   0x7799
  40a329:	push   ss
  40a32a:	dec    edi
  40a32b:	lods   eax,DWORD PTR ds:[esi]
  40a32c:	(bad)
  40a330:	icebp  
  40a331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a332:	shr    BYTE PTR [ecx+0x7c4e4d11],0xf8
  40a339:	into   
  40a33a:	pop    ebx
  40a33b:	jl     0x40a389
  40a33d:	add    eax,0x1f44ddec
  40a342:	jmp    0x40a391
  40a344:	daa    
  40a345:	mov    fs,WORD PTR [eax]
  40a347:	int3   
  40a348:	sbb    eax,0xf8a48cc6
  40a34d:	test   bh,bh
  40a34f:	xchg   esp,eax
  40a350:	popf   
  40a351:	jo     0x40a3ad
  40a353:	inc    esp
  40a354:	dec    ebp
  40a355:	pop    ecx
  40a356:	jno    0x40a3c3
  40a358:	pop    ecx
  40a359:	mov    ecx,0x75ba50d9
  40a35e:	push   esp
  40a35f:	mov    edi,0x8dc43c0f
  40a364:	xchg   BYTE PTR [ecx+0x5d2ce7],cl
  40a36a:	into   
  40a36b:	sbb    DWORD PTR [esi+0x7e],0x34
  40a36f:	or     BYTE PTR [ebx],ch
  40a371:	test   BYTE PTR [edx+0x22],0xab
  40a375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a376:	or     bl,BYTE PTR [ebp-0x41e93bcc]
  40a37c:	outs   dx,BYTE PTR ds:[esi]
  40a37d:	jmp    ecx
  40a37f:	push   ebx
  40a380:	jmp    0x40a3c2
  40a382:	in     al,0xa9
  40a384:	mov    DWORD PTR [ebx+0x34],0x52f6212a
  40a38b:	and    dh,BYTE PTR [edi]
  40a38d:	pop    edi
  40a38e:	aad    0x58
  40a390:	repz sbb bl,ah
  40a393:	jg     0x40a413
  40a395:	loopne 0x40a35e
  40a397:	fwait
  40a398:	sub    eax,0x8f0c122f
  40a39d:	repz or eax,0x4f0e884
  40a3a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3a4:	xchg   edi,ecx
  40a3a6:	xchg   ebp,eax
  40a3a7:	pushf  
  40a3a8:	push   ecx
  40a3a9:	test   DWORD PTR [edx-0x51],0xa20ccc9
  40a3b0:	pop    ds
  40a3b1:	(bad)  
  40a3b2:	xchg   esi,eax
  40a3b3:	aad    0x7d
  40a3b5:	sub    edi,DWORD PTR [ebx+0x60d27ffa]
  40a3bb:	std    
  40a3bc:	out    0xf2,eax
  40a3be:	jecxz  0x40a3f1
  40a3c0:	lock mov eax,0x3cc40af9
  40a3c6:	inc    edi
  40a3c7:	frstor [ecx+0x1abd673d]
  40a3cd:	and    eax,0x3e1726de
  40a3d2:	sar    cl,1
  40a3d4:	into   
  40a3d5:	aaa    
  40a3d6:	dec    ebp
  40a3d7:	push   esi
  40a3d8:	pop    ecx
  40a3d9:	ins    BYTE PTR es:[edi],dx
  40a3da:	cli    
  40a3db:	add    eax,0x20c950e2
  40a3e0:	sub    DWORD PTR [edi+ebp*4-0x3f],0x2f
  40a3e5:	xor    al,0x1e
  40a3e7:	mov    ds:0x888ba127,al
  40a3ec:	js     0x40a437
  40a3ee:	rcr    BYTE PTR [esi+0x71],1
  40a3f1:	or     dh,cl
  40a3f3:	hlt    
  40a3f4:	jg     0x40a40e
  40a3f6:	lods   al,BYTE PTR ds:[esi]
  40a3f7:	push   edi
  40a3f8:	stc    
  40a3f9:	icebp  
  40a3fa:	xor    DWORD PTR [esi+0x422f0aab],esi
  40a400:	js     0x40a452
  40a402:	jp     0x40a3d2
  40a404:	jbe    0x40a3d3
  40a406:	ins    DWORD PTR es:[edi],dx
  40a407:	pop    ds
  40a408:	(bad)  
  40a40a:	mov    ds:0x24fef57c,eax
  40a40f:	xchg   ecx,eax
  40a410:	arpl   si,bp
  40a412:	sbb    DWORD PTR [eax-0x7a27c1e7],edx
  40a418:	ja     0x40a3be
  40a41a:	dec    esi
  40a41b:	out    0x11,al
  40a41d:	mov    dh,dh
  40a41f:	or     bl,ch
  40a421:	mov    edi,0x39e10d54
  40a426:	fstp   DWORD PTR [edi+eiz*8]
  40a429:	outs   dx,BYTE PTR ds:[esi]
  40a42a:	inc    esi
  40a42b:	ins    DWORD PTR es:[edi],dx
  40a42c:	pop    ss
  40a42d:	xchg   DWORD PTR [edx+0x52],esi
  40a430:	mov    cl,BYTE PTR [edi]
  40a432:	sub    eax,0xf5f6794e
  40a437:	xchg   edi,eax
  40a438:	cwde   
  40a439:	mov    al,0x2
  40a43b:	cld    
  40a43c:	ss jg  0x40a445
  40a43f:	imul   ebp,eax,0x5
  40a442:	cli    
  40a443:	or     BYTE PTR [esi+0x70be3779],cl
  40a449:	xchg   esp,eax
  40a44a:	ret    
  40a44b:	in     eax,0xc2
  40a44d:	add    dl,BYTE PTR [ecx-0x34]
  40a450:	fdiv   st,st(0)
  40a452:	push   ds
  40a453:	or     ebx,DWORD PTR [ebp+0x4e]
  40a456:	add    al,0x99
  40a458:	ret    0x7bf7
  40a45b:	retf   
  40a45c:	sbb    BYTE PTR [esi+0x2a],bh
  40a45f:	jae    0x40a438
  40a461:	shl    BYTE PTR [edi-0x4c],1
  40a464:	dec    edx
  40a465:	in     eax,dx
  40a466:	leave  
  40a467:	pop    ss
  40a468:	adc    DWORD PTR [ebp+0x4357ce73],ebp
  40a46e:	pusha  
  40a46f:	jnp    0x40a488
  40a471:	repnz mov ebp,0x61b0dd6a
  40a477:	mov    ds:0xf29f84cd,al
  40a47c:	outs   dx,DWORD PTR ds:[esi]
  40a47d:	cld    
  40a47e:	xor    DWORD PTR [esi+0x6fc39cf6],edi
  40a484:	mov    eax,ds:0x57ed43d1
  40a489:	mov    es,WORD PTR [ebp+0x53]
  40a48c:	lock daa 
  40a48e:	push   es
  40a48f:	pop    ecx
  40a490:	stc    
  40a491:	sbb    ecx,ebx
  40a493:	(bad)  
  40a494:	mov    ds:0x715598c4,al
  40a499:	test   DWORD PTR [ebp+0x1f],eax
  40a49c:	mov    ds:0x8e37cc39,al
  40a4a1:	cmp    dh,BYTE PTR [ecx-0x2c0b004f]
  40a4a7:	dec    esp
  40a4a8:	mov    esi,ds
  40a4aa:	popf   
  40a4ab:	xlat   BYTE PTR ds:[ebx]
  40a4ac:	pushf  
  40a4ad:	cmp    al,0xb8
  40a4af:	pop    esp
  40a4b0:	pop    esi
  40a4b1:	jmp    0xe442aaeb
  40a4b6:	(bad)  
  40a4b7:	test   eax,0x60f43696
  40a4bc:	pop    ebx
  40a4bd:	pop    edx
  40a4be:	xor    BYTE PTR [edi+edi*2-0x61],dl
  40a4c2:	jne    0x40a468
  40a4c4:	call   0x4001d2ee
  40a4c9:	mov    bl,0xa5
  40a4cb:	jmp    0xce78:0x8005e6b9
  40a4d2:	in     eax,0x68
  40a4d4:	xchg   ebx,eax
  40a4d5:	push   es
  40a4d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4d7:	or     ebx,DWORD PTR [ebx-0xb]
  40a4da:	rcl    DWORD PTR [ebx-0x68],1
  40a4dd:	pop    ss
  40a4de:	add    BYTE PTR [ebx-0xf],ch
  40a4e1:	adc    eax,0x89a9d714
  40a4e6:	sub    BYTE PTR [eax-0x5f],0x2a
  40a4ea:	(bad)  
  40a4eb:	sbb    DWORD PTR [eax-0x44e27062],ebx
  40a4f1:	test   DWORD PTR [ecx],ecx
  40a4f3:	push   ebx
  40a4f4:	mov    bh,BYTE PTR [ebp+0x72]
  40a4f7:	(bad)  
  40a4f8:	inc    edx
  40a4f9:	clc    
  40a4fa:	sub    bl,BYTE PTR [ebx-0x1b]
  40a4fd:	and    BYTE PTR [edx-0x1c],cl
  40a500:	in     eax,0xfd
  40a502:	aam    0x3b
  40a504:	xor    DWORD PTR [edi+0x49e76edd],edi
  40a50a:	sbb    bl,BYTE PTR [ecx+0x39]
  40a50d:	jecxz  0x40a57d
  40a50f:	sar    BYTE PTR [eax+0x18ab650f],1
  40a515:	idiv   bh
  40a517:	cmp    al,0xe
  40a519:	outs   dx,BYTE PTR ds:[esi]
  40a51a:	sti    
  40a51b:	pop    edx
  40a51c:	xlat   BYTE PTR ds:[ebx]
  40a51d:	(bad)  
  40a51e:	pop    edx
  40a51f:	in     al,dx
  40a520:	mov    ebp,0xcbe5f3a5
  40a525:	sbb    ch,al
  40a527:	bound  ebp,QWORD PTR [ebx-0x1]
  40a52a:	std    
  40a52b:	jns    0x40a54e
  40a52d:	mov    esi,0xcff78d2a
  40a532:	retf   
  40a533:	fwait
  40a534:	loopne 0x40a4d0
  40a536:	or     BYTE PTR [ebp+eax*4-0x18],ch
  40a53a:	inc    ebp
  40a53b:	push   ds
  40a53c:	adc    al,0x51
  40a53e:	lahf   
  40a53f:	loope  0x40a4c7
  40a541:	jno    0x40a4e7
  40a543:	in     eax,0xeb
  40a545:	(bad)  
  40a546:	ret    0x5056
  40a549:	fwait
  40a54a:	xchg   ebx,eax
  40a54b:	lock mov ds:0x54ba3fcc,al
  40a551:	pop    edi
  40a552:	(bad)  
  40a553:	das    
  40a554:	push   eax
  40a555:	push   esp
  40a556:	inc    ebp
  40a557:	dec    edx
  40a558:	out    0x28,al
  40a55a:	hlt    
  40a55b:	mov    esi,0xe7286a8a
  40a560:	outs   dx,DWORD PTR ds:[esi]
  40a561:	pop    es
  40a562:	gs jb  0x40a5a4
  40a565:	dec    ebp
  40a566:	mov    edi,0x1878ee5a
  40a56b:	dec    edx
  40a56c:	sar    DWORD PTR [esi+eiz*4-0x74],0xfd
  40a571:	lds    ebx,FWORD PTR [ecx+0x3e]
  40a574:	mov    eax,0xaa3587a5
  40a579:	or     BYTE PTR [ebx-0x15],dh
  40a57c:	addr16 pop ecx
  40a57e:	arpl   WORD PTR [esi-0x3a],bp
  40a581:	dec    edi
  40a582:	pop    edi
  40a583:	(bad)  
  40a584:	call   0x6b64f45e
  40a589:	inc    eax
  40a58a:	stos   DWORD PTR es:[edi],eax
  40a58b:	cmp    DWORD PTR [ebx],edx
  40a58d:	sbb    DWORD PTR [edx],ebx
  40a58f:	call   0xf9a1:0x9b98bd05
  40a596:	in     eax,0x10
  40a598:	daa    
  40a599:	mov    ch,0xc5
  40a59b:	outs   dx,BYTE PTR ds:[esi]
  40a59c:	pop    edx
  40a59d:	xchg   ecx,eax
  40a59e:	ret    
  40a59f:	xchg   edi,eax
  40a5a0:	sub    al,0x53
  40a5a3:	out    0xb7,eax
  40a5a5:	cli    
  40a5a6:	and    DWORD PTR [ebp-0x3bfad917],esp
  40a5ac:	and    al,0xf8
  40a5ae:	xchg   DWORD PTR [edx+0x70],ebp
  40a5b1:	(bad)  
  40a5b2:	hlt    
  40a5b3:	in     eax,0xb9
  40a5b5:	pop    ebp
  40a5b6:	ret    
  40a5b7:	dec    esi
  40a5b8:	(bad)  [esi+0x3]
  40a5bb:	inc    ecx
  40a5bc:	jmp    0x2bb9:0x9c401cbf
  40a5c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5c4:	and    edi,ecx
  40a5c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5c7:	and    BYTE PTR [eax],cl
  40a5c9:	scas   al,BYTE PTR es:[edi]
  40a5ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5cb:	sub    eax,0x3aa2e73d
  40a5d0:	mov    al,ds:0xda9b659e
  40a5d5:	iret   
  40a5d6:	adc    DWORD PTR [esi*1+0x7d42a74f],0xaecfe31b
  40a5e1:	std    
  40a5e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5e3:	stc    
  40a5e4:	ins    DWORD PTR es:[edi],dx
  40a5e5:	sub    bl,bl
  40a5e7:	dec    DWORD PTR [eax+eiz*2]
  40a5ea:	xchg   edi,eax
  40a5eb:	bswap  ebp
  40a5ed:	xchg   esi,eax
  40a5ee:	add    DWORD PTR [edx-0x7a],ebx
  40a5f1:	(bad)  
  40a5f2:	mov    ebp,0xd4975a01
  40a5f7:	(bad)  
  40a5f8:	cmp    esp,DWORD PTR ds:0xfb55f26a
  40a5fe:	adc    BYTE PTR [eax+0x20],cl
  40a601:	data16 jg 0x40a61e
  40a604:	or     DWORD PTR ds:0x7998c267,edi
  40a60a:	sub    al,0xcf
  40a60c:	push   0x18
  40a60e:	pop    esi
  40a60f:	sub    BYTE PTR [esi],dl
  40a611:	xchg   ecx,eax
  40a612:	ss neg dh
  40a615:	xor    bh,BYTE PTR [ecx]
  40a617:	pop    ds
  40a618:	mov    dh,0xc1
  40a61a:	cdq    
  40a61b:	pop    es
  40a61c:	jmp    0x6720:0x883ac39b
  40a623:	lods   eax,DWORD PTR ds:[esi]
  40a624:	ds and eax,0x8f471d3e
  40a62a:	adc    al,bh
  40a62c:	enter  0xf062,0xa7
  40a630:	fwait
  40a631:	mov    al,ds:0x9241bcc6
  40a636:	loopne 0x40a5fe
  40a638:	loop   0x40a696
  40a63a:	cmp    ch,0x3b
  40a63d:	addr16 xor ah,bl
  40a640:	(bad)  
  40a641:	fisubr WORD PTR [esi+0x8]
  40a644:	call   edx
  40a646:	pop    esi
  40a647:	and    eax,DWORD PTR [esi-0x9]
  40a64a:	(bad)
  40a64e:	mov    al,0x9a
  40a650:	or     eax,0xba71d83c
  40a655:	push   esp
  40a656:	shr    ecx,1
  40a658:	(bad)  
  40a659:	dec    BYTE PTR [esi+0x7b]
  40a65c:	fisubr DWORD PTR [esi+0x52]
  40a65f:	cdq    
  40a660:	shr    BYTE PTR [ecx],cl
  40a662:	xchg   BYTE PTR [eax-0x24acb3ce],ch
  40a668:	and    DWORD PTR [ebx],edx
  40a66a:	and    BYTE PTR [edx-0x7c55da49],bl
  40a670:	add    DWORD PTR [edx],ebp
  40a672:	push   esi
  40a673:	add    dh,cl
  40a675:	xor    eax,0x62eef4ec
  40a67a:	sbb    eax,0xcbd4dc85
  40a67f:	in     al,0x32
  40a681:	repz dec ebp
  40a683:	sub    al,0x5
  40a685:	nop
  40a686:	imul   edi,esi,0x24
  40a689:	add    ecx,esi
  40a68b:	inc    ebp
  40a68c:	mov    edi,0xc4991e08
  40a691:	push   ss
  40a692:	loopne 0x40a70a
  40a694:	cwde   
  40a695:	out    0x5f,al
  40a697:	pop    esp
  40a698:	ss push ss
  40a69a:	loope  0x40a6f2
  40a69c:	sub    al,0xe6
  40a69e:	out    dx,eax
  40a69f:	xor    eax,0x75b499fa
  40a6a4:	mov    ebp,0x82552aaf
  40a6a9:	fwait
  40a6aa:	gs dec ebp
  40a6ac:	test   al,0x56
  40a6ae:	in     eax,0xd1
  40a6b0:	cs repnz dec edx
  40a6b3:	sbb    BYTE PTR [ebx+0x2210f79b],0x72
  40a6ba:	pop    ecx
  40a6bb:	fld    TBYTE PTR [esi+0x6e]
  40a6be:	mov    al,ds:0x2d17764c
  40a6c3:	adc    DWORD PTR [esi+0x4a9f7d47],esi
  40a6c9:	dec    ecx
  40a6ca:	push   eax
  40a6cb:	ins    DWORD PTR es:[edi],dx
  40a6cc:	arpl   sp,si
  40a6ce:	cmc    
  40a6cf:	fild   QWORD PTR [edx]
  40a6d1:	jp     0x40a72e
  40a6d3:	call   0xcd2079d9
  40a6d8:	mov    esp,0xf70b7bec
  40a6dd:	or     al,0x99
  40a6df:	fs xchg edi,eax
  40a6e1:	ror    BYTE PTR [edi+ecx*1],cl
  40a6e4:	hlt    
  40a6e5:	mov    ebx,0xbf7e4b76
  40a6ea:	mov    ds:0xba64e1c2,eax
  40a6ef:	jecxz  0x40a6f0
  40a6f1:	add    esi,edx
  40a6f3:	mov    bh,0x74
  40a6f5:	add    ebp,esi
  40a6f7:	repnz cmp edx,ecx
  40a6fa:	test   BYTE PTR [ebx+eax*2+0x5f],bh
  40a6fe:	in     eax,0x28
  40a700:	shl    BYTE PTR [ebx-0x24d03d4e],1
  40a706:	jl     0x40a753
  40a708:	outs   dx,BYTE PTR ds:[esi]
  40a709:	sbb    BYTE PTR [ebp-0x42],0x44
  40a70d:	punpcklbw mm7,DWORD PTR [esi+0x35]
  40a711:	inc    ebx
  40a712:	cli    
  40a713:	and    eax,0xd13cdaa0
  40a718:	pushf  
  40a719:	aaa    
  40a71a:	sbb    al,0x39
  40a71c:	and    ebx,DWORD PTR [esi]
  40a71e:	pop    ebp
  40a71f:	and    al,0x12
  40a721:	test   DWORD PTR [edx+0x31f1bf4a],eax
  40a727:	repnz xchg edx,eax
  40a729:	sub    eax,0x22bca7df
  40a72e:	xor    BYTE PTR [ebx+0x7fc1ef90],0x90
  40a735:	mov    bh,0x30
  40a737:	aad    0x62
  40a739:	or     al,0x79
  40a73b:	add    eax,0xbc3b04f1
  40a740:	mov    ds:0x48d8bd46,al
  40a745:	push   DWORD PTR [esi]
  40a747:	jnp    0x40a70e
  40a749:	cmp    BYTE PTR [edi+0x231fe2ff],dh
  40a74f:	adc    esi,DWORD PTR [ecx]
  40a751:	mov    cl,BYTE PTR [ebp+eiz*2+0x63dc064]
  40a758:	inc    edi
  40a759:	mov    ebp,cr3
  40a75c:	sub    BYTE PTR [ebp+0x68],0x15
  40a760:	cld    
  40a761:	xor    bh,bl
  40a763:	xor    esi,DWORD PTR [edi]
  40a765:	mov    dh,0xf9
  40a767:	scas   al,BYTE PTR es:[edi]
  40a768:	jb     0x40a6fd
  40a76a:	fcmovb st,st(7)
  40a76c:	std    
  40a76d:	cdq    
  40a76e:	pop    ss
  40a76f:	and    edi,0x54c44ac8
  40a775:	fisubr WORD PTR [edi-0xf3cee2c]
  40a77b:	jbe    0x40a7f4
  40a77d:	mov    cl,0xf1
  40a77f:	test   eax,0xd4c9d6a5
  40a784:	mov    dh,0xac
  40a786:	push   ecx
  40a787:	push   eax
  40a788:	cmp    BYTE PTR [edi+0x7c1fd0b1],ch
  40a78e:	dec    esi
  40a78f:	cdq    
  40a790:	test   eax,0xbce00322
  40a795:	sbb    dl,BYTE PTR [edi-0x65]
  40a798:	jbe    0x40a819
  40a79a:	iret   
  40a79b:	fwait
  40a79c:	mov    ds:0x3c2e85d3,eax
  40a7a1:	iret   
  40a7a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7a3:	or     BYTE PTR [edi-0x31],dh
  40a7a6:	ror    bh,0xf8
  40a7a9:	dec    edi
  40a7aa:	jg     0x40a76a
  40a7ac:	sbb    DWORD PTR [esi],esi
  40a7ae:	lea    esp,[ebp+0x6d1da7a7]
  40a7b4:	les    esi,FWORD PTR [edi]
  40a7b6:	mov    edi,0x3f218e64
  40a7bb:	jns    0x40a7fc
  40a7bd:	dec    ecx
  40a7be:	sbb    BYTE PTR ds:0x964e70c7,cl
  40a7c4:	xor    cl,BYTE PTR [ecx+0x43]
  40a7c7:	sub    eax,0x18183c84
  40a7cc:	or     al,0xd0
  40a7ce:	fwait
  40a7cf:	push   esi
  40a7d0:	sar    BYTE PTR [eax+0x75c94133],0x39
  40a7d7:	sbb    BYTE PTR [esp+ebx*2],ch
  40a7da:	sbb    DWORD PTR [eax-0x5a97da33],edx
  40a7e0:	push   ds
  40a7e1:	adc    dh,BYTE PTR [ecx+0x38]
  40a7e4:	ja     0x40a7ef
  40a7e6:	pop    ebp
  40a7e7:	retf   0x7e7
  40a7ea:	mov    dh,bh
  40a7ec:	push   ebp
  40a7ed:	xor    DWORD PTR [ebp+eiz*2-0x77],edi
  40a7f1:	jae    0x40a7ba
  40a7f3:	cwde   
  40a7f4:	cmp    edi,DWORD PTR [eax+0x58c50985]
  40a7fa:	sbb    al,0xea
  40a7fc:	es jno 0x40a867
  40a7ff:	push   0x4b6e367f
  40a804:	retf   
  40a805:	add    eax,0xac5688a9
  40a80a:	and    ebx,DWORD PTR ds:0x65bff868
  40a810:	xlat   BYTE PTR ds:[ebx]
  40a811:	add    BYTE PTR [ecx],bl
  40a813:	mov    al,0x45
  40a815:	push   esi
  40a816:	nop
  40a817:	loopne 0x40a817
  40a819:	dec    edi
  40a81a:	shl    BYTE PTR [esi-0x53],1
  40a81d:	add    dh,BYTE PTR [ebx]
  40a81f:	sbb    DWORD PTR [ecx+0x1dd08349],ecx
  40a825:	mov    ds:0xfb97723,al
  40a82a:	hlt    
  40a82b:	inc    edi
  40a82c:	cs pop eax
  40a82e:	jecxz  0x40a7d0
  40a830:	addr16 jp 0x40a85f
  40a833:	cmp    DWORD PTR [edi],0xffffffb5
  40a836:	fwait
  40a837:	rcr    DWORD PTR [eax+0x592a3675],cl
  40a83d:	inc    eax
  40a83e:	mov    dl,0xce
  40a840:	ret    0x2558
  40a843:	add    BYTE PTR [edi],ch
  40a845:	add    DWORD PTR ds:0x6b03d72d,eax
  40a84b:	mov    bh,0x2a
  40a84d:	sbb    bl,BYTE PTR [edi-0x45165eb5]
  40a853:	out    dx,eax
  40a854:	lahf   
  40a855:	jl     0x40a7e1
  40a857:	mov    edi,0xdbe8fd89
  40a85c:	push   0xd
  40a85e:	mov    eax,0x9ec4d61d
  40a863:	sbb    ah,BYTE PTR ds:0x1a7e18e2
  40a869:	jae    0x40a89d
  40a86b:	mov    cl,0xb
  40a86d:	sar    BYTE PTR [ebx+edi*1],cl
  40a870:	mov    bl,bl
  40a872:	test   eax,0x3450b4bb
  40a877:	aad    0xc0
  40a879:	pop    ecx
  40a87a:	jp     0x40a8db
  40a87c:	fidiv  DWORD PTR [edx+ebp*1]
  40a87f:	dec    edx
  40a880:	adc    ebp,DWORD PTR [edx+0x2f674ef8]
  40a886:	pop    edi
  40a887:	ds sbb ecx,ecx
  40a88a:	add    esi,DWORD PTR [edx+0x551656e8]
  40a890:	inc    edx
  40a891:	ins    BYTE PTR es:[edi],dx
  40a892:	dec    ebp
  40a893:	pop    edx
  40a894:	push   esi
  40a895:	stos   DWORD PTR es:[edi],eax
  40a896:	push   ss
  40a897:	sahf   
  40a898:	ret    0xff0f
  40a89b:	clc    
  40a89c:	pop    ebx
  40a89d:	imul   esp,DWORD PTR [ebx+0x164c05a2],0xf2e69aa6
  40a8a7:	jbe    0x40a83f
  40a8a9:	sar    DWORD PTR [edi+eiz*8+0x12],1
  40a8ad:	aad    0x32
  40a8af:	jno    0x40a835
  40a8b1:	test   al,0xe7
  40a8b3:	push   0x8a145ed6
  40a8b8:	mov    ecx,0xfbfeb433
  40a8bd:	add    DWORD PTR [edx],ecx
  40a8bf:	das    
  40a8c0:	adc    eax,0x2aef324a
  40a8c5:	push   ebx
  40a8c6:	enter  0x83a,0x27
  40a8ca:	enter  0x1995,0xba
  40a8ce:	jge    0x40a8c6
  40a8d0:	imul   ecx,esi,0x53
  40a8d3:	xor    al,0xee
  40a8d5:	xor    ebp,edi
  40a8d7:	sahf   
  40a8d8:	jae    0x40a8bd
  40a8da:	pop    es
  40a8db:	lock ret 
  40a8dd:	push   es
  40a8de:	or     ecx,0x95f27c0d
  40a8e4:	mov    al,ds:0xcc929a0d
  40a8e9:	(bad)  
  40a8ea:	enter  0x8d0a,0x9f
  40a8ee:	push   ecx
  40a8ef:	sbb    ch,bl
  40a8f1:	pushf  
  40a8f2:	jl     0x40a936
  40a8f4:	pop    esp
  40a8f5:	dec    edx
  40a8f6:	cli    
  40a8f7:	add    BYTE PTR [edx],bh
  40a8f9:	xlat   BYTE PTR ds:[ebx]
  40a8fa:	gs jmp 0xc23fdd66
  40a900:	imul   BYTE PTR [ecx+edi*1-0x58]
  40a904:	mov    es,WORD PTR [esi+edx*1+0x6168c0ec]
  40a90b:	add    cl,BYTE PTR [esi+eiz*2]
  40a90e:	mov    ss,WORD PTR [edi]
  40a910:	xchg   ebx,eax
  40a911:	mov    al,ds:0x402cd5b8
  40a916:	cmp    DWORD PTR [ebp+0x6a9e146],esp
  40a91c:	dec    ecx
  40a91d:	test   eax,0x346e0ca7
  40a922:	sbb    al,0xd5
  40a924:	or     dl,0x24
  40a927:	xchg   edx,eax
  40a928:	(bad)  
  40a92a:	mul    BYTE PTR [ebp+0x10]
  40a92d:	ins    DWORD PTR es:[edi],dx
  40a92e:	dec    ecx
  40a92f:	loopne 0x40a951
  40a931:	push   ds
  40a932:	or     esi,DWORD PTR [edi]
  40a934:	and    eax,0x8bc8938b
  40a939:	lock mov esp,0x6c27b145
  40a93f:	in     eax,0x7a
  40a941:	push   ecx
  40a942:	loopne 0x40a90f
  40a944:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a945:	or     esp,DWORD PTR [edi+0x41]
  40a948:	pop    ebp
  40a949:	ret    0x1f1
  40a94c:	jl     0x40a965
  40a94e:	xchg   ebp,eax
  40a94f:	add    al,0x3f
  40a951:	mov    bh,0x86
  40a953:	jmp    0xa8fc:0x7dbb7eca
  40a95a:	mov    ecx,0x34d9fc0
  40a95f:	loope  0x40a97a
  40a961:	cmc    
  40a962:	pop    ebp
  40a963:	and    al,0x5a
  40a965:	push   edi
  40a966:	dec    ecx
  40a967:	jo     0x40a9d2
  40a969:	fisubr WORD PTR [esi-0x3369e52f]
  40a96f:	adc    eax,0x714582e8
  40a974:	ds aad 0xfb
  40a977:	loop   0x40a9e1
  40a979:	pop    edx
  40a97a:	aaa    
  40a97b:	int3   
  40a97c:	pusha  
  40a97d:	sub    BYTE PTR [eax-0x13],dh
  40a980:	sahf   
  40a981:	lahf   
  40a982:	jno    0x40a910
  40a984:	push   0xfffffffe
  40a986:	lods   eax,DWORD PTR ds:[esi]
  40a987:	push   ss
  40a988:	xor    al,0xe9
  40a98a:	jmp    0xf7f6872
  40a98f:	rcl    BYTE PTR [edx],cl
  40a991:	mov    ebp,0x7d9452ee
  40a996:	cli    
  40a997:	jno    0x40a988
  40a999:	xor    ecx,DWORD PTR [esp+ebx*8]
  40a99c:	add    al,0xbe
  40a99e:	or     esp,DWORD PTR [ecx+0x33b974d]
  40a9a4:	fcomp  DWORD PTR [ecx+0x6f14ab8e]
  40a9aa:	mov    gs,eax
  40a9ac:	(bad)  
  40a9ad:	shl    ecx,1
  40a9af:	jno    0x40a9eb
  40a9b1:	jmp    0xbc40ae02
  40a9b6:	xrelease xchg BYTE PTR [ebx-0x7b],bl
  40a9ba:	shl    BYTE PTR [esi-0x26],cl
  40a9bd:	mov    eax,ds:0x5c6ede91
  40a9c2:	or     al,0x2d
  40a9c4:	pop    ecx
  40a9c5:	jnp    0x40a9ad
  40a9c7:	(bad)  
  40a9c8:	adc    eax,edi
  40a9ca:	int    0x84
  40a9cc:	push   0x50e67b46
  40a9d1:	mov    cl,0xf0
  40a9d3:	xor    ebx,DWORD PTR [ebp+0x3c]
  40a9d6:	je     0x40aa27
  40a9d8:	rcr    DWORD PTR [ebp+edi*8-0x53],1
  40a9dc:	adc    eax,0x7d54a35d
  40a9e1:	mov    ebx,0xf7dc2944
  40a9e6:	fldcw  WORD PTR [edx]
  40a9e8:	(bad)  
  40a9e9:	cmp    esi,DWORD PTR [esi+0x6323200c]
  40a9ef:	pop    ss
  40a9f0:	test   BYTE PTR ds:0x22cffcb4,ch
  40a9f6:	xchg   BYTE PTR ds:0x4cc6ddda,ch
  40a9fc:	fbld   TBYTE PTR [esi-0x2e]
  40a9ff:	pop    ecx
  40aa00:	cdq    
  40aa01:	mov    WORD PTR [eax+0x6ffde480],cs
  40aa07:	addr16 clc 
  40aa09:	pop    esp
  40aa0a:	fs aad 0xa9
  40aa0d:	jb     0x40aa2a
  40aa0f:	or     al,0x5b
  40aa11:	xor    ch,BYTE PTR [edx]
  40aa13:	xchg   DWORD PTR fs:[ebx-0x5c3bc7b6],ebp
  40aa1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa1b:	pop    ecx
  40aa1c:	(bad)  
  40aa1d:	retf   0x7c99
  40aa20:	cmp    ch,al
  40aa22:	push   es
  40aa23:	jmp    0x40aa8e
  40aa25:	add    dh,BYTE PTR [ebp+0x7de29511]
  40aa2b:	mov    ds:0x1d7a402c,al
  40aa30:	mov    ?,WORD PTR [edx]
  40aa32:	mov    ds:0x66a12fb1,al
  40aa37:	adc    eax,0x8305afaf
  40aa3c:	mov    ch,ch
  40aa3e:	push   cs
  40aa3f:	js     0x40a9e8
  40aa41:	pop    es
  40aa42:	into   
  40aa43:	jg     0x40aa39
  40aa45:	in     al,dx
  40aa46:	push   edi
  40aa47:	ins    BYTE PTR es:[edi],dx
  40aa48:	or     DWORD PTR [esi+0x5],edx
  40aa4b:	(bad)  
  40aa4d:	push   cs
  40aa4e:	mov    bl,0xe1
  40aa50:	inc    edi
  40aa51:	pop    edx
  40aa52:	pop    ebp
  40aa53:	test   BYTE PTR [edi+0x4aa2ce73],bl
  40aa59:	test   BYTE PTR [eax+0x660cd069],ch
  40aa5f:	retf   
  40aa60:	(bad)  
  40aa62:	push   eax
  40aa63:	popf   
  40aa64:	mov    BYTE PTR [eax-0x2a],al
  40aa67:	jno    0x40aabd
  40aa69:	xchg   ebp,eax
  40aa6a:	aad    0xad
  40aa6c:	cli    
  40aa6d:	adc    BYTE PTR [ebx],ch
  40aa6f:	gs into 
  40aa71:	nop
  40aa72:	mov    ds:0xcfd15d49,al
  40aa77:	(bad)  
  40aa78:	xchg   ebx,eax
  40aa79:	inc    ecx
  40aa7a:	pop    ss
  40aa7b:	xchg   edx,eax
  40aa7c:	iret   
  40aa7d:	push   es
  40aa7e:	(bad)  
  40aa7f:	nop
  40aa80:	cs push esp
  40aa82:	mov    ecx,0x8d08eb08
  40aa87:	sbb    DWORD PTR [esi],edx
  40aa89:	stos   DWORD PTR es:[edi],eax
  40aa8a:	xor    eax,DWORD PTR cs:[eax+ebp*1]
  40aa8e:	inc    edi
  40aa8f:	enter  0x61bc,0xb5
  40aa93:	xchg   ecx,eax
  40aa94:	clc    
  40aa95:	xchg   DWORD PTR [edi],eax
  40aa97:	shl    BYTE PTR [ebp-0x16],cl
  40aa9a:	xchg   esp,eax
  40aa9b:	and    al,0x91
  40aa9d:	push   eax
  40aa9e:	add    BYTE PTR ds:0x73022965,al
  40aaa4:	out    0xee,al
  40aaa6:	pop    ss
  40aaa7:	sub    esp,eax
  40aaa9:	sbb    BYTE PTR ss:[ecx-0x1aaf78ff],bl
  40aab0:	call   0xf1c43bff
  40aab5:	push   eax
  40aab6:	addr16 leave 
  40aab8:	push   eax
  40aab9:	mov    ?,esi
  40aabb:	lods   al,BYTE PTR ds:[esi]
  40aabc:	push   es
  40aabd:	(bad)  
  40aabe:	jnp    0x40aaee
  40aac0:	jecxz  0x40aa6c
  40aac2:	mov    ds:0xd954799,al
  40aac7:	mov    esi,esp
  40aac9:	cmp    DWORD PTR [eax-0x49],eax
  40aacc:	pop    esp
  40aacd:	sub    DWORD PTR [esi-0x50a08370],0xb9c41233
  40aad7:	sbb    esi,esp
  40aad9:	call   0xcd6:0xbae03a59
  40aae0:	retf   0x31a1
  40aae3:	push   cs
  40aae4:	loop   0x40ab42
  40aae6:	pop    esi
  40aae7:	cs inc esp
  40aae9:	cmp    eax,0x91fa056e
  40aaee:	pop    es
  40aaef:	jns    0x40ab60
  40aaf1:	inc    eax
  40aaf2:	or     ecx,DWORD PTR [eax]
  40aaf4:	fst    QWORD PTR [ecx+0x11805a1d]
  40aafa:	std    
  40aafb:	mov    eax,ds:0x69c129ad
  40ab00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab01:	cmp    al,0x80
  40ab03:	pop    ss
  40ab04:	imul   eax,DWORD PTR [esi+edi*2-0x1],0x48
  40ab09:	xchg   DWORD PTR [ebx],ebp
  40ab0b:	popf   
  40ab0c:	adc    DWORD PTR [esi],0x45
  40ab0f:	dec    esp
  40ab10:	ins    DWORD PTR es:[edi],dx
  40ab11:	sub    al,0x1f
  40ab13:	xor    al,0xfc
  40ab15:	push   ds
  40ab16:	push   ss
  40ab17:	xchg   bh,bh
  40ab19:	and    eax,0xc7ba609c
  40ab1e:	test   al,0x2f
  40ab20:	inc    edx
  40ab21:	push   ds
  40ab22:	(bad)  
  40ab23:	out    0xf3,al
  40ab25:	jmp    0xc2b1:0x96d31fb2
  40ab2c:	cwde   
  40ab2d:	mov    esp,0xc88c8195
  40ab32:	pop    esi
  40ab33:	pop    ebx
  40ab34:	mov    ah,BYTE PTR [eax+0x6bc0b2bb]
  40ab3a:	sub    BYTE PTR [edi+0x1],bh
  40ab3d:	gs and esi,esp
  40ab40:	cmp    eax,0xd0f2a37b
  40ab45:	enter  0x408d,0xb2
  40ab49:	xchg   ecx,eax
  40ab4a:	gs adc al,0x16
  40ab4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab4e:	xor    esi,DWORD PTR [ebx+0x41]
  40ab51:	mov    ds:0x1763655e,eax
  40ab56:	push   0x1e1c0f51
  40ab5b:	sub    al,0x65
  40ab5d:	out    0xb0,eax
  40ab5f:	pop    eax
  40ab60:	add    DWORD PTR cs:[ecx+0x5dfc6472],ecx
  40ab67:	jo     0x40aaf4
  40ab69:	in     al,dx
  40ab6a:	adc    cl,BYTE PTR [eax+0x61081be7]
  40ab70:	icebp  
  40ab71:	mov    WORD PTR [eax],ss
  40ab73:	in     al,dx
  40ab74:	push   ds
  40ab75:	js     0x40aba3
  40ab77:	or     eax,0x8dc346cd
  40ab7c:	(bad)  
  40ab7d:	mov    BYTE PTR [edx+0x35952b35],dh
  40ab83:	xchg   DWORD PTR [edi],edx
  40ab85:	out    0x59,al
  40ab87:	cdq    
  40ab88:	sub    dh,bl
  40ab8a:	and    BYTE PTR [ecx],al
  40ab8c:	clc    
  40ab8d:	lea    eax,[ebp+0x9]
  40ab90:	mov    al,ds:0x3d190e86
  40ab95:	test   eax,0x13f3c4c4
  40ab9a:	int3   
  40ab9b:	pop    esi
  40ab9c:	outs   dx,BYTE PTR ds:[esi]
  40ab9d:	test   eax,0x2f4cc575
  40aba2:	adc    cl,0xd8
  40aba5:	ficom  WORD PTR [ecx+0x770961f]
  40abab:	das    
  40abac:	and    DWORD PTR [ecx+0xb4da615],0x76
  40abb3:	mov    al,ds:0xc98a604c
  40abb8:	xchg   BYTE PTR [ebx+0x21],ch
  40abbb:	pop    esp
  40abbc:	push   0x9ae81104
  40abc1:	mov    ecx,0x70aad4b2
  40abc6:	(bad)  
  40abc7:	(bad)  
  40abc8:	fstp   TBYTE PTR [edi+0x72866133]
  40abce:	jmp    0x40ab50
  40abd0:	xor    al,0x18
  40abd2:	push   ecx
  40abd3:	dec    esp
  40abd4:	aad    0x3
  40abd6:	adc    ebx,DWORD PTR [ebx-0xc]
  40abd9:	add    al,0xa5
  40abdb:	inc    eax
  40abdc:	xchg   esp,eax
  40abdd:	aas    
  40abde:	mov    ebp,0x35ee5a3c
  40abe3:	int    0xc2
  40abe5:	icebp  
  40abe6:	pop    esp
  40abe7:	pop    esi
  40abe8:	retf   
  40abe9:	jno    0x40abd7
  40abeb:	add    eax,0x23576a99
  40abf0:	mov    bl,0xaf
  40abf2:	(bad)  
  40abf3:	sbb    DWORD PTR [ebx-0x79d8243f],ebp
  40abf9:	sbb    BYTE PTR [edi-0xf3775d2],cl
  40abff:	ret    0x16a8
  40ac02:	retf   
  40ac03:	inc    ebx
  40ac04:	cli    
  40ac05:	mov    ecx,0x5f04796
  40ac0a:	jae    0x40ab90
  40ac0c:	adc    bl,BYTE PTR [edi+0x16389619]
  40ac12:	dec    edi
  40ac13:	pop    ss
  40ac14:	mov    WORD PTR [ebx+0x3],ss
  40ac17:	aaa    
  40ac18:	cmp    BYTE PTR [edi+0x79],dl
  40ac1b:	lahf   
  40ac1c:	push   ebp
  40ac1d:	pushf  
  40ac1e:	dec    eax
  40ac1f:	jl     0x40ac26
  40ac21:	inc    ebx
  40ac22:	out    0xba,eax
  40ac24:	jmp    0x2a09:0x9564f227
  40ac2b:	xor    ah,BYTE PTR [eax+0x21]
  40ac2e:	fcomp  DWORD PTR [ecx]
  40ac30:	imul   esp,DWORD PTR [eax+0x54],0xfffffff1
  40ac34:	push   cs
  40ac35:	xor    eax,0x6e4e8111
  40ac3a:	out    dx,al
  40ac3b:	cmp    BYTE PTR [esi+0x5ed49a35],0xea
  40ac42:	sub    al,0x42
  40ac44:	sti    
  40ac45:	xchg   edx,eax
  40ac46:	push   eax
  40ac47:	pop    ss
  40ac48:	push   ds
  40ac49:	rcr    DWORD PTR [ecx-0x625b38a9],1
  40ac4f:	mov    WORD PTR [edi],?
  40ac51:	not    BYTE PTR [ebp+edi*2+0x6fa11077]
  40ac58:	(bad)  
  40ac59:	mov    esi,0x4e2116a7
  40ac5e:	test   al,0x3f
  40ac60:	mov    edi,0xc1ad2f0b
  40ac65:	xchg   edi,eax
  40ac66:	cmp    BYTE PTR [edx+eiz*4-0x29e63f21],ch
  40ac6d:	mov    eax,0x87390ce5
  40ac72:	pop    ecx
  40ac73:	shl    BYTE PTR [edx+0x532fd4f0],cl
  40ac79:	push   ecx
  40ac7a:	lea    ebp,[esi]
  40ac7c:	imul   edx,DWORD PTR [ecx+0x44a12884],0x67e0194f
  40ac86:	sbb    BYTE PTR [eax-0x38],0x80
  40ac8a:	sti    
  40ac8b:	(bad)  
  40ac8c:	test   BYTE PTR [edx+0x14],0xef
  40ac90:	icebp  
  40ac91:	ret    
  40ac92:	rcr    DWORD PTR [ebp-0x4c8a771c],1
  40ac98:	shl    BYTE PTR [ebx],cl
  40ac9a:	or     esp,DWORD PTR [ebx-0x5b]
  40ac9d:	sbb    eax,DWORD PTR [edx]
  40ac9f:	mov    BYTE PTR [ebx+edi*8-0x3d],cl
  40aca3:	push   ds
  40aca4:	jmp    0x19fa:0xe7c8ca41
  40acab:	push   0xffffff83
  40acad:	inc    ebx
  40acae:	cmp    BYTE PTR [ebx-0x3b],0xa8
  40acb2:	fs add al,0x20
  40acb5:	mov    bh,0x3d
  40acb7:	inc    esp
  40acb8:	push   esi
  40acb9:	stos   BYTE PTR es:[edi],al
  40acba:	ret    
  40acbb:	push   ebp
  40acbc:	(bad)  
  40acbd:	push   eax
  40acbe:	cmc    
  40acbf:	inc    ebp
  40acc0:	pushf  
  40acc1:	sbb    DWORD PTR [edi+0x22],ecx
  40acc4:	jle    0x40acd7
  40acc6:	imul   esi,edi,0x48a2cceb
  40accc:	jns    0x40ad32
  40acce:	add    esi,DWORD PTR [ebx-0x36]
  40acd1:	scas   al,BYTE PTR es:[edi]
  40acd2:	call   0x4c42f610
  40acd7:	mov    edi,0x67f23ab5
  40acdc:	hlt    
  40acdd:	xor    eax,0xfe27891b
  40ace2:	icebp  
  40ace3:	mov    al,0xb2
  40ace5:	xchg   BYTE PTR [ebp-0x7c],bl
  40ace8:	hlt    
  40ace9:	test   eax,0xf365bc38
  40acee:	jae    0x40ad21
  40acf0:	jmp    0x40ac8f
  40acf2:	mov    al,0xac
  40acf4:	pop    eax
  40acf5:	dec    eax
  40acf6:	retf   
  40acf7:	out    0xc2,al
  40acf9:	sub    al,0x8a
  40acfb:	adc    eax,0x41e83e7
  40ad00:	add    al,0x9a
  40ad02:	lods   eax,DWORD PTR ds:[esi]
  40ad03:	imul   bl
  40ad05:	fild   WORD PTR [eax-0x1b]
  40ad08:	(bad)  
  40ad09:	cmp    BYTE PTR [esi+0xf],ah
  40ad0c:	jmp    0x6e04:0xae4a5dcb
  40ad13:	cmp    al,ch
  40ad15:	ficom  WORD PTR [edx]
  40ad17:	cld    
  40ad18:	dec    esp
  40ad19:	add    ch,ah
  40ad1b:	paddw  mm4,QWORD PTR [ebp-0x29e66e85]
  40ad22:	mov    al,ds:0x76be3294
  40ad27:	packssdw mm6,mm2
  40ad2a:	cld    
  40ad2b:	mov    bh,0x3
  40ad2d:	fdiv   st,st(6)
  40ad2f:	jmp    0x24444200
  40ad34:	sub    al,0xb7
  40ad36:	xlat   BYTE PTR ds:[ebx]
  40ad37:	pop    eax
  40ad38:	fwait
  40ad39:	inc    ebx
  40ad3a:	cmp    esi,DWORD PTR [esi-0xee9b465]
  40ad40:	mov    ?,WORD PTR [ecx+eax*8]
  40ad43:	adc    bh,BYTE PTR [eax]
  40ad45:	rcl    DWORD PTR [esi],cl
  40ad47:	ret    0xdb1c
  40ad4a:	xor    eax,0x7b8e7175
  40ad4f:	in     eax,0x7
  40ad51:	push   edx
  40ad52:	pop    es
  40ad53:	outs   dx,DWORD PTR ds:[esi]
  40ad54:	loope  0x40ad8f
  40ad56:	inc    esp
  40ad57:	pop    edx
  40ad58:	mov    ebx,0x557520e8
  40ad5d:	push   esp
  40ad5e:	and    al,0xbd
  40ad60:	dec    edi
  40ad61:	cli    
  40ad62:	inc    edi
  40ad63:	pop    esi
  40ad64:	imul   esp,DWORD PTR [esi+0x2aa8ef31],0xffffffa3
  40ad6b:	inc    edx
  40ad6c:	xlat   BYTE PTR ds:[ebx]
  40ad6d:	push   0xaa2e88c1
  40ad72:	pusha  
  40ad73:	sbb    eax,0xc431d7f7
  40ad78:	cmp    DWORD PTR [esi],eax
  40ad7a:	(bad)  
  40ad7b:	retf   
  40ad7c:	scas   eax,DWORD PTR es:[edi]
  40ad7d:	push   esp
  40ad7e:	or     DWORD PTR [ebx],esi
  40ad80:	lods   eax,DWORD PTR ds:[esi]
  40ad81:	es push ecx
  40ad83:	bnd jl 0x40adc2
  40ad86:	jmp    0xcef1:0xa6c7a151
  40ad8d:	test   ah,bl
  40ad8f:	push   esp
  40ad90:	dec    esi
  40ad91:	test   BYTE PTR [ebp+0x1a],cl
  40ad94:	xchg   ecx,eax
  40ad95:	data16 and al,0xcc
  40ad98:	cli    
  40ad99:	lea    ecx,[edx+0x47]
  40ad9c:	aad    0xc
  40ad9e:	in     al,0x52
  40ada0:	fidiv  DWORD PTR [esi+0x6a]
  40ada3:	pusha  
  40ada4:	dec    ebp
  40ada5:	sbb    dh,BYTE PTR [ebx]
  40ada7:	neg    DWORD PTR [edx-0x97dbc25]
  40adad:	cli    
  40adae:	mov    DWORD PTR [ecx+0x65dc4161],eax
  40adb4:	sbb    eax,0xb7677663
  40adb9:	inc    esi
  40adba:	lea    edx,[eax+0x5bfabfbd]
  40adc0:	pop    ebp
  40adc1:	lea    ecx,[edx+0x14]
  40adc4:	sub    DWORD PTR [ebp-0x3d],eax
  40adc7:	pop    ds
  40adc8:	in     al,dx
  40adc9:	inc    esp
  40adca:	inc    edi
  40adcb:	stos   BYTE PTR es:[edi],al
  40adcc:	and    ch,ah
  40adce:	xchg   ebx,eax
  40adcf:	(bad)  
  40add0:	call   0x86e3:0x2ef0ee6e
  40add7:	jp     0x40ae28
  40add9:	pop    edx
  40addb:	mov    bl,0x4a
  40addd:	out    0x8,eax
  40addf:	test   BYTE PTR [ebx-0x73fc6c4f],cl
  40ade5:	and    BYTE PTR [ebp-0x60],ah
  40ade8:	in     eax,0x9e
  40adea:	mov    WORD PTR [edi-0x45881ff5],cs
  40adf0:	adc    dh,BYTE PTR [edx]
  40adf2:	mov    WORD PTR [ebx+ebp*8+0x5],es
  40adf6:	push   edi
  40adf7:	iret   
  40adf8:	sub    BYTE PTR [edi-0x47],dh
  40adfb:	test   BYTE PTR [ecx],al
  40adfd:	adc    esp,DWORD PTR [edi-0x1a]
  40ae00:	(bad)  
  40ae01:	ja     0x40add0
  40ae03:	sbb    eax,0x7fc0e37e
  40ae08:	xchg   esp,eax
  40ae09:	rol    BYTE PTR [eax],1
  40ae0b:	add    DWORD PTR [edi+0x5c],eax
  40ae0e:	mov    ecx,0xd1fc387d
  40ae13:	cmp    al,0xd5
  40ae15:	repnz loop 0x40ae80
  40ae18:	or     eax,0x58af13bf
  40ae1d:	and    eax,0xae1829da
  40ae22:	and    BYTE PTR [ecx],bh
  40ae24:	jnp    0x40add6
  40ae26:	mov    fs,WORD PTR [ecx+0x10dd4c64]
  40ae2c:	adc    esi,edx
  40ae2e:	std    
  40ae2f:	mov    ds:0xa42942bd,eax
  40ae34:	push   ds
  40ae35:	pop    edi
  40ae36:	push   0x56a5f633
  40ae3b:	shl    DWORD PTR [edx-0x12606ff5],0xab
  40ae42:	aam    0xde
  40ae44:	int    0x91
  40ae46:	ja     0x40adce
  40ae48:	(bad)  
  40ae49:	das    
  40ae4a:	out    0x25,eax
  40ae4c:	push   cs
  40ae4d:	out    dx,eax
  40ae4e:	cmp    DWORD PTR [esi+0x41c1fc60],ebx
  40ae54:	sbb    esi,esi
  40ae56:	ret    
  40ae57:	dec    ebp
  40ae58:	daa    
  40ae59:	mov    eax,ds:0xcd10184c
  40ae5e:	sti    
  40ae5f:	pop    ecx
  40ae60:	test   eax,0x1daa89c7
  40ae65:	push   esi
  40ae66:	dec    edx
  40ae67:	out    dx,eax
  40ae68:	jle    0x40ae36
  40ae6a:	adc    al,0x8c
  40ae6c:	(bad)  
  40ae6d:	(bad)  
  40ae6e:	into   
  40ae6f:	frstor [ecx]
  40ae71:	out    dx,al
  40ae72:	in     al,0xc3
  40ae74:	in     eax,dx
  40ae75:	pop    esi
  40ae76:	xchg   DWORD PTR [edx],ebx
  40ae78:	push   ebp
  40ae79:	pop    ss
  40ae7a:	cmp    BYTE PTR [ebx+ebx*1],bl
  40ae7d:	mov    esp,0xfb838019
  40ae82:	lock jae 0x40ae2c
  40ae85:	jg     0x40ae69
  40ae87:	pushw  cs
  40ae89:	mov    ecx,DWORD PTR [eax]
  40ae8b:	push   esi
  40ae8c:	push   ecx
  40ae8d:	mov    BYTE PTR [edx],ah
  40ae8f:	sar    BYTE PTR [esi*8+0x2353f863],0xc5
  40ae97:	dec    eax
  40ae98:	dec    edi
  40ae99:	and    BYTE PTR [edx+0x11],al
  40ae9c:	dec    esi
  40ae9d:	jge    0x40aed9
  40ae9f:	sahf   
  40aea0:	js     0x40aec3
  40aea2:	xor    dh,BYTE PTR [ebx+0x5143b86]
  40aea8:	dec    ebp
  40aea9:	leave  
  40aeaa:	icebp  
  40aeab:	xor    eax,0x59cf7786
  40aeb0:	adc    ah,BYTE PTR [esi+0x7e]
  40aeb3:	inc    ebp
  40aeb4:	mov    esi,0xca142879
  40aeb9:	nop
  40aeba:	arpl   WORD PTR [esi-0x6],cx
  40aebd:	outs   dx,DWORD PTR ds:[esi]
  40aebe:	and    BYTE PTR [eax+0x6b],0x3c
  40aec2:	aas    
  40aec3:	sbb    eax,0xec0bda1b
  40aec8:	adc    DWORD PTR [ecx+0x74],ecx
  40aecb:	in     eax,0x7d
  40aecd:	movups xmm2,xmm0
  40aed0:	sbb    dl,BYTE PTR [esi-0x4a]
  40aed3:	adc    DWORD PTR [ecx-0x79],esp
  40aed6:	cmp    eax,0xe29d385d
  40aedb:	cmp    eax,0xfaeae59b
  40aee0:	adc    eax,0xead8cd10
  40aee5:	mov    esi,0x2b597456
  40aeea:	loop   0x40af67
  40aeec:	ja     0x40af2f
  40aeee:	cmp    eax,0xed25f2e3
  40aef3:	inc    ecx
  40aef4:	mov    esp,0x61db3354
  40aef9:	sub    esp,esp
  40aefb:	les    ebp,FWORD PTR [ebx+ecx*1-0x42]
  40aeff:	fimul  WORD PTR [ebp+0x70]
  40af02:	clc    
  40af03:	mov    dl,0x6a
  40af05:	inc    esi
  40af06:	clc    
  40af07:	fucomi st,st(5)
  40af09:	inc    eax
  40af0a:	mov    ds:0x221a6bf0,eax
  40af0f:	ja     0x40aeb7
  40af11:	push   esi
  40af12:	push   0xc3a3df7
  40af17:	mov    ch,0x5d
  40af19:	dec    ebx
  40af1a:	dec    ebx
  40af1b:	inc    edx
  40af1c:	sti    
  40af1d:	ret    
  40af1e:	mov    eax,0x78456ca8
  40af23:	inc    ecx
  40af24:	(bad)  
  40af25:	not    DWORD PTR [ecx]
  40af27:	or     al,0x34
  40af29:	and    esi,ecx
  40af2b:	mov    al,ds:0x6bcf19c5
  40af30:	lahf   
  40af31:	adc    dh,bl
  40af33:	aas    
  40af34:	cmp    eax,0x5404637d
  40af39:	xchg   edi,eax
  40af3a:	sbb    ch,dl
  40af3c:	adc    ax,0x98a2
  40af40:	add    al,0x58
  40af42:	(bad)  
  40af43:	in     eax,0x18
  40af45:	pop    ebp
  40af46:	icebp  
  40af47:	(bad)  
  40af48:	push   eax
  40af49:	sbb    eax,esp
  40af4b:	(bad)  
  40af4c:	fcomp  QWORD PTR [edi+0x3cd0d7ea]
  40af52:	outs   dx,DWORD PTR ds:[esi]
  40af53:	and    BYTE PTR [eax],cl
  40af55:	xor    ah,BYTE PTR [edi-0x35]
  40af58:	fwait
  40af59:	je     0x40aee3
  40af5b:	aas    
  40af5c:	jne    0x40aef8
  40af5e:	lods   eax,DWORD PTR ds:[esi]
  40af5f:	rcl    BYTE PTR [esi-0x795d8e87],0x4a
  40af66:	retf   
  40af67:	or     BYTE PTR [edi-0x2a],al
  40af6a:	sub    edx,DWORD PTR [edi-0x80]
  40af6d:	xchg   esp,eax
  40af6e:	or     eax,0xbbc3650a
  40af73:	push   ds
  40af74:	mov    ebp,0x631cb403
  40af79:	or     al,0x40
  40af7b:	mov    esp,0x80f54219
  40af80:	inc    ecx
  40af81:	dec    edi
  40af82:	mov    WORD PTR [edx+0x73],gs
  40af85:	sub    al,0x59
  40af87:	push   ecx
  40af88:	ja     0x40afee
  40af8a:	cmp    BYTE PTR [edx+0x561d0d54],ah
  40af90:	cli    
  40af91:	push   ebx
  40af92:	stos   BYTE PTR es:[edi],al
  40af93:	sub    esi,DWORD PTR [edx+0x5c747bd2]
  40af99:	and    al,0x50
  40af9b:	adc    DWORD PTR [edx+ebx*2],esi
  40af9e:	dec    ecx
  40af9f:	lods   eax,DWORD PTR ds:[esi]
  40afa0:	call   0xc3c565aa
  40afa5:	scas   eax,DWORD PTR es:[edi]
  40afa6:	in     al,0x42
  40afa8:	pop    esi
  40afa9:	retf   0x15ff
  40afac:	es int3 
  40afae:	jg     0x40af9d
  40afb0:	pop    ebx
  40afb1:	or     esi,esp
  40afb3:	retf   0x4a3e
  40afb6:	pop    es
  40afb7:	adc    ah,BYTE PTR [edi+0x54]
  40afba:	nop
  40afbb:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afbd:	ins    DWORD PTR es:[edi],dx
  40afbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afbf:	jno    0x40affe
  40afc1:	jge    0x40aff9
  40afc3:	jecxz  0x40af90
  40afc5:	sub    ah,BYTE PTR [edi-0x30c6cfc9]
  40afcb:	sbb    dl,bl
  40afcd:	sub    dh,BYTE PTR [edx-0x4d]
  40afd0:	xchg   ebx,eax
  40afd1:	xchg   esi,eax
  40afd2:	dec    ecx
  40afd3:	ja     0x40af68
  40afd5:	and    DWORD PTR [ebx],esi
  40afd7:	jl     0x40b050
  40afd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afda:	stc    
  40afdb:	xor    BYTE PTR [ecx+ecx*4-0x4b5708c6],bh
  40afe2:	dec    edx
  40afe3:	inc    edx
  40afe4:	ror    DWORD PTR [ebp-0x3e],0x24
  40afe8:	jb     0x40b023
  40afea:	inc    ebx
  40afeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afec:	into   
  40afed:	nop
  40afee:	pop    ebp
  40afef:	cmp    al,0xc6
  40aff1:	out    0x94,al
  40aff3:	fsub   st(2),st
  40aff5:	pop    es
  40aff6:	ror    BYTE PTR [eax],cl
  40aff8:	inc    eax
  40aff9:	call   0xa712:0xe302b263
  40b000:	pusha  
  40b001:	shl    DWORD PTR [ebx+eax*2],0xfa
  40b005:	(bad)  
  40b006:	nop
  40b007:	mov    ebx,0xfa33a7d8
  40b00c:	jns    0x40afcb
  40b00e:	add    eax,0x5cc8d1ae
  40b013:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b014:	loopne 0x40b087
  40b016:	cmp    BYTE PTR [esi+0xd],0xcd
  40b01a:	fild   WORD PTR [edi]
  40b01c:	(bad)  
  40b01d:	bound  edi,QWORD PTR [ebp+0x18]
  40b020:	inc    bx
  40b022:	xchg   edx,eax
  40b023:	mov    edx,0xb61c19ca
  40b028:	dec    ebp
  40b029:	add    eax,ecx
  40b02b:	fidivr DWORD PTR [eax+0x41]
  40b02e:	xchg   bh,dl
  40b030:	cmp    BYTE PTR [esi+0x42],ah
  40b033:	or     DWORD PTR [eax+0x7],ebx
  40b036:	nop
  40b037:	and    al,0xb8
  40b039:	ins    BYTE PTR es:[edi],dx
  40b03a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b03b:	mov    esp,0x3b5cab14
  40b040:	sbb    al,0xfe
  40b042:	xchg   edx,eax
  40b043:	scas   al,BYTE PTR es:[edi]
  40b044:	lods   eax,DWORD PTR ds:[esi]
  40b045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b046:	(bad)  
  40b047:	out    0xd9,al
  40b049:	ficom  WORD PTR [ecx+0x6d9eea34]
  40b04f:	xor    bl,BYTE PTR [ecx]
  40b051:	dec    edx
  40b052:	into   
  40b053:	je     0x40b082
  40b055:	fcom   st(0)
  40b057:	pop    esp
  40b058:	or     cl,BYTE PTR [edi]
  40b05a:	clc    
  40b05b:	cmp    dh,bl
  40b05d:	adc    DWORD PTR [edx],esi
  40b05f:	mov    cl,0xf8
  40b061:	inc    esi
  40b062:	sbb    DWORD PTR [eax-0x381a110],esp
  40b068:	es retf 
  40b06a:	in     al,dx
  40b06b:	clc    
  40b06c:	in     al,0xe3
  40b06e:	adc    DWORD PTR [eax+0x35bee11e],eax
  40b074:	mov    ebp,0x410ce092
  40b079:	call   0x1954b9ba
  40b07e:	push   esp
  40b07f:	and    eax,0xd9bfb4da
  40b084:	lock pop eax
  40b086:	loopne 0x40b00a
  40b088:	push   es
  40b089:	jb     0x40b04a
  40b08b:	loope  0x40b03b
  40b08d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b08e:	loope  0x40b0a4
  40b090:	fstp   DWORD PTR [edx+0x1bc4789a]
  40b096:	cli    
  40b097:	mov    dl,0x92
  40b099:	test   al,0xa3
  40b09b:	pop    esp
  40b09c:	mov    DWORD PTR [edi+0x6a73c52d],esi
  40b0a2:	jp     0x40b045
  40b0a4:	jae    0x40b070
  40b0a6:	add    bh,BYTE PTR [eax+ecx*8-0x6c]
  40b0aa:	mov    ch,0x56
  40b0ac:	enter  0x52d4,0x47
  40b0b0:	mov    eax,ds:0x62b18aba
  40b0b5:	fcmovb st,st(1)
  40b0b7:	lea    ebp,[edi+0x27]
  40b0ba:	cmp    DWORD PTR ds:0x8cd1b0f8,edi
  40b0c0:	out    0x7f,al
  40b0c2:	(bad)  
  40b0c3:	cmp    al,0xf3
  40b0c5:	imul   ebp,DWORD PTR ds:0xe55db0ef,0xffffffd1
  40b0cc:	arpl   WORD PTR [eax-0xb],ax
  40b0cf:	mov    ebp,0xa6eb7d92
  40b0d4:	push   edx
  40b0d5:	rcl    BYTE PTR [edi-0x6e],0x5b
  40b0d9:	mov    ds:0x5acd5686,al
  40b0de:	adc    BYTE PTR [ecx-0x68],ah
  40b0e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0e2:	cwde   
  40b0e3:	sub    al,0x0
  40b0e5:	adc    edx,0x21f172a3
  40b0eb:	sbb    eax,0x3816481d
  40b0f0:	stos   DWORD PTR es:[edi],eax
  40b0f1:	xor    eax,0x533fe878
  40b0f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0f7:	daa    
  40b0f8:	or     DWORD PTR [ebx],edi
  40b0fa:	pop    ebp
  40b0fb:	test   BYTE PTR [ebx],bl
  40b0fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0fe:	fnstenv [esi+0x50]
  40b101:	jg     0x40b0b0
  40b103:	xchg   esp,eax
  40b104:	mov    al,ds:0x4dc09bf1
  40b109:	push   ebx
  40b10a:	nop
  40b10b:	ja     0x40b0df
  40b10d:	lods   al,BYTE PTR ds:[esi]
  40b10e:	call   0x73de4b5f
  40b113:	std    
  40b114:	inc    edx
  40b115:	aas    
  40b116:	ja     0x40b0e8
  40b118:	pop    esi
  40b119:	and    ch,BYTE PTR [esi]
  40b11b:	pusha  
  40b11c:	jmp    0x40b186
  40b11e:	fucompp 
  40b120:	inc    ebp
  40b121:	mov    ebx,esp
  40b123:	jp     0x40b132
  40b125:	sbb    eax,0x7d1fd988
  40b12a:	scas   al,BYTE PTR es:[edi]
  40b12b:	jo     0x40b0bf
  40b12d:	sbb    DWORD PTR [esi],0xd2cd8399
  40b133:	sbb    eax,DWORD PTR [esi-0x50]
  40b136:	dec    edx
  40b137:	popa   
  40b138:	pop    ecx
  40b139:	push   ebx
  40b13a:	xor    BYTE PTR [esi+0x61a11357],bl
  40b140:	jns    0x40b196
  40b142:	mov    eax,ds:0xa3f46d6c
  40b147:	cmp    ax,WORD PTR [esi]
  40b14a:	icebp  
  40b14b:	les    esi,FWORD PTR [edi-0x376164f2]
  40b151:	ror    dh,cl
  40b153:	sbb    BYTE PTR [eax+0x331c5baf],ah
  40b159:	lahf   
  40b15a:	aad    0x31
  40b15c:	jae    0x40b137
  40b15e:	in     al,0xe
  40b160:	jo     0x40b142
  40b162:	scas   eax,DWORD PTR es:[edi]
  40b163:	jmp    0x4cca4d79
  40b168:	frstor [esp+ebx*1+0x1b]
  40b16c:	push   es
  40b16d:	mov    ah,0x46
  40b16f:	out    dx,al
  40b170:	and    eax,0x505746e9
  40b175:	fsubr  QWORD PTR [edi+0x78]
  40b178:	sub    eax,DWORD PTR [esi]
  40b17a:	pop    esi
  40b17b:	and    BYTE PTR [ecx-0x422c6b9d],ch
  40b181:	aad    0x49
  40b183:	jge    0x40b1b5
  40b185:	sbb    DWORD PTR [ecx],0xbaca0e1e
  40b18b:	fwait
  40b18c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b18d:	mov    esi,0xb97e829b
  40b192:	popf   
  40b193:	mov    al,ds:0x512962dd
  40b198:	retf   
  40b199:	lods   al,BYTE PTR ds:[esi]
  40b19a:	push   esp
  40b19b:	(bad)  
  40b19c:	gs into 
  40b19e:	push   0x218155ed
  40b1a3:	sbb    DWORD PTR ds:0x5849c634,0x9e99c2a1
  40b1ad:	cdq    
  40b1ae:	out    dx,eax
  40b1af:	xchg   ecx,eax
  40b1b0:	std    
  40b1b1:	sub    al,BYTE PTR [ebx-0x51]
  40b1b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1b5:	pop    esp
  40b1b6:	push   ebx
  40b1b7:	mov    ch,0xc0
  40b1b9:	inc    esp
  40b1ba:	test   al,0x9f
  40b1bc:	shl    DWORD PTR [eax-0x6f],1
  40b1bf:	pusha  
  40b1c0:	push   0x41
  40b1c2:	ins    DWORD PTR es:[edi],dx
  40b1c3:	sbb    al,0x83
  40b1c5:	xadd   BYTE PTR [edi-0x7b],al
  40b1c9:	out    0xbc,al
  40b1cb:	(bad)  
  40b1cd:	loopne 0x40b1de
  40b1cf:	(bad)  
  40b1d0:	fcom   DWORD PTR [eax*2-0x63c19892]
  40b1d7:	pop    esp
  40b1d8:	icebp  
  40b1d9:	adc    BYTE PTR [ecx-0x69],dl
  40b1dc:	xchg   DWORD PTR [eax],edx
  40b1de:	stos   BYTE PTR es:[edi],al
  40b1df:	xor    ah,0x9d
  40b1e2:	add    DWORD PTR [ecx],ebx
  40b1e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1e5:	js     0x40b177
  40b1e7:	dec    eax
  40b1e8:	xor    ecx,DWORD PTR [ebp-0x185a0ec8]
  40b1ee:	dec    esi
  40b1ef:	nop
  40b1f0:	fstp   TBYTE PTR ds:0x62eee76c
  40b1f6:	adc    al,0x34
  40b1f8:	jbe    0x40b1e9
  40b1fa:	sbb    edx,DWORD PTR [edi+esi*8+0x53]
  40b1fe:	and    esi,DWORD PTR [ecx+0x186ff577]
  40b204:	mov    ah,0xd7
  40b206:	repz cmp eax,0x6361eb30
  40b20c:	sbb    al,BYTE PTR [edi+0xa134a6e]
  40b212:	add    DWORD PTR [esi+0x2b],0xffffffb9
  40b216:	or     ecx,DWORD PTR [ebx]
  40b218:	out    0x8e,al
  40b21a:	outs   dx,DWORD PTR ds:[esi]
  40b21b:	std    
  40b21c:	cmp    dl,ch
  40b21e:	add    al,BYTE PTR [ebx+0x2]
  40b221:	mov    ds:0xaec99566,eax
  40b226:	or     ebp,esp
  40b228:	add    BYTE PTR [edx+0x63],0x1e
  40b22c:	mov    bl,0xae
  40b22e:	js     0x40b26c
  40b230:	jo     0x40b28f
  40b232:	fstp   st(2)
  40b234:	in     eax,0xb1
  40b236:	jbe    0x40b21e
  40b238:	or     al,0xa0
  40b23a:	fcmovnb st,st(3)
  40b23c:	mov    ds:0x6f5d137d,eax
  40b241:	sbb    al,0x4d
  40b243:	shr    BYTE PTR [ecx*4+0x1c6a0cbc],0x78
  40b24b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b24c:	or     al,0xaa
  40b24e:	dec    BYTE PTR [ecx+0x21c3bbb]
  40b254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b255:	pop    es
  40b256:	loop   0x40b216
  40b258:	hlt    
  40b259:	pop    ebp
  40b25a:	sub    eax,0xcdfd1b5d
  40b25f:	cwde   
  40b260:	(bad)  
  40b261:	loopne 0x40b222
  40b263:	mov    bl,0x39
  40b265:	pop    esp
  40b266:	adc    eax,DWORD PTR [ecx+0x57]
  40b269:	mov    edx,0x2978bae0
  40b26e:	(bad)  
  40b26f:	jb     0x40b252
  40b271:	loop   0x40b264
  40b273:	jns    0x40b268
  40b275:	jge    0x40b26c
  40b277:	add    DWORD PTR es:[ebp+0x69],ecx
  40b27b:	or     eax,0xd8777bef
  40b280:	stos   BYTE PTR es:[edi],al
  40b281:	mov    al,0x90
  40b283:	pop    ecx
  40b284:	mov    edi,DWORD PTR [ebx+0x6e84badf]
  40b28a:	mov    edi,0xbebe5f92
  40b28f:	add    cl,0x2e
  40b292:	or     dh,BYTE PTR [eax]
  40b294:	scas   eax,DWORD PTR es:[edi]
  40b295:	aad    0x94
  40b297:	cmp    eax,0xa4c029b1
  40b29c:	je     0x40b2b7
  40b29e:	or     ah,BYTE PTR [edi]
  40b2a0:	push   edx
  40b2a1:	inc    esi
  40b2a2:	pop    ebx
  40b2a3:	ins    BYTE PTR es:[edi],dx
  40b2a4:	cmp    ecx,DWORD PTR [ecx+0x3bdee4c3]
  40b2aa:	sbb    al,0xae
  40b2ac:	sub    ch,ch
  40b2ae:	int    0xf1
  40b2b0:	lods   eax,DWORD PTR ds:[esi]
  40b2b1:	inc    cx
  40b2b3:	les    eax,FWORD PTR [edx+ebx*4]
  40b2b6:	(bad)  
  40b2b7:	jmp    DWORD PTR [edx]
  40b2b9:	icebp  
  40b2ba:	mov    dh,0x56
  40b2bc:	retf   
  40b2bd:	test   al,0x94
  40b2bf:	cmc    
  40b2c0:	dec    esp
  40b2c1:	dec    ebp
  40b2c2:	dec    esi
  40b2c3:	or     dh,ah
  40b2c5:	ins    DWORD PTR es:[edi],dx
  40b2c6:	push   eax
  40b2c7:	or     eax,0x7d9c49f3
  40b2cc:	js     0x40b326
  40b2ce:	test   DWORD PTR [eax-0x723291d6],edx
  40b2d4:	xor    edi,DWORD PTR [eax+ebx*2+0x22fa6cc8]
  40b2db:	adc    BYTE PTR [esi-0x29],0x2e
  40b2df:	sbb    al,0xff
  40b2e1:	idiv   DWORD PTR [esp+esi*1]
  40b2e4:	ds mov eax,0xbe8c234e
  40b2ea:	add    dh,0xcc
  40b2ed:	jl     0x40b34e
  40b2ef:	fisub  DWORD PTR [ebp+0x689519b4]
  40b2f5:	(bad)  
  40b2f6:	mov    esi,0x90695a6a
  40b2fb:	out    dx,eax
  40b2fc:	jg     0x40b2b7
  40b2fe:	cmp    DWORD PTR [edx-0x37],ebp
  40b301:	pop    ds
  40b302:	inc    edx
  40b303:	lahf   
  40b304:	or     DWORD PTR [ebx+ebp*1-0x6d],esp
  40b308:	hlt    
  40b309:	jecxz  0x40b389
  40b30b:	jecxz  0x40b2e5
  40b30d:	adc    esi,DWORD PTR [edx-0x7a]
  40b310:	(bad)
  40b314:	jbe    0x40b311
  40b316:	imul   ebx,DWORD PTR [eax],0x4a34a069
  40b31c:	push   ecx
  40b31d:	stos   DWORD PTR es:[edi],eax
  40b31e:	retf   0xbf64
  40b321:	xlat   BYTE PTR ds:[ebx]
  40b322:	ja     0x40b34d
  40b324:	ss xchg edi,eax
  40b326:	stc    
  40b327:	and    eax,edx
  40b329:	(bad)  
  40b32a:	sbb    al,0xdd
  40b32c:	fisttp WORD PTR ds:0x45c8c140
  40b332:	ficomp DWORD PTR [edx-0x4a88c332]
  40b338:	in     al,dx
  40b339:	sbb    BYTE PTR [edx],0xcf
  40b33c:	xchg   edi,eax
  40b33d:	cmp    ecx,esp
  40b33f:	stos   DWORD PTR es:[edi],eax
  40b340:	stos   BYTE PTR es:[edi],al
  40b341:	mov    ch,ch
  40b343:	fdivr  DWORD PTR [ecx-0x6b3a50ce]
  40b349:	xchg   DWORD PTR [edi-0x22],edi
  40b34c:	lods   al,BYTE PTR ds:[esi]
  40b34d:	in     al,0x57
  40b34f:	pop    ebx
  40b350:	hlt    
  40b351:	fnstenv [ecx+edi*8+0x19]
  40b355:	fisub  WORD PTR [ebp-0x49f63e42]
  40b35b:	mov    al,ds:0x578ee615
  40b360:	inc    esi
  40b361:	mov    al,ds:0x8929f0e0
  40b366:	push   edi
  40b367:	push   DWORD PTR [esi]
  40b369:	adc    al,0x1a
  40b36b:	loop   0x40b381
  40b36d:	sbb    al,0xd1
  40b36f:	inc    edi
  40b370:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b371:	pop    eax
  40b372:	loopne 0x40b365
  40b374:	rol    ecx,1
  40b376:	and    eax,0x39a8c277
  40b37b:	popa   
  40b37c:	jp     0x40b349
  40b37e:	xor    eax,0xfe641f71
  40b383:	mov    ds:0x5face63d,al
  40b388:	pop    ebx
  40b389:	mov    ds,WORD PTR [ebp-0x73]
  40b38c:	mov    ah,0x1d
  40b38e:	out    0x98,al
  40b390:	idiv   DWORD PTR [edi]
  40b392:	pop    eax
  40b393:	test   BYTE PTR [ecx+0x1aafa78a],dh
  40b399:	adc    edi,DWORD PTR [ebx+ecx*1]
  40b39c:	fild   DWORD PTR [ebx-0x4de307c3]
  40b3a2:	xlat   BYTE PTR ds:[ebx]
  40b3a3:	ret    0x959e
  40b3a6:	pushf  
  40b3a7:	mov    ah,0x9a
  40b3a9:	add    eax,0xdff7a090
  40b3ae:	dec    edx
  40b3af:	fstp   st(0)
  40b3b1:	mov    bl,BYTE PTR [edx-0x2e9b5c62]
  40b3b7:	jae    0x40b3c2
  40b3b9:	xchg   edx,eax
  40b3ba:	xchg   DWORD PTR [esi-0x7f],ecx
  40b3bd:	retf   
  40b3be:	jbe    0x40b395
  40b3c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3c1:	push   edx
  40b3c2:	mov    ecx,DWORD PTR [edi+0x2a]
  40b3c5:	fwait
  40b3c6:	jb     0x40b414
  40b3c8:	adc    BYTE PTR [ebx+eax*4+0x3478353c],cl
  40b3cf:	xchg   ebx,eax
  40b3d0:	mov    esi,0x619aadd7
  40b3d5:	test   DWORD PTR [eax+ecx*4-0x5],eax
  40b3d9:	in     eax,dx
  40b3da:	push   0xffffff92
  40b3dc:	pop    ebp
  40b3dd:	imul   ecx,DWORD PTR [ecx+0x34],0xffffffcc
  40b3e1:	out    dx,al
  40b3e2:	jae    0x40b376
  40b3e4:	lods   al,BYTE PTR ds:[esi]
  40b3e5:	push   eax
  40b3e6:	ret    
  40b3e7:	fidiv  DWORD PTR [edi+edx*1]
  40b3ea:	js     0x40b3b6
  40b3ec:	retf   
  40b3ed:	push   edx
  40b3ee:	jno    0x40b397
  40b3f0:	and    DWORD PTR [ebp-0x5f],ecx
  40b3f3:	int    0xcf
  40b3f5:	push   ebp
  40b3f6:	shl    BYTE PTR [edx],1
  40b3f8:	cmp    dl,BYTE PTR [esi]
  40b3fa:	retf   0x7dec
  40b3fd:	jmp    0x73a5:0x56f0fdf0
  40b404:	sub    ah,BYTE PTR [esi-0x519a6826]
  40b40a:	sbb    cl,BYTE PTR [esi+esi*1]
  40b40d:	jne    0x40b39e
  40b40f:	imul   esi,DWORD PTR [ebx+eax*8-0x27439e60],0xffffffbe
  40b417:	ror    bl,1
  40b419:	jb     0x40b408
  40b41b:	enter  0xd874,0x8b
  40b41f:	loope  0x40b435
  40b421:	mov    WORD PTR [ebp+0x35ea4de4],fs
  40b427:	and    dh,0x3d
  40b42a:	rcr    BYTE PTR [edi+0x67],cl
  40b42d:	in     al,0xdf
  40b42f:	(bad)  
  40b430:	(bad)  
  40b431:	xchg   esi,eax
  40b432:	mov    bl,0x42
  40b434:	sbb    cl,dh
  40b436:	push   ebx
  40b437:	pop    ds
  40b438:	sub    eax,0x2a8afd8c
  40b43d:	adc    edx,ecx
  40b43f:	pop    DWORD PTR [edx-0x3b8c00c2]
  40b445:	or     al,BYTE PTR [ebp-0x1e]
  40b448:	jnp    0x40b468
  40b44a:	fbld   TBYTE PTR [edx+0x24]
  40b44d:	inc    eax
  40b44e:	enter  0xa226,0x2
  40b452:	and    eax,0xeac762bc
  40b457:	sub    al,BYTE PTR [esi-0x5a]
  40b45a:	pop    es
  40b45b:	out    dx,eax
  40b45c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b45d:	repnz cdq 
  40b45f:	pop    edi
  40b460:	mov    edx,0x638e227e
  40b465:	test   eax,0x4af9e981
  40b46a:	outs   dx,BYTE PTR ds:[esi]
  40b46b:	push   0x57
  40b46d:	cmp    eax,0xe2d20980
  40b472:	in     eax,dx
  40b473:	jl     0x40b4bd
  40b475:	pop    ebp
  40b476:	test   DWORD PTR [edx+0x65c05f64],ecx
  40b47c:	or     DWORD PTR [eax-0x785b76ba],edi
  40b482:	mov    ebx,0xd29517c5
  40b487:	aaa    
  40b488:	outs   dx,BYTE PTR ds:[esi]
  40b489:	pusha  
  40b48a:	mov    ch,BYTE PTR [esi-0x5c90512b]
  40b490:	in     al,dx
  40b491:	les    edi,FWORD PTR [ebp-0x57]
  40b494:	push   ebp
  40b495:	jne    0x40b495
  40b497:	sub    cl,BYTE PTR [esi]
  40b499:	loop   0x40b4fc
  40b49b:	push   esi
  40b49c:	cmp    ebp,DWORD PTR [esi-0x30]
  40b49f:	pusha  
  40b4a0:	dec    esp
  40b4a1:	or     al,0xd9
  40b4a3:	inc    ecx
  40b4a4:	sub    eax,0xaab2a56d
  40b4a9:	pop    ebx
  40b4aa:	cmp    esi,DWORD PTR [esi]
  40b4ac:	dec    ebp
  40b4ad:	fiadd  DWORD PTR [edx]
  40b4af:	mov    edx,0x64525561
  40b4b4:	test   DWORD PTR [esi+0x1a],0xcb99bf2c
  40b4bb:	idiv   BYTE PTR [ebx+0x693a362e]
  40b4c1:	inc    eax
  40b4c3:	sbb    ah,BYTE PTR [ebx-0x13]
  40b4c6:	jg     0x40b52c
  40b4c8:	dec    ecx
  40b4c9:	scas   eax,DWORD PTR es:[edi]
  40b4ca:	xor    al,BYTE PTR [ebx]
  40b4cc:	das    
  40b4cd:	pop    edi
  40b4ce:	fwait
  40b4cf:	call   DWORD PTR [eax+0x6314d2df]
  40b4d5:	ficom  WORD PTR [edi+ebx*1-0x64]
  40b4d9:	hlt    
  40b4da:	jnp    0x40b51e
  40b4dc:	retf   
  40b4dd:	in     eax,0x6f
  40b4df:	loopne 0x40b49a
  40b4e1:	jns    0x40b557
  40b4e3:	out    dx,eax
  40b4e4:	call   ecx
  40b4e6:	push   0xffffffd7
  40b4e8:	mov    esi,0x718604f2
  40b4ed:	clc    
  40b4ee:	jl     0x40b4b8
  40b4f0:	jmp    DWORD PTR [ecx-0x2db72e93]
  40b4f6:	fistp  WORD PTR [edx+0x3c121e9b]
  40b4fc:	add    BYTE PTR [esi-0x77c1852],dl
  40b502:	lss    esi,FWORD PTR [ebx-0x25]
  40b506:	jecxz  0x40b4e2
  40b508:	dec    edx
  40b509:	pop    ds
  40b50a:	jno    0x40b56a
  40b50c:	push   ebx
  40b50d:	push   edi
  40b50e:	pop    ss
  40b50f:	call   0x9e0f:0xab51806f
  40b516:	add    BYTE PTR [eax],ch
  40b518:	clc    
  40b519:	and    DWORD PTR gs:[edi+esi*4+0x6],edi
  40b51e:	(bad)  
  40b51f:	(bad)  [esi+0xa]
  40b522:	in     eax,0x1
  40b524:	in     eax,0x67
  40b526:	inc    esp
  40b527:	xor    BYTE PTR [esi-0x56],bl
  40b52a:	pop    edi
  40b52b:	aaa    
  40b52c:	push   ds
  40b52d:	sbb    BYTE PTR [esi-0x72],ah
  40b530:	pop    ds
  40b531:	loope  0x40b4cd
  40b533:	add    esi,DWORD PTR [ecx*4-0x77b6c224]
  40b53a:	inc    esi
  40b53b:	dec    ebp
  40b53c:	bnd jle 0x40b4c1
  40b53f:	or     al,0x2
  40b541:	pushf  
  40b542:	jnp    0x40b4fc
  40b544:	or     dl,cl
  40b546:	or     BYTE PTR [ebp+0x75],bl
  40b549:	mov    ebx,0x5dffd555
  40b54e:	stc    
  40b54f:	xor    bh,bh
  40b551:	(bad)  
  40b553:	add    eax,0x79df7ed1
  40b558:	repnz xchg ebp,eax
  40b55a:	mov    ebx,DWORD PTR [esi+0x754545f5]
  40b560:	push   ss
  40b561:	lds    esp,FWORD PTR [edx-0xc]
  40b564:	mov    ds:0xa6f52a23,al
  40b569:	popf   
  40b56a:	xchg   esp,eax
  40b56b:	jmp    0x40b59b
  40b56d:	cld    
  40b56e:	ja     0x40b589
  40b570:	xchg   edx,eax
  40b571:	iret   
  40b572:	jnp    0x40b596
  40b574:	xor    eax,0x4a639676
  40b579:	aaa    
  40b57a:	imul   edx,DWORD PTR [eax-0x7d296b3d],0x7b
  40b581:	stos   DWORD PTR es:[edi],eax
  40b582:	mov    BYTE PTR [edi],0xcd
  40b585:	dec    BYTE PTR [ecx+ebp*8-0x428dec2a]
  40b58c:	xchg   ecx,eax
  40b58d:	aad    0xf1
  40b58f:	(bad)  
  40b592:	icebp  
  40b593:	push   esi
  40b594:	xchg   esp,eax
  40b595:	(bad)  
  40b596:	out    dx,al
  40b597:	push   edx
  40b598:	repnz and ah,ch
  40b59b:	push   ecx
  40b59c:	push   esi
  40b59d:	jp     0x40b5cb
  40b59f:	je     0x40b60a
  40b5a1:	add    eax,0x4d778fff
  40b5a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5a7:	stos   BYTE PTR es:[edi],al
  40b5a8:	and    al,0x4e
  40b5aa:	retf   
  40b5ab:	lahf   
  40b5ac:	inc    ebx
  40b5ad:	sbb    BYTE PTR [eax+eiz*8],bh
  40b5b0:	je     0x40b5dc
  40b5b2:	outs   dx,DWORD PTR ds:[esi]
  40b5b3:	mov    dh,0xc3
  40b5b5:	pop    esp
  40b5b6:	dec    edi
  40b5b7:	xchg   ecx,eax
  40b5b8:	pop    edi
  40b5b9:	xor    BYTE PTR [ebp-0x35],0x6a
  40b5bd:	mov    ?,WORD PTR [ecx-0x2134a2af]
  40b5c3:	lahf   
  40b5c4:	iret   
  40b5c5:	repnz mov ah,ah
  40b5c8:	ficomp DWORD PTR [esi+0x5b]
  40b5cb:	inc    ebp
  40b5cc:	mov    ebx,0x3cbd0038
  40b5d1:	mov    cl,0xfb
  40b5d3:	sar    DWORD PTR [ebx+0x74],1
  40b5d6:	xor    DWORD PTR [ecx-0x1b3dfae6],0x56a1b30d
  40b5e0:	mov    BYTE PTR [ebx],0x5a
  40b5e3:	xchg   esp,eax
  40b5e4:	xchg   esp,eax
  40b5e5:	dec    eax
  40b5e6:	mov    ah,0x2
  40b5e8:	pusha  
  40b5e9:	adc    al,0xa3
  40b5eb:	mov    eax,0x9e4683ba
  40b5f0:	dec    eax
  40b5f1:	sbb    esp,0x28e29a69
  40b5f7:	inc    eax
  40b5f8:	out    0x25,eax
  40b5fa:	or     eax,0x70b57fdd
  40b5ff:	leave  
  40b600:	or     ecx,DWORD PTR [esi-0x5e244e66]
  40b606:	mov    eax,ds:0x78265fc3
  40b60b:	pop    esp
  40b60c:	mov    DWORD PTR [esi-0x33],ecx
  40b60f:	or     al,BYTE PTR [eax]
  40b611:	xchg   ebx,eax
  40b612:	(bad)  
  40b613:	enter  0x6baa,0x57
  40b617:	adc    bl,BYTE PTR [ebx]
  40b619:	pusha  
  40b61a:	dec    edi
  40b61b:	or     eax,0x3c5165ac
  40b620:	dec    edi
  40b621:	sub    BYTE PTR [ebx],dh
  40b623:	bound  ebp,QWORD PTR [ebx-0x59]
  40b626:	fsubr  QWORD PTR [ebx-0x41c2c723]
  40b62c:	retf   
  40b62d:	dec    edi
  40b62e:	in     al,dx
  40b62f:	(bad)  
  40b630:	cmp    dh,BYTE PTR [eax+esi*8+0x4a977a41]
  40b637:	xor    eax,0xc831389b
  40b63c:	mov    bh,0xae
  40b63e:	out    0xa4,eax
  40b640:	jnp    0x40b6b0
  40b642:	outs   dx,DWORD PTR ds:[esi]
  40b643:	xor    cl,BYTE PTR [ebx-0x62]
  40b646:	mov    al,ds:0x3bcb8345
  40b64b:	mov    ebp,ecx
  40b64d:	add    DWORD PTR [edx+0x17],ecx
  40b650:	jns    0x40b6a9
  40b652:	jb     0x40b6ad
  40b654:	or     bl,BYTE PTR [esi-0x19]
  40b657:	jle    0x40b699
  40b659:	push   ecx
  40b65a:	mov    al,ds:0xafda4f3
  40b65f:	out    dx,al
  40b660:	lahf   
  40b661:	mov    ch,0xe2
  40b663:	pop    ebp
  40b664:	test   eax,0x9bdfb6fc
  40b669:	(bad)  
  40b66a:	das    
  40b66b:	hlt    
  40b66c:	push   0xd64bbc01
  40b671:	in     al,dx
  40b672:	cmp    BYTE PTR [edi],dh
  40b674:	adc    al,0x14
  40b676:	dec    esp
  40b677:	xchg   edx,eax
  40b678:	pop    es
  40b679:	push   edi
  40b67a:	(bad)  
  40b67c:	cmp    ebx,DWORD PTR [ebx]
  40b67e:	or     ebp,ecx
  40b680:	jl     0x40b686
  40b682:	jne    0x40b61b
  40b684:	cmp    bh,ch
  40b686:	loop   0x40b6ea
  40b688:	or     BYTE PTR [ebx+0x5b5a8df6],0xec
  40b68f:	sbb    DWORD PTR [esi+0x12],esi
  40b692:	push   ecx
  40b693:	cli    
  40b694:	bound  edi,QWORD PTR [ebx-0x68]
  40b697:	push   esi
  40b699:	stos   DWORD PTR es:[edi],eax
  40b69a:	ja     0x40b704
  40b69c:	push   0x32
  40b69e:	and    al,0x6a
  40b6a0:	lea    ecx,[edi]
  40b6a2:	lds    esp,FWORD PTR [eax-0x28c52d31]
  40b6a8:	mov    ecx,DWORD PTR [ecx*2-0x43a5de8d]
  40b6af:	mov    dl,0xa1
  40b6b1:	je     0x40b668
  40b6b3:	enter  0xee6b,0xef
  40b6b7:	pop    es
  40b6b8:	mov    ch,0x8f
  40b6ba:	cmp    DWORD PTR [ecx],0xf29ea6f
  40b6c0:	outs   dx,DWORD PTR ds:[esi]
  40b6c1:	nop
  40b6c2:	xor    bl,BYTE PTR [esi+esi*1-0xd]
  40b6c6:	cmp    dl,bl
  40b6c8:	xor    bl,bh
  40b6ca:	mov    DWORD PTR [ebx+0x3c31e59a],esp
  40b6d0:	pop    ebp
  40b6d1:	clc    
  40b6d2:	or     eax,0xfc90cbb5
  40b6d7:	sbb    DWORD PTR gs:[ecx-0x603a4d96],0xffffffc3
  40b6df:	mov    edx,0x8d627dcb
  40b6e4:	mov    bh,0x26
  40b6e6:	dec    edi
  40b6e7:	inc    edi
  40b6e8:	arpl   WORD PTR [esp+eax*1+0x47],bx
  40b6ec:	cmp    al,0xe1
  40b6ee:	sub    eax,0x8ab4c23e
  40b6f3:	ror    eax,cl
  40b6f5:	xor    cl,BYTE PTR [edi-0x7f49f4c5]
  40b6fb:	push   ds
  40b6fc:	popa   
  40b6fd:	pop    es
  40b6fe:	in     al,0x7a
  40b700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b701:	jo     0x40b6bc
  40b703:	jle    0x40b70a
  40b705:	jnp    0x40b6da
  40b707:	inc    esi
  40b708:	sub    BYTE PTR [edx-0x370d6d9],cl
  40b70e:	sub    BYTE PTR [eax+0x56],ch
  40b711:	mov    BYTE PTR [edx+0x45],ch
  40b714:	add    eax,0x3f5dae6e
  40b719:	fidivr WORD PTR [eax+0xeb8df5]
  40b71f:	lods   al,BYTE PTR ds:[esi]
  40b720:	cdq    
  40b721:	cmp    ah,cl
  40b723:	icebp  
  40b724:	add    al,BYTE PTR [ecx]
  40b726:	test   al,dl
  40b728:	ds repnz faddp st(1),st
  40b72c:	add    ebp,DWORD PTR [ecx+0x37]
  40b72f:	adc    bl,bh
  40b731:	mov    BYTE PTR [esi-0x2c],ch
  40b734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b735:	adc    BYTE PTR [esi-0x6f],ch
  40b738:	jmp    0x40b7a7
  40b73a:	xchg   DWORD PTR [edi],ebx
  40b73c:	jecxz  0x40b6c4
  40b73e:	test   dl,bh
  40b740:	sbb    BYTE PTR [ecx-0x48],bh
  40b743:	cmp    eax,esi
  40b745:	mov    ebx,0xb49e3162
  40b74a:	rcr    BYTE PTR [eax-0x3d],1
  40b74d:	in     eax,0x74
  40b74f:	mov    eax,0xfe4b0975
  40b754:	es mov dh,0x9f
  40b757:	dec    ecx
  40b758:	push   es
  40b759:	sbb    BYTE PTR [ecx-0x5030e4fb],0x8a
  40b760:	in     eax,0x82
  40b762:	(bad)  
  40b763:	pop    edx
  40b764:	cdq    
  40b765:	pop    ss
  40b766:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40b768:	adc    eax,0x903587f
  40b76d:	aaa    
  40b76e:	idiv   BYTE PTR [ecx+0x22]
  40b771:	and    BYTE PTR [esi-0x3b60b0e1],0x54
  40b778:	mul    BYTE PTR ds:0xf06f29ec
  40b77e:	xchg   ecx,eax
  40b77f:	lahf   
  40b780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b781:	add    DWORD PTR ds:0xf0562534,edi
  40b787:	ja     0x40b7ee
  40b789:	lea    ebp,[ebp+0x175bb468]
  40b78f:	mov    eax,0xa9b71e08
  40b794:	fnstsw WORD PTR [eax+ebp*8-0xe]
  40b798:	push   ecx
  40b799:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b79a:	mov    ebx,0xe467ddaf
  40b79f:	sub    edx,DWORD PTR [ebx+0x2d]
  40b7a2:	cwde   
  40b7a3:	sub    esi,ebp
  40b7a5:	in     eax,0x32
  40b7a7:	stc    
  40b7a8:	aas    
  40b7a9:	mov    bl,0xf5
  40b7ab:	loop   0x40b76b
  40b7ad:	push   ebx
  40b7ae:	(bad)  
  40b7af:	mov    al,0x2d
  40b7b1:	mov    ebx,0x67218b42
  40b7b6:	sub    esp,DWORD PTR [esi+eiz*2-0x70892039]
  40b7bd:	out    0xb1,eax
  40b7bf:	dec    ecx
  40b7c0:	ja     0x40b7b1
  40b7c2:	xchg   ecx,eax
  40b7c3:	xor    ecx,esi
  40b7c5:	imul   esi,edx,0xffffffa9
  40b7c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7c9:	push   ebx
  40b7ca:	jge    0x40b7bf
  40b7cc:	mov    ebx,0x37249742
  40b7d1:	mov    bl,0x8
  40b7d3:	cwde   
  40b7d4:	pop    edi
  40b7d5:	loope  0x40b75e
  40b7d7:	pusha  
  40b7d8:	xchg   edx,eax
  40b7d9:	std    
  40b7da:	in     al,0x7a
  40b7dc:	clc    
  40b7dd:	ror    esi,cl
  40b7df:	(bad)  
  40b7e0:	pop    esp
  40b7e1:	arpl   WORD PTR [ebx-0x50],dx
  40b7e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7e5:	xor    edi,ecx
  40b7e7:	xchg   esp,eax
  40b7e8:	ins    BYTE PTR es:[edi],dx
  40b7e9:	sbb    ch,BYTE PTR [edi-0x3110bbc0]
  40b7ef:	inc    edi
  40b7f0:	popa   
  40b7f1:	fwait
  40b7f2:	cmp    DWORD PTR [edx+0x39],eax
  40b7f5:	pop    esp
  40b7f6:	pop    esp
  40b7f7:	jbe    0x40b7c0
  40b7f9:	mov    ebx,0xa095eb6e
  40b7fe:	cli    
  40b7ff:	cmp    ebp,edx
  40b801:	push   esi
  40b802:	sub    DWORD PTR [ebp-0xed9bd6a],esp
  40b808:	mov    al,0x3
  40b80a:	cdq    
  40b80b:	add    BYTE PTR [eax+0x5e],al
  40b80e:	add    BYTE PTR [edi],cl
  40b810:	lea    edx,[edi+edi*4+0x4f63e61c]
  40b817:	in     al,0x8c
  40b819:	mov    esi,0x5b7d206
  40b81e:	sbb    BYTE PTR [eax],ch
  40b820:	pop    edx
  40b821:	(bad)  
  40b822:	xor    al,0x84
  40b824:	jmp    0x4ab2:0xdd7688f7
  40b82b:	cmp    al,0xb5
  40b82d:	mov    ds:0xf92a8bbd,eax
  40b832:	sub    eax,0xcc7f318a
  40b837:	xchg   DWORD PTR [esi-0x3d],edi
  40b83a:	mov    bh,0x1c
  40b83c:	cmp    al,0xb
  40b83e:	pop    ds
  40b83f:	sub    eax,0xc9e83f98
  40b844:	cdq    
  40b845:	inc    eax
  40b846:	push   edi
  40b847:	scas   al,BYTE PTR es:[edi]
  40b848:	loop   0x40b8c9
  40b84a:	xor    eax,DWORD PTR [ebx-0x2545d0c5]
  40b850:	push   edi
  40b851:	xor    BYTE PTR [edi+0x129566f6],0xab
  40b858:	or     eax,0x9a729e71
  40b85d:	inc    eax
  40b85e:	mov    dl,0x7f
  40b860:	mov    ds:0x48fd55df,al
  40b865:	sti    
  40b866:	xor    al,0x4a
  40b868:	jmp    0x1194:0x845f4a3a
  40b86f:	dec    ecx
  40b870:	outs   dx,DWORD PTR ds:[esi]
  40b871:	popf   
  40b872:	popf   
  40b873:	sub    ah,bl
  40b875:	mov    ebp,0xf4e9873b
  40b87a:	xor    eax,0x4c60a4f6
  40b87f:	test   BYTE PTR cs:[ebx],dh
  40b882:	xor    DWORD PTR [esi],ebx
  40b884:	xor    bl,ch
  40b886:	sub    al,0xd1
  40b888:	imul   ebp,DWORD PTR [edx-0x62],0xffffffcb
  40b88c:	mov    bh,0x5a
  40b88e:	mov    DWORD PTR [ebp-0x7262157b],edi
  40b894:	std    
  40b895:	mov    ecx,0xa34d2c5e
  40b89a:	(bad)  
  40b89b:	mov    ds:0x908c8066,al
  40b8a0:	repz in al,0xe
  40b8a3:	mov    ds:0xebefca5,eax
  40b8a8:	adc    al,0x63
  40b8aa:	cs jns 0x40b89d
  40b8ad:	mov    esp,0xde50ea3e
  40b8b2:	adc    BYTE PTR [esi],cl
  40b8b4:	stos   DWORD PTR es:[edi],eax
  40b8b5:	jae    0x40b8bf
  40b8b7:	fsub   st,st(7)
  40b8b9:	push   cs
  40b8ba:	cs pop edi
  40b8bc:	int3   
  40b8bd:	dec    ebp
  40b8be:	mov    edi,0xc41c205a
  40b8c3:	or     DWORD PTR [ebx],0x1d
  40b8c6:	pop    ecx
  40b8c7:	jnp    0x40b85c
  40b8c9:	out    0x4d,al
  40b8cb:	pop    edi
  40b8cc:	dec    eax
  40b8cd:	out    dx,al
  40b8ce:	iret   
  40b8cf:	mov    ecx,0xb2071c02
  40b8d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8d5:	daa    
  40b8d6:	sbb    eax,0x5196ba17
  40b8db:	xchg   esi,eax
  40b8dc:	and    eax,0xc2bb38a8
  40b8e1:	(bad)  
  40b8e2:	mul    BYTE PTR [edx-0x37d912f7]
  40b8e8:	pusha  
  40b8e9:	jmp    0x40b88c
  40b8eb:	fistp  DWORD PTR [edx-0x3ebbfb0]
  40b8f1:	ror    BYTE PTR [edx+0x7df84d69],1
  40b8f7:	mov    al,ds:0x60188a85
  40b8fc:	gs cmp ecx,esi
  40b8ff:	jge    0x40b89c
  40b901:	js     0x40b8c2
  40b903:	sbb    DWORD PTR [edi],ebx
  40b905:	lds    eax,FWORD PTR [ebx+eiz*2]
  40b908:	nop
  40b909:	shl    edx,1
  40b90b:	dec    ebx
  40b90c:	sub    BYTE PTR [edi+0x63],ch
  40b90f:	add    esp,ecx
  40b911:	adc    esp,DWORD PTR [esi-0x5b]
  40b914:	add    eax,0x2fc313ab
  40b919:	data16 mov al,0xfa
  40b91c:	leave  
  40b91d:	jp     0x40b8d7
  40b91f:	dec    edx
  40b920:	inc    ecx
  40b921:	push   ebx
  40b922:	mov    eax,0xe6caa6a7
  40b927:	mov    bl,0xeb
  40b929:	ret    0xcc8a
  40b92c:	sub    edi,DWORD PTR [ebx+0x3d]
  40b92f:	push   ss
  40b930:	mov    ds:0x5cbbee1,eax
  40b935:	cld    
  40b936:	aam    0xbd
  40b938:	jns    0x40b913
  40b93a:	outs   dx,DWORD PTR ds:[esi]
  40b93b:	test   al,0x61
  40b93d:	xchg   esp,eax
  40b93e:	and    al,0x55
  40b940:	clc    
  40b941:	xchg   ebx,eax
  40b942:	mov    ds:0xda3d61eb,al
  40b947:	jge    0x40b94c
  40b949:	das    
  40b94a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b94b:	in     eax,0xa1
  40b94d:	call   0x69e50aeb
  40b952:	xlat   BYTE PTR ds:[ebx]
  40b953:	or     eax,eax
  40b955:	ficom  DWORD PTR [edi+0x8]
  40b958:	mov    cl,0x59
  40b95a:	sbb    BYTE PTR [edx-0x56],al
  40b95d:	mov    BYTE PTR [esi],0xac
  40b960:	sub    DWORD PTR [ebp+0xa323b81],esp
  40b966:	adc    al,0x24
  40b968:	leave  
  40b969:	imul   ebp,DWORD PTR [ecx],0x5967d808
  40b96f:	adc    al,0x37
  40b971:	cmp    eax,0x90c9012b
  40b976:	jnp    0x40b950
  40b978:	loope  0x40b911
  40b97a:	fisubr WORD PTR [edx]
  40b97c:	vsqrtsd xmm7,xmm3,xmm2
  40b980:	sub    ecx,DWORD PTR [esi+0x485c5a08]
  40b986:	cmp    al,0xe4
  40b988:	add    DWORD PTR [edi+0x898ff64],0x6a18ae2c
  40b992:	mov    cl,0x94
  40b994:	enter  0x64e8,0x47
  40b998:	mov    ebp,0x26d051c1
  40b99d:	cld    
  40b99e:	repnz stos BYTE PTR es:[edi],al
  40b9a0:	scas   eax,DWORD PTR es:[edi]
  40b9a1:	mov    esi,0x359f28f4
  40b9a6:	dec    ebp
  40b9a7:	popa   
  40b9a8:	adc    eax,0xf4adae27
  40b9ad:	pop    ds
  40b9ae:	loop   0x40ba2d
  40b9b0:	lods   eax,DWORD PTR ds:[esi]
  40b9b1:	xor    edi,DWORD PTR [ecx-0x6c]
  40b9b4:	bound  eax,QWORD PTR [ebp-0x3289eb49]
  40b9ba:	popf   
  40b9bb:	stos   DWORD PTR es:[edi],eax
  40b9bc:	and    DWORD PTR [ecx],esi
  40b9be:	outs   dx,BYTE PTR ds:[esi]
  40b9bf:	jmp    0x40b98f
  40b9c1:	push   ebx
  40b9c3:	inc    edx
  40b9c4:	xchg   esp,eax
  40b9c5:	pop    esp
  40b9c6:	scas   eax,DWORD PTR es:[edi]
  40b9c7:	imul   ebx,DWORD PTR [ebx],0xffe3cd8
  40b9cd:	sbb    al,0x1a
  40b9cf:	inc    esi
  40b9d0:	fiadd  WORD PTR [edi+eiz*4]
  40b9d3:	ins    BYTE PTR es:[edi],dx
  40b9d4:	jmp    0xa1b689b6
  40b9d9:	mov    bl,0x2d
  40b9db:	adc    bl,dl
  40b9dd:	iret   
  40b9de:	jb     0x40b9b8
  40b9e0:	popa   
  40b9e1:	and    DWORD PTR [ebx-0x1fd50ed2],edx
  40b9e7:	fwait
  40b9e8:	aaa    
  40b9e9:	fcomp  QWORD PTR [ecx+ebx*4+0x5c0c0f07]
  40b9f0:	adc    DWORD PTR [ebx],esi
  40b9f2:	lahf   
  40b9f3:	loop   0x40b9c0
  40b9f5:	adc    al,0x64
  40b9f7:	mov    eax,0x827c7045
  40b9fc:	popa   
  40b9fd:	mov    bl,BYTE PTR [ecx]
  40b9ff:	(bad)  
  40ba00:	mov    ecx,0xa6d88fe3
  40ba05:	scas   al,BYTE PTR es:[edi]
  40ba06:	pop    ecx
  40ba07:	jo     0x40b9c7
  40ba09:	cs in  al,dx
  40ba0b:	inc    esi
  40ba0c:	jns    0x40ba22
  40ba0e:	int    0x74
  40ba10:	jle    0x40ba8c
  40ba12:	xor    eax,0x2c961315
  40ba17:	xor    DWORD PTR [edi-0xe],edi
  40ba1a:	xchg   ebp,eax
  40ba1b:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40ba1d:	push   esp
  40ba1e:	cmp    DWORD PTR [ebp+0x78],eax
  40ba21:	and    al,0x93
  40ba23:	and    al,0x76
  40ba25:	(bad)  
  40ba26:	out    0xaf,eax
  40ba28:	mov    ch,0x76
  40ba2a:	ret    
  40ba2b:	std    
  40ba2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba2d:	or     cl,dh
  40ba2f:	adc    bh,BYTE PTR [edi+0x18]
  40ba32:	sub    DWORD PTR [ecx+0x550bd45],ebp
  40ba38:	dec    esp
  40ba39:	idiv   DWORD PTR [edx]
  40ba3b:	xor    DWORD PTR [eax-0x5212b101],ebx
  40ba41:	bound  edi,QWORD PTR [edx]
  40ba43:	pop    ebp
  40ba44:	lods   eax,DWORD PTR ds:[esi]
  40ba45:	neg    ecx
  40ba47:	mov    fs,WORD PTR [edx]
  40ba49:	loop   0x40ba92
  40ba4b:	cli    
  40ba4c:	or     ecx,ebx
  40ba4e:	ins    BYTE PTR es:[edi],dx
  40ba4f:	icebp  
  40ba50:	sub    BYTE PTR [ebx],ch
  40ba52:	adc    ah,BYTE PTR [ebx+0x2a]
  40ba55:	jecxz  0x40ba74
  40ba57:	mov    dl,0x56
  40ba59:	icebp  
  40ba5a:	ror    DWORD PTR [eax+0x11],0xa
  40ba5e:	int    0x1b
  40ba60:	pop    esi
  40ba61:	in     eax,0x70
  40ba63:	jb     0x40bace
  40ba65:	push   eax
  40ba66:	pop    ebp
  40ba67:	push   es
  40ba68:	je     0x40ba1a
  40ba6a:	and    DWORD PTR [ecx],edx
  40ba6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba6d:	or     BYTE PTR [ecx+0x7b],ch
  40ba70:	test   DWORD PTR [esp],esp
  40ba73:	and    al,0x30
  40ba75:	mov    DWORD PTR [esi],edx
  40ba77:	jnp    0x40bac3
  40ba79:	adc    eax,0x49cfafc2
  40ba7e:	pop    esp
  40ba7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba80:	call   0x683e:0x22abb77a
  40ba87:	pusha  
  40ba88:	rcr    dh,1
  40ba8a:	mov    ecx,?
  40ba8c:	dec    ebx
  40ba8d:	or     dl,bh
  40ba8f:	jnp    0x40bb03
  40ba91:	nop
  40ba92:	std    
  40ba93:	stos   DWORD PTR es:[edi],eax
  40ba94:	push   ecx
  40ba95:	and    edx,DWORD PTR [ecx+esi*2+0x1]
  40ba99:	inc    ebp
  40ba9a:	jbe    0x40baf8
  40ba9c:	adc    BYTE PTR [ecx-0x29],ch
  40ba9f:	xor    dh,bh
  40baa1:	ins    WORD PTR es:[edi],dx
  40baa3:	aad    0x24
  40baa5:	out    0x82,eax
  40baa7:	push   ebx
  40baa8:	xchg   esp,eax
  40baa9:	sar    DWORD PTR [esi-0x1b813d21],1
  40baaf:	outs   dx,DWORD PTR ds:[esi]
  40bab0:	pop    edi
  40bab1:	jno    0x40ba83
  40bab3:	mov    al,0x4c
  40bab5:	(bad)  [edx]
  40bab7:	sub    al,0x7a
  40bab9:	fld    st(7)
  40babb:	ficom  WORD PTR [ebx+0x2d]
  40babe:	ds jle 0x40ba62
  40bac1:	(bad)  
  40bac2:	cmp    al,0xb3
  40bac4:	jne    0x40ba63
  40bac6:	or     ebp,edx
  40bac8:	inc    ebp
  40bac9:	daa    
  40baca:	stc    
  40bacb:	jnp    0x40ba80
  40bacd:	retf   0x504e
  40bad0:	ror    BYTE PTR [eax-0xf39bb32],cl
  40bad6:	stos   BYTE PTR es:[edi],al
  40bad7:	aad    0x46
  40bad9:	out    dx,eax
  40bada:	loop   0x40baaf
  40badc:	leave  
  40badd:	aas    
  40bade:	out    0x9d,al
  40bae0:	pop    esi
  40bae1:	cs push esi
  40bae3:	push   ds
  40bae4:	cs (bad) 
  40bae6:	cmc    
  40bae7:	sbb    al,0x31
  40bae9:	sbb    eax,0x4242ecb6
  40baee:	xchg   ebx,eax
  40baef:	add    al,0x41
  40baf2:	aad    0x34
  40baf4:	add    ecx,esi
  40baf6:	xor    dl,bl
  40baf8:	jecxz  0x40baf5
  40bafa:	stos   BYTE PTR es:[edi],al
  40bafb:	push   ss
  40bafc:	cmp    ch,BYTE PTR [ebx+edx*2-0x5d]
  40bb00:	xchg   dl,ch
  40bb02:	ss icebp 
  40bb04:	add    edx,edx
  40bb06:	cmp    esi,0x3f
  40bb09:	(bad)  [ecx+0x57]
  40bb0c:	lahf   
  40bb0d:	mov    dl,0xe0
  40bb0f:	(bad)  
  40bb10:	xchg   edi,eax
  40bb11:	ror    esi,0x1a
  40bb14:	mov    edi,edi
  40bb16:	or     bh,BYTE PTR [ebx+0x1c]
  40bb19:	(bad)  
  40bb1a:	dec    edx
  40bb1b:	inc    ebx
  40bb1c:	pop    edi
  40bb1d:	jl     0x40baf2
  40bb1f:	add    al,BYTE PTR [eax+0x52fe86cb]
  40bb25:	jge    0x40bb87
  40bb27:	add    al,0x93
  40bb29:	scas   al,BYTE PTR es:[edi]
  40bb2a:	inc    edi
  40bb2b:	lods   eax,DWORD PTR ds:[esi]
  40bb2c:	jns    0x40bb97
  40bb2e:	fdiv   st(7),st
  40bb30:	bnd js 0x40baf7
  40bb33:	adc    DWORD PTR [ebx+0x2ad93b80],edi
  40bb39:	xchg   edx,eax
  40bb3a:	data16 loope 0x40bb24
  40bb3d:	rol    DWORD PTR [edx+0x260569bc],cl
  40bb43:	scas   al,BYTE PTR es:[edi]
  40bb44:	cmp    al,0x4f
  40bb46:	pop    es
  40bb47:	out    0x4b,al
  40bb49:	leave  
  40bb4a:	sub    al,0xff
  40bb4c:	dec    ecx
  40bb4d:	jmp    0x40bba3
  40bb4f:	adc    ah,BYTE PTR [edi-0x9]
  40bb52:	sub    bh,bl
  40bb54:	adc    ch,BYTE PTR [edx+0x34]
  40bb57:	(bad)  
  40bb58:	frstor [ebx+0x3fca088b]
  40bb5e:	xchg   bl,ah
  40bb60:	cmp    al,BYTE PTR [ecx-0x1a0bfafa]
  40bb66:	mov    cl,0xfa
  40bb68:	inc    ecx
  40bb69:	fiadd  WORD PTR [eax]
  40bb6b:	dec    esp
  40bb6c:	cwde   
  40bb6d:	jg     0x40bbc1
  40bb6f:	sub    eax,0x731271e
  40bb74:	outs   dx,BYTE PTR ds:[esi]
  40bb75:	dec    ebx
  40bb76:	and    esi,ebx
  40bb78:	and    BYTE PTR [edx+0x793944e5],al
  40bb7e:	(bad)  
  40bb80:	mov    edi,0x80980d7f
  40bb85:	add    bh,BYTE PTR [edx+0x11f03c76]
  40bb8b:	cmp    BYTE PTR [ebp+0x26528e0d],cl
  40bb91:	mov    ah,bh
  40bb93:	jno    0x40bb71
  40bb95:	enter  0xf643,0x51
  40bb99:	xchg   edx,eax
  40bb9a:	push   0x96d24aba
  40bb9f:	(bad)  
  40bba0:	cmp    al,0x51
  40bba2:	sar    dl,0x9e
  40bba5:	ffree  st(5)
  40bba7:	fisub  WORD PTR [esp+edi*1+0x41]
  40bbab:	inc    ebx
  40bbac:	(bad)  
  40bbad:	jle    0x40bb89
  40bbaf:	pop    ds
  40bbb0:	inc    ebp
  40bbb1:	in     al,0xff
  40bbb3:	xchg   ebp,eax
  40bbb4:	ret    
  40bbb5:	add    cl,BYTE PTR [edi+0x4b49cc29]
  40bbbb:	inc    edi
  40bbbc:	in     eax,dx
  40bbbd:	outs   dx,DWORD PTR ds:[esi]
  40bbbe:	int    0xf6
  40bbc0:	addr16 mov ds:0x7e1b,al
  40bbc4:	mov    eax,ds:0x4a0b353
  40bbc9:	jecxz  0x40bbfc
  40bbcb:	jbe    0x40bbfa
  40bbcd:	test   al,0xa3
  40bbcf:	cmp    eax,DWORD PTR [ebx+esi*8]
  40bbd2:	mov    esi,0xc1966864
  40bbd7:	cmp    eax,0xce20eae3
  40bbdc:	ja     0x40bbfd
  40bbde:	scas   al,BYTE PTR es:[edi]
  40bbdf:	or     ecx,DWORD PTR [eax-0x4c]
  40bbe2:	addr16 jnp 0x40bbfb
  40bbe5:	gs (bad) 
  40bbe7:	fisub  DWORD PTR [ebp+0x2aaa1d94]
  40bbed:	ret    
  40bbee:	and    eax,0xe955b0ad
  40bbf3:	les    esp,FWORD PTR [edx-0x78]
  40bbf6:	mov    edx,0x7c12ff05
  40bbfb:	mov    bl,0x49
  40bbfd:	in     al,dx
  40bbfe:	pop    eax
  40bbff:	add    BYTE PTR [ecx],0x75
  40bc02:	jmp    0x53cb:0xf342c11a
  40bc09:	pop    eax
  40bc0a:	adc    dl,cl
  40bc0c:	in     al,dx
  40bc0d:	xchg   edx,eax
  40bc0e:	pusha  
  40bc0f:	test   al,0xdb
  40bc11:	mov    ds:0xf7529fc,al
  40bc16:	cld    
  40bc17:	mov    DWORD PTR [edi+0x3f],eax
  40bc1a:	lods   al,BYTE PTR ds:[esi]
  40bc1b:	pop    esp
  40bc1c:	mov    eax,ds:0xae74b773
  40bc21:	dec    edx
  40bc22:	lahf   
  40bc23:	mov    ds:0xbf1b035,eax
  40bc28:	dec    eax
  40bc29:	cdq    
  40bc2a:	inc    ebx
  40bc2b:	mov    ebp,0xc61f5085
  40bc30:	xlat   BYTE PTR ds:[ebx]
  40bc31:	sbb    edi,0xffffffdc
  40bc34:	adc    al,0x16
  40bc36:	inc    esp
  40bc37:	clc    
  40bc38:	jp     0x40bbcf
  40bc3a:	adc    eax,0x2b2ed64d
  40bc3f:	out    dx,eax
  40bc40:	sbb    ah,BYTE PTR [ebx-0x75]
  40bc43:	dec    ecx
  40bc44:	pop    ebp
  40bc45:	push   edx
  40bc46:	or     DWORD PTR [bx+di+0x8],0x3e8cf35
  40bc4e:	pop    edi
  40bc4f:	(bad)  
  40bc50:	test   al,0x5d
  40bc52:	jns    0x40bc52
  40bc54:	sbb    DWORD PTR [ecx+ecx*8],edi
  40bc57:	test   eax,0xa5b8eddf
  40bc5c:	les    edx,FWORD PTR ds:0xb02fdd84
  40bc62:	out    dx,al
  40bc63:	jecxz  0x40bc64
  40bc65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc66:	mov    ebx,DWORD PTR [ebx+0x3fccc203]
  40bc6c:	int    0x66
  40bc6e:	sbb    eax,0xcb5746d0
  40bc73:	lea    ebp,[edx+eax*2]
  40bc76:	inc    eax
  40bc77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc78:	loop   0x40bc4f
  40bc7a:	mov    al,0xd7
  40bc7c:	and    eax,0x70ba2570
  40bc81:	daa    
  40bc82:	add    al,0x80
  40bc84:	and    eax,0x2a0628f0
  40bc89:	icebp  
  40bc8a:	imul   edi,DWORD PTR [edx+0x54f91ad3],0x72
  40bc91:	hlt    
  40bc92:	data16 into 
  40bc94:	shl    DWORD PTR [ebp+0x4e41dfc5],cl
  40bc9a:	xchg   BYTE PTR [eax+0x67],ah
  40bc9d:	div    BYTE PTR [edx+0x10]
  40bca0:	cmp    DWORD PTR [edx+0x5a863280],eax
  40bca6:	scas   eax,DWORD PTR es:[edi]
  40bca7:	loope  0x40bd07
  40bca9:	fiadd  WORD PTR [edi+0x68]
  40bcac:	leave  
  40bcad:	sahf   
  40bcae:	repnz nop
  40bcb0:	clc    
  40bcb1:	sbb    eax,DWORD PTR [ebp-0xadadd93]
  40bcb7:	xchg   dh,al
  40bcb9:	cdq    
  40bcba:	mov    ?,WORD PTR [ebp-0x27d641c9]
  40bcc0:	inc    edi
  40bcc1:	xchg   edx,eax
  40bcc2:	xor    BYTE PTR [eax-0xc],0x1c
  40bcc6:	test   eax,0xa5a23802
  40bccb:	pushf  
  40bccc:	push   ebx
  40bccd:	jbe    0x40bd15
  40bccf:	call   0xc492:0xab4b0cb3
  40bcd6:	out    0xfc,eax
  40bcd8:	jle    0x40bcc5
  40bcda:	cli    
  40bcdb:	xor    al,0x37
  40bcdd:	jmp    0x722b:0xb8134603
  40bce4:	cmc    
  40bce5:	ss xor ebx,edx
  40bce8:	sti    
  40bce9:	mov    dl,0x8b
  40bceb:	pop    edx
  40bcec:	and    DWORD PTR [esi-0xba27ad7],ebp
  40bcf2:	in     eax,0xd7
  40bcf4:	mov    ebp,?
  40bcf6:	lock repz lds esp,FWORD PTR [ebx-0x2f1f2c10]
  40bcfe:	repz dec ebx
  40bd00:	push   edx
  40bd01:	add    al,0x7d
  40bd03:	xor    eax,0xba23df4f
  40bd09:	push   es
  40bd0a:	test   BYTE PTR [edx],0x94
  40bd0d:	scas   al,BYTE PTR es:[edi]
  40bd0e:	int3   
  40bd0f:	(bad)  
  40bd10:	test   DWORD PTR [ebx-0x30123f96],0xdc57679a
  40bd1a:	(bad)
  40bd1e:	jmp    0xc78ea96a
  40bd23:	jb     0x40bccf
  40bd25:	das    
  40bd26:	mov    bl,0x7e
  40bd28:	push   0x3cca617c
  40bd2d:	ret    
  40bd2e:	add    al,0x54
  40bd30:	mov    ebp,DWORD PTR [ebx-0x33]
  40bd33:	pop    eax
  40bd34:	aam    0xa9
  40bd36:	ja     0x40bd05
  40bd38:	loopne 0x40bcc3
  40bd3a:	inc    edx
  40bd3c:	jge    0x40bcf8
  40bd3e:	cmp    DWORD PTR [edi+ebx*4+0x5b92c3e3],edx
  40bd45:	jle    0x40bd67
  40bd47:	jns    0x40bdab
  40bd49:	pop    ebx
  40bd4a:	aas    
  40bd4b:	pusha  
  40bd4c:	pop    ebx
  40bd4d:	add    eax,esp
  40bd4f:	adc    bh,dl
  40bd51:	dec    esi
  40bd52:	adc    ecx,ebx
  40bd54:	add    eax,0x150e032a
  40bd59:	(bad)  
  40bd5a:	jo     0x40bd86
  40bd5c:	outs   dx,BYTE PTR ds:[esi]
  40bd5d:	clc    
  40bd5e:	rcr    ah,cl
  40bd60:	mov    ds:0x6ef229d1,al
  40bd65:	imul   edx,DWORD PTR [eax],0x407ea526
  40bd6b:	daa    
  40bd6c:	test   eax,0x689f5604
  40bd71:	outs   dx,DWORD PTR ds:[esi]
  40bd72:	dec    esi
  40bd73:	mov    ch,0x3
  40bd75:	mov    ecx,es
  40bd77:	mov    esi,0x8fd4e805
  40bd7c:	(bad)  
  40bd7d:	sub    eax,0xd5ae5d31
  40bd82:	mov    eax,ds:0x9a11d732
  40bd87:	cdq    
  40bd88:	mov    edx,0x5f92a05e
  40bd8d:	push   ebx
  40bd8e:	fcmovbe st,st(5)
  40bd90:	jecxz  0x40bd91
  40bd92:	cld    
  40bd93:	push   edx
  40bd94:	dec    ecx
  40bd95:	fld    DWORD PTR [ebx+0xad5abc3]
  40bd9b:	xlat   BYTE PTR ds:[ebx]
  40bd9c:	jmp    0x850b:0x45278ed2
  40bda3:	xor    edx,DWORD PTR [eax-0x3660fcb1]
  40bda9:	xor    eax,0x671c7475
  40bdae:	icebp  
  40bdaf:	or     al,BYTE PTR [ebp-0x68]
  40bdb2:	cli    
  40bdb3:	imul   edx,eax,0xf1cb14f7
  40bdb9:	je     0x40bddb
  40bdbb:	xor    DWORD PTR [eax+0x25e5d2b0],ebp
  40bdc1:	fisub  DWORD PTR [esi-0x34685359]
  40bdc7:	xchg   ebx,eax
  40bdc8:	push   eax
  40bdc9:	jns    0x40bda5
  40bdcb:	inc    edx
  40bdcc:	sbb    dl,BYTE PTR ds:0xc9d859f8
  40bdd2:	cli    
  40bdd3:	call   0xe6d7af45
  40bdd8:	dec    ebx
  40bdd9:	xor    edi,DWORD PTR [eiz*2-0x45635c1d]
  40bde0:	push   edx
  40bde1:	pop    ebx
  40bde2:	add    eax,0x4ad1abf7
  40bde7:	icebp  
  40bde8:	and    ch,BYTE PTR [ecx-0x4d]
  40bdeb:	(bad)  
  40bdec:	retf   
  40bded:	mov    ?,WORD PTR [ebx]
  40bdef:	ins    BYTE PTR es:[edi],dx
  40bdf0:	popa   
  40bdf1:	inc    eax
  40bdf2:	cmp    dl,BYTE PTR [eax+0x19]
  40bdf5:	call   0x8c07:0xbe56fd07
  40bdfc:	xchg   esi,eax
  40bdfd:	lods   eax,DWORD PTR ds:[esi]
  40bdfe:	pop    eax
  40bdff:	cmp    al,0x18
  40be01:	and    dh,BYTE PTR [eax+esi*1+0x54caa14a]
  40be08:	xor    ch,dl
  40be0a:	rol    bl,1
  40be0c:	jecxz  0x40be47
  40be0e:	pop    ds
  40be0f:	xor    al,0x69
  40be11:	jmp    0x40bdde
  40be13:	retf   0x825
  40be16:	nop
  40be17:	daa    
  40be18:	sub    eax,0xaa860e43
  40be1d:	adc    esi,DWORD PTR [ebx-0x290eba3]
  40be23:	lods   eax,DWORD PTR ds:[esi]
  40be24:	retf   0x25e1
  40be27:	adc    DWORD PTR [edi],edx
  40be29:	scas   al,BYTE PTR es:[edi]
  40be2a:	and    eax,0xcd1b0943
  40be2f:	stos   BYTE PTR es:[edi],al
  40be30:	outs   dx,DWORD PTR ds:[esi]
  40be31:	int    0x34
  40be33:	push   ebx
  40be34:	dec    edx
  40be35:	mov    edi,0xdb3cb6e5
  40be3a:	stc    
  40be3b:	out    0x65,eax
  40be3d:	xchg   esi,eax
  40be3e:	and    eax,0x44081dd
  40be43:	xlat   BYTE PTR ds:[ebx]
  40be44:	(bad)  
  40be45:	cdq    
  40be46:	and    eax,0x27396b10
  40be4b:	rol    BYTE PTR [esi],0x29
  40be4e:	(bad)  
  40be4f:	fld    TBYTE PTR [esp+ecx*4]
  40be52:	and    ebp,edx
  40be54:	(bad)  
  40be55:	sub    al,0xad
  40be57:	xchg   ebx,eax
  40be58:	inc    ebp
  40be59:	cwde   
  40be5a:	ss sbb eax,0xb182cab9
  40be60:	jp     0x40be7a
  40be62:	(bad)  [edi]
  40be64:	jno    0x40be0f
  40be66:	or     BYTE PTR [eax+ebx*8-0x15],ch
  40be6a:	(bad)
  40be6e:	xchg   ecx,eax
  40be6f:	xchg   ecx,eax
  40be70:	adc    DWORD PTR [ebp-0x27],0x24
  40be74:	sahf   
  40be75:	sub    DWORD PTR [ebx+0x7215e8f1],0xda33645e
  40be7f:	(bad)  
  40be81:	sbb    eax,edx
  40be83:	xor    eax,0x2b42a54
  40be88:	das    
  40be89:	jp     0x40bedb
  40be8b:	mov    dh,0x8c
  40be8d:	popa   
  40be8e:	sar    BYTE PTR [esi+0x4e128557],0xb9
  40be95:	dec    DWORD PTR [edi]
  40be97:	aaa    
  40be98:	cld    
  40be99:	sub    eax,0x39ac204f
  40be9e:	cli    
  40be9f:	inc    eax
  40bea0:	dec    ebx
  40bea1:	out    0xc5,al
  40bea3:	mov    al,ds:0xa537398d
  40bea8:	fstp   QWORD PTR [ebx+0x34ec44e6]
  40beae:	mov    al,ds:0xb12703bc
  40beb3:	mov    esp,0xfe0dfbf8
  40beb8:	nop
  40beb9:	add    al,0x51
  40bebb:	test   al,0x93
  40bebd:	test   DWORD PTR [ecx-0x21],ecx
  40bec0:	mov    dl,0xb7
  40bec2:	cmp    al,0xc7
  40bec4:	test   eax,0x9a62d78b
  40bec9:	push   es
  40beca:	in     eax,0xce
  40becc:	por    mm6,QWORD PTR [ebp-0x41f9457d]
  40bed3:	(bad)  
  40bed4:	mov    ch,0xdf
  40bed6:	adc    ch,BYTE PTR [ebx+0x55498bd2]
  40bedc:	push   edi
  40bedd:	mov    al,ds:0xf64ccd7b
  40bee2:	mov    edi,esi
  40bee4:	adc    al,dl
  40bee6:	cld    
  40bee7:	fabs   
  40bee9:	inc    edi
  40beea:	fcom   QWORD PTR [eax]
  40beec:	inc    esp
  40beed:	gs add al,0x6c
  40bef0:	outs   dx,DWORD PTR ds:[esi]
  40bef1:	test   al,0x2c
  40bef3:	adc    bl,0xe0
  40bef6:	mov    BYTE PTR [ecx],bh
  40bef8:	mov    edi,0x731be04d
  40befd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40befe:	inc    edi
  40beff:	rol    edx,1
  40bf01:	push   cs
  40bf02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf03:	mov    esp,0xcfe7e658
  40bf08:	add    BYTE PTR [esi+0x6107c846],0x61
  40bf0f:	jo     0x40bf09
  40bf11:	arpl   WORD PTR [edi],si
  40bf13:	es push edx
  40bf15:	repz xchg edi,eax
  40bf17:	cmp    ebx,DWORD PTR [edx+esi*8+0x3a7c886e]
  40bf1e:	out    dx,al
  40bf1f:	lods   eax,DWORD PTR fs:[esi]
  40bf21:	ja     0x40bf45
  40bf23:	lds    esi,FWORD PTR [ebp+0x246a2184]
  40bf29:	and    cl,BYTE PTR [ebp+edi*8+0x6beecf98]
  40bf30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf31:	mov    esp,0x48ff6126
  40bf36:	and    BYTE PTR [edi],bh
  40bf38:	mov    bl,0x9d
  40bf3a:	rol    cl,1
  40bf3c:	in     al,0x35
  40bf3e:	lods   al,BYTE PTR ds:[esi]
  40bf3f:	add    al,0x6d
  40bf41:	cmp    eax,0xdae9f6a3
  40bf46:	add    BYTE PTR [ecx+eiz*1],bh
  40bf49:	mov    bl,0x74
  40bf4c:	cmp    DWORD PTR [ecx-0x22],esi
  40bf4f:	ds push ds
  40bf51:	mov    ch,0x22
  40bf53:	sbb    al,0xf9
  40bf55:	cdq    
  40bf56:	pop    ecx
  40bf57:	inc    ecx
  40bf58:	jno    0x40bf07
  40bf5a:	or     DWORD PTR [edi-0x443e6a88],ebp
  40bf60:	xchg   edx,eax
  40bf61:	inc    ebx
  40bf62:	xchg   BYTE PTR [eax-0x6bb9e0d3],al
  40bf68:	jecxz  0x40bf2c
  40bf6a:	and    DWORD PTR fs:[ecx+0x781ab40a],esp
  40bf71:	pop    eax
  40bf72:	(bad)  
  40bf73:	out    0x38,al
  40bf75:	or     eax,0x53e9ac0
  40bf7a:	test   eax,0xd8376943
  40bf7f:	xor    dl,ah
  40bf81:	mov    edi,0xde55ad6d
  40bf86:	mov    esi,0x652fedb
  40bf8b:	int3   
  40bf8c:	in     al,dx
  40bf8d:	xchg   ebp,eax
  40bf8e:	rcl    esi,cl
  40bf90:	test   al,0x93
  40bf92:	loopne 0x40bf91
  40bf94:	dec    edi
  40bf95:	popf   
  40bf96:	and    DWORD PTR ds:0xa612dc49,ecx
  40bf9c:	jne    0x40bf6d
  40bf9e:	cmp    BYTE PTR [esi-0x6b],0xbd
  40bfa2:	sub    eax,0x85a485a2
  40bfa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfa8:	sub    BYTE PTR [ebx+0x4a],dh
  40bfab:	hlt    
  40bfac:	les    eax,FWORD PTR [esi]
  40bfae:	ror    DWORD PTR ds:0xe2f534a9,0x20
  40bfb5:	stc    
  40bfb6:	outs   dx,DWORD PTR ds:[esi]
  40bfb7:	xchg   edx,eax
  40bfb8:	sbb    ch,BYTE PTR [edi]
  40bfba:	aad    0xe6
  40bfbc:	sub    BYTE PTR [esi],dl
  40bfbe:	mov    esi,0xf4e915a9
  40bfc3:	lds    edx,FWORD PTR [edx+0x3a]
  40bfc6:	imul   edx,DWORD PTR [esi],0xffffffec
  40bfc9:	push   edi
  40bfca:	mov    edx,0xd5d5d01a
  40bfcf:	ficomp DWORD PTR [eax]
  40bfd1:	jmp    0x40bfa2
  40bfd3:	ror    esi,0x5b
  40bfd6:	cwde   
  40bfd7:	fst    QWORD PTR [ecx-0x64891365]
  40bfdd:	or     eax,0x521d7c98
  40bfe2:	sbb    DWORD PTR [ebx+edx*1+0x6b0ceab4],esp
  40bfe9:	cmp    esp,DWORD PTR [eax*1+0x487acda1]
  40bff0:	mov    al,0x15
  40bff2:	fcom   DWORD PTR [eax+0x73]
  40bff5:	push   ebp
  40bff6:	jns    0x40bf8b
  40bff8:	mov    eax,0xed3b71ff
  40bffd:	and    DWORD PTR [ecx],esi
  40bfff:	xor    DWORD PTR [esp+ecx*4+0x1e82fdbe],esi
  40c006:	cmp    al,0x32
  40c008:	cs push cs
  40c00a:	scas   eax,DWORD PTR es:[edi]
  40c00b:	loop   0x40bf9c
  40c00d:	std    
  40c00e:	sub    ebp,DWORD PTR [eax-0x759cf58e]
  40c014:	cld    
  40c015:	jge    0x40c07b
  40c017:	push   es
  40c018:	ins    BYTE PTR es:[edi],dx
  40c019:	mov    cl,0x9c
  40c01b:	out    dx,al
  40c01c:	nop
  40c01d:	pop    esp
  40c01e:	pop    ds
  40c01f:	aad    0x35
  40c021:	mov    ds:0x43d815af,al
  40c026:	aas    
  40c027:	in     eax,0x12
  40c029:	adc    BYTE PTR [ecx],0x37
  40c02c:	adc    cl,dl
  40c02e:	mov    DWORD PTR [edx+0x1f],ebp
  40c031:	sub    esi,DWORD PTR ds:0x38a4737d
  40c037:	and    ecx,eax
  40c039:	jns    0x40c061
  40c03b:	jmp    0x2afd1b33
  40c040:	je     0x40c0be
  40c042:	stc    
  40c043:	pop    edi
  40c044:	push   edx
  40c045:	call   0xa1130e06
  40c04a:	cdq    
  40c04b:	dec    ecx
  40c04c:	out    0xae,eax
  40c04e:	add    al,0x97
  40c050:	es jns 0x40c0cc
  40c053:	je     0x40c077
  40c055:	test   al,0x9e
  40c057:	outs   dx,BYTE PTR ds:[esi]
  40c058:	inc    edx
  40c059:	retf   0xd0f
  40c05c:	mov    ds:0x98c0aa38,eax
  40c061:	mov    dl,0xf7
  40c063:	fs sub edi,ecx
  40c066:	in     al,0x2a
  40c068:	stos   BYTE PTR es:[edi],al
  40c069:	jne    0x40c06d
  40c06b:	sub    eax,0x9080f691
  40c070:	sahf   
  40c071:	(bad)  
  40c072:	xchg   esp,eax
  40c073:	repnz push esp
  40c075:	aas    
  40c076:	push   esi
  40c077:	or     eax,0xac85ba00
  40c07c:	push   edx
  40c07d:	sub    eax,0xac4d95c6
  40c082:	dec    edi
  40c083:	outs   dx,DWORD PTR ds:[esi]
  40c084:	push   ecx
  40c085:	jo     0x40c01e
  40c087:	popa   
  40c088:	loop   0x40c03a
  40c08a:	in     eax,0x54
  40c08c:	test   eax,0xb994e5a6
  40c091:	inc    ebx
  40c092:	mov    dh,0x3c
  40c094:	cmp    edi,DWORD PTR [edi+0x4c33b1f6]
  40c09a:	out    dx,eax
  40c09b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c09c:	ja     0x40c057
  40c09e:	jmp    0xabe9:0x55c7d00b
  40c0a5:	adc    al,BYTE PTR [eax+0x39c8554a]
  40c0ab:	or     DWORD PTR [eax-0x57f0d3e6],edi
  40c0b1:	inc    ebp
  40c0b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0b3:	push   ecx
  40c0b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0b5:	aas    
  40c0b6:	push   ebx
  40c0b7:	imul   edx,DWORD PTR [esi-0x786f8de2],0xffffff85
  40c0be:	push   ss
  40c0bf:	loope  0x40c126
  40c0c1:	dec    ecx
  40c0c2:	pop    ecx
  40c0c3:	sub    BYTE PTR [edx-0x1fc8795a],bl
  40c0c9:	push   ss
  40c0ca:	dec    ecx
  40c0cb:	shl    DWORD PTR [ebp*2-0x6aaa1321],cl
  40c0d2:	ins    DWORD PTR es:[edi],dx
  40c0d3:	arpl   WORD PTR [ebp+0x74],sp
  40c0d6:	(bad)  
  40c0d7:	seta   BYTE PTR [ecx-0x268c6806]
  40c0de:	por    mm6,QWORD PTR [eax]
  40c0e1:	sub    dh,dl
  40c0e3:	inc    esi
  40c0e4:	je     0x40c155
  40c0e6:	ins    DWORD PTR es:[edi],dx
  40c0e7:	cwde   
  40c0e8:	sub    DWORD PTR [eax-0x4d],ebp
  40c0eb:	sub    BYTE PTR [ebx+ecx*1],cl
  40c0ee:	jle    0x40c0f4
  40c0f0:	pop    es
  40c0f1:	jecxz  0x40c14c
  40c0f3:	mov    edi,0x18a269c
  40c0f8:	imul   edx,ecx,0xffffffce
  40c0fb:	jne    0x40c10e
  40c0fd:	jle    0x40c0be
  40c0ff:	loopne 0x40c0e6
  40c101:	mov    ebp,DWORD PTR [edi+0x5a93e8a7]
  40c107:	popa   
  40c108:	fist   WORD PTR [ebp-0x17f8cb6c]
  40c10e:	std    
  40c10f:	mov    edx,0xf5c82175
  40c114:	jb     0x40c182
  40c116:	adc    al,0x95
  40c118:	test   DWORD PTR [esi+ecx*4+0x33],ecx
  40c11c:	cmp    BYTE PTR [eax+0x6],dl
  40c11f:	into   
  40c120:	gs leavew 
  40c123:	pusha  
  40c124:	fdiv   QWORD PTR [ecx+edx*1-0x5b88b7e2]
  40c12b:	mov    bl,0x90
  40c12d:	push   ebx
  40c12e:	mov    dl,0x4a
  40c130:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c131:	add    BYTE PTR [eax+0x50],al
  40c134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c135:	fistp  DWORD PTR [eax]
  40c137:	mov    bl,0xae
  40c139:	jbe    0x40c10e
  40c13b:	in     al,dx
  40c13c:	adc    BYTE PTR [ebx+0x58d2b8ea],0xc6
  40c143:	pop    ecx
  40c144:	sub    BYTE PTR [edx+0x9],bh
  40c147:	push   esi
  40c148:	jmp    0xfa4f:0xd717bd1c
  40c14f:	mov    ebp,0x4fcb6753
  40c154:	shr    BYTE PTR [ecx-0x20ef5adc],0x25
  40c15b:	sbb    DWORD PTR [ebp-0x653e1a2b],ebp
  40c161:	dec    eax
  40c162:	push   ebx
  40c163:	(bad)  
  40c164:	stc    
  40c165:	jbe    0x40c19b
  40c167:	pop    eax
  40c168:	imul   esi,DWORD PTR [ecx],0x5363f677
  40c16e:	(bad)  
  40c16f:	leave  
  40c170:	dec    eax
  40c171:	in     al,0xe3
  40c173:	xchg   ebx,eax
  40c174:	imul   esp,DWORD PTR [esi-0x6289db56],0x58ef4326
  40c17e:	sub    ebx,esi
  40c180:	and    dh,BYTE PTR [edi]
  40c182:	pop    esi
  40c183:	aas    
  40c184:	cmp    eax,0xf47e4b0a
  40c189:	in     eax,dx
  40c18a:	fiadd  WORD PTR [eax]
  40c18c:	repnz pop ebx
  40c18e:	cmp    eax,DWORD PTR [ebp+0x15]
  40c191:	imul   edi,edi,0x1
  40c194:	jb     0x40c19e
  40c196:	mov    al,ds:0x8ba2f564
  40c19b:	jl     0x40c1bb
  40c19d:	scas   eax,DWORD PTR es:[edi]
  40c19e:	push   ebp
  40c19f:	cmp    bh,BYTE PTR [ecx-0x37d0305b]
  40c1a5:	mov    eax,0x656a863
  40c1aa:	jp     0x40c1c6
  40c1ac:	push   ds
  40c1ad:	push   ds
  40c1ae:	cmp    al,0x5d
  40c1b0:	ror    BYTE PTR [ebx+0x1c],1
  40c1b3:	sbb    BYTE PTR [edx+0x1],bh
  40c1b6:	xor    eax,0xf9961db0
  40c1bb:	and    BYTE PTR [ebx+0x70d5d54c],dl
  40c1c1:	shl    edi,cl
  40c1c3:	scas   al,BYTE PTR es:[edi]
  40c1c4:	scas   eax,DWORD PTR es:[edi]
  40c1c5:	addr16 retf 0xb6a6
  40c1c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1ca:	shl    BYTE PTR [edx-0x23315aa2],1
  40c1d0:	add    esi,0x30
  40c1d3:	push   ebx
  40c1d4:	inc    esi
  40c1d5:	mov    dh,0x30
  40c1d7:	sub    esi,DWORD PTR [edi]
  40c1d9:	cs mov eax,ss:0xaeeb185d
  40c1e0:	imul   ebp,eax,0xffffffec
  40c1e3:	enter  0x203b,0xf9
  40c1e7:	jecxz  0x40c1ed
  40c1e9:	out    0xd7,eax
  40c1eb:	int3   
  40c1ec:	mov    bl,BYTE PTR [edx+0x26bba83e]
  40c1f2:	sbb    eax,0x8a087ed5
  40c1f7:	jle    0x40c272
  40c1f9:	push   ecx
  40c1fa:	mov    ss,WORD PTR [ecx-0x63e04e7d]
  40c200:	mov    dh,0x72
  40c202:	(bad)  
  40c203:	lahf   
  40c204:	stos   BYTE PTR es:[edi],al
  40c205:	push   eax
  40c206:	inc    ebp
  40c207:	push   ebp
  40c208:	rol    BYTE PTR [edi-0x3855ac7e],cl
  40c20e:	add    DWORD PTR [edx+0x8],0x25
  40c212:	jmp    0x40c1f8
  40c214:	xor    al,0x88
  40c216:	dec    ecx
  40c217:	mov    ds:0xe88a2b9c,eax
  40c21c:	mov    edi,esi
  40c21e:	mov    bl,0x48
  40c220:	fadd   QWORD PTR [ebp+eiz*8+0x504f79b7]
  40c227:	out    0xa3,al
  40c229:	mov    ah,0x7b
  40c22b:	fldenv [ebx]
  40c22d:	jp     0x40c233
  40c22f:	add    eax,0x9811c7b6
  40c234:	mov    ds:0xe32fe9f4,al
  40c239:	mov    bl,0x90
  40c23b:	jle    0x40c25d
  40c23d:	call   0x4f86f8ba
  40c242:	xor    ah,BYTE PTR [edi+edi*8-0x5e]
  40c246:	mov    ds:0xa5901f64,al
  40c24b:	push   0x99f41df6
  40c250:	sbb    bl,BYTE PTR [ecx]
  40c252:	cmp    eax,0x24d04991
  40c257:	dec    esi
  40c258:	mov    al,ds:0xddb441d1
  40c25d:	jno    0x40c1e4
  40c25f:	xor    DWORD PTR [edi+0x56],ebp
  40c262:	mov    ebp,0xfbd997c6
  40c267:	nop
  40c268:	sub    BYTE PTR [eax+0xa],cl
  40c26b:	or     BYTE PTR [edi+ebp*2+0x4f24d90d],cl
  40c272:	dec    esp
  40c273:	sbb    al,0xd9
  40c275:	mov    ah,0x1e
  40c277:	aad    0x74
  40c279:	das    
  40c27a:	popa   
  40c27b:	cmp    esi,ebx
  40c27d:	xor    eax,0xd8b6d760
  40c282:	or     dh,0x27
  40c285:	push   eax
  40c286:	pushf  
  40c287:	xchg   ebp,eax
  40c288:	imul   eax,DWORD PTR [eax+ebx*1+0x2eaa85f4],0x27
  40c290:	inc    edx
  40c291:	fs inc ebp
  40c293:	fisubr DWORD PTR [edx]
  40c295:	in     eax,0xf0
  40c297:	add    DWORD PTR ds:0x4d1044d1,esi
  40c29d:	and    eax,0x5192078e
  40c2a2:	add    eax,0x821ae8ef
  40c2a7:	test   BYTE PTR [edx],0xda
  40c2aa:	jle    0x40c2f9
  40c2ac:	xbegin 0xe6b2c450
  40c2b2:	xor    BYTE PTR [esi+0x6c],bh
  40c2b5:	das    
  40c2b6:	js     0x40c309
  40c2b8:	or     DWORD PTR [edx-0x53],ebp
  40c2bb:	cmp    DWORD PTR ds:0x47a79e27,edi
  40c2c1:	pop    ebx
  40c2c2:	xor    eax,0x31fd1b34
  40c2c7:	test   DWORD PTR [eax+0x581ffaf8],0x6e8b1899
  40c2d1:	dec    eax
  40c2d2:	aad    0x57
  40c2d4:	int    0x87
  40c2d6:	in     al,dx
  40c2d7:	aam    0x8d
  40c2d9:	and    edi,ebp
  40c2db:	cmp    al,0xa5
  40c2dd:	xlat   BYTE PTR ds:[ebx]
  40c2de:	and    BYTE PTR [edx+edi*1-0x69],ah
  40c2e2:	mov    BYTE PTR gs:[edi+0x8],0xb
  40c2e7:	mov    cl,BYTE PTR [ebx+0x39baa812]
  40c2ed:	icebp  
  40c2ee:	xchg   esi,eax
  40c2ef:	test   eax,0xa8e7ac10
  40c2f4:	push   0xd1138e2b
  40c2f9:	and    BYTE PTR [ecx+0x53],ch
  40c2fc:	mov    esi,0x9a517f19
  40c301:	retf   0x5fb7
  40c304:	test   dh,dl
  40c306:	das    
  40c307:	sbb    esi,DWORD PTR [eax+edx*1-0x68]
  40c30b:	inc    esi
  40c30c:	imul   edx,DWORD PTR [esi],0xffffffea
  40c30f:	jp     0x40c2f6
  40c311:	hlt    
  40c312:	add    al,0x8e
  40c314:	repnz mov ch,0x61
  40c317:	sub    edx,edx
  40c319:	std    
  40c31a:	and    ah,bh
  40c31c:	pop    edx
  40c31d:	(bad)  
  40c31e:	mov    eax,DWORD PTR [ecx-0x1c]
  40c321:	inc    edx
  40c322:	repnz fisubr DWORD PTR [ebx-0x3e]
  40c326:	push   ebp
  40c327:	jmp    0x1075:0x915ab3d5
  40c32e:	sar    BYTE PTR [ebp+0x18],0x9a
  40c332:	mov    esi,0xc55df11f
  40c337:	push   eax
  40c338:	cli    
  40c339:	or     eax,0xa14d862d
  40c33e:	fsub   DWORD PTR [ebp-0x33]
  40c341:	mov    esp,DWORD PTR ds:0x97ed831a
  40c347:	xchg   esp,eax
  40c348:	and    eax,0x773b8fe8
  40c34d:	cli    
  40c34e:	jl     0x40c344
  40c350:	push   es
  40c351:	push   ds
  40c352:	sbb    edi,DWORD PTR [ebp+0x4f]
  40c355:	pop    eax
  40c356:	cmp    ch,0xb6
  40c359:	and    ebp,0xffffffe7
  40c35c:	lods   al,BYTE PTR ds:[esi]
  40c35d:	das    
  40c35e:	stos   BYTE PTR es:[edi],al
  40c35f:	inc    edi
  40c360:	retf   
  40c361:	sahf   
  40c362:	nop
  40c363:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c364:	inc    ebx
  40c365:	push   es
  40c366:	jecxz  0x40c346
  40c368:	pop    esi
  40c369:	loope  0x40c332
  40c36b:	mov    al,0xc
  40c36d:	mov    edx,0xa41e97e
  40c372:	mov    ds:0xa5de95f5,al
  40c377:	imul   BYTE PTR [edi+0x13396efd]
  40c37d:	sbb    BYTE PTR [ebx+0x81645c2],cl
  40c383:	push   es
  40c384:	jae    0x40c37c
  40c386:	push   ebp
  40c387:	xor    DWORD PTR [edx-0x7f],esi
  40c38a:	push   ds
  40c38b:	adc    eax,0x9c0dcc5
  40c390:	mov    dh,BYTE PTR [edi+0x7ff8e681]
  40c396:	mov    ah,0x12
  40c398:	test   DWORD PTR [ebp-0x6c],0xcb53835f
  40c39f:	and    al,0xd
  40c3a1:	lahf   
  40c3a2:	jl     0x40c409
  40c3a4:	pop    es
  40c3a5:	sub    DWORD PTR ds:0xecf52836,ebx
  40c3ab:	sbb    al,0xba
  40c3ad:	fisttp QWORD PTR [ebp+0x3f4f904d]
  40c3b3:	jns    0x40c421
  40c3b5:	pop    ds
  40c3b6:	inc    BYTE PTR [ebx]
  40c3b8:	js     0x40c345
  40c3ba:	mov    ds:0xbe814de7,eax
  40c3bf:	scas   al,BYTE PTR es:[edi]
  40c3c0:	cmp    ecx,DWORD PTR [esi]
  40c3c2:	ja     0x40c383
  40c3c4:	ret    0x2e1
  40c3c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3c8:	pop    ds
  40c3c9:	push   eax
  40c3ca:	mov    ebp,0x113cb71b
  40c3cf:	pop    esi
  40c3d0:	scas   al,BYTE PTR es:[edi]
  40c3d1:	int    0x74
  40c3d3:	sar    DWORD PTR [ebp+0x52],0x8a
  40c3d7:	sub    eax,0xf9fb77ea
  40c3dc:	mov    dh,0x4e
  40c3de:	test   eax,0xa4c1c526
  40c3e3:	fild   DWORD PTR [ecx+0x7e10acd9]
  40c3e9:	js     0x40c37b
  40c3eb:	out    0x87,eax
  40c3ed:	inc    edi
  40c3ee:	inc    esp
  40c3ef:	das    
  40c3f0:	retf   
  40c3f1:	(bad)  
  40c3f2:	xchg   ecx,eax
  40c3f3:	push   edi
  40c3f4:	mov    al,ds:0x529d23f7
  40c3f9:	and    esp,esp
  40c3fb:	stos   DWORD PTR es:[edi],eax
  40c3fc:	pop    esi
  40c3fd:	jb     0x40c398
  40c3ff:	inc    edx
  40c400:	les    ecx,FWORD PTR [ecx-0x223d9af8]
  40c406:	pop    ecx
  40c407:	jge    0x40c453
  40c409:	jbe    0x40c3ee
  40c40b:	push   ecx
  40c40c:	or     DWORD PTR [ebp-0x7082656c],esp
  40c412:	push   ebp
  40c413:	jmp    0x7a58:0x34a6d1ab
  40c41a:	xchg   ebp,eax
  40c41b:	pop    ss
  40c41c:	sbb    bh,BYTE PTR [ecx+0x4d782824]
  40c422:	neg    esp
  40c424:	shl    BYTE PTR [eax],1
  40c426:	sub    al,bl
  40c428:	mov    ch,0x30
  40c42a:	jl     0x40c48e
  40c42c:	or     ebp,DWORD PTR [eax-0x10786f1d]
  40c432:	adc    eax,DWORD PTR [ebp-0x21]
  40c435:	mov    WORD PTR [ebp+0x37],?
  40c438:	dec    eax
  40c439:	sbb    eax,0x6628958d
  40c43e:	jl     0x40c41e
  40c440:	js     0x40c3db
  40c442:	cmc    
  40c443:	jl     0x40c41a
  40c445:	stos   DWORD PTR es:[edi],eax
  40c446:	pop    es
  40c447:	hlt    
  40c448:	in     eax,dx
  40c449:	in     eax,dx
  40c44a:	clc    
  40c44b:	test   BYTE PTR [ebx+0x1c],0x3f
  40c44f:	not    esi
  40c451:	(bad)  
  40c452:	jmp    0x40c482
  40c454:	ja     0x40c43b
  40c456:	(bad)  
  40c457:	jmp    0xbcec59b1
  40c45c:	push   ebp
  40c45d:	adc    eax,ebp
  40c45f:	mov    bl,0xfd
  40c461:	mov    ebp,0xbc1217d9
  40c466:	cmp    DWORD PTR es:[ecx],eax
  40c469:	call   0x8475ef53
  40c46e:	in     al,0x19
  40c470:	les    edx,FWORD PTR [ebx-0x79dac0c8]
  40c476:	dec    esi
  40c477:	add    DWORD PTR [ebx],edx
  40c479:	inc    edx
  40c47a:	xchg   esi,eax
  40c47b:	neg    BYTE PTR [edx+0x53]
  40c47e:	loop   0x40c426
  40c480:	xor    dh,BYTE PTR [edi]
  40c482:	imul   ebx,DWORD PTR [ebx],0x34
  40c485:	jmp    0x6758:0x703ec29e
  40c48c:	xor    esi,DWORD PTR [edi]
  40c48e:	nop
  40c48f:	dec    esi
  40c490:	mov    dl,0x5e
  40c492:	xchg   edi,eax
  40c493:	push   ecx
  40c494:	and    BYTE PTR [ebp-0x41],ah
  40c497:	or     eax,0xa53b46b0
  40c49c:	dec    eax
  40c49d:	in     al,0xeb
  40c49f:	jbe    0x40c4ee
  40c4a1:	in     eax,dx
  40c4a2:	dec    edx
  40c4a3:	mov    edi,?
  40c4a5:	ja     0x40c51e
  40c4a7:	sub    BYTE PTR [edi],al
  40c4a9:	dec    ebp
  40c4aa:	sub    BYTE PTR [eax+0x5],ah
  40c4ad:	sbb    BYTE PTR [ebx-0xb3b0681],al
  40c4b3:	out    dx,eax
  40c4b4:	push   ebx
  40c4b5:	jmp    0x40c4c7
  40c4b7:	adc    DWORD PTR [eax*8-0x4ce89667],ecx
  40c4be:	ret    
  40c4bf:	(bad)  
  40c4c0:	mov    WORD PTR [edi],gs
  40c4c2:	fidiv  WORD PTR [edx+0xd]
  40c4c5:	mov    DWORD PTR [edi+0x65],edi
  40c4c8:	and    edi,DWORD PTR [edi-0x62c330ed]
  40c4ce:	dec    esi
  40c4d0:	lds    edi,FWORD PTR [eax]
  40c4d2:	sahf   
  40c4d3:	jecxz  0x40c53b
  40c4d5:	xchg   ebx,eax
  40c4d6:	cs adc ebx,esp
  40c4d9:	push   es
  40c4da:	pop    ecx
  40c4db:	mov    DWORD PTR [ebp-0x35],ecx
  40c4de:	cmp    esp,DWORD PTR [esi]
  40c4e0:	test   DWORD PTR [ecx+0x58fec3ee],eax
  40c4e6:	jg     0x40c531
  40c4e8:	mov    cl,0xbd
  40c4ea:	sub    al,0x4
  40c4ec:	or     al,0x3e
  40c4ee:	outs   dx,BYTE PTR ds:[esi]
  40c4ef:	dec    esp
  40c4f0:	sbb    eax,0x2979d22a
  40c4f5:	sub    eax,0x352b0705
  40c4fa:	push   ss
  40c4fb:	sub    eax,0x40b875ac
  40c500:	jno    0x40c538
  40c502:	loope  0x40c48f
  40c504:	es popf 
  40c506:	fdivr  QWORD PTR [edi-0x27e30a10]
  40c50c:	mov    edi,0xafee7e01
  40c511:	jle    0x40c4ff
  40c513:	lahf   
  40c514:	dec    edx
  40c515:	xchg   DWORD PTR [esi],ebx
  40c517:	ds xor cl,al
  40c51a:	fistp  QWORD PTR ds:0x59b5fe15
  40c520:	add    eax,DWORD PTR [ebx-0x25]
  40c523:	and    ebx,DWORD PTR [esp+ebp*4]
  40c526:	scas   al,BYTE PTR es:[edi]
  40c527:	outs   dx,DWORD PTR ds:[esi]
  40c528:	dec    ecx
  40c529:	jle    0x40c549
  40c52b:	xchg   ebx,eax
  40c52c:	push   esp
  40c52d:	std    
  40c52e:	rcr    DWORD PTR es:[ebp-0x326b0659],cl
  40c535:	jl     0x40c599
  40c537:	xor    cl,BYTE PTR [ecx]
  40c539:	pop    edx
  40c53a:	inc    eax
  40c53b:	sbb    ebx,DWORD PTR [esi+eiz*2]
  40c53e:	mov    cl,dl
  40c540:	sub    dh,BYTE PTR [edx-0x693203a9]
  40c546:	jmp    0x7311:0x94fd503a
  40c54d:	dec    esp
  40c54e:	outs   dx,BYTE PTR ds:[esi]
  40c54f:	pand   mm1,QWORD PTR [ecx-0x66496f4a]
  40c556:	popa   
  40c557:	scas   al,BYTE PTR es:[edi]
  40c558:	adc    eax,0x531f092e
  40c55d:	(bad)  
  40c55e:	mov    ss,WORD PTR [ebx-0x58]
  40c561:	mov    esp,0xd250013d
  40c566:	das    
  40c567:	dec    ecx
  40c568:	sub    al,0xc0
  40c56a:	sub    ch,BYTE PTR [esi]
  40c56c:	xlat   BYTE PTR ds:[ebx]
  40c56d:	add    al,0xb4
  40c56f:	scas   al,BYTE PTR es:[edi]
  40c570:	pop    ds
  40c571:	and    al,0x56
  40c573:	sti    
  40c574:	pop    es
  40c575:	add    DWORD PTR [eax],esp
  40c577:	cli    
  40c578:	ins    BYTE PTR es:[edi],dx
  40c579:	lahf   
  40c57a:	and    ebx,DWORD PTR [edi]
  40c57c:	fist   WORD PTR [esi+0x6ceee39f]
  40c582:	and    dl,BYTE PTR [ecx]
  40c584:	jb     0x40c5d8
  40c586:	scas   eax,DWORD PTR es:[edi]
  40c587:	rcl    DWORD PTR [ecx+0x4dd8c146],cl
  40c58d:	clc    
  40c58e:	jbe    0x40c5bd
  40c590:	mov    ebp,0xddb37a47
  40c595:	cwde   
  40c596:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c597:	test   BYTE PTR [ebp-0x33c88c7c],0x42
  40c59e:	aaa    
  40c59f:	sbb    bh,cl
  40c5a1:	lods   al,BYTE PTR ds:[esi]
  40c5a2:	popf   
  40c5a3:	js     0x40c529
  40c5a5:	mov    ebp,0x54c97c93
  40c5aa:	push   edx
  40c5ab:	enter  0x75b8,0xee
  40c5af:	fmulp  st(0),st
  40c5b1:	inc    ebx
  40c5b2:	mov    esp,0x5658b674
  40c5b7:	ja     0x40c554
  40c5b9:	mov    ah,0xe4
  40c5bb:	das    
  40c5bc:	inc    ebx
  40c5bd:	adc    al,0xee
  40c5bf:	adc    ch,ch
  40c5c1:	push   esi
  40c5c2:	jg     0x40c5d6
  40c5c4:	pop    esi
  40c5c5:	out    dx,eax
  40c5c6:	mov    esp,0xa83b7de2
  40c5cb:	nop
  40c5cc:	dec    edi
  40c5cd:	dec    ecx
  40c5ce:	int3   
  40c5cf:	outs   dx,BYTE PTR ds:[esi]
  40c5d0:	(bad)  
  40c5d1:	mov    ds:0xd1adc218,eax
  40c5d6:	ja     0x40c61b
  40c5d8:	jae    0x40c584
  40c5da:	sub    BYTE PTR [edi+esi*4+0x5070294d],dh
  40c5e1:	xor    dh,ch
  40c5e3:	enter  0x54e,0xf7
  40c5e7:	imul   esi,DWORD PTR [eax-0xc],0xf80bd3e0
  40c5ee:	sbb    DWORD PTR [ebp+0x55],esp
  40c5f1:	ror    ch,1
  40c5f3:	jg     0x40c5f5
  40c5f5:	push   edi
  40c5f6:	jmp    0x40c59a
  40c5f8:	jb     0x40c602
  40c5fa:	sahf   
  40c5fb:	ins    BYTE PTR es:[edi],dx
  40c5fc:	data16 cmp al,BYTE PTR [esi+0x24]
  40c600:	pop    esi
  40c601:	and    BYTE PTR [eax-0x7a],dh
  40c604:	push   0x27
  40c606:	inc    ebx
  40c607:	inc    ebx
  40c608:	adc    dh,ah
  40c60a:	xchg   BYTE PTR [ecx+0x26],ch
  40c60d:	xchg   ch,ch
  40c60f:	inc    ebx
  40c610:	jg     0x40c5ce
  40c612:	add    eax,0xf2f8156c
  40c617:	add    eax,esi
  40c619:	pop    ss
  40c61a:	outs   dx,BYTE PTR ds:[esi]
  40c61b:	lock xchg ebp,eax
  40c61d:	mov    edi,0x3fa78fa0
  40c622:	sub    ch,BYTE PTR [edi]
  40c624:	cmp    BYTE PTR [edi-0x57a65ea2],bl
  40c62a:	fs addr16 mov ah,0x1c
  40c62e:	push   esi
  40c62f:	jo     0x40c650
  40c631:	bound  ebx,QWORD PTR [eax-0x3c]
  40c634:	xor    eax,ecx
  40c636:	lea    eax,[eax+edi*1+0x64e5c0]
  40c63d:	mov    edi,DWORD PTR [ebp+0xc]
  40c640:	xor    edi,ecx
  40c642:	add    edi,edx
  40c644:	imul   eax,edi
  40c647:	mov    edi,DWORD PTR [ebp+0xc]
  40c64a:	xor    edi,ecx
  40c64c:	sub    edi,eax
  40c64e:	mov    eax,DWORD PTR [ebp-0x4]
  40c651:	add    edi,edx
  40c653:	cmp    DWORD PTR [eax],edi
  40c655:	mov    eax,DWORD PTR [ebp-0x4]
  40c658:	mov    edi,DWORD PTR [ebp+0x10]
  40c65b:	jg     0x40c66e
  40c661:	xor    edi,ecx
  40c663:	mov    ebx,esi
  40c665:	sub    ebx,edi
  40c667:	add    DWORD PTR [eax],ebx
  40c669:	jmp    0x40c674
  40c66e:	xor    edi,ecx
  40c670:	add    edi,edx
  40c672:	add    DWORD PTR [eax],edi
  40c674:	mov    eax,DWORD PTR [ebp-0x8]
  40c677:	mov    edi,DWORD PTR [ebp-0x10]
  40c67a:	mov    eax,DWORD PTR [eax]
  40c67c:	xor    edi,ecx
  40c67e:	add    edi,0x3272df
  40c684:	not    edi
  40c686:	and    eax,edi
  40c688:	movsx  di,BYTE PTR [eax+0x1]
  40c68d:	mov    ebx,0x3b50
  40c692:	sub    di,bx
  40c695:	mov    ebx,0x8a8c
  40c69a:	xor    di,bx
  40c69d:	mov    ebx,0x4f86
  40c6a2:	cmp    di,bx
  40c6a5:	jne    0x40c6cd
  40c6ab:	movsx  di,BYTE PTR [eax]
  40c6af:	mov    ebx,0x3b50
  40c6b4:	sub    di,bx
  40c6b7:	mov    ebx,0x8a8c
  40c6bc:	xor    di,bx
  40c6bf:	mov    ebx,0x4e71
  40c6c4:	cmp    di,bx
  40c6c7:	je     0x40c6dd
  40c6cd:	mov    edi,DWORD PTR [ebp-0x10]
  40c6d0:	xor    edi,ecx
  40c6d2:	mov    ebx,esi
  40c6d4:	sub    ebx,edi
  40c6d6:	add    eax,ebx
  40c6d8:	jmp    0x40c688
  40c6dd:	mov    esi,DWORD PTR [ebp-0x14]
  40c6e0:	mov    esi,DWORD PTR [esi]
  40c6e2:	mov    edi,DWORD PTR [eax+0x3c]
  40c6e5:	lea    esi,[edi+esi*8+0x78]
  40c6e9:	mov    esi,DWORD PTR [esi+eax*1]
  40c6ec:	mov    DWORD PTR [ebp-0x8],esi
  40c6ef:	mov    esi,DWORD PTR [ebp+0x8]
  40c6f2:	xor    esi,ecx
  40c6f4:	add    esi,edx
  40c6f6:	mov    DWORD PTR [ebp-0x14],esi
  40c6f9:	mov    esi,DWORD PTR [ebp+0x8]
  40c6fc:	mov    edi,DWORD PTR [ebp-0x8]
  40c6ff:	xor    esi,ecx
  40c701:	add    esi,edx
  40c703:	pop    ebx
  40c704:	cmp    edi,esi
  40c706:	jne    0x40c724
  40c70c:	mov    eax,DWORD PTR [ebp+0xc]
  40c70f:	xor    eax,ecx
  40c711:	mov    ecx,DWORD PTR [ebp-0x8]
  40c714:	add    eax,edx
  40c716:	imul   eax,ecx
  40c719:	mov    DWORD PTR [ebp-0x8],eax
  40c71c:	push   DWORD PTR [ebp+0x18]
  40c71f:	jmp    0x40c778
  40c724:	mov    ecx,DWORD PTR [ebp-0x8]
  40c727:	add    ecx,eax
  40c729:	mov    DWORD PTR [ebp-0x14],ecx
  40c72c:	mov    ecx,DWORD PTR [ebp-0x14]
  40c72f:	mov    ecx,DWORD PTR [ecx+0xc]
  40c732:	movsx  cx,BYTE PTR [ecx+eax*1]
  40c737:	mov    edx,0x3b50
  40c73c:	sub    cx,dx
  40c73f:	mov    edx,0x8a8c
  40c744:	xor    cx,dx
  40c747:	mov    edx,0x4e77
  40c74c:	cmp    cx,dx
  40c74f:	jne    0x40c71c
  40c755:	mov    ecx,DWORD PTR ds:0x42e313
  40c75b:	mov    ecx,DWORD PTR [ecx+0x198]
  40c761:	mov    DWORD PTR [ecx],eax
  40c763:	jmp    0x40c789
  40c768:	mov    ecx,DWORD PTR [ebp+0x18]
  40c76b:	cmp    ecx,0xf89c85b8
  40c771:	jne    0x40c789
  40c777:	push   eax
  40c778:	push   DWORD PTR [ebp+0x14]
  40c77b:	push   DWORD PTR [ebp+0x10]
  40c77e:	push   DWORD PTR [ebp+0xc]
  40c781:	push   DWORD PTR [ebp+0x8]
  40c784:	call   0x409ed5
  40c789:	pop    edi
  40c78a:	pop    esi
  40c78b:	leave  
  40c78c:	ret    0x14
  40c78f:	push   ebp
  40c790:	mov    ebp,esp
  40c792:	sub    esp,0xc
  40c795:	push   esi
  40c796:	mov    esi,DWORD PTR ds:0x41ac40
  40c79c:	mov    ecx,DWORD PTR ds:0x41abdd
  40c7a2:	sub    esi,ecx
  40c7a4:	xor    esi,DWORD PTR [esi+ecx*1]
  40c7a7:	mov    esi,0xf89c85b9
  40c7ac:	sub    ecx,edx
  40c7ae:	mov    DWORD PTR [ebp-0x8],esi
  40c7b1:	sub    DWORD PTR ds:0x42b010,edi
  40c7b7:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  40c7be:	and    DWORD PTR ds:0x42901c,0x0
  40c7c8:	mov    edx,DWORD PTR ds:0x42901c
  40c7ce:	inc    edx
  40c7cf:	mov    DWORD PTR ds:0x42901c,edx
  40c7d5:	cmp    DWORD PTR ds:0x42901c,0x24
  40c7dc:	jne    0x40c7ed
  40c7e2:	push   0x42e127
  40c7e7:	call   DWORD PTR ds:0x42e9cb
  40c7ed:	cmp    DWORD PTR ds:0x42901c,0x18
  40c7f4:	jb     0x40c7c8
  40c7fa:	push   edi
  40c7fb:	mov    eax,eax
  40c7fd:	mov    eax,DWORD PTR [ebp-0x4]
  40c800:	mov    edi,DWORD PTR [ebp-0x8]
  40c803:	mov    ecx,0x7510899
  40c808:	xor    eax,ecx
  40c80a:	sub    edx,0x2378
  40c810:	xor    edi,ecx
  40c812:	adc    DWORD PTR ds:0x429020,0x74b2
  40c81c:	mov    edx,0x3272e0
  40c821:	mov    DWORD PTR ds:0x42901c,0x186b
  40c82b:	add    edi,edx
  40c82d:	add    eax,edx
  40c82f:	imul   eax,edi
  40c832:	mov    DWORD PTR ds:0x42b000,edi
  40c838:	mov    edi,DWORD PTR [ebp+0xc]
  40c83b:	cmp    edi,eax
  40c83d:	je     0x40c8c6
  40c843:	mov    DWORD PTR [ebp-0xc],esi
  40c846:	mov    eax,DWORD PTR [ebp-0xc]
  40c849:	sbb    DWORD PTR ds:0x42b008,0x2a28
  40c853:	mov    esi,DWORD PTR [ebp+0xc]
  40c856:	sub    DWORD PTR ds:0x42b010,0xd18
  40c860:	xor    eax,ecx
  40c862:	lea    eax,[eax*8+0x1939778]
  40c869:	add    DWORD PTR ds:0x42c00c,0x2208
  40c873:	mov    eax,DWORD PTR [esi+eax*1]
  40c876:	mov    DWORD PTR [ebp+0xc],eax
  40c879:	not    esi
  40c87b:	mov    eax,DWORD PTR [ebp-0x4]
  40c87e:	mov    esi,DWORD PTR [ebp-0x8]
  40c881:	or     DWORD PTR ds:0x42d008,0x42c01c
  40c88b:	xor    eax,ecx
  40c88d:	xor    esi,ecx
  40c88f:	sbb    DWORD PTR ds:0x42a008,0x42d00c
  40c899:	add    esi,edx
  40c89b:	add    eax,edx
  40c89d:	imul   eax,esi
  40c8a0:	mov    esi,DWORD PTR [ebp+0xc]
  40c8a3:	cmp    esi,eax
  40c8a5:	je     0x40c8c6
  40c8ab:	mov    eax,DWORD PTR [ebp-0x4]
  40c8ae:	xor    eax,ecx
  40c8b0:	mov    ecx,DWORD PTR [ebp+0xc]
  40c8b3:	add    eax,edx
  40c8b5:	imul   eax,ecx
  40c8b8:	add    eax,DWORD PTR [ebp+0x8]
  40c8bb:	mov    DWORD PTR [ebp+0xc],eax
  40c8be:	mov    eax,DWORD PTR [ebp+0xc]
  40c8c1:	jmp    0x40c8d7
  40c8c6:	mov    eax,DWORD PTR [ebp-0x4]
  40c8c9:	mov    esi,DWORD PTR [ebp-0x8]
  40c8cc:	xor    esi,ecx
  40c8ce:	xor    eax,ecx
  40c8d0:	add    esi,edx
  40c8d2:	add    eax,edx
  40c8d4:	imul   eax,esi
  40c8d7:	pop    edi
  40c8d8:	pop    esi
  40c8d9:	leave  
  40c8da:	ret    0x8
  40c8dd:	push   ebp
  40c8de:	mov    ebp,esp
  40c8e0:	push   ecx
  40c8e1:	add    edx,edx
  40c8e3:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  40c8ea:	adc    ecx,eax
  40c8ec:	mov    eax,DWORD PTR [ebp-0x4]
  40c8ef:	mov    edx,DWORD PTR [ebp+0x10]
  40c8f2:	mov    DWORD PTR ds:0x42b000,0x1c
  40c8fc:	cmp    DWORD PTR ds:0x42b000,0x0
  40c903:	je     0x40c957
  40c909:	cmp    DWORD PTR ds:0x42b000,0x8
  40c910:	jne    0x40c921
  40c916:	push   0x42c000
  40c91b:	call   DWORD PTR ds:0x42e9d3
  40c921:	cmp    DWORD PTR ds:0x42b000,0x9
  40c928:	jne    0x40c93b
  40c92e:	mov    ecx,DWORD PTR ds:0x42b000
  40c934:	dec    ecx
  40c935:	mov    DWORD PTR ds:0x42b000,ecx
  40c93b:	mov    ecx,DWORD PTR ds:0x42b000
  40c941:	dec    ecx
  40c942:	mov    DWORD PTR ds:0x42b000,ecx
  40c948:	jmp    0x40c8fc
  40c94d:	and    DWORD PTR ds:0x42c000,0x7708
  40c957:	mov    ecx,0x7510899
  40c95c:	xor    eax,ecx
  40c95e:	xor    DWORD PTR ds:0x42a018,0x429008
  40c968:	add    eax,0x3272e0
  40c96d:	mov    DWORD PTR [edx],eax
  40c96f:	mov    DWORD PTR ds:0x429018,0x10
  40c979:	cmp    DWORD PTR ds:0x429018,0x0
  40c980:	je     0x40c9d0
  40c986:	cmp    DWORD PTR ds:0x429018,0x4
  40c98d:	jne    0x40c9a8
  40c993:	push   0x42b008
  40c998:	push   0x429024
  40c99d:	push   0x42d000
  40c9a2:	call   DWORD PTR ds:0x42e993
  40c9a8:	cmp    DWORD PTR ds:0x429018,0x5
  40c9af:	jne    0x40c9c0
  40c9b5:	mov    eax,ds:0x429018
  40c9ba:	dec    eax
  40c9bb:	mov    ds:0x429018,eax
  40c9c0:	mov    eax,ds:0x429018
  40c9c5:	dec    eax
  40c9c6:	mov    ds:0x429018,eax
  40c9cb:	jmp    0x40c979
  40c9d0:	mov    eax,DWORD PTR [ebp+0xc]
  40c9d3:	xor    eax,ecx
  40c9d5:	push   esi
  40c9d6:	mov    esi,DWORD PTR [ebp+0x10]
  40c9d9:	mov    edx,0x3272e0
  40c9de:	add    eax,edx
  40c9e0:	mov    DWORD PTR [esi+0x4],eax
  40c9e3:	mov    eax,DWORD PTR [ebp+0x14]
  40c9e6:	mov    esi,DWORD PTR [ebp+0x10]
  40c9e9:	mov    DWORD PTR [esi+0x8],eax
  40c9ec:	mov    eax,DWORD PTR [ebp+0x18]
  40c9ef:	mov    esi,DWORD PTR [ebp+0x10]
  40c9f2:	mov    DWORD PTR [esi+0xc],eax
  40c9f5:	mov    eax,DWORD PTR [ebp+0x1c]
  40c9f8:	mov    esi,DWORD PTR [ebp+0x10]
  40c9fb:	mov    DWORD PTR [esi+0x10],eax
  40c9fe:	mov    eax,DWORD PTR [ebp+0x8]
  40ca01:	xor    eax,ecx
  40ca03:	add    eax,edx
  40ca05:	pop    esi
  40ca06:	leave  
  40ca07:	ret    0x18
  40ca0a:	push   ebp
  40ca0b:	mov    ebp,esp
  40ca0d:	sub    esp,0x9c
  40ca13:	mov    ecx,DWORD PTR [ebp+0x8]
  40ca16:	mov    DWORD PTR ds:0x429004,0x1d
  40ca20:	cmp    DWORD PTR ds:0x429004,0x0
  40ca27:	je     0x40cae1
  40ca2d:	cmp    DWORD PTR ds:0x429004,0x2
  40ca34:	jne    0x40ca4b
  40ca3a:	push   DWORD PTR [ebp-0x10]
  40ca3d:	push   DWORD PTR [ebp-0x24]
  40ca40:	push   0x1cdf
  40ca45:	call   DWORD PTR ds:0x42e997
  40ca4b:	cmp    DWORD PTR ds:0x429004,0x3
  40ca52:	jne    0x40ca66
  40ca58:	xor    eax,eax
  40ca5a:	add    eax,DWORD PTR ds:0x429004
  40ca60:	dec    eax
  40ca61:	mov    ds:0x429004,eax
  40ca66:	xor    eax,eax
  40ca68:	add    eax,DWORD PTR ds:0x429004
  40ca6e:	dec    eax
  40ca6f:	mov    ds:0x429004,eax
  40ca74:	jmp    0x40ca20
  40ca79:	and    DWORD PTR ds:0x42b00c,0x0
  40ca83:	mov    eax,ds:0x42b00c
  40ca88:	inc    eax
  40ca89:	mov    ds:0x42b00c,eax
  40ca8e:	cmp    DWORD PTR ds:0x42b00c,0x6
  40ca95:	jne    0x40cabc
  40ca9b:	push   DWORD PTR [ebp-0x28]
  40ca9e:	push   DWORD PTR [ebp-0xc]
  40caa1:	push   0x42b000
  40caa6:	push   DWORD PTR [ebp-0x20]
  40caa9:	push   0x567e
  40caae:	push   0x641c
  40cab3:	push   DWORD PTR [ebp-0x24]
  40cab6:	call   DWORD PTR ds:0x42e99f
  40cabc:	cmp    DWORD PTR ds:0x42b00c,0x5
  40cac3:	jne    0x40cad4
  40cac9:	mov    eax,ds:0x42b00c
  40cace:	inc    eax
  40cacf:	mov    ds:0x42b00c,eax
  40cad4:	cmp    DWORD PTR ds:0x42b00c,0x15
  40cadb:	jb     0x40ca83
  40cae1:	mov    eax,0x8a8c
  40cae6:	xor    ax,WORD PTR [ecx+0x20]
  40caea:	and    DWORD PTR ds:0x42c008,0x0
  40caf4:	jmp    0x40cb08
  40caf9:	xor    ecx,ecx
  40cafb:	or     ecx,DWORD PTR ds:0x42c008
  40cb01:	inc    ecx
  40cb02:	mov    DWORD PTR ds:0x42c008,ecx
  40cb08:	cmp    DWORD PTR ds:0x42c008,0x14
  40cb0f:	jae    0x40cb9f
  40cb15:	cmp    DWORD PTR ds:0x42c008,0x18
  40cb1c:	jne    0x40cb3d
  40cb22:	push   0x42d00c
  40cb27:	push   DWORD PTR [ebp-0x24]
  40cb2a:	push   0x42e0d9
  40cb2f:	push   0x627f
  40cb34:	push   DWORD PTR [ebp-0x1c]
  40cb37:	call   DWORD PTR ds:0x42e9a3
  40cb3d:	jmp    0x40caf9
  40cb42:	mov    DWORD PTR ds:0x42c010,0x15
  40cb4c:	cmp    DWORD PTR ds:0x42c010,0x0
  40cb53:	je     0x40cb9f
  40cb59:	cmp    DWORD PTR ds:0x42c010,0xa
  40cb60:	jne    0x40cb71
  40cb66:	push   0x42a000
  40cb6b:	call   DWORD PTR ds:0x42e9ab
  40cb71:	cmp    DWORD PTR ds:0x42c010,0xb
  40cb78:	jne    0x40cb8d
  40cb7e:	xor    ecx,ecx
  40cb80:	xor    ecx,DWORD PTR ds:0x42c010
  40cb86:	dec    ecx
  40cb87:	mov    DWORD PTR ds:0x42c010,ecx
  40cb8d:	mov    ecx,DWORD PTR ds:0x42c010
  40cb93:	dec    ecx
  40cb94:	mov    DWORD PTR ds:0x42c010,ecx
  40cb9a:	jmp    0x40cb4c
  40cb9f:	mov    ecx,0x3b50
  40cba4:	sub    DWORD PTR ds:0x42900c,0x429000
  40cbae:	add    ax,cx
  40cbb1:	movzx  eax,ax
  40cbb4:	mov    DWORD PTR ds:0x42b000,0x10
  40cbbe:	cmp    DWORD PTR ds:0x42b000,0x0
  40cbc5:	je     0x40cc00
  40cbcb:	cmp    DWORD PTR ds:0x42b000,0x17
  40cbd2:	jne    0x40cbee
  40cbd8:	push   0x898b
  40cbdd:	push   DWORD PTR [ebp-0x10]
  40cbe0:	push   0x429018
  40cbe5:	push   DWORD PTR [ebp-0xc]
  40cbe8:	call   DWORD PTR ds:0x42e9af
  40cbee:	mov    ecx,DWORD PTR ds:0x42b000
  40cbf4:	dec    ecx
  40cbf5:	mov    DWORD PTR ds:0x42b000,ecx
  40cbfb:	jmp    0x40cbbe
  40cc00:	mov    DWORD PTR [ebp-0x10],eax
  40cc03:	movzx  ecx,BYTE PTR ds:0x42d010
  40cc0a:	or     ecx,DWORD PTR ds:0x42a014
  40cc10:	mov    DWORD PTR ds:0x42d010,ecx
  40cc16:	mov    BYTE PTR [ebp-0x1],0x79
  40cc1a:	lea    eax,[ebp-0x1]
  40cc1d:	and    ecx,DWORD PTR ds:0x42b014
  40cc23:	mov    DWORD PTR [ebp-0xc],eax
  40cc26:	xor    DWORD PTR ds:0x42a00c,edx
  40cc2c:	jmp    0x40efb2
  40cc31:	mov    esp,0xfb9ef6c5
  40cc36:	lea    edx,[ebx+ecx*8+0x3e7be512]
  40cc3d:	jbe    0x40cc33
  40cc3f:	ds sbb al,0xf8
  40cc42:	in     eax,0x7a
  40cc44:	jp     0x40cc47
  40cc46:	pop    edi
  40cc47:	jp     0x40ccc3
  40cc49:	test   eax,0x2e7a7f66
  40cc4e:	sub    ecx,DWORD PTR cs:[ecx]
  40cc51:	stc    
  40cc52:	int    0x76
  40cc54:	daa    
  40cc55:	push   edi
  40cc56:	lods   eax,DWORD PTR ds:[esi]
  40cc57:	dec    ebp
  40cc58:	xchg   esp,eax
  40cc59:	inc    edx
  40cc5a:	pop    edi
  40cc5b:	sub    ebx,DWORD PTR [edx-0x4b25ced1]
  40cc61:	adc    eax,0xad8cb3f6
  40cc66:	cwde   
  40cc67:	xchg   edx,eax
  40cc68:	xlat   BYTE PTR ds:[ebx]
  40cc69:	scas   al,BYTE PTR es:[edi]
  40cc6a:	sbb    al,0xd4
  40cc6c:	in     al,0xce
  40cc6e:	pusha  
  40cc6f:	jge    0x40cc36
  40cc71:	aaa    
  40cc72:	out    0xf7,al
  40cc74:	add    eax,0x927099c4
  40cc79:	or     esi,DWORD PTR [ebx]
  40cc7b:	add    BYTE PTR [ecx-0x11],al
  40cc7e:	in     al,dx
  40cc7f:	lods   eax,DWORD PTR ds:[esi]
  40cc80:	xlat   BYTE PTR ds:[ebx]
  40cc81:	adc    BYTE PTR [edx+0x772a4f08],bl
  40cc87:	pusha  
  40cc88:	push   cs
  40cc89:	xchg   ecx,eax
  40cc8a:	jae    0x40cc5e
  40cc8c:	ja     0x40ccdf
  40cc8e:	std    
  40cc8f:	out    dx,eax
  40cc90:	in     eax,dx
  40cc91:	fs sbb bl,dl
  40cc94:	sub    DWORD PTR es:[esi-0x185d848d],0x9033ef7c
  40cc9f:	out    0x69,al
  40cca1:	ins    DWORD PTR es:[edi],dx
  40cca2:	and    eax,0xdc007cba
  40cca7:	inc    esi
  40cca8:	mov    ds:0x225e4fb4,eax
  40ccad:	sti    
  40ccae:	and    BYTE PTR [esi],dh
  40ccb0:	mov    bl,0xb4
  40ccb2:	int    0x98
  40ccb4:	nop
  40ccb5:	mov    al,0x37
  40ccb7:	(bad)  
  40ccb8:	mov    edx,0x166f911
  40ccbd:	scas   al,BYTE PTR es:[edi]
  40ccbe:	xlat   BYTE PTR ds:[ebx]
  40ccbf:	xchg   ebx,eax
  40ccc0:	jmp    0x29d0:0xa9518c0d
  40ccc7:	xor    al,0x3
  40ccc9:	jno    0x40cd26
  40cccb:	(bad)  
  40cccc:	pop    eax
  40cccd:	repz out dx,al
  40cccf:	jbe    0x40cd43
  40ccd1:	lods   eax,DWORD PTR ds:[esi]
  40ccd2:	push   ebp
  40ccd3:	or     esi,ebx
  40ccd5:	sbb    eax,0xe0c1d9d
  40ccda:	dec    edx
  40ccdb:	mov    eax,ds:0xdc8e902c
  40cce0:	xor    eax,0x3c885cfb
  40cce5:	xchg   ebp,eax
  40cce6:	mov    ebx,0x75f2dd82
  40cceb:	fs sbb eax,0xffe2c8d7
  40ccf1:	sub    BYTE PTR [eax+0x2cca2ec2],cl
  40ccf7:	enter  0x84f1,0xd6
  40ccfb:	mov    edi,0xe097cdfc
  40cd00:	pop    edi
  40cd01:	dec    DWORD PTR [ecx-0x16cfbd37]
  40cd07:	dec    DWORD PTR [ebx+edi*8]
  40cd0a:	aas    
  40cd0b:	sbb    al,0x5d
  40cd0d:	xchg   DWORD PTR [ebp+0x253f7af8],ecx
  40cd13:	add    ecx,DWORD PTR [edx-0xfe1cdbe]
  40cd19:	jecxz  0x40ccd9
  40cd1b:	sbb    DWORD PTR [ebp-0x56],ecx
  40cd1e:	jmp    0xe9bc6e08
  40cd23:	dec    edi
  40cd24:	xchg   ebx,eax
  40cd25:	mov    ds:0x7861042d,eax
  40cd2a:	mov    dl,0x6
  40cd2c:	popf   
  40cd2d:	sub    DWORD PTR [ebx+0x134ce891],edi
  40cd33:	xchg   edi,eax
  40cd34:	test   ch,0x37
  40cd37:	xchg   ebx,eax
  40cd38:	mov    ah,0x4f
  40cd3a:	and    BYTE PTR [ecx-0x2a],0xd3
  40cd3e:	je     0x40ccd5
  40cd40:	jae    0x40ccd1
  40cd42:	jmp    0x40cd9e
  40cd44:	jecxz  0x40cd37
  40cd46:	(bad)  
  40cd47:	or     eax,0x143d9cd4
  40cd4c:	call   0xb6497a88
  40cd51:	call   0xadad8fb7
  40cd56:	or     ecx,esp
  40cd58:	xchg   edx,eax
  40cd59:	ins    DWORD PTR es:[edi],dx
  40cd5a:	jg     0x40cd4b
  40cd5c:	sub    BYTE PTR [eax+ebx*2+0x771a3050],bl
  40cd63:	cmp    esp,esp
  40cd65:	pop    DWORD PTR [edx+0x235fab78]
  40cd6b:	in     eax,dx
  40cd6c:	and    DWORD PTR [esi-0x54],esp
  40cd6f:	add    eax,0x65814fd2
  40cd74:	(bad)  
  40cd75:	jle    0x40cd7c
  40cd77:	leave  
  40cd78:	ffreep st(1)
  40cd7a:	dec    ecx
  40cd7b:	sbb    al,BYTE PTR [edi+0x3ef362f0]
  40cd81:	push   ebx
  40cd82:	add    eax,0x2e7465b0
  40cd87:	jno    0x40cda9
  40cd89:	jmp    0x40cd9b
  40cd8b:	ja     0x40cd66
  40cd8d:	das    
  40cd8e:	sub    DWORD PTR [edx+esi*8-0x62],ecx
  40cd92:	mov    bh,0x56
  40cd94:	push   ebp
  40cd95:	mov    ebx,0x73edb37c
  40cd9a:	rcr    BYTE PTR [ecx+ebp*8],cl
  40cd9d:	cmp    DWORD PTR [edx-0x36],ebp
  40cda0:	jp     0x40cd6a
  40cda2:	mov    DWORD PTR [ebp+esi*2-0x6fdff0ee],ebx
  40cda9:	test   dl,0x9c
  40cdac:	ja     0x40cdca
  40cdae:	into   
  40cdaf:	arpl   WORD PTR [edi],sp
  40cdb1:	xchg   edi,eax
  40cdb2:	pop    ss
  40cdb3:	sbb    cl,BYTE PTR [edx+0x14]
  40cdb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdb7:	sbb    al,0x61
  40cdb9:	shl    edi,1
  40cdbb:	push   ds
  40cdbc:	dec    ebp
  40cdbd:	dec    ebp
  40cdbe:	cmp    edx,0xffffff9e
  40cdc1:	and    eax,0xcb61da0
  40cdc6:	xor    eax,0x40e2d763
  40cdcb:	ret    0x83ee
  40cdce:	jmp    0x8962:0x3f2b1ec9
  40cdd5:	sbb    ch,ch
  40cdd7:	retf   
  40cdd8:	jmp    0x9d78f840
  40cddd:	cli    
  40cdde:	mul    BYTE PTR [edi+0xf]
  40cde1:	sbb    bh,BYTE PTR [edx]
  40cde3:	mov    dl,0x7
  40cde5:	pop    ebx
  40cde6:	xchg   esi,eax
  40cde7:	fistp  DWORD PTR [ebp+eax*8-0x3372c479]
  40cdee:	mov    ch,0x4f
  40cdf0:	cwde   
  40cdf1:	cmp    al,0xea
  40cdf3:	push   cs
  40cdf4:	sbb    al,0x41
  40cdf6:	dec    esp
  40cdf7:	mov    ecx,0xb68b0a1c
  40cdfc:	xchg   ecx,eax
  40cdfd:	repz add al,0xf2
  40ce00:	pop    edx
  40ce01:	cmp    DWORD PTR [ecx-0x15a8848],ecx
  40ce07:	and    DWORD PTR [edx-0x32],0x21461c35
  40ce0e:	outs   dx,BYTE PTR ds:[esi]
  40ce0f:	adc    al,0x57
  40ce11:	pop    es
  40ce12:	xchg   edx,eax
  40ce13:	das    
  40ce14:	jb     0x40ce8c
  40ce16:	gs lahf 
  40ce18:	rol    DWORD PTR [ecx+0x7ecba91],cl
  40ce1e:	cmp    eax,0x2c08faf9
  40ce23:	jmp    0xb43cb31f
  40ce28:	popa   
  40ce29:	ret    0x5b34
  40ce2c:	lahf   
  40ce2d:	enter  0xcdeb,0x61
  40ce31:	inc    esi
  40ce32:	cmp    dl,cl
  40ce34:	mov    bh,0x43
  40ce36:	outs   dx,BYTE PTR ds:[esi]
  40ce37:	sbb    eax,0x2e364102
  40ce3c:	pushf  
  40ce3d:	dec    esi
  40ce3e:	sub    dl,0x3
  40ce41:	sub    BYTE PTR [ebp+0x1a0f454a],0x47
  40ce48:	sar    BYTE PTR [ebx-0x5b],0xe7
  40ce4c:	mov    dl,BYTE PTR [ecx-0x4229e13]
  40ce52:	add    al,0x99
  40ce54:	stos   BYTE PTR es:[edi],al
  40ce55:	and    BYTE PTR [ecx-0xedd7bc],bl
  40ce5b:	inc    ebp
  40ce5c:	call   0x6cc7a2b3
  40ce61:	cmova  eax,eax
  40ce64:	mov    edi,0x4c71ea7f
  40ce69:	xor    al,0x7c
  40ce6b:	lahf   
  40ce6c:	mov    esi,0x5ee2409e
  40ce71:	or     esi,ebp
  40ce73:	iret   
  40ce74:	idiv   DWORD PTR [esi-0xe]
  40ce77:	push   eax
  40ce78:	inc    eax
  40ce79:	in     eax,dx
  40ce7a:	shl    edi,1
  40ce7c:	xor    cl,cl
  40ce7e:	inc    eax
  40ce7f:	icebp  
  40ce80:	les    ecx,FWORD PTR [esi+ecx*1+0x40]
  40ce84:	jg     0x40ce96
  40ce86:	mov    ds:0x4b974a3b,eax
  40ce8b:	push   edi
  40ce8c:	(bad)  
  40ce8d:	cmp    al,0x8f
  40ce8f:	adc    edx,ebp
  40ce91:	dec    esi
  40ce92:	pop    edi
  40ce93:	retf   
  40ce94:	xchg   ecx,eax
  40ce95:	cld    
  40ce96:	in     eax,0x21
  40ce98:	xor    BYTE PTR [eax],0x3d
  40ce9b:	sahf   
  40ce9c:	mov    ebp,DWORD PTR [ecx]
  40ce9e:	cld    
  40ce9f:	push   esp
  40cea0:	ror    dl,cl
  40cea2:	dec    ebp
  40cea3:	mov    DWORD PTR [edi+0x5e],esi
  40cea6:	stc    
  40cea7:	inc    esi
  40cea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cea9:	les    esp,FWORD PTR [edx]
  40ceab:	cmp    DWORD PTR ds:0xa0fa12a2,ebx
  40ceb1:	push   cs
  40ceb2:	jbe    0x40cf1f
  40ceb4:	std    
  40ceb5:	or     ebx,DWORD PTR [ebp+0xe]
  40ceb8:	loopne 0x40cf35
  40ceba:	lahf   
  40cebb:	and    ecx,DWORD PTR [esi]
  40cebd:	pusha  
  40cebe:	add    ebx,DWORD PTR [ecx]
  40cec0:	mov    ecx,0xebf03855
  40cec5:	sub    ch,ch
  40cec7:	mov    BYTE PTR [esi+ebp*1+0x2fb5eb6],dh
  40cece:	push   edi
  40cecf:	inc    ebp
  40ced0:	sbb    edx,DWORD PTR [edi]
  40ced2:	call   DWORD PTR ds:0xbc0c867a
  40ced8:	inc    ecx
  40ced9:	push   ebp
  40ceda:	aad    0x0
  40cedc:	push   esi
  40cedd:	jns    0x40ced2
  40cedf:	sub    esp,DWORD PTR [eax-0x4d]
  40cee2:	addr16 aaa 
  40cee4:	cmp    al,0xf1
  40cee6:	mov    ch,0x27
  40cee8:	add    eax,edi
  40ceea:	pop    ebx
  40ceeb:	sbb    BYTE PTR [edi+0x41],ch
  40ceee:	retf   0x57af
  40cef1:	jge    0x40cf5f
  40cef3:	pop    esi
  40cef4:	or     ebp,eax
  40cef6:	mov    DWORD PTR [esi+0x4c],edi
  40cef9:	mov    ah,dl
  40cefb:	sub    DWORD PTR [ecx+edi*2-0x10],eax
  40ceff:	inc    esi
  40cf00:	test   al,0x25
  40cf02:	xchg   ecx,eax
  40cf03:	fwait
  40cf04:	mov    esi,0x764d1b54
  40cf09:	inc    eax
  40cf0a:	fs dec esi
  40cf0c:	mov    ebx,0x528f1f7f
  40cf11:	jae    0x40cec1
  40cf13:	push   ebp
  40cf14:	push   edi
  40cf15:	mov    esi,0xfc944aa
  40cf1a:	add    dh,BYTE PTR [eax-0x70]
  40cf1d:	fisub  DWORD PTR [edx-0x56]
  40cf20:	push   ss
  40cf21:	es pop edx
  40cf23:	lahf   
  40cf24:	lods   eax,DWORD PTR ds:[esi]
  40cf25:	inc    edi
  40cf26:	call   0xbfeb:0x190922a
  40cf2d:	pusha  
  40cf2e:	inc    esp
  40cf2f:	ja     0x40cefd
  40cf31:	mov    edx,?
  40cf33:	imul   esp,DWORD PTR [ebx+edx*8-0x54],0x20
  40cf38:	inc    edx
  40cf39:	daa    
  40cf3a:	jo     0x40cf8b
  40cf3c:	(bad)  
  40cf3d:	in     al,0x2c
  40cf3f:	cmp    BYTE PTR [edi-0x3f],dh
  40cf42:	xor    BYTE PTR ds:0x15ef6a63,ch
  40cf48:	fs dec ebp
  40cf4a:	sbb    BYTE PTR [edx+0x11593dce],bh
  40cf50:	neg    DWORD PTR [ecx-0x4f6b48b7]
  40cf56:	cmp    BYTE PTR [esi+0x22],ch
  40cf59:	fwait
  40cf5a:	enter  0x95d9,0xa7
  40cf5e:	pop    ebp
  40cf5f:	xchg   ebx,eax
  40cf60:	push   cs
  40cf61:	cs cmp al,0x62
  40cf64:	mov    WORD PTR [edx+0x5b7e9ab9],ss
  40cf6a:	(bad)  
  40cf6b:	fcomp  DWORD PTR [ebx-0x128c1321]
  40cf71:	ins    BYTE PTR es:[edi],dx
  40cf72:	ja     0x40cf40
  40cf74:	adc    BYTE PTR [ebx+0x5d01dffa],0xb4
  40cf7b:	pop    ds
  40cf7c:	pop    esp
  40cf7d:	popf   
  40cf7e:	jmp    0x40cf5e
  40cf80:	or     esi,DWORD PTR [edx]
  40cf82:	imul   edx,DWORD PTR [eax-0x4b0a8ea],0x51f6a4bd
  40cf8c:	jo     0x40cfcd
  40cf8e:	sti    
  40cf8f:	test   al,0xd
  40cf91:	mov    ebx,?
  40cf93:	in     al,0x5f
  40cf95:	test   eax,0xb21cf9e3
  40cf9a:	out    dx,al
  40cf9b:	xchg   esi,eax
  40cf9c:	jno    0x40cf74
  40cf9e:	sbb    dl,BYTE PTR [edx+eax*2]
  40cfa1:	xor    eax,0xf813c0ab
  40cfa6:	sub    eax,0xe869223e
  40cfab:	shr    DWORD PTR [eax-0x589094f7],0xf
  40cfb2:	xchg   edx,eax
  40cfb3:	adc    BYTE PTR [edi+0x3c2a74cb],bh
  40cfb9:	adc    al,ah
  40cfbb:	js     0x40d024
  40cfbd:	sbb    DWORD PTR [edx],0xffffffd2
  40cfc0:	jg     0x40d00e
  40cfc2:	cld    
  40cfc3:	stos   BYTE PTR es:[edi],al
  40cfc4:	and    al,0x32
  40cfc6:	idiv   BYTE PTR gs:[ebp-0x61]
  40cfca:	xchg   ebp,ecx
  40cfcc:	mov    esp,0x76c03d1c
  40cfd1:	fcmovne st,st(3)
  40cfd3:	or     ebp,DWORD PTR [esi-0x50d375a9]
  40cfd9:	popa   
  40cfda:	or     BYTE PTR [edi+ebp*8-0x41],0xac
  40cfdf:	mov    dh,0x7b
  40cfe1:	retf   
  40cfe2:	mov    al,0x78
  40cfe4:	(bad)  [eax+0x3d]
  40cfe7:	out    0x70,eax
  40cfe9:	sbb    BYTE PTR [ecx],bl
  40cfeb:	sbb    edx,DWORD PTR [ebp-0x36]
  40cfee:	scas   al,BYTE PTR es:[edi]
  40cfef:	and    eax,0xb00f199a
  40cff4:	add    al,0xd7
  40cff6:	ror    esi,cl
  40cff8:	popa   
  40cff9:	sbb    BYTE PTR es:[ebp-0x52],dh
  40cffd:	(bad)  
  40cffe:	push   ss
  40cfff:	add    al,al
  40d001:	shr    BYTE PTR [ebx-0x3d],cl
  40d004:	jp     0x40d047
  40d006:	jae    0x40cf98
  40d008:	pop    edi
  40d009:	jmp    0xe21b:0x8b23fa5a
  40d010:	xor    cl,dl
  40d012:	jbe    0x40d04f
  40d014:	sub    dh,BYTE PTR [ecx+0x26]
  40d017:	aas    
  40d018:	or     ebp,DWORD PTR [eax+0x5667e01]
  40d01e:	out    0x9f,eax
  40d020:	mov    cl,0x70
  40d022:	pop    ecx
  40d023:	sar    ebx,cl
  40d025:	bound  ebp,QWORD PTR [ecx+0xd]
  40d028:	shl    BYTE PTR [ebx+eiz*1-0x3539c785],1
  40d02f:	retf   
  40d030:	sub    DWORD PTR [eax],ebp
  40d032:	mov    eax,0x9609deb9
  40d037:	cmc    
  40d038:	imul   DWORD PTR [ebp-0x6e]
  40d03b:	jp     0x40d0a0
  40d03d:	in     eax,dx
  40d03e:	icebp  
  40d03f:	add    al,0x96
  40d041:	or     ah,BYTE PTR [ecx+eiz*4]
  40d044:	sbb    dh,BYTE PTR [ecx+0x7b]
  40d047:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d048:	mov    WORD PTR [eax+ebp*2],ds
  40d04b:	mov    DWORD PTR ds:0xdeac96b5,ecx
  40d051:	push   ebp
  40d052:	lds    ebx,FWORD PTR [esi]
  40d054:	outs   dx,BYTE PTR ds:[esi]
  40d055:	sbb    edx,esp
  40d057:	fs inc edx
  40d059:	mov    cl,0x81
  40d05b:	cmp    eax,0x86120172
  40d060:	push   ss
  40d061:	inc    edx
  40d062:	fmul   QWORD PTR [eax]
  40d064:	aam    0x30
  40d066:	mov    ch,0x91
  40d068:	mov    al,0xc6
  40d06a:	out    0xe7,eax
  40d06c:	pushf  
  40d06d:	bound  edi,QWORD PTR [ecx+ecx*1]
  40d070:	rcl    ch,cl
  40d072:	bound  ebx,QWORD PTR [ecx-0x64adbd0f]
  40d078:	mov    bl,0xa3
  40d07a:	dec    esp
  40d07b:	xchg   esp,eax
  40d07c:	mov    esp,0xd17196ea
  40d081:	or     eax,0x551ee0c
  40d086:	ret    0x4b14
  40d089:	jmp    0x29362960
  40d08e:	aaa    
  40d08f:	imul   edi,DWORD PTR [eax],0xc921bd6f
  40d095:	xchg   esp,eax
  40d096:	pushw  ss
  40d098:	sbb    al,0xcc
  40d09a:	hlt    
  40d09b:	mov    al,ds:0x9e35efca
  40d0a0:	add    ebx,ecx
  40d0a2:	arpl   dx,si
  40d0a4:	jmp    FWORD PTR [edx+0x642ea810]
  40d0aa:	sub    ebx,DWORD PTR [eax-0x6761a0df]
  40d0b0:	mov    eax,ds:0xb1492b8f
  40d0b5:	mov    eax,ds:0x56034fe
  40d0ba:	dec    esi
  40d0bb:	fnstenv ds:0xdbdfabd7
  40d0c1:	iret   
  40d0c2:	arpl   si,ax
  40d0c4:	shl    DWORD PTR [esi+ebx*2+0x68],cl
  40d0c8:	jae    0x40d12d
  40d0ca:	test   al,0xae
  40d0cc:	sti    
  40d0cd:	ins    BYTE PTR es:[edi],dx
  40d0ce:	and    DWORD PTR [eax-0x5d],edx
  40d0d1:	enter  0x3ceb,0x6d
  40d0d5:	mov    eax,0x8345e5ac
  40d0da:	pcmpeqd mm2,QWORD PTR [ebp-0x22]
  40d0de:	adc    bl,BYTE PTR [eax-0x6e]
  40d0e1:	cmp    al,0x7
  40d0e3:	mov    bl,0xab
  40d0e5:	inc    ecx
  40d0e6:	push   0xc3dd4b3d
  40d0eb:	in     eax,0x53
  40d0ed:	dec    edx
  40d0ee:	adc    BYTE PTR [edx-0x722a6a2d],bh
  40d0f4:	push   es
  40d0f5:	jo     0x40d16c
  40d0f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0f8:	test   al,0xf6
  40d0fa:	adc    al,0x43
  40d0fc:	pop    esp
  40d0fd:	fsubr  DWORD PTR [edx-0x390d32fa]
  40d103:	or     bl,BYTE PTR [esi-0x7]
  40d106:	xlat   BYTE PTR ds:[ebx]
  40d107:	and    edx,DWORD PTR [ebx-0x65]
  40d10a:	adc    eax,0x69897353
  40d10f:	call   0xd0292792
  40d114:	mov    esp,0x50bd00be
  40d119:	and    DWORD PTR [edx+ebx*2],0x85ebf2
  40d120:	bound  esi,QWORD PTR [edi+0x21]
  40d123:	aas    
  40d124:	(bad)  
  40d126:	push   ss
  40d127:	sbb    edx,ebp
  40d129:	retf   
  40d12a:	or     al,0x9f
  40d12c:	pop    eax
  40d12d:	and    edx,ebx
  40d12f:	push   ebp
  40d130:	fstp   QWORD PTR [ebx-0x32e3fedd]
  40d136:	mov    ebp,0x697e979d
  40d13b:	outs   dx,DWORD PTR ds:[esi]
  40d13c:	out    0x83,al
  40d13e:	and    eax,0xec314d2a
  40d143:	xor    edi,ecx
  40d145:	gs std 
  40d147:	and    eax,DWORD PTR [eax]
  40d149:	lea    eax,[eax]
  40d14b:	repnz retf 0xbc5
  40d14f:	nop
  40d150:	scas   al,BYTE PTR es:[edi]
  40d151:	cwde   
  40d152:	inc    ebx
  40d153:	fwait
  40d154:	adc    dl,ah
  40d156:	push   ds
  40d157:	sub    dh,ah
  40d159:	rol    DWORD PTR [edx+0x25],1
  40d15c:	sar    ebp,1
  40d15e:	or     ah,BYTE PTR [edx-0x7]
  40d161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d162:	mov    WORD PTR [eax],fs
  40d164:	pop    edx
  40d165:	and    dl,BYTE PTR [ebx-0x516b2200]
  40d16b:	jbe    0x40d10a
  40d16d:	out    dx,eax
  40d16e:	pusha  
  40d16f:	out    0x5e,al
  40d171:	jo     0x40d169
  40d173:	rcr    BYTE PTR [eax],cl
  40d175:	or     ecx,ecx
  40d177:	aas    
  40d178:	push   0x833930bc
  40d17d:	mov    edi,0xb1746f9c
  40d182:	test   eax,0x99949545
  40d187:	jbe    0x40d1c2
  40d189:	iret   
  40d18a:	lods   eax,DWORD PTR ds:[esi]
  40d18b:	mov    ds:0x5ffa6b95,al
  40d190:	mov    ebp,0x6d7a605a
  40d195:	jae    0x40d198
  40d197:	pop    ds
  40d198:	out    dx,al
  40d199:	stos   DWORD PTR es:[edi],eax
  40d19a:	cwde   
  40d19b:	jl     0x40d1db
  40d19d:	out    dx,al
  40d19e:	adc    eax,0x88cf829f
  40d1a3:	in     al,0x13
  40d1a5:	dec    eax
  40d1a6:	dec    ecx
  40d1a7:	jp     0x40d157
  40d1a9:	jl     0x40d1fe
  40d1ab:	pop    ss
  40d1ac:	fistp  QWORD PTR ds:0xc294ed8f
  40d1b2:	push   cs
  40d1b3:	mov    bh,dh
  40d1b5:	cmp    eax,0x42066376
  40d1ba:	scas   al,BYTE PTR es:[edi]
  40d1bb:	or     DWORD PTR [edx],ebx
  40d1bd:	fisubr WORD PTR ds:0x92b5f28a
  40d1c3:	sub    al,BYTE PTR [edx-0x684c527]
  40d1c9:	xchg   DWORD PTR [esi],edi
  40d1cb:	xor    eax,0x9f4664e1
  40d1d0:	scas   al,BYTE PTR es:[edi]
  40d1d1:	lea    eax,[esi+0xfe15349]
  40d1d7:	sub    BYTE PTR [ebx+0x58],al
  40d1da:	pop    ebp
  40d1db:	push   esi
  40d1dc:	and    DWORD PTR [eax],0x3bae8366
  40d1e2:	sub    ebp,edi
  40d1e4:	jmp    0xca2accf1
  40d1e9:	and    BYTE PTR [ebx-0x138f7d82],dl
  40d1ef:	ja     0x40d227
  40d1f1:	push   cs
  40d1f2:	push   0xffffffff
  40d1f4:	int3   
  40d1f5:	xor    edi,DWORD PTR [edi+0x3005942f]
  40d1fb:	sub    ebx,DWORD PTR [ecx-0x42]
  40d1fe:	and    edi,DWORD PTR [ecx]
  40d200:	div    DWORD PTR [esi-0x10]
  40d203:	jno    0x40d265
  40d205:	std    
  40d206:	mov    BYTE PTR [ecx],0x0
  40d209:	(bad)
  40d20d:	mov    eax,ds:0xb13dad3b
  40d212:	aaa    
  40d213:	sbb    BYTE PTR [ecx-0x1e881ad8],0xd8
  40d21a:	or     BYTE PTR [ebp-0x5a5a1a1f],cl
  40d220:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40d222:	jge    0x40d20e
  40d224:	jns    0x40d1e2
  40d226:	(bad)  
  40d227:	jae    0x40d25c
  40d229:	sub    dh,BYTE PTR [ebx]
  40d22b:	bound  edx,QWORD PTR [ebx-0x79a6fc5a]
  40d231:	shl    DWORD PTR [ebx-0x57],1
  40d234:	popa   
  40d235:	jmp    FWORD PTR [edx-0x40]
  40d238:	xchg   ebx,eax
  40d239:	adc    eax,0x1dc93c73
  40d23e:	(bad)  
  40d23f:	arpl   WORD PTR [ebx],bx
  40d241:	mov    dl,0x4
  40d243:	or     cl,dl
  40d245:	in     al,dx
  40d246:	retf   0x9c4f
  40d249:	jecxz  0x40d25c
  40d24b:	lock ins BYTE PTR es:[edi],dx
  40d24d:	cmp    al,al
  40d24f:	aas    
  40d250:	inc    esi
  40d251:	jb     0x40d217
  40d253:	cmp    DWORD PTR [edi-0x6],ecx
  40d256:	add    edx,0x52
  40d259:	dec    edx
  40d25a:	pop    esp
  40d25b:	test   eax,0xbcb873c9
  40d260:	sbb    eax,0x9ff2f46
  40d265:	push   edi
  40d266:	sahf   
  40d267:	retf   
  40d268:	(bad)  
  40d269:	and    bh,BYTE PTR [edi]
  40d26b:	jne    0x40d2c6
  40d26d:	das    
  40d26e:	pop    es
  40d26f:	mov    ds,edi
  40d271:	dec    eax
  40d272:	jle    0x40d2b6
  40d274:	retf   0x9cd
  40d277:	mov    edi,0xed5991df
  40d27c:	xchg   edi,eax
  40d27d:	outs   dx,BYTE PTR ds:[esi]
  40d27e:	mov    ebp,0x2c986d7c
  40d283:	mov    bh,0xd1
  40d285:	and    ebp,DWORD PTR [esi]
  40d287:	dec    edx
  40d288:	hlt    
  40d289:	imul   BYTE PTR [edi+eiz*2]
  40d28c:	and    DWORD PTR [esi+0x449c3644],edi
  40d292:	push   esi
  40d293:	and    bl,BYTE PTR [eax+0x38]
  40d296:	nop
  40d297:	fsubrp st(0),st
  40d299:	mov    ss,WORD PTR [esi-0x44712701]
  40d29f:	mov    dh,0xff
  40d2a1:	adc    esi,ecx
  40d2a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2a4:	aaa    
  40d2a5:	mov    gs,WORD PTR [eax-0x821f6f]
  40d2ab:	lock inc esi
  40d2ad:	(bad)  
  40d2ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2af:	and    eax,0x5c3f81b2
  40d2b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2b5:	pop    ecx
  40d2b6:	stos   DWORD PTR es:[edi],eax
  40d2b7:	daa    
  40d2b8:	sub    esp,DWORD PTR [edx]
  40d2ba:	lock mov BYTE PTR fs:[eax+0x69249b69],bl
  40d2c2:	or     DWORD PTR [esi+0x24c42ab9],ebx
  40d2c8:	sub    ah,BYTE PTR [eax-0x7264e03b]
  40d2ce:	jne    0x40d2e5
  40d2d0:	stos   DWORD PTR es:[edi],eax
  40d2d1:	loop   0x40d305
  40d2d3:	retf   0x3da9
  40d2d6:	stos   BYTE PTR es:[edi],al
  40d2d7:	stos   BYTE PTR es:[edi],al
  40d2d8:	xchg   edi,eax
  40d2d9:	stos   BYTE PTR es:[edi],al
  40d2da:	pop    es
  40d2db:	inc    eax
  40d2dc:	add    al,0xd0
  40d2de:	and    ebp,0xa0f3b95e
  40d2e4:	mov    ebx,0x8b71786e
  40d2e9:	mov    bl,0x9f
  40d2ec:	lods   al,BYTE PTR ds:[esi]
  40d2ed:	call   0x1330:0x3fe95273
  40d2f4:	mov    esp,DWORD PTR [ebp-0x59]
  40d2f7:	xchg   edx,eax
  40d2f8:	out    0xe5,al
  40d2fa:	arpl   cx,ax
  40d2fc:	inc    edx
  40d2fd:	and    DWORD PTR [edx+ebp*8+0x3d],edi
  40d301:	jbe    0x40d2e9
  40d303:	push   0x27264601
  40d308:	mov    ebp,0x2f2f639e
  40d30d:	mov    fs:0x1121bfa9,al
  40d313:	mov    esi,0x7cef7b6c
  40d318:	adc    ecx,DWORD PTR [ecx-0xe]
  40d31b:	shl    DWORD PTR [esi+0x4fc19188],1
  40d321:	sbb    eax,0x3be73140
  40d326:	daa    
  40d327:	mov    edx,DWORD PTR [esi-0x62]
  40d32a:	add    bh,bh
  40d32c:	clc    
  40d32d:	sub    ebx,DWORD PTR [ebx+esi*1]
  40d330:	dec    ebp
  40d331:	xchg   edi,eax
  40d332:	lock xchg esp,eax
  40d334:	fs inc eax
  40d336:	aas    
  40d337:	mov    ebx,0xfdc57044
  40d33c:	ret    0xfe9a
  40d33f:	xchg   esi,eax
  40d340:	pop    edi
  40d341:	cmp    DWORD PTR [esi-0x253002df],0xffffff9a
  40d348:	in     al,dx
  40d349:	mov    bh,0x4b
  40d34b:	and    BYTE PTR [esi],bl
  40d34d:	or     al,0x7a
  40d34f:	push   cs
  40d350:	lahf   
  40d351:	and    dl,0xad
  40d354:	add    BYTE PTR [ecx],dl
  40d356:	push   ss
  40d357:	xor    DWORD PTR [edi],edi
  40d359:	push   0xfffffffc
  40d35b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d35c:	mov    ebp,DWORD PTR [ebx-0x79]
  40d35f:	add    bl,BYTE PTR [ebx+0x3d]
  40d362:	out    dx,al
  40d363:	adc    eax,0xa6ea8557
  40d368:	and    esp,DWORD PTR [ecx-0x6]
  40d36b:	dec    ebx
  40d36c:	jp     0x40d3a5
  40d36e:	add    cl,dh
  40d370:	test   cl,ah
  40d372:	rcl    BYTE PTR [edi],0x5c
  40d375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d376:	scas   al,BYTE PTR es:[edi]
  40d377:	aam    0xdd
  40d379:	or     DWORD PTR [esi+0x3e3eb0a],edi
  40d37f:	popa   
  40d380:	xchg   esp,eax
  40d381:	mov    eax,fs
  40d383:	and    ch,dh
  40d385:	dec    ebp
  40d386:	ret    
  40d387:	(bad)  
  40d388:	sbb    dl,BYTE PTR [ebp-0x3236e96c]
  40d38e:	shr    DWORD PTR [ebx-0x7d],0x44
  40d392:	cdq    
  40d393:	aad    0x62
  40d395:	mov    ch,0xd0
  40d397:	ret    
  40d398:	stos   BYTE PTR es:[edi],al
  40d399:	sub    eax,0x347a0800
  40d39e:	test   DWORD PTR ds:0x29352a7b,ebp
  40d3a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3a5:	push   0x94784c6c
  40d3aa:	test   eax,0x3a7bb1e5
  40d3af:	int3   
  40d3b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3b1:	xlat   BYTE PTR ds:[ebx]
  40d3b2:	les    ebx,FWORD PTR [ecx+ebp*2-0x7e3af102]
  40d3b9:	into   
  40d3ba:	(bad)  
  40d3bb:	lahf   
  40d3bc:	push   0x52
  40d3be:	loop   0x40d397
  40d3c0:	sbb    esi,edi
  40d3c2:	cmp    eax,0x404f017b
  40d3c7:	stos   BYTE PTR es:[edi],al
  40d3c8:	and    eax,0x4297ea4c
  40d3cd:	mov    dl,0x86
  40d3cf:	test   al,0x1e
  40d3d1:	sbb    DWORD PTR [edx-0x3b],edx
  40d3d4:	or     DWORD PTR [edx+0x149affb4],ecx
  40d3da:	sub    esp,ebx
  40d3dc:	cmp    DWORD PTR [ecx+0x2e],esi
  40d3df:	mov    dh,0x53
  40d3e1:	and    DWORD PTR [esi-0x42f1d663],0xffffff8e
  40d3e8:	out    0x71,eax
  40d3ea:	xor    BYTE PTR [edi+0x5f8e0e3c],dh
  40d3f0:	adc    ch,BYTE PTR [ebx+0x66eb5909]
  40d3f6:	mov    cl,0x1f
  40d3f8:	xchg   edi,eax
  40d3f9:	aas    
  40d3fa:	repz cli 
  40d3fc:	lea    ecx,[ebp+0x4a]
  40d3ff:	mov    eax,ds:0x461288e7
  40d404:	mov    ds:0x57bd2430,eax
  40d409:	inc    eax
  40d40a:	mov    dh,0x2c
  40d40c:	mov    dh,0x97
  40d40e:	ins    DWORD PTR es:[edi],dx
  40d40f:	pop    edi
  40d410:	mov    ds:0xfdd86f2c,al
  40d415:	push   0x38
  40d417:	cmc    
  40d418:	xchg   BYTE PTR [ebx+0xcb1b73a],bh
  40d41e:	mov    al,0x2b
  40d420:	fdivrp st(1),st
  40d422:	cmp    esp,DWORD PTR [ebx+0x55d8ca46]
  40d428:	add    BYTE PTR [ebx],bl
  40d42a:	es retf 0x4f53
  40d42e:	lods   eax,DWORD PTR ds:[esi]
  40d42f:	inc    ecx
  40d430:	dec    ecx
  40d431:	fwait
  40d432:	addr16 in eax,dx
  40d434:	js     0x40d48c
  40d436:	ins    BYTE PTR es:[edi],dx
  40d437:	xor    BYTE PTR [eax-0x31],bl
  40d43a:	dec    edi
  40d43b:	push   eax
  40d43c:	sub    BYTE PTR [ebp+0x5c],dl
  40d43f:	arpl   WORD PTR [ebp+eiz*2+0x63],si
  40d443:	out    0x86,al
  40d445:	call   0xe30e267e
  40d44a:	and    al,0x7c
  40d44c:	jp     0x40d4c7
  40d44e:	cmp    dh,BYTE PTR [eax+0x75]
  40d451:	adc    ch,BYTE PTR [esi+0x68]
  40d454:	sub    al,0xa0
  40d456:	out    0x6a,al
  40d458:	popf   
  40d459:	mov    al,ds:0x5c02cf03
  40d45e:	add    bl,bh
  40d460:	dec    ecx
  40d461:	or     al,0x73
  40d463:	icebp  
  40d464:	inc    ebx
  40d465:	xor    ecx,edi
  40d467:	dec    esi
  40d468:	or     DWORD PTR [ebx],edi
  40d46a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d46b:	adc    eax,0xb3dcdba
  40d470:	dec    eax
  40d471:	push   esi
  40d472:	push   esp
  40d473:	jecxz  0x40d464
  40d475:	dec    ecx
  40d476:	and    ah,cl
  40d478:	sbb    al,0xd
  40d47a:	mov    ebx,0xcadec52
  40d47f:	dec    esp
  40d480:	in     al,dx
  40d481:	jbe    0x40d467
  40d483:	rol    BYTE PTR [ebx+0x46b769d4],0x53
  40d48a:	push   edi
  40d48b:	jp     0x40d43f
  40d48d:	lds    esi,FWORD PTR [esp+esi*2-0x2bead798]
  40d494:	out    dx,eax
  40d495:	sahf   
  40d496:	bound  esp,QWORD PTR [esi]
  40d498:	pop    eax
  40d499:	mov    ah,0xd4
  40d49b:	mov    DWORD PTR [ecx],edi
  40d49d:	aam    0x92
  40d49f:	cmp    BYTE PTR [ecx+edi*8+0x726df8b],ah
  40d4a6:	mov    cl,0x6a
  40d4a8:	mov    eax,0x510a7d36
  40d4ad:	loopne 0x40d474
  40d4af:	or     BYTE PTR [ebp-0x3e3729c8],dl
  40d4b5:	push   ds
  40d4b6:	pop    eax
  40d4b7:	or     DWORD PTR [ecx-0x105aecd0],0x6
  40d4be:	xchg   ebx,eax
  40d4bf:	mov    cl,0x1
  40d4c1:	add    BYTE PTR [esi+ebx*2],ch
  40d4c4:	mov    eax,0x140fc2b1
  40d4c9:	push   eax
  40d4ca:	or     bh,BYTE PTR [ebp-0x55b8f99c]
  40d4d0:	or     DWORD PTR [eax+eiz*8],esi
  40d4d3:	cld    
  40d4d4:	mov    ebp,eax
  40d4d6:	and    BYTE PTR ds:0xc174ab48,0x23
  40d4dd:	mov    ds,edx
  40d4df:	pusha  
  40d4e0:	adc    eax,0x8392f544
  40d4e5:	jmp    0xcff1:0xab5610ea
  40d4ec:	jge    0x40d547
  40d4ee:	retf   
  40d4ef:	test   eax,0xa1062376
  40d4f4:	mov    edi,0xaa449406
  40d4f9:	out    0x60,al
  40d4fb:	pop    esp
  40d4fc:	add    al,dh
  40d4fe:	pop    eax
  40d4ff:	jno    0x40d4e7
  40d501:	mov    al,BYTE PTR [eax+0x72176629]
  40d507:	add    esp,0x4f
  40d50a:	dec    ebx
  40d50b:	scas   eax,DWORD PTR es:[edi]
  40d50c:	nop
  40d50d:	jne    0x40d523
  40d50f:	adc    edi,DWORD PTR [esp+ebp*2]
  40d512:	sbb    eax,ebx
  40d514:	jg     0x40d4c5
  40d516:	enter  0x607a,0x0
  40d51a:	or     DWORD PTR [edi-0x423fd9db],edi
  40d520:	daa    
  40d521:	push   esi
  40d522:	inc    esi
  40d523:	ins    DWORD PTR es:[edi],dx
  40d524:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d525:	fdivrp st(4),st
  40d527:	jmp    0x5eadb95c
  40d52c:	xchg   DWORD PTR [ebx-0x7],esp
  40d52f:	dec    edi
  40d530:	xchg   ecx,eax
  40d531:	sub    ah,BYTE PTR [esi]
  40d533:	xor    eax,0xaa264359
  40d538:	inc    ebx
  40d539:	pusha  
  40d53a:	pop    ds
  40d53b:	pop    edx
  40d53c:	adc    BYTE PTR [esi],al
  40d53e:	sbb    cl,BYTE PTR [ecx-0x68ad605d]
  40d544:	or     al,0xe2
  40d546:	imul   ecx,DWORD PTR [esi+0x505f52eb],0x8883b3db
  40d550:	aas    
  40d551:	or     BYTE PTR [ecx-0xa],bh
  40d554:	xchg   edx,eax
  40d555:	jle    0x40d538
  40d557:	addr16 mov ds:0xf6f0,al
  40d55b:	inc    ecx
  40d55d:	push   eax
  40d55e:	mov    DWORD PTR [esi],0x28c82918
  40d564:	push   es
  40d565:	inc    ecx
  40d566:	xchg   edx,eax
  40d567:	scas   eax,DWORD PTR es:[edi]
  40d568:	inc    eax
  40d569:	jno    0x40d510
  40d56b:	sar    DWORD PTR [ebx],cl
  40d56d:	sub    eax,0xed97883b
  40d572:	retf   0x9d3c
  40d575:	push   ds
  40d576:	mov    ds:0x2564dfae,al
  40d57b:	aas    
  40d57c:	test   DWORD PTR [ebp+0x5d],0x68491190
  40d583:	es nop
  40d585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d586:	sub    BYTE PTR [eax+edi*1-0x126393e6],dl
  40d58d:	dec    eax
  40d58e:	add    ch,cl
  40d590:	sub    dl,BYTE PTR [ebp-0xe]
  40d593:	pop    ss
  40d594:	outs   dx,BYTE PTR ds:[esi]
  40d595:	test   BYTE PTR [esi],0xac
  40d598:	inc    esp
  40d599:	retf   0xb61d
  40d59c:	mov    esp,0x8a58212c
  40d5a1:	xchg   ebp,eax
  40d5a2:	inc    ebx
  40d5a3:	dec    eax
  40d5a4:	dec    ecx
  40d5a5:	ins    DWORD PTR es:[edi],dx
  40d5a6:	and    eax,0x51c67955
  40d5ab:	leave  
  40d5ac:	fwait
  40d5ad:	mov    al,ds:0xa2411ab9
  40d5b2:	aad    0x32
  40d5b4:	cld    
  40d5b5:	cmc    
  40d5b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5b7:	xor    BYTE PTR [ecx-0x38a6776b],bl
  40d5bd:	mov    edx,0x5ee221e9
  40d5c2:	cwde   
  40d5c3:	inc    ecx
  40d5c4:	cmp    cl,dh
  40d5c6:	gs xor al,0xb8
  40d5c9:	lds    esp,FWORD PTR [eax-0x70f85239]
  40d5cf:	xor    DWORD PTR [ebx],ebx
  40d5d1:	(bad)  
  40d5d2:	in     eax,0x32
  40d5d4:	cli    
  40d5d5:	jb     0x40d5e2
  40d5d7:	mov    cl,0x48
  40d5d9:	hlt    
  40d5da:	or     al,0xcc
  40d5dc:	push   ds
  40d5dd:	sbb    al,0x8c
  40d5df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5e0:	jnp    0x40d61f
  40d5e2:	pop    esp
  40d5e3:	push   cs
  40d5e4:	cmc    
  40d5e5:	xchg   BYTE PTR [ecx],ah
  40d5e7:	je     0x40d64e
  40d5e9:	loopne 0x40d573
  40d5eb:	and    BYTE PTR [ebx-0x2d18185c],ah
  40d5f1:	aad    0x2e
  40d5f3:	sub    ebp,DWORD PTR [edi+edi*1+0x1c]
  40d5f7:	(bad)  
  40d5f8:	sti    
  40d5f9:	jnp    0x40d5a4
  40d5fb:	das    
  40d5fc:	or     BYTE PTR [ecx-0x3312c5db],al
  40d602:	int    0x40
  40d604:	xchg   edx,eax
  40d605:	lea    edi,[edi]
  40d607:	outs   dx,BYTE PTR ds:[esi]
  40d608:	push   esi
  40d609:	sbb    al,0xc5
  40d60b:	xor    eax,0x77144994
  40d610:	add    dl,cl
  40d612:	xor    DWORD PTR [ecx+0x32b80cc0],esp
  40d618:	cs call 0x4c9a5c9d
  40d61e:	out    0xba,eax
  40d620:	or     dh,bh
  40d622:	inc    edx
  40d623:	out    0xfc,al
  40d625:	add    eax,0xae94a60a
  40d62a:	mov    BYTE PTR [eax+0x23ff00e2],bl
  40d630:	test   al,0xed
  40d632:	js     0x40d602
  40d634:	dec    esp
  40d635:	xchg   edx,eax
  40d636:	dec    BYTE PTR ss:[ecx-0x18]
  40d63a:	pop    ebp
  40d63b:	dec    ebp
  40d63c:	cmp    DWORD PTR [ebx+edi*4-0x44f7ec0a],esp
  40d643:	mov    al,0x3a
  40d645:	je     0x40d670
  40d647:	add    esp,DWORD PTR [ebp+0x61d4cd99]
  40d64d:	(bad)  
  40d64e:	in     al,dx
  40d64f:	pop    eax
  40d650:	xor    DWORD PTR ds:0x3f87fe98,0xffffff9c
  40d657:	mov    dh,0x4d
  40d659:	mov    eax,DWORD PTR [ebx+0x31ea4e27]
  40d65f:	je     0x40d6c4
  40d661:	popf   
  40d662:	fimul  DWORD PTR [ebp-0x79]
  40d665:	out    0x48,eax
  40d667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d668:	mov    edi,0x8ba5d335
  40d66d:	pop    es
  40d66e:	push   0x5c1e0e1a
  40d673:	cmp    al,0x42
  40d675:	and    ebp,DWORD PTR [ebp-0x4e]
  40d678:	clc    
  40d679:	mov    dl,0x98
  40d67b:	or     DWORD PTR [edx+0x11],ebp
  40d67e:	add    eax,0xc2d71ac4
  40d683:	xchg   DWORD PTR [ebp-0x6d],ebx
  40d686:	lods   al,BYTE PTR ds:[esi]
  40d687:	test   al,0x45
  40d689:	pop    esp
  40d68a:	or     al,0xa
  40d68c:	scas   al,BYTE PTR es:[edi]
  40d68d:	call   0xcaad3e3d
  40d692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d693:	xor    eax,0x253cde94
  40d698:	pop    ecx
  40d69a:	xor    BYTE PTR [ebx+0x6e],ah
  40d69d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d69e:	sbb    BYTE PTR [edx],bh
  40d6a0:	or     ah,BYTE PTR [eax+0x11f4e7b8]
  40d6a6:	dec    ecx
  40d6a7:	ret    
  40d6a8:	xchg   ebx,eax
  40d6a9:	pop    ds
  40d6aa:	inc    esp
  40d6ab:	mov    ds:0xa809d0ea,al
  40d6b0:	mov    ds:0x54341cef,eax
  40d6b5:	les    ebx,FWORD PTR [ecx+0x2968d50b]
  40d6bb:	enter  0xf8f8,0x0
  40d6bf:	sahf   
  40d6c0:	dec    esp
  40d6c1:	and    eax,0xd1910b71
  40d6c6:	adc    bh,bl
  40d6c8:	(bad)  
  40d6c9:	mov    bh,ah
  40d6cb:	arpl   WORD PTR [eax],cx
  40d6cd:	mov    esi,0x8c67a851
  40d6d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6d3:	inc    ebx
  40d6d4:	pop    esi
  40d6d5:	mov    al,ds:0x223e85ab
  40d6da:	arpl   dx,sp
  40d6dc:	(bad)  
  40d6de:	dec    eax
  40d6df:	test   eax,0xaab17129
  40d6e4:	add    eax,0xd72e8fa5
  40d6e9:	shl    ebx,1
  40d6eb:	mov    esp,0xab005a21
  40d6f0:	pop    eax
  40d6f1:	xchg   esp,eax
  40d6f2:	jmp    0x40d6db
  40d6f4:	mov    ds:0x39af0b59,al
  40d6f9:	xchg   ecx,eax
  40d6fa:	pop    ecx
  40d6fb:	adc    cl,BYTE PTR [eax+0x4d2a1725]
  40d701:	adc    DWORD PTR [ebx],edi
  40d703:	jb     0x40d775
  40d705:	test   BYTE PTR [eax-0x4611705b],bh
  40d70b:	je     0x40d6b0
  40d70d:	neg    dl
  40d70f:	stos   DWORD PTR es:[edi],eax
  40d710:	fdivr  DWORD PTR [edx+0x4125d769]
  40d716:	cmp    DWORD PTR [edx],0x4641ae77
  40d71c:	lods   eax,DWORD PTR ds:[esi]
  40d71d:	test   al,0x58
  40d71f:	rol    eax,cl
  40d721:	cmp    bl,dl
  40d723:	and    ah,dl
  40d725:	out    dx,eax
  40d726:	xchg   esi,eax
  40d727:	push   edi
  40d728:	push   ss
  40d729:	sbb    eax,0x4f02a2f9
  40d72e:	xor    ecx,edi
  40d730:	jp     0x40d6c7
  40d732:	icebp  
  40d733:	inc    ebp
  40d734:	and    al,0xe0
  40d736:	mov    al,ds:0xe5f1a7de
  40d73b:	push   ebx
  40d73c:	repz xchg esp,eax
  40d73e:	or     esi,DWORD PTR [ecx-0x68]
  40d741:	cli    
  40d742:	mov    al,ds:0xfa15480
  40d747:	sar    ebx,1
  40d749:	iret   
  40d74a:	lea    ebx,[ebp+0x4df6980e]
  40d750:	lock mov ecx,0xbe3e33e5
  40d756:	ss clc 
  40d758:	int3   
  40d759:	out    0x73,al
  40d75b:	mov    edi,0x5c915f09
  40d760:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d761:	icebp  
  40d762:	inc    esi
  40d763:	or     al,0x44
  40d765:	xor    BYTE PTR [ebx-0x2a],0x61
  40d769:	inc    ecx
  40d76a:	pushf  
  40d76b:	sbb    dl,bl
  40d76d:	out    dx,eax
  40d76e:	cmp    al,0x19
  40d770:	add    bh,dh
  40d772:	xor    DWORD PTR [edi],esp
  40d774:	jmp    0xbe7e:0xd64541b2
  40d77b:	add    al,0x78
  40d77d:	outs   dx,DWORD PTR ds:[esi]
  40d77e:	pop    ebx
  40d77f:	inc    edx
  40d780:	xor    bh,BYTE PTR [esi-0x2d]
  40d783:	(bad)  
  40d784:	nop
  40d785:	dec    ebx
  40d786:	stc    
  40d787:	pop    ds
  40d788:	mov    DWORD PTR [ebp-0x36],edx
  40d78b:	mov    ebx,0xb5720994
  40d790:	sbb    ch,BYTE PTR [edx-0x9]
  40d793:	mov    bh,0x3a
  40d795:	je     0x40d7ed
  40d797:	outs   dx,DWORD PTR ds:[esi]
  40d798:	push   ebp
  40d799:	mov    ch,cl
  40d79b:	test   eax,0xf6966839
  40d7a0:	mov    esi,DWORD PTR [esi-0x5f]
  40d7a3:	mov    edx,0xe6c90149
  40d7a8:	outs   dx,BYTE PTR ds:[esi]
  40d7a9:	fist   WORD PTR ds:0x6128381c
  40d7af:	push   ebp
  40d7b0:	and    BYTE PTR [edx-0x4c9e6476],bh
  40d7b6:	adc    BYTE PTR [esi],bl
  40d7b8:	and    eax,0xd1655044
  40d7bd:	and    eax,0x1d907fbc
  40d7c2:	rcr    DWORD PTR [ecx-0x75],cl
  40d7c5:	imul   esi,DWORD PTR [edi],0x11
  40d7c8:	push   eax
  40d7c9:	test   eax,0xdcfb8a3c
  40d7ce:	ss jnp 0x40d7f4
  40d7d1:	mov    bh,0x13
  40d7d3:	pop    esp
  40d7d4:	xor    DWORD PTR [eax],esi
  40d7d6:	jae    0x40d81e
  40d7d8:	inc    eax
  40d7d9:	imul   esi,DWORD PTR [ebp+0x7526e27f],0xffffffc1
  40d7e0:	in     al,0x84
  40d7e2:	mov    edx,0x4a26c764
  40d7e7:	sbb    dl,cl
  40d7e9:	ret    
  40d7ea:	pop    ecx
  40d7eb:	fcom   DWORD PTR [ecx+0x5afc1334]
  40d7f1:	imul   esi,edi,0x5480e6b1
  40d7f7:	mov    DWORD PTR [edx],esi
  40d7f9:	or     dh,BYTE PTR [esp+ebx*2+0x75]
  40d7fd:	iret   
  40d7fe:	mov    edx,0xa0c316d2
  40d803:	and    ah,ch
  40d805:	mov    al,ds:0xdff4a3ba
  40d80a:	cmp    esp,esi
  40d80c:	or     DWORD PTR [ebp-0x467ea6a9],edx
  40d812:	lds    edi,FWORD PTR [eax+0x407bffde]
  40d818:	adc    eax,0x727ded79
  40d81d:	cs daa 
  40d81f:	dec    edx
  40d820:	das    
  40d821:	and    ebx,edx
  40d823:	mov    ds:0x2bdd7e4b,al
  40d828:	sub    eax,DWORD PTR [ebp+0x11]
  40d82b:	retf   0xa64d
  40d82e:	jmp    0x553b4159
  40d833:	clc    
  40d834:	xchg   BYTE PTR [ebx+0x271b6225],bl
  40d83a:	or     BYTE PTR [ecx],dl
  40d83c:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40d83e:	dec    esp
  40d83f:	xor    al,0x2f
  40d841:	cmp    dh,BYTE PTR [edx+0x43326c9c]
  40d847:	xchg   ecx,eax
  40d848:	mov    edx,0x39875408
  40d84d:	sub    BYTE PTR ds:0x23a1e6c0,ch
  40d853:	pop    ecx
  40d854:	call   0x5cea:0x494f2fe6
  40d85b:	loop   0x40d865
  40d85d:	fcomp  QWORD PTR [ecx+0x259d0ed7]
  40d863:	test   eax,0x36371602
  40d868:	mov    cl,0x1
  40d86a:	(bad)  
  40d86c:	jmp    0xbd087b9d
  40d871:	add    DWORD PTR [ecx],edi
  40d873:	addr16 retf 
  40d875:	mov    edx,0x5f8b5cbf
  40d87a:	jge    0x40d837
  40d87c:	jbe    0x40d8ae
  40d87e:	icebp  
  40d87f:	mov    dl,BYTE PTR [esi-0x2fcc449e]
  40d885:	jmp    0x40d820
  40d887:	xchg   edx,eax
  40d888:	scas   al,BYTE PTR es:[edi]
  40d889:	popa   
  40d88a:	cdq    
  40d88b:	push   esp
  40d88c:	cmp    eax,0xabd8bed7
  40d891:	retw   0x10d9
  40d895:	mov    edi,eax
  40d897:	aaa    
  40d898:	pop    ecx
  40d899:	mov    DWORD PTR [ebp+0x43],eax
  40d89c:	(bad)  
  40d89d:	fist   WORD PTR [ebp+ebx*8+0x1e]
  40d8a1:	or     esi,ecx
  40d8a3:	clc    
  40d8a4:	ret    
  40d8a5:	jp     0x40d8bd
  40d8a7:	adc    ah,BYTE PTR [edx-0x794490aa]
  40d8ad:	in     eax,0xcc
  40d8af:	xchg   BYTE PTR [edx+0x1a],ah
  40d8b2:	sub    DWORD PTR [esi+0x5d35f46a],edx
  40d8b8:	inc    ebp
  40d8b9:	mov    dl,0xf7
  40d8bb:	rcr    BYTE PTR [ebx-0x64],1
  40d8be:	and    ch,0xbb
  40d8c1:	lods   eax,DWORD PTR ds:[esi]
  40d8c2:	jne    0x40d86f
  40d8c4:	pop    edx
  40d8c5:	loope  0x40d8b3
  40d8c7:	cwde   
  40d8c8:	cwde   
  40d8c9:	std    
  40d8ca:	mov    cl,0x9d
  40d8cc:	inc    eax
  40d8cd:	loope  0x40d8d0
  40d8cf:	mov    ecx,0xdb0f824c
  40d8d4:	hlt    
  40d8d5:	add    esp,DWORD PTR [esi-0x41a5f238]
  40d8db:	daa    
  40d8dc:	fucom  st(3)
  40d8de:	pop    ecx
  40d8df:	pop    esp
  40d8e0:	lods   eax,DWORD PTR ds:[esi]
  40d8e1:	jp     0x40d933
  40d8e3:	mov    ebx,0x3722b26b
  40d8e8:	loopne 0x40d954
  40d8ea:	aas    
  40d8eb:	mov    ch,0x17
  40d8ed:	pop    esi
  40d8ee:	scas   al,BYTE PTR es:[edi]
  40d8ef:	sti    
  40d8f0:	xor    al,0x4b
  40d8f2:	and    BYTE PTR ds:[esi-0x19],0x1e
  40d8f7:	adc    BYTE PTR [ebp-0x41f716e5],bl
  40d8fd:	loop   0x40d90e
  40d8ff:	dec    esi
  40d900:	adc    DWORD PTR [edx],edx
  40d902:	das    
  40d903:	dec    esi
  40d904:	daa    
  40d905:	call   0xecddb3d5
  40d90a:	rol    BYTE PTR [eax+0x6f],cl
  40d90d:	mov    ds:0x52d70647,al
  40d912:	or     al,0x85
  40d914:	mov    esi,0x21489f09
  40d919:	out    dx,eax
  40d91a:	mov    ah,0x8c
  40d91c:	outs   dx,BYTE PTR ds:[esi]
  40d91d:	mov    esp,0x7fed3956
  40d922:	popf   
  40d923:	dec    edi
  40d924:	jno    0x40d91a
  40d926:	push   0xffffff90
  40d928:	sbb    eax,0x820a03c9
  40d92d:	mov    DWORD PTR [esi-0x37b547c1],ebx
  40d933:	int3   
  40d934:	mov    ah,0x68
  40d936:	add    al,0x6c
  40d938:	in     al,dx
  40d939:	add    eax,DWORD PTR [edi-0x624b8fa6]
  40d93f:	mov    eax,ds:0xb733d068
  40d944:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d945:	test   al,0xc3
  40d947:	(bad)  
  40d948:	loop   0x40d97b
  40d94a:	out    0xfb,eax
  40d94c:	pop    ecx
  40d94d:	inc    edx
  40d94e:	out    dx,al
  40d94f:	xchg   ebx,eax
  40d950:	lods   al,BYTE PTR ds:[esi]
  40d951:	int    0x7e
  40d953:	jecxz  0x40d957
  40d955:	mov    dh,0xf5
  40d957:	mov    ch,BYTE PTR [esi+0x36]
  40d95a:	es push cs
  40d95c:	inc    ebx
  40d95d:	xlat   BYTE PTR ds:[ebx]
  40d95e:	test   DWORD PTR [eax],0x7af203c7
  40d964:	addr16 add al,0xb8
  40d967:	inc    edx
  40d968:	xor    eax,0x2f917612
  40d96d:	sub    eax,edx
  40d96f:	mov    WORD PTR [esi+esi*8-0x55],gs
  40d973:	test   DWORD PTR [ecx],edi
  40d975:	jne    0x40d9de
  40d977:	hlt    
  40d978:	cmp    al,0xec
  40d97a:	xor    eax,0x402a797
  40d97f:	adc    al,0xbf
  40d981:	push   ss
  40d982:	lods   eax,DWORD PTR ds:[esi]
  40d983:	shr    DWORD PTR [edi+edi*2-0x11],1
  40d987:	sti    
  40d988:	push   ebx
  40d989:	or     DWORD PTR [esi+0x63c82d00],ebx
  40d98f:	shr    DWORD PTR [ecx],cl
  40d991:	cdq    
  40d992:	sbb    BYTE PTR [eax-0xd398e57],cl
  40d998:	dec    eax
  40d999:	fist   DWORD PTR [ecx+ebx*2-0x48]
  40d99d:	adc    BYTE PTR [edi+0x1c204832],ch
  40d9a3:	adc    al,0xf1
  40d9a5:	bound  edx,QWORD PTR [edi-0x5d8aa5dd]
  40d9ab:	(bad)  
  40d9ac:	lods   eax,DWORD PTR ds:[esi]
  40d9ad:	pop    edx
  40d9ae:	inc    edx
  40d9af:	aas    
  40d9b0:	shl    ch,cl
  40d9b2:	jnp    0x40da18
  40d9b4:	test   DWORD PTR [esp+edx*8-0x22f0e30e],0x17eabca5
  40d9bf:	loopne 0x40d9ea
  40d9c1:	and    eax,0x72b616a3
  40d9c6:	dec    esi
  40d9c7:	jg     0x40d9d4
  40d9c9:	push   0x9028af95
  40d9ce:	clc    
  40d9cf:	outs   dx,DWORD PTR ds:[esi]
  40d9d0:	pop    esp
  40d9d1:	pop    ss
  40d9d2:	dec    edx
  40d9d3:	call   0x528d:0x646d01d0
  40d9da:	lods   eax,DWORD PTR ds:[esi]
  40d9db:	mov    ah,0xb9
  40d9dd:	dec    ecx
  40d9de:	out    dx,al
  40d9df:	jno    0x40d9b9
  40d9e1:	jne    0x40d9ee
  40d9e3:	aam    0x9f
  40d9e5:	pop    ebx
  40d9e6:	or     esi,DWORD PTR [ecx+0x3e]
  40d9e9:	not    DWORD PTR [eax+0x3cbd70e4]
  40d9ef:	add    DWORD PTR [esi-0x22],edi
  40d9f2:	mov    al,ds:0xc507bd2c
  40d9f7:	dec    ebx
  40d9f8:	daa    
  40d9f9:	and    eax,0x8086811f
  40d9fe:	imul   edx,DWORD PTR [esi+ebx*2-0x4c55a9a8],0x4e3fcfd6
  40da09:	neg    BYTE PTR [ebp+0x3de48124]
  40da0f:	ret    
  40da10:	ja     0x40da84
  40da12:	cmp    al,0x4d
  40da14:	mov    ebp,0xdcbe3e58
  40da19:	mov    dh,BYTE PTR [ecx+0x19e41e2d]
  40da1f:	jle    0x40d9f4
  40da21:	add    bl,al
  40da23:	jno    0x40da55
  40da25:	mov    bl,0xa6
  40da27:	xchg   esp,eax
  40da28:	xor    BYTE PTR [ecx],0xe2
  40da2b:	sub    al,dh
  40da2d:	push   es
  40da2e:	cld    
  40da2f:	lds    ecx,FWORD PTR [esi-0x72]
  40da32:	rcr    BYTE PTR [ebx],1
  40da34:	cmp    al,0x34
  40da36:	adc    BYTE PTR [esi-0x40],0xcb
  40da3a:	jne    0x40da8c
  40da3c:	adc    al,0xfe
  40da3e:	and    eax,0xc19c8870
  40da43:	sar    DWORD PTR [esi+0x33],1
  40da46:	and    dl,bh
  40da48:	cmc    
  40da49:	jle    0x40da81
  40da4b:	jae    0x40da73
  40da4d:	cmp    eax,0x460fc1b8
  40da52:	je     0x40da07
  40da54:	dec    eax
  40da55:	mov    bh,0xd0
  40da57:	mov    esp,0xab432a49
  40da5c:	(bad)  
  40da5d:	pop    eax
  40da5e:	imul   esp,DWORD PTR [edi+0x7b1f125],0xa363cb23
  40da68:	and    eax,0x5c009241
  40da6d:	in     eax,dx
  40da6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da6f:	add    BYTE PTR [ecx-0x6d474fd1],ah
  40da75:	jbe    0x40da79
  40da77:	and    al,0x7b
  40da79:	sub    DWORD PTR [esp+ebp*2+0x17fd1875],ebp
  40da80:	jae    0x40da0c
  40da82:	cmc    
  40da83:	je     0x40da5d
  40da85:	xor    al,0x87
  40da87:	(bad)  [edi+edx*1-0x71]
  40da8b:	gs inc esp
  40da8d:	cmp    cl,bh
  40da8f:	mov    eax,ds:0x23d084a0
  40da94:	in     al,dx
  40da95:	mov    eax,ds:0xd78ed305
  40da9a:	xor    ebx,DWORD PTR [edi+0x78dd9c1f]
  40daa0:	js     0x40db20
  40daa2:	outs   dx,BYTE PTR ds:[esi]
  40daa3:	or     esp,DWORD PTR [eax+0x62]
  40daa6:	fld    TBYTE PTR [ebx]
  40daa8:	mov    al,ds:0x1051bea4
  40daad:	sub    DWORD PTR [esi-0x4a],0xfa3b7c73
  40dab4:	leave  
  40dab5:	enter  0x4e5d,0x1b
  40dab9:	push   es
  40daba:	pop    edi
  40dabb:	stos   DWORD PTR es:[edi],eax
  40dabc:	mov    ah,0x1a
  40dabe:	pushf  
  40dabf:	fld    DWORD PTR [ebx+ebx*1]
  40dac2:	ja     0x40da95
  40dac4:	mov    ecx,0x28deb852
  40dac9:	adc    BYTE PTR [ebp-0x32e1170],cl
  40dacf:	mov    dl,0x29
  40dad1:	inc    edi
  40dad2:	and    esi,esi
  40dad4:	icebp  
  40dad5:	jle    0x40db21
  40dad7:	pop    ecx
  40dad8:	ins    DWORD PTR es:[edi],dx
  40dad9:	daa    
  40dada:	test   BYTE PTR [edx+ebx*1+0x5f],bl
  40dade:	mov    ebx,DWORD PTR [esi+0x65]
  40dae1:	dec    edi
  40dae2:	in     eax,0x25
  40dae4:	mov    esp,0xcafb0708
  40dae9:	push   esp
  40daea:	sub    al,0xfa
  40daec:	adc    al,0x97
  40daee:	repz sub eax,0x616c509d
  40daf4:	rol    bl,cl
  40daf6:	int    0x7
  40daf8:	cmp    al,0x12
  40dafa:	push   ds
  40dafb:	adc    dl,bl
  40dafd:	dec    ebx
  40dafe:	jmp    0x29e2:0xa87e
  40db04:	push   ecx
  40db05:	jmp    0x7795fee5
  40db0a:	bound  edx,QWORD PTR [eax+0x3a8f5271]
  40db10:	push   es
  40db11:	es push cs
  40db13:	scas   al,BYTE PTR es:[edi]
  40db14:	mov    al,ds:0xded7c4
  40db19:	inc    edx
  40db1a:	push   ds
  40db1b:	mul    DWORD PTR es:[ebx-0x7e24cf25]
  40db22:	fdiv   QWORD PTR [ecx+0x6989b10e]
  40db28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db29:	sbb    al,0xd5
  40db2b:	sbb    edi,DWORD PTR [ecx+0x2d]
  40db2e:	xchg   edx,eax
  40db2f:	pusha  
  40db30:	jbe    0x40dba9
  40db32:	test   eax,0x3aac4f38
  40db37:	retf   
  40db38:	out    dx,eax
  40db39:	sti    
  40db3a:	cmp    ebx,0x876842d4
  40db40:	int3   
  40db41:	add    BYTE PTR [eax],0x96
  40db44:	jb     0x40dbb5
  40db46:	push   edi
  40db47:	jp     0x40db6d
  40db49:	ins    DWORD PTR es:[edi],dx
  40db4a:	pop    ds
  40db4b:	pavgw  mm3,QWORD PTR [edx]
  40db4e:	out    0xc2,eax
  40db50:	xor    ah,BYTE PTR [edx-0x37]
  40db53:	nop
  40db54:	push   edx
  40db55:	imul   ebx,DWORD PTR [eax],0x445c4697
  40db5b:	mov    bh,BYTE PTR [esi-0x68]
  40db5e:	imul   eax,DWORD PTR [ebp+0x18a5cf48],0x8
  40db65:	ins    DWORD PTR es:[edi],dx
  40db66:	pop    ebx
  40db67:	daa    
  40db68:	ins    BYTE PTR es:[edi],dx
  40db69:	shr    DWORD PTR [eax+0x3b257d3d],0x4b
  40db70:	fild   QWORD PTR ds:0x4a1b29e6
  40db76:	mov    ah,BYTE PTR [ebp-0x5a]
  40db79:	rcl    BYTE PTR [ebx+esi*4],0x90
  40db7d:	push   edx
  40db7e:	add    eax,0x4691d7ba
  40db83:	leave  
  40db84:	pop    ebp
  40db85:	mov    edi,0x582d1702
  40db8a:	(bad)  [edx+eiz*1]
  40db8d:	xlat   BYTE PTR ds:[ebx]
  40db8e:	repnz (bad) 
  40db90:	mov    cl,0x3d
  40db92:	fsub   st,st(4)
  40db94:	daa    
  40db95:	call   0xf7bdb299
  40db9a:	js     0x40dbd2
  40db9c:	ret    0xf30c
  40db9f:	jp     0x40db4f
  40dba1:	sub    eax,0x9cfb56c3
  40dba6:	or     DWORD PTR [ecx],edx
  40dba8:	sbb    al,0x37
  40dbaa:	dec    edx
  40dbab:	xor    ebp,esp
  40dbad:	hlt    
  40dbae:	ins    DWORD PTR es:[edi],dx
  40dbaf:	mov    edx,edi
  40dbb1:	mov    bh,0xbb
  40dbb3:	(bad)  
  40dbb4:	fcomp  st(4)
  40dbb6:	adc    DWORD PTR [ecx],esp
  40dbb8:	xlat   BYTE PTR ds:[ebx]
  40dbb9:	sub    esi,DWORD PTR [esi+0xa]
  40dbbc:	sub    eax,esi
  40dbbe:	shr    BYTE PTR ds:0xe1f130bb,0xeb
  40dbc5:	rol    DWORD PTR [esi+ebp*4],cl
  40dbc8:	mov    ds:0x7fa77e51,al
  40dbcd:	loope  0x40dc4d
  40dbcf:	push   eax
  40dbd0:	jbe    0x40dc00
  40dbd2:	mov    DWORD PTR [edx+0x55e05d7c],esp
  40dbd8:	gs sub ebp,0xffffff8e
  40dbdc:	jno    0x40dbe4
  40dbde:	add    ah,bl
  40dbe0:	or     ebx,DWORD PTR [eax-0x15c8e813]
  40dbe6:	mov    ds:0x57053ef6,al
  40dbeb:	(bad)  
  40dbec:	rol    BYTE PTR [eax+0x5cfeb097],1
  40dbf2:	inc    edi
  40dbf3:	cmp    edi,DWORD PTR [esi-0x6d]
  40dbf6:	jmp    0xf71c:0x172d9b55
  40dbfd:	fdivrp st(5),st
  40dbff:	test   BYTE PTR [ebx+0x31d8e011],ch
  40dc05:	addr16 or al,0x6a
  40dc08:	retf   0xb990
  40dc0b:	inc    esi
  40dc0c:	cmp    eax,0x1b30ba0c
  40dc11:	not    BYTE PTR [ecx]
  40dc13:	shr    BYTE PTR [eax+eiz*8],cl
  40dc16:	mov    DWORD PTR [ecx-0x30187d7c],esp
  40dc1c:	in     al,0x4d
  40dc1e:	cdq    
  40dc1f:	ret    
  40dc20:	inc    esp
  40dc21:	int    0x52
  40dc23:	push   ebp
  40dc24:	push   ebx
  40dc25:	aas    
  40dc26:	pop    es
  40dc27:	dec    ecx
  40dc28:	and    DWORD PTR [esi],0x410bf011
  40dc2e:	mov    BYTE PTR [edx+eiz*8],cl
  40dc31:	shr    BYTE PTR [ecx],1
  40dc33:	or     esp,DWORD PTR [ebx-0x5a1e3fd8]
  40dc39:	fwait
  40dc3a:	xchg   DWORD PTR [ebx+edi*1-0x67],eax
  40dc3e:	lock sub eax,0xe6d82efb
  40dc44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc45:	mov    ?,WORD PTR [esi+0x12a83f90]
  40dc4b:	mov    ds:0x206a907c,eax
  40dc50:	cli    
  40dc51:	les    esi,FWORD PTR [esi]
  40dc53:	leave  
  40dc54:	mov    esp,DWORD PTR [ebp+0x5d]
  40dc57:	imul   ebx,ebx,0xe0938aa
  40dc5d:	jns    0x40dbff
  40dc5f:	xchg   ecx,eax
  40dc60:	les    eax,FWORD PTR [ebp-0x35]
  40dc63:	add    eax,0x11e9b03
  40dc68:	leave  
  40dc69:	outs   dx,DWORD PTR ds:[esi]
  40dc6a:	push   ecx
  40dc6b:	mov    bl,0xfb
  40dc6d:	stos   BYTE PTR es:[edi],al
  40dc6e:	push   ecx
  40dc6f:	sahf   
  40dc70:	(bad)  
  40dc71:	and    al,0x21
  40dc73:	push   esp
  40dc74:	arpl   WORD PTR [eax-0x1e840006],dx
  40dc7a:	push   cs
  40dc7b:	shl    DWORD PTR [edi-0x7c],cl
  40dc7e:	fdivr  st(5),st
  40dc80:	mov    ebx,0xcfe004d1
  40dc85:	mov    cl,0xb1
  40dc87:	sahf   
  40dc88:	cmp    al,0xe5
  40dc8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc8b:	sahf   
  40dc8c:	clc    
  40dc8d:	inc    esp
  40dc8e:	mov    eax,ds:0xb19131dc
  40dc93:	sbb    DWORD PTR [edx],ecx
  40dc95:	das    
  40dc96:	push   ebx
  40dc97:	push   0x55
  40dc99:	xchg   ebx,eax
  40dc9a:	push   0x17
  40dc9c:	xchg   esi,eax
  40dc9d:	mov    dl,0x4d
  40dc9f:	xchg   BYTE PTR [esi-0x1c],ch
  40dca2:	pop    edx
  40dca3:	inc    ebx
  40dca4:	mov    eax,ds:0xb650906b
  40dca9:	adc    al,0xde
  40dcab:	dec    edx
  40dcac:	test   eax,0x6e3d54ed
  40dcb1:	rcl    edx,1
  40dcb3:	mov    eax,ds:0x171361f3
  40dcb8:	xchg   edx,eax
  40dcb9:	mov    edi,0xea911af6
  40dcbe:	or     dl,BYTE PTR [edx-0xc]
  40dcc1:	jp     0x40dc43
  40dcc3:	xor    BYTE PTR [ebp+0x3ea2748d],al
  40dcc9:	aam    0xce
  40dccb:	and    al,0x38
  40dccd:	sahf   
  40dcce:	add    edx,eax
  40dcd0:	xor    bh,BYTE PTR ds:0x404e7baa
  40dcd6:	push   eax
  40dcd7:	dec    edx
  40dcd8:	cmc    
  40dcd9:	aas    
  40dcda:	(bad)  
  40dcdb:	lock enter 0x108c,0x83
  40dce0:	xchg   ebx,eax
  40dce1:	ins    DWORD PTR es:[edi],dx
  40dce2:	mov    ecx,0xa335a01d
  40dce7:	add    BYTE PTR [eax],0x89
  40dcea:	inc    ebx
  40dceb:	dec    esp
  40dcec:	xlat   BYTE PTR ds:[ebx]
  40dced:	hlt    
  40dcee:	in     al,dx
  40dcef:	pop    ebx
  40dcf0:	cli    
  40dcf1:	xchg   edi,eax
  40dcf2:	xor    eax,0xdc0ea7ae
  40dcf7:	jmp    0x40dcb7
  40dcf9:	pop    esp
  40dcfb:	push   es
  40dcfc:	fstp   TBYTE PTR [edx]
  40dcfe:	mov    bl,0x96
  40dd00:	jl     0x40dd3b
  40dd02:	push   ss
  40dd03:	pop    esp
  40dd04:	mov    ds,WORD PTR [eax+0x2]
  40dd07:	addr16 mov ecx,0x7da533da
  40dd0d:	(bad)  
  40dd0f:	popa   
  40dd10:	mov    ds:0xcfc28d23,eax
  40dd15:	retf   0x9baa
  40dd18:	push   esp
  40dd19:	jmp    0x40dd21
  40dd1b:	mov    ds:0x45e8977b,eax
  40dd20:	pop    ds
  40dd21:	adc    ebx,0xa6f8e5ae
  40dd27:	add    esi,0xceb22afd
  40dd2d:	mov    ebx,0x4bb42c31
  40dd32:	and    DWORD PTR [ecx+ebp*2-0x755b0547],0x6419e2ca
  40dd3d:	sub    eax,0xc0671af4
  40dd42:	xchg   esi,eax
  40dd43:	das    
  40dd44:	pop    ss
  40dd45:	mov    DWORD PTR [ecx+edx*2],esp
  40dd48:	mov    ch,0xde
  40dd4a:	jns    0x40dd7c
  40dd4c:	mov    eax,0x6d256224
  40dd51:	leave  
  40dd52:	xlat   BYTE PTR ds:[ebx]
  40dd53:	inc    ecx
  40dd54:	retf   0x12bf
  40dd57:	mov    al,ds:0x3cde206d
  40dd5c:	ins    DWORD PTR es:[edi],dx
  40dd5d:	popf   
  40dd5e:	test   eax,0x81ae4f36
  40dd63:	jecxz  0x40dd8c
  40dd65:	inc    edi
  40dd66:	jns    0x40dd4d
  40dd68:	jnp    0x40dd28
  40dd6a:	out    0x30,al
  40dd6c:	cmp    ebp,esi
  40dd6e:	frstor [esi]
  40dd70:	mov    ds:0x38145a49,eax
  40dd75:	div    BYTE PTR [eiz*1-0x53fb8582]
  40dd7c:	xor    eax,0xe6aee2f7
  40dd81:	mov    ebx,0x9422b517
  40dd86:	mov    ecx,DWORD PTR [esi]
  40dd88:	sar    DWORD PTR [edi+0x3a6e22ab],1
  40dd8e:	or     eax,0x8a6c15db
  40dd93:	rcl    DWORD PTR [esi+0x216eef6a],cl
  40dd99:	inc    ecx
  40dd9a:	mov    BYTE PTR [edi],dl
  40dd9c:	mov    al,ds:0x13754e19
  40dda1:	and    al,0x4d
  40dda3:	std    
  40dda4:	mov    ebx,0x1a16eb90
  40dda9:	fwait
  40ddaa:	stos   BYTE PTR es:[edi],al
  40ddab:	popa   
  40ddac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddad:	and    eax,0x7136a089
  40ddb2:	mov    ecx,0x81625db1
  40ddb7:	xor    al,0x11
  40ddb9:	or     eax,0x47e56c09
  40ddbe:	mov    esp,DWORD PTR [ebx+0x368294b0]
  40ddc4:	sbb    al,BYTE PTR [ecx-0x4a]
  40ddc7:	jmp    0x4d86:0x84e6343c
  40ddce:	das    
  40ddcf:	retf   0x30d1
  40ddd2:	ins    BYTE PTR es:[edi],dx
  40ddd3:	push   cs
  40ddd4:	push   ds
  40ddd5:	popa   
  40ddd6:	fist   WORD PTR [ebx]
  40ddd8:	cwde   
  40ddd9:	lahf   
  40ddda:	dec    esi
  40dddb:	push   0x32
  40dddd:	inc    ebp
  40ddde:	pop    edi
  40dddf:	nop
  40dde0:	je     0x40dd6c
  40dde2:	and    esi,0xcb1002e0
  40dde8:	xchg   DWORD PTR [ecx],ebp
  40ddea:	das    
  40ddeb:	sti    
  40ddec:	retf   
  40dded:	adc    al,0x4c
  40ddef:	outs   dx,BYTE PTR ds:[esi]
  40ddf0:	stos   BYTE PTR es:[edi],al
  40ddf1:	mov    ebp,DWORD PTR [edx]
  40ddf3:	scas   al,BYTE PTR es:[edi]
  40ddf4:	pop    edx
  40ddf5:	push   ebp
  40ddf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddf7:	dec    ebx
  40ddf8:	and    ch,BYTE PTR [edx+0x52]
  40ddfb:	out    0xc,eax
  40ddfd:	aam    0x12
  40ddff:	cdq    
  40de00:	int    0x76
  40de02:	stos   DWORD PTR es:[edi],eax
  40de03:	sub    bh,ah
  40de05:	js     0x40ddae
  40de07:	or     dh,ah
  40de09:	mov    ebx,0xc853cfe7
  40de0e:	cdq    
  40de0f:	bound  ecx,QWORD PTR [esi]
  40de11:	add    DWORD PTR [ebx],ebp
  40de13:	sub    ebp,DWORD PTR [ebx-0x34]
  40de16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de17:	and    bl,ch
  40de19:	mov    ebx,0x7274b78b
  40de1e:	pushf  
  40de1f:	(bad)  
  40de20:	call   0x455757ba
  40de25:	loopne 0x40de09
  40de27:	mov    bl,0xc4
  40de29:	push   ds
  40de2a:	repnz rcr DWORD PTR [ecx+0x73c7e1c4],0xa2
  40de32:	gs cmp ebp,ebp
  40de35:	cmp    al,0x92
  40de37:	lods   eax,DWORD PTR ds:[esi]
  40de38:	mov    edi,0x14473f4d
  40de3d:	mov    dh,0xa4
  40de3f:	mov    ebx,0x6a6d17d8
  40de44:	aas    
  40de45:	mov    ss,WORD PTR [eax]
  40de47:	mov    ebx,edi
  40de49:	sbb    eax,edi
  40de4b:	pop    ebx
  40de4c:	sbb    eax,0xaa75838b
  40de51:	add    BYTE PTR [edx],0x9e
  40de54:	mov    ecx,0x7f9672f2
  40de59:	lds    edi,FWORD PTR [edx-0x30f0e808]
  40de5f:	mov    DWORD PTR [ebx],0x2fcbca15
  40de65:	xchg   esi,eax
  40de66:	push   0x59
  40de68:	into   
  40de69:	bound  edi,QWORD PTR [ebx+edx*4-0x6cb6616f]
  40de70:	es int3 
  40de72:	cmp    ebx,ebp
  40de74:	add    DWORD PTR [esp+ecx*4+0x6c],eax
  40de78:	fmul   QWORD PTR [eax+0x56]
  40de7b:	adc    BYTE PTR [ebp+0x45],ch
  40de7e:	enter  0x37d0,0xba
  40de82:	pop    ds
  40de83:	cmp    DWORD PTR [edi-0x1d],esp
  40de86:	dec    esp
  40de87:	hlt    
  40de88:	out    0x9b,al
  40de8a:	dec    ecx
  40de8b:	mov    BYTE PTR [edx-0x39],cl
  40de8e:	sub    edx,eax
  40de90:	int    0x58
  40de92:	xchg   ebx,eax
  40de93:	dec    esi
  40de94:	outs   dx,DWORD PTR ds:[esi]
  40de95:	mov    ah,0x9f
  40de97:	aas    
  40de98:	and    DWORD PTR [esi-0x721b9e04],eax
  40de9e:	test   BYTE PTR [edi+0x1d],al
  40dea1:	outs   dx,DWORD PTR ds:[esi]
  40dea2:	inc    ebp
  40dea3:	fxch   st(0)
  40dea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dea6:	jae    0x40de89
  40dea8:	stos   DWORD PTR es:[edi],eax
  40dea9:	inc    edx
  40deaa:	enter  0x77fa,0x68
  40deae:	inc    esi
  40deaf:	clc    
  40deb0:	and    al,0xef
  40deb2:	sahf   
  40deb3:	loop   0x40de40
  40deb5:	push   cs
  40deb6:	adc    eax,DWORD PTR [ebp+0x4]
  40deb9:	and    DWORD PTR [eax],edi
  40debb:	inc    esi
  40debc:	jg     0x40de9f
  40debe:	mov    dh,0x28
  40dec0:	repnz cmp al,BYTE PTR [edi+0x19]
  40dec4:	ja     0x40deaa
  40dec6:	xor    edx,DWORD PTR [edi+edx*4+0x18]
  40deca:	xor    BYTE PTR [eax+0x7b9f843],bl
  40ded0:	into   
  40ded1:	(bad)  
  40ded2:	add    DWORD PTR [edx-0x4d1b2abc],edx
  40ded8:	(bad)  
  40ded9:	in     eax,0xed
  40dedb:	sub    eax,DWORD PTR [edx]
  40dedd:	cmp    eax,0xac7e1789
  40dee2:	push   eax
  40dee3:	enter  0xf740,0x91
  40dee7:	enter  0xaedc,0xa0
  40deeb:	dec    ebp
  40deec:	jb     0x40df53
  40deee:	or     eax,0x4e814d20
  40def3:	imul   esi,DWORD PTR [eax-0x4245c429],0x6f3cd5c5
  40defd:	xlat   BYTE PTR ds:[ebx]
  40defe:	test   BYTE PTR [eax],0xa2
  40df01:	aad    0xc0
  40df03:	fwait
  40df04:	cmc    
  40df05:	xor    cl,cl
  40df07:	loope  0x40df42
  40df09:	push   edx
  40df0a:	bnd jbe 0x40df72
  40df0d:	push   ss
  40df0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df0f:	push   ss
  40df10:	stos   BYTE PTR es:[edi],al
  40df11:	cli    
  40df12:	out    0x1a,al
  40df14:	add    BYTE PTR [eax-0x78],0x24
  40df18:	or     al,0xc0
  40df1a:	in     al,dx
  40df1b:	and    cl,0xcc
  40df1e:	and    eax,0xa0b6d85
  40df23:	js     0x40df26
  40df25:	popa   
  40df26:	and    DWORD PTR ds:0x4e79e9a3,ecx
  40df2c:	mov    ebp,0xc0887213
  40df31:	sbb    DWORD PTR [ecx+0x4c],eax
  40df34:	ins    BYTE PTR es:[edi],dx
  40df35:	sub    eax,0xcd998a2c
  40df3a:	(bad)  
  40df3b:	sbb    cl,BYTE PTR [edx+0x3a]
  40df3e:	sub    al,0xa
  40df40:	sbb    eax,0xffc9dfa2
  40df45:	pop    edx
  40df46:	je     0x40df29
  40df48:	ud2    
  40df4a:	imul   eax,DWORD PTR [esi+0x7d],0x96744370
  40df51:	inc    ecx
  40df52:	xor    al,0xc5
  40df54:	add    bh,ch
  40df56:	adc    esp,DWORD PTR [ebp-0x26]
  40df59:	or     eax,0x93bcbc5c
  40df5e:	hlt    
  40df5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df60:	jmp    0x66b8:0x15515409
  40df67:	jle    0x40df37
  40df69:	jb     0x40dfe0
  40df6b:	add    eax,0x396adeb5
  40df70:	ret    
  40df71:	mov    WORD PTR [eax-0x17],es
  40df74:	and    edi,DWORD PTR [ecx]
  40df76:	int3   
  40df77:	pop    esp
  40df78:	sbb    ah,BYTE PTR [eax+edx*1]
  40df7b:	pop    ebp
  40df7c:	cmp    BYTE PTR [ebx],al
  40df7e:	dec    esi
  40df7f:	adc    eax,0xe6c3c0bb
  40df84:	clc    
  40df85:	mov    dh,0x9e
  40df87:	sbb    al,0x1c
  40df89:	sub    DWORD PTR ds:0xeb1670e5,ebp
  40df8f:	mov    al,0x95
  40df91:	fcomip st,st(4)
  40df93:	(bad)  
  40df94:	out    dx,eax
  40df95:	jne    0x40dfc6
  40df97:	jmp    0xdee:0xfae38798
  40df9e:	mov    al,ds:0xb684b0c3
  40dfa3:	adc    eax,0x7e2028f5
  40dfa8:	test   BYTE PTR [ecx-0x2a9a34b7],0xce
  40dfaf:	(bad)  [ebx+0x40]
  40dfb2:	sub    al,0xb7
  40dfb4:	(bad)  
  40dfb5:	out    dx,al
  40dfb6:	aas    
  40dfb7:	loop   0x40e035
  40dfb9:	mov    ebx,0x299b7136
  40dfbe:	jne    0x40e02a
  40dfc0:	add    al,0xd5
  40dfc2:	rcl    ebp,1
  40dfc4:	retf   0xbba1
  40dfc7:	push   edi
  40dfc8:	mov    ch,0x55
  40dfca:	cmp    eax,DWORD PTR [esi-0x465cba59]
  40dfd0:	pop    DWORD PTR [eax-0x72]
  40dfd3:	mov    ds:0xbec0cb3b,al
  40dfd8:	pop    esp
  40dfd9:	add    bh,BYTE PTR ds:0x1a6050b3
  40dfdf:	setl   bl
  40dfe2:	inc    edx
  40dfe3:	imul   BYTE PTR [edx+0x7568ff57]
  40dfe9:	int3   
  40dfea:	div    BYTE PTR [edi+0x3fb5d0d0]
  40dff0:	jmp    0x40dfcc
  40dff2:	xor    BYTE PTR [edi+0x5028e52d],0x40
  40dff9:	test   DWORD PTR [edi],ecx
  40dffb:	adc    edi,DWORD PTR [esi-0x46]
  40dffe:	loopne 0x40dfce
  40e000:	ins    BYTE PTR es:[edi],dx
  40e001:	out    dx,al
  40e002:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e003:	pop    ss
  40e004:	jne    0x40dffb
  40e006:	cmp    eax,0xbdd9a330
  40e00b:	jno    0x40e037
  40e00d:	scas   al,BYTE PTR es:[edi]
  40e00e:	aas    
  40e00f:	sbb    eax,0x60024a22
  40e014:	inc    ecx
  40e015:	dec    esp
  40e016:	xchg   ebx,eax
  40e017:	add    eax,0x4746a51d
  40e01c:	inc    edx
  40e01d:	sub    BYTE PTR [esi],bh
  40e01f:	mov    ds:0xedf2d599,eax
  40e024:	scas   eax,DWORD PTR es:[edi]
  40e025:	iret   
  40e026:	push   ecx
  40e027:	rol    DWORD PTR [ecx-0x52bec52a],cl
  40e02d:	dec    edi
  40e02e:	mov    bh,0x31
  40e030:	mov    dl,0xa9
  40e032:	ret    0xe25d
  40e035:	mov    edx,0x496eed54
  40e03a:	push   ecx
  40e03b:	push   eax
  40e03c:	test   DWORD PTR [ebp+0x2c6aadf2],0x5fc1a0b5
  40e046:	inc    ebp
  40e047:	(bad)  
  40e048:	stc    
  40e049:	mov    ds:0x31e915d0,eax
  40e04e:	cmp    ecx,ecx
  40e050:	cs inc ebp
  40e052:	cwde   
  40e053:	jno    0x40e054
  40e055:	(bad)  
  40e056:	add    ebp,DWORD PTR [edx-0x7f45ead]
  40e05c:	(bad)  [eax]
  40e05e:	mov    esp,0x86f09fc1
  40e063:	int3   
  40e064:	xchg   ecx,ebp
  40e066:	(bad)  
  40e067:	sbb    al,0x62
  40e069:	pslld  mm7,QWORD PTR [edx-0x9291d06]
  40e070:	pop    ss
  40e071:	jmp    0x40e03a
  40e073:	adc    ch,BYTE PTR [edx+0x54]
  40e076:	in     eax,dx
  40e077:	push   edx
  40e078:	iret   
  40e079:	(bad)
  40e07c:	sti    
  40e07d:	aas    
  40e07e:	addr16 aad 0xa2
  40e081:	ins    BYTE PTR es:[edi],dx
  40e082:	(bad)  
  40e084:	retf   
  40e085:	xor    esp,eax
  40e087:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e088:	shl    BYTE PTR [eax-0x6c963ddc],cl
  40e08e:	aad    0xb
  40e090:	and    ah,BYTE PTR [edi-0x2e]
  40e093:	mov    esi,0xdaeacd6b
  40e098:	push   esi
  40e099:	adc    al,0xce
  40e09b:	push   esi
  40e09c:	loopne 0x40e055
  40e09e:	popf   
  40e09f:	daa    
  40e0a0:	mov    DWORD PTR [ebx],edx
  40e0a2:	out    0x39,al
  40e0a4:	ror    DWORD PTR [ebx+0x5e],cl
  40e0a7:	and    al,0x7b
  40e0a9:	cmc    
  40e0aa:	inc    ebp
  40e0ab:	push   eax
  40e0ac:	mov    WORD PTR [ebx+eiz*4-0x5f1195d9],gs
  40e0b3:	in     eax,dx
  40e0b4:	push   esi
  40e0b5:	scas   eax,DWORD PTR es:[edi]
  40e0b6:	and    BYTE PTR [edi-0x69],dh
  40e0b9:	jl     0x40e03f
  40e0bb:	and    al,0xc
  40e0bd:	adc    eax,0x5fd7cb75
  40e0c2:	(bad)  
  40e0c3:	shl    ebp,0x58
  40e0c6:	popf   
  40e0c7:	xor    ebp,esp
  40e0c9:	adc    edx,ebx
  40e0cb:	add    esp,DWORD PTR ds:0x5e2c9589
  40e0d1:	push   ebp
  40e0d2:	(bad)  
  40e0d4:	(bad)  
  40e0d5:	pop    edi
  40e0d6:	dec    eax
  40e0d7:	imul   esp,DWORD PTR [ecx-0x13],0x474a39d4
  40e0de:	mov    eax,cs:0xa6522bd2
  40e0e4:	pop    ds
  40e0e5:	out    0xe1,eax
  40e0e7:	jnp    0x40e117
  40e0e9:	out    dx,al
  40e0ea:	cmp    DWORD PTR [ebp-0x50c5157a],edi
  40e0f0:	jg     0x40e13f
  40e0f2:	dec    ebp
  40e0f3:	retf   
  40e0f4:	jae    0x40e0b5
  40e0f6:	jmp    0xc5986d21
  40e0fb:	jp     0x40e0fd
  40e0fd:	add    cl,bl
  40e0ff:	fistp  QWORD PTR [eax+0x32e9b346]
  40e105:	or     edi,DWORD PTR [ecx+0x490044f9]
  40e10b:	outs   dx,DWORD PTR ds:[esi]
  40e10c:	mov    eax,0x28667a99
  40e111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e112:	mov    al,0xbc
  40e114:	adc    edx,ecx
  40e116:	xchg   edi,eax
  40e117:	or     al,BYTE PTR ds:[eax]
  40e11a:	mov    al,ds:0x9df90543
  40e11f:	xchg   ebp,eax
  40e120:	sbb    edx,DWORD PTR [eax]
  40e122:	xchg   esp,eax
  40e123:	ror    BYTE PTR [edi-0x5f7efb11],cl
  40e129:	jae    0x40e140
  40e12b:	push   esp
  40e12c:	inc    esp
  40e12d:	fdiv   QWORD PTR [ebx+edx*4+0x22]
  40e131:	cs pop ebx
  40e133:	jp     0x40e193
  40e135:	mov    bh,dl
  40e137:	(bad)  
  40e138:	fidiv  DWORD PTR [eax-0x676217c0]
  40e13e:	js     0x40e0f2
  40e140:	ja     0x40e154
  40e142:	jb     0x40e187
  40e144:	call   0xa34b:0x25be1a91
  40e14b:	test   DWORD PTR [eax-0x3],0x50f10251
  40e152:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e153:	add    esp,DWORD PTR [ebx+0x137d41a4]
  40e159:	push   ds
  40e15a:	(bad)  
  40e15b:	and    ecx,DWORD PTR es:[edx]
  40e15e:	sub    DWORD PTR [ecx],ecx
  40e160:	repz jecxz 0x40e0f5
  40e163:	lds    ecx,FWORD PTR [esi+0x2b41fc6a]
  40e169:	sub    BYTE PTR [ebx-0x3a],0x75
  40e16d:	push   ebx
  40e16e:	daa    
  40e16f:	int3   
  40e170:	add    al,BYTE PTR [edi]
  40e172:	push   cs
  40e173:	xlat   BYTE PTR ds:[ebx]
  40e174:	or     eax,0xf4e9e1ac
  40e179:	retf   0x224f
  40e17c:	fimul  DWORD PTR [eax+0x1ae4cf64]
  40e182:	fsub   st(0),st
  40e184:	gs mov edi,0x2b7e379d
  40e18a:	in     eax,dx
  40e18b:	imul   esp,DWORD PTR [edi-0x71aac65e],0xa40e4444
  40e195:	std    
  40e196:	jmp    0x40e1c2
  40e198:	sbb    al,0xbd
  40e19a:	aaa    
  40e19b:	lahf   
  40e19c:	call   0xb5b5:0x6118d85
  40e1a3:	call   0xb8b02951
  40e1a8:	fidivr DWORD PTR [esp+edi*8+0x44]
  40e1ac:	(bad)  
  40e1ad:	mov    WORD PTR [edi],gs
  40e1af:	jnp    0x40e13f
  40e1b1:	mov    al,ds:0x1d29ab71
  40e1b6:	das    
  40e1b7:	fild   WORD PTR [ebx]
  40e1b9:	sub    dl,bl
  40e1bb:	leave  
  40e1bc:	sub    edi,DWORD PTR ss:[edi]
  40e1bf:	or     eax,0x809acb71
  40e1c4:	loopne 0x40e1de
  40e1c6:	int    0x2a
  40e1c8:	xchg   edi,ecx
  40e1ca:	inc    ebp
  40e1cb:	idiv   BYTE PTR [esi+0x5044b488]
  40e1d1:	sbb    BYTE PTR [ebp+ebx*1+0x4e],ch
  40e1d5:	hlt    
  40e1d6:	call   0xf3b6:0xcfd0841
  40e1dd:	jo     0x40e172
  40e1df:	fnstcw WORD PTR [ebx]
  40e1e1:	push   eax
  40e1e2:	or     al,BYTE PTR [ebp-0x551e5fda]
  40e1e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1e9:	mov    esi,0xe809d67b
  40e1ee:	loopne 0x40e23d
  40e1f0:	test   al,0x27
  40e1f2:	xor    BYTE PTR [edx+edx*8-0x3c],dl
  40e1f6:	mov    edx,ebx
  40e1f8:	icebp  
  40e1f9:	jnp    0xa5b285d9
  40e1ff:	repz xor BYTE PTR [edi-0x21845dc9],0x97
  40e207:	pop    ds
  40e208:	mov    esi,0xf9a6db
  40e20d:	mov    ds:0x39ee2cb3,eax
  40e212:	cmp    ecx,DWORD PTR [esi-0x26]
  40e215:	mov    ah,0xac
  40e217:	(bad)  
  40e218:	xchg   edx,eax
  40e219:	add    BYTE PTR [esi-0x70],bh
  40e21c:	dec    esi
  40e21d:	test   al,0xcd
  40e21f:	and    BYTE PTR [ecx],dl
  40e221:	xchg   BYTE PTR [ecx],ah
  40e223:	pop    ss
  40e224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e225:	cdq    
  40e226:	call   0x6c47901c
  40e22b:	cdq    
  40e22c:	mov    ebp,0xb5c29500
  40e231:	and    edx,DWORD PTR [ecx+edi*4-0x6b227175]
  40e238:	std    
  40e239:	push   0xa013b787
  40e23e:	hlt    
  40e23f:	stc    
  40e240:	and    bl,dl
  40e242:	pop    ebx
  40e243:	psrad  mm7,QWORD PTR [ecx-0x54]
  40e247:	xchg   DWORD PTR [esi],edx
  40e249:	push   ebp
  40e24a:	xor    DWORD PTR [eax+0x4c5d461],esp
  40e250:	cwde   
  40e251:	jle    0x40e230
  40e253:	xlat   BYTE PTR ds:[ebx]
  40e254:	aad    0x81
  40e256:	dec    ebx
  40e257:	loopne 0x40e1e2
  40e259:	jbe    0x40e24e
  40e25b:	sbb    eax,0x11ff0bbb
  40e260:	mul    BYTE PTR [edi+0x7ae6d8fa]
  40e266:	not    edx
  40e268:	test   ecx,0xed90f129
  40e26e:	mov    ah,0x9d
  40e270:	test   BYTE PTR [edi+0x26],dl
  40e273:	cmc    
  40e274:	jecxz  0x40e2df
  40e276:	popf   
  40e277:	outs   dx,BYTE PTR ds:[esi]
  40e278:	sahf   
  40e279:	cli    
  40e27a:	dec    edx
  40e27b:	mov    ds:0x3f2d3d6c,al
  40e280:	pop    ecx
  40e281:	mov    ecx,0x7676a909
  40e286:	jbe    0x40e25b
  40e288:	adc    esp,DWORD PTR [edi]
  40e28a:	popa   
  40e28b:	dec    esi
  40e28c:	pop    esi
  40e28d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e28e:	xchg   ebp,eax
  40e28f:	mov    ch,0xbf
  40e291:	(bad)  
  40e292:	mov    ch,0x17
  40e294:	inc    esp
  40e295:	xchg   BYTE PTR [edx+0x55],ch
  40e298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e299:	repnz retf 0xaf7e
  40e29d:	or     BYTE PTR [esi+0x7c],ch
  40e2a0:	and    ebx,0xffffffb0
  40e2a3:	xchg   ebp,eax
  40e2a4:	leave  
  40e2a5:	cli    
  40e2a6:	xchg   edi,eax
  40e2a7:	jmp    0x5bc8e36b
  40e2ac:	aas    
  40e2ad:	or     DWORD PTR [ecx+ebx*4+0x7dcfd5dd],edx
  40e2b4:	ret    
  40e2b5:	ins    DWORD PTR es:[edi],dx
  40e2b6:	in     al,dx
  40e2b7:	mov    es,esi
  40e2b9:	mov    ds:0x9eaf4323,al
  40e2be:	sar    esi,cl
  40e2c0:	ins    DWORD PTR es:[edi],dx
  40e2c1:	or     ebp,DWORD PTR [ecx+edx*2-0x599b8a4b]
  40e2c8:	add    ebp,DWORD PTR [ecx]
  40e2ca:	mov    eax,edx
  40e2cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2cd:	std    
  40e2ce:	in     al,0x43
  40e2d0:	cmp    ebx,DWORD PTR [edi]
  40e2d2:	jno    0x40e307
  40e2d4:	lods   eax,DWORD PTR ds:[esi]
  40e2d5:	pop    ss
  40e2d6:	cmp    DWORD PTR [esp+edx*2-0x71],esi
  40e2da:	inc    esp
  40e2db:	push   eax
  40e2dc:	lock mov edx,0xb7ee47ab
  40e2e2:	ret    
  40e2e3:	jnp    0x40e2ba
  40e2e5:	das    
  40e2e6:	mov    BYTE PTR es:[esi+eax*1-0x41a0783f],ch
  40e2ee:	inc    eax
  40e2ef:	fucomp st(0)
  40e2f1:	imul   eax,DWORD PTR [ebp-0x56ec54dd],0xffffffb6
  40e2f8:	std    
  40e2f9:	repnz inc ebp
  40e2fb:	or     BYTE PTR [esp+ecx*2-0xa],al
  40e2ff:	or     BYTE PTR [edx+0x2d],dh
  40e302:	xor    DWORD PTR [ebp+0x732011ec],0x55825e5f
  40e30c:	mov    ebp,0x8f69ee17
  40e311:	shr    BYTE PTR [esi-0x677daf13],0xae
  40e318:	xchg   ebx,eax
  40e319:	jbe    0x40e31b
  40e31b:	jg     0x40e2bd
  40e31d:	xchg   ecx,eax
  40e31e:	imul   edx,DWORD PTR [ecx+ecx*1+0x6ed50a64],0xa4b5de4f
  40e329:	dec    eax
  40e32a:	lods   al,BYTE PTR ds:[esi]
  40e32b:	scas   eax,DWORD PTR es:[edi]
  40e32c:	mov    ds:0xc2837770,eax
  40e331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e332:	adc    BYTE PTR [ecx+ebp*1+0x21],dl
  40e336:	dec    eax
  40e337:	or     al,dh
  40e339:	jp     0x40e321
  40e33b:	(bad)  
  40e33c:	cdq    
  40e33d:	pop    ebx
  40e33e:	cmp    eax,0x9d0bba65
  40e343:	push   0x21
  40e345:	test   al,0x4c
  40e347:	push   ecx
  40e348:	out    dx,al
  40e349:	cdq    
  40e34a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e34b:	mov    BYTE PTR [edx-0x7460ed7c],0x8b
  40e352:	or     BYTE PTR [edi-0x40],dh
  40e355:	adc    esi,DWORD PTR [edx-0x2f]
  40e358:	lea    ebx,[edi-0x85c9098]
  40e35e:	outs   dx,BYTE PTR ds:[esi]
  40e35f:	out    dx,al
  40e360:	outs   dx,BYTE PTR ds:[esi]
  40e361:	inc    ebx
  40e362:	sub    al,dh
  40e364:	(bad)  
  40e365:	mov    edi,0x593ebc6d
  40e36a:	and    BYTE PTR [esi],ah
  40e36c:	or     eax,0x487173e6
  40e371:	addr16 add eax,0xa8fe9cc5
  40e377:	push   edi
  40e378:	inc    ecx
  40e379:	neg    edx
  40e37b:	and    eax,0x58589294
  40e380:	cs jmp 0x792b:0x96bdd885
  40e388:	das    
  40e389:	pop    ecx
  40e38a:	dec    edi
  40e38b:	stos   DWORD PTR es:[edi],eax
  40e38c:	pop    ss
  40e38d:	sbb    BYTE PTR [eax+ecx*2],dh
  40e390:	aaa    
  40e391:	xchg   ebx,eax
  40e392:	iret   
  40e393:	iret   
  40e394:	and    al,0x64
  40e396:	or     al,0x31
  40e398:	mov    edi,0xb37644f9
  40e39d:	mov    eax,0x2e93628
  40e3a2:	pop    es
  40e3a3:	and    esi,ecx
  40e3a5:	sbb    al,0xa0
  40e3a7:	lahf   
  40e3a8:	xlat   BYTE PTR ds:[ebx]
  40e3a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3aa:	push   es
  40e3ab:	(bad)  
  40e3ac:	lods   eax,DWORD PTR ds:[esi]
  40e3ad:	stc    
  40e3ae:	sub    DWORD PTR [edi+0x37],ecx
  40e3b1:	call   0x8c934892
  40e3b6:	in     eax,dx
  40e3b7:	adc    BYTE PTR ds:0x2be2fb3d,al
  40e3bd:	je     0x40e347
  40e3bf:	fnstenv [esp+edi*2-0x3a]
  40e3c3:	adc    bh,bl
  40e3c5:	adc    BYTE PTR [ecx-0x60],dl
  40e3c8:	pop    edi
  40e3c9:	fwait
  40e3ca:	les    eax,FWORD PTR [esi-0x785cd98b]
  40e3d0:	jnp    0x40e43c
  40e3d2:	shl    DWORD PTR ds:0x16c2dad3,cl
  40e3d8:	sub    esi,DWORD PTR [eax-0x4f]
  40e3db:	clc    
  40e3dc:	sbb    al,0xc4
  40e3de:	les    edx,FWORD PTR [esi+0x1a]
  40e3e1:	sbb    ebx,0x5c
  40e3e4:	dec    ebp
  40e3e5:	jl     0x40e36d
  40e3e7:	jp     0x40e441
  40e3e9:	loop   0x40e3ac
  40e3eb:	shr    DWORD PTR [ebx+0x1114384b],cl
  40e3f1:	dec    ecx
  40e3f2:	adc    BYTE PTR ss:[ecx+0x30],dl
  40e3f6:	mov    edx,0x34dc7013
  40e3fb:	aad    0x80
  40e3fd:	adc    al,0xf8
  40e3ff:	xchg   ebp,eax
  40e400:	and    al,BYTE PTR [ebp+0x7c]
  40e403:	sub    eax,ebp
  40e405:	std    
  40e406:	xor    DWORD PTR [eax],esp
  40e408:	clc    
  40e409:	imul   BYTE PTR [edi]
  40e40b:	push   ebx
  40e40c:	sub    BYTE PTR [edx-0x23],al
  40e40f:	iret   
  40e410:	dec    esi
  40e411:	and    esi,esp
  40e413:	rol    ecx,0x39
  40e416:	jno    0x40e3f2
  40e418:	(bad)  
  40e419:	mov    ch,BYTE PTR [edi]
  40e41b:	mov    dl,BYTE PTR [edi-0x31674741]
  40e421:	pop    ebx
  40e422:	mov    ds:0x286ba983,al
  40e427:	jp     0x40e462
  40e429:	push   0xd2410b34
  40e42e:	mov    ds:0x139dd4bb,eax
  40e433:	mov    esi,0xd1edc2f4
  40e438:	cli    
  40e439:	in     al,dx
  40e43a:	fstp   QWORD PTR [ebp+0x6]
  40e43d:	lods   al,BYTE PTR ds:[esi]
  40e43e:	lods   al,BYTE PTR ds:[esi]
  40e43f:	push   ebp
  40e440:	push   ebp
  40e441:	ins    BYTE PTR es:[edi],dx
  40e442:	mov    ecx,0x883c3a22
  40e447:	jb     0x40e46b
  40e449:	cli    
  40e44a:	fwait
  40e44b:	test   BYTE PTR [ecx+ebx*8],dh
  40e44e:	jl     0x40e452
  40e450:	jbe    0x40e4ad
  40e452:	loopne 0x40e3db
  40e454:	sub    BYTE PTR [ecx-0x66a241fa],bh
  40e45a:	mov    ss,ecx
  40e45c:	fimul  WORD PTR [esi]
  40e45e:	(bad)  
  40e45f:	pop    ecx
  40e460:	das    
  40e461:	mov    ebx,0xc9045304
  40e466:	sbb    eax,0x2d0dbbdc
  40e46b:	loopne 0x40e4aa
  40e46d:	sbb    ah,BYTE PTR [edx]
  40e46f:	stc    
  40e470:	add    BYTE PTR [ebx],dh
  40e472:	sbb    ecx,ecx
  40e474:	in     eax,0x4a
  40e476:	xor    BYTE PTR [edx+0x40],0x1f
  40e47a:	icebp  
  40e47b:	bound  esi,QWORD PTR [edi+0x2b]
  40e47e:	loopne 0x40e45c
  40e480:	imul   edi,edx,0xffffffd4
  40e483:	mov    edi,0x8f7cd6ad
  40e488:	pop    eax
  40e489:	xchg   DWORD PTR [esi+0x33cf1ca6],esp
  40e48f:	pop    ss
  40e490:	jp     0x40e50d
  40e492:	jbe    0x40e439
  40e494:	or     BYTE PTR [ebx+0x7b],ah
  40e497:	xor    al,0x33
  40e499:	and    bh,bh
  40e49b:	and    bh,al
  40e49d:	dec    ecx
  40e49e:	cmp    ah,BYTE PTR [edi+eiz*4+0x1c]
  40e4a2:	lea    ecx,[edx]
  40e4a4:	fsubrp st(7),st
  40e4a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4a7:	clc    
  40e4a8:	stos   BYTE PTR es:[edi],al
  40e4a9:	hlt    
  40e4aa:	loop   0x40e4b0
  40e4ac:	leave  
  40e4ad:	add    esi,DWORD PTR gs:[eax]
  40e4b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4b1:	mov    al,0x31
  40e4b3:	push   eax
  40e4b4:	jbe    0x40e50e
  40e4b6:	mov    edx,ebp
  40e4b8:	or     al,0x71
  40e4ba:	xor    DWORD PTR [esi],edi
  40e4bc:	mov    edx,0xc4cc3228
  40e4c1:	shr    DWORD PTR [ebx],0x47
  40e4c4:	scas   eax,DWORD PTR es:[edi]
  40e4c5:	test   al,0x91
  40e4c7:	stc    
  40e4c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4c9:	out    dx,al
  40e4ca:	mov    WORD PTR [edi],cs
  40e4cc:	push   ds
  40e4cd:	dec    esp
  40e4ce:	fsubr  DWORD PTR [esi-0x485b3d8]
  40e4d4:	pop    ss
  40e4d5:	shr    bl,1
  40e4d7:	loopne 0x40e45f
  40e4d9:	dec    eax
  40e4da:	std    
  40e4db:	pop    ecx
  40e4dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4dd:	cdq    
  40e4de:	loop   0x40e4f2
  40e4e0:	xor    eax,0x6c96e3c
  40e4e5:	mov    ds:0xb846716c,eax
  40e4ea:	cwde   
  40e4eb:	push   esp
  40e4ec:	es jo  0x40e492
  40e4ef:	push   0x1e
  40e4f1:	pop    ecx
  40e4f2:	jmp    0x790655a4
  40e4f7:	cwde   
  40e4f8:	call   0xb3b9ec2c
  40e4fd:	pop    esp
  40e4fe:	mov    WORD PTR [edi-0x5c],cs
  40e501:	jmp    0x40e4cc
  40e503:	inc    BYTE PTR [ebp-0x3b1a63b0]
  40e509:	mov    dl,0x97
  40e50b:	pop    eax
  40e50c:	inc    eax
  40e50d:	dec    ebx
  40e50e:	push   ds
  40e50f:	(bad)  
  40e510:	adc    DWORD PTR [eax],ecx
  40e512:	ret    0xd4d6
  40e515:	les    esp,FWORD PTR [esi]
  40e517:	stos   BYTE PTR es:[edi],al
  40e518:	adc    dh,ch
  40e51a:	ss aad 0x10
  40e51d:	(bad)  
  40e51e:	ror    BYTE PTR [ecx-0x72],1
  40e521:	fisub  DWORD PTR [ecx-0x17]
  40e524:	ja     0x40e531
  40e526:	inc    esi
  40e527:	mov    al,ds:0x71234c18
  40e52c:	fisttp WORD PTR [edx+edi*8]
  40e52f:	shl    esi,cl
  40e531:	mov    al,0x34
  40e533:	fnstcw WORD PTR [esi]
  40e535:	sub    eax,0x41fde43e
  40e53a:	push   0x846cc800
  40e53f:	cmp    BYTE PTR [esi-0x46],bh
  40e542:	cwde   
  40e543:	shl    BYTE PTR [edx-0x10],cl
  40e546:	fisttp QWORD PTR [esi]
  40e548:	hlt    
  40e549:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e54a:	xchg   ecx,eax
  40e54b:	(bad)  
  40e54c:	retf   
  40e54d:	push   0x592a6679
  40e552:	fnstcw WORD PTR ds:0xc89ad398
  40e558:	mov    edx,fs
  40e55a:	je     0x40e56b
  40e55c:	push   es
  40e55d:	adc    eax,ecx
  40e55f:	clc    
  40e560:	push   edi
  40e561:	cwde   
  40e562:	enter  0x1af0,0xfa
  40e566:	dec    BYTE PTR [ebx-0x5840fc69]
  40e56c:	add    eax,DWORD PTR [ecx+edx*8+0x58a169ac]
  40e573:	pop    ecx
  40e574:	(bad)  
  40e575:	outs   dx,DWORD PTR ds:[esi]
  40e576:	sbb    al,0x9e
  40e578:	mov    al,0xdc
  40e57a:	mov    al,BYTE PTR [edi+ecx*1-0x17b4c5a4]
  40e581:	popa   
  40e582:	test   BYTE PTR [edi+0x6813bfde],0x90
  40e589:	lahf   
  40e58a:	js     0x40e57d
  40e58c:	or     bh,BYTE PTR [esp+eiz*2+0x14]
  40e590:	js     0x40e589
  40e592:	mov    bh,BYTE PTR [eax]
  40e594:	clc    
  40e595:	out    dx,al
  40e596:	or     DWORD PTR [esi+0x5d93b55f],ecx
  40e59c:	mov    ecx,0x5825d8b0
  40e5a1:	ret    0xbf8d
  40e5a4:	dec    esi
  40e5a5:	(bad)  
  40e5a6:	mov    eax,0xfcf54e9c
  40e5ab:	or     al,0xc4
  40e5ad:	sbb    dh,dl
  40e5af:	retf   
  40e5b0:	sub    eax,0x610058cd
  40e5b5:	out    dx,eax
  40e5b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5b7:	sub    BYTE PTR ds:0xa6875272,ah
  40e5bd:	jg     0x40e624
  40e5bf:	int3   
  40e5c0:	out    0x59,eax
  40e5c2:	push   eax
  40e5c3:	mov    esi,0xfe1c8b1c
  40e5c8:	mov    ebx,0xa3430a1f
  40e5cd:	or     edi,DWORD PTR [edx-0x19]
  40e5d0:	xchg   esp,eax
  40e5d1:	lods   al,BYTE PTR ds:[esi]
  40e5d2:	push   ebx
  40e5d3:	sbb    DWORD PTR [edx+0x1690699a],edx
  40e5d9:	fistp  WORD PTR [ebp+0x53]
  40e5dc:	clc    
  40e5dd:	imul   esp,DWORD PTR [edx-0x54],0x6b1febe7
  40e5e4:	adc    eax,0x2742c69f
  40e5e9:	push   ds
  40e5ea:	repnz les eax,FWORD PTR [eax+0x6c]
  40e5ee:	mov    esp,0x4f23bd8f
  40e5f3:	xor    BYTE PTR [edi-0x34],al
  40e5f6:	xor    cl,BYTE PTR [edi]
  40e5f8:	mov    dh,0x52
  40e5fa:	ins    BYTE PTR es:[edi],dx
  40e5fb:	test   al,0x86
  40e5fd:	lods   al,BYTE PTR ds:[esi]
  40e5fe:	xchg   ecx,eax
  40e5ff:	and    DWORD PTR [edi],ebx
  40e601:	push   edi
  40e602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e603:	ja     0x40e5dc
  40e605:	inc    ecx
  40e606:	test   BYTE PTR [esi+0x30],0x57
  40e60a:	js     0x40e596
  40e60c:	ins    BYTE PTR es:[edi],dx
  40e60d:	dec    esp
  40e60e:	pushf  
  40e60f:	pop    esi
  40e610:	dec    ebp
  40e611:	loop   0x40e5dd
  40e613:	neg    BYTE PTR es:[edi]
  40e616:	gs pushf 
  40e618:	repnz xchg esp,ecx
  40e61b:	outs   dx,BYTE PTR ds:[esi]
  40e61c:	dec    ecx
  40e61d:	call   0x5a4e6f28
  40e622:	pop    ds
  40e623:	jle    0x40e5ed
  40e625:	cld    
  40e626:	or     DWORD PTR [ecx+ebp*4],0x87288a6e
  40e62d:	je     0x40e5ff
  40e62f:	jnp    0x40e674
  40e631:	inc    esi
  40e632:	or     al,0xaa
  40e634:	jg     0x40e670
  40e636:	fsubp  st(1),st
  40e638:	shl    dh,cl
  40e63a:	leave  
  40e63b:	mov    eax,0x40a50629
  40e640:	dec    ebx
  40e641:	shr    BYTE PTR [esi-0x36],0x3e
  40e645:	mov    ch,0x20
  40e647:	xor    DWORD PTR [esi-0x6b1a1c67],eax
  40e64d:	mov    ch,BYTE PTR [edi-0x14bdfc91]
  40e653:	fstp   DWORD PTR [ebx-0x32]
  40e656:	sub    ch,BYTE PTR [edx]
  40e658:	mov    ah,al
  40e65a:	xor    eax,0xb4464fb8
  40e65f:	add    bh,bh
  40e661:	ficom  DWORD PTR [ebp+0x3]
  40e664:	lds    edx,FWORD PTR [edx-0x60f01617]
  40e66a:	pop    esi
  40e66b:	pushf  
  40e66c:	jae    0x40e6d0
  40e66e:	ins    BYTE PTR es:[edi],dx
  40e66f:	fnstenv ds:0x2dfa8c6f
  40e675:	sahf   
  40e676:	out    dx,al
  40e677:	repz sti 
  40e679:	ficomp WORD PTR [esi+0x406e6196]
  40e67f:	jmp    0x40e651
  40e681:	cmp    al,0x36
  40e683:	lahf   
  40e684:	add    DWORD PTR ds:0xb887a2e8,ebp
  40e68a:	jl     0x40e68f
  40e68c:	mov    edx,0x5f128014
  40e691:	fdivr  DWORD PTR [eax]
  40e693:	mov    dl,0xcd
  40e695:	outs   dx,DWORD PTR ds:[esi]
  40e696:	mov    WORD PTR [eax],?
  40e698:	inc    esi
  40e699:	or     eax,DWORD PTR [eax-0x7b794fd8]
  40e69f:	cld    
  40e6a0:	inc    esp
  40e6a1:	mov    ebx,0x2861fca8
  40e6a6:	lods   al,BYTE PTR ds:[esi]
  40e6a7:	sub    al,0x42
  40e6a9:	pusha  
  40e6aa:	pop    edx
  40e6ab:	nop
  40e6ac:	daa    
  40e6ad:	dec    esp
  40e6ae:	or     al,0x26
  40e6b0:	xchg   edi,eax
  40e6b1:	pop    ecx
  40e6b2:	or     al,0x97
  40e6b4:	in     eax,0xd6
  40e6b6:	rcr    ch,1
  40e6b8:	arpl   WORD PTR [eax-0x35cd59cd],bp
  40e6be:	loopne 0x40e6b4
  40e6c0:	push   ebx
  40e6c2:	scas   eax,DWORD PTR es:[edi]
  40e6c3:	out    dx,al
  40e6c4:	les    esi,FWORD PTR ds:0x2c119454
  40e6ca:	mov    esp,0xcdcadb72
  40e6cf:	push   esp
  40e6d0:	push   cs
  40e6d1:	mov    bh,0xc0
  40e6d3:	cmp    BYTE PTR [ebp+0x13ef5938],dl
  40e6d9:	push   edx
  40e6da:	dec    eax
  40e6db:	lods   al,BYTE PTR ds:[esi]
  40e6dc:	adc    dh,BYTE PTR [ebx+0x53eb016e]
  40e6e2:	push   ecx
  40e6e3:	adc    eax,ecx
  40e6e5:	xchg   ebx,eax
  40e6e6:	lods   al,BYTE PTR ds:[esi]
  40e6e7:	pusha  
  40e6e8:	push   edx
  40e6e9:	in     al,dx
  40e6ea:	adc    ecx,DWORD PTR [ecx-0x642b00be]
  40e6f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6f1:	jge    0x40e748
  40e6f3:	push   ds
  40e6f4:	dec    ebp
  40e6f5:	repnz aas 
  40e6f7:	outs   dx,BYTE PTR ds:[esi]
  40e6f8:	jne    0x40e6f7
  40e6fa:	pop    edi
  40e6fb:	xchg   ebx,eax
  40e6fc:	adc    ebx,DWORD PTR [edi+esi*4]
  40e6ff:	loopne 0x40e719
  40e701:	xlat   BYTE PTR ds:[ebx]
  40e702:	call   0x1c388119
  40e707:	sbb    esp,DWORD PTR [eax+0x7d15e814]
  40e70d:	arpl   WORD PTR [ebx-0x66],sp
  40e710:	push   edi
  40e711:	pop    edi
  40e712:	add    DWORD PTR [ebx+0x1f547030],eax
  40e718:	mov    dl,cl
  40e71a:	xlat   BYTE PTR ds:[ebx]
  40e71b:	push   ebp
  40e71c:	and    bl,BYTE PTR [edi-0x59aff56d]
  40e722:	dec    ebx
  40e723:	and    BYTE PTR es:[edi+0x6b1771e7],ah
  40e72a:	rol    BYTE PTR [ebx+0x363424a0],cl
  40e730:	cli    
  40e731:	mov    edx,0xa37882b
  40e736:	mov    BYTE PTR [edi-0x5ee45b9e],cl
  40e73c:	mov    edi,0x3849f9df
  40e741:	mov    dl,BYTE PTR [ebx-0x1a49f9ae]
  40e747:	add    ch,bl
  40e749:	out    0x48,eax
  40e74b:	cli    
  40e74c:	push   ecx
  40e74d:	sub    BYTE PTR [eax+0x13],al
  40e750:	sbb    BYTE PTR [eax-0x1b],dh
  40e753:	sbb    ebx,ecx
  40e755:	(bad)  
  40e756:	stos   DWORD PTR es:[edi],eax
  40e757:	shr    DWORD PTR [edi],cl
  40e759:	xchg   ebp,eax
  40e75a:	push   eax
  40e75b:	(bad)  
  40e75c:	fnsave [eax]
  40e75e:	ss out dx,eax
  40e760:	cmc    
  40e761:	call   0xa8fb441e
  40e766:	mov    cl,0x18
  40e768:	pop    es
  40e769:	data16 div BYTE PTR [eax]
  40e76c:	xor    DWORD PTR [ebp+0x3b],edi
  40e76f:	rcr    BYTE PTR [edx+0x38],1
  40e772:	retf   0xb10d
  40e775:	ficomp DWORD PTR [eax+0x6e]
  40e778:	fadd   DWORD PTR [esp+ebx*8]
  40e77b:	ficomp WORD PTR ds:0x19858c55
  40e781:	pop    eax
  40e782:	loop   0x40e7f5
  40e784:	ret    
  40e785:	xor    al,0x57
  40e787:	sub    eax,0xc2588d80
  40e78c:	sbb    DWORD PTR [ecx],edi
  40e78e:	or     al,0x55
  40e790:	pop    esi
  40e791:	xor    dh,ch
  40e793:	inc    ebp
  40e794:	xchg   esp,eax
  40e795:	test   DWORD PTR [eax-0x5f],edi
  40e798:	aad    0xdf
  40e79a:	xlat   BYTE PTR ds:[ebx]
  40e79b:	cmp    edx,DWORD PTR [esi]
  40e79d:	rcr    ecx,1
  40e79f:	shl    bl,1
  40e7a1:	(bad)
  40e7a4:	mov    edx,0x1424a670
  40e7a9:	xor    ch,BYTE PTR [ecx]
  40e7ab:	cmp    al,0xa3
  40e7ad:	jl     0x40e745
  40e7af:	lds    ebx,FWORD PTR [esp+esi*1]
  40e7b2:	popa   
  40e7b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7b4:	ins    DWORD PTR es:[edi],dx
  40e7b5:	cmp    BYTE PTR [edi],al
  40e7b7:	and    BYTE PTR [edx-0x76],0xb0
  40e7bb:	jle    0x40e7a3
  40e7bd:	retf   
  40e7be:	std    
  40e7bf:	fisttp QWORD PTR [ecx-0x7e089d9e]
  40e7c5:	js     0x40e835
  40e7c7:	retf   0xad08
  40e7ca:	cli    
  40e7cb:	int    0x4e
  40e7cd:	jle    0x40e792
  40e7cf:	outs   dx,DWORD PTR ds:[esi]
  40e7d0:	jo     0x40e791
  40e7d2:	ds dec edx
  40e7d4:	push   esp
  40e7d5:	xor    DWORD PTR [eax-0x2d13350e],eax
  40e7db:	shl    BYTE PTR [ebx-0x5169a04f],0x92
  40e7e2:	or     dh,al
  40e7e4:	adc    al,0x4d
  40e7e6:	pop    es
  40e7e7:	js     0x40e778
  40e7e9:	or     edx,DWORD PTR [ebp+edx*8-0x1b]
  40e7ed:	add    al,0x65
  40e7ef:	stos   BYTE PTR es:[edi],al
  40e7f0:	fsub   DWORD PTR [eax]
  40e7f2:	mov    ds:0x1c73c67b,eax
  40e7f7:	dec    ebp
  40e7f8:	popa   
  40e7f9:	rcr    DWORD PTR [eax],cl
  40e7fb:	add    eax,0xf19362fa
  40e800:	aaa    
  40e801:	shl    DWORD PTR [ebx],cl
  40e803:	jg     0x40e78f
  40e805:	mov    eax,0x9653f9ac
  40e80a:	add    bh,BYTE PTR [ecx+0x74df9823]
  40e810:	jp     0x40e820
  40e812:	pop    ebp
  40e813:	mov    cs,WORD PTR [eax]
  40e815:	aad    0x9e
  40e817:	jbe    0x40e7f5
  40e819:	out    dx,eax
  40e81a:	inc    eax
  40e81b:	dec    ebp
  40e81c:	push   edx
  40e81d:	mov    bl,0x55
  40e81f:	(bad)  
  40e820:	push   eax
  40e821:	arpl   cx,si
  40e823:	add    BYTE PTR [esi+0x1c],0x62
  40e827:	sub    eax,0x88c04a32
  40e82c:	mov    esi,0x2e4c75d4
  40e831:	sub    DWORD PTR [ebp-0x17],0xcc5d8e3c
  40e838:	adc    BYTE PTR ds:0x9c43e72d,0x4e
  40e83f:	adc    BYTE PTR [ecx+0x5c],bh
  40e842:	maxps  xmm3,XMMWORD PTR [ebx]
  40e845:	cmp    ebx,DWORD PTR [edx+0x54b8a979]
  40e84b:	add    eax,0x3a61f509
  40e850:	push   ds
  40e851:	inc    eax
  40e852:	mov    edx,0xbab5f6ad
  40e857:	shl    BYTE PTR [ecx-0x6863fe03],0x58
  40e85e:	xlat   BYTE PTR ds:[ebx]
  40e85f:	scas   al,BYTE PTR es:[edi]
  40e860:	addr16 out dx,al
  40e862:	(bad)  
  40e863:	int3   
  40e864:	scas   eax,DWORD PTR es:[edi]
  40e865:	shl    BYTE PTR [ecx+0x2f],cl
  40e868:	xchg   ebx,eax
  40e869:	cmp    dl,dl
  40e86b:	mov    WORD PTR [edx-0x41],fs
  40e86e:	sub    eax,DWORD PTR [edx]
  40e870:	aad    0x42
  40e872:	mov    eax,ds:0x7ddaa3f5
  40e877:	fs in  al,0x6
  40e87a:	fdiv   QWORD PTR [edi+0x54091cf3]
  40e880:	imul   BYTE PTR [esi+0x5d]
  40e883:	pop    ebx
  40e884:	xchg   ebp,eax
  40e885:	inc    ebx
  40e886:	pop    edx
  40e887:	mov    ds:0x1cd73a3,al
  40e88c:	mov    edi,0x490487cf
  40e891:	xor    BYTE PTR [edx+0x42],dh
  40e894:	in     al,0xc9
  40e896:	pusha  
  40e897:	dec    BYTE PTR es:[ecx-0x72]
  40e89b:	and    al,0x58
  40e89d:	fnsave [ecx+0x15a05caf]
  40e8a3:	mov    dh,BYTE PTR [ebp+0x31]
  40e8a6:	and    DWORD PTR [edi+0x9],esp
  40e8a9:	sub    al,0xf9
  40e8ab:	pop    ss
  40e8ac:	or     ecx,edx
  40e8ae:	mov    bl,0x82
  40e8b0:	push   ebp
  40e8b1:	xor    DWORD PTR [ebx],ecx
  40e8b3:	mov    ebx,0xacd38415
  40e8b8:	mov    bl,0x56
  40e8ba:	and    eax,0x46ece0db
  40e8bf:	jg     0x40e8c9
  40e8c1:	cli    
  40e8c2:	fimul  DWORD PTR [edx-0x4a728e9d]
  40e8c8:	shl    BYTE PTR [ebp-0x459d72d7],cl
  40e8ce:	ret    0x5643
  40e8d1:	clc    
  40e8d2:	pop    es
  40e8d3:	sahf   
  40e8d4:	and    bh,BYTE PTR ds:0xfec8c40d
  40e8da:	in     al,0x5a
  40e8dc:	mov    ?,eax
  40e8de:	dec    ecx
  40e8df:	mov    esi,0x387146dd
  40e8e4:	mov    dh,BYTE PTR [ecx+0x7978afa7]
  40e8ea:	popa   
  40e8eb:	imul   ebp
  40e8ed:	test   DWORD PTR [ebx],0x2e11ddd2
  40e8f3:	xor    esp,0xffffffc9
  40e8f6:	lock not bh
  40e8f9:	mov    eax,0xe01426d4
  40e8fe:	jp     0x40e96f
  40e900:	out    dx,al
  40e901:	mov    edi,0x849a90ac
  40e906:	mov    WORD PTR [ecx],cs
  40e908:	or     ebp,ebp
  40e90a:	mov    esp,0x1e06f840
  40e90f:	ret    0xcd2f
  40e912:	cld    
  40e913:	jl     0x40e970
  40e915:	ss sar DWORD PTR cs:[ebx],1
  40e919:	and    dh,ch
  40e91b:	jne    0x40e8dc
  40e91d:	inc    esi
  40e91e:	retf   0x4291
  40e921:	gs cli 
  40e923:	rcr    BYTE PTR [esi+0x35e6f94d],0xb1
  40e92a:	jo     0x40e9a3
  40e92c:	mov    edi,0xfa1938a1
  40e931:	cld    
  40e932:	pop    ecx
  40e933:	adc    al,0xd7
  40e935:	inc    ecx
  40e936:	inc    ecx
  40e937:	retf   
  40e938:	in     eax,0x80
  40e93a:	clc    
  40e93b:	mov    esp,0xc3da2204
  40e940:	mov    WORD PTR [ecx+0x6b693c98],?
  40e946:	cmp    ebp,DWORD PTR [ebp+0x7f]
  40e949:	in     eax,0xa
  40e94b:	fiadd  DWORD PTR [ecx+ebx*1+0x25]
  40e94f:	jl     0x40e97d
  40e951:	pop    ebp
  40e952:	adc    cl,BYTE PTR [esi]
  40e954:	sub    BYTE PTR ds:0xca6bba82,bl
  40e95a:	test   DWORD PTR [esi],ebx
  40e95c:	mov    al,ds:0xae28cfb
  40e961:	mov    BYTE PTR [ecx-0x287ee856],ah
  40e967:	pop    ss
  40e968:	ins    BYTE PTR es:[edi],dx
  40e969:	mov    edx,0xa7b74c42
  40e96e:	ja     0x40e9ce
  40e970:	(bad)  
  40e971:	out    dx,eax
  40e972:	mov    edi,0x5cfa92f8
  40e977:	iret   
  40e978:	cmp    al,0x48
  40e97a:	mov    al,ds:0x6622610e
  40e97f:	bound  ebp,QWORD PTR [eax+0x459c05ce]
  40e985:	rcr    BYTE PTR [ebp+0x38],0xa9
  40e989:	hlt    
  40e98a:	cmc    
  40e98b:	aas    
  40e98c:	ins    DWORD PTR es:[edi],dx
  40e98d:	pop    edx
  40e98e:	nop
  40e98f:	push   edx
  40e990:	ficom  WORD PTR [ebp+ecx*2+0x49027d00]
  40e997:	fdivr  DWORD PTR [edi-0x39]
  40e99a:	lea    edx,[edx+0x179d00fe]
  40e9a0:	xchg   ecx,eax
  40e9a1:	(bad)  
  40e9a2:	fcmovnu st,st(7)
  40e9a4:	sub    al,0x26
  40e9a6:	data16 loop 0x40e954
  40e9a9:	retf   
  40e9aa:	mov    al,ds:0x4e6ca5ed
  40e9af:	jge    0x40e9d0
  40e9b1:	hlt    
  40e9b2:	mov    ss:0xba5c78d0,al
  40e9b8:	rol    DWORD PTR [ebx+0x176fc757],0xf6
  40e9bf:	cmp    BYTE PTR [edx-0x12],dh
  40e9c2:	push   ss
  40e9c3:	jmp    DWORD PTR [ecx+0x3e]
  40e9c6:	xchg   BYTE PTR [edx+0x6f716ec8],cl
  40e9cc:	cmp    ebx,DWORD PTR [ecx+0x67]
  40e9cf:	mov    al,0xaf
  40e9d1:	shr    edx,1
  40e9d3:	adc    BYTE PTR [esi+0x74f79fbe],bl
  40e9d9:	xor    al,dh
  40e9db:	and    ecx,0xe0e7d9df
  40e9e1:	cmp    DWORD PTR [edx],ecx
  40e9e3:	mov    al,ds:0x249d8811
  40e9e8:	jle    0x40e9f7
  40e9ea:	fcom   st(1)
  40e9ec:	aaa    
  40e9ed:	in     al,dx
  40e9ee:	out    0xb5,eax
  40e9f0:	cld    
  40e9f1:	adc    eax,0xc81a970f
  40e9f6:	stos   DWORD PTR es:[edi],eax
  40e9f7:	test   al,0xd9
  40e9f9:	mov    dh,0x4
  40e9fb:	int3   
  40e9fc:	push   0xffffffe6
  40e9fe:	fisttp QWORD PTR [edi+0x33]
  40ea01:	pop    eax
  40ea02:	pop    eax
  40ea03:	call   0x7ac3dff
  40ea08:	mov    ah,0xc
  40ea0a:	in     al,0xb9
  40ea0c:	test   bl,ah
  40ea0e:	out    0x75,eax
  40ea10:	sbb    BYTE PTR [eax],ch
  40ea12:	dec    ebx
  40ea13:	ins    BYTE PTR es:[edi],dx
  40ea14:	jmp    0x40ea2a
  40ea16:	pop    esi
  40ea17:	push   edx
  40ea18:	mov    esi,0xb8b9e4a2
  40ea1d:	fbstp  TBYTE PTR [esi-0x6b01b3bf]
  40ea23:	ficom  WORD PTR [edi-0x28]
  40ea26:	and    esi,DWORD PTR [esp+esi*8]
  40ea29:	push   cs
  40ea2a:	in     eax,0x69
  40ea2c:	cmc    
  40ea2d:	out    dx,eax
  40ea2e:	jle    0x40eaa3
  40ea30:	sahf   
  40ea31:	sub    al,al
  40ea33:	inc    ebx
  40ea34:	std    
  40ea35:	or     ch,BYTE PTR [ebx]
  40ea37:	or     DWORD PTR [ebx],esi
  40ea39:	icebp  
  40ea3a:	pop    es
  40ea3b:	sbb    eax,0x4c0d98db
  40ea40:	inc    ebp
  40ea41:	xchg   edi,eax
  40ea42:	frstor [ecx-0x24]
  40ea45:	retf   
  40ea46:	stc    
  40ea47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea48:	xchg   ebx,eax
  40ea49:	out    0x8e,eax
  40ea4b:	popf   
  40ea4c:	or     al,0x82
  40ea4e:	inc    DWORD PTR [edx+0x55]
  40ea51:	in     al,0xd4
  40ea53:	sbb    dl,BYTE PTR [edx+0x43]
  40ea56:	sub    DWORD PTR [esi+eiz*4+0x39000c4c],0x4495fec1
  40ea61:	aas    
  40ea62:	add    bl,BYTE PTR [esi-0x23]
  40ea65:	por    mm6,QWORD PTR [esi-0x4494ffef]
  40ea6c:	xor    ch,ch
  40ea6e:	repz xchg edi,eax
  40ea70:	adc    al,0xe5
  40ea72:	jo     0x40ea1d
  40ea74:	dec    edi
  40ea75:	mov    esp,0x2b22e0e3
  40ea7a:	dec    ecx
  40ea7b:	mov    ah,0x86
  40ea7d:	pop    edx
  40ea7e:	call   0x39e2:0xab5075bc
  40ea85:	cmp    al,0x9a
  40ea87:	in     eax,0x3e
  40ea89:	mov    al,0x7e
  40ea8b:	inc    edx
  40ea8c:	(bad)  
  40ea8d:	out    dx,al
  40ea8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea8f:	pop    es
  40ea90:	outs   dx,DWORD PTR ds:[esi]
  40ea91:	inc    esi
  40ea92:	dec    esi
  40ea93:	jmp    0xe52cc91b
  40ea98:	leave  
  40ea99:	imul   edx,DWORD PTR [eax+0x1a],0x30
  40ea9d:	pop    edx
  40ea9e:	dec    esp
  40ea9f:	sahf   
  40eaa0:	dec    ecx
  40eaa1:	popa   
  40eaa2:	leave  
  40eaa3:	xchg   esp,eax
  40eaa4:	rol    DWORD PTR [ebp-0x4846c1d2],cl
  40eaaa:	push   cs
  40eaab:	inc    ebp
  40eaac:	jp     0x40ead4
  40eaae:	sbb    al,0xf7
  40eab0:	ret    
  40eab1:	cwde   
  40eab2:	shr    ch,cl
  40eab4:	shl    DWORD PTR [eax],cl
  40eab6:	and    eax,0xec90767e
  40eabb:	aad    0x6e
  40eabd:	fistp  WORD PTR [edx+0x5f]
  40eac0:	es mov eax,0x8803e5b9
  40eac6:	ja     0x40ea83
  40eac8:	xor    DWORD PTR [eax],esi
  40eaca:	mov    ah,0x49
  40eacc:	sbb    BYTE PTR [edi-0x7],bh
  40eacf:	out    0xb0,eax
  40ead1:	mov    ds:0xe77b5508,eax
  40ead6:	push   edi
  40ead7:	paddusb mm7,QWORD PTR [esi]
  40eada:	pusha  
  40eadb:	adc    DWORD PTR [ecx+ebp*4+0x23e3b3b8],edx
  40eae2:	out    0x95,al
  40eae4:	cmp    al,0x68
  40eae6:	mov    bh,0x1f
  40eae8:	aas    
  40eae9:	mov    ch,0x9c
  40eaeb:	call   0x5a5:0xd01f2813
  40eaf2:	mov    ecx,DWORD PTR [ebx]
  40eaf4:	shr    BYTE PTR [edi+0x7a48a584],cl
  40eafa:	sub    BYTE PTR [si-0x15],dl
  40eafe:	int3   
  40eaff:	xlat   BYTE PTR ds:[ebx]
  40eb00:	mov    edi,ds
  40eb02:	shl    esi,0xf8
  40eb05:	push   0x50c4851
  40eb0a:	sahf   
  40eb0b:	add    edx,DWORD PTR [eax]
  40eb0d:	bound  ebx,QWORD PTR [ebx+0x6a3580dd]
  40eb13:	test   eax,0x65756a36
  40eb18:	or     BYTE PTR [edx],ah
  40eb1a:	pushf  
  40eb1b:	retf   0x33ef
  40eb1e:	imul   ecx,DWORD PTR [ebx-0x75c06719],0x21f2a820
  40eb28:	cmp    DWORD PTR ds:0x64c7e24a,esp
  40eb2e:	mov    eax,ds
  40eb30:	jecxz  0x40eae7
  40eb32:	cmc    
  40eb33:	mov    dl,0x97
  40eb35:	xlat   BYTE PTR ds:[ebx]
  40eb36:	mov    ds:0xed7cb9d4,al
  40eb3b:	xchg   ebp,eax
  40eb3c:	fwait
  40eb3d:	cmp    edi,DWORD PTR [edx+ebx*8-0x32]
  40eb41:	xor    BYTE PTR [esp+esi*8+0xd],dl
  40eb45:	(bad)  
  40eb46:	in     eax,dx
  40eb47:	mov    dl,0x25
  40eb49:	xor    DWORD PTR [ebx],edx
  40eb4b:	ins    BYTE PTR es:[edi],dx
  40eb4c:	adc    DWORD PTR [ebp+ebx*1-0x4ab60a69],esi
  40eb53:	mov    al,bh
  40eb55:	mov    es,esp
  40eb57:	jp     0x40eb94
  40eb59:	rcr    ah,0x8a
  40eb5c:	std    
  40eb5d:	mov    eax,ds:0xe23cfd07
  40eb62:	jb     0x40ebcd
  40eb64:	mov    ebx,0xdb538c27
  40eb69:	add    edx,DWORD PTR ss:[edi+0x24962538]
  40eb70:	sbb    dl,bh
  40eb72:	inc    ebx
  40eb73:	in     eax,dx
  40eb74:	fs fucomi st,st(4)
  40eb77:	leave  
  40eb78:	add    ah,BYTE PTR [ebx+edx*8]
  40eb7b:	pop    esi
  40eb7c:	icebp  
  40eb7d:	pop    ds
  40eb7e:	in     al,0x62
  40eb80:	call   0x41aa90be
  40eb85:	mov    WORD PTR [ecx],ss
  40eb87:	dec    edx
  40eb88:	mov    ds:0xa9c28db2,al
  40eb8d:	bound  ebp,QWORD PTR [ebx]
  40eb8f:	push   ecx
  40eb90:	push   sp
  40eb92:	push   0xffffffc4
  40eb94:	cmp    cl,BYTE PTR [ebp+eax*1+0x307b5e01]
  40eb9b:	pop    es
  40eb9c:	xchg   esi,eax
  40eb9d:	loope  0x40eb80
  40eb9f:	sbb    edi,DWORD PTR [eax]
  40eba1:	rcr    BYTE PTR [ebx+0x7c],0xa1
  40eba5:	sbb    al,0x86
  40eba7:	nop
  40eba8:	jno    0x40ec1a
  40ebaa:	xor    cl,bl
  40ebac:	rol    DWORD PTR [ecx-0x680e49aa],1
  40ebb2:	xchg   esp,eax
  40ebb3:	pop    es
  40ebb4:	jmp    0x40ebe1
  40ebb6:	mov    bh,0x32
  40ebb8:	xchg   esp,eax
  40ebb9:	rcr    DWORD PTR [ebx-0x21fc222f],cl
  40ebbf:	inc    esp
  40ebc0:	sar    DWORD PTR [edi+esi*8-0x42],0x62
  40ebc5:	mov    dh,0x6c
  40ebc7:	aad    0x64
  40ebc9:	mov    edi,0x48fa6437
  40ebce:	dec    ecx
  40ebcf:	xchg   esp,eax
  40ebd0:	fiadd  DWORD PTR [edi]
  40ebd2:	pop    ebp
  40ebd3:	stos   BYTE PTR es:[edi],al
  40ebd4:	dec    esp
  40ebd5:	test   al,0x76
  40ebd7:	jae    0x40ec2f
  40ebd9:	pop    esi
  40ebda:	not    BYTE PTR [eax-0x485d0b08]
  40ebe0:	xchg   ecx,eax
  40ebe1:	mov    ecx,ss
  40ebe3:	pop    esp
  40ebe4:	fimul  WORD PTR [edi-0x60b9f090]
  40ebea:	shr    edi,cl
  40ebec:	and    ah,BYTE PTR [ebx]
  40ebee:	aaa    
  40ebef:	jecxz  0x40ebd1
  40ebf1:	push   es
  40ebf2:	fnstsw WORD PTR [ebx+edi*4-0x60]
  40ebf6:	and    al,0x1b
  40ebf8:	call   0x74548f40
  40ebfd:	cdq    
  40ebfe:	mov    cl,0xf9
  40ec00:	cmp    DWORD PTR [eax-0x19],ecx
  40ec03:	sub    al,BYTE PTR [eax]
  40ec05:	test   BYTE PTR [esi+eax*4+0x5743e202],dl
  40ec0c:	lods   eax,DWORD PTR ds:[esi]
  40ec0d:	out    dx,al
  40ec0e:	call   0x21209ddf
  40ec13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec14:	pop    ebx
  40ec15:	mov    al,BYTE PTR [esi]
  40ec17:	add    edx,esi
  40ec19:	popf   
  40ec1a:	push   ebp
  40ec1b:	jmp    0xb271fca9
  40ec20:	(bad)  
  40ec21:	call   0x6481b0c3
  40ec26:	lea    esi,[edx]
  40ec28:	sbb    esi,DWORD PTR [ecx+0x4b93aaf]
  40ec2e:	sti    
  40ec2f:	inc    ebx
  40ec30:	loope  0x40ebc4
  40ec32:	ret    
  40ec33:	mov    WORD PTR [esi+0x6a],fs
  40ec36:	iret   
  40ec37:	xchg   ebp,eax
  40ec38:	jp     0x40ec7d
  40ec3a:	imul   esi,DWORD PTR [esi],0xc
  40ec3d:	push   ebp
  40ec3e:	push   esi
  40ec3f:	pop    ebp
  40ec40:	push   0x4baf0a23
  40ec45:	hlt    
  40ec46:	test   DWORD PTR [edx],edi
  40ec48:	add    al,0xfb
  40ec4a:	sub    eax,0xbec1c43f
  40ec4f:	xchg   edx,eax
  40ec50:	icebp  
  40ec51:	mov    bl,0x5
  40ec53:	icebp  
  40ec54:	loopne 0x40ebd8
  40ec56:	pusha  
  40ec57:	sbb    edi,edi
  40ec59:	aad    0x5c
  40ec5b:	popa   
  40ec5c:	int3   
  40ec5d:	lods   al,BYTE PTR ds:[esi]
  40ec5e:	loop   0x40ec8c
  40ec60:	test   DWORD PTR [ecx+0x16a34224],ecx
  40ec66:	sub    BYTE PTR [edx+0x3e],0x96
  40ec6a:	mov    cl,0x4b
  40ec6c:	je     0x40ecd0
  40ec6e:	es inc edx
  40ec70:	dec    esp
  40ec71:	shl    BYTE PTR [ebp+edx*1+0x60],1
  40ec75:	sahf   
  40ec76:	jns    0x40ecdb
  40ec78:	dec    ebp
  40ec79:	jno    0x40ecef
  40ec7b:	iret   
  40ec7c:	(bad)  
  40ec7d:	icebp  
  40ec7e:	in     al,dx
  40ec7f:	xor    BYTE PTR [ebx],bl
  40ec81:	hlt    
  40ec82:	and    DWORD PTR [edi-0x79dacfae],0xfffffff2
  40ec89:	cwde   
  40ec8a:	lods   al,BYTE PTR ds:[esi]
  40ec8b:	inc    ebx
  40ec8c:	hlt    
  40ec8d:	jnp    0x40ecb7
  40ec8f:	add    BYTE PTR [edx-0x501a572e],al
  40ec95:	mov    ebp,0xf2fe249
  40ec9a:	stos   DWORD PTR es:[edi],eax
  40ec9b:	outs   dx,BYTE PTR ds:[esi]
  40ec9c:	mov    ebp,DWORD PTR [ecx-0x4f407936]
  40eca2:	pop    eax
  40eca3:	xchg   BYTE PTR [edi],cl
  40eca5:	int3   
  40eca6:	leave  
  40eca7:	inc    eax
  40eca8:	inc    ebx
  40eca9:	fs pop esp
  40ecab:	inc    ebp
  40ecac:	push   ds
  40ecad:	shr    BYTE PTR [edx-0x5db95531],cl
  40ecb3:	xor    ecx,DWORD PTR [eax-0x5b]
  40ecb6:	loop   0x40ed33
  40ecb8:	push   edi
  40ecb9:	lds    ebp,FWORD PTR [ecx*1-0x3092be2f]
  40ecc0:	ret    0x106
  40ecc3:	sbb    al,0x4d
  40ecc5:	addr16 ret 0x839b
  40ecc9:	jbe    0x40ec4f
  40eccb:	mov    ?,WORD PTR [esi]
  40eccd:	sbb    esp,DWORD PTR [esi-0x1ed78e90]
  40ecd3:	lods   al,BYTE PTR ds:[esi]
  40ecd4:	lock repnz outs dx,BYTE PTR ds:[esi]
  40ecd7:	sub    al,0xda
  40ecd9:	xchg   esp,eax
  40ecda:	fisttp QWORD PTR [ecx-0x7bc2d799]
  40ece0:	add    DWORD PTR ss:[bx+0x67],0x8e74caaf
  40ece9:	inc    ebx
  40ecea:	mov    WORD PTR [edi+ebp*2],ds
  40eced:	push   0x32
  40ecef:	pop    esi
  40ecf0:	sti    
  40ecf1:	jge    0x40ec83
  40ecf3:	test   DWORD PTR [ebp+ebp*4-0x477ec41e],eax
  40ecfa:	mov    esi,0xcc536d86
  40ecff:	push   es
  40ed00:	lea    ebx,[eax-0x60e0bc24]
  40ed06:	push   ebp
  40ed07:	gs ins DWORD PTR es:[edi],dx
  40ed09:	std    
  40ed0a:	out    0x9f,eax
  40ed0c:	and    eax,0x5b787e5a
  40ed11:	add    BYTE PTR [esi-0x3f],bl
  40ed14:	inc    edx
  40ed15:	cmp    dl,dl
  40ed17:	jmp    0x8db5bc1e
  40ed1c:	xchg   ebp,eax
  40ed1d:	popf   
  40ed1e:	dec    ebx
  40ed1f:	jmp    FWORD PTR [edi-0x6a22ddf3]
  40ed25:	std    
  40ed26:	xchg   edx,eax
  40ed27:	pop    esi
  40ed28:	daa    
  40ed29:	and    dl,ch
  40ed2b:	pop    eax
  40ed2c:	retf   0x7f50
  40ed2f:	outs   dx,DWORD PTR ds:[esi]
  40ed30:	out    0x9e,eax
  40ed32:	jns    0x40ecce
  40ed34:	push   esp
  40ed35:	(bad)  [edx-0x798e7afb]
  40ed3b:	adc    al,0x91
  40ed3d:	mov    al,0x3a
  40ed3f:	mov    eax,ds:0x1419f12d
  40ed44:	in     al,0x96
  40ed46:	(bad)  
  40ed47:	int    0xa6
  40ed49:	jae    0x40ecf1
  40ed4b:	lea    esi,[ebx-0x3666a84f]
  40ed51:	arpl   WORD PTR [edi],bp
  40ed53:	aad    0x14
  40ed55:	imul   edx,DWORD PTR [eax],0x33
  40ed58:	jnp    0x40ed2a
  40ed5a:	out    dx,al
  40ed5b:	mov    ch,0xd2
  40ed5d:	cmc    
  40ed5e:	jno    0x40eda6
  40ed60:	inc    DWORD PTR [ebp+0x5c]
  40ed63:	shl    BYTE PTR [edx],0x50
  40ed66:	xor    al,0x98
  40ed68:	ins    BYTE PTR es:[edi],dx
  40ed69:	dec    edx
  40ed6a:	arpl   WORD PTR [esi-0x1656d932],bp
  40ed70:	mov    ecx,0x3ae44d43
  40ed75:	sbb    ecx,esp
  40ed77:	aad    0xd1
  40ed79:	sbb    esi,DWORD PTR [edx-0x56]
  40ed7c:	adc    BYTE PTR [edi-0x7223f560],ch
  40ed82:	fdiv   DWORD PTR [ebx+esi*2-0x43f323bf]
  40ed89:	xchg   edx,eax
  40ed8a:	popf   
  40ed8b:	push   ebx
  40ed8c:	pop    ds
  40ed8d:	mov    cl,0xc3
  40ed8f:	loope  0x40ed11
  40ed91:	lods   al,BYTE PTR ds:[esi]
  40ed92:	xchg   esi,eax
  40ed93:	pusha  
  40ed94:	jp     0x40ed92
  40ed96:	pop    ss
  40ed97:	fist   WORD PTR [esi+0x24]
  40ed9a:	mov    eax,ds:0x101ba066
  40ed9f:	aaa    
  40eda0:	addr16 fs in al,dx
  40eda3:	inc    esp
  40eda4:	mov    ebp,ebx
  40eda6:	adc    eax,0xf73e880
  40edab:	in     eax,0xc5
  40edad:	ins    DWORD PTR es:[edi],dx
  40edae:	xchg   ebx,eax
  40edaf:	and    BYTE PTR [ebx+0x3da13bf3],dh
  40edb5:	jbe    0x40ed39
  40edb7:	aas    
  40edb8:	mov    ebp,0x84bb1d21
  40edbd:	retf   
  40edbe:	loopne 0x40edd5
  40edc0:	push   edi
  40edc1:	cli    
  40edc2:	aam    0x9a
  40edc4:	xor    al,0xb7
  40edc6:	call   0xbf502eb4
  40edcb:	mov    ecx,0x44dbdcb9
  40edd0:	mov    es,WORD PTR [ebx-0xf]
  40edd3:	imul   BYTE PTR [ebx+ebp*1-0x5faa0c25]
  40edda:	lods   al,BYTE PTR ds:[esi]
  40eddb:	xor    al,0x15
  40eddd:	mov    ah,0xe
  40eddf:	mov    dl,0xb0
  40ede1:	loop   0x40ee30
  40ede3:	popa   
  40ede4:	jns    0x40ed88
  40ede6:	clc    
  40ede7:	call   0x3d7edafa
  40edec:	sbb    BYTE PTR [ebx],al
  40edee:	imul   ecx,DWORD PTR [edx],0xffffffac
  40edf1:	int    0xc4
  40edf3:	or     eax,0xe8cda48b
  40edf8:	mov    esi,0x7745a469
  40edfd:	les    ebp,FWORD PTR [esi+0x40]
  40ee00:	call   0x6b648d5c
  40ee05:	ins    BYTE PTR es:[edi],dx
  40ee06:	test   bl,ah
  40ee08:	jecxz  0x40ed8c
  40ee0a:	mov    al,0x95
  40ee0c:	jp     0x40ee62
  40ee0e:	fwait
  40ee0f:	mov    ah,0x8c
  40ee11:	fwait
  40ee12:	push   ebp
  40ee13:	(bad)  
  40ee14:	push   eax
  40ee15:	cli    
  40ee16:	jle    0x40eda5
  40ee18:	add    eax,0x6c9c0845
  40ee1d:	mov    eax,0x5f22793a
  40ee22:	cmc    
  40ee23:	add    eax,0x5f133cc3
  40ee28:	jae    0x40ee9c
  40ee2a:	stc    
  40ee2b:	cmp    DWORD PTR [edi],ebx
  40ee2d:	inc    eax
  40ee2e:	test   eax,edx
  40ee30:	dec    ebx
  40ee31:	popa   
  40ee32:	sub    dh,BYTE PTR [edi+0x3579b52e]
  40ee38:	repz popa 
  40ee3a:	test   al,0xb8
  40ee3c:	sub    ax,0x6289
  40ee40:	pop    ebp
  40ee41:	mov    esi,0x70c5eaea
  40ee46:	bound  eax,QWORD PTR es:[ebp+0x74]
  40ee4a:	pop    esi
  40ee4b:	push   0x690d9e45
  40ee50:	push   esi
  40ee51:	jp     0x40ee9d
  40ee53:	jl     0x40ee28
  40ee55:	retf   0xa6e5
  40ee58:	adc    BYTE PTR [esp+ebp*4-0x4b09b8c5],al
  40ee5f:	in     al,dx
  40ee60:	test   al,0x10
  40ee62:	mov    ds:0x486de05b,eax
  40ee67:	lods   eax,DWORD PTR ds:[esi]
  40ee68:	sub    ch,bh
  40ee6a:	push   cs
  40ee6b:	iret   
  40ee6c:	and    eax,0x24bdbc1c
  40ee71:	fdiv   QWORD PTR [ebx]
  40ee73:	xor    eax,0xcb3e65c8
  40ee78:	adc    ebx,0xffffffc6
  40ee7b:	mov    ah,0x99
  40ee7d:	inc    edx
  40ee7e:	mov    esp,0xf0b0764b
  40ee83:	loope  0x40eedc
  40ee85:	adc    al,BYTE PTR [ebx]
  40ee87:	gs pop ebp
  40ee89:	dec    edx
  40ee8a:	xor    al,0x25
  40ee8c:	adc    ecx,DWORD PTR [edi-0x7d]
  40ee8f:	mov    ebp,0x866d744c
  40ee94:	jno    0x40eeb7
  40ee96:	jno    0x40ee4e
  40ee98:	iret   
  40ee99:	sbb    esp,esi
  40ee9b:	add    BYTE PTR [esp+edi*1],bh
  40ee9e:	cmp    DWORD PTR [edx],esp
  40eea0:	loope  0x40ee6d
  40eea2:	and    eax,0xb3e2c59e
  40eea7:	das    
  40eea8:	xchg   esi,eax
  40eea9:	sub    DWORD PTR [ebp+0x2564fa4b],0x2428f944
  40eeb3:	jecxz  0x40ee94
  40eeb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeb6:	xchg   edi,eax
  40eeb7:	adc    dh,BYTE PTR [ecx-0x769f27ff]
  40eebd:	clc    
  40eebe:	jmp    0x51b0:0xa4b0912e
  40eec5:	add    al,0xb7
  40eec7:	call   0xf82c:0x71f16483
  40eece:	xchg   ebp,eax
  40eecf:	xor    ah,al
  40eed1:	loope  0x40ef30
  40eed3:	shl    DWORD PTR [edi-0xbbff6a2],1
  40eed9:	push   esi
  40eeda:	ins    BYTE PTR es:[edi],dx
  40eedb:	push   cs
  40eedc:	je     0x40ef1b
  40eede:	mov    esp,0x7700adcd
  40eee3:	lods   eax,DWORD PTR ds:[esi]
  40eee4:	add    al,0xcb
  40eee6:	mov    esi,0x26e63e28
  40eeeb:	cmp    BYTE PTR [ebp-0x27],bl
  40eeee:	mov    cl,0x1d
  40eef0:	jbe    0x40eef0
  40eef2:	outs   dx,DWORD PTR ds:[esi]
  40eef3:	mov    al,ds:0x84b422a3
  40eef8:	loopne 0x40ee96
  40eefa:	inc    esi
  40eefb:	mov    cl,dh
  40eefd:	mov    ecx,esi
  40eeff:	and    DWORD PTR [ecx],ecx
  40ef01:	and    eax,0xcf2ebf2b
  40ef06:	fcomip st,st(5)
  40ef08:	ins    DWORD PTR es:[edi],dx
  40ef09:	test   eax,0x467a97a8
  40ef0e:	sbb    edi,DWORD PTR [edx]
  40ef10:	or     BYTE PTR [esi+0x41f8aa7f],al
  40ef16:	mov    edx,0x3441d164
  40ef1b:	pop    edx
  40ef1c:	cld    
  40ef1d:	sbb    cl,BYTE PTR [ecx+esi*2+0x1e]
  40ef21:	mov    ecx,0xc2aca277
  40ef26:	loope  0x40eed8
  40ef28:	and    al,0xce
  40ef2a:	push   eax
  40ef2b:	push   ebx
  40ef2c:	push   ss
  40ef2d:	pop    eax
  40ef2e:	and    BYTE PTR [eax-0x25],dl
  40ef31:	inc    ecx
  40ef32:	scas   al,BYTE PTR es:[edi]
  40ef33:	test   BYTE PTR [eax+0x6a],bh
  40ef36:	sar    BYTE PTR [edi],1
  40ef38:	pop    ss
  40ef39:	es pop ecx
  40ef3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef3c:	push   0x26
  40ef3e:	fcomp  st(5)
  40ef40:	in     al,0xcf
  40ef42:	ror    DWORD PTR [ebx-0x3f],1
  40ef45:	(bad)  
  40ef46:	jg     0x40ef1a
  40ef48:	pushf  
  40ef49:	xor    al,BYTE PTR [eax+0xc01d655]
  40ef4f:	popa   
  40ef50:	stos   DWORD PTR es:[edi],eax
  40ef51:	cwde   
  40ef52:	xchg   BYTE PTR [eax],bl
  40ef54:	repz pop ebp
  40ef56:	xor    eax,0x23b5a52
  40ef5b:	ins    BYTE PTR es:[edi],dx
  40ef5c:	in     eax,dx
  40ef5d:	shl    ah,0xc8
  40ef60:	inc    esp
  40ef61:	or     BYTE PTR [ecx-0x323cbb8],bl
  40ef67:	push   ebx
  40ef68:	xchg   edx,eax
  40ef69:	fimul  DWORD PTR gs:[edx+0x41]
  40ef6d:	jb     0x40ef45
  40ef6f:	lock jo 0x40efde
  40ef72:	fsubr  QWORD PTR [ebx+edx*1]
  40ef75:	cmp    eax,0x4e88fdbd
  40ef7a:	shl    BYTE PTR [ebx-0x58c523a9],1
  40ef80:	(bad)  
  40ef81:	(bad)  
  40ef82:	scas   eax,DWORD PTR es:[edi]
  40ef83:	lock dec ecx
  40ef85:	inc    ebx
  40ef86:	jo     0x40efdb
  40ef88:	imul   ecx,DWORD PTR [ebx+0x7f],0xffffffc8
  40ef8c:	mov    DWORD PTR [esp+ecx*8],ecx
  40ef8f:	xor    bh,BYTE PTR [ebp-0x7a563bec]
  40ef95:	ret    0x21cf
  40ef98:	pusha  
  40ef99:	lock push ecx
  40ef9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef9c:	or     esp,DWORD PTR [ecx+0x31]
  40ef9f:	icebp  
  40efa0:	fsub   QWORD PTR [eax+edx*2+0x39]
  40efa4:	lea    esp,[ebx+0x1]
  40efa7:	bound  ebx,QWORD PTR [ebp+0x5b]
  40efaa:	popa   
  40efab:	(bad)  
  40efac:	push   ebp
  40efad:	popf   
  40efae:	and    al,0x40
  40efb0:	enter  0x8add,0x45
  40efb4:	inc    DWORD PTR [ecx+0x42901825]
  40efba:	add    BYTE PTR [eax],al
  40efbc:	add    BYTE PTR [eax],al
  40efbe:	add    BYTE PTR [ebx],dh
  40efc0:	leave  
  40efc1:	or     ecx,DWORD PTR ds:0x429018
  40efc7:	inc    ecx
  40efc8:	mov    DWORD PTR ds:0x429018,ecx
  40efce:	cmp    DWORD PTR ds:0x429018,0xa
  40efd5:	jne    0x40efe1
  40efdb:	call   DWORD PTR ds:0x42e9b3
  40efe1:	cmp    DWORD PTR ds:0x429018,0x9
  40efe8:	jne    0x40effb
  40efee:	mov    ecx,DWORD PTR ds:0x429018
  40eff4:	inc    ecx
  40eff5:	mov    DWORD PTR ds:0x429018,ecx
  40effb:	cmp    DWORD PTR ds:0x429018,0x1e
  40f002:	jb     0x40efbf
  40f008:	sub    DWORD PTR ds:0x42c014,ecx
  40f00e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f011:	xor    al,0x73
  40f013:	sub    al,0x9
  40f015:	mov    DWORD PTR ds:0x42b000,0xef4
  40f01f:	mov    BYTE PTR [ecx],al
  40f021:	and    DWORD PTR ds:0x42b01c,0x42a004
  40f02b:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  40f032:	sbb    DWORD PTR ds:0x429024,0xfd3
  40f03c:	push   ebx
  40f03d:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  40f044:	mov    ecx,DWORD PTR [ebp-0x18]
  40f047:	xor    eax,0x6376
  40f04c:	push   esi
  40f04d:	and    DWORD PTR ds:0x42c01c,0x0
  40f057:	jmp    0x40f06a
  40f05c:	xor    eax,eax
  40f05e:	add    eax,DWORD PTR ds:0x42c01c
  40f064:	inc    eax
  40f065:	mov    ds:0x42c01c,eax
  40f06a:	cmp    DWORD PTR ds:0x42c01c,0x16
  40f071:	jae    0x40f0bd
  40f077:	cmp    DWORD PTR ds:0x42c01c,0x4
  40f07e:	jne    0x40f0a0
  40f084:	push   DWORD PTR [ebp-0x24]
  40f087:	push   0x42901c
  40f08c:	push   DWORD PTR [ebp-0x18]
  40f08f:	push   DWORD PTR [ebp-0x14]
  40f092:	push   DWORD PTR [ebp-0x24]
  40f095:	push   0x236f
  40f09a:	call   DWORD PTR ds:0x42e9b7
  40f0a0:	cmp    DWORD PTR ds:0x42c01c,0x3
  40f0a7:	jne    0x40f0b8
  40f0ad:	mov    eax,ds:0x42c01c
  40f0b2:	inc    eax
  40f0b3:	mov    ds:0x42c01c,eax
  40f0b8:	jmp    0x40f05c
  40f0bd:	mov    eax,0x7510899
  40f0c2:	xor    ecx,eax
  40f0c4:	mov    esi,0x3272e0
  40f0c9:	adc    DWORD PTR ds:0x42a014,0x429010
  40f0d3:	push   edi
  40f0d4:	add    ecx,esi
  40f0d6:	jmp    0x40f0fa
  40f0db:	mov    DWORD PTR ds:0x42c014,0x1850
  40f0e5:	mov    dl,BYTE PTR [ebp-0x1]
  40f0e8:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40f0ef:	mov    DWORD PTR ds:0x42a00c,0x213a
  40f0f9:	inc    ecx
  40f0fa:	mov    DWORD PTR ds:0x42b000,0x51ce
  40f104:	cmp    ecx,0x40
  40f107:	jb     0x40f0db
  40f10d:	mov    edx,DWORD PTR [ebp-0x18]
  40f110:	xor    edx,eax
  40f112:	add    edx,esi
  40f114:	mov    DWORD PTR ds:0x42c00c,0x7eb4
  40f11e:	jmp    0x40f1de
  40f123:	sub    DWORD PTR ds:0x42d018,edi
  40f129:	mov    edi,DWORD PTR [ebp+0x8]
  40f12c:	and    DWORD PTR ds:0x42d008,0x0
  40f136:	jmp    0x40f14a
  40f13b:	xor    ecx,ecx
  40f13d:	or     ecx,DWORD PTR ds:0x42d008
  40f143:	inc    ecx
  40f144:	mov    DWORD PTR ds:0x42d008,ecx
  40f14a:	cmp    DWORD PTR ds:0x42d008,0x18
  40f151:	jae    0x40f175
  40f157:	cmp    DWORD PTR ds:0x42d008,0x26
  40f15e:	jne    0x40f16a
  40f164:	call   DWORD PTR ds:0x42e9bb
  40f16a:	jmp    0x40f13b
  40f16f:	xor    DWORD PTR ds:0x42a00c,edx
  40f175:	mov    ecx,0x8a8c
  40f17a:	xor    DWORD PTR ds:0x42a004,0x50dc
  40f184:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f189:	mov    edi,0x3b50
  40f18e:	add    DWORD PTR ds:0x429008,0x42b008
  40f198:	add    cx,di
  40f19b:	xor    DWORD PTR ds:0x429018,0x2fa9
  40f1a5:	movzx  ecx,cx
  40f1a8:	mov    DWORD PTR [ebp-0xc],ecx
  40f1ab:	mov    ecx,DWORD PTR [ebp+0x8]
  40f1ae:	add    DWORD PTR ds:0x42b000,0x4595
  40f1b8:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f1bc:	mov    DWORD PTR ds:0x42c010,0x3cf8
  40f1c6:	xor    ecx,0x8a8c
  40f1cc:	add    ecx,edi
  40f1ce:	mov    edi,0x13c
  40f1d3:	mov    edi,DWORD PTR [ebp-0xc]
  40f1d6:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40f1dd:	inc    edx
  40f1de:	mov    DWORD PTR ds:0x42c008,0x3284
  40f1e8:	mov    ecx,DWORD PTR [ebp-0x10]
  40f1eb:	mov    DWORD PTR ds:0x42d00c,0x2d6d
  40f1f5:	cmp    edx,ecx
  40f1f7:	jne    0x40f123
  40f1fd:	xor    edi,DWORD PTR ds:0x42900c
  40f203:	mov    ecx,DWORD PTR [ebp-0x18]
  40f206:	and    DWORD PTR ds:0x429024,0x0
  40f210:	jmp    0x40f224
  40f215:	xor    edx,edx
  40f217:	or     edx,DWORD PTR ds:0x429024
  40f21d:	inc    edx
  40f21e:	mov    DWORD PTR ds:0x429024,edx
  40f224:	cmp    DWORD PTR ds:0x429024,0x10
  40f22b:	jae    0x40f27a
  40f231:	cmp    DWORD PTR ds:0x429024,0xa
  40f238:	jne    0x40f24f
  40f23e:	push   DWORD PTR [ebp-0x14]
  40f241:	push   0x42b018
  40f246:	push   DWORD PTR [ebp-0x14]
  40f249:	call   DWORD PTR ds:0x42e9bf
  40f24f:	cmp    DWORD PTR ds:0x429024,0x9
  40f256:	jne    0x40f26b
  40f25c:	xor    edx,edx
  40f25e:	xor    edx,DWORD PTR ds:0x429024
  40f264:	inc    edx
  40f265:	mov    DWORD PTR ds:0x429024,edx
  40f26b:	jmp    0x40f215
  40f270:	adc    DWORD PTR ds:0x42d00c,0x5b30
  40f27a:	mov    edx,DWORD PTR [ebp+0x10]
  40f27d:	xor    edi,0x523a
  40f283:	xor    ecx,eax
  40f285:	dec    DWORD PTR ds:0x42b010
  40f28b:	add    ecx,esi
  40f28d:	mov    DWORD PTR [edx],ecx
  40f28f:	sbb    DWORD PTR ds:0x42d004,0x42a008
  40f299:	mov    ecx,DWORD PTR [ebp-0x18]
  40f29c:	inc    edi
  40f29d:	xor    ecx,eax
  40f29f:	mov    edi,DWORD PTR ds:0x42a000
  40f2a5:	xor    DWORD PTR ds:0x42a004,edi
  40f2ab:	add    ecx,esi
  40f2ad:	mov    DWORD PTR ds:0x42d000,0x15
  40f2b7:	cmp    DWORD PTR ds:0x42d000,0x0
  40f2be:	je     0x40f2f6
  40f2c4:	cmp    DWORD PTR ds:0x42d000,0x1a
  40f2cb:	jne    0x40f2e4
  40f2d1:	push   0x42e111
  40f2d6:	push   0x42e0c7
  40f2db:	push   DWORD PTR [ebp-0x20]
  40f2de:	call   DWORD PTR ds:0x42e9c7
  40f2e4:	mov    edi,DWORD PTR ds:0x42d000
  40f2ea:	dec    edi
  40f2eb:	mov    DWORD PTR ds:0x42d000,edi
  40f2f1:	jmp    0x40f2b7
  40f2f6:	mov    DWORD PTR [ebp-0xc],ecx
  40f2f9:	not    edi
  40f2fb:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  40f302:	mov    DWORD PTR [ebp-0x14],0xf89c85a9
  40f309:	mov    DWORD PTR [ebp-0x10],0xf89c95b9
  40f310:	and    DWORD PTR ds:0x42b010,ecx
  40f316:	mov    ecx,DWORD PTR [ebp-0x14]
  40f319:	mov    DWORD PTR ds:0x42b018,0x1d
  40f323:	cmp    DWORD PTR ds:0x42b018,0x0
  40f32a:	je     0x40f37c
  40f330:	cmp    DWORD PTR ds:0x42b018,0xc
  40f337:	jne    0x40f348
  40f33d:	push   0x42e0d9
  40f342:	call   DWORD PTR ds:0x42e9cb
  40f348:	cmp    DWORD PTR ds:0x42b018,0xd
  40f34f:	jne    0x40f362
  40f355:	mov    edi,DWORD PTR ds:0x42b018
  40f35b:	dec    edi
  40f35c:	mov    DWORD PTR ds:0x42b018,edi
  40f362:	xor    edi,edi
  40f364:	xor    edi,DWORD PTR ds:0x42b018
  40f36a:	dec    edi
  40f36b:	mov    DWORD PTR ds:0x42b018,edi
  40f371:	jmp    0x40f323
  40f376:	not    DWORD PTR ds:0x42d018
  40f37c:	mov    DWORD PTR [ebp+0x8],ecx
  40f37f:	sub    edi,ecx
  40f381:	mov    ecx,DWORD PTR [ebp+0x8]
  40f384:	and    DWORD PTR ds:0x42a010,0x408f
  40f38e:	xor    ecx,eax
  40f390:	add    ecx,esi
  40f392:	mov    ecx,0x242ebed
  40f397:	not    edi
  40f399:	mov    edi,0xf641bea
  40f39e:	je     0x418714
  40f3a4:	mov    edx,DWORD PTR [ebp+0x8]
  40f3a7:	or     DWORD PTR ds:0x429008,0x3119
  40f3b1:	mov    ebx,DWORD PTR [ebp-0x8]
  40f3b4:	adc    DWORD PTR ds:0x42a018,0x42c014
  40f3be:	xor    edx,eax
  40f3c0:	xor    ebx,eax
  40f3c2:	sub    DWORD PTR ds:0x42c004,0x429010
  40f3cc:	sub    edx,ebx
  40f3ce:	sub    edx,esi
  40f3d0:	xor    edx,eax
  40f3d2:	mov    DWORD PTR [ebp+0x8],edx
  40f3d5:	inc    DWORD PTR ds:0x42b010
  40f3db:	mov    edx,DWORD PTR [ebp+0x8]
  40f3de:	mov    ebx,DWORD PTR [ebp-0x58]
  40f3e1:	add    edx,0x5708f8
  40f3e7:	sub    DWORD PTR ds:0x42c01c,0x72ca
  40f3f1:	imul   edx,ebx
  40f3f4:	xor    DWORD PTR ds:0x429024,edi
  40f3fa:	mov    DWORD PTR [ebp-0x58],edx
  40f3fd:	and    DWORD PTR ds:0x42d004,0x0
  40f407:	mov    ebx,DWORD PTR ds:0x42d004
  40f40d:	inc    ebx
  40f40e:	mov    DWORD PTR ds:0x42d004,ebx
  40f414:	cmp    DWORD PTR ds:0x42d004,0x1e
  40f41b:	jne    0x40f42c
  40f421:	push   0x42a004
  40f426:	call   DWORD PTR ds:0x42e9d3
  40f42c:	cmp    DWORD PTR ds:0x42d004,0x17
  40f433:	jb     0x40f407
  40f439:	mov    edx,DWORD PTR [ebp+0x8]
  40f43c:	mov    ebx,DWORD PTR [ebp-0x54]
  40f43f:	add    edx,0x64f8da
  40f445:	xor    DWORD PTR ds:0x42b004,0x42b000
  40f44f:	or     edx,ebx
  40f451:	adc    DWORD PTR ds:0x42c014,0x3307
  40f45b:	mov    DWORD PTR [ebp-0x54],edx
  40f45e:	add    DWORD PTR ds:0x42d004,0x3241
  40f468:	mov    edx,DWORD PTR [ebp+0x8]
  40f46b:	sub    DWORD PTR ds:0x42900c,0x6cc3
  40f475:	mov    ebx,DWORD PTR [ebp-0x50]
  40f478:	xor    DWORD PTR ds:0x42b014,0x42c01c
  40f482:	add    edx,ecx
  40f484:	adc    DWORD PTR ds:0x42c000,0x429028
  40f48e:	xor    edx,ebx
  40f490:	mov    DWORD PTR [ebp-0x50],edx
  40f493:	and    DWORD PTR ds:0x429018,0x0
  40f49d:	mov    ebx,DWORD PTR ds:0x429018
  40f4a3:	inc    ebx
  40f4a4:	mov    DWORD PTR ds:0x429018,ebx
  40f4aa:	cmp    DWORD PTR ds:0x429018,0x1f
  40f4b1:	jne    0x40f4cc
  40f4b7:	push   0x42c010
  40f4bc:	push   0x42c018
  40f4c1:	push   0x42a008
  40f4c6:	call   DWORD PTR ds:0x42e993
  40f4cc:	cmp    DWORD PTR ds:0x429018,0x1e
  40f4d3:	jb     0x40f49d
  40f4d9:	inc    edx
  40f4da:	mov    edx,DWORD PTR [ebp+0x8]
  40f4dd:	mov    ebx,DWORD PTR [ebp-0x4c]
  40f4e0:	add    DWORD PTR ds:0x42d010,0x42d01c
  40f4ea:	add    edx,edi
  40f4ec:	adc    DWORD PTR ds:0x42d018,0x42b01c
  40f4f6:	and    edx,ebx
  40f4f8:	mov    DWORD PTR [ebp-0x4c],edx
  40f4fb:	or     edx,DWORD PTR ds:0x42b000
  40f501:	mov    edx,DWORD PTR [ebp+0x8]
  40f504:	mov    ebx,DWORD PTR ds:0x42d000
  40f50a:	sub    DWORD PTR ds:0x42a000,ebx
  40f510:	mov    ebx,DWORD PTR [ebp-0x48]
  40f513:	or     DWORD PTR ds:0x42c000,0x42c010
  40f51d:	lea    edx,[ebx+edx*1+0x241fc1f]
  40f524:	mov    DWORD PTR [ebp-0x48],edx
  40f527:	mov    edx,DWORD PTR [ebp+0x8]
  40f52a:	mov    ebx,0xfa5e15e2
  40f52f:	inc    DWORD PTR ds:0x42d018
  40f535:	sub    ebx,edx
  40f537:	movzx  edx,WORD PTR ds:0x42c018
  40f53e:	adc    edx,DWORD PTR ds:0x429028
  40f544:	mov    DWORD PTR ds:0x42c018,edx
  40f54a:	add    ebx,DWORD PTR [ebp-0x44]
  40f54d:	mov    DWORD PTR [ebp-0x44],ebx
  40f550:	and    DWORD PTR ds:0x42b018,0x0
  40f55a:	jmp    0x40f56c
  40f55f:	mov    edx,DWORD PTR ds:0x42b018
  40f565:	inc    edx
  40f566:	mov    DWORD PTR ds:0x42b018,edx
  40f56c:	cmp    DWORD PTR ds:0x42b018,0x19
  40f573:	jae    0x40f616
  40f579:	cmp    DWORD PTR ds:0x42b018,0x6
  40f580:	jne    0x40f594
  40f586:	push   0x0
  40f588:	push   DWORD PTR [ebp-0x10]
  40f58b:	push   DWORD PTR [ebp-0x28]
  40f58e:	call   DWORD PTR ds:0x42e997
  40f594:	cmp    DWORD PTR ds:0x42b018,0x5
  40f59b:	jne    0x40f5ae
  40f5a1:	mov    edx,DWORD PTR ds:0x42b018
  40f5a7:	inc    edx
  40f5a8:	mov    DWORD PTR ds:0x42b018,edx
  40f5ae:	jmp    0x40f55f
  40f5b3:	mov    DWORD PTR ds:0x42b00c,0x18
  40f5bd:	cmp    DWORD PTR ds:0x42b00c,0x0
  40f5c4:	je     0x40f616
  40f5ca:	cmp    DWORD PTR ds:0x42b00c,0x1e
  40f5d1:	jne    0x40f5fa
  40f5d7:	push   0x3551
  40f5dc:	push   DWORD PTR [ebp-0x28]
  40f5df:	push   0x42c000
  40f5e4:	push   DWORD PTR [ebp-0x10]
  40f5e7:	push   0x1896
  40f5ec:	push   0x8105
  40f5f1:	push   DWORD PTR [ebp-0xc]
  40f5f4:	call   DWORD PTR ds:0x42e99f
  40f5fa:	mov    edx,DWORD PTR ds:0x42b00c
  40f600:	dec    edx
  40f601:	mov    DWORD PTR ds:0x42b00c,edx
  40f607:	jmp    0x40f5bd
  40f60c:	add    DWORD PTR ds:0x42d00c,0x25c6
  40f616:	mov    edx,DWORD PTR [ebp+0x8]
  40f619:	adc    DWORD PTR ds:0x42d018,0x42a00c
  40f623:	xor    edx,eax
  40f625:	adc    DWORD PTR ds:0x42b010,0x4589
  40f62f:	add    edx,esi
  40f631:	mov    DWORD PTR ds:0x42d014,0x3f58
  40f63b:	jne    0x40f3a4
  40f641:	jmp    0x418714
  40f646:	adc    edx,edx
  40f648:	mov    edx,DWORD PTR [ebp-0xc]
  40f64b:	sub    edx,esi
  40f64d:	xor    edx,eax
  40f64f:	mov    DWORD PTR [ebp-0x5c],edx
  40f652:	mov    edx,DWORD PTR [ebp-0x10]
  40f655:	mov    ebx,DWORD PTR [ebp-0x8]
  40f658:	xor    edx,eax
  40f65a:	xor    ebx,eax
  40f65c:	sub    edx,ebx
  40f65e:	sub    edx,esi
  40f660:	xor    edx,eax
  40f662:	mov    DWORD PTR [ebp-0x10],edx
  40f665:	mov    edx,DWORD PTR [ebp-0x14]
  40f668:	mov    DWORD PTR [ebp+0x8],edx
  40f66b:	jmp    0x411a66
  40f670:	mov    edx,DWORD PTR [ebp+0x8]
  40f673:	mov    ebx,DWORD PTR [ebp-0x8]
  40f676:	xor    edx,eax
  40f678:	xor    ebx,eax
  40f67a:	sub    edx,ebx
  40f67c:	sub    edx,esi
  40f67e:	xor    edx,eax
  40f680:	mov    DWORD PTR [ebp+0x8],edx
  40f683:	jmp    0x411a09
  40f688:	aaa    
  40f689:	xchg   BYTE PTR [edi-0x3a],cl
  40f68c:	jae    0x40f709
  40f68e:	mov    ebx,0xae43537b
  40f693:	xor    al,0x86
  40f695:	int3   
  40f696:	mov    dh,0x6d
  40f698:	xchg   edx,ecx
  40f69a:	jp     0x40f716
  40f69c:	add    DWORD PTR [edi+0x7a],ebx
  40f69f:	jp     0x40f646
  40f6a1:	psraw  mm5,QWORD PTR [eax]
  40f6a4:	pushf  
  40f6a5:	cs int 0x87
  40f6a8:	setg   ah
  40f6ab:	push   ebp
  40f6ac:	aad    0xc9
  40f6ae:	test   eax,0xed144cb2
  40f6b3:	fld    DWORD PTR [esp+edi*8+0x13]
  40f6b7:	jno    0x40f727
  40f6b9:	popa   
  40f6ba:	xchg   esi,eax
  40f6bb:	cmp    BYTE PTR [eax+0x7a],bl
  40f6be:	inc    eax
  40f6bf:	xchg   edi,eax
  40f6c0:	xchg   ebx,eax
  40f6c1:	call   0xfccfa94b
  40f6c6:	mov    DWORD PTR [ebp-0x26b4da],ebp
  40f6cc:	push   0x63
  40f6ce:	and    BYTE PTR [edi+0x250b5329],bl
  40f6d4:	test   eax,0x620717a3
  40f6d9:	call   0xd50ad88c
  40f6de:	mov    ebp,ebp
  40f6e0:	and    al,0x21
  40f6e2:	cmp    al,BYTE PTR [eax+0x50]
  40f6e5:	add    BYTE PTR [ecx],0x94
  40f6e8:	xor    eax,0x66302cea
  40f6ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6ee:	add    BYTE PTR [esi+0x17],dl
  40f6f1:	xchg   ebx,eax
  40f6f2:	imul   ecx,DWORD PTR [eax+esi*1+0x9],0xffffff9a
  40f6f7:	pusha  
  40f6f8:	call   0xd2cda7f
  40f6fd:	adc    BYTE PTR gs:[edx-0x77ea99d0],dh
  40f704:	lahf   
  40f705:	ret    
  40f706:	in     al,0x7c
  40f708:	adc    bh,BYTE PTR [ebx-0x55b108f0]
  40f70e:	cld    
  40f70f:	jmp    0x97a:0x1adecfba
  40f716:	adc    DWORD PTR [eax],ebp
  40f718:	ret    0x6caf
  40f71b:	ret    
  40f71c:	mov    eax,ds:0x4b7ef366
  40f721:	mov    WORD PTR [ebp+0x294c9c43],cs
  40f727:	data16 loope 0x40f76e
  40f72a:	cwde   
  40f72b:	cmp    eax,0x2d07b087
  40f730:	sahf   
  40f731:	lds    ebx,FWORD PTR [ebp+0xb]
  40f734:	cmpxchg DWORD PTR [esi-0x3982c952],esi
  40f73b:	lods   al,BYTE PTR ds:[esi]
  40f73c:	ss xchg edi,eax
  40f73e:	fisubr WORD PTR [eax+0x6a]
  40f741:	or     cl,cl
  40f743:	xor    cl,BYTE PTR [esp+esi*1-0x36]
  40f747:	out    0xe7,al
  40f749:	or     al,0xa4
  40f74b:	cmp    edx,DWORD PTR [esi]
  40f74d:	gs pop edx
  40f74f:	dec    ebx
  40f750:	(bad)  
  40f751:	int3   
  40f752:	cmp    dh,0x55
  40f755:	inc    edx
  40f756:	cmp    ch,0xff
  40f759:	outs   dx,DWORD PTR ds:[esi]
  40f75a:	mov    al,ds:0x914a004b
  40f75f:	outs   dx,DWORD PTR ds:[esi]
  40f760:	jle    0x40f7d0
  40f762:	sbb    ecx,DWORD PTR [ebp-0x7865f88b]
  40f768:	in     al,dx
  40f769:	loopne 0x40f7c2
  40f76b:	ret    0xd51e
  40f76e:	cmp    bl,BYTE PTR gs:[ebp+0x22]
  40f772:	imul   esp,esi,0xbe061e77
  40f778:	mov    al,0xa8
  40f77a:	inc    ebp
  40f77b:	jne    0x40f70b
  40f77d:	cmc    
  40f77e:	mov    eax,edi
  40f780:	retf   
  40f781:	in     al,dx
  40f782:	add    eax,0x8813b94
  40f787:	daa    
  40f788:	(bad)  
  40f789:	gs mov cl,0xdb
  40f78c:	mov    eax,0xec3215cd
  40f791:	fs jae 0x40f7f3
  40f794:	scas   al,BYTE PTR es:[edi]
  40f795:	pop    ecx
  40f796:	sbb    al,0xaa
  40f798:	cmp    al,0x38
  40f79a:	mov    eax,fs
  40f79c:	or     DWORD PTR [edi+eiz*8-0x54],esi
  40f7a0:	shr    BYTE PTR [edx+0x7],0xed
  40f7a4:	xor    BYTE PTR [edi+0x49815a45],ah
  40f7aa:	adc    eax,0xa764f158
  40f7af:	mov    cl,0x2
  40f7b1:	sbb    al,0x1d
  40f7b3:	cmp    ebp,DWORD PTR ds:0x2293db18
  40f7b9:	setb   BYTE PTR [ebp+0x30]
  40f7bd:	jp     0x40f7c3
  40f7bf:	test   DWORD PTR [ebx-0x2d80c976],ebx
  40f7c5:	inc    eax
  40f7c6:	mov    cl,0x22
  40f7c8:	or     BYTE PTR [ebp-0x73],cl
  40f7cb:	fnstsw WORD PTR [ecx]
  40f7cd:	xchg   edi,eax
  40f7ce:	push   cs
  40f7cf:	retf   0x72cd
  40f7d2:	sbb    bh,0x62
  40f7d5:	pushf  
  40f7d6:	mov    al,0xb4
  40f7d8:	idiv   DWORD PTR [edi+0x6a423237]
  40f7de:	fdiv   QWORD PTR [edi]
  40f7e0:	jnp    0x40f802
  40f7e2:	dec    eax
  40f7e3:	fwait
  40f7e4:	lds    edi,FWORD PTR [ebp+0x39eeb8a5]
  40f7ea:	sbb    bh,BYTE PTR [edi-0x192a1cbc]
  40f7f0:	pop    es
  40f7f1:	adc    ebp,ebx
  40f7f3:	outs   dx,BYTE PTR ds:[esi]
  40f7f4:	jns    0x40f7c7
  40f7f6:	dec    edi
  40f7f7:	pop    ds
  40f7f8:	push   esi
  40f7f9:	(bad)  
  40f7fa:	lock mov esi,DWORD PTR [ebx+edx*4]
  40f7fe:	(bad)  
  40f800:	pusha  
  40f801:	add    DWORD PTR [ecx-0x7b],ecx
  40f804:	pushf  
  40f805:	push   esp
  40f806:	scas   al,BYTE PTR es:[edi]
  40f807:	push   esi
  40f808:	jno    0x40f829
  40f80a:	test   BYTE PTR [ecx+0x56d6f0da],dh
  40f810:	iret   
  40f811:	sub    al,0xcd
  40f813:	mov    ds:0xb45c9b6b,al
  40f818:	mov    cs,ebp
  40f81a:	cwde   
  40f81b:	or     eax,0xb8763a97
  40f820:	and    eax,0x3a36d915
  40f825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f826:	ss aaa 
  40f828:	push   ds
  40f829:	jns    0x40f818
  40f82b:	pushf  
  40f82c:	sbb    DWORD PTR [ebx],ebx
  40f82e:	cwde   
  40f82f:	mov    esi,DWORD PTR [esi+0x12942f52]
  40f835:	lods   al,BYTE PTR ds:[esi]
  40f836:	pop    eax
  40f837:	jmp    0x40f859
  40f839:	in     eax,0x1f
  40f83b:	outs   dx,DWORD PTR ds:[esi]
  40f83c:	mov    esi,0xe7cae63d
  40f841:	sbb    DWORD PTR [ebx+0x3d],esp
  40f844:	call   DWORD PTR [edx+0x2e]
  40f847:	push   0xbcf00ac8
  40f84c:	inc    ebp
  40f84d:	and    BYTE PTR [ebx+0x50],bh
  40f850:	es jne 0x40f82f
  40f853:	(bad)  
  40f854:	xchg   edi,eax
  40f855:	pop    edi
  40f856:	mov    ch,0x2f
  40f858:	clc    
  40f859:	stos   BYTE PTR es:[edi],al
  40f85a:	adc    esp,DWORD PTR [ecx+0x24ed9c41]
  40f860:	mov    ebx,DWORD PTR ds:0x207146c1
  40f866:	jmp    0x349e:0x9201435c
  40f86d:	lahf   
  40f86e:	sub    dh,BYTE PTR [ebx]
  40f870:	xor    BYTE PTR [esi*8-0x6c4d1462],ah
  40f877:	daa    
  40f878:	jmp    0xa62e77f1
  40f87d:	inc    edx
  40f87e:	lods   eax,DWORD PTR ds:[esi]
  40f87f:	cmp    BYTE PTR [ebx+0x63e9829b],cl
  40f885:	sub    ecx,0x4add0aee
  40f88b:	sub    DWORD PTR [ebp-0x731434de],edx
  40f891:	out    0xb5,eax
  40f893:	xchg   ebp,eax
  40f894:	pop    es
  40f895:	daa    
  40f896:	scas   eax,DWORD PTR es:[edi]
  40f897:	pop    esp
  40f898:	dec    ebx
  40f899:	outs   dx,DWORD PTR ds:[esi]
  40f89b:	mov    DWORD PTR [eax-0x3fbdaba9],eax
  40f8a1:	in     eax,dx
  40f8a2:	add    al,BYTE PTR [edx-0x39]
  40f8a5:	push   esp
  40f8a6:	js     0x40f8c2
  40f8a8:	pop    edx
  40f8a9:	leave  
  40f8aa:	sbb    ecx,DWORD PTR [ebx+0x5b80a177]
  40f8b0:	inc    edx
  40f8b1:	mov    ah,0x3d
  40f8b3:	hlt    
  40f8b4:	test   al,0x7
  40f8b6:	adc    ebp,DWORD PTR [ebp+0x62368f7e]
  40f8bc:	cmp    bl,BYTE PTR [ebx+0x7e22694e]
  40f8c2:	and    DWORD PTR [ebp-0x76],0xff671f9d
  40f8c9:	test   DWORD PTR [edi+0x4e],ecx
  40f8cc:	jae    0x40f8a1
  40f8ce:	and    BYTE PTR [ecx],dl
  40f8d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8d1:	sub    DWORD PTR [eax+esi*1],0x62
  40f8d5:	nop
  40f8d6:	cwde   
  40f8d7:	ret    0x610
  40f8da:	ss sub eax,0x876ace42
  40f8e0:	jecxz  0x40f924
  40f8e2:	fist   WORD PTR [edx+0x70e0c9b1]
  40f8e8:	int    0x25
  40f8ea:	hlt    
  40f8eb:	cmp    al,0xe8
  40f8ed:	push   eax
  40f8ee:	xlat   BYTE PTR ds:[ebx]
  40f8ef:	jg     0x40f954
  40f8f1:	ins    DWORD PTR es:[edi],dx
  40f8f2:	sbb    DWORD PTR [ebx+ebp*4+0x63f8a742],ebp
  40f8f9:	lea    ecx,[eax+0x5c81f419]
  40f8ff:	pop    edi
  40f900:	mov    cl,0x7f
  40f902:	push   DWORD PTR [esi-0x5f]
  40f905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f906:	dec    edi
  40f907:	sub    eax,0xe104d5a0
  40f90c:	imul   ecx,edi,0x5c
  40f90f:	sbb    DWORD PTR [ebp+ecx*2+0x1f],ebx
  40f913:	fwait
  40f914:	out    dx,eax
  40f915:	mov    dh,0xd5
  40f917:	inc    edi
  40f918:	aad    0xe9
  40f91a:	jecxz  0x40f960
  40f91c:	in     eax,dx
  40f91d:	push   ss
  40f91e:	jge    0x40f955
  40f920:	sub    al,0xe4
  40f922:	out    dx,al
  40f923:	cwde   
  40f924:	mov    edx,DWORD PTR [edi-0x29]
  40f927:	clc    
  40f928:	ins    DWORD PTR es:[edi],dx
  40f929:	aaa    
  40f92a:	jnp    0x40f8c0
  40f92c:	cmp    al,ah
  40f92e:	mov    al,0x13
  40f930:	ret    
  40f931:	test   al,0x22
  40f933:	cdq    
  40f934:	aad    0xec
  40f936:	nop
  40f937:	mov    ss,WORD PTR [esi+0x7698b304]
  40f93d:	jmp    0xf075:0xf0005117
  40f944:	xor    eax,0x5b69c57a
  40f949:	cli    
  40f94a:	je     0x40f971
  40f94c:	cs sbb BYTE PTR ds:0xc2a6b8c9,ch
  40f954:	push   eax
  40f955:	lahf   
  40f956:	mov    esp,0x88f5570e
  40f95b:	xor    BYTE PTR [edx+0x46],dl
  40f95e:	cwde   
  40f95f:	dec    ebx
  40f961:	pop    ss
  40f962:	mov    ecx,0xe9aff139
  40f967:	ss add al,0xa8
  40f96a:	f2xm1  
  40f96c:	ror    esi,0xb1
  40f96f:	outs   dx,BYTE PTR ds:[esi]
  40f970:	rcr    BYTE PTR [eax],1
  40f972:	mov    dh,0x6f
  40f974:	mov    ebp,0x655ef14c
  40f979:	and    BYTE PTR [edi+0x4e2ec6d5],dl
  40f97f:	js     0x40f996
  40f981:	jl     0x40f984
  40f983:	push   cs
  40f984:	lea    esi,[ebx]
  40f986:	xchg   al,dl
  40f988:	jg     0x40f954
  40f98a:	pop    ebx
  40f98b:	add    BYTE PTR [ecx+ebx*8-0x3b],0x96
  40f990:	sub    ch,BYTE PTR [eax]
  40f992:	int3   
  40f993:	and    eax,0x402e195e
  40f998:	xchg   DWORD PTR [esi],esp
  40f99a:	push   ds
  40f99b:	aad    0xf2
  40f99d:	jne    0x40f9b6
  40f99f:	pop    esp
  40f9a0:	add    esp,ebx
  40f9a2:	loop   0x40f96d
  40f9a4:	or     ecx,DWORD PTR ds:0x26b6be05
  40f9aa:	xor    eax,0xab68dc49
  40f9af:	sbb    eax,0x2f15785d
  40f9b4:	or     bh,BYTE PTR [edx+ebx*8-0x37315b06]
  40f9bb:	loope  0x40fa1e
  40f9bd:	loope  0x40fa07
  40f9bf:	test   edx,esp
  40f9c1:	cld    
  40f9c2:	nop
  40f9c3:	fnstsw WORD PTR [ebp-0x75876a14]
  40f9c9:	out    dx,al
  40f9ca:	push   eax
  40f9cb:	pop    esp
  40f9cc:	outs   dx,BYTE PTR ds:[esi]
  40f9cd:	imul   ecx,edi,0xbacc6da4
  40f9d3:	pop    esp
  40f9d4:	call   0x695c9107
  40f9d9:	sbb    DWORD PTR [eax+0x27ab86ec],eax
  40f9df:	loopne 0x40fa54
  40f9e1:	aaa    
  40f9e2:	sub    eax,0x505deb2
  40f9e7:	pop    esp
  40f9e8:	test   BYTE PTR [ebx+eiz*8-0xbcb025c],0x4d
  40f9f0:	adc    dl,BYTE PTR ds:0x9cf59524
  40f9f6:	fst    DWORD PTR [edi]
  40f9f8:	sbb    al,BYTE PTR ds:0x6eada4c4
  40f9fe:	cmp    eax,0x8dc2505d
  40fa03:	cld    
  40fa04:	div    ebx
  40fa06:	pop    ecx
  40fa07:	push   esi
  40fa08:	jecxz  0x40f9c0
  40fa0a:	add    eax,0xfca7b0d1
  40fa0f:	sahf   
  40fa10:	scas   eax,DWORD PTR es:[edi]
  40fa11:	cmp    eax,0xaf5e1b6e
  40fa16:	popf   
  40fa17:	stos   BYTE PTR es:[edi],al
  40fa18:	sar    BYTE PTR [ecx],cl
  40fa1a:	mov    eax,0x8c86cfb6
  40fa1f:	or     al,0x22
  40fa21:	xchg   ebx,eax
  40fa22:	mov    ecx,0x237a6f3b
  40fa27:	xchg   ebp,eax
  40fa28:	daa    
  40fa29:	xlat   BYTE PTR ds:[ebx]
  40fa2a:	loop   0x40fa3e
  40fa2c:	popa   
  40fa2d:	pop    ss
  40fa2e:	push   cs
  40fa2f:	mov    ds:0x2d6e7bd2,al
  40fa34:	fcom   st(0)
  40fa36:	jge    0x40fab1
  40fa38:	sub    al,0x11
  40fa3a:	add    ch,ch
  40fa3c:	mov    al,ds:0xcfb72342
  40fa41:	push   eax
  40fa42:	mov    cl,BYTE PTR [eax-0x63c3e8cf]
  40fa48:	lock out 0x4a,eax
  40fa4b:	or     al,BYTE PTR [edx+edi*4-0x405aac64]
  40fa52:	cs pop ebx
  40fa54:	out    0xa9,eax
  40fa56:	out    0x20,al
  40fa58:	(bad)  
  40fa59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa5a:	mov    edi,0x646ef16a
  40fa5f:	mov    ecx,0x3a30a128
  40fa64:	mov    ds:0x50d8414c,al
  40fa69:	mov    dl,0x68
  40fa6b:	retf   0xa710
  40fa6e:	neg    dh
  40fa70:	jp     0x40faa8
  40fa72:	inc    ebx
  40fa73:	jo     0x40fa9a
  40fa75:	jb     0x40fa79
  40fa77:	adc    BYTE PTR [ecx],dl
  40fa79:	sbb    eax,0xf633efac
  40fa7e:	xchg   DWORD PTR [edx],esi
  40fa80:	mov    esi,0x8ba5baa5
  40fa85:	xchg   ebp,eax
  40fa86:	call   0xe9d8bf5c
  40fa8b:	gs mov ch,0x91
  40fa8e:	je     0x40fa77
  40fa90:	sbb    bh,ah
  40fa92:	sbb    DWORD PTR [ebx-0x79],ebx
  40fa95:	in     al,0x7f
  40fa97:	into   
  40fa98:	imul   ebp,DWORD PTR [edx+0x10cdb270],0xffffffa8
  40fa9f:	cld    
  40faa0:	mov    ah,0x2e
  40faa2:	mov    ss,WORD PTR [ebx+esi*8-0x16]
  40faa6:	in     eax,dx
  40faa7:	shl    DWORD PTR [edi-0x6be006ed],0xe4
  40faae:	fdivr  DWORD PTR [edi+0x251f23b2]
  40fab4:	aas    
  40fab5:	cmp    esi,esp
  40fab7:	pop    es
  40fab8:	sbb    al,BYTE PTR [ecx-0x388a1c90]
  40fabe:	inc    edi
  40fabf:	and    eax,0x55ba3a7
  40fac4:	jecxz  0x40fb33
  40fac6:	ja     0x40fa5c
  40fac8:	and    DWORD PTR es:[esi],esp
  40facb:	sbb    BYTE PTR [esp+edi*1-0x13],al
  40facf:	adc    BYTE PTR [edi],bl
  40fad1:	sub    eax,0xba366a69
  40fad6:	pushf  
  40fad7:	int    0xe1
  40fad9:	fs xchg ebx,eax
  40fadb:	retf   
  40fadc:	icebp  
  40fadd:	mov    DWORD PTR [eax+0x23],0xc2c1f245
  40fae4:	lods   al,BYTE PTR ds:[esi]
  40fae5:	push   ecx
  40fae6:	push   ebx
  40fae7:	out    dx,eax
  40fae8:	sbb    edx,DWORD PTR [esp+esi*8-0x3a78cffc]
  40faef:	cmp    eax,0x806fb35f
  40faf4:	push   edi
  40faf5:	inc    ecx
  40faf6:	lods   al,BYTE PTR ds:[esi]
  40faf7:	jo     0x40fb5b
  40faf9:	in     eax,0xe
  40fafb:	sbb    bl,ah
  40fafd:	lds    esp,FWORD PTR [ebx+0x218cf085]
  40fb03:	je     0x469c1a7
  40fb09:	loope  0x40faa4
  40fb0b:	xor    DWORD PTR [edx-0x43],esp
  40fb0e:	add    eax,0xdda42147
  40fb13:	xlat   BYTE PTR ds:[ebx]
  40fb14:	jne    0x40faa7
  40fb16:	or     BYTE PTR [ebx],bh
  40fb18:	rcl    esi,cl
  40fb1a:	sbb    al,0xde
  40fb1c:	dec    ebx
  40fb1d:	ror    ecx,cl
  40fb1f:	int3   
  40fb20:	in     eax,dx
  40fb21:	call   0xcf41:0xd73e2aa2
  40fb28:	rol    DWORD PTR [edi+eiz*4],1
  40fb2b:	fwait
  40fb2c:	ins    DWORD PTR es:[edi],dx
  40fb2d:	xor    edi,DWORD PTR [eax]
  40fb2f:	push   es
  40fb30:	enter  0x42f1,0x19
  40fb34:	sub    al,0xd0
  40fb36:	in     al,0x56
  40fb38:	icebp  
  40fb39:	xchg   ebp,eax
  40fb3a:	lds    ebx,FWORD PTR [ebx-0xc]
  40fb3d:	sbb    edi,esi
  40fb3f:	pushf  
  40fb40:	sub    bh,cl
  40fb42:	popa   
  40fb43:	sub    BYTE PTR ds:0x5bedb325,bl
  40fb49:	jnp    0x40fb9c
  40fb4b:	or     bl,BYTE PTR ds:0x6c362d98
  40fb51:	ret    
  40fb52:	sbb    dh,BYTE PTR [eax+0x12]
  40fb55:	push   0x76
  40fb57:	mov    edx,0xeb3f4f6c
  40fb5c:	sbb    ebp,DWORD PTR [ebp+0x1f]
  40fb5f:	pop    eax
  40fb60:	addr16 inc edi
  40fb62:	jl     0x40fb59
  40fb64:	push   ebp
  40fb65:	mov    BYTE PTR [eax+0x75],ch
  40fb68:	cdq    
  40fb69:	repz retf 0x65d5
  40fb6d:	jg     0x40fbbe
  40fb6f:	mov    bh,0x81
  40fb71:	or     eax,0x9dbb8277
  40fb76:	sar    DWORD PTR [ebp-0x28],0x15
  40fb7a:	fstp   TBYTE PTR [esi-0x24]
  40fb7d:	outs   dx,DWORD PTR ds:[esi]
  40fb7e:	cmp    BYTE PTR ds:0xd4371abb,ch
  40fb84:	int    0x96
  40fb86:	cmp    eax,0x8baae5b2
  40fb8b:	test   BYTE PTR [ebp+0x761d68b3],bl
  40fb91:	fisttp QWORD PTR [eax+eax*4+0x40]
  40fb95:	(bad)  
  40fb96:	in     al,0x31
  40fb98:	mov    BYTE PTR [eax],0x88
  40fb9b:	and    DWORD PTR [edi],ebx
  40fb9d:	mov    ebx,0xa51959
  40fba2:	sbb    eax,0xe75b5769
  40fba7:	jo     0x40fbf4
  40fba9:	pop    ss
  40fbaa:	adc    dh,BYTE PTR [ecx-0x2b]
  40fbad:	xchg   esi,eax
  40fbae:	dec    eax
  40fbaf:	dec    esi
  40fbb0:	jb     0x40fb41
  40fbb2:	push   cs
  40fbb3:	mov    bl,0xdf
  40fbb5:	ds fst st(6)
  40fbb8:	pop    esi
  40fbb9:	aad    0x15
  40fbbb:	ror    DWORD PTR [ebp-0x5e2640b1],1
  40fbc1:	pop    edx
  40fbc2:	(bad)  
  40fbc3:	fwait
  40fbc4:	inc    edx
  40fbc5:	fs sbb al,0x15
  40fbc8:	add    BYTE PTR [esi-0x61],ah
  40fbcb:	cwde   
  40fbcc:	outs   dx,BYTE PTR ds:[esi]
  40fbcd:	shl    ch,1
  40fbcf:	jo     0x40fb61
  40fbd1:	fnstenv [ebp+0x62efdf4a]
  40fbd7:	inc    edx
  40fbd8:	adc    eax,0x3ee59a18
  40fbdd:	enter  0x7303,0x5e
  40fbe1:	std    
  40fbe2:	shl    ebx,1
  40fbe4:	lea    edx,[eax+0x6f]
  40fbe7:	fstp   TBYTE PTR [esp+eax*8+0x7d]
  40fbeb:	out    dx,eax
  40fbec:	inc    esi
  40fbed:	test   bl,0x69
  40fbf0:	dec    edi
  40fbf1:	fsubr  DWORD PTR [edi+0x74]
  40fbf4:	xchg   edx,eax
  40fbf5:	push   0xb2f83ebc
  40fbfa:	mov    edx,0x3642e417
  40fbff:	cvtps2pd xmm2,QWORD PTR ds:0xcf23929d
  40fc06:	dec    esp
  40fc07:	imul   BYTE PTR [edx]
  40fc09:	test   BYTE PTR [ecx+ebp*1+0x6],0x83
  40fc0e:	push   ebx
  40fc0f:	out    dx,eax
  40fc10:	ins    DWORD PTR es:[edi],dx
  40fc11:	std    
  40fc12:	div    DWORD PTR [esp+ebp*4-0x5a7ae021]
  40fc19:	jl     0x40fbc9
  40fc1b:	fnstcw WORD PTR [ecx]
  40fc1d:	call   0x64ae:0x4fa966ca
  40fc24:	fs xchg ebp,eax
  40fc26:	popf   
  40fc27:	add    DWORD PTR [edi-0x6f],edx
  40fc2a:	fstp   DWORD PTR [edi]
  40fc2c:	push   ss
  40fc2d:	mov    al,gs:0xe7c1de0c
  40fc33:	(bad)  
  40fc34:	int3   
  40fc35:	(bad)  
  40fc36:	sub    ecx,ebp
  40fc38:	scas   eax,DWORD PTR es:[edi]
  40fc39:	adc    eax,0x630ef2f
  40fc3e:	cmc    
  40fc3f:	mov    WORD PTR [eax],cs
  40fc41:	stc    
  40fc42:	pop    eax
  40fc43:	push   edi
  40fc44:	adc    ch,BYTE PTR [ebx-0x3a19672c]
  40fc4a:	xchg   esp,eax
  40fc4b:	push   edi
  40fc4c:	pop    esp
  40fc4d:	fmul   st(3),st
  40fc4f:	in     eax,0xf7
  40fc51:	adc    bl,ch
  40fc53:	and    eax,0x32f19c6e
  40fc58:	in     al,dx
  40fc59:	pop    edx
  40fc5a:	retf   0x5f24
  40fc5d:	jg     0x40fc43
  40fc5f:	add    al,0x4b
  40fc61:	sbb    ecx,DWORD PTR [eax+0x63]
  40fc64:	pushf  
  40fc65:	fiadd  DWORD PTR [ebp-0x13d6873d]
  40fc6b:	int3   
  40fc6c:	sbb    edx,DWORD PTR [eax]
  40fc6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc6f:	add    edx,DWORD PTR [ebx-0x3f]
  40fc72:	sti    
  40fc73:	stos   DWORD PTR es:[edi],eax
  40fc74:	mov    eax,0x7e92d021
  40fc79:	push   esp
  40fc7b:	sbb    DWORD PTR [ecx+0x1a],edi
  40fc7e:	cwde   
  40fc7f:	mov    ch,0x36
  40fc81:	jae    0x40fc3a
  40fc83:	fiadd  DWORD PTR ds:0x6392bcf8
  40fc89:	(bad)  
  40fc8a:	call   DWORD PTR [eax+0x8]
  40fc8d:	inc    ecx
  40fc8e:	cmp    BYTE PTR [ebx-0x2058a1c2],ch
  40fc94:	xor    al,0xf9
  40fc96:	mov    bh,0xbd
  40fc98:	jae    0x40fcf4
  40fc9a:	ret    0x7f33
  40fc9d:	add    dh,BYTE PTR [eax-0x508f9278]
  40fca3:	mov    ebx,0x8c1787fb
  40fca8:	fnstsw WORD PTR [ebp+0x32]
  40fcab:	pop    es
  40fcac:	pop    es
  40fcad:	mov    DWORD PTR [eax+0x6e],0xeb6cf0e9
  40fcb4:	pop    ebx
  40fcb5:	push   ss
  40fcb6:	loop   0x40fcbb
  40fcb8:	cs mov edi,0x3e69f7f8
  40fcbe:	imul   edi,eax,0x6b
  40fcc1:	fstp   TBYTE PTR gs:[ebp-0x6c]
  40fcc5:	sub    ecx,ecx
  40fcc7:	stos   DWORD PTR es:[edi],eax
  40fcc8:	pop    ebx
  40fcc9:	gs jecxz 0x40fd39
  40fccc:	ins    DWORD PTR es:[edi],dx
  40fccd:	mov    WORD PTR [eax],es
  40fccf:	repnz and BYTE PTR [esi-0x3b3fef9c],bh
  40fcd6:	xchg   DWORD PTR [ecx-0x58],edi
  40fcd9:	ud1    esi,DWORD PTR [esi+0x67]
  40fcdd:	bound  esp,QWORD PTR [edi]
  40fcdf:	or     BYTE PTR [edi+0x7a1abd41],bl
  40fce5:	(bad)  
  40fce6:	imul   edx,DWORD PTR [eax-0x77e3c62],0x383e9bf7
  40fcf0:	sar    DWORD PTR [ebx+0x5d],0x3e
  40fcf4:	pop    ecx
  40fcf5:	adc    eax,0x1614dad6
  40fcfa:	bound  edi,QWORD PTR [edi]
  40fcfc:	loopne 0x40fd6e
  40fcfe:	frstor [edx+0x133a4b3e]
  40fd04:	sbb    al,0xf
  40fd06:	enter  0x887f,0xea
  40fd0a:	in     al,0x7c
  40fd0c:	xchg   esp,eax
  40fd0d:	add    bl,ch
  40fd0f:	add    BYTE PTR [ebx],dh
  40fd11:	rcl    DWORD PTR [ebx+0xb52b6a8],1
  40fd17:	jle    0x40fcb8
  40fd19:	loopne 0x40fd98
  40fd1b:	mov    edi,0x39230a48
  40fd20:	leave  
  40fd21:	mov    ah,0x83
  40fd23:	lea    esi,[ebp+0x4f]
  40fd26:	in     al,0xb7
  40fd28:	add    eax,0x2227e551
  40fd2d:	(bad)  
  40fd2e:	rcl    dl,cl
  40fd30:	xchg   ebx,eax
  40fd31:	xchg   esp,eax
  40fd32:	sub    DWORD PTR [esi+0x549b99f0],ebx
  40fd38:	mov    ebp,0xd354ed15
  40fd3d:	pop    esi
  40fd3e:	enter  0x14a1,0xfc
  40fd42:	shl    al,0xd1
  40fd45:	int    0x28
  40fd47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd48:	xchg   ecx,eax
  40fd49:	jb     0x40fd56
  40fd4b:	jl     0x40fd69
  40fd4d:	lock or DWORD PTR es:[esi+0xe5d0819],esp
  40fd55:	mov    ah,0x3e
  40fd57:	inc    ecx
  40fd58:	inc    esp
  40fd59:	sahf   
  40fd5a:	lock dec ebx
  40fd5c:	add    DWORD PTR [ebx-0xf],ebp
  40fd5f:	fst    DWORD PTR [esi-0x51261254]
  40fd65:	sti    
  40fd66:	aas    
  40fd67:	sub    eax,eax
  40fd69:	xor    BYTE PTR [esi+0x6fd36a57],bh
  40fd6f:	mov    es,WORD PTR ds:0x99caae8a
  40fd75:	pop    es
  40fd76:	stos   BYTE PTR es:[edi],al
  40fd77:	cmp    BYTE PTR [ebx+0x74d09f1e],bl
  40fd7d:	es out dx,eax
  40fd7f:	lods   al,BYTE PTR ds:[esi]
  40fd80:	into   
  40fd81:	and    BYTE PTR [ebx+0x5555e636],dh
  40fd87:	and    esp,esp
  40fd89:	rcl    BYTE PTR [eax+eiz*1],cl
  40fd8c:	mov    edi,0x57d2547e
  40fd91:	lods   al,BYTE PTR ds:[esi]
  40fd92:	je     0x40fd78
  40fd94:	mov    bl,0x8c
  40fd96:	dec    ebx
  40fd97:	fwait
  40fd98:	cli    
  40fd99:	test   al,0xc0
  40fd9b:	jmp    0x91af0db7
  40fda0:	sahf   
  40fda1:	pop    ebp
  40fda2:	sub    edi,0x47210195
  40fda8:	and    al,0x48
  40fdaa:	cld    
  40fdab:	ror    dl,1
  40fdad:	(bad)  
  40fdaf:	push   edx
  40fdb0:	add    cl,dl
  40fdb2:	or     ebx,DWORD PTR [edx+0x6d7e20ad]
  40fdb8:	loopne 0x40fd7a
  40fdba:	leave  
  40fdbb:	imul   edi,DWORD PTR [edi],0x4
  40fdbe:	or     DWORD PTR ds:0xbca7cc12,edi
  40fdc4:	jmp    0x7f52:0xea1d1266
  40fdcb:	or     al,0x6a
  40fdcd:	cs test al,0x85
  40fdd0:	add    al,0x27
  40fdd2:	gs ret 0x59f8
  40fdd6:	push   di
  40fdd8:	fild   WORD PTR [esi-0x3487857d]
  40fdde:	sbb    DWORD PTR [eax-0x1abb2352],esi
  40fde4:	mov    cs,eax
  40fde6:	jno    0x40fd6c
  40fde8:	sbb    eax,DWORD PTR [edx+esi*2-0x4d]
  40fdec:	dec    esp
  40fded:	sti    
  40fdee:	cmp    dh,bl
  40fdf0:	test   al,0xb
  40fdf2:	popa   
  40fdf3:	mov    al,ds:0x6e317472
  40fdf8:	xor    dh,bh
  40fdfa:	xchg   BYTE PTR [ecx-0xb5c264f],cl
  40fe00:	fsubr  DWORD PTR [ecx+eiz*8+0x411c188f]
  40fe07:	jne    0x40fdd8
  40fe09:	push   ds
  40fe0a:	and    eax,0xd9c5cacf
  40fe0f:	shl    BYTE PTR [eax+0x33eda508],cl
  40fe15:	iret   
  40fe16:	retf   0x5a3a
  40fe19:	retf   0x4223
  40fe1c:	je     0x40fe3a
  40fe1e:	imul   ebp,DWORD PTR [eax-0x724310c9],0xfffffffc
  40fe25:	imul   esi,DWORD PTR [eax+eax*4],0x98df3089
  40fe2c:	aas    
  40fe2d:	push   esi
  40fe2e:	xchg   edx,eax
  40fe2f:	mov    ds:0x5da8d18f,eax
  40fe34:	jmp    0x40fdc8
  40fe36:	call   0x215a5028
  40fe3b:	repnz xchg ch,bl
  40fe3e:	xor    eax,ecx
  40fe40:	pusha  
  40fe41:	pop    esp
  40fe42:	push   ds
  40fe43:	cmp    BYTE PTR [edx],bh
  40fe45:	int3   
  40fe46:	gs push 0xe376bc1e
  40fe4c:	rcr    DWORD PTR [ecx],cl
  40fe4e:	test   eax,0xe13436a1
  40fe53:	mov    ebx,0x4357fc0
  40fe58:	mov    bl,0xa7
  40fe5a:	arpl   WORD PTR [edx-0x55],dx
  40fe5d:	sbb    DWORD PTR [ebp+0x8e83907],esi
  40fe63:	and    cl,BYTE PTR [edi+0x41]
  40fe66:	shl    BYTE PTR [edi-0x38],cl
  40fe69:	xor    DWORD PTR [ecx-0x4f],0x9fa68400
  40fe70:	(bad)  
  40fe71:	(bad)  
  40fe72:	(bad)  
  40fe74:	test   eax,0x6acd0139
  40fe79:	mov    al,ds:0x6f41a4a9
  40fe7e:	leave  
  40fe7f:	popa   
  40fe80:	rcl    DWORD PTR [ecx-0x18],0xc5
  40fe84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe85:	loop   0x40fece
  40fe87:	in     eax,dx
  40fe88:	mov    ah,0x9e
  40fe8a:	xor    al,0x26
  40fe8c:	retf   0xc5ac
  40fe8f:	jb     0x40fe14
  40fe91:	mov    dl,0xe8
  40fe93:	inc    ecx
  40fe94:	jbe    0x40fe6a
  40fe96:	fmul   DWORD PTR [edi-0x64]
  40fe99:	xchg   esp,eax
  40fe9a:	add    eax,0xecd00e8a
  40fe9f:	sbb    BYTE PTR [ecx-0x2b],0x1f
  40fea3:	mov    bh,0xe0
  40fea5:	cmp    eax,0x19d18eb2
  40feaa:	sti    
  40feab:	inc    ecx
  40feac:	leave  
  40fead:	hlt    
  40feae:	gs and bl,ah
  40feb1:	jl     0x40fe6a
  40feb3:	fdiv   DWORD PTR [edi]
  40feb5:	or     DWORD PTR [ecx-0x3],ebx
  40feb8:	sbb    dl,cl
  40feba:	loope  0x40febe
  40febc:	out    0x66,eax
  40febe:	or     DWORD PTR [edx],eax
  40fec0:	pop    edi
  40fec1:	into   
  40fec2:	jbe    0x40fe71
  40fec4:	add    BYTE PTR [esi+ebp*4+0x106db64b],bl
  40fecb:	adc    eax,0xda3c44b7
  40fed0:	les    esi,FWORD PTR [edx-0x1a312231]
  40fed6:	or     bh,0x0
  40fed9:	jmp    0x99a3:0x96e3f258
  40fee0:	scas   eax,DWORD PTR es:[edi]
  40fee1:	or     eax,0x25eeb25b
  40fee6:	pop    esp
  40fee7:	(bad)  
  40fee9:	cmp    al,0x90
  40feeb:	lods   al,BYTE PTR ds:[esi]
  40feec:	pop    ss
  40feed:	jne    0x40fe98
  40feef:	mov    bh,0x3d
  40fef1:	or     DWORD PTR [edx+0x71],ebp
  40fef4:	mov    esi,0x2eec29c8
  40fef9:	inc    esp
  40fefa:	rol    BYTE PTR [edx],cl
  40fefc:	into   
  40fefd:	out    dx,al
  40fefe:	mov    cl,0x13
  40ff00:	aad    0x5c
  40ff02:	shl    DWORD PTR [ecx-0x13],0xae
  40ff06:	bnd jnp 0x40fef2
  40ff09:	rol    ah,0x6f
  40ff0c:	retf   0x5777
  40ff0f:	data16 stos BYTE PTR es:[edi],al
  40ff11:	hlt    
  40ff12:	mov    ebx,0x5ece8c8
  40ff17:	pop    esp
  40ff18:	xchg   ebp,eax
  40ff19:	pause  
  40ff1b:	std    
  40ff1c:	mov    ebp,0x6f3e17d4
  40ff21:	(bad)  
  40ff22:	cmc    
  40ff23:	pop    ds
  40ff24:	add    al,0xab
  40ff26:	push   ss
  40ff27:	xchg   ecx,eax
  40ff28:	data16 lahf 
  40ff2a:	frstor [edi]
  40ff2c:	adc    ch,ch
  40ff2e:	sub    ah,bh
  40ff30:	xor    BYTE PTR [esi],dh
  40ff32:	and    BYTE PTR [edx+0x63753d72],ch
  40ff38:	adc    al,0x29
  40ff3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff3b:	stos   BYTE PTR es:[edi],al
  40ff3c:	retf   
  40ff3d:	mov    dh,0x84
  40ff3f:	(bad)  [ebx+ebp*2+0x4e]
  40ff43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff44:	add    BYTE PTR [ebp-0x3689cf97],0x37
  40ff4b:	or     BYTE PTR [edi-0x5216bc7f],dh
  40ff51:	daa    
  40ff52:	mov    al,ds:0xdeda1367
  40ff57:	push   cs
  40ff58:	xchg   DWORD PTR [ebx-0x447badd8],ebp
  40ff5e:	clc    
  40ff5f:	(bad)  
  40ff60:	aaa    
  40ff61:	xchg   edi,eax
  40ff62:	inc    eax
  40ff63:	je     0x40ff1c
  40ff65:	mov    bl,0xab
  40ff67:	mov    bh,al
  40ff69:	rcr    BYTE PTR [ecx+ebp*1],1
  40ff6c:	xor    BYTE PTR [ebx+edx*2+0x2a],bh
  40ff70:	ja     0x40ff89
  40ff72:	sub    al,0x15
  40ff74:	iret   
  40ff75:	jnp    0x40ffd4
  40ff77:	push   ss
  40ff78:	jmp    0x7348:0xebbe4aab
  40ff7f:	nop
  40ff80:	pusha  
  40ff81:	clc    
  40ff82:	push   cs
  40ff83:	test   eax,0x4ea82bc5
  40ff88:	sbb    bl,BYTE PTR [ecx+eax*1+0x3ee38d84]
  40ff8f:	lea    ebp,[eax+0x3c]
  40ff92:	ror    BYTE PTR [ebx],0xb9
  40ff95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff96:	lea    ebx,[ebp+0x20de5c23]
  40ff9c:	add    edx,0x2ae2bd08
  40ffa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffa3:	(bad)  
  40ffa4:	mov    ds:0xc8811045,eax
  40ffa9:	dec    esi
  40ffaa:	jp     0x40ff75
  40ffac:	jmp    0x40fff0
  40ffae:	dec    edi
  40ffaf:	std    
  40ffb0:	push   eax
  40ffb1:	mov    ds:0x4835c9a6,eax
  40ffb6:	add    DWORD PTR [eax-0x34613d61],eax
  40ffbc:	pop    edi
  40ffbd:	pop    eax
  40ffbe:	outs   dx,BYTE PTR ds:[esi]
  40ffbf:	stc    
  40ffc0:	(bad)  
  40ffc1:	xchg   ebp,eax
  40ffc2:	into   
  40ffc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffc4:	mov    dl,0xeb
  40ffc6:	unpcklps xmm0,XMMWORD PTR [ecx+ebx*1+0x6c]
  40ffcb:	jns    0x40ff57
  40ffcd:	inc    BYTE PTR [edx+0x1e4c7560]
  40ffd3:	in     al,0xbb
  40ffd5:	xchg   edx,eax
  40ffd6:	mov    eax,ds:0x8dd1c057
  40ffdb:	ficom  WORD PTR [edi+0x1f]
  40ffde:	mov    ebx,0xa778c2a8
  40ffe3:	stos   BYTE PTR es:[edi],al
  40ffe4:	call   0xbb5c:0x70fbb81f
  40ffeb:	xchg   DWORD PTR [ebx-0x8611ab6],ebp
  40fff1:	clc    
  40fff2:	pop    edx
  40fff3:	sub    eax,DWORD PTR [ebp-0x122d48a0]
  40fff9:	or     al,0xed
  40fffb:	dec    esi
  40fffc:	cmp    DWORD PTR [esi-0xc],0x66cceaa6
  410003:	fmul   st(7),st
  410005:	push   edi
  410006:	fwait
  410007:	mov    eax,0xdab015bf
  41000c:	push   edx
  41000d:	adc    DWORD PTR [edi+ebp*8-0x59],0x9f361d7c
  410015:	inc    eax
  410016:	push   es
  410017:	jmp    0x3ed263f9
  41001c:	adc    BYTE PTR [esi-0x5fc30bad],dl
  410022:	push   0x32
  410024:	sub    bh,BYTE PTR [esi+eax*4]
  410027:	inc    ecx
  410028:	push   ebx
  410029:	mov    ch,0x28
  41002b:	cs scas al,BYTE PTR es:[edi]
  41002d:	inc    eax
  41002e:	sub    BYTE PTR [edx+0x65b8a69e],ch
  410034:	mov    bh,0x3
  410036:	daa    
  410037:	jne    0x4100ae
  410039:	imul   edx,DWORD PTR ds:0x888a71c,0x9b0ee22c
  410043:	cmp    eax,0xebd6ddf5
  410048:	or     DWORD PTR [ebp-0x59],edi
  41004b:	in     eax,0x29
  41004d:	pop    ebx
  41004e:	xor    bl,bh
  410050:	sbb    al,0x2e
  410052:	dec    eax
  410053:	mov    ebp,0xa132752d
  410058:	cdq    
  410059:	xchg   ecx,eax
  41005a:	jb     0x41002e
  41005c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41005d:	pop    ss
  41005e:	push   0x493a4daa
  410063:	js     0x41000e
  410065:	dec    ebp
  410066:	jg     0x4100aa
  410068:	test   al,0x49
  41006a:	test   esi,eax
  41006c:	sub    eax,0x4ca8b800
  410071:	mov    bh,BYTE PTR [esi]
  410073:	in     al,dx
  410074:	jnp    0x410038
  410076:	test   BYTE PTR ds:0x2dd60395,0x11
  41007d:	sbb    al,0xec
  41007f:	scas   al,BYTE PTR es:[edi]
  410080:	addr16 mov al,fs:0x8aa5
  410085:	pop    ebx
  410086:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410087:	xchg   ebx,eax
  410088:	push   ecx
  410089:	call   FWORD PTR [ebp-0x8302ac0]
  41008f:	pop    esp
  410090:	fcomp  DWORD PTR [esp+eax*2+0x3bf44e33]
  410097:	mov    esi,0x7e4a37b2
  41009c:	out    0x5b,al
  41009e:	push   ebx
  41009f:	mov    ecx,ebp
  4100a1:	or     eax,0x527306ef
  4100a6:	out    0x53,al
  4100a8:	addr16 inc ebp
  4100aa:	inc    ebx
  4100ab:	add    ecx,ecx
  4100ad:	push   edi
  4100ae:	stc    
  4100af:	push   ss
  4100b0:	pusha  
  4100b1:	and    ecx,DWORD PTR [edi+0x1b3aff2e]
  4100b7:	(bad)  
  4100b8:	cld    
  4100b9:	or     al,0x7e
  4100bb:	mov    cl,0xc6
  4100bd:	sub    eax,0x3331b1f4
  4100c2:	sti    
  4100c3:	lea    ecx,[esi+0x2151d282]
  4100c9:	popf   
  4100ca:	xor    al,BYTE PTR [edi]
  4100cc:	and    eax,0xc0f81b01
  4100d1:	leave  
  4100d2:	fild   DWORD PTR [eax]
  4100d4:	icebp  
  4100d5:	adc    eax,DWORD PTR ds:[edx-0x71aff855]
  4100dc:	push   ecx
  4100dd:	std    
  4100de:	inc    esp
  4100df:	and    dh,BYTE PTR [ebx]
  4100e1:	jmp    0xbb2d:0xa60657
  4100e8:	jbe    0x4100aa
  4100ea:	mov    dh,0x8a
  4100ec:	xchg   esp,esi
  4100ee:	cmp    bl,BYTE PTR [ebx+0x37]
  4100f1:	mov    ds:0x91154963,al
  4100f6:	inc    esi
  4100f7:	push   esi
  4100f8:	sub    eax,0xa3d07175
  4100fd:	xchg   esi,ebx
  4100ff:	cmp    BYTE PTR [esi-0x810a82c],bl
  410105:	fadd   DWORD PTR [eax]
  410107:	lea    ebp,[esi]
  410109:	test   al,0xac
  41010b:	nop
  41010c:	mov    esp,0x4e810af4
  410111:	imul   esi,DWORD PTR [ebp-0xb],0x8ba8316f
  410118:	test   al,0xb4
  41011a:	lods   al,BYTE PTR ds:[esi]
  41011b:	cmp    al,0x8b
  41011d:	leave  
  41011e:	add    eax,0x63270d8
  410123:	jl     0x4100b0
  410125:	mov    es,WORD PTR [edx]
  410127:	cld    
  410128:	xchg   ecx,eax
  410129:	stos   BYTE PTR es:[edi],al
  41012a:	mov    dh,0x1a
  41012c:	mov    ah,0x83
  41012e:	or     eax,edx
  410130:	cmp    al,0x91
  410132:	fnstcw WORD PTR [ecx+0x12]
  410135:	call   0x6384:0xb37d85aa
  41013c:	dec    ebp
  41013d:	test   BYTE PTR [ecx-0x32734c99],al
  410143:	pop    edx
  410144:	inc    edx
  410145:	ds stos DWORD PTR es:[edi],eax
  410147:	cli    
  410148:	add    DWORD PTR [ecx-0x7e],eax
  41014b:	aas    
  41014c:	jbe    0x410126
  41014e:	add    eax,0x4cba0a73
  410153:	loopne 0x410128
  410155:	enter  0x3f83,0xc8
  410159:	or     eax,0x3bcc2938
  41015e:	jp     0x4101bd
  410160:	bound  edx,QWORD PTR [eax]
  410162:	push   ebx
  410163:	adc    bl,BYTE PTR [edi+0x7f]
  410166:	and    BYTE PTR [edi-0x512e5998],ah
  41016c:	aam    0x1c
  41016e:	xor    al,0x2f
  410171:	mov    ah,0x37
  410173:	push   es
  410174:	sub    ecx,DWORD PTR [ebp-0x15]
  410177:	xchg   esp,eax
  410178:	adc    BYTE PTR [eax+0x60d621b],0xc5
  41017f:	mov    edi,DWORD PTR [ebx+0x17]
  410182:	pusha  
  410183:	clc    
  410184:	test   eax,0x94a4d3db
  410189:	or     ch,BYTE PTR [edx+0x5c38a5c8]
  41018f:	out    dx,eax
  410190:	sub    edx,eax
  410192:	mov    ch,0xf3
  410194:	inc    esi
  410195:	adc    BYTE PTR [edi+edx*2-0x71],ch
  410199:	jmp    0x775a:0xddfb5a60
  4101a0:	dec    esp
  4101a1:	add    al,0xcd
  4101a3:	push   0xffffffc6
  4101a5:	adc    DWORD PTR [esi+0x18282feb],ebx
  4101ab:	js     0x410207
  4101ad:	mov    ecx,0xc348c5c3
  4101b2:	iret   
  4101b3:	and    BYTE PTR [edx],bh
  4101b5:	dec    eax
  4101b6:	add    edx,DWORD PTR [ecx+0x6cb32b4b]
  4101bc:	lea    ebx,[ecx+0x54]
  4101bf:	loop   0x41022c
  4101c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101c2:	leave  
  4101c3:	fstp   QWORD PTR [eax+0x76]
  4101c6:	mov    dl,0x4f
  4101c8:	jmp    FWORD PTR [esi+0x53340e2a]
  4101ce:	je     0x410187
  4101d0:	mov    al,0xf1
  4101d2:	mov    dh,0x50
  4101d4:	and    al,0xcd
  4101d6:	jmp    0x4101ea
  4101d8:	mov    dh,0xf8
  4101da:	push   ds
  4101db:	jg     0x4101f4
  4101dd:	fild   WORD PTR [edi+ebx*2+0x63]
  4101e1:	jae    0x41023b
  4101e3:	xor    bh,BYTE PTR [eax+0x1c]
  4101e6:	(bad)  
  4101e7:	cmp    ecx,ebp
  4101e9:	push   esi
  4101ea:	or     al,0x6c
  4101ec:	sar    DWORD PTR [ebp+0x5b],0x43
  4101f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101f1:	mov    dl,0xb7
  4101f3:	push   ebp
  4101f4:	xchg   ebx,eax
  4101f5:	(bad)
  4101f9:	mov    ah,0x93
  4101fb:	repz neg ecx
  4101fe:	xchg   ecx,eax
  4101ff:	sbb    DWORD PTR ds:0x1ae7aa96,edi
  410205:	or     ebx,DWORD PTR [edx-0x26eab3d3]
  41020b:	out    0x0,al
  41020d:	jge    0x4101ee
  41020f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410210:	xlat   BYTE PTR ds:[ebx]
  410211:	ja     0x410287
  410213:	mov    ds:0x84116fd3,al
  410218:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410219:	sub    dl,BYTE PTR [ecx+ebp*2]
  41021c:	adc    BYTE PTR [edi],ah
  41021e:	mov    al,ds:0xbdd5f033
  410223:	pop    edi
  410224:	out    dx,al
  410225:	clc    
  410226:	or     BYTE PTR [ebp-0x6c],0xf4
  41022a:	out    dx,eax
  41022b:	pop    eax
  41022c:	ins    DWORD PTR es:[edi],dx
  41022d:	xor    DWORD PTR [eax-0xa88db51],esp
  410233:	mov    ah,0x13
  410235:	out    dx,al
  410236:	mov    edi,0x1a8e57eb
  41023b:	aad    0xb8
  41023d:	adc    eax,0xa39a0c2a
  410242:	mov    BYTE PTR es:[ecx+0x71461f05],cl
  410249:	xchg   BYTE PTR [ebx-0x81ecde2],bh
  41024f:	mov    dl,0x45
  410251:	mov    BYTE PTR [esi-0x14],bh
  410254:	scas   al,BYTE PTR es:[edi]
  410255:	dec    edi
  410256:	lock fsub QWORD PTR [ebp+0x24]
  41025a:	test   DWORD PTR [edi],eax
  41025c:	pop    esi
  41025d:	aad    0x61
  41025f:	dec    ebx
  410260:	mov    edx,DWORD PTR [ecx-0x4dc69ebc]
  410266:	and    edi,edx
  410268:	sbb    ah,BYTE PTR [ebx+edx*4+0x4df71c52]
  41026f:	cdq    
  410270:	jo     0x4102ec
  410272:	jge    0x410241
  410274:	jmp    0x410289
  410276:	ins    BYTE PTR es:[edi],dx
  410277:	push   eax
  410278:	inc    eax
  410279:	leave  
  41027a:	fcom   QWORD PTR [eax+esi*1+0x62f5ef1e]
  410281:	cmp    ecx,edi
  410283:	(bad)  
  410284:	mov    ebp,0x54a0e3b4
  410289:	and    esi,DWORD PTR [ebp+ecx*1+0x5fe680c]
  410290:	fmul   st(1),st
  410292:	inc    ebp
  410293:	xor    ah,BYTE PTR [ebp+0x981a0e9]
  410299:	retf   0x1db6
  41029c:	pusha  
  41029d:	aaa    
  41029e:	push   ds
  41029f:	pop    edi
  4102a0:	mov    al,0x73
  4102a2:	arpl   WORD PTR ds:0xe0e3e307,si
  4102a8:	repz inc edi
  4102aa:	dec    esi
  4102ab:	mov    WORD PTR [esi+0x3204f116],cs
  4102b1:	sub    edi,eax
  4102b3:	pusha  
  4102b4:	cmp    dl,bh
  4102b6:	outs   dx,DWORD PTR ds:[esi]
  4102b7:	out    0xf6,eax
  4102b9:	adc    cl,dl
  4102bb:	or     DWORD PTR [edi],edx
  4102bd:	ret    0x734e
  4102c0:	inc    esp
  4102c1:	rcl    BYTE PTR [edx],1
  4102c3:	in     al,dx
  4102c4:	loopne 0x410300
  4102c6:	outs   dx,BYTE PTR ds:[esi]
  4102c7:	mov    ds:0x8e8847ca,eax
  4102cc:	imul   edx,DWORD PTR [edx],0x8f6396ff
  4102d2:	dec    edx
  4102d3:	or     DWORD PTR [edi+0x258a6369],0xeaef481
  4102dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102de:	rol    ebp,cl
  4102e0:	dec    esp
  4102e1:	cmp    al,BYTE PTR [edi]
  4102e3:	or     BYTE PTR [edx],al
  4102e5:	push   edi
  4102e6:	inc    ecx
  4102e7:	dec    ebx
  4102e8:	inc    eax
  4102e9:	out    0xc1,eax
  4102eb:	mov    ch,0x78
  4102ed:	sub    eax,0x78daed51
  4102f2:	mov    al,ds:0xdb84b12c
  4102f7:	stos   BYTE PTR es:[edi],al
  4102f8:	xchg   ebp,eax
  4102f9:	mov    cl,0xa4
  4102fb:	xchg   edi,eax
  4102fc:	inc    edx
  4102fd:	adc    BYTE PTR [eax+0x75],bl
  410300:	cdq    
  410301:	sbb    eax,0x30fa8872
  410306:	into   
  410307:	test   BYTE PTR [ebp+0x1d],bh
  41030a:	mov    ds:0x39ab482f,eax
  41030f:	push   0xffffffbd
  410311:	mov    DWORD PTR [edi-0x24],0xd6a872fb
  410318:	xlat   BYTE PTR ds:[ebx]
  410319:	adc    DWORD PTR [ebx-0x1f0f7e1c],edi
  41031f:	lea    edi,[ebx]
  410321:	mov    DWORD PTR [ecx-0x4cde740b],esp
  410327:	add    eax,0x3ad7da43
  41032c:	ret    
  41032d:	push   ecx
  41032e:	jnp    0x410390
  410330:	fistp  DWORD PTR [edi-0x57b12696]
  410336:	dec    ecx
  410337:	sub    al,0xe7
  410339:	and    cl,0x5a
  41033c:	or     al,BYTE PTR [edx-0x31]
  41033f:	mov    al,ds:0xa7c230af
  410344:	cmc    
  410345:	adc    bh,BYTE PTR [edx+0xec72a36]
  41034b:	addr16 push cs
  41034d:	or     dl,0x12
  410350:	push   ss
  410351:	rcr    eax,1
  410353:	mov    eax,ds:0x8ab7a41c
  410358:	pop    ecx
  410359:	jle    0x410307
  41035b:	call   0x8bdda0d1
  410360:	sbb    BYTE PTR [ecx+0x5b],al
  410363:	leave  
  410364:	dec    esp
  410365:	pop    es
  410366:	ret    0x23c2
  410369:	fcom   QWORD PTR [ebx+ebx*1-0x55]
  41036d:	mov    ?,WORD PTR [eax-0x53]
  410370:	or     al,0x51
  410372:	inc    DWORD PTR [eax+0x114d76d7]
  410378:	jno    0x4103e8
  41037a:	cmp    ah,BYTE PTR [esi+0x57b89c7]
  410380:	xor    DWORD PTR [ecx+ebp*1-0x110e1fcd],0xc70a5718
  41038b:	test   al,0xaa
  41038d:	shl    BYTE PTR [edi+0x68],1
  410390:	addr16 repz xchg esi,eax
  410393:	mov    ah,0x22
  410395:	ret    0x37c1
  410398:	ficomp DWORD PTR [edx+0x1f9a83aa]
  41039e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41039f:	dec    ebx
  4103a0:	stos   BYTE PTR es:[edi],al
  4103a1:	in     eax,dx
  4103a2:	or     edx,DWORD PTR [esi+0x63845bb5]
  4103a8:	ins    BYTE PTR es:[edi],dx
  4103a9:	dec    esi
  4103aa:	mov    ah,0x53
  4103ac:	jno    0x410331
  4103ae:	pusha  
  4103af:	inc    ecx
  4103b0:	(bad)  
  4103b1:	clc    
  4103b2:	mov    al,0xf2
  4103b4:	cmp    DWORD PTR [edi-0x15],ebp
  4103b7:	dec    eax
  4103b8:	fwait
  4103b9:	add    eax,0xaeeca07d
  4103be:	xor    al,0x4
  4103c0:	rcl    BYTE PTR [esi],cl
  4103c2:	and    al,0x5c
  4103c4:	push   edi
  4103c5:	pop    es
  4103c6:	mov    al,0x99
  4103c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103c9:	push   ebp
  4103ca:	xchg   ebp,eax
  4103cb:	push   cs
  4103cc:	push   ss
  4103cd:	icebp  
  4103ce:	mov    dh,0xf2
  4103d0:	cld    
  4103d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103d2:	cwde   
  4103d3:	out    0x59,eax
  4103d5:	jle    0x410447
  4103d7:	int3   
  4103d8:	mov    bl,0x2d
  4103da:	adc    DWORD PTR [ecx-0x27],edx
  4103dd:	jecxz  0x4103ce
  4103df:	shl    BYTE PTR [ebx],cl
  4103e1:	dec    eax
  4103e2:	inc    edi
  4103e3:	aad    0x2a
  4103e5:	mov    ah,0xc7
  4103e7:	xchg   DWORD PTR fs:[esi+0x701a73c1],ebx
  4103ee:	inc    esp
  4103ef:	xor    DWORD PTR [edx+0x49377851],0x53e0fa7a
  4103f9:	cmp    DWORD PTR [esi+0x36ddc218],ecx
  4103ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410400:	bnd jno 0x41039b
  410403:	sbb    eax,0xca5512c6
  410408:	(bad)  
  410409:	loopne 0x410451
  41040b:	test   al,0x6e
  41040d:	adc    dh,cl
  41040f:	(bad)  
  410410:	push   ss
  410411:	fldcw  WORD PTR [eax+ecx*1-0x1b]
  410415:	shl    BYTE PTR [ecx+0x28],1
  410418:	aas    
  410419:	add    ch,bh
  41041b:	ins    DWORD PTR es:[edi],dx
  41041c:	xor    al,0x68
  41041e:	jg     0x41043a
  410420:	jp     0x4103a5
  410422:	adc    eax,0x7444b87a
  410427:	cmp    ah,bh
  410429:	aam    0xf0
  41042b:	mov    edi,0x4678d5bd
  410430:	fwait
  410431:	gs inc ebx
  410433:	(bad)  
  410434:	out    dx,al
  410435:	sbb    bh,BYTE PTR [edx]
  410437:	push   esp
  410438:	jp     0x4103d3
  41043a:	dec    esp
  41043b:	push   0xffffffff
  41043d:	mov    edi,?
  41043f:	mov    al,0xf7
  410441:	lock or ch,cl
  410444:	aam    0x2f
  410446:	fwait
  410447:	cmp    dl,al
  410449:	and    BYTE PTR [ecx-0x2a],al
  41044c:	ja     0x410432
  41044e:	stos   DWORD PTR es:[edi],eax
  41044f:	mov    ch,0x49
  410451:	fs pop esi
  410453:	mov    bl,dh
  410455:	rcl    BYTE PTR [ebx-0x5b],1
  410458:	mov    cl,BYTE PTR [ecx+0x6ed67932]
  41045e:	or     BYTE PTR gs:[eax+0x30f2fa14],0xf2
  410466:	or     dl,bl
  410468:	or     BYTE PTR [ecx-0x11],dh
  41046b:	or     cl,bl
  41046d:	mov    al,0xc5
  41046f:	dec    ebx
  410470:	dec    ecx
  410471:	xchg   edx,edx
  410473:	sbb    DWORD PTR [ecx-0x5524883b],eax
  410479:	sub    cl,0x41
  41047c:	ss icebp 
  41047e:	(bad)
  410482:	jle    0x4104ab
  410484:	clc    
  410485:	or     BYTE PTR [ebx-0x27eb2acd],dh
  41048b:	jns    0x4104ba
  41048d:	adc    eax,0x9bf08d63
  410492:	in     eax,dx
  410493:	adc    BYTE PTR [eax],0xee
  410496:	inc    esp
  410497:	jp     0x410463
  410499:	inc    eax
  41049a:	fs pop ebp
  41049c:	pop    ss
  41049d:	les    ecx,FWORD PTR ds:0x82118ee
  4104a3:	pop    ss
  4104a4:	xor    eax,0x4e173d20
  4104a9:	xchg   ecx,eax
  4104aa:	fistp  DWORD PTR [esi-0x40656a96]
  4104b0:	adc    DWORD PTR [edi+eiz*4],edx
  4104b3:	mov    dl,0xbc
  4104b5:	daa    
  4104b6:	sub    al,0x29
  4104b8:	(bad)  
  4104b9:	shr    BYTE PTR [esp+edx*4+0x78db31b0],1
  4104c0:	ins    DWORD PTR es:[edi],dx
  4104c1:	pop    esp
  4104c2:	inc    ebx
  4104c3:	push   ecx
  4104c4:	leave  
  4104c5:	in     al,dx
  4104c6:	fldpi  
  4104c9:	cmc    
  4104ca:	or     DWORD PTR [edx+edx*8],esp
  4104cd:	arpl   WORD PTR [eax+0x7596bb37],bx
  4104d3:	repz sub DWORD PTR [ebp-0x5],0xad677232
  4104db:	xchg   edi,eax
  4104dc:	mov    ds:0xb7d26a14,al
  4104e1:	and    ch,0x32
  4104e4:	aam    0x35
  4104e6:	mul    BYTE PTR [edx+edi*1-0x3d439e32]
  4104ed:	in     eax,0xb4
  4104ef:	pop    esp
  4104f0:	popf   
  4104f1:	inc    eax
  4104f2:	jae    0x41052f
  4104f4:	inc    ebp
  4104f5:	sub    BYTE PTR ds:[eax],0xbf
  4104f9:	jne    0x410515
  4104fb:	adc    al,0x18
  4104fd:	das    
  4104fe:	out    dx,eax
  4104ff:	cld    
  410500:	inc    edx
  410501:	(bad)  
  410502:	jns    0x41051b
  410504:	pushf  
  410505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410506:	sbb    eax,DWORD PTR [esi]
  410508:	or     DWORD PTR [edx-0x53],ebp
  41050b:	(bad)  
  41050c:	sbb    esi,DWORD PTR [edx-0x785ac052]
  410512:	push   cs
  410513:	push   ebx
  410514:	popw   ss
  410516:	test   DWORD PTR [edx-0x63c863ad],eax
  41051c:	loop   0x410539
  41051e:	adc    esp,DWORD PTR [edx+edx*2]
  410521:	xchg   esp,eax
  410522:	cmp    al,0xa0
  410524:	xchg   esp,eax
  410525:	enter  0xfb43,0xe9
  410529:	sahf   
  41052a:	adc    esp,DWORD PTR [edi-0x67]
  41052d:	sub    ah,BYTE PTR [esi+ebp*2-0x1a]
  410531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410532:	xchg   esp,eax
  410533:	mov    ebx,DWORD PTR [edi+0x36]
  410536:	mov    ebp,0x70415d44
  41053b:	ins    BYTE PTR es:[edi],dx
  41053c:	pushf  
  41053d:	(bad)  
  41053e:	aas    
  41053f:	mov    eax,ds:0x3a8b14c4
  410544:	lods   al,BYTE PTR ds:[esi]
  410545:	push   ecx
  410546:	int    0xf0
  410548:	mov    esp,0xbb964eed
  41054d:	or     ah,dh
  41054f:	js     0x410518
  410551:	mov    DWORD PTR [ebp-0x54],ebp
  410554:	jns    0x4105ae
  410556:	mov    al,ds:0xed79cfa
  41055b:	mov    dl,0x18
  41055d:	call   FWORD PTR [edx+0x2f740ce9]
  410563:	xchg   BYTE PTR [ebp+eax*4+0x156d70c6],dl
  41056a:	rol    edx,cl
  41056c:	lock pop eax
  41056e:	mov    edx,DWORD PTR [eax+0x6553ceab]
  410574:	xchg   BYTE PTR [ebx+eax*1],cl
  410577:	mov    gs:0xbd35c330,eax
  41057d:	add    BYTE PTR [ebx],bh
  41057f:	outs   dx,DWORD PTR ds:[esi]
  410580:	sti    
  410581:	and    edx,DWORD PTR ds:0xb9caf3f5
  410587:	xchg   edi,eax
  410588:	sbb    dl,BYTE PTR [ecx]
  41058a:	inc    ebx
  41058b:	pop    eax
  41058c:	push   ds
  41058d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41058e:	dec    ecx
  41058f:	mov    esp,0xaf0a684b
  410594:	dec    ebx
  410595:	jmp    0x4105f2
  410597:	mov    edx,0xb6b224c6
  41059c:	call   0x87525539
  4105a1:	push   es
  4105a2:	bswap  edx
  4105a4:	xchg   ecx,eax
  4105a5:	mov    ecx,0xef35b413
  4105aa:	cli    
  4105ab:	xor    al,0xe4
  4105ad:	icebp  
  4105ae:	outs   dx,DWORD PTR ds:[esi]
  4105af:	push   ebp
  4105b0:	fstp   TBYTE PTR [esi]
  4105b2:	(bad)  
  4105b4:	adc    al,BYTE PTR [edi]
  4105b6:	jbe    0x410547
  4105b8:	mov    ebp,edx
  4105ba:	inc    eax
  4105bb:	retf   0xf712
  4105be:	fld    TBYTE PTR [ecx-0x5a028872]
  4105c4:	ret    
  4105c5:	sub    eax,0x62674a02
  4105ca:	outs   dx,DWORD PTR ds:[esi]
  4105cb:	ins    DWORD PTR es:[edi],dx
  4105cc:	(bad)  
  4105cd:	gs adc bl,cl
  4105d0:	xor    al,0xfc
  4105d2:	add    edi,esi
  4105d4:	jmp    0xc9530d53
  4105d9:	sbb    al,0xbf
  4105db:	and    ebp,edx
  4105dd:	push   es
  4105de:	xor    ecx,DWORD PTR [ebx+0x44]
  4105e1:	adc    al,0xd5
  4105e3:	mov    eax,ds:0xe4cbcd85
  4105e8:	xchg   esp,eax
  4105e9:	jmp    0x41062b
  4105eb:	mov    bl,0xa9
  4105ed:	xor    ecx,DWORD PTR [edi]
  4105ef:	inc    ecx
  4105f0:	repz dec edi
  4105f2:	out    0x24,eax
  4105f4:	into   
  4105f5:	outs   dx,BYTE PTR ds:[esi]
  4105f6:	es pushf 
  4105f8:	(bad)  
  4105f9:	xor    BYTE PTR ds:0x1db38c87,al
  4105ff:	adc    BYTE PTR [ebp+0x20],bh
  410602:	push   ecx
  410603:	lods   eax,DWORD PTR ds:[esi]
  410604:	cmp    al,0x77
  410606:	mov    cl,0xa1
  410608:	xor    DWORD PTR [ebx+0x4251001a],0x3cadcdbd
  410612:	and    al,0xd9
  410614:	cmp    DWORD PTR [esi+0x28db9321],ebx
  41061a:	sbb    dh,BYTE PTR [esi]
  41061c:	or     eax,0xf2cb49db
  410621:	push   0x5e
  410623:	xor    eax,0x5fdb29ae
  410628:	into   
  410629:	ss xchg ebx,eax
  41062b:	push   cs
  41062c:	xor    ch,ch
  41062e:	(bad)  
  41062f:	mov    dh,0xc5
  410631:	and    DWORD PTR [eax+0x441cb440],edi
  410637:	adc    al,0x4e
  410639:	xor    DWORD PTR [edx+0x48],esp
  41063c:	xor    bl,BYTE PTR [edx]
  41063e:	stc    
  41063f:	out    0x80,al
  410641:	(bad)  
  410642:	xor    al,0x10
  410645:	ret    
  410646:	adc    DWORD PTR [ebp-0x33bb51eb],ebp
  41064c:	push   0x4e
  41064e:	push   eax
  41064f:	sub    BYTE PTR [ebp-0x5],dh
  410652:	jp     0x4106c8
  410654:	frstor [ebp-0x12fb8ec2]
  41065a:	sub    esp,DWORD PTR [ecx+0x1c]
  41065d:	push   ebp
  41065e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41065f:	arpl   WORD PTR [ebp+0x1ecf90b4],si
  410665:	mov    esi,0xc679421a
  41066a:	lock out dx,eax
  41066c:	mov    ss,WORD PTR [eax+0x34]
  41066f:	dec    ebx
  410670:	jmp    0x4106c2
  410672:	sub    ebx,DWORD PTR [esi-0x3e]
  410675:	fsubp  st(0),st
  410677:	(bad)  
  410678:	out    0x50,eax
  41067a:	pusha  
  41067b:	imul   esi,DWORD PTR [ebp-0x5e],0x32
  41067f:	add    BYTE PTR [esi-0x60dcb9ed],bl
  410685:	sub    eax,0x11716d3d
  41068a:	xchg   edi,eax
  41068b:	aas    
  41068c:	sub    eax,0x1e770827
  410691:	xchg   esp,eax
  410692:	jae    0x41070e
  410694:	pop    es
  410695:	add    ebp,DWORD PTR [ecx-0x5b99eb8]
  41069b:	or     eax,0xa3325d03
  4106a0:	retf   
  4106a1:	dec    esi
  4106a2:	pop    si
  4106a4:	adc    DWORD PTR [ecx+0x4c],esi
  4106a7:	push   ss
  4106a8:	call   0xa722a35a
  4106ad:	fs call FWORD PTR cs:[edx-0xf1e0dc8]
  4106b5:	js     0x41072b
  4106b7:	push   ds
  4106b8:	dec    edx
  4106b9:	jmp    0xec4fe7e2
  4106be:	mov    al,0xe0
  4106c0:	mov    esp,0xb87bbcef
  4106c5:	test   al,0xda
  4106c7:	std    
  4106c8:	and    eax,0xc30c5dc5
  4106cd:	stos   BYTE PTR es:[edi],al
  4106ce:	fistp  DWORD PTR [ebp-0x55]
  4106d1:	push   esi
  4106d2:	jb     0x4106bb
  4106d4:	idiv   BYTE PTR [ecx]
  4106d6:	mov    ss,WORD PTR [edi]
  4106d8:	arpl   cx,si
  4106da:	pop    esp
  4106db:	dec    ecx
  4106dc:	add    eax,0xf8356ffd
  4106e1:	jle    0x41072c
  4106e3:	sti    
  4106e4:	and    BYTE PTR [esi-0x4a],al
  4106e7:	mov    bl,0x11
  4106e9:	int    0x2b
  4106eb:	mov    DWORD PTR [esp+edx*8+0x28],ebx
  4106ef:	imul   ecx,DWORD PTR [edx-0x40],0xffffffd6
  4106f3:	push   esi
  4106f4:	in     eax,dx
  4106f5:	pusha  
  4106f6:	(bad)
  4106f9:	pop    ecx
  4106fa:	push   eax
  4106fb:	inc    esi
  4106fc:	arpl   WORD PTR [eax+0x7e8089a9],bp
  410702:	aaa    
  410703:	pop    ss
  410704:	movd   mm6,DWORD PTR [edi+0x5c]
  410708:	scas   al,BYTE PTR es:[edi]
  410709:	aaa    
  41070a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41070b:	or     eax,0x7ae388da
  410710:	pusha  
  410711:	dec    ebx
  410712:	shr    DWORD PTR [esi],1
  410714:	mov    al,BYTE PTR [edx+0x16]
  410717:	fcmovnb st,st(0)
  410719:	mov    esi,0xe1ad8560
  41071e:	xor    DWORD PTR [esi+0x24],ebx
  410721:	mov    eax,0x589675e1
  410726:	jecxz  0x4106d4
  410728:	cli    
  410729:	mov    bh,0xcb
  41072b:	inc    esi
  41072c:	mov    BYTE PTR [esi+eiz*8-0x7aa79451],cl
  410733:	out    0x32,eax
  410735:	cli    
  410736:	sub    BYTE PTR [edx],dl
  410738:	mov    esi,0x10005b72
  41073d:	cmp    edi,DWORD PTR [ecx-0x1f8c6d67]
  410743:	test   al,0x7a
  410745:	jl     0x410784
  410747:	add    esi,DWORD PTR [edx+0x31fd50ef]
  41074d:	in     al,0x0
  41074f:	pop    ss
  410750:	(bad)  
  410751:	sub    al,BYTE PTR [edx-0x78]
  410754:	popf   
  410755:	mov    ch,0xcd
  410757:	sahf   
  410758:	jl     0x4106f0
  41075a:	cmp    dh,ch
  41075c:	popa   
  41075d:	xlat   BYTE PTR ds:[ebx]
  41075e:	mov    dl,0xe8
  410760:	test   BYTE PTR [eax],bh
  410762:	int3   
  410763:	out    0x6f,eax
  410765:	inc    eax
  410766:	fbld   TBYTE PTR [eax-0x58ae1551]
  41076c:	rcl    BYTE PTR [esi-0x734ae41c],1
  410772:	or     BYTE PTR [edx-0x6ffb609],dh
  410778:	inc    esi
  410779:	imul   ecx,DWORD PTR [ebx-0x4989c1ab],0x64b991ec
  410783:	test   DWORD PTR [esi-0xc],0x91d28256
  41078a:	ja     0x4107d2
  41078c:	mov    BYTE PTR [edi+0x348b2dcf],bh
  410792:	neg    BYTE PTR [edx*8+0x12d256a3]
  410799:	retf   
  41079a:	adc    bh,BYTE PTR [ebx+ebp*4-0x100f6dc8]
  4107a1:	mov    WORD PTR [ebp+0x30],gs
  4107a4:	lahf   
  4107a5:	lea    ebp,[eax+0x51]
  4107a8:	ss jno 0x4107f4
  4107ab:	das    
  4107ac:	mov    ecx,0xf97eb3ef
  4107b1:	xor    ecx,DWORD PTR [ebp+0x774d1237]
  4107b7:	jnp    0x4107b8
  4107b9:	stc    
  4107ba:	sbb    eax,0x44ca6a85
  4107bf:	outs   dx,DWORD PTR ds:[esi]
  4107c0:	ja     0x41078b
  4107c2:	inc    edx
  4107c3:	out    dx,al
  4107c4:	call   DWORD PTR [esi]
  4107c6:	or     DWORD PTR cs:[ebp+edi*4-0x61],ebp
  4107cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107cc:	das    
  4107cd:	mov    edx,0x59690ca9
  4107d2:	push   esp
  4107d3:	adc    DWORD PTR [esi+ecx*4],ebp
  4107d6:	out    0xa2,al
  4107d8:	mov    al,ds:0x25d03d20
  4107dd:	pop    ebx
  4107de:	sbb    eax,0x3186597e
  4107e3:	xchg   edi,eax
  4107e4:	sub    esi,DWORD PTR ds:0x2ec52935
  4107ea:	nop
  4107eb:	xlat   BYTE PTR ds:[ebx]
  4107ec:	mov    eax,0x1ed47c25
  4107f1:	xchg   edi,eax
  4107f2:	in     al,dx
  4107f3:	ficom  WORD PTR [ebx-0x18]
  4107f6:	inc    edx
  4107f7:	xlat   BYTE PTR ds:[ebx]
  4107f8:	pusha  
  4107f9:	add    ebp,DWORD PTR [eax+0x74e3962f]
  4107ff:	shr    BYTE PTR [esi],1
  410801:	mov    cl,0xde
  410803:	cmc    
  410804:	je     0x410869
  410806:	xor    ebx,eax
  410808:	das    
  410809:	cdq    
  41080a:	mov    dl,0xfd
  41080c:	mov    dl,0xb3
  41080e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41080f:	cmp    BYTE PTR [edi+0x4b],0x5
  410813:	sbb    bh,ah
  410815:	add    eax,0xdde67be
  41081a:	stc    
  41081b:	mov    ecx,0x9f4e9ee5
  410820:	dec    BYTE PTR [esi-0x442b928c]
  410826:	mov    al,0xff
  410828:	jl     0x4107fb
  41082a:	jp     0x4107e7
  41082c:	shl    bl,1
  41082e:	ror    DWORD PTR [esp+edi*2-0x65],1
  410832:	and    BYTE PTR [ebp-0x87f8707],ah
  410838:	push   0x44fd4243
  41083d:	mov    al,ds:0x5d34b46b
  410842:	mov    dh,0xe4
  410844:	in     al,0xe0
  410846:	or     BYTE PTR [ebp+0x797bf173],cl
  41084c:	dec    ebx
  41084d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41084e:	mov    ebx,0x755a58b4
  410853:	test   eax,0x134cbcb
  410858:	mov    ds:0x980e5526,al
  41085d:	dec    eax
  41085e:	aaa    
  41085f:	jnp    0x410808
  410861:	lahf   
  410862:	(bad)  
  410863:	fistp  WORD PTR [ebx+0x6a4eec60]
  410869:	mov    ebx,DWORD PTR [ebp-0x6c835fde]
  41086f:	jge    0x410813
  410871:	pop    esp
  410872:	aam    0xf5
  410874:	inc    edi
  410875:	lods   eax,DWORD PTR ds:[esi]
  410876:	jge    0x410823
  410878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410879:	shl    bl,0x0
  41087c:	ret    0xe6d2
  41087f:	fild   WORD PTR [edx+0x68]
  410882:	aad    0x63
  410884:	fwait
  410885:	test   BYTE PTR [edx+0x11],bh
  410888:	pop    ss
  410889:	jne    0x4108c1
  41088b:	int    0x6c
  41088d:	dec    ebx
  41088e:	inc    ebx
  41088f:	lods   eax,DWORD PTR ds:[esi]
  410890:	dec    edx
  410891:	outs   dx,DWORD PTR ds:[esi]
  410892:	push   esi
  410893:	mov    bh,0x84
  410895:	xlat   BYTE PTR ds:[ebx]
  410896:	jb     0x410865
  410898:	jns    0x4108cc
  41089a:	rol    BYTE PTR [edx+0x182622c2],cl
  4108a0:	or     DWORD PTR [ecx+0x3],ebp
  4108a3:	xchg   esi,eax
  4108a4:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4108a6:	out    dx,eax
  4108a7:	cmp    al,0xaf
  4108a9:	daa    
  4108aa:	push   eax
  4108ab:	xchg   ebx,eax
  4108ac:	cmp    cl,bl
  4108ae:	jmp    0x59da3d51
  4108b3:	fbld   TBYTE PTR [edx-0x7a]
  4108b6:	cmp    eax,0xc27f0a11
  4108bb:	adc    DWORD PTR [ebp+0xa4af079],ebx
  4108c1:	cmp    al,0xc4
  4108c3:	mov    bl,0xb3
  4108c5:	cmp    al,0x53
  4108c7:	ret    0xc3b8
  4108ca:	adc    DWORD PTR [ecx-0x1c5c498e],eax
  4108d0:	lods   eax,DWORD PTR ds:[esi]
  4108d1:	repnz adc edi,DWORD PTR [edx+ebx*8+0x6a1a3d2e]
  4108d9:	pop    ss
  4108da:	fnstsw WORD PTR [ebx+0x22]
  4108dd:	pop    ds
  4108de:	mov    ds:0x8a9d2f70,eax
  4108e3:	sbb    ebx,edi
  4108e5:	data16 repz xlat BYTE PTR ds:[ebx]
  4108e8:	mov    BYTE PTR [edx],bl
  4108ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108eb:	dec    ebx
  4108ec:	sub    dl,0xf7
  4108ef:	ja     0x4108ee
  4108f1:	shl    BYTE PTR [esi],cl
  4108f3:	rcl    DWORD PTR [ebx+0x31],1
  4108f6:	bound  edi,QWORD PTR [eax]
  4108f8:	pop    ebp
  4108f9:	mov    ecx,0xf4fcad0d
  4108fe:	jmp    0x410902
  410900:	xchg   esp,eax
  410901:	popa   
  410902:	stos   BYTE PTR es:[edi],al
  410903:	inc    edi
  410904:	or     eax,0x56a49c7f
  410909:	div    DWORD PTR [edx+0x10]
  41090c:	(bad)  
  41090d:	and    eax,0x2ab279f4
  410912:	cmp    DWORD PTR [edx],0xffffff98
  410915:	sbb    al,0x25
  410917:	(bad)  
  410918:	ds es mov eax,0xf6125d17
  41091f:	sub    al,BYTE PTR [edi]
  410921:	in     eax,dx
  410922:	push   ebp
  410923:	loop   0x4108c8
  410925:	test   al,0x1d
  410927:	push   edx
  410928:	cld    
  410929:	mov    esp,DWORD PTR [ebx]
  41092b:	mov    dh,0xbf
  41092d:	mov    esp,0xea30010c
  410932:	lods   eax,DWORD PTR ds:[esi]
  410933:	xchg   DWORD PTR [ecx+eax*8-0x39],edx
  410937:	imul   DWORD PTR [ebx-0x6b]
  41093a:	sub    al,0x61
  41093c:	repnz aam 0x82
  41093f:	loope  0x4108cd
  410941:	jnp    0x410914
  410943:	pop    es
  410944:	mov    ah,0x48
  410946:	es call 0xe1a1:0x636cb8ec
  41094e:	adc    dh,BYTE PTR [ebx]
  410950:	cmp    DWORD PTR [ebp+0x213d00e6],edi
  410956:	lds    ebp,FWORD PTR [ecx+0x3c]
  410959:	(bad)  
  41095a:	out    dx,eax
  41095b:	mov    esi,0x47b5f9ee
  410960:	or     DWORD PTR [esi+0x35],0x5f2bfd3c
  410967:	xchg   ebp,eax
  410968:	sbb    BYTE PTR [esi-0x304dc5d9],ah
  41096e:	sub    esp,esi
  410970:	mov    edi,0x2ba984e5
  410975:	sbb    esp,DWORD PTR [ecx]
  410977:	mov    ds:0x58fb46b6,al
  41097c:	in     eax,0x28
  41097e:	enter  0xee47,0xf1
  410982:	or     al,0x4
  410984:	dec    eax
  410985:	rcl    bl,1
  410987:	push   edx
  410988:	stc    
  410989:	mov    al,ds:0xfcaf5183
  41098e:	dec    ecx
  41098f:	jno    0x410992
  410991:	fs mov ecx,0xb473ec88
  410997:	or     BYTE PTR [ecx+0x1b],bh
  41099a:	gs popa 
  41099c:	dec    ecx
  41099d:	in     eax,0x33
  41099f:	and    DWORD PTR [eax+eiz*2],edx
  4109a2:	jmp    0x410951
  4109a4:	jne    0x4109ab
  4109a6:	xchg   BYTE PTR gs:[ebp+ebx*2-0x42651da3],bl
  4109ae:	stc    
  4109af:	mov    ds:0x140e862e,eax
  4109b4:	out    0x81,eax
  4109b6:	in     al,dx
  4109b7:	and    DWORD PTR [eax],ebp
  4109b9:	mov    eax,0xe3c7f5a1
  4109be:	sub    cl,BYTE PTR [eax+0x2d5f4063]
  4109c4:	xchg   ch,bh
  4109c6:	and    eax,0x78586880
  4109cb:	dec    edx
  4109cc:	js     0x4109be
  4109ce:	cwde   
  4109cf:	add    eax,0x8a6d9476
  4109d4:	add    eax,0xaea6c00f
  4109d9:	jmp    DWORD PTR [edx+0xd]
  4109dc:	sbb    BYTE PTR [ebx],al
  4109de:	xchg   esp,eax
  4109df:	cs ins BYTE PTR es:[edi],dx
  4109e1:	pop    ss
  4109e2:	stos   BYTE PTR es:[edi],al
  4109e3:	loope  0x41098d
  4109e5:	pop    ss
  4109e6:	pop    es
  4109e7:	pop    ebx
  4109e8:	loop   0x410a28
  4109ea:	pop    esi
  4109eb:	sub    BYTE PTR [eax-0x73],bh
  4109ee:	pushf  
  4109ef:	in     eax,dx
  4109f0:	push   esi
  4109f1:	adc    al,0x63
  4109f3:	call   0x1ef10304
  4109f8:	sbb    dh,BYTE PTR [ebx-0xd]
  4109fb:	push   ebx
  4109fc:	mov    ?,WORD PTR [si-0x5ad]
  410a01:	mov    cl,0xd
  410a03:	sub    BYTE PTR [ebp+0x4],ch
  410a06:	dec    esi
  410a07:	jns    0x4109cb
  410a09:	das    
  410a0a:	fsub   QWORD PTR [eax]
  410a0c:	js     0x4109c8
  410a0e:	retf   
  410a0f:	out    dx,al
  410a10:	mov    dh,0xb7
  410a12:	aam    0x35
  410a14:	(bad)  
  410a15:	ds test eax,0xee3e2b1
  410a1b:	ret    0xc208
  410a1e:	mov    ds:0x3570f7d,al
  410a23:	xchg   DWORD PTR [edx-0x29dc744],ecx
  410a29:	push   ds
  410a2a:	data16 mov bh,0xcc
  410a2d:	or     ah,0x19
  410a30:	jmp    0x959c2672
  410a35:	adc    BYTE PTR [edx+ebx*2],0x56
  410a39:	inc    ecx
  410a3a:	dec    edi
  410a3b:	mov    BYTE PTR [ebx],ch
  410a3d:	jl     0x410aa5
  410a3f:	mov    eax,0x5286d4c1
  410a44:	mov    ecx,0xac4cdadc
  410a49:	in     al,dx
  410a4a:	aam    0x39
  410a4c:	neg    DWORD PTR [ecx-0x79]
  410a4f:	in     eax,dx
  410a50:	and    eax,0x5372030e
  410a55:	mov    ecx,0x6e510674
  410a5a:	or     bl,ch
  410a5c:	xor    bl,BYTE PTR [ebx+esi*8-0x7a]
  410a60:	or     BYTE PTR [ebx+edi*2-0x18e49c09],dh
  410a67:	cmp    al,0x8
  410a69:	leave  
  410a6a:	inc    eax
  410a6b:	sbb    BYTE PTR [ebx-0xc61c2b],0xa1
  410a72:	call   0xf422:0x7e9a3212
  410a79:	pop    ds
  410a7a:	outs   dx,BYTE PTR ds:[esi]
  410a7b:	scas   al,BYTE PTR es:[edi]
  410a7c:	ficomp DWORD PTR [edi]
  410a7e:	cli    
  410a7f:	jae    0x410a20
  410a81:	cmc    
  410a82:	push   0xdf2fe6b3
  410a87:	xchg   edi,eax
  410a88:	(bad)  
  410a89:	scas   al,BYTE PTR es:[edi]
  410a8a:	push   ss
  410a8b:	repz test al,0x5c
  410a8e:	pop    ds
  410a8f:	mov    BYTE PTR [edi+0x1f],bl
  410a92:	jno    0x410a68
  410a94:	push   esi
  410a95:	sbb    esi,esi
  410a97:	js     0x410a43
  410a99:	xlat   BYTE PTR ds:[ebx]
  410a9a:	ss pop ebx
  410a9c:	pop    esp
  410a9d:	mov    ah,0xda
  410a9f:	fdiv   st,st(7)
  410aa1:	fdivr  DWORD PTR [ebx]
  410aa3:	push   es
  410aa4:	aas    
  410aa5:	cmp    BYTE PTR [ebx],bl
  410aa7:	sbb    esp,esp
  410aa9:	mov    eax,0x7396875
  410aae:	enter  0x8800,0x55
  410ab2:	push   ds
  410ab3:	sub    BYTE PTR [esi+0x33e66f0b],bl
  410ab9:	(bad)  
  410abb:	push   ss
  410abc:	jp     0x410b39
  410abe:	dec    eax
  410abf:	push   cs
  410ac0:	setno  BYTE PTR [esp+ebp*2+0x4de65712]
  410ac8:	stos   DWORD PTR es:[edi],eax
  410ac9:	mov    al,ds:0x75f7431d
  410ace:	loope  0x410b16
  410ad0:	repz add cl,0xc6
  410ad4:	mov    eax,0xd3fa0843
  410ad9:	out    0xa4,eax
  410adb:	mov    ah,0xb5
  410add:	loopne 0x410ace
  410adf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ae0:	adc    DWORD PTR [esi-0x58a988ca],0xffffff93
  410ae7:	mov    edi,0x2766a692
  410aec:	pop    ecx
  410aed:	xchg   esp,edx
  410aef:	jbe    0x410ade
  410af1:	mov    cl,0x90
  410af3:	es inc eax
  410af5:	daa    
  410af6:	popa   
  410af7:	sbb    DWORD PTR [ebx+0x22a95cb1],esi
  410afd:	(bad)
  410b01:	aas    
  410b02:	and    edi,DWORD PTR [eax+0x56]
  410b05:	pop    ds
  410b06:	and    ebx,DWORD PTR [edx-0x30c935c8]
  410b0c:	push   esi
  410b0d:	pusha  
  410b0e:	push   cs
  410b0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b10:	sub    bh,al
  410b12:	dec    edx
  410b13:	and    ebp,esp
  410b15:	aaa    
  410b16:	mov    eax,ds:0xc9f55ad5
  410b1b:	ror    esi,cl
  410b1d:	sbb    eax,0x708ad599
  410b22:	or     dl,dh
  410b24:	mov    al,ds:0x3d53e0b
  410b29:	stos   DWORD PTR es:[edi],eax
  410b2a:	xor    DWORD PTR [ecx-0x24f7d0ec],edi
  410b30:	and    DWORD PTR [ecx],ebp
  410b32:	jb     0x410ad1
  410b34:	out    dx,al
  410b35:	enter  0xdacb,0x77
  410b39:	das    
  410b3a:	rcr    BYTE PTR [ecx-0x7de8bb72],0xd6
  410b41:	cmp    ch,ch
  410b43:	hlt    
  410b44:	mov    ds:0x9b3771b5,eax
  410b49:	jecxz  0x410b86
  410b4b:	or     eax,0xa736885c
  410b50:	fbld   TBYTE PTR [edx+ebx*1-0x5102f523]
  410b57:	mov    esp,0xb8762034
  410b5c:	cld    
  410b5d:	push   esi
  410b5e:	xchg   ebp,eax
  410b5f:	cs (bad) 
  410b61:	clc    
  410b62:	mov    dh,0x66
  410b64:	adc    BYTE PTR [esi-0x5617451b],cl
  410b6a:	ret    
  410b6b:	dec    eax
  410b6c:	repnz push ecx
  410b6e:	lahf   
  410b6f:	test   eax,0x6f487a25
  410b74:	ins    BYTE PTR es:[edi],dx
  410b75:	xor    eax,0xb41a6a6
  410b7a:	pusha  
  410b7b:	arpl   WORD PTR [esi+0x79302ecd],si
  410b81:	mov    DWORD PTR [edi+esi*2],ebx
  410b84:	ja     0x410b14
  410b86:	ret    
  410b87:	std    
  410b88:	(bad)  
  410b89:	jbe    0x410b15
  410b8b:	mov    eax,ds:0x7eff7add
  410b90:	aad    0x12
  410b92:	jne    0x410b7e
  410b94:	gs dec ecx
  410b96:	stos   DWORD PTR es:[edi],eax
  410b97:	hlt    
  410b98:	pop    es
  410b99:	dec    edi
  410b9a:	mov    ah,0x40
  410b9c:	pop    eax
  410b9d:	mov    ecx,0xe0007902
  410ba2:	sbb    ebx,DWORD PTR [edx+0xeb81992]
  410ba8:	imul   edi,DWORD PTR [edi-0x6a],0xc70a58c
  410baf:	enter  0x8863,0x44
  410bb3:	rcr    DWORD PTR [edi],cl
  410bb5:	fwait
  410bb6:	mov    al,ds:0xeb983d59
  410bbb:	push   edi
  410bbc:	or     al,0xb2
  410bbe:	and    eax,0xd4a7fb28
  410bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bc4:	dec    ebx
  410bc5:	not    DWORD PTR [ebp+0x2]
  410bc8:	jecxz  0x410b58
  410bca:	cmc    
  410bcb:	sub    esi,ecx
  410bcd:	push   esp
  410bce:	lea    dx,[ecx+edx*8+0x2ec69982]
  410bd6:	stos   BYTE PTR es:[edi],al
  410bd7:	or     DWORD PTR ds:0x558820f0,esi
  410bdd:	pop    es
  410bde:	std    
  410bdf:	in     al,dx
  410be0:	push   edi
  410be1:	push   ebx
  410be2:	rcl    DWORD PTR [eax-0x2a],1
  410be5:	shl    DWORD PTR [esi+eax*4+0x43],1
  410be9:	lahf   
  410bea:	push   cs
  410beb:	add    dh,BYTE PTR [ebp-0x15]
  410bee:	xchg   esi,eax
  410bef:	repz inc edx
  410bf1:	stos   BYTE PTR es:[edi],al
  410bf2:	clc    
  410bf3:	xor    eax,0x3cbcc897
  410bf8:	aaa    
  410bf9:	push   eax
  410bfa:	add    ah,BYTE PTR [ecx-0x61c5cf16]
  410c00:	das    
  410c01:	sbb    cl,al
  410c03:	push   ss
  410c04:	jbe    0x410c64
  410c06:	pop    esp
  410c07:	xor    eax,0xae73e902
  410c0c:	add    al,0x15
  410c0e:	xor    bl,BYTE PTR [edx+0x19]
  410c11:	jns    0x410bbe
  410c13:	dec    edx
  410c14:	pop    ecx
  410c15:	cmp    eax,0x444b072c
  410c1a:	add    ecx,DWORD PTR [ebx+0x1b]
  410c1d:	sub    BYTE PTR [ebp+0x481e86dd],ch
  410c23:	(bad)  
  410c24:	shl    al,cl
  410c26:	data16 int3 
  410c28:	test   DWORD PTR [eax],edi
  410c2a:	cld    
  410c2b:	xchg   esi,eax
  410c2c:	test   WORD PTR ds:[ebp+0x7eacc7fd],bp
  410c34:	mov    ds:0xa9449715,eax
  410c39:	stos   BYTE PTR es:[edi],al
  410c3a:	xchg   ecx,eax
  410c3b:	adc    eax,0x88cccd62
  410c40:	dec    ebx
  410c41:	dec    ebx
  410c42:	mov    edi,0x9a3b9858
  410c47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c48:	mov    edi,0x2ca5188f
  410c4d:	stc    
  410c4e:	cwde   
  410c4f:	adc    al,bl
  410c51:	rcr    DWORD PTR [edi+0x33],cl
  410c54:	adc    DWORD PTR [ebp-0x4e],0xffffffc5
  410c58:	je     0x410c1a
  410c5a:	sbb    esi,DWORD PTR [eax]
  410c5c:	xor    BYTE PTR [esi+0x4cf06c28],dh
  410c62:	pop    ebx
  410c63:	pop    edi
  410c64:	sub    BYTE PTR [ecx+0x4bf62eec],ah
  410c6a:	popf   
  410c6b:	xchg   ebx,eax
  410c6c:	push   0xbc456419
  410c71:	dec    edi
  410c72:	loopne 0x410cdc
  410c74:	add    DWORD PTR [ecx+0x9],ebx
  410c77:	jg     0x410c03
  410c79:	inc    eax
  410c7a:	(bad)  
  410c7b:	ds push 0x7a
  410c7e:	xchg   esi,eax
  410c7f:	lea    ecx,[ebp+0x19]
  410c82:	sahf   
  410c83:	mov    ds,WORD PTR [eax+0x6bca1a9a]
  410c89:	jecxz  0x410c4e
  410c8b:	mov    bh,BYTE PTR ds:0xa9b013b
  410c91:	dec    ebp
  410c92:	cdq    
  410c93:	mov    ss,eax
  410c95:	pop    ebp
  410c96:	ficomp DWORD PTR [edx+ebp*1-0x553f261d]
  410c9d:	dec    esp
  410c9e:	(bad)  
  410c9f:	(bad)  
  410ca0:	sti    
  410ca1:	xchg   ebp,eax
  410ca2:	std    
  410ca3:	jle    0x410d12
  410ca5:	push   0x8b0d6382
  410caa:	sar    bh,cl
  410cac:	jmp    0x67605e11
  410cb1:	mov    ds:0x5c25b2cb,al
  410cb6:	fistp  WORD PTR [ebx]
  410cb8:	cdq    
  410cb9:	repz cli 
  410cbb:	xchg   ebp,eax
  410cbc:	pop    ebp
  410cbd:	xor    eax,0x73be03da
  410cc2:	sub    BYTE PTR [ecx+0xc258cda],cl
  410cc8:	pop    esp
  410cc9:	out    0xd7,eax
  410ccb:	aam    0x7a
  410ccd:	repnz sub eax,0x3c0a3042
  410cd3:	scas   al,BYTE PTR es:[edi]
  410cd4:	aad    0x8f
  410cd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cd7:	push   cs
  410cd8:	mov    dh,0xc2
  410cda:	inc    edx
  410cdb:	popf   
  410cdc:	push   ebx
  410cdd:	add    ch,BYTE PTR [esi+0x26]
  410ce0:	ins    BYTE PTR es:[edi],dx
  410ce1:	jmp    0x65b2:0xbc91f31b
  410ce8:	jecxz  0x410cb7
  410cea:	outs   dx,BYTE PTR ds:[esi]
  410ceb:	add    BYTE PTR ds:0x2f062e16,ah
  410cf1:	ret    
  410cf2:	dec    esp
  410cf3:	mov    al,ds:0x8237c1ba
  410cf8:	adc    cl,BYTE PTR [edi-0x4174ce19]
  410cfe:	(bad)  [edx+0x3adddc22]
  410d04:	and    al,0x42
  410d06:	daa    
  410d07:	outs   dx,DWORD PTR ds:[esi]
  410d08:	out    0xed,al
  410d0a:	pop    DWORD PTR [ecx-0x11132842]
  410d10:	jl     0x410ce4
  410d12:	xor    cl,BYTE PTR [ecx+0x487a531b]
  410d18:	(bad)  
  410d19:	push   ebp
  410d1a:	sub    ah,BYTE PTR [ebp-0x65a592f7]
  410d20:	sub    eax,0x20097387
  410d25:	sub    BYTE PTR [edx-0x631a0fda],dh
  410d2b:	add    al,0x5b
  410d2d:	xor    bl,BYTE PTR [eax+edx*4-0x6a]
  410d31:	test   DWORD PTR [ebp+0x25],edi
  410d34:	cmp    esp,DWORD PTR [ebx+esi*8-0x9]
  410d38:	push   esi
  410d39:	push   edx
  410d3a:	cmp    al,0xd9
  410d3c:	mov    eax,ds:0x5c68c984
  410d41:	xchg   ecx,eax
  410d42:	pop    ecx
  410d43:	cmc    
  410d44:	dec    ebp
  410d45:	test   eax,0xef367b73
  410d4a:	push   es
  410d4b:	xor    esp,DWORD PTR [bp-0x2]
  410d4f:	dec    eax
  410d50:	ror    BYTE PTR ds:0x1bba29b,cl
  410d56:	addr16 (bad) 
  410d58:	dec    ebp
  410d59:	mov    eax,ds:0x5191b367
  410d5e:	add    eax,0x3722ef80
  410d63:	jne    0x410d80
  410d65:	mov    esp,0xa1b60c0c
  410d6a:	dec    esi
  410d6b:	adc    al,dl
  410d6d:	into   
  410d6e:	loopne 0x410d4e
  410d70:	cli    
  410d71:	shl    BYTE PTR [esi+0x4b],0x43
  410d75:	cmp    ebx,DWORD PTR [ebp-0x7d]
  410d78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d79:	fdivrp st(4),st
  410d7b:	xchg   bh,ch
  410d7d:	enter  0xb5ba,0x46
  410d81:	int    0x9e
  410d83:	scas   eax,DWORD PTR es:[edi]
  410d84:	mov    dh,0xb7
  410d86:	loopne 0x410dbf
  410d88:	shl    BYTE PTR [ecx+0x1b72dddf],1
  410d8e:	mov    WORD PTR [ebx],ss
  410d90:	or     al,0x13
  410d92:	xchg   edx,eax
  410d93:	push   esi
  410d94:	call   FWORD PTR [ebp*8+0x52b68eda]
  410d9b:	pop    ebx
  410d9c:	into   
  410d9d:	daa    
  410d9e:	pop    esi
  410d9f:	push   es
  410da0:	fcomip st,st(4)
  410da2:	stos   DWORD PTR es:[edi],eax
  410da3:	(bad)  
  410da4:	mov    al,ah
  410da6:	and    al,BYTE PTR [ecx+0x55]
  410da9:	xor    eax,0x980476a4
  410dae:	test   al,dl
  410db0:	in     eax,dx
  410db1:	test   eax,0x46bac7d6
  410db6:	clc    
  410db7:	out    0xc1,eax
  410db9:	daa    
  410dba:	test   al,0x83
  410dbc:	loopne 0x410db4
  410dbe:	data16 jl 0x410e39
  410dc1:	xchg   ecx,eax
  410dc2:	jno    0x410d87
  410dc4:	or     edi,DWORD PTR [ebx-0x3a5401f1]
  410dca:	rol    DWORD PTR [esi-0x74],cl
  410dcd:	(bad)  
  410dce:	addr16 cdq 
  410dd0:	adc    edx,eax
  410dd2:	mov    ah,0x23
  410dd4:	xchg   DWORD PTR [ebx-0x7c],edi
  410dd7:	in     eax,dx
  410dd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dd9:	xchg   esi,eax
  410dda:	call   0x4b57:0x41f6ffcc
  410de1:	scas   al,BYTE PTR es:[edi]
  410de2:	call   0xf5424f34
  410de7:	in     eax,0x77
  410de9:	add    al,0xd2
  410deb:	or     DWORD PTR [ebx],eax
  410ded:	das    
  410dee:	popf   
  410def:	fisub  WORD PTR [eax]
  410df1:	jno    0x410dd8
  410df3:	inc    ecx
  410df4:	sahf   
  410df5:	jne    0x410e66
  410df7:	or     al,0xea
  410df9:	push   ds
  410dfa:	pop    ss
  410dfb:	(bad)  
  410dfc:	mov    ebx,DWORD PTR [ecx+0x57]
  410dff:	adc    eax,0x13858200
  410e04:	mov    BYTE PTR [esi],cl
  410e06:	icebp  
  410e07:	and    edx,eax
  410e09:	add    DWORD PTR [ecx+0x22],edi
  410e0c:	sub    BYTE PTR [edx+ecx*1+0x52],ah
  410e10:	mov    al,ds:0xa6853a1b
  410e15:	push   edx
  410e16:	push   esi
  410e17:	pop    esp
  410e18:	ror    BYTE PTR [ebx],1
  410e1a:	inc    edx
  410e1b:	lahf   
  410e1c:	scas   eax,DWORD PTR es:[edi]
  410e1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e1e:	hlt    
  410e1f:	or     al,0x88
  410e21:	imul   edi,DWORD PTR [edx+0x41acf97e],0xffffffb6
  410e28:	xchg   ecx,eax
  410e29:	ds adc eax,0xc82cff18
  410e2f:	shl    DWORD PTR [edx],1
  410e31:	fsub   st,st(1)
  410e33:	das    
  410e34:	jge    0x410e92
  410e36:	and    cl,BYTE PTR [ebx-0x48d28957]
  410e3c:	jge    0x410de1
  410e3e:	jae    0x410e69
  410e40:	int3   
  410e41:	push   ss
  410e42:	pop    ss
  410e43:	stos   DWORD PTR es:[edi],eax
  410e44:	pop    edi
  410e45:	mov    bh,0x42
  410e47:	addr16 mov edx,edi
  410e4a:	cmp    eax,0x38c1b73b
  410e4f:	mov    ah,BYTE PTR [esi-0xecb7292]
  410e55:	mov    BYTE PTR [ecx+edi*4+0x5349957e],cl
  410e5c:	sbb    BYTE PTR ds:0xa7f7aaa8,0x7f
  410e63:	jnp    0x410e5c
  410e65:	jmp    0x410e81
  410e67:	mov    ds:0x92096582,al
  410e6c:	test   cl,0x1
  410e6f:	dec    eax
  410e70:	fbld   TBYTE PTR [esi-0x73]
  410e74:	gs call 0x9637:0x8423bf59
  410e7c:	xor    eax,0x4032dd20
  410e81:	popa   
  410e82:	dec    ebx
  410e83:	scas   al,BYTE PTR es:[edi]
  410e84:	lods   eax,DWORD PTR ds:[esi]
  410e85:	hlt    
  410e86:	xor    DWORD PTR [esi],ecx
  410e88:	pop    ebp
  410e89:	mov    eax,ds:0xb66d5bac
  410e8e:	or     bh,BYTE PTR [edx+0x4b637852]
  410e94:	push   esi
  410e95:	sbb    cl,ah
  410e97:	popa   
  410e98:	lock sbb BYTE PTR [edx+0x11],dl
  410e9c:	call   0xd664:0x28fde8c3
  410ea3:	jnp    0x410e4a
  410ea5:	xchg   ebx,eax
  410ea6:	and    esp,ebx
  410ea8:	ins    BYTE PTR es:[edi],dx
  410ea9:	je     0x410e54
  410eab:	xor    esi,DWORD PTR [edi+0x7bf55db4]
  410eb1:	mov    edx,0x6a0a40fd
  410eb6:	add    eax,0xec7b3c43
  410ebb:	popa   
  410ebc:	mov    dh,0x33
  410ebe:	lods   al,BYTE PTR cs:[esi]
  410ec0:	std    
  410ec1:	jp     0x410e8d
  410ec3:	push   cs
  410ec4:	pop    esp
  410ec5:	lods   al,BYTE PTR ds:[esi]
  410ec6:	mov    ebp,0x34a6191b
  410ecb:	outs   dx,BYTE PTR ds:[esi]
  410ecc:	ror    DWORD PTR [edx],cl
  410ece:	sub    al,0x7
  410ed0:	scas   al,BYTE PTR es:[edi]
  410ed1:	ss jae 0x410e7f
  410ed4:	pop    es
  410ed5:	sub    esp,DWORD PTR [eax+0xf]
  410ed8:	icebp  
  410ed9:	ds pop ebp
  410edb:	jb     0x410ecb
  410edd:	jle    0x410ea0
  410edf:	ins    BYTE PTR es:[edi],dx
  410ee0:	cs je  0x410f5c
  410ee3:	mov    cl,0x60
  410ee5:	adc    al,0xc
  410ee7:	mov    ds:0xef94c54c,al
  410eec:	xor    eax,0x8867022b
  410ef1:	scas   eax,DWORD PTR es:[edi]
  410ef2:	or     al,0xbb
  410ef4:	mov    ecx,0xa29b7441
  410ef9:	mov    ds:0xdc45a2a1,eax
  410efe:	es mov ecx,0x76f9b4c0
  410f04:	xchg   DWORD PTR [edx],ebx
  410f06:	cmp    al,0xc8
  410f08:	xor    BYTE PTR [eax-0x25],0xa5
  410f0c:	sbb    ch,0xae
  410f0f:	(bad)  
  410f10:	mov    eax,ds:0x365f0647
  410f15:	pushf  
  410f16:	sbb    al,0x51
  410f18:	and    al,0xed
  410f1a:	leave  
  410f1b:	sub    DWORD PTR [eax-0x14b79413],esp
  410f21:	js     0x410f79
  410f23:	mov    eax,ds:0xe9e53839
  410f28:	inc    eax
  410f29:	cmp    al,0x5d
  410f2b:	loop   0x410fa6
  410f2d:	cmp    cl,BYTE PTR [edx-0x4117c7a1]
  410f33:	in     eax,dx
  410f34:	ins    DWORD PTR es:[edi],dx
  410f35:	adc    ebp,esi
  410f37:	in     eax,0xad
  410f39:	and    al,0x6f
  410f3b:	imul   ecx,DWORD PTR ds:0xecf18bc4,0x894b3d73
  410f45:	xor    eax,0x6d28a877
  410f4a:	call   0x506:0x30812f72
  410f51:	mov    eax,cr0
  410f54:	fwait
  410f55:	cmp    edx,DWORD PTR [edi+0x4f]
  410f58:	(bad)  
  410f5a:	cmp    bl,BYTE PTR [edi+esi*4-0x59]
  410f5e:	in     al,dx
  410f5f:	dec    ecx
  410f60:	inc    esi
  410f61:	test   BYTE PTR [eax+0x8d26a49],dl
  410f67:	mul    BYTE PTR [ebp+0x6faa9129]
  410f6d:	pop    edx
  410f6e:	push   esi
  410f6f:	loopne 0x410f90
  410f71:	and    eax,0xa949431e
  410f76:	jo     0x410fdb
  410f78:	pop    ss
  410f79:	sbb    ch,BYTE PTR [edi+eax*1+0x40]
  410f7d:	xchg   esp,eax
  410f7e:	call   0xd55c:0x746fd534
  410f85:	dec    esi
  410f86:	adc    bl,BYTE PTR [ebp+0x28610d19]
  410f8c:	dec    edi
  410f8d:	imul   eax,DWORD PTR [esi+0x26],0xffffff81
  410f91:	clc    
  410f92:	fucom  st(6)
  410f95:	shr    BYTE PTR [ebx+0x1f],1
  410f98:	pop    es
  410f99:	cmp    al,0x6f
  410f9b:	sub    eax,0x815c4917
  410fa0:	(bad)  
  410fa1:	pop    edi
  410fa2:	addr16 mov edi,0xa5bfb70
  410fa8:	mov    ebx,edx
  410faa:	jl     0x411006
  410fac:	fistp  DWORD PTR [edx]
  410fae:	push   ebx
  410faf:	int3   
  410fb0:	std    
  410fb1:	mov    eax,ds:0x9c2adbef
  410fb6:	js     0x410f3c
  410fb8:	xor    BYTE PTR [edi],0xbd
  410fbb:	mov    ch,0x4f
  410fbd:	in     eax,0xf9
  410fbf:	pusha  
  410fc0:	xchg   BYTE PTR [ebx],cl
  410fc2:	stos   BYTE PTR es:[edi],al
  410fc3:	sub    DWORD PTR [edx+0x78],ebx
  410fc6:	test   al,0xc7
  410fc8:	sub    esp,DWORD PTR [esi]
  410fca:	mov    eax,ds:0x6fed8a86
  410fcf:	push   edi
  410fd0:	lea    esp,[eax+0x101a9cc0]
  410fd6:	mov    dh,dh
  410fd8:	test   al,0xea
  410fda:	scas   al,BYTE PTR es:[edi]
  410fdb:	xchg   ebp,eax
  410fdc:	or     al,0xa3
  410fde:	sbb    BYTE PTR [esi+ebx*1-0x5366e69a],al
  410fe5:	neg    cl
  410fe7:	mov    ds:0x81026952,al
  410fec:	out    dx,eax
  410fed:	cdq    
  410fee:	pop    esp
  410fef:	cmp    eax,0x9755cbe3
  410ff4:	adc    eax,0xce256e71
  410ff9:	and    esp,DWORD PTR [edi]
  410ffb:	les    esi,FWORD PTR [esi+0x2]
  410ffe:	jecxz  0x411011
  411000:	xchg   edx,eax
  411001:	inc    esi
  411002:	aam    0xf4
  411004:	mov    ds:0x43fb0d2c,eax
  411009:	xor    esi,DWORD PTR [ebp+0x2c]
  41100c:	mov    BYTE PTR [ebx],bh
  41100e:	or     ch,BYTE PTR [esi]
  411010:	and    BYTE PTR [ebx-0x28],0xc6
  411014:	jo     0x410f96
  411016:	jbe    0x410fa3
  411018:	add    ebx,ebp
  41101a:	(bad)
  411020:	int    0x0
  411022:	pop    esp
  411023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411024:	add    BYTE PTR [edi+0x45],dh
  411027:	sar    DWORD PTR [edx-0x76],cl
  41102a:	scas   al,BYTE PTR es:[edi]
  41102b:	nop
  41102c:	jne    0x411006
  41102e:	rcl    ebx,1
  411030:	mov    ah,0xb9
  411032:	jp     0x411099
  411034:	shr    dl,1
  411036:	in     al,0xda
  411038:	xchg   ebx,eax
  411039:	nop
  41103a:	out    0x71,eax
  41103c:	push   esi
  41103d:	in     eax,dx
  41103e:	xchg   edx,eax
  41103f:	and    dh,BYTE PTR [edi-0x7f]
  411042:	ss jle 0x411068
  411045:	or     al,0x8f
  411047:	mov    cl,0xba
  411049:	inc    ebp
  41104a:	inc    eax
  41104b:	stc    
  41104c:	mov    ah,0xce
  41104e:	jmp    0xda299408
  411053:	lahf   
  411054:	pop    ds
  411055:	cmp    eax,0x34f66e91
  41105a:	test   DWORD PTR [ecx+edx*4+0x6b],esi
  41105e:	call   0x5899:0x532338b
  411065:	cld    
  411066:	and    DWORD PTR [edi],ebx
  411068:	mov    ah,al
  41106a:	and    al,0xea
  41106c:	lahf   
  41106d:	dec    cl
  41106f:	push   esp
  411070:	mov    al,ds:0xe58e0b5c
  411075:	add    cl,BYTE PTR [edi]
  411077:	pop    edx
  411078:	xchg   BYTE PTR [esp+ebp*8-0xd],cl
  41107c:	dec    edi
  41107d:	stos   DWORD PTR es:[edi],eax
  41107e:	jne    0x41103e
  411080:	fst    DWORD PTR [ecx-0x607b741c]
  411086:	call   0xd633:0xbfa799fb
  41108d:	ret    0xabdb
  411090:	retf   
  411091:	ret    0x531a
  411094:	sbb    al,0x86
  411096:	mov    esi,0x69367b65
  41109b:	shl    DWORD PTR [edx-0x7b948685],0x84
  4110a2:	lock test al,0xc3
  4110a5:	rcr    BYTE PTR [edi+0x8670c],1
  4110ab:	(bad)  
  4110ac:	pop    ss
  4110ad:	dec    ecx
  4110ae:	mov    ds:0xbf26e5c6,eax
  4110b3:	mov    bl,0xcc
  4110b5:	push   es
  4110b6:	xor    al,bl
  4110b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110b9:	aad    0xc7
  4110bb:	(bad)  
  4110bc:	in     al,dx
  4110bd:	je     0x41111b
  4110bf:	rol    DWORD PTR [edx+eiz*4-0x36],cl
  4110c3:	aad    0x3f
  4110c5:	call   0xfbcf:0x8cb8dfef
  4110cc:	popf   
  4110cd:	xchg   bl,al
  4110cf:	(bad)  
  4110d0:	cwde   
  4110d1:	pusha  
  4110d2:	fld    DWORD PTR [ebp+0x4a]
  4110d5:	into   
  4110d6:	lods   al,BYTE PTR ds:[esi]
  4110d7:	sahf   
  4110d8:	test   al,0xda
  4110da:	and    eax,0x28249f9d
  4110df:	adc    esp,DWORD PTR [edi+0x2c]
  4110e2:	cli    
  4110e3:	inc    edx
  4110e4:	imul   esp,DWORD PTR [ebp-0x5c859df3],0xfffffff7
  4110eb:	fwait
  4110ec:	lods   eax,DWORD PTR ds:[esi]
  4110ed:	and    al,0x69
  4110ef:	fwait
  4110f0:	cmc    
  4110f1:	pop    esp
  4110f2:	push   ss
  4110f3:	int    0x52
  4110f5:	push   ds
  4110f6:	fwait
  4110f7:	and    eax,0xf7137b46
  4110fc:	add    DWORD PTR [ebp+0x7f964ab],0xffffffaa
  411103:	test   eax,0xe9541fd
  411108:	push   ecx
  411109:	outs   dx,DWORD PTR ds:[esi]
  41110a:	mov    ds:0xc4fb907f,eax
  411110:	fmul   DWORD PTR [eax+0x447d3ac4]
  411116:	(bad)  
  411117:	les    ebp,FWORD PTR [edi+0x7e8472d7]
  41111d:	mov    esi,0xd924df7d
  411122:	pop    edx
  411123:	pinsrw mm6,WORD PTR es:0x3042c7f,0x7a
  41112c:	dec    esp
  41112d:	sbb    DWORD PTR [ecx-0x563ba481],edx
  411133:	(bad)  
  411134:	and    al,0x26
  411136:	cmp    bh,BYTE PTR [edi+0x46]
  411139:	test   al,0x8b
  41113b:	scas   eax,DWORD PTR es:[edi]
  41113c:	(bad)  
  41113d:	sub    ah,BYTE PTR ds:0xdff96748
  411143:	ins    DWORD PTR es:[edi],dx
  411144:	mov    ch,0x97
  411146:	std    
  411147:	data16 jg 0x4110e6
  41114a:	adc    DWORD PTR [edi+0x6ca1c53],0x300c9260
  411154:	pusha  
  411155:	fmulp  st(4),st
  411157:	inc    edi
  411158:	mov    cl,0x8b
  41115a:	loop   0x411130
  41115c:	push   ebx
  41115d:	inc    esi
  41115e:	xchg   esp,eax
  41115f:	out    0x91,al
  411161:	shl    ebx,cl
  411163:	ja     0x4111b7
  411165:	add    eax,0x755d0f3c
  41116a:	(bad)  
  41116b:	cs jno 0x4111b0
  41116e:	test   ecx,esp
  411170:	sbb    BYTE PTR [eax-0x5e],ah
  411173:	xor    ah,ah
  411175:	cmovae esp,DWORD PTR gs:[ebp-0x4c]
  41117a:	lea    edi,[ebx+esi*8-0x76]
  41117e:	jp     0x4111db
  411180:	ins    DWORD PTR es:[edi],dx
  411181:	inc    edi
  411182:	xor    bl,BYTE PTR [ebx-0x399a4b69]
  411188:	clc    
  411189:	adc    esi,edi
  41118b:	mov    ss,ebx
  41118d:	push   ebp
  41118e:	loop   0x411134
  411190:	data16 clc 
  411192:	inc    edx
  411193:	and    al,0x85
  411195:	add    eax,0x8425abc4
  41119a:	out    dx,al
  41119b:	pop    edi
  41119c:	imul   ebp,DWORD PTR [edx],0x3590364e
  4111a2:	xchg   DWORD PTR [esi+0x11],eax
  4111a5:	rcl    DWORD PTR [edx+esi*8-0xf],0xe8
  4111aa:	mov    cl,0x7b
  4111ac:	xor    ebx,ebp
  4111ae:	ins    DWORD PTR es:[edi],dx
  4111af:	out    dx,al
  4111b0:	(bad)  
  4111b1:	sahf   
  4111b2:	inc    eax
  4111b3:	sub    BYTE PTR [edx],bh
  4111b5:	stc    
  4111b6:	ret    0x36ac
  4111b9:	adc    dl,BYTE PTR [esi-0x10]
  4111bc:	sbb    eax,0x750341c
  4111c1:	ror    DWORD PTR [esi],cl
  4111c3:	int3   
  4111c4:	retf   
  4111c5:	jecxz  0x4111c5
  4111c7:	ins    BYTE PTR es:[edi],dx
  4111c8:	fcom   DWORD PTR [ebx+ecx*4+0x56ce7b81]
  4111cf:	pusha  
  4111d0:	scas   eax,DWORD PTR es:[edi]
  4111d1:	sub    esp,DWORD PTR [ebx+0x5e00125e]
  4111d7:	push   esi
  4111d8:	aad    0x54
  4111da:	mov    bl,0xc5
  4111dc:	sbb    DWORD PTR [edx+0x1a8693fe],0xeff7f0fa
  4111e6:	pop    ds
  4111e7:	(bad)  
  4111e8:	add    eax,0x40c0ad6f
  4111ed:	adc    eax,0x925c5982
  4111f2:	mov    eax,ds:0xdc234520
  4111f7:	pop    ebp
  4111f8:	pop    ebp
  4111f9:	xchg   edx,eax
  4111fa:	gs dec esp
  4111fc:	sahf   
  4111fd:	mov    ebx,0xd1ce0a19
  411202:	add    eax,0x12324c94
  411207:	and    dh,BYTE PTR [ecx+eiz*8]
  41120a:	mov    ebx,0xc79c3b9a
  41120f:	xor    esi,DWORD PTR [ebp-0x5b]
  411212:	int3   
  411213:	test   eax,0xe3e8e4e8
  411218:	out    dx,al
  411219:	mov    ds:0x4e81a056,al
  41121e:	pop    es
  41121f:	and    esp,eax
  411221:	xor    bl,BYTE PTR gs:[eax+edi*4]
  411225:	enter  0xcd37,0x61
  411229:	sub    BYTE PTR [ecx+eax*4],al
  41122c:	jnp    0xfce51360
  411232:	lea    ebx,[ecx-0x19e00b36]
  411238:	fimul  DWORD PTR [edx]
  41123a:	int    0xaa
  41123c:	sti    
  41123d:	dec    esi
  41123e:	bound  esi,QWORD PTR [ecx+0x40]
  411241:	push   0x73
  411243:	add    BYTE PTR ds:0x7ff853d9,dl
  411249:	lock stc 
  41124b:	shl    BYTE PTR [eax-0x2d],1
  41124e:	ret    
  41124f:	cwde   
  411250:	mul    DWORD PTR [esp+eax*8]
  411253:	pop    edx
  411254:	mov    cl,0xf
  411256:	loopne 0x4112cd
  411258:	iret   
  411259:	aam    0x21
  41125b:	xchg   esp,eax
  41125c:	adc    bh,BYTE PTR [edi*8-0x1f9d73ef]
  411263:	mov    DWORD PTR gs:[ebp+esi*4+0x187bbba1],eax
  41126b:	lods   eax,DWORD PTR ds:[esi]
  41126c:	xchg   esi,eax
  41126d:	(bad)  
  41126e:	(bad)  [edx]
  411270:	loop   0x4112e0
  411272:	inc    ebp
  411273:	push   0xffffffc4
  411275:	sbb    edi,ecx
  411277:	mov    ah,0x30
  411279:	and    esp,DWORD PTR [ebx+0x21c72736]
  41127f:	aad    0x1c
  411281:	es (bad) 
  411283:	push   cs
  411284:	mov    ebx,esp
  411286:	fiadd  WORD PTR [ebx]
  411288:	mov    cl,0xc6
  41128a:	and    BYTE PTR [edi+0xf],ah
  41128d:	cdq    
  41128e:	add    eax,0xf042a90a
  411293:	sub    DWORD PTR ds:0x4c9de115,0x35
  41129a:	stos   BYTE PTR es:[edi],al
  41129b:	and    ebp,eax
  41129d:	jl     0x411240
  41129f:	fstp   TBYTE PTR [ecx+0x486a1c68]
  4112a5:	cmp    eax,DWORD PTR [edi+0x4574fcb6]
  4112ab:	mov    bl,0x4b
  4112ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112ae:	fimul  DWORD PTR [ebp-0x4a]
  4112b1:	mov    ds:0x629259e9,eax
  4112b6:	iret   
  4112b7:	inc    esp
  4112b8:	pop    DWORD PTR [edi]
  4112ba:	add    DWORD PTR [ecx],edx
  4112bc:	ss in  eax,dx
  4112be:	ds leave 
  4112c0:	xchg   edi,eax
  4112c1:	call   0x5b14:0x42e1695b
  4112c8:	inc    ebp
  4112c9:	lods   al,BYTE PTR ds:[esi]
  4112ca:	dec    edx
  4112cb:	cli    
  4112cc:	mov    dl,0xc3
  4112ce:	ret    0x9a4b
  4112d1:	push   edi
  4112d2:	adc    eax,0x67b7143d
  4112d7:	dec    ebp
  4112d8:	(bad)  
  4112d9:	loope  0x411297
  4112db:	mov    ebx,0x9ce3732
  4112e0:	dec    edi
  4112e1:	jmp    0x411275
  4112e3:	outs   dx,DWORD PTR ds:[esi]
  4112e4:	push   DWORD PTR [ebx]
  4112e6:	adc    DWORD PTR [ecx-0x55],esi
  4112e9:	loopne 0x4112af
  4112eb:	add    edx,edx
  4112ed:	das    
  4112ee:	inc    ecx
  4112ef:	repz fwait
  4112f1:	dec    esp
  4112f2:	xor    eax,0xba94e97c
  4112f7:	mov    ah,0xcc
  4112f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112fa:	xlat   BYTE PTR ds:[ebx]
  4112fb:	stc    
  4112fc:	inc    edi
  4112fd:	jg     0x4112d9
  4112ff:	dec    ebp
  411300:	or     DWORD PTR [esi+0x341a1949],ebx
  411306:	fist   WORD PTR [ecx-0x7ed24901]
  41130c:	ins    BYTE PTR es:[edi],dx
  41130d:	xchg   esi,eax
  41130e:	sar    ebx,cl
  411310:	mov    BYTE PTR [eax-0x7955dc5f],0x32
  411317:	adc    al,0x18
  411319:	xchg   edi,eax
  41131a:	jns    0x41135a
  41131c:	cmp    cl,BYTE PTR [ebp-0x27]
  41131f:	enter  0xdafb,0x9d
  411323:	xor    dh,dh
  411325:	cmp    al,BYTE PTR [edi-0x669f2113]
  41132b:	mov    al,0x3
  41132d:	sbb    al,dh
  41132f:	mov    cl,0xc7
  411331:	sbb    DWORD PTR [eax-0x1f6f5948],0x3f
  411338:	test   DWORD PTR [ebp+ebp*8+0x3a],0xf440d1bf
  411340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411341:	fbld   TBYTE PTR [edi+0x6c]
  411344:	in     eax,0xa5
  411346:	scas   al,BYTE PTR es:[edi]
  411347:	inc    edi
  411348:	sbb    ah,ch
  41134a:	cld    
  41134b:	xor    dh,cl
  41134d:	dec    edx
  41134e:	xor    esi,DWORD PTR [esi-0x39d5d809]
  411354:	jne    0x41136c
  411356:	shl    ebp,1
  411358:	les    ebp,FWORD PTR [ebp+0x765743de]
  41135e:	popa   
  41135f:	xor    al,0x3
  411361:	mov    cs,WORD PTR [esp+eax*4]
  411364:	ret    0x8ece
  411367:	mov    edx,0x67f73449
  41136c:	(bad)  
  41136d:	(bad)  
  41136e:	jle    0x411302
  411370:	add    BYTE PTR [ebx-0x437ce42a],bl
  411376:	mov    edi,0x506188be
  41137b:	xor    bl,BYTE PTR [edi+edx*8]
  41137e:	cmp    esi,DWORD PTR [ebx]
  411380:	dec    ebx
  411381:	mov    cl,0x8a
  411383:	cwde   
  411384:	add    al,0xa8
  411386:	shl    esp,cl
  411388:	fld    st(4)
  41138a:	jmp    0x1773:0xa89d89db
  411391:	(bad)  
  411392:	mov    ch,0x88
  411394:	push   ebx
  411395:	shr    DWORD PTR [ebx],0x10
  411398:	or     al,0x5b
  41139a:	sahf   
  41139b:	sub    ah,BYTE PTR [ebp+0x4d]
  41139e:	mov    bl,0x45
  4113a0:	addr16 cmp al,0x23
  4113a3:	dec    edx
  4113a4:	pop    edi
  4113a5:	jmp    0xd698:0x4f54a2c3
  4113ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113ad:	xor    eax,0x4c4137b8
  4113b2:	mov    cl,0xc8
  4113b4:	cs adc dl,ch
  4113b7:	xchg   esp,eax
  4113b8:	enter  0xd806,0x95
  4113bc:	or     BYTE PTR [eax-0x24],bh
  4113bf:	retf   0x575e
  4113c2:	out    dx,eax
  4113c3:	sti    
  4113c4:	pop    edx
  4113c5:	repnz inc esp
  4113c7:	ins    DWORD PTR es:[edi],dx
  4113c8:	mov    dl,0xe0
  4113ca:	sti    
  4113cb:	mov    bl,dl
  4113cd:	gs xchg edx,eax
  4113cf:	mov    esp,0x1d68bcaa
  4113d4:	cmp    esi,DWORD PTR [ecx+ecx*4+0x42]
  4113d8:	lods   eax,DWORD PTR ds:[esi]
  4113d9:	cmp    cl,BYTE PTR [edi-0x6d]
  4113dc:	inc    ebp
  4113dd:	jmp    0x4113ae
  4113df:	xchg   ebx,eax
  4113e0:	and    bh,BYTE PTR [ebp+0x703a3ab7]
  4113e6:	xchg   ebp,eax
  4113e7:	hlt    
  4113e8:	pop    ds
  4113e9:	sub    edx,edi
  4113eb:	pushf  
  4113ec:	push   ds
  4113ed:	push   ds
  4113ee:	aas    
  4113ef:	push   ebp
  4113f0:	lock int 0x99
  4113f3:	mov    edx,0xcf0240b9
  4113f8:	cmp    dl,cl
  4113fa:	mov    cs,WORD PTR [edi]
  4113fc:	test   DWORD PTR [ebp-0xd],ebx
  4113ff:	sub    ebp,DWORD PTR [edx+0x6a723f14]
  411405:	pop    ebp
  411406:	data16 cs shl al,0x46
  41140b:	shl    DWORD PTR [eax+edi*1],cl
  41140e:	adc    DWORD PTR [esi],eax
  411410:	mov    es,edi
  411412:	int3   
  411413:	(bad)  
  411414:	dec    eax
  411415:	inc    eax
  411416:	jecxz  0x411417
  411418:	cs dec eax
  41141a:	inc    esi
  41141b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41141c:	xor    DWORD PTR [eax-0x7c],ebx
  41141f:	mov    DWORD PTR [ebx+0x1c9aa937],esi
  411425:	fldcw  WORD PTR [eax]
  411427:	cmp    DWORD PTR [ecx-0xa],edi
  41142a:	lds    esp,FWORD PTR [ebx+0x1aa8881d]
  411430:	or     ebp,esi
  411432:	fimul  DWORD PTR [edi-0x40]
  411435:	mov    dl,0xac
  411437:	jae    0x4114b7
  411439:	adc    ch,BYTE PTR [ebx-0x78db10cd]
  41143f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411440:	inc    edi
  411441:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411442:	shr    BYTE PTR [edx],0x44
  411445:	out    dx,eax
  411446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411447:	repnz dec edi
  411449:	test   DWORD PTR [eax],esp
  41144b:	mov    edi,?
  41144d:	push   es
  41144e:	test   BYTE PTR [ecx],bh
  411450:	popf   
  411451:	ret    
  411452:	loopne 0x411428
  411454:	(bad)  
  411455:	mov    es,WORD PTR [ecx+0x71]
  411458:	and    ecx,DWORD PTR [edi-0x626c11f1]
  41145e:	data16 es arpl dx,si
  411462:	scas   al,BYTE PTR es:[edi]
  411463:	add    ebp,DWORD PTR [ecx+0x49]
  411466:	(bad)  
  411467:	stos   DWORD PTR es:[edi],eax
  411468:	(bad)  
  411469:	pop    ds
  41146a:	pop    es
  41146b:	push   edx
  41146c:	mov    ds:0xa0420aa5,al
  411471:	sbb    BYTE PTR [eax-0x128340a4],ch
  411477:	aas    
  411478:	add    BYTE PTR [eax],ch
  41147a:	pop    es
  41147b:	sbb    esi,DWORD PTR [esi]
  41147d:	shl    DWORD PTR [ebp+0x74db1863],0xcc
  411484:	call   0xa479:0xeeedab19
  41148b:	push   esi
  41148c:	mov    esp,0x4da9eef7
  411491:	jb     0x411480
  411493:	pop    ebp
  411494:	in     eax,dx
  411495:	shl    DWORD PTR [ecx],1
  411497:	jmp    0x3f3970cb
  41149c:	mov    al,ds:0xca5d1ab7
  4114a1:	jge    0x4114ef
  4114a3:	(bad)  
  4114a4:	sbb    BYTE PTR [esi+0x90607c4],cl
  4114aa:	cmp    cl,ah
  4114ac:	inc    edx
  4114ad:	jg     0x4114da
  4114af:	int    0x6e
  4114b1:	push   esp
  4114b2:	xchg   edi,eax
  4114b3:	jg     0x4114be
  4114b5:	scas   al,BYTE PTR es:[edi]
  4114b6:	imul   esp,DWORD PTR [esi+0x7c5a2399],0x59
  4114bd:	inc    ecx
  4114be:	xlat   BYTE PTR ds:[ebx]
  4114bf:	fdiv   DWORD PTR [ebx]
  4114c1:	shl    DWORD PTR [esi],1
  4114c3:	sahf   
  4114c4:	iret   
  4114c5:	or     ch,BYTE PTR [ebx]
  4114c7:	into   
  4114c8:	cmp    al,0x18
  4114ca:	dec    eax
  4114cb:	in     al,0x9a
  4114cd:	test   eax,0xc385381e
  4114d2:	push   es
  4114d3:	jge    0x41150a
  4114d5:	xchg   esp,eax
  4114d6:	mov    cl,0xd9
  4114d8:	push   edi
  4114d9:	je     0x4114c2
  4114db:	popf   
  4114dc:	sub    al,0xf6
  4114de:	lock ja 0x4114d9
  4114e1:	sub    BYTE PTR [ebx+0x5f],bh
  4114e4:	jnp    0x4114ce
  4114e6:	jecxz  0x411493
  4114e8:	add    BYTE PTR [eax],ah
  4114ea:	inc    edi
  4114eb:	dec    ebx
  4114ec:	leave  
  4114ed:	add    dl,al
  4114ef:	fsub   DWORD PTR [bx+0x3d]
  4114f3:	ror    bh,0x40
  4114f6:	dec    edx
  4114f7:	mov    bl,0xb1
  4114f9:	sbb    al,0xe1
  4114fb:	addr16 push edi
  4114fd:	ffree  st(2)
  4114ff:	inc    ecx
  411500:	mov    bh,0x71
  411502:	sub    DWORD PTR [edx+0x1a],edx
  411505:	push   ebx
  411506:	imul   ebx
  411508:	jp     0x4114a9
  41150a:	push   ds
  41150b:	test   BYTE PTR [ecx],ch
  41150d:	test   BYTE PTR [edi],cl
  41150f:	inc    esp
  411510:	jne    0x4114ad
  411512:	dec    edx
  411513:	stos   DWORD PTR es:[edi],eax
  411514:	sbb    DWORD PTR [esi],esp
  411516:	es (bad) 
  411519:	pop    ebp
  41151a:	push   edx
  41151b:	adc    ch,BYTE PTR [esi-0x2c]
  41151e:	outs   dx,BYTE PTR ds:[esi]
  41151f:	xor    al,0x45
  411521:	cmp    al,0x4d
  411523:	fwait
  411524:	pop    ds
  411525:	cmc    
  411526:	xchg   edi,eax
  411527:	jge    0x4114d0
  411529:	pop    ds
  41152a:	cmp    ah,BYTE PTR [ebp+0x16a28f44]
  411530:	imul   esp,DWORD PTR [edx],0x50
  411533:	test   DWORD PTR [ebp-0x59],esi
  411536:	jae    0x41157e
  411538:	xchg   si,ax
  41153a:	(bad)  ds:0xc6a1915b
  411540:	test   al,0x31
  411542:	dec    eax
  411543:	aam    0x20
  411545:	xchg   esp,eax
  411546:	enter  0x3290,0x7c
  41154a:	jle    0x411521
  41154c:	das    
  41154d:	int    0xf9
  41154f:	ret    0x340a
  411552:	sub    eax,0xca91574f
  411557:	xor    BYTE PTR [ecx+0x7e67198b],ch
  41155d:	fwait
  41155e:	daa    
  41155f:	xchg   edx,eax
  411560:	mov    eax,ds:0x6d856108
  411565:	or     ah,BYTE PTR [ecx+0x6504bfe2]
  41156b:	jne    0x411568
  41156d:	sbb    al,0xb
  41156f:	test   DWORD PTR [ecx+0x86d594a],0x35379055
  411579:	sub    al,0x73
  41157b:	inc    edx
  41157c:	or     eax,0xa13d3a4d
  411581:	adc    BYTE PTR [edx],al
  411583:	push   edi
  411584:	sbb    DWORD PTR [ecx-0x56676604],ebp
  41158a:	xchg   esi,esi
  41158c:	xor    edx,ebp
  41158e:	or     cl,al
  411590:	fwait
  411591:	loopne 0x411550
  411593:	sub    al,0x79
  411595:	cmp    al,0xf7
  411597:	mov    ebp,0xc53203ad
  41159c:	add    BYTE PTR ds:0x742cf52f,ah
  4115a2:	and    BYTE PTR [ebx],dh
  4115a4:	mov    ch,0x19
  4115a6:	cmp    BYTE PTR ds:0x312b27de,bh
  4115ac:	sbb    eax,DWORD PTR [ecx+0x3ac1f0c4]
  4115b2:	fwait
  4115b3:	jns    0x41153d
  4115b5:	retf   0xbb11
  4115b8:	ja     0x41160f
  4115ba:	mov    ds:0x4a233b8d,al
  4115bf:	scas   eax,DWORD PTR es:[edi]
  4115c0:	(bad)  
  4115c1:	retf   
  4115c2:	iret   
  4115c3:	xchg   BYTE PTR [ecx+0x1],al
  4115c6:	cmp    eax,0x7e7da24b
  4115cb:	inc    esi
  4115cc:	sub    DWORD PTR [esi+0x412f4ba4],esp
  4115d2:	nop
  4115d3:	inc    BYTE PTR [eax]
  4115d5:	test   BYTE PTR [edi],0x69
  4115d8:	ret    0x890d
  4115db:	sub    edx,DWORD PTR [eax+edi*8]
  4115de:	call   0xd5a2fbcf
  4115e3:	es ret 
  4115e5:	cmc    
  4115e6:	rcr    BYTE PTR [eax+0x52528c64],cl
  4115ec:	ja     0x411608
  4115ee:	js     0x41165d
  4115f0:	jo     0x4115d9
  4115f2:	fnstsw ax
  4115f4:	call   0x436c8c74
  4115f9:	inc    esp
  4115fa:	les    edx,FWORD PTR [edi-0x38]
  4115fd:	cwde   
  4115fe:	mov    cl,0xda
  411600:	mov    dh,BYTE PTR ds:0xe00125fc
  411606:	mov    ebx,0x9b019d37
  41160b:	and    al,0xd5
  41160d:	jp     0x411591
  41160f:	dec    ebx
  411610:	jl     0x411652
  411612:	add    BYTE PTR [eax+ebx*4-0x3a],bh
  411616:	mov    dl,0xcf
  411618:	mov    eax,0x99caebe4
  41161d:	cwde   
  41161e:	inc    eax
  41161f:	inc    esi
  411620:	fcom   QWORD PTR [eax+ecx*8]
  411623:	mov    DWORD PTR [ecx],ebx
  411625:	fldcw  WORD PTR [eax+esi*4+0x2219afab]
  41162c:	push   edx
  41162d:	shl    BYTE PTR [eax-0x7ad7876a],0x3f
  411634:	jp     0x411604
  411636:	jno    0x411663
  411638:	pushf  
  411639:	stos   BYTE PTR es:[edi],al
  41163a:	loope  0x411693
  41163c:	sahf   
  41163d:	cmp    ah,BYTE PTR [edi]
  41163f:	dec    ecx
  411640:	jg     0x411633
  411642:	inc    ebp
  411643:	sub    DWORD PTR [ebx-0x72],esi
  411646:	mov    al,ds:0x89b6f5aa
  41164b:	pop    esi
  41164c:	or     DWORD PTR [ebp+0x26],edx
  41164f:	add    bh,BYTE PTR [esi+0x75b1bfc4]
  411655:	test   ecx,eax
  411657:	jle    0x41161b
  411659:	push   cs
  41165a:	mov    eax,ds:0x303ba133
  41165f:	test   eax,0x4799b089
  411664:	repz and DWORD PTR [ebp+0x37],eax
  411668:	out    dx,al
  411669:	scas   eax,DWORD PTR es:[edi]
  41166a:	jge    0x41166a
  41166c:	pushf  
  41166d:	out    0x3d,al
  41166f:	aas    
  411670:	jge    0x411699
  411672:	mov    ds:0xaf7bbeeb,al
  411677:	or     ebx,esp
  411679:	popa   
  41167a:	fdiv   st(0),st
  41167c:	data16 sub BYTE PTR [ecx+ebp*4+0x2d],al
  411681:	sti    
  411682:	cwde   
  411683:	sub    al,0xee
  411685:	stos   BYTE PTR es:[edi],al
  411686:	fcom   QWORD PTR [edi+0x63]
  411689:	dec    ebx
  41168a:	push   esi
  41168b:	inc    ebx
  41168c:	push   edx
  41168d:	repnz mov ds:0xe16ca13,al
  411693:	inc    esp
  411694:	loopne 0x411662
  411696:	dec    eax
  411697:	rcr    DWORD PTR [edx+0x28324f2c],cl
  41169d:	adc    ch,BYTE PTR [ebx+0x520cafa9]
  4116a3:	in     eax,dx
  4116a4:	add    DWORD PTR [edi],edi
  4116a6:	sub    DWORD PTR [ebx],0xffffffa0
  4116a9:	loopne 0x41165b
  4116ab:	xchg   esi,eax
  4116ac:	(bad)  
  4116ad:	xor    ebx,esi
  4116af:	inc    eax
  4116b0:	mov    ch,0xd4
  4116b2:	sub    DWORD PTR cs:[ebp+ebx*8+0x4e],0x7e
  4116b8:	jb     0x411698
  4116ba:	mov    eax,0xadaabe78
  4116bf:	ret    0xbea0
  4116c2:	daa    
  4116c3:	xor    esi,DWORD PTR [ebx+0x17]
  4116c6:	xchg   DWORD PTR [edx-0x45ce57b9],edi
  4116cc:	and    ecx,DWORD PTR [ebp-0x3e]
  4116cf:	(bad)  
  4116d0:	hlt    
  4116d1:	(bad)
  4116d4:	pop    ss
  4116d5:	leave  
  4116d6:	cmp    BYTE PTR [esi-0x20],dl
  4116d9:	dec    edx
  4116da:	xchg   ebp,eax
  4116db:	mov    WORD PTR [ebp-0x6ad2bd93],ss
  4116e1:	loop   0x4116c2
  4116e3:	cmp    DWORD PTR [ebx+0x7e],0xffffffba
  4116e7:	cs jns 0x411717
  4116ea:	sub    al,0x9
  4116ec:	cs fdivp st(6),st
  4116ef:	xor    ecx,DWORD PTR [ecx+0x539d853a]
  4116f5:	fisub  DWORD PTR [ecx]
  4116f7:	cmc    
  4116f8:	leave  
  4116f9:	inc    eax
  4116fa:	js     0x41169a
  4116fc:	and    DWORD PTR [edx],ecx
  4116fe:	sbb    bl,bl
  411700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411701:	(bad)  
  411702:	push   0xffffffd6
  411704:	stos   BYTE PTR es:[edi],al
  411705:	loope  0x4116ed
  411707:	and    al,BYTE PTR [edi+0x73]
  41170a:	mov    ch,BYTE PTR [ebx]
  41170c:	into   
  41170d:	in     al,0x64
  41170f:	lds    ebp,FWORD PTR [ebx+0x5349769c]
  411715:	or     esi,0xc7d972e0
  41171b:	sbb    al,0x5e
  41171d:	dec    esi
  41171e:	xlat   BYTE PTR ds:[ebx]
  41171f:	inc    ecx
  411720:	adc    ah,BYTE PTR [edx-0x7808bfc4]
  411726:	adc    ecx,ebx
  411728:	xor    DWORD PTR [ebp-0x436e5442],ebp
  41172e:	out    dx,al
  41172f:	mov    BYTE PTR ds:0x3933a11d,bl
  411735:	aad    0x3e
  411737:	xchg   edx,eax
  411738:	loope  0x41170d
  41173a:	mov    ch,0x23
  41173c:	enter  0xba6b,0xf0
  411740:	test   DWORD PTR [eax+0x38cc9ef3],0xa786b5d2
  41174a:	mov    eax,0xd0b9e264
  41174f:	imul   edx,esi,0xffffffb0
  411752:	mov    eax,0x97dbdf95
  411757:	jp     0x41170b
  411759:	xor    BYTE PTR [edi+0x2d],bh
  41175c:	push   ecx
  41175d:	(bad)  
  41175f:	test   esp,esi
  411761:	outs   dx,DWORD PTR ds:[esi]
  411762:	cli    
  411763:	and    al,0x29
  411765:	mov    WORD PTR [ecx+0x31bdcf5],cs
  41176b:	inc    edx
  41176c:	xchg   edi,eax
  41176d:	xchg   esi,ebx
  41176f:	mov    bh,0xa
  411771:	mov    WORD PTR [eax+0x75bc5f99],fs
  411777:	jp     0x4117f4
  411779:	cdq    
  41177a:	sysenter 
  41177c:	jmp    0xbd3e:0x53461d8e
  411783:	mov    ebx,0xd7118f74
  411788:	int    0xc2
  41178a:	mov    dl,BYTE PTR [esi+0x45]
  41178d:	xchg   edx,eax
  41178e:	pop    edi
  41178f:	scas   al,BYTE PTR es:[edi]
  411790:	xor    dh,dh
  411792:	xor    ah,BYTE PTR [ecx+0xa72d60a]
  411798:	or     BYTE PTR [esi],bh
  41179a:	jecxz  0x411744
  41179c:	dec    edi
  41179d:	sub    eax,DWORD PTR [eax+0x76da93ae]
  4117a3:	sti    
  4117a4:	test   al,0x2a
  4117a6:	jnp    0x41172d
  4117a8:	add    ecx,edi
  4117aa:	inc    edi
  4117ab:	mov    dh,0x44
  4117ad:	pop    ebx
  4117ae:	cmp    edx,eax
  4117b0:	inc    esp
  4117b1:	sbb    DWORD PTR [esi+edx*2+0x6224f832],edx
  4117b8:	fs pop ds
  4117ba:	push   0x18f9994a
  4117bf:	js     0x4117d8
  4117c1:	push   ds
  4117c2:	jmp    0x3952:0x6c7e8205
  4117c9:	dec    eax
  4117ca:	stos   DWORD PTR es:[edi],eax
  4117cb:	xchg   al,ch
  4117cd:	pop    es
  4117ce:	(bad)  
  4117d2:	cmc    
  4117d3:	rcr    ecx,1
  4117d5:	mov    cl,0x4a
  4117d7:	js     0x411801
  4117d9:	sbb    ch,bl
  4117db:	xor    eax,0xe8f912a3
  4117e0:	mov    eax,ds:0x7a8c974a
  4117e5:	or     al,0xa4
  4117e7:	dec    esp
  4117e8:	neg    DWORD PTR [ecx]
  4117ea:	xchg   edi,eax
  4117eb:	(bad)  
  4117ec:	in     eax,dx
  4117ed:	sbb    eax,0xfcbb4d10
  4117f2:	push   ds
  4117f3:	pop    ecx
  4117f4:	scas   al,BYTE PTR es:[edi]
  4117f5:	out    dx,eax
  4117f6:	mov    ecx,edx
  4117f8:	jmp    0x227a2cd3
  4117fd:	aas    
  4117fe:	stos   DWORD PTR es:[edi],eax
  4117ff:	adc    al,0x11
  411801:	inc    eax
  411802:	push   ecx
  411803:	adc    bh,BYTE PTR [edx]
  411805:	sbb    eax,0x9483b112
  41180a:	mov    edx,0xcac6aa6
  41180f:	dec    edx
  411810:	push   esp
  411811:	lds    ecx,FWORD PTR [ebx-0x3e53975e]
  411817:	or     esi,eax
  411819:	cwde   
  41181a:	sub    DWORD PTR [ebx+0x1eb5489c],esi
  411820:	and    cl,BYTE PTR [ecx-0x2244a420]
  411826:	loope  0x4117af
  411828:	xor    al,0xd5
  41182a:	push   ss
  41182b:	hlt    
  41182c:	add    bl,BYTE PTR [ebx-0x425aed89]
  411832:	test   DWORD PTR [edi+0x4a],ebp
  411835:	mov    esp,0x7baf024d
  41183a:	mov    WORD PTR [eax],fs
  41183c:	imul   edx,DWORD PTR [ebx],0xfd3e401d
  411842:	in     al,0xea
  411844:	pushf  
  411845:	cld    
  411846:	fdivr  QWORD PTR [eax+0x1c5175d4]
  41184c:	dec    ecx
  41184d:	ja     0x411818
  41184f:	aaa    
  411850:	dec    edi
  411851:	jmp    0x41187b
  411853:	gs popf 
  411855:	mov    al,0x22
  411857:	push   ebp
  411858:	sub    DWORD PTR [edx+0x19de74a3],eax
  41185e:	cli    
  41185f:	ins    DWORD PTR es:[edi],dx
  411860:	inc    ecx
  411861:	sti    
  411862:	xchg   ecx,eax
  411863:	leave  
  411864:	jle    0x411826
  411866:	jbe    0x41183a
  411868:	arpl   bx,sp
  41186a:	mov    DWORD PTR fs:[esp+ebx*4],edx
  41186e:	push   ebp
  41186f:	add    eax,DWORD PTR [eax+0x6b]
  411872:	enter  0x4a1f,0x3e
  411876:	dec    edi
  411877:	xlat   BYTE PTR ds:[ebx]
  411878:	push   edi
  411879:	or     dl,ah
  41187b:	cmp    bh,BYTE PTR [ecx-0xe]
  41187e:	mov    ch,0x16
  411880:	sbb    BYTE PTR [edi],bl
  411882:	mov    al,0x94
  411884:	jle    0x4118e3
  411886:	jb     0x411868
  411888:	loopne 0x4118b8
  41188a:	ret    
  41188b:	sub    DWORD PTR [ecx+0xf],ecx
  41188e:	mov    esp,DWORD PTR [esp+esi*1+0xb]
  411892:	push   es
  411893:	dec    esp
  411894:	mov    bl,0x47
  411896:	sub    ah,BYTE PTR [edi+eiz*8+0x47]
  41189a:	ret    
  41189b:	stos   BYTE PTR es:[edi],al
  41189c:	mov    eax,ebx
  41189e:	les    ecx,FWORD PTR [ebp+ebx*8-0x28]
  4118a2:	mov    al,ds:0x4ab4c352
  4118a7:	rcr    ch,1
  4118a9:	mov    ch,0x56
  4118ab:	jge    0x411869
  4118ad:	add    dl,cl
  4118af:	mov    eax,ds:0x7f34ca89
  4118b4:	lahf   
  4118b5:	adc    eax,0x45b4dbab
  4118ba:	xchg   ebp,eax
  4118bb:	sbb    eax,0x7323c684
  4118c0:	rdrand esi
  4118c3:	xor    eax,0xdf81c439
  4118c8:	jmp    0x411887
  4118ca:	mov    ch,0xca
  4118cc:	das    
  4118cd:	ins    BYTE PTR es:[edi],dx
  4118ce:	and    al,0x60
  4118d0:	mov    bl,0x29
  4118d2:	sbb    DWORD PTR [ebp-0x40],ecx
  4118d5:	int    0xfd
  4118d7:	and    al,0x2f
  4118d9:	stc    
  4118da:	shl    eax,1
  4118dc:	xor    BYTE PTR cs:[edx],dl
  4118df:	add    esi,DWORD PTR [edi-0x2f]
  4118e2:	xchg   edi,eax
  4118e3:	add    eax,0x875c8975
  4118e8:	push   cs
  4118e9:	test   DWORD PTR [esi+0x7a3d37d2],0x75bbeb87
  4118f3:	adc    DWORD PTR [eax+0x4],0xffffffdf
  4118f7:	pop    esi
  4118f8:	call   0x54653c67
  4118fd:	inc    eax
  4118fe:	pop    edx
  4118ff:	adc    DWORD PTR [ebp+0x13939082],ebp
  411905:	or     bl,bl
  411907:	dec    esp
  411908:	rcr    BYTE PTR [ecx-0x3c],1
  41190b:	inc    edx
  41190c:	rol    BYTE PTR [edi+eiz*1],1
  41190f:	ja     0x4118eb
  411911:	inc    esp
  411912:	adc    edi,DWORD PTR [eax+0x16]
  411915:	enter  0x4a32,0xa7
  411919:	inc    ebp
  41191a:	mov    BYTE PTR [ecx+0x2fd6c1e4],ch
  411920:	adc    ah,BYTE PTR [ebp-0x6700dbba]
  411926:	imul   ebx,DWORD PTR [ebx+0x6],0x6
  41192a:	adc    BYTE PTR [edx+0x5e7a24c8],bh
  411930:	pop    eax
  411931:	jg     0x411994
  411933:	frstor [eax-0x30]
  411936:	and    DWORD PTR [ebx+edi*1+0x1f],eax
  41193a:	bound  edx,QWORD PTR [ecx+edx*1-0x31]
  41193e:	adc    esi,DWORD PTR [esi-0x35]
  411941:	push   esi
  411942:	inc    edi
  411943:	mov    al,ds:0xe9cee2ec
  411948:	xor    ah,BYTE PTR [edi+0x769814bc]
  41194e:	pop    edi
  41194f:	(bad)  
  411950:	fadd   DWORD PTR [edx+0x63]
  411953:	jg     0x411900
  411955:	fmul   DWORD PTR [edi-0x6f]
  411958:	popa   
  411959:	popf   
  41195a:	push   edi
  41195b:	shr    ebx,cl
  41195d:	adc    BYTE PTR [edx-0x2d],bl
  411960:	jg     0x41192f
  411962:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411963:	nop
  411964:	cmp    ch,BYTE PTR ds:[esi-0x21]
  411968:	ins    DWORD PTR es:[edi],dx
  411969:	mov    bh,0xf5
  41196b:	mov    esi,0x1de300d3
  411970:	dec    esi
  411971:	outs   dx,DWORD PTR ds:[esi]
  411972:	sar    DWORD PTR [eax-0x26623aa],1
  411978:	test   BYTE PTR [ebx-0x3301061d],cl
  41197e:	pop    esp
  41197f:	mul    BYTE PTR [edi+ecx*4-0x16deb425]
  411986:	xor    DWORD PTR [ecx+0x4333439b],esi
  41198c:	stc    
  41198d:	push   cs
  41198e:	xchg   BYTE PTR [ecx+0x7a3685d9],bl
  411994:	sbb    ecx,DWORD PTR [edx]
  411996:	or     eax,0x8c80bf4c
  41199b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41199c:	clc    
  41199d:	adc    edi,esi
  41199f:	sahf   
  4119a0:	js     0x41198f
  4119a2:	in     al,0x5d
  4119a4:	xor    ch,BYTE PTR [esi-0xa341aa1]
  4119aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119ab:	imul   ecx,DWORD PTR [ebx-0x2c],0xfffffff2
  4119af:	and    edi,DWORD PTR [eax]
  4119b1:	test   eax,0xb3fa97af
  4119b6:	dec    edi
  4119b7:	rcr    ecx,1
  4119b9:	cld    
  4119ba:	mov    ebx,DWORD PTR [edi]
  4119bc:	scas   eax,DWORD PTR es:[edi]
  4119bd:	cld    
  4119be:	and    eax,DWORD PTR [ebx-0x73]
  4119c1:	mov    eax,0xed1aa598
  4119c6:	mov    dl,0x91
  4119c8:	xor    al,BYTE PTR [esi]
  4119ca:	cmp    eax,0x606c3d89
  4119cf:	xchg   edi,eax
  4119d0:	pop    esp
  4119d1:	cdq    
  4119d2:	shl    DWORD PTR [esi+0x291b86d1],0x25
  4119d9:	adc    al,bh
  4119db:	add    DWORD PTR [esi-0x36],edx
  4119de:	popf   
  4119df:	seto   BYTE PTR [esi-0x5fef230d]
  4119e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119e7:	and    BYTE PTR [edi],ch
  4119e9:	and    eax,0x29636ccb
  4119ee:	call   0x5613:0xa1a65a65
  4119f5:	mov    al,0xd6
  4119f7:	and    BYTE PTR [ecx+edi*1+0x75],ah
  4119fb:	sbb    bl,0xe7
  4119fe:	push   cs
  4119ff:	ficom  DWORD PTR [ebp-0x50]
  411a02:	xchg   ecx,eax
  411a03:	xchg   ecx,eax
  411a04:	mov    dh,BYTE PTR [esi+0x30]
  411a07:	mov    al,ds:0x8558b9e
  411a0c:	mov    ebx,DWORD PTR [ebp-0x58]
  411a0f:	add    edx,0x5708f8
  411a15:	imul   edx,ebx
  411a18:	mov    DWORD PTR [ebp-0x58],edx
  411a1b:	mov    edx,DWORD PTR [ebp+0x8]
  411a1e:	mov    ebx,DWORD PTR [ebp-0x54]
  411a21:	add    edx,0x64f8da
  411a27:	or     edx,ebx
  411a29:	mov    DWORD PTR [ebp-0x54],edx
  411a2c:	mov    edx,DWORD PTR [ebp+0x8]
  411a2f:	mov    ebx,DWORD PTR [ebp-0x50]
  411a32:	add    edx,ecx
  411a34:	xor    edx,ebx
  411a36:	mov    DWORD PTR [ebp-0x50],edx
  411a39:	mov    edx,DWORD PTR [ebp+0x8]
  411a3c:	mov    ebx,DWORD PTR [ebp-0x4c]
  411a3f:	add    edx,edi
  411a41:	and    edx,ebx
  411a43:	mov    DWORD PTR [ebp-0x4c],edx
  411a46:	mov    edx,DWORD PTR [ebp+0x8]
  411a49:	mov    ebx,DWORD PTR [ebp-0x48]
  411a4c:	lea    edx,[ebx+edx*1+0x241fc1f]
  411a53:	mov    DWORD PTR [ebp-0x48],edx
  411a56:	mov    edx,DWORD PTR [ebp+0x8]
  411a59:	mov    ebx,0xfa5e15e2
  411a5e:	sub    ebx,edx
  411a60:	add    ebx,DWORD PTR [ebp-0x44]
  411a63:	mov    DWORD PTR [ebp-0x44],ebx
  411a66:	mov    edx,DWORD PTR [ebp+0x8]
  411a69:	xor    edx,eax
  411a6b:	add    edx,esi
  411a6d:	jne    0x40f670
  411a73:	mov    edx,DWORD PTR [ebp-0xc]
  411a76:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  411a7d:	mov    bl,BYTE PTR [ebp-0x1]
  411a80:	cmp    dl,bl
  411a82:	je     0x413ee6
  411a88:	mov    ecx,DWORD PTR [ebp-0x5c]
  411a8b:	mov    edx,DWORD PTR [ebp-0xc]
  411a8e:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  411a95:	mov    ebx,DWORD PTR [ebp+0xc]
  411a98:	xor    ecx,eax
  411a9a:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272e0]
  411aa1:	jne    0x418726
  411aa7:	mov    ecx,DWORD PTR [ebp-0x5c]
  411aaa:	mov    edx,DWORD PTR [ebp+0xc]
  411aad:	xor    ecx,eax
  411aaf:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272e0]
  411ab7:	mov    edx,DWORD PTR [ebp-0x18]
  411aba:	xor    edx,eax
  411abc:	add    edx,esi
  411abe:	cmp    ecx,edx
  411ac0:	mov    ecx,DWORD PTR [ebp-0x14]
  411ac3:	mov    DWORD PTR [ebp+0x8],ecx
  411ac6:	mov    ecx,DWORD PTR [ebp+0x8]
  411ac9:	je     0x41abb4
  411acf:	xor    ecx,eax
  411ad1:	add    ecx,esi
  411ad3:	mov    ecx,0x242ebed
  411ad8:	je     0x4162f4
  411ade:	mov    edx,DWORD PTR [ebp+0x8]
  411ae1:	mov    ebx,DWORD PTR [ebp-0x8]
  411ae4:	xor    edx,eax
  411ae6:	xor    ebx,eax
  411ae8:	sub    edx,ebx
  411aea:	sub    edx,esi
  411aec:	xor    edx,eax
  411aee:	mov    DWORD PTR [ebp+0x8],edx
  411af1:	mov    edx,DWORD PTR [ebp+0x8]
  411af4:	mov    ebx,DWORD PTR [ebp-0x58]
  411af7:	add    edx,0x5708f8
  411afd:	imul   edx,ebx
  411b00:	mov    DWORD PTR [ebp-0x58],edx
  411b03:	mov    edx,DWORD PTR [ebp+0x8]
  411b06:	mov    ebx,DWORD PTR [ebp-0x54]
  411b09:	add    edx,0x64f8da
  411b0f:	or     edx,ebx
  411b11:	mov    DWORD PTR [ebp-0x54],edx
  411b14:	mov    edx,DWORD PTR [ebp+0x8]
  411b17:	mov    ebx,DWORD PTR [ebp-0x50]
  411b1a:	add    edx,ecx
  411b1c:	xor    edx,ebx
  411b1e:	mov    DWORD PTR [ebp-0x50],edx
  411b21:	mov    edx,DWORD PTR [ebp+0x8]
  411b24:	mov    ebx,DWORD PTR [ebp-0x4c]
  411b27:	add    edx,edi
  411b29:	and    edx,ebx
  411b2b:	mov    DWORD PTR [ebp-0x4c],edx
  411b2e:	mov    edx,DWORD PTR [ebp+0x8]
  411b31:	mov    ebx,DWORD PTR [ebp-0x48]
  411b34:	lea    edx,[ebx+edx*1+0x241fc1f]
  411b3b:	mov    DWORD PTR [ebp-0x48],edx
  411b3e:	mov    edx,DWORD PTR [ebp+0x8]
  411b41:	mov    ebx,0xfa5e15e2
  411b46:	sub    ebx,edx
  411b48:	add    ebx,DWORD PTR [ebp-0x44]
  411b4b:	mov    DWORD PTR [ebp-0x44],ebx
  411b4e:	mov    edx,DWORD PTR [ebp+0x8]
  411b51:	xor    edx,eax
  411b53:	add    edx,esi
  411b55:	jne    0x411ade
  411b5b:	jmp    0x4162f4
  411b60:	jmp    0x413ee6
  411b65:	out    0x82,al
  411b67:	push   es
  411b68:	and    eax,0x81c5a506
  411b6d:	outs   dx,BYTE PTR ds:[esi]
  411b6e:	fs sub eax,0xea7f1bed
  411b74:	mov    bh,0x2e
  411b76:	scas   al,BYTE PTR es:[edi]
  411b77:	jp     0x411bf3
  411b79:	add    DWORD PTR [edi+0x7a],ebx
  411b7c:	jp     0x411bd5
  411b7e:	inc    ebp
  411b7f:	sbb    ebp,edx
  411b81:	fidivr DWORD PTR [ecx]
  411b83:	mov    esi,DWORD PTR [ecx]
  411b85:	jmp    0x411b19
  411b87:	cmp    ecx,ebx
  411b89:	jmp    0xb6a4d81b
  411b8e:	xlat   BYTE PTR ds:[ebx]
  411b8f:	mov    ebp,fs
  411b91:	jnp    0x411c0a
  411b93:	pop    eax
  411b94:	dec    eax
  411b95:	leave  
  411b96:	mov    esi,0xf5f6c101
  411b9b:	mov    al,0x7a
  411b9d:	sub    eax,0x17a51
  411ba2:	popa   
  411ba3:	mov    ecx,ebx
  411ba5:	mov    ch,0x4c
  411ba7:	imul   eax,DWORD PTR [esi],0xbf1d3c6c
  411bad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bae:	push   ss
  411baf:	jnp    0x411b97
  411bb1:	push   eax
  411bb2:	hlt    
  411bb3:	ins    DWORD PTR es:[edi],dx
  411bb4:	mov    ds:0xdf9011cf,eax
  411bb9:	fnstenv [edi]
  411bbb:	mov    esp,0x98f12ea3
  411bc0:	and    al,0x45
  411bc2:	and    DWORD PTR [edi],ebx
  411bc4:	aas    
  411bc5:	dec    esp
  411bc6:	jnp    0x411b99
  411bc8:	fwait
  411bc9:	sbb    al,0x93
  411bcb:	pushf  
  411bcc:	ja     0x411c1b
  411bce:	jno    0x411b90
  411bd0:	dec    edi
  411bd1:	fninit 
  411bd3:	adc    BYTE PTR [eax-0x28],bh
  411bd6:	and    esi,DWORD PTR [eax]
  411bd8:	cmp    ch,dh
  411bda:	xor    DWORD PTR [edi],edi
  411bdc:	mov    ch,0x2c
  411bde:	mov    ecx,0x403d31d5
  411be3:	pop    edx
  411be4:	dec    edx
  411be5:	outs   dx,DWORD PTR ds:[esi]
  411be6:	sub    ebx,DWORD PTR [ecx-0x72]
  411be9:	pop    eax
  411bea:	dec    ecx
  411beb:	dec    edx
  411bec:	sub    dl,BYTE PTR [esi-0x7d3d9c34]
  411bf2:	push   0xffffffcd
  411bf4:	mov    ebx,0x31f7c6dd
  411bf9:	pop    edx
  411bfa:	out    dx,al
  411bfb:	inc    ebp
  411bfc:	dec    ebx
  411bfd:	push   ebx
  411bfe:	in     eax,dx
  411bff:	stc    
  411c00:	cwde   
  411c01:	lea    ebp,[edi]
  411c03:	sbb    ebx,DWORD PTR [edx-0x43f43cec]
  411c09:	cmc    
  411c0a:	xchg   esp,eax
  411c0b:	jmp    0xa37:0x595fa1cb
  411c12:	adc    bl,dh
  411c14:	popf   
  411c15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c16:	arpl   WORD PTR [ecx+ecx*2-0x58bf7c9b],dx
  411c1d:	cmp    BYTE PTR [edi-0xf978d67],0x41
  411c24:	mov    esi,0x91d56456
  411c29:	add    DWORD PTR [esi+0xc],0xc
  411c2d:	sub    DWORD PTR ds:0xe69d2cbc,esp
  411c33:	add    BYTE PTR [ebp+0x7a7563b1],bh
  411c39:	jno    0x411bf9
  411c3b:	hlt    
  411c3c:	cs xor eax,0xce6b2b3e
  411c42:	or     DWORD PTR [edi+ebx*2+0x1d891a5e],0x75
  411c4a:	or     eax,0xae990566
  411c4f:	pop    edx
  411c50:	xchg   DWORD PTR [edx+0x63],ecx
  411c53:	das    
  411c54:	xchg   DWORD PTR [ebx-0x2c],edi
  411c57:	adc    ah,al
  411c59:	sub    ch,dh
  411c5b:	call   0x2d91:0x6eec392f
  411c62:	aaa    
  411c63:	adc    edx,ebx
  411c65:	mul    DWORD PTR [eax-0x51]
  411c68:	add    DWORD PTR [esi+0x6f],edx
  411c6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c6c:	in     al,0x71
  411c6e:	out    0xdb,al
  411c70:	les    edi,FWORD PTR [eax+ebx*4-0x5b]
  411c74:	ins    DWORD PTR es:[edi],dx
  411c75:	mov    ds:0x3885a4a5,eax
  411c7a:	fld    TBYTE PTR [edi-0x6a]
  411c7d:	push   ss
  411c7e:	sbb    al,0xd7
  411c80:	repnz in eax,0x4c
  411c83:	sbb    eax,0xd131277
  411c88:	add    esi,edx
  411c8a:	and    eax,0xb18401a9
  411c8f:	pop    edi
  411c90:	cmp    eax,0x30a52194
  411c95:	js     0x411c2b
  411c97:	dec    ebp
  411c98:	adc    DWORD PTR [ebp-0x67],esp
  411c9b:	jo     0x411cc7
  411c9d:	xchg   edi,eax
  411c9e:	enter  0x5b81,0x46
  411ca2:	in     eax,0xd4
  411ca4:	loop   0x411cfc
  411ca6:	pop    esi
  411ca7:	and    al,0xbe
  411ca9:	daa    
  411caa:	xor    eax,0xa30a9484
  411caf:	out    0xe1,al
  411cb1:	enter  0xaffc,0xe1
  411cb5:	jge    0x411c97
  411cb7:	lods   al,BYTE PTR ss:[esi]
  411cb9:	mov    ebx,0x3173a5cf
  411cbe:	dec    ecx
  411cbf:	ins    DWORD PTR es:[edi],dx
  411cc0:	hlt    
  411cc1:	and    BYTE PTR [ecx+0x4ddb85fc],0xbd
  411cc8:	jg     0x411d0a
  411cca:	sbb    ch,al
  411ccc:	cmp    BYTE PTR [edi-0x6d],bh
  411ccf:	dec    ecx
  411cd0:	adc    BYTE PTR [edx-0x61],ah
  411cd3:	or     al,0x43
  411cd5:	arpl   dx,bp
  411cd7:	dec    ecx
  411cd8:	jecxz  0x411c98
  411cda:	imul   esi,DWORD PTR [edx-0xdbbf123],0xe1689968
  411ce4:	jg     0x411d5a
  411ce6:	das    
  411ce7:	sub    eax,0xbbe0a10b
  411cec:	lea    esi,[edx]
  411cee:	and    esi,DWORD PTR [edi]
  411cf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cf1:	adc    al,BYTE PTR [ebp+0x5f73bada]
  411cf7:	dec    DWORD PTR [edx]
  411cf9:	stc    
  411cfa:	push   ebx
  411cfb:	sub    BYTE PTR [edi-0x29],dh
  411cfe:	pop    ds
  411cff:	loope  0x411d1f
  411d01:	sbb    eax,0xdef7c0eb
  411d06:	inc    esi
  411d07:	enter  0xdd4e,0xaa
  411d0b:	xchg   ebx,eax
  411d0c:	or     bl,al
  411d0e:	repz mov ah,0x65
  411d11:	inc    esp
  411d12:	mov    esi,0x218e35fe
  411d17:	fstp   DWORD PTR [ebx]
  411d19:	push   0x26
  411d1b:	in     al,0xd6
  411d1d:	mov    ah,0xf1
  411d1f:	add    bl,dl
  411d21:	inc    esi
  411d22:	sub    bl,BYTE PTR [ebp-0x2]
  411d25:	lds    ecx,FWORD PTR [edx+0x53aedef0]
  411d2b:	int3   
  411d2c:	xchg   ebp,eax
  411d2d:	rcl    BYTE PTR [edx+0x4b],1
  411d30:	pusha  
  411d31:	xchg   cl,ah
  411d33:	or     eax,0xb7b9e667
  411d38:	out    0x33,eax
  411d3a:	sbb    bh,BYTE PTR [esi+0x4b]
  411d3d:	ret    0x918a
  411d40:	lods   eax,DWORD PTR ds:[esi]
  411d41:	stc    
  411d42:	inc    ebx
  411d43:	adc    DWORD PTR [edi-0x1e],ebx
  411d46:	pop    eax
  411d47:	jmp    0x411d8c
  411d49:	push   esi
  411d4a:	xchg   ebx,eax
  411d4b:	js     0x411dc5
  411d4d:	fst    QWORD PTR [ebp-0x40]
  411d50:	fild   QWORD PTR [eax]
  411d52:	ds das 
  411d54:	push   ebx
  411d55:	adc    eax,0x4a0e5d0f
  411d5a:	mov    ds:0xa5bf0d9f,al
  411d5f:	mov    ds:0x2eb0d122,al
  411d64:	pop    ss
  411d65:	(bad)  
  411d66:	int    0x21
  411d68:	pop    es
  411d69:	mov    BYTE PTR [edi],ah
  411d6b:	xor    eax,0x7b1dc82f
  411d70:	lds    esp,FWORD PTR [edi-0x5040dacf]
  411d76:	pop    ebp
  411d77:	shl    BYTE PTR [ecx-0x41ace53d],0x95
  411d7e:	xchg   ebx,eax
  411d7f:	mov    dl,0x5d
  411d81:	or     edx,DWORD PTR ds:0x8167d09b
  411d87:	xchg   DWORD PTR [ebx-0x49],eax
  411d8a:	pushf  
  411d8b:	outs   dx,BYTE PTR ds:[esi]
  411d8c:	cmc    
  411d8d:	sub    ebp,DWORD PTR [ecx-0x41]
  411d90:	push   ebp
  411d91:	and    DWORD PTR [eax+0x54],esp
  411d94:	aas    
  411d95:	loop   0x411da7
  411d97:	sbb    ebx,0xe9361901
  411d9d:	add    al,0x18
  411d9f:	fwait
  411da0:	scas   eax,DWORD PTR es:[edi]
  411da1:	ret    0xdde
  411da4:	arpl   WORD PTR [eax-0x55],sp
  411da7:	jmp    0x411dec
  411da9:	arpl   WORD PTR [edi+0x76],cx
  411dac:	adc    edx,0x5a
  411daf:	mov    dl,bh
  411db1:	jno    0x411dd3
  411db3:	or     al,0xb
  411db5:	mov    dl,0x42
  411db7:	lods   al,BYTE PTR ds:[esi]
  411db8:	jmp    0x411d7d
  411dba:	not    BYTE PTR [edi-0x46]
  411dbd:	mov    eax,ds:0xdc9dd039
  411dc2:	mov    al,ds:0xe811da3e
  411dc7:	icebp  
  411dc8:	pop    eax
  411dc9:	les    ebx,FWORD PTR [ebx]
  411dcb:	mov    cl,0x60
  411dcd:	mov    ch,BYTE PTR [edx]
  411dcf:	lahf   
  411dd0:	fstp   TBYTE PTR [ebx+eax*1+0x9]
  411dd4:	popf   
  411dd5:	and    eax,0x5efa9a50
  411dda:	jmp    0xf4a2a9b4
  411ddf:	stc    
  411de0:	les    esp,FWORD PTR [esi+0x6a]
  411de3:	and    BYTE PTR [ebx],bl
  411de5:	adc    eax,0x6318e3aa
  411dea:	and    BYTE PTR [ebx-0x63e4ccdc],bl
  411df0:	or     bh,bh
  411df2:	adc    BYTE PTR [eax],ch
  411df4:	sbb    edi,DWORD PTR [ebp+0x2]
  411df7:	mov    al,ds:0xaa3e551f
  411dfc:	icebp  
  411dfd:	aaa    
  411dfe:	mov    bl,0x2f
  411e00:	mov    eax,ds:0xb68181eb
  411e05:	daa    
  411e06:	addr16 fcmove st,st(3)
  411e09:	mov    ebx,0xa5275c0
  411e0e:	cmp    eax,0x7560500
  411e13:	lea    ebx,[esi]
  411e15:	rcl    esp,cl
  411e17:	test   BYTE PTR [edi],al
  411e19:	outs   dx,BYTE PTR ds:[esi]
  411e1a:	xor    al,BYTE PTR [esp+ecx*4]
  411e1d:	fadd   st(0),st
  411e1f:	mov    eax,esi
  411e21:	mov    eax,0x9045d623
  411e26:	mov    ah,0x30
  411e28:	sbb    al,0x8f
  411e2a:	imul   edi,ecx,0x70
  411e2d:	cmp    eax,0x805db0a8
  411e32:	scas   al,BYTE PTR es:[edi]
  411e33:	or     ebx,DWORD PTR [eax]
  411e35:	shr    DWORD PTR [edi+0x8d7c28a],cl
  411e3b:	xor    DWORD PTR [ecx+0x3c73fec],esp
  411e41:	jp     0x411dce
  411e43:	mov    bl,0xc0
  411e45:	pop    es
  411e46:	rcr    BYTE PTR [esi],1
  411e48:	in     al,0xd
  411e4a:	loop   0x411e62
  411e4c:	or     bl,0x60
  411e4f:	(bad)  
  411e51:	inc    ebx
  411e52:	daa    
  411e53:	xor    ebx,esp
  411e55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e56:	dec    edx
  411e57:	sbb    al,0x51
  411e59:	dec    ecx
  411e5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e5b:	imul   esi,DWORD PTR [eax+ebp*8-0x9],0x13
  411e60:	pop    ebp
  411e61:	add    bl,dl
  411e63:	retf   0x26c0
  411e66:	xchg   esi,eax
  411e67:	adc    al,0x9c
  411e69:	shl    ch,0x7e
  411e6c:	jb     0x411e39
  411e6e:	loope  0x411e9d
  411e70:	sbb    dl,BYTE PTR fs:[edx+0x7fa4df51]
  411e77:	jle    0x411e43
  411e79:	lods   eax,DWORD PTR ds:[esi]
  411e7a:	out    0x75,eax
  411e7c:	es jae 0x411ec7
  411e7f:	les    esi,FWORD PTR [edi]
  411e81:	mov    ds:0x96746e17,eax
  411e86:	pop    esp
  411e87:	adc    eax,0x15fa242a
  411e8c:	or     DWORD PTR [ebx],edx
  411e8e:	jne    0x411e2e
  411e90:	dec    eax
  411e91:	aad    0x40
  411e93:	std    
  411e94:	test   DWORD PTR [edi+ebx*8+0x42],edi
  411e98:	out    0x1f,al
  411e9a:	retf   
  411e9b:	xor    eax,0xf9dae95c
  411ea0:	mov    eax,0x64a7a9bb
  411ea5:	mov    esi,DWORD PTR [ebx-0x356f41d9]
  411eab:	sub    edi,eax
  411ead:	add    ah,BYTE PTR [esp+edi*1+0x6e996f91]
  411eb4:	daa    
  411eb5:	sbb    bl,ah
  411eb7:	repz bound esp,QWORD PTR [ecx-0x35]
  411ebb:	inc    esp
  411ebc:	mov    dl,0x73
  411ebe:	sbb    al,0x41
  411ec0:	stos   BYTE PTR es:[edi],al
  411ec1:	pop    ebx
  411ec2:	push   esp
  411ec3:	dec    edx
  411ec4:	outs   dx,DWORD PTR ds:[esi]
  411ec5:	cmc    
  411ec6:	xchg   edi,eax
  411ec7:	push   ebx
  411ec8:	jmp    0x411e62
  411eca:	gs pop ds
  411ecc:	xchg   esp,eax
  411ecd:	adc    eax,DWORD PTR [edi-0x3c2849c4]
  411ed3:	pop    ecx
  411ed4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ed5:	retf   0xcd46
  411ed8:	pop    es
  411ed9:	mov    cl,0xb2
  411edb:	fadd   DWORD PTR [edx+0x11]
  411ede:	push   ebp
  411edf:	imul   BYTE PTR [ebx]
  411ee1:	add    ebp,DWORD PTR [ebp-0x5f]
  411ee4:	into   
  411ee5:	(bad)  
  411ee8:	fistp  WORD PTR [ebp+ebx*8-0x2e]
  411eec:	in     al,0xb4
  411eee:	idiv   BYTE PTR [edx-0x62]
  411ef1:	out    dx,eax
  411ef2:	or     edx,ebx
  411ef4:	adc    BYTE PTR [edx],ch
  411ef6:	jno    0x411f13
  411ef8:	sahf   
  411ef9:	inc    ebp
  411efa:	cs xor eax,ebx
  411efd:	imul   eax,DWORD PTR [esi+ebp*4],0xffffffb2
  411f01:	aas    
  411f02:	cmp    BYTE PTR [eax-0x57f0d4e9],0xac
  411f09:	push   ebp
  411f0a:	dec    edi
  411f0b:	xchg   DWORD PTR [ebx],esp
  411f0d:	or     dh,0x71
  411f10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f11:	ds dec ecx
  411f13:	xor    ch,bh
  411f15:	mov    edx,0xe3109ad7
  411f1a:	mov    DWORD PTR [eax+0x7075b58c],ebp
  411f20:	xchg   esi,eax
  411f21:	jecxz  0x411f8d
  411f23:	adc    esi,0x701447c0
  411f29:	cs stc 
  411f2b:	and    BYTE PTR [edi+0x7f858c05],al
  411f31:	sub    al,0xc7
  411f33:	ins    DWORD PTR es:[edi],dx
  411f34:	iret   
  411f35:	sbb    BYTE PTR [ebx],0x49
  411f38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f39:	je     0x411edd
  411f3b:	aad    0xc
  411f3d:	inc    esi
  411f3e:	mov    ebx,0xe427c858
  411f43:	dec    ecx
  411f44:	add    BYTE PTR ds:0x2288d188,ah
  411f4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f4b:	pop    ecx
  411f4c:	iret   
  411f4d:	xlat   BYTE PTR ds:[ebx]
  411f4e:	pop    esi
  411f4f:	das    
  411f50:	mov    bl,0x4
  411f52:	in     eax,dx
  411f53:	mul    BYTE PTR [ebx+0x26]
  411f56:	stc    
  411f57:	add    eax,0x23f30dd
  411f5c:	aaa    
  411f5d:	ja     0x411f35
  411f5f:	in     al,dx
  411f60:	shl    DWORD PTR [eax-0x79476fdb],1
  411f66:	leave  
  411f67:	xchg   ebp,eax
  411f68:	sub    DWORD PTR [ebx-0x12],edi
  411f6b:	adc    DWORD PTR [ebx],edi
  411f6d:	xor    edx,DWORD PTR [edi+0x8]
  411f70:	sbb    al,0x91
  411f72:	and    DWORD PTR [esp+ecx*8-0x40],edi
  411f76:	sahf   
  411f77:	xchg   ecx,eax
  411f78:	setnp  BYTE PTR [esi+0x1fe2a20d]
  411f7f:	int    0x7f
  411f81:	mov    edx,0x5f77129a
  411f86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f87:	xor    ax,0xf637
  411f8b:	sub    al,0x45
  411f8d:	rcr    BYTE PTR [edx+esi*8],0x48
  411f91:	in     eax,dx
  411f92:	mov    ds:0x4bef26a8,eax
  411f97:	scas   al,BYTE PTR es:[edi]
  411f98:	ins    DWORD PTR es:[edi],dx
  411f99:	jns    0x411f43
  411f9b:	cmp    al,0x18
  411f9d:	xchg   edi,eax
  411f9e:	jnp    0x411f54
  411fa0:	adc    edi,ebx
  411fa2:	add    dl,BYTE PTR [edx-0x27657ca8]
  411fa8:	sbb    ebx,DWORD PTR [esi+edx*4]
  411fab:	jb     0x411f99
  411fad:	pusha  
  411fae:	int3   
  411faf:	addr16 fwait
  411fb1:	pop    esp
  411fb2:	fdivr  st,st(5)
  411fb4:	and    al,0x41
  411fb6:	out    dx,eax
  411fb7:	in     eax,0x76
  411fb9:	lahf   
  411fba:	add    DWORD PTR ds:0xf82ae3f0,esi
  411fc0:	mov    ecx,0x770021bd
  411fc5:	xchg   BYTE PTR [esi+0x73],cl
  411fc8:	fld    DWORD PTR [edx-0x7b05dc1e]
  411fce:	xchg   ecx,eax
  411fcf:	sub    dh,BYTE PTR [ecx+0x4d39f610]
  411fd5:	call   0xe95d3a97
  411fda:	out    0xbb,eax
  411fdc:	add    DWORD PTR [ecx-0x7d4c6040],esp
  411fe2:	inc    edx
  411fe3:	xchg   BYTE PTR ds:0x9d39ffd3,cl
  411fe9:	jecxz  0x41202c
  411feb:	imul   esi,DWORD PTR [edi],0x31679fb2
  411ff1:	dec    eax
  411ff2:	or     BYTE PTR [esi],0xe9
  411ff5:	mov    ah,0x7e
  411ff7:	mov    dl,cl
  411ff9:	mov    esi,0xe850e561
  411ffe:	dec    esp
  411fff:	pop    ss
  412000:	jnp    0x412021
  412002:	inc    eax
  412003:	mov    eax,0x1ef089b6
  412008:	adc    eax,0x95839675
  41200d:	pop    ecx
  41200e:	mov    ah,0x31
  412010:	popf   
  412011:	xor    eax,0xdd825c4
  412016:	mov    bl,0x1f
  412018:	cmp    ebx,DWORD PTR [ebx-0x3a]
  41201b:	sbb    al,0x6
  41201d:	adc    ecx,esp
  41201f:	mov    esi,0x79d91f45
  412024:	fwait
  412025:	test   eax,0x43a26638
  41202a:	iret   
  41202b:	mov    fs,WORD PTR [bp+di]
  41202e:	inc    edx
  41202f:	or     DWORD PTR [edx],eax
  412031:	das    
  412032:	retf   
  412033:	shl    dl,cl
  412035:	jo     0x411fbe
  412037:	scas   eax,DWORD PTR es:[edi]
  412038:	pop    eax
  412039:	pop    esp
  41203a:	mov    esp,DWORD PTR [edx+edi*4-0x22]
  41203e:	inc    ebp
  41203f:	pop    esp
  412040:	std    
  412041:	(bad)  
  412042:	mov    ch,0x34
  412044:	shl    DWORD PTR [ebp+0x4],1
  412047:	nop
  412048:	xchg   ebx,eax
  412049:	rcl    DWORD PTR [esi-0x6a],0xfb
  41204d:	int    0xd
  41204f:	adc    ah,bh
  412051:	mov    ds:0xe4c5c6eb,eax
  412056:	dec    ebx
  412057:	add    al,0x51
  412059:	call   0xedde:0xa7ee5984
  412060:	and    ebp,edx
  412062:	pop    eax
  412063:	loope  0x412062
  412065:	adc    DWORD PTR [eax+0x1eb81f41],eax
  41206b:	pop    ebp
  41206c:	lods   eax,DWORD PTR ds:[esi]
  41206d:	mov    eax,ds:0xbcb018e4
  412072:	inc    esp
  412073:	mov    ah,0xd4
  412075:	add    eax,0x298efd4b
  41207a:	mov    cl,0x28
  41207c:	add    dh,BYTE PTR ds:0x44a7d465
  412082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412083:	add    al,0xcd
  412085:	leave  
  412086:	vpsubd ymm0,ymm6,YMMWORD PTR [edx]
  41208a:	and    edi,esp
  41208c:	ss mov ch,0xec
  41208f:	inc    eax
  412090:	xor    al,0xfc
  412092:	push   esp
  412093:	pop    edi
  412094:	ins    DWORD PTR es:[edi],dx
  412095:	sbb    cl,ch
  412097:	inc    ebx
  412098:	(bad)  
  412099:	stc    
  41209a:	test   BYTE PTR [edx+0x2f20f422],ah
  4120a0:	mov    esp,0x4de1b6fb
  4120a5:	test   DWORD PTR [ecx-0x66b937a],esp
  4120ab:	inc    ebx
  4120ac:	sbb    BYTE PTR [eax+ebx*2-0x78],0xee
  4120b1:	retf   0x8a59
  4120b4:	scas   eax,DWORD PTR es:[edi]
  4120b5:	sub    eax,0x3c1dc8b3
  4120ba:	dec    edx
  4120bb:	xor    ch,bh
  4120bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120be:	(bad)  [edi+0x3]
  4120c1:	add    DWORD PTR [edx-0x5cde2302],ebp
  4120c7:	mov    esi,esp
  4120c9:	loopne 0x4120e8
  4120cb:	mov    ah,0x2b
  4120cd:	(bad)  
  4120ce:	test   al,0x11
  4120d0:	push   ebp
  4120d1:	popa   
  4120d2:	add    ch,BYTE PTR [ebx]
  4120d4:	mov    al,0x20
  4120d6:	add    al,BYTE PTR [ecx]
  4120d8:	sub    ah,0x1b
  4120db:	mov    al,0x35
  4120dd:	and    DWORD PTR [esp+ebp*1-0x745f5dbc],0x286dc2a3
  4120e8:	test   al,0x6e
  4120ea:	aad    0x30
  4120ec:	jl     0x4120b2
  4120ee:	(bad)  
  4120ef:	jbe    0x4120d0
  4120f1:	inc    edi
  4120f2:	mov    dh,0x79
  4120f4:	lods   eax,DWORD PTR ds:[esi]
  4120f5:	and    BYTE PTR [esi],dh
  4120f7:	pushf  
  4120f8:	xchg   ebp,eax
  4120f9:	loope  0x4120c9
  4120fb:	sbb    eax,0xa5f3fac7
  412100:	inc    ecx
  412101:	adc    DWORD PTR ds:0x4b5a292d,0x47
  412108:	aas    
  412109:	fisub  DWORD PTR [ecx+0x2b]
  41210c:	lods   eax,DWORD PTR ds:[esi]
  41210d:	retf   0xb93d
  412110:	sbb    bh,BYTE PTR [edx]
  412112:	clc    
  412113:	(bad)  
  412114:	jmp    0xaacc:0x1f8ba180
  41211b:	aas    
  41211c:	fucomp st(0)
  41211e:	fst    DWORD PTR [ebx-0x3722b35e]
  412124:	mov    DWORD PTR [esi],ecx
  412126:	dec    ebx
  412127:	jne    0x4120cd
  412129:	sub    DWORD PTR [ebx+0x70b817e3],ebp
  41212f:	sub    eax,0xeee1c1f1
  412134:	adc    esp,DWORD PTR [edx-0x15b3f99a]
  41213a:	dec    esp
  41213b:	fs sbb edi,esi
  41213e:	(bad)  
  41213f:	(bad)  
  412140:	mov    cl,ch
  412142:	mov    dl,0x7d
  412144:	(bad)  
  412145:	mov    ss,WORD PTR [ebp-0x4f]
  412148:	ds xor al,0x56
  41214b:	fstp   TBYTE PTR [ebx-0x48aeb54c]
  412151:	mov    ds:0x24237c79,eax
  412156:	aas    
  412157:	ret    0xbc86
  41215a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41215b:	mov    al,0xec
  41215d:	mov    dh,BYTE PTR ds:0x5b1382b
  412163:	pop    DWORD PTR [eax+0x3a]
  412166:	dec    edx
  412167:	pop    fs
  412169:	ins    DWORD PTR es:[edi],dx
  41216a:	inc    eax
  41216b:	gs inc edi
  41216d:	or     BYTE PTR [esp+eiz*4-0x5f],al
  412171:	(bad)  
  412172:	call   DWORD PTR [eax-0x12]
  412175:	inc    dx
  412177:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412178:	outs   dx,BYTE PTR ds:[esi]
  412179:	jno    0x41213c
  41217b:	inc    ebx
  41217c:	clc    
  41217d:	int    0x9a
  41217f:	inc    ebx
  412180:	icebp  
  412181:	jae    0x4121ac
  412183:	jecxz  0x4121f4
  412185:	mov    dl,0x58
  412187:	push   ss
  412188:	dec    edi
  412189:	scas   eax,DWORD PTR es:[edi]
  41218a:	cmp    al,0xac
  41218c:	into   
  41218d:	xchg   ecx,eax
  41218e:	addr16 cmp esi,edx
  412191:	jae    0x412123
  412193:	cli    
  412194:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412195:	adc    eax,0xd2f407fa
  41219a:	aad    0x4c
  41219c:	sub    bh,BYTE PTR [ecx+ecx*1-0x217359f5]
  4121a3:	cmp    eax,0xf44d7eec
  4121a8:	mov    dl,0x67
  4121aa:	retf   
  4121ab:	pop    ecx
  4121ac:	mov    ds:0x9ddb1e00,al
  4121b1:	aam    0xd
  4121b3:	jge    0x412220
  4121b5:	(bad)  
  4121b6:	(bad)  
  4121b7:	cdq    
  4121b8:	aaa    
  4121b9:	inc    ebx
  4121ba:	js     0x41218d
  4121bc:	out    dx,al
  4121bd:	mov    bl,0x1a
  4121bf:	and    DWORD PTR [esi+0x3a62c757],ebp
  4121c5:	cmp    ch,BYTE PTR [esi-0x9]
  4121c8:	aad    0x58
  4121ca:	jle    0x412166
  4121cc:	xchg   edi,eax
  4121cd:	xchg   esi,eax
  4121ce:	not    DWORD PTR [esp+eax*8+0x6ad514d3]
  4121d5:	mov    al,ds:0x190123c3
  4121da:	pop    es
  4121db:	and    al,0xc4
  4121dd:	jg     0x412181
  4121df:	jle    0x4121ac
  4121e1:	jge    0x412231
  4121e3:	sub    DWORD PTR [esi+0x35],esi
  4121e6:	mov    dh,BYTE PTR ds:0x703e93b4
  4121ec:	(bad)  
  4121ed:	xchg   BYTE PTR [esp+edx*4],bh
  4121f0:	dec    edx
  4121f1:	aad    0xc6
  4121f3:	(bad)  [ebp+0x57]
  4121f6:	push   es
  4121f7:	imul   ecx,DWORD PTR [ebx+0x284b83a9],0x6dc064c9
  412201:	in     al,dx
  412202:	bound  ecx,QWORD PTR [eax]
  412204:	mov    al,ds:0x28e55c7b
  412209:	inc    ecx
  41220a:	jge    0x412208
  41220c:	add    eax,0x58444e18
  412211:	jecxz  0x4121ed
  412213:	mov    dl,0x4a
  412215:	add    eax,0x7a228210
  41221a:	push   ecx
  41221b:	dec    edx
  41221c:	mov    al,0x8b
  41221e:	test   DWORD PTR es:[esi+0x57130306],ebp
  412225:	lea    eax,[edx+0x68cd65a0]
  41222b:	mov    bh,0xeb
  41222d:	or     al,0x4
  41222f:	cwde   
  412230:	inc    eax
  412231:	jne    0x41228c
  412233:	mov    bh,0x7e
  412235:	les    esp,FWORD PTR [eax+eax*2-0x6a]
  412239:	push   edx
  41223a:	popf   
  41223b:	test   BYTE PTR [edi+0x6623c8c6],ah
  412241:	mov    bh,0xf7
  412243:	sbb    eax,DWORD PTR [ecx+0x36]
  412246:	popf   
  412247:	pusha  
  412248:	fmul   QWORD PTR [edi+0x72]
  41224b:	sub    DWORD PTR [edx-0x5dd96dbe],ecx
  412251:	cmp    eax,0x4709b150
  412256:	and    ch,ch
  412258:	fbld   TBYTE PTR [eax+0x90558a8]
  41225e:	push   esp
  41225f:	loop   0x412248
  412261:	mov    ?,esp
  412263:	popa   
  412264:	jmp    0x783c:0x5d2c9e7
  41226b:	adc    esp,esi
  41226d:	xchg   ebx,eax
  41226e:	pop    ecx
  41226f:	mov    bh,0xbe
  412271:	mov    cl,0xd3
  412273:	iret   
  412274:	pop    esp
  412275:	xlat   BYTE PTR ds:[ebx]
  412276:	jbe    0x41229c
  412278:	add    edi,DWORD PTR [eax+0x2b475089]
  41227e:	xor    BYTE PTR [edi+0xe6314c6],al
  412284:	lahf   
  412285:	cmp    eax,0xf757040
  41228a:	xor    eax,0xca3de71f
  41228f:	xchg   edx,eax
  412290:	adc    al,0xf8
  412292:	push   esi
  412293:	ja     0x412250
  412295:	cmc    
  412296:	jl     0x412250
  412298:	test   eax,0x7a385e38
  41229d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41229e:	and    ch,BYTE PTR [ecx+0x3a]
  4122a1:	sbb    DWORD PTR [eax+0x3e],eax
  4122a4:	sahf   
  4122a5:	loop   0x41231b
  4122a7:	cmovp  esi,DWORD PTR [ebp+0x76]
  4122ab:	mov    esp,0x6c05a81d
  4122b0:	jb     0x41228b
  4122b2:	xlat   BYTE PTR ds:[ebx]
  4122b3:	into   
  4122b4:	sbb    DWORD PTR [edx-0x1d445543],edi
  4122ba:	gs aas 
  4122bc:	inc    edi
  4122bd:	xchg   edi,eax
  4122be:	scas   eax,DWORD PTR es:[edi]
  4122bf:	div    DWORD PTR [esi]
  4122c1:	add    edi,DWORD PTR [ebp+0x6c]
  4122c4:	popf   
  4122c5:	dec    esi
  4122c6:	inc    ecx
  4122c7:	fmul   DWORD PTR [ebp+0x5f]
  4122ca:	pusha  
  4122cb:	sbb    al,0x92
  4122cd:	inc    eax
  4122ce:	adc    cl,cl
  4122d0:	pop    edx
  4122d1:	(bad)  
  4122d2:	fidiv  WORD PTR [eax-0x23]
  4122d5:	retf   
  4122d6:	ja     0x41227a
  4122d8:	mov    cl,0x43
  4122da:	push   es
  4122db:	jb     0x41232d
  4122dd:	mov    al,0xa2
  4122df:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4122e1:	cmp    al,0xe9
  4122e3:	jns    0x412356
  4122e5:	adc    ebp,DWORD PTR [esi]
  4122e7:	push   ebx
  4122e8:	add    ebx,edx
  4122ea:	inc    edx
  4122eb:	jae    0x4122bf
  4122ed:	pop    edx
  4122ee:	mov    dh,0xd1
  4122f0:	aam    0xa0
  4122f2:	call   0xcc24:0x1de2ad45
  4122f9:	test   DWORD PTR [esi+0x360402a0],0x51e1c49b
  412303:	xchg   ebx,eax
  412304:	cmp    DWORD PTR [edx+0x2c4eb456],ebx
  41230a:	inc    edx
  41230b:	(bad)  
  41230d:	ja     0x4122a0
  41230f:	mov    ebp,0xfee80809
  412314:	ror    BYTE PTR [edi],0xc5
  412317:	in     al,0x14
  412319:	dec    esp
  41231a:	sub    BYTE PTR [ecx+edx*8],al
  41231d:	add    ebp,DWORD PTR [edx]
  41231f:	(bad)  
  412320:	(bad)  [esi-0x747f41e6]
  412326:	and    BYTE PTR [ebx-0x7cb3be85],dh
  41232c:	pop    eax
  41232d:	fisttp WORD PTR [ebp-0x7b753ab1]
  412333:	cmp    ecx,DWORD PTR [ecx+0x7b]
  412336:	mov    dh,BYTE PTR [ebp+edx*8-0x7a]
  41233a:	daa    
  41233b:	cmp    eax,0x5eae9fe2
  412340:	mov    eax,ds:0x95de2d3d
  412345:	fist   DWORD PTR [ebp+0x67]
  412348:	mov    ebp,0x12b2cdac
  41234d:	jb     0x41230b
  41234f:	shr    cl,0x92
  412352:	xchg   ebp,eax
  412353:	xchg   DWORD PTR [esi],eax
  412355:	dec    esi
  412356:	sub    eax,0x1f58cdbd
  41235b:	dec    eax
  41235c:	out    dx,al
  41235d:	lahf   
  41235e:	push   ss
  41235f:	test   BYTE PTR [ecx],bl
  412361:	rcr    DWORD PTR [edi+0x476433d6],1
  412367:	dec    ecx
  412368:	mov    dl,0x37
  41236a:	xchg   ebx,eax
  41236b:	sbb    ebp,DWORD PTR [edi+0xad5177]
  412371:	sub    esp,ebx
  412373:	or     bh,bh
  412375:	or     eax,0xaa0ae5b1
  41237a:	or     edi,ebx
  41237c:	lods   al,BYTE PTR ds:[esi]
  41237d:	jb     0x4123e6
  41237f:	pop    esi
  412380:	mov    bl,0xe3
  412382:	cmc    
  412383:	xor    eax,0xeec622b5
  412388:	jmp    0x1ca3e7d3
  41238d:	cld    
  41238e:	in     al,dx
  41238f:	retf   
  412390:	mov    ds:0xdb1213f1,eax
  412395:	hlt    
  412396:	mov    eax,ds:0x7a0f5d48
  41239b:	dec    edx
  41239c:	sub    al,0xa2
  41239e:	mov    ebp,DWORD PTR [ecx-0x6136aaee]
  4123a4:	xor    DWORD PTR [ebp+0x7f741bb2],ecx
  4123aa:	out    0x2c,eax
  4123ac:	(bad)  
  4123ad:	mov    eax,ds:0x6c6b7da9
  4123b2:	or     DWORD PTR [ebx+0x64528635],0xaaa7e76f
  4123bc:	cmp    esp,ebx
  4123be:	mov    dl,0x2
  4123c0:	jl     0x4123a9
  4123c2:	or     al,BYTE PTR [eax+0x3e]
  4123c5:	pop    esp
  4123c6:	and    BYTE PTR [ecx+edx*2-0x12],bh
  4123ca:	test   al,0xd0
  4123cc:	mov    al,0xe0
  4123ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123cf:	sub    bh,ah
  4123d1:	leave  
  4123d2:	test   DWORD PTR [eax],esp
  4123d4:	scas   al,BYTE PTR es:[edi]
  4123d5:	shl    DWORD PTR [esi+eax*8+0x49],cl
  4123d9:	fsubr  st(7),st
  4123db:	(bad)
  4123de:	push   ebx
  4123df:	cdq    
  4123e0:	mov    eax,ds:0x54a529da
  4123e5:	mov    esi,ebp
  4123e7:	add    cl,BYTE PTR [ebp+0x28]
  4123ea:	scas   al,BYTE PTR es:[edi]
  4123eb:	hlt    
  4123ec:	mov    ebp,0xcb981092
  4123f1:	jmp    0xef45:0x122f3b8e
  4123f8:	jbe    0x412436
  4123fa:	arpl   WORD PTR [edx+0x743e9f76],cx
  412400:	jb     0x41239a
  412402:	pop    ebx
  412403:	dec    esp
  412404:	push   esp
  412405:	pop    ebp
  412406:	sub    BYTE PTR [eax],bh
  412408:	jmp    0x57ba9a0
  41240d:	and    al,0xf8
  41240f:	jne    0x41241a
  412411:	or     eax,0xe86623e7
  412416:	rcr    ebx,0x2a
  412419:	out    dx,al
  41241a:	cmp    DWORD PTR [ebx-0x80],0xffffffcd
  41241e:	sub    eax,0x7c96b721
  412423:	shl    BYTE PTR [ebx-0x29bb2787],cl
  412429:	jp     0x41246f
  41242b:	mov    al,0x19
  41242d:	adc    al,0xdd
  41242f:	or     DWORD PTR [edx+esi*4],edx
  412432:	test   DWORD PTR [edi-0x311aaf3],edi
  412438:	lods   eax,DWORD PTR ds:[esi]
  412439:	adc    eax,0xea38399b
  41243e:	(bad)  
  41243f:	and    BYTE PTR [edi],ah
  412441:	jb     0x412489
  412443:	lahf   
  412444:	mov    al,BYTE PTR [ecx-0x2f]
  412447:	jns    0x41240a
  412449:	mov    eax,DWORD PTR [ecx-0x759661ac]
  41244f:	xor    ebp,eax
  412451:	cwde   
  412452:	pusha  
  412453:	xor    al,0xdb
  412455:	lock mov ch,0x6
  412458:	loop   0x4124a2
  41245a:	push   ss
  41245b:	push   ebp
  41245c:	mov    esp,0x2b0028bf
  412461:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412462:	lods   eax,DWORD PTR ds:[esi]
  412463:	iret   
  412464:	stos   DWORD PTR es:[edi],eax
  412465:	push   eax
  412466:	sub    al,0x6c
  412468:	cmp    eax,0xe39bfccb
  41246d:	pop    es
  41246e:	mov    ecx,0xfb05992e
  412473:	out    0xee,eax
  412475:	sbb    dl,BYTE PTR [ebx]
  412477:	mov    edi,0xf2d5aa09
  41247c:	adc    bh,BYTE PTR [ecx+0x67bad667]
  412482:	shl    BYTE PTR [ecx+0x7f6671da],1
  412488:	rcr    bl,1
  41248a:	imul   eax,DWORD PTR [eax-0x49],0x5094e51c
  412491:	aam    0x1d
  412493:	cdq    
  412494:	inc    edx
  412495:	rol    DWORD PTR [eax],0xc
  412498:	inc    ebp
  412499:	mov    ds:0x875a517a,eax
  41249e:	call   0x95a4b328
  4124a3:	je     0x4124cd
  4124a5:	sbb    ecx,0xffffff9a
  4124a8:	mov    bh,0xff
  4124aa:	bound  ecx,QWORD PTR [edx-0x40]
  4124ad:	sub    edi,0xffffffa7
  4124b0:	mov    ebx,0xdeb6ebf4
  4124b5:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4124b7:	ds mov ecx,0x13a3de58
  4124bd:	inc    edx
  4124be:	out    0xf8,eax
  4124c0:	dec    ebx
  4124c1:	ins    DWORD PTR es:[edi],dx
  4124c2:	rcr    BYTE PTR [ecx-0x4f318943],0x3e
  4124c9:	jb     0x412455
  4124cb:	adc    eax,0x58541c2
  4124d0:	fist   WORD PTR [ebp-0x43b09c08]
  4124d6:	ss jle 0x4124f9
  4124d9:	xor    eax,0x1f0a0bc6
  4124de:	lods   eax,DWORD PTR ds:[esi]
  4124df:	and    DWORD PTR [ecx+0x1e2aecef],ebp
  4124e5:	lods   eax,DWORD PTR ds:[esi]
  4124e6:	cdq    
  4124e7:	je     0x4124d0
  4124e9:	sub    al,0xbc
  4124eb:	lock retf 0x8c89
  4124ef:	fwait
  4124f0:	dec    esi
  4124f1:	pop    edx
  4124f2:	pop    eax
  4124f3:	add    al,0x11
  4124f5:	cs test al,0x51
  4124f8:	cmp    cl,ch
  4124fa:	add    bh,bl
  4124fc:	test   ah,dl
  4124fe:	cmc    
  4124ff:	push   esp
  412500:	jns    0x4124e0
  412502:	sub    esp,DWORD PTR [ebx+edx*2+0x6e]
  412506:	fwait
  412507:	or     eax,0x3536045c
  41250c:	jg     0x412581
  41250e:	jp     0x4124c8
  412510:	mov    ebx,0xf8def53b
  412515:	mov    bl,ah
  412517:	xor    edx,ebx
  412519:	mov    ds:0x203a022f,eax
  41251e:	xor    eax,0x8494dcd5
  412523:	mov    esp,0xd91f7106
  412528:	mov    eax,ds:0xb8d3a905
  41252d:	xor    eax,0x17f1e719
  412532:	xchg   ebp,eax
  412533:	inc    edi
  412534:	or     eax,0x44f62e62
  412539:	jne    0x412567
  41253b:	mov    DWORD PTR [edx+0x1],esp
  41253e:	sbb    eax,0x6a2fde0c
  412543:	(bad)  
  412544:	jge    0x412562
  412546:	mov    esi,0x94ea845d
  41254b:	sub    BYTE PTR [edx+0x10],ah
  41254e:	inc    ebx
  41254f:	sub    esp,ebp
  412551:	les    esi,FWORD PTR [esi+0x48d50f5f]
  412557:	adc    edx,DWORD PTR [esi]
  412559:	mov    bl,0x36
  41255b:	sbb    bl,BYTE PTR [edi+0x546f750d]
  412561:	int3   
  412562:	cli    
  412563:	bound  esi,QWORD PTR [ebp-0x52]
  412566:	(bad)  
  412567:	test   al,0x5f
  412569:	test   BYTE PTR [ebp-0x2d],ch
  41256c:	(bad)  
  41256d:	xchg   ebp,eax
  41256e:	aad    0xb9
  412570:	sub    bl,bl
  412572:	js     0x4125a8
  412574:	jo     0x4125e2
  412576:	ds (bad) 
  412578:	iret   
  412579:	mov    ah,0x76
  41257b:	sub    dh,dl
  41257d:	out    0xdc,eax
  41257f:	mov    dl,0x70
  412581:	adc    dl,BYTE PTR [edi+0x4d]
  412584:	dec    edi
  412585:	daa    
  412586:	adc    dl,BYTE PTR [edi-0x472f5075]
  41258c:	adc    ebp,DWORD PTR [ecx-0x2b]
  41258f:	xchg   dl,bh
  412591:	cmp    DWORD PTR [ecx+0x7a],ebx
  412594:	jecxz  0x4125c0
  412596:	(bad)  
  412597:	jo     0x41252e
  412599:	rcr    al,cl
  41259b:	ss sub esp,esp
  41259e:	adc    BYTE PTR [edi-0xc26ed0e],0x76
  4125a5:	pop    ebp
  4125a6:	push   cs
  4125a7:	rcr    BYTE PTR [eax+0x66],cl
  4125aa:	mov    ebp,0x77672329
  4125af:	add    DWORD PTR [edx+eiz*2],0xffffffb2
  4125b3:	rol    BYTE PTR [ecx],cl
  4125b5:	push   cs
  4125b6:	dec    edi
  4125b7:	sahf   
  4125b8:	push   edx
  4125b9:	mov    ds:0x2c4d4ae3,eax
  4125be:	fsubr  DWORD PTR [esi]
  4125c0:	fldenv [esi-0x7c]
  4125c3:	outs   dx,BYTE PTR ds:[esi]
  4125c4:	jae    0x41256d
  4125c6:	adc    eax,0x4020b422
  4125cb:	scas   eax,DWORD PTR es:[edi]
  4125cc:	fsubr  st(7),st
  4125ce:	adc    al,0x17
  4125d0:	cmp    ecx,eax
  4125d2:	test   BYTE PTR [ebp+0x42],bl
  4125d5:	add    ebp,esp
  4125d7:	add    ecx,ecx
  4125d9:	pop    edi
  4125da:	mov    al,0x52
  4125dc:	je     0x41257d
  4125de:	xor    DWORD PTR [ebx+0x1c],edi
  4125e1:	mov    ebp,0x76b0faae
  4125e6:	mov    DWORD PTR ds:[ebp+ebx*1+0x47d9fb8c],esi
  4125ee:	bound  eax,QWORD PTR [ecx+0x3d]
  4125f1:	mov    ah,0xe4
  4125f3:	and    al,0x8e
  4125f5:	mov    ebp,DWORD PTR [ecx]
  4125f7:	sbb    al,0x78
  4125f9:	loope  0x4125ea
  4125fb:	aas    
  4125fc:	fwait
  4125fd:	mov    ds:0xf35fcda3,al
  412602:	cwde   
  412603:	or     al,0x42
  412605:	mov    ds:0x425e37dd,al
  41260a:	popf   
  41260b:	sub    DWORD PTR [eax+0x3f],eax
  41260e:	mov    WORD PTR [eax-0x75fc0404],gs
  412614:	mov    ecx,0x757cb59e
  412619:	jns    0x4125e2
  41261b:	daa    
  41261c:	xchg   edx,eax
  41261d:	jecxz  0x412613
  41261f:	mov    ebp,DWORD PTR [edi-0x9]
  412622:	xchg   esi,eax
  412623:	jbe    0x60d6f8cf
  412629:	inc    ebp
  41262a:	ins    BYTE PTR es:[edi],dx
  41262b:	pop    esp
  41262c:	lock cmp ebx,DWORD PTR [edi+0x5f]
  412630:	stos   BYTE PTR es:[edi],al
  412631:	cmp    al,0x81
  412633:	aad    0x9f
  412635:	cmp    BYTE PTR [ebp-0x3fed4fe2],ah
  41263b:	mov    WORD PTR [edi+ebp*1],?
  41263e:	sbb    BYTE PTR [esi-0x6],dh
  412641:	js     0x412630
  412643:	aaa    
  412644:	imul   eax,DWORD PTR [edx+0x36],0x3d9d4a8d
  41264b:	aaa    
  41264c:	ins    DWORD PTR es:[edi],dx
  41264d:	(bad)  
  41264e:	loopne 0x41264f
  412650:	adc    al,0x9e
  412652:	xchg   ebx,eax
  412653:	or     bl,al
  412655:	xchg   ecx,eax
  412656:	adc    DWORD PTR [ecx-0x35a4d38e],esp
  41265c:	jmp    0x1f36208d
  412661:	jnp    0x412606
  412663:	jb     0x4126d5
  412665:	and    eax,0xe0eecf4a
  41266a:	and    DWORD PTR [eax+0x65651c32],ebx
  412670:	xlat   BYTE PTR ds:[ebx]
  412671:	jmp    0xc616:0x647864f5
  412678:	leave  
  412679:	scas   al,BYTE PTR es:[edi]
  41267a:	loop   0x41264c
  41267c:	sub    eax,0x1ca2b7a2
  412681:	repnz repz les ecx,FWORD PTR [eax+esi*1-0x63011cf8]
  41268a:	ds imul esi,esi,0x488011f
  412691:	dec    ecx
  412692:	sub    cl,0x59
  412695:	xchg   ecx,eax
  412696:	add    DWORD PTR ds:0x94020b6a,ebp
  41269c:	ret    
  41269d:	nop
  41269e:	stos   BYTE PTR es:[edi],al
  41269f:	scas   al,BYTE PTR es:[edi]
  4126a0:	cmp    DWORD PTR ds:0x428f96c9,ecx
  4126a6:	mov    dh,0x18
  4126a8:	loopne 0x4126af
  4126aa:	or     DWORD PTR [ecx],ecx
  4126ac:	stc    
  4126ad:	icebp  
  4126ae:	clc    
  4126af:	popf   
  4126b0:	inc    esp
  4126b1:	icebp  
  4126b2:	mov    eax,0xef17737f
  4126b7:	ror    BYTE PTR [esi+0x5a],0x86
  4126bb:	fwait
  4126bc:	sub    DWORD PTR [ebx+edi*8],0x6d689945
  4126c3:	xchg   esp,eax
  4126c4:	in     al,dx
  4126c5:	(bad)  
  4126c6:	jmp    0x7d18:0x4e774545
  4126cd:	outs   dx,DWORD PTR ds:[esi]
  4126ce:	fdivr  DWORD PTR [ebp-0x6e458d2a]
  4126d4:	inc    ebx
  4126d5:	hlt    
  4126d6:	push   esp
  4126d7:	ss add bh,al
  4126da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126db:	or     esi,DWORD PTR [edi]
  4126dd:	repz call 0xf080:0x9fb76933
  4126e5:	test   DWORD PTR [edx-0xf],edx
  4126e8:	lods   al,BYTE PTR ds:[esi]
  4126e9:	cmc    
  4126ea:	popa   
  4126eb:	sbb    al,0x7a
  4126ed:	les    ebp,FWORD PTR [ebx+eax*4-0x69]
  4126f1:	mov    esi,ecx
  4126f3:	std    
  4126f4:	xor    al,0x29
  4126f6:	scas   al,BYTE PTR es:[edi]
  4126f7:	mov    es,WORD PTR [edi+0x7d]
  4126fa:	mov    esp,0x499d7753
  4126ff:	adc    al,0xaf
  412701:	push   ss
  412702:	lods   al,BYTE PTR ds:[esi]
  412703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412704:	iret   
  412705:	out    0x87,eax
  412707:	or     BYTE PTR [ebx+0x41],dl
  41270a:	dec    esi
  41270b:	xchg   ebp,eax
  41270c:	jge    0x412754
  41270e:	aad    0xaf
  412710:	pop    esp
  412711:	das    
  412712:	out    dx,al
  412713:	cli    
  412714:	outs   dx,BYTE PTR ds:[esi]
  412715:	(bad)  
  412716:	and    al,0x90
  412718:	push   ebx
  412719:	pop    es
  41271a:	or     cl,bl
  41271c:	xchg   DWORD PTR [ebp+edi*2+0x5],edx
  412720:	xchg   dh,dh
  412722:	retf   0x9055
  412725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412726:	hlt    
  412727:	push   esp
  412728:	add    BYTE PTR [esp+ebx*1-0x2e],0x4
  41272d:	data16 mov cl,0xfe
  412730:	push   ss
  412731:	xor    esi,DWORD PTR [ebp+0x55]
  412734:	cmp    ah,BYTE PTR [esi-0x7464a9ea]
  41273a:	rcr    BYTE PTR [edx],0x67
  41273d:	(bad)  
  41273e:	cs push esi
  412740:	inc    eax
  412741:	test   al,0x61
  412743:	inc    ebx
  412744:	data16 jns 0x412726
  412747:	pop    eax
  412748:	jp     0x412783
  41274a:	shl    DWORD PTR [edx+0x13936aa0],0xe5
  412751:	and    ebx,DWORD PTR [ebx+0x20a8d4df]
  412757:	stc    
  412758:	(bad)  
  412759:	loop   0x4127b5
  41275b:	retf   0xe102
  41275e:	outs   dx,BYTE PTR ds:[esi]
  41275f:	std    
  412760:	xor    BYTE PTR [edx],ah
  412762:	retf   
  412763:	jmp    0x412747
  412765:	ins    BYTE PTR es:[edi],dx
  412766:	int    0x82
  412768:	cmp    ch,BYTE PTR [edx+0x6a6db19e]
  41276e:	aam    0x57
  412770:	mov    es,WORD PTR [ebx-0x4cb20ea6]
  412776:	push   ebx
  412777:	adc    ah,ah
  412779:	push   edi
  41277a:	scas   al,BYTE PTR es:[edi]
  41277b:	mov    ebx,0x82e9781f
  412780:	add    BYTE PTR [ebx+eax*8-0xc],bh
  412784:	ret    
  412785:	sub    esi,edx
  412787:	retf   0xdd69
  41278a:	pop    eax
  41278b:	leave  
  41278c:	pop    ecx
  41278d:	jl     0x4127ee
  41278f:	sub    al,0x38
  412791:	in     al,0xd7
  412793:	sub    BYTE PTR [esi-0x7c],0xd9
  412797:	push   edi
  412798:	es inc esp
  41279a:	inc    edx
  41279b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41279c:	shl    DWORD PTR [ebx*4+0x64219883],1
  4127a3:	in     al,dx
  4127a4:	mov    ah,0x43
  4127a6:	int    0x8d
  4127a8:	dec    ebp
  4127a9:	sub    eax,0xe154fca2
  4127ae:	mov    cl,0xd4
  4127b0:	push   0xfffffff4
  4127b2:	adc    al,0xf9
  4127b4:	adc    al,BYTE PTR [esi]
  4127b6:	jnp    0x412778
  4127b8:	mov    al,0xc
  4127ba:	fwait
  4127bb:	xchg   ebx,eax
  4127bc:	xchg   edx,eax
  4127bd:	jmp    0x4ab16e6
  4127c2:	mov    ecx,0x493834c9
  4127c7:	aad    0x6d
  4127c9:	int    0x60
  4127cb:	mov    eax,0xb6e59524
  4127d0:	xor    edx,eax
  4127d2:	and    ch,BYTE PTR [ebp+0x1b80ac87]
  4127d8:	jecxz  0x4127a9
  4127da:	test   ebx,ecx
  4127dc:	sbb    ch,BYTE PTR [ebx]
  4127de:	test   BYTE PTR [ebp+0x5eec568f],dh
  4127e4:	cmp    BYTE PTR ds:0x1078e37,dl
  4127ea:	ret    
  4127eb:	push   ebp
  4127ec:	test   eax,0x2410bced
  4127f1:	enter  0x450,0x41
  4127f5:	frstor [ecx+0x59af82]
  4127fb:	fiadd  WORD PTR [edi+0xc]
  4127fe:	repnz mov ah,0xe
  412801:	sahf   
  412802:	aas    
  412803:	ja     0x41279f
  412805:	xchg   edi,eax
  412806:	inc    edx
  412807:	fiadd  DWORD PTR [eax+0x30a4e94b]
  41280d:	pop    ss
  41280e:	push   ebp
  41280f:	sbb    dh,bl
  412811:	cmp    DWORD PTR [ebx],0x2d
  412814:	xchg   esi,eax
  412815:	adc    eax,ebp
  412817:	sub    esp,DWORD PTR ds:0x7639bfd8
  41281d:	mov    ah,0xf8
  41281f:	es nop
  412821:	aad    0x78
  412823:	and    ebx,DWORD PTR [eax+0x457fb3f]
  412829:	add    dh,cl
  41282b:	repnz iret 
  41282d:	(bad)  
  41282e:	arpl   WORD PTR [esi+0x66],ax
  412831:	mov    edi,0xb0c70559
  412836:	mov    bh,0x9e
  412838:	loopne 0x412831
  41283a:	jmp    0x1523bbfc
  41283f:	in     eax,0x7
  412841:	dec    eax
  412842:	fbld   TBYTE PTR [ebx]
  412844:	cmp    ah,BYTE PTR [ebx+eiz*8]
  412847:	outs   dx,DWORD PTR ds:[esi]
  412848:	sbb    BYTE PTR [ecx+0x4c8c97fb],dl
  41284e:	shl    BYTE PTR [bp-0x2d],cl
  412852:	out    dx,al
  412853:	jg     0x412832
  412855:	pop    ecx
  412856:	xor    eax,0x732c531c
  41285b:	xchg   edx,eax
  41285c:	pop    esp
  41285d:	sbb    DWORD PTR cs:[edi],0xa5e55699
  412864:	daa    
  412865:	jmp    0x412843
  412867:	jmp    0x190c7fae
  41286c:	mov    ecx,0xbcb8de29
  412871:	add    BYTE PTR [edx+eax*8-0x76f32a0e],bl
  412878:	icebp  
  412879:	add    bl,BYTE PTR [ebx-0x53]
  41287c:	jmp    0x412859
  41287e:	xor    BYTE PTR [ebx],al
  412880:	mov    esi,0x603d098f
  412885:	call   0x3bc6cfe8
  41288a:	jae    0x4128d2
  41288c:	ret    0x57ac
  41288f:	aam    0x7b
  412891:	repz jno 0x41282b
  412894:	jmp    0x5a21:0x7a2674b1
  41289b:	pop    eax
  41289c:	sahf   
  41289d:	inc    ebx
  41289e:	push   edx
  41289f:	es ss jp 0x4128f5
  4128a3:	inc    edx
  4128a4:	shl    BYTE PTR [ebx+0x4c],cl
  4128a7:	cmp    al,al
  4128a9:	test   DWORD PTR [ecx-0x22],0x6469d672
  4128b0:	dec    ebp
  4128b1:	mov    bl,0x49
  4128b3:	shl    bl,cl
  4128b5:	idiv   BYTE PTR [edx+0x47990dfe]
  4128bb:	mov    DWORD PTR [esi+eax*1+0x73],edx
  4128bf:	call   0xefea08b8
  4128c4:	jns    0x412860
  4128c6:	fidiv  DWORD PTR [ebx-0x1750e0ec]
  4128cc:	shl    esp,cl
  4128ce:	aas    
  4128cf:	cli    
  4128d0:	dec    ebx
  4128d1:	in     al,0xf2
  4128d3:	and    cl,BYTE PTR [ecx-0x666d2f4e]
  4128d9:	out    dx,eax
  4128da:	stos   BYTE PTR es:[edi],al
  4128db:	xor    eax,0x2f3d9818
  4128e0:	sub    eax,0x40d0107a
  4128e5:	sub    ah,al
  4128e7:	std    
  4128e8:	add    eax,0xa1866e41
  4128ed:	adc    ebp,DWORD PTR [ebx-0x73a10bf0]
  4128f3:	pusha  
  4128f4:	mov    fs,WORD PTR [ebp-0x447339b9]
  4128fa:	clc    
  4128fb:	push   cs
  4128fc:	xor    eax,0xf696026
  412901:	mov    BYTE PTR [edx+edi*1],ch
  412904:	push   ss
  412905:	push   ebx
  412906:	dec    ebx
  412907:	test   al,0x71
  412909:	mov    dl,0x90
  41290b:	xor    eax,0x19a18090
  412910:	or     eax,edi
  412912:	test   eax,0x1a647592
  412917:	lock jno 0x4128a0
  41291a:	test   eax,0xa97be700
  41291f:	dec    eax
  412920:	inc    edx
  412921:	popf   
  412922:	iret   
  412923:	lods   al,BYTE PTR ds:[esi]
  412924:	ror    eax,cl
  412926:	pop    edi
  412927:	mov    cl,0x52
  412929:	das    
  41292a:	loope  0x41290d
  41292c:	xor    DWORD PTR [esi-0x73],esp
  41292f:	sahf   
  412930:	and    ebp,esp
  412932:	sar    dh,cl
  412934:	inc    edx
  412935:	(bad)  
  412936:	sub    al,0xeb
  412938:	xchg   edx,eax
  412939:	fldcw  WORD PTR [ecx]
  41293b:	mov    dl,0xc4
  41293d:	fistp  QWORD PTR [edx+0x7c8ce5d8]
  412943:	test   al,0xd5
  412945:	or     DWORD PTR [esi+0x436f4c4c],ebx
  41294b:	mov    eax,0x3d263b47
  412950:	call   0xc9c84b8e
  412955:	test   ebx,0x2cd531c9
  41295b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41295c:	into   
  41295d:	outs   dx,DWORD PTR ds:[esi]
  41295e:	aam    0x62
  412960:	pop    ebx
  412961:	mov    ds:0x48d11d7c,eax
  412966:	pop    ds
  412967:	test   DWORD PTR [edi+0x773b74c],edx
  41296d:	sahf   
  41296e:	cli    
  41296f:	pop    ebp
  412970:	dec    esi
  412971:	jmp    0x7b2b41bd
  412976:	cmp    eax,0x94875f43
  41297b:	sub    al,0x8b
  41297d:	or     ebp,esi
  41297f:	xchg   ebp,eax
  412980:	loope  0x412a01
  412982:	mov    ds:0xf015ed5f,al
  412987:	mov    esp,0x9b2260db
  41298c:	mov    edx,0x7c8ec12e
  412991:	call   0xd5e90b84
  412996:	and    ah,0xab
  412999:	leave  
  41299a:	pusha  
  41299b:	pushf  
  41299c:	in     eax,dx
  41299d:	jae    0x41293c
  41299f:	push   ds
  4129a0:	fsub   DWORD PTR [eax]
  4129a2:	jno    0x41292d
  4129a4:	rol    al,0xac
  4129a7:	fnstcw WORD PTR [edx-0x3e456d11]
  4129ad:	dec    ecx
  4129ae:	clc    
  4129af:	pop    ebp
  4129b0:	jp     0x4129d1
  4129b2:	loopne 0x412961
  4129b4:	jbe    0x412a2d
  4129b6:	xchg   ecx,eax
  4129b7:	mov    eax,ds:0xcb6b32ba
  4129bc:	loop   0x4129d3
  4129be:	cmp    BYTE PTR [ebp+0x66],bl
  4129c1:	sbb    DWORD PTR [ebx],esp
  4129c3:	mov    edi,0xeca89bbb
  4129c8:	jle    0x4129d4
  4129ca:	pop    ebp
  4129cb:	into   
  4129cc:	(bad)  
  4129cd:	sti    
  4129ce:	test   dl,0x88
  4129d1:	shl    DWORD PTR cs:[edi+0x3c63ac78],1
  4129d8:	mov    al,0x3f
  4129da:	je     0x412960
  4129dc:	hlt    
  4129dd:	(bad)  [edx-0x3e1f0a5c]
  4129e3:	add    BYTE PTR [ebx+0x29df2f46],dh
  4129e9:	jmp    0x412a06
  4129eb:	mov    dl,0x17
  4129ed:	(bad)  
  4129ee:	sub    al,0x21
  4129f0:	gs dec edi
  4129f2:	out    dx,eax
  4129f3:	pop    ebp
  4129f4:	into   
  4129f5:	mov    ds:0x7c7b8403,eax
  4129fa:	rol    DWORD PTR [edx],0x4e
  4129fd:	stos   DWORD PTR es:[edi],eax
  4129fe:	pop    edx
  4129ff:	jns    0x412a5b
  412a01:	jae    0x412a35
  412a03:	mov    ebp,0x4cfc6475
  412a08:	stos   BYTE PTR es:[edi],al
  412a09:	jge    0x412a02
  412a0b:	dec    eax
  412a0c:	jne    0x4129bb
  412a0e:	clc    
  412a0f:	mov    al,BYTE PTR [ebx]
  412a11:	sub    DWORD PTR [ebp-0x3c9d1cf2],0xa4442c8d
  412a1b:	and    BYTE PTR [edx+0x7c308a43],dl
  412a21:	jne    0x412a42
  412a23:	arpl   si,bx
  412a25:	and    ebp,DWORD PTR [eax-0x1091442e]
  412a2b:	test   eax,0xabce3c9b
  412a30:	sub    BYTE PTR [eax],cl
  412a32:	outs   dx,DWORD PTR ds:[esi]
  412a33:	iret   
  412a34:	pop    edx
  412a35:	not    ebp
  412a37:	out    0xd5,al
  412a39:	or     ecx,DWORD PTR [ebp+0x3406f670]
  412a3f:	(bad)  
  412a40:	and    eax,0x8e166fab
  412a45:	adc    DWORD PTR ds:0x7fb1d210,esi
  412a4b:	retf   
  412a4c:	add    DWORD PTR es:[edx],eax
  412a4f:	cmp    eax,DWORD PTR [eax]
  412a51:	pop    ecx
  412a52:	(bad)  
  412a53:	loopne 0x412a83
  412a55:	sub    DWORD PTR [ebp-0x51],ecx
  412a58:	in     eax,0xa5
  412a5a:	pop    ebx
  412a5b:	pop    ss
  412a5c:	and    BYTE PTR [esi],ah
  412a5e:	mov    ds:0xd11a9996,al
  412a63:	add    ah,BYTE PTR [edi]
  412a65:	scas   eax,DWORD PTR es:[edi]
  412a66:	dec    eax
  412a67:	add    eax,0x7e696961
  412a6c:	mov    al,ds:0xb0c3985d
  412a71:	jb     0x412ae3
  412a73:	stos   DWORD PTR es:[edi],eax
  412a74:	push   0x75b72ad0
  412a79:	push   0xa83da48b
  412a7e:	clc    
  412a7f:	int    0x84
  412a81:	cmp    al,dl
  412a83:	(bad)  
  412a84:	frstor [esi]
  412a86:	push   es
  412a87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a88:	addr16 nop
  412a8a:	xor    bl,BYTE PTR cs:[ebp-0x14fcb05d]
  412a91:	lods   al,BYTE PTR ds:[esi]
  412a92:	add    ebp,esi
  412a94:	mov    esp,DWORD PTR [eax+0x17]
  412a97:	loop   0x412a2f
  412a99:	mov    cl,0x9
  412a9b:	cwde   
  412a9c:	xor    DWORD PTR [ebx+0x1a2dbc08],ecx
  412aa2:	arpl   WORD PTR [edx+0x12a7a67],si
  412aa8:	fisub  DWORD PTR [ebp+0x45]
  412aab:	fwait
  412aac:	or     dl,dh
  412aae:	(bad)  
  412aaf:	fistp  WORD PTR [esi+0x3c]
  412ab2:	cdq    
  412ab3:	daa    
  412ab4:	call   0xd890:0xab10e2bb
  412abb:	gs loopne 0x412a73
  412abe:	pop    eax
  412abf:	adc    eax,0xb9e1932e
  412ac4:	rcl    edx,1
  412ac6:	ins    DWORD PTR es:[edi],dx
  412ac7:	lds    eax,FWORD PTR [edx+ebx*8-0x75]
  412acb:	sti    
  412acc:	dec    edx
  412acd:	mov    al,ds:0xfc4a200a
  412ad2:	mov    ecx,0x381e3ba9
  412ad7:	xor    DWORD PTR [ecx],0xffffffea
  412ada:	xor    BYTE PTR [edi-0x10e12ca0],al
  412ae0:	pop    ebp
  412ae1:	add    al,0xe4
  412ae3:	mov    ds:0xa6a4cb3f,al
  412ae8:	xor    ebx,DWORD PTR [ecx-0x57ac2b74]
  412aee:	cmc    
  412aef:	adc    eax,0x2ccf3919
  412af4:	mov    ah,0x52
  412af6:	(bad)  
  412af7:	xchg   ebx,eax
  412af8:	fistp  WORD PTR [ecx+eax*2+0x7]
  412afc:	retf   0xebb8
  412aff:	dec    ebp
  412b00:	popa   
  412b01:	imul   esi,esp,0xab26c3e7
  412b07:	xchg   esp,eax
  412b08:	mov    ds:0x8109fbc2,eax
  412b0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b0e:	jle    0x412b1c
  412b10:	jb     0x412ae0
  412b12:	sub    esi,esi
  412b14:	mov    bl,0xd9
  412b16:	imul   edx,DWORD PTR [edi],0x3
  412b19:	push   esi
  412b1a:	call   0xcff9:0x9ee3dcc2
  412b21:	scas   eax,DWORD PTR es:[edi]
  412b22:	mov    ds:0x4700c154,al
  412b27:	fwait
  412b28:	cwde   
  412b29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b2a:	loope  0x412aeb
  412b2c:	pop    ebx
  412b2d:	sbb    esp,DWORD PTR [eax]
  412b2f:	cmp    DWORD PTR [ecx+0x39],ebx
  412b32:	xchg   esp,eax
  412b33:	push   esi
  412b34:	pop    ecx
  412b35:	loop   0x412af3
  412b37:	push   ss
  412b38:	mov    ecx,0x17877690
  412b3d:	clc    
  412b3e:	loope  0x412ad3
  412b40:	fwait
  412b41:	add    cl,ah
  412b43:	adc    ah,BYTE PTR [eax-0xa2eafc1]
  412b49:	or     eax,0x68e511e7
  412b4e:	mul    esp
  412b50:	mov    bh,0xee
  412b52:	adc    al,0x45
  412b54:	mov    bl,0x37
  412b56:	pusha  
  412b57:	and    al,0xa7
  412b59:	stc    
  412b5a:	xor    DWORD PTR [edi],0x72192ebe
  412b60:	or     DWORD PTR [ebx-0x660cbdf5],ebp
  412b66:	mov    al,0xcb
  412b68:	fmul   DWORD PTR ss:[edx+0x1b]
  412b6c:	cmp    BYTE PTR [esi+0x59ccfabc],ch
  412b72:	add    DWORD PTR [ebx+0x6a],eax
  412b75:	neg    DWORD PTR [ecx]
  412b77:	sub    BYTE PTR [ecx],bh
  412b79:	in     al,0xaa
  412b7b:	and    al,0x91
  412b7d:	mov    eax,ds:0xe17b7d36
  412b82:	add    dl,BYTE PTR [ecx]
  412b84:	mov    bh,0x47
  412b86:	xor    eax,DWORD PTR [edx+0x78]
  412b89:	inc    eax
  412b8a:	or     eax,0xf28621fc
  412b8f:	iret   
  412b90:	inc    edi
  412b91:	mov    edx,0xd55720ac
  412b96:	dec    edi
  412b97:	sub    dh,BYTE PTR [ebx+0x16]
  412b9a:	cld    
  412b9b:	hlt    
  412b9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b9d:	push   ss
  412b9e:	mov    bl,BYTE PTR [esi+ecx*8-0x686cbeca]
  412ba5:	and    BYTE PTR [edx],0x82
  412ba8:	and    al,0xed
  412baa:	sbb    eax,0x3ff7b72b
  412baf:	ja     0x412b3d
  412bb1:	leave  
  412bb2:	shl    BYTE PTR [ecx+0x61af0df2],1
  412bb8:	pop    esp
  412bb9:	jns    0x412c33
  412bbb:	cs test eax,0xc7125bc
  412bc1:	dec    edx
  412bc2:	in     al,0x9d
  412bc4:	(bad)  
  412bc5:	sub    edx,DWORD PTR [ebx+0x57ed8109]
  412bcb:	iret   
  412bcc:	enter  0xea6c,0xb4
  412bd0:	pop    edi
  412bd1:	adc    BYTE PTR [eax-0x5633400e],cl
  412bd7:	sub    edi,DWORD PTR [eax+0x23]
  412bda:	jnp    0x412bf9
  412bdc:	fs test al,0x18
  412bdf:	or     BYTE PTR [edx-0x2e],cl
  412be2:	sar    dh,1
  412be4:	enter  0xddca,0x2
  412be8:	jne    0x412c17
  412bea:	pushf  
  412beb:	cmp    al,0x8a
  412bed:	pop    eax
  412bee:	loopne 0x412c14
  412bf0:	jns    0x412be3
  412bf2:	fcomp  st(2)
  412bf4:	and    BYTE PTR [ebx],ah
  412bf6:	adc    ah,bh
  412bf8:	pop    edi
  412bf9:	add    eax,0xe8be9d6c
  412bfe:	lods   eax,DWORD PTR gs:[esi]
  412c00:	or     DWORD PTR [esi-0x76bdc5da],edx
  412c06:	adc    ecx,DWORD PTR [eax+edx*2-0x6e6ad335]
  412c0d:	sbb    BYTE PTR ds:0x6c8dced2,al
  412c13:	inc    esp
  412c14:	mul    WORD PTR [esi-0x29579da9]
  412c1b:	xor    eax,0x4101ed21
  412c20:	nop
  412c21:	xchg   esp,eax
  412c22:	push   esp
  412c23:	lods   eax,DWORD PTR ds:[esi]
  412c24:	xchg   edx,eax
  412c25:	dec    esi
  412c26:	stc    
  412c27:	dec    eax
  412c28:	mov    eax,0x3ff4cc9c
  412c2d:	dec    ebp
  412c2e:	jo     0x412caa
  412c30:	or     BYTE PTR [esi],ch
  412c32:	push   cs
  412c33:	loopne 0x412bc7
  412c35:	inc    edi
  412c36:	mov    ch,0x3f
  412c38:	jnp    0x412c14
  412c3a:	pushf  
  412c3b:	push   es
  412c3c:	fld    DWORD PTR [edx-0x7b]
  412c3f:	lods   eax,DWORD PTR ds:[esi]
  412c40:	add    ch,cl
  412c42:	mov    al,ds:0xd2ae1b68
  412c47:	sbb    BYTE PTR [edi-0x58],ch
  412c4a:	dec    esi
  412c4b:	xchg   edx,eax
  412c4c:	cmp    ah,cl
  412c4e:	das    
  412c4f:	leave  
  412c50:	fisttp DWORD PTR [edx]
  412c52:	jge    0x412c89
  412c54:	cmp    al,0xfa
  412c56:	nop
  412c57:	iret   
  412c58:	pop    esi
  412c59:	mov    ebx,ebx
  412c5b:	jmp    0xf0627602
  412c60:	imul   eax
  412c62:	fimul  WORD PTR ds:0x444707b4
  412c68:	jmp    0x7439:0x99d11569
  412c6f:	sub    DWORD PTR [edx],ebx
  412c71:	test   eax,0x2c92ab39
  412c76:	outs   dx,BYTE PTR ds:[esi]
  412c77:	call   0x42881980
  412c7c:	test   DWORD PTR [edx+0x25],ecx
  412c7f:	jne    0x412c86
  412c81:	jl     0x412cfe
  412c83:	mov    esi,DWORD PTR [ecx-0x34fbbed3]
  412c89:	call   0x6cd1e728
  412c8e:	in     eax,dx
  412c8f:	je     0x412c3c
  412c91:	mov    esi,0xbadc81ed
  412c96:	mov    ecx,0x19f74ead
  412c9b:	pushf  
  412c9c:	ret    0xa72e
  412c9f:	aam    0x59
  412ca1:	imul   ebp,DWORD PTR [edx+eiz*4+0x13],0xf85a0826
  412ca9:	xor    al,0xa3
  412cab:	cmc    
  412cac:	fst    QWORD PTR [esi+ecx*8+0x72]
  412cb0:	test   DWORD PTR [edx+ecx*8+0x51f71aaa],ebp
  412cb7:	jecxz  0x412cb8
  412cb9:	aas    
  412cba:	inc    BYTE PTR [ecx-0x3d]
  412cbd:	jge    0x412d06
  412cbf:	xor    ebp,eax
  412cc1:	ret    
  412cc2:	and    al,0xb6
  412cc4:	fs pop ebx
  412cc6:	sub    DWORD PTR [edi-0x30d0f88d],edi
  412ccc:	pop    esp
  412ccd:	icebp  
  412cce:	stos   DWORD PTR es:[edi],eax
  412ccf:	out    dx,al
  412cd0:	or     al,0xae
  412cd2:	xchg   edi,eax
  412cd3:	sbb    eax,DWORD PTR [ecx+0x7d]
  412cd6:	xor    bh,al
  412cd8:	nop
  412cd9:	and    esp,eax
  412cdb:	leave  
  412cdc:	cli    
  412cdd:	leave  
  412cde:	or     BYTE PTR [ebp-0x76345dc8],ch
  412ce4:	add    esi,esp
  412ce6:	push   edx
  412ce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ce8:	dec    eax
  412ce9:	stos   BYTE PTR es:[edi],al
  412cea:	out    dx,al
  412ceb:	pop    ebx
  412cec:	pusha  
  412ced:	pop    edx
  412cee:	stos   BYTE PTR es:[edi],al
  412cef:	sbb    al,0x9d
  412cf1:	mov    ds:0x32c44ebc,al
  412cf6:	jg     0x412d64
  412cf8:	or     al,0x86
  412cfa:	xor    ebp,DWORD PTR [edx]
  412cfc:	icebp  
  412cfd:	sub    esp,DWORD PTR [ebx]
  412cff:	xchg   ebx,eax
  412d00:	xchg   BYTE PTR [esi+0xc3e00e9],cl
  412d06:	sbb    BYTE PTR [eax+0x190b1d2c],bl
  412d0c:	jl     0x412d4b
  412d0e:	sub    al,0x99
  412d10:	jns    0x412c99
  412d12:	bound  esp,QWORD PTR [edx]
  412d14:	pop    esp
  412d15:	sbb    eax,0x66812396
  412d1a:	aaa    
  412d1b:	fwait
  412d1c:	add    DWORD PTR [ecx-0x1e],ebp
  412d1f:	inc    esi
  412d20:	in     eax,0x76
  412d22:	outs   dx,DWORD PTR ds:[esi]
  412d23:	cmp    BYTE PTR [ebx+0x3d],ch
  412d26:	mov    BYTE PTR [ecx-0x28813eb3],dh
  412d2c:	imul   esi,edx,0x5bd486b0
  412d32:	shr    dl,0x56
  412d35:	inc    esi
  412d36:	aaa    
  412d37:	test   edx,edx
  412d39:	mov    ch,0x34
  412d3b:	loop   0x412d9c
  412d3d:	push   es
  412d3e:	imul   esp,DWORD PTR [ebx+edi*1],0x3a
  412d42:	inc    ecx
  412d43:	adc    DWORD PTR [eax],esi
  412d45:	int    0xb2
  412d47:	bound  eax,QWORD PTR [ebp+0x56]
  412d4a:	fstp   DWORD PTR [edi+0x2b]
  412d4d:	stos   DWORD PTR es:[edi],eax
  412d4e:	cli    
  412d4f:	ins    BYTE PTR es:[edi],dx
  412d50:	xchg   ebx,eax
  412d51:	dec    ecx
  412d52:	push   edi
  412d53:	pop    ebp
  412d54:	rol    BYTE PTR [eax-0x12],1
  412d57:	mov    edi,0x93257495
  412d5c:	jno    0x412ddb
  412d5e:	sbb    DWORD PTR [ebp-0x2],esi
  412d61:	in     al,0x2b
  412d63:	xor    eax,0x8249e971
  412d68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d69:	jno    0x412d8a
  412d6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d6c:	int3   
  412d6d:	inc    edi
  412d6e:	(bad)  
  412d6f:	fs out 0x6,eax
  412d72:	loopne 0x412d8b
  412d74:	dec    eax
  412d75:	rcr    BYTE PTR [ebx],cl
  412d77:	and    ebp,DWORD PTR [eax+0x586e0c0c]
  412d7d:	mov    dl,0xb4
  412d7f:	mov    bh,0x3f
  412d81:	fwait
  412d82:	push   ss
  412d83:	scas   al,BYTE PTR es:[edi]
  412d84:	mov    esi,0x6002529
  412d89:	not    BYTE PTR [eax+ecx*8-0x79]
  412d8d:	add    DWORD PTR [ecx+0x65],edi
  412d90:	push   ss
  412d91:	(bad)  
  412d92:	je     0x412d46
  412d94:	pop    edx
  412d95:	mov    ch,0xeb
  412d97:	aas    
  412d98:	out    dx,al
  412d99:	cwde   
  412d9a:	lods   eax,DWORD PTR ds:[esi]
  412d9b:	mov    DWORD PTR [ebx-0x3b696f28],edx
  412da1:	repz pop ebp
  412da3:	neg    DWORD PTR [ebx]
  412da5:	in     eax,dx
  412da6:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412da8:	in     eax,dx
  412da9:	jno    0x412de4
  412dab:	cmp    al,0xd8
  412dad:	jmp    0x3a60e98d
  412db2:	xchg   ebx,eax
  412db3:	inc    edx
  412db4:	add    al,0x12
  412db6:	cdq    
  412db7:	call   0x2df08dc5
  412dbc:	int    0x90
  412dbe:	sar    DWORD PTR [edx+0x3cbdc4c1],1
  412dc4:	push   cs
  412dc5:	add    esi,edi
  412dc7:	or     BYTE PTR [edx+0x1],bl
  412dca:	dec    esp
  412dcb:	outs   dx,BYTE PTR ds:[esi]
  412dcc:	mov    ebx,0x55ff5d85
  412dd1:	dec    esp
  412dd2:	scas   al,BYTE PTR es:[edi]
  412dd3:	not    DWORD PTR [ebx+ebx*8-0x10975254]
  412dda:	(bad)  [edx]
  412ddc:	and    DWORD PTR [esi],0xc32b52f3
  412de2:	mov    al,ds:0xbc20f19b
  412de7:	push   cs
  412de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412de9:	std    
  412dea:	push   esp
  412deb:	xchg   edi,eax
  412dec:	xor    bl,BYTE PTR [edi+0x16132b51]
  412df2:	test   bl,bl
  412df4:	push   ecx
  412df5:	jns    0x412dc6
  412df7:	into   
  412df8:	and    al,0x4e
  412dfa:	ficom  WORD PTR [edi-0x69]
  412dfd:	and    DWORD PTR [eax+0x4b],ebp
  412e00:	push   esp
  412e01:	xor    DWORD PTR [eax-0x763ce891],0x5d
  412e08:	loop   0x412e3c
  412e0a:	xor    DWORD PTR ds:0xd2e20718,eax
  412e10:	dec    edi
  412e11:	xchg   ecx,eax
  412e12:	jmp    0x59ac:0x612be5a1
  412e19:	push   ds
  412e1a:	mov    eax,ds:0xb2bf2093
  412e1f:	das    
  412e20:	neg    DWORD PTR [edi+0x32a0445b]
  412e26:	mov    ds:0x408ea8,eax
  412e2b:	(bad)  
  412e2c:	xor    DWORD PTR [ebx-0xf04111],ebx
  412e32:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  412e34:	(bad)  
  412e35:	jmp    0x412dfe
  412e37:	out    0x93,al
  412e39:	jge    0x412ea3
  412e3b:	xchg   ebp,eax
  412e3c:	loopne 0x412e35
  412e3e:	jmp    0x412e6b
  412e40:	jo     0x412e20
  412e42:	dec    esp
  412e43:	(bad)  
  412e44:	int3   
  412e45:	xchg   BYTE PTR [edx],bh
  412e47:	mov    DWORD PTR [edx+0x7f],esp
  412e4a:	leave  
  412e4b:	adc    BYTE PTR [edx],ah
  412e4d:	or     BYTE PTR [eax+eiz*4+0x541e778f],cl
  412e54:	sbb    cl,BYTE PTR [edi]
  412e56:	push   eax
  412e57:	xor    BYTE PTR [edi+0x7b23981c],al
  412e5d:	mov    ecx,0xab666505
  412e62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e63:	jno    0x412e47
  412e65:	cwde   
  412e66:	push   cs
  412e67:	pop    eax
  412e68:	fldenv [edi-0xb6a3204]
  412e6e:	inc    esp
  412e6f:	aas    
  412e70:	or     eax,0x958b37bf
  412e75:	pop    ebx
  412e76:	scas   eax,DWORD PTR es:[edi]
  412e77:	cmp    bl,BYTE PTR [esi+0x48]
  412e7a:	push   edx
  412e7b:	cmc    
  412e7c:	xlat   BYTE PTR ds:[ebx]
  412e7d:	mov    eax,0x2952cf0b
  412e82:	or     edx,0xffffffb5
  412e85:	mov    edx,DWORD PTR [eax+0x3042a113]
  412e8b:	fs mov esi,0x64cb7603
  412e91:	or     al,dl
  412e93:	mov    edx,0xa143dad3
  412e98:	xor    BYTE PTR [ecx],0x67
  412e9b:	or     ch,BYTE PTR [edx+0x4fd97988]
  412ea1:	sbb    al,0xdf
  412ea3:	xor    DWORD PTR [eax],esp
  412ea5:	jge    0x412ed5
  412ea7:	lahf   
  412ea8:	cs stos DWORD PTR es:[edi],eax
  412eaa:	mov    eax,ds:0x6c556541
  412eaf:	xlat   BYTE PTR ds:[ebx]
  412eb0:	push   ecx
  412eb1:	enter  0x1a60,0x2c
  412eb5:	sub    ebx,DWORD PTR [esi-0x8]
  412eb8:	mov    dh,0x11
  412eba:	(bad)  
  412ebb:	call   0x1ec95a6f
  412ec0:	jecxz  0x412ee1
  412ec2:	sub    esi,DWORD PTR [ecx+0x70]
  412ec5:	adc    BYTE PTR [esi+0x1ce206e],dh
  412ecb:	pop    ds
  412ecc:	jno    0x412f2a
  412ece:	test   eax,0xaf71b248
  412ed3:	xchg   edx,eax
  412ed4:	fild   WORD PTR [esi+0xf54069e]
  412eda:	stos   BYTE PTR es:[edi],al
  412edb:	or     DWORD PTR [esi+0x6ec597be],0x7a98aacb
  412ee5:	mov    ch,0xf6
  412ee7:	push   esi
  412ee8:	pop    edx
  412ee9:	js     0x412f44
  412eeb:	(bad)  
  412eec:	fcmovnu st,st(7)
  412eee:	mov    edx,0xd7c31eee
  412ef3:	pop    ecx
  412ef4:	cld    
  412ef5:	js     0x412f10
  412ef7:	test   DWORD PTR [ebx-0x5f58769c],ebx
  412efd:	imul   ebp,DWORD PTR [edx+esi*1-0x77c7d266],0x9df44ee2
  412f08:	inc    eax
  412f09:	shl    BYTE PTR [ebx],cl
  412f0b:	lock sbb bh,BYTE PTR ds:0x4f18286a
  412f12:	adc    al,BYTE PTR [ebx-0x5fb47aa1]
  412f18:	and    eax,0x513887e3
  412f1d:	push   ss
  412f1e:	fucomp st(4)
  412f20:	jns    0x412ec1
  412f22:	cmc    
  412f23:	and    dh,BYTE PTR [esi+0x824fa52]
  412f29:	int3   
  412f2a:	mov    esi,0xb29ea08d
  412f2f:	adc    DWORD PTR [edx+0x375d677],ecx
  412f35:	jno    0x412f83
  412f37:	cwde   
  412f38:	ins    DWORD PTR es:[edi],dx
  412f39:	cmp    ebx,DWORD PTR [ebx-0x42]
  412f3c:	jae    0x412f3b
  412f3e:	cwde   
  412f3f:	and    dh,BYTE PTR [edi-0x1743774f]
  412f45:	stos   BYTE PTR es:[edi],al
  412f46:	stos   DWORD PTR es:[edi],eax
  412f47:	addr16 imul edx,ebx,0x5b4351bc
  412f4e:	inc    esi
  412f4f:	xor    esi,DWORD PTR [esi]
  412f51:	int3   
  412f52:	in     eax,dx
  412f53:	push   es
  412f54:	inc    edi
  412f55:	pop    edx
  412f56:	jp     0x412f01
  412f58:	mov    WORD PTR [ebp+0x76],?
  412f5b:	mov    al,0xea
  412f5d:	inc    edi
  412f5e:	xor    esp,DWORD PTR [ebp-0x5c]
  412f61:	out    0x26,al
  412f63:	push   esi
  412f64:	scas   eax,DWORD PTR es:[edi]
  412f65:	mov    bl,0x7f
  412f67:	mov    DWORD PTR [ecx],edx
  412f69:	push   eax
  412f6a:	popf   
  412f6b:	adc    eax,0x308b7bfc
  412f70:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  412f72:	inc    BYTE PTR [eax-0x430a8ecb]
  412f78:	sub    BYTE PTR [eax],dl
  412f7a:	fadd   st,st(6)
  412f7c:	out    dx,al
  412f7d:	dec    edi
  412f7e:	cmovl  esi,DWORD PTR [ebx+0x7a58d94f]
  412f85:	adc    ebx,DWORD PTR [edx-0x52]
  412f88:	data16 jns 0x412fab
  412f8b:	ja     0x412f8a
  412f8d:	add    DWORD PTR [esi+eax*8-0xd],esp
  412f91:	pop    edx
  412f92:	pop    ebp
  412f93:	dec    edi
  412f94:	ds inc ebp
  412f96:	fdivr  QWORD PTR [edi+eiz*2]
  412f99:	sbb    edi,DWORD PTR [ebx+0x5baefa38]
  412f9f:	xchg   ebp,eax
  412fa0:	xor    al,0x80
  412fa2:	int    0xe4
  412fa4:	outs   dx,BYTE PTR ds:[esi]
  412fa5:	sar    BYTE PTR [edi-0x3c],cl
  412fa8:	(bad)  [eax+0x7]
  412fab:	mul    BYTE PTR [ecx-0x506bf8e1]
  412fb1:	cmp    dl,0x70
  412fb4:	cmp    cl,BYTE PTR [eax-0x1f0ec88]
  412fba:	cmp    DWORD PTR [ebp+esi*4+0x5c],esp
  412fbe:	dec    esi
  412fbf:	push   edx
  412fc0:	dec    ebp
  412fc1:	add    eax,0x6a46c271
  412fc6:	outs   dx,BYTE PTR ds:[esi]
  412fc7:	mov    ah,0x90
  412fc9:	fiadd  WORD PTR [ecx+ebx*8+0x21]
  412fcd:	popa   
  412fce:	inc    edx
  412fcf:	aaa    
  412fd0:	pop    eax
  412fd1:	cli    
  412fd2:	mov    DWORD PTR [ebp+0x44],ebp
  412fd5:	sub    al,0x6a
  412fd7:	in     eax,dx
  412fd8:	(bad)  [eax]
  412fda:	add    esp,0xffffffaa
  412fdd:	lods   al,BYTE PTR ds:[esi]
  412fde:	inc    edi
  412fdf:	xchg   esp,eax
  412fe0:	ins    BYTE PTR es:[edi],dx
  412fe1:	cmp    al,0xbb
  412fe3:	repnz mov al,BYTE PTR [edi+0x69]
  412fe7:	or     al,0x63
  412fe9:	repnz pop ebp
  412feb:	aad    0x4d
  412fed:	mov    ?,edx
  412fef:	cmp    esi,DWORD PTR [esi-0x10]
  412ff2:	add    DWORD PTR [edi],ebx
  412ff4:	add    esp,ebx
  412ff6:	mov    dl,0x2a
  412ff8:	dec    edx
  412ff9:	and    DWORD PTR [ebp+0x31bc76b7],0xf514fc07
  413003:	xlat   BYTE PTR ds:[ebx]
  413004:	jp     0x412f91
  413006:	jnp    0x412fbb
  413008:	test   al,0x12
  41300a:	scas   al,BYTE PTR es:[edi]
  41300b:	lahf   
  41300c:	dec    esp
  41300d:	inc    esp
  41300e:	mov    gs,WORD PTR [edi+0x4ad3d430]
  413014:	cld    
  413015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413016:	push   0xffffffd0
  413018:	sbb    eax,0x3a9810a2
  41301d:	cmc    
  41301e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41301f:	fidiv  WORD PTR [edx+0x19]
  413022:	jns    0x413071
  413024:	js     0x412fa6
  413026:	jbe    0x413052
  413028:	mov    ecx,0xde531faa
  41302d:	mov    bh,0x29
  41302f:	clc    
  413030:	ror    DWORD PTR [eax-0x5f],1
  413033:	pop    ds
  413034:	pushf  
  413035:	(bad)  
  413037:	shr    DWORD PTR [ebp-0x40],1
  41303a:	(bad)  
  41303b:	cmp    al,0xb6
  41303d:	out    0x8b,eax
  41303f:	fs test eax,0xe4d13f1f
  413045:	daa    
  413046:	imul   bh
  413048:	test   eax,0x76401e52
  41304d:	cs stc 
  41304f:	pop    ds
  413050:	hlt    
  413051:	test   edx,ecx
  413053:	into   
  413054:	sbb    esi,DWORD PTR [ebp+0x28]
  413057:	mov    dh,BYTE PTR [eax]
  413059:	mov    eax,0xf9339a00
  41305e:	dec    ebp
  41305f:	jo     0x413075
  413061:	arpl   cx,si
  413063:	push   edi
  413064:	test   eax,ebp
  413066:	pop    ecx
  413067:	jmp    0xda58:0x9dfa16c7
  41306e:	pop    ecx
  41306f:	add    al,0x3c
  413071:	ror    DWORD PTR [ebp-0x67],cl
  413074:	xor    eax,0x5d8328d7
  413079:	push   cs
  41307a:	in     al,dx
  41307b:	ss fwait
  41307d:	pushf  
  41307e:	ds inc ecx
  413080:	mov    ah,0x2b
  413082:	or     al,dl
  413084:	lock in al,dx
  413086:	inc    eax
  413087:	aas    
  413088:	jne    0x41308c
  41308a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41308b:	add    edx,DWORD PTR [esp+eax*8-0x4d]
  41308f:	push   es
  413090:	dec    ebx
  413091:	mov    bl,0xe
  413093:	push   cs
  413094:	jg     0x413030
  413096:	mov    BYTE PTR [eax+0x7d607ed5],ah
  41309c:	loop   0x413103
  41309e:	aaa    
  41309f:	rcl    esi,0x29
  4130a2:	xor    DWORD PTR [edx+0x229c6d04],esp
  4130a8:	outs   dx,BYTE PTR ds:[esi]
  4130a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130aa:	fchs   
  4130ac:	xchg   ecx,eax
  4130ad:	ror    BYTE PTR [eax+0x9],0x45
  4130b1:	add    edi,DWORD PTR [eax+0x62]
  4130b4:	dec    edx
  4130b5:	retf   
  4130b6:	xor    bh,BYTE PTR [ebp+0x1]
  4130b9:	dec    ebx
  4130ba:	mov    esp,0x7ee2389a
  4130bf:	pop    ecx
  4130c0:	stos   BYTE PTR es:[edi],al
  4130c1:	push   edx
  4130c2:	xor    esp,DWORD PTR [esi-0x5e714b59]
  4130c8:	push   ss
  4130c9:	out    dx,al
  4130ca:	inc    ebp
  4130cb:	or     eax,0xc0277b6d
  4130d0:	mov    DWORD PTR [edx],0x25606745
  4130d6:	xchg   ebx,eax
  4130d7:	adc    dl,BYTE PTR [eax-0x590ede9f]
  4130dd:	push   eax
  4130de:	out    dx,eax
  4130df:	pop    esp
  4130e0:	(bad)  
  4130e1:	mov    esi,0xd549c47a
  4130e6:	test   eax,0xafad1c52
  4130eb:	loopne 0x413136
  4130ed:	shr    BYTE PTR [eax+0x23462026],1
  4130f3:	gs adc eax,0x334c379d
  4130f9:	or     eax,0x1e7f85f0
  4130fe:	add    ebp,DWORD PTR [edi+0x4b]
  413101:	jge    0x413140
  413103:	dec    ecx
  413104:	or     eax,edi
  413106:	jo     0x413108
  413108:	jnp    0x4130d4
  41310a:	pusha  
  41310b:	mov    bh,0x21
  41310d:	enter  0x31b2,0x8c
  413111:	push   ecx
  413112:	or     eax,edx
  413114:	or     DWORD PTR [eax],ebp
  413116:	push   0xffffffe0
  413118:	inc    ebx
  413119:	mov    ebx,0xaa4edb16
  41311e:	mov    al,0xf
  413120:	cmp    BYTE PTR [ecx-0x3e],cl
  413123:	retf   
  413124:	push   cs
  413125:	pop    ds
  413126:	loopne 0x4130ba
  413128:	jl     0x41317d
  41312a:	and    BYTE PTR [ebx-0xb],bl
  41312d:	sub    bh,cl
  41312f:	jae    0x41316c
  413131:	popf   
  413132:	jecxz  0x413189
  413134:	daa    
  413135:	push   DWORD PTR [esi-0x38]
  413138:	xor    al,0xf8
  41313a:	adc    DWORD PTR [eax],ebp
  41313c:	jb     0x4131a7
  41313e:	sub    BYTE PTR [edi-0x34],bh
  413141:	(bad)  
  413142:	add    eax,0x86ba18e7
  413147:	fcomp  st(4)
  413149:	add    eax,0x2f9f08a4
  41314e:	arpl   dx,cx
  413150:	jae    0x41315e
  413152:	repz in al,dx
  413154:	hlt    
  413155:	mov    DWORD PTR [edi],ebx
  413157:	sub    esp,DWORD PTR [edi-0x15ce38d9]
  41315d:	(bad)
  413160:	aam    0x28
  413162:	mov    bh,0x16
  413164:	mov    BYTE PTR [edi+0x5135a784],al
  41316a:	adc    eax,0xa1b990c8
  41316f:	inc    ebp
  413170:	xchg   edx,eax
  413171:	lds    eax,FWORD PTR [ecx]
  413173:	pusha  
  413174:	ss addr16 lahf 
  413177:	scas   eax,DWORD PTR es:[edi]
  413178:	jmp    0xdd63:0x2d5b86be
  41317f:	pop    ds
  413180:	test   DWORD PTR [ecx+0x364c3e63],0x254c3fa6
  41318a:	fsubr  st,st(2)
  41318c:	sub    dh,bh
  41318e:	(bad)  
  41318f:	sub    ch,al
  413191:	pop    eax
  413192:	popa   
  413193:	add    eax,0xe8ebbcd0
  413198:	or     dl,BYTE PTR [edx-0x2]
  41319b:	mov    edi,0x1a144705
  4131a0:	popf   
  4131a1:	fiadd  WORD PTR [edx-0x38]
  4131a4:	sbb    eax,0x94a3e1f7
  4131a9:	mov    ds:0xcf6c4791,eax
  4131ae:	test   eax,0x7a7e1c98
  4131b3:	push   esi
  4131b4:	sbb    dh,BYTE PTR [esi+0x3f]
  4131b7:	mov    ah,0xee
  4131b9:	adc    edi,DWORD PTR [edi-0x7dc0a5e2]
  4131bf:	sbb    dh,BYTE PTR [eax-0x20067ebd]
  4131c5:	in     eax,dx
  4131c6:	inc    edx
  4131c7:	imul   ebx,DWORD PTR [edi-0x1e],0x5a
  4131cb:	rcl    ebx,0x34
  4131ce:	sar    edx,cl
  4131d0:	sar    BYTE PTR [ebx+0x56],cl
  4131d3:	push   esp
  4131d4:	fadd   QWORD PTR [edi]
  4131d6:	xor    esi,DWORD PTR [ebx]
  4131d8:	mov    WORD PTR [edx-0x7e],fs
  4131db:	mov    ds:0x6032ffe9,al
  4131e0:	ret    0x80a4
  4131e3:	push   ecx
  4131e4:	lea    esp,[ebp-0x23]
  4131e7:	dec    edx
  4131e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131e9:	xor    al,0x1f
  4131eb:	dec    eax
  4131ec:	xlat   BYTE PTR ds:[ebx]
  4131ed:	ficom  DWORD PTR [ebx]
  4131ef:	mov    ds:0x46433891,eax
  4131f4:	scas   eax,DWORD PTR es:[edi]
  4131f5:	sub    edx,DWORD PTR [edx]
  4131f7:	push   0x676ba8d8
  4131fc:	jbe    0x413249
  4131fe:	mov    dh,0x75
  413200:	lahf   
  413201:	sbb    eax,0xd1ef4009
  413206:	cli    
  413207:	dec    edi
  413208:	int    0xda
  41320a:	add    ah,BYTE PTR [ebx+0x1e]
  41320d:	dec    edx
  41320e:	sub    al,0x56
  413210:	jmp    0x4131df
  413212:	xchg   edx,ebp
  413214:	mov    cl,0xb5
  413216:	sub    bh,BYTE PTR [esi+0x21598f42]
  41321c:	jmp    0xf15c:0xef76c771
  413223:	call   0x1a46:0x191d8ca4
  41322a:	call   0xcbbf:0x96d88bbe
  413231:	or     eax,0x1f2060ee
  413236:	add    al,0xbf
  413238:	xchg   esi,eax
  413239:	ss (bad) 
  41323b:	adc    esi,ebp
  41323d:	mov    ebp,0x9953e107
  413242:	les    edx,FWORD PTR [edx]
  413244:	jp     0x4131de
  413246:	xor    al,al
  413248:	xchg   edi,eax
  413249:	not    BYTE PTR [ecx+0x5425c7f7]
  41324f:	and    dl,BYTE PTR [ebx]
  413251:	cmp    eax,0x92b826a1
  413256:	scas   eax,DWORD PTR es:[edi]
  413257:	lods   al,BYTE PTR ds:[esi]
  413258:	adc    al,0x2f
  41325a:	out    dx,al
  41325b:	xor    eax,0x531fb4b9
  413260:	arpl   WORD PTR [esi+0x4d],di
  413263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413264:	cmp    eax,0x82625886
  413269:	jge    0x413284
  41326b:	jb     0x4131ee
  41326d:	sub    al,0x4c
  41326f:	inc    esi
  413270:	cli    
  413271:	test   DWORD PTR [edi],ebx
  413273:	shl    DWORD PTR [edi],1
  413275:	nop
  413276:	jl     0x413260
  413278:	cvtps2pd xmm1,QWORD PTR [ebx-0x383cea6c]
  41327f:	push   edx
  413280:	out    dx,al
  413281:	mov    WORD PTR [esp+edi*1-0x29],ss
  413285:	jg     0x413269
  413287:	dec    eax
  413288:	test   eax,0xc516beeb
  41328d:	lds    edx,FWORD PTR [eax+edx*8]
  413290:	call   0x1f3b:0x6846bee9
  413297:	(bad)  
  413298:	adc    esi,DWORD PTR [ecx]
  41329a:	pop    ecx
  41329b:	dec    edx
  41329c:	test   eax,0x4db1ecf0
  4132a1:	add    BYTE PTR [ebp+0x2adc269],dh
  4132a7:	cmc    
  4132a8:	cmp    DWORD PTR [edi-0x370bad02],edi
  4132ae:	(bad)  
  4132af:	push   esi
  4132b0:	jmp    0x7f10:0x9cdf58db
  4132b7:	jns    0x4132a7
  4132b9:	xor    al,0x40
  4132bb:	out    0xaa,eax
  4132bd:	les    edx,FWORD PTR [ebx+0x5a74e82a]
  4132c3:	icebp  
  4132c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132c5:	mov    cl,0x69
  4132c7:	add    cl,BYTE PTR [esi+0x421affc6]
  4132cd:	sbb    esi,ebx
  4132cf:	imul   ecx,esp,0xffffffc0
  4132d2:	jbe    0x4132ee
  4132d4:	sbb    eax,0x2e0f3e55
  4132d9:	aaa    
  4132da:	inc    ecx
  4132db:	or     edi,ebp
  4132dd:	out    dx,eax
  4132de:	push   esp
  4132df:	out    0x9e,eax
  4132e1:	imul   esi,DWORD PTR [ebx-0x10],0x777864b
  4132e8:	lahf   
  4132e9:	xlat   BYTE PTR ds:[ebx]
  4132ea:	xor    dh,BYTE PTR [ecx]
  4132ec:	mov    ds:0x90405c33,eax
  4132f1:	mov    bl,0xc9
  4132f3:	mov    WORD PTR ds:0x192c096c,ds
  4132f9:	sti    
  4132fa:	inc    eax
  4132fb:	adc    al,0xe5
  4132fd:	adc    eax,0x7c64d707
  413302:	or     DWORD PTR [ebp-0x46],edx
  413305:	fisub  DWORD PTR [edx]
  413307:	mov    dh,0x7a
  413309:	stos   DWORD PTR es:[edi],eax
  41330a:	push   esi
  41330b:	and    BYTE PTR [edx],al
  41330d:	(bad)  
  41330e:	mov    edi,0x21556366
  413313:	ins    DWORD PTR es:[edi],dx
  413314:	(bad)  
  413315:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413316:	cmp    eax,0xb74d2ba1
  41331b:	ins    BYTE PTR es:[edi],dx
  41331c:	cwde   
  41331d:	gs xchg ebp,ebx
  413320:	jecxz  0x41339b
  413322:	mov    ds:0x409aeee3,eax
  413327:	int3   
  413328:	int    0xa2
  41332a:	in     eax,0xd1
  41332c:	jno    0x41334a
  41332e:	sbb    edx,ecx
  413330:	push   cs
  413331:	dec    eax
  413332:	push   eax
  413333:	and    edx,DWORD PTR ds:0x1921863e
  413339:	dec    esp
  41333a:	sbb    al,0x6c
  41333c:	xor    al,0x22
  41333e:	pop    ebx
  41333f:	stc    
  413340:	push   0x7e78f21
  413345:	stos   BYTE PTR es:[edi],al
  413346:	add    edi,DWORD PTR [ebp+0x7b]
  413349:	cmc    
  41334a:	aad    0x33
  41334c:	xchg   BYTE PTR [edx-0x6ff0c9d1],cl
  413352:	dec    eax
  413353:	push   eax
  413354:	gs push eax
  413356:	pop    eax
  413357:	cs push cs
  413359:	adc    DWORD PTR [edi-0x1a],esi
  41335c:	stc    
  41335d:	aam    0x18
  41335f:	divps  xmm1,xmm1
  413362:	icebp  
  413363:	outs   dx,BYTE PTR ds:[esi]
  413364:	rol    BYTE PTR [ebp-0x1f],1
  413367:	shl    DWORD PTR ds:0x6f5ba9b4,0xbc
  41336e:	sub    ecx,DWORD PTR [edx]
  413370:	mov    edi,DWORD PTR [edi-0x7507343b]
  413376:	jne    0x4133a2
  413378:	call   0x12bf42af
  41337d:	iret   
  41337e:	js     0x4133d5
  413380:	ret    
  413381:	push   ds
  413382:	js     0x41331b
  413384:	ins    DWORD PTR es:[edi],dx
  413385:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413386:	sub    edi,DWORD PTR [ecx+0x2b68786d]
  41338c:	call   0x65c7f062
  413391:	aas    
  413392:	push   es
  413393:	pusha  
  413394:	sbb    ah,BYTE PTR gs:[esi]
  413397:	mov    es,edi
  413399:	sub    al,0xf4
  41339b:	js     0x4133c2
  41339d:	jns    0x4133c2
  41339f:	nop
  4133a0:	(bad)  
  4133a1:	test   DWORD PTR [ebx+0xa33b4de],eax
  4133a7:	jmp    0x4133dc
  4133a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133aa:	cdq    
  4133ab:	inc    eax
  4133ac:	repz mov al,0xb1
  4133af:	cmp    eax,0x25bf722a
  4133b4:	sbb    BYTE PTR [ebx+ebx*4+0x296fdf4],al
  4133bb:	aaa    
  4133bc:	mov    esp,0x601a4338
  4133c1:	mov    eax,ds:0x5772cb37
  4133c6:	xchg   ecx,eax
  4133c7:	sahf   
  4133c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133c9:	inc    esi
  4133ca:	and    DWORD PTR [ecx],ecx
  4133cc:	in     al,dx
  4133cd:	ficomp WORD PTR [esi+eiz*8+0x23404d57]
  4133d4:	xor    al,0x84
  4133d6:	push   ecx
  4133d7:	mov    bl,0x25
  4133d9:	jbe    0x4133a3
  4133db:	pop    ebp
  4133dc:	addr16 popa 
  4133de:	test   BYTE PTR [ecx+0x138d6a15],bl
  4133e4:	cdq    
  4133e5:	add    BYTE PTR [eax-0x262a857d],dh
  4133eb:	mov    ds:0xe850148c,eax
  4133f0:	mov    eax,ds:0xc0317f8
  4133f5:	clc    
  4133f6:	test   DWORD PTR [eax],0xd6587525
  4133fc:	mov    al,0xa0
  4133fe:	jnp    0x413395
  413400:	mov    edi,0xa190cd68
  413405:	add    ecx,DWORD PTR [ebp+esi*1-0x4f]
  413409:	mov    edi,0x74a09333
  41340e:	mov    esp,0x636591c7
  413413:	popf   
  413414:	ins    DWORD PTR es:[edi],dx
  413415:	call   0x59fb08cb
  41341a:	xchg   ebp,eax
  41341b:	fwait
  41341c:	ja     0x41343b
  41341e:	repnz (bad) 
  413420:	xchg   edi,eax
  413421:	jmp    0xe635:0x7e38e515
  413428:	dec    eax
  413429:	jecxz  0x4133f6
  41342b:	enter  0x7014,0x3f
  41342f:	test   eax,0x29e8091a
  413434:	push   cs
  413435:	sbb    BYTE PTR [eax+0x21],0x1c
  413439:	ret    
  41343a:	stos   BYTE PTR es:[edi],al
  41343b:	mov    ecx,0x5f0d6722
  413440:	fnstenv [ebp-0x5f95a6ad]
  413446:	loope  0x4134ba
  413448:	dec    esp
  413449:	enter  0x24b,0xb9
  41344d:	sahf   
  41344e:	and    eax,0x96d82c9c
  413453:	push   eax
  413454:	in     eax,dx
  413455:	pop    es
  413456:	and    al,0x2b
  413458:	xor    DWORD PTR [ecx],esi
  41345a:	push   eax
  41345b:	pop    edi
  41345c:	fstp   DWORD PTR [edi+0x4c]
  41345f:	in     al,dx
  413460:	adc    dl,dh
  413462:	ins    DWORD PTR es:[edi],dx
  413463:	inc    esi
  413464:	into   
  413465:	mov    bl,BYTE PTR [ecx-0x74]
  413468:	fldenv [edi]
  41346a:	and    eax,DWORD PTR [edx]
  41346c:	push   cs
  41346d:	mov    WORD PTR [ecx+0x520e57d8],?
  413473:	test   BYTE PTR [ebx+edx*1-0x2c],ch
  413477:	xchg   esp,eax
  413478:	gs dec esp
  41347a:	jnp    0x413430
  41347c:	(bad)  
  41347d:	iret   
  41347e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41347f:	sub    ecx,DWORD PTR [eax+0x3e]
  413482:	loopne 0x413460
  413484:	ins    BYTE PTR es:[edi],dx
  413485:	pop    ss
  413486:	jae    0x4134f0
  413488:	mov    dl,0x58
  41348a:	adc    al,0x70
  41348c:	xlat   BYTE PTR ds:[ebx]
  41348d:	data16 outs dx,BYTE PTR ds:[esi]
  41348f:	pop    edx
  413490:	cwde   
  413491:	clc    
  413492:	fistp  WORD PTR [edx]
  413494:	jne    0x413430
  413496:	(bad)
  41349a:	into   
  41349b:	repnz or eax,0xe4ed0291
  4134a1:	cmp    cl,ah
  4134a3:	(bad)  
  4134a4:	jecxz  0x41349e
  4134a6:	(bad)  
  4134a7:	std    
  4134a8:	lods   al,BYTE PTR ds:[esi]
  4134a9:	test   eax,0x4fd0f2a6
  4134ae:	push   es
  4134af:	std    
  4134b0:	dec    esi
  4134b1:	add    edx,ebx
  4134b3:	jns    0x413464
  4134b5:	jns    0x4134c9
  4134b7:	enter  0xe439,0xfc
  4134bb:	lods   al,BYTE PTR ds:[esi]
  4134bc:	xor    eax,DWORD PTR [esi-0x38]
  4134bf:	push   ecx
  4134c0:	jmp    0x6e71:0xbf72e9c0
  4134c7:	inc    ebp
  4134c8:	sahf   
  4134c9:	pusha  
  4134ca:	(bad)  
  4134cc:	data16 ins BYTE PTR es:[edi],dx
  4134ce:	leave  
  4134cf:	(bad)  
  4134d0:	cmc    
  4134d1:	adc    bl,bl
  4134d3:	adc    eax,0xb042b154
  4134d8:	add    esp,esp
  4134da:	fbld   TBYTE PTR [edx]
  4134dc:	idiv   BYTE PTR [esp+eax*4-0x367656cd]
  4134e3:	cmp    eax,0x339b8fb7
  4134e8:	adc    esi,DWORD PTR [esp+edi*4-0x14]
  4134ec:	fild   QWORD PTR ds:0xa69afdda
  4134f2:	pushf  
  4134f3:	iret   
  4134f4:	cmc    
  4134f5:	adc    edx,DWORD PTR [edx]
  4134f7:	and    al,0xe5
  4134f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134fa:	mov    al,0x62
  4134fc:	aaa    
  4134fd:	hlt    
  4134fe:	clc    
  4134ff:	clc    
  413500:	outs   dx,DWORD PTR ds:[esi]
  413501:	and    DWORD PTR [edx+0xc08273d],esp
  413507:	enter  0x8a45,0x9d
  41350b:	sar    DWORD PTR [eax+0x60],0x63
  41350f:	popa   
  413510:	or     al,0x80
  413512:	out    0xde,al
  413514:	mov    dl,0xa1
  413516:	cmp    edi,0x8766ce6e
  41351c:	fist   WORD PTR [ebp+0xc]
  41351f:	inc    esi
  413520:	xchg   ebx,eax
  413521:	int    0x66
  413523:	push   ecx
  413524:	in     eax,0x8d
  413526:	ins    DWORD PTR es:[edi],dx
  413527:	mov    al,ds:0x86ca51aa
  41352c:	adc    DWORD PTR [edi],eax
  41352e:	int3   
  41352f:	adc    dl,bh
  413531:	stos   BYTE PTR es:[edi],al
  413532:	jns    0x41352f
  413534:	jecxz  0x41350a
  413536:	es ins BYTE PTR es:[edi],dx
  413538:	dec    esp
  413539:	hlt    
  41353a:	(bad)  
  41353b:	icebp  
  41353c:	xor    eax,0xddc8e781
  413541:	adc    ah,BYTE PTR [edx+0x75]
  413544:	pop    esp
  413545:	mov    BYTE PTR [edi-0xb],bh
  413548:	jbe    0x41358e
  41354a:	mov    edi,0xe0a64580
  41354f:	pushw  0x32
  413552:	xor    DWORD PTR [esi+0x7],edi
  413555:	cmp    esi,DWORD PTR [edi-0x66]
  413558:	jle    0x41352c
  41355a:	js     0x413581
  41355c:	cmp    DWORD PTR [edi+esi*1],eax
  41355f:	dec    edi
  413560:	je     0x41350c
  413562:	in     eax,0xc2
  413564:	daa    
  413565:	push   cs
  413566:	rep stos DWORD PTR es:[edi],eax
  413568:	out    0x1d,eax
  41356a:	jo     0x413503
  41356c:	jmp    0xa61:0xa99c0c3d
  413573:	sub    BYTE PTR [ebx+0x66],ch
  413576:	jo     0x413537
  413578:	repnz push edi
  41357a:	and    DWORD PTR [esi],ecx
  41357c:	fldenv [edx+0x7c]
  41357f:	call   0xe3fb75a9
  413584:	adc    eax,0xb689b734
  413589:	and    dh,ch
  41358b:	iret   
  41358c:	mov    ebx,0x8c898201
  413591:	xchg   edi,eax
  413592:	mov    ebp,0xb8d48e65
  413597:	sar    BYTE PTR [ebp+0x10],1
  41359a:	(bad)  
  41359b:	loopne 0x4135f3
  41359d:	sub    ecx,DWORD PTR [ebx]
  41359f:	lea    edi,[ebp-0x4ad800fa]
  4135a5:	aam    0xd3
  4135a7:	lods   eax,DWORD PTR ds:[esi]
  4135a8:	push   es
  4135a9:	mov    al,BYTE PTR [eax+ebp*1]
  4135ac:	sub    BYTE PTR fs:[edi],0x34
  4135b0:	cmp    DWORD PTR fs:[ebp-0x23cd6f11],ebx
  4135b7:	mov    eax,0xf01074c9
  4135bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135bd:	fs retf 
  4135bf:	daa    
  4135c0:	popa   
  4135c1:	popa   
  4135c2:	sub    eax,0x9ae88526
  4135c7:	lods   al,BYTE PTR ds:[esi]
  4135c8:	jmp    0x413585
  4135ca:	inc    edx
  4135cb:	mov    esp,0x64ed51cb
  4135d0:	xlat   BYTE PTR ds:[ebx]
  4135d1:	outs   dx,BYTE PTR ds:[esi]
  4135d2:	mov    bh,0xd2
  4135d5:	adc    eax,0xeed0ec0f
  4135da:	(bad)  
  4135db:	xchg   esp,eax
  4135dc:	ins    DWORD PTR es:[edi],dx
  4135dd:	out    0x5c,al
  4135df:	(bad)  
  4135e0:	xchg   ebp,eax
  4135e1:	mov    ch,BYTE PTR [ecx]
  4135e3:	mov    eax,0x43e433f3
  4135e8:	jge    0x41357b
  4135ea:	mov    al,ds:0x36e0fb05
  4135ef:	mov    ch,0x9e
  4135f1:	ret    0x4f97
  4135f4:	or     esi,DWORD PTR [edi-0x56]
  4135f7:	aas    
  4135f8:	aas    
  4135f9:	mov    eax,fs:0xc15a2904
  4135ff:	or     ah,BYTE PTR [eax-0x44]
  413602:	scas   al,BYTE PTR es:[edi]
  413603:	and    ebp,ecx
  413605:	ret    
  413606:	maxps  xmm4,xmm7
  413609:	aaa    
  41360a:	mov    ebx,0x59c7b4a6
  41360f:	pop    ecx
  413610:	lds    esp,FWORD PTR [edi+0x4f3432d3]
  413616:	ja     0x41365b
  413618:	cmp    al,ch
  41361a:	test   eax,0xeae560eb
  41361f:	jp     0x41368f
  413621:	popf   
  413622:	or     eax,0x5ff0f261
  413627:	mov    cl,bh
  413629:	iret   
  41362a:	in     eax,0x23
  41362c:	mov    fs,WORD PTR ds:0xbd36a395
  413632:	mov    al,0xd5
  413634:	cmc    
  413635:	push   edx
  413636:	mov    dh,0xb8
  413638:	sbb    DWORD PTR [esi+0x34b0bfea],0xf9a3db46
  413642:	call   0x7c901797
  413647:	and    DWORD PTR [esi],edx
  413649:	sub    edx,DWORD PTR [eax-0x47]
  41364c:	sahf   
  41364d:	sbb    DWORD PTR [ecx],0xffffff95
  413650:	sbb    al,0x1d
  413652:	jb     0x4135f0
  413654:	hlt    
  413655:	(bad)  
  413656:	out    dx,al
  413657:	push   0x8375749c
  41365c:	pop    ebp
  41365d:	mov    ch,0x71
  41365f:	repnz imul ecx,DWORD PTR cs:[edi+0x30],0x873f1323
  413668:	ficom  DWORD PTR [edi-0x59]
  41366b:	jmp    FWORD PTR [esi+0x78f75524]
  413671:	imul   esi,eax,0xda5d7127
  413677:	dec    eax
  413678:	xchg   edx,eax
  413679:	iret   
  41367a:	shr    BYTE PTR [ebx-0x1225a73e],0xb9
  413681:	test   BYTE PTR [esi],0x61
  413684:	test   eax,0x2cae79b8
  413689:	mov    dh,0x28
  41368b:	mov    edi,0xa68d7be5
  413690:	out    0xd,eax
  413692:	cmp    DWORD PTR [esi+0x2e],ebx
  413695:	imul   edx,esp,0x523cd212
  41369b:	test   BYTE PTR [esi+ecx*2],al
  41369e:	fnstsw WORD PTR [ebx+0x1b3fd83f]
  4136a4:	(bad)  
  4136a5:	gs mov ebp,0xbf80f86
  4136ab:	push   es
  4136ac:	inc    esp
  4136ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136ae:	mov    BYTE PTR [eax+0x20e0d7ef],bh
  4136b4:	push   esi
  4136b5:	int    0x56
  4136b7:	push   0x321e975b
  4136bc:	imul   edi,DWORD PTR ds:0x67a696ce,0xf71adb4e
  4136c6:	mov    dh,0xea
  4136c8:	addr16 jle 0x413682
  4136cb:	lock and al,0x60
  4136ce:	mov    al,0x6a
  4136d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136d1:	mov    eax,ds:0x41d3928
  4136d6:	pop    ecx
  4136d7:	enter  0x68db,0x50
  4136db:	lods   al,BYTE PTR ds:[esi]
  4136dc:	not    DWORD PTR [ebx+0x34]
  4136df:	jecxz  0x413757
  4136e1:	(bad)  
  4136e2:	jg     0x41367f
  4136e4:	xlat   BYTE PTR ds:[ebx]
  4136e5:	pop    es
  4136e6:	adc    DWORD PTR [ebp-0x2a],edi
  4136e9:	fidiv  WORD PTR [edx+esi*8-0x55207216]
  4136f0:	mov    dl,0x54
  4136f2:	mov    bh,0xba
  4136f4:	nop
  4136f5:	sub    BYTE PTR [edx+0x8c14176],dh
  4136fb:	mov    eax,ds:0xfcb98c08
  413700:	arpl   si,cx
  413702:	jle    0x413688
  413704:	ficomp WORD PTR [edx+0x38]
  413707:	cmp    al,0xd9
  413709:	sub    BYTE PTR [eax],0x8d
  41370c:	dec    esi
  41370d:	xor    al,0x9f
  41370f:	aad    0xc0
  413711:	xchg   ebp,eax
  413712:	fbld   TBYTE PTR [ebx-0x1e501f91]
  413718:	push   ss
  413719:	jle    0x4136fc
  41371b:	popa   
  41371c:	or     BYTE PTR [eax],cl
  41371e:	(bad)  
  41371f:	icebp  
  413720:	dec    ebp
  413721:	sbb    eax,0x1c8b2a98
  413726:	in     al,0xe
  413728:	in     al,dx
  413729:	ins    BYTE PTR es:[edi],dx
  41372a:	daa    
  41372b:	inc    ebx
  41372c:	xchg   edx,eax
  41372d:	mov    esp,0x49dc1397
  413732:	int    0x8
  413734:	mov    WORD PTR [eax+0x26],cs
  413737:	ins    DWORD PTR es:[edi],dx
  413738:	(bad)  
  413739:	push   ebx
  41373a:	repz cld 
  41373c:	jae    0x4136c2
  41373e:	sti    
  41373f:	stos   BYTE PTR es:[edi],al
  413740:	and    eax,0x5f044acc
  413745:	inc    ebp
  413746:	dec    edx
  413747:	jo     0x413729
  413749:	ins    DWORD PTR es:[edi],dx
  41374a:	ja     0x4137ca
  41374c:	sbb    eax,0x5a886676
  413751:	lds    ebp,FWORD PTR [ebp+0x27feebc6]
  413757:	push   ebx
  413758:	sbb    esi,0xe31662fa
  41375e:	cs nop
  413760:	shr    DWORD PTR ds:0xf3c93da,cl
  413766:	sub    dh,BYTE PTR [ebx-0x4d1764c7]
  41376c:	movaps xmm2,XMMWORD PTR [esi]
  41376f:	and    edi,edi
  413771:	lods   al,BYTE PTR ds:[esi]
  413772:	add    BYTE PTR [esi+0x149f7715],bl
  413778:	fdiv   QWORD PTR [ebx+0x33eba25e]
  41377e:	mov    bh,BYTE PTR [eax+0xb]
  413781:	sub    al,0x5
  413783:	cmp    al,0x8
  413785:	lds    edi,FWORD PTR [ebx+0x38]
  413788:	shr    cl,1
  41378a:	xchg   ebp,eax
  41378b:	mov    ah,0xc4
  41378d:	mov    ss,WORD PTR [esi+esi*1+0x61]
  413791:	inc    eax
  413792:	or     ecx,DWORD PTR [ebx+0x1677b0b5]
  413798:	les    eax,FWORD PTR [edi-0x6e188678]
  41379e:	adc    ebx,DWORD PTR [edi+0x4b7e2ada]
  4137a4:	jmp    0x35f6:0x86a5a478
  4137ab:	sbb    dh,0x53
  4137ae:	push   eax
  4137af:	and    al,0x1b
  4137b1:	sbb    dl,ch
  4137b3:	mov    al,0x4f
  4137b5:	xchg   BYTE PTR [ecx+eax*8-0x27],bl
  4137b9:	jmp    0xda7e:0x4d7f281a
  4137c0:	push   es
  4137c1:	fcmovb st,st(0)
  4137c3:	in     eax,0xce
  4137c5:	lods   eax,DWORD PTR ds:[esi]
  4137c6:	fwait
  4137c7:	enter  0x44b7,0x7b
  4137cb:	jmp    0xdf596ff6
  4137d0:	iret   
  4137d1:	push   edi
  4137d2:	xchg   BYTE PTR [ebp-0x6],bl
  4137d5:	ja     0x4137d3
  4137d7:	pop    eax
  4137d8:	test   al,0x13
  4137da:	jae    0x41382c
  4137dc:	xchg   esi,eax
  4137dd:	js     0x413779
  4137df:	push   ss
  4137e0:	in     al,0xf
  4137e2:	xchg   ecx,eax
  4137e3:	in     eax,0x8d
  4137e5:	push   0xd08a0ef4
  4137ea:	fadd   st,st(2)
  4137ec:	jae    0x4137d6
  4137ee:	dec    ecx
  4137ef:	push   edx
  4137f0:	push   0xffffff9d
  4137f2:	sub    esi,edi
  4137f4:	adc    esi,ecx
  4137f6:	fisubr DWORD PTR [ebx+0x6d60b409]
  4137fc:	jp     0x413845
  4137fe:	mov    dl,0x5a
  413800:	inc    ecx
  413801:	and    DWORD PTR [eax],esi
  413803:	add    eax,0x7351d370
  413808:	stos   BYTE PTR es:[edi],al
  413809:	lea    esi,[edx]
  41380b:	les    ebp,FWORD PTR [ecx-0x3b1cf68]
  413811:	xchg   ebx,eax
  413812:	cdq    
  413813:	rol    esp,0x96
  413816:	test   DWORD PTR [eax+eax*1-0x2d],esi
  41381a:	scas   al,BYTE PTR es:[edi]
  41381b:	mov    ds:0xea1b64,eax
  413820:	sbb    eax,0x2ebd6671
  413825:	jge    0x413885
  413827:	lods   al,BYTE PTR ds:[esi]
  413828:	jmp    0xb735:0x13889298
  41382f:	push   0xffffffff
  413831:	mov    esi,ebx
  413833:	sbb    eax,0xca29ff9d
  413838:	pop    eax
  413839:	mov    bl,BYTE PTR [eax]
  41383b:	repz (bad) 
  41383d:	das    
  41383e:	std    
  41383f:	or     BYTE PTR [edi-0x79],dh
  413842:	mov    bh,0x45
  413844:	jae    0x413842
  413846:	lods   eax,DWORD PTR ds:[esi]
  413847:	mov    ds:0x24dc5a40,eax
  41384c:	cmp    al,0x36
  41384e:	sahf   
  41384f:	jns    0x4138c3
  413851:	xchg   DWORD PTR [edi+0x78],esi
  413854:	ror    BYTE PTR [esi+0x5af0f31e],0xae
  41385b:	add    dl,dl
  41385d:	fdivr  QWORD PTR [esi]
  41385f:	mov    ebx,0x8292d165
  413864:	ja     0x413854
  413866:	add    ecx,DWORD PTR [ecx]
  413868:	fcomp  QWORD PTR [ecx+0x26]
  41386b:	dec    ebx
  41386c:	aaa    
  41386d:	xor    dh,bh
  41386f:	push   ebp
  413870:	add    DWORD PTR [edi-0x7a427263],esp
  413876:	dec    esp
  413877:	sbb    BYTE PTR [edi-0x5d0e5f94],0x42
  41387e:	add    eax,DWORD PTR [edi-0x38]
  413881:	rol    bh,0xa0
  413884:	(bad)  
  413885:	xchg   ecx,eax
  413886:	push   es
  413887:	add    esi,ebp
  413889:	mov    cl,BYTE PTR [ebx-0x3e083590]
  41388f:	fiadd  WORD PTR [edx+edx*8+0x4be35a0d]
  413896:	xchg   DWORD PTR [edi-0x5f3c2efc],ebx
  41389c:	xchg   ebx,eax
  41389d:	mov    eax,0x6e347115
  4138a2:	and    esp,eax
  4138a4:	dec    ecx
  4138a5:	pushf  
  4138a6:	repnz cli 
  4138a8:	fwait
  4138a9:	xchg   edi,eax
  4138aa:	and    DWORD PTR [eax+eiz*2],edx
  4138ad:	sub    BYTE PTR [ebp+0x40565270],bh
  4138b3:	jmp    0x413884
  4138b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138b6:	call   0x5c5b:0x554d2fe1
  4138bd:	lods   eax,DWORD PTR ds:[esi]
  4138be:	xlat   BYTE PTR ds:[ebx]
  4138bf:	gs aaa 
  4138c1:	inc    DWORD PTR [ebx-0x7f]
  4138c4:	outs   dx,BYTE PTR ds:[esi]
  4138c5:	les    esp,FWORD PTR [eax]
  4138c7:	imul   esp,DWORD PTR [edi],0xffffffff
  4138ca:	in     al,0xd0
  4138cc:	ja     0x41386f
  4138ce:	jg     0x413867
  4138d0:	arpl   cx,cx
  4138d2:	int    0x28
  4138d4:	or     eax,0xd6c39b6f
  4138d9:	shr    BYTE PTR [ebx+0x46a6377],cl
  4138df:	adc    ebp,0x7184afa8
  4138e5:	stos   DWORD PTR es:[edi],eax
  4138e6:	mov    eax,ds:0x1d229a58
  4138eb:	mov    ah,0x8d
  4138ed:	scas   al,BYTE PTR es:[edi]
  4138ee:	add    BYTE PTR [eax],0x1d
  4138f1:	inc    eax
  4138f2:	into   
  4138f3:	xor    cl,BYTE PTR [ecx+0x6cd3f414]
  4138f9:	dec    edx
  4138fa:	imul   ecx,esp,0xffffffc4
  4138fd:	add    al,0xa8
  4138ff:	jg     0x41394a
  413901:	out    0x2d,eax
  413903:	dec    ecx
  413904:	adc    BYTE PTR [edx+0xd],al
  413907:	xchg   edx,eax
  413908:	cmp    cl,dh
  41390a:	repz jp 0x41394e
  41390d:	aam    0xdc
  41390f:	pop    esi
  413910:	and    ch,BYTE PTR [eax]
  413912:	popf   
  413913:	aas    
  413914:	aaa    
  413915:	daa    
  413916:	and    BYTE PTR [ebx],bh
  413918:	js     0x4138b5
  41391a:	fadd   DWORD PTR [esi+eiz*4-0x14a7c25d]
  413921:	pop    ebp
  413922:	lods   eax,DWORD PTR ds:[esi]
  413923:	mov    ds:0x8ff68af3,al
  413928:	in     eax,dx
  413929:	test   al,0x9d
  41392b:	dec    esp
  41392c:	mov    edi,0x6b2cb3ed
  413931:	dec    esi
  413932:	add    eax,0x6831df02
  413937:	adc    edx,0xcd37778
  41393d:	mov    esp,0x9174be4d
  413942:	sub    esp,DWORD PTR [edx]
  413944:	push   ds
  413945:	sbb    al,0x8c
  413947:	push   0xffffffce
  413949:	nop
  41394a:	xchg   ecx,eax
  41394b:	fcmovnu st,st(5)
  41394d:	mov    eax,ds:0xe32095b7
  413952:	stos   BYTE PTR es:[edi],al
  413953:	sahf   
  413954:	push   es
  413955:	movaps xmm0,XMMWORD PTR [edx+esi*2+0x57]
  41395a:	loop   0x41399a
  41395c:	in     al,dx
  41395d:	pop    edx
  41395e:	push   ds
  41395f:	or     esp,DWORD PTR [eax+0x27]
  413962:	dec    ecx
  413963:	push   edx
  413964:	push   esi
  413965:	cmp    DWORD PTR [esi+esi*2-0x1e],ebx
  413969:	add    ebx,DWORD PTR [ebp+0x6c]
  41396c:	ds jl  0x41395f
  41396f:	test   eax,0xf64c9ba1
  413974:	mov    esi,0x9159a022
  413979:	test   DWORD PTR [esi-0x14],0x761b226f
  413980:	in     al,0x1e
  413982:	push   ebp
  413983:	mov    bh,0x3a
  413985:	fcmovbe st,st(4)
  413987:	mov    eax,ds:0xfbbe00de
  41398c:	jno    0x41398a
  41398e:	outs   dx,DWORD PTR ds:[esi]
  41398f:	add    ebp,DWORD PTR [ecx]
  413991:	dec    BYTE PTR [edx-0x5cfb52a6]
  413997:	mov    ebp,0x3885b7be
  41399c:	jle    0x413a10
  41399e:	adc    ch,BYTE PTR [ebp+0x47f23f8]
  4139a4:	jne    0x4139a6
  4139a6:	scas   al,BYTE PTR es:[edi]
  4139a7:	jle    0x4139c3
  4139a9:	and    eax,0x45b6bb0c
  4139ae:	jmp    0x413952
  4139b0:	fs push cs
  4139b2:	cmp    DWORD PTR [ecx],ebx
  4139b4:	aad    0x8
  4139b6:	out    dx,eax
  4139b7:	hlt    
  4139b8:	fadd   DWORD PTR [ecx+0x60]
  4139bb:	data16 or al,0x1
  4139be:	push   edi
  4139bf:	xor    dh,ch
  4139c1:	pop    ebx
  4139c2:	sbb    eax,0xa4f333d6
  4139c7:	iret   
  4139c8:	jns    0x4139fb
  4139ca:	cli    
  4139cb:	retf   
  4139cc:	stos   BYTE PTR es:[edi],al
  4139cd:	je     0x413a27
  4139cf:	hlt    
  4139d0:	imul   ebp,DWORD PTR [ecx-0x76a9cbb4],0x3410bd14
  4139da:	fcomp  DWORD PTR [ebx+0x20]
  4139dd:	ret    
  4139de:	push   esi
  4139df:	mov    esi,0xa315ddba
  4139e4:	(bad)
  4139e7:	push   ds
  4139e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139e9:	or     ch,BYTE PTR [ebx-0x10b2a687]
  4139ef:	shr    ecx,cl
  4139f1:	xlat   BYTE PTR ds:[ebx]
  4139f2:	adc    ecx,DWORD PTR [ecx+ecx*1]
  4139f5:	(bad)  
  4139f6:	test   DWORD PTR [bx+di],esp
  4139f9:	lods   eax,DWORD PTR ds:[esi]
  4139fa:	in     al,0xc8
  4139fc:	test   BYTE PTR [ebp+ecx*4-0x1e],0x4a
  413a01:	or     eax,0x6a788a0f
  413a06:	push   ebp
  413a07:	and    DWORD PTR [eax+esi*8+0x27],0x4da1578d
  413a0f:	js     0x413a80
  413a11:	loop   0x413a87
  413a13:	jne    0x413a00
  413a15:	push   0x94745170
  413a1a:	orps   xmm0,xmm5
  413a1d:	das    
  413a1e:	cmp    bh,dl
  413a20:	xor    esp,DWORD PTR [esi+0x2258b1d]
  413a26:	mov    al,ds:0x81cdbf27
  413a2b:	popa   
  413a2c:	sbb    DWORD PTR [edi+ebp*4],eax
  413a2f:	inc    ebx
  413a30:	arpl   WORD PTR [eiz*4+0x5390854],sp
  413a37:	push   eax
  413a38:	mov    ch,0x6f
  413a3a:	sbb    al,0xa0
  413a3c:	mov    eax,0x777abaf1
  413a41:	push   edx
  413a42:	or     eax,0xf6e16e02
  413a47:	in     al,0x42
  413a49:	gs jbe 0x4139e0
  413a4c:	test   al,0xce
  413a4e:	jecxz  0x4139f2
  413a50:	mov    ecx,0x315820e0
  413a55:	sbb    DWORD PTR [eax],edx
  413a57:	jp     0x413abf
  413a59:	fst    QWORD PTR [esi+eax*2]
  413a5c:	xor    al,0xdf
  413a5e:	gs jg  0x413aca
  413a61:	mov    ah,0xcc
  413a63:	xlat   BYTE PTR ds:[ebx]
  413a64:	(bad)  
  413a65:	loope  0x413a1d
  413a67:	imul   ebp,DWORD PTR [edx+ebp*2+0x24],0xab484154
  413a6f:	mov    dh,0xc1
  413a71:	xchg   edi,eax
  413a72:	(bad)  
  413a73:	sub    ch,dh
  413a75:	(bad)  
  413a76:	std    
  413a77:	sub    edx,DWORD PTR [ecx-0x50]
  413a7a:	push   cs
  413a7b:	pusha  
  413a7c:	pop    esp
  413a7d:	pushf  
  413a7e:	or     dl,BYTE PTR [ebx+eax*8]
  413a81:	pop    es
  413a82:	and    eax,0x6fea8b08
  413a87:	std    
  413a88:	lds    edi,FWORD PTR [edi+ebx*2+0x30]
  413a8c:	push   ecx
  413a8d:	push   es
  413a8e:	xchg   edi,eax
  413a8f:	xor    edi,DWORD PTR [esi-0x72]
  413a92:	jl     0x413a30
  413a94:	pop    es
  413a95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a96:	popf   
  413a97:	adc    esi,esi
  413a99:	push   ebx
  413a9a:	inc    esi
  413a9b:	mov    ?,WORD PTR [ebp+0x19]
  413a9e:	mov    WORD PTR [edx-0x2a37ae66],?
  413aa4:	dec    ecx
  413aa5:	repnz pop esp
  413aa7:	std    
  413aa8:	nop
  413aa9:	aas    
  413aaa:	(bad)  
  413aab:	pop    ebx
  413aac:	sbb    DWORD PTR [edi+0x4],edx
  413aaf:	add    dh,ah
  413ab1:	fcom   QWORD PTR [ebp+eiz*8-0x72]
  413ab5:	or     eax,0x291f7509
  413aba:	cmp    al,0xab
  413abc:	pop    ecx
  413abd:	outs   dx,DWORD PTR ds:[esi]
  413abe:	(bad)  
  413abf:	call   FWORD PTR [eax+ebx*1-0x3b]
  413ac3:	push   cs
  413ac4:	sbb    al,0x5b
  413ac6:	jae    0x413b15
  413ac8:	dec    eax
  413ac9:	cmp    DWORD PTR [ecx],esp
  413acb:	push   edi
  413acc:	sti    
  413acd:	hlt    
  413ace:	pop    ebp
  413acf:	arpl   WORD PTR [edx+eax*8],cx
  413ad2:	in     al,0xb7
  413ad4:	iret   
  413ad5:	mov    ds:0x8005c92b,al
  413ada:	shr    cl,cl
  413adc:	arpl   WORD PTR ds:0x6c797dd2,sp
  413ae2:	fstp   TBYTE PTR [edx+0x636bc4d4]
  413ae8:	in     al,dx
  413ae9:	fisub  DWORD PTR [esi+0x2502cdf6]
  413aef:	repnz inc edx
  413af1:	adc    esi,DWORD PTR [edx+0x50]
  413af4:	sbb    ebx,DWORD PTR [eax-0xc8e4858]
  413afa:	xor    ecx,DWORD PTR [eax]
  413afc:	mov    edi,0x57162a1a
  413b01:	mov    ah,0x7
  413b03:	mov    esp,0x8e3ec7a1
  413b08:	inc    esi
  413b09:	jmp    0xf781aa6b
  413b0e:	call   0x2cf5:0x7083d58a
  413b15:	sbb    bl,BYTE PTR [edx+ebx*4]
  413b18:	ret    
  413b19:	add    DWORD PTR [ebp+0x4766b125],0xffffffe3
  413b20:	fcom   DWORD PTR [edx-0x19]
  413b23:	out    0x72,eax
  413b25:	xchg   edi,eax
  413b26:	jp     0x413b45
  413b28:	mov    ecx,0xa3b99a25
  413b2d:	pop    es
  413b2e:	jmp    0x1b9b:0x6891046e
  413b35:	aaa    
  413b36:	dec    esp
  413b37:	mov    al,ds:0x3fbabcb9
  413b3c:	sub    BYTE PTR [eax],bh
  413b3e:	inc    bh
  413b40:	call   0x7552:0x1c44136c
  413b47:	xor    DWORD PTR [eax],ecx
  413b49:	push   ebx
  413b4a:	sbb    bl,BYTE PTR [ecx-0x70]
  413b4d:	call   0xbee0c6cd
  413b52:	cmp    eax,0x1407b4aa
  413b57:	fs js  0x413b74
  413b5a:	call   0x21f7:0xc4beb0d9
  413b61:	sbb    BYTE PTR [ecx+0x73],cl
  413b64:	stos   DWORD PTR es:[edi],eax
  413b65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b66:	inc    edi
  413b67:	enter  0xc1b3,0x72
  413b6b:	mov    esp,0x4bd7dc3f
  413b70:	inc    edx
  413b71:	and    ebx,ebp
  413b73:	cld    
  413b74:	mov    bl,0x2b
  413b76:	iret   
  413b77:	loopne 0x413b74
  413b79:	mov    ebx,0x81c18436
  413b7e:	adc    ah,dl
  413b80:	and    BYTE PTR [esi],cl
  413b82:	sahf   
  413b83:	cmp    ah,ch
  413b85:	and    al,0x28
  413b87:	pop    esi
  413b88:	mov    eax,ds:0x80166ad2
  413b8d:	sbb    edx,DWORD PTR [edx]
  413b8f:	das    
  413b90:	call   DWORD PTR [esi+ecx*4-0x2d]
  413b94:	mov    ah,0x95
  413b96:	int    0x1c
  413b98:	icebp  
  413b99:	int3   
  413b9a:	pop    esi
  413b9b:	or     esi,DWORD PTR [ebp+0x38a7bb28]
  413ba1:	inc    edi
  413ba2:	xchg   edi,eax
  413ba3:	dec    edx
  413ba4:	mov    eax,ds:0x93ecdc3a
  413ba9:	xor    DWORD PTR ds:0xa689f7b8,ecx
  413baf:	mov    dl,0xb9
  413bb1:	and    bh,cl
  413bb3:	(bad)  [ecx+ecx*1-0x18285f84]
  413bba:	push   0x987abb87
  413bbf:	cld    
  413bc0:	data16 jb 0x413b66
  413bc3:	loop   0x413bac
  413bc5:	and    al,0x65
  413bc7:	xor    ecx,DWORD PTR [edi]
  413bc9:	xor    DWORD PTR [ecx-0x6c],ebp
  413bcc:	dec    ebp
  413bcd:	push   cs
  413bce:	lea    ebx,[ebx-0x37]
  413bd1:	xlat   BYTE PTR ds:[ebx]
  413bd2:	loop   0x413be6
  413bd4:	xchg   BYTE PTR [esi+0x39],ch
  413bd7:	inc    ecx
  413bd8:	pop    edi
  413bd9:	inc    eax
  413bda:	shl    DWORD PTR [edi+0x13],cl
  413bdd:	adc    al,0x81
  413bdf:	xor    bl,al
  413be1:	loop   0x413b82
  413be3:	pop    esi
  413be4:	jo     0x413b7a
  413be6:	call   0x3902:0x39839465
  413bed:	out    dx,eax
  413bee:	fstp   TBYTE PTR [edi]
  413bf0:	jl     0x413c47
  413bf2:	lea    ebp,[ecx]
  413bf4:	jmp    0x630e:0x5d88cea7
  413bfb:	shr    BYTE PTR [edi-0x51],0xfb
  413bff:	xchg   ebp,eax
  413c00:	leave  
  413c01:	cmp    edi,edi
  413c03:	and    eax,0x9500a80c
  413c08:	nop
  413c09:	aaa    
  413c0a:	xor    eax,edx
  413c0c:	push   edx
  413c0d:	mov    dl,0x10
  413c0f:	(bad)  
  413c10:	addr16 aad 0x83
  413c13:	idiv   BYTE PTR [edx]
  413c15:	mov    cl,0x11
  413c17:	imul   DWORD PTR [eax-0x78e230bc]
  413c1d:	cmp    DWORD PTR [edx],0x23
  413c20:	mov    ds:0x1f8d3f6f,eax
  413c25:	mov    edi,0xfa5b14a7
  413c2a:	sti    
  413c2b:	out    0xd9,eax
  413c2d:	loope  0x413bda
  413c2f:	fs in  eax,dx
  413c31:	les    eax,FWORD PTR [ebx+0x3b]
  413c34:	int    0x9c
  413c36:	in     eax,dx
  413c37:	ucomiss xmm6,xmm2
  413c3a:	mov    ebx,DWORD PTR [eax+0x8]
  413c3d:	outs   dx,DWORD PTR ds:[esi]
  413c3e:	(bad)  
  413c3f:	lds    ebx,FWORD PTR [ecx]
  413c41:	(bad)  
  413c42:	pop    ss
  413c43:	cmp    BYTE PTR [esi-0x53],cl
  413c46:	fst    DWORD PTR [ebx+0x68]
  413c49:	mov    ch,0xbe
  413c4b:	(bad)  
  413c4d:	add    dl,ch
  413c4f:	push   edx
  413c50:	test   al,0xce
  413c52:	and    DWORD PTR [edx+0x12],edx
  413c55:	cwde   
  413c56:	out    0x71,al
  413c58:	clc    
  413c59:	scas   eax,DWORD PTR es:[edi]
  413c5a:	retf   0x1efc
  413c5d:	mov    ah,BYTE PTR [ecx-0x4548d675]
  413c63:	lahf   
  413c64:	pusha  
  413c65:	sbb    al,0xbf
  413c67:	fistp  DWORD PTR [esi+edx*8-0x1c]
  413c6b:	loop   0x413ca2
  413c6d:	xchg   edx,eax
  413c6e:	mov    bl,0xf9
  413c70:	adc    eax,DWORD PTR gs:[ecx-0x1400cd5f]
  413c77:	outs   dx,BYTE PTR ds:[esi]
  413c78:	push   0xfffffff3
  413c7a:	jns    0x413c72
  413c7c:	cs popf 
  413c7e:	call   0xe14a:0x49e53204
  413c85:	cmc    
  413c86:	nop
  413c87:	xchg   ebp,eax
  413c88:	bound  eax,QWORD PTR [ebp+0xf]
  413c8b:	cwde   
  413c8c:	dec    ebx
  413c8d:	pop    ss
  413c8e:	dec    ebx
  413c8f:	sbb    BYTE PTR [edi+0x21],cl
  413c92:	inc    ebx
  413c93:	sahf   
  413c94:	push   cs
  413c95:	xor    eax,0xaeb799d6
  413c9a:	lods   eax,DWORD PTR ds:[esi]
  413c9b:	out    0xec,eax
  413c9d:	loope  0x413cc1
  413c9f:	jne    0x413c31
  413ca1:	inc    esp
  413ca2:	mov    eax,ds:0xeeccb5d6
  413ca7:	repnz sbb dl,BYTE PTR [esi+0x57]
  413cab:	or     al,0x63
  413cad:	push   0x6a31e62e
  413cb2:	jle    0x413cf4
  413cb4:	and    bl,ch
  413cb6:	ret    
  413cb7:	add    dh,0xb5
  413cba:	pop    eax
  413cbb:	in     eax,dx
  413cbc:	mov    ch,0x8c
  413cbe:	sbb    dl,ah
  413cc0:	cmp    ah,cl
  413cc2:	push   0xba71a421
  413cc7:	in     al,dx
  413cc8:	mov    bh,0x71
  413cca:	in     al,dx
  413ccb:	lds    edi,FWORD PTR [eax-0x4ee49f5d]
  413cd1:	ret    
  413cd2:	or     eax,0x4b8c8ece
  413cd7:	mov    al,ds:0xf3f6f42f
  413cdc:	mov    eax,ds:0x4c0060de
  413ce1:	ss mov ebp,0x1efd4bbb
  413ce7:	add    BYTE PTR [esi-0x18],dh
  413cea:	pusha  
  413ceb:	ins    BYTE PTR es:[edi],dx
  413cec:	xchg   DWORD PTR [eax+0x3e3c24c0],ebx
  413cf2:	cmc    
  413cf3:	cmc    
  413cf4:	fsubr  st,st(1)
  413cf6:	cmp    eax,0x51645c00
  413cfb:	push   esp
  413cfc:	cmp    eax,DWORD PTR [edi]
  413cfe:	imul   ebx,DWORD PTR [eax+0x71],0x382078bd
  413d05:	(bad)  
  413d06:	enter  0x3ae,0x79
  413d0a:	inc    ecx
  413d0b:	sub    ch,dh
  413d0d:	lods   al,BYTE PTR ds:[esi]
  413d0e:	or     eax,0x810c7910
  413d13:	dec    eax
  413d14:	pop    ecx
  413d15:	retf   
  413d16:	(bad)  
  413d17:	sbb    dl,dl
  413d19:	mov    edx,0x7edac35a
  413d1e:	imul   ebp,DWORD PTR [eax+0x767c1491],0xd0d8f3
  413d28:	lea    esi,[esi-0x5d83680f]
  413d2e:	jp     0x413ccd
  413d30:	sbb    eax,DWORD PTR [ebp+0x5a]
  413d33:	int    0xd3
  413d35:	jle    0x413d8d
  413d37:	imul   edi,ebx,0xffffffed
  413d3a:	cmp    BYTE PTR [ebp-0x5],dl
  413d3d:	pop    eax
  413d3e:	xchg   edx,eax
  413d3f:	inc    ecx
  413d40:	loope  0x413d9c
  413d42:	call   0xa2de:0xa5e00268
  413d49:	ja     0x413cdf
  413d4b:	push   0x4bbac55f
  413d50:	pop    ebp
  413d52:	mov    ch,0x5b
  413d54:	or     ch,BYTE PTR [edx-0x70]
  413d57:	dec    ebp
  413d58:	sbb    bl,BYTE PTR [edx-0x35]
  413d5b:	out    0xe4,al
  413d5d:	xor    eax,0x2f638994
  413d62:	fwait
  413d63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d64:	pop    ss
  413d65:	gs (bad) 
  413d67:	daa    
  413d68:	sub    esp,DWORD PTR [esi+0x79]
  413d6b:	(bad)  
  413d6d:	test   al,0xd4
  413d6f:	lock adc eax,0x12abba41
  413d75:	fistp  WORD PTR [edx+0x39]
  413d78:	cmp    BYTE PTR [ecx+0x1e76ca7b],dl
  413d7e:	call   0x58502463
  413d83:	push   0xffffffd0
  413d85:	mov    dl,0xae
  413d87:	je     0x413d62
  413d89:	idiv   BYTE PTR [eax+0x6abfdafe]
  413d8f:	add    eax,0xa525e910
  413d94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d95:	test   eax,0xd8d1ce65
  413d9a:	test   eax,0xb281f79a
  413d9f:	or     al,0x1e
  413da1:	adc    BYTE PTR [ecx-0x3cc9ee9d],0xc7
  413da8:	push   ecx
  413da9:	cmp    al,0x4c
  413dab:	jo     0x413d98
  413dad:	push   ebp
  413dae:	xor    DWORD PTR [edx-0x36],esi
  413db1:	cwde   
  413db2:	fwait
  413db3:	arpl   bp,sp
  413db5:	ret    
  413db6:	ret    0x786c
  413db9:	xor    ecx,ebp
  413dbb:	adc    DWORD PTR [edx],edi
  413dbd:	mov    ds:0xfc845543,eax
  413dc2:	lds    esi,FWORD PTR [edi+0x4bcf21b]
  413dc8:	clc    
  413dc9:	jp     0x413de5
  413dcb:	aas    
  413dcc:	dec    edi
  413dcd:	neg    BYTE PTR [edx]
  413dcf:	cdq    
  413dd0:	popa   
  413dd1:	fimul  WORD PTR [edi+ebx*8+0x3d0a0c7b]
  413dd8:	dec    edx
  413dd9:	and    DWORD PTR [eax+ebp*8+0x4f],0xe02df2e7
  413de1:	int    0xa1
  413de3:	jae    0x413dd6
  413de5:	jg     0x413e0a
  413de7:	dec    esp
  413de8:	pusha  
  413de9:	push   ebx
  413dea:	cli    
  413deb:	pop    ds
  413dec:	clc    
  413ded:	and    esi,esi
  413def:	call   0x792d182
  413df4:	test   eax,0xf52530d9
  413df9:	push   eax
  413dfa:	xlat   BYTE PTR ds:[ebx]
  413dfb:	stos   BYTE PTR es:[edi],al
  413dfc:	ja     0x413e4d
  413dfe:	fidiv  DWORD PTR [edi-0x21c0e881]
  413e04:	adc    eax,0xcd0be425
  413e09:	xchg   ebp,eax
  413e0a:	sub    eax,0xf764e724
  413e0f:	mov    bh,0x7d
  413e11:	out    dx,eax
  413e12:	div    BYTE PTR [esi+0x3]
  413e15:	dec    edx
  413e16:	fnstsw WORD PTR [edx+0x12]
  413e19:	push   edi
  413e1a:	jmp    0xfd8e:0x3ea701b3
  413e21:	scas   eax,DWORD PTR es:[edi]
  413e22:	shl    BYTE PTR [ebp+0x4b],cl
  413e25:	sbb    eax,0x1defaf73
  413e2a:	jb     0x413db7
  413e2c:	stos   BYTE PTR es:[edi],al
  413e2d:	jb     0x413def
  413e2f:	push   0xfc548aef
  413e34:	pop    edx
  413e35:	test   eax,0x9caa3aab
  413e3a:	ins    DWORD PTR es:[edi],dx
  413e3b:	and    dh,BYTE PTR [eax]
  413e3d:	mov    bl,0xb1
  413e3f:	es xchg ecx,eax
  413e41:	jo     0x413e28
  413e43:	cld    
  413e44:	mov    edi,0xf83406b3
  413e49:	cmp    DWORD PTR [ebp-0xc],ebx
  413e4c:	push   ecx
  413e4d:	push   esi
  413e4e:	or     eax,DWORD PTR [eax+0x23fc1934]
  413e54:	outs   dx,BYTE PTR ds:[esi]
  413e55:	ins    DWORD PTR es:[edi],dx
  413e56:	mov    edi,0x8a57a8d3
  413e5b:	int3   
  413e5c:	addr16 cmp al,0x52
  413e5f:	retf   0xc9c5
  413e62:	in     eax,dx
  413e63:	add    DWORD PTR [eax+0x50],0x158a01b8
  413e6a:	adc    eax,0x69bdfa94
  413e6f:	shl    BYTE PTR [ebx-0x539ee528],0xd0
  413e76:	std    
  413e77:	mov    dl,0x74
  413e79:	push   0x29
  413e7b:	adc    ecx,DWORD PTR [ebp-0x7607e01]
  413e81:	sbb    esi,DWORD PTR [ebx+0x53b855bf]
  413e87:	lods   al,BYTE PTR ds:[esi]
  413e88:	and    eax,0xe2e4b31a
  413e8d:	xchg   ebp,eax
  413e8e:	or     al,0x82
  413e90:	sub    esi,DWORD PTR [edi+0x7a]
  413e93:	inc    esp
  413e94:	mov    ecx,0x13b54dde
  413e99:	push   ds
  413e9a:	idiv   BYTE PTR [ebp-0x74]
  413e9d:	fs (bad) 
  413e9f:	push   ss
  413ea0:	pop    edi
  413ea1:	mov    cl,0x77
  413ea3:	push   esi
  413ea4:	push   ds
  413ea5:	add    eax,0xccdfe230
  413eaa:	push   es
  413eab:	push   eax
  413eac:	mov    bh,0x8
  413eae:	mov    al,ds:0x9b4c2feb
  413eb3:	inc    ecx
  413eb4:	rcl    DWORD PTR [eax-0x21f29508],0xdd
  413ebb:	inc    esi
  413ebc:	adc    BYTE PTR [edx-0x410c94d9],0xaa
  413ec3:	adc    al,0xbb
  413ec5:	ins    BYTE PTR es:[edi],dx
  413ec6:	jle    0x413f1c
  413ec8:	push   ebp
  413ec9:	aad    0x49
  413ecb:	add    ebx,DWORD PTR [ecx-0x3a1beb67]
  413ed1:	out    0x7a,eax
  413ed3:	jmp    0x413e83
  413ed5:	and    eax,0x4af25bdb
  413eda:	jecxz  0x413f3d
  413edc:	sbb    bh,BYTE PTR [ebx+ecx*1+0x4df6ab58]
  413ee3:	inc    ecx
  413ee4:	xchg   BYTE PTR [ebx-0x75],dh
  413ee7:	push   ebp
  413ee8:	in     al,dx
  413ee9:	mov    DWORD PTR [ebp+0x8],edx
  413eec:	jmp    0x4162e7
  413ef1:	mov    edx,DWORD PTR [ebp+0x8]
  413ef4:	mov    ebx,DWORD PTR [ebp-0x8]
  413ef7:	xor    edx,eax
  413ef9:	xor    ebx,eax
  413efb:	sub    edx,ebx
  413efd:	sub    edx,esi
  413eff:	xor    edx,eax
  413f01:	mov    DWORD PTR [ebp+0x8],edx
  413f04:	mov    edx,DWORD PTR [ebp+0x8]
  413f07:	mov    ebx,DWORD PTR [ebp-0x58]
  413f0a:	add    edx,0x5708f8
  413f10:	imul   edx,ebx
  413f13:	jmp    0x416299
  413f18:	push   eax
  413f19:	pusha  
  413f1a:	clc    
  413f1b:	push   es
  413f1c:	call   0x5435b3a7
  413f21:	add    dh,bh
  413f23:	or     BYTE PTR [esi],ch
  413f25:	pop    edi
  413f26:	cmp    al,BYTE PTR [edx]
  413f28:	mov    ch,0x73
  413f2a:	jp     0x413fa6
  413f2c:	add    DWORD PTR [edi+0x7a],ebx
  413f2f:	jp     0x413ee0
  413f31:	xchg   edx,eax
  413f32:	popf   
  413f33:	inc    edi
  413f34:	sub    ebp,esi
  413f36:	ffree  st(5)
  413f38:	add    al,0x9b
  413f3a:	xchg   bl,dh
  413f3c:	scas   eax,DWORD PTR es:[edi]
  413f3d:	adc    al,0x0
  413f3f:	jo     0x413fb4
  413f41:	repz and DWORD PTR [ecx-0x2a75f826],edi
  413f48:	mov    ch,0xfc
  413f4a:	jle    0x413f23
  413f4c:	lods   eax,DWORD PTR ds:[esi]
  413f4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f4e:	jmp    0x48d3:0xe427b494
  413f55:	cmp    al,0x58
  413f57:	mov    bl,0xb8
  413f59:	sbb    al,0xc
  413f5b:	jle    0x413fc4
  413f5d:	dec    BYTE PTR [edx+esi*8+0x605b2ab6]
  413f64:	out    dx,eax
  413f65:	push   0x7108ea43
  413f6a:	adc    ecx,0xffffffaf
  413f6d:	das    
  413f6e:	sub    eax,0xd39986dc
  413f73:	push   0xffffffb7
  413f75:	or     al,0x9f
  413f77:	xlat   BYTE PTR ds:[ebx]
  413f78:	push   eax
  413f79:	pop    ss
  413f7a:	push   esp
  413f7b:	test   DWORD PTR [ecx],eax
  413f7d:	sar    DWORD PTR [ebx+0x52efb005],1
  413f83:	ds (bad) 
  413f85:	sbb    esi,DWORD PTR [eax]
  413f87:	rcr    BYTE PTR [eax-0xdbcccaf],0x58
  413f8e:	add    ch,BYTE PTR [edi-0x2b]
  413f91:	adc    BYTE PTR [ebx+ebx*2+0x7761767f],0xb4
  413f99:	leave  
  413f9a:	int    0xc6
  413f9c:	arpl   WORD PTR ds:0x1b5edeb2,ax
  413fa2:	sbb    cl,0x5a
  413fa5:	ror    esp,cl
  413fa7:	dec    ebx
  413fa8:	bound  ecx,QWORD PTR [eax+esi*1+0x6c]
  413fac:	dec    eax
  413fad:	sbb    bh,bl
  413faf:	sub    eax,0x173cfef6
  413fb4:	and    BYTE PTR [ebx+0x79],bh
  413fb7:	loopne 0x413f55
  413fb9:	dec    eax
  413fba:	xor    ebp,DWORD PTR [eax]
  413fbc:	xchg   edx,eax
  413fbd:	dec    ebp
  413fbe:	call   DWORD PTR [edx]
  413fc0:	shr    DWORD PTR [edi-0x9],1
  413fc3:	mov    ebp,DWORD PTR [ebx-0x4]
  413fc6:	mov    DWORD PTR [eax],edx
  413fc8:	jmp    0x5eed5d55
  413fcd:	or     eax,0x7cffc289
  413fd2:	mov    eax,ds:0x3a92229f
  413fd7:	inc    ecx
  413fd8:	in     eax,dx
  413fd9:	leave  
  413fda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fdb:	gs xchg bl,bl
  413fde:	adc    dl,ah
  413fe0:	add    dh,BYTE PTR [ecx-0x56030708]
  413fe6:	xchg   edi,eax
  413fe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fe8:	int3   
  413fe9:	jmp    0x6c903e16
  413fee:	leave  
  413fef:	sub    al,0x6f
  413ff1:	jecxz  0x413f86
  413ff3:	pop    ebx
  413ff4:	add    DWORD PTR [ecx-0x59f3dc9f],0x1fd60e95
  413ffe:	mov    esi,esi
  414000:	das    
  414001:	or     BYTE PTR [esi],dl
  414003:	rol    dl,1
  414005:	sbb    al,0xc6
  414007:	mov    esi,0x21140a8e
  41400c:	and    BYTE PTR [eax+0x3d64267e],ah
  414012:	or     esp,DWORD PTR [esi+0x1a48399b]
  414018:	mov    ebx,ebp
  41401a:	jb     0x413ff5
  41401c:	jno    0x414000
  41401e:	fsubr  DWORD PTR ds:0xa038f975
  414024:	jl     0x41404a
  414026:	adc    eax,0xe834a8cd
  41402b:	mov    ss,WORD PTR [esi]
  41402d:	call   0xa269554f
  414032:	popa   
  414033:	pop    ss
  414034:	pop    ecx
  414035:	adc    BYTE PTR [edx+0x22068f09],0xab
  41403c:	jmp    0xacf9:0xe9ee40eb
  414043:	cld    
  414044:	outs   dx,BYTE PTR ds:[esi]
  414045:	mov    ebx,0x1cdbe11f
  41404a:	(bad)  
  41404b:	rcl    DWORD PTR [esi+0x13],1
  41404e:	sahf   
  41404f:	ror    BYTE PTR [eax+ecx*2+0x29],1
  414053:	or     BYTE PTR ds:0x4eb1743e,dl
  414059:	retf   
  41405a:	pop    edi
  41405b:	loop   0x413fdf
  41405d:	xlat   BYTE PTR gs:[ebx]
  41405f:	xchg   esp,eax
  414060:	dec    eax
  414061:	fiadd  WORD PTR [ebx+0x2e]
  414064:	leave  
  414065:	retf   
  414066:	push   0xffffff96
  414068:	pusha  
  414069:	jnp    0x4140d3
  41406b:	jns    0x4140d2
  41406d:	inc    edx
  41406e:	and    ebp,DWORD PTR [esi-0x50ca6b9d]
  414074:	das    
  414075:	mov    bl,dl
  414077:	sbb    DWORD PTR [ecx-0x37],ebx
  41407a:	int3   
  41407b:	dec    esp
  41407c:	pop    esi
  41407d:	sbb    edx,DWORD PTR [ecx+eax*2]
  414080:	ficom  DWORD PTR [esi]
  414082:	mov    WORD PTR [edx+0x3e],fs
  414085:	aam    0x7b
  414087:	loope  0x4140a0
  414089:	in     al,dx
  41408a:	jo     0x414099
  41408c:	and    BYTE PTR [edx-0x46],0xb7
  414090:	jge    0x4140ea
  414092:	add    edi,DWORD PTR [edi-0x77]
  414095:	xchg   esi,eax
  414096:	or     edx,DWORD PTR [ebp+0x7c3b55a4]
  41409c:	jmp    0x1021d0f4
  4140a1:	jbe    0x4140cf
  4140a3:	sbb    bl,BYTE PTR [eax-0x4]
  4140a6:	imul   ebp,DWORD PTR [esp+esi*8-0x3a],0xffffff8f
  4140ab:	gs ja  0x41407f
  4140ae:	jl     0x414045
  4140b0:	cmp    DWORD PTR [ecx-0x72],ecx
  4140b3:	push   ss
  4140b4:	add    BYTE PTR [esi+0x6d263416],al
  4140ba:	jnp    0x41413a
  4140bc:	jne    0x41406a
  4140be:	jecxz  0x414070
  4140c0:	or     edi,esp
  4140c2:	mov    BYTE PTR [edx],ah
  4140c4:	sar    DWORD PTR [esi-0x254e5429],cl
  4140ca:	jge    0x4140b1
  4140cc:	fisubr WORD PTR [ecx+0x25]
  4140cf:	sub    al,0x99
  4140d1:	test   esp,0x8d0901d
  4140d7:	lods   al,BYTE PTR ds:[esi]
  4140d8:	sub    BYTE PTR [edi-0x63],bh
  4140db:	xchg   DWORD PTR [edx],edi
  4140dd:	or     esp,DWORD PTR [edi-0x210609b1]
  4140e3:	sub    BYTE PTR [edx],dl
  4140e5:	mov    ch,BYTE PTR [esi+0x491a531d]
  4140eb:	nop
  4140ec:	inc    edi
  4140ed:	sbb    bl,0x48
  4140f0:	outs   dx,DWORD PTR ds:[esi]
  4140f1:	mov    ecx,0x7910f494
  4140f6:	call   0xbc28:0x6ef17928
  4140fd:	enter  0x9dbd,0x28
  414101:	das    
  414102:	gs mov bh,0x42
  414105:	jmp    0x41416c
  414107:	dec    ebx
  414108:	mov    esp,0xb9792984
  41410d:	gs inc ecx
  41410f:	into   
  414110:	int3   
  414111:	stos   BYTE PTR es:[edi],al
  414112:	je     0x414120
  414114:	jno    0x4140d0
  414116:	arpl   WORD PTR [edi+0x3c300000],sp
  41411c:	adc    DWORD PTR [eax-0x5b],ecx
  41411f:	sbb    eax,0x314b62c5
  414124:	or     ebp,esp
  414126:	call   0xebc1:0xf3ddda75
  41412d:	mov    al,ds:0xef280112
  414132:	xor    DWORD PTR [ecx],0x78
  414135:	xor    eax,0x805a4c42
  41413a:	adc    al,0x5b
  41413c:	arpl   WORD PTR [ebx+0x7b],sp
  41413f:	cwde   
  414140:	mov    ecx,0xb3f1366c
  414145:	clc    
  414146:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414147:	mov    ecx,0x4a2c1f90
  41414c:	or     ah,al
  41414e:	push   DWORD PTR ds:0xedb51b7f
  414154:	xchg   esp,eax
  414155:	repnz cmp ebx,DWORD PTR [ebx]
  414158:	cmp    BYTE PTR [esi],ah
  41415a:	cld    
  41415b:	sub    al,0xe7
  41415d:	imul   BYTE PTR [edx]
  41415f:	or     ebx,DWORD PTR [esp+esi*1+0x9]
  414163:	neg    BYTE PTR [edx-0x6e5eadf]
  414169:	xchg   esi,eax
  41416a:	pop    ebp
  41416b:	pop    ds
  41416c:	es (bad) 
  41416e:	sub    al,0x1d
  414170:	je     0x41410d
  414172:	inc    esp
  414173:	int3   
  414174:	inc    edx
  414175:	and    eax,0x8082eee4
  41417a:	stc    
  41417b:	test   DWORD PTR [esi+0x68],edi
  41417e:	add    al,0xe9
  414180:	outs   dx,DWORD PTR ds:[esi]
  414181:	push   ds
  414182:	adc    ebx,esi
  414184:	xchg   esp,eax
  414185:	int    0x38
  414187:	mov    edx,0xac6ece17
  41418c:	cdq    
  41418d:	pop    esi
  41418e:	cmp    DWORD PTR [edx+0xc],eax
  414191:	pop    ebp
  414192:	lods   eax,DWORD PTR ds:[esi]
  414193:	sub    DWORD PTR [esi],ebp
  414195:	mov    al,ds:0x4b356052
  41419a:	das    
  41419b:	retf   0x9e50
  41419e:	jb     0x414129
  4141a0:	mov    eax,0x98b84997
  4141a5:	xor    eax,0x6f406acf
  4141aa:	mov    DWORD PTR [esp+ecx*4-0x39],ebp
  4141ae:	jno    0x4141a4
  4141b0:	mov    bh,0x5c
  4141b2:	das    
  4141b3:	stc    
  4141b4:	mov    esp,0xc9b1353b
  4141b9:	sbb    al,0x71
  4141bb:	fisub  DWORD PTR [ebx+0x90d8bf2]
  4141c1:	xor    ebx,ebx
  4141c3:	push   cs
  4141c4:	cmp    DWORD PTR [esi+esi*4-0x6770b900],esp
  4141cb:	adc    bh,bh
  4141cd:	pushf  
  4141ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141cf:	push   esi
  4141d0:	in     eax,0xab
  4141d2:	or     dl,BYTE PTR [edx]
  4141d4:	xor    DWORD PTR [ebx],edx
  4141d6:	cwde   
  4141d7:	dec    eax
  4141d8:	jno    0x4141bf
  4141da:	in     al,dx
  4141db:	bound  edi,QWORD PTR [ebp-0x2dc5b134]
  4141e1:	pusha  
  4141e2:	arpl   WORD PTR [ebp+0x6a],bx
  4141e5:	xchg   BYTE PTR [ecx+esi*2+0x2e],al
  4141e9:	dec    ebp
  4141ea:	lods   al,BYTE PTR ds:[esi]
  4141eb:	jg     0x414206
  4141ed:	mov    eax,ds:0xfb90802b
  4141f2:	mov    dl,0x6b
  4141f4:	inc    ecx
  4141f5:	mov    esi,DWORD PTR [esi+edx*4]
  4141f8:	lds    edx,FWORD PTR [eax]
  4141fa:	jge    0x41424c
  4141fc:	imul   edi,edi,0x7fa0679e
  414202:	adc    DWORD PTR [esi+0x6d],0x7e
  414206:	inc    ecx
  414207:	cmp    eax,0xc2db35cc
  41420c:	sar    BYTE PTR [ecx],0x41
  41420f:	std    
  414210:	sbb    DWORD PTR [esi+eax*8+0x46],edi
  414214:	cmc    
  414215:	pop    ecx
  414216:	call   0xf33:0x3101040c
  41421d:	ret    0xbee4
  414220:	mov    ebx,0xfdf822d4
  414225:	push   edi
  414226:	dec    ecx
  414227:	sub    BYTE PTR [edi-0x58],cl
  41422a:	stos   DWORD PTR es:[edi],eax
  41422b:	pop    ss
  41422c:	dec    eax
  41422d:	repnz sbb BYTE PTR [ebx-0x33],dl
  414231:	jae    0x41421c
  414233:	lea    esi,[eax-0x42]
  414236:	(bad)  
  414237:	iret   
  414238:	pop    ss
  414239:	add    al,0xed
  41423b:	xor    ecx,DWORD PTR [esi+0x79]
  41423e:	clc    
  41423f:	stc    
  414240:	fisttp DWORD PTR [esi+edx*8]
  414243:	sbb    ah,BYTE PTR [ebx+ecx*4]
  414246:	jb     0x4142c0
  414248:	push   ebx
  414249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41424a:	mov    cl,0x38
  41424c:	dec    esp
  41424d:	cmp    DWORD PTR [ebx-0x4d0021da],esp
  414253:	enter  0x58c4,0x35
  414257:	clc    
  414258:	inc    esi
  414259:	pop    edi
  41425a:	test   BYTE PTR [ebp-0x31],bh
  41425d:	mov    eax,0xa829f2e0
  414262:	cmp    bh,ch
  414264:	mov    ecx,ebx
  414266:	and    ebx,esp
  414268:	retf   0x1948
  41426b:	stos   BYTE PTR es:[edi],al
  41426c:	jmp    0x4142b2
  41426e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41426f:	jecxz  0x41424e
  414271:	call   0xd9ea:0xdac51d7d
  414278:	test   BYTE PTR [esi+ebp*8-0x29e0444d],bl
  41427f:	scas   al,BYTE PTR es:[edi]
  414280:	je     0x4142dd
  414282:	in     al,0x76
  414284:	jo     0x41427b
  414286:	imul   ecx,DWORD PTR [ebp-0x68],0xffffffdb
  41428a:	daa    
  41428b:	outs   dx,BYTE PTR ds:[esi]
  41428c:	push   edx
  41428d:	test   eax,0x5dfcc98e
  414292:	dec    ebp
  414293:	iret   
  414294:	pop    ecx
  414295:	fistp  QWORD PTR [ecx+0x77550e2c]
  41429b:	jae    0x414298
  41429d:	std    
  41429e:	div    BYTE PTR [eax-0x12]
  4142a1:	(bad)  ds:0x795a0e53
  4142a7:	in     al,dx
  4142a8:	and    esi,DWORD PTR [ecx]
  4142aa:	mov    dx,0x4aac
  4142ae:	jno    0x414270
  4142b0:	sahf   
  4142b1:	out    dx,al
  4142b2:	pop    ebx
  4142b3:	test   DWORD PTR [esi-0x9ce8d75],eax
  4142b9:	fucomip st,st(1)
  4142bb:	sbb    eax,0xa7e5cbf7
  4142c0:	sub    eax,0xba324c58
  4142c5:	push   ds
  4142c6:	pop    ebx
  4142c7:	sub    al,0xcc
  4142c9:	pop    edx
  4142ca:	xchg   edi,eax
  4142cb:	scas   al,BYTE PTR es:[edi]
  4142cc:	or     al,0x5a
  4142ce:	ror    BYTE PTR [ebx+0xc],0x5
  4142d2:	xor    ebp,DWORD PTR [eax+0x4236b0d1]
  4142d8:	(bad)  
  4142d9:	in     al,0x5
  4142db:	or     BYTE PTR [ebx-0xf4c0ecc],ch
  4142e1:	call   0xa53d:0xc307d3e1
  4142e8:	jb     0x414285
  4142ea:	aas    
  4142eb:	jecxz  0x414302
  4142ed:	push   eax
  4142ee:	sub    DWORD PTR [eax+0x11],esi
  4142f1:	lock jo 0x4142c7
  4142f4:	jg     0x41432a
  4142f6:	nop
  4142f7:	dec    edi
  4142f8:	in     eax,0x2
  4142fa:	int    0xc1
  4142fc:	inc    ebp
  4142fd:	popf   
  4142fe:	fdiv   DWORD PTR [edi+0x26]
  414301:	jmp    0x3f11:0x84686dc1
  414308:	fistp  QWORD PTR [edi]
  41430a:	fucomi st,st(7)
  41430c:	inc    esi
  41430d:	into   
  41430e:	test   BYTE PTR [eax+0x5139d4d6],bh
  414314:	mov    ah,0xbd
  414316:	push   esi
  414317:	jbe    0x414315
  414319:	xchg   edi,eax
  41431a:	test   DWORD PTR [eax],esi
  41431c:	es int3 
  41431e:	cdq    
  41431f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414320:	pop    ebx
  414321:	outs   dx,DWORD PTR ds:[esi]
  414322:	fstp   QWORD PTR [ebp-0x6e033666]
  414328:	push   ebp
  414329:	ret    0xa0cc
  41432c:	mov    ebp,DWORD PTR ds:0x671b3ac7
  414332:	(bad)  
  414333:	clc    
  414334:	ror    BYTE PTR [edi+0x71],1
  414337:	push   cs
  414338:	fs mov dl,dl
  41433b:	inc    esi
  41433c:	clc    
  41433d:	inc    edx
  41433e:	fst    st(2)
  414340:	das    
  414341:	pop    ecx
  414342:	xor    eax,0x341a684c
  414347:	ret    
  414348:	ss loopne 0x4142e3
  41434b:	or     al,0x29
  41434d:	push   ecx
  41434e:	add    edx,DWORD PTR [ebx-0x1a]
  414351:	in     eax,0x80
  414353:	inc    eax
  414354:	cld    
  414355:	fld    TBYTE PTR [eax+0x7b0e564d]
  41435b:	mov    eax,0x6c02af03
  414360:	pop    eax
  414361:	and    DWORD PTR [ecx+eiz*2+0x3a],0xaed07d58
  414369:	cmp    DWORD PTR [esi-0x3d67a47d],0x5194404
  414373:	and    BYTE PTR [ebx],ah
  414375:	je     0x414306
  414377:	gs int3 
  414379:	pop    edi
  41437a:	xor    al,0x82
  41437c:	cmp    edi,DWORD PTR [esi]
  41437e:	ins    BYTE PTR es:[edi],dx
  41437f:	loope  0x4143e3
  414381:	shl    eax,0xd1
  414384:	enter  0x9b87,0xa0
  414388:	sbb    cl,BYTE PTR [edi]
  41438a:	repnz lods al,BYTE PTR ds:[esi]
  41438c:	test   BYTE PTR [esi-0xa],0xa6
  414390:	and    eax,0x2b8b73af
  414395:	mov    dh,BYTE PTR [eax+eax*1]
  414398:	fcom   QWORD PTR [esi+0x7294740c]
  41439e:	and    ecx,edi
  4143a0:	add    DWORD PTR ds:0x211cc967,edi
  4143a6:	push   es
  4143a7:	push   eax
  4143a8:	sub    edx,DWORD PTR [ecx-0xebda71c]
  4143ae:	sar    DWORD PTR [ebp+0x1b554478],1
  4143b4:	push   cs
  4143b5:	pop    esi
  4143b6:	ret    
  4143b7:	enter  0x4cfb,0x49
  4143bb:	or     eax,0x8967669e
  4143c0:	xor    al,0x64
  4143c2:	gs and al,0xf1
  4143c5:	daa    
  4143c6:	repnz or BYTE PTR [edx+0x269452cd],cl
  4143cd:	out    dx,al
  4143ce:	rol    BYTE PTR [eax+0x4cb42ea0],1
  4143d4:	rcl    DWORD PTR [ecx],1
  4143d6:	cmp    DWORD PTR [esi],eax
  4143d8:	jnp    0x41435d
  4143da:	push   cs
  4143db:	adc    eax,0x9715dd9f
  4143e0:	mov    BYTE PTR [ecx-0x7],cl
  4143e3:	jb     0x414388
  4143e5:	pop    edx
  4143e6:	ins    BYTE PTR es:[edi],dx
  4143e7:	sbb    esp,DWORD PTR ds:0xf0065a21
  4143ed:	mov    ebx,DWORD PTR [ecx]
  4143ef:	pop    eax
  4143f0:	ins    DWORD PTR es:[edi],dx
  4143f1:	setnp  al
  4143f4:	dec    ebp
  4143f5:	sbb    DWORD PTR [ebp+0x24460cec],ecx
  4143fb:	and    eax,0x374dc7cd
  414400:	mov    esp,0x228c4c98
  414405:	movd   DWORD PTR [edx-0x7f491ccf],mm2
  41440c:	test   ch,dh
  41440e:	jbe    0x414469
  414410:	imul   eax,edx,0xb0a2fd93
  414416:	dec    eax
  414417:	dec    edx
  414418:	ficomp DWORD PTR [edi]
  41441a:	shl    BYTE PTR [esi],cl
  41441c:	test   eax,0x7e6ba3a9
  414421:	loope  0x414428
  414423:	retf   0x900e
  414426:	adc    BYTE PTR [edx-0x177818b4],cl
  41442c:	inc    ecx
  41442d:	dec    esp
  41442e:	sub    dl,dl
  414430:	mov    ds:0x5a1f32ba,al
  414435:	push   eax
  414436:	xchg   edi,eax
  414437:	stos   BYTE PTR es:[edi],al
  414438:	in     eax,dx
  414439:	lds    eax,FWORD PTR [eax-0x28]
  41443c:	in     al,0xdd
  41443e:	sbb    ecx,edx
  414440:	jbe    0x4144c1
  414442:	mov    ?,WORD PTR [edi-0x49bb99b0]
  414448:	popa   
  414449:	ins    BYTE PTR es:[edi],dx
  41444a:	out    dx,eax
  41444b:	xor    DWORD PTR [esp+eiz*2-0x4ce5370d],ecx
  414452:	pop    ss
  414453:	mov    fs,WORD PTR [esi+0x7b]
  414456:	and    eax,0x404e04ad
  41445b:	mov    bh,0x7a
  41445d:	popa   
  41445e:	adc    esi,eax
  414460:	mov    al,ds:0xbc644898
  414465:	jmp    0xd6085693
  41446a:	ficomp WORD PTR gs:[eax+0x2b9da38b]
  414471:	popa   
  414472:	mov    DWORD PTR [esi-0x713a866c],edx
  414478:	(bad)  
  414479:	enter  0xcd0b,0x20
  41447d:	xchg   edi,esp
  41447f:	xchg   BYTE PTR [ebx],bh
  414481:	dec    eax
  414482:	sbb    DWORD PTR [eax+0x69f614d9],ebx
  414488:	in     al,0xca
  41448a:	xchg   edx,eax
  41448b:	ss mov al,0x3b
  41448e:	fucom  st(2)
  414490:	adc    al,0xca
  414492:	or     al,0x4e
  414494:	aam    0x7e
  414496:	xchg   ebp,eax
  414497:	shl    DWORD PTR [edi],1
  414499:	pusha  
  41449a:	jbe    0x414428
  41449c:	xchg   ah,ch
  41449e:	test   al,0x7a
  4144a0:	iret   
  4144a1:	icebp  
  4144a2:	xor    eax,DWORD PTR [edx+ecx*1-0x15]
  4144a6:	test   eax,0xdd131157
  4144ab:	jbe    0x41451c
  4144ad:	jmp    0x414467
  4144af:	jns    0x414522
  4144b1:	mov    ecx,0x980cfddd
  4144b6:	or     al,cl
  4144b8:	call   0x2ae4ad19
  4144bd:	pop    edx
  4144be:	mov    dh,0x57
  4144c0:	cmp    eax,0xf36d1e0b
  4144c5:	push   eax
  4144c6:	ss pop ecx
  4144c8:	xchg   al,al
  4144ca:	stos   DWORD PTR es:[edi],eax
  4144cb:	rcr    DWORD PTR [eax-0x266d7735],1
  4144d1:	jbe    0x414501
  4144d3:	mov    bl,0x8d
  4144d5:	add    BYTE PTR [edx+0x1aaa706e],ah
  4144db:	callw  0xe923
  4144df:	push   edx
  4144e0:	arpl   cx,bx
  4144e2:	push   DWORD PTR [edi+0x24]
  4144e5:	daa    
  4144e6:	imul   ebp,DWORD PTR [esi+0x32855325],0xdebbb41b
  4144f0:	rcl    BYTE PTR [esi+0x6c],1
  4144f3:	shl    DWORD PTR [esi],0xcd
  4144f6:	or     al,0x3c
  4144f8:	stos   DWORD PTR es:[edi],eax
  4144f9:	mov    eax,0x74f55fe4
  4144fe:	lods   eax,DWORD PTR ds:[esi]
  4144ff:	xor    esp,DWORD PTR [ebp+0x36d6dc59]
  414505:	push   eax
  414506:	cmp    esp,DWORD PTR [edi+edi*8-0x4a]
  41450a:	inc    esp
  41450b:	es pop ebp
  41450d:	enter  0xe28c,0xef
  414511:	out    dx,al
  414512:	loopne 0x4144ca
  414514:	mov    ?,WORD PTR [edx+0x144bf36a]
  41451a:	das    
  41451b:	fwait
  41451c:	push   cs
  41451d:	ins    BYTE PTR es:[edi],dx
  41451e:	and    esp,DWORD PTR [edx-0x52]
  414521:	loop   0x414519
  414523:	dec    ebx
  414524:	pop    ebx
  414525:	addr16 mov ds:0x29fa,eax
  414529:	and    BYTE PTR [esi+0xc85b3b0],bh
  41452f:	mov    al,ds:0x41ec1691
  414534:	mov    ebx,0x5c9d1f95
  414539:	mov    al,0xfb
  41453b:	push   ds
  41453c:	sti    
  41453d:	dec    eax
  41453e:	mov    gs,WORD PTR [ecx+esi*2]
  414541:	adc    DWORD PTR [edx-0x61],ebx
  414544:	shl    ebx,1
  414546:	into   
  414547:	ret    0xf438
  41454a:	ret    0xdc05
  41454d:	dec    edx
  41454e:	xor    dh,BYTE PTR [ebx+0x33f44c0b]
  414554:	mov    ecx,0x225e35cd
  414559:	fmul   DWORD PTR [ebx+0x33]
  41455c:	mov    ecx,0x5d2063f0
  414561:	sub    ah,dh
  414563:	ins    BYTE PTR es:[edi],dx
  414564:	clc    
  414565:	clc    
  414566:	inc    ecx
  414567:	inc    esp
  414568:	mov    al,ds:0x7282b333
  41456d:	outs   dx,DWORD PTR ds:[esi]
  41456e:	popw   ds
  414570:	addr16 out dx,al
  414572:	xchg   ch,bl
  414574:	aam    0x41
  414576:	push   edx
  414577:	mov    ah,bh
  414579:	inc    ebx
  41457a:	add    cl,cl
  41457c:	std    
  41457d:	pushf  
  41457e:	aam    0x27
  414580:	xor    eax,0x2df1954
  414585:	scas   al,BYTE PTR es:[edi]
  414586:	fidiv  DWORD PTR [edx]
  414588:	xchg   edi,eax
  414589:	leave  
  41458a:	pushf  
  41458b:	inc    edi
  41458c:	push   0xfffffff5
  41458e:	push   edx
  41458f:	cdq    
  414590:	sbb    BYTE PTR [ecx-0x241f5922],dl
  414596:	add    al,0x4a
  414598:	das    
  414599:	add    eax,0xd2cf61f4
  41459e:	das    
  41459f:	arpl   sp,di
  4145a1:	push   ds
  4145a2:	jo     0x4145c4
  4145a4:	inc    esi
  4145a5:	cmp    al,0x59
  4145a7:	pop    esp
  4145a8:	mov    bh,0x53
  4145aa:	(bad)  
  4145ab:	sbb    al,0x62
  4145ad:	imul   eax,DWORD PTR [ebp+0x159cd297],0x7d
  4145b4:	in     al,0x7d
  4145b6:	mov    dh,0x6d
  4145b8:	movd   mm5,DWORD PTR [eax-0x2ed46cae]
  4145bf:	and    ebp,DWORD PTR [ebp+0x5e6c1b8c]
  4145c5:	scas   al,BYTE PTR es:[edi]
  4145c6:	nop
  4145c7:	mov    cl,0x9d
  4145c9:	add    dl,BYTE PTR [edi-0x131f5616]
  4145cf:	mov    bl,0xf4
  4145d1:	out    dx,al
  4145d2:	adc    DWORD PTR [edi+ecx*4-0x77],ebp
  4145d6:	jno    0x41459a
  4145d8:	ja     0x4145ff
  4145da:	mov    ecx,0xbff8153e
  4145df:	lods   al,BYTE PTR ds:[esi]
  4145e0:	lods   al,BYTE PTR ds:[esi]
  4145e1:	push   edi
  4145e2:	jnp    0x414636
  4145e4:	in     al,0x11
  4145e6:	jmp    0x41464f
  4145e8:	jl     0x414663
  4145ea:	sbb    BYTE PTR [esi+0x26d20d8],cl
  4145f0:	test   ch,0x20
  4145f3:	icebp  
  4145f4:	dec    BYTE PTR [esi]
  4145f6:	inc    esi
  4145f7:	jne    0x4145ee
  4145f9:	mov    dl,0xb9
  4145fb:	push   ebp
  4145fc:	cs int 0x54
  4145ff:	mov    edx,0x69af22dc
  414604:	shr    DWORD PTR [ebx+0x6d],1
  414607:	ins    DWORD PTR es:[edi],dx
  414608:	xor    eax,0x18513f12
  41460d:	push   ebp
  41460e:	je     0x41465c
  414610:	ss test al,0x84
  414613:	add    DWORD PTR [ecx+0x0],ecx
  414616:	loop   0x4145a9
  414618:	(bad)  
  414619:	lock push ebp
  41461b:	inc    esp
  41461c:	ss pop ebp
  41461e:	add    eax,DWORD PTR [edx-0x6fc34354]
  414624:	not    BYTE PTR [edi]
  414626:	adc    edi,DWORD PTR [edx-0x6b7ba787]
  41462c:	dec    ebx
  41462d:	in     eax,0x64
  41462f:	mov    eax,ds:0x2ea9101e
  414634:	int3   
  414635:	mov    ecx,0xf27bda84
  41463a:	mov    edi,0x8123c22a
  41463f:	into   
  414640:	or     ecx,ebx
  414642:	push   esi
  414643:	and    eax,0x9fa6d3bc
  414648:	outs   dx,DWORD PTR ds:[esi]
  414649:	mov    cl,0xdf
  41464b:	repnz mov eax,0xa4e6cce0
  414651:	popf   
  414652:	fiadd  WORD PTR [edi-0x5285c286]
  414658:	cmp    BYTE PTR [esi-0x14],dh
  41465b:	jns    0x4145f8
  41465d:	push   0xd9ac1ef4
  414662:	test   DWORD PTR [edx-0x1c],edi
  414665:	cld    
  414666:	push   0xef805161
  41466b:	addr16 push cs
  41466d:	jno    0x41460c
  41466f:	jl     0x41468a
  414671:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414672:	lahf   
  414673:	mov    edi,0xf0ad606b
  414678:	jl     0x414691
  41467a:	lds    edi,FWORD PTR ds:0xb42a3564
  414680:	mov    ecx,0x48161c3b
  414685:	out    0x34,al
  414687:	fld    DWORD PTR [ebx+0x18]
  41468a:	inc    ebx
  41468b:	cmc    
  41468c:	dec    ecx
  41468d:	jnp    0x41464e
  41468f:	mov    al,0x52
  414691:	outs   dx,BYTE PTR ds:[esi]
  414692:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414693:	dec    esp
  414694:	sub    eax,0x252558b1
  414699:	fiadd  WORD PTR [esi+0x42]
  41469c:	pop    esp
  41469d:	jns    0x41467a
  41469f:	rcr    BYTE PTR [esi+0x31],0x87
  4146a3:	add    bl,BYTE PTR [ebx]
  4146a5:	outs   dx,BYTE PTR ds:[esi]
  4146a6:	call   0x49325550
  4146ab:	inc    edi
  4146ac:	icebp  
  4146ad:	mov    eax,ds:0x7e34f7bf
  4146b2:	repz mov cl,BYTE PTR [esi]
  4146b5:	sar    DWORD PTR [esi+0xfe06dc6],0xa6
  4146bc:	sub    esp,DWORD PTR [ebx+ebx*2]
  4146bf:	cld    
  4146c0:	aam    0x97
  4146c2:	(bad)  
  4146c3:	imul   DWORD PTR [edx-0x78]
  4146c6:	(bad)  
  4146c7:	ror    DWORD PTR [edx+0x5e],cl
  4146ca:	adc    BYTE PTR [ebx-0x11],ah
  4146cd:	pop    esi
  4146ce:	sbb    esp,DWORD PTR [eax+0x6]
  4146d1:	cmp    eax,0xf88369bd
  4146d6:	cmp    al,0x74
  4146d8:	imul   esi,DWORD PTR [eax-0x65065584],0x3c
  4146df:	sub    eax,0x9ce1996b
  4146e4:	mov    ss,WORD PTR [ebx]
  4146e6:	popa   
  4146e7:	xchg   DWORD PTR [edi-0x77efb637],ebp
  4146ed:	test   al,0x59
  4146ef:	rcl    BYTE PTR [ebx-0x54c73eaf],cl
  4146f5:	add    eax,ebp
  4146f7:	lock lea edx,[ebx-0x1d27fe32]
  4146fe:	push   cs
  4146ff:	imul   eax,DWORD PTR [edx],0x56
  414702:	dec    ecx
  414703:	and    al,0x6e
  414705:	pop    ss
  414706:	mov    ch,0x84
  414708:	jne    0x414736
  41470a:	pop    ecx
  41470b:	in     al,dx
  41470c:	push   0xffffff8f
  41470e:	mov    dl,0xf2
  414710:	xchg   edx,eax
  414711:	lods   al,BYTE PTR ds:[esi]
  414712:	or     cl,dh
  414714:	pushf  
  414715:	or     bh,BYTE PTR [eax-0x4e3d9da8]
  41471b:	mov    eax,ds:0xa7bd608a
  414720:	sti    
  414721:	mov    ebp,0x8b20a9f4
  414726:	sbb    ch,bl
  414728:	add    bl,dl
  41472a:	scas   al,BYTE PTR es:[edi]
  41472b:	mov    esi,0xc9346979
  414730:	test   edx,esi
  414732:	inc    esp
  414733:	sbb    eax,DWORD PTR [edi+0x78]
  414736:	mov    al,0x5a
  414738:	neg    bl
  41473a:	shl    BYTE PTR [esi-0x41],1
  41473d:	outs   dx,BYTE PTR ds:[esi]
  41473e:	push   edx
  41473f:	cs nop
  414741:	sub    al,0x8a
  414743:	cmp    ebp,0x43096f9b
  414749:	sub    eax,0x4c6737bd
  41474e:	mul    BYTE PTR [edx-0xbe4b6b9]
  414754:	xchg   edx,eax
  414755:	or     al,0x6a
  414757:	xor    dh,dh
  414759:	adc    cl,bl
  41475b:	mov    esi,0xd46f2443
  414760:	imul   ebx,ebx,0x34752516
  414766:	cld    
  414767:	or     dl,BYTE PTR [ecx-0x1d]
  41476a:	sub    ch,ch
  41476c:	int    0xe8
  41476e:	adc    ch,dl
  414770:	ffree  st(3)
  414772:	push   edi
  414773:	sbb    DWORD PTR [eax-0xa96003],edi
  414779:	adc    DWORD PTR [esi-0x1a1ba0bd],0x2d
  414780:	out    dx,al
  414781:	test   DWORD PTR [ebp-0x16],ebp
  414784:	dec    ebx
  414785:	test   bh,dl
  414787:	adc    cl,BYTE PTR ds:0x40a23d4a
  41478d:	cmp    eax,0x63bbd935
  414792:	xor    DWORD PTR ds:0x316be028,ebp
  414798:	mov    al,ds:0x2b2b0664
  41479d:	dec    ecx
  41479e:	xchg   ebx,ebp
  4147a0:	aad    0x3c
  4147a2:	les    ebp,FWORD PTR [esi+ebp*2+0x7f]
  4147a6:	imul   ebx,DWORD PTR [ecx],0x4f69ee23
  4147ac:	ja     0x414810
  4147ae:	push   ebx
  4147af:	sbb    dh,cl
  4147b1:	xchg   ebx,eax
  4147b2:	adc    esp,DWORD PTR [ebx-0x7210604b]
  4147b8:	or     edi,ecx
  4147ba:	fild   QWORD PTR [ebx-0x5f]
  4147bd:	inc    ecx
  4147be:	dec    esp
  4147bf:	jae    0x4147b0
  4147c1:	and    eax,0xfba9cab1
  4147c6:	in     al,0x71
  4147c8:	das    
  4147c9:	jb     0x414785
  4147cb:	pushf  
  4147cc:	mov    al,0x48
  4147ce:	inc    ecx
  4147cf:	(bad)  
  4147d0:	pop    ebx
  4147d1:	pop    ecx
  4147d2:	mov    al,ch
  4147d4:	test   al,0xb
  4147d6:	jno    0x414785
  4147d8:	inc    edx
  4147d9:	cdq    
  4147da:	in     eax,dx
  4147db:	jno    0x4147d1
  4147dd:	jb     0x41483d
  4147df:	pop    ebx
  4147e0:	or     BYTE PTR [esi-0x73],0x79
  4147e4:	out    0xf0,al
  4147e6:	shl    BYTE PTR ss:[ebx],0x24
  4147ea:	jge    0x4147d2
  4147ec:	pushf  
  4147ed:	(bad)  
  4147ef:	cmp    al,0x9e
  4147f1:	jp     0x414785
  4147f3:	and    dh,BYTE PTR [edx*1+0x513b9f5]
  4147fa:	push   edi
  4147fb:	pop    es
  4147fc:	mov    BYTE PTR [edx-0x38],bh
  4147ff:	push   edi
  414800:	mov    al,0xfd
  414802:	push   esp
  414803:	xor    DWORD PTR [edi+0x5fa9665c],ebp
  414809:	rcr    BYTE PTR [eiz*2-0x785246fc],1
  414810:	xchg   ecx,eax
  414811:	scas   eax,DWORD PTR es:[edi]
  414812:	popa   
  414813:	jecxz  0x414811
  414815:	pop    edx
  414816:	(bad)  
  414817:	adc    ebp,DWORD PTR [edi+0x2e96e084]
  41481d:	lea    ecx,[edi+eiz*8]
  414820:	(bad)  
  414821:	mov    eax,?
  414823:	add    bh,BYTE PTR [eax-0x66]
  414826:	jns    0x41488b
  414828:	hlt    
  414829:	rcl    DWORD PTR [esi+0xbe3720d],1
  41482f:	js     0x414858
  414831:	sbb    DWORD PTR es:[esi+0x71],edi
  414835:	or     ah,bh
  414837:	mul    DWORD PTR [edx]
  414839:	jg     0x41485a
  41483b:	loope  0x414890
  41483d:	leave  
  41483e:	pop    es
  41483f:	xchg   ecx,eax
  414840:	dec    edi
  414841:	add    DWORD PTR cs:[esi+ebp*8],edx
  414845:	inc    ebp
  414846:	sbb    eax,0x39667794
  41484b:	arpl   WORD PTR [ebp-0x44],si
  41484e:	jb     0x4147f1
  414850:	(bad)  
  414851:	pop    edx
  414852:	jae    0x414893
  414854:	leave  
  414855:	xor    DWORD PTR [ecx],ebp
  414857:	aam    0x6a
  414859:	xor    al,0x66
  41485b:	scas   eax,DWORD PTR es:[edi]
  41485c:	mov    esp,0x4e960c9f
  414861:	xchg   ecx,eax
  414862:	jp     0x414826
  414864:	(bad)  
  414865:	mov    esp,DWORD PTR [esi-0x3f1db240]
  41486b:	or     eax,0x60f436a7
  414870:	sbb    eax,0xae19ee7d
  414875:	xchg   edx,eax
  414876:	sbb    al,0xb0
  414878:	or     al,0x5
  41487a:	pop    ebp
  41487b:	retf   
  41487c:	rcr    DWORD PTR [esp+esi*2],0x97
  414880:	xchg   BYTE PTR [ecx],dl
  414882:	ins    DWORD PTR es:[edi],dx
  414883:	dec    ebx
  414884:	rcr    DWORD PTR [eax],1
  414886:	xor    eax,0xb63df82f
  41488b:	bound  edi,QWORD PTR [eax+0x408e24b6]
  414891:	fisubr DWORD PTR [edi+eax*8]
  414894:	mov    al,bl
  414896:	addr16 pop ds
  414898:	das    
  414899:	xor    dl,al
  41489b:	mov    esi,0xd2b954de
  4148a0:	push   edx
  4148a1:	xor    cl,BYTE PTR [edi-0x51f006ba]
  4148a7:	inc    ecx
  4148a8:	pop    edx
  4148a9:	jne    0x414853
  4148ab:	jge    0x41483a
  4148ad:	xor    BYTE PTR [edi+0x3a],al
  4148b0:	call   0xbd6bf146
  4148b5:	pop    ecx
  4148b6:	inc    edx
  4148b7:	out    0x78,al
  4148b9:	add    ebp,DWORD PTR [eax]
  4148bb:	jl     0x4148e8
  4148bd:	xor    DWORD PTR [ecx-0xd],esi
  4148c0:	mov    esp,0xaec8b3c4
  4148c5:	int3   
  4148c6:	add    DWORD PTR [esi-0x5a],0xe890422d
  4148cd:	nop
  4148ce:	or     al,0x2
  4148d0:	shl    DWORD PTR [edi],1
  4148d2:	and    al,0xef
  4148d4:	inc    esp
  4148d5:	sub    esp,DWORD PTR [eax-0x7c7e87b2]
  4148db:	adc    eax,0x87bfb34e
  4148e0:	add    al,0x92
  4148e2:	daa    
  4148e3:	(bad)  
  4148e4:	sbb    eax,0x1425596c
  4148e9:	pop    ss
  4148ea:	in     al,0x2d
  4148ec:	mov    ds:0x85d5c7d2,eax
  4148f1:	js     0x414937
  4148f3:	int    0xed
  4148f5:	pop    es
  4148f6:	jmp    0xbceadb3d
  4148fb:	mov    ebp,0xfa66954a
  414900:	and    BYTE PTR [edx-0x4c],dl
  414903:	dec    edi
  414904:	or     eax,0x84a3ca9b
  41490a:	retf   
  41490b:	scas   eax,DWORD PTR es:[edi]
  41490c:	jns    0x414973
  41490e:	sbb    al,0xa1
  414910:	rol    DWORD PTR ds:0x295d3f0f,cl
  414916:	ret    
  414917:	std    
  414918:	(bad)  
  414919:	fdiv   QWORD PTR ds:0xeb63e700
  41491f:	pop    ebx
  414920:	cdq    
  414921:	cld    
  414922:	jecxz  0x4148ce
  414924:	mov    edx,0x87912957
  414929:	xchg   ebx,eax
  41492a:	retf   0x95f4
  41492d:	int3   
  41492e:	das    
  41492f:	dec    ebx
  414930:	ret    
  414931:	es jmp 0x571e79c7
  414937:	jl     0x41496e
  414939:	pop    esi
  41493a:	lahf   
  41493b:	mov    ds:0xdd05d65d,ax
  414941:	push   cs
  414942:	mov    cl,BYTE PTR [edi+ecx*4+0x18]
  414946:	bound  ebp,QWORD PTR [ebx]
  414948:	pop    edx
  414949:	sbb    DWORD PTR [ebx-0x47b325a6],ebp
  41494f:	inc    ebp
  414950:	mov    ebp,0x394cca31
  414955:	cwde   
  414956:	stc    
  414957:	push   es
  414958:	push   0xb43323d8
  41495d:	jle    0x414929
  41495f:	fmulp  st(7),st
  414961:	xlat   BYTE PTR ds:[ebx]
  414962:	mov    gs,WORD PTR [edi]
  414964:	repz dec ebx
  414966:	mov    ch,0xe3
  414968:	xchg   dh,ah
  41496a:	dec    esi
  41496b:	cdq    
  41496c:	push   esi
  41496d:	lahf   
  41496e:	or     al,BYTE PTR [ebp-0x29a5e0b0]
  414974:	pop    edx
  414975:	loopne 0x41490b
  414977:	adc    eax,0x40ef2c47
  41497c:	mov    eax,0xbde2bf19
  414981:	(bad)  
  414982:	stc    
  414983:	adc    ebp,eax
  414985:	mov    eax,ds:0x2a221b2b
  41498a:	in     al,dx
  41498b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41498c:	es sub edi,ebx
  41498f:	out    0xad,al
  414991:	xchg   DWORD PTR ss:[esi+0x71c9038a],esp
  414998:	cmp    edi,DWORD PTR [eax]
  41499a:	push   edx
  41499b:	dec    ebp
  41499c:	arpl   WORD PTR [edi-0x21],dx
  41499f:	jo     0x414a1e
  4149a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149a2:	add    al,0xfa
  4149a4:	mov    bh,0xff
  4149a6:	int    0xa3
  4149a8:	and    ebp,0x97befcda
  4149ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149af:	and    ah,cl
  4149b1:	dec    ebp
  4149b2:	aad    0xec
  4149b4:	nop
  4149b5:	neg    DWORD PTR [ebp+0x20b9ede1]
  4149bb:	ja     0x414946
  4149bd:	addr16 mov cl,0x20
  4149c0:	pusha  
  4149c1:	inc    DWORD PTR [ecx]
  4149c3:	int3   
  4149c4:	lds    edi,FWORD PTR [ebx-0x5a]
  4149c7:	xor    ch,BYTE PTR [esi-0x72]
  4149ca:	add    edi,eax
  4149cc:	in     eax,dx
  4149cd:	inc    esi
  4149ce:	fdivr  QWORD PTR [eax]
  4149d0:	pop    ebx
  4149d1:	mov    eax,ds:0x8bcee140
  4149d6:	sub    DWORD PTR [eax+0x471de789],0x7fadede9
  4149e0:	leave  
  4149e1:	ret    0x9268
  4149e4:	(bad)  
  4149e5:	xchg   ebx,eax
  4149e6:	jge    0x414a60
  4149e8:	outs   dx,DWORD PTR ds:[esi]
  4149e9:	fidivr WORD PTR [eax-0x4c]
  4149ec:	cs jl  0x4149a5
  4149ef:	call   0xc03beafc
  4149f4:	fbld   TBYTE PTR [ecx+0x63]
  4149f7:	jbe    0x4149bf
  4149f9:	int3   
  4149fa:	inc    edx
  4149fb:	cmc    
  4149fc:	pop    ss
  4149fd:	sbb    esi,DWORD PTR [ecx-0x79]
  414a00:	in     eax,dx
  414a01:	sti    
  414a02:	jns    0x414a78
  414a04:	cmp    bh,BYTE PTR [esi]
  414a06:	jb     0x4149fc
  414a08:	dec    esi
  414a09:	pop    edx
  414a0a:	mov    esp,0xaabaa2c0
  414a0f:	add    DWORD PTR [edx-0x67],ecx
  414a12:	cmp    eax,0xdf640e8a
  414a17:	rcl    DWORD PTR [ebp+0x6b76f995],1
  414a1d:	jle    0x4149eb
  414a1f:	and    DWORD PTR [ebx],eax
  414a21:	pop    ds
  414a22:	stos   DWORD PTR es:[edi],eax
  414a23:	int    0x84
  414a25:	pop    esp
  414a26:	icebp  
  414a27:	(bad)  
  414a29:	call   0x8bb073fb
  414a2e:	popa   
  414a2f:	sbb    eax,DWORD PTR [edx]
  414a31:	mov    ah,0x63
  414a33:	or     BYTE PTR [edi+0x2],cl
  414a36:	push   esi
  414a37:	fstp   TBYTE PTR [eax+ecx*1+0x7f]
  414a3b:	leave  
  414a3c:	and    esi,DWORD PTR [eax]
  414a3e:	ret    0x49ea
  414a41:	xor    ch,BYTE PTR [ebx+0x7d123b51]
  414a47:	and    edx,DWORD PTR [ebx]
  414a49:	mov    esi,0xa4addb58
  414a4e:	xor    ecx,DWORD PTR [ebx+0x7c3e1d1d]
  414a54:	out    dx,eax
  414a55:	dec    esp
  414a56:	sahf   
  414a57:	icebp  
  414a58:	stos   DWORD PTR es:[edi],eax
  414a59:	mov    ds:0x9c4792cb,eax
  414a5e:	xor    DWORD PTR [esi-0x1b],ebx
  414a61:	sti    
  414a62:	cs aas 
  414a64:	into   
  414a65:	jmp    0x414a00
  414a67:	fild   WORD PTR [edi+0xccc62e6]
  414a6d:	xchg   esi,eax
  414a6e:	imul   esi,DWORD PTR es:0x3a9a43ce,0xffffffb4
  414a76:	mov    bh,0x6f
  414a78:	mov    al,0x56
  414a7a:	add    BYTE PTR ds:0x97028862,bh
  414a80:	cmp    ch,BYTE PTR [ebx+esi*4+0x76]
  414a84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a85:	lock lahf 
  414a87:	inc    ecx
  414a88:	mov    esp,0xef125f0a
  414a8d:	aad    0xab
  414a8f:	cdq    
  414a90:	xor    ecx,DWORD PTR [esi-0x59]
  414a93:	inc    ebp
  414a94:	mov    dh,0xe0
  414a96:	push   esi
  414a97:	push   ebx
  414a98:	xchg   esi,eax
  414a99:	push   cs
  414a9a:	or     eax,0xaba131d7
  414a9f:	cs mov bl,0x66
  414aa2:	mov    esp,0x10a56265
  414aa7:	leave  
  414aa8:	mov    bh,0x53
  414aaa:	or     al,0x4f
  414aac:	xchg   DWORD PTR [eax],edx
  414aae:	sbb    ah,BYTE PTR [ebx-0x30]
  414ab1:	fldenv [edx]
  414ab3:	xchg   esi,eax
  414ab4:	mov    eax,ds:0x9a8c2afb
  414ab9:	sbb    edx,edi
  414abb:	ret    
  414abc:	mov    ebx,0xda993c66
  414ac1:	(bad)  
  414ac2:	lahf   
  414ac3:	jns    0x414b1b
  414ac5:	in     eax,0x92
  414ac7:	sbb    edi,eax
  414ac9:	adc    al,0x46
  414acb:	xchg   ah,cl
  414acd:	push   ds
  414ace:	mov    WORD PTR [ebp-0x39],es
  414ad1:	std    
  414ad2:	pusha  
  414ad3:	mov    al,ds:0x3d18bf55
  414ad8:	and    eax,0x35892eb1
  414add:	enter  0xc5b0,0x95
  414ae1:	inc    esp
  414ae2:	cmp    eax,0x4c4e4ad3
  414ae7:	jnp    0x414aaa
  414ae9:	mov    bl,0xc8
  414aeb:	je     0x414ac2
  414aed:	sbb    ebx,ecx
  414aef:	sbb    ebp,DWORD PTR [edi-0x48]
  414af2:	dec    eax
  414af3:	pop    esp
  414af4:	cdq    
  414af5:	mov    edx,0x7895ca19
  414afa:	jnp    0x414a9d
  414afc:	xchg   esi,eax
  414afd:	xor    DWORD PTR [ebx],eax
  414aff:	shl    DWORD PTR ds:0xf5427309,0x16
  414b06:	arpl   WORD PTR [ecx-0x7b6189ef],dx
  414b0c:	push   0xc1630bfd
  414b11:	out    0x19,al
  414b13:	mov    ebp,0x85612fbd
  414b18:	pop    esi
  414b19:	or     eax,0x26f0dd50
  414b1e:	pop    esp
  414b1f:	and    BYTE PTR [ecx+0x23],dl
  414b22:	fmul   DWORD PTR [edx]
  414b24:	sbb    BYTE PTR [eax+edi*1],dh
  414b27:	or     BYTE PTR [eax+0x2a058cd2],ch
  414b2d:	push   es
  414b2e:	gs retf 
  414b30:	es xchg esp,eax
  414b32:	xor    dh,bh
  414b34:	add    DWORD PTR [edx],eax
  414b36:	int    0x20
  414b38:	or     al,0x92
  414b3a:	pop    ss
  414b3b:	mov    eax,0x8d9dfb31
  414b40:	clc    
  414b41:	cdq    
  414b42:	in     eax,dx
  414b43:	(bad)  
  414b44:	mov    edi,0x7c76356b
  414b49:	and    cl,bl
  414b4b:	push   ebx
  414b4c:	cmp    al,0x9f
  414b4e:	jbe    0x414ae5
  414b50:	(bad)  
  414b51:	icebp  
  414b52:	jmp    0x4a76:0x423d8392
  414b59:	leave  
  414b5a:	mov    bh,0xb
  414b5c:	rcr    BYTE PTR [esi+0x7f],cl
  414b5f:	ror    esi,cl
  414b61:	sbb    al,BYTE PTR [edi]
  414b63:	mov    eax,ds:0x1cfa47a8
  414b68:	and    DWORD PTR [ebx+eax*8],eax
  414b6b:	iret   
  414b6c:	gs inc eax
  414b6e:	push   ss
  414b6f:	iret   
  414b70:	ins    DWORD PTR es:[edi],dx
  414b71:	es or  eax,0x67de6066
  414b77:	pop    es
  414b78:	or     edx,DWORD PTR [edi+0x7c8fbc36]
  414b7e:	push   0xffffff81
  414b80:	mov    ch,0x25
  414b82:	inc    esp
  414b83:	push   0x17c776f8
  414b88:	pop    edi
  414b89:	adc    BYTE PTR [edi-0x7d],0xc4
  414b8d:	mov    eax,0x5f1b1067
  414b92:	les    ax,DWORD PTR [esi+eiz*8+0x4336afd]
  414b9a:	dec    edx
  414b9b:	mov    ds:0x2d53543e,al
  414ba0:	and    esi,ebx
  414ba2:	mov    eax,0x4af2c9bd
  414ba7:	or     DWORD PTR [esi-0x66],edx
  414baa:	in     eax,0x72
  414bac:	daa    
  414bad:	sub    eax,eax
  414baf:	jbe    0x414b3d
  414bb1:	mov    BYTE PTR [esi+edi*4],bl
  414bb4:	in     eax,dx
  414bb5:	push   ebp
  414bb6:	sbb    BYTE PTR gs:0xde0e516c,ah
  414bbd:	mov    ch,0x12
  414bbf:	inc    ebp
  414bc0:	iret   
  414bc1:	pop    ss
  414bc2:	sbb    BYTE PTR [ebx+0x27],al
  414bc5:	in     eax,0xef
  414bc7:	loopne 0x414c2b
  414bc9:	add    BYTE PTR [edi-0x798348c9],bl
  414bcf:	hlt    
  414bd0:	ss sbb ch,dl
  414bd3:	shr    BYTE PTR [eax-0x2],cl
  414bd6:	dec    edi
  414bd7:	mov    ss,WORD PTR [ecx]
  414bd9:	mov    edx,0x4b4b4bb4
  414bde:	aad    0x7f
  414be0:	mov    edi,0x51481abe
  414be5:	cli    
  414be6:	xor    BYTE PTR [ebx],al
  414be8:	add    eax,0x1f20d7fe
  414bed:	popa   
  414bee:	xchg   edx,ebx
  414bf0:	push   0x4e
  414bf2:	and    al,0xd5
  414bf4:	inc    eax
  414bf5:	rcl    DWORD PTR [eax-0x72],0x18
  414bf9:	lds    edx,FWORD PTR [ecx-0x32fc1a50]
  414bff:	pop    esi
  414c00:	fnstsw WORD PTR [edi-0x6d805e95]
  414c06:	(bad)  
  414c07:	cwde   
  414c08:	pop    esp
  414c09:	fldenv [ebp-0x36]
  414c0c:	(bad)  
  414c0d:	push   edx
  414c0e:	dec    esp
  414c0f:	add    BYTE PTR [esp+esi*4],bh
  414c12:	enter  0x30be,0x6c
  414c16:	lea    edi,[ecx+0x141039cf]
  414c1c:	inc    edx
  414c1d:	jmp    0xa92c3a39
  414c22:	xchg   ebx,esi
  414c24:	jge    0x414c07
  414c26:	and    al,0xeb
  414c28:	pop    ecx
  414c29:	xor    ebp,DWORD PTR [ebx+0x17720846]
  414c2f:	sub    eax,0x946df534
  414c34:	xor    cl,0x13
  414c37:	test   eax,0xe0d4bb92
  414c3c:	fnstsw WORD PTR [ebx]
  414c3e:	ret    0x1f9
  414c41:	test   al,dl
  414c43:	push   eax
  414c44:	rol    BYTE PTR [ecx],1
  414c46:	aad    0x92
  414c48:	adc    al,0x28
  414c4a:	sar    BYTE PTR [eax],0x37
  414c4d:	loop   0x414c3c
  414c4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c50:	cmp    DWORD PTR [ebp-0x2f756b7a],0x2e
  414c57:	cmp    al,BYTE PTR [esi+0x26d15421]
  414c5d:	out    0x31,al
  414c5f:	sbb    ch,BYTE PTR ds:0x7037fe68
  414c65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c66:	adc    eax,DWORD PTR [esi+0x3a2da385]
  414c6c:	sbb    DWORD PTR [edx+eax*8-0x41],edi
  414c70:	push   ecx
  414c71:	sbb    al,0xf3
  414c73:	push   ecx
  414c74:	sbb    al,0xc2
  414c76:	test   DWORD PTR [esi],0xedb6ff93
  414c7c:	das    
  414c7d:	dec    eax
  414c7e:	data16 mov al,0x84
  414c81:	test   al,0x4b
  414c83:	sub    al,0xf1
  414c85:	test   al,0x78
  414c87:	sbb    BYTE PTR [edx],dl
  414c89:	and    al,BYTE PTR [ebp+edx*8+0x16dac8e6]
  414c90:	push   0x28
  414c92:	ds loope 0x414cf9
  414c95:	clc    
  414c96:	pop    esp
  414c97:	push   esp
  414c98:	out    dx,al
  414c99:	xchg   ecx,eax
  414c9a:	aad    0xdd
  414c9c:	cmp    eax,esp
  414c9e:	xchg   ebp,eax
  414c9f:	fidiv  DWORD PTR [esi]
  414ca1:	sbb    bh,BYTE PTR [edi+0x3a]
  414ca4:	(bad)  
  414ca5:	mov    esp,0xeb59384
  414caa:	aad    0x72
  414cac:	mov    dh,BYTE PTR [edx+0x61]
  414caf:	jle    0x414d26
  414cb1:	dec    eax
  414cb2:	and    DWORD PTR [ecx+0x68],0xe6cb4c16
  414cb9:	jb     0x414ca9
  414cbb:	ret    0x1d97
  414cbe:	loopne 0x414c67
  414cc0:	adc    bh,BYTE PTR [edi-0x60]
  414cc3:	pop    ss
  414cc4:	xchg   edi,eax
  414cc5:	add    BYTE PTR [edi-0x466fcfc6],dh
  414ccb:	(bad)  
  414ccc:	imul   ebp,eax,0x1ec23018
  414cd2:	cld    
  414cd3:	mov    ebx,0xbe6a39e1
  414cd8:	je     0x414c74
  414cda:	loopne 0x414c83
  414cdc:	es loopne 0x414cee
  414cdf:	inc    edx
  414ce0:	mov    ebx,0xa94c067e
  414ce5:	pusha  
  414ce6:	es jmp 0xdd318b87
  414cec:	js     0x414ceb
  414cee:	clc    
  414cef:	lods   eax,DWORD PTR ds:[esi]
  414cf0:	sub    BYTE PTR [eax+0x7a061c12],cl
  414cf6:	pop    ebx
  414cf7:	push   es
  414cf8:	or     BYTE PTR [esi],0xf5
  414cfb:	push   ebx
  414cfc:	xchg   ecx,eax
  414cfd:	aaa    
  414cfe:	push   ecx
  414cff:	pushf  
  414d00:	nop
  414d01:	sub    edi,DWORD PTR [esi+0x6559a0d7]
  414d07:	repnz and dh,BYTE PTR [ecx]
  414d0a:	pop    esp
  414d0b:	in     eax,0xdb
  414d0d:	(bad)  
  414d0e:	cli    
  414d0f:	mov    ebp,cs
  414d11:	outs   dx,DWORD PTR ds:[esi]
  414d12:	das    
  414d13:	es loop 0x414d0a
  414d16:	scas   eax,DWORD PTR es:[edi]
  414d17:	xchg   esp,eax
  414d18:	les    edi,FWORD PTR [eax-0x4f89152f]
  414d1e:	mov    ecx,0x48be1555
  414d23:	jo     0x414d2b
  414d25:	inc    edx
  414d26:	lds    eax,FWORD PTR [edi]
  414d28:	pop    edx
  414d29:	cwde   
  414d2a:	es dec edx
  414d2c:	out    0xfa,al
  414d2e:	in     al,0xb2
  414d30:	cmp    al,0xce
  414d32:	call   0x2466dc02
  414d37:	and    DWORD PTR [edx+edx*1+0x2a],edx
  414d3b:	pop    edi
  414d3c:	xchg   ebp,eax
  414d3d:	fiadd  WORD PTR [ebp+0xc]
  414d40:	mov    ds:0x8dc7e133,eax
  414d45:	sub    al,BYTE PTR [eax]
  414d47:	std    
  414d48:	sub    dl,BYTE PTR [eax-0x51]
  414d4b:	or     BYTE PTR [edi-0x40],al
  414d4e:	sub    al,0xdf
  414d51:	mov    WORD PTR [ebx],es
  414d53:	out    dx,al
  414d54:	mov    al,0x95
  414d56:	xor    BYTE PTR [edx],dh
  414d58:	add    BYTE PTR [edi],bl
  414d5a:	mov    ds:0x44db8de6,eax
  414d5f:	add    BYTE PTR [ebx-0x80],bh
  414d62:	adc    BYTE PTR [eax+0x6c],bh
  414d65:	shl    DWORD PTR [ebp+0x69053d06],cl
  414d6b:	pusha  
  414d6c:	out    dx,al
  414d6d:	dec    ecx
  414d6e:	repnz sbb al,0x30
  414d71:	xchg   ebx,eax
  414d72:	push   edi
  414d73:	inc    esp
  414d74:	arpl   WORD PTR [eax-0xc],sp
  414d77:	cmp    BYTE PTR [ebx-0x328800a1],0x4f
  414d7e:	pop    eax
  414d7f:	fwait
  414d80:	mov    ebp,0x20bfc1ad
  414d85:	xchg   DWORD PTR [ecx*1+0x320e4ee3],ebx
  414d8c:	inc    edi
  414d8d:	adc    DWORD PTR [ecx+0x69aa8080],edi
  414d93:	pop    ebx
  414d94:	inc    eax
  414d95:	inc    ebp
  414d96:	mov    cl,0x26
  414d98:	pop    es
  414d99:	add    esp,ebx
  414d9b:	fisub  WORD PTR [ebx-0x44ccf1b3]
  414da1:	sti    
  414da2:	adc    ch,BYTE PTR [edi+0x4d]
  414da5:	ss popf 
  414da7:	aad    0xc5
  414da9:	addr16 jge 0x414d7e
  414dac:	dec    edi
  414dad:	lods   eax,DWORD PTR ds:[esi]
  414dae:	xor    bl,cl
  414db0:	lods   eax,DWORD PTR ds:[esi]
  414db1:	push   ebx
  414db2:	aad    0xad
  414db4:	sbb    al,0x59
  414db6:	loopne 0x414d5e
  414db8:	mov    DWORD PTR [esp+ecx*2-0x7f],ebp
  414dbc:	inc    eax
  414dbd:	addr16 out 0x18,al
  414dc0:	pop    es
  414dc1:	sbb    DWORD PTR [ecx+0x70e9e7b2],ebp
  414dc7:	jmp    0x11f2783c
  414dcc:	add    BYTE PTR [edi],dh
  414dce:	xor    bl,BYTE PTR [ecx-0x1275643a]
  414dd4:	js     0x414de0
  414dd6:	cmp    eax,0x9f600d6e
  414ddb:	(bad)  
  414ddc:	rcr    DWORD PTR [eax+0x15],0xfe
  414de0:	iret   
  414de1:	in     eax,dx
  414de2:	cmp    cl,bh
  414de4:	(bad)  
  414de5:	imul   esp,edx,0x33c3c75
  414deb:	aad    0x2e
  414ded:	xchg   esp,eax
  414dee:	es clc 
  414df0:	leave  
  414df1:	dec    esp
  414df2:	clc    
  414df3:	pusha  
  414df4:	popf   
  414df5:	fiadd  WORD PTR [edx+ebp*4]
  414df8:	xor    al,0xb6
  414dfa:	pop    edi
  414dfb:	test   BYTE PTR [eax],0x37
  414dfe:	mov    edi,DWORD PTR [eax]
  414e00:	push   ds
  414e01:	xchg   esi,eax
  414e02:	push   esp
  414e03:	push   eax
  414e04:	xchg   cl,ah
  414e06:	inc    esp
  414e07:	xor    eax,0xf3d417e5
  414e0c:	push   esi
  414e0d:	sub    al,0xc6
  414e0f:	or     ebx,DWORD PTR [esi-0x5d98ba08]
  414e15:	out    dx,al
  414e16:	mov    esp,ebx
  414e18:	dec    edx
  414e19:	push   ds
  414e1a:	pop    ss
  414e1b:	mov    al,ds:0x302121c8
  414e20:	fcomp  DWORD PTR [esp+eiz*2-0x1d]
  414e24:	jb     0x414e65
  414e26:	add    bh,BYTE PTR ss:[ebp+0x71b8a480]
  414e2d:	pushf  
  414e2e:	out    0x32,al
  414e30:	or     ah,BYTE PTR [esi+0x71]
  414e33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e34:	mov    edx,DWORD PTR [ecx+ecx*2-0x67]
  414e38:	in     al,0xfe
  414e3a:	xchg   esp,eax
  414e3b:	mov    esp,0xf2df9170
  414e40:	cdq    
  414e41:	jmp    0x7850da19
  414e46:	(bad)  
  414e47:	cs cld 
  414e49:	mov    edi,fs
  414e4b:	sub    eax,0x47ed9322
  414e50:	out    0x48,al
  414e52:	push   esp
  414e53:	jns    0x414dff
  414e55:	sub    DWORD PTR es:[ebx+0x7c],esp
  414e59:	pop    esi
  414e5a:	aam    0xa2
  414e5c:	imul   esi,DWORD PTR [ebp+0x1a],0x76
  414e60:	into   
  414e61:	xchg   ebx,eax
  414e62:	outs   dx,BYTE PTR ds:[esi]
  414e63:	add    al,0xbe
  414e65:	xchg   edx,eax
  414e66:	mov    ecx,0x3863fa13
  414e6b:	mov    ah,0xdf
  414e6d:	pop    ebx
  414e6e:	out    dx,al
  414e6f:	cmp    al,0x79
  414e71:	and    esi,eax
  414e73:	dec    edx
  414e74:	sub    BYTE PTR [esi],cl
  414e76:	div    DWORD PTR [ebx]
  414e78:	sahf   
  414e79:	adc    ebx,DWORD PTR [ebp+0x40]
  414e7c:	ret    
  414e7d:	in     eax,0x91
  414e7f:	enter  0xa132,0x50
  414e83:	pop    esi
  414e84:	out    0x9d,al
  414e86:	add    BYTE PTR [bp+si-0x1f],bl
  414e8a:	mov    WORD PTR [ebx+0x15c86c73],ss
  414e90:	les    edx,FWORD PTR [edi-0x2d27cd08]
  414e96:	pop    es
  414e97:	aad    0x8f
  414e99:	mov    eax,0xe4e41dd3
  414e9e:	adc    al,BYTE PTR [esi-0x26]
  414ea1:	shl    ebp,0xa4
  414ea4:	outs   dx,DWORD PTR ds:[esi]
  414ea5:	outs   dx,BYTE PTR ds:[esi]
  414ea6:	pop    ds
  414ea7:	jecxz  0x414e4d
  414ea9:	push   ebx
  414eaa:	(bad)  
  414eab:	out    0xa7,eax
  414ead:	dec    ebx
  414eae:	xchg   esp,eax
  414eaf:	lds    ecx,FWORD PTR [esi-0x4c6f3c7a]
  414eb5:	aam    0xb4
  414eb7:	lahf   
  414eb8:	loopne 0x414f1a
  414eba:	les    ebx,FWORD PTR [ebx+0x1b9d0e79]
  414ec0:	or     DWORD PTR [edi],ebx
  414ec2:	sub    DWORD PTR [ecx+0x29],0x65804e1e
  414ec9:	mov    eax,ebp
  414ecb:	mov    ebx,0xf5e2a559
  414ed0:	and    dh,BYTE PTR [edx+0x5f]
  414ed3:	mov    BYTE PTR [edi+0x2a],ch
  414ed6:	mov    dl,0x4c
  414ed8:	aam    0x92
  414eda:	cmp    BYTE PTR [esi-0x2986d980],cl
  414ee0:	mov    dl,0xd4
  414ee2:	ds and dl,al
  414ee5:	cdq    
  414ee6:	loope  0x414e87
  414ee8:	test   BYTE PTR [edx+ecx*2],dh
  414eeb:	xchg   edi,eax
  414eec:	clc    
  414eed:	push   edi
  414eee:	mov    gs,edi
  414ef0:	addr16 dec eax
  414ef2:	and    cl,dl
  414ef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ef5:	sub    eax,0x2d47b747
  414efa:	les    esi,FWORD PTR [ebp+0x3b8b43c1]
  414f00:	aaa    
  414f01:	xor    eax,DWORD PTR [edi-0x36e75bee]
  414f07:	pusha  
  414f08:	sub    eax,0xc90d3265
  414f0d:	xchg   esi,eax
  414f0e:	cmp    ecx,eax
  414f10:	dec    ecx
  414f11:	or     eax,0xe3c15a99
  414f16:	xchg   esp,eax
  414f17:	es hlt 
  414f19:	sbb    ebp,DWORD PTR [esi+0x2d91d292]
  414f1f:	cmp    eax,DWORD PTR [ecx-0x7b]
  414f22:	sti    
  414f23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f24:	xor    ebp,ecx
  414f26:	call   0x178d:0xe7df3c41
  414f2d:	mov    WORD PTR [edx-0x54],ss
  414f30:	das    
  414f31:	shl    BYTE PTR [eax-0xff1b63f],cl
  414f37:	leave  
  414f38:	hlt    
  414f39:	jle    0x414edb
  414f3b:	xor    BYTE PTR [ebx+0x5b],ah
  414f3e:	dec    edx
  414f3f:	(bad)  
  414f40:	fbld   TBYTE PTR [ebp-0x6f]
  414f43:	push   esi
  414f44:	jb     0x414f2b
  414f46:	sbb    edx,DWORD PTR ds:0x1b431079
  414f4c:	test   eax,0xfde45de2
  414f51:	(bad)  
  414f52:	std    
  414f53:	data16 sub BYTE PTR [edi],cl
  414f56:	jp     0x414f4e
  414f58:	adc    BYTE PTR [edi+0x2b],ch
  414f5b:	gs scas eax,DWORD PTR es:[edi]
  414f5d:	fwait
  414f5e:	scas   eax,DWORD PTR es:[edi]
  414f5f:	xchg   esp,eax
  414f60:	fcmovnbe st,st(3)
  414f62:	inc    eax
  414f63:	or     dl,BYTE PTR [ebx]
  414f65:	out    dx,al
  414f66:	add    ebx,DWORD PTR [esi+esi*4-0x55]
  414f6a:	mov    ds:0x796e2bb8,al
  414f6f:	test   al,0xe2
  414f71:	daa    
  414f72:	enter  0xc7d3,0xd7
  414f76:	icebp  
  414f77:	or     DWORD PTR [edx+0x64b650f3],ebp
  414f7d:	nop
  414f7e:	mov    edx,0x9c74bb05
  414f83:	and    edi,DWORD PTR [edx]
  414f85:	scas   al,BYTE PTR es:[edi]
  414f86:	mov    edx,0x4d69e223
  414f8b:	xchg   ecx,eax
  414f8c:	into   
  414f8d:	std    
  414f8e:	mov    edi,DWORD PTR [ebx]
  414f90:	leave  
  414f91:	xchg   esp,eax
  414f92:	imul   edx,DWORD PTR [edi+0x3c],0x466e2705
  414f99:	into   
  414f9a:	iret   
  414f9b:	sub    cl,BYTE PTR [eax-0x3d33c159]
  414fa1:	sub    al,0xaa
  414fa3:	loopne 0x414f65
  414fa5:	jp     0x414fe7
  414fa7:	out    0x69,al
  414fa9:	xor    cl,dl
  414fab:	and    al,0xa8
  414fad:	xchg   edx,eax
  414fae:	imul   eax,DWORD PTR [ecx+esi*1-0x2f],0xc33d2279
  414fb6:	sti    
  414fb7:	sbb    eax,0xf195c18b
  414fbc:	lea    edi,[edi-0x66]
  414fbf:	and    eax,0xcaa8e858
  414fc4:	jecxz  0x414fd6
  414fc6:	adc    BYTE PTR [esi+ebp*2],bl
  414fc9:	mov    ds:0xa1ace13b,eax
  414fce:	push   eax
  414fcf:	sub    ah,bl
  414fd1:	int    0xed
  414fd3:	dec    edx
  414fd4:	sub    eax,0x8d84366e
  414fd9:	jg     0x41503e
  414fdb:	outs   dx,DWORD PTR ds:[esi]
  414fdc:	lods   eax,DWORD PTR ds:[esi]
  414fdd:	jns    0x414f67
  414fdf:	and    al,dl
  414fe1:	inc    BYTE PTR [edx-0x4f0f9ab5]
  414fe7:	in     eax,0x15
  414fe9:	jmp    0x415069
  414feb:	xlat   BYTE PTR ds:[ebx]
  414fec:	stos   BYTE PTR es:[edi],al
  414fed:	retf   0xe4c7
  414ff0:	call   0x9ab3:0xb95e097
  414ff7:	mov    DWORD PTR [edx+0x1d],ebx
  414ffa:	jecxz  0x41503d
  414ffc:	sub    ebp,DWORD PTR [ebp+0x76]
  414fff:	shl    BYTE PTR [edi+0x32],0xfb
  415003:	mov    ?,WORD PTR [edx+edx*2+0x4d]
  415007:	daa    
  415008:	xor    DWORD PTR [ebx],edi
  41500a:	pop    ss
  41500b:	lock nop
  41500d:	adc    eax,0x19524661
  415012:	call   0xb9ca:0xf067a51a
  415019:	mov    dl,0x48
  41501b:	xor    ebp,edx
  41501d:	mov    fs,WORD PTR [esi+0x620f381d]
  415023:	xchg   esi,eax
  415024:	idiv   BYTE PTR [edx-0x7d240563]
  41502a:	inc    ebp
  41502b:	inc    edi
  41502c:	mov    edi,0xe2eabb35
  415031:	sbb    al,0x26
  415033:	adc    al,0x38
  415035:	jne    0x4150ac
  415037:	cs nop
  415039:	and    eax,0xd413ca0
  41503e:	pop    edi
  41503f:	dec    esp
  415040:	sbb    edx,DWORD PTR [esp+edx*8-0x6cb9bddb]
  415047:	mov    ebp,0xd42e9799
  41504c:	pop    es
  41504d:	pop    ecx
  41504e:	rcr    BYTE PTR [ebx],0x81
  415051:	rcr    ebp,0x81
  415054:	cli    
  415055:	push   esi
  415056:	dec    edx
  415057:	jne    0x415062
  415059:	cmp    eax,eax
  41505b:	fsubr  st,st(3)
  41505d:	or     eax,0x58f8f051
  415062:	dec    esi
  415063:	add    BYTE PTR [ecx-0x5369bf0],al
  415069:	pop    ebp
  41506a:	(bad)  
  41506b:	pop    ecx
  41506c:	jne    0x415059
  41506e:	inc    ebx
  41506f:	xor    eax,0x8d2d97e6
  415074:	scas   eax,DWORD PTR es:[edi]
  415075:	xor    al,0xc4
  415077:	test   DWORD PTR [edx-0x341b32af],edi
  41507d:	ror    BYTE PTR [ebp+0xde2ee49],1
  415083:	pop    esp
  415084:	lea    eax,[esi+eax*1+0x3d889851]
  41508b:	mov    edi,0x25802e0a
  415090:	inc    esi
  415091:	xchg   esi,eax
  415092:	aas    
  415093:	out    0xb4,al
  415095:	pop    ss
  415096:	scas   eax,DWORD PTR es:[edi]
  415097:	xchg   esp,eax
  415098:	add    dh,0x27
  41509b:	adc    DWORD PTR [ebx-0x7135f9e6],esp
  4150a1:	psubusw mm5,QWORD PTR [edi-0x10]
  4150a5:	dec    edx
  4150a6:	sub    DWORD PTR [ecx],esi
  4150a8:	psllw  mm7,mm3
  4150ab:	out    dx,eax
  4150ac:	fcomi  st,st(3)
  4150ae:	xchg   edx,eax
  4150af:	inc    edi
  4150b0:	loope  0x4150ab
  4150b2:	push   edi
  4150b3:	or     al,dh
  4150b5:	add    DWORD PTR [esp+edx*4],ebx
  4150b8:	pushf  
  4150b9:	xor    eax,0xb3703a50
  4150be:	xor    edx,DWORD PTR [ebx+0x7026b122]
  4150c4:	jb     0x30909e6c
  4150ca:	sub    eax,0x59fbb21d
  4150cf:	out    dx,al
  4150d0:	scas   al,BYTE PTR es:[edi]
  4150d1:	bnd jnp 0x415123
  4150d4:	push   ecx
  4150d5:	sub    ch,BYTE PTR cs:[ebx-0x1e]
  4150d9:	ins    DWORD PTR es:[edi],dx
  4150da:	push   ds
  4150db:	fnstenv [edi-0x61227d60]
  4150e1:	xor    al,0x9b
  4150e3:	xor    ecx,DWORD PTR [esi+0x64]
  4150e6:	lldt   WORD PTR [ebp-0x1d087b14]
  4150ed:	xchg   ebx,eax
  4150ee:	jmp    0x415146
  4150f0:	dec    ecx
  4150f1:	xchg   esi,eax
  4150f2:	pop    ebx
  4150f3:	fsubr  st(7),st
  4150f5:	inc    edx
  4150f6:	xchg   edi,eax
  4150f7:	xchg   edi,eax
  4150f8:	jno    0x415133
  4150fa:	jmp    0x4149:0xed81149a
  415101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415102:	mov    ecx,0x9c72cee2
  415107:	mov    ebx,0x75068d22
  41510c:	inc    ebp
  41510d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41510e:	test   al,bh
  415110:	outs   dx,BYTE PTR ds:[esi]
  415111:	fs inc edx
  415113:	sub    eax,0xacca96bd
  415118:	pop    esp
  415119:	std    
  41511a:	sti    
  41511b:	mov    fs,WORD PTR [ecx-0x70]
  41511e:	hlt    
  41511f:	push   es
  415120:	sbb    DWORD PTR [ebx-0x726dc8e8],esp
  415126:	push   0x90ff1a8d
  41512b:	(bad)  
  41512c:	pop    ss
  41512d:	mov    ecx,0x3044eb95
  415132:	mov    dl,0xda
  415134:	mov    edx,0xffea7c29
  415139:	xor    eax,0xd2901427
  41513e:	mov    dh,0x54
  415140:	scas   al,BYTE PTR es:[edi]
  415141:	xor    ch,cl
  415143:	xchg   esi,eax
  415144:	aam    0x86
  415146:	or     eax,0xe53f0eed
  41514b:	repz pop edx
  41514d:	jne    0x4151ca
  41514f:	pop    ebx
  415150:	test   DWORD PTR [ebp-0x6b],esi
  415153:	mov    bh,0xed
  415155:	xor    al,BYTE PTR [eax-0x239ce1b7]
  41515b:	popa   
  41515c:	(bad)  
  41515d:	fnsave ds:0xc6d191f6
  415163:	dec    eax
  415164:	xor    eax,ebx
  415166:	call   0x6eddb41
  41516b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41516c:	mov    esi,0x6a13e73c
  415171:	ja     0x41519a
  415173:	inc    esi
  415174:	sbb    BYTE PTR [edx-0x54],0x52
  415178:	inc    esp
  415179:	or     DWORD PTR ds:0x15ee43c7,esi
  41517f:	sbb    edi,edx
  415181:	retf   
  415182:	js     0x415111
  415184:	pop    ds
  415185:	fs iret 
  415187:	xor    al,0x7f
  415189:	jmp    0x5cb30c21
  41518e:	pop    ebx
  41518f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415190:	push   ss
  415191:	add    BYTE PTR [ebp-0x61],ah
  415194:	mov    esi,0xc6cb9f93
  415199:	cmp    bh,BYTE PTR [esi]
  41519b:	xor    eax,0xa9f9a0c
  4151a0:	into   
  4151a1:	imul   esi,DWORD PTR [esi],0xffffffd7
  4151a4:	adc    bh,BYTE PTR [edx]
  4151a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151a7:	cwde   
  4151a8:	or     ebp,0x75
  4151ab:	xchg   BYTE PTR [ebx-0x43b496a8],ch
  4151b1:	mov    ebp,0xdb44ed22
  4151b6:	push   cs
  4151b7:	je     0x4151bc
  4151b9:	out    0x80,al
  4151bb:	adc    ebp,edi
  4151bd:	je     0x41516b
  4151bf:	add    al,0x17
  4151c1:	xchg   ebp,eax
  4151c2:	jg     0x4151bd
  4151c4:	retf   
  4151c5:	addr16 and ebx,ecx
  4151c8:	aad    0xa6
  4151ca:	push   ebx
  4151cb:	inc    BYTE PTR [ebx-0x7e11c097]
  4151d1:	je     0x415190
  4151d3:	es pop es
  4151d5:	out    dx,eax
  4151d6:	popf   
  4151d7:	or     al,0x7
  4151d9:	enter  0x6859,0x55
  4151dd:	stos   DWORD PTR es:[edi],eax
  4151de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151df:	arpl   WORD PTR [edx+0x26],sp
  4151e2:	mov    ebp,0xcef309ac
  4151e7:	out    0x95,eax
  4151e9:	xor    eax,0x4cd8dd1f
  4151ee:	rol    DWORD PTR [ebx+0xa70f292],cl
  4151f4:	sub    BYTE PTR ss:[edx],0x1d
  4151f8:	or     al,0x99
  4151fa:	das    
  4151fb:	shl    BYTE PTR [edi-0x3d],0x24
  4151ff:	loop   0x415208
  415201:	arpl   WORD PTR [eax],di
  415203:	push   esi
  415204:	dec    ecx
  415205:	icebp  
  415206:	inc    edx
  415207:	test   DWORD PTR [ecx+0x7b9923a],ebx
  41520d:	loop   0x415222
  41520f:	(bad)  ds:0xa64bee6a
  415215:	jge    0x4151cc
  415217:	xor    ch,ah
  415219:	and    al,BYTE PTR [ebp+0x1d]
  41521c:	imul   ebp,DWORD PTR [edi-0x15],0xffffffe6
  415220:	inc    ebx
  415221:	inc    esi
  415222:	das    
  415223:	loope  0x41527a
  415225:	xor    BYTE PTR [eax+ebp*8],ch
  415228:	retf   
  415229:	test   DWORD PTR [ebp+eiz*8+0x7d],ebx
  41522d:	lods   al,BYTE PTR ds:[esi]
  41522e:	inc    edx
  41522f:	test   eax,0x7bbee86b
  415234:	xor    edx,esp
  415236:	sbb    BYTE PTR [eax-0x6f267c1a],0x2e
  41523d:	fld    st(0)
  41523f:	inc    ebp
  415240:	cwde   
  415241:	sub    esi,DWORD PTR [ebx+0x49922dc4]
  415247:	or     al,0xaf
  415249:	pushf  
  41524a:	pushf  
  41524b:	daa    
  41524c:	push   ss
  41524d:	in     al,0x89
  41524f:	pop    ebx
  415250:	jg     0x415224
  415252:	cmp    al,0x7c
  415254:	pop    ecx
  415255:	cwde   
  415256:	jmp    0x41527e
  415258:	sbb    ebp,esi
  41525a:	adc    al,0x39
  41525c:	xor    eax,0xc8703b6e
  415261:	ins    BYTE PTR es:[edi],dx
  415262:	pop    ebx
  415263:	in     eax,dx
  415264:	inc    ebx
  415265:	pop    eax
  415266:	idiv   esp
  415268:	cmp    cl,BYTE PTR [eax+0x2]
  41526b:	sub    DWORD PTR [ebx+0x35019946],esi
  415271:	sbb    DWORD PTR [ecx],edi
  415273:	xlat   BYTE PTR ds:[ebx]
  415274:	and    BYTE PTR [ecx+eiz*4-0x29],al
  415278:	in     al,dx
  415279:	sub    al,0x8f
  41527b:	sar    DWORD PTR [edx-0x71],1
  41527e:	sub    eax,0xcd3d337b
  415283:	adc    DWORD PTR [ebx+eiz*2],0x1a
  415287:	mov    bh,0xc8
  415289:	pushf  
  41528a:	out    0xfa,eax
  41528c:	sbb    eax,0xff5ff621
  415291:	outs   dx,BYTE PTR ds:[esi]
  415292:	cmp    DWORD PTR [eax-0xd163dea],0x7e
  415299:	cld    
  41529a:	int    0xb5
  41529c:	mov    ah,0x3e
  41529e:	xchg   esi,eax
  41529f:	test   al,0x2e
  4152a1:	jnp    0x415240
  4152a3:	cwde   
  4152a4:	shl    DWORD PTR [edi-0x42],cl
  4152a7:	shr    BYTE PTR [esi+0x4d],1
  4152aa:	jmp    0x41530f
  4152ac:	sahf   
  4152ad:	imul   eax,edi,0x3d8f3a47
  4152b3:	push   ebx
  4152b4:	rol    BYTE PTR ss:[ecx+0x5d],1
  4152b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152b9:	push   ecx
  4152ba:	maxps  xmm3,XMMWORD PTR [esi+edx*4+0x42]
  4152bf:	fs into 
  4152c1:	cmp    BYTE PTR [esi],bh
  4152c3:	cmp    ecx,DWORD PTR [edx-0x340f29cc]
  4152c9:	sbb    DWORD PTR [edx-0x5965c80b],ebx
  4152cf:	test   ebx,ebx
  4152d1:	mov    dh,0x19
  4152d3:	fs pushf 
  4152d5:	hlt    
  4152d6:	xchg   ebx,eax
  4152d7:	push   ecx
  4152d8:	or     dl,BYTE PTR [edi-0x20]
  4152db:	lahf   
  4152dc:	aam    0x43
  4152de:	dec    ebx
  4152df:	sahf   
  4152e0:	mov    al,0x42
  4152e2:	sbb    eax,0x751a0533
  4152e7:	mov    cl,0x1c
  4152e9:	sbb    eax,edi
  4152eb:	es cs or al,0xb6
  4152ef:	adc    eax,0x5b99e6a0
  4152f4:	jnp    0x415320
  4152f6:	adc    BYTE PTR [ebp+0x107b1415],ch
  4152fc:	test   BYTE PTR [edx+eiz*4-0x51b618bd],al
  415303:	test   al,0x86
  415305:	clc    
  415306:	fwait
  415307:	cmp    BYTE PTR [ebp+0x5],ah
  41530a:	dec    ebx
  41530b:	xor    al,0x2c
  41530d:	mov    ch,0x33
  41530f:	stos   BYTE PTR es:[edi],al
  415310:	inc    ebp
  415311:	jle    0x4152cd
  415313:	xchg   edi,eax
  415314:	cdq    
  415315:	xchg   edi,eax
  415316:	in     al,dx
  415317:	outs   dx,DWORD PTR ds:[esi]
  415318:	fist   WORD PTR [ebp-0x241fb8b1]
  41531e:	ins    DWORD PTR es:[edi],dx
  41531f:	imul   al
  415321:	push   edx
  415322:	push   edx
  415323:	inc    ebx
  415324:	dec    ebp
  415325:	and    al,0x8f
  415327:	(bad)  
  415329:	les    esi,FWORD PTR [ecx+0x29]
  41532c:	adc    eax,DWORD PTR [eax-0x6f]
  41532f:	push   esi
  415330:	pop    edi
  415331:	popf   
  415332:	mov    bl,0x80
  415334:	enter  0xf52e,0xea
  415338:	pop    esi
  415339:	(bad)  
  41533a:	js     0x415354
  41533c:	sbb    edi,ebp
  41533e:	(bad)  
  41533f:	mov    edi,0x1e31c116
  415344:	mov    ds:0x6e0c26bb,eax
  415349:	fs xchg ebp,eax
  41534b:	dec    edi
  41534c:	repz shr BYTE PTR [ebx+0x24183257],0xde
  415354:	jbe    0x415381
  415356:	ins    BYTE PTR es:[edi],dx
  415357:	popa   
  415358:	mov    eax,ds:0x2fbdac8b
  41535d:	xchg   edi,eax
  41535e:	ins    DWORD PTR es:[edi],dx
  41535f:	push   0x6d
  415361:	aas    
  415362:	jmp    0x400bed76
  415367:	mov    WORD PTR [ecx-0x436d757c],ss
  41536d:	outs   dx,DWORD PTR ds:[esi]
  41536e:	out    dx,eax
  41536f:	xchg   ebx,eax
  415370:	in     eax,dx
  415371:	mov    ds:0xe48a82cf,eax
  415376:	jbe    0x4152fe
  415378:	cmp    edi,0x8b9492d4
  41537e:	(bad)  
  41537f:	stc    
  415380:	cwde   
  415381:	mov    edx,0xaaf99ce9
  415386:	(bad)  
  415387:	retf   0xcb3
  41538a:	inc    esp
  41538b:	jae    0x415320
  41538d:	push   0x5b4e06ec
  415392:	call   0x78c4:0x17a423b9
  415399:	ins    BYTE PTR es:[edi],dx
  41539a:	(bad)  [esi]
  41539c:	push   cs
  41539d:	xchg   edx,eax
  41539e:	sub    bl,BYTE PTR [edi]
  4153a0:	iret   
  4153a1:	cmp    eax,0x4826191f
  4153a6:	(bad)  
  4153a7:	std    
  4153a8:	jg     0x415333
  4153aa:	jmp    0x5a0a:0x6525a516
  4153b1:	or     ebx,DWORD PTR [edx+esi*4-0x77]
  4153b5:	test   DWORD PTR [edi-0x5d],esi
  4153b8:	loop   0x4153e0
  4153ba:	stc    
  4153bb:	dec    eax
  4153bc:	fstp   DWORD PTR [ebx+0x73]
  4153bf:	fs pop esp
  4153c1:	test   BYTE PTR [ebx+edx*1],ah
  4153c4:	dec    ebp
  4153c5:	jp     0x415406
  4153c7:	push   edx
  4153c8:	loopne 0x41543a
  4153ca:	mov    ebx,0x1f61ea27
  4153cf:	fisttp WORD PTR [esi-0x7a]
  4153d2:	in     eax,dx
  4153d3:	out    dx,al
  4153d4:	aaa    
  4153d5:	int3   
  4153d6:	retf   
  4153d7:	daa    
  4153d8:	mov    edi,0xc3feeffe
  4153dd:	mov    esp,0x10880b3
  4153e2:	sbb    BYTE PTR [edi+0x3a],ch
  4153e5:	push   ds
  4153e6:	aam    0xa1
  4153e8:	and    ebp,DWORD PTR [esi-0xcd883f0]
  4153ee:	add    DWORD PTR [edx],esi
  4153f0:	arpl   WORD PTR [esi+0x3379471],sp
  4153f6:	push   0x57012f70
  4153fb:	cli    
  4153fc:	and    BYTE PTR [esi],dl
  4153fe:	inc    di
  415400:	stc    
  415401:	xchg   esp,eax
  415402:	and    BYTE PTR [eax],dl
  415404:	neg    DWORD PTR [edx-0xc]
  415407:	push   edi
  415408:	sub    dl,BYTE PTR [edx-0x1e]
  41540b:	mov    DWORD PTR [edx+0x7c],edx
  41540e:	test   BYTE PTR [eax],ch
  415410:	stos   DWORD PTR es:[edi],eax
  415411:	jmp    FWORD PTR [ebx]
  415413:	cmc    
  415414:	fisttp DWORD PTR [eax]
  415416:	cli    
  415417:	fcom   QWORD PTR fs:[edi-0x2ac967f3]
  41541e:	adc    esp,ebp
  415420:	loope  0x4153d3
  415422:	adc    eax,0x831ff564
  415427:	push   ecx
  415428:	(bad)  
  415429:	pop    edx
  41542a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41542b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41542d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41542e:	jmp    0xdf:0xbbf40e89
  415435:	push   esi
  415436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415437:	xor    BYTE PTR [edi+ebp*8+0x657de92d],bl
  41543e:	mov    ebp,0x936685ae
  415443:	inc    ecx
  415444:	cld    
  415445:	cmp    bl,BYTE PTR [ebx-0x1c3e23d9]
  41544b:	mov    al,0x87
  41544d:	and    DWORD PTR [ecx+0x51],0x1e9b216c
  415454:	jae    0x41549a
  415456:	add    BYTE PTR [edx+0x4c15ae84],bh
  41545c:	dec    esi
  41545d:	daa    
  41545e:	inc    ebp
  41545f:	pop    ss
  415460:	mov    dl,0x88
  415462:	aaa    
  415463:	js     0x4153fe
  415465:	lods   al,BYTE PTR ds:[esi]
  415466:	mov    eax,0x834ee7db
  41546b:	jmp    0x5c53e20a
  415470:	mov    WORD PTR [ebx+0x6114ee0a],fs
  415476:	adc    al,0x4
  415478:	add    ecx,ecx
  41547a:	or     eax,DWORD PTR [esi]
  41547c:	xchg   ebp,eax
  41547d:	mov    dl,0x98
  41547f:	rol    BYTE PTR [ebp-0x22],0x62
  415483:	lods   eax,DWORD PTR ds:[esi]
  415484:	mov    ebx,0x43b67a05
  415489:	aad    0x8d
  41548b:	or     eax,0x446c0008
  415490:	iret   
  415491:	retf   0x97af
  415494:	dec    edx
  415495:	(bad)  
  415496:	sub    eax,0x57b5841
  41549b:	stos   BYTE PTR es:[edi],al
  41549c:	ret    0xd920
  41549f:	(bad)  [edx]
  4154a1:	dec    edx
  4154a2:	jbe    0x41548f
  4154a4:	aad    0x91
  4154a6:	cmp    esi,DWORD PTR [esi]
  4154a8:	cmp    dl,cl
  4154aa:	push   0xffffff8f
  4154ac:	xchg   DWORD PTR ds:0x86f3e54f,eax
  4154b2:	mov    ch,0x9a
  4154b4:	sbb    eax,0x8abc083a
  4154b9:	les    eax,FWORD PTR [esi]
  4154bb:	sub    eax,edi
  4154bd:	ret    0xc4cc
  4154c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154c1:	fcom   DWORD PTR [eax-0x39]
  4154c4:	stos   DWORD PTR es:[edi],eax
  4154c5:	sub    eax,0x457d2cd9
  4154ca:	popa   
  4154cb:	inc    esp
  4154cc:	pop    ebx
  4154cd:	pop    eax
  4154ce:	add    al,0x62
  4154d0:	adc    eax,0xa0c0608c
  4154d5:	jmp    0x4154ef
  4154d7:	enter  0x9e34,0x58
  4154db:	idiv   DWORD PTR [edx-0x11a7c54a]
  4154e1:	ss or  ah,bh
  4154e4:	bound  ebp,QWORD PTR [ecx+0x3422d618]
  4154ea:	adc    bh,BYTE PTR [ebx]
  4154ec:	leave  
  4154ed:	xchg   esp,eax
  4154ee:	(bad)  
  4154f0:	repnz dec esp
  4154f2:	out    dx,al
  4154f3:	call   0x3e22:0x518246d4
  4154fa:	scas   al,BYTE PTR es:[edi]
  4154fb:	ror    ch,0xa2
  4154fe:	fs clc 
  415500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415501:	mov    edi,0xfa9d013f
  415506:	sti    
  415507:	pop    ss
  415508:	pop    esp
  415509:	out    dx,eax
  41550a:	jnp    0x4154c1
  41550c:	mov    ds:0x7072ca96,eax
  415511:	add    edi,ecx
  415513:	pop    ebp
  415514:	scas   al,BYTE PTR es:[edi]
  415515:	rol    DWORD PTR [esi-0x6c704f7],0xd5
  41551c:	sbb    al,0x34
  41551e:	xchg   edi,eax
  41551f:	dec    eax
  415520:	js     0x41557e
  415522:	xlat   BYTE PTR ds:[ebx]
  415523:	mov    al,BYTE PTR [ebx]
  415525:	mov    ds:0xb9bd4f7f,al
  41552a:	fsubr  QWORD PTR [esi-0x5f]
  41552d:	add    eax,0x691c9685
  415532:	je     0x415570
  415534:	jmp    0x167861cc
  415539:	in     eax,0x64
  41553b:	out    dx,al
  41553c:	lds    edi,FWORD PTR [edi+0x8911fd5]
  415542:	adc    BYTE PTR [edi+0x37],0xa4
  415546:	sar    bl,1
  415548:	stc    
  415549:	adc    eax,0xd5197cee
  41554e:	jno    0x4154ee
  415550:	loopne 0x4154df
  415552:	xchg   ebx,eax
  415553:	push   esp
  415554:	and    BYTE PTR [eax+0x20d807fb],bh
  41555a:	cmc    
  41555b:	mov    al,ds:0x762cb490
  415560:	out    0x20,al
  415562:	fisttp WORD PTR [esi]
  415564:	fsub   DWORD PTR [eax]
  415566:	pusha  
  415567:	jno    0x4155ac
  415569:	icebp  
  41556a:	in     al,0x4d
  41556c:	inc    eax
  41556d:	and    BYTE PTR [ecx+0x6bceb442],bh
  415573:	mov    ah,bl
  415575:	lods   al,BYTE PTR ds:[esi]
  415576:	sub    DWORD PTR [ebp-0x2a],ecx
  415579:	pop    ebx
  41557a:	inc    ebx
  41557b:	out    0x1d,eax
  41557d:	pop    edi
  41557e:	inc    ecx
  41557f:	jle    0x415534
  415581:	stos   BYTE PTR es:[edi],al
  415582:	ret    
  415583:	and    al,0x2a
  415585:	sbb    dh,bl
  415587:	ja     0x4155f8
  415589:	mov    ebx,0x95453ee1
  41558e:	mov    esp,0xd4cedd9d
  415593:	(bad)  
  415594:	mov    ebp,0x63888d0d
  415599:	mov    eax,ds:0x85991d65
  41559e:	mov    ebx,0xb7bfbf03
  4155a3:	add    dh,bh
  4155a5:	sub    ah,BYTE PTR [eax+eiz*8+0x1f3c0d5f]
  4155ac:	jb     0x4155d5
  4155ae:	adc    BYTE PTR [ebx],ah
  4155b0:	mov    ecx,0x3231899e
  4155b5:	sbb    bh,ah
  4155b7:	rcr    BYTE PTR ds:0xd4e789da,1
  4155bd:	mov    ds:0xe78a5524,eax
  4155c2:	pop    esp
  4155c3:	jmp    0xc629:0x494d6760
  4155ca:	cwde   
  4155cb:	xor    al,0x91
  4155cd:	fdivr  st,st(4)
  4155cf:	pop    ecx
  4155d0:	pop    eax
  4155d1:	dec    ebx
  4155d2:	js     0x4155fd
  4155d4:	std    
  4155d5:	inc    edi
  4155d6:	push   edi
  4155d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155d8:	inc    esi
  4155d9:	jns    0x4155e4
  4155db:	push   cs
  4155dc:	xchg   edx,eax
  4155dd:	dec    ebx
  4155df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155e0:	sub    esi,esp
  4155e2:	inc    ebp
  4155e3:	test   eax,0x66666502
  4155e8:	xchg   ebp,eax
  4155e9:	mov    al,0x0
  4155eb:	sbb    DWORD PTR [edi],edx
  4155ed:	aam    0x78
  4155ef:	mov    BYTE PTR [esi-0x36],ah
  4155f2:	or     BYTE PTR [ebx+0x410f55b1],al
  4155f8:	adc    dh,BYTE PTR ds:0xf8ebfccd
  4155fe:	xor    al,0xf4
  415600:	cmp    dl,dh
  415602:	jecxz  0x4155fa
  415604:	sbb    al,0x5e
  415606:	add    bh,BYTE PTR [edx+0x7]
  415609:	nop
  41560a:	clc    
  41560b:	push   ss
  41560c:	inc    esp
  41560d:	mov    dl,0x41
  41560f:	sahf   
  415610:	xchg   ebx,eax
  415611:	push   ss
  415612:	push   0xa696dea0
  415617:	in     eax,0x4d
  415619:	mov    DWORD PTR [eax+esi*2-0x79],ecx
  41561d:	aam    0xec
  41561f:	bound  ecx,QWORD PTR [ecx]
  415621:	inc    eax
  415622:	add    eax,0xc70e8ec
  415627:	mov    edx,0xf5a6b817
  41562c:	das    
  41562d:	sbb    eax,0x4e550c7d
  415632:	mov    BYTE PTR [esi+0x3eea71a1],cl
  415638:	dec    ebp
  415639:	adc    edi,DWORD PTR [edi]
  41563b:	mov    al,ds:0xc0adb279
  415640:	cmp    BYTE PTR [esi+0x55b68e70],bh
  415646:	inc    ebx
  415647:	inc    ebx
  415648:	pop    esi
  415649:	les    ebp,FWORD PTR [eax+eax*4-0x7d]
  41564d:	into   
  41564e:	scas   al,BYTE PTR es:[edi]
  41564f:	adc    ch,ah
  415651:	xchg   BYTE PTR [ebp+0x5a],dl
  415654:	mov    eax,cs
  415656:	loop   0x4156be
  415658:	jmp    0x41562b
  41565a:	inc    edi
  41565b:	arpl   WORD PTR [edx-0x11b34f86],ax
  415661:	iret   
  415662:	es aas 
  415664:	adc    al,0x72
  415666:	ret    
  415667:	jecxz  0x4155ea
  415669:	or     DWORD PTR [ebx],0xa7a2838
  41566f:	pop    ecx
  415670:	adc    ebp,DWORD PTR ds:0x78dd5f9f
  415676:	popa   
  415677:	xchg   edx,eax
  415678:	cwde   
  415679:	cwde   
  41567a:	dec    ecx
  41567b:	daa    
  41567c:	je     0x41561d
  41567e:	int3   
  41567f:	mov    ebx,0xf738c5aa
  415684:	adc    al,0xbd
  415686:	out    0x9e,al
  415688:	lds    esp,FWORD PTR ds:0x3f47b270
  41568e:	jae    0x415672
  415690:	call   0xa8c:0xf662c8c7
  415697:	and    DWORD PTR [ebp-0x69a78b89],edi
  41569d:	pusha  
  41569e:	mov    bl,0xf5
  4156a0:	xor    ecx,esi
  4156a2:	or     bl,BYTE PTR [eax]
  4156a4:	scas   eax,DWORD PTR es:[edi]
  4156a5:	add    edx,esi
  4156a7:	jb     0x415649
  4156a9:	or     DWORD PTR [edi+eax*2],edx
  4156ac:	pop    es
  4156ad:	fcomp  QWORD PTR [ebp+0x7a]
  4156b0:	xor    DWORD PTR ds:0xff704a7e,edi
  4156b6:	dec    ecx
  4156b7:	call   0xae2c6827
  4156bc:	adc    ebp,eax
  4156be:	jmp    0x4156de
  4156c0:	jo     0x41573a
  4156c2:	inc    ebp
  4156c3:	xor    bh,BYTE PTR [eax-0x40]
  4156c6:	cwde   
  4156c7:	hlt    
  4156c8:	or     al,0xd3
  4156ca:	es push cs
  4156cc:	push   esp
  4156cd:	mov    ebp,0x9a162de9
  4156d2:	jbe    0x41571c
  4156d4:	out    0x98,eax
  4156d6:	pushf  
  4156d7:	push   edx
  4156d8:	aaa    
  4156d9:	dec    eax
  4156da:	sub    cl,BYTE PTR [edx-0x1e]
  4156dd:	jg     0x415722
  4156df:	rcl    BYTE PTR [edx-0x2bc514c9],cl
  4156e5:	cmp    al,0xed
  4156e7:	or     eax,0x96590d7c
  4156ec:	ins    DWORD PTR es:[edi],dx
  4156ed:	std    
  4156ee:	in     al,0xbc
  4156f0:	and    al,0x9a
  4156f2:	enter  0x75f1,0x6
  4156f6:	jns    0x4156e4
  4156f8:	cli    
  4156f9:	jae    0x41573d
  4156fb:	xlat   BYTE PTR ds:[ebx]
  4156fc:	das    
  4156fd:	imul   edi,DWORD PTR [esi+0x2de26f29],0xffffffeb
  415704:	sub    al,0x36
  415706:	hlt    
  415707:	jecxz  0x415691
  415709:	imul   edx,edx,0xf69f8388
  41570f:	out    dx,al
  415710:	push   edx
  415711:	cmp    ch,BYTE PTR [esi+0x72d7f318]
  415717:	leave  
  415718:	and    al,0xff
  41571a:	cwde   
  41571b:	ror    BYTE PTR [ecx-0x58],cl
  41571e:	mov    edi,0xf69fef02
  415723:	inc    edi
  415724:	jmp    0x8e0ab8c9
  415729:	inc    edx
  41572a:	mov    eax,ds:0xeaf24b02
  41572f:	jae    0x415783
  415731:	(bad)  
  415733:	inc    esp
  415734:	inc    ebp
  415735:	push   es
  415736:	inc    edi
  415737:	fwait
  415738:	test   BYTE PTR [ebx-0x37],dh
  41573b:	mov    ch,0x82
  41573d:	jnp    0x4156e0
  41573f:	jb     0x415772
  415741:	loop   0x4156ec
  415743:	push   ds
  415744:	xchg   ah,ah
  415746:	int    0x4a
  415748:	les    eax,FWORD PTR [edi-0x28]
  41574b:	inc    edi
  41574c:	xor    BYTE PTR [ebx-0x1bf4013],ch
  415752:	outs   dx,BYTE PTR ds:[esi]
  415753:	daa    
  415754:	fsin   
  415756:	sti    
  415757:	fisttp QWORD PTR [edi]
  415759:	bound  edi,QWORD PTR [eax]
  41575b:	out    0xf0,al
  41575d:	xor    al,ch
  41575f:	dec    ebx
  415760:	dec    edx
  415761:	stc    
  415762:	pop    esp
  415763:	je     0x4157e3
  415765:	inc    esp
  415766:	jo     0x41577e
  415768:	ja     0x41577f
  41576a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41576b:	dec    ebx
  41576c:	pop    ebx
  41576d:	push   0x1e6e2412
  415772:	adc    dl,bh
  415774:	and    ebx,DWORD PTR [edx+edx*8-0x3d]
  415778:	and    al,0x3c
  41577a:	(bad)  
  41577c:	add    ebx,DWORD PTR [edi+0x19]
  41577f:	ds adc al,cl
  415782:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415783:	push   eax
  415784:	inc    ebx
  415785:	pop    ecx
  415786:	jnp    0x415780
  415788:	arpl   sp,si
  41578a:	xchg   ebx,eax
  41578b:	sbb    ecx,edi
  41578d:	or     eax,0xfc538b36
  415792:	xor    eax,0x872e94cc
  415797:	in     al,dx
  415798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415799:	les    ecx,FWORD PTR [esi-0x35]
  41579c:	inc    ecx
  41579d:	add    BYTE PTR [ebx],ah
  41579f:	xchg   BYTE PTR [ebp-0x779c0436],bh
  4157a5:	cld    
  4157a6:	jno    0x415816
  4157a8:	add    BYTE PTR cs:[ebx],al
  4157ab:	fsub   QWORD PTR [ecx-0x14]
  4157ae:	mov    ds:0x9523eb8a,al
  4157b3:	or     al,0xba
  4157b5:	in     al,0xc1
  4157b7:	xor    eax,0x6cf7d8b8
  4157bc:	inc    edi
  4157bd:	nop
  4157be:	push   ecx
  4157bf:	mov    edi,0xb0420a1e
  4157c4:	jne    0x41577a
  4157c6:	xchg   esp,eax
  4157c7:	mov    esi,0x4ddf639a
  4157cc:	icebp  
  4157cd:	push   esp
  4157ce:	in     al,0x31
  4157d0:	mov    WORD PTR [edx],es
  4157d2:	ja     0x415784
  4157d4:	out    dx,eax
  4157d5:	cmp    al,BYTE PTR [eax+0x4d]
  4157d8:	gs pop es
  4157da:	pusha  
  4157db:	fnstsw WORD PTR [ebx-0xf561021]
  4157e1:	mov    ebp,0xc101cf35
  4157e6:	mov    ds:0x39ee783a,eax
  4157eb:	loop   0x41579a
  4157ed:	dec    edi
  4157ee:	push   ebx
  4157ef:	push   esp
  4157f0:	addr16 and al,0xd7
  4157f3:	and    DWORD PTR [edx-0x60d123fa],eax
  4157f9:	sbb    BYTE PTR [edx+0x76cd63e3],ch
  4157ff:	xchg   ebp,eax
  415800:	dec    BYTE PTR [ebp+0x6f57e985]
  415806:	sub    al,0x6d
  415808:	jae    0x415830
  41580a:	fcmovbe st,st(2)
  41580c:	push   0xfffffffb
  41580e:	int    0x2b
  415810:	pop    edx
  415811:	inc    esi
  415812:	out    0x6a,eax
  415814:	jmp    0x48e23788
  415819:	(bad)  
  41581a:	sub    edx,DWORD PTR [ebx+0x29]
  41581d:	stc    
  41581e:	es cmp ah,ch
  415821:	add    edi,DWORD PTR ds:0x517df214
  415827:	icebp  
  415828:	adc    BYTE PTR [esi],cl
  41582a:	mov    esi,0xf3d8b74b
  41582f:	fcomp  DWORD PTR [ecx+0x7b584acc]
  415835:	into   
  415836:	mov    edi,DWORD PTR [esi+ebx*4+0x5d86cd12]
  41583d:	sbb    eax,0x43a76f9b
  415842:	cli    
  415843:	lds    edi,FWORD PTR [ebp+0x2e]
  415846:	(bad)  [edi+0x7be6efe0]
  41584c:	clc    
  41584d:	push   edx
  41584e:	(bad)  
  41584f:	xor    al,0x65
  415851:	mov    ah,0x9c
  415853:	adc    eax,0x124e6ab2
  415858:	cdq    
  415859:	inc    ecx
  41585a:	mov    ch,0xea
  41585c:	adc    al,bh
  41585e:	icebp  
  41585f:	xor    ecx,DWORD PTR [edi-0x1cdbfa12]
  415865:	loope  0x4158c1
  415867:	sbb    BYTE PTR [edx+0x40],ah
  41586a:	jmp    FWORD PTR [esi]
  41586c:	cmp    ecx,DWORD PTR [edx-0x8]
  41586f:	mov    ebp,0x60be7c60
  415874:	xor    al,0x2
  415876:	sub    ebx,edi
  415878:	push   esp
  415879:	xor    eax,0xa186ae70
  41587e:	and    DWORD PTR [eax+0x2],0xa77dc06
  415885:	ins    BYTE PTR es:[edi],dx
  415886:	sbb    al,BYTE PTR [ebx-0x708620]
  41588c:	inc    ebx
  41588d:	adc    BYTE PTR [ebx],bh
  41588f:	inc    edi
  415890:	scas   eax,DWORD PTR es:[edi]
  415891:	lea    esp,[edi+0x9]
  415894:	cmp    DWORD PTR [edx],0xbb68ae71
  41589a:	and    eax,0x81b03997
  41589f:	inc    edx
  4158a0:	xor    ch,BYTE PTR [edi+ebp*8]
  4158a3:	stos   DWORD PTR es:[edi],eax
  4158a4:	fst    QWORD PTR [esi*4-0x63518adb]
  4158ab:	sbb    al,0xa8
  4158ad:	and    ebx,eax
  4158af:	jmp    0x2a63261e
  4158b4:	dec    ebx
  4158b5:	xlat   BYTE PTR ds:[ebx]
  4158b6:	fsub   QWORD PTR [edi-0x97abbc2]
  4158bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158bd:	cwde   
  4158be:	sti    
  4158bf:	pushf  
  4158c0:	stos   BYTE PTR es:[edi],al
  4158c1:	mov    ecx,DWORD PTR ds:0x966ee2b2
  4158c7:	and    eax,0xa1e92a70
  4158cc:	sahf   
  4158cd:	jnp    0x4158cf
  4158cf:	jp     0x4158c2
  4158d1:	mov    edx,?
  4158d3:	add    DWORD PTR ds:0x551e13c2,esp
  4158d9:	bound  edi,QWORD PTR [edi-0x34fe0520]
  4158df:	xchg   ecx,eax
  4158e0:	repz dec ebp
  4158e2:	outs   dx,DWORD PTR ds:[esi]
  4158e3:	call   0x16060f72
  4158e8:	mov    ebx,0x85642073
  4158ed:	cli    
  4158ee:	(bad)  [ecx+eiz*8-0x722a2040]
  4158f5:	sub    BYTE PTR [ebx],dl
  4158f7:	mov    ah,0x6b
  4158f9:	mov    DWORD PTR [esp+edi*8+0x58a00509],esi
  415900:	cld    
  415901:	pop    ecx
  415902:	not    DWORD PTR [esi+0x55699094]
  415908:	gs sti 
  41590a:	std    
  41590b:	push   ebx
  41590c:	sbb    al,0x6f
  41590e:	daa    
  41590f:	and    ebp,DWORD PTR ds:0x2698d083
  415915:	pop    esi
  415916:	jmp    0x4158c8
  415918:	mov    ch,0xac
  41591a:	jbe    0x4158ee
  41591c:	sub    eax,0x2c473124
  415921:	mov    WORD PTR [eax],?
  415923:	xchg   BYTE PTR [eax-0x651b3289],ch
  415929:	dec    edi
  41592a:	jmp    0x973cc7ed
  41592f:	mov    DWORD PTR [ecx],esi
  415931:	sar    BYTE PTR [ebp+0x3c],0xa0
  415935:	pop    ebp
  415936:	lods   al,BYTE PTR ds:[esi]
  415937:	push   ebp
  415938:	cmp    al,0x7
  41593a:	push   0xef889f60
  41593f:	jmp    0xac08aa15
  415944:	pop    ds
  415945:	jnp    0x4159b3
  415947:	scas   eax,DWORD PTR es:[edi]
  415948:	iret   
  415949:	ror    ah,1
  41594b:	mov    ecx,0xab204dd5
  415950:	mov    dl,0x1c
  415952:	in     eax,dx
  415953:	dec    edx
  415954:	sahf   
  415955:	outs   dx,DWORD PTR ds:[esi]
  415956:	(bad)  
  415957:	gs das 
  415959:	fbstp  TBYTE PTR [esi-0x5898282b]
  41595f:	pop    esp
  415960:	sub    esi,DWORD PTR [ecx-0x5d]
  415963:	hlt    
  415964:	(bad)  
  415965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415966:	mov    edi,0x38a862b6
  41596b:	or     eax,0x739304ac
  415970:	and    ecx,DWORD PTR [esi]
  415972:	xor    ah,BYTE PTR [esp+ebp*8-0x2dcecdf]
  415979:	and    dl,BYTE PTR [eax]
  41597b:	rcl    dl,cl
  41597d:	in     eax,dx
  41597e:	int3   
  41597f:	dec    ecx
  415980:	dec    esi
  415981:	lods   eax,DWORD PTR ds:[esi]
  415982:	xchg   ebx,eax
  415983:	mov    edx,ebp
  415985:	fisttp WORD PTR ds:[eax-0x5be3ea5]
  41598c:	test   eax,0x2991e558
  415991:	dec    ecx
  415992:	retf   
  415993:	ficom  WORD PTR [edi]
  415995:	test   eax,0xe1a5c463
  41599a:	je     0x415975
  41599c:	mov    ebx,0x6f9bf9cd
  4159a1:	fild   QWORD PTR [edx]
  4159a3:	lock cmc 
  4159a5:	xor    eax,0x14d10b22
  4159aa:	xchg   edi,eax
  4159ab:	daa    
  4159ac:	leave  
  4159ad:	retf   
  4159ae:	rol    ebp,cl
  4159b0:	and    al,0x11
  4159b2:	sbb    DWORD PTR [ecx],0x51a95f2f
  4159b8:	nop
  4159b9:	jne    0x4159e7
  4159bb:	iret   
  4159bc:	call   0x397c85af
  4159c1:	jmp    0x7903:0x7cfb0b14
  4159c8:	vrsqrtss xmm3,xmm2,DWORD PTR [edx+0x4c]
  4159cd:	shr    DWORD PTR [ebx],cl
  4159cf:	pushf  
  4159d0:	pop    esp
  4159d1:	(bad)  
  4159d2:	dec    ebx
  4159d3:	leave  
  4159d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159d5:	js     0x415a43
  4159d7:	out    dx,eax
  4159d8:	xor    DWORD PTR [ebp+0x6f37e311],ebp
  4159de:	sahf   
  4159df:	vcmppd ymm6,ymm3,YMMWORD PTR [esi],0xa3
  4159e4:	mov    ch,BYTE PTR [ebx+0x22]
  4159e7:	sub    ecx,DWORD PTR [edx+0x6327a96]
  4159ed:	fisttp QWORD PTR [ebx+eiz*4+0x6a8b193a]
  4159f4:	xchg   edx,eax
  4159f5:	sar    DWORD PTR [eax-0x7b9857ad],0xfc
  4159fc:	ret    0xdda7
  4159ff:	mov    dh,0x2
  415a01:	aaa    
  415a02:	mov    ds:0x9e69e720,eax
  415a07:	jns    0x415a39
  415a09:	pop    edx
  415a0a:	xor    ebp,DWORD PTR [ebx+0x1fd2c63f]
  415a10:	retf   
  415a11:	add    ebp,ebx
  415a13:	pop    ecx
  415a14:	sar    DWORD PTR [edx-0x2f],0x93
  415a18:	mov    ds:0x99368b83,al
  415a1d:	data16 jno 0x415a57
  415a20:	hlt    
  415a21:	jge    0x415a82
  415a23:	fsubr  st(1),st
  415a25:	out    0xde,al
  415a27:	addr16 pop esi
  415a29:	add    bl,BYTE PTR [esi+0x1e]
  415a2c:	pop    ds
  415a2d:	or     eax,0xba34fd79
  415a32:	add    esi,ecx
  415a34:	sar    dh,cl
  415a36:	bound  esp,QWORD PTR [esp+eiz*8]
  415a39:	add    eax,0xf586aea8
  415a3e:	mov    edx,0xf0a25ec4
  415a43:	pop    edx
  415a44:	push   edx
  415a45:	outs   dx,DWORD PTR ds:[esi]
  415a46:	or     BYTE PTR [ecx+0x7c4dc420],dl
  415a4c:	pop    ebp
  415a4d:	es dec edi
  415a4f:	xchg   esp,eax
  415a50:	adc    ecx,DWORD PTR [edx+0x5095c790]
  415a56:	pop    esi
  415a57:	push   edx
  415a58:	pop    eax
  415a59:	shr    DWORD PTR ds:0xce41b7a7,cl
  415a5f:	sahf   
  415a60:	push   0x7f6b450a
  415a65:	xchg   ecx,eax
  415a66:	and    ebx,DWORD PTR [ebx-0x733250ae]
  415a6c:	xchg   BYTE PTR [edx],dh
  415a6e:	push   cs
  415a6f:	fwait
  415a70:	call   0x36b4:0x4a2a9e8b
  415a77:	push   ecx
  415a78:	mov    al,ds:0x4cbb4f1
  415a7d:	jno    0x415ab1
  415a7f:	adc    BYTE PTR [edx],ch
  415a81:	mov    eax,0x2067b20f
  415a86:	xchg   edi,eax
  415a87:	sbb    al,0xd0
  415a89:	pop    ds
  415a8a:	ins    BYTE PTR es:[edi],dx
  415a8b:	and    edx,DWORD PTR [eax-0x42]
  415a8e:	cmp    eax,0x9f16beb5
  415a93:	hlt    
  415a94:	jecxz  0x415b07
  415a96:	cli    
  415a97:	mov    ah,0xa
  415a99:	mov    al,BYTE PTR [ebx+0x61]
  415a9c:	popf   
  415a9d:	push   eax
  415a9e:	push   ebx
  415a9f:	rol    ah,cl
  415aa1:	adc    al,BYTE PTR [edx-0x49]
  415aa4:	test   ah,ch
  415aa6:	(bad)  
  415aa8:	mov    eax,ds:0x69fc3eb1
  415aad:	jae    0x415a55
  415aaf:	fcmovu st,st(0)
  415ab1:	in     eax,dx
  415ab2:	pop    ecx
  415ab3:	dec    ebx
  415ab4:	xor    edi,ecx
  415ab6:	pop    ss
  415ab7:	jmp    0x7401:0x5d9eb132
  415abe:	int3   
  415abf:	jp     0x415b35
  415ac1:	popf   
  415ac2:	mov    ah,0x34
  415ac4:	(bad)  [esi]
  415ac6:	pop    ss
  415ac7:	retf   
  415ac8:	jmp    0xa5db:0x5d6be6bd
  415acf:	push   esi
  415ad0:	inc    esi
  415ad1:	sti    
  415ad2:	fisubr WORD PTR [ebp-0x2d]
  415ad5:	push   edi
  415ad6:	jnp    0x415b54
  415ad8:	add    dh,al
  415ada:	push   edx
  415adb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415adc:	and    al,0x5d
  415ade:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415adf:	pop    ss
  415ae0:	add    esi,DWORD PTR [ebx+0x7ae0dbd4]
  415ae6:	js     0x415b61
  415ae8:	push   cs
  415ae9:	dec    eax
  415aea:	add    al,0xd4
  415aec:	mov    DWORD PTR ds:0x60e9a49e,eax
  415af2:	retf   0xd76c
  415af5:	adc    ecx,edi
  415af7:	inc    ecx
  415af8:	ror    DWORD PTR [ebp+0x90f9053],1
  415afe:	scas   al,BYTE PTR es:[edi]
  415aff:	sub    ecx,ebx
  415b01:	push   eax
  415b02:	in     eax,0xb5
  415b04:	sub    DWORD PTR [esi],ebp
  415b06:	jno    0x415b1a
  415b08:	pop    ss
  415b09:	jno    0x415b80
  415b0b:	pop    edi
  415b0c:	sub    eax,DWORD PTR [esi]
  415b0e:	push   eax
  415b0f:	jmp    0x50aba99a
  415b14:	adc    eax,0x4ee0820c
  415b19:	sbb    eax,DWORD PTR [esi]
  415b1b:	mov    edx,ebp
  415b1d:	mov    ecx,DWORD PTR [esi-0x11]
  415b20:	pop    es
  415b21:	repnz dec esi
  415b23:	outs   dx,BYTE PTR ds:[esi]
  415b24:	cmp    eax,0xff4cd483
  415b29:	sar    DWORD PTR [edx+0x22],1
  415b2c:	jecxz  0x415b4d
  415b2e:	(bad)  
  415b2f:	mov    dl,0x16
  415b31:	or     BYTE PTR [ebp+0x6d],dl
  415b34:	(bad)  
  415b35:	sub    DWORD PTR [eax+0x78],esi
  415b38:	ret    0x2404
  415b3b:	and    DWORD PTR [edx],eax
  415b3d:	dec    ebx
  415b3e:	push   ebx
  415b3f:	fwait
  415b40:	mov    bh,0xb1
  415b42:	sbb    BYTE PTR [ebp+0x43cca750],0xc1
  415b49:	dec    edx
  415b4a:	mov    eax,0x579f720d
  415b4f:	(bad)  [eax+0x225ff4b8]
  415b55:	stos   BYTE PTR es:[edi],al
  415b56:	mov    DWORD PTR [ebp-0x791a1370],esi
  415b5c:	pop    edi
  415b5d:	jp     0x415b7b
  415b5f:	sub    esp,DWORD PTR [ecx]
  415b61:	sbb    cl,BYTE PTR [edx]
  415b63:	test   eax,edx
  415b65:	jmp    0x415b88
  415b67:	repz push ebx
  415b69:	pop    DWORD PTR [ecx+edi*8-0x3d29c4bc]
  415b70:	sbb    DWORD PTR [edi+0x6f],0x4560c7c0
  415b77:	int    0x12
  415b79:	inc    ecx
  415b7a:	xor    DWORD PTR [edi-0x11],0x1f6520d6
  415b81:	js     0x415be6
  415b83:	or     esi,0x36d552bf
  415b89:	add    eax,0x78e39cd
  415b8e:	lea    ebx,[edx+0x73]
  415b91:	out    0x9b,eax
  415b93:	push   esp
  415b94:	sbb    al,0x73
  415b96:	push   ebx
  415b97:	jb     0x415b50
  415b99:	daa    
  415b9a:	div    esp
  415b9c:	adc    DWORD PTR [eax+0x321e3477],edi
  415ba2:	es xchg esp,eax
  415ba4:	add    eax,0xdaf86fac
  415ba9:	add    dl,BYTE PTR [ebx+0x54a9d185]
  415baf:	loope  0x415bb3
  415bb1:	lahf   
  415bb2:	rcr    DWORD PTR [edi+0x40],1
  415bb5:	rcl    BYTE PTR [esi-0x7],1
  415bb8:	cli    
  415bb9:	sbb    ebp,DWORD PTR [ebx-0x4e0150b0]
  415bbf:	cmp    eax,0xeaeaf7e7
  415bc4:	(bad)  
  415bc5:	add    DWORD PTR [esi-0x44b7e821],ecx
  415bcb:	add    BYTE PTR [eax],0xec
  415bce:	sub    eax,0x11e9f028
  415bd3:	sar    ecx,0xc
  415bd6:	mov    dh,0x9f
  415bd8:	mov    esp,0x1d8b3eb0
  415bdd:	sbb    al,0x7e
  415bdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415be0:	push   ebp
  415be1:	test   esp,edx
  415be3:	cmc    
  415be4:	fmul   QWORD PTR [eax+0x75]
  415be7:	stos   DWORD PTR es:[edi],eax
  415be8:	xchg   esi,eax
  415be9:	jae    0x415c5b
  415beb:	xchg   esp,eax
  415bec:	mov    dl,0x53
  415bee:	and    esi,DWORD PTR [ebp+ecx*8+0x33]
  415bf2:	pop    ss
  415bf3:	mov    al,cs:0xf9a1f5e6
  415bf9:	jp     0x415bfa
  415bfb:	(bad)  
  415bfc:	repz cmp esp,eax
  415bff:	je     0x415b93
  415c01:	cli    
  415c02:	(bad)  
  415c03:	cmp    al,BYTE PTR [ecx-0x67]
  415c06:	das    
  415c07:	mov    edi,0x828d38
  415c0c:	mov    dl,BYTE PTR [ecx+0x2a]
  415c0f:	or     DWORD PTR [eax],esp
  415c11:	loopne 0x415c1d
  415c13:	imul   edi,DWORD PTR [edi+ebp*8+0x51f5cec6],0xd330b4a8
  415c1e:	stos   BYTE PTR es:[edi],al
  415c1f:	je     0x415bea
  415c21:	mov    BYTE PTR [ebx],bl
  415c23:	add    bl,BYTE PTR ds:0x76007128
  415c29:	mov    ch,0x99
  415c2b:	loopne 0x415ca6
  415c2d:	pop    ecx
  415c2e:	jnp    0x415c73
  415c30:	and    bh,BYTE PTR [ecx]
  415c32:	or     DWORD PTR [ecx],0x7770d260
  415c38:	cs pop eax
  415c3a:	ret    0x7f6e
  415c3d:	(bad)  
  415c3e:	addr16 pop ecx
  415c40:	adc    BYTE PTR [ebx-0x76],ah
  415c43:	pop    ecx
  415c44:	fimul  WORD PTR [edx-0x2551a472]
  415c4a:	loope  0x415bd2
  415c4c:	sub    DWORD PTR [edx+edi*4],0x34
  415c50:	xrelease mov DWORD PTR [esi],eax
  415c53:	cmp    eax,DWORD PTR fs:[eax+0x4a5017f]
  415c5a:	xchg   ebx,eax
  415c5b:	jle    0x415cd9
  415c5d:	push   eax
  415c5e:	outs   dx,BYTE PTR ds:[esi]
  415c5f:	inc    ebx
  415c60:	and    bh,cl
  415c62:	aas    
  415c63:	rcr    DWORD PTR [ecx-0x636bbb3f],cl
  415c69:	and    al,0x25
  415c6b:	jmp    0xed5fa01
  415c70:	mov    esi,0x33318d81
  415c75:	dec    esp
  415c76:	pop    edi
  415c77:	inc    ebp
  415c78:	or     al,0xbe
  415c7b:	lock pop ebp
  415c7d:	popa   
  415c7e:	xor    BYTE PTR [edi-0x8],bl
  415c81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c82:	cmp    edi,DWORD PTR [edi]
  415c84:	sub    esp,DWORD PTR [edx]
  415c86:	jle    0x2f26f123
  415c8c:	ret    0x4b59
  415c8f:	jg     0x415c27
  415c91:	les    eax,FWORD PTR [eax+0x1fba4ce5]
  415c97:	adc    DWORD PTR [ebp+0x13],0x713818b3
  415c9e:	adc    BYTE PTR [edi],cl
  415ca0:	sub    BYTE PTR [esi],bl
  415ca2:	mov    ah,0xff
  415ca4:	sub    BYTE PTR [esi],bh
  415ca6:	inc    edx
  415ca7:	pop    eax
  415ca8:	jecxz  0x415d28
  415caa:	jns    0x415cf6
  415cac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cad:	or     al,0x63
  415caf:	test   DWORD PTR [eax-0x123be878],edx
  415cb5:	bnd jmp 0xdc116efa
  415cbb:	test   dh,dh
  415cbd:	mov    edi,0x795b4193
  415cc2:	adc    eax,0x7af93a67
  415cc7:	daa    
  415cc8:	cs or  al,0x64
  415ccb:	pusha  
  415ccc:	dec    ecx
  415ccd:	pop    ecx
  415cce:	mov    bl,0xac
  415cd0:	test   eax,0xb7df3452
  415cd5:	xor    DWORD PTR [ecx+eax*2+0x66],ecx
  415cd9:	repnz mov esi,0xce8d3cfe
  415cdf:	imul   edx,edi,0xfffffffc
  415ce2:	inc    ebx
  415ce3:	inc    ecx
  415ce4:	imul   esi,eax,0x3ec9a9de
  415cea:	fs popa 
  415cec:	lock jns 0x415c7a
  415cef:	imul   ebx,DWORD PTR [ebx-0x26],0x52
  415cf3:	cld    
  415cf4:	jecxz  0x415d43
  415cf6:	push   edx
  415cf7:	mov    dl,0x24
  415cf9:	add    bh,BYTE PTR [ebp-0x79b36bd1]
  415cff:	leave  
  415d00:	test   DWORD PTR [eax],ebp
  415d02:	pop    edx
  415d03:	(bad)  
  415d04:	cmp    al,0xd5
  415d06:	(bad)  
  415d07:	jmp    0xa4d2be4a
  415d0c:	jl     0x415ceb
  415d0e:	ror    DWORD PTR es:[eax-0x26fb917],0xdc
  415d16:	mov    ds,WORD PTR [ebx]
  415d18:	(bad)  
  415d19:	cs dec esi
  415d1b:	jg     0x415d56
  415d1d:	mov    cl,0xb8
  415d1f:	fisubr WORD PTR [esi+ebx*1-0x19]
  415d23:	adc    ah,BYTE PTR [eax]
  415d25:	shl    BYTE PTR [ebx+0x3d1e8e5b],0x29
  415d2c:	xchg   ecx,eax
  415d2d:	std    
  415d2e:	sub    ch,al
  415d30:	mov    bl,0x4b
  415d32:	dec    ebx
  415d33:	mov    gs,WORD PTR [esi-0x40]
  415d36:	bound  esi,QWORD PTR [ecx]
  415d38:	dec    edi
  415d39:	dec    eax
  415d3a:	(bad)  
  415d3b:	repnz push edx
  415d3d:	imul   edi,DWORD PTR [esi+0x5]
  415d41:	out    0x7e,eax
  415d43:	sbb    ch,al
  415d45:	mov    ds:0xc8630c86,eax
  415d4a:	retf   
  415d4b:	stc    
  415d4c:	shl    BYTE PTR [eax-0x11],cl
  415d4f:	stos   DWORD PTR es:[edi],eax
  415d50:	bound  esi,QWORD PTR [ebp+0x16fd2f2e]
  415d56:	cs push cs
  415d58:	rcr    BYTE PTR [edx-0x6721ea71],1
  415d5e:	push   ds
  415d5f:	mov    bl,0x5c
  415d61:	jne    0x415cee
  415d63:	add    dl,BYTE PTR [ecx-0x7a23aa5e]
  415d69:	je     0x415d42
  415d6b:	or     eax,0x62428ad5
  415d70:	or     BYTE PTR [edx],0x7b
  415d73:	and    BYTE PTR [esi+0xf1ffad8],ah
  415d79:	dec    ecx
  415d7a:	dec    esi
  415d7b:	popf   
  415d7c:	mov    bl,0x3
  415d7e:	mov    al,BYTE PTR [esi-0x24]
  415d81:	cld    
  415d82:	mov    al,0x64
  415d84:	push   eax
  415d85:	daa    
  415d86:	(bad)  [ecx-0x57]
  415d89:	hlt    
  415d8a:	xchg   ecx,eax
  415d8b:	and    BYTE PTR [edx],bl
  415d8d:	lods   eax,DWORD PTR ds:[esi]
  415d8e:	lods   al,BYTE PTR ds:[esi]
  415d8f:	xchg   edi,eax
  415d90:	adc    dh,bl
  415d92:	push   esp
  415d93:	jns    0x415d3d
  415d95:	rcl    DWORD PTR [ecx-0x2a97839],cl
  415d9b:	lds    eax,FWORD PTR [esi+0x7c]
  415d9e:	pop    esi
  415d9f:	in     eax,dx
  415da0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415da1:	sbb    al,0xa3
  415da3:	mov    edx,0x39139b35
  415da8:	push   esi
  415da9:	into   
  415daa:	adc    DWORD PTR [eax+0x29b7dedc],edx
  415db0:	adc    DWORD PTR [esp+eax*8],0x43
  415db4:	shl    dh,1
  415db6:	sbb    edi,DWORD PTR [esi-0xf]
  415db9:	mov    al,BYTE PTR [ebx]
  415dbb:	xor    al,BYTE PTR [edx-0x78]
  415dbe:	stos   DWORD PTR es:[edi],eax
  415dbf:	jne    0x415dba
  415dc1:	pop    esi
  415dc2:	sbb    DWORD PTR ss:[esi],ebp
  415dc5:	fisub  WORD PTR gs:[ebp+0x1]
  415dc9:	data16 sti 
  415dcb:	std    
  415dcc:	pop    ds
  415dcd:	xchg   esp,eax
  415dce:	sbb    DWORD PTR [ecx],esp
  415dd0:	retf   
  415dd1:	dec    edx
  415dd2:	aaa    
  415dd3:	cwde   
  415dd4:	lods   al,BYTE PTR ds:[esi]
  415dd5:	mov    al,ds:0xb73303f8
  415dda:	dec    eax
  415ddb:	add    cl,dl
  415ddd:	ror    BYTE PTR ds:[ebx+0x750d1d6c],0x9b
  415de5:	jmp    0x59c09eed
  415dea:	push   cs
  415deb:	and    al,0x74
  415ded:	(bad)  
  415dee:	mov    eax,DWORD PTR [eax+edi*4]
  415df1:	lahf   
  415df2:	scas   eax,DWORD PTR es:[edi]
  415df3:	scas   al,BYTE PTR es:[edi]
  415df4:	inc    esi
  415df5:	stc    
  415df6:	and    ch,BYTE PTR [ebx+0x0]
  415df9:	stos   DWORD PTR es:[edi],eax
  415dfa:	aas    
  415dfb:	pusha  
  415dfc:	mov    ebp,0x99bf81fe
  415e01:	mov    esp,0x84012aa7
  415e06:	popf   
  415e07:	ins    BYTE PTR es:[edi],dx
  415e08:	loopne 0x415e57
  415e0a:	pop    edi
  415e0b:	mov    bl,0x70
  415e0d:	aaa    
  415e0e:	inc    eax
  415e0f:	dec    ebx
  415e10:	pop    esp
  415e11:	arpl   WORD PTR [ecx],si
  415e13:	sbb    BYTE PTR [eax+0xb],cl
  415e16:	arpl   WORD PTR [ecx],sp
  415e18:	xor    BYTE PTR [ebp-0x4b],ah
  415e1b:	dec    edi
  415e1c:	and    BYTE PTR [edx],ah
  415e1e:	das    
  415e1f:	or     BYTE PTR [ebx-0x1015cf44],cl
  415e25:	into   
  415e26:	ret    
  415e27:	xlat   BYTE PTR ds:[ebx]
  415e28:	xor    edx,esi
  415e2a:	adc    eax,0xc5e17920
  415e2f:	pop    ecx
  415e30:	cdq    
  415e31:	(bad)  
  415e32:	rol    dl,0xbf
  415e35:	loop   0x415dd9
  415e37:	ins    BYTE PTR es:[edi],dx
  415e38:	sub    eax,0x7801eb08
  415e3d:	fiadd  DWORD PTR [eax+0x7854a0f7]
  415e43:	and    DWORD PTR [ecx],esp
  415e45:	mov    eax,ds:0xab28b0bf
  415e4a:	adc    al,0x92
  415e4c:	inc    esp
  415e4d:	dec    ebx
  415e4e:	cmp    edx,DWORD PTR [edi]
  415e50:	mov    eax,edi
  415e52:	enter  0x475d,0x23
  415e56:	mov    gs,WORD PTR [esi]
  415e58:	or     al,0xd7
  415e5a:	add    eax,0x1b6f14b5
  415e5f:	jno    0x415ecd
  415e61:	cmp    BYTE PTR [edi+edi*4+0x12f38e10],0x69
  415e69:	push   eax
  415e6a:	jae    0x415e16
  415e6c:	fsubp  st(5),st
  415e6e:	dec    esp
  415e6f:	jbe    0x415e6b
  415e71:	xchg   DWORD PTR [ecx+0x1a],ecx
  415e74:	cmc    
  415e75:	sub    al,0x20
  415e77:	out    0xad,al
  415e79:	addr16 jns 0x415ea0
  415e7c:	jmp    0x8bb725ac
  415e81:	popa   
  415e82:	cmp    ebx,DWORD PTR [esp+eax*2-0x32519f38]
  415e89:	jmp    0x9276:0x3a886d5d
  415e90:	adc    al,0x80
  415e92:	xchg   al,ah
  415e94:	sub    ch,BYTE PTR [edx]
  415e96:	jl     0x415eed
  415e98:	adc    eax,0xa85f9715
  415e9d:	ins    DWORD PTR es:[edi],dx
  415e9e:	stos   BYTE PTR es:[edi],al
  415e9f:	pop    es
  415ea0:	fcom   st(7)
  415ea2:	and    BYTE PTR [ebx+ebp*1-0x2663a2df],dh
  415ea9:	mov    ebx,0x88038c1b
  415eae:	mov    dl,0x54
  415eb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415eb1:	jl     0x415eb2
  415eb3:	pop    ecx
  415eb4:	out    0xdf,al
  415eb6:	dec    edi
  415eb7:	into   
  415eb8:	mov    ah,0x9a
  415eba:	mov    eax,ds:0xbfdbf365
  415ebf:	pop    ss
  415ec0:	xchg   ebp,eax
  415ec1:	mov    edx,0x8ec9f613
  415ec6:	sub    dl,BYTE PTR [esi+0x56]
  415ec9:	mov    ch,0xf2
  415ecb:	pop    esp
  415ecc:	add    DWORD PTR [edi+edi*4-0x57513d79],ebx
  415ed3:	fcmovu st,st(4)
  415ed5:	stos   DWORD PTR es:[edi],eax
  415ed6:	add    eax,0x72348bdf
  415edb:	cmp    esp,ebx
  415edd:	xor    eax,0xeb4f7bd2
  415ee2:	jp     0x415e98
  415ee4:	mov    ds:0xebc630ed,eax
  415ee9:	adc    ah,BYTE PTR [eax]
  415eeb:	xor    eax,0x670ccb3f
  415ef0:	pop    edi
  415ef1:	rol    DWORD PTR [eax+0x3c],0x8
  415ef5:	jne    0x415efb
  415ef7:	lods   al,BYTE PTR ds:[esi]
  415ef8:	cld    
  415ef9:	mov    ecx,0xc6503a5
  415efe:	or     eax,0x1846f969
  415f03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f04:	call   0x1a50:0x42cc297c
  415f0b:	(bad)  
  415f0c:	out    dx,eax
  415f0d:	push   es
  415f0e:	cli    
  415f0f:	sub    eax,0x37c408d4
  415f14:	mov    ebp,DWORD PTR [eax]
  415f16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f17:	sbb    eax,0x8a27b246
  415f1c:	sub    eax,0xd3517d41
  415f21:	lea    esp,[ebp+0x6d]
  415f24:	push   DWORD PTR [edx]
  415f26:	out    0xa,al
  415f28:	sub    BYTE PTR [ebx-0x12],0x4
  415f2c:	pop    esi
  415f2d:	das    
  415f2e:	and    esp,DWORD PTR [edx]
  415f30:	jl     0x415f45
  415f32:	sti    
  415f33:	mov    cl,0x95
  415f35:	test   eax,0x616ca11a
  415f3a:	cli    
  415f3b:	les    eax,FWORD PTR [ebx-0x47]
  415f3e:	and    eax,0x68f3953a
  415f43:	nop
  415f44:	add    DWORD PTR [edi+edx*4+0x2d435ddf],ebp
  415f4b:	mov    eax,ds:0x592e27cb
  415f50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f51:	push   0x25
  415f53:	ins    BYTE PTR es:[edi],dx
  415f54:	pushf  
  415f55:	inc    esp
  415f56:	ret    0xcaa5
  415f59:	dec    ebp
  415f5a:	sbb    BYTE PTR [ebp+ebx*1-0x79],al
  415f5e:	or     al,0x23
  415f60:	push   esp
  415f62:	push   ebp
  415f63:	add    al,0x84
  415f65:	lock into 
  415f67:	xor    DWORD PTR [edx-0x29],edx
  415f6a:	mov    edx,0x6166eeb9
  415f6f:	and    BYTE PTR [ecx+0x76],dl
  415f72:	sbb    eax,0x1662fe77
  415f77:	push   eax
  415f78:	pop    ebx
  415f79:	push   esp
  415f7a:	mov    ?,WORD PTR [edi-0x30e2bf81]
  415f80:	ja     0x415f8b
  415f82:	push   cs
  415f83:	xor    DWORD PTR [ebx],esi
  415f85:	sub    bh,BYTE PTR ds:[edx+0x9]
  415f89:	sbb    ecx,DWORD PTR [edx+0x34]
  415f8c:	sbb    eax,edx
  415f8e:	in     al,0xb6
  415f90:	cmp    ch,dh
  415f92:	fidivr DWORD PTR [ecx+0x7d]
  415f95:	int3   
  415f96:	(bad)  [ebp+0x43]
  415f99:	inc    esi
  415f9a:	das    
  415f9b:	ins    BYTE PTR es:[edi],dx
  415f9c:	fdivrp st(1),st
  415f9e:	shl    ch,cl
  415fa0:	popa   
  415fa1:	inc    edi
  415fa2:	or     BYTE PTR [esi+edx*8+0x30],bl
  415fa6:	inc    ebx
  415fa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fa8:	add    eax,0xf2347883
  415fad:	aad    0xa3
  415faf:	jb     0x415f77
  415fb1:	imul   edi,esp,0x4da682d5
  415fb7:	dec    edi
  415fb8:	add    ah,bl
  415fba:	push   es
  415fbb:	es pusha 
  415fbd:	into   
  415fbe:	jae    0x416020
  415fc0:	mov    ebp,0xc27fc7ec
  415fc5:	das    
  415fc6:	(bad)  
  415fc7:	mov    ebp,0xc804581b
  415fcc:	test   BYTE PTR [ecx-0x7ca8d517],ch
  415fd2:	mov    cl,0xeb
  415fd4:	adc    BYTE PTR [eax*1-0x6cda0c1f],ch
  415fdb:	call   0x874a:0x5cc06258
  415fe2:	mov    ?,WORD PTR ds:0xe8b7
  415fe7:	mov    eax,ds:0xa1e22312
  415fec:	or     eax,0x1d1e324
  415ff1:	sbb    esi,ebp
  415ff3:	cmp    esp,DWORD PTR [edx+0x428d9e40]
  415ff9:	xchg   ebx,eax
  415ffa:	push   ss
  415ffb:	nop
  415ffc:	fcmovnu st,st(7)
  415ffe:	adc    edx,DWORD PTR [eax]
  416000:	jmp    0xc95d:0xd019dcc4
  416007:	jg     0x415fb4
  416009:	call   0x728f:0x79412ee3
  416010:	pop    ecx
  416011:	pop    edi
  416012:	mov    BYTE PTR [ecx],ch
  416014:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416015:	sbb    DWORD PTR [esi],edx
  416017:	mov    esi,0x5286ed5c
  41601c:	sub    al,BYTE PTR [edi]
  41601e:	ins    BYTE PTR es:[edi],dx
  41601f:	sub    eax,0xffc000a5
  416024:	pop    eax
  416025:	pop    edi
  416026:	sbb    al,0xf6
  416028:	jp     0x415ff8
  41602a:	push   cs
  41602b:	into   
  41602c:	into   
  41602d:	push   esi
  41602e:	pushf  
  41602f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416030:	(bad)
  416033:	daa    
  416034:	adc    DWORD PTR [eax-0x5d],ecx
  416037:	adc    ch,bl
  416039:	rcl    edi,0x21
  41603c:	pop    esi
  41603d:	jge    0x41606d
  41603f:	inc    esi
  416040:	adc    al,0xd4
  416042:	fdivr  DWORD PTR [ebp-0x4bdf59f8]
  416048:	jmp    0xf23be91b
  41604d:	(bad)  
  41604e:	aas    
  41604f:	add    esi,ebp
  416051:	sbb    BYTE PTR [edx+ebx*4-0x433d3d8],bh
  416058:	(bad)  
  416059:	mov    ?,WORD PTR [edx+0x47]
  41605c:	inc    edx
  41605d:	sub    DWORD PTR [edi-0x7d30f649],edi
  416063:	sahf   
  416064:	call   0x6fddb54c
  416069:	or     DWORD PTR [ebp-0x650dc459],esi
  41606f:	stos   BYTE PTR es:[edi],al
  416070:	and    al,cl
  416072:	ja     0x41604e
  416074:	jno    0x416021
  416076:	jg     0x416087
  416078:	call   0x28ff:0xa2933787
  41607f:	dec    edi
  416080:	aas    
  416081:	lahf   
  416082:	push   0xa543f55c
  416087:	mov    al,ds:0x6811f7ae
  41608c:	add    eax,DWORD PTR [eax+ebx*2]
  41608f:	ins    BYTE PTR es:[edi],dx
  416090:	mov    ah,0x62
  416092:	int3   
  416093:	and    al,0x35
  416095:	mov    esi,0xea0ecdbf
  41609a:	lods   al,BYTE PTR ds:[esi]
  41609b:	fwait
  41609c:	js     0x41606d
  41609e:	into   
  41609f:	sub    ecx,DWORD PTR [esi-0x17]
  4160a2:	ret    
  4160a3:	xchg   DWORD PTR [edx],esp
  4160a5:	or     eax,DWORD PTR [edi]
  4160a7:	sbb    eax,0xa9429012
  4160ac:	sar    BYTE PTR [edi+0x13f184b0],1
  4160b2:	and    eax,0xf762cc2
  4160b7:	mov    cl,BYTE PTR [ecx-0x2]
  4160ba:	test   DWORD PTR ds:0xa7b0ee6c,esi
  4160c0:	add    BYTE PTR [edx-0x4b],cl
  4160c3:	xchg   ecx,eax
  4160c4:	fstp   st(7)
  4160c6:	cmp    al,al
  4160c8:	sub    ah,ch
  4160ca:	in     al,dx
  4160cb:	fiadd  WORD PTR [esi+0x59]
  4160ce:	xor    ah,BYTE PTR [ebx]
  4160d0:	jmp    0x41610a
  4160d2:	xor    dl,ch
  4160d4:	inc    BYTE PTR [ebx-0x5bce774f]
  4160da:	push   0xffffffc1
  4160dc:	mov    WORD PTR [ecx+0x21b26498],ss
  4160e2:	repz mov edx,0x32f16729
  4160e8:	push   esi
  4160e9:	mov    bh,0x69
  4160eb:	pop    ecx
  4160ec:	std    
  4160ed:	test   eax,0x1d3c0443
  4160f2:	add    bh,BYTE PTR [ecx]
  4160f4:	and    ah,bl
  4160f6:	mov    eax,0x751b93e2
  4160fb:	xor    cl,BYTE PTR [eax+0x772a3e0c]
  416101:	bnd jge 0x41608b
  416104:	scas   eax,DWORD PTR es:[edi]
  416105:	mov    edx,0xe815e315
  41610a:	pop    edx
  41610b:	lods   al,BYTE PTR ds:[esi]
  41610c:	pop    ecx
  41610d:	ja     0x4160e4
  41610f:	sub    DWORD PTR [eax-0x783d3200],esi
  416115:	aad    0xce
  416117:	(bad)
  41611a:	popa   
  41611b:	inc    DWORD PTR [edx+0x37]
  41611e:	lods   eax,DWORD PTR ds:[esi]
  41611f:	ja     0x4160af
  416121:	and    al,0x7f
  416123:	xchg   edx,eax
  416124:	cli    
  416125:	jg     0x41615b
  416127:	dec    BYTE PTR [esp+ebx*2-0x23]
  41612b:	in     eax,dx
  41612c:	push   0x33
  41612e:	(bad)  
  41612f:	or     dl,BYTE PTR [eax]
  416131:	aaa    
  416132:	sub    edi,esi
  416134:	jecxz  0x416180
  416136:	mov    DWORD PTR [ecx-0x4f],ebx
  416139:	mov    eax,ds:0xa0c276f0
  41613e:	or     esi,ebx
  416140:	jae    0x4160fc
  416142:	(bad)  
  416143:	jns    0x4161a6
  416145:	xor    DWORD PTR [eax-0x2],ecx
  416148:	sub    esp,DWORD PTR [edx+esi*2-0x5a6e7365]
  41614f:	pusha  
  416150:	mov    ecx,DWORD PTR [edi-0x6e]
  416153:	xor    edi,edx
  416155:	std    
  416156:	cmp    BYTE PTR [ecx+0x32f89ff9],bh
  41615c:	fwait
  41615d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41615e:	xchg   ecx,eax
  41615f:	ja     0x41619f
  416161:	inc    esp
  416162:	mov    dh,0x67
  416164:	daa    
  416165:	test   DWORD PTR [ecx-0x65],edx
  416168:	jo     0x4161d2
  41616a:	bound  esi,QWORD PTR [eax-0x74]
  41616d:	sub    eax,0xb4a1a1ac
  416172:	les    ecx,FWORD PTR [ebp-0x61]
  416175:	cli    
  416176:	fcomp  QWORD PTR [ecx+0x2bf4f606]
  41617c:	fsub   DWORD PTR [edi+0xf54cd69]
  416182:	sub    bl,BYTE PTR [eax]
  416184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416185:	outs   dx,DWORD PTR ds:[esi]
  416186:	hlt    
  416187:	bound  ebp,QWORD PTR [edi]
  416189:	mov    dl,BYTE PTR [eax+0x30b5ed4d]
  41618f:	push   eax
  416190:	mov    bh,cl
  416192:	inc    edi
  416193:	cmp    BYTE PTR [edx-0x20],0xa9
  416197:	adc    ah,cl
  416199:	imul   eax,DWORD PTR [ecx-0x67],0x403eb154
  4161a0:	xlat   BYTE PTR ds:[ebx]
  4161a1:	sbb    eax,edi
  4161a3:	jnp    0x4161c9
  4161a5:	add    al,0x8a
  4161a7:	test   eax,0xdb96bdc9
  4161ac:	mov    ah,0x7c
  4161ae:	int3   
  4161af:	(bad)  
  4161b0:	call   0xb63a:0x684a8b6c
  4161b7:	xchg   esp,eax
  4161b8:	out    dx,al
  4161b9:	mov    esi,0xa1db0f43
  4161be:	mov    al,0xdd
  4161c0:	cli    
  4161c1:	sub    esi,DWORD PTR [eax-0x26]
  4161c4:	jg     0x416204
  4161c6:	xchg   ebp,eax
  4161c7:	fdivrp st(7),st
  4161c9:	ret    0xb6cc
  4161cc:	inc    edx
  4161cd:	arpl   WORD PTR ss:[esi+0x5b],sp
  4161d1:	jmp    0x1c12:0xd46affb8
  4161d8:	push   edx
  4161d9:	dec    eax
  4161da:	pusha  
  4161db:	push   eax
  4161dc:	bound  ebp,QWORD PTR [edx+0x5f]
  4161df:	xchg   dh,cl
  4161e1:	xchg   ebp,eax
  4161e2:	push   ebx
  4161e3:	iret   
  4161e4:	retf   0xf20c
  4161e7:	adc    eax,0x355a2ece
  4161ec:	mov    dl,0xb2
  4161ee:	out    0x21,eax
  4161f0:	aaa    
  4161f1:	rcr    BYTE PTR [edx-0x1736f437],cl
  4161f7:	dec    esi
  4161f8:	inc    esp
  4161f9:	fsubr  st,st(1)
  4161fb:	aam    0x2
  4161fd:	popa   
  4161fe:	call   0x3508c314
  416203:	(bad)  
  416204:	fist   WORD PTR [esi]
  416206:	dec    ebx
  416207:	bound  ebp,QWORD PTR [eax-0x2b9193eb]
  41620d:	popa   
  41620e:	test   DWORD PTR [ebx],esp
  416210:	test   eax,0x2793a8c6
  416215:	push   0x69
  416217:	out    0x26,al
  416219:	mov    esi,ecx
  41621b:	bound  esi,QWORD PTR [edi-0x20e715ed]
  416221:	and    bl,0x24
  416224:	daa    
  416225:	in     al,0x79
  416227:	mov    BYTE PTR [edi],ah
  416229:	(bad)  
  41622a:	ins    BYTE PTR es:[edi],dx
  41622b:	test   ch,cl
  41622d:	adc    bl,BYTE PTR [ebx]
  41622f:	pop    ebp
  416230:	int3   
  416231:	pop    ebx
  416232:	xor    dl,0xb9
  416235:	fdivr  st(4),st
  416237:	enter  0x24ed,0xfa
  41623b:	add    BYTE PTR [eax],0x77
  41623e:	or     DWORD PTR [ebx],eax
  416240:	sbb    ch,ch
  416242:	imul   ebx,DWORD PTR [edi],0xffffffb9
  416245:	or     ecx,0x3e8f2b4d
  41624b:	add    eax,0x1974abb6
  416250:	jecxz  0x416276
  416252:	not    BYTE PTR [esi+ebx*2]
  416255:	pminub mm2,QWORD PTR [edx+0x6c]
  416259:	dec    ecx
  41625a:	(bad)  
  41625b:	repnz scas eax,DWORD PTR es:[edi]
  41625d:	mov    bh,0xc8
  41625f:	xor    al,0xbf
  416261:	sbb    eax,edi
  416263:	mov    al,0xb5
  416265:	add    eax,0x6668b91b
  41626a:	pusha  
  41626b:	in     eax,dx
  41626c:	or     eax,DWORD PTR [ebx-0x7bf83f23]
  416272:	xchg   esp,eax
  416273:	retf   0x2c2b
  416276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416277:	xor    BYTE PTR [ebx-0x231ec675],dl
  41627d:	cmp    eax,0xb38d6960
  416282:	fmul   QWORD PTR [esi+0x5c]
  416285:	dec    ebx
  416286:	out    0x1d,eax
  416288:	outs   dx,DWORD PTR ds:[esi]
  416289:	jbe    0x4162ee
  41628b:	mov    al,0x7
  41628d:	or     al,0x8c
  41628f:	(bad)  
  416290:	dec    esp
  416291:	lock mov bl,0xab
  416294:	jb     0x416290
  416296:	sub    al,al
  416298:	mov    cl,0x89
  41629a:	push   ebp
  41629b:	test   al,0x8b
  41629d:	push   ebp
  41629e:	or     BYTE PTR [ebx-0x3d7e53a3],cl
  4162a4:	(bad)  
  4162a6:	add    BYTE PTR fs:[ebx],cl
  4162a9:	ror    DWORD PTR [ecx+0x558bac55],cl
  4162af:	or     BYTE PTR [ebx-0x2efc4fa3],cl
  4162b5:	xor    edx,ebx
  4162b7:	mov    DWORD PTR [ebp-0x50],edx
  4162ba:	mov    edx,DWORD PTR [ebp+0x8]
  4162bd:	mov    ebx,DWORD PTR [ebp-0x4c]
  4162c0:	add    edx,edi
  4162c2:	and    edx,ebx
  4162c4:	mov    DWORD PTR [ebp-0x4c],edx
  4162c7:	mov    edx,DWORD PTR [ebp+0x8]
  4162ca:	mov    ebx,DWORD PTR [ebp-0x48]
  4162cd:	lea    edx,[ebx+edx*1+0x241fc1f]
  4162d4:	mov    DWORD PTR [ebp-0x48],edx
  4162d7:	mov    edx,DWORD PTR [ebp+0x8]
  4162da:	mov    ebx,0xfa5e15e2
  4162df:	sub    ebx,edx
  4162e1:	add    ebx,DWORD PTR [ebp-0x44]
  4162e4:	mov    DWORD PTR [ebp-0x44],ebx
  4162e7:	mov    edx,DWORD PTR [ebp+0x8]
  4162ea:	xor    edx,eax
  4162ec:	add    edx,esi
  4162ee:	jne    0x413ef1
  4162f4:	mov    edx,DWORD PTR [ebp-0x14]
  4162f7:	mov    DWORD PTR [ebp+0x8],edx
  4162fa:	jmp    0x41636f
  4162ff:	mov    edx,DWORD PTR [ebp+0x8]
  416302:	mov    ebx,DWORD PTR [ebp-0x8]
  416305:	xor    edx,eax
  416307:	xor    ebx,eax
  416309:	sub    edx,ebx
  41630b:	sub    edx,esi
  41630d:	xor    edx,eax
  41630f:	mov    DWORD PTR [ebp+0x8],edx
  416312:	mov    edx,DWORD PTR [ebp+0x8]
  416315:	mov    ebx,DWORD PTR [ebp-0x58]
  416318:	add    edx,0x5708f8
  41631e:	imul   edx,ebx
  416321:	mov    DWORD PTR [ebp-0x58],edx
  416324:	mov    edx,DWORD PTR [ebp+0x8]
  416327:	mov    ebx,DWORD PTR [ebp-0x54]
  41632a:	add    edx,0x64f8da
  416330:	or     edx,ebx
  416332:	mov    DWORD PTR [ebp-0x54],edx
  416335:	mov    edx,DWORD PTR [ebp+0x8]
  416338:	mov    ebx,DWORD PTR [ebp-0x50]
  41633b:	add    edx,ecx
  41633d:	xor    edx,ebx
  41633f:	mov    DWORD PTR [ebp-0x50],edx
  416342:	mov    edx,DWORD PTR [ebp+0x8]
  416345:	mov    ebx,DWORD PTR [ebp-0x4c]
  416348:	add    edx,edi
  41634a:	and    edx,ebx
  41634c:	mov    DWORD PTR [ebp-0x4c],edx
  41634f:	mov    edx,DWORD PTR [ebp+0x8]
  416352:	mov    ebx,DWORD PTR [ebp-0x48]
  416355:	lea    edx,[ebx+edx*1+0x241fc1f]
  41635c:	mov    DWORD PTR [ebp-0x48],edx
  41635f:	mov    edx,DWORD PTR [ebp+0x8]
  416362:	mov    ebx,0xfa5e15e2
  416367:	sub    ebx,edx
  416369:	add    ebx,DWORD PTR [ebp-0x44]
  41636c:	mov    DWORD PTR [ebp-0x44],ebx
  41636f:	mov    edx,DWORD PTR [ebp+0x8]
  416372:	xor    edx,eax
  416374:	add    edx,esi
  416376:	jne    0x4162ff
  41637c:	mov    edx,DWORD PTR [ebp-0x8]
  41637f:	mov    ebx,DWORD PTR [ebp-0xc]
  416382:	jmp    0x418708
  416387:	nop
  416388:	test   BYTE PTR [ebp-0x643e8c3e],0xf4
  41638f:	add    DWORD PTR [ebp-0x5d],esp
  416392:	out    0x53,eax
  416394:	mov    ah,bl
  416396:	cwde   
  416397:	pop    esp
  416398:	push   edi
  416399:	jns    0x416415
  41639b:	add    DWORD PTR [edi+0x7a],ebx
  41639e:	jp     0x416371
  4163a0:	ds xchg edi,eax
  4163a2:	mov    al,ds:0x247ad0e4
  4163a7:	jle    0x41632f
  4163a9:	jmp    0x746d:0x51bbb728
  4163b0:	adc    bh,0x54
  4163b3:	jmp    0x41633a
  4163b5:	jno    0x416383
  4163b7:	loop   0x416424
  4163b9:	jns    0x416368
  4163bb:	fisttp DWORD PTR [edx-0x6cdbde7e]
  4163c1:	pop    ecx
  4163c2:	(bad)  
  4163c4:	loop   0x4163e1
  4163c6:	in     al,dx
  4163c7:	aam    0xb6
  4163c9:	ror    DWORD PTR [ecx-0x66d90dc7],cl
  4163cf:	retf   
  4163d0:	and    DWORD PTR [esi-0x5d],esi
  4163d3:	jns    0x416395
  4163d5:	into   
  4163d6:	mov    cl,BYTE PTR [eax-0x2a]
  4163d9:	jecxz  0x4163f9
  4163db:	pusha  
  4163dc:	lds    esp,FWORD PTR [esi+0x1c75048e]
  4163e2:	pusha  
  4163e3:	leave  
  4163e4:	iret   
  4163e5:	xor    DWORD PTR [edi],esi
  4163e7:	dec    edi
  4163e8:	inc    esp
  4163e9:	(bad)
  4163ed:	aam    0x87
  4163ef:	add    ch,BYTE PTR [ecx+0x49]
  4163f2:	(bad)  [edi+0x49de865]
  4163f8:	outs   dx,DWORD PTR ds:[esi]
  4163f9:	pusha  
  4163fa:	ret    
  4163fb:	shl    DWORD PTR [edx],cl
  4163fd:	lods   eax,DWORD PTR ds:[esi]
  4163fe:	fstp   DWORD PTR ds:0x139b7fc5
  416404:	jno    0x416472
  416406:	and    bh,BYTE PTR [eax+0x28]
  416409:	push   ss
  41640a:	fisubr DWORD PTR [ebp+0x62]
  41640d:	xor    eax,0xf0a48032
  416412:	(bad)  
  416413:	stc    
  416414:	inc    esi
  416415:	jge    0x416426
  416417:	xor    esp,DWORD PTR [edi]
  416419:	int    0xe4
  41641b:	mov    bl,0x3b
  41641d:	mov    dl,0x6a
  41641f:	das    
  416420:	jg     0x41645e
  416422:	in     al,0x29
  416424:	xor    ecx,DWORD PTR [eax+eax*4-0x6cdc1396]
  41642b:	loopne 0x4163ce
  41642d:	sbb    al,0x32
  41642f:	aam    0x68
  416431:	imul   edx,DWORD PTR [esi+0x6e03e24d],0x5a
  416438:	or     eax,0x17b4c5e4
  41643d:	loop   0x416405
  41643f:	lahf   
  416440:	mov    al,ds:0x8f441924
  416445:	sub    bl,cl
  416447:	lods   eax,DWORD PTR ds:[esi]
  416448:	add    ebx,edi
  41644a:	add    ebx,ebp
  41644c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41644d:	or     esp,ebx
  41644f:	aam    0xbb
  416451:	shl    BYTE PTR [ecx],1
  416453:	inc    ebp
  416454:	fimul  DWORD PTR [edx-0xf2a0419]
  41645a:	call   0x8a6a3a86
  41645f:	fst    DWORD PTR [eax+0xf979fbe]
  416465:	sbb    edi,ebx
  416467:	mov    eax,ds:0x360d19c8
  41646c:	(bad)  [eax+0x4e]
  41646f:	and    cl,BYTE PTR [edx-0x61a8325a]
  416475:	inc    eax
  416476:	jns    0x4164ae
  416478:	mov    WORD PTR [edx],?
  41647a:	je     0x416458
  41647c:	lods   al,BYTE PTR ds:[esi]
  41647d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41647e:	cmp    dh,BYTE PTR [edx]
  416480:	fwait
  416481:	pop    es
  416482:	cmp    eax,0xbcda4202
  416487:	mov    ah,0x56
  416489:	leave  
  41648a:	repnz push es
  41648c:	cmp    ecx,esp
  41648e:	inc    edx
  41648f:	fdiv   QWORD PTR [edx-0x27091ec9]
  416495:	and    al,0x86
  416497:	stc    
  416498:	jb     0x416436
  41649a:	pop    esi
  41649b:	es push ebp
  41649d:	dec    ebp
  41649e:	xchg   esp,eax
  41649f:	mov    ebx,0x1c4576a8
  4164a4:	daa    
  4164a5:	imul   edi,esp,0x39468f3d
  4164ab:	mov    dh,al
  4164ad:	outs   dx,BYTE PTR ds:[esi]
  4164ae:	inc    esp
  4164af:	sti    
  4164b0:	push   es
  4164b1:	and    dh,BYTE PTR [ecx+0x22]
  4164b4:	adc    eax,0xf2f22d23
  4164b9:	jmp    0x7a43:0xe36d377f
  4164c0:	cli    
  4164c1:	cs xchg esp,eax
  4164c3:	jmp    0x4164be
  4164c5:	fstp   DWORD PTR [edi+0x3acb7b37]
  4164cb:	adc    bl,BYTE PTR [esi-0x3c]
  4164ce:	in     al,dx
  4164cf:	mov    ah,0x1f
  4164d1:	test   edi,esi
  4164d3:	fcomp  QWORD PTR [ebx]
  4164d5:	inc    ecx
  4164d6:	es push ecx
  4164d8:	fwait
  4164d9:	push   ss
  4164da:	mov    bh,0x22
  4164dc:	stos   BYTE PTR es:[edi],al
  4164dd:	in     eax,dx
  4164de:	inc    ebx
  4164df:	inc    esi
  4164e0:	push   cs
  4164e1:	or     BYTE PTR [edi+0x1726b6da],bl
  4164e7:	add    ch,ch
  4164e9:	and    DWORD PTR [edx+0x4347d650],edx
  4164ef:	aad    0x2e
  4164f1:	add    ebx,DWORD PTR [ecx-0x70]
  4164f4:	push   cs
  4164f5:	sub    eax,0x350f12c6
  4164fa:	sti    
  4164fb:	mov    ebx,0xf5740f27
  416500:	push   ebp
  416501:	aas    
  416502:	mov    WORD PTR [edx],es
  416504:	leave  
  416505:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416506:	repnz mov ch,0x7b
  416509:	fwait
  41650a:	mov    dl,0xc9
  41650c:	dec    ebx
  41650d:	jo     0x416573
  41650f:	out    dx,eax
  416510:	test   DWORD PTR [ebp-0x3ca1ddab],ebp
  416516:	mov    DWORD PTR [eax-0x6745f8f5],edi
  41651c:	pop    edi
  41651d:	or     cl,BYTE PTR [eax+ebx*1-0x18b28cef]
  416524:	pop    edi
  416525:	add    esi,DWORD PTR [eax]
  416527:	in     eax,dx
  416528:	out    0x37,al
  41652a:	(bad)  
  41652b:	popa   
  41652c:	scas   eax,DWORD PTR es:[edi]
  41652d:	nop
  41652e:	mov    ah,0xce
  416530:	mov    cs,WORD PTR es:[edx-0x37bc3ecd]
  416537:	retf   
  416538:	or     al,0xcc
  41653a:	pop    edi
  41653b:	push   eax
  41653c:	xchg   edx,eax
  41653d:	pop    esi
  41653e:	cli    
  41653f:	fild   WORD PTR [eax-0x4]
  416542:	mov    esp,0xb8c6de83
  416547:	push   esi
  416548:	jle    0x4164ca
  41654a:	dec    ebp
  41654b:	jmp    0x416536
  41654d:	and    esp,esp
  41654f:	pop    edx
  416550:	add    edi,ecx
  416552:	and    al,0xc9
  416554:	cmc    
  416555:	mov    eax,DWORD PTR [eax+0x4d]
  416558:	sub    DWORD PTR [eax+edx*1-0x34],ebp
  41655c:	je     0x41650e
  41655e:	dec    ecx
  41655f:	aas    
  416560:	pop    ss
  416561:	push   ecx
  416562:	push   esi
  416563:	xchg   ebx,eax
  416564:	loopne 0x416503
  416566:	les    edx,FWORD PTR [ecx]
  416568:	ins    BYTE PTR es:[edi],dx
  416569:	ret    
  41656a:	xor    BYTE PTR [ecx-0x48baad9f],ah
  416570:	cli    
  416571:	pop    ebx
  416572:	mov    BYTE PTR [edx-0x435a63fb],ch
  416578:	sub    eax,0x9d929e18
  41657d:	pop    edi
  41657e:	sbb    eax,0xcfb49954
  416583:	push   ecx
  416584:	and    BYTE PTR [ecx*1-0x50556fb5],bl
  41658b:	in     eax,0xc0
  41658d:	popf   
  41658e:	mov    eax,ds
  416590:	jne    0x4165a0
  416592:	ja     0x416567
  416594:	sub    BYTE PTR [esp+ecx*1+0x7165d827],dh
  41659b:	mov    ecx,0x41bbe2b
  4165a0:	or     al,0x69
  4165a2:	sbb    DWORD PTR [esi+0x29],edx
  4165a5:	or     eax,0xa9e7a31b
  4165aa:	dec    edx
  4165ab:	xchg   esi,eax
  4165ac:	aad    0xad
  4165ae:	sbb    eax,0x196d2185
  4165b3:	out    0x87,eax
  4165b5:	xchg   edx,eax
  4165b6:	stos   BYTE PTR es:[edi],al
  4165b7:	push   edx
  4165b8:	pop    eax
  4165b9:	out    dx,eax
  4165ba:	push   edx
  4165bb:	jg     0x416601
  4165bd:	imul   ebx,DWORD PTR [ebx],0x1d
  4165c0:	aam    0xc1
  4165c2:	outs   dx,DWORD PTR ds:[esi]
  4165c3:	fldcw  WORD PTR [ecx]
  4165c5:	dec    BYTE PTR [edx]
  4165c7:	inc    edx
  4165c8:	in     al,dx
  4165c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165ca:	pop    edi
  4165cb:	loopne 0x416643
  4165cd:	pop    esp
  4165ce:	jbe    0x4165c2
  4165d0:	inc    esi
  4165d1:	in     al,dx
  4165d2:	stc    
  4165d3:	imul   DWORD PTR [ebp-0xb]
  4165d6:	push   ss
  4165d7:	fs push ss
  4165d9:	or     al,0x32
  4165db:	stc    
  4165dc:	das    
  4165dd:	stos   DWORD PTR es:[edi],eax
  4165de:	fs push ss
  4165e0:	and    esp,esp
  4165e2:	nop
  4165e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165e4:	stc    
  4165e5:	inc    esi
  4165e6:	mov    ah,0x6c
  4165e8:	aad    0x3b
  4165ea:	iret   
  4165eb:	in     al,0x5f
  4165ed:	mov    dh,0x79
  4165ef:	jecxz  0x4165db
  4165f1:	js     0x416658
  4165f3:	bound  eax,QWORD PTR [edx*8-0x18d3eafc]
  4165fa:	cwde   
  4165fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165fc:	(bad)  
  4165fd:	pop    ss
  4165fe:	push   cs
  4165ff:	in     al,0x5a
  416601:	int3   
  416602:	jp     0x416621
  416604:	cmp    eax,0x794be925
  416609:	xor    BYTE PTR [ecx-0x1f7f84e5],bh
  41660f:	sub    eax,0x6cf845b4
  416614:	outs   dx,BYTE PTR ds:[esi]
  416615:	jle    0x416691
  416617:	test   ah,cl
  416619:	cdq    
  41661a:	bound  edx,QWORD PTR [ebx+eax*1-0x5d89242d]
  416621:	into   
  416622:	jo     0x41661d
  416624:	out    0x60,eax
  416626:	pop    ebx
  416627:	lahf   
  416628:	adc    ebp,edi
  41662a:	outs   dx,DWORD PTR ds:[esi]
  41662b:	popa   
  41662c:	cld    
  41662d:	push   ebp
  41662e:	push   ebp
  41662f:	push   ss
  416630:	stos   BYTE PTR es:[edi],al
  416631:	gs push 0x7a7e63e0
  416637:	push   ds
  416638:	xchg   esi,ebx
  41663a:	add    DWORD PTR [ebp+0x3089dc40],edi
  416640:	jp     0x41665c
  416642:	clc    
  416643:	jnp    0x41668e
  416645:	data16 add dl,BYTE PTR [ecx+0x3a]
  416649:	loop   0x416687
  41664b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41664c:	and    al,0x39
  41664e:	test   BYTE PTR [edi],al
  416650:	lods   eax,DWORD PTR ds:[esi]
  416651:	add    esi,DWORD PTR [ecx-0x3d]
  416654:	test   al,0xb
  416656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416657:	enter  0x3c13,0xa3
  41665b:	cmp    cl,bl
  41665d:	into   
  41665e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41665f:	xchg   ebp,eax
  416660:	retf   0x73d1
  416663:	retf   0xe4c3
  416666:	test   al,0xce
  416668:	jmp    0xfeed:0xae8b5488
  41666f:	inc    edx
  416670:	ins    DWORD PTR es:[edi],dx
  416671:	push   ecx
  416672:	cwde   
  416673:	and    BYTE PTR [edx-0xa],ch
  416676:	push   ebx
  416677:	idiv   esi
  416679:	imul   esp,DWORD PTR [ecx+0x4dea1a5c],0x5a
  416680:	rcl    BYTE PTR [edi],cl
  416682:	or     eax,0xb66eecdc
  416687:	adc    BYTE PTR ss:[ebp-0x79],ch
  41668b:	arpl   WORD PTR [ebx+0x14],dx
  41668e:	jnp    0x4166f1
  416690:	push   ss
  416691:	ss inc edx
  416693:	push   edx
  416694:	js     0x4166aa
  416696:	iret   
  416697:	push   ebx
  416698:	scas   eax,DWORD PTR es:[edi]
  416699:	sbb    ebp,DWORD PTR [ebp-0x3e]
  41669c:	repz call 0x86f29220
  4166a2:	cwde   
  4166a3:	leave  
  4166a4:	lock stc 
  4166a6:	jbe    0x416698
  4166a8:	xchg   ecx,eax
  4166a9:	pushf  
  4166aa:	out    0xe3,eax
  4166ac:	out    0xb3,eax
  4166ae:	mov    DWORD PTR [ebx-0x52],esp
  4166b1:	or     DWORD PTR [ebx-0x5d7db073],0x234107ca
  4166bb:	sbb    edi,DWORD PTR [edi]
  4166bd:	and    edx,0x44acf563
  4166c3:	ret    
  4166c4:	push   esi
  4166c5:	dec    ebx
  4166c6:	not    cl
  4166c8:	adc    dh,BYTE PTR [eax+0x33a4bd07]
  4166ce:	ficomp WORD PTR [esi]
  4166d0:	pop    ecx
  4166d2:	jge    0x4166e4
  4166d4:	(bad)  
  4166d6:	jmp    0x5d9a:0x40cf57b8
  4166dd:	or     eax,0x70241c0f
  4166e2:	in     al,dx
  4166e3:	rcr    DWORD PTR [ecx+0x35],1
  4166e6:	(bad)  
  4166e7:	repz adc eax,0xf7c4bd01
  4166ed:	lahf   
  4166ee:	mov    al,0xc9
  4166f0:	or     al,0xf4
  4166f2:	xchg   esi,eax
  4166f3:	jae    0x416744
  4166f5:	std    
  4166f6:	lahf   
  4166f7:	push   edx
  4166f8:	xlat   BYTE PTR ds:[ebx]
  4166f9:	mov    fs,WORD PTR [edi-0x2a]
  4166fc:	repz mov al,ds:0x8197da8c
  416702:	pop    esp
  416703:	mov    cl,0x6d
  416705:	test   al,0xcc
  416707:	sub    al,0x59
  416709:	es mov ecx,0xc2b86b0f
  41670f:	or     al,0x3c
  416711:	outs   dx,BYTE PTR ds:[esi]
  416712:	inc    ebx
  416713:	out    dx,eax
  416714:	lea    edi,[ebx+0x10159b7]
  41671a:	mov    ebx,0xb1596107
  41671f:	ss sahf 
  416721:	jbe    0x41676c
  416723:	add    ah,BYTE PTR [ebx]
  416725:	in     al,0x8d
  416727:	sar    BYTE PTR [esp+eiz*4-0x7c437b37],cl
  41672e:	and    al,0xb3
  416730:	mov    eax,0x3ff14000
  416735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416736:	bound  ebp,QWORD PTR [ebx]
  416738:	sub    edx,DWORD PTR [edi+0x354a4f2b]
  41673e:	xchg   esi,eax
  41673f:	pusha  
  416740:	add    ch,0x5f
  416743:	stc    
  416744:	or     bh,BYTE PTR [ebx-0x19]
  416747:	loope  0x416708
  416749:	das    
  41674a:	pop    edx
  41674b:	pushf  
  41674c:	inc    ecx
  41674d:	xor    edi,DWORD PTR [esi-0x74]
  416750:	or     dl,BYTE PTR [edx]
  416752:	cmp    eax,ebp
  416754:	rol    ecx,cl
  416756:	dec    ecx
  416757:	fst    QWORD PTR [eax]
  416759:	xlat   BYTE PTR ds:[ebx]
  41675a:	inc    ecx
  41675b:	pop    eax
  41675c:	jmp    FWORD PTR [ebx+eiz*8+0x48e3ee28]
  416763:	aaa    
  416764:	lahf   
  416765:	mov    eax,ds:0x1dd86c0a
  41676a:	mov    ds:0xe0662aab,al
  41676f:	(bad)  
  416770:	bound  edi,QWORD PTR [ecx-0x67cc3d36]
  416776:	mov    edi,0x1e0d6fed
  41677b:	jbe    0x41674f
  41677d:	stc    
  41677e:	mov    esi,0xdc38adc3
  416783:	xor    DWORD PTR [ebx-0x74],ecx
  416786:	jb     0x416785
  416788:	gs jno 0x416780
  41678b:	xchg   dl,dl
  41678d:	push   bp
  41678f:	xchg   esp,eax
  416790:	fxch   st(7)
  416792:	adc    cl,BYTE PTR [ecx+0x3ea96e00]
  416798:	jnp    0x4167e6
  41679a:	addr16 and eax,0x36158a32
  4167a0:	fdivrp st(4),st
  4167a2:	inc    edi
  4167a3:	aam    0x56
  4167a5:	arpl   bx,sp
  4167a7:	inc    ecx
  4167a8:	int3   
  4167a9:	lods   eax,DWORD PTR ds:[esi]
  4167aa:	mov    eax,0x328c4d04
  4167af:	adc    eax,0x2b0879d9
  4167b4:	lds    ebx,FWORD PTR [edx+0x62]
  4167b7:	xor    eax,0xe80ecdcd
  4167bc:	ins    DWORD PTR es:[edi],dx
  4167bd:	or     esi,0x7f61353a
  4167c3:	int3   
  4167c4:	cmp    al,0x86
  4167c6:	loop   0x4167b6
  4167c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167c9:	inc    ebx
  4167ca:	outs   dx,DWORD PTR ds:[esi]
  4167cb:	lea    ecx,[esi]
  4167cd:	mov    ds:0x19873ea1,eax
  4167d2:	push   ds
  4167d3:	(bad)  
  4167d4:	pusha  
  4167d5:	icebp  
  4167d6:	les    esp,FWORD PTR [ecx+0x57]
  4167d9:	call   0xdbd47cae
  4167de:	stos   DWORD PTR es:[edi],eax
  4167df:	imul   eax,DWORD PTR [edi+eiz*2+0x421d7d5f],0x1542d3bc
  4167ea:	stos   BYTE PTR es:[edi],al
  4167eb:	jmp    0xd786:0x2640860a
  4167f2:	xor    eax,DWORD PTR [edx]
  4167f4:	imul   ebp,DWORD PTR [eax+0x729fd018],0x70
  4167fb:	std    
  4167fc:	movaps XMMWORD PTR [edi+0xd],xmm4
  416800:	js     0x41681a
  416802:	div    BYTE PTR [esi]
  416804:	mov    cl,0x74
  416806:	fwait
  416807:	xchg   ecx,eax
  416808:	add    BYTE PTR ds:[eax],0xe8
  41680c:	idiv   dl
  41680e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41680f:	add    al,al
  416811:	pop    ss
  416812:	pop    ss
  416813:	jge    0x4167b2
  416815:	mov    ecx,0x699be137
  41681a:	shl    DWORD PTR [edx+0x3a],1
  41681d:	repnz add ebp,DWORD PTR [esi+0x67388826]
  416824:	dec    eax
  416825:	jne    0x4167c3
  416827:	xchg   esi,eax
  416828:	hlt    
  416829:	stc    
  41682a:	sti    
  41682b:	stos   DWORD PTR es:[edi],eax
  41682c:	xchg   ebp,eax
  41682d:	or     eax,0x9efb61ad
  416832:	mov    eax,0x84b44755
  416837:	ds inc ebx
  416839:	xrelease mov BYTE PTR [esi+esi*2-0x2d],0x6c
  41683f:	pop    ebx
  416840:	push   ebp
  416841:	pop    ss
  416842:	push   ecx
  416843:	mov    ss,eax
  416845:	call   0xfd7:0xf7a9bd94
  41684c:	lods   al,BYTE PTR ds:[esi]
  41684d:	mov    ebp,0xdf654239
  416852:	inc    esp
  416853:	push   cs
  416854:	cwde   
  416855:	sbb    al,0xa8
  416857:	mov    ds:0xb33e55f9,al
  41685c:	adc    al,0xb3
  41685e:	scas   al,BYTE PTR es:[edi]
  41685f:	or     DWORD PTR es:0x6bac244,edi
  416866:	scas   al,BYTE PTR es:[edi]
  416867:	mov    ah,0xd1
  416869:	and    bl,BYTE PTR [ebx+0x5f]
  41686c:	xchg   ebx,eax
  41686d:	add    bh,al
  41686f:	jbe    0x416828
  416871:	popf   
  416872:	test   BYTE PTR [eax+ebp*1],bh
  416875:	mov    esi,0xb7233324
  41687a:	call   0xc08a96aa
  41687f:	mov    dl,0x4f
  416881:	lock and edi,DWORD PTR [esi-0x7f]
  416885:	and    cl,0x33
  416888:	mov    bh,0x99
  41688a:	pop    ds
  41688b:	adc    BYTE PTR [ebx-0x70],0x8f
  41688f:	push   esp
  416890:	es add al,0xdb
  416893:	inc    ebp
  416894:	xor    ebp,DWORD PTR [ebp-0x20]
  416897:	pop    edx
  416898:	sbb    BYTE PTR [ebx+0x11],bl
  41689b:	add    DWORD PTR [edx-0x3cb9ae92],edi
  4168a1:	ror    BYTE PTR [edi],cl
  4168a3:	mov    bl,0xa7
  4168a5:	ret    0x2cc0
  4168a8:	jg     0x41691c
  4168aa:	(bad)  
  4168ab:	test   al,0xa5
  4168ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168ae:	sub    DWORD PTR [edx-0x62],esp
  4168b1:	call   0xc0d72419
  4168b6:	ja     0x416936
  4168b8:	jb     0x41691b
  4168ba:	loope  0x416875
  4168bc:	popf   
  4168bd:	mov    al,ds:0x9313ad97
  4168c2:	sub    BYTE PTR [edx],dl
  4168c4:	imul   esi,DWORD PTR [eax],0x7d
  4168c7:	mov    al,ds:0x4efa1ec0
  4168cc:	pop    edx
  4168cd:	and    edx,DWORD PTR [esi]
  4168cf:	ins    DWORD PTR es:[edi],dx
  4168d0:	add    al,0x72
  4168d2:	std    
  4168d3:	push   cs
  4168d4:	int3   
  4168d5:	or     dl,bl
  4168d7:	leave  
  4168d8:	sub    DWORD PTR [di+0x56],0xffffff9d
  4168dd:	out    dx,al
  4168de:	nop
  4168df:	dec    eax
  4168e0:	ror    BYTE PTR [ebx+0x7],0x92
  4168e4:	xlat   BYTE PTR ds:[ebx]
  4168e5:	fsubr  st,st(3)
  4168e7:	stos   BYTE PTR es:[edi],al
  4168e8:	adc    ah,BYTE PTR [edi]
  4168ea:	ins    DWORD PTR es:[edi],dx
  4168eb:	mov    es,WORD PTR [esi-0x8]
  4168ee:	mov    ds:0x2a9ada46,al
  4168f3:	in     al,dx
  4168f4:	cmc    
  4168f5:	inc    ebp
  4168f6:	mov    eax,0xb59aa5a7
  4168fb:	adc    BYTE PTR [ecx+0x3d],ah
  4168fe:	cmp    ch,bh
  416900:	cli    
  416901:	pop    ds
  416902:	scas   al,BYTE PTR es:[edi]
  416903:	fidivr WORD PTR [ecx-0x28f97cf]
  416909:	mov    esp,0x910875c1
  41690e:	push   ebx
  41690f:	jno    0x41689b
  416911:	cld    
  416912:	fisub  WORD PTR [eax-0x45]
  416915:	ja     0x4168e2
  416917:	rol    DWORD PTR [ebp+0x1a],1
  41691a:	jge    0x416904
  41691c:	push   ss
  41691d:	lahf   
  41691e:	popa   
  41691f:	clc    
  416920:	xor    bl,BYTE PTR [ecx]
  416922:	(bad)  
  416923:	push   esp
  416924:	ins    DWORD PTR es:[edi],dx
  416925:	in     al,dx
  416926:	adc    DWORD PTR [edx+0x46df3c0b],ebp
  41692c:	ror    BYTE PTR [eax+0x40bd61d0],0xcd
  416933:	shl    ch,0x60
  416936:	clc    
  416937:	cs sti 
  416939:	pop    esp
  41693a:	jo     0x416915
  41693c:	jl     0x416940
  41693e:	pop    ebx
  41693f:	imul   esp,edx,0xffffffdf
  416942:	adc    ah,bh
  416944:	adc    DWORD PTR [ebx-0x59],ebp
  416947:	cmp    BYTE PTR [edi],al
  416949:	ja     0x4169a0
  41694b:	add    DWORD PTR [ebx-0x50],eax
  41694e:	(bad)  
  41694f:	inc    ah
  416951:	add    ch,BYTE PTR [edx]
  416953:	xor    BYTE PTR [esi-0x41],al
  416956:	inc    edx
  416957:	push   ecx
  416958:	retf   
  416959:	stos   DWORD PTR es:[edi],eax
  41695a:	fnstcw WORD PTR [ebx]
  41695c:	(bad)  
  41695d:	ds push ebx
  41695f:	cdq    
  416960:	mov    esi,0xcfcc0c94
  416965:	test   eax,0xd40ab073
  41696a:	out    0x6d,eax
  41696c:	xchg   DWORD PTR [ecx+0x68],esp
  41696f:	dec    BYTE PTR [ebx-0x3e]
  416972:	push   edx
  416973:	and    DWORD PTR [ecx-0x5c],ecx
  416976:	cmc    
  416977:	sbb    ch,BYTE PTR [ebx]
  416979:	dec    ebp
  41697a:	imul   ebp,DWORD PTR [esi],0xebfa4b68
  416980:	fisubr WORD PTR [esi-0x7474c34e]
  416986:	(bad)  
  416987:	jbe    0x41696e
  416989:	pop    eax
  41698a:	sub    ch,BYTE PTR [eax-0x78d5aa61]
  416990:	lock xlat BYTE PTR ds:[ebx]
  416992:	mov    ch,0xd1
  416994:	ds ret 0xe7f8
  416998:	(bad)  
  416999:	neg    bl
  41699b:	out    dx,eax
  41699c:	adc    BYTE PTR [eax],ch
  41699e:	test   eax,0xcbb9a7d1
  4169a3:	xchg   ecx,eax
  4169a4:	int    0x15
  4169a6:	mov    edx,0x3aac77c
  4169ab:	sub    cl,BYTE PTR [ebx+0x2]
  4169ae:	fwait
  4169af:	pop    edi
  4169b0:	iret   
  4169b1:	xchg   esi,eax
  4169b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169b3:	sub    al,0x62
  4169b5:	or     dl,dh
  4169b7:	jp     0x416947
  4169b9:	lock das 
  4169bb:	mov    esi,0x38ab22da
  4169c0:	jg     0x416a03
  4169c2:	sub    dl,dh
  4169c4:	clc    
  4169c5:	jecxz  0x4169fd
  4169c7:	sbb    esi,DWORD PTR [ecx]
  4169c9:	add    al,0x48
  4169cb:	call   0x242e3717
  4169d0:	xor    al,0x6f
  4169d2:	jl     0x41699c
  4169d4:	mov    WORD PTR [edi+0x259fb765],gs
  4169da:	sub    DWORD PTR [ebp+0x9],edi
  4169dd:	std    
  4169de:	mov    es,edi
  4169e0:	(bad)  
  4169e1:	retf   0x4c2f
  4169e4:	xor    eax,DWORD PTR [edx+0x67ad2e7e]
  4169ea:	das    
  4169eb:	inc    ecx
  4169ec:	pop    ebp
  4169ed:	dec    ebx
  4169ee:	jo     0x416a0e
  4169f0:	add    DWORD PTR [eax+0x67],0x67
  4169f4:	adc    DWORD PTR [edi+eax*2+0x5b6f6309],ebp
  4169fb:	inc    ecx
  4169fc:	shl    BYTE PTR [ebp-0x3d],0x96
  416a00:	pusha  
  416a01:	and    eax,DWORD PTR [esi-0x115101bb]
  416a07:	sub    BYTE PTR [esi+0x63d7d9a3],cl
  416a0d:	add    esp,DWORD PTR [edx]
  416a0f:	gs xchg ebp,eax
  416a11:	ret    
  416a12:	push   0xb62c5493
  416a17:	xchg   ebx,eax
  416a18:	int    0x50
  416a1a:	or     bl,al
  416a1c:	(bad)  
  416a1d:	pop    esp
  416a1e:	in     al,dx
  416a1f:	mov    esp,0xedd0d97a
  416a24:	cwde   
  416a25:	ret    0x8dd3
  416a28:	sahf   
  416a29:	push   ecx
  416a2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a2b:	std    
  416a2c:	mov    eax,DWORD PTR [eax-0x725b5faa]
  416a32:	mov    ecx,0xb7c10c9
  416a37:	aaa    
  416a38:	mov    dh,0x55
  416a3a:	xor    BYTE PTR [ebp+0x17],bh
  416a3d:	xchg   esi,eax
  416a3e:	leave  
  416a3f:	loop   0x416a39
  416a41:	pop    esp
  416a42:	fdiv   DWORD PTR [ebx-0x69]
  416a45:	or     ebx,ebx
  416a47:	mov    eax,0xf3309b23
  416a4c:	and    al,0x87
  416a4e:	mov    DWORD PTR [ebx+0x67],ebx
  416a51:	xor    BYTE PTR [ebp+0x60fdd613],al
  416a57:	adc    BYTE PTR [esi+0x9028ad7],bl
  416a5d:	add    DWORD PTR [ebx+0x19],ebx
  416a60:	pop    edx
  416a61:	push   es
  416a62:	shr    eax,1
  416a64:	into   
  416a65:	dec    edi
  416a66:	xor    BYTE PTR [ebx-0x59],0x7a
  416a6a:	jge    0x6fe264fc
  416a70:	outs   dx,BYTE PTR ds:[esi]
  416a71:	int3   
  416a72:	jp     0x416a3a
  416a74:	leave  
  416a75:	pop    es
  416a76:	ss xchg cl,bh
  416a79:	sub    ebp,eax
  416a7b:	jmp    0xedb:0xe47f33a5
  416a82:	mov    edi,0x2f3f8a5c
  416a87:	test   BYTE PTR [edx+0x1e49fa4a],al
  416a8d:	lods   eax,DWORD PTR ds:[esi]
  416a8e:	dec    esp
  416a8f:	pop    esi
  416a90:	imul   esp,DWORD PTR [eax],0xffffffdc
  416a93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a94:	mov    edi,0x1091bf37
  416a99:	and    eax,DWORD PTR [edx-0x7a1c3524]
  416a9f:	hlt    
  416aa0:	push   ebp
  416aa1:	shl    BYTE PTR ds:0xe135052,1
  416aa7:	adc    eax,0xe5239e03
  416aac:	inc    ecx
  416aad:	scas   eax,DWORD PTR es:[edi]
  416aae:	xor    al,0x21
  416ab0:	fcom   DWORD PTR [edx+eax*2+0x193ef113]
  416ab7:	mov    ecx,0x332dd64d
  416abc:	loopne 0x416b03
  416abe:	sbb    bh,BYTE PTR [edx+0xa18701c]
  416ac4:	pusha  
  416ac5:	cwde   
  416ac6:	mov    cl,0xd8
  416ac8:	dec    ebx
  416ac9:	jns    0x416a9a
  416acb:	adc    al,0x7c
  416acd:	pop    ecx
  416ace:	dec    esi
  416acf:	inc    ebp
  416ad0:	retf   
  416ad1:	mov    al,0x5a
  416ad3:	push   ecx
  416ad4:	aaa    
  416ad5:	ficom  WORD PTR [ebp-0x7e]
  416ad8:	inc    eax
  416ad9:	or     eax,0xd6e7c5d0
  416ade:	xor    edx,esi
  416ae0:	pop    eax
  416ae1:	push   es
  416ae2:	inc    ecx
  416ae3:	push   edx
  416ae4:	ins    BYTE PTR es:[edi],dx
  416ae5:	mov    ah,0x21
  416ae7:	shl    DWORD PTR [edi+edi*4+0x7c32a4de],cl
  416aee:	sbb    dl,ch
  416af0:	jbe    0x416a81
  416af2:	jnp    0x416b21
  416af4:	iret   
  416af5:	mov    bl,BYTE PTR [ebp+ecx*4-0x63]
  416af9:	leave  
  416afa:	pop    ebx
  416afb:	xor    al,0x8d
  416afd:	lods   eax,DWORD PTR ds:[esi]
  416afe:	push   esp
  416aff:	or     edi,eax
  416b01:	pop    edi
  416b02:	push   edx
  416b03:	inc    edx
  416b04:	xor    dl,BYTE PTR [esi+0x59]
  416b07:	(bad)  
  416b08:	cdq    
  416b09:	adc    ah,BYTE PTR [edx]
  416b0b:	arpl   WORD PTR [edx],dx
  416b0d:	call   0xa294:0x14eb5a1c
  416b14:	cs inc ecx
  416b16:	cmp    eax,0x16e2af9
  416b1b:	out    0x9a,eax
  416b1d:	mov    dl,0xec
  416b1f:	stos   BYTE PTR es:[edi],al
  416b20:	cli    
  416b21:	sbb    eax,0x2a693f38
  416b26:	ror    DWORD PTR [ecx],0xb0
  416b29:	cmp    BYTE PTR [esp+ebp*4],dl
  416b2c:	popf   
  416b2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b2e:	lock add eax,0xea153b1d
  416b34:	inc    ebx
  416b35:	mov    BYTE PTR [edx+0x27e1d8a4],cl
  416b3b:	ret    0x7ad8
  416b3e:	jp     0x416b1a
  416b40:	adc    edi,edi
  416b42:	jb     0x416aef
  416b44:	and    ecx,eax
  416b46:	or     ch,BYTE PTR [eax]
  416b48:	nop
  416b49:	inc    esi
  416b4a:	stc    
  416b4b:	mov    esi,0x926035bf
  416b50:	inc    ecx
  416b51:	dec    ebp
  416b52:	repz push esi
  416b54:	int3   
  416b55:	or     esp,DWORD PTR [edx+0x791f1b87]
  416b5b:	stos   BYTE PTR es:[edi],al
  416b5c:	sub    bl,BYTE PTR [edi+ebp*1+0x299c443c]
  416b63:	and    DWORD PTR [ebp+0x70],esp
  416b66:	inc    edi
  416b67:	pop    ebx
  416b68:	mov    edi,ecx
  416b6a:	loope  0x416b09
  416b6c:	ins    DWORD PTR es:[edi],dx
  416b6d:	pop    esp
  416b6e:	shr    esp,cl
  416b70:	test   BYTE PTR [ebp+edx*4+0x7026721f],bl
  416b77:	cmp    eax,0x3d7a504
  416b7c:	push   esp
  416b7d:	cmp    edx,DWORD PTR [eax-0x7a]
  416b80:	and    BYTE PTR [ebp+eax*1-0x62],0xff
  416b85:	stos   DWORD PTR es:[edi],eax
  416b86:	dec    dx
  416b88:	loop   0x416be1
  416b8a:	fiadd  WORD PTR gs:[esi]
  416b8d:	rol    DWORD PTR [ecx],1
  416b8f:	push   ss
  416b90:	ficom  DWORD PTR [ecx+0x1297ca9]
  416b96:	push   cs
  416b97:	shl    BYTE PTR [eax+0x43],0xd3
  416b9b:	loope  0x416b1d
  416b9d:	outs   dx,BYTE PTR ds:[esi]
  416b9e:	inc    edx
  416b9f:	rol    al,1
  416ba1:	pop    ebx
  416ba2:	jo     0x416b75
  416ba4:	pop    edi
  416ba5:	stos   BYTE PTR es:[edi],al
  416ba6:	or     esi,DWORD PTR [ebp-0x2c]
  416ba9:	fs dec edx
  416bab:	or     dl,BYTE PTR [edi]
  416bad:	outs   dx,BYTE PTR ds:[esi]
  416bae:	inc    ebx
  416baf:	in     al,0xac
  416bb1:	iret   
  416bb2:	(bad)  
  416bb3:	sbb    eax,0x47e08cec
  416bb8:	repnz push es
  416bba:	fmul   st,st(0)
  416bbc:	and    DWORD PTR [esi-0x5b],0xffffffe1
  416bc0:	int    0x16
  416bc2:	sub    edi,edx
  416bc4:	gs xchg esp,eax
  416bc6:	sbb    BYTE PTR [ebp+esi*2+0x15],0x9c
  416bcb:	add    ebx,DWORD PTR [ebp+0x1ed79412]
  416bd1:	mov    eax,ds:0xa50e15f7
  416bd6:	test   BYTE PTR [esi],bh
  416bd8:	mov    ah,0x1f
  416bda:	mov    bl,dh
  416bdc:	inc    ebp
  416bdd:	cmp    eax,0x5af579a8
  416be2:	push   ebp
  416be3:	mov    edx,0x83561f97
  416be8:	in     eax,0x88
  416bea:	xchg   edi,eax
  416beb:	stos   DWORD PTR es:[edi],eax
  416bec:	out    dx,eax
  416bed:	call   0xec42:0xd31897d2
  416bf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bf5:	dec    esi
  416bf6:	rol    DWORD PTR [edx+0x4d],1
  416bf9:	stos   DWORD PTR es:[edi],eax
  416bfa:	ficom  WORD PTR [edx]
  416bfc:	dec    edx
  416bfd:	cmp    DWORD PTR [esi+0x3b],0xe
  416c01:	push   esi
  416c02:	sbb    eax,0x2ad1bb34
  416c07:	sub    DWORD PTR [eax],ebx
  416c09:	(bad)  
  416c0b:	out    0xe7,al
  416c0d:	mov    eax,ds:0xb07ffff6
  416c12:	inc    esp
  416c13:	dec    BYTE PTR [ecx+ebx*2+0x5f]
  416c17:	push   cs
  416c18:	jb     0x416c06
  416c1a:	adc    eax,0x7839f45f
  416c1f:	add    DWORD PTR [ecx-0x25],esp
  416c22:	xlat   BYTE PTR ds:[ebx]
  416c23:	or     esi,DWORD PTR [edi+eax*2-0x2e]
  416c27:	jg     0x416c5f
  416c29:	std    
  416c2a:	mov    ch,0x4
  416c2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c2d:	imul   DWORD PTR [edx-0x3aa5c94a]
  416c33:	loop   0x416c75
  416c35:	(bad)  
  416c36:	leave  
  416c37:	jp     0x416c07
  416c39:	mov    al,0x6c
  416c3b:	rcr    ebp,cl
  416c3d:	(bad)  
  416c3f:	mov    al,0xed
  416c41:	outs   dx,BYTE PTR ds:[esi]
  416c42:	cmp    al,0x37
  416c44:	xchg   ecx,eax
  416c45:	div    cl
  416c47:	sbb    BYTE PTR [ebp-0x17],dh
  416c4a:	xor    DWORD PTR [edx+0x3],edi
  416c4d:	daa    
  416c4e:	call   0xd7310f01
  416c53:	or     DWORD PTR [ecx+0x51b0bd24],ebp
  416c59:	jp     0x416ca3
  416c5b:	test   esi,ebp
  416c5d:	jno    0x416c8e
  416c5f:	test   al,0x6b
  416c61:	int    0x3
  416c63:	inc    edi
  416c64:	cld    
  416c65:	push   eax
  416c66:	jnp    0x416c75
  416c68:	sub    al,0x36
  416c6a:	push   edx
  416c6b:	xor    eax,0xc5c7e54
  416c70:	inc    edx
  416c71:	sub    DWORD PTR [esi+0x16],0xffffffb9
  416c75:	int    0xa8
  416c77:	cmp    eax,0xdfa83026
  416c7c:	hlt    
  416c7d:	cs jg  0x416c48
  416c80:	mov    dl,0x21
  416c82:	xor    al,0x5e
  416c84:	pop    ebp
  416c85:	push   esi
  416c86:	les    ebx,FWORD PTR [edx-0x33a288e2]
  416c8c:	test   eax,0x4a1fff75
  416c91:	aam    0xdf
  416c93:	cdq    
  416c94:	pop    ecx
  416c95:	ret    
  416c96:	popf   
  416c97:	std    
  416c98:	mov    ecx,0x83641a91
  416c9d:	pop    ecx
  416c9e:	ficomp DWORD PTR [ecx-0x25]
  416ca1:	int    0xbe
  416ca3:	jae    0x416cba
  416ca5:	push   edi
  416ca6:	jb     0x416cc8
  416ca8:	or     esp,DWORD PTR [ebx]
  416caa:	test   al,0x53
  416cac:	xchg   BYTE PTR [eax+0x27870ba2],bl
  416cb2:	call   0xcd3d9412
  416cb7:	pop    esp
  416cb8:	mov    al,0xd6
  416cba:	jmp    0x416cbc
  416cbc:	leave  
  416cbd:	and    esi,DWORD PTR [esi-0xe]
  416cc0:	and    eax,0x996cde82
  416cc5:	push   esi
  416cc6:	inc    edi
  416cc7:	out    dx,al
  416cc8:	mov    edx,edx
  416cca:	mov    WORD PTR [ebx-0x6d774741],es
  416cd0:	sbb    BYTE PTR [edx],ah
  416cd2:	pop    ss
  416cd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cd4:	xor    BYTE PTR [ecx+ecx*2-0xedf3b88],0x7b
  416cdc:	add    DWORD PTR [esi],ecx
  416cde:	push   edi
  416cdf:	adc    DWORD PTR [ebp-0x5e],esi
  416ce2:	xchg   edx,eax
  416ce3:	stos   BYTE PTR es:[edi],al
  416ce4:	dec    ecx
  416ce5:	lock push ecx
  416ce7:	mov    cl,0x27
  416ce9:	push   ecx
  416cea:	cs sub ebx,0xffffffeb
  416cee:	dec    eax
  416cef:	or     cl,BYTE PTR [eax-0x55]
  416cf2:	add    edi,DWORD PTR [esi]
  416cf4:	ds pop esp
  416cf6:	jge    0x416d14
  416cf8:	push   ebp
  416cf9:	add    al,0x41
  416cfb:	or     cl,dh
  416cfd:	and    bl,BYTE PTR [edx]
  416cff:	xchg   esi,eax
  416d00:	jg     0x416d15
  416d02:	adc    al,0xac
  416d04:	leave  
  416d05:	pop    edi
  416d06:	cdq    
  416d07:	sbb    BYTE PTR [ebx],ah
  416d09:	mov    ds:0xc26d6f3c,eax
  416d0e:	(bad)  
  416d0f:	repz xor eax,DWORD PTR [esi+0x507f163f]
  416d16:	sahf   
  416d17:	xchg   esp,eax
  416d18:	pop    ecx
  416d19:	sub    al,0x2e
  416d1b:	add    BYTE PTR [ebp-0x28dda2ad],ah
  416d21:	test   BYTE PTR [edx+0x7a],0xc8
  416d25:	mov    WORD PTR [eax-0x39919346],es
  416d2b:	pusha  
  416d2c:	jge    0x416cee
  416d2e:	in     al,0x3c
  416d30:	mov    bh,0x52
  416d32:	ret    0x78d2
  416d35:	loopne 0x416cd3
  416d37:	in     al,0x99
  416d39:	push   esp
  416d3a:	mov    al,ds:0x26a34316
  416d3f:	lock hlt 
  416d41:	ins    BYTE PTR es:[edi],dx
  416d42:	imul   edx,DWORD PTR [ecx+esi*2],0xffffffca
  416d46:	dec    edi
  416d47:	xor    al,0x2f
  416d49:	inc    eax
  416d4a:	(bad)  
  416d4b:	(bad)  
  416d4c:	lock sub BYTE PTR es:[eax+edx*1-0x123a620a],cl
  416d55:	repnz sar DWORD PTR [edi-0x7113592a],1
  416d5c:	data16 gs repz out 0x74,al
  416d61:	sbb    eax,0x14a2a01a
  416d66:	es cwde 
  416d68:	xor    ch,BYTE PTR [ecx]
  416d6a:	pop    ds
  416d6b:	sbb    ch,BYTE PTR [edi-0x4d]
  416d6e:	cdq    
  416d6f:	leave  
  416d70:	dec    edx
  416d71:	mov    al,ds:0x8ff2ebc2
  416d76:	xchg   ebp,eax
  416d77:	outs   dx,WORD PTR ds:[esi]
  416d79:	xchg   esi,eax
  416d7a:	arpl   WORD PTR [edi-0x6b],di
  416d7d:	pushf  
  416d7e:	jmp    0x72f0:0x295000fc
  416d85:	lahf   
  416d86:	(bad)  
  416d87:	test   al,0xaf
  416d89:	leave  
  416d8a:	push   ds
  416d8b:	jnp    0x416d59
  416d8d:	out    0x5b,al
  416d8f:	lahf   
  416d90:	ret    0x27c3
  416d93:	jne    0x416d56
  416d95:	cmc    
  416d96:	or     DWORD PTR [edx],ebx
  416d98:	dec    ebx
  416d99:	in     eax,dx
  416d9a:	push   ds
  416d9b:	cmp    al,0x41
  416d9d:	shr    BYTE PTR [eax+ebp*1-0x330a7685],0x94
  416da5:	dec    esp
  416da6:	jl     0x416e06
  416da8:	pop    ss
  416da9:	fstp   QWORD PTR [edi]
  416dab:	cmp    DWORD PTR [edx+0xf],esi
  416dae:	cwde   
  416daf:	gs push esi
  416db1:	inc    esi
  416db2:	and    eax,0x7a40c9c6
  416db7:	call   0x6611a45c
  416dbc:	mov    ah,0xe
  416dbe:	xor    BYTE PTR [edx+0x49219c43],cl
  416dc4:	push   esp
  416dc5:	rcl    DWORD PTR [edx],1
  416dc7:	out    dx,eax
  416dc8:	icebp  
  416dc9:	jl     0x416e08
  416dcb:	cmp    dh,dh
  416dcd:	mov    BYTE PTR [esi+0x40f1ced3],dh
  416dd3:	xor    DWORD PTR [edi-0x57],edx
  416dd6:	in     al,0xb4
  416dd8:	(bad)  [eax]
  416dda:	repnz sub DWORD PTR [esp+ecx*4+0x2750f431],edx
  416de2:	jns    0x416de3
  416de4:	stc    
  416de5:	sub    DWORD PTR [ebx+eiz*1],ecx
  416de8:	push   ecx
  416de9:	add    dh,BYTE PTR gs:[edx]
  416dec:	adc    eax,0x74d9f3a5
  416df1:	fstp   DWORD PTR [eax+esi*4+0x40]
  416df5:	jne    0x416dc3
  416df7:	out    dx,eax
  416df8:	pop    ds
  416df9:	fs js  0x416dc0
  416dfc:	es loope 0x416e55
  416dff:	int3   
  416e00:	xchg   edi,eax
  416e01:	or     al,0xf5
  416e03:	mov    bh,0xba
  416e05:	ins    BYTE PTR es:[edi],dx
  416e06:	mov    DWORD PTR [esp+edi*4],0x8c7a4021
  416e0d:	scas   al,BYTE PTR es:[edi]
  416e0e:	mov    bh,0x41
  416e10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e11:	xchg   edi,eax
  416e12:	or     BYTE PTR [ebp+0x60ef5824],0x95
  416e19:	popa   
  416e1a:	and    bl,0xd8
  416e1d:	push   ebx
  416e1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e1f:	push   eax
  416e20:	data16 jae 0x416daa
  416e23:	xor    cl,BYTE PTR [esi]
  416e25:	fs inc edi
  416e27:	sbb    DWORD PTR [ecx+edi*4],edx
  416e2a:	leave  
  416e2b:	mov    eax,0xf9485351
  416e30:	xor    eax,0x14612f66
  416e35:	aad    0x6a
  416e37:	ds sbb cl,ch
  416e3a:	mov    esp,0x2ad1a187
  416e3f:	clc    
  416e40:	ds cmp ecx,ecx
  416e43:	adc    dl,BYTE PTR [edx+0x12]
  416e46:	mov    WORD PTR [edx-0x11],?
  416e49:	cmp    BYTE PTR [edi+0x6],cl
  416e4c:	int    0xba
  416e4e:	mov    bh,0x48
  416e50:	or     dh,BYTE PTR [ecx]
  416e52:	push   ecx
  416e53:	(bad)  
  416e54:	jle    0x416ea3
  416e56:	mov    ecx,0x8826fe95
  416e5b:	test   esi,esp
  416e5d:	ins    DWORD PTR es:[edi],dx
  416e5e:	push   edi
  416e5f:	xor    eax,0x4eaa3120
  416e64:	adc    al,0x10
  416e66:	lahf   
  416e67:	or     DWORD PTR [eax-0x4f],edi
  416e6a:	cmp    bh,0x24
  416e6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e6e:	mul    BYTE PTR [edx+0x28]
  416e71:	cld    
  416e72:	test   eax,esp
  416e74:	mov    ds:0xd27c138f,eax
  416e79:	sar    BYTE PTR [edx+eiz*8-0x667e35a8],cl
  416e80:	in     al,0xf7
  416e82:	sbb    BYTE PTR [edx],dl
  416e84:	(bad)  
  416e85:	pusha  
  416e86:	jge    0x416e4d
  416e88:	xchg   ecx,eax
  416e89:	adc    al,0xf8
  416e8b:	or     eax,0x5be2d1d5
  416e90:	sub    eax,DWORD PTR [ebx-0x5f51ced5]
  416e96:	xlat   BYTE PTR ds:[ebx]
  416e97:	neg    cl
  416e99:	pusha  
  416e9a:	jb     0x416f0d
  416e9c:	mov    esp,0xf828d6c0
  416ea1:	leave  
  416ea2:	jp     0x416ed8
  416ea4:	in     al,0x1
  416ea6:	enter  0xd5ab,0xfe
  416eaa:	(bad)  
  416eac:	dec    edi
  416ead:	push   ds
  416eae:	mov    edx,ebx
  416eb0:	mov    ah,0x33
  416eb2:	inc    edx
  416eb3:	sti    
  416eb4:	adc    eax,0x34a2e516
  416eb9:	xchg   ecx,eax
  416eba:	xor    eax,0x117c9283
  416ebf:	lock stos BYTE PTR es:[edi],al
  416ec1:	out    0x77,eax
  416ec3:	xor    DWORD PTR [edi],edx
  416ec5:	dec    edi
  416ec6:	(bad)  
  416ec7:	out    0x55,al
  416ec9:	mov    edi,0xdb0b9d6f
  416ece:	mov    BYTE PTR [ebp+0x45eb5fbf],bl
  416ed4:	add    eax,0x612e02d0
  416ed9:	mov    bl,0xfe
  416edb:	ds loop 0x416eb3
  416ede:	sbb    DWORD PTR [esi+0x75],edi
  416ee1:	and    eax,0x9e584166
  416ee6:	dec    eax
  416ee7:	push   esp
  416ee8:	dec    ecx
  416ee9:	jo     0x416e8c
  416eeb:	sbb    ch,dh
  416eed:	sub    al,0x3b
  416eef:	ins    BYTE PTR es:[edi],dx
  416ef0:	add    dh,BYTE PTR [ecx-0x619c9216]
  416ef6:	(bad)
  416ef9:	mov    al,ds:0xc3acc3c3
  416efe:	iret   
  416eff:	jmp    0x416f11
  416f01:	lahf   
  416f02:	sub    al,0xeb
  416f04:	pop    ecx
  416f05:	cdq    
  416f06:	scas   al,BYTE PTR es:[edi]
  416f07:	shr    BYTE PTR [edx],cl
  416f09:	add    eax,0x10addee
  416f0e:	inc    DWORD PTR [eax+0x0]
  416f11:	cmp    eax,0xdc795be6
  416f16:	mov    esp,0x1786ae4f
  416f1b:	pop    esp
  416f1c:	pop    eax
  416f1d:	cmp    al,0xa8
  416f1f:	imul   ebx
  416f21:	sub    eax,0x6d7fbbb8
  416f26:	jo     0x416eb2
  416f28:	mov    cl,0x8e
  416f2a:	sbb    BYTE PTR [esi-0x3bbcf171],0x9e
  416f31:	or     dl,BYTE PTR [edi-0x27e65340]
  416f37:	xchg   ecx,eax
  416f38:	inc    edi
  416f39:	lds    edx,FWORD PTR [edi]
  416f3b:	imul   ah
  416f3d:	and    edx,ecx
  416f3f:	icebp  
  416f40:	and    dl,BYTE PTR [edx+0x48570a38]
  416f46:	push   edi
  416f47:	pop    ss
  416f48:	cmc    
  416f49:	jl     0x416f38
  416f4b:	cmp    al,cl
  416f4d:	xor    eax,0xdaafec13
  416f52:	mov    dl,0x1e
  416f54:	stos   DWORD PTR es:[edi],eax
  416f55:	arpl   ax,bp
  416f57:	std    
  416f58:	fsub   st(3),st
  416f5a:	jno    0x416f67
  416f5c:	pushf  
  416f5d:	mov    edi,fs
  416f5f:	or     al,cl
  416f61:	fstp   DWORD PTR [edx-0x6dba885]
  416f67:	test   DWORD PTR [ecx-0x1116ece7],ecx
  416f6d:	xchg   DWORD PTR [ebp+ebp*8+0x6421f52e],ebp
  416f74:	or     al,0x2e
  416f76:	fimul  WORD PTR [eax-0x1a5e76fc]
  416f7c:	pop    ds
  416f7d:	adc    eax,0x9b2c6146
  416f82:	push   edx
  416f83:	or     esi,DWORD PTR [esi]
  416f85:	scas   al,BYTE PTR es:[edi]
  416f86:	jg     0x416f69
  416f88:	sub    eax,0xb726d0ff
  416f8d:	mov    DWORD PTR [ecx],esi
  416f8f:	adc    al,0xe8
  416f91:	or     eax,ebp
  416f93:	daa    
  416f94:	shr    ch,cl
  416f96:	push   ecx
  416f97:	adc    DWORD PTR [ebx+0x3c98c406],ebx
  416f9d:	pop    ebp
  416f9e:	cmc    
  416f9f:	cmp    eax,0x3a561da8
  416fa4:	rcl    BYTE PTR [eax+0x22004b8e],1
  416faa:	jmp    0x68d86461
  416faf:	mov    eax,0x67c97976
  416fb4:	pusha  
  416fb5:	out    0x3f,al
  416fb7:	retf   0x4478
  416fba:	int3   
  416fbb:	cmc    
  416fbc:	inc    esp
  416fbd:	or     DWORD PTR [edi],esp
  416fbf:	xor    eax,0x64cf53c9
  416fc4:	add    BYTE PTR [eax+0x6a],dh
  416fc7:	stos   DWORD PTR es:[edi],eax
  416fc8:	dec    ebp
  416fc9:	jb     0x416fc3
  416fcb:	xor    al,BYTE PTR [edi]
  416fcd:	xchg   esi,eax
  416fce:	push   ebp
  416fcf:	mov    dl,0x88
  416fd1:	rcl    DWORD PTR [ebp-0x732c5d],1
  416fd7:	ja     0x41702e
  416fd9:	rcr    DWORD PTR [edi+ebp*2],1
  416fdc:	add    BYTE PTR [ecx-0x5f],0x1b
  416fe0:	dec    ebp
  416fe1:	sbb    DWORD PTR [esi-0xc2bdc11],eax
  416fe7:	xor    eax,0x7143d2a7
  416fec:	sbb    eax,0xd33638c7
  416ff1:	stos   DWORD PTR es:[edi],eax
  416ff2:	inc    ebx
  416ff3:	mov    ds:0x1fe1ec84,al
  416ff8:	in     eax,0x8f
  416ffa:	ror    BYTE PTR [ebx-0x4daf0a86],0xc0
  417001:	(bad)  
  417002:	ins    BYTE PTR es:[edi],dx
  417003:	mov    ds,WORD PTR [edx]
  417005:	test   DWORD PTR [edi-0xa],esi
  417008:	mov    DWORD PTR [esi+0x55dc42b0],ecx
  41700e:	mov    ds:0xd77d2d36,al
  417013:	call   0x7e30:0xd2e054dc
  41701a:	mov    DWORD PTR [esi-0x7f34804],0x3b857e19
  417024:	add    ecx,0x1e0db53f
  41702a:	(bad)  
  41702c:	call   0x83f04c2
  417031:	nop
  417032:	loop   0x41703e
  417034:	cld    
  417035:	cld    
  417036:	jo     0x417022
  417038:	test   edi,esp
  41703a:	push   ebx
  41703b:	adc    edi,DWORD PTR [di-0x6302]
  417040:	outs   dx,DWORD PTR ds:[esi]
  417041:	jge    0x417085
  417043:	stos   DWORD PTR es:[edi],eax
  417044:	lock in eax,0x3e
  417047:	shr    DWORD PTR ss:[esp+eax*1],cl
  41704b:	fiadd  DWORD PTR fs:[edi-0x4]
  41704f:	into   
  417050:	mov    dl,0x8b
  417052:	pop    ebx
  417053:	rcl    BYTE PTR [ecx],0x8d
  417056:	les    ebx,FWORD PTR ds:0x4c2f891b
  41705c:	mov    bl,0x55
  41705e:	cdq    
  41705f:	and    ch,BYTE PTR [edi+ebp*2]
  417062:	repnz mov bh,bh
  417065:	push   ss
  417066:	sbb    esi,esp
  417068:	or     eax,0x22b1321c
  41706d:	add    DWORD PTR [esi-0x7d78af6],0x274a456e
  417077:	push   ds
  417078:	ret    
  417079:	inc    edx
  41707a:	stc    
  41707b:	arpl   WORD PTR [eax+eiz*2-0x6e],dx
  41707f:	stc    
  417080:	push   ebp
  417081:	mov    bl,0xb3
  417083:	and    esi,DWORD PTR es:0x5db02a7f
  41708a:	daa    
  41708b:	sbb    DWORD PTR [edx-0x3b3bbc21],edx
  417091:	daa    
  417092:	mov    eax,DWORD PTR [esi+ebx*8+0x4911b2d5]
  417099:	icebp  
  41709a:	dec    esi
  41709b:	add    eax,0x8fee1a1a
  4170a0:	mov    ebp,0x3065ed4c
  4170a5:	shr    DWORD PTR [esi-0x64111e83],0xf3
  4170ac:	inc    ebp
  4170ad:	push   edx
  4170ae:	jmp    0x88e2:0x38009864
  4170b5:	into   
  4170b6:	adc    eax,0x66420374
  4170bb:	mov    dl,0x4f
  4170bd:	push   0x4a
  4170bf:	xor    DWORD PTR [ecx-0x23],edi
  4170c2:	xchg   edx,eax
  4170c3:	retf   
  4170c4:	in     eax,0x28
  4170c6:	mov    BYTE PTR [eax-0x32],ch
  4170c9:	cmp    BYTE PTR [ebp+0xb],ah
  4170cc:	ja     0x41705e
  4170ce:	call   0x5ddf0180
  4170d3:	jnp    0x4170bb
  4170d5:	aam    0xe
  4170d7:	mov    esp,0x66af38f3
  4170dc:	mov    ds:0xb96f5232,al
  4170e1:	or     eax,edx
  4170e3:	and    BYTE PTR [ebp-0x5a],al
  4170e6:	cmp    DWORD PTR [eax],esi
  4170e8:	sahf   
  4170e9:	ror    ch,1
  4170eb:	jp     0x41706f
  4170ed:	dec    ebx
  4170ee:	mov    dl,0x2a
  4170f0:	int    0x8d
  4170f2:	sub    ah,BYTE PTR [ecx]
  4170f4:	shl    ecx,1
  4170f6:	ret    
  4170f7:	add    al,0x44
  4170f9:	and    eax,esi
  4170fb:	jbe    0x417109
  4170fd:	daa    
  4170fe:	dec    ecx
  4170ff:	out    0xf8,al
  417101:	xor    BYTE PTR [edx],0x56
  417104:	sub    bh,BYTE PTR [ecx-0x4a2bb517]
  41710a:	add    BYTE PTR [ebx+0x70],cl
  41710d:	mov    esp,0xc44191d3
  417112:	in     al,dx
  417113:	pop    ds
  417114:	add    ebx,esp
  417116:	adc    DWORD PTR [ebx+0x35],ebx
  417119:	fild   WORD PTR cs:[edi-0x1d4245ef]
  417120:	mov    ebp,0xcf932bfc
  417125:	lock or BYTE PTR [esi+0x29],cl
  417129:	xchg   ecx,eax
  41712a:	out    dx,eax
  41712b:	fmul   DWORD PTR [ecx+ebx*4]
  41712e:	add    eax,0xe776357a
  417133:	loope  0x417121
  417135:	ret    0x4895
  417138:	std    
  417139:	mov    ebx,ebx
  41713b:	cmp    eax,0xc07ae828
  417140:	loope  0x4171b5
  417142:	xlat   BYTE PTR ds:[ebx]
  417143:	clc    
  417144:	out    0xfa,al
  417146:	xor    DWORD PTR [ecx-0x45438daf],esi
  41714c:	mov    DWORD PTR [edi+0x1cbe93a6],esi
  417152:	cs xchg edx,eax
  417154:	in     al,dx
  417155:	(bad)  
  417156:	jecxz  0x4171b8
  417158:	xor    edi,DWORD PTR [ebx-0x135413bb]
  41715e:	xchg   ebp,eax
  41715f:	and    ah,dh
  417161:	push   edi
  417162:	cmp    DWORD PTR [ebp-0x5b],eax
  417165:	jno    0x4170f2
  417167:	jb     0x41717c
  417169:	mov    DWORD PTR [ebx+ebx*1-0x32],edi
  41716d:	pop    eax
  41716e:	(bad)  
  41716f:	cld    
  417170:	ret    
  417171:	enter  0x8903,0xfb
  417175:	mov    dh,0x95
  417177:	xor    BYTE PTR [ebp-0x1cc31ecc],dl
  41717d:	mov    dl,0xe8
  41717f:	push   0xffffffc5
  417181:	cld    
  417182:	pop    ebx
  417183:	xor    BYTE PTR [esi+0x37e837d8],bh
  417189:	iret   
  41718a:	int3   
  41718b:	shr    DWORD PTR [ebp+0x48],cl
  41718e:	mov    al,ds:0x82636f8c
  417193:	xor    esp,0x29183be7
  417199:	sub    al,0xa4
  41719b:	mov    ebp,0xbc897f
  4171a0:	hlt    
  4171a1:	(bad)  
  4171a5:	xor    BYTE PTR [ecx],0xd3
  4171a8:	sbb    WORD PTR [edi+0xc],ax
  4171ac:	mov    al,0xf5
  4171ae:	sub    eax,0xd678efe7
  4171b3:	xchg   ebx,eax
  4171b4:	sahf   
  4171b5:	sahf   
  4171b6:	fcomp  QWORD PTR [ebx]
  4171b8:	cmp    ah,BYTE PTR [edx]
  4171ba:	inc    esi
  4171bb:	adc    eax,0xc668af85
  4171c0:	pop    eax
  4171c1:	cmp    DWORD PTR [eax+0x56a34ba1],esi
  4171c7:	push   ebp
  4171c8:	pop    ss
  4171c9:	add    al,0x34
  4171cb:	stc    
  4171cc:	fs out 0x8b,eax
  4171cf:	mov    DWORD PTR [edi+ebp*2-0x38f9a3c],edi
  4171d6:	cs scas al,BYTE PTR es:[edi]
  4171d8:	xor    ebx,ebx
  4171da:	and    al,0x8a
  4171dc:	xchg   edi,eax
  4171dd:	mov    dh,0x50
  4171df:	call   0x74fe:0x35e29797
  4171e6:	hlt    
  4171e7:	dec    ebx
  4171e8:	jmp    0xfa8c:0x5b9dce1c
  4171ef:	jmp    0x417211
  4171f1:	xchg   edi,eax
  4171f2:	fnstenv [esi+ebp*8-0x12d544e4]
  4171f9:	xchg   BYTE PTR [eax],ah
  4171fb:	push   ebx
  4171fc:	push   0x871e01a2
  417201:	sub    BYTE PTR [eax-0x5279dfb4],ch
  417207:	loop   0x41719c
  417209:	(bad)  
  41720a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41720b:	aam    0x4b
  41720d:	mov    ah,dl
  41720f:	aaa    
  417210:	cmp    DWORD PTR [eax],0x79
  417213:	into   
  417214:	pop    edi
  417215:	aaa    
  417216:	pushf  
  417217:	fisttp DWORD PTR [edi]
  417219:	pop    eax
  41721a:	sbb    eax,0x648583c2
  41721f:	mov    ah,0x5e
  417221:	into   
  417222:	mov    DWORD PTR [eax+0x51cd9d09],esi
  417228:	(bad)  
  41722a:	jp     0x41729a
  41722c:	cmp    BYTE PTR [edi-0x5d],cl
  41722f:	aas    
  417230:	mov    edx,0x533db9a7
  417235:	cwde   
  417236:	stos   BYTE PTR es:[edi],al
  417237:	or     ah,ah
  417239:	nop
  41723a:	inc    esp
  41723b:	cmp    al,0xa9
  41723d:	into   
  41723e:	mov    al,ds:0x7b65ebb0
  417243:	jmp    ebp
  417245:	sub    eax,0x34a5ca9e
  41724a:	mov    eax,ebp
  41724c:	loop   0x417275
  41724e:	mov    WORD PTR [ecx+0x7df9de0a],es
  417254:	cmp    dl,BYTE PTR [edx]
  417256:	lds    edx,FWORD PTR [ebx]
  417258:	dec    edx
  417259:	iret   
  41725a:	cdq    
  41725b:	loope  0x41726d
  41725d:	sub    DWORD PTR [eax+0x1e],edx
  417260:	or     dl,bl
  417262:	lods   al,BYTE PTR ds:[esi]
  417263:	ret    0x4da8
  417266:	xchg   esi,eax
  417267:	loopne 0x41721e
  417269:	xchg   DWORD PTR cs:[eax+0x465014b8],esp
  417270:	in     al,dx
  417271:	xchg   ebx,eax
  417272:	xor    ecx,0xaccdeed8
  417278:	xchg   esi,eax
  417279:	int3   
  41727a:	je     0x417205
  41727c:	cwde   
  41727d:	jge    0x41726b
  41727f:	push   ss
  417280:	adc    edx,DWORD PTR [edx+0x46]
  417283:	mov    ecx,esp
  417285:	mov    esi,ds
  417287:	std    
  417288:	in     eax,dx
  417289:	mov    ecx,0x984cb6d
  41728e:	test   al,0xa8
  417290:	pusha  
  417291:	call   0x81e5a11d
  417296:	push   ss
  417297:	outs   dx,DWORD PTR ds:[esi]
  417298:	mov    dl,0x69
  41729a:	dec    esi
  41729b:	enter  0x3183,0xff
  41729f:	mov    al,ds:0x32e47bd2
  4172a4:	add    DWORD PTR [edi-0x42],eax
  4172a7:	mov    al,ds:0x99c86f54
  4172ac:	mov    edx,0xcd8e8377
  4172b1:	outs   dx,BYTE PTR ds:[esi]
  4172b2:	jo     0x4172d1
  4172b4:	jle    0x417265
  4172b6:	mov    cl,0x7a
  4172b8:	mov    ?,WORD PTR [ebx-0x6c56c439]
  4172be:	ja     0x41731e
  4172c0:	fdivr  DWORD PTR [eax]
  4172c2:	ins    DWORD PTR es:[edi],dx
  4172c3:	jg     0x41726d
  4172c5:	inc    edi
  4172c6:	shl    esp,1
  4172c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172c9:	mov    ah,0x2a
  4172cb:	test   dl,bh
  4172cd:	jl     0x4172f8
  4172cf:	data16 jecxz 0x4172da
  4172d2:	inc    eax
  4172d3:	in     eax,0x64
  4172d5:	inc    ebp
  4172d6:	xor    BYTE PTR [ebp+0x6f],bl
  4172d9:	pop    edi
  4172da:	xor    edx,edi
  4172dc:	adc    al,BYTE PTR [ebx+0x162ecd57]
  4172e2:	xchg   esi,eax
  4172e3:	adc    BYTE PTR [edx],ah
  4172e5:	call   0x6f462505
  4172ea:	aam    0x18
  4172ec:	aas    
  4172ed:	ret    0x8d39
  4172f0:	call   0x6bd871fa
  4172f5:	push   edi
  4172f6:	outs   dx,BYTE PTR ds:[esi]
  4172f7:	fs popf 
  4172f9:	les    edx,FWORD PTR [esi-0x3cc975ff]
  4172ff:	pop    esi
  417300:	mov    dl,0xd
  417302:	sbb    eax,0x39efcc51
  417307:	aam    0xd8
  417309:	ins    BYTE PTR es:[edi],dx
  41730a:	call   0xad4:0xba1acde5
  417311:	scas   al,BYTE PTR es:[edi]
  417312:	test   BYTE PTR [eax-0x77715b85],al
  417318:	bound  ebp,QWORD PTR [ebx+esi*2-0x3f6ba409]
  41731f:	cmp    eax,0xedc001ac
  417324:	push   esi
  417325:	mov    dh,0xde
  417327:	or     eax,0x8daeb192
  41732c:	inc    eax
  41732d:	cs js  0x41736c
  417330:	mov    dh,0x2d
  417332:	xchg   edx,eax
  417333:	and    eax,0xe6b324c4
  417338:	(bad)  
  417339:	adc    bh,BYTE PTR ds:0x17a2200
  41733f:	inc    esp
  417340:	jae    0x417395
  417342:	jge    0x417313
  417344:	test   eax,0x94be503a
  417349:	(bad)  
  41734a:	in     eax,0x3d
  41734c:	dec    esp
  41734d:	test   eax,0x640de850
  417352:	mov    dh,0xcc
  417354:	(bad)  
  417356:	fsub   DWORD PTR [edx+0x43b9abf3]
  41735c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41735d:	mov    esi,0x162413ef
  417362:	push   ecx
  417363:	pop    esp
  417364:	scas   al,BYTE PTR es:[edi]
  417365:	lods   al,BYTE PTR ds:[esi]
  417366:	(bad)  
  417367:	into   
  417368:	dec    ecx
  417369:	test   eax,0x24c565ed
  41736e:	xchg   DWORD PTR [edx+0x17f9e810],eax
  417374:	(bad)  
  417375:	push   0xfcc55d89
  41737a:	xchg   esi,eax
  41737b:	mov    al,ds:0x8dcf62b5
  417380:	adc    esp,DWORD PTR [ebx]
  417382:	je     0x4173c3
  417384:	mov    es,WORD PTR [eax+0x73265c92]
  41738a:	pop    esi
  41738b:	sbb    BYTE PTR [esi-0x782dfca],al
  417391:	lods   eax,DWORD PTR gs:[esi]
  417393:	pop    ds
  417394:	cmp    edx,esi
  417396:	js     0x41731b
  417398:	sbb    ch,BYTE PTR [edi-0x267b55fc]
  41739e:	(bad)  
  41739f:	mov    eax,ds:0x6718b0ce
  4173a4:	mov    ?,esp
  4173a6:	add    ecx,esp
  4173a8:	and    DWORD PTR [edi+0x67],ebp
  4173ab:	cmp    ch,cl
  4173ad:	fcom   DWORD PTR [ebx+0x19]
  4173b0:	add    DWORD PTR [ecx],edx
  4173b2:	mov    dh,BYTE PTR ds:0x77b220a1
  4173b8:	out    0x92,al
  4173ba:	arpl   WORD PTR [ecx-0x4a955963],di
  4173c0:	sbb    al,0x8b
  4173c2:	imul   esp,DWORD PTR [edi-0x5694d098],0xffffff8e
  4173c9:	sbb    DWORD PTR [ebp+0x14],edi
  4173cc:	ret    0x9c18
  4173cf:	sbb    ebp,DWORD PTR [edx+0xdc0079c]
  4173d5:	add    ebp,DWORD PTR [ebx+0x4]
  4173d8:	mov    bl,0x2a
  4173da:	rcl    BYTE PTR [edi],0x79
  4173dd:	lods   eax,DWORD PTR ds:[esi]
  4173de:	add    DWORD PTR [esi],edi
  4173e0:	dec    edi
  4173e1:	addr16 and dl,dl
  4173e4:	into   
  4173e5:	inc    edi
  4173e6:	inc    edx
  4173e7:	fldcw  WORD PTR [edx-0x10]
  4173ea:	pop    ebx
  4173eb:	xor    ch,BYTE PTR [edx-0x3a]
  4173ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173ef:	iret   
  4173f0:	mov    ebp,0xd5abc014
  4173f5:	cmp    eax,0x8018e7af
  4173fa:	inc    ecx
  4173fb:	repz mov dh,0x3a
  4173fe:	jecxz  0x417415
  417400:	dec    edi
  417401:	pop    ecx
  417402:	cs mov esp,0xd1714651
  417408:	cmp    edx,eax
  41740a:	xor    al,0xa1
  41740c:	pop    esp
  41740d:	pop    ebx
  41740e:	js     0x4173c1
  417410:	xor    DWORD PTR [esi-0x38b90af8],esp
  417416:	mov    cs,WORD PTR [edi+0x6450c39c]
  41741c:	(bad)  
  41741d:	mov    esp,0x531035bf
  417422:	loop   0x417442
  417424:	or     DWORD PTR [ecx-0x1f],esp
  417427:	cdq    
  417428:	jb     0x41744d
  41742a:	jbe    0x417454
  41742c:	sar    ch,0x42
  41742f:	repz (bad) 
  417432:	imul   edi,DWORD PTR [ecx+0x70eb919a],0x4d
  417439:	mov    edx,0x65e0e1a
  41743e:	mov    bl,0x57
  417440:	mov    eax,ds:0x5d271ee3
  417445:	scas   al,BYTE PTR es:[edi]
  417446:	sbb    BYTE PTR [ecx],cl
  417448:	mov    bl,0x1f
  41744a:	add    DWORD PTR [esp+esi*2-0x46],ebp
  41744e:	punpckhwd mm4,QWORD PTR [ebx-0x13]
  417452:	mov    dl,0x2e
  417454:	fsubr  DWORD PTR [ebx-0x32]
  417457:	sahf   
  417458:	call   0x85781738
  41745d:	cs out 0xdf,eax
  417460:	jmp    0x68a2:0xfac2bba6
  417467:	lea    ebp,[ebx-0x6b6d1b58]
  41746d:	sbb    bl,BYTE PTR [ebp-0x44f68e19]
  417473:	sbb    BYTE PTR [edi],dh
  417475:	or     al,0x3d
  417477:	int    0x63
  417479:	dec    esi
  41747a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41747b:	dec    ebp
  41747c:	cmp    BYTE PTR [edi],dh
  41747e:	ror    BYTE PTR [esi-0x9],cl
  417481:	es mov dh,0xf8
  417484:	test   al,0xb6
  417486:	imul   DWORD PTR [eax+0x557d0d97]
  41748c:	jle    0x41742f
  41748e:	jno    0x4174d1
  417490:	sahf   
  417491:	mov    eax,0xaeca532d
  417496:	cli    
  417497:	mov    cl,0x1c
  417499:	mov    ebx,DWORD PTR [edi+ebx*2+0x7d652b07]
  4174a0:	faddp  st(2),st
  4174a2:	sti    
  4174a3:	xchg   esi,eax
  4174a4:	sbb    cl,BYTE PTR [ecx+0x1024c3ed]
  4174aa:	scas   eax,DWORD PTR es:[edi]
  4174ab:	dec    esi
  4174ac:	push   edx
  4174ad:	pop    ss
  4174ae:	sbb    edx,ecx
  4174b0:	pop    ds
  4174b1:	inc    ecx
  4174b2:	or     esp,DWORD PTR [eax+0x60dbcb1]
  4174b8:	sub    esp,ebp
  4174ba:	inc    esi
  4174bb:	xchg   ecx,eax
  4174bc:	xor    esp,DWORD PTR [ecx-0x2e56255b]
  4174c2:	mov    ah,0x2c
  4174c4:	sbb    DWORD PTR [ebp-0x57],ebx
  4174c7:	fs xchg esi,eax
  4174c9:	sub    BYTE PTR [edx+esi*4-0x7b],dh
  4174cd:	add    eax,0xafc0e01a
  4174d2:	or     DWORD PTR [edi],ecx
  4174d4:	cwde   
  4174d5:	inc    ecx
  4174d6:	inc    edx
  4174d7:	push   ss
  4174d8:	stc    
  4174d9:	mov    dh,0xc7
  4174db:	imul   edx,ecx,0x3f3b80d8
  4174e1:	fstp   QWORD PTR [edx]
  4174e3:	dec    ebp
  4174e4:	jge    0x4174c1
  4174e6:	mov    ds:0x3d19ad50,eax
  4174eb:	es jg  0x417514
  4174ee:	xchg   ecx,eax
  4174ef:	ror    BYTE PTR [edx+0x4416544a],1
  4174f5:	push   edx
  4174f6:	pushf  
  4174f7:	mov    BYTE PTR [edx],0x72
  4174fa:	pop    ebx
  4174fb:	in     al,0xd1
  4174fd:	adc    eax,0xf5659d05
  417502:	mov    eax,0xed4766ab
  417507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417508:	inc    esi
  417509:	or     dl,BYTE PTR ds:0x527140e1
  41750f:	in     al,dx
  417510:	or     esp,DWORD PTR [ebx+ebp*2]
  417513:	push   esp
  417514:	add    ebx,DWORD PTR [eax-0x6aa1e4a1]
  41751a:	loope  0x41759b
  41751c:	inc    ebp
  41751d:	sbb    bl,BYTE PTR [eax-0x44821f77]
  417523:	sbb    DWORD PTR [eax-0xe],0x3cfdda6e
  41752a:	in     eax,dx
  41752b:	ins    BYTE PTR es:[edi],dx
  41752c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41752d:	add    eax,0x7f1bfd84
  417532:	jl     0x41755e
  417534:	das    
  417535:	repnz std 
  417537:	mov    eax,ebp
  417539:	mov    ebx,0xdf98c7f9
  41753e:	push   ebp
  41753f:	pop    ebx
  417540:	test   DWORD PTR [esp+ebx*2],0x5b223e40
  417547:	stos   BYTE PTR es:[edi],al
  417548:	ds retf 0xbdf3
  41754c:	adc    edi,DWORD PTR [esi-0x16]
  41754f:	xor    BYTE PTR [ecx],cl
  417551:	dec    edx
  417552:	repnz inc esp
  417554:	mov    dh,0x9a
  417556:	dec    esp
  417557:	mov    ds:0x5babe1cb,eax
  41755c:	aaa    
  41755d:	and    edx,DWORD PTR [edx+0x458fa479]
  417563:	xor    eax,0x7343be0f
  417568:	pop    ebx
  417569:	iret   
  41756a:	mov    dh,0x35
  41756c:	mov    ds:0xeedf907,al
  417571:	push   0xc98a940a
  417576:	lock jns 0x4174fa
  417579:	cs enter 0x81be,0xdf
  41757e:	mov    ah,0x6
  417580:	(bad)  
  417581:	jnp    0x4175f0
  417583:	cld    
  417584:	mov    ecx,0x9919eca6
  417589:	loope  0x4175df
  41758b:	pop    ebp
  41758c:	gs push esi
  41758e:	xchg   BYTE PTR [esi+0x43],dh
  417591:	xor    al,0x80
  417593:	and    bh,BYTE PTR [ecx-0x5a2985d6]
  417599:	cmp    DWORD PTR [edx+0xe],edi
  41759c:	js     0x417576
  41759e:	sbb    bl,BYTE PTR [ecx+0x4c1cf582]
  4175a4:	out    0x3b,al
  4175a6:	pop    es
  4175a7:	pop    es
  4175a8:	jp     0x41752b
  4175aa:	sub    cl,BYTE PTR [ebx+0x71]
  4175ad:	loopne 0x417615
  4175af:	enter  0xf404,0x27
  4175b3:	inc    edx
  4175b4:	ret    
  4175b5:	jl     0x417623
  4175b7:	outs   dx,BYTE PTR ds:[esi]
  4175b8:	add    eax,DWORD PTR [ebx+0x60]
  4175bb:	repnz ins BYTE PTR es:[edi],dx
  4175bd:	bound  eax,QWORD PTR [ebp+0x1c]
  4175c0:	mov    ds:0x937485ba,al
  4175c5:	std    
  4175c6:	xor    DWORD PTR [ebx+0x81b3bef],esp
  4175cc:	and    al,0x91
  4175ce:	sub    DWORD PTR [edx-0x56],eax
  4175d1:	enter  0x9bc0,0x7b
  4175d5:	dec    ecx
  4175d6:	cli    
  4175d7:	xor    ah,BYTE PTR [ebx+ecx*8-0x33]
  4175db:	and    al,0x4c
  4175dd:	sbb    al,0x19
  4175df:	mov    ebx,0x86f3b044
  4175e4:	test   DWORD PTR [esi-0x7c],0xe4e3ae79
  4175eb:	push   ebp
  4175ec:	dec    esi
  4175ed:	cdq    
  4175ee:	data16 fst DWORD PTR [edx+0x64]
  4175f2:	push   ecx
  4175f3:	aam    0x7a
  4175f5:	out    dx,eax
  4175f6:	add    dh,ch
  4175f8:	fisttp DWORD PTR [esi+0x1c]
  4175fb:	cmovge esi,esi
  4175fe:	push   ss
  4175ff:	call   0x9a71:0x70a14db9
  417606:	or     edi,esi
  417608:	push   ss
  417609:	push   ss
  41760a:	cld    
  41760b:	adc    ah,ch
  41760d:	cmp    BYTE PTR [edx+eax*1+0x3f417c4d],ch
  417614:	xchg   BYTE PTR [edi+0x6f],bl
  417617:	xor    BYTE PTR [ebx],dh
  417619:	data16 mov dh,0xbf
  41761c:	rcr    ebx,cl
  41761e:	and    edi,DWORD PTR [ebx-0x4e9a360a]
  417624:	shl    BYTE PTR ds:0xb36ae42d,0xe
  41762b:	jecxz  0x41762f
  41762d:	fadd   DWORD PTR [eax+ecx*1+0x5e]
  417631:	(bad)  
  417632:	stc    
  417633:	xchg   edi,eax
  417634:	cld    
  417635:	jecxz  0x417667
  417637:	test   eax,0xfda565eb
  41763c:	xchg   esi,eax
  41763d:	outs   dx,BYTE PTR ds:[esi]
  41763e:	outs   dx,DWORD PTR ds:[esi]
  41763f:	pop    ebp
  417640:	lock mov ds:0x8e733203,al
  417646:	daa    
  417647:	push   ds
  417648:	pop    edi
  417649:	and    esi,DWORD PTR [edi+esi*2+0x764ee756]
  417650:	mov    eax,ds:0xbebe2841
  417655:	loopne 0x4176c2
  417657:	mov    dh,0x39
  417659:	sub    DWORD PTR [eax+0x6e],ecx
  41765c:	mov    edi,0xe322c887
  417661:	adc    BYTE PTR [eax+0x7f],dh
  417664:	sub    edi,DWORD PTR [edx+0x5a]
  417667:	and    dh,dl
  417669:	ss jo  0x417697
  41766c:	jns    0x41766b
  41766e:	retf   
  41766f:	xor    dh,BYTE PTR [ebx+ebx*8]
  417672:	sub    eax,0xc15d50d1
  417677:	out    0xa9,eax
  417679:	adc    DWORD PTR [eax+0x6ca3e7e8],0xffffff9f
  417680:	imul   edi,DWORD PTR [edi+0x60],0xffffffb6
  417684:	aad    0x1
  417686:	icebp  
  417687:	in     eax,0x41
  417689:	pop    es
  41768a:	inc    ebp
  41768b:	test   al,0xd8
  41768d:	(bad)  
  41768e:	adc    eax,0x8fbcb69a
  417693:	jne    0x417693
  417695:	rcl    eax,1
  417697:	aas    
  417698:	add    DWORD PTR [edi-0x46da4596],esp
  41769e:	aam    0x3c
  4176a0:	mov    ds:0x71b71b1e,al
  4176a5:	ja     0x4176b6
  4176a7:	pop    ecx
  4176a8:	adc    BYTE PTR [ebx-0x369e11a1],bh
  4176ae:	retf   0xa176
  4176b1:	pop    ebx
  4176b2:	sbb    al,0xee
  4176b4:	ror    DWORD PTR [ecx+0xb],cl
  4176b7:	add    bh,BYTE PTR [edx+0x1380f775]
  4176bd:	ficomp DWORD PTR [ebp-0x7f]
  4176c0:	test   eax,0x2ff79c22
  4176c5:	shl    DWORD PTR [esp+ecx*2+0x4],cl
  4176c9:	loop   0x41773a
  4176cb:	mov    bh,0x88
  4176cd:	mov    eax,ds:0x78b6538e
  4176d2:	aad    0x0
  4176d4:	ss mov dl,0x4d
  4176d7:	rep stos BYTE PTR es:[edi],al
  4176d9:	call   0x5468842f
  4176de:	adc    dh,BYTE PTR [edi+0x2c]
  4176e1:	xchg   edi,eax
  4176e2:	call   0xe96fbe92
  4176e7:	test   eax,0xacc0f971
  4176ec:	clc    
  4176ed:	arpl   WORD PTR [eax-0x6b],cx
  4176f0:	inc    esp
  4176f1:	imul   esi,ebp,0x859c4e6a
  4176f7:	int    0x40
  4176f9:	test   esi,ebp
  4176fb:	neg    DWORD PTR [ecx+0x76aacfa1]
  417701:	fsub   QWORD PTR [esi]
  417703:	push   eax
  417704:	sub    eax,edi
  417706:	ja     0x4176ed
  417708:	lahf   
  417709:	iret   
  41770a:	(bad)  
  41770c:	mov    esp,0xa24b6d22
  417711:	xchg   edi,eax
  417712:	dec    esp
  417713:	jbe    0x417782
  417715:	xchg   edi,eax
  417716:	sahf   
  417717:	(bad)  
  417718:	test   al,0x43
  41771a:	jle    0x41772e
  41771c:	std    
  41771d:	stc    
  41771e:	pop    edi
  41771f:	gs xchg ebx,eax
  417721:	dec    edi
  417722:	stos   DWORD PTR es:[edi],eax
  417723:	dec    ebx
  417724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417725:	stos   BYTE PTR es:[edi],al
  417726:	xchg   esi,ebp
  417728:	(bad)  
  417729:	out    dx,eax
  41772a:	dec    esi
  41772b:	jp     0x41776c
  41772d:	and    bl,BYTE PTR [eax-0x4eb4ff76]
  417733:	cmp    ebp,DWORD PTR [edi+0x11f00cba]
  417739:	jnp    0x4176dc
  41773b:	mov    esp,0x7e5fcf1d
  417740:	mov    eax,0x26fd31b6
  417745:	push   eax
  417746:	mov    cl,0x81
  417748:	mov    WORD PTR [esp+ebp*2],fs
  41774b:	mov    dh,0xa8
  41774d:	mov    cl,0x78
  41774f:	push   ecx
  417750:	add    DWORD PTR [eax+0x66],eax
  417753:	outs   dx,DWORD PTR ds:[esi]
  417754:	test   cl,ah
  417756:	add    al,0xf2
  417758:	fsubr  QWORD PTR [esi]
  41775a:	stos   DWORD PTR es:[edi],eax
  41775b:	push   0xe83bfd84
  417760:	daa    
  417761:	call   0xaaa8:0x9ba3b3d3
  417768:	cmp    BYTE PTR [eax+0x276b2ac3],ah
  41776e:	jg     0x417710
  417770:	pop    ds
  417771:	into   
  417772:	sub    BYTE PTR [eax-0x70],dh
  417775:	jns    0x417723
  417777:	outs   dx,DWORD PTR ds:[esi]
  417778:	adc    eax,0xdde127d2
  41777d:	neg    cl
  41777f:	into   
  417780:	(bad)  
  417782:	jno    0x417747
  417784:	pop    ss
  417785:	xchg   BYTE PTR [edi-0x21],bh
  417788:	mov    eax,0x4c5c9bcb
  41778d:	adc    ebp,esp
  41778f:	lds    edi,FWORD PTR [ecx-0x9302232]
  417795:	scas   eax,DWORD PTR es:[edi]
  417796:	pop    ebp
  417797:	ins    DWORD PTR es:[edi],dx
  417798:	sbb    bh,al
  41779a:	pop    esp
  41779b:	xor    eax,0x76e21602
  4177a0:	push   ss
  4177a1:	addr16 inc esi
  4177a3:	scas   al,BYTE PTR es:[edi]
  4177a4:	adc    al,bh
  4177a6:	retf   
  4177a7:	mov    ebx,0x38e767d1
  4177ac:	mov    ebp,0x89ef608a
  4177b1:	mov    cl,0x6a
  4177b3:	test   al,0x4c
  4177b5:	mov    cl,0x12
  4177b7:	std    
  4177b8:	rcr    ch,cl
  4177ba:	jecxz  0x41779d
  4177bc:	sbb    BYTE PTR [ebp-0x34ff161e],ch
  4177c2:	inc    esi
  4177c3:	stc    
  4177c4:	xchg   WORD PTR [ebp+esi*1-0x7b17eeba],sp
  4177cc:	cdq    
  4177cd:	cmc    
  4177ce:	push   esp
  4177cf:	jp     0x4177ef
  4177d1:	(bad)  
  4177d2:	in     eax,dx
  4177d3:	and    al,0x9d
  4177d5:	dec    edi
  4177d6:	jno    0x4177f3
  4177d8:	xor    eax,0xd785ac87
  4177dd:	inc    esi
  4177de:	pusha  
  4177df:	mov    edi,0x5d6da4e6
  4177e4:	cli    
  4177e5:	(bad)  
  4177e6:	mov    ecx,0x1aabd156
  4177eb:	les    ebp,FWORD PTR [ebp-0x5dc5e518]
  4177f1:	jb     0x41783f
  4177f3:	je     0x4177ca
  4177f5:	hlt    
  4177f6:	mov    edi,esi
  4177f8:	aaa    
  4177f9:	jne    0x4177c8
  4177fb:	sbb    ebp,DWORD PTR [edi-0x70c5d9ef]
  417801:	mov    esi,0x64931685
  417806:	mov    ah,0xbc
  417808:	pop    edx
  417809:	mov    ah,0xb6
  41780b:	int    0xbe
  41780d:	jmpw   0xbb29
  417811:	je     0x41784f
  417813:	xchg   ecx,eax
  417814:	pushf  
  417815:	sbb    esp,DWORD PTR [edi-0x4ed26e98]
  41781b:	outs   dx,BYTE PTR ds:[esi]
  41781c:	jno    0x417817
  41781e:	cmc    
  41781f:	lds    ecx,FWORD PTR [edi]
  417821:	jb     0x41785f
  417823:	or     bh,BYTE PTR [esp+ecx*4+0x64]
  417827:	jb     0x41786c
  417829:	jnp    0x417822
  41782b:	enter  0x755b,0xbc
  41782f:	add    DWORD PTR [ecx-0x12],ecx
  417832:	xor    ch,ah
  417834:	push   ds
  417835:	sar    edx,cl
  417837:	and    ebx,ecx
  417839:	jl     0x417895
  41783b:	repz push sp
  41783e:	outs   dx,BYTE PTR ds:[esi]
  41783f:	sbb    ch,al
  417841:	and    DWORD PTR [edx],edi
  417843:	pop    ds
  417844:	inc    esp
  417845:	jnp    0x4178c3
  417847:	out    dx,eax
  417848:	pop    ecx
  417849:	lods   eax,DWORD PTR ds:[esi]
  41784a:	pop    es
  41784b:	inc    edx
  41784c:	test   al,0xea
  41784e:	loop   0x417845
  417850:	mov    ds:0x885a9bce,eax
  417855:	stos   BYTE PTR es:[edi],al
  417856:	mov    ah,0x30
  417858:	(bad)  
  417859:	fiadd  WORD PTR [edx]
  41785b:	cmp    ch,ch
  41785d:	cld    
  41785e:	es iret 
  417860:	loopne 0x4178dd
  417862:	lods   al,BYTE PTR ds:[esi]
  417863:	shl    ebx,1
  417865:	or     ebx,DWORD PTR [esi+ebp*8-0x1d]
  417869:	les    eax,FWORD PTR [edi+0x2ab3bea4]
  41786f:	scas   eax,DWORD PTR es:[edi]
  417870:	mov    ah,0xa3
  417872:	jp     0x4178f2
  417874:	ds xchg ebx,eax
  417876:	test   DWORD PTR [esi],edi
  417878:	or     DWORD PTR ds:0xe63a9bbc,edx
  41787e:	test   BYTE PTR [ebp+edi*2+0x7fe463d6],cl
  417885:	pop    es
  417886:	test   eax,0x20f0210e
  41788b:	je     0x41781e
  41788d:	dec    DWORD PTR [ebx+ebx*2+0x3ccf7b97]
  417894:	test   eax,0x96000ac8
  417899:	cmp    eax,0x83bfd59f
  41789e:	ret    
  41789f:	ret    
  4178a0:	clc    
  4178a1:	push   es
  4178a2:	fdivr  st(1),st
  4178a4:	shr    eax,cl
  4178a6:	push   ebx
  4178a8:	mov    ebp,DWORD PTR [ebp-0x57727fe4]
  4178ae:	sahf   
  4178af:	jmp    0x80bd:0xd1ec05e2
  4178b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178b7:	jns    0x417843
  4178b9:	add    DWORD PTR [ecx],0xd0829a49
  4178bf:	fild   WORD PTR [esi+0x6366df52]
  4178c5:	test   eax,0x8227e2e7
  4178ca:	push   cs
  4178cb:	retf   0xbecb
  4178ce:	stos   BYTE PTR es:[edi],al
  4178cf:	shl    BYTE PTR es:[eax+ebp*1],0x87
  4178d4:	(bad)  
  4178d5:	adc    BYTE PTR [eax+0x2d18bff2],ah
  4178db:	sar    DWORD PTR [ebp+0x19],0xba
  4178df:	and    al,al
  4178e1:	loop   0x417934
  4178e3:	in     al,0x1f
  4178e5:	dec    edx
  4178e6:	repnz dec eax
  4178e8:	dec    esi
  4178e9:	or     eax,0xb2a26e90
  4178ee:	test   eax,0x66e742b4
  4178f3:	push   edx
  4178f4:	cmp    al,0x52
  4178f6:	jo     0x41793e
  4178f8:	vandps ymm7,ymm4,YMMWORD PTR [esi+ecx*2]
  4178fd:	sub    BYTE PTR [edi-0x3c3ce53d],ch
  417903:	jns    0x4178ce
  417905:	hlt    
  417906:	dec    esp
  417907:	push   edx
  417908:	mov    al,0x68
  41790a:	and    ebx,DWORD PTR [ebx]
  41790c:	add    eax,0xa194e8fa
  417911:	mov    ebx,0xcf25487
  417916:	div    BYTE PTR [edi+eax*1]
  417919:	jg     0x417954
  41791b:	cmp    BYTE PTR [edi],dl
  41791d:	add    al,0xc9
  41791f:	outs   dx,BYTE PTR ds:[esi]
  417920:	sub    DWORD PTR [ebp+ebp*2+0xd],eax
  417924:	addr16 sbb dh,dl
  417927:	pop    ecx
  417928:	(bad)  
  417929:	lods   eax,DWORD PTR ds:[esi]
  41792a:	mov    ds:0x5757cb7a,al
  41792f:	int    0x3c
  417931:	lahf   
  417932:	stc    
  417933:	cdq    
  417934:	adc    eax,0xd12a712d
  417939:	fs ins BYTE PTR es:[edi],dx
  41793b:	dec    ebp
  41793c:	repnz sbb ecx,DWORD PTR [ecx-0x2b]
  417940:	mov    ds:0xf43670fe,eax
  417945:	pop    esi
  417946:	mov    BYTE PTR [ecx+0x2f],dl
  417949:	sbb    BYTE PTR [ecx+eax*4-0x5ee7c4dd],0xb6
  417951:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417952:	pusha  
  417953:	xchg   ebx,ebx
  417955:	mov    al,ds:0x8148251a
  41795a:	pop    eax
  41795b:	push   eax
  41795c:	jecxz  0x4179d6
  41795e:	sub    BYTE PTR [edx],bh
  417960:	jne    0x417957
  417962:	adc    ecx,0x40
  417965:	loopne 0x41793e
  417967:	enter  0x623e,0x9
  41796b:	stos   DWORD PTR es:[edi],eax
  41796c:	jle    0x417992
  41796e:	leave  
  41796f:	ror    BYTE PTR [eax+0x36],1
  417972:	mov    ch,0xb
  417974:	sbb    ebx,DWORD PTR [ebp-0x3fc007b6]
  41797a:	sub    ebp,DWORD PTR [ecx+ecx*2-0x4]
  41797e:	fsub   DWORD PTR [eax]
  417980:	mov    bl,ch
  417982:	add    BYTE PTR [ecx],ah
  417984:	jl     0x41797f
  417986:	sbb    al,0xcf
  417988:	inc    esp
  417989:	jno    0x41796a
  41798b:	bound  ebx,QWORD PTR [ebx]
  41798d:	sbb    BYTE PTR [esi-0x13],dl
  417990:	pop    esi
  417991:	add    eax,0x484f7777
  417996:	cli    
  417997:	mov    DWORD PTR [ecx],edi
  417999:	lods   eax,DWORD PTR ds:[esi]
  41799a:	and    ah,BYTE PTR [ebp-0x5c0d54f7]
  4179a0:	inc    esp
  4179a1:	mov    al,ds:0x6ff5080e
  4179a6:	xor    bl,ch
  4179a8:	inc    esi
  4179a9:	mov    cl,0x44
  4179ab:	aad    0x97
  4179ad:	jge    0x417a15
  4179af:	arpl   WORD PTR [ebx],bp
  4179b1:	cli    
  4179b2:	xor    dh,al
  4179b4:	sbb    ecx,esi
  4179b6:	cs sbb eax,0x1f7e7eac
  4179bc:	aam    0x99
  4179be:	jecxz  0x4179b9
  4179c0:	add    eax,0x32241d99
  4179c5:	or     DWORD PTR [eax*1+0x5d2f5add],0x45
  4179cd:	sbb    dh,BYTE PTR [eax-0x76efc376]
  4179d3:	adc    eax,0xa0c03464
  4179d8:	push   es
  4179d9:	push   ss
  4179da:	mov    eax,eax
  4179dc:	(bad)  
  4179dd:	(bad)  
  4179de:	icebp  
  4179df:	cdq    
  4179e0:	ins    BYTE PTR es:[edi],dx
  4179e1:	jmp    0x3312e04a
  4179e6:	inc    ebx
  4179e7:	stos   DWORD PTR es:[edi],eax
  4179e8:	test   al,0xfa
  4179ea:	ins    DWORD PTR es:[edi],dx
  4179eb:	mov    al,ds:0x8a82be90
  4179f0:	mov    edx,0xa5c947ba
  4179f5:	add    eax,0x5be0b95e
  4179fa:	sbb    al,0xad
  4179fd:	loop   0x417a5d
  4179ff:	loope  0x417a11
  417a01:	mov    eax,ds:0x48c8a355
  417a06:	mov    esi,0x3b93c328
  417a0b:	fst    DWORD PTR [ebx-0x4d]
  417a0e:	jae    0x417a82
  417a10:	cmp    al,BYTE PTR [esi+0x68]
  417a13:	cmp    DWORD PTR [edi],edx
  417a15:	pop    ss
  417a16:	ret    0x212f
  417a19:	or     DWORD PTR [ebx+0x1d],esi
  417a1c:	pop    ecx
  417a1d:	fwait
  417a1e:	adc    dh,BYTE PTR [esi]
  417a20:	mov    esi,0xdfa14d69
  417a25:	imul   eax,DWORD PTR [eax],0x36
  417a28:	cs inc ebp
  417a2a:	inc    esp
  417a2b:	and    eax,ebx
  417a2d:	popa   
  417a2e:	cmp    edi,DWORD PTR [ebx-0x61245e1f]
  417a34:	loope  0x417a57
  417a36:	js     0x417a3c
  417a38:	ret    0x66a6
  417a3b:	call   0xb74ccd0d
  417a40:	fwait
  417a41:	sbb    DWORD PTR [esi],0x6686f8f3
  417a47:	test   BYTE PTR [edx],bl
  417a49:	add    BYTE PTR [edx+esi*2-0x5e8a2f54],bl
  417a50:	and    BYTE PTR [ebp+esi*8-0x56bd551a],cl
  417a57:	nop
  417a58:	dec    edx
  417a59:	(bad)  
  417a5b:	clc    
  417a5c:	loopne 0x417a2b
  417a5e:	cmp    BYTE PTR [ebx+0x8],cl
  417a61:	inc    ebp
  417a62:	ins    DWORD PTR es:[edi],dx
  417a63:	fistp  WORD PTR [ebp+0x29]
  417a66:	sahf   
  417a67:	dec    eax
  417a68:	sub    dl,BYTE PTR [ecx+0x5b]
  417a6b:	xchg   ch,dl
  417a6d:	sub    eax,DWORD PTR [esi+0x53]
  417a70:	lods   al,BYTE PTR ds:[esi]
  417a71:	xor    eax,0xad3608ee
  417a76:	sar    DWORD PTR [esi+0x40],cl
  417a79:	inc    esp
  417a7a:	push   ecx
  417a7b:	popf   
  417a7c:	ss cmc 
  417a7e:	(bad)
  417a81:	cmc    
  417a82:	push   ebp
  417a83:	icebp  
  417a84:	cmp    al,0xfe
  417a86:	add    DWORD PTR [ebp-0x23],edi
  417a89:	jmp    0x7351a5e1
  417a8e:	xor    BYTE PTR [edi+0x48],ch
  417a91:	mov    ch,0x19
  417a93:	cmp    ecx,edi
  417a95:	pop    ebp
  417a96:	test   DWORD PTR es:[eax+0x1f301ca6],esi
  417a9d:	(bad)  
  417a9f:	pop    edx
  417aa0:	push   ecx
  417aa1:	repz sbb BYTE PTR [eax],0x3d
  417aa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417aa6:	mov    esp,0xf3f1cac9
  417aab:	add    BYTE PTR [ecx],al
  417aad:	leave  
  417aae:	fcomp  QWORD PTR [ebx+0x76]
  417ab1:	pop    es
  417ab2:	xor    cl,BYTE PTR [ebx+0x60cb69c8]
  417ab8:	mov    ds:0xc3befcc8,al
  417abd:	sub    al,0xda
  417abf:	xor    DWORD PTR [ecx],ebx
  417ac1:	shl    BYTE PTR [eax],1
  417ac3:	fcomp  DWORD PTR [ecx]
  417ac5:	add    bh,BYTE PTR [bx-0xdc0]
  417aca:	into   
  417acb:	(bad)  
  417acc:	iret   
  417acd:	xor    al,0x2a
  417acf:	mov    esi,0x252b35b9
  417ad4:	jl     0x417aa3
  417ad6:	or     eax,0xecc7bd55
  417adb:	mov    cl,0x2d
  417add:	(bad)  
  417ade:	loope  0x417b36
  417ae0:	jne    0x417b2e
  417ae2:	arpl   dx,cx
  417ae4:	push   0x8b51d626
  417ae9:	into   
  417aea:	xchg   esi,eax
  417aeb:	mov    gs,WORD PTR [esp+esi*8+0x23a9c387]
  417af2:	cld    
  417af3:	enter  0x1d4d,0x20
  417af7:	sub    ebp,ecx
  417af9:	or     eax,DWORD PTR [bp+si-0x6d]
  417afd:	mov    cl,0x2b
  417aff:	sub    cl,dh
  417b01:	inc    cx
  417b03:	stos   DWORD PTR es:[edi],eax
  417b04:	lahf   
  417b05:	and    al,0xeb
  417b07:	dec    eax
  417b08:	leave  
  417b09:	add    eax,0x7392df4
  417b0e:	sbb    al,0x62
  417b10:	inc    esp
  417b11:	cwde   
  417b12:	inc    esp
  417b13:	dec    esp
  417b14:	fnstenv [ebx+0x15]
  417b17:	shl    BYTE PTR [esi],1
  417b19:	sbb    al,0x2d
  417b1b:	(bad)  
  417b1c:	in     eax,0x1a
  417b1e:	int3   
  417b1f:	jns    0x417b7a
  417b21:	mov    ecx,DWORD PTR [ecx]
  417b23:	rep outs dx,DWORD PTR ds:[esi]
  417b25:	ret    
  417b26:	mov    al,0x70
  417b28:	push   0xa248871d
  417b2d:	sub    bh,BYTE PTR [ecx]
  417b2f:	aad    0xce
  417b31:	sub    DWORD PTR [ebx],edi
  417b33:	push   ebp
  417b34:	aam    0xa0
  417b36:	mov    dl,0x9
  417b38:	fcomp  QWORD PTR [edi-0x50]
  417b3b:	pop    ss
  417b3c:	add    DWORD PTR [edx+0x6991f523],esi
  417b42:	mov    bh,0xce
  417b44:	cs ret 
  417b46:	mov    cs,WORD PTR [ebx]
  417b48:	add    bh,BYTE PTR [esi+0x4bfee888]
  417b4e:	xchg   edi,eax
  417b4f:	inc    ebx
  417b50:	jge    0x417b72
  417b52:	xchg   ecx,eax
  417b53:	pop    ebp
  417b54:	fs rcr ah,1
  417b57:	mov    ch,0x70
  417b59:	std    
  417b5a:	or     al,0x7b
  417b5c:	pop    eax
  417b5d:	ins    DWORD PTR es:[edi],dx
  417b5e:	or     DWORD PTR [ecx+0x544d69f8],eax
  417b64:	pop    ecx
  417b65:	int3   
  417b66:	jmp    0x5549:0x3dff160e
  417b6d:	inc    edx
  417b6e:	push   ebx
  417b6f:	test   esi,0x13402b31
  417b75:	push   esi
  417b76:	lds    ebx,FWORD PTR [edi-0x54822312]
  417b7c:	push   ss
  417b7d:	gs inc ebp
  417b7f:	fsubr  QWORD PTR [esi-0x6a]
  417b82:	add    eax,0xb0d43a31
  417b87:	repz (bad) 
  417b89:	sti    
  417b8a:	push   ebp
  417b8b:	retf   0x9f80
  417b8e:	and    ebx,DWORD PTR [ecx]
  417b90:	aaa    
  417b91:	ins    DWORD PTR es:[edi],dx
  417b92:	aam    0x8e
  417b94:	mov    al,0xd
  417b96:	addr16 dec esi
  417b98:	sbb    DWORD PTR [edi],esi
  417b9a:	mov    ecx,0xcbdd6964
  417b9f:	js     0x417b8d
  417ba1:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ba3:	mov    eax,ds:0x20e18dfe
  417ba8:	out    0xa6,eax
  417baa:	xor    bh,dh
  417bac:	mov    al,ds:0x9a859082
  417bb1:	out    dx,eax
  417bb2:	ret    
  417bb3:	cli    
  417bb4:	add    esp,edx
  417bb6:	cmp    DWORD PTR [esi-0x6a],esp
  417bb9:	jmp    0x25:0x7f0cdc9e
  417bc0:	mov    al,0xbb
  417bc2:	scas   eax,DWORD PTR es:[edi]
  417bc3:	xchg   edi,eax
  417bc4:	mov    ebp,0x5a89867
  417bc9:	call   0x9e9cab5
  417bce:	int    0x80
  417bd0:	dec    ebp
  417bd1:	mov    ch,0x3a
  417bd3:	and    DWORD PTR [eax+0x2be6c4d6],eax
  417bd9:	and    ch,ch
  417bdb:	dec    edx
  417bdc:	jae    0x417b7a
  417bde:	call   0x7f4bec7f
  417be3:	test   bh,0x65
  417be6:	jae    0x417c67
  417be8:	in     eax,0xc9
  417bea:	aam    0xa4
  417bec:	fst    QWORD PTR [ebx]
  417bee:	cmp    eax,0x4c9a584b
  417bf3:	pop    es
  417bf4:	jbe    0x417bce
  417bf6:	ss mov al,bl
  417bf9:	retf   0xe021
  417bfc:	sbb    al,BYTE PTR ss:[edx-0x43]
  417c00:	xlat   BYTE PTR ds:[ebx]
  417c01:	inc    esi
  417c02:	add    DWORD PTR [ebx-0xa],ebp
  417c05:	jg     0x417bf0
  417c07:	pop    ecx
  417c08:	mov    ecx,0x475e88b8
  417c0d:	xor    ecx,DWORD PTR [edi]
  417c0f:	rol    DWORD PTR [esi+0x286b274a],cl
  417c15:	loop   0x417bbe
  417c17:	mov    edx,0x96a1742d
  417c1c:	mov    edx,0xe0d38383
  417c21:	pop    es
  417c22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c23:	dec    eax
  417c24:	cdq    
  417c25:	xor    al,0xf4
  417c27:	outs   dx,DWORD PTR ds:[esi]
  417c28:	fmul   DWORD PTR [edx]
  417c2a:	adc    al,0xa0
  417c2c:	and    dl,BYTE PTR [ebx+0x4e]
  417c2f:	mov    bh,0x13
  417c31:	adc    ebp,DWORD PTR [ebp+0x1b]
  417c34:	sbb    eax,0x1b972b4f
  417c39:	cmp    edi,DWORD PTR [ecx+ecx*2+0x1d]
  417c3d:	lea    ebx,[edi+0xc]
  417c40:	jg     0x417c9d
  417c42:	shl    BYTE PTR [edx],1
  417c44:	sar    BYTE PTR [edx+0x4],cl
  417c47:	dec    ebp
  417c48:	fwait
  417c49:	xor    al,0xda
  417c4b:	ror    dh,1
  417c4d:	pop    eax
  417c4e:	ss pop edi
  417c50:	aam    0x94
  417c52:	rcl    BYTE PTR [ebp-0x33],0x5d
  417c56:	je     0x417c43
  417c58:	jg     0x417c23
  417c5a:	fs aad 0x79
  417c5d:	(bad)  
  417c5e:	jecxz  0x417c25
  417c60:	inc    eax
  417c61:	call   0x8a67:0x3196b57
  417c68:	mov    bh,0x85
  417c6a:	out    dx,eax
  417c6b:	enter  0xe41a,0x60
  417c6f:	mov    eax,DWORD PTR [edi-0x61]
  417c72:	lods   eax,DWORD PTR ds:[esi]
  417c73:	mov    dl,0x40
  417c75:	dec    ebx
  417c76:	clc    
  417c77:	mov    DWORD PTR ds:0x91891770,esp
  417c7d:	inc    esi
  417c7e:	inc    esp
  417c7f:	xchg   ebp,eax
  417c80:	inc    ecx
  417c81:	mov    dh,0xdd
  417c83:	daa    
  417c84:	xchg   edi,eax
  417c85:	mov    edi,0xe86ae51d
  417c8a:	dec    edx
  417c8b:	xchg   BYTE PTR [edx-0x38772d4a],cl
  417c91:	sahf   
  417c92:	test   eax,0xda29236a
  417c97:	push   0x6709a51f
  417c9c:	lods   eax,DWORD PTR ds:[esi]
  417c9d:	xlat   BYTE PTR ds:[ebx]
  417c9f:	int    0x7f
  417ca1:	scas   eax,DWORD PTR es:[edi]
  417ca2:	daa    
  417ca3:	sub    esp,edi
  417ca5:	call   0xfb61:0x56956387
  417cac:	repnz push es
  417cae:	dec    edi
  417caf:	mov    ds:0x867036fd,al
  417cb4:	xchg   ebp,eax
  417cb5:	mov    DWORD PTR [edx-0x5595fa0d],esi
  417cbb:	rol    eax,0x15
  417cbe:	mov    fs:0xbe54584a,al
  417cc4:	les    eax,FWORD PTR [esi]
  417cc6:	sub    edi,DWORD PTR [esi-0x54f409c4]
  417ccc:	sti    
  417ccd:	repnz imul esp,DWORD PTR [eax-0x6fc35d07],0xffffff81
  417cd5:	push   esi
  417cd6:	(bad)  
  417cd7:	and    ah,BYTE PTR [esi-0x2ddccd32]
  417cdd:	pop    es
  417cde:	adc    al,ch
  417ce0:	in     eax,dx
  417ce1:	jge    0x417d56
  417ce3:	popf   
  417ce4:	jmp    0xa60fce5f
  417ce9:	cvtps2pi mm0,QWORD PTR [edx+eiz*8]
  417ced:	pop    ecx
  417cee:	in     eax,0xa3
  417cf0:	loope  0x417c97
  417cf2:	das    
  417cf3:	cmp    al,0xba
  417cf5:	xor    bl,BYTE PTR [edi-0x24]
  417cf8:	add    ebx,eax
  417cfa:	sti    
  417cfb:	xor    al,dl
  417cfd:	push   eax
  417cfe:	jae    0x417c86
  417d00:	jle    0x417d4a
  417d02:	scas   eax,DWORD PTR es:[edi]
  417d03:	xchg   edx,eax
  417d04:	and    DWORD PTR [ebp+0x4e],0x7b
  417d08:	hlt    
  417d09:	pushf  
  417d0a:	outs   dx,DWORD PTR ds:[esi]
  417d0b:	jne    0x417cd6
  417d0d:	jp     0x417cc1
  417d0f:	ret    0xdb30
  417d12:	and    al,BYTE PTR [ebx+eax*8]
  417d15:	repz fimul WORD PTR [edx-0x3b670345]
  417d1c:	fstp   QWORD PTR [edx]
  417d1e:	int    0x96
  417d20:	aaa    
  417d21:	sbb    eax,DWORD PTR ds:0x3959775c
  417d27:	shl    eax,1
  417d29:	mov    DWORD PTR [esi-0x77],esp
  417d2c:	add    eax,DWORD PTR [ebx-0x2a]
  417d2f:	mov    esp,0x532e51ac
  417d34:	inc    ebp
  417d35:	stc    
  417d36:	or     BYTE PTR [ebp+0x5d],dh
  417d39:	mov    dh,0xf9
  417d3b:	ins    DWORD PTR es:[edi],dx
  417d3c:	call   0xe731de7d
  417d41:	int3   
  417d42:	and    ah,BYTE PTR [esi-0x67d60d54]
  417d48:	test   DWORD PTR [ecx+eiz*2],ebx
  417d4b:	cmp    al,0x45
  417d4d:	adc    eax,0xabaad819
  417d52:	call   0x5650:0x7b31d5a4
  417d59:	jp     0x417d7c
  417d5b:	test   eax,0x5556bc06
  417d60:	lods   eax,DWORD PTR ds:[esi]
  417d61:	retf   
  417d62:	or     BYTE PTR [ecx+0x1f],bh
  417d65:	repz jno 0x417d1b
  417d68:	mov    ecx,0xa5cbe63b
  417d6d:	dec    ebp
  417d6e:	xchg   DWORD PTR [edi],ecx
  417d70:	mov    esp,fs
  417d72:	stc    
  417d73:	cmp    eax,0x8196aa9c
  417d78:	stc    
  417d79:	hlt    
  417d7a:	gs pop es
  417d7c:	push   ebx
  417d7d:	xchg   BYTE PTR [edi-0x78],dl
  417d80:	mov    bh,0xd4
  417d82:	cmp    edx,ecx
  417d84:	outs   dx,DWORD PTR ds:[esi]
  417d85:	les    esp,FWORD PTR [ebx-0x34]
  417d88:	inc    ebp
  417d89:	jns    0x417d15
  417d8b:	test   al,0xc9
  417d8d:	mov    bl,0x40
  417d8f:	adc    edi,ebx
  417d91:	stos   BYTE PTR es:[edi],al
  417d92:	frstor [edi]
  417d94:	sbb    eax,0x3cd4be0f
  417d99:	xor    BYTE PTR [edx-0x1c],bl
  417d9c:	jmp    0xa4f1:0x5cdca0bc
  417da3:	jl     0x417d7b
  417da5:	icebp  
  417da6:	loop   0x417d80
  417da8:	sar    BYTE PTR [eax+0x249e1c5a],1
  417dae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417daf:	push   ebp
  417db0:	xor    al,0xd4
  417db2:	sbb    eax,DWORD PTR [ecx]
  417db4:	adc    ebp,DWORD PTR [eax+0x6348bd5]
  417dba:	mov    ch,0x20
  417dbc:	lea    ecx,[ebp-0x5b68cae4]
  417dc2:	push   0x68
  417dc4:	add    cl,ah
  417dc6:	xor    BYTE PTR [ecx+0x2b9a6f5c],cl
  417dcc:	aad    0x50
  417dce:	xchg   DWORD PTR [edx-0x3d],ebp
  417dd1:	les    ebp,FWORD PTR [ecx]
  417dd3:	pop    ecx
  417dd4:	iret   
  417dd5:	and    eax,esi
  417dd7:	inc    edi
  417dd8:	dec    ebx
  417dd9:	mov    cs,WORD PTR [edi+0x67]
  417ddc:	mov    ds:0xff9182e4,al
  417de1:	cmc    
  417de2:	sbb    DWORD PTR [ebx+0x28b4a87c],ebp
  417de8:	and    ax,ax
  417deb:	mov    bh,0xe2
  417ded:	mov    ch,BYTE PTR [edi-0x39]
  417df0:	addr16 xchg ebp,eax
  417df2:	sahf   
  417df3:	les    ebp,FWORD PTR [eax-0x4f]
  417df6:	dec    esp
  417df7:	inc    ebp
  417df8:	push   ebp
  417df9:	pop    ebx
  417dfa:	adc    esp,0xffffffd2
  417dfd:	div    dh
  417dff:	mov    bl,0xe
  417e01:	mov    al,0x48
  417e03:	pop    ebp
  417e04:	adc    al,0x32
  417e06:	ficomp DWORD PTR [edx+0x4999288a]
  417e0c:	inc    ebx
  417e0d:	xor    esi,esi
  417e0f:	sbb    ecx,edx
  417e11:	jb     0x417e36
  417e13:	inc    eax
  417e14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e15:	jo     0x417e7d
  417e17:	mov    bh,0xe4
  417e19:	dec    esi
  417e1a:	les    ebx,FWORD PTR [ebp+0x4d]
  417e1d:	or     DWORD PTR [eax+0x3bd272fe],0xfffffffe
  417e24:	sahf   
  417e25:	enter  0x5c95,0xeb
  417e29:	xchg   ebx,eax
  417e2a:	out    0xb4,eax
  417e2c:	dec    esp
  417e2d:	cmp    eax,0xbc57b08d
  417e32:	mov    esp,0x174d03c6
  417e37:	mov    eax,ds:0xeb6705ee
  417e3c:	ror    DWORD PTR [ebx+0x1f3a3867],1
  417e42:	adc    al,0x4d
  417e44:	xchg   esi,eax
  417e45:	mov    ds:0xd8cf4e5,eax
  417e4a:	push   edi
  417e4b:	xchg   edx,eax
  417e4c:	xchg   BYTE PTR [eax],dh
  417e4e:	mov    ch,0x46
  417e50:	adc    eax,0xa84c5507
  417e55:	pop    DWORD PTR [esi+edx*2-0x38]
  417e59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e5a:	sahf   
  417e5b:	jnp    0x417e8c
  417e5d:	mov    eax,0xa98f1c45
  417e62:	fsubr  DWORD PTR [edx+ecx*2-0x53d6e413]
  417e69:	inc    ebx
  417e6a:	ins    BYTE PTR es:[edi],dx
  417e6b:	aas    
  417e6c:	fld    st(6)
  417e6e:	jbe    0x417df7
  417e70:	imul   ebx,DWORD PTR [edx+0x5e],0xf1d85ed5
  417e77:	push   ebx
  417e78:	mov    cl,0x4b
  417e7a:	dec    esi
  417e7b:	loop   0x417ed4
  417e7d:	mov    WORD PTR [ebp-0x46],ds
  417e80:	sahf   
  417e81:	push   es
  417e82:	(bad)  
  417e84:	out    dx,eax
  417e85:	mov    bl,0x23
  417e87:	push   ds
  417e88:	xor    DWORD PTR [eax-0x4e],esi
  417e8b:	into   
  417e8c:	fdivr  DWORD PTR ds:0x73485e22
  417e92:	inc    edi
  417e93:	mov    cl,0x4
  417e95:	cmp    ah,ch
  417e97:	sbb    bl,BYTE PTR [ecx-0x5775e271]
  417e9d:	leave  
  417e9e:	inc    ebx
  417e9f:	jecxz  0x417e4f
  417ea1:	ret    
  417ea2:	push   es
  417ea3:	xchg   esi,eax
  417ea4:	push   esp
  417ea5:	sti    
  417ea6:	pop    ebx
  417ea7:	dec    ebp
  417ea8:	sub    eax,0x18009ad6
  417ead:	out    dx,eax
  417eae:	mov    eax,ds:0x129d63db
  417eb3:	inc    eax
  417eb4:	iret   
  417eb5:	mov    ch,0x13
  417eb7:	ins    BYTE PTR es:[edi],dx
  417eb8:	pop    ss
  417eb9:	inc    edx
  417eba:	shr    DWORD PTR [ebx-0x5],1
  417ebd:	aas    
  417ebe:	jbe    0x417eac
  417ec0:	scas   al,BYTE PTR es:[edi]
  417ec1:	push   0x808f509a
  417ec6:	mov    esp,0x4203d88b
  417ecb:	jp     0x417ead
  417ecd:	stc    
  417ece:	adc    al,0xdf
  417ed0:	and    eax,0xb5ee757b
  417ed5:	adc    eax,0x2d980665
  417eda:	adc    BYTE PTR [ebx-0x5714c84a],bh
  417ee0:	hlt    
  417ee1:	sbb    dh,BYTE PTR [ecx+ebp*8-0x55c7e1eb]
  417ee8:	iret   
  417ee9:	aas    
  417eea:	rcr    DWORD PTR [eax+0x2d],1
  417eed:	out    dx,eax
  417eee:	test   al,0xb3
  417ef0:	cmp    al,0x96
  417ef3:	(bad)  [edx+0x79]
  417ef6:	addr16 (bad) 
  417ef8:	sahf   
  417ef9:	dec    edi
  417efa:	sub    bl,cl
  417efc:	outs   dx,DWORD PTR ds:[esi]
  417efd:	pushf  
  417efe:	inc    edi
  417eff:	sbb    ch,BYTE PTR [eax-0x6f877549]
  417f05:	push   edx
  417f06:	aaa    
  417f07:	inc    ebp
  417f08:	sub    DWORD PTR [ebp+edi*8-0x4ea6395a],0xa42c57f5
  417f13:	mov    ?,WORD PTR [ecx]
  417f15:	add    DWORD PTR [esi-0x65],ecx
  417f18:	ds push cs
  417f1a:	add    eax,0x9b5d3e97
  417f1f:	loopne 0x417eb8
  417f21:	mov    al,ds:0x827978c7
  417f26:	sub    ch,BYTE PTR [ebx+0x2b1458e1]
  417f2c:	push   edx
  417f2d:	scas   eax,DWORD PTR es:[edi]
  417f2e:	adc    dh,BYTE PTR [edx+0x3ad53abf]
  417f34:	mov    al,0x65
  417f36:	jmp    0x22070b3
  417f3b:	inc    eax
  417f3c:	or     BYTE PTR [edi],0xf0
  417f3f:	xchg   edx,eax
  417f40:	or     BYTE PTR [ecx+0x26114170],bh
  417f46:	mov    bl,BYTE PTR [ebx+0x6baa2d87]
  417f4c:	inc    edx
  417f4d:	sbb    al,0x17
  417f4f:	in     al,0xfc
  417f51:	push   DWORD PTR [edi+ecx*8+0xdea9da7]
  417f58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f59:	adc    dl,BYTE PTR ds:0xf51e4de0
  417f5f:	xlat   BYTE PTR ds:[ebx]
  417f60:	push   edi
  417f61:	mov    ah,0x3d
  417f63:	jmp    0x3905325a
  417f68:	sbb    bh,dl
  417f6a:	mov    bh,0xec
  417f6c:	mov    edi,0xa06b8d12
  417f71:	adc    eax,0xf588f896
  417f76:	pop    ds
  417f77:	xchg   edi,eax
  417f78:	cmp    DWORD PTR [esp+eax*1],0xa614179f
  417f7f:	push   cs
  417f80:	lods   eax,DWORD PTR ds:[esi]
  417f81:	jo     0x417fae
  417f83:	sbb    al,0x61
  417f85:	repnz imul edi,DWORD PTR [edx],0xbf0e2a31
  417f8c:	cmp    DWORD PTR [edi-0x19],esi
  417f8f:	mov    esi,0xed2f9df9
  417f94:	outs   dx,BYTE PTR ds:[esi]
  417f95:	in     eax,dx
  417f96:	sbb    dl,dl
  417f98:	mov    bl,0x6c
  417f9a:	in     al,0xed
  417f9c:	xchg   esi,eax
  417f9d:	call   0xd9166981
  417fa2:	push   ds
  417fa3:	out    dx,eax
  417fa4:	addr16 cs (bad) 
  417fa7:	mov    bh,0xb6
  417fa9:	mov    ecx,0xb1ce9733
  417fae:	repz idiv BYTE PTR [eax+0x52]
  417fb2:	imul   DWORD PTR [ecx-0x7db4a357]
  417fb8:	stos   BYTE PTR es:[edi],al
  417fb9:	cmp    ebp,ebp
  417fbb:	dec    edx
  417fbc:	mov    eax,0x3362dca6
  417fc1:	pop    edi
  417fc2:	outs   dx,DWORD PTR ds:[esi]
  417fc3:	ins    DWORD PTR es:[edi],dx
  417fc4:	enter  0x2a6e,0xdc
  417fc8:	xor    BYTE PTR ds:0xbed73ab,0x2b
  417fcf:	(bad)  
  417fd0:	cmp    eax,0x55321209
  417fd5:	xor    eax,0x438c9
  417fda:	pop    ds
  417fdb:	jne    0x418038
  417fdd:	xchg   esi,eax
  417fde:	loope  0x417fee
  417fe0:	and    BYTE PTR [ebx],cl
  417fe2:	fsub   QWORD PTR [edi]
  417fe4:	ins    DWORD PTR es:[edi],dx
  417fe5:	not    esp
  417fe7:	setg   BYTE PTR [ebx-0x7d]
  417feb:	xchg   edi,eax
  417fec:	adc    al,0xf5
  417fee:	inc    esi
  417fef:	pushf  
  417ff0:	jo     0x417fa0
  417ff2:	sti    
  417ff3:	add    eax,0x959cfe29
  417ff8:	xor    eax,0xfbbd0e56
  417ffd:	adc    BYTE PTR [eax+0x78660485],dl
  418003:	jmp    0x417fdd
  418005:	imul   edx,DWORD PTR [edx],0xfffffff7
  418008:	fdiv   DWORD PTR [edi]
  41800a:	mov    esp,0x709f1ea
  41800f:	rol    esi,cl
  418011:	mov    edx,0xe92c5265
  418016:	out    0xd0,eax
  418018:	ror    BYTE PTR [edi+0x2878e864],0x6e
  41801f:	mov    al,ds:0xa7d08bab
  418024:	xlat   BYTE PTR ds:[ebx]
  418025:	inc    edi
  418026:	das    
  418027:	mov    bl,0xf9
  418029:	push   edi
  41802a:	push   edx
  41802b:	sub    BYTE PTR [eax],dl
  41802d:	lods   eax,DWORD PTR ds:[esi]
  41802e:	aam    0x32
  418030:	les    ecx,FWORD PTR [edx]
  418032:	dec    eax
  418033:	dec    ebp
  418034:	fimul  WORD PTR [ebx+eiz*1]
  418037:	(bad)  [ebp+0x7d981fd6]
  41803d:	mul    ebx
  41803f:	arpl   bp,sp
  418041:	mov    eax,ds:0xe7865c4f
  418046:	jg     0x4180aa
  418048:	or     al,dl
  41804a:	xlat   BYTE PTR ds:[ebx]
  41804b:	xchg   DWORD PTR [edx],esp
  41804d:	fidivr DWORD PTR [edx+0x489ab1f3]
  418053:	or     DWORD PTR [ebx],eax
  418055:	lahf   
  418056:	fcomp  DWORD PTR [ebx-0x61]
  418059:	mov    esp,0x6a7bd1bd
  41805e:	inc    esp
  41805f:	or     DWORD PTR [edi+0x11],ebp
  418062:	or     BYTE PTR [ecx],bl
  418064:	leave  
  418065:	shr    BYTE PTR [ebx+0x39],cl
  418068:	arpl   WORD PTR [ecx],si
  41806a:	mov    ebp,0xce48aa70
  41806f:	sbb    al,0x21
  418071:	xchg   ecx,eax
  418072:	adc    dl,BYTE PTR [ebx]
  418074:	ja     0x418006
  418076:	jl     0x4180c3
  418078:	in     al,0x30
  41807a:	js     0x41809f
  41807c:	cmp    bl,dl
  41807e:	sbb    dh,ch
  418080:	add    bh,BYTE PTR [ebx-0x63]
  418083:	jmp    0x4180ae
  418085:	dec    esp
  418086:	add    ch,ah
  418088:	retf   
  418089:	call   0xa2c52abc
  41808e:	in     al,dx
  41808f:	outs   dx,DWORD PTR ds:[esi]
  418090:	loopne 0x4180fe
  418092:	arpl   WORD PTR [edx-0x4c],sp
  418095:	pop    es
  418096:	mov    bh,0xb2
  418098:	lahf   
  418099:	in     eax,dx
  41809a:	(bad)  
  41809b:	lods   eax,DWORD PTR ds:[esi]
  41809c:	cmp    ebx,DWORD PTR [ebp+0xf639e97]
  4180a2:	fild   QWORD PTR [ecx]
  4180a4:	dec    ebp
  4180a5:	mov    esi,0xad7b22f
  4180aa:	xlat   BYTE PTR fs:[ebx]
  4180ac:	jle    0x4180e0
  4180ae:	jnp    0x4180df
  4180b0:	in     eax,0x48
  4180b2:	mov    edi,0xb8b89115
  4180b7:	ins    DWORD PTR es:[edi],dx
  4180b8:	repnz mov ebx,0x903ce101
  4180be:	sbb    DWORD PTR [esi-0x241a962],0xa1589b85
  4180c8:	jnp    0x4180a3
  4180ca:	mov    dh,0xec
  4180cc:	add    BYTE PTR [esi],bh
  4180ce:	xchg   ebp,eax
  4180cf:	nop
  4180d0:	xchg   ebp,eax
  4180d1:	popa   
  4180d2:	jnp    0x418127
  4180d4:	mov    bl,0xd0
  4180d6:	call   0x2911:0xe26820cf
  4180dd:	dec    ebx
  4180de:	sbb    ebp,esi
  4180e0:	push   edi
  4180e1:	into   
  4180e2:	xchg   ebx,eax
  4180e3:	daa    
  4180e4:	dec    eax
  4180e5:	mov    ecx,DWORD PTR [eax-0x1]
  4180e8:	daa    
  4180e9:	mov    eax,ds:0xa6256eb6
  4180ee:	imul   esp,DWORD PTR [edi-0x66],0xffffff86
  4180f2:	cdq    
  4180f3:	push   ebp
  4180f4:	cld    
  4180f5:	dec    eax
  4180f6:	inc    edx
  4180f7:	(bad)  
  4180f8:	imul   eax,ebx,0xffffffec
  4180fb:	adc    eax,0x1e399365
  418100:	pop    eax
  418101:	push   0x3c8ce6ae
  418106:	push   ds
  418107:	xor    ebx,ebx
  418109:	add    BYTE PTR [edx+0x526970b2],ch
  41810f:	mov    bl,0xd3
  418111:	lea    esi,[edi-0x21]
  418114:	fsubr  DWORD PTR [esp+eax*8]
  418117:	aad    0x43
  418119:	xor    ebx,DWORD PTR [ecx+0x29]
  41811c:	int    0xf7
  41811e:	push   edi
  41811f:	dec    ebx
  418120:	lods   al,BYTE PTR ds:[esi]
  418121:	(bad)  
  418122:	sbb    BYTE PTR [esi-0x6604f5a6],bl
  418128:	mov    ecx,0xa9d02fcf
  41812d:	(bad)  
  41812e:	pcmpeqb mm1,QWORD PTR [ebp+0x77f9d26e]
  418135:	arpl   sp,cx
  418137:	or     DWORD PTR [ebp-0x48],esp
  41813a:	mov    ch,0xdd
  41813c:	dec    eax
  41813d:	cmp    BYTE PTR [eax-0x4c],0x4e
  418141:	add    ecx,DWORD PTR [edx+0x31c4f619]
  418147:	mov    ebx,?
  418149:	adc    ch,BYTE PTR [ecx+0x62]
  41814c:	xchg   ecx,eax
  41814d:	(bad)  
  41814e:	mov    gs,ebp
  418150:	(bad)  
  418153:	xchg   esp,eax
  418154:	jmp    0x6151:0xb1eac626
  41815b:	fsubr  QWORD PTR [edx+ebx*8+0x29d2e8c8]
  418162:	and    al,0xf5
  418164:	pop    esp
  418165:	dec    esi
  418166:	out    0x68,eax
  418168:	push   cs
  418169:	pop    esi
  41816a:	inc    edi
  41816b:	sub    dl,bh
  41816d:	ja     0x41815c
  41816f:	test   eax,0x6044d4d0
  418174:	inc    ebx
  418175:	and    al,BYTE PTR [eax-0x38d9a335]
  41817b:	adc    al,0x3a
  41817e:	and    eax,0xcd539d1b
  418183:	sub    al,0x8e
  418185:	or     DWORD PTR [edx-0x6f3fa79e],ebp
  41818b:	call   0x77c:0x4e733bed
  418192:	(bad)  
  418193:	(bad)  [edi-0x14]
  418196:	mov    WORD PTR [ecx-0x2c],ss
  418199:	mov    ecx,0x12a76f4d
  41819e:	sub    bh,BYTE PTR [esi+ebp*8+0x43]
  4181a2:	bound  esp,QWORD PTR [edi+0x29]
  4181a5:	inc    ebp
  4181a6:	mov    bl,0x75
  4181a8:	icebp  
  4181a9:	pushf  
  4181aa:	call   0xa7ff:0x88e1baf0
  4181b1:	fimul  DWORD PTR cs:[ecx-0x27d3967f]
  4181b8:	je     0x418220
  4181ba:	adc    al,dl
  4181bc:	fdivr  st,st(4)
  4181be:	fsubr  st(2),st
  4181c0:	ret    
  4181c1:	lods   al,BYTE PTR ds:[esi]
  4181c2:	aaa    
  4181c3:	adc    esp,edi
  4181c5:	jg     0x418155
  4181c7:	mov    esi,0xa678f926
  4181cc:	popf   
  4181cd:	cmp    DWORD PTR [ecx],eax
  4181cf:	ror    DWORD PTR [ecx+0x12],0x75
  4181d3:	ds adc eax,0x95606d5f
  4181d9:	test   DWORD PTR [eax-0x14],edx
  4181dc:	and    al,0x27
  4181de:	int3   
  4181df:	or     eax,0x9855e460
  4181e4:	gs dec ebx
  4181e6:	xchg   ebx,eax
  4181e7:	mov    edx,0xa2368995
  4181ec:	push   ebp
  4181ed:	or     ebp,DWORD PTR [eax]
  4181ef:	sbb    eax,0xfc6370ab
  4181f4:	mov    dl,0x64
  4181f6:	test   al,0xce
  4181f8:	jns    0x418226
  4181fa:	cmp    ebp,DWORD PTR [edx-0x2b0d3101]
  418200:	inc    eax
  418201:	inc    edx
  418202:	mov    dh,0xc2
  418204:	xchg   edi,edx
  418206:	xor    bh,BYTE PTR ds:0x9019e9ba
  41820c:	aas    
  41820d:	jo     0x4181b1
  41820f:	mov    edi,0x798e9048
  418214:	mov    ebp,0x48d02a5d
  418219:	xor    eax,DWORD PTR [ebx]
  41821b:	fs mov ebx,0x6e34f27e
  418221:	mov    ebp,0xe8aa8dad
  418226:	sbb    DWORD PTR [ecx+0x7f1a2d0b],eax
  41822c:	add    eax,0xb26ace33
  418231:	js     0x4181b4
  418233:	adc    eax,DWORD PTR cs:[edi+0x3a9bf0d9]
  41823a:	shr    ebx,cl
  41823c:	bound  eax,QWORD PTR [eax]
  41823e:	(bad)  
  41823f:	mov    esi,0xfc0dc119
  418244:	sbb    al,0x76
  418246:	dec    eax
  418247:	imul   esp,DWORD PTR [edi+0x6de7172d],0xffffffa6
  41824e:	add    BYTE PTR [edx-0x18],ah
  418251:	mov    esi,DWORD PTR [esi]
  418253:	pop    eax
  418254:	lahf   
  418255:	cld    
  418256:	xchg   BYTE PTR [esi-0x6b],dh
  418259:	imul   DWORD PTR [eax-0x11]
  41825c:	xchg   esp,eax
  41825d:	retf   0x9a8a
  418260:	rcl    DWORD PTR [edx+ebp*1+0xa],0xf0
  418265:	in     al,0x1d
  418267:	pop    ebp
  418268:	test   eax,0xa04f43d
  41826d:	sub    dh,ah
  41826f:	stos   BYTE PTR es:[edi],al
  418270:	push   ecx
  418271:	in     al,dx
  418272:	xchg   DWORD PTR [edi+0x53519848],ecx
  418278:	scas   al,BYTE PTR es:[edi]
  418279:	jp     0x4182b2
  41827b:	iret   
  41827c:	xor    cl,cl
  41827e:	inc    edx
  41827f:	mov    BYTE PTR [ebx+0x68c8401b],ch
  418285:	inc    BYTE PTR [edx]
  418287:	imul   esp,DWORD PTR [edx-0x6f],0x74ab1f7e
  41828e:	xchg   edx,eax
  41828f:	sbb    al,0x12
  418291:	jp     0x4182aa
  418293:	lds    ebp,FWORD PTR [eax+eax*2+0x61]
  418297:	js     0x41822b
  418299:	shl    ebp,cl
  41829b:	in     eax,0x7b
  41829d:	js     0x4182eb
  41829f:	mov    bl,0x1c
  4182a1:	add    DWORD PTR [edx-0x51],edi
  4182a4:	fbld   TBYTE PTR [ecx+ebp*4]
  4182a7:	sahf   
  4182a8:	call   0x1767d63a
  4182ad:	(bad)  
  4182ae:	cli    
  4182af:	bound  edi,QWORD PTR cs:[esi]
  4182b2:	pop    ecx
  4182b3:	ins    DWORD PTR es:[edi],dx
  4182b4:	lahf   
  4182b5:	out    0x71,eax
  4182b7:	shl    edx,1
  4182b9:	jns    0x4182b2
  4182bb:	add    al,0xc1
  4182bd:	push   esp
  4182be:	out    dx,al
  4182bf:	ret    
  4182c0:	mov    ecx,0xa5296477
  4182c5:	in     al,dx
  4182c6:	enter  0x8dbd,0x42
  4182ca:	adc    eax,0xe3fc0b85
  4182cf:	jno    0x4182c7
  4182d1:	into   
  4182d2:	and    al,0x20
  4182d5:	cdq    
  4182d6:	cli    
  4182d7:	cmp    al,0x4a
  4182d9:	loop   0x41832e
  4182db:	pop    ss
  4182dc:	jnp    0x418347
  4182de:	ficom  WORD PTR [edi+ecx*4]
  4182e1:	clc    
  4182e2:	lods   al,BYTE PTR ds:[esi]
  4182e3:	sub    al,0xe7
  4182e5:	jp     0x4182b0
  4182e7:	sbb    al,0x54
  4182e9:	popf   
  4182ea:	sbb    eax,0x518b10fc
  4182ef:	pop    edx
  4182f0:	fcomp  st(3)
  4182f2:	retw   0x368f
  4182f6:	push   esp
  4182f7:	out    dx,eax
  4182f8:	adc    al,0xfb
  4182fa:	les    ecx,FWORD PTR [esi-0x244c4642]
  418300:	mov    BYTE PTR [edx+0x1e27548f],cl
  418306:	or     eax,0xa822bf9b
  41830b:	xor    BYTE PTR [edi+0x46],dl
  41830e:	xchg   edi,eax
  41830f:	pop    esi
  418310:	test   BYTE PTR ds:0xc8cc5598,0xcf
  418317:	sbb    eax,0x90582ebb
  41831c:	aaa    
  41831d:	xor    DWORD PTR ds:0x6ef06f11,0x17bc1f96
  418327:	adc    eax,0x72075571
  41832c:	mov    dl,0x55
  41832e:	shr    BYTE PTR [edi+0x24],1
  418331:	pop    esp
  418332:	in     al,0x61
  418334:	cmp    cl,BYTE PTR [ebp-0x21]
  418337:	inc    esi
  418338:	ret    
  418339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41833a:	mov    ds,WORD PTR [ebp-0xe6c0bb8]
  418340:	mov    bh,0x30
  418342:	sbb    DWORD PTR [eax+0x7d9ddd08],edx
  418348:	jle    0x4182d2
  41834a:	cmp    bl,BYTE PTR [edi]
  41834c:	mov    esp,0xe58433
  418351:	add    BYTE PTR [esi-0x64],cl
  418354:	mov    eax,ds:0xe6ef32ca
  418359:	and    eax,0x19b3b5c2
  41835e:	scas   eax,DWORD PTR es:[edi]
  41835f:	sti    
  418360:	mov    BYTE PTR [edi-0x1dd38ec6],al
  418366:	cmp    al,0x6a
  418368:	cmovno ecx,DWORD PTR [eax]
  41836b:	sahf   
  41836c:	dec    edx
  41836d:	sbb    cl,BYTE PTR [eax+0x1a]
  418370:	adc    eax,0x49567807
  418375:	stos   BYTE PTR es:[edi],al
  418376:	mov    ss,ebp
  418378:	jo     0x4183aa
  41837a:	push   edi
  41837b:	mov    ebp,0xf14b4757
  418380:	rcr    BYTE PTR [edx],cl
  418382:	cmp    bl,bl
  418384:	in     eax,dx
  418385:	adc    ch,BYTE PTR [esi+0x715f9f55]
  41838b:	sub    dh,cl
  41838d:	cs sbb al,0x9f
  418390:	ficomp DWORD PTR [edi-0x4e1e66db]
  418396:	loop   0x4183da
  418398:	out    dx,eax
  418399:	shr    BYTE PTR [ebx],1
  41839b:	dec    edx
  41839c:	mov    ds:0x2ffa116,al
  4183a1:	loope  0x41840f
  4183a3:	mov    ebp,0xc9fdd41a
  4183a8:	call   0x6574:0x6bf8ec5d
  4183af:	packuswb mm2,QWORD PTR [edi-0x20]
  4183b3:	xor    esp,eax
  4183b5:	lods   eax,DWORD PTR ds:[esi]
  4183b6:	pop    ss
  4183b7:	sbb    DWORD PTR [ebp-0x7c7b4c55],0x18
  4183be:	mov    eax,ds:0xb51d7ba4
  4183c3:	popf   
  4183c4:	out    0xe2,eax
  4183c6:	jecxz  0x418353
  4183c8:	dec    esp
  4183c9:	sbb    DWORD PTR [ebp-0x2eb7b457],eax
  4183cf:	out    0x58,eax
  4183d1:	pop    ss
  4183d2:	and    BYTE PTR [esi],0x6a
  4183d5:	xchg   edx,eax
  4183d6:	jg     0x4183f1
  4183d8:	xchg   DWORD PTR [ecx-0x7df14f3d],ebp
  4183de:	mov    ebx,0xf5cefdc2
  4183e3:	out    dx,eax
  4183e4:	push   edx
  4183e5:	fidivr WORD PTR [edi-0x175f1fb7]
  4183eb:	mov    eax,0x1eabed14
  4183f0:	cmp    ch,BYTE PTR [bx+0x1d9c]
  4183f5:	pop    eax
  4183f6:	dec    esi
  4183f7:	jg     0x4183d6
  4183f9:	xor    ebx,DWORD PTR [eax+eiz*8-0x52]
  4183fd:	xchg   esp,eax
  4183fe:	jge    0x41843f
  418400:	call   0xb9d7be9d
  418405:	sbb    DWORD PTR [ebp+0x7e],ecx
  418408:	popa   
  418409:	jo     0x4183ed
  41840b:	repz pop edx
  41840d:	pop    eax
  41840e:	mov    ch,0xd0
  418410:	ret    0xc4f9
  418413:	jnp    0x418467
  418415:	add    edx,DWORD PTR [ebx+0x39]
  418418:	or     eax,0x56bf95ad
  41841d:	jg     0x418455
  41841f:	test   BYTE PTR [edi+0x75],bh
  418422:	out    0x41,eax
  418424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418425:	adc    DWORD PTR [eax+0x5e7a545],ebp
  41842b:	mov    bh,0xe1
  41842d:	loop   0x4183b4
  41842f:	mov    dh,0x0
  418431:	retf   0x524d
  418434:	(bad)  
  418435:	sub    ch,BYTE PTR [esi+0x6fb1e032]
  41843b:	push   esi
  41843c:	(bad)
  418440:	sbb    BYTE PTR [edx+ebp*8-0x4d],bh
  418444:	sbb    cl,dh
  418446:	enter  0xc73f,0x13
  41844a:	adc    cl,dh
  41844c:	xlat   BYTE PTR ds:[ebx]
  41844d:	popa   
  41844e:	test   BYTE PTR [edi],ch
  418450:	jl     0x418409
  418452:	xor    bl,ch
  418454:	clc    
  418455:	fmul   QWORD PTR [eax+0x5a40dd6b]
  41845b:	ins    DWORD PTR es:[edi],dx
  41845c:	xchg   edx,eax
  41845d:	pusha  
  41845e:	leave  
  41845f:	mov    ecx,DWORD PTR [ebp+0x1c98584b]
  418465:	xchg   ecx,eax
  418466:	hlt    
  418467:	jae    0x418445
  418469:	rcl    DWORD PTR [ecx+0x7d],0x36
  41846d:	loope  0x4184e7
  41846f:	pop    esi
  418470:	adc    ebp,edx
  418472:	cmc    
  418473:	sub    al,0xb3
  418475:	popf   
  418476:	cmp    al,0xed
  418478:	cmp    DWORD PTR [ebp+0x13],ebx
  41847b:	clc    
  41847c:	push   ecx
  41847d:	cld    
  41847e:	push   ebp
  41847f:	sbb    ebx,DWORD PTR [edi]
  418481:	call   0xa55f0ac3
  418486:	clc    
  418487:	cmp    esp,eax
  418489:	in     al,dx
  41848a:	scas   al,BYTE PTR es:[edi]
  41848b:	jae    0x418499
  41848d:	or     ah,ah
  41848f:	mov    eax,0xc7613a35
  418494:	mov    dh,0x82
  418496:	jnp    0x41849d
  418498:	cmp    ch,BYTE PTR [edx]
  41849a:	addr16 xchg esp,eax
  41849c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41849d:	pop    edx
  41849e:	mov    ecx,esp
  4184a0:	test   al,0x27
  4184a2:	mov    esi,ebp
  4184a4:	mov    WORD PTR [esi+0x48],?
  4184a7:	test   eax,0xce30f1eb
  4184ac:	ins    DWORD PTR es:[edi],dx
  4184ad:	popa   
  4184ae:	into   
  4184af:	jae    0x4184ad
  4184b1:	sbb    eax,0x99fc319e
  4184b6:	push   esp
  4184b7:	aaa    
  4184b8:	dec    ebx
  4184b9:	callw  0x6f53
  4184bd:	clc    
  4184be:	in     eax,0x79
  4184c0:	and    eax,0xa2485921
  4184c5:	sbb    DWORD PTR [edi+ebp*8],0x31101772
  4184cc:	jmp    0xd24d950a
  4184d1:	mov    edi,0xc3da76b7
  4184d6:	(bad)  
  4184d7:	jmp    0xe2a5:0xf687b3d4
  4184de:	sbb    esp,edx
  4184e0:	adc    edi,DWORD PTR [ebp+eiz*8-0x6d]
  4184e4:	fadd   DWORD PTR [edi]
  4184e6:	into   
  4184e7:	mov    ds:0x57c925d3,eax
  4184ec:	jmp    0xa2a19515
  4184f1:	es in  al,0xf3
  4184f4:	sub    eax,0x2929b6da
  4184f9:	xchg   DWORD PTR [esi+0x74],edi
  4184fc:	in     al,dx
  4184fd:	xor    BYTE PTR [esi-0x80],dl
  418500:	outs   dx,BYTE PTR ds:[esi]
  418501:	xchg   edi,eax
  418502:	or     cl,BYTE PTR [edi+0x9ca16b8]
  418508:	xchg   BYTE PTR [ecx+eax*4+0x3d4c02e4],bl
  41850f:	xchg   edi,ebp
  418511:	jae    0x4184e7
  418513:	mov    BYTE PTR [ecx],ah
  418515:	popa   
  418516:	sub    al,0x84
  418518:	fnstcw WORD PTR [edi+0x2e92811]
  41851e:	cmp    al,BYTE PTR [eax+0x62]
  418521:	add    eax,0x3727e446
  418526:	adc    DWORD PTR [ebp+0x321b0076],edi
  41852c:	or     al,0x6c
  41852e:	fstp   TBYTE PTR [edx+0x5991f540]
  418534:	out    dx,al
  418535:	sbb    ah,BYTE PTR [ebp-0x241f6881]
  41853b:	mov    ds:0xab3e1446,al
  418540:	jae    0x41859c
  418542:	jg     0x41857e
  418544:	ins    DWORD PTR es:[edi],dx
  418545:	inc    DWORD PTR [ebx]
  418547:	jno    0x4185c5
  418549:	cmc    
  41854a:	aas    
  41854b:	push   ebp
  41854c:	lds    edi,FWORD PTR [ecx]
  41854e:	xchg   ecx,eax
  41854f:	outs   dx,BYTE PTR ds:[esi]
  418550:	add    BYTE PTR [eax-0x1b],bh
  418553:	sub    cl,BYTE PTR [edi]
  418555:	push   ebp
  418556:	and    al,0x8f
  418558:	out    dx,al
  418559:	inc    esp
  41855a:	inc    ebp
  41855b:	mov    ebx,ebx
  41855d:	mov    eax,cs:0x1bd607d2
  418563:	sub    ebp,DWORD PTR [ecx]
  418565:	mov    eax,ds:0xd249963b
  41856a:	cdq    
  41856b:	clc    
  41856c:	scas   eax,DWORD PTR es:[edi]
  41856d:	cmc    
  41856e:	outs   dx,BYTE PTR ds:[esi]
  41856f:	das    
  418570:	xor    eax,0x881b6e8f
  418575:	arpl   WORD PTR [ecx],cx
  418577:	jbe    0x418544
  418579:	jae    0x41850e
  41857b:	test   DWORD PTR [edx-0x4b],0xa7e713b5
  418582:	cmp    DWORD PTR [ebp+0x3234bd8b],esp
  418588:	ret    0x1237
  41858b:	adc    al,0xf5
  41858d:	mov    ecx,0x98e21999
  418592:	sbb    ch,BYTE PTR [ebx+0x49]
  418595:	das    
  418596:	xchg   BYTE PTR ds:0x1ee3610a,al
  41859c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41859d:	push   eax
  41859e:	xchg   ebp,eax
  41859f:	ins    DWORD PTR es:[edi],dx
  4185a0:	sbb    eax,0x524503a4
  4185a5:	(bad)  
  4185a6:	into   
  4185a7:	pop    ebp
  4185a8:	mov    bh,0xf1
  4185aa:	aam    0x72
  4185ac:	mov    ds:0x448f41,al
  4185b1:	(bad)  
  4185b2:	sbb    DWORD PTR [esi-0x32],eax
  4185b5:	ss mov cl,0x52
  4185b8:	scas   al,BYTE PTR es:[edi]
  4185b9:	pop    es
  4185ba:	inc    edi
  4185bb:	adc    BYTE PTR [ebx-0x22],cl
  4185be:	aaa    
  4185bf:	ins    BYTE PTR es:[edi],dx
  4185c0:	adc    ch,ch
  4185c2:	xor    eax,0xdbb0e693
  4185c7:	imul   edx,eax,0x6e
  4185ca:	push   0x7e
  4185cc:	mov    al,BYTE PTR [eax+0x45]
  4185cf:	xchg   DWORD PTR [edx+0x5e7d9250],eax
  4185d5:	fld    DWORD PTR [edx]
  4185d7:	pop    ecx
  4185d8:	jns    0x418624
  4185da:	lods   al,BYTE PTR ds:[esi]
  4185db:	inc    ecx
  4185dc:	cdq    
  4185dd:	fsubr  DWORD PTR [eax-0x6b]
  4185e0:	lahf   
  4185e1:	add    eax,0xe50225f1
  4185e6:	sub    BYTE PTR [esi+0x1963d440],bh
  4185ec:	(bad)  [ecx]
  4185ee:	je     0x418636
  4185f0:	xor    bh,bh
  4185f2:	jb     0x4185bb
  4185f4:	sub    eax,0xc6f0fb0c
  4185f9:	in     eax,dx
  4185fa:	xchg   ebx,eax
  4185fb:	sbb    BYTE PTR [ebx+0x5efbf2f4],al
  418601:	aaa    
  418602:	sbb    DWORD PTR [esi],edi
  418604:	push   esp
  418605:	popa   
  418606:	cmp    esi,DWORD PTR [ebp+eax*8+0xd]
  41860a:	shl    DWORD PTR [esp+ecx*8],1
  41860d:	inc    esp
  41860e:	cs jl  0x418626
  418611:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418612:	mov    bl,0xda
  418614:	(bad)  
  418615:	cmp    edi,DWORD PTR [esi+0x7f]
  418618:	in     al,dx
  418619:	std    
  41861a:	test   BYTE PTR [edi-0x786c7fca],dh
  418620:	ins    DWORD PTR es:[edi],dx
  418621:	(bad)  
  418622:	data16 test al,0x18
  418625:	out    dx,eax
  418626:	pop    ds
  418627:	imul   ecx,DWORD PTR fs:[ebx],0x332b55d4
  41862e:	data16 xabort 0x37
  418632:	push   esp
  418633:	lea    esp,[edi+0x68]
  418636:	or     eax,0xc51a359d
  41863b:	hlt    
  41863c:	jb     0x4185fb
  41863e:	inc    esi
  41863f:	jno    0x418672
  418641:	js     0x41861f
  418643:	mov    dl,0x64
  418645:	or     DWORD PTR [edi-0xcbfaf17],ebp
  41864b:	push   ds
  41864c:	cmp    esp,DWORD PTR [esi-0x6d]
  41864f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418650:	jae    0x4186c8
  418652:	adc    BYTE PTR [edx+edx*4+0x50],ah
  418656:	sub    BYTE PTR [ebx],bh
  418658:	clc    
  418659:	xor    esp,DWORD PTR [eax+0x4f581314]
  41865f:	xchg   ebp,eax
  418660:	aad    0x24
  418662:	ret    
  418663:	mov    edx,edx
  418665:	in     al,dx
  418666:	xor    ch,bh
  418668:	push   edx
  418669:	or     ch,BYTE PTR [esi-0x6a62d87]
  41866f:	pop    es
  418670:	and    al,0xd7
  418672:	push   ds
  418673:	cmp    DWORD PTR [esi],edx
  418675:	or     ebp,DWORD PTR [edi+edx*1]
  418678:	pop    ds
  418679:	xchg   BYTE PTR [eax],al
  41867b:	inc    edi
  41867c:	jl     0x418665
  41867e:	lea    ecx,[ebp+0x5e]
  418681:	or     edi,DWORD PTR [esi+0x5313ff2b]
  418687:	dec    edx
  418688:	not    BYTE PTR [edi-0xe]
  41868b:	ja     0x4186f3
  41868d:	cmc    
  41868e:	addr16 jae 0x4186f2
  418691:	daa    
  418692:	adc    bx,WORD PTR [ebp+0x5d4bf4dd]
  418699:	push   0x6a5c6af0
  41869e:	fs loopne 0x418641
  4186a1:	xchg   edx,eax
  4186a2:	cmp    DWORD PTR ds:[ebx],ecx
  4186a5:	dec    edx
  4186a6:	adc    DWORD PTR [eax],ecx
  4186a8:	invd   
  4186aa:	fmul   st,st(5)
  4186ac:	xor    dl,BYTE PTR [esi-0x7c]
  4186af:	jne    0x41868e
  4186b1:	scas   al,BYTE PTR es:[edi]
  4186b2:	mov    bh,0xb6
  4186b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186b5:	or     eax,0xd8df706a
  4186ba:	jg     0x41866e
  4186bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186bd:	inc    esi
  4186be:	neg    BYTE PTR [edx]
  4186c0:	pop    ds
  4186c1:	jb     0x418689
  4186c3:	adc    al,0xe4
  4186c5:	push   ebp
  4186c6:	sub    al,0xc8
  4186c8:	fld    DWORD PTR [esi-0x1146437b]
  4186ce:	or     al,0x17
  4186d0:	xor    bh,bh
  4186d2:	retf   
  4186d3:	(bad)  
  4186d4:	xchg   ecx,eax
  4186d5:	fwait
  4186d6:	push   cs
  4186d7:	and    BYTE PTR [ebx+0x78],cl
  4186da:	jno    0x4186d8
  4186dc:	mov    ah,0x71
  4186de:	int3   
  4186df:	sahf   
  4186e0:	sbb    al,0x5c
  4186e2:	in     eax,dx
  4186e3:	dec    ecx
  4186e4:	lods   eax,DWORD PTR ds:[esi]
  4186e5:	(bad)  
  4186e6:	out    dx,al
  4186e7:	mov    ds:0x72171d22,al
  4186ec:	mov    BYTE PTR [ecx+eiz*4],al
  4186ef:	(bad)  
  4186f1:	sbb    bh,BYTE PTR [esi-0x39e84fbd]
  4186f7:	xor    al,0x6e
  4186f9:	mov    ebp,0xe99f5f18
  4186fe:	adc    al,0x91
  418700:	out    dx,al
  418701:	add    BYTE PTR [ebp+0x1d0e4aa2],bl
  418707:	sub    BYTE PTR [ebx],dh
  418709:	ror    BYTE PTR [ebp+0x72e01a94],1
  41870f:	xor    al,BYTE PTR [eax]
  418711:	mov    DWORD PTR [ebp-0xc],edx
  418714:	mov    edx,DWORD PTR [ebp-0x10]
  418717:	xor    edx,eax
  418719:	add    edx,esi
  41871b:	jne    0x40f646
  418721:	jmp    0x41abbe
  418726:	mov    ecx,DWORD PTR [ebp-0x14]
  418729:	mov    DWORD PTR [ebp+0x8],ecx
  41872c:	jmp    0x4187a5
  418731:	mov    ecx,DWORD PTR [ebp+0x8]
  418734:	mov    edx,DWORD PTR [ebp-0x8]
  418737:	xor    ecx,eax
  418739:	xor    edx,eax
  41873b:	sub    ecx,edx
  41873d:	sub    ecx,esi
  41873f:	xor    ecx,eax
  418741:	mov    DWORD PTR [ebp+0x8],ecx
  418744:	mov    ecx,DWORD PTR [ebp+0x8]
  418747:	mov    edx,DWORD PTR [ebp-0x58]
  41874a:	add    ecx,0x5708f8
  418750:	imul   ecx,edx
  418753:	mov    DWORD PTR [ebp-0x58],ecx
  418756:	mov    ecx,DWORD PTR [ebp+0x8]
  418759:	mov    edx,DWORD PTR [ebp-0x54]
  41875c:	add    ecx,0x64f8da
  418762:	or     ecx,edx
  418764:	mov    DWORD PTR [ebp-0x54],ecx
  418767:	mov    ecx,DWORD PTR [ebp+0x8]
  41876a:	mov    edx,DWORD PTR [ebp-0x50]
  41876d:	add    ecx,0x242ebed
  418773:	xor    ecx,edx
  418775:	mov    DWORD PTR [ebp-0x50],ecx
  418778:	mov    ecx,DWORD PTR [ebp+0x8]
  41877b:	mov    edx,DWORD PTR [ebp-0x4c]
  41877e:	add    ecx,edi
  418780:	and    ecx,edx
  418782:	mov    DWORD PTR [ebp-0x4c],ecx
  418785:	mov    ecx,DWORD PTR [ebp+0x8]
  418788:	mov    edx,DWORD PTR [ebp-0x48]
  41878b:	lea    ecx,[edx+ecx*1+0x241fc1f]
  418792:	mov    DWORD PTR [ebp-0x48],ecx
  418795:	mov    ecx,DWORD PTR [ebp+0x8]
  418798:	mov    edx,0xfa5e15e2
  41879d:	sub    edx,ecx
  41879f:	add    edx,DWORD PTR [ebp-0x44]
  4187a2:	mov    DWORD PTR [ebp-0x44],edx
  4187a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4187a8:	xor    ecx,eax
  4187aa:	add    ecx,esi
  4187ac:	jne    0x418731
  4187b2:	jmp    0x41abca
  4187b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4187ba:	mov    edx,DWORD PTR [ebp-0x8]
  4187bd:	xor    ecx,eax
  4187bf:	xor    edx,eax
  4187c1:	sub    ecx,edx
  4187c3:	sub    ecx,esi
  4187c5:	xor    ecx,eax
  4187c7:	mov    DWORD PTR [ebp+0x8],ecx
  4187ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4187cd:	mov    edx,DWORD PTR [ebp-0x58]
  4187d0:	jmp    0x41ab56
  4187d5:	sub    eax,0x97a551eb
  4187da:	fwait
  4187db:	lods   eax,DWORD PTR ds:[esi]
  4187dc:	fistp  DWORD PTR [edx]
  4187de:	pop    ecx
  4187df:	imul   DWORD PTR [ecx]
  4187e1:	mov    dh,0x2b
  4187e3:	imul   esi,DWORD PTR [esi-0x15],0x17a7934
  4187ea:	pop    edi
  4187eb:	jp     0x418867
  4187ed:	mov    esi,0x3d39dd95
  4187f2:	mov    dl,al
  4187f4:	pop    ebp
  4187f5:	adc    ah,BYTE PTR [ecx+0xf]
  4187f8:	push   ss
  4187f9:	or     esp,0xb9bacdfa
  4187ff:	(bad)  
  418800:	mov    ds:0x9ee9a17,eax
  418805:	pop    ecx
  418806:	test   BYTE PTR [esi-0x5a],cl
  418809:	int    0xe4
  41880b:	stos   DWORD PTR es:[edi],eax
  41880c:	dec    ecx
  41880d:	push   ds
  41880e:	dec    esi
  41880f:	pushf  
  418810:	cmp    DWORD PTR [ebx-0x7d29ed2f],esi
  418816:	rsqrtps xmm6,XMMWORD PTR [ecx+edx*2-0x1b2e2fb7]
  41881e:	jge    0x41885e
  418820:	imul   ebp,DWORD PTR [esi+0x29],0x3e
  418824:	cmp    bh,BYTE PTR [edi+eax*1]
  418827:	arpl   WORD PTR cs:[ebp+0x6f],ax
  41882b:	sbb    ah,bh
  41882d:	fld    QWORD PTR [eax-0x584decf7]
  418833:	fbstp  TBYTE PTR [esp+eiz*8]
  418836:	pop    edx
  418837:	fild   QWORD PTR ds:0xfc1b94c6
  41883e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41883f:	inc    edi
  418840:	clc    
  418841:	std    
  418842:	scas   eax,DWORD PTR es:[edi]
  418843:	push   0xffffffac
  418845:	adc    bl,BYTE PTR [eax]
  418847:	inc    ebx
  418848:	sbb    DWORD PTR [edx-0x41],eax
  41884b:	jo     0x4187fe
  41884d:	repz pop ecx
  41884f:	popa   
  418850:	sbb    esi,DWORD PTR [eax-0x75fcf7f4]
  418856:	pusha  
  418857:	inc    edi
  418858:	je     0x4188b5
  41885a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41885b:	push   es
  41885c:	test   DWORD PTR [edi],edi
  41885e:	or     edx,edi
  418860:	jmp    0x41883f
  418862:	inc    ebx
  418863:	mov    cl,0xe3
  418865:	pop    ss
  418866:	call   0x3c8c:0x519af0fd
  41886d:	aaa    
  41886e:	and    eax,DWORD PTR [ecx-0x3]
  418871:	lods   eax,DWORD PTR ds:[esi]
  418872:	aas    
  418873:	sub    al,0x7b
  418875:	cmc    
  418876:	hlt    
  418877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418878:	imul   edi,DWORD PTR [esi+0x2deaea20],0xd1c12bf9
  418882:	pop    edi
  418883:	inc    ebp
  418884:	sbb    eax,0xd29382dd
  418889:	stos   WORD PTR es:[edi],ax
  41888b:	cmp    BYTE PTR [edi],ah
  41888d:	mov    bl,0x29
  41888f:	mov    bl,0x50
  418891:	xchg   BYTE PTR [ebx+0x60533e7c],ch
  418897:	xor    eax,0x6a3796d7
  41889c:	or     al,0x57
  41889e:	bound  esi,QWORD PTR [eax+0x25beb1c5]
  4188a4:	xchg   esi,esp
  4188a6:	(bad)  
  4188a7:	repz lds esi,FWORD PTR [esi]
  4188aa:	dec    ebx
  4188ab:	jg     0x4188de
  4188ad:	mov    bl,0xa2
  4188af:	cmc    
  4188b0:	jp     0x4188ba
  4188b2:	inc    esp
  4188b3:	mov    BYTE PTR [edx+0x1a6ad59b],bl
  4188b9:	pop    edx
  4188ba:	in     eax,dx
  4188bb:	fwait
  4188bc:	adc    edx,DWORD PTR [edi+0x7c]
  4188bf:	(bad)  [ebx+esi*2+0x24]
  4188c3:	dec    esi
  4188c4:	ins    DWORD PTR es:[edi],dx
  4188c5:	sub    BYTE PTR [ebx+0x33],ah
  4188c8:	cmp    eax,0xc323f951
  4188cd:	add    dh,BYTE PTR [ecx+0x355a8ed2]
  4188d3:	cld    
  4188d4:	imul   DWORD PTR [edx-0x13]
  4188d7:	pop    esp
  4188d8:	mov    eax,ds:0xdef88f3c
  4188dd:	in     al,dx
  4188de:	push   ebx
  4188df:	ja     0x418863
  4188e1:	sbb    al,0x31
  4188e3:	and    edx,DWORD PTR [edi-0x42]
  4188e6:	push   ds
  4188e7:	scas   eax,DWORD PTR es:[edi]
  4188e8:	adc    DWORD PTR [ebx-0x4f9285e4],edi
  4188ee:	test   al,0x4e
  4188f0:	popf   
  4188f1:	adc    ebx,ecx
  4188f3:	rcl    BYTE PTR [eax-0x52],0x83
  4188f7:	mov    ch,BYTE PTR [edi+0x1be8fc98]
  4188fd:	cmp    eax,DWORD PTR [ebx-0x36]
  418900:	mov    WORD PTR [edi+0x36e3cc41],es
  418906:	jne    0x41890d
  418908:	pusha  
  418909:	cmp    al,0x9
  41890b:	jmp    0xbba324fb
  418910:	ret    
  418911:	xchg   esi,eax
  418912:	sbb    eax,DWORD PTR [eax+ebx*2]
  418915:	aas    
  418916:	in     eax,dx
  418917:	(bad)  
  418918:	leave  
  418919:	ret    0x3c86
  41891c:	mov    ecx,0x7f565418
  418921:	clc    
  418922:	in     al,dx
  418923:	jp     0x4188d9
  418925:	stos   DWORD PTR es:[edi],eax
  418926:	ret    
  418927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418928:	sbb    bl,BYTE PTR [eax]
  41892a:	pop    es
  41892b:	mov    ds:0x9f67fa84,al
  418930:	jmp    0x418938
  418932:	aad    0x15
  418934:	dec    eax
  418935:	mov    edi,0x451d7909
  41893a:	outs   dx,DWORD PTR ds:[esi]
  41893b:	ret    
  41893c:	fdivr  st,st(0)
  41893e:	rcl    esp,cl
  418940:	adc    ch,BYTE PTR [esi+0x1a]
  418943:	cli    
  418944:	cmp    BYTE PTR [edx+0x33075a2d],dh
  41894a:	mov    al,0xab
  41894c:	repz mov cl,0x22
  41894f:	xor    BYTE PTR [edi+0xc524824],bl
  418955:	cld    
  418956:	push   es
  418957:	fs mov ebp,0xe2950815
  41895d:	jae    0x4189b4
  41895f:	fnstsw WORD PTR [edx+eiz*2-0x4c091e65]
  418966:	jb     0x418944
  418968:	retf   
  418969:	cmp    eax,0xa85d1545
  41896e:	in     eax,0x39
  418970:	ret    
  418971:	sbb    bh,al
  418973:	std    
  418974:	fwait
  418975:	inc    ebx
  418976:	and    al,0x18
  418978:	enter  0xfedf,0x93
  41897c:	xchg   esp,eax
  41897d:	xchg   edi,eax
  41897e:	lock mov al,ds:0x2d2951f4
  418984:	inc    esp
  418985:	test   eax,0xfa06172
  41898a:	mov    ah,0xef
  41898c:	xchg   DWORD PTR [edx],ebp
  41898e:	xor    BYTE PTR [ebp+0x5c70a88],0x19
  418995:	ja     0x418a0c
  418997:	xchg   esi,eax
  418998:	loop   0x4189aa
  41899a:	jno    0x4189d2
  41899c:	or     DWORD PTR [esi+0xc],eax
  41899f:	or     edi,DWORD PTR fs:[eax-0x6e720e6]
  4189a6:	or     al,0x85
  4189a8:	pushf  
  4189a9:	jbe    0x4189ff
  4189ab:	(bad)  
  4189ac:	sbb    DWORD PTR [ebx+0x3b68bd54],ecx
  4189b2:	shr    DWORD PTR [edx-0x1a],1
  4189b5:	fisub  DWORD PTR [ecx+0x53]
  4189b8:	std    
  4189b9:	in     eax,0xb7
  4189bb:	ret    0x967b
  4189be:	mov    ebp,0x246540ea
  4189c3:	add    ch,dl
  4189c5:	sbb    al,BYTE PTR [eax]
  4189c7:	jmp    0x41896d
  4189c9:	fisttp DWORD PTR [esi]
  4189cb:	call   0xd4dc9ecb
  4189d0:	adc    al,0x71
  4189d2:	cmp    al,0x7d
  4189d4:	daa    
  4189d5:	cld    
  4189d6:	push   edi
  4189d7:	jl     0x41897c
  4189d9:	loop   0x4189ea
  4189db:	mov    cl,0xe1
  4189dd:	imul   esi,ebx,0x55ea26ee
  4189e3:	sub    al,0xba
  4189e5:	pop    ss
  4189e6:	push   ebp
  4189e7:	jge    0x4189f4
  4189e9:	neg    DWORD PTR [edx]
  4189eb:	dec    edx
  4189ec:	stos   BYTE PTR es:[edi],al
  4189ed:	sbb    BYTE PTR [esi-0x6f3abef],ch
  4189f3:	bnd jp 0x418a41
  4189f6:	aad    0xe3
  4189f8:	dec    esi
  4189f9:	cmp    BYTE PTR [esi-0x510e211f],ch
  4189ff:	xor    al,0xef
  418a01:	loopne 0x4189db
  418a03:	jns    0x418a3b
  418a05:	(bad)  
  418a06:	and    al,0x7
  418a08:	imul   ebp,esp,0xffffff82
  418a0b:	sahf   
  418a0c:	stos   DWORD PTR es:[edi],eax
  418a0d:	xor    DWORD PTR [ebx],0xffffffa4
  418a10:	imul   esp,DWORD PTR [ebx-0x1e36974c],0x2271af72
  418a1a:	xchg   ebp,eax
  418a1b:	cmp    eax,0xd55fc2b1
  418a20:	pop    ss
  418a21:	fild   QWORD PTR fs:[ecx]
  418a24:	test   ebp,0x916de2fe
  418a2a:	clc    
  418a2b:	push   ecx
  418a2c:	xor    BYTE PTR [eax+0x25],cl
  418a2f:	dec    esi
  418a30:	inc    esi
  418a31:	ins    BYTE PTR es:[edi],dx
  418a32:	aas    
  418a33:	pushf  
  418a34:	sbb    cl,BYTE PTR ds:0x296c4a75
  418a3a:	mov    eax,0xa6101e96
  418a3f:	mov    eax,ds:0xe67cf31
  418a44:	cwde   
  418a45:	aad    0x96
  418a47:	adc    BYTE PTR [esi+0x6f],dl
  418a4a:	xchg   edi,eax
  418a4b:	add    DWORD PTR [eax+0x44e156f],ebx
  418a51:	push   eax
  418a52:	(bad)  
  418a54:	xchg   ebp,eax
  418a55:	icebp  
  418a56:	mov    ecx,0x7385f5c8
  418a5b:	add    eax,0x193de16d
  418a60:	pop    ebx
  418a61:	fs push esi
  418a63:	mov    ch,0x92
  418a65:	sub    eax,0x3c6179f9
  418a6a:	int3   
  418a6b:	ds jge 0x418aa8
  418a6e:	fist   DWORD PTR [ecx-0x717146ba]
  418a74:	cmp    WORD PTR [edi],0xbef9
  418a79:	add    al,0x98
  418a7b:	repnz inc edi
  418a7d:	test   al,0x0
  418a7f:	les    eax,FWORD PTR [edx]
  418a81:	sbb    DWORD PTR [ebp+0x1c],ebp
  418a84:	pop    esp
  418a85:	out    0xb5,eax
  418a87:	js     0x418a8f
  418a89:	lods   eax,DWORD PTR ds:[esi]
  418a8a:	lds    edi,FWORD PTR [edx+0x54842021]
  418a90:	and    DWORD PTR [esi+0x9],ecx
  418a93:	icebp  
  418a94:	jmp    0xe5ab:0x45f49718
  418a9b:	mov    ch,0x6f
  418a9d:	ja     0x418ab2
  418a9f:	jg     0x418aba
  418aa1:	cld    
  418aa2:	cmc    
  418aa3:	lahf   
  418aa4:	jge    0x418a5c
  418aa6:	and    DWORD PTR [edx+ecx*8],esp
  418aa9:	loopne 0x418afe
  418aab:	fdivr  DWORD PTR ds:0x955a3bf4
  418ab1:	sbb    eax,0xf246a8c6
  418ab6:	nop
  418ab7:	push   ecx
  418ab8:	(bad)  
  418ab9:	xor    DWORD PTR [eax-0x3],edx
  418abc:	mov    ebx,0x22d063ca
  418ac1:	loopne 0x418b3b
  418ac3:	ret    
  418ac4:	pop    esi
  418ac5:	shl    DWORD PTR [ebx+eax*1+0xf],cl
  418ac9:	out    dx,al
  418aca:	lods   al,BYTE PTR ds:[esi]
  418acb:	push   ebx
  418acc:	add    al,0xd8
  418ace:	and    BYTE PTR [eax+0x485f87b4],cl
  418ad4:	push   0xffffff9e
  418ad6:	cmp    eax,DWORD PTR [ebx+0x6d]
  418ad9:	or     DWORD PTR [esi+esi*4+0x169536c8],edx
  418ae0:	ficom  DWORD PTR [ebx+esi*8+0x54]
  418ae4:	test   eax,0x397a28dc
  418ae9:	xchg   esi,eax
  418aea:	shr    DWORD PTR [edx],1
  418aec:	ret    
  418aed:	mov    eax,0x11bc55d3
  418af2:	sub    ecx,ecx
  418af4:	pop    es
  418af5:	xchg   ecx,eax
  418af6:	mov    eax,0x5829621f
  418afb:	int3   
  418afc:	sub    DWORD PTR [ebp+ebx*2+0x19],0x58608b5e
  418b04:	mov    ch,0xfe
  418b06:	lock lea edi,[esi-0x14cd7877]
  418b0d:	inc    edx
  418b0e:	or     DWORD PTR [eax+0x77],ebx
  418b11:	pop    es
  418b12:	xchg   ebx,eax
  418b13:	dec    ebp
  418b14:	stos   DWORD PTR es:[edi],eax
  418b15:	imul   ecx,DWORD PTR [ebx+eiz*1-0x3b],0x43
  418b1a:	int3   
  418b1b:	sub    BYTE PTR [si+0x29],ah
  418b1f:	lods   eax,DWORD PTR ds:[esi]
  418b20:	mov    ebp,DWORD PTR [ebx-0x17]
  418b23:	dec    edi
  418b24:	fcmovnb st,st(5)
  418b26:	cmp    al,BYTE PTR [ebp+0x7f]
  418b29:	in     al,dx
  418b2a:	inc    edi
  418b2b:	push   ebp
  418b2c:	aam    0x8e
  418b2e:	jno    0x418b4e
  418b30:	sbb    dl,bh
  418b32:	jo     0x418b3d
  418b34:	push   ecx
  418b35:	aas    
  418b36:	jmp    0xb47a:0xfb9ff8cb
  418b3d:	cmc    
  418b3e:	xchg   edx,eax
  418b3f:	rol    DWORD PTR es:[edx+esi*2],1
  418b43:	xchg   ecx,eax
  418b44:	jns    0x418b94
  418b46:	iret   
  418b47:	mov    eax,edi
  418b49:	mov    esp,0xf84f3268
  418b4e:	loopne 0x418b3a
  418b50:	inc    eax
  418b51:	std    
  418b52:	enter  0xf279,0xd5
  418b56:	cwde   
  418b57:	fisttp DWORD PTR [edi+ebx*8]
  418b5a:	pop    ss
  418b5b:	jp     0x418bc3
  418b5d:	loopne 0x418ae2
  418b5f:	fsubr  st,st(4)
  418b61:	sub    al,0xf6
  418b63:	shr    DWORD PTR [edx+0x7b],cl
  418b66:	test   DWORD PTR [ecx-0x218f2078],ebp
  418b6c:	pop    edx
  418b6d:	in     eax,0x3e
  418b6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b70:	and    al,0xfc
  418b72:	adc    eax,0xda0d9ef5
  418b77:	mov    ds:0x4077b7e6,al
  418b7c:	mov    dh,0x2
  418b7e:	dec    edx
  418b7f:	imul   ebp,DWORD PTR gs:[ebx],0xd36075e6
  418b86:	test   DWORD PTR [edi+edi*2+0x6e],0xa19f6f9d
  418b8e:	pop    ss
  418b8f:	pop    ebp
  418b90:	jo     0x418be8
  418b92:	(bad)  [edi]
  418b94:	mov    edi,edx
  418b96:	loopne 0x418c14
  418b98:	or     al,0x17
  418b9a:	lahf   
  418b9b:	loop   0x418bf8
  418b9d:	std    
  418b9e:	loope  0x418bd1
  418ba0:	retf   
  418ba1:	hlt    
  418ba2:	mov    edx,0xd3983571
  418ba7:	and    DWORD PTR [ebp-0x4aeb939a],ecx
  418bad:	in     al,0x50
  418baf:	sbb    cl,BYTE PTR [edx]
  418bb1:	xchg   edx,eax
  418bb2:	jecxz  0x418be2
  418bb4:	adc    DWORD PTR [esi-0x1f],ebp
  418bb7:	jnp    0x418bd0
  418bb9:	xor    eax,0x8c50bec3
  418bbe:	jg     0x418c13
  418bc0:	(bad)  
  418bc1:	in     al,dx
  418bc2:	xchg   esp,eax
  418bc3:	lahf   
  418bc4:	mov    eax,0xc7b520d3
  418bc9:	nop
  418bca:	jb     0x418c22
  418bcc:	xchg   edi,eax
  418bcd:	dec    ecx
  418bce:	(bad)  
  418bcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bd0:	ret    0x9d29
  418bd3:	push   es
  418bd4:	mov    BYTE PTR [esi],ch
  418bd6:	push   esi
  418bd7:	scas   eax,DWORD PTR es:[edi]
  418bd8:	adc    edx,ecx
  418bda:	add    edx,DWORD PTR [ecx]
  418bdc:	scas   al,BYTE PTR es:[edi]
  418bdd:	jmp    0x418b78
  418bdf:	xor    eax,DWORD PTR [edx-0x3573850f]
  418be5:	(bad)  
  418be7:	jge    0x418bd2
  418be9:	data16 add dl,BYTE PTR [ebp-0x31]
  418bed:	imul   edi,DWORD PTR [edi+0x43ca85e9],0xffffffa6
  418bf4:	xor    al,0x9
  418bf6:	push   es
  418bf7:	and    al,0xd9
  418bf9:	add    al,0xe4
  418bfb:	test   esp,ebp
  418bfd:	ja     0x418ba6
  418bff:	sub    DWORD PTR [edi],eax
  418c01:	xchg   esi,eax
  418c02:	push   eax
  418c03:	mov    edx,0xf9228280
  418c08:	add    BYTE PTR [edx],cl
  418c0a:	arpl   bp,sp
  418c0c:	push   eax
  418c0d:	cmp    BYTE PTR [edi-0x67cd5d29],dl
  418c13:	retf   
  418c14:	leave  
  418c15:	dec    edx
  418c16:	sub    DWORD PTR [eax-0x1b],ecx
  418c19:	jne    0x418c57
  418c1b:	aaa    
  418c1c:	dec    ebx
  418c1d:	xchg   ecx,eax
  418c1e:	dec    ebp
  418c1f:	retf   0x61ad
  418c22:	inc    ebx
  418c23:	or     BYTE PTR [eax+0x2e5ef676],al
  418c29:	xchg   BYTE PTR [ecx],bh
  418c2b:	pop    ds
  418c2c:	mov    cl,0xaf
  418c2e:	pop    edi
  418c2f:	push   cs
  418c30:	into   
  418c31:	push   edi
  418c32:	ror    eax,cl
  418c34:	je     0x418bba
  418c36:	xchg   BYTE PTR [ebp-0x10],ch
  418c39:	int    0xed
  418c3b:	(bad)  
  418c3c:	jns    0x418c8e
  418c3e:	pop    eax
  418c3f:	into   
  418c40:	dec    DWORD PTR [ecx+ebp*8]
  418c43:	cvtdq2ps xmm7,xmm3
  418c46:	enter  0xd665,0x26
  418c4a:	pop    edx
  418c4b:	sub    eax,0x37daf629
  418c50:	adc    BYTE PTR [ecx+0x248223b2],0x85
  418c57:	add    eax,DWORD PTR [edx-0x14]
  418c5a:	sti    
  418c5b:	test   eax,0x6b243497
  418c60:	pop    ecx
  418c61:	scas   eax,DWORD PTR es:[edi]
  418c62:	adc    ah,BYTE PTR [ecx+0x4e]
  418c65:	not    DWORD PTR [esi+edx*4]
  418c68:	into   
  418c69:	(bad)  
  418c6a:	into   
  418c6b:	add    DWORD PTR [ecx-0x44],ecx
  418c6e:	bound  esi,QWORD PTR [edi-0x6e]
  418c71:	pop    edx
  418c72:	jmp    0xc02e:0xb67dac72
  418c79:	or     eax,0x40db4045
  418c7e:	cdq    
  418c7f:	in     eax,dx
  418c80:	push   ecx
  418c81:	jno    0x418cc0
  418c83:	mov    ah,0x14
  418c85:	loope  0x418c82
  418c87:	outs   dx,BYTE PTR ds:[esi]
  418c88:	scas   eax,DWORD PTR es:[edi]
  418c89:	out    dx,al
  418c8a:	sar    dl,cl
  418c8c:	push   esi
  418c8d:	pop    eax
  418c8e:	push   esp
  418c8f:	test   al,0xe6
  418c91:	push   eax
  418c92:	jo     0x418cf4
  418c94:	sbb    DWORD PTR [ecx+0x5967777a],eax
  418c9a:	inc    ecx
  418c9b:	jmp    0xc49f:0x41def1e4
  418ca2:	sub    al,BYTE PTR [ebp-0x7e]
  418ca5:	hlt    
  418ca6:	loope  0x418d09
  418ca8:	out    0x4a,eax
  418caa:	nop
  418cab:	test   DWORD PTR [ecx+0x25],0xcca89cf3
  418cb2:	fsubr  DWORD PTR [edx+0x20]
  418cb5:	iret   
  418cb6:	mov    al,BYTE PTR [edi+eiz*8+0x1a94ad28]
  418cbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cbe:	pop    edi
  418cbf:	adc    bl,dh
  418cc1:	and    esp,DWORD PTR [ecx]
  418cc3:	das    
  418cc4:	out    dx,eax
  418cc5:	cld    
  418cc6:	mov    ecx,0xaa68c965
  418ccb:	data16 (bad) 
  418ccd:	rcl    DWORD PTR [edx-0xbcc7a0a],1
  418cd3:	cdq    
  418cd4:	pop    ds
  418cd5:	and    eax,0xdf245c73
  418cda:	(bad)  
  418cdb:	std    
  418cdc:	(bad)  
  418cdd:	mov    dl,0xf1
  418cdf:	cmp    eax,0xab61a3a1
  418ce4:	ror    WORD PTR [eax],0x71
  418ce8:	hlt    
  418ce9:	pop    ebp
  418cea:	inc    esi
  418ceb:	pop    ss
  418cec:	rol    BYTE PTR [edx],1
  418cee:	jg     0x418c93
  418cf0:	xchg   ebx,eax
  418cf1:	jns    0x418cb9
  418cf3:	rcl    ebx,0xd8
  418cf6:	or     eax,0x395dd24a
  418cfb:	dec    ebp
  418cfc:	inc    ebp
  418cfd:	in     eax,0x80
  418cff:	dec    esi
  418d00:	mov    ah,bl
  418d02:	and    esi,esp
  418d04:	add    BYTE PTR [ebp-0x1d01df10],dl
  418d0a:	int3   
  418d0b:	into   
  418d0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d0d:	sbb    dh,cl
  418d0f:	mov    ds:0xd2add248,eax
  418d14:	fwait
  418d15:	test   al,0x8d
  418d17:	lods   al,BYTE PTR ds:[esi]
  418d18:	inc    edi
  418d19:	push   esp
  418d1a:	test   al,0xca
  418d1c:	xchg   edi,eax
  418d1d:	not    DWORD PTR [edx]
  418d1f:	sbb    DWORD PTR [ecx],ecx
  418d21:	fiadd  WORD PTR [esi+0x244952e2]
  418d27:	and    eax,esi
  418d29:	inc    edi
  418d2a:	outs   dx,DWORD PTR ds:[esi]
  418d2b:	stc    
  418d2c:	push   edi
  418d2d:	or     DWORD PTR [esi-0x4f],ecx
  418d30:	imul   dh
  418d32:	pushf  
  418d33:	stos   DWORD PTR es:[edi],eax
  418d34:	ins    DWORD PTR es:[edi],dx
  418d35:	sar    cl,0x68
  418d38:	push   ecx
  418d39:	iret   
  418d3a:	dec    ecx
  418d3b:	lds    eax,FWORD PTR [edi]
  418d3d:	pusha  
  418d3e:	lods   al,BYTE PTR ds:[esi]
  418d3f:	pop    edx
  418d40:	and    al,0xf5
  418d42:	inc    ebp
  418d43:	loopne 0x418d17
  418d45:	retf   
  418d46:	outs   dx,DWORD PTR ds:[esi]
  418d47:	mov    bh,0xca
  418d49:	adc    eax,0x1a4e0951
  418d4e:	popa   
  418d4f:	pop    ds
  418d50:	ja     0x418d5d
  418d52:	xchg   edi,eax
  418d53:	mov    edi,0xa09c1615
  418d58:	clc    
  418d59:	cdq    
  418d5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d5b:	mov    ebp,0xf27418dc
  418d60:	add    eax,DWORD PTR [ecx+0x6e]
  418d63:	and    DWORD PTR [edx],eax
  418d65:	inc    edi
  418d66:	xchg   esi,eax
  418d67:	jns    0x5d0626b4
  418d6d:	xor    BYTE PTR [esi],0xaf
  418d70:	fidivr WORD PTR [edi+0x25]
  418d73:	lock pushf 
  418d75:	aad    0x69
  418d77:	sbb    esp,esi
  418d79:	in     al,0x1e
  418d7b:	scas   eax,DWORD PTR es:[edi]
  418d7c:	jle    0x418d4c
  418d7e:	cwde   
  418d7f:	mov    ch,0x45
  418d81:	test   BYTE PTR [ebp+0x5f],dh
  418d84:	dec    edi
  418d85:	xor    BYTE PTR [ebp+0x1d],0x6a
  418d89:	xlat   BYTE PTR ds:[ebx]
  418d8a:	(bad)  
  418d8c:	jb     0x418d51
  418d8e:	mov    DWORD PTR [esi],eax
  418d90:	mov    esi,0xf3b36d6a
  418d95:	punpcklwd mm2,DWORD PTR [ecx-0x1a]
  418d99:	aaa    
  418d9a:	sub    DWORD PTR [edx-0x4f1bcb30],esp
  418da0:	inc    eax
  418da1:	mov    esi,0xcc69068b
  418da6:	mov    ecx,0xf607dc40
  418dab:	stos   BYTE PTR es:[edi],al
  418dac:	xchg   esi,eax
  418dad:	loop   0x418d4d
  418daf:	cmc    
  418db0:	xlat   BYTE PTR ds:[ebx]
  418db1:	and    esp,DWORD PTR [edi]
  418db3:	inc    ebx
  418db4:	fwait
  418db5:	inc    BYTE PTR [esi]
  418db7:	mov    edx,0xc45cde24
  418dbc:	mov    eax,0xff5f6c75
  418dc1:	push   0xe9b4b3f7
  418dc6:	jne    0x418dc3
  418dc8:	or     eax,0xc93e1573
  418dcd:	and    DWORD PTR [edx+0x35dff3b9],ebp
  418dd3:	mov    ecx,DWORD PTR [ecx-0x26ad8ba2]
  418dd9:	pop    ecx
  418dda:	xor    dh,ah
  418ddc:	retf   
  418ddd:	dec    edx
  418dde:	push   ebx
  418ddf:	jbe    0x418de4
  418de1:	arpl   WORD PTR [esi],cx
  418de3:	dec    eax
  418de4:	cwde   
  418de5:	mov    eax,DWORD PTR [ebp-0x42abf8b3]
  418deb:	cmp    cl,BYTE PTR [eax-0x662a495f]
  418df1:	mov    al,0x4e
  418df3:	xchg   ecx,eax
  418df4:	push   0xffffffe3
  418df6:	and    edi,0xbb5a3c45
  418dfc:	fistp  DWORD PTR [edi+0x46586c4b]
  418e02:	adc    al,0x70
  418e04:	adc    cl,BYTE PTR [ebp-0x4e967d75]
  418e0a:	aas    
  418e0b:	retf   
  418e0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e0d:	and    DWORD PTR ds:0x459d9157,edx
  418e13:	nop
  418e14:	scas   al,BYTE PTR es:[edi]
  418e15:	dec    esp
  418e16:	rcl    BYTE PTR [edx+0x15],1
  418e19:	mov    ah,0x20
  418e1b:	jns    0x418e04
  418e1d:	fwait
  418e1e:	mov    esi,0xb78a3920
  418e23:	(bad)  
  418e24:	fild   DWORD PTR [esi]
  418e26:	fwait
  418e27:	xchg   ecx,eax
  418e28:	or     al,0x2e
  418e2a:	sub    esi,DWORD PTR [edi+0x349266c3]
  418e30:	test   al,0x97
  418e32:	std    
  418e33:	jle    0x418dfa
  418e35:	pop    edi
  418e36:	fisttp DWORD PTR [esi]
  418e38:	or     edi,DWORD PTR [ebp-0x5ceb389f]
  418e3e:	test   al,0x26
  418e40:	mov    edi,0xc59c8a89
  418e45:	mov    esi,0xf20df713
  418e4a:	mov    ecx,DWORD PTR [esi-0x696e113c]
  418e50:	sub    al,0x1d
  418e52:	cmp    ebx,ecx
  418e54:	cmc    
  418e55:	into   
  418e56:	retf   
  418e57:	sar    DWORD PTR [ebx],cl
  418e59:	and    BYTE PTR [ecx+0x2f],cl
  418e5c:	out    dx,al
  418e5d:	and    DWORD PTR [ebx+0x20],edi
  418e60:	xchg   DWORD PTR [edi+edx*2],edi
  418e63:	fs stos BYTE PTR es:[edi],al
  418e65:	ficomp WORD PTR ds:0x8e01c805
  418e6b:	imul   esp,DWORD PTR [ebp-0x5a],0x363649f4
  418e72:	sbb    edi,DWORD PTR [esi]
  418e74:	sub    DWORD PTR [ebp-0x1d],esp
  418e77:	sbb    eax,0xe100c072
  418e7c:	and    al,0x72
  418e7e:	push   cs
  418e7f:	cld    
  418e80:	adc    ah,BYTE PTR [esi]
  418e82:	repnz test BYTE PTR [ebx],ah
  418e85:	xchg   ecx,eax
  418e86:	lods   al,BYTE PTR ds:[esi]
  418e87:	addr16 pop ecx
  418e89:	jmp    0xe3ec2ba7
  418e8e:	mov    ebx,ss
  418e90:	sbb    eax,0xc6c0ad9c
  418e95:	xchg   esp,eax
  418e96:	inc    ebp
  418e97:	int    0x91
  418e99:	sar    DWORD PTR [eax],0xcb
  418e9c:	mov    al,0xa9
  418e9e:	pushf  
  418e9f:	mov    eax,0x7a69ce33
  418ea4:	nop
  418ea5:	repnz repz mov eax,ds:0xf74702f7
  418eac:	sub    al,0xac
  418eae:	inc    ecx
  418eaf:	pop    ss
  418eb0:	fxch   st(7)
  418eb2:	adc    ebp,DWORD PTR [edx+0x6b]
  418eb5:	mov    ?,WORD PTR [edi+0x6f05a6e3]
  418ebb:	dec    esi
  418ebc:	imul   edi,DWORD PTR [ebp-0x3dc3bf98],0xd7a88e28
  418ec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ec7:	call   0xdfa3be1c
  418ecc:	jp     0x418e89
  418ece:	dec    edi
  418ecf:	sbb    ebp,DWORD PTR [edi-0x3e]
  418ed2:	push   cs
  418ed3:	adc    dl,0xc5
  418ed6:	cmp    eax,0xab5dfe6d
  418edb:	add    al,0x77
  418edd:	scas   al,BYTE PTR es:[edi]
  418ede:	cwde   
  418edf:	je     0x418ec3
  418ee1:	xchg   BYTE PTR [edi+0x5d],al
  418ee4:	mov    al,ds:0x62cb514f
  418ee9:	in     al,dx
  418eea:	repz rol DWORD PTR [eax],0x67
  418eee:	add    DWORD PTR [edi+edx*1+0x5e],edx
  418ef2:	into   
  418ef3:	outs   dx,DWORD PTR ds:[esi]
  418ef4:	cmp    bl,BYTE PTR [ebx]
  418ef6:	mov    eax,0xb4b65a0f
  418efb:	inc    ebp
  418efc:	jb     0x418f3b
  418efe:	and    BYTE PTR [ecx],al
  418f00:	jl     0x418ee9
  418f02:	inc    esi
  418f03:	add    eax,DWORD PTR [eax-0x65]
  418f06:	adc    al,0xdb
  418f08:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  418f0a:	push   ss
  418f0b:	add    cl,BYTE PTR [ecx+0x42f1b188]
  418f11:	sub    BYTE PTR [ecx-0xa],al
  418f14:	fiadd  WORD PTR [ebp+0x30]
  418f17:	call   0x1c1a2413
  418f1c:	shr    DWORD PTR [ecx+0x6],1
  418f1f:	or     BYTE PTR [eax+0x47f0a0b1],dh
  418f25:	jp     0x418ec7
  418f27:	ror    BYTE PTR [ecx+0x18f66c59],cl
  418f2d:	xchg   ecx,eax
  418f2e:	mov    edi,0xd06fee08
  418f33:	sub    DWORD PTR es:[edx+0x1a36069c],ecx
  418f3a:	ds jne 0x418fa0
  418f3d:	fcomp  st(1)
  418f3f:	je     0x418f95
  418f41:	arpl   WORD PTR [edx],ax
  418f43:	push   cs
  418f44:	inc    ebp
  418f45:	fstp   DWORD PTR [edi]
  418f47:	jnp    0x418fb5
  418f49:	dec    DWORD PTR [ecx]
  418f4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f4c:	and    al,0xee
  418f4e:	dec    esp
  418f4f:	push   esi
  418f50:	mov    ds:0xa2194a3d,ax
  418f56:	xor    eax,0xdf485c22
  418f5b:	je     0x418f6c
  418f5d:	sub    eax,0x4ccac472
  418f62:	stos   BYTE PTR es:[edi],al
  418f63:	jno    0x418f2b
  418f65:	jecxz  0x418ef1
  418f67:	mov    dh,0x63
  418f69:	push   ebx
  418f6a:	call   0x9c59aef6
  418f6f:	push   esi
  418f70:	data16 aam 0x49
  418f73:	sbb    eax,0xd07acc18
  418f78:	aam    0x7c
  418f7a:	push   edx
  418f7b:	dec    ecx
  418f7c:	mov    eax,ds:0xc30ca750
  418f81:	out    dx,al
  418f82:	loop   0x418f6e
  418f84:	mov    fs,WORD PTR [edx+0xe]
  418f87:	loopne 0x418f7b
  418f89:	add    eax,0x89b71d4c
  418f8e:	mov    eax,0xd4107706
  418f93:	test   DWORD PTR [ecx-0x47],eax
  418f96:	(bad)  
  418f97:	loopne 0x418f7d
  418f99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f9a:	test   DWORD PTR [edx+0x49],0x89f767f4
  418fa1:	mov    edx,0xb7dcf21c
  418fa6:	cmp    dh,bh
  418fa8:	sub    eax,0x5214881a
  418fad:	test   BYTE PTR [ebp-0x5f],ch
  418fb0:	out    0x33,al
  418fb2:	pop    edi
  418fb3:	stos   BYTE PTR es:[edi],al
  418fb4:	push   cs
  418fb5:	icebp  
  418fb6:	push   esi
  418fb7:	cdq    
  418fb8:	cmp    DWORD PTR [ecx],ecx
  418fba:	jnp    0x41901c
  418fbc:	in     eax,0x5e
  418fbe:	pop    esp
  418fbf:	push   eax
  418fc0:	jecxz  0x418fa1
  418fc2:	sbb    BYTE PTR [ecx],ah
  418fc4:	(bad)  
  418fc5:	call   FWORD PTR [esi-0x7c05220a]
  418fcb:	mov    cl,0x31
  418fcd:	or     eax,0x7418c50
  418fd2:	inc    edi
  418fd3:	dec    ebp
  418fd4:	lahf   
  418fd5:	cmp    ah,BYTE PTR [ebp+0x25]
  418fd8:	mov    BYTE PTR [esi],bh
  418fda:	jae    0x418f65
  418fdc:	xchg   edi,eax
  418fdd:	mov    ecx,0x76a4e35f
  418fe2:	jmp    0x418fdb
  418fe4:	shr    BYTE PTR [ecx-0x4e9b1eb5],0x5
  418feb:	ret    0x5dc8
  418fee:	or     ebp,DWORD PTR [ecx]
  418ff0:	popa   
  418ff1:	pop    esp
  418ff2:	mov    bh,0x1a
  418ff4:	mov    al,0x1f
  418ff6:	mov    edi,0xab904e2e
  418ffb:	lods   al,BYTE PTR ds:[esi]
  418ffc:	xor    ebx,DWORD PTR [esi]
  418ffe:	push   es
  418fff:	pop    esi
  419000:	jmp    0x418ff2
  419002:	mov    al,ds:0x69737c47
  419007:	dec    ecx
  419008:	in     eax,dx
  419009:	jmp    0x6858d4c
  41900e:	mov    esi,0xeca2a95c
  419013:	scas   eax,DWORD PTR es:[edi]
  419014:	adc    al,BYTE PTR [ebx]
  419016:	push   cs
  419017:	pop    edi
  419018:	(bad)  
  419019:	ret    
  41901a:	or     esi,0xcf74e63e
  419020:	jno    0x418fc9
  419022:	dec    BYTE PTR [eax-0x58]
  419025:	mov    eax,ds:0x3de35d10
  41902a:	std    
  41902b:	jno    0x41906d
  41902d:	push   eax
  41902e:	sub    edi,ecx
  419030:	in     al,0x85
  419032:	call   0x4c64c81b
  419037:	adc    ebx,DWORD PTR [esi-0x3c592429]
  41903d:	and    cl,BYTE PTR [edi-0x2ecd4ab1]
  419043:	setp   BYTE PTR [edi]
  419046:	mov    ah,0xb3
  419048:	cmp    bh,bl
  41904a:	pushf  
  41904b:	nop
  41904c:	ds shl cl,0xf1
  419050:	lock retf 
  419052:	mov    ah,0x57
  419054:	mov    ch,0x2e
  419056:	hlt    
  419057:	repz push edi
  419059:	fbld   TBYTE PTR [eax]
  41905b:	mov    al,ds:0x24169e9b
  419060:	shl    DWORD PTR [edi-0x3ccbbb36],1
  419066:	outs   dx,DWORD PTR ds:[esi]
  419067:	lods   al,BYTE PTR ds:[esi]
  419068:	rcr    DWORD PTR [ecx+eiz*1+0x5911b66a],0x25
  419070:	mov    eax,ds:0x6b0a9d53
  419075:	dec    edx
  419076:	bound  esp,QWORD PTR [esi+0x4c992171]
  41907c:	out    0x10,al
  41907e:	jecxz  0x41901b
  419080:	out    dx,eax
  419081:	push   es
  419082:	popf   
  419083:	scas   eax,DWORD PTR es:[edi]
  419084:	imul   ecx,DWORD PTR [edi],0x28
  419087:	(bad)  
  419088:	xor    al,0x39
  41908a:	test   DWORD PTR [ecx-0xae38737],ecx
  419090:	ror    BYTE PTR [edi],0xc9
  419093:	retf   0x5239
  419096:	scas   eax,DWORD PTR es:[edi]
  419097:	cmp    dl,dh
  419099:	mov    ch,0x94
  41909b:	out    dx,eax
  41909c:	ret    
  41909d:	add    al,0xe7
  41909f:	xchg   ebx,eax
  4190a0:	cld    
  4190a1:	and    eax,DWORD PTR [ebx-0xa]
  4190a4:	sub    bh,BYTE PTR [eax-0x72]
  4190a7:	pushf  
  4190a8:	xchg   esp,eax
  4190a9:	lock in al,0xce
  4190ac:	enter  0x7a2c,0xc9
  4190b0:	aas    
  4190b1:	xchg   ecx,eax
  4190b2:	push   0xffffffe7
  4190b4:	stos   DWORD PTR es:[edi],eax
  4190b5:	xchg   DWORD PTR [esi+edx*2-0x5566ecb7],ebx
  4190bc:	ficom  DWORD PTR [edx+eax*4]
  4190bf:	xchg   ebx,eax
  4190c0:	mov    edi,0x5ec9a3fd
  4190c5:	jbe    0x41910d
  4190c7:	cmova  esi,esi
  4190ca:	adc    al,0x1c
  4190cc:	push   esi
  4190cd:	mov    DWORD PTR [ebp+ebx*1+0x44],esp
  4190d1:	imul   esi,DWORD PTR [eax-0xef502a7],0xffffffee
  4190d8:	enter  0xa2ae,0xa1
  4190dc:	call   0x709e:0x913ae634
  4190e3:	call   0x7ab:0x536db2d5
  4190ea:	add    al,0x35
  4190ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190ed:	call   0x4e166a2a
  4190f2:	imul   eax,edi,0xbe1eaa44
  4190f8:	push   ds
  4190f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190fa:	dec    esp
  4190fb:	fld    QWORD PTR [esi+0x4f2733e3]
  419101:	pusha  
  419102:	dec    ebx
  419103:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419104:	clc    
  419105:	hlt    
  419106:	or     eax,0xacd734c3
  41910b:	test   BYTE PTR [eax+0x45a60c98],bh
  419111:	push   ecx
  419112:	cmp    edi,edi
  419114:	inc    ecx
  419115:	dec    esp
  419116:	in     eax,0xc3
  419118:	sub    al,0x3
  41911a:	addr16 push 0xffffffc3
  41911d:	inc    edx
  41911e:	dec    ebp
  41911f:	(bad)  
  419120:	mov    ebx,0xc47aa8e0
  419125:	adc    DWORD PTR [esi-0x4308492],esi
  41912b:	sar    DWORD PTR [esi],0x61
  41912e:	fs or  eax,0x93f35430
  419134:	lods   al,BYTE PTR ds:[esi]
  419135:	mov    bh,0x73
  419137:	jle    0x4191a2
  419139:	add    DWORD PTR [esp+edx*4-0x1e],ebp
  41913d:	jbe    0x419127
  41913f:	xchg   ebx,eax
  419140:	ret    0x7027
  419143:	add    eax,0x6e888875
  419148:	cmp    bl,BYTE PTR [eax+0x7025627c]
  41914e:	sbb    DWORD PTR [edx],ebx
  419150:	add    dl,BYTE PTR [ebx]
  419152:	(bad)  
  419153:	daa    
  419154:	repz mov dh,0xb6
  419157:	lea    ecx,[esi]
  419159:	cdq    
  41915a:	adc    ah,dh
  41915c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41915d:	sub    al,0x22
  41915f:	sub    BYTE PTR [esi-0x7ee5ee83],ah
  419165:	jo     0x4191a7
  419167:	pop    ecx
  419168:	push   0x224aa5e2
  41916d:	jecxz  0x419153
  41916f:	shr    edi,cl
  419171:	and    eax,DWORD PTR [ecx]
  419173:	icebp  
  419174:	outs   dx,BYTE PTR ds:[esi]
  419175:	dec    eax
  419176:	ss xchg esi,eax
  419178:	push   edi
  419179:	xchg   esi,eax
  41917a:	cmp    eax,0x5937f00e
  41917f:	add    edi,DWORD PTR [edi+0x48570768]
  419185:	bound  ecx,QWORD PTR [eax]
  419187:	sbb    al,BYTE PTR [edx+0xc4b4751]
  41918d:	idiv   bl
  41918f:	cwde   
  419190:	imul   ebx,DWORD PTR [edi-0x742fafda],0xffffff9b
  419197:	div    DWORD PTR [esi]
  419199:	cmp    DWORD PTR [esi],0xada28d4a
  41919f:	adc    eax,0x60e488a1
  4191a4:	call   0xf674ce37
  4191a9:	shl    esp,1
  4191ab:	push   esi
  4191ac:	ins    BYTE PTR es:[edi],dx
  4191ad:	dec    edi
  4191ae:	retf   0x534
  4191b1:	je     0x4191af
  4191b3:	mov    edi,0x454fdba3
  4191b8:	xchg   esi,eax
  4191b9:	dec    ebx
  4191ba:	mov    cl,dl
  4191bc:	fwait
  4191bd:	jbe    0x41921b
  4191bf:	adc    BYTE PTR [esi],al
  4191c1:	std    
  4191c2:	(bad)  
  4191c3:	(bad)
  4191c8:	or     DWORD PTR [ebp+0x1c619212],edi
  4191ce:	retf   
  4191cf:	aaa    
  4191d0:	mov    ecx,0xab58b107
  4191d5:	adc    eax,0xc1fe2827
  4191da:	stos   BYTE PTR es:[edi],al
  4191db:	int3   
  4191dc:	pop    eax
  4191dd:	enter  0xa9aa,0xf3
  4191e1:	test   DWORD PTR [esi+0x44],esp
  4191e4:	mov    dl,0x5c
  4191e6:	mov    cs,WORD PTR [eax-0x6fe22225]
  4191ec:	sub    bh,ah
  4191ee:	outs   dx,BYTE PTR ds:[esi]
  4191ef:	les    esp,FWORD PTR [edi+0x7]
  4191f2:	and    eax,ebx
  4191f4:	inc    ebx
  4191f5:	add    DWORD PTR [bp+di-0x5392],esi
  4191fa:	stos   BYTE PTR es:[edi],al
  4191fb:	pop    ebx
  4191fc:	push   ebp
  4191fd:	sub    bh,BYTE PTR [ebx-0x75]
  419200:	mov    eax,ds:0x57b0eeec
  419205:	daa    
  419206:	cmp    eax,0xcf8ab851
  41920b:	inc    ebx
  41920c:	or     ch,bl
  41920e:	clc    
  41920f:	xor    esp,esp
  419211:	into   
  419212:	mov    ds:0x1f376b4c,al
  419217:	inc    edi
  419218:	lahf   
  419219:	dec    esi
  41921a:	dec    ecx
  41921b:	mov    edi,0x30e50a98
  419220:	xchg   bh,dh
  419222:	popf   
  419223:	mov    DWORD PTR [ebx],esp
  419225:	mov    ah,0x6b
  419227:	dec    esp
  419228:	(bad)  
  419229:	fcomp  QWORD PTR [edi]
  41922b:	mov    ebx,0x29d19a44
  419230:	xchg   ecx,eax
  419231:	jl     0x4192a3
  419233:	daa    
  419234:	repnz adc DWORD PTR [edi+0x4c4c2226],0x4c
  41923c:	jmp    0x9cba034f
  419241:	adc    bl,BYTE PTR [edx-0x57]
  419244:	pop    ebx
  419245:	pop    es
  419246:	sbb    al,0xa3
  419248:	mov    edi,0x7528e4b8
  41924d:	push   ss
  41924e:	ret    0x60f3
  419251:	push   esi
  419252:	scas   al,BYTE PTR es:[edi]
  419253:	int3   
  419254:	sub    al,0x1e
  419256:	and    DWORD PTR ds:0x790c8716,eax
  41925c:	addr16 push ebx
  41925e:	fimul  DWORD PTR [esi]
  419260:	xchg   ebx,eax
  419261:	push   ecx
  419262:	mov    WORD PTR [eax+0xe],ss
  419265:	inc    eax
  419266:	inc    esi
  419267:	loope  0x419274
  419269:	sub    ebp,DWORD PTR [ecx+eiz*8+0x78]
  41926d:	push   ds
  41926e:	ret    0x3943
  419271:	aas    
  419272:	scas   eax,DWORD PTR es:[edi]
  419273:	test   eax,0xa329767c
  419278:	stc    
  419279:	and    ebp,DWORD PTR ds:0x90bceb2a
  41927f:	mov    eax,gs:0xbcb70c78
  419285:	bound  edx,QWORD PTR [esp+ebp*8+0x4465b04f]
  41928c:	jp     0x419229
  41928e:	bound  ecx,QWORD PTR ds:0x1e86c7a5
  419294:	lds    ebx,FWORD PTR [ecx+0x4990dd7e]
  41929a:	out    dx,eax
  41929b:	add    esi,esi
  41929d:	mov    al,0x1f
  41929f:	pusha  
  4192a0:	or     DWORD PTR [edi+eiz*8-0x80],esi
  4192a4:	rcr    BYTE PTR [edi+0x34c23013],cl
  4192aa:	jmp    0x456470d6
  4192af:	and    BYTE PTR [edx+0x2a2e307c],cl
  4192b5:	stos   BYTE PTR es:[edi],al
  4192b6:	xchg   esi,eax
  4192b7:	jae    0x4192b1
  4192b9:	jmp    0x2900856f
  4192be:	lahf   
  4192bf:	call   0x557b76c7
  4192c4:	xchg   ebx,eax
  4192c5:	rcl    BYTE PTR [edx+0x433dc4a2],0x2b
  4192cc:	jno    0x41930e
  4192ce:	xor    edi,ebx
  4192d0:	mov    ebp,0xf97daecd
  4192d5:	test   eax,0x140e7feb
  4192da:	arpl   WORD PTR ds:0x8cf54982,sp
  4192e0:	mov    ds:0x3d2098cd,al
  4192e5:	ret    
  4192e6:	mov    al,ds:0x4b0c97ba
  4192eb:	add    DWORD PTR [ebx+0x60],ebp
  4192ee:	xchg   BYTE PTR [esp+edx*8-0x483ad2d],ah
  4192f5:	repnz dec eax
  4192f7:	test   BYTE PTR [ebx],bh
  4192f9:	xor    al,0xa
  4192fb:	xor    DWORD PTR [ebx+0x49],0xffffffc5
  4192ff:	fs push esi
  419301:	pop    ss
  419302:	bound  esp,QWORD PTR [ebx+0x14444d20]
  419308:	mov    edi,0xf1cf78e9
  41930d:	lea    esi,[ebx+0x25]
  419310:	into   
  419311:	xor    DWORD PTR [edx+edx*8+0x16],ebp
  419315:	jnp    0x419370
  419317:	cli    
  419318:	fs int 0x38
  41931b:	out    0x96,al
  41931d:	or     DWORD PTR [edx+edx*4+0x5c],ecx
  419321:	repz adc al,0x41
  419324:	call   0x7c1d:0xe38093d3
  41932b:	sub    DWORD PTR [ebx-0x13],ebx
  41932e:	iret   
  41932f:	repnz dec edi
  419331:	das    
  419332:	inc    ebp
  419333:	popf   
  419334:	sub    al,0x3f
  419336:	dec    eax
  419337:	bound  esi,QWORD PTR [ecx*1-0x65dccbf0]
  41933e:	scas   al,BYTE PTR es:[edi]
  41933f:	jmp    0x6daabed1
  419344:	int    0x75
  419346:	mov    al,ds:0x2be47abf
  41934b:	jg     0x419339
  41934d:	adc    DWORD PTR [eax],0xbe610be
  419353:	mov    ds:0x7dfd6c97,eax
  419358:	test   esi,0xe66166cf
  41935e:	jl     0x41937b
  419360:	pushf  
  419361:	add    BYTE PTR [esp+ebx*8],bh
  419364:	cwde   
  419365:	je     0x4193cf
  419367:	or     eax,0xd1c7ebd9
  41936c:	inc    edi
  41936d:	and    esi,DWORD PTR [ebx+0x1d]
  419370:	lods   eax,DWORD PTR ds:[esi]
  419371:	sar    BYTE PTR [edi+0x2ed0d897],cl
  419377:	mov    eax,0x91b3f254
  41937c:	dec    edi
  41937d:	xor    DWORD PTR [ecx],ecx
  41937f:	push   edi
  419380:	out    0x4b,al
  419382:	add    ebx,DWORD PTR [ebp-0x7dfbafeb]
  419388:	jns    0x41935c
  41938a:	adc    eax,0x3e81c9d
  41938f:	and    BYTE PTR [ecx+0x45],bl
  419392:	dec    edi
  419393:	or     eax,0x42a96047
  419398:	dec    esi
  419399:	jge    0x419327
  41939b:	sub    eax,0x23c9d79d
  4193a0:	cmp    eax,0x377f6013
  4193a5:	sbb    BYTE PTR [eax+0x2c80cb44],ah
  4193ab:	jbe    0x4193e4
  4193ad:	fucomi st,st(4)
  4193af:	lock ret 
  4193b1:	lods   eax,DWORD PTR ds:[esi]
  4193b2:	scas   eax,DWORD PTR es:[edi]
  4193b3:	outs   dx,DWORD PTR ds:[esi]
  4193b4:	jmp    0x31b12db7
  4193b9:	(bad)  
  4193ba:	scas   eax,DWORD PTR es:[edi]
  4193bb:	mov    edi,DWORD PTR [eax]
  4193bd:	lods   al,BYTE PTR ds:[esi]
  4193be:	mov    dh,0x33
  4193c0:	pop    ecx
  4193c1:	sub    DWORD PTR [ebx],0x84cf8a3d
  4193c7:	mov    ch,al
  4193c9:	xor    bh,BYTE PTR [esi+0x3b]
  4193cc:	xor    al,0x28
  4193ce:	sti    
  4193cf:	add    esi,ebp
  4193d1:	mov    edx,0xe9cb2387
  4193d6:	shr    DWORD PTR [esi+ecx*4-0x587e0fe2],0x56
  4193de:	mov    edi,0x986d443f
  4193e3:	jno    0x419427
  4193e5:	sub    eax,0x55c3897e
  4193ea:	mov    cl,0xf5
  4193ec:	xchg   edx,eax
  4193ed:	xlat   BYTE PTR ds:[ebx]
  4193ee:	lahf   
  4193ef:	das    
  4193f0:	imul   ebx,DWORD PTR [edx+0x25f561cc],0xfffffffa
  4193f7:	scas   eax,DWORD PTR es:[edi]
  4193f8:	test   DWORD PTR [ebx+0x76],ebp
  4193fb:	sti    
  4193fc:	pop    ebp
  4193fd:	mov    esi,0xc60276ce
  419402:	pop    ecx
  419403:	push   0x28
  419405:	mov    ds:0x2c06e62f,al
  41940a:	sub    ebp,DWORD PTR [ecx-0x68]
  41940d:	add    al,ch
  41940f:	(bad)  
  419411:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419412:	mov    edi,0x498f6d72
  419417:	lahf   
  419418:	rcr    DWORD PTR [ecx+0xce97074],0xb8
  41941f:	(bad)  
  419420:	rcr    BYTE PTR [ecx-0x1229ea2e],cl
  419426:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419427:	daa    
  419428:	pop    eax
  419429:	out    dx,eax
  41942a:	cld    
  41942b:	fild   QWORD PTR [ecx+0x781d2a26]
  419431:	(bad)  
  419432:	adc    al,0x4c
  419434:	mov    ds:0x8d74887b,al
  419439:	aad    0x70
  41943b:	enter  0x9806,0xbf
  41943f:	push   ebp
  419440:	sti    
  419441:	lods   al,BYTE PTR ds:[esi]
  419442:	mov    dh,0x3
  419444:	pop    edi
  419445:	aam    0x68
  419447:	adc    BYTE PTR [edi+0x53],0x6d
  41944b:	sbb    al,0x99
  41944d:	mov    bh,0x32
  41944f:	mov    al,ds:0xd4a5f6ff
  419454:	mov    bl,0x6d
  419456:	ins    DWORD PTR es:[edi],dx
  419457:	xor    dl,BYTE PTR [ebp+0x4a]
  41945a:	mov    al,0x14
  41945c:	clc    
  41945d:	(bad)  
  41945f:	cs (bad) 
  419462:	(bad)  
  419463:	jbe    0x41946b
  419465:	pop    es
  419466:	ins    DWORD PTR es:[edi],dx
  419467:	push   es
  419468:	adc    esi,ecx
  41946a:	add    BYTE PTR [ebx],al
  41946c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41946d:	cmp    eax,0x444dc085
  419472:	xchg   BYTE PTR [ebx-0x2b],ch
  419475:	sub    DWORD PTR [ebx],0xfffffffa
  419478:	mov    ah,0xa1
  41947a:	mov    al,ds:0xc35ac016
  41947f:	lock and cl,dl
  419482:	or     DWORD PTR [ebx+0x55],0x50
  419486:	or     BYTE PTR [edi-0x675dbc64],al
  41948c:	scas   al,BYTE PTR es:[edi]
  41948d:	pop    esi
  41948e:	(bad)  
  41948f:	loopne 0x4194ea
  419491:	daa    
  419492:	add    ebx,edi
  419494:	jae    0xdd40ff8
  41949a:	outs   dx,BYTE PTR ds:[esi]
  41949b:	loope  0x4194a3
  41949d:	aam    0xe3
  41949f:	in     eax,0xd
  4194a1:	scas   al,BYTE PTR es:[edi]
  4194a2:	hlt    
  4194a3:	jns    0x4194a8
  4194a5:	mov    ah,0x5b
  4194a7:	push   esp
  4194a8:	sub    si,WORD PTR [ebx-0x72ab2092]
  4194af:	inc    ebx
  4194b0:	dec    di
  4194b2:	(bad)  
  4194b3:	sub    BYTE PTR [edi-0x52],al
  4194b6:	mov    eax,0x86df01ff
  4194bb:	shl    DWORD PTR [esi-0x5b],1
  4194be:	idiv   bl
  4194c0:	dec    ebp
  4194c1:	imul   esi,DWORD PTR [ecx+ecx*2-0xf147ead],0x2aac258f
  4194cc:	pop    ebx
  4194cd:	xchg   al,ch
  4194cf:	in     eax,dx
  4194d0:	cli    
  4194d1:	jmp    0xd4253006
  4194d6:	pushf  
  4194d7:	std    
  4194d8:	pop    edx
  4194d9:	nop
  4194da:	lods   al,BYTE PTR ds:[esi]
  4194db:	std    
  4194dc:	push   ss
  4194dd:	leave  
  4194de:	inc    ebx
  4194df:	mov    ebx,0x9a1d49d
  4194e4:	outs   dx,DWORD PTR ds:[esi]
  4194e5:	or     dl,BYTE PTR [ebx+ebx*8-0x44]
  4194e9:	mov    al,0x51
  4194eb:	push   ss
  4194ec:	test   al,0xc
  4194ee:	jae    0x41947b
  4194f0:	pop    edx
  4194f1:	lahf   
  4194f2:	out    0x7b,al
  4194f4:	adc    ebx,DWORD PTR [eax+eax*2+0x66]
  4194f8:	shl    DWORD PTR [ecx+0x5e41d99],cl
  4194fe:	add    edi,DWORD PTR ds:0x7eba62f7
  419504:	fwait
  419505:	ja     0x419572
  419507:	mov    dh,0x60
  419509:	test   BYTE PTR [edi+0x20],dl
  41950c:	jmp    0x4194d2
  41950e:	pushf  
  41950f:	loop   0x4194a8
  419511:	dec    esp
  419512:	in     eax,0xe5
  419514:	es cld 
  419516:	in     eax,0xf7
  419518:	out    dx,eax
  419519:	int    0xa8
  41951b:	adc    DWORD PTR [ebp+0x4feeec0d],edi
  419521:	das    
  419522:	aam    0xb7
  419524:	test   DWORD PTR [eax],0x1c6f6f2f
  41952a:	adc    edx,DWORD PTR [esi+0x772765c0]
  419530:	in     al,dx
  419531:	call   FWORD PTR [edx]
  419533:	(bad)  
  419534:	mov    WORD PTR [ecx+ebx*8],es
  419537:	inc    ebx
  419538:	(bad)  
  419539:	out    dx,eax
  41953a:	out    dx,eax
  41953b:	in     al,dx
  41953c:	outs   dx,BYTE PTR ds:[esi]
  41953d:	dec    edi
  41953e:	push   ss
  41953f:	aas    
  419540:	pop    ebx
  419541:	inc    edi
  419542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419543:	dec    ecx
  419544:	xor    BYTE PTR [edi],bh
  419546:	pop    ss
  419547:	xchg   BYTE PTR [ecx],bh
  419549:	add    BYTE PTR [edx],dh
  41954b:	cmp    BYTE PTR [esi],0xfa
  41954e:	adc    BYTE PTR [esi+0x25],ah
  419551:	or     eax,0x7ba283a0
  419556:	mov    esp,DWORD PTR [esi]
  419558:	cmp    ebx,DWORD PTR [edx]
  41955a:	out    0xae,eax
  41955c:	add    BYTE PTR [edi+0xd],ch
  41955f:	xchg   ebp,eax
  419560:	loope  0x419581
  419562:	rcr    DWORD PTR [edi],cl
  419564:	cld    
  419565:	push   eax
  419566:	inc    BYTE PTR [edi+0x4d]
  419569:	jmp    0x5476:0xc2b9b6b8
  419570:	outs   dx,DWORD PTR ds:[esi]
  419571:	loopne 0x41950c
  419573:	hlt    
  419574:	pop    esi
  419575:	or     eax,0xdf216cf0
  41957a:	sbb    dh,BYTE PTR [ebp-0xe]
  41957d:	mov    eax,0x64eda481
  419582:	or     ebx,ebx
  419584:	(bad)  
  419585:	seta   BYTE PTR [eax*8+0x6d42c7a9]
  41958d:	xchg   esi,eax
  41958e:	cdq    
  41958f:	imul   esp,ebp,0x40bf4f43
  419595:	fisttp WORD PTR [ecx+0x5b]
  419598:	dec    eax
  419599:	scas   al,BYTE PTR es:[edi]
  41959a:	pushf  
  41959b:	repz arpl WORD PTR [edx],bp
  41959e:	push   edx
  41959f:	enter  0x6e9f,0xfd
  4195a3:	faddp  st(1),st
  4195a5:	outs   dx,DWORD PTR ds:[esi]
  4195a6:	sbb    edi,esi
  4195a8:	(bad)  
  4195a9:	cdq    
  4195aa:	gs fwait
  4195ac:	ins    BYTE PTR es:[edi],dx
  4195ad:	or     eax,0x26880c07
  4195b2:	inc    edx
  4195b3:	cdq    
  4195b4:	call   0xa9dd:0x48590ac9
  4195bb:	sbb    eax,0x6d76a3f0
  4195c0:	and    bl,dl
  4195c2:	xlat   BYTE PTR ds:[ebx]
  4195c3:	pop    esi
  4195c4:	jg     0x4195eb
  4195c6:	daa    
  4195c7:	in     al,dx
  4195c8:	dec    ebp
  4195c9:	fmul   DWORD PTR [esi-0x40]
  4195cc:	(bad)  
  4195cd:	outs   dx,DWORD PTR ds:[esi]
  4195ce:	jg     0x4195b8
  4195d0:	sub    DWORD PTR [esi+0x64],eax
  4195d3:	dec    ebx
  4195d4:	ds scas eax,DWORD PTR es:[edi]
  4195d6:	xor    bl,BYTE PTR [ecx+ebp*2-0x1fa27bec]
  4195dd:	push   cs
  4195de:	sbb    dh,BYTE PTR [eax-0x2b]
  4195e1:	in     eax,dx
  4195e2:	loope  0x419571
  4195e4:	retf   
  4195e5:	and    DWORD PTR [ebx],esp
  4195e7:	sbb    ch,BYTE PTR [edx]
  4195e9:	das    
  4195ea:	pop    esi
  4195eb:	(bad)  
  4195ec:	aad    0x92
  4195ee:	rol    DWORD PTR [edx],0x9
  4195f1:	std    
  4195f2:	(bad)  
  4195f3:	xor    ebp,DWORD PTR cs:[edx-0x6c]
  4195f7:	xchg   bx,ax
  4195f9:	retf   0x9cfc
  4195fc:	bound  esp,QWORD PTR [esi+0x6c8dbd21]
  419602:	sar    BYTE PTR [edx+0x19],1
  419605:	inc    edi
  419606:	popf   
  419607:	loope  0x4195b9
  419609:	(bad)  
  41960a:	and    eax,0x5dead60e
  41960f:	xor    DWORD PTR [esi-0x26a7eb8e],ebp
  419615:	jle    0x41959b
  419617:	dec    eax
  419618:	mov    DWORD PTR [edx],edi
  41961a:	ret    
  41961b:	in     eax,dx
  41961c:	fsubrp st(6),st
  41961e:	bound  esi,QWORD PTR [eax-0x786c9ffb]
  419624:	inc    ebp
  419625:	out    dx,al
  419626:	test   BYTE PTR [ecx-0x6d5c1d0f],dh
  41962c:	in     al,dx
  41962d:	fwait
  41962e:	sbb    DWORD PTR [ebp-0x23b4f09f],ebp
  419634:	(bad)  
  419635:	sub    al,0xc8
  419637:	sub    al,BYTE PTR [edx+0x20]
  41963a:	lods   eax,DWORD PTR ds:[esi]
  41963b:	mov    al,0x33
  41963d:	mov    ebx,ds
  41963f:	idiv   DWORD PTR [ecx-0x9]
  419642:	inc    edi
  419643:	cmp    cl,BYTE PTR [ebp+0x14]
  419646:	fwait
  419647:	mov    ds:0x8b3bd8eb,eax
  41964c:	cli    
  41964d:	sbb    ebp,DWORD PTR ds:0xf81e62cf
  419653:	jecxz  0x419664
  419655:	fiadd  DWORD PTR [edi]
  419657:	hlt    
  419658:	in     eax,dx
  419659:	scas   al,BYTE PTR es:[edi]
  41965a:	test   cl,dh
  41965c:	fxtract 
  41965e:	rol    BYTE PTR [edi-0xf026d40],cl
  419664:	xor    eax,0x88e691c0
  419669:	cli    
  41966a:	retf   
  41966b:	call   0x32c619b
  419670:	sbb    cl,BYTE PTR [eax-0x3d]
  419673:	daa    
  419674:	test   DWORD PTR [esi+0x64],ecx
  419677:	leave  
  419678:	add    DWORD PTR [ecx],esp
  41967a:	or     esi,edi
  41967c:	sti    
  41967d:	dec    edx
  41967e:	aam    0xdd
  419680:	cmp    edi,eax
  419682:	xor    BYTE PTR ds:0x92ab,dl
  419687:	sub    al,0x37
  419689:	push   edi
  41968a:	test   BYTE PTR [ebx-0x7cc50562],dl
  419690:	call   0x9534:0xacff923b
  419697:	imul   eax,DWORD PTR [eax],0x6d45d211
  41969d:	pop    ecx
  41969e:	push   es
  41969f:	jb     0x4196b3
  4196a1:	inc    edx
  4196a2:	test   bh,dl
  4196a4:	xchg   edx,eax
  4196a5:	pop    esp
  4196a6:	sub    BYTE PTR [eax],dh
  4196a8:	sub    dl,bh
  4196aa:	test   ebp,ecx
  4196ac:	push   es
  4196ad:	imul   ecx,edx,0x79c4c11a
  4196b3:	imul   ecx,DWORD PTR [edx-0xa31f2a6],0xffffff99
  4196ba:	aas    
  4196bb:	int    0x3f
  4196bd:	cmp    DWORD PTR [ebp-0x61],ebx
  4196c0:	xor    esp,DWORD PTR [eax+0x3aba2a96]
  4196c6:	stos   BYTE PTR es:[edi],al
  4196c7:	leave  
  4196c8:	or     bl,BYTE PTR [esi+0x3c]
  4196cb:	push   ebp
  4196cc:	mov    ah,0xe9
  4196ce:	lods   eax,DWORD PTR ds:[esi]
  4196cf:	cmp    DWORD PTR [ebx+edx*4+0x56810c03],0x6d2357e8
  4196da:	push   esp
  4196db:	sar    DWORD PTR [esi-0x6d],1
  4196de:	data16 cli 
  4196e0:	xor    ecx,DWORD PTR [ebp-0x119284fb]
  4196e6:	xor    eax,0x77ae0e6b
  4196eb:	adc    DWORD PTR [ebx-0x46e25861],edx
  4196f1:	in     al,0x90
  4196f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196f4:	std    
  4196f5:	inc    edi
  4196f6:	cmp    BYTE PTR [edx],bl
  4196f8:	cdq    
  4196f9:	loope  0x4196ec
  4196fb:	xchg   ebp,eax
  4196fc:	out    0x72,eax
  4196fe:	sbb    bh,dh
  419700:	adc    DWORD PTR ds:0x5df5ebba,0xffffff84
  419707:	test   DWORD PTR [ecx+0x59],ebp
  41970a:	jecxz  0x419745
  41970c:	cmp    dl,BYTE PTR [edx+0x6641e0fb]
  419712:	call   0x42f0:0x1fa5323d
  419719:	gs mov al,0x83
  41971c:	xlat   BYTE PTR ds:[ebx]
  41971d:	popf   
  41971e:	ds pop esp
  419720:	inc    edx
  419721:	sub    dh,BYTE PTR [edx]
  419723:	fild   DWORD PTR [edi]
  419725:	adc    BYTE PTR [edi],ah
  419727:	cmp    esi,DWORD PTR ds:0x6649274e
  41972d:	(bad)  
  41972e:	push   edi
  41972f:	fdivr  QWORD PTR [ebp+ebp*1-0x72]
  419733:	jmp    0xb02a:0x94c57b72
  41973a:	cmp    cl,BYTE PTR [edi]
  41973c:	daa    
  41973d:	inc    ebx
  41973e:	jo     0x419771
  419740:	repz fs inc esi
  419743:	(bad)  
  419744:	cld    
  419745:	pop    edi
  419746:	inc    edx
  419747:	push   ebx
  419748:	jecxz  0x419722
  41974a:	push   ecx
  41974b:	adc    BYTE PTR [ebx+ebp*1-0x23],ch
  41974f:	ss leave 
  419751:	jle    0x41976f
  419753:	cli    
  419754:	fst    DWORD PTR [eax+0x52ea1ff5]
  41975a:	loope  0x4197b0
  41975c:	mov    eax,0x8533f569
  419761:	rcl    BYTE PTR [edx],cl
  419763:	xchg   BYTE PTR [esi+eiz*8+0x48caa5d2],ah
  41976a:	stos   BYTE PTR es:[edi],al
  41976b:	pop    ecx
  41976c:	lods   eax,DWORD PTR ds:[esi]
  41976d:	jb     0x41977d
  41976f:	cmp    DWORD PTR [ecx+0x164a418],ecx
  419775:	mov    ds:0xa6ed808,al
  41977a:	and    cl,BYTE PTR [edx-0x44]
  41977d:	jno    0x41975c
  41977f:	rcl    DWORD PTR [ecx-0x59],0xff
  419783:	inc    ebp
  419784:	sub    BYTE PTR [edi+0x8],bh
  419787:	jp     0x41976b
  419789:	(bad)  
  41978a:	shr    edx,cl
  41978c:	adc    BYTE PTR [edx],bh
  41978e:	ret    0x5ed8
  419791:	out    dx,eax
  419792:	ja     0x4197a2
  419794:	pop    eax
  419795:	loop   0x41972f
  419797:	in     al,0x64
  419799:	push   cs
  41979a:	sbb    eax,0x691e293d
  41979f:	sbb    DWORD PTR [edi+edx*4],esi
  4197a2:	mov    ?,WORD PTR [esi-0x241d532b]
  4197a8:	pusha  
  4197a9:	mov    eax,ds:0xd95fda6e
  4197ae:	stos   DWORD PTR es:[edi],eax
  4197af:	mov    ds:0x84ed668d,eax
  4197b4:	test   al,0xf4
  4197b6:	cmp    ah,BYTE PTR [ecx+0x1c921f36]
  4197bc:	sahf   
  4197bd:	test   eax,0x7de5f4a0
  4197c2:	popa   
  4197c3:	(bad)  
  4197c5:	or     eax,0xcb7e3c41
  4197ca:	pop    ss
  4197cb:	mov    ah,0xdf
  4197cd:	cmp    eax,0x8b7fcc20
  4197d2:	into   
  4197d3:	mov    eax,ds:0x4ee1afca
  4197d8:	cmc    
  4197d9:	mov    cl,0xcf
  4197db:	jmp    0xda76049d
  4197e0:	push   edi
  4197e1:	adc    dh,cl
  4197e3:	xchg   ebx,eax
  4197e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197e5:	sbb    cl,cl
  4197e7:	std    
  4197e8:	pusha  
  4197e9:	mov    bl,0x22
  4197eb:	mov    eax,ds:0xed792003
  4197f0:	xchg   edi,eax
  4197f1:	cmp    ebx,DWORD PTR [eax-0x5d]
  4197f4:	sub    DWORD PTR [edi],0xefe146ce
  4197fa:	fstp   DWORD PTR [ebx]
  4197fc:	outs   dx,DWORD PTR ds:[esi]
  4197fd:	ss enter 0xb1ee,0x4e
  419802:	cmp    BYTE PTR [ecx+ebx*4],al
  419805:	sbb    al,ah
  419807:	cmp    eax,0xcac45892
  41980c:	and    eax,0xc109f796
  419811:	not    ebx
  419813:	lahf   
  419814:	repz popa 
  419816:	sahf   
  419817:	pop    ss
  419818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419819:	js     0x41986d
  41981b:	dec    ebp
  41981c:	jmp    0x2079:0x8ce1a6ce
  419823:	push   ebp
  419824:	sbb    eax,0x45fa57b0
  419829:	ss out dx,eax
  41982b:	adc    bh,BYTE PTR es:[edi]
  41982e:	sbb    DWORD PTR [eax+0x289dcf99],ebp
  419834:	jl     0x4197c1
  419836:	in     al,dx
  419837:	fwait
  419838:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419839:	push   ds
  41983a:	adc    eax,0x380356aa
  41983f:	test   DWORD PTR [ebp-0x76],ebx
  419842:	es xchg edx,eax
  419844:	pop    edx
  419845:	ret    
  419846:	clc    
  419847:	sub    cl,BYTE PTR [edx+ebx*4+0x15e319eb]
  41984e:	stc    
  41984f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419850:	cs pop ds
  419852:	xchg   edx,eax
  419853:	pop    esi
  419854:	mov    bh,0x76
  419856:	and    ecx,edx
  419858:	push   ebp
  419859:	pop    esi
  41985a:	dec    esi
  41985b:	clc    
  41985c:	add    BYTE PTR [ecx+eax*8-0x68dc64b9],bl
  419863:	jge    0x75d04e32
  419869:	fsub   QWORD PTR [eax-0x1f]
  41986c:	fisub  DWORD PTR [edi+0x2e]
  41986f:	je     0x4198b9
  419871:	bound  edx,QWORD PTR [ebx]
  419873:	lods   eax,DWORD PTR ds:[esi]
  419874:	call   0x1d9c:0xdb992d65
  41987b:	shl    BYTE PTR [ebp+0x2b],cl
  41987e:	jmp    FWORD PTR [ebx+0x6260cf1e]
  419884:	dec    eax
  419885:	push   ecx
  419886:	ss pop edi
  419888:	pop    ecx
  419889:	mov    BYTE PTR [edi+0x6ba9a263],bh
  41988f:	cli    
  419890:	lock mov BYTE PTR [ebp+0x66],ch
  419894:	lahf   
  419895:	mov    cl,cl
  419897:	pop    ss
  419898:	mul    BYTE PTR [ecx]
  41989a:	push   0xcb2eee01
  41989f:	or     eax,0xdc12f5ef
  4198a4:	cmp    dh,dl
  4198a6:	xchg   esi,eax
  4198a7:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4198a9:	jge    0x4198f2
  4198ab:	mov    gs,edx
  4198ad:	(bad)  
  4198ae:	aam    0xc5
  4198b0:	cmp    BYTE PTR [ebp+eiz*1-0x3e],0x9
  4198b5:	jecxz  0x4198a3
  4198b7:	or     DWORD PTR [esi-0x3d],eax
  4198ba:	dec    eax
  4198bb:	out    dx,al
  4198bc:	je     0x4198a5
  4198be:	or     BYTE PTR [esi+edi*2],0xea
  4198c2:	mov    cl,0x3
  4198c4:	push   edx
  4198c5:	pusha  
  4198c6:	cmp    bh,BYTE PTR ds:0xc51db1c8
  4198cc:	sahf   
  4198cd:	jns    0x41990e
  4198cf:	(bad)  
  4198d1:	test   al,0x78
  4198d3:	adc    BYTE PTR [edi+ecx*8-0x7fe39ef8],ah
  4198da:	lock cli 
  4198dc:	popf   
  4198dd:	jnp    0x419881
  4198df:	test   al,0x33
  4198e1:	test   eax,0x6fb65c33
  4198e6:	push   esp
  4198e7:	and    DWORD PTR [ecx+0x594077e1],eax
  4198ed:	xchg   esi,eax
  4198ee:	gs pop ebx
  4198f0:	sbb    eax,0x774061f1
  4198f5:	cwde   
  4198f6:	xor    al,0xe
  4198f8:	mov    esi,0x7090a7df
  4198fd:	xchg   edx,eax
  4198fe:	ins    BYTE PTR es:[edi],dx
  4198ff:	add    bh,BYTE PTR ss:[edi+0x66]
  419903:	sbb    BYTE PTR [ecx+ebx*1-0x38],0xf2
  419908:	jns    0x4198b1
  41990a:	xchg   esp,eax
  41990b:	xor    ah,ah
  41990d:	sbb    al,0x38
  41990f:	and    cl,BYTE PTR [ecx+0x77]
  419912:	cmp    ecx,DWORD PTR [ebx]
  419914:	stos   BYTE PTR es:[edi],al
  419915:	add    ecx,DWORD PTR [edi+edx*2-0x27]
  419919:	mov    edi,0xa0108932
  41991e:	(bad)  
  419920:	jns    0x419935
  419922:	mov    ebp,DWORD PTR [ebx]
  419924:	jge    0x419992
  419926:	iret   
  419927:	in     al,dx
  419928:	cmp    bl,ch
  41992a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41992b:	or     eax,0x401b5360
  419930:	xor    edi,DWORD PTR [ebx-0x19]
  419933:	push   edi
  419934:	xor    al,BYTE PTR [esi]
  419936:	sub    eax,0xeb5b3f0b
  41993b:	std    
  41993c:	mov    ds:0xb20cc9a0,al
  419941:	js     0x419946
  419943:	lea    edi,[edi+ebp*8]
  419946:	push   ds
  419947:	dec    ebp
  419948:	sbb    al,0x7d
  41994a:	(bad)  
  41994b:	cmp    cl,dh
  41994d:	adc    BYTE PTR [esp+ebp*8+0x62785806],dh
  419954:	mov    al,ds:0x2b548d0f
  419959:	push   cs
  41995a:	and    DWORD PTR [ecx+0x67639055],edi
  419960:	mov    bl,BYTE PTR [ebx+ecx*4-0x20]
  419964:	ins    DWORD PTR es:[edi],dx
  419965:	(bad)  
  419966:	sbb    bl,dl
  419968:	arpl   WORD PTR [ecx+0x36],di
  41996b:	jns    0x4199c9
  41996d:	or     DWORD PTR [esi],esp
  41996f:	fs je  0x4199b4
  419972:	mov    ch,0xb7
  419974:	into   
  419975:	jbe    0x419900
  419977:	in     eax,dx
  419978:	(bad)  
  419979:	xor    al,0x62
  41997b:	mov    cl,0xd4
  41997d:	(bad)  
  41997e:	outs   dx,BYTE PTR ds:[esi]
  41997f:	adc    edx,esp
  419981:	sub    ebp,DWORD PTR [edx-0x3c]
  419984:	xchg   ebp,eax
  419985:	jno    0x419977
  419987:	dec    ebp
  419988:	push   es
  419989:	imul   edi,DWORD PTR cs:[esi+edx*8-0x7d],0xffffffa9
  41998f:	mov    ds:0xe184e10e,al
  419994:	push   eax
  419995:	cmovge edi,DWORD PTR [ecx]
  419998:	in     al,dx
  419999:	push   0xffffffe8
  41999b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41999c:	repz fs xchg esp,eax
  41999f:	in     al,dx
  4199a0:	push   edx
  4199a1:	mov    cl,0x34
  4199a3:	mov    al,ds:0xf6ec46d3
  4199a8:	lods   eax,DWORD PTR ds:[esi]
  4199a9:	ror    DWORD PTR [edi+0x27cf5777],cl
  4199af:	aaa    
  4199b0:	mov    ah,0x7a
  4199b2:	popf   
  4199b3:	cmc    
  4199b4:	mov    WORD PTR [ebx+0x74],fs
  4199b7:	data16 and al,0xc
  4199ba:	push   ss
  4199bb:	mov    esi,0xcb6711db
  4199c0:	xchg   esi,eax
  4199c1:	cwde   
  4199c2:	adc    BYTE PTR [ecx+0x702424a7],bl
  4199c8:	push   edi
  4199c9:	jnp    0x419a0e
  4199cb:	or     eax,0x3ce60c66
  4199d0:	mov    ch,0x4f
  4199d2:	jmp    0x41995a
  4199d4:	jbe    0x4199a3
  4199d6:	popf   
  4199d7:	test   cl,bh
  4199d9:	enter  0x997a,0xb7
  4199dd:	xor    BYTE PTR [ecx+0x63074e3c],bh
  4199e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199e4:	loopne 0x419a55
  4199e6:	and    al,0x90
  4199e8:	loopne 0x4199b0
  4199ea:	js     0x419973
  4199ec:	mov    esp,0x578b1506
  4199f1:	retf   0xca3c
  4199f4:	adc    al,0x92
  4199f6:	ss rol ch,1
  4199f9:	add    ecx,DWORD PTR [eax-0x28]
  4199fc:	add    bl,BYTE PTR [eax+0x36]
  4199ff:	imul   esi,eax,0xb2260da0
  419a05:	adc    eax,0x582c26b
  419a0a:	sub    edx,eax
  419a0c:	add    DWORD PTR [ecx+0x26],eax
  419a0f:	dec    edi
  419a10:	and    eax,0xc04f4d96
  419a15:	fstp   TBYTE PTR cs:[edi+0x2df81a50]
  419a1c:	fistp  QWORD PTR [ebx-0xf]
  419a1f:	adc    ebp,DWORD PTR [edx-0xb58b44e]
  419a25:	ret    0xe1a0
  419a28:	push   edi
  419a29:	imul   eax,DWORD PTR [edi-0x2b],0xffffffe6
  419a2d:	pop    ebx
  419a2e:	push   0x64687a2d
  419a33:	leave  
  419a34:	popa   
  419a35:	pop    esi
  419a36:	sar    DWORD PTR ds:0x97e22792,0xb9
  419a3d:	jbe    0x419abe
  419a3f:	xchg   BYTE PTR [eax+0x64],ah
  419a42:	sti    
  419a43:	mov    esp,0x260be46d
  419a48:	fwait
  419a49:	xchg   edx,eax
  419a4a:	pop    ds
  419a4b:	test   eax,0x18eed41d
  419a50:	(bad)  [edi-0x33]
  419a53:	inc    esi
  419a54:	xor    bh,bl
  419a56:	push   eax
  419a57:	cmp    edi,DWORD PTR [eax]
  419a59:	cwde   
  419a5a:	cmp    DWORD PTR ds:0x2b300586,edx
  419a60:	dec    ebp
  419a61:	call   0x8a0601a3
  419a66:	mov    esi,0xaeece983
  419a6b:	in     al,0xc
  419a6d:	pop    ss
  419a6e:	enter  0xc826,0xa1
  419a72:	sbb    al,0x53
  419a74:	xchg   ecx,eax
  419a75:	je     0x419a21
  419a77:	dec    ebx
  419a78:	push   edx
  419a79:	or     ebp,edi
  419a7b:	scas   al,BYTE PTR es:[edi]
  419a7c:	and    eax,0xe63bf33
  419a81:	call   0xe036:0xd27826cd
  419a88:	inc    ebp
  419a89:	jne    0x419a3c
  419a8b:	mov    esi,0x47a17920
  419a90:	(bad)  
  419a91:	iret   
  419a92:	imul   ebx,DWORD PTR [edi+0x36],0xffffffc3
  419a96:	jmp    0xeda9:0x13ee9f40
  419a9d:	adc    esp,DWORD PTR ds:0xa1d1a9cc
  419aa3:	shr    BYTE PTR [ebx-0x6d13701e],1
  419aa9:	fcmovnu st,st(4)
  419aab:	fdivr  st(5),st
  419aad:	xchg   ebp,eax
  419aae:	dec    ebp
  419aaf:	jecxz  0x419a82
  419ab1:	dec    edi
  419ab2:	addr16 dec ecx
  419ab4:	push   0x9ff1dddb
  419ab9:	rcl    DWORD PTR [edi+0x7f0b3230],cl
  419abf:	pop    ebx
  419ac0:	fisub  DWORD PTR [ecx+eiz*4-0x62]
  419ac4:	push   ss
  419ac5:	mov    ch,0x6c
  419ac7:	mov    cl,0xe
  419ac9:	jp     0x419ad0
  419acb:	mov    ecx,0xa5d5fa36
  419ad0:	fwait
  419ad1:	data16 jp 0x419aa7
  419ad4:	ret    0xaf15
  419ad7:	daa    
  419ad8:	add    cl,BYTE PTR [eax-0x74ff6e90]
  419ade:	jb     0x419a99
  419ae0:	addr16 push ebx
  419ae2:	daa    
  419ae3:	and    edx,DWORD PTR [ecx+edi*2+0x70368a98]
  419aea:	pushf  
  419aeb:	scas   al,BYTE PTR es:[edi]
  419aec:	adc    eax,0x26ba741c
  419af1:	xchg   edx,eax
  419af2:	cmp    BYTE PTR [ebp+0x5a72e919],al
  419af8:	pop    ebp
  419af9:	ret    0xed79
  419afc:	dec    ecx
  419afd:	out    0xa1,eax
  419aff:	adc    al,0x1d
  419b01:	fidiv  WORD PTR [esi]
  419b03:	xchg   BYTE PTR [eax],dh
  419b05:	sbb    esp,ebp
  419b07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b08:	jmp    0x23f0:0x5b27a178
  419b0f:	mov    eax,0x59a64d9e
  419b14:	adc    DWORD PTR [ebx-0x54],ebx
  419b17:	xor    DWORD PTR [ebp+ecx*4-0x65],ebx
  419b1b:	dec    edx
  419b1c:	push   0xa3164605
  419b21:	enter  0x7923,0xc8
  419b25:	scas   al,BYTE PTR es:[edi]
  419b26:	test   eax,0x3cdb2e15
  419b2b:	jne    0x419aae
  419b2d:	jae    0x419ba3
  419b2f:	stc    
  419b30:	jle    0x419adb
  419b32:	iret   
  419b33:	push   cs
  419b34:	sub    BYTE PTR [ebp+0x7b],0xab
  419b38:	add    DWORD PTR ds:0x96d879d8,ecx
  419b3e:	in     al,dx
  419b3f:	dec    ebx
  419b40:	lods   al,BYTE PTR ds:[esi]
  419b41:	or     BYTE PTR [eax],dl
  419b43:	mov    ds:0xd9738375,eax
  419b48:	push   ds
  419b49:	inc    ebp
  419b4a:	(bad)  
  419b4b:	es addr16 pop ebx
  419b4e:	into   
  419b4f:	jo     0x419afd
  419b51:	jge    0x419b12
  419b53:	pop    esi
  419b54:	push   eax
  419b55:	add    eax,0x9cfa532
  419b5a:	xor    DWORD PTR [edi],ecx
  419b5c:	pusha  
  419b5d:	test   BYTE PTR [ebp+0x1024ad2b],al
  419b63:	dec    esp
  419b64:	add    DWORD PTR ds:0x7101263e,0xffffffe4
  419b6b:	dec    edx
  419b6c:	je     0x419bb5
  419b6e:	sbb    al,0x74
  419b70:	sti    
  419b71:	mov    ebx,0x3df097a9
  419b76:	stos   BYTE PTR es:[edi],al
  419b77:	xchg   ebp,eax
  419b78:	mov    ebx,0x6eb73788
  419b7d:	pop    ss
  419b7e:	js     0x419bc6
  419b80:	mov    ebx,0xb02f5a58
  419b85:	nop
  419b86:	mov    edx,0x480b804b
  419b8b:	adc    DWORD PTR [esi+0x1f],edi
  419b8e:	popa   
  419b8f:	retf   
  419b90:	imul   DWORD PTR [ebx+0x3]
  419b93:	rcr    eax,1
  419b95:	scas   al,BYTE PTR es:[edi]
  419b96:	xchg   BYTE PTR [edi+esi*2-0x39d4ccf4],ch
  419b9d:	pusha  
  419b9e:	test   al,0x60
  419ba0:	test   al,0x7
  419ba2:	ss mov dh,0xb8
  419ba5:	nop
  419ba6:	and    ah,BYTE PTR [esi]
  419ba8:	jl     0x419b37
  419baa:	int3   
  419bab:	ins    BYTE PTR es:[edi],dx
  419bac:	push   ecx
  419bad:	lahf   
  419bae:	jg     0x419b4a
  419bb0:	push   eax
  419bb1:	arpl   cx,bx
  419bb3:	in     eax,0x5c
  419bb5:	sub    dh,BYTE PTR [edx]
  419bb7:	fnstenv [eax-0x6f]
  419bba:	mov    edx,edi
  419bbc:	and    BYTE PTR [eax-0x72],0x34
  419bc0:	mov    ah,0xf4
  419bc2:	je     0x419c32
  419bc4:	(bad)  
  419bc5:	cmp    ebx,DWORD PTR [edi+0x76325317]
  419bcb:	sub    al,BYTE PTR [ebx]
  419bcd:	mov    DWORD PTR [edi+0x3b6325f],ebp
  419bd3:	dec    ebp
  419bd4:	stos   DWORD PTR es:[edi],eax
  419bd5:	xchg   esp,eax
  419bd6:	je     0x419b68
  419bd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bd9:	add    al,BYTE PTR [edx]
  419bdb:	push   eax
  419bdc:	ds xchg ebp,eax
  419bde:	push   0x42
  419be0:	sub    al,0xb2
  419be2:	pop    ebp
  419be3:	scas   al,BYTE PTR es:[edi]
  419be4:	jo     0x419bfe
  419be6:	and    al,0x7
  419be8:	aad    0xcd
  419bea:	fstp   TBYTE PTR [ebx+0x31]
  419bed:	sub    ebp,ecx
  419bef:	jp     0x419b7e
  419bf1:	xchg   DWORD PTR [eax+0x79],esi
  419bf4:	rol    BYTE PTR [bx-0x57],0x92
  419bf9:	jge    0x419ba4
  419bfb:	add    DWORD PTR [eax+0x7f],0x53
  419bff:	fwait
  419c00:	aad    0x79
  419c02:	add    eax,0xa5491820
  419c07:	jg     0x419c33
  419c09:	call   0x27ed01f3
  419c0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c10:	xchg   ecx,eax
  419c11:	ins    BYTE PTR es:[edi],dx
  419c12:	xor    DWORD PTR [edx+0x6b94d898],0xc41d87a6
  419c1c:	ss repnz std 
  419c1f:	lock sub ch,ah
  419c22:	xchg   ebp,eax
  419c23:	add    al,0x9a
  419c25:	mov    edi,0x18addb52
  419c2a:	pop    ds
  419c2b:	dec    esp
  419c2c:	mov    ?,WORD PTR [edi]
  419c2e:	rcr    ah,cl
  419c30:	mov    esp,0x7344db41
  419c35:	test   DWORD PTR [esi-0x71],edx
  419c38:	jbe    0x419bbb
  419c3a:	fidiv  DWORD PTR [eax+0x22]
  419c3d:	(bad)  
  419c3e:	in     eax,0xb3
  419c40:	stos   DWORD PTR es:[edi],eax
  419c41:	cdq    
  419c42:	sub    dl,bh
  419c44:	out    0xa7,al
  419c46:	cmp    eax,0xe02cd3ed
  419c4b:	sub    al,0x68
  419c4d:	loope  0x419c89
  419c4f:	repnz out dx,al
  419c51:	sbb    BYTE PTR [eax],al
  419c53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c54:	cmc    
  419c55:	daa    
  419c56:	sub    ebx,DWORD PTR [ecx+0x48]
  419c59:	cmp    DWORD PTR [edx-0x591ac914],edi
  419c5f:	int    0xca
  419c61:	mov    cs,WORD PTR [edi+0x2b]
  419c64:	loopne 0x419bf0
  419c66:	mov    ch,0xf9
  419c68:	mov    ds:0xb0fbfad6,al
  419c6d:	psubq  mm1,mm5
  419c70:	or     bl,cl
  419c72:	(bad)  
  419c73:	sub    esi,DWORD PTR [edx-0x547e8489]
  419c79:	mov    edi,0x108aae93
  419c7e:	add    BYTE PTR ds:0x4e99bcb8,ch
  419c84:	pop    edi
  419c85:	std    
  419c86:	ins    DWORD PTR es:[edi],dx
  419c87:	bound  ecx,QWORD PTR [ecx+esi*2]
  419c8a:	enter  0x982d,0xb9
  419c8e:	fwait
  419c8f:	push   esi
  419c90:	ds retf 0xd672
  419c94:	mov    al,0xc5
  419c96:	mov    bh,0x60
  419c98:	bsf    edi,DWORD PTR [ebp-0x42]
  419c9c:	gs mov eax,0xb8f711c2
  419ca2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ca3:	fcmovnb st,st(1)
  419ca5:	retf   
  419ca6:	enter  0x593e,0xa3
  419caa:	ja     0x419c2c
  419cac:	add    ecx,edi
  419cae:	adc    DWORD PTR [eax+0x1da6e43b],ebx
  419cb4:	push   ecx
  419cb5:	and    BYTE PTR es:[ebx-0x2f],ah
  419cb9:	jae    0x419d2b
  419cbb:	test   edx,esp
  419cbd:	daa    
  419cbe:	mov    dl,0xbb
  419cc0:	adc    DWORD PTR [eax+0x34],ecx
  419cc3:	jmp    0x419c8a
  419cc5:	out    dx,al
  419cc6:	xchg   BYTE PTR [ebx],ah
  419cc8:	dec    ecx
  419cc9:	xor    BYTE PTR [ebp+0x2ffb1b58],bh
  419ccf:	sbb    DWORD PTR [edi-0x47d76c2],ebx
  419cd5:	outs   dx,DWORD PTR ds:[esi]
  419cd6:	rcr    DWORD PTR [edi+0x4943e4ac],0xdc
  419cdd:	mov    cl,0xff
  419cdf:	and    al,0xff
  419ce1:	inc    edx
  419ce2:	imul   ebx,DWORD PTR [edi],0xb0cd4adb
  419ce8:	rcr    BYTE PTR [eax-0x7f1612b5],0x2d
  419cef:	rcr    al,cl
  419cf1:	pop    ss
  419cf2:	(bad)  
  419cf3:	or     BYTE PTR [ecx+0x7e],cl
  419cf6:	rcl    edx,0xd5
  419cf9:	or     edx,DWORD PTR ds:0xac2d1c2a
  419cff:	in     al,dx
  419d00:	adc    al,0x35
  419d02:	and    ah,bl
  419d04:	into   
  419d05:	popa   
  419d06:	sbb    BYTE PTR [edi+0x6d4fa35e],0xea
  419d0d:	xor    BYTE PTR [edx],ch
  419d0f:	add    al,0x94
  419d11:	in     eax,0x1a
  419d13:	pop    es
  419d14:	jg     0x419d93
  419d16:	xchg   ecx,eax
  419d17:	popa   
  419d18:	out    0x30,al
  419d1a:	cmp    eax,DWORD PTR [edi+0x286f5dbd]
  419d20:	call   0x4d9e585b
  419d25:	inc    ebp
  419d26:	inc    ebp
  419d27:	lods   eax,DWORD PTR ds:[esi]
  419d28:	ficomp WORD PTR [eax]
  419d2a:	mov    ds:0xca8f4f23,eax
  419d2f:	es stos BYTE PTR es:[edi],al
  419d31:	push   0x446a675e
  419d36:	pop    es
  419d37:	cmp    BYTE PTR [ebx+0x3f903de3],cl
  419d3d:	pop    DWORD PTR [esi+0x451d9c77]
  419d43:	in     eax,dx
  419d44:	in     eax,0x5
  419d46:	scas   eax,DWORD PTR es:[edi]
  419d47:	jecxz  0x419d6e
  419d49:	mov    WORD PTR [esi-0x3697a3d],ss
  419d4f:	push   ebx
  419d50:	ins    BYTE PTR es:[edi],dx
  419d51:	cdq    
  419d52:	imul   edi,edi,0xecebc3ae
  419d58:	aas    
  419d59:	xor    ah,BYTE PTR [ecx+edx*4-0x12]
  419d5d:	ja     0x419d06
  419d5f:	out    dx,al
  419d60:	adc    DWORD PTR [eax*8-0x6fafdac1],0x1a
  419d68:	cli    
  419d69:	push   ebp
  419d6a:	sbb    al,0xe7
  419d6c:	out    0xeb,eax
  419d6e:	mov    ah,0x12
  419d70:	arpl   WORD PTR ds:0xe3416f51,ax
  419d76:	or     eax,0x9c571af3
  419d7b:	push   esp
  419d7c:	pop    di
  419d7e:	ja     0x419d15
  419d80:	dec    ebx
  419d81:	push   edx
  419d82:	dec    eax
  419d83:	shl    WORD PTR [ebx],cl
  419d86:	mov    eax,ds:0xc211bda1
  419d8b:	or     edi,esp
  419d8d:	adc    al,BYTE PTR [edx+eax*8]
  419d90:	and    BYTE PTR [eax],0xf2
  419d93:	lahf   
  419d94:	dec    edi
  419d95:	cmp    dh,al
  419d97:	pop    es
  419d98:	pop    edi
  419d99:	inc    ebp
  419d9a:	push   0xffffffb0
  419d9c:	push   edx
  419d9d:	jo     0x419dae
  419d9f:	out    0x8d,eax
  419da1:	or     DWORD PTR [ebx+0x34],esp
  419da4:	cmp    eax,0xda6131c4
  419da9:	test   DWORD PTR [ecx],eax
  419dab:	rcr    BYTE PTR [ebx-0x43cdbd67],0xa6
  419db2:	push   cs
  419db3:	or     DWORD PTR [ebx+edx*4],esi
  419db6:	adc    DWORD PTR [eax],eax
  419db8:	retf   0x869d
  419dbb:	popf   
  419dbc:	jo     0x419de9
  419dbe:	mov    bl,0x95
  419dc0:	(bad)  [ebx+0x689be155]
  419dc6:	xchg   ecx,eax
  419dc7:	mov    ebx,0xb20fdefb
  419dcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dcd:	mov    gs,WORD PTR [ebp+edx*1-0x3c]
  419dd1:	mov    ds:0xcd1d63af,al
  419dd6:	xchg   ebp,eax
  419dd7:	les    eax,FWORD PTR [ebp-0x59f82c6b]
  419ddd:	inc    edx
  419dde:	test   al,0x2c
  419de0:	into   
  419de1:	in     eax,dx
  419de2:	xor    eax,0xbc07adb7
  419de7:	jle    0x419de2
  419de9:	int3   
  419dea:	daa    
  419deb:	imul   DWORD PTR [ecx]
  419ded:	repz mov ds:0x41dabb32,al
  419df3:	jmp    0x25de4581
  419df8:	fld    st(3)
  419dfa:	mov    esp,0x6f71c48e
  419dff:	lea    esi,ds:0xd89c58e2
  419e05:	fisub  WORD PTR [ecx]
  419e07:	push   ebp
  419e08:	(bad)
  419e0e:	dec    eax
  419e0f:	push   edx
  419e10:	in     al,dx
  419e11:	jle    0x419e69
  419e13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e14:	push   0x549d268e
  419e19:	mov    cl,0xe1
  419e1b:	dec    ebp
  419e1c:	pop    es
  419e1d:	mov    ch,0xf8
  419e1f:	gs jae 0x419e53
  419e22:	pop    ds
  419e23:	and    ah,BYTE PTR [edi*4-0x3b29b3c5]
  419e2a:	(bad)  
  419e2b:	mov    bl,0x10
  419e2d:	cmp    BYTE PTR [ebp+edx*8+0x30],ch
  419e31:	mov    al,ds:0x5eabfd73
  419e36:	dec    ebx
  419e37:	inc    esi
  419e38:	hlt    
  419e39:	sbb    esi,DWORD PTR [ecx-0x5481f33b]
  419e3f:	(bad)  
  419e40:	jb     0x419ebb
  419e42:	mov    dl,0xdb
  419e44:	je     0x419e1b
  419e46:	dec    esp
  419e47:	popa   
  419e48:	(bad)  
  419e49:	in     eax,0x69
  419e4b:	push   edx
  419e4c:	cmp    DWORD PTR [ebp-0x56],0x929e119a
  419e53:	sti    
  419e54:	adc    eax,0xcfcbd848
  419e59:	sub    BYTE PTR [ebx],bl
  419e5b:	inc    esp
  419e5c:	jle    0x419e22
  419e5e:	push   ecx
  419e5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e60:	pop    ebp
  419e61:	retf   0x29d5
  419e64:	push   edx
  419e65:	fadd   QWORD PTR [ebp-0x44]
  419e68:	(bad)  
  419e69:	cs in  al,0x53
  419e6c:	or     edi,0xfffffffd
  419e6f:	inc    esi
  419e70:	out    dx,eax
  419e71:	test   eax,0xecd2124d
  419e76:	add    al,0x21
  419e78:	call   0xcd907fc
  419e7d:	test   DWORD PTR [eax],0x46fc896
  419e83:	test   eax,0x10568c0f
  419e88:	pop    eax
  419e89:	ja     0x419e8d
  419e8b:	jmp    0x419f02
  419e8d:	mov    al,BYTE PTR [ebx]
  419e8f:	mov    dh,0x22
  419e91:	sbb    DWORD PTR [edx+0x29],0xc9a0a040
  419e98:	call   0x96566bc0
  419e9d:	or     bh,BYTE PTR [ebp-0x61]
  419ea0:	and    DWORD PTR [esi-0x65],esi
  419ea3:	xor    ch,al
  419ea5:	es retf 0xc559
  419ea9:	jb     0x419e48
  419eab:	and    ah,BYTE PTR [edx+edi*4-0x23]
  419eaf:	and    al,0x35
  419eb1:	adc    edx,DWORD PTR [ebp+0x6657cd3f]
  419eb7:	add    cl,0xb1
  419eba:	pop    edx
  419ebb:	mov    dl,BYTE PTR [eax]
  419ebd:	push   ss
  419ebe:	es pop es
  419ec0:	adc    dh,BYTE PTR [esi+0x67]
  419ec3:	pop    es
  419ec4:	les    esp,FWORD PTR [edx+0x594d26d7]
  419eca:	pop    ds
  419ecb:	lods   eax,DWORD PTR ds:[esi]
  419ecc:	jecxz  0x419f4a
  419ece:	add    esi,edi
  419ed0:	outs   dx,BYTE PTR ds:[esi]
  419ed1:	mov    ss,esi
  419ed3:	add    bl,BYTE PTR es:[ebx+0x216142ac]
  419eda:	sub    dh,al
  419edc:	sahf   
  419edd:	xor    ebp,DWORD PTR [edx]
  419edf:	add    al,al
  419ee1:	jl     0x419f1a
  419ee3:	fcom   st(7)
  419ee5:	cmp    al,0xac
  419ee7:	das    
  419ee8:	shl    BYTE PTR [ebp+0x49],cl
  419eeb:	adc    eax,0x231883b4
  419ef0:	add    BYTE PTR ds:0x169b293,dh
  419ef6:	(bad)  
  419ef7:	stc    
  419ef8:	dec    edx
  419ef9:	push   cs
  419efa:	iret   
  419efb:	leave  
  419efc:	jae    0x419f57
  419efe:	mov    edx,0x1be59f27
  419f03:	jle    0x419ede
  419f05:	jnp    0x419f26
  419f07:	adc    DWORD PTR [edi+ebp*1-0x7],ebx
  419f0b:	pop    esp
  419f0c:	shl    esp,1
  419f0e:	mov    ss,WORD PTR [esi-0x4a]
  419f11:	outs   dx,DWORD PTR ds:[esi]
  419f12:	xchg   esi,eax
  419f13:	push   es
  419f14:	mov    ch,0xa1
  419f16:	pushf  
  419f17:	push   ss
  419f18:	add    ebx,DWORD PTR [eax+0x4381d0b]
  419f1e:	cmp    dh,BYTE PTR [esi-0x47]
  419f21:	push   esp
  419f22:	outs   dx,BYTE PTR ds:[esi]
  419f23:	sbb    edx,DWORD PTR [ecx-0x48d94978]
  419f29:	mov    es,WORD PTR [ecx]
  419f2b:	pop    eax
  419f2c:	dec    ecx
  419f2d:	mov    edi,0xbdfc89f6
  419f32:	add    al,0x68
  419f34:	sbb    edx,DWORD PTR [ebx-0x380d1bd9]
  419f3a:	pop    ebp
  419f3b:	(bad)  
  419f3d:	jmp    0xe37fc265
  419f42:	cmp    DWORD PTR [esi+0x6202c419],eax
  419f48:	mov    ebp,DWORD PTR [ebp-0x2962da49]
  419f4e:	test   al,0x5
  419f50:	push   edx
  419f51:	push   ds
  419f52:	aam    0x57
  419f54:	(bad)  
  419f55:	mov    ds:0xb004650b,eax
  419f5a:	fld    QWORD PTR [ebx]
  419f5c:	pop    ecx
  419f5d:	mov    esp,0x83bbb09a
  419f62:	sub    DWORD PTR [esi-0x43],ecx
  419f65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f66:	arpl   WORD PTR [esi+0x516bebd8],dx
  419f6c:	sbb    BYTE PTR [edx+0x62d32e37],bl
  419f72:	out    dx,eax
  419f73:	push   edx
  419f74:	int3   
  419f75:	inc    edi
  419f76:	jbe    0x419f9f
  419f78:	jno    0x419fc1
  419f7a:	adc    cl,BYTE PTR [edx+0x28]
  419f7d:	or     dh,bh
  419f7f:	inc    esi
  419f80:	pop    es
  419f81:	ss retf 0x9132
  419f85:	push   ecx
  419f86:	pusha  
  419f87:	xchg   esp,eax
  419f88:	cdq    
  419f89:	repz jbe 0x419fe1
  419f8c:	pusha  
  419f8d:	inc    ebp
  419f8e:	shl    BYTE PTR [edx+0x8],cl
  419f91:	out    0xc9,al
  419f93:	outs   dx,BYTE PTR ds:[esi]
  419f94:	xchg   edx,eax
  419f95:	pop    ecx
  419f96:	imul   edx,DWORD PTR [ebx],0x2a85deb5
  419f9c:	sbb    eax,0xea9d7040
  419fa1:	(bad)  
  419fa2:	inc    eax
  419fa3:	cmc    
  419fa4:	xchg   edi,eax
  419fa5:	jb     0x419f8e
  419fa7:	xchg   edi,eax
  419fa8:	jno    0x41a014
  419faa:	js     0x419f5b
  419fac:	push   cs
  419fad:	scas   al,BYTE PTR es:[edi]
  419fae:	das    
  419faf:	mov    bh,0xf
  419fb1:	mov    ds:0x156660a4,eax
  419fb6:	lahf   
  419fb7:	es leave 
  419fb9:	mov    dh,0x5a
  419fbb:	push   ebp
  419fbc:	je     0x41a003
  419fbe:	xor    eax,0x6b19a232
  419fc3:	lds    ecx,FWORD PTR [eax+0x68953722]
  419fc9:	add    DWORD PTR [eax-0x4e7ede23],eax
  419fcf:	(bad)  
  419fd0:	xor    BYTE PTR [ecx+0x41],dl
  419fd3:	pop    ecx
  419fd4:	aam    0xca
  419fd6:	push   ds
  419fd7:	lods   al,BYTE PTR ds:[esi]
  419fd8:	cmp    ch,0x8f
  419fdb:	pop    esi
  419fdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fdd:	sub    ah,BYTE PTR [ecx+eax*4+0x73]
  419fe1:	pop    esi
  419fe2:	lea    ebx,[ebp+0x68]
  419fe5:	jg     0x41a022
  419fe7:	(bad)  
  419fe8:	test   eax,0xb6a37af
  419fed:	ror    DWORD PTR [ebx+ebx*4+0x69],cl
  419ff1:	dec    eax
  419ff2:	jbe    0x419fe0
  419ff4:	repz xchg esi,eax
  419ff6:	and    DWORD PTR [ecx-0x67914237],edi
  419ffc:	test   ch,0x44
  419fff:	cmp    dl,BYTE PTR [edi+0x6]
  41a002:	in     eax,dx
  41a003:	and    BYTE PTR [ecx+ecx*8],cl
  41a006:	mov    eax,0x67adcab1
  41a00b:	mov    ebx,0x7f3c5e0
  41a010:	dec    esp
  41a011:	mov    WORD PTR [esp+edi*2-0x16],gs
  41a015:	stos   DWORD PTR es:[edi],eax
  41a016:	enter  0x4b4f,0x5b
  41a01a:	cmp    eax,DWORD PTR [ecx]
  41a01c:	popa   
  41a01d:	arpl   WORD PTR [ebp-0x5eb1e616],cx
  41a023:	xchg   esp,eax
  41a024:	popa   
  41a025:	test   esi,ebp
  41a027:	inc    esp
  41a028:	mov    ch,0x37
  41a02a:	pop    ebp
  41a02b:	inc    ebp
  41a02c:	mov    al,0x32
  41a02e:	lods   al,BYTE PTR ds:[esi]
  41a02f:	mov    edx,0x56e48a1e
  41a034:	cwde   
  41a035:	pushf  
  41a036:	repz retf 0xe4a9
  41a03a:	lods   al,BYTE PTR ds:[esi]
  41a03b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a03c:	dec    ebp
  41a03d:	dec    eax
  41a03e:	inc    esp
  41a03f:	or     DWORD PTR [ebp+0x6351eaa3],esi
  41a045:	pop    eax
  41a046:	mov    ebx,0x5b4c36c0
  41a04b:	daa    
  41a04c:	iret   
  41a04d:	int    0xaa
  41a04f:	adc    al,0x47
  41a051:	shr    DWORD PTR [ebp-0x34],0x42
  41a055:	and    eax,0x7492a57b
  41a05a:	cmp    eax,0x72256789
  41a05f:	xor    eax,0xdd375701
  41a064:	nop
  41a065:	xor    ch,BYTE PTR [ebx]
  41a067:	aas    
  41a068:	xor    eax,0xf5814d93
  41a06d:	mov    di,0x581f
  41a071:	call   0xc2f3d177
  41a076:	popa   
  41a077:	dec    esp
  41a078:	or     ebp,DWORD PTR [eax+0x6d37ed02]
  41a07e:	fdivr  QWORD PTR [ebx+0x6d]
  41a081:	call   0x9df6:0xe8ae5f48
  41a088:	stos   DWORD PTR es:[edi],eax
  41a089:	iret   
  41a08a:	push   esi
  41a08b:	pop    edx
  41a08c:	mov    ebp,0x137372c9
  41a091:	es (bad) 
  41a093:	fstp   QWORD PTR [ebx+0x14]
  41a096:	pop    ebp
  41a097:	adc    bl,BYTE PTR [esi]
  41a099:	sbb    BYTE PTR [ecx+0x2e],al
  41a09c:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41a09e:	jo     0x41a0ed
  41a0a0:	leave  
  41a0a1:	pop    ss
  41a0a2:	ins    BYTE PTR es:[edi],dx
  41a0a3:	call   0xc9e:0x4b8f041b
  41a0aa:	inc    eax
  41a0ab:	pop    esp
  41a0ac:	in     eax,dx
  41a0ad:	dec    esi
  41a0ae:	jle    0x41a034
  41a0b0:	(bad)
  41a0b4:	pop    ecx
  41a0b5:	enter  0x29dd,0x24
  41a0b9:	inc    edx
  41a0ba:	cwde   
  41a0bb:	cld    
  41a0bc:	pop    ebx
  41a0bd:	add    DWORD PTR [esi+0x3250be0a],eax
  41a0c3:	xchg   edx,eax
  41a0c4:	(bad)  
  41a0c5:	pop    edi
  41a0c6:	and    al,0xda
  41a0c8:	pusha  
  41a0c9:	pop    ds
  41a0ca:	add    edx,DWORD PTR [ecx+0x2a78b8b7]
  41a0d0:	pop    es
  41a0d1:	mov    tr4,ebx
  41a0d4:	popa   
  41a0d5:	jns    0x41a0b3
  41a0d7:	outs   dx,DWORD PTR ds:[esi]
  41a0d8:	push   eax
  41a0d9:	mov    ecx,0xf244f4fd
  41a0de:	fucomip st,st(6)
  41a0e0:	aaa    
  41a0e1:	das    
  41a0e2:	mov    DWORD PTR [ebx],esi
  41a0e4:	jmp    DWORD PTR [ebp+0x2c]
  41a0e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0e8:	add    ebx,DWORD PTR [esi+0x6f]
  41a0eb:	cmp    al,0x10
  41a0ed:	inc    ebx
  41a0ee:	(bad)  
  41a0ef:	outs   dx,DWORD PTR ds:[esi]
  41a0f0:	arpl   WORD PTR [eax+ebp*1-0x4c8e9c9e],dx
  41a0f7:	mov    eax,DWORD PTR [edi]
  41a0f9:	sbb    DWORD PTR [eax+0x2a],0x5
  41a0fd:	fcomp  QWORD PTR [ebp-0x65]
  41a100:	lock ret 0xf733
  41a104:	xor    BYTE PTR [ecx],ch
  41a106:	imul   esi,ecx,0x79
  41a109:	jmp    0x68feca91
  41a10e:	stos   DWORD PTR es:[edi],eax
  41a10f:	mov    ah,0x28
  41a111:	into   
  41a112:	je     0x41a0ba
  41a114:	xlat   BYTE PTR ds:[ebx]
  41a115:	imul   esp,ebx,0xffffffe5
  41a118:	cmc    
  41a119:	ficomp DWORD PTR ds:0xb7f2dbe8
  41a11f:	sahf   
  41a120:	(bad)  
  41a121:	pop    edi
  41a122:	inc    esi
  41a123:	push   esp
  41a124:	adc    eax,0xf54f2b6a
  41a129:	dec    edi
  41a12a:	xchg   edi,eax
  41a12b:	pop    ds
  41a12c:	push   esp
  41a12d:	mov    BYTE PTR [esi],cl
  41a12f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a130:	sub    DWORD PTR [ebp-0x33],esi
  41a133:	mov    esp,0x66da6c66
  41a138:	and    BYTE PTR [edi],bh
  41a13a:	pop    eax
  41a13b:	and    al,0x49
  41a13d:	xchg   esp,eax
  41a13e:	leave  
  41a13f:	in     al,0x58
  41a141:	sti    
  41a142:	(bad)  
  41a143:	iretw  
  41a145:	shl    DWORD PTR [bx-0x1a2c],1
  41a14a:	inc    eax
  41a14b:	push   es
  41a14c:	push   esi
  41a14d:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41a14f:	leave  
  41a150:	cmp    al,0x10
  41a152:	int3   
  41a153:	mov    ah,0x7d
  41a155:	sbb    al,0x3a
  41a157:	std    
  41a158:	cs hlt 
  41a15a:	(bad)  
  41a15b:	push   ds
  41a15c:	mov    al,0x49
  41a15e:	ds leave 
  41a160:	jp     0x41a13e
  41a162:	jl     0x41a10b
  41a164:	gs out 0x23,eax
  41a167:	jns    0x41a161
  41a169:	test   al,0x0
  41a16b:	iret   
  41a16c:	mov    edi,0xd1acfb82
  41a171:	adc    al,0x13
  41a173:	adc    al,0x47
  41a175:	mov    bh,0x47
  41a177:	adc    eax,0xaf6acd9f
  41a17c:	push   ds
  41a17d:	push   ss
  41a17e:	adc    BYTE PTR [ecx+0xedbf61],al
  41a184:	jae    0x41a156
  41a186:	push   es
  41a187:	jo     0x41a111
  41a189:	int    0x8f
  41a18b:	mov    esp,0x80754c46
  41a190:	outs   dx,BYTE PTR ds:[esi]
  41a191:	out    0xca,eax
  41a193:	push   ss
  41a194:	loop   0x41a1fb
  41a196:	cld    
  41a197:	dec    ecx
  41a198:	xor    BYTE PTR [edx+esi*2],ch
  41a19b:	es loopne 0x41a173
  41a19e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a19f:	je     0x41a1e0
  41a1a1:	sbb    edx,DWORD PTR [edx]
  41a1a3:	fadd   QWORD PTR [esi-0x35]
  41a1a6:	mov    ecx,0xd9bdea3d
  41a1ab:	dec    edi
  41a1ac:	sub    DWORD PTR [ebp+edx*8-0x227dbd9d],ebx
  41a1b3:	fcom   DWORD PTR ds:0xf18f37cf
  41a1b9:	dec    ecx
  41a1ba:	jp     0x41a16b
  41a1bc:	push   DWORD PTR [eax+0x5f]
  41a1bf:	mov    esi,0x2ddeb90f
  41a1c4:	(bad)  
  41a1c5:	push   eax
  41a1c6:	imul   edi,DWORD PTR [ebx+0x10],0xffffffb1
  41a1ca:	adc    DWORD PTR [eax-0x2cf35a97],0xd0c50a55
  41a1d4:	cmp    al,0x16
  41a1d6:	push   cs
  41a1d7:	sbb    BYTE PTR [eax-0x20],0xa
  41a1db:	dec    edi
  41a1dc:	or     BYTE PTR [edi],bl
  41a1de:	push   ecx
  41a1df:	test   eax,0xca34abc8
  41a1e4:	fld    TBYTE PTR [eax+0x5bdac521]
  41a1ea:	les    eax,FWORD PTR [ebp+0x3c]
  41a1ed:	sub    esp,DWORD PTR [edx]
  41a1ef:	aam    0xfc
  41a1f1:	dec    ecx
  41a1f2:	mov    eax,0x53f5a4f3
  41a1f8:	jno    0x41a260
  41a1fa:	xchg   ecx,eax
  41a1fb:	ds (bad) 
  41a1fd:	ror    DWORD PTR [ebp+0x6b8475ec],cl
  41a203:	fldcw  WORD PTR [ebx+0x38]
  41a206:	test   al,0x92
  41a208:	mov    dh,0xcb
  41a20a:	add    eax,0x154efc2d
  41a20f:	adc    al,0xe3
  41a211:	jno    0x41a266
  41a213:	test   al,0x16
  41a215:	pop    esi
  41a216:	push   cs
  41a217:	sahf   
  41a218:	jnp    0x41a1d9
  41a21a:	adc    al,0xe7
  41a21c:	adc    dh,BYTE PTR [ecx+ecx*1+0x1a9bcc1]
  41a223:	dec    ecx
  41a224:	jg     0x41a218
  41a226:	(bad)
  41a22b:	outs   dx,DWORD PTR ds:[esi]
  41a22c:	idiv   ebx
  41a22e:	sbb    eax,0xb6e36685
  41a233:	cmp    esi,edi
  41a235:	or     BYTE PTR [edi-0x4ec10f6],bh
  41a23b:	push   edx
  41a23c:	sbb    al,0x7c
  41a23e:	jl     0x41a22c
  41a240:	arpl   WORD PTR [edx+0x75],cx
  41a243:	pop    edx
  41a244:	sub    BYTE PTR [esi-0x7d],ch
  41a247:	cmp    al,0xde
  41a249:	sbb    BYTE PTR [ecx-0x37b52c2d],ch
  41a24f:	sub    edi,ecx
  41a251:	mov    BYTE PTR [edi+0x4e4d3f9b],0xb6
  41a258:	xor    eax,0xb6ffa5f5
  41a25d:	push   ebx
  41a25e:	(bad)  
  41a25f:	fisubr DWORD PTR [edx+0x7c7cc659]
  41a265:	sbb    edx,DWORD PTR gs:[edi-0x701487a3]
  41a26c:	fiadd  WORD PTR [eax+ecx*4+0x50]
  41a270:	cmp    edi,DWORD PTR [esi+0x19]
  41a273:	and    BYTE PTR [eax+0x4ac4f0b6],0xbb
  41a27a:	pop    ebp
  41a27b:	cdq    
  41a27c:	xchg   ecx,eax
  41a27d:	mov    esp,0xb8a7ac47
  41a282:	xchg   edi,eax
  41a283:	push   cs
  41a284:	cmc    
  41a285:	int    0x8f
  41a287:	shl    BYTE PTR [ebp-0x34],cl
  41a28a:	mov    eax,ds:0x92b125cc
  41a28f:	add    ebp,DWORD PTR [edx-0x49]
  41a292:	xor    ch,BYTE PTR [ecx-0x1d3317ef]
  41a298:	adc    ebp,DWORD PTR [ecx]
  41a29a:	dec    ebx
  41a29b:	xchg   ecx,eax
  41a29c:	cmp    esi,DWORD PTR [edx+0x5be48d91]
  41a2a2:	pop    ebx
  41a2a3:	dec    edx
  41a2a4:	push   ds
  41a2a5:	std    
  41a2a6:	mov    es,esp
  41a2a8:	sub    BYTE PTR [ebp+edi*8+0x77],bl
  41a2ac:	sub    eax,0xf60adec1
  41a2b1:	xchg   ch,dl
  41a2b3:	jae    0x41a23c
  41a2b5:	mov    ecx,DWORD PTR [eax]
  41a2b7:	cmp    ah,BYTE PTR [edi-0x31]
  41a2ba:	cli    
  41a2bb:	(bad)  
  41a2bd:	add    al,0x10
  41a2bf:	mov    ecx,0xc15bcd67
  41a2c4:	bswap  ebp
  41a2c6:	and    al,0xe3
  41a2c8:	sub    al,0xf6
  41a2ca:	cld    
  41a2cb:	push   0x5f
  41a2cd:	std    
  41a2ce:	xor    al,0x31
  41a2d0:	push   ds
  41a2d1:	les    ecx,FWORD PTR [esi-0x48]
  41a2d4:	sar    al,1
  41a2d6:	pushf  
  41a2d7:	xchg   edx,eax
  41a2d8:	sbb    BYTE PTR [esi-0x2a],cl
  41a2db:	fsubrp st(0),st
  41a2dd:	out    0xcf,eax
  41a2df:	sub    ebp,ebp
  41a2e1:	daa    
  41a2e2:	xchg   edi,eax
  41a2e3:	mov    eax,gs
  41a2e5:	(bad)  
  41a2e6:	pop    esp
  41a2e7:	dec    ebp
  41a2e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2e9:	mov    al,0x5f
  41a2eb:	dec    edx
  41a2ec:	out    dx,al
  41a2ed:	cdq    
  41a2ee:	add    BYTE PTR [edi+0x25b2d9da],bl
  41a2f4:	jbe    0x41a31a
  41a2f6:	add    al,bl
  41a2f8:	dec    ebp
  41a2f9:	test   al,0x2c
  41a2fb:	stos   DWORD PTR es:[edi],eax
  41a2fc:	and    al,0xb4
  41a2fe:	jne    0x41a374
  41a300:	fwait
  41a301:	test   DWORD PTR [edi],ebx
  41a303:	call   0x55ed:0x88c84fb9
  41a30a:	jb     0x41a28c
  41a30c:	inc    esi
  41a30d:	and    BYTE PTR [eax],dl
  41a30f:	jmp    0x2f34d419
  41a314:	push   ecx
  41a315:	test   BYTE PTR [ebx-0x7d],al
  41a318:	jns    0x41a370
  41a31a:	inc    BYTE PTR [esi-0xa]
  41a31d:	div    BYTE PTR [esp+eax*4-0x28792414]
  41a324:	push   cs
  41a325:	add    BYTE PTR [edx+0x3b204d6f],bh
  41a32b:	ja     0x41a2b5
  41a32d:	mov    edi,0xc4d24046
  41a332:	mov    edx,0xb5759d5d
  41a337:	cmp    al,0x34
  41a339:	push   ecx
  41a33a:	inc    esp
  41a33b:	inc    ebx
  41a33c:	test   DWORD PTR [eax+eiz*1-0x45],ebx
  41a340:	fisttp DWORD PTR [edx]
  41a342:	ret    
  41a343:	in     eax,dx
  41a344:	mov    al,ds:0x59bd9ae
  41a349:	sbb    DWORD PTR [edx+0x58],esi
  41a34c:	and    ah,0xce
  41a34f:	lock lods al,BYTE PTR ds:[esi]
  41a351:	repnz fisttp DWORD PTR [ebp-0x71]
  41a355:	aaa    
  41a356:	xchg   esi,eax
  41a357:	inc    edi
  41a358:	or     dh,dh
  41a35a:	es xor al,0xb2
  41a35d:	ret    0x74f1
  41a360:	mov    ah,0xc0
  41a362:	test   DWORD PTR ds:0xf308dee7,edx
  41a368:	les    edi,FWORD PTR [eax-0x32]
  41a36b:	out    dx,al
  41a36c:	clc    
  41a36d:	add    ah,BYTE PTR [esi]
  41a36f:	stos   DWORD PTR es:[edi],eax
  41a370:	cli    
  41a371:	jmp    0x41a3b1
  41a373:	in     al,0xe3
  41a375:	push   esp
  41a376:	imul   edx,edi,0xe11bac0b
  41a37c:	sbb    eax,0xd4b88a60
  41a381:	mov    esi,DWORD PTR [edi-0x45]
  41a384:	pop    esp
  41a385:	mov    al,0x1b
  41a387:	fsubr  st(1),st
  41a389:	xlat   BYTE PTR ds:[ebx]
  41a38a:	add    DWORD PTR [ebx+0x27],esp
  41a38d:	imul   ebp,DWORD PTR [edi-0x27],0x93719f8f
  41a394:	dec    edi
  41a395:	and    ecx,DWORD PTR [bp+di-0x6d3a]
  41a39a:	xchg   edx,eax
  41a39b:	mov    dh,0xb2
  41a39d:	cmp    BYTE PTR [eax+0x7d],bl
  41a3a0:	scas   eax,DWORD PTR es:[edi]
  41a3a1:	push   edx
  41a3a2:	push   es
  41a3a3:	out    dx,al
  41a3a4:	loop   0x41a355
  41a3a6:	fs xchg esi,eax
  41a3a8:	sub    al,0xb2
  41a3aa:	inc    edi
  41a3ab:	lahf   
  41a3ac:	jl     0x41a33c
  41a3ae:	inc    ebp
  41a3af:	daa    
  41a3b0:	daa    
  41a3b1:	out    dx,al
  41a3b2:	fimul  WORD PTR [ebx-0x55]
  41a3b5:	ds push ebx
  41a3b7:	add    eax,0x2fbf9bf7
  41a3bc:	rcr    DWORD PTR [eax-0x21],cl
  41a3bf:	cmp    eax,0x2f025fcb
  41a3c4:	inc    esi
  41a3c5:	addr16 in al,dx
  41a3c7:	mov    al,ds:0xc06b9c1
  41a3cc:	or     DWORD PTR [ecx-0x5],edx
  41a3cf:	adc    dh,al
  41a3d1:	pusha  
  41a3d2:	and    DWORD PTR [ecx+0x31],edi
  41a3d5:	aam    0x22
  41a3d7:	jecxz  0x41a452
  41a3d9:	push   0x8f244837
  41a3de:	sbb    BYTE PTR [ecx-0x76],ah
  41a3e1:	scas   eax,DWORD PTR es:[edi]
  41a3e2:	push   es
  41a3e3:	in     al,dx
  41a3e4:	sub    bh,BYTE PTR [ecx-0x3d]
  41a3e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3e8:	aam    0xb1
  41a3ea:	call   0x6d1d:0x5a7ee1a0
  41a3f1:	aas    
  41a3f2:	out    dx,eax
  41a3f3:	test   al,0xea
  41a3f5:	pushf  
  41a3f6:	dec    ecx
  41a3f7:	test   DWORD PTR [edx+edi*8-0x526745f1],0xb7f05fcb
  41a402:	pop    ebx
  41a403:	mov    BYTE PTR [eax+0x2b],al
  41a406:	(bad)  
  41a407:	cmp    BYTE PTR [ebx-0x2da1ca48],ch
  41a40d:	mov    DWORD PTR [edx],eax
  41a40f:	xor    DWORD PTR [edx-0x671513b3],ebp
  41a415:	(bad)  
  41a416:	adc    eax,0x88aecb07
  41a41b:	out    dx,eax
  41a41c:	sbb    DWORD PTR [eax+ecx*4+0x77a4ec93],edi
  41a423:	sub    ecx,ebp
  41a425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a426:	loope  0x41a3f3
  41a428:	pop    esi
  41a429:	lods   al,BYTE PTR ds:[esi]
  41a42a:	mov    ch,0xcd
  41a42c:	xlat   BYTE PTR ds:[ebx]
  41a42d:	jnp    0x41a43b
  41a42f:	pshufw mm1,QWORD PTR [ecx+edi*8-0x80],0x47
  41a435:	(bad)  
  41a436:	leave  
  41a437:	outs   dx,DWORD PTR ds:[esi]
  41a438:	dec    ebp
  41a439:	pop    edi
  41a43a:	stos   DWORD PTR es:[edi],eax
  41a43b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a43c:	mov    bh,BYTE PTR [esi+0xefa2330]
  41a442:	xor    al,0x6c
  41a444:	jmp    0x41a447
  41a446:	mov    bh,0x5b
  41a448:	(bad)  
  41a449:	pop    eax
  41a44a:	les    edi,FWORD PTR [ebp-0x71]
  41a44d:	stos   BYTE PTR es:[edi],al
  41a44e:	mov    al,ds:0x170bd5bf
  41a453:	and    ch,al
  41a455:	cwde   
  41a456:	inc    esi
  41a457:	xchg   edi,eax
  41a458:	mov    ds:0x4e57f95f,eax
  41a45d:	lods   al,BYTE PTR ds:[esi]
  41a45e:	fistp  QWORD PTR [eax-0x86f6527]
  41a464:	scas   eax,DWORD PTR es:[edi]
  41a465:	xor    DWORD PTR [esi-0x1eae886c],edx
  41a46b:	sbb    al,0xb4
  41a46d:	xor    ah,BYTE PTR [eax]
  41a46f:	jo     0x41a455
  41a471:	sub    al,0x8c
  41a473:	imul   BYTE PTR [ebx]
  41a475:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a476:	add    al,0x85
  41a478:	arpl   WORD PTR [esi+0x28],bp
  41a47b:	sar    BYTE PTR [edi+0x6fba7c56],0xa2
  41a482:	mov    dl,0xaa
  41a484:	pop    ds
  41a485:	outs   dx,BYTE PTR ds:[esi]
  41a486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a487:	stos   DWORD PTR es:[edi],eax
  41a488:	test   eax,ebx
  41a48a:	jo     0x41a450
  41a48c:	cld    
  41a48d:	dec    esi
  41a48e:	hlt    
  41a48f:	gs xchg ebp,eax
  41a491:	test   ch,al
  41a493:	jmp    0x41a482
  41a495:	mov    ebp,0xda9b84d1
  41a49a:	pop    ebx
  41a49b:	xor    eax,0xa2bb7837
  41a4a0:	shl    ebx,0x2
  41a4a3:	jle    0x41a4ac
  41a4a5:	inc    esp
  41a4a6:	stos   BYTE PTR es:[edi],al
  41a4a7:	push   0x5487dfe6
  41a4ac:	test   DWORD PTR [ecx-0x8f6d959],ecx
  41a4b2:	sub    cl,BYTE PTR [esi-0x46]
  41a4b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4b6:	sahf   
  41a4b7:	xchg   ebp,eax
  41a4b8:	nop
  41a4b9:	mov    edx,0x142003f2
  41a4be:	test   DWORD PTR [esi],edx
  41a4c0:	adc    bl,BYTE PTR [esi-0x9]
  41a4c3:	rcr    BYTE PTR [edx-0xf0703f3],1
  41a4c9:	jnp    0x41a44f
  41a4cb:	dec    ebx
  41a4cc:	test   al,0x51
  41a4ce:	push   ss
  41a4cf:	pop    ss
  41a4d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4d1:	or     ah,bh
  41a4d3:	xor    eax,0x741c22e1
  41a4d8:	xor    DWORD PTR [edx],eax
  41a4da:	dec    esp
  41a4db:	stos   BYTE PTR es:[edi],al
  41a4dc:	xor    DWORD PTR [ecx+0x2b54fe69],ecx
  41a4e2:	adc    DWORD PTR [edx],0x32112645
  41a4e8:	rcr    esi,cl
  41a4ea:	in     al,0x6e
  41a4ec:	jle    0x41a4a9
  41a4ee:	add    DWORD PTR [ebx+0x8a0ba0],ebx
  41a4f4:	test   ebp,ebp
  41a4f6:	pop    ds
  41a4f7:	pushf  
  41a4f8:	call   0x2516:0x1c3e5936
  41a4ff:	or     BYTE PTR ds:0x1c9061ff,cl
  41a505:	lods   eax,DWORD PTR ds:[esi]
  41a506:	fisubr WORD PTR [ebp+0x49]
  41a509:	jmp    0x41a4d7
  41a50b:	sub    BYTE PTR [ebp-0x10],ch
  41a50e:	ror    DWORD PTR [ecx+0x76be40f3],cl
  41a514:	inc    ebp
  41a515:	xchg   ebx,eax
  41a516:	js     0x41a564
  41a518:	xor    BYTE PTR [ebx-0x7d],bh
  41a51b:	fbstp  TBYTE PTR ds:0x481810f
  41a521:	adc    ch,BYTE PTR [ebp+0x1c]
  41a524:	pop    ebx
  41a525:	sbb    DWORD PTR [esi+0x2a],edi
  41a528:	mov    ds:0x6af75776,al
  41a52d:	and    BYTE PTR [edi+0x1e9774b9],bh
  41a533:	icebp  
  41a534:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a535:	nop
  41a536:	jmp    0x316d:0x188b1f80
  41a53d:	mov    ch,dh
  41a53f:	sub    DWORD PTR [esi+esi*4-0x24],ecx
  41a543:	les    ebx,FWORD PTR [edi]
  41a545:	(bad)  
  41a546:	cwde   
  41a547:	adc    BYTE PTR [eax+0xcb7cdb5],0xbf
  41a54e:	mov    ecx,0x74eca4c0
  41a553:	push   ss
  41a554:	ficomp DWORD PTR [edi-0x1e]
  41a557:	pop    ebx
  41a558:	and    BYTE PTR [ebx],bh
  41a55a:	fisub  WORD PTR [esi+0x25]
  41a55d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a55e:	sub    cl,ah
  41a560:	sbb    ebp,DWORD PTR ds:0xb11d1518
  41a566:	jno    0x41a540
  41a568:	jecxz  0x41a4f1
  41a56a:	adc    ebp,DWORD PTR [edi-0x312b0ec9]
  41a570:	mov    ch,BYTE PTR [ecx-0x27a76bc6]
  41a576:	pop    ebx
  41a577:	je     0x41a59b
  41a579:	inc    edi
  41a57a:	mov    cl,0x81
  41a57c:	or     DWORD PTR [esi+0xb1ae75f],ecx
  41a582:	imul   esp,DWORD PTR [eax],0x5e
  41a585:	adc    al,0x95
  41a587:	sbb    ah,ch
  41a589:	jmp    0x90db:0x2be23968
  41a590:	push   ebp
  41a591:	iret   
  41a592:	and    esi,ebp
  41a594:	mov    edi,0x92103b0d
  41a599:	mov    ebx,0xee431994
  41a59e:	adc    eax,0x2397accb
  41a5a3:	push   esp
  41a5a4:	fwait
  41a5a5:	jp     0x41a55a
  41a5a7:	icebp  
  41a5a8:	cld    
  41a5a9:	dec    ecx
  41a5aa:	addr16 call 0xc24289c1
  41a5b0:	les    esi,FWORD PTR [edi]
  41a5b2:	xchg   BYTE PTR [eax-0x25],cl
  41a5b5:	daa    
  41a5b6:	nop
  41a5b7:	hlt    
  41a5b8:	xchg   ebp,eax
  41a5b9:	fdivr  st,st(0)
  41a5bb:	(bad)  
  41a5bc:	push   ds
  41a5bd:	clc    
  41a5be:	clc    
  41a5bf:	jmp    0xdaee:0x601d0c3c
  41a5c6:	xor    esp,edx
  41a5c8:	mov    esp,0x935aeb05
  41a5cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5ce:	inc    ebp
  41a5cf:	cmp    al,0xdd
  41a5d1:	retf   0xe772
  41a5d4:	shl    dl,1
  41a5d6:	xor    eax,0xc107d643
  41a5db:	sub    al,0x4e
  41a5dd:	fistp  QWORD PTR [edi+ebp*1-0x1f]
  41a5e1:	jmp    0x2914:0xefd47dde
  41a5e8:	sbb    DWORD PTR [eax],0x3
  41a5eb:	jmp    0x756a5cb6
  41a5f0:	or     BYTE PTR [edx-0x6d],bl
  41a5f3:	jl     0x41a58d
  41a5f5:	push   ecx
  41a5f6:	icebp  
  41a5f7:	pop    ss
  41a5f8:	and    BYTE PTR [edi+0x25],0x41
  41a5fc:	mov    ds:0xcae1ab8e,al
  41a601:	sbb    BYTE PTR [ebp+0x3a134885],al
  41a607:	in     eax,dx
  41a608:	lods   eax,DWORD PTR ds:[esi]
  41a609:	adc    al,0x8b
  41a60b:	jle    0x41a5d6
  41a60d:	inc    esi
  41a60e:	pop    ecx
  41a60f:	xor    bh,ah
  41a611:	or     ch,bh
  41a613:	and    esi,ebx
  41a615:	(bad)  
  41a616:	adc    BYTE PTR [edx+esi*4],cl
  41a619:	fild   WORD PTR [ebx+0x2f7099c7]
  41a61f:	sub    dh,BYTE PTR [edi-0x747284bc]
  41a625:	in     eax,dx
  41a626:	inc    edx
  41a627:	adc    dl,BYTE PTR [edx-0x17]
  41a62a:	pop    ebp
  41a62b:	fwait
  41a62c:	enter  0xcaaf,0x1a
  41a630:	dec    ebx
  41a631:	mov    ah,0xda
  41a633:	lods   eax,DWORD PTR ds:[esi]
  41a634:	mov    ecx,0x9e72f35e
  41a639:	jge    0x41a60e
  41a63b:	sti    
  41a63c:	dec    eax
  41a63d:	or     DWORD PTR [ebx+ebp*4],ebp
  41a640:	hlt    
  41a641:	cmp    eax,0x357894f1
  41a646:	lods   al,BYTE PTR ds:[esi]
  41a647:	or     al,0xef
  41a649:	xor    al,BYTE PTR [esi]
  41a64b:	iret   
  41a64c:	out    dx,al
  41a64d:	add    al,0x68
  41a64f:	cmp    DWORD PTR [ecx+0x11],0xffffffc2
  41a653:	or     al,0x61
  41a655:	or     BYTE PTR [esi-0x48],dl
  41a658:	aaa    
  41a659:	jo     0x41a61b
  41a65b:	mov    bl,bl
  41a65d:	cwde   
  41a65e:	repz add DWORD PTR ds:0xe7b03485,esp
  41a665:	sub    DWORD PTR [ebx-0x4d3d6ef],edi
  41a66b:	mov    bl,0x34
  41a66d:	in     eax,dx
  41a66e:	mov    eax,esp
  41a670:	daa    
  41a671:	test   eax,0xa17fa8bc
  41a676:	sub    ebx,DWORD PTR [esi+0x7f994f42]
  41a67c:	das    
  41a67d:	push   ecx
  41a67e:	or     BYTE PTR [esi-0x3d],cl
  41a681:	mov    ebp,0x97331274
  41a686:	inc    eax
  41a687:	inc    DWORD PTR [ebp+edx*4-0x37]
  41a68b:	fst    DWORD PTR [eax+ecx*2+0x2b]
  41a68f:	add    al,0x47
  41a691:	jmp    0x41a67c
  41a693:	inc    ecx
  41a694:	add    bl,al
  41a696:	push   0x13
  41a698:	mov    bl,0x55
  41a69a:	mov    dl,0xea
  41a69c:	sub    cl,bh
  41a69e:	or     eax,DWORD PTR [esi-0x32]
  41a6a1:	lods   al,BYTE PTR ds:[esi]
  41a6a2:	mov    ?,WORD PTR [ebx-0x22]
  41a6a5:	(bad)  
  41a6a7:	mov    ds:0xe99d95e3,al
  41a6ac:	xchg   ecx,eax
  41a6ad:	cmp    al,0x41
  41a6af:	rol    BYTE PTR [edx-0x3639cac5],0x38
  41a6b6:	fisub  WORD PTR [ecx+0x45e5191e]
  41a6bc:	push   0x7
  41a6be:	jb     0x41a6f6
  41a6c0:	dec    eax
  41a6c1:	(bad)  
  41a6c2:	out    dx,eax
  41a6c3:	frstor [eax+0x3258e7bb]
  41a6c9:	sbb    DWORD PTR [esi],esp
  41a6cb:	pop    eax
  41a6cc:	add    al,0x8b
  41a6ce:	iret   
  41a6cf:	aad    0xd3
  41a6d1:	js     0x41a734
  41a6d3:	shl    edx,1
  41a6d5:	icebp  
  41a6d6:	cmp    esi,edx
  41a6d8:	inc    esp
  41a6d9:	arpl   WORD PTR [eax-0x4d3cd5d7],si
  41a6df:	data16 adc dl,0x3a
  41a6e3:	scas   al,BYTE PTR es:[edi]
  41a6e4:	lods   eax,DWORD PTR ds:[esi]
  41a6e5:	rcl    edx,0x35
  41a6e8:	push   edi
  41a6e9:	js     0x41a6b0
  41a6eb:	not    BYTE PTR [esi+0x4e8df4bd]
  41a6f1:	pop    eax
  41a6f2:	sahf   
  41a6f3:	leave  
  41a6f4:	jge    0x41a760
  41a6f6:	or     bh,cl
  41a6f8:	inc    edx
  41a6f9:	mov    dl,0x39
  41a6fb:	mov    bh,0xe3
  41a6fd:	lods   eax,DWORD PTR ds:[esi]
  41a6fe:	cmp    bl,ah
  41a700:	jl     0x41a68b
  41a702:	iret   
  41a703:	int    0x44
  41a705:	dec    edi
  41a706:	mov    ds,esp
  41a708:	sub    eax,DWORD PTR [eax-0x4d]
  41a70b:	and    ebx,ebx
  41a70d:	out    dx,al
  41a70e:	retf   
  41a70f:	hlt    
  41a710:	(bad)  
  41a712:	sbb    al,0x88
  41a714:	or     al,0x5b
  41a716:	nop
  41a717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a718:	lds    ecx,FWORD PTR [ecx-0x3e5449d7]
  41a71e:	xchg   ebx,eax
  41a71f:	enter  0x1c65,0x80
  41a723:	(bad)  
  41a724:	adc    eax,0x2fab09ba
  41a729:	sti    
  41a72a:	or     al,0x7f
  41a72c:	hlt    
  41a72d:	outs   dx,BYTE PTR ds:[esi]
  41a72e:	xchg   ebx,eax
  41a72f:	inc    ebp
  41a730:	xchg   edx,eax
  41a731:	sbb    ecx,DWORD PTR [esp+eax*4]
  41a734:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a735:	push   ds
  41a736:	test   eax,0xe3b8edb2
  41a73b:	and    DWORD PTR [edi+0x43b077e9],edi
  41a741:	enter  0x4655,0xba
  41a745:	pop    ds
  41a746:	jmp    0xca05:0xbf2c7bc9
  41a74d:	xchg   ebp,eax
  41a74e:	sbb    bh,BYTE PTR [ebx+0x4b]
  41a751:	cmp    BYTE PTR [ecx+0x71ae14d5],ch
  41a757:	jnp    0x41a70d
  41a759:	dec    ebx
  41a75a:	int    0x64
  41a75c:	int    0x2f
  41a75e:	mov    ecx,0x4d4f5ce9
  41a763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a764:	mov    edx,0x6b22e5fe
  41a769:	(bad)  
  41a76a:	stc    
  41a76b:	(bad)  
  41a76c:	stc    
  41a76d:	sbb    dh,BYTE PTR [eax]
  41a76f:	cmp    al,0xd4
  41a771:	cmp    edx,DWORD PTR [edx+ecx*1]
  41a774:	jbe    0x41a755
  41a776:	div    BYTE PTR [ecx+0x154a47a1]
  41a77c:	aaa    
  41a77d:	jmp    0x41a7a1
  41a77f:	add    bh,0xf3
  41a782:	inc    eax
  41a783:	das    
  41a784:	and    eax,0xd3dd930e
  41a789:	addr16 dec eax
  41a78b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a78c:	jg     0x41a711
  41a78e:	cwde   
  41a78f:	lock aad 0x4c
  41a792:	inc    eax
  41a793:	out    0xa1,eax
  41a795:	xchg   ebp,eax
  41a796:	stos   DWORD PTR es:[edi],eax
  41a797:	scas   eax,DWORD PTR es:[edi]
  41a798:	or     edx,DWORD PTR [eax-0x102368af]
  41a79e:	push   edi
  41a79f:	sbb    bl,BYTE PTR [edi-0x68]
  41a7a2:	add    ecx,esi
  41a7a4:	inc    eax
  41a7a5:	push   eax
  41a7a6:	mov    ebp,0x683801d3
  41a7ab:	mov    ds:0xa5b6dedf,al
  41a7b0:	sar    BYTE PTR [edi-0x63],0x63
  41a7b4:	jmp    0x41a7cb
  41a7b6:	mov    ds:0x271a1e5d,eax
  41a7bb:	cmc    
  41a7bc:	dec    edx
  41a7bd:	push   esp
  41a7be:	arpl   WORD PTR [edi-0x1ae0963d],di
  41a7c4:	mov    dh,0xf9
  41a7c6:	(bad)  
  41a7c7:	jmp    0x41a78a
  41a7c9:	shl    DWORD PTR [eax-0x7a],1
  41a7cc:	or     ecx,esi
  41a7ce:	mov    esp,0x8e20a581
  41a7d3:	popa   
  41a7d4:	(bad)  
  41a7d5:	out    dx,eax
  41a7d6:	add    eax,0xd0b5bdfb
  41a7db:	or     edi,DWORD PTR [ebx+edi*2-0x4fc1b02a]
  41a7e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7e3:	pushf  
  41a7e4:	sub    BYTE PTR [eax+0x2e],0xcb
  41a7e8:	adc    bl,BYTE PTR [esi-0x4361bce2]
  41a7ee:	fadd   QWORD PTR ds:[eax+0x68eee28c]
  41a7f5:	cmp    ebp,DWORD PTR [edi+0x7b]
  41a7f8:	push   eax
  41a7f9:	(bad)  
  41a7fa:	mov    ds:0x3ccbef29,eax
  41a7ff:	sbb    edx,DWORD PTR [ebp-0x3afa4a3d]
  41a805:	mov    al,0xba
  41a807:	jae    0x41a799
  41a809:	out    dx,eax
  41a80a:	sbb    DWORD PTR [esi-0x29a1acca],esp
  41a810:	push   edi
  41a811:	jb     0x41a7f7
  41a813:	cmp    DWORD PTR [ebx+0x726ee432],0x34
  41a81a:	(bad)  
  41a81b:	out    0xe9,eax
  41a81d:	iret   
  41a81e:	jg     0x41a7b6
  41a820:	loop   0x41a820
  41a822:	test   eax,0x317b9547
  41a827:	or     BYTE PTR [edi-0x9],ch
  41a82a:	push   cs
  41a82b:	jmp    0xfcb7:0x171b7044
  41a832:	aas    
  41a833:	jmp    0x6304e723
  41a838:	sub    DWORD PTR [edi],edx
  41a83a:	ins    BYTE PTR es:[edi],dx
  41a83b:	je     0x41a7c3
  41a83d:	iret   
  41a83e:	dec    ebx
  41a83f:	push   edx
  41a840:	or     al,0x39
  41a842:	cmc    
  41a843:	push   ecx
  41a844:	xchg   esi,eax
  41a845:	mov    dl,0xac
  41a847:	sbb    DWORD PTR [ebx+0x6a675efe],0xffffffd7
  41a84e:	dec    ecx
  41a84f:	inc    ebx
  41a850:	ja     0x41a8c8
  41a852:	clc    
  41a853:	rcr    DWORD PTR [edx+eiz*1-0x56cba5f7],cl
  41a85a:	mov    esi,0xad94a164
  41a85f:	es repnz cli 
  41a862:	cld    
  41a863:	push   ss
  41a864:	je     0x41a859
  41a866:	es ds mov bh,0x31
  41a86a:	daa    
  41a86b:	and    al,0xb3
  41a86d:	outs   dx,DWORD PTR ds:[esi]
  41a86e:	pop    ds
  41a86f:	pop    edi
  41a870:	data16 fsubr QWORD PTR cs:[ebp-0x62]
  41a875:	fst    QWORD PTR [ebp-0x4b]
  41a878:	scas   al,BYTE PTR es:[edi]
  41a879:	enter  0x55b5,0x39
  41a87d:	into   
  41a87e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a87f:	daa    
  41a880:	shl    DWORD PTR ds:0x122dc570,0x5a
  41a887:	cdq    
  41a888:	xchg   ebx,eax
  41a889:	shl    DWORD PTR [edi],0x4d
  41a88c:	and    al,0x11
  41a88e:	adc    al,0xa8
  41a890:	ins    DWORD PTR es:[edi],dx
  41a891:	sbb    BYTE PTR [ebx-0x4e4dd0dc],dl
  41a897:	mov    edi,0xefa2d5b6
  41a89c:	fadd   QWORD PTR [edx+0x6431c786]
  41a8a2:	outs   dx,BYTE PTR ds:[esi]
  41a8a3:	and    DWORD PTR [eax-0x1d],edx
  41a8a6:	jne    0x41a8cb
  41a8a8:	cmp    BYTE PTR [esi+edx*8],cl
  41a8ab:	jle    0x41a86c
  41a8ad:	rcr    DWORD PTR [ecx],1
  41a8af:	xlat   BYTE PTR ds:[ebx]
  41a8b0:	ja     0x41a8a7
  41a8b2:	push   es
  41a8b3:	jbe    0x41a922
  41a8b5:	bound  eax,QWORD PTR [edi]
  41a8b7:	mov    bl,0x92
  41a8b9:	stc    
  41a8ba:	(bad)  
  41a8bb:	out    0xaa,eax
  41a8bd:	cmc    
  41a8be:	cdq    
  41a8bf:	inc    esi
  41a8c0:	imul   ebx,DWORD PTR [edi],0xab7441d
  41a8c6:	mov    WORD PTR [edi+0x13],ds
  41a8c9:	adc    DWORD PTR [ecx],ebp
  41a8cb:	mov    esp,0x79b50fcf
  41a8d0:	jno    0x41a8d5
  41a8d2:	aad    0x87
  41a8d4:	nop
  41a8d5:	gs xchg esi,eax
  41a8d7:	fnstcw WORD PTR [ebp+0x8]
  41a8da:	jl     0x41a957
  41a8dc:	mov    ds:0xa1f90b62,eax
  41a8e1:	clc    
  41a8e2:	retf   
  41a8e3:	sub    DWORD PTR [edi+0x31f91d73],esp
  41a8e9:	inc    edx
  41a8ea:	pop    ebx
  41a8eb:	test   al,0x15
  41a8ed:	sar    BYTE PTR ss:[edx+0x5e],cl
  41a8f1:	ins    DWORD PTR es:[edi],dx
  41a8f2:	xor    esp,DWORD PTR [edi-0x7c7b83ad]
  41a8f8:	loop   0x41a8d2
  41a8fa:	xchg   edx,eax
  41a8fb:	sbb    eax,0xa49f0e2e
  41a900:	aaa    
  41a901:	gs cmp dx,dx
  41a905:	mov    ds:0xccd9c0dc,eax
  41a90a:	addr16 loop 0x41a8d7
  41a90d:	repnz cld 
  41a90f:	and    dh,BYTE PTR [ecx-0x498b8f81]
  41a915:	push   ss
  41a916:	aas    
  41a917:	es mov dl,0x30
  41a91a:	mov    es,WORD PTR [ebx-0x63]
  41a91d:	retf   
  41a91e:	and    eax,0x1f396644
  41a923:	lds    ebp,FWORD PTR [edi-0x27]
  41a926:	xchg   ebx,eax
  41a927:	out    dx,al
  41a928:	lahf   
  41a929:	inc    esp
  41a92a:	dec    edi
  41a92b:	jmp    0x41a8bf
  41a92d:	ror    DWORD PTR [esi],1
  41a92f:	pop    esp
  41a930:	nop
  41a931:	mov    al,0xb2
  41a933:	jb     0x41a943
  41a935:	mov    edx,0xa06b67be
  41a93a:	pop    edx
  41a93b:	aad    0x12
  41a93d:	xlat   BYTE PTR ds:[ebx]
  41a93e:	sar    DWORD PTR [ebx+0x9b22fd7],1
  41a944:	push   ebp
  41a945:	jmp    0xc03ad1d2
  41a94a:	imul   edx,DWORD PTR [ecx+0x63],0xe7d187fc
  41a951:	adc    dh,0x5
  41a954:	das    
  41a955:	adc    DWORD PTR [esi-0x74],ebx
  41a958:	scas   eax,DWORD PTR es:[edi]
  41a959:	or     ebx,DWORD PTR [ecx+0x2de4d67]
  41a95f:	jmp    0x9fbb3f1c
  41a964:	js     0x41a922
  41a966:	inc    esi
  41a967:	adc    cl,BYTE PTR [ebx+0x10]
  41a96a:	in     eax,0xcb
  41a96c:	inc    edx
  41a96d:	or     bh,cl
  41a96f:	stc    
  41a970:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a971:	sbb    eax,eax
  41a973:	repnz in eax,dx
  41a975:	xor    al,0x9b
  41a977:	ja     0x41a9be
  41a979:	fstp   st(6)
  41a97b:	jb     0x41a9cc
  41a97d:	and    dl,ch
  41a97f:	add    BYTE PTR [edi],al
  41a981:	jbe    0x41a9c7
  41a983:	stos   BYTE PTR es:[edi],al
  41a984:	andnps xmm1,XMMWORD PTR [esi]
  41a987:	fcom   QWORD PTR [ebx+eiz*4]
  41a98a:	pusha  
  41a98b:	mov    esi,0x9225319e
  41a990:	xchg   edi,eax
  41a991:	cwde   
  41a992:	push   edx
  41a993:	lds    ebx,FWORD PTR [eax+ebp*8-0x76c75a0e]
  41a99a:	into   
  41a99b:	(bad)  
  41a99c:	in     al,dx
  41a99d:	inc    edi
  41a99e:	loopne 0x41a958
  41a9a0:	inc    edi
  41a9a1:	arpl   WORD PTR [edi+0x49],ax
  41a9a4:	or     bh,BYTE PTR [esp+ebp*4]
  41a9a7:	ficom  WORD PTR [ecx]
  41a9a9:	xor    al,0xba
  41a9ab:	jne    0x41aa07
  41a9ad:	(bad)  
  41a9af:	sahf   
  41a9b0:	fild   QWORD PTR [ecx]
  41a9b2:	dec    ecx
  41a9b3:	xor    edx,eax
  41a9b5:	inc    eax
  41a9b6:	mov    esi,0xdcc52a8c
  41a9bb:	xchg   BYTE PTR [edx],bl
  41a9bd:	shl    DWORD PTR [ebp-0x6a],0xcc
  41a9c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9c2:	das    
  41a9c3:	or     BYTE PTR ds:0xf5b16802,0xbf
  41a9ca:	cs leave 
  41a9cc:	cmp    bl,dh
  41a9ce:	cmp    cl,BYTE PTR [eax+0x1c]
  41a9d1:	mul    DWORD PTR [ebx]
  41a9d3:	dec    DWORD PTR [ecx]
  41a9d5:	into   
  41a9d6:	jmp    0x41a9ae
  41a9d8:	je     0x41a9b1
  41a9da:	jns    0x41a99e
  41a9dc:	dec    esp
  41a9dd:	xchg   esp,eax
  41a9de:	test   BYTE PTR [edx+0x62a86da5],0xda
  41a9e5:	jg     0x41a985
  41a9e7:	ins    BYTE PTR es:[edi],dx
  41a9e8:	inc    ebp
  41a9e9:	adc    esp,DWORD PTR [eax+0x60]
  41a9ec:	(bad)  
  41a9ed:	mov    ecx,0xe664275e
  41a9f2:	mov    esi,0xd7b83eef
  41a9f7:	add    eax,0xd63a42
  41a9fc:	mov    cl,0x91
  41a9fe:	popa   
  41a9ff:	in     al,0x9e
  41aa01:	scas   al,BYTE PTR es:[edi]
  41aa02:	sub    DWORD PTR [esi-0x37],ebp
  41aa05:	ds push esp
  41aa07:	dec    esp
  41aa08:	mov    eax,ds:0xb78bd5d1
  41aa0d:	icebp  
  41aa0e:	push   edi
  41aa0f:	inc    eax
  41aa10:	mov    ebp,0x15b1bf99
  41aa15:	push   edx
  41aa16:	fsub   st(2),st
  41aa18:	inc    esp
  41aa19:	add    dh,BYTE PTR [esi+0xc9a921]
  41aa1f:	rcr    BYTE PTR [eax-0x4c],0x51
  41aa23:	dec    ebx
  41aa24:	mov    ds:0xa58247b6,eax
  41aa29:	cmc    
  41aa2a:	leave  
  41aa2b:	mov    esp,0x181ec7b8
  41aa30:	gs cmp al,0x1e
  41aa33:	jle    0x41a9b9
  41aa35:	inc    DWORD PTR [edx+0x7b32081e]
  41aa3b:	add    ecx,esi
  41aa3d:	cmp    DWORD PTR [ebx-0x11],esp
  41aa40:	xor    eax,0x3ac75cc0
  41aa45:	jne    0x41a9df
  41aa47:	jp     0x41aa19
  41aa49:	ds stc 
  41aa4b:	adc    DWORD PTR [edi-0x66820962],edi
  41aa51:	and    DWORD PTR [edx],0x31
  41aa54:	pop    es
  41aa55:	clc    
  41aa56:	or     al,0x7e
  41aa58:	push   edx
  41aa59:	mov    cl,0x4d
  41aa5b:	pop    ebp
  41aa5c:	mov    eax,ds:0x2bbd7dc2
  41aa61:	sbb    BYTE PTR [eax],bl
  41aa63:	jnp    0x41aa2d
  41aa65:	int    0xae
  41aa67:	stos   DWORD PTR es:[edi],eax
  41aa68:	mov    bh,0xfd
  41aa6a:	fidivr WORD PTR [eax]
  41aa6c:	dec    esp
  41aa6d:	test   al,0xfd
  41aa6f:	adc    eax,0x4515cbae
  41aa74:	dec    esp
  41aa75:	fdiv   QWORD PTR [eax]
  41aa77:	outs   dx,DWORD PTR ds:[esi]
  41aa78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa79:	cmp    DWORD PTR [eax-0x7b49ad4a],ebx
  41aa7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa80:	cmp    al,0xb3
  41aa82:	push   es
  41aa83:	aad    0xef
  41aa85:	cmp    bl,BYTE PTR [eax+0x1570b8a7]
  41aa8b:	das    
  41aa8c:	scas   eax,DWORD PTR es:[edi]
  41aa8d:	jecxz  0x41aabb
  41aa8f:	cli    
  41aa90:	call   0xd0ab:0x1cb3d70d
  41aa97:	push   edx
  41aa98:	adc    eax,0xc9e37324
  41aa9d:	aaa    
  41aa9e:	or     esi,DWORD PTR [ebp+0x69]
  41aaa1:	push   esp
  41aaa2:	pop    esi
  41aaa3:	add    eax,0x24a7c77d
  41aaa8:	fidivr WORD PTR [edi+ebx*4+0x403a6aac]
  41aaaf:	cs ins BYTE PTR es:[edi],dx
  41aab1:	jnp    0x41ab0e
  41aab3:	xchg   esp,eax
  41aab4:	out    dx,al
  41aab5:	imul   edx,DWORD PTR [ebx+0x755ef9da],0xffffff99
  41aabc:	rol    ah,1
  41aabe:	test   al,0x84
  41aac0:	jno    0x41aa7c
  41aac2:	jbe    0x41aa74
  41aac4:	pop    ebx
  41aac5:	ror    DWORD PTR [edx],cl
  41aac7:	and    eax,0xe1501f77
  41aacc:	fs jp  0x41aa8c
  41aacf:	scas   eax,DWORD PTR es:[edi]
  41aad0:	cmp    eax,0x2acce42f
  41aad5:	add    BYTE PTR [esi-0x6f],ch
  41aad8:	mov    al,ds:0xc2a8b0d1
  41aadd:	xor    ebx,ebx
  41aadf:	sub    dl,BYTE PTR [eax+0x38]
  41aae2:	retf   0x2255
  41aae5:	mov    bh,BYTE PTR [edi-0x3d]
  41aae8:	sti    
  41aae9:	sub    ch,BYTE PTR [ebp+edi*4+0x45a719fc]
  41aaf0:	fst    QWORD PTR [esi-0x65]
  41aaf3:	dec    esi
  41aaf4:	stos   DWORD PTR es:[edi],eax
  41aaf5:	lods   al,BYTE PTR ds:[esi]
  41aaf6:	jne    0x41aabc
  41aaf8:	loop   0x41ab43
  41aafa:	outs   dx,BYTE PTR ds:[esi]
  41aafb:	cdq    
  41aafc:	test   al,0x9e
  41aafe:	test   BYTE PTR ds:0xa7782c8f,0xcd
  41ab05:	fs lahf 
  41ab07:	add    edx,ebp
  41ab09:	pop    esi
  41ab0a:	jb     0x41ab42
  41ab0c:	jle    0x41ab02
  41ab0e:	imul   edx,DWORD PTR [ebx+ebx*8-0x3f5517bd],0x21
  41ab16:	adc    ch,BYTE PTR [ebp-0x3daeae05]
  41ab1c:	(bad)  
  41ab1d:	cmp    eax,0x8d1800f7
  41ab22:	inc    esi
  41ab23:	cmc    
  41ab24:	sub    DWORD PTR [eax+0x4b66d83b],esp
  41ab2a:	pushf  
  41ab2b:	dec    ecx
  41ab2c:	push   ecx
  41ab2d:	sbb    edi,DWORD PTR [ecx]
  41ab2f:	ins    BYTE PTR es:[edi],dx
  41ab30:	sbb    dh,BYTE PTR [edi]
  41ab32:	test   al,0xe5
  41ab34:	pop    ebp
  41ab35:	mov    bl,0x7f
  41ab37:	push   esi
  41ab38:	daa    
  41ab39:	lock add BYTE PTR [eax+0x22d81b75],0x34
  41ab41:	loop   0x41aad5
  41ab43:	int3   
  41ab44:	stos   DWORD PTR es:[edi],eax
  41ab45:	xchg   ebx,eax
  41ab46:	in     al,dx
  41ab47:	(bad)  
  41ab48:	sti    
  41ab49:	jno    0x41aaf5
  41ab4b:	xchg   BYTE PTR ds:0x9e478b21,bh
  41ab51:	xchg   DWORD PTR [ecx],ecx
  41ab53:	in     eax,0x19
  41ab55:	sbb    BYTE PTR [ecx+0x5708f8c1],al
  41ab5b:	add    BYTE PTR [edi],cl
  41ab5d:	scas   eax,DWORD PTR es:[edi]
  41ab5e:	retf   0x4d89
  41ab61:	test   al,0x8b
  41ab63:	dec    ebp
  41ab64:	or     BYTE PTR [ebx-0x3e7e53ab],cl
  41ab6a:	(bad)  
  41ab6c:	add    BYTE PTR fs:[ebx],cl
  41ab6f:	retf   0x4d89
  41ab72:	lods   al,BYTE PTR ds:[esi]
  41ab73:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab76:	mov    edx,DWORD PTR [ebp-0x50]
  41ab79:	add    ecx,0x242ebed
  41ab7f:	xor    ecx,edx
  41ab81:	mov    DWORD PTR [ebp-0x50],ecx
  41ab84:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab87:	mov    edx,DWORD PTR [ebp-0x4c]
  41ab8a:	add    ecx,edi
  41ab8c:	and    ecx,edx
  41ab8e:	mov    DWORD PTR [ebp-0x4c],ecx
  41ab91:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab94:	mov    edx,DWORD PTR [ebp-0x48]
  41ab97:	lea    ecx,[edx+ecx*1+0x241fc1f]
  41ab9e:	mov    DWORD PTR [ebp-0x48],ecx
  41aba1:	mov    ecx,DWORD PTR [ebp+0x8]
  41aba4:	mov    edx,0xfa5e15e2
  41aba9:	sub    edx,ecx
  41abab:	add    edx,DWORD PTR [ebp-0x44]
  41abae:	mov    DWORD PTR [ebp-0x44],edx
  41abb1:	mov    ecx,DWORD PTR [ebp+0x8]
  41abb4:	xor    ecx,eax
  41abb6:	add    ecx,esi
  41abb8:	jne    0x4187b7
  41abbe:	mov    ecx,DWORD PTR [ebp-0x8]
  41abc1:	xor    ecx,eax
  41abc3:	mov    eax,DWORD PTR [ebp+0x10]
  41abc6:	add    ecx,esi
  41abc8:	mov    DWORD PTR [eax],ecx
  41abca:	pop    edi
  41abcb:	pop    esi
  41abcc:	pop    ebx
  41abcd:	leave  
  41abce:	ret    0xc
  41abd1:	add    BYTE PTR [eax-0x5ffbffbe],ah
  41abd7:	inc    edx
  41abd8:	add    BYTE PTR [eax],cl
  41abda:	mov    al,ds:0xa00c0042
  41abdf:	inc    edx
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    al,ds:0xa0140042
  41abe7:	inc    edx
  41abe8:	add    BYTE PTR [eax],bl
  41abea:	mov    al,ds:0xa01c0042
  41abef:	inc    edx
  41abf0:	add    BYTE PTR [eax],al
  41abf2:	rol    BYTE PTR [edx+0x0],1
  41abf5:	add    al,0xd0
  41abf7:	inc    edx
  41abf8:	add    BYTE PTR [eax],cl
  41abfa:	rol    BYTE PTR [edx+0x0],1
  41abfd:	or     al,0xd0
  41abff:	inc    edx
  41ac00:	add    BYTE PTR [eax],dl
  41ac02:	rol    BYTE PTR [edx+0x0],1
  41ac05:	adc    al,0xd0
  41ac07:	inc    edx
  41ac08:	add    BYTE PTR [eax],bl
  41ac0a:	rol    BYTE PTR [edx+0x0],1
  41ac0d:	sbb    al,0xd0
  41ac0f:	inc    edx
	...
  41ac24:	scas   al,BYTE PTR es:[edi]
  41ac25:	pop    esp
  41ac26:	nop
  41ac27:	dec    ebp
  41ac28:	add    BYTE PTR [eax],al
  41ac2a:	add    BYTE PTR [eax],al
  41ac2c:	add    al,BYTE PTR [eax]
  41ac2e:	add    BYTE PTR [eax],al
  41ac30:	cmp    eax,0xb0000000
  41ac35:	lods   al,BYTE PTR ds:[esi]
  41ac36:	add    DWORD PTR [eax],eax
  41ac38:	mov    al,0xa0
  41ac3a:	add    DWORD PTR [eax],eax
  41ac3c:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41ac42:	inc    edx
  41ac43:	add    BYTE PTR [eax],cl
  41ac45:	nop
  41ac46:	inc    edx
  41ac47:	add    BYTE PTR [eax+edx*4],cl
  41ac4a:	inc    edx
  41ac4b:	add    BYTE PTR [eax],dl
  41ac4d:	nop
  41ac4e:	inc    edx
  41ac4f:	add    BYTE PTR [eax+edx*4],dl
  41ac52:	inc    edx
  41ac53:	add    BYTE PTR [eax],bl
  41ac55:	nop
  41ac56:	inc    edx
  41ac57:	add    BYTE PTR [eax+edx*4],bl
  41ac5a:	inc    edx
  41ac5b:	add    BYTE PTR [eax],ah
  41ac5d:	nop
  41ac5e:	inc    edx
  41ac5f:	add    BYTE PTR [eax+edx*4],ah
  41ac62:	inc    edx
  41ac63:	add    BYTE PTR [eax],ch
  41ac65:	nop
  41ac66:	inc    edx
  41ac67:	add    BYTE PTR [eax],al
  41ac69:	mov    al,0x42
  41ac6b:	add    BYTE PTR [eax+esi*4],al
  41ac6e:	inc    edx
  41ac6f:	add    BYTE PTR [eax],cl
  41ac71:	mov    al,0x42
  41ac73:	add    BYTE PTR [eax+esi*4],cl
  41ac76:	inc    edx
  41ac77:	add    BYTE PTR [eax],dl
  41ac79:	mov    al,0x42
  41ac7b:	add    BYTE PTR [eax+esi*4],dl
  41ac7e:	inc    edx
  41ac7f:	add    BYTE PTR [eax],bl
  41ac81:	mov    al,0x42
  41ac83:	add    BYTE PTR [eax+esi*4],bl
  41ac86:	inc    edx
  41ac87:	add    BYTE PTR [eax],al
  41ac89:	rol    BYTE PTR [edx+0x0],0x4
  41ac8d:	rol    BYTE PTR [edx+0x0],0x8
  41ac91:	rol    BYTE PTR [edx+0x0],0xc
  41ac95:	rol    BYTE PTR [edx+0x0],0x10
  41ac99:	rol    BYTE PTR [edx+0x0],0x14
  41ac9d:	rol    BYTE PTR [edx+0x0],0x18
  41aca1:	rol    BYTE PTR [edx+0x0],0x1c
  41aca5:	rol    BYTE PTR [edx+0x0],0x0
  41aca9:	add    BYTE PTR [eax],al
  41acab:	add    BYTE PTR [eax],al
  41acad:	add    BYTE PTR [eax],al
  41acaf:	add    BYTE PTR [edx+0x53],dl
  41acb2:	inc    esp
  41acb3:	push   ebx
  41acb4:	xor    ch,BYTE PTR [edx-0x7649f917]
  41acba:	lahf   
  41acbb:	dec    esi
  41acbc:	xchg   ebp,eax
  41acbd:	push   edx
  41acbe:	out    0xf8,eax
  41acc0:	add    bl,al
  41acc2:	fdivr  DWORD PTR [esi+0x1]
  41acc5:	add    BYTE PTR [eax],al
  41acc7:	add    BYTE PTR [ebx+0x3a],al
  41acca:	pop    esp
  41accb:	inc    ebx
  41accc:	jne    0x41ad40
  41acce:	jb     0x41ad35
  41acd0:	outs   dx,BYTE PTR ds:[esi]
  41acd1:	je     0x41ad17
  41acd3:	popa   
  41acd4:	je     0x41ad37
  41acd6:	pop    esp
  41acd7:	dec    ebp
  41acd8:	outs   dx,DWORD PTR ds:[esi]
  41acd9:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  41ace1:	ins    BYTE PTR es:[edi],dx
  41ace2:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  41ace9:	dec    esi
  41acea:	gs ja  0x41aced
  41aced:	mov    edx,DWORD PTR [ebp-0x14]
  41acf0:	sub    esp,0xe4
  41acf6:	push   ebx
  41acf7:	push   edi
  41acf8:	mov    eax,ebx
  41acfa:	xchg   ecx,eax
  41acfb:	mov    eax,DWORD PTR [ebp+0x8]
  41acfe:	mov    edi,0xf89c85b9
  41ad03:	cmp    eax,edi
  41ad05:	jne    0x41b0a1
  41ad0b:	mov    eax,DWORD PTR [ebp+0xc]
  41ad0e:	cmp    eax,0xf89c85b8
  41ad13:	jne    0x41b0a1
  41ad19:	mov    eax,DWORD PTR [ebp+0x24]
  41ad1c:	mov    DWORD PTR [ebp-0x4],eax
  41ad1f:	mov    BYTE PTR [ebp-0x18],0x3
  41ad23:	mov    BYTE PTR [ebp-0x17],0x1e
  41ad27:	mov    BYTE PTR [ebp-0x16],0x1
  41ad2b:	mov    BYTE PTR [ebp-0x15],0x4f
  41ad2f:	mov    BYTE PTR [ebp-0x14],0x48
  41ad33:	mov    BYTE PTR [ebp-0x13],0x7a
  41ad37:	mov    BYTE PTR [ebp-0x20],0xd
  41ad3b:	mov    BYTE PTR [ebp-0x1f],0xf
  41ad3f:	mov    BYTE PTR [ebp-0x1e],0x1d
  41ad43:	mov    BYTE PTR [ebp-0x1d],0x8
  41ad47:	mov    BYTE PTR [ebp-0x1c],0x4f
  41ad4b:	mov    BYTE PTR [ebp-0x1b],0x48
  41ad4f:	mov    BYTE PTR [ebp-0x1a],0x7a
  41ad53:	mov    BYTE PTR [ebp-0x28],0xf
  41ad57:	mov    BYTE PTR [ebp-0x27],0x2
  41ad5b:	mov    BYTE PTR [ebp-0x26],0x6
  41ad5f:	mov    BYTE PTR [ebp-0x25],0xf3
  41ad63:	mov    BYTE PTR [ebp-0x24],0x19
  41ad67:	mov    BYTE PTR [ebp-0x23],0xa
  41ad6b:	push   esi
  41ad6c:	mov    BYTE PTR [ebp-0x22],0x1
  41ad70:	xor    edx,edx
  41ad72:	mov    BYTE PTR [ebp-0x21],0x7a
  41ad76:	xor    esi,esi
  41ad78:	mov    eax,0xf7
  41ad7d:	lea    ecx,[ebp+esi*1-0x18]
  41ad81:	movzx  ebx,BYTE PTR [ecx]
  41ad84:	xor    ebx,0x73
  41ad87:	add    ebx,eax
  41ad89:	inc    esi
  41ad8a:	mov    BYTE PTR [ecx],bl
  41ad8c:	cmp    esi,0x6
  41ad8f:	jb     0x41ad7d
  41ad91:	xor    esi,esi
  41ad93:	lea    ecx,[ebp+esi*1-0x20]
  41ad97:	movzx  ebx,BYTE PTR [ecx]
  41ad9a:	xor    ebx,0x73
  41ad9d:	add    ebx,eax
  41ad9f:	inc    esi
  41ada0:	mov    BYTE PTR [ecx],bl
  41ada2:	cmp    esi,0x7
  41ada5:	jb     0x41ad93
  41ada7:	xor    esi,esi
  41ada9:	lea    ecx,[ebp+esi*1-0x28]
  41adad:	movzx  ebx,BYTE PTR [ecx]
  41adb0:	xor    ebx,0x73
  41adb3:	add    ebx,eax
  41adb5:	inc    esi
  41adb6:	mov    BYTE PTR [ecx],bl
  41adb8:	cmp    esi,0x8
  41adbb:	jb     0x41ada9
  41adbd:	lea    eax,[ebp-0x2c]
  41adc0:	mov    DWORD PTR [ebp-0x8],eax
  41adc3:	mov    ecx,DWORD PTR [ebp-0x8]
  41adc6:	mov    eax,0x7113fcef
  41adcb:	mov    DWORD PTR [ecx],eax
  41adcd:	mov    ecx,DWORD PTR [ebp-0x2c]
  41add0:	cmp    ecx,eax
  41add2:	jne    0x41adde
  41add4:	mov    DWORD PTR [ebp-0x8],edi
  41add7:	mov    DWORD PTR [ebp-0x8],0xf89c85ea
  41adde:	mov    eax,DWORD PTR [ebp-0x4]
  41ade1:	mov    eax,DWORD PTR [eax+0x18c]
  41ade7:	mov    ebx,0x7510899
  41adec:	mov    esi,0x3272e0
  41adf1:	cmp    DWORD PTR [eax],edx
  41adf3:	jne    0x41b03d
  41adf9:	mov    eax,DWORD PTR [ebp-0x4]
  41adfc:	mov    eax,DWORD PTR [eax+0x17c]
  41ae02:	mov    DWORD PTR [eax],edx
  41ae04:	mov    eax,DWORD PTR [ebp-0x4]
  41ae07:	mov    eax,DWORD PTR [eax+0x180]
  41ae0d:	mov    DWORD PTR [eax],edx
  41ae0f:	mov    edi,0x4e3c
  41ae14:	mov    eax,0x4f8f
  41ae19:	mov    WORD PTR [ebp-0x78],ax
  41ae1d:	mov    eax,edi
  41ae1f:	mov    WORD PTR [ebp-0x76],ax
  41ae23:	add    eax,0x43
  41ae26:	mov    WORD PTR [ebp-0x74],ax
  41ae2a:	lea    eax,[edi+0x3]
  41ae2d:	mov    WORD PTR [ebp-0x72],ax
  41ae31:	mov    eax,0x4fac
  41ae36:	mov    WORD PTR [ebp-0x70],ax
  41ae3a:	lea    eax,[edi-0x4]
  41ae3d:	mov    WORD PTR [ebp-0x6e],ax
  41ae41:	add    eax,0x45
  41ae44:	mov    WORD PTR [ebp-0x6c],ax
  41ae48:	lea    eax,[edi-0x2]
  41ae4b:	mov    WORD PTR [ebp-0x6a],ax
  41ae4f:	mov    eax,edi
  41ae51:	mov    WORD PTR [ebp-0x68],ax
  41ae55:	dec    eax
  41ae56:	mov    WORD PTR [ebp-0x66],ax
  41ae5a:	mov    eax,0x99ff
  41ae5f:	mov    WORD PTR [ebp-0x64],ax
  41ae63:	mov    eax,0x8288
  41ae68:	mov    WORD PTR [ebp-0x62],ax
  41ae6c:	mov    eax,0xd78d
  41ae71:	mov    WORD PTR [ebp-0x60],ax
  41ae75:	add    eax,0x1c
  41ae78:	mov    WORD PTR [ebp-0x5e],ax
  41ae7c:	mov    eax,0x27aa
  41ae81:	mov    WORD PTR [ebp-0x5c],ax
  41ae85:	mov    eax,0x47aa
  41ae8a:	mov    WORD PTR [ebp-0x5a],ax
  41ae8e:	lea    eax,[edi-0x3]
  41ae91:	push   0x8
  41ae93:	mov    WORD PTR [ebp-0x58],ax
  41ae97:	mov    DWORD PTR [ebp-0x10],0xf306020f
  41ae9e:	mov    DWORD PTR [ebp-0xc],0x7a010a19
  41aea5:	lea    eax,[ebp-0x10]
  41aea8:	pop    ecx
  41aea9:	mov    dl,BYTE PTR [eax]
  41aeab:	xor    dl,0x73
  41aeae:	sub    dl,0x9
  41aeb1:	mov    BYTE PTR [eax],dl
  41aeb3:	inc    eax
  41aeb4:	dec    ecx
  41aeb5:	jne    0x41aea9
  41aeb7:	lea    eax,[ebp-0x10]
  41aeba:	mov    DWORD PTR [ebp-0xb8],eax
  41aec0:	lea    eax,[ebp-0xbc]
  41aec6:	push   eax
  41aec7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeca:	xor    eax,ebx
  41aecc:	add    eax,esi
  41aece:	push   eax
  41aecf:	mov    eax,DWORD PTR [ebp-0x4]
  41aed2:	add    eax,0x66
  41aed5:	push   eax
  41aed6:	mov    eax,DWORD PTR [ebp-0x4]
  41aed9:	mov    eax,DWORD PTR [eax+0x198]
  41aedf:	mov    DWORD PTR [ebp-0xbc],0x1
  41aee9:	push   DWORD PTR [eax]
  41aeeb:	mov    eax,DWORD PTR [ebp+0x10]
  41aeee:	call   eax
  41aef0:	mov    ecx,DWORD PTR [ebp+0x8]
  41aef3:	xor    ecx,ebx
  41aef5:	add    ecx,esi
  41aef7:	mov    DWORD PTR [ebp-0x8],eax
  41aefa:	cmp    eax,ecx
  41aefc:	jne    0x41af17
  41aefe:	mov    eax,ds:0x33730bee
  41af03:	or     eax,0x22150bef
  41af08:	mov    ds:0x33730bee,eax
  41af0d:	add    eax,0x3372e90f
  41af12:	mov    ds:0x33730bee,eax
  41af17:	mov    ecx,0x4f84
  41af1c:	mov    eax,ecx
  41af1e:	mov    WORD PTR [ebp-0x40],ax
  41af22:	mov    eax,0x4e71
  41af27:	mov    edx,eax
  41af29:	mov    WORD PTR [ebp-0x3e],dx
  41af2d:	lea    edx,[ecx+0x15]
  41af30:	mov    WORD PTR [ebp-0x3c],dx
  41af34:	add    edx,0xfffffff8
  41af37:	mov    WORD PTR [ebp-0x3a],dx
  41af3b:	lea    edx,[ecx+0xf]
  41af3e:	mov    WORD PTR [ebp-0x38],dx
  41af42:	add    edx,0x1b
  41af45:	mov    WORD PTR [ebp-0x36],dx
  41af49:	lea    edx,[ecx+0x21]
  41af4c:	mov    WORD PTR [ebp-0x34],dx
  41af50:	mov    WORD PTR [ebp-0x32],cx
  41af54:	mov    ecx,edi
  41af56:	mov    WORD PTR [ebp-0x30],cx
  41af5a:	lea    ecx,[edx-0x1]
  41af5d:	mov    edx,ecx
  41af5f:	mov    WORD PTR [ebp-0x54],dx
  41af63:	mov    edx,eax
  41af65:	mov    WORD PTR [ebp-0x52],dx
  41af69:	add    edx,0x8
  41af6c:	mov    WORD PTR [ebp-0x50],dx
  41af70:	mov    WORD PTR [ebp-0x4e],ax
  41af74:	add    eax,0x2
  41af77:	mov    WORD PTR [ebp-0x4c],ax
  41af7b:	lea    eax,[ecx-0x16]
  41af7e:	mov    WORD PTR [ebp-0x4a],ax
  41af82:	add    eax,0xfffffff7
  41af85:	mov    WORD PTR [ebp-0x48],ax
  41af89:	mov    WORD PTR [ebp-0x46],cx
  41af8d:	mov    WORD PTR [ebp-0x44],di
  41af91:	mov    eax,DWORD PTR [ebp+0x8]
  41af94:	movzx  ecx,WORD PTR [ebp-0x54]
  41af98:	xor    eax,ebx
  41af9a:	add    eax,esi
  41af9c:	xor    eax,ecx
  41af9e:	mov    WORD PTR [ebp-0x54],ax
  41afa2:	mov    eax,DWORD PTR [ebp+0x8]
  41afa5:	movzx  ecx,WORD PTR [ebp-0x40]
  41afa9:	xor    eax,ebx
  41afab:	add    eax,esi
  41afad:	xor    eax,ecx
  41afaf:	mov    WORD PTR [ebp-0x40],ax
  41afb3:	xor    eax,eax
  41afb5:	mov    WORD PTR [ebp-0xd0],ax
  41afbc:	mov    WORD PTR [ebp-0xe4],ax
  41afc3:	mov    edi,DWORD PTR [ebp+0x24]
  41afc6:	lea    eax,[ebp-0xd0]
  41afcc:	lea    edx,[ebp-0x54]
  41afcf:	mov    DWORD PTR [ebp-0xbc],0x2
  41afd9:	mov    DWORD PTR [ebp-0xb8],eax
  41afdf:	call   0x41d97e
  41afe4:	mov    DWORD PTR [ebp-0xb4],eax
  41afea:	lea    eax,[ebp-0xbc]
  41aff0:	push   eax
  41aff1:	mov    eax,DWORD PTR [ebp+0xc]
  41aff4:	xor    eax,ebx
  41aff6:	add    eax,esi
  41aff8:	push   eax
  41aff9:	lea    eax,[ebp-0x78]
  41affc:	push   eax
  41affd:	push   DWORD PTR [ebp-0x8]
  41b000:	mov    eax,DWORD PTR [ebp+0x10]
  41b003:	call   eax
  41b005:	mov    edi,DWORD PTR [ebp+0x24]
  41b008:	lea    eax,[ebp-0xe4]
  41b00e:	lea    edx,[ebp-0x40]
  41b011:	mov    DWORD PTR [ebp-0xb8],eax
  41b017:	call   0x41d97e
  41b01c:	mov    DWORD PTR [ebp-0xb4],eax
  41b022:	lea    eax,[ebp-0xbc]
  41b028:	push   eax
  41b029:	mov    eax,DWORD PTR [ebp+0xc]
  41b02c:	xor    eax,ebx
  41b02e:	add    eax,esi
  41b030:	push   eax
  41b031:	lea    eax,[ebp-0x78]
  41b034:	push   eax
  41b035:	push   DWORD PTR [ebp-0x8]
  41b038:	mov    eax,DWORD PTR [ebp+0x10]
  41b03b:	call   eax
  41b03d:	mov    eax,DWORD PTR [ebp+0x14]
  41b040:	push   DWORD PTR [ebp-0x4]
  41b043:	push   DWORD PTR [ebp+0x20]
  41b046:	push   DWORD PTR [ebp+0x1c]
  41b049:	push   DWORD PTR [ebp+0x18]
  41b04c:	push   DWORD PTR [ebp+0x10]
  41b04f:	push   DWORD PTR [ebp+0x8]
  41b052:	push   DWORD PTR [ebp+0xc]
  41b055:	call   0x41c1fa
  41b05a:	test   eax,eax
  41b05c:	je     0x41b0a0
  41b05e:	add    DWORD PTR [ebp-0x4],eax
  41b061:	push   DWORD PTR [ebp-0x4]
  41b064:	lea    edi,[ebp+0x4]
  41b067:	call   0x41b490
  41b06c:	mov    eax,DWORD PTR [ebp-0x4]
  41b06f:	mov    eax,DWORD PTR [eax+0x1c8]
  41b075:	mov    eax,DWORD PTR [eax]
  41b077:	xor    eax,ebx
  41b079:	add    eax,esi
  41b07b:	mov    eax,DWORD PTR [ebp-0x4]
  41b07e:	jne    0x41b096
  41b080:	mov    ecx,DWORD PTR [ebp-0x4]
  41b083:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b089:	push   DWORD PTR [ecx]
  41b08b:	mov    eax,DWORD PTR [eax+0x1d8]
  41b091:	call   DWORD PTR [eax+0x28]
  41b094:	jmp    0x41b0a0
  41b096:	mov    eax,DWORD PTR [eax+0x17c]
  41b09c:	mov    eax,DWORD PTR [eax]
  41b09e:	add    DWORD PTR [edi],eax
  41b0a0:	pop    esi
  41b0a1:	pop    edi
  41b0a2:	pop    ebx
  41b0a3:	leave  
  41b0a4:	ret    0x20
  41b0a7:	push   edi
  41b0a8:	push   esi
  41b0a9:	push   ebx
  41b0aa:	push   ebp
  41b0ab:	mov    ebp,esp
  41b0ad:	mov    eax,DWORD PTR [ebp+0x24]
  41b0b0:	add    DWORD PTR [ebp+0x28],eax
  41b0b3:	push   eax
  41b0b4:	cld    
  41b0b5:	mov    esi,DWORD PTR [ebp+0x18]
  41b0b8:	add    DWORD PTR [ebp+0x1c],esi
  41b0bb:	push   esi
  41b0bc:	mov    esi,DWORD PTR [ebp+0x14]
  41b0bf:	lods   eax,DWORD PTR ds:[esi]
  41b0c0:	xchg   edx,eax
  41b0c1:	push   edx
  41b0c2:	mov    cl,BYTE PTR [esi-0x2]
  41b0c5:	or     eax,0xffffffff
  41b0c8:	shl    eax,cl
  41b0ca:	not    eax
  41b0cc:	push   eax
  41b0cd:	mov    cl,dh
  41b0cf:	or     eax,0xffffffff
  41b0d2:	shl    eax,cl
  41b0d4:	not    eax
  41b0d6:	push   eax
  41b0d7:	add    cl,dl
  41b0d9:	mov    edi,esi
  41b0db:	sub    esp,0xc
  41b0de:	sub    eax,eax
  41b0e0:	inc    eax
  41b0e1:	push   eax
  41b0e2:	push   eax
  41b0e3:	push   eax
  41b0e4:	push   eax
  41b0e5:	push   eax
  41b0e6:	push   edi
  41b0e7:	sub    esi,esi
  41b0e9:	push   esi
  41b0ea:	or     ebx,0xffffffff
  41b0ed:	mov    eax,0x300
  41b0f2:	shl    eax,cl
  41b0f4:	lea    ecx,[eax+0x736]
  41b0fa:	mov    eax,0x4000400
  41b0ff:	shr    ecx,1
  41b101:	rep stos DWORD PTR es:[edi],eax
  41b103:	push   0x5
  41b105:	pop    ecx
  41b106:	call   0x41b3f1
  41b10b:	loop   0x41b106
  41b10d:	lea    esi,[esi]
  41b10f:	lea    edi,[edi]
  41b111:	mov    edi,DWORD PTR [ebp-0x4]
  41b114:	mov    eax,DWORD PTR [ebp-0x10]
  41b117:	sub    edi,DWORD PTR [ebp+0x24]
  41b11a:	and    eax,edi
  41b11c:	mov    DWORD PTR [ebp-0x18],eax
  41b11f:	mov    al,0x0
  41b121:	call   0x41b409
  41b126:	jne    0x41b1c1
  41b12c:	mov    cl,BYTE PTR [ebp-0xc]
  41b12f:	and    edi,DWORD PTR [ebp-0x14]
  41b132:	shl    edi,cl
  41b134:	sub    cl,0x8
  41b137:	neg    cl
  41b139:	shr    esi,cl
  41b13b:	pop    eax
  41b13c:	add    edi,esi
  41b13e:	pop    esi
  41b13f:	lea    edi,[edi+edi*2]
  41b142:	shl    edi,0x8
  41b145:	cmp    al,0x7
  41b147:	pop    edx
  41b148:	lea    ecx,[esi+edi*2+0xe6c]
  41b14f:	push   ecx
  41b150:	push   esi
  41b151:	mov    esi,0x100
  41b156:	push   eax
  41b157:	mov    al,0x1
  41b159:	jb     0x41b18f
  41b15b:	mov    edi,DWORD PTR [ebp-0x4]
  41b15e:	sub    edi,DWORD PTR [ebp-0x24]
  41b161:	movzx  edi,BYTE PTR [edi]
  41b164:	mov    ebp,DWORD PTR [ebp-0x34]
  41b167:	shl    edi,1
  41b169:	mov    ecx,esi
  41b16b:	and    esi,edi
  41b16d:	add    ecx,esi
  41b16f:	lea    ebp,[ebp+ecx*2+0x0]
  41b173:	call   0x41b428
  41b178:	mov    ecx,eax
  41b17a:	shr    esi,0x8
  41b17d:	and    ecx,0x1
  41b180:	cmp    esi,ecx
  41b182:	mov    esi,0x100
  41b187:	jne    0x41b197
  41b189:	cmp    eax,esi
  41b18b:	jb     0x41b164
  41b18d:	jmp    0x41b1a3
  41b18f:	mov    ebp,DWORD PTR [ebp-0x34]
  41b192:	call   0x41b428
  41b197:	inc    eax
  41b198:	inc    esi
  41b199:	sub    eax,0x1
  41b19c:	sub    esi,0x1
  41b19f:	cmp    eax,esi
  41b1a1:	jb     0x41b18f
  41b1a3:	pop    edx
  41b1a4:	inc    edx
  41b1a5:	cmp    edx,0x5
  41b1a8:	dec    edx
  41b1a9:	mov    ecx,edx
  41b1ab:	jb     0x41b1bc
  41b1ad:	inc    edx
  41b1ae:	cmp    edx,0xb
  41b1b1:	dec    edx
  41b1b2:	mov    cl,0x4
  41b1b4:	dec    cl
  41b1b6:	jb     0x41b1bc
  41b1b8:	mov    cl,0x7
  41b1ba:	dec    cl
  41b1bc:	sub    edx,ecx
  41b1be:	push   edx
  41b1bf:	jmp    0x41b210
  41b1c1:	mov    al,0xc1
  41b1c3:	dec    al
  41b1c5:	call   0x41b419
  41b1ca:	jne    0x41b1e0
  41b1cc:	pop    eax
  41b1cd:	pop    edi
  41b1ce:	pop    edx
  41b1cf:	pop    ecx
  41b1d0:	pop    edx
  41b1d1:	pop    ecx
  41b1d2:	push   DWORD PTR [esp]
  41b1d5:	push   ecx
  41b1d6:	push   edx
  41b1d7:	mov    edx,0x664
  41b1dc:	mov    cl,0x0
  41b1de:	jmp    0x41b253
  41b1e0:	mov    al,0xcd
  41b1e2:	dec    al
  41b1e4:	call   0x41b419
  41b1e9:	jne    0x41b219
  41b1eb:	mov    al,0xf1
  41b1ed:	dec    al
  41b1ef:	call   0x41b409
  41b1f4:	jne    0x41b249
  41b1f6:	pop    eax
  41b1f7:	cmp    al,0x7
  41b1f9:	mov    al,0x9
  41b1fb:	jb     0x41b1ff
  41b1fd:	mov    al,0xb
  41b1ff:	push   eax
  41b200:	mov    esi,DWORD PTR [ebp-0x4]
  41b203:	sub    esi,DWORD PTR [ebp-0x24]
  41b206:	cmp    esi,DWORD PTR [ebp+0x24]
  41b209:	jb     0x41b3e0
  41b20f:	lods   al,BYTE PTR ds:[esi]
  41b210:	mov    edi,DWORD PTR [ebp-0x4]
  41b213:	stos   BYTE PTR es:[edi],al
  41b214:	jmp    0x41b3a7
  41b219:	mov    al,0xd8
  41b21b:	call   0x41b419
  41b220:	mov    esi,DWORD PTR [ebp-0x28]
  41b223:	je     0x41b240
  41b225:	mov    al,0xe4
  41b227:	call   0x41b419
  41b22c:	mov    esi,DWORD PTR [ebp-0x2c]
  41b22f:	je     0x41b23a
  41b231:	mov    esi,DWORD PTR [ebp-0x30]
  41b234:	mov    ecx,DWORD PTR [ebp-0x2c]
  41b237:	mov    DWORD PTR [ebp-0x30],ecx
  41b23a:	mov    ecx,DWORD PTR [ebp-0x28]
  41b23d:	mov    DWORD PTR [ebp-0x2c],ecx
  41b240:	mov    ecx,DWORD PTR [ebp-0x24]
  41b243:	mov    DWORD PTR [ebp-0x28],ecx
  41b246:	mov    DWORD PTR [ebp-0x24],esi
  41b249:	pop    eax
  41b24a:	pop    edi
  41b24b:	pop    ecx
  41b24c:	mov    edx,0xa68
  41b251:	mov    cl,0x8
  41b253:	add    edx,edi
  41b255:	push   edx
  41b256:	push   edi
  41b257:	cmp    al,0x7
  41b259:	mov    al,cl
  41b25b:	jb     0x41b25f
  41b25d:	add    al,0x3
  41b25f:	push   eax
  41b260:	mov    ebp,DWORD PTR [ebp-0x34]
  41b263:	call   0x41b426
  41b268:	jne    0x41b27e
  41b26a:	mov    eax,DWORD PTR [ebp-0x18]
  41b26d:	mov    edi,DWORD PTR [ebp-0x34]
  41b270:	shl    eax,0x3
  41b273:	sub    ecx,ecx
  41b275:	push   0x8
  41b277:	pop    esi
  41b278:	lea    edi,[edi+eax*2+0x4]
  41b27c:	jmp    0x41b2b3
  41b27e:	mov    ebp,DWORD PTR [ebp-0x34]
  41b281:	add    ebp,0x2
  41b284:	call   0x41b426
  41b289:	jne    0x41b2a3
  41b28b:	mov    eax,DWORD PTR [ebp-0x18]
  41b28e:	mov    edi,DWORD PTR [ebp-0x34]
  41b291:	shl    eax,0x3
  41b294:	push   0x8
  41b296:	pop    ecx
  41b297:	push   0x8
  41b299:	pop    esi
  41b29a:	lea    edi,[edi+eax*2+0x104]
  41b2a1:	jmp    0x41b2b3
  41b2a3:	mov    edi,0x204
  41b2a8:	add    edi,DWORD PTR [ebp-0x34]
  41b2ab:	push   0x10
  41b2ad:	pop    ecx
  41b2ae:	mov    esi,0x100
  41b2b3:	mov    DWORD PTR [ebp-0x1c],ecx
  41b2b6:	sub    eax,eax
  41b2b8:	inc    eax
  41b2b9:	mov    ebp,edi
  41b2bb:	call   0x41b428
  41b2c0:	mov    ecx,eax
  41b2c2:	sub    ecx,esi
  41b2c4:	jb     0x41b2b9
  41b2c6:	add    DWORD PTR [ebp-0x1c],ecx
  41b2c9:	cmp    DWORD PTR [ebp-0x3c],0x4
  41b2cd:	jae    0x41b383
  41b2d3:	add    DWORD PTR [ebp-0x3c],0x7
  41b2d7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b2da:	cmp    ecx,0x4
  41b2dd:	jb     0x41b2e2
  41b2df:	push   0x3
  41b2e1:	pop    ecx
  41b2e2:	mov    edi,DWORD PTR [ebp-0x38]
  41b2e5:	shl    ecx,0x6
  41b2e8:	sub    eax,eax
  41b2ea:	inc    eax
  41b2eb:	push   0x40
  41b2ed:	pop    esi
  41b2ee:	lea    edi,[edi+ecx*2+0x360]
  41b2f5:	mov    ebp,edi
  41b2f7:	call   0x41b428
  41b2fc:	mov    ecx,eax
  41b2fe:	sub    ecx,esi
  41b300:	jb     0x41b2f5
  41b302:	mov    DWORD PTR [ebp-0x18],ecx
  41b305:	mov    DWORD PTR [ebp-0x24],ecx
  41b308:	cmp    ecx,0x4
  41b30b:	jb     0x41b380
  41b30d:	mov    esi,ecx
  41b30f:	and    DWORD PTR [ebp-0x24],0x1
  41b313:	shr    esi,1
  41b315:	or     DWORD PTR [ebp-0x24],0x2
  41b319:	dec    esi
  41b31a:	cmp    ecx,0xe
  41b31d:	jae    0x41b338
  41b31f:	mov    eax,0x2af
  41b324:	sub    eax,ecx
  41b326:	mov    ecx,esi
  41b328:	shl    BYTE PTR [ebp-0x24],cl
  41b32b:	add    eax,DWORD PTR [ebp-0x24]
  41b32e:	shl    eax,1
  41b330:	add    eax,DWORD PTR [ebp-0x38]
  41b333:	mov    DWORD PTR [ebp-0x34],eax
  41b336:	jmp    0x41b365
  41b338:	sub    esi,0x4
  41b33b:	call   0x41b3e5
  41b340:	shr    ebx,1
  41b342:	shl    DWORD PTR [ebp-0x24],1
  41b345:	cmp    DWORD PTR [ebp-0x20],ebx
  41b348:	jb     0x41b350
  41b34a:	inc    DWORD PTR [ebp-0x24]
  41b34d:	sub    DWORD PTR [ebp-0x20],ebx
  41b350:	dec    esi
  41b351:	jne    0x41b33b
  41b353:	mov    eax,0x644
  41b358:	add    eax,DWORD PTR [ebp-0x38]
  41b35b:	mov    DWORD PTR [ebp-0x34],eax
  41b35e:	shl    DWORD PTR [ebp-0x24],0x4
  41b362:	push   0x4
  41b364:	pop    esi
  41b365:	sub    edi,edi
  41b367:	inc    edi
  41b368:	mov    eax,edi
  41b36a:	mov    ebp,DWORD PTR [ebp-0x34]
  41b36d:	call   0x41b428
  41b372:	test   al,0x1
  41b374:	je     0x41b379
  41b376:	or     DWORD PTR [ebp-0x24],edi
  41b379:	shl    edi,1
  41b37b:	dec    esi
  41b37c:	jne    0x41b36a
  41b37e:	jmp    0x41b380
  41b380:	inc    DWORD PTR [ebp-0x24]
  41b383:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b386:	add    ecx,0x2
  41b389:	mov    edi,DWORD PTR [ebp-0x4]
  41b38c:	mov    eax,edi
  41b38e:	sub    eax,DWORD PTR [ebp+0x24]
  41b391:	cmp    DWORD PTR [ebp-0x24],eax
  41b394:	ja     0x41b3e0
  41b396:	mov    esi,edi
  41b398:	sub    esi,DWORD PTR [ebp-0x24]
  41b39b:	mov    edx,DWORD PTR [ebp+0x28]
  41b39e:	lods   al,BYTE PTR ds:[esi]
  41b39f:	stos   BYTE PTR es:[edi],al
  41b3a0:	cmp    edi,edx
  41b3a2:	jae    0x41b3a7
  41b3a4:	dec    ecx
  41b3a5:	jne    0x41b39e
  41b3a7:	mov    DWORD PTR [ebp-0x4],edi
  41b3aa:	movzx  esi,al
  41b3ad:	cmp    edi,DWORD PTR [ebp+0x28]
  41b3b0:	jb     0x41b111
  41b3b6:	call   0x41b3e5
  41b3bb:	sub    eax,eax
  41b3bd:	lea    ebp,[esp+0x3c]
  41b3c1:	mov    edx,DWORD PTR [ebp+0x20]
  41b3c4:	mov    esi,DWORD PTR [ebp-0x8]
  41b3c7:	sub    esi,DWORD PTR [ebp+0x18]
  41b3ca:	mov    DWORD PTR [edx],esi
  41b3cc:	mov    edx,DWORD PTR [ebp+0x2c]
  41b3cf:	mov    edi,DWORD PTR [ebp-0x4]
  41b3d2:	sub    edi,DWORD PTR [ebp+0x24]
  41b3d5:	mov    DWORD PTR [edx],edi
  41b3d7:	leave  
  41b3d8:	pop    ebx
  41b3d9:	pop    esi
  41b3da:	pop    edi
  41b3db:	ret    0x1c
  41b3de:	pop    esi
  41b3df:	pop    eax
  41b3e0:	sub    eax,eax
  41b3e2:	inc    eax
  41b3e3:	jmp    0x41b3bd
  41b3e5:	cmp    ebx,0x1000000
  41b3eb:	jb     0x41b3ee
  41b3ed:	ret    
  41b3ee:	shl    ebx,0x8
  41b3f1:	push   esi
  41b3f2:	mov    esi,DWORD PTR [ebp-0x8]
  41b3f5:	cmp    esi,DWORD PTR [ebp+0x1c]
  41b3f8:	jae    0x41b3de
  41b3fa:	mov    eax,DWORD PTR [ebp-0x20]
  41b3fd:	shl    eax,0x8
  41b400:	lods   al,BYTE PTR ds:[esi]
  41b401:	mov    DWORD PTR [ebp-0x20],eax
  41b404:	mov    DWORD PTR [ebp-0x8],esi
  41b407:	pop    esi
  41b408:	ret    
  41b409:	mov    ecx,DWORD PTR [ebp-0x3c]
  41b40c:	movzx  eax,al
  41b40f:	shl    ecx,0x4
  41b412:	add    eax,DWORD PTR [ebp-0x18]
  41b415:	add    eax,ecx
  41b417:	jmp    0x41b41f
  41b419:	movzx  eax,al
  41b41c:	add    eax,DWORD PTR [ebp-0x3c]
  41b41f:	mov    ebp,DWORD PTR [ebp-0x38]
  41b422:	lea    ebp,[ebp+eax*2+0x0]
  41b426:	sub    eax,eax
  41b428:	lea    ebp,[ebp+eax*2+0x0]
  41b42c:	cmp    ebx,0x1000000
  41b432:	jae    0x41b450
  41b434:	mov    ecx,DWORD PTR [esp+0x38]
  41b438:	shl    DWORD PTR [esp+0x20],0x8
  41b43d:	cmp    ecx,DWORD PTR [esp+0x5c]
  41b441:	jae    0x41b3df
  41b443:	mov    dl,BYTE PTR [ecx]
  41b445:	inc    DWORD PTR [esp+0x38]
  41b449:	shl    ebx,0x8
  41b44c:	mov    BYTE PTR [esp+0x20],dl
  41b450:	mov    ecx,ebx
  41b452:	movzx  edx,WORD PTR [ebp+0x0]
  41b456:	shr    ecx,0xb
  41b459:	imul   ecx,edx
  41b45c:	cmp    DWORD PTR [esp+0x20],ecx
  41b460:	jae    0x41b479
  41b462:	mov    ebx,ecx
  41b464:	mov    ecx,0x800
  41b469:	sub    ecx,edx
  41b46b:	shr    ecx,0x5
  41b46e:	add    WORD PTR [ebp+0x0],cx
  41b472:	add    eax,eax
  41b474:	lea    ebp,[esp+0x40]
  41b478:	ret    
  41b479:	shr    edx,0x5
  41b47c:	sub    DWORD PTR [esp+0x20],ecx
  41b480:	sub    ebx,ecx
  41b482:	sub    WORD PTR [ebp+0x0],dx
  41b486:	add    eax,eax
  41b488:	add    eax,0x1
  41b48b:	lea    ebp,[esp+0x40]
  41b48f:	ret    
  41b490:	push   ebp
  41b491:	mov    ebp,esp
  41b493:	sub    esp,0x104
  41b499:	push   ebx
  41b49a:	push   esi
  41b49b:	push   edi
  41b49c:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41b4aa:	mov    eax,DWORD PTR [ebp+0x8]
  41b4ad:	mov    DWORD PTR [ebp+0x8],eax
  41b4b0:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4b3:	mov    ebx,0x7510899
  41b4b8:	xor    ecx,ebx
  41b4ba:	mov    eax,0x3272e0
  41b4bf:	add    ecx,eax
  41b4c1:	mov    DWORD PTR [ebp-0x28],ecx
  41b4c4:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4c7:	xor    ecx,ebx
  41b4c9:	add    ecx,eax
  41b4cb:	mov    DWORD PTR [ebp-0x40],ecx
  41b4ce:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4d1:	xor    ecx,ebx
  41b4d3:	add    ecx,eax
  41b4d5:	mov    DWORD PTR [ebp-0x3c],ecx
  41b4d8:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4db:	xor    ecx,ebx
  41b4dd:	add    ecx,eax
  41b4df:	mov    DWORD PTR [ebp-0xa0],ecx
  41b4e5:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  41b4ec:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  41b4f3:	mov    DWORD PTR [ebp-0x4c],0xf89c85bd
  41b4fa:	push   0x25
  41b4fc:	pop    ecx
  41b4fd:	mov    DWORD PTR [ebp-0x2c],ecx
  41b500:	mov    DWORD PTR [ebp-0x2c],ecx
  41b503:	push   0x65
  41b505:	pop    ecx
  41b506:	mov    DWORD PTR [ebp-0x2c],ecx
  41b509:	mov    DWORD PTR [ebp-0x2c],ecx
  41b50c:	mov    DWORD PTR [ebp-0x2c],0x4d
  41b513:	mov    DWORD PTR [ebp-0x2c],0x43
  41b51a:	mov    ecx,DWORD PTR [ebp-0x14]
  41b51d:	xor    ecx,ebx
  41b51f:	add    ecx,eax
  41b521:	mov    DWORD PTR [ebp-0x2c],ecx
  41b524:	mov    ecx,DWORD PTR [ebp-0x14]
  41b527:	xor    ecx,ebx
  41b529:	add    ecx,eax
  41b52b:	mov    DWORD PTR [ebp-0x2c],ecx
  41b52e:	mov    DWORD PTR [ebp-0x24],0x257
  41b535:	mov    DWORD PTR [ebp-0x34],0x35
  41b53c:	mov    DWORD PTR [ebp-0x10],0x79
  41b543:	lea    edi,[ebp-0xe4]
  41b549:	lea    esi,[ebp-0x104]
  41b54f:	call   0x41c169
  41b554:	dec    DWORD PTR [ebp-0x10]
  41b557:	jne    0x41b543
  41b559:	dec    DWORD PTR [ebp-0x34]
  41b55c:	jne    0x41b53c
  41b55e:	dec    DWORD PTR [ebp-0x24]
  41b561:	jne    0x41b535
  41b563:	mov    DWORD PTR [ebp-0x24],0x400d
  41b56a:	mov    eax,DWORD PTR [ebp-0x14]
  41b56d:	xor    eax,ebx
  41b56f:	mov    esi,0x3272e0
  41b574:	add    eax,esi
  41b576:	mov    DWORD PTR [ebp-0x8],eax
  41b579:	mov    eax,DWORD PTR [ebp-0x14]
  41b57c:	and    DWORD PTR [ebp-0x94],0x0
  41b583:	xor    eax,ebx
  41b585:	add    eax,esi
  41b587:	mov    DWORD PTR [ebp-0x38],eax
  41b58a:	mov    eax,fs:0x18
  41b590:	mov    DWORD PTR [ebp-0x94],eax
  41b596:	mov    eax,DWORD PTR [eax+0x30]
  41b599:	mov    DWORD PTR [ebp-0x98],eax
  41b59f:	mov    eax,DWORD PTR [eax+0xc]
  41b5a2:	mov    DWORD PTR [ebp-0xc0],eax
  41b5a8:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ab:	lea    ecx,[ebp-0x94]
  41b5b1:	mov    DWORD PTR [eax+0x1a0],ecx
  41b5b7:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ba:	lea    ecx,[ebp-0x98]
  41b5c0:	mov    DWORD PTR [eax+0x1a4],ecx
  41b5c6:	mov    eax,DWORD PTR [ebp+0x8]
  41b5c9:	push   DWORD PTR [ebp+0x8]
  41b5cc:	lea    ecx,[ebp-0xc0]
  41b5d2:	mov    DWORD PTR [eax+0x1a8],ecx
  41b5d8:	call   0x41d94f
  41b5dd:	mov    ecx,DWORD PTR [ebp-0x14]
  41b5e0:	xor    ecx,ebx
  41b5e2:	add    ecx,esi
  41b5e4:	cmp    ecx,eax
  41b5e6:	je     0x41b8c3
  41b5ec:	mov    eax,DWORD PTR [ebp+0x8]
  41b5ef:	mov    eax,DWORD PTR [eax+0x194]
  41b5f5:	mov    ecx,DWORD PTR [eax]
  41b5f7:	mov    eax,DWORD PTR [ebp+0x8]
  41b5fa:	mov    eax,DWORD PTR [eax+0x194]
  41b600:	mov    eax,DWORD PTR [eax]
  41b602:	add    eax,DWORD PTR [ecx+0x3c]
  41b605:	mov    ecx,DWORD PTR [ebp+0x8]
  41b608:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41b60e:	lea    edx,[ebp-0xc4]
  41b614:	push   edx
  41b615:	mov    edx,DWORD PTR [ebp+0x8]
  41b618:	mov    edx,DWORD PTR [edx+0x18c]
  41b61e:	mov    edx,DWORD PTR [edx]
  41b620:	add    edx,DWORD PTR [eax+0x88]
  41b626:	push   0x4
  41b628:	push   DWORD PTR [eax+0x8c]
  41b62e:	push   edx
  41b62f:	call   DWORD PTR [ecx+0x1c]
  41b632:	push   DWORD PTR [ebp+0x8]
  41b635:	mov    edi,DWORD PTR [ebp+0x8]
  41b638:	mov    eax,DWORD PTR [ebp+0x8]
  41b63b:	mov    edx,DWORD PTR [eax+0x1b8]
  41b641:	mov    DWORD PTR [ebp-0x68],0x80e0f06
  41b648:	mov    DWORD PTR [ebp-0x64],0x10a051f
  41b64f:	mov    WORD PTR [ebp-0x60],0x7a39
  41b655:	mov    DWORD PTR [ebp-0x90],0x23f0f21
  41b65f:	mov    DWORD PTR [ebp-0x8c],0x6390819
  41b669:	mov    DWORD PTR [ebp-0x88],0x2419020a
  41b673:	mov    DWORD PTR [ebp-0x84],0x81d050d
  41b67d:	mov    DWORD PTR [ebp-0x80],0x7a391f01
  41b684:	mov    DWORD PTR [ebp-0x7c],0x23f0f21
  41b68b:	mov    DWORD PTR [ebp-0x78],0x6390819
  41b692:	mov    DWORD PTR [ebp-0x74],0x2419020a
  41b699:	mov    DWORD PTR [ebp-0x70],0x81d050d
  41b6a0:	mov    DWORD PTR [ebp-0x6c],0x7a131f01
  41b6a7:	call   0x41d97e
  41b6ac:	push   eax
  41b6ad:	mov    eax,DWORD PTR [ebp+0x8]
  41b6b0:	mov    eax,DWORD PTR [eax+0x1a8]
  41b6b6:	push   DWORD PTR [eax]
  41b6b8:	call   0x41d61f
  41b6bd:	test   eax,eax
  41b6bf:	jne    0x41b711
  41b6c1:	mov    eax,DWORD PTR [ebp+0x8]
  41b6c4:	mov    eax,DWORD PTR [eax+0x1d8]
  41b6ca:	mov    edi,DWORD PTR [ebp+0x8]
  41b6cd:	add    eax,0x4
  41b6d0:	mov    DWORD PTR [ebp-0x20],eax
  41b6d3:	mov    eax,DWORD PTR [ebp+0x8]
  41b6d6:	mov    edx,DWORD PTR [eax+0x1b8]
  41b6dc:	call   0x41d97e
  41b6e1:	push   eax
  41b6e2:	mov    eax,DWORD PTR [ebp-0x20]
  41b6e5:	call   DWORD PTR [eax]
  41b6e7:	test   eax,eax
  41b6e9:	jne    0x41b711
  41b6eb:	mov    eax,DWORD PTR [ebp+0x8]
  41b6ee:	mov    eax,DWORD PTR [eax+0x1d8]
  41b6f4:	mov    edi,DWORD PTR [ebp+0x8]
  41b6f7:	add    eax,0x10
  41b6fa:	mov    DWORD PTR [ebp-0x20],eax
  41b6fd:	mov    eax,DWORD PTR [ebp+0x8]
  41b700:	mov    edx,DWORD PTR [eax+0x1b8]
  41b706:	call   0x41d97e
  41b70b:	push   eax
  41b70c:	mov    eax,DWORD PTR [ebp-0x20]
  41b70f:	call   DWORD PTR [eax]
  41b711:	mov    eax,DWORD PTR [ebp-0x14]
  41b714:	mov    ecx,DWORD PTR [ebp-0x24]
  41b717:	xor    eax,ebx
  41b719:	add    eax,esi
  41b71b:	cmp    eax,ecx
  41b71d:	je     0x41b89c
  41b723:	mov    eax,DWORD PTR [ebp-0x18]
  41b726:	xor    eax,ebx
  41b728:	mov    ecx,0xffcd8d20
  41b72d:	sub    ecx,eax
  41b72f:	add    ecx,DWORD PTR [ebp-0x24]
  41b732:	mov    eax,DWORD PTR [ebp-0x8]
  41b735:	cmp    eax,ecx
  41b737:	ja     0x41b89c
  41b73d:	mov    DWORD PTR [ebp-0x34],0x0
  41b744:	push   DWORD PTR [ebp+0x8]
  41b747:	mov    edi,DWORD PTR [ebp+0x8]
  41b74a:	mov    eax,DWORD PTR [ebp+0x8]
  41b74d:	mov    edx,DWORD PTR [eax+0x1b4]
  41b753:	call   0x41d97e
  41b758:	push   eax
  41b759:	mov    eax,DWORD PTR [ebp+0x8]
  41b75c:	mov    eax,DWORD PTR [eax+0x1a8]
  41b762:	push   DWORD PTR [eax]
  41b764:	call   0x41d61f
  41b769:	mov    ecx,DWORD PTR [ebp+0x8]
  41b76c:	mov    ecx,DWORD PTR [ecx+0x19c]
  41b772:	mov    DWORD PTR [ecx],eax
  41b774:	mov    eax,DWORD PTR [ebp+0x8]
  41b777:	mov    edi,DWORD PTR [eax+0x1d8]
  41b77d:	mov    esi,DWORD PTR [ebp+0x8]
  41b780:	xor    eax,eax
  41b782:	lea    edx,[ebp-0x7c]
  41b785:	call   0x41d9b4
  41b78a:	push   eax
  41b78b:	mov    eax,DWORD PTR [ebp+0x8]
  41b78e:	mov    eax,DWORD PTR [eax+0x19c]
  41b794:	push   DWORD PTR [eax]
  41b796:	call   DWORD PTR [edi+0x8]
  41b799:	mov    DWORD PTR [ebp-0x20],eax
  41b79c:	mov    eax,DWORD PTR [ebp+0x8]
  41b79f:	mov    edi,DWORD PTR [eax+0x1d8]
  41b7a5:	mov    esi,DWORD PTR [ebp+0x8]
  41b7a8:	xor    eax,eax
  41b7aa:	lea    edx,[ebp-0x90]
  41b7b0:	call   0x41d9b4
  41b7b5:	push   eax
  41b7b6:	mov    eax,DWORD PTR [ebp+0x8]
  41b7b9:	mov    eax,DWORD PTR [eax+0x19c]
  41b7bf:	push   DWORD PTR [eax]
  41b7c1:	call   DWORD PTR [edi+0x8]
  41b7c4:	and    DWORD PTR [ebp-0x1c],0x0
  41b7c8:	mov    eax,DWORD PTR [ebp-0x1c]
  41b7cb:	and    eax,0x7
  41b7ce:	add    eax,0x31
  41b7d1:	push   eax
  41b7d2:	call   DWORD PTR [ebp-0x20]
  41b7d5:	test   eax,eax
  41b7d7:	jne    0x41b7de
  41b7d9:	and    DWORD PTR [ebp-0x10],eax
  41b7dc:	jmp    0x41b806
  41b7de:	mov    eax,DWORD PTR [ebp+0x8]
  41b7e1:	mov    edi,DWORD PTR [eax+0x1d8]
  41b7e7:	mov    esi,DWORD PTR [ebp+0x8]
  41b7ea:	xor    eax,eax
  41b7ec:	lea    edx,[ebp-0x68]
  41b7ef:	call   0x41d9b4
  41b7f4:	push   eax
  41b7f5:	mov    eax,DWORD PTR [ebp+0x8]
  41b7f8:	mov    eax,DWORD PTR [eax+0x198]
  41b7fe:	push   DWORD PTR [eax]
  41b800:	call   DWORD PTR [edi+0x8]
  41b803:	mov    DWORD PTR [ebp-0x10],eax
  41b806:	inc    DWORD PTR [ebp-0x1c]
  41b809:	cmp    DWORD PTR [ebp-0x1c],0x10
  41b80d:	jb     0x41b7c8
  41b80f:	mov    eax,DWORD PTR [ebp-0x18]
  41b812:	mov    esi,DWORD PTR [ebp+0x8]
  41b815:	xor    eax,ebx
  41b817:	mov    edi,0x3272e0
  41b81c:	add    eax,edi
  41b81e:	lea    edx,[ebp-0xe4]
  41b824:	call   0x41d9b4
  41b829:	push   eax
  41b82a:	mov    eax,DWORD PTR [ebp-0x14]
  41b82d:	mov    esi,DWORD PTR [ebp+0x8]
  41b830:	xor    eax,ebx
  41b832:	add    eax,edi
  41b834:	lea    edx,[ebp-0x104]
  41b83a:	call   0x41d9b4
  41b83f:	push   eax
  41b840:	call   DWORD PTR [ebp-0x10]
  41b843:	mov    ecx,DWORD PTR [ebp-0x14]
  41b846:	xor    ecx,ebx
  41b848:	add    ecx,edi
  41b84a:	cmp    ecx,eax
  41b84c:	jne    0x41b855
  41b84e:	mov    DWORD PTR [ebp-0x34],0x1
  41b855:	mov    eax,DWORD PTR [ebp-0x18]
  41b858:	mov    ecx,DWORD PTR [ebp-0x8]
  41b85b:	xor    eax,ebx
  41b85d:	lea    eax,[eax+ecx*1+0x3272e0]
  41b864:	mov    DWORD PTR [ebp-0x8],eax
  41b867:	mov    eax,DWORD PTR [ebp-0x34]
  41b86a:	test   eax,eax
  41b86c:	je     0x41b880
  41b86e:	mov    eax,DWORD PTR [ebp-0x18]
  41b871:	mov    ecx,DWORD PTR [ebp-0x38]
  41b874:	xor    eax,ebx
  41b876:	lea    eax,[eax+ecx*1+0x3272e0]
  41b87d:	mov    DWORD PTR [ebp-0x38],eax
  41b880:	mov    eax,DWORD PTR [ebp-0x18]
  41b883:	xor    eax,ebx
  41b885:	mov    ecx,0xffcd8d20
  41b88a:	sub    ecx,eax
  41b88c:	add    ecx,DWORD PTR [ebp-0x24]
  41b88f:	mov    eax,DWORD PTR [ebp-0x8]
  41b892:	cmp    eax,ecx
  41b894:	jbe    0x41b73d
  41b89a:	mov    esi,edi
  41b89c:	mov    eax,DWORD PTR [ebp-0x38]
  41b89f:	mov    ecx,DWORD PTR [ebp-0x8]
  41b8a2:	cmp    ecx,eax
  41b8a4:	jne    0x41b8b7
  41b8a6:	push   DWORD PTR [ebp+0x8]
  41b8a9:	lea    eax,[ebp-0x40]
  41b8ac:	push   eax
  41b8ad:	call   0x41e42c
  41b8b2:	mov    DWORD PTR [ebp-0x28],eax
  41b8b5:	jmp    0x41b8c3
  41b8b7:	mov    eax,DWORD PTR [ebp-0x28]
  41b8ba:	mov    ecx,DWORD PTR [ebp-0x18]
  41b8bd:	xor    ecx,ebx
  41b8bf:	add    ecx,esi
  41b8c1:	xor    DWORD PTR [eax],ecx
  41b8c3:	mov    eax,DWORD PTR [ebp-0x14]
  41b8c6:	mov    ecx,DWORD PTR [ebp-0x28]
  41b8c9:	xor    eax,ebx
  41b8cb:	add    eax,esi
  41b8cd:	cmp    eax,ecx
  41b8cf:	je     0x41c047
  41b8d5:	mov    eax,DWORD PTR [ebp-0x14]
  41b8d8:	mov    ecx,DWORD PTR [ebp-0x40]
  41b8db:	xor    eax,ebx
  41b8dd:	add    eax,esi
  41b8df:	cmp    eax,ecx
  41b8e1:	je     0x41c047
  41b8e7:	mov    eax,DWORD PTR [ebp-0x14]
  41b8ea:	xor    eax,ebx
  41b8ec:	add    eax,esi
  41b8ee:	jmp    0x41b90c
  41b8f0:	mov    edi,DWORD PTR [ebp-0x28]
  41b8f3:	mov    cl,al
  41b8f5:	and    cl,0x1f
  41b8f8:	or     dl,0xff
  41b8fb:	sub    dl,cl
  41b8fd:	add    BYTE PTR [edi+eax*1],dl
  41b900:	mov    ecx,DWORD PTR [ebp-0x18]
  41b903:	xor    ecx,ebx
  41b905:	lea    eax,[eax+ecx*1+0x3272e0]
  41b90c:	mov    ecx,DWORD PTR [ebp-0x40]
  41b90f:	cmp    eax,ecx
  41b911:	jb     0x41b8f0
  41b913:	mov    eax,DWORD PTR [ebp-0x40]
  41b916:	mov    DWORD PTR [ebp-0x24],eax
  41b919:	mov    eax,DWORD PTR [ebp-0x28]
  41b91c:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  41b923:	mov    DWORD PTR [ebp-0xbc],eax
  41b929:	mov    edi,0xf89c85b8
  41b92e:	mov    DWORD PTR [ebp-0x30],edi
  41b931:	mov    eax,DWORD PTR [ebp-0x38]
  41b934:	xor    eax,ebx
  41b936:	add    eax,esi
  41b938:	mov    DWORD PTR [ebp-0xc],eax
  41b93b:	mov    eax,DWORD PTR [ebp-0x38]
  41b93e:	xor    eax,ebx
  41b940:	add    eax,esi
  41b942:	mov    DWORD PTR [ebp-0x8],eax
  41b945:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  41b94c:	mov    DWORD PTR [ebp-0x54],0xf89c85be
  41b953:	mov    eax,DWORD PTR [ebp-0x38]
  41b956:	mov    ecx,DWORD PTR [ebp-0x24]
  41b959:	xor    eax,ebx
  41b95b:	add    eax,esi
  41b95d:	cmp    ecx,eax
  41b95f:	je     0x41bb5e
  41b965:	jmp    0x41bb3a
  41b96a:	mov    ecx,DWORD PTR [ebp-0xc]
  41b96d:	mov    eax,DWORD PTR [ebp-0x24]
  41b970:	sub    eax,ecx
  41b972:	mov    ecx,DWORD PTR [ebp-0x48]
  41b975:	xor    ecx,ebx
  41b977:	add    ecx,esi
  41b979:	xor    edx,edx
  41b97b:	div    ecx
  41b97d:	mov    DWORD PTR [ebp-0x8],eax
  41b980:	mov    eax,DWORD PTR [ebp-0x54]
  41b983:	mov    ecx,DWORD PTR [ebp-0x8]
  41b986:	xor    eax,ebx
  41b988:	add    eax,esi
  41b98a:	cmp    ecx,eax
  41b98c:	jbe    0x41b998
  41b98e:	mov    eax,DWORD PTR [ebp-0x54]
  41b991:	xor    eax,ebx
  41b993:	add    eax,esi
  41b995:	mov    DWORD PTR [ebp-0x8],eax
  41b998:	mov    eax,DWORD PTR [ebp-0x48]
  41b99b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b99e:	xor    eax,ebx
  41b9a0:	add    eax,esi
  41b9a2:	imul   eax,ecx
  41b9a5:	mov    DWORD PTR [ebp-0x8],eax
  41b9a8:	mov    eax,DWORD PTR [ebp-0x38]
  41b9ab:	mov    ecx,DWORD PTR [ebp-0x8]
  41b9ae:	xor    eax,ebx
  41b9b0:	add    eax,esi
  41b9b2:	cmp    ecx,eax
  41b9b4:	je     0x41bb28
  41b9ba:	mov    eax,DWORD PTR [ebp-0x8]
  41b9bd:	mov    DWORD PTR [ebp-0x10],eax
  41b9c0:	mov    eax,DWORD PTR [ebp-0xc]
  41b9c3:	add    eax,DWORD PTR [ebp-0xbc]
  41b9c9:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  41b9d0:	mov    DWORD PTR [ebp-0x34],edi
  41b9d3:	mov    DWORD PTR [ebp-0xa8],0xf89c85bb
  41b9dd:	mov    DWORD PTR [ebp-0x8],eax
  41b9e0:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  41b9e7:	mov    DWORD PTR [ebp-0x1c],edi
  41b9ea:	mov    eax,DWORD PTR [ebp-0x20]
  41b9ed:	xor    eax,ebx
  41b9ef:	add    eax,esi
  41b9f1:	jmp    0x41bae7
  41b9f6:	mov    DWORD PTR [ebp-0xb0],0xf89c85b3
  41ba00:	mov    DWORD PTR [ebp-0xb8],0xf89c85ad
  41ba0a:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba0d:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba10:	xor    eax,ebx
  41ba12:	add    eax,esi
  41ba14:	imul   eax,ecx
  41ba17:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba1a:	mov    al,BYTE PTR [eax+ecx*1]
  41ba1d:	mov    BYTE PTR [ebp-0x2],al
  41ba20:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba23:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba26:	xor    eax,ebx
  41ba28:	add    eax,esi
  41ba2a:	imul   eax,ecx
  41ba2d:	mov    ecx,DWORD PTR [ebp-0xa8]
  41ba33:	xor    ecx,ebx
  41ba35:	add    eax,ecx
  41ba37:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba3a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41ba42:	mov    ecx,DWORD PTR [ebp-0xb0]
  41ba48:	xor    ecx,ebx
  41ba4a:	lea    eax,[ecx+eax*1+0x3272e0]
  41ba51:	movzx  ecx,BYTE PTR [ebp-0x2]
  41ba55:	xor    ecx,eax
  41ba57:	mov    BYTE PTR [ebp-0x2],cl
  41ba5a:	mov    al,BYTE PTR [ebp-0x2]
  41ba5d:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ba60:	mov    edx,DWORD PTR [ebp-0x44]
  41ba63:	xor    ecx,ebx
  41ba65:	add    ecx,esi
  41ba67:	imul   ecx,edx
  41ba6a:	mov    edx,DWORD PTR [ebp-0x8]
  41ba6d:	mov    BYTE PTR [ecx+edx*1],al
  41ba70:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba73:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba76:	xor    eax,ebx
  41ba78:	add    eax,esi
  41ba7a:	imul   eax,ecx
  41ba7d:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba80:	mov    al,BYTE PTR [eax+ecx*1]
  41ba83:	mov    BYTE PTR [ebp-0x2],al
  41ba86:	mov    eax,DWORD PTR [ebp-0x1c]
  41ba89:	mov    ecx,DWORD PTR [ebp-0x44]
  41ba8c:	xor    eax,ebx
  41ba8e:	add    eax,esi
  41ba90:	imul   eax,ecx
  41ba93:	mov    ecx,DWORD PTR [ebp-0x34]
  41ba96:	xor    ecx,ebx
  41ba98:	add    eax,ecx
  41ba9a:	mov    ecx,DWORD PTR [ebp-0x8]
  41ba9d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41baa5:	mov    ecx,DWORD PTR [ebp-0xb8]
  41baab:	xor    ecx,ebx
  41baad:	lea    eax,[ecx+eax*1+0x3272e0]
  41bab4:	movzx  ecx,BYTE PTR [ebp-0x2]
  41bab8:	xor    ecx,eax
  41baba:	mov    BYTE PTR [ebp-0x2],cl
  41babd:	mov    al,BYTE PTR [ebp-0x2]
  41bac0:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bac3:	mov    edx,DWORD PTR [ebp-0x44]
  41bac6:	xor    ecx,ebx
  41bac8:	add    ecx,esi
  41baca:	imul   ecx,edx
  41bacd:	mov    edx,DWORD PTR [ebp-0x8]
  41bad0:	mov    BYTE PTR [ecx+edx*1],al
  41bad3:	mov    eax,DWORD PTR [ebp-0x2c]
  41bad6:	mov    ecx,DWORD PTR [ebp-0x34]
  41bad9:	xor    eax,ebx
  41badb:	xor    ecx,ebx
  41badd:	add    eax,esi
  41badf:	add    ecx,esi
  41bae1:	imul   eax,ecx
  41bae4:	add    eax,DWORD PTR [ebp-0x44]
  41bae7:	mov    DWORD PTR [ebp-0x44],eax
  41baea:	mov    eax,DWORD PTR [ebp-0x44]
  41baed:	mov    ecx,DWORD PTR [ebp-0x10]
  41baf0:	cmp    ecx,eax
  41baf2:	jb     0x41b9f6
  41baf8:	mov    eax,DWORD PTR [ebp-0x34]
  41bafb:	mov    ecx,DWORD PTR [ebp-0x10]
  41bafe:	xor    eax,ebx
  41bb00:	add    eax,esi
  41bb02:	imul   eax,ecx
  41bb05:	mov    ecx,DWORD PTR [ebp-0x20]
  41bb08:	xor    ecx,ebx
  41bb0a:	add    ecx,esi
  41bb0c:	or     eax,ecx
  41bb0e:	mov    ecx,DWORD PTR [ebp-0x30]
  41bb11:	xor    ecx,ebx
  41bb13:	add    eax,ecx
  41bb15:	mov    ecx,DWORD PTR [ebp-0x30]
  41bb18:	xor    ecx,ebx
  41bb1a:	add    eax,ecx
  41bb1c:	mov    ecx,DWORD PTR [ebp-0xc]
  41bb1f:	lea    eax,[eax+ecx*1+0x64e5c0]
  41bb26:	jmp    0x41bb37
  41bb28:	mov    eax,DWORD PTR [ebp-0x30]
  41bb2b:	mov    ecx,DWORD PTR [ebp-0xc]
  41bb2e:	xor    eax,ebx
  41bb30:	lea    eax,[eax+ecx*1+0x3272e0]
  41bb37:	mov    DWORD PTR [ebp-0xc],eax
  41bb3a:	mov    eax,DWORD PTR [ebp-0x30]
  41bb3d:	xor    eax,ebx
  41bb3f:	mov    ecx,0xffcd8d20
  41bb44:	sub    ecx,eax
  41bb46:	add    ecx,DWORD PTR [ebp-0x24]
  41bb49:	mov    eax,DWORD PTR [ebp-0x30]
  41bb4c:	mov    edx,DWORD PTR [ebp-0xc]
  41bb4f:	xor    eax,ebx
  41bb51:	add    eax,esi
  41bb53:	imul   eax,edx
  41bb56:	cmp    eax,ecx
  41bb58:	jbe    0x41b96a
  41bb5e:	mov    eax,DWORD PTR [ebp-0x14]
  41bb61:	mov    ecx,DWORD PTR [ebp-0x40]
  41bb64:	mov    eax,DWORD PTR [ebp+0x8]
  41bb67:	mov    edx,DWORD PTR [ebp-0x4c]
  41bb6a:	mov    eax,DWORD PTR [eax+0x1d8]
  41bb70:	xor    edx,ebx
  41bb72:	add    edx,esi
  41bb74:	push   edx
  41bb75:	mov    edx,DWORD PTR [ebp-0x3c]
  41bb78:	xor    edx,ebx
  41bb7a:	add    edx,esi
  41bb7c:	push   edx
  41bb7d:	push   ecx
  41bb7e:	mov    DWORD PTR [ebp-0x2c],ecx
  41bb81:	mov    ecx,DWORD PTR [ebp-0x14]
  41bb84:	xor    ecx,ebx
  41bb86:	add    ecx,esi
  41bb88:	push   ecx
  41bb89:	call   DWORD PTR [eax+0x14]
  41bb8c:	mov    edi,eax
  41bb8e:	mov    eax,DWORD PTR [ebp-0x14]
  41bb91:	xor    eax,ebx
  41bb93:	add    eax,esi
  41bb95:	cmp    eax,edi
  41bb97:	je     0x41bbf2
  41bb99:	mov    eax,DWORD PTR [ebp-0x14]
  41bb9c:	jmp    0x41bbbf
  41bb9e:	mov    ecx,DWORD PTR [ebp-0x28]
  41bba1:	xor    eax,ebx
  41bba3:	mov    cl,BYTE PTR [ecx+eax*1+0x3272e0]
  41bbaa:	mov    BYTE PTR [eax+edi*1+0x3272e0],cl
  41bbb1:	mov    ecx,DWORD PTR [ebp-0x18]
  41bbb4:	xor    ecx,ebx
  41bbb6:	lea    eax,[ecx+eax*1+0x3272e0]
  41bbbd:	xor    eax,ebx
  41bbbf:	mov    ecx,DWORD PTR [ebp-0x40]
  41bbc2:	sub    ecx,esi
  41bbc4:	xor    ecx,ebx
  41bbc6:	cmp    eax,ecx
  41bbc8:	jne    0x41bb9e
  41bbca:	mov    eax,DWORD PTR [ebp+0x8]
  41bbcd:	mov    ecx,DWORD PTR [ebp-0x50]
  41bbd0:	mov    eax,DWORD PTR [eax+0x1d8]
  41bbd6:	xor    ecx,ebx
  41bbd8:	add    ecx,esi
  41bbda:	push   ecx
  41bbdb:	mov    ecx,DWORD PTR [ebp-0x14]
  41bbde:	xor    ecx,ebx
  41bbe0:	add    ecx,esi
  41bbe2:	push   ecx
  41bbe3:	push   DWORD PTR [ebp-0x28]
  41bbe6:	call   DWORD PTR [eax+0x18]
  41bbe9:	mov    eax,DWORD PTR [ebp-0x2c]
  41bbec:	mov    DWORD PTR [ebp-0x28],edi
  41bbef:	mov    DWORD PTR [ebp-0x40],eax
  41bbf2:	mov    edi,DWORD PTR [ebp-0x28]
  41bbf5:	mov    eax,DWORD PTR [ebp-0x18]
  41bbf8:	mov    ecx,DWORD PTR [ebp-0x14]
  41bbfb:	xor    eax,ebx
  41bbfd:	mov    DWORD PTR [ebp-0x2c],edi
  41bc00:	add    eax,esi
  41bc02:	mov    DWORD PTR [ebp-0x5c],0x39122a12
  41bc09:	mov    DWORD PTR [ebp-0x58],0x27123f12
  41bc10:	jmp    0x41bc44
  41bc12:	xor    ecx,ebx
  41bc14:	mov    dl,BYTE PTR [ebp+ecx*1+0x327284]
  41bc1b:	xor    dl,0x73
  41bc1e:	sub    dl,0x9
  41bc21:	mov    DWORD PTR [ebp-0x3c],ecx
  41bc24:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272e0]
  41bc2c:	movzx  edx,dl
  41bc2f:	cmp    ecx,edx
  41bc31:	jne    0x41bc4e
  41bc33:	mov    ecx,DWORD PTR [ebp-0x18]
  41bc36:	mov    edx,DWORD PTR [ebp-0x3c]
  41bc39:	xor    ecx,ebx
  41bc3b:	lea    ecx,[ecx+edx*1+0x3272e0]
  41bc42:	xor    ecx,ebx
  41bc44:	cmp    ecx,0xf89c85b1
  41bc4a:	jne    0x41bc12
  41bc4c:	jmp    0x41bc55
  41bc4e:	mov    eax,DWORD PTR [ebp-0x14]
  41bc51:	xor    eax,ebx
  41bc53:	add    eax,esi
  41bc55:	mov    ecx,DWORD PTR [ebp-0x14]
  41bc58:	xor    ecx,ebx
  41bc5a:	add    ecx,esi
  41bc5c:	cmp    ecx,eax
  41bc5e:	je     0x41bdd1
  41bc64:	mov    eax,DWORD PTR [edi+0x8]
  41bc67:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41bc6e:	mov    DWORD PTR [ebp-0x3c],0xf89cc316
  41bc75:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  41bc7c:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  41bc83:	mov    DWORD PTR [ebp-0x10],eax
  41bc86:	mov    eax,DWORD PTR [ebp+0x8]
  41bc89:	mov    ecx,DWORD PTR [ebp-0x20]
  41bc8c:	xor    ecx,ebx
  41bc8e:	add    ecx,esi
  41bc90:	push   ecx
  41bc91:	mov    ecx,DWORD PTR [ebp-0x48]
  41bc94:	mov    eax,DWORD PTR [eax+0x1d8]
  41bc9a:	xor    ecx,ebx
  41bc9c:	add    ecx,esi
  41bc9e:	push   ecx
  41bc9f:	mov    ecx,DWORD PTR [ebp-0x3c]
  41bca2:	xor    ecx,ebx
  41bca4:	add    ecx,esi
  41bca6:	push   ecx
  41bca7:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcaa:	xor    ecx,ebx
  41bcac:	add    ecx,esi
  41bcae:	push   ecx
  41bcaf:	call   DWORD PTR [eax+0x14]
  41bcb2:	mov    edi,eax
  41bcb4:	mov    eax,DWORD PTR [ebp+0x8]
  41bcb7:	mov    ecx,DWORD PTR [ebp-0x20]
  41bcba:	mov    eax,DWORD PTR [eax+0x1d8]
  41bcc0:	xor    ecx,ebx
  41bcc2:	add    ecx,esi
  41bcc4:	push   ecx
  41bcc5:	mov    ecx,DWORD PTR [ebp-0x48]
  41bcc8:	xor    ecx,ebx
  41bcca:	add    ecx,esi
  41bccc:	push   ecx
  41bccd:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcd0:	push   DWORD PTR [ebp-0x10]
  41bcd3:	xor    ecx,ebx
  41bcd5:	add    ecx,esi
  41bcd7:	push   ecx
  41bcd8:	call   DWORD PTR [eax+0x14]
  41bcdb:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcde:	xor    ecx,ebx
  41bce0:	add    ecx,esi
  41bce2:	mov    DWORD PTR [ebp-0x20],eax
  41bce5:	cmp    ecx,edi
  41bce7:	je     0x41c074
  41bced:	mov    ecx,DWORD PTR [ebp-0xc]
  41bcf0:	xor    ecx,ebx
  41bcf2:	add    ecx,esi
  41bcf4:	cmp    ecx,eax
  41bcf6:	je     0x41c074
  41bcfc:	mov    DWORD PTR [ebp-0x3c],0xf89c85ba
  41bd03:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41bd0a:	mov    ecx,DWORD PTR [ebp-0x3c]
  41bd0d:	xor    cl,0x99
  41bd10:	sub    cl,0x20
  41bd13:	mov    BYTE PTR [edi],cl
  41bd15:	mov    ecx,DWORD PTR [ebp-0xc]
  41bd18:	xor    cl,0x99
  41bd1b:	sub    cl,0x20
  41bd1e:	mov    BYTE PTR [edi+0x1],cl
  41bd21:	mov    ecx,DWORD PTR [ebp-0x4c]
  41bd24:	xor    cl,0x99
  41bd27:	sub    cl,0x20
  41bd2a:	mov    BYTE PTR [edi+0x2],cl
  41bd2d:	and    DWORD PTR [ebp-0xb4],0x0
  41bd34:	and    DWORD PTR [ebp-0xa4],0x0
  41bd3b:	lea    ecx,[ebp-0xa4]
  41bd41:	push   ecx
  41bd42:	push   DWORD PTR [ebp-0x10]
  41bd45:	push   eax
  41bd46:	lea    eax,[ebp-0xb4]
  41bd4c:	push   eax
  41bd4d:	mov    eax,DWORD PTR [ebp-0x2c]
  41bd50:	push   DWORD PTR [eax+0xc]
  41bd53:	mov    eax,DWORD PTR [ebp-0x28]
  41bd56:	add    eax,0x10
  41bd59:	push   eax
  41bd5a:	push   edi
  41bd5b:	call   0x41b0a7
  41bd60:	mov    DWORD PTR [ebp-0x3c],eax
  41bd63:	mov    eax,DWORD PTR [ebp+0x8]
  41bd66:	mov    ecx,DWORD PTR [ebp-0x50]
  41bd69:	mov    eax,DWORD PTR [eax+0x1d8]
  41bd6f:	xor    ecx,ebx
  41bd71:	add    ecx,esi
  41bd73:	push   ecx
  41bd74:	mov    ecx,DWORD PTR [ebp-0xc]
  41bd77:	xor    ecx,ebx
  41bd79:	add    ecx,esi
  41bd7b:	push   ecx
  41bd7c:	push   edi
  41bd7d:	call   DWORD PTR [eax+0x18]
  41bd80:	mov    eax,DWORD PTR [ebp-0x3c]
  41bd83:	add    eax,0xffcd8d20
  41bd88:	xor    eax,ebx
  41bd8a:	cmp    eax,0xf89c85b9
  41bd8f:	mov    eax,DWORD PTR [ebp+0x8]
  41bd92:	mov    eax,DWORD PTR [eax+0x1d8]
  41bd98:	mov    ecx,DWORD PTR [ebp-0x50]
  41bd9b:	jne    0x41bdbe
  41bd9d:	xor    ecx,ebx
  41bd9f:	add    ecx,esi
  41bda1:	push   ecx
  41bda2:	mov    ecx,DWORD PTR [ebp-0xc]
  41bda5:	xor    ecx,ebx
  41bda7:	add    ecx,esi
  41bda9:	push   ecx
  41bdaa:	push   DWORD PTR [ebp-0x28]
  41bdad:	call   DWORD PTR [eax+0x18]
  41bdb0:	mov    eax,DWORD PTR [ebp-0x20]
  41bdb3:	mov    DWORD PTR [ebp-0x28],eax
  41bdb6:	mov    eax,DWORD PTR [ebp-0x10]
  41bdb9:	mov    DWORD PTR [ebp-0x40],eax
  41bdbc:	jmp    0x41bdd1
  41bdbe:	xor    ecx,ebx
  41bdc0:	add    ecx,esi
  41bdc2:	push   ecx
  41bdc3:	mov    ecx,DWORD PTR [ebp-0xc]
  41bdc6:	xor    ecx,ebx
  41bdc8:	add    ecx,esi
  41bdca:	push   ecx
  41bdcb:	push   DWORD PTR [ebp-0x20]
  41bdce:	call   DWORD PTR [eax+0x18]
  41bdd1:	mov    eax,DWORD PTR [ebp-0x40]
  41bdd4:	mov    DWORD PTR [ebp-0x38],eax
  41bdd7:	mov    eax,DWORD PTR [ebp-0x28]
  41bdda:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  41bde1:	mov    DWORD PTR [ebp-0x3c],eax
  41bde4:	mov    edi,0xf89c85b8
  41bde9:	mov    DWORD PTR [ebp-0x30],edi
  41bdec:	mov    eax,DWORD PTR [ebp-0x24]
  41bdef:	xor    eax,ebx
  41bdf1:	add    eax,esi
  41bdf3:	mov    DWORD PTR [ebp-0xc],eax
  41bdf6:	mov    eax,DWORD PTR [ebp-0x24]
  41bdf9:	xor    eax,ebx
  41bdfb:	add    eax,esi
  41bdfd:	mov    DWORD PTR [ebp-0x10],eax
  41be00:	mov    DWORD PTR [ebp-0x48],0xf89c85d9
  41be07:	mov    DWORD PTR [ebp-0x20],0xf89c85be
  41be0e:	mov    eax,DWORD PTR [ebp-0x24]
  41be11:	mov    ecx,DWORD PTR [ebp-0x38]
  41be14:	xor    eax,ebx
  41be16:	add    eax,esi
  41be18:	cmp    ecx,eax
  41be1a:	je     0x41c010
  41be20:	jmp    0x41bfec
  41be25:	mov    ecx,DWORD PTR [ebp-0xc]
  41be28:	mov    eax,DWORD PTR [ebp-0x38]
  41be2b:	sub    eax,ecx
  41be2d:	mov    ecx,DWORD PTR [ebp-0x48]
  41be30:	xor    ecx,ebx
  41be32:	add    ecx,esi
  41be34:	xor    edx,edx
  41be36:	div    ecx
  41be38:	mov    DWORD PTR [ebp-0x10],eax
  41be3b:	mov    eax,DWORD PTR [ebp-0x20]
  41be3e:	mov    ecx,DWORD PTR [ebp-0x10]
  41be41:	xor    eax,ebx
  41be43:	add    eax,esi
  41be45:	cmp    ecx,eax
  41be47:	jbe    0x41be53
  41be49:	mov    eax,DWORD PTR [ebp-0x20]
  41be4c:	xor    eax,ebx
  41be4e:	add    eax,esi
  41be50:	mov    DWORD PTR [ebp-0x10],eax
  41be53:	mov    eax,DWORD PTR [ebp-0x48]
  41be56:	mov    ecx,DWORD PTR [ebp-0x10]
  41be59:	xor    eax,ebx
  41be5b:	add    eax,esi
  41be5d:	imul   eax,ecx
  41be60:	mov    DWORD PTR [ebp-0x10],eax
  41be63:	mov    eax,DWORD PTR [ebp-0x24]
  41be66:	mov    ecx,DWORD PTR [ebp-0x10]
  41be69:	xor    eax,ebx
  41be6b:	add    eax,esi
  41be6d:	cmp    ecx,eax
  41be6f:	je     0x41bfda
  41be75:	mov    eax,DWORD PTR [ebp-0x10]
  41be78:	mov    DWORD PTR [ebp-0x34],eax
  41be7b:	mov    eax,DWORD PTR [ebp-0xc]
  41be7e:	add    eax,DWORD PTR [ebp-0x3c]
  41be81:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  41be88:	mov    DWORD PTR [ebp-0x10],edi
  41be8b:	mov    DWORD PTR [ebp-0x4c],0xf89c85bb
  41be92:	mov    DWORD PTR [ebp-0x1c],eax
  41be95:	mov    DWORD PTR [ebp-0x2c],0xf89c85ba
  41be9c:	mov    DWORD PTR [ebp-0x8],edi
  41be9f:	mov    eax,DWORD PTR [ebp-0x54]
  41bea2:	xor    eax,ebx
  41bea4:	add    eax,esi
  41bea6:	jmp    0x41bf99
  41beab:	mov    DWORD PTR [ebp-0xac],0xf89c85b3
  41beb5:	mov    DWORD PTR [ebp-0x9c],0xf89c85ad
  41bebf:	mov    eax,DWORD PTR [ebp-0x8]
  41bec2:	mov    ecx,DWORD PTR [ebp-0x18]
  41bec5:	xor    eax,ebx
  41bec7:	add    eax,esi
  41bec9:	imul   eax,ecx
  41becc:	mov    ecx,DWORD PTR [ebp-0x1c]
  41becf:	mov    al,BYTE PTR [eax+ecx*1]
  41bed2:	mov    BYTE PTR [ebp-0x1],al
  41bed5:	mov    eax,DWORD PTR [ebp-0x8]
  41bed8:	mov    ecx,DWORD PTR [ebp-0x18]
  41bedb:	xor    eax,ebx
  41bedd:	add    eax,esi
  41bedf:	imul   eax,ecx
  41bee2:	mov    ecx,DWORD PTR [ebp-0x4c]
  41bee5:	xor    ecx,ebx
  41bee7:	add    eax,ecx
  41bee9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41beec:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41bef4:	mov    ecx,DWORD PTR [ebp-0xac]
  41befa:	xor    ecx,ebx
  41befc:	lea    eax,[ecx+eax*1+0x3272e0]
  41bf03:	movzx  ecx,BYTE PTR [ebp-0x1]
  41bf07:	xor    ecx,eax
  41bf09:	mov    BYTE PTR [ebp-0x1],cl
  41bf0c:	mov    al,BYTE PTR [ebp-0x1]
  41bf0f:	mov    ecx,DWORD PTR [ebp-0x8]
  41bf12:	mov    edx,DWORD PTR [ebp-0x18]
  41bf15:	xor    ecx,ebx
  41bf17:	add    ecx,esi
  41bf19:	imul   ecx,edx
  41bf1c:	mov    edx,DWORD PTR [ebp-0x1c]
  41bf1f:	mov    BYTE PTR [ecx+edx*1],al
  41bf22:	mov    eax,DWORD PTR [ebp-0x8]
  41bf25:	mov    ecx,DWORD PTR [ebp-0x18]
  41bf28:	xor    eax,ebx
  41bf2a:	add    eax,esi
  41bf2c:	imul   eax,ecx
  41bf2f:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bf32:	mov    al,BYTE PTR [eax+ecx*1]
  41bf35:	mov    BYTE PTR [ebp-0x1],al
  41bf38:	mov    eax,DWORD PTR [ebp-0x8]
  41bf3b:	mov    ecx,DWORD PTR [ebp-0x18]
  41bf3e:	xor    eax,ebx
  41bf40:	add    eax,esi
  41bf42:	imul   eax,ecx
  41bf45:	mov    ecx,DWORD PTR [ebp-0x10]
  41bf48:	xor    ecx,ebx
  41bf4a:	add    eax,ecx
  41bf4c:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bf4f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272e0]
  41bf57:	mov    ecx,DWORD PTR [ebp-0x9c]
  41bf5d:	xor    ecx,ebx
  41bf5f:	lea    eax,[ecx+eax*1+0x3272e0]
  41bf66:	movzx  ecx,BYTE PTR [ebp-0x1]
  41bf6a:	xor    ecx,eax
  41bf6c:	mov    BYTE PTR [ebp-0x1],cl
  41bf6f:	mov    al,BYTE PTR [ebp-0x1]
  41bf72:	mov    ecx,DWORD PTR [ebp-0x8]
  41bf75:	mov    edx,DWORD PTR [ebp-0x18]
  41bf78:	xor    ecx,ebx
  41bf7a:	add    ecx,esi
  41bf7c:	imul   ecx,edx
  41bf7f:	mov    edx,DWORD PTR [ebp-0x1c]
  41bf82:	mov    BYTE PTR [ecx+edx*1],al
  41bf85:	mov    eax,DWORD PTR [ebp-0x2c]
  41bf88:	mov    ecx,DWORD PTR [ebp-0x10]
  41bf8b:	xor    eax,ebx
  41bf8d:	xor    ecx,ebx
  41bf8f:	add    eax,esi
  41bf91:	add    ecx,esi
  41bf93:	imul   eax,ecx
  41bf96:	add    eax,DWORD PTR [ebp-0x18]
  41bf99:	mov    DWORD PTR [ebp-0x18],eax
  41bf9c:	mov    eax,DWORD PTR [ebp-0x18]
  41bf9f:	mov    ecx,DWORD PTR [ebp-0x34]
  41bfa2:	cmp    ecx,eax
  41bfa4:	jb     0x41beab
  41bfaa:	mov    eax,DWORD PTR [ebp-0x10]
  41bfad:	mov    ecx,DWORD PTR [ebp-0x34]
  41bfb0:	xor    eax,ebx
  41bfb2:	add    eax,esi
  41bfb4:	imul   eax,ecx
  41bfb7:	mov    ecx,DWORD PTR [ebp-0x54]
  41bfba:	xor    ecx,ebx
  41bfbc:	add    ecx,esi
  41bfbe:	or     eax,ecx
  41bfc0:	mov    ecx,DWORD PTR [ebp-0x30]
  41bfc3:	xor    ecx,ebx
  41bfc5:	add    eax,ecx
  41bfc7:	mov    ecx,DWORD PTR [ebp-0x30]
  41bfca:	xor    ecx,ebx
  41bfcc:	add    eax,ecx
  41bfce:	mov    ecx,DWORD PTR [ebp-0xc]
  41bfd1:	lea    eax,[eax+ecx*1+0x64e5c0]
  41bfd8:	jmp    0x41bfe9
  41bfda:	mov    eax,DWORD PTR [ebp-0x30]
  41bfdd:	mov    ecx,DWORD PTR [ebp-0xc]
  41bfe0:	xor    eax,ebx
  41bfe2:	lea    eax,[eax+ecx*1+0x3272e0]
  41bfe9:	mov    DWORD PTR [ebp-0xc],eax
  41bfec:	mov    eax,DWORD PTR [ebp-0x30]
  41bfef:	xor    eax,ebx
  41bff1:	mov    ecx,0xffcd8d20
  41bff6:	sub    ecx,eax
  41bff8:	add    ecx,DWORD PTR [ebp-0x38]
  41bffb:	mov    eax,DWORD PTR [ebp-0x30]
  41bffe:	mov    edx,DWORD PTR [ebp-0xc]
  41c001:	xor    eax,ebx
  41c003:	add    eax,esi
  41c005:	imul   eax,edx
  41c008:	cmp    eax,ecx
  41c00a:	jbe    0x41be25
  41c010:	push   DWORD PTR [ebp+0x8]
  41c013:	mov    eax,DWORD PTR [ebp+0x8]
  41c016:	push   DWORD PTR [eax+0x1cc]
  41c01c:	lea    eax,[ebp-0xa0]
  41c022:	push   eax
  41c023:	mov    eax,DWORD PTR [ebp+0x8]
  41c026:	mov    eax,DWORD PTR [eax+0x1c4]
  41c02c:	push   DWORD PTR [eax]
  41c02e:	mov    eax,DWORD PTR [ebp+0x8]
  41c031:	mov    eax,DWORD PTR [eax+0x1c0]
  41c037:	push   DWORD PTR [eax]
  41c039:	push   DWORD PTR [ebp-0x40]
  41c03c:	push   DWORD PTR [ebp-0x28]
  41c03f:	call   0x41cad6
  41c044:	mov    DWORD PTR [ebp-0x3c],eax
  41c047:	mov    eax,DWORD PTR [ebp-0x14]
  41c04a:	mov    ecx,DWORD PTR [ebp-0x28]
  41c04d:	xor    eax,ebx
  41c04f:	add    eax,esi
  41c051:	cmp    eax,ecx
  41c053:	je     0x41c074
  41c055:	mov    eax,DWORD PTR [ebp+0x8]
  41c058:	mov    ecx,DWORD PTR [ebp-0x50]
  41c05b:	mov    eax,DWORD PTR [eax+0x1d8]
  41c061:	xor    ecx,ebx
  41c063:	add    ecx,esi
  41c065:	push   ecx
  41c066:	mov    ecx,DWORD PTR [ebp-0x14]
  41c069:	xor    ecx,ebx
  41c06b:	add    ecx,esi
  41c06d:	push   ecx
  41c06e:	push   DWORD PTR [ebp-0x28]
  41c071:	call   DWORD PTR [eax+0x18]
  41c074:	pop    edi
  41c075:	pop    esi
  41c076:	pop    ebx
  41c077:	leave  
  41c078:	ret    0x4
  41c07b:	push   ebp
  41c07c:	mov    ebp,esp
  41c07e:	push   ecx
  41c07f:	push   ecx
  41c080:	lea    eax,[ebp-0x8]
  41c083:	mov    DWORD PTR [ebp-0x4],eax
  41c086:	push   esi
  41c087:	mov    esi,DWORD PTR [ebp-0x4]
  41c08a:	mov    eax,0xf881ba0f
  41c08f:	mov    DWORD PTR [esi],eax
  41c091:	mov    esi,DWORD PTR [ebp-0x8]
  41c094:	cmp    esi,eax
  41c096:	pop    esi
  41c097:	jne    0x41c0a1
  41c099:	mov    BYTE PTR [ecx+0xa],0x7a
  41c09d:	mov    BYTE PTR [edx+0x8],0x2f
  41c0a1:	mov    BYTE PTR [edx+0xa],0x7a
  41c0a5:	mov    BYTE PTR [ecx+0x2],0x4
  41c0a9:	leave  
  41c0aa:	ret    
  41c0ab:	push   ebp
  41c0ac:	mov    ebp,esp
  41c0ae:	push   ecx
  41c0af:	push   ecx
  41c0b0:	lea    eax,[ebp-0x8]
  41c0b3:	mov    DWORD PTR [ebp-0x4],eax
  41c0b6:	mov    edx,DWORD PTR [ebp-0x4]
  41c0b9:	mov    eax,0xf88b0be3
  41c0be:	mov    DWORD PTR [edx],eax
  41c0c0:	mov    edx,DWORD PTR [ebp-0x8]
  41c0c3:	cmp    edx,eax
  41c0c5:	jne    0x41c0d6
  41c0c7:	mov    eax,DWORD PTR [ebp+0x8]
  41c0ca:	mov    BYTE PTR [ecx+0x9],0xe
  41c0ce:	mov    BYTE PTR [eax+0x7],0x47
  41c0d2:	mov    BYTE PTR [ecx+0x6],0xf
  41c0d6:	mov    BYTE PTR [ecx+0x3],0x1e
  41c0da:	leave  
  41c0db:	ret    0x4
  41c0de:	push   ebp
  41c0df:	mov    ebp,esp
  41c0e1:	push   ecx
  41c0e2:	push   ecx
  41c0e3:	lea    eax,[ebp-0x8]
  41c0e6:	mov    DWORD PTR [ebp-0x4],eax
  41c0e9:	mov    edx,DWORD PTR [ebp-0x4]
  41c0ec:	mov    eax,0x7e0da0f
  41c0f1:	mov    DWORD PTR [edx],eax
  41c0f3:	mov    edx,DWORD PTR [ebp-0x8]
  41c0f6:	cmp    edx,eax
  41c0f8:	jne    0x41c0fe
  41c0fa:	mov    BYTE PTR [ecx+0x7],0x47
  41c0fe:	mov    eax,DWORD PTR [ebp+0x8]
  41c101:	mov    BYTE PTR [ecx+0x1],0x1
  41c105:	mov    BYTE PTR [eax+0x9],0x2e
  41c109:	leave  
  41c10a:	ret    0x4
  41c10d:	push   ebp
  41c10e:	mov    ebp,esp
  41c110:	push   ecx
  41c111:	push   ecx
  41c112:	lea    eax,[ebp-0x8]
  41c115:	mov    DWORD PTR [ebp-0x4],eax
  41c118:	push   esi
  41c119:	mov    esi,DWORD PTR [ebp-0x4]
  41c11c:	mov    eax,0x7060e3e
  41c121:	mov    DWORD PTR [esi],eax
  41c123:	mov    esi,DWORD PTR [ebp-0x8]
  41c126:	cmp    esi,eax
  41c128:	pop    esi
  41c129:	jne    0x41c135
  41c12b:	mov    BYTE PTR [edx+0x4],0xb
  41c12f:	mov    WORD PTR [ecx+0x3],0xb1e
  41c135:	mov    BYTE PTR [edx],0x3f
  41c138:	leave  
  41c139:	ret    
  41c13a:	push   ebp
  41c13b:	mov    ebp,esp
  41c13d:	push   ecx
  41c13e:	push   ecx
  41c13f:	lea    eax,[ebp-0x8]
  41c142:	mov    DWORD PTR [ebp-0x4],eax
  41c145:	mov    edx,DWORD PTR [ebp-0x4]
  41c148:	mov    eax,0xf8870b3f
  41c14d:	mov    DWORD PTR [edx],eax
  41c14f:	mov    edx,DWORD PTR [ebp-0x8]
  41c152:	cmp    edx,eax
  41c154:	jne    0x41c161
  41c156:	mov    eax,DWORD PTR [ebp+0x8]
  41c159:	mov    BYTE PTR [ecx+0x8],0xf
  41c15d:	mov    BYTE PTR [eax+0x1],0x1
  41c161:	mov    BYTE PTR [ecx+0x5],0xf3
  41c165:	leave  
  41c166:	ret    0x4
  41c169:	push   esi
  41c16a:	mov    ecx,edi
  41c16c:	call   0x41c13a
  41c171:	mov    edx,edi
  41c173:	mov    ecx,esi
  41c175:	mov    BYTE PTR [esi],0x1f
  41c178:	call   0x41c10d
  41c17d:	push   esi
  41c17e:	mov    ecx,edi
  41c180:	mov    BYTE PTR [esi+0x5],0xf3
  41c184:	call   0x41c0de
  41c189:	push   esi
  41c18a:	mov    BYTE PTR [esi+0x6],0xf
  41c18e:	call   0x41c0ab
  41c193:	mov    BYTE PTR [esi+0x2],0x4
  41c197:	mov    edx,esi
  41c199:	jmp    0x41c07b
  41c19e:	push   ebp
  41c19f:	mov    ebp,esp
  41c1a1:	push   ecx
  41c1a2:	mov    ecx,DWORD PTR [edx+0x194]
  41c1a8:	push   esi
  41c1a9:	mov    esi,DWORD PTR [ebp+0x8]
  41c1ac:	mov    esi,DWORD PTR [esi]
  41c1ae:	mov    DWORD PTR [ecx],esi
  41c1b0:	mov    ecx,DWORD PTR [edx+0x194]
  41c1b6:	mov    ecx,DWORD PTR [ecx]
  41c1b8:	mov    esi,DWORD PTR [edx+0x190]
  41c1be:	mov    DWORD PTR [esi],ecx
  41c1c0:	mov    eax,DWORD PTR [edx+0x194]
  41c1c6:	mov    ecx,DWORD PTR [eax]
  41c1c8:	mov    ecx,DWORD PTR [ecx+0x3c]
  41c1cb:	add    ecx,DWORD PTR [eax]
  41c1cd:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  41c1d4:	mov    eax,DWORD PTR [ebp-0x4]
  41c1d7:	movzx  ecx,WORD PTR [ecx+0x16]
  41c1db:	xor    eax,0x7510899
  41c1e0:	add    eax,0x3272e0
  41c1e5:	pop    esi
  41c1e6:	test   ecx,eax
  41c1e8:	je     0x41c1f6
  41c1ea:	mov    eax,DWORD PTR [edx+0x1c8]
  41c1f0:	mov    DWORD PTR [eax],0xf89c85b8
  41c1f6:	leave  
  41c1f7:	ret    0x4
  41c1fa:	push   ebp
  41c1fb:	mov    ebp,esp
  41c1fd:	sub    esp,0x70
  41c200:	and    DWORD PTR [ebp-0x20],0x0
  41c204:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  41c20b:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  41c212:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  41c219:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  41c220:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  41c227:	mov    eax,DWORD PTR [ebp+0x20]
  41c22a:	mov    eax,DWORD PTR [eax+0x194]
  41c230:	mov    DWORD PTR [ebp-0xc],eax
  41c233:	mov    eax,DWORD PTR [ebp+0x20]
  41c236:	push   ebx
  41c237:	push   esi
  41c238:	mov    esi,DWORD PTR [eax+0x190]
  41c23e:	mov    eax,DWORD PTR [ebp+0x20]
  41c241:	mov    eax,DWORD PTR [eax+0x18c]
  41c247:	mov    DWORD PTR [ebp-0x8],eax
  41c24a:	mov    eax,DWORD PTR [eax]
  41c24c:	push   edi
  41c24d:	mov    DWORD PTR [ebp-0x4],esi
  41c250:	test   eax,eax
  41c252:	jne    0x41c25f
  41c254:	push   DWORD PTR [ebp+0x1c]
  41c257:	mov    edx,DWORD PTR [ebp+0x20]
  41c25a:	call   0x41c19e
  41c25f:	mov    eax,DWORD PTR [esi]
  41c261:	mov    ebx,DWORD PTR [esi]
  41c263:	add    ebx,DWORD PTR [eax+0x3c]
  41c266:	mov    eax,DWORD PTR [ebp+0xc]
  41c269:	mov    ecx,DWORD PTR [ebp-0x8]
  41c26c:	mov    ecx,DWORD PTR [ecx]
  41c26e:	mov    esi,0x7510899
  41c273:	xor    eax,esi
  41c275:	mov    edi,0x3272e0
  41c27a:	add    eax,edi
  41c27c:	cmp    eax,ecx
  41c27e:	jne    0x41c4b6
  41c284:	mov    eax,DWORD PTR [ebp-0xc]
  41c287:	mov    eax,DWORD PTR [eax]
  41c289:	mov    DWORD PTR [ebp-0x10],eax
  41c28c:	mov    eax,DWORD PTR [ebx+0x50]
  41c28f:	mov    DWORD PTR [ebp-0x68],eax
  41c292:	mov    eax,DWORD PTR [ebp-0x18]
  41c295:	xor    eax,esi
  41c297:	add    eax,edi
  41c299:	mov    DWORD PTR [ebp-0x64],eax
  41c29c:	mov    eax,DWORD PTR [ebp-0x14]
  41c29f:	and    DWORD PTR [ebp-0x6c],0x0
  41c2a3:	xor    eax,esi
  41c2a5:	add    eax,edi
  41c2a7:	mov    DWORD PTR [ebp-0x60],eax
  41c2aa:	lea    eax,[ebp-0x70]
  41c2ad:	push   eax
  41c2ae:	mov    eax,DWORD PTR [ebp+0x8]
  41c2b1:	xor    eax,esi
  41c2b3:	add    eax,edi
  41c2b5:	push   eax
  41c2b6:	mov    eax,DWORD PTR [ebp+0x20]
  41c2b9:	add    eax,0xaa
  41c2be:	push   eax
  41c2bf:	mov    eax,DWORD PTR [ebp+0x20]
  41c2c2:	mov    eax,DWORD PTR [eax+0x198]
  41c2c8:	mov    DWORD PTR [ebp-0x70],0x4
  41c2cf:	push   DWORD PTR [eax]
  41c2d1:	mov    eax,DWORD PTR [ebp+0x10]
  41c2d4:	call   eax
  41c2d6:	mov    ecx,DWORD PTR [ebp-0xc]
  41c2d9:	mov    ecx,DWORD PTR [ecx]
  41c2db:	mov    edx,DWORD PTR [ebp-0x8]
  41c2de:	mov    DWORD PTR [ebp-0x6c],eax
  41c2e1:	mov    DWORD PTR [ebp+0x1c],eax
  41c2e4:	mov    DWORD PTR [edx],ecx
  41c2e6:	mov    ecx,DWORD PTR [ebp-0x4]
  41c2e9:	mov    DWORD PTR [ecx],eax
  41c2eb:	mov    eax,DWORD PTR [ebx+0x50]
  41c2ee:	mov    DWORD PTR [ebp-0x68],eax
  41c2f1:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2f4:	xor    eax,esi
  41c2f6:	add    eax,edi
  41c2f8:	mov    DWORD PTR [ebp-0x64],eax
  41c2fb:	lea    eax,[ebp-0x20]
  41c2fe:	mov    DWORD PTR [ebp-0x60],eax
  41c301:	lea    eax,[ebp-0x70]
  41c304:	push   eax
  41c305:	mov    eax,DWORD PTR [ebp+0x8]
  41c308:	xor    eax,esi
  41c30a:	add    eax,edi
  41c30c:	push   eax
  41c30d:	mov    eax,DWORD PTR [ebp+0x20]
  41c310:	add    eax,0xee
  41c315:	push   eax
  41c316:	mov    eax,DWORD PTR [ebp+0x20]
  41c319:	mov    eax,DWORD PTR [eax+0x198]
  41c31f:	mov    DWORD PTR [ebp-0x70],0x4
  41c326:	push   DWORD PTR [eax]
  41c328:	mov    eax,DWORD PTR [ebp+0x10]
  41c32b:	call   eax
  41c32d:	test   eax,eax
  41c32f:	je     0x41c354
  41c331:	and    DWORD PTR [ebp+0xc],0x0
  41c335:	cmp    DWORD PTR [ebx+0x50],0x0
  41c339:	jbe    0x41c354
  41c33b:	mov    eax,DWORD PTR [ebp+0x1c]
  41c33e:	mov    ecx,DWORD PTR [ebp-0x10]
  41c341:	sub    ecx,eax
  41c343:	mov    dl,BYTE PTR [ecx+eax*1]
  41c346:	inc    DWORD PTR [ebp+0xc]
  41c349:	mov    BYTE PTR [eax],dl
  41c34b:	mov    edx,DWORD PTR [ebp+0xc]
  41c34e:	inc    eax
  41c34f:	cmp    edx,DWORD PTR [ebx+0x50]
  41c352:	jb     0x41c343
  41c354:	mov    edx,DWORD PTR [ebp+0x1c]
  41c357:	mov    ecx,DWORD PTR [edx+0x3c]
  41c35a:	add    ecx,edx
  41c35c:	mov    eax,DWORD PTR [ecx+0xa0]
  41c362:	mov    ebx,DWORD PTR [ecx+0x28]
  41c365:	add    eax,edx
  41c367:	sub    edx,DWORD PTR [ebp-0x10]
  41c36a:	add    ebx,DWORD PTR [ebp+0x1c]
  41c36d:	mov    DWORD PTR [ebp+0xc],edx
  41c370:	mov    DWORD PTR [ebp-0x2c],ecx
  41c373:	mov    DWORD PTR [ebp-0x14],ebx
  41c376:	mov    DWORD PTR [ebp-0x8],0x0
  41c37d:	jmp    0x41c3f9
  41c37f:	add    edx,0xfffffff8
  41c382:	shr    edx,1
  41c384:	mov    DWORD PTR [ebp-0x18],edx
  41c387:	je     0x41c3e5
  41c389:	lea    edx,[eax+0x8]
  41c38c:	mov    DWORD PTR [ebp-0x4],edx
  41c38f:	mov    edx,DWORD PTR [ebp-0x18]
  41c392:	mov    DWORD PTR [ebp-0x18],edx
  41c395:	mov    edx,DWORD PTR [ebp-0x4]
  41c398:	movzx  edx,WORD PTR [edx]
  41c39b:	mov    DWORD PTR [ebp-0x24],edx
  41c39e:	and    edx,0xfff
  41c3a4:	mov    DWORD PTR [ebp-0x28],edx
  41c3a7:	mov    edx,DWORD PTR [ebp-0x24]
  41c3aa:	shr    edx,0xc
  41c3ad:	add    edx,0xffcd8d20
  41c3b3:	xor    edx,esi
  41c3b5:	cmp    edx,0xf89c85ba
  41c3bb:	jne    0x41c3dc
  41c3bd:	mov    edx,DWORD PTR [ebp-0x28]
  41c3c0:	add    edx,DWORD PTR [ebp+0x1c]
  41c3c3:	mov    ebx,DWORD PTR [eax]
  41c3c5:	cmp    DWORD PTR [ebx+edx*1],0x0
  41c3c9:	je     0x41c3d9
  41c3cb:	mov    ecx,DWORD PTR [ebp+0xc]
  41c3ce:	add    ecx,DWORD PTR [ebx+edx*1]
  41c3d1:	mov    ebx,DWORD PTR [eax]
  41c3d3:	mov    DWORD PTR [edx+ebx*1],ecx
  41c3d6:	mov    ecx,DWORD PTR [ebp-0x2c]
  41c3d9:	mov    ebx,DWORD PTR [ebp-0x14]
  41c3dc:	add    DWORD PTR [ebp-0x4],0x2
  41c3e0:	dec    DWORD PTR [ebp-0x18]
  41c3e3:	jne    0x41c395
  41c3e5:	mov    edx,DWORD PTR [ebp-0xc]
  41c3e8:	add    DWORD PTR [ebp-0x8],edx
  41c3eb:	mov    edx,DWORD PTR [ebp-0x8]
  41c3ee:	cmp    edx,DWORD PTR [ecx+0xa4]
  41c3f4:	jae    0x41c407
  41c3f6:	add    eax,DWORD PTR [ebp-0xc]
  41c3f9:	mov    edx,DWORD PTR [eax+0x4]
  41c3fc:	mov    DWORD PTR [ebp-0xc],edx
  41c3ff:	test   edx,edx
  41c401:	jne    0x41c37f
  41c407:	mov    eax,DWORD PTR [ebp-0x10]
  41c40a:	mov    DWORD PTR [ebp-0x6c],eax
  41c40d:	mov    DWORD PTR [ebp-0x70],0x4
  41c414:	mov    eax,DWORD PTR [ecx+0x50]
  41c417:	mov    DWORD PTR [ebp-0x68],eax
  41c41a:	mov    eax,DWORD PTR [ebp-0x1c]
  41c41d:	xor    eax,esi
  41c41f:	add    eax,edi
  41c421:	mov    DWORD PTR [ebp-0x64],eax
  41c424:	lea    eax,[ebp-0x20]
  41c427:	mov    DWORD PTR [ebp-0x60],eax
  41c42a:	lea    eax,[ebp-0x70]
  41c42d:	push   eax
  41c42e:	mov    eax,DWORD PTR [ebp+0x8]
  41c431:	xor    eax,esi
  41c433:	add    eax,edi
  41c435:	push   eax
  41c436:	mov    eax,DWORD PTR [ebp+0x20]
  41c439:	add    eax,0xee
  41c43e:	push   eax
  41c43f:	mov    eax,DWORD PTR [ebp+0x20]
  41c442:	mov    eax,DWORD PTR [eax+0x198]
  41c448:	push   DWORD PTR [eax]
  41c44a:	mov    eax,DWORD PTR [ebp+0x10]
  41c44d:	call   eax
  41c44f:	mov    eax,DWORD PTR [ebp+0x20]
  41c452:	mov    eax,DWORD PTR [eax+0x180]
  41c458:	add    eax,DWORD PTR [ebp+0xc]
  41c45b:	mov    ecx,DWORD PTR [ebp+0xc]
  41c45e:	push   DWORD PTR [ebp+0x18]
  41c461:	mov    DWORD PTR [eax],ecx
  41c463:	push   DWORD PTR [ebp+0x14]
  41c466:	push   DWORD PTR [ebp+0x1c]
  41c469:	call   ebx
  41c46b:	mov    ecx,DWORD PTR [ebp+0xc]
  41c46e:	add    ecx,DWORD PTR [ebp+0x20]
  41c471:	lea    eax,[ebp+0x4]
  41c474:	mov    DWORD PTR [ebp+0x20],ecx
  41c477:	mov    ecx,DWORD PTR [ebp+0x20]
  41c47a:	mov    ecx,DWORD PTR [ebp+0x20]
  41c47d:	mov    edx,DWORD PTR [ecx+0x190]
  41c483:	mov    ecx,DWORD PTR [ebp+0x20]
  41c486:	mov    ecx,DWORD PTR [ecx+0x18c]
  41c48c:	mov    esi,DWORD PTR [ecx]
  41c48e:	cmp    DWORD PTR [eax],esi
  41c490:	jb     0x41c4b1
  41c492:	mov    esi,DWORD PTR [edx]
  41c494:	mov    edi,DWORD PTR [edx]
  41c496:	mov    esi,DWORD PTR [esi+0x3c]
  41c499:	lea    esi,[edi+esi*1+0x50]
  41c49d:	mov    edi,DWORD PTR [ecx]
  41c49f:	add    edi,DWORD PTR [esi]
  41c4a1:	cmp    DWORD PTR [eax],edi
  41c4a3:	jae    0x41c4b1
  41c4a5:	mov    esi,DWORD PTR [ecx]
  41c4a7:	mov    ecx,DWORD PTR [eax]
  41c4a9:	mov    edx,DWORD PTR [edx]
  41c4ab:	sub    ecx,esi
  41c4ad:	add    edx,ecx
  41c4af:	mov    DWORD PTR [eax],edx
  41c4b1:	mov    eax,DWORD PTR [ebp+0xc]
  41c4b4:	jmp    0x41c4b8
  41c4b6:	xor    eax,eax
  41c4b8:	pop    edi
  41c4b9:	pop    esi
  41c4ba:	pop    ebx
  41c4bb:	leave  
  41c4bc:	ret    0x1c
  41c4bf:	push   ebp
  41c4c0:	mov    ebp,esp
  41c4c2:	sub    esp,0x1c
  41c4c5:	push   esi
  41c4c6:	mov    esi,eax
  41c4c8:	mov    eax,DWORD PTR [ecx+0x190]
  41c4ce:	cmp    DWORD PTR [eax],0x0
  41c4d1:	je     0x41c5e1
  41c4d7:	test   edx,edx
  41c4d9:	je     0x41c5e1
  41c4df:	test   esi,esi
  41c4e1:	je     0x41c5e1
  41c4e7:	mov    eax,DWORD PTR [esi+0x88]
  41c4ed:	test   eax,eax
  41c4ef:	je     0x41c5dc
  41c4f5:	cmp    DWORD PTR [esi+0x8c],0x10
  41c4fc:	je     0x41c5dc
  41c502:	cmp    DWORD PTR [esi+0x34],edx
  41c505:	je     0x41c5dc
  41c50b:	mov    esi,DWORD PTR [ecx+0x18c]
  41c511:	and    DWORD PTR [ebp-0x10],0x0
  41c515:	mov    ecx,edx
  41c517:	sub    ecx,DWORD PTR [esi]
  41c519:	add    eax,edx
  41c51b:	movzx  edx,WORD PTR [eax+0xc]
  41c51f:	mov    DWORD PTR [ebp-0x1c],ecx
  41c522:	movzx  ecx,WORD PTR [eax+0xe]
  41c526:	add    ecx,edx
  41c528:	je     0x41c5dc
  41c52e:	lea    ecx,[eax+0x14]
  41c531:	push   ebx
  41c532:	mov    DWORD PTR [ebp-0x18],ecx
  41c535:	mov    esi,0x7fffffff
  41c53a:	push   edi
  41c53b:	test   DWORD PTR [ecx],esi
  41c53d:	je     0x41c5be
  41c53f:	mov    edx,DWORD PTR [ecx]
  41c541:	and    DWORD PTR [ebp-0xc],0x0
  41c545:	and    edx,esi
  41c547:	add    edx,eax
  41c549:	movzx  edi,WORD PTR [edx+0xe]
  41c54d:	movzx  ebx,WORD PTR [edx+0xc]
  41c551:	add    edi,ebx
  41c553:	je     0x41c5be
  41c555:	lea    ecx,[edx+0x14]
  41c558:	mov    DWORD PTR [ebp-0x14],ecx
  41c55b:	test   DWORD PTR [ecx],esi
  41c55d:	je     0x41c5a0
  41c55f:	mov    ecx,DWORD PTR [ecx]
  41c561:	and    DWORD PTR [ebp-0x8],0x0
  41c565:	and    ecx,esi
  41c567:	add    ecx,eax
  41c569:	movzx  edi,WORD PTR [ecx+0xe]
  41c56d:	movzx  ebx,WORD PTR [ecx+0xc]
  41c571:	add    edi,ebx
  41c573:	je     0x41c5a0
  41c575:	lea    edi,[ecx+0x14]
  41c578:	mov    DWORD PTR [ebp-0x4],edi
  41c57b:	mov    edi,DWORD PTR [ebp-0x4]
  41c57e:	mov    edi,DWORD PTR [edi]
  41c580:	test   edi,edi
  41c582:	je     0x41c58a
  41c584:	mov    ebx,DWORD PTR [ebp-0x1c]
  41c587:	add    DWORD PTR [edi+eax*1],ebx
  41c58a:	movzx  edi,WORD PTR [ecx+0xe]
  41c58e:	movzx  ebx,WORD PTR [ecx+0xc]
  41c592:	inc    DWORD PTR [ebp-0x8]
  41c595:	add    DWORD PTR [ebp-0x4],0x8
  41c599:	add    edi,ebx
  41c59b:	cmp    DWORD PTR [ebp-0x8],edi
  41c59e:	jb     0x41c57b
  41c5a0:	movzx  edi,WORD PTR [edx+0xe]
  41c5a4:	movzx  ebx,WORD PTR [edx+0xc]
  41c5a8:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5ab:	inc    DWORD PTR [ebp-0xc]
  41c5ae:	add    ecx,0x8
  41c5b1:	add    edi,ebx
  41c5b3:	mov    DWORD PTR [ebp-0x14],ecx
  41c5b6:	cmp    DWORD PTR [ebp-0xc],edi
  41c5b9:	jb     0x41c55b
  41c5bb:	mov    ecx,DWORD PTR [ebp-0x18]
  41c5be:	movzx  edx,WORD PTR [eax+0xe]
  41c5c2:	movzx  edi,WORD PTR [eax+0xc]
  41c5c6:	inc    DWORD PTR [ebp-0x10]
  41c5c9:	add    ecx,0x8
  41c5cc:	add    edx,edi
  41c5ce:	mov    DWORD PTR [ebp-0x18],ecx
  41c5d1:	cmp    DWORD PTR [ebp-0x10],edx
  41c5d4:	jb     0x41c53b
  41c5da:	pop    edi
  41c5db:	pop    ebx
  41c5dc:	xor    eax,eax
  41c5de:	inc    eax
  41c5df:	jmp    0x41c5e3
  41c5e1:	xor    eax,eax
  41c5e3:	pop    esi
  41c5e4:	leave  
  41c5e5:	ret    
  41c5e6:	push   ebp
  41c5e7:	mov    ebp,esp
  41c5e9:	mov    ecx,DWORD PTR [ecx+0x190]
  41c5ef:	mov    eax,DWORD PTR [ebp+0xc]
  41c5f2:	sub    esp,0x10
  41c5f5:	push   ebx
  41c5f6:	xor    ebx,ebx
  41c5f8:	push   esi
  41c5f9:	push   edi
  41c5fa:	cmp    DWORD PTR [ecx],ebx
  41c5fc:	je     0x41c684
  41c602:	cmp    eax,ebx
  41c604:	je     0x41c684
  41c606:	cmp    DWORD PTR [eax+0x78],ebx
  41c609:	jne    0x41c610
  41c60b:	xor    eax,eax
  41c60d:	inc    eax
  41c60e:	jmp    0x41c686
  41c610:	mov    eax,DWORD PTR [eax+0x78]
  41c613:	add    eax,DWORD PTR [ebp+0x8]
  41c616:	mov    ecx,DWORD PTR [eax+0x1c]
  41c619:	mov    edx,DWORD PTR [eax+0x24]
  41c61c:	mov    esi,DWORD PTR [eax+0x14]
  41c61f:	mov    edi,DWORD PTR [eax+0x18]
  41c622:	add    ecx,DWORD PTR [ebp+0x8]
  41c625:	add    edx,DWORD PTR [ebp+0x8]
  41c628:	mov    DWORD PTR [ebp-0x4],esi
  41c62b:	cmp    esi,edi
  41c62d:	ja     0x41c632
  41c62f:	mov    DWORD PTR [ebp-0x4],edi
  41c632:	mov    DWORD PTR [ebp-0x8],ebx
  41c635:	cmp    DWORD PTR [ebp-0x4],ebx
  41c638:	jbe    0x41c60b
  41c63a:	cmp    ebx,DWORD PTR [eax+0x14]
  41c63d:	jae    0x41c645
  41c63f:	movzx  esi,WORD PTR [edx+ebx*2]
  41c643:	jmp    0x41c647
  41c645:	mov    esi,ebx
  41c647:	lea    esi,[ecx+esi*4]
  41c64a:	mov    edi,DWORD PTR [esi]
  41c64c:	test   edi,edi
  41c64e:	je     0x41c679
  41c650:	add    edi,DWORD PTR [ebp+0x8]
  41c653:	mov    DWORD PTR [ebp-0x10],edi
  41c656:	cmp    edi,eax
  41c658:	jbe    0x41c66a
  41c65a:	mov    ebx,DWORD PTR [ebp+0xc]
  41c65d:	mov    ebx,DWORD PTR [ebx+0x7c]
  41c660:	add    ebx,eax
  41c662:	cmp    edi,ebx
  41c664:	jae    0x41c66a
  41c666:	mov    esi,DWORD PTR [esi]
  41c668:	jmp    0x41c672
  41c66a:	sub    edi,DWORD PTR [ebp+0x8]
  41c66d:	mov    DWORD PTR [esi],edi
  41c66f:	mov    esi,DWORD PTR [ebp-0x10]
  41c672:	test   esi,esi
  41c674:	je     0x41c684
  41c676:	mov    ebx,DWORD PTR [ebp-0x8]
  41c679:	inc    ebx
  41c67a:	mov    DWORD PTR [ebp-0x8],ebx
  41c67d:	cmp    ebx,DWORD PTR [ebp-0x4]
  41c680:	jb     0x41c63a
  41c682:	jmp    0x41c60b
  41c684:	xor    eax,eax
  41c686:	pop    edi
  41c687:	pop    esi
  41c688:	pop    ebx
  41c689:	leave  
  41c68a:	ret    0x8
  41c68d:	push   ebp
  41c68e:	mov    ebp,esp
  41c690:	sub    esp,0x2c
  41c693:	mov    edx,0xf89c85b9
  41c698:	mov    DWORD PTR [ebp-0x4],edx
  41c69b:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41c6a2:	mov    eax,DWORD PTR [ebp-0x4]
  41c6a5:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6a8:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6ab:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6ae:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6b1:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6b4:	push   ebx
  41c6b5:	mov    ebx,DWORD PTR [ebp+0x10]
  41c6b8:	push   esi
  41c6b9:	mov    esi,0x7510899
  41c6be:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  41c6c5:	mov    ecx,DWORD PTR [ebp-0x4]
  41c6c8:	mov    ebx,DWORD PTR [ebx+0x190]
  41c6ce:	push   edi
  41c6cf:	mov    edi,0x3272e0
  41c6d4:	xor    ecx,esi
  41c6d6:	xor    eax,esi
  41c6d8:	add    eax,edi
  41c6da:	add    ecx,edi
  41c6dc:	mov    DWORD PTR [ebp-0x18],eax
  41c6df:	cmp    ecx,DWORD PTR [ebx]
  41c6e1:	je     0x41c962
  41c6e7:	mov    ebx,DWORD PTR [ebp-0x4]
  41c6ea:	mov    ecx,DWORD PTR [ebp+0xc]
  41c6ed:	xor    ebx,esi
  41c6ef:	add    ebx,edi
  41c6f1:	cmp    ebx,ecx
  41c6f3:	je     0x41c962
  41c6f9:	mov    ebx,DWORD PTR [ebp-0x4]
  41c6fc:	mov    ecx,DWORD PTR [ecx+0x80]
  41c702:	xor    ebx,esi
  41c704:	add    ebx,edi
  41c706:	cmp    ecx,ebx
  41c708:	je     0x41c95d
  41c70e:	add    ecx,DWORD PTR [ebp+0x8]
  41c711:	mov    DWORD PTR [ebp-0x2c],ecx
  41c714:	mov    ebx,edx
  41c716:	xor    ebx,esi
  41c718:	add    ebx,edi
  41c71a:	mov    DWORD PTR [ebp-0x10],ebx
  41c71d:	mov    ebx,DWORD PTR [ebp-0x10]
  41c720:	cmp    ebx,edx
  41c722:	je     0x41c736
  41c724:	mov    edx,DWORD PTR [ebp-0x10]
  41c727:	mov    ebx,DWORD PTR [ebp-0x4]
  41c72a:	imul   edx,edx,0x14
  41c72d:	xor    ebx,esi
  41c72f:	add    ebx,edi
  41c731:	cmp    DWORD PTR [edx+ecx*1],ebx
  41c734:	jne    0x41c74d
  41c736:	mov    edx,DWORD PTR [ebp-0x10]
  41c739:	mov    ebx,DWORD PTR [ebp-0x4]
  41c73c:	imul   edx,edx,0x14
  41c73f:	xor    ebx,esi
  41c741:	add    ebx,edi
  41c743:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  41c747:	je     0x41c94f
  41c74d:	mov    eax,DWORD PTR [ebp-0x4]
  41c750:	mov    ebx,DWORD PTR [ebp-0x4]
  41c753:	mov    eax,DWORD PTR [ebp-0x10]
  41c756:	imul   eax,eax,0x14
  41c759:	add    eax,ecx
  41c75b:	mov    ecx,DWORD PTR [eax+0x10]
  41c75e:	add    ecx,DWORD PTR [ebp+0x8]
  41c761:	xor    ebx,esi
  41c763:	mov    DWORD PTR [ebp-0x1c],ecx
  41c766:	mov    ecx,DWORD PTR [ebp-0x4]
  41c769:	mov    edx,DWORD PTR [ebp-0x4]
  41c76c:	xor    ecx,esi
  41c76e:	add    ecx,edi
  41c770:	xor    edx,esi
  41c772:	mov    DWORD PTR [ebp-0x24],ecx
  41c775:	mov    ecx,DWORD PTR [eax]
  41c777:	add    edx,edi
  41c779:	add    ebx,edi
  41c77b:	cmp    ecx,edx
  41c77d:	je     0x41c785
  41c77f:	add    ecx,DWORD PTR [ebp+0x8]
  41c782:	mov    DWORD PTR [ebp-0x24],ecx
  41c785:	mov    ecx,DWORD PTR [ebp-0x4]
  41c788:	xor    ecx,esi
  41c78a:	add    ecx,DWORD PTR [eax+0xc]
  41c78d:	mov    eax,DWORD PTR [ebp+0x8]
  41c790:	lea    eax,[ecx+eax*1+0x3272e0]
  41c797:	mov    DWORD PTR [ebp+0xc],eax
  41c79a:	mov    DWORD PTR [ebp-0x28],0xf89c85bc
  41c7a1:	mov    eax,DWORD PTR [ebp+0x10]
  41c7a4:	push   DWORD PTR [ebp+0xc]
  41c7a7:	mov    eax,DWORD PTR [eax+0x1d8]
  41c7ad:	call   DWORD PTR [eax]
  41c7af:	mov    ecx,DWORD PTR [ebp-0x4]
  41c7b2:	xor    ecx,esi
  41c7b4:	add    ecx,edi
  41c7b6:	mov    DWORD PTR [ebp-0xc],eax
  41c7b9:	cmp    ecx,eax
  41c7bb:	jne    0x41c7cf
  41c7bd:	mov    eax,DWORD PTR [ebp+0x10]
  41c7c0:	push   DWORD PTR [ebp+0xc]
  41c7c3:	mov    eax,DWORD PTR [eax+0x1d8]
  41c7c9:	call   DWORD PTR [eax+0xc]
  41c7cc:	mov    DWORD PTR [ebp-0xc],eax
  41c7cf:	mov    DWORD PTR [ebp-0x20],0x7f661b00
  41c7d6:	mov    DWORD PTR [ebp-0x20],0xf89c9990
  41c7dd:	mov    eax,DWORD PTR [ebp-0x4]
  41c7e0:	xor    eax,esi
  41c7e2:	add    eax,edi
  41c7e4:	cmp    eax,DWORD PTR [ebp-0xc]
  41c7e7:	jne    0x41c80c
  41c7e9:	mov    eax,DWORD PTR [ebp-0x8]
  41c7ec:	mov    ecx,DWORD PTR [ebp-0x20]
  41c7ef:	xor    eax,esi
  41c7f1:	xor    ecx,esi
  41c7f3:	lea    ebx,[ebx+eax*1+0x3272e0]
  41c7fa:	mov    eax,DWORD PTR [ebp+0x10]
  41c7fd:	mov    eax,DWORD PTR [eax+0x1d8]
  41c803:	add    ecx,edi
  41c805:	imul   ecx,ebx
  41c808:	push   ecx
  41c809:	call   DWORD PTR [eax+0x24]
  41c80c:	mov    eax,DWORD PTR [ebp-0x4]
  41c80f:	xor    eax,esi
  41c811:	add    eax,edi
  41c813:	cmp    eax,DWORD PTR [ebp-0xc]
  41c816:	jne    0x41c827
  41c818:	mov    eax,DWORD PTR [ebp-0x28]
  41c81b:	xor    eax,esi
  41c81d:	add    eax,edi
  41c81f:	cmp    ebx,eax
  41c821:	jbe    0x41c7a1
  41c827:	mov    eax,DWORD PTR [ebp-0x4]
  41c82a:	xor    eax,esi
  41c82c:	add    eax,edi
  41c82e:	cmp    eax,DWORD PTR [ebp-0xc]
  41c831:	jne    0x41c84a
  41c833:	mov    eax,DWORD PTR [ebp-0x8]
  41c836:	mov    ecx,DWORD PTR [ebp-0x18]
  41c839:	xor    eax,esi
  41c83b:	lea    eax,[ecx+eax*1+0x3272e0]
  41c842:	mov    DWORD PTR [ebp-0x18],eax
  41c845:	jmp    0x41c939
  41c84a:	mov    DWORD PTR [ebp-0x14],0x1121b01
  41c851:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  41c858:	mov    ebx,DWORD PTR [ebp-0x4]
  41c85b:	xor    ebx,esi
  41c85d:	add    ebx,edi
  41c85f:	jmp    0x41c926
  41c864:	mov    eax,DWORD PTR [ebp-0x4]
  41c867:	xor    eax,esi
  41c869:	add    eax,edi
  41c86b:	mov    DWORD PTR [ebp-0x14],eax
  41c86e:	mov    eax,DWORD PTR [ebp-0x4]
  41c871:	xor    eax,esi
  41c873:	add    eax,edi
  41c875:	mov    DWORD PTR [ebp+0xc],eax
  41c878:	mov    ecx,DWORD PTR [ebp-0x4]
  41c87b:	mov    eax,DWORD PTR [ebp-0x24]
  41c87e:	xor    ecx,esi
  41c880:	add    ecx,edi
  41c882:	cmp    ecx,eax
  41c884:	je     0x41c88c
  41c886:	mov    eax,DWORD PTR [eax+ebx*4]
  41c889:	mov    DWORD PTR [ebp-0x14],eax
  41c88c:	mov    eax,DWORD PTR [ebp-0x1c]
  41c88f:	mov    eax,DWORD PTR [eax+ebx*4]
  41c892:	mov    DWORD PTR [ebp+0xc],eax
  41c895:	mov    eax,DWORD PTR [ebp-0x4]
  41c898:	mov    ecx,DWORD PTR [ebp-0x14]
  41c89b:	xor    eax,esi
  41c89d:	add    eax,edi
  41c89f:	cmp    eax,ecx
  41c8a1:	je     0x41c8cc
  41c8a3:	mov    eax,DWORD PTR [ebp-0x4]
  41c8a6:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8a9:	xor    eax,esi
  41c8ab:	add    eax,edi
  41c8ad:	shr    ecx,0x1f
  41c8b0:	cmp    eax,ecx
  41c8b2:	je     0x41c8cc
  41c8b4:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8b7:	mov    eax,DWORD PTR [ebp+0x10]
  41c8ba:	mov    eax,DWORD PTR [eax+0x1d8]
  41c8c0:	movzx  ecx,cx
  41c8c3:	push   ecx
  41c8c4:	push   DWORD PTR [ebp-0xc]
  41c8c7:	call   DWORD PTR [eax+0x8]
  41c8ca:	jmp    0x41c8e5
  41c8cc:	mov    eax,DWORD PTR [ebp+0xc]
  41c8cf:	add    eax,DWORD PTR [ebp+0x8]
  41c8d2:	mov    ecx,DWORD PTR [ebp+0x10]
  41c8d5:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41c8db:	add    eax,0x2
  41c8de:	push   eax
  41c8df:	push   DWORD PTR [ebp-0xc]
  41c8e2:	call   DWORD PTR [ecx+0x8]
  41c8e5:	mov    DWORD PTR [ebp+0xc],eax
  41c8e8:	mov    eax,DWORD PTR [ebp-0x4]
  41c8eb:	mov    ecx,DWORD PTR [ebp+0xc]
  41c8ee:	xor    eax,esi
  41c8f0:	add    eax,edi
  41c8f2:	cmp    eax,ecx
  41c8f4:	mov    eax,DWORD PTR [ebp-0x8]
  41c8f7:	jne    0x41c90a
  41c8f9:	mov    ecx,DWORD PTR [ebp-0x18]
  41c8fc:	xor    eax,esi
  41c8fe:	lea    eax,[ecx+eax*1+0x3272e0]
  41c905:	mov    DWORD PTR [ebp-0x18],eax
  41c908:	jmp    0x41c91a
  41c90a:	mov    ecx,DWORD PTR [ebp+0xc]
  41c90d:	xor    eax,esi
  41c90f:	add    eax,edi
  41c911:	imul   eax,ecx
  41c914:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c917:	mov    DWORD PTR [ecx+ebx*4],eax
  41c91a:	mov    eax,DWORD PTR [ebp-0x8]
  41c91d:	xor    eax,esi
  41c91f:	lea    ebx,[ebx+eax*1+0x3272e0]
  41c926:	mov    eax,DWORD PTR [ebp-0x4]
  41c929:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c92c:	xor    eax,esi
  41c92e:	add    eax,edi
  41c930:	cmp    DWORD PTR [ecx+ebx*4],eax
  41c933:	jne    0x41c864
  41c939:	mov    edx,DWORD PTR [ebp-0x10]
  41c93c:	mov    eax,DWORD PTR [ebp-0x18]
  41c93f:	mov    ecx,DWORD PTR [ebp-0x2c]
  41c942:	sub    edx,0x3272df
  41c948:	xor    edx,esi
  41c94a:	jmp    0x41c714
  41c94f:	mov    ecx,DWORD PTR [ebp-0x4]
  41c952:	xor    ecx,esi
  41c954:	add    ecx,edi
  41c956:	cmp    eax,ecx
  41c958:	mov    eax,DWORD PTR [ebp-0x4]
  41c95b:	jne    0x41c965
  41c95d:	mov    eax,DWORD PTR [ebp-0x8]
  41c960:	jmp    0x41c965
  41c962:	mov    eax,DWORD PTR [ebp-0x4]
  41c965:	xor    eax,esi
  41c967:	add    eax,edi
  41c969:	pop    edi
  41c96a:	pop    esi
  41c96b:	pop    ebx
  41c96c:	leave  
  41c96d:	ret    0xc
  41c970:	push   ebp
  41c971:	mov    ebp,esp
  41c973:	sub    esp,0x28
  41c976:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41c97d:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  41c984:	mov    eax,DWORD PTR [ebp+0xc]
  41c987:	mov    DWORD PTR [ebp+0xc],eax
  41c98a:	push   esi
  41c98b:	mov    eax,eax
  41c98d:	mov    eax,DWORD PTR [ebp-0x4]
  41c990:	mov    esi,DWORD PTR [ebp+0x8]
  41c993:	mov    ecx,0x7510899
  41c998:	xor    eax,ecx
  41c99a:	mov    edx,0x3272e0
  41c99f:	add    eax,edx
  41c9a1:	cmp    esi,eax
  41c9a3:	je     0x41caca
  41c9a9:	mov    eax,DWORD PTR [ebp+0x8]
  41c9ac:	mov    esi,DWORD PTR [ebp+0x8]
  41c9af:	add    esi,DWORD PTR [eax+0x3c]
  41c9b2:	push   edi
  41c9b3:	mov    DWORD PTR [ebp+0xc],esi
  41c9b6:	mov    DWORD PTR [ebp-0x1c],0xf89c85bc
  41c9bd:	mov    eax,DWORD PTR [ebp-0x1c]
  41c9c0:	mov    esi,DWORD PTR [ebp-0x4]
  41c9c3:	mov    edi,DWORD PTR [ebp+0xc]
  41c9c6:	xor    esi,ecx
  41c9c8:	xor    eax,ecx
  41c9ca:	add    esi,edx
  41c9cc:	cmp    DWORD PTR [edi+eax*8+0x1939778],esi
  41c9d3:	je     0x41cac4
  41c9d9:	mov    esi,DWORD PTR [ebp+0xc]
  41c9dc:	mov    eax,DWORD PTR [ebp+0x8]
  41c9df:	add    eax,DWORD PTR [esi+0xa0]
  41c9e5:	mov    esi,DWORD PTR [ebp+0x8]
  41c9e8:	mov    edi,DWORD PTR [ebp+0xc]
  41c9eb:	sub    esi,DWORD PTR [edi+0x34]
  41c9ee:	mov    edi,DWORD PTR [ebp-0x4]
  41c9f1:	xor    edi,ecx
  41c9f3:	add    edi,edx
  41c9f5:	mov    DWORD PTR [ebp-0x24],esi
  41c9f8:	cmp    esi,edi
  41c9fa:	je     0x41cac4
  41ca00:	mov    esi,DWORD PTR [ebp-0x4]
  41ca03:	xor    esi,ecx
  41ca05:	add    esi,edx
  41ca07:	mov    DWORD PTR [ebp-0x8],esi
  41ca0a:	push   ebx
  41ca0b:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  41ca12:	jmp    0x41caae
  41ca17:	mov    esi,DWORD PTR [ebp-0x4]
  41ca1a:	xor    esi,ecx
  41ca1c:	lea    edi,[ebx-0x8]
  41ca1f:	add    esi,edx
  41ca21:	shr    edi,1
  41ca23:	cmp    esi,edi
  41ca25:	jae    0x41ca94
  41ca27:	sub    edi,esi
  41ca29:	lea    ebx,[eax+esi*2+0x8]
  41ca2d:	mov    DWORD PTR [ebp-0x18],edi
  41ca30:	movzx  esi,WORD PTR [ebx]
  41ca33:	and    esi,0xfff
  41ca39:	mov    DWORD PTR [ebp-0x14],esi
  41ca3c:	mov    edi,DWORD PTR [ebp-0x14]
  41ca3f:	mov    esi,DWORD PTR [eax]
  41ca41:	sub    esi,edx
  41ca43:	add    edi,esi
  41ca45:	movzx  esi,WORD PTR [ebx]
  41ca48:	shr    esi,0xc
  41ca4b:	xor    edi,ecx
  41ca4d:	mov    DWORD PTR [ebp-0x20],edi
  41ca50:	mov    DWORD PTR [ebp-0x14],esi
  41ca53:	mov    esi,DWORD PTR [ebp-0x20]
  41ca56:	mov    edi,DWORD PTR [ebp+0x8]
  41ca59:	xor    esi,ecx
  41ca5b:	lea    esi,[esi+edi*1+0x3272e0]
  41ca62:	mov    DWORD PTR [ebp-0x20],esi
  41ca65:	mov    esi,DWORD PTR [ebp-0x10]
  41ca68:	mov    edi,DWORD PTR [ebp-0x14]
  41ca6b:	xor    esi,ecx
  41ca6d:	add    esi,edx
  41ca6f:	cmp    edi,esi
  41ca71:	jne    0x41ca89
  41ca73:	mov    esi,DWORD PTR [ebp-0x10]
  41ca76:	mov    edi,DWORD PTR [ebp-0x14]
  41ca79:	xor    esi,ecx
  41ca7b:	add    esi,edx
  41ca7d:	cmp    edi,esi
  41ca7f:	jne    0x41ca89
  41ca81:	mov    esi,DWORD PTR [ebp-0x20]
  41ca84:	mov    edi,DWORD PTR [ebp-0x24]
  41ca87:	add    DWORD PTR [esi],edi
  41ca89:	add    ebx,0x2
  41ca8c:	dec    DWORD PTR [ebp-0x18]
  41ca8f:	jne    0x41ca30
  41ca91:	mov    ebx,DWORD PTR [ebp-0xc]
  41ca94:	add    DWORD PTR [ebp-0x8],ebx
  41ca97:	mov    esi,DWORD PTR [ebp-0x1c]
  41ca9a:	mov    edi,DWORD PTR [ebp-0x8]
  41ca9d:	mov    ebx,DWORD PTR [ebp+0xc]
  41caa0:	xor    esi,ecx
  41caa2:	cmp    edi,DWORD PTR [ebx+esi*8+0x193977c]
  41caa9:	jae    0x41cac3
  41caab:	add    eax,DWORD PTR [ebp-0xc]
  41caae:	mov    esi,DWORD PTR [ebp-0x4]
  41cab1:	mov    ebx,DWORD PTR [eax+0x4]
  41cab4:	xor    esi,ecx
  41cab6:	add    esi,edx
  41cab8:	mov    DWORD PTR [ebp-0xc],ebx
  41cabb:	cmp    ebx,esi
  41cabd:	jne    0x41ca17
  41cac3:	pop    ebx
  41cac4:	mov    eax,DWORD PTR [ebp-0x28]
  41cac7:	pop    edi
  41cac8:	jmp    0x41cacd
  41caca:	mov    eax,DWORD PTR [ebp-0x4]
  41cacd:	xor    eax,ecx
  41cacf:	add    eax,edx
  41cad1:	pop    esi
  41cad2:	leave  
  41cad3:	ret    0x8
  41cad6:	push   ebp
  41cad7:	mov    ebp,esp
  41cad9:	sub    esp,0xcc
  41cadf:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41cae6:	mov    DWORD PTR [ebp-0x24],0xf89c85b8
  41caed:	mov    eax,DWORD PTR [ebp-0x4]
  41caf0:	push   ebx
  41caf1:	push   esi
  41caf2:	mov    esi,0x7510899
  41caf7:	xor    eax,esi
  41caf9:	push   edi
  41cafa:	mov    edi,0x3272e0
  41caff:	add    eax,edi
  41cb01:	mov    DWORD PTR [ebp-0x1c],eax
  41cb04:	mov    eax,DWORD PTR [ebp-0x4]
  41cb07:	xor    eax,esi
  41cb09:	add    eax,edi
  41cb0b:	mov    DWORD PTR [ebp-0x8],eax
  41cb0e:	mov    ebx,DWORD PTR [ebp+0x20]
  41cb11:	mov    eax,DWORD PTR [ebp-0x14]
  41cb14:	mov    ecx,DWORD PTR [ebp-0x14]
  41cb17:	xor    eax,ecx
  41cb19:	mov    DWORD PTR [ebp-0x14],eax
  41cb1c:	add    DWORD PTR [ebp-0x14],0xf89cb5b9
  41cb23:	mov    eax,DWORD PTR [ebp-0xc]
  41cb26:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb29:	xor    eax,ecx
  41cb2b:	mov    DWORD PTR [ebp-0xc],eax
  41cb2e:	add    DWORD PTR [ebp-0xc],0xf89c85f9
  41cb35:	mov    eax,DWORD PTR [ebp-0x10]
  41cb38:	mov    ecx,DWORD PTR [ebp-0x10]
  41cb3b:	xor    eax,ecx
  41cb3d:	mov    DWORD PTR [ebp-0x10],eax
  41cb40:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  41cb47:	mov    eax,DWORD PTR [ebp-0x20]
  41cb4a:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb4d:	xor    eax,ecx
  41cb4f:	mov    DWORD PTR [ebp-0x20],eax
  41cb52:	add    DWORD PTR [ebp-0x20],0xf89f05b9
  41cb59:	mov    eax,0x9471
  41cb5e:	mov    WORD PTR [ebp+0x20],ax
  41cb62:	mov    eax,DWORD PTR [ebp+0x8]
  41cb65:	test   eax,eax
  41cb67:	je     0x41cfc2
  41cb6d:	mov    eax,DWORD PTR [ebp+0xc]
  41cb70:	test   eax,eax
  41cb72:	je     0x41cfc2
  41cb78:	mov    eax,DWORD PTR [ebp+0x18]
  41cb7b:	test   eax,eax
  41cb7d:	je     0x41cfc2
  41cb83:	mov    ax,WORD PTR [ebp+0x20]
  41cb87:	mov    ecx,0x8a8c
  41cb8c:	xor    ax,cx
  41cb8f:	mov    ecx,0x3b50
  41cb94:	add    ax,cx
  41cb97:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb9a:	cmp    WORD PTR [ecx],ax
  41cb9d:	jne    0x41cfc2
  41cba3:	mov    eax,DWORD PTR [ebp-0x4]
  41cba6:	xor    eax,esi
  41cba8:	add    eax,edi
  41cbaa:	mov    DWORD PTR [ebp-0x30],eax
  41cbad:	mov    eax,DWORD PTR [ebp-0x4]
  41cbb0:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbb3:	mov    eax,DWORD PTR [ebp+0x8]
  41cbb6:	add    eax,DWORD PTR [ecx+0x3c]
  41cbb9:	mov    DWORD PTR [ebp+0xc],eax
  41cbbc:	mov    eax,DWORD PTR [eax+0x50]
  41cbbf:	test   eax,eax
  41cbc1:	je     0x41cfc2
  41cbc7:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  41cbce:	mov    eax,DWORD PTR [ebp-0x2c]
  41cbd1:	xor    eax,esi
  41cbd3:	add    eax,edi
  41cbd5:	mov    DWORD PTR [ebp-0x2c],eax
  41cbd8:	mov    eax,DWORD PTR [ebp-0x4]
  41cbdb:	mov    eax,DWORD PTR [ebx+0x190]
  41cbe1:	mov    ecx,DWORD PTR [eax]
  41cbe3:	mov    ecx,DWORD PTR [ecx+0x3c]
  41cbe6:	add    ecx,DWORD PTR [eax]
  41cbe8:	mov    eax,DWORD PTR [ebp-0x4]
  41cbeb:	mov    eax,DWORD PTR [ebx+0x18c]
  41cbf1:	mov    edx,DWORD PTR [eax]
  41cbf3:	mov    DWORD PTR [ebp-0x18],ecx
  41cbf6:	mov    DWORD PTR [ebp+0x20],edx
  41cbf9:	cmp    edx,edx
  41cbfb:	jne    0x41cc2f
  41cbfd:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cc03:	lea    edx,[ebp-0x1c]
  41cc06:	push   edx
  41cc07:	mov    edx,DWORD PTR [ebp-0xc]
  41cc0a:	xor    edx,esi
  41cc0c:	add    edx,edi
  41cc0e:	push   edx
  41cc0f:	push   DWORD PTR [ecx+0x50]
  41cc12:	push   DWORD PTR [ebp+0x20]
  41cc15:	call   DWORD PTR [eax+0x1c]
  41cc18:	mov    eax,DWORD PTR [ebp-0x18]
  41cc1b:	mov    ecx,DWORD PTR [eax+0x54]
  41cc1e:	mov    eax,DWORD PTR [eax+0x50]
  41cc21:	sub    eax,ecx
  41cc23:	add    ecx,DWORD PTR [ebp+0x20]
  41cc26:	push   ecx
  41cc27:	call   0x41d5ae
  41cc2c:	mov    edx,DWORD PTR [ebp+0x20]
  41cc2f:	mov    eax,DWORD PTR [ebx+0x194]
  41cc35:	mov    DWORD PTR [eax],edx
  41cc37:	mov    eax,DWORD PTR [ebp+0xc]
  41cc3a:	push   DWORD PTR [eax+0x54]
  41cc3d:	push   DWORD PTR [ebp+0x8]
  41cc40:	push   edx
  41cc41:	call   0x41d455
  41cc46:	mov    ecx,DWORD PTR [ebp+0x20]
  41cc49:	mov    eax,DWORD PTR [ecx+0x3c]
  41cc4c:	add    eax,ecx
  41cc4e:	movzx  ecx,WORD PTR [eax+0x14]
  41cc52:	lea    ecx,[ecx+eax*1+0x18]
  41cc56:	mov    DWORD PTR [ebp+0x18],ecx
  41cc59:	mov    ecx,DWORD PTR [ebp-0x4]
  41cc5c:	movzx  edx,WORD PTR [eax+0x6]
  41cc60:	xor    ecx,esi
  41cc62:	add    ecx,edi
  41cc64:	mov    DWORD PTR [ebp+0xc],eax
  41cc67:	cmp    edx,ecx
  41cc69:	je     0x41cd16
  41cc6f:	mov    ecx,DWORD PTR [ebp-0x4]
  41cc72:	xor    ecx,esi
  41cc74:	add    ecx,edi
  41cc76:	mov    DWORD PTR [ebp-0x8],ecx
  41cc79:	mov    ecx,DWORD PTR [ebp-0x24]
  41cc7c:	movzx  edx,WORD PTR [eax+0x6]
  41cc80:	xor    ecx,esi
  41cc82:	sub    edx,ecx
  41cc84:	sub    edx,edi
  41cc86:	cmp    DWORD PTR [ebp-0x8],edx
  41cc89:	ja     0x41cd16
  41cc8f:	mov    edx,DWORD PTR [ebp+0x18]
  41cc92:	add    edx,0x8
  41cc95:	mov    DWORD PTR [ebp+0x18],edx
  41cc98:	jmp    0x41cc9d
  41cc9a:	mov    edx,DWORD PTR [ebp+0x18]
  41cc9d:	mov    eax,DWORD PTR [eax+0x38]
  41cca0:	lea    ecx,[eax-0x1]
  41cca3:	mov    DWORD PTR [ebp-0x34],eax
  41cca6:	mov    eax,DWORD PTR [edx]
  41cca8:	test   ecx,eax
  41ccaa:	je     0x41ccb3
  41ccac:	not    ecx
  41ccae:	and    eax,ecx
  41ccb0:	add    eax,DWORD PTR [ebp-0x34]
  41ccb3:	mov    ecx,DWORD PTR [edx+0x4]
  41ccb6:	add    ecx,DWORD PTR [ebp+0x20]
  41ccb9:	push   ecx
  41ccba:	call   0x41d5ae
  41ccbf:	mov    edx,DWORD PTR [ebp-0x4]
  41ccc2:	mov    eax,DWORD PTR [ebp+0x18]
  41ccc5:	mov    ecx,DWORD PTR [eax+0x8]
  41ccc8:	xor    edx,esi
  41ccca:	add    edx,edi
  41cccc:	cmp    ecx,edx
  41ccce:	je     0x41cce7
  41ccd0:	push   ecx
  41ccd1:	mov    ecx,DWORD PTR [ebp+0x8]
  41ccd4:	add    ecx,DWORD PTR [eax+0xc]
  41ccd7:	mov    eax,DWORD PTR [eax+0x4]
  41ccda:	add    eax,DWORD PTR [ebp+0x20]
  41ccdd:	push   ecx
  41ccde:	push   eax
  41ccdf:	call   0x41d455
  41cce4:	mov    eax,DWORD PTR [ebp+0x18]
  41cce7:	mov    ecx,DWORD PTR [ebp-0x24]
  41ccea:	mov    edx,DWORD PTR [ebp-0x8]
  41cced:	add    eax,0x28
  41ccf0:	xor    ecx,esi
  41ccf2:	lea    ecx,[edx+ecx*1+0x3272e0]
  41ccf9:	mov    edx,DWORD PTR [ebp+0xc]
  41ccfc:	mov    DWORD PTR [ebp+0x18],eax
  41ccff:	mov    eax,DWORD PTR [ebp-0x24]
  41cd02:	movzx  edx,WORD PTR [edx+0x6]
  41cd06:	xor    eax,esi
  41cd08:	sub    edx,eax
  41cd0a:	mov    eax,DWORD PTR [ebp+0xc]
  41cd0d:	sub    edx,edi
  41cd0f:	mov    DWORD PTR [ebp-0x8],ecx
  41cd12:	cmp    ecx,edx
  41cd14:	jbe    0x41cc9a
  41cd16:	mov    edx,DWORD PTR [ebx+0x18c]
  41cd1c:	mov    ecx,DWORD PTR [ebp+0x20]
  41cd1f:	cmp    ecx,DWORD PTR [edx]
  41cd21:	jne    0x41cd4a
  41cd23:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cd29:	lea    edx,[ebp-0x1c]
  41cd2c:	push   edx
  41cd2d:	mov    edx,DWORD PTR [ebp-0x10]
  41cd30:	xor    edx,esi
  41cd32:	add    edx,edi
  41cd34:	push   edx
  41cd35:	mov    edx,DWORD PTR [ebp-0x18]
  41cd38:	push   DWORD PTR [edx+0x54]
  41cd3b:	push   ecx
  41cd3c:	call   DWORD PTR [eax+0x1c]
  41cd3f:	test   eax,eax
  41cd41:	je     0x41cfb3
  41cd47:	mov    eax,DWORD PTR [ebp+0xc]
  41cd4a:	mov    ecx,DWORD PTR [ebx+0x1c8]
  41cd50:	mov    ecx,DWORD PTR [ecx]
  41cd52:	xor    ecx,esi
  41cd54:	add    ecx,edi
  41cd56:	je     0x41cede
  41cd5c:	and    DWORD PTR [ebp-0x28],0x0
  41cd60:	and    DWORD PTR [ebp+0x8],0x0
  41cd64:	mov    eax,0xf89c851d
  41cd69:	lea    ecx,[eax-0x8]
  41cd6c:	mov    DWORD PTR [ebp-0x4c],0xf89c8517
  41cd73:	mov    DWORD PTR [ebp-0x48],0xf89c850d
  41cd7a:	mov    DWORD PTR [ebp-0x44],eax
  41cd7d:	mov    DWORD PTR [ebp-0x40],ecx
  41cd80:	mov    DWORD PTR [ebp-0x3c],ecx
  41cd83:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  41cd8a:	mov    edx,DWORD PTR [ebp+0x8]
  41cd8d:	mov    ecx,0x899
  41cd92:	xor    cx,WORD PTR [ebp+edx*4-0x4c]
  41cd97:	mov    edx,0x72e0
  41cd9c:	add    cx,dx
  41cd9f:	mov    edx,DWORD PTR [ebp+0x8]
  41cda2:	inc    DWORD PTR [ebp+0x8]
  41cda5:	cmp    DWORD PTR [ebp+0x8],0x6
  41cda9:	mov    WORD PTR [ebp+edx*2-0xb4],cx
  41cdb1:	jb     0x41cd8a
  41cdb3:	mov    ecx,0xf89c850b
  41cdb8:	mov    DWORD PTR [ebp-0xa4],eax
  41cdbe:	mov    DWORD PTR [ebp-0x90],eax
  41cdc4:	mov    DWORD PTR [ebp-0x68],eax
  41cdc7:	mov    DWORD PTR [ebp-0x64],eax
  41cdca:	lea    eax,[ecx-0x1]
  41cdcd:	mov    edx,0xf89c85ff
  41cdd2:	mov    DWORD PTR [ebp-0x58],eax
  41cdd5:	mov    DWORD PTR [ebp-0x54],eax
  41cdd8:	mov    DWORD PTR [ebp-0xa8],0xf89c85f5
  41cde2:	mov    DWORD PTR [ebp-0xa0],ecx
  41cde8:	mov    DWORD PTR [ebp-0x9c],edx
  41cdee:	mov    DWORD PTR [ebp-0x98],0xf89c8510
  41cdf8:	mov    DWORD PTR [ebp-0x94],0xf89c8517
  41ce02:	mov    DWORD PTR [ebp-0x8c],0xf89c85fc
  41ce0c:	mov    DWORD PTR [ebp-0x88],0xf89c8517
  41ce16:	mov    DWORD PTR [ebp-0x84],0xf89c850d
  41ce20:	mov    DWORD PTR [ebp-0x80],ecx
  41ce23:	mov    DWORD PTR [ebp-0x7c],0xf89c8500
  41ce2a:	mov    DWORD PTR [ebp-0x78],edx
  41ce2d:	mov    DWORD PTR [ebp-0x74],0xf89c8516
  41ce34:	mov    DWORD PTR [ebp-0x70],ecx
  41ce37:	mov    DWORD PTR [ebp-0x6c],0xf89c85f8
  41ce3e:	mov    DWORD PTR [ebp-0x60],ecx
  41ce41:	mov    DWORD PTR [ebp-0x5c],0xf89c851c
  41ce48:	mov    DWORD PTR [ebp-0x50],0xf89c85b9
  41ce4f:	xor    eax,eax
  41ce51:	mov    cl,BYTE PTR [ebp+eax*4-0xa8]
  41ce58:	xor    cl,0x99
  41ce5b:	sub    cl,0x20
  41ce5e:	mov    BYTE PTR [ebp+eax*1-0xcc],cl
  41ce65:	inc    eax
  41ce66:	cmp    eax,0x17
  41ce69:	jb     0x41ce51
  41ce6b:	mov    eax,DWORD PTR [ebx+0x1d8]
  41ce71:	lea    ecx,[ebp-0xb4]
  41ce77:	push   ecx
  41ce78:	call   DWORD PTR [eax+0x4]
  41ce7b:	mov    ecx,DWORD PTR [ebx+0x1d8]
  41ce81:	lea    edx,[ebp-0xcc]
  41ce87:	push   edx
  41ce88:	push   eax
  41ce89:	call   DWORD PTR [ecx+0x8]
  41ce8c:	lea    ecx,[ebp-0x28]
  41ce8f:	push   ecx
  41ce90:	mov    ecx,DWORD PTR [ebx+0x18c]
  41ce96:	push   DWORD PTR [ecx]
  41ce98:	call   eax
  41ce9a:	mov    eax,DWORD PTR [ebp-0x28]
  41ce9d:	test   eax,eax
  41ce9f:	je     0x41cedb
  41cea1:	mov    DWORD PTR [ebp+0x8],eax
  41cea4:	jmp    0x41ceb0
  41cea6:	mov    eax,DWORD PTR [eax]
  41cea8:	mov    DWORD PTR [ebp-0x28],eax
  41ceab:	cmp    eax,DWORD PTR [ebp+0x8]
  41ceae:	je     0x41cebd
  41ceb0:	mov    edx,DWORD PTR [eax+0x18]
  41ceb3:	mov    ecx,DWORD PTR [ebx+0x18c]
  41ceb9:	cmp    edx,DWORD PTR [ecx]
  41cebb:	jne    0x41cea6
  41cebd:	mov    edx,DWORD PTR [eax+0x18]
  41cec0:	mov    ecx,DWORD PTR [ebx+0x18c]
  41cec6:	cmp    edx,DWORD PTR [ecx]
  41cec8:	jne    0x41cedb
  41ceca:	mov    edx,DWORD PTR [ebp-0x18]
  41cecd:	mov    ecx,DWORD PTR [ebx+0x190]
  41ced3:	mov    edx,DWORD PTR [edx+0x28]
  41ced6:	add    edx,DWORD PTR [ecx]
  41ced8:	mov    DWORD PTR [eax+0x1c],edx
  41cedb:	mov    eax,DWORD PTR [ebp+0xc]
  41cede:	push   ebx
  41cedf:	push   eax
  41cee0:	push   DWORD PTR [ebp+0x20]
  41cee3:	call   0x41c68d
  41cee8:	test   eax,eax
  41ceea:	je     0x41cfb3
  41cef0:	push   DWORD PTR [ebp+0xc]
  41cef3:	mov    ecx,ebx
  41cef5:	push   DWORD PTR [ebp+0x20]
  41cef8:	call   0x41c5e6
  41cefd:	test   eax,eax
  41ceff:	je     0x41cfb3
  41cf05:	mov    eax,DWORD PTR [ebp+0xc]
  41cf08:	mov    edx,DWORD PTR [ebp+0x20]
  41cf0b:	mov    ecx,ebx
  41cf0d:	call   0x41c4bf
  41cf12:	test   eax,eax
  41cf14:	je     0x41cfb3
  41cf1a:	push   ebx
  41cf1b:	push   DWORD PTR [ebp+0x20]
  41cf1e:	call   0x41c970
  41cf23:	test   eax,eax
  41cf25:	je     0x41cfb3
  41cf2b:	mov    eax,DWORD PTR [ebx+0x18c]
  41cf31:	mov    edx,DWORD PTR [ebp+0x20]
  41cf34:	cmp    edx,DWORD PTR [eax]
  41cf36:	jne    0x41cf52
  41cf38:	mov    eax,DWORD PTR [ebx+0x1d8]
  41cf3e:	lea    ecx,[ebp-0x1c]
  41cf41:	push   ecx
  41cf42:	push   DWORD PTR [ebp-0x1c]
  41cf45:	mov    ecx,DWORD PTR [ebp-0x18]
  41cf48:	push   DWORD PTR [ecx+0x54]
  41cf4b:	push   edx
  41cf4c:	call   DWORD PTR [eax+0x1c]
  41cf4f:	mov    edx,DWORD PTR [ebp+0x20]
  41cf52:	mov    eax,DWORD PTR [ebx+0x1c8]
  41cf58:	mov    eax,DWORD PTR [eax]
  41cf5a:	xor    eax,esi
  41cf5c:	add    eax,edi
  41cf5e:	je     0x41cf97
  41cf60:	mov    ecx,DWORD PTR [ebp+0xc]
  41cf63:	mov    eax,DWORD PTR [ecx+0x28]
  41cf66:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  41cf6d:	mov    esi,DWORD PTR [ebp+0x8]
  41cf70:	push   DWORD PTR [ebp+0x14]
  41cf73:	xor    esi,0x899
  41cf79:	push   DWORD PTR [ebp+0x10]
  41cf7c:	add    esi,0x72e0
  41cf82:	or     WORD PTR [ecx+0x16],si
  41cf86:	add    eax,edx
  41cf88:	push   edx
  41cf89:	call   eax
  41cf8b:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b8
  41cf95:	jmp    0x41cfa1
  41cf97:	mov    eax,DWORD PTR [ebp+0xc]
  41cf9a:	mov    eax,DWORD PTR [eax+0x28]
  41cf9d:	add    eax,edx
  41cf9f:	call   eax
  41cfa1:	mov    DWORD PTR [ebp-0x8],eax
  41cfa4:	mov    eax,DWORD PTR [ebp-0x8]
  41cfa7:	mov    ecx,DWORD PTR [ebp+0x1c]
  41cfaa:	mov    DWORD PTR [ecx],eax
  41cfac:	mov    DWORD PTR [ebp-0x30],0x1
  41cfb3:	cmp    DWORD PTR [ebp-0x30],0x0
  41cfb7:	jne    0x41cfbd
  41cfb9:	and    DWORD PTR [ebp+0x20],0x0
  41cfbd:	mov    eax,DWORD PTR [ebp+0x20]
  41cfc0:	jmp    0x41cfc4
  41cfc2:	xor    eax,eax
  41cfc4:	pop    edi
  41cfc5:	pop    esi
  41cfc6:	pop    ebx
  41cfc7:	leave  
  41cfc8:	ret    0x1c
  41cfcb:	push   ebp
  41cfcc:	mov    ebp,esp
  41cfce:	movzx  edx,WORD PTR [ecx+0x6]
  41cfd2:	movzx  eax,WORD PTR [ecx+0x14]
  41cfd6:	push   ebx
  41cfd7:	push   edi
  41cfd8:	xor    edi,edi
  41cfda:	lea    eax,[eax+ecx*1+0x18]
  41cfde:	test   edx,edx
  41cfe0:	je     0x41d001
  41cfe2:	mov    ecx,DWORD PTR [eax+0xc]
  41cfe5:	lea    ebx,[ecx+esi*1]
  41cfe8:	cmp    DWORD PTR [ebp+0x8],ebx
  41cfeb:	jb     0x41cff9
  41cfed:	mov    ebx,DWORD PTR [eax+0x8]
  41cff0:	add    ebx,ecx
  41cff2:	add    ebx,esi
  41cff4:	cmp    DWORD PTR [ebp+0x8],ebx
  41cff7:	jb     0x41d003
  41cff9:	add    eax,0x28
  41cffc:	inc    edi
  41cffd:	cmp    edi,edx
  41cfff:	jb     0x41cfe2
  41d001:	xor    eax,eax
  41d003:	pop    edi
  41d004:	pop    ebx
  41d005:	pop    ebp
  41d006:	ret    0x4
  41d009:	push   ebp
  41d00a:	mov    ebp,esp
  41d00c:	sub    esp,0x34
  41d00f:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  41d016:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41d01d:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  41d024:	mov    DWORD PTR [ebp-0x8],0xf89c8518
  41d02b:	mov    DWORD PTR [ebp-0x20],0xf89c85f8
  41d032:	mov    DWORD PTR [ebp-0x2c],0xf89c8503
  41d039:	mov    DWORD PTR [ebp-0x2c],0xf89c85e3
  41d040:	mov    DWORD PTR [ebp-0x10],eax
  41d043:	mov    eax,DWORD PTR [ebp+0x8]
  41d046:	mov    DWORD PTR [ebp-0x14],eax
  41d049:	mov    eax,DWORD PTR [ebp-0xc]
  41d04c:	push   ebx
  41d04d:	mov    ecx,0x7510899
  41d052:	xor    eax,ecx
  41d054:	push   esi
  41d055:	mov    esi,DWORD PTR [ebp-0x10]
  41d058:	mov    edx,0x3272e0
  41d05d:	add    eax,edx
  41d05f:	push   edi
  41d060:	cmp    esi,eax
  41d062:	je     0x41d241
  41d068:	mov    eax,DWORD PTR [ebp-0xc]
  41d06b:	mov    esi,DWORD PTR [ebp-0x14]
  41d06e:	xor    eax,ecx
  41d070:	add    eax,edx
  41d072:	cmp    esi,eax
  41d074:	je     0x41d241
  41d07a:	mov    eax,DWORD PTR [ebp-0xc]
  41d07d:	xor    eax,ecx
  41d07f:	add    eax,edx
  41d081:	mov    DWORD PTR [ebp-0x24],eax
  41d084:	mov    eax,DWORD PTR [ebp-0xc]
  41d087:	xor    eax,ecx
  41d089:	add    eax,edx
  41d08b:	mov    DWORD PTR [ebp-0x28],eax
  41d08e:	mov    edi,DWORD PTR [ebp-0x20]
  41d091:	mov    ebx,DWORD PTR [ebp-0x8]
  41d094:	mov    esi,0x899
  41d099:	xor    edi,esi
  41d09b:	mov    eax,0x72e0
  41d0a0:	xor    ebx,esi
  41d0a2:	add    edi,eax
  41d0a4:	add    ebx,eax
  41d0a6:	sub    ebx,edi
  41d0a8:	mov    WORD PTR [ebp-0x8],bx
  41d0ac:	jmp    0x41d171
  41d0b1:	mov    edi,DWORD PTR [ebp-0xc]
  41d0b4:	mov    bx,WORD PTR [ebp-0x4]
  41d0b8:	xor    edi,esi
  41d0ba:	add    edi,eax
  41d0bc:	cmp    bx,di
  41d0bf:	je     0x41d1b3
  41d0c5:	mov    edi,DWORD PTR [ebp-0xc]
  41d0c8:	mov    ebx,DWORD PTR [ebp+0xc]
  41d0cb:	xor    edi,ecx
  41d0cd:	add    edi,edx
  41d0cf:	cmp    ebx,edi
  41d0d1:	mov    di,WORD PTR [ebp-0x4]
  41d0d5:	mov    bx,WORD PTR [ebp+0x8]
  41d0d9:	je     0x41d144
  41d0db:	cmp    bx,di
  41d0de:	je     0x41d14d
  41d0e0:	mov    edi,DWORD PTR [ebp-0x20]
  41d0e3:	mov    bx,WORD PTR [ebp+0x8]
  41d0e7:	xor    edi,esi
  41d0e9:	add    edi,eax
  41d0eb:	cmp    bx,di
  41d0ee:	jb     0x41d10e
  41d0f0:	mov    edi,DWORD PTR [ebp-0x2c]
  41d0f3:	mov    bx,WORD PTR [ebp+0x8]
  41d0f7:	xor    edi,esi
  41d0f9:	add    edi,eax
  41d0fb:	cmp    bx,di
  41d0fe:	ja     0x41d10e
  41d100:	movzx  edi,WORD PTR [ebp+0x8]
  41d104:	movzx  ebx,WORD PTR [ebp-0x8]
  41d108:	add    edi,ebx
  41d10a:	mov    WORD PTR [ebp+0x8],di
  41d10e:	mov    edi,DWORD PTR [ebp-0x20]
  41d111:	mov    bx,WORD PTR [ebp-0x4]
  41d115:	xor    edi,esi
  41d117:	add    edi,eax
  41d119:	cmp    bx,di
  41d11c:	jb     0x41d13c
  41d11e:	mov    edi,DWORD PTR [ebp-0x2c]
  41d121:	mov    bx,WORD PTR [ebp-0x4]
  41d125:	xor    edi,esi
  41d127:	add    edi,eax
  41d129:	cmp    bx,di
  41d12c:	ja     0x41d13c
  41d12e:	movzx  edi,WORD PTR [ebp-0x4]
  41d132:	movzx  ebx,WORD PTR [ebp-0x8]
  41d136:	add    edi,ebx
  41d138:	mov    WORD PTR [ebp-0x4],di
  41d13c:	mov    di,WORD PTR [ebp-0x4]
  41d140:	mov    bx,WORD PTR [ebp+0x8]
  41d144:	cmp    bx,di
  41d147:	jne    0x41d241
  41d14d:	mov    edi,DWORD PTR [ebp-0x1c]
  41d150:	mov    ebx,DWORD PTR [ebp-0x10]
  41d153:	xor    edi,ecx
  41d155:	lea    edi,[edi+ebx*1+0x3272e0]
  41d15c:	mov    DWORD PTR [ebp-0x10],edi
  41d15f:	mov    edi,DWORD PTR [ebp-0x1c]
  41d162:	mov    ebx,DWORD PTR [ebp-0x14]
  41d165:	xor    edi,ecx
  41d167:	lea    edi,[edi+ebx*1+0x3272e0]
  41d16e:	mov    DWORD PTR [ebp-0x14],edi
  41d171:	mov    edi,DWORD PTR [ebp-0x24]
  41d174:	mov    ebx,DWORD PTR [ebp-0x10]
  41d177:	mov    di,WORD PTR [ebx+edi*2]
  41d17b:	mov    WORD PTR [ebp+0x8],di
  41d17f:	mov    edi,DWORD PTR [ebp-0x28]
  41d182:	mov    ebx,DWORD PTR [ebp-0x14]
  41d185:	mov    di,WORD PTR [ebx+edi*2]
  41d189:	mov    WORD PTR [ebp-0x4],di
  41d18d:	mov    edi,DWORD PTR [ebp-0xc]
  41d190:	mov    bx,WORD PTR [ebp+0x8]
  41d194:	xor    edi,esi
  41d196:	add    edi,eax
  41d198:	cmp    bx,di
  41d19b:	jne    0x41d0b1
  41d1a1:	mov    eax,DWORD PTR [ebp-0x18]
  41d1a4:	mov    esi,DWORD PTR [ebp-0xc]
  41d1a7:	xor    eax,ecx
  41d1a9:	add    eax,edx
  41d1ab:	imul   eax,esi
  41d1ae:	mov    DWORD PTR [ebp-0xc],eax
  41d1b1:	jmp    0x41d1c5
  41d1b3:	mov    eax,DWORD PTR [ebp-0xc]
  41d1b6:	mov    esi,DWORD PTR [ebp-0x18]
  41d1b9:	xor    eax,ecx
  41d1bb:	lea    eax,[eax+esi*1+0x3272e0]
  41d1c2:	mov    DWORD PTR [ebp-0x18],eax
  41d1c5:	mov    eax,DWORD PTR [ebp-0x24]
  41d1c8:	sub    eax,edx
  41d1ca:	xor    eax,ecx
  41d1cc:	mov    DWORD PTR [ebp-0x30],eax
  41d1cf:	mov    eax,DWORD PTR [ebp-0x28]
  41d1d2:	sub    eax,edx
  41d1d4:	xor    eax,ecx
  41d1d6:	mov    DWORD PTR [ebp-0x34],eax
  41d1d9:	mov    eax,DWORD PTR [ebp-0x34]
  41d1dc:	mov    esi,DWORD PTR [ebp-0x1c]
  41d1df:	xor    esi,ecx
  41d1e1:	add    esi,edx
  41d1e3:	xor    eax,ecx
  41d1e5:	add    eax,0x3272e0
  41d1ea:	imul   esi,eax
  41d1ed:	mov    eax,DWORD PTR [ebp-0x14]
  41d1f0:	movzx  eax,WORD PTR [esi+eax*1]
  41d1f4:	mov    esi,DWORD PTR [ebp-0x30]
  41d1f7:	mov    edi,DWORD PTR [ebp-0x1c]
  41d1fa:	xor    esi,ecx
  41d1fc:	add    esi,edx
  41d1fe:	xor    edi,ecx
  41d200:	add    edi,edx
  41d202:	imul   edi,esi
  41d205:	mov    esi,DWORD PTR [ebp-0x10]
  41d208:	movzx  esi,WORD PTR [edi+esi*1]
  41d20c:	sub    eax,edx
  41d20e:	sub    esi,edx
  41d210:	xor    eax,ecx
  41d212:	xor    esi,ecx
  41d214:	cmp    esi,eax
  41d216:	jne    0x41d241
  41d218:	mov    eax,DWORD PTR [ebp-0x30]
  41d21b:	mov    esi,DWORD PTR [ebp-0x1c]
  41d21e:	xor    eax,ecx
  41d220:	add    eax,0x3272e0
  41d225:	xor    esi,ecx
  41d227:	add    esi,edx
  41d229:	imul   esi,eax
  41d22c:	mov    eax,DWORD PTR [ebp-0x10]
  41d22f:	movzx  eax,WORD PTR [esi+eax*1]
  41d233:	mov    esi,DWORD PTR [ebp-0xc]
  41d236:	sub    eax,edx
  41d238:	xor    eax,ecx
  41d23a:	cmp    eax,esi
  41d23c:	mov    eax,DWORD PTR [ebp-0xc]
  41d23f:	je     0x41d244
  41d241:	mov    eax,DWORD PTR [ebp-0x18]
  41d244:	pop    edi
  41d245:	xor    eax,ecx
  41d247:	pop    esi
  41d248:	add    eax,edx
  41d24a:	pop    ebx
  41d24b:	leave  
  41d24c:	ret    0x8
  41d24f:	push   ebp
  41d250:	mov    ebp,esp
  41d252:	push   ecx
  41d253:	mov    cx,WORD PTR [eax]
  41d256:	push   esi
  41d257:	mov    esi,0x3b50
  41d25c:	sub    cx,si
  41d25f:	mov    esi,0x8a8c
  41d264:	xor    cx,si
  41d267:	mov    esi,0x4e3c
  41d26c:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d273:	mov    edx,0xf89c85b9
  41d278:	cmp    cx,si
  41d27b:	je     0x41d2da
  41d27d:	push   ebx
  41d27e:	push   edi
  41d27f:	movzx  ecx,cx
  41d282:	mov    edi,0xffcd8d20
  41d287:	mov    esi,0x7510899
  41d28c:	mov    ebx,0x4f80
  41d291:	cmp    cx,bx
  41d294:	jne    0x41d299
  41d296:	mov    DWORD PTR [ebp-0x4],edx
  41d299:	lea    edx,[edi+0x1]
  41d29c:	xor    edx,esi
  41d29e:	mov    edi,edx
  41d2a0:	xor    edi,esi
  41d2a2:	mov    cx,WORD PTR [eax+edi*2+0x64e5c0]
  41d2aa:	mov    ebx,0x3b50
  41d2af:	sub    cx,bx
  41d2b2:	mov    ebx,0x8a8c
  41d2b7:	xor    cx,bx
  41d2ba:	mov    ebx,0x4e3c
  41d2bf:	cmp    cx,bx
  41d2c2:	jne    0x41d28c
  41d2c4:	mov    ecx,DWORD PTR [ebp-0x4]
  41d2c7:	pop    edi
  41d2c8:	pop    ebx
  41d2c9:	cmp    ecx,0xf89c8586
  41d2cf:	je     0x41d2da
  41d2d1:	xor    ecx,esi
  41d2d3:	lea    eax,[eax+ecx*2+0x64e5c2]
  41d2da:	pop    esi
  41d2db:	leave  
  41d2dc:	ret    
  41d2dd:	push   ebp
  41d2de:	mov    ebp,esp
  41d2e0:	push   ecx
  41d2e1:	push   esi
  41d2e2:	push   edi
  41d2e3:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d2ea:	mov    esi,0xf89c85b9
  41d2ef:	call   0x41d24f
  41d2f4:	mov    edi,eax
  41d2f6:	mov    al,BYTE PTR [edi]
  41d2f8:	add    al,0x9
  41d2fa:	xor    al,0x73
  41d2fc:	cmp    al,0x7a
  41d2fe:	je     0x41d361
  41d300:	mov    eax,edi
  41d302:	mov    edx,0xffcd8d20
  41d307:	mov    ecx,0x7510899
  41d30c:	push   ebx
  41d30d:	mov    ax,WORD PTR [eax]
  41d310:	mov    ebx,0x3b50
  41d315:	sub    ax,bx
  41d318:	mov    ebx,0x8a8c
  41d31d:	xor    ax,bx
  41d320:	mov    ebx,0x4e52
  41d325:	cmp    ax,bx
  41d328:	jne    0x41d32d
  41d32a:	mov    DWORD PTR [ebp-0x4],esi
  41d32d:	lea    esi,[edx+0x1]
  41d330:	xor    esi,ecx
  41d332:	mov    edx,esi
  41d334:	xor    edx,ecx
  41d336:	lea    eax,[edi+edx*2+0x64e5c0]
  41d33d:	mov    bl,BYTE PTR [eax]
  41d33f:	add    bl,0x9
  41d342:	xor    bl,0x73
  41d345:	cmp    bl,0x7a
  41d348:	jne    0x41d30d
  41d34a:	mov    eax,DWORD PTR [ebp-0x4]
  41d34d:	pop    ebx
  41d34e:	cmp    eax,0xf89c8586
  41d353:	je     0x41d361
  41d355:	xor    eax,ecx
  41d357:	xor    ecx,ecx
  41d359:	mov    WORD PTR [edi+eax*2+0x64e5c0],cx
  41d361:	mov    eax,edi
  41d363:	pop    edi
  41d364:	pop    esi
  41d365:	leave  
  41d366:	ret    
  41d367:	push   ebp
  41d368:	mov    ebp,esp
  41d36a:	push   ecx
  41d36b:	push   esi
  41d36c:	mov    DWORD PTR [ebp-0x4],0xf89c8586
  41d373:	mov    esi,0xf89c85b9
  41d378:	call   0x41d24f
  41d37d:	mov    cx,WORD PTR [eax]
  41d380:	mov    edx,0x3b50
  41d385:	sub    cx,dx
  41d388:	mov    edx,0x8a8c
  41d38d:	xor    cx,dx
  41d390:	mov    edx,0x4e3c
  41d395:	cmp    cx,dx
  41d398:	je     0x41d3f1
  41d39a:	push   ebx
  41d39b:	push   edi
  41d39c:	movzx  ecx,cx
  41d39f:	mov    edx,0xffcd8d20
  41d3a4:	mov    edi,0x7510899
  41d3a9:	mov    ebx,0x4e52
  41d3ae:	cmp    cx,bx
  41d3b1:	jne    0x41d3b6
  41d3b3:	mov    DWORD PTR [ebp-0x4],esi
  41d3b6:	lea    esi,[edx+0x1]
  41d3b9:	xor    esi,edi
  41d3bb:	mov    edx,esi
  41d3bd:	xor    edx,edi
  41d3bf:	mov    cx,WORD PTR [eax+edx*2+0x64e5c0]
  41d3c7:	mov    ebx,0x3b50
  41d3cc:	sub    cx,bx
  41d3cf:	mov    ebx,0x8a8c
  41d3d4:	xor    cx,bx
  41d3d7:	mov    ebx,0x4e3c
  41d3dc:	cmp    cx,bx
  41d3df:	jne    0x41d3a9
  41d3e1:	cmp    DWORD PTR [ebp-0x4],0xf89c8586
  41d3e8:	pop    edi
  41d3e9:	pop    ebx
  41d3ea:	je     0x41d3f1
  41d3ec:	xor    eax,eax
  41d3ee:	inc    eax
  41d3ef:	jmp    0x41d3f3
  41d3f1:	xor    eax,eax
  41d3f3:	pop    esi
  41d3f4:	leave  
  41d3f5:	ret    
  41d3f6:	push   ebp
  41d3f7:	mov    ebp,esp
  41d3f9:	push   ecx
  41d3fa:	mov    eax,DWORD PTR [ebp+0x8]
  41d3fd:	movzx  ecx,WORD PTR [eax]
  41d400:	push   esi
  41d401:	lea    eax,[ecx-0x3b50]
  41d407:	mov    esi,0x8a8c
  41d40c:	push   edi
  41d40d:	xor    eax,esi
  41d40f:	mov    edi,0x4e3c
  41d414:	mov    DWORD PTR [ebp-0x4],edx
  41d417:	cmp    ax,di
  41d41a:	je     0x41d447
  41d41c:	mov    eax,DWORD PTR [ebp+0x8]
  41d41f:	sub    eax,edx
  41d421:	mov    DWORD PTR [ebp+0x8],eax
  41d424:	jmp    0x41d429
  41d426:	mov    eax,DWORD PTR [ebp+0x8]
  41d429:	mov    WORD PTR [edx],cx
  41d42c:	add    edx,0x2
  41d42f:	movzx  edi,WORD PTR [eax+edx*1]
  41d433:	mov    ecx,edi
  41d435:	add    edi,0xffffc4b0
  41d43b:	xor    edi,esi
  41d43d:	mov    eax,0x4e3c
  41d442:	cmp    di,ax
  41d445:	jne    0x41d426
  41d447:	xor    eax,eax
  41d449:	pop    edi
  41d44a:	mov    WORD PTR [edx],ax
  41d44d:	mov    eax,DWORD PTR [ebp-0x4]
  41d450:	pop    esi
  41d451:	leave  
  41d452:	ret    0x4
  41d455:	push   ebp
  41d456:	mov    ebp,esp
  41d458:	sub    esp,0x18
  41d45b:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41d462:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  41d469:	mov    eax,DWORD PTR [ebp-0x14]
  41d46c:	xor    eax,0x7510899
  41d471:	add    eax,0x3272e0
  41d476:	mov    DWORD PTR [ebp-0x8],eax
  41d479:	mov    DWORD PTR [ebp-0x10],0xf89c85b1
  41d480:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  41d487:	mov    DWORD PTR [ebp-0x4],0xf89c85bb
  41d48e:	mov    eax,DWORD PTR [ebp-0x14]
  41d491:	xor    eax,0x7510899
  41d496:	mov    ecx,DWORD PTR [ebp-0x8]
  41d499:	lea    eax,[ecx+eax*1+0x3272e0]
  41d4a0:	mov    ecx,DWORD PTR [ebp-0x18]
  41d4a3:	xor    ecx,0x7510899
  41d4a9:	add    ecx,0x3272e0
  41d4af:	mov    edx,DWORD PTR [ebp+0x10]
  41d4b2:	imul   edx,ecx
  41d4b5:	cmp    eax,edx
  41d4b7:	jae    0x41d5aa
  41d4bd:	mov    eax,DWORD PTR [ebp+0x10]
  41d4c0:	mov    ecx,DWORD PTR [ebp-0x8]
  41d4c3:	sub    eax,ecx
  41d4c5:	mov    ecx,DWORD PTR [ebp-0x10]
  41d4c8:	xor    ecx,0x7510899
  41d4ce:	add    ecx,0x3272e0
  41d4d4:	cmp    eax,ecx
  41d4d6:	jbe    0x41d508
  41d4d8:	mov    eax,DWORD PTR [ebp+0x8]
  41d4db:	add    eax,DWORD PTR [ebp-0x8]
  41d4de:	mov    ecx,DWORD PTR [ebp+0xc]
  41d4e1:	add    ecx,DWORD PTR [ebp-0x8]
  41d4e4:	mov    edx,DWORD PTR [ecx]
  41d4e6:	mov    DWORD PTR [eax],edx
  41d4e8:	mov    ecx,DWORD PTR [ecx+0x4]
  41d4eb:	mov    DWORD PTR [eax+0x4],ecx
  41d4ee:	mov    eax,DWORD PTR [ebp-0x10]
  41d4f1:	xor    eax,0x7510899
  41d4f6:	mov    ecx,DWORD PTR [ebp-0x8]
  41d4f9:	lea    eax,[ecx+eax*1+0x3272e0]
  41d500:	mov    DWORD PTR [ebp-0x8],eax
  41d503:	jmp    0x41d5a5
  41d508:	mov    eax,DWORD PTR [ebp+0x10]
  41d50b:	mov    ecx,DWORD PTR [ebp-0x8]
  41d50e:	sub    eax,ecx
  41d510:	mov    ecx,DWORD PTR [ebp-0xc]
  41d513:	xor    ecx,0x7510899
  41d519:	add    ecx,0x3272e0
  41d51f:	cmp    eax,ecx
  41d521:	jbe    0x41d54a
  41d523:	mov    eax,DWORD PTR [ebp+0x8]
  41d526:	add    eax,DWORD PTR [ebp-0x8]
  41d529:	mov    ecx,DWORD PTR [ebp+0xc]
  41d52c:	add    ecx,DWORD PTR [ebp-0x8]
  41d52f:	mov    ecx,DWORD PTR [ecx]
  41d531:	mov    DWORD PTR [eax],ecx
  41d533:	mov    eax,DWORD PTR [ebp-0xc]
  41d536:	xor    eax,0x7510899
  41d53b:	mov    ecx,DWORD PTR [ebp-0x8]
  41d53e:	lea    eax,[ecx+eax*1+0x3272e0]
  41d545:	mov    DWORD PTR [ebp-0x8],eax
  41d548:	jmp    0x41d5a5
  41d54a:	mov    eax,DWORD PTR [ebp+0x10]
  41d54d:	mov    ecx,DWORD PTR [ebp-0x8]
  41d550:	sub    eax,ecx
  41d552:	mov    ecx,DWORD PTR [ebp-0x4]
  41d555:	xor    ecx,0x7510899
  41d55b:	add    ecx,0x3272e0
  41d561:	cmp    eax,ecx
  41d563:	jbe    0x41d58e
  41d565:	mov    eax,DWORD PTR [ebp+0x8]
  41d568:	add    eax,DWORD PTR [ebp-0x8]
  41d56b:	mov    ecx,DWORD PTR [ebp+0xc]
  41d56e:	add    ecx,DWORD PTR [ebp-0x8]
  41d571:	mov    cx,WORD PTR [ecx]
  41d574:	mov    WORD PTR [eax],cx
  41d577:	mov    eax,DWORD PTR [ebp-0x4]
  41d57a:	xor    eax,0x7510899
  41d57f:	mov    ecx,DWORD PTR [ebp-0x8]
  41d582:	lea    eax,[ecx+eax*1+0x3272e0]
  41d589:	mov    DWORD PTR [ebp-0x8],eax
  41d58c:	jmp    0x41d5a5
  41d58e:	mov    eax,DWORD PTR [ebp+0x8]
  41d591:	add    eax,DWORD PTR [ebp-0x8]
  41d594:	mov    ecx,DWORD PTR [ebp+0xc]
  41d597:	add    ecx,DWORD PTR [ebp-0x8]
  41d59a:	mov    cl,BYTE PTR [ecx]
  41d59c:	mov    BYTE PTR [eax],cl
  41d59e:	mov    eax,DWORD PTR [ebp-0x8]
  41d5a1:	inc    eax
  41d5a2:	mov    DWORD PTR [ebp-0x8],eax
  41d5a5:	jmp    0x41d48e
  41d5aa:	leave  
  41d5ab:	ret    0xc
  41d5ae:	push   ebp
  41d5af:	mov    ebp,esp
  41d5b1:	sub    esp,0xc
  41d5b4:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41d5bb:	push   esi
  41d5bc:	mov    esi,eax
  41d5be:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41d5c5:	mov    edx,DWORD PTR [ebp-0x4]
  41d5c8:	mov    eax,0x7510899
  41d5cd:	xor    edx,eax
  41d5cf:	mov    ecx,0x3272e0
  41d5d4:	add    edx,ecx
  41d5d6:	cmp    esi,edx
  41d5d8:	je     0x41d61a
  41d5da:	push   ebx
  41d5db:	push   edi
  41d5dc:	mov    edx,DWORD PTR [ebp-0x8]
  41d5df:	mov    ebx,DWORD PTR [ebp+0x8]
  41d5e2:	xor    edx,eax
  41d5e4:	mov    edi,0xffcd8d20
  41d5e9:	sub    edi,edx
  41d5eb:	add    esi,edi
  41d5ed:	lea    edx,[esi-0x3272e0]
  41d5f3:	xor    edx,eax
  41d5f5:	mov    DWORD PTR [ebp-0xc],edx
  41d5f8:	mov    edx,DWORD PTR [ebp-0x4]
  41d5fb:	mov    edi,DWORD PTR [ebp-0xc]
  41d5fe:	xor    dl,0x99
  41d601:	sub    dl,0x20
  41d604:	xor    edi,eax
  41d606:	mov    BYTE PTR [edi+ebx*1+0x3272e0],dl
  41d60d:	mov    edx,DWORD PTR [ebp-0x4]
  41d610:	xor    edx,eax
  41d612:	add    edx,ecx
  41d614:	cmp    esi,edx
  41d616:	jne    0x41d5dc
  41d618:	pop    edi
  41d619:	pop    ebx
  41d61a:	pop    esi
  41d61b:	leave  
  41d61c:	ret    0x4
  41d61f:	push   ebp
  41d620:	mov    ebp,esp
  41d622:	sub    esp,0x21c
  41d628:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  41d62f:	mov    DWORD PTR [ebp-0x14],0xf89c85b8
  41d636:	mov    eax,DWORD PTR [ebp+0x10]
  41d639:	mov    eax,DWORD PTR [ebp-0x4]
  41d63c:	mov    ecx,DWORD PTR [ebp+0x8]
  41d63f:	push   esi
  41d640:	push   edi
  41d641:	mov    edi,0x7510899
  41d646:	xor    eax,edi
  41d648:	mov    esi,0x3272e0
  41d64d:	add    eax,esi
  41d64f:	cmp    eax,ecx
  41d651:	mov    eax,DWORD PTR [ebp-0x4]
  41d654:	jne    0x41d65f
  41d656:	xor    eax,edi
  41d658:	add    eax,esi
  41d65a:	jmp    0x41d70b
  41d65f:	mov    ecx,DWORD PTR [ebp+0xc]
  41d662:	xor    eax,edi
  41d664:	add    eax,esi
  41d666:	cmp    eax,ecx
  41d668:	jne    0x41d66f
  41d66a:	mov    eax,DWORD PTR [ebp-0x4]
  41d66d:	jmp    0x41d656
  41d66f:	lea    eax,[ebp-0x21c]
  41d675:	mov    DWORD PTR [ebp-0x8],eax
  41d678:	mov    eax,DWORD PTR [ebp+0xc]
  41d67b:	mov    DWORD PTR [ebp-0x10],eax
  41d67e:	mov    eax,DWORD PTR [ebp-0x4]
  41d681:	xor    eax,edi
  41d683:	add    eax,esi
  41d685:	mov    DWORD PTR [ebp+0x10],eax
  41d688:	mov    eax,DWORD PTR [ebp+0xc]
  41d68b:	push   ebx
  41d68c:	call   0x41d367
  41d691:	mov    ebx,eax
  41d693:	mov    eax,DWORD PTR [ebp+0x8]
  41d696:	mov    eax,DWORD PTR [eax+0x14]
  41d699:	jmp    0x41d6f3
  41d69b:	mov    eax,DWORD PTR [ebp+0xc]
  41d69e:	sub    eax,0x8
  41d6a1:	mov    DWORD PTR [ebp-0xc],eax
  41d6a4:	mov    eax,DWORD PTR [ebp-0xc]
  41d6a7:	mov    eax,DWORD PTR [eax+0x28]
  41d6aa:	call   0x41d24f
  41d6af:	mov    DWORD PTR [ebp+0x10],eax
  41d6b2:	push   DWORD PTR [ebp+0x10]
  41d6b5:	mov    edx,DWORD PTR [ebp-0x8]
  41d6b8:	call   0x41d3f6
  41d6bd:	mov    eax,DWORD PTR [ebp-0x4]
  41d6c0:	xor    eax,edi
  41d6c2:	add    eax,esi
  41d6c4:	cmp    eax,ebx
  41d6c6:	jne    0x41d6d0
  41d6c8:	mov    eax,DWORD PTR [ebp-0x8]
  41d6cb:	call   0x41d2dd
  41d6d0:	mov    eax,DWORD PTR [ebp-0x14]
  41d6d3:	xor    eax,edi
  41d6d5:	add    eax,esi
  41d6d7:	push   eax
  41d6d8:	push   DWORD PTR [ebp-0x10]
  41d6db:	mov    eax,DWORD PTR [ebp-0x8]
  41d6de:	call   0x41d009
  41d6e3:	mov    ecx,DWORD PTR [ebp-0x4]
  41d6e6:	xor    ecx,edi
  41d6e8:	add    ecx,esi
  41d6ea:	cmp    eax,ecx
  41d6ec:	je     0x41d711
  41d6ee:	mov    eax,DWORD PTR [ebp+0xc]
  41d6f1:	mov    eax,DWORD PTR [eax]
  41d6f3:	mov    DWORD PTR [ebp+0xc],eax
  41d6f6:	mov    eax,DWORD PTR [ebp+0x8]
  41d6f9:	mov    ecx,DWORD PTR [ebp+0xc]
  41d6fc:	add    eax,0x14
  41d6ff:	cmp    ecx,eax
  41d701:	jne    0x41d69b
  41d703:	mov    eax,DWORD PTR [ebp-0x4]
  41d706:	xor    eax,edi
  41d708:	add    eax,esi
  41d70a:	pop    ebx
  41d70b:	pop    edi
  41d70c:	pop    esi
  41d70d:	leave  
  41d70e:	ret    0xc
  41d711:	mov    eax,DWORD PTR [ebp-0xc]
  41d714:	mov    eax,DWORD PTR [eax+0x18]
  41d717:	jmp    0x41d70a
  41d719:	push   ebp
  41d71a:	mov    ebp,esp
  41d71c:	mov    eax,DWORD PTR [ebp+0xc]
  41d71f:	sub    esp,0x10
  41d722:	cmp    DWORD PTR [ebp+0x8],0x0
  41d726:	push   ebx
  41d727:	push   esi
  41d728:	push   edi
  41d729:	je     0x41d7de
  41d72f:	test   eax,eax
  41d731:	je     0x41d7de
  41d737:	movzx  eax,WORD PTR [eax+0x20]
  41d73b:	mov    ecx,eax
  41d73d:	mov    DWORD PTR [ebp-0x10],eax
  41d740:	xor    edx,edx
  41d742:	and    DWORD PTR [ebp-0x8],edx
  41d745:	mov    eax,0x8a8c
  41d74a:	xor    ecx,eax
  41d74c:	add    ecx,0x3b50
  41d752:	mov    DWORD PTR [ebp-0xc],ecx
  41d755:	and    DWORD PTR [ebp-0x4],0x0
  41d759:	xor    ecx,ecx
  41d75b:	push   0x78
  41d75d:	pop    edi
  41d75e:	cmp    cx,WORD PTR [ebp-0xc]
  41d762:	jae    0x41d7c8
  41d764:	lea    esi,[edx-0x3b50]
  41d76a:	xor    esi,eax
  41d76c:	movzx  ecx,WORD PTR [ebp-0x4]
  41d770:	mov    ebx,DWORD PTR [ebp+0xc]
  41d773:	lea    ecx,[ebx+ecx*4]
  41d776:	cmp    WORD PTR [ecx+0x2],si
  41d77a:	jne    0x41d7b3
  41d77c:	movzx  ecx,WORD PTR [ecx]
  41d77f:	mov    edi,0x4e3c
  41d784:	cmp    cx,di
  41d787:	jne    0x41d795
  41d789:	mov    ebx,DWORD PTR [ebp+0x8]
  41d78c:	movzx  edi,dx
  41d78f:	cmp    BYTE PTR [edi+ebx*1],0x0
  41d793:	je     0x41d7c2
  41d795:	mov    ebx,DWORD PTR [ebp+0x8]
  41d798:	movzx  edi,dx
  41d79b:	movsx  di,BYTE PTR [edi+ebx*1]
  41d7a0:	mov    ebx,0x3b50
  41d7a5:	sub    di,bx
  41d7a8:	xor    di,ax
  41d7ab:	cmp    cx,di
  41d7ae:	je     0x41d7c2
  41d7b0:	push   0x7a
  41d7b2:	pop    edi
  41d7b3:	inc    DWORD PTR [ebp-0x4]
  41d7b6:	mov    cx,WORD PTR [ebp-0xc]
  41d7ba:	cmp    WORD PTR [ebp-0x4],cx
  41d7be:	jb     0x41d76c
  41d7c0:	jmp    0x41d7c8
  41d7c2:	inc    DWORD PTR [ebp-0x8]
  41d7c5:	push   0x79
  41d7c7:	pop    edi
  41d7c8:	mov    esi,DWORD PTR [ebp+0x8]
  41d7cb:	movzx  ecx,dx
  41d7ce:	cmp    BYTE PTR [ecx+esi*1],0x0
  41d7d2:	je     0x41d7e7
  41d7d4:	inc    edx
  41d7d5:	cmp    edi,0x7a
  41d7d8:	jne    0x41d755
  41d7de:	xor    eax,eax
  41d7e0:	pop    edi
  41d7e1:	pop    esi
  41d7e2:	pop    ebx
  41d7e3:	leave  
  41d7e4:	ret    0x8
  41d7e7:	mov    ecx,DWORD PTR [ebp-0x8]
  41d7ea:	add    ecx,0xffffc4b0
  41d7f0:	xor    cx,ax
  41d7f3:	xor    eax,eax
  41d7f5:	cmp    cx,WORD PTR [ebp-0x10]
  41d7f9:	sete   al
  41d7fc:	jmp    0x41d7e0
  41d7fe:	push   ebp
  41d7ff:	mov    ebp,esp
  41d801:	sub    esp,0x50
  41d804:	push   edi
  41d805:	mov    edi,eax
  41d807:	mov    eax,DWORD PTR [edi+0x1a8]
  41d80d:	cmp    DWORD PTR [eax],0x0
  41d810:	jne    0x41d819
  41d812:	xor    eax,eax
  41d814:	jmp    0x41d94a
  41d819:	push   DWORD PTR [ebp+0x8]
  41d81c:	push   0x2c
  41d81e:	pop    eax
  41d81f:	call   0x41d5ae
  41d824:	mov    edx,DWORD PTR [edi+0x1ac]
  41d82a:	lea    eax,[edi+0x22]
  41d82d:	mov    DWORD PTR [ebp-0x4c],eax
  41d830:	lea    eax,[edi+0x44]
  41d833:	mov    DWORD PTR [ebp-0x48],eax
  41d836:	lea    eax,[edi+0x66]
  41d839:	mov    DWORD PTR [ebp-0x44],eax
  41d83c:	lea    eax,[edi+0x88]
  41d842:	mov    DWORD PTR [ebp-0x40],eax
  41d845:	lea    eax,[edi+0xaa]
  41d84b:	mov    DWORD PTR [ebp-0x3c],eax
  41d84e:	lea    eax,[edi+0xcc]
  41d854:	mov    DWORD PTR [ebp-0x38],eax
  41d857:	lea    eax,[edi+0xee]
  41d85d:	mov    DWORD PTR [ebp-0x34],eax
  41d860:	lea    eax,[edi+0x110]
  41d866:	mov    DWORD PTR [ebp-0x30],eax
  41d869:	lea    eax,[edi+0x132]
  41d86f:	mov    DWORD PTR [ebp-0x2c],eax
  41d872:	lea    eax,[edi+0x154]
  41d878:	push   edi
  41d879:	mov    DWORD PTR [ebp-0x50],edi
  41d87c:	mov    DWORD PTR [ebp-0x28],eax
  41d87f:	call   0x41d97e
  41d884:	push   eax
  41d885:	mov    eax,DWORD PTR [edi+0x1a8]
  41d88b:	push   DWORD PTR [eax]
  41d88d:	call   0x41d61f
  41d892:	mov    DWORD PTR [ebp-0x10],eax
  41d895:	test   eax,eax
  41d897:	je     0x41d94a
  41d89d:	mov    ecx,DWORD PTR [eax+0x3c]
  41d8a0:	push   ebx
  41d8a1:	push   esi
  41d8a2:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  41d8a6:	add    esi,eax
  41d8a8:	mov    edi,DWORD PTR [esi+0x24]
  41d8ab:	mov    ecx,DWORD PTR [esi+0x1c]
  41d8ae:	mov    edx,DWORD PTR [esi+0x20]
  41d8b1:	mov    ebx,DWORD PTR [esi+0x18]
  41d8b4:	add    edi,eax
  41d8b6:	mov    DWORD PTR [ebp-0x20],edi
  41d8b9:	mov    edi,DWORD PTR [esi+0x14]
  41d8bc:	add    ecx,eax
  41d8be:	add    edx,eax
  41d8c0:	mov    DWORD PTR [ebp-0xc],ecx
  41d8c3:	mov    DWORD PTR [ebp-0x1c],edx
  41d8c6:	mov    DWORD PTR [ebp-0x8],edi
  41d8c9:	cmp    edi,ebx
  41d8cb:	ja     0x41d8d0
  41d8cd:	mov    DWORD PTR [ebp-0x8],ebx
  41d8d0:	xor    ebx,ebx
  41d8d2:	mov    DWORD PTR [ebp-0x18],ebx
  41d8d5:	cmp    DWORD PTR [ebp-0x8],ebx
  41d8d8:	jbe    0x41d948
  41d8da:	jmp    0x41d8df
  41d8dc:	mov    edx,DWORD PTR [ebp-0x1c]
  41d8df:	mov    edi,DWORD PTR [ebp-0x20]
  41d8e2:	movzx  edi,WORD PTR [edi+ebx*2]
  41d8e6:	cmp    ebx,DWORD PTR [esi+0x18]
  41d8e9:	jae    0x41d948
  41d8eb:	cmp    edi,DWORD PTR [esi+0x14]
  41d8ee:	jae    0x41d948
  41d8f0:	mov    ebx,DWORD PTR [edx+ebx*4]
  41d8f3:	mov    edx,DWORD PTR [ebp+0x8]
  41d8f6:	mov    edi,DWORD PTR [ecx+edi*4]
  41d8f9:	mov    DWORD PTR [ebp-0x4],edx
  41d8fc:	lea    edx,[ebp-0x50]
  41d8ff:	add    ebx,eax
  41d901:	add    edi,eax
  41d903:	sub    edx,DWORD PTR [ebp+0x8]
  41d906:	mov    DWORD PTR [ebp-0x14],0xb
  41d90d:	mov    DWORD PTR [ebp-0x24],edx
  41d910:	mov    edx,DWORD PTR [ebp-0x4]
  41d913:	cmp    DWORD PTR [edx],0x0
  41d916:	jne    0x41d933
  41d918:	mov    eax,DWORD PTR [ebp-0x24]
  41d91b:	push   DWORD PTR [eax+edx*1]
  41d91e:	push   ebx
  41d91f:	call   0x41d719
  41d924:	mov    ecx,DWORD PTR [ebp-0xc]
  41d927:	test   eax,eax
  41d929:	je     0x41d930
  41d92b:	mov    eax,DWORD PTR [ebp-0x4]
  41d92e:	mov    DWORD PTR [eax],edi
  41d930:	mov    eax,DWORD PTR [ebp-0x10]
  41d933:	add    DWORD PTR [ebp-0x4],0x4
  41d937:	dec    DWORD PTR [ebp-0x14]
  41d93a:	jne    0x41d910
  41d93c:	mov    ebx,DWORD PTR [ebp-0x18]
  41d93f:	inc    ebx
  41d940:	mov    DWORD PTR [ebp-0x18],ebx
  41d943:	cmp    ebx,DWORD PTR [ebp-0x8]
  41d946:	jb     0x41d8dc
  41d948:	pop    esi
  41d949:	pop    ebx
  41d94a:	pop    edi
  41d94b:	leave  
  41d94c:	ret    0x4
  41d94f:	push   ebp
  41d950:	mov    ebp,esp
  41d952:	mov    eax,DWORD PTR [ebp+0x8]
  41d955:	push   esi
  41d956:	push   DWORD PTR [eax+0x1d8]
  41d95c:	lea    esi,[eax+0x198]
  41d962:	mov    eax,DWORD PTR [ebp+0x8]
  41d965:	call   0x41d7fe
  41d96a:	mov    ecx,DWORD PTR [esi]
  41d96c:	mov    DWORD PTR [ecx],eax
  41d96e:	mov    eax,DWORD PTR [esi]
  41d970:	xor    ecx,ecx
  41d972:	cmp    DWORD PTR [eax],ecx
  41d974:	pop    esi
  41d975:	setne  cl
  41d978:	mov    eax,ecx
  41d97a:	pop    ebp
  41d97b:	ret    0x4
  41d97e:	mov    ecx,DWORD PTR [edi+0x188]
  41d984:	push   ebx
  41d985:	jmp    0x41d99a
  41d987:	xor    eax,0x8a8c
  41d98c:	add    eax,0x3b50
  41d991:	mov    WORD PTR [ecx],ax
  41d994:	add    ecx,0x2
  41d997:	add    edx,0x2
  41d99a:	movzx  eax,WORD PTR [edx]
  41d99d:	mov    ebx,0x4e3c
  41d9a2:	cmp    ax,bx
  41d9a5:	jne    0x41d987
  41d9a7:	xor    eax,eax
  41d9a9:	mov    WORD PTR [ecx],ax
  41d9ac:	mov    eax,DWORD PTR [edi+0x188]
  41d9b2:	pop    ebx
  41d9b3:	ret    
  41d9b4:	push   edi
  41d9b5:	mov    edi,eax
  41d9b7:	mov    eax,DWORD PTR [esi+0x188]
  41d9bd:	shl    edi,0x6
  41d9c0:	add    eax,edi
  41d9c2:	jmp    0x41d9ce
  41d9c4:	xor    cl,0x73
  41d9c7:	sub    cl,0x9
  41d9ca:	mov    BYTE PTR [eax],cl
  41d9cc:	inc    eax
  41d9cd:	inc    edx
  41d9ce:	mov    cl,BYTE PTR [edx]
  41d9d0:	cmp    cl,0x7a
  41d9d3:	jne    0x41d9c4
  41d9d5:	mov    BYTE PTR [eax],0x0
  41d9d8:	mov    eax,DWORD PTR [esi+0x188]
  41d9de:	add    eax,edi
  41d9e0:	pop    edi
  41d9e1:	ret    
  41d9e2:	push   ebp
  41d9e3:	mov    ebp,esp
  41d9e5:	sub    esp,0x38
  41d9e8:	push   ebx
  41d9e9:	mov    ebx,0xf89c85b9
  41d9ee:	mov    DWORD PTR [ebp-0x4],ebx
  41d9f1:	lea    eax,[ebx-0x1]
  41d9f4:	push   esi
  41d9f5:	mov    DWORD PTR [ebp-0x24],eax
  41d9f8:	mov    ecx,DWORD PTR [ebp-0x4]
  41d9fb:	mov    edx,DWORD PTR [ebp+0x8]
  41d9fe:	mov    esi,0x7510899
  41da03:	push   edi
  41da04:	xor    ecx,esi
  41da06:	mov    edi,0x3272e0
  41da0b:	add    ecx,edi
  41da0d:	cmp    edx,ecx
  41da0f:	je     0x41db7d
  41da15:	mov    ecx,DWORD PTR [ebp-0x4]
  41da18:	mov    edx,DWORD PTR [ebp+0xc]
  41da1b:	xor    ecx,esi
  41da1d:	add    ecx,edi
  41da1f:	cmp    edx,ecx
  41da21:	je     0x41db7d
  41da27:	mov    ecx,DWORD PTR [ebp+0x10]
  41da2a:	mov    DWORD PTR [ebp-0x18],ecx
  41da2d:	mov    ecx,DWORD PTR [ebp+0xc]
  41da30:	mov    DWORD PTR [ebp-0x14],ecx
  41da33:	mov    ecx,DWORD PTR [ebp+0x8]
  41da36:	mov    DWORD PTR [ebp-0x1c],0xf89c8504
  41da3d:	mov    DWORD PTR [ebp-0x20],eax
  41da40:	mov    DWORD PTR [ebp-0x10],ebx
  41da43:	mov    DWORD PTR [ebp+0xc],eax
  41da46:	mov    DWORD PTR [ebp+0x10],0xf89c85bb
  41da4d:	mov    eax,DWORD PTR [ebp+0xc]
  41da50:	mov    DWORD PTR [ebp-0xc],ecx
  41da53:	xor    eax,esi
  41da55:	mov    ecx,0xffcd8d20
  41da5a:	sub    ecx,eax
  41da5c:	add    ecx,DWORD PTR [ebp-0x14]
  41da5f:	mov    DWORD PTR [ebp+0x8],ecx
  41da62:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  41da69:	jmp    0x41db6d
  41da6e:	mov    eax,DWORD PTR [ebp+0xc]
  41da71:	mov    ecx,DWORD PTR [ebp+0xc]
  41da74:	xor    eax,esi
  41da76:	xor    ecx,esi
  41da78:	lea    ecx,[eax+ecx*1+0x64e5c0]
  41da7f:	mov    eax,DWORD PTR [ebp+0x8]
  41da82:	xor    edx,edx
  41da84:	div    ecx
  41da86:	mov    eax,DWORD PTR [ebp+0x10]
  41da89:	mov    ecx,DWORD PTR [ebp+0xc]
  41da8c:	xor    eax,esi
  41da8e:	xor    ecx,esi
  41da90:	sub    eax,ecx
  41da92:	cmp    edx,eax
  41da94:	jne    0x41db29
  41da9a:	mov    eax,DWORD PTR [ebp+0x8]
  41da9d:	add    eax,DWORD PTR [ebp-0xc]
  41daa0:	mov    dl,BYTE PTR [eax]
  41daa2:	mov    eax,DWORD PTR [ebp-0x10]
  41daa5:	mov    ecx,DWORD PTR [ebp-0x8]
  41daa8:	xor    eax,esi
  41daaa:	xor    ecx,esi
  41daac:	add    eax,edi
  41daae:	add    ecx,edi
  41dab0:	cmp    eax,ecx
  41dab2:	jae    0x41dafa
  41dab4:	lea    ecx,[eax-0x3272e0]
  41daba:	mov    DWORD PTR [ebp-0x4],ecx
  41dabd:	mov    ebx,DWORD PTR [ebp-0x4]
  41dac0:	xor    ebx,esi
  41dac2:	add    ebx,0x7f55d8fb
  41dac8:	lea    ecx,[ebp+eax*4-0x38]
  41dacc:	mov    DWORD PTR [ecx],ebx
  41dace:	mov    ebx,DWORD PTR [ecx]
  41dad0:	cmp    ebx,0x244ecbda
  41dad6:	jbe    0x41dae0
  41dad8:	add    DWORD PTR [ecx],0x405fc1d
  41dade:	jmp    0x41dae6
  41dae0:	add    DWORD PTR [ecx],0xfdaf43e3
  41dae6:	mov    ecx,DWORD PTR [ebp-0x8]
  41dae9:	xor    ecx,esi
  41daeb:	inc    eax
  41daec:	inc    DWORD PTR [ebp-0x4]
  41daef:	add    ecx,edi
  41daf1:	cmp    eax,ecx
  41daf3:	jb     0x41dabd
  41daf5:	mov    ebx,0xf89c85b9
  41dafa:	mov    eax,DWORD PTR [ebp-0x18]
  41dafd:	test   eax,eax
  41daff:	jne    0x41db09
  41db01:	xor    dl,0x73
  41db04:	sub    dl,0x9
  41db07:	jmp    0x41db1f
  41db09:	mov    eax,DWORD PTR [ebp-0x1c]
  41db0c:	xor    al,0x99
  41db0e:	mov    cl,0x20
  41db10:	sub    cl,al
  41db12:	add    dl,cl
  41db14:	mov    ecx,DWORD PTR [ebp-0x20]
  41db17:	xor    cl,0x99
  41db1a:	sub    cl,0x20
  41db1d:	ror    dl,cl
  41db1f:	xor    eax,eax
  41db21:	mov    eax,DWORD PTR [ebp+0x8]
  41db24:	add    eax,DWORD PTR [ebp-0xc]
  41db27:	mov    BYTE PTR [eax],dl
  41db29:	mov    eax,DWORD PTR [ebp+0x8]
  41db2c:	mov    ecx,DWORD PTR [ebp-0x10]
  41db2f:	sub    eax,edi
  41db31:	xor    eax,esi
  41db33:	cmp    eax,ecx
  41db35:	jne    0x41db5b
  41db37:	mov    eax,DWORD PTR [ebp+0x10]
  41db3a:	mov    ecx,DWORD PTR [ebp+0xc]
  41db3d:	xor    eax,esi
  41db3f:	xor    ecx,esi
  41db41:	sub    eax,ecx
  41db43:	sub    eax,edi
  41db45:	xor    eax,esi
  41db47:	mov    DWORD PTR [ebp+0x10],eax
  41db4a:	mov    eax,DWORD PTR [ebp+0xc]
  41db4d:	xor    eax,esi
  41db4f:	mov    ecx,0xffcd8d20
  41db54:	sub    ecx,eax
  41db56:	add    ecx,DWORD PTR [ebp-0x14]
  41db59:	jmp    0x41db6a
  41db5b:	mov    eax,DWORD PTR [ebp+0xc]
  41db5e:	xor    eax,esi
  41db60:	mov    ecx,0xffcd8d20
  41db65:	sub    ecx,eax
  41db67:	add    ecx,DWORD PTR [ebp+0x8]
  41db6a:	mov    DWORD PTR [ebp+0x8],ecx
  41db6d:	mov    eax,DWORD PTR [ebp+0x10]
  41db70:	cmp    eax,ebx
  41db72:	jne    0x41da6e
  41db78:	mov    eax,DWORD PTR [ebp-0x24]
  41db7b:	jmp    0x41db80
  41db7d:	mov    eax,DWORD PTR [ebp-0x4]
  41db80:	xor    eax,esi
  41db82:	add    eax,edi
  41db84:	pop    edi
  41db85:	pop    esi
  41db86:	pop    ebx
  41db87:	leave  
  41db88:	ret    0xc
  41db8b:	push   ebp
  41db8c:	mov    ebp,esp
  41db8e:	sub    esp,0x14
  41db91:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  41db98:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  41db9f:	mov    eax,DWORD PTR [ebx]
  41dba1:	mov    DWORD PTR [ebp-0x8],eax
  41dba4:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  41dbab:	push   esi
  41dbac:	push   edi
  41dbad:	mov    DWORD PTR [ebp-0x14],0xead718d9
  41dbb4:	mov    edi,DWORD PTR [ebp-0x4]
  41dbb7:	mov    ecx,DWORD PTR [ebp-0x10]
  41dbba:	mov    eax,0x7510899
  41dbbf:	xor    edi,eax
  41dbc1:	mov    edx,0x3272e0
  41dbc6:	xor    ecx,eax
  41dbc8:	add    edi,edx
  41dbca:	add    ecx,edx
  41dbcc:	imul   edi,ecx
  41dbcf:	jmp    0x41dc17
  41dbd1:	mov    ecx,DWORD PTR [ebp-0x8]
  41dbd4:	mov    esi,DWORD PTR [ebp-0x4]
  41dbd7:	xor    ecx,eax
  41dbd9:	xor    esi,eax
  41dbdb:	add    ecx,edx
  41dbdd:	add    esi,edx
  41dbdf:	test   esi,ecx
  41dbe1:	mov    esi,DWORD PTR [ebp-0x8]
  41dbe4:	mov    ecx,DWORD PTR [ebp-0x4]
  41dbe7:	je     0x41dbfe
  41dbe9:	xor    ecx,eax
  41dbeb:	xor    esi,eax
  41dbed:	add    ecx,edx
  41dbef:	add    esi,edx
  41dbf1:	shr    esi,cl
  41dbf3:	mov    ecx,DWORD PTR [ebp-0x14]
  41dbf6:	xor    ecx,eax
  41dbf8:	add    ecx,edx
  41dbfa:	xor    esi,ecx
  41dbfc:	jmp    0x41dc08
  41dbfe:	xor    esi,eax
  41dc00:	xor    ecx,eax
  41dc02:	add    esi,edx
  41dc04:	add    ecx,edx
  41dc06:	shr    esi,cl
  41dc08:	mov    DWORD PTR [ebp-0x8],esi
  41dc0b:	mov    ecx,DWORD PTR [ebp-0x4]
  41dc0e:	xor    ecx,eax
  41dc10:	lea    edi,[edi+ecx*1+0x3272e0]
  41dc17:	mov    ecx,DWORD PTR [ebp-0xc]
  41dc1a:	mov    esi,DWORD PTR [ebp-0x4]
  41dc1d:	xor    esi,eax
  41dc1f:	xor    ecx,eax
  41dc21:	sub    ecx,esi
  41dc23:	cmp    edi,ecx
  41dc25:	jbe    0x41dbd1
  41dc27:	mov    eax,DWORD PTR [ebp-0x8]
  41dc2a:	pop    edi
  41dc2b:	mov    DWORD PTR [ebx],eax
  41dc2d:	mov    eax,DWORD PTR [ebp-0x8]
  41dc30:	pop    esi
  41dc31:	leave  
  41dc32:	ret    
  41dc33:	push   ebp
  41dc34:	mov    ebp,esp
  41dc36:	sub    esp,0x420
  41dc3c:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  41dc43:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41dc4a:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  41dc51:	push   ebx
  41dc52:	mov    DWORD PTR [ebp-0x1c],0xf89c8586
  41dc59:	mov    eax,DWORD PTR [ebp-0x14]
  41dc5c:	push   esi
  41dc5d:	mov    esi,0x7510899
  41dc62:	push   edi
  41dc63:	xor    eax,esi
  41dc65:	mov    edi,0x3272e0
  41dc6a:	add    eax,edi
  41dc6c:	mov    DWORD PTR [ebp-0x8],eax
  41dc6f:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  41dc76:	mov    DWORD PTR [ebp-0x4],0xead718d9
  41dc7d:	mov    DWORD PTR [ebp-0x10],0x8
  41dc84:	mov    ecx,ecx
  41dc86:	mov    eax,DWORD PTR [ebp-0xc]
  41dc89:	mov    ecx,DWORD PTR [ebp-0x14]
  41dc8c:	xor    eax,esi
  41dc8e:	xor    ecx,esi
  41dc90:	add    eax,edi
  41dc92:	add    ecx,edi
  41dc94:	imul   eax,ecx
  41dc97:	jmp    0x41dcca
  41dc99:	mov    eax,DWORD PTR [ebp-0x4]
  41dc9c:	sub    eax,edi
  41dc9e:	xor    eax,esi
  41dca0:	mov    DWORD PTR [ebp-0x8],eax
  41dca3:	lea    ebx,[ebp-0x8]
  41dca6:	call   0x41db8b
  41dcab:	mov    DWORD PTR [ebp-0x8],eax
  41dcae:	mov    eax,DWORD PTR [ebp-0x8]
  41dcb1:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcb4:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  41dcbb:	mov    eax,DWORD PTR [ebp-0xc]
  41dcbe:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcc1:	xor    eax,esi
  41dcc3:	lea    eax,[eax+ecx*1+0x3272e0]
  41dcca:	mov    DWORD PTR [ebp-0x4],eax
  41dccd:	mov    eax,DWORD PTR [ebp-0x18]
  41dcd0:	mov    ecx,DWORD PTR [ebp-0xc]
  41dcd3:	xor    ecx,esi
  41dcd5:	xor    eax,esi
  41dcd7:	sub    eax,ecx
  41dcd9:	mov    ecx,DWORD PTR [ebp-0x4]
  41dcdc:	cmp    ecx,eax
  41dcde:	jbe    0x41dc99
  41dce0:	mov    eax,DWORD PTR [ebp-0x1c]
  41dce3:	xor    eax,esi
  41dce5:	add    eax,edi
  41dce7:	mov    DWORD PTR [ebp-0x8],eax
  41dcea:	mov    DWORD PTR [ebp-0x18],0xf89c8686
  41dcf1:	mov    ebx,ebx
  41dcf3:	jmp    0x41dd56
  41dcf5:	mov    ecx,DWORD PTR [ebp-0x20]
  41dcf8:	mov    eax,DWORD PTR [ebp-0x8]
  41dcfb:	xor    ecx,esi
  41dcfd:	add    ecx,edi
  41dcff:	shr    eax,cl
  41dd01:	mov    DWORD PTR [ebp-0x4],eax
  41dd04:	mov    eax,DWORD PTR [ebp+0x8]
  41dd07:	mov    cl,BYTE PTR [eax]
  41dd09:	mov    BYTE PTR [ebp+0xb],cl
  41dd0c:	mov    cl,BYTE PTR [ebp+0xb]
  41dd0f:	mov    edx,DWORD PTR [ebp-0x8]
  41dd12:	movzx  ecx,cl
  41dd15:	xor    ecx,edx
  41dd17:	mov    DWORD PTR [ebp+0x8],ecx
  41dd1a:	mov    ecx,DWORD PTR [ebp-0x18]
  41dd1d:	mov    edx,DWORD PTR [ebp+0x8]
  41dd20:	xor    ecx,esi
  41dd22:	add    ecx,edi
  41dd24:	and    ecx,edx
  41dd26:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  41dd2d:	mov    edx,DWORD PTR [ebp-0x4]
  41dd30:	xor    ecx,edx
  41dd32:	mov    DWORD PTR [ebp-0x8],ecx
  41dd35:	mov    ecx,DWORD PTR [ebp-0xc]
  41dd38:	xor    ecx,esi
  41dd3a:	lea    eax,[eax+ecx*1+0x3272e0]
  41dd41:	mov    DWORD PTR [ebp+0x8],eax
  41dd44:	mov    eax,DWORD PTR [ebp-0xc]
  41dd47:	xor    eax,esi
  41dd49:	mov    ecx,0xffcd8d20
  41dd4e:	sub    ecx,eax
  41dd50:	add    ecx,DWORD PTR [ebp-0x10]
  41dd53:	mov    DWORD PTR [ebp-0x10],ecx
  41dd56:	mov    eax,DWORD PTR [ebp-0x14]
  41dd59:	mov    ecx,DWORD PTR [ebp-0x10]
  41dd5c:	xor    eax,esi
  41dd5e:	add    eax,edi
  41dd60:	cmp    ecx,eax
  41dd62:	jne    0x41dcf5
  41dd64:	mov    eax,DWORD PTR [ebp-0x1c]
  41dd67:	mov    ecx,DWORD PTR [ebp-0x8]
  41dd6a:	xor    eax,esi
  41dd6c:	add    eax,edi
  41dd6e:	pop    edi
  41dd6f:	pop    esi
  41dd70:	xor    eax,ecx
  41dd72:	pop    ebx
  41dd73:	leave  
  41dd74:	ret    0x4
  41dd77:	push   ebp
  41dd78:	mov    ebp,esp
  41dd7a:	mov    eax,DWORD PTR [ebp+0x1c]
  41dd7d:	mov    ecx,DWORD PTR [ebp+0x8]
  41dd80:	mov    edx,DWORD PTR [ebp+0x10]
  41dd83:	mov    eax,DWORD PTR [eax+0x190]
  41dd89:	mov    eax,DWORD PTR [eax]
  41dd8b:	sub    esp,0x64
  41dd8e:	push   ebx
  41dd8f:	push   esi
  41dd90:	push   edi
  41dd91:	mov    edi,0x7510899
  41dd96:	xor    ecx,edi
  41dd98:	mov    ebx,0x3272e0
  41dd9d:	add    ecx,ebx
  41dd9f:	cmp    ecx,edx
  41dda1:	jne    0x41ddb2
  41dda3:	or     DWORD PTR ds:0x3750c3f,0x4263eb0e
  41ddad:	jmp    0x41e2ae
  41ddb2:	mov    ecx,DWORD PTR [ebp+0x8]
  41ddb5:	mov    esi,DWORD PTR [ebp+0x14]
  41ddb8:	mov    edx,DWORD PTR [esi]
  41ddba:	xor    ecx,edi
  41ddbc:	add    ecx,ebx
  41ddbe:	cmp    edx,ecx
  41ddc0:	je     0x41e269
  41ddc6:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ddc9:	mov    DWORD PTR [ebp-0x1c],eax
  41ddcc:	mov    DWORD PTR [ebp+0x1c],ecx
  41ddcf:	mov    ecx,DWORD PTR [ebp+0x18]
  41ddd2:	mov    eax,DWORD PTR [esi]
  41ddd4:	mov    DWORD PTR [ebp-0x20],eax
  41ddd7:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  41ddde:	mov    edx,0xf89c85b8
  41dde3:	mov    DWORD PTR [ebp-0x8],edx
  41dde6:	mov    eax,DWORD PTR [ebp+0x1c]
  41dde9:	mov    DWORD PTR [ebp+0x1c],eax
  41ddec:	mov    eax,DWORD PTR [ebp+0x1c]
  41ddef:	mov    eax,DWORD PTR [eax+0x190]
  41ddf5:	mov    eax,DWORD PTR [eax]
  41ddf7:	mov    DWORD PTR [ebp-0x24],ecx
  41ddfa:	mov    ecx,DWORD PTR [ebp+0x1c]
  41ddfd:	mov    ecx,DWORD PTR [ecx+0x190]
  41de03:	mov    ecx,DWORD PTR [ecx]
  41de05:	add    ecx,DWORD PTR [eax+0x3c]
  41de08:	mov    DWORD PTR [ebp+0x10],ecx
  41de0b:	mov    eax,DWORD PTR [ebp+0x8]
  41de0e:	xor    eax,edi
  41de10:	add    eax,ebx
  41de12:	mov    DWORD PTR [ebp-0x4],eax
  41de15:	mov    eax,DWORD PTR [ebp+0x8]
  41de18:	xor    eax,edi
  41de1a:	add    eax,ebx
  41de1c:	mov    DWORD PTR [ebp+0x18],eax
  41de1f:	mov    eax,DWORD PTR [ebp+0x10]
  41de22:	mov    eax,DWORD PTR [eax+0x50]
  41de25:	sub    eax,0xc
  41de28:	mov    DWORD PTR [ebp-0x28],eax
  41de2b:	mov    eax,DWORD PTR [ebp+0x10]
  41de2e:	mov    eax,DWORD PTR [eax+0x38]
  41de31:	mov    ecx,DWORD PTR [ebp+0x10]
  41de34:	dec    eax
  41de35:	test   DWORD PTR [ecx+0x54],eax
  41de38:	mov    eax,DWORD PTR [ebp+0x10]
  41de3b:	je     0x41de55
  41de3d:	mov    eax,DWORD PTR [eax+0x38]
  41de40:	mov    ecx,DWORD PTR [ebp+0x10]
  41de43:	mov    ecx,DWORD PTR [ecx+0x54]
  41de46:	dec    eax
  41de47:	not    eax
  41de49:	and    ecx,eax
  41de4b:	mov    eax,DWORD PTR [ebp+0x10]
  41de4e:	mov    eax,DWORD PTR [eax+0x38]
  41de51:	add    eax,ecx
  41de53:	jmp    0x41de58
  41de55:	mov    eax,DWORD PTR [eax+0x54]
  41de58:	mov    DWORD PTR [ebp+0x1c],eax
  41de5b:	mov    eax,DWORD PTR [ebp+0x8]
  41de5e:	xor    eax,edi
  41de60:	add    eax,ebx
  41de62:	mov    DWORD PTR [ebp+0x18],eax
  41de65:	mov    eax,DWORD PTR [ebp+0x8]
  41de68:	xor    eax,edi
  41de6a:	add    eax,ebx
  41de6c:	mov    DWORD PTR [ebp+0x18],eax
  41de6f:	mov    eax,DWORD PTR [ebp+0x8]
  41de72:	mov    ecx,DWORD PTR [ebp-0x24]
  41de75:	xor    eax,edi
  41de77:	add    eax,ebx
  41de79:	mov    DWORD PTR [ecx],eax
  41de7b:	mov    DWORD PTR [ebp+0x18],edx
  41de7e:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  41de85:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  41de8c:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  41de93:	mov    eax,DWORD PTR [ebp-0x8]
  41de96:	mov    ecx,DWORD PTR [ebp+0x1c]
  41de99:	xor    eax,edi
  41de9b:	add    eax,ebx
  41de9d:	imul   eax,ecx
  41dea0:	mov    ecx,DWORD PTR [ebp+0x8]
  41dea3:	mov    edx,DWORD PTR [ebp-0x28]
  41dea6:	xor    ecx,edi
  41dea8:	lea    ecx,[ecx+edx*1+0x3272e0]
  41deaf:	cmp    eax,ecx
  41deb1:	jae    0x41e262
  41deb7:	mov    eax,DWORD PTR [ebp+0x8]
  41deba:	xor    eax,edi
  41debc:	add    eax,ebx
  41debe:	mov    DWORD PTR [ebp+0x18],eax
  41dec1:	mov    eax,DWORD PTR [ebp+0x1c]
  41dec4:	add    eax,DWORD PTR [ebp-0x1c]
  41dec7:	mov    DWORD PTR [ebp-0x4],eax
  41deca:	push   DWORD PTR [ebp-0x4]
  41decd:	mov    esi,DWORD PTR [ebp-0x1c]
  41ded0:	mov    ecx,DWORD PTR [ebp+0x10]
  41ded3:	call   0x41cfcb
  41ded8:	mov    DWORD PTR [ebp+0xc],eax
  41dedb:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  41dee2:	mov    eax,DWORD PTR [ebp-0x18]
  41dee5:	xor    eax,edi
  41dee7:	lea    ecx,[ebp-0x40]
  41deea:	add    eax,ebx
  41deec:	push   ecx
  41deed:	call   0x41d5ae
  41def2:	mov    eax,DWORD PTR [ebp+0xc]
  41def5:	test   eax,eax
  41def7:	je     0x41df47
  41def9:	mov    eax,DWORD PTR [ebp-0x18]
  41defc:	xor    eax,edi
  41defe:	add    eax,ebx
  41df00:	push   eax
  41df01:	push   DWORD PTR [ebp+0xc]
  41df04:	lea    eax,[ebp-0x40]
  41df07:	push   eax
  41df08:	call   0x41d455
  41df0d:	mov    eax,DWORD PTR [ebp-0x4]
  41df10:	mov    DWORD PTR [ebp-0x18],eax
  41df13:	mov    eax,DWORD PTR [ebp-0x18]
  41df16:	mov    ecx,DWORD PTR [ebp-0x1c]
  41df19:	sub    eax,ecx
  41df1b:	mov    DWORD PTR [ebp-0x18],eax
  41df1e:	mov    eax,DWORD PTR [ebp+0xc]
  41df21:	mov    ecx,DWORD PTR [ebp+0xc]
  41df24:	mov    eax,DWORD PTR [eax+0x10]
  41df27:	add    eax,DWORD PTR [ecx+0xc]
  41df2a:	mov    ecx,DWORD PTR [ebp-0x18]
  41df2d:	cmp    ecx,eax
  41df2f:	jb     0x41df47
  41df31:	mov    eax,DWORD PTR [ebp+0xc]
  41df34:	mov    eax,DWORD PTR [eax+0xc]
  41df37:	mov    ecx,DWORD PTR [ebp+0xc]
  41df3a:	add    eax,DWORD PTR [ecx+0x8]
  41df3d:	mov    ecx,DWORD PTR [ebp-0x18]
  41df40:	sub    eax,ecx
  41df42:	jmp    0x41e235
  41df47:	push   0xc
  41df49:	push   DWORD PTR [ebp-0x4]
  41df4c:	lea    eax,[ebp-0x4c]
  41df4f:	push   eax
  41df50:	call   0x41d455
  41df55:	mov    eax,0xf89c85b9
  41df5a:	mov    DWORD PTR [ebp-0x2c],eax
  41df5d:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  41df64:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  41df6b:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  41df72:	lea    ecx,[ebp-0x2c]
  41df75:	mov    DWORD PTR [ebp-0xc],ecx
  41df78:	lea    ecx,[ebp-0x30]
  41df7b:	mov    DWORD PTR [ebp-0x10],ecx
  41df7e:	lea    ecx,[ebp-0x34]
  41df81:	mov    DWORD PTR [ebp+0xc],ecx
  41df84:	lea    ecx,[ebp-0x38]
  41df87:	mov    DWORD PTR [ebp-0x14],ecx
  41df8a:	mov    ecx,DWORD PTR [ebp+0x8]
  41df8d:	xor    ecx,edi
  41df8f:	add    ecx,ebx
  41df91:	mov    DWORD PTR [ebp-0x18],ecx
  41df94:	jmp    0x41e190
  41df99:	cmp    eax,0xf89c85bb
  41df9e:	je     0x41e1a2
  41dfa4:	mov    ecx,DWORD PTR [ebp-0x8]
  41dfa7:	xor    ecx,edi
  41dfa9:	mov    esi,eax
  41dfab:	add    ecx,ebx
  41dfad:	mov    DWORD PTR [ebp+0x18],ecx
  41dfb0:	mov    eax,DWORD PTR [ebp-0x18]
  41dfb3:	xor    esi,edi
  41dfb5:	lea    eax,[eax+esi*1+0x3272e0]
  41dfbc:	mov    DWORD PTR [ebp-0x18],eax
  41dfbf:	mov    eax,DWORD PTR [ebp-0x8]
  41dfc2:	mov    ecx,DWORD PTR [ebp-0x18]
  41dfc5:	xor    eax,edi
  41dfc7:	add    eax,ebx
  41dfc9:	cmp    ecx,eax
  41dfcb:	jne    0x41dfe0
  41dfcd:	mov    eax,DWORD PTR [ebp+0x8]
  41dfd0:	xor    eax,edi
  41dfd2:	add    eax,ebx
  41dfd4:	push   eax
  41dfd5:	push   0xc
  41dfd7:	lea    eax,[ebp-0x4c]
  41dfda:	push   eax
  41dfdb:	call   0x41d9e2
  41dfe0:	mov    eax,DWORD PTR [ebp-0xc]
  41dfe3:	mov    eax,DWORD PTR [eax]
  41dfe5:	xor    eax,edi
  41dfe7:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41dfee:	mov    ecx,DWORD PTR [ebp+0x8]
  41dff1:	xor    ecx,edi
  41dff3:	movzx  eax,al
  41dff6:	add    ecx,ebx
  41dff8:	cmp    eax,ecx
  41dffa:	je     0x41e178
  41e000:	mov    eax,DWORD PTR [ebp-0x10]
  41e003:	mov    eax,DWORD PTR [eax]
  41e005:	xor    eax,edi
  41e007:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e00e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e011:	xor    ecx,edi
  41e013:	movzx  eax,al
  41e016:	add    ecx,ebx
  41e018:	cmp    eax,ecx
  41e01a:	je     0x41e178
  41e020:	mov    eax,DWORD PTR [ebp+0xc]
  41e023:	mov    eax,DWORD PTR [eax]
  41e025:	xor    eax,edi
  41e027:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e02e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e031:	xor    ecx,edi
  41e033:	movzx  eax,al
  41e036:	add    ecx,ebx
  41e038:	cmp    eax,ecx
  41e03a:	je     0x41e178
  41e040:	mov    eax,DWORD PTR [ebp-0x14]
  41e043:	mov    eax,DWORD PTR [eax]
  41e045:	xor    eax,edi
  41e047:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e04e:	mov    ecx,DWORD PTR [ebp+0x8]
  41e051:	xor    ecx,edi
  41e053:	movzx  eax,al
  41e056:	add    ecx,ebx
  41e058:	cmp    eax,ecx
  41e05a:	je     0x41e178
  41e060:	mov    eax,DWORD PTR [ebp-0x10]
  41e063:	mov    eax,DWORD PTR [eax]
  41e065:	xor    eax,edi
  41e067:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e06e:	mov    ecx,DWORD PTR [ebp-0xc]
  41e071:	mov    ecx,DWORD PTR [ecx]
  41e073:	xor    ecx,edi
  41e075:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e07c:	xor    al,cl
  41e07e:	mov    ecx,DWORD PTR [ebp+0xc]
  41e081:	mov    ecx,DWORD PTR [ecx]
  41e083:	xor    ecx,edi
  41e085:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e08c:	or     al,cl
  41e08e:	mov    ecx,DWORD PTR [ebp-0xc]
  41e091:	mov    ecx,DWORD PTR [ecx]
  41e093:	xor    ecx,edi
  41e095:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e09c:	cmp    cl,al
  41e09e:	jne    0x41e178
  41e0a4:	mov    eax,DWORD PTR [ebp+0xc]
  41e0a7:	mov    eax,DWORD PTR [eax]
  41e0a9:	xor    eax,edi
  41e0ab:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e0b2:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0b5:	mov    ecx,DWORD PTR [ecx]
  41e0b7:	xor    ecx,edi
  41e0b9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e0c0:	xor    al,cl
  41e0c2:	mov    ecx,DWORD PTR [ebp-0x14]
  41e0c5:	mov    ecx,DWORD PTR [ecx]
  41e0c7:	xor    ecx,edi
  41e0c9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e0d0:	or     al,cl
  41e0d2:	mov    ecx,DWORD PTR [ebp-0x10]
  41e0d5:	mov    ecx,DWORD PTR [ecx]
  41e0d7:	xor    ecx,edi
  41e0d9:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e0e0:	cmp    cl,al
  41e0e2:	jne    0x41e178
  41e0e8:	mov    eax,DWORD PTR [ebp-0x14]
  41e0eb:	mov    eax,DWORD PTR [eax]
  41e0ed:	xor    eax,edi
  41e0ef:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e0f6:	mov    ecx,DWORD PTR [ebp+0xc]
  41e0f9:	mov    ecx,DWORD PTR [ecx]
  41e0fb:	xor    ecx,edi
  41e0fd:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e104:	xor    al,cl
  41e106:	mov    ecx,DWORD PTR [ebp-0xc]
  41e109:	mov    ecx,DWORD PTR [ecx]
  41e10b:	xor    ecx,edi
  41e10d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e114:	or     al,cl
  41e116:	mov    ecx,DWORD PTR [ebp+0xc]
  41e119:	mov    ecx,DWORD PTR [ecx]
  41e11b:	xor    ecx,edi
  41e11d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e124:	cmp    cl,al
  41e126:	jne    0x41e178
  41e128:	mov    eax,DWORD PTR [ebp-0x14]
  41e12b:	mov    eax,DWORD PTR [eax]
  41e12d:	xor    eax,edi
  41e12f:	mov    al,BYTE PTR [ebp+eax*1+0x327294]
  41e136:	mov    ecx,DWORD PTR [ebp-0xc]
  41e139:	mov    ecx,DWORD PTR [ecx]
  41e13b:	xor    ecx,edi
  41e13d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e144:	xor    al,cl
  41e146:	mov    ecx,DWORD PTR [ebp-0x10]
  41e149:	mov    ecx,DWORD PTR [ecx]
  41e14b:	xor    ecx,edi
  41e14d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327294]
  41e154:	or     al,cl
  41e156:	mov    ecx,DWORD PTR [ebp-0x14]
  41e159:	mov    ecx,DWORD PTR [ecx]
  41e15b:	xor    ecx,edi
  41e15d:	mov    cl,BYTE PTR [ebp+ecx*1+0x327298]
  41e164:	cmp    cl,al
  41e166:	jne    0x41e178
  41e168:	lea    eax,[ebp-0x4c]
  41e16b:	push   eax
  41e16c:	call   0x41dc33
  41e171:	mov    ecx,DWORD PTR [ebp-0x44]
  41e174:	cmp    eax,ecx
  41e176:	je     0x41e182
  41e178:	mov    eax,DWORD PTR [ebp+0x8]
  41e17b:	xor    eax,edi
  41e17d:	add    eax,ebx
  41e17f:	mov    DWORD PTR [ebp+0x18],eax
  41e182:	mov    eax,DWORD PTR [ebp-0x8]
  41e185:	xor    eax,edi
  41e187:	lea    eax,[eax+esi*1+0x3272e0]
  41e18e:	xor    eax,edi
  41e190:	mov    ecx,DWORD PTR [ebp+0x8]
  41e193:	mov    edx,DWORD PTR [ebp+0x18]
  41e196:	xor    ecx,edi
  41e198:	add    ecx,ebx
  41e19a:	cmp    edx,ecx
  41e19c:	je     0x41df99
  41e1a2:	mov    eax,DWORD PTR [ebp+0x8]
  41e1a5:	mov    ecx,DWORD PTR [ebp+0x18]
  41e1a8:	xor    eax,edi
  41e1aa:	add    eax,ebx
  41e1ac:	cmp    ecx,eax
  41e1ae:	jne    0x41e1c1
  41e1b0:	mov    eax,DWORD PTR [ebp-0x8]
  41e1b3:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e1b6:	xor    eax,edi
  41e1b8:	lea    eax,[eax+ecx*1+0x3272e0]
  41e1bf:	jmp    0x41e238
  41e1c1:	push   0x18
  41e1c3:	push   DWORD PTR [ebp-0x4]
  41e1c6:	lea    eax,[ebp-0x64]
  41e1c9:	push   eax
  41e1ca:	call   0x41d455
  41e1cf:	mov    eax,DWORD PTR [ebp+0x8]
  41e1d2:	mov    ecx,DWORD PTR [ebp-0x18]
  41e1d5:	xor    eax,edi
  41e1d7:	add    eax,ebx
  41e1d9:	cmp    eax,ecx
  41e1db:	je     0x41e1f0
  41e1dd:	mov    eax,DWORD PTR [ebp+0x8]
  41e1e0:	xor    eax,edi
  41e1e2:	add    eax,ebx
  41e1e4:	push   eax
  41e1e5:	push   0x18
  41e1e7:	lea    eax,[ebp-0x64]
  41e1ea:	push   eax
  41e1eb:	call   0x41d9e2
  41e1f0:	mov    eax,DWORD PTR [ebp-0x4]
  41e1f3:	add    eax,0x18
  41e1f6:	mov    DWORD PTR [ebp+0x18],eax
  41e1f9:	push   DWORD PTR [ebp-0x50]
  41e1fc:	push   DWORD PTR [ebp+0x18]
  41e1ff:	mov    eax,DWORD PTR [ebp-0x54]
  41e202:	add    eax,DWORD PTR [ebp-0x20]
  41e205:	push   eax
  41e206:	call   0x41d455
  41e20b:	mov    eax,DWORD PTR [ebp+0x8]
  41e20e:	mov    ecx,DWORD PTR [ebp-0x18]
  41e211:	xor    eax,edi
  41e213:	add    eax,ebx
  41e215:	cmp    eax,ecx
  41e217:	je     0x41e22a
  41e219:	push   0x0
  41e21b:	push   DWORD PTR [ebp-0x50]
  41e21e:	mov    eax,DWORD PTR [ebp-0x54]
  41e221:	add    eax,DWORD PTR [ebp-0x20]
  41e224:	push   eax
  41e225:	call   0x41d9e2
  41e22a:	mov    eax,DWORD PTR [ebp-0x24]
  41e22d:	mov    ecx,DWORD PTR [ebp-0x50]
  41e230:	add    DWORD PTR [eax],ecx
  41e232:	mov    eax,DWORD PTR [ebp-0x50]
  41e235:	add    eax,DWORD PTR [ebp+0x1c]
  41e238:	mov    DWORD PTR [ebp+0x1c],eax
  41e23b:	mov    eax,DWORD PTR [ebp-0x8]
  41e23e:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e241:	xor    eax,edi
  41e243:	add    eax,ebx
  41e245:	imul   eax,ecx
  41e248:	mov    ecx,DWORD PTR [ebp+0x8]
  41e24b:	mov    edx,DWORD PTR [ebp-0x28]
  41e24e:	xor    ecx,edi
  41e250:	lea    ecx,[ecx+edx*1+0x3272e0]
  41e257:	cmp    eax,ecx
  41e259:	jb     0x41deb7
  41e25f:	mov    esi,DWORD PTR [ebp+0x14]
  41e262:	mov    eax,DWORD PTR [ebp-0x20]
  41e265:	mov    DWORD PTR [esi],eax
  41e267:	jmp    0x41e2ae
  41e269:	mov    ecx,DWORD PTR [ebp+0x8]
  41e26c:	mov    edx,DWORD PTR [ebp+0xc]
  41e26f:	xor    ecx,edi
  41e271:	xor    edx,edi
  41e273:	add    ecx,ebx
  41e275:	add    edx,ebx
  41e277:	cmp    ecx,edx
  41e279:	jne    0x41e28d
  41e27b:	mov    eax,ds:0x7f642d1e
  41e280:	imul   eax,eax,0x9f15fcef
  41e286:	mov    ds:0x7f642d1e,eax
  41e28b:	jmp    0x41e2ae
  41e28d:	mov    ecx,DWORD PTR [ebp+0x8]
  41e290:	xor    ecx,edi
  41e292:	add    ecx,ebx
  41e294:	cmp    eax,ecx
  41e296:	je     0x41e2a4
  41e298:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  41e2a2:	jmp    0x41e2ae
  41e2a4:	and    DWORD PTR ds:0x3343fa1e,0x5265ec3f
  41e2ae:	pop    edi
  41e2af:	pop    esi
  41e2b0:	pop    ebx
  41e2b1:	leave  
  41e2b2:	ret    0x18
  41e2b5:	push   ebp
  41e2b6:	mov    ebp,esp
  41e2b8:	and    esp,0xfffffff8
  41e2bb:	mov    eax,DWORD PTR [ebp+0x20]
  41e2be:	sub    esp,0x14
  41e2c1:	push   ebx
  41e2c2:	mov    ebx,DWORD PTR [ebp+0x14]
  41e2c5:	push   esi
  41e2c6:	push   edi
  41e2c7:	cmp    eax,0xf89c85b9
  41e2cc:	jne    0x41e2d8
  41e2ce:	push   0xf89c85b8
  41e2d3:	jmp    0x41e40a
  41e2d8:	mov    eax,DWORD PTR [ebp+0x20]
  41e2db:	cmp    eax,0xf89c85b8
  41e2e0:	jne    0x41e2ec
  41e2e2:	push   0xf89c85bb
  41e2e7:	jmp    0x41e40a
  41e2ec:	mov    eax,DWORD PTR [ebp+0x20]
  41e2ef:	cmp    eax,0xf89c85bb
  41e2f4:	jne    0x41e300
  41e2f6:	push   0xf89c85ba
  41e2fb:	jmp    0x41e40a
  41e300:	mov    eax,DWORD PTR [ebp+0x20]
  41e303:	cmp    eax,0xf89c85ba
  41e308:	jne    0x41e314
  41e30a:	push   0xf89c85bd
  41e30f:	jmp    0x41e40a
  41e314:	mov    ecx,DWORD PTR [ebp+0x20]
  41e317:	mov    eax,0xf89c85be
  41e31c:	cmp    ecx,eax
  41e31e:	jne    0x41e3da
  41e324:	mov    eax,DWORD PTR [ebp+0x10]
  41e327:	mov    DWORD PTR [esp+0xc],eax
  41e32b:	mov    eax,DWORD PTR [ebp+0x18]
  41e32e:	mov    DWORD PTR [esp+0x14],eax
  41e332:	mov    eax,DWORD PTR [ebp+0xc]
  41e335:	mov    DWORD PTR [esp+0x18],eax
  41e339:	mov    eax,DWORD PTR [ebp+0x8]
  41e33c:	mov    DWORD PTR [esp+0x10],eax
  41e340:	mov    eax,DWORD PTR [esp+0x10]
  41e344:	mov    ecx,DWORD PTR [esp+0x14]
  41e348:	mov    edi,0x7510899
  41e34d:	xor    eax,edi
  41e34f:	mov    esi,0x3272e0
  41e354:	add    eax,esi
  41e356:	mov    DWORD PTR [ecx],eax
  41e358:	mov    eax,DWORD PTR [esp+0xc]
  41e35c:	mov    eax,DWORD PTR [eax+0x194]
  41e362:	mov    ecx,DWORD PTR [eax]
  41e364:	mov    eax,DWORD PTR [esp+0xc]
  41e368:	mov    eax,DWORD PTR [eax+0x194]
  41e36e:	mov    eax,DWORD PTR [eax]
  41e370:	add    eax,DWORD PTR [ecx+0x3c]
  41e373:	mov    ecx,DWORD PTR [esp+0xc]
  41e377:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41e37d:	mov    ecx,DWORD PTR [ecx+0x14]
  41e380:	push   0x4
  41e382:	push   0x3000
  41e387:	push   DWORD PTR [eax+0x50]
  41e38a:	push   0x0
  41e38c:	call   ecx
  41e38e:	mov    DWORD PTR [ebx],eax
  41e390:	mov    eax,DWORD PTR [esp+0x10]
  41e394:	push   DWORD PTR [esp+0xc]
  41e398:	xor    eax,edi
  41e39a:	add    eax,esi
  41e39c:	mov    DWORD PTR [esp+0x20],eax
  41e3a0:	lea    eax,[esp+0x20]
  41e3a4:	push   eax
  41e3a5:	push   ebx
  41e3a6:	push   DWORD PTR [esp+0x20]
  41e3aa:	push   DWORD PTR [esp+0x28]
  41e3ae:	push   DWORD PTR [esp+0x24]
  41e3b2:	call   0x41dd77
  41e3b7:	mov    eax,DWORD PTR [esp+0x10]
  41e3bb:	mov    ecx,DWORD PTR [ebx]
  41e3bd:	xor    eax,edi
  41e3bf:	add    eax,esi
  41e3c1:	cmp    ecx,eax
  41e3c3:	je     0x41e421
  41e3c5:	mov    eax,DWORD PTR [esp+0x18]
  41e3c9:	mov    ecx,DWORD PTR [esp+0x14]
  41e3cd:	xor    eax,edi
  41e3cf:	add    eax,esi
  41e3d1:	imul   eax,DWORD PTR [esp+0x1c]
  41e3d6:	mov    DWORD PTR [ecx],eax
  41e3d8:	jmp    0x41e421
  41e3da:	mov    ecx,DWORD PTR [ebp+0x20]
  41e3dd:	cmp    ecx,0xf89c85bd
  41e3e3:	jne    0x41e3ec
  41e3e5:	push   0xf89c85bc
  41e3ea:	jmp    0x41e40a
  41e3ec:	mov    ecx,DWORD PTR [ebp+0x20]
  41e3ef:	cmp    ecx,0xf89c85bc
  41e3f5:	jne    0x41e3fe
  41e3f7:	push   0xf89c85bf
  41e3fc:	jmp    0x41e40a
  41e3fe:	mov    ecx,DWORD PTR [ebp+0x20]
  41e401:	cmp    ecx,0xf89c85bf
  41e407:	jne    0x41e421
  41e409:	push   eax
  41e40a:	push   DWORD PTR [ebp+0x1c]
  41e40d:	push   DWORD PTR [ebp+0x18]
  41e410:	push   ebx
  41e411:	push   DWORD PTR [ebp+0x10]
  41e414:	push   DWORD PTR [ebp+0xc]
  41e417:	push   DWORD PTR [ebp+0x8]
  41e41a:	call   0x41e2b5
  41e41f:	mov    DWORD PTR [ebx],eax
  41e421:	mov    eax,DWORD PTR [ebx]
  41e423:	pop    edi
  41e424:	pop    esi
  41e425:	pop    ebx
  41e426:	mov    esp,ebp
  41e428:	pop    ebp
  41e429:	ret    0x1c
  41e42c:	push   ebp
  41e42d:	mov    ebp,esp
  41e42f:	sub    esp,0xc
  41e432:	mov    eax,0xf89c85b9
  41e437:	mov    DWORD PTR [ebp-0x8],eax
  41e43a:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  41e441:	mov    ecx,DWORD PTR [ebp-0x8]
  41e444:	xor    ecx,0x7510899
  41e44a:	add    ecx,0x3272e0
  41e450:	mov    DWORD PTR [ebp-0x4],ecx
  41e453:	mov    ecx,DWORD PTR [ebp+0xc]
  41e456:	push   eax
  41e457:	mov    DWORD PTR [ebp+0xc],ecx
  41e45a:	push   DWORD PTR [ebp+0xc]
  41e45d:	lea    eax,[ebp-0x4]
  41e460:	push   DWORD PTR [ebp+0x8]
  41e463:	push   eax
  41e464:	push   DWORD PTR [ebp+0xc]
  41e467:	push   DWORD PTR [ebp-0xc]
  41e46a:	push   DWORD PTR [ebp-0x8]
  41e46d:	call   0x41e2b5
  41e472:	mov    DWORD PTR [ebp-0x4],eax
  41e475:	mov    eax,DWORD PTR [ebp-0x4]
  41e478:	leave  
  41e479:	ret    0x8
  41e47c:	jg     0x41e432
  41e47e:	jge    0xf741a453
  41e484:	xor    BYTE PTR [ebp+0x41c916e],0xa5
  41e48b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e48c:	clc    
  41e48d:	popa   
  41e48e:	add    DWORD PTR [eax],eax
  41e490:	mov    al,BYTE PTR [edx]
  41e492:	add    BYTE PTR [eax],al
  41e494:	cld    
  41e495:	pop    esp
  41e496:	pop    esi
  41e497:	xor    al,0xe4
  41e499:	sub    BYTE PTR [ecx-0x1e2a8926],0xf1
  41e4a0:	mov    edx,0x9c73730f
  41e4a5:	pop    ebx
  41e4a6:	pop    ss
  41e4a7:	jns    0x41e43c
  41e4a9:	sbb    BYTE PTR [edx-0x14b009ff],ch
  41e4af:	repz not DWORD PTR [ebx]
  41e4b2:	das    
  41e4b3:	mov    bh,0xbb
  41e4b5:	mov    eax,ds:0xf400afcd
  41e4ba:	mov    edx,DWORD PTR [eax+0x514a0069]
  41e4c0:	xor    ebp,ecx
  41e4c2:	pop    eax
  41e4c3:	jmp    0x759a:0xe4f3febf
  41e4ca:	aad    0x4
  41e4cc:	xchg   ebx,eax
  41e4cd:	mov    al,BYTE PTR [ebp+0x2c]
  41e4d0:	dec    edi
  41e4d1:	es rol eax,0x96
  41e4d5:	mov    ebx,0xc397fccc
  41e4da:	xchg   DWORD PTR [ebp+edi*2+0x1f],ecx
  41e4de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4df:	pusha  
  41e4e0:	je     0x41e508
  41e4e2:	mov    al,0x77
  41e4e4:	dec    ebx
  41e4e5:	je     0x41e479
  41e4e7:	cmp    DWORD PTR [edi-0x13],edx
  41e4ea:	leave  
  41e4eb:	pop    es
  41e4ec:	enter  0xcf7f,0x8d
  41e4f0:	fmul   QWORD PTR [ebp+0x20c70aa9]
  41e4f6:	enter  0xa3c,0x26
  41e4fa:	cli    
  41e4fb:	dec    edx
  41e4fc:	je     0x41e56f
  41e4fe:	dec    edx
  41e4ff:	adc    BYTE PTR [eax],bl
  41e501:	outs   dx,BYTE PTR ds:[esi]
  41e502:	in     al,0x30
  41e504:	jle    0x41e511
  41e506:	retf   0xc92
  41e509:	mov    edx,0x9b42b08e
  41e50e:	push   edx
  41e50f:	add    BYTE PTR [eax-0xcae2c3a],dh
  41e515:	pop    ss
  41e516:	(bad)  
  41e517:	jns    0x41e4b7
  41e519:	lock pop ebx
  41e51b:	push   edi
  41e51c:	sar    DWORD PTR [ebx+0xc764d70],0x6e
  41e523:	jne    0x41e4d3
  41e525:	into   
  41e526:	out    dx,al
  41e527:	dec    esi
  41e528:	cmp    ebx,DWORD PTR [edx+0x1619ff58]
  41e52e:	inc    ebx
  41e52f:	pop    ss
  41e530:	stos   DWORD PTR es:[edi],eax
  41e531:	(bad)  
  41e532:	jmp    0x4bfb:0x687a93d5
  41e539:	sbb    BYTE PTR [ebx],dh
  41e53b:	lods   eax,DWORD PTR ds:[esi]
  41e53c:	dec    ecx
  41e53e:	add    ch,dh
  41e540:	mov    dl,0xa0
  41e542:	nop
  41e543:	jmp    0xb5d5:0x4e8e9b75
  41e54a:	pop    esi
  41e54b:	leave  
  41e54c:	in     al,dx
  41e54d:	mov    ah,0xd3
  41e54f:	shl    BYTE PTR ds:0x9a4531,cl
  41e555:	mov    eax,0x3c9e3638
  41e55a:	(bad)  
  41e55b:	cmp    DWORD PTR [eax-0x38],ecx
  41e55e:	xor    eax,DWORD PTR [ebp+0x20934043]
  41e564:	(bad)  
  41e565:	fs ss ret 
  41e568:	cs and edx,edx
  41e56b:	les    edx,FWORD PTR [esi+0x644daac4]
  41e571:	fs cmp eax,0x9ead83ac
  41e577:	(bad)  
  41e578:	mov    BYTE PTR [edx],bl
  41e57a:	jmp    edi
  41e57c:	je     0x41e562
  41e57e:	dec    esp
  41e57f:	rcr    ecx,0xac
  41e582:	test   eax,0x944f75f6
  41e587:	leave  
  41e588:	xor    al,0x46
  41e58a:	cmp    bl,BYTE PTR [esi+ebp*4-0x16]
  41e58e:	enter  0xf61,0x69
  41e592:	mov    al,ds:0xde188d34
  41e597:	xor    DWORD PTR [eax+esi*1],esi
  41e59a:	mov    cl,0x5a
  41e59c:	aad    0x8a
  41e59e:	ret    0x3c67
  41e5a1:	imul   BYTE PTR [ecx-0x44ea41b1]
  41e5a7:	jae    0x41e540
  41e5a9:	add    esi,DWORD PTR [edi+0x6bf0902]
  41e5af:	cs adc eax,0x96e03873
  41e5b5:	xlat   BYTE PTR ds:[ebx]
  41e5b6:	fcomp  st(2)
  41e5b8:	mov    esp,0x93faecb3
  41e5bd:	sbb    DWORD PTR [edi-0xf],esp
  41e5c0:	aaa    
  41e5c1:	stc    
  41e5c2:	xor    BYTE PTR [ecx],dh
  41e5c4:	in     eax,dx
  41e5c5:	nop
  41e5c6:	div    DWORD PTR [ecx-0x5f]
  41e5c9:	fnsetpm(287 only) 
  41e5cb:	sub    BYTE PTR [edx-0x7a],ch
  41e5ce:	xchg   ecx,eax
  41e5cf:	je     0x41e5c6
  41e5d1:	dec    ecx
  41e5d2:	xchg   edi,eax
  41e5d3:	and    BYTE PTR [ebp-0x54616761],al
  41e5d9:	aam    0xae
  41e5db:	fild   WORD PTR [eax+0x74]
  41e5de:	pushf  
  41e5df:	xor    esp,esi
  41e5e1:	xor    BYTE PTR [edi-0x228be9e],0x7b
  41e5e8:	ins    DWORD PTR es:[edi],dx
  41e5e9:	mov    fs,WORD PTR [eax+0x2c]
  41e5ec:	outs   dx,DWORD PTR ds:[esi]
  41e5ed:	cmp    DWORD PTR [ecx-0x7b],eax
  41e5f0:	inc    ebx
  41e5f1:	pop    ebp
  41e5f2:	xor    edi,ecx
  41e5f4:	lods   al,BYTE PTR ds:[esi]
  41e5f5:	sbb    DWORD PTR [ebx-0x4b],eax
  41e5f8:	(bad)  
  41e5f9:	cmp    ecx,esi
  41e5fb:	aad    0xb0
  41e5fd:	xor    ah,BYTE PTR [esi+edx*2+0x28]
  41e601:	push   ebp
  41e602:	xor    eax,0x6ca48805
  41e607:	add    al,BYTE PTR [ebx-0x4c]
  41e60a:	gs stos BYTE PTR es:[edi],al
  41e60c:	nop
  41e60d:	les    esi,FWORD PTR [esi+0x4fcb3989]
  41e613:	cli    
  41e614:	and    eax,0x90d652c7
  41e619:	jno    0x41e5ee
  41e61b:	mov    eax,ebx
  41e61d:	dec    esi
  41e61e:	mov    dh,0x32
  41e620:	sub    esi,DWORD PTR [ebx]
  41e622:	mov    al,0x11
  41e624:	into   
  41e625:	test   DWORD PTR [bp-0x3b65],edi
  41e62a:	xor    bl,0x67
  41e62d:	sahf   
  41e62e:	and    ebp,edx
  41e630:	(bad)  [edx]
  41e632:	loope  0x41e5eb
  41e634:	cmp    dl,BYTE PTR [ebp-0x1c]
  41e637:	fistp  WORD PTR [edx+0x50990e8d]
  41e63d:	sub    DWORD PTR [ebp-0x2a2133c],0xfffffff7
  41e644:	inc    ebx
  41e645:	inc    ebx
  41e646:	pop    ebx
  41e647:	outs   dx,DWORD PTR ds:[esi]
  41e648:	repz mov ds:0x83b23b56,al
  41e64e:	rol    DWORD PTR [ecx],0xae
  41e651:	xchg   edx,eax
  41e652:	dec    ebx
  41e653:	xor    al,0xcd
  41e655:	pop    esi
  41e656:	xchg   ebp,eax
  41e657:	adc    al,0xa0
  41e659:	push   esp
  41e65a:	sbb    eax,0xd91bdde0
  41e65f:	inc    esi
  41e660:	call   0x8f03:0x4d70d5c4
  41e667:	repnz sub esp,DWORD PTR [ebp+0x1d]
  41e66b:	dec    ebx
  41e66c:	cmp    esi,DWORD PTR [esi-0x67]
  41e66f:	jecxz  0x41e64c
  41e671:	xchg   esp,eax
  41e672:	jo     0x41e640
  41e674:	(bad)  
  41e675:	push   0x50
  41e677:	mov    ah,0x4c
  41e679:	jae    0x41e6bc
  41e67b:	into   
  41e67c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e67d:	into   
  41e67e:	mov    esp,DWORD PTR [ecx+0x2e8664f4]
  41e684:	mov    al,0x2f
  41e686:	xor    al,BYTE PTR [edx-0x49]
  41e689:	jne    0x41e6ff
  41e68b:	mov    BYTE PTR [ebp-0x6b8bb731],0xf
  41e692:	push   edi
  41e693:	push   0x4d7606e5
  41e698:	(bad)  
  41e699:	fs adc al,0xec
  41e69c:	adc    esi,DWORD PTR [esi]
  41e69e:	loop   0x41e67f
  41e6a0:	and    DWORD PTR [ebp-0x59],esp
  41e6a3:	xchg   ecx,eax
  41e6a4:	jge    0x41e65d
  41e6a6:	mov    ecx,0x659b34a2
  41e6ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6ac:	fidiv  WORD PTR ss:[edx+0x62]
  41e6b0:	sub    eax,0xb58fd42
  41e6b5:	and    bl,BYTE PTR [ebp+0x359f17f7]
  41e6bb:	or     edi,DWORD PTR [edx]
  41e6bd:	cs stos BYTE PTR es:[di],al
  41e6c0:	jb     0x41e643
  41e6c2:	out    0xb5,al
  41e6c4:	inc    esi
  41e6c5:	xlat   BYTE PTR ds:[ebx]
  41e6c6:	or     DWORD PTR [ebp+ebx*8-0x62],eax
  41e6ca:	adc    al,0x78
  41e6cc:	gs add bl,ch
  41e6cf:	int    0x97
  41e6d1:	sub    eax,0xeb298d43
  41e6d6:	dec    ecx
  41e6d7:	mov    ah,0xc3
  41e6d9:	sbb    BYTE PTR [eax],dh
  41e6db:	leave  
  41e6dc:	(bad)  
  41e6dd:	dec    esi
  41e6de:	fstp   st(3)
  41e6e0:	pop    eax
  41e6e1:	pop    esp
  41e6e2:	sahf   
  41e6e3:	mov    ecx,ds
  41e6e5:	pop    ecx
  41e6e6:	imul   edi,edx,0x90a2cee5
  41e6ec:	out    dx,eax
  41e6ed:	dec    BYTE PTR [ebp-0x78]
  41e6f0:	jb     0x41e6b0
  41e6f2:	mov    eax,ebx
  41e6f4:	loope  0x41e6b8
  41e6f6:	and    ecx,eax
  41e6f8:	rcr    BYTE PTR [esi+0x905a721],1
  41e6fe:	sbb    DWORD PTR ds:0xebc7b7d8,eax
  41e704:	pop    ds
  41e705:	sbb    esp,esi
  41e707:	jo     0x41e70a
  41e709:	mov    esp,0xb4655335
  41e70e:	ja     0x41e73c
  41e710:	mov    ds:0xd8a70fea,eax
  41e715:	enter  0x9dfe,0xe5
  41e719:	enter  0xb30e,0xd5
  41e71d:	mov    al,BYTE PTR [eax]
	...
  41e72b:	add    BYTE PTR [edi+0x4c],dh
  41e72e:	idiv   dh
  41e730:	(bad)  
  41e731:	(bad)  
  41e732:	jg     0x41e701
  41e734:	mov    ah,0x6b
  41e736:	mov    dh,0x14
  41e738:	aaa    
  41e739:	xchg   bl,dh
  41e73b:	push   ecx
  41e73c:	and    BYTE PTR [ecx+eax*1+0x0],0x8a
  41e741:	add    al,BYTE PTR [eax]
  41e743:	add    BYTE PTR [edi+0x2a8a2575],dl
  41e749:	mov    dh,0xbb
  41e74b:	call   DWORD PTR [ecx-0x52]
  41e74e:	mov    ebx,0x15dc3250
  41e753:	pop    edx
  41e754:	shl    ebp,1
  41e756:	outs   dx,DWORD PTR ds:[esi]
  41e757:	cmp    eax,0xcdf8b123
  41e75c:	or     DWORD PTR [esi],ebx
  41e75e:	cmp    edx,DWORD PTR [esi]
  41e760:	repz daa 
  41e762:	jge    0x41e781
  41e764:	mov    cl,0xda
  41e766:	out    dx,al
  41e767:	inc    ecx
  41e768:	cmp    al,BYTE PTR [edi]
  41e76a:	sub    BYTE PTR [edx-0x469c5c6a],ah
  41e770:	sub    al,0x3a
  41e772:	lock shr BYTE PTR [edi+edi*1],0x15
  41e777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e778:	daa    
  41e779:	dec    edx
  41e77a:	pushf  
  41e77b:	and    ebx,DWORD PTR [ebp-0x7e]
  41e77e:	mov    edx,0x16d97803
  41e783:	ret    0xd079
  41e786:	aad    0xa1
  41e788:	or     ecx,esi
  41e78a:	aaa    
  41e78b:	rcl    DWORD PTR [edi-0x55],0xa9
  41e78f:	es scas eax,DWORD PTR es:[edi]
  41e791:	and    bh,BYTE PTR ds:0xa4358008
  41e797:	jae    0x41e798
  41e799:	xor    ebx,ecx
  41e79b:	jbe    0x41e7ca
  41e79d:	push   ss
  41e79e:	jae    0x41e74e
  41e7a0:	ret    
  41e7a1:	cmp    dh,ch
  41e7a3:	mov    cl,0x6c
  41e7a5:	push   cs
  41e7a6:	pop    es
  41e7a7:	pop    ebp
  41e7a8:	les    ebp,FWORD PTR [esi+0x5b]
  41e7ab:	cwde   
  41e7ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7ad:	cli    
  41e7ae:	ja     0x41e820
  41e7b0:	jge    0x41e807
  41e7b2:	ficomp WORD PTR [eax]
  41e7b4:	mov    edi,0xafa5f076
  41e7b9:	jmp    0xb538:0x38fc8efd
  41e7c0:	lods   eax,DWORD PTR ds:[esi]
  41e7c1:	push   esp
  41e7c2:	(bad)  
  41e7c3:	xchg   esp,eax
  41e7c4:	cdq    
  41e7c5:	call   0x783810a8
  41e7ca:	js     0x41e76c
  41e7cc:	fwait
  41e7cd:	jae    0x41e7cc
  41e7cf:	push   ss
  41e7d0:	mul    ah
  41e7d2:	ret    
  41e7d3:	pushw  ds
  41e7d5:	cmc    
  41e7d6:	cmc    
  41e7d7:	popa   
  41e7d8:	cwde   
  41e7d9:	adc    esp,eax
  41e7db:	nop
  41e7dc:	call   0x390c:0x2a4825a2
  41e7e3:	and    ah,BYTE PTR [ecx+0x4cc8db89]
  41e7e9:	mov    ecx,edx
  41e7eb:	psrld  mm2,mm5
  41e7ee:	test   al,0x7f
  41e7f0:	or     DWORD PTR [edi+0x23],esi
  41e7f3:	sahf   
  41e7f4:	push   ss
  41e7f5:	bound  esp,QWORD PTR [ebx+0x1d]
  41e7f8:	xchg   esp,eax
  41e7f9:	stc    
  41e7fa:	and    bl,BYTE PTR ds:0xcc3ed171
  41e800:	(bad)  [ebp-0x3]
  41e803:	das    
  41e804:	add    cl,bl
  41e806:	adc    al,0x5
  41e808:	sbb    DWORD PTR [ecx+esi*8-0x75c7cdac],0xffffffd4
  41e810:	sub    al,0x58
  41e812:	ja     0x41e87f
  41e814:	mov    ecx,0xc6f5f878
  41e819:	mov    edx,ds
  41e81b:	sbb    bl,BYTE PTR [ebx-0x74]
  41e81e:	and    eax,0x9a45003f
  41e823:	pop    edi
  41e824:	dec    esp
  41e825:	std    
  41e826:	xchg   ecx,eax
  41e827:	add    DWORD PTR [eax-0x64b0a032],eax
  41e82d:	pusha  
  41e82e:	xor    al,0x1c
  41e830:	pop    esi
  41e831:	mov    eax,ds:0x85b534fe
  41e836:	(bad)  
  41e838:	sbb    BYTE PTR [ecx+esi*1-0x79459b18],0x7a
  41e840:	repz mov eax,0x2ff196ed
  41e846:	sub    al,0x7c
  41e848:	pop    ds
  41e849:	mov    ebx,0xc8136507
  41e84e:	ficom  WORD PTR ds:0xe0f84a31
  41e854:	aam    0x72
  41e856:	add    cl,BYTE PTR [eax-0x51c705e2]
  41e85c:	sti    
  41e85d:	or     edi,DWORD PTR [esi+ebx*1+0x4d]
  41e861:	cwde   
  41e862:	cmp    al,0x47
  41e864:	pop    eax
  41e865:	sbb    cl,BYTE PTR [edi-0x46caa4b6]
  41e86b:	push   ecx
  41e86c:	pop    esp
  41e86d:	push   0x4
  41e86f:	clc    
  41e870:	xor    dl,BYTE PTR [edx]
  41e872:	(bad)  
  41e873:	adc    eax,0xe0af587d
  41e878:	inc    ecx
  41e879:	mov    dl,BYTE PTR [eax]
  41e87b:	and    dl,bl
  41e87d:	dec    edx
  41e87e:	sbb    bl,al
  41e880:	jmp    0xb0e1c07c
  41e885:	shl    BYTE PTR [eax-0x7c],0xc4
  41e889:	std    
  41e88a:	jns    0x41e879
  41e88c:	mov    ecx,DWORD PTR [edi]
  41e88e:	test   ebx,ebp
  41e890:	sti    
  41e891:	(bad)  
  41e892:	cmp    esp,DWORD PTR ds:0xcd814fb6
  41e898:	imul   ecx,DWORD PTR [ebx],0x63
  41e89b:	jl     0x41e823
  41e89d:	lea    esi,[edx+0x4cdb42f6]
  41e8a3:	push   es
  41e8a4:	xchg   ecx,eax
  41e8a5:	mov    ebx,DWORD PTR [ebx+ebx*4]
  41e8a8:	scas   al,BYTE PTR es:[edi]
  41e8a9:	pusha  
  41e8aa:	inc    esp
  41e8ab:	cdq    
  41e8ac:	mov    bl,0x35
  41e8ae:	pop    ss
  41e8af:	dec    esi
  41e8b0:	inc    esp
  41e8b1:	cmp    edi,esp
  41e8b3:	adc    BYTE PTR [edi],al
  41e8b5:	mov    ebp,0x1fa14959
  41e8ba:	es sbb ah,al
  41e8bd:	inc    edi
  41e8be:	ins    DWORD PTR es:[edi],dx
  41e8bf:	push   ecx
  41e8c0:	xor    edi,DWORD PTR [ebx-0x1784920b]
  41e8c6:	push   0xb9acb407
  41e8cb:	in     al,0xb8
  41e8cd:	jl     0x41e917
  41e8cf:	adc    al,0xc2
  41e8d1:	jg     0x41e86a
  41e8d3:	stos   DWORD PTR es:[edi],eax
  41e8d4:	idiv   DWORD PTR [eax]
  41e8d6:	ins    BYTE PTR es:[edi],dx
  41e8d7:	iret   
  41e8d8:	int3   
  41e8d9:	mov    WORD PTR [ebx],gs
  41e8db:	hlt    
  41e8dc:	lea    edx,[eax]
  41e8de:	mov    ?,WORD PTR [esi-0x34]
  41e8e1:	push   edx
  41e8e2:	into   
  41e8e3:	das    
  41e8e4:	inc    esi
  41e8e5:	rcr    BYTE PTR [edx+0x20],0x97
  41e8e9:	(bad)  [edx+esi*8+0x67]
  41e8ed:	(bad)  
  41e8ee:	retf   
  41e8ef:	xchg   ebp,eax
  41e8f0:	das    
  41e8f1:	fimul  DWORD PTR [edx+0x70]
  41e8f4:	aas    
  41e8f5:	test   eax,0xe30896b2
  41e8fa:	fbstp  TBYTE PTR [esi+esi*1+0x7f]
  41e8fe:	adc    al,0x69
  41e900:	and    BYTE PTR [ecx+edi*1+0x5d],dh
  41e904:	inc    eax
  41e905:	mov    WORD PTR [edi+0x61],?
  41e908:	cmp    BYTE PTR [esi+0x5bc793e8],0x76
  41e90f:	mov    ch,0xf5
  41e911:	fidivr DWORD PTR [ebx-0x1d]
  41e914:	push   0xffffffa6
  41e916:	sub    DWORD PTR [ecx-0x39ec05a0],esp
  41e91c:	adc    ch,BYTE PTR [ecx-0x358f26eb]
  41e922:	fldl2t 
  41e924:	mov    al,ds:0xc95b716a
  41e929:	repnz mov ebx,DWORD PTR ds:0x86a8092a
  41e930:	loopne 0x41e8d8
  41e932:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e933:	and    al,0x63
  41e935:	mov    dl,0xba
  41e937:	dec    ebp
  41e938:	pop    es
  41e939:	cmp    DWORD PTR [edi],ebp
  41e93b:	xchg   ecx,eax
  41e93c:	jge    0x41e953
  41e93e:	outs   dx,DWORD PTR ds:[esi]
  41e93f:	xlat   BYTE PTR ds:[ebx]
  41e940:	stos   BYTE PTR es:[edi],al
  41e941:	and    ebx,DWORD PTR [edx]
  41e943:	pushf  
  41e944:	sub    BYTE PTR ss:[ebp-0x1],dh
  41e948:	imul   ax,ax,0xff8f
  41e94c:	lods   eax,DWORD PTR ds:[esi]
  41e94d:	retf   
  41e94e:	or     ecx,DWORD PTR [eax+0x278cb5b6]
  41e954:	fcom   QWORD PTR [edx]
  41e956:	sbb    al,0x54
  41e958:	inc    esp
  41e959:	pop    edi
  41e95a:	sti    
  41e95b:	es jge 0x41e933
  41e95e:	retf   0x5c91
  41e961:	xchg   esp,eax
  41e962:	fld    QWORD PTR [eax-0x7b]
  41e965:	xlat   BYTE PTR ds:[ebx]
  41e966:	cli    
  41e967:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e968:	inc    edx
  41e969:	mov    ecx,0x74026c26
  41e96e:	loop   0x41e913
  41e970:	add    al,BYTE PTR [edi-0x53]
  41e973:	(bad)  
  41e974:	out    dx,eax
  41e975:	sbb    esp,eax
  41e977:	jp     0x41e93e
  41e979:	pop    edi
  41e97a:	xor    al,0x7b
  41e97c:	in     al,0xa5
  41e97e:	jg     0x41e9c4
  41e980:	in     eax,0x49
  41e982:	xor    al,0x36
  41e984:	inc    ebp
  41e985:	mov    bl,0x87
  41e987:	fdiv   DWORD PTR [ebp-0x57]
  41e98a:	jne    0x41e9f3
  41e98c:	jns    0x41e98c
  41e98e:	sub    bl,BYTE PTR [eax]
  41e990:	icebp  
  41e991:	jecxz  0x41e99e
  41e993:	std    
  41e994:	call   0xc69f0227
  41e999:	inc    ebx
  41e99a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e99b:	ins    DWORD PTR es:[edi],dx
  41e99c:	(bad)  
  41e99d:	aad    0xc1
  41e99f:	cmp    edx,edi
  41e9a1:	int3   
  41e9a2:	ret    
  41e9a3:	dec    edi
  41e9a4:	add    DWORD PTR [edx-0x1b],esi
  41e9a7:	ins    DWORD PTR es:[edi],dx
  41e9a8:	mov    esi,0x3797321c
  41e9ad:	push   0x2abe05f9
  41e9b2:	jno    0x41e985
  41e9b4:	jmp    0xd360:0x6410cf99
  41e9bb:	jg     0x41ea2d
  41e9bd:	sub    ebx,DWORD PTR [esi+ecx*2]
  41e9c0:	ror    BYTE PTR [ebp-0x1460a0d1],cl
  41e9c6:	mov    ebx,0x179ad798
  41e9cb:	rcr    DWORD PTR [eax-0x47],0x0
	...
  41e9db:	add    BYTE PTR [edi],al
  41e9dd:	sbb    cl,BYTE PTR [ecx-0x686462e6]
  41e9e3:	pop    ds
  41e9e4:	xchg   BYTE PTR [ebx],bl
  41e9e6:	mov    edx,0xb1b642d0
  41e9eb:	mov    cs,WORD PTR [edi+eiz*2]
  41e9ee:	add    DWORD PTR [eax],eax
  41e9f0:	mov    al,BYTE PTR [edx]
  41e9f2:	add    BYTE PTR [eax],al
  41e9f4:	dec    ebx
  41e9f5:	xlat   BYTE PTR ds:[ebx]
  41e9f6:	hlt    
  41e9f7:	or     BYTE PTR ds:0x31e058f5,bh
  41e9fd:	jo     0x41e9bd
  41e9ff:	mov    ebx,0xd759337a
  41ea04:	cmovne edx,DWORD PTR [ecx-0xf64a6c9]
  41ea0b:	stos   DWORD PTR es:[edi],eax
  41ea0c:	dec    eax
  41ea0d:	in     eax,0xa3
  41ea0f:	ss sahf 
  41ea11:	leave  
  41ea12:	inc    edx
  41ea13:	adc    DWORD PTR [ecx],ebp
  41ea15:	or     esp,esp
  41ea17:	aas    
  41ea18:	lahf   
  41ea19:	push   esi
  41ea1a:	mov    eax,fs
  41ea1c:	push   eax
  41ea1d:	mov    ds:0xe80cf5fa,al
  41ea22:	mov    ch,BYTE PTR [edi-0x2846d3b]
  41ea28:	ret    
  41ea29:	outs   dx,DWORD PTR ds:[esi]
  41ea2a:	imul   edx,DWORD PTR [ebp+esi*2+0x809b32d],0x6924a5c8
  41ea35:	jbe    0x41e9c8
  41ea37:	std    
  41ea38:	push   0x74
  41ea3a:	push   edi
  41ea3b:	mov    ds:0x5d8cc0f5,eax
  41ea40:	das    
  41ea41:	fld    DWORD PTR [eax+0x7114dccf]
  41ea47:	out    dx,ax
  41ea49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea4a:	data16 cli 
  41ea4c:	add    eax,0x70a5c457
  41ea51:	(bad)  
  41ea52:	js     0x41ea94
  41ea54:	stc    
  41ea55:	fadd   DWORD PTR [eax]
  41ea57:	inc    esp
  41ea58:	cld    
  41ea59:	neg    BYTE PTR [eax+0x7312ae39]
  41ea5f:	enter  0x89de,0x5b
  41ea63:	aad    0x41
  41ea65:	jg     0x41e9fc
  41ea67:	jle    0x41ead3
  41ea69:	sub    ch,BYTE PTR [ecx+0x39]
  41ea6c:	cwde   
  41ea6d:	(bad)  
  41ea6f:	test   al,0xfe
  41ea71:	(bad)  
  41ea72:	retf   0x55b7
  41ea75:	stos   DWORD PTR es:[edi],eax
  41ea76:	mov    BYTE PTR [edi+edx*1-0x673ae1de],cl
  41ea7d:	add    al,bh
  41ea7f:	add    DWORD PTR [ebx],ecx
  41ea81:	dec    ebx
  41ea82:	xchg   edx,eax
  41ea83:	inc    esp
  41ea84:	xchg   esi,eax
  41ea85:	xor    BYTE PTR [edx+0x77],dl
  41ea88:	jp     0x41ea94
  41ea8a:	or     ebx,DWORD PTR [edx-0x2db4fdb6]
  41ea90:	jne    0x41ea5c
  41ea92:	ja     0x41eb0e
  41ea94:	scas   al,BYTE PTR es:[edi]
  41ea95:	idiv   BYTE PTR [ebp+0x41ddd176]
  41ea9b:	loopne 0x41eaa9
  41ea9d:	push   ss
  41ea9e:	addr16 sbb eax,0xe57a5fa5
  41eaa4:	jmp    0x9b3f:0x3d542e16
  41eaab:	xor    eax,DWORD PTR [ebx]
  41eaad:	sbb    DWORD PTR ss:[eax-0x129e8eb6],edi
  41eab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eab5:	cvtps2pi mm2,QWORD PTR [ecx]
  41eab8:	loop   0x41eb0d
  41eaba:	dec    ebx
  41eabb:	sub    esi,eax
  41eabd:	dec    edi
  41eabe:	mov    esi,0x6f88cd72
  41eac3:	xor    al,0xa6
  41eac5:	sbb    bl,BYTE PTR ds:0x8dd03c19
  41eacb:	push   esi
  41eacc:	sbb    esi,DWORD PTR [ebx-0x28]
  41eacf:	pop    ds
  41ead0:	retf   
  41ead1:	in     al,dx
  41ead2:	sub    ecx,DWORD PTR [edx]
  41ead4:	mov    edi,0xdca671cf
  41ead9:	ins    DWORD PTR es:[edi],dx
  41eada:	call   0x3027:0xbb248a84
  41eae1:	jbe    0x41eb0f
  41eae3:	add    BYTE PTR [esi],dh
  41eae5:	push   0x6c820f33
  41eaea:	scas   al,BYTE PTR es:[edi]
  41eaeb:	inc    eax
  41eaec:	jb     0x41eaf0
  41eaee:	loope  0x41eb22
  41eaf0:	xlat   BYTE PTR ds:[ebx]
  41eaf1:	add    al,0xc4
  41eaf3:	mov    cl,0x7f
  41eaf5:	cmp    ecx,DWORD PTR [ebx+eiz*2+0x308f285b]
  41eafc:	jge    0x41eb24
  41eafe:	or     eax,0xbbb78b39
  41eb03:	push   cs
  41eb04:	dec    ebx
  41eb05:	cmp    eax,0x736d3a2
  41eb0a:	dec    esi
  41eb0b:	jno    0x41eac7
  41eb0d:	leave  
  41eb0e:	cli    
  41eb0f:	jae    0x41eac0
  41eb11:	jp     0x41eb16
  41eb13:	cmp    BYTE PTR [esi+0x3fb7b251],0x4e
  41eb1a:	div    BYTE PTR ds:0x3ff8a317
  41eb20:	daa    
  41eb21:	test   al,0xe9
  41eb23:	dec    eax
  41eb24:	mov    bh,0x7d
  41eb26:	xor    BYTE PTR [ecx+0xf],ch
  41eb29:	(bad)  
  41eb2a:	or     dl,BYTE PTR [ebx-0x2f]
  41eb2d:	xchg   edi,eax
  41eb2e:	sbb    al,0xc0
  41eb30:	mov    BYTE PTR [ecx-0x39],bh
  41eb33:	push   ecx
  41eb34:	sbb    bl,BYTE PTR [edi]
  41eb36:	shl    DWORD PTR ds:0xfe0b6b25,0x6b
  41eb3d:	test   eax,0x2079a4c8
  41eb42:	mov    fs,WORD PTR [esi-0x1]
  41eb45:	jmp    0x60c350fd
  41eb4a:	xor    DWORD PTR [edx+edx*2+0x5a8fc9e],0xffffffdc
  41eb52:	mul    DWORD PTR fs:[ecx]
  41eb55:	push   ebx
  41eb56:	jb     0x41eb5e
  41eb58:	push   0x17149f82
  41eb5d:	jg     0x41eb15
  41eb5f:	jp     0x41eb47
  41eb61:	jp     0x41eba1
  41eb63:	mov    bl,0xb4
  41eb65:	data16 outs dx,BYTE PTR ds:[esi]
  41eb67:	push   ebp
  41eb68:	call   0x3e7a:0x8aedc76a
  41eb6f:	jmp    0xa330:0x4d8ecccd
  41eb76:	lods   eax,DWORD PTR ds:[esi]
  41eb77:	jle    0x41eb35
  41eb79:	aaa    
  41eb7a:	cmp    BYTE PTR [ecx],bh
  41eb7c:	sahf   
  41eb7d:	jmp    0x41eb74
  41eb7f:	or     bh,dl
  41eb81:	scas   eax,DWORD PTR es:[edi]
  41eb82:	lahf   
  41eb83:	lahf   
  41eb84:	ja     0x41ebde
  41eb86:	js     0x41ebd1
  41eb88:	xchg   BYTE PTR [ebx-0x67],bh
  41eb8b:	ficomp DWORD PTR [ebp+0x54]
  41eb8e:	ffree  st(2)
  41eb90:	jp     0x41eb93
  41eb92:	jmp    0x41eb94
  41eb94:	pop    edi
  41eb95:	pushf  
  41eb96:	jecxz  0x41ebe6
  41eb98:	fcom   DWORD PTR [ecx+0x5d]
  41eb9b:	add    eax,0x7ea821f3
  41eba0:	or     ebx,DWORD PTR [ecx+0x7ff04fed]
  41eba6:	fld    QWORD PTR [esi]
  41eba8:	and    ebp,0x12ebeb65
  41ebae:	and    esp,ecx
  41ebb0:	or     bh,dl
  41ebb2:	xor    cl,BYTE PTR [ecx-0x78]
  41ebb5:	push   edi
  41ebb6:	inc    edx
  41ebb7:	fimul  DWORD PTR [edx+0x15550686]
  41ebbd:	sti    
  41ebbe:	mov    edx,DWORD PTR [edx-0x12]
  41ebc1:	fistp  QWORD PTR [esi-0x2fad3cf7]
  41ebc7:	ret    
  41ebc8:	ret    0xc804
  41ebcb:	pop    edx
  41ebcc:	outs   dx,DWORD PTR ds:[esi]
  41ebcd:	mov    ah,BYTE PTR [esi]
  41ebcf:	shr    ch,cl
  41ebd1:	stos   BYTE PTR es:[edi],al
  41ebd2:	sub    DWORD PTR [ebx-0x3e63c77d],ecx
  41ebd8:	test   ebx,0x12d67f66
  41ebde:	or     ecx,DWORD PTR [edi+ecx*2]
  41ebe1:	adc    bh,BYTE PTR [ebx-0x3e]
  41ebe4:	nop
  41ebe5:	ficom  WORD PTR [ebx]
  41ebe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebe8:	mov    eax,ds:0x4e53ebc0
  41ebed:	mov    ebp,0x8d0f0a9a
  41ebf2:	and    dl,BYTE PTR [edi]
  41ebf4:	repnz in eax,0x5d
  41ebf7:	arpl   WORD PTR [edi+0x39],cx
  41ebfa:	push   eax
  41ebfb:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41ebfd:	arpl   dx,dx
  41ebff:	iret   
  41ec00:	in     eax,dx
  41ec01:	test   eax,0x58d871a2
  41ec06:	loopne 0x41ebbd
  41ec08:	div    DWORD PTR [edx-0x2f]
  41ec0b:	and    eax,0xd2107693
  41ec10:	shl    BYTE PTR [eax-0x6637e21],cl
  41ec16:	fldcw  WORD PTR [eax]
  41ec18:	cmp    bl,BYTE PTR [ecx-0x44]
  41ec1b:	fs mov cl,0xa9
  41ec1e:	loope  0x41ec47
  41ec20:	push   ds
  41ec21:	pop    es
  41ec22:	loopne 0x41ec18
  41ec24:	xor    eax,DWORD PTR [ecx+esi*4+0x5a0b53fa]
  41ec2b:	add    al,0x40
  41ec2d:	jmp    0x41ec36
  41ec2f:	mov    esi,0x8c7e0ec7
  41ec34:	and    cl,ah
  41ec36:	dec    edx
  41ec37:	lock call 0x9c9:0xf85d9abd
  41ec3f:	push   edx
  41ec40:	arpl   WORD PTR ds:0xbf99a700,si
  41ec46:	mov    edi,0xfce48865
  41ec4b:	and    al,0x14
  41ec4d:	test   BYTE PTR [ebx],dh
  41ec4f:	out    0x61,eax
  41ec51:	les    esp,FWORD PTR [esp+esi*2-0x63]
  41ec55:	push   ecx
  41ec56:	shl    BYTE PTR [ecx-0x406a3e22],cl
  41ec5c:	pop    esp
  41ec5d:	lea    edi,[esi+0x51]
  41ec60:	rcr    DWORD PTR [ebx-0x19],0xdc
  41ec64:	int    0x6f
  41ec66:	sbb    BYTE PTR [edx+0x63],ah
  41ec69:	lock pop ecx
  41ec6b:	ficom  DWORD PTR [ecx-0x1a]
  41ec6e:	aad    0x42
  41ec70:	or     eax,0x97d07217
  41ec75:	icebp  
  41ec76:	shl    ecx,0xcc
  41ec79:	inc    ebx
  41ec7a:	ins    DWORD PTR es:[edi],dx
  41ec7b:	jecxz  0x41ecc1
  41ec7d:	rol    DWORD PTR [eax],cl
	...
  41ec8b:	add    BYTE PTR [esi],bl
  41ec8d:	add    al,0xa7
  41ec8f:	(bad)  
  41ec90:	mov    edi,0xf6dd7ee7
  41ec95:	jp     0x41ec60
  41ec97:	push   esi
  41ec98:	cdq    
  41ec99:	xor    DWORD PTR [ecx+0x1b],0x16996
  41eca0:	mov    al,BYTE PTR [edx]
  41eca2:	add    BYTE PTR [eax],al
  41eca4:	and    bh,BYTE PTR [edi+ecx*2-0x6c]
  41eca8:	out    0x4d,eax
  41ecaa:	rcl    eax,cl
  41ecac:	pop    esp
  41ecad:	bnd jns 0x41ecaf
  41ecb0:	popf   
  41ecb1:	xor    eax,0xf8ee68e0
  41ecb6:	sbb    esi,0xffffffea
  41ecb9:	loopne 0x41ec9e
  41ecbb:	jge    0x41ecba
  41ecbd:	neg    DWORD PTR [esi+0x5c]
  41ecc0:	je     0x41ec9c
  41ecc2:	jecxz  0x41ecb7
  41ecc4:	test   eax,0x93407558
  41ecc9:	inc    ebx
  41ecca:	int    0xf7
  41eccc:	add    eax,0xc359bfc8
  41ecd1:	mov    ds:0x4a5c90d4,eax
  41ecd6:	mov    bl,0xca
  41ecd8:	sub    ah,BYTE PTR [ebx-0x7fb6936]
  41ecde:	adc    dh,0xff
  41ece1:	push   esi
  41ece2:	loope  0x41ecf9
  41ece4:	sub    eax,0xa394c8bd
  41ece9:	dec    edi
  41ecea:	outs   dx,DWORD PTR ds:[esi]
  41eceb:	jmp    0x4a8e:0xdd0e242a
  41ecf2:	sbb    esi,DWORD PTR [ebx-0x3c]
  41ecf5:	cmp    ecx,eax
  41ecf7:	sbb    eax,0x8d3c74be
  41ecfc:	add    cl,BYTE PTR [edx+0x59e55122]
  41ed02:	in     al,0xef
  41ed04:	test   DWORD PTR [edx-0x85c4809],ebp
  41ed0a:	xor    DWORD PTR [esi-0x5555629a],0xffffff8f
  41ed11:	inc    eax
  41ed12:	cmp    esp,edi
  41ed14:	jle    0x41ecb8
  41ed16:	out    dx,al
  41ed17:	sti    
  41ed18:	pop    ss
  41ed19:	loopne 0x41ed73
  41ed1b:	fs (bad) 
  41ed1d:	push   0xffffff87
  41ed1f:	fiadd  WORD PTR [eax]
  41ed21:	cdq    
  41ed22:	add    eax,0x40827feb
  41ed27:	test   eax,0xab3b3301
  41ed2c:	ins    DWORD PTR es:[edi],dx
  41ed2d:	or     al,0xb8
  41ed2f:	add    al,0x5
  41ed31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed32:	(bad)  
  41ed33:	sbb    BYTE PTR [esi+0x13],dl
  41ed36:	sub    bh,BYTE PTR [ecx+0xc]
  41ed39:	aaa    
  41ed3a:	(bad)  [edx-0x2d]
  41ed3d:	cwde   
  41ed3e:	xlat   BYTE PTR ds:[ebx]
  41ed3f:	ss pop es
  41ed41:	mov    al,ds:0x7e4f04ca
  41ed46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed47:	in     al,dx
  41ed48:	or     bh,BYTE PTR [edx-0xf]
  41ed4b:	test   al,0xe
  41ed4d:	xchg   ecx,eax
  41ed4e:	mov    edi,DWORD PTR [ebx]
  41ed50:	mov    ds:0xa6ba5060,al
  41ed55:	or     ebx,0x6a
  41ed58:	int    0xd2
  41ed5a:	data16 fsubr st(3),st
  41ed5d:	scas   eax,DWORD PTR es:[edi]
  41ed5e:	shr    BYTE PTR [edi+0x5d],0xd4
  41ed62:	(bad)  
  41ed63:	push   esp
  41ed64:	jp     0x41edd4
  41ed66:	ds jae 0x41ed4b
  41ed69:	repz sub al,0xad
  41ed6c:	sub    al,0x73
  41ed6e:	xor    al,BYTE PTR [esi+0x1e0d7ca9]
  41ed74:	out    0x69,al
  41ed76:	inc    ebp
  41ed77:	sub    ebx,DWORD PTR [eax]
  41ed79:	popfw  
  41ed7b:	das    
  41ed7c:	scas   eax,DWORD PTR es:[edi]
  41ed7d:	clc    
  41ed7e:	imul   ebp,DWORD PTR [eax],0x54e995a4
  41ed84:	data16 sahf 
  41ed86:	push   ecx
  41ed87:	pop    esp
  41ed88:	mov    bh,0x13
  41ed8a:	adc    DWORD PTR [esi-0x5a],esp
  41ed8d:	push   0xcdf7fe4c
  41ed92:	adc    al,0xc
  41ed94:	mov    eax,edx
  41ed96:	jbe    0x41ee0f
  41ed98:	clc    
  41ed99:	cmp    eax,0xa1c65e43
  41ed9e:	and    DWORD PTR [esi+0x73],edx
  41eda1:	cmp    eax,0x9ce4eae9
  41eda6:	dec    edi
  41eda7:	test   al,0xd8
  41eda9:	push   edx
  41edaa:	sbb    cl,bh
  41edac:	nop
  41edad:	mov    ds:0x2254b5a0,eax
  41edb2:	and    esi,ecx
  41edb4:	mov    cl,0x6d
  41edb6:	aam    0x64
  41edb8:	and    BYTE PTR [ebp-0x39],0xdc
  41edbc:	nop
  41edbd:	iret   
  41edbe:	nop
  41edbf:	sbb    ch,BYTE PTR [esi+0x67f61166]
  41edc5:	sub    BYTE PTR [edi+0x76],cl
  41edc8:	mov    ecx,0x1a703d15
  41edcd:	sahf   
  41edce:	pop    ebp
  41edcf:	loopne 0x41ed68
  41edd1:	add    eax,0x13b6a70c
  41edd6:	out    0x9,eax
  41edd8:	mov    eax,ds:0x66c7e560
  41eddd:	out    dx,eax
  41edde:	mov    bh,0xac
  41ede0:	cmp    eax,0xf2690384
  41ede5:	xchg   DWORD PTR [ecx+0x64],esp
  41ede8:	jge    0x41eda1
  41edea:	pop    esp
  41edeb:	pop    es
  41edec:	inc    ebp
  41eded:	mov    DWORD PTR [ecx-0x46],edi
  41edf0:	mov    edi,0x897c3c4c
  41edf5:	das    
  41edf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edf7:	pushf  
  41edf8:	pop    ss
  41edf9:	sub    DWORD PTR [edx-0xc],esp
  41edfc:	xlat   BYTE PTR ds:[ebx]
  41edfd:	or     ebx,DWORD PTR [ecx+ebx*4+0xf]
  41ee01:	push   cs
  41ee02:	pop    esi
  41ee03:	inc    eax
  41ee04:	test   BYTE PTR [edx+0x77],ah
  41ee07:	dec    ebx
  41ee08:	sbb    ah,BYTE PTR [edx-0x4]
  41ee0b:	mov    BYTE PTR [eax+ebp*4-0x3fd2f3ea],0xa2
  41ee13:	(bad)  
  41ee15:	jle    0x41ee56
  41ee17:	mov    ebp,0xb0c9a73e
  41ee1c:	dec    eax
  41ee1d:	leave  
  41ee1e:	cld    
  41ee1f:	jbe    0x41ee5d
  41ee21:	and    al,0x33
  41ee23:	sbb    BYTE PTR [edx+0x4],dl
  41ee26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee27:	(bad)  
  41ee28:	pop    edi
  41ee29:	jno    0x41edbe
  41ee2b:	hlt    
  41ee2c:	mov    edx,0x855b4b2a
  41ee31:	add    DWORD PTR [eax],ebp
  41ee33:	mov    al,0xfa
  41ee35:	mov    ch,0xbc
  41ee37:	repz sbb esp,0x14
  41ee3b:	dec    edx
  41ee3c:	call   0xbd06:0xc1d2f60
  41ee43:	pop    eax
  41ee44:	sbb    al,0x68
  41ee46:	adc    al,0x6b
  41ee48:	(bad)  [edx+0x2d995252]
  41ee4e:	jp     0x41eeac
  41ee50:	pop    ds
  41ee51:	mov    DWORD PTR [edx],ebp
  41ee53:	and    sp,si
  41ee56:	add    edi,esp
  41ee58:	into   
  41ee59:	sub    al,0x9b
  41ee5b:	dec    esp
  41ee5c:	xor    eax,0x7c83fc0
  41ee61:	xlat   BYTE PTR ds:[ebx]
  41ee62:	lock retf 
  41ee64:	ss cli 
  41ee66:	dec    esp
  41ee67:	pop    ebx
  41ee68:	outs   dx,BYTE PTR ds:[esi]
  41ee69:	pop    es
  41ee6a:	mov    DWORD PTR [ecx-0x3f],eax
  41ee6d:	test   dh,bl
  41ee6f:	aaa    
  41ee70:	sahf   
  41ee71:	add    eax,0xf29be42
  41ee76:	sbb    ebp,DWORD PTR [esp+esi*4]
  41ee79:	fbstp  TBYTE PTR [eax]
  41ee7b:	enter  0xd088,0x4f
  41ee7f:	ret    
  41ee80:	sbb    DWORD PTR [esi],edi
  41ee82:	jo     0x41ee7a
  41ee84:	jae    0x41ee68
  41ee86:	fwait
  41ee87:	lea    esi,[edx]
  41ee89:	inc    edi
  41ee8a:	mov    al,ds:0xaab42bec
  41ee8f:	mov    ds:0x1897129c,eax
  41ee94:	xchg   DWORD PTR ds:[ebx],eax
  41ee97:	rol    BYTE PTR [esi],1
  41ee99:	inc    DWORD PTR [edi]
  41ee9b:	shl    dl,0xf7
  41ee9e:	mov    ebp,0x4cb5b4a5
  41eea3:	scas   eax,DWORD PTR es:[edi]
  41eea4:	ret    0x6e3d
  41eea7:	cmp    DWORD PTR [edx-0x72d4b547],ebx
  41eead:	jmp    0x41ee5a
  41eeaf:	xchg   ah,bl
  41eeb1:	(bad)  
  41eeb3:	xor    esp,DWORD PTR [edi-0x551866a1]
  41eeb9:	mov    ds:0x5a017d30,al
  41eebe:	xchg   esp,eax
  41eebf:	xor    bl,bl
  41eec1:	mov    bl,0x65
  41eec3:	add    BYTE PTR [eax],0xb0
  41eec6:	and    bl,al
  41eec8:	dec    ecx
  41eec9:	outs   dx,BYTE PTR ds:[esi]
  41eeca:	inc    ebp
  41eecb:	add    BYTE PTR [ebp+0x30],ah
  41eece:	hlt    
  41eecf:	or     BYTE PTR [ecx+0x2a15a25f],ah
  41eed5:	in     eax,0x83
  41eed7:	inc    ecx
  41eed8:	loopne 0x41ef4a
  41eeda:	sbb    DWORD PTR [edi],esp
  41eedc:	add    bl,0x36
  41eedf:	mov    edx,0x53c289de
  41eee4:	cwde   
  41eee5:	cmp    al,0xf5
  41eee7:	push   edi
  41eee8:	cmp    al,0xa4
  41eeea:	stc    
  41eeeb:	fdivrp st(7),st
  41eeee:	jl     0x41eeb8
  41eef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eef1:	sub    BYTE PTR [esi],cl
  41eef3:	xchg   BYTE PTR [esp+ebp*2-0x3b6e703],dh
  41eefa:	jl     0x41ef6b
  41eefc:	mov    cl,0x78
  41eefe:	jb     0x41ef47
  41ef00:	and    edi,0x291631f7
  41ef06:	dec    ebp
  41ef07:	mov    dl,0xeb
  41ef09:	pop    eax
  41ef0a:	inc    esi
  41ef0b:	iret   
  41ef0c:	xor    ah,0x22
  41ef0f:	scas   eax,DWORD PTR es:[edi]
  41ef10:	out    0xbb,al
  41ef12:	xchg   edi,eax
  41ef13:	mov    esp,0x14bfacc9
  41ef18:	icebp  
  41ef19:	or     BYTE PTR [ecx],cl
  41ef1b:	sub    eax,0x9742ea29
  41ef20:	ins    DWORD PTR es:[edi],dx
  41ef21:	sub    edi,DWORD PTR [edi+edx*2+0x13]
  41ef25:	test   al,0xa2
  41ef27:	data16 mov dl,0xe8
  41ef2a:	rcl    BYTE PTR [ecx+0x19cc],0x0
	...
  41ef39:	add    BYTE PTR [eax],al
  41ef3b:	add    BYTE PTR [eax-0x77],bh
  41ef3e:	hlt    
  41ef3f:	mov    al,0xf5
  41ef41:	std    
  41ef42:	jl     0x41ef0d
  41ef44:	dec    edi
  41ef45:	pop    ds
  41ef46:	cmp    DWORD PTR [ebx+0x3c],ebp
  41ef49:	call   0x6c62aba3
  41ef4e:	add    DWORD PTR [eax],eax
  41ef50:	mov    al,BYTE PTR [edx]
  41ef52:	add    BYTE PTR [eax],al
  41ef54:	mov    ch,ch
  41ef56:	jne    0x41ef5f
  41ef58:	addr16 std 
  41ef5a:	add    BYTE PTR [esi+0x1f],cl
  41ef5d:	les    edi,FWORD PTR [ecx+eiz*1-0x13747410]
  41ef64:	lock hlt 
  41ef66:	es pop eax
  41ef68:	mov    fs:0xa17b53da,al
  41ef6e:	push   eax
  41ef6f:	ficom  WORD PTR [ebp+0xa]
  41ef72:	add    DWORD PTR [eax],esi
  41ef74:	pop    ecx
  41ef75:	rcr    bl,1
  41ef77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef78:	dec    ebp
  41ef79:	test   bh,dl
  41ef7b:	aaa    
  41ef7c:	mov    eax,ds:0x48c7f414
  41ef81:	jae    0x41ef6d
  41ef83:	pop    esp
  41ef84:	pop    ss
  41ef85:	cs inc DWORD PTR gs:[ebp+0x45]
  41ef8a:	pop    ss
  41ef8b:	std    
  41ef8c:	rol    BYTE PTR [eax+0x86b9a72],0x70
  41ef93:	lock lds ecx,FWORD PTR [ebx+0x7e]
  41ef97:	enter  0xd0d4,0xd2
  41ef9b:	retf   0xa21
  41ef9e:	xchg   esp,eax
  41ef9f:	and    eax,0xfe536590
  41efa4:	imul   edx,DWORD PTR [edi-0x6f3b0275],0x44
  41efab:	mov    al,0x36
  41efad:	xchg   BYTE PTR [edx+esi*4],dh
  41efb0:	mov    ch,0x16
  41efb2:	inc    ebx
  41efb3:	lgs    ecx,FWORD PTR [edx-0x1]
  41efb7:	sub    al,0x12
  41efb9:	push   eax
  41efba:	pop    edi
  41efbb:	sub    DWORD PTR [eax+0x247813c8],ecx
  41efc1:	aaa    
  41efc2:	sub    dl,bh
  41efc4:	sub    BYTE PTR [edi+0x2d],dl
  41efc7:	gs cmc 
  41efc9:	cwde   
  41efca:	xchg   ecx,eax
  41efcb:	lahf   
  41efcc:	(bad)  
  41efcd:	icebp  
  41efce:	out    dx,eax
  41efcf:	icebp  
  41efd0:	sbb    edx,ebp
  41efd2:	ins    DWORD PTR es:[edi],dx
  41efd3:	jae    0x41ef99
  41efd5:	jmp    0x332c73df
  41efda:	inc    ebx
  41efdb:	sub    al,BYTE PTR [esi+edx*2+0x1b]
  41efdf:	add    eax,0x6e7e63e6
  41efe4:	xchg   edx,eax
  41efe5:	sbb    eax,0x91226367
  41efea:	sbb    DWORD PTR [edx+0x3c4d9ec4],esi
  41eff0:	retf   0xbbd7
  41eff3:	sub    dl,dl
  41eff5:	addr16 in al,0x2f
  41eff8:	push   0x2c
  41effa:	push   edx
  41effb:	sub    DWORD PTR [eax+0x635c1d7a],esi
  41f001:	jp     0x41f00e
  41f003:	cs pop ds
  41f005:	hlt    
  41f006:	inc    eax
  41f007:	mul    DWORD PTR [ebp-0x3f]
  41f00a:	jbe    0x41f088
  41f00c:	add    bh,BYTE PTR [ebx]
  41f00e:	pop    eax
  41f00f:	jmp    0x41f063
  41f011:	(bad)
  41f014:	dec    ebx
  41f015:	arpl   WORD PTR [esi-0x3d],dx
  41f018:	mov    cl,0x59
  41f01a:	out    dx,al
  41f01b:	cmp    BYTE PTR [edx+0x44],dh
  41f01e:	scas   eax,DWORD PTR es:[edi]
  41f01f:	call   DWORD PTR [edx+edx*8+0x53]
  41f023:	retf   0xe9d3
  41f026:	mov    cs,WORD PTR [edi]
  41f028:	push   cs
  41f029:	aam    0x33
  41f02b:	loopne 0x41f031
  41f02d:	mov    dh,0xa8
  41f02f:	cmp    edi,ebx
  41f031:	pop    esp
  41f032:	and    eax,0xf4ae63bc
  41f037:	sbb    ch,BYTE PTR [ebx]
  41f039:	retf   0x43f5
  41f03c:	repz test DWORD PTR [ecx+0x22],esp
  41f040:	(bad)  
  41f041:	aaa    
  41f042:	or     eax,0x86326763
  41f047:	out    0x52,eax
  41f049:	outs   dx,DWORD PTR ds:[esi]
  41f04a:	outs   dx,DWORD PTR ds:[esi]
  41f04b:	ins    DWORD PTR es:[edi],dx
  41f04c:	cmp    dh,bh
  41f04e:	dec    eax
  41f04f:	xchg   ebx,eax
  41f050:	jo     0x41f0b5
  41f052:	lock test eax,0xe0d8f153
  41f058:	jno    0x41f06e
  41f05a:	ss retf 
  41f05c:	out    0xa9,eax
  41f05e:	xor    BYTE PTR cs:[edi],ah
  41f061:	hlt    
  41f062:	sbb    al,0x42
  41f064:	xchg   ebx,eax
  41f065:	inc    ebp
  41f066:	and    al,0xd1
  41f068:	add    BYTE PTR [bx+0x1],cl
  41f06c:	cmp    al,0xdb
  41f06e:	enter  0xe845,0x80
  41f072:	enter  0xfac2,0xec
  41f076:	outs   dx,BYTE PTR ds:[esi]
  41f077:	push   0xa4573db4
  41f07c:	or     ah,BYTE PTR [edi]
  41f07e:	fs adc al,0x87
  41f081:	rol    BYTE PTR [edi-0x7d32df97],1
  41f087:	push   esp
  41f088:	inc    edx
  41f089:	lds    ecx,FWORD PTR [ebx+0x1470523e]
  41f08f:	or     DWORD PTR [ebx],esi
  41f091:	out    0xef,al
  41f093:	or     DWORD PTR [esi],ebp
  41f095:	jns    0x41f0e5
  41f097:	lea    eax,[esi+0x5a96db65]
  41f09d:	lahf   
  41f09e:	pusha  
  41f09f:	ror    BYTE PTR [esi+0x61],1
  41f0a2:	(bad)  
  41f0a3:	fisubr DWORD PTR [edx]
  41f0a5:	mov    ah,0x99
  41f0a7:	fdivr  DWORD PTR [eax-0x4e695f80]
  41f0ad:	loopne 0x41f083
  41f0af:	je     0x41f0ce
  41f0b1:	into   
  41f0b2:	jg     0x41f07d
  41f0b4:	adc    eax,0xb6c9395b
  41f0b9:	sbb    ah,BYTE PTR [edi+0x70]
  41f0bc:	push   edi
  41f0bd:	scas   al,BYTE PTR es:[edi]
  41f0be:	cmp    eax,0x8dbfda2
  41f0c3:	fdivr  st,st(4)
  41f0c5:	mov    ds:0xfe11da21,eax
  41f0ca:	pop    esi
  41f0cb:	out    0x64,al
  41f0cd:	xchg   DWORD PTR [esi-0x74],ebx
  41f0d0:	(bad)  
  41f0d1:	mov    ds:0xffac88a7,eax
  41f0d6:	jmp    0xd9ef:0x4934ec4a
  41f0dd:	adc    bl,BYTE PTR [ebx+0x245ab729]
  41f0e3:	fs fsubr st(4),st
  41f0e6:	pop    ebx
  41f0e7:	int    0x28
  41f0e9:	cmp    cl,BYTE PTR [esi]
  41f0eb:	add    esi,DWORD PTR [ebp-0x31]
  41f0ee:	cmp    ch,BYTE PTR [ebp-0x6a]
  41f0f1:	xlat   BYTE PTR ds:[ebx]
  41f0f2:	sub    BYTE PTR [ecx],dh
  41f0f4:	and    al,0xc4
  41f0f6:	cmp    eax,0xdc14ba53
  41f0fb:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41f0fd:	sbb    ah,BYTE PTR [eax-0x3f]
  41f100:	inc    ebp
  41f101:	pushf  
  41f102:	imul   eax,DWORD PTR [edi-0x24],0x48
  41f106:	sti    
  41f107:	into   
  41f108:	cwde   
  41f109:	xchg   edx,eax
  41f10a:	xor    ah,ch
  41f10c:	pop    edi
  41f10d:	dec    esi
  41f10e:	shr    DWORD PTR [esi-0x406930ee],0x62
  41f115:	mov    al,ds:0xca744431
  41f11b:	pop    ds
  41f11c:	mov    WORD PTR [ebx+0x5c],cs
  41f11f:	popa   
  41f120:	rcl    DWORD PTR [edi-0xc],0x85
  41f124:	enter  0xfe21,0xc0
  41f128:	js     0x41f0c0
  41f12a:	lods   eax,DWORD PTR ds:[esi]
  41f12b:	in     al,0xbc
  41f12d:	into   
  41f12e:	xlat   BYTE PTR ds:[ebx]
  41f12f:	ja     0x41f157
  41f131:	mul    BYTE PTR [esi-0x34be4968]
  41f137:	imul   esi,DWORD PTR [ebx-0x5b],0xffffff8d
  41f13b:	and    eax,0x5700fc2d
  41f140:	add    DWORD PTR [edi],ebp
  41f142:	lods   eax,DWORD PTR ds:[esi]
  41f143:	neg    DWORD PTR [ebx]
  41f145:	xchg   ecx,eax
  41f146:	dec    dh
  41f148:	pop    ecx
  41f149:	pop    ecx
  41f14a:	sbb    dl,BYTE PTR [edi-0x3d]
  41f14d:	mov    esi,DWORD PTR [ecx]
  41f14f:	js     0x41f19e
  41f151:	sbb    al,0x6a
  41f153:	sar    BYTE PTR [edi],0xdf
  41f156:	adc    BYTE PTR [esi-0x5f],0x8f
  41f15a:	or     dh,ah
  41f15c:	pop    esp
  41f15d:	cld    
  41f15e:	xor    BYTE PTR [ebp+0x5f3210d7],al
  41f164:	add    DWORD PTR [edi+0x71],esi
  41f167:	cmp    al,0xff
  41f169:	cmp    DWORD PTR [eax+0x1a],esp
  41f16c:	dec    esi
  41f16d:	cmp    BYTE PTR [edx-0x5a083250],al
  41f173:	mov    dl,0x7f
  41f175:	out    dx,al
  41f176:	xchg   edi,eax
  41f177:	clc    
  41f178:	xchg   ebp,eax
  41f179:	xor    al,0xa
  41f17b:	jns    0x41f14c
  41f17d:	mov    esp,0xe4399866
  41f182:	mov    al,0x9d
  41f184:	mov    WORD PTR [esi],cs
  41f186:	jne    0x41f11b
  41f188:	inc    ebx
  41f189:	loop   0x41f10d
  41f18b:	aam    0xf8
  41f18d:	aaa    
  41f18e:	inc    esi
  41f18f:	adc    DWORD PTR [esi],ebx
  41f191:	lock fucom st(3)
  41f194:	out    0xfc,eax
  41f196:	xchg   DWORD PTR [ebp-0x6c0198af],eax
  41f19c:	inc    esi
  41f19d:	call   0xd311c454
  41f1a2:	dec    eax
  41f1a3:	fild   DWORD PTR [ecx-0x739864e6]
  41f1a9:	adc    esp,edi
  41f1ab:	dec    edx
  41f1ac:	data16 out 0xda,al
  41f1af:	mov    eax,ds:0xa2164ccd
  41f1b4:	addr16 adc al,0xbd
  41f1b7:	clc    
  41f1b8:	dec    edx
  41f1b9:	sahf   
  41f1ba:	add    al,0x92
  41f1bc:	les    ecx,FWORD PTR [esp+esi*2]
  41f1bf:	mov    eax,0xb9ebaa87
  41f1c4:	mov    dl,BYTE PTR [edx+0x3541ab70]
  41f1ca:	sbb    al,0xc3
  41f1cc:	std    
  41f1cd:	xrelease xchg DWORD PTR [eax-0x65e005d8],esi
  41f1d4:	(bad)  
  41f1d5:	je     0x41f18a
  41f1d7:	jg     0x41f22b
  41f1d9:	in     al,0x8
  41f1db:	out    dx,al
  41f1dc:	pop    es
  41f1dd:	aaa    
	...
  41f1ea:	add    BYTE PTR [eax],al
  41f1ec:	pop    esp
  41f1ed:	mov    dh,BYTE PTR [edi-0x23800895]
  41f1f3:	mov    edi,0xd9de0759
  41f1f8:	loope  0x41f1f2
  41f1fa:	ss push edx
  41f1fc:	stos   BYTE PTR es:[edi],al
  41f1fd:	outs   dx,BYTE PTR ds:[esi]
  41f1fe:	add    DWORD PTR [eax],eax
  41f200:	mov    al,BYTE PTR [edx]
  41f202:	add    BYTE PTR [eax],al
  41f204:	mov    cl,0x57
  41f206:	inc    ebp
  41f207:	bound  eax,QWORD PTR [ebp-0x1e]
  41f20a:	jb     0x41f253
  41f20c:	fdivrp st(7),st
  41f20e:	push   eax
  41f20f:	je     0x41f28f
  41f211:	fiadd  WORD PTR [edx-0x3c]
  41f214:	cmp    esi,DWORD PTR [eax-0x7a]
  41f217:	out    dx,eax
  41f218:	mov    edi,0x8a827108
  41f21d:	push   ds
  41f21e:	inc    esp
  41f21f:	adc    edx,ebx
  41f221:	or     ebx,DWORD PTR [ebp+0x26f83dd]
  41f227:	or     BYTE PTR [edi],dh
  41f229:	(bad)  
  41f22a:	jge    0x41f236
  41f22c:	cdq    
  41f22d:	mov    ds:0x6d1b1264,eax
  41f232:	cmp    eax,DWORD PTR [edi+0xb30bceb]
  41f238:	je     0x41f271
  41f23a:	jecxz  0x41f203
  41f23c:	push   0xffffffc5
  41f23e:	inc    ebp
  41f23f:	jns    0x41f257
  41f241:	fldcw  WORD PTR [esi]
  41f243:	adc    al,0x65
  41f246:	lahf   
  41f247:	dec    esp
  41f248:	pop    ds
  41f249:	mov    edi,0x52126d1d
  41f24e:	arpl   WORD PTR [edx],cx
  41f250:	in     eax,0x1d
  41f252:	arpl   WORD PTR [esi],si
  41f254:	jp     0x41f23d
  41f256:	addr16 jno 0x41f217
  41f259:	jno    0x41f2c4
  41f25b:	inc    ebp
  41f25c:	jg     0x41f2b0
  41f25e:	push   ebp
  41f25f:	sbb    cl,BYTE PTR [ecx-0x33]
  41f262:	imul   edx,DWORD PTR [esi+edx*1-0x383ea744],0x20
  41f26a:	jmp    0x5346:0x5cd38af8
  41f271:	call   0x219e:0x98ef7100
  41f278:	pop    ebx
  41f279:	xor    ch,BYTE PTR [ebx]
  41f27b:	sbb    al,BYTE PTR [esi+0x1de13f57]
  41f281:	(bad)  
  41f282:	repnz sub bh,bh
  41f285:	jecxz  0x41f248
  41f287:	(bad)  
  41f288:	cmp    al,0xff
  41f28a:	repz mov ch,0x55
  41f28d:	xor    BYTE PTR [ecx+0x7b],dl
  41f290:	mov    esi,0xdc36426a
  41f295:	imul   ebx,DWORD PTR ds:0x26285b5b,0x18
  41f29c:	rcl    BYTE PTR [esp+ebp*2+0x4a],cl
  41f2a0:	or     eax,0x5c590580
  41f2a5:	fld    QWORD PTR [eax+ebp*8]
  41f2a8:	scas   eax,DWORD PTR es:[edi]
  41f2a9:	adc    eax,0x9e0db979
  41f2ae:	ucomiss xmm3,DWORD PTR [eax-0x7]
  41f2b2:	fbstp  TBYTE PTR [eax-0x4ad0a9b]
  41f2b8:	pop    ebx
  41f2b9:	add    esi,0xa30d552d
  41f2bf:	inc    esi
  41f2c0:	cmp    ebx,DWORD PTR [eax-0x7b716c74]
  41f2c6:	mov    ss,esi
  41f2c8:	xor    BYTE PTR [ebp-0x1451ca40],bh
  41f2ce:	inc    ebp
  41f2cf:	push   cs
  41f2d0:	sub    cl,BYTE PTR [ebx-0x7f]
  41f2d3:	push   0xffffffb9
  41f2d5:	inc    ecx
  41f2d6:	inc    esp
  41f2d7:	jb     0x41f2a5
  41f2d9:	mov    dl,cl
  41f2db:	jg     0x41f26f
  41f2dd:	sub    esp,DWORD PTR [esi]
  41f2df:	outs   dx,DWORD PTR ds:[esi]
  41f2e0:	jb     0x41f339
  41f2e2:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41f2e4:	add    cl,BYTE PTR [eax]
  41f2e6:	cdq    
  41f2e7:	pop    edi
  41f2e8:	sahf   
  41f2e9:	xor    al,0x6a
  41f2eb:	push   edx
  41f2ec:	lea    ebp,[ebp+ebx*2+0x3974c677]
  41f2f3:	popf   
  41f2f4:	stos   DWORD PTR es:[edi],eax
  41f2f5:	call   0x3704:0x94f63de1
  41f2fc:	cmp    ecx,ebp
  41f2fe:	mov    ch,0xf9
  41f300:	inc    ecx
  41f301:	push   ebx
  41f302:	pop    ss
  41f303:	mov    ch,0x9b
  41f305:	mov    dh,0xc6
  41f307:	fiadd  DWORD PTR [ebx+0x66644105]
  41f30d:	(bad)  
  41f30e:	sbb    al,bl
  41f310:	jb     0x41f369
  41f312:	cmp    BYTE PTR [ebx-0x1c822ca0],al
  41f318:	imul   edi,DWORD PTR [edx+0x49],0x76
  41f31c:	repnz xor bl,BYTE PTR [edx+0x3ec6df65]
  41f323:	out    0x8f,al
  41f325:	inc    edx
  41f326:	fwait
  41f327:	inc    ebp
  41f328:	fld    QWORD PTR [edx-0x6c]
  41f32b:	jle    0x41f2db
  41f32d:	out    0xea,eax
  41f32f:	mov    fs,WORD PTR [ecx+0x5b0eb969]
  41f335:	loope  0x41f396
  41f337:	push   es
  41f338:	daa    
  41f339:	iret   
  41f33a:	xchg   DWORD PTR [ebx],ebp
  41f33c:	inc    edi
  41f33d:	adc    bh,BYTE PTR [esi+ecx*8+0x1d177402]
  41f344:	pop    ds
  41f345:	pushf  
  41f346:	(bad)
  41f349:	sbb    dh,BYTE PTR [esi+0x7c]
  41f34c:	push   0x2e
  41f34e:	data16 daa 
  41f350:	lea    ecx,[esi+0x1c]
  41f353:	mov    bh,0x7f
  41f355:	call   0x9883:0xef3e884e
  41f35c:	test   eax,0x1a7a8205
  41f361:	sahf   
  41f362:	icebp  
  41f363:	loope  0x41f2f2
  41f365:	imul   eax,DWORD PTR [edi],0xffffff93
  41f368:	ficomp DWORD PTR [eax+0x8]
  41f36b:	xchg   ecx,eax
  41f36c:	bound  edx,QWORD PTR [eax-0x5b]
  41f36f:	cmp    ebp,edi
  41f371:	popa   
  41f372:	ficomp DWORD PTR [edi+esi*1]
  41f375:	shl    BYTE PTR [eax+0x53],cl
  41f378:	call   0x2730:0x9cd0045
  41f37f:	mov    DWORD PTR [ebx+eax*1+0x1f],edi
  41f383:	fs stos DWORD PTR es:[edi],eax
  41f385:	push   ecx
  41f386:	push   ss
  41f387:	pop    edi
  41f388:	mov    edx,0xb747622f
  41f38d:	hlt    
  41f38e:	add    cl,bl
  41f390:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f391:	stos   DWORD PTR es:[edi],eax
  41f392:	inc    esp
  41f393:	lods   eax,DWORD PTR ds:[esi]
  41f394:	stos   BYTE PTR es:[edi],al
  41f395:	jle    0x41f363
  41f397:	rcr    DWORD PTR [ebx],1
  41f399:	pop    ss
  41f39a:	aas    
  41f39b:	test   DWORD PTR [ecx-0x296012bf],ebx
  41f3a1:	out    0x93,al
  41f3a3:	imul   eax,DWORD PTR [ebp+0x63],0xb33bd0d
  41f3aa:	test   DWORD PTR ss:[edi-0x72],esi
  41f3ae:	or     ebp,esi
  41f3b0:	js     0x41f37a
  41f3b2:	(bad)  
  41f3b3:	inc    esp
  41f3b4:	adc    edx,DWORD PTR [ebp-0x6e]
  41f3b7:	mov    al,ds:0x55808849
  41f3bc:	and    BYTE PTR [ecx+0x108e9c6d],ah
  41f3c2:	cld    
  41f3c3:	lds    eax,FWORD PTR [ecx-0x7db70a3e]
  41f3c9:	dec    esp
  41f3ca:	xchg   edx,edi
  41f3cc:	inc    eax
  41f3cd:	test   edx,0x845537ab
  41f3d3:	xchg   ebp,eax
  41f3d4:	gs dec ebx
  41f3d6:	pop    esi
  41f3d7:	mov    al,0x65
  41f3d9:	add    BYTE PTR [ecx+0x1219d07b],0x7a
  41f3e0:	stos   BYTE PTR es:[edi],al
  41f3e1:	addr16 pop ss
  41f3e3:	es mov ah,0x3d
  41f3e6:	icebp  
  41f3e7:	pcmpeqd mm1,mm0
  41f3ea:	inc    edi
  41f3eb:	push   esp
  41f3ec:	fld    TBYTE PTR [ecx+0x7e61bb22]
  41f3f2:	les    esp,FWORD PTR [ecx+esi*8]
  41f3f5:	mov    al,ds:0xb57c8375
  41f3fa:	mov    ebx,0x507d3b0a
  41f3ff:	sbb    al,0xcf
  41f402:	stc    
  41f403:	shl    al,1
  41f405:	dec    esp
  41f406:	icebp  
  41f407:	jno    0x41f40f
  41f409:	inc    edi
  41f40a:	fistp  WORD PTR [edx+0x2d]
  41f40d:	sbb    dh,BYTE PTR [edi-0x6b65ddf3]
  41f413:	and    eax,0x6512b074
  41f418:	and    DWORD PTR [ecx+0x7d36ce71],esp
  41f41e:	out    dx,eax
  41f41f:	and    BYTE PTR [ebx+0x4b5a8c04],cl
  41f425:	popa   
  41f426:	and    BYTE PTR [ecx-0x67],al
  41f429:	stos   DWORD PTR es:[edi],eax
  41f42a:	cmp    DWORD PTR [esi+0x26],esp
  41f42d:	test   BYTE PTR [esi],0x2
  41f430:	pushf  
  41f431:	mov    bl,0xf4
  41f433:	add    edi,DWORD PTR [edi-0x246ca1fa]
  41f439:	pop    ss
  41f43a:	stc    
  41f43b:	xchg   DWORD PTR [edx-0x5d7d2802],edx
  41f441:	test   al,0xc8
  41f443:	inc    esp
  41f444:	jno    0x41f43d
  41f446:	and    ecx,DWORD PTR [ecx+0x73]
  41f449:	mov    WORD PTR [ebp-0x7649f8ea],gs
  41f44f:	out    dx,eax
  41f450:	mov    dl,0x7e
  41f452:	outs   dx,BYTE PTR ds:[esi]
  41f453:	test   al,0x2b
  41f455:	loopne 0x41f483
  41f457:	sahf   
  41f458:	adc    al,0x14
  41f45a:	test   edi,esp
  41f45c:	sbb    eax,0x52bece21
  41f461:	pop    ebx
  41f462:	push   0x4496cde2
  41f467:	iret   
  41f468:	nop
  41f469:	das    
  41f46a:	call   0x230e:0x6e295b43
  41f471:	xchg   dl,dl
  41f473:	or     eax,0xd7e445a8
  41f478:	pop    ebx
  41f479:	add    DWORD PTR [ecx],esi
  41f47b:	repnz out 0x5c,al
  41f47e:	mov    dl,0x23
  41f480:	jge    0x41f4ce
  41f482:	cmp    DWORD PTR [edx+0x4a30a699],0x15
  41f489:	adc    al,0xbe
  41f48b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f48c:	stc    
  41f48d:	test   BYTE PTR [eax],0x0
	...
  41f49c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f49d:	sbb    al,BYTE PTR [edi-0x204026]
  41f4a3:	jg     0x41f451
  41f4a5:	pop    ss
  41f4a6:	aad    0x14
  41f4a8:	xchg   ecx,eax
  41f4a9:	add    bh,BYTE PTR [ecx-0x5e]
  41f4ac:	xor    al,0x71
  41f4ae:	add    DWORD PTR [eax],eax
  41f4b0:	mov    al,BYTE PTR [edx]
  41f4b2:	add    BYTE PTR [eax],al
  41f4b4:	test   DWORD PTR gs:[ecx-0x267404d9],ecx
  41f4bb:	rcl    DWORD PTR [esi+0x3d540f08],0x15
  41f4c2:	xchg   ecx,eax
  41f4c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4c4:	je     0x41f525
  41f4c6:	or     eax,0xe8d31923
  41f4cb:	ret    
  41f4cc:	mov    ah,0x96
  41f4ce:	adc    bh,BYTE PTR [ebx+0x21]
  41f4d1:	jecxz  0x41f520
  41f4d3:	std    
  41f4d4:	int3   
  41f4d5:	arpl   WORD PTR [edx+0x19],sp
  41f4d8:	out    dx,al
  41f4d9:	rcl    DWORD PTR [edi-0x77ceb271],1
  41f4df:	sbb    eax,0x8b6f9c4
  41f4e4:	add    al,0x5b
  41f4e6:	push   ss
  41f4e7:	(bad)  
  41f4e8:	fdiv   DWORD PTR [eax+esi*2+0x9]
  41f4ec:	shl    dh,cl
  41f4ee:	shl    DWORD PTR [ebx],1
  41f4f0:	imul   esi,DWORD PTR ds:0x4e562eef,0x9d068e87
  41f4fa:	dec    esi
  41f4fb:	fs stos DWORD PTR es:[edi],eax
  41f4fd:	xchg   ebp,eax
  41f4fe:	gs sub ch,dl
  41f501:	int    0x1b
  41f503:	popf   
  41f504:	dec    ebp
  41f505:	jle    0x41f497
  41f507:	arpl   WORD PTR [ebx+0x73b329d3],dx
  41f50d:	or     esp,ebx
  41f50f:	pop    ss
  41f510:	cmp    DWORD PTR [ecx+0x6a],esp
  41f513:	sub    eax,esp
  41f515:	push   ss
  41f516:	pop    edx
  41f517:	lds    ecx,FWORD PTR [eax-0x29]
  41f51a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f51b:	test   BYTE PTR [ebp+0x4],ch
  41f51e:	popa   
  41f51f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f520:	lods   eax,DWORD PTR ds:[esi]
  41f521:	mov    dl,0x2e
  41f523:	jb     0x41f58e
  41f525:	test   eax,0xba44db9f
  41f52a:	inc    ebx
  41f52b:	cmp    DWORD PTR [ecx-0x68],ebx
  41f52e:	les    ebp,FWORD PTR [edx]
  41f530:	xchg   edx,eax
  41f531:	pop    ecx
  41f532:	pop    edi
  41f533:	mov    edx,0x1105f16a
  41f538:	std    
  41f539:	daa    
  41f53a:	mov    dl,0x5b
  41f53c:	mov    cl,ah
  41f53e:	jl     0x41f515
  41f540:	lea    ebp,[esp+ebx*2-0x12]
  41f544:	aad    0x4c
  41f546:	stc    
  41f547:	int3   
  41f548:	or     DWORD PTR [edx-0x7b],eax
  41f54b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f54c:	mov    ecx,0xc67caf5b
  41f551:	mov    ah,0xa2
  41f553:	inc    esp
  41f554:	xchg   ebp,eax
  41f555:	dec    ebx
  41f556:	in     eax,0xfe
  41f558:	mov    esp,esi
  41f55a:	dec    edi
  41f55b:	out    dx,eax
  41f55c:	popa   
  41f55d:	inc    edi
  41f55e:	push   0xf86afd17
  41f563:	outs   dx,DWORD PTR ds:[esi]
  41f564:	xchg   edx,eax
  41f565:	push   ss
  41f566:	add    bl,BYTE PTR [ebp+0x602edc52]
  41f56c:	mov    edx,esi
  41f56e:	add    DWORD PTR [eax],esi
  41f570:	dec    esi
  41f571:	or     BYTE PTR [esp+ebx*1],dh
  41f574:	mov    ecx,0x35b95c0d
  41f579:	out    dx,al
  41f57a:	cmc    
  41f57b:	add    eax,0xf4134599
  41f580:	mov    al,0xf7
  41f582:	data16 fs int 0x98
  41f586:	push   edi
  41f587:	das    
  41f588:	repz sub eax,0x836519ba
  41f58e:	arpl   WORD PTR [ecx+0x7],sp
  41f591:	pop    edx
  41f592:	sar    DWORD PTR [esi+0xe],cl
  41f595:	lea    esi,[edx-0x44]
  41f598:	mov    ds:0xf9526eb4,al
  41f59d:	pop    ss
  41f59e:	out    0xcd,eax
  41f5a0:	out    dx,eax
  41f5a1:	push   ds
  41f5a2:	fsub   QWORD PTR [eax+0x75]
  41f5a5:	and    esp,DWORD PTR [edx-0x4f30e7b5]
  41f5ab:	adc    al,0x51
  41f5ad:	mov    bh,0x2b
  41f5af:	mov    ds:0xb2799344,eax
  41f5b4:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5b6:	data16 jae 0x41f544
  41f5b9:	mov    bl,0xc4
  41f5bb:	fninit 
  41f5bd:	mov    dh,0x14
  41f5bf:	inc    esi
  41f5c0:	std    
  41f5c1:	jns    0x41f55a
  41f5c3:	push   esi
  41f5c4:	psubb  mm2,QWORD PTR [eax*4-0x7a3af9c]
  41f5cc:	imul   ecx,eax,0x22
  41f5cf:	imul   eax,DWORD PTR [eax-0x10],0xdef53414
  41f5d6:	xchg   esp,eax
  41f5d7:	call   0xc0a:0xf076d109
  41f5de:	mov    al,ds:0x52787736
  41f5e3:	xchg   ebp,eax
  41f5e4:	scas   al,BYTE PTR es:[edi]
  41f5e5:	mov    DWORD PTR [ebp+0x53e41eab],edx
  41f5eb:	add    DWORD PTR [esp+eax*2+0x520d692f],0x4a
  41f5f3:	lods   al,BYTE PTR ds:[esi]
  41f5f4:	sar    DWORD PTR [ebx+0x6f],1
  41f5f7:	or     BYTE PTR [ecx+0x4efee8ca],bl
  41f5fd:	sub    DWORD PTR [edi-0x4e],esi
  41f600:	loopne 0x41f59b
  41f602:	xchg   ebp,eax
  41f603:	mov    ebp,edi
  41f605:	je     0x41f5e6
  41f607:	popf   
  41f608:	mov    al,ds:0x407520e0
  41f60d:	push   esp
  41f60e:	mov    eax,ds:0x41769ffc
  41f613:	push   edx
  41f614:	jo     0x41f64d
  41f616:	out    0x68,al
  41f618:	scas   eax,DWORD PTR es:[edi]
  41f619:	mov    ss,edi
  41f61b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f61c:	outs   dx,DWORD PTR ds:[esi]
  41f61d:	outs   dx,BYTE PTR ds:[esi]
  41f61e:	out    0x5c,al
  41f620:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f621:	into   
  41f622:	jb     0x41f619
  41f624:	xlat   BYTE PTR ds:[ebx]
  41f625:	mov    dl,0x62
  41f627:	lods   al,BYTE PTR ds:[esi]
  41f628:	pop    esp
  41f629:	jne    0x41f65c
  41f62b:	push   0xfffffff5
  41f62d:	stos   DWORD PTR es:[edi],eax
  41f62e:	pop    ds
  41f62f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f630:	inc    esp
  41f631:	cmp    BYTE PTR ds:0x1b2f0f22,ch
  41f637:	push   esi
  41f638:	jns    0x41f605
  41f63a:	(bad)  
  41f63b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f63d:	enter  0xd5cc,0x3b
  41f641:	fsubr  QWORD PTR [edi+0x62]
  41f644:	loope  0x41f5da
  41f646:	push   ds
  41f647:	cmp    eax,0x4eb58acc
  41f64c:	jo     0x41f6a5
  41f64e:	out    dx,al
  41f64f:	repz in eax,0x32
  41f652:	movaps XMMWORD PTR [edx-0x6980f91d],xmm1
  41f659:	sub    al,0x66
  41f65b:	or     ebp,ebp
  41f65d:	jle    0x41f635
  41f65f:	xor    al,0x1d
  41f661:	rcl    DWORD PTR [edx+0x7a],cl
  41f664:	mov    esp,0x5023067e
  41f669:	call   0x96232d65
  41f66e:	int3   
  41f66f:	loopne 0x41f65e
  41f671:	call   0x568a2860
  41f676:	inc    BYTE PTR [eax+0x59]
  41f679:	bound  esp,QWORD PTR [edi-0x1b6bac44]
  41f67f:	mov    edi,0x489bbf3c
  41f684:	pop    ss
  41f685:	bound  edx,QWORD PTR [ebx-0x57ed4707]
  41f68b:	das    
  41f68c:	sahf   
  41f68d:	xchg   edi,eax
  41f68e:	adc    BYTE PTR ds:[ecx+edi*8-0x2d],0x87
  41f694:	jo     0x41f66e
  41f696:	rcr    cl,1
  41f698:	cmp    eax,DWORD PTR [eax+0x1e08e0bb]
  41f69e:	xor    esp,DWORD PTR [eax+0xae8f75a]
  41f6a4:	sbb    ebx,ecx
  41f6a6:	fcmove st,st(6)
  41f6a8:	aad    0x74
  41f6aa:	aas    
  41f6ab:	or     BYTE PTR [ecx+0x5b9abb30],0x6e
  41f6b2:	call   0x5882:0x3827553b
  41f6b9:	dec    ebx
  41f6ba:	movlps QWORD PTR [edi],xmm1
  41f6bd:	stos   BYTE PTR es:[edi],al
  41f6be:	call   0x98f50ddb
  41f6c3:	mov    dh,0xa2
  41f6c5:	sahf   
  41f6c6:	jle    0x41f71b
  41f6c8:	sti    
  41f6c9:	sub    al,0x1c
  41f6cb:	scas   al,BYTE PTR es:[edi]
  41f6cc:	sbb    DWORD PTR [ecx],esi
  41f6ce:	adc    al,0x92
  41f6d0:	stos   BYTE PTR es:[edi],al
  41f6d1:	mov    al,0xa8
  41f6d3:	pushf  
  41f6d4:	mov    eax,0x362262ca
  41f6da:	push   ds
  41f6db:	and    eax,0x53fcb29
  41f6e0:	xchg   edx,eax
  41f6e1:	daa    
  41f6e2:	mov    dl,0xc5
  41f6e4:	sbb    BYTE PTR [esp+ebx*8],cl
  41f6e7:	cmc    
  41f6e8:	xchg   edi,eax
  41f6e9:	ret    0xfd0e
  41f6ec:	pop    ebx
  41f6ed:	ret    
  41f6ee:	mov    eax,ds:0x334bae13
  41f6f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6f4:	es mov dl,0xcc
  41f6f7:	mov    edx,0xbf19a80a
  41f6fc:	sub    edx,DWORD PTR ds:0x28aa5636
  41f702:	mov    dl,0x1f
  41f704:	shr    dh,cl
  41f706:	xchg   esp,eax
  41f707:	out    dx,al
  41f708:	inc    ebx
  41f709:	hlt    
  41f70a:	je     0x41f757
  41f70c:	sbb    dh,BYTE PTR [esp+eiz*2+0x44]
  41f710:	xor    DWORD PTR [bp+di-0x5f],ebx
  41f714:	leave  
  41f715:	popa   
  41f716:	pop    edx
  41f717:	imul   ah
  41f719:	jle    0x41f6a3
  41f71b:	dec    ebx
  41f71c:	mov    ds:0x3a215c16,eax
  41f721:	dec    esp
  41f722:	ret    0x193f
  41f725:	pusha  
  41f726:	paddw  mm3,QWORD PTR [ebx]
  41f729:	loop   0x41f751
  41f72b:	scas   eax,DWORD PTR es:[edi]
  41f72c:	imul   eax,DWORD PTR [esi],0x37
  41f72f:	js     0x41f762
  41f731:	arpl   bx,dx
  41f733:	mov    bh,0x59
  41f735:	(bad)  
  41f736:	jae    0x41f70d
  41f738:	jge    0x41f737
  41f73a:	jecxz  0x41f798
  41f73c:	adc    dh,BYTE PTR [ebx+0x0]
	...
  41f74b:	add    BYTE PTR [ebp-0x15b01f1],bl
  41f751:	cmc    
  41f752:	fistp  QWORD PTR [edi]
  41f754:	stc    
  41f755:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f756:	mov    bl,0x6e
  41f758:	sbb    ah,bl
  41f75a:	add    eax,0x173be2c
  41f75f:	add    BYTE PTR [edx-0x38fffffe],cl
  41f765:	add    eax,eax
  41f767:	ins    BYTE PTR es:[edi],dx
  41f768:	ss adc eax,0x91bf60cf
  41f76e:	pavgb  mm3,QWORD PTR [edi]
  41f771:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f772:	ss mov dh,0x3a
  41f775:	push   ds
  41f776:	gs dec ebp
  41f778:	inc    ebx
  41f779:	cwde   
  41f77a:	push   ebx
  41f77b:	enter  0x752b,0xcb
  41f77f:	cmp    esp,DWORD PTR [ecx]
  41f781:	xor    BYTE PTR [esi],bl
  41f783:	popa   
  41f784:	dec    esp
  41f785:	aaa    
  41f786:	loop   0x41f799
  41f788:	shl    BYTE PTR [edx+0xf],cl
  41f78b:	jp     0x41f765
  41f78d:	sbb    al,BYTE PTR [ecx+0x1ef65911]
  41f793:	ss test DWORD PTR gs:[edx+0x1b],0x6a49ffba
  41f79c:	aad    0x24
  41f79e:	add    bh,BYTE PTR [edx-0x77]
  41f7a1:	add    DWORD PTR [ebx+0xf1c986f],esp
  41f7a7:	add    edx,ebp
  41f7a9:	(bad)  
  41f7aa:	dec    edi
  41f7ab:	outs   dx,BYTE PTR ds:[esi]
  41f7ac:	test   DWORD PTR [ecx],0x690eac82
  41f7b2:	mov    bl,0x45
  41f7b4:	inc    esp
  41f7b5:	clc    
  41f7b6:	scas   al,BYTE PTR es:[edi]
  41f7b7:	mov    ebx,0x6bf1f79e
  41f7bc:	and    dh,BYTE PTR [ebx-0x50]
  41f7bf:	ja     0x41f7cc
  41f7c1:	mov    WORD PTR [edx-0x1],fs
  41f7c4:	mov    dh,BYTE PTR [ebx+0x21f277d]
  41f7ca:	mov    dh,0xa7
  41f7cc:	dec    ecx
  41f7cd:	jne    0x41f831
  41f7cf:	xor    BYTE PTR [ebp+0x34],ah
  41f7d2:	sub    BYTE PTR [ebx],al
  41f7d4:	sbb    BYTE PTR [edx-0x20],bl
  41f7d7:	cld    
  41f7d8:	jo     0x41f76b
  41f7da:	cmp    dh,BYTE PTR [ebx]
  41f7dc:	mov    BYTE PTR [eax],ch
  41f7de:	mov    eax,0xb6951981
  41f7e3:	mov    eax,ds:0xf1c36947
  41f7e8:	xor    BYTE PTR [eax-0x2c],dh
  41f7eb:	mov    WORD PTR [eax],?
  41f7ed:	inc    edx
  41f7ee:	mov    ch,0x1a
  41f7f0:	lock mov DWORD PTR [ebp-0x230ec275],0xbd8ee5b1
  41f7fb:	mov    ds:0xf3c07af7,al
  41f800:	xchg   edi,eax
  41f801:	sti    
  41f802:	jecxz  0x41f79d
  41f804:	cmp    cl,cl
  41f806:	mov    dh,0xa0
  41f808:	repnz enter 0xc9b5,0x9e
  41f80d:	and    edx,edi
  41f80f:	std    
  41f810:	mov    bl,0xc3
  41f812:	and    al,0xbb
  41f814:	loop   0x41f7c5
  41f816:	inc    ebp
  41f817:	mov    ecx,0xb1378ca0
  41f81c:	xchg   ecx,eax
  41f81d:	xchg   edx,eax
  41f81e:	mov    al,0x4d
  41f820:	xchg   esp,eax
  41f821:	ret    0x9d2f
  41f824:	jae    0x41f813
  41f826:	out    0xd3,al
  41f828:	stos   DWORD PTR es:[edi],eax
  41f829:	neg    DWORD PTR [edx+0x5e]
  41f82c:	stos   DWORD PTR es:[edi],eax
  41f82d:	je     0x41f7b4
  41f82f:	add    ah,bl
  41f831:	into   
  41f832:	(bad)  
  41f833:	nop    DWORD PTR [ecx-0x2d]
  41f837:	mov    WORD PTR [edi+0x2b],fs
  41f83a:	pop    ecx
  41f83b:	jmp    edi
  41f83d:	inc    edx
  41f83e:	xlat   BYTE PTR ds:[ebx]
  41f83f:	popa   
  41f840:	cmp    al,0xfa
  41f842:	jle    0x41f8c0
  41f844:	mov    eax,0x9584fd29
  41f849:	sbb    BYTE PTR [esi-0x6c048630],dl
  41f84f:	iret   
  41f850:	push   0xff50cae3
  41f855:	out    0xa,eax
  41f857:	sub    eax,0xc279771d
  41f85c:	jns    0x41f8d1
  41f85e:	xchg   ecx,eax
  41f85f:	iret   
  41f860:	push   ecx
  41f861:	pxor   mm2,QWORD PTR [edi+0x640c5e57]
  41f868:	fnstenv [ebp+0x8cb0957]
  41f86e:	sahf   
  41f86f:	push   esi
  41f870:	ins    BYTE PTR es:[edi],dx
  41f871:	out    dx,eax
  41f872:	in     eax,dx
  41f873:	pop    edi
  41f874:	loopne 0x41f888
  41f876:	pop    edx
  41f877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f878:	ins    BYTE PTR es:[edi],dx
  41f879:	mov    ds:0x95588b3c,al
  41f87e:	jl     0x41f871
  41f880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f881:	test   eax,0x6b0843f0
  41f886:	xor    edi,esi
  41f888:	and    cl,cl
  41f88a:	mov    ecx,esi
  41f88c:	dec    edi
  41f88d:	jno    0x41f8ad
  41f88f:	and    edx,esi
  41f891:	ds push ds
  41f893:	lea    eax,[ecx]
  41f895:	inc    ebx
  41f896:	push   ecx
  41f897:	mov    eax,ds:0x95b6e981
  41f89c:	popa   
  41f89d:	cmp    DWORD PTR [edx],edi
  41f89f:	mov    ah,0xf4
  41f8a1:	pop    ds
  41f8a2:	lods   eax,DWORD PTR ds:[esi]
  41f8a3:	repz add esi,edi
  41f8a6:	xchg   esi,eax
  41f8a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8a8:	popa   
  41f8a9:	dec    edi
  41f8aa:	fbld   TBYTE PTR [ecx+0x2c]
  41f8ad:	pop    edx
  41f8ae:	adc    al,0x26
  41f8b0:	imul   edx,DWORD PTR [eax+0x401ce5c0],0xca660ede
  41f8ba:	mov    eax,ds:0xaee066a
  41f8bf:	xchg   esi,eax
  41f8c0:	pushf  
  41f8c1:	dec    ebp
  41f8c2:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41f8c4:	push   ebp
  41f8c5:	inc    edi
  41f8c6:	sub    BYTE PTR [esi],dl
  41f8c8:	sub    DWORD PTR [ebx+ecx*1+0x4b3acb96],ebx
  41f8cf:	fdiv   DWORD PTR [edx]
  41f8d1:	push   esi
  41f8d2:	cmp    BYTE PTR [ecx],al
  41f8d4:	lods   eax,DWORD PTR ds:[esi]
  41f8d5:	out    dx,al
  41f8d6:	push   ebp
  41f8d7:	dec    ebx
  41f8d8:	in     al,0xd2
  41f8da:	jns    0x41f934
  41f8dc:	sub    BYTE PTR [ebp-0xd2854a1],ch
  41f8e2:	and    BYTE PTR [ebp+ebx*1+0x7c32bfa1],ch
  41f8e9:	jmp    0xf971:0x9c10112
  41f8f0:	sbb    al,0x3b
  41f8f2:	mov    BYTE PTR [ebx-0x19ded44],ch
  41f8f8:	fnstenv [ebx-0x38]
  41f8fb:	xor    BYTE PTR ds:0x7c172b4f,bh
  41f901:	push   edi
  41f902:	fdivr  st(2),st
  41f904:	mov    eax,0xeedd6f5c
  41f909:	or     ebx,DWORD PTR gs:[edx-0x44c8b91b]
  41f910:	lahf   
  41f911:	add    BYTE PTR [ecx+0x8],ch
  41f914:	pop    esp
  41f915:	in     al,dx
  41f916:	aaa    
  41f917:	cs inc edx
  41f919:	mov    dh,0x46
  41f91b:	icebp  
  41f91c:	mov    eax,ds:0x51755e11
  41f921:	ja     0x41f969
  41f923:	lea    ebp,[ebp+esi*8-0x6b6689d2]
  41f92a:	(bad)  
  41f92b:	cmp    esp,DWORD PTR [eax+esi*2+0x16]
  41f92f:	imul   edx,DWORD PTR [eax-0x11047df8],0x12
  41f936:	mov    edi,0x84a6e279
  41f93b:	aas    
  41f93c:	dec    ebp
  41f93d:	adc    BYTE PTR [esi],bl
  41f93f:	pop    ds
  41f940:	adc    al,0xf8
  41f942:	dec    edi
  41f943:	dec    ebp
  41f944:	xchg   esi,eax
  41f945:	ficom  WORD PTR [ebp-0x7832866f]
  41f94b:	or     ebx,ecx
  41f94d:	pusha  
  41f94e:	xchg   ecx,eax
  41f94f:	push   esi
  41f950:	jne    0x41f9c1
  41f952:	icebp  
  41f953:	pop    edx
  41f954:	push   cs
  41f955:	mov    ebp,0x5035391b
  41f95a:	inc    ecx
  41f95b:	jmp    0x159ce385
  41f960:	test   eax,0xb4332522
  41f965:	push   0xffffff97
  41f967:	ins    DWORD PTR es:[edi],dx
  41f968:	test   eax,0x4a3b24f3
  41f96d:	loop   0x41f949
  41f96f:	scas   al,BYTE PTR es:[edi]
  41f970:	or     BYTE PTR [esi-0x5d],bh
  41f973:	in     al,dx
  41f974:	lds    esi,FWORD PTR [eax+eax*2+0x22]
  41f978:	push   eax
  41f979:	dec    ecx
  41f97a:	mov    cl,0xd7
  41f97c:	dec    edx
  41f97d:	div    BYTE PTR ds:0xd47f35ec
  41f983:	xor    DWORD PTR [ecx],ecx
  41f985:	add    cl,dh
  41f987:	xor    edi,edx
  41f989:	push   0xe4872ada
  41f98e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f98f:	fist   DWORD PTR [ecx]
  41f991:	mov    ebx,0xa71a9514
  41f996:	cdq    
  41f997:	fwait
  41f998:	add    ah,BYTE PTR [ecx-0x2f]
  41f99b:	test   DWORD PTR [edx-0x4990680f],edx
  41f9a1:	and    eax,0x4da52d0a
  41f9a6:	jmp    0x41fa1a
  41f9a8:	add    esi,DWORD PTR [ebp+0x66]
  41f9ab:	push   ss
  41f9ac:	rcl    DWORD PTR [edi],0xca
  41f9af:	cmc    
  41f9b0:	sbb    eax,0x78455d2e
  41f9b5:	add    DWORD PTR [ecx],edi
  41f9b7:	int3   
  41f9b8:	les    esp,FWORD PTR [edi+0x79]
  41f9bb:	mov    al,ds:0x83eed19b
  41f9c0:	shr    ecx,0x28
  41f9c3:	add    al,0xd2
  41f9c5:	daa    
  41f9c6:	shr    BYTE PTR [eax+ebx*4-0x3fab10e5],0xe2
  41f9ce:	and    al,0x35
  41f9d0:	jns    0x41fa51
  41f9d2:	xor    al,0xf3
  41f9d4:	les    ebx,FWORD PTR [esi]
  41f9d6:	mov    dh,0xa7
  41f9d8:	inc    esp
  41f9d9:	jle    0x41fa08
  41f9db:	in     al,dx
  41f9dc:	mov    dl,0xa6
  41f9de:	mov    bh,0x4f
  41f9e0:	xlat   BYTE PTR ds:[ebx]
  41f9e1:	cmp    eax,0xfd99bfd4
  41f9e6:	lock sbb al,0x19
  41f9e9:	add    BYTE PTR [eax+0x33033e],bl
	...
  41f9fb:	add    BYTE PTR [eax],ah
  41f9fd:	push   ss
  41f9fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9ff:	lea    esi,[esi+0x25bf29bf]
  41fa05:	lods   eax,DWORD PTR ds:[esi]
  41fa06:	and    dl,al
  41fa08:	rcr    DWORD PTR gs:[eax],0x7f
  41fa0c:	dec    eax
  41fa0d:	jbe    0x41fa10
  41fa0f:	add    BYTE PTR [edx-0x67fffffe],cl
  41fa15:	push   0xffffffce
  41fa17:	nop
  41fa18:	adc    ecx,DWORD PTR [edi-0x5b]
  41fa1b:	push   ebx
  41fa1c:	ror    dl,0xc4
  41fa1f:	mov    ch,0x7e
  41fa21:	jne    0x41fa3b
  41fa23:	push   cs
  41fa24:	(bad)  
  41fa25:	mov    dh,0xa8
  41fa27:	aam    0xcc
  41fa29:	inc    eax
  41fa2a:	sub    al,0x57
  41fa2c:	dec    ecx
  41fa2d:	and    ebp,ebx
  41fa2f:	loopne 0x41fa63
  41fa31:	pop    ebx
  41fa32:	fld    TBYTE PTR [ecx+0x6e]
  41fa35:	push   esp
  41fa36:	mov    eax,ds:0xd2e190a
  41fa3b:	imul   ebp,DWORD PTR [edx-0xb],0x71
  41fa3f:	xchg   ebp,eax
  41fa40:	mov    BYTE PTR [ecx+ecx*1],ah
  41fa43:	or     ecx,DWORD PTR [eax+0x5d4fcd24]
  41fa49:	push   ebp
  41fa4a:	out    dx,al
  41fa4b:	inc    esp
  41fa4c:	xor    ah,BYTE PTR [ebx-0x6]
  41fa4f:	bound  ebx,QWORD PTR [edi+0x7f]
  41fa52:	xchg   ecx,eax
  41fa53:	dec    esp
  41fa54:	fistp  WORD PTR [ebx-0x2d1dc8f2]
  41fa5a:	int    0x85
  41fa5c:	sub    BYTE PTR [ebp-0x66ce5ddf],bh
  41fa62:	test   eax,eax
  41fa64:	inc    ecx
  41fa65:	fild   WORD PTR [ebx]
  41fa67:	dec    edx
  41fa68:	mov    ds:0xd3c3c64d,al
  41fa6d:	inc    edi
  41fa6e:	ror    DWORD PTR [edi],0x12
  41fa71:	mov    ss,edx
  41fa73:	sbb    eax,0xc9803d4c
  41fa78:	cli    
  41fa79:	push   0xffffff99
  41fa7b:	mov    bh,0x6d
  41fa7d:	fcmovne st,st(6)
  41fa7f:	mov    ds:0xe854c43b,al
  41fa84:	fidiv  DWORD PTR [edi-0x4b]
  41fa87:	and    al,0x2d
  41fa89:	(bad)  
  41fa8a:	mov    ch,0x15
  41fa8c:	sub    eax,0xf205d5c4
  41fa91:	sbb    al,0x3d
  41fa93:	cli    
  41fa94:	cdq    
  41fa95:	inc    eax
  41fa96:	test   DWORD PTR [edi],ebp
  41fa98:	xchg   edi,eax
  41fa99:	lods   eax,DWORD PTR ds:[esi]
  41fa9a:	jae    0x41fb09
  41fa9c:	out    dx,eax
  41fa9d:	mov    BYTE PTR [edi],dh
  41fa9f:	dec    ebx
  41faa0:	sbb    eax,0xb06e436a
  41faa5:	shl    eax,1
  41faa7:	leave  
  41faa8:	xor    DWORD PTR [edi+0x76],ebp
  41faab:	fld    QWORD PTR [edx+0xa]
  41faae:	cmp    esi,DWORD PTR [ebx]
  41fab0:	pop    ss
  41fab1:	les    ebx,FWORD PTR [edx+0x1b7cc670]
  41fab7:	pop    ss
  41fab8:	sub    edx,edx
  41faba:	hlt    
  41fabb:	adc    BYTE PTR [esi],cl
  41fabd:	(bad)  
  41fabe:	mov    eax,ds:0xd79b9592
  41fac3:	xchg   esp,eax
  41fac4:	mov    ebp,0xc7a81349
  41fac9:	stc    
  41faca:	jbe    0x41fb05
  41facc:	popf   
  41facd:	xlat   BYTE PTR ds:[ebx]
  41face:	fisubr DWORD PTR [edi-0x11e66e26]
  41fad4:	sbb    BYTE PTR [eax+0x75],ah
  41fad7:	pusha  
  41fad8:	lock xchg ebx,eax
  41fada:	pusha  
  41fadb:	outs   dx,BYTE PTR ds:[esi]
  41fadc:	jb     0x41faed
  41fade:	in     al,0xd8
  41fae0:	fwait
  41fae1:	je     0x41fa7e
  41fae3:	dec    ecx
  41fae4:	outs   dx,BYTE PTR gs:[esi]
  41fae6:	sub    ch,bh
  41fae8:	int3   
  41fae9:	sub    BYTE PTR [ebp+0x2caab410],dl
  41faef:	mov    WORD PTR gs:0x7fcd3ecc,?
  41faf6:	mov    eax,0x9fbbbd5a
  41fafb:	and    al,BYTE PTR [ebx+0x6b]
  41fafe:	test   al,0x6a
  41fb00:	fild   DWORD PTR [ecx+0xef84d6e]
  41fb06:	jbe    0x41fb7f
  41fb08:	enter  0x432f,0xc4
  41fb0c:	data16 aas 
  41fb0e:	cmp    eax,0x3d3fc709
  41fb13:	push   ss
  41fb14:	cmc    
  41fb15:	arpl   sp,si
  41fb17:	addr16 sti 
  41fb19:	xchg   esp,eax
  41fb1a:	mov    edx,0x54366abc
  41fb1f:	mov    ds:0xa344a04e,al
  41fb24:	clc    
  41fb25:	pop    edi
  41fb26:	adc    eax,0x99276d8c
  41fb2b:	mov    ch,0x16
  41fb2d:	mov    ds:0xf52ffbda,eax
  41fb32:	inc    si
  41fb34:	cmp    BYTE PTR [ecx],dl
  41fb36:	cmc    
  41fb37:	xor    eax,0xdbfe7c85
  41fb3c:	cmc    
  41fb3d:	mov    ebp,0xa5b17e22
  41fb42:	and    DWORD PTR [ecx+0x2d],ebp
  41fb45:	stos   DWORD PTR es:[edi],eax
  41fb46:	pop    edi
  41fb47:	mov    eax,ds:0x82b8d72e
  41fb4c:	leave  
  41fb4d:	dec    edx
  41fb4e:	sub    cl,ch
  41fb50:	xchg   esi,eax
  41fb51:	cmp    bl,BYTE PTR [esi-0x1e585660]
  41fb57:	fsincos 
  41fb59:	adc    eax,0xa00961d2
  41fb5e:	loope  0x41fb37
  41fb60:	test   eax,0x874291ec
  41fb65:	push   ss
  41fb66:	retf   0x7293
  41fb69:	pop    es
  41fb6a:	pop    edi
  41fb6b:	xor    eax,0xa2da6580
  41fb70:	adc    ebp,edx
  41fb72:	hlt    
  41fb73:	cwde   
  41fb74:	xchg   ebp,eax
  41fb75:	cmc    
  41fb76:	jge    0x41fb32
  41fb78:	pop    ecx
  41fb79:	iret   
  41fb7a:	int    0x6a
  41fb7c:	lea    edx,[ebp+0x58097c7e]
  41fb82:	dec    esp
  41fb83:	pop    esp
  41fb84:	push   es
  41fb85:	jo     0x41fb99
  41fb87:	loope  0x41fb48
  41fb89:	sbb    al,0xef
  41fb8b:	push   ebp
  41fb8c:	outs   dx,BYTE PTR ds:[esi]
  41fb8d:	jmp    0xdf63aa4d
  41fb92:	or     edx,ecx
  41fb94:	dec    ebx
  41fb95:	ja     0x41fbfa
  41fb97:	add    BYTE PTR [ebx+0x5146627b],bh
  41fb9d:	or     ecx,DWORD PTR [edx-0xe1f6de3]
  41fba3:	dec    esp
  41fba4:	neg    DWORD PTR [ecx-0x29]
  41fba7:	xchg   ebx,esi
  41fba9:	mov    ecx,0xdc719f3a
  41fbae:	dec    edi
  41fbaf:	add    eax,0x70e9b541
  41fbb4:	xchg   esp,eax
  41fbb5:	xchg   BYTE PTR [edx+0x71],cl
  41fbb8:	jmp    0x25f0:0x779862d3
  41fbbf:	das    
  41fbc0:	test   al,0xf1
  41fbc3:	jle    0x41fc22
  41fbc5:	add    dh,BYTE PTR [ecx+eax*2]
  41fbc8:	enter  0xba0f,0x32
  41fbcc:	pop    ebx
  41fbcd:	adc    al,0x9f
  41fbcf:	cdq    
  41fbd0:	dec    ebx
  41fbd1:	aad    0xb
  41fbd3:	jmp    0x9274:0xcf7e8ef2
  41fbda:	or     eax,0xf8576947
  41fbdf:	sbb    al,0xc1
  41fbe1:	sub    al,0x6a
  41fbe3:	inc    edi
  41fbe4:	sbb    ch,BYTE PTR [edi-0x3f2d044b]
  41fbea:	mov    WORD PTR [ecx+0xc],?
  41fbed:	in     al,dx
  41fbee:	or     DWORD PTR [ebx+0x59],ebp
  41fbf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbf2:	xchg   ebp,eax
  41fbf3:	pop    esi
  41fbf4:	retf   
  41fbf5:	pop    esi
  41fbf6:	push   edi
  41fbf7:	jp     0x41fc2f
  41fbf9:	cmp    BYTE PTR [ecx+0x72],0x9d
  41fbfd:	and    bh,bl
  41fbff:	inc    esp
  41fc00:	or     ah,bl
  41fc02:	push   es
  41fc03:	sub    dh,BYTE PTR [ecx]
  41fc05:	sub    DWORD PTR [ecx-0x1a],ecx
  41fc08:	(bad)  
  41fc09:	push   ds
  41fc0a:	mov    edx,0x83b0ca4a
  41fc0f:	addr16 or al,0x79
  41fc12:	fld    st(0)
  41fc14:	jbe    0x41fc61
  41fc16:	arpl   WORD PTR [ecx],sp
  41fc18:	inc    edx
  41fc19:	inc    edx
  41fc1a:	dec    eax
  41fc1b:	mov    WORD PTR [edi+eax*8],?
  41fc1e:	sbb    al,0xcc
  41fc20:	scas   al,BYTE PTR es:[edi]
  41fc21:	mov    esi,0x402c2896
  41fc26:	fwait
  41fc27:	movd   edi,mm4
  41fc2a:	out    0xdb,eax
  41fc2c:	sub    ebx,edx
  41fc2e:	hlt    
  41fc2f:	hlt    
  41fc30:	sbb    al,0x16
  41fc32:	push   esi
  41fc33:	dec    edi
  41fc34:	retf   0x6c37
  41fc37:	pop    ebx
  41fc38:	ds ret 
  41fc3a:	xchg   edx,eax
  41fc3b:	push   eax
  41fc3c:	mov    al,0x25
  41fc3e:	aad    0xbd
  41fc40:	ins    BYTE PTR es:[edi],dx
  41fc41:	pop    ds
  41fc42:	add    cl,al
  41fc44:	jno    0x41fcbe
  41fc46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc47:	mov    eax,ds:0xb90c585e
  41fc4c:	div    DWORD PTR [ebp-0xd]
  41fc4f:	nop
  41fc50:	es push ds
  41fc52:	aad    0x2d
  41fc54:	mov    esi,0xf5194c32
  41fc59:	pop    esp
  41fc5a:	xor    ah,BYTE PTR [esi+0x54]
  41fc5d:	aas    
  41fc5e:	jno    0x41fcd7
  41fc60:	jnp    0x41fc31
  41fc62:	and    al,0x8f
  41fc64:	inc    esi
  41fc65:	je     0x41fcc0
  41fc67:	(bad)  
  41fc68:	mov    esi,0xc644721e
  41fc6d:	js     0x41fce5
  41fc6f:	aam    0x5d
  41fc71:	adc    DWORD PTR [edx+ebx*4-0x4a],ebp
  41fc75:	mov    eax,ds:0xdff597f1
  41fc7a:	and    esp,DWORD PTR [ebx-0x52]
  41fc7d:	ins    BYTE PTR es:[edi],dx
  41fc7e:	fld    DWORD PTR [ecx]
  41fc80:	fld    QWORD PTR [edx+eax*1+0x54]
  41fc84:	test   al,0xbd
  41fc86:	cwde   
  41fc87:	mov    eax,0xb1f0c917
  41fc8c:	mov    edi,0x9d5c0eb1
  41fc91:	les    esi,FWORD PTR [esi+0x46101389]
  41fc97:	add    BYTE PTR [ebp+0x49d0c393],0x1
	...
  41fcaa:	add    BYTE PTR [eax],al
  41fcac:	mov    al,0x33
  41fcae:	cmp    ch,BYTE PTR [ecx+0x3bb3a9bb]
  41fcb4:	test   DWORD PTR [edi-0x5f35f342],esi
  41fcba:	stos   BYTE PTR es:[edi],al
  41fcbb:	sti    
  41fcbc:	sar    BYTE PTR [eax+0x1],cl
  41fcbf:	add    BYTE PTR [edx+0x21000002],cl
  41fcc5:	ja     0x41fd18
  41fcc7:	fidiv  WORD PTR [edi+ebx*2]
  41fcca:	ret    0x7a59
  41fccd:	repnz nop
  41fccf:	mov    dh,0x6e
  41fcd1:	push   ss
  41fcd2:	push   eax
  41fcd3:	xor    eax,esp
  41fcd5:	(bad)  
  41fcd7:	xor    BYTE PTR [edx*1-0xbef200d],0xf5
  41fcdf:	stc    
  41fce0:	sahf   
  41fce1:	cmc    
  41fce2:	cdq    
  41fce3:	loop   0x41fd1a
  41fce5:	stos   BYTE PTR es:[edi],al
  41fce6:	stc    
  41fce7:	dec    edx
  41fce8:	adc    cl,BYTE PTR [esp+eax*1]
  41fceb:	and    DWORD PTR [ebp+0x1a],ebp
  41fcee:	stos   BYTE PTR es:[edi],al
  41fcef:	rcr    DWORD PTR [edi],cl
  41fcf1:	and    al,0xf1
  41fcf3:	mov    WORD PTR [ecx-0x74bd107c],gs
  41fcf9:	mov    al,0x0
  41fcfb:	push   ebp
  41fcfc:	mov    bl,0x3f
  41fcfe:	mov    edi,0x1fb6b57e
  41fd03:	faddp  st(7),st
  41fd05:	mov    al,ds:0xd4a13821
  41fd0b:	fwait
  41fd0c:	daa    
  41fd0d:	add    esp,eax
  41fd0f:	out    0x92,al
  41fd11:	xor    bl,bh
  41fd13:	lock jae 0x41fd7c
  41fd16:	add    DWORD PTR [eax],esi
  41fd18:	and    eax,0x35f4ddf2
  41fd1d:	test   al,0x21
  41fd1f:	sti    
  41fd20:	add    ebx,DWORD PTR [ebx]
  41fd22:	jne    0x41fd8e
  41fd24:	mov    esi,0x47984f40
  41fd29:	call   0x1834:0xb1b5be79
  41fd30:	lea    ebx,[ecx+0x39]
  41fd33:	aad    0x4c
  41fd35:	cli    
  41fd36:	push   0x4cb61c09
  41fd3b:	pop    eax
  41fd3c:	adc    al,0x82
  41fd3e:	inc    eax
  41fd3f:	and    edi,esi
  41fd41:	mov    ds:0xe01d6137,al
  41fd46:	cmp    ecx,eax
  41fd48:	ror    DWORD PTR [edi],0xcd
  41fd4b:	jge    0x41fd5b
  41fd4d:	mov    DWORD PTR [edx+0x24a42b6f],eax
  41fd53:	pop    ecx
  41fd54:	or     eax,DWORD PTR [ebx+0x11569cdf]
  41fd5a:	ins    DWORD PTR es:[edi],dx
  41fd5b:	xchg   DWORD PTR [esp+edx*4-0x29],esi
  41fd5f:	add    bl,bl
  41fd61:	xor    al,0x9
  41fd63:	mov    ebp,0x895485e4
  41fd68:	push   ss
  41fd69:	mov    ebp,DWORD PTR [edi]
  41fd6b:	icebp  
  41fd6c:	ret    
  41fd6d:	repnz repz cwde 
  41fd70:	sbb    ebp,DWORD PTR [esi+0x1e]
  41fd73:	lods   eax,DWORD PTR ds:[esi]
  41fd74:	pop    ds
  41fd75:	loopne 0x41fd38
  41fd77:	scas   eax,DWORD PTR es:[edi]
  41fd78:	in     eax,0x58
  41fd7a:	mov    edx,0x1641590f
  41fd7f:	inc    ebp
  41fd80:	jl     0x41fdab
  41fd82:	leave  
  41fd83:	scas   al,BYTE PTR es:[edi]
  41fd84:	in     al,0x50
  41fd86:	addr16 push cs
  41fd88:	es aaa 
  41fd8a:	xchg   esi,eax
  41fd8b:	mov    dl,0xd9
  41fd8d:	and    DWORD PTR [esi+0x10],0x76754aa0
  41fd94:	mov    bl,0xe4
  41fd96:	mov    bl,0xff
  41fd98:	icebp  
  41fd99:	adc    al,0x43
  41fd9b:	fwait
  41fd9c:	sub    BYTE PTR [ecx-0x1c],0x7b
  41fda0:	push   ecx
  41fda1:	jl     0x41fd30
  41fda3:	jmp    FWORD PTR [edi+eax*4-0x1e87ee23]
  41fdaa:	repz xor dh,BYTE PTR [esi+0x5100ea8a]
  41fdb1:	or     eax,0x2fd6c239
  41fdb6:	mov    es,WORD PTR [edx+0x4d5963be]
  41fdbc:	pusha  
  41fdbd:	sub    DWORD PTR [esi+0x24ddef85],esp
  41fdc3:	js     0x41fd4b
  41fdc5:	and    eax,esp
  41fdc7:	pop    ds
  41fdc8:	idiv   DWORD PTR [ebx]
  41fdca:	fs xchg edx,eax
  41fdcc:	dec    ebx
  41fdcd:	inc    ecx
  41fdce:	das    
  41fdcf:	and    BYTE PTR ds:0x98aead5d,ah
  41fdd5:	cs jge 0x41fe54
  41fdd8:	pop    eax
  41fdd9:	xchg   esp,eax
  41fdda:	sub    ch,BYTE PTR [ebx+0x61956c2e]
  41fde0:	inc    eax
  41fde1:	ret    0x1965
  41fde4:	push   es
  41fde5:	aad    0x23
  41fde7:	pushf  
  41fde8:	lods   al,BYTE PTR ds:[esi]
  41fde9:	add    al,0xe5
  41fdeb:	retf   0x7df8
  41fdee:	ror    DWORD PTR [eax*4-0x75a3e415],cl
  41fdf5:	inc    eax
  41fdf6:	sbb    cl,BYTE PTR [eax]
  41fdf8:	std    
  41fdf9:	or     bl,BYTE PTR [edi]
  41fdfb:	shr    cl,1
  41fdfd:	jle    0x41fdca
  41fdff:	loope  0x41fd89
  41fe01:	rcl    edi,cl
  41fe03:	popf   
  41fe04:	mov    ebx,0x7ee0288d
  41fe09:	mov    ds:0x1edeef01,al
  41fe0e:	test   BYTE PTR [esi+0x8],0xd2
  41fe12:	mov    dl,0x4c
  41fe14:	call   0x80e2679f
  41fe19:	sub    bl,BYTE PTR [ecx-0x21]
  41fe1c:	cmp    eax,0x66c8892f
  41fe21:	pop    ss
  41fe22:	repnz or BYTE PTR [edx+0x18],cl
  41fe26:	scas   eax,DWORD PTR es:[edi]
  41fe27:	push   es
  41fe28:	inc    edx
  41fe29:	iret   
  41fe2a:	pop    edi
  41fe2b:	test   eax,0xae190a0a
  41fe30:	call   0xfe55a0ac
  41fe35:	push   es
  41fe36:	mov    edx,0x3d9afd52
  41fe3b:	inc    esi
  41fe3c:	mov    esi,0x12faf24c
  41fe41:	fnstenv [ecx+ebx*4-0x76694e0b]
  41fe48:	push   edx
  41fe49:	aaa    
  41fe4a:	jbe    0x41fe05
  41fe4c:	clc    
  41fe4d:	pop    ebx
  41fe4e:	stc    
  41fe4f:	inc    edi
  41fe50:	and    eax,0x44769f61
  41fe55:	out    dx,al
  41fe56:	push   esp
  41fe57:	xor    ch,BYTE PTR [ebx+0x29]
  41fe5a:	(bad)  
  41fe5b:	and    al,0xb7
  41fe5d:	jle    0x41fe86
  41fe5f:	ret    
  41fe60:	iret   
  41fe61:	jmp    0x41fe3c
  41fe63:	es cld 
  41fe65:	outs   dx,BYTE PTR ds:[esi]
  41fe66:	jecxz  0x41fe81
  41fe68:	pop    esi
  41fe69:	dec    edi
  41fe6a:	pop    esp
  41fe6b:	add    al,0x9e
  41fe6d:	mov    ds:0x94e5ccb,al
  41fe72:	sbb    edi,DWORD PTR [edi+0xeb749a7]
  41fe78:	es cmp al,0x7b
  41fe7b:	pop    ebp
  41fe7c:	dec    ebp
  41fe7d:	cmp    dl,BYTE PTR [ecx+0xe]
  41fe80:	jb     0x41fe44
  41fe82:	or     cl,0xe3
  41fe85:	stc    
  41fe86:	in     al,dx
  41fe87:	cmp    edx,DWORD PTR [ebx+esi*2-0x4e]
  41fe8b:	dec    esi
  41fe8c:	ret    
  41fe8d:	fisubr DWORD PTR [eax-0x2562045a]
  41fe93:	mov    bl,0x9f
  41fe95:	add    al,0x51
  41fe97:	mov    ecx,0x3e15fd45
  41fe9c:	in     eax,0x46
  41fe9e:	stc    
  41fe9f:	outs   dx,DWORD PTR ds:[esi]
  41fea0:	adc    ah,cl
  41fea2:	mov    edx,0x7e73fc23
  41fea7:	jl     0x41fe3a
  41fea9:	push   es
  41feaa:	sahf   
  41feab:	ins    DWORD PTR es:[edi],dx
  41feac:	inc    ebp
  41fead:	adc    bl,BYTE PTR [ebp+ecx*4-0x45d2e6b2]
  41feb4:	in     eax,0x4e
  41feb6:	call   0x5996:0x40e18e65
  41febd:	jbe    0x41fecd
  41febf:	push   esp
  41fec0:	cmp    DWORD PTR [esi],esp
  41fec2:	inc    eax
  41fec3:	jnp    0x41fef4
  41fec5:	inc    ebp
  41fec6:	(bad)  
  41fec7:	xchg   esi,eax
  41fec8:	inc    eax
  41fec9:	ss mov ah,0xc8
  41fecc:	ins    DWORD PTR es:[edi],dx
  41fecd:	pop    ebp
  41fece:	xchg   ecx,eax
  41fecf:	into   
  41fed0:	add    DWORD PTR [ebx+0x20],ecx
  41fed3:	or     BYTE PTR [eax],0x71
  41fed6:	and    esi,edi
  41fed8:	mov    ecx,0x67afad13
  41fedd:	dec    edx
  41fede:	xchg   ebp,eax
  41fedf:	sar    DWORD PTR [ebx-0x6e],0x51
  41fee3:	retf   
  41fee4:	push   0xffffffd3
  41fee6:	or     al,BYTE PTR [edx+0x52]
  41fee9:	xor    eax,0x1eae7565
  41feee:	mov    esi,0xfdf14d59
  41fef3:	scas   al,BYTE PTR es:[edi]
  41fef4:	cmp    eax,0x765ac5aa
  41fef9:	push   edi
  41fefa:	or     bh,BYTE PTR [eax-0x23f263ac]
  41ff00:	lods   al,BYTE PTR ds:[esi]
  41ff01:	mov    ds:0x1f15324,al
  41ff06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff07:	in     al,0xd4
  41ff09:	xchg   BYTE PTR [esi-0x2f],bh
  41ff0c:	inc    esp
  41ff0d:	dec    ecx
  41ff0e:	and    BYTE PTR [ebx],dl
  41ff10:	fst    QWORD PTR [ecx+0x689328cf]
  41ff16:	cmp    dh,BYTE PTR [esi+0x48018608]
  41ff1c:	ins    BYTE PTR es:[edi],dx
  41ff1d:	js     0x41ff11
  41ff1f:	mov    esi,0xcc6d9fad
  41ff24:	adc    BYTE PTR [edx],ch
  41ff26:	rol    edi,0xc1
  41ff29:	mov    ch,BYTE PTR [ebp-0x5e8959cc]
  41ff2f:	(bad)  
  41ff30:	jno    0x41feea
  41ff32:	and    dl,ah
  41ff34:	sbb    al,0x29
  41ff36:	pop    esp
  41ff37:	je     0x41fee2
  41ff39:	and    BYTE PTR [ecx],0xdf
  41ff3c:	cmp    esp,DWORD PTR ds:0xd6825c71
  41ff42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff43:	mov    edi,0x11facbfc
  41ff48:	jmp    FWORD PTR [edi]
  41ff4a:	push   eax
  41ff4b:	out    dx,eax
  41ff4c:	push   0x1d
	...
  41ff59:	add    BYTE PTR [eax],al
  41ff5b:	add    BYTE PTR [ecx-0x6b36a2],ch
  41ff61:	xchg   edi,eax
  41ff62:	std    
  41ff63:	jg     0x41ff6f
  41ff65:	in     al,0x99
  41ff67:	pop    ecx
  41ff68:	and    eax,0x5c908755
  41ff6d:	jnp    0x41ff70
  41ff6f:	add    BYTE PTR [edx-0x26fffffe],cl
  41ff75:	ficomp WORD PTR [ebp-0x5b]
  41ff78:	jge    0x41ff0b
  41ff7a:	inc    esi
  41ff7b:	shl    BYTE PTR [eax],cl
  41ff7d:	(bad)  
  41ff7e:	fsubr  DWORD PTR [ecx-0x2e]
  41ff81:	cmp    eax,0xbc83d561
  41ff86:	xchg   edi,eax
  41ff87:	imul   ecx,DWORD PTR [edx+0x3e],0xaa2fff56
  41ff8e:	mov    esi,DWORD PTR [esi+0xe31d133]
  41ff94:	into   
  41ff95:	sbb    eax,0x301fe562
  41ff9a:	mov    eax,ds:0xe5cab5ee
  41ff9f:	gs nop
  41ffa1:	cmc    
  41ffa2:	pop    edi
  41ffa3:	dec    esp
  41ffa4:	xchg   BYTE PTR [eax+0xf],dl
  41ffa7:	lock jne 0x420019
  41ffaa:	cdq    
  41ffab:	pushf  
  41ffac:	gs or  BYTE PTR ds:0x450a4aff,dh
  41ffb4:	pop    esi
  41ffb5:	pop    ds
  41ffb6:	(bad)  
  41ffb7:	jge    0x41ffb8
  41ffb9:	cs pop ss
  41ffbb:	dec    ebp
  41ffbc:	test   eax,0x1680ada3
  41ffc1:	and    eax,0x88f64d91
  41ffc6:	sub    ah,bl
  41ffc8:	dec    edi
  41ffc9:	jle    0x41ff5c
  41ffcb:	add    DWORD PTR [eax],ecx
  41ffcd:	and    eax,DWORD PTR [esi-0x5522568]
  41ffd3:	mov    ds:0x76aa332a,al
  41ffd8:	push   ss
  41ffd9:	push   ebx
  41ffda:	jns    0x41ffd2
  41ffdc:	or     al,0x54
  41ffde:	pop    ecx
  41ffdf:	push   es
  41ffe0:	lds    edx,FWORD PTR [esi]
  41ffe2:	mov    ebx,0x763d2355
  41ffe7:	dec    esp
  41ffe8:	fnstcw WORD PTR [ebx-0x1f]
  41ffeb:	mov    ch,0xb8
  41ffed:	rol    DWORD PTR [ebx+edi*4],1
  41fff0:	lds    eax,FWORD PTR [ebp-0x1ca3569d]
  41fff6:	mov    ds:0x2b8c2390,al
  41fffb:	xchg   ebx,eax
  41fffc:	or     BYTE PTR [ecx-0x5bc4887],0xfa
  420003:	cs mov bh,0x77
  420006:	retf   
  420007:	retf   0x2995
  42000a:	fucomip st,st(2)
  42000c:	jge    0x41ffc9
  42000e:	aaa    
  42000f:	add    al,0xa8
  420011:	add    ebp,edi
  420013:	mov    ds:0xcade3997,al
  420018:	push   DWORD PTR [edi]
  42001a:	push   edi
  42001b:	das    
  42001c:	cmp    DWORD PTR [edx],ebp
  42001e:	cmp    al,0x4a
  420020:	jo     0x41ffd9
  420022:	ret    
  420023:	mov    al,ds:0x8fa24105
  420028:	out    dx,eax
  420029:	sbb    eax,0x91fd3f1d
  42002e:	int    0x18
  420030:	loop   0x420080
  420032:	addr16 icebp 
  420034:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420035:	sub    al,0x33
  420037:	mov    cs,WORD PTR [edx-0x24]
  42003a:	sbb    DWORD PTR [esi],edx
  42003c:	inc    esp
  42003d:	push   ebx
  42003e:	mov    bl,0x6a
  420040:	xchg   edi,eax
  420041:	aas    
  420042:	fisttp DWORD PTR [edx]
  420044:	lods   eax,DWORD PTR ds:[esi]
  420045:	sbb    BYTE PTR [eax-0x10],bl
  420048:	lods   eax,DWORD PTR ds:[esi]
  420049:	popf   
  42004a:	sub    DWORD PTR [ecx],edi
  42004c:	popf   
  42004d:	int    0x7c
  42004f:	jmp    0xfba08690
  420054:	out    dx,al
  420055:	add    al,0xd
  420057:	mov    ch,0x77
  420059:	push   ebx
  42005a:	push   0xaf072038
  42005f:	shl    cl,cl
  420061:	cdq    
  420062:	or     DWORD PTR [ebx],eax
  420064:	(bad)  
  420065:	or     al,0x32
  420067:	push   ebx
  420068:	retf   
  420069:	fucomip st,st(6)
  42006b:	mov    ebp,0xa3674dce
  420070:	shl    DWORD PTR [eax+edx*1+0x7def3835],0x95
  420078:	xchg   edi,eax
  420079:	push   ds
  42007a:	xor    eax,0xa3227ef0
  42007f:	pop    esi
  420080:	xchg   BYTE PTR ds:0x378daf6f,cl
  420086:	outs   dx,BYTE PTR ds:[esi]
  420087:	lds    ecx,FWORD PTR [eax]
  420089:	jns    0x4200e3
  42008b:	in     al,dx
  42008c:	add    edi,edi
  42008e:	xlat   BYTE PTR ds:[ebx]
  42008f:	push   0x5e
  420091:	(bad)  
  420092:	xor    eax,0xcb228341
  420097:	lods   eax,DWORD PTR ds:[esi]
  420098:	inc    ebp
  420099:	mov    ch,0xc9
  42009b:	(bad)  
  42009c:	cmp    ebx,DWORD PTR [ebp-0x6861309b]
  4200a2:	inc    ebx
  4200a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200a4:	das    
  4200a5:	aas    
  4200a6:	dec    edx
  4200a7:	das    
  4200a8:	pop    edi
  4200a9:	push   eax
  4200aa:	mov    ebx,0x63b6bb02
  4200af:	loop   0x4200b8
  4200b1:	cmc    
  4200b2:	xchg   ecx,eax
  4200b3:	sar    dh,0x44
  4200b6:	stos   DWORD PTR es:[edi],eax
  4200b7:	push   cs
  4200b8:	neg    BYTE PTR [eax+0x7ab4a3a3]
  4200be:	inc    ecx
  4200bf:	mov    edi,0xf99e12df
  4200c4:	scas   al,BYTE PTR es:[edi]
  4200c5:	push   ds
  4200c6:	minps  xmm7,XMMWORD PTR ss:[ecx+0x3683eec0]
  4200ce:	in     al,dx
  4200cf:	push   esp
  4200d0:	lods   al,BYTE PTR ds:[esi]
  4200d1:	pop    edx
  4200d2:	rol    BYTE PTR [eax],0x1a
  4200d5:	mov    cl,0x46
  4200d7:	push   edi
  4200d8:	xor    al,0x83
  4200da:	xlat   BYTE PTR ds:[ebx]
  4200db:	dec    eax
  4200dc:	jb     0x420076
  4200de:	mov    al,0x39
  4200e0:	inc    ecx
  4200e1:	pop    ebx
  4200e2:	retf   
  4200e3:	pop    ss
  4200e4:	pop    ebx
  4200e5:	xor    al,0x90
  4200e7:	push   ecx
  4200e8:	popa   
  4200e9:	push   ecx
  4200ea:	mov    dh,0x94
  4200ec:	je     0x4200ae
  4200ee:	arpl   si,di
  4200f0:	adc    eax,0x4622ff46
  4200f5:	fmul   st(4),st
  4200f7:	scas   al,BYTE PTR es:[edi]
  4200f8:	dec    esi
  4200f9:	fsubr  QWORD PTR ds:0xfcc98667
  4200ff:	add    BYTE PTR ds:0x42345bf2,al
  420105:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420107:	inc    ebx
  420108:	(bad)  
  420109:	ds leave 
  42010b:	(bad)  
  42010c:	shr    DWORD PTR [ebp-0x24],0xea
  420110:	leave  
  420111:	jmp    0xed59:0xd678de6a
  420118:	jl     0x420140
  42011a:	mov    esi,0x9c9f94e
  42011f:	imul   eax,DWORD PTR [esi+0x18a09631],0xffffff99
  420126:	outs   dx,DWORD PTR ds:[esi]
  420127:	fsub   QWORD PTR [eax]
  420129:	icebp  
  42012a:	push   0xffffffa8
  42012c:	clc    
  42012d:	cld    
  42012e:	mov    BYTE PTR [edx+ebp*4-0x1b0dc185],al
  420135:	out    dx,eax
  420136:	cmp    eax,0x5fd42ee1
  42013b:	cdq    
  42013c:	cdq    
  42013d:	js     0x420137
  42013f:	shl    DWORD PTR [eiz*1-0x5960876e],0x40
  420147:	inc    ebx
  420148:	xor    al,0x80
  42014a:	bound  esp,QWORD PTR [edi-0x1b]
  42014d:	xor    ebp,DWORD PTR [eax]
  42014f:	cld    
  420150:	int3   
  420151:	ret    
  420152:	sub    DWORD PTR [edx+0x47765e4d],ebp
  420158:	jecxz  0x420158
  42015a:	scas   eax,DWORD PTR es:[edi]
  42015b:	dec    edx
  42015c:	and    esi,edi
  42015e:	int3   
  42015f:	mov    ch,0x55
  420161:	into   
  420162:	mov    esi,esp
  420164:	out    dx,al
  420165:	push   ebp
  420166:	sub    al,0x54
  420168:	add    eax,0x437709f6
  42016d:	test   BYTE PTR [edx],dh
  42016f:	outs   dx,BYTE PTR ds:[esi]
  420170:	dec    ebp
  420171:	(bad)  
  420172:	xchg   esi,eax
  420173:	sub    ah,BYTE PTR [eax-0x51b3dade]
  420179:	sub    eax,0x297d6d01
  42017e:	lea    esi,[ebx+edx*8+0xe57df87]
  420185:	fstp   QWORD PTR [edi+0x59]
  420188:	(bad)
  42018b:	mov    edi,0x3b415920
  420190:	push   0xffffffa6
  420192:	ins    DWORD PTR es:[edi],dx
  420193:	mov    cl,0x40
  420195:	inc    eax
  420196:	xor    al,0xcf
  420198:	cmp    DWORD PTR cs:[edi+0x62],ebp
  42019c:	or     al,0x7e
  42019e:	cmp    eax,0x395c5aac
  4201a3:	lods   eax,DWORD PTR ds:[esi]
  4201a4:	dec    ebp
  4201a5:	jg     0x42019d
  4201a7:	ins    DWORD PTR es:[edi],dx
  4201a8:	popa   
  4201a9:	and    al,0xad
  4201ab:	push   ebp
  4201ac:	lea    esp,[ebp-0x24]
  4201af:	mov    cl,0x5a
  4201b1:	in     eax,0x9e
  4201b3:	xor    al,dh
  4201b5:	inc    eax
  4201b6:	cwde   
  4201b7:	jnp    0x420164
  4201b9:	mov    dh,0xd1
  4201bb:	dec    ecx
  4201bc:	scas   eax,DWORD PTR es:[edi]
  4201bd:	sbb    edx,DWORD PTR [ebx]
  4201bf:	jo     0x420154
  4201c1:	pop    ss
  4201c2:	test   dh,ah
  4201c4:	lea    eax,[ebx+0x4fd98b2f]
  4201ca:	mov    ds:0x9a4fc0e6,eax
  4201cf:	push   0x939e7758
  4201d4:	gs adc ah,cl
  4201d7:	pop    edx
  4201d8:	(bad)  
  4201d9:	push   ecx
  4201da:	cdq    
  4201db:	and    bl,cl
  4201dd:	or     BYTE PTR [eax-0x4ac2cba6],bh
  4201e3:	adc    bh,BYTE PTR [ebp+0xa]
  4201e6:	sub    DWORD PTR [eax-0x26be702f],edi
  4201ec:	int    0x82
  4201ee:	sub    esp,DWORD PTR [ebx]
  4201f0:	mov    ds:0x62f09db3,eax
  4201f5:	ja     0x420238
  4201f7:	mov    ah,0xc3
  4201f9:	push   esp
  4201fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201fb:	sbb    DWORD PTR [eax+0x1b],ebp
	...
  42020a:	add    BYTE PTR [eax],al
  42020c:	mov    ebx,0x7d7539cf
  420211:	idiv   edi
  420213:	iret   
  420214:	std    
  420215:	mov    ecx,DWORD PTR [esi-0x4fd4c0f1]
  42021b:	mov    ch,0xe6
  42021d:	jge    0x420220
  42021f:	add    BYTE PTR [edx-0xfffffe],cl
  420225:	into   
  420226:	outs   dx,BYTE PTR ds:[esi]
  420227:	imul   ebx,edx,0xcd48f1bc
  42022d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42022e:	adc    ch,BYTE PTR [ebp-0x43]
  420231:	xchg   cl,al
  420233:	in     eax,dx
  420234:	aad    0x2
  420236:	jge    0x42025a
  420238:	and    eax,0x363be738
  42023d:	push   cs
  42023e:	dec    edx
  42023f:	std    
  420240:	test   al,0x3
  420242:	mov    bh,0xa7
  420244:	es or  eax,0xdd192b71
  42024a:	(bad)  
  42024b:	int3   
  42024c:	adc    ecx,esi
  42024e:	aam    0x2d
  420250:	test   al,0xa5
  420252:	lea    esp,[ebx-0x3d]
  420255:	and    bh,BYTE PTR [bp+di]
  420258:	cmp    esi,DWORD PTR [ebx-0x1f987378]
  42025e:	fcom   QWORD PTR [ecx-0x11]
  420261:	gs pop edi
  420263:	je     0x42021d
  420265:	push   0x5d470071
  42026a:	mov    ah,0xbb
  42026c:	mov    esp,0xe77a50ef
  420271:	cmp    dl,BYTE PTR [edx]
  420273:	pusha  
  420274:	add    eax,0x2dded7e0
  420279:	out    0xae,al
  42027b:	push   ss
  42027c:	jmp    0x87a2bdd0
  420281:	loopne 0x42026d
  420283:	jns    0x420228
  420285:	push   ebx
  420286:	(bad)  
  420287:	hlt    
  420288:	pop    ebx
  420289:	pop    edx
  42028a:	into   
  42028b:	addr16 cs mov eax,0x92719cca
  420292:	fist   WORD PTR [ebp+0x36f2b5f9]
  420298:	xchg   edx,eax
  420299:	in     eax,0xc
  42029b:	loope  0x42024d
  42029d:	cmp    DWORD PTR [edx+edx*1-0x3cd48c76],0xf
  4202a5:	imul   edx,DWORD PTR [esi-0x4f],0x4cf14f66
  4202ac:	add    al,dh
  4202ae:	push   es
  4202af:	shl    DWORD PTR [ebp-0x6a],cl
  4202b2:	loope  0x4202eb
  4202b4:	cmp    eax,0x8e53be47
  4202b9:	fldenv [ebp+0x60365c21]
  4202bf:	adc    DWORD PTR [esi+0x1d],0x68d2e40c
  4202c6:	xchg   esi,eax
  4202c7:	pop    es
  4202c8:	(bad)  
  4202c9:	std    
  4202ca:	gs loopne 0x4202d9
  4202cd:	shl    BYTE PTR [edx+edi*2-0x79ab1e66],1
  4202d4:	clc    
  4202d5:	scas   eax,DWORD PTR es:[edi]
  4202d6:	cli    
  4202d7:	out    dx,al
  4202d8:	shr    BYTE PTR [eax],0x1b
  4202db:	ins    DWORD PTR es:[edi],dx
  4202dc:	pop    ds
  4202dd:	ins    DWORD PTR es:[edi],dx
  4202de:	jne    0x42033e
  4202e0:	lds    edi,FWORD PTR [esi+0x5973bf57]
  4202e6:	or     BYTE PTR [ebp-0xe],ch
  4202e9:	outs   dx,BYTE PTR ds:[esi]
  4202ea:	mov    dh,0x17
  4202ec:	outs   dx,BYTE PTR ds:[esi]
  4202ed:	add    ch,al
  4202ef:	iret   
  4202f0:	mov    ebp,0xa0f8ade9
  4202f5:	jge    0x420307
  4202f7:	push   eax
  4202f8:	lock retf 
  4202fa:	jl     0x4202f3
  4202fc:	fsub   st,st(1)
  4202fe:	imul   edi,DWORD PTR [eax-0x15b66913],0xffffffe1
  420305:	pusha  
  420306:	and    edi,DWORD PTR [ecx+eax*2-0x41]
  42030a:	sbb    al,0x28
  42030c:	enter  0x5e6e,0x68
  420310:	(bad)
  420313:	xor    ch,BYTE PTR [eax-0x27]
  420316:	sub    al,0xa2
  420318:	cmp    eax,0x6ed99802
  42031d:	mov    bl,0xcc
  42031f:	cmp    DWORD PTR [esi-0x8c27f57],0xffffffaf
  420326:	jle    0x420366
  420328:	xor    DWORD PTR [edi-0x6f],ecx
  42032b:	push   ebx
  42032c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42032d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42032e:	dec    edx
  42032f:	inc    ecx
  420330:	shr    BYTE PTR [ecx+0x4874bd5],1
  420336:	loop   0x420332
  420338:	fs mov edx,0xaa82d173
  42033e:	shl    DWORD PTR [esi-0x3a30bb12],0x69
  420345:	popf   
  420346:	push   0x5adf5ebc
  42034b:	out    dx,al
  42034c:	or     cl,BYTE PTR ds:0x6be687d1
  420352:	mov    al,0xd2
  420354:	add    DWORD PTR [edx+ecx*1-0x2d],ebx
  420358:	or     al,0x53
  42035a:	xchg   edi,eax
  42035b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42035c:	lea    ebp,[esi+0x17]
  42035f:	xor    eax,0x15bd805e
  420364:	push   esp
  420365:	jmp    0x420387
  420367:	in     al,dx
  420368:	pop    ss
  420369:	outs   dx,DWORD PTR ds:[esi]
  42036a:	fcom   DWORD PTR [ebx+0x36b34c5a]
  420370:	pop    eax
  420371:	sbb    DWORD PTR [eax],esp
  420373:	push   ebp
  420374:	dec    edx
  420375:	pop    es
  420376:	add    al,0xd9
  420378:	ss ret 
  42037a:	popa   
  42037b:	jmp    0x987c:0x5707ec5d
  420382:	add    BYTE PTR [edi-0x7f],0x7e
  420386:	add    esp,DWORD PTR [ebp+0x28]
  420389:	test   al,0x7a
  42038b:	mov    dh,0xc5
  42038d:	inc    esi
  42038e:	push   eax
  42038f:	in     al,dx
  420390:	mov    al,ds:0xbfd5345e
  420395:	enter  0xa34e,0xcd
  420399:	mov    dh,0x71
  42039b:	out    dx,al
  42039c:	repz sub BYTE PTR ss:[esi+ebp*2+0x5e],dl
  4203a2:	mov    ch,0xdf
  4203a4:	loop   0x42034d
  4203a6:	out    dx,al
  4203a7:	aad    0xb2
  4203a9:	hlt    
  4203aa:	or     BYTE PTR [ebx-0x27],cl
  4203ad:	adc    al,0x7c
  4203af:	data16 sar dh,cl
  4203b2:	mov    ebp,DWORD PTR [ecx]
  4203b4:	add    DWORD PTR [edi],0xffffffae
  4203b7:	jnp    0x4203e9
  4203b9:	mov    ebp,0xcba59d23
  4203be:	mov    eax,ds:0xb8145403
  4203c3:	(bad)  
  4203c4:	xchg   ebx,eax
  4203c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203c6:	sub    ecx,0x5b
  4203c9:	and    al,0xac
  4203cb:	jns    0x42038c
  4203cd:	fdivr  QWORD PTR [ecx+esi*4-0x35ffb8b6]
  4203d4:	pop    eax
  4203d5:	adc    dl,ch
  4203d7:	jnp    0x4203d4
  4203d9:	fyl2xp1 
  4203db:	es int 0x2e
  4203de:	mov    esi,0xd5601358
  4203e3:	fnsave [esi-0x185e22c7]
  4203e9:	les    ecx,FWORD PTR [ebp+0x5e8b8932]
  4203ef:	or     DWORD PTR [ecx+0x4b1b32b2],esp
  4203f5:	sub    DWORD PTR [edx+0x37],0x9c2c8a58
  4203fc:	adc    DWORD PTR [eax-0x1e123a05],0x6f
  420403:	int    0xcd
  420405:	dec    esi
  420406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420407:	shl    esp,0x2
  42040a:	sub    eax,0xd9f410b5
  42040f:	add    al,BYTE PTR [ebp+esi*4-0x454ed85d]
  420416:	jge    0x4203db
  420418:	cmp    esi,0x1b9fb39f
  42041e:	jo     0x420429
  420420:	pop    ss
  420421:	and    al,BYTE PTR [esi+0x1a]
  420424:	jle    0x4203af
  420426:	and    al,0x36
  420428:	pop    ds
  420429:	icebp  
  42042a:	rol    esp,1
  42042c:	xchg   BYTE PTR [eax],bh
  42042e:	pusha  
  42042f:	mov    DWORD PTR [ebp+0x398b29a4],eax
  420435:	ss pushf 
  420437:	iret   
  420438:	sbb    ah,dl
  42043a:	fisubr WORD PTR [edi]
  42043c:	inc    ebp
  42043d:	sti    
  42043e:	mov    ds:0x6a17b934,eax
  420443:	in     eax,dx
  420444:	(bad)  
  420445:	stos   DWORD PTR es:[edi],eax
  420446:	cmp    ah,BYTE PTR [ebp-0x316b4d5c]
  42044c:	add    ecx,DWORD PTR [esi+0x2a]
  42044f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420450:	fidivr WORD PTR [ecx]
  420452:	mov    edx,DWORD PTR [esp+ebx*2]
  420455:	push   cs
  420456:	push   ss
  420457:	sub    DWORD PTR [ebp+0x70d745d3],ecx
  42045d:	pop    esp
  42045e:	sbb    esp,DWORD PTR [edx+0x592c4ca6]
  420464:	inc    eax
  420465:	or     ah,BYTE PTR [edi-0x5c]
  420468:	(bad)  
  42046a:	fwait
  42046b:	sti    
  42046c:	stc    
  42046d:	pop    ebp
  42046e:	push   0xffffffe6
  420470:	std    
  420471:	outs   dx,BYTE PTR ds:[esi]
  420472:	sub    al,0xd5
  420474:	mov    eax,ds:0x85df3e44
  420479:	stos   BYTE PTR es:[edi],al
  42047a:	cmp    eax,0xf79f4169
  42047f:	adc    eax,0xe2249303
  420484:	inc    esi
  420485:	push   edx
  420486:	push   0xb1fdfbe3
  42048b:	(bad)  [edx-0x65]
  42048e:	mov    al,ds:0xedb19ea4
  420493:	cmp    ah,BYTE PTR [eax-0x75feb960]
  420499:	dec    edx
  42049a:	inc    eax
  42049b:	or     cl,BYTE PTR [ebx+0x5bc1872a]
  4204a1:	mov    ah,ch
  4204a3:	dec    esp
  4204a4:	cwde   
  4204a5:	adc    BYTE PTR [ecx+0x75],al
  4204a8:	retf   
  4204a9:	test   eax,0x2ebd83f4
	...
  4204ba:	add    BYTE PTR [eax],al
  4204bc:	out    dx,al
  4204bd:	ret    0x2d9d
  4204c0:	mov    ebp,0x3fc3fe7f
  4204c5:	out    dx,eax
  4204c6:	mov    edi,0x607a0f37
  4204cb:	pop    ds
  4204cc:	jo     0x42044e
  4204ce:	add    DWORD PTR [eax],eax
  4204d0:	mov    al,BYTE PTR [edx]
  4204d2:	add    BYTE PTR [eax],al
  4204d4:	gs leave 
  4204d6:	pop    ecx
  4204d7:	pop    ebp
  4204d8:	dec    esi
  4204d9:	dec    eax
  4204da:	pop    eax
  4204db:	sbb    eax,0x4a31a9c7
  4204e0:	inc    esp
  4204e1:	fcomp  QWORD PTR [ebx-0x4d]
  4204e4:	lods   al,BYTE PTR ds:[esi]
  4204e5:	push   cs
  4204e6:	cmp    esi,DWORD PTR [ebx+edi*2-0x7835d3c8]
  4204ed:	or     ebp,DWORD PTR [ecx+0x3bab696]
  4204f3:	(bad)  
  4204f4:	xor    dh,ch
  4204f6:	std    
  4204f7:	in     al,0x7f
  4204f9:	pop    ebx
  4204fa:	sub    al,0xdb
  4204fc:	fcom   DWORD PTR [ecx+0x70]
  4204ff:	cdq    
  420500:	mov    al,0xe8
  420502:	nop
  420503:	sub    BYTE PTR [ebp+0x77],dh
  420506:	ins    BYTE PTR es:[edi],dx
  420507:	mov    BYTE PTR [ecx],cl
  420509:	push   ebp
  42050a:	jne    0x42048c
  42050c:	out    0xfd,eax
  42050e:	xor    eax,0x9df98538
  420513:	test   DWORD PTR [edi+0x1b],edx
  420516:	stos   BYTE PTR es:[edi],al
  420517:	add    cl,0x43
  42051a:	mov    eax,0xb642619
  42051f:	(bad)  
  420520:	ja     0x420555
  420522:	push   0x76
  420524:	or     al,0xac
  420526:	sbb    esp,ebx
  420528:	sti    
  420529:	lock icebp 
  42052b:	cmp    dh,BYTE PTR [esi+0xb48aec7]
  420531:	sub    al,dh
  420533:	mov    bl,0x3d
  420535:	pop    es
  420536:	adc    BYTE PTR [ecx-0x332f38f1],bh
  42053c:	cwde   
  42053d:	lock retf 
  42053f:	nop
  420540:	inc    esi
  420541:	enter  0x2a13,0x5c
  420545:	or     ebx,ebp
  420547:	mov    ds:0xa319d787,al
  42054c:	inc    esi
  42054d:	adc    al,0x50
  42054f:	repnz push eax
  420551:	fnstenv [ebx+esi*1-0x55]
  420555:	lahf   
  420556:	cmp    eax,DWORD PTR ds:[edi-0x27057ff8]
  42055d:	push   ds
  42055e:	ins    BYTE PTR es:[edi],dx
  42055f:	test   dh,al
  420561:	mov    edx,0xca945758
  420566:	adc    al,0x3d
  420568:	fild   WORD PTR [ecx]
  42056a:	adc    cl,cl
  42056c:	push   ebp
  42056d:	and    DWORD PTR [esi+edx*1+0x2b],ebx
  420571:	gs sub al,0x27
  420574:	icebp  
  420575:	xchg   ebx,eax
  420576:	inc    edx
  420577:	test   BYTE PTR [edi-0x2],0x2f
  42057b:	cld    
  42057c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42057d:	pop    esi
  42057e:	scas   eax,DWORD PTR es:[edi]
  42057f:	jne    0x4205d8
  420581:	fwait
  420582:	outs   dx,DWORD PTR ds:[esi]
  420583:	add    DWORD PTR [edx],0xffffffb8
  420586:	adc    DWORD PTR [ecx+0x6aa3acae],ebp
  42058c:	loope  0x420546
  42058e:	mov    WORD PTR [eax+0x3aeba8b4],gs
  420594:	daa    
  420595:	push   eax
  420596:	push   esp
  420597:	std    
  420598:	aam    0x9c
  42059a:	add    al,0x21
  42059c:	push   cs
  42059d:	adc    cl,BYTE PTR [eax-0x14]
  4205a0:	aas    
  4205a1:	in     al,0xa5
  4205a3:	push   cs
  4205a4:	rol    DWORD PTR [edx-0x2d310022],cl
  4205aa:	push   edx
  4205ab:	push   ecx
  4205ac:	pop    ss
  4205ad:	or     eax,0xa36cebc9
  4205b2:	cli    
  4205b3:	ds cmp edi,ebp
  4205b6:	jp     0x4205ae
  4205b8:	dec    ebx
  4205b9:	push   ebx
  4205ba:	push   esp
  4205bb:	pushf  
  4205bc:	pop    ebx
  4205bd:	lea    ecx,[esi]
  4205bf:	(bad)  
  4205c1:	outs   dx,DWORD PTR ds:[esi]
  4205c2:	push   esi
  4205c3:	push   esi
  4205c4:	push   edx
  4205c5:	loopne 0x420593
  4205c7:	cmp    esi,ebp
  4205c9:	dec    edx
  4205ca:	mov    ebx,0x642b1ba5
  4205cf:	das    
  4205d0:	scas   eax,DWORD PTR es:[edi]
  4205d1:	jmp    0x5bc36023
  4205d6:	push   DWORD PTR [ebx]
  4205d8:	js     0x4205f3
  4205da:	imul   esp,DWORD PTR [edi+0x563e0320],0x72903db6
  4205e4:	sbb    DWORD PTR [ebp-0x568ba61],ecx
  4205ea:	clc    
  4205eb:	and    dh,BYTE PTR [ebp-0x3540e9f]
  4205f1:	mov    ecx,0x10777e1c
  4205f6:	loopne 0x42061f
  4205f8:	push   ecx
  4205f9:	mov    al,BYTE PTR [ebp+0x4c]
  4205fc:	bound  edi,QWORD PTR [ecx-0x3dbe56c]
  420602:	push   es
  420603:	cli    
  420604:	cmc    
  420605:	sub    esp,DWORD PTR [ecx]
  420607:	sub    esp,DWORD PTR [edx+ebp*8]
  42060a:	ss fs mov dl,0xb8
  42060e:	xchg   ebp,eax
  42060f:	jge    0x420685
  420611:	lods   al,BYTE PTR ds:[esi]
  420612:	push   ebx
  420613:	pop    esp
  420614:	cmp    DWORD PTR [edx],edx
  420616:	mov    edi,0xff206329
  42061b:	add    al,0xb9
  42061d:	outs   dx,DWORD PTR ds:[esi]
  42061e:	push   ecx
  42061f:	into   
  420620:	into   
  420621:	xor    eax,0xa28044da
  420626:	dec    ebp
  420627:	les    edx,FWORD PTR [ebp+0x26]
  42062a:	add    bl,BYTE PTR [ebp+0x37]
  42062d:	cld    
  42062e:	lods   al,BYTE PTR ds:[esi]
  42062f:	mul    BYTE PTR [esi+0x20c8b84d]
  420635:	add    DWORD PTR [edi-0x3401ec5f],ebx
  42063b:	out    dx,al
  42063c:	xlat   BYTE PTR ds:[ebx]
  42063d:	cdq    
  42063e:	sbb    al,0x5d
  420640:	push   es
  420641:	scas   eax,DWORD PTR es:[edi]
  420642:	sbb    al,0xfa
  420644:	add    ebp,DWORD PTR [eax+edx*2]
  420647:	stc    
  420648:	ror    DWORD PTR [ecx],cl
  42064a:	retf   0xf2d6
  42064d:	call   0xdac6:0xca036e15
  420654:	ret    0x1bce
  420657:	push   ds
  420658:	sbb    ch,0xaa
  42065b:	push   cs
  42065c:	sbb    al,BYTE PTR [ecx+0xb]
  42065f:	rcr    al,cl
  420661:	and    ch,ah
  420663:	pushf  
  420664:	jmp    0xec71e8ff
  420669:	push   ss
  42066a:	mov    esp,0x6ffa1013
  42066f:	push   es
  420670:	jp     0x4205f4
  420672:	lods   al,BYTE PTR ds:[esi]
  420673:	cld    
  420674:	sar    edi,0xbd
  420677:	pop    ebp
  420678:	pop    esi
  420679:	push   es
  42067a:	test   DWORD PTR [ebx],ebx
  42067c:	ds mov ecx,0xa9c08e30
  420682:	jo     0x42065e
  420684:	mov    ah,0xa4
  420686:	cmc    
  420687:	test   eax,0xda2fa363
  42068c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42068d:	push   ss
  42068e:	fs pop ss
  420690:	shl    BYTE PTR [eax-0x7f861c51],0x52
  420697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420698:	lds    esp,FWORD PTR [ebx+esi*2-0x3730fda4]
  42069f:	sar    BYTE PTR [ebp-0x3f],0xe0
  4206a3:	out    dx,eax
  4206a4:	jbe    0x420659
  4206a6:	add    al,0xa8
  4206a9:	pop    ecx
  4206aa:	sub    eax,edi
  4206ac:	and    edi,0x9f58d750
  4206b2:	arpl   cx,bp
  4206b4:	aad    0xf5
  4206b6:	cmp    eax,0x7f72903f
  4206bb:	sbb    ecx,ecx
  4206bd:	retf   0xcfab
  4206c0:	in     eax,0xeb
  4206c2:	xor    al,0x8e
  4206c4:	push   esp
  4206c5:	mov    edx,0x52104775
  4206ca:	mov    ds:0xcfbfeabd,eax
  4206cf:	retf   0xeb74
  4206d2:	retf   
  4206d3:	(bad)  
  4206d4:	cli    
  4206d5:	and    DWORD PTR [ebx],ebx
  4206d7:	mov    cl,0xd3
  4206d9:	(bad)  
  4206da:	xchg   esp,eax
  4206db:	jle    0x420681
  4206dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206de:	xchg   edi,eax
  4206df:	inc    ecx
  4206e0:	lahf   
  4206e1:	into   
  4206e2:	out    0x42,al
  4206e4:	mov    esi,DWORD PTR [ecx]
  4206e6:	addr16 push ebx
  4206e8:	cld    
  4206e9:	imul   edx,DWORD PTR [ebx+0x23fa9b85],0xffffffa1
  4206f0:	jno    0x420721
  4206f2:	push   ecx
  4206f3:	je     0x420745
  4206f5:	shl    BYTE PTR [ebx],1
  4206f7:	stos   DWORD PTR es:[edi],eax
  4206f8:	arpl   WORD PTR [edx-0x43],ax
  4206fb:	and    al,0x36
  4206fd:	std    
  4206fe:	ret    
  4206ff:	jl     0x4206c0
  420701:	pop    ecx
  420702:	inc    ecx
  420703:	and    BYTE PTR [ebp+0xd],dl
  420706:	and    BYTE PTR [ebp-0x686fb325],bh
  42070c:	cld    
  42070d:	and    bh,BYTE PTR [edx-0x57039058]
  420713:	xor    BYTE PTR [esi+0x7e596f0e],cl
  420719:	daa    
  42071a:	xor    bh,cl
  42071c:	and    al,0x66
  42071e:	ins    DWORD PTR es:[edi],dx
  42071f:	mov    ebx,0xca532bfd
  420724:	aad    0xe8
  420726:	mov    edi,0x9e7c55f2
  42072b:	or     DWORD PTR [eax-0x6da071e1],esp
  420731:	daa    
  420732:	xchg   esp,eax
  420733:	div    DWORD PTR ds:0x37e624fc
  420739:	mov    ds:0xe325121f,al
  42073e:	rcr    BYTE PTR [ecx+0x70],1
  420741:	or     dl,al
  420743:	mov    al,0x61
  420745:	shl    BYTE PTR [eax-0x16],cl
  420748:	cmp    DWORD PTR [edx+0x6],esi
  42074b:	mov    al,ds:0x6bf22301
  420750:	das    
  420751:	cmp    DWORD PTR [ebx+0x20d2c178],esi
  420757:	fisubr WORD PTR [ebp+0x31919aca]
  42075d:	and    eax,0x0
	...
  42076a:	add    BYTE PTR [eax],al
  42076c:	push   ebx
  42076d:	(bad)  
  42076e:	(bad)  
  42076f:	push   esi
  420770:	(bad)  
  420771:	jle    0x42076e
  420773:	xlat   BYTE PTR ds:[ebx]
  420774:	outs   dx,DWORD PTR ds:[esi]
  420775:	mov    ah,0x77
  420777:	call   0x82fa:0xa1d64567
  42077e:	add    DWORD PTR [eax],eax
  420780:	mov    al,BYTE PTR [edx]
  420782:	add    BYTE PTR [eax],al
  420784:	test   DWORD PTR [edi-0x3954b602],ebx
  42078a:	mov    edx,0xcbafb33d
  42078f:	loop   0x4207f0
  420791:	or     DWORD PTR [ecx],esi
  420793:	xchg   ecx,eax
  420794:	xor    BYTE PTR [eax-0x41],cl
  420797:	push   cs
  420798:	pop    ecx
  420799:	fwait
  42079a:	xor    al,0xfd
  42079c:	shr    DWORD PTR [ecx+0x40],cl
  42079f:	cmp    DWORD PTR [eax-0x3a7cf43b],0x307c617e
  4207a9:	jle    0x4207ed
  4207ab:	shl    DWORD PTR [esp+eax*8],1
  4207ae:	retf   0x7a1b
  4207b1:	div    BYTE PTR [edi-0xb075e7]
  4207b7:	lods   al,BYTE PTR ds:[esi]
  4207b8:	jle    0x4207e3
  4207ba:	(bad)  [esi-0x73]
  4207bd:	pop    esp
  4207be:	cmc    
  4207bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207c0:	jno    0x42083a
  4207c2:	sbb    eax,0xdb2851b7
  4207c7:	pop    es
  4207c8:	and    ch,BYTE PTR [edx-0x23cbf2f4]
  4207ce:	dec    esi
  4207cf:	jmp    0xc5b9dac8
  4207d4:	and    eax,0xe7a97897
  4207d9:	adc    dh,bh
  4207db:	pop    ebx
  4207dc:	lods   eax,DWORD PTR ds:[esi]
  4207dd:	test   BYTE PTR [esi-0x20],dh
  4207e0:	shl    DWORD PTR [esp+0x6b],cl
  4207e4:	je     0x420860
  4207e6:	sbb    DWORD PTR [ebx-0x43],esi
  4207e9:	add    eax,0xb786d082
  4207ee:	ja     0x4207c2
  4207f0:	dec    ebp
  4207f1:	jnp    0x420803
  4207f3:	ins    DWORD PTR es:[edi],dx
  4207f4:	inc    ebx
  4207f5:	dec    esi
  4207f6:	xor    edx,DWORD PTR ss:[edi]
  4207f9:	pop    es
  4207fa:	int3   
  4207fb:	lods   al,BYTE PTR ds:[esi]
  4207fc:	jp     0x42082f
  4207fe:	mov    cs,WORD PTR [ebp+edx*1-0x2c1f778f]
  420805:	sbb    DWORD PTR [eax],eax
  420807:	repnz imul edi,ebx,0x1d
  42080b:	repnz inc esi
  42080d:	xlat   BYTE PTR ds:[ebx]
  42080e:	mov    ecx,0x9e483208
  420813:	js     0x42085d
  420815:	loopne 0x420890
  420817:	pop    ebp
  420818:	ret    0x61d5
  42081b:	jle    0x42083c
  42081d:	addr16 push ecx
  42081f:	dec    ebp
  420820:	mov    fs,WORD PTR [edi+edx*8+0x6fc598b]
  420827:	adc    edx,DWORD PTR [ecx]
  420829:	lahf   
  42082a:	cmp    ebp,DWORD PTR [ebx-0x13]
  42082d:	or     al,BYTE PTR [eax]
  42082f:	xlat   BYTE PTR ds:[ebx]
  420830:	jmp    0x7da0b00c
  420835:	pop    ebp
  420836:	inc    esi
  420837:	sti    
  420838:	mov    edi,0xa319d092
  42083d:	addr16 push eax
  42083f:	popa   
  420840:	imul   edx,DWORD PTR [ebx+0x21],0x22
  420844:	sti    
  420845:	outs   dx,BYTE PTR ds:[esi]
  420846:	scas   eax,DWORD PTR es:[edi]
  420847:	call   0x2c12a50d
  42084c:	retf   0x4372
  42084f:	or     al,BYTE PTR [ecx-0x6976c052]
  420855:	lahf   
  420856:	(bad)  
  420857:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420858:	xchg   esi,eax
  420859:	sti    
  42085a:	and    dh,BYTE PTR [ebp+0x4d]
  42085d:	nop
  42085e:	push   edi
  42085f:	out    0x41,al
  420861:	xlat   BYTE PTR ds:[ebx]
  420862:	inc    ebx
  420863:	inc    esi
  420864:	fwait
  420865:	jno    0x4207e9
  420867:	ins    DWORD PTR es:[edi],dx
  420868:	je     0x420856
  42086a:	push   eax
  42086b:	in     eax,dx
  42086c:	aas    
  42086d:	xor    DWORD PTR [eax+0x3df955e0],0xc09a30bb
  420877:	int3   
  420878:	popf   
  420879:	rcr    DWORD PTR [edx+0x73],1
  42087c:	pop    edx
  42087d:	dec    edx
  42087e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42087f:	stc    
  420880:	or     BYTE PTR [edi-0x3d],0xd2
  420884:	mov    bl,BYTE PTR [edx+0x17]
  420887:	cwde   
  420888:	call   0x42e9:0xfdd00ae1
  42088f:	rcr    al,1
  420891:	retf   
  420892:	adc    DWORD PTR [ebp+0x190241b7],esp
  420898:	(bad)  
  420899:	idiv   BYTE PTR [esi-0x4]
  42089c:	sub    al,BYTE PTR [edx+edx*1]
  42089f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208a0:	cmp    DWORD PTR [ebp+ebx*1-0x34eab835],ecx
  4208a7:	jmp    0x420905
  4208a9:	cwde   
  4208aa:	les    cx,DWORD PTR [eax+0xc]
  4208ae:	jno    0x420877
  4208b0:	fstp   DWORD PTR [ecx+0x37]
  4208b3:	cli    
  4208b4:	ss mov ebp,0xcce1362d
  4208ba:	dec    eax
  4208bb:	cmp    eax,0x42a4303a
  4208c0:	mov    esi,0xe0754cbd
  4208c5:	mov    ch,0x92
  4208c7:	int3   
  4208c8:	pop    esp
  4208c9:	sbb    eax,0xfc6e7b79
  4208ce:	mov    edi,es
  4208d0:	mov    ch,0xee
  4208d2:	pop    ds
  4208d3:	test   BYTE PTR [edx+0x57],0xc0
  4208d7:	adc    al,0xd6
  4208d9:	jnp    0x420862
  4208db:	jmp    0xdbf4:0x76d9998f
  4208e2:	call   DWORD PTR [ebx]
  4208e4:	cmp    al,BYTE PTR [ecx+0x2a]
  4208e7:	out    dx,al
  4208e8:	test   eax,0x9917f308
  4208ed:	ins    BYTE PTR es:[edi],dx
  4208ee:	retf   0x5b1b
  4208f1:	and    ch,BYTE PTR [ecx+0x3b]
  4208f4:	aas    
  4208f5:	cmc    
  4208f6:	and    ah,BYTE PTR [edx]
  4208f8:	sbb    eax,0x2654ae0
  4208fd:	jnp    0x42088b
  4208ff:	enter  0x3d63,0xe2
  420903:	lods   eax,DWORD PTR ds:[esi]
  420904:	inc    ecx
  420905:	(bad)  
  420906:	sub    dl,BYTE PTR [edx+0x60ea5505]
  42090c:	cmp    DWORD PTR [ecx-0xe],ecx
  42090f:	(bad)  
  420910:	xchg   esp,eax
  420911:	xor    dl,BYTE PTR [ebx-0x2]
  420914:	adc    bh,BYTE PTR [edi-0x13349a4d]
  42091a:	loop   0x4208eb
  42091c:	xchg   esi,eax
  42091d:	and    eax,0xe589ce2a
  420922:	test   cl,cl
  420924:	jge    0x4208a9
  420926:	mov    ecx,gs
  420928:	es cdq 
  42092a:	mov    ch,0xfe
  42092c:	add    eax,0xacb0683b
  420931:	and    eax,0xc9302a4
  420936:	shl    BYTE PTR [ebx-0x12cd56b5],cl
  42093c:	cdq    
  42093d:	push   es
  42093e:	cmc    
  42093f:	xor    eax,0x512ca43e
  420944:	mov    DWORD PTR ds:0xe984b50f,ebp
  42094a:	jmp    0x42090e
  42094c:	retf   
  42094d:	mov    WORD PTR [ecx+0x6eedca3d],ds
  420953:	and    edx,DWORD PTR [eax-0x4f]
  420956:	call   0xf289677a
  42095b:	stc    
  42095c:	ja     0x420990
  42095e:	rol    bh,cl
  420960:	int3   
  420961:	mov    al,ds:0x9b2b838c
  420966:	les    edx,FWORD PTR [edx+ecx*4+0x26c94a0d]
  42096d:	mov    ds:0x97c38941,al
  420972:	ss inc edi
  420974:	int    0xb7
  420976:	xchg   BYTE PTR [ebx],ah
  420978:	fmul   QWORD PTR [ecx]
  42097a:	sub    eax,0x3bcfdff0
  42097f:	pushf  
  420980:	push   ss
  420981:	lock dec esp
  420983:	jl     0x420917
  420985:	cli    
  420986:	ins    DWORD PTR es:[edi],dx
  420987:	in     eax,dx
  420988:	mov    bl,0x14
  42098a:	std    
  42098b:	mov    esi,0x1c8b22dc
  420990:	test   eax,0xd0d1dabf
  420995:	outs   dx,BYTE PTR ds:[esi]
  420996:	call   0x8363a97
  42099b:	jb     0x4209c5
  42099d:	inc    edi
  42099e:	pop    eax
  42099f:	push   eax
  4209a0:	adc    eax,0xec85bbc5
  4209a5:	int    0x17
  4209a7:	aaa    
  4209a8:	popa   
  4209a9:	pop    edi
  4209aa:	fbstp  TBYTE PTR [ebx-0x35578455]
  4209b0:	push   ecx
  4209b1:	dec    ebx
  4209b2:	mov    ebx,0x58c16705
  4209b7:	jmp    0x740d15d7
  4209bc:	xchg   ebp,eax
  4209bd:	aam    0x86
  4209bf:	jo     0x420a12
  4209c1:	jns    0x420a14
  4209c3:	sbb    ebp,ebx
  4209c5:	cdq    
  4209c6:	and    DWORD PTR [ecx+0x42eb94bc],eax
  4209cc:	fdivr  QWORD PTR [edi+0x191b5841]
  4209d2:	jb     0x420a31
  4209d4:	pop    ss
  4209d5:	(bad)  
  4209d7:	cmp    dh,dh
  4209d9:	sub    al,0xe5
  4209db:	adc    eax,0x26532131
  4209e0:	xor    cl,BYTE PTR [esi]
  4209e2:	cmp    dh,BYTE PTR [edi-0x25c9595e]
  4209e8:	mov    ah,0xd7
  4209ea:	mov    edx,0x317a3616
  4209ef:	add    BYTE PTR [ecx+0xe],0xb5
  4209f3:	test   BYTE PTR [esi-0xc],bh
  4209f6:	mov    cl,BYTE PTR [esi-0x7ec3574e]
  4209fc:	jo     0x4209fa
  4209fe:	test   bh,bl
  420a00:	mov    ch,0x6e
  420a02:	(bad)  
  420a03:	jl     0x420a77
  420a05:	and    esi,DWORD PTR [ecx]
  420a07:	adc    al,0x48
  420a09:	shr    DWORD PTR [edi],1
  420a0b:	or     al,0x9e
  420a0d:	pop    edx
	...
  420a1a:	add    BYTE PTR [eax],al
  420a1c:	adc    DWORD PTR [esi],ecx
  420a1e:	or     dl,ch
  420a20:	pop    ds
  420a21:	out    dx,al
  420a22:	repz jmp FWORD PTR [edi+0x2cf0426]
  420a29:	jl     0x4209dc
  420a2b:	jne    0x4209b1
  420a2d:	test   DWORD PTR [ecx],eax
  420a2f:	add    BYTE PTR [edx-0x78fffffe],cl
  420a35:	bound  ebx,QWORD PTR [eax+edx*2+0x46]
  420a39:	(bad)  
  420a3a:	aam    0x44
  420a3c:	clc    
  420a3d:	xor    al,0xb
  420a3f:	hlt    
  420a40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a41:	fcom   DWORD PTR [edi]
  420a43:	cmp    BYTE PTR [esi],0x9c
  420a46:	idiv   DWORD PTR [eax+0x2919bff5]
  420a4c:	dec    eax
  420a4d:	cld    
  420a4e:	dec    ebp
  420a4f:	dec    ebp
  420a50:	inc    ebx
  420a51:	cmp    edx,DWORD PTR ds:0xda4f9479
  420a57:	pop    eax
  420a58:	jle    0x420a61
  420a5a:	mov    eax,0x5154bfdb
  420a5f:	cmc    
  420a60:	mov    eax,0x25e75fb4
  420a65:	mov    dl,0xd4
  420a67:	jg     0x420a00
  420a69:	outs   dx,BYTE PTR ds:[esi]
  420a6a:	dec    ecx
  420a6b:	lock inc esp
  420a6d:	jle    0x420a29
  420a6f:	xor    al,0x17
  420a71:	dec    eax
  420a72:	mov    edx,0xa7eaed74
  420a77:	(bad)  
  420a78:	dec    edx
  420a79:	je     0x420a66
  420a7b:	mov    BYTE PTR [esi+0x2678ac50],ch
  420a81:	pop    es
  420a82:	cdq    
  420a83:	dec    ax
  420a85:	imul   edx,DWORD PTR [ebx-0xa],0xffffff89
  420a89:	ds jb  0x420ad9
  420a8c:	cmp    BYTE PTR [eax+0x2eb07bc6],bh
  420a92:	add    eax,DWORD PTR [ecx+0x3a]
  420a95:	add    DWORD PTR [edx],esp
  420a97:	pop    ebp
  420a98:	mov    bh,0xbe
  420a9a:	jp     0x420a8d
  420a9c:	jmp    0xca8f388f
  420aa1:	fsub   QWORD PTR [esp+eiz*8-0x397c280a]
  420aa8:	outs   dx,DWORD PTR ds:[esi]
  420aa9:	sbb    BYTE PTR [esi+0x6706059d],ch
  420aaf:	aad    0x20
  420ab1:	or     cl,ah
  420ab3:	daa    
  420ab4:	xchg   edx,eax
  420ab5:	pop    edx
  420ab6:	repnz mov bl,0xca
  420ab9:	mov    esp,0x3d3643f8
  420abe:	adc    DWORD PTR ds:0xc0bb152,esp
  420ac4:	je     0x420a81
  420ac6:	and    bh,BYTE PTR [eax]
  420ac8:	sbb    al,0x20
  420aca:	mov    al,ds:0x7619ab4b
  420acf:	stc    
  420ad0:	inc    esp
  420ad1:	mov    edx,0x1c129bb1
  420ad6:	mov    ebx,0x37b99bfc
  420adb:	mov    WORD PTR [ecx-0x2eea123d],?
  420ae1:	daa    
  420ae2:	jmp    0x101a:0x3734500a
  420ae9:	idiv   edx
  420aeb:	mov    ds:0x4e126bcd,al
  420af0:	retf   
  420af1:	xor    DWORD PTR [esi-0xb],0x35f53e13
  420af8:	and    BYTE PTR [esi+0x5e018d5e],bl
  420afe:	ret    0x53d9
  420b01:	dec    edi
  420b02:	les    ebx,FWORD PTR [eax]
  420b04:	pop    ds
  420b05:	fwait
  420b06:	inc    ebx
  420b07:	pusha  
  420b08:	scas   al,BYTE PTR es:[edi]
  420b09:	xor    cl,bl
  420b0b:	adc    DWORD PTR [eax-0x5e39863f],ecx
  420b11:	jbe    0x420b29
  420b13:	sbb    edi,DWORD PTR [edi]
  420b15:	int    0xb4
  420b17:	dec    ebp
  420b18:	(bad)  
  420b19:	mov    al,0x31
  420b1b:	and    DWORD PTR [ecx-0x5eb91ab3],0x878a2ffe
  420b25:	sahf   
  420b26:	xchg   BYTE PTR [edi+0x11d1b043],bh
  420b2c:	stos   BYTE PTR es:[edi],al
  420b2d:	sbb    DWORD PTR ds:0x4a494301,ebp
  420b33:	dec    edi
  420b34:	out    dx,al
  420b35:	mov    eax,ds:0x49e812d7
  420b3a:	jbe    0x420b77
  420b3c:	mov    ecx,0x530e18f2
  420b41:	fsubr  QWORD PTR [ebx]
  420b43:	adc    edx,DWORD PTR [eax+0x65]
  420b46:	aam    0xbe
  420b48:	aaa    
  420b49:	je     0x420b09
  420b4b:	pop    edi
  420b4c:	xchg   esp,eax
  420b4d:	sbb    bl,BYTE PTR [ecx]
  420b4f:	or     DWORD PTR [edi-0x5f433b2d],edi
  420b55:	sbb    al,0x68
  420b57:	and    ebp,DWORD PTR [eax+0xf]
  420b5a:	push   0x6668ce06
  420b5f:	push   cs
  420b60:	mov    eax,ds:0xfe1c696b
  420b65:	mov    dh,0x7d
  420b67:	ret    0xfac5
  420b6a:	sbb    DWORD PTR [eax+0xd22ba08],0x8e892c78
  420b74:	adc    DWORD PTR [edi+0x76],esp
  420b77:	test   eax,0x4a466d5f
  420b7c:	jo     0x420bb8
  420b7e:	retf   0xd41b
  420b81:	jge    0x420bda
  420b83:	cmp    edi,edi
  420b85:	sar    BYTE PTR gs:[ebx],1
  420b88:	sub    al,0x76
  420b8a:	clc    
  420b8b:	je     0x420b4e
  420b8d:	sub    esp,ebp
  420b8f:	jne    0x420bb0
  420b91:	sahf   
  420b92:	bound  edx,QWORD PTR [ebp-0x60]
  420b95:	stc    
  420b96:	retf   
  420b97:	jbe    0x420bd4
  420b99:	push   ebx
  420b9a:	jl     0x420b6d
  420b9c:	sub    edi,DWORD PTR fs:[ebp+0x7d02b933]
  420ba3:	jg     0x420bc9
  420ba5:	(bad)  [edx+0x3f]
  420ba8:	pushf  
  420ba9:	mov    ?,WORD PTR [esi+eiz*2-0x13]
  420bad:	fbld   TBYTE PTR [edx-0xa]
  420bb0:	mov    ch,0x68
  420bb2:	cs cdq 
  420bb4:	cld    
  420bb5:	push   edi
  420bb6:	outs   dx,DWORD PTR ds:[esi]
  420bb7:	popf   
  420bb8:	(bad)  [ecx]
  420bba:	cmp    DWORD PTR [ecx-0x6f],0x25fe2c24
  420bc1:	push   edx
  420bc2:	mov    al,0xb6
  420bc4:	cmp    BYTE PTR [esi-0x7e],ch
  420bc7:	sbb    al,BYTE PTR ds:0x8659a744
  420bcd:	cmp    al,0x28
  420bcf:	fisubr DWORD PTR [eax-0x49]
  420bd2:	addr16 dec edi
  420bd4:	lock out 0x46,al
  420bd7:	inc    ebx
  420bd8:	loopne 0x420c29
  420bda:	and    eax,0x2c74d6ac
  420bdf:	or     esi,esi
  420be1:	or     bh,BYTE PTR [eax-0x4d]
  420be4:	(bad)  
  420be5:	mov    esi,0x7ceded9d
  420bea:	pop    edi
  420beb:	push   0xc312c0e1
  420bf0:	push   ds
  420bf1:	(bad)  
  420bf2:	jg     0x420c11
  420bf4:	mov    al,0x8b
  420bf6:	jl     0x420bf6
  420bf8:	bound  edi,QWORD PTR [edi]
  420bfa:	add    ah,bh
  420bfc:	clc    
  420bfd:	int    0x1d
  420bff:	test   al,cl
  420c01:	xchg   ebp,eax
  420c02:	sbb    al,0x75
  420c04:	ret    0x6753
  420c07:	xchg   edi,eax
  420c08:	mov    ebp,0xa996c6c6
  420c0d:	mov    esi,0x9e13169a
  420c12:	mov    ds:0xd945139a,eax
  420c17:	inc    ecx
  420c18:	sub    al,0x82
  420c1a:	not    BYTE PTR [edx+0x51e9e7ef]
  420c20:	sub    bl,bl
  420c22:	jg     0x420bfb
  420c24:	inc    ebx
  420c25:	push   ecx
  420c26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c28:	les    edi,FWORD PTR [ebx-0x2cf691e4]
  420c2e:	hlt    
  420c2f:	mov    al,ds:0x77f9b09d
  420c34:	and    al,0x52
  420c36:	fiadd  WORD PTR [ecx+ecx*2+0x21cde434]
  420c3d:	je     0x420c26
  420c3f:	jo     0x420bcd
  420c41:	ret    0xcc05
  420c44:	pop    es
  420c45:	push   ebp
  420c46:	shr    DWORD PTR [ebx],1
  420c48:	adc    eax,0xf88c7682
  420c4d:	fist   WORD PTR [ecx]
  420c4f:	(bad)  
  420c50:	imul   ebp,DWORD PTR [ecx],0xffffffc6
  420c53:	mov    dl,BYTE PTR [ebp+edi*4-0x5b]
  420c57:	pop    ss
  420c58:	test   BYTE PTR [edi+ebp*8+0x253625cc],0x36
  420c60:	mov    eax,ds:0x21303868
  420c65:	dec    edi
  420c66:	pop    ss
  420c67:	cld    
  420c68:	cdq    
  420c69:	or     BYTE PTR [esi-0x1be420f],ch
  420c6f:	jns    0x420c28
  420c71:	ins    DWORD PTR es:[edi],dx
  420c72:	push   edx
  420c73:	fidiv  DWORD PTR [ecx-0xf8a40a9]
  420c79:	xlat   BYTE PTR ds:[ebx]
  420c7a:	pusha  
  420c7b:	jne    0x420cb0
  420c7d:	jmp    0x420cfc
  420c7f:	mov    edx,0x64bd5028
  420c84:	push   ebx
  420c85:	shl    BYTE PTR [ebp+0x41],cl
  420c88:	and    ch,BYTE PTR [ebx-0x32]
  420c8b:	sbb    BYTE PTR [edi+0x42a7197a],dh
  420c91:	pop    ds
  420c92:	dec    ecx
  420c93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c94:	shl    al,1
  420c96:	add    BYTE PTR [edx],dl
  420c98:	push   edx
  420c99:	(bad)  
  420c9b:	or     DWORD PTR ss:[esi],0x21
  420c9f:	cmp    ebx,DWORD PTR [edx+0x4d]
  420ca2:	dec    eax
  420ca3:	(bad)  
  420ca4:	dec    BYTE PTR [ebp-0x586190d5]
  420caa:	sub    ebp,edx
  420cac:	xchg   DWORD PTR [edx],edi
  420cae:	cmp    DWORD PTR [ebp+0x25],ecx
  420cb1:	int3   
  420cb2:	cmp    BYTE PTR [eax-0x70117e4e],cl
  420cb8:	or     eax,0x54391180
  420cbd:	rol    DWORD PTR [eax],0x0
	...
  420ccc:	leave  
  420ccd:	xchg   esi,eax
  420cce:	ins    DWORD PTR es:[edi],dx
  420ccf:	mov    dh,0x7f
  420cd1:	(bad)  
  420cd2:	(bad)  
  420cd4:	aam    0xd9
  420cd6:	inc    ebx
  420cd7:	fsub   DWORD PTR [edi+0xeb1119d]
  420cdd:	mov    BYTE PTR [ecx],al
  420cdf:	add    BYTE PTR [edx-0x6efffffe],cl
  420ce5:	mov    esi,0x773df8ea
  420cea:	imul   esp,DWORD PTR [edi-0x7],0xb81014d0
  420cf1:	mov    bh,0xbe
  420cf3:	xchg   ebp,eax
  420cf4:	xlat   BYTE PTR ds:[ebx]
  420cf5:	(bad)  [ecx]
  420cf7:	inc    esi
  420cf8:	mov    BYTE PTR [edi-0x5f],dh
  420cfb:	sti    
  420cfc:	xchg   esp,eax
  420cfd:	imul   edx,DWORD PTR [ebx-0xfa48a9a],0xbb7c6a9d
  420d07:	mov    ah,0xbe
  420d09:	rep stos DWORD PTR es:[edi],eax
  420d0b:	xchg   esi,eax
  420d0c:	inc    ecx
  420d0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d0e:	and    ch,bl
  420d10:	pop    ebx
  420d11:	imul   ecx,DWORD PTR [eiz*4+0x1e8fd5c],0x4883b134
  420d1c:	(bad)  
  420d1d:	loopne 0x420d66
  420d1f:	mov    al,0x87
  420d21:	xchg   ebp,eax
  420d22:	arpl   WORD PTR [esp+ebp*1+0x16],sp
  420d26:	jle    0x420ce8
  420d28:	xchg   ecx,eax
  420d29:	out    0x5d,eax
  420d2b:	inc    edi
  420d2c:	cmp    DWORD PTR ds:0xc28b2a89,ebx
  420d32:	jb     0x420d82
  420d34:	xchg   ecx,eax
  420d35:	jns    0x420d2b
  420d37:	adc    eax,esi
  420d39:	xchg   ecx,eax
  420d3a:	mov    ds:0x2f2c8805,al
  420d3f:	fwait
  420d40:	xor    al,0xb6
  420d42:	or     edi,DWORD PTR [ebx]
  420d44:	jne    0x420d06
  420d46:	push   edi
  420d47:	shr    ebp,cl
  420d49:	pop    esi
  420d4a:	enter  0xd239,0x10
  420d4e:	fs jecxz 0x420d22
  420d51:	cmp    al,0xfc
  420d53:	inc    eax
  420d54:	pavgw  mm7,QWORD PTR [bp+di-0x76f7]
  420d5a:	jecxz  0x420d66
  420d5c:	(bad)  
  420d5d:	xchg   edi,eax
  420d5e:	and    BYTE PTR [ecx+edi*1+0x19],ah
  420d62:	or     BYTE PTR [esi],bh
  420d64:	add    al,0x74
  420d66:	xor    al,0x7e
  420d68:	xchg   edx,eax
  420d69:	pop    esi
  420d6a:	sbb    ecx,eax
  420d6c:	ss pop ds
  420d6e:	jmp    0x1682:0xbc2320c6
  420d75:	xor    DWORD PTR [edx-0x77],ebx
  420d78:	lahf   
  420d79:	sbb    esi,ebx
  420d7b:	ret    
  420d7c:	int    0x36
  420d7e:	sbb    DWORD PTR [ecx+0x75],ebp
  420d81:	xchg   edi,eax
  420d82:	fist   DWORD PTR [ebx+0x7e]
  420d85:	addr16 test al,0x62
  420d88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d89:	push   esi
  420d8a:	mov    ds:0xd2cdc2cb,al
  420d8f:	xchg   ebx,eax
  420d90:	cmp    BYTE PTR [edi],0xe9
  420d93:	mov    edx,0x3ffa17c3
  420d98:	mov    bh,0x69
  420d9a:	xor    BYTE PTR [ecx+0x70d50f65],0x78
  420da1:	xlat   BYTE PTR ds:[ebx]
  420da2:	mov    ah,0xb6
  420da4:	loop   0x420da5
  420da6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420da7:	xchg   edx,eax
  420da8:	imul   edi,DWORD PTR [eax+0x6a],0x29
  420dac:	cmp    BYTE PTR [eax],dh
  420dae:	jno    0x420d6f
  420db0:	push   0x31
  420db2:	cmp    BYTE PTR [ebx-0x2debb234],0xb4
  420db9:	push   0x95a6cd4e
  420dbe:	stos   DWORD PTR es:[edi],eax
  420dbf:	cmp    dh,BYTE PTR [eax+0x6225d158]
  420dc5:	add    dl,bh
  420dc7:	jno    0x420d6d
  420dc9:	fs cmp ah,ch
  420dcc:	imul   ebp,DWORD PTR [edx-0x24439073],0x38
  420dd3:	gs xchg edx,eax
  420dd5:	mov    ds:0x6a1c8222,eax
  420dda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ddb:	pop    es
  420ddc:	mov    ebx,0x91427236
  420de1:	ror    DWORD PTR [ecx-0x4f0998b4],0x6c
  420de8:	cmp    eax,0x73683c81
  420ded:	jno    0x420e6a
  420def:	clc    
  420df0:	xor    ch,BYTE PTR [eax-0x6b3f9f73]
  420df6:	retf   
  420df7:	jne    0x420e76
  420df9:	retf   
  420dfa:	es inc ebp
  420dfc:	vpsrad xmm0,xmm7,XMMWORD PTR [edi+0x6c8f3ef4]
  420e04:	mov    esi,0xbc0d9b1f
  420e09:	das    
  420e0a:	dec    esp
  420e0b:	adc    ecx,DWORD PTR [ecx-0x203d1706]
  420e11:	mov    edx,DWORD PTR [esi]
  420e13:	sar    ebp,1
  420e15:	dec    ebp
  420e16:	jmp    0x65694816
  420e1b:	jg     0x420e56
  420e1d:	inc    esi
  420e1e:	es jne 0x420e39
  420e21:	and    DWORD PTR ds:0xc8cde10e,0xfffffff9
  420e28:	in     eax,dx
  420e29:	jnp    0x420de4
  420e2b:	add    edx,DWORD PTR [ebx]
  420e2d:	xchg   esp,eax
  420e2e:	push   ss
  420e2f:	pop    esi
  420e30:	fiadd  DWORD PTR [esi]
  420e32:	cmp    eax,0x4ebb78f6
  420e37:	push   eax
  420e38:	mov    dh,0x8a
  420e3a:	mov    bl,0x7
  420e3c:	and    al,0x6c
  420e3e:	(bad)  
  420e3f:	loop   0x420e0b
  420e41:	stos   BYTE PTR es:[edi],al
  420e42:	mov    dl,0x8e
  420e44:	pop    ecx
  420e45:	adc    cl,BYTE PTR [ebp-0x2f39600f]
  420e4b:	add    al,dl
  420e4d:	xchg   edx,eax
  420e4e:	push   esp
  420e4f:	inc    edi
  420e50:	fiadd  DWORD PTR [ebx]
  420e52:	fdivr  DWORD PTR [edi-0x6]
  420e55:	(bad)  
  420e56:	xlat   BYTE PTR ds:[ebx]
  420e57:	cmp    DWORD PTR [ebx],edx
  420e59:	inc    esi
  420e5a:	pop    ebp
  420e5b:	imul   edi,DWORD PTR [edi+0x42],0xefb1235c
  420e62:	dec    edx
  420e63:	adc    cl,ch
  420e65:	in     eax,dx
  420e66:	rol    BYTE PTR [eax],cl
  420e68:	mov    bl,0x53
  420e6a:	imul   esi,DWORD PTR [ebp+edx*8-0x4d25c94c],0x1a908512
  420e75:	push   ds
  420e76:	outs   dx,BYTE PTR ds:[esi]
  420e77:	test   eax,0xfe723854
  420e7c:	and    eax,0x7f6a22e8
  420e81:	xor    eax,0xb5add825
  420e86:	call   FWORD PTR ds:0xf6715b69
  420e8c:	enter  0x2252,0x3
  420e90:	sbb    al,0xea
  420e92:	daa    
  420e93:	pop    ecx
  420e94:	call   0x7474e1e3
  420e99:	sub    cl,ch
  420e9b:	lea    esi,[ecx+0x5a]
  420e9e:	das    
  420e9f:	daa    
  420ea0:	inc    edx
  420ea1:	imul   BYTE PTR [esi-0x2b]
  420ea4:	xor    BYTE PTR [edx+ebx*1-0x13ec9f62],bh
  420eab:	jb     0x420e79
  420ead:	mov    ebp,0xc628406d
  420eb2:	or     BYTE PTR [ecx-0x2f768a1e],cl
  420eb8:	fcmove st,st(5)
  420eba:	and    ebx,ecx
  420ebc:	push   ebp
  420ebd:	cmp    al,0x55
  420ebf:	sbb    bh,BYTE PTR [ecx-0xf]
  420ec2:	cmp    al,0x4b
  420ec4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ec5:	(bad)  
  420ec6:	jb     0x420efe
  420ec8:	outs   dx,BYTE PTR ds:[esi]
  420ec9:	xor    DWORD PTR [eax-0x2f0b03a8],0x17
  420ed0:	sub    eax,0x9f873de1
  420ed5:	mov    bh,0xa8
  420ed7:	retf   0xc39b
  420eda:	cmp    DWORD PTR fs:[eax-0x6c],0x1f3eb245
  420ee2:	pop    esp
  420ee3:	rcr    eax,1
  420ee5:	das    
  420ee6:	ins    BYTE PTR es:[edi],dx
  420ee7:	mov    ah,0xb6
  420ee9:	leave  
  420eea:	xchg   esp,eax
  420eeb:	hlt    
  420eec:	xchg   ebx,eax
  420eed:	gs add eax,DWORD PTR ds:[edi]
  420ef1:	ror    DWORD PTR [ecx-0x23],cl
  420ef4:	or     cl,BYTE PTR [ecx+0x4d7dc848]
  420efa:	mov    al,0xc8
  420efc:	(bad)  [edi-0x458b376f]
  420f02:	add    BYTE PTR [esp+eax*8+0x2a163f81],0xc1
  420f0a:	pop    edx
  420f0b:	or     eax,0x8fbd0d26
  420f10:	mov    gs,WORD PTR [ebx]
  420f12:	add    edi,esp
  420f14:	cmp    al,0x7e
  420f16:	add    al,0x75
  420f18:	pop    ebp
  420f19:	lods   eax,DWORD PTR ds:[esi]
  420f1a:	or     cl,bh
  420f1c:	test   edx,edx
  420f1e:	addr16 cdq 
  420f20:	pop    ss
  420f21:	pop    ecx
  420f22:	sub    DWORD PTR [ebx-0x6],eax
  420f25:	popf   
  420f26:	mov    cl,BYTE PTR [ebx]
  420f28:	jecxz  0x420f5d
  420f2a:	(bad)  
  420f2b:	cwde   
  420f2c:	std    
  420f2d:	adc    cl,al
  420f2f:	call   0xd667:0x80e29b6b
  420f36:	mov    WORD PTR [edx+eax*1+0x55],gs
  420f3a:	dec    ebp
  420f3b:	xlat   BYTE PTR ds:[ebx]
  420f3c:	ret    0x672c
  420f3f:	inc    eax
  420f40:	fndisi(8087 only) 
  420f42:	dec    edx
  420f43:	ss inc edi
  420f45:	jmp    0xd22c144a
  420f4a:	lods   eax,DWORD PTR ds:[esi]
  420f4b:	mov    edi,0xc36fc99
  420f50:	imul   ebp,edx,0x9
  420f53:	inc    ecx
  420f54:	loope  0x420efe
  420f56:	and    eax,0x875061f4
  420f5b:	mov    al,ds:0xebe064e4
  420f60:	jmp    0x420efa
  420f62:	jp     0x420f69
  420f64:	sbb    BYTE PTR [edx+0x47],bl
  420f67:	add    DWORD PTR [esi-0x6f],esp
  420f6a:	xor    ch,BYTE PTR [esi]
  420f6c:	mov    al,0xd6
	...
  420f7a:	add    BYTE PTR [eax],al
  420f7c:	dec    eax
  420f7d:	out    dx,eax
  420f7e:	ja     0x420feb
  420f80:	idiv   ebx
  420f82:	pop    esp
  420f83:	out    dx,eax
  420f84:	dec    esp
  420f85:	mul    BYTE PTR [esi-0x7d]
  420f88:	(bad)  
  420f89:	(bad)  
  420f8a:	popf   
  420f8b:	(bad)  
  420f8c:	cwde   
  420f8d:	mov    al,BYTE PTR [ecx]
  420f8f:	add    BYTE PTR [edx+0x44000002],cl
  420f95:	inc    ebp
  420f96:	lahf   
  420f97:	dec    edx
  420f98:	loop   0x420fae
  420f9a:	call   0x9933:0xfb9ebec9
  420fa1:	clc    
  420fa2:	dec    ebx
  420fa3:	out    dx,eax
  420fa4:	iret   
  420fa5:	sub    eax,0xdfc8a33e
  420faa:	push   0x24
  420fac:	xchg   ebp,eax
  420fad:	test   BYTE PTR [esi],al
  420faf:	fistp  WORD PTR [esi-0x6b38a34]
  420fb5:	jmp    0x420f92
  420fb7:	jno    0x420fe3
  420fb9:	retf   0xfcf3
  420fbc:	test   eax,0x1b6c9c69
  420fc1:	sbb    BYTE PTR [esi-0x46d78a1a],dl
  420fc7:	fldcw  WORD PTR [edi+0x6e553df2]
  420fcd:	loop   0x420f8c
  420fcf:	mov    ds:0xfd458801,eax
  420fd4:	jl     0x420f9e
  420fd6:	imul   esp,DWORD PTR [edx-0x7ed5299],0x5b
  420fdd:	xchg   esp,eax
  420fde:	xchg   edi,eax
  420fdf:	inc    DWORD PTR ds:0x8b42a7c8
  420fe5:	mov    esp,0x69893c6c
  420fea:	mov    esi,0x2127e75c
  420fef:	lods   eax,DWORD PTR ds:[esi]
  420ff0:	pop    edx
  420ff1:	inc    esi
  420ff2:	ss jne 0x420fc9
  420ff5:	push   esi
  420ff6:	push   ebp
  420ff7:	(bad)
  420ffb:	jecxz  0x42100d
  420ffd:	test   eax,ecx
  420fff:	test   eax,0xd6a66897
  421004:	inc    edx
  421005:	mov    dh,0xa9
  421007:	or     al,0x59
  421009:	aam    0x50
  42100b:	add    eax,0xce3f34a
  421010:	or     edi,DWORD PTR [ebx-0x3a1f1395]
  421016:	add    bl,al
  421018:	push   ecx
  421019:	xchg   ebp,eax
  42101a:	lods   al,BYTE PTR ds:[esi]
  42101b:	push   cs
  42101c:	xor    ecx,edx
  42101e:	pushf  
  42101f:	aaa    
  421020:	mov    edx,0x6b3845d9
  421025:	in     al,0x13
  421027:	add    eax,0x71630edf
  42102c:	shl    BYTE PTR [edi+0x256e5175],cl
  421032:	jnp    0x420ffa
  421034:	and    BYTE PTR ds:0xa43b786b,dl
  42103a:	(bad)  
  42103b:	jmp    0x7581932f
  421040:	int    0xb6
  421042:	jb     0x42100a
  421044:	jns    0x4210ae
  421046:	cmc    
  421047:	sub    ebx,esp
  421049:	xchg   edx,eax
  42104a:	mov    DWORD PTR ds:0x99bbaac1,edi
  421050:	popa   
  421051:	jb     0x421097
  421053:	mov    ecx,0xd544cb1e
  421058:	jl     0x421074
  42105a:	mov    ds:0x6f24d208,al
  42105f:	pop    ss
  421060:	loope  0x421078
  421062:	(bad)  
  421063:	push   esp
  421064:	pop    ss
  421065:	enter  0xcfe5,0x77
  421069:	aam    0xe9
  42106b:	xor    edx,DWORD PTR [ebx-0x432257db]
  421071:	leave  
  421072:	lea    edi,ds:0xa7c92d51
  421078:	mov    dh,0xe4
  42107a:	add    eax,0xa91d6250
  42107f:	push   ss
  421080:	add    esi,DWORD PTR [esi-0x26]
  421083:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421084:	call   0x6e9a:0xe713965a
  42108b:	mov    ss,esp
  42108d:	sub    cl,cl
  42108f:	xchg   BYTE PTR [ebp+ebx*2-0x6e67ffbb],ah
  421096:	cdq    
  421097:	retf   0xaf00
  42109a:	das    
  42109b:	test   al,0x48
  42109d:	push   eax
  42109e:	test   al,0xab
  4210a0:	lds    ecx,FWORD PTR [esi]
  4210a2:	in     eax,0x6c
  4210a4:	out    0x8c,al
  4210a6:	rcl    DWORD PTR [ebp-0x753774e1],0x2
  4210ad:	push   eax
  4210ae:	ficom  DWORD PTR [ecx+0x1c]
  4210b1:	pop    ss
  4210b2:	shl    DWORD PTR [edx+0x7ba094e6],0x5a
  4210b9:	pusha  
  4210ba:	stos   BYTE PTR es:[edi],al
  4210bb:	std    
  4210bc:	xor    al,0xde
  4210be:	repz mov ebx,0xafdc402f
  4210c4:	jae    0x421084
  4210c6:	xor    DWORD PTR [edi],edi
  4210c8:	mov    dh,0x8f
  4210ca:	jae    0x4210ba
  4210cc:	xchg   esp,eax
  4210cd:	ret    
  4210ce:	push   0x11
  4210d0:	or     eax,0x2c0970dc
  4210d5:	xchg   esi,eax
  4210d6:	sub    DWORD PTR [ebx],edi
  4210d8:	shr    BYTE PTR [esi],0x26
  4210db:	jo     0x42109b
  4210dd:	icebp  
  4210de:	xor    eax,0x59a196e0
  4210e3:	daa    
  4210e4:	mov    cl,0x79
  4210e6:	push   DWORD PTR [ebx+0x26]
  4210e9:	inc    ebp
  4210ea:	and    DWORD PTR [eax],esp
  4210ec:	je     0x421140
  4210ee:	or     edx,DWORD PTR [edi]
  4210f0:	mov    ebp,0x89eea78b
  4210f5:	adc    eax,0xa7f6dcd3
  4210fa:	xor    al,0x4d
  4210fc:	fld    TBYTE PTR [edx]
  4210fe:	xchg   esp,eax
  4210ff:	push   eax
  421100:	or     DWORD PTR [esi+0x69],0xb71a83f1
  421107:	xor    al,BYTE PTR [esi-0x6e]
  42110a:	(bad)  
  42110b:	in     al,0x65
  42110d:	repz cmp eax,0x194c2744
  421113:	std    
  421114:	callw  0x3465
  421118:	fs enter 0xfbea,0x85
  42111d:	and    eax,0x2c6133be
  421122:	sbb    al,0x7e
  421124:	sti    
  421125:	mov    ah,BYTE PTR [edi+edi*1-0x147a2dcc]
  42112c:	adc    eax,0x8dc2c23a
  421131:	fiadd  WORD PTR [edi+0x40]
  421134:	nop
  421135:	and    edi,DWORD PTR [ecx+ecx*2-0x7269c1a3]
  42113c:	test   DWORD PTR [edi-0x4b5cdebc],ebx
  421142:	sub    eax,0x5b3e8721
  421147:	aas    
  421148:	addr16 lahf 
  42114a:	iret   
  42114b:	mov    eax,0x11e8c651
  421150:	jmp    0x42116e
  421152:	sar    DWORD PTR [ebx+0x3dd2d83e],cl
  421158:	sbb    cl,al
  42115a:	ins    BYTE PTR es:[edi],dx
  42115b:	out    dx,eax
  42115c:	inc    ecx
  42115d:	das    
  42115e:	mov    bl,0xc5
  421160:	xor    BYTE PTR [edx-0x5a],ah
  421163:	inc    DWORD PTR [esi+edi*2+0x39]
  421167:	and    al,0x26
  421169:	retf   
  42116a:	mov    eax,ds:0x48478ba6
  42116f:	jbe    0x42116e
  421171:	cmc    
  421172:	cwde   
  421173:	inc    ebx
  421174:	lods   eax,DWORD PTR ds:[esi]
  421175:	push   esi
  421176:	mov    ch,0xef
  421178:	inc    ebx
  421179:	(bad)  
  42117a:	jo     0x421113
  42117c:	add    BYTE PTR [esp+ebx*8+0x510428f0],bl
  421183:	out    dx,al
  421184:	ins    DWORD PTR es:[edi],dx
  421185:	dec    eax
  421186:	fidiv  WORD PTR [eax+0x3bdf3771]
  42118c:	cs add al,0x35
  42118f:	in     eax,dx
  421190:	ret    0xbb0e
  421193:	retf   0xec8e
  421196:	add    ch,BYTE PTR [esi]
  421198:	ins    BYTE PTR es:[edi],dx
  421199:	push   0x20c83450
  42119e:	sbb    BYTE PTR [eax+0x36],al
  4211a1:	jmp    0xf0ea58a5
  4211a6:	out    0xf7,al
  4211a8:	(bad)  
  4211a9:	loopne 0x421209
  4211ab:	aad    0x61
  4211ad:	jno    0x421177
  4211af:	pop    ss
  4211b0:	jle    0x4211ff
  4211b2:	mov    dl,0xb1
  4211b4:	call   0x8991:0xf4e12e37
  4211bb:	xor    eax,0xe0a0a015
  4211c0:	adc    esi,esi
  4211c2:	cmp    al,0xfe
  4211c4:	rcr    BYTE PTR [esp+ecx*2+0xae8ee94],cl
  4211cb:	xor    ah,cl
  4211cd:	loope  0x421222
  4211cf:	fbstp  TBYTE PTR [edi]
  4211d1:	mov    ch,0xfd
  4211d3:	(bad)  
  4211d5:	rcr    BYTE PTR [eax*4-0x429e1596],cl
  4211dc:	xor    bl,bh
  4211de:	sbb    DWORD PTR es:[eax-0x5],edx
  4211e2:	or     cl,BYTE PTR fs:[esi+esi*8-0x11]
  4211e7:	(bad)  
  4211e8:	fimul  DWORD PTR [ecx-0x1d73ea51]
  4211ee:	lahf   
  4211ef:	rcl    eax,0xf4
  4211f2:	mov    ds:0x8d093c6e,eax
  4211f7:	ds and eax,0x7f5e270d
  4211fd:	dec    eax
  4211fe:	sbb    eax,0x4fe005e8
  421203:	arpl   bp,sp
  421205:	xchg   ebp,edx
  421207:	test   DWORD PTR [edx+0x2b],ebx
  42120a:	mov    cl,0x92
  42120c:	inc    ecx
  42120d:	(bad)  
  42120e:	jp     0x4211f5
  421210:	xor    bh,BYTE PTR [edi]
  421212:	std    
  421213:	jp     0x42122b
  421215:	clc    
  421216:	aam    0x83
  421218:	das    
  421219:	imul   esi,DWORD PTR [edi+0x7d],0x9c2b
	...
  42122c:	mov    al,0xe3
  42122e:	pop    edx
  42122f:	jecxz  0x42128c
  421231:	sti    
  421232:	mov    ecx,0x72415ff3
  421237:	test   DWORD PTR [ecx+0x22abad58],edx
  42123d:	lea    eax,[ecx]
  42123f:	add    BYTE PTR [edx+0x4e000002],cl
  421245:	mov    DWORD PTR [esp+eax*4-0x3b0c46d6],esi
  42124c:	call   FWORD PTR [ebx+eiz*4+0x4f]
  421250:	es mov edi,0xa0113d16
  421256:	and    DWORD PTR [edi-0x58],ebx
  421259:	or     eax,0x2754713e
  42125e:	jl     0x4212b4
  421260:	and    al,0x23
  421262:	das    
  421263:	cmp    DWORD PTR [edi],ebp
  421265:	repz das 
  421267:	pushf  
  421268:	dec    esp
  421269:	push   esp
  42126a:	addr16 popf 
  42126c:	pop    edi
  42126d:	call   DWORD PTR [ecx+0x1f425f11]
  421273:	adc    bh,dl
  421275:	jo     0x42126c
  421277:	sti    
  421278:	pop    edi
  421279:	add    eax,0xad94482c
  42127e:	icebp  
  42127f:	inc    ebx
  421280:	out    0x5a,eax
  421282:	bound  ecx,QWORD PTR [ebp+0x34]
  421285:	adc    bl,ch
  421287:	mov    dl,0x69
  421289:	mov    bl,0x50
  42128b:	xor    ebp,DWORD PTR [edx+ebp*4]
  42128e:	loop   0x4212ad
  421290:	dec    edx
  421291:	int3   
  421292:	icebp  
  421293:	and    al,0x80
  421295:	add    BYTE PTR [esi],dh
  421297:	inc    ebx
  421298:	push   eax
  421299:	repz in eax,0xb2
  42129c:	clc    
  42129d:	push   esp
  42129e:	pop    esi
  42129f:	clc    
  4212a0:	mov    ebx,DWORD PTR [ebx]
  4212a2:	push   esi
  4212a3:	pop    edx
  4212a4:	sbb    bh,0x40
  4212a7:	retf   
  4212a8:	pop    eax
  4212a9:	shr    DWORD PTR [ebp+0x32],1
  4212ac:	dec    ecx
  4212ad:	addr16 jge 0x4212c3
  4212b0:	sub    eax,0x51a3b04f
  4212b5:	push   ecx
  4212b6:	mov    esi,0x79407244
  4212bb:	ins    BYTE PTR es:[edi],dx
  4212bc:	gs mov ah,0xb0
  4212bf:	cmp    eax,0x7c8e5af6
  4212c4:	pop    ebx
  4212c5:	mov    eax,0x3aa3104d
  4212ca:	pop    ebp
  4212cb:	es adc ecx,ebp
  4212ce:	call   0x25f6:0xba41c3c
  4212d5:	push   edi
  4212d6:	repz mov ch,0xf0
  4212d9:	jp     0x42128f
  4212db:	lods   al,BYTE PTR ds:[esi]
  4212dc:	cmp    ecx,DWORD PTR [ecx]
  4212de:	out    dx,al
  4212df:	fist   WORD PTR [edx-0x394d3518]
  4212e5:	fwait
  4212e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212e7:	test   al,0xe9
  4212e9:	ret    
  4212ea:	xor    al,0xab
  4212ec:	mov    ebx,0x2dc5e5e8
  4212f1:	inc    ebx
  4212f2:	leave  
  4212f3:	jae    0x4212c0
  4212f5:	and    al,0x5
  4212f7:	adc    eax,0xc9f85115
  4212fc:	cmc    
  4212fd:	lods   al,BYTE PTR ds:[esi]
  4212fe:	sub    ebp,DWORD PTR gs:[ebp-0x2625158a]
  421305:	loope  0x421314
  421307:	xor    BYTE PTR [ecx+0x501439d8],dh
  42130d:	fwait
  42130e:	pop    ebx
  42130f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421310:	push   ebx
  421311:	into   
  421312:	push   ebx
  421313:	in     eax,0xd3
  421315:	lahf   
  421316:	test   DWORD PTR [ebx],ecx
  421318:	loop   0x42137e
  42131a:	sbb    DWORD PTR [ebx-0x280bfb0f],esi
  421320:	clc    
  421321:	clc    
  421322:	fiadd  DWORD PTR [edx]
  421324:	test   esp,ebp
  421326:	aas    
  421327:	ds int 0x4e
  42132a:	js     0x42138b
  42132c:	jge    0x4212ff
  42132e:	repnz mov ebx,0xf4e4bc82
  421334:	fist   DWORD PTR [edx-0x32]
  421337:	jmp    0xd4a:0x8319cf01
  42133e:	pop    ebx
  42133f:	repnz shr BYTE PTR [ebx+0x7b],0x10
  421344:	mov    edi,?
  421346:	imul   BYTE PTR [edx]
  421348:	and    BYTE PTR ds:0x3b824329,ch
  42134e:	retf   0xe835
  421351:	cmp    DWORD PTR [ebp-0x191766cc],ebp
  421357:	out    dx,eax
  421358:	mov    ds:0xae6ace94,eax
  42135d:	adc    ebx,DWORD PTR [edx-0x1f]
  421360:	jecxz  0x4212ea
  421362:	lea    edx,[eax+0x77a3c93a]
  421368:	js     0x42132e
  42136a:	mov    eax,0xc7ae08b
  42136f:	jg     0x42132b
  421371:	ret    0x5fc4
  421374:	cmp    al,0x27
  421376:	mov    ch,0xb8
  421378:	mov    ds:0x447cff39,al
  42137d:	push   esi
  42137e:	ret    
  42137f:	pop    esi
  421380:	call   0x6bfbc2c7
  421385:	xchg   ebp,eax
  421386:	push   edx
  421387:	(bad)  
  421388:	mov    ds:0xc252288f,al
  42138d:	fmul   st,st(4)
  42138f:	dec    esi
  421390:	in     eax,dx
  421391:	pusha  
  421392:	call   0xdf2c8461
  421397:	and    ecx,ebp
  421399:	jle    0x4213b4
  42139b:	fwait
  42139c:	or     DWORD PTR [ecx+0x4e],ecx
  42139f:	fiadd  WORD PTR [edi-0x65bdd7b1]
  4213a5:	push   cs
  4213a6:	add    BYTE PTR [edi],ch
  4213a8:	mov    eax,ds:0xcc31e25d
  4213ad:	xor    al,0xf3
  4213af:	int    0xd3
  4213b1:	test   esp,ecx
  4213b3:	into   
  4213b4:	sbb    BYTE PTR [esi-0x6ccbbb75],dl
  4213ba:	inc    ebp
  4213bb:	inc    esp
  4213bc:	and    bh,BYTE PTR [eax+0x76c61fdc]
  4213c2:	jmp    0x33f4e4f2
  4213c7:	push   esp
  4213c8:	mov    ch,0xd5
  4213ca:	sbb    BYTE PTR [ecx+0x2e],ch
  4213cd:	inc    ebp
  4213ce:	add    cl,dl
  4213d0:	(bad)  
  4213d1:	out    dx,eax
  4213d2:	pop    ebx
  4213d3:	sub    BYTE PTR [ecx-0x3926f131],ah
  4213d9:	dec    eax
  4213da:	mov    WORD PTR [esi],fs
  4213dc:	mov    esp,0x8fc4f7c
  4213e1:	test   bh,ch
  4213e3:	hlt    
  4213e4:	in     eax,dx
  4213e5:	xchg   ecx,eax
  4213e6:	or     BYTE PTR ds:0x261beb4e,bh
  4213ec:	xchg   edx,eax
  4213ed:	in     eax,dx
  4213ee:	fs call 0xc10c5e3f
  4213f4:	cmp    ecx,DWORD PTR [ebx+0x710a533f]
  4213fa:	aam    0xa8
  4213fc:	ins    DWORD PTR es:[edi],dx
  4213fd:	mov    DWORD PTR ds:0x4b11d911,esp
  421403:	aam    0xc6
  421405:	adc    BYTE PTR [edi-0xeda9ee0],dl
  42140b:	pop    eax
  42140c:	cmp    DWORD PTR [edi-0x7476ddc8],edi
  421412:	ja     0x4213b1
  421414:	mov    bh,0x5e
  421416:	jge    0x4213a2
  421418:	inc    edx
  421419:	repz and ebx,DWORD PTR [ecx+edx*2-0x4a]
  42141e:	into   
  42141f:	int3   
  421420:	and    bh,ch
  421422:	dec    esp
  421423:	in     eax,0x32
  421425:	push   edx
  421426:	mov    cl,0xed
  421428:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421429:	jnp    0x4213da
  42142b:	push   edi
  42142c:	cmp    eax,0x64b49a3f
  421431:	sbb    al,0xde
  421433:	aad    0xf7
  421435:	lods   eax,DWORD PTR ds:[esi]
  421436:	mov    bl,0xf6
  421438:	sub    al,0xbd
  42143a:	mul    BYTE PTR [esi-0x6a]
  42143d:	jmp    0xc7f4:0x2a0a46d9
  421444:	jle    0x42146d
  421446:	iret   
  421447:	mov    al,ds:0xd531359f
  42144c:	call   0x703f98c4
  421451:	sub    eax,0xb5ca1d0a
  421456:	push   edx
  421457:	pop    ecx
  421458:	inc    edi
  421459:	fidivr DWORD PTR [edx+0x7f0c8626]
  42145f:	cmp    DWORD PTR [edx+0x57fe0f0b],edi
  421465:	mov    ecx,0x45aec2e1
  42146a:	xchg   ebx,eax
  42146b:	xchg   DWORD PTR [edi-0x67],eax
  42146e:	std    
  42146f:	xchg   ebx,eax
  421470:	mov    DWORD PTR [ebp+eiz*1-0x52],ecx
  421474:	sub    esp,DWORD PTR [edi+0x3]
  421477:	aad    0xec
  421479:	imul   eax
  42147b:	bound  ecx,QWORD PTR [eax+ebx*4+0x54d98954]
  421482:	jmp    0x1bd91704
  421487:	nop
  421488:	(bad)  
  421489:	or     esp,eax
  42148b:	jle    0x421503
  42148d:	ins    BYTE PTR es:[edi],dx
  42148e:	mov    ch,0xd4
  421490:	push   esp
  421491:	mov    ecx,0x14b045d1
  421496:	cld    
  421497:	push   edx
  421498:	push   edi
  421499:	rcl    DWORD PTR [ebp+0x26978ba0],1
  42149f:	(bad)  
  4214a0:	jmp    0x2a925073
  4214a5:	adc    ecx,DWORD PTR [edx-0x15]
  4214a8:	xchg   ebx,eax
  4214a9:	addr16 jbe 0x4214c3
  4214ac:	mov    ecx,0xc2130494
  4214b1:	mov    al,ds:0x9d98478
  4214b6:	jmp    0xd695793e
  4214bb:	cld    
  4214bc:	stc    
  4214bd:	js     0x4214bd
  4214bf:	pop    edx
  4214c0:	popa   
  4214c1:	aaa    
  4214c2:	mov    ebp,0x107e0b38
  4214c7:	add    eax,DWORD PTR [ecx-0x4194c7f9]
  4214cd:	add    eax,DWORD PTR [eax]
	...
  4214db:	add    BYTE PTR ds:0xbf06168e,dh
  4214e1:	sahf   
  4214e2:	xor    eax,0xa0e807bf
  4214e7:	mov    edx,0xca9afe30
  4214ec:	lods   al,BYTE PTR ds:[esi]
  4214ed:	pop    DWORD PTR [ecx]
  4214ef:	add    BYTE PTR [edx-0x71fffffe],cl
  4214f5:	pop    esp
  4214f6:	pop    ds
  4214f7:	push   eax
  4214f8:	fld    TBYTE PTR es:[esi+0x521c8e7]
  4214ff:	fcomp  DWORD PTR [edi]
  421501:	jbe    0x421514
  421503:	rol    DWORD PTR [esi+ebp*1+0x1c],cl
  421507:	jmp    0x263:0xa2d09a73
  42150e:	ucomiss xmm6,DWORD PTR [edx+0x9d0c75d]
  421515:	stos   BYTE PTR es:[edi],al
  421516:	(bad)  
  421517:	mul    dl
  421519:	push   ebx
  42151a:	dec    esi
  42151b:	iret   
  42151c:	mov    ch,0x68
  42151e:	gs push ebp
  421520:	mov    esi,0x5d4ca464
  421525:	cdq    
  421526:	mov    esp,0x649b216b
  42152b:	loope  0x4215a9
  42152d:	or     eax,0xbe775c1e
  421532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421533:	mov    edx,0x27eb7436
  421538:	push   esi
  421539:	and    ebx,edi
  42153b:	mov    ebx,0x96ed2f6d
  421540:	je     0x4214d1
  421542:	jmp    0xc07ec6c5
  421547:	or     esi,esp
  421549:	adc    BYTE PTR ds:0xea9890ec,0xa4
  421550:	jmp    DWORD PTR [eax+eiz*8]
  421553:	adc    esp,ebx
  421555:	mov    al,0x23
  421557:	out    0xc0,al
  421559:	jbe    0x42152c
  42155b:	ss das 
  42155d:	int3   
  42155e:	fidivr DWORD PTR [edi+0x1aa67c92]
  421564:	sbb    ecx,DWORD PTR [edx-0x3]
  421567:	cmp    cl,0xa8
  42156a:	and    ecx,esp
  42156c:	test   BYTE PTR [edx+0x701de8d3],cl
  421572:	cwde   
  421573:	adc    al,0xc
  421575:	adc    ebp,DWORD PTR [edx+0x1929b62b]
  42157b:	push   ebp
  42157c:	es arpl ax,dx
  42157f:	add    esp,edx
  421581:	cmp    eax,0x308bd454
  421586:	out    0xa9,eax
  421588:	and    al,BYTE PTR ds:0xfbedb79b
  42158e:	data16 jbe 0x421605
  421591:	push   ds
  421592:	mov    esp,0x2ff48b99
  421597:	mov    DWORD PTR [esi-0x4b29c13a],ecx
  42159d:	push   ebx
  42159e:	not    BYTE PTR [ebx-0x4c18bca2]
  4215a4:	mov    DWORD PTR [edi],ebp
  4215a6:	rcr    DWORD PTR [eax+0x3b],0x50
  4215aa:	xor    DWORD PTR [eax+0x57],edi
  4215ad:	cmp    BYTE PTR [ecx+0x6f],dl
  4215b0:	pop    eax
  4215b1:	(bad)  
  4215b2:	data16 sub al,0x56
  4215b5:	inc    edx
  4215b6:	mov    ebx,0x4b8f27af
  4215bb:	rcr    dl,0xd4
  4215be:	sub    DWORD PTR [eax+edx*2],ecx
  4215c1:	scas   al,BYTE PTR es:[edi]
  4215c2:	dec    ecx
  4215c3:	and    DWORD PTR [ecx],ebp
  4215c5:	mov    WORD PTR [edx+eax*4],?
  4215c8:	push   edi
  4215c9:	add    al,0xf9
  4215cb:	adc    al,BYTE PTR [eax-0x3717cd37]
  4215d1:	sbb    al,0x2e
  4215d3:	loope  0x421574
  4215d5:	test   eax,0xe4b4520c
  4215da:	(bad)  
  4215db:	mov    ch,0x49
  4215dd:	pop    ebx
  4215de:	inc    esp
  4215df:	sbb    al,0xf3
  4215e1:	adc    eax,0x5063a29
  4215e6:	adc    ch,cl
  4215e8:	and    bl,ah
  4215ea:	dec    eax
  4215eb:	fild   DWORD PTR [edi+0x710bee91]
  4215f1:	xor    al,0xd7
  4215f3:	pop    ebp
  4215f4:	and    BYTE PTR [edi-0x7c],dh
  4215f7:	dec    ebx
  4215f8:	pop    edx
  4215f9:	ins    BYTE PTR es:[edi],dx
  4215fa:	and    DWORD PTR [edi+0xf],ebx
  4215fd:	push   cs
  4215fe:	pop    ebp
  4215ff:	adc    bh,BYTE PTR [edx+0x37848da]
  421605:	add    al,0xad
  421607:	leave  
  421608:	lods   al,BYTE PTR es:[esi]
  42160a:	lock mov edi,es
  42160d:	nop
  42160e:	imul   eax,DWORD PTR [esi],0xb
  421611:	cmp    BYTE PTR [ebx-0x6f5123ac],dh
  421617:	inc    edx
  421618:	shr    BYTE PTR [ebp+0x3d],1
  42161b:	inc    ecx
  42161c:	clc    
  42161d:	jmp    0x41c9:0x85224b99
  421624:	mov    ds:0xc47b7fd0,al
  421629:	dec    ebp
  42162a:	xchg   edi,eax
  42162b:	push   ebp
  42162c:	mov    ch,BYTE PTR [edx+edx*1]
  42162f:	test   dh,dl
  421631:	jnp    0x4215c2
  421633:	dec    esi
  421634:	(bad)
  421637:	push   edx
  421638:	inc    edi
  421639:	mov    al,ds:0x7ec54e51
  42163e:	aam    0x97
  421640:	xchg   ebx,eax
  421641:	add    ebp,edx
  421643:	inc    esi
  421644:	xchg   edx,eax
  421645:	sub    al,0x8c
  421647:	cmp    dh,BYTE PTR [edx+eiz*2-0xe]
  42164b:	ret    
  42164c:	mov    ebx,0x4ab1b6d1
  421651:	cmp    ecx,ebp
  421653:	jbe    0x421662
  421655:	mov    dh,0xd1
  421657:	xor    DWORD PTR ds:0x33e165f6,esp
  42165d:	cmp    al,0x9e
  42165f:	aam    0x88
  421661:	xchg   edx,eax
  421662:	jp     0x421614
  421664:	retf   
  421665:	push   esp
  421666:	call   0x146:0x7e5ec275
  42166d:	imul   eax,DWORD PTR [eax+0x5b],0x5e
  421671:	adc    DWORD PTR [edi+0x122edf38],ecx
  421677:	jmp    0x46f4:0x3ea1d1b1
  42167e:	pop    eax
  42167f:	jae    0x42162b
  421681:	into   
  421682:	lahf   
  421683:	jecxz  0x4216b8
  421685:	test   BYTE PTR [eax],dl
  421687:	paddusb mm5,QWORD PTR ds:0x3b61bcd2
  42168e:	xor    eax,0x994b4748
  421693:	dec    ebx
  421694:	nop
  421695:	mov    bl,0xdc
  421697:	and    edx,edx
  421699:	rcl    ah,0x27
  42169c:	mov    DWORD PTR [ecx-0x158471d9],ebp
  4216a2:	imul   edi,DWORD PTR [ecx+esi*1-0x3c24ddd5],0xf58b6624
  4216ad:	adc    eax,0x76deabdc
  4216b3:	xchg   ebx,eax
  4216b4:	scas   al,BYTE PTR es:[edi]
  4216b5:	dec    ebx
  4216b6:	ret    0x7458
  4216b9:	les    edi,FWORD PTR [eax-0x52]
  4216bc:	jecxz  0x4216c1
  4216be:	ret    0x8ace
  4216c1:	xor    esp,eax
  4216c3:	mov    ch,BYTE PTR [esi]
  4216c5:	std    
  4216c6:	pop    ss
  4216c7:	mov    ch,0xef
  4216c9:	cmp    eax,DWORD PTR [edx+ebp*2]
  4216cc:	into   
  4216cd:	adc    edx,ecx
  4216cf:	mov    cl,0xcf
  4216d1:	enter  0x99f1,0xd1
  4216d5:	adc    ah,bh
  4216d7:	loope  0x4216aa
  4216d9:	pop    edi
  4216da:	scas   eax,DWORD PTR es:[edi]
  4216db:	dec    ecx
  4216dc:	pop    edi
  4216dd:	dec    esp
  4216de:	cwde   
  4216df:	dec    eax
  4216e0:	das    
  4216e1:	push   ecx
  4216e2:	fsubr  DWORD PTR [ecx+0x3e]
  4216e5:	pop    ss
  4216e6:	adc    eax,0x42742089
  4216eb:	fisubr DWORD PTR [ebp+0x17]
  4216ee:	cli    
  4216ef:	and    DWORD PTR [edi+ecx*2+0x1561132e],0x55338438
  4216fa:	jp     0x42171d
  4216fc:	test   BYTE PTR [edx-0x55e7736a],bh
  421702:	(bad)  
  421704:	cmp    edx,DWORD PTR [eax+ebx*4]
  421707:	popa   
  421708:	mov    dh,0xf8
  42170a:	inc    edi
  42170b:	sti    
  42170c:	mov    bh,cl
  42170e:	push   eax
  42170f:	bound  eax,QWORD PTR [esi-0x55de946a]
  421715:	mov    bl,0x5f
  421717:	ss jge 0x421708
  42171a:	mov    eax,0xae9df5e
  42171f:	mov    al,ds:0x86b790e7
  421724:	test   dh,bh
  421726:	xor    al,0xb4
  421728:	psadbw mm6,QWORD PTR [ebp-0x24]
  42172c:	jmp    0x7fc1:0x23e8d2da
  421733:	stos   DWORD PTR es:[edi],eax
  421734:	cld    
  421735:	test   DWORD PTR cs:[edx-0x2d0723a],edi
  42173c:	xor    BYTE PTR [edx],al
  42173e:	or     BYTE PTR [esp+eiz*2-0x5f58a669],dl
  421745:	mov    ?,WORD PTR [eax]
  421747:	mov    bh,0xba
  421749:	jle    0x4217a6
  42174b:	(bad)  
  42174d:	pusha  
  42174e:	pop    edx
  42174f:	inc    esp
  421750:	pusha  
  421751:	dec    esp
  421752:	pop    eax
  421753:	ss or  eax,0xa2450f58
  421759:	jae    0x421708
  42175b:	inc    ecx
  42175c:	dec    ecx
  42175d:	imul   ebx,DWORD PTR [ebx+ebp*8-0x7eee4780],0x38cedcc4
  421768:	adc    esp,DWORD PTR [edi]
  42176a:	ror    BYTE PTR [esi-0x56],1
  42176d:	into   
  42176e:	repz ja 0x5ec2e3ac
  421775:	int    0x11
  421777:	xlat   BYTE PTR ds:[ebx]
  421778:	and    eax,0xffffffb1
  42177b:	xchg   ecx,eax
  42177c:	icebp  
  42177d:	add    al,0x0
	...
  42178b:	add    cl,bh
  42178d:	std    
  42178e:	in     eax,dx
  42178f:	mov    cl,0xed
  421791:	mov    cl,0xfd
  421793:	std    
  421794:	pop    ds
  421795:	xor    dl,0xed
  421798:	xchg   edi,eax
  421799:	dec    edi
  42179a:	ret    0x36fc
  42179d:	xchg   edx,eax
  42179e:	add    DWORD PTR [eax],eax
  4217a0:	mov    al,BYTE PTR [edx]
  4217a2:	add    BYTE PTR [eax],al
  4217a4:	icebp  
  4217a5:	xchg   ebp,eax
  4217a6:	lods   al,BYTE PTR ds:[esi]
  4217a7:	int    0x6b
  4217a9:	in     al,0x5b
  4217ab:	ret    0x96e1
  4217ae:	adc    BYTE PTR [edx+0x6127fb9a],cl
  4217b4:	xor    al,bh
  4217b6:	cdq    
  4217b7:	dec    edx
  4217b8:	ret    
  4217b9:	lods   al,BYTE PTR ds:[esi]
  4217ba:	imul   DWORD PTR [eax]
  4217bc:	mov    bl,0x8e
  4217be:	jae    0x4217af
  4217c0:	inc    ebx
  4217c1:	pop    ds
  4217c2:	sub    al,0xda
  4217c4:	rol    ebx,0x23
  4217c7:	outs   dx,BYTE PTR ds:[esi]
  4217c8:	pop    esp
  4217c9:	sbb    al,dl
  4217cb:	pop    esp
  4217cc:	mov    ah,0xf9
  4217ce:	xchg   ebx,eax
  4217cf:	and    esp,DWORD PTR [ebx-0x5161fc62]
  4217d5:	stos   DWORD PTR es:[edi],eax
  4217d6:	sub    BYTE PTR [edx-0x2931c9c],0x8c
  4217dd:	pop    es
  4217de:	sub    bh,ch
  4217e0:	mov    ebp,0xd724e2ff
  4217e5:	xor    cl,BYTE PTR [ecx-0x42]
  4217e8:	push   esi
  4217e9:	cs pop ss
  4217eb:	jle    0x421851
  4217ed:	push   ebp
  4217ee:	and    DWORD PTR [esi-0x79056b0f],ecx
  4217f4:	gs cmp dh,0x5e
  4217f8:	sar    ebx,cl
  4217fa:	mov    edx,0x81bdf166
  4217ff:	cmp    al,0x88
  421801:	xor    dl,BYTE PTR [edx]
  421803:	fidivr DWORD PTR [ecx+ecx*1]
  421806:	xlat   BYTE PTR ds:[ebx]
  421807:	add    BYTE PTR [edi+ecx*2-0x21b253f0],al
  42180e:	dec    eax
  42180f:	sbb    BYTE PTR [esi],dh
  421811:	lods   al,BYTE PTR ds:[esi]
  421812:	push   esi
  421813:	dec    ebp
  421814:	mov    edx,0xb5159cb1
  421819:	popf   
  42181a:	xchg   edi,eax
  42181b:	pop    ecx
  42181c:	dec    edx
  42181d:	sub    edi,ebp
  42181f:	jne    0x421888
  421821:	xor    DWORD PTR [eax+0x1c],0x5663226b
  421828:	sbb    eax,0x166a32b7
  42182d:	(bad)  
  42182e:	jno    0x421847
  421830:	jnp    0x42189c
  421832:	push   esp
  421833:	shl    BYTE PTR [eax+edx*2],0xe6
  421837:	or     DWORD PTR [edi+0x5b],edi
  42183a:	xor    bh,bh
  42183c:	repz js 0x42188d
  42183f:	ror    esp,1
  421841:	adc    DWORD PTR [edi],0x64
  421844:	inc    eax
  421845:	pop    edx
  421846:	mov    BYTE PTR [edi-0x3d],al
  421849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42184a:	jb     0x421843
  42184c:	xchg   edx,eax
  42184d:	js     0x42188e
  42184f:	push   DWORD PTR [ebx]
  421851:	sbb    BYTE PTR [esi+0x6cd597ce],al
  421857:	xchg   ecx,eax
  421858:	and    al,0xd0
  42185a:	out    0x41,eax
  42185c:	sbb    eax,0x2d981a3e
  421861:	mov    ecx,0x92a594d9
  421866:	fcom   QWORD PTR [esp+edx*4]
  421869:	push   es
  42186a:	jmp    0xba2b:0xeca36708
  421871:	in     al,0xf6
  421873:	xchg   esi,eax
  421874:	fcmove st,st(7)
  421876:	mov    cl,BYTE PTR [edi+0x21]
  421879:	out    0x48,eax
  42187b:	jae    0x421848
  42187d:	dec    ebx
  42187e:	shl    eax,0x12
  421881:	shl    DWORD PTR [ecx-0x72d61eb],cl
  421887:	inc    edi
  421888:	pusha  
  421889:	ret    
  42188a:	jmp    0x3000:0x58b150f
  421891:	adc    eax,0x7f45ba0a
  421896:	es lahf 
  421898:	xor    BYTE PTR [eax-0xbb9c41c],ch
  42189e:	and    eax,0x4040957
  4218a3:	dec    ecx
  4218a4:	or     esp,DWORD PTR es:[eax+0x3a6e1902]
  4218ab:	lods   eax,DWORD PTR ds:[esi]
  4218ac:	div    BYTE PTR [edx]
  4218ae:	dec    ebx
  4218af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218b0:	add    al,0x84
  4218b2:	xchg   edi,esp
  4218b4:	sahf   
  4218b5:	sbb    DWORD PTR [ecx+0x72],esi
  4218b8:	adc    al,0xcc
  4218ba:	and    eax,0xc47c3992
  4218bf:	mov    DWORD PTR [edx-0x2af28a04],esp
  4218c5:	retf   
  4218c6:	fldenv [eax-0x5d]
  4218c9:	aaa    
  4218ca:	mov    ch,0xc9
  4218cc:	clc    
  4218cd:	dec    edx
  4218ce:	inc    ecx
  4218cf:	lea    ebp,[ebx+0x72]
  4218d2:	cwde   
  4218d3:	and    al,0x1c
  4218d5:	(bad)  
  4218d6:	outs   dx,BYTE PTR ds:[esi]
  4218d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218d8:	cli    
  4218d9:	imul   ecx,DWORD PTR ss:[esi*4-0x74cb17bc],0x2e7d258f
  4218e5:	fbld   TBYTE PTR [esi+0x30da6377]
  4218eb:	lahf   
  4218ec:	fwait
  4218ed:	push   edx
  4218ee:	and    BYTE PTR [edx-0x4002a7ad],al
  4218f4:	outs   dx,DWORD PTR ds:[esi]
  4218f5:	daa    
  4218f6:	ss dec esi
  4218f8:	xchg   esp,eax
  4218f9:	call   0x4568:0xf9878659
  421900:	repnz (bad) [edi-0x6d]
  421904:	inc    ebp
  421905:	xchg   BYTE PTR [ecx],ah
  421907:	ins    DWORD PTR es:[edi],dx
  421908:	pop    esi
  421909:	dec    edx
  42190a:	daa    
  42190b:	sub    al,dh
  42190d:	and    ch,BYTE PTR [edi+0x8]
  421910:	mov    edx,0x81f64e4a
  421915:	int3   
  421916:	aas    
  421917:	aas    
  421918:	lods   eax,DWORD PTR ds:[esi]
  421919:	pop    edx
  42191a:	xor    DWORD PTR [ecx+0x34e59614],eax
  421920:	js     0x4218c5
  421922:	mov    ds:0xb5047fd4,eax
  421927:	jmp    DWORD PTR [edx]
  421929:	fucomip st,st(7)
  42192b:	jo     0x42194e
  42192d:	dec    edx
  42192e:	sbb    BYTE PTR [ebx-0x53],dh
  421931:	sub    al,0xf8
  421933:	push   ecx
  421934:	sub    eax,0x799ef706
  421939:	fst    st(7)
  42193b:	ds jmp 0x954b:0x5506e765
  421943:	mov    eax,0xbba3db19
  421948:	mov    ch,0xaa
  42194a:	pop    esi
  42194b:	dec    eax
  42194c:	fstp   DWORD PTR [esi-0x65]
  42194f:	test   eax,0xf30555a0
  421954:	adc    BYTE PTR [ebp+edi*8+0x56],dl
  421958:	xchg   ebx,eax
  421959:	int3   
  42195a:	jnp    0x4218eb
  42195c:	adc    al,0xb8
  42195e:	sar    BYTE PTR [ebp+0x5b6354d4],cl
  421964:	call   0x933a:0x667ce61b
  42196b:	push   ss
  42196c:	(bad)  
  42196e:	mov    dh,0x99
  421970:	add    al,0x3d
  421972:	cli    
  421973:	jmp    0x421971
  421975:	outs   dx,DWORD PTR ds:[esi]
  421976:	call   0x6084:0x2b0fc11f
  42197d:	fnstcw WORD PTR [esi]
  42197f:	div    BYTE PTR [ebp+0x32859a52]
  421985:	retf   
  421986:	rcl    ebp,1
  421988:	push   esi
  421989:	sti    
  42198a:	xchg   eax,eax
  42198c:	in     al,0x52
  42198e:	es std 
  421990:	and    al,0xad
  421992:	in     al,0x78
  421994:	(bad)  
  421995:	xchg   edx,eax
  421996:	xor    DWORD PTR [ecx+0x4e88ef2],edi
  42199c:	clc    
  42199d:	push   edx
  42199e:	stos   BYTE PTR es:[edi],al
  42199f:	(bad)  
  4219a0:	stc    
  4219a1:	and    bh,BYTE PTR [edx]
  4219a3:	jb     0x4219c8
  4219a5:	jmp    0x964a8545
  4219aa:	or     dh,BYTE PTR [esi+0x68875c63]
  4219b0:	mov    ah,0x52
  4219b2:	daa    
  4219b3:	(bad)  
  4219b4:	dec    edi
  4219b5:	xor    ecx,esp
  4219b7:	mov    cl,0x9b
  4219b9:	ret    
  4219ba:	inc    eax
  4219bb:	popa   
  4219bc:	popa   
  4219bd:	xchg   esp,eax
  4219be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219bf:	test   al,0x86
  4219c1:	sbb    eax,0xced201ca
  4219c6:	add    eax,0xdfc23fde
  4219cb:	pop    ecx
  4219cc:	push   ebx
  4219cd:	mov    edx,DWORD PTR [eax-0x6041f359]
  4219d3:	fcomi  st,st(0)
  4219d5:	mov    esi,0x233351cd
  4219da:	in     eax,dx
  4219db:	sub    DWORD PTR [edx-0x160db6f5],ebx
  4219e1:	xor    esi,DWORD PTR [ebx]
  4219e3:	lock mov ds:0x97e64dd2,al
  4219e9:	adc    eax,0xac8ff1e1
  4219ee:	jno    0x4219a7
  4219f0:	mov    ecx,0xe7dbe0d4
  4219f5:	idiv   DWORD PTR [ecx]
  4219f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219f8:	push   0xd0af7244
  4219fd:	inc    ebx
  4219fe:	mov    ebx,0xf14df336
  421a03:	pop    ebp
  421a04:	push   0x78fb0862
  421a09:	mov    eax,0x2682901f
  421a0e:	dec    edi
  421a0f:	mov    ch,0xa5
  421a11:	jg     0x4219ab
  421a13:	add    edx,ecx
  421a15:	sbb    dl,BYTE PTR [eax+0x3c223eeb]
  421a1b:	jmp    0x4219b4
  421a1d:	and    al,0xcf
  421a1f:	outs   dx,BYTE PTR ds:[esi]
  421a20:	cmp    ebp,DWORD PTR [esi+0x10]
  421a23:	fisub  WORD PTR [esi-0x6e]
  421a26:	test   BYTE PTR [edi],dl
  421a28:	mov    dl,0x27
  421a2a:	out    0xb1,eax
  421a2c:	in     al,0x6d
	...
  421a3a:	add    BYTE PTR [eax],al
  421a3c:	repnz rol BYTE PTR ds:0xf6d53751,0xe3
  421a44:	out    dx,al
  421a45:	sub    ebp,esp
  421a47:	(bad)  
  421a49:	mov    al,0xca
  421a4b:	and    al,al
  421a4d:	xchg   esp,eax
  421a4e:	add    DWORD PTR [eax],eax
  421a50:	mov    al,BYTE PTR [edx]
  421a52:	add    BYTE PTR [eax],al
  421a54:	lea    edx,[edi+0x24973760]
  421a5a:	(bad)  
  421a5b:	fdivr  DWORD PTR [ebx+0x5e]
  421a5e:	cmp    ebp,DWORD PTR [ebx]
  421a60:	sbb    BYTE PTR [eax],0x20
  421a63:	xor    eax,0xe14accc9
  421a68:	mov    dh,0xa9
  421a6a:	das    
  421a6b:	mov    cl,0xf2
  421a6d:	jbe    0x421a5b
  421a6f:	and    esp,DWORD PTR [eax]
  421a71:	out    0x8c,al
  421a73:	lock xchg edx,eax
  421a75:	gs js  0x421a66
  421a78:	xlat   BYTE PTR ds:[ebx]
  421a79:	cmp    al,0x9a
  421a7b:	cli    
  421a7c:	sahf   
  421a7d:	inc    edi
  421a7e:	jg     0x421a91
  421a80:	xchg   ebx,eax
  421a81:	sbb    edi,ebp
  421a83:	popf   
  421a84:	jmp    0x67a34eaf
  421a89:	dec    edi
  421a8a:	push   ss
  421a8b:	mov    dh,BYTE PTR [esi-0x4ea188b9]
  421a91:	cmp    eax,DWORD PTR [ecx]
  421a93:	(bad)  
  421a95:	xor    bh,BYTE PTR [eax-0x4d]
  421a98:	out    0x4a,eax
  421a9a:	jno    0x421a63
  421a9c:	arpl   WORD PTR [esp-0x63],ax
  421aa0:	add    DWORD PTR [esi+0x69b93ef7],ebx
  421aa6:	mov    BYTE PTR [edi-0x116fa601],bl
  421aac:	cs scas eax,DWORD PTR es:[edi]
  421aae:	jle    0x421a8d
  421ab0:	sbb    DWORD PTR [ecx+ebp*4],edx
  421ab3:	jmp    0xbf36:0x2fe19abd
  421aba:	scas   eax,DWORD PTR es:[edi]
  421abb:	dec    esp
  421abc:	adc    ch,ch
  421abe:	push   edx
  421abf:	repz jmp 0xde6b:0x6312b088
  421ac7:	jb     0x421b02
  421ac9:	xchg   ebp,eax
  421aca:	xchg   ebx,eax
  421acb:	jecxz  0x421a9c
  421acd:	dec    eax
  421ace:	sahf   
  421acf:	out    dx,al
  421ad0:	push   ebx
  421ad1:	out    0x61,eax
  421ad3:	inc    ebx
  421ad4:	fs stos DWORD PTR es:[edi],eax
  421ad6:	ss sti 
  421ad8:	inc    esp
  421ad9:	dec    eax
  421ada:	mov    ss,ebx
  421adc:	dec    esi
  421add:	(bad)  
  421ade:	loop   0x421b43
  421ae0:	std    
  421ae1:	xchg   edi,eax
  421ae2:	push   ecx
  421ae3:	stc    
  421ae4:	dec    esi
  421ae5:	and    DWORD PTR [esi+eax*2+0x7681a179],0xffffff99
  421aed:	lds    esp,FWORD PTR ds:0xf3ca513b
  421af3:	inc    edi
  421af4:	mov    dl,0xbf
  421af6:	pop    ebx
  421af7:	loope  0x421a7e
  421af9:	mov    ?,WORD PTR [ebx]
  421afb:	mov    cl,0xf5
  421afd:	shr    BYTE PTR [edx-0x733e4b62],0x93
  421b04:	mov    bh,0x19
  421b06:	mov    edi,0x8d2274f0
  421b0b:	mov    eax,ds:0xa212676d
  421b10:	sub    ah,BYTE PTR [esi-0x22b31b32]
  421b16:	scas   eax,DWORD PTR es:[edi]
  421b17:	shl    BYTE PTR [ebp+eax*1-0x23a29d02],cl
  421b1e:	ins    BYTE PTR es:[edi],dx
  421b1f:	(bad)  
  421b20:	add    al,0xfe
  421b22:	pushf  
  421b23:	sub    eax,0x52be75db
  421b28:	dec    ebp
  421b29:	lds    ebx,FWORD PTR [edi-0x3f8055d1]
  421b2f:	xor    al,0xcc
  421b31:	gs pop esi
  421b33:	ds sahf 
  421b35:	cwde   
  421b36:	add    al,0x4
  421b38:	mov    ss,WORD PTR [ebx-0xa]
  421b3b:	push   DWORD PTR [edi-0x66]
  421b3e:	jle    0x421b09
  421b40:	(bad)  
  421b41:	cmp    DWORD PTR [eax+0x72],eax
  421b44:	dec    edx
  421b45:	dec    ebx
  421b46:	mov    bh,0x5b
  421b48:	(bad)  
  421b49:	jnp    0x421bae
  421b4b:	or     eax,0xcc9d1b4f
  421b50:	ret    0xb820
  421b53:	dec    ebx
  421b54:	inc    edx
  421b55:	retf   
  421b56:	test   DWORD PTR [eax+0x52838770],ecx
  421b5c:	ret    
  421b5d:	hlt    
  421b5e:	or     cl,BYTE PTR [ecx]
  421b60:	sti    
  421b61:	pop    esi
  421b62:	shl    BYTE PTR [ebx-0x67],1
  421b65:	dec    ebp
  421b66:	adc    eax,0xf99f300d
  421b6b:	cmovno eax,ebp
  421b6e:	push   ss
  421b6f:	jbe    0x421be8
  421b71:	sub    ch,BYTE PTR [edx-0x18]
  421b74:	sub    DWORD PTR [edi+edi*4-0xf2655ea],ebp
  421b7b:	cdq    
  421b7c:	pop    ecx
  421b7d:	push   ax
  421b7f:	aaa    
  421b80:	push   esp
  421b81:	xor    BYTE PTR [ebp-0x6c],al
  421b84:	cmp    edx,DWORD PTR [ebx+eax*1]
  421b87:	adc    BYTE PTR ds:0x74f45926,bl
  421b8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b8e:	or     bh,BYTE PTR [ebx-0x4d5e2f0e]
  421b94:	ss push ds
  421b96:	jg     0x421bf7
  421b98:	fwait
  421b99:	(bad)  
  421b9a:	jmp    0x9c61:0xbc269806
  421ba1:	cmc    
  421ba2:	neg    BYTE PTR [esp+ecx*2-0x25]
  421ba6:	push   0xffffffe0
  421ba8:	fdivp  st(0),st
  421baa:	and    DWORD PTR [ecx-0x30528fce],ebp
  421bb0:	jnp    0x421c1f
  421bb2:	test   DWORD PTR [ebx+0x1d32a3d4],ecx
  421bb8:	bound  esp,QWORD PTR [eax-0x6a1c3617]
  421bbe:	scas   al,BYTE PTR es:[edi]
  421bbf:	out    dx,al
  421bc0:	pushf  
  421bc1:	(bad)  
  421bc3:	dec    ecx
  421bc4:	lea    esi,[eax+0x16]
  421bc7:	mov    ds:0x56505b7b,al
  421bcc:	mov    esp,0xc45af2c7
  421bd1:	add    eax,0x686c6c1c
  421bd6:	out    dx,al
  421bd7:	xor    BYTE PTR [ecx+eiz*1],cl
  421bda:	or     BYTE PTR [eax+0x7f],0x11
  421bde:	bnd jb 0x421bb8
  421be1:	mov    ecx,0xb6072732
  421be6:	mov    dl,BYTE PTR [ecx-0x75]
  421be9:	test   al,0x6
  421beb:	mov    edi,0xdd25ff9e
  421bf0:	jmp    0x2a7f1827
  421bf5:	sub    ecx,0xfffffff1
  421bf8:	cdq    
  421bf9:	sub    DWORD PTR [edx+0x42],ebx
  421bfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bfd:	or     bl,BYTE PTR [esi+0x48dd9038]
  421c03:	or     eax,0xbfde7b0f
  421c08:	adc    DWORD PTR [edx+ebp*2+0x15],edx
  421c0c:	pop    ecx
  421c0d:	pop    ebx
  421c0e:	add    al,0x63
  421c10:	push   ds
  421c11:	pop    edx
  421c12:	xchg   ecx,eax
  421c13:	outs   dx,BYTE PTR ds:[esi]
  421c14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c15:	iret   
  421c16:	rcr    DWORD PTR [edx+0x18],cl
  421c19:	(bad)  
  421c1a:	popa   
  421c1b:	pop    esp
  421c1c:	jp     0x421bfa
  421c1e:	into   
  421c1f:	cmp    BYTE PTR [edi],dh
  421c21:	mov    ecx,0x2078c04f
  421c26:	data16 sub BYTE PTR [esi+0x7b7718dd],0x37
  421c2e:	dec    ecx
  421c2f:	mov    WORD PTR [eax+eax*8],?
  421c32:	loope  0x421ca7
  421c34:	jmp    0xbee3908c
  421c39:	pop    ebp
  421c3a:	xchg   esp,eax
  421c3b:	adc    DWORD PTR [edi+0x38],edx
  421c3e:	outs   dx,BYTE PTR ds:[esi]
  421c3f:	adc    ebx,DWORD PTR ds:[esi+0x3]
  421c43:	push   0x2d165a2
  421c48:	sbb    esp,esi
  421c4a:	xor    bh,BYTE PTR [ebx+edi*2-0x7a17faab]
  421c51:	jmp    0x2251:0x6b212bc0
  421c58:	jg     0x421c86
  421c5a:	add    eax,0xa16a603a
  421c5f:	pusha  
  421c60:	jecxz  0x421ca5
  421c62:	loop   0x421c14
  421c64:	inc    eax
  421c65:	push   ebx
  421c66:	xchg   ecx,eax
  421c67:	loop   0x421c44
  421c69:	add    eax,0x4a40b0b8
  421c6f:	cmp    al,0x1e
  421c71:	xor    DWORD PTR [esi],edi
  421c73:	add    eax,0xa54bd0b1
  421c78:	mov    ebp,0xaf5995f9
  421c7d:	inc    edi
  421c7e:	pop    ebp
  421c7f:	pop    ds
  421c80:	nop
  421c81:	push   eax
  421c82:	push   esp
  421c83:	sub    DWORD PTR [edi+eax*4+0x1edda377],edx
  421c8a:	mov    BYTE PTR [ecx],ch
  421c8c:	and    DWORD PTR [edx-0x30],eax
  421c8f:	enter  0x9c40,0x14
  421c93:	fwait
  421c94:	pop    ss
  421c95:	ror    DWORD PTR [ecx],0x4e
  421c98:	mov    ebx,0x3341e3e0
  421c9d:	imul   eax,DWORD PTR [edx-0x2f028aa9],0x6
  421ca4:	cdq    
  421ca5:	inc    esp
  421ca6:	adc    al,0xf4
  421ca8:	sar    DWORD PTR [ebp-0x1da962f3],1
  421cae:	std    
  421caf:	cmc    
  421cb0:	xchg   ebx,eax
  421cb1:	jne    0x421c4a
  421cb3:	push   ebp
  421cb4:	mov    ds:0xa88d489b,al
  421cb9:	adc    bl,BYTE PTR [esi-0x7d]
  421cbc:	or     eax,0x72d55800
  421cc1:	push   esp
  421cc2:	sub    DWORD PTR [esp+edx*1-0x59],edi
  421cc6:	pushf  
  421cc7:	push   0x11
  421cc9:	inc    ebx
  421cca:	xchg   edx,eax
  421ccb:	fs icebp 
  421ccd:	pop    ss
  421cce:	aam    0xfa
  421cd0:	mov    eax,0x884bb7fa
  421cd5:	(bad)  
  421cd6:	jno    0x421cb8
  421cd8:	mov    ecx,0x246f7356
  421cdd:	fiadd  DWORD PTR [eax]
	...
  421ceb:	add    BYTE PTR [ebx+0x41],al
  421cee:	popa   
  421cef:	data16 arpl WORD PTR [esi+0x47],sp
  421cf3:	rcr    DWORD PTR gs:[edi+0x16],cl
  421cf7:	xor    BYTE PTR [ecx+0x4a387ca4],al
  421cfd:	xchg   edi,eax
  421cfe:	add    DWORD PTR [eax],eax
  421d00:	mov    al,BYTE PTR [edx]
  421d02:	add    BYTE PTR [eax],al
  421d04:	das    
  421d05:	shl    DWORD PTR [eax-0x6158a1fc],0x3a
  421d0c:	sar    esi,cl
  421d0e:	cmp    al,BYTE PTR [eax]
  421d10:	dec    ecx
  421d11:	stc    
  421d12:	in     eax,dx
  421d13:	cmp    BYTE PTR [edi],ah
  421d15:	cmp    dh,BYTE PTR [ebp+eiz*8+0x44]
  421d19:	add    BYTE PTR ds:0x513d00b5,bl
  421d1f:	or     ebx,DWORD PTR [ebx-0x51]
  421d22:	arpl   WORD PTR [edi+edx*4+0x2d057390],cx
  421d29:	push   cs
  421d2a:	out    dx,al
  421d2b:	xchg   esi,eax
  421d2c:	and    al,0x79
  421d2e:	xchg   edx,eax
  421d2f:	aad    0xe4
  421d31:	jno    0x421d81
  421d33:	pop    ebp
  421d34:	out    0x76,al
  421d36:	mov    edi,0xa73fe19c
  421d3b:	pop    ecx
  421d3c:	mov    bh,0x9
  421d3e:	mov    ah,0x41
  421d40:	int    0xf7
  421d42:	xchg   ebp,eax
  421d43:	and    al,BYTE PTR [ebp+0x3e4573d7]
  421d49:	add    dl,BYTE PTR [esi+0x33]
  421d4c:	fild   QWORD PTR [edi+ecx*4]
  421d4f:	ja     0x421d66
  421d51:	test   edi,esp
  421d53:	xchg   esi,eax
  421d54:	mov    bl,BYTE PTR [edi-0x5d1d7da3]
  421d5a:	neg    DWORD PTR [ecx-0x57]
  421d5d:	cmp    ebx,DWORD PTR [esi+0x6d]
  421d60:	xor    esp,edx
  421d62:	fnstcw WORD PTR [edx+0x49e8f500]
  421d68:	pop    ds
  421d69:	add    eax,0xe2eaaf1e
  421d6e:	or     ebp,DWORD PTR [edx]
  421d70:	jne    0x421dd0
  421d72:	(bad)  
  421d73:	cmp    al,0xd0
  421d75:	popa   
  421d76:	fdiv   st(5),st
  421d78:	loopne 0x421d21
  421d7a:	fs jo  0x421d2d
  421d7d:	repnz cmp BYTE PTR [ebp-0x664be831],cl
  421d84:	sbb    DWORD PTR [ebp+0x40220478],0x1df0f87
  421d8e:	cmp    eax,0x7769efac
  421d93:	mov    ch,0x9
  421d95:	mov    esp,0xc877105
  421d9a:	push   0x32
  421d9c:	xor    eax,0x3bf9c965
  421da1:	repnz xchg esp,eax
  421da3:	repz mov ebx,0x7ce2c3c0
  421da9:	into   
  421daa:	std    
  421dab:	mov    esi,0xed73cc1e
  421db0:	(bad)  
  421db1:	clc    
  421db2:	xor    DWORD PTR [eax],ecx
  421db4:	jp     0x421dfb
  421db6:	sbb    eax,0x21b04f36
  421dbb:	push   edx
  421dbc:	jge    0x421d7d
  421dbe:	jbe    0x421de6
  421dc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dc1:	mov    ds:0xa7e34405,eax
  421dc6:	fistp  QWORD PTR ds:0x69f70ff8
  421dcc:	add    eax,0x1ef74b22
  421dd1:	mov    esp,0x9b138dd1
  421dd6:	popa   
  421dd7:	mov    ebx,0x3c3210fd
  421ddc:	mov    eax,ds:0x6b1a51c4
  421de1:	lock sub ecx,DWORD PTR [esi-0x6c7171ea]
  421de8:	ins    BYTE PTR es:[edi],dx
  421de9:	adc    cl,BYTE PTR [ebx]
  421deb:	gs je  0x421da2
  421dee:	cmp    eax,0xbb7b6be9
  421df3:	push   es
  421df4:	jl     0x421e46
  421df6:	or     cl,BYTE PTR [eax+0x3ef7e2]
  421dfc:	xor    esi,DWORD PTR [ebx]
  421dfe:	cmp    ebx,0xffffffe3
  421e01:	test   DWORD PTR ds:0x625a271a,esi
  421e07:	inc    edx
  421e08:	or     DWORD PTR [edx+eax*1+0x4b],edi
  421e0c:	ins    DWORD PTR es:[edi],dx
  421e0d:	mov    edx,0x133f98ff
  421e12:	push   cs
  421e13:	jnp    0x421ddf
  421e15:	cmp    DWORD PTR [ecx+0x77264f2e],edi
  421e1b:	outs   dx,BYTE PTR ds:[esi]
  421e1c:	jns    0x421e39
  421e1e:	(bad)  [ecx]
  421e20:	scas   eax,DWORD PTR es:[edi]
  421e21:	cli    
  421e22:	cdq    
  421e23:	ret    0x2f70
  421e26:	mov    cl,0xc5
  421e28:	popf   
  421e29:	(bad)  [edx+0x28]
  421e2c:	out    0x9c,al
  421e2e:	pop    edi
  421e2f:	inc    edi
  421e30:	or     al,0x6
  421e32:	hlt    
  421e33:	pop    es
  421e34:	cdq    
  421e35:	mov    al,ds:0x67910e73
  421e3a:	shl    BYTE PTR [eax-0x35],0xf
  421e3e:	repz and eax,0xad9efd8d
  421e44:	mov    edi,0x6c8b2d16
  421e49:	and    BYTE PTR [ebx-0x6e],dh
  421e4c:	jecxz  0x421e71
  421e4e:	imul   BYTE PTR [edi]
  421e50:	(bad)  
  421e51:	sub    DWORD PTR [eax+0x2e],ebp
  421e54:	push   ebp
  421e55:	test   eax,0x37a0bec6
  421e5a:	call   0xb514dbfe
  421e5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e60:	push   ss
  421e61:	jo     0x421e43
  421e63:	gs jbe 0x421e5d
  421e66:	mov    WORD PTR [ecx],ds
  421e68:	add    eax,DWORD PTR [edi]
  421e6a:	sub    DWORD PTR [esi+ebp*1-0x27],esp
  421e6e:	aaa    
  421e6f:	add    al,BYTE PTR [edi+0x39236bf2]
  421e75:	adc    ah,dl
  421e77:	and    eax,0xa5af8904
  421e7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e7d:	push   0xde4884a8
  421e82:	int3   
  421e83:	xchg   edi,eax
  421e84:	jg     0x421e31
  421e86:	je     0x421eac
  421e88:	dec    DWORD PTR [ecx-0x6e]
  421e8b:	or     edi,DWORD PTR [ebx+edi*8+0x4dc96bd2]
  421e92:	and    al,0x1f
  421e94:	scas   eax,DWORD PTR es:[edi]
  421e95:	je     0x421e4b
  421e97:	arpl   WORD PTR ss:[edi+0x7d585dd2],si
  421e9e:	sbb    ch,al
  421ea0:	fbstp  TBYTE PTR [edi]
  421ea2:	or     DWORD PTR [ecx+0x1e],0xffffffdf
  421ea6:	mov    edx,0xedd5a252
  421eab:	int    0x18
  421ead:	ret    
  421eae:	int    0x39
  421eb0:	push   ds
  421eb1:	or     al,0xed
  421eb3:	fs add al,0x70
  421eb6:	nop
  421eb7:	cld    
  421eb8:	sbb    BYTE PTR [ecx-0x565ad4d6],ch
  421ebe:	js     0x421ef9
  421ec0:	mov    ds:0x82bd48b7,al
  421ec5:	aaa    
  421ec6:	sbb    eax,0x1f29c5c9
  421ecb:	mov    ch,0x99
  421ecd:	aas    
  421ece:	gs cld 
  421ed0:	mov    al,ds:0x5115e75
  421ed5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ed6:	xor    DWORD PTR [eax-0x4],ecx
  421ed9:	mov    esp,0xb689b394
  421ede:	cwde   
  421edf:	data16 icebp 
  421ee1:	out    0xf,al
  421ee3:	jle    0x421f06
  421ee5:	xlat   BYTE PTR ds:[ebx]
  421ee6:	push   edi
  421ee7:	jo     0x421eaa
  421ee9:	ja     0x421ecf
  421eeb:	das    
  421eec:	fmul   QWORD PTR [ecx-0xd]
  421eef:	into   
  421ef0:	outs   dx,BYTE PTR ds:[esi]
  421ef1:	mov    esp,0x456935b7
  421ef6:	mov    dh,0xdd
  421ef8:	mov    bl,0xd2
  421efa:	pop    es
  421efb:	pusha  
  421efc:	jmp    0xb29b:0x35f1de3a
  421f03:	mov    esi,0x2b985700
  421f08:	and    esi,DWORD PTR [edi-0x70448e42]
  421f0e:	sub    DWORD PTR [edx-0xb],esi
  421f11:	es mov esp,0x9062a1c9
  421f17:	push   ecx
  421f18:	js     0x421f19
  421f1a:	dec    eax
  421f1b:	sub    esi,DWORD PTR [ecx]
  421f1d:	ret    
  421f1e:	sbb    dh,BYTE PTR [ebx]
  421f20:	retf   
  421f21:	sub    al,0x55
  421f23:	mov    cl,0x53
  421f25:	adc    BYTE PTR [edx+0xda6e3d6],dh
  421f2b:	adc    BYTE PTR [eax+eax*2+0x63],dl
  421f2f:	sbb    al,0xb9
  421f31:	and    BYTE PTR [eax],cl
  421f33:	jge    0x421f65
  421f35:	jne    0x421fb3
  421f37:	imul   esi,DWORD PTR [edi-0x22e131aa],0xffffffd6
  421f3e:	(bad)  
  421f3f:	je     0x421f02
  421f41:	mov    dh,0x31
  421f43:	(bad)  
  421f44:	in     al,dx
  421f45:	add    eax,0x39d81378
  421f4a:	jns    0x421eeb
  421f4c:	sar    ch,0x5a
  421f4f:	sbb    dh,BYTE PTR [ebp-0x26]
  421f52:	test   ah,ah
  421f54:	call   0xa23a4966
  421f59:	or     bl,0xd8
  421f5c:	aas    
  421f5d:	sub    bh,BYTE PTR [eax+0x4533c8e6]
  421f63:	push   edx
  421f64:	(bad)  
  421f65:	mov    edi,0x2c3dff73
  421f6a:	es pop ebp
  421f6c:	pop    esp
  421f6d:	xor    cl,dl
  421f6f:	lahf   
  421f70:	js     0x421f99
  421f72:	pop    esp
  421f73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f74:	xchg   esi,eax
  421f75:	in     eax,0x9d
  421f77:	cmp    al,dl
  421f79:	outs   dx,BYTE PTR ds:[esi]
  421f7a:	xchg   ebp,eax
  421f7b:	sub    BYTE PTR [edx+0x41d5bbed],0xe1
  421f82:	es (bad) 
  421f85:	pop    ebp
  421f86:	xor    DWORD PTR [ebx+eax*1-0x3],0xffffff86
  421f8b:	push   ss
  421f8c:	push   edx
  421f8d:	jo     0x421f8f
	...
  421f9b:	add    BYTE PTR [ebx-0xce42c16],cl
  421fa1:	cmp    ecx,ebx
  421fa3:	cli    
  421fa4:	in     al,dx
  421fa5:	jg     0x421fde
  421fa7:	loopne 0x421f7f
  421fa9:	iret   
  421faa:	adc    al,0xc1
  421fac:	aam    0x99
  421fae:	add    DWORD PTR [eax],eax
  421fb0:	mov    al,BYTE PTR [edx]
  421fb2:	add    BYTE PTR [eax],al
  421fb4:	punpcklbw mm1,DWORD PTR ds:0x7f70a95e
  421fbb:	popf   
  421fbc:	cs push 0x4d
  421fbf:	(bad)  
  421fc0:	mov    bh,0x89
  421fc2:	fld    TBYTE PTR [edi-0x491960fa]
  421fc8:	jle    0x421f6f
  421fca:	pop    ebx
  421fcb:	pop    ebx
  421fcc:	das    
  421fcd:	xchg   ah,al
  421fcf:	dec    ebp
  421fd0:	adc    edi,DWORD PTR [edx+0x4f9c0af0]
  421fd6:	adc    BYTE PTR [esi-0x17],dh
  421fd9:	sbb    al,0x3b
  421fdb:	mov    al,0x93
  421fdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fde:	pop    edx
  421fdf:	std    
  421fe0:	sbb    DWORD PTR [ebx+edx*4],esi
  421fe3:	cmp    BYTE PTR [edi],ah
  421fe5:	sub    edi,edx
  421fe7:	jae    0x421fb4
  421fe9:	cli    
  421fea:	loopne 0x422010
  421fec:	iret   
  421fed:	push   0xffffffd7
  421fef:	f2xm1  
  421ff1:	fcmovu st,st(0)
  421ff3:	jnp    0x422001
  421ff5:	fs push 0xffffffd7
  421ff8:	mov    ecx,0x141ad905
  421ffd:	inc    edi
  421ffe:	sub    DWORD PTR [esi],esi
  422000:	mov    bl,0x46
  422002:	dec    ebp
  422003:	xchg   BYTE PTR [esi-0x5d4fb31],ah
  422009:	sub    eax,0x9f7775f8
  42200e:	sub    ebp,ecx
  422010:	loope  0x421fa7
  422012:	pop    DWORD PTR [ebp-0x2f788c13]
  422018:	cli    
  422019:	xchg   dh,al
  42201b:	pop    DWORD PTR [eax-0x42]
  42201e:	push   ebx
  42201f:	cmp    BYTE PTR [ebx],bl
  422021:	lds    ecx,FWORD PTR [eax-0x6a]
  422024:	pop    esp
  422025:	cli    
  422026:	jmp    0xa62f:0xea21fd4
  42202d:	fnstcw WORD PTR [edx]
  42202f:	fwait
  422030:	out    0xd8,eax
  422032:	js     0x421fd0
  422034:	ret    
  422035:	adc    ah,dl
  422037:	pop    ebp
  422038:	iret   
  422039:	fsubp  st(1),st
  42203b:	and    DWORD PTR [edi-0x24],eax
  42203e:	sub    DWORD PTR [edi-0x41bd7ce4],ecx
  422044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422045:	and    al,0x6
  422047:	fs mov cl,0x69
  42204a:	push   edi
  42204b:	xchg   BYTE PTR [ecx],dl
  42204d:	pop    ss
  42204e:	and    DWORD PTR [eax+0x77c3efca],ecx
  422054:	data16 sbb cl,BYTE PTR ss:[eax+0x52]
  422059:	or     eax,0x65d52912
  42205e:	sbb    BYTE PTR [eax],bl
  422060:	xchg   edi,eax
  422061:	and    eax,0x6a9c2119
  422066:	hlt    
  422067:	mov    dl,0x54
  422069:	pop    ebp
  42206a:	call   0x9ed0:0xa37d6b53
  422071:	xor    edx,edx
  422073:	call   0x1ef2:0x918c6f1f
  42207a:	stc    
  42207b:	xor    ebx,DWORD PTR [ebp-0x4caeac45]
  422081:	push   cs
  422082:	or     al,0xb0
  422084:	pop    es
  422085:	fnstenv [edi]
  422087:	mov    ch,BYTE PTR [edi]
  422089:	mov    dh,0xa6
  42208b:	ret    0x21c2
  42208e:	xor    eax,DWORD PTR [ebx]
  422090:	or     al,0x7c
  422092:	dec    ebp
  422093:	retf   
  422094:	clc    
  422095:	sub    al,0x82
  422097:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422098:	dec    ecx
  422099:	(bad)  
  42209a:	repnz jmp 0x808a:0x88ee48a9
  4220a2:	nop
  4220a3:	jb     0x422105
  4220a5:	jl     0x4220e8
  4220a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220a8:	mov    edi,0xf3e966ae
  4220ad:	fdiv   st(3),st
  4220af:	mov    dh,0x65
  4220b1:	ror    esi,0xc8
  4220b4:	pop    edi
  4220b5:	int3   
  4220b6:	jbe    0x4220e0
  4220b8:	fldcw  WORD PTR [eax-0x66928e37]
  4220be:	ja     0x422137
  4220c0:	mov    cl,0x5b
  4220c2:	pop    DWORD PTR ds:0x967adbc4
  4220c8:	pop    ebp
  4220c9:	or     ebp,ebx
  4220cb:	inc    esi
  4220cc:	or     eax,0xef5049e1
  4220d1:	mov    ds:0x9bea6707,al
  4220d6:	test   BYTE PTR [ebx+0x58876e08],ah
  4220dc:	lods   eax,DWORD PTR ds:[esi]
  4220dd:	lock (bad) 
  4220df:	fst    DWORD PTR [esi-0x6d]
  4220e2:	jle    0x42214a
  4220e4:	inc    eax
  4220e5:	xor    DWORD PTR [esi],esi
  4220e7:	push   ss
  4220e8:	add    al,0x1d
  4220ea:	fsubp  st(7),st
  4220ec:	xchg   ecx,eax
  4220ed:	sub    BYTE PTR [edi-0x7ff8c04a],0xe8
  4220f4:	jns    0x42211e
  4220f6:	xor    BYTE PTR [ebx-0x2035ce04],ch
  4220fc:	in     eax,dx
  4220fd:	jb     0x422155
  4220ff:	adc    al,0x64
  422101:	mov    al,0x15
  422103:	push   edx
  422104:	mov    dl,0x65
  422106:	pop    eax
  422107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422108:	dec    eax
  422109:	dec    esp
  42210a:	jle    0x4220e7
  42210c:	xchg   edi,eax
  42210d:	pop    esp
  42210e:	adc    DWORD PTR [eax-0x5a657487],ecx
  422114:	jnp    0x422195
  422116:	xor    cl,ch
  422118:	sub    DWORD PTR [esi-0x6e],0x76
  42211c:	inc    esp
  42211d:	push   esp
  42211e:	fst    st(2)
  422120:	mov    ecx,0xf8a794c1
  422125:	ins    BYTE PTR es:[edi],dx
  422126:	idiv   BYTE PTR [ebp-0x81a1ed9]
  42212c:	ins    DWORD PTR es:[edi],dx
  42212d:	mov    WORD PTR ds:0xc9040016,gs
  422133:	popf   
  422134:	cmp    al,0xc6
  422136:	popf   
  422137:	sbb    al,0xdd
  422139:	jne    0x42210c
  42213b:	ins    DWORD PTR es:[edi],dx
  42213c:	mov    ds:0xeb02197a,eax
  422141:	shl    DWORD PTR [ecx+0x29],cl
  422144:	sti    
  422145:	xchg   esp,eax
  422146:	mov    ecx,0xd7f46f1e
  42214b:	jno    0x42211a
  42214d:	mov    edi,0x4b289113
  422152:	lods   al,BYTE PTR ds:[esi]
  422153:	dec    eax
  422154:	iret   
  422155:	jecxz  0x422127
  422157:	sub    BYTE PTR [eax],ch
  422159:	repz or eax,0xca28a122
  42215f:	out    0xc8,eax
  422161:	(bad)  
  422163:	fadd   st,st(0)
  422165:	stc    
  422166:	cmp    eax,0xcca839c8
  42216b:	inc    edi
  42216c:	enter  0x753b,0x30
  422170:	xor    ecx,DWORD PTR [eax+0x56]
  422173:	xchg   esi,eax
  422174:	pop    esi
  422175:	mov    bl,0x37
  422177:	jae    0x4221ae
  422179:	jb     0x4221f8
  42217b:	call   FWORD PTR [edi-0x76]
  42217e:	ret    
  42217f:	and    DWORD PTR [edx+0x1a],ecx
  422182:	push   es
  422183:	sbb    esp,DWORD PTR [ebp+0x2c]
  422186:	mov    bh,0x14
  422188:	xor    eax,DWORD PTR es:[ebp-0x12968bb0]
  42218f:	sub    al,0x8c
  422191:	aam    0x21
  422193:	or     ebp,ebp
  422195:	scas   eax,DWORD PTR es:[edi]
  422196:	fcmove st,st(7)
  422198:	push   ebx
  422199:	pop    ebx
  42219a:	add    eax,0x7314190b
  42219f:	(bad)  
  4221a0:	fidiv  WORD PTR [esi]
  4221a2:	mov    esp,0xd785faf5
  4221a7:	and    DWORD PTR [eax-0x11],ecx
  4221aa:	xor    eax,0xfebfd668
  4221af:	js     0x42215c
  4221b1:	(bad)  
  4221b2:	int    0x10
  4221b4:	jl     0x4221ff
  4221b6:	in     eax,dx
  4221b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221b8:	repz mov bh,0xf0
  4221bb:	sub    al,0x80
  4221bd:	sbb    dl,BYTE PTR [edx-0x7925b9dd]
  4221c3:	sub    DWORD PTR [edx-0x6],eax
  4221c6:	xchg   edi,eax
  4221c7:	nop
  4221c8:	mov    dh,0xc3
  4221ca:	fdivr  DWORD PTR [ecx+0x691ec728]
  4221d0:	das    
  4221d1:	popf   
  4221d2:	adc    eax,0x8a0b4744
  4221d7:	es xchg ebp,esi
  4221da:	das    
  4221db:	scas   eax,DWORD PTR es:[edi]
  4221dc:	ins    BYTE PTR es:[edi],dx
  4221dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221de:	mov    al,ds:0x30cb04fc
  4221e3:	lods   eax,DWORD PTR ds:[esi]
  4221e4:	lds    esi,FWORD PTR [esi+0x18]
  4221e7:	mov    ah,0x4
  4221e9:	xlat   BYTE PTR ds:[ebx]
  4221ea:	pop    ss
  4221eb:	scas   eax,DWORD PTR es:[edi]
  4221ec:	and    DWORD PTR es:[edi],ebx
  4221ef:	jbe    0x4221ee
  4221f1:	iret   
  4221f2:	or     DWORD PTR [ecx],esp
  4221f4:	xchg   edx,eax
  4221f5:	mov    bl,0x95
  4221f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221f8:	cld    
  4221f9:	inc    esp
  4221fa:	pop    edi
  4221fb:	dec    edx
  4221fc:	cmp    DWORD PTR [esi+0x5b38728],0x972949a0
  422206:	cmp    ecx,eax
  422208:	call   DWORD PTR [ebx-0x78]
  42220b:	push   ds
  42220c:	dec    ebx
  42220d:	inc    eax
  42220e:	xchg   ebx,eax
  42220f:	mov    WORD PTR [edx-0x60ad12d6],ss
  422215:	jns    0x422224
  422217:	test   al,0x92
  422219:	xchg   edx,eax
  42221a:	in     eax,0x36
  42221c:	sbb    DWORD PTR [eax+0x13],eax
  42221f:	push   edi
  422220:	add    esi,eax
  422222:	popa   
  422223:	fmul   st,st(3)
  422226:	jge    0x4221f0
  422228:	mov    ch,0x6a
  42222a:	push   es
  42222b:	mov    WORD PTR [esi+esi*1+0x4d9ab172],?
  422232:	and    BYTE PTR [edx],bh
  422234:	xor    al,0xc2
  422236:	out    dx,eax
  422237:	adc    BYTE PTR [ecx+0x20],bl
  42223a:	cmp    al,0x6
  42223c:	les    ebx,FWORD PTR [edi]
	...
  42224a:	add    BYTE PTR [eax],al
  42224c:	shl    BYTE PTR [edx],cl
  42224e:	xchg   esi,eax
  42224f:	call   0x1e52:0x6adebef6
  422256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422257:	and    ch,BYTE PTR [edx+esi*1-0x66]
  42225b:	loop   0x4222bb
  42225d:	pushf  
  42225e:	add    DWORD PTR [eax],eax
  422260:	mov    al,BYTE PTR [edx]
  422262:	add    BYTE PTR [eax],al
  422264:	mov    dh,0xd0
  422266:	in     al,0x64
  422268:	outs   dx,DWORD PTR ds:[esi]
  422269:	mov    ebp,0xb82da660
  42226e:	adc    eax,DWORD PTR [ebp-0x16649c81]
  422274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422275:	pop    ebx
  422276:	repz cmp DWORD PTR ds:0x6055f506,edx
  42227d:	xchg   ebp,eax
  42227e:	mov    ebp,0xf18fcae3
  422283:	mov    edx,0x9d62b93d
  422288:	(bad)  
  42228a:	xor    cl,BYTE PTR [ebx-0x48]
  42228d:	fisttp QWORD PTR [ebx]
  42228f:	or     BYTE PTR [ebx+ebp*4+0x50],ah
  422293:	je     0x422246
  422295:	xchg   ecx,eax
  422296:	and    eax,0xbeb716c5
  42229b:	mov    BYTE PTR [ebp+0x2e],ch
  42229e:	outs   dx,DWORD PTR ds:[esi]
  42229f:	outs   dx,DWORD PTR ds:[esi]
  4222a0:	cmp    DWORD PTR [esi-0x20712f41],edi
  4222a6:	ror    DWORD PTR [edx-0x10],0x8d
  4222aa:	mov    ds:0x23444bb9,eax
  4222af:	int3   
  4222b0:	push   edx
  4222b1:	leave  
  4222b2:	js     0x4222aa
  4222b4:	cmp    DWORD PTR [ebx-0x72d8ae56],edx
  4222ba:	jmp    0x3a34:0xb6ad1899
  4222c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222c2:	repnz dec eax
  4222c4:	jnp    0x4222e8
  4222c6:	add    DWORD PTR [edx],eax
  4222c8:	xlat   BYTE PTR ds:[ebx]
  4222c9:	mov    al,ds:0x1718823a
  4222ce:	(bad)  
  4222cf:	sub    ebx,ecx
  4222d1:	mov    eax,0x21a77967
  4222d6:	adc    ebp,DWORD PTR [ebx+esi*1-0x67]
  4222da:	or     ebp,DWORD PTR [ebx+0x27]
  4222dd:	mov    dl,0xeb
  4222df:	mov    dl,0x82
  4222e1:	and    DWORD PTR [esi-0x22473712],ebp
  4222e7:	ins    DWORD PTR es:[edi],dx
  4222e8:	repnz ror DWORD PTR [ebx+0x53],0xf7
  4222ed:	std    
  4222ee:	mov    ds:0xab5cf7fe,al
  4222f3:	lods   eax,DWORD PTR ds:[esi]
  4222f4:	mov    eax,0xd16b3f5d
  4222f9:	push   ds
  4222fa:	pushf  
  4222fb:	add    BYTE PTR [ebx],ah
  4222fd:	aam    0x1a
  4222ff:	xlat   BYTE PTR ds:[ebx]
  422300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422301:	add    al,0x19
  422303:	xor    DWORD PTR [edi-0x5fb5b3bf],edx
  422309:	int    0xf0
  42230b:	xor    DWORD PTR [ebx+0x173f9b34],0xd5a1b202
  422315:	sub    edx,ebx
  422317:	pushf  
  422318:	mov    al,BYTE PTR [eax+0x4f12b358]
  42231e:	xor    eax,0xcf6ce2e0
  422323:	xchg   edx,eax
  422324:	push   eax
  422325:	sbb    ebp,ecx
  422327:	jno    0x4222ab
  422329:	add    eax,DWORD PTR [eax+esi*2]
  42232c:	out    0xd5,al
  42232e:	sbb    eax,0xf587343a
  422333:	ds pop ecx
  422335:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422336:	xor    al,BYTE PTR [edx]
  422338:	int3   
  422339:	sub    DWORD PTR [esi],esp
  42233b:	jnp    0x422371
  42233d:	retf   0xb54b
  422340:	jae    0x4222cf
  422342:	sub    al,0x2a
  422344:	and    eax,0xd5e94883
  422349:	pop    es
  42234a:	loop   0x4223bc
  42234c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42234d:	or     BYTE PTR [ebx+0x32],al
  422350:	(bad)  
  422352:	test   eax,0x72c40c29
  422357:	xchg   edx,eax
  422358:	sbb    cl,0xbb
  42235b:	lds    ebx,FWORD PTR [ebp-0x45]
  42235e:	inc    esi
  42235f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422360:	push   ebx
  422361:	push   cs
  422362:	mov    esi,0x80db99a2
  422367:	mul    esi
  422369:	add    DWORD PTR [eax+0x5976ccc4],esi
  42236f:	ret    0x17e1
  422372:	jg     0x42236c
  422374:	or     BYTE PTR [esi-0x4d],0x8f
  422378:	test   BYTE PTR [eax-0x56],ah
  42237b:	xchg   edi,eax
  42237c:	cmp    eax,0x86706c0
  422381:	push   cs
  422382:	fsubr  st(7),st
  422384:	gs loopne 0x4223e8
  422387:	mov    ah,0x77
  422389:	nop
  42238a:	(bad)  
  42238c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42238d:	retf   0xd88a
  422390:	loop   0x42239a
  422392:	cld    
  422393:	sub    DWORD PTR [edi-0x137400ef],ebx
  422399:	fcomp  DWORD PTR [eax-0x6acb55a7]
  42239f:	push   edi
  4223a0:	push   0xfffffff3
  4223a2:	lods   eax,DWORD PTR ds:[esi]
  4223a3:	neg    DWORD PTR [edx]
  4223a5:	cmp    ebp,DWORD PTR [eax]
  4223a7:	in     eax,dx
  4223a8:	mov    ds:0x5b6f8439,eax
  4223ad:	sbb    edx,DWORD PTR [eax]
  4223af:	sbb    DWORD PTR [ebp+esi*1+0x2bc90ebc],edx
  4223b6:	cmp    bl,bl
  4223b8:	pop    esi
  4223b9:	arpl   WORD PTR [edx-0xacf9a4b],si
  4223bf:	sbb    eax,0x62127704
  4223c4:	clc    
  4223c5:	push   cs
  4223c6:	fadd   QWORD PTR ds:0x1c4488bc
  4223cc:	and    eax,0xb9f1e361
  4223d1:	ds call 0xf085948f
  4223d7:	xchg   ecx,eax
  4223d8:	mov    cl,0xb8
  4223da:	mov    ch,0xa0
  4223dc:	or     edx,ebp
  4223de:	xchg   BYTE PTR [edi+0x5e1c6f07],bh
  4223e4:	push   edx
  4223e5:	push   esp
  4223e6:	loope  0x4223f8
  4223e8:	pop    eax
  4223e9:	cmp    BYTE PTR [eax],bl
  4223eb:	rcl    DWORD PTR [ebp-0x56d1ba16],0x65
  4223f2:	inc    eax
  4223f3:	inc    ebx
  4223f4:	cs jnp 0x42244b
  4223f7:	or     edi,DWORD PTR [eax+0x6a]
  4223fa:	(bad)  
  4223fb:	js     0x422453
  4223fd:	mov    ch,0xd6
  4223ff:	je     0x4223a3
  422401:	xchg   edi,eax
  422402:	push   ebp
  422403:	mov    edx,0xb6f65704
  422408:	iret   
  422409:	dec    esi
  42240a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42240b:	mov    fs,WORD PTR [edi]
  42240d:	mov    bl,0xc4
  42240f:	xchg   ebx,eax
  422410:	ficom  WORD PTR [edx-0x70]
  422413:	or     DWORD PTR [ebp-0x33],esp
  422416:	mov    BYTE PTR [edi-0x69],al
  422419:	adc    ah,dh
  42241b:	xor    ebx,DWORD PTR ss:[edx]
  42241e:	sub    eax,0x2fb5f1b7
  422423:	push   cs
  422424:	sub    eax,0x40aecd9
  422429:	jmp    0x4223b9
  42242b:	or     BYTE PTR [ebp-0x5b],dh
  42242e:	pop    ds
  42242f:	add    DWORD PTR [eax],0x4099ecf9
  422435:	mov    DWORD PTR [eax],ebp
  422437:	out    dx,al
  422438:	mov    al,0x47
  42243a:	push   edx
  42243b:	xor    eax,0x262d399f
  422440:	das    
  422441:	pop    ebx
  422442:	enter  0x74ec,0xb9
  422446:	mov    dh,0xad
  422448:	idiv   edx
  42244a:	mov    dl,0xbf
  42244c:	clc    
  42244d:	mov    ch,0xc
  42244f:	mov    WORD PTR [edx+0x6b3f2e00],es
  422455:	in     al,dx
  422456:	mov    ecx,0x51e64f17
  42245b:	out    0x6c,al
  42245d:	sub    DWORD PTR cs:[ebx-0x7c90b9be],ebx
  422464:	mov    BYTE PTR [ecx+0x71],ch
  422467:	pop    ebx
  422468:	fimul  DWORD PTR [esi*4-0x3025be7a]
  42246f:	(bad)  
  422470:	sbb    eax,0x11bcc39c
  422475:	dec    esi
  422476:	cmp    eax,0xdfb8a864
  42247b:	adc    eax,0xf4c2d81c
  422480:	xor    cl,BYTE PTR [eax+edx*4-0x3ebfe370]
  422487:	add    al,0x83
  422489:	mov    ecx,0x4b400e4e
  42248e:	mov    ?,WORD PTR [ebx+ebp*4+0x57]
  422492:	dec    edi
  422493:	cmp    al,0x69
  422495:	loop   0x42247c
  422497:	push   ecx
  422498:	mov    ch,0x31
  42249a:	shl    DWORD PTR [esi],1
  42249c:	adc    eax,0x9d5f04f9
  4224a1:	or     ch,BYTE PTR [edi+0x67092aa1]
  4224a7:	cdq    
  4224a8:	adc    eax,0x1f3e9ad0
  4224ad:	lahf   
  4224ae:	lods   eax,DWORD PTR ds:[esi]
  4224af:	jecxz  0x422528
  4224b1:	aaa    
  4224b2:	scas   eax,DWORD PTR es:[edi]
  4224b3:	mov    eax,0x780a485c
  4224b8:	mov    BYTE PTR [ecx],dh
  4224ba:	icebp  
  4224bb:	mul    esp
  4224bd:	adc    DWORD PTR [esi+ebx*8-0x1e],ecx
  4224c1:	cmp    eax,0xfb47a9cd
  4224c6:	fwait
  4224c7:	xor    ah,BYTE PTR [ebp+0x79]
  4224ca:	std    
  4224cb:	jmp    0xfe915ef0
  4224d0:	sti    
  4224d1:	mov    edi,0xb1cf7cf7
  4224d6:	xchg   bh,bh
  4224d8:	rcl    BYTE PTR [ebx+edx*8+0x4757183f],1
  4224df:	adc    ebx,DWORD PTR [ecx+edx*2-0x6f]
  4224e3:	add    al,0x4a
  4224e5:	dec    ecx
  4224e6:	in     al,0xd2
  4224e8:	cmp    al,0xfb
  4224ea:	ins    BYTE PTR es:[edi],dx
  4224eb:	mov    eax,0x7414
	...
  4224fc:	fnstsw WORD PTR [edi+ecx*4]
  4224ff:	mov    esp,0x7dffbfef
  422504:	add    al,BYTE PTR [ebp-0x3415723f]
  42250a:	push   es
  42250b:	psubsb mm3,QWORD PTR [esi+0x28a0001]
  422512:	add    BYTE PTR [eax],al
  422514:	leave  
  422515:	sbb    ebp,esi
  422517:	fwait
  422518:	sbb    bh,BYTE PTR [esi]
  42251a:	in     al,0xed
  42251c:	sbb    bh,BYTE PTR [ebx+0x3a]
  42251f:	stos   DWORD PTR es:[edi],eax
  422520:	shl    dl,0xa3
  422523:	sub    cl,ah
  422525:	adc    eax,eax
  422527:	fcmovnu st,st(4)
  422529:	push   esi
  42252a:	jne    0x42257e
  42252c:	test   DWORD PTR [ebp+edi*2+0x9],ebp
  422530:	pop    ecx
  422531:	cmc    
  422532:	push   ds
  422533:	lds    edx,FWORD PTR [edi+0x3f]
  422536:	xchg   edi,eax
  422537:	daa    
  422538:	cmp    esi,esi
  42253a:	xor    esp,ebp
  42253c:	dec    esi
  42253d:	stos   BYTE PTR es:[edi],al
  42253e:	mov    ebx,0xcc9a8eec
  422543:	mov    eax,0x96e1b3ec
  422548:	loop   0x422546
  42254a:	jbe    0x42255e
  42254c:	dec    esi
  42254d:	aas    
  42254e:	sub    al,0xc6
  422550:	mul    BYTE PTR [ebp-0x1e]
  422553:	mov    esp,0x39a7c1f
  422558:	je     0x42250e
  42255a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42255b:	inc    ebp
  42255c:	dec    ebx
  42255d:	stos   DWORD PTR es:[edi],eax
  42255e:	stos   DWORD PTR es:[edi],eax
  42255f:	xor    eax,0x824349ab
  422564:	mov    bh,BYTE PTR [ebx+0x7]
  422567:	shl    BYTE PTR ds:0x14f31eec,cl
  42256d:	jo     0x42251a
  42256f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422571:	outs   dx,DWORD PTR ds:[esi]
  422572:	sti    
  422573:	iret   
  422574:	dec    DWORD PTR ds:0x55430eee
  42257a:	stos   BYTE PTR es:[edi],al
  42257b:	jo     0x422593
  42257d:	xor    ah,al
  42257f:	setl   BYTE PTR [ebx+0x22b232f7]
  422586:	mov    dl,0xec
  422588:	dec    ecx
  422589:	pop    esp
  42258a:	mov    al,0x33
  42258c:	add    bl,BYTE PTR [eax+0x7e57e656]
  422592:	push   esp
  422593:	sub    eax,0xbadf586e
  422598:	popf   
  422599:	sub    DWORD PTR [ebx+esi*1-0x77097722],edx
  4225a0:	in     eax,0x90
  4225a2:	je     0x4225ff
  4225a4:	in     eax,0x14
  4225a6:	lods   al,BYTE PTR ds:[esi]
  4225a7:	xchg   edx,eax
  4225a8:	lods   al,BYTE PTR ds:[esi]
  4225a9:	add    eax,ebx
  4225ab:	pop    ebp
  4225ac:	fidivr WORD PTR [esi]
  4225ae:	add    DWORD PTR [edi+0x3b],esp
  4225b1:	mov    cl,0x4d
  4225b3:	call   0xa24:0xa33b3455
  4225ba:	push   esp
  4225bb:	jmp    0x422578
  4225bd:	out    dx,al
  4225be:	loopne 0x4225df
  4225c0:	fnstenv [esi-0x549ac329]
  4225c6:	jns    0x4225fa
  4225c8:	das    
  4225c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225ca:	pushf  
  4225cb:	fucomip st,st(6)
  4225cd:	(bad)  
  4225ce:	or     BYTE PTR [edi+0x28],bl
  4225d1:	retf   
  4225d2:	pop    esi
  4225d3:	xchg   ebp,eax
  4225d4:	adc    dl,cl
  4225d6:	push   eax
  4225d7:	pushf  
  4225d8:	rcr    BYTE PTR ds:0xdfd58341,1
  4225de:	xchg   edi,eax
  4225df:	jecxz  0x4225e3
  4225e1:	iret   
  4225e2:	cs jae 0x422648
  4225e5:	aam    0x91
  4225e7:	(bad)  
  4225e8:	push   edx
  4225e9:	push   0x92500bc7
  4225ee:	enter  0xcedd,0x1
  4225f2:	pop    bp
  4225f4:	jmp    0x422599
  4225f6:	sub    BYTE PTR [eax],0xb5
  4225f9:	test   ebx,edx
  4225fb:	mov    WORD PTR [esi+0x30],fs
  4225fe:	mov    ebp,0x83ad9e0a
  422603:	and    cl,dh
  422605:	popa   
  422606:	push   esi
  422607:	push   ecx
  422608:	pop    ds
  422609:	push   eax
  42260a:	cmp    eax,0xc746d353
  42260f:	sbb    cl,BYTE PTR [eax-0x73a0db80]
  422615:	pop    ecx
  422616:	inc    esi
  422617:	int3   
  422618:	loop   0x4225ec
  42261a:	rol    DWORD PTR [ecx+eiz*8],1
  42261d:	push   0xe168d544
  422622:	lock inc eax
  422624:	outs   dx,BYTE PTR ds:[esi]
  422625:	lods   al,BYTE PTR ds:[esi]
  422626:	inc    edi
  422627:	or     cl,BYTE PTR [esp+eax*1]
  42262a:	cmp    eax,0xa3e0a9fb
  42262f:	test   bl,dl
  422631:	int3   
  422632:	ret    0xd9e
  422635:	xor    al,0x61
  422637:	pop    ss
  422638:	call   0xae33b2eb
  42263d:	mov    eax,0x26de895b
  422642:	mov    ebx,0x6ec8f675
  422647:	into   
  422648:	pop    eax
  422649:	dec    eax
  42264a:	mov    dl,0xec
  42264c:	push   eax
  42264d:	lahf   
  42264e:	jle    0x422657
  422650:	enter  0x9c5b,0xe9
  422654:	loop   0x4226a0
  422656:	scas   al,BYTE PTR es:[edi]
  422657:	cs inc edi
  422659:	jp     0x422695
  42265b:	or     ecx,DWORD PTR [ebx+0x654cc469]
  422661:	jb     0x422618
  422663:	adc    al,0x90
  422665:	sbb    bl,BYTE PTR [ecx-0x6ff5456c]
  42266b:	(bad)  
  42266c:	sbb    BYTE PTR [edi],ch
  42266e:	pop    ebp
  42266f:	movntps XMMWORD PTR [ebp+0x72dd26ce],xmm4
  422676:	add    al,0x34
  422678:	out    dx,eax
  422679:	repz add dl,bh
  42267c:	pop    edx
  42267e:	in     al,0x31
  422680:	imul   ebx,DWORD PTR [ecx+ebp*1+0x22dfcdd2],0x70a1ecec
  42268b:	sub    ebp,esi
  42268d:	retf   0xd090
  422690:	das    
  422691:	outs   dx,DWORD PTR ds:[esi]
  422692:	pop    eax
  422693:	pop    ebx
  422694:	retf   
  422695:	adc    eax,0xdf37dbb2
  42269a:	ins    DWORD PTR es:[edi],dx
  42269b:	mov    ecx,0x12e3eb30
  4226a0:	xchg   BYTE PTR [edx+0x73],dl
  4226a3:	and    dh,bl
  4226a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226a6:	push   cs
  4226a7:	add    bh,bh
  4226a9:	test   eax,0x8d9a8015
  4226ae:	push   0x69
  4226b0:	dec    ebx
  4226b1:	bound  edi,QWORD PTR [ecx+esi*1-0x7c9a44f8]
  4226b8:	pop    ss
  4226b9:	enter  0xdfec,0xdd
  4226bd:	stos   DWORD PTR es:[edi],eax
  4226be:	xor    esp,esp
  4226c0:	dec    esp
  4226c1:	push   ds
  4226c2:	test   al,0x51
  4226c4:	sbb    eax,0x12881d03
  4226c9:	ja     0x42264b
  4226cb:	or     bl,0x0
  4226ce:	mov    dl,BYTE PTR [ebx]
  4226d0:	(bad)  
  4226d1:	jmp    0x374b:0x57b512d
  4226d8:	test   BYTE PTR [edi+0x4ebd1b99],bl
  4226de:	jge    0x42274a
  4226e0:	call   0x4294a6bd
  4226e5:	adc    dh,cl
  4226e7:	dec    esi
  4226e8:	ror    BYTE PTR [eax],1
  4226ea:	retf   0x73e0
  4226ed:	pop    ds
  4226ee:	add    eax,0x2f635671
  4226f3:	ficomp WORD PTR [edi]
  4226f5:	xchg   esi,eax
  4226f6:	sub    al,0xdf
  4226f8:	popf   
  4226f9:	mov    bl,0x39
  4226fb:	jnp    0x42276d
  4226fd:	mov    ch,0x1f
  4226ff:	jmp    0x96be2143
  422704:	cli    
  422705:	ss inc eax
  422707:	mov    eax,0x1c2e1f71
  42270c:	xor    al,0xe9
  42270e:	js     0x4226b8
  422710:	in     al,0xbe
  422712:	sbb    cl,BYTE PTR [esi+0x47]
  422715:	pop    ss
  422716:	add    BYTE PTR [ebx-0x3ca5bf47],ah
  42271c:	jg     0x4226a1
  42271e:	icebp  
  42271f:	mov    esp,DWORD PTR [ecx]
  422721:	xor    DWORD PTR [eax-0x14],eax
  422724:	push   cs
  422725:	(bad)  
  422726:	mov    edi,DWORD PTR [ecx-0x40c60482]
  42272c:	stc    
  42272d:	jg     0x42277f
  42272f:	jle    0x422773
  422731:	popa   
  422732:	adc    eax,0xfa225436
  422737:	int    0x8d
  422739:	xlat   BYTE PTR ds:[ebx]
  42273a:	cmp    eax,0x63e2a4df
  42273f:	mov    BYTE PTR [edi+0x77d24a3c],bl
  422745:	out    0x85,eax
  422747:	cwde   
  422748:	cdq    
  422749:	lea    edx,[ebp+0x3b]
  42274c:	mov    bl,BYTE PTR [ecx+ecx*8+0x0]
  422750:	bnd jge 0x4226d6
  422753:	test   BYTE PTR [ebp-0x3b],al
  422756:	or     eax,0x1372f3b5
  42275b:	dec    esp
  42275c:	test   BYTE PTR [esi+0x1348c16d],cl
  422762:	stos   BYTE PTR es:[edi],al
  422763:	aaa    
  422764:	inc    ecx
  422765:	sbb    edx,0xc519b341
  42276b:	int3   
  42276c:	pop    ss
  42276d:	mov    ecx,0x18d9ad8e
  422772:	add    DWORD PTR [ecx-0x11],eax
  422775:	and    edi,DWORD PTR [edx+0x69]
  422778:	loope  0x422769
  42277a:	push   eax
  42277b:	push   0x7
  42277d:	leave  
  42277e:	cs scas eax,DWORD PTR es:[edi]
  422780:	arpl   bx,dx
  422782:	aaa    
  422783:	adc    al,BYTE PTR [ebp-0x5f613a3]
  422789:	push   es
  42278a:	dec    ecx
  42278b:	daa    
  42278c:	sbb    dh,BYTE PTR [ebx+0x2d12a4fb]
  422792:	xchg   ecx,eax
  422793:	mov    ebx,0x9867162
  422798:	dec    edx
  422799:	cmp    eax,0x7954f5f6
	...
  4227aa:	add    BYTE PTR [eax],al
  4227ac:	mov    dh,0xdf
  4227ae:	fwait
  4227af:	add    bh,bl
  4227b1:	inc    esi
  4227b2:	mov    edi,0x5e25f0ff
  4227b7:	and    eax,0xd5e6d4d2
  4227bc:	jb     0x42275f
  4227be:	add    DWORD PTR [eax],eax
  4227c0:	mov    al,BYTE PTR [edx]
  4227c2:	add    BYTE PTR [eax],al
  4227c4:	push   ebx
  4227c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227c6:	mov    ch,BYTE PTR [edx+ebx*8]
  4227c9:	fidiv  DWORD PTR [ebp-0x6da8f423]
  4227cf:	mov    ds:0x974c3ff7,al
  4227d4:	(bad)  
  4227d5:	and    eax,0xd7d09be6
  4227da:	jmp    FWORD PTR [edi+eiz*8+0x60]
  4227de:	fisub  WORD PTR [edi+edi*8+0x4b277fb2]
  4227e5:	mov    edx,0xe874489d
  4227ea:	sub    BYTE PTR [ebp-0x4eeee74d],al
  4227f0:	je     0x4227b2
  4227f2:	int3   
  4227f3:	pop    ds
  4227f4:	xchg   ebx,eax
  4227f5:	push   ss
  4227f6:	dec    eax
  4227f7:	xchg   BYTE PTR [ebx+0x66],ah
  4227fa:	call   0x6d12bf9c
  4227ff:	test   BYTE PTR [ebx+0x25],al
  422802:	or     dh,ah
  422804:	call   0xd010ad4
  422809:	sahf   
  42280a:	daa    
  42280b:	push   ebx
  42280c:	fs sub al,0xe2
  42280f:	xchg   edi,eax
  422810:	daa    
  422811:	popa   
  422812:	jae    0x4227b2
  422814:	popa   
  422815:	test   dh,ah
  422817:	or     ah,ch
  422819:	retf   0x66b3
  42281c:	call   0x3a26:0x22b23c6e
  422823:	mov    edx,0xd74cbd
  422828:	cmc    
  422829:	adc    al,0xa1
  42282b:	push   edi
  42282c:	xor    edx,DWORD PTR [edi+0x74]
  42282f:	sbb    ch,BYTE PTR [edi-0x72]
  422832:	fcmovb st,st(4)
  422834:	repnz mov es,WORD PTR [ecx]
  422837:	inc    esi
  422838:	cmp    edx,0x2c9edaaa
  42283e:	loope  0x4228b0
  422840:	pop    edx
  422841:	jge    0x42281d
  422843:	sbb    DWORD PTR [ebx+0x47],eax
  422846:	cli    
  422847:	dec    esp
  422848:	xor    BYTE PTR [ecx-0x5c],dl
  42284b:	jecxz  0x4228aa
  42284d:	push   edi
  42284e:	into   
  42284f:	jnp    0x4228b5
  422851:	aaa    
  422852:	sbb    esp,DWORD PTR [edx-0x22518ea3]
  422858:	push   ds
  422859:	sbb    ebp,ebx
  42285b:	inc    edx
  42285c:	dec    ecx
  42285d:	enter  0x13e3,0xd6
  422861:	jns    0x42280b
  422863:	push   edi
  422864:	arpl   WORD PTR [ebp+0x19d50a21],bp
  42286a:	adc    DWORD PTR [edx],0x24353446
  422870:	scas   eax,DWORD PTR es:[edi]
  422871:	xchg   ecx,eax
  422872:	sbb    DWORD PTR [esp+ebx*2],0x27e90d20
  422879:	jno    0xa1ea61d1
  42287f:	mov    ds:0x79c0b8fd,eax
  422884:	mov    BYTE PTR [eax+0x730c5ea8],bh
  42288a:	(bad)  
  42288b:	imul   edi,DWORD PTR [edx+0x31],0xebeb5b69
  422892:	push   esi
  422893:	inc    ebp
  422894:	pop    esp
  422895:	sahf   
  422896:	int3   
  422897:	and    cl,bl
  422899:	xlat   BYTE PTR ds:[ebx]
  42289a:	mov    ch,0xa8
  42289c:	leave  
  42289d:	pop    ss
  42289e:	mov    esp,0xfb7ac249
  4228a3:	into   
  4228a4:	fldl2e 
  4228a6:	xchg   ebx,eax
  4228a7:	in     al,0x73
  4228a9:	mov    al,0x48
  4228ab:	mov    ch,0x2f
  4228ad:	cmp    al,0x28
  4228af:	adc    esp,ebx
  4228b1:	rol    DWORD PTR [edi-0x263477c9],1
  4228b7:	popa   
  4228b8:	(bad)  
  4228b9:	pop    ebx
  4228ba:	(bad)  
  4228bb:	nop
  4228bc:	mov    DWORD PTR [edi-0x16],ebp
  4228bf:	addr16 hlt 
  4228c1:	pop    ebp
  4228c2:	stos   DWORD PTR es:[edi],eax
  4228c3:	pop    ebx
  4228c4:	ds adc eax,0xa5c2db78
  4228ca:	aaa    
  4228cb:	add    BYTE PTR [ecx+0x42bfcd00],bh
  4228d1:	sub    esi,edx
  4228d3:	or     DWORD PTR ds:0x79e579ac,0xffffffdd
  4228da:	sub    eax,0x5c158e79
  4228df:	mov    DWORD PTR [ebx+0x1bb03871],eax
  4228e5:	cmp    DWORD PTR [eax+0x46],ebx
  4228e8:	and    DWORD PTR [esi],esi
  4228ea:	std    
  4228eb:	and    al,0xa9
  4228ed:	lea    ebx,[edi+eax*1+0x22]
  4228f1:	mov    dl,BYTE PTR [edx-0x78]
  4228f4:	inc    ecx
  4228f5:	jo     0x422879
  4228f7:	test   BYTE PTR [edi],bh
  4228f9:	mov    cl,0x8f
  4228fb:	ficom  WORD PTR [ebp+0x3e]
  4228fe:	sahf   
  4228ff:	pop    edx
  422900:	add    DWORD PTR [ebx+eiz*4-0x1e3ad915],0x49a0f861
  42290b:	das    
  42290c:	mov    dh,0x71
  42290e:	je     0x42294e
  422910:	mov    ecx,DWORD PTR [edi]
  422912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422913:	sub    DWORD PTR [ecx-0x76db843c],ebx
  422919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42291a:	jmp    0x3334862d
  42291f:	(bad)  
  422920:	lods   eax,DWORD PTR ds:[esi]
  422921:	mov    edi,0x53ac026
  422926:	pop    edi
  422927:	in     al,dx
  422928:	lods   eax,DWORD PTR ds:[esi]
  422929:	nop
  42292a:	mov    al,ds:0x39701608
  42292f:	fwait
  422930:	mov    ebx,0xd89ecc6a
  422935:	xchg   edi,eax
  422936:	adc    eax,0xa3331911
  42293b:	in     eax,dx
  42293c:	icebp  
  42293d:	sbb    dl,bl
  42293f:	adc    DWORD PTR ds:0x27b102a7,0xc17bc2ae
  422949:	retf   0x75e1
  42294c:	and    eax,0x64907a48
  422951:	test   cl,dh
  422953:	inc    ebp
  422954:	adc    BYTE PTR [ecx*2-0x52cab87d],ah
  42295b:	es out 0xf5,al
  42295e:	scas   eax,DWORD PTR es:[edi]
  42295f:	push   es
  422960:	and    cl,BYTE PTR es:[edx-0x57]
  422964:	call   0x2bd323a9
  422969:	cmc    
  42296a:	pcmpeqb mm3,QWORD PTR [edi+edi*2-0x4fe9a06c]
  422972:	pop    ecx
  422973:	pop    ds
  422974:	arpl   WORD PTR [eax+0x29d65d40],si
  42297a:	loopne 0x422979
  42297c:	les    edi,FWORD PTR [ebx+0x5e]
  42297f:	jg     0x42294e
  422981:	xor    ah,BYTE PTR [esi]
  422983:	js     0x422930
  422985:	aaa    
  422986:	int3   
  422987:	add    DWORD PTR [esi],ebp
  422989:	and    DWORD PTR es:0x6d09d29c,eax
  422990:	pop    ecx
  422991:	inc    ebx
  422992:	lock sbb dl,cl
  422995:	arpl   bp,di
  422997:	inc    eax
  422998:	dec    esp
  422999:	shl    ebp,0x5
  42299c:	dec    ecx
  42299d:	cdq    
  42299e:	ins    BYTE PTR es:[edi],dx
  42299f:	xor    edx,0x76da0239
  4229a5:	retf   0xce93
  4229a8:	repz or esi,ebx
  4229ab:	sub    al,0xfb
  4229ad:	ret    
  4229ae:	xor    al,BYTE PTR [esi]
  4229b0:	or     ecx,DWORD PTR [eax+0x43]
  4229b3:	xchg   edx,eax
  4229b4:	mov    dl,0x4d
  4229b6:	daa    
  4229b7:	jmp    0x8742e974
  4229bc:	or     DWORD PTR [eax-0x11],esp
  4229bf:	out    0x36,al
  4229c1:	iret   
  4229c2:	out    0xa9,eax
  4229c4:	test   DWORD PTR [edi-0x4a],esi
  4229c7:	fbstp  TBYTE PTR [eax+0x33]
  4229ca:	mov    eax,0x88895cf6
  4229cf:	or     bl,BYTE PTR [bx+si-0x3902]
  4229d4:	dec    ecx
  4229d5:	mov    eax,0x1515143b
  4229da:	add    BYTE PTR [eax],ah
  4229dc:	mov    edi,0xc7a9c26d
  4229e1:	sbb    al,0xa9
  4229e3:	inc    esi
  4229e4:	adc    al,0x1a
  4229e6:	cmc    
  4229e7:	pop    ss
  4229e8:	sahf   
  4229e9:	cli    
  4229ea:	test   edx,ecx
  4229ec:	pop    DWORD PTR cs:[eax]
  4229ef:	xchg   ebx,eax
  4229f0:	or     dh,cl
  4229f2:	js     0x422a21
  4229f4:	pop    es
  4229f5:	jp     0x422977
  4229f7:	ret    
  4229f8:	push   edi
  4229f9:	dec    ebx
  4229fa:	push   edx
  4229fb:	loopne 0x4229a5
  4229fd:	mov    ebx,0x52b1ba5f
  422a02:	adc    eax,0xaaa7047d
  422a07:	xlat   BYTE PTR ds:[ebx]
  422a08:	(bad)  
  422a09:	add    edi,DWORD PTR ds:[esi]
  422a0c:	inc    esp
  422a0d:	and    DWORD PTR [edi],esi
  422a0f:	dec    esp
  422a10:	sub    DWORD PTR [eax],0x9dafc9f9
  422a16:	rol    ebx,1
  422a18:	jle    0x422a84
  422a1a:	fistp  WORD PTR [edi-0x34]
  422a1d:	jp     0x4229bd
  422a1f:	hlt    
  422a20:	dec    esp
  422a21:	xlat   BYTE PTR ds:[ebx]
  422a22:	or     eax,0x530f156f
  422a27:	mov    edi,0x92c6248c
  422a2c:	bound  ebp,QWORD PTR [edi-0x6b]
  422a2f:	pop    edx
  422a30:	repnz mov WORD PTR [eax+0x40],gs
  422a34:	icebp  
  422a35:	inc    eax
  422a36:	ret    
  422a37:	xor    BYTE PTR [ebp-0x3e2d07a9],dh
  422a3d:	sbb    ecx,DWORD PTR [ebx]
  422a3f:	mov    DWORD PTR [edi+edi*1-0x4db3a46d],edi
  422a46:	arpl   bp,dx
  422a48:	cli    
  422a49:	les    edx,FWORD PTR [edi+0x485636]
	...
  422a5b:	add    al,bh
  422a5d:	mov    ah,0x7f
  422a5f:	cmp    eax,0xf5faff7f
  422a64:	jle    0x422a68
  422a66:	xor    eax,DWORD PTR [esi+0x3f]
  422a69:	out    0xed,al
  422a6b:	call   0x28a:0x1a3fc
  422a72:	add    BYTE PTR [eax],al
  422a74:	xchg   esi,eax
  422a75:	xchg   edi,eax
  422a76:	cs sub ch,ch
  422a79:	dec    edi
  422a7a:	shl    DWORD PTR [ebx-0x72],cl
  422a7d:	cmp    eax,0x624563d9
  422a82:	je     0x422a07
  422a84:	dec    ebx
  422a85:	pop    ss
  422a86:	pop    esp
  422a87:	call   0xd5a69761
  422a8c:	aam    0x4a
  422a8e:	addr16 push edx
  422a90:	imul   esp,DWORD PTR [edx],0xffffffe0
  422a93:	inc    edx
  422a94:	sub    dh,dl
  422a96:	and    ah,bl
  422a98:	and    DWORD PTR [ebp+0x66],0x478f07cb
  422a9f:	or     ch,BYTE PTR [esi]
  422aa1:	iret   
  422aa2:	xor    bl,BYTE PTR [ecx-0x27]
  422aa5:	jne    0x422ad0
  422aa7:	adc    esp,DWORD PTR [ebx+0x5dc033b2]
  422aad:	and    BYTE PTR [ebx-0x66],ch
  422ab0:	push   ecx
  422ab1:	popf   
  422ab2:	mov    ds:0x7d0ca3e,al
  422ab7:	jne    0x422a8a
  422ab9:	leave  
  422aba:	mov    ch,0x36
  422abc:	ds or  al,0x8e
  422abf:	mov    ebx,0xfb8c5e66
  422ac4:	pop    esp
  422ac5:	mov    ah,0x74
  422ac7:	jl     0x422a4f
  422ac9:	scas   al,BYTE PTR es:[edi]
  422aca:	adc    ebx,esp
  422acc:	mov    eax,0x761a2951
  422ad1:	adc    ecx,edx
  422ad3:	fldenv [eax]
  422ad5:	add    DWORD PTR [ebx+0x12],ecx
  422ad8:	mov    al,ds:0x667cd78
  422add:	and    eax,DWORD PTR [edi+eax*8-0x3be43ab6]
  422ae4:	and    BYTE PTR [eax+eiz*8],dl
  422ae7:	and    dl,BYTE PTR [ecx+ebx*2-0x24]
  422aeb:	ret    
  422aec:	scas   al,BYTE PTR es:[edi]
  422aed:	mul    edx
  422aef:	aad    0x45
  422af1:	and    al,0x54
  422af3:	retf   0xaadc
  422af6:	inc    esp
  422af7:	pop    ds
  422af8:	dec    ecx
  422af9:	cmp    bh,cl
  422afb:	dec    edx
  422afc:	push   edi
  422afd:	jmp    0xa363:0x2e12cc68
  422b04:	out    0x69,eax
  422b06:	out    0xf9,al
  422b08:	imul   BYTE PTR [edi-0x65]
  422b0b:	or     al,bl
  422b0d:	or     eax,0x674341cb
  422b12:	mov    dh,0x38
  422b14:	(bad)  
  422b15:	xchg   ebx,eax
  422b16:	test   eax,0xcd7871f9
  422b1b:	stos   DWORD PTR es:[edi],eax
  422b1c:	sub    bl,cl
  422b1e:	loope  0x422b29
  422b20:	xchg   ecx,eax
  422b21:	(bad)
  422b25:	rol    esi,1
  422b27:	sahf   
  422b28:	into   
  422b29:	loop   0x422abd
  422b2b:	mov    dl,0x73
  422b2d:	jmp    0x422aff
  422b2f:	jle    0x422acd
  422b31:	leave  
  422b32:	push   eax
  422b33:	jle    0x422b1a
  422b35:	sar    DWORD PTR [eax-0x3f],0x54
  422b39:	sbb    bh,BYTE PTR [eax]
  422b3b:	xchg   ebp,eax
  422b3c:	cmc    
  422b3d:	int    0x99
  422b3f:	jne    0x422ba1
  422b41:	or     cl,BYTE PTR [ecx]
  422b43:	aaa    
  422b44:	xchg   edi,eax
  422b45:	dec    ecx
  422b46:	test   DWORD PTR [ebx-0x16],edi
  422b49:	(bad)  
  422b4a:	ss pop eax
  422b4c:	mov    esi,gs
  422b4e:	cli    
  422b4f:	cdq    
  422b50:	aaa    
  422b51:	xchg   DWORD PTR [eax],edx
  422b53:	dec    esi
  422b54:	cli    
  422b55:	sub    al,0xd1
  422b57:	sbb    ebx,DWORD PTR [ecx]
  422b59:	dec    edx
  422b5a:	je     0x422b9b
  422b5c:	dec    eax
  422b5d:	sbb    eax,0x4f4d97e2
  422b62:	mov    edx,0x2f5eb54d
  422b67:	push   ss
  422b68:	push   cs
  422b69:	ins    DWORD PTR es:[edi],dx
  422b6a:	sbb    ah,bl
  422b6c:	mov    bl,0xce
  422b6e:	push   esp
  422b6f:	in     al,0x73
  422b71:	repnz gs xchg ecx,eax
  422b74:	inc    eax
  422b75:	icebp  
  422b76:	ss loop 0x422b57
  422b79:	jb     0x422b49
  422b7b:	mov    al,ds:0x5408cb36
  422b80:	(bad)  
  422b81:	and    al,0x7c
  422b83:	fidivr DWORD PTR [ecx+0x36]
  422b86:	mov    DWORD PTR [eax],edx
  422b88:	or     eax,0x8700302b
  422b8d:	fist   WORD PTR [ecx]
  422b8f:	push   ebp
  422b90:	xchg   ebx,eax
  422b91:	mov    edx,0x3058e443
  422b96:	std    
  422b97:	stc    
  422b98:	mov    cl,0xcb
  422b9a:	mov    ch,0x80
  422b9c:	inc    esp
  422b9d:	cmp    ecx,DWORD PTR [ebp+0x6d7360f3]
  422ba3:	arpl   WORD PTR [edi-0x6e03f40e],si
  422ba9:	adc    esp,edi
  422bab:	or     al,0x4a
  422bad:	shl    DWORD PTR [ebp+0x63],0x12
  422bb1:	out    dx,eax
  422bb2:	or     DWORD PTR [edx+0x75],0xcecab7d4
  422bb9:	pop    edx
  422bba:	out    0xe8,al
  422bbc:	and    ah,BYTE PTR [edx+0x67]
  422bbf:	xchg   BYTE PTR [esp+edx*8+0x66],bl
  422bc3:	xchg   esi,eax
  422bc4:	pop    ebp
  422bc5:	xor    DWORD PTR [edi-0xdd0116c],esi
  422bcb:	int3   
  422bcc:	mov    edx,DWORD PTR [eax+edi*2+0x70576139]
  422bd3:	jle    0x422b8e
  422bd5:	leave  
  422bd6:	bound  ebx,QWORD PTR [ecx]
  422bd8:	mov    ecx,0xeba1d09d
  422bdd:	out    dx,al
  422bde:	push   ecx
  422bdf:	xor    BYTE PTR [esi+0x3e7ff5c7],0xc0
  422be6:	cli    
  422be7:	stc    
  422be8:	ss stos DWORD PTR es:[edi],eax
  422bea:	pop    ds
  422beb:	xchg   esp,eax
  422bec:	cli    
  422bed:	and    BYTE PTR [esi+esi*2+0x1b3f7491],ch
  422bf4:	idiv   DWORD PTR [ebp+0x5bf3ea19]
  422bfa:	push   ecx
  422bfb:	call   0x12142c06
  422c00:	add    DWORD PTR [edx],eax
  422c02:	shl    DWORD PTR [ecx-0x51],cl
  422c05:	scas   al,BYTE PTR es:[edi]
  422c06:	neg    DWORD PTR [edi+0x75]
  422c09:	mov    bl,0xcc
  422c0b:	(bad)  
  422c0c:	shr    BYTE PTR [esi-0x66],cl
  422c0f:	mov    ds:0xc0b60aec,al
  422c14:	fwait
  422c15:	pop    es
  422c16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c17:	enter  0x8b73,0xdc
  422c1b:	(bad)  
  422c1c:	shl    BYTE PTR ds:0x9c0ca037,0x2c
  422c23:	shl    BYTE PTR [ecx],cl
  422c25:	cmp    eax,0xfc9a9a59
  422c2a:	adc    eax,0xca58c50b
  422c2f:	jnp    0x422c6d
  422c31:	mov    ch,0x83
  422c33:	push   edx
  422c34:	das    
  422c35:	das    
  422c36:	push   esp
  422c37:	cmp    BYTE PTR ds:0x68903230,ch
  422c3d:	lds    eax,FWORD PTR [edx+0x2b]
  422c40:	mov    ebx,0x17503171
  422c45:	mov    dh,0x9
  422c47:	gs or  ah,ch
  422c4a:	(bad)  
  422c4c:	nop
  422c4d:	mov    ch,ch
  422c4f:	(bad)  
  422c51:	mov    al,ds:0x6e0126d0
  422c56:	stos   BYTE PTR es:[edi],al
  422c57:	aam    0x3
  422c59:	loop   0x422bec
  422c5b:	pop    ebx
  422c5c:	(bad)  
  422c5e:	jmp    0x422c1a
  422c60:	pop    ds
  422c61:	inc    ebx
  422c62:	adc    al,0x8e
  422c64:	(bad)  
  422c65:	into   
  422c66:	leave  
  422c67:	cmc    
  422c68:	jne    0x422c65
  422c6a:	fbld   TBYTE PTR [eax]
  422c6c:	jns    0x422c68
  422c6e:	bound  esi,QWORD PTR [esi-0x3f]
  422c71:	xchg   esi,eax
  422c72:	mov    ecx,0xce8eaee2
  422c77:	bound  ebx,QWORD PTR [ebp+0x6c4bcc3d]
  422c7d:	call   FWORD PTR [ebp+0x40]
  422c80:	or     eax,0x3de2f28f
  422c85:	pop    ebp
  422c86:	nop    DWORD PTR [edi-0x5cac8241]
  422c8d:	and    DWORD PTR [esi],esp
  422c8f:	lods   al,BYTE PTR ds:[esi]
  422c90:	sub    eax,0x5da1c06c
  422c95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c96:	jecxz  0x422ca7
  422c98:	adc    eax,0xc5084150
  422c9d:	fst    st(1)
  422c9f:	aad    0x11
  422ca1:	push   esi
  422ca2:	sbb    DWORD PTR [ebp+0x69],ecx
  422ca5:	mov    DWORD PTR [eax],ebp
  422ca7:	lods   eax,DWORD PTR ds:[esi]
  422ca8:	pop    esi
  422ca9:	sti    
  422caa:	loope  0x422cd9
  422cac:	push   cs
  422cad:	addr16 shl ebx,0xd9
  422cb1:	xchg   DWORD PTR [edi-0x6bef3aa8],ebp
  422cb7:	jns    0x422c83
  422cb9:	in     eax,dx
  422cba:	cmp    al,0x90
  422cbc:	sahf   
  422cbd:	sbb    al,0x4e
  422cbf:	jmp    0xe528:0xe4c9a2a5
  422cc6:	pusha  
  422cc7:	ret    
  422cc8:	jg     0x422c4f
  422cca:	mov    bl,0x29
  422ccc:	xor    dh,BYTE PTR [ecx+0x8]
  422ccf:	xor    bh,BYTE PTR [edx]
  422cd1:	call   0x7f40:0x5f1ad83
  422cd8:	lods   al,BYTE PTR ds:[esi]
  422cd9:	adc    dl,cl
  422cdb:	cdq    
  422cdc:	pop    edx
  422cdd:	fist   DWORD PTR [esi+0x79]
  422ce0:	mov    esp,0xca01c35a
  422ce5:	push   ebx
  422ce6:	mov    ch,0xb0
  422ce8:	push   0x5d
  422cea:	push   ss
  422ceb:	loopne 0x422d57
  422ced:	gs mov esi,0xc3152f94
  422cf3:	mov    es,WORD PTR [ebx+0x794118a6]
  422cf9:	jecxz  0x422cda
  422cfb:	push   esp
  422cfc:	scas   al,BYTE PTR es:[edi]
  422cfd:	test   BYTE PTR [eax],0x0
	...
  422d0c:	cmp    DWORD PTR [ecx+ecx*4],ebx
  422d0f:	out    0xad,eax
  422d11:	idiv   DWORD PTR [edi-0x22]
  422d14:	mov    DWORD PTR [edx+0x79],ebp
  422d17:	and    ecx,0x86478028
  422d1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d1e:	add    DWORD PTR [eax],eax
  422d20:	mov    al,BYTE PTR [edx]
  422d22:	add    BYTE PTR [eax],al
  422d24:	arpl   si,bx
  422d26:	imul   esp,esi,0x9c2339ae
  422d2c:	jle    0x422d0f
  422d2e:	sbb    BYTE PTR [edi+0x700003a4],bh
  422d34:	das    
  422d35:	clc    
  422d36:	cmp    al,0x8e
  422d38:	jnp    0x422d0a
  422d3a:	in     eax,dx
  422d3b:	xchg   edi,eax
  422d3c:	xor    esp,esi
  422d3e:	fwait
  422d3f:	mov    edx,0xe6997a95
  422d44:	js     0x422d06
  422d46:	or     ecx,DWORD PTR [bx-0x512b]
  422d4b:	adc    eax,0xed71e269
  422d50:	cmp    bh,BYTE PTR [ebp+ecx*4+0x2d1060a8]
  422d57:	in     al,0xaf
  422d59:	into   
  422d5a:	jmp    0xf8a7:0x96fb8dec
  422d61:	lock sub esi,DWORD PTR [eax-0x3bd8705b]
  422d68:	xor    al,0xba
  422d6a:	push   ecx
  422d6b:	loop   0x422cfd
  422d6d:	pop    ebp
  422d6e:	jecxz  0x422cf0
  422d70:	sti    
  422d71:	inc    ecx
  422d72:	enter  0xfb92,0xdb
  422d76:	cmp    eax,0x1915f349
  422d7b:	imul   ebx,DWORD PTR [eax+0x47820b63],0xffffffcd
  422d82:	jae    0x422da2
  422d84:	inc    edi
  422d85:	aaa    
  422d86:	adc    DWORD PTR [edi-0x44cf9d2a],eax
  422d8c:	jmp    0x422dae
  422d8e:	hlt    
  422d8f:	sub    edi,esp
  422d91:	dec    edi
  422d92:	adc    esp,ecx
  422d94:	pushw  cs
  422d96:	rol    BYTE PTR [edx],1
  422d98:	adc    BYTE PTR [edi-0xa],bl
  422d9b:	icebp  
  422d9c:	xchg   edx,eax
  422d9d:	fs repz pop ebx
  422da0:	add    eax,0x5e80f5ff
  422da5:	mov    ecx,0x868e5d69
  422daa:	inc    eax
  422dab:	arpl   WORD PTR ds:0x46d235d3,ax
  422db1:	rcl    BYTE PTR [edi-0x3],0x43
  422db5:	sbb    BYTE PTR [eax-0x27],dl
  422db8:	test   BYTE PTR [eax-0x53],dh
  422dbb:	out    0x5,eax
  422dbd:	sbb    edx,esi
  422dbf:	mov    ebx,0x43b42c4b
  422dc4:	call   0xea2e:0x87529894
  422dcb:	shr    BYTE PTR [eax+ecx*2-0x2645074e],1
  422dd2:	xlat   BYTE PTR ds:[ebx]
  422dd3:	scas   eax,DWORD PTR es:[edi]
  422dd4:	pop    ds
  422dd5:	mov    ebp,0x2e8441b6
  422dda:	mov    esp,DWORD PTR [ecx]
  422ddc:	push   ss
  422ddd:	cmp    eax,0x38d71edf
  422de2:	aaa    
  422de3:	xor    ebx,0x23
  422de6:	(bad)  
  422de8:	jecxz  0x422e61
  422dea:	pusha  
  422deb:	push   bx
  422ded:	push   ebx
  422dee:	imul   BYTE PTR [esi+0x21c8c2f4]
  422df4:	test   al,0x87
  422df6:	cli    
  422df7:	jnp    0x422d84
  422df9:	and    DWORD PTR [eax+0x48bb805f],esi
  422dff:	outs   dx,DWORD PTR ds:[esi]
  422e00:	leave  
  422e01:	mov    esp,0xe249993f
  422e06:	mov    ds:0xe9d18ca6,al
  422e0b:	xchg   ebx,eax
  422e0c:	add    bh,0xdd
  422e0f:	mov    bh,BYTE PTR [edx]
  422e11:	rcl    DWORD PTR [ecx],1
  422e13:	and    dl,BYTE PTR [esi+0x2acd51d0]
  422e19:	cld    
  422e1a:	jmp    0x91e4:0xe687b558
  422e21:	aad    0x1f
  422e23:	and    al,0xe
  422e25:	mov    ch,0x2c
  422e27:	push   es
  422e28:	add    eax,0xb5dd51c8
  422e2d:	in     al,0xf9
  422e2f:	aas    
  422e30:	adc    eax,0xe7fc0e79
  422e35:	push   eax
  422e36:	xchg   edx,eax
  422e37:	shr    BYTE PTR [edi],cl
  422e39:	sbb    al,cl
  422e3b:	mov    bl,0x71
  422e3d:	rcr    esi,1
  422e3f:	je     0x422dc4
  422e41:	nop
  422e42:	and    al,0xf7
  422e44:	push   ecx
  422e45:	(bad)  
  422e46:	fstp   QWORD PTR [eax-0x29]
  422e49:	arpl   bp,bx
  422e4b:	sbb    DWORD PTR [ebx+0x44],ebx
  422e4e:	loopne 0x422e8e
  422e50:	xchg   cl,dl
  422e52:	(bad)  
  422e53:	mov    ebx,0x593f5258
  422e58:	or     bl,BYTE PTR [edi-0x53]
  422e5b:	xchg   edi,eax
  422e5c:	mov    eax,0x9fbe80a1
  422e61:	and    BYTE PTR [eax+0x35cb1c30],ah
  422e67:	jp     0x422eb1
  422e69:	mov    al,0x3d
  422e6b:	test   cl,al
  422e6d:	test   al,0x60
  422e6f:	dec    ecx
  422e70:	push   0x983816f3
  422e75:	in     al,0xc0
  422e77:	and    ah,BYTE PTR [eax]
  422e79:	or     BYTE PTR [ebx+0x66],0x66
  422e7d:	mov    edx,0xf504892c
  422e82:	adc    BYTE PTR [edx-0x51],dh
  422e85:	ds pop edi
  422e87:	xchg   edi,eax
  422e88:	call   0xb4b5a4a
  422e8d:	adc    dl,0xa7
  422e90:	jbe    0x422ed0
  422e92:	pop    esp
  422e93:	enter  0xefaf,0xf2
  422e97:	add    al,0x5a
  422e99:	push   ds
  422e9a:	cld    
  422e9b:	push   edi
  422e9c:	adc    esp,DWORD PTR [esi-0x79]
  422e9f:	adc    al,0xe
  422ea1:	add    bh,BYTE PTR [esi+esi*2-0x32]
  422ea5:	xchg   edx,eax
  422ea6:	call   0x321b:0x6208a3e0
  422ead:	(bad)  [edi]
  422eaf:	aad    0xdd
  422eb1:	leave  
  422eb2:	call   0xb0a3:0x856e891a
  422eb9:	sahf   
  422eba:	pop    edi
  422ebb:	inc    ebx
  422ebc:	aas    
  422ebd:	fwait
  422ebe:	ja     0x422ee4
  422ec0:	add    eax,0xa97e6025
  422ec5:	jmp    0x422e92
  422ec7:	sbb    bl,BYTE PTR [ebx-0x14fb9d88]
  422ecd:	repz add BYTE PTR [ebx+0x5f],dh
  422ed1:	bound  edx,QWORD PTR [ebx+0x412faf6f]
  422ed7:	mov    ?,WORD PTR [edx+eiz*4]
  422eda:	imul   esi,edx,0x38
  422edd:	adc    eax,0x47e30e28
  422ee2:	dec    eax
  422ee3:	inc    ebx
  422ee4:	xchg   DWORD PTR [edi-0x3],ebx
  422ee7:	repz xchg edi,eax
  422ee9:	test   al,0x9f
  422eeb:	call   0x407e:0x5a6d8188
  422ef2:	scas   al,BYTE PTR es:[edi]
  422ef3:	pop    esi
  422ef4:	(bad)  
  422ef5:	fst    QWORD PTR [edi]
  422ef7:	or     al,0xd0
  422ef9:	inc    esi
  422efa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422efb:	mov    al,ds:0x4a0397d2
  422f00:	scas   al,BYTE PTR es:[edi]
  422f01:	xchg   edx,edi
  422f03:	outs   dx,BYTE PTR ds:[esi]
  422f04:	outs   dx,BYTE PTR ds:[esi]
  422f05:	bound  ebp,QWORD PTR [edx]
  422f07:	out    dx,eax
  422f08:	mov    ebx,0x256e10d
  422f0d:	inc    ebp
  422f0e:	add    DWORD PTR [eax+eiz*8],0xffffffac
  422f12:	cli    
  422f13:	dec    esi
  422f14:	retf   
  422f15:	out    dx,al
  422f16:	push   0x7f9979a1
  422f1b:	pusha  
  422f1c:	or     esi,DWORD PTR [eax-0x7a]
  422f1f:	add    al,0x97
  422f21:	push   ebp
  422f22:	fcom   DWORD PTR [edx]
  422f24:	paddd  mm1,QWORD PTR [eax]
  422f27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f28:	arpl   WORD PTR [edi],di
  422f2a:	ins    BYTE PTR es:[edi],dx
  422f2b:	jle    0x422eed
  422f2d:	push   ebp
  422f2e:	cmp    al,0xde
  422f30:	je     0xcb904b82
  422f36:	pop    edi
  422f37:	mov    ebp,0xe86d0a1
  422f3c:	xchg   esi,eax
  422f3d:	js     0x422f4f
  422f3f:	pop    edi
  422f41:	push   edx
  422f42:	into   
  422f43:	mov    cl,BYTE PTR cs:[ebx-0x13990d72]
  422f4a:	scas   al,BYTE PTR es:[edi]
  422f4b:	arpl   sp,sp
  422f4d:	in     eax,dx
  422f4e:	mov    esp,0x87f7565c
  422f53:	inc    esi
  422f54:	shl    bl,0xd6
  422f57:	and    eax,0x91e67caf
  422f5c:	daa    
  422f5d:	adc    al,0x13
  422f5f:	je     0x422f1e
  422f61:	fs mov al,0x57
  422f64:	sbb    BYTE PTR [ebp-0x16426e37],ah
  422f6a:	or     esi,DWORD PTR [edi-0x148d7c64]
  422f70:	pop    edi
  422f71:	push   ecx
  422f72:	mov    gs,ebx
  422f74:	or     eax,0xddae21cb
  422f79:	mov    ecx,0x6071dcaf
  422f7e:	sub    ah,dl
  422f80:	xchg   edi,eax
  422f81:	fld    TBYTE PTR [ecx+0x78]
  422f84:	xor    esp,DWORD PTR [edx+0x34]
  422f87:	mov    dl,0x40
  422f89:	mov    ch,0x36
  422f8b:	ja     0x422f9c
  422f8d:	xchg   ebp,eax
  422f8e:	xor    eax,0x1cbc37cd
  422f93:	mov    edi,0x84df41e4
  422f98:	add    eax,ebp
  422f9a:	adc    dh,ah
  422f9c:	mov    ebp,0x8dd2446f
  422fa1:	and    BYTE PTR [eax+eax*2-0x72],ah
  422fa5:	jae    0x422fa9
  422fa7:	lahf   
  422fa8:	fs jmp 0x0:0x3e46fe30
	...
  422fbc:	gs mov ah,0x18
  422fbf:	fcompp 
  422fc1:	(bad)  
  422fc2:	out    0xbf,eax
  422fc4:	gs mov ah,0x46
  422fc7:	imul   dl
  422fc9:	fdivp  st(6),st
  422fcb:	sti    
  422fcc:	adc    BYTE PTR [ecx+0x28a0001],ch
  422fd2:	add    BYTE PTR [eax],al
  422fd4:	aaa    
  422fd5:	mov    ah,0xb3
  422fd7:	aad    0xe
  422fd9:	xor    ecx,DWORD PTR [ecx-0x2c]
  422fdc:	test   eax,0x7484e823
  422fe1:	rcl    BYTE PTR [edi-0x6a],0x12
  422fe5:	enter  0x3f43,0xf7
  422fe9:	jmp    0x422f71
  422feb:	sub    DWORD PTR [edx-0x600ac77c],ebx
  422ff1:	ins    BYTE PTR es:[edi],dx
  422ff2:	sub    ch,BYTE PTR [eax+ecx*1+0x6d676d0f]
  422ff9:	mov    ecx,edi
  422ffb:	sbb    DWORD PTR [edi],esp
  422ffd:	jmp    0x423001
  422fff:	daa    
  423000:	ficom  DWORD PTR [ecx-0x64]
  423003:	mov    edi,0x5e540157
  423008:	cmp    cl,BYTE PTR [eax+ecx*2-0x39]
  42300c:	imul   eax,DWORD PTR [ebp-0x50],0xbed9d948
  423013:	pop    esp
  423014:	into   
  423015:	test   DWORD PTR [ebp+ebx*1+0x66d757a7],edx
  42301c:	push   esp
  42301d:	cmp    dh,dh
  42301f:	pop    edi
  423020:	repnz push esi
  423022:	imul   ecx,edx,0x67c74d31
  423028:	push   es
  423029:	mov    ah,0xb1
  42302b:	xchg   DWORD PTR ds:0x76f09bd8,esi
  423031:	mov    al,0x3
  423033:	inc    edi
  423034:	mov    ds:0x9d906e,eax
  423039:	pusha  
  42303a:	jmp    FWORD PTR [edx+0x1ae8a0fb]
  423040:	pop    eax
  423041:	jne    0x423075
  423043:	and    eax,0xed717cc3
  423048:	popa   
  423049:	push   0x3c
  42304b:	mov    esp,0xfb7fcfa2
  423050:	push   esi
  423051:	mov    ah,0x79
  423053:	arpl   bx,si
  423055:	rcl    BYTE PTR [eax],cl
  423057:	retf   
  423058:	cmp    bl,bh
  42305a:	sbb    eax,0xf402130b
  42305f:	add    eax,0xaed23e03
  423064:	jbe    0x42309d
  423066:	sub    al,0xd5
  423068:	lahf   
  423069:	jmp    0xa2f9:0x3c66ccdb
  423070:	sub    al,0x9e
  423072:	mov    ecx,0xcc53290e
  423077:	cmp    al,0x91
  423079:	add    eax,0x1a87290b
  42307e:	imul   ebp,DWORD PTR [edx],0xffffff97
  423081:	imul   ecx,DWORD PTR [eax],0xffffff8a
  423084:	mov    esi,0xf35ebe13
  423089:	or     ch,BYTE PTR [edx+0xb]
  42308c:	sbb    DWORD PTR [ebx],esi
  42308e:	and    ecx,DWORD PTR [ebp+0x500c553f]
  423094:	xor    BYTE PTR [edx+0x6852cc],dl
  42309a:	lahf   
  42309b:	in     al,dx
  42309c:	pusha  
  42309d:	xchg   ecx,eax
  42309e:	adc    BYTE PTR [ebp-0x3c53594c],al
  4230a4:	jns    0x423073
  4230a6:	mov    ebx,0xbd4ff878
  4230ab:	adc    al,0x30
  4230ad:	inc    esi
  4230ae:	sub    eax,0xfd67db4f
  4230b3:	out    0xdd,al
  4230b5:	out    0x99,eax
  4230b7:	fsubr  DWORD PTR [ebp-0x75]
  4230ba:	mov    ch,0x1a
  4230bc:	fwait
  4230bd:	cmp    al,0xd0
  4230bf:	out    dx,al
  4230c0:	cs movs BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4230c3:	jo     0x423052
  4230c5:	jne    0x42310b
  4230c7:	push   ss
  4230c8:	pop    es
  4230c9:	sahf   
  4230ca:	pop    eax
  4230cb:	xchg   BYTE PTR [ebp-0x4abd4d56],cl
  4230d1:	fldenv [edi+ebp*4]
  4230d4:	sahf   
  4230d5:	and    bl,BYTE PTR [esp+eiz*4-0x7f1d29dd]
  4230dc:	shl    BYTE PTR [esi+0x1bc75ad0],0x8b
  4230e3:	mov    esi,0x162bb10
  4230e8:	sbb    al,0xfb
  4230ea:	inc    eax
  4230eb:	into   
  4230ec:	push   esi
  4230ed:	push   ds
  4230ee:	xor    bh,cl
  4230f0:	mov    ebp,0xda7dd9e3
  4230f5:	mov    ah,0x93
  4230f7:	add    eax,0x17644b98
  4230fc:	stos   DWORD PTR es:[edi],eax
  4230fd:	ror    DWORD PTR [esi],cl
  4230ff:	fcmovnu st,st(4)
  423101:	cmp    BYTE PTR [edi],cl
  423103:	xchg   ebx,eax
  423104:	push   0x53
  423106:	rcl    ah,cl
  423108:	fisubr DWORD PTR [ebp+esi*2-0x61]
  42310c:	dec    ecx
  42310d:	inc    ecx
  42310e:	lods   eax,DWORD PTR ds:[esi]
  42310f:	pop    es
  423110:	fcmove st,st(5)
  423112:	pop    ecx
  423113:	sbb    eax,DWORD PTR ds:0x62d22af7
  423119:	cmp    eax,0x4c8bab26
  42311e:	imul   ebx,DWORD PTR [edx-0x42],0xbdd34342
  423125:	test   DWORD PTR [esi+0x2a0c5b0e],0xb06b3d67
  42312f:	in     al,0xfe
  423131:	enter  0x3626,0x24
  423135:	cli    
  423136:	retf   0x88ef
  423139:	jne    0x4231b8
  42313b:	stos   BYTE PTR es:[edi],al
  42313c:	xchg   esp,eax
  42313d:	or     eax,0xbefd58e6
  423142:	jno    0x423137
  423144:	clc    
  423145:	add    ebx,edi
  423147:	jbe    0x4231c3
  423149:	faddp  st(6),st
  42314b:	cmc    
  42314c:	mov    edi,0xc62d607f
  423151:	mov    ecx,0x9bd1ea3c
  423156:	leave  
  423157:	iret   
  423158:	repz xchg ebp,edx
  42315b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42315c:	mov    esi,0x30c9dfd2
  423161:	pop    edi
  423162:	or     al,0x25
  423164:	fs js  0x4231a7
  423167:	imul   esi,DWORD PTR [edi-0x2a6765b8],0x4e6409fa
  423171:	sbb    eax,0x760f55bd
  423176:	cmp    DWORD PTR [eax+0x2c30ea66],ebx
  42317c:	jbe    0x42317f
  42317e:	ins    BYTE PTR es:[edi],dx
  42317f:	fnstsw WORD PTR [esi]
  423181:	xor    al,0x3
  423183:	jae    0x423187
  423185:	sbb    eax,0x803f4a48
  42318a:	sub    BYTE PTR [ebx+0x28],0x12
  42318e:	jecxz  0x423194
  423190:	and    eax,edi
  423192:	xchg   esi,eax
  423193:	add    esp,0x4ae0dc6f
  423199:	loope  0x4231dd
  42319b:	test   eax,0x4967811c
  4231a0:	cs push esp
  4231a2:	xor    ebx,DWORD PTR [ecx]
  4231a4:	add    al,BYTE PTR [edi]
  4231a6:	or     BYTE PTR [eax],dh
  4231a8:	ins    BYTE PTR es:[edi],dx
  4231a9:	ret    0x7404
  4231ac:	cmp    eax,0x92946587
  4231b1:	test   eax,0xc6794617
  4231b6:	test   DWORD PTR [esi-0x21],eax
  4231b9:	ret    0x1895
  4231bc:	hlt    
  4231bd:	or     edx,esi
  4231bf:	pop    ebx
  4231c0:	xchg   DWORD PTR [ebx+0x7c],ebx
  4231c3:	sar    DWORD PTR [edx-0x79e242d9],0x2c
  4231ca:	xor    dh,BYTE PTR [ebp+0x49]
  4231cd:	and    DWORD PTR [edi+0x3c],edi
  4231d0:	ror    DWORD PTR [edx-0x7],cl
  4231d3:	push   ss
  4231d4:	and    DWORD PTR [esp+esi*8+0xf7396a8],ecx
  4231db:	lea    esp,[edx+0x15]
  4231de:	xchg   edi,eax
  4231df:	pushf  
  4231e0:	inc    eax
  4231e1:	jge    0x42316d
  4231e3:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4231e5:	in     al,0xad
  4231e7:	out    0x6,al
  4231e9:	js     0x42316c
  4231eb:	push   ecx
  4231ec:	hlt    
  4231ed:	jecxz  0x423200
  4231ef:	xchg   ebp,eax
  4231f0:	outs   dx,BYTE PTR ds:[esi]
  4231f1:	or     dl,BYTE PTR [esi+0x63]
  4231f4:	daa    
  4231f5:	ja     0x423247
  4231f7:	jo     0x42322f
  4231f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231fa:	mov    eax,0xb23cf25e
  4231ff:	pop    ebp
  423200:	sub    al,0x9e
  423202:	pusha  
  423203:	and    DWORD PTR [edx+0x3a],esp
  423206:	popf   
  423207:	lods   al,BYTE PTR ds:[esi]
  423208:	jnp    0x42320b
  42320a:	fs jo  0x4231a3
  42320d:	lods   al,BYTE PTR ds:[esi]
  42320e:	je     0x4231f2
  423210:	(bad)
  423214:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423215:	xor    ch,bl
  423217:	lods   al,BYTE PTR ds:[esi]
  423218:	sahf   
  423219:	push   ss
  42321a:	std    
  42321b:	inc    edx
  42321c:	in     al,0x71
  42321e:	not    BYTE PTR [edx+0x2002ee43]
  423224:	dec    edi
  423225:	push   0xf76c2f85
  42322a:	push   edx
  42322b:	adc    ch,BYTE PTR [ebp+0x62]
  42322e:	je     0x4231c6
  423230:	pop    eax
  423231:	es pop ebp
  423233:	mov    ebp,edi
  423235:	xchg   DWORD PTR [edx+0x76],ebx
  423238:	jle    0x42328c
  42323a:	mov    bl,0x5e
  42323c:	xchg   edi,eax
  42323d:	jg     0x4231d8
  42323f:	shl    BYTE PTR ds:[edx],0x5b
  423243:	outs   dx,DWORD PTR ds:[esi]
  423244:	mov    WORD PTR [eax],gs
  423246:	add    DWORD PTR [edx+ecx*1-0x21551e7],ebp
  42324d:	mov    eax,ds:0x4d0e0e02
  423252:	inc    edx
  423253:	push   0xc8b7e5aa
  423258:	dec    esi
  423259:	sub    BYTE PTR [ecx+0x19350e],bh
	...
  42326b:	add    BYTE PTR [edx],dl
  42326d:	fsub   DWORD PTR [ebx+0x72]
  423270:	jmp    0x42326d
  423272:	adc    edi,eax
  423274:	sub    edi,DWORD PTR [ebx-0xa2a7709]
  42327a:	pusha  
  42327b:	stc    
  42327c:	call   0x2:0x8a0001ab
  423283:	add    BYTE PTR [ecx+ebp*8+0x57],dl
  423287:	and    dh,BYTE PTR [ecx-0x574d0bd]
  42328d:	je     0x423269
  42328f:	sub    eax,0x65874c3c
  423294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423295:	add    dh,BYTE PTR [esi]
  423297:	sbb    eax,0xb0a4bac6
  42329c:	test   al,0x7b
  42329e:	mov    WORD PTR [eax+0x50],fs
  4232a1:	mov    bh,0x6b
  4232a3:	sub    DWORD PTR [ebx-0x1afa6a3c],edi
  4232a9:	cmp    dl,dh
  4232ab:	stc    
  4232ac:	or     BYTE PTR [ecx],0xf1
  4232af:	popf   
  4232b0:	push   0xffffff81
  4232b2:	das    
  4232b3:	into   
  4232b4:	and    DWORD PTR [eax],ebp
  4232b6:	mov    ch,0x75
  4232b8:	pop    ecx
  4232b9:	sbb    esi,esi
  4232bb:	pusha  
  4232bc:	jo     0x4232f5
  4232be:	inc    ecx
  4232bf:	imul   eax,DWORD PTR [edi+0xe8cb61c],0xffffffed
  4232c6:	xor    DWORD PTR [edi],eax
  4232c8:	dec    eax
  4232c9:	test   DWORD PTR [eax+0x1a23e62d],esp
  4232cf:	daa    
  4232d0:	out    dx,al
  4232d1:	sub    edi,ebp
  4232d3:	and    DWORD PTR [esi+0x5a],0xa118ef28
  4232da:	xor    eax,0x3891d3cb
  4232df:	push   cs
  4232e0:	cmove  eax,DWORD PTR [ebx+ecx*1-0x38e36879]
  4232e8:	ja     0x4232f3
  4232ea:	sbb    DWORD PTR [ebx],0x39f041c
  4232f0:	sub    esi,DWORD PTR [ebx]
  4232f2:	(bad)  
  4232f3:	or     ebx,DWORD PTR [edx]
  4232f5:	mov    bh,0xbb
  4232f7:	ss push cs
  4232f9:	aad    0x86
  4232fb:	push   esi
  4232fc:	ins    DWORD PTR es:[edi],dx
  4232fd:	and    al,0x8c
  4232ff:	mov    DWORD PTR [ecx+edi*1],ebp
  423302:	mov    dh,0x3c
  423304:	xor    dh,BYTE PTR [ebx-0x43]
  423307:	out    0xcb,eax
  423309:	xchg   esp,eax
  42330a:	inc    BYTE PTR [edi]
  42330c:	pop    ecx
  42330d:	ret    0xbd0d
  423310:	sar    DWORD PTR [ebp-0x51d8a36b],1
  423316:	or     edi,ecx
  423318:	inc    edi
  423319:	jl     0xb3fc897b
  42331f:	cld    
  423320:	dec    edx
  423321:	or     edx,DWORD PTR [edx-0x190b7db1]
  423327:	fisub  WORD PTR [ecx+0x2aa1e40a]
  42332d:	in     eax,dx
  42332e:	jp     0x4232de
  423330:	or     esp,ecx
  423332:	cli    
  423333:	mov    dl,BYTE PTR [esp+edi*1+0x268f7e2e]
  42333a:	call   0x45ad7811
  42333f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423340:	pop    ds
  423341:	cmp    esp,DWORD PTR [edx]
  423343:	mov    BYTE PTR [ebp+0x1b],dh
  423346:	dec    eax
  423347:	cmp    eax,ebp
  423349:	sbb    DWORD PTR [eax-0x24bcee3f],ebp
  42334f:	idiv   DWORD PTR [esi-0x1a]
  423352:	inc    ecx
  423353:	je     0x4233ba
  423355:	rol    BYTE PTR [ebp-0x4e8727ed],1
  42335b:	ss ins DWORD PTR es:[edi],dx
  42335d:	sbb    dh,BYTE PTR [ebx-0x62088322]
  423363:	aam    0xaf
  423365:	cmc    
  423366:	stos   BYTE PTR es:[edi],al
  423367:	add    BYTE PTR [ebp-0x18168f59],cl
  42336d:	and    esi,DWORD PTR fs:[esi]
  423370:	dec    esp
  423371:	ss js  0x4233d5
  423374:	or     esi,DWORD PTR [eax+0x471a1237]
  42337a:	(bad)  
  42337b:	xchg   esp,eax
  42337c:	xor    al,0xb5
  42337e:	sbb    DWORD PTR [ebx+0x520d0faf],ebx
  423384:	popa   
  423385:	fwait
  423386:	cli    
  423387:	retf   
  423388:	sub    eax,0x533699ed
  42338d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42338e:	(bad)  
  42338f:	push   0x761386f1
  423394:	cmp    edi,ebp
  423396:	fimul  WORD PTR [edi+ebx*2]
  423399:	mov    dh,0xd5
  42339b:	add    ch,ah
  42339d:	cwde   
  42339e:	popa   
  42339f:	call   0x8b20:0xb6a3fe1a
  4233a6:	push   es
  4233a7:	popf   
  4233a8:	(bad)  
  4233a9:	jmp    0x4233e5
  4233ab:	adc    ch,BYTE PTR [ebp+0x69]
  4233ae:	jg     0x423349
  4233b0:	nop
  4233b1:	into   
  4233b2:	mov    eax,ds:0x8d46b47f
  4233b7:	or     al,0x6
  4233b9:	mov    ebx,eax
  4233bb:	shl    BYTE PTR [ecx],1
  4233bd:	out    0x5f,eax
  4233bf:	loopne 0x4233cc
  4233c1:	xchg   edx,eax
  4233c2:	xor    eax,0x872fcb91
  4233c7:	adc    DWORD PTR [esi+0x54],edi
  4233ca:	rol    bl,cl
  4233cc:	fisubr DWORD PTR [ecx]
  4233ce:	mov    WORD PTR [ebp-0x2c],es
  4233d1:	add    ch,BYTE PTR [ebx]
  4233d3:	inc    DWORD PTR [ecx+0x31]
  4233d6:	(bad)  
  4233d7:	jecxz  0x423414
  4233d9:	(bad)  
  4233da:	(bad)  
  4233db:	(bad)  
  4233dc:	mov    ebp,0x13ba2dad
  4233e1:	mov    esi,0xa91fc4d
  4233e6:	pop    esi
  4233e7:	inc    esi
  4233e8:	push   ecx
  4233e9:	add    esp,DWORD PTR [ebx-0x18]
  4233ec:	sti    
  4233ed:	es xor eax,0xbf28fb02
  4233f3:	retf   
  4233f4:	(bad)  
  4233f5:	sti    
  4233f6:	lahf   
  4233f7:	add    al,0x8a
  4233f9:	cmp    BYTE PTR [ecx-0xb49c286],bl
  4233ff:	stc    
  423400:	loope  0x423431
  423402:	dec    esi
  423403:	icebp  
  423404:	sti    
  423405:	in     eax,0x8c
  423407:	sahf   
  423408:	pop    edx
  423409:	xor    eax,0x38a0b3fb
  42340e:	dec    edx
  42340f:	das    
  423410:	mov    BYTE PTR [ecx+0xdbf7efa],bh
  423416:	xchg   ebp,eax
  423417:	jno    0x4233d0
  423419:	push   ebx
  42341a:	jg     0x4233ad
  42341c:	or     ebx,DWORD PTR [edi]
  42341e:	xchg   edx,eax
  42341f:	sahf   
  423420:	mov    cl,0xfc
  423422:	sub    DWORD PTR [esi-0x5c],0xa9d13488
  423429:	mov    cl,BYTE PTR [ecx+0x1b]
  42342c:	fwait
  42342d:	outs   dx,DWORD PTR ds:[esi]
  42342e:	dec    esi
  42342f:	fstp   TBYTE PTR [ebp-0x4]
  423432:	sar    BYTE PTR [ecx+0x2],1
  423435:	mov    ds:0xbc7f9454,al
  42343a:	jns    0x423477
  42343c:	xlat   BYTE PTR ds:[ebx]
  42343d:	or     al,0x2a
  42343f:	inc    edi
  423440:	rcr    BYTE PTR [esi+eax*2+0x42668e29],0x9d
  423448:	cmp    al,0x61
  42344a:	ins    BYTE PTR es:[edi],dx
  42344b:	ss (bad) 
  42344d:	xchg   edx,eax
  42344e:	sbb    ebx,DWORD PTR [edi+0x28]
  423451:	addr16 clc 
  423453:	mov    ebp,0x7e970031
  423458:	out    0xf0,eax
  42345a:	fidiv  DWORD PTR [ebp+0x20]
  42345d:	dec    esi
  42345e:	test   DWORD PTR [ebp-0x20],0x82bd0b1e
  423465:	cmp    DWORD PTR [eax-0x45],ebx
  423468:	ins    DWORD PTR es:[di],dx
  42346a:	test   DWORD PTR [esp+eiz*2],edx
  42346d:	pop    es
  42346e:	xor    ebp,esp
  423470:	mov    cl,0xe3
  423473:	inc    edi
  423474:	sbb    BYTE PTR [edi+esi*2-0x58],cl
  423478:	test   al,0x3f
  42347a:	mov    ah,0xe2
  42347c:	and    al,0xed
  42347e:	js     0x4234a4
  423480:	imul   ebp,DWORD PTR [edx-0x594d484e],0x11
  423487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423488:	dec    ecx
  423489:	int    0x1b
  42348b:	sbb    ebp,DWORD PTR [edx-0x45]
  42348e:	jo     0x4234b8
  423490:	xchg   ebx,eax
  423491:	inc    edx
  423492:	aas    
  423493:	(bad)  
  423494:	push   esi
  423495:	dec    esp
  423496:	mov    ecx,DWORD PTR [edx]
  423498:	pop    ss
  423499:	push   ebp
  42349a:	jne    0x42350a
  42349c:	out    dx,eax
  42349d:	jp     0x423447
  42349f:	xchg   ebx,eax
  4234a0:	imul   eax,eax,0x4f
  4234a3:	add    bh,bh
  4234a5:	inc    DWORD PTR [edx+ebp*2-0x46]
  4234a9:	in     eax,dx
  4234aa:	dec    ebx
  4234ab:	leave  
  4234ac:	jl     0x423519
  4234ae:	push   esp
  4234af:	lods   al,BYTE PTR ds:[esi]
  4234b0:	out    0xfc,eax
  4234b2:	test   al,0x9b
  4234b4:	mov    edx,0x6c66a8ca
  4234b9:	enter  0x87e6,0x6c
  4234bd:	frstor ds:0xa11d4742
  4234c3:	adc    eax,0x27026555
  4234c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234c9:	or     ah,BYTE PTR [ecx+edx*2]
  4234cc:	pop    ecx
  4234cd:	add    BYTE PTR [esi],cl
  4234cf:	add    BYTE PTR [ebx],ah
  4234d1:	(bad)  
  4234d2:	jmp    0x7f45a7ca
  4234d7:	adc    ebx,DWORD PTR [ecx+0x55]
  4234da:	(bad)  
  4234db:	fidiv  WORD PTR [eax+0x5]
  4234de:	cmp    DWORD PTR [esi+0x38],edi
  4234e1:	mov    edi,0x7ce2160c
  4234e6:	pop    esp
  4234e7:	out    dx,eax
  4234e8:	mov    ebx,0x622e9818
  4234ed:	fs fcmove st,st(3)
  4234f0:	cmp    BYTE PTR [ebp-0x7826d3b0],ah
  4234f6:	out    0x57,eax
  4234f8:	dec    esp
  4234f9:	popa   
  4234fa:	add    ecx,DWORD PTR [esi+edi*8+0x7d]
  4234fe:	cwde   
  4234ff:	dec    ebx
  423500:	into   
  423501:	enter  0xe2ec,0x5a
  423505:	push   es
  423506:	mov    bl,0x7e
  423508:	or     esi,DWORD PTR [ebp+0x2fe6dd6]
	...
  42351a:	add    BYTE PTR [eax],al
  42351c:	push   cs
  42351d:	and    BYTE PTR [eax-0x404051c1],cl
  423523:	xor    DWORD PTR [ebx-0x516d7643],edx
  423529:	push   edx
  42352a:	dec    esp
  42352b:	pop    ecx
  42352c:	and    al,0xae
  42352e:	add    DWORD PTR [eax],eax
  423530:	mov    al,BYTE PTR [edx]
  423532:	add    BYTE PTR [eax],al
  423534:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423535:	add    eax,0xf4baa5fc
  42353a:	mov    al,ds:0x26f11e4c
  42353f:	mov    WORD PTR [edi],es
  423541:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  423543:	pop    ss
  423544:	sti    
  423545:	scas   eax,DWORD PTR es:[edi]
  423546:	push   ds
  423547:	(bad)  
  423548:	ja     0x423588
  42354a:	sub    eax,0xabce646c
  42354f:	xlat   BYTE PTR ds:[ebx]
  423550:	mov    al,0xb0
  423552:	dec    edx
  423553:	daa    
  423554:	int3   
  423555:	test   DWORD PTR [ebx],esi
  423557:	cwde   
  423558:	std    
  423559:	mov    esp,0x3b9a69bf
  42355e:	fcmovu st,st(4)
  423560:	cmp    ecx,DWORD PTR [ebp+0x5267ad72]
  423566:	mov    ah,0x3f
  423568:	inc    ebx
  423569:	aaa    
  42356a:	or     eax,0x7cce3cff
  42356f:	or     BYTE PTR [ebp+0x2a],bl
  423572:	addr16 jae 0x423580
  423575:	or     bl,bh
  423577:	(bad)  
  423578:	call   0x300d:0x7f1b41f4
  42357f:	push   ss
  423580:	mov    BYTE PTR [ecx+eax*8+0x39],dh
  423584:	mov    esp,0x76d03aa2
  423589:	jb     0x423588
  42358b:	mov    ah,0xbb
  42358d:	fs xor eax,0xee05eceb
  423593:	push   es
  423594:	mov    esi,0x253e0e5b
  423599:	adc    eax,0xd57b9f0
  42359e:	outs   dx,BYTE PTR ds:[esi]
  42359f:	hlt    
  4235a0:	aaa    
  4235a1:	inc    ebp
  4235a2:	int    0x83
  4235a4:	pushf  
  4235a5:	jnp    0x4235d1
  4235a7:	jae    0x42359a
  4235a9:	sti    
  4235aa:	adc    bh,ah
  4235ac:	retf   0xb021
  4235af:	push   0xffffffb4
  4235b1:	scas   eax,DWORD PTR es:[edi]
  4235b2:	adc    bh,BYTE PTR [eax-0x3afa0cc2]
  4235b8:	data16 (bad) 
  4235ba:	jmp    0x7268039
  4235bf:	popf   
  4235c0:	leavew 
  4235c2:	push   ebx
  4235c3:	jle    0x423584
  4235c5:	dec    ebp
  4235c6:	popa   
  4235c7:	pop    esp
  4235c8:	scas   al,BYTE PTR es:[edi]
  4235c9:	test   DWORD PTR [eax+0x67],ebp
  4235cc:	or     al,0x93
  4235ce:	cli    
  4235cf:	mov    dh,0xe7
  4235d1:	pop    edi
  4235d2:	ret    0x3a7d
  4235d5:	add    al,0xc5
  4235d7:	je     0x4235a2
  4235d9:	ins    BYTE PTR es:[edi],dx
  4235da:	rol    BYTE PTR [ebp-0x1c],cl
  4235dd:	ss int 0x8f
  4235e0:	and    eax,0x56bd0f43
  4235e5:	enter  0x701d,0xcd
  4235e9:	mov    ebp,0x8fecf0f0
  4235ee:	mov    dh,0xab
  4235f0:	inc    ebx
  4235f1:	jns    0x4235d9
  4235f3:	in     al,dx
  4235f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235f5:	jmp    0xc38b929c
  4235fa:	push   cs
  4235fb:	stc    
  4235fc:	xor    eax,0xa1bdac0f
  423601:	daa    
  423602:	sbb    dl,cl
  423604:	pop    ecx
  423605:	push   esi
  423606:	mov    cl,0xd6
  423608:	mov    bp,0x55e6
  42360c:	pop    esi
  42360d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42360e:	sti    
  42360f:	repnz nop
  423611:	xor    dl,BYTE PTR [eax]
  423613:	mov    BYTE PTR [ebx],ah
  423615:	rcr    DWORD PTR [esi+0x62a4931e],0x3c
  42361c:	inc    edi
  42361d:	mov    ah,0x1d
  42361f:	xchg   ebp,eax
  423620:	adc    DWORD PTR [edi],edx
  423622:	and    BYTE PTR [eax],bl
  423624:	stos   DWORD PTR es:[edi],eax
  423625:	imul   esp,DWORD PTR [ebx+ebx*4+0x1f5c35dd],0x73ad9bfb
  423630:	jbe    0x423611
  423632:	fdivr  DWORD PTR [eax*8-0x3b7f8d03]
  423639:	inc    ebp
  42363a:	pop    esp
  42363b:	jns    0x423650
  42363d:	mov    ds:0x9db3eb5c,al
  423642:	clc    
  423643:	inc    BYTE PTR [esi]
  423645:	inc    edi
  423646:	ret    0x8daf
  423649:	jecxz  0x4236b7
  42364b:	xor    DWORD PTR [edx-0x28d39e70],0x75
  423652:	adc    eax,0xbfa89e84
  423657:	mov    WORD PTR [edi+eax*8],fs
  42365a:	xor    ch,BYTE PTR [ebx+0x21571e52]
  423660:	sub    BYTE PTR [ebx+0xb7d933a],0xc0
  423667:	sub    al,0x89
  423669:	leave  
  42366a:	jb     0x4236a8
  42366c:	outs   dx,DWORD PTR ds:[esi]
  42366d:	mul    DWORD PTR [edx+0x65]
  423670:	pop    edi
  423671:	adc    edx,DWORD PTR [eax-0x14899a40]
  423677:	outs   dx,BYTE PTR ds:[esi]
  423678:	or     al,0x14
  42367a:	mov    bh,0x5b
  42367c:	sub    BYTE PTR [edx+0x45],bh
  42367f:	std    
  423680:	leave  
  423681:	shl    esi,cl
  423683:	or     DWORD PTR [esp+edx*2-0x47d90543],esp
  42368a:	xor    eax,0x181f611f
  42368f:	or     eax,0x1c88820a
  423694:	fwait
  423695:	into   
  423696:	iret   
  423697:	stos   BYTE PTR es:[edi],al
  423698:	push   eax
  423699:	ds xor al,0xab
  42369c:	(bad)  
  42369d:	mov    ecx,DWORD PTR [edx]
  42369f:	or     esp,edi
  4236a1:	ret    
  4236a2:	in     al,dx
  4236a3:	mov    ah,0xa6
  4236a5:	cmp    al,0xa3
  4236a7:	mov    edi,DWORD PTR [edi+ebx*2+0x5ead139c]
  4236ae:	jbe    0x4236a1
  4236b0:	xchg   esp,eax
  4236b1:	(bad)
  4236b6:	inc    edi
  4236b7:	mov    BYTE PTR [esi-0x14330f3f],dl
  4236bd:	pop    ds
  4236be:	mov    bh,0xe6
  4236c0:	mov    ebp,0x4b1b3945
  4236c5:	sbb    dl,dl
  4236c7:	hlt    
  4236c8:	pop    ecx
  4236c9:	loope  0x42372a
  4236cb:	ins    DWORD PTR es:[edi],dx
  4236cc:	enter  0xdf3e,0x84
  4236d0:	(bad)  
  4236d1:	pop    edi
  4236d2:	xor    eax,0x1b3b4c33
  4236d7:	xchg   ecx,eax
  4236d8:	outs   dx,DWORD PTR ds:[esi]
  4236d9:	mov    ebp,0xd7de15bf
  4236de:	icebp  
  4236df:	ret    0x56de
  4236e2:	call   0xcbbfaf9b
  4236e7:	pop    ss
  4236e8:	mov    cl,0x2e
  4236ea:	pop    ecx
  4236eb:	mov    ecx,DWORD PTR [edx]
  4236ed:	and    BYTE PTR [esp+eiz*8],bh
  4236f0:	cmp    DWORD PTR [edx],edi
  4236f2:	and    BYTE PTR [ecx-0x20],bl
  4236f5:	aad    0xa9
  4236f7:	into   
  4236f8:	inc    ebp
  4236f9:	jmp    0x42368a
  4236fb:	std    
  4236fc:	js     0x423774
  4236fe:	je     0x4236ff
  423700:	push   0xffffffed
  423702:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423703:	ret    
  423704:	(bad)  
  423705:	pop    ds
  423706:	pop    ss
  423707:	sub    dh,BYTE PTR [esp+ecx*1]
  42370a:	repnz mov dh,0x8a
  42370d:	and    DWORD PTR [ebx+eax*1],ecx
  423710:	xor    esp,0x6c
  423713:	aaa    
  423714:	leave  
  423715:	sar    DWORD PTR [edi-0x40],0xbc
  423719:	jb     0x4236b7
  42371b:	out    dx,al
  42371c:	sti    
  42371d:	loop   0x4236d1
  42371f:	adc    dh,BYTE PTR [edx*4+0x3db8c69b]
  423726:	and    DWORD PTR ds:[edi],ecx
  423729:	sub    DWORD PTR [esi-0x2b5fe5fe],ebx
  42372f:	in     al,0xfc
  423731:	xchg   edx,eax
  423732:	in     al,dx
  423733:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423734:	retf   0x941c
  423737:	mov    ch,0x86
  423739:	stos   BYTE PTR es:[edi],al
  42373a:	hlt    
  42373b:	jbe    0x42377c
  42373d:	arpl   WORD PTR [esi+0x14],bp
  423740:	popf   
  423741:	inc    ebx
  423742:	in     al,dx
  423743:	cmp    ch,dh
  423745:	push   edx
  423746:	dec    esi
  423747:	stos   BYTE PTR es:[edi],al
  423748:	jo     0x42378f
  42374a:	jge    0x4237ac
  42374c:	bound  ecx,QWORD PTR [eax+ebp*4-0x6a3ea210]
  423753:	in     al,dx
  423754:	mov    ebx,0xe5f4a543
  423759:	out    0xe,al
  42375b:	repz pop edx
  42375d:	xor    DWORD PTR [ebp-0x186dd5ed],edi
  423763:	retf   
  423764:	ds jbe 0x4237be
  423767:	jp     0x423725
  423769:	jl     0x42376c
  42376b:	leave  
  42376c:	mov    edx,0x3fce201e
  423771:	dec    eax
  423772:	push   es
  423773:	rol    DWORD PTR [esi+ebp*2+0x1019a5b8],1
  42377a:	inc    esi
  42377b:	fimul  DWORD PTR [ebx]
  42377d:	retfw  0xe13a
  423781:	dec    ecx
  423782:	scas   eax,DWORD PTR es:[edi]
  423783:	das    
  423784:	mov    ebx,0xfbfa9bfd
  423789:	arpl   dx,bx
  42378b:	mov    edi,0xb5f8bdb
  423790:	pop    ebp
  423791:	add    DWORD PTR [esi-0x47],edi
  423794:	jb     0x4237d5
  423796:	repz test BYTE PTR [edx+0x66a23c1f],ah
  42379d:	pop    ecx
  42379e:	xchg   ecx,eax
  42379f:	jle    0x4237c4
  4237a1:	(bad)  
  4237a2:	wbinvd 
  4237a4:	out    0xe5,al
  4237a6:	sub    esi,DWORD PTR [edi]
  4237a8:	outs   dx,BYTE PTR ds:[esi]
  4237a9:	bswap  ebx
  4237ab:	cwde   
  4237ac:	mov    BYTE PTR [esp+edx*1-0x3b],dh
  4237b0:	cs sbb eax,0x41d90094
  4237b6:	inc    edi
  4237b7:	shl    DWORD PTR [eax+0x49],0x16
  4237bb:	ins    DWORD PTR es:[edi],dx
  4237bc:	js     0x4237fe
	...
  4237ca:	add    BYTE PTR [eax],al
  4237cc:	pop    esp
  4237cd:	mov    edi,0xdce35063
  4237d2:	jg     0x423793
  4237d4:	popa   
  4237d5:	hlt    
  4237d6:	mov    esi,0xe4f0671d
  4237db:	pop    edi
  4237dc:	scas   al,BYTE PTR es:[edi]
  4237dd:	mov    al,0x1
  4237df:	add    BYTE PTR [edx-0x50fffffe],cl
  4237e5:	adc    eax,0xa1a59708
  4237ea:	stos   BYTE PTR es:[edi],al
  4237eb:	adc    BYTE PTR [ebx+0x20906208],ch
  4237f1:	aas    
  4237f2:	in     eax,0xd
  4237f4:	hlt    
  4237f5:	jns    0x4237a7
  4237f7:	or     DWORD PTR [ebx+0x2ee6e2b2],edi
  4237fd:	pop    ds
  4237fe:	adc    eax,0x418423f8
  423803:	jg     0x4237d2
  423805:	in     eax,0xd4
  423807:	push   edx
  423808:	adc    eax,0x7c36046b
  42380d:	push   ebp
  42380e:	or     DWORD PTR ds:0xc1b7f25d,0xffffff94
  423815:	fidivr DWORD PTR [ebx]
  423817:	mov    al,ds:0xa42bfda1
  42381c:	std    
  42381d:	push   es
  42381e:	mov    esp,0xcd8099ea
  423823:	jmp    0xe6a239fe
  423828:	sahf   
  423829:	mov    ch,0xc4
  42382b:	adc    ah,BYTE PTR [esp+ebp*2]
  42382e:	lock dec esi
  423830:	(bad)  [ebx-0x22]
  423833:	aas    
  423834:	(bad)  [esi]
  423836:	xor    dl,BYTE PTR [edi-0x3e2ebcc5]
  42383c:	cmp    BYTE PTR [edi+0x73],0x3d
  423840:	jg     0x42384f
  423842:	pop    ecx
  423843:	mov    dl,0xc8
  423845:	mov    cs,WORD PTR [edi]
  423847:	mov    al,ds:0x589ae7df
  42384c:	adc    ch,BYTE PTR [esi]
  42384e:	cli    
  42384f:	mov    cs,WORD PTR [ecx-0x35]
  423852:	test   ah,0xed
  423855:	das    
  423856:	std    
  423857:	and    eax,0xefc18086
  42385c:	loop   0x423830
  42385e:	dec    edi
  42385f:	mov    ch,0xcc
  423861:	shl    bl,cl
  423863:	clc    
  423864:	enter  0x6d3c,0x12
  423868:	retf   0xa33f
  42386b:	or     DWORD PTR [ecx-0x79],edi
  42386e:	jle    0x423839
  423870:	or     DWORD PTR ds:[ecx+0x24],0xa4238cf3
  423878:	popf   
  423879:	mov    esi,0x1d826d1b
  42387e:	test   eax,0x81f39c05
  423883:	push   ax
  423885:	(bad)  
  423887:	les    ebp,FWORD PTR [edi-0x2d]
  42388a:	out    0x55,al
  42388c:	lea    ebp,[esi+edx*8]
  42388f:	jb     0x42387e
  423891:	pop    ebp
  423892:	ds popf 
  423894:	and    BYTE PTR [eax-0x80],0xf6
  423898:	icebp  
  423899:	sar    DWORD PTR [ecx],1
  42389b:	mov    ecx,0xed431fec
  4238a0:	fst    QWORD PTR [ebx-0x1a656f6c]
  4238a6:	int    0x34
  4238a8:	xchg   ebx,eax
  4238a9:	dec    esp
  4238aa:	mov    ds:0xdedf760f,eax
  4238af:	and    ecx,DWORD PTR [esi]
  4238b1:	sahf   
  4238b2:	sub    BYTE PTR [ecx-0x7a],ch
  4238b5:	rcl    bl,cl
  4238b7:	jnp    0x4238fb
  4238b9:	in     al,dx
  4238ba:	int3   
  4238bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238bc:	pusha  
  4238bd:	cmp    DWORD PTR [ebx+0x2be93217],eax
  4238c3:	dec    ebx
  4238c4:	mov    ah,0x99
  4238c6:	aad    0xf9
  4238c8:	sub    BYTE PTR [ebp-0x4d0c4ccc],cl
  4238ce:	aas    
  4238cf:	xchg   BYTE PTR [eax],cl
  4238d1:	idiv   DWORD PTR [ebp-0x1ef20de]
  4238d7:	(bad)  
  4238d8:	dec    edx
  4238d9:	fnstsw WORD PTR [ebx]
  4238db:	into   
  4238dc:	icebp  
  4238dd:	lock into 
  4238df:	arpl   bp,bp
  4238e1:	mov    bl,0xe3
  4238e3:	inc    edi
  4238e4:	adc    BYTE PTR ds:0x350cc189,ah
  4238ea:	in     al,0x5b
  4238ec:	je     0x423953
  4238ee:	xchg   esp,eax
  4238ef:	iret   
  4238f0:	adc    al,0xb4
  4238f2:	cmp    esp,DWORD PTR [ecx]
  4238f4:	mov    eax,ds:0xd5ce4229
  4238f9:	sub    DWORD PTR [ecx],edi
  4238fb:	scas   eax,DWORD PTR es:[edi]
  4238fc:	into   
  4238fd:	out    dx,eax
  4238fe:	lods   al,BYTE PTR ds:[esi]
  4238ff:	inc    ebp
  423900:	mov    ds:0x1ae775a0,al
  423905:	dec    ebx
  423906:	mov    esp,0xa15eed69
  42390b:	clc    
  42390c:	mov    edi,0xc4c7cc36
  423911:	hlt    
  423912:	into   
  423913:	inc    ebx
  423914:	popa   
  423915:	push   ds
  423916:	push   ss
  423917:	jo     0x42394e
  423919:	fld    st(0)
  42391b:	fsubr  st,st(2)
  42391d:	add    DWORD PTR ds:0x67f79e3e,edx
  423923:	cmp    eax,0xa0b164a0
  423928:	test   eax,0xf6ed72c3
  42392d:	cmc    
  42392e:	inc    ebp
  42392f:	add    al,0xe5
  423931:	or     al,0xa1
  423933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423934:	stos   DWORD PTR es:[edi],eax
  423935:	shr    BYTE PTR [ecx+0x38],0xd9
  423939:	and    ebp,edi
  42393b:	sbb    BYTE PTR [ebx+ebx*1],al
  42393e:	mov    bh,0x53
  423940:	mov    fs,edi
  423942:	loop   0x423951
  423944:	loope  0x42392a
  423946:	inc    ebp
  423947:	mov    ds:0x59eb2411,eax
  42394c:	mov    bl,0x99
  42394e:	cmp    edi,ebp
  423950:	sbb    dh,bl
  423952:	or     al,0x1f
  423955:	fidiv  DWORD PTR [edx]
  423957:	jbe    0x423994
  423959:	in     al,0xdd
  42395b:	xor    bl,BYTE PTR [esi+0x633612bb]
  423961:	test   DWORD PTR [edi-0x64b7c64f],edx
  423967:	dec    ah
  423969:	inc    ecx
  42396a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42396b:	push   ebx
  42396c:	inc    ecx
  42396d:	sti    
  42396e:	jne    0x42390f
  423970:	sub    DWORD PTR [ecx+eiz*8+0x5],ebx
  423974:	jo     0x4239b0
  423976:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423977:	mov    edx,0x2eac39e2
  42397c:	mov    WORD PTR [eax-0x690f8e7c],fs
  423982:	sbb    al,0xa0
  423984:	jg     0x42397c
  423986:	and    al,0x1
  423988:	mov    cl,0xce
  42398a:	xchg   esp,eax
  42398b:	add    eax,0x7f4e0f66
  423990:	jb     0x423a11
  423992:	test   BYTE PTR [edi-0x47],dl
  423995:	aam    0x9
  423997:	sub    DWORD PTR [ecx-0x516809a6],edx
  42399d:	adc    DWORD PTR [edi+0x634cddae],esi
  4239a3:	pop    ebx
  4239a4:	jg     0x423a08
  4239a6:	je     0x4239eb
  4239a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239a9:	push   ecx
  4239aa:	ret    0x7cc3
  4239ad:	inc    ecx
  4239ae:	cmp    esi,ebx
  4239b0:	jge    0x423944
  4239b2:	clc    
  4239b3:	push   cs
  4239b4:	dec    esi
  4239b5:	aad    0x99
  4239b7:	inc    edx
  4239b8:	pop    ss
  4239b9:	aad    0x4
  4239bb:	rcl    DWORD PTR [esi],0xaf
  4239be:	ss dec ebx
  4239c0:	xor    bh,dh
  4239c2:	ss jns 0x423a07
  4239c5:	or     al,0xce
  4239c7:	sub    DWORD PTR [esi],0xe9ea410a
  4239cd:	inc    edi
  4239ce:	sub    al,ah
  4239d0:	jae    0x4239aa
  4239d2:	mov    WORD PTR [ecx-0x615810f5],?
  4239d8:	pop    esp
  4239d9:	vmwrite ebx,DWORD PTR [eax]
  4239dc:	xchg   DWORD PTR [edx],eax
  4239de:	add    ebp,DWORD PTR [ebx-0x3eb925a2]
  4239e4:	cmp    bh,BYTE PTR [eax+ebp*2-0xf]
  4239e8:	xchg   edi,eax
  4239e9:	xor    ch,ch
  4239eb:	call   0xdf357fa8
  4239f0:	push   esp
  4239f1:	shl    DWORD PTR [ebx-0x3f36c539],cl
  4239f7:	push   ds
  4239f8:	dec    edx
  4239f9:	jno    0x423a24
  4239fb:	push   esp
  4239fc:	dec    ebp
  4239fd:	lahf   
  4239fe:	xchg   BYTE PTR [esi],ah
  423a00:	ins    BYTE PTR es:[edi],dx
  423a01:	jle    0x423a20
  423a03:	out    dx,eax
  423a04:	adc    DWORD PTR [ecx-0x67],edi
  423a07:	cs dec ecx
  423a09:	mov    cl,0x5b
  423a0b:	pop    edi
  423a0c:	or     al,0xec
  423a0e:	retf   
  423a0f:	mov    bh,0xd5
  423a11:	add    al,0xcc
  423a13:	adc    bl,BYTE PTR [esi]
  423a15:	add    eax,0xf28038d5
  423a1a:	cmp    dl,ah
  423a1c:	pop    ss
  423a1d:	into   
  423a1e:	inc    esi
  423a1f:	outs   dx,DWORD PTR ds:[esi]
  423a20:	stos   BYTE PTR es:[edi],al
  423a21:	mov    ch,0x31
  423a23:	mov    cl,0x38
  423a25:	add    BYTE PTR [esi-0x27],ch
  423a28:	jo     0x423a35
  423a2a:	sti    
  423a2b:	sub    BYTE PTR [edx],cl
  423a2d:	adc    eax,esi
  423a2f:	aas    
  423a30:	xor    eax,0xd4783687
  423a35:	bound  ecx,QWORD PTR [ebx+0x4e219936]
  423a3b:	div    dl
  423a3d:	or     bh,BYTE PTR [ebx-0x75]
  423a40:	test   al,0x51
  423a42:	pop    es
  423a43:	lock sbb DWORD PTR [esi+0x58bc9d9d],0x75b82607
  423a4e:	shl    DWORD PTR [edi+0x111f2c8c],1
  423a54:	pushf  
  423a55:	mov    bh,0x84
  423a57:	jne    0x423a27
  423a59:	fdivr  st,st(3)
  423a5b:	lahf   
  423a5c:	pop    es
  423a5d:	xor    eax,0x8eb34a98
  423a62:	in     eax,0xd
  423a64:	enter  0xd8f5,0x56
  423a68:	push   ecx
  423a69:	xchg   esi,eax
  423a6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423a6b:	cdq    
  423a6c:	test   dl,al
	...
  423a7a:	add    BYTE PTR [eax],al
  423a7c:	inc    ebx
  423a7d:	push   ebp
  423a7e:	pusha  
  423a7f:	(bad)  
  423a80:	jbe    0x423a41
  423a82:	out    dx,eax
  423a83:	fnstsw WORD PTR [edx+0x2c4356c3]
  423a89:	adc    eax,0xb338c89e
  423a8e:	add    DWORD PTR [eax],eax
  423a90:	mov    al,BYTE PTR [edx]
  423a92:	add    BYTE PTR [eax],al
  423a94:	or     DWORD PTR [ebx+edi*1],edi
  423a97:	push   esi
  423a98:	out    0x37,eax
  423a9a:	fcomp  DWORD PTR [ecx]
  423a9c:	pushf  
  423a9d:	xor    esp,eax
  423a9f:	call   eax
  423aa1:	sub    cl,BYTE PTR [edi+0x5950011b]
  423aa7:	ins    DWORD PTR es:[edi],dx
  423aa8:	jo     0x423aa5
  423aaa:	sub    DWORD PTR [edi+0x7e],edx
  423aad:	mov    BYTE PTR [ebp-0x7e],al
  423ab0:	clc    
  423ab1:	sar    ch,0xd2
  423ab4:	mov    ss,WORD PTR [edx+0x65]
  423ab7:	jle    0x423a94
  423ab9:	in     eax,0x3f
  423abb:	cwde   
  423abc:	(bad)  
  423abd:	jbe    0x423a89
  423abf:	and    eax,0x1bbf7566
  423ac5:	xchg   esi,eax
  423ac6:	pop    ss
  423ac7:	pusha  
  423ac8:	mov    bh,0x86
  423aca:	xchg   BYTE PTR [esi+0x29d76f93],cl
  423ad0:	pusha  
  423ad1:	sbb    esp,DWORD PTR [ebx-0x36]
  423ad4:	call   0x5d3b107a
  423ad9:	push   ebp
  423ada:	sbb    eax,0xa2eb3fc
  423adf:	mov    ebp,0x5739d2da
  423ae4:	mov    al,ds:0x1f6fe2d0
  423ae9:	mov    edi,0x6c74179d
  423aee:	jnp    0x423af7
  423af0:	fbstp  TBYTE PTR [ebx-0x42d752be]
  423af6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423af7:	(bad)  
  423af8:	xor    al,0x5
  423afa:	xchg   edi,eax
  423afb:	sub    al,0xb7
  423afd:	pop    ss
  423afe:	retf   0xa93a
  423b01:	xchg   DWORD PTR [edi+0x26],eax
  423b04:	jae    0x423b7e
  423b06:	in     eax,0xa7
  423b08:	pop    ecx
  423b09:	mov    WORD PTR [edx],cs
  423b0b:	mov    ebp,0x67335374
  423b10:	cwde   
  423b11:	loop   0x423b0b
  423b13:	lock sti 
  423b15:	leave  
  423b16:	mov    dh,BYTE PTR [ecx+0x663716fc]
  423b1c:	pop    ebp
  423b1d:	adc    cl,BYTE PTR [edx-0x6c9deeac]
  423b23:	adc    BYTE PTR ds:0xe06d41d9,cl
  423b29:	add    DWORD PTR [edx+0x6e26dd2],ebx
  423b2f:	inc    esp
  423b30:	sbb    ebx,DWORD PTR [esi]
  423b32:	shl    DWORD PTR [edi],cl
  423b34:	sar    ebx,cl
  423b36:	push   ss
  423b37:	jmp    0xe2c57519
  423b3c:	cmp    eax,0x3e66ff67
  423b41:	neg    DWORD PTR [eax-0x20]
  423b44:	jns    0x423ba4
  423b46:	jae    0x423b70
  423b48:	shl    BYTE PTR [ebx-0x55],1
  423b4b:	loope  0x423adf
  423b4d:	popa   
  423b4e:	pop    esp
  423b4f:	push   0xffffffe3
  423b51:	lods   eax,DWORD PTR ds:[esi]
  423b52:	aad    0xdf
  423b54:	mov    ebp,0x456b15d
  423b59:	sbb    BYTE PTR [ecx+esi*8],dh
  423b5c:	cmp    ebx,ecx
  423b5e:	mov    ah,0xc7
  423b60:	ret    
  423b61:	mov    bh,0x22
  423b63:	jge    0x423bbf
  423b65:	out    dx,eax
  423b66:	(bad)  
  423b67:	cdq    
  423b68:	adc    DWORD PTR [eax+0x56],ecx
  423b6b:	push   ecx
  423b6c:	sub    BYTE PTR [esi+0x76],ah
  423b6f:	sbb    DWORD PTR [ecx+0x220da0e8],edi
  423b75:	push   ss
  423b76:	xchg   esp,eax
  423b77:	call   0x3655:0xc7ffd06d
  423b7e:	pop    es
  423b7f:	shl    BYTE PTR [ebp+0x11],1
  423b82:	adc    eax,0x37e91827
  423b87:	inc    ebx
  423b88:	loopne 0x423b43
  423b8a:	push   edi
  423b8b:	shr    DWORD PTR [edi],cl
  423b8d:	push   0xffffff99
  423b8f:	icebp  
  423b90:	inc    eax
  423b91:	cmp    al,0xc4
  423b93:	lock mov bl,0xa1
  423b96:	mov    ds:0x1eb803ac,al
  423b9b:	ins    BYTE PTR es:[edi],dx
  423b9c:	inc    edx
  423b9d:	mov    al,ds:0x5c5ee50
  423ba2:	sbb    al,BYTE PTR [ecx+0x4c]
  423ba5:	xor    ah,BYTE PTR [esi+edx*2]
  423ba8:	inc    ecx
  423ba9:	mov    ds:0xd1b5b113,eax
  423bae:	xchg   DWORD PTR [eax],ebx
  423bb0:	push   es
  423bb1:	and    ebp,DWORD PTR [eax+ebx*4+0x672f65c]
  423bb8:	jns    0x423bab
  423bba:	xchg   ebx,eax
  423bbb:	sub    al,0x3d
  423bbd:	retf   
  423bbe:	daa    
  423bbf:	rcl    DWORD PTR [edx],cl
  423bc1:	xchg   esi,eax
  423bc2:	repnz (bad) 
  423bc4:	repz add dh,ah
  423bc7:	rol    BYTE PTR [esi-0x65],cl
  423bca:	cmp    DWORD PTR [eax-0xf],edi
  423bcd:	in     al,0x1e
  423bcf:	mov    edx,0x70cefbe
  423bd4:	in     eax,0x22
  423bd6:	lahf   
  423bd7:	test   BYTE PTR [eax],dh
  423bd9:	jp     0x423b7f
  423bdb:	dec    ebp
  423bdc:	cdq    
  423bdd:	push   0x62
  423bdf:	push   esi
  423be0:	mov    al,ds:0x391d93ba
  423be5:	retf   0xd54
  423be8:	jg     0x771f5f9b
  423bee:	inc    eax
  423bef:	mov    ebx,0x3b4c5395
  423bf4:	int3   
  423bf5:	into   
  423bf6:	pop    esp
  423bf7:	add    BYTE PTR [ebp-0x33cc9d7b],dh
  423bfd:	and    esp,eax
  423bff:	xchg   esi,eax
  423c00:	fwait
  423c01:	xor    DWORD PTR [ecx+0x521c840f],esi
  423c07:	dec    esp
  423c08:	das    
  423c09:	shl    DWORD PTR [ebx-0x30],0x1c
  423c0d:	xor    dh,BYTE PTR [esi+0x4f]
  423c10:	ret    0x6193
  423c13:	(bad)  [ebp+esi*1-0x26]
  423c17:	jmp    0x63e0:0x7667fdd8
  423c1e:	mov    edx,0x3fe581e9
  423c23:	stos   DWORD PTR es:[edi],eax
  423c24:	bound  ebx,QWORD PTR [eax+0x41d2c45c]
  423c2a:	pop    esp
  423c2b:	and    DWORD PTR [ecx-0x74],ebp
  423c2e:	ficom  WORD PTR [edi]
  423c30:	out    dx,al
  423c31:	aad    0xed
  423c33:	pop    ss
  423c34:	sub    BYTE PTR [ebx],dh
  423c36:	sub    eax,0x51556c2d
  423c3b:	push   ecx
  423c3c:	cmc    
  423c3d:	icebp  
  423c3e:	pop    esi
  423c3f:	stos   DWORD PTR es:[edi],eax
  423c40:	mov    eax,ecx
  423c42:	sbb    eax,0x116fd28f
  423c47:	rcl    DWORD PTR [ebp-0xe26430c],1
  423c4d:	push   edx
  423c4e:	test   dh,ch
  423c50:	push   ss
  423c51:	sbb    DWORD PTR [edx-0x76],0xe18356ca
  423c58:	cmp    eax,0xe18ba088
  423c5d:	mov    dl,0x6f
  423c5f:	pop    ecx
  423c60:	xchg   edx,eax
  423c61:	test   al,0x8e
  423c63:	cmp    al,dh
  423c65:	or     al,0x9d
  423c67:	jbe    0x423c89
  423c69:	dec    esi
  423c6a:	xchg   edx,eax
  423c6b:	(bad)  
  423c6d:	mov    WORD PTR [esi+0x425ee1b9],fs
  423c73:	aad    0xb2
  423c75:	jnp    0x423c0b
  423c77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c78:	push   edx
  423c79:	push   edx
  423c7a:	out    0x76,eax
  423c7c:	xchg   DWORD PTR [edx-0x5d],ebx
  423c7f:	sbb    esi,DWORD PTR [esi+0x3b16255f]
  423c85:	push   eax
  423c86:	loope  0x423cf4
  423c88:	push   0x6a4317a1
  423c8d:	lahf   
  423c8e:	dec    ebx
  423c8f:	jge    0x423cff
  423c91:	leave  
  423c92:	das    
  423c93:	clc    
  423c94:	ins    BYTE PTR es:[edi],dx
  423c95:	pop    esi
  423c96:	aad    0xde
  423c98:	mov    cl,0xa6
  423c9a:	adc    DWORD PTR [ebx+0x5b],esp
  423c9d:	jg     0x423c6e
  423c9f:	or     al,0xc7
  423ca1:	stc    
  423ca2:	xor    eax,0xf8d733aa
  423ca7:	pop    esi
  423ca8:	sbb    BYTE PTR [eax+0x0],dl
  423cab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cac:	lea    ebp,ds:0x8d93f421
  423cb2:	imul   ebp,DWORD PTR [edx+0x159b509e],0xfffffff9
  423cb9:	jmp    0x37affc90
  423cbe:	push   esp
  423cbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cc0:	test   ebx,edi
  423cc2:	jns    0x423c85
  423cc4:	adc    DWORD PTR ds:0x88f68616,0xe41b99e1
  423cce:	sub    al,0xcc
  423cd0:	loope  0x423d28
  423cd2:	sub    ebx,DWORD PTR [edx-0x626d5274]
  423cd8:	inc    edx
  423cd9:	cmp    ebp,esp
  423cdb:	xor    eax,0xb97f9359
  423ce0:	inc    edi
  423ce1:	mov    esp,0x9cabc35c
  423ce6:	push   edi
  423ce7:	pop    edi
  423ce8:	add    eax,0xc64628ea
  423ced:	gs adc edi,eax
  423cf0:	retf   0xd71b
  423cf3:	inc    edi
  423cf4:	dec    ebp
  423cf5:	js     0x423c86
  423cf7:	mov    ch,0x77
  423cf9:	sti    
  423cfa:	sub    al,0x98
  423cfc:	outs   dx,DWORD PTR ds:[esi]
  423cfd:	inc    ebp
  423cfe:	push   ebp
  423cff:	mov    esp,0xaae71bf9
  423d04:	add    ecx,ebp
  423d06:	push   0xc0d06b06
  423d0b:	jge    0x423ca5
  423d0d:	xor    DWORD PTR [ebx+0x7a837e8a],edi
  423d13:	(bad)  
  423d14:	adc    BYTE PTR [esi+eiz*8-0x77],ch
  423d18:	or     bh,dh
  423d1a:	enter  0x7b29,0x53
	...
  423d2a:	add    BYTE PTR [eax],al
  423d2c:	push   edi
  423d2d:	sub    eax,0xba7f9a07
  423d32:	fucomip st,st(5)
  423d34:	ficom  WORD PTR [ebp+0x41]
  423d37:	adc    al,0x10
  423d39:	pop    ss
  423d3a:	call   0x1f7ff4a
  423d3f:	add    BYTE PTR [edx-0x60fffffe],cl
  423d45:	jge    0x423d8b
  423d47:	ins    BYTE PTR es:[edi],dx
  423d48:	cli    
  423d49:	sub    ch,dh
  423d4b:	sbb    ebp,DWORD PTR [edx-0x535e716c]
  423d51:	cwde   
  423d52:	pop    ss
  423d53:	imul   esi,DWORD PTR ds:0x42dc4c1b,0xfbbad262
  423d5d:	cld    
  423d5e:	jbe    0x423d6a
  423d60:	enter  0x331a,0xb6
  423d64:	jp     0x423d92
  423d66:	into   
  423d67:	jbe    0x423dc9
  423d69:	sub    eax,0x79bca37d
  423d6e:	dec    esp
  423d6f:	and    DWORD PTR [esi+0xb],ebx
  423d72:	pop    ss
  423d73:	or     eax,0xd951cabd
  423d78:	adc    eax,0xf93d0410
  423d7d:	mov    dl,0x3e
  423d7f:	push   edi
  423d80:	nop
  423d81:	sub    edx,DWORD PTR [ebx]
  423d83:	enter  0x171,0xf4
  423d87:	(bad)  
  423d88:	call   0x176f:0x1512aca5
  423d8f:	jae    0x423d7c
  423d91:	xlat   BYTE PTR ds:[ebx]
  423d92:	fwait
  423d93:	es (bad) 
  423d95:	push   edx
  423d96:	or     ebp,ebp
  423d98:	mov    esi,0xf53004d7
  423d9d:	cmp    al,0xd4
  423d9f:	xchg   ebp,eax
  423da0:	add    DWORD PTR [edi+eiz*1+0x774e7678],edx
  423da7:	sahf   
  423da8:	mov    bh,0xd9
  423daa:	adc    ecx,DWORD PTR [ecx]
  423dac:	ins    BYTE PTR es:[edi],dx
  423dad:	aad    0xea
  423daf:	mov    ch,0x99
  423db1:	xchg   edi,eax
  423db2:	in     al,dx
  423db3:	xor    al,0x3c
  423db5:	push   edi
  423db6:	mov    edi,0x95d09116
  423dbb:	or     dl,BYTE PTR [ebx+0x29]
  423dbe:	pop    ecx
  423dbf:	and    esi,DWORD PTR [edi+eiz*2+0xc47b0ad]
  423dc6:	jae    0x423daf
  423dc8:	inc    esi
  423dc9:	ss cmp dh,BYTE PTR es:[ebx-0xa00ad1f]
  423dd1:	cwde   
  423dd2:	adc    bh,BYTE PTR [ebp-0x1b]
  423dd5:	mov    BYTE PTR [edi],bl
  423dd7:	mov    al,ds:0x79d205aa
  423ddc:	xchg   esp,eax
  423ddd:	mov    ebp,0x2e39e2dc
  423de2:	jno    0x423db0
  423de4:	fs pop ds
  423de6:	adc    edx,0x36
  423de9:	lods   al,BYTE PTR ds:[esi]
  423dea:	in     eax,dx
  423deb:	sub    eax,0x1c7c9ad1
  423df0:	out    dx,al
  423df1:	fimul  WORD PTR [ecx]
  423df3:	xchg   ecx,eax
  423df4:	xor    BYTE PTR [ebx-0x11d6d3c4],bl
  423dfa:	into   
  423dfb:	leave  
  423dfc:	sbb    ecx,DWORD PTR [edx+0x28d03f8d]
  423e02:	retf   0xd0c4
  423e05:	xchg   BYTE PTR [ebp+0x77e9dfe6],bh
  423e0b:	mov    eax,0x30d843f8
  423e10:	ss mov edi,0x2dc11fba
  423e16:	out    0xf0,eax
  423e18:	dec    ebp
  423e19:	pop    ecx
  423e1a:	cmp    ch,ah
  423e1c:	pop    ss
  423e1d:	mov    edx,0xf2209502
  423e22:	bsr    esp,DWORD PTR [esi-0x6f]
  423e26:	or     ch,ch
  423e28:	inc    eax
  423e29:	push   es
  423e2a:	mov    esi,0xafbed323
  423e2f:	xor    al,0xfb
  423e31:	mov    esp,0x7860ecfb
  423e36:	adc    BYTE PTR [edx],bl
  423e38:	pop    esi
  423e39:	cdq    
  423e3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e3b:	fsin   
  423e3d:	jmp    0x423e70
  423e3f:	rol    ebx,cl
  423e41:	ss jl  0x423e3d
  423e44:	cld    
  423e45:	dec    ecx
  423e46:	leave  
  423e47:	sub    dh,al
  423e49:	xchg   ebp,eax
  423e4a:	adc    eax,0x5de86181
  423e4f:	call   0x3bb8:0xb23548d7
  423e56:	dec    ebx
  423e57:	ret    0x73ea
  423e5a:	imul   edx,eax,0x26c5212e
  423e60:	lock push ds
  423e62:	push   ecx
  423e63:	sbb    DWORD PTR [ebx],eax
  423e65:	mov    edx,DWORD PTR [edx+edi*8+0xe113ae6]
  423e6c:	mov    eax,ds:0x94ffd7c2
  423e71:	add    bh,ah
  423e73:	xor    DWORD PTR [edi+0x472e399e],ebx
  423e79:	push   ebx
  423e7a:	pop    edx
  423e7b:	push   ss
  423e7c:	mov    eax,0xe544e23d
  423e81:	mov    ecx,0x4812abdf
  423e86:	inc    ebp
  423e87:	retf   
  423e88:	add    BYTE PTR [edx-0x12],0x31
  423e8c:	mov    esi,0x4ac72182
  423e91:	push   ebp
  423e92:	sbb    eax,0x3159f172
  423e97:	mov    ebp,0x5ed0f5c4
  423e9c:	test   DWORD PTR [ecx+0x7a],edx
  423e9f:	dec    ebp
  423ea0:	push   eax
  423ea1:	or     eax,0xab12e344
  423ea6:	hlt    
  423ea7:	jle    0x423ef8
  423ea9:	adc    eax,0x57cc791a
  423eae:	push   ebx
  423eaf:	jns    0x423ec1
  423eb1:	fisubr DWORD PTR [edx-0x1e]
  423eb4:	sbb    DWORD PTR [eax-0x3e4405f0],ebx
  423eba:	xor    bh,BYTE PTR [edx]
  423ebc:	inc    edx
  423ebd:	pop    edx
  423ebe:	inc    ecx
  423ebf:	or     DWORD PTR [edx-0x49f5cd2f],eax
  423ec5:	(bad)  
  423ec6:	(bad)  
  423ec7:	mov    ?,WORD PTR [eax+0x3]
  423eca:	mov    ebp,0x466df2ed
  423ecf:	push   esp
  423ed0:	xor    al,0xa8
  423ed2:	jle    0x423f38
  423ed4:	push   ss
  423ed5:	scas   eax,DWORD PTR es:[edi]
  423ed6:	push   ss
  423ed7:	adc    al,0xd8
  423ed9:	fucomp st(5)
  423edb:	xor    eax,DWORD PTR [ebx+0x52]
  423ede:	dec    ebp
  423edf:	stos   BYTE PTR es:[edi],al
  423ee0:	jne    0x423ec0
  423ee2:	sbb    BYTE PTR [eax-0xb],dh
  423ee5:	out    dx,al
  423ee6:	mov    al,ds:0xcbea77af
  423eeb:	fldln2 
  423eed:	push   edx
  423eee:	and    ah,BYTE PTR [ebp+0x64a494b8]
  423ef4:	test   BYTE PTR [eax+0x6bfe54b],0xa7
  423efb:	cmp    DWORD PTR [ebx-0x68],0xffffffda
  423eff:	xchg   DWORD PTR [edi+esi*4-0x678202fe],edi
  423f06:	jno    0x423f77
  423f08:	sti    
  423f09:	mov    ds:0x36be7d64,al
  423f0e:	adc    BYTE PTR [edx+0x51301419],dh
  423f14:	call   0x1d43a0a3
  423f19:	inc    edi
  423f1a:	int3   
  423f1b:	pop    esp
  423f1c:	arpl   bx,sp
  423f1e:	jno    0x423f07
  423f20:	mov    ds:0xbc678be6,eax
  423f25:	ins    DWORD PTR es:[edi],dx
  423f26:	push   ecx
  423f27:	jle    0x423eb9
  423f29:	nop
  423f2a:	in     eax,dx
  423f2b:	int3   
  423f2c:	into   
  423f2d:	sbb    al,0x33
  423f2f:	inc    edx
  423f30:	cld    
  423f31:	ins    DWORD PTR es:[edi],dx
  423f32:	loope  0x423f20
  423f34:	retf   0xf263
  423f37:	clc    
  423f38:	mov    bl,0xbd
  423f3a:	jno    0x423f0a
  423f3c:	iret   
  423f3d:	inc    edx
  423f3e:	adc    eax,0x60d3eb39
  423f43:	mov    ecx,0x778bb84f
  423f48:	outs   dx,BYTE PTR ds:[esi]
  423f49:	shr    ecx,cl
  423f4b:	jmp    0x3421:0x4f099cdc
  423f52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f53:	fist   DWORD PTR ds:0xb4a8000e
  423f59:	mov    al,0x8e
  423f5b:	or     BYTE PTR [ebp+eiz*8+0x529f78b5],dl
  423f62:	dec    esi
  423f63:	adc    eax,0xe27bbab3
  423f68:	dec    eax
  423f69:	mov    bh,0xd0
  423f6b:	cmc    
  423f6c:	mov    ebp,0xf069bbf
  423f71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f72:	mov    DWORD PTR [edi],eax
  423f74:	sbb    ebp,DWORD PTR [esi-0x22]
  423f77:	or     eax,0xd842405f
  423f7c:	leave  
  423f7d:	inc    ebp
  423f7e:	inc    eax
  423f7f:	sub    eax,0x79b0a8d6
  423f84:	gs fst st(6)
  423f87:	jns    0x423f4d
  423f89:	jb     0x423fcc
  423f8b:	bound  eax,QWORD PTR [ebx+0x35202db0]
  423f91:	out    0x2f,al
  423f93:	int    0xed
  423f95:	jnp    0x423fd7
  423f97:	scas   ax,WORD PTR es:[edi]
  423f99:	cmp    DWORD PTR [ebx-0x9],0x93ccf6f7
  423fa0:	lock jge 0x42400b
  423fa3:	in     al,dx
  423fa4:	mov    edx,0x78644a2b
  423fa9:	jns    0x423f6a
  423fab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fac:	xor    edx,ebp
  423fae:	and    edi,DWORD PTR [eax-0x14745299]
  423fb4:	adc    BYTE PTR [eax+0x7e1cc43e],bl
  423fba:	inc    esp
  423fbb:	(bad)  
  423fbc:	fdivr  DWORD PTR [edx]
  423fbe:	shl    dh,0x18
  423fc1:	push   cs
  423fc2:	in     al,dx
  423fc3:	push   esi
  423fc4:	fisubr DWORD PTR ds:0xe1058495
  423fca:	jge    0x423ffc
  423fcc:	ror    DWORD PTR [edi+0x0],cl
	...
  423fdb:	add    BYTE PTR [edx+ebp*1+0x2b],ch
  423fdf:	outs   dx,DWORD PTR es:[esi]
  423fe1:	daa    
  423fe2:	ins    DWORD PTR es:[edi],dx
  423fe3:	push   0xfffffff2
  423fe5:	push   esp
  423fe6:	stos   DWORD PTR es:[edi],eax
  423fe7:	adc    esi,ebx
  423fe9:	mov    ebp,0xb84c7d71
  423fee:	add    DWORD PTR [eax],eax
  423ff0:	mov    al,BYTE PTR [edx]
  423ff2:	add    BYTE PTR [eax],al
  423ff4:	sub    eax,0xa0e14322
  423ff9:	jne    0x424037
  423ffb:	jge    0x424063
  423ffd:	pop    eax
  423ffe:	mov    cl,0x75
  424000:	mov    gs,WORD PTR [eax]
  424002:	mov    dl,0x8b
  424004:	int    0x9c
  424006:	cmc    
  424007:	in     al,dx
  424008:	je     0x423fca
  42400a:	sbb    DWORD PTR [ecx+edi*2+0x57443429],ebp
  424011:	push   ss
  424012:	fs push cs
  424014:	pop    esp
  424015:	ins    BYTE PTR es:[edi],dx
  424016:	mov    bl,0x76
  424018:	adc    eax,0xf8ff475a
  42401d:	mov    eax,0x3d0ab6cd
  424022:	inc    eax
  424023:	add    al,0x13
  424025:	gs test al,0xd0
  424028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424029:	leave  
  42402a:	repz rcl BYTE PTR [edi],1
  42402d:	mov    gs:0x3bb0963a,al
  424033:	jbe    0x424017
  424035:	xchg   DWORD PTR [edi],ebx
  424037:	test   DWORD PTR [edi+eiz*1+0x0],esi
  42403b:	push   ebx
  42403c:	jl     0x424028
  42403e:	call   0xf066:0x37891fed
  424045:	ins    BYTE PTR es:[edi],dx
  424046:	loop   0x424055
  424048:	(bad)  
  42404a:	mov    eax,0x54befea8
  42404f:	jge    0x424046
  424051:	(bad)  
  424052:	ret    0x62d4
  424055:	cmc    
  424056:	fucom  st(3)
  424058:	aam    0xe9
  42405a:	dec    edx
  42405b:	cdq    
  42405c:	or     cl,bl
  42405e:	popf   
  42405f:	(bad)  
  424061:	mov    ?,WORD PTR [edx-0x61]
  424064:	dec    ebx
  424065:	dec    edi
  424066:	mov    WORD PTR [edi-0x48],ds
  424069:	(bad)  
  42406a:	sub    eax,0x116918ad
  42406f:	addr16 pusha 
  424071:	pop    eax
  424072:	loopne 0x42403d
  424074:	repnz sahf 
  424076:	add    BYTE PTR [edx+0x1f],0xc0
  42407a:	jecxz  0x4240a9
  42407c:	adc    al,BYTE PTR [esi+0x76]
  42407f:	or     ecx,DWORD PTR [ebp+0x608d839d]
  424085:	fcom   QWORD PTR [ebp-0x4b42a810]
  42408b:	std    
  42408c:	sub    BYTE PTR [ecx-0x1bf66b4a],0xab
  424093:	xacquire xchg DWORD PTR [ebp-0x49362c28],esp
  42409a:	sahf   
  42409b:	sti    
  42409c:	mov    WORD PTR [ecx+0x6a],ss
  42409f:	cmp    ecx,DWORD PTR [eax+0x39634887]
  4240a5:	add    al,0xe3
  4240a7:	and    DWORD PTR [esi-0x31f9347f],ecx
  4240ad:	dec    eax
  4240ae:	out    dx,al
  4240af:	and    DWORD PTR [esi-0x78709f53],edi
  4240b5:	push   ecx
  4240b6:	lds    edi,FWORD PTR [ebx+0x5e]
  4240b9:	pushf  
  4240ba:	arpl   WORD PTR [esi-0x3ff90133],dx
  4240c0:	loopne 0x4240fa
  4240c2:	push   0x97de4aa6
  4240c7:	iret   
  4240c8:	out    0x15,eax
  4240ca:	es pop ss
  4240cc:	mov    dh,0x8e
  4240ce:	arpl   WORD PTR [ecx+0x59a54c3e],cx
  4240d4:	add    eax,0x455fdd
  4240d9:	rol    BYTE PTR [edi],0xf4
  4240dc:	jl     0x4240ce
  4240de:	(bad)  
  4240df:	cmp    dh,BYTE PTR [ebx+esi*1+0x45]
  4240e3:	scas   eax,DWORD PTR es:[edi]
  4240e4:	int    0xb1
  4240e6:	pop    ebp
  4240e7:	call   0xec04:0xc9743fdd
  4240ee:	inc    esi
  4240ef:	xchg   edi,eax
  4240f0:	scas   eax,DWORD PTR es:[edi]
  4240f1:	dec    eax
  4240f2:	mov    al,0x8a
  4240f4:	aam    0x71
  4240f6:	fmul   QWORD PTR [edi+edi*8]
  4240f9:	(bad)  
  4240fa:	fnsave [esi+edx*8-0x16]
  4240fe:	ss addr16 jae 0x424108
  424102:	add    esi,DWORD PTR [edx]
  424104:	clc    
  424105:	sbb    edi,DWORD PTR [eax-0x1940cc0e]
  42410b:	sub    BYTE PTR [ebp+0x4f555481],al
  424111:	fs pop ds
  424113:	(bad)  
  424114:	mov    WORD PTR [edi],?
  424116:	add    ch,BYTE PTR [esi+0x6570398]
  42411c:	sbb    BYTE PTR [edi],dh
  42411e:	cmp    bl,BYTE PTR [edi+esi*4]
  424121:	cmp    bh,BYTE PTR [esi+0x7d]
  424124:	clc    
  424125:	aaa    
  424126:	xor    BYTE PTR [ebx],bh
  424128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424129:	mov    esp,0x3bbed052
  42412e:	mov    ds:0x45870f05,eax
  424133:	add    edx,DWORD PTR [ebx-0x8]
  424136:	jbe    0x424120
  424138:	sub    DWORD PTR [edx-0x3f],ebp
  42413b:	mov    ecx,0x16ae06ad
  424140:	fisttp WORD PTR [ebx-0x6c]
  424143:	adc    esi,0x13
  424146:	les    ebx,FWORD PTR [edi+0x1d]
  424149:	fwait
  42414a:	inc    edi
  42414b:	mov    dl,0xff
  42414d:	add    al,0x42
  42414f:	pushf  
  424150:	stos   DWORD PTR es:[edi],eax
  424151:	push   cs
  424152:	cld    
  424153:	(bad)  
  424154:	cmp    eax,0x1b733ba3
  424159:	aas    
  42415a:	stos   DWORD PTR es:[edi],eax
  42415b:	jae    0x42418a
  42415d:	iret   
  42415e:	(bad)  
  42415f:	mov    esi,0x9bb19cc1
  424164:	dec    eax
  424165:	mov    esi,0xd98016a6
  42416a:	pusha  
  42416b:	iret   
  42416c:	cmp    BYTE PTR [ecx-0x46],bl
  42416f:	cmp    BYTE PTR [ebx+0x36],al
  424172:	fdivr  QWORD PTR [esi]
  424174:	push   ss
  424175:	mov    cl,0xe
  424177:	inc    esi
  424178:	pop    esp
  424179:	adc    BYTE PTR [eax],0x9
  42417c:	inc    ecx
  42417d:	xor    DWORD PTR [esi-0x7a6ec0],edi
  424183:	stos   DWORD PTR es:[edi],eax
  424184:	push   edx
  424185:	inc    edx
  424186:	pop    esi
  424187:	lds    edi,FWORD PTR [ebp+0x7863a6da]
  42418d:	(bad)  
  42418e:	out    dx,eax
  42418f:	add    esp,DWORD PTR ds:0x3fb02b90
  424195:	pushf  
  424196:	add    ah,BYTE PTR [edi-0x28]
  424199:	and    eax,DWORD PTR [eax+0x3f]
  42419c:	mov    al,0x5f
  42419e:	inc    eax
  42419f:	inc    edx
  4241a0:	cmp    edx,DWORD PTR [edi-0x50]
  4241a3:	out    dx,al
  4241a4:	adc    eax,0x1ddd5035
  4241a9:	mov    bh,0xd1
  4241ab:	ins    BYTE PTR es:[edi],dx
  4241ac:	mov    al,0x87
  4241ae:	popa   
  4241af:	cmp    DWORD PTR cs:[ebx],ebx
  4241b2:	inc    eax
  4241b3:	out    dx,eax
  4241b4:	stos   BYTE PTR es:[edi],al
  4241b5:	je     0x4241f4
  4241b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241b8:	pop    ds
  4241b9:	je     0x42419e
  4241bb:	cld    
  4241bc:	xchg   edi,ecx
  4241be:	out    0xd6,al
  4241c0:	and    eax,0xc2e8e8d5
  4241c5:	call   DWORD PTR [esi-0x609c650a]
  4241cb:	sub    BYTE PTR [ecx],dh
  4241cd:	inc    esi
  4241ce:	xor    edx,esp
  4241d0:	pop    esp
  4241d1:	mov    eax,ds:0xc7fbe241
  4241d6:	into   
  4241d7:	jmp    0xe1ae:0x6550baaf
  4241de:	pop    edi
  4241df:	or     edx,DWORD PTR [edx]
  4241e1:	dec    edi
  4241e2:	std    
  4241e3:	inc    ebp
  4241e4:	jge    0x4241a5
  4241e6:	cmc    
  4241e7:	mov    dh,0xa8
  4241e9:	(bad)  
  4241ea:	stos   BYTE PTR es:[edi],al
  4241eb:	sub    esp,ecx
  4241ed:	xchg   ecx,eax
  4241ee:	cmc    
  4241ef:	push   esi
  4241f0:	or     al,bh
  4241f2:	inc    edi
  4241f3:	ret    0xd9dc
  4241f6:	xchg   edx,eax
  4241f7:	and    al,0x8
  4241f9:	pop    ebx
  4241fa:	push   ss
  4241fb:	adc    ah,cl
  4241fd:	(bad)  
  4241fe:	jno    0x424269
  424200:	fwait
  424201:	xor    ebx,esp
  424203:	push   edi
  424204:	cwde   
  424205:	call   0xc203:0x28ad54d0
  42420c:	or     DWORD PTR [eax+0xa],ebp
  42420f:	icebp  
  424210:	jge    0x424194
  424212:	stos   BYTE PTR es:[edi],al
  424213:	aas    
  424214:	adc    ebp,esp
  424216:	mov    ch,0xe8
  424218:	fld    st(3)
  42421a:	nop
  42421b:	call   0xf0ec:0x68cd3294
  424222:	sbb    BYTE PTR [esi],cl
  424224:	aad    0x84
  424226:	js     0x424208
  424228:	fwait
  424229:	dec    esp
  42422a:	inc    esp
  42422b:	popf   
  42422c:	call   0xf0a2:0xed31305c
  424233:	mov    eax,0x891bf6ae
  424238:	retf   
  424239:	outs   dx,BYTE PTR ds:[esi]
  42423a:	dec    eax
  42423b:	imul   ebp,edi,0x5c
  42423e:	enter  0x814d,0x22
  424242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424243:	add    edx,DWORD PTR [eax+0x5c3e6555]
  424249:	xor    edi,DWORD PTR es:[ebx+0xc]
  42424d:	test   DWORD PTR ds:0xf44074e1,ebp
  424253:	(bad)  
  424254:	in     eax,0x21
  424256:	lds    ebx,FWORD PTR [ebx+0x3a]
  424259:	sar    DWORD PTR [ebp-0x51],0x8a
  42425d:	clc    
  42425e:	repnz sub BYTE PTR [eax+0x4d],al
  424262:	fisub  WORD PTR [ecx+0x531e21d7]
  424268:	mov    esp,0x8a3c9afb
  42426d:	loopne 0x424296
  42426f:	loopne 0x42422f
  424271:	iret   
  424272:	adc    ch,ah
  424274:	inc    esp
  424275:	dec    ebp
  424276:	sbb    dh,bl
  424278:	and    DWORD PTR [ebx],edx
  42427a:	sub    ebp,DWORD PTR [esi+0xda30]
	...
  42428c:	inc    ebx
  42428d:	lea    ebx,[edi]
  42428f:	and    bh,bl
  424291:	mov    dl,0x7f
  424293:	out    dx,eax
  424294:	add    BYTE PTR [ebx-0x4176d8f0],dl
  42429a:	test   DWORD PTR ds:0x1bad6,esi
  4242a0:	mov    al,BYTE PTR [edx]
  4242a2:	add    BYTE PTR [eax],al
  4242a4:	mov    al,0xcc
  4242a6:	retf   0x11ad
  4242a9:	call   0xed5634fd
  4242ae:	add    ch,BYTE PTR [esp+esi*1-0x6db35c7]
  4242b5:	into   
  4242b6:	(bad)  
  4242b7:	xchg   edx,eax
  4242b8:	pop    esp
  4242b9:	inc    ebx
  4242ba:	cmp    BYTE PTR [edx],bl
  4242bc:	ret    0x8642
  4242bf:	lock stc 
  4242c1:	(bad)  
  4242c2:	xchg   edx,eax
  4242c3:	sub    esi,ecx
  4242c5:	(bad)  
  4242c6:	rcr    BYTE PTR [esp+edi*2-0x204e2cad],1
  4242cd:	test   BYTE PTR [edi-0x641226e8],bl
  4242d3:	push   ebp
  4242d4:	pop    es
  4242d5:	add    DWORD PTR [eax-0x65],eax
  4242d8:	dec    edi
  4242d9:	retf   
  4242da:	dec    esp
  4242db:	enter  0x9aa5,0x56
  4242df:	mov    ds:0x2c34b040,eax
  4242e4:	push   edx
  4242e5:	lods   eax,DWORD PTR ds:[esi]
  4242e6:	push   cs
  4242e7:	inc    eax
  4242e8:	push   cs
  4242e9:	xchg   ebx,eax
  4242ea:	push   ss
  4242eb:	outs   dx,BYTE PTR ds:[esi]
  4242ec:	dec    edi
  4242ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4242ee:	in     eax,dx
  4242ef:	jnp    0x42431a
  4242f1:	sbb    cl,BYTE PTR ds:[esi+0x34cfcadb]
  4242f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242f9:	inc    edx
  4242fa:	cmc    
  4242fb:	lock call 0xd907:0x5b37a49f
  424303:	pusha  
  424304:	inc    esp
  424305:	or     al,cl
  424307:	pop    esi
  424308:	fstp   DWORD PTR [eax-0xe]
  42430b:	adc    al,0x6
  42430d:	sbb    ecx,eax
  42430f:	nop
  424310:	repz inc ecx
  424312:	mov    cl,0x87
  424314:	adc    ebp,DWORD PTR [esi+ebx*4]
  424317:	fisttp DWORD PTR [eax]
  424319:	mov    dh,0x7
  42431b:	inc    edi
  42431c:	push   0xffffffb8
  42431e:	fdivr  st(3),st
  424320:	out    0x82,eax
  424322:	mov    es,eax
  424324:	addr16 (bad) 
  424327:	mov    ds:0xe2dfe696,al
  42432c:	gs cmp bl,bl
  42432f:	test   BYTE PTR [edx+0x127b6dbd],ah
  424335:	es jp  0x4243ad
  424338:	sbb    BYTE PTR [ebp+ebp*8-0x793df016],bl
  42433f:	call   0x2a038f8d
  424344:	sbb    edx,DWORD PTR [ebx-0xa4ad1d3]
  42434a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42434b:	test   al,0x88
  42434d:	sub    al,0xe
  42434f:	(bad)  
  424350:	mov    ecx,0x8f5dca5b
  424355:	mov    ah,0x35
  424357:	lods   al,BYTE PTR ds:[esi]
  424358:	test   BYTE PTR [ebx-0x5a],dh
  42435b:	push   edi
  42435c:	dec    eax
  42435d:	aaa    
  42435e:	cmp    BYTE PTR [eax-0x1df365c9],bl
  424364:	and    al,0x56
  424366:	dec    ecx
  424367:	sbb    dh,BYTE PTR [ecx]
  424369:	and    DWORD PTR [ebp+0x540612a9],esi
  42436f:	adc    ebp,edx
  424371:	inc    edx
  424372:	rol    ebx,0x1c
  424375:	mov    al,ds:0xc4df4604
  42437a:	lods   eax,DWORD PTR ds:[esi]
  42437b:	sub    eax,0x40806ee7
  424380:	(bad)  
  424381:	and    ebx,DWORD PTR [esi-0x66]
  424384:	mov    DWORD PTR [edx],esi
  424386:	jmp    0x424347
  424388:	xor    DWORD PTR [edi-0x3c7b81c5],esi
  42438e:	ror    eax,cl
  424390:	add    BYTE PTR [edi],bl
  424392:	loopne 0x424318
  424394:	cli    
  424395:	adc    dl,dl
  424397:	test   eax,0xcc7ef8d7
  42439c:	int    0x5d
  42439e:	and    al,0xf7
  4243a0:	add    edx,edx
  4243a2:	lock pop ebx
  4243a4:	sbb    BYTE PTR [ecx+0x3d],0x78
  4243a8:	mov    ecx,es
  4243aa:	push   edi
  4243ab:	mov    esi,0x60bf121c
  4243b0:	xor    esp,DWORD PTR [ebp+0x25]
  4243b3:	mov    ds:0xfeffe6fb,al
  4243b8:	cmp    esi,DWORD PTR ds:0x5f286a1c
  4243be:	and    BYTE PTR [eax-0x4100684b],al
  4243c4:	in     al,0xca
  4243c6:	pop    ecx
  4243c7:	dec    esp
  4243c8:	mov    WORD PTR [ecx+edx*4-0x1ae00f8f],gs
  4243cf:	out    dx,al
  4243d0:	daa    
  4243d1:	add    dl,ah
  4243d3:	pop    ebp
  4243d4:	adc    al,0x8f
  4243d6:	sbb    BYTE PTR [ebx+0x3c17e052],dl
  4243dc:	add    ebx,eax
  4243de:	or     ebx,ebp
  4243e0:	lahf   
  4243e1:	imul   esp,DWORD PTR [esi+0x1d018eba],0xb63ced81
  4243eb:	jg     0x4243c9
  4243ed:	jbe    0x4243a1
  4243ef:	call   0x8cfd:0xec12d513
  4243f6:	xor    eax,DWORD PTR [edx]
  4243f8:	cmp    DWORD PTR [eax+0x1],edi
  4243fb:	pop    eax
  4243fc:	or     al,0x82
  4243fe:	nop
  4243ff:	lods   eax,DWORD PTR ds:[esi]
  424400:	jge    0x424443
  424402:	sbb    ebx,DWORD PTR [ecx+0xe09cbec]
  424408:	stos   BYTE PTR es:[edi],al
  424409:	jle    0x4243ae
  42440b:	xlat   BYTE PTR ds:[ebx]
  42440c:	retf   
  42440d:	and    dh,cl
  42440f:	and    ah,dh
  424411:	inc    edi
  424412:	imul   edi,DWORD PTR [ebx-0x2f],0x36b9eae7
  424419:	adc    BYTE PTR [edx+eax*2],0xcb
  42441d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42441e:	inc    eax
  42441f:	cdq    
  424420:	pop    edx
  424421:	(bad)  
  424423:	dec    edx
  424424:	sub    eax,0x3e4cbe9d
  424429:	inc    esp
  42442a:	lock sbb ah,dl
  42442d:	scas   al,BYTE PTR es:[edi]
  42442e:	mov    eax,cs:0xbea15ff9
  424434:	dec    esi
  424435:	xchg   edx,eax
  424436:	addr16 jne 0x8b32b0ca
  42443d:	js     0x424435
  42443f:	dec    eax
  424440:	mov    bl,0x71
  424442:	mov    cl,0x5e
  424444:	inc    esp
  424445:	lock fadd QWORD PTR [esi]
  424448:	mov    ds:0xff39b2d4,eax
  42444d:	or     al,0x75
  42444f:	or     bh,al
  424451:	pop    edi
  424452:	xor    DWORD PTR [edi+eax*4],esi
  424455:	out    dx,eax
  424456:	sub    DWORD PTR [ebx+0x2f9034ad],edx
  42445c:	push   ss
  42445d:	jo     0x4244a9
  42445f:	aad    0x27
  424461:	out    dx,eax
  424462:	mov    dh,0x61
  424464:	sti    
  424465:	mov    eax,0x35a9ec30
  42446a:	pusha  
  42446b:	fdivr  DWORD PTR [esi]
  42446d:	int    0xb8
  42446f:	cmp    DWORD PTR [edi+0x62],ebx
  424472:	sbb    al,BYTE PTR [eax-0x4e5528ed]
  424478:	mov    edi,0x39510dc
  42447d:	xchg   DWORD PTR [ebx],esi
  42447f:	fiadd  DWORD PTR [ebx-0x80]
  424482:	cmp    al,0xba
  424484:	xchg   ebx,eax
  424485:	or     DWORD PTR [edi+0x7a6e8e4b],ebp
  42448b:	or     eax,0x582d8182
  424490:	mov    bl,0x2
  424492:	sub    dh,BYTE PTR [ebx-0x16]
  424495:	mov    ecx,0xdc53baac
  42449a:	inc    esi
  42449b:	(bad)  
  42449c:	retf   
  42449d:	cmp    DWORD PTR [edi+0x3919b254],esp
  4244a3:	outs   dx,BYTE PTR ds:[esi]
  4244a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244a5:	pop    ebx
  4244a6:	imul   ebp,ebp,0x2df2d1f8
  4244ac:	(bad)  
  4244ad:	das    
  4244ae:	cmp    eax,0x458e4377
  4244b3:	aam    0xc7
  4244b5:	push   0xffffff93
  4244b7:	stos   DWORD PTR es:[edi],eax
  4244b8:	sub    DWORD PTR [esi-0x300c59e1],ebp
  4244be:	and    BYTE PTR [edx],al
  4244c0:	and    al,0xde
  4244c2:	ja     0x4244d0
  4244c4:	mov    al,0xcb
  4244c6:	push   ds
  4244c7:	mov    bh,dl
  4244c9:	(bad)  
  4244ca:	cmp    eax,DWORD PTR [edx-0x551f6d5a]
  4244d0:	pusha  
  4244d1:	jb     0x42450d
  4244d3:	push   cs
  4244d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244d5:	cmc    
  4244d6:	retf   
  4244d7:	fld    TBYTE PTR [ecx+ebx*2]
  4244da:	jp     0x424502
  4244dc:	mov    ds:0x6e72fb11,eax
  4244e1:	out    dx,al
  4244e2:	repnz mov WORD PTR [ecx-0x45a63a39],es
  4244e9:	add    ecx,DWORD PTR [esi-0x2164d2da]
  4244ef:	mov    bh,0xff
  4244f1:	xchg   cl,bh
  4244f3:	and    al,0xf9
  4244f5:	aad    0x9c
  4244f7:	xchg   edi,eax
  4244f8:	aaa    
  4244f9:	pop    edi
  4244fa:	sbb    dh,BYTE PTR [esi+eax*4]
  4244fd:	inc    eax
  4244fe:	outs   dx,DWORD PTR ds:[esi]
  4244ff:	leave  
  424500:	dec    edi
  424501:	dec    esp
  424502:	pusha  
  424503:	pop    edi
  424504:	jns    0x42452e
  424506:	xchg   esi,eax
  424507:	shl    DWORD PTR [ecx-0x1cda3c07],0x61
  42450e:	loop   0x4244db
  424510:	ret    
  424511:	mov    eax,0x49141cb9
  424516:	mov    al,0xd2
  424518:	adc    eax,0x871247ce
  42451d:	jecxz  0x42451e
  42451f:	out    0x85,eax
  424521:	jmp    0x424567
  424523:	ja     0x42455e
  424525:	out    dx,al
  424526:	enter  0x849c,0xbe
  42452a:	dec    eax
  42452b:	sub    BYTE PTR [ebx+edi*1+0x0],0x0
	...
  42453c:	hlt    
  42453d:	cmp    DWORD PTR [edx-0x2002081],edx
  424543:	mov    ebx,0xc0721507
  424548:	and    cl,dl
  42454a:	push   ds
  42454b:	dec    ebx
  42454c:	pusha  
  42454d:	mov    ebp,0x28a0001
  424552:	add    BYTE PTR [eax],al
  424554:	mov    ah,0xa8
  424556:	xchg   ebp,eax
  424557:	push   ecx
  424558:	lea    ebp,[esi+0xc]
  42455b:	or     ah,BYTE PTR [ebx-0x79162434]
  424561:	dec    edi
  424562:	shl    DWORD PTR [eax-0x6d5e135d],1
  424568:	push   edx
  424569:	arpl   WORD PTR [ebp-0x12],bp
  42456c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42456d:	push   edx
  42456e:	xor    BYTE PTR [eax],dh
  424570:	mov    esi,0x3299ad89
  424575:	xor    DWORD PTR [ebx+0x1a],eax
  424578:	lds    esi,FWORD PTR [ebp+ebx*4+0x3a]
  42457c:	mov    edx,0xa7fba16e
  424581:	sbb    dh,BYTE PTR [esi-0x79]
  424584:	inc    esp
  424585:	leave  
  424586:	fcomp  QWORD PTR [ebp+0x67]
  424589:	xchg   BYTE PTR [ecx+0x12],ah
  42458c:	sti    
  42458d:	dec    ebp
  42458e:	cmp    al,0xd4
  424590:	dec    ebp
  424592:	pop    esi
  424593:	std    
  424594:	test   DWORD PTR [esi+0x51c5b6e5],ecx
  42459a:	sbb    eax,0xe5b85e84
  42459f:	fwait
  4245a0:	mov    dl,0x7c
  4245a2:	retf   
  4245a3:	pop    esi
  4245a4:	in     eax,0xec
  4245a6:	and    DWORD PTR [edx+esi*1],edx
  4245a9:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245ab:	cwde   
  4245ac:	push   cs
  4245ad:	clc    
  4245ae:	mov    DWORD PTR [esi+eax*8+0x393e05f2],0x8ded5de7
  4245b9:	inc    edx
  4245ba:	dec    ecx
  4245bb:	xor    al,0xd
  4245bd:	push   esi
  4245be:	aaa    
  4245bf:	aas    
  4245c0:	xchg   esi,eax
  4245c1:	jbe    0x4245a8
  4245c3:	jl     0x424620
  4245c5:	jmp    0x8023:0x81a37bdf
  4245cc:	cmp    BYTE PTR ss:[ecx-0x1f],dl
  4245d0:	mov    BYTE PTR [esi+0x5fc285c],bh
  4245d6:	xchg   edx,eax
  4245d7:	mov    DWORD PTR [edx],0x274b0c69
  4245dd:	cmp    BYTE PTR [edi+ebp*2],ch
  4245e0:	and    al,0xf9
  4245e2:	in     al,0x53
  4245e4:	mov    ds:0x3604ce8a,eax
  4245e9:	call   0x1747:0x5e02dd73
  4245f0:	pop    ecx
  4245f1:	rcr    DWORD PTR [ecx],1
  4245f3:	push   edi
  4245f4:	sahf   
  4245f5:	fstp   QWORD PTR [esi]
  4245f7:	add    ebp,esi
  4245f9:	fild   DWORD PTR [esi+0x5a]
  4245fc:	inc    sp
  4245fe:	dec    ebx
  4245ff:	sar    BYTE PTR [ebp+0x16],0x2d
  424603:	inc    esp
  424604:	jmp    0xff13:0x67cb9890
  42460b:	pop    ds
  42460c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42460d:	retf   
  42460e:	and    BYTE PTR ds:0x7b93562e,cl
  424614:	(bad)  
  424615:	fcomp  DWORD PTR [ecx]
  424617:	fmul   QWORD PTR [esi]
  424619:	mov    bl,0xce
  42461b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42461c:	lods   eax,DWORD PTR ds:[esi]
  42461d:	int3   
  42461e:	pop    eax
  42461f:	ins    BYTE PTR es:[edi],dx
  424620:	addr16 mov esp,0x7258071c
  424626:	adc    bl,BYTE PTR [ecx]
  424628:	adc    ecx,DWORD PTR [ecx]
  42462a:	add    DWORD PTR [ebx],esi
  42462c:	xor    BYTE PTR [eax],bl
  42462e:	and    DWORD PTR [ecx+0x94072a7],edi
  424634:	inc    esi
  424635:	cmp    BYTE PTR [edx+0x69713245],0x4c
  42463c:	fsubr  DWORD PTR [edi]
  42463e:	xor    BYTE PTR [ebx+0x607a9ead],ch
  424644:	sbb    DWORD PTR [esi+edx*2],esp
  424647:	stos   BYTE PTR es:[edi],al
  424648:	adc    al,0x11
  42464a:	or     DWORD PTR [ecx],ecx
  42464c:	push   esp
  42464d:	dec    ecx
  42464e:	fsubr  DWORD PTR [edi]
  424650:	jne    0x4246bd
  424652:	push   edi
  424653:	inc    ebx
  424654:	push   ecx
  424655:	push   0xb6374c33
  42465a:	adc    BYTE PTR [ecx+0x1],dl
  42465d:	ja     0x424638
  42465f:	out    dx,eax
  424660:	xchg   BYTE PTR [ebp+0x1a9dee66],dh
  424666:	sti    
  424667:	rol    ebx,cl
  424669:	jp     0x42469b
  42466b:	sub    BYTE PTR [eax],al
  42466d:	xor    eax,0x9394621c
  424672:	xchg   esi,eax
  424673:	nop
  424674:	outs   dx,BYTE PTR ds:[esi]
  424675:	fs ror al,cl
  424678:	mov    ds:0xb78e6095,al
  42467d:	into   
  42467e:	mov    ebx,0xad2d3ed4
  424683:	mov    bl,0x51
  424685:	inc    edx
  424686:	inc    esi
  424687:	jmp    0xe4c7f4cf
  42468c:	pusha  
  42468d:	lds    esp,FWORD PTR [eax+ebp*2+0x7ac4ace9]
  424694:	or     al,0x58
  424696:	std    
  424697:	mov    eax,0x9e615328
  42469c:	or     ebp,ebp
  42469e:	pop    ebx
  42469f:	lods   eax,DWORD PTR ds:[esi]
  4246a0:	mov    edi,0xa049ebbc
  4246a5:	(bad)  
  4246a6:	pop    ebp
  4246a7:	dec    edi
  4246a8:	push   ebp
  4246a9:	pop    ebp
  4246aa:	cmp    al,0xdf
  4246ac:	sbb    esp,DWORD PTR [ebx]
  4246ae:	test   eax,0xebfa6b24
  4246b3:	cmp    al,0x7f
  4246b5:	and    eax,0x220da914
  4246ba:	xchg   edx,eax
  4246bb:	js     0x4246cf
  4246bd:	xlat   BYTE PTR ds:[ebx]
  4246be:	mov    ecx,0x16196beb
  4246c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c4:	popf   
  4246c5:	loop   0x424670
  4246c7:	jne    0x424730
  4246c9:	jp     0x424651
  4246cb:	pop    ebp
  4246cc:	xchg   ebx,eax
  4246cd:	mov    edx,0xe2cba08c
  4246d2:	jmp    0xd5b3b39b
  4246d7:	jl     0x42474f
  4246d9:	push   ecx
  4246da:	pop    es
  4246db:	stos   DWORD PTR es:[edi],eax
  4246dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4246dd:	mov    bl,0xfd
  4246df:	outs   dx,DWORD PTR ds:[esi]
  4246e0:	cs mov dl,al
  4246e3:	shl    edi,cl
  4246e5:	pop    esi
  4246e6:	mov    ds:0xc3c9d8d6,eax
  4246eb:	repz cmp eax,0x92083ac2
  4246f1:	dec    ebx
  4246f2:	call   0xf3f3:0xcdb0f859
  4246f9:	cmp    BYTE PTR [ebp+0x6feb5769],0xd0
  424700:	pop    es
  424701:	adc    BYTE PTR [edx],dl
  424703:	or     eax,DWORD PTR [edi+0x34]
  424706:	shr    DWORD PTR [esi-0x7153326a],cl
  42470c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42470d:	sbb    edx,DWORD PTR [edx]
  42470f:	mov    ah,0xa1
  424711:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424712:	sub    ebp,edi
  424714:	adc    al,0xad
  424716:	data16 sub BYTE PTR [ebp-0x30dbe221],ah
  42471d:	dec    eax
  42471e:	in     eax,dx
  42471f:	into   
  424720:	ja     0x424771
  424722:	mov    BYTE PTR [esp+eiz*2],al
  424725:	xchg   ebx,eax
  424726:	mov    bh,0x5d
  424728:	sbb    al,0xf9
  42472a:	jmp    0x4246b3
  42472c:	jp     0x42473a
  42472e:	jl     0x424707
  424730:	push   0x6e
  424732:	or     BYTE PTR [esi+0x65bf226d],0x3e
  424739:	jne    0x4246fa
  42473b:	leave  
  42473c:	loop   0x4246e6
  42473e:	std    
  42473f:	cwde   
  424740:	mov    esp,0xe0fa9c1
  424745:	lock test BYTE PTR [esi-0x52],bl
  424749:	mov    al,0x93
  42474b:	dec    esi
  42474c:	xor    al,0x50
  42474e:	inc    edx
  42474f:	push   esp
  424750:	pop    es
  424751:	adc    eax,0x14d8c1e7
  424756:	xor    BYTE PTR [edx-0x36],dh
  424759:	sbb    esp,DWORD PTR [ecx-0x6cf97076]
  42475f:	mov    edx,0x6eff546f
  424764:	stos   BYTE PTR es:[edi],al
  424765:	ins    BYTE PTR es:[edi],dx
  424766:	pop    edx
  424767:	pop    esp
  424768:	or     bl,BYTE PTR [eax+0x3c427e4a]
  42476e:	xor    al,0x60
  424770:	add    DWORD PTR [edx],ecx
  424772:	add    al,0x7f
  424774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424775:	out    dx,eax
  424776:	jns    0x4247bb
  424778:	ficom  DWORD PTR [edi+0x1f]
  42477b:	repz jmp 0x424729
  42477e:	enter  0x7f32,0x8f
  424782:	std    
  424783:	adc    eax,0x73caa961
  424788:	adc    al,0x69
  42478a:	mov    dh,0x66
  42478c:	sbb    DWORD PTR [eax-0x2c],esi
  42478f:	fiadd  WORD PTR [esi+0x57f4f378]
  424795:	out    0xe4,al
  424797:	shr    esi,0x9
  42479a:	inc    esp
  42479b:	pop    edx
  42479c:	pop    esp
  42479d:	popf   
  42479e:	into   
  42479f:	pop    esp
  4247a0:	pop    es
  4247a1:	mov    eax,gs
  4247a3:	pop    ecx
  4247a4:	mov    ah,al
  4247a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247a7:	rcr    BYTE PTR [ebx-0x570d98fd],1
  4247ad:	repnz stos DWORD PTR es:[edi],eax
  4247af:	imul   dh
  4247b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4247b2:	in     al,dx
  4247b3:	fs pop ds
  4247b5:	fcomp  DWORD PTR [edx-0x7]
  4247b8:	mov    bh,0x4f
  4247ba:	lods   eax,DWORD PTR ds:[esi]
  4247bb:	push   es
  4247bc:	pop    ebp
  4247bd:	sbb    BYTE PTR [edi],ah
  4247bf:	psubb  mm2,QWORD PTR [ecx+0x7b2de727]
  4247c6:	add    al,0x30
  4247c8:	pop    esp
  4247c9:	fnstsw WORD PTR [eax+0x3788e0a3]
  4247cf:	icebp  
  4247d0:	enter  0x531a,0xb5
  4247d4:	mov    cl,0x2b
  4247d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4247d7:	and    bh,bh
  4247d9:	add    bl,ah
  4247db:	mov    edi,0xd183
	...
  4247ec:	push   esp
  4247ed:	ds and al,0x19
  4247f0:	outs   dx,BYTE PTR ds:[esi]
  4247f1:	sbb    edi,DWORD PTR [ebp+0x7f]
  4247f4:	(bad)  
  4247f5:	mov    eax,0xde34cfc0
  4247fa:	pop    ecx
  4247fb:	xor    eax,0x1bfea
  424800:	mov    al,BYTE PTR [edx]
  424802:	add    BYTE PTR [eax],al
  424804:	push   0x3a03e720
  424809:	ins    BYTE PTR es:[edi],dx
  42480a:	dec    edi
  42480b:	cs jmp 0x424889
  42480e:	stos   BYTE PTR es:[edi],al
  42480f:	adc    BYTE PTR [eax-0x25],dh
  424812:	push   es
  424813:	mov    ds:0x3d93b247,al
  424818:	lods   eax,DWORD PTR ds:[esi]
  424819:	mov    esp,0x1263f095
  42481e:	mov    ds:0x20a2246c,al
  424823:	adc    BYTE PTR [esi+0x44],dl
  424826:	add    BYTE PTR [bp+si-0x38d0],0x66
  42482c:	call   0x547eb4b0
  424831:	pop    ss
  424832:	dec    esp
  424833:	mov    edx,0xc003699e
  424838:	fist   WORD PTR [ecx+edi*8]
  42483b:	in     al,dx
  42483c:	mov    edi,esp
  42483e:	ja     0x42481e
  424840:	loope  0x42481e
  424842:	pop    eax
  424843:	(bad)  
  424844:	sub    al,0x26
  424846:	ret    0xf460
  424849:	stos   DWORD PTR es:[edi],eax
  42484a:	jl     0x424875
  42484c:	xchg   ecx,eax
  42484d:	sbb    bh,dl
  42484f:	ja     0x424871
  424851:	push   0x726d48f9
  424856:	jns    0x424833
  424858:	out    dx,eax
  424859:	xor    ebp,DWORD PTR [esi+0x7b01cb86]
  42485f:	nop
  424860:	jl     0x42480b
  424862:	xchg   ecx,eax
  424863:	ret    
  424864:	jmp    0x5c2b:0x524af88e
  42486b:	cmp    BYTE PTR [ebx],0x73
  42486e:	shr    dh,cl
  424870:	int3   
  424871:	fwait
  424872:	pop    edx
  424873:	sbb    BYTE PTR [edx+ebp*4-0x895b5],0x8f
  42487b:	adc    eax,DWORD PTR [ebx+0x332bf757]
  424881:	call   0x146b:0x824baf56
  424888:	mov    ?,edx
  42488a:	data16 xor ch,BYTE PTR [esp+edx*2-0x38]
  42488f:	or     dl,BYTE PTR [esi-0x71aa826d]
  424895:	inc    ebp
  424896:	xchg   esp,eax
  424897:	mov    ah,0xf1
  424899:	in     eax,0xd8
  42489b:	add    al,0x54
  42489d:	push   ebx
  42489e:	jecxz  0x4248f0
  4248a0:	cli    
  4248a1:	dec    esi
  4248a2:	out    dx,eax
  4248a3:	mov    esi,0xc7d869a
  4248a8:	icebp  
  4248a9:	call   0xc000:0x65500701
  4248b0:	loopne 0x4248be
  4248b2:	xor    eax,0xb01092be
  4248b7:	cs cmp al,0x33
  4248ba:	int3   
  4248bb:	test   al,0xbe
  4248bd:	and    DWORD PTR [ecx+edx*4],esp
  4248c0:	(bad)  
  4248c1:	repnz pop esi
  4248c3:	xor    edi,DWORD PTR [esi-0xca895c5]
  4248c9:	bound  edx,QWORD PTR [eax]
  4248cb:	ss inc edx
  4248cd:	add    al,0xb3
  4248cf:	push   ebx
  4248d0:	(bad)  [edx+0x4fd05ce1]
  4248d6:	lods   eax,DWORD PTR ds:[esi]
  4248d7:	aad    0x28
  4248d9:	neg    DWORD PTR [ebp-0x6c478358]
  4248df:	jge    0x424928
  4248e1:	xchg   ebp,eax
  4248e2:	hlt    
  4248e3:	push   ss
  4248e4:	adc    DWORD PTR [eax+0x4b],edx
  4248e7:	ficomp WORD PTR [ecx-0x4180c734]
  4248ed:	fist   DWORD PTR [ebx+0xe]
  4248f0:	bound  eax,QWORD PTR ds:0x7e3d010c
  4248f7:	mov    cl,0x59
  4248f9:	sbb    bl,BYTE PTR [eax+0x21]
  4248fc:	test   eax,0x544fc1a0
  424901:	mov    ah,0xf1
  424903:	test   DWORD PTR [esi],edx
  424905:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424906:	mov    ch,0xe0
  424908:	sbb    edx,DWORD PTR cs:[ecx-0x7b]
  42490c:	jecxz  0x42490a
  42490e:	loop   0x4248f8
  424910:	rcl    BYTE PTR [edi+0x71],cl
  424913:	or     al,0x39
  424915:	int    0xa4
  424917:	jmp    0xb18c:0x43feed5c
  42491e:	ret    
  42491f:	daa    
  424920:	fcomi  st,st(2)
  424922:	pop    ds
  424923:	retf   
  424924:	push   eax
  424925:	imul   edi,DWORD PTR [edi+0x5],0xe
  424929:	cmp    DWORD PTR [esi-0x31b7466e],eax
  42492f:	jecxz  0x4248c0
  424931:	cmp    ecx,ebp
  424933:	push   ss
  424934:	mov    edi,0x49f00943
  424939:	call   0x4ce260ba
  42493e:	int3   
  42493f:	test   BYTE PTR [edi+0x3d88d54b],al
  424945:	sub    bh,bl
  424947:	sbb    al,0x1d
  424949:	mov    dl,0x27
  42494b:	test   eax,0x39b6a16b
  424950:	sub    DWORD PTR [eax],ecx
  424952:	push   ds
  424953:	outs   dx,BYTE PTR ds:[esi]
  424954:	or     ch,BYTE PTR [eax-0x1e4fe0e3]
  42495a:	xlat   BYTE PTR ds:[ebx]
  42495b:	out    dx,eax
  42495c:	ins    BYTE PTR es:[edi],dx
  42495d:	xchg   ecx,eax
  42495e:	sbb    al,0x71
  424960:	pop    ecx
  424961:	es pop ss
  424963:	aad    0x20
  424965:	loope  0x4249d9
  424967:	jbe    0x4249ba
  424969:	fldenv [ebp+0x78]
  42496c:	mov    DWORD PTR [edx-0x20205cbb],ebx
  424972:	xchg   ebp,eax
  424973:	push   ecx
  424974:	rol    BYTE PTR [ecx+0x336806b1],cl
  42497a:	aaa    
  42497b:	iret   
  42497c:	mov    esp,0x4a9b9dc4
  424981:	in     eax,0x10
  424983:	mov    bh,0xef
  424985:	push   edx
  424986:	sti    
  424987:	test   DWORD PTR [edx],esi
  424989:	stos   DWORD PTR es:[edi],eax
  42498a:	inc    edx
  42498b:	lods   al,BYTE PTR ds:[esi]
  42498c:	cli    
  42498d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42498e:	sbb    al,0x24
  424990:	sub    al,BYTE PTR [si-0x6289]
  424995:	inc    eax
  424996:	repnz mov dh,0xa9
  424999:	add    edi,DWORD PTR [edx+0x61]
  42499c:	pop    eax
  42499d:	xor    DWORD PTR [edx-0x55],eax
  4249a0:	stc    
  4249a1:	repz xchg esi,eax
  4249a3:	sahf   
  4249a4:	pop    es
  4249a5:	or     eax,0x35728df1
  4249aa:	push   eax
  4249ab:	sbb    eax,ebx
  4249ad:	stos   BYTE PTR es:[edi],al
  4249ae:	dec    ecx
  4249af:	xchg   ebp,eax
  4249b0:	inc    esi
  4249b1:	lods   eax,DWORD PTR ds:[esi]
  4249b2:	add    DWORD PTR [ecx],edi
  4249b4:	fist   DWORD PTR fs:[ecx+0x5f4fb64e]
  4249bb:	test   eax,0xb13b16bb
  4249c0:	pop    es
  4249c1:	and    al,0xf8
  4249c3:	test   DWORD PTR [edi-0xda9c082],ecx
  4249c9:	ja     0x424989
  4249cb:	outs   dx,DWORD PTR ds:[esi]
  4249cc:	outs   dx,BYTE PTR ds:[esi]
  4249cd:	cmp    al,0x7f
  4249cf:	out    dx,al
  4249d0:	sub    al,0x45
  4249d2:	sar    DWORD PTR [edx-0x53],cl
  4249d5:	adc    BYTE PTR [ebp-0x458b99fc],dl
  4249db:	adc    eax,0x2571e154
  4249e0:	and    bl,bh
  4249e2:	lods   eax,DWORD PTR ds:[esi]
  4249e3:	fild   WORD PTR [ebp+0x13]
  4249e6:	xchg   BYTE PTR [ebp+edx*1+0x7a40d779],dl
  4249ed:	xor    BYTE PTR [edx+0x17e45071],0xf2
  4249f4:	fldenv [ecx+0x7170801a]
  4249fa:	pop    esp
  4249fb:	fwait
  4249fc:	test   DWORD PTR [ecx],ecx
  4249fe:	xlat   BYTE PTR ds:[ebx]
  4249ff:	ret    0xac46
  424a02:	or     BYTE PTR [edx+0x192faccd],al
  424a08:	pusha  
  424a09:	(bad)  [ecx+0x61164c27]
  424a0f:	lds    ebx,FWORD PTR [eax+0x5eb35f6a]
  424a15:	imul   ebx,DWORD PTR [ecx-0x126990b2],0xffffffbc
  424a1c:	adc    DWORD PTR ds:[ecx+0x46],0x11
  424a21:	pop    edx
  424a22:	lods   al,BYTE PTR ds:[esi]
  424a23:	leave  
  424a24:	leave  
  424a25:	shr    DWORD PTR [eax+0x29],0x24
  424a29:	nop
  424a2a:	cmp    dh,BYTE PTR [eax]
  424a2c:	cmc    
  424a2d:	inc    esp
  424a2e:	inc    ebx
  424a2f:	pop    esp
  424a30:	inc    eax
  424a31:	sbb    dh,BYTE PTR [edx-0xd89d587]
  424a37:	aas    
  424a38:	push   ebx
  424a39:	inc    eax
  424a3a:	jecxz  0x424a6c
  424a3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a3d:	mov    ds:0xda01371,eax
  424a42:	add    edi,ebx
  424a44:	stos   DWORD PTR es:[edi],eax
  424a45:	or     al,0x3e
  424a47:	std    
  424a48:	cs push cs
  424a4a:	ins    DWORD PTR es:[di],dx
  424a4c:	retf   0xef4a
  424a4f:	jnp    0x424a19
  424a51:	(bad)  
  424a53:	mov    esi,0x8b8bffd9
  424a58:	mov    edx,0xfa07d37a
  424a5d:	mov    DWORD PTR [esi],eax
  424a5f:	dec    ebp
  424a60:	sub    al,0xa2
  424a62:	lahf   
  424a63:	pop    ecx
  424a64:	mov    dl,0xc8
  424a66:	cmp    eax,DWORD PTR [eax+0x4a]
  424a69:	scas   al,BYTE PTR es:[edi]
  424a6a:	inc    edx
  424a6b:	ds ins DWORD PTR es:[edi],dx
  424a6d:	mov    dl,0x9b
  424a6f:	ror    dl,1
  424a71:	cmp    ah,BYTE PTR [ecx+ebp*1-0x2b]
  424a75:	push   cs
  424a76:	sar    DWORD PTR [edx+0x57],cl
  424a79:	push   eax
  424a7a:	sub    al,0x35
  424a7c:	adc    ch,BYTE PTR [ecx]
  424a7e:	sub    dl,BYTE PTR [esi]
  424a80:	in     al,dx
  424a81:	lahf   
  424a82:	inc    eax
  424a83:	pop    eax
  424a84:	or     BYTE PTR ds:[esi-0x6dcfa025],dh
  424a8b:	outs   dx,DWORD PTR ds:[esi]
  424a8c:	cmp    ecx,DWORD PTR [esi+0x0]
	...
  424a9b:	add    BYTE PTR [esi+0x74ef74ea],bh
  424aa1:	(bad)  
  424aa2:	mov    edi,0x98b349fb
  424aa7:	xor    ah,BYTE PTR [ecx+0xd]
  424aaa:	or     dl,BYTE PTR [ecx]
  424aac:	je     0x424a70
  424aae:	add    DWORD PTR [eax],eax
  424ab0:	mov    al,BYTE PTR [edx]
  424ab2:	add    BYTE PTR [eax],al
  424ab4:	fisubr WORD PTR [ebx+0x1a39a66a]
  424aba:	(bad)  
  424abb:	fs ins BYTE PTR es:[edi],dx
  424abd:	cmp    cl,BYTE PTR [edx-0x77]
  424ac0:	add    dh,BYTE PTR [eax+0x54c78627]
  424ac6:	std    
  424ac7:	push   esi
  424ac8:	xchg   esp,eax
  424ac9:	js     0x424a4b
  424acb:	jl     0x424a63
  424acd:	pop    esp
  424ace:	fimul  DWORD PTR [edx]
  424ad0:	inc    edi
  424ad1:	and    esp,0x31
  424ad4:	add    al,0x61
  424ad6:	nop
  424ad7:	pushf  
  424ad8:	(bad)  
  424ad9:	fwait
  424ada:	sti    
  424adb:	pushf  
  424adc:	mov    dh,0xf1
  424ade:	sub    BYTE PTR [edi],ch
  424ae0:	dec    esp
  424ae1:	mov    DWORD PTR [ecx],ebx
  424ae3:	lods   al,BYTE PTR ds:[esi]
  424ae4:	fs sbb eax,0xc4720bcd
  424aea:	sbb    bl,BYTE PTR [edi-0xc595d51]
  424af0:	pop    ebp
  424af1:	or     edx,DWORD PTR [esi]
  424af3:	mov    bh,0x8
  424af5:	push   cs
  424af6:	sub    BYTE PTR [ebx+0x2a],ah
  424af9:	push   ebp
  424afa:	sti    
  424afb:	call   0x7e1c:0x126f2a51
  424b02:	out    0x1,al
  424b04:	jb     0x424acc
  424b06:	outs   dx,BYTE PTR ds:[esi]
  424b07:	ret    0x6db
  424b0a:	xor    al,0x60
  424b0c:	sbb    DWORD PTR [ebx+0x1fe600d2],ebp
  424b12:	aas    
  424b13:	ret    
  424b14:	cmp    DWORD PTR [edi-0x6c],eax
  424b17:	and    eax,DWORD PTR [edi-0x1e]
  424b1a:	in     al,dx
  424b1b:	xchg   esi,eax
  424b1c:	push   0x23
  424b1e:	std    
  424b1f:	out    0x61,eax
  424b21:	(bad)  
  424b22:	lds    ecx,FWORD PTR [ecx+0x5e]
  424b25:	xchg   ecx,eax
  424b26:	xchg   ecx,eax
  424b27:	xchg   ebp,eax
  424b28:	push   ss
  424b29:	push   ebx
  424b2a:	inc    esi
  424b2b:	js     0x424b89
  424b2d:	fwait
  424b2e:	cmp    DWORD PTR [edi],ebx
  424b30:	daa    
  424b31:	stc    
  424b32:	pusha  
  424b33:	mov    ds:0x97253d05,al
  424b38:	pop    edx
  424b39:	aad    0xdd
  424b3b:	sub    BYTE PTR [esi+0x3f3933a7],0xa4
  424b42:	jp     0x424b55
  424b44:	sub    eax,edx
  424b46:	pop    ss
  424b47:	jmp    0x6b53c6f8
  424b4c:	inc    ecx
  424b4d:	jle    0x424bb8
  424b4f:	repz pop ebx
  424b51:	aam    0x1c
  424b53:	dec    ecx
  424b54:	xor    ebx,esp
  424b56:	xchg   esi,eax
  424b57:	jnp    0x424adc
  424b59:	(bad)  
  424b5a:	addr16 out 0x72,eax
  424b5d:	push   edi
  424b5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b5f:	div    DWORD PTR [eax]
  424b61:	dec    ebx
  424b62:	adc    esi,DWORD PTR [ebx-0x3]
  424b65:	sar    DWORD PTR [edi],1
  424b67:	push   cs
  424b68:	sbb    cl,al
  424b6a:	xchg   esp,eax
  424b6b:	fs pop eax
  424b6d:	jle    0x424bec
  424b6f:	ror    DWORD PTR [ebx-0x4],0xee
  424b73:	scas   eax,DWORD PTR es:[edi]
  424b74:	pop    esi
  424b75:	mov    DWORD PTR [ecx],edi
  424b77:	sbb    al,0x53
  424b79:	(bad)  
  424b7a:	into   
  424b7b:	adc    edi,DWORD PTR [ebp-0x55cf64c2]
  424b81:	sbb    bh,ch
  424b83:	sbb    dh,al
  424b85:	ret    
  424b86:	xor    edi,DWORD PTR [ebx]
  424b88:	add    DWORD PTR fs:[edx-0x1c993153],0xc3a11438
  424b93:	bswap  esi
  424b95:	adc    al,0x8f
  424b97:	pusha  
  424b98:	xor    ch,BYTE PTR [esi+0x6cbdd801]
  424b9e:	mov    esi,0xe1c88cb2
  424ba3:	jo     0x424baf
  424ba5:	rcr    BYTE PTR [ebx+0x6d6fb69f],1
  424bab:	fwait
  424bac:	sbb    bl,BYTE PTR [edx-0x39f0327f]
  424bb2:	xor    BYTE PTR [edx],0x63
  424bb5:	jp     0x424bf9
  424bb7:	cli    
  424bb8:	push   cs
  424bb9:	mov    dh,0xfe
  424bbb:	fadd   QWORD PTR [ebp+0x38548ac4]
  424bc1:	push   0xb22c9fe1
  424bc6:	add    bh,0x16
  424bc9:	pop    ss
  424bca:	xor    al,0x2f
  424bcc:	pop    eax
  424bcd:	std    
  424bce:	lods   eax,DWORD PTR ds:[esi]
  424bcf:	sub    eax,0x867264b9
  424bd4:	mov    esp,edx
  424bd6:	pop    edx
  424bd7:	mov    esp,DWORD PTR fs:0x523eb48c
  424bde:	lods   eax,DWORD PTR ds:[esi]
  424bdf:	add    ch,al
  424be1:	push   eax
  424be2:	mov    cl,0x36
  424be4:	and    ebp,DWORD PTR [edx+0x3631dfd9]
  424bea:	dec    esp
  424beb:	rcr    edx,0xcc
  424bee:	sbb    DWORD PTR ds:0x78e75397,ebp
  424bf4:	inc    edi
  424bf5:	sahf   
  424bf6:	jecxz  0x424c48
  424bf8:	test   eax,0x77da3719
  424bfd:	mov    ?,edi
  424bff:	lods   al,BYTE PTR ds:[esi]
  424c00:	pop    eax
  424c01:	push   ebp
  424c02:	out    dx,al
  424c03:	mov    dh,0xf7
  424c05:	mov    bl,0xb
  424c07:	cmp    eax,0x823dedc8
  424c0c:	cmp    ecx,DWORD PTR [edi-0x10]
  424c0f:	call   0xcae8833c
  424c14:	xchg   DWORD PTR [edi+ebp*2+0x61],edi
  424c18:	push   ebp
  424c19:	retf   0xa026
  424c1c:	push   eax
  424c1d:	fbstp  TBYTE PTR [edi+0x2030ec0a]
  424c23:	out    dx,eax
  424c24:	(bad)  
  424c25:	lods   eax,DWORD PTR ds:[esi]
  424c26:	xor    BYTE PTR [ebx],al
  424c28:	sub    DWORD PTR cs:[ecx-0x16],ecx
  424c2c:	lea    ebx,[esi+0xe54e9a7]
  424c32:	push   ecx
  424c33:	adc    BYTE PTR [ebx-0xeeaafb8],cl
  424c39:	add    al,0xc6
  424c3b:	inc    esi
  424c3c:	xchg   dl,bh
  424c3e:	adc    eax,0x29abfc31
  424c43:	into   
  424c44:	in     eax,0x1f
  424c46:	fwait
  424c47:	outs   dx,DWORD PTR ds:[esi]
  424c48:	mov    al,0x7a
  424c4a:	in     al,dx
  424c4b:	repz ret 
  424c4d:	sbb    ecx,ebp
  424c4f:	fbstp  TBYTE PTR ds:0xb5949c69
  424c55:	lods   eax,DWORD PTR ds:[esi]
  424c56:	add    ebx,DWORD PTR [ebx-0x1e39b5fa]
  424c5c:	cmp    al,BYTE PTR [esi-0x3c]
  424c5f:	sub    eax,0x53353e39
  424c64:	xchg   edi,eax
  424c65:	sbb    BYTE PTR [ecx+0x1bde241e],cl
  424c6b:	daa    
  424c6c:	jge    0x424c88
  424c6e:	mov    ebx,DWORD PTR [esi+0x38e34831]
  424c74:	mov    eax,0x7928b65
  424c79:	ds xchg ch,al
  424c7c:	add    esi,DWORD PTR [di+0x6b]
  424c80:	mov    edi,0x5d856f74
  424c85:	int    0x57
  424c87:	pop    edx
  424c88:	xlat   BYTE PTR ds:[ebx]
  424c89:	pop    ecx
  424c8a:	jmp    0x424cad
  424c8c:	jmp    0x424cfc
  424c8e:	xchg   ecx,eax
  424c8f:	ins    DWORD PTR es:[edi],dx
  424c90:	mov    ds:0x61fdb761,eax
  424c95:	push   0xef3215b5
  424c9a:	int3   
  424c9b:	jmp    0x424ce6
  424c9d:	add    dl,BYTE PTR [edi]
  424c9f:	xchg   ebx,eax
  424ca0:	mov    ds:0x7862162a,eax
  424ca5:	int3   
  424ca6:	lods   al,BYTE PTR ds:[esi]
  424ca7:	aas    
  424ca8:	and    BYTE PTR [ebp-0x496727db],cl
  424cae:	ja     0x424c36
  424cb0:	or     DWORD PTR [edx+ebp*1],0xbcdde4c4
  424cb7:	ds push edi
  424cb9:	xchg   DWORD PTR [esi],ecx
  424cbb:	add    DWORD PTR [ebx],edi
  424cbd:	(bad)  
  424cbf:	xchg   DWORD PTR [ebp-0x69ee9c11],esi
  424cc5:	mov    edi,0xe4b5ad1f
  424cca:	loope  0x424ccf
  424ccc:	push   ecx
  424ccd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424cce:	mov    edi,0x50e12ea6
  424cd3:	adc    al,BYTE PTR ds:0x34bf5eba
  424cd9:	and    eax,0x20fdf0be
  424cde:	or     DWORD PTR [esi],ebx
  424ce0:	mov    DWORD PTR [esp+ebx*4-0x2174476c],ebp
  424ce7:	xor    DWORD PTR [edx-0x66623ac3],edi
  424ced:	jmp    0xeb47852f
  424cf2:	jmp    0x40eebf63
  424cf7:	push   eax
  424cf8:	test   eax,0x51521068
  424cfd:	and    DWORD PTR [ebx-0x5f6553b3],esi
  424d03:	jecxz  0x424d15
  424d05:	sbb    BYTE PTR [ecx-0xb49acb8],bl
  424d0b:	icebp  
  424d0c:	cwde   
  424d0d:	lock push 0xffffffe5
  424d10:	mov    ebx,esp
  424d12:	dec    ecx
  424d13:	xchg   esi,eax
  424d14:	fst    DWORD PTR [ebp-0x6e]
  424d17:	jne    0x424cbd
  424d19:	add    ch,BYTE PTR [edx-0x78]
  424d1c:	je     0x424d89
  424d1e:	je     0x424d47
  424d20:	or     eax,0x5560fbcd
  424d25:	cmc    
  424d26:	loopne 0x424d57
  424d28:	in     al,0x13
  424d2a:	test   BYTE PTR [ebx+edx*1+0x41],0xb5
  424d2f:	(bad)  
  424d30:	cs pop ds
  424d32:	call   0x7641b82f
  424d37:	sar    DWORD PTR [ebp-0x7e],1
  424d3a:	in     al,0x96
  424d3c:	lock sub al,0x0
	...
  424d4b:	add    BYTE PTR [ebx+0x45],cl
  424d4e:	mov    edx,0x5fffbeee
  424d53:	in     eax,0x54
  424d55:	stos   BYTE PTR es:[edi],al
  424d56:	clc    
  424d57:	adc    DWORD PTR [edi],edi
  424d59:	out    0xd,eax
  424d5b:	(bad)  
  424d5d:	les    eax,FWORD PTR [ecx]
  424d5f:	add    BYTE PTR [edx+0x55000002],cl
  424d65:	ficom  DWORD PTR [edx+0x39]
  424d68:	jecxz  0x424d03
  424d6a:	pop    es
  424d6b:	mul    DWORD PTR [esi-0x1b]
  424d6e:	bound  esi,QWORD PTR [esi-0x6b5473e4]
  424d74:	xor    eax,0x1a6a3ac9
  424d79:	gs mov esp,0xeb685357
  424d7f:	fiadd  WORD PTR [edi+0x31]
  424d82:	mov    eax,ds:0xd376fc95
  424d87:	cmp    bl,BYTE PTR [edx+0x574b645e]
  424d8d:	sbb    BYTE PTR [esi-0x496ffd0b],0x92
  424d94:	jbe    0x424dd8
  424d96:	scas   eax,DWORD PTR es:[edi]
  424d97:	pop    ss
  424d98:	fs xchg dh,bh
  424d9b:	mov    dl,0x4d
  424d9d:	leave  
  424d9e:	push   ebp
  424d9f:	movq   QWORD PTR [eax],mm1
  424da2:	aas    
  424da3:	jge    0x424d6c
  424da5:	pop    esp
  424da6:	es int3 
  424da8:	lea    edx,[bp+si-0x14f4]
  424dad:	jg     0x424d42
  424daf:	push   ss
  424db0:	jnp    0x424e19
  424db2:	imul   esp,DWORD PTR [ecx+0x56],0x94d4c6a6
  424db9:	cmp    al,0xac
  424dbb:	call   0xe9e3:0xd417f777
  424dc2:	repnz aad 0x95
  424dc5:	les    eax,FWORD PTR [edi+0x74]
  424dc8:	into   
  424dc9:	addr16 sbb ah,dh
  424dcc:	mov    dh,0x4e
  424dce:	mov    esi,0x6742ce10
  424dd3:	or     bl,dh
  424dd5:	addr16 (bad) 
  424dd7:	adc    DWORD PTR [ebx+0xe5bf29],esi
  424ddd:	into   
  424dde:	stos   DWORD PTR es:[edi],eax
  424ddf:	sbb    eax,0x9b26ca80
  424de4:	push   ds
  424de5:	add    bh,BYTE PTR [eax]
  424de7:	and    al,0x4f
  424de9:	push   ebp
  424dea:	je     0x424dbb
  424dec:	jecxz  0x424e34
  424dee:	fld    QWORD PTR [edi]
  424df0:	push   esi
  424df1:	ret    0xe6f2
  424df4:	(bad)  
  424df5:	push   edx
  424df6:	and    ch,BYTE PTR ds:0xd61c3810
  424dfc:	add    DWORD PTR [ecx+0x43],esp
  424dff:	add    ch,BYTE PTR [edx+0x18]
  424e02:	fidivr DWORD PTR [edi-0x6d4ee04a]
  424e08:	aad    0x2f
  424e0a:	cmc    
  424e0b:	sub    eax,0x97e7e67f
  424e10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424e11:	fstp   DWORD PTR [ebx]
  424e13:	add    al,0x7a
  424e15:	int3   
  424e16:	and    ebp,ebp
  424e18:	fld    QWORD PTR [esi+ebx*2]
  424e1b:	fdivr  st(3),st
  424e1d:	mov    ch,0x28
  424e1f:	pop    ecx
  424e20:	mov    bh,0xd5
  424e22:	jp     0x424db4
  424e24:	push   0x5b
  424e26:	out    0x8d,eax
  424e28:	addr16 push ebp
  424e2a:	addr16 out 0xfb,eax
  424e2d:	sub    ecx,DWORD PTR [edx-0x1f5caeda]
  424e33:	dec    eax
  424e34:	std    
  424e35:	sbb    al,0xc1
  424e37:	lods   eax,DWORD PTR ds:[esi]
  424e38:	enter  0xf46c,0xdf
  424e3c:	ss je  0x424e9e
  424e3f:	mov    ecx,0x2a07ed5a
  424e44:	aas    
  424e45:	daa    
  424e46:	inc    ebp
  424e47:	call   0x1719:0x239273cd
  424e4e:	mov    ebp,0xce0c9613
  424e53:	mov    es,WORD PTR [ebx-0x46]
  424e56:	out    dx,al
  424e57:	pop    edx
  424e58:	popa   
  424e59:	sahf   
  424e5a:	in     eax,dx
  424e5b:	es add esp,ecx
  424e5e:	mov    cl,0x3d
  424e60:	call   0x1c75:0xcce5e7ab
  424e67:	mov    al,0xdb
  424e69:	adc    ecx,DWORD PTR [edi-0x51c4f1cb]
  424e6f:	pop    ds
  424e70:	ss (bad) 
  424e72:	in     al,0xc5
  424e74:	xor    DWORD PTR [esi+esi*4+0x25],eax
  424e78:	loop   0x424eb4
  424e7a:	stos   BYTE PTR es:[edi],al
  424e7b:	das    
  424e7c:	xchg   esp,eax
  424e7d:	dec    esi
  424e7e:	push   0xffffffba
  424e80:	fstp   DWORD PTR [ebp+0x7ca32a5e]
  424e86:	sub    BYTE PTR [edx+0x23f35952],0x15
  424e8d:	jl     0x424e56
  424e8f:	mov    ds:0xc3f248fa,eax
  424e94:	std    
  424e95:	fnsave [ecx+0x16]
  424e98:	or     ebp,ebx
  424e9a:	in     al,0xe1
  424e9c:	mov    eax,ds:0x5905dcdb
  424ea1:	sub    BYTE PTR [edi+0x7503d3ac],0xae
  424ea8:	mov    ds:0xa6322fb5,eax
  424ead:	sbb    ebp,DWORD PTR [ebp+0x12]
  424eb0:	jge    0x424e6a
  424eb2:	icebp  
  424eb3:	or     eax,esp
  424eb5:	xor    eax,DWORD PTR [esi-0x428bf279]
  424ebb:	jle    0x424e48
  424ebd:	and    ebx,edi
  424ebf:	(bad)  
  424ec0:	ins    DWORD PTR es:[edi],dx
  424ec1:	test   BYTE PTR [edx+0x69730646],bh
  424ec7:	ret    0x9f1d
  424eca:	outs   dx,DWORD PTR ds:[esi]
  424ecb:	jnp    0x424e5c
  424ecd:	stos   BYTE PTR es:[edi],al
  424ece:	clc    
  424ecf:	dec    edx
  424ed0:	ficomp DWORD PTR [ebp-0x16]
  424ed3:	inc    esp
  424ed4:	mov    ebx,0xcf1182db
  424ed9:	and    bl,BYTE PTR [edi+0x4b48c1c1]
  424edf:	sbb    BYTE PTR cs:[esi-0x3c],ch
  424ee3:	mov    ch,0xd0
  424ee5:	jecxz  0x424f3b
  424ee7:	mov    ebp,0xa2dbad6e
  424eec:	or     bh,BYTE PTR [esi-0x5c]
  424eef:	adc    eax,0xdc9c2c0f
  424ef4:	popa   
  424ef5:	jle    0x424f3b
  424ef7:	outs   dx,DWORD PTR ds:[esi]
  424ef8:	bound  edx,QWORD PTR [ecx-0x3b]
  424efb:	pop    ebx
  424efc:	ror    BYTE PTR [edi+0x5816d65d],cl
  424f02:	je     0x424f01
  424f04:	push   cs
  424f05:	not    BYTE PTR [ebx+ecx*2-0x4b]
  424f09:	mov    ebp,0xd6c03608
  424f0e:	sbb    bl,BYTE PTR [edi+0x2e]
  424f11:	inc    eax
  424f12:	dec    ebx
  424f13:	retf   
  424f14:	inc    edi
  424f15:	cmp    bl,BYTE PTR [edi-0x21120d72]
  424f1b:	js     0x424f18
  424f1d:	mov    dl,0x97
  424f1f:	addr16 cld 
  424f21:	daa    
  424f22:	(bad)  
  424f23:	adc    bh,BYTE PTR [ebx-0x7f]
  424f26:	bound  eax,QWORD PTR [ecx+0x26]
  424f29:	xor    al,0x8c
  424f2b:	imul   esi,DWORD PTR [edx],0xffffffd1
  424f2e:	cmp    BYTE PTR [esp+ebp*8],ah
  424f31:	cmp    eax,esp
  424f33:	mov    cl,0xa7
  424f35:	or     DWORD PTR [esi-0x3dae695e],ebx
  424f3b:	sbb    BYTE PTR [edi+ebx*8-0x4],dl
  424f3f:	and    bl,BYTE PTR [ecx+ebp*2-0x14]
  424f43:	push   cs
  424f44:	sub    ebp,0xffffffe4
  424f47:	sub    eax,0x2b44e1ac
  424f4c:	xchg   edi,eax
  424f4d:	push   ds
  424f4e:	xor    bh,0xf9
  424f51:	add    ecx,DWORD PTR [esi+0xe]
  424f54:	test   al,0x73
  424f56:	ja     0x424eed
  424f58:	xchg   ebx,eax
  424f59:	sbb    edi,DWORD PTR [ebp+0x485f48be]
  424f5f:	(bad)  [ecx-0x4885f831]
  424f65:	repz ds loop 0x424ef2
  424f69:	ins    DWORD PTR es:[edi],dx
  424f6a:	cmp    al,BYTE PTR ds:0x8c7be786
  424f70:	enter  0x572e,0x6e
  424f74:	(bad)  
  424f75:	mov    esi,0xf0dfcebc
  424f7a:	dec    edx
  424f7b:	or     DWORD PTR [ecx+0x5d],edx
  424f7e:	(bad)  
  424f7f:	mov    dh,0xa8
  424f81:	xchg   edx,eax
  424f82:	arpl   WORD PTR [esi-0x3c09e091],sp
  424f88:	mov    ah,0x4
  424f8a:	mov    edi,0xe89b2e8
  424f8f:	mov    edx,DWORD PTR [eax]
  424f91:	or     eax,0x3374d99e
  424f96:	lea    ebx,[ebx+edx*2]
  424f99:	xchg   BYTE PTR [edi],bl
  424f9b:	push   0xb03fbc46
  424fa0:	mov    cl,0xac
  424fa2:	pushf  
  424fa3:	out    0x44,eax
  424fa5:	mov    ecx,0x80262411
  424faa:	pop    edi
  424fab:	in     al,0xbb
  424fad:	sbb    bl,BYTE PTR [esp+edi*4-0x2]
  424fb1:	fstp   st(2)
  424fb3:	pop    edx
  424fb4:	or     DWORD PTR [ebp+edx*2+0x6da400d2],ebx
  424fbb:	iret   
  424fbc:	push   0x9f037037
  424fc1:	sbb    eax,0x650c88d0
  424fc6:	mov    dh,0xa5
  424fc8:	cmp    BYTE PTR [ecx-0x4dd7e1a5],ch
  424fce:	cmc    
  424fcf:	aaa    
  424fd0:	sub    eax,0xb3483d5f
  424fd5:	pop    ebp
  424fd6:	or     BYTE PTR [ecx],ch
  424fd8:	loop   0x424fa5
  424fda:	cmp    al,0x3d
  424fdc:	data16 jb 0x424f88
  424fdf:	jmp    0x26c8:0xddb34da4
  424fe6:	mov    esp,0x8c086aba
  424feb:	shl    DWORD PTR [esi-0x7c],0x0
	...
  424ffb:	add    BYTE PTR [edx-0x5b61f90],ch
  425001:	fldcw  WORD PTR [ebx-0x35bf70d]
  425007:	loopne 0x425006
  425009:	lahf   
  42500a:	inc    edi
  42500b:	data16 mov bh,al
  42500e:	add    DWORD PTR [eax],eax
  425010:	mov    al,BYTE PTR [edx]
  425012:	add    BYTE PTR [eax],al
  425014:	jmp    0xa51860a3
  425019:	daa    
  42501a:	push   es
  42501b:	sub    DWORD PTR [ebp+0x6b],ebx
  42501e:	lds    ecx,FWORD PTR cs:[ebx+edx*8]
  425022:	fadd   QWORD PTR [ecx]
  425024:	push   0xdd4aa34c
  425029:	mov    ecx,0x85b6a9c
  42502e:	sub    eax,0x14c87757
  425033:	or     edx,DWORD PTR [eax+esi*4+0x217663d0]
  42503a:	arpl   WORD PTR ds:0xadeedabe,sp
  425040:	test   eax,ecx
  425042:	cmp    dh,BYTE PTR [ecx]
  425044:	adc    BYTE PTR [edi],0xf8
  425047:	jbe    0x425008
  425049:	mov    bl,0xd7
  42504b:	adc    ch,BYTE PTR [ecx+0x15]
  42504e:	es jl  0x424ffa
  425051:	in     eax,0xae
  425053:	xor    ebp,DWORD PTR [esi-0x45fb8df2]
  425059:	inc    esp
  42505a:	mov    al,ds:0xad00a79c
  42505f:	xlat   BYTE PTR ds:[ebx]
  425060:	ds jns 0x42506a
  425063:	inc    edx
  425064:	(bad)  [ecx+0x21]
  425067:	jnp    0x424ffc
  425069:	jmp    0x23bc3ec0
  42506e:	add    BYTE PTR [edx],al
  425070:	popa   
  425071:	imul   edx,DWORD PTR [esi+0x54],0xfe26090f
  425078:	int3   
  425079:	fnstsw WORD PTR [eax-0x540b66a8]
  42507f:	aaa    
  425080:	sub    dh,BYTE PTR [edx+0x74]
  425083:	pop    edx
  425084:	jle    0x4250bd
  425086:	dec    eax
  425087:	retf   
  425088:	dec    eax
  425089:	ret    
  42508a:	mov    al,0x39
  42508c:	test   ch,ch
  42508e:	call   0x5f9b:0xfc0f0732
  425095:	add    ah,BYTE PTR [edx]
  425097:	fs sahf 
  425099:	imul   ecx,DWORD PTR [edx+esi*8-0x4b2bb569],0x77fc26b0
  4250a4:	(bad)  
  4250a5:	mov    ch,0x45
  4250a7:	and    ebx,ecx
  4250a9:	sbb    edx,DWORD PTR [ecx-0x809704a]
  4250af:	pop    edi
  4250b0:	outs   dx,DWORD PTR ds:[esi]
  4250b1:	cmp    ecx,eax
  4250b3:	xor    DWORD PTR [ecx+0x7ea40457],ecx
  4250b9:	jno    0x425108
  4250bb:	push   edi
  4250bc:	xor    DWORD PTR [ebx],edx
  4250be:	cmc    
  4250bf:	fmul   DWORD PTR [eax-0x25f3c8b9]
  4250c5:	stos   BYTE PTR es:[edi],al
  4250c6:	leave  
  4250c7:	(bad)  
  4250c8:	std    
  4250c9:	test   DWORD PTR [eax-0x63aff532],ebp
  4250cf:	ja     0x42509d
  4250d1:	loope  0x4250db
  4250d3:	mov    ah,0xc7
  4250d5:	das    
  4250d6:	jp     0x4250a7
  4250d8:	push   eax
  4250d9:	je     0x4250d6
  4250db:	mov    dh,0xf
  4250dd:	in     eax,dx
  4250de:	repz pop esp
  4250e0:	inc    ebp
  4250e1:	jns    0x425134
  4250e3:	cmp    DWORD PTR [ebp+0x6a],0x35058032
  4250ea:	pop    eax
  4250eb:	inc    edx
  4250ec:	adc    eax,0x29da6b3c
  4250f1:	std    
  4250f2:	pop    ebx
  4250f3:	rcr    esi,0xfe
  4250f6:	es mov esi,esi
  4250f9:	pop    esi
  4250fa:	js     0x425129
  4250fc:	popa   
  4250fd:	sbb    ch,dh
  4250ff:	sub    eax,0xdbf301b1
  425104:	mov    edi,0xfe19910
  425109:	xchg   ebx,eax
  42510a:	ins    BYTE PTR es:[edi],dx
  42510b:	add    BYTE PTR [edx+0x14],0x7d
  42510f:	cmp    eax,0xa87e9e3d
  425114:	in     al,0xd7
  425116:	mov    al,ds:0x396501f4
  42511b:	push   esp
  42511c:	sahf   
  42511d:	mov    esi,ebp
  42511f:	arpl   bx,si
  425121:	dec    DWORD PTR [edi+0x40cfc1d7]
  425127:	fs mov dl,0xb1
  42512b:	fstp   DWORD PTR [edx]
  42512d:	mov    BYTE PTR [edi+0x5a],cl
  425130:	in     al,0x31
  425132:	xchg   edi,eax
  425133:	out    0xf8,eax
  425135:	add    al,ah
  425137:	mov    DWORD PTR [esi-0x72],ebp
  42513a:	inc    esp
  42513b:	cli    
  42513c:	inc    DWORD PTR [edi-0x59]
  42513f:	pop    eax
  425140:	jae    0x42516e
  425142:	mov    esp,0x2738d4f
  425147:	fiadd  DWORD PTR [eax+0x436ad3ee]
  42514d:	dec    ebx
  42514f:	leave  
  425150:	jg     0x4251a3
  425152:	imul   ebp,DWORD PTR [esi+0x58],0x1d2f3fdd
  425159:	dec    eax
  42515a:	rcr    BYTE PTR [eax+ebx*2-0x304c9fc3],cl
  425161:	test   DWORD PTR [esp+ebp*2+0x2e],0xbe6e6df0
  425169:	jbe    0x425146
  42516b:	imul   esi,DWORD PTR [ecx],0x7d
  42516e:	pusha  
  42516f:	xlat   BYTE PTR ds:[ebx]
  425170:	add    ch,BYTE PTR [esi]
  425172:	jg     0x425197
  425174:	ficom  WORD PTR gs:[ecx-0x6982fcbb]
  42517b:	aas    
  42517c:	test   DWORD PTR [eax-0x49],ebp
  42517f:	push   ebx
  425180:	mov    eax,0x6044b8ee
  425185:	or     eax,0x5ec0cef1
  42518a:	nop
  42518b:	xor    BYTE PTR [ebx],bl
  42518d:	ins    BYTE PTR es:[edi],dx
  42518e:	jb     0x42520c
  425190:	sbb    al,0x18
  425192:	call   0x84f5:0x8945c2e9
  425199:	xlat   BYTE PTR ds:[ebx]
  42519a:	inc    BYTE PTR [esi+0x49]
  42519d:	dec    ebx
  42519e:	jno    0x4251d5
  4251a0:	test   al,0xed
  4251a2:	jbe    0x425208
  4251a4:	fdivr  st,st(4)
  4251a6:	sub    al,0x15
  4251a8:	dec    ebp
  4251a9:	dec    eax
  4251aa:	and    dh,BYTE PTR [ecx+0x0]
  4251ad:	or     DWORD PTR [edx],esi
  4251af:	sub    edx,edx
  4251b1:	and    BYTE PTR [ecx],dh
  4251b3:	in     eax,dx
  4251b4:	pop    ds
  4251b5:	mov    eax,ds:0xb46c8f37
  4251ba:	stos   DWORD PTR es:[edi],eax
  4251bb:	out    0xfd,al
  4251bd:	inc    ebx
  4251be:	bound  ebp,QWORD PTR [eax+0x10]
  4251c1:	jmp    0xbe57e12e
  4251c6:	or     al,0x70
  4251c8:	fadd   st,st(4)
  4251ca:	jo     0x425246
  4251cc:	jo     0x4251b2
  4251ce:	dec    BYTE PTR [ecx+edx*2+0xe]
  4251d2:	xor    al,0xb1
  4251d4:	push   0xa66fcdf1
  4251d9:	mov    edx,0x8f8ecd9f
  4251de:	pop    edi
  4251df:	rcr    BYTE PTR [ebx+0x25aecb65],0xa3
  4251e6:	sub    DWORD PTR [edi+0x5],ebx
  4251e9:	adc    al,0x76
  4251eb:	imul   esp,DWORD PTR [ecx-0x144418b],0xd72cfb3f
  4251f5:	mov    esi,0x8633a865
  4251fa:	(bad)  
  4251fb:	sub    DWORD PTR [eax],ebp
  4251fd:	arpl   WORD PTR [esi+0x74],si
  425200:	jg     0x42524f
  425202:	mov    bh,BYTE PTR ds:0x410431b
  425208:	mov    ebx,0x899ff5f8
  42520d:	lods   al,BYTE PTR ds:[esi]
  42520e:	inc    edi
  42520f:	xchg   bh,ch
  425211:	inc    esp
  425212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425213:	test   DWORD PTR [edi],ecx
  425215:	jmp    0x425261
  425217:	add    al,cl
  425219:	xlat   BYTE PTR ds:[ebx]
  42521a:	xor    dh,al
  42521c:	das    
  42521d:	inc    edi
  42521e:	and    eax,esi
  425220:	and    eax,0x67070005
  425225:	call   0x1fa4:0x532ce423
  42522c:	jecxz  0x4251b5
  42522e:	adc    al,BYTE PTR [edi+0x10]
  425231:	(bad)  
  425232:	cmp    ebp,esi
  425234:	int3   
  425235:	fisubr WORD PTR [edx-0x70]
  425238:	sbb    ebp,DWORD PTR [eax-0xda2ad5f]
  42523e:	inc    ebp
  42523f:	aam    0xaf
  425241:	(bad)  
  425242:	dec    edi
  425243:	adc    ebx,DWORD PTR ds:0xa4300bd9
  425249:	mov    DWORD PTR [edi+0x74],ebp
  42524c:	test   DWORD PTR [eax],esi
  42524e:	call   0x5096:0x289b5f2e
  425255:	hlt    
  425256:	inc    ecx
  425257:	xchg   DWORD PTR [edx],ebp
  425259:	push   edi
  42525a:	xchg   esp,eax
  42525b:	aas    
  42525c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42525d:	call   0xc3ba:0xce5abca0
  425264:	inc    esi
  425265:	outs   dx,BYTE PTR ds:[esi]
  425266:	jo     0x4251f6
  425268:	gs inc esp
  42526a:	inc    edx
  42526c:	neg    cl
  42526e:	dec    ebx
  42526f:	add    DWORD PTR [ecx+0x483597ad],edi
  425275:	pcmpgtw mm1,QWORD PTR [esi-0x57e08083]
  42527c:	inc    edx
  42527d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42527e:	pop    esi
  42527f:	xchg   esi,eax
  425280:	or     dh,BYTE PTR [ebp-0xa06e3fa]
  425286:	mov    eax,0xc9a1ba7b
  42528b:	imul   ebp,DWORD PTR [ebx+eax*2+0x1a],0x12e63be3
  425293:	mov    ds:0x4e5ff272,eax
  425298:	dec    ebp
  425299:	int3   
  42529a:	rcl    DWORD PTR [ecx],1
  42529c:	add    eax,0xae
	...
  4252a9:	add    BYTE PTR [eax],al
  4252ab:	add    BYTE PTR [edx-0x79],cl
  4252ae:	push   edx
  4252af:	dec    esp
  4252b0:	(bad)  
  4252b2:	pop    esi
  4252b3:	xchg   eax,esp
  4252b5:	js     0x425238
  4252b7:	mov    ebx,0xf2a8f592
  4252bc:	adc    cl,dl
  4252be:	add    DWORD PTR [eax],eax
  4252c0:	mov    al,BYTE PTR [edx]
  4252c2:	add    BYTE PTR [eax],al
  4252c4:	in     al,0x91
  4252c6:	jp     0x425329
  4252c8:	adc    al,0x45
  4252ca:	sub    WORD PTR [eax+eax*1+0x24],0x2d
  4252d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4252d1:	inc    edi
  4252d2:	cmp    BYTE PTR [ebx+0x50],ah
  4252d5:	ds adc esi,esp
  4252d8:	add    DWORD PTR [ecx],0xffffffa3
  4252db:	mov    bp,WORD PTR [eax+ecx*2-0xb]
  4252e0:	mov    edx,0xa1273807
  4252e5:	pusha  
  4252e6:	cmp    al,0x82
  4252e8:	fdivr  QWORD PTR [edx-0x1]
  4252eb:	out    0xaf,al
  4252ed:	js     0x425368
  4252ef:	add    al,0xa9
  4252f1:	data16 (bad) 
  4252f3:	adc    eax,DWORD PTR [ebp+0x65]
  4252f6:	adc    BYTE PTR [edx],bl
  4252f8:	or     BYTE PTR [eax],0xe8
  4252fb:	pop    edx
  4252fc:	push   ecx
  4252fd:	in     al,dx
  4252fe:	sbb    ah,0xf6
  425301:	xor    DWORD PTR [edi],ecx
  425303:	js     0x4252b0
  425305:	push   edx
  425306:	icebp  
  425307:	dec    edx
  425308:	fnstenv [ebx]
  42530a:	sub    ebp,esi
  42530c:	mov    ds:0x4dc0bde6,al
  425311:	out    0xb5,al
  425313:	push   ds
  425314:	retf   0xeaf9
  425317:	and    esp,ecx
  425319:	add    al,0xd6
  42531b:	inc    ecx
  42531c:	fisubr DWORD PTR [edi]
  42531e:	rol    bl,cl
  425320:	xchg   ebx,eax
  425321:	sbb    esp,DWORD PTR [edi-0x24]
  425324:	mov    bl,dl
  425326:	xchg   ecx,eax
  425327:	lea    esp,[ebp*2+0x181a448b]
  42532e:	aaa    
  42532f:	push   edi
  425330:	pop    ecx
  425331:	(bad)  
  425332:	cmp    al,0xcb
  425334:	test   DWORD PTR [eax-0x67],ebp
  425337:	sub    bl,BYTE PTR [ebp-0x80]
  42533a:	fwait
  42533b:	std    
  42533c:	pop    ecx
  42533d:	mov    ah,0x9d
  42533f:	pop    esi
  425340:	add    edx,edx
  425342:	inc    ecx
  425343:	stos   BYTE PTR es:[edi],al
  425344:	dec    eax
  425345:	icebp  
  425346:	xor    al,BYTE PTR [esi-0x10a0cf33]
  42534c:	adc    DWORD PTR [ebx+0x3d],edx
  42534f:	adc    ebx,DWORD PTR [ecx-0x7b]
  425352:	xor    cl,dh
  425354:	jne    0x4253ae
  425356:	aam    0xff
  425358:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425359:	mov    ah,0x8e
  42535b:	in     eax,dx
  42535c:	imul   ecx,DWORD PTR ds:0x6b6d9f8b,0x3e
  425363:	(bad)  
  425364:	fcom   st(4)
  425366:	xor    bh,BYTE PTR [edx]
  425368:	push   esp
  425369:	rcl    DWORD PTR [eax-0x89b8ca9],cl
  42536f:	mov    al,0x7
  425371:	jp     0x425332
  425373:	data16 stos BYTE PTR es:[edi],al
  425375:	sbb    esi,esp
  425377:	jg     0x4253d2
  425379:	les    ebp,FWORD PTR [ebx]
  42537b:	das    
  42537c:	jmp    0x425399
  42537e:	pop    ebx
  42537f:	(bad)  
  425382:	mov    al,0x41
  425384:	data16 test al,0x83
  425387:	push   0xffffffa9
  425389:	repz lds esi,FWORD PTR [edi]
  42538c:	push   edx
  42538d:	repz jecxz 0x425329
  425390:	mov    ebp,0xf510d0d8
  425395:	mov    bl,0x3d
  425397:	jo     0x425360
  425399:	pushf  
  42539a:	jb     0x425414
  42539c:	or     al,BYTE PTR [edi]
  42539e:	mov    dl,0x15
  4253a0:	rcl    BYTE PTR [ebx],0x5a
  4253a3:	cld    
  4253a4:	add    BYTE PTR [ecx-0x60],al
  4253a7:	xchg   ebx,eax
  4253a8:	sbb    eax,0x6bb9cc66
  4253ad:	rol    ebx,0x8e
  4253b0:	sbb    al,0x11
  4253b2:	dec    eax
  4253b3:	data16 add BYTE PTR [ebp-0x1b],0x4b
  4253b8:	hlt    
  4253b9:	adc    bl,BYTE PTR [ecx+0x3994f668]
  4253bf:	adc    al,0x2c
  4253c1:	pop    ebx
  4253c2:	fld    DWORD PTR [esi]
  4253c4:	(bad)  
  4253c5:	aas    
  4253c6:	int3   
  4253c7:	mov    esi,DWORD PTR [ebp-0x3c41694c]
  4253cd:	mov    dl,al
  4253cf:	aaa    
  4253d0:	or     dl,ah
  4253d2:	fidiv  DWORD PTR [edi]
  4253d4:	push   esi
  4253d5:	and    ebp,DWORD PTR [eax]
  4253d7:	pop    eax
  4253d8:	ja     0x4253d8
  4253da:	fld    QWORD PTR [eax]
  4253dc:	test   ch,bh
  4253de:	mov    esi,DWORD PTR [ebx+0x2]
  4253e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253e3:	add    al,dl
  4253e5:	inc    ebp
  4253e6:	and    BYTE PTR ds:0xfe28222a,ah
  4253ec:	sub    ah,BYTE PTR [esi+ebp*4]
  4253ef:	pop    ebp
  4253f0:	data16 (bad) [ebx-0x7733a990]
  4253f7:	test   eax,0x229238a2
  4253fc:	fwait
  4253fd:	sbb    al,0xe7
  4253ff:	ficom  WORD PTR [eax]
  425401:	ret    
  425402:	jmp    0x7c02:0x9d3b22b1
  425409:	sbb    ebx,DWORD PTR [eax+ecx*8+0xa52e217]
  425410:	outs   dx,DWORD PTR ds:[esi]
  425411:	cs leave 
  425413:	push   eax
  425414:	mov    dh,0x18
  425416:	aad    0xe
  425418:	cmp    BYTE PTR [edx],0xee
  42541b:	repz mov fs,esi
  42541e:	ret    
  42541f:	aam    0xfc
  425421:	std    
  425422:	loop   0x42548b
  425424:	frstor [esi+edi*2]
  425427:	sub    DWORD PTR [ecx-0xcf340e5],ebp
  42542d:	call   0x6bfc3644
  425432:	mov    ebx,0x3bdf18b3
  425437:	mov    dl,0x79
  425439:	push   ebx
  42543a:	jg     0x425423
  42543c:	(bad)  
  42543d:	pop    ecx
  42543e:	jp     0x4253f0
  425440:	or     eax,0xe4064a6f
  425445:	mov    ecx,0x3e930f1d
  42544a:	ja     0x425404
  42544c:	add    ecx,DWORD PTR [edx+0x5b93f5f2]
  425452:	loopne 0x425495
  425454:	fnstcw WORD PTR [edx-0x3c1e9368]
  42545a:	cli    
  42545b:	pop    esi
  42545d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42545e:	and    eax,0x1c65e2b7
  425463:	dec    ebp
  425464:	push   edx
  425465:	ins    BYTE PTR es:[edi],dx
  425466:	lahf   
  425467:	push   esi
  425468:	and    ah,dl
  42546a:	mov    eax,ds:0xf520ade4
  42546f:	fsub   QWORD PTR gs:[ecx+0x4e81cfa5]
  425476:	xchg   esi,eax
  425477:	and    cl,BYTE PTR [ebp-0x5f]
  42547a:	les    ecx,FWORD PTR [edx+0x61581a49]
  425480:	(bad)  
  425481:	fist   DWORD PTR [eax]
  425483:	out    dx,al
  425484:	fldenv [esi+0x66c49dd]
  42548a:	xor    DWORD PTR [ebx-0x2f],edi
  42548d:	pop    es
  42548e:	pop    eax
  42548f:	rcr    ecx,1
  425491:	xchg   edi,eax
  425492:	inc    ebp
  425493:	mov    dl,0x61
  425495:	je     0x425463
  425497:	sbb    eax,0xeb430626
  42549c:	xchg   BYTE PTR [ebp-0x3],bl
  42549f:	je     0x4254f1
  4254a1:	push   edx
  4254a2:	mov    eax,0xa0afdd30
  4254a7:	mov    ecx,0x74949c2
  4254ac:	add    BYTE PTR [eax+0x3],ah
  4254af:	rcr    dl,1
  4254b1:	hlt    
  4254b2:	inc    esp
  4254b3:	xor    BYTE PTR [esi+eiz*8],dl
  4254b6:	arpl   WORD PTR [edi-0x4b],bx
  4254b9:	adc    DWORD PTR [ecx+0x32],eax
  4254bc:	imul   esp,esi,0x51
  4254bf:	mov    dl,0xb3
  4254c1:	push   cs
  4254c2:	clc    
  4254c3:	jmp    0x2cbb7900
  4254c8:	dec    esi
  4254c9:	js     0x425548
  4254cb:	ins    BYTE PTR es:[edi],dx
  4254cc:	fstp   TBYTE PTR [ebx+0x606ba821]
  4254d2:	or     ch,BYTE PTR [edi]
  4254d4:	in     al,0x14
  4254d6:	and    al,0xfe
  4254d8:	(bad)  [ebx-0x14]
  4254db:	dec    edi
  4254dc:	mov    esp,DWORD PTR [eax]
  4254de:	cmc    
  4254df:	push   ecx
  4254e0:	(bad)  
  4254e1:	jo     0x4254a9
  4254e3:	stos   BYTE PTR es:[edi],al
  4254e4:	push   edx
  4254e5:	mov    edi,0x7529ffd3
  4254ea:	(bad)  
  4254eb:	dec    ebx
  4254ec:	neg    DWORD PTR [edi+0x5a]
  4254ef:	fist   WORD PTR [ebx+0x51b99100]
  4254f5:	jp     0x425573
  4254f7:	popa   
  4254f8:	xor    DWORD PTR [ebx+0x44],esi
  4254fb:	mov    bl,0x1
  4254fd:	repz js 0x42554c
  425500:	sbb    DWORD PTR [edi-0x17c740a5],esp
  425506:	xchg   edx,eax
  425507:	inc    esi
  425508:	enter  0x7b5a,0xf1
  42550c:	xchg   ebp,eax
  42550d:	adc    BYTE PTR [eax+0x410bc07f],bh
  425513:	sub    esi,ebx
  425515:	add    DWORD PTR [ecx],ebp
  425517:	mov    dl,0x51
  425519:	and    esi,DWORD PTR [ebp-0x2d78176b]
  42551f:	loope  0x425579
  425521:	enterw 0xdb05,0x79
  425526:	xor    al,0x7
  425528:	fnstsw WORD PTR [eax+0x2e]
  42552b:	in     eax,dx
  42552c:	sub    al,0x42
  42552e:	aas    
  42552f:	stc    
  425530:	stc    
  425531:	fs pop esi
  425533:	int    0x7a
  425535:	sahf   
  425536:	mov    eax,0x4e217d66
  42553b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42553c:	xchg   cl,cl
  42553e:	mov    eax,0x6b9a612d
  425543:	or     DWORD PTR [edi],ecx
  425545:	pop    es
  425546:	mov    ds:0x8a0842c1,eax
  42554b:	retf   0xae39
	...
  42555a:	add    BYTE PTR [eax],al
  42555c:	or     dl,BYTE PTR [edx-0x3c684]
  425562:	dec    edi
  425563:	mov    bl,0xec
  425565:	jo     0x42551e
  425567:	lea    edi,ds:0x9c600dff
  42556d:	int3   
  42556e:	add    DWORD PTR [eax],eax
  425570:	mov    al,BYTE PTR [edx]
  425572:	add    BYTE PTR [eax],al
  425574:	sub    dl,0x9d
  425577:	imul   esi,DWORD PTR ss:[edi],0x8
  42557b:	out    dx,eax
  42557c:	mov    esp,0xa14b6e03
  425581:	ror    DWORD PTR [esp+eiz*8],0x88
  425585:	in     eax,dx
  425586:	cmp    BYTE PTR [ebp-0x33],dl
  425589:	cld    
  42558a:	pop    ss
  42558b:	xor    al,bl
  42558d:	nop
  42558e:	push   0xfa450a62
  425593:	rol    dl,1
  425595:	in     eax,dx
  425596:	jns    0x42554d
  425598:	xor    al,0x12
  42559a:	jbe    0x4255e1
  42559c:	mov    edx,0x8e68dd1d
  4255a1:	xchg   ecx,eax
  4255a2:	cwde   
  4255a3:	jne    0x4255b2
  4255a5:	xchg   ecx,eax
  4255a6:	pop    eax
  4255a7:	mov    ebp,esp
  4255a9:	adc    esp,edi
  4255ab:	xor    ah,BYTE PTR [edx-0x7c]
  4255ae:	push   eax
  4255af:	lock add bl,BYTE PTR [edi+0x535cdc26]
  4255b6:	ror    ebp,cl
  4255b8:	fidiv  WORD PTR [eax+ebx*8-0xb]
  4255bc:	push   DWORD PTR [edi]
  4255be:	addr16 pop eax
  4255c0:	sti    
  4255c1:	ja     0x42556a
  4255c3:	rol    BYTE PTR [ecx+0x353a6b58],cl
  4255c9:	retf   
  4255ca:	or     al,bh
  4255cc:	arpl   WORD PTR [edi+edx*1+0x681f711c],cx
  4255d3:	das    
  4255d4:	xchg   DWORD PTR [esi],ecx
  4255d6:	jl     0x425584
  4255d8:	in     eax,0x43
  4255da:	add    DWORD PTR [edx+0x289f76ce],edi
  4255e0:	xchg   esi,eax
  4255e1:	imul   esp,DWORD PTR [edi+0x12ff4cb7],0xffffffea
  4255e8:	pusha  
  4255e9:	sar    edx,1
  4255eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4255ec:	fsubr  DWORD PTR [edi]
  4255ee:	add    al,0x2c
  4255f0:	fistp  WORD PTR ds:0xd26a6c9c
  4255f6:	stos   DWORD PTR es:[edi],eax
  4255f7:	mov    ds,WORD PTR [edi+0x5ceb65dd]
  4255fd:	pop    eax
  4255fe:	es inc esp
  425600:	lahf   
  425601:	ins    BYTE PTR es:[edi],dx
  425602:	into   
  425603:	xchg   DWORD PTR [edx+esi*4+0x16],edi
  425607:	cs es fcmove st,st(1)
  42560b:	and    al,bh
  42560d:	or     DWORD PTR [esp+eiz*2+0x59bfb751],esi
  425614:	clc    
  425615:	enter  0x6242,0xfa
  425619:	pushf  
  42561a:	(bad)  
  42561b:	loope  0x425634
  42561d:	out    dx,eax
  42561e:	pop    esi
  42561f:	(bad)  
  425620:	shl    DWORD PTR [eax],0x53
  425623:	loopne 0x42565f
  425625:	adc    BYTE PTR [edx+0x4a],bh
  425628:	add    eax,0x3eedba30
  42562d:	mov    ch,0xa4
  42562f:	adc    BYTE PTR [edi-0x34c47d00],0x8e
  425636:	arpl   WORD PTR [esi],sp
  425638:	fucom  st(0)
  42563a:	rol    BYTE PTR [ebp+0x20d51bb8],cl
  425640:	jp     0x4255e3
  425642:	test   al,0x5e
  425644:	stos   DWORD PTR es:[edi],eax
  425645:	xchg   esp,eax
  425646:	pusha  
  425647:	loope  0x42566a
  425649:	xor    ebx,0xffffffc3
  42564c:	ret    
  42564d:	imul   BYTE PTR [eax]
  42564f:	and    eax,0x62df3549
  425654:	adc    eax,0x12d956f9
  425659:	iret   
  42565a:	mov    ebp,DWORD PTR [eax+edi*2]
  42565d:	int3   
  42565e:	jg     0x425697
  425660:	cdq    
  425661:	stos   BYTE PTR es:[edi],al
  425662:	mov    WORD PTR [ecx+0x47],gs
  425665:	rsm    
  425667:	pop    ds
  425668:	(bad)  
  42566a:	std    
  42566b:	retf   0x3de8
  42566e:	iret   
  42566f:	or     edx,DWORD PTR [eax]
  425671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425672:	inc    ebp
  425673:	outs   dx,BYTE PTR ds:[esi]
  425674:	imul   edx,DWORD PTR [esp+ebp*4],0x88d51a55
  42567b:	sub    dh,BYTE PTR [edx]
  42567d:	sub    esp,esp
  42567f:	add    eax,0xfde40fd4
  425684:	(bad)  
  425685:	adc    DWORD PTR [esp+ebp*1],ebp
  425688:	(bad)  
  425689:	sbb    ah,BYTE PTR ds:0xc12d8c8b
  42568f:	inc    esp
  425690:	dec    edi
  425691:	mov    esi,0x366743c2
  425696:	cmp    DWORD PTR [ebp-0x59],edi
  425699:	jp     0x425700
  42569b:	std    
  42569c:	pop    ecx
  42569d:	inc    esp
  42569e:	adc    bl,dh
  4256a0:	adc    edx,DWORD PTR [eax]
  4256a2:	cmp    al,0xdb
  4256a4:	add    eax,edi
  4256a6:	adc    eax,0x859e60d0
  4256ab:	shl    BYTE PTR [ecx+0x37326413],cl
  4256b1:	adc    DWORD PTR [edi],ebp
  4256b3:	jmp    0x30e1cf1c
  4256b8:	or     BYTE PTR [eax+0x7b],dh
  4256bb:	inc    esi
  4256bc:	pop    ebx
  4256bd:	jp     0x42566d
  4256bf:	(bad)  
  4256c0:	mov    ch,0x5a
  4256c2:	xor    edx,edx
  4256c4:	ss lock dec edi
  4256c7:	fstp   QWORD PTR [ebx]
  4256c9:	xor    esi,ebp
  4256cb:	popf   
  4256cc:	test   al,0xa9
  4256ce:	push   cs
  4256cf:	pop    ss
  4256d0:	fidivr WORD PTR [ebx-0x76]
  4256d3:	lahf   
  4256d4:	aas    
  4256d5:	test   al,0xf5
  4256d7:	stc    
  4256d8:	mov    edx,DWORD PTR [edx+0x57baa790]
  4256de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256df:	pop    ecx
  4256e1:	fimul  WORD PTR [esi+0x516b5c87]
  4256e7:	fidiv  WORD PTR [ebx+0x37f12923]
  4256ed:	cmp    eax,0x9679fed1
  4256f2:	mul    BYTE PTR [eax+0x73f23a50]
  4256f8:	xor    eax,0x9ab75281
  4256fd:	addr16 mov eax,0x3b5f724a
  425703:	push   ds
  425704:	adc    DWORD PTR [eax+0x20],esi
  425707:	clc    
  425708:	and    al,0x9c
  42570a:	popa   
  42570b:	imul   ebp,DWORD PTR [edx],0xf8f8fa16
  425711:	cli    
  425712:	lods   al,BYTE PTR ds:[esi]
  425713:	std    
  425714:	sbb    eax,0x5b55a901
  425719:	out    0xc7,al
  42571b:	(bad)  
  42571c:	xchg   edx,eax
  42571d:	dec    eax
  42571e:	std    
  42571f:	jo     0x425763
  425721:	xchg   edx,eax
  425722:	int3   
  425723:	cmp    eax,DWORD PTR [esi-0x6616954a]
  425729:	jne    0x42575e
  42572b:	loope  0x425733
  42572d:	xchg   edx,eax
  42572e:	inc    esi
  42572f:	jbe    0x425718
  425731:	push   es
  425732:	xchg   esp,eax
  425733:	jle    0x4257b1
  425735:	jle    0x42571a
  425737:	adc    edx,DWORD PTR [edi+ebx*8-0x78edcbcb]
  42573e:	js     0x4256df
  425740:	pop    ebx
  425741:	or     DWORD PTR [ecx+0x2f48911f],eax
  425747:	jle    0x4257a1
  425749:	mov    DWORD PTR [esi-0x58],edx
  42574c:	fwait
  42574d:	dec    eax
  42574e:	arpl   WORD PTR [edi-0x5a],dx
  425751:	icebp  
  425752:	outs   dx,DWORD PTR ds:[esi]
  425753:	push   cs
  425754:	rcr    ah,1
  425756:	mov    dh,0x6c
  425758:	inc    esi
  425759:	test   al,0x3d
  42575b:	fbstp  TBYTE PTR [edx+0x50543e3]
  425761:	pop    es
  425762:	enter  0xaa65,0xe7
  425766:	into   
  425767:	push   eax
  425768:	out    0xf0,al
  42576a:	aam    0x49
  42576c:	pop    edx
  42576d:	and    BYTE PTR [edx+0x69f06fe3],dl
  425773:	sti    
  425774:	sbb    esp,DWORD PTR [edi+0x6887d977]
  42577a:	cwde   
  42577b:	pop    edx
  42577c:	adc    DWORD PTR [edx-0x77],edx
  42577f:	cmp    BYTE PTR [edx],dh
  425781:	push   esp
  425782:	loope  0x4257c3
  425784:	add    eax,0xf53b5024
  425789:	sub    al,dh
  42578b:	dec    ecx
  42578c:	shl    bh,cl
  42578e:	dec    esi
  42578f:	imul   ebp,ecx,0xffffff80
  425792:	adc    al,0xf3
  425794:	lods   al,BYTE PTR ds:[esi]
  425795:	cmp    eax,0x5d64c151
  42579a:	sbb    edx,DWORD PTR [ecx]
  42579c:	out    dx,eax
  42579d:	mov    ah,0xa8
  42579f:	enter  0x6e7c,0x7a
  4257a3:	jl     0x42575c
  4257a5:	jmp    0xd352:0x26eeb218
  4257ac:	cld    
  4257ad:	lahf   
  4257ae:	jge    0x4257f4
  4257b0:	and    cl,dl
  4257b2:	mov    bh,0x97
  4257b4:	xlat   BYTE PTR ds:[ebx]
  4257b5:	sub    DWORD PTR [eax],0xffffffd9
  4257b8:	add    ah,bh
  4257ba:	add    eax,0x9dcef14d
  4257bf:	jmp    0x293f376e
  4257c4:	mov    eax,ds:0xc122b264
  4257c9:	adc    al,0x50
  4257cb:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4257cd:	adc    DWORD PTR [edx+0x13686838],ebp
  4257d3:	sbb    DWORD PTR [ebx+0x1c],eax
  4257d6:	pop    ebx
  4257d7:	inc    ebx
  4257d8:	cmp    ch,BYTE PTR [esi+0x36b18658]
  4257de:	es retf 
  4257e0:	jle    0x425770
  4257e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257e3:	inc    edx
  4257e4:	adc    DWORD PTR [esi],0xffffffb4
  4257e7:	ret    0x7c98
  4257ea:	mov    cl,BYTE PTR [ebx]
  4257ec:	jg     0x425839
  4257ee:	jle    0x425833
  4257f0:	mov    cl,BYTE PTR [edi-0x78]
  4257f3:	and    ebx,ecx
  4257f5:	stos   BYTE PTR es:[edi],al
  4257f6:	clc    
  4257f7:	mov    ds:0xd0a2d616,eax
  4257fc:	mov    ch,0x9d
	...
  42580a:	add    BYTE PTR [eax],al
  42580c:	ret    
  42580d:	and    ecx,edx
  42580f:	dec    eax
  425810:	repz clc 
  425812:	fld    TBYTE PTR [ebx+0x202892a0]
  425818:	popa   
  425819:	cmp    dl,BYTE PTR [ebx+0x1cf26c6]
  42581f:	add    BYTE PTR [edx+0x76000002],cl
  425825:	inc    esp
  425826:	bound  esp,QWORD PTR [esi-0x6f]
  425829:	xchg   DWORD PTR [edx-0x99d286f],ebx
  42582f:	cdq    
  425830:	int    0x3b
  425832:	cmp    ch,BYTE PTR [ecx]
  425834:	shl    al,0x1
  425837:	fwait
  425838:	nop
  425839:	pop    ecx
  42583a:	mov    ecx,0xf247f2a9
  42583f:	call   0xf864d814
  425844:	int    0x10
  425846:	jge    0x425800
  425848:	mov    eax,0x18084bf4
  42584d:	or     bl,BYTE PTR [ecx-0x7c]
  425850:	sub    al,0x5c
  425852:	mov    ecx,0xfbb09f44
  425857:	inc    eax
  425858:	pushf  
  425859:	cwde   
  42585a:	mov    eax,0x457dc1b2
  42585f:	gs popf 
  425861:	js     0x425880
  425863:	xchg   edi,eax
  425864:	outs   dx,DWORD PTR ds:[esi]
  425865:	jmp    0x911b:0x80f4a741
  42586c:	xor    bh,BYTE PTR [eax+0x61]
  42586f:	jl     0x4258b4
  425871:	cs mov cl,0x45
  425874:	loop   0x42585e
  425876:	dec    edi
  425877:	dec    edi
  425878:	in     al,dx
  425879:	rcl    BYTE PTR ds:0xe9b9ae4f,1
  42587f:	sbb    ecx,DWORD PTR [ecx]
  425881:	imul   esi,esi,0x47905558
  425887:	mov    ah,0x9f
  425889:	pop    esi
  42588a:	cli    
  42588b:	sub    eax,eax
  42588d:	inc    edi
  42588e:	ins    BYTE PTR es:[edi],dx
  42588f:	sub    edx,DWORD PTR [edx+edx*2]
  425892:	les    edx,FWORD PTR [edx+0x34]
  425895:	das    
  425896:	or     bl,BYTE PTR [ebp-0xb]
  425899:	call   0x81df:0x8ba35398
  4258a0:	xchg   ebx,eax
  4258a1:	sub    BYTE PTR [edx+eax*4+0x39cf0fb],al
  4258a8:	retf   0xe469
  4258ab:	call   0xcf74e4fc
  4258b0:	out    dx,eax
  4258b1:	sbb    DWORD PTR [esp+esi*4],0x73
  4258b5:	std    
  4258b6:	inc    esi
  4258b7:	adc    ebx,DWORD PTR [ecx]
  4258b9:	stos   BYTE PTR es:[edi],al
  4258ba:	dec    esi
  4258bb:	shl    BYTE PTR [ebx+eax*1-0x1],1
  4258bf:	outs   dx,DWORD PTR ds:[esi]
  4258c0:	and    al,0xa0
  4258c2:	shl    ah,1
  4258c4:	mov    edx,edi
  4258c6:	arpl   WORD PTR [esp+eax*1+0x32],di
  4258ca:	jecxz  0x4258dd
  4258cc:	ins    BYTE PTR es:[edi],dx
  4258cd:	mov    DWORD PTR [edi],esp
  4258cf:	scas   eax,DWORD PTR es:[edi]
  4258d0:	out    0xcf,al
  4258d2:	test   eax,0x54d7e087
  4258d7:	ins    BYTE PTR es:[edi],dx
  4258d8:	rcr    BYTE PTR [ebp+0x3b],1
  4258db:	loope  0x4258bc
  4258dd:	fadd   QWORD PTR [edi-0x7d]
  4258e0:	test   eax,0x9ca2ccf5
  4258e5:	into   
  4258e6:	xor    cl,BYTE PTR [edi+eax*4]
  4258e9:	push   ds
  4258ea:	add    BYTE PTR [edi+0x76],dh
  4258ed:	frstor [edi]
  4258ef:	ret    0x3765
  4258f2:	sahf   
  4258f3:	mov    DWORD PTR [edx+0x76ae976a],edx
  4258f9:	cdq    
  4258fa:	mov    esp,0x1f37f4fa
  4258ff:	jl     0x4258c9
  425901:	neg    DWORD PTR [edi+edx*2+0x22]
  425905:	cld    
  425906:	fiadd  DWORD PTR ds:0xd34645fa
  42590c:	cmp    al,0xcc
  42590e:	mov    WORD PTR [eiz*4+0x284b42ac],?
  425915:	mov    esp,0x4ad7c769
  42591a:	sub    al,0x1f
  42591c:	sti    
  42591d:	mov    dl,0x3d
  42591f:	inc    edi
  425920:	addr16 dec ecx
  425922:	mov    eax,0x413ba16f
  425927:	mov    al,ds:0xe9eb6db2
  42592c:	inc    ebp
  42592d:	in     al,dx
  42592e:	call   0x4ca9eee9
  425933:	cs ret 
  425935:	in     al,0xc2
  425937:	sub    ah,ch
  425939:	ins    BYTE PTR es:[edi],dx
  42593a:	call   0x558d:0x87913d5f
  425941:	add    bl,BYTE PTR [edx+ebp*1+0x2e4f22d8]
  425948:	inc    edx
  425949:	and    ah,BYTE PTR ds:0x66d83668
  42594f:	or     eax,0x2ac2660d
  425954:	mov    al,ds:0x231660dd
  425959:	jnp    0x4258dd
  42595b:	mov    ch,0xa8
  42595d:	ins    DWORD PTR es:[edi],dx
  42595e:	jge    0x42596d
  425960:	cmp    al,0xb
  425962:	(bad)  
  425963:	mov    dh,0xb1
  425965:	out    dx,eax
  425966:	dec    edx
  425967:	ret    
  425968:	mov    ah,0xf6
  42596a:	xor    eax,0x877e49d9
  42596f:	mov    ah,0xcf
  425971:	sti    
  425972:	adc    DWORD PTR [edx],eax
  425974:	fidiv  DWORD PTR [edi]
  425976:	scas   eax,DWORD PTR es:[edi]
  425977:	sahf   
  425978:	cdq    
  425979:	jle    0xd820cec6
  42597f:	ss mov ebx,eax
  425982:	mov    ch,0xad
  425984:	and    BYTE PTR ds:0x49fb9ac7,al
  42598a:	out    dx,eax
  42598b:	or     esp,esi
  42598d:	sbb    edi,DWORD PTR [ebx+0x690c8022]
  425993:	cdq    
  425994:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425995:	cs inc ebp
  425997:	shl    DWORD PTR [edx-0x3d],cl
  42599a:	or     BYTE PTR [ebx],cl
  42599c:	imul   ecx,ecx,0xe0b9b621
  4259a2:	mul    BYTE PTR [ebx]
  4259a4:	mov    eax,0xbe153ea1
  4259a9:	ret    0x1448
  4259ac:	adc    bl,BYTE PTR [esi]
  4259ae:	cdq    
  4259af:	and    bl,cl
  4259b1:	sub    esi,0x16
  4259b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4259b5:	mov    eax,gs
  4259b7:	cli    
  4259b8:	jecxz  0x42594c
  4259ba:	and    bh,dh
  4259bc:	iret   
  4259bd:	pop    es
  4259be:	dec    esp
  4259bf:	shl    DWORD PTR [esp+ebx*8-0x3e],0xaf
  4259c4:	cdq    
  4259c5:	pop    ebp
  4259c6:	jle    0x4259b6
  4259c8:	sub    eax,0x5ace86b9
  4259cd:	int3   
  4259ce:	xor    DWORD PTR fs:[ebx+0x6bbeac72],ebx
  4259d5:	cli    
  4259d6:	sub    dl,BYTE PTR [eax+0x4]
  4259d9:	rcr    DWORD PTR [eax],0x25
  4259dc:	popa   
  4259dd:	imul   edx,DWORD PTR [edi+0x1d],0xccd91722
  4259e4:	ins    BYTE PTR es:[edi],dx
  4259e5:	daa    
  4259e6:	test   BYTE PTR [ebp-0x260851f],bl
  4259ec:	mov    ah,BYTE PTR [eax]
  4259ee:	dec    ebx
  4259ef:	mov    WORD PTR [ebp+0x64],ss
  4259f2:	push   ebp
  4259f3:	sti    
  4259f4:	push   ecx
  4259f5:	daa    
  4259f6:	inc    eax
  4259f7:	dec    edi
  4259f8:	sbb    bl,BYTE PTR ds:0x4b022052
  4259fe:	ins    DWORD PTR es:[edi],dx
  4259ff:	(bad)
  425a02:	imul   ebp,DWORD PTR [ebp-0x52aabb7b],0x31
  425a09:	test   eax,0xb979eee7
  425a0e:	outs   dx,BYTE PTR ds:[esi]
  425a0f:	xchg   DWORD PTR [edi],esi
  425a11:	iret   
  425a12:	loope  0x425a03
  425a14:	jmp    DWORD PTR [esi+0x7b]
  425a17:	jae    0x4259ce
  425a19:	sbb    dl,dl
  425a1b:	popa   
  425a1c:	out    dx,al
  425a1d:	pop    DWORD PTR [edx+0x6d]
  425a20:	or     cl,BYTE PTR [edi+0x44]
  425a23:	lahf   
  425a24:	shr    BYTE PTR [eax+0x662d3785],1
  425a2a:	repnz repnz rcl BYTE PTR [ebx-0x12],cl
  425a2f:	or     DWORD PTR [ebx+0x50],esi
  425a32:	div    dh
  425a34:	and    dl,BYTE PTR ds:0xe4f159a1
  425a3a:	gs jae 0x4259ec
  425a3d:	call   0xd148:0xa4f2fb5f
  425a44:	pop    ds
  425a45:	and    al,BYTE PTR [eax+ebp*1]
  425a48:	sub    DWORD PTR [ecx+0x57],esi
  425a4b:	sub    bh,BYTE PTR [edi]
  425a4d:	add    esp,DWORD PTR fs:[eax]
  425a50:	jg     0x425a0c
  425a52:	test   eax,0x6f660ae1
  425a57:	jns    0x4259ef
  425a59:	or     ebx,ecx
  425a5b:	out    dx,al
  425a5c:	push   ebx
  425a5d:	and    eax,0xb7b4d4a0
  425a62:	xlat   BYTE PTR ds:[ebx]
  425a63:	pop    ds
  425a64:	jb     0x425a1c
  425a66:	js     0x425a77
  425a68:	xchg   edx,eax
  425a69:	into   
  425a6a:	(bad)  
  425a6b:	ins    DWORD PTR es:[edi],dx
  425a6c:	adc    eax,0x3a08804
  425a71:	inc    ebx
  425a72:	dec    edi
  425a73:	(bad)  
  425a74:	sbb    eax,0x552d1974
  425a79:	cmp    DWORD PTR [ebp-0x7ca537f7],ebp
  425a7f:	into   
  425a80:	dec    eax
  425a81:	sub    ebp,0xffffffbf
  425a84:	(bad)  
  425a85:	jnp    0x425a84
  425a87:	or     DWORD PTR ss:0x42680c4b,0x33dcfc86
  425a92:	add    bl,BYTE PTR [ebx+0x68]
  425a95:	call   0xa653322d
  425a9a:	iret   
  425a9b:	cli    
  425a9c:	fdiv   QWORD PTR [eax+edi*2+0x41da04be]
  425aa3:	aad    0x77
  425aa5:	adc    dl,ah
  425aa7:	mov    esi,0xde75282c
  425aac:	out    0x7b,eax
	...
  425aba:	add    BYTE PTR [eax],al
  425abc:	call   0x9eff:0xefe9ef59
  425ac3:	jnp    0x425b08
  425ac5:	pop    ebp
  425ac6:	pop    esp
  425ac7:	mov    cl,0x31
  425ac9:	cdq    
  425aca:	jne    0x425ad6
  425acc:	mov    al,0xd1
  425ace:	add    DWORD PTR [eax],eax
  425ad0:	mov    al,BYTE PTR [edx]
  425ad2:	add    BYTE PTR [eax],al
  425ad4:	ja     0x425b30
  425ad6:	into   
  425ad7:	in     eax,0x28
  425ad9:	jl     0x425aab
  425adb:	jp     0x425aef
  425add:	push   eax
  425ade:	jno    0x425a7f
  425ae0:	pop    ds
  425ae1:	sbb    DWORD PTR [ecx-0x4a9bbaf9],eax
  425ae7:	test   BYTE PTR [esi+0x7c],dh
  425aea:	inc    edx
  425aeb:	fyl2x  
  425aed:	fimul  DWORD PTR [esi+0x2098604b]
  425af3:	outs   dx,DWORD PTR ds:[esi]
  425af4:	adc    ecx,DWORD PTR [ecx+0x6abcd9c3]
  425afa:	xchg   esp,eax
  425afb:	add    edx,DWORD PTR [edx+0x20]
  425afe:	xor    eax,0xfc558dff
  425b03:	and    al,0x22
  425b05:	jl     0x425ae9
  425b07:	dec    ebx
  425b08:	sbb    dl,al
  425b0a:	mov    ebx,0x6cbd8f6c
  425b0f:	cmp    DWORD PTR [ecx+0x4838f88],esi
  425b15:	sahf   
  425b16:	jmp    0xdff1:0x95e6e6e2
  425b1d:	push   esp
  425b1e:	fcomi  st,st(4)
  425b20:	xchg   ebp,eax
  425b21:	cmp    eax,0x3aed234
  425b26:	mov    ah,0xcf
  425b28:	inc    edi
  425b29:	adc    eax,0x6052f041
  425b2e:	mov    BYTE PTR [ecx],bl
  425b30:	outs   dx,BYTE PTR ds:[esi]
  425b31:	sbb    al,0x9c
  425b33:	xor    ecx,DWORD PTR [ecx-0xfb32da0]
  425b39:	push   0x16f29dd7
  425b3e:	aaa    
  425b3f:	pusha  
  425b40:	nop
  425b41:	test   eax,0xfd6e8cd1
  425b46:	cmp    DWORD PTR [ebx+edx*2+0x5c45674c],ebx
  425b4d:	mov    ebx,0x3a87bf18
  425b52:	mov    al,0x11
  425b54:	aam    0x6
  425b56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b57:	xchg   edi,eax
  425b58:	and    edi,DWORD PTR [edi-0x48825131]
  425b5e:	cli    
  425b5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b60:	xor    al,BYTE PTR es:[ecx+0x48]
  425b64:	fsubr  st,st(1)
  425b66:	pop    edx
  425b67:	push   0xf11d80cc
  425b6c:	jne    0x425aee
  425b6e:	sub    esi,ecx
  425b70:	ds out dx,al
  425b72:	sub    eax,0x86b3060d
  425b77:	xchg   edi,eax
  425b78:	adc    ch,BYTE PTR [edx-0x5060ff8d]
  425b7e:	lock pop esi
  425b80:	adc    dl,BYTE PTR [eax-0x53]
  425b83:	(bad)  
  425b84:	arpl   dx,bp
  425b86:	sub    al,0x94
  425b88:	mov    cl,0x32
  425b8a:	sub    BYTE PTR ds:0x93447026,dl
  425b90:	jge    0x425b23
  425b92:	mov    edx,esi
  425b94:	cmc    
  425b95:	add    bh,al
  425b97:	jecxz  0x425b33
  425b99:	in     al,0x67
  425b9b:	xchg   ebx,eax
  425b9c:	cmp    esi,edx
  425b9e:	imul   edx,ecx,0x62
  425ba1:	(bad)  
  425ba2:	sbb    esi,eax
  425ba4:	in     eax,dx
  425ba5:	adc    al,0x23
  425ba7:	into   
  425ba8:	jne    0x425c08
  425baa:	push   edx
  425bab:	sbb    al,0x48
  425bad:	push   ebx
  425bae:	mov    cl,0x8b
  425bb0:	popa   
  425bb1:	xchg   edi,eax
  425bb2:	repz fsub st,st(4)
  425bb5:	mov    dh,dl
  425bb7:	xor    dh,BYTE PTR ds:0x58efd8cf
  425bbd:	pushf  
  425bbe:	scas   eax,DWORD PTR es:[edi]
  425bbf:	daa    
  425bc0:	pop    es
  425bc1:	mov    DWORD PTR [esi-0x284a6790],eax
  425bc7:	fbstp  TBYTE PTR [edx]
  425bc9:	lods   eax,DWORD PTR ds:[esi]
  425bca:	mov    dh,0x34
  425bcc:	or     eax,0x1b17519a
  425bd1:	enter  0x54b,0x64
  425bd5:	and    ecx,esi
  425bd7:	in     eax,dx
  425bd8:	ret    
  425bd9:	out    dx,al
  425bda:	push   0x9d35f196
  425bdf:	xor    BYTE PTR [edi+0x4f5ca335],bh
  425be5:	add    esi,DWORD PTR [ebx+0x74681b91]
  425beb:	dec    ebp
  425bec:	pusha  
  425bed:	mov    ah,0x14
  425bef:	inc    esi
  425bf0:	fdivr  DWORD PTR [eax-0x31a9d1dd]
  425bf6:	or     al,0x76
  425bf8:	xchg   DWORD PTR ds:0xca49cfca,esi
  425bfe:	fnstsw WORD PTR [ebp-0x79ff6458]
  425c04:	fidiv  DWORD PTR [ecx]
  425c06:	pusha  
  425c07:	dec    ebx
  425c08:	xor    al,0x33
  425c0a:	cld    
  425c0b:	cmp    edx,esp
  425c0d:	imul   edi,DWORD PTR [eax+0x59],0xffffffb7
  425c11:	int    0x93
  425c13:	jnp    0x425c77
  425c15:	add    eax,0xf8ac2078
  425c1a:	retf   0x19b4
  425c1d:	imul   esi,DWORD PTR [esi+edx*1+0x39],0x59b49cf7
  425c25:	in     eax,dx
  425c26:	fidiv  DWORD PTR [esi-0xb584b0d]
  425c2c:	mov    ecx,ecx
  425c2e:	(bad)  [ecx-0x26]
  425c31:	mov    eax,ds:0xe20626dc
  425c36:	shl    DWORD PTR [edx+0x66b979c5],cl
  425c3c:	jnp    0x425bf3
  425c3e:	push   eax
  425c3f:	outs   dx,BYTE PTR ds:[esi]
  425c40:	sub    esp,DWORD PTR [ecx+0x20]
  425c43:	out    0xad,eax
  425c45:	xor    esp,DWORD PTR [esi+0x1b]
  425c48:	fdiv   DWORD PTR [esp+edx*1]
  425c4b:	jle    0x425be2
  425c4d:	or     BYTE PTR [ebx],dl
  425c4f:	aam    0x63
  425c51:	das    
  425c52:	das    
  425c53:	inc    ebx
  425c54:	add    eax,0x3fa6082a
  425c59:	xchg   esi,eax
  425c5a:	(bad)  
  425c5b:	dec    esi
  425c5c:	js     0x425cdc
  425c5e:	jmp    0x9ca8:0xddbfd829
  425c65:	rcr    DWORD PTR [eax+0x70eebe15],cl
  425c6b:	repnz xor eax,0xf900577d
  425c71:	cwd    
  425c73:	pop    ss
  425c74:	mov    ebx,0xc4f4c8c3
  425c79:	inc    edi
  425c7a:	push   esp
  425c7b:	loop   0x425cf3
  425c7d:	adc    BYTE PTR [ecx],al
  425c7f:	sub    DWORD PTR [esi],ecx
  425c81:	adc    ecx,DWORD PTR [esi]
  425c83:	call   0x53ca:0x38fdfd5f
  425c8a:	jg     0x425c11
  425c8c:	les    edi,FWORD PTR [esi-0x553532c8]
  425c92:	add    BYTE PTR [ebp+ebp*1+0x520da3a0],al
  425c99:	and    al,0x8
  425c9b:	aad    0xa3
  425c9d:	stos   BYTE PTR es:[edi],al
  425c9e:	mov    dl,0xcb
  425ca0:	jge    0x425c86
  425ca2:	ja     0x425c9a
  425ca4:	aam    0xc2
  425ca6:	aas    
  425ca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ca8:	out    0x46,al
  425caa:	call   0x44738445
  425caf:	dec    esi
  425cb0:	xlat   BYTE PTR ds:[ebx]
  425cb1:	fst    QWORD PTR [eax+0x49]
  425cb4:	mov    ecx,0x38b9cc8a
  425cb9:	cmp    dh,dl
  425cbb:	cmp    al,al
  425cbd:	fdiv   DWORD PTR [edx-0x54]
  425cc0:	push   ebx
  425cc1:	push   edx
  425cc2:	sahf   
  425cc3:	aaa    
  425cc4:	mov    al,ds:0x6883c38a
  425cc9:	scas   eax,DWORD PTR es:[edi]
  425cca:	mov    bh,0x90
  425ccc:	jg     0x425d0f
  425cce:	sbb    esi,DWORD PTR [eax]
  425cd0:	jmp    ebx
  425cd2:	scas   al,BYTE PTR es:[edi]
  425cd3:	mov    WORD PTR [esi+0x51029d51],fs
  425cd9:	adc    eax,0xb10fc8e6
  425cde:	xor    DWORD PTR [eax+0x51],eax
  425ce1:	ret    0x658a
  425ce4:	adc    al,0xd9
  425ce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ce7:	and    DWORD PTR [edi+edx*8-0x5ba3fb9b],0xffffffb2
  425cef:	(bad)  
  425cf0:	adc    esi,DWORD PTR [ebp-0x38]
  425cf3:	mov    eax,ds:0xa6404c3
  425cf8:	(bad)  
  425cfa:	jns    0x425cbf
  425cfc:	sahf   
  425cfd:	and    ah,BYTE PTR [ebp-0x53]
  425d00:	cmp    edx,DWORD PTR [ebp+0x10]
  425d03:	inc    eax
  425d04:	jno    0x425ca2
  425d06:	jle    0x425ced
  425d08:	ret    0xaf6c
  425d0b:	jbe    0x425d14
  425d0d:	xchg   dl,cl
  425d0f:	add    dl,BYTE PTR [ebp+0x7c]
  425d12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d13:	out    dx,eax
  425d14:	mov    edi,0x92308813
  425d19:	xlat   BYTE PTR ds:[ebx]
  425d1a:	sbb    bl,BYTE PTR [ebp-0xd]
  425d1d:	add    DWORD PTR [ebx],ebp
  425d1f:	xor    al,0x87
  425d21:	in     al,dx
  425d22:	imul   ebp,ecx,0xaa51fe44
  425d28:	dec    edx
  425d29:	mov    al,ds:0xa92c970e
  425d2e:	cld    
  425d2f:	loopne 0x425da8
  425d31:	jno    0x425d74
  425d33:	loopne 0x425d3d
  425d35:	inc    ebp
  425d36:	sbb    ebp,ecx
  425d38:	xchg   edx,eax
  425d39:	test   DWORD PTR [ecx+ebx*8+0x22],edi
  425d3d:	fisttp QWORD PTR [ebp+0x54]
  425d40:	jmp    0xfcd43ac2
  425d45:	cmp    esi,DWORD PTR [esi+0x7efabd04]
  425d4b:	lahf   
  425d4c:	cmp    eax,0x3ef5c7fb
  425d51:	sub    al,0x6a
  425d53:	imul   edi,DWORD PTR [ebx-0x2e4aa91e],0xffffffd4
  425d5a:	sub    eax,0xfab877
	...
  425d6b:	add    BYTE PTR [ebp+0x4f3707c0],cl
  425d71:	idiv   DWORD PTR [ebp+0x532a00fa]
  425d77:	(bad)  [ecx+0x27]
  425d7a:	sub    BYTE PTR [edi],0x3a
  425d7d:	aam    0x1
  425d7f:	add    BYTE PTR [edx-0x28fffffe],cl
  425d85:	ins    DWORD PTR es:[edi],dx
  425d86:	in     al,dx
  425d87:	and    bl,bh
  425d89:	inc    edx
  425d8a:	and    BYTE PTR [ebp-0x6c0f8b5f],ah
  425d90:	mov    eax,ds:0x91760889
  425d95:	mov    al,ds:0x6fd6d220
  425d9a:	dec    ecx
  425d9b:	data16 arpl WORD PTR [eax-0x38f9ba94],bx
  425da2:	mov    al,ds:0x43408e90
  425da7:	sub    al,0xe1
  425da9:	inc    esp
  425daa:	in     al,dx
  425dab:	stc    
  425dac:	xchg   ebx,eax
  425dad:	jmp    0x1947af55
  425db2:	stos   BYTE PTR es:[edi],al
  425db3:	mov    ebp,0x7b7ef7cd
  425db8:	fs clc 
  425dba:	sub    al,al
  425dbc:	shr    esi,1
  425dbe:	inc    ebp
  425dbf:	mov    cl,0x52
  425dc1:	jmp    0x70312ece
  425dc6:	or     eax,DWORD PTR [ecx]
  425dc8:	test   al,0x48
  425dcb:	repnz int3 
  425dcd:	neg    DWORD PTR [eax-0x28adfd39]
  425dd3:	int    0x36
  425dd5:	jmp    0xc03e7a1d
  425dda:	stos   DWORD PTR es:[edi],eax
  425ddb:	mov    ebp,0x6fea4bbb
  425de0:	sbb    eax,0x6693655d
  425de5:	loopne 0x425dc7
  425de7:	inc    edi
  425de8:	add    al,0xd9
  425dea:	push   ds
  425deb:	les    ecx,FWORD PTR [edx+0x25b53f1a]
  425df1:	xor    eax,0x459fd37b
  425df6:	pop    ss
  425df7:	popa   
  425df8:	xor    al,0x58
  425dfa:	mov    esi,0x7e753e00
  425dff:	add    DWORD PTR [ebx],ecx
  425e01:	data16 fwait
  425e03:	xchg   ebp,eax
  425e04:	ret    0xbf35
  425e07:	xor    al,0xfe
  425e09:	or     eax,DWORD PTR [eax]
  425e0b:	cli    
  425e0c:	call   0x6452:0x10fd56c0
  425e13:	xor    ch,dl
  425e15:	jge    0x425e76
  425e17:	inc    edx
  425e18:	js     0x425da0
  425e1a:	(bad)  
  425e1b:	test   DWORD PTR ss:[edi],ebp
  425e1e:	add    al,BYTE PTR [ebx-0x7]
  425e21:	test   DWORD PTR [ebx+0x5346690d],eax
  425e27:	ins    BYTE PTR es:[edi],dx
  425e28:	arpl   WORD PTR [ebp+eax*4+0x6a271200],bx
  425e2f:	in     al,dx
  425e30:	outs   dx,DWORD PTR ds:[esi]
  425e31:	fwait
  425e32:	jns    0x425e75
  425e34:	dec    eax
  425e35:	in     eax,0x67
  425e37:	pop    esp
  425e38:	shl    BYTE PTR [esi],1
  425e3a:	push   cs
  425e3b:	pop    esp
  425e3c:	ss pushf 
  425e3e:	add    DWORD PTR [eax+0x11],ecx
  425e41:	shl    ebp,0xbf
  425e44:	and    bl,BYTE PTR [esp+edx*1-0x60d47751]
  425e4b:	inc    esi
  425e4c:	cmp    BYTE PTR [ecx],dl
  425e4e:	mov    ds:0x93c7c2c5,eax
  425e53:	push   cs
  425e54:	fs and edi,esp
  425e57:	fistp  WORD PTR [ebp+0x1e]
  425e5a:	xlat   BYTE PTR ds:[ebx]
  425e5b:	mov    esi,0x319644c
  425e60:	in     al,0x28
  425e62:	adc    eax,0x21ad6f14
  425e67:	imul   edx,DWORD PTR [ecx+0x55e7f9fa],0x61
  425e6e:	push   ds
  425e6f:	pop    es
  425e70:	out    dx,al
  425e71:	xlat   BYTE PTR ds:[ebx]
  425e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e73:	pop    ebp
  425e74:	out    0x27,eax
  425e76:	scas   al,BYTE PTR es:[edi]
  425e77:	cld    
  425e78:	sti    
  425e79:	and    DWORD PTR [edx],ebx
  425e7b:	pop    ecx
  425e7c:	dec    ebx
  425e7d:	jmp    0x1bcb:0x12d3e595
  425e84:	jmp    0x79a2cb08
  425e89:	adc    eax,DWORD PTR [ebp-0x6d8ec1e8]
  425e8f:	fst    DWORD PTR [edx-0x7e]
  425e92:	outs   dx,DWORD PTR ds:[esi]
  425e93:	jmp    0x425ea3
  425e95:	test   al,0x1c
  425e97:	or     eax,0x83642ac4
  425e9c:	push   ss
  425e9d:	lahf   
  425e9e:	and    ebp,edi
  425ea0:	push   esi
  425ea1:	pop    edx
  425ea2:	cmp    al,0xc
  425ea4:	add    cl,dl
  425ea6:	daa    
  425ea7:	adc    eax,0xee008468
  425eac:	ins    BYTE PTR es:[edi],dx
  425ead:	les    esp,FWORD PTR [ecx+0x6b]
  425eb0:	loop   0x425e69
  425eb2:	or     BYTE PTR [ecx+0x2f7705d0],dh
  425eb8:	arpl   WORD PTR [eax+0x3a],bp
  425ebb:	(bad)
  425ebe:	xor    DWORD PTR [eax-0x11d6be06],0xffffffea
  425ec5:	inc    esi
  425ec6:	jae    0x425e4e
  425ec8:	or     eax,0xeb101074
  425ecd:	xchg   ebp,eax
  425ece:	int    0x39
  425ed0:	dec    esi
  425ed1:	push   ebp
  425ed2:	add    DWORD PTR [eax],esi
  425ed4:	shl    DWORD PTR [ebx-0x19],0x6c
  425ed8:	mov    ebp,0xd2e8091c
  425edd:	fnsave [ecx-0x24d2df89]
  425ee3:	xor    DWORD PTR [eax],ebx
  425ee5:	and    bl,BYTE PTR [esi]
  425ee7:	outs   dx,DWORD PTR ds:[esi]
  425ee8:	jbe    0x425f50
  425eea:	(bad)  
  425eeb:	in     eax,0x1
  425eed:	mov    ss,WORD PTR [esp+eax*2]
  425ef0:	adc    BYTE PTR [edx+0x5d38269],dh
  425ef6:	push   es
  425ef7:	push   0xffffffc1
  425ef9:	or     dl,bl
  425efb:	sub    ebx,0x5d
  425efe:	cmovns edx,DWORD PTR ds:0x442cebcc
  425f05:	ficomp WORD PTR [ecx-0x27d452a2]
  425f0b:	jae    0x425f4b
  425f0d:	jmp    0x425edf
  425f0f:	mov    bh,0x5f
  425f11:	pop    ebx
  425f12:	ja     0x425ef5
  425f14:	add    eax,0xdd1fe597
  425f19:	inc    edx
  425f1a:	jae    0x425f3d
  425f1c:	add    eax,0xa184ef72
  425f21:	(bad)  
  425f22:	pop    ds
  425f23:	adc    ch,al
  425f25:	sbb    ch,BYTE PTR [edx+0x5a24db5a]
  425f2b:	adc    eax,0xe375b0c2
  425f30:	xchg   DWORD PTR [edx+eiz*2],eax
  425f33:	sar    DWORD PTR [ebx-0x6e5f163a],0x9f
  425f3a:	jne    0x425eeb
  425f3c:	sub    eax,0xbe1ce76d
  425f41:	mov    edi,0x848e2160
  425f46:	rcl    BYTE PTR [ecx+0x53],cl
  425f49:	adc    BYTE PTR [edi],dl
  425f4b:	mov    ds:0x5367ea90,al
  425f50:	cs jmp 0xe7ea2943
  425f56:	jge    0x425fbb
  425f58:	fmul   st(2),st
  425f5a:	xor    esp,ecx
  425f5c:	(bad)  
  425f5e:	push   0xffffffea
  425f60:	mov    ecx,0x4e68dfc2
  425f65:	(bad)  
  425f66:	jmp    0x425f71
  425f68:	stc    
  425f69:	cmp    al,bl
  425f6b:	rcl    BYTE PTR [ecx+ecx*1-0x284ed5e1],cl
  425f72:	sub    BYTE PTR [edx+ebx*1],dh
  425f75:	or     al,BYTE PTR [edx]
  425f77:	or     ecx,DWORD PTR [edi]
  425f79:	add    ebp,DWORD PTR ds:0x95198660
  425f7f:	mov    ebp,edx
  425f81:	in     eax,dx
  425f82:	popf   
  425f83:	xchg   esi,eax
  425f84:	sub    BYTE PTR [esi-0x36b30ec5],bh
  425f8a:	pop    esp
  425f8b:	repz mov edi,0xf084584b
  425f91:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  425f93:	mov    WORD PTR [ebx],cs
  425f95:	bnd jb 0x425fc0
  425f98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f99:	pop    ebp
  425f9a:	lock imul esi,esp,0xffffffde
  425f9e:	inc    esp
  425f9f:	mov    al,ds:0x7102b9b2
  425fa4:	call   0xb9b2:0x97db2241
  425fab:	sahf   
  425fac:	loop   0x425f39
  425fae:	push   ecx
  425faf:	in     eax,0xe5
  425fb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425fb2:	xchg   esi,eax
  425fb3:	mov    cl,0x55
  425fb5:	sub    BYTE PTR [ecx],bl
  425fb7:	test   ebp,0x9edbd454
  425fbd:	into   
  425fbe:	xchg   edx,eax
  425fbf:	lock pop bx
  425fc2:	mov    ecx,0xfac9e48a
  425fc7:	inc    esp
  425fc8:	dec    eax
  425fc9:	inc    eax
  425fca:	xchg   edi,eax
  425fcb:	icebp  
  425fcc:	aad    0x9d
  425fce:	add    BYTE PTR [eax],0xcd
  425fd1:	xchg   eax,eax
  425fd3:	jmp    0x425f7e
  425fd5:	xlat   BYTE PTR ds:[ebx]
  425fd6:	les    ebx,FWORD PTR [ecx+0x30077534]
  425fdc:	dec    ebp
  425fdd:	scas   al,BYTE PTR es:[edi]
  425fde:	fwait
  425fdf:	dec    esi
  425fe0:	cli    
  425fe1:	call   0x1ae1afd9
  425fe6:	xchg   ebx,eax
  425fe7:	ss mov cl,0x64
  425fea:	icebp  
  425feb:	dec    esi
  425fec:	xor    eax,0xad7410cf
  425ff1:	xchg   esp,eax
  425ff2:	jg     0x42603b
  425ff4:	icebp  
  425ff5:	test   ch,0xf9
  425ff8:	push   0x55060f44
  425ffd:	es xor ah,bh
  426000:	into   
  426001:	clc    
  426002:	(bad)  
  426003:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426004:	xor    eax,0x1e4bfcd7
  426009:	add    eax,0x3ad90bb4
	...
  42601a:	add    BYTE PTR [eax],al
  42601c:	mov    al,0x8a
  42601e:	call   0xfa265aa4
  426023:	mov    ebx,0x99242062
  426028:	mov    ds:0xc4d3636a,al
  42602d:	(bad)  
  42602e:	add    DWORD PTR [eax],eax
  426030:	mov    al,BYTE PTR [edx]
  426032:	add    BYTE PTR [eax],al
  426034:	sub    dl,BYTE PTR [ebx+edx*4+0x1e8648b5]
  42603b:	lea    edx,[edx+0x41b26fd3]
  426041:	sub    al,0x9b
  426043:	fmul   DWORD PTR [edx]
  426045:	mov    eax,0x42e0f5e6
  42604a:	pop    esi
  42604b:	jle    0x425fe7
  42604d:	push   ebp
  42604e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42604f:	in     eax,0x7f
  426051:	pop    edi
  426052:	pop    ebp
  426053:	and    eax,ecx
  426055:	test   BYTE PTR [esp+eiz*4],ch
  426058:	jmp    0x19f8:0x27133e56
  42605f:	pop    esi
  426060:	fistp  DWORD PTR [esi+ebp*4+0x2d]
  426064:	mov    al,0x4e
  426066:	pop    edi
  426067:	jns    0x42603e
  426069:	xchg   edi,eax
  42606a:	jmp    0xb47e:0x60aaa602
  426071:	sub    ah,0x27
  426074:	sti    
  426075:	cwde   
  426076:	jno    0x42608f
  426078:	loope  0x426086
  42607a:	rol    ecx,cl
  42607c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42607d:	pusha  
  42607e:	jae    0x426025
  426080:	loop   0x42600d
  426082:	mov    ebp,0x8f0d925
  426087:	test   al,0x2f
  426089:	add    bl,ch
  42608b:	mov    edi,0x907833b6
  426090:	xchg   ecx,eax
  426091:	(bad)
  426094:	xor    BYTE PTR [eax-0x23f20508],0xd8
  42609b:	sbb    ch,0xb0
  42609e:	xlat   BYTE PTR ds:[ebx]
  42609f:	or     DWORD PTR [esp+ebp*8],esp
  4260a2:	fs (bad) 
  4260a4:	cmc    
  4260a5:	add    DWORD PTR [eax+0x4e9c8cc5],esp
  4260ab:	dec    edx
  4260ac:	dec    ecx
  4260ad:	or     bl,0x8c
  4260b0:	jmp    0xd60d:0xadb13010
  4260b7:	mov    al,0x50
  4260b9:	aaa    
  4260ba:	pop    edx
  4260bb:	mov    DWORD PTR [ecx+0x2ef5a8b1],esp
  4260c1:	call   0x4f9d:0x32696fd4
  4260c8:	inc    esp
  4260c9:	cmp    eax,0x79ac4f71
  4260ce:	add    eax,0x582eb4f4
  4260d3:	sub    ah,BYTE PTR [edi+0x77]
  4260d6:	ins    DWORD PTR es:[edi],dx
  4260d7:	int3   
  4260d8:	loope  0x42607e
  4260da:	pop    es
  4260db:	or     eax,0x5926ea36
  4260e0:	pop    es
  4260e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4260e2:	stc    
  4260e3:	adc    eax,DWORD PTR [edx-0x1d98018d]
  4260e9:	add    esp,DWORD PTR [eax]
  4260eb:	data16 fcmovnb st,st(2)
  4260ee:	xor    al,0xa3
  4260f0:	ins    BYTE PTR es:[edi],dx
  4260f1:	mov    eax,ds:0xd88e4938
  4260f6:	bnd ret 0x2c6a
  4260fa:	out    dx,al
  4260fb:	test   BYTE PTR [ebx-0x43],bl
  4260fe:	das    
  4260ff:	or     dh,dh
  426101:	aaa    
  426102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426103:	nop
  426104:	add    esi,0x71
  426107:	cmp    ch,dl
  426109:	sbb    BYTE PTR [eax],cl
  42610b:	in     eax,dx
  42610c:	scas   al,BYTE PTR es:[edi]
  42610d:	sub    eax,0x7f7c6b57
  426112:	stos   BYTE PTR es:[edi],al
  426113:	pop    ecx
  426114:	sub    BYTE PTR [esi],cl
  426116:	push   0xffffffd5
  426118:	pop    ebx
  426119:	rcr    esi,cl
  42611b:	aam    0x4e
  42611d:	ins    BYTE PTR es:[edi],dx
  42611e:	and    al,0x45
  426120:	mov    dl,ch
  426122:	les    ecx,FWORD PTR [edi]
  426124:	es and ebx,esp
  426127:	(bad)  
  426129:	js     0x42616e
  42612b:	mov    dh,BYTE PTR ds:0x8a38cb77
  426131:	push   ebx
  426132:	je     0x4260c5
  426134:	adc    esp,edx
  426136:	arpl   WORD PTR [edx+0x11],cx
  426139:	mov    ch,0x0
  42613b:	jecxz  0x426143
  42613d:	ret    
  42613e:	add    ebx,eax
  426140:	xchg   edi,eax
  426141:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426142:	pushf  
  426143:	clc    
  426144:	mov    al,0xb5
  426146:	ss jl  0x4260f8
  426149:	out    dx,eax
  42614a:	fnstenv [esi]
  42614c:	jle    0x426166
  42614e:	ins    BYTE PTR es:[edi],dx
  42614f:	repz repnz mov edi,0x4d38b913
  426156:	retf   
  426157:	jmp    0x2b72:0xe225e72
  42615e:	mov    cl,0x75
  426160:	das    
  426161:	fld    QWORD PTR [edx-0x2a]
  426164:	popf   
  426165:	imul   ebx,DWORD PTR [ebx+0x6be452e7],0x31
  42616c:	and    ch,BYTE PTR [ebp-0x74]
  42616f:	jge    0x4261e5
  426171:	push   ecx
  426172:	inc    esi
  426173:	mov    ebp,0xf1a754d4
  426178:	dec    eax
  426179:	lods   al,BYTE PTR ds:[esi]
  42617a:	or     dl,BYTE PTR [esi+0x3ee8c33f]
  426180:	cmp    al,BYTE PTR [esi-0x1fcde7d1]
  426186:	cmp    ch,0x98
  426189:	cmp    esp,ecx
  42618b:	pop    ds
  42618c:	adc    BYTE PTR [edi-0x5e784bc7],bh
  426192:	lods   al,BYTE PTR ds:[esi]
  426193:	sbb    eax,0xb3d7e380
  426198:	js     0x426124
  42619a:	xor    edx,DWORD PTR [ebx+ebx*4+0x2ae94f03]
  4261a1:	and    DWORD PTR [esi+0x7bb622fa],0x25
  4261a8:	mov    bh,ah
  4261aa:	das    
  4261ab:	sub    DWORD PTR [edi-0x44],0x130ab9c7
  4261b2:	sub    BYTE PTR [eax-0x6ab5d3a1],bl
  4261b8:	std    
  4261b9:	push   esi
  4261ba:	retf   0x32f5
  4261bd:	push   0x2ac266b2
  4261c2:	(bad)  
  4261c3:	inc    esp
  4261c4:	int3   
  4261c5:	fcmovb st,st(0)
  4261c7:	mov    dl,0xa7
  4261c9:	mov    ah,BYTE PTR [ecx+0xc385e09]
  4261cf:	call   0x7c6b:0x905eb2db
  4261d6:	xchg   esi,eax
  4261d7:	outs   dx,DWORD PTR ds:[esi]
  4261d8:	jo     0x42621d
  4261da:	jbe    0x426166
  4261dc:	xor    DWORD PTR [esi-0x2],esp
  4261df:	inc    ebx
  4261e0:	inc    edx
  4261e1:	(bad)  
  4261e2:	(bad)  
  4261e3:	bt     DWORD PTR [esi+0x4a28dc23],esi
  4261ea:	mov    bh,0x4f
  4261ec:	cs leave 
  4261ee:	pop    edi
  4261ef:	jae    0x426183
  4261f1:	jg     0x42620e
  4261f3:	ja     0x426198
  4261f5:	inc    ebp
  4261f6:	cdq    
  4261f7:	rcr    BYTE PTR [edx+0x66],1
  4261fa:	mov    WORD PTR [ebp-0x106c89c],?
  426200:	enter  0xc411,0xa5
  426204:	(bad)  
  426205:	(bad)  
  426206:	push   edi
  426207:	lea    ecx,[edi]
  426209:	mov    esi,fs
  42620b:	dec    ebp
  42620c:	pop    es
  42620d:	pop    edi
  42620e:	jmp    0x426284
  426210:	xor    BYTE PTR [ebx+0x42],dl
  426213:	mov    edi,0x5d7db9a
  426218:	jle    0x4261fa
  42621a:	and    DWORD PTR [edx+esi*8-0x30b15aa0],0x3c
  426222:	push   eax
  426223:	lahf   
  426224:	sub    BYTE PTR [esi-0x3867f33e],0xf9
  42622b:	ret    
  42622c:	inc    esi
  42622d:	mov    dl,0x76
  42622f:	inc    esi
  426230:	add    DWORD PTR [esi],0x1d
  426233:	pop    esp
  426234:	jl     0x426251
  426236:	mov    ah,0x44
  426238:	sbb    al,0x7f
  42623a:	cdq    
  42623b:	out    0x9a,eax
  42623d:	cld    
  42623e:	push   cs
  42623f:	cmp    dh,BYTE PTR [eax]
  426241:	jno    0x426262
  426243:	imul   ecx,DWORD PTR [ebp-0x5e],0xffffffb4
  426247:	inc    edi
  426248:	sub    DWORD PTR [eax-0x3a7cf9be],ecx
  42624e:	sbb    eax,0xe12e0014
  426253:	fsubr  st,st(5)
  426255:	adc    BYTE PTR [ecx],0x5b
  426258:	and    BYTE PTR [edi+0x2b7dd215],bh
  42625e:	jecxz  0x4262af
  426260:	add    al,0x25
  426262:	adc    al,0xd2
  426264:	sub    ebp,ecx
  426266:	and    eax,0xf513eabd
  42626b:	sahf   
  42626c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42626d:	adc    eax,DWORD PTR [ebx+eiz*2+0xa]
  426271:	in     eax,dx
  426272:	pusha  
  426273:	stos   DWORD PTR es:[edi],eax
  426274:	in     al,0x9d
  426276:	stos   DWORD PTR es:[edi],eax
  426277:	ins    BYTE PTR es:[edi],dx
  426278:	cwde   
  426279:	push   edi
  42627a:	into   
  42627b:	cwde   
  42627c:	push   cs
  42627d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42627e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42627f:	test   DWORD PTR [edx-0x2a4e8519],ecx
  426285:	mov    WORD PTR ds:0x47e8b245,ss
  42628b:	in     eax,dx
  42628c:	add    DWORD PTR [esi],esp
  42628e:	push   ecx
  42628f:	sub    esp,eax
  426291:	xchg   BYTE PTR [ebx+0x14f1b07e],ch
  426297:	xor    al,0xf4
  426299:	pusha  
  42629a:	sub    eax,0x976d933d
  42629f:	and    BYTE PTR [ecx],ch
  4262a1:	fistp  DWORD PTR [ebx-0x4d53920]
  4262a7:	inc    edx
  4262a8:	add    ebp,DWORD PTR [edi]
  4262aa:	inc    edi
  4262ab:	pop    ebx
  4262ac:	inc    ebp
  4262ad:	push   esp
  4262ae:	jo     0x42628b
  4262b0:	push   ss
  4262b1:	sub    ecx,DWORD PTR [edi+0x306afee0]
  4262b7:	or     DWORD PTR [esi-0x5c],ebx
  4262ba:	xchg   ebx,eax
  4262bb:	mov    cl,0x92
  4262bd:	sbb    al,0x0
	...
  4262cb:	add    BYTE PTR [edx-0x39253b74],cl
  4262d1:	ficomp DWORD PTR [esi+0x2983e7dc]
  4262d7:	mov    WORD PTR [edi+0x4ed6f447],?
  4262dd:	fld    DWORD PTR [ecx]
  4262df:	add    BYTE PTR [edx+0x75000002],cl
  4262e5:	add    DWORD PTR [ebp+edx*2+0x449c66b],edx
  4262ec:	std    
  4262ed:	sahf   
  4262ee:	aad    0x5b
  4262f0:	cli    
  4262f1:	lods   al,BYTE PTR ds:[esi]
  4262f2:	shl    DWORD PTR [esi+0x1572b624],cl
  4262f8:	sub    eax,0x1ec4a56b
  4262fd:	fild   DWORD PTR [eax+0x5be65cc0]
  426303:	dec    esp
  426304:	jnp    0x42630e
  426306:	dec    ebx
  426307:	xchg   ebp,eax
  426308:	jns    0x42631d
  42630a:	push   edx
  42630b:	xor    ebp,DWORD PTR [eax]
  42630d:	hlt    
  42630e:	int    0xe3
  426310:	ret    0x77b2
  426313:	mov    edx,0xb28ad925
  426318:	ins    DWORD PTR es:[edi],dx
  426319:	pop    ebx
  42631a:	add    al,0x3a
  42631c:	leave  
  42631d:	aas    
  42631e:	enter  0xd124,0xad
  426322:	in     eax,dx
  426323:	idiv   ecx
  426325:	and    ecx,DWORD PTR [ebx+eiz*1+0x30c147b6]
  42632c:	mov    ecx,0xc36e4af1
  426331:	fdivr  DWORD PTR [ebx+0x25c5b82b]
  426337:	adc    esi,DWORD PTR [edx]
  426339:	xchg   ebp,eax
  42633a:	popa   
  42633b:	test   al,0x39
  42633d:	outs   dx,DWORD PTR ds:[esi]
  42633e:	lock mov ebx,0x6be8c8bd
  426344:	inc    eax
  426345:	out    dx,al
  426346:	clc    
  426347:	les    edx,FWORD PTR ds:0x37bbde7a
  42634d:	popf   
  42634e:	mov    dh,0x4a
  426350:	nop
  426351:	mov    dh,0x42
  426353:	jmp    0xb3f5b921
  426358:	mov    ecx,DWORD PTR [eax]
  42635a:	mov    ah,ch
  42635c:	pop    ss
  42635d:	repz test al,0x84
  426360:	xchg   edi,eax
  426361:	rol    BYTE PTR [ebp+0x1a],cl
  426364:	xchg   ebp,eax
  426365:	and    eax,0xb9883771
  42636a:	scas   eax,DWORD PTR es:[edi]
  42636b:	pop    edi
  42636c:	push   esp
  42636d:	retf   
  42636e:	in     eax,dx
  42636f:	into   
  426370:	jno    0x426399
  426372:	and    ah,0xc3
  426375:	out    0x21,eax
  426377:	mov    dl,0xb9
  426379:	mov    ah,0x27
  42637b:	pop    ss
  42637c:	mov    WORD PTR [edi],?
  42637e:	jno    0x42638f
  426380:	mov    BYTE PTR [eax+0x97590de],al
  426386:	dec    edx
  426387:	push   ebx
  426388:	inc    ebx
  426389:	out    dx,eax
  42638a:	push   0xffffffcb
  42638c:	mov    ds:0x73b3f322,eax
  426391:	fstp   DWORD PTR [edi+0x5b]
  426394:	ja     0x42632c
  426396:	inc    dh
  426398:	iret   
  426399:	and    BYTE PTR [eax-0xf],ch
  42639c:	dec    ecx
  42639d:	pop    esi
  42639e:	jne    0x4263e3
  4263a0:	cli    
  4263a1:	sbb    eax,0xffca2cc6
  4263a6:	(bad)  
  4263a7:	dec    esp
  4263a8:	mov    eax,DWORD PTR [ecx-0x59]
  4263ab:	push   es
  4263ac:	inc    edx
  4263ad:	shl    edi,1
  4263af:	inc    ebx
  4263b0:	jg     0x426363
  4263b2:	in     al,dx
  4263b3:	ror    DWORD PTR [edi],0xdc
  4263b6:	out    dx,al
  4263b7:	cdq    
  4263b8:	test   al,0xd0
  4263ba:	xor    BYTE PTR [ebp-0x65],bl
  4263bd:	push   ecx
  4263be:	call   0x1f3e:0x79418712
  4263c5:	loope  0x426446
  4263c7:	outs   dx,BYTE PTR ds:[esi]
  4263c8:	out    dx,eax
  4263c9:	jb     0x42642e
  4263cb:	fimul  DWORD PTR [eax-0x13]
  4263ce:	add    dh,bl
  4263d0:	fcmovbe st,st(0)
  4263d2:	hlt    
  4263d3:	cli    
  4263d4:	ficom  WORD PTR [edi]
  4263d6:	jmp    0xe385:0x12d0c1a2
  4263dd:	aam    0xe7
  4263df:	jnp    0x42638b
  4263e1:	sar    BYTE PTR [edx-0x136d9a97],1
  4263e7:	xor    al,0x48
  4263e9:	or     DWORD PTR [edx-0x5],edx
  4263ec:	shl    DWORD PTR [esi-0x6a206ae],0xd1
  4263f3:	sub    al,0xff
  4263f5:	mov    edi,0x19d556e0
  4263fa:	enter  0xf853,0x33
  4263fe:	and    BYTE PTR [ebx+edx*8],bh
  426401:	gs push edi
  426403:	mov    ecx,0x34c5f072
  426408:	push   cs
  426409:	ror    bl,0x57
  42640c:	into   
  42640d:	fdiv   QWORD PTR [eax-0x20]
  426410:	repz add bh,dh
  426413:	mov    ebp,DWORD PTR [eax+0x594b9b84]
  426419:	xchg   bh,ah
  42641b:	sub    BYTE PTR [eax],dh
  42641d:	lock mov bl,0x4c
  426420:	xchg   edx,eax
  426421:	icebp  
  426422:	ffree  st(0)
  426424:	shl    DWORD PTR [eax+0x62e83e3e],1
  42642a:	fwait
  42642b:	and    al,0x2d
  42642d:	push   edx
  42642e:	shl    bl,1
  426430:	leave  
  426431:	jecxz  0x4263e3
  426433:	add    al,0x68
  426435:	sahf   
  426436:	add    eax,0xe8491251
  42643b:	outs   dx,BYTE PTR ds:[esi]
  42643c:	stos   DWORD PTR es:[edi],eax
  42643d:	sub    ebx,edi
  42643f:	mov    dl,0x48
  426441:	mov    esi,0x78af4a5e
  426446:	das    
  426447:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426448:	out    0xf8,eax
  42644a:	pop    ebp
  42644b:	xchg   esp,eax
  42644c:	repz daa 
  42644e:	fwait
  42644f:	pop    es
  426450:	mov    bh,0x73
  426452:	and    al,BYTE PTR [ebx+eax*4+0x39ef0c87]
  426459:	mov    ebp,0x57f0b481
  42645e:	jae    0x4264cd
  426460:	and    ebp,DWORD PTR [edx+0x5321bc64]
  426466:	fimul  WORD PTR [ecx-0x3f]
  426469:	mov    dl,0x8d
  42646b:	adc    BYTE PTR [esi+0x72b1bc84],dl
  426471:	lds    eax,FWORD PTR [esi]
  426473:	jno    0x426436
  426475:	or     al,0x2f
  426477:	xchg   BYTE PTR [eax],ah
  426479:	addr16 jb 0x42649b
  42647c:	and    DWORD PTR [ecx+ebp*4],eax
  42647f:	sub    BYTE PTR [ebx+eiz*4-0x63147aa8],0xe6
  426487:	pusha  
  426488:	push   esp
  426489:	lock mov al,0xed
  42648c:	mov    dh,BYTE PTR [eax+0x6701c369]
  426492:	lock adc eax,0x54cccb9
  426498:	mov    ah,0xce
  42649a:	jno    0x4264b3
  42649c:	loop   0x4264f2
  42649e:	aas    
  42649f:	arpl   WORD PTR [ebx-0xb],cx
  4264a2:	mov    BYTE PTR [ebx],cl
  4264a4:	je     0x426447
  4264a6:	inc    ebp
  4264a7:	js     0x426451
  4264a9:	xor    BYTE PTR [ebp+0xa],ch
  4264ac:	xchg   edi,eax
  4264ad:	xchg   ecx,eax
  4264ae:	in     al,dx
  4264af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4264b0:	mov    edx,0xe7c13be5
  4264b5:	gs sbb ah,cl
  4264b8:	test   BYTE PTR [eax],bh
  4264ba:	gs icebp 
  4264bc:	or     BYTE PTR [edx+0x56],0x25
  4264c0:	jns    0x426532
  4264c2:	add    DWORD PTR ds:0xdc4c808d,edx
  4264c8:	popa   
  4264c9:	sbb    edi,ecx
  4264cb:	pop    ebx
  4264cc:	inc    esp
  4264cd:	xchg   ebp,eax
  4264ce:	sbb    eax,0xcaa9d8e6
  4264d3:	add    al,0xfd
  4264d5:	mov    dh,0x70
  4264d7:	xlat   BYTE PTR ds:[ebx]
  4264d8:	xor    DWORD PTR [ebp+0x4bb2d817],ebp
  4264de:	cmp    edi,eax
  4264e0:	(bad)  
  4264e1:	push   edx
  4264e2:	das    
  4264e3:	stos   DWORD PTR es:[edi],eax
  4264e4:	cdq    
  4264e5:	(bad)  
  4264e6:	in     al,0x5d
  4264e8:	mov    ebp,0x5d5df24b
  4264ed:	popf   
  4264ee:	pop    es
  4264ef:	pop    ebx
  4264f0:	scas   al,BYTE PTR es:[edi]
  4264f1:	jns    0x426556
  4264f3:	sub    al,0x28
  4264f5:	sbb    ch,BYTE PTR [esi]
  4264f7:	pop    esi
  4264f8:	lds    esi,FWORD PTR [edi]
  4264fa:	pop    ebp
  4264fb:	mov    ds:0x6b35e02,eax
  426500:	sbb    esi,DWORD PTR [ecx-0x4d6e794e]
  426506:	test   edi,ebx
  426508:	xor    bh,al
  42650a:	mov    BYTE PTR [edx],ah
  42650c:	dec    edx
  42650d:	scas   al,BYTE PTR es:[edi]
  42650e:	mov    eax,0x4b988fd8
  426513:	(bad)  
  426514:	push   dx
  426516:	dec    ebp
  426517:	es jno 0x4264e3
  42651a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42651b:	arpl   WORD PTR [edi+0x61a4985],ax
  426521:	or     BYTE PTR [edx],al
  426523:	xchg   edi,eax
  426524:	out    dx,eax
  426525:	inc    edx
  426526:	retf   
  426527:	mov    dh,0xd5
  426529:	mov    edx,0x40a6ae9a
  42652e:	pop    es
  42652f:	sti    
  426530:	mov    cl,BYTE PTR [ecx+ebx*8+0x501b1a43]
  426537:	sub    eax,0x7df5c92f
  42653c:	dec    dx
  42653e:	ficomp DWORD PTR [eax]
  426540:	idiv   DWORD PTR [ecx]
  426542:	aam    0x42
  426544:	outs   dx,DWORD PTR ds:[esi]
  426545:	adc    al,0x5c
  426547:	bound  edx,QWORD PTR [edx]
  426549:	xchg   ebp,eax
  42654a:	leave  
  42654b:	jmp    0x42659e
  42654d:	aas    
  42654e:	xchg   ebp,eax
  42654f:	rcl    DWORD PTR [esi],0xfd
  426552:	jl     0x42656f
  426554:	in     eax,0x1c
  426556:	push   edi
  426557:	lds    esi,FWORD PTR [esi]
  426559:	sahf   
  42655a:	jns    0x4264e8
  42655c:	cmp    bl,BYTE PTR [eax+edi*8-0x5b]
  426560:	test   BYTE PTR [ecx+0x7098faca],ch
  426566:	fild   QWORD PTR [ecx+esi*2]
  426569:	stos   BYTE PTR es:[edi],al
  42656a:	sbb    BYTE PTR ds:0xe374,dh
	...
  42657c:	inc    eax
  42657d:	stos   BYTE PTR es:[edi],al
  42657e:	pop    edx
  42657f:	sbb    bh,dl
  426581:	cli    
  426582:	inc    eax
  426583:	cli    
  426584:	outs   dx,BYTE PTR ds:[esi]
  426585:	jmp    0x9ff1:0xfc30e400
  42658c:	fcomp  st(3)
  42658e:	add    DWORD PTR [eax],eax
  426590:	mov    al,BYTE PTR [edx]
  426592:	add    BYTE PTR [eax],al
  426594:	or     al,al
  426596:	cmp    ebx,DWORD PTR [edi-0x51]
  426599:	inc    si
  42659b:	add    DWORD PTR [ebp-0x78c1752f],ecx
  4265a1:	inc    ebx
  4265a2:	data16 xchg dl,ah
  4265a5:	adc    cl,bl
  4265a7:	adc    eax,0x4c0c80f0
  4265ac:	retf   
  4265ad:	mov    ah,BYTE PTR [eax+edi*2]
  4265b0:	(bad)
  4265b3:	cwde   
  4265b4:	xor    cl,bl
  4265b6:	dec    ebp
  4265b7:	cmp    BYTE PTR [ebx-0x23],ch
  4265ba:	in     eax,dx
  4265bb:	jmp    0x6f80:0x23359a64
  4265c2:	pusha  
  4265c3:	jp     0x4265b9
  4265c5:	sbb    BYTE PTR [edi-0x21],0xe9
  4265c9:	je     0x42663a
  4265cb:	adc    eax,0x8da0b1fc
  4265d0:	je     0x426588
  4265d2:	scas   al,BYTE PTR es:[edi]
  4265d3:	mov    ch,0x72
  4265d5:	in     eax,dx
  4265d6:	adc    al,0x4e
  4265d8:	sbb    BYTE PTR [ebx-0x34c825c9],ch
  4265de:	mov    esp,0xea6942e3
  4265e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265e4:	mov    edx,0xb5d4d214
  4265e9:	sbb    al,cl
  4265eb:	mul    DWORD PTR [ebx+0x65625966]
  4265f1:	mov    esp,fs
  4265f3:	fcomp  QWORD PTR [ebp-0x46]
  4265f6:	popf   
  4265f7:	not    DWORD PTR [ecx+0x6027ff12]
  4265fd:	cmp    eax,0xb12b6d3e
  426602:	bound  ebp,QWORD PTR [ecx+0x19]
  426605:	mov    ebx,0xd765a96f
  42660a:	cmp    eax,0x18c02d82
  42660f:	adc    bl,BYTE PTR [eax+0x17269154]
  426615:	mov    esp,0x6d525cf9
  42661a:	repz lea edi,[ebx+edi*4]
  42661e:	scas   al,BYTE PTR es:[edi]
  42661f:	add    eax,0x236bd726
  426624:	xchg   esi,eax
  426625:	mov    esp,0xafebbd20
  42662a:	add    cl,ch
  42662c:	enter  0x5d5e,0x90
  426630:	hlt    
  426631:	shl    BYTE PTR [edx+0x5b],cl
  426634:	clc    
  426635:	sbb    DWORD PTR ds:0xaa57f6a3,esi
  42663b:	push   edi
  42663c:	sub    eax,0xb033fed3
  426641:	(bad)  
  426642:	das    
  426643:	(bad)  
  426644:	sti    
  426645:	mov    ah,BYTE PTR [edi]
  426647:	sbb    DWORD PTR [eax+0x6c0c502b],0xaacfd155
  426651:	imul   eax,DWORD PTR fs:[ebp-0x205ce075],0x10302d6f
  42665c:	shr    DWORD PTR [ecx],0xea
  42665f:	hlt    
  426660:	and    al,BYTE PTR [ecx-0x61]
  426663:	pushf  
  426664:	mov    ah,0x41
  426666:	and    al,0x93
  426668:	ret    
  426669:	inc    esi
  42666a:	and    DWORD PTR [ebx-0x34f03afd],ebp
  426670:	sbb    edi,0x60ca0721
  426676:	add    al,0xf9
  426678:	test   eax,0x8a89fda8
  42667d:	jge    0x4266fc
  42667f:	mov    edi,0x4524e5fc
  426684:	jne    0x4266d4
  426686:	dec    eax
  426687:	pop    es
  426688:	pop    ds
  426689:	cmp    edi,DWORD PTR [esi-0x6d9ae81d]
  42668f:	xor    bl,BYTE PTR [ecx-0xfd6e235]
  426695:	icebp  
  426696:	std    
  426697:	mov    eax,ds:0x1e8bbd8f
  42669c:	and    BYTE PTR [edi+0x1d],0xdb
  4266a0:	repz mov WORD PTR [ebx-0x19],gs
  4266a4:	popf   
  4266a5:	and    ebp,DWORD PTR [edx+0x3f6059c0]
  4266ab:	sbb    DWORD PTR [edx+0x2c],0xe20ee29c
  4266b2:	or     eax,0xcdac7271
  4266b7:	pop    ds
  4266b8:	bound  esi,QWORD PTR [edi+0x26]
  4266bb:	adc    ebp,ecx
  4266bd:	ss sahf 
  4266bf:	cmp    BYTE PTR [eax],dh
  4266c1:	pop    ds
  4266c2:	and    al,ch
  4266c4:	and    DWORD PTR [ecx-0x44eb4810],esi
  4266ca:	add    BYTE PTR [eax],ch
  4266cc:	or     ah,ch
  4266ce:	mov    bh,0x95
  4266d0:	(bad)  
  4266d1:	xor    eax,0xc5b364b3
  4266d6:	(bad)  
  4266d7:	dec    edi
  4266d8:	pop    ebp
  4266d9:	push   eax
  4266da:	retf   
  4266db:	push   cs
  4266dc:	dec    BYTE PTR ds:0xafe6c9bf
  4266e2:	xor    BYTE PTR [eax-0x68],al
  4266e5:	adc    eax,0xe4be340b
  4266ea:	popf   
  4266eb:	jecxz  0x42671a
  4266ed:	in     al,dx
  4266ee:	cmp    BYTE PTR [eax+0x1],al
  4266f1:	lea    eax,[ecx-0x54]
  4266f4:	out    dx,al
  4266f5:	jl     0x426770
  4266f7:	rcl    BYTE PTR [ecx],0xb0
  4266fa:	jb     0x4266cf
  4266fc:	mov    ebx,0x80ab3001
  426701:	push   edi
  426702:	sub    ah,BYTE PTR [ebp-0x137288c2]
  426708:	fs push esi
  42670a:	out    dx,eax
  42670b:	sti    
  42670c:	jb     0x426787
  42670e:	push   es
  42670f:	xor    BYTE PTR [eax],dh
  426711:	mov    esp,0x7276b0eb
  426716:	es or  eax,0x345791a3
  42671c:	mov    dl,0x29
  42671e:	push   ecx
  42671f:	inc    eax
  426720:	fldl2t 
  426722:	xor    al,0xc1
  426724:	push   edi
  426725:	jmp    0x9c4525a4
  42672a:	pop    edx
  42672b:	xor    DWORD PTR [esi-0x57],ebp
  42672e:	adc    eax,0xbed5f9ce
  426733:	dec    edi
  426734:	test   DWORD PTR [edx+0x2c13ee3f],ebx
  42673a:	cmp    eax,0xb3011037
  42673f:	mov    al,0x6a
  426741:	push   esp
  426742:	jo     0x426786
  426744:	lea    di,[edx+0x56]
  426748:	lea    edi,[ebx+0x9e08974]
  42674e:	lea    ebp,[ecx+0x3a]
  426751:	mov    esi,0x5512b228
  426756:	nop
  426757:	data16 mov bh,0xc3
  42675a:	and    al,0x54
  42675c:	mov    ebx,0x1ef524eb
  426761:	enter  0x4c7b,0xef
  426765:	in     eax,dx
  426766:	sub    ah,BYTE PTR [ebp-0x79]
  426769:	push   edi
  42676a:	dec    ebx
  42676b:	pop    ss
  42676c:	lea    ecx,[ebx+0x5e34bba0]
  426772:	ja     0x4266fe
  426774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426775:	cmc    
  426776:	jbe    0x426778
  426778:	jge    0x426742
  42677a:	xor    BYTE PTR [eax-0x2dd2169a],ah
  426780:	loop   0x42671d
  426782:	xor    ebx,DWORD PTR [eax-0x6f]
  426785:	arpl   WORD PTR [edi],bx
  426787:	dec    ax
  426789:	ret    0xe012
  42678c:	lahf   
  42678d:	xchg   ebx,eax
  42678e:	mov    al,0x1f
  426790:	push   0x1f
  426792:	sbb    al,0x41
  426794:	arpl   WORD PTR [ecx-0x5e],cx
  426797:	inc    esi
  426798:	sbb    al,0xb9
  42679a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42679b:	mov    ss,edx
  42679d:	(bad)  
  42679e:	push   ecx
  42679f:	dec    esp
  4267a0:	das    
  4267a1:	xor    eax,0x513e7e42
  4267a6:	imul   ecx,DWORD PTR [edi+esi*4-0x12],0xffffff93
  4267ab:	adc    eax,0x72075183
  4267b0:	ror    BYTE PTR [ebp+ebp*8-0x7910afe0],1
  4267b7:	push   0xffffffee
  4267b9:	and    eax,0x1c0e31b4
  4267be:	jo     0x42679c
  4267c0:	arpl   WORD PTR cs:0x80496009,bp
  4267c7:	push   cs
  4267c8:	adc    al,0x49
  4267ca:	icebp  
  4267cb:	dec    edi
  4267cc:	sahf   
  4267cd:	popf   
  4267ce:	cdq    
  4267cf:	mov    ?,WORD PTR [edi-0x59]
  4267d2:	sub    edx,DWORD PTR [eax]
  4267d4:	or     edx,edx
  4267d6:	dec    edi
  4267d7:	es push ebx
  4267d9:	sub    DWORD PTR [esi+0xa],esp
  4267dc:	rcl    DWORD PTR [esi+ecx*4],1
  4267df:	add    BYTE PTR ds:0x75f66c93,al
  4267e5:	xchg   DWORD PTR [esi],esp
  4267e7:	cmp    esp,DWORD PTR [eax+eax*1+0x19]
  4267eb:	xor    BYTE PTR [edi],cl
  4267ed:	dec    eax
  4267ee:	fdivr  st,st(2)
  4267f0:	arpl   WORD PTR [ebx-0x3149fa4a],dx
  4267f6:	and    ah,BYTE PTR [eax]
  4267f8:	aad    0xc
  4267fa:	ins    BYTE PTR es:[edi],dx
  4267fb:	jae    0x4267a8
  4267fd:	sub    BYTE PTR [edx],0xc4
  426800:	ja     0x426826
  426802:	fsub   QWORD PTR [esi+0x643c4228]
  426808:	push   0xffffff8a
  42680a:	cwde   
  42680b:	bound  esp,QWORD PTR [esi+0x3d]
  42680e:	sbb    eax,0x11365f37
  426813:	test   dl,ah
  426815:	mov    esi,0x115a9680
  42681a:	rol    DWORD PTR [edi],1
  42681c:	std    
  42681d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  42682a:	add    BYTE PTR [eax],al
  42682c:	mov    dh,0xe4
  42682e:	xlat   BYTE PTR ds:[ebx]
  42682f:	push   esp
  426830:	xlat   BYTE PTR ds:[ebx]
  426831:	ja     0x4267ea
  426833:	out    0xf3,al
  426835:	ss icebp 
  426837:	mov    esp,0x56ada7e2
  42683c:	(bad)  
  42683d:	fiadd  WORD PTR [ecx]
  42683f:	add    BYTE PTR [edx-0x1bfffffe],cl
  426845:	push   ebp
  426846:	cmp    al,0xe3
  426848:	(bad)  
  42684a:	and    eax,0xdc13e4c9
  42684f:	loop   0x426845
  426851:	dec    esi
  426852:	jne    0x42687c
  426854:	sahf   
  426855:	cmp    eax,0xff278094
  42685a:	das    
  42685b:	stc    
  42685c:	mov    al,ds:0x1da921ab
  426861:	int3   
  426862:	cld    
  426863:	imul   esp,ebx,0xffffff81
  426866:	mov    eax,0x7da4e53f
  42686b:	mov    cl,0x7a
  42686d:	and    dh,BYTE PTR [esi-0x3c]
  426870:	aad    0x73
  426872:	dec    edx
  426873:	dec    DWORD PTR [esi+0x71]
  426876:	inc    ebp
  426877:	sti    
  426878:	inc    esi
  426879:	je     0x42685f
  42687b:	add    DWORD PTR [esi],ecx
  42687d:	or     ebx,DWORD PTR [ebp-0x42]
  426880:	mov    ds:0xe8e58c59,al
  426885:	fcomp  DWORD PTR [ebp+0x1c]
  426888:	jmp    0x426867
  42688a:	lea    edi,[esp+ecx*8-0xe8ea9ff]
  426891:	jecxz  0x4268e3
  426893:	push   eax
  426894:	sti    
  426895:	and    edx,0xcbc679a2
  42689b:	fs into 
  42689d:	shl    edi,0x19
  4268a0:	dec    esp
  4268a1:	ret    
  4268a2:	push   ecx
  4268a3:	cld    
  4268a4:	mov    bp,0xb02f
  4268a8:	mov    bh,BYTE PTR [ebp+0x31c19654]
  4268ae:	add    al,0x6a
  4268b0:	add    BYTE PTR [ebp+esi*2+0x7e425eb6],dh
  4268b7:	repnz in eax,dx
  4268b9:	push   0x3
  4268bb:	push   es
  4268bc:	rol    DWORD PTR [esi],cl
  4268be:	stos   DWORD PTR es:[edi],eax
  4268bf:	push   edi
  4268c0:	xchg   edi,eax
  4268c1:	and    eax,0xca9775ef
  4268c6:	retf   0x2d9e
  4268c9:	lods   al,BYTE PTR ds:[esi]
  4268ca:	mov    eax,DWORD PTR [ebp+0x6d]
  4268cd:	test   al,0x30
  4268cf:	add    DWORD PTR [ebp+0x70c4aea4],ebp
  4268d5:	jb     0x42685d
  4268d7:	cmp    ah,BYTE PTR [ebx]
  4268d9:	test   bh,cl
  4268db:	xchg   ebx,eax
  4268dc:	ins    BYTE PTR es:[edi],dx
  4268dd:	inc    eax
  4268de:	and    BYTE PTR [edi-0x513c503d],al
  4268e4:	pop    edx
  4268e5:	or     ebp,0xffffff8d
  4268e8:	jbe    0x4268d2
  4268ea:	in     eax,dx
  4268eb:	test   BYTE PTR [edx],al
  4268ed:	adc    ebp,DWORD PTR [esi-0x5ecfbaa0]
  4268f3:	ja     0x426904
  4268f5:	push   ecx
  4268f6:	inc    edx
  4268f7:	out    dx,eax
  4268f8:	jns    0x42692b
  4268fa:	stos   BYTE PTR es:[edi],al
  4268fb:	jg     0x4268ce
  4268fd:	adc    eax,0x6e2b9917
  426902:	cmc    
  426903:	mov    eax,ds:0xbabf4527
  426908:	sub    bl,BYTE PTR [esi-0x47]
  42690b:	inc    eax
  42690c:	gs aad 0x5f
  42690f:	out    0x71,al
  426911:	lods   eax,DWORD PTR ds:[esi]
  426912:	iret   
  426913:	stos   DWORD PTR es:[edi],eax
  426914:	icebp  
  426915:	sbb    al,0x1d
  426917:	scas   eax,DWORD PTR es:[edi]
  426918:	rcl    DWORD PTR [esi+0x98f9e60],cl
  42691e:	add    dh,BYTE PTR [ebx+0x12]
  426921:	inc    ecx
  426922:	push   eax
  426923:	fild   QWORD PTR [edx]
  426925:	and    DWORD PTR [ebx],esp
  426927:	push   ebx
  426928:	fdivr  st(7),st
  42692a:	sbb    eax,0xacd0885e
  42692f:	ins    BYTE PTR es:[edi],dx
  426930:	inc    ebp
  426931:	je     0x4268c8
  426933:	inc    ebp
  426934:	pop    ecx
  426935:	jg     0x426923
  426937:	pop    ecx
  426938:	fs out 0x88,al
  42693b:	push   ss
  42693c:	mov    al,ah
  42693e:	test   al,0x13
  426940:	cli    
  426941:	scas   eax,DWORD PTR es:[edi]
  426942:	inc    edx
  426943:	arpl   bx,bx
  426945:	adc    eax,0xf72808b4
  42694a:	imul   esp,ecx,0xad32aed0
  426950:	pop    edx
  426951:	mov    al,0x6e
  426953:	push   es
  426954:	js     0x4269ba
  426956:	add    edx,DWORD PTR [edi]
  426958:	fimul  WORD PTR [ebx+0x5f]
  42695b:	jmp    0x4269c9
  42695d:	push   edx
  42695e:	dec    eax
  42695f:	xchg   BYTE PTR [edx],bl
  426961:	gs out 0xd,al
  426964:	mov    ds:0xeac28e22,eax
  426969:	add    eax,0x7901f39
  42696e:	xchg   edx,eax
  42696f:	mov    ch,0xaf
  426971:	and    ch,BYTE PTR [ecx]
  426973:	sbb    eax,DWORD PTR [edx-0x31245dcd]
  426979:	mov    al,0x71
  42697b:	jns    0x4269cd
  42697d:	jp     0x426984
  42697f:	(bad)  [edx]
  426981:	push   0x3c
  426983:	out    dx,eax
  426984:	sbb    al,0xac
  426986:	add    eax,0x22067649
  42698b:	sub    BYTE PTR [eax-0x7eed57c0],dl
  426991:	push   cs
  426992:	lea    esi,[ebp-0x70]
  426995:	xchg   edi,eax
  426996:	push   cs
  426997:	push   ss
  426998:	add    DWORD PTR [edi],ebp
  42699a:	call   DWORD PTR [esi-0x11]
  42699d:	jno    0x426925
  42699f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269a0:	jb     0x4269ff
  4269a2:	lahf   
  4269a3:	mov    ah,0x4d
  4269a5:	outs   dx,DWORD PTR ds:[esi]
  4269a6:	pop    edi
  4269a7:	sar    DWORD PTR [ebp-0x60950c1f],cl
  4269ad:	pop    esp
  4269ae:	cmp    BYTE PTR [eax+0x35d582ce],bh
  4269b4:	in     eax,0x2b
  4269b6:	push   0xbebb5875
  4269bb:	retf   0xdd9e
  4269be:	or     BYTE PTR [ecx],0xbf
  4269c1:	call   0xc3e38bef
  4269c6:	bound  edx,QWORD PTR [ebx]
  4269c8:	xchg   dh,ah
  4269ca:	mov    ecx,DWORD PTR [ebx+0x50c323e3]
  4269d0:	(bad)  
  4269d1:	(bad)  
  4269d2:	cld    
  4269d3:	arpl   WORD PTR [edx+0x57],sp
  4269d6:	not    BYTE PTR [edi-0x3a93e858]
  4269dc:	cdq    
  4269dd:	mov    ah,0xe9
  4269df:	ja     0x426967
  4269e1:	mov    ch,0x3b
  4269e3:	out    dx,eax
  4269e4:	jnp    0x4269b4
  4269e6:	leave  
  4269e7:	inc    eax
  4269e8:	clc    
  4269e9:	popf   
  4269ea:	mov    esi,DWORD PTR [ebx]
  4269ec:	fbld   TBYTE PTR [eax+edi*4+0x4ce78498]
  4269f3:	xchg   DWORD PTR [edx+eax*8+0x2],esp
  4269f7:	sbb    ebp,edx
  4269f9:	sub    al,0xc3
  4269fb:	mov    ch,0x96
  4269fd:	pop    ecx
  4269fe:	adc    BYTE PTR [ebp+edi*4-0x62f01459],ch
  426a05:	mov    dh,0x89
  426a07:	mov    eax,ds:0xf83a3d8
  426a0c:	shl    BYTE PTR [esp+edx*8-0x2c783593],cl
  426a13:	pusha  
  426a14:	inc    ecx
  426a15:	sbb    eax,0x4790b103
  426a1a:	xchg   ebx,eax
  426a1b:	or     eax,0x952b6922
  426a20:	pop    esp
  426a21:	imul   BYTE PTR [edi+0x43260a4b]
  426a27:	sti    
  426a28:	push   ebp
  426a29:	push   edi
  426a2a:	or     BYTE PTR [ecx],ch
  426a2c:	push   cs
  426a2d:	pop    DWORD PTR [eax]
  426a2f:	leave  
  426a30:	rcl    ecx,0x22
  426a33:	rcr    DWORD PTR [edi-0x59],1
  426a36:	or     al,0x8
  426a38:	push   ebp
  426a39:	test   DWORD PTR [eax],0xe1887c89
  426a3f:	fstp   TBYTE PTR [ecx+ebx*8-0x37]
  426a43:	pop    esi
  426a44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a45:	sahf   
  426a46:	imul   edx,DWORD PTR [esi+0x20],0x38
  426a4a:	int    0x98
  426a4c:	pop    ds
  426a4d:	(bad)  
  426a4e:	xor    cl,BYTE PTR [ebx]
  426a50:	mov    al,0xc2
  426a52:	or     dh,BYTE PTR [eax+ecx*8+0x43]
  426a56:	cdq    
  426a57:	xchg   edi,eax
  426a58:	mov    ch,0xe
  426a5a:	mov    al,0xd4
  426a5c:	out    0x88,eax
  426a5e:	ret    0xf505
  426a61:	out    0xc0,eax
  426a63:	les    esp,FWORD PTR [ebp+0x58211382]
  426a69:	imul   esi,DWORD PTR [ebx+0x6e27e7f0],0x7d
  426a70:	mov    dh,0x24
  426a72:	pop    esi
  426a73:	sub    eax,0x4627e54e
  426a78:	mov    DWORD PTR [ebx+0x69],edi
  426a7b:	in     eax,0x8c
  426a7d:	adc    DWORD PTR [edx],edi
  426a7f:	sbb    edi,DWORD PTR [esi]
  426a81:	jg     0x426a67
  426a83:	and    al,0x4b
  426a85:	pop    edx
  426a86:	test   DWORD PTR [edx+0xd],ecx
  426a89:	out    0xf7,eax
  426a8b:	xchg   BYTE PTR [edx],bl
  426a8d:	mov    DWORD PTR [edi-0xa],0x4d0f8f78
  426a94:	dec    esp
  426a95:	ret    0x6122
  426a98:	sti    
  426a99:	jns    0x426a45
  426a9b:	mov    ebp,0xa97f296b
  426aa0:	jns    0x426ac4
  426aa2:	push   ds
  426aa3:	cli    
  426aa4:	(bad)  
  426aa5:	and    eax,esp
  426aa7:	sbb    BYTE PTR [edi+0x4538ce9],al
  426aad:	pop    ebp
  426aae:	inc    edx
  426aaf:	mov    edi,0xbbe376f3
  426ab4:	fs std 
  426ab6:	imul   esp,edi,0x26
  426ab9:	or     DWORD PTR [ebp+0x7b],esi
  426abc:	mov    bh,0x4d
  426abe:	mov    esp,0xec69e20b
  426ac3:	push   esp
  426ac4:	lea    esi,[eax]
  426ac6:	popa   
  426ac7:	lea    ebx,[ebp-0x7aca2c96]
  426acd:	xchg   DWORD PTR [eax],eax
	...
  426adb:	add    dl,bh
  426add:	rcl    DWORD PTR ds:0xfac73d07,cl
  426ae3:	push   DWORD PTR ds:0x2b1c7bfe
  426ae9:	in     al,0x87
  426aeb:	test   eax,0x1e0ec
  426af0:	mov    al,BYTE PTR [edx]
  426af2:	add    BYTE PTR [eax],al
  426af4:	out    0x73,al
  426af6:	inc    esi
  426af7:	sbb    bh,dh
  426af9:	pop    esi
  426afa:	sub    bh,BYTE PTR [ecx+0x3a2add4]
  426b00:	cwde   
  426b01:	repz daa 
  426b03:	push   cs
  426b04:	jae    0x426b51
  426b06:	data16 out 0x75,al
  426b09:	clc    
  426b0a:	sbb    DWORD PTR [esi-0x4eea6d76],esi
  426b10:	xchg   esp,eax
  426b11:	xchg   ebx,eax
  426b12:	popa   
  426b13:	out    0xf4,al
  426b15:	xchg   edi,eax
  426b16:	inc    eax
  426b17:	mov    dh,0xbe
  426b19:	loopne 0x426add
  426b1b:	and    BYTE PTR [edx],bh
  426b1d:	clc    
  426b1e:	clc    
  426b1f:	and    al,0x7e
  426b21:	std    
  426b22:	pushf  
  426b23:	gs adc cl,bh
  426b26:	dec    ebp
  426b27:	adc    BYTE PTR [ecx+ebp*8],ch
  426b2a:	and    BYTE PTR ds:0x4f373bd7,cl
  426b30:	adc    BYTE PTR [edi-0x1f55f43b],bh
  426b36:	and    cl,0x4a
  426b39:	push   esp
  426b3a:	aad    0x3c
  426b3c:	loop   0x426b49
  426b3e:	inc    eax
  426b3f:	mov    dh,BYTE PTR [eax]
  426b41:	fwait
  426b42:	je     0x426af3
  426b44:	scas   eax,DWORD PTR es:[edi]
  426b45:	rcl    DWORD PTR [ebp-0x53],0xd2
  426b49:	xor    ecx,DWORD PTR [edx]
  426b4b:	retf   0x17be
  426b4e:	xchg   esp,eax
  426b4f:	aas    
  426b50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b51:	js     0x426b84
  426b53:	scas   al,BYTE PTR es:[edi]
  426b54:	mov    ch,BYTE PTR [edx+ebp*8-0x31317611]
  426b5b:	stos   DWORD PTR es:[edi],eax
  426b5c:	add    ebp,ecx
  426b5e:	aaa    
  426b5f:	imul   ecx,ecx,0xffffff97
  426b62:	ja     0x426b2a
  426b64:	mov    esp,0x7718d5d3
  426b69:	fistp  QWORD PTR [ebx+0x2a]
  426b6c:	add    al,0x20
  426b6e:	adc    DWORD PTR [eax-0x5e],0xcb84379e
  426b75:	les    edx,FWORD PTR [esi+0x22f20e49]
  426b7b:	std    
  426b7c:	nop
  426b7d:	push   edi
  426b7e:	repnz cmp al,0x39
  426b81:	iret   
  426b82:	jl     0x426bdf
  426b84:	data16 int3 
  426b86:	and    al,0x14
  426b88:	ret    0xdee6
  426b8b:	fsubr  DWORD PTR [esi-0x3829f816]
  426b91:	sub    DWORD PTR [ebx+esi*2-0x2a],esi
  426b95:	sub    ah,ah
  426b97:	gs sub ecx,ebp
  426b9a:	ds (bad) 
  426b9d:	push   ds
  426b9e:	bnd jge 0x426bff
  426ba1:	arpl   si,dx
  426ba3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ba4:	cmp    al,0x38
  426ba6:	mov    ebp,0x9a429ea6
  426bab:	jp     0x426b6e
  426bad:	or     eax,0xa54ac219
  426bb2:	(bad)  
  426bb3:	cld    
  426bb4:	in     al,dx
  426bb5:	and    DWORD PTR [esi-0x47],edi
  426bb8:	test   edx,edx
  426bba:	sub    bl,ah
  426bbc:	inc    esp
  426bbd:	jo     0x426b8d
  426bbf:	aaa    
  426bc0:	mov    WORD PTR [ebp-0x69],ss
  426bc3:	xchg   ecx,eax
  426bc4:	cmp    BYTE PTR [ecx+0xf0e0063],dh
  426bca:	push   cs
  426bcb:	adc    al,0x6c
  426bcd:	pop    es
  426bce:	jmp    0x23b7:0xb1ba5e
  426bd5:	push   esp
  426bd6:	out    dx,eax
  426bd7:	add    DWORD PTR [ebx+eax*8],ebx
  426bda:	dec    edx
  426bdb:	push   edx
  426bdc:	push   DWORD PTR [edx-0x1]
  426bdf:	ja     0x426bc2
  426be1:	dec    DWORD PTR [ebx+ebx*1-0x1ab93c80]
  426be8:	add    al,0x86
  426bea:	mov    cl,bh
  426bec:	pop    ss
  426bed:	mov    ch,0xba
  426bef:	lods   al,BYTE PTR ds:[esi]
  426bf0:	retf   0xb507
  426bf3:	add    al,0x71
  426bf5:	sbb    DWORD PTR [esp+edx*8-0x12],ecx
  426bf9:	mov    dh,0x45
  426bfb:	int3   
  426bfc:	clc    
  426bfd:	fnstsw WORD PTR [eax+0x47]
  426c00:	mov    al,ds:0xe89bf9d5
  426c05:	or     ecx,DWORD PTR [edx+0x327593a]
  426c0b:	loop   0x426c12
  426c0d:	inc    edx
  426c0e:	sbb    DWORD PTR [eax+esi*8-0x6e],edx
  426c12:	loopne 0x426c53
  426c14:	in     eax,dx
  426c15:	test   DWORD PTR [eax+esi*4],ebp
  426c18:	cmp    edx,ecx
  426c1a:	push   edx
  426c1b:	shr    BYTE PTR [eax],cl
  426c1d:	into   
  426c1e:	mov    eax,ds:0x3375055b
  426c23:	gs cmp eax,0x80013cff
  426c29:	cwde   
  426c2a:	fnstenv [ecx-0x7140e98]
  426c30:	pop    ebx
  426c31:	lea    ecx,[ebp+0x70edff0e]
  426c37:	repnz mov dl,0x8c
  426c3a:	das    
  426c3b:	and    ch,BYTE PTR [ebx+0x55]
  426c3e:	js     0x426bc2
  426c40:	ds jnp 0x426c75
  426c43:	xchg   esi,eax
  426c44:	in     al,0x35
  426c46:	in     eax,0x6f
  426c48:	pop    esp
  426c49:	jae    0x426ca6
  426c4b:	jno    0x426c7c
  426c4d:	les    edi,FWORD PTR [eax-0x1b]
  426c50:	mov    al,BYTE PTR [edi]
  426c52:	dec    ecx
  426c53:	jbe    0x426c4d
  426c55:	int    0x2f
  426c57:	and    DWORD PTR [ebx+0x10],esp
  426c5a:	xor    edi,DWORD PTR [eax+0x34dadbe1]
  426c60:	dec    ebp
  426c61:	stos   DWORD PTR es:[edi],eax
  426c62:	clc    
  426c63:	cdq    
  426c64:	test   al,0xb4
  426c66:	jmp    0x15ea:0xea95033b
  426c6d:	psubw  mm2,QWORD PTR [edx+0x1f14071a]
  426c74:	or     BYTE PTR [edx+0x68a16200],ch
  426c7a:	mov    bh,0xe1
  426c7c:	ds cmp ch,al
  426c7f:	(bad)  
  426c80:	push   esp
  426c81:	call   0xe2e054ae
  426c86:	dec    ebp
  426c87:	lock pop ss
  426c89:	dec    eax
  426c8a:	in     eax,dx
  426c8b:	rol    DWORD PTR [esi+esi*1-0x156d4388],1
  426c92:	adc    cl,bl
  426c94:	cmc    
  426c95:	mov    eax,ds:0x1d5e0883
  426c9a:	push   edi
  426c9b:	sub    bh,dl
  426c9d:	mov    ds:0xbad29360,al
  426ca2:	push   ebx
  426ca3:	ret    
  426ca4:	out    dx,eax
  426ca5:	leave  
  426ca6:	lods   eax,DWORD PTR ds:[esi]
  426ca7:	(bad)  
  426ca8:	enter  0x42ef,0xb2
  426cac:	push   ds
  426cad:	fnstenvw [edi+eax*2]
  426cb1:	outs   dx,BYTE PTR ds:[esi]
  426cb2:	sbb    esp,ebx
  426cb4:	clc    
  426cb5:	pop    ebp
  426cb6:	push   ebp
  426cb7:	mov    cl,0x41
  426cb9:	sbb    ecx,eax
  426cbb:	mov    al,ds:0xad787927
  426cc0:	shl    DWORD PTR [edi-0x5b],cl
  426cc3:	sub    BYTE PTR ds:0xa837b559,dl
  426cc9:	fbstp  TBYTE PTR [edi-0x2813bac8]
  426ccf:	test   eax,0x5742ead6
  426cd4:	rcr    DWORD PTR [ecx-0x62],0x8f
  426cd8:	add    al,0x4b
  426cda:	leave  
  426cdb:	fld    QWORD PTR [ebx-0x26]
  426cde:	sub    eax,0x4e6ede60
  426ce3:	mov    ?,WORD PTR [ecx+0x63]
  426ce6:	bound  esi,QWORD PTR [edx-0x4a]
  426ce9:	mov    WORD PTR [ecx-0x138d1996],fs
  426cef:	test   BYTE PTR [ebp+eiz*8-0x1d],bh
  426cf3:	push   ecx
  426cf4:	in     eax,0xb6
  426cf6:	pop    ds
  426cf7:	jmp    DWORD PTR [esi-0x494bf116]
  426cfd:	es push cs
  426cff:	fdiv   DWORD PTR [esi+0x6e]
  426d02:	test   BYTE PTR [edx],dh
  426d04:	std    
  426d05:	or     DWORD PTR [edi+0x196fa2d1],edi
  426d0b:	stos   DWORD PTR es:[edi],eax
  426d0c:	jbe    0x426d7e
  426d0e:	ret    0xc21
  426d11:	jne    0x426d14
  426d13:	jp     0x426cea
  426d15:	aas    
  426d16:	dec    esp
  426d17:	pop    edi
  426d18:	add    BYTE PTR [ecx],0x6f
  426d1b:	push   ebp
  426d1c:	xadd   BYTE PTR [esi+eax*1],dl
  426d20:	ret    0x53ab
  426d23:	and    eax,0x39b01577
  426d28:	jmp    DWORD PTR [esi-0x668fe204]
  426d2e:	fistp  QWORD PTR [eax-0x68bda322]
  426d34:	mov    al,ds:0x468e5813
  426d39:	es pop eax
  426d3b:	outs   dx,DWORD PTR ds:[esi]
  426d3c:	xchg   edx,eax
  426d3d:	jl     0x426d80
  426d3f:	mov    edi,0x3fd1e317
  426d44:	mov    eax,ds:0xa9cceebc
  426d49:	test   esp,0xeb80b5c1
  426d4f:	xor    al,0x43
  426d51:	cmp    DWORD PTR [ecx+0x182646ea],esp
  426d57:	fwait
  426d58:	and    dl,BYTE PTR [edi+0x1de06a0]
  426d5e:	cs lahf 
  426d60:	outs   dx,BYTE PTR ds:[esi]
  426d61:	es jge 0x426dba
  426d64:	or     DWORD PTR [eax+0x4d],ecx
  426d67:	mov    esp,0x969721be
  426d6c:	xor    eax,0xd055a938
  426d71:	ds sbb eax,0x15e38157
  426d77:	push   ebp
  426d78:	ror    DWORD PTR [edx-0x5ed41c8a],0x0
	...
  426d8b:	add    bh,cl
  426d8d:	neg    BYTE PTR [ebp-0x308442b0]
  426d93:	(bad)  
  426d94:	out    dx,eax
  426d95:	lods   al,BYTE PTR ds:[esi]
  426d96:	(bad)  
  426d97:	push   ss
  426d98:	push   ecx
  426d99:	sbb    edx,DWORD PTR [eax+0x1e37658]
  426d9f:	add    BYTE PTR [edx+0x21000002],cl
  426da5:	mov    WORD PTR [ecx-0x53],es
  426da8:	adc    BYTE PTR [edi-0x3fcb8add],cl
  426dae:	in     al,0x92
  426db0:	lods   al,BYTE PTR ds:[esi]
  426db1:	add    eax,0xa336a97e
  426db6:	xor    BYTE PTR [ebp-0x2a],cl
  426db9:	jmp    0x9a20:0xeaae1153
  426dc0:	pop    eax
  426dc1:	(bad)  
  426dc2:	jle    0x426d51
  426dc4:	neg    BYTE PTR [eax]
  426dc6:	call   DWORD PTR [ebp+eax*2-0x22]
  426dca:	dec    esi
  426dcb:	xlat   BYTE PTR ds:[ebx]
  426dcc:	add    ebp,DWORD PTR [edx-0xb0863d0]
  426dd2:	fild   WORD PTR [edx-0x5a]
  426dd5:	jne    0x426df3
  426dd7:	xor    ecx,esi
  426dd9:	enter  0x5f03,0x7c
  426ddd:	(bad)  
  426dde:	or     ch,dl
  426de0:	std    
  426de1:	test   eax,0x3db6b0b0
  426de6:	jns    0x426d96
  426de8:	stos   BYTE PTR es:[edi],al
  426de9:	xor    cl,BYTE PTR [ecx+0x14650cc5]
  426def:	daa    
  426df0:	ret    0x107c
  426df3:	sbb    BYTE PTR [ecx],bh
  426df5:	inc    esp
  426df6:	cmp    bh,cl
  426df8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426df9:	pusha  
  426dfa:	lods   eax,DWORD PTR ds:[esi]
  426dfb:	push   edi
  426dfc:	fs xchg edx,eax
  426dfe:	lods   al,BYTE PTR ds:[esi]
  426dff:	add    ebp,ebx
  426e01:	pop    ecx
  426e02:	fimul  DWORD PTR [ecx]
  426e04:	dec    esi
  426e05:	mov    ch,BYTE PTR [esi]
  426e07:	ds loope 0x426e13
  426e0a:	jo     0x426dc4
  426e0c:	ret    0xb34f
  426e0f:	pop    ss
  426e10:	or     al,0x5a
  426e12:	add    edi,DWORD PTR [eax+0x1c]
  426e15:	je     0x426e0b
  426e17:	aas    
  426e18:	ret    
  426e19:	es es loope 0x426dd1
  426e1d:	das    
  426e1e:	imul   edi,DWORD PTR [ecx],0x6ee1bbbd
  426e24:	push   esp
  426e25:	pushf  
  426e26:	inc    ebx
  426e27:	push   ds
  426e28:	outs   dx,BYTE PTR ds:[esi]
  426e29:	jne    0x426e45
  426e2b:	add    BYTE PTR [eax-0x2e022ce4],bl
  426e31:	repz (bad) 
  426e33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e34:	mov    ch,0xc
  426e36:	cmp    dl,BYTE PTR [esi+0x6e]
  426e39:	jns    0x426e01
  426e3b:	or     DWORD PTR [ebx+0x0],0xca4600f9
  426e42:	fnsave [edi+ebx*2]
  426e45:	in     al,0x9d
  426e47:	cdq    
  426e48:	adc    eax,0x8d8545b6
  426e4d:	adc    ah,BYTE PTR [eax]
  426e4f:	aas    
  426e50:	lds    ebx,FWORD PTR [esi+ebx*1-0x3c1ee26]
  426e57:	pop    edi
  426e58:	(bad)  
  426e59:	mov    edi,0xffc523f4
  426e5e:	add    eax,0x8f3310b
  426e63:	xchg   ecx,eax
  426e64:	test   eax,0xca0b8ca7
  426e69:	inc    eax
  426e6a:	sub    DWORD PTR [esi+0x482becf0],ecx
  426e70:	lods   eax,DWORD PTR ds:[esi]
  426e71:	idiv   ebx
  426e73:	in     al,0x8b
  426e75:	pop    es
  426e76:	mov    eax,DWORD PTR [eax-0x8]
  426e79:	popf   
  426e7a:	mov    ebx,0xc48f9b68
  426e7f:	icebp  
  426e80:	or     eax,0xdfeb623a
  426e85:	scas   eax,DWORD PTR es:[edi]
  426e86:	inc    ecx
  426e87:	push   ecx
  426e88:	add    ebp,DWORD PTR [edi+0x13]
  426e8b:	add    BYTE PTR [ebp-0x63],ch
  426e8e:	mov    eax,DWORD PTR [edi]
  426e90:	jnp    0x426f0c
  426e92:	fwait
  426e93:	mov    ah,0xd5
  426e95:	iret   
  426e96:	mov    bh,al
  426e98:	je     0x426e93
  426e9a:	xchg   edx,eax
  426e9b:	call   FWORD PTR [ecx-0x296248d2]
  426ea1:	shl    edi,1
  426ea3:	push   edi
  426ea4:	es scas al,BYTE PTR es:[edi]
  426ea6:	nop
  426ea7:	inc    esi
  426ea8:	add    edi,DWORD PTR [ebp+0x5acf8d34]
  426eae:	mov    dl,0x6d
  426eb0:	jae    0x426e9b
  426eb2:	sti    
  426eb3:	mov    edx,0xdd4e284a
  426eb8:	mov    edi,0xf8a91ed6
  426ebd:	pop    es
  426ebe:	jecxz  0x426ee9
  426ec0:	repnz or al,0xd4
  426ec3:	scas   al,BYTE PTR es:[edi]
  426ec4:	mov    ebx,0xfa2938ed
  426ec9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426eca:	ret    0xaf6
  426ecd:	mov    eax,0xa6808dba
  426ed2:	nop
  426ed3:	lock sub eax,0x70c05161
  426ed9:	sbb    al,BYTE PTR [ecx]
  426edb:	xchg   ebx,eax
  426edc:	dec    esi
  426edd:	cdq    
  426ede:	imul   esi,DWORD PTR [edi],0xffffffb0
  426ee1:	inc    ecx
  426ee2:	mov    edx,0xe37f81b9
  426ee7:	test   al,0x7c
  426ee9:	mov    al,0x4b
  426eeb:	xchg   BYTE PTR ds:0xfa78affe,cl
  426ef1:	pop    ss
  426ef2:	xor    al,0x32
  426ef4:	mov    al,0x3
  426ef6:	pop    ebp
  426ef7:	inc    ecx
  426ef8:	sbb    bh,BYTE PTR [ecx-0x5c]
  426efb:	push   0xffffffa3
  426efd:	fdivr  DWORD PTR [ebx]
  426eff:	shl    BYTE PTR [eax-0x3842fbc5],cl
  426f05:	or     DWORD PTR [ebx-0x72dcac2a],0x58765b1d
  426f0f:	xor    bl,ah
  426f11:	push   eax
  426f12:	mov    ss,WORD PTR [esi-0x2f]
  426f15:	xor    bh,BYTE PTR ds:0x7da5a239
  426f1b:	pop    esi
  426f1c:	jmp    0x4af6fe70
  426f21:	add    edi,DWORD PTR [ebp+0x50ff129f]
  426f27:	xchg   bl,ch
  426f29:	in     eax,dx
  426f2a:	mov    ds:0x95e06e88,eax
  426f2f:	mov    DWORD PTR [ecx+eax*2-0x183caf76],esp
  426f36:	(bad)  
  426f37:	fwait
  426f38:	jmp    0xd1b97a8c
  426f3d:	dec    edx
  426f3e:	fs pop ebp
  426f40:	ret    
  426f41:	sub    BYTE PTR [edx-0x5d53fc3c],cl
  426f47:	scas   eax,DWORD PTR es:[edi]
  426f48:	fild   QWORD PTR [esi-0x5cc4dcd1]
  426f4e:	cdq    
  426f4f:	mov    eax,0x9a3179a8
  426f54:	pop    eax
  426f55:	pop    ebp
  426f56:	mov    ebx,0xc11929f7
  426f5b:	mov    edx,0x237a6f33
  426f60:	dec    esi
  426f61:	sbb    esi,0xcc522aa6
  426f67:	jge    0x426f5f
  426f69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f6a:	pusha  
  426f6b:	push   es
  426f6c:	xor    al,0x90
  426f6e:	in     al,dx
  426f6f:	ret    
  426f70:	aas    
  426f71:	cmp    eax,0x5aa1795f
  426f76:	cmp    edx,edx
  426f78:	ins    DWORD PTR es:[edi],dx
  426f79:	mov    ah,0x17
  426f7b:	inc    edx
  426f7c:	les    esp,FWORD PTR [edi]
  426f7e:	pusha  
  426f7f:	ds mov edx,0xa502734d
  426f85:	sub    ebp,DWORD PTR [eax-0x31]
  426f88:	jp     0x426f36
  426f8a:	and    eax,0x15121b3f
  426f8f:	inc    edi
  426f90:	or     edi,DWORD PTR [esi+0x68]
  426f93:	leave  
  426f94:	xlat   BYTE PTR ds:[ebx]
  426f95:	or     al,0xfd
  426f97:	in     eax,dx
  426f98:	pop    eax
  426f99:	mov    edx,0xc5d4e4a7
  426f9e:	lock mov ecx,0xbf762c10
  426fa4:	in     al,0xb6
  426fa6:	out    0x46,eax
  426fa8:	popa   
  426fa9:	repnz std 
  426fab:	icebp  
  426fac:	and    BYTE PTR [ecx+0x69809f19],0x8
  426fb3:	sub    BYTE PTR ds:0xe460117f,0x74
  426fba:	sub    edx,eax
  426fbc:	jl     0x42703b
  426fbe:	jne    0x426ffb
  426fc0:	sbb    ah,dh
  426fc2:	dec    esp
  426fc3:	stos   DWORD PTR es:[edi],eax
  426fc4:	xchg   ecx,eax
  426fc5:	xchg   ecx,eax
  426fc6:	xor    edi,DWORD PTR [edi-0x3a]
  426fc9:	stc    
  426fca:	js     0x426fdc
  426fcc:	and    al,0x2b
  426fce:	loope  0x427001
  426fd0:	ret    0x7322
  426fd3:	sub    eax,0xc9015524
  426fd8:	sbb    ah,cl
  426fda:	mov    eax,0xe0524f04
  426fdf:	mov    ebx,ds
  426fe1:	pop    esi
  426fe2:	sbb    eax,DWORD PTR [edx-0x5f52c989]
  426fe8:	and    eax,0xa1127174
  426fed:	jne    0x426fec
  426fef:	jns    0x42705a
  426ff1:	out    0xb8,al
  426ff3:	fld    DWORD PTR [edx]
  426ff5:	adc    eax,0xb3314cfc
  426ffa:	adc    BYTE PTR [ebx-0x5bfbc671],dl
  427000:	add    ch,bl
  427002:	add    esp,DWORD PTR [ecx-0x78]
  427005:	push   0x4d
  427007:	adc    al,0xf2
  427009:	add    DWORD PTR [ebx-0x30],ecx
  42700c:	lods   eax,DWORD PTR ds:[esi]
  42700d:	xor    edi,DWORD PTR ds:0xa7085c76
  427013:	(bad)
  427016:	in     al,dx
  427017:	and    bl,bl
  427019:	rcl    ch,0x36
  42701c:	xchg   edi,eax
  42701d:	add    DWORD PTR [ebp+0x21],ebx
  427020:	js     0x427072
  427022:	mov    bh,0x8d
  427024:	pop    esp
  427025:	push   eax
  427026:	xor    BYTE PTR [eax+0x44],al
  427029:	mov    ds:0xd00b5d36,eax
	...
  42703a:	add    BYTE PTR [eax],al
  42703c:	push   0x6f1e2d23
  427041:	push   ds
  427042:	jnp    0x4270bb
  427044:	fisub  WORD PTR [ebp-0x79f74fca]
  42704a:	cdq    
  42704b:	mov    ch,0x0
  42704d:	out    0x1,al
  42704f:	add    BYTE PTR [edx-0x55fffffe],cl
  427055:	loope  0x4270b9
  427057:	int    0xda
  427059:	lock je 0x426fe8
  42705c:	push   ebp
  42705d:	pmulhuw mm3,mm5
  427060:	jp     0x42701d
  427062:	hlt    
  427063:	jge    0x4270b0
  427065:	lahf   
  427066:	mov    eax,ds:0xc8e2c9dd
  42706b:	shr    bl,cl
  42706d:	stc    
  42706e:	xchg   ecx,eax
  42706f:	cmp    eax,0x8ac786ce
  427074:	fild   QWORD PTR [ecx+0x3c]
  427077:	jecxz  0x4270e4
  427079:	fbstp  TBYTE PTR [edx+0x2f35d7f2]
  42707f:	ftst   
  427081:	stos   BYTE PTR es:[edi],al
  427082:	mov    ch,cl
  427084:	frstor [eax]
  427086:	std    
  427087:	div    BYTE PTR [edi+0x2fd7cbc5]
  42708d:	xor    BYTE PTR [ebx],al
  42708f:	jg     0x4270b2
  427091:	push   esp
  427092:	cs mov ebp,0x75bfc3bb
  427098:	pop    esp
  427099:	xor    BYTE PTR [ecx],cl
  42709b:	test   eax,0x49ebca1a
  4270a0:	lahf   
  4270a1:	pop    esp
  4270a2:	mov    al,0x50
  4270a4:	mov    cl,0x83
  4270a6:	xchg   ecx,eax
  4270a7:	ss xchg ebx,eax
  4270a9:	add    BYTE PTR [edi+0x79],bh
  4270ac:	jns    0x42711d
  4270ae:	sub    eax,edx
  4270b0:	xchg   ecx,edi
  4270b2:	daa    
  4270b3:	retf   0x480c
  4270b6:	(bad)  
  4270b7:	iret   
  4270b8:	out    dx,al
  4270b9:	stos   DWORD PTR es:[edi],eax
  4270ba:	jns    0x42712d
  4270bc:	out    0x67,al
  4270be:	adc    al,0xb6
  4270c0:	adc    eax,0x640e6f93
  4270c5:	inc    esi
  4270c6:	retf   
  4270c7:	sub    al,0xea
  4270c9:	xor    ebx,DWORD PTR [ecx]
  4270cb:	in     al,0xde
  4270cd:	repz dec eax
  4270cf:	mov    esp,0xd11f0bf9
  4270d4:	daa    
  4270d5:	fisttp DWORD PTR [edi+0x20]
  4270d8:	cli    
  4270d9:	ins    DWORD PTR es:[edi],dx
  4270da:	ror    esi,cl
  4270dc:	or     al,bl
  4270de:	pop    edx
  4270df:	push   0x35159fc4
  4270e4:	retf   
  4270e5:	popa   
  4270e6:	addr16 test al,0x42
  4270e9:	into   
  4270ea:	or     eax,0x7c33f22d
  4270ef:	js     0x4270e7
  4270f1:	sub    esi,DWORD PTR [ebx+0x7b2c936]
  4270f7:	loopne 0x4270ec
  4270f9:	fwait
  4270fa:	shr    ebx,1
  4270fc:	xchg   edx,eax
  4270fd:	cld    
  4270fe:	stos   BYTE PTR es:[di],al
  427100:	push   edx
  427101:	xchg   DWORD PTR [edx],ebx
  427103:	xchg   ebx,eax
  427104:	dec    edx
  427105:	clc    
  427106:	jmp    0x31f7c234
  42710b:	test   al,0xa9
  42710d:	sti    
  42710e:	dec    esi
  42710f:	or     al,0xa9
  427111:	mov    dl,0xde
  427113:	retf   
  427114:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427115:	lahf   
  427116:	ins    DWORD PTR es:[edi],dx
  427117:	rol    BYTE PTR [ebp+0xd342e0f],0xb9
  42711e:	lods   eax,DWORD PTR ds:[esi]
  42711f:	test   DWORD PTR [eax],ebx
  427121:	mov    edx,0xf6565e37
  427126:	imul   BYTE PTR [ebp+0x77]
  427129:	add    al,0xc3
  42712b:	and    al,0xe2
  42712d:	cmp    BYTE PTR [edx-0x2fe1e5cd],bh
  427133:	xchg   DWORD PTR gs:[eax-0x3844f0ac],ebp
  42713a:	sbb    eax,0x4a3be88
  427140:	mov    cl,0xde
  427142:	add    al,0xce
  427144:	mov    ebp,0x2e3934b8
  427149:	add    bl,ah
  42714b:	inc    ebx
  42714c:	lea    edx,[edi-0x77]
  42714f:	pop    edx
  427150:	push   edi
  427151:	or     DWORD PTR [ebx-0x5c],edx
  427154:	pushf  
  427155:	mov    ebx,0xca857055
  42715a:	push   esp
  42715b:	aad    0x75
  42715d:	jnp    0x42717b
  42715f:	(bad)  
  427160:	sbb    eax,0xa743a6a6
  427165:	sub    ecx,ecx
  427167:	and    DWORD PTR [edx],edx
  427169:	or     al,0x92
  42716b:	ffree  st(3)
  42716d:	ins    BYTE PTR es:[edi],dx
  42716e:	jno    0x4271e8
  427170:	or     ebp,DWORD PTR [esi]
  427172:	ficom  WORD PTR ds:0x70f0bcb0
  427178:	and    BYTE PTR ss:[eax+eax*1+0x40ea5215],0x13
  427181:	(bad)  
  427182:	sub    DWORD PTR [ecx-0x450d239],esp
  427188:	into   
  427189:	mov    ds:0x51a1a678,eax
  42718e:	sti    
  42718f:	fiadd  DWORD PTR [ebx+0x69aff373]
  427195:	int3   
  427196:	mov    ch,0xe7
  427198:	shl    bl,0x94
  42719b:	sbb    BYTE PTR [ecx-0x563d3add],dl
  4271a1:	cs out dx,eax
  4271a3:	pushf  
  4271a4:	adc    eax,0x657d54cd
  4271a9:	cmp    edi,edi
  4271ab:	rol    BYTE PTR [edx+0x4dadd456],cl
  4271b1:	stc    
  4271b2:	mov    eax,0xbee7f9fb
  4271b7:	fisttp WORD PTR [esi+0x5b7c1604]
  4271bd:	popf   
  4271be:	mov    eax,DWORD PTR [ecx-0x7]
  4271c1:	mov    ds:0xd1b79aab,al
  4271c6:	pop    edi
  4271c7:	cli    
  4271c8:	shl    ebx,1
  4271ca:	int3   
  4271cb:	mov    ch,0x4b
  4271cd:	push   esp
  4271ce:	mov    ecx,0xdb116a34
  4271d3:	xchg   ecx,eax
  4271d4:	pop    edx
  4271d5:	cld    
  4271d6:	cmp    cl,BYTE PTR [esi-0x7e86ffa4]
  4271dc:	retf   
  4271dd:	jl     0x4271b5
  4271df:	sub    DWORD PTR [ecx],edi
  4271e1:	jnp    0x427170
  4271e3:	sbb    ebp,eax
  4271e5:	add    ebp,DWORD PTR [edi+0x6dffc85e]
  4271eb:	xor    eax,0x69054fe6
  4271f0:	out    0xb3,al
  4271f2:	leave  
  4271f3:	mov    eax,ds:0x137fe7aa
  4271f8:	dec    ecx
  4271f9:	mov    ecx,0x1b790ed8
  4271fe:	xchg   edi,eax
  4271ff:	inc    edx
  427200:	mov    dl,0x22
  427202:	test   BYTE PTR [ebp*8+0x4411378b],ch
  427209:	out    0xc4,al
  42720b:	cmc    
  42720c:	cmp    BYTE PTR [ebx+eiz*4],dh
  42720f:	and    DWORD PTR [edi-0x1bcf06ea],ecx
  427215:	push   edx
  427216:	out    0x38,al
  427218:	sub    edi,edx
  42721a:	clc    
  42721b:	call   0x67fffbee
  427220:	fcompp 
  427222:	out    0x2e,eax
  427224:	iret   
  427225:	sbb    eax,0x5315c8a8
  42722a:	pop    ds
  42722b:	cmp    eax,0x1cbb1899
  427230:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427231:	ins    BYTE PTR es:[edi],dx
  427232:	xchg   edx,eax
  427233:	sub    al,0x7
  427235:	sub    DWORD PTR [esi-0x79],ebx
  427238:	mov    cl,0x99
  42723a:	xchg   edx,eax
  42723b:	jecxz  0x4271bf
  42723d:	fmulp  st(5),st
  42723f:	fisubr WORD PTR [edi]
  427241:	add    DWORD PTR [edx],ebx
  427243:	pushf  
  427244:	sub    ecx,DWORD PTR [edi+0x33]
  427247:	pushf  
  427248:	pop    esi
  427249:	or     bl,cl
  42724b:	lahf   
  42724c:	out    0xfe,al
  42724e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42724f:	pop    esp
  427250:	add    DWORD PTR [edx+0x34],ebx
  427253:	cmp    edx,DWORD PTR [edi]
  427255:	dec    ebx
  427256:	outs   dx,BYTE PTR ds:[esi]
  427257:	xor    ecx,0x31
  42725a:	aaa    
  42725b:	bound  edi,QWORD PTR [ebp-0x213bcdc4]
  427261:	cmp    eax,0x13972e4e
  427266:	addr16 inc ebp
  427268:	daa    
  427269:	cs daa 
  42726b:	and    eax,0xbc263321
  427270:	pop    ecx
  427271:	push   ds
  427272:	push   0xffffff92
  427274:	push   0xb
  427276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427277:	inc    eax
  427278:	and    al,0x67
  42727a:	ret    0xb18
  42727d:	neg    BYTE PTR [edi+0x0]
  427280:	xor    eax,0x36d1e4cd
  427285:	retf   
  427286:	fs jne 0x427245
  427289:	outs   dx,BYTE PTR ds:[esi]
  42728a:	mov    cl,0xad
  42728c:	inc    eax
  42728d:	push   eax
  42728e:	js     0x4272c3
  427290:	cs hlt 
  427292:	fldenv [eax+0x3be3e77e]
  427298:	jg     0x427278
  42729a:	sbb    DWORD PTR [edi],ebx
  42729c:	stos   DWORD PTR es:[edi],eax
  42729d:	hlt    
  42729e:	and    ebp,eax
  4272a0:	cmp    ecx,DWORD PTR [ebx-0x5cc46811]
  4272a6:	mov    edi,0xec86686a
  4272ab:	stos   BYTE PTR es:[edi],al
  4272ac:	mov    ecx,0xfeb5c8f3
  4272b1:	aaa    
  4272b2:	pop    ss
  4272b3:	and    al,0xb2
  4272b5:	arpl   WORD PTR [esi],cx
  4272b7:	sbb    eax,0x5436f2ae
  4272bc:	fimul  WORD PTR [ecx-0x16cdc84a]
  4272c2:	aam    0xd1
  4272c4:	push   es
  4272c5:	cmp    ch,BYTE PTR ds:0x48c1be1c
  4272cb:	jns    0x427306
  4272cd:	lea    esp,[eax+edi*8+0x27c64d1c]
  4272d4:	jp     0x4272d5
  4272d6:	int    0x80
  4272d8:	pop    edi
  4272d9:	mov    BYTE PTR [ecx+0x5282d1],ch
	...
  4272eb:	add    BYTE PTR [ecx-0x6600738],bl
  4272f1:	mov    edi,0xdf92ceff
  4272f6:	push   ds
  4272f7:	outs   dx,BYTE PTR ds:[esi]
  4272f8:	mov    bh,BYTE PTR [ebx+0x2a]
  4272fb:	jnp    0x427287
  4272fd:	call   0x2cc7303
  427302:	add    BYTE PTR [eax],al
  427304:	mov    edi,0x403351b
  427309:	cld    
  42730a:	stos   DWORD PTR es:[edi],eax
  42730b:	test   al,0x7b
  42730d:	(bad)  
  42730e:	in     eax,dx
  42730f:	stos   DWORD PTR es:[edi],eax
  427310:	add    eax,0xb4dfe478
  427315:	jmp    0xb6f:0xa82bbe8d
  42731c:	mov    esp,ds
  42731e:	jbe    0x4272ab
  427320:	call   0x3e5ae217
  427325:	imul   eax,DWORD PTR [edx],0x3928e87c
  42732b:	into   
  42732c:	mov    al,ds:0x3c0c4667
  427331:	add    eax,0x4c882f24
  427336:	mov    esi,0xdb8b7f66
  42733b:	and    ecx,ecx
  42733d:	cmp    eax,0x861aaedd
  427342:	jle    0x42735b
  427344:	retw   0xdec5
  427348:	add    al,0x4a
  42734a:	push   eax
  42734b:	fld    DWORD PTR [esi-0x22eea61d]
  427351:	(bad)  
  427352:	jl     0x4272e9
  427354:	adc    bl,bl
  427356:	push   cs
  427357:	popf   
  427358:	sbb    eax,0x8085d603
  42735d:	pusha  
  42735e:	push   0x20dfef36
  427363:	mov    eax,ds:0x970f4115
  427368:	inc    esi
  427369:	(bad)  
  42736a:	adc    esp,DWORD PTR [eax+0x32]
  42736d:	sub    al,0x76
  42736f:	jmp    0x6753:0x764a74a0
  427376:	es cld 
  427378:	fisubr WORD PTR es:[ebx-0x2f]
  42737c:	cs js  0x4273ee
  42737f:	idiv   BYTE PTR [eax]
  427381:	inc    ecx
  427382:	inc    ebx
  427383:	ja     0x427330
  427385:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427387:	out    dx,al
  427388:	adc    cl,BYTE PTR [ebx+0x1961f2aa]
  42738e:	es xchg edi,eax
  427390:	sbb    BYTE PTR [esi],bh
  427392:	jle    0x427376
  427394:	int    0x8
  427396:	loop   0x42732b
  427398:	push   0x73d82f2e
  42739d:	sbb    ebp,DWORD PTR [edx]
  42739f:	push   edi
  4273a0:	cmp    al,0xa7
  4273a2:	int    0x6e
  4273a4:	xchg   edx,eax
  4273a5:	stos   DWORD PTR es:[edi],eax
  4273a6:	ss mov ebx,0xd82319ee
  4273ac:	and    al,0xc9
  4273ae:	mov    esi,esp
  4273b0:	stos   DWORD PTR es:[edi],eax
  4273b1:	fstp   QWORD PTR [ebx+0x61ffeda2]
  4273b7:	sub    bl,bh
  4273b9:	cli    
  4273ba:	daa    
  4273bb:	lea    eax,[edx]
  4273bd:	gs mov dl,0x42
  4273c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4273c1:	dec    ebx
  4273c2:	inc    edi
  4273c3:	cmp    eax,0xb55d8e1
  4273c8:	outs   dx,BYTE PTR ds:[esi]
  4273c9:	fimul  DWORD PTR [esi+0x8]
  4273cc:	scas   eax,DWORD PTR es:[edi]
  4273cd:	inc    ebx
  4273ce:	push   ecx
  4273cf:	or     al,0xef
  4273d1:	adc    ecx,DWORD PTR [ebp+0x5686ab46]
  4273d7:	cli    
  4273d8:	addr16 int3 
  4273da:	inc    ebx
  4273db:	pop    ds
  4273dc:	into   
  4273dd:	fmulp  st(4),st
  4273df:	mov    esp,eax
  4273e1:	and    al,0x6a
  4273e3:	xor    dl,BYTE PTR [eax+0x78]
  4273e6:	out    dx,eax
  4273e7:	inc    edi
  4273e8:	and    al,0xa5
  4273ea:	cmp    DWORD PTR [eax-0x24],0xf9ce5344
  4273f1:	push   ecx
  4273f2:	sbb    edi,DWORD PTR [edx-0x2a3b5dd6]
  4273f8:	cmc    
  4273f9:	and    edx,DWORD PTR [ebx-0x4af16120]
  4273ff:	dec    esi
  427400:	dec    esp
  427401:	rcl    BYTE PTR [ebx],cl
  427403:	stos   BYTE PTR es:[edi],al
  427404:	inc    eax
  427405:	xchg   edx,eax
  427406:	xor    BYTE PTR [esi+0x39d7eba2],ch
  42740c:	sar    ecx,cl
  42740e:	in     eax,0xae
  427410:	sub    eax,0xabb5199
  427415:	loop   0x427469
  427417:	sub    al,BYTE PTR [edi-0x52]
  42741a:	pop    eax
  42741b:	xchg   esi,eax
  42741c:	div    eax
  42741e:	push   ecx
  42741f:	and    al,0x49
  427421:	mov    ah,0xe3
  427423:	call   0xb4d546fe
  427428:	(bad)  
  427429:	push   edi
  42742a:	push   ecx
  42742b:	repnz shl DWORD PTR [ebx-0x11],1
  42742f:	mov    BYTE PTR [edx+0x6c],dh
  427432:	inc    ecx
  427433:	call   0xf4de:0x733f116a
  42743a:	repz cwde 
  42743c:	in     eax,dx
  42743d:	lods   al,BYTE PTR ds:[esi]
  42743e:	cmp    DWORD PTR [eax+ebx*1-0x4d03c3a4],esp
  427445:	mov    eax,ebp
  427447:	hlt    
  427448:	jge    0x4274a3
  42744a:	sbb    eax,0x1ea06297
  42744f:	in     eax,dx
  427450:	dec    ebx
  427451:	add    cl,bh
  427453:	mov    WORD PTR [edi-0x5c74c65b],ss
  427459:	scas   al,BYTE PTR es:[edi]
  42745a:	test   eax,0xbc881a15
  42745f:	xchg   esp,eax
  427460:	fldenv [eax]
  427462:	jmp    0x427425
  427464:	cmp    BYTE PTR [ebx-0xb],ah
  427467:	int    0x93
  427469:	dec    edi
  42746a:	and    eax,0xfeb2aee5
  42746f:	stos   BYTE PTR es:[edi],al
  427470:	pop    eax
  427471:	dec    edi
  427472:	inc    ebp
  427473:	and    bl,BYTE PTR [ecx]
  427475:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  427477:	retf   
  427478:	jo     0x427471
  42747a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42747b:	and    al,0x8b
  42747d:	repnz or ebx,DWORD PTR ds:0xd93c7ed4
  427484:	icebp  
  427485:	lods   al,BYTE PTR ds:[esi]
  427486:	sbb    DWORD PTR [ebp-0x294c08af],edx
  42748c:	push   ecx
  42748d:	push   ebp
  42748e:	mov    ecx,0x8be44fc5
  427493:	sub    dh,BYTE PTR [edx+ebp*8]
  427496:	in     al,0x70
  427498:	push   ebp
  427499:	pop    ss
  42749a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42749b:	scas   eax,DWORD PTR es:[edi]
  42749c:	clc    
  42749d:	ficomp DWORD PTR [edi]
  42749f:	mov    ecx,0xaf957666
  4274a4:	or     bl,BYTE PTR [ebx-0x4d02dcc7]
  4274aa:	dec    edx
  4274ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4274ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4274ad:	or     ah,ah
  4274af:	sub    eax,0xb783a8a9
  4274b4:	adc    al,BYTE PTR [eax-0x47]
  4274b7:	enter  0xd843,0x3b
  4274bb:	ins    DWORD PTR es:[edi],dx
  4274bc:	or     al,0xdf
  4274be:	jl     0x427507
  4274c0:	scas   al,BYTE PTR es:[edi]
  4274c1:	mov    eax,0xf654f7c9
  4274c6:	add    BYTE PTR [esi],0x17
  4274c9:	adc    al,0x8f
  4274cb:	dec    esi
  4274cc:	or     BYTE PTR [eax],bh
  4274ce:	and    BYTE PTR [eax-0x58],dh
  4274d1:	aaa    
  4274d2:	push   cs
  4274d3:	pop    ebx
  4274d4:	push   edx
  4274d5:	aaa    
  4274d6:	mov    dh,bh
  4274d8:	(bad)  
  4274d9:	in     eax,dx
  4274da:	rol    DWORD PTR [edi+0x72],1
  4274dd:	out    0xa3,al
  4274df:	or     ebp,ecx
  4274e1:	fiadd  WORD PTR [ebp-0xeaa8444]
  4274e7:	leave  
  4274e8:	dec    edi
  4274e9:	rcr    esp,1
  4274eb:	cmp    dh,BYTE PTR [edi]
  4274ed:	or     ebx,esp
  4274ef:	hlt    
  4274f0:	pusha  
  4274f1:	(bad)  
  4274f2:	arpl   WORD PTR [ebx-0x14],sp
  4274f5:	jo     0x427508
  4274f7:	repz and al,0x23
  4274fa:	xchg   DWORD PTR [esi],edx
  4274fc:	cld    
  4274fd:	scas   eax,DWORD PTR es:[edi]
  4274fe:	ficom  WORD PTR [esi-0x45ab499b]
  427504:	aam    0x32
  427506:	sti    
  427507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427508:	(bad)  
  427509:	(bad)  
  42750b:	cmp    al,BYTE PTR [edx]
  42750d:	add    eax,0x646cc08c
  427512:	lock xacquire or DWORD PTR ds:[ebx+esi*2],esi
  427518:	sbb    esp,DWORD PTR es:[esi+edx*8]
  42751c:	adc    esi,edx
  42751e:	jo     0x427539
  427520:	jg     0x4274df
  427522:	push   ds
  427523:	fild   WORD PTR [esp+eax*1+0x28ed4042]
  42752a:	sbb    al,0xa
  42752c:	pop    edx
  42752d:	stc    
  42752e:	aam    0xd7
  427530:	inc    ebx
  427531:	jnp    0x427568
  427533:	pop    eax
  427534:	mov    BYTE PTR [edx-0x30],dl
  427537:	enter  0xede,0xf4
  42753b:	sub    esp,DWORD PTR [ecx-0x3c2b553d]
  427541:	int3   
  427542:	xor    ah,BYTE PTR [ebx-0x4e]
  427545:	loop   0x427506
  427547:	xor    esi,ecx
  427549:	cmc    
  42754a:	stos   DWORD PTR es:[edi],eax
  42754b:	in     eax,0xe7
  42754d:	lea    edi,[ecx+0x5579779e]
  427553:	lahf   
  427554:	test   al,0xcd
  427556:	daa    
  427557:	pop    ss
  427558:	nop
  427559:	cli    
  42755a:	pop    es
  42755b:	cdq    
  42755c:	sbb    BYTE PTR [esi+0x743d4be4],bh
  427562:	and    DWORD PTR [eax-0x7a04bfdd],ecx
  427568:	mov    ebp,0xa530f80
  42756d:	into   
  42756e:	cmp    ah,dh
  427570:	add    esp,ebx
  427572:	in     eax,dx
  427573:	or     bl,cl
  427575:	xor    ah,ch
  427577:	cmp    DWORD PTR [edx+0x5fe88869],esp
  42757d:	mov    al,0xaf
  42757f:	es jnp 0x42753c
  427582:	jge    0x42755b
  427584:	mov    dl,cl
  427586:	and    DWORD PTR [edx-0x3f77eba7],esi
  42758c:	jne    0x42750f
	...
  42759a:	add    BYTE PTR [eax],al
  42759c:	jns    0x4275a8
  42759e:	sbb    BYTE PTR gs:[edi+0x7f],dh
  4275a2:	jge    0x42760f
  4275a4:	int3   
  4275a5:	outs   dx,BYTE PTR ds:[esi]
  4275a6:	xchg   esi,esi
  4275a8:	ds jmp 0x1:0xeb14ceb7
  4275b0:	mov    al,BYTE PTR [edx]
  4275b2:	add    BYTE PTR [eax],al
  4275b4:	out    dx,eax
  4275b5:	push   eax
  4275b6:	(bad)  
  4275b7:	fadd   DWORD PTR [ecx-0x20]
  4275ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4275bb:	in     al,0xef
  4275bd:	loop   0x4275bc
  4275bf:	lods   al,BYTE PTR ds:[esi]
  4275c0:	cli    
  4275c1:	adc    esp,DWORD PTR [eax]
  4275c3:	mov    eax,ds:0x910e0d7
  4275c8:	retf   0xc89a
  4275cb:	and    ch,BYTE PTR [ebx+esi*4+0x1f]
  4275cf:	dec    esi
  4275d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275d1:	xor    DWORD PTR [edi+0x13],ebp
  4275d4:	mov    esp,ebx
  4275d6:	(bad)  [esi]
  4275d8:	nop
  4275d9:	add    DWORD PTR [ebx-0x3b],edi
  4275dc:	jp     0x42756b
  4275de:	mov    DWORD PTR [edi],ecx
  4275e0:	sub    edi,DWORD PTR [ebx]
  4275e2:	int3   
  4275e3:	je     0x427592
  4275e5:	lahf   
  4275e6:	xchg   BYTE PTR [ebx+0x12719105],dl
  4275ec:	push   esp
  4275ed:	or     DWORD PTR [ebx+eax*8-0x4a],eax
  4275f1:	clc    
  4275f2:	push   ss
  4275f3:	cmp    BYTE PTR [ebp+0x4b],dl
  4275f6:	fdivr  st(6),st
  4275f8:	mov    al,0x40
  4275fa:	ret    
  4275fb:	xor    eax,0xbc7abdae
  427600:	sbb    bh,dl
  427602:	ins    DWORD PTR es:[edi],dx
  427603:	cmp    eax,DWORD PTR [esi]
  427605:	xor    ebx,ebp
  427607:	jmp    0x599a52ee
  42760c:	pop    edx
  42760d:	scas   eax,DWORD PTR es:[edi]
  42760e:	stos   DWORD PTR es:[edi],eax
  42760f:	(bad)  [ebx]
  427611:	leave  
  427612:	or     edi,DWORD PTR [ebx+0xb68d9da]
  427618:	push   edx
  427619:	xchg   ebx,eax
  42761a:	jmp    0xf5ed:0x9c1038f6
  427621:	cmp    al,0xe3
  427623:	jae    0x4276a1
  427625:	and    cl,BYTE PTR [eax+0x1a]
  427628:	rcr    BYTE PTR [esi],0x2
  42762b:	(bad)  
  42762d:	in     al,0x1c
  42762f:	int    0x64
  427631:	lds    esi,FWORD PTR [edi-0x56]
  427634:	enter  0x3ddb,0x4f
  427638:	loope  0x427653
  42763a:	sar    DWORD PTR [edi],0x3d
  42763d:	arpl   WORD PTR [esi+ebp*4+0x44],ax
  427641:	mov    ds:0x4d5d7df2,eax
  427646:	sub    edx,0xffffffe0
  427649:	int    0x5f
  42764b:	mov    eax,0x85323f24
  427650:	inc    esi
  427651:	push   esi
  427652:	mov    ds:0xf35cbda6,al
  427657:	xchg   ebx,edx
  427659:	in     al,dx
  42765a:	rcr    DWORD PTR [ecx+0x5],0x7b
  42765e:	(bad)  
  42765f:	fsub   DWORD PTR [edi+0x72]
  427662:	(bad)  
  427663:	fnstsw WORD PTR [edx-0x3c]
  427666:	xchg   ah,bh
  427668:	dec    edi
  427669:	pop    es
  42766a:	shr    DWORD PTR [edx-0x3],0x6f
  42766e:	clc    
  42766f:	or     edx,DWORD PTR [edx+0x1]
  427672:	jno    0x427670
  427674:	jle    0x4276d5
  427676:	jl     0x4276a0
  427678:	and    al,0x87
  42767a:	test   DWORD PTR [edx-0xdbfc792],esp
  427680:	das    
  427681:	xlat   BYTE PTR ds:[ebx]
  427682:	in     al,0xd7
  427684:	ficom  WORD PTR [eax-0x3c]
  427687:	sar    esi,0x77
  42768a:	ins    DWORD PTR es:[edi],dx
  42768b:	fdiv   st(6),st
  42768d:	xchg   edx,eax
  42768e:	mov    bh,0x89
  427690:	push   esp
  427691:	push   ds
  427692:	div    BYTE PTR [edi-0x2ec3c29c]
  427698:	inc    eax
  427699:	mov    bl,bh
  42769b:	mov    bh,0x39
  42769d:	mov    ah,0x2a
  42769f:	mov    ebx,DWORD PTR [eax+0x4b]
  4276a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276a3:	mov    esp,0x38aa8558
  4276a8:	cld    
  4276a9:	cld    
  4276aa:	pop    esi
  4276ab:	popa   
  4276ac:	icebp  
  4276ad:	mul    BYTE PTR [edx+0x218c78e9]
  4276b3:	push   es
  4276b4:	dec    edi
  4276b5:	inc    edi
  4276b6:	pop    esp
  4276b7:	nop
  4276b8:	scas   eax,DWORD PTR es:[edi]
  4276b9:	or     eax,0x8c97526f
  4276be:	dec    edx
  4276bf:	arpl   WORD PTR [ecx+ebx*2+0x50],si
  4276c3:	push   ecx
  4276c4:	clc    
  4276c5:	call   0xd25f:0xd247ebde
  4276cc:	mov    ah,0xdf
  4276ce:	ficomp WORD PTR [edx-0x52]
  4276d1:	mov    ss,WORD PTR gs:[ecx]
  4276d4:	cwde   
  4276d5:	mov    ds:0xc3fde858,al
  4276da:	in     al,dx
  4276db:	or     al,0xae
  4276dd:	dec    ebp
  4276de:	push   0x57
  4276e0:	mov    ah,0x79
  4276e2:	mov    eax,0x86e18c9d
  4276e7:	repnz aas 
  4276e9:	or     BYTE PTR [ebp-0x112386e6],al
  4276ef:	or     eax,0x7e4a5b6b
  4276f4:	xor    ebx,DWORD PTR [eax]
  4276f6:	mov    cl,0x68
  4276f8:	cmc    
  4276f9:	dec    BYTE PTR [ecx+0x55]
  4276fc:	pop    ecx
  4276fd:	jb     0x4276d6
  4276ff:	and    ebx,edi
  427701:	sbb    al,0x4a
  427703:	fmul   DWORD PTR ds:0xb82f0c1d
  427709:	push   esp
  42770a:	(bad)  
  42770b:	in     al,0xaf
  42770d:	inc    ebp
  42770e:	loop   0x427759
  427710:	cwde   
  427711:	hlt    
  427712:	popa   
  427713:	inc    esi
  427714:	enter  0xfb9e,0x85
  427718:	(bad)  
  427719:	and    bl,BYTE PTR [ebp+esi*4-0x46]
  42771d:	ds mov esp,0x3ea365fb
  427723:	xchg   ebx,eax
  427724:	xchg   edx,eax
  427725:	adc    edx,DWORD PTR [edi-0x27]
  427728:	(bad)  
  427729:	sbb    ch,BYTE PTR [esi-0x23]
  42772c:	mov    al,0xdd
  42772e:	icebp  
  42772f:	pop    ecx
  427730:	xchg   esi,eax
  427731:	inc    ebx
  427732:	popf   
  427733:	(bad)  
  427734:	or     al,0xc2
  427736:	xchg   edi,eax
  427737:	push   esp
  427738:	aad    0x83
  42773a:	pop    edi
  42773b:	stc    
  42773c:	xchg   ah,ah
  42773e:	sub    eax,0xf7e40357
  427743:	into   
  427744:	pop    ebx
  427745:	shr    BYTE PTR [eax],0xfe
  427748:	ja     0x4277a1
  42774a:	xor    DWORD PTR [esi-0x4d],edx
  42774d:	jnp    0x5cd8b4a8
  427753:	mov    DWORD PTR [edi],ebp
  427755:	stc    
  427756:	leave  
  427757:	mov    ds:0xb7c7ee8b,eax
  42775c:	xor    cl,ch
  42775e:	push   ss
  42775f:	cmp    esi,DWORD PTR [ebx]
  427761:	ror    DWORD PTR [ecx],0x81
  427764:	dec    ebx
  427765:	sbb    BYTE PTR [eax+0x73],bh
  427768:	ss in  al,0x45
  42776b:	mov    ds:0x8f4e56ae,eax
  427770:	fcmovu st,st(3)
  427772:	jp     0x42779c
  427774:	lds    esp,FWORD PTR [ebp+0x4f4537d3]
  42777a:	(bad)  
  42777b:	enter  0x3e38,0x6
  42777f:	xchg   ebx,eax
  427780:	dec    edx
  427781:	(bad)  
  427782:	push   ds
  427783:	push   edi
  427784:	call   0xe35c:0xf7e55ce8
  42778b:	ins    BYTE PTR es:[edi],dx
  42778c:	mov    ss,WORD PTR [eax+0x72ae824f]
  427792:	jecxz  0x427793
  427794:	fcmovne st,st(6)
  427796:	popf   
  427797:	outs   dx,DWORD PTR ds:[esi]
  427798:	mov    ebp,0x9c0deaae
  42779d:	mov    cl,0x40
  42779f:	ret    0xd6b4
  4277a2:	xor    al,0xa1
  4277a4:	cs jmp 0x4277e8
  4277a7:	adc    ebx,DWORD PTR [ebx-0x7e]
  4277aa:	or     ch,BYTE PTR [eax-0x2572f8c8]
  4277b0:	outs   dx,DWORD PTR ds:[esi]
  4277b1:	inc    ebp
  4277b2:	repz mov ebp,0x5e46a85d
  4277b8:	aam    0xfd
  4277ba:	pop    ebx
  4277bb:	pusha  
  4277bc:	jb     0x427755
  4277be:	gs inc edi
  4277c0:	xchg   edi,eax
  4277c1:	(bad)  
  4277c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4277c3:	(bad)  
  4277c4:	adc    al,0xf1
  4277c6:	dec    ebx
  4277c7:	adc    ecx,edi
  4277c9:	test   BYTE PTR [esi-0x71],cl
  4277cc:	push   eax
  4277cd:	fisub  DWORD PTR [eax]
  4277cf:	xor    DWORD PTR [edi],edx
  4277d1:	jne    0x427851
  4277d3:	mov    dh,0xf7
  4277d5:	fwait
  4277d6:	dec    ebx
  4277d7:	push   ebx
  4277d8:	adc    DWORD PTR [ebp+ecx*4+0x6e],eax
  4277dc:	in     eax,dx
  4277dd:	je     0x42784e
  4277df:	push   edi
  4277e0:	cld    
  4277e1:	mov    WORD PTR [eax-0x18608167],cs
  4277e7:	mov    al,0xe6
  4277e9:	fsubr  DWORD PTR [edx-0x3ffa4f35]
  4277ef:	and    BYTE PTR [esi-0x71df70b3],0x27
  4277f6:	arpl   WORD PTR [edi],si
  4277f8:	ret    
  4277f9:	cwde   
  4277fa:	stos   DWORD PTR es:[edi],eax
  4277fb:	stos   DWORD PTR es:[edi],eax
  4277fc:	mov    ebx,0x2027878
  427801:	je     0x427783
  427803:	jp     0x427875
  427805:	clc    
  427806:	loop   0x42778d
  427808:	push   eax
  427809:	shl    BYTE PTR [eax+0x4f],1
  42780c:	fild   QWORD PTR [esi]
  42780e:	dec    esi
  42780f:	test   BYTE PTR [esi-0x6],ah
  427812:	les    eax,FWORD PTR [eax]
  427814:	mov    ecx,edi
  427816:	stos   DWORD PTR es:[edi],eax
  427817:	push   0x58
  427819:	push   0x922ceadb
  42781e:	inc    esp
  42781f:	call   0x5848:0xab302816
  427826:	mov    al,ds:0x760d393c
  42782b:	mov    esi,0x4da7b529
  427830:	jbe    0x427829
  427832:	mov    bl,0xc6
  427834:	inc    ecx
  427835:	ret    
  427836:	mov    cl,0x20
  427838:	ins    BYTE PTR es:[edi],dx
  427839:	dec    ebp
  42783a:	sbb    ah,cl
  42783c:	xor    eax,0x71
	...
  427849:	add    BYTE PTR [eax],al
  42784b:	add    BYTE PTR [ecx+0x3],bl
  42784e:	rol    DWORD PTR [ebx+ebx*8-0x3a],0xdd
  427853:	pop    ds
  427854:	sub    ebp,DWORD PTR [esi+0x73e53eba]
  42785a:	fist   DWORD PTR [esi-0x62]
  42785d:	in     eax,dx
  42785e:	add    DWORD PTR [eax],eax
  427860:	mov    al,BYTE PTR [edx]
  427862:	add    BYTE PTR [eax],al
  427864:	lock stos BYTE PTR es:[edi],al
  427866:	push   ds
  427867:	arpl   sp,bx
  427869:	frstor [esi-0x7928f2e1]
  42786f:	rcr    bh,0xab
  427872:	jmp    0x53ec:0xf4b7cc3a
  427879:	arpl   WORD PTR [eax-0x39fb6640],bx
  42787f:	je     0x427882
  427881:	fdivr  QWORD PTR [ecx+0xfeedfd2]
  427887:	lea    edx,[eax]
  427889:	jmp    0x3a58:0xbfc8f63f
  427890:	xor    eax,0x1820f493
  427895:	into   
  427896:	push   esi
  427897:	lock pop ds
  427899:	jb     0x42784f
  42789b:	mov    BYTE PTR [edi],bh
  42789d:	mov    bl,0xb5
  42789f:	out    dx,eax
  4278a0:	inc    ecx
  4278a2:	das    
  4278a3:	jmp    0xcb40:0x7025f626
  4278aa:	mov    eax,0x98e8bb23
  4278af:	mov    edi,0x2915ff0b
  4278b4:	jle    0x427906
  4278b6:	out    0xbe,eax
  4278b8:	shl    DWORD PTR [eax],0x7f
  4278bb:	inc    esi
  4278bc:	adc    eax,ecx
  4278be:	mov    ds:0x5fe0824c,eax
  4278c3:	out    0xe5,eax
  4278c5:	mov    bl,0x7e
  4278c8:	lods   al,BYTE PTR ds:[esi]
  4278c9:	scas   al,BYTE PTR es:[edi]
  4278ca:	sub    al,0xc3
  4278cc:	pop    ds
  4278cd:	inc    ecx
  4278ce:	sbb    BYTE PTR [eax+eiz*2-0x72a35295],bh
  4278d5:	outs   dx,BYTE PTR ds:[esi]
  4278d6:	das    
  4278d7:	leave  
  4278d8:	pop    ds
  4278d9:	xchg   esp,eax
  4278da:	sub    BYTE PTR [esi+0x56e89ec1],bl
  4278e0:	leave  
  4278e1:	and    DWORD PTR [ebp+0x40],edx
  4278e4:	fistp  WORD PTR [ecx]
  4278e6:	jbe    0x427896
  4278e8:	adc    BYTE PTR [edx],cl
  4278ea:	pop    ebp
  4278eb:	inc    edi
  4278ec:	or     BYTE PTR [edx-0x4f],0x37
  4278f0:	mov    bl,0x40
  4278f2:	in     eax,0xcc
  4278f4:	retf   0x57f4
  4278f7:	sub    DWORD PTR [edx],ebx
  4278f9:	retf   
  4278fa:	fld    st(3)
  4278fc:	push   edi
  4278fd:	or     ch,BYTE PTR [eax+eiz*8+0x3ae7a221]
  427904:	jnp    0x42792e
  427906:	loop   0x4278b2
  427908:	xchg   esi,eax
  427909:	pop    edx
  42790a:	or     ah,BYTE PTR [ebx+edi*2+0x52]
  42790e:	inc    ebx
  42790f:	sub    DWORD PTR [ebx],0xcbc940a2
  427915:	inc    ecx
  427916:	adc    edx,esp
  427918:	push   edx
  427919:	loope  0x4278ef
  42791b:	mov    ecx,DWORD PTR [edi+ebp*1-0x244cd3fc]
  427922:	sbb    dh,BYTE PTR [esp+ebp*8]
  427925:	mov    cl,0xb0
  427927:	mov    eax,ds:0xc4256d45
  42792c:	out    0x76,eax
  42792e:	mov    BYTE PTR [eax],dh
  427930:	iret   
  427931:	xor    al,0xa6
  427933:	in     al,dx
  427934:	pop    ebp
  427935:	xchg   esp,eax
  427936:	mov    eax,0x44be69bf
  42793b:	adc    cl,dl
  42793d:	cmc    
  42793e:	jmp    0xa027d317
  427943:	outs   dx,BYTE PTR ds:[esi]
  427944:	test   eax,0x63a794dc
  427949:	nop
  42794a:	xchg   BYTE PTR ds:0x6b8e77f4,ch
  427950:	pop    ebx
  427951:	std    
  427952:	sub    DWORD PTR [ebx],ebx
  427954:	jnp    0x427983
  427956:	rcr    BYTE PTR [esi],1
  427958:	repz pusha 
  42795a:	and    al,0x93
  42795c:	sub    edi,ebp
  42795e:	ret    0x5264
  427961:	clc    
  427962:	xor    al,0x5
  427964:	mov    esi,0x8497f550
  427969:	sar    BYTE PTR [edx+0x79f5a41c],cl
  42796f:	and    eax,0xdd052d9d
  427974:	mov    ds:0xe5669cbd,ax
  42797a:	scas   eax,DWORD PTR es:[edi]
  42797b:	sbb    ebp,DWORD PTR [edx+0x4d]
  42797e:	jbe    0x42791a
  427980:	cdq    
  427981:	jmp    0xa921:0x8c511524
  427988:	cmc    
  427989:	xor    ebp,DWORD PTR [ebx]
  42798b:	cdq    
  42798c:	mov    ds:0xaaa69f34,eax
  427991:	rol    esp,1
  427993:	inc    esp
  427994:	mov    esp,0x8af0efc1
  427999:	jo     0x427996
  42799b:	sbb    cl,BYTE PTR [edi-0x69]
  42799e:	sbb    al,0x92
  4279a0:	out    0x67,eax
  4279a2:	xchg   edi,eax
  4279a3:	mov    ds:0x8adfe0c0,eax
  4279a8:	ret    
  4279a9:	or     eax,0x4a62f21f
  4279ae:	ins    BYTE PTR es:[edi],dx
  4279af:	mov    esi,0x84bd93f
  4279b4:	mov    dl,0x4a
  4279b6:	and    BYTE PTR ds:0xeb717ba7,bl
  4279bc:	adc    BYTE PTR [eax+0x12],dh
  4279bf:	aas    
  4279c0:	fisttp WORD PTR ds:0xe2893783
  4279c6:	pop    esp
  4279c7:	call   0xa8bf:0x329c19f4
  4279ce:	mov    edx,ss
  4279d0:	mov    al,0x71
  4279d2:	test   ax,0x4d8f
  4279d6:	fsubr  st,st(1)
  4279d8:	mov    eax,0x9389928c
  4279dd:	imul   ebp,esp,0xd88382e6
  4279e3:	inc    edi
  4279e4:	cmp    eax,0xb7e086d4
  4279e9:	test   BYTE PTR [esi+0x4fd38633],al
  4279ef:	inc    eax
  4279f0:	scas   eax,DWORD PTR es:[edi]
  4279f1:	call   0x3214:0x7fcde1c6
  4279f8:	fdiv   DWORD PTR [ebx]
  4279fa:	xchg   esp,eax
  4279fb:	out    dx,al
  4279fc:	gs jb  0x4279e7
  4279ff:	ins    DWORD PTR es:[edi],dx
  427a00:	cmp    eax,0x268110f
  427a05:	ficomp DWORD PTR [eax-0x5294d37d]
  427a0b:	jae    0x427a16
  427a0d:	stc    
  427a0e:	push   cs
  427a0f:	scas   al,BYTE PTR es:[edi]
  427a10:	adc    DWORD PTR [ecx],esi
  427a12:	iret   
  427a13:	out    0x4c,al
  427a15:	xor    BYTE PTR [eax+0x57],0x1a
  427a19:	jnp    0x4279aa
  427a1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a1c:	and    BYTE PTR [ebx+0x3f],bh
  427a1f:	xor    eax,0xbc07de62
  427a24:	stos   BYTE PTR es:[edi],al
  427a25:	push   esp
  427a26:	cli    
  427a27:	(bad)  
  427a28:	cmp    al,0xdf
  427a2a:	in     al,dx
  427a2b:	jge    0x427a6a
  427a2d:	dec    edi
  427a2e:	push   0xffffff88
  427a30:	inc    esi
  427a31:	retf   0xc5b5
  427a34:	mov    al,0x2e
  427a36:	xchg   ebx,eax
  427a37:	pop    ebx
  427a38:	scas   al,BYTE PTR es:[edi]
  427a39:	mov    al,0xd5
  427a3b:	sbb    al,0x94
  427a3d:	das    
  427a3e:	std    
  427a3f:	mov    esi,0x4f99a115
  427a44:	pop    esp
  427a45:	repnz push 0xffffffc6
  427a48:	adc    DWORD PTR [edi],edx
  427a4a:	jge    0x427a84
  427a4c:	inc    eax
  427a4d:	std    
  427a4e:	push   0xffffff9e
  427a50:	in     al,dx
  427a51:	xor    bl,BYTE PTR [edi+0x42]
  427a54:	lods   eax,DWORD PTR ds:[esi]
  427a55:	or     al,cl
  427a57:	jmp    0x3b0fc0ed
  427a5c:	jno    0x427ab7
  427a5e:	pop    ebx
  427a5f:	mov    edx,0x10b54b13
  427a64:	push   ds
  427a65:	ret    0xbcb3
  427a68:	rcr    bh,cl
  427a6a:	push   esi
  427a6b:	adc    BYTE PTR [eax],bl
  427a6d:	lods   eax,DWORD PTR ds:[esi]
  427a6e:	jp     0x427a90
  427a70:	pop    ds
  427a71:	ret    
  427a72:	rol    bl,0x86
  427a75:	or     edx,0x6c
  427a78:	jns    0x427a13
  427a7a:	mov    ecx,0x521fcb86
  427a7f:	(bad)  
  427a80:	jne    0x427aa4
  427a82:	popa   
  427a83:	cdq    
  427a84:	xchg   edi,eax
  427a85:	and    al,0xbc
  427a87:	loope  0x427a57
  427a89:	ror    BYTE PTR [ecx],cl
  427a8b:	ret    0x7657
  427a8e:	sti    
  427a8f:	mov    al,ds:0xb920ebf1
  427a94:	aaa    
  427a95:	cmp    BYTE PTR [eax+0x19],al
  427a98:	xor    DWORD PTR [edi+0x10a1a12c],eax
  427a9e:	lahf   
  427a9f:	jp     0x427a5f
  427aa1:	ror    bl,1
  427aa3:	pop    ds
  427aa4:	popf   
  427aa5:	pop    DWORD PTR [edx-0x56]
  427aa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427aa9:	test   eax,0x1e96e32b
  427aae:	xchg   BYTE PTR [edi+0x2bbca1ba],bh
  427ab4:	sahf   
  427ab5:	mov    ah,0x3c
  427ab7:	into   
  427ab8:	call   0x7642:0x5bfce1cd
  427abf:	stos   BYTE PTR es:[edi],al
  427ac0:	or     al,0x67
  427ac2:	add    eax,0x4054a17f
  427ac7:	jle    0x427a7c
  427ac9:	jp     0x427b39
  427acb:	sub    ah,bl
  427acd:	stos   DWORD PTR es:[edi],eax
  427ace:	mov    eax,ds:0x2f2d2e6d
  427ad3:	fs jp  0x427aa8
  427ad6:	ja     0x427ab5
  427ad8:	add    DWORD PTR [eax-0x47],ecx
  427adb:	and    cl,dh
  427add:	mov    al,ds:0xbd0a4abe
  427ae2:	rcr    BYTE PTR [ebx-0x4be34a4c],1
  427ae8:	or     cl,ch
  427aea:	stc    
  427aeb:	ret    
  427aec:	daa    
  427aed:	cmp    al,0x0
	...
  427afb:	add    BYTE PTR [ebx],bl
  427afd:	daa    
  427afe:	pushf  
  427aff:	cli    
  427b00:	mov    esp,0x2ae77ffb
  427b05:	scas   al,BYTE PTR es:[edi]
  427b06:	aad    0xf
  427b08:	rcr    esp,cl
  427b0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b0b:	push   0x28
  427b0d:	lock add DWORD PTR [eax],eax
  427b10:	mov    al,BYTE PTR [edx]
  427b12:	add    BYTE PTR [eax],al
  427b14:	mov    dh,0xb
  427b16:	xor    eax,0x57074dc1
  427b1b:	iret   
  427b1c:	fisttp WORD PTR [esi+0x49]
  427b1f:	pop    ds
  427b20:	xor    ecx,DWORD PTR ss:[esi-0x38684dce]
  427b27:	icebp  
  427b28:	pop    esp
  427b29:	sbb    DWORD PTR [ecx],edx
  427b2b:	pop    esp
  427b2c:	sbb    BYTE PTR ds:0xde2e7dd8,al
  427b32:	loope  0x427b59
  427b34:	mov    al,ds:0x5986402f
  427b39:	xor    edi,esp
  427b3b:	int3   
  427b3c:	in     al,dx
  427b3d:	pop    ecx
  427b3e:	lds    esi,FWORD PTR [ebx+0x1f]
  427b41:	scas   al,BYTE PTR es:[edi]
  427b42:	aam    0x70
  427b44:	(bad)  
  427b46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b49:	mov    cl,0xab
  427b4b:	pop    eax
  427b4c:	aas    
  427b4d:	jmp    0x8071c49e
  427b52:	xchg   BYTE PTR [esi],dh
  427b54:	jb     0x427ae8
  427b56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b57:	fsubrp st(2),st
  427b59:	dec    eax
  427b5a:	mov    bh,0xf8
  427b5c:	dec    esi
  427b5d:	aas    
  427b5e:	loopne 0x427b17
  427b60:	push   0xf7b63525
  427b65:	dec    esi
  427b66:	mov    ebx,0xe0e5555f
  427b6b:	xchg   sp,ax
  427b6d:	int3   
  427b6e:	mov    dl,0x6d
  427b70:	cmp    al,0xa0
  427b72:	add    bh,BYTE PTR [edx+0x13]
  427b75:	mov    ch,bl
  427b77:	dec    esi
  427b78:	dec    esp
  427b79:	and    DWORD PTR [esi+esi*8-0x4d],ebp
  427b7d:	sub    al,0x0
  427b7f:	push   esi
  427b80:	(bad)  
  427b81:	(bad)  
  427b82:	fcmovnb st,st(6)
  427b84:	mov    ebp,0xe92593bc
  427b89:	mov    bl,0x4f
  427b8b:	push   ss
  427b8c:	add    ebx,esi
  427b8e:	test   al,0x1d
  427b90:	dec    ebp
  427b91:	mov    bh,0x2c
  427b93:	je     0x427b7e
  427b95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b96:	jb     0x427b1d
  427b98:	sub    al,BYTE PTR [edx-0x43]
  427b9b:	fidiv  WORD PTR [eax]
  427b9d:	retf   0xb752
  427ba0:	mov    BYTE PTR [ecx+0xc],bh
  427ba3:	int3   
  427ba4:	je     0x427be8
  427ba6:	jnp    0x427be6
  427ba8:	sub    ah,ch
  427baa:	repnz clc 
  427bac:	jmp    FWORD PTR [eax]
  427bae:	pop    esi
  427baf:	and    cl,BYTE PTR [esi]
  427bb1:	fild   WORD PTR [eax+0x25]
  427bb4:	sub    DWORD PTR [edi],ebp
  427bb6:	push   ds
  427bb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427bb8:	inc    edx
  427bb9:	jle    0x427beb
  427bbb:	outs   dx,BYTE PTR ds:[esi]
  427bbc:	ins    DWORD PTR es:[edi],dx
  427bbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427bbe:	addr16 das 
  427bc0:	jbe    0x427c00
  427bc2:	jg     0x427bdd
  427bc4:	fs jbe 0x427bd0
  427bc7:	stc    
  427bc8:	add    esp,DWORD PTR [ebx+eiz*1]
  427bcb:	lahf   
  427bcc:	push   0x1734950a
  427bd1:	jbe    0x427bd7
  427bd3:	dec    ecx
  427bd4:	lods   eax,DWORD PTR ds:[esi]
  427bd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427bd6:	push   esp
  427bd7:	pop    ss
  427bd8:	fs imul ebx
  427bdb:	outs   dx,BYTE PTR ds:[esi]
  427bdc:	mov    ebp,DWORD PTR [ecx+0x15]
  427bdf:	ficom  DWORD PTR [ebp-0x14]
  427be2:	jno    0x427c05
  427be4:	jle    0x427c35
  427be6:	and    esp,DWORD PTR [ecx+0x71]
  427be9:	ret    0xc08e
  427bec:	test   DWORD PTR [eax],0x9d029e12
  427bf2:	aam    0xc8
  427bf4:	add    eax,0xf753ee6
  427bf9:	xor    BYTE PTR [esi+edx*2-0x55c1ffc1],ah
  427c00:	xor    edi,DWORD PTR [esi]
  427c02:	xchg   ecx,eax
  427c03:	push   eax
  427c04:	shl    BYTE PTR [esi],0x24
  427c07:	cmp    esi,DWORD PTR fs:[ecx+0x37cbf62e]
  427c0e:	fstp   QWORD PTR [eax]
  427c10:	maskmovq mm5,(bad)
  427c11:	imul   DWORD PTR [edi]
  427c13:	push   ds
  427c14:	lods   eax,DWORD PTR ds:[esi]
  427c15:	pusha  
  427c16:	push   esp
  427c17:	popa   
  427c18:	imul   ebx,DWORD PTR ds:0x555e9336,0x3e
  427c1f:	jp     0x427c6f
  427c21:	ds pop ss
  427c23:	or     ch,BYTE PTR [ebx-0x1a]
  427c26:	adc    DWORD PTR [ebx],ebx
  427c28:	add    eax,0xc3af02a6
  427c2d:	les    esp,FWORD PTR [edi-0x57582d0b]
  427c33:	mov    edi,ebp
  427c35:	push   ds
  427c36:	(bad)  
  427c37:	xchg   BYTE PTR [edx],cl
  427c39:	inc    eax
  427c3a:	mov    edi,0x1d9910e0
  427c3f:	mov    ch,0x96
  427c41:	sar    BYTE PTR [eax+0x3a],0x4a
  427c45:	pop    ds
  427c46:	and    DWORD PTR [ecx-0x4e],ebx
  427c49:	in     eax,dx
  427c4a:	les    esp,FWORD PTR [edx-0x2b297096]
  427c50:	enter  0x488,0xb4
  427c54:	shl    BYTE PTR [edi],cl
  427c56:	ret    0x41a4
  427c59:	arpl   WORD PTR [edi+0x208f6aae],bp
  427c5f:	xchg   DWORD PTR [esi],edx
  427c61:	popf   
  427c62:	and    al,BYTE PTR [edi+eiz*4+0x6e]
  427c66:	xchg   BYTE PTR [esi],dl
  427c68:	and    al,0x7c
  427c6a:	push   ebp
  427c6b:	imul   esi,DWORD PTR [edx-0x2ca7bb49],0x9d5850f3
  427c75:	(bad)  
  427c77:	fcom   DWORD PTR gs:[esi]
  427c7a:	mov    esi,0x973702a7
  427c7f:	dec    eax
  427c80:	pusha  
  427c81:	cld    
  427c82:	iret   
  427c83:	into   
  427c84:	in     eax,0xb4
  427c86:	movntps XMMWORD PTR [ecx],xmm1
  427c89:	adc    BYTE PTR [eax+0x23],al
  427c8c:	sbb    al,0xfa
  427c8e:	leave  
  427c8f:	jp     0x427ce7
  427c91:	call   0x332377b9
  427c96:	xor    ah,bh
  427c98:	scas   al,BYTE PTR es:[edi]
  427c99:	nop
  427c9a:	jae    0x427c24
  427c9c:	jbe    0x427c2f
  427c9e:	retf   0x1343
  427ca1:	xchg   ebp,eax
  427ca2:	and    eax,0xc1c6cf31
  427ca7:	pushf  
  427ca8:	pop    ds
  427ca9:	or     esp,DWORD PTR [ebx+0x78]
  427cac:	(bad)
  427caf:	and    al,0x16
  427cb1:	mul    BYTE PTR [edi-0x3b1be827]
  427cb7:	dec    esi
  427cb8:	xchg   esp,eax
  427cb9:	pop    ebx
  427cba:	pop    esp
  427cbb:	jns    0x427d37
  427cbd:	test   ecx,ebp
  427cbf:	jg     0x427d1f
  427cc1:	test   al,0xce
  427cc3:	loope  0x427c76
  427cc5:	fistp  WORD PTR [esi+0x4d]
  427cc8:	addr16 xor eax,0xc7817f0a
  427cce:	stos   BYTE PTR es:[edi],al
  427ccf:	cmp    esp,esi
  427cd1:	(bad)  [esi]
  427cd3:	into   
  427cd4:	scas   eax,DWORD PTR es:[edi]
  427cd5:	into   
  427cd6:	sub    BYTE PTR [edx+0x43],ah
  427cd9:	xchg   BYTE PTR [ebp-0x24],bh
  427cdc:	je     0x427c63
  427cde:	pop    ecx
  427cdf:	or     al,0x31
  427ce1:	lods   eax,DWORD PTR ds:[esi]
  427ce2:	repz sahf 
  427ce4:	dec    edx
  427ce5:	loope  0x427c6b
  427ce7:	mov    ebp,0x1b6b8508
  427cec:	xchg   ecx,eax
  427ced:	sar    BYTE PTR [eax],0xf4
  427cf0:	pop    ds
  427cf1:	sub    ebp,DWORD PTR [ebx]
  427cf3:	or     DWORD PTR [edx+0x15713de6],esi
  427cf9:	fcomp  DWORD PTR [esp+esi*1+0x43]
  427cfd:	call   0x9f77f006
  427d02:	dec    edx
  427d03:	jp     0x427cb9
  427d05:	leave  
  427d06:	jns    0x427c90
  427d08:	push   ebp
  427d09:	jno    0x427d75
  427d0b:	out    dx,eax
  427d0c:	dec    esi
  427d0d:	cld    
  427d0e:	les    edi,FWORD PTR [ebp+0xc]
  427d11:	addr16 loope 0x427d3b
  427d14:	mov    ch,0xdc
  427d16:	cmp    BYTE PTR [eax-0x6e],0x3c
  427d1a:	xchg   ebx,eax
  427d1b:	dec    esp
  427d1c:	ret    
  427d1d:	mul    DWORD PTR [esi+ebx*1+0x36]
  427d21:	xchg   esi,eax
  427d22:	aam    0xf8
  427d24:	sbb    dh,BYTE PTR [ecx-0x12534f07]
  427d2a:	(bad)  
  427d2b:	out    dx,eax
  427d2c:	dec    ebp
  427d2d:	lea    ecx,[edi+0xa]
  427d30:	daa    
  427d31:	push   esp
  427d32:	(bad)  
  427d33:	call   DWORD PTR [ecx]
  427d35:	mov    eax,ds:0xec51280
  427d3a:	cmp    ebx,esi
  427d3c:	mov    al,0xc1
  427d3e:	shl    BYTE PTR [edx],1
  427d40:	test   al,0x66
  427d42:	jg     0x427cee
  427d44:	shl    DWORD PTR [edx+0x516a5116],cl
  427d4a:	and    eax,0xff0d85c2
  427d4f:	cs retf 
  427d51:	lahf   
  427d52:	adc    ah,ah
  427d54:	or     al,0xc9
  427d56:	xor    BYTE PTR ds:0x9a6a,ch
  427d5b:	scas   al,BYTE PTR es:[edi]
  427d5c:	mov    esi,ebp
  427d5e:	sub    al,0x3a
  427d60:	dec    BYTE PTR [ebp+0x10]
  427d63:	push   ebx
  427d64:	sbb    BYTE PTR [ecx-0x38],dh
  427d67:	sub    al,0xbe
  427d69:	ret    
  427d6a:	cmp    eax,0x7123317d
  427d6f:	jo     0x427d14
  427d71:	outs   dx,DWORD PTR ds:[esi]
  427d72:	mov    ebx,0x4ad43656
  427d77:	in     al,0x33
  427d79:	and    DWORD PTR [edi],edi
  427d7b:	rol    ah,1
  427d7d:	and    eax,0xf4bf5e89
  427d82:	sub    edi,DWORD PTR [ebp+0x40]
  427d85:	xor    DWORD PTR [eax-0x799f7d5c],esp
  427d8b:	mov    ds:0x5fcd38c8,eax
  427d90:	stc    
  427d91:	out    dx,eax
  427d92:	jno    0x427da2
  427d94:	push   cs
  427d95:	add    al,0xf7
  427d97:	cmp    BYTE PTR [ebx+esi*1+0x12],ah
  427d9b:	scas   al,BYTE PTR es:[edi]
  427d9c:	fadd   st(1),st
	...
  427daa:	add    BYTE PTR [eax],al
  427dac:	call   0xdafe:0xfef82244
  427db3:	bound  di,DWORD PTR [eax-0x4b768b8b]
  427dba:	loope  0x427d43
  427dbc:	mov    dl,0xf2
  427dbe:	add    DWORD PTR [eax],eax
  427dc0:	mov    al,BYTE PTR [edx]
  427dc2:	add    BYTE PTR [eax],al
  427dc4:	test   DWORD PTR [ecx-0x4a],ecx
  427dc7:	inc    ebx
  427dc8:	mov    edi,0x8ddeaaee
  427dcd:	fisubr DWORD PTR [edx-0x1d0c4a27]
  427dd3:	into   
  427dd4:	clc    
  427dd5:	push   0xffffff93
  427dd7:	mov    esi,0xe94c87cd
  427ddc:	sub    al,0x76
  427dde:	retf   
  427ddf:	test   BYTE PTR [eax-0x515fc2f8],0x52
  427de6:	dec    eax
  427de7:	mov    esi,0x9d33bb4f
  427dec:	cmp    al,0x21
  427dee:	daa    
  427def:	in     eax,dx
  427df0:	mov    ah,ah
  427df2:	fsubp  st(5),st
  427df4:	jb     0x427e1f
  427df6:	push   ds
  427df7:	dec    ebx
  427df8:	push   edx
  427df9:	mov    BYTE PTR [ebp-0x25af851e],ch
  427dff:	xor    cl,BYTE PTR [ecx-0x79]
  427e02:	push   ecx
  427e03:	adc    BYTE PTR [ebp+0x717fe219],dl
  427e09:	jmp    0x565566f2
  427e0e:	and    ebx,ecx
  427e10:	fimul  DWORD PTR [ebx+0x4e68c1e9]
  427e16:	cmp    ebp,DWORD PTR [eax-0x25370f2b]
  427e1c:	(bad)  
  427e1d:	lods   al,BYTE PTR ds:[esi]
  427e1e:	icebp  
  427e1f:	retf   
  427e20:	int    0x87
  427e22:	fnstcw WORD PTR [edx-0x500db1a3]
  427e28:	daa    
  427e29:	pop    ds
  427e2a:	scas   al,BYTE PTR es:[edi]
  427e2b:	pop    ss
  427e2c:	jmp    0x427e29
  427e2e:	fcom   QWORD PTR [esi-0x556aef68]
  427e34:	imul   ebx,DWORD PTR [edi+0x35],0x82cbab1b
  427e3b:	push   0x61b97ebe
  427e40:	xor    BYTE PTR [ecx],bl
  427e42:	jecxz  0x427e38
  427e44:	jne    0x427dd9
  427e46:	out    dx,al
  427e47:	in     eax,dx
  427e48:	push   cs
  427e49:	sti    
  427e4a:	jnp    0x427e56
  427e4c:	pushf  
  427e4d:	mov    ds:0xd0ce37a1,eax
  427e52:	add    dh,BYTE PTR [esi*1-0x7673c3]
  427e59:	dec    edx
  427e5a:	mov    ds:0x6aad2635,eax
  427e5f:	jns    0x427de3
  427e61:	dec    esp
  427e62:	jmp    0x427dfa
  427e64:	and    al,0xf6
  427e66:	cmp    al,0x67
  427e68:	es pop esi
  427e6a:	adc    al,ch
  427e6c:	cmp    BYTE PTR [esi],bh
  427e6e:	rcr    edx,cl
  427e70:	add    esi,0x17
  427e73:	jle    0x427e05
  427e75:	dec    eax
  427e76:	push   0x91e51722
  427e7b:	sub    ecx,DWORD PTR [edi+0x39ebaae]
  427e81:	xchg   edi,eax
  427e82:	push   ds
  427e83:	sahf   
  427e84:	adc    eax,edx
  427e86:	xor    DWORD PTR [ebx],0xc4536cf4
  427e8c:	cmp    ebx,DWORD PTR [esp+eax*2-0x72]
  427e90:	out    0x43,eax
  427e92:	dec    esi
  427e93:	jge    0x427eca
  427e95:	cmp    al,0x45
  427e97:	je     0x427eae
  427e99:	xchg   ebx,eax
  427e9a:	mov    ds:0x82d6fdaf,eax
  427e9f:	sbb    esi,DWORD PTR [edx-0x1c]
  427ea2:	xchg   esi,eax
  427ea3:	push   ss
  427ea4:	repz ret 
  427ea6:	dec    ecx
  427ea7:	and    ecx,eax
  427ea9:	xchg   esi,eax
  427eaa:	adc    edi,DWORD PTR [eax-0x33]
  427ead:	add    BYTE PTR [ecx+0x6bea43bf],bh
  427eb3:	jns    0x427e74
  427eb5:	in     eax,dx
  427eb6:	clc    
  427eb7:	dec    edi
  427eb8:	rcr    DWORD PTR [edx-0x53],0x99
  427ebc:	inc    ebx
  427ebd:	push   ebp
  427ebe:	pusha  
  427ebf:	jmp    0x427e72
  427ec1:	dec    ebp
  427ec2:	cmp    bl,BYTE PTR [edi+ebx*4]
  427ec5:	hlt    
  427ec6:	push   ecx
  427ec7:	add    bl,BYTE PTR [eax+0x0]
  427eca:	dec    eax
  427ecb:	dec    esp
  427ecc:	inc    esp
  427ecd:	nop    DWORD PTR [ebx+0x689b23b8]
  427ed4:	lods   al,BYTE PTR ds:[esi]
  427ed5:	pop    ss
  427ed6:	mov    edx,DWORD PTR ds:0xeed3e1c8
  427edc:	inc    BYTE PTR [ebx-0x2a]
  427edf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ee0:	ins    BYTE PTR es:[edi],dx
  427ee1:	sbb    dh,BYTE PTR [esp+esi*2-0x6b]
  427ee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ee6:	mov    ecx,0x72b9b180
  427eeb:	pop    ebx
  427eec:	adc    eax,0x287ee93a
  427ef1:	sub    DWORD PTR [ecx],ebp
  427ef3:	std    
  427ef4:	cli    
  427ef5:	and    esi,DWORD PTR [bx+di+0x6b]
  427ef9:	push   DWORD PTR [edx-0x494d0c76]
  427eff:	int3   
  427f00:	jae    0x427f28
  427f02:	or     esi,edi
  427f04:	rcr    BYTE PTR [ebp-0x73fee48e],0x87
  427f0b:	and    ah,BYTE PTR [edi+0x7f3c02ee]
  427f11:	dec    edi
  427f12:	(bad)  
  427f13:	(bad)  
  427f14:	inc    ebp
  427f15:	in     eax,dx
  427f16:	out    dx,eax
  427f17:	retf   
  427f18:	push   cs
  427f19:	ja     0x427f40
  427f1b:	cdq    
  427f1c:	push   cs
  427f1d:	inc    edi
  427f1e:	cmp    ecx,ecx
  427f20:	jno    0x427eaa
  427f22:	sub    ebp,DWORD PTR [edx+0x2d19d51d]
  427f28:	and    BYTE PTR [ecx],0xd
  427f2b:	mov    ch,0x6f
  427f2d:	xor    eax,0xa9e1387
  427f32:	pop    edx
  427f33:	es push ecx
  427f35:	xor    esi,esp
  427f37:	(bad)  
  427f38:	lods   eax,DWORD PTR cs:[esi]
  427f3a:	push   ds
  427f3b:	mov    edx,0x8be90711
  427f40:	stc    
  427f41:	ds icebp 
  427f43:	out    dx,al
  427f44:	aad    0x18
  427f46:	dec    ebx
  427f47:	and    BYTE PTR [esi-0x66],cl
  427f4a:	push   ecx
  427f4b:	and    esp,DWORD PTR [ebx+0x28]
  427f4e:	repnz in al,dx
  427f50:	dec    esi
  427f51:	jns    0x427ef7
  427f53:	mov    bl,0x4c
  427f55:	mul    DWORD PTR [ebx+0x12]
  427f58:	les    esi,FWORD PTR [eax]
  427f5a:	mov    ch,0xd1
  427f5c:	clc    
  427f5d:	xchg   ecx,eax
  427f5e:	in     al,0x7d
  427f60:	ffreep st(4)
  427f62:	mov    ebp,0x2a0a6d13
  427f67:	mov    ds:0x3b86bcf1,al
  427f6c:	dec    edi
  427f6d:	jecxz  0x427f89
  427f6f:	jno    0x427f33
  427f71:	in     eax,0x94
  427f73:	mov    ebp,ebx
  427f75:	xlat   BYTE PTR ds:[ebx]
  427f76:	aad    0xa8
  427f78:	(bad)  
  427f7a:	fcmovnu st,st(1)
  427f7c:	dec    esp
  427f7d:	sti    
  427f7e:	fimul  WORD PTR [ecx+0x6db722e2]
  427f84:	pop    ds
  427f85:	push   edi
  427f86:	pop    ss
  427f87:	clc    
  427f88:	push   ecx
  427f89:	(bad)  
  427f8a:	fbstp  TBYTE PTR [ebx-0x3b5da27c]
  427f90:	dec    ebp
  427f91:	pop    edi
  427f92:	(bad)  
  427f93:	and    eax,0xa5a92653
  427f98:	fnsave [eax]
  427f9a:	xchg   edx,eax
  427f9b:	enter  0x814b,0x89
  427f9f:	xchg   DWORD PTR [ebx],ebx
  427fa1:	fsubp  st(5),st
  427fa3:	popf   
  427fa4:	inc    edi
  427fa5:	sbb    BYTE PTR [esi],0x7c
  427fa8:	imul   edi,DWORD PTR [edx-0x5d],0x8093f485
  427faf:	test   ebp,edi
  427fb1:	cdq    
  427fb2:	pusha  
  427fb3:	xchg   edi,eax
  427fb4:	les    esi,FWORD PTR [edi+0x167fff1a]
  427fba:	(bad)  
  427fbb:	ror    BYTE PTR [ebx],1
  427fbd:	mov    ds:0xdaf6de15,eax
  427fc2:	call   0x9cec:0xbdfb340
  427fc9:	xor    eax,DWORD PTR [ebx]
  427fcb:	cwde   
  427fcc:	imul   esi,DWORD PTR [edi-0x2b990d80],0xffffffc7
  427fd3:	push   cs
  427fd4:	cmp    ebp,DWORD PTR [esp+ebx*8-0x7b]
  427fd8:	mov    dh,0x80
  427fda:	pop    ebx
  427fdb:	sub    esp,ecx
  427fdd:	enter  0x3e16,0xef
  427fe1:	add    eax,0x8c7a56c9
  427fe6:	mov    esp,0xf5d4cc40
  427feb:	inc    eax
  427fec:	jmp    0xd845748b
  427ff1:	mov    cl,0x91
  427ff3:	jg     0x427fb9
  427ff5:	sub    BYTE PTR [ebp+eax*1-0x1b],0xd0
  427ffa:	dec    edi
  427ffb:	mul    DWORD PTR [ecx]
  427ffd:	or     BYTE PTR [eax-0x1e],dl
  428000:	cmp    DWORD PTR [eax],eax
  428002:	inc    edx
  428003:	jmp    0xf3dc:0xcf97c8b
  42800a:	dec    eax
  42800b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42800c:	rcl    BYTE PTR [ebx-0x388f24d],cl
  428012:	or     dh,cl
  428014:	cmp    ch,BYTE PTR [ecx+0xf]
  428017:	mov    eax,ds:0xd605a221
  42801c:	(bad)  
  42801e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42801f:	fwait
  428020:	clc    
  428021:	scas   eax,DWORD PTR es:[edi]
  428022:	ror    BYTE PTR [edi+0x69],cl
  428025:	scas   al,BYTE PTR es:[edi]
  428026:	mov    esp,0x35157d1
  42802b:	addr16 pop edi
  42802d:	add    dh,BYTE PTR [ecx+0x2e37a0dd]
  428033:	pop    edi
  428034:	lea    eax,[edx]
  428036:	xchg   DWORD PTR [ebx-0xc288097],ebp
  42803c:	push   edx
  42803d:	mov    al,0xdb
  42803f:	adc    BYTE PTR [edi-0x612509a9],bh
  428045:	in     al,0xcc
  428047:	ret    0x379a
  42804a:	cwde   
  42804b:	xchg   ecx,eax
  42804c:	(bad)  
  42804d:	fild   DWORD PTR [eax]
	...
  42805b:	add    BYTE PTR [eax+0x3fc326ab],dl
  428061:	iret   
  428062:	cmc    
  428063:	sti    
  428064:	pushf  
  428065:	ds loop 0x428054
  428068:	sahf   
  428069:	shr    BYTE PTR [eax+0x1f53cc2],1
  42806f:	add    BYTE PTR [edx-0x4efffffe],cl
  428075:	cmp    eax,0x732e6f90
  42807a:	fs cmp al,0x87
  42807d:	dec    ebx
  42807e:	out    dx,eax
  42807f:	loop   0x428052
  428081:	inc    edx
  428082:	or     eax,0xe83f417c
  428087:	dec    edx
  428088:	jne    0x42801e
  42808a:	add    al,0x9d
  42808c:	test   al,0x47
  42808e:	int    0xba
  428090:	cmp    al,0xc7
  428092:	lods   al,BYTE PTR ds:[esi]
  428093:	jl     0x428019
  428095:	icebp  
  428096:	(bad)  
  428097:	fdiv   st(2),st
  428099:	xchg   esi,eax
  42809a:	out    0x5b,al
  42809c:	aad    0xb9
  42809e:	jnp    0x4280eb
  4280a0:	stc    
  4280a1:	push   ebx
  4280a2:	and    eax,0xa679f6f4
  4280a7:	pop    ds
  4280a8:	mov    ebp,0xd7a28292
  4280ad:	pop    ecx
  4280ae:	jb     0x42806e
  4280b0:	pop    ss
  4280b1:	pop    es
  4280b2:	cmp    al,0xaa
  4280b4:	and    edx,DWORD PTR [edi-0x6e3fa6e7]
  4280ba:	scas   eax,DWORD PTR es:[edi]
  4280bb:	mov    esi,0x3c59cbfb
  4280c0:	dec    eax
  4280c1:	and    esi,DWORD PTR [eax-0x1]
  4280c4:	retf   
  4280c5:	xchg   edi,eax
  4280c6:	or     ch,BYTE PTR [ebx+ebp*2]
  4280c9:	ror    BYTE PTR [eax-0x37f289dc],cl
  4280cf:	aam    0xf3
  4280d1:	or     eax,0x34761bff
  4280d6:	jb     0x4280f4
  4280d8:	ret    0x660c
  4280db:	mov    ebp,0x993e0bf6
  4280e0:	std    
  4280e1:	push   edi
  4280e2:	xor    al,BYTE PTR [eax+0x5c071fe9]
  4280e8:	aaa    
  4280e9:	or     BYTE PTR [eax+0x69],bh
  4280ec:	mov    BYTE PTR [edi-0x587a2dd4],bh
  4280f2:	sbb    eax,DWORD PTR ds:0x6f6393b1
  4280f8:	stos   DWORD PTR es:[edi],eax
  4280f9:	repz frstor [esi+0x46]
  4280fd:	sub    esp,DWORD PTR [edx-0x63ce1389]
  428103:	in     eax,0x94
  428105:	jnp    0x4280f0
  428107:	ins    BYTE PTR es:[edi],dx
  428108:	sahf   
  428109:	jmp    0x428163
  42810b:	or     al,0x2f
  42810d:	mov    esi,0x4bdb7bd6
  428112:	fwait
  428113:	pop    esi
  428114:	jp     0x428168
  428116:	mov    BYTE PTR [edi+0x52],0x3
  42811a:	and    BYTE PTR [ebp+0x69],ah
  42811d:	add    ebx,esp
  42811f:	xchg   ebp,eax
  428120:	cmp    ebp,DWORD PTR [ecx]
  428122:	add    al,0xc7
  428124:	cdq    
  428125:	pop    eax
  428126:	out    0x95,al
  428128:	mov    ebp,0x4cd6e048
  42812d:	div    DWORD PTR [eax+0x5c792f2c]
  428133:	loopne 0x4280f3
  428135:	sti    
  428136:	mov    gs,WORD PTR [edx-0x56]
  428139:	cdq    
  42813a:	mov    edx,0x773fe8ac
  42813f:	mov    esi,0xb50ecd69
  428144:	retf   0xcd16
  428147:	push   ecx
  428148:	data16 fst QWORD PTR fs:[ebx+ebp*1+0x4191597f]
  428151:	cmp    edx,edi
  428153:	scas   al,BYTE PTR es:[edi]
  428154:	fmul   st(0),st
  428156:	leave  
  428157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428158:	xor    BYTE PTR [edx+0x15dcd104],0x10
  42815f:	sub    eax,0x364407cd
  428164:	xor    cl,BYTE PTR [esi-0x28d8fd15]
  42816a:	stos   BYTE PTR es:[edi],al
  42816b:	imul   esp,ecx,0x6e
  42816e:	push   esi
  42816f:	lock xor esp,DWORD PTR [ebp+0x7f49944]
  428176:	das    
  428177:	adc    eax,0x9138af06
  42817c:	sbb    al,0xd3
  42817e:	jbe    0x428168
  428180:	lds    esi,FWORD PTR [eax]
  428182:	xor    DWORD PTR [eax],ecx
  428184:	pop    esi
  428185:	pop    ss
  428186:	jne    0x428114
  428188:	xchg   edx,eax
  428189:	std    
  42818a:	mov    DWORD PTR cs:[ecx+edi*8-0x191081b0],edi
  428192:	xchg   esi,eax
  428193:	ja     0x4281be
  428195:	mov    fs,esi
  428197:	or     BYTE PTR [edx+0x1f],0xeb
  42819b:	mov    eax,ds:0x9ae0c1fd
  4281a0:	neg    esp
  4281a2:	ins    DWORD PTR es:[edi],dx
  4281a3:	mov    eax,ds:0x2d1dbe87
  4281a8:	mov    dl,0xa3
  4281aa:	jns    0x428133
  4281ac:	aas    
  4281ad:	jle    0x428202
  4281af:	pushf  
  4281b0:	pop    eax
  4281b1:	std    
  4281b2:	xchg   esi,eax
  4281b3:	pop    ss
  4281b4:	xchg   edi,eax
  4281b5:	pop    esi
  4281b6:	shr    ah,1
  4281b8:	dec    esp
  4281b9:	push   esi
  4281ba:	inc    ecx
  4281bb:	add    bh,BYTE PTR [edi]
  4281bd:	xchg   esp,eax
  4281be:	je     0x4281c6
  4281c0:	cmp    al,ch
  4281c2:	sub    eax,0x9af1a0ac
  4281c7:	out    0x2c,al
  4281c9:	mov    DWORD PTR [ecx],ebx
  4281cb:	shl    bh,1
  4281cd:	stos   DWORD PTR es:[edi],eax
  4281ce:	call   0x9e55c17
  4281d3:	push   ss
  4281d4:	loopne 0x428217
  4281d6:	sbb    eax,0xd66c5899
  4281db:	pop    ds
  4281dc:	xor    DWORD PTR [edx-0x15],edx
  4281df:	mov    DWORD PTR [ebp+0x7f],0x876388eb
  4281e6:	addr16 int3 
  4281e8:	xor    ecx,DWORD PTR [eax+edi*2+0x2eb1349b]
  4281ef:	cmp    DWORD PTR [eax-0x7c],ecx
  4281f2:	sub    al,0xec
  4281f4:	int3   
  4281f5:	jns    0x428199
  4281f7:	mov    ds:0x2ac25e04,eax
  4281fc:	out    dx,eax
  4281fd:	fadd   st(6),st
  4281ff:	fmul   DWORD PTR fs:[eax+0x44]
  428203:	dec    ecx
  428204:	test   ebp,esp
  428206:	sti    
  428207:	cmp    bl,BYTE PTR [ecx]
  428209:	sbb    ch,BYTE PTR [ecx]
  42820b:	push   es
  42820c:	sub    al,bh
  42820e:	loopne 0x42824b
  428210:	lahf   
  428211:	mov    eax,ds:0xf4e0d6c7
  428216:	pop    es
  428217:	pop    ebx
  428218:	add    DWORD PTR [ecx-0x3],edx
  42821b:	popa   
  42821c:	add    DWORD PTR [eax-0x26],ebp
  42821f:	push   cs
  428220:	cli    
  428221:	push   ds
  428222:	sub    cl,bh
  428224:	popa   
  428225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428226:	fidivr DWORD PTR [eax+0x40]
  428229:	jle    0x4281ed
  42822b:	rol    bh,1
  42822d:	cld    
  42822e:	shl    BYTE PTR [edi+0x4a],1
  428231:	fwait
  428232:	dec    ebx
  428233:	in     al,0x8c
  428235:	pop    esi
  428236:	gs sub al,0x3d
  428239:	inc    eax
  42823a:	fidiv  WORD PTR [ebp+0x6a]
  42823d:	adc    eax,0x61df8b6
  428242:	out    0xde,al
  428244:	xchg   ecx,eax
  428245:	enter  0x212e,0x7d
  428249:	xlat   BYTE PTR fs:[ebx]
  42824b:	repz aas 
  42824d:	ds retf 
  42824f:	inc    edi
  428250:	fdivr  QWORD PTR [edi+0x1d975c4a]
  428256:	mov    esp,0x48a9c2b1
  42825b:	lods   al,BYTE PTR ds:[esi]
  42825c:	cmp    DWORD PTR [eax+0x1a5131ce],esp
  428262:	xchg   edx,eax
  428263:	mov    BYTE PTR [ecx],al
  428265:	sub    DWORD PTR [esi+0xc417ab1],0xf
  42826c:	mov    DWORD PTR [ebx+0x6],ebp
  42826f:	jnp    0x428270
  428271:	mov    ecx,0x669d1f1f
  428276:	mov    ebx,0xd2ef96b2
  42827b:	neg    DWORD PTR [esi]
  42827d:	or     BYTE PTR [ebp-0x7c147e92],ch
  428283:	aad    0x5b
  428285:	xchg   edi,eax
  428286:	inc    eax
  428287:	repz mov edx,DWORD PTR ds:0x56ccd211
  42828e:	aam    0x1f
  428290:	or     al,ah
  428292:	inc    esp
  428293:	dec    edi
  428294:	sbb    BYTE PTR [esi-0x64e0d4c8],cl
  42829a:	sti    
  42829b:	jg     0x4282d1
  42829d:	push   cs
  42829e:	mov    ebp,0xdfa7b93a
  4282a3:	mov    ebx,0x4d5b540b
  4282a8:	(bad)  
  4282a9:	sbb    dh,ah
  4282ab:	adc    BYTE PTR [edi],al
  4282ad:	out    0x64,al
  4282af:	and    edi,DWORD PTR [ecx-0x4f]
  4282b2:	add    ch,ah
  4282b4:	js     0x4282be
  4282b6:	ret    
  4282b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282b8:	sti    
  4282b9:	nop
  4282ba:	pop    es
  4282bb:	inc    edx
  4282bc:	pop    es
  4282bd:	shr    BYTE PTR [ebp+0x747d3a03],cl
  4282c3:	dec    ebx
  4282c4:	js     0x4282b9
  4282c6:	cmp    eax,0x6df70f2b
  4282cb:	xchg   DWORD PTR [esp+ebp*2-0x66],ebp
  4282cf:	mov    cl,0x2a
  4282d1:	xchg   esi,eax
  4282d2:	push   edx
  4282d3:	cmp    bh,BYTE PTR [edx]
  4282d5:	leave  
  4282d6:	lods   eax,DWORD PTR ds:[esi]
  4282d7:	push   esp
  4282d9:	push   ebx
  4282da:	xlat   BYTE PTR ds:[ebx]
  4282db:	mov    ebx,0x632bb7f3
  4282e0:	scas   al,BYTE PTR es:[edi]
  4282e1:	sub    DWORD PTR [esp+esi*2-0x1a649d43],0xffffffa1
  4282e9:	das    
  4282ea:	fild   DWORD PTR [ecx-0x30]
  4282ed:	cld    
  4282ee:	pushf  
  4282ef:	add    ch,dl
  4282f1:	dec    esp
  4282f2:	inc    ecx
  4282f3:	jo     0x42831c
  4282f5:	(bad)  
  4282f7:	ins    DWORD PTR es:[edi],dx
  4282f8:	aad    0x9c
  4282fa:	push   edx
  4282fb:	dec    ebp
  4282fc:	rcl    dh,1
	...
  42830a:	add    BYTE PTR [eax],al
  42830c:	std    
  42830d:	cmp    DWORD PTR ds:0xfd1cf514,esi
  428313:	stc    
  428314:	int    0xea
  428316:	xor    al,al
  428318:	inc    BYTE PTR [edx]
  42831a:	xor    eax,DWORD PTR [edi]
  42831c:	(bad)  
  42831d:	test   DWORD PTR [ecx],0x28000
  428323:	add    BYTE PTR [edi-0x11],ch
  428326:	dec    edi
  428327:	mov    bl,0xff
  428329:	cmp    edx,ebp
  42832b:	cmc    
  42832c:	(bad)  
  42832d:	sbb    eax,0x5f381211
  428332:	cmp    DWORD PTR [ecx-0x3dc0d825],eax
  428338:	ficom  WORD PTR [edx]
  42833a:	cmp    eax,0xd634583
  42833f:	mov    dl,0xe9
  428341:	cdq    
  428342:	cmp    BYTE PTR [eax+0x4],ch
  428345:	nop
  428346:	icebp  
  428347:	aad    0xef
  428349:	mov    bh,0x18
  42834b:	xchg   BYTE PTR [ebx],dh
  42834d:	lds    esp,FWORD PTR [ebp-0x67]
  428350:	mov    bh,ch
  428352:	fcomp  st(6)
  428354:	xchg   ecx,eax
  428355:	mov    DWORD PTR [ebx-0x6e77efac],edx
  42835b:	jg     0x42838a
  42835d:	inc    ebx
  42835e:	add    ecx,esi
  428360:	dec    esi
  428361:	jb     0x42837c
  428363:	loopne 0x42832a
  428365:	cmp    dh,BYTE PTR [ecx]
  428367:	xchg   ebp,eax
  428368:	xchg   esp,eax
  428369:	xor    BYTE PTR [ecx-0x3c],cl
  42836c:	xor    esp,DWORD PTR [eax-0x3cd90421]
  428372:	add    DWORD PTR [edi+0x27f7eee2],eax
  428378:	jge    0x42838b
  42837a:	pop    esp
  42837b:	cwde   
  42837c:	data16 sti 
  42837e:	mov    ds:0x5946597a,eax
  428383:	mov    edx,es
  428385:	in     eax,dx
  428386:	or     ebx,eax
  428388:	jae    0x428387
  42838a:	retf   0x2f4c
  42838d:	(bad)
  428390:	ret    0x49b4
  428393:	scas   al,BYTE PTR es:[edi]
  428394:	mov    al,ah
  428396:	retf   0x12b4
  428399:	jmp    DWORD PTR [edx+0x28]
  42839c:	lods   eax,DWORD PTR ds:[esi]
  42839d:	inc    ebx
  42839e:	addr16 push edi
  4283a0:	dec    ebp
  4283a1:	or     DWORD PTR ds:0xe52a505a,ecx
  4283a7:	scas   eax,DWORD PTR es:[edi]
  4283a8:	mov    dh,0xc7
  4283aa:	in     eax,0xad
  4283ac:	cmc    
  4283ad:	pop    edx
  4283ae:	inc    eax
  4283af:	xor    ax,0xc75c
  4283b3:	(bad)  
  4283b4:	xor    ch,BYTE PTR [ecx]
  4283b6:	mov    DWORD PTR [edx+0x45],eax
  4283b9:	sub    dh,dh
  4283bb:	scas   eax,DWORD PTR es:[edi]
  4283bc:	int    0x3
  4283be:	jl     0x42838a
  4283c0:	adc    eax,DWORD PTR [edi]
  4283c2:	mov    ebx,0x4a583f3a
  4283c7:	and    BYTE PTR [ebp+0x4f9bb767],bh
  4283cd:	xchg   esp,eax
  4283ce:	pop    es
  4283cf:	mov    ah,0xac
  4283d1:	sub    BYTE PTR [edi-0x64826d7c],al
  4283d7:	int    0xe9
  4283d9:	mov    ebx,0xa01f2e6a
  4283de:	arpl   WORD PTR [edx+eiz*4+0x16],bp
  4283e2:	and    eax,0x7bb29381
  4283e7:	arpl   WORD PTR [edi-0x24f97a4a],di
  4283ed:	inc    ebx
  4283ee:	mov    ebp,0xede1a95e
  4283f3:	jmp    0x8acb:0xf7b70961
  4283fa:	push   ecx
  4283fb:	(bad)  
  4283fc:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283fe:	pop    ss
  4283ff:	hlt    
  428400:	jmp    0x42840f
  428402:	pop    edi
  428403:	cwde   
  428404:	mov    ebp,0x4df7aeb2
  428409:	add    DWORD PTR [edx-0x4fe555f0],esi
  42840f:	add    BYTE PTR [bp+di-0x3c],0x5f
  428414:	xor    ah,bl
  428416:	stos   DWORD PTR es:[edi],eax
  428417:	inc    edi
  428418:	pop    esi
  428419:	lock in al,0x5
  42841c:	xor    eax,0x69017028
  428421:	je     0x428406
  428423:	cli    
  428424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428425:	nop
  428426:	cmp    edi,eax
  428428:	adc    ah,BYTE PTR [ebp+0x483e0f6e]
  42842e:	fstp   DWORD PTR [edx+0x628cf055]
  428434:	xchg   esp,eax
  428435:	mov    ds:0xd6e87536,eax
  42843a:	in     ax,dx
  42843c:	in     al,dx
  42843d:	sub    eax,0xf56e9168
  428442:	addr16 xor ch,cl
  428445:	push   edx
  428446:	mov    eax,ds:0xaef5dc9d
  42844b:	fbstp  TBYTE PTR [ebx-0x4371f67]
  428451:	inc    ebp
  428452:	aas    
  428453:	in     al,0x5f
  428455:	sbb    DWORD PTR [eax+0x26c05297],edi
  42845b:	mov    dl,0x54
  42845d:	xor    edi,DWORD PTR [esi-0x53]
  428460:	lahf   
  428461:	jmp    0xb309:0x20e90998
  428468:	mov    bl,BYTE PTR [ecx-0x7cf5d73a]
  42846e:	pop    ecx
  42846f:	loope  0x4284d8
  428471:	lds    eax,FWORD PTR ds:0x1ee9fcb2
  428477:	jne    0x428469
  428479:	scas   eax,DWORD PTR es:[edi]
  42847a:	pop    esp
  42847b:	out    dx,eax
  42847c:	inc    edi
  42847d:	jnp    0x42843c
  42847f:	ins    BYTE PTR es:[edi],dx
  428480:	sub    eax,DWORD PTR [eax-0x1]
  428483:	xchg   edx,eax
  428484:	test   eax,0xc2035087
  428489:	lahf   
  42848a:	fld    st(4)
  42848c:	dec    eax
  42848d:	push   cs
  42848e:	push   ecx
  42848f:	fidivr DWORD PTR [ebp+0x4a]
  428492:	and    BYTE PTR [edi-0x54],cl
  428495:	adc    eax,0xc6a08217
  42849a:	out    dx,al
  42849b:	lea    esi,[ebx]
  42849d:	shl    BYTE PTR [edx],0x12
  4284a0:	pop    esp
  4284a1:	or     BYTE PTR [ecx+0x520219aa],bl
  4284a7:	pop    ebx
  4284a8:	bound  esi,QWORD PTR ds:0xbc1e8f5d
  4284ae:	inc    edi
  4284af:	in     eax,0xcd
  4284b1:	mov    bh,ch
  4284b3:	sar    DWORD PTR [ebp+0x3900aaba],cl
  4284b9:	mov    edi,0x54ade133
  4284be:	gs mov ch,0xba
  4284c1:	xchg   ecx,eax
  4284c2:	push   ecx
  4284c3:	cmc    
  4284c4:	in     eax,0x52
  4284c6:	fdivr  st,st(6)
  4284c8:	out    0x45,eax
  4284ca:	add    al,0x3a
  4284cc:	cdq    
  4284cd:	adc    eax,DWORD PTR [eax]
  4284cf:	aam    0xce
  4284d1:	and    BYTE PTR [ecx+0x77a5bf1e],cl
  4284d7:	xchg   BYTE PTR [ecx+eiz*1],ch
  4284da:	xchg   esi,eax
  4284db:	shl    DWORD PTR [edi-0x27],0xb8
  4284df:	setnp  BYTE PTR [ebp-0x707912a7]
  4284e6:	dec    esi
  4284e7:	mov    ecx,0x82ee851a
  4284ec:	jecxz  0x4284fd
  4284ee:	pop    es
  4284ef:	xor    eax,0xf5094a21
  4284f4:	fdivr  QWORD PTR [edx+0x20a5fe2b]
  4284fa:	fdiv   DWORD PTR [ebp+edx*4-0x2b34af3e]
  428501:	mov    bl,0xdb
  428503:	aaa    
  428504:	and    BYTE PTR [edi+edi*2-0xf6e03b6],bh
  42850b:	fsub   QWORD PTR ds:0x6689cff4
  428511:	adc    esi,edx
  428513:	mov    ah,0xdc
  428515:	ficom  WORD PTR [ebp+0x3e02900d]
  42851b:	(bad)  
  42851c:	push   esp
  42851d:	scas   eax,DWORD PTR es:[edi]
  42851e:	outs   dx,BYTE PTR ds:[esi]
  42851f:	rcl    esp,0x82
  428522:	std    
  428523:	and    eax,0x6d61daa
  428528:	mov    eax,0x6faf8d43
  42852d:	ss frstpm(287 only) 
  428530:	inc    edi
  428531:	fldcw  WORD PTR [eax]
  428533:	iret   
  428534:	sbb    al,BYTE PTR [ecx]
  428536:	mov    ds:0x82bba671,al
  42853b:	adc    edx,DWORD PTR [esi+0x5021ecab]
  428541:	daa    
  428542:	leave  
  428543:	and    esi,ebp
  428545:	mov    ecx,0xf97cf788
  42854a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42854b:	xchg   DWORD PTR [edx+0x2d981219],edx
  428551:	pop    ecx
  428552:	push   ebp
  428553:	shl    DWORD PTR [edi+0xe],1
  428556:	or     bh,BYTE PTR [esi]
  428558:	adc    dh,BYTE PTR [ebp+0x48]
  42855b:	sahf   
  42855c:	les    ebp,FWORD PTR [eax+0x7a16235b]
  428562:	ins    BYTE PTR es:[edi],dx
  428563:	xchg   esi,eax
  428564:	in     eax,0xe6
  428566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428567:	sbb    eax,0x2ecc8022
  42856c:	pop    ss
  42856d:	repnz mov ds:0x97c12103,al
  428573:	(bad)  
  428574:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428575:	and    al,0x2e
  428577:	adc    al,0xb3
  428579:	pop    esp
  42857a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42857b:	out    dx,eax
  42857c:	popa   
  42857d:	fwait
  42857e:	dec    ecx
  42857f:	lock test al,0x87
  428582:	imul   eax,DWORD PTR [ebx-0x2e1d810e],0xffffffa8
  428589:	add    al,0xa4
  42858b:	fs and al,0xac
  42858e:	and    eax,0xc2bddda8
  428593:	arpl   dx,dx
  428595:	xchg   esi,eax
  428596:	ss std 
  428598:	shr    DWORD PTR [eax],cl
  42859a:	stc    
  42859b:	imul   BYTE PTR [edi-0x1b]
  42859e:	mov    edx,DWORD PTR [edx-0x45]
  4285a1:	xchg   BYTE PTR [ebx+0x6],bl
	...
